sbb
add
mov
dec
test
les
dec
stc
aas
xchg
pop
push
in
push
sub
mov
adc
xor
mov
and
arpl
ljmp
dec
cld
sub
mov
fisubl
cs
popa
out
bnd
and
pop
cs
lods
repnz
and
pop
in
jo
xchg
aad
cmc
loopne
mov
lea
xchg
cld
rolb
pop
scas
mov
gs
or
push
jno
or
dec
add
pop
jp
pushl
testl
hlt
fimull
mov
notb
xchg
inc
adc
or
mov
movsb
mov
jg
sbb
jns
cmp
int
push
sarl
dec
jp
lods
inc
jb
pushf
cmp
mov
jnp
mov
dec
dec
and
pusha
mov
pop
mov
mov
mov
xchg
ljmp
stos
stc
test
outsl
dec
xor
pop
cmpl
xor
xchg
mov
bound
xor
ss
aaa
cwtl
shl
insl
cmp
cmpsb
jmp
aam
das
and
lods
jns
xchg
stos
jmp
loop
call
jo
ret
ret
aas
xchg
insl
sbb
sub
shlb
popa
jg
pop
push
sbb
inc
es
repz
ficoml
adc
scas
lret
mov
push
out
loopne
lds
addr16
out
cmpsb
mov
add
or
int
dec
dec
test
mov
clc
fisubrs
lods
mov
inc
int
and
in
sbb
test
outsl
push
scas
in
jg
cmp
pop
push
mov
in
in
sub
pop
jb
loop
sbb
lods
sbb
imulb
bound
out
push
in
rolb
insl
rolb
pop
outsb
movsb
sahf
ljmp
scas
rcrl
push
mov
out
lods
and
sbb
xor
leave
ljmp
pslld
cmp
push
rolb
stos
setb
sub
cld
jb
aam
cltd
lods
xchg
mov
sbb
subb
mov
sahf
notl
xchg
xlat
fnstsw
mov
pop
movsb
mov
test
test
dec
imul
inc
les
sub
sub
sbb
cmp
shlb
xor
lcall
xchg
push
orb
ret
fldt
add
lcall
push
xchg
cmpb
cmp
pop
jns
aad
add
sub
lock
loop
and
xchg
jo,pn
outsl
shl
aam
leave
fisubl
mov
dec
cmp
fldenv
xor
xchg
mov
pop
out
in
pop
loop
js
lahf
lock
dec
jp
add
push
fwait
repnz
scas
and
clc
fwait
add
fwait
sub
shrb
mov
sub
rcrb
in
addr16
xbegin
sub
push
xor
call
mov
rorb
xchg
sbb
aad
scas
mov
les
fadds
test
inc
ret
and
mov
shll
sbb
add
push
cmc
dec
mov
push
test
outsb
cmp
mov
push
pop
jmp
fsubrl
loop
in
cmp
adc
test
std
std
mov
cmp
pop
in
xchg
xor
icebp
push
cmc
sub
inc
aas
mov
sahf
pop
cmpsb
xchg
lock
fs
sub
lds
sub
loopne
sub
in
subb
aam
fstpl
jmp
xchg
sub
or
lods
arpl
inc
outsb
loope
mov
test
in
mov
adc
fs
dec
aam
mov
pop
jbe
insb
xor
xlat
movsb
data16
add
xchg
hlt
add
ret
jge
sub
xlat
addb
inc
stos
xchg
pop
roll
subl
fistpl
lds
dec
cs
in
mov
mov
arpl
fwait
out
mov
scas
test
jecxz
out
or
mov
stc
aas
xchg
push
dec
cmp
popa
int
pop
dec
into
pop
push
pop
push
push
es
jno
dec
sub
pop
fsub
mov
xchg
mov
in
aaa
sub
and
hlt
lret
mov
adc
push
sub
add
dec
xor
pop
dec
leave
shll
or
repnz
subl
dec
mov
movsb
jecxz
cmp
ret
sub
sbb
es
push
push
rcll
lods
dec
std
call
sbb
xchg
push
jmp
lds
add
or
pop
xchg
inc
and
je
dec
outsl
imul
arpl
cmpsl
dec
and
xor
jge
push
push
sub
in
push
cmp
lods
push
sbbb
lods
and
je
adc
fsubl
aam
mov
ss
inc
cmp
insb
test
mov
xor
pop
shr
mov
cmp
lret
lods
in
and
adc
les
fdivl
add
incb
or
out
dec
in
xchg
inc
jne
icebp
mov
cmp
mov
push
and
flds
sbb
inc
or
out
ds
insb
test
lds
adc
jg
leave
aas
cltd
out
into
dec
dec
imull
aas
sub
push
dec
or
mov
pop
in
mov
clc
lcall
out
pop
fs
dec
daa
mov
movsl
call
negl
mov
sub
hlt
jecxz
jg
shl
cmp
test
mov
loopw
loope
push
jae
sbb
add
sbb
imul
adc
xor
inc
pusha
jg
cwtl
pop
xchg
fldl
pop
push
es
pop
xlat
fcoms
loopne
and
daa
ror
aad
mov
mov
jmp
pop
pop
inc
mov
xor
cmp
pusha
call
test
or
je
mov
lods
mov
movb
fildll
mov
push
je
rcrb
out
xchg
push
movsb
pushf
into
aad
mov
xor
jp
jbe
add
stos
movsb
mov
cmp
xchg
pop
insl
pop
jnp
shr
xchg
add
fs
cli
aaa
mov
lret
iret
cwtl
inc
push
int
cmp
in
outsl
sbb
dec
iret
xorl
in
icebp
mov
enter
fisttpl
and
xchg
dec
push
imull
daa
jecxz
xchg
adc
sub
xchg
jg
inc
cmpsl
and
push
inc
push
inc
cmp
testl
lods
call
aam
popa
mov
add
mov
orl
nop
fld
cltd
loope
mov
out
mov
or
sar
test
cmp
scas
pop
cmpsb
adc
xor
lret
cs
clc
xchg
rcrb
dec
xchg
xor
jns
testb
je
push
testl
loope
cmp
cltd
xor
cmp
mov
mov
fistpl
mov
inc
push
cmpsl
ja
or
jmp
inc
jmp
fwait
ljmp
ss
dec
xchg
cmp
int
enter
xchg
test
bsf
dec
push
mov
subl
clc
cmc
test
or
movsb
cmp
sub
repz
repz
cmp
movsl
jae
inc
lods
daa
push
mov
fs
xorb
fisttpl
aam
xchg
add
mov
and
and
les
cli
fcmovne
mov
mov
mov
jno
sub
xchg
dec
movsl
cmp
faddl
insl
jae
scas
jns
shll
pop
adc
xchg
bound
mov
imul
sarl
push
cwtl
ror
jbe
and
and
and
push
cmp
loop
inc
iret
out
in
icebp
sub
das
add
dec
andb
ret
xchg
cmpsb
fists
ret
mov
push
cmp
outsb
sbb
stc
mov
inc
dec
ljmp
pop
inc
adc
ss
out
arpl
lea
pop
daa
clc
pushf
daa
ret
out
cmp
jmp
mov
xor
push
leave
mov
fdivl
das
mov
sub
movsb
mov
sbb
pop
cmp
add
mov
shr
cmpsb
cmp
call
xor
aas
test
xchg
nop
or
jnp
sbb
enter
sahf
bound
adc
jmp
popf
fiadds
and
subl
pop
popa
test
mov
cvtps2pd
mov
xor
sub
xchg
js
pop
mull
imul
adc
stos
cld
and
test
popa
rolb
test
int
pop
xchg
imul
imul
add
decl
cltd
outsb
inc
pop
pop
jmp
push
lahf
js
mov
mov
xchg
pop
xchg
pusha
ds
out
gs
shll
xchg
lds
js
xor
lds
scas
and
and
pop
in
es
inc
xchg
add
aaa
out
mov
shlb
inc
push
loop
mov
push
dec
ljmp
js
jmp
jecxz
scas
xor
jae
pop
jl
popa
test
and
mov
mov
inc
push
icebp
jge
cmp
fbld
mov
xchg
or
das
jmp
xchg
test
fdivp
inc
xor
mov
add
repz
push
sub
jecxz
inc
insb
xor
stc
cli
lock
cltd
jle
pop
outsb
pop
fdivs
jp
jno
fbld
adc
push
xchg
fcmovbe
mov
into
out
scas
xor
jae
in
push
sbb
in
inc
xchg
pop
js
xor
cld
repnz
push
xchg
pop
lcall
in
dec
psadbw
pop
lea
es
sub
test
or
fidivrs
adc
push
pop
jb
push
ds
adc
dec
pusha
icebp
out
xchg
mov
add
push
cmp
cs
jnp
inc
scas
cmp
cltd
mov
xor
pop
ljmp
clc
dec
and
andb
addr16
inc
hlt
jmp
cmp
ds
pop
inc
out
push
repnz
mov
imul
into
scas
mov
or
cwtl
mul
call
cs
sbb
add
arpl
xorl
fisttpll
push
mov
mov
push
dec
sub
pop
and
stc
ja
xchg
jp
enter
xchg
pushf
ljmp
aad
pop
into
adc
out
jmp
push
je
and
xchg
shrb
mov
adc
out
clc
sub
cmp
jmp
adc
sub
inc
mov
xor
add
push
jmp
add
in
lahf
mov
pop
ucomiss
call
add
dec
pop
in
roll
jge
mov
pop
or
lahf
dec
jne
in
sbb
jnp
mov
icebp
push
pop
mov
ret
add
in
sbb
mov
push
loop
adc
inc
cmp
xor
and
les
add
gs
sarl
jnp
mov
and
sbb
cmpsl
jno
adc
sti
mov
adc
loope
dec
dec
jecxz
ljmp
cmp
xchg
pop
subb
aad
ret
add
bound
inc
mov
lods
xor
pop
sub
adc
inc
push
push
test
jnp
cmp
add
jle
inc
adc
jl
adc
lcall
xchg
mov
insl
bound
ret
sub
lock
jg
adc
das
in
and
cmp
adc
push
xchg
frstor
sbb
pop
mov
in
pop
xlat
scas
and
aas
mov
jbe
aas
das
in
mov
or
cmc
stos
adc
rcrb
aaa
imul
loope
mov
mov
inc
mov
cli
fdivrs
testl
lds
push
push
int
inc
mov
add
dec
movsb
cmc
scas
jns
out
cmc
jae
hlt
ja
dec
ds
xchg
mov
mov
jmp
in
dec
in
jge
xchg
mov
jns
push
mov
insb
pop
lcall
fwait
cmp
add
outsb
inc
jmp
xor
or
ljmp
xor
es
insl
inc
iret
pop
push
sub
fnsave
addr16
in
add
cld
filds
lret
lods
ljmp
hlt
push
adc
jmp
push
xchg
fwait
outsl
jmp
popa
adc
js
mov
or
pop
pop
mov
xor
and
movsb
div
cmp
cwtl
push
das
mov
inc
sti
pop
jp
mov
mov
test
mov
mov
dec
mov
rcll
cmp
xor
add
inc
pop
sub
mov
sub
das
dec
jmp
xchg
popa
cs
push
mov
arpl
jb
jbe
int3
jae
xchg
iret
sbb
in
cmpsl
jo
push
dec
stos
call
cwtl
adc
xor
sti
sbb
jae
shll
and
cmp
or
outsl
scas
add
aam
inc
push
adc
pop
inc
push
mov
sub
loopne
and
loope
jmp
xor
mov
push
mov
lds
bound
pusha
in
loop
lods
jmp
xchg
xlat
add
pop
jo
in
mov
mov
inc
add
cli
aas
jo
xchg
dec
mov
pop
dec
add
je
add
or
out
sbb
cmp
xchg
cmpsb
das
imul
and
mov
or
cwtl
inc
cmp
minps
faddp
mov
jl
pop
and
mov
movsb
out
je
cs
repz
jg
scas
mov
popa
int3
std
or
sbb
rclb
sbb
nop
icebp
popa
enter
xor
xchg
imul
push
cs
mov
adc
out
test
js
jno
inc
fimull
inc
pop
test
sbb
arpl
ret
push
shrb
arpl
mov
ljmp
gs
stos
js
mov
addr16
inc
adc
push
xor
dec
in
fwait
jb
mov
cmpsl
sub
mov
lcall
int
sbb
mov
aam
inc
loop
mov
nop
sbb
mov
stos
jg
ret
pop
jg
dec
lock
movsb
arpl
std
xor
sbb
sub
scas
mov
lret
push
xchg
stos
pop
test
iret
add
bound
loopne
jp
pusha
and
js
sarl
popl
sbbl
dec
push
clc
push
nop
sub
sub
iret
xchg
cmpsb
movsb
cmp
push
adc
outsb
mov
mov
sbb
dec
inc
fisubl
add
adc
cmc
or
cmp
mov
pop
fnsave
xchg
mov
fildll
pop
push
jg
das
sub
jnp
popa
divl
das
loopne
mov
ljmp
ss
loop
mov
jp
or
and
dec
mov
fldcw
jecxz
insl
cmp
movsb
dec
ss
loopne
push
les
lcall
sti
push
loope
cmp
jnp
das
fs
inc
jns
xor
mov
out
scas
lods
lcall
fdiv
push
in
or
fwait
push
jecxz
nop
or
stc
mov
or
js
ja
lea
pushf
mov
mov
add
ss
std
test
repnz
jecxz
in
mov
fsubp
sahf
insb
push
jle
mulb
loope
cmp
sub
and
cmc
fimull
pop
push
push
int3
fsts
leave
repnz
mov
ret
inc
push
mov
adc
arpl
xor
inc
adc
nop
add
imul
xchg
add
inc
jmp
add
adc
les
int
cmp
mov
jno
or
inc
sbb
dec
mov
jp
xor
scas
add
cltd
in
cmp
jb
lds
mov
mov
dec
sub
int
xchg
inc
mov
leave
lock
shl
aas
xor
add
sub
sub
sti
je
cmp
or
aaa
xor
sub
dec
cwtl
jp
adc
lahf
lret
cmc
aam
icebp
mov
orb
fstpl
ja
repnz
push
dec
xor
inc
divb
adc
push
jns
mov
mov
mov
xchg
notb
xor
xlat
stos
jecxz
jne
lock
fwait
xchg
enter
mov
fnstenv
stos
sbb
cmpsb
les
and
push
cmc
out
xlat
out
in
out
or
insl
push
cld
jne
xchg
push
mov
in
fs
cmp
add
xor
cmpl
outsl
loop
cmp
test
jmp
xor
sbb
inc
or
cli
shlb
mov
cli
xchg
dec
mov
sbb
mov
or
cmpsl
das
gs
xlat
fcomp
bound
jle
popw
mov
push
sbb
enter
pop
pop
sub
mov
pop
push
sti
and
call
and
cmpsb
insl
mov
add
ljmp
decl
ss
sub
adc
into
int3
adc
adc
mov
repz
add
jb
cmc
hlt
sti
shll
roll
mov
stc
pop
scas
mov
inc
nop
sahf
test
mov
arpl
bound
pop
fistpl
movsl
mov
and
into
outsl
mov
dec
movsl
xor
outsb
or
adc
imul
cmpsb
es
xchg
add
mov
jb
ljmp
dec
dec
inc
sarl
enter
fnstsw
cmp
mov
cs
and
push
mov
aam
loope
push
cltd
or
lock
dec
pop
repnz
and
f2xm1
js
push
inc
push
test
push
jo
jnp
inc
insl
fld
lcall
lahf
xlat
das
test
adc
test
into
outsl
popa
mov
les
inc
cmp
pop
decl
ficoms
movsl
cmp
gs
or
cmc
or
das
or
jmp
scas
cmc
dec
mov
test
daa
jle
cltd
dec
fisubrs
out
inc
push
fisubrs
push
lret
mov
ss
shll
push
clc
mov
push
fisubrl
in
sub
and
test
dec
shll
xchg
pop
outsl
sub
pop
outsl
movsl
push
adc
aaa
test
mov
int3
int
mov
sbb
or
ror
pop
mov
loopne
push
sbbl
jns
mov
aas
and
mov
int3
jne
adc
add
push
push
pop
inc
xchg
ds
das
lea
lret
dec
insl
std
iret
dec
mov
mov
andb
sbb
int
pusha
imul
sub
scas
scas
cmp
popa
pushf
xchg
or
mov
xchg
pop
insb
mov
xchg
dec
push
sbb
data16
xlat
pushf
icebp
xor
scas
test
xchg
add
xchg
mov
iret
pop
aaa
xor
add
icebp
mov
clc
aas
jle
out
xchg
pop
sbb
adc
jo
and
cmp
lret
ja
dec
add
mov
sub
pop
adc
enter
lea
repz
stos
stc
stos
and
outsb
aaa
or
sarb
into
mov
sbb
sbb
cld
pop
cli
dec
or
dec
mov
imull
xor
mov
fdiv
sti
movsl
sub
xor
cmp
mov
push
js
test
popa
cmpsl
insl
sbb
fwait
pusha
mov
cmp
push
scas
pop
mov
push
jns
xchg
mov
test
inc
and
adc
cmpsb
in
jmp
popf
fldenv
push
ret
int
pop
orb
out
cmp
sahf
shll
iret
repz
std
mov
cmp
imul
pop
adc
inc
mov
repz
mov
popa
adc
dec
push
pop
dec
xor
mov
movsl
inc
cmpsl
sbb
sub
push
cmp
stos
add
jmp
iret
mov
pop
lds
pushf
or
stos
jno
call
jne
add
frstor
lea
mov
mov
and
fiaddl
mov
leave
push
hlt
push
pop
push
popa
aam
push
dec
rolb
or
test
stc
loope
imul
cmp
push
sub
pop
xchg
sub
clc
xor
xlat
fidivrs
xor
xorl
inc
push
jnp
je
in
repz
cmpsb
jmp
mov
mov
push
push
and
push
mov
jbe
lret
das
mov
mov
in
and
fmuls
xchg
mov
fwait
adcb
xor
pop
enter
and
dec
in
addr16
sahf
dec
call
loopne
mov
xor
andl
stos
fadd
pop
js
cmp
dec
and
mov
cmp
jnp
pop
pop
fdivl
scas
sub
into
jbe
mov
mov
aad
add
pop
sub
inc
add
jo
pop
sbb
cli
add
sarb
inc
ss
and
inc
lods
sub
cmp
jo
push
mov
subl
push
decl
and
idiv
lret
jbe
pop
lcall
lock
stos
jae
jns
stos
mov
jne
jae
jle
cld
in
mov
pop
rorb
rorb
xor
sbb
mov
xchg
das
rol
jb
loopne
sbb
or
ja
arpl
mov
stos
aam
mov
inc
push
scas
inc
ror
add
movsl
jge
loope
bound
fidivs
adc
dec
testl
dec
xor
clc
push
mov
sbb
xor
jecxz
call
imul
or
or
xchg
ljmp
test
repnz
inc
mov
or
in
mov
adc
outsb
xor
aam
xlat
test
dec
and
cmp
out
shlb
orb
fldcw
adc
cmp
xchg
inc
inc
and
ss
add
leave
dec
xchg
cld
inc
rol
inc
mov
lock
imul
jge
or
fwait
ds
idivb
or
jae
cli
adc
xchg
mov
push
cmp
mov
shlb
mov
mov
call
or
sub
push
mov
sbb
out
popa
pusha
jns
adc
inc
sbb
lods
pushf
in
les
imulb
test
fwait
jp
cmp
int3
fs
sub
cltd
push
xor
dec
fwait
xchg
pop
sti
adc
add
ffree
sbb
jae
xlat
and
sbb
xchg
mov
and
dec
sbb
sub
push
into
jne
inc
add
fsts
ret
in
push
cmp
xor
pop
ss
jb
mov
dec
sbb
lds
pop
mov
pop
in
in
cmp
xor
enter
pop
push
orb
sub
stos
mov
mov
jl
fstl
push
cmp
xchg
adc
jne
enter
add
aaa
jg
mov
dec
es
add
sub
mov
mov
in
push
sub
pop
cmp
mov
inc
dec
push
sub
dec
popa
cmp
add
push
push
lret
and
adc
insl
shlb
jno
cmp
arpl
pop
add
adc
jmp
adc
incl
mov
popf
jmp
cmp
popf
es
jae
xchg
xchg
stos
cmp
outsb
pop
pop
ss
cwtl
jns
stc
xchg
inc
fstl
lret
out
cmpsb
add
jle
add
push
push
in
cmp
std
push
lahf
shl
movsb
aaa
mov
inc
mov
jo
loopne
outsl
out
testb
sub
mov
mov
aaa
sbb
mov
popf
lret
lcall
les
adc
sub
add
cmp
push
pop
mov
das
daa
xor
xchg
lret
mov
loopne
jns
sub
nop
popa
outsb
test
mov
jg
mov
in
fisttpl
add
mov
push
dec
jbe
push
adcl
je
jl
rolb
jne
into
in
stos
dec
aam
popf
and
lea
pop
push
mov
mov
rcll
jmp
xor
push
in
lret
test
clc
adc
mov
and
mov
in
int3
rclb
movsb
test
mov
sub
add
arpl
adc
imul
test
movsl
loope
cmp
ficoms
inc
subl
push
and
xchg
stc
sti
xchg
cmp
push
lret
push
out
ficoms
addl
movsl
mov
inc
cmp
jle
in
inc
gs
push
negb
jmp
and
pop
lret
inc
inc
sbb
sub
imul
xor
fisttps
out
andl
jb
ja
out
mov
adc
fs
test
pop
addr16
mov
xorb
int
cmp
xchg
dec
or
push
stos
rclb
ror
testl
mov
aam
push
xchg
mov
popf
and
movsb
lahf
xchg
out
xor
ja
jl
gs
fisubs
push
jl
inc
aad
push
out
push
lret
mov
mov
shll
or
xchg
out
mov
ja
shll
jmp
dec
sub
push
movsl
arpl
push
adc
sbb
icebp
push
inc
icebp
test
call
sub
cltd
push
mov
aad
je
test
shll
cld
pop
stos
outsl
inc
push
pop
pop
jb
imul
dec
adc
jmp
lret
lret
add
jecxz
pop
or
jmp
xchg
cwtl
xchg
pushf
xor
mov
movsb
fimuls
inc
sub
inc
fsubrs
fs
lods
xchg
add
aam
fstp
sbb
cmpl
pop
xor
test
jle
dec
pusha
nop
push
and
jmp
pop
pop
mov
pop
cmc
pusha
mov
mov
ja
add
popf
dec
in
dec
push
pusha
jge
dec
push
jae
push
inc
popa
jl
fiadds
jns
rcl
insb
test
outsl
addr16
pop
loope
xchg
add
push
pop
rcl
out
pushf
call
ljmp
out
sahf
je
imul
out
hlt
push
cmp
mov
jecxz
dec
aam
icebp
in
shll
mov
and
push
pop
aam
push
loope
dec
outsb
daa
sbb
cli
iret
xor
test
repnz
lahf
mov
push
dec
inc
jo
imul
or
mov
mov
push
mov
xor
add
fsts
cltd
xor
aad
push
icebp
popa
add
jb
mov
mov
push
mov
test
or
or
scas
out
xchg
fmul
jnp
mov
cmp
int3
rcr
xor
pushf
or
hlt
xchg
mov
mov
xchg
mov
mov
das
mov
sbb
out
out
movsb
sahf
rcll
push
xchg
cltd
shlb
lods
and
subb
inc
xor
arpl
enter
inc
ljmp
cmpb
fs
loopne
mov
lods
sbb
adc
cmpsl
addr16
cmp
add
push
push
or
mov
lods
test
por
cld
or
lret
sbb
sub
stos
jl
inc
and
lock
jg
orb
or
and
fldenv
dec
inc
pop
loopne
mov
inc
adc
mov
sahf
mov
dec
das
test
adcl
sbb
je
sbb
lods
jmp
dec
arpl
jl
sahf
jge
adc
in
ljmp
lds
movl
sbb
pusha
cmp
jns
fmuls
mov
mov
pop
xor
ljmp
adc
sbb
mov
lock
xchg
jle
lret
push
ds
pusha
xchg
nop
xor
dec
sahf
xchg
xor
jne
push
push
jo
mov
cmp
and
xor
pushl
vmulps
xchg
popf
stos
pop
or
cmc
or
sub
add
sub
pop
sbb
and
clc
add
lea
sar
inc
cmp
add
imulb
popf
jo
xchg
dec
xor
jo
popf
adc
push
dec
sub
in
mov
mov
stos
aam
push
aad
ret
outsb
arpl
inc
inc
pop
xor
sbb
inc
xor
ss
aam
sbb
in
mov
dec
fwait
arpl
push
scas
shrl
data16
clc
jo
sbbb
lahf
jge
scas
test
gs
dec
xchg
sub
in
jno
cli
clc
pop
dec
das
jle
aas
pop
pop
mov
or
andl
arpl
arpl
testl
xor
inc
imul
movl
lods
push
std
sahf
into
leave
jnp
lret
push
loope
mov
andl
pop
sarl
add
dec
and
mov
cmp
inc
mov
cmp
push
cli
imul
insb
or
fstpt
xlat
test
cmp
jecxz
ret
xchg
adc
sub
lcall
ret
in
xchg
xchg
fstpt
movsb
movsl
sub
das
pop
stc
adc
inc
pusha
dec
lret
fsubp
dec
ss
cmp
pop
loope
xchg
push
inc
fnstsw
jb
aam
or
faddl
jbe
pop
jmp
mov
outsl
sahf
pop
cmp
arpl
std
sahf
fstpt
mov
and
jl
sub
dec
cmp
adc
mov
mov
xchg
repnz
xchg
mov
les
pop
sbb
push
xlat
adc
jo
addl
jl
mov
cmc
cmpsl
inc
push
inc
fidivrl
inc
push
js
and
mov
imul
sub
mov
fwait
ljmp
es
xchg
jle
pop
fsubrs
popa
cmp
out
imul
das
ds
cmp
adc
xchg
inc
pop
aam
nop
push
cmp
out
add
call
out
pop
lret
subl
cmp
mov
xor
lret
into
mov
test
xor
in
stos
fisubl
push
bound
mov
xchg
cmc
cmp
ds
cmpb
aas
cli
jne
mov
sbb
mov
cmp
mov
imul
or
pop
aas
pusha
mov
add
int
add
fucomi
scas
ret
sbb
jbe
mov
aad
xor
xor
sbb
std
mov
push
add
push
push
jns
bound
cmp
lret
sub
gs
xor
xchg
sub
sub
testl
test
imul
sbb
pop
std
in
outsb
fmul
call
arpl
cmpsb
sub
sbb
push
jo
andb
xchg
mov
dec
rep
sub
out
pushf
or
and
and
inc
jg
movsl
clc
outsl
outsb
ss
push
out
je
pop
insl
sbb
xor
add
movsb
sahf
mov
adc
imul
stos
jb
ds
push
xlat
xchg
xor
popf
das
iret
cmp
xor
mov
imul
cltd
mov
test
inc
movsb
fsub
and
or
add
sti
aas
test
loope
sbb
push
pop
jno
test
loopne
lret
push
inc
stos
outsb
mov
push
popa
or
mov
flds
sbb
push
mov
loopne
pop
or
sbb
push
dec
fmull
xor
movsb
and
jmp
mov
pop
jns
xor
jbe
js
js
bt
mov
std
xor
push
add
and
cmp
pop
xor
dec
push
arpl
and
mov
cmp
in
and
pop
cmc
fdivs
push
sarb
sbb
jge
pushf
mov
jmp
cld
rcrb
add
cmp
lret
aad
imul
pop
xor
nop
jo
out
insl
fsin
movsb
es
xchg
popf
inc
leave
fisubrl
fwait
sbb
aad
cltd
sbbb
ret
and
push
jmp
rcl
insb
mov
sbb
sub
mov
adcb
insb
nop
iret
fcompl
mov
adc
cld
stos
in
gs
and
pop
call
pushf
imul
loop
jno
insl
mov
arpl
out
les
cmpsb
movl
pop
push
sahf
jbe
imul
icebp
int
dec
cmpsb
push
stos
movsl
dec
mov
sbb
insl
pxor
int3
rolb
stc
in
pop
dec
xchg
lds
and
idivb
in
add
push
push
pusha
mov
test
repz
popa
xlat
loopne
stc
push
mov
and
jo
out
mov
stc
es
jl
mov
inc
inc
insl
cmc
mov
push
mulb
pop
xor
cli
movb
movb
jnp
push
xchg
clc
aaa
sbb
es
dec
pop
jo
mov
cmc
push
mov
sar
sbb
jl
imul
xor
mov
bnd
pushf
pushf
test
fcoms
inc
ficoms
int
sub
in
inc
lds
push
fildll
mov
les
fisttpl
pop
mov
push
push
aam
adc
decl
in
cmpsl
or
out
bound
jmp
jle
je
adc
andl
aam
jns
imulb
fs
mov
jbe
pop
mov
mov
shll
add
int
pop
sbb
mov
scas
inc
shl
cmp
mov
xchg
push
pop
jmp
xlat
in
dec
mov
add
pop
push
sub
jnp
fwait
jno
ss
and
int
jge
push
push
push
dec
mov
or
adcb
pop
lods
mov
in
push
inc
mov
ficompl
in
insl
out
into
int
sbb
into
je
stc
in
xchg
test
iret
inc
jl
scas
mov
mov
mov
adc
div
sub
xchg
pop
mov
sahf
pop
repz
mov
test
mov
push
cmp
movsl
or
push
sbb
imul
or
scas
roll
sub
pop
pop
hlt
ss
test
cmp
arpl
cmp
xor
int3
mov
mov
es
add
rolb
mov
cmpsl
push
mov
test
pop
or
sbb
and
sbb
into
aas
push
test
out
mov
inc
dec
pusha
aad
in
dec
mov
mov
fs
and
outsb
movl
push
and
outsl
xchg
movsb
cmpsb
cmp
arpl
int
inc
jmp
shl
adc
fwait
jg
movsb
cmp
leave
mov
xchg
lahf
or
lcall
daa
es
inc
push
and
xchg
icebp
or
les
int3
pop
mov
sub
push
dec
jecxz
or
lock
daa
es
out
cmpsb
cmpsb
add
mov
push
and
or
sbb
enter
and
xor
gs
in
add
mov
fwait
cli
lods
fs
int3
push
scas
jbe
push
daa
leave
insb
in
jno
jg
ficomps
lret
seta
add
xchg
dec
les
shll
imul
movsl
sti
mov
cmc
or
ret
xchg
adc
adc
arpl
pop
loop
jle
scas
mov
or
sbb
jne
add
dec
add
fimull
mov
add
jle
xchg
jmp
dec
cmp
pushf
pop
xor
ret
xor
fcompl
mov
loopne
mov
int3
inc
sbb
daa
fstps
mov
inc
lea
pop
pop
aas
cld
jge
and
pop
push
mov
rol
sub
lods
cli
cmp
popa
pop
push
subl
mov
fidivs
out
fidivrs
sbb
sbb
sub
addr16
call
xchg
add
pop
pop
sahf
in
movsb
jae
daa
inc
jne
dec
lds
out
dec
rcrb
and
xchg
movsl
imul
sbb
dec
push
mov
sub
loope
mov
hlt
dec
addr16
clc
leave
mov
pop
ja
aaa
roll
ss
imul
sbb
jne
es
fidivrl
repz
mulb
jae
add
push
push
ja
and
subb
pusha
notb
inc
mov
ja
lds
xlat
xchg
dec
sub
mov
mov
test
add
loopne
in
jp
aas
xchg
sub
cmp
xor
sub
sbb
push
mov
subl
adc
cwtl
inc
lods
in
mov
mov
cmp
out
jl
lds
jne
in
dec
add
mov
cmpsb
test
fsubl
push
clc
cmpsl
into
jge
mov
inc
decl
or
insb
dec
dec
stos
xor
push
popa
sti
fnstenv
and
or
sub
inc
inc
ljmp
out
inc
scas
jno
subb
pop
in
jnp
pop
mov
lea
popf
std
pop
cli
pushf
insl
and
aam
inc
push
test
jmp
popa
add
ds
pop
cld
pop
inc
push
sahf
fidivs
sub
fnsaves
xor
xchg
push
push
adc
mov
inc
iret
sbb
lods
cmp
sbb
xchg
enter
loop
push
push
jl
outsb
fstps
xor
movsl
xchg
push
add
mov
nop
cwtl
xor
test
pop
jl
and
lahf
imul
into
sbb
xchg
mov
ljmp
sub
xlat
jle
add
test
jecxz
xchg
fidivs
sub
repnz
popf
mov
add
xchg
rorb
out
push
mov
fldt
in
mov
sbb
imul
cmpsl
inc
int
loopne
das
push
stos
lock
and
push
or
cmp
aaa
or
xchg
sarl
mov
adcb
std
pushf
add
gs
push
add
mov
bound
jle
daa
jecxz
std
in
loope
nop
or
sub
dec
inc
mov
incl
int
xor
loope
xchg
jmp
popa
repz
mov
xchg
push
ss
ret
lret
test
adcl
dec
repz
fstl
dec
push
xchg
mov
push
aad
mov
or
xchg
dec
xchg
rorl
in
in
cmp
mov
mov
sbb
jnp
inc
mov
fldt
sbb
scas
sbb
adc
pop
sbb
mov
jmp
add
in
mov
xchg
movsl
sbb
jecxz
sti
push
nop
fwait
add
imul
test
rcrb
stos
ljmp
sub
inc
cmpsb
rcl
fistpll
icebp
mov
movsb
jmp
nop
and
into
add
mov
arpl
or
sbb
xor
push
cmp
lods
mov
repnz
rcrl
loopne
adc
inc
inc
pop
jno
stos
ds
into
xchg
pop
out
sub
push
pop
imul
roll
jecxz
jg
repnz
adc
dec
add
jmp
daa
add
pop
xchg
jg
push
xchg
mov
rcl
push
fimull
insb
cmpsl
jbe
jnp
push
leave
fucom
and
dec
jle
jge
mov
and
insb
jle
mov
out
jb
mov
push
cmpsl
push
mov
insb
orl
rclb
inc
nop
ja
nop
cmp
int
cmp
lock
mov
lods
mov
fiadds
push
cld
mov
xchg
or
and
sub
jae
out
xor
mov
pop
pop
outsl
lcall
jle
loop
push
es
push
mov
mov
mov
scas
lret
push
scas
xor
shlb
cmp
je
push
test
insl
bound
loopne
scas
in
push
aas
mov
jle
out
xchg
mov
mov
xlat
xchg
sub
mov
cmp
dec
jae
fadds
out
jb,pn
mov
push
repnz
scas
mov
in
xchg
call
imul
fnsave
popf
mov
xchg
and
xchg
loopne
push
cmpsb
cltd
xor
xchg
sub
and
push
sub
add
xchg
jl
push
shl
pop
fwait
jae
enter
fidivl
mov
shrl
add
imul
clc
dec
mov
sub
push
jb
lock
daa
mov
fsubrl
imul
clc
insl
sbb
mov
cmpsl
pop
mov
in
sarb
adc
dec
pop
pop
bound
adc
mov
xor
lahf
jnp
mov
push
lret
cmp
nop
rcr
jp
outsb
add
adc
xchg
fs
sbb
cld
lret
in
mov
sub
lds
cld
xor
dec
or
ret
cmp
outsl
dec
loopne
dec
dec
data16
push
xchg
fs
stc
inc
pop
inc
test
or
push
inc
or
push
arpl
xor
clc
pop
rcr
outsb
hlt
mov
inc
xor
fidivl
sbb
ljmp
movsl
mov
mov
std
inc
mov
bound
fisubs
pop
pop
pop
jbe
cmp
inc
dec
xchg
mov
rol
and
pop
je
cmp
inc
cwtl
fwait
pop
shll
imul
lcall
xchg
or
add
addb
and
dec
gs
pushf
push
call
fucomp
pop
dec
dec
inc
cmpsl
jae
inc
out
adc
lods
push
inc
pop
popa
leave
jg
lahf
fsubrl
insb
lods
jo
or
out
stc
lcall
push
into
add
xor
aad
jge
js
sar
cltd
jne
out
sbbb
adc
sub
mov
mov
rorl
pushf
pop
jnp
dec
or
aas
xchg
inc
hlt
pop
jp
fsubp
add
mov
pop
add
les
in
push
xor
pop
and
ffree
jecxz
int
movsb
cwtl
rolb
hlt
imul
popf
adc
add
lods
pusha
shrb
ror
test
add
inc
xor
in
sub
pop
in
addb
daa
jl
mov
enter
sub
loope
mov
cld
sbb
jo
in
and
testl
lcall
clc
push
div
and
ret
arpl
jp
rolb
adc
push
cmp
cmp
hlt
mov
arpl
lods
sbb
inc
sbb
scas
mov
ret
fwait
rcl
xchg
iret
xor
jno
cmpsl
rcll
lret
outsl
out
mov
movsb
mov
adc
push
lods
in
popf
fsubs
xor
dec
je
mov
gs
addb
xor
sbb
xchg
daa
adc
push
jnp
orb
loope
cmp
lods
fsub
in
mov
pop
xor
cmp
outsb
fadd
fnstsw
rolb
movsl
mov
es
in
adc
or
push
adc
sub
mov
roll
inc
add
sti
test
ja
flds
pop
in
xchg
or
ljmp
inc
pop
insb
out
mov
mov
add
rcl
or
lcall
push
ss
leavew
test
imul
jle
push
xchg
mov
sub
loope
les
mov
cmp
adc
test
jo
lcall
mov
mov
js
out
push
sbb
cmc
fstl
and
or
adc
or
js
fdivl
sarb
fwait
outsl
push
test
fldenv
mov
aad
push
aam
adc
pop
mov
mov
mov
jo
insl
loope
imul
bound
ja
dec
stos
insl
mov
sub
push
pop
xchg
decl
cmp
xor
mov
and
lahf
loop
push
dec
push
jo
and
ss
pop
test
push
push
fisttps
mov
mov
ljmp
or
sub
out
cmpsb
fistps
aaa
fstpt
pop
pop
pop
xchg
pop
mov
xchg
testl
mov
cmp
enter
xor
lret
aam
das
movsb
add
and
fbld
movl
psrld
movsl
mov
jp
push
movsb
cmc
imul
les
xor
popf
jecxz
sub
lret
and
inc
fs
enter
aaa
xor
aad
mov
sub
in
shll
push
pushf
inc
or
hlt
fisttpll
out
pop
mov
mov
xchg
dec
push
dec
sbb
mov
sbb
out
pop
dec
jbe
lret
cmp
addr16
inc
call
adc
jecxz
xlat
pop
in
inc
insl
ljmp
inc
inc
mov
push
aas
inc
xchg
cltd
or
fcoms
push
mov
xchg
dec
pop
mov
add
xor
add
xchg
loope
or
xor
jnp
mov
sbb
fcmovbe
loop
sub
adc
lods
push
mov
xor
shll
add
aas
scas
ds
or
mov
xchg
cmpsb
jo
lods
ljmp
lods
test
mov
mov
dec
push
or
sbb
push
push
jno
and
testb
jae
fs
daa
shrl
push
dec
dec
sub
cs
ds
push
repz
in
xor
dec
pop
dec
pop
leave
test
push
into
jns
sarl
adc
dec
xchg
mov
add
stos
fcoml
jmp
mov
test
sbb
xor
or
shrb
andl
cmp
pop
dec
mov
xor
push
and
jo
dec
push
sub
fbstp
or
aas
pop
iret
and
outsb
inc
mov
sub
sbb
mov
popf
dec
xor
sbb
jne
cmp
in
mov
sub
ja
aam
sarb
sbb
mov
xchg
aad
dec
dec
std
cmp
push
insb
adc
adc
data16
mov
or
lea
ds
cmp
xor
jo
inc
and
xlat
icebp
mov
in
subb
icebp
ds
pop
sbb
imul
cmpsl
dec
ret
jg
jecxz
push
dec
movsl
mov
push
and
loop
shlb
cli
mov
imul
jne
subb
sub
lea
add
push
test
clc
in
jmp
test
dec
mov
shll
test
sbb
and
adc
jecxz
push
jbe
std
sti
out
in
dec
jno
mulb
sub
nop
cltd
xchg
imul
lahf
es
sbb
outsb
nop
fs
inc
into
jo
movsb
and
inc
fcoml
cmp
int
lods
gs
and
lret
cmc
cs
pop
or
pop
imul
dec
or
sub
incb
sub
andb
imul
ljmp
ret
stc
decb
imul
imul
iret
daa
in
je
mov
ror
je
add
mov
dec
dec
stc
ljmp
jmp
sbb
sarb
jmp
jmp
iret
jne
out
jae
adc
call
cmp
dec
lock
pusha
cmp
sub
dec
imul
mov
fbstp
gs
jmp
jmp
je
cltd
arpl
movsl
test
je
fwait
test
addb
aas
add
adc
lods
outsl
and
rorb
or
pop
xchg
in
and
mov
xor
xor
fimuls
add
scas
stos
icebp
cltd
push
adc
inc
fsts
mov
inc
ror
mov
lret
into
iret
cs
mov
sbb
lcall
jae
and
out
adc
and
pop
jmp
aad
iret
mov
sbb
push
add
int3
xchg
mov
xor
ret
movsl
mov
mov
fwait
xor
push
push
mov
leave
fwait
rcll
sbb
and
fstpt
imul
addr16
cmc
lea
or
cmp
fdivrs
sbb
pop
arpl
pop
mov
pop
sbb
inc
jae
stos
jb
sub
push
xor
mov
and
ret
xchg
shll
cmc
out
stc
pop
inc
dec
ret
nop
ret
cmp
and
popa
pop
push
sbb
sahf
insl
js
push
pop
lret
dec
into
dec
insb
addb
cli
mov
je
aam
and
stos
or
xor
inc
push
test
iret
add
movsl
lock
outsb
push
pop
pop
cmc
dec
lods
sbb
pop
jge
sbb
scas
hlt
jge
and
scas
dec
mov
aam
ficoml
jl
mov
mov
sbb
mov
cli
push
jl
ret
dec
sti
test
shll
mov
lock
push
cmpsl
leave
loopne
sbb
test
cmp
aas
xchg
enter
or
add
outsl
daa
mov
push
jne
or
xor
push
mov
into
and
jno
sbbl
xchg
repnz
cmp
popf
dec
jae
pop
mov
mov
inc
jb
shlb
jo
inc
pop
cli
xchg
inc
or
and
xchg
pop
pushl
es
push
xchg
add
loop
cmpsb
bound
add
lret
insb
adc
ljmp
xor
cmpsb
in
ljmp
add
leave
hlt
nop
mov
jmp
and
ficomps
mov
enter
lds
sahf
imul
fisttpl
leave
add
mov
dec
fistps
pusha
loopne
iret
cli
add
pop
adcl
dec
or
xchg
fdivr
ja
add
xor
bound
mov
jmp
mov
mov
jp
popf
push
mov
movsl
pushf
add
fcoml
cmpsl
dec
push
mov
aaa
ds
xor
push
add
cmp
or
insb
cmp
loope
loop
aam
loopne
out
pop
mov
out
sti
mov
andb
stc
pop
pop
and
xchg
cmp
fcompl
cmp
int
lds
sub
pop
mov
in
jmp
add
ljmp
ret
jp
cmpl
cmp
inc
xchg
aad
into
sbb
mov
push
lods
dec
sub
bound
fdivl
mov
sbb
enter
stc
inc
jne
jno,pt
cmp
aam
addl
daa
jae
jne
fiadds
xor
lret
or
sarl
mov
adc
mov
pop
cwtl
mov
pop
sbb
out
dec
and
gs
cwtl
xor
xchg
int3
lahf
cs
fidivs
jge
lods
movsl
mov
xchg
bound
cmpsl
adc
push
insl
xchg
mov
das
hlt
jne
or
mov
sti
call
sub
ljmp
fdivs
popf
adcb
scas
rorb
loop
ds
push
pop
pushf
fstps
jne
hlt
dec
dec
ja
sbb
mov
rclb
cwtl
rclb
in
icebp
and
cwtl
movsl
insb
out
jle
sub
push
mov
in
popf
outsl
adc
or
xchg
popf
vtestps
cs
aam
cmc
outsl
icebp
sbb
fwait
xchg
outsb
cmpsl
loop
push
jg
inc
xchg
mov
sub
pop
sub
popf
or
jbe
mov
in
inc
lock
push
aaa
mov
sarb
mov
cs
adc
mov
fisubl
push
clc
clc
test
lods
sub
mov
cmp
mov
pop
nop
cmp
fisttpll
orl
xlat
and
push
adc
push
sahf
inc
sti
lock
cmp
xor
out
or
cmp
mov
inc
push
test
adcl
je
mov
adc
fnstcw
xchg
add
repz
js
outsl
adc
lds
mov
ja
aam
mov
mov
mov
push
push
enter
ljmp
filds
mov
enter
pop
test
inc
jne
int3
incl
out
xor
cmp
ljmp
push
add
outsl
pop
fnstcw
imulb
push
imul
lcall
pop
xchg
pop
addl
fdivrp
imul
pop
rcl
les
fisttps
cmp
daa
insb
xchg
aaa
mov
jns
mov
mov
xor
aam
mov
fimuls
pop
or
jb
push
imul
xchg
stc
fwait
and
add
sub
bound
add
sub
add
sbb
push
mov
out
xlat
jb
into
mov
xchg
sti
arpl
jbe
inc
sub
nop
and
and
push
adc
dec
or
les
inc
sub
call
fsubs
pop
sub
dec
adc
lcall
ret
out
mov
mov
stos
adc
push
aas
jl
ljmp
into
setl
xchg
push
cli
mov
and
fs
stc
sub
shr
ret
or
push
outsl
cmp
or
aas
out
jle
dec
in
ror
rcl
mov
xchg
inc
lahf
ret
cmp
and
cmp
pop
fistpl
or
insl
cmc
mov
movsb
ficompl
fmull
insb
jns
sbb
xchg
jne
push
cmpsl
adcl
cmp
mov
xchg
xchg
mov
xor
mov
imul
arpl
cltd
lcall
inc
addb
sar
add
pop
and
cmc
test
sarb
cld
adc
cmpl
mov
xor
mov
into
sbb
out
pop
je
fadd
jmp
fmuls
and
xor
ret
pop
ds
mov
aam
cmp
and
testl
loopne
xchg
cmp
test
jmp
cmpsb
mov
out
mov
xor
jg
sbb
xchg
lods
scas
push
pop
mov
andb
imul
push
inc
sbb
fldcw
test
xor
aam
movsb
dec
test
mov
orl
ja
mov
jne
cld
cmc
mov
mov
imul
push
addr16
andl
fcomps
sub
int
and
sti
push
jb
arpl
push
pusha
cmp
lods
and
in
ret
mov
mov
push
mov
push
push
and
les
xchg
pop
push
loope
sahf
lock
push
jne
in
lret
cmc
jno
add
push
clc
xchg
ljmp
repnz
into
cld
jp
std
pop
ret
ret
or
jp
mov
cs
cmpsb
icebp
sbb
je
sbb
fisubrs
cmpsb
aas
pop
ret
imulb
xchg
neg
scas
mov
dec
push
pop
sahf
sub
jp
fwait
mov
into
aam
in
outsb
pusha
jmp
mov
cmp
rcrb
mov
and
xor
andl
sub
fsave
xchg
sbb
xor
xchg
push
sbb
mov
xchg
pop
flds
adc
add
fildl
cmc
add
pop
mov
test
xchg
jl
iret
inc
sub
out
arpl
push
popf
jge
adc
roll
bnd
xchg
and
ss
mov
or
pushf
rcll
and
sahf
sub
cli
sub
enter
hlt
add
addr16
jle
dec
dec
pop
cmp
cmp
sbb
jg
jl
xlat
mov
fs
incb
stos
outsl
aas
addb
adc
push
aad
sbb
bound
and
leave
test
sbb
and
sbb
inc
and
cwtl
add
int
pop
or
mov
popf
and
aas
call
push
jl
mov
xor
add
and
push
shrb
push
push
inc
and
adc
xchg
adc
andl
jmp
mov
mov
mov
sub
nop
cmc
inc
mov
mov
test
jp
pusha
scas
leave
enter
scas
insl
or
adc
dec
xchg
sbb
and
xchg
sahf
cltd
les
sbb
das
stos
push
aaa
subb
cmc
mov
pushf
aaa
shrb
pop
jno
inc
stos
jmp
addb
cmc
lods
lea
mov
xchg
mov
mov
or
aaa
cmpsl
or
xlat
add
icebp
fildll
cli
insb
jae
and
test
inc
xchg
and
xorb
sub
inc
fisubl
cli
outsb
lcall
mov
loopne
bound
dec
add
aad
pop
sub
loop
jecxz
call
push
push
push
add
divb
mov
sahf
scas
lahf
inc
pusha
cmp
cmp
scas
pop
loope
push
int
fisubrl
adc
dec
outsl
iret
sti
repz
orl
cld
addl
cmpsb
sub
sub
xor
addr16
mov
or
xchg
loopne
pop
or
pusha
jmp
mov
adc
sub
scas
lcall
push
cmp
lds
fstpt
divl
out
pop
xchg
jmp
loop
shrl
jno
push
notb
adc
aas
lds
lods
jns
mov
nop
add
aas
test
xchg
sbb
js
mov
adc
mov
push
adc
test
insb
lods
xchg
mov
mov
or
push
aaa
std
or
cmc
cmp
dec
ret
jp
lahf
xchg
mov
xchg
test
mov
insb
jmp
pop
test
in
lret
jecxz
jge
cmpsl
roll
ret
push
jge
mov
or
aaa
cli
inc
xor
xchg
mov
es
push
mov
out
sub
or
pop
sub
mov
ljmp
idivl
sahf
and
aas
mov
nop
push
inc
jecxz
sbb
xchg
jecxz
pop
dec
sub
mov
loopne
pop
mov
js
aad
subl
enter
lock
jge
sti
shlb
xorb
das
aas
inc
pop
lea
push
or
adc
adc
fisttps
xchg
inc
mov
mov
sbb
ret
scas
xchg
jo
nop
mov
xchg
xchg
xchg
xchg
push
fnsave
arpl
xchg
mov
cmpsl
outsl
mov
hlt
ljmp
bound
push
int
testb
mov
andl
pop
cmp
mov
leave
cmpsl
jae
loope
mov
fnstcw
pusha
enter
mov
fcmovb
dec
adc
out
notb
xchg
movsl
std
testb
jne,pn
out
fs
and
mov
push
loope
mov
inc
arpl
sub
pop
adc
mov
sub
mov
rorl
cmpsb
add
add
inc
movsb
push
and
je
stc
push
sbb
scas
xchg
mov
into
sub
test
xchg
cli
mov
cmc
inc
fistps
dec
sub
jp
cmc
xchg
jno
push
out
jl
popf
push
in
xlat
fimuls
pusha
jmp
ret
or
adc
sbb
push
test
insl
int
out
test
jl
addr16
push
arpl
dec
and
jl
mov
mov
mov
jno
or
adc
pop
cmp
std
mov
sub
test
mov
orl
cmpsb
pushl
xor
mov
and
lods
imul
lods
or
xchg
pop
enter
leave
loope
and
add
sti
xor
jo
push
xor
mov
aas
mov
imul
sbb
loope
adc
pop
dec
jb,pt
cwtl
sarl
lods
sbb
arpl
sub
mov
lods
push
sbb
hlt
je
xchg
aas
jbe
ret
mov
jecxz
mov
hlt
jmp
dec
cli
fs
push
pushf
adc
adc
shlb
adc
clc
cmpsb
jb
xchg
out
lds
push
mov
mov
in
dec
dec
ljmp
in
and
jle
std
xchg
icebp
jmp
or
add
mov
push
test
jbe
je
pop
mov
int3
mov
mov
mov
xchg
fsubl
popa
xorl
dec
imulb
cs
jle
ljmp
int
push
lods
mov
push
jmp
test
clc
sbb
jmp
mov
popa
pop
jno
in
or
inc
std
jo
jb
mov
lds
or
mov
mov
filds
outsb
fidivrs
mov
mov
into
cld
ja
push
inc
and
test
pop
jbe
std
into
adcb
xchg
mov
sbb
scas
das
arpl
push
jp
xchg
cmp
scas
aad
in
mov
jle
int3
mov
xchg
js
pop
pushf
out
xchg
or
sub
xor
dec
ss
and
sahf
insl
lods
add
mov
in
mov
divb
add
push
jo
pop
in
shrb
push
jns
sbb
cli
es
push
ja
xor
and
insb
jmp
inc
leave
sbb
xlat
pop
push
fimuls
and
or
mov
orl
lret
jns
push
jg
fisubs
sub
test
out
inc
jge
pushf
xorl
test
aas
jmp
mov
cmp
adc
xchg
push
sub
ret
mov
pop
mov
fildll
sub
sub
xchg
or
fxch
sub
lea
mov
dec
jae
stos
mov
cwtl
mov
jle
push
gs
fbld
jl
loop
data16
gs
lds
insb
add
xor
js
sti
add
data16
xchg
rol
call
inc
gs
mov
push
cmpsb
lds
pop
sub
cmp
outsl
fwait
pop
insl
xor
in
lock
fldenv
repz
xchg
rcll
ja
sub
or
xchg
sbb
out
cltd
push
xor
rcll
cmp
jmp
adcb
and
push
test
dec
or
test
stos
lret
and
push
or
lock
hlt
push
subl
mov
daa
jns
fsubl
add
out
xchg
popa
xor
lret
adc
pop
pusha
mov
mov
ja
int3
mov
fs
fnsave
mov
das
and
mov
adc
push
adc
xor
rclb
jno
cmpsl
in
loop
jne
xchg
mov
and
xor
cld
loopne
inc
loopne
or
and
cwtl
cmp
xor
sub
ficompl
aas
inc
leave
adc
shrl
xor
cmpsb
icebp
sub
mov
add
adc
pushf
addl
xor
std
fmulp
ret
testl
int
das
dec
sub
testb
pop
out
push
sarl
mov
movsl
ret
es
pop
mov
inc
imul
leave
add
sub
or
or
xor
cmpl
lds
leave
cltd
xchg
std
jg
and
mov
dec
cmpl
dec
mov
mov
adc
push
dec
mov
push
or
popa
mov
mov
jl
xchg
cmpl
jle
cltd
sub
addr16
dec
cmp
das
pop
rclb
jae
dec
shlb
roll
xlat
ja
jp
inc
pop
xlat
add
cmpsl
scas
rorb
nop
jmp
jle
dec
lcall
adc
repz
jo
je
cmp
bound
ja
and
pushf
jl
xlat
shl
fnstcw
adc
mov
fildll
dec
xor
jl
jmp
pop
cs
pop
inc
iret
or
ret
scas
add
or
stos
sbb
push
fs
mov
mov
add
iret
je
dec
int3
movsl
in
add
add
fstp
inc
rclb
insl
rol
pop
add
dec
into
xchg
fstpl
lods
push
scas
iret
push
and
or
or
ja
fistps
imul
decl
push
mov
mov
push
aam
inc
cmp
xlat
xchg
sub
in
addl
je
mov
adc
arpl
and
rcr
shll
inc
int3
mov
xlat
popa
outsl
mov
hlt
push
test
shll
push
mov
loope
jae
inc
mov
or
mov
in
imul
push
mov
ret
sarb
add
push
in
mov
cmp
idivb
inc
mov
popa
xor
mov
cld
or
setge
scas
or
ljmp
fwait
nop
xlat
fwait
adc
mov
into
enter
xchg
adc
inc
imul
and
cmpsl
add
mov
cmp
mov
jnp
cmp
xchg
loopne
dec
bound
jb
push
xchg
repz
xchg
scas
jnp
cld
out
push
bound
sbb
in
int3
pop
lds
mov
imul
fs
nop
out
sbb
push
push
jnp
mov
gs
xchg
leave
sub
cmc
mov
pusha
mov
push
sub
jbe
aad
mov
movsl
jae
out
test
fnstenv
jno
or
mov
lods
sti
hlt
mov
loopne
sti
out
jp
mov
pop
sub
fwait
or
mov
lock
mov
lock
adc
mov
inc
cmp
cmp
mov
or
out
add
ljmp
adc
mov
ret
sarb
fadds
mov
shl
dec
nop
lret
sbb
out
xchg
fwait
cwtl
shl
sahf
mov
dec
push
test
xchg
test
and
das
in
nop
in
pusha
adcl
adc
ja
ds
stos
cmpsb
rorl
leave
mov
mov
mov
lcall
mov
mov
inc
mov
pop
push
loop
pop
out
jne
sbb
in
jp
xchg
push
sub
test
es
ds
inc
lret
lret
sbbb
xor
pushf
es
xchg
imul
mov
test
sar
jmp
push
out
mov
outsl
loopne
mov
jl
scas
mov
in
xor
inc
outsb
repz
jne
stc
mov
decb
cmp
lret
arpl
iret
xchg
fwait
xchg
fs
sbb
movsb
push
aas
lods
clc
mov
int
mov
pop
pop
mov
dec
int3
cmp
loopne
js
and
ds
push
jmp
rcrb
sbb
and
or
ss
jmp
mov
pop
mov
int
jge,pn
xchg
mov
in
int
mov
addr16
test
jp
mov
push
push
pop
lea
sub
mov
sbb
xchg
lock
xchg
int
fcmovbe
mov
pop
arpl
cmpsl
pop
scas
loopne
or
pop
aas
clc
mov
js
and
test
lahf
aas
decb
pop
sti
mov
jo
fidivl
repz
mov
ss
fucomi
mov
push
mov
mov
dec
and
and
dec
subl
mov
add
ss
push
psubq
xor
rorl
call
popa
jp
cmp
push
xchg
jne
mov
repnz
mov
push
mov
icebp
and
xor
rol
enter
fmul
xlat
push
lds
addr16
pushf
test
std
mov
xchg
and
jg
imul
or
jbe
iret
aas
mov
fucomp
sbb
ds
push
repnz
hlt
dec
push
xor
fstpt
xor
sahf
repnz
daa
test
jae
or
dec
sbb
and
cwtl
sbb
inc
mov
jb
pop
jo
movsb
sub
push
out
jecxz
test
or
scas
movsl
cmp
adc
adc
mov
mov
es
icebp
loope
sbb
mov
xchg
xchg
or
mov
or
sbb
mov
shlb
inc
ret
mov
push
mov
pop
rolb
pop
pop
shrb
adc
rcrl
xchg
pop
test
and
pop
mov
lds
inc
sub
scas
fwait
push
iret
scas
push
cltd
sub
mov
stos
inc
pop
loope
arpl
inc
sbb
and
push
push
push
icebp
adc
mov
jae
in
lahf
outsb
mov
repz
add
mov
sub
aaa
es
fdivp
mov
addb
xor
repnz
lds
test
dec
sbb
incb
outsl
and
push
xchg
bnd
cmp
sub
fisubrl
mov
xor
aam
mov
sarb
sbb
cmp
inc
mov
cmp
std
mov
fcmove
sub
xor
cmp
ljmp
dec
in
sub
inc
xchg
jg,pn
out
push
and
push
lahf
lret
icebp
cli
add
xor
cmpsl
push
test
xchg
add
add
dec
jl
sti
adc
es
pusha
lock
add
orb
enter
pop
cli
loopne
xchg
mov
call
shlb
roll
lcall
mov
add
fldcw
daa
cmp
push
dec
loope
rolb
bound
xchg
out
cmpsl
inc
sub
lds
push
cmpsb
xor
mov
ja
inc
aad
js
or
in
mov
cmp
test
outsl
adc
pop
stos
inc
fisubl
cli
fisttpll
and
mov
xor
and
pop
push
add
xchg
and
stos
xor
out
and
shll
xchg
add
lock
pop
jne
xchg
ljmp
sub
pop
insb
mov
movsb
adc
dec
out
rep
xlat
pop
inc
xchg
fdivl
sarl
in
dec
popa
popf
inc
and
js
movsb
arpl
mov
aam
out
sub
or
subb
mov
sub
cli
mull
jnp
out
fdivrp
pop
jne
cli
imul
push
lret
rcrl
loop
cmpsl
out
xor
stos
cmp
enter
adc
out
pop
lea
adc
mov
fs
lcall
cwtl
cltd
addr16
add
mov
push
cmpsb
jne
ficoml
clc
and
jb
cmp
push
lods
std
push
enter
bound
or
push
hlt
xchg
in
cltd
dec
push
jecxz
in
rol
das
or
cld
test
xor
roll
push
int3
xor
sar
js
dec
pop
push
lds
insl
xor
xor
jg
je
cmp
int3
cmc
and
divb
jb
sbb
inc
push
aad
inc
push
pop
ljmp
fldt
xchg
jae
mov
ja
push
pop
aaa
xchg
jbe
nop
lock
test
mov
mov
adc
ss
out
movsl
adc
lcall
fcmovbe
outsl
shrb
jmp
adc
cmp
xor
filds
sbbl
shrl
ret
nop
test
fcoms
jno
les
les
mov
sub
mov
or
fyl2x
adc
fmuls
cmp
push
test
dec
aad
adc
adc
xor
mov
shl
inc
xchg
loope
pop
dec
inc
jae
stos
out
and
sbb
cmp
push
rcrl
fisttpl
mov
dec
addr16
adc
mov
pop
ja
sbb
or
sbb
pusha
jne
into
push
cld
stos
shll
dec
inc
in
add
in
and
repnz
jecxz
divb
jo
enter
jb
xchg
push
data16
jno
daa
cltd
test
cmpsb
faddp
roll
imul
scas
int3
dec
push
jb
and
push
mov
adc
push
scas
jne
dec
dec
cld
sub
scas
sbb
or
aaa
push
pushf
inc
sub
cmp
sbb
aam
icebp
mov
das
cwtl
fildll
mov
cmpsb
sbb
out
shr
scas
xchg
aaa
mov
xor
mov
shrb
adc
mov
les
fidivrs
mov
frstor
dec
cmp
ret
mov
ds
icebp
mov
sbb
repnz
cmc
repz
arpl
add
aaa
daa
es
inc
xlat
shll
out
push
fcoms
in
bound
mov
inc
mov
mov
nop
cmp
and
jmp
shl
outsb
inc
test
dec
pop
xor
push
sahf
js
pop
cmp
ffreep
mov
lock
pop
loope
xor
addl
mov
and
pop
mov
negl
pop
mov
mov
or
fistpll
and
arpl
push
sarl
inc
mov
es
mov
inc
dec
lret
mov
add
movsb
pop
cmp
ljmp
sbb
out
sub
or
push
sarl
mov
jb
lea
inc
in
push
nop
in
jle
insb
xchg
pusha
and
jg
imul
cmp
insl
ret
push
add
fsubrl
jae
cmp
sbb
add
jp
nop
fiadds
sbb
inc
xor
push
mov
mov
call
loopne
sub
lret
mov
pop
mov
in
add
dec
xor
inc
sbb
lahf
clc
outsb
jb
repz
push
cmpsb
test
xor
mov
out
and
jge
and
pop
scas
mov
cmp
aam
addl
fadds
int3
addr16
inc
mov
cmp
mov
adc
out
add
stc
mov
fists
dec
jno
ret
mov
pop
outsb
jo
xchg
aam
movsl
push
mov
inc
xor
cmc
jno
int3
cltd
imull
push
aaa
xorb
push
in
sub
xor
dec
pop
xor
dec
loopne
call
mov
and
cwtl
push
mov
add
add
rorb
jo
shrb
adc
adc
inc
push
pop
xchg
mov
in
int3
mov
mov
jns
out
movb
dec
xchg
ja
jecxz
imul
pushf
mov
sarb
adc
roll
pop
lret
daa
insl
push
push
jecxz
aad
popa
or
stos
dec
jnp
ljmp
loop
test
cmpsl
adc
sbb
ja
gs
mov
and
subb
cs
mov
cmpsl
minps
inc
and
scas
sbb
mov
or
dec
cmp
push
or
xor
shll
pop
xor
aaa
lock
pop
jmp
loopne
sbb
icebp
or
cs
cmp
mov
and
fisubl
push
cli
push
mov
scas
decl
cmp
xor
mov
in
jmp
mov
or
mov
xchg
mov
mov
push
and
sub
movsl
dec
ret
add
push
lods
imul
iret
pop
fcomps
dec
xor
mov
clc
lods
repz
cmpsb
mov
jg
fcmovb
push
sahf
xchg
mov
sub
xchg
addr16
shll
dec
icebp
cmp
arpl
or
in
fists
or
pop
repnz
pop
lahf
cmc
push
mov
imul
nop
ds
push
or
mov
dec
jl
enter
mov
lret
or
stc
fwait
call
push
lods
xchg
sbb
pop
leave
mov
fsubl
popa
dec
mov
test
sub
pusha
fstl
lock
in
mov
pop
aaa
ficoms
daa
arpl
mov
jg
imulb
cltd
ja
fs
imul
sbb
out
xor
rcrl
sti
iret
das
jp
iret
inc
mov
iret
fidivl
xchg
rolb
scas
xor
fdivs
popa
into
cli
inc
fwait
imul
sarb
unpcklps
stos
xor
xchg
pushf
sub
push
cmp
and
sub
repz
cmpsb
je
mov
loopne,pn
sbb
das
inc
pop
leave
mov
and
xchg
stos
push
and
pushf
into
add
mov
arpl
insl
mov
push
rcl
div
add
shlb
call
xchg
std
sarb
pop
jns
leave
dec
flds
mov
add
sub
cs
add
fidivrl
adc
adc
add
cmp
fisttpll
pop
push
out
lods
jne
pop
push
cmp
inc
andl
mov
shufps
mov
int3
repnz
adc
popa
ror
inc
pusha
loope
jbe
bound
xchg
dec
fidivs
fsubrs
lods
mov
popf
or
icebp
ds
add
in
movsl
popf
enter
sbbl
test
mov
cmp
and
push
add
stc
out
dec
lods
cltd
js
adc
nop
mov
xor
mov
lods
ds
push
add
xchg
fucomp
add
cltd
pop
adc
test
pop
popa
rolb
push
popl
cwtl
js
rolb
dec
call
xchg
repz
and
sti
imul
les
in
lcall
add
bound
dec
stos
mov
cmpsl
or
push
push
jae
inc
jg
pop
cmp
iret
push
imul
push
hlt
add
cld
mov
ret
addb
ret
loopne
sti
push
or
aam
sbb
pop
xor
or
push
fimuls
hlt
in
ficoms
sahf
mulb
movb
or
dec
or
popa
mov
cmp
icebp
cmpsl
or
aas
mov
pop
mov
adcl
mov
pop
int
pushf
or
sub
lret
jns
or
dec
pop
es
loop
mov
pop
jo
xor
cwtl
insl
pop
xchg
ret
adc
mov
and
sub
fidivl
dec
mov
in
pusha
enter
iret
fs
mov
mov
jbe
cmp
jmp
enter
push
cmp
dec
pop
push
lds
jmp
xor
bound
fisttps
test
sub
push
and
xchg
add
cld
aam
sub
int
fsubrp
lds
xchg
fs
aaa
cmpl
cmp
out
hlt
xchg
cmp
je
dec
sarl
adc
mov
and
push
sti
orl
fs
and
cmp
inc
push
outsl
in
jecxz
jno
lods
sub
xchg
cli
xlat
fimull
mov
push
test
das
in
cmpb
mov
jns
divl
cli
arpl
mov
pop
push
mov
cmpsb
cmp
xor
clc
fstpt
test
insl
ljmp
popf
jecxz
dec
scas
sarl
mov
test
es
in
loop
int
cltd
int3
or
mov
arpl
loope
shlb
pop
lahf
lret
mov
iret
push
mov
fwait
js
test
jo
cltd
mov
adc
dec
in
mov
cmc
arpl
daa
inc
lcall
cmp
arpl
xchg
into
jg
and
and
or
sbb
mov
xchg
dec
cmpsl
mov
adc
pop
push
add
in
xorb
sub
ja
or
dec
add
ljmp
les
sub
xor
jno
mov
sub
lods
and
xor
or
jae
inc
lods
lret
xor
aam
movsb
mov
div
daa
in
mov
jl
decb
aas
hlt
fimuls
mov
out
jno
push
push
test
loopne
jo
inc
add
mov
daa
xchg
pop
xchg
test
mov
sahf
mov
add
and
pusha
or
or
mov
mov
mov
test
or
mov
push
ja
mov
xor
push
cltd
push
push
into
push
shll
icebp
and
xchg
jle
xchg
lods
mov
lds
stos
pop
cmpsb
inc
push
jmp
sti
cmpsb
fisttps
cmp
dec
fs
outsb
xlat
stos
sub
lock
mov
xchg
aas
xchg
dec
fbstp
pop
dec
mov
inc
out
cmp
int3
lods
xor
lods
les
fmul
mov
cmp
aad
mov
hlt
adc
lods
and
fnstcw
or
addl
or
pop
xor
add
pusha
test
add
sub
call
mov
add
fisubs
leave
jae
cmpsb
je
xchg
lock
cltd
inc
inc
dec
lock
sbb
mov
shlb
add
mov
outsl
hlt
je
mov
pop
jae
mov
ds
shrb
push
notl
lea
data16
jno
xlat
into
mov
push
xchg
fstpl
loop
xchg
fwait
jmp
cmp
in
mov
push
cmpsl
xchg
fcmovnbe
test
inc
inc
push
xchg
push
push
push
mov
fwait
inc
pop
or
pushf
ficoml
pop
jle
repnz
dec
xchg
adc
xlat
dec
xchg
arpl
pop
scas
jp
rolb
xorb
and
popf
jl
cli
out
ret
shlb
test
aas
sub
into
dec
rclb
sub
stos
xor
and
add
push
ljmp
les
inc
das
jne
jb
sti
mov
imul
test
imul
int
out
mov
es
repz
pop
mov
sti
aas
icebp
test
jo
adcb
sbb
movaps
test
lahf
ss
push
stos
les
and
inc
movsl
xchg
into
dec
hlt
mov
insb
push
mov
adc
jb
cmc
stos
xor
dec
sub
shl
cmpsl
xchg
xor
loop
mov
push
cwtl
or
xor
dec
fnstcw
sahf
push
daa
repnz
popa
xor
jno
sub
adc
or
jo
loope
cmp
stos
dec
xchg
xor
mov
aas
cmp
add
dec
or
fldt
sbb
movsb
std
sub
fldt
xor
shr
pusha
bound
test
ss
cld
mov
jae
xchg
cmc
push
pop
pop
test
test
cwtl
jge
dec
pop
xchg
push
stos
dec
fldt
lock
xor
xchg
mov
jmp
ret
or
and
loope
mov
insb
mov
cmpsl
test
test
sahf
mov
aas
cmp
dec
inc
push
mov
jmp
pop
pop
hlt
push
xchg
sti
xchg
pop
inc
repnz
push
mov
insb
rolb
and
xor
sbb
adc
mov
mov
call
movsb
in
xchg
aas
cmpsb
push
jmp
mov
jge
sarb
aam
scas
out
inc
mov
xchg
push
fisttps
pop
or
sub
mov
fistpl
push
push
mov
jns
mov
jns
aaa
cltd
mov
mov
and
jge
push
lods
fisttpll
sbb
test
xor
pop
outsl
jecxz
and
stc
xchg
insb
repnz
dec
mov
into
dec
leave
pop
pop
fstps
and
daa
les
xchg
cmpsl
jecxz
push
out
jmp
orl
inc
int
cmp
mov
lods
mov
sbb
xor
mov
and
xchg
add
fsubs
jmp
mov
jne
mov
adc
aad
pop
leave
inc
add
xor
jnp
clc
imul
stos
lcall
add
insb
mull
sub
pushf
or
push
pop
imul
int3
mov
sub
push
imul
mov
sti
mov
add
je
in
pop
ljmp
mov
iretw
mov
push
out
int3
xchg
shlb
dec
dec
decl
cli
push
mov
xchg
jmp
lods
icebp
xor
out
push
fcoms
xor
xchg
mov
hlt
cmp
lret
pop
aad
dec
jmpw
adc
mov
add
xchg
dec
jnp
sub
mov
cmpsl
sbb
out
int
stos
pop
jnp
clc
jbe
jge
lea
sbb
mov
xchg
imul
push
subl
push
rclb
mov
adc
cmp
shl
pop
test
dec
out
popa
push
lods
icebp
js
push
pop
jnp
jne
jg
adc
adc
pop
movsb
iret
xlat
rorl
or
rcrb
sbb
pop
sbb
or
xorb
mov
xor
push
pop
ljmp
pop
push
mov
mov
dec
scas
ret
movsl
mov
test
mov
nop
mov
ja
dec
lods
or
jp
mov
dec
xchg
cmc
xor
in
jecxz
test
in
cld
and
aaa
adc
rolb
mov
add
pop
ljmp
pop
dec
mov
sbb
mov
xor
adc
test
mov
mov
gs
fs
out
and
out
das
xchg
adc
push
ja
stc
pop
es
sub
mov
jne
pushf
cmp
push
and
mov
sti
or
cmpl
jo
mov
and
xor
outsl
jns
dec
jo
pop
dec
outsl
test
sub
inc
pop
test
out
mov
aad
inc
bound
pusha
cmp
mov
jb
fdivrl
ja
lods
pushf
mov
mov
mov
or
sbb
pop
mov
mov
sbb
mov
repnz
push
xchg
xor
fidivl
push
add
pop
repnz
xor
cs
or
add
push
imul
adc
cmp
out
and
in
sbb
jecxz
js
cwtl
jp
mov
hlt
jnp
push
mov
lcall
int
leavew
lods
lret
mov
out
or
mov
xchg
sub
sbb
mov
sub
callw
das
aas
stc
xor
dec
jge
or
xchg
dec
jmp
push
mov
sbb
repz
sub
frstor
cmp
sub
sbb
fbstp
push
faddl
mov
and
or
bound
cmc
xor
ss
in
pop
or
rcrb
out
mov
or
sub
sbb
xlat
lea
cmp
mov
std
jl
nop
out
fsubrs
mov
out
fs
sbb
push
pop
les
das
fisttps
outsb
cmpsl
mov
fldenv
cs
enter
mov
ljmp
lea
xor
inc
jl
cmp
cmp
loope
jnp
decl
xchg
or
dec
and
push
addl
std
pop
push
pop
lock
test
mov
lock
inc
lret
xchg
xchg
sahf
fdivp
pop
ss
lods
xor
jns
adc
lcall
loopne
cmpsl
sahf
lcall
inc
and
sbbl
pop
shl
arpl
test
loope
fcmovb
add
jnp
xchg
and
or
jle
dec
push
je,pt
test
mov
xchg
mov
subb
xchg
pushf
rep
mov
inc
mov
loope
fisubl
mov
cmp
enter
mov
mov
push
sbb
lahf
mov
jae
jae
cltd
aas
mov
stos
jno
shlb
xchg
jae
inc
lds
xchg
xchg
pop
cmpsb
mov
arpl
leave
pop
sbb
in
insl
mov
mov
xchg
fsubrl
mov
adc
dec
or
add
pop
xchg
xchg
mov
leave
jge
and
add
aaa
fcmovu
es
xor
std
popf
in
rcll
fcmovnb
mov
pop
imulb
mov
xchg
push
sub
mov
jge
shrl
pop
and
jnp
push
inc
dec
test
push
ds
push
push
sbb
mov
pop
in
mov
pop
jnp
fdivr
jl
jbe
fsub
cmp
push
xor
ret
in
aas
dec
divl
nop
rcl
adc
add
sub
push
jmp
pop
js
aam
jecxz
dec
xchg
fisttpll
jno
insl
dec
pop
inc
mov
outsl
shl
test
lea
fstps
inc
cmp
sahf
adc
ss
sar
add
sti
sahf
test
and
fmuls
mov
jne
or
mov
inc
jbe
xor
dec
inc
dec
aas
bound
xlat
insb
dec
and
nop
mov
jnp
mov
inc
out
lods
sub
dec
scas
sahf
out
mov
stos
mov
or
push
data16
sub
pop
mov
adc
daa
rcl
push
xchg
push
dec
mov
nop/reserved
push
rclb
add
inc
int
stos
jg
dec
stos
stos
xchg
out
mov
sbb
and
cmp
xchg
mov
cltd
sub
sub
scas
mov
sub
add
sbb
scas
mov
and
cltd
repnz
mov
xor
xchg
icebp
xor
mov
mov
cmp
and
fnstenv
sub
cmp
pop
mov
lret
jle
aam
mov
das
xchg
pusha
shll
sub
cmpsb
loop
and
ret
mov
adc
xchg
test
add
ljmp
cmp
sbb
mov
jmp
push
push
fildll
sbb
shr
jnp
mov
jb
sub
mov
xor
push
out
add
cltd
aas
lcall
cmp
mov
daa
add
xchg
sarl
outsb
sub
into
dec
xchg
cmp
es
jns
adc
xchg
aad
inc
roll
outsb
int3
cmpl
sbb
mov
jnp
aam
xor
shr
stos
repz
stos
cmp
adc
in
inc
cwtl
bound
outsl
pop
xchg
mov
sub
or
fwait
pop
imul
hlt
add
int3
mov
idivb
jbe
sub
inc
jo
mov
mov
das
loopne
cwtl
cmp
iret
fildll
jmp
nop
mov
in
mov
fs
and
imul
jle
pop
cmpl
iret
dec
dec
sahf
push
sbb
outsb
es
aas
lcall
sub
xor
xchg
data16
stos
mov
pusha
pop
mov
test
repz
popf
iret
ljmp
mov
add
imul
mov
loopne
inc
adc
and
in
cmc
mov
mov
test
push
mov
aad
clc
stos
clc
inc
aam
sbb
mov
fnsave
jl
inc
sahf
sub
dec
push
test
pop
xor
stc
lods
xor
cmp
xor
das
jp
and
scas
sub
js
jmp
cmp
sub
and
inc
mov
pushl
sub
mov
scas
jle
aas
jp
and
mov
nop
push
cmpsl
mov
bound
scas
jnp
or
add
aam
jo
sbb
ss
imull
insl
les
inc
repnz
rcrb
mov
xor
cmp
insb
stos
xchg
repnz
int
in
mov
mov
int3
push
jge
xchg
pusha
dec
push
repz
jle
popf
cmp
add
data16
nop
cltd
or
mov
je
enter
pop
aaa
and
pop
add
push
stos
popa
mov
cli
dec
cli
test
or
cs
arpl
pop
iret
adc
mov
bnd
mov
ret
andl
outsb
sbbb
stos
pop
push
ret
js
cltd
pop
scas
outsl
push
pop
les
adc
cmp
fucomip
inc
icebp
out
pop
leave
add
inc
test
pop
adc
rcl
push
clc
push
mov
or
idivb
add
adc
inc
test
cmp
cmp
lcall
loopne
sbb
es
repz
aad
mov
aad
enter
xor
cli
mov
jp
icebp
cmpsb
dec
mov
and
adc
stos
fistps
pop
and
daa
inc
inc
jge
push
cwtl
push
mov
pop
xchg
cli
or
sub
jg
adc
jle
icebp
jbe
daa
fnstcw
pop
unpckhps
insb
in
fstl
inc
je
nop
sub
cmp
inc
jb
pop
add
cmp
addl
inc
lcall
outsb
xchg
adc
adc
sbb
push
std
push
or
gs
aaa
mov
dec
adc
or
mov
pop
fisubl
insb
stos
or
add
jbe
cmc
add
rorb
imul
jnp
pop
sahf
mov
fmuls
and
pop
pop
lock
sbbl
mov
shrl
inc
es
cltd
lods
mov
pop
mov
movsb
or
push
mov
and
push
xchg
sbb
aaa
sbb
sub
or
scas
cli
push
inc
movsb
js
outsb
fidivl
ja
inc
or
add
ret
arpl
popf
push
adcb
inc
stc
xchg
jecxz
xchg
lds
jp
inc
lret
outsl
out
je
aas
and
sub
xchg
xchg
fs
cmc
mov
cmp
adc
push
push
loope
add
aam
rcrl
and
mov
movsl
jmp
mov
lahf
movsb
call
mov
adc
popl
mov
pop
pusha
cmpsl
lock
lret
roll
mov
test
add
push
and
psllw
xchg
cmpsl
and
mov
shll
arpl
cld
hlt
adc
adc
pop
aam
xchg
mov
xor
adc
xlat
inc
mov
ss
fucom
jne
sub
xor
or
mov
out
lret
test
add
in
lock
mov
ret
stos
sub
jo
mov
mov
popf
dec
push
adc
jp
xor
or
mov
lret
adc
xchg
adc
js
push
pop
aas
jp
lahf
jbe
and
lahf
daa
cmp
xlat
pop
cli
lcall
jecxz
inc
out
js
shrb
lock
adc
and
mov
dec
jecxz
jbe
push
mov
xchg
pop
lock
lods
and
cmp
and
insl
and
xor
mov
outsl
lcall
and
mov
jle
lods
loopne
push
addr16
pushf
xor
xlat
mov
dec
pusha
dec
xchg
push
subb
lock
sahf
aam
xchg
jns
dec
pop
xor
mov
sbb
add
test
inc
pop
loopne
bnd
out
inc
cld
stos
mov
sub
jl
pop
fldt
cmc
adc
dec
scas
fistpll
mov
jns
cmp
arpl
xchg
mov
test
shrl
nop
sbbb
add
cmp
jne
data16
xchg
lret
cld
xor
movsb
and
repnz
jecxz
add
mov
sbb
iret
sahf
loopne
inc
and
dec
mov
in
sar
icebp
sub
loop
outsl
xchg
sub
mov
inc
adc
pop
cmp
xchg
sarl
jno
mov
mov
mov
xchg
jns
dec
pop
out
lods
jecxz
fwait
push
sub
insl
shl
repz
sub
xor
xor
add
and
clc
xor
mov
mov
stos
sbb
and
mov
scas
rcr
inc
xor
subb
ss
lds
movsb
inc
cmp
adc
push
pop
jb
jb
inc
lcall
icebp
dec
dec
out
and
out
outsb
nop
push
xchg
dec
adc
cld
aad
cmpsb
cmc
xchg
add
push
loope
lods
ljmp
mov
adc
lods
or
xor
je
dec
and
fst
out
push
or
adc
test
rolb
jb
cmp
call
gs
mov
aam
pop
loope
inc
xor
in
imul
sbb
movsl
test
dec
mov
jno
fs
adc
xchg
test
aas
add
xor
gs
mov
add
dec
rcrb
pop
popf
pop
test
add
cmp
mov
pop
dec
mov
add
in
push
inc
bound
mov
fidivl
push
or
pop
adc
js
xchg
push
sahf
mov
push
sub
push
push
addr16
out
xor
sbb
jmp
cmp
sub
xchg
repz
std
mov
jne
xor
or
push
inc
or
repz
sbb
mov
lea
mov
adc
sub
mov
data16
insl
dec
in
mov
adc
add
mov
hlt
inc
das
mov
mov
jns
xchg
arpl
push
push
pop
xchg
ret
clc
push
and
test
cmc
popl
fsubr
jbe
stc
adc
dec
fcmovu
jle
out
decb
fidivs
pop
or
lods
push
cmp
push
xor
int
adc
pop
push
xchg
int3
lcall
jno
cltd
addr16
insb
pop
out
fmul
imul
js
insl
adc
lahf
stos
rol
inc
das
icebp
leave
sub
lcall
sbb
mov
sbb
mov
mov
sbb
and
negb
rcr
inc
or
ds
and
mov
adc
mov
adc
cmp
clc
outsl
sub
push
xchg
nop
xlat
test
xchg
test
icebp
push
pop
xchg
jp
push
mov
sarl
stc
rclb
mov
imul
rorl
jmp
mov
inc
mov
sbb
loope
mov
cmp
stc
fstp
or
or
push
push
push
adc
pushf
push
dec
inc
rclb
pop
fbld
out
dec
mov
jmp
lret
jle
inc
loop
ficompl
dec
dec
jl
lods
repnz
cmp
pop
mov
or
outsb
ret
adc
int
adc
and
xlat
xchg
jo
stos
out
mov
imul
mov
fildll
leave
sahf
sub
push
fbld
mov
fcmovnu
movsb
jecxz
aas
lret
dec
sbb
pandn
xchg
inc
ficoml
test
sbb
jmp
gs
xchg
leave
mov
pop
sbb
push
ds
adc
cld
inc
jo
push
test
fnsave
and
inc
dec
mov
cmc
bound
or
rorl
sbb
or
cli
pop
cmc
xor
repnz
push
rolb
or
xchg
adc
pop
and
clc
adc
adc
repnz
and
mov
sub
sbb
sub
mov
mov
cmc
lret
jno
dec
xor
lahf
cvtdq2ps
cmp
outsl
sbb
insl
mov
cli
xchg
pusha
add
pusha
mov
inc
pop
push
push
adc
roll
inc
xor
sbb
daa
or
cmc
shr
cli
shlb
cmc
xor
jl
orl
pushf
and
jg
mov
mov
dec
loope
adc
mov
pop
or
lock
xchg
cs
scas
mov
xlat
adc
rorb
pop
sbb
insb
mul
mov
das
nop
loope
das
iret
stos
test
js
cmpsb
pop
dec
movsl
call
push
or
orb
cmp
sti
orb
mov
jle
shlb
push
in
inc
aam
push
jp
sbbb
ljmp
sbb
cmc
hlt
xor
je
mov
pop
in
jo
hlt
and
jg
add
pop
and
and
lea
mov
insb
cmpsb
adc
and
repnz
gs
cmpsl
ror
or
jle
mov
data16
lcall
push
jnp
repnz
xorl
mov
or
pop
and
dec
push
inc
pop
jecxz
scas
ja
in
movsl
clc
movsl
jno
leave
jp
and
icebp
mov
push
sub
mov
cltd
sbb
adc
pop
push
xchg
push
or
test
stc
inc
inc
jge
in
outsl
addr16
addb
add
pop
outsl
mov
dec
fistl
xor
outsb
rolb
or
push
sbb
adc
stc
jg
mov
push
pushf
sub
inc
mov
bound
mov
test
sbb
xor
roll
and
cmp
add
or
sarl
daa
addr16
mov
dec
mov
cmpsl
push
shrl
lret
jge
mov
mov
cwtl
cmp
cli
aam
cmp
dec
mov
movsl
mov
repnz
inc
dec
mov
pop
lds
out
xchg
jmp
pop
push
dec
leave
inc
xchg
or
or
and
mov
stos
mov
inc
sbb
push
int3
sbb
and
cwtl
adc
mov
lods
bound
cld
dec
fstpl
xchg
je
sub
dec
xchg
inc
xlat
out
in
push
ficoml
jg
out
adc
jecxz
je
enter
sub
in
and
mov
loop
cmp
cmp
incl
into
call
movsb
lret
mov
test
fists
mov
adc
repz
lods
xor
jae
cmp
cmp
fs
lret
fistps
and
loopne
test
sarw
add
push
ficomps
jbe
mov
xchg
ret
mov
je
jb
les
les
push
cmc
out
mov
test
adc
js
imulb
pop
hlt
jae
mov
sub
sti
xchg
fsubrs
orl
pop
mov
aas
in
ss
or
aas
xchg
sub
in
and
shl
xchg
nop
lret
adc
inc
mov
mov
fdivrl
dec
inc
mov
dec
ljmp
cmp
adc
adc
fstps
cmp
testb
push
addr16
shr
movsb
mov
adc
aad
jmp
out
and
mov
popa
imul
push
adc
insl
mov
insl
jmp
push
stc
mov
xor
inc
mov
xor
repz
cli
mov
invlpg
scas
outsl
jae
xchg
out
dec
xchg
and
jns
int
insl
pop
mov
fisttps
leavew
mov
sub
ds
aaa
mov
int
jp
imul
rorb
ljmp
insl
dec
into
push
clc
icebp
loop
sbb
jbe
pusha
les
fs
jnp
jmp
or
fimuls
cmp
aaa
icebp
push
cmpsl
and
mov
leave
cld
in
mov
mov
jbe
and
lcall
pop
pop
fldl
pusha
mov
xor
sub
addl
jge
mov
push
icebp
sub
mov
mov
test
xchg
or
cs
ljmp
inc
cwtl
add
xchg
cmp
and
in
data16
cmp
aad
imul
popf
jmp
xchg
ja
add
mov
iret
and
adc
inc
inc
xchg
js
lods
test
xchg
or
popf
mov
xchg
movsb
sbb
test
leave
fisttps
pop
ja
adc
hlt
neg
mov
mov
push
int
sub
jb
das
fdivrs
xor
les
mov
in
mov
jns
adc
popf
mov
gs
pop
mov
movsb
pop
xor
adc
xchg
mov
cmpsb
and
push
sarb
fdivrl
fiadds
cmpsl
jne
mov
ljmp
stos
mov
aam
inc
pusha
jns
sarb
lea
testl
cmpsb
push
inc
les
clc
inc
push
push
mov
adc
mov
pop
sub
leave
ficoml
cs
nop
ret
ljmp
scas
pushf
push
or
ret
pop
lock
loope
mov
fcomps
add
int3
mov
add
daa
push
bnd
cmp
cmp
xor
lods
nop
mov
sbb
mov
mov
add
rol
pop
mov
mov
xor
push
pushf
adc
pop
hlt
xor
test
loop
pshufw
push
inc
pop
jno
cmp
sar
mov
shr
dec
and
dec
lret
movsb
or
mov
mov
stos
cmp
xor
loopne
jp
arpl
mov
xchg
xchg
xlat
jecxz
mov
xchg
mov
roll
clc
fs
inc
and
subb
add
fnstenv
mov
nop
dec
repz
cmp
push
adc
sub
or
call
mov
push
dec
adc
test
and
dec
push
or
lds
in
fildl
cmpsl
mov
test
roll
mov
stos
dec
dec
in
fnstsw
scas
jge
and
sahf
xrelease
mov
mov
int
loop
imul
xchg
cltd
adc
icebp
pop
jb
aaa
fisubrs
andb
hlt
dec
pushl
and
mov
int
mov
mov
mov
loope
cwtl
imull
push
push
mov
pop
xor
subl
test
testb
test
arpl
push
loope
dec
pop
sbb
jle
and
pop
dec
enter
mov
lds
push
sbb
mov
jne
dec
mov
sti
push
test
loope
lahf
xchg
xchg
pop
out
cmp
inc
or
bound
loop
sahf
dec
and
pop
repnz
add
inc
jb
sti
loop
out
rorl
cmp
out
ja
in
mov
and
dec
scas
push
test
xor
jg
xchg
movsb
lret
stc
xor
mov
ds
adc
xchg
xor
sub
outsb
add
add
std
pusha
mov
lods
xor
nop
pop
lock
sbb
repnz
lea
ret
pop
std
mov
test
xabort
cmp
insl
mov
lods
push
scas
xchg
inc
jp
jno
mov
jge
mov
xorb
xchg
in
cmpsb
rcrb
jno
push
orb
cli
ss
pop
incl
aas
ds
sbb
adc
mov
lods
push
inc
sti
mov
andb
inc
test
cmpsb
hlt
xchg
sarl
push
push
mov
clc
push
fs
mov
jo
mov
pop
adc
xchg
push
rcll
loop
or
jnp
dec
dec
adc
out
psubusb
adc
push
js
das
xor
add
loope
mov
mov
call
mov
js
sti
aas
stos
mov
or
sbb
dec
jne
enter
push
loope
jecxz
das
cmpsl
adc
or
mov
fstp
xor
xchg
test
sub
cmpsb
int
rcrl
stos
adc
cwtl
xlat
jae
and
popa
dec
test
inc
jbe
test
pop
sbb
pusha
and
adc
fcoms
xor
in
mov
and
mov
or
dec
sti
pop
iret
mov
mov
popf
lds
and
adc
psubb
cmp
dec
mov
es
test
ss
mov
adc
daa
fcoms
adc
adc
push
mov
inc
mov
inc
jbe
xchg
pop
rolb
inc
shlb
adc
stc
pop
cli
inc
and
inc
push
lea
movl
cs
das
or
pusha
cmpsb
sti
push
cs
vphaddbd
mov
and
lret
push
adc
call
data16
pushf
mov
jge
popf
ficoml
outsl
out
push
and
mov
lock
dec
hlt
fwait
jae
je
and
je
aad
movsl
iret
dec
mov
push
bound
xor
ret
adc
scas
inc
xchg
dec
xchg
stc
dec
jmp
ds
arpl
cld
mov
fimull
shlb
pusha
jne
dec
sub
and
icebp
jecxz
push
in
cwtl
add
mov
cmp
lods
add
aas
fmuls
hlt
xchg
or
xchg
add
int
insl
jmp
pop
popa
push
imul
sub
jmp
mov
int
push
mov
xor
sbb
adc
out
out
mov
mov
jo
fiadds
ret
push
aam
pop
cs
outsb
in
cmpsb
stos
pop
xor
sbb
ja
mov
xor
nop
push
sbb
imul
push
roll
scas
fwait
icebp
mov
cmpsb
xchg
lock
mov
insb
dec
or
and
inc
fisubs
leave
adc
cld
test
aad
or
sub
stos
pop
out
dec
xchg
ds
sahf
fucomip
inc
sbb
push
pop
mov
ret
sub
test
sbb
int3
icebp
jbe
push
mov
idivb
push
mov
pop
xor
lahf
cmp
xchg
pusha
loope
pop
and
dec
jae
mov
scas
and
jecxz
cwtl
jmp
mov
cmp
ds
cli
inc
pop
dec
loopne
mov
and
je
jge
stos
xchg
pop
pusha
sub
adc
add
roll
jl
cmp
repnz
mov
pop
cld
lret
lret
cmpsb
and
in
xchg
adc
fdivs
xchg
jb
add
adc
in
sbb
shll
jle
gs
pushf
xor
or
dec
inc
sub
cmc
cmc
les
xor
xchg
cmpsb
and
adc
xchg
sbb
mov
pushf
in
adcl
sahf
mov
mov
dec
leave
mov
sbb
aas
popa
pop
lahf
add
scas
mov
jp
jbe
and
sbb
mov
xchg
repnz
pop
idivl
mov
push
add
sbb
leave
jmp
or
std
xchg
xor
outsl
and
mov
mov
lods
jns
jg
adc
cmp
es
mov
jmp
dec
mov
scas
adc
movsb
dec
xor
xor
out
jl
leave
add
lods
mov
cs
test
mov
push
loop
fimuls
dec
add
stos
mov
leave
addb
fmul
inc
add
incl
loopne
notb
fimuls
ljmp
jle
lods
out
int3
jle,pn
lds
and
and
sbb
adcl
sub
sbbl
inc
dec
cmp
stos
ffreep
mov
stos
popf
push
mov
mov
jle
adc
xchg
jbe
imul
and
les
mov
pop
mov
sub
sub
addb
push
subb
cmp
movsb
cmp
xchg
add
mov
adc
aam
mov
into
fdivrl
jae
jmp
mov
insl
js
push
and
test
push
mov
jnp
mov
dec
cwtl
or
loop
push
shll
out
xor
push
jbe
dec
loopne
push
or
mov
jno
aaa
cld
stos
push
out
rcll
mov
pop
mov
ss
mov
jns
aaa
or
xchg
jbe
inc
adc
notl
out
jmp
mov
test
popf
std
mov
xchg
enter
adc
xor
push
xor
or
mov
or
fwait
jp
mov
or
in
or
adc
mov
push
clc
sub
mov
cmpb
mov
xor
int
or
lret
jl
mov
mov
pop
inc
mov
adc
dec
jecxz
imul
adc
dec
test
popa
pop
ja
cmp
or
xor
cmp
mov
cmp
cmpsl
fidivl
mov
roll
cmp
mov
push
and
mov
xchg
sbb
shrb
rorl
cmp
loopne
adc
xor
scas
push
xor
divb
je
jb
das
push
sbbb
cli
pushf
pop
test
repz
push
js
aaa
lods
std
mov
lret
mov
fsubr
lods
pop
add
jns
pop
push
cltd
xor
push
rolb
xchg
loope
stos
jp
or
cltd
jecxz
mov
pop
and
lds
pusha
shlb
aas
adc
lods
inc
pusha
sbb
and
xorb
xchg
jo
inc
xchg
cmp
sbb
sub
imul
jne
or
adc
push
adc
cmp
gs
cmpsb
orb
xchg
jle
int3
mov
xchg
mov
add
push
sbb
jns
mov
inc
pop
sub
cmc
test
ret
inc
lret
lods
pop
pop
inc
mov
dec
jns
mov
inc
cmp
xor
fucomip
xchg
add
lods
inc
add
xor
add
mov
ljmp
mov
test
inc
adc
mov
loop
mov
int
fcmovb
popf
mov
scas
imul
aaa
jae
addr16
data16
in
stos
add
loope
out
adc
jmp
mov
push
arpl
js
leave
pop
xchg
sbb
stos
xorl
aam
mov
pop
cmp
cmpsb
jg
mov
sub
loope
ljmp
fcompl
daa
sbb
add
ss
cmp
xchg
xchg
lock
sub
mov
push
pusha
sub
and
or
mov
inc
into
or
iret
mov
lea
and
mov
pop
adc
loopne
add
and
mov
adc
notb
shr
add
xchg
dec
adc
pusha
push
out
xchg
fwait
nop
adc
shlb
mov
push
divl
xchg
scas
push
cmp
xchg
lret
dec
pusha
mov
mov
sub
repz
or
shr
dec
es
stc
mov
enter
cmp
xchg
cli
aad
rcr
mov
pop
mov
shll
insl
outsb
mov
add
rorl
inc
mov
add
sbb
or
cmc
repz
mov
sub
dec
pop
das
leave
or
sub
shll
mov
add
out
inc
out
jno
hlt
aas
fcompl
popf
sahf
push
outsl
mov
out
lcall
popf
icebp
dec
lret
sbb
cmp
xor
xor
xorl
sbb
mov
xchg
mov
fists
dec
pop
jae
jbe
ficomps
adc
lock
out
js
mov
je
mov
or
repnz
push
subb
shll
out
or
lcall
push
mov
orb
lcall
shrl
dec
add
cmp
jmpw
and
cmp
mov
cmp
test
or
fsts
fwait
addr16
fsubs
push
stc
xor
push
stos
out
jecxz
pop
cmp
lea
fs
or
rcrl
mov
out
xor
les
pop
ds
test
lods
loope
insb
adc
mov
jb
jg
int3
leave
lret
sub
mov
xorl
push
daa
repz
shll
push
mov
sub
rcl
ficoml
xchg
add
fcoms
add
xchg
les
in
mov
sbb
lods
jecxz
add
adc
cmpsb
pop
xchg
sub
ja
lcall
stc
popl
ret
cmp
xlat
inc
jae
dec
cmp
add
ficomps
cmp
in
rol
movsb
adc
dec
int
mov
outsb
add
bnd
adc
inc
lea
cmp
xchg
cld
dec
stos
mov
aaa
sarl
aas
leave
dec
lret
inc
hlt
repnz
mov
orb
cmpl
cld
mov
aaa
cmpsl
aas
dec
mov
cmp
dec
popf
push
xchg
xor
outsl
mov
jmp
movsl
lret
mov
sti
aad
xchg
std
lahf
sbb
mov
dec
cmp
jae
pop
and
and
dec
xchg
arpl
pop
cmp
xor
fists
icebp
popf
mov
int3
add
add
dec
icebp
jp
sbb
jb
jecxz
stc
pop
jecxz
mov
mov
mov
stos
push
pop
fnstsw
add
mov
cmp
mov
pop
and
iret
and
mov
cltd
stos
xchg
sbb
mov
mov
push
push
jp
inc
lret
shll
lcall
in
shll
inc
lods
sub
dec
adcl
enter
test
jl
repz
lods
ret
dec
or
sub
testb
int
push
inc
out
lock
lods
mov
add
or
push
inc
pop
loope
clc
nop
jg
mov
or
dec
scas
xchg
mov
ffreep
dec
mov
out
std
mov
insb
std
in
pop
pop
pop
lret
mov
out
dec
jle
add
cmpsl
mov
daa
out
shl
adc
add
enter
imul
xor
push
movsb
lahf
ja
subl
sub
testl
add
jbe
or
loopne
fs
push
loope
cmpsl
aad
push
fdivr
add
insb
out
popf
or
jns
stc
inc
or
das
jecxz
outsl
add
ret
lcall
and
push
mov
lea
ficompl
daa
sbb
lds
sbb
xor
lahf
es
not
adc
mov
cmp
dec
xor
cmpsl
mov
mov
stos
rorb
je
jo
lea
pop
xor
lods
leave
ficoml
shll
in
iret
xchg
cmpsb
inc
jecxz
clc
into
and
pop
jg
out
in
repz
mov
iret
stos
lock
fnstenv
lds
and
loop
or
add
dec
xchg
add
scas
andl
pushf
std
cld
icebp
out
jge
sbb
shll
mov
iret
sbb
and
dec
pop
jp
stc
sub
dec
xchg
bound
sbb
sub
fbld
aaa
add
std
inc
cltd
lds
xor
jbe
and
cmp
add
rorl
int
shl
in
pop
sarl
andb
sbb
pop
gs
and
adc
push
bound
test
add
ficoms
pop
pushf
imul
dec
les
fs
lcall
jne
cmp
jae
lods
outsb
add
xchg
and
push
jle
adc
pop
dec
jae
sarl
je
sbb
xor
mov
ss
lret
sbbb
xor
outsb
subl
lea
xchg
pop
inc
mov
mov
jle
enter
push
mov
leave
jmp
mov
enter
ja
or
into
dec
xlat
dec
push
jo
cmp
out
test
lahf
dec
push
arpl
jmp
xchg
out
mov
sbb
push
mov
mov
int3
cmp
and
inc
mov
daa
shrl
jmp
add
stos
lea
jo
cmp
fst
jge
outsb
pmovmskb
loope
ss
push
out
jmp
dec
in
outsb
mov
cmp
cmpb
mov
dec
push
popf
mov
xor
push
cltd
cld
jge
jmp
inc
out
int
inc
stos
cmp
inc
xor
push
or
sbb
jne
fistpl
adc
jecxz
ja
and
cmc
dec
outsb
jo
lds
pop
inc
xor
and
and
sbb
je
adc
pusha
jge
jmp
jmp
mov
pop
xor
or
fldl
sbb
mov
sbb
pop
ficoms
sbb
push
fs
out
push
cli
add
xchg
pop
xor
stc
dec
add
mov
adc
push
fbld
xlat
ljmp
mov
sbbl
or
js
sbb
pushf
jno
lcall
enter
dec
lods
jg
les
push
pushf
fimull
cmp
mov
ficoms
mov
orl
mov
xor
pop
addl
out
fwait
popf
movsb
sbb
push
jp
sbbb
jbe
loope
test
test
add
movsl
jo
stc
and
fists
div
adc
pop
scas
bswap
cmp
out
sbb
shl
adc
push
sbb
ret
mov
or
dec
ret
push
push
inc
shll
out
or
aad
xor
fdivs
xor
mov
mov
out
lret
and
addr16
mov
nop
cli
enter
cli
adc
push
cmpsl
adc
in
mov
and
lcall
push
pushf
imul
sub
insl
jg
pop
jno
pop
testb
adc
out
jns
dec
andb
imul
pop
mov
mov
neg
push
jbe
cmp
pop
push
aad
ljmp
jecxz
mov
insl
outsb
adc
xchg
clc
mov
inc
fdivrl
jmp
out
xor
mov
adc
jge
pop
xchg
cmp
repz
js
cltd
add
je
lret
sbb
mov
dec
and
cmp
or
xchg
xor
clc
add
je
xor
imul
daa
xor
popaw
jl
inc
push
mov
ret
rcrl
mov
mov
jg
adc
jno
lods
add
mov
jmp
xchg
notl
mulb
outsb
jecxz
test
fistl
mov
out
shrb
and
jp
out
and
adc
add
dec
icebp
pusha
stc
mov
xor
mov
xor
das
inc
sbb
mov
and
mov
add
out
fdivl
lods
dec
xor
or
sbb
movsb
xor
arpl
nop
test
aam
add
cmp
add
or
pushl
lea
push
mov
xchg
subb
dec
mov
xchg
push
jp
lds
outsl
cmpb
mov
xor
cmp
fcompl
fcmove
mov
push
int
mov
xchg
sbb
sub
cmp
daa
cmc
stos
inc
mov
xor
mov
push
sub
int
push
and
shll
dec
adc
dec
dec
popa
movsl
out
jae
mov
mov
cs
sti
stos
mov
popa
int3
pop
cmc
loope,pn
bnd
ss
sub
pop
rclb
mov
div
addr16
xor
xchg
mov
cmpb
ficoms
lcall
test
fcomi
fwait
or
fsubl
cmp
out
and
ss
divb
je
lods
push
lock
push
push
jp
sti
shlb
sub
inc
mov
cmp
lahf
insl
push
mov
push
inc
push
sub
push
in
out
shll
mov
lods
mov
mov
outsl
cmp
aas
pop
or
sti
cltd
pop
mov
jge
orl
push
js
daa
sti
mov
mov
test
add
ds
push
push
mov
je
xchg
xor
mov
xchg
mov
inc
call
in
xchg
fsubs
cmpl
sbb
xchg
pushw
lcall
dec
add
cmp
mov
mov
jge
movsb
cmp
mov
ret
mov
add
shr
sbb
mov
jno
fmull
pop
sub
int3
fisubrs
push
mov
enter
push
add
dec
imul
adc
sbb
stos
mov
pushf
mov
jo
inc
fildll
movsb
mov
pop
rcll
dec
std
mov
and
std
pop
mov
loopne
push
cmp
stos
gs
pop
sub
push
sub
cmp
cwtl
pushf
subl
in
les
mov
push
push
xchg
xor
jmp
test
add
int3
xlat
pop
call
and
lods
inc
iret
lock
insb
test
lcall
add
sahf
cmp
mov
stos
fisubs
shll
add
cmpsl
fistl
xorb
sti
ljmp
mov
adcb
fidivrl
and
sbb
sbb
or
lds
cmp
push
popf
cmpsb
sbb
and
and
enter
out
adc
mov
fsts
cld
dec
xor
xor
inc
aad
stc
mov
cmp
mov
test
aas
jbe
adc
icebp
sbb
jle
add
imul
or
push
or
in
mov
mov
sbb
mov
xchg
xchg
lret
jnp
mov
pop
xchg
outsl
rorl
adc
mov
dec
cwtl
lea
and
push
or
stc
test
jne
sbb
dec
aam
sbb
sub
adc
dec
jl
pop
aaa
popf
out
in
push
loope
inc
adc
call
add
sbb
mov
jns
push
pop
repnz
addr16
cmpsl
or
iret
test
loope
ja
pop
les
loope
inc
ds
mov
fistpl
ds
jo
cmp
pop
inc
sbbb
jge
mov
and
jnp
xor
fmuls
out
jl
fs
inc
adc
addb
jecxz
std
mov
pop
cli
pop
jbe
cmp
add
loopne
jns
pusha
mov
push
cltd
ljmp
fmull
xchg
fsts
outsl
pop
mov
repnz
scas
fnstenv
cmc
xchg
iret
dec
xchg
inc
mov
sub
js
lds
xchg
mov
dec
lret
push
imul
xchg
xor
test
jmp
clc
xchg
enter
sub
adc
stos
scas
movsb
jle
push
aam
push
je
iret
push
outsl
and
xchg
rcr
or
pop
fwait
hlt
roll
jecxz
mov
int3
leave
jp
xor
stos
loop
jge
enter
xor
add
out
xor
mov
and
add
xor
dec
ret
icebp
push
dec
mov
mov
shll
out
lods
mov
in
mov
push
push
xorb
or
mov
inc
push
and
adc
idivb
call
fsubrp
xor
sub
add
pop
fimuls
arpl
add
push
add
sub
push
push
jle
or
mov
mov
fildll
notb
adc
call
mov
sahf
rcr
jo
or
push
push
fmull
add
jmp
push
daa
incb
stc
fwait
xor
xchg
dec
mov
jl
loope
and
cmp
and
movsl
mov
lahf
stos
pop
out
dec
xchg
repnz
xor
aas
sub
imul
cld
xchg
sbbb
sar
jnp
ss
pushf
sub
rcrb
pop
cs
add
mov
sahf
in
xchg
push
imul
pop
mov
in
mulb
out
dec
adc
mulb
inc
lret
push
xor
stc
pop
pop
repz
je
or
in
push
jae
sbb
shll
push
or
adc
mov
popa
xor
inc
jmp
xchg
pop
sbb
cmp
pop
add
es
ret
inc
mov
pushf
xchg
aas
add
push
cmpsl
and
jp
cmpsl
or
pop
mov
stos
lret
js
rorb
jno
out
imulb
adc
mov
outsl
and
mov
adc
xchg
cmp
pop
jmp
mov
xor
enter
xor
jge
ds
rolb
hlt
fildl
mov
push
jle
sbb
adc
repz
pop
test
outsl
imul
lcall
shll
popf
cmpsb
sub
push
ret
dec
jmp
or
jge
ficoml
pop
inc
pop
add
js
fs
lods
sbb
mov
cmp
xchg
in
mov
mov
sbb
jo
fbstp
ds
cmp
xor
data16
scas
and
fistl
and
xchg
jg
int
mov
test
sbb
pop
inc
mov
js
rol
xchg
dec
xor
or
ret
fstl
sub
scas
sub
add
lret
hlt
sbb
orb
mov
jnp
out
lret
shrb
fucomip
sbbb
mov
pop
aaa
push
iret
cld
stos
leave
xor
stc
mov
xchg
and
pop
jno
xor
scas
xchg
jmp
es
jbe
cmp
nop
ret
repnz
mov
jae
adc
and
dec
jne
les
push
loope
pop
adc
js
and
mov
add
ret
mov
lea
sub
add
pop
fstpl
cmp
aam
mov
shll
loopne
adc
xchg
and
or
sub
outsl
sbb
int
pushf
ljmp
jmp
add
mov
adc
pop
mov
aaa
je
pop
popa
push
nop
mov
aaa
loope
std
punpckldq
testb
xchg
jo
roll
fs
data16
jecxz
pop
mov
adc
dec
sub
mov
push
sub
mov
pusha
add
jl
sbbl
dec
and
jmp
jp
test
movsb
jbe
fisubrs
jne
xor
xchg
mov
or
lret
cmc
mov
sbb
sbb
and
call
adc
xchg
inc
in
push
sbb
insl
hlt
adc
stos
push
jae
les
push
ljmp
ljmp
loop
mov
cmp
stos
stc
ss
inc
inc
movsl
rolb
or
test
daa
loope
jne
inc
icebp
jbe
insb
ljmp
sahf
ret
mov
fdivs
inc
xchg
mov
push
dec
mov
and
icebp
pusha
add
xchg
dec
mov
pop
pusha
mov
dec
inc
and
inc
div
sub
popf
mov
fidivl
xor
mov
jo
gs
pop
pop
pushf
dec
fbstp
out
sbb
inc
call
xchg
or
mov
faddl
daa
push
jmp
fldenv
pop
arpl
and
cli
lods
lds
mov
xchg
jp
sub
test
loop
push
push
xor
and
rol
pop
mov
and
adc
pop
xchg
insb
xchg
jno
push
out
or
daa
mov
push
jo
add
inc
ja
movsb
arpl
cmp
jl
cmp
mov
or
cmp
fldl
xchg
push
test
fwait
das
stc
in
xchg
into
adc
and
xchg
cli
or
popf
in
std
mov
push
out
mov
test
dec
imul
stos
fisubrs
iret
sub
dec
movsb
jnp
into
inc
cltd
sbb
mov
sti
mov
adc
int3
xor
shl
adc
out
mov
dec
mov
clts
js
nop
icebp
lret
add
dec
daa
dec
adc
sub
mov
lock
scas
lahf
mov
jp
leave
push
and
movsl
pop
lret
dec
or
push
mov
push
inc
testl
pop
mov
pop
icebp
mov
or
adc
mov
ds
test
sbb
std
mov
ss
jae
add
and
loopne
scas
mov
xor
test
into
push
cmp
xor
adc
dec
mov
cli
mov
dec
mov
pop
cmc
scas
jno
mov
mov
xorl
es
nop
es
jns
ffreep
in
lret
cmp
push
sbb
mov
jbe
dec
jne
adc
push
cmpsb
dec
popf
aam
jae
inc
int3
bound
pop
mov
aam
and
imul
jp
and
lret
or
jle
mov
call
lahf
lea
cmp
fbstp
pop
xchg
lods
lret
mov
jnp
inc
test
dec
fnsave
imul
fld
add
jle
xlat
lahf
ret
xlat
mov
sbb
sti
pop
out
jne
sub
sbb
mov
pushf
or
out
and
dec
inc
addb
dec
sti
cmp
mov
daa
cmc
push
lds
push
test
insl
lods
xchg
pop
movsl
push
sbb
lds
cmp
outsl
test
rcll
xor
outsl
fidivrl
jae
mov
arpl
daa
in
lods
stc
fnsave
scas
or
cld
cmp
inc
imul
clc
stos
inc
mov
std
pop
lock
clc
mov
fs
mov
push
lock
inc
inc
dec
sub
movsb
insl
jl
sub
push
comiss
mov
or
mov
sub
push
aad
hlt
xlat
pop
inc
cli
mov
je
lods
movsl
rorb
sub
pop
movsl
pop
sub
aaa
fisubrl
cli
sub
jbe
pop
movsl
insl
mov
mov
xor
std
lret
adc
test
lret
and
inc
pushf
dec
aad
arpl
adc
mov
outsl
mov
mov
push
loope
xor
dec
insb
outsb
inc
and
mov
pop
mov
dec
xabort
outsl
clc
jge
int
test
insb
jmp
rcll
xchg
mov
aaa
xor
mov
pop
or
cmp
lret
pop
sub
mov
xor
cmp
push
movsb
scas
fs
decb
mov
in
sti
sub
ds
ss
outsl
mov
clc
or
mov
xor
xor
push
and
cmpsl
adc
mov
mov
fwait
jp
enter
popf
daa
es
pop
inc
lret
xchg
orl
push
aad
jnp
sub
lahf
mov
jnp
push
movsl
dec
cmp
xor
std
loope,pt
inc
jb
jmp
add
xor
movsb
inc
ja
cmc
dec
icebp
push
pusha
add
push
out
adc
cmp
data16
pop
loopne
cmp
je
adcb
add
xchg
scas
mov
mov
mov
sbb
cld
outsl
ret
and
mov
inc
xchg
js
push
fdivr
mov
mov
dec
adcb
and
inc
add
roll
scas
jmp
cli
outsb
cwtl
push
push
nop
push
loop
call
adcl
xor
lods
pop
fstpl
push
xchg
inc
xor
inc
mov
insl
mov
dec
xchg
pop
xor
adc
sbb
ficomps
sub
sbb
out
push
pop
mov
mov
mov
ror
lods
push
mov
fildll
iret
mov
js
cltd
sub
hlt
iret
ret
add
jp
lret
push
add
cs
fwait
test
inc
push
test
cltd
lret
xchg
fcomps
jge
repnz
aas
xor
das
xchg
lds
outsb
lock
test
outsl
mov
push
inc
xor
sub
mov
cmp
mov
and
xor
test
xor
and
mov
pop
mov
in
xchg
cmpsb
out
cmp
and
dec
daa
cmp
cltd
dec
xor
les
adc
rcrl
jae
out
roll
push
cmp
aad
mov
arpl
push
xchg
push
rcll
lods
test
sub
sahf
pop
aam
mov
dec
mov
pop
lret
ficomps
sub
test
lods
nop
insl
jmp
inc
sar
xchg
mov
aad
dec
test
in
sub
mov
jno
xlat
mov
sti
push
les
jbe
add
mov
jo
sbbb
sbb
shll
shll
mov
mov
std
sub
xor
or
pop
ds
bound
jb,pt
repnz
mov
outsl
aam
out
jge
pop
or
sub
xor
pop
cli
rcr
jp
into
inc
jae
mov
pop
dec
setp
mov
stos
add
clc
imul
inc
add
mov
add
aaa
dec
mov
add
jl
addr16
cmp
cld
lea
sbb
cs
cltd
jae
cmovne
test
lock
mov
sti
cmp
pop
or
repnz
mov
stc
inc
icebp
dec
jg
jge
cmp
inc
cwtl
xor
ret
adc
xlat
lcall
pop
lcall
testb
mov
ret
ss
mov
xchg
push
sub
ja
stos
ss
fldenv
xchg
sub
sbb
mov
jge
inc
push
loope
insb
mov
int3
adc
je
cmp
mov
insb
data16
pop
lock
popa
je
push
scas
imul
pop
lahf
insb
scas
xor
push
xchg
cmp
int
cmp
fnstenv
in
cld
lods
adc
stc
jae
push
add
sbb
cmp
pop
add
or
loopne
outsb
xchg
xchg
xchg
repz
ficomps
adc
xchg
out
or
xor
add
or
popa
sub
pop
outsb
lcall
mov
shll
mov
xchg
dec
mov
scas
mov
push
xchg
stc
lret
add
fidivrs
popa
xchg
inc
insb
mov
and
outsl
call
sbb
fcomi
cmpb
sbb
xchg
hlt
push
fistl
or
enter
jne
mov
popf
xchg
push
push
sbb
sub
repnz
or
xchg
pop
jecxz
jns
push
add
int
fcompl
stos
lods
push
sti
sbb
or
movups
sbbl
jmp
enter
loop
int3
mov
ffree
sub
sub
mov
push
and
pop
cvttps2pi
mulb
push
ss
pop
aas
mov
sub
aaa
mov
xchg
ret
aaa
jb
aaa
popf
mov
hlt
xlat
mov
es
data16
push
mov
add
sbb
dec
add
xchg
sub
lods
sbb
sbb
ljmp
lods
sbb
lds
xchg
dec
jge
lret
outsb
sub
add
push
push
pop
mov
and
push
xchg
xchg
pushf
roll
inc
cld
fnstsw
xchg
cmpsl
data16
sbb
push
inc
lahf
inc
aas
mov
cmc
jns
fsubp
dec
fcmovne
sbb
pop
cmp
jne
mov
xchg
js
xchg
mov
insb
and
jmp
mov
ss
fistpl
mov
shrb
dec
mov
daa
sbb
shll
push
ret
xchg
adc
fwait
lcall
cld
jmp
fistpll
pop
ret
sbb
dec
jmp
rclb
adcb
sbb
sub
dec
stc
scas
xchg
das
sbb
add
or
xlat
pusha
daa
jle
mov
mov
subl
and
sub
icebp
jbe
out
insb
xor
xchg
in
in
loop
or
pop
push
popf
mov
mov
adc
rorb
in
fnsave
andl
inc
add
adc
fmuls
xor
sti
push
aaa
mov
into
bswap
and
aam
mov
test
cltd
aam
sbb
fidivrs
xchg
cmp
loopne
mov
jp
test
gs
or
seto
rcll
loop
and
inc
adc
pushf
inc
cmp
sub
lea
xchg
inc
mov
repnz
pop
add
fcmovb
pop
push
or
ret
push
xchg
rcrl
push
cltd
lret
repz
lcall
cmp
in
int
xchg
jl
sti
aas
and
addr16
and
dec
cmp
out
ja
sbb
hlt
fcomps
add
or
mov
aas
mov
lods
xor
mov
loope
pushf
fbld
add
push
jns
jno
adc
inc
push
sub
lret
rclb
xchg
push
dec
ja
xchg
mov
das
fcmove
or
dec
jns
mov
xor
mov
hlt
test
movsb
push
insb
aas
mov
and
cmp
ljmp
jno
mov
mov
mov
sarl
dec
stos
push
fists
sbb
rcl
dec
xor
cld
xchg
add
or
push
adc
pop
add
pusha
push
pop
inc
or
addl
out
cmpl
xor
aaa
sbb
or
jnp
std
xor
sbb
push
inc
sub
cvtpi2ps
cmp
mov
adc
out
insb
shl
push
or
sub
mov
in
mov
pop
pop
dec
leave
and
mov
and
mov
or
add
imul
fstpt
je
nop
push
inc
in
and
inc
shll
rclb
or
out
jne
jae
push
or
outsl
push
jp
jo
leave
lahf
scas
xchg
clc
out
add
mov
gs
daa
jns
or
and
orl
lock
mov
mov
bound
or
test
mov
aad
sbb
int
mov
int
add
inc
xchg
loopne
xor
jmp
push
ljmp
push
xchg
or
mov
insl
sub
cmp
cmp
jp
add
hlt
push
jae
and
adc
xchg
loop
cmp
fidivrs
mov
std
imul
pop
cmc
xor
mov
scas
mov
aam
push
ret
fisttps
sub
cwtl
mov
mov
fldcw
rcrl
lret
lock
mov
imul
pop
in
out
push
push
movsl
int
and
outsl
imul
ljmp
or
xor
addr16
adc
les
stos
push
inc
mov
ficoml
orb
lcall
shrl
push
adc
jp
xorl
pop
fxch
dec
dec
jecxz
aam
clc
sarb
movsl
push
push
lret
cld
xchg
xor
das
in
aam
in
into
negb
mov
insb
fildl
cs
cmp
xchg
inc
sub
test
sbb
pop
jns
sbb
jnp
mov
sti
or
shlb
push
dec
xchg
mov
add
pop
push
rcll
roll
call
mov
leave
mov
sahf
cmp
movsl
cmp
pop
mov
fs
icebp
lods
and
int
ret
bndldx
hlt
pop
lret
mov
shr
rorl
pop
cmpsb
fsubr
fimuls
addr16
add
das
loope
outsl
jnp
ss
or
pop
jno
vmwrite
sbb
push
in
js
das
xchg
in
aam
mov
jp
push
testb
lret
outsb
mov
cmpb
inc
or
test
push
xchg
rcrl
shlb
popa
jmp
mov
xor
xchg
mov
sbb
jnp
jbe
ja
cwtl
and
jp
fucomip
or
jp
xchg
pop
aaa
gs
les
imull
aaa
or
mov
hlt
sub
xchg
and
stc
mov
dec
hlt
lret
pusha
outsl
arpl
mov
add
push
int3
daa
jle
addb
and
fisttps
jmp
xchg
dec
pop
es
mov
mov
lods
or
mov
mov
shrl
test
inc
hlt
roll
pop
loopne
mov
xchg
js
dec
rolb
rcr
into
movsb
add
cmp
dec
rcll
ja
mov
test
jecxz
dec
inc
dec
fldl
iret
cld
aaa
js
sub
movsb
cmp
pop
push
add
cwtl
movsl
bound
xchg
xchg
out
pop
add
popl
in
sbb
fbld
fstpl
mov
cmpsb
arpl
out
cli
je
mov
jns
in
pusha
add
lcall
inc
repz
push
mov
enter
adc
sbb
lret
pop
add
insl
daa
mov
inc
aad
aas
pop
and
mov
test
incb
push
or
rcl
rcll
test
jne
dec
cmp
adc
ret
gs
mov
pop
inc
dec
adc
inc
inc
shr
in
inc
nop
jecxz
ljmp
mov
sar
jno
pop
sbb
iret
pop
stc
sub
ja
sub
fidivs
outsl
pushf
or
icebp
jmp
push
int
and
mov
cmc
outsl
cmc
fldcw
ljmp
ret
arpl
testl
jge
aad
or
and
rclb
mov
mov
xor
jbe
das
push
xlat
int
push
js
or
je
xlat
sub
jns
addr16
sahf
js
inc
ficompl
das
lods
xor
sbb
xchg
dec
test
pop
sub
stos
dec
test
out
mov
and
rcr
ficoms
stc
adc
mov
gs
ds
lret
sarb
mov
mov
cld
mov
loop
dec
or
mov
jle
ja
orb
pushf
lret
adc
loope
mov
das
clc
push
push
xchg
jo
mov
bound
imul
lret
or
push
xor
das
xchg
fnstcw
xchg
and
fdivrl
pop
pop
mov
jae
mov
sub
insb
pushf
stos
leave
pop
xchg
jns
sbb
dec
cmp
insb
xchg
mov
sub
sbb
test
aas
loop
adc
push
pop
mov
inc
pop
fucomi
out
sbb
cmpsl
loopne
push
pop
mov
orb
lea
push
hlt
adcb
bound
mov
out
cmpsb
or
hlt
push
push
mov
je
or
sub
test
xchg
dec
mov
ss
cld
aaa
cmp
out
out
add
in
and
pop
shll
pop
xchg
jo
adc
inc
and
inc
mov
les
xor
lretw
inc
mov
je
cmp
test
das
dec
jo
jge
inc
or
out
outsb
fbstp
push
push
dec
mov
xor
sub
sbb
cmc
js
imulb
shr
jecxz
mov
add
push
and
out
dec
and
in
into
mov
imul
repz
cmc
pop
xchg
das
fimull
mov
cmp
adc
aas
dec
and
cmp
shll
stos
xlat
aaa
dec
cmpsb
and
cmp
pusha
sub
daa
pop
pop
pop
add
mov
adc
dec
notl
sub
mov
ret
push
mov
imul
incl
pop
xor
or
scas
mov
or
xchg
and
leave
push
lods
lods
mov
or
pop
mov
pushf
mov
sbb
pop
dec
out
jnp
push
push
dec
test
push
lods
jno
arpl
jno
xor
jp
inc
push
outsb
and
mov
aad
bswap
pop
outsl
jo
fld
lock
pop
jg
pop
lods
les
sbb
xchg
jnp
pushf
pop
out
and
aas
daa
psubw
jle
or
test
loope
stos
std
sub
dec
dec
pop
idiv
stc
adc
xchg
cmc
xor
fisubrs
inc
inc
scas
xchg
dec
and
cs
cltd
or
cmp
imull
push
pop
sbb
lahf
adc
mov
in
sbb
adc
clc
ret
pusha
int
push
or
pushl
xor
lods
cmc
inc
jnp
es
fstps
mov
movsl
mov
push
pop
push
popf
jg
xor
add
pushf
push
sbb
clc
jle
sbb
mov
icebp
fisubrl
xor
in
insb
aas
arpl
push
out
jmp
push
mov
addr16
mov
sbb
icebp
mov
push
repz
in
daa
pop
cwtl
outsl
imul
xor
pusha
or
push
repz
jae
pop
enter
sarb
mov
adc
cmpsl
push
or
int
es
pop
adc
fstl
mov
arpl
push
in
call
mov
cmpsb
and
outsb
or
loop
cmp
sub
rcrb
mov
xchg
sub
arpl
inc
test
sti
add
insl
lea
mov
aaa
xchg
sub
add
ljmp
out
add
pop
mov
dec
adc
adc
add
push
adc
inc
adc
and
rcrl
leave
leave
les
adc
cmc
inc
push
addr16
sub
jl
lods
pop
or
or
sub
ja
mov
je
sbbl
je
add
xchg
xor
iret
add
add
xchg
sbb
imul
mov
out
adc
and
fst
aaa
dec
xchg
cmc
out
leave
pop
fs
mov
std
fadds
jb
test
test
mov
out
mov
das
jae
push
repz
mov
lds
loop
out
mov
mov
jns
cli
adc
fwait
xchg
int3
int3
pushl
xchg
xor
jge
fimull
popa
mov
aas
cwtl
fadd
test
xchg
or
jo
or
and
pop
stc
ja
cmp
mov
popf
or
rolb
add
or
or
movsb
ror
and
adc
into
repz
mov
pop
add
icebp
sahf
mov
imul
jnp
adc
jp
hlt
in
jno
cmp
cmpsl
outsl
mov
pushf
sub
sbb
pop
dec
cld
and
repnz
call
dec
fwait
push
add
mov
dec
notb
cmpsl
sbb
xchg
mov
mov
xor
sbb
mov
jae
xchg
mov
jp
cli
imul
arpl
inc
shll
push
dec
aam
xor
sbb
rcrb
pop
cmpsb
movsl
dec
lret
pop
push
mov
jo
mov
outsl
jnp
inc
out
cwtl
aad
ljmp
pop
shll
dec
aas
adc
pop
lods
test
mov
leave
xor
out
nop
stos
lret
stos
pop
inc
shlb
call
outsb
add
dec
repnz
pop
std
rolb
int3
dec
nop
test
in
push
lock
outsb
in
adc
lret
test
test
hlt
fisubl
fisubl
jb
fsts
lahf
mov
dec
cmpsl
xchg
pop
add
and
test
call
stos
and
or
inc
push
icebp
ds
fs
dec
shlb
hlt
pop
faddl
repnz
mov
pop
out
jg
aad
mov
js
cmc
out
lret
loop
pop
in
shlb
mov
dec
mov
add
aam
add
loop
hlt
lea
and
ret
adc
jl
push
jmp
jecxz
push
add
mov
sti
lea
pushf
cwtl
lods
nop
cmp
js
sbb
sbb
clc
or
testb
push
mov
mov
mov
test
add
lock
jecxz
dec
adc
lock
dec
fldl
jne
mov
cmpsl
cld
pop
push
lahf
dec
and
fbstp
jb
sub
mov
push
pusha
fsubrl
scas
dec
lds
test
lock
lods
or
jge
bound
in
lods
and
les
sbb
cmp
push
jae
shlb
sub
mov
aaa
mov
lea
dec
sub
and
repz
ds
and
pop
and
leave
lcall
xlat
pop
dec
jg
das
aam
mov
insb
sub
cmp
push
int3
out
icebp
in
and
xchg
push
jbe
or
pop
push
fnstenv
outsb
leave
cmp
not
add
dec
dec
push
out
test
and
dec
lcall
adc
xor
lret
pop
fdivs
mov
xchg
rcrl
movsb
and
jbe
jb
mov
imul
rorl
cwtl
hlt
sub
push
push
xor
add
xor
mov
ss
add
xor
pop
pop
repnz
out
mov
mov
push
adc
fs
push
fcomps
test
or
icebp
pop
loop
imul
mov
push
shrb
xchg
jl
std
cmpsl
les
xor
mov
mov
hlt
mov
inc
iret
divl
test
inc
inc
pop
mov
adc
cwtl
cli
test
dec
pop
popa
test
jl
mov
xchg
sahf
fidivl
scas
and
imul
jae
jae
sbb
jnp
lahf
jns
ficompl
jmp
jp
ljmp
dec
sbb
das
subl
jge
mov
fldcw
mov
add
mov
pusha
fnsave
popf
lret
loopne
sub
mov
mov
aaa
cltd
or
cli
cli
fisttpll
add
es
icebp
aas
ja
rcrb
lds
cmpsb
mov
subl
inc
xchg
pop
xor
adc
or
dec
stos
ljmp
ds
mov
xchg
out
movsb
addb
fbstp
loope
stos
and
mov
mov
inc
sub
add
pop
pop
in
push
xlat
into
cmp
cmp
push
fwait
inc
out
inc
dec
into
fadds
rorb
out
pop
mov
xchg
add
cmp
shll
sbb
adc
mov
or
push
pop
cmp
inc
push
in
inc
cld
jns
fcompl
inc
punpckldq
dec
lods
aas
add
rcrb
xchg
lahf
cmc
popa
movsl
mov
aad
addr16
fstl
pop
or
inc
sbb
pusha
jp
fld1
arpl
aam
les
xor
cmpsl
xor
iret
cmp
dec
jbe
or
dec
lds
push
inc
mov
xor
outsb
cmpsl
sub
xor
cmpsl
test
aad
je
gs
popa
fidivl
inc
sub
daa
ja
push
xor
shlb
in
mov
mov
fnstenv
cmp
call
vpextrw
lds
cltd
sub
mov
dec
arpl
dec
pop
xchg
jno
in
in
sahf
push
sub
scas
lock
test
ficompl
sbb
lea
lret
lahf
out
out
test
mov
clc
dec
push
jae
adc
pop
mov
orl
mov
repnz
or
sbb
mov
in
push
inc
fdivrl
push
and
das
in
dec
leave
push
std
xchg
sbb
and
inc
add
dec
or
cmpsl
xor
mov
cmp
pop
push
mov
xchg
or
sahf
rorl
push
adc
xchg
hlt
xlat
inc
push
push
sbb
dec
xchg
xor
add
fstpt
in
stos
test
add
div
iret
cmp
xchg
jo
fwait
mov
cld
push
jnp
xor
jmp
or
dec
mov
ror
and
sub
cmpsb
rcr
gs
sub
aam
pop
jne
enter
fldcw
dec
cld
dec
and
lahf
mov
movsb
push
lods
mov
int
xchg
sbb
movsl
lea
int
jecxz
sbb
inc
popa
or
xchg
jl
movsb
out
cmc
xor
add
in
mov
sbb
roll
adc
in
mov
out
outsb
sub
xchg
gs
ljmp
pop
cmpsb
sbb
and
leave
ljmp
ret
insl
pushf
cmp
test
cld
arpl
jns
cmp
arpl
cmp
push
mov
sbb
mov
mov
iret
xor
test
add
ja
xor
adc
inc
push
mov
lret
pusha
je
pop
imulb
fldenv
dec
jbe
cmp
dec
sbb
imul
push
gs
imul
ja
sbb
cmp
mov
sub
aas
in
fsubrl
pop
or
outsl
sahf
jae
and
js
out
mov
mov
mov
fwait
arpl
popf
mov
mov
pushf
rcll
sub
lcall
repnz
gs
mov
fcompl
imul
lret
jo
sbb
sbb
clc
lahf
loop
cs
dec
hlt
imul
push
test
sbb
cmp
push
mov
push
ret
in
mov
push
enter
push
rcrl
outsl
push
mov
inc
inc
arpl
lcall
ffree
je
clc
pop
bound
mov
cli
xchg
cmpsb
out
imul
jmp
mov
movsb
mov
push
in
push
dec
test
in
xchg
push
and
adc
xchg
xchg
pop
and
mov
aam
add
add
xchg
clc
pop
and
push
adc
push
sbb
aad
ret
movsb
adc
ljmp
or
mov
test
mov
ljmp
xchg
cmp
test
fndisi(8087
inc
adc
rcr
xchg
dec
xor
shrl
not
das
mov
cld
jecxz
adc
push
xor
and
cmp
imul
cmp
lds
pusha
sbb
pop
xor
pop
push
adc
mov
xor
neg
mov
push
cmc
add
pop
sbb
mov
call
xchg
out
xor
pop
sub
and
pop
fwait
cmc
or
push
iret
test
cwtl
fldenv
push
bnd
adc
jge
xor
rcr
roll
arpl
cmp
lds
aaa
mov
adc
inc
dec
add
insl
push
ljmp
add
mov
push
mov
mov
inc
ds
pop
pop
stos
or
aad
xor
js
mov
cmp
das
popf
jno
repnz
sub
and
movsb
mov
test
ljmp
std
outsb
scas
fisttps
pinsrw
test
sarb
xor
js
and
xor
movsb
fsubrs
sarb
xlat
xor
jo
mov
and
jae
push
adc
loopne
call
aas
lods
negl
stc
xlat
or
mov
ljmp
inc
imulb
in
or
test
daa
mov
sbb
adc
inc
popf
jne
lods
stos
mov
fstl
jl
cmc
push
and
jle
inc
popf
mov
dec
mov
pushf
and
shrb
pop
jmp
or
inc
pop
cmp
mov
xchg
mov
mov
into
enter
mov
orl
cmp
push
loopne
adc
or
xchg
stos
mov
shlb
test
out
cld
pop
xlat
rorb
push
xchg
mov
jne
dec
mov
jno
pop
es
mov
inc
adc
leave
and
pop
es
out
mov
inc
imul
or
xchg
xor
scas
pop
sub
mov
loop
cmp
lcall
mov
cmp
in
pop
subb
pushaw
and
shll
call
mov
dec
push
pusha
mov
and
jbe
lcall
popa
xlat
pop
mov
push
sub
jns
shrb
sbb
in
aam
cmp
dec
insl
cmp
sbbl
adc
ljmp
and
add
pop
mov
push
int
movsl
mov
and
pusha
or
lock
mov
repz
out
mov
loopne
pusha
pop
loopne
jbe
andb
stc
xchg
fwait
int3
scas
lret
cmc
in
cli
loopne
add
shr
or
inc
ljmp
movsl
sbb
or
imul
outsl
sbb
xor
adc
out
mov
and
dec
jb
dec
add
push
push
data16
decl
fidivrl
dec
shlb
daa
inc
jg
loopne
test
add
push
mov
enter
and
mov
nop
ja
popf
mov
shlb
hlt
xlat
dec
mov
inc
xor
inc
dec
popf
sub
pushf
dec
mov
out
or
dec
jl
dec
shl
into
enter
mov
hlt
aaa
sbb
test
mov
les
mov
mov
cmpsl
sub
sub
lock
scas
ljmp
and
movsb
aas
jno
cmp
or
jl
out
jne
mov
test
pop
mov
dec
mov
stos
xchg
push
sti
jb
jmp
or
lcall
and
mov
inc
sub
imul
into
clc
add
int3
sarl
xchg
fstpl
mov
mov
ret
mov
xchg
mov
popa
mov
push
fstl
sub
fcmove
nop
dec
aad
fldt
in
mov
adc
fisttps
rorb
negb
cmpsl
jle
and
lock
cmp
jg
and
sbb
int
sbb
sbb
movsl
lcall
insb
mov
insl
int3
cwtl
cmp
repz
lock
ret
lret
xor
mov
dec
aas
test
adc
push
vmovdqa
xor
in
loopne,pt
push
loopne
and
xorl
mov
dec
sbb
and
jg
lea
push
sub
in
pop
jp
and
insl
jmp
cmpsb
inc
cmp
xchg
fimull
lods
xorb
fisttps
push
push
or
mov
stos
int3
mov
mov
inc
sbb
les
sahf
test
pop
subl
add
fwait
addl
aaa
pop
inc
fldcw
push
xchg
add
dec
lcall
cli
mov
cmpsl
bndstx
in
mov
push
outsl
lods
int
test
inc
dec
fstpl
outsb
ret
and
test
inc
test
pop
cli
inc
jecxz
aaa
sub
sbb
mov
jge
in
cmpsb
xchg
rorb
test
mov
hlt
repnz
fildl
into
xchg
aas
ljmp
xlat
test
jle
pushf
xor
jge
mov
shll
and
xchg
or
add
sti
and
adc
clc
mov
mov
cmc
mov
jecxz
ret
test
and
sub
mov
or
cmp
lds
pop
push
jne
push
mov
xchg
mov
in
inc
cmp
stc
outsb
xchg
or
mov
bnd
lock
sahf
nop
cltd
imul
adc
lcall
cmp
pop
fdivrp
push
xlat
or
imul
dec
rolb
insb
int
adc
gs
xor
test
popa
dec
lcall
fucomip
sbb
jg
sbb
fdivl
mov
mov
adc
pushf
sarb
cmp
aam
pushf
rclb
shll
test
jmp
je
inc
shll
iret
jmp
loope
jno
scas
jmp
fs
sub
mov
lds
stos
xchg
in
xor
xchg
push
pop
cmp
sbb
fdivl
fnstenv
mov
cld
daa
pop
daa
sub
test
add
roll
mov
mov
push
push
ds
imul
xchg
iret
cmpsb
xor
cmp
xor
sbb
aad
mov
iret
xor
pop
pop
pop
ss
sub
jb
pushf
ds
sbb
cs
ror
fstpl
loopne
add
lret
outsb
adcl
sub
cmpsb
push
push
jecxz
xchg
movsl
and
and
mov
mov
mov
mov
mov
xor
repz
fsubl
or
adc
fstpt
or
sub
outsb
aaa
mov
ret
std
aad
andb
jbe
loopne
shlb
ret
lods
or
push
mov
adc
cld
mov
mov
xor
add
je
xchg
inc
jnp
sub
cmp
mov
out
test
cltd
mov
pop
cmp
cmp
inc
test
push
pushf
fs
leave
adc
mov
jg
repnz
xchg
scas
fistpll
mov
push
dec
inc
push
sbb
pop
subl
cld
xchg
popf
lcall
add
out
aad
jbe
cmpsl
les
sub
icebp
cmp
mov
gs
scas
pop
fcomp
cld
movsb
cmp
loopne
es
push
aaa
sarl
mov
xchg
nop
inc
loope
insl
sbb
mov
bound
outsb
movsl
mov
repnz
xchg
or
fnstenv
pop
notl
movb
popf
movsl
rcrl
les
enter
loop
int3
sarb
rcll
repz
into
and
movsb
xor
pop
outsb
fldl
cmpl
jo
xchg
cs
aam
rorl
les
push
add
nop
stc
nop
cmp
out
lret
cmpsb
jle
les
out
fdivrs
les
jno
dec
repnz
adc
test
add
pusha
aam
xlat
pop
stos
jae
cmc
popf
cmpsl
and
cmp
mov
xor
in
mov
lods
push
sbbb
enter
push
packuswb
ljmp
jb
popa
mov
fcomip
mov
xorb
decl
jp
out
je
mov
loop
test
pop
inc
jl
test
dec
mov
roll
cmp
lock
repnz
add
andb
mov
ss
sub
push
xlat
jbe
add
fbstp
jbe
imul
pushf
cld
shlb
adc
sbb
push
test
out
mov
pop
xor
cld
jmp
orl
sub
lret
inc
push
add
fisubl
addb
jp
jg
fs
push
push
sub
jg
sbb
bound
mov
cld
or
jne
test
sbb
xchg
mov
mov
push
xchg
jne
ss
int
cltd
pop
dec
and
ds
and
xor
mov
call
mov
movsb
arpl
fwait
sub
cmc
add
add
lds
lock
jo
pop
fwait
in
repz
jns
or
push
push
xlat
rcll
fidivrl
rclb
ljmp
mov
pop
scas
mov
xchg
push
cmpsl
daa
das
adc
popa
ret
call
push
hlt
aas
sbb
test
sub
sbb
dec
mov
dec
jg
jg
insb
in
sub
out
sbb
and
inc
sbb
subb
sub
pop
adc
andl
fldt
jg
fnstenv
lods
lcall
insb
adc
mov
subl
pusha
xchg
adc
dec
out
adc
bnd
add
repz
jno
adc
insl
ljmp
cmp
je
jl
mov
jo
or
es
clc
aaa
xchg
or
fsubrs
clc
in
or
or
aaa
cmp
out
shrb
hlt
or
mov
cmc
je
fisttpll
in
andl
and
aas
push
pushf
dec
cltd
xor
test
add
fs
adc
fcmovbe
push
cmp
cmpb
flds
in
std
jns
push
mov
cmp
push
lret
pop
jb
jle
lret
cli
cwtl
mov
push
cmp
movsl
sbb
push
rcrl
push
xchg
fmull
push
in
repnz
shrb
jns
cmp
mov
outsb
add
push
pop
repnz
int3
cmp
mov
ret
push
cmpsl
inc
divb
push
add
repz
shll
leave
or
and
test
pop
fdivrp
jb
cltd
cld
inc
sbb
or
sub
sbb
and
or
adc
jecxz
mov
xlat
adc
xchg
inc
sub
jecxz
sbb
adcl
insl
jae
mov
fwait
mov
mov
out
mov
sti
pop
addb
sbb
inc
js
cmp
or
bound
sub
sbb
ret
pop
jmp
jae
push
add
ja
mov
out
or
xchg
xor
sahf
inc
clc
xchg
cmp
sub
sub
ret
shll
aam
lock
ds
loope
into
push
jne
lcall
push
outsb
mov
adc
inc
or
stos
xchg
sub
ret
mov
out
mov
jb
pop
jg
dec
sbb
packuswb
mov
jb
mov
xchg
push
cs
hlt
mov
push
cmpsl
mov
jle
stos
aaa
or
fwait
add
mov
fidivs
cmpsl
js
add
jnp
aad
mov
aam
pop
outsl
aam
jne
mov
cmp
movsl
adc
test
mov
scas
std
lods
xorb
in
pop
adc
jb
fildl
je
outsl
orb
mov
movsl
std
mov
leave
in
sbb
add
stc
mov
mov
sti
scas
pop
and
stc
loope
push
or
push
xor
ret
mov
mov
and
shr
icebp
xchg
sub
idivb
lds
aam
rcll
mov
lahf
sbb
cltd
movsb
push
add
or
mov
inc
pushf
cmp
movsl
lcall
jnp
test
mov
jae
mov
data16
xor
repz
aam
insl
movsb
das
inc
cmp
aam
enter
mov
ss
pushf
jnp
jns
mov
insl
out
or
stc
push
movsb
sub
lods
imul
jmp
adc
pop
and
cs
jnp
sbb
push
cmc
outsb
or
enter
sar
cmp
mov
adc
fwait
pop
fnsave
js
sbb
mov
lods
sub
mov
mov
xchg
mov
mov
nop
int
xchg
sbb
imul
cmp
inc
and
and
mov
xchg
mov
sbb
nop
sbb
jmp
add
xchg
pop
cltd
shll
movsb
fmull
jl
push
std
mov
xchg
inc
imul
mov
mov
shrb
lock
mov
lret
mov
mov
shll
mov
ds
lret
sub
sarl
mov
jno
stos
and
scas
shlb
mov
or
mov
push
aam
in
dec
sub
mov
xchg
repz
js
mov
xor
mov
xchg
aam
lret
cld
and
xchg
cltd
push
xor
push
cmp
cmc
lock
test
inc
out
es
icebp
xchg
cmp
movl
push
inc
sbb
and
popa
jle
andl
sub
scas
daa
sbb
cli
cmp
jno
mov
xchg
push
jg
and
pop
pop
outsl
add
sbbb
call
test
or
jge
jle
test
jae
rorb
and
dec
es
addr16
cmc
xchg
lds
cmp
jmp
jp
lds
xor
inc
pop
xor
sub
sub
or
mov
aad
jge
push
cld
repz
into
dec
jo
and
sub
push
fs
pop
dec
or
icebp
sbb
es
push
jb
das
pop
mov
push
cmc
notl
mov
cmp
xchg
xor
pop
cmc
mov
loop
fdivl
sbb
xchg
popa
sar
pop
cmp
test
or
inc
xchg
call
lods
jmp
lahf
lea
adc
adc
scas
mov
pop
mov
test
sub
lods
std
lea
fnstenv
cmpsl
dec
dec
lret
push
rcr
rcll
jno
or
jnp
adc
mov
js
dec
jne
jno
add
pusha
mov
mov
frstpm(287
rclb
or
pop
add
and
imul
and
pop
pop
mov
out
and
or
xchg
sbb
or
loope
ss
aam
out
pop
cli
cmp
jg
wrmsr
bound
in
or
push
adc
dec
sbb
mov
lock
push
js
mov
dec
pushf
rol
sub
push
rorl
and
push
pop
cmp
out
ret
sti
ret
movsb
jo
dec
orl
push
sbb
and
adcl
out
repnz
out
lea
jb
notb
cmp
xchg
mov
and
jp
fidivl
data16
ffreep
js
jnp
inc
dec
inc
sub
jle
test
in
or
jge
bound
loopne
and
cld
lods
xor
mov
xchg
stos
es
inc
add
fldcw
insl
int3
iret
inc
push
sub
nop
mov
cli
subl
out
cli
aad
es
mov
jecxz
scas
jne
cmpsl
std
es
inc
push
add
push
jb
and
sub
clc
popl
imul
loope
sahf
push
ficomps
mov
mov
aad
ret
lret
add
repz
mov
outsl
add
test
add
mov
xchg
jne
xchg
mov
and
xchg
cltd
sbb
push
sbb
test
jb
add
stos
or
iret
adc
push
dec
stc
lret
push
inc
cmc
jecxz
mov
lods
fiadds
and
in
dec
sub
jno
sahf
loop
adc
dec
xor
std
out
jno
fcompl
mov
loop
out
jne
jnp
loop
pop
loopne
push
push
xor
loop
mov
imul
scas
orl
cmpb
xor
mov
scas
jb
mov
mov
lds
sub
jns
mov
clc
repnz
insl
push
fcmove
dec
stc
pop
or
push
or
sub
nop
es
pop
cmp
xlat
mov
lcall
mov
mov
je
pop
push
in
sub
leave
sub
jae
movsl
cmc
dec
jge
fwait
in
movsb
pop
aam
dec
mov
adc
mov
mov
add
mov
test
inc
repz
les
stos
mov
pop
jl
adc
add
pop
lcall
fimuls
cmp
aas
jp
cmpsb
inc
or
adc
scas
or
arpl
jle
shll
lcall
push
dec
and
or
xchg
pop
shr
add
inc
cmp
sub
out
aad
lahf
leave
pop
xor
push
pop
pop
pushf
shll
mov
mov
push
daa
jne
mov
mov
dec
fldl
adc
sbb
imul
inc
lea
out
ficoms
mov
in
and
lods
shlb
js
not
jg
pop
push
jg
add
mov
js
inc
cs
daa
mov
cld
or
incb
in
bound
pop
out
xchg
or
mov
dec
cmp
jns
fldenv
xchg
or
inc
mov
dec
add
mov
mov
je
dec
push
in
and
sahf
fcmovne
pop
into
push
gs
pop
mov
mov
mov
xchg
pop
clc
adc
fldt
stos
arpl
lods
mov
sub
aad
sub
cli
jae
and
sbb
xor
int3
neg
enter
mov
pop
pop
outsl
jle
add
test
pop
shlb
inc
fwait
scas
dec
push
sub
icebp
shr
fmulp
or
xorb
mov
add
iret
and
mov
cmpsb
bound
cmp
fdivr
daa
mov
mov
jnp
stos
arpl
test
dec
ljmp
dec
test
sahf
sahf
sbb
push
je
lahf
sbb
push
mov
das
adc
dec
lret
push
pusha
fistps
cmp
add
jbe
dec
testl
out
lods
add
add
mov
test
push
loop
adc
addr16
into
mov
aam
js
cmp
jb
cmp
push
loop
in
inc
sbb
movsb
push
xchg
xchg
sub
mov
into
mov
stc
lods
and
shlb
pushf
adc
mov
mulb
cmc
insb
push
add
xorb
xor
inc
mov
call
out
xchg
ja
pop
insb
daa
sahf
mov
jbe
ret
test
test
fnstsw
jg
xchg
add
enter
sbb
jns
jp
lea
lcall
xor
outsb
and
scas
adc
xor
into
cmp
jno,pn
outsl
mov
jbe
adc
mov
cmc
push
mov
mov
loope
shlb
jecxz
movsb
std
fcomip
icebp
ds
push
js
decb
or
jb
and
test
pop
cmp
xor
dec
test
adc
movb
dec
push
cmp
mov
mov
lahf
std
pop
pop
jle
mov
xor
leave
lods
cmp
loopne
in
sti
das
in
mov
out
and
xor
rclb
leave
push
loop
ss
lcall
pop
xor
and
mov
mov
xlat
mov
shr
push
jbe
inc
out
imul
mov
push
or
and
out
xchg
dec
mov
and
adc
push
aad
fs
stos
lock
mov
mov
inc
mov
mov
jnp
mov
arpl
sub
mov
pop
dec
loopne
or
subb
xchg
and
movsw
lods
inc
xor
daa
or
call
pop
xor
leave
push
adcb
xchg
lcall
xchg
les
xchg
gs
ja
jne
orl
rorb
pusha
jae
outsb
mov
push
repnz
xchg
jle
faddp
jge
fs
xchg
dec
les
sbb
jne
clc
test
mov
jp
mov
push
out
ds
xor
fld
cmp
xor
jge
nopl
push
cmpsl
cmp
inc
xchg
in
pop
cmp
jg
and
stos
cltd
xor
gs
or
adc
jl
xor
in
lret
push
adc
mov
pop
mull
pop
pop
cmp
push
jno
add
in
xchg
pop
dec
lret
jp
fisubrs
int
xchg
push
inc
sub
mov
mov
shll
xchg
mov
inc
test
xor
fcmovnu
cltd
cmp
jae
into
into
aad
ds
pop
push
push
mov
pusha
jb
sbb
je
lahf
sti
pop
pusha
cmpsb
and
jne
incb
in
sbb
loop
add
shlb
mov
push
scas
es
scas
pop
aad
cs
adc
repz
xchg
xchg
test
popf
ret
adcb
enter
outsl
mov
neg
sub
imul
push
les
lock
xor
xchg
dec
adc
scas
into
add
cmc
fdivrs
aas
push
mov
lods
push
repnz
data16
test
sub
inc
xor
xchg
test
cmp
jl
dec
out
xorb
xor
sub
int
cmpsb
pop
or
mov
mov
xor
or
in
lods
dec
pop
jns
xchg
movsb
jecxz
aam
insb
int3
out
cmp
add
in
xchg
pushf
adc
iret
mov
xchg
and
aam
sbb
push
push
dec
jno
mov
insb
es
mov
jecxz
sarb
orb
sub
jo
sub
cld
lods
lret
ss
adc
mov
xchg
cli
out
fnsave
test
ret
icebp
stos
movsl
movsl
sbb
jge
push
ljmp
lock
in
push
sbb
ficoms
dec
cmp
dec
fsub
mov
push
xchg
push
in
test
cmp
icebp
mov
je
sar
test
and
enter
movsl
call
lret
jecxz
lods
adc
rorb
mov
mov
jp
rcrb
negb
mov
aas
aad
bound
dec
ret
xchg
add
mov
jcxz
scas
push
jmp
mov
jns
jo
add
popa
or
mov
stos
sub
sub
mov
and
scas
or
push
jb
loopne
sub
in
adcl
push
jae
lret
xchg
jle
cmp
lret
xchg
pushf
cmpsl
adc
xchg
push
aad
pop
pop
testb
mov
ret
daa
mov
movsl
add
inc
push
pop
fistpl
fs
jno
stos
dec
push
inc
cmc
mov
lods
xchg
jg
out
fisttpll
pop
ljmp
cmp
loope
outsl
pop
mov
cld
jmp
mov
sbb
outsl
cmp
add
cmpsb
and
cli
int
clc
add
lods
data16
int3
mov
mulb
iret
div
mov
test
fstps
ss
mov
lea
insl
jo
vhaddps
mov
mov
test
pop
add
cmp
and
mov
inc
and
cld
ret
leave
jl
cmp
dec
xlat
sub
aaa
in
cltd
push
movsl
cmc
mov
lret
sbb
cmp
das
mov
push
mov
mov
dec
lea
addr16
xchg
xor
das
push
ret
cwtl
push
mov
stos
push
out
les
inc
fbld
xor
cmp
add
adc
arpl
mov
cmp
loop
dec
lock
rcrl
ss
pop
xlat
jae
inc
insl
stc
add
adc
push
or
hlt
js
jecxz
out
pop
jnp
add
dec
inc
cmpl
in
mov
icebp
add
xchg
inc
inc
lods
lret
mov
pop
xor
jg
dec
jno
xchg
mov
pop
and
mov
rclb
pop
dec
xor
insl
andl
mov
jecxz
sarb
dec
xchg
pop
call
inc
leave
xchg
mov
xchg
jns
ds
dec
pop
insb
push
out
mov
mov
mov
call
add
mov
enter
rcrb
mov
ds
mov
jnp
movsb
daa
add
sub
loopne
pop
sub
lret
mov
dec
jg
jp
adc
adc
cmp
inc
cmc
mov
fbld
mov
ja
lcall
mov
and
aad
clc
xchg
cmpsl
repz
cwtl
cmp
and
loope
cli
pop
in
sbb
pop
jno
push
cli
or
movsb
inc
jnp
dec
gs
xor
jmp
fwait
push
lret
in
les
push
mov
push
clc
pop
push
out
sbb
sti
dec
idivl
imul
mov
pop
xchg
xchg
aad
jg
or
adc
gs
adc
icebp
and
outsb
cmp
xchg
or
cmp
ror
or
cli
cmp
shlb
pop
pop
xchg
or
pop
mov
mov
sbb
dec
rcll
mov
push
repnz
and
nop
mov
addr16
jb
xor
sub
push
add
in
cmpsl
in
mov
cmpl
ss
pop
xor
ds
inc
mov
add
std
mov
enter
adc
loop
aas
add
out
inc
xorl
xchg
add
roll
lcall
cmpsb
enter
fsub
jmp
cmp
mov
data16
xor
idiv
mov
ret
sbb
in
jb
fiaddl
out
mov
cmpb
into
and
cmc
pushf
sub
pop
pop
xchg
lcall
stos
adc
bound
sbb
mov
xorb
pop
mov
sub
push
jne
mov
aad
jmp
sbb
inc
adc
lds
addb
fcomp
in
adc
shr
add
jge
imul
or
jecxz
xor
mov
in
xchg
mov
push
sub
mov
cmp
push
shl
mov
in
jmp
adc
fdivs
faddp
inc
dec
insl
repz
xor
push
adc
loope
pop
mov
inc
repz
jl
pop
data16
mov
shlb
xor
pop
or
mov
jl
jb
sti
push
push
imul
cmc
test
push
sub
fidivl
inc
xor
mov
adc
push
mov
scas
mov
cmp
push
pop
mov
stc
into
aad
leave
ret
mov
cmp
in
rcr
andb
sub
adc
xor
xchg
rep
mov
mov
jle
add
in
mov
lods
in
nop
xchg
sub
and
fninit
leave
insl
dec
add
push
clc
aad
fiadds
lret
scas
sub
pusha
dec
jo
mov
inc
xchg
or
jne
add
loop
rol
nop
rcl
cmpsl
adcl
jg
mov
lds
fs
xor
fwait
aam
or
clc
scas
mov
mov
jbe
add
sahf
sbb
inc
sub
aaa
jno
dec
pop
adc
mov
daa
je
xchg
mov
adcb
ljmp
xchg
dec
cwtl
push
mov
cmp
push
sahf
mov
dec
jp
out
imul
and
mov
dec
cmpsl
ret
push
cmc
enter
jae
xchg
pop
sbb
dec
and
and
push
lret
js
les
orps
inc
je
pop
insl
mov
cmp
dec
outsl
push
add
xchg
cmc
dec
andb
mov
inc
pop
fiaddl
cmpsb
push
jnp
pop
push
ljmp
dec
jecxz
inc
jns
insl
out
xor
mov
sbb
xchg
ret
ds
je
loope
or
out
sbb
sbb
shll
mov
ljmp
cwtl
dec
sbb
and
fcmovnu
xlat
std
mov
push
out
loop
and
xor
and
dec
lret
ljmp
mov
les
lcall
outsb
fsubrs
inc
jbe
push
lahf
decl
arpl
xchg
loopne
pop
pusha
cmp
or
inc
ds
lock
jnp
scas
add
rcr
mov
lock
fsts
idiv
int3
paddusb
mov
inc
bound
sub
pop
jp
pop
push
femms
push
outsl
push
add
paddb
sub
dec
jnp
mov
adc
mov
pushf
out
aaa
add
or
cmc
pop
push
cmp
dec
and
out
mov
fcom
mov
lods
sbb
lret
cmp
or
movsb
xor
popl
shrb
lcall
outsb
popf
dec
lret
div
mov
mov
pop
pop
ss
sub
add
add
ljmp
clc
cli
rcr
nop
lahf
movl
xchg
push
ret
lods
gs
push
outsb
xchg
jge
add
leave
outsb
xor
fwait
je
sbbl
mov
out
sbb
xchg
cmp
xor
mov
or
outsb
mov
push
and
push
fisttpl
ds
add
or
add
push
aas
in
jne
out
inc
pop
rclb
xchg
cmpb
lods
movsl
cmc
mov
pop
iret
or
rclb
into
lds
fcmovb
lds
ljmp
mov
xchg
add
loope
fmull
aas
ss
add
sub
and
cltd
jno
dec
mov
pop
popa
pusha
lret
js
sub
fwait
in
mov
inc
pop
mov
into
mov
sub
cli
dec
aad
rol
cltd
xchg
sub
fcoms
into
xor
pmaxub
cmc
lahf
jmp
adcl
push
xor
enter
into
or
repz
add
or
and
xor
mov
or
and
and
jb
mov
add
icebp
push
ljmp
stc
xchg
mov
jb
out
cmp
or
mov
lock
addl
and
lods
or
mov
fucomp
inc
jnp
sbb
xor
push
sbb
iret
dec
cli
cmp
shll
cmc
sub
sbb
cmp
call
mov
add
pop
insb
inc
sbb
lcall
popf
and
jecxz
mov
jo
ja
adc
pop
or
pop
mov
mov
xor
add
pop
les
out
and
pop
stos
mov
and
cmp
andb
jmp
sub
inc
imul
mov
push
std
xchg
jbe
adc
or
dec
xchg
test
xchg
jmp
mov
inc
imul
jb
lods
ffree
outsb
dec
push
ret
call
test
pop
clc
les
dec
int3
add
test
pop
dec
or
test
mov
movsl
imul
sbb
sbb
inc
mov
xchg
lahf
dec
incl
dec
mov
and
push
jbe
test
cwtl
xchg
pop
iret
jge
int
inc
mov
mov
cs
mov
test
add
fdivr
arpl
fwait
xchg
jg
fidivl
mov
inc
push
mov
rcl
test
jno
dec
xchg
xor
insl
fisttpl
sub
xchg
dec
fidivrs
in
xor
inc
push
call
inc
mov
popf
sbb
cli
jmp
xor
loopw
stos
sub
cmp
push
or
mov
pop
dec
movsl
inc
loope
xchg
popa
pop
push
and
lds
into
imul
pusha
xor
aam
cmp
aad
into
xor
movsb
sub
cs
add
fimull
outsb
in
mov
xchg
pop
push
cmpsb
lock
ljmp
stos
mov
out
ret
in
scas
cwtl
test
cmp
and
test
stos
mov
lret
and
out
scas
adc
les
sbb
stos
pushf
and
mov
aam
jl
sub
sub
pop
cmpsb
add
cmp
mov
loop
dec
jl
cmp
pop
add
cli
push
cld
jl
andb
shl
mov
bnd
icebp
push
xor
mov
enter
lods
mov
sti
jge
pusha
pop
cmpb
add
data16
arpl
jmp
jae
adc
push
sahf
add
stos
and
call
lret
inc
int
ret
ds
das
and
movsl
jle
pop
and
les
pop
sbb
add
mov
push
test
cwtl
sub
mov
das
test
add
pop
scas
and
movsb
test
push
into
adc
lcall
cmp
sub
in
outsb
adc
aas
mov
or
aas
sub
cld
mov
imul
cwtl
into
sahf
scas
xchg
jns
jno
out
je
ret
push
in
or
loop
pushf
inc
xchg
mov
cmp
lret
sarl
addr16
mov
lret
ds
insl
sub
in
imul
dec
lods
outsl
les
ds
dec
and
rol
jae
adc
testl
fld
out
outsl
add
pushf
pop
sub
adc
xor
sub
shlb
pop
and
cmp
pusha
outsl
and
and
movsb
pop
outsb
xchg
xlat
mov
in
scas
pop
rcrl
cwtl
mov
test
je
cmp
mov
xchg
test
add
add
nop
pop
xor
cmpsb
ja
xchg
sbb
sbb
push
inc
or
test
hlt
icebp
sub
dec
xchg
mov
test
jmp
xor
pop
dec
add
aad
jnp
cmp
cmp
insl
xchg
jp
test
pop
ror
lods
js
adc
xchg
out
out
mov
call
cmp
cmpsl
dec
sub
or
out
pop
orb
dec
in
dec
cmp
addr16
pop
pop
fmull
leave
and
loop
dec
lcall
fildll
pop
int3
rclb
pop
sahf
cltd
pop
mov
mov
mov
movsb
repnz
loope
cwtl
fimull
js
test
and
fdivrl
out
mov
notl
mov
stos
xlat
xchg
out
outsl
mov
or
movb
movsl
mov
push
jns
addb
mov
mov
sti
sbb
lods
mov
mov
adc
xor
out
arpl
xor
out
dec
fisubs
jbe
sahf
and
push
xor
mov
mov
sbb
add
mov
inc
mov
cli
stos
and
pop
xor
jb
enter
roll
inc
nop
jnp
neg
xchg
xor
cwtl
xor
repnz
sub
pop
nop
repz
cmp
add
inc
cltd
or
pop
add
ljmp
dec
mov
scas
ds
pop
mov
mov
and
inc
mov
pop
inc
imul
pop
xchg
enter
pop
addr16
pop
xchg
clc
das
lods
clc
adc
jns
in
lret
cli
std
inc
jne
pop
push
je
outsl
pop
push
adc
addb
mov
jge
imul
push
xor
xchg
xchg
out
pop
xchg
mov
sbb
fdivl
test
inc
or
lods
add
in
and
sub
mov
rcrl
add
popa
ss
mov
cmc
push
leave
xor
mov
lahf
fs
out
sbb
sbbl
int
out
pop
js
out
iret
aaa
inc
int3
mov
and
daa
cmp
out
ret
add
mov
lret
test
lock
add
adc
fldt
ret
imul
sbb
sbb
pusha
movsb
dec
push
jb
mov
push
bts
shlb
cmpsl
shlb
cmc
cltd
inc
les
enter
pop
dec
mov
pop
stc
stc
in
mov
enter
repnz
mov
mov
in
xchg
loope
imul
fiadds
nop
cmp
leave
aam
movsl
dec
sbb
jno
adc
std
outsl
aaa
inc
hlt
aaa
or
sahf
push
mov
popf
xchg
les
scas
scas
pop
mov
sbb
popa
sbb
jns
xchg
js
iret
insb
popl
shll
push
repz
jmp
jb
pop
enter
push
adc
cltd
dec
imul
lock
sbb
mov
mov
push
jns
mov
inc
pop
xchg
and
push
scas
dec
mov
stc
shrb
int3
xchg
xchg
pop
outsl
lock
out
ret
repnz
add
pusha
vmovapd
mov
fidivl
mov
jne
dec
shl
stos
inc
and
sbbl
fsubrs
in
mov
loop
adc
sti
in
mov
xor
popf
jl
jbe
ja
js
into
sbb
sub
hlt
sbb
jo
insl
out
pop
gs
push
mov
popf
pusha
pop
lods
loopne
pop
cmp
mov
dec
jge
sub
jmp
lcall
add
cltd
sub
push
or
call
pop
scas
fcompl
lcall
push
dec
cmp
adc
mov
sub
lcall
imul
push
cltd
pop
adc
adc
lcall
and
lcall
xchg
mov
push
movaps
pop
mov
sub
fidivrl
imul
insl
fdivp
bound
mov
scas
mov
jp
xchg
andl
mov
jno
mov
cmpsl
in
arpl
shl
cld
xor
mov
xchg
outsb
lds
cwtl
in
mov
push
jecxz
sti
xchg
int
ficomps
iret
call
imul
pop
jg
stc
push
mov
popf
ds
push
ss
and
shlb
insb
lock
mov
adc
jae
imul
aas
ljmp
adc
dec
sti
outsl
ds
shl
or
aad
sub
into
aaa
jp
or
mov
mov
mov
scas
aas
fdivl
imul
adc
sub
mov
sub
icebp
mov
aaa
push
hlt
inc
xrstors
inc
call
pop
movsl
inc
nop
iret
jge
cmpsl
mov
pmaddwd
gs
ficompl
mul
jns
pop
in
pusha
aam
lcall
xchg
lahf
sahf
mov
test
jo
add
pusha
daa
bound
cmp
leave
les
cmp
inc
inc
call
pop
test
and
and
xchg
mov
xor
iret
lcall
hlt
arpl
leave
outsl
push
mov
mov
pop
iret
mov
sbb
and
cld
dec
roll
sub
js
stc
mov
into
pop
mov
outsb
dec
jmp
sub
sbb
testb
cmp
push
insl
dec
outsb
test
popa
inc
xlat
clc
sbb
rolb
je
test
push
aad
sub
mov
adc
xor
movsb
mov
pushf
std
or
ljmp
loop
aas
cltd
in
scas
mov
mov
movsb
sbb
sub
mov
ljmp
outsb
pop
add
sti
xchg
ret
scas
lcall
or
aad
imul
mov
bound
mov
scas
add
or
jl
or
sahf
sbb
dec
sbb
mov
adc
mov
cwtl
gs
cmp
push
sbb
jecxz
mov
mov
aad
ret
das
mov
inc
fs
jg
mov
ja
dec
sbb
push
xchg
cld
inc
push
rcrl
les
loopne
out
repz
dec
sti
aam
negb
int3
popa
jmp
sub
jmp
loop
lods
cmp
repz
pushf
cmp
xchg
loope
jno
clc
data16
aad
jae
bound
xchg
das
lret
lods
repz
or
adc
push
mov
adc
inc
aas
fwait
add
int
in
jns
movsb
or
enter
lods
push
xchg
test
cmp
sarl
js
insb
hlt
inc
mov
dec
out
jecxz
dec
xchg
fldl
pop
data16
mov
test
inc
or
dec
xchg
cmp
lea
movsl
sbb
push
ret
push
xlat
fwait
inc
rcll
fwait
push
pop
cmpsb
cmp
and
enter
fcmovb
addr16
fsubr
push
call
mov
lods
mov
push
or
and
mov
adc
fisttpll
jmp
pushf
cltd
jb
repnz
add
clc
add
std
push
in
jns
and
movsb
jmp
mov
jecxz
mov
fstps
dec
push
mov
push
jo
jnp
lret
scas
fdiv
nop
mov
addr16
pop
inc
xchg
cmpsb
test
xor
scas
shlb
jmp
outsb
xorb
pop
nop
jae
ljmp
test
ds
stos
sub
popa
fsubrl
mov
pop
cli
dec
or
cmp
les
and
stos
dec
push
push
loop
sahf
mov
cmp
aad
inc
pop
inc
insl
divl
sbb
out
sub
outsl
leave
roll
inc
movsl
in
cmpsl
sub
lahf
popf
aam
mov
gs
mov
lods
dec
repnz
fidivrs
cmp
scas
xchg
adc
fcmove
inc
adc
daa
fiadds
add
adc
inc
das
add
or
xor
ficompl
data16
mov
mov
mov
cmp
pop
dec
and
jnp
stos
xor
cltd
sbb
adc
adc
sub
sub
xchg
jg
add
xchg
and
jle,pn
sti
adc
je
stos
lret
or
mov
adc
addr16
cli
imul
les
cltd
imul
das
push
enter
sbb
stc
lahf
fidivl
out
or
xchg
popa
mov
dec
rcrb
mov
in
pop
adc
dec
inc
xor
push
add
mov
mov
pop
mov
cmp
pop
mov
sysenter
addr16
addr16
inc
pusha
jl
inc
lahf
and
mov
hlt
and
pusha
test
in
aas
inc
js
aam
pop
mov
in
jae
std
out
inc
add
jmp
sbb
outsl
mov
jmp
mov
and
loope
cmc
pop
sbb
insl
mov
pushf
outsl
mov
or
jae
or
cld
aad
imul
cs
jecxz
test
lcall
jecxz
outsb
ret
out
seto
pop
iret
enter
sub
pop
dec
call
dec
cmpsl
bound
movsb
sbb
aam
mov
and
mov
and
mov
inc
pop
sub
in
cwtl
outsl
popf
stos
add
jg
mov
aaa
and
ss
out
jmp
ljmp
push
repz
sbb
ljmp
rorl
cwtl
stos
push
dec
dec
leave
cmp
xchg
loopne
sbb
mov
mov
cmp
pop
mov
in
stos
jl
mov
loope
push
adc
test
cmp
xchg
jno
int3
movsl
lret
pop
das
fcmovnu
inc
and
jp
in
test
pop
mov
cld
mov
sarl
xor
cwtl
jns
ret
jns
stos
popa
fwait
cmp
xchg
ret
int
push
mov
clc
pop
pop
pop
or
sar
mov
mov
adcb
popf
loopne
ljmp
imul
test
and
hlt
mov
adc
lods
sub
sub
cli
sub
jmp
inc
mov
sbb
jg
cli
js
cmp
xchg
mov
imul
xchg
gs
sub
call
arpl
pop
repnz
ror
shl
or
lret
mov
data16
ror
push
and
fisttps
mov
dec
call
cmp
jns
jge
stos
les
and
mov
out
outsb
notb
add
inc
and
xor
mov
fstl
mov
ljmp
scas
hlt
push
inc
mov
cli
mov
cmc
aad
or
clc
jecxz
movsl
or
xor
mov
xor
stos
xor
xor
leave
jecxz
ret
xor
nop
adc
flds
sub
pop
inc
mov
jae
popa
lea
jno
frstor
repnz
shrb
mov
out
mov
xor
int3
std
mov
js
ja
xor
gs
leave
test
lock
push
stos
lahf
ljmp
xor
pop
imulb
test
mov
mov
xchg
ss
iret
mov
xor
pop
fld
movsl
jb
xor
jmp
add
cmc
packuswb
push
push
add
push
fisubrs
notl
js
int3
sub
xchg
icebp
pop
mov
das
xchg
and
jmp
inc
xchg
inc
shlb
inc
pop
cmp
cmp
icebp
ficompl
xchg
jb
push
sub
imul
arpl
pushf
sub
or
inc
adc
daa
fcoml
jae
pop
cld
outsb
cmp
pusha
dec
add
xchg
sub
outsb
lock
cmpsl
rcl
add
out
add
outsb
fisubrl
and
mov
or
in
dec
scas
sbb
ret
fwait
std
mov
ss
and
and
clc
add
add
xlat
roll
push
or
fdivrl
movsb
inc
hlt
stos
cmp
outsl
mov
mov
movsl
movsl
cmp
add
lret
push
lods
xchg
out
jl
cmp
lahf
stc
sbb
adc
or
negb
add
mov
out
ds
movsb
dec
lods
inc
idivl
dec
cmpsb
push
bound
inc
cli
jb
inc
sub
out
jg
mov
xchg
inc
scas
mov
sbb
mov
ja
inc
xor
xlat
sub
pushf
cmp
jae
cmpsb
mov
lods
or
rorb
scas
mov
adc
and
in
inc
mov
xorb
pop
je
int
in
cmpsb
xor
sub
inc
xor
int3
aam
mov
test
daa
and
lret
daa
lahf
movhps
js
dec
je
hlt
in
mov
std
pop
push
mov
pop
push
mov
push
push
pop
or
or
test
ret
out
pop
and
cmp
jb
jo
lret
es
and
out
inc
cwtl
and
push
lea
xor
fcom
std
xchg
push
cli
xor
es
repnz
jmp
je
push
stos
sahf
jmp
mov
es
push
sbb
fidivrl
movsb
dec
data16
push
pop
or
push
mov
cmp
cmc
adc
int
mov
xor
inc
jge
nop
sbb
xchg
out
sbb
fcmovnu
fistl
mov
push
lcall
mov
pop
pop
outsb
sbb
insl
cli
mov
pop
loop
rclb
test
adc
push
ficoms
mov
jg
shrb
repnz
sub
xor
jo
js
fsubl
test
mul
cltd
xor
popl
dec
mov
inc
addb
xor
mov
push
xor
mov
pop
push
fld1
cmp
cltd
pop
adcl
or
sbb
dec
addr16
or
fstps
lahf
fstpt
jb
scas
sahf
stc
aas
or
stos
je
push
mov
xchg
push
pop
loop
ret
ror
insb
push
fadds
out
lods
sbb
and
adc
jg
jae
popf
fimuls
leave
mov
or
dec
jns
mov
sub
push
push
test
mov
or
into
fidivs
dec
mov
cmp
push
call
in
test
out
mov
mov
jo
or
and
or
test
mov
cmp
fimull
adc
ror
movl
leave
add
loop
mov
and
sub
cmp
aas
pop
jns
in
dec
test
jno
and
in
cld
pop
lcall
mov
pop
rorl
sbb
lods
sbb
sub
icebp
shl
mov
cwtl
ret
lock
xchg
test
movlps
in
add
jl
fs
lret
movsb
pop
push
jae
push
pop
fbstp
outsb
push
sti
mov
xlat
dec
nop
cmp
into
leave
sbb
sti
push
pop
test
out
pusha
test
stos
sub
dec
jle
rcll
or
pop
stos
pop
mov
sub
incl
int
mov
daa
insb
test
mov
dec
inc
xchg
push
push
mov
lods
jb
shrb
loope
xchg
jp
pop
push
and
cmpsl
pop
arpl
mov
adc
xor
cwtl
call
ficoms
sbb
mov
repz
cmp
cmp
cs
ret
in
ret
adc
bound
push
ljmp
jae
subl
gs
inc
repz
pop
pop
pop
adc
popa
jbe
ja
lret
jmp
fwait
pop
call
cmp
fdivr
ret
rcrl
popf
and
mov
out
sub
out
rol
cs
inc
xchg
fmul
inc
jae
nop
ret
push
sub
out
pop
sub
mov
sbb
xor
notb
imul
jle
mov
and
and
mov
dec
out
mov
cltd
pop
les
jmp
outsb
jle
add
inc
cld
mov
and
in
popa
lret
addr16
aaa
xor
in
inc
push
andl
adcb
mov
and
mov
inc
arpl
mov
outsb
pop
dec
mov
xor
pop
bound
ror
push
xor
mov
mov
imul
add
xchg
sub
jnp
into
lret
jno
jecxz
sbb
or
in
pusha
repnz
mov
test
faddl
adc
sbb
push
mov
push
cmp
lock
dec
les
fwait
jae,pn
pop
jmp
fadds
mov
dec
push
add
pop
dec
cmp
add
sbb
out
push
and
mov
cld
xor
fldcw
dec
ret
xchg
push
cmp
cmpsl
adc
mov
repnz
dec
xchg
sarl
mov
fs
sbb
in
ljmp
daa
mov
cmp
lea
adc
sbb
xorb
mov
ja
pop
iret
push
and
inc
fmul
shrl
pop
fildll
std
cmp
sub
push
jne
test
mov
in
ficoml
aam
xor
fdivrl
or
xor
loop
aad
aas
add
lock
ret
fcmovne
mov
subb
sub
push
in
and
or
lea
push
divb
mov
mov
mov
test
xchg
and
push
out
stos
and
popf
mov
pop
adc
popa
notb
mov
add
dec
sarb
pop
lods
jge
mov
sbb
aaa
pop
sub
mov
ds
jno
add
out
and
add
outsb
inc
popa
mov
fchs
mov
jp
mov
dec
xchg
push
dec
inc
out
fmull
fldcw
cmp
fidivl
loope
shll
into
adc
cli
push
pusha
mov
xor
jp
decb
push
jl
movsb
lods
insl
dec
mov
or
lret
repnz
mov
cmp
enter
in
mov
fisubs
mov
dec
icebp
fcoms
mov
iret
popf
cmpsb
loopne
sbb
pop
mov
or
jl
and
cwtl
out
xchg
ds
xor
std
push
dec
nop
aad
add
sub
lea
dec
out
push
sub
std
pop
adc
jp
call
inc
daa
sbb
and
mov
and
hlt
xchg
mov
jb
filds
fwait
and
enter
mov
cmp
std
pop
es
sbb
aas
push
jae
outsb
add
lret
xchg
arpl
stos
test
fsubs
pop
mov
bound
pop
sub
inc
cs
mov
fadds
mov
mov
int3
in
mov
lcall
mov
jns
repnz
adc
daa
xor
iret
mov
push
mov
adc
cmpsl
test
add
xor
movsl
aam
sub
insb
lock
test
xlat
test
adc
gs
cmp
or
andl
cli
popf
mov
cmpsb
fdivrp
add
pop
pop
mov
and
lock
xor
lcall
test
xchg
xchg
or
cli
add
or
jnp
movsb
fcomps
jecxz
insl
and
jmp
lahf
push
lds
or
mov
xchg
push
bts
jns
adc
xchg
inc
movsl
into
inc
cwtl
das
test
mov
test
mov
jo
mov
xchg
stc
aaa
add
pop
push
test
inc
jle
dec
adc
fists
inc
add
lods
fildl
pop
mov
inc
pop
dec
loop
or
or
roll
sub
sub
inc
mov
jmp
jb
sbb
punpckhbw
mov
or
or
add
fstpt
jl
fidivrs
jg
jge
popa
aam
sbb
cmpsb
pop
adc
cmpsb
adc
fs
daa
pop
add
lods
orl
sbb
adc
adc
enter
fwait
arpl
push
or
call
inc
pop
aam
fs
bound
mov
popa
pop
sbb
mov
outsl
cmp
data16
fnstsw
jb
shr
sbb
je
pop
push
pop
push
mov
adc
lret
push
hlt
mov
rol
lret
xchg
ficompl
jne
pop
lret
jb
notb
and
jl
xchg
push
shr
adc
push
pushf
cmp
inc
add
mov
lret
sti
sti
dec
pop
cmpsb
xchg
cmovp
jbe
add
rolb
dec
inc
loope
daa
pusha
lods
movsb
sub
int
adc
repz
jns
mov
jb
sahf
jle
pushf
out
int3
jo
mov
xchg
inc
outsb
mov
dec
dec
xor
in
xchg
xor
mov
cmp
and
in
jne
xor
sub
js
xchg
push
in
inc
xchg
jp
adc
add
sbb
pop
push
mov
insb
shrl
repnz
addr16
jnp
dec
out
jnp
inc
out
int
std
enter
dec
and
shlb
andl
mov
std
sub
fdivrl
add
in
push
outsl
clc
cmpsl
shlb
dec
fs
shrl
leave
mov
jp
sbb
shl
xor
mov
adc
xchg
dec
mov
xchg
mov
cltd
push
and
rcrb
stos
add
sbb
das
nop
sar
aam
and
out
xchg
add
pop
lods
mov
lock
sbb
cmpsl
cmpsl
pop
sub
cmpsb
xchg
adc
shlb
push
call
outsb
xor
rorl
jg
adc
jmp
mov
cmp
daa
shlb
rcrl
xchg
push
ret
lds
mov
pop
sbb
mov
mov
fxch
xchg
test
xor
xchg
mov
movsl
pop
std
jb
stos
mov
dec
push
add
bnd
push
jmp
test
jno
or
mov
aad
inc
ljmp
mov
nop
pushf
pop
pop
mov
lock
movsb
data16
jno
addl
add
loop
mov
push
out
clc
sub
data16
dec
sar
pop
and
mov
fstp
sub
pop
das
and
roll
rclb
add
cmp
jns
mov
test
std
add
cmp
ds
dec
sbb
cli
sbb
les
sub
or
xor
add
mov
std
mov
lahf
jbe
arpl
inc
push
in
push
js
mov
add
jbe
push
ret
bound
pop
loope
or
push
sahf
jo
cmp
sub
mov
mov
mov
aas
xorl
scas
ss
lahf
jae
cmp
stos
xor
ljmp
fdivs
push
lcall
jne
imul
pop
lret
sub
add
data16
xchg
out
repnz
pushf
pop
imul
mov
stos
pushf
add
insl
pop
jmp
jge
insl
ret
lret
cmpl
mov
rorl
jle
out
add
sub
test
aam
ljmp
jmp
sub
popa
je
cmp
lahf
adc
jnp
jp
ficompl
ljmp
jge
shlb
xorb
jmp
push
jecxz
or
or
pushf
inc
push
cmp
jecxz
repz
lods
test
out
dec
mov
add
sbb
add
jmp
xchg
hlt
jbe
hlt
or
rep
sbb
out
inc
fidivl
fisttpll
pop
popa
sub
cmpb
pusha
dec
testb
arpl
mov
cli
loope
sbb
aam
mov
sbb
mov
cmp
xchg
insl
xorl
xor
ja
dec
ds
cmpsl
lcall
dec
xor
ret
sbb
mov
pushf
push
dec
loopne
nop
add
push
pop
sbb
mov
lcall
imul
mov
sbb
dec
cmc
shrl
cmpsl
shrl
outsb
stos
popf
push
iret
push
out
fsubrp
fcmovu
nop
mov
jmp
xchg
pop
repnz
sbb
loope
jne
jmp
mov
mov
push
sbb
jb
ss
xor
int3
jge
int
xchg
imul
pop
test
shlb
or
add
inc
dec
mov
cmp
mov
imul
cmp
sbb
cmp
test
sbb
movsb
sbb
mov
adc
insb
or
ja
cmp
push
pop
cwtl
fmul
arpl
xchg
inc
lds
lcall
nop
jb
fdivl
pop
ret
loope
out
nopl
jne
xlat
iret
add
xor
insb
jp
push
rcll
outsl
mov
cmp
xchg
icebp
xchg
pop
jp
add
pmaxub
repz
add
xor
lock
xor
adc
loopne
in
mov
rol
and
jae
and
dec
or
and
test
mov
roll
enter
sub
mov
adc
xchg
ror
fstl
xchg
loope
stc
xor
sub
adc
ljmp
adc
cli
jb
jbe
lea
push
rcr
xchg
and
out
scas
test
lds
inc
xchg
mov
and
sbb
ret
repz
sub
in
sbb
lods
and
jb
addb
stc
xchg
dec
ret
push
inc
xor
mov
add
jge
sub
das
nop
daa
aad
mov
scas
xchg
or
jo
leave
mov
setae
xor
jmp
sti
inc
xor
and
imul
pop
hlt
mov
lods
xchg
fists
pushf
mov
daa
lcall
xchg
fimull
jmp
mov
pop
in
js
jns
push
int
iret
mov
fldcw
jle
xorl
jno
sub
mov
mov
in
push
jl
mov
mov
inc
add
divb
xor
mov
hlt
pop
cmc
jle
cltd
adc
inc
and
bound
shufps
xorl
das
les
loope
cmp
xchg
sub
push
mov
cmp
icebp
inc
lcall
jge
sti
push
add
cmp
test
xchg
jnp
push
jmp
outsb
push
xchg
push
sbb
jp
xlat
adc
dec
mov
push
push
mov
pop
inc
push
xchg
push
and
fldenv
pushf
fcoml
mov
sub
test
mov
js
fisubl
pop
fcmovnb
popa
pop
ja
fst
aas
scas
stc
aam
call
adc
fsubs
jae
test
and
push
jbe
lret
or
sub
lahf
xor
imul
into
add
lods
movsb
nop
stos
notl
xchg
fxch
loopne
addl
fdiv
jb
mov
lea
shll
xchg
lret
mov
add
inc
popa
outsl
notb
into
xchg
mov
pusha
repnz
decb
das
jnp
xor
xchg
inc
push
iret
mov
push
xchg
add
inc
icebp
es
cmp
push
jecxz
sub
mov
not
xchg
sub
lret
sti
xor
mov
dec
jmp
rorb
mov
xchg
lds
sbb
je
adc
data16
pop
push
popf
jge
xor
cmpsl
fdivrs
mov
pop
lds
sub
sar
push
jle
cltd
loop
ficompl
fwait
mov
jecxz
imulb
push
mov
pushf
mov
pop
aaa
js
in
cmc
das
xchg
test
mov
mov
add
sub
pop
insl
cltd
push
mov
and
jmp
jnp
lahf
rcrb
lahf
clc
inc
push
imul
idivb
fwait
repz
mov
das
push
push
orl
and
pushf
sbb
xor
mov
sub
cltd
sbb
pushl
jno
call
sbb
stos
fdivp
fprem
lea
mov
fisttpll
ss
outsl
in
xchg
cld
je
stc
mov
cmp
cmpsl
ret
xchg
movsl
mov
sub
jle
stos
push
scas
or
faddl
xor
scas
add
xor
rcrl
jbe
add
sub
inc
ss
jno
mov
sbb
stc
lods
mov
test
call
loope
lahf
sbb
and
stos
push
leave
enter
mov
into
inc
cmp
xchg
gs
push
xchg
cli
xchg
add
push
test
mov
mov
jb
int
jmp
rorb
ja
jecxz
loopne
mov
xor
enter
mov
xchg
fs
xorl
mov
fidivl
and
cmc
mov
shlb
lea
in
into
loope
and
aad
jge
dec
inc
ljmp
rcrl
push
and
dec
jae
jno
push
mov
sbbl
adc
and
lods
mov
and
test
hlt
into
push
fidivrs
cli
aas
gs
shlb
lcall
aad
pop
adc
sbb
sbb
adc
stos
out
clc
adc
insb
push
pushf
out
push
xchg
or
pushf
out
xchg
inc
jp
stos
popa
jae
stos
xchg
jae
sbb
addb
repnz
cmp
cmp
jg
and
push
cld
jbe
out
and
out
outsb
and
lock
push
aaa
pop
mov
std
add
movsl
lock
adc
daa
mov
xchg
fldt
les
ret
cmpsl
and
jo
inc
ss
inc
sbb
lahf
pop
xchg
xchg
push
mov
push
push
mov
jmp
cmp
dec
mov
data16
out
mov
xor
xor
sub
out
sarl
cs
sbb
ss
dec
and
mov
rcl
dec
pop
imul
es
mov
jecxz
andb
cmp
sti
es
inc
xor
jne
dec
stos
mov
mov
aam
stos
sub
cwtl
xchg
jo
mov
xor
mov
cmp
adc
fucomip
xor
jmp
in
repnz
stos
loopne
sar
stc
pusha
xor
int
push
dec
push
and
sbb
cmp
aas
mov
fadds
xor
call
dec
pop
xlat
sbb
fdivl
jp
repz
xchg
and
sbb
xor
shld
sub
or
add
pop
push
aad
loopne
sbb
cmp
repz
sete
stc
mov
mov
adc
pop
pushfw
jno
repz
jbe
xor
xor
pop
mov
and
test
ret
popf
loope
pushf
xchg
cmp
js
sbb
mov
or
rol
mov
out
subb
mov
in
sub
test
js
or
pop
sbb
adc
cmpb
adc
adc
sbb
shlb
pop
aas
push
or
mov
hlt
out
cs
adc
adc
jecxz
in
movsb
faddl
mov
enter
mov
jle
pop
fcoms
cmp
ficoms
les
clc
or
sub
dec
in
or
fdivl
and
mov
xor
adc
out
stc
and
mov
out
or
pop
sahf
fnstenv
repnz
push
add
into
out
add
add
inc
push
sbb
fildll
cli
fld
inc
xchg
test
push
std
xchg
ss
push
xlat
repz
push
aam
inc
jns
adc
mov
sahf
mov
sub
sub
ss
in
push
ja
rclb
in
push
es
int3
xchg
test
mov
mov
push
or
cmpsl
jge
je
in
add
pusha
mov
popa
fs
cmpb
adc
sbb
sahf
cmp
lea
insl
or
dec
push
sbb
jnp
mov
mov
sub
jecxz
or
jg
pop
leave
cmp
repz
push
shll
pop
lds
inc
pop
lret
xchg
js
mov
xor
cwtl
clc
cmpsb
out
sahf
dec
push
cmp
dec
pop
jge
xchg
sub
and
xor
int3
push
setp
mov
test
ss
pop
fiaddl
mov
or
and
dec
jbe
sbb
lock
pusha
pop
bound
jp
xchg
pushf
sbbl
mov
push
push
sbb
xor
xor
lret
sub
orl
iret
xor
sub
data16
loope
add
cmpsl
cltd
mov
movsl
cmpsb
sti
pusha
sbb
mov
ficompl
push
out
sti
cmp
in
sub
inc
add
xchg
add
inc
jg
pop
mov
mov
enter
push
mov
dec
xchg
add
xchg
push
sahf
fmul
mov
inc
mov
fcoml
in
rcl
mov
pop
xchg
pop
popf
cli
push
in
in
lds
sbb
jne
sti
sub
or
sarb
jbe
pop
addr16
add
sarb
das
testl
mov
lret
sub
aam
movsl
gs
aaa
faddl
out
push
xorb
and
outsl
or
inc
mov
dec
pop
inc
jae
push
dec
stos
push
dec
into
mov
in
cltd
stos
pop
inc
mov
test
pop
jno
cmpsl
push
mov
sub
pop
sbb
dec
lea
js
xchg
insb
sbb
addr16
xchg
ja
stc
xor
hlt
nop
movsb
cmpb
aam
fs
lahf
jns
test
cltd
push
mov
movsb
xchg
jecxz
in
ret
xchg
js,pn
jbe
imull
or
cmp
cltd
enter
xchg
stos
stos
jp
adc
mov
fstl
cld
mov
lock
and
pop
ss
orl
lret
test
roll
adc
addr16
incb
jbe
and
stos
shll
sahf
cmp
int
inc
test
mov
push
lds
xchg
push
mov
scas
inc
lahf
movsb
jb
test
lret
loope
push
sarl
arpl
dec
mov
popa
dec
popl
les
scas
mov
push
xor
aas
aad
inc
shlb
sbb
lahf
mov
je
xchg
or
je
cmp
insb
push
lock
mov
sbb
fdivl
fisubrl
xchg
cmp
aaa
mov
stos
dec
dec
jnp
mov
cwtl
jmp
mov
in
xor
pop
xor
fwait
sbb
cmp
mov
mov
into
sti
dec
arpl
and
pushf
sub
mov
aad
lcall
popf
ljmp
cmp
push
xor
mov
in
dec
mov
mov
les
aad
or
xlat
or
or
in
push
or
andb
xor
ret
lods
cmp
mov
push
cmpl
and
inc
in
mov
insl
lods
negb
dec
fpatan
fdivr
add
mov
nop
cwtl
xchg
ret
lcall
push
xchg
inc
in
iret
aas
mov
lahf
fidivs
cmc
dec
or
mov
stos
dec
ret
pop
mov
jl
sub
xchg
jg
xor
pop
imull
scas
dec
fsubr
mov
push
sbb
popf
mov
clc
cmpsb
or
sbb
push
mov
pushf
adc
push
mov
xchg
test
mov
jno
cmp
scas
popf
ret
and
adc
pop
loope
fisubs
int
hlt
mov
add
movmskps
sbb
les
push
xlat
dec
mov
insl
jmpw
aaa
pop
mov
pop
call
push
aam
cltd
lods
jb
push
in
movsl
jmp
mov
jno
push
inc
mov
test
arpl
mov
dec
aaa
insb
mov
adc
cmpsl
pop
loope
push
insl
inc
cs
fsubrl
loopne
jns
xchg
push
ss
test
xchg
pusha
pop
and
jge
dec
fisttpll
les
inc
xchg
dec
outsb
xchg
rorl
jb
and
jmp
je
movl
lahf
pop
sub
push
inc
les
or
mov
js
mov
add
fnstsw
orb
jg
add
ficoms
or
sbb
jnp
cld
jae
fiaddl
jb
pop
gs
inc
andb
notb
push
arpl
dec
cli
in
xor
insl
push
loopne
xchg
clc
sti
dec
jecxz
xchg
divb
imul
push
in
mov
pop
js
sub
ret
inc
in
jp
popf
dec
in
shrl
add
popf
adc
call
xor
leave
pop
sbb
mov
pushf
mov
imul
pop
fbstp
or
xor
add
out
loopne
test
lret
insl
int3
lods
insl
cmpb
pop
mov
add
or
ret
lret
jo
ljmp
setae
movsb
fsts
inc
pop
add
fwait
and
imul
pop
cmp
xor
xor
mov
pop
jb
mov
sub
mov
inc
aam
sbb
insb
leave
add
call
insl
lods
mov
sub
adc
jns
jno
jl
mov
fistpll
xor
std
push
rorb
xchg
in
pop
mov
stos
xlat
jbe
pop
mov
sbb
scas
iret
repz
test
sub
int3
sbb
scas
xor
std
add
bound
scas
call
js
xor
subl
push
imul
sahf
cmp
lret
and
dec
dec
outsb
add
out
sbb
imul
adc
mov
xchg
mov
dec
mov
or
sub
adc
xor
rcrb
iret
or
dec
imul
dec
add
outsl
fdivs
pop
addb
lahf
ret
mov
scas
pop
or
mov
es
insb
inc
in
cs
gs
mov
push
fnstcw
sub
into
in
mov
dec
sbb
repz
jne
jno
rcr
push
mov
push
sub
mov
sub
cli
leave
frstor
es
cmc
and
or
mov
scas
cs
jno
imul
in
add
pop
and
or
leave
jle
mov
or
jle
xor
jl
or
dec
jecxz
adc
test
inc
jl,pn
add
cld
in
neg
adc
xchg
dec
or
out
push
std
cmp
jecxz
push
rolb
inc
adc
popa
xor
ljmp
repz
dec
xor
add
adc
in
fidivrl
ds
loopne
and
movsb
cmpsl
dec
scas
jmp
repnz
jbe
inc
stc
scas
or
cld
push
imul
xchg
fistpll
ret
shlb
lods
adc
neg
cmp
jg
mov
push
pop
cmpl
lea
loopne
jl
iret
xor
inc
add
in
idivb
mov
push
cs
icebp
aas
or
in
xlat
ja
jmp
mov
insl
test
xor
sarl
mov
push
addb
fsubl
mov
lahf
dec
lret
push
mov
xchg
push
inc
push
mov
loopne
test
mov
dec
sub
shll
into
jns
sub
mov
dec
mov
lock
fcomip
pushl
enter
xchg
cmp
bnd
push
jge
inc
dec
xchg
xlat
lret
cmp
popa
push
or
fwait
leave
sbbl
pusha
scas
lahf
sahf
push
call
iret
pop
dec
inc
inc
cmp
mov
dec
sbb
pop
lcall
jmp
incb
ret
mov
ret
or
cmp
arpl
and
cmp
notb
bound
lods
imul
xor
dec
fsubp
lret
mov
jae
jmp
mov
lahf
cld
jge
jns
shlb
mov
dec
xlat
clc
jae
jp
add
dec
leave
ljmp
lret
in
pop
lret
add
stos
xorl
cwtl
bound
xchg
adc
iret
or
clc
ja
and
cmp
and
mov
mov
mov
xorl
lret
out
jo
mov
push
xor
pushf
pop
out
aaa
stos
int3
pop
enter
bound
lock
mov
pop
mov
leave
out
std
sub
push
stos
sahf
dec
push
push
mov
push
imul
in
rol
fstpl
sbb
int3
push
lret
sub
inc
mov
js
jnp
fnstsw
ss
std
lret
fisubrs
call
dec
shll
cmp
cmc
call
loope
jge
push
and
aam
addr16
jo
sub
out
popa
out
jns
repnz
mov
movsb
or
adc
addr16
xor
aad
ret
lock
std
dec
mov
mov
mov
push
jecxz
xor
cld
out
cwtl
mov
movb
xchg
jns
vmovaps
sar
das
decb
or
or
xchg
and
lahf
xchg
push
fs
mov
clc
adc
dec
xor
sub
mov
inc
iret
imull
jb
inc
movsl
nop
push
cmp
adc
xor
push
in
call
dec
std
cwtl
pop
js
test
xchg
ja
inc
mov
stos
in
inc
push
adc
fstps
in
mov
sub
test
les
fs
push
and
xor
call
mov
test
xor
out
scas
jp
and
lahf
xchg
mov
xchg
inc
aad
mov
test
aam
xor
adc
push
xchg
mov
fstpl
lds
stc
lock
add
lock
leave
test
add
add
dec
rorl
call
scas
inc
jns
xchg
out
sti
sbb
inc
outsl
adc
xchg
push
std
xor
sbb
push
push
dec
cmp
jnp
dec
xlat
mov
test
test
or
pop
mov
xchg
in
iret
movsb
scas
add
fcoml
jnp
test
icebp
jge
stos
enter
cmovne
sub
xchg
mov
cmp
sub
daa
leave
adc
fs
and
jbe
inc
sbb
int
pop
inc
cmp
mov
mov
je
push
push
adcb
mov
cmp
aam
push
and
ljmp
arpl
stos
movsl
enter
add
test
inc
mov
jg
ffree
sub
stc
mov
xrelease
xchg
je
dec
dec
jmp
and
loop
sbb
mov
pop
lret
mov
movsb
cmp
push
loopne
out
mov
xor
arpl
icebp
lock
rcll
pop
xchg
pop
mov
push
pusha
pop
scas
int
sub
or
int
and
and
push
mov
push
pop
les
sbb
insb
sub
sbb
test
adcl
mov
jg
cmp
ja
lods
cs
pop
pop
mov
xchg
lock
mov
lods
xor
sbb
in
test
push
fcoml
mov
loop
icebp
adc
sub
scas
inc
pushw
rcr
pop
stc
push
ret
jge
cmp
pop
mov
mov
lods
std
dec
arpl
pop
aam
call
push
adc
adc
sti
xor
sub
insl
rcrl
xchg
adc
loop
mov
push
add
pop
test
ret
mov
shr
pushf
add
sub
test
fimull
call
lahf
int
or
mov
addb
lret
inc
mov
pop
cmp
dec
push
cmp
es
insb
dec
test
add
pusha
das
inc
mov
dec
jno
in
lds
stos
push
inc
shrb
icebp
mov
bnd
mov
pop
loope
jecxz
inc
fmulp
xchg
add
xchg
cmp
pop
and
xchg
test
xor
imul
mov
mov
dec
es
mov
mov
insl
inc
pop
and
in
rorl
ljmp
xorl
pop
jno
and
jp
push
divl
mov
and
js
in
arpl
jge
divl
xchg
in
mov
mov
cmp
leave
call
pusha
out
adc
test
arpl
pop
cmp
ret
cmp
xor
mov
mov
sbb
inc
xor
mov
sbb
jmp
or
std
fiaddl
sahf
mov
das
mov
mov
jle
push
in
pop
or
shll
fidivrs
rcrb
and
in
iret
mov
mov
push
fs
pop
sub
shll
cmp
cmp
scas
jbe
sub
cld
popa
push
fstl
icebp
scas
jecxz
inc
xchg
push
outsl
stos
adc
in
out
ret
mov
sub
adc
pop
sub
jge
cmpsl
fs
or
xchg
cmpsb
add
dec
xchg
shlb
xchg
adc
je
test
inc
mov
dec
ds
add
xor
dec
cmp
jmp
dec
add
arpl
ror
cltd
jmp
mov
sti
insl
cmpsb
cmp
mov
push
out
ja,pn
add
xorb
mov
or
lret
xchg
inc
xchg
idivl
mov
inc
add
or
sbb
imul
add
sub
push
inc
lods
pop
addl
je
clc
dec
into
fisttps
xor
adc
add
outsl
in
stos
testb
pop
lds
sbb
lret
sbb
movsb
je
movsl
arpl
mov
shll
out
leave
mov
das
enter
xchg
lahf
stos
out
jns
sbb
ror
out
and
popf
iret
lds
xor
xchg
insl
push
and
and
add
out
pop
data16
xchg
fistl
and
push
sbb
pusha
lods
cmpsl
or
dec
lock
push
inc
mov
mov
pop
adcl
and
mov
mov
cmc
js
sbb
jle
mov
popa
xor
decl
sub
add
add
or
push
mov
inc
inc
mov
mov
cmp
xchg
daa
pop
add
push
fldenv
inc
lea
xor
sbb
lret
lea
clc
scas
cmpb
cmp
fdivrp
lock
push
or
sahf
mov
mov
push
sbbl
idivl
out
inc
gs
rorl
adc
push
pop
sbb
lds
lahf
jp
in
xchg
add
test
jne
xor
sbb
je
xchg
jp
pop
insl
jns
push
inc
jb
adcb
adc
mov
repnz
imul
addl
cmp
and
cmp
xchg
sub
lea
mov
insl
add
mov
add
out
sub
sbb
test
iret
or
mov
rcr
pop
outsl
xchg
in
ret
cwtl
dec
andl
xor
xchg
fcoml
in
sub
dec
xor
adc
dec
repz
xlat
cld
inc
fdivl
jbe
repnz
cltd
push
lea
pushf
mov
lock
mov
adc
cld
and
ret
fistps
jne
adc
sti
or
sahf
popf
repnz
dec
cmp
push
popf
loopne
cmp
and
push
push
dec
into
sub
pop
xchg
adc
jg
cmp
inc
idivb
or
repnz
push
movsl
cmpsl
cmpsb
loope
sub
dec
cmp
cmpsl
cld
mov
ss
test
inc
mov
in
call
fdivrs
shl
dec
push
xor
lock
xor
das
push
lea
sti
test
dec
mov
or
sbb
test
cwtl
or
adc
mov
cld
mov
testl
sahf
mov
shlb
test
testb
loopne
test
pop
cmp
out
js
imul
dec
sbb
ret
decb
roll
sbb
subb
sub
fucomp
daa
dec
pop
xchg
fisubl
mov
sbb
xor
inc
xor
mov
jg
fistps
cmpsl
jne
pop
ja
aad
xorb
push
add
lret
xchg
and
pop
subl
mov
fcomi
xor
dec
jns
mov
insb
push
pop
cmp
mov
loope
dec
fisttpl
inc
testl
jae
adc
sahf
loope
inc
and
xor
repz
aas
xor
mov
rcr
js
repz
add
push
sbb
dec
out
scas
ret
adc
mov
pop
inc
dec
test
pop
dec
ja
sub
dec
add
pop
push
cmp
mov
mov
sbb
jb
mov
nop
bound
sub
dec
movsb
vaddps
cmp
or
into
cld
jb
inc
xchg
roll
fcompl
les
cmp
add
lret
ss
addb
addr16
inc
and
pop
inc
lods
mov
out
cmpsb
cltd
adc
aas
pushf
stos
sbb
jnp
repz
imul
test
je
addr16
call
lcall
test
in
in
sti
mov
pop
cmpsl
jecxz
js
adc
pop
lods
mov
and
in
jp
xchg
push
dec
js
pop
clc
scas
jge
xchg
addl
shl
sub
push
std
loopne
cmc
in
mov
fdivrs
shl
adc
ds
pushf
outsl
filds
and
mov
lretw
loop
sbb
enter
imul
mov
or
out
sub
je
dec
mul
pop
xchg
imul
ret
das
pop
ret
or
lahf
scas
push
gs
cmp
mov
jno
iret
fs
mov
fsubrs
fwait
mov
xor
sub
les
xchg
jne
push
add
add
jle
ss
xor
xchg
int3
inc
insb
mov
and
and
sti
idivl
adc
push
and
ljmp
sbb
pusha
fldenv
es
bound
test
add
mov
decl
inc
inc
and
or
sbb
jno
jo
mov
mov
adc
mov
or
int3
movsl
insb
adc
mov
mov
inc
sub
sbb
loop
mov
cli
bound
jmp
fadds
addr16
cmp
cmp
mov
mov
mov
sti
sbb
loop
pop
mov
sub
inc
adc
out
mov
test
push
mov
cwtl
adc
push
test
push
and
xchg
sbb
ljmp
int3
inc
or
cmc
dec
cld
cltd
daa
es
push
xchg
scas
mov
adc
pushl
add
xchg
cld
xor
inc
mov
xor
cwtl
jecxz
push
in
jge
in
xchg
mov
bound
add
in
mov
push
xlat
mov
sbb
ficomps
inc
xchg
mov
outsl
cmpsl
pop
jb
test
jne
iret
jb
pop
test
xchg
insl
and
test
sti
jb
lock
mov
fisubs
rcl
mov
js
mov
jl
lret
sbb
or
arpl
xchg
in
std
xchg
ret
mov
pop
xor
data16
fstpl
xchg
js
fiadds
fimull
push
push
aad
inc
pop
add
pop
cmc
mov
jl
inc
xchg
dec
pop
in
inc
loope
lods
cmp
fs
xor
push
mov
pop
sub
add
data16
in
int3
push
mov
pop
enter
xchg
xchg
xchg
xor
lcall
aas
imul
addr16
repz
xchg
and
pop
iret
das
xchg
adc
and
pushf
mov
sbb
xchg
xchg
jo
out
jo
and
cli
jge
pop
ret
xchg
push
cmp
or
mov
and
mov
jecxz
pop
add
xchg
inc
test
cmp
adc
sub
imul
or
enter
add
jno
pushf
inc
inc
notl
inc
andb
sub
push
mov
pop
add
mov
xchg
rol
arpl
inc
xchg
inc
add
out
rcll
adc
scas
leave
mov
jbe
loop
outsl
fcompl
xorl
fcomi
mov
inc
adc
decl
or
fisttps
mov
push
stc
dec
lahf
icebp
jle
xchg
incl
outsl
xchg
shll
imul
fcmovnbe
ljmp
jb
test
jae
push
dec
xor
or
addr16
mov
cmp
lahf
adc
mov
xchg
mov
rcrl
lods
imul
xchg
pop
jns
cmp
arpl
fistps
mul
mov
in
movsl
stos
add
fstl
mov
lods
pop
das
push
mov
xor
cld
pushf
inc
fdiv
cmp
mov
mov
push
mov
add
out
jl
test
iret
sbbl
in
mov
rcr
les
mov
xor
jbe
dec
mov
icebp
add
shlb
xchg
lds
outsl
fbstp
or
cmp
mov
shll
pop
dec
sarb
mov
lea
jnp
outsb
push
std
cmp
ja
mov
xor
lcall
xor
pop
bswap
xchg
insl
mov
lret
dec
inc
cmp
push
add
or
outsb
mov
aaa
je
sub
or
notb
add
test
aaa
icebp
sub
test
xchg
jnp
rorl
jb
ret
xchg
aad
pop
stc
mov
stc
roll
dec
mov
dec
fsubl
popf
mov
stos
out
lock
jno
cltd
push
mov
mov
cmp
adc
inc
leave
mov
int3
adc
jg
push
dec
pop
mov
mov
pop
in
push
cmp
and
adc
sub
sub
cwtl
outsb
push
mov
mov
jbe
dec
test
pop
pop
sub
cmpsb
mov
mov
fcoml
jp
jg
push
cmpsb
jbe
ret
jbe
hlt
aas
addb
adc
enter
push
je
fwait
xor
je
push
stos
adcl
adc
stc
dec
fists
fldt
fdivr
fwait
ret
out
add
sbbb
sub
push
adc
cld
xchg
pop
imul
jecxz
sbb
mov
stc
outsl
dec
dec
ds
xor
push
jnp
mov
add
dec
mov
into
into
dec
pushf
jecxz
sbb
or
mov
mov
fstpl
or
in
int3
fdivrs
cltd
pop
cmp
dec
sbb
rorb
pop
pop
push
push
and
lds
int3
jbe
mov
jno
sub
gs
xchg
push
pop
inc
mov
mov
xchg
pop
adc
fldt
in
insl
mov
cwtl
mov
cmc
sub
fdivrl
jg
inc
sub
outsl
sbb
push
ljmp
popa
and
test
sub
and
dec
daa
mov
mov
mov
hlt
mov
jge
pop
sub
jmp
inc
cmpsb
mov
dec
pushfw
sbbb
pop
add
lret
dec
mov
in
add
xchg
aad
ljmp
mov
cs
nop
jbe
mov
or
addr16
xor
push
xor
aad
mov
mov
push
cli
or
das
jecxz
mov
inc
repnz
in
mov
push
sbb
mov
ss
xchg
jp
dec
mov
add
in
dec
gs
xchg
leave
add
xor
loope
dec
pop
mov
int3
jl
push
push
mov
repnz
in
or
out
in
icebp
lcall
dec
jp
stos
scas
inc
jge
cwtl
ljmp
aad
sbb
dec
pop
add
aas
xor
mov
int
jno
imul
cmc
xchg
loopne
sub
sbb
jbe
adc
mov
rcrl
nop
mov
xor
int3
inc
sbbb
mov
js
dec
mov
andb
idivl
icebp
push
insl
mov
shll
out
fcmovnb
adc
or
mov
out
inc
push
ds
in
push
xchg
call
mov
daa
inc
cmp
sub
add
xchg
icebp
js
in
xor
data16
notl
scas
fdivs
iret
mov
cltd
xchg
imul
pop
jne
cmc
lods
adc
push
out
mov
pop
imul
fstl
push
rcll
cmp
es
or
mov
xchg
sub
sahf
add
lahf
loop
push
xchg
sbb
lock
das
mov
jbe
cmp
pop
lea
shlb
sar
bound
jno
clc
movsb
shll
cmp
adc
add
xchg
dec
cmp
cmp
cwtl
lods
mov
adc
aaa
mov
fcmove
cwtl
xlat
jp
hlt
arpl
or
xchg
inc
sbb
mov
jl
hlt
and
jmp
adc
pushf
mov
pushf
push
pop
bnd
or
fdivrs
mov
loop
dec
stos
jo
cmp
lret
es
call
popa
imul
pop
dec
jo
jbe
cmpsb
repz
mov
xor
je
ficomps
in
pushf
mov
mov
insb
cld
cmc
pop
lahf
jae
dec
fisttps
adc
shrb
xor
mov
xor
push
aad
scas
cmp
lock
outsl
loopne
sub
sub
add
aaa
je
inc
xor
fdivp
ficoml
mov
xor
jb
cwtl
pop
fisubs
jnp
jge
dec
cmp
sub
mov
jle
sbb
fidivs
bound
test
and
in
daa
cwtl
sub
xor
imul
mov
jmp
mov
adc
xchg
jae
fistl
imul
ljmp
xor
mov
mov
int
dec
xor
loopne
dec
cmp
imul
lods
pop
and
leave
pop
stos
loopne
adc
nop
mov
movsb
add
test
loope
add
add
xchg
fstpl
dec
nop
sbb
bound
nop
ljmp
mov
fwait
inc
xor
and
and
lret
call
adc
stos
sub
test
ljmp
into
mov
inc
pop
dec
rol
and
adc
orb
pop
xor
in
das
xchg
xlat
clc
lock
pop
rcr
rcll
iret
insb
xchg
jae
mov
sbb
js
mov
jae
ret
inc
sbb
movsb
out
in
test
rcrl
incb
aas
or
pusha
cmp
mov
cmp
test
leave
ror
push
push
cmp
hlt
lock
cs
das
out
std
mov
and
aam
adc
pop
and
js
mov
inc
sub
push
xchg
mov
pop
add
mov
pop
or
fucomi
mov
in
popa
mov
inc
in
pop
mov
sbb
rcl
cmp
mov
mov
adc
loope
inc
roll
dec
cmp
hlt
fldl
movsl
cmp
pop
mov
push
pop
inc
in
add
in
adcb
fidivl
sub
lods
adc
pop
adc
fdivrl
inc
cltd
adc
push
fwait
mov
aas
fbld
outsl
xor
in
icebp
mov
movsb
lods
push
and
dec
jb
push
add
pop
cmp
cmp
out
lock
jne
inc
push
cltd
sti
imul
mov
divl
decl
ficompl
js
mov
iret
out
cmpsl
mov
adc
adc
pop
shrl
lcall
scas
mov
and
jns
test
bound
push
fwait
lret
push
dec
sbb
hlt
lcall
pop
popa
ljmp
pop
std
cld
mov
shll
jbe
push
ja
jae
xchg
sbb
inc
es
inc
mov
out
adc
ror
mov
mov
mov
adc
or
inc
aad
xchg
mov
inc
fstl
jl
xchg
pop
xor
out
iret
mov
push
jns
pushf
decb
add
jmp
mov
scas
mov
mov
inc
push
sub
mov
pop
gs
lcall
loop
jns,pn
mov
imul
add
or
inc
loope
inc
dec
xchg
or
insb
and
fidivl
xlat
cmpsl
cmpsl
daa
in
sub
cld
fimull
xchg
sub
btsl
pop
dec
mov
lret
dec
mov
mov
mov
xchg
imul
xlat
out
pop
add
cli
adc
xor
stc
add
les
mov
pop
sbb
pop
loope
or
loopne
rol
fsubr
cmc
ds
loope
insl
fcmovnb
shlb
pop
dec
mov
push
dec
mov
ja
dec
xchg
pushf
loopne
pop
hlt
in
popaw
test
in
sbb
call
jge
push
or
inc
push
das
into
outsl
outsl
into
jl
jb
mov
jnp
daa
push
test
cwtl
mov
push
adc
cmp
xchg
pop
inc
fcomi
fildl
jecxz
stc
and
dec
mov
sbb
jae
shll
mov
pop
push
pop
mov
or
inc
popa
xchg
rclb
fsubrs
adc
pop
cli
mov
jp
gs
stos
insb
cmp
test
roll
lods
push
mov
cmp
dec
inc
faddl
movsl
push
lods
jecxz
ja
popf
jg
push
or
push
cmp
ljmp
aad
test
mov
mov
rcr
mov
scas
push
or
in
lock
xchg
cmp
fstl
add
loopne
fists
mov
cld
imul
cli
es
das
pop
push
mov
pop
jp
loope
cmc
fnsave
pop
iret
scas
sbb
inc
fwait
loopne
adc
mov
pop
test
shll
sar
pop
inc
and
push
xor
lcall
pmullw
sbb
jle
sbb
mov
dec
mov
jae
mov
jp
push
ja
dec
xchg
xor
xorl
addr16
test
fidivs
data16
or
mov
cmpsb
cltd
xor
mov
cmp
les
loop
cs
cmpsl
inc
add
ja
mov
and
sbb
xor
or
pop
mov
cmpsl
dec
mov
inc
add
adc
jg
jo
repz
lea
out
push
mov
ja
cld
and
icebp
push
xchg
mov
loopne
jg
mov
fnsave
sti
jno
loopne
jge
adc
add
jge
fldenv
insl
mov
insl
dec
xor
push
fadds
xchg
fs
push
xchg
ja
test
mov
or
or
aaa
sub
gs
mov
jae
lock
adc
shll
lcall
dec
jnp
mov
fsubp
mov
dec
icebp
addr16
cmc
inc
movb
push
in
out
pop
add
rcrb
push
dec
dec
or
mov
stos
mov
mov
addl
adc
xchg
or
or
das
arpl
inc
stc
ljmp
xchg
lea
mov
jbe
out
cmp
fnstenv
add
or
xor
cmp
repz
cwtl
fwait
ja
jecxz
inc
xor
neg
sub
mov
xlat
repnz
xlat
and
pop
mov
push
mov
push
mov
aas
rclb
sbb
push
repnz
jp
fs
fisttpll
cmp
sbb
xlat
adc
nop
mov
pop
xor
push
jg
fs
adc
test
xlat
push
sar
jecxz
adc
ss
adc
arpl
and
or
rorb
outsl
rcrb
cmpsb
negl
xchg
sub
sub
ret
cmpsl
dec
cmp
add
lret
fnstenv
hlt
xchg
jbe
call
fstpt
dec
call
test
cmp
shlb
aaa
iret
mov
jo
mov
fisubs
sub
or
sti
lahf
add
cmpl
xor
pop
jo
xchg
xchg
movsl
push
fiadds
mov
adc
mov
adc
sti
mov
arpl
mov
in
mov
fnstsw
and
push
push
cltd
int
mov
xchg
es
imul
fistpll
wrmsr
mov
scas
cmc
pushf
mov
or
bound
push
iret
enter
add
pop
inc
xorl
pop
mov
xor
pushf
not
popa
sub
jmp
mov
cld
push
gs
add
cli
in
fcomip
movsl
jb
mov
sub
sub
and
inc
and
jg
adc
mov
jl
or
mov
data16
xchg
dec
inc
outsb
xor
decl
out
xchg
or
out
shrl
repz
pop
adc
ucomiss
jb
fcoms
je
fnstsw
cmp
fimuls
jbe
jns
mov
rcr
bswap
cmp
jns
lock
dec
negb
pop
lret
sbb
push
push
dec
lret
sbb
mov
cmpsl
dec
mov
mov
fldl2e
repnz
jnp
dec
rorb
dec
rorl
fs
and
sub
shll
sbb
pop
sbb
add
rcll
js
sbb
add
fisubs
mov
sub
or
and
addr16
push
pusha
cwtl
aaa
add
jno
xor
test
push
jae
push
fst
subl
cld
stos
rorb
pop
and
popf
pushf
sbb
xchg
pop
mov
test
inc
sub
in
les
or
jb
adc
imul
jnp
int3
int3
or
ficoms
sbb
andl
js
imul
fcomp
hlt
loope
and
arpl
jnp
mov
stos
push
or
adc
daa
out
push
sbb
push
repz
jns
pushf
ret
adc
cmc
xor
ljmp
ljmp
pop
aad
and
mov
movsb
and
sahf
sbb
cmpsb
enter
xor
push
cmp
shlb
stos
pop
insb
shl
fs
and
xchg
adc
fcmovnu
mov
fimull
cmp
cld
jno
scas
mov
xchg
mov
add
faddp
scas
int
xchg
std
mov
add
je
cmc
and
std
mov
imul
movsl
jno
lea
loopne
or
sub
jb
fs
shr
dec
mov
loope
and
jo
cmp
test
cmp
and
or
flds
repnz
imulb
int
orb
fldt
inc
pop
imul
rorb
in
in
pop
sbb
out
jbe
mov
cltd
and
sbb
mov
cmp
inc
scas
scas
flds
ja
xorb
sbb
pusha
xchg
lahf
cltd
cvtps2pi
ret
push
nop
lock
mov
pop
outsb
mov
adc
dec
push
outsb
das
add
les
lcall
std
cs
dec
jns
mov
pop
in
call
pop
imul
lds
lret
scas
rol
inc
into
and
push
mov
mov
inc
adcl
cmp
sbb
sahf
movsl
jg
pop
into
hlt
dec
push
lods
cmp
std
in
pop
subps
stos
mov
sahf
jle
push
es
jo
jmp
std
cwtl
jbe
dec
psubusb
arpl
neg
or
xchg
outsl
ret
fsubrs
push
sbb
ficompl
cli
cmp
jbe
test
int
incb
ret
pop
scas
dec
adc
in
adc
cmp
stc
mov
inc
insb
shl
pop
jmp
jbe
stos
es
mov
mov
jb
mov
test
scas
pop
jecxz
stos
stos
add
mulb
fsubr
dec
pop
push
adc
fs
mov
push
mov
cwtl
mov
rorb
xor
aam
mov
cmpsb
test
jle
jmp
xchg
lret
fwait
jb
hlt
and
push
inc
pushf
insb
and
and
add
ffree
xlat
push
fsubrl
jo
andl
xor
aas
xchg
pop
decl
loope
add
repz
outsl
sbb
out
std
push
push
dec
pop
shlb
push
jns
jbe
inc
in
adc
into
dec
push
ljmp
cltd
icebp
leave
or
mov
lea
add
addb
jbe
lret
popf
mov
push
test
data16
pop
add
clc
gs
adc
subb
das
pop
add
ljmp
and
call
imul
push
mov
dec
out
mov
rorb
and
mov
leave
lahf
cli
ds
popa
je
lea
fs
dec
pop
cmp
xchg
xorl
int3
ss
repz
xchg
xchg
rolb
mov
fcmovnu
fcoms
mov
or
loop
push
pusha
xchg
dec
mov
push
fildl
int
enter
or
inc
in
mov
rcrl
aam
stos
dec
cltd
popa
insl
scas
leave
mov
in
mov
lahf
daa
nop
shll
and
add
mov
into
les
adc
in
pop
loopne
test
mov
mov
push
sub
add
sbb
stos
mov
addr16
in
xchg
mov
mov
pushf
fs
mov
repz
fwait
in
mov
mov
neg
add
cmp
das
xor
cs
add
mull
bound
aas
ficoms
dec
mov
xchg
mov
xor
mov
cltd
jne
loopne
repz
mov
xor
mov
dec
hlt
jg
fmuls
aad
push
ss
xlat
out
and
shl
aaa
lds
add
mov
negb
mov
adc
lds
mov
xor
mov
xor
addb
pop
pop
lds
push
nop
inc
sub
adc
addb
test
mov
cmp
out
sar
jmp
bound
ja
push
cs
scas
call
mov
test
cltd
scas
jb
icebp
jecxz
insb
sub
mov
lahf
out
shrb
pop
ds
mov
mov
stc
dec
mov
outsl
add
int
lcall
sub
jecxz
jmp
sbbl
xchg
arpl
or
pushf
push
fisubs
int3
jge
and
and
fisttpll
pop
outsl
bound
mov
stos
or
push
es
pop
nop
aad
imul
outsb
sbb
repz
mov
aas
out
or
jb
aam
aam
ret
and
sub
push
shrl
sub
fwait
dec
into
xor
cmp
and
pop
mov
rorb
pop
test
push
ds
mov
lret
das
cmp
jg
jae
push
lds
repz
mov
adc
popa
mov
ds
mov
push
cwtl
ljmp
arpl
or
pop
lret
loopne
pop
cmp
jno
repz
enter
mov
xchg
lock
movsl
daa
dec
fwait
sarb
xchg
ret
das
push
push
push
mov
leave
mov
cltd
xor
mov
push
bswap
dec
xchg
or
dec
cmp
xor
jecxz
hlt
pop
cs
rclb
cld
test
jo
and
or
imul
xor
dec
popf
insl
xor
jmp
and
fisttpll
add
and
test
xchg
dec
pop
add
lock
int
in
cmp
cltd
insb
popa
loope
dec
loope
ficompl
lods
mov
pop
sub
dec
cwtl
sarb
js
bound
sbb
push
mov
in
cmpl
dec
adc
icebp
mov
loop
notl
adc
pop
bound
adc
push
cmc
push
mov
and
jmp
jle
pusha
icebp
xchg
ljmp
mov
iret
ljmp
or
pop
lret
mov
imul
ds
movsl
fwait
cmp
push
adc
out
std
adc
jnp
fcoms
fisttps
ret
jmp
add
push
scas
fcmovne
jge
pushf
add
aaa
sub
pop
cmp
jae
adc
aaa
pop
bound
adc
mov
and
jne
les
push
jne
xlat
das
into
iret
pop
xchg
shrb
sbb
xchg
mov
adc
aas
push
cld
fcmove
data16
pop
fcomps
sub
and
inc
loopne
ret
enter
in
jge
mov
jge
add
cwtl
les
adc
mov
inc
roll
sbb
sti
arpl
dec
repz
inc
jnp
push
lcall
fwait
xchg
leave
iret
lock
outsb
push
shll
dec
in
push
mov
jb
out
sbb
roll
push
inc
test
imul
lods
adc
push
or
xor
sbb
in
mov
or
leave
xchg
inc
fsubrs
sbb
add
repnz
push
add
xlat
outsl
jb
cmpl
adcb
pop
push
pop
stos
addr16
push
ror
inc
xchg
incb
jnp
sbb
or
adc
popa
lret
mov
dec
out
lcall
mov
push
xor
mov
lahf
nop
pop
scas
mov
cmpsl
cmp
sub
ror
adc
xchg
mov
lahf
and
xchg
daa
nop
stos
mov
rcrl
jbe
mov
lods
imul
push
xor
mov
mov
sbb
scas
lret
xchg
fwait
jle
movsl
add
adc
and
dec
mov
sub
lcall
mov
jge
mov
jle
xor
cmp
sub
jle
subl
setae
incl
or
cmp
pop
pop
sub
fmulp
sub
addl
or
movsl
addb
inc
jge
mov
push
fidivs
add
scas
mov
je
xchg
test
ja
dec
xor
mov
xlat
cmp
inc
or
sbb
push
aas
and
std
aam
mov
mov
add
inc
mov
cs
ds
jecxz
ss
pop
call
mov
pop
jns
movsl
xchg
dec
nop
arpl
pop
orb
incb
xchg
sbb
std
imulb
js
or
xchg
mov
ss
insb
enter
ljmp
push
out
sbb
mov
ljmp
enter
ss
pop
push
in
mov
jbe
enter
loopne
xchg
push
lock
and
orb
inc
repz
pushf
lahf
movsb
iret
loopne
pop
loope
repnz
xchg
or
outsl
xchg
mov
mov
jmp
and
jecxz
into
aam
cmp
dec
sbb
push
xchg
xchg
pushf
mov
adc
nop
and
xor
test
dec
sahf
adc
or
aas
pop
mov
cmpsb
dec
subl
cmp
push
imul
or
mov
add
jecxz
mov
add
mov
ficomps
sub
cli
fldenv
sub
mov
loopne
sub
imul
adc
pushf
inc
lods
cmp
or
insb
jg
fldt
ret
sbb
mov
inc
sub
das
xor
jg
sbb
mov
pslld
daa
std
std
cmp
xor
imul
xchg
mov
jne
lcall
cmp
pop
sbb
or
test
in
and
adc
nop
aam
mov
inc
mov
shll
inc
sbb
sub
mov
pop
scas
clc
xlat
xor
leave
lret
dec
xor
dec
pop
dec
iret
ljmp
mov
pop
sub
pop
sbbl
mov
inc
pop
fwait
sub
and
lods
mov
pushf
adc
add
mov
pop
test
sbb
pop
stc
dec
or
leave
daa
rcrl
mov
fistpll
pop
inc
mov
scas
xchg
fs
or
notl
out
add
inc
sahf
cmp
enter
cmpsb
mov
aam
xchg
mov
adc
jmp
push
fimuls
aaa
mov
popf
inc
mov
into
pop
add
xchg
ss
aaa
mov
dec
sub
test
jne
and
clc
ja
cs
inc
mov
jle
movsb
idiv
push
pop
out
nop
stos
push
dec
xchg
stc
dec
adc
outsb
adc
mov
sbb
jns
scas
dec
out
ss
sub
scas
fcoms
inc
test
jge
int
add
test
dec
out
dec
icebp
xchg
out
jge
push
cmpsl
dec
sub
fwait
inc
xchg
les
sub
xchg
cmc
inc
xchg
add
lret
inc
aam
mov
test
inc
mov
mov
xor
fdivl
pop
mov
ss
rclb
fisubrl
xchg
sub
lea
outsb
lcall
call
mov
fwait
jo
inc
xchg
aas
cltd
movsb
outsl
mov
pop
or
shrb
jbe
pop
frstor
imul
push
jae
call
dec
sub
lcall
adc
jl
test
inc
popa
ss
xorl
add
aad
adc
dec
lods
pop
fcoml
xor
cmpsl
andnps
out
pop
jmp
iret
rcrl
or
inc
add
inc
mov
repnz
rcl
test
outsl
repz
xchg
push
in
js
or
loope
in
sbb
les
ss
add
in
mov
and
inc
pushf
jae
pop
sbb
imul
inc
imul
sbb
dec
rol
out
dec
das
lret
or
mov
cmp
add
insl
dec
into
push
loope
mov
lret
jl
incl
aas
xchg
out
cmp
mov
shlb
mov
rclb
testl
lcall
push
pop
xorb
inc
frstor
sub
aaa
arpl
cmp
stos
loope
xor
inc
mov
ja
or
int
fidivs
jb
jp
jg
nop
dec
fucom
repz
orl
mov
imul
push
push
pop
daa
mov
rcrb
out
mulb
decl
mov
dec
scas
movsb
xor
push
adc
outsb
or
clc
lods
sub
out
jb
xchg
ficompl
data16
cmp
lcall
mov
pop
data16
cmp
cmp
stc
and
sbb
pop
lock
cmovb
mov
push
add
lods
in
mov
push
testl
add
inc
push
or
dec
adc
sahf
mov
xchg
or
sbb
mov
ljmp
call
cmp
faddl
aam
ror
and
mov
inc
jae
test
jl
or
lahf
pop
mov
dec
aad
dec
je
lahf
je
test
dec
xchg
lods
fwait
das
add
jns
loop
mov
std
adc
jp
add
cmp
addr16
mov
nop
addb
fcmovb
cmp
cli
adc
mov
adcl
jp
inc
add
fcoms
pop
inc
imul
dec
xor
out
jp
jg
xchg
fidivrs
jne
sahf
fisubrs
mov
xor
hlt
jmp
adc
scas
jnp
xlat
into
test
cmp
inc
adc
mov
in
jle
push
popf
out
inc
andl
out
pop
add
sbb
in
jg
test
hlt
inc
mov
scas
jnp
and
xlat
es
xor
jns
mov
cmp
pop
in
lods
xlat
rcrl
push
xchg
out
into
adc
stc
sub
pusha
pop
pusha
mov
in
fadd
and
sbb
imul
cmp
sar
xlat
jb
mov
aam
ss
push
and
cmc
popf
cmpsb
mov
cmp
aaa
sub
xorl
rcrb
sar
lcall
mov
test
hlt
xchg
mov
and
mov
cmp
das
dec
mov
scas
pop
int
mov
pop
cmc
sbb
mov
mov
xor
mov
repz
pop
sub
test
outsl
sti
addl
stos
loop
xor
xor
into
movzwl
orl
pop
lret
push
int
xchg
in
into
push
pop
dec
fwait
cmp
cmpb
idivl
push
stos
ret
aaa
inc
test
mov
or
jge
push
inc
mov
nop
aad
imul
cmc
push
push
aam
add
pop
out
sub
dec
testl
lea
repz
movsb
loope
test
add
or
dec
sub
repz
lods
sbb
frstor
sahf
stos
jb
push
inc
test
adc
push
push
test
inc
pop
xchg
mov
cmp
and
add
iret
mov
xchg
jl
push
ljmp
scas
fimull
or
cmp
jecxz
or
cmp
pop
and
add
cld
and
inc
ror
movsl
inc
gs
aas
movb
ss
sub
dec
or
xchg
test
push
test
or
xchg
mov
fs
movsl
dec
shll
test
jecxz
add
shlb
cmpsl
inc
sbbl
ffreep
cmpsl
cmpl
xchg
sbb
adc
fdivl
inc
loope
int
repz
flds
lds
adc
imulb
fbld
sbb
mov
sub
mov
or
mov
push
sub
mov
jecxz
sbb
and
out
mov
and
or
mov
xor
cmpsl
loop
inc
dec
pop
mov
cld
lret
xchg
pop
cmp
xchg
jecxz
sbb
xchg
enter
adc
int3
sub
aas
mov
rcrb
dec
or
adc
call
cmp
cs
xor
push
mov
shr
push
add
push
push
das
dec
fld
pop
gs
xor
scas
cmp
jb
push
xorb
mov
mov
je
xchg
add
mov
cmp
mov
sub
sbb
lahf
adc
xor
xorl
xor
stc
mov
mov
xor
jns
xchg
mov
add
fwait
dec
push
mov
enter
sub
sbb
push
arpl
test
push
sbb
addr16
jno
out
test
jno
imull
movsl
push
das
insb
loopne
icebp
adc
fldt
dec
dec
push
decl
decb
flds
aam
pop
mov
shll
cli
jo
shrb
in
mov
fwait
jle
sbb
ss
mov
fs
pop
sub
in
or
stos
scas
cmp
push
pop
cmp
sbb
mov
or
cmc
cli
inc
loopne
int
mov
xchg
pop
push
out
add
xor
mull
push
lahf
cs
mov
inc
pusha
insb
mov
jmp
sub
cs
push
cmpsl
out
lods
inc
cmc
stos
fwait
pop
lret
dec
inc
ret
or
repz
cmp
enter
xchg
jge
sbb
lods
fidivrs
pop
dec
movl
mov
mov
fcomip
scas
pop
xor
mov
lahf
sub
xchg
repz
xchg
pop
pop
pop
cmp
rorb
dec
sbb
out
sub
dec
ret
sti
clc
clc
cli
sub
outsb
xor
jae
ret
cmp
shll
lods
push
stos
pop
pop
mov
jp
sbb
lret
ja
je
fnstcw
imul
aaa
lods
lcall
push
int
and
aas
daa
insb
js
or
aad
out
ror
dec
nop
or
ljmp
push
shlb
sub
add
pop
int3
cmp
sahf
mov
fcompl
mov
and
imul
fstl
mov
out
cmp
push
leave
and
cmp
icebp
xor
divb
pop
mov
adc
push
inc
cmc
jg
xchg
pop
repnz
movsb
imul
pop
mov
mov
in
adc
adc
or
ret
inc
adc
aad
and
xchg
xlat
add
mov
fisttpll
push
iret
mov
inc
jp
jne
test
push
test
jge
idivl
mov
cwtl
add
setns
scas
xchg
mov
out
and
shrl
out
icebp
push
cwtl
daa
xor
ja
cmpsl
outsl
push
sub
jnp,pn
lret
or
mov
adc
sub
movsb
hlt
in
out
adc
xlat
lahf
dec
repz
shlb
mov
sub
mov
shlb
mov
sub
mov
mov
sub
dec
add
fstps
loopne
mov
pusha
push
stc
bound
pop
adc
mov
mov
in
lahf
insl
jge
loop
push
shrl
cld
push
popf
mov
mov
movl
inc
push
int3
mull
mov
jbe
mov
mov
outsl
pop
sbb
ds
das
pop
loop
call
cli
sub
lods
sbb
repnz
adc
int3
in
in
push
and
out
repnz
mov
dec
dec
add
inc
or
mov
push
int3
xchg
mov
out
fs
jmp
mov
xor
push
or
adc
jl
in
mov
xchg
stos
fnstenv
inc
shll
cwtl
sbbl
popa
cmp
inc
into
pop
push
test
ljmp
xchg
pop
les
loopne
inc
insl
adc
in
mov
arpl
add
out
dec
js
jno
xor
sub
inc
xchg
in
in
scas
pop
mov
inc
jo
out
xchg
stos
and
popa
stos
mov
test
mov
lock
pop
jae
in
xor
in
and
loop
rorl
sub
xchg
cmp
inc
sbb
mov
xlat
rorb
lahf
jle
xchg
scas
jnp,pt
popf
cmp
fs
adc
adc
jnp
scas
mov
ja
cmpsb
insl
clc
pushf
loope
xor
mov
or
cwtl
out
or
push
xor
pop
inc
pop
sbb
repz
stc
lea
imul
cmpl
sbb
repz
jle
cltd
mov
xor
roll
rolb
pop
outsl
add
repnz
iret
xor
imul
sub
outsl
cmp
mov
into
mov
sahf
or
pop
xchg
test
mov
jb
cmc
into
xlat
cmpsl
sbb
cmpsl
push
mov
adc
nop
mov
stc
rcll
bound
test
stc
xchg
mov
jg
aad
scas
shrb
fdivr
lcall
mov
jl
sbb
fwait
push
int
fwait
mov
pop
lea
test
push
sbb
push
je
jecxz
inc
stc
loopne
adcl
rolb
mov
bound
test
and
mov
fsubl
jp
inc
inc
mov
out
repnz
lret
fisubrs
push
paddd
and
pop
pop
scas
mov
xchg
lds
ja
icebp
fisubrs
mov
ret
les
lahf
xor
imul
or
sbb
and
push
add
inc
push
cmp
sahf
shrb
out
adc
mov
dec
add
leave
ja
jecxz
mov
mov
mov
out
adc
inc
mov
pop
pusha
and
lahf
lcall
lret
call
filds
xchg
test
das
push
out
dec
pop
inc
icebp
popa
and
cld
xor
stos
mov
js
movsb
or
xchg
lret
fmul
fisubrs
and
filds
mov
xchg
pop
imul
inc
sbb
cmpsb
imul
subb
and
shlb
sbb
fcoms
dec
movsl
int3
fcoml
ja
push
clc
push
pop
mov
inc
sbb
sub
push
sti
andl
mov
adc
lock
xor
mov
cmpsb
push
outsl
mov
fimuls
in
repz
or
xor
jmp
push
or
sahf
adc
into
jbe
mov
ss
insb
cld
jmp
jge
nop
scas
sub
jp
insl
pop
pushf
insl
fwait
sbb
cli
call
jbe
stos
push
mov
xor
daa
sbb
shl
gs
push
cltd
imul
push
xchg
sti
or
loopne
pop
or
pushf
test
push
add
adc
faddl
jecxz
ret
add
lods
aas
mov
and
addr16
or
xchg
into
mov
mov
xor
inc
hlt
xchg
and
mov
xchg
cli
pop
repz
dec
or
fsubrp
jb
addr16
pop
jnp
cmp
outsl
stos
shl
mov
jb
mov
ror
mov
das
js
sbb
sub
aam
mov
addr16
sahf
daa
testl
iret
imul
cmpsb
lea
inc
adc
mov
cs
and
fs
and
jbe
popa
inc
jl
aam
scas
pop
push
shlb
ret
push
mov
xor
push
lahf
xor
mov
xchg
mov
and
inc
lahf
mov
fs
xchg
inc
mov
in
push
dec
mov
adc
sub
cmp
pop
js
mov
and
inc
psllq
test
sbb
jb
rorl
into
lock
sbb
mov
sti
sub
xor
xor
adc
fadds
rcrb
jp
jns
outsl
push
push
mov
or
arpl
xlat
iret
rorb
int
aas
push
outsb
dec
imul
cld
ljmp
popa
insb
pop
cld
sub
xchg
mov
pop
push
icebp
push
and
scas
cli
es
ret
mov
mov
das
xor
loopne
jge
ds
add
xor
nop
fwait
pop
icebp
add
pop
push
jg
xlat
outsb
fwait
mov
jbe
popf
inc
jno
jg
push
fwait
lret
pop
or
inc
mov
sbb
cmp
mov
xor
xchg
lds
and
or
not
lods
push
ljmp
mov
repnz
xlat
pusha
jmp
mov
outsl
mov
jns
xchg
xchg
jle
je
lds
divl
fldt
addb
aam
mov
push
add
dec
std
lcall
aam
mov
aas
add
shl
and
inc
mov
gs
movsb
arpl
jno
cmpb
and
inc
or
inc
insb
popa
push
jnp
idiv
fsubl
nop
cmpsl
push
es
call
lcall
rclb
add
jmp
lea
xor
dec
cmc
push
aas
int3
inc
jnp
sbb
or
fwait
mov
daa
jl
jecxz
push
mov
push
push
aam
sahf
pop
je
mov
loope
jp
sub
loope
lea
enter
sub
xchg
push
pop
mov
repnz
into
mov
outsb
mov
push
call
imul
bound
decb
flds
testl
mov
les
cmp
xor
insl
jae
push
push
dec
aas
sub
fisttpl
ret
in
xchg
jno
andl
shr
dec
mov
dec
cmp
mov
xchg
mov
ret
mov
sarb
pop
lret
notb
lcall
subl
dec
push
sub
rorb
scas
cmpsl
pop
xchg
push
dec
mov
scas
pop
pop
and
iret
aad
push
sbb
inc
jl
adc
ss
ds
popa
cli
rep
shrb
pusha
sub
xchg
sti
icebp
push
repnz
lds
and
loop
jbe
pop
dec
inc
add
cmp
or
sti
pop
mov
loope
mov
xchg
or
xchg
sub
mov
jno
in
inc
outsl
lea
repnz
mov
fnstsw
xor
std
inc
rolb
imul
es
out
cmpl
roll
pop
mov
adc
loop
sbb
in
or
adc
or
leave
sbb
je
stos
repnz
jg
xchg
aaa
loop
add
sbb
outsb
jb
decl
fmuls
inc
jecxz
in
enter
or
add
jmp
cltd
adc
cmp
dec
mov
or
jecxz
shl
iret
sub
dec
rorl
out
sub
mull
pop
jno
imull
push
rcrl
int
test
in
pop
pushf
push
cltd
mov
fcompl
inc
ds
fisttpll
enter
imul
cmp
sbb
arpl
or
jns
movsl
jnp
inc
sbb
pop
sahf
fisubs
fnstsw
push
fwait
mov
sub
std
enter
scas
inc
mov
inc
repnz
push
dec
dec
push
xchg
hlt
push
or
mov
adc
daa
push
aad
dec
pop
es
and
clc
and
movsl
mov
push
jp
xor
fwait
clc
jp
sub
pop
ret
add
add
jns
mov
jecxz
push
popf
dec
nop
inc
or
or
in
daa
mov
dec
or
mov
ss
insb
aam
inc
mov
fs
ficoms
sub
add
push
xchg
nop/reserved
mov
pop
ret
cmp
into
imul
and
and
arpl
inc
imul
jp
jmp
icebp
add
out
leave
sbb
mov
push
push
jg
push
add
sub
outsb
pop
loopne
and
inc
mov
lods
add
and
push
sub
xchg
push
decb
mov
idivb
imul
cmp
inc
mov
icebp
insl
lret
cli
xchg
push
or
dec
jmp
sbb
scas
mov
add
dec
int3
pop
ret
jb
stos
cmpsl
xor
mov
dec
lret
xor
jmp
pop
bnd
xchg
rorb
lds
jno
add
in
dec
call
cwtl
mov
ret
nop
xchg
js
and
jns
loope
cld
jge
push
lret
sbb
add
push
adc
inc
push
xor
sub
push
cmp
or
stos
push
scas
and
repz
push
jp
mov
xor
in
pop
and
loop
ss
cmpsl
mov
das
shrb
lock
dec
add
mov
pop
int
sub
and
mov
leave
xchg
push
daa
mov
lcall
mov
lock
sub
mov
mov
push
and
int3
push
xchg
push
test
mov
rcr
push
fwait
pop
ret
ret
jns
add
mov
pop
les
lea
adc
dec
outsl
cmp
add
mov
mov
and
and
sti
out
filds
lds
or
shll
add
int3
jp
xlat
xchg
aas
leave
pop
insl
movsb
pop
cld
mov
dec
add
inc
mov
aaa
fidivs
push
xchg
popf
sahf
or
in
cwtl
cmp
ret
xchg
je
js
int3
out
mov
dec
lcall
outsb
in
xchg
aad
mov
sbb
mov
pusha
ret
cmp
testl
sub
stc
mov
mov
dec
negb
push
out
or
inc
jae
pop
jp
icebp
rcr
cmc
inc
pop
dec
pop
and
xor
sub
fadd
icebp
dec
cmp
bnd
xor
outsb
in
insl
das
ds
lds
sub
lds
adc
les
cmpsl
or
mov
pop
or
loope
mov
adc
sbbl
mov
iret
sti
pop
aas
divb
data16
repnz
mov
push
loope
fwait
jcxz
jmp
gs
dec
or
loopne
push
push
xlat
xor
sub
shl
inc
mov
xchg
lds
and
sub
out
sbb
in
and
stos
dec
fsubrl
test
into
mov
and
sbb
and
push
jmp
fcmovnu
dec
fidivl
pop
push
xchg
xlat
fcomip
rol
rcrb
out
fdivp
and
sbb
pusha
inc
std
adc
xor
mov
mov
int3
inc
push
out
add
and
daa
mov
ss
cmpsl
mov
mov
js
cs
int
shlb
mov
daa
xchg
roll
lea
xor
mov
dec
cmp
fsts
les
mov
in
aam
test
inc
sbb
les
dec
inc
test
cs
popa
sub
xor
stos
jbe
pop
push
je
pop
pop
enter
fcomp
push
add
insb
adc
lcall
dec
loopne
add
aaa
pop
pusha
push
xchg
or
cmp
push
adc
ljmp
rorl
jbe
decl
dec
decb
scas
and
es
mov
mov
or
push
adc
inc
incl
fldt
out
cli
or
fcompl
sub
push
jno
cmp
inc
or
in
gs
cmpl
jge
mov
lods
pop
cmp
push
ss
add
cwtl
scas
sahf
scas
push
popa
sti
or
nop
in
hlt
in
scas
jns
or
repnz
pushf
outsb
out
sub
decl
les
dec
mov
xchg
mov
xor
and
out
icebp
mov
or
lahf
inc
leave
jmp
mulb
out
movsl
cmp
int3
fsub
cmpsl
incb
hlt
test
mov
push
addr16
xchg
imul
cli
setno
add
and
xor
cmc
fimull
sub
mov
add
repnz
fwait
insb
lea
lret
jmp
leave
cs
and
or
sub
push
ffree
pusha
into
les
subb
dec
int
cmp
scas
xor
popa
enter
xchg
xor
imul
xchg
xchg
popf
jl
test
js
outsl
out
add
dec
clc
orb
mull
cwtl
jne
out
pop
mov
dec
loop
xor
xor
inc
movsb
pop
pop
fimuls
mov
cmp
repnz
xor
mov
xor
std
mov
aad
sbb
sbb
lahf
dec
stc
ja
ss
push
adc
cmp
lret
sub
popf
sbb
lret
pop
and
dec
mov
cmp
das
xchg
xor
sub
repnz
test
or
push
lock
in
int
clc
xor
sub
pop
xchg
xchg
insl
fdivrl
ss
pop
add
adc
cmp
push
xor
jae
xchg
repz
pushf
push
push
push
into
sahf
inc
scas
pminsw
imulb
out
sub
mov
pushf
imul
jae
ljmp
pusha
mov
test
aas
xchg
xchg
testl
mov
mov
outsl
dec
push
mov
int
cltd
lods
test
lock
test
cli
jl
loop
scas
pop
push
icebp
movsl
lods
lahf
push
inc
notb
test
out
test
jp
mov
rcrl
sbb
cmpb
aam
mov
mov
pop
jns
ret
int
out
jmp
ror
jle
scas
enter
jg
xchg
dec
fdivr
testb
adc
cld
movsb
mov
mov
ljmp
test
push
test
dec
push
xor
xor
mov
aam
pusha
inc
dec
jb
mov
mov
push
dec
enter
sub
jle
ljmp
push
lret
dec
roll
adc
push
xchg
push
call
sarb
cmpsl
mov
int
mov
rclb
lret
aam
nop
jo
push
add
aam
leave
aam
aam
into
cmp
add
roll
sub
and
pop
dec
stc
rorb
and
push
xlat
pop
xchg
xchg
hlt
adc
xchg
sahf
outsl
cli
inc
xchg
mov
out
cs
push
xchg
mov
dec
aam
cmpsl
mov
dec
out
or
out
out
stos
inc
sub
jo
and
shrl
push
imull
push
inc
in
jle
rclb
and
sub
or
ret
fs
add
adc
jo
je
in
jle
das
jecxz
sbb
movl
adc
push
xorb
or
shrb
in
and
cmp
shll
loopne
push
pop
add
cs
jg,pn
dec
sbb
stos
ja
data16
movsb
aaa
mov
dec
sub
and
fstpt
lret
push
loope
cmp
cmpsb
mov
sub
stc
pop
xchg
mov
xor
mov
aad
je
ret
jb
mov
pop
scas
shlb
cmc
rdmsr
xlat
imul
enter
mov
xor
test
out
and
jb
cmc
jbe
stos
repz
mov
lahf
cmpsb
pop
fsubs
dec
data16
and
lods
loope
aas
xor
lods
xchg
mov
loope
out
out
adcb
nop
jle
cmpsl
sub
fbstp
mov
jg
into
icebp
cmp
loope
orl
mov
jns
cmp
mov
push
lahf
jb,pn
mov
mov
adc
pop
pop
mov
add
pop
or
push
sub
sbb
mov
and
dec
test
jmp
push
sbb
je
push
mov
lods
push
jns
movsl
or
push
das
inc
and
rcr
cs
cmp
mov
xor
fwait
mov
dec
insb
xor
out
test
popf
lret
sbb
aas
cld
jmp
mov
mov
aad
out
int3
adcb
ja
pop
call
mov
add
lret
fsub
sub
arpl
jbe
rorl
mov
test
sarl
dec
sbb
mov
jle
mov
push
push
sti
mov
push
inc
cmpl
lods
in
xchg
dec
xor
std
dec
adc
fisttps
dec
stc
add
and
or
mov
sahf
sub
aas
ret
sti
cld
jb
lock
insl
and
sti
mov
imul
add
mov
jns
cltd
jae
fwait
in
mov
pop
pop
cmc
xlat
jl
popa
sahf
or
xlat
jae
into
xchg
jbe
nop
addl
xlat
pop
pop
push
push
popa
add
imul
fistl
sbb
push
add
add
push
sub
int3
aam
and
cld
loope
hlt
xor
inc
and
fldenv
mov
mov
mov
pop
jb
mov
add
mov
iret
mov
xlat
sbb
inc
or
cmp
pop
lahf
add
xchg
or
stos
lock
in
dec
dec
xchg
pop
sbb
ss
add
sub
cs
iret
ja
push
sbb
ljmp
test
adc
push
cmp
pushf
mov
int3
mov
jge
mov
ja
movsl
push
popf
into
test
stos
fidivrl
jge
xlat
sahf
std
in
scas
mov
xor
out
mov
sbb
sub
shr
inc
push
outsl
cwtl
imul
lahf
mov
sub
test
mov
ud1
dec
test
into
xchg
fisubl
mulb
inc
dec
movsb
lods
push
jp
adc
cli
xchg
mov
insl
and
inc
and
cli
or
repnz
nop
add
xlat
test
sub
inc
jmp
outsb
dec
or
lds
dec
fdivl
xor
aas
adc
clc
int
mov
in
cld
inc
inc
cli
mov
mov
push
jg
mov
call
cli
xor
mov
enter
dec
xchg
push
ja
pop
add
fcmovne
pop
stos
sbb
repnz
ja
ljmp
ret
push
pop
adcb
ljmp
out
rcrl
push
lods
loop
pop
stos
cmp
ret
lahf
add
int3
mov
out
fbld
dec
inc
pushf
jmp
sbb
xchg
push
sbb
das
push
ds
xchg
in
inc
xchg
stos
mov
icebp
das
call
sbb
daa
in
pop
sbb
lods
mov
sub
fidivrs
cmc
pusha
add
out
jle
in
aad
popf
xchg
mov
inc
push
rorb
sub
mov
mov
push
xchg
xor
popa
dec
add
inc
and
leave
mov
shr
maskmovq
imull
pop
rolb
sub
es
inc
xlat
adc
loope
loopne
inc
sbb
xchg
scas
je
push
xor
rorb
ret
jp
popf
push
cmpsl
loopne
cmpsl
jns
inc
mov
mov
push
lret
and
pop
out
aaa
inc
push
stos
jae
outsb
jo
adc
shll
jo
insb
dec
arpl
or
or
daa
and
sbb
repz
xor
pop
gs
mov
xor
bound
mov
out
mov
adc
xchg
pop
or
mov
jecxz
add
jb
jae
clc
testb
xchg
or
and
adc
add
adc
loop
movsl
sub
bound
adc
into
fbld
scas
hlt
push
imul
in
lods
mov
mov
mov
xchg
dec
ret
mov
add
and
dec
adc
bound
jmp
xchg
test
std
jae
push
pusha
ja
mov
nop
sub
mov
sub
push
sti
push
push
inc
mov
mov
push
scas
sub
push
lods
test
adc
std
dec
adc
popa
pop
mov
shlb
lods
scas
rol
outsl
mov
into
divl
cmp
and
jo
push
jp
adc
sub
push
xor
inc
jae
rclb
adc
or
push
inc
stos
cmp
cmp
ret
in
and
fwait
insl
push
mov
mov
ror
cmpsl
add
mov
push
int3
pop
push
jnp
pop
cli
push
sub
fs
mov
test
jne
inc
mov
loope
rep
outsl
xchg
das
mov
lea
adc
mov
mov
mov
in
and
cmp
fwait
push
inc
icebp
stos
xchg
cld
or
lock
fisubs
sbb
add
lock
pusha
mov
fisubrs
int
sahf
leave
lret
stos
scas
mov
int3
ljmp
repz
jl
pop
cmc
stos
xor
cmp
cli
mov
xchg
dec
daa
es
cltd
sahf
stos
int3
mov
pop
or
nop
push
enter
push
dec
cmp
push
sti
stos
cmp
jnp
mov
loope
xchg
jmp
pop
push
jmp
leave
test
data16
sahf
sar
pop
and
ss
push
xchg
dec
js
dec
mov
or
cmp
ljmp
sahf
or
imul
bound
gs
pop
imul
add
mov
in
or
cmp
pop
out
xchg
mov
fisubrs
jmp
das
sub
test
or
xchg
jp
repnz
aas
lahf
jb
js
stc
sbbl
jae
xor
sbbb
xchg
lcall
iret
je
aam
in
fmuls
sti
arpl
and
fldl
jmp
add
push
pop
jbe
rcrl
xchg
ret
inc
test
mov
out
push
sub
cmp
popf
cmpsb
pushf
je
sbb
xor
mov
or
jne
cmp
sahf
popa
mov
scas
lods
mov
push
mov
adc
scas
jg
mov
xor
sbb
jl
outsl
cli
jb
sti
test
enter
jle
sbb
pushf
jns
in
mov
ret
xchg
bound
fstps
in
es
or
mov
fdivrs
xchg
rcl
mov
jns
dec
jo
imul
shlb
push
xor
mov
es
int3
xlat
popf
loope
test
jmp
push
cmc
xchg
inc
into
mov
xor
pop
ja
iret
sub
sbb
mov
cli
jle
das
xor
jecxz
pusha
xor
mov
cmp
shll
mov
push
or
jo
rol
orl
sub
pop
jle
int3
addr16
sub
xchg
insb
mov
push
jbe
ss
adc
int
bound
pop
into
inc
fsubl
fildll
cld
or
out
out
out
stos
jmp
push
test
mov
lea
fdivl
mov
enter
mov
mov
int
and
out
rcl
lret
push
out
stos
ret
sti
xchg
push
add
inc
mov
out
pop
pop
mov
sbbb
call
push
mov
adc
xorb
fs
gs
xlat
loop
adc
into
scas
xchg
push
sub
and
ffreep
xchg
out
mov
sub
adc
fsubs
mov
jg
or
mov
sub
and
adc
shlb
lods
xchg
lods
adc
mov
push
inc
sbb
addr16
cmp
xchg
push
xlat
or
mov
add
les
sti
test
mov
imul
sub
rorl
dec
inc
test
clc
lds
lods
xlat
sub
or
leave
sub
cmp
rorb
add
icebp
mov
ds
push
stc
jb
imul
scas
in
or
dec
sub
addr16
fwait
sub
mov
mov
and
dec
je
sub
dec
xchg
adcb
test
or
xchg
push
icebp
lock
loopne
and
out
bnd
ja
or
add
push
out
rorl
add
and
inc
nop
xchg
fcomp
push
testb
jecxz
scas
psubb
mov
dec
cmpsl
aad
xor
jmp
or
pop
in
pop
pop
inc
ret
dec
mov
inc
pop
andl
insb
pop
mov
xor
mov
sbb
scas
in
mov
imul
pop
push
gs
cmp
pop
pop
cmp
or
add
adc
xor
inc
adc
xlat
and
rcrl
push
cmpl
xlat
pop
out
jge
pushf
ret
lds
push
sub
jg
sub
scas
mov
add
fistpll
clc
andl
shll
stc
jecxz
xchg
std
repnz
popf
testl
adc
xlat
pop
inc
cmp
std
iret
jne
and
dec
jno
jecxz,pt
and
gs
je
inc
pop
jno
add
fcompl
scas
jnp
jmp
sbbb
scas
iret
in
cmp
adc
add
dec
out
xor
cld
sbb
adc
arpl
popf
jnp
mov
and
adc
ret
ret
das
loop
rcll
mov
mov
xchg
cli
mov
das
js
into
bound
loope
sbb
popa
jbe
xor
mov
sub
popa
sbb
lret
mov
or
imul
jle
or
sti
dec
and
loope
aaa
dec
ret
push
das
fimuls
cld
jmp
outsb
aam
dec
cmpsl
fucomp
cltd
out
mov
xchg
inc
jp
nop
jnp
dec
add
mov
lcall
sbbl
xchg
arpl
aam
negl
jg
cwtl
mov
hlt
sub
mov
pop
cmp
test
lods
shlb
pop
ljmp
clc
or
lods
cltd
outsb
sahf
add
sahf
fwait
lahf
cli
mov
xchg
cmc
fs
sbb
mov
test
insb
hlt
insb
stc
xchg
fistpl
sti
mov
fnstenv
xchg
nop
add
lods
xor
data16
pop
and
push
inc
inc
jge
sti
push
test
cmc
lcall
and
leave
pop
jno
mov
push
jle
cmpsl
xchg
ljmpw
pop
xchg
adc
incb
ds
lcall
sub
xor
jae
push
jp
inc
dec
cmp
and
fldcw
aaa
idiv
and
xor
enter
sbb
mov
xchg
jo
mov
insl
jg
cwtl
out
mov
daa
xchg
pop
aas
xor
mov
jno
fidivl
cmp
fxam
sarl
mov
jno
or
mov
frstor
in
bound
les
pop
stc
ja
inc
inc
xor
sarb
sti
push
enter
or
push
cmp
call
push
fildll
mov
mov
mov
mov
lret
out
loopne
add
push
loope
cmpsb
mov
loopne
push
push
movsl
lock
lea
roll
jmp
loop
mov
sub
xchg
mov
pop
rolb
sub
fcmovu
adc
push
loope
and
push
dec
jg
stos
inc
adc
imul
xlat
lea
rorb
outsb
stc
push
adc
pushf
inc
or
enter
mov
jnp
scas
sub
movsb
jae
stos
dec
cmp
xchg
mov
jno
mov
mov
jl
cmp
adc
sub
push
or
cmp
pushf
sub
outsb
ja
inc
dec
gs
je
push
mov
mov
cmp
or
das
shll
xor
pop
sbb
ljmp
pop
mov
sarb
jnp
jmp
pop
bound
pop
out
fldcw
dec
xor
add
sti
inc
movb
cmp
stos
pop
daa
data16
and
testl
push
out
mov
mov
jg
adc
push
int
add
imul
out
or
fnstcw
push
push
into
xor
fistpll
test
jecxz
loop
call
ljmp
push
push
out
pop
popa
repnz
sbb
aad
xchg
pushf
sub
mov
test
fldenv
sbb
mov
jp
lods
jnp
xchg
imul
inc
ss
loop
jnp
leave
mov
inc
daa
sub
rcrb
std
xchg
scas
ja
xor
call
ret
pop
das
popa
test
lret
das
insl
dec
jge
jg
int3
fcomps
jp
jbe
adc
mov
dec
outsb
ljmp
aam
mov
aad
cmc
jge
adc
or
leave
bound
jbe
lcall
sub
pop
sub
cmpsb
cwtl
dec
dec
sti
sarb
dec
sbb
or
mov
loop
in
xchg
xor
sub
xchg
dec
and
xchg
leave
int
mov
les
mov
cmp
or
repz
in
cmp
shll
add
mov
lock
xor
testl
jmp
je
mov
jp
lahf
xor
or
jecxz
mov
xor
pop
cmpsl
out
mov
mov
cmp
add
jg
out
fisubs
decb
test
adc
fistpll
movb
in
lds
mov
scas
dec
cmpsl
xor
sub
mov
repz
int3
adc
lock
movsl
push
pusha
leave
pop
and
jb
push
leave
aam
mov
fwait
push
xchg
js
jno
mov
adc
or
incl
jg
inc
fs
mov
pop
pushf
mov
dec
iret
es
pop
mov
dec
or
push
cli
out
pop
push
inc
mov
pop
jp
jmp
mov
mov
mov
pop
fwait
in
adc
loopne
jle
jns
dec
jecxz
je
je
lcall
inc
xor
icebp
ja
or
jmp
push
xor
sarl
push
xchg
xorl
adcb
cmp
iret
and
pop
jmp
mov
adc
arpl
jmp
shll
cld
and
iret
in
test
addr16
jmp
adc
mov
jns
mov
int
andl
data16
add
push
insl
adc
popa
xchg
jl
fstpt
in
mov
in
xor
sbb
cs
cli
pop
test
and
xchg
pop
push
aas
scas
mov
jb
sbb
mov
inc
inc
jmp
scas
ret
push
push
jae
mov
or
mov
xchg
sbb
dec
test
jmp
mov
repnz
dec
inc
mov
fsubrs
xchg
enter
sub
inc
inc
repz
mov
dec
ficoml
push
inc
subb
xor
mov
xor
test
mov
insb
inc
addr16
sbb
sub
add
xchg
inc
scas
cmpsl
icebp
js
mov
xchg
lods
fabs
aam
push
sub
push
stc
and
pop
test
xorb
scas
inc
lea
inc
iret
mov
dec
sbb
pop
std
imul
aad
mov
mov
cwtl
cltd
std
mov
mov
cmp
mov
test
jne
addr16
xor
mov
mov
out
and
cmp
or
cs
aad
int
es
enter
mov
adc
add
lcall
xlat
dec
fimuls
jmp
gs
repnz
das
mov
and
inc
cmpsb
mov
gs
outsb
test
sbb
dec
ret
popa
add
mov
cmpsb
inc
lahf
push
out
or
jb
mov
inc
orps
inc
jg
jg
mov
inc
pop
insl
mov
fidivs
loop
jle
mov
mov
and
je
sbb
dec
jmp
out
jge
out
mov
outsb
in
dec
mov
add
sti
push
inc
xor
sahf
jae
and
test
mov
stos
loope
and
das
or
popa
push
cmp
stos
push
dec
test
daa
xor
rolb
jo
or
mov
dec
pop
mov
mov
in
bound
mov
pushf
test
fcomps
div
and
adc
sbb
or
sbb
xchg
ret
repz
movb
mov
into
lods
and
outsb
es
popf
je
or
out
cli
jl
mov
enter
lds
psraw
sbb
jo
dec
insl
dec
sub
or
in
into
movsb
jb
xor
mov
ss
fcoms
xchg
jbe
call
jb
cwtl
xor
push
test
outsl
sub
lds
add
mov
je
imul
mov
sub
mov
cld
mov
data16
stc
jmp
hlt
cmp
in
mov
insl
cmp
test
inc
outsl
inc
pusha
imul
in
pop
sub
dec
sbb
push
mov
mov
inc
cmp
leave
shlb
je
repz
daa
mov
dec
mov
ret
hlt
cmpsb
adc
out
iret
push
mov
mov
sbb
stos
xor
stc
push
data16
lahf
orl
jns
lds
clc
mov
bnd
mov
fadd
insb
inc
sub
ja
sub
push
fdivrs
leave
lods
outsl
xchg
push
mov
stos
mov
pop
xchg
cmp
pop
arpl
rorb
test
ljmp
mov
shll
pushf
and
fldenv
inc
jmp
and
rol
push
mov
lods
fwait
mov
add
movsb
lods
push
call
lds
outsb
cld
add
dec
jno
es
ss
in
jb
and
pusha
xor
push
sarl
mov
pop
jecxz
fmul
mov
lret
stc
mov
lock
stos
xchg
fcmovnb
movsl
or
jb
stc
out
pop
add
out
pushf
fidivrs
dec
cld
sbb
std
xchg
jbe
sbb
adc
das
xchg
movsb
push
and
int
ret
jnp
sub
push
inc
sbb
roll
outsb
std
jecxz
and
cwtl
mov
int3
mov
aad
jo
jns
xchg
in
stc
mov
mov
and
bound
int3
dec
xchg
sahf
pop
sti
repz
andl
mov
adc
push
insl
pop
or
jg
jmp
cmp
stos
cmp
xor
lret
mov
dec
mov
xchg
fimuls
je
jl
push
push
sbb
ret
loop
pop
xchg
dec
mov
jmp
xchg
xor
rorl
cld
adc
incl
add
ret
push
jne
inc
mov
cmp
int
shl
mov
mov
stos
xchg
js
mov
jmp
lcall
movsl
loopne
pop
dec
xchg
mov
inc
or
cmpsb
and
iret
and
stos
pop
fwait
adc
movsb
je
popf
mov
push
xor
push
cmpsl
add
cmp
mov
xchg
dec
arpl
sbb
mov
ja
in
jle
pop
jp
out
push
arpl
jmp
jp
xor
pop
xor
stos
adc
std
sahf
into
movsb
out
mov
xchg
out
push
dec
stos
ret
pop
movd
test
jmp
jp
sbb
enter
xor
jo
ret
fs
adc
xor
lgs
push
or
xchg
or
xchg
push
inc
push
jge
or
aaa
test
aas
mov
mov
mov
adc
mov
cmc
push
fnstcw
pop
mov
mov
mov
sti
mov
cmp
es
aas
mov
push
push
sbbb
xor
int3
int3
cmp
in
in
sub
or
lret
in
shll
adc
cmp
dec
stos
aas
lcall
ja
and
bound
ror
lret
dec
xchg
stos
jge
nop
mov
mov
xor
xor
movl
and
xchg
sbb
jge
and
test
and
cmp
cli
icebp
xor
ret
sub
lods
inc
out
pop
push
pop
sbb
jl
ret
mov
push
in
mov
jge
jne
andl
pusha
adc
xor
push
mov
pusha
sahf
jnp
ret
into
fisubl
dec
mov
loopne
sub
pop
pop
or
jns
mov
sbb
push
cmp
cmp
mov
xchg
xchg
ds
sub
pusha
cmovp
cmp
push
test
pop
fisttpll
add
ss
push
repz
mov
lea
cmp
or
push
mov
sbb
js
hlt
test
in
aas
iret
lods
mov
sub
aas
jle
in
stos
jmp
dec
int3
shl
adcb
repnz
jl
ds
mov
mov
push
mov
xor
adc
imul
je
loopne
dec
push
mov
dec
xchg
mov
add
icebp
stos
sbb
mov
jno
mov
stc
and
popl
xor
add
std
push
dec
jl
push
shrd
adc
shl
xor
scas
aas
loop
mov
mov
movsb
or
out
mov
cltd
les
rorl
inc
shlb
repnz
testb
mov
inc
dec
and
imul
cs
fnstenv
xchg
std
loopne
adcb
fs
scas
fidivrs
repz
fdivl
fdivrl
mov
aam
fwait
add
jecxz
add
adc
enter
cmp
movswl
nop
mov
inc
fisubrs
pop
pop
push
push
pop
nop
mov
rep
cld
adc
and
xchg
jl
mov
shl
mov
sbb
gs
xor
pusha
jbe
cs
mov
aam
sbb
shrb
xchg
push
adc
jp
js
fs
mov
cmc
jae
jns
push
out
flds
cli
mov
loope
jae
and
fwait
add
lock
and
jb
jno
jo
pop
dec
mov
xchg
xchg
inc
clc
inc
cmp
imul
iret
ljmp
js
das
ret
jno
and
out
call
lret
xchg
inc
cmp
scas
cwtl
adc
jne
pop
sub
mov
or
mov
xchg
out
jo
and
aad
or
add
push
lock
popf
mov
repz
jne
or
stc
pop
mov
jg
dec
insl
mov
mov
clc
loop
aam
adc
mov
xor
and
pushf
cmp
push
and
out
int3
sbb
scas
bound
push
cltd
xchg
outsl
xchg
jle
fldl
outsb
test
mov
es
in
push
or
sub
mov
stos
mov
imulb
xor
fucomip
inc
insb
lcall
mov
daa
jbe
mov
and
lock
xor
xor
arpl
movsb
push
xchg
scas
xchg
stos
jecxz
dec
hlt
sub
gs
mov
decl
aad
mov
sub
jle
mov
add
mov
adc
rol
stc
cmp
das
popa
inc
sub
xor
or
fwait
decb
add
adc
out
pop
adc
adc
add
sub
xchg
data16
lahf
xchg
lds
pop
icebp
push
pop
test
mov
lock
pusha
mov
outsb
ja
sub
pop
mov
dec
repnz
and
test
sub
adc
add
mov
or
jp
fmuls
adc
pop
aaa
mov
pop
bound
or
add
push
jns
mov
cmp
and
or
pushf
xchg
sbb
dec
add
add
mov
in
push
mov
sbb
and
jle
repnz
push
lock
fistps
lds
ror
adc
cwtl
pop
adc
jno
lcall
iret
push
es
dec
dec
push
inc
ds
jecxz
mov
push
aam
les
test
jg
adc
cmc
mov
lds
mov
idivb
icebp
lret
xor
lahf
movsl
jmp
fsubrl
jnp,pt
fcmovb
out
cmp
nop
inc
inc
pop
xchg
lret
cmp
mov
sbb
addr16
ret
sub
sbb
out
inc
fsubs
call
filds
data16
mov
das
add
insl
rcll
int3
lret
popf
repnz
nop
and
nop
call
fwait
jl
divl
pop
repz
rol
add
fsubr
pop
jp
mov
fwait
imul
clc
scas
add
push
inc
jmp
sbb
adc
outsb
xor
gs
jbe
icebp
fcomps
fstpl
or
insb
out
mov
lcall
cmpsb
or
aaa
out
jmp
mov
xchg
pop
leave
out
or
lds
je
jmp
jl
jl
femms
iret
push
lock
in
add
cmp
ss
mov
xchg
push
mov
movsb
insl
xorb
arpl
push
mov
adc
sub
cmpsb
sti
and
xchg
outsb
jecxz
xchg
or
lods
call
nop
xor
mov
add
inc
rcrb
xlat
push
mov
mov
roll
out
sti
inc
das
dec
push
sbb
stc
jle
mov
push
sub
ss
cld
enter
add
les
mov
dec
aas
insb
inc
inc
pop
les
fs
mov
xchg
xchg
jae
fs
pushf
mov
xlat
adc
add
xor
sub
into
sub
mov
mov
es
jle
add
inc
add
inc
adc
movsl
cli
daa
loop
je
dec
pop
pop
jnp
xorb
out
aaa
adc
mov
fidivrl
in
ja
push
push
sub
sbb
xor
es
xor
cwtl
jne
jns
mov
out
lock
out
ficoms
adc
pop
cmpsl
cmpsl
xchg
js
pop
fidivrs
add
add
loopne
dec
mov
cmp
in
sbb
and
scas
push
out
mov
js
int
inc
cmp
bnd
test
adc
imul
xchg
push
mov
sarb
das
je
cmp
lret
call
inc
sub
je
add
mov
stos
pop
xchg
pusha
addl
in
inc
pop
dec
ss
cld
adc
xor
dec
xchg
mov
fdivp
popl
fcomps
xchg
pop
sbb
mov
sub
cld
or
pop
jo
mov
jmp
mov
enter
in
mov
ss
sarb
xchg
insl
imul
mov
push
dec
sub
aam
xchg
mov
into
push
pop
aam
adc
push
adc
ffree
cmp
std
out
rcrl
lds
movsl
xor
or
push
dec
out
push
call
sub
pop
stos
mov
aad
push
xor
and
call
cwtl
fs
popa
fstl
insl
lret
js
cli
call
nop
pop
aas
mov
repnz
clc
leave
xlat
xchg
inc
cmp
daa
inc
mov
push
ficoml
decb
mov
pop
test
data16
and
dec
mov
inc
inc
rorl
push
pop
mov
inc
hlt
xor
andl
stos
fistpll
push
or
ds
dec
fmuls
mov
adc
adc
iret
lods
add
mov
sarb
jae
jae
loope
repz
push
mov
out
dec
cmp
push
lea
pop
jge
cmpsl
jmp
mov
mov
test
fmuls
ljmp
cmp
aam
pop
mov
in
xor
pop
add
jno
push
push
add
out
jmp
xor
fwait
aaa
jo
mov
int
mov
mov
imul
pop
cmpsl
push
mov
and
ljmp
notl
cs
mov
fwait
test
fmull
and
lods
and
adc
push
inc
adc
fstp
jmp
dec
cmp
pop
movsl
fistpll
fcomps
stc
out
xlat
jmp
pop
mov
xchg
cmc
orb
rol
dec
outsl
cmp
adc
adc
hlt
dec
jbe
jecxz
xchg
shlb
loop
mov
mov
pop
stc
mov
fnstenv
ja
mov
sub
push
jne
add
rolb
cmpsl
outsl
cmp
ljmp
mov
push
add
daa
sbb
cmc
mov
and
lret
pop
lds
pop
mov
dec
push
fcomi
mov
push
ret
ss
hlt
sub
cmp
mov
jle
xor
mov
adc
xor
loope
test
idivl
outsb
ret
addr16
cmp
sub
in
loopw
loopne
int
fdiv
and
out
mov
pop
orb
sahf
adcb
movsb
mov
xor
arpl
sbb
push
mov
mov
incl
add
xor
loop
sar
int3
sub
cmp
pop
movsl
sbb
adc
repz
sbb
mov
xor
aad
aas
xor
ror
or
push
mov
repnz
mov
icebp
jae
mov
mov
scas
dec
divl
xor
mov
pushf
imul
jno
mov
xor
rorb
mov
repnz
daa
or
xchg
jp
inc
mov
and
scas
out
jb
or
aad
mov
mov
mov
and
out
xchg
jge
cmp
xchg
int
cwtl
popf
xchg
inc
shl
iret
or
cmp
sub
add
insl
test
adc
pop
out
loope,pt
push
or
lock
xchg
popa
cmp
iret
scas
mov
jl
xchg
ret
in
icebp
mov
notb
sbb
mov
mov
mov
test
jbe
push
push
fs
in
ss
sbbb
xor
sub
jae
and
cmp
add
data16
imul
add
push
imul
sub
mov
rorb
fmul
inc
icebp
push
or
sti
mov
sbb
je
inc
xchg
ret
outsl
in
fadds
cli
aad
sub
mov
out
out
and
arpl
push
inc
icebp
xchg
push
in
retw
loop
into
mov
je
xor
in
sti
and
shrl
adc
cli
xchg
and
pop
imul
jle
ds
insl
fadd
jecxz
sbb
xlat
sbb
fldl2e
inc
or
repz
mov
jne
bound
add
jg
and
cmpsb
add
out
sti
jae
ret
xchg
outsl
jae
call
jnp
enter
fxch
repz
imul
call
fcmovnbe
aaa
xor
jo
pop
aad
sahf
mov
add
fmuls
cli
out
outsb
fcmove
dec
or
addr16
stc
and
js
orb
sub
xchg
dec
fcmove
xchg
jns
lcall
les
lahf
mov
cmp
push
loopne
dec
adc
jno
sbb
cmp
int
sahf
outsb
adc
lods
pop
cmp
sub
mov
ljmp
or
fstpl
mov
fs
mov
mov
mov
cld
or
les
inc
je
jo
pop
adc
push
loopne
sub
mov
push
nop
push
mov
xor
jmp
mov
cmp
leave
adc
shll
lods
mov
lret
outsl
rcl
jno
push
movsb
adc
ret
fstpt
sbb
loope
repz
and
aas
lahf
stc
xchg
jne
bound
ss
sti
dec
jo
mov
xor
outsl
add
pop
scas
ds
aad
or
cli
lcall
out
ds
mulb
mov
push
loop
hlt
jnp
add
in
loop
icebp
icebp
lea
and
test
and
movsl
shlb
dec
fwait
jg
push
addr16
loop
mov
mov
xor
inc
xor
bound
movsb
and
pop
jnp
clc
aaa
aad
jg
in
test
sbb
mov
push
aam
pop
les
mov
jecxz
mov
pop
pusha
xor
jp
shlb
popa
pop
scas
fadds
cmp
scas
jb
sti
lahf
pop
mov
decb
jl
xor
aaa
pop
add
fmuls
loop
jo
repnz
or
adc
push
jbe
int3
cmpsb
call
lret
xchg
andb
or
cmpsl
pop
and
pop
mov
es
mov
aas
stos
xor
lahf
sarb
inc
in
fsubrl
test
test
xchg
mov
sbb
mov
fwait
xchg
in
add
iret
stos
lahf
jg
xchg
lret
adc
mov
jp,pt
adc
push
pop
push
repnz
call
pusha
pop
movsl
mov
popf
xchg
cmp
push
jg
movsb
subl
mov
xor
nop
sub
lea
xor
addr16
ljmp
aam
sbb
push
inc
mov
mov
popa
sub
mov
lods
xor
pop
xchg
mov
adc
or
pop
pop
stos
je
xchg
mov
test
call
ret
js
mov
fcmovb
pushf
les
adc
cwtl
lea
xchg
std
test
jg
pushf
fstpl
inc
dec
xchg
movsb
mov
and
add
xchg
pushf
push
adc
push
in
push
jae
in
and
shrl
mov
pop
sbb
outsl
pop
insb
cs
sbb
lret
mov
ltr
out
rcrb
pop
popf
cmp
pusha
movsb
xor
lret
push
in
dec
pop
xor
mov
icebp
aaa
arpl
mov
mov
lret
jo
ret
jmp
stos
stc
ret
in
cmp
pop
jge
popa
cwtl
dec
rorl
push
jecxz
cld
lcall
test
inc
sbb
push
mov
loopne
xchg
call
jo
idivl
push
clc
test
cmp
repnz
lahf
inc
daa
popa
sub
in
xchg
test
dec
ja
xor
dec
inc
cmp
mov
mov
jmp
xchg
pop
jne
insb
in
loopne
pop
cmpsl
call
repz
mov
mov
cli
sahf
shrb
inc
cltd
repnz
or
add
mov
sub
add
stos
out
arpl
cmpsb
in
xchg
roll
pop
adc
xor
push
sbb
popf
jnp
xorb
fnstsw
add
movsb
and
xchg
adc
lods
rclb
and
mov
jge
mov
xorl
addr16
dec
jo
and
push
jge
repnz
push
push
xor
xchg
mov
inc
fstpl
leave
or
cmp
in
push
ljmp
sbb
cmp
pushf
int
sarb
clc
jmp
inc
pop
cmp
dec
mov
jnp
cld
js
cmp
inc
insb
out
sbbb
or
inc
movsl
fmuls
dec
inc
mov
imul
hlt
mov
stos
test
and
popf
roll
imul
movsb
push
insl
andl
sbb
sbb
or
pop
stc
push
stos
sahf
movsl
and
cld
stos
int3
cmp
inc
daa
mov
outsl
push
mov
and
and
cvtps2pi
pushf
inc
pop
mov
xor
ret
addr16
hlt
out
xlat
jecxz
loope
clc
pusha
adcb
test
sbb
outsl
push
vhaddpd
ret
fs
sbb
or
int
mov
ret
xor
loope
std
test
or
pop
sbb
jnp
mov
int3
outsl
xor
lods
sti
sbb
xchg
rep
lock
jge
aas
sbb
outsl
loop
cli
mov
inc
adc
movsb
mov
mov
push
pushf
mov
jg
inc
data16
dec
mov
cmp
int3
lret
xchg
jns
repz
xor
iret
in
push
aas
pop
push
cmpsl
pusha
loopne
es
xchg
sub
stos
inc
mov
call
add
pop
xchg
sub
insl
iret
ret
push
dec
int3
int3
sbb
aad
jne
arpl
icebp
jl
stc
jb
jae
inc
testl
push
sti
sbb
lcall
or
filds
xchg
adc
add
xchg
stos
hlt
scas
add
shl
xchg
inc
repnz
xchg
sbb
mov
and
or
push
mov
pop
mov
pop
addr16
push
jmp
fistpl
jo
mov
aaa
cmpsb
faddl
fisubrl
mov
sbb
or
cmp
gs
add
sbb
aaa
mov
mov
and
mov
dec
push
mov
add
adcl
mov
add
mov
add
push
test
inc
and
mov
lahf
clc
adc
add
mov
xor
jg
mov
jecxz
xor
jbe
pusha
sti
call
push
icebp
call
int3
dec
mov
imul
loope
popa
adc
subps
pop
sti
xlat
aaa
pusha
sbb
cmp
sbb
into
es
push
cltd
push
stos
dec
stos
enter
fcomps
inc
jbe
mov
hlt
imul
mov
data16
rorl
fsubs
jns
icebp
je
je
daa
ljmp
pop
add
subb
push
mov
rolb
adcb
mov
add
pop
mov
inc
jnp
pop
xchg
mov
sbb
shrl
aaa
or
xchg
sarb
pop
xchg
cmc
mov
fldenv
xchg
enter
shl
adc
inc
out
leave
out
mov
jbe
adc
loopne
fnsave
inc
lds
incb
aad
mov
test
insb
movsl
sub
pop
push
stos
sub
lods
jno
mov
aam
push
rcrl
adcb
and
pop
into
sbb
add
dec
jmp
mov
adc
add
call
inc
leave
lahf
push
pop
or
xor
mov
push
fbld
popa
cmp
test
add
pop
dec
or
add
popf
stc
cmpsl
push
frstor
pop
mov
int3
mov
push
pop
cwtl
out
lock
push
das
pop
and
shrl
cmp
push
lret
fstp
cld
jne
ss
pop
pushw
cmp
xchg
in
roll
jnp
push
into
mov
fstl
ret
and
icebp
mov
lods
lods
jno
dec
pushf
pop
dec
outsb
int3
jp
cmp
scas
mov
cmp
pop
inc
jae
loope
movsl
stos
jmp
push
mov
xorl
scas
pusha
clc
jb
arpl
lcall
out
and
mov
xchg
dec
dec
out
stc
test
push
push
xchg
add
loop
sarl
adc
shll
xchg
into
mov
imul
mov
adc
and
add
dec
or
or
xchg
test
outsb
stos
icebp
jp,pn
dec
push
outsb
pushf
push
movsb
mov
jmp
dec
js
mov
inc
xchg
aam
pop
inc
inc
push
add
add
or
stos
popf
add
xchg
dec
das
rcrb
and
cmp
cmc
push
fldl
scas
dec
adc
sub
enter
or
sbb
xlat
push
sub
cmp
dec
jl
cld
fsubrs
add
frndint
mov
lods
pushf
mov
js
xor
mov
frstor
add
pop
and
rclb
fimull
das
inc
aas
outsb
incl
test
jle
inc
mov
arpl
out
rclb
scas
or
ficompl
sbbl
xchg
mov
fadds
dec
jae
repz
lods
mov
mov
sti
addb
lods
aaa
outsl
and
xchg
jmp
or
aaa
xor
cmp
mov
add
inc
out
gs
or
test
jecxz
xor
jmp
mov
out
mov
sbb
out
cmp
ret
add
data16
clc
imul
fwait
pop
mov
ficompl
jo
xchg
jle
mov
mov
inc
fwait
push
pop
rorl
add
lret
stc
cmp
or
subb
aad
shlb
mov
ds
dec
stos
mov
scas
xchg
popf
xchg
popa
icebp
cmp
in
pop
sbb
test
inc
aas
mov
sub
cmp
sbb
imul
mov
or
push
dec
dec
aam
test
push
pushf
sub
pop
pop
mov
std
sbb
rolb
sbb
fimuls
pop
movsb
sbb
rorl
ret
mov
xchg
dec
arpl
ret
mov
xor
add
dec
clc
nop
cltd
jl
xor
adc
cltd
and
xor
push
dec
pop
and
mov
sbb
stc
in
out
mov
mov
mov
add
fldl
adc
aam
lods
jbe
xchg
shlb
jle
jmp
leave
mov
js
stos
mov
in
push
std
cmp
out
dec
push
lahf
int
push
fldt
filds
mov
scas
aam
mov
xchg
daa
into
popa
mov
xchg
mov
push
pushf
add
rol
test
cmc
or
lret
pop
jno
push
sbb
ret
sbbl
test
mov
sub
and
insl
iret
or
bound
iret
cltd
ret
sub
pop
xchg
movlhps
jbe
cmp
cs
lea
aaa
mov
and
ret
scas
dec
lahf
subb
push
sub
pop
lret
inc
or
shll
inc
and
imul
lcall
cmp
cs
xchg
dec
dec
mov
mov
cmp
insl
ja
cld
inc
rolb
aas
jge
andl
addb
add
ficoms
aad
dec
icebp
xchg
jecxz
lods
pop
mov
add
push
push
int3
pushf
icebp
lcall
and
shr
fldl
mov
pop
scas
cmpsb
aad
or
inc
das
call
aam
gs
mov
movsb
aam
mov
pop
add
psllq
inc
cmp
fsubl
mov
or
push
jae
cmpsb
jbe
mov
sti
ficoml
cmp
and
das
cld
inc
test
stc
scas
dec
jb
jg
cmpsb
pop
sub
or
mov
jne
mov
sub
ffree
mov
mov
aam
test
adc
xor
and
mov
sbb
pop
call
sbb
mov
dec
nop
xchg
ja
fnsave
sbb
jno
cmp
je
mov
jl
inc
loopne
mov
sbb
mov
test
call
xor
sarl
and
test
cmp
aaa
popa
hlt
mov
leave
xor
inc
sub
xor
in
insl
push
mov
mov
mov
out
mov
insb
adc
cmpsb
sbb
mov
lods
cmp
jmp
imul
std
mov
mov
push
jae
dec
call
daa
dec
bound
js
jb
daa
xchg
mov
jno
test
popa
aad
sbb
adc
icebp
push
sub
mov
dec
cmc
inc
or
pop
xchg
inc
pop
pop
sbb
pop
and
test
jnp
int
cmp
gs
add
ret
insb
inc
adc
pop
mov
mov
mov
ljmp
mov
dec
imull
fwait
insb
loopne
jle
or
mov
mov
call
sarl
dec
shll
jge
call
push
aas
adc
out
icebp
stos
xor
push
movswl
rcr
dec
pop
xchg
out
mul
cmp
xor
insl
stos
mull
push
cmpsl
pusha
lret
dec
sbb
fdivrs
jno
sbb
lods
mulb
loopne
adc
pop
push
lcall
push
ret
outsb
cmp
addr16
adc
jle
rcr
faddp
xchg
popf
xchg
jmp
sub
popf
ja
aas
fwait
mov
or
mov
or
mov
dec
adc
adc
pushf
cld
inc
es
mov
jnp
test
mov
into
jmp
pop
pop
lods
sub
pop
add
scas
xchg
jge
mov
aas
adc
adc
jg
mov
int
js
dec
jl
sbb
add
out
cld
mov
in
in
dec
in
adc
and
adc
push
mov
data16
push
movsl
jg
pop
insb
fidivl
ficompl
jnp
mov
jp
jle
push
stc
xor
sub
pusha
add
outsl
lret
xchg
sbb
cmp
lcall
jg
sbb
mov
jmp
adc
push
and
movsl
mov
lcall
js
lods
inc
fwait
xchg
xorb
or
dec
testb
fstpl
xchg
lods
and
stos
pushf
mov
cli
stos
ror
cs
and
movsl
dec
inc
loope
mov
shrb
sbb
pop
lods
pop
call
dec
sub
inc
ja
push
mov
pop
xchg
push
sti
jno
adc
jae
push
js
dec
pusha
cmp
int
sbb
roll
in
xchg
repnz
sbb
xor
inc
xlat
cmp
jno
mov
pop
les
and
arpl
xor
mov
pop
xchg
rcll
xorb
arpl
fs
or
int3
jge
or
pop
sub
mov
cmp
push
sbb
and
rcrb
lea
orb
loope
sar
out
jl
xchg
mov
jne
out
shl
bnd
xchg
ss
daa
lods
lea
jg
int
test
in
imul
fs
rol
js
fbld
push
adc
test
insb
mov
jge
jb
daa
dec
push
pop
cmp
int3
repz
jmp
jae
cmpsb
dec
xchg
daa
repnz
cmpb
lret
hlt
jecxz
fistps
shl
mov
jp
shrb
sub
fsubrs
xor
pop
orb
lret
sbb
fnstsw
cmp
mov
inc
push
xor
aam
mov
fldcw
lods
out
xchg
jp
enter
jmp
ss
idivl
xchg
cmp
add
ds
xchg
cmpsl
imul
leave
adc
inc
popf
mov
or
std
movsb
and
data16
mov
cmp
inc
or
cltd
sbb
and
mov
pop
out
mov
adc
mull
in
test
jb
jae
pop
loop
or
dec
jp
add
lahf
sbb
jne
les
pop
clc
pusha
scas
push
stos
in
dec
and
dec
hlt
jnp
push
cli
or
pushf
orl
and
scas
sahf
pop
pop
cwtl
leave
imul
test
fs
push
and
outsb
add
and
dec
push
in
das
xor
inc
xchg
xchg
lcall
stos
ror
xchg
movsb
enter
push
outsb
test
pmaxsw
stos
jae
mov
adc
aad
mov
lret
out
jle
std
jl
sub
inc
jge
push
ss
in
pop
out
or
cmp
xchg
int3
or
daa
leave
xchg
dec
mov
xor
jp
aad
addr16
xchg
loope
popa
jb
mov
sub
push
lret
jmp
test
test
imul
fcomp
sub
pop
mov
inc
popa
jnp
dec
and
cli
jge
gs
imul
fldcw
dec
test
insb
xchg
adc
jg
popa
add
stc
imul
pop
insl
push
mov
imul
movsl
sbbb
cmp
adc
mov
fldz
add
push
rcrb
enter
in
pop
out
dec
and
dec
mov
iret
pop
iret
sbb
jae
ret
clc
mov
fcompl
cmpsl
dec
mov
cmp
testb
das
xchg
push
mov
and
jb
shll
push
push
lods
adcb
adc
test
pop
jg
mov
add
in
out
sbb
cmp
push
mov
smsw
mov
push
push
mov
fistps
add
add
lods
subb
pop
inc
ja
push
dec
pop
pop
sar
jo
dec
sbb
mov
out
cmp
rclb
pushf
mov
xchg
adc
push
jg
cmp
cmc
enter
or
mov
pop
ret
daa
adc
push
out
mov
scas
mov
ljmp
mov
data16
lea
stos
insb
add
mov
fcomp
xor
jmp
xchg
inc
pop
push
inc
cmp
daa
and
mov
sub
push
sbb
in
es
xchg
mov
adc
out
adc
cwtl
cmpsb
jns
or
and
ds
outsb
push
or
data16
pop
adc
in
mov
mov
imul
mov
xchg
fnstenv
shll
or
jbe
mov
fs
xor
rorl
fnsave
adc
aaa
jp
fucomp
nop
mov
imul
xchg
icebp
loope
jg
jp
data16
aas
dec
leave
jns
push
mov
xchg
sub
and
xorl
xchg
mov
sub
and
aad
scas
inc
adc
lret
cmp
and
das
cld
push
mov
lods
xchg
ficompl
scas
nop
push
mov
stos
fistpl
dec
xchg
jp
call
mov
pop
sbb
xchg
add
pop
inc
iret
xor
sbb
bound
and
xor
pop
add
stos
das
sbb
lret
xchg
inc
test
inc
imul
and
rdtsc
daa
inc
cmpsl
divb
sti
push
int3
mov
fsubl
imul
and
mov
dec
ds
in
or
xchg
in
cmpsl
lock
out
sub
jmp
add
dec
pop
mov
mov
jb
adc
mov
push
cmp
dec
aaa
pushf
cld
movsb
adc
arpl
xlat
cmc
dec
dec
lods
nop
sbb
out
jns
jg
aas
adc
xlat
mov
push
into
cmp
je
mov
cld
xchg
dec
outsl
ret
xor
cmc
add
cmp
cltd
clc
add
aaa
fwait
cmp
flds
fimuls
mov
pop
loope,pn
lret
push
pop
jle
dec
xchg
adc
pop
in
call
pop
xchg
pop
dec
and
add
shll
lock
adc
dec
cmp
int
push
fadd
jae
aas
jecxz
pop
fistpll
push
aam
das
jge
mov
insl
xchg
sub
imul
jb
sahf
mov
add
jg
mov
in
and
add
or
push
inc
xchg
jmp
xchg
push
mov
fdivrs
and
pushf
pop
sbb
ret
popf
fdiv
sbb
clc
xchg
or
fstp
cmp
push
nop
xor
mov
lcall
mov
pop
repz
jnp
test
punpcklwd
cmp
mov
gs
or
push
cmpsl
mov
cmpsl
jp
xlat
and
push
ds
aad
jecxz
outsb
mov
xor
ljmp
mov
popa
mov
and
popa
mov
sbb
pushf
mov
mov
mov
xchg
aad
mov
dec
jp
cmp
js
cmpl
push
mov
mov
fsubrl
or
cs
nop
outsb
sbb
mov
into
movsb
lret
sub
rcrb
mov
and
jno
mov
add
pop
xor
aad
mov
jge
mov
ret
ja
sbb
je
cwtl
js
ret
xchg
cli
pop
and
and
int3
mov
mov
and
and
sub
aam
cs
jg
dec
xor
inc
aas
dec
pusha
push
push
inc
add
fbld
sbb
imul
or
shl
jecxz
bound
in
mov
mov
ja
cmp
out
int
hlt
jge
das
pop
or
jbe
sbb
push
stos
jmp
dec
out
push
or
lahf
push
in
mov
test
adc
loope
aad
inc
test
jne
sub
xor
jmp
mov
jns
jl
push
cmp
pusha
lds
clc
jae
pop
cmp
pop
sub
sbbl
push
adc
bnd
xchg
push
loopne
push
mulb
adc
or
popa
xchg
in
loopne
add
pop
jp
sbb
fidivs
call
add
or
in
in
jg
pop
sbb
cld
dec
fists
mov
fcomps
ds
inc
sbb
call
jge
sti
imul
idivl
mov
jns
repnz
inc
mov
mov
mov
nop
fcoms
fdivl
and
insl
jnp
xchg
pushf
add
xorl
xchg
push
sub
fdivs
addr16
push
lods
sahf
mov
sarb
sbb
push
enter
outsl
add
pusha
es
jae
push
mov
lods
sbb
xor
cmp
cmp
cmp
cs
sbb
jl
insl
nop
push
pop
adc
lcall
mov
pop
lea
mov
bound
fs
pop
xchg
in
sbb
or
xor
xlat
jg
aas
mov
aas
jg
xchg
or
mov
roll
mov
daa
mov
jo
xchg
pop
loop
xor
pop
mov
push
outsl
mov
scas
inc
mov
jbe
mov
clc
sti
rol
sti
adc
stos
xchg
cmpsb
and
pop
push
lcall
out
lret
mov
lahf
dec
jns
pop
lods
jl
es
adc
mov
jns
xchg
pop
fwait
sub
int3
mov
aas
ja
cmp
mov
addr16
xchg
mov
mov
pop
ror
pop
aas
mov
inc
ds
add
pop
inc
pop
mov
add
sub
push
xor
scas
mov
or
xor
or
mov
pop
add
out
xchg
push
push
mov
out
sarb
push
and
xchg
scas
cmpsl
cs
push
nop
push
mov
push
out
rcrb
mov
cmp
rcl
shr
stos
sub
cmp
lcall
mov
aas
jno
adc
pop
out
fwait
xor
bnd
fcmovbe
shrl
mov
daa
lods
xor
mov
imul
push
jo
push
mov
into
repz
test
cmp
push
cmp
add
xor
add
pop
sbb
push
adc
repnz
and
mov
mov
es
sub
js
mull
fwait
ja
jg
testb
dec
es
int3
icebp
push
xchg
iret
xchg
xor
loopne
push
dec
jecxz
dec
scas
loop
xor
cmp
inc
xchg
pop
mov
jecxz
add
das
fldenv
aaa
and
xor
cmp
rclb
or
fdivrs
divb
cmpb
add
hlt
lock
add
pop
xchg
lods
mov
std
out
mov
cmp
xor
daa
xor
jno
jo
adc
filds
cmp
adc
sub
mov
fwait
fprem1
mov
inc
dec
xor
vpsrlq
ljmp
insl
add
out
pop
cltd
xchg
add
push
addr16
push
xchg
loop
dec
gs
nop
dec
das
movsb
ds
fisttpl
repnz
push
cli
dec
mov
test
ljmp
and
adc
call
push
test
movsl
jae
mov
jp
fistpll
mov
jecxz
insb
gs
jge
mov
cmp
sbb
xchg
mov
jo
mov
imull
aam
leave
push
add
js
mov
pop
push
out
aad
add
xor
dec
xor
jmp
stc
add
jp
pop
mov
xor
xor
fidivs
mov
mov
pushf
cmp
mov
xchg
push
fadd
popa
pop
iret
sbb
xor
loope
mov
stos
pusha
leave
ss
jp
cmpsl
popa
pop
enter
inc
int3
lods
pop
lcall
pop
mov
sub
sbb
xchg
mov
push
mov
inc
fcompl
or
sub
xchg
fwait
jge
mov
xchg
jbe
pusha
or
push
pop
sub
adc
outsb
inc
inc
cmp
inc
rcrb
rcrl
push
jb
pusha
fcmovnu
adc
adc
jmp
adc
and
mov
mov
rorb
int
jo
adc
push
xchg
or
push
inc
call
add
dec
movsb
inc
xor
xor
outsb
push
mov
xor
xchg
stc
mov
mov
sbbl
mov
scas
test
mov
lock
rolb
or
jne
push
inc
and
sub
mov
ja
out
sbb
iret
sub
mov
movsb
loope,pn
in
mov
jno
andl
leave
jecxz
sub
cmp
pop
push
or
mov
je
nop
lods
pop
xchg
or
jno
dec
xlat
inc
repnz
in
jno
and
cmp
pop
scas
add
adc
js
mov
sahf
mov
out
fdivrs
jne
push
mov
pop
mov
popf
or
test
pop
xor
flds
pop
xchg
movsb
icebp
imulb
pop
aas
mov
jbe
or
imul
adc
pop
sbb
push
xchg
pop
sbb
bound
jns
data16
cli
bound
sub
mov
cwtl
mov
sub
cs
addr16
mov
inc
lcall
shl
inc
pop
fs
int3
and
shrl
filds
sbb
stos
inc
fidivs
xchg
jg
pop
dec
mov
imul
push
or
push
xor
jb
mov
push
in
lds
adc
lret
cmp
push
xchg
pop
xchg
addr16
shll
lea
or
cmp
sbb
sub
dec
sub
insb
loop
push
push
addl
mov
pop
push
push
cmc
in
insb
movsl
movsb
dec
int3
pop
lock
mov
sbb
leave
jecxz
sub
inc
jns
lods
cmp
jle
les
adcb
addr16
inc
ss
inc
lcall
cltd
jae
rolb
mov
hlt
fs
stos
pop
sbb
outsb
push
add
mov
leave
adc
sbb
mov
and
sbb
movl
xor
xor
push
inc
sub
push
lods
nop
aas
insl
adc
lea
cwtl
rclb
imul
pushf
test
mov
outsl
add
and
push
sbb
pusha
add
adc
sbb
pop
cmp
sbb
iret
popf
out
insl
dec
jl
addr16
fcmovu
das
push
xchg
fcompl
sbb
mov
and
adc
mov
or
shrl
iretw
insb
sub
mov
sub
mov
and
or
xchg
dec
stc
test
and
sbb
sbb
push
dec
inc
sub
dec
ja
mov
mov
xchg
dec
inc
pop
cs
lea
sbb
and
out
out
mov
or
pop
rorb
in
enter
rolb
call
ljmp
nop
scas
dec
pop
jnp
push
mov
dec
in
adc
fdivrl
push
out
xor
sbb
std
iret
out
jecxz
jae
out
add
dec
mov
mov
ljmp
leave
aaa
loop
and
sbb
or
pop
pop
jns
inc
rol
dec
adc
imul
cwtl
les
mov
insb
adc
outsl
dec
aam
ret
das
inc
aad
into
pop
loopne
das
inc
dec
fs
dec
add
stos
out
fsubrl
push
mov
enter
jl
push
stc
sub
mov
or
je,pt
fs
je
cmp
jbe
std
sbb
stos
movsl
xchg
leave
jo
insl
hlt
inc
cwtl
inc
cmp
aam
jbe
lods
or
jae
lcall
fnstcw
sbb
mov
arpl
scas
dec
fs
sbb
pop
lds
lock
xlat
push
pop
sbb
push
add
ljmp
cs
cmp
xchg
push
loop
aas
jge
fwait
sub
mov
test
adc
insb
jb
movsb
out
cmpl
ss
hlt
in
imul
mov
mov
cmpsb
mov
hlt
jno
push
sbbb
mov
aaa
fnsave
cwtl
mov
add
push
jecxz
sbb
xchg
icebp
mov
push
xor
dec
push
push
mov
sar
shrb
ret
pushf
out
int
add
inc
loopne
aam
cmp
adc
imul
xchg
dec
dec
leave
int
ja
aad
inc
xchg
cmpsl
movsb
jecxz
xor
lods
jl
rcrl
fwait
add
movsb
add
arpl
int
gs
mov
dec
je
aaa
push
mov
pop
xor
sbb
lods
lods
dec
push
jnp
cmp
inc
cmp
xchg
popf
in
cmp
jle
xor
cmp
mull
or
out
clc
in
dec
fwait
jmp
jo
sub
das
inc
cmp
push
fcomps
popf
aad
mov
xchg
out
push
jb
fwait
ret
pop
fldenv
fimull
cld
pop
jnp
divb
into
adc
jp
lods
mov
fsubs
je
fcomp
push
inc
lds
xchg
cmc
sub
movsb
mov
divl
add
into
das
cmp
mov
aam
jbe
subb
mov
punpcklwd
xchg
fsub
pop
clc
inc
cld
xor
sahf
mov
jmp
test
mov
fwait
pslld
scas
lahf
mov
bound
test
mov
clc
pop
pop
dec
jge
pop
mov
jle
pusha
pop
mov
outsb
es
imul
popf
jns
out
nop
aas
mov
imul
enter
pop
sub
leave
xchg
pop
jae
mov
ss
in
subb
mov
ret
or
ja
test
idivl
and
repz
sub
push
jg
bound
stc
fstps
or
xlat
test
add
and
mov
dec
ds
xchg
mov
dec
cmp
arpl
jl
adc
out
jns
fsubl
mov
fcompl
pop
aad
add
mov
fcoml
inc
and
mov
repnz
sub
adc
shlb
xlat
cmp
shlb
dec
pusha
and
test
pop
lds
shlb
jecxz
and
cmp
mov
lret
aad
out
stos
cmpsb
inc
stos
xchg
push
roll
inc
in
insb
and
cmp
mov
loopne
pop
scas
pop
push
add
add
jmp
jl
or
pop
addr16
pop
xchg
pop
fimuls
pop
xchg
cmp
mov
cli
jge,pn
enter
push
enter
adc
les
and
imul
rcr
xor
push
stos
outsl
jb
outsb
xlat
mov
shl
add
mov
sub
pop
xor
jecxz
push
lds
and
lock
mov
add
jbe
mov
lret
test
sahf
dec
push
in
and
xchg
push
test
push
pop
fbld
mov
pop
jne
gs
xorl
adc
jle
inc
movsb
lahf
sub
cli
loop
jne
mov
adc
shl
stos
sbb
or
popa
lret
inc
xlat
test
sbb
aaa
addb
das
push
add
mov
cli
jmp
pop
clc
das
jns
mov
idivl
test
xor
mov
cli
jmp
jno
pop
cmp
mov
cwtl
pop
xor
xor
out
sbb
jnp
cmp
scas
push
add
adc
xor
jle
and
dec
aam
cmp
push
jae
mov
cmpl
clc
sub
rclb
dec
push
stos
xor
out
jae
add
stc
pushf
add
lcall
nopl
xor
repz
xor
dec
ficompl
dec
cmp
data16
pop
ret
movsl
outsl
movsb
sbb
pop
pop
or
cs
mov
nop
adc
cwtl
push
adc
test
test
mov
xor
dec
ds
ret
aaa
aas
xchg
ret
mov
fcoml
les
and
add
repz
mov
je
jmp
into
int
scas
add
push
js
sub
fistps
loope
cltd
mov
adc
xor
std
fisttpl
push
adc
shlb
lahf
inc
xchg
mov
mov
pushf
jecxz
add
pop
mov
aaa
cmc
icebp
mov
sub
out
push
xor
xor
mov
dec
outsl
jg
ret
cwtl
call
fcmovbe
sarb
ror
mov
sbb
add
jmp
mov
inc
ret
sti
mov
add
and
inc
jae
dec
stos
hlt
fistpl
push
cmp
mov
les
rol
inc
idivb
push
xor
mov
pusha
inc
mov
and
nop
loopne
dec
jmp
push
fwait
pop
jmp
dec
enter
cmp
leave
jg
je
imul
data16
dec
dec
aad
add
cli
jge
adc
stc
ljmp
jnp
jmp
mov
pop
mov
cld
xchg
out
sbb
cmpsb
jmp
mov
dec
cmp
inc
call
jl
sahf
dec
orl
fsubl
cmc
stos
mov
outsl
nop
mov
into
pop
add
popf
cld
sub
mov
fisubrs
push
push
ljmp
mov
jg
inc
out
fucomip
outsl
imul
push
orl
mov
or
xchg
stos
push
push
push
imul
jns
ljmp
adc
mov
fistpl
lods
lcall
dec
int
nop
fistps
push
cmp
adc
jo
ds
testb
adc
jnp
ret
imul
test
cmpsl
mov
jno
aaa
fs
jmp
cmc
cmp
pusha
and
and
push
outsb
xor
push
lods
sbb
jl
xor
or
xchg
cmpsl
mov
data16
jle
sub
pop
cmp
pop
inc
jbe
sbb
push
add
sub
hlt
call
xor
fs
lods
ret
adc
cmp
pop
mov
mov
clc
add
push
push
ret
out
mov
or
test
lock
adc
insb
insl
out
decb
js
push
fs
out
test
xchg
mov
mov
jecxz
sub
xchg
aas
aas
stos
movsb
popa
sbb
xchg
lahf
rorb
push
orb
pop
insb
mov
cs
testb
add
fistps
xchg
jb
ficoms
roll
gs
and
repnz
adc
mov
mov
mov
add
in
mov
mov
adc
xlat
daa
fldenv
lods
pop
xchg
and
sub
mov
jnp
pushw
sbb
or
test
dec
adc
mov
in
fs
test
icebp
test
dec
rolb
addr16
je
fdivrl
out
out
mov
mov
popw
inc
jns
insb
jmp
andl
lret
sub
outsl
lea
adc
xchg
cld
inc
dec
pop
pop
clc
xchg
and
fisubrs
or
mov
inc
lret
jnp
push
or
push
loopne
call
daa
lods
inc
jge
cmpsb
mov
and
push
add
or
xor
mov
negl
stos
sti
ja
push
or
xchg
pop
sbb
lock
sbb
xchg
pop
test
push
stos
xchg
loope
data16
mov
mov
imul
mov
sub
xchg
push
arpl
push
lods
movsb
jae
push
push
aam
inc
stc
loope
aad
and
filds
mov
clc
mov
mov
mov
jo
subl
push
sti
fwait
cmp
shrl
or
pop
inc
test
movsl
dec
popf
adc
mov
testl
jp
pop
push
add
cmp
les
or
fdecstp
bound
das
sub
sub
cltd
sarl
add
cwtl
push
mov
inc
hlt
add
sbb
repz
rolb
mov
or
mov
lret
push
xchg
test
test
sahf
mov
fistps
and
std
sbb
ja
cmp
xor
mov
cmp
cmp
mov
fisttpll
push
xchg
and
shlb
mov
aaa
jl
add
and
xlat
movl
les
xlat
pushf
jp
adc
and
std
jns
insl
jmp
or
clc
xchg
xor
lock
ret
lret
test
mov
cmp
lcall
pop
xlat
push
inc
lods
pushf
adc
shll
cmc
jnp
bound
sahf
cmp
cltd
sub
jbe
pop
int3
fbld
push
test
pushf
das
mov
test
mov
imull
andb
and
filds
loop
add
and
aam
pushf
jmp
cmp
xchg
cmp
or
push
sub
xor
roll
out
out
fildl
pop
mov
outsb
pop
xor
inc
aam
imul
xor
xor
stos
add
cmp
and
mov
mov
mov
loope
lahf
mov
gs
rorl
icebp
notb
mov
pop
xor
movsl
dec
pusha
popa
xchg
xor
iret
lret
push
loop
sbb
push
sbb
xchg
add
repz
in
lods
cmc
test
jge
ljmp
cwtl
push
add
cmp
scas
jle
inc
mov
ja
cmp
and
fwait
outsl
mov
inc
divb
stc
mov
sbb
jbe
mov
jno
mov
lds
ss
or
xchg
xlat
insl
orl
xchg
sbb
out
push
push
mov
jns
pop
dec
leave
pop
in
loop
mov
lret
mov
push
mov
sbb
mov
test
out
les
jl
rorl
pop
push
rcr
in
push
mov
ret
das
jge
loop
arpl
cmp
push
test
loope
jle
enter
and
scas
sub
aaa
fwait
mov
jno
mov
inc
movl
mov
aaa
mov
fldl2e
rcrb
jbe
and
jns
mov
lods
xor
ss
outsl
movsb
sbb
sub
adcb
cmp
mov
rclb
dec
pop
out
add
pop
cmc
push
mov
mov
scas
add
mov
xor
jo
adc
inc
cmp
xchg
sbb
inc
mov
jnp
and
push
adc
mov
imul
push
arpl
sub
cli
fisubrs
push
pop
mov
cmp
loopne
lds
hlt
test
loop
lret
and
xorb
add
mov
mov
xchg
and
add
xchg
shll
ja
imul
je
int
sub
mov
adc
or
jnp
and
pop
andb
cmp
popf
mov
jae
shll
in
push
inc
repz
add
jns
test
cmp
xchg
adc
pop
addr16
stc
fwait
mov
mov
mov
push
loopne
xor
test
jbe
xchg
jg
ds
push
cld
xlat
call
pop
fdivr
out
sbb
popa
sub
mov
aad
xchg
adc
mov
push
test
out
lcall
xchg
xchg
mov
mov
fwait
repz
fidivs
xor
add
mov
adc
je
or
xor
xlat
test
fwait
cmp
loopne
xchg
std
jbe
int
test
inc
fcomi
rcll
mov
mov
loopne
adc
aad
mov
mov
xchg
imul
or
stos
pop
repnz
mov
fcmovnbe
cs
add
xor
adc
loope
repnz
jle
mov
jp
inc
enter
icebp
enter
dec
out
push
or
push
xchg
shl
into
mov
jno
ret
sbb
and
inc
dec
xor
fsts
mov
inc
cmp
out
push
pop
inc
cwtl
cltd
lahf
std
jo
adc
fnstenv
xor
mov
xchg
jle
leave
ret
sbb
arpl
sub
cmp
jo
xor
pop
jle
sub
or
sub
ljmp
rcrb
dec
and
sbb
je
jge
loopne
popf
dec
fiadds
scas
adc
ljmp
cmp
push
insb
or
cwtl
shlb
pop
std
aam
lahf
int
push
dec
aaa
nop
or
shlb
scas
aad
movsl
lods
sti
imul
mov
dec
xor
subb
and
lds
add
hlt
mov
sbb
jb
dec
sbb
loope
les
lret
addb
inc
jmp
push
xchg
pop
jbe
adc
jp
pop
incb
daa
rolb
and
jle
test
inc
sbb
push
movsb
bound
test
gs
mov
jp
ss
xor
push
xchg
ret
mov
pop
pop
ja
pop
lods
test
fcompl
push
mov
push
aas
xchg
jmp
add
push
shlb
fstps
cld
test
xchg
mov
out
sbb
out
sahf
in
or
jle
cmp
xor
das
mov
addb
jmp
cmp
fimull
fbld
aaa
jg
inc
cmp
mov
push
cmp
push
mov
inc
mov
inc
dec
lods
xchg
in
push
push
jb
call
daa
jae
orb
adc
iret
jmp
sub
mov
adc
ret
dec
ret
jae
in
pop
push
incl
arpl
pop
sbb
pop
inc
push
std
rcrl
fwait
cmpsl
pop
and
cmpsb
and
jne
stc
daa
mov
push
push
push
adc
ficompl
outsl
ja
dec
dec
push
xchg
xchg
arpl
jp
xchg
stos
push
dec
mov
fs
inc
ja
cmpsb
xlat
cmpsb
outsl
push
xor
loop
sbb
lahf
fcompl
ja
jle
jb
pop
or
mov
pop
loope
xchg
mov
jns
xorl
jo
pushf
pop
and
xchg
in
outsb
sbb
nop
fldt
jnp
sbbb
pop
lahf
add
mov
out
subb
inc
mov
int3
hlt
fmuls
aas
fistl
push
dec
lock
dec
test
or
mov
pop
and
mov
call
ds
mov
add
xchg
dec
cmp
push
daa
nop
dec
sub
je
imul
out
jecxz
iret
xchg
or
int3
mov
sbb
ffree
lret
xor
movb
aaa
and
iret
test
sahf
ds
stc
xor
dec
insl
outsb
push
mov
add
neg
sub
imul
sub
mov
ret
test
mov
call
inc
gs
imul
into
subl
imul
inc
sub
jo
outsb
popf
mov
mov
out
js
pop
mov
in
xorl
cmp
and
outsl
sub
cmp
hlt
cltd
pop
mov
aad
test
ljmp
lcall
js
push
ror
xchg
pop
push
sahf
ror
loope
jmp
sbb
insl
xchg
jp
pushf
pop
xor
popa
lock
es
and
xchg
sub
test
and
jecxz
mov
lods
add
aam
sub
lahf
aam
sub
in
movsl
test
or
dec
jno
inc
pop
in
mov
aam
inc
imul
sbb
sub
mov
cmpsl
and
jb,pt
dec
sbb
in
int
xchg
std
xor
mov
jecxz
pop
mov
adc
imul
stos
xlat
ret
lret
adc
int
in
movntq
out
mov
movsb
movsl
mov
sub
repnz
dec
or
arpl
call
or
pop
or
fcmovne
mov
jge
dec
movsl
inc
cwtl
loop
sbb
push
enter
and
mov
mov
mov
insl
sub
imull
sbb
sub
pop
ja
cmp
fwait
loopne
xchg
imul
leave
shlb
decl
clc
mov
pop
sub
rorl
fcoml
fidivrl
fistps
inc
movsb
fcmovne
or
ds
sbb
dec
ja
out
cmpsb
mov
cmp
jge
pop
mov
xor
mov
inc
pop
or
adc
cmc
inc
dec
add
push
inc
stos
outsb
stc
int
xchg
or
add
or
mov
mov
sub
arpl
mov
or
or
stos
stos
mov
subl
ss
fbstp
mov
jo,pt
out
push
or
rcrl
test
je
or
or
mov
icebp
arpl
frstor
popa
ja
xor
cld
and
push
mov
inc
jle
xchg
bound
and
push
mov
mov
pop
jne
outsl
add
mov
mov
xor
xchg
dec
sub
iret
or
push
push
test
into
leave
cmp
pop
call
mov
shll
add
cmp
mov
scas
in
push
add
mov
push
jbe
clc
scas
rcrb
lret
stos
scas
add
adc
mov
dec
pop
push
roll
mov
scas
outsb
add
inc
or
xchg
popa
push
pusha
jne
jg
add
iret
cmp
lds
xor
adc
push
xor
sbb
push
cs
sbb
pushf
pop
jns
ds
pushf
lret
into
lret
add
mov
nop
hlt
pop
mov
ds
sub
xlat
pop
iret
stos
jns
mov
and
out
cld
repnz
in
add
std
int
sbb
adc
sahf
aam
ret
std
jp
pop
jmp
adcl
shll
adc
pop
mov
sbb
mov
inc
dec
mov
cmp
jns
sub
int3
jb
test
inc
shrl
leave
lret
push
ss
sti
call
push
lret
jmp
jmp
xchg
mov
jp
push
sarb
dec
mov
and
shlb
mov
lret
ret
or
sub
bound
bound
fs
fstps
inc
xchg
pop
sub
add
aas
insl
or
pop
jl
xchg
roll
mov
insl
pop
push
push
add
mov
adc
cs
mov
jb
fidivl
inc
xchg
cmp
xor
fwait
inc
and
pop
and
sbb
lret
mov
jmp
lods
jo
aas
sub
sbb
cmpsb
movsl
lods
sub
cmpsb
push
imul
mov
sbb
rolb
hlt
cmp
gs
into
pop
xchg
or
or
bound
mov
bound
loope
push
add
sbb
pop
popa
out
sbb
gs
test
repz
hlt
ljmp
jae
xchg
mov
addr16
outsl
adc
mov
in
mov
and
lods
in
enter
popa
pop
sub
lret
xchg
mov
jne
and
pop
stos
jecxz
dec
test
jnp,pn
movsl
rorl
xchg
adc
xor
iret
gs
pushf
pushf
sub
enter
jno
cmpsl
mov
jle
aad
movsb
pop
ds
rolb
push
dec
enter
jns
push
mov
push
divl
sbb
and
ds
jmp
pop
or
xchg
lret
js
and
mov
adc
mov
dec
cli
das
lcall
sbb
arpl
ljmp
imul
scas
push
inc
out
jnp
jmp
fmuls
loopne
sub
call
test
push
call
push
sub
xchg
aas
nop
insb
clc
inc
imul
das
mov
pop
xchg
add
data16
xor
cmp
arpl
jmp
sub
popa
push
mov
xchg
pop
dec
mov
nop
call
iret
mov
aaa
aaa
inc
push
aas
testb
mov
mov
je
adc
jp
roll
rol
fbstp
and
jns
bnd
push
je
add
stos
lds
inc
inc
mov
push
lahf
sub
add
mov
xchg
inc
dec
dec
adc
mov
shll
pop
xor
test
and
adc
jbe
xor
icebp
into
popa
ret
jecxz
bound
js,pt
hlt
inc
inc
rorl
rorb
in
cmp
cmp
inc
mov
push
add
and
les
push
pushf
cmp
sbb
pop
test
into
pop
cli
mov
dec
xchg
sub
ret
ja
dec
adc
xor
cmc
cmp
int
in
ja
dec
loopne
push
leave
cwtl
int3
iret
scas
daa
inc
iret
push
lcall
fldl2e
mov
scas
ret
icebp
mov
xchg
cmp
mov
jg
cmp
ss
and
in
aad
and
push
scas
popa
imul
cmpsb
push
xchg
sub
cmp
out
inc
cmp
arpl
inc
js
outsl
out
push
lcall
sti
sub
or
loope
aaa
jg
push
push
push
mov
fisubrs
push
hlt
repz
jbe
mov
out
es
mov
pop
jmp
mov
jg
push
jge
stos
hlt
inc
fisubs
lea
ffreep
test
mov
xor
jecxz
jge
add
cmp
nop
ret
sub
push
addr16
pop
dec
mov
adc
cmp
jns
xor
jne
rolb
mov
stc
pop
sub
out
xlat
pop
cmp
out
cmc
insb
cmp
daa
rorb
dec
push
jo
jl
loop
sbb
add
push
iret
pop
into
pop
adc
in
insb
das
shl
mov
mov
int
cmp
pop
cmp
maskmovq
negl
lds
insl
test
mov
sbb
fs
popf
les
mov
enter
cmp
shll
dec
mov
adc
in
jne
outsb
fiadds
leave
lahf
dec
mov
jbe
inc
repnz
inc
pop
cld
mov
xor
xlat
stc
dec
sub
test
adc
mov
mov
mov
lahf
outsl
stos
test
xchg
jg
mov
adc
jno
pop
mov
enter
das
xchg
test
sub
mov
cltd
jae
popf
fists
scas
xor
inc
or
aad
dec
push
outsl
daa
shll
dec
cs
icebp
mov
xor
movsb
xchg
test
sub
out
adc
adc
mov
cmp
shl
and
adc
jns
sub
cmpl
inc
mov
mov
mov
jmp
push
sub
inc
punpcklbw
arpl
pop
pusha
push
sub
adc
scas
cmp
jns
and
push
enter
subl
mov
scas
sub
das
dec
idivb
jmp
lock
fcmovne
daa
push
xor
lar
or
inc
dec
outsb
and
call
mov
std
pop
pop
dec
sbbb
jne
notb
jb
lret
mov
sti
xor
ja
push
arpl
stc
daa
and
fs
mov
lret
das
cmpsl
jae
dec
rolb
dec
inc
nop
sub
mov
pop
inc
cli
out
fsubs
stos
push
jne
push
fsubrp
push
ja
or
shlb
adc
lcall
mov
leave
es
call
cmp
shld
push
jmp
or
cwtl
popf
and
adc
daa
xchg
xorl
mov
incl
xchg
outsb
add
loop
sub
imul
ror
push
and
adc
jmp
inc
psrad
cltd
movsb
mov
cmpsb
mov
jecxz
fstps
sub
fildll
fpatan
dec
dec
mov
push
insb
popl
push
dec
pop
lods
mov
add
xor
inc
out
loope
das
or
fs
xor
insl
push
std
fstl
or
sub
fildl
popf
mov
jb
fs
or
test
mov
loop
arpl
xchg
adc
int
inc
int
add
arpl
jb
mov
cmp
sbb
in
pop
mov
add
ljmp
or
out
push
and
xchg
jnp
push
mov
fnstenv
inc
dec
lock
lock
mov
scas
xchg
nop
push
adcb
subl
leave
xlat
test
mov
mov
xchg
xchg
fisttps
fdivr
jnp
sbb
fdivrl
hlt
sbbb
xor
loope
add
mov
or
sub
mov
rcrb
lock
dec
shrb
mov
sbb
sbb
fs
int3
add
inc
ljmp
mov
xchg
rcrb
dec
pop
imul
imul
sbb
add
imul
pop
jg
out
inc
sub
out
jae
lahf
in
hlt
lcall
xor
jmp
inc
pop
out
ror
cmp
into
movsb
jle
inc
sbb
ja
and
xor
jns
ljmp
loopne
dec
xor
push
pop
aad
arpl
lea
xor
jb
incb
call
ss
or
je
loope
mov
out
imul
inc
sub
into
dec
idiv
xchg
movsl
xor
and
add
sbb
xchg
aam
lods
mov
mul
scas
dec
or
sub
fcompl
stos
mov
cmp
aaa
aad
mov
push
push
cmp
movsl
je
cltd
fiadds
mov
dec
jp
push
cltd
add
sub
sub
adc
aam
sti
xchg
mov
in
notl
or
shrb
lcall
scas
mov
push
loop
inc
ds
or
repz
ss
int
lcall
divl
adc
popa
adc
sti
mov
aam
ja
mov
pop
bound
out
test
adc
pop
adc
sti
inc
sub
addr16
cmp
add
push
fnstcw
sbb
inc
xor
in
pushf
dec
or
sbb
push
arpl
notb
pop
dec
lss
lahf
fisttpl
cltd
add
or
mov
mov
repz
loopne
into
mov
xor
aad
jecxz
add
push
out
mov
push
dec
xor
and
push
and
dec
in
xchg
adc
in
mov
ret
pop
jo
data16
ret
mov
cmp
ljmp
enter
mov
or
das
stos
xor
lret
idivb
or
and
fnstenv
mov
jno
mov
inc
and
dec
call
int
mov
mov
insl
pop
sub
sbb
lahf
test
stc
inc
mov
lret
sub
icebp
xlat
aas
lret
add
in
fcmovnb
hlt
loopne
fistps
or
xchg
repz
fnstenv
push
lret
add
clc
fstps
jns
push
movsl
in
fs
add
loopne
push
hlt
add
in
movsl
sub
sub
or
cld
inc
jnp
sti
adc
shl
repz
ss
in
or
add
pop
dec
popf
cmpsl
mov
dec
dec
pop
mov
mov
ret
scas
cmp
lods
outsl
shrl
xchg
stos
cmc
pushf
popl
sub
jnp
add
ljmp
mov
cld
jge
push
mov
jecxz
idivb
add
outsb
gs
cli
in
subb
cltd
xor
sbb
daa
mov
and
jge
inc
sbb
pop
push
pop
test
mov
push
mov
xchg
pop
push
and
jecxz
cmp
adc
sub
mov
ret
mov
insb
push
test
scas
stos
sarb
sbb
jecxz
flds
insl
or
repz
sub
push
and
inc
adc
mov
imulb
add
jo
test
or
sti
dec
xor
fucomip
cmp
mov
insb
loope
add
movsb
mov
out
push
push
nop
loope
or
add
out
test
hlt
int
lock
mov
mov
sbb
enter
or
dec
sbb
aam
in
xor
test
or
daa
stos
xor
cmp
dec
jbe
in
mov
and
repz
xchg
pop
mov
pusha
or
test
jle
dec
lcall
rorl
xchg
in
push
mul
repz
add
loopne
or
jae
inc
lret
mov
push
sbb
mov
dec
fildl
movsl
rolb
push
mov
fst
popf
add
shr
js
add
xchg
or
adc
ss
and
aam
and
call
aaa
outsl
add
mov
fistpl
pop
sub
ret
cli
push
sti
gs
jle
xlat
cld
cmpsl
sar
fcmove
xchg
xchg
ror
add
div
jl
movsl
cmpsb
sub
mov
inc
dec
enter
cmp
xchg
popa
test
and
mov
xchg
inc
dec
subb
xchg
sahf
mov
lods
pop
adc
fwait
ljmp
inc
les
ljmp
add
sub
mov
in
push
cmp
sub
push
insl
aaa
adc
cmc
pop
je
or
aaa
xchg
add
sub
or
loope
mov
xchg
test
cmp
test
mov
shl
mov
and
dec
jg
add
pop
into
pop
cmp
rorb
notl
icebp
out
mov
or
scas
stc
repnz
adc
cmp
add
aaa
cmp
test
test
mov
or
xor
data16
arpl
test
add
push
bound
cmp
ficoml
sti
lods
and
iret
rcr
ret
mov
push
cltd
enter
test
push
call
pusha
pop
xor
popf
or
ljmp
movsl
add
mov
idiv
js
cmc
push
movsl
or
or
push
adc
jo
jnp
insl
lea
add
ds
sub
push
int3
push
gs
jp
ds
stos
pop
je
adc
or
cmpl
sahf
sub
mov
mov
std
pop
sub
call
in
adc
inc
add
xlat
or
pop
mov
cli
rcrb
adc
pop
xlat
push
sahf
xchg
iret
ret
or
dec
pop
je
fcompl
stc
jmp
enter
mov
cmp
std
xor
repz
sahf
jg
dec
mov
aad
test
dec
cli
push
push
fildl
push
push
sahf
pop
ds
push
add
cmp
dec
fildll
loope
mov
push
dec
adc
dec
ds
aaa
add
and
in
cmpb
jge
xchg
subb
bound
je
xchg
mov
add
and
pop
cwtl
jns
mov
and
fisubrl
es
xchg
test
xor
cmp
push
mov
and
cwtl
notb
push
push
test
popa
arpl
dec
imul
cld
sbb
das
push
and
cmp
cmpsb
xor
jge
cs
sahf
xlat
clc
and
sahf
dec
cmp
mov
add
out
outsl
pop
mov
mov
xor
out
jmp
mov
jbe
lods
pop
icebp
mov
add
push
mov
xchg
fmull
fmuls
mov
jae
mov
int3
movsb
jb
mov
fwait
add
lock
cmpsb
mov
cmp
popf
inc
stos
addr16
loope
leave
imulb
add
jns
xor
inc
and
mov
aad
pop
test
repnz
cmpsb
pop
jg
arpl
aam
pop
imul
dec
in
xorb
jle
sti
dec
bnd
push
int3
xor
xlat
mov
add
xchg
push
ss
stc
push
mov
shl
fcomps
cld
push
jg
xor
push
or
cmp
xchg
jl
jmp
cmp
pop
test
push
in
pop
sub
xor
sbb
or
mov
sbb
cmp
jmp
shll
sti
adc
repnz
xor
test
lods
cmp
pop
xchg
sub
xorl
mov
int3
mov
bound
cmp
lahf
loope
repz
les
scas
push
xor
cld
jmp
fistps
mov
rolb
sub
pushf
lret
inc
inc
xor
inc
movl
stos
sub
inc
mov
xor
xor
mov
xchg
and
inc
pop
sahf
push
fstpt
adc
mov
jbe
or
mov
cli
sbb
ljmp
pop
popa
push
pop
mov
mov
cld
outsb
out
or
int3
call
lahf
inc
inc
cmp
mov
jo
cmpb
clc
mov
stos
dec
jmp
ss
sub
add
mov
pushl
outsb
pop
push
cmp
mov
inc
insl
inc
cmp
dec
and
out
lea
cmpsl
pop
jmp
sbb
pop
inc
sbb
loope
imul
or
cmp
xorb
mov
jns
out
addr16
mov
xchg
sbb
xchg
movsb
in
pop
scas
adc
in
fwait
sarb
jae
sub
xor
sarl
jae
insl
icebp
adc
js
fs
pushf
jp
cmp
cmp
dec
cmovne
dec
pop
dec
sbb
loopne
and
mov
mov
pushf
xchg
int
xchg
imull
out
push
add
mov
enter
xchg
mov
sbbl
sbb
loop
xacquire
cmp
js
add
inc
xchg
pushf
in
dec
jge
push
sti
or
mov
xchg
adc
aas
dec
out
dec
popa
enter
in
xor
out
dec
in
inc
into
mov
gs
mov
mov
out
xchg
out
sbb
sti
mov
jae
mov
add
jecxz
test
inc
out
aam
loop
hlt
idivl
mov
aam
mov
pop
pop
inc
fcmovnu
push
xchg
push
out
shll
sbb
add
mov
fwait
xchg
adc
int3
test
rcll
sub
in
xor
adc
scas
lds
test
popf
pop
dec
dec
xor
mov
jne,pt
push
mov
outsl
aas
adc
int3
add
lods
mov
inc
into
jbe
imul
cmp
faddl
add
test
js
call
gs
inc
je
es
mov
push
ss
push
popa
and
scas
sbb
mov
and
adc
nop
icebp
xor
mull
and
dec
sub
mov
mov
or
lea
lods
sarl
lahf
cli
pop
or
ja
mov
outsb
xor
mov
out
insb
add
movl
mov
dec
mov
inc
or
push
rclb
xchg
cmp
loope
aam
icebp
loope
pop
push
xchg
mov
test
insl
pop
or
mov
inc
adc
andb
and
mov
pop
into
call
xchg
or
mov
mov
mov
xchg
jae
scas
adc
lds
pop
imul
cmp
or
fs
adc
jb
push
sub
cmpsl
add
dec
xor
divb
mov
es
je
scas
dec
imul
sbb
push
hlt
jge
pop
jl
sub
cmp
and
clc
cmp
or
pop
xor
xchg
loope
ss
out
mov
pop
test
jns
stc
outsl
adc
dec
sub
cmpsl
sbb
add
mov
repnz
dec
out
sar
mov
jmp
push
mov
pop
push
ss
scas
pop
scas
xchg
mov
dec
pop
jp
jns
push
lock
dec
fisttps
cmp
mov
mov
mov
mov
mov
xor
roll
add
pop
pushf
and
stos
int
mov
movsl
out
cmp
dec
cmp
and
shll
ja
iret
lret
fs
sub
ja
jg
xor
mov
setle
push
jl
add
bound
out
lds
cmp
mov
insb
or
mov
scas
fimull
enter
or
nop
inc
cmp
push
sbb
in
and
pop
in
xor
sbb
xor
xor
mov
cwtl
and
leave
pushf
and
cmp
mov
lahf
or
std
mov
sub
insb
lret
out
movsl
orl
jmp
adc
inc
dec
hlt
jbe
andl
popa
jno
push
push
push
test
loopne
pop
scas
adc
pop
inc
dec
fcomp
xor
mov
lods
mov
stc
xchg
xor
jnp
mov
clc
jne
sub
sub
push
xorl
fdivs
jae
cli
mov
leave
insl
ss
pop
idivl
jo
repz
aam
sub
stos
jle
ret
sub
sbb
xchg
jge
aaa
xchg
push
shrb
jo
pop
rcl
push
divl
xor
adc
scas
jmp
dec
fstpt
jne
pop
cld
pop
jnp
fldl
xchg
dec
add
pushf
or
and
cwtl
jl
xor
idivb
cmp
fdivp
mov
test
xchg
mov
sub
insl
inc
add
out
es
mov
mov
es
ljmp
jle
push
xchg
pop
sbb
imull
jne
adc
sbb
fiadds
movsb
mov
in
loopne
jae
js
mov
or
cmpb
sbb
push
in
pop
push
lcall
andb
nop
push
cli
fimull
pusha
mov
push
xor
lcall
pushf
aad
cli
pop
push
pop
and
andl
jle
loop
dec
clc
sbb
cmp
leave
imul
pop
gs
xor
add
push
ret
pop
repz
lahf
mov
inc
into
and
insb
fldt
enter
mov
sbb
mov
jmp
cmp
repnz
test
jb
xchg
sbbb
popf
addr16
add
mov
jg
stos
dec
sbb
lea
icebp
scas
push
test
jp
rol
mov
out
or
cmpsl
cmp
and
insb
jmp
inc
test
pushf
fsubs
stos
mov
lds
dec
lret
cmpxchg
push
aad
xorb
ja
mov
cmpsl
daa
mov
mov
fisubrl
push
adcl
inc
push
ja
test
daa
pop
dec
icebp
dec
mov
sbb
mov
aad
inc
push
cmc
lods
pop
andb
les
das
sbb
popf
mov
cld
jno
fisttpll
inc
movsl
pop
jle
xchg
jmp
mov
movsb
mov
jle
fcmovne
pusha
cli
mov
mov
imulb
pop
pop
enter
mov
and
push
mov
int3
sahf
popa
mov
cmpsb
xor
das
cltd
mov
out
daa
ret
pop
mov
or
pop
jp
xor
dec
sbb
push
int
mov
pop
pop
sub
xchg
test
xchg
dec
push
push
addr16
sub
fwait
inc
popa
jecxz
das
xchg
inc
repz
push
lock
gs
cmpsb
lods
fisubrl
std
pop
subb
mov
cmp
xlat
jg
push
adc
ret
and
ret
xlat
cmpb
dec
jae
imul
sar
mov
jmp
cmpsl
sub
sbb
neg
sbb
ret
sub
outsb
pop
adc
cmpsl
lret
bound
cmp
adc
mov
jmp
out
mov
mov
int
rcl
add
adcl
inc
and
mull
rorb
test
mov
inc
and
pop
add
out
data16
cmp
stos
mov
add
test
xor
push
rep
jle
pop
adc
shll
sub
fs
in
and
in
aam
dec
inc
pushf
test
jnp
aas
scas
jl
jbe
icebp
mov
or
mov
and
out
bound
inc
rolb
push
mov
enter
rcr
adc
mov
mov
pushf
dec
add
push
xor
sub
and
je
xchg
movsb
xor
sbb
lods
cs
repz
inc
movsl
aad
mov
jno
dec
mov
push
fstl
sub
loope
outsl
bound
mov
cmp
or
ss
mov
sar
ss
ret
mov
shlb
mov
xor
call
testl
pop
loop
pusha
lcall
adc
fs
jnp
adc
push
sbb
lock
cwtl
or
add
pop
jns
xlat
dec
xor
mov
inc
adc
stc
inc
cmc
cltd
add
fdivrs
jb
xor
movsb
or
jb
pop
pushf
lcall
dec
cwtl
mov
pop
inc
data16
fdivs
mov
pop
jl
icebp
outsb
jge
lods
inc
dec
pop
int
scas
push
cmp
dec
jo
xchg
jle
push
rolb
call
mov
stc
mov
ret
mov
ljmp
inc
jbe
gs
dec
lds
jae
push
adc
jo
pop
sub
cmpsb
pop
dec
add
xor
fldenv
mov
outsl
cmp
jge
jp
loop
inc
imul
lods
imul
sbb
inc
mov
jmp
mov
iret
repnz
dec
jb
ja
loop
jmp
ss
or
sti
xor
jbe
sbbl
sarb
jbe
inc
mov
jno
mov
out
jno
mov
inc
ficoml
enter
mov
adc
dec
sbb
imul
cmpsl
or
pop
mov
mov
fldcw
add
sbb
into
lods
cmp
and
lods
lds
mov
in
mov
inc
andb
dec
push
lock
jg
pushf
or
sbb
cmpsl
push
fcmovu
hlt
andl
pop
mov
cmp
push
cli
das
xlat
dec
push
adc
pop
push
aas
addr16
lods
mov
movsb
mov
jmp
xchg
push
into
lcall
adc
push
pusha
into
nop
xor
mov
js
xor
jb
pop
aam
pop
inc
lods
je
push
cmp
pop
arpl
incb
loopne
dec
dec
repz
pop
movsl
fs
lahf
roll
fnstcw
adc
divl
push
dec
xchg
xor
push
sub
jbe
rcl
inc
xor
sarl
pop
lahf
stc
out
cmp
outsb
or
xorb
push
cmp
xchg
and
lret
or
mov
or
loope
xchg
cmpsl
or
pop
jbe
xchg
mov
daa
data16
push
cld
cmp
stos
cmc
and
mov
mov
jno
call
add
std
mov
ficoml
ret
sub
int3
push
nop
test
xor
dec
mov
ret
cmpsl
rcrb
jp
mov
stos
inc
inc
outsl
and
jno
dec
mov
pop
stos
aas
inc
icebp
nop
repz
dec
stos
push
test
cmp
inc
enter
sub
outsl
mov
add
or
gs
xor
mov
mov
fisubs
xchg
pop
es
es
push
dec
push
cmpb
push
sbbl
adc
jns
mov
xchg
push
andb
sub
dec
push
rcrb
aam
sub
lret
lock
xchg
mov
sahf
lock
sub
lcall
jle
popf
xchg
jns
push
clc
movl
aam
sbb
jns
pop
or
xlat
lcall
add
pusha
xlat
or
jle
and
cmp
fcoml
dec
add
popl
cld
or
push
inc
dec
push
ljmp
movsb
sub
pop
lods
mov
adc
xchg
insb
cwtl
pop
push
add
pop
mov
add
rolb
mov
test
mov
jo
mov
inc
test
lcall
sti
xchg
movl
cmp
icebp
repz
mov
lahf
push
cmp
add
insb
add
je
test
fnstsw
cltd
sub
and
ja
js
and
mov
jae
sbb
mov
push
xchg
and
inc
mov
and
pop
push
inc
movsb
out
cmp
xchg
mov
sbb
inc
fisubrl
push
pop
imul
js
std
fwait
mov
xchg
lods
ljmp
aas
ss
pop
or
mov
push
xor
int
mov
int
xchg
mov
imul
mov
mov
sti
dec
xchg
dec
jge
jb
outsb
notl
xchg
push
and
push
push
enter
jbe
aad
loope
jg
mov
xchg
mov
pop
jg
mov
mov
call
xor
je
jnp
jne
test
cmpsl
mov
xchg
add
push
cmpsl
sub
dec
popl
pop
push
mov
lret
in
fs
jp
cld
jae
fldcw
push
loop
sub
jne
add
int
sbb
xchg
fdivs
lret
mov
jecxz
sbb
push
xchg
stc
xchg
and
xlat
fcmovne
out
xlat
xchg
sub
out
mov
out
stos
ds
fsts
fdivl
jmp
jl
test
iret
pushf
lea
jne
add
out
into
cli
jmp
lret
lds
mov
mov
mov
dec
inc
lods
mov
mov
popl
outsl
cmp
pop
ja
scas
enter
cmpl
flds
dec
jne
hlt
aaa
out
adc
dec
inc
mov
sub
int3
fwait
out
inc
clc
inc
push
in
inc
and
and
and
push
adc
mov
mov
sub
int3
fistps
filds
mov
mov
and
mov
and
int3
xor
leave
dec
lcall
div
inc
sbb
mov
aas
arpl
and
push
fnstsw
or
adc
loop
jbe
adc
pop
ret
xchg
push
cwtl
or
mov
pop
fists
lea
cmpsl
negl
inc
xor
loope
out
adc
fistpl
push
pop
outsl
jb
aaa
out
es
lods
push
imul
jl
dec
xchg
arpl
fcompl
hlt
sbb
movntq
inc
in
stos
shrb
dec
inc
xlat
pop
xorb
push
dec
sbb
mov
xchg
xchg
dec
and
cmp
xchg
xor
jbe
ds
inc
mov
inc
lahf
jle
or
or
gs
test
mov
fsubr
scas
movsl
and
pop
movsb
mov
clc
fs
out
cli
jmp
scas
mov
lea
in
or
jns
aaa
nop
sahf
xchg
jge
lock
adc
cwtl
sub
sbb
sbb
or
dec
mov
aaa
lret
test
in
push
sbb
mov
cmp
test
or
insb
add
push
inc
test
mov
push
xchg
fwait
es
cld
rorb
add
push
call
inc
inc
sub
rcl
cmp
cli
adcb
mov
lds
jo
inc
push
adc
pop
jecxz
or
imul
leave
loopne
xor
mov
hlt
aam
pop
cs
pusha
add
adc
jecxz
fwait
adc
int3
insb
cmp
hlt
into
sbb
xor
scas
sahf
ret
fisttpl
pusha
push
aaa
addb
test
inc
jno
bound
leave
sbb
push
dec
inc
jbe
stc
and
xor
frstor
or
inc
in
int
mov
push
push
lods
in
cld
and
and
adc
pop
sub
jnp
mov
insb
aad
aas
lock
fdivs
pop
imul
sub
sub
sbb
sub
mov
inc
aaa
std
sbb
rorl
xor
xchg
lods
loope
fisttpl
in
push
inc
jne
dec
mov
test
outsl
sub
nop
addr16
stos
insb
mov
jl
jnp
push
sub
scas
fwait
aaa
fmuls
sub
lcall
sub
push
test
sub
incb
insb
and
mov
pop
adc
xor
lds
sbb
out
add
je
dec
mull
iret
dec
fs
int
mov
xchg
jmp
push
jl
hlt
jecxz
ss
call
adc
jno
push
repz
xchg
xlat
cmpsb
loop
cmp
dec
push
mov
test
das
jmp
xor
adc
rcrb
ljmp
sbb
mov
sbb
ret
ret
and
leave
ljmp
lcall
cltd
bound
movsl
inc
data16
in
mov
jne
mov
loope
shrb
leave
imull
into
imul
pusha
xor
xor
adc
nop
xchg
stc
jo
xor
insb
push
fsubr
mov
adc
shl
lahf
insb
xchg
dec
xor
dec
mov
test
loopne
insb
or
or
add
or
adc
ss
pop
mov
push
fld
fyl2xp1
in
and
lahf
sub
lds
push
ja
int
cs
call
test
int
ficomps
mov
sti
mov
sbbb
mov
dec
push
or
ds
dec
pop
cmp
jne
ss
xchg
push
mov
mov
movsb
mov
lds
adc
or
jp
icebp
mov
lods
sbb
outsb
divb
mov
test
rcrb
std
test
je
xor
add
pusha
adc
sbb
dec
or
sahf
push
out
gs
ret
sub
push
imul
inc
loop
inc
jno
popf
inc
jmp
das
shrb
adc
cmc
mov
in
in
push
loope
mov
jmp
shrl
and
mov
push
imul
popa
ja
sti
sub
out
or
xor
jne
ljmp
jecxz
mov
mov
in
pop
inc
into
add
sarl
pop
dec
dec
push
idivl
push
jecxz
lcall
iret
mov
outsb
inc
push
mov
push
data16
adc
sarb
sbb
mov
mov
or
in
stos
in
popa
testl
xchg
push
cmp
mov
mov
adc
cmp
std
jle
int3
jg
ss
dec
out
clc
mov
dec
jg
mov
smsw
mov
in
add
je
pop
and
dec
inc
xchg
cmpsl
cld
aas
dec
data16
jo
iret
fistl
loope
xchg
cmp
iret
cs
mov
lods
sti
inc
adc
scas
sbbl
xor
jp
enter
adc
cmp
xchg
pop
insb
mov
push
fldt
cmpsb
negb
adcl
mov
pop
sahf
cmp
cmp
std
into
xor
pop
les
jle
ds
repz
inc
test
push
pop
fucom
sub
push
mov
cmp
sahf
cmpb
ret
inc
push
int3
aad
cmp
jno
inc
jmp
push
mov
or
pushf
sub
pop
add
pusha
jns
and
sub
dec
xchg
hlt
xchg
mov
insb
sti
shll
push
ds
jae
loope
push
pop
add
fidivrs
mov
mov
sbb
arpl
xor
add
into
lds
cmp
cli
sub
stc
dec
mov
inc
stos
push
push
enter
pop
mov
lret
inc
push
and
push
jbe
shl
stc
inc
lcall
inc
push
or
aad
mov
loop
jno
pop
repnz
loopne
loop
mov
push
jnp
stos
cli
mov
pusha
lods
cli
js
or
jo
mov
sub
aam
xor
adc
cltd
popa
jae
pop
jmp
jo
jnp
outsb
adc
sbb
fistpl
push
and
mov
mov
mov
push
cmp
shrl
xor
icebp
xor
aas
mov
cmp
mov
mov
sub
push
xor
mov
cli
int
and
push
jno
mov
xchg
add
stos
adc
adc
adc
cmp
xlat
out
lret
insb
sub
es
mov
xor
outsl
gs
jnp
cmp
pop
in
mov
or
cmc
mov
mov
mov
es
mov
aam
sbb
cmpsl
adc
adc
and
jmp
mov
enter
pop
pop
test
fidivrs
or
lret
adc
xor
dec
loop
inc
fwait
jo
mov
jg
fisttps
push
mov
sti
rcl
fnstenv
or
mov
aaa
or
data16
inc
inc
mov
je
dec
addr16
ss
pop
cmp
mov
mov
xor
jno
icebp
mov
sbb
rcl
push
cli
lods
and
lcall
sbb
and
inc
ss
cwtl
pusha
mov
loopne
add
push
jne
lea
jae
stc
pop
pop
imul
nop
out
push
mov
imul
jno
lret
push
push
dec
shll
xchg
cmp
in
or
cmp
and
or
sarb
pop
sub
mov
call
dec
jg
and
cmp
add
dec
imul
jecxz
inc
dec
test
sub
push
arpl
add
fldl2e
cltd
cmp
jns
cmp
sub
push
dec
cs
add
jns
call
leave
dec
pop
hlt
subl
fwait
aam
jb
pop
pop
mov
bound
insl
push
dec
out
test
outsl
jno
mov
outsb
testl
ret
xor
mov
sbb
inc
sti
inc
jecxz
jle
test
sub
mov
pop
fistps
mov
cmp
mov
sub
das
cmpsb
lods
pop
in
xchg
pop
sbb
movb
push
xor
cltd
xchg
dec
jbe
xor
ja
mov
jns
sahf
fisubs
add
inc
sub
fnstsw
add
cmp
xor
mov
jg
mov
xchg
outsb
jnp
int3
mov
mov
push
scas
sbb
xor
xchg
cmp
jne
jo
or
pop
cmc
ljmp
pop
xchg
jge
mov
fcoml
test
push
cli
sbb
std
fldenv
movsl
insl
js
xor
push
sbb
adc
loopne
lds
ja
push
mov
jge
add
bound
adc
push
frstor
lret
int
fnsave
loope
push
fidivl
cwtl
ret
fnstenv
in
imul
mov
dec
lret
aad
and
shl
addr16
sbb
je
push
fisubs
repnz
mov
or
insl
pop
stos
push
outsb
cmp
cwtl
inc
push
dec
add
or
mov
cmp
push
dec
les
and
daa
jp
mov
and
xchg
imul
mov
fcoml
inc
or
fwait
sbbl
mov
imul
mov
cmp
mov
gs
xor
add
xor
out
adc
or
jae
jns
jae
ja
aad
es
loopne
loope
imul
cmpsb
fcmovu
jne
pop
scas
repz
push
sbb
lcall
in
sbb
nop
sti
aam
mov
out
out
out
pop
insb
daa
loope
sub
or
and
xchg
mov
push
out
or
push
outsl
pop
ds
sbb
or
push
sub
leave
xlat
or
xchg
sarb
nop
jg
xchg
xchg
aam
addr16
inc
push
in
cmp
mov
and
mov
int
jmp
aas
push
lods
mov
lret
ja
cmp
jmp
jl
enter
sbb
add
cs
cmp
adc
jne
sbb
mov
jno
rcll
push
xlat
fs
jns
dec
stos
lahf
xchg
lods
push
xor
dec
cmp
pop
out
cmc
adc
das
inc
sahf
test
popf
fwait
cmc
loope
push
push
lret
cmp
jb
and
ud1
loope
jns
cli
lods
inc
shrb
cld
cmp
jo
sub
dec
pop
ret
pushf
pop
ss
hlt
cmpl
jnp
loope
in
mov
ja
mov
fildl
cltd
cli
rcl
xor
push
dec
xor
sbb
push
cld
in
adc
and
bound
dec
lds
in
imul
movsl
stos
mov
add
dec
add
in
lret
clc
mov
mov
movsb
mov
popf
jne
iret
scas
das
lock
jl
jb
mov
inc
adc
jmp
ret
int3
mov
movsb
sbb
outsb
mov
jbe
push
mov
lods
add
popf
insl
add
mov
cwtl
dec
cmp
out
fisttpll
divl
cwtl
xchg
lods
stos
add
and
mov
lods
imul
in
mov
ja
push
je
pop
add
adc
cwtl
scas
push
nop
scas
imulb
add
add
mov
shll
out
insb
dec
cmp
push
in
jmp
sbb
mov
sti
jecxz
cmpsb
add
arpl
xchg
sub
lret
cmp
cwtl
aas
pushf
lahf
add
rcl
pop
mov
jns
roll
repnz
xlat
pop
aad
xor
pop
out
enter
imul
mov
bound
mov
in
pushf
hlt
in
fs
cmpsl
fwait
pop
jnp,pt
sahf
cmp
inc
ss
sbb
cs
xor
je
jae
jnp
insb
pop
aas
lea
add
and
mov
sub
sub
enter
lods
frstor
lahf
adc
and
cmpl
cmpsb
xchg
jp
aas
iret
cltd
inc
dec
mov
jecxz
adc
shlb
andl
fistpll
pop
les
stos
aad
and
inc
pusha
in
mul
data16
mov
xor
xor
ud2
andb
jg
fdivs
into
fildl
xor
jnp
jnp
cld
inc
scas
repnz
jns
xchg
push
push
add
insb
dec
jo
setnp
push
sbb
imul
xor
aaa
mov
xchg
fsubrs
fnstenv
shll
outsb
shlb
mov
xchg
or
data16
test
xchg
dec
stos
dec
insl
mov
addr16
inc
inc
dec
into
es
fcmovnb
mov
imul
cmc
icebp
xor
addr16
mov
and
pop
mov
loop
push
test
jmp
xchg
xlat
jae
out
xchg
loopne
xchg
xor
mov
cs
nop
ss
or
fsubp
add
aaa
mov
icebp
mov
mov
or
sub
mov
xchg
cltd
ljmp
or
subl
adc
out
data16
data16
lea
jns
push
sbb
out
jecxz
fwait
clc
xchg
push
dec
add
lods
jg
pushf
adc
ds
or
lret
jae
pop
or
mov
imul
xchg
cltd
add
mov
out
fwait
enter
and
xor
stc
sbb
movsl
movsl
adc
andb
sbb
sub
push
das
dec
xchg
sbb
inc
xchg
xor
aaa
lods
daa
lods
and
sbb
hlt
insb
sahf
dec
sbb
popa
mov
shlb
and
adc
out
xor
xor
add
add
add
nop
stos
shll
jns
sub
add
sbb
mov
sub
adc
mov
jbe
call
mov
insl
and
ror
mov
or
aas
mov
cmp
insl
or
jge
out
jp
das
push
out
bound
jae
loope
sbb
xchg
push
pop
lahf
dec
aam
push
insb
pusha
pop
cmpsl
insb
ss
das
jae
repz
out
adc
test
cmp
mov
sub
inc
lahf
popf
and
mov
mov
jp
xchg
out
arpl
jg
jo
insl
loopne
and
mov
je
inc
jne
add
xchg
out
rorl
mov
test
add
adc
movsl
lret
cmp
jp
ljmp
mov
les
in
dec
shll
jno
jmp
mov
ficoml
push
jp
les
aad
leave
lods
mov
xor
pop
pop
mov
mov
data16
xchg
lock
mov
stos
movsl
cwtl
pop
bswap
xor
fisubs
mov
or
shl
ret
push
in
adc
adc
xor
movsb
push
pop
jl
dec
adc
push
stc
stos
pop
loope
je
es
dec
sahf
aam
stc
dec
pop
aad
pop
enter
popa
push
mov
xchg
ja
movsl
cmp
repnz
mov
sub
inc
sbb
or
inc
xchg
inc
lahf
inc
cmp
pop
scas
mov
movsl
out
mov
mov
test
jns
or
stos
mov
out
mov
cmp
add
ficompl
adc
les
xor
cmp
inc
mov
dec
cwtl
inc
dec
xlat
and
and
pop
dec
leave
in
add
sbb
sub
or
and
mov
lret
dec
cmp
mov
out
in
mov
inc
and
sub
fdivl
enter
mov
xchg
ljmp
cs
jnp
add
xchg
int3
shrb
dec
test
pop
push
or
xor
roll
ret
sbb
dec
loope
mov
xchg
xchg
aad
ds
fdivl
push
aas
sbb
popa
adc
xor
jnp
dec
subl
push
xchg
lds
dec
fbld
divb
mov
aaa
xchg
xchg
push
sbb
gs
mov
ja
dec
jle
mov
sti
push
xchg
sahf
pop
push
or
ja
mov
leave
pusha
jmp
pop
testl
hlt
xor
jnp
jl
sarl
sub
rcrl
pop
or
xchg
push
rorb
push
ret
loopne
push
in
xchg
loopne
cld
mov
in
xchg
pushf
add
pop
inc
and
subb
push
inc
sub
push
ljmp
pop
movsl
enter
xor
xorb
mov
in
push
cmpsb
fdivrp
add
ror
test
or
out
xchg
mov
lret
lret
fs
jae
xlat
mov
or
cmpsl
sar
sub
es
movsl
mov
jge
je
mov
in
fidivs
shl
loop
leave
jnp
insb
jge
jl
nopl
shrb
push
xchg
stc
subl
sub
sub
mov
shrl
in
fnstcw
jg
and
and
and
shll
fisttpll
add
xchg
sub
insb
xchg
rol
orb
insb
jb
and
jle
and
rcrb
test
popa
or
gs
in
sti
inc
jmp
rclb
cwtl
dec
add
jo
shrl
test
sbb
loop
xor
mov
inc
loope
pop
mov
pop
add
rorl
in
rol
fmull
aaa
xchg
sarl
inc
cwtl
test
pop
mov
dec
movsb
call
cmp
dec
add
popa
adc
jnp
in
stos
sbb
cwtl
dec
std
jmp
jns
repnz
std
negb
lahf
sbb
cmp
mov
cmpsl
std
sbb
xchg
jp
pushf
jle
xchg
cs
enter
cmpsl
mov
dec
pusha
scas
cmp
mov
cmc
call
dec
ret
adc
xchg
xor
fdivrl
cli
sti
cmpsl
mov
xchg
lea
or
and
pop
cltd
imul
add
cmp
loope
in
mov
fdivrp
aas
pop
xor
pop
hlt
jno
pop
inc
sbb
js
xchg
xor
imul
stc
pop
ret
add
jb
jae
and
adcl
cwtl
popa
aas
xor
inc
int
mov
dec
push
fwait
and
les
adc
not
push
push
pushf
lahf
mov
scas
adc
sub
aas
sbb
xlat
pop
mov
daa
mov
mov
push
adc
fisttps
mov
add
push
js
iret
push
xor
pop
mov
fisubs
mov
xchg
xor
sub
sahf
mov
pop
cli
scas
pop
add
rep
add
adc
push
add
inc
pop
or
sub
mov
inc
dec
or
jns
daa
test
aam
xchg
jl
scas
push
insl
dec
outsl
mov
inc
arpl
push
testl
je
outsb
mov
std
ficoml
rcr
push
jle
fnsave
mov
and
jle
jb
dec
popf
mov
loop
and
jg
jns
mov
dec
mull
jnp
pop
pop
sub
sahf
les
mov
lcall
sbbb
pushf
aad
jl
int3
cmpb
ficoms
popaw
mov
dec
rcpps
decl
rorb
mov
xchg
push
scas
arpl
lret
rcrb
sbb
sub
les
push
push
add
int
sbbb
push
xlat
inc
jecxz
mov
cli
push
lods
ss
mov
inc
dec
inc
lcall
dec
mov
cltd
pop
cmp
fsubrs
push
dec
shlb
sbbl
ds
xorl
daa
and
mov
push
cmp
jl
into
mov
fbstp
jbe
ds
push
std
or
mov
or
dec
repz
push
pop
sbb
mov
test
push
std
loop
out
stos
xchg
sub
pop
cltd
sub
pusha
lea
add
sbb
mov
lods
xchg
and
mov
and
mov
insb
lret
stos
and
and
mov
int
fisttpll
loopne
int3
jno
insl
cs
pop
push
movsb
repnz
inc
test
jmp
adc
and
stos
mov
adc
hlt
fdivr
cmp
dec
out
push
inc
test
orb
pop
jae
mov
sbb
enter
enter
leave
scas
add
pop
sbbb
addr16
call
or
adc
imul
imul
mov
pushf
in
test
and
mov
sahf
cmp
jbe
sub
jmp
and
xchg
mov
jp
icebp
xchg
lds
mov
mov
aaa
leave
inc
add
push
xchg
aas
sbb
rcr
add
pop
pop
push
sbbl
scas
cmp
cld
jp
cmp
jl
dec
fucomi
inc
xor
or
sub
sbb
jp
mov
and
in
fstpl
mwaitx
jo
daa
std
pop
cmc
xlat
adc
cwtl
stos
aas
mov
push
pop
lock
dec
push
lret
mov
shll
cli
enter
and
stc
adc
dec
lods
push
pop
or
xchg
repnz
ss
stc
iret
lods
push
push
fstpt
or
pusha
ret
and
test
hlt
mov
inc
sbb
sbb
pop
inc
pop
lods
mov
gs
inc
nop
xor
xor
sub
mov
stos
mov
xor
lret
cmp
push
adc
mov
and
pop
addr16
mov
xor
cmp
lret
adcb
mov
pop
int3
and
sbb
cmp
das
add
inc
in
jmp
jno
scas
cmovs
push
insb
repz
mov
sahf
popf
imul
test
mov
jae
sahf
js
je
std
mov
dec
inc
xchg
adc
dec
shrl
add
aam
pop
push
and
or
test
adc
outsl
int3
jne
movsl
mov
fwait
ljmp
mov
iret
dec
xchg
cmp
jmp
jge
std
into
int3
add
cmp
ja
and
xor
fisttpll
inc
testb
bound
mov
jge
addr16
je
and
pop
inc
push
sub
sbb
cmp
mov
xchg
mov
test
cmp
and
xchg
or
addr16
push
sub
movsb
popa
imul
xchg
sbb
mov
xchg
ljmp
stos
outsb
scas
dec
shlb
dec
lock
imul
lock
adc
out
pushf
repz
mov
sti
xchg
inc
cmp
cmp
sub
sub
jecxz
out
sbb
mov
std
and
inc
or
lcall
repnz
mov
stc
adc
push
mov
filds
scas
out
pushf
lds
mov
ret
mov
jl
movsb
iret
fdivl
jmp
mov
out
add
pop
adc
movsl
or
dec
mov
and
enter
fisubrl
cmp
shlb
loopne
pop
push
les
out
clc
test
ja
xchg
cmp
and
cld
repz
ljmp
aaa
test
inc
int3
or
data16
scas
movsb
pop
jbe
sub
in
bound
mov
sti
mov
dec
hlt
adc
cmp
addl
xchg
xor
mov
addl
test
sub
cld
int
nop
sub
jne
dec
je
and
cmp
xor
cltd
jb
lds
xchg
outsl
push
fmuls
jb
sti
cmp
ja
pop
mov
or
xor
icebp
jl
adc
jne
andb
fnsave
mov
int
scas
jns
add
xor
dec
xchg
je
add
pop
cmp
dec
inc
xor
arpl
arpl
ja
push
outsl
xchg
lcall
adc
jns
mov
mov
cwtl
push
jo
mov
adc
ss
cmp
in
xor
std
out
mov
into
dec
ss
inc
adc
sbb
inc
sub
cmp
shr
es
loop
mov
push
dec
inc
nop
iret
jmp
inc
jbe
daa
cmp
jp
mov
pop
push
test
jo
jmp
jnp
push
pop
and
xlat
xor
ja
push
dec
popf
mov
std
iretw
lods
pop
lock
mov
mov
jp
or
push
lea
or
cs
lcall
adc
or
addr16
push
xchg
dec
icebp
pop
imul
cmp
dec
aad
aaa
cmpsl
lods
ret
out
cmp
push
add
mov
jl
jmp
in
fwait
sbb
push
rcl
dec
gs
dec
cmp
xorl
test
push
pop
icebp
enter
aas
lods
add
add
add
xchg
ret
arpl
sub
out
mov
xchg
pusha
push
daa
es
fcompl
push
pop
mov
int
xchg
xor
lods
push
dec
mov
or
je
xchg
cli
push
dec
stos
adc
incb
and
das
mov
pop
lret
popf
xor
test
repz
xorb
les
mov
pop
push
sbb
hlt
aad
sub
icebp
mov
out
shlb
sub
mov
xlat
das
fisttpl
notb
jae
aad
test
xchg
rclb
lds
icebp
mov
inc
cmp
sbb
push
mov
or
inc
inc
rorb
pop
sbb
shll
iret
xchg
imulb
inc
sub
adc
popf
stos
cmp
push
fsubr
xchg
out
icebp
push
adc
mov
divb
mov
in
adc
push
and
hlt
push
enter
clc
mov
out
sbb
fisubl
int
ret
or
subl
push
and
icebp
stos
pop
jno
xor
xor
insl
iret
jb
pop
shl
jg
add
cs
popf
add
cld
test
pop
xor
add
shl
dec
or
adc
arpl
insl
mov
lock
xor
xchg
ljmp
mov
mov
leave
cltd
dec
imul
pop
mov
mov
and
jo
push
aas
imul
dec
and
xchg
mov
xchg
pop
stos
xchg
xor
xor
jnp
dec
or
inc
jbe
stos
int
cltd
pop
and
test
mov
imulb
mov
sbb
pop
mov
add
jecxz
xor
int
sub
mov
test
xlat
aaa
in
add
imul
iret
cmp
xor
adc
mov
and
lret
lcall
add
cmp
into
inc
das
dec
mov
inc
push
push
mov
stos
mov
sbb
mov
inc
sub
push
mov
dec
scas
outsb
ficompl
pop
pop
cld
sahf
adc
pop
mov
jmp
mov
adc
xchg
stc
loop
cmpsl
cmp
and
add
adc
leave
jmp
add
fst
rcl
push
sbb
xor
jne
outsl
aad
lcall
cmp
or
test
rorl
mov
and
lahf
sbb
in
jno
addr16
aas
lods
sub
xor
xchg
lcall
lods
jno
dec
lea
sbb
mov
cli
jae
pop
cmc
push
or
inc
jnp
aam
fwait
add
rcr
fiaddl
icebp
add
inc
adc
add
jmp
call
jl
addr16
scas
int
add
push
cmp
push
cwtl
in
cmp
mov
adc
outsb
andl
jge
pop
leave
lea
jmp
loope
xchg
adc
std
mov
sbb
inc
jb
push
and
push
test
jecxz
mov
test
dec
mov
loopne
sbb
inc
xchg
repnz
cmc
sbb
fisubl
addr16
enter
idiv
sbb
inc
pop
scas
fnstenv
imul
inc
arpl
xchg
dec
cmp
test
int3
mov
cli
daa
int3
add
lret
sub
arpl
or
aam
add
in
ret
xchg
add
cmp
loop
add
pop
xchg
add
fcmovu
fnstsw
mov
push
mov
jle
sbb
xor
jg
roll
divl
testl
lds
data16
xlat
and
mov
in
push
call
rorb
push
rol
add
push
cmp
and
mov
pop
cs
shr
mov
stos
sub
mov
and
fyl2xp1
sbb
sbb
stos
or
insl
cmpsb
dec
and
hlt
loopne
cs
jge
clc
pop
idivl
fnstenv
out
orl
inc
pop
outsl
sub
xchg
cmp
lret
sub
add
cld
stos
xor
pop
cs
adc
shlb
fistps
push
or
lock
pop
xchg
and
repnz
jae
stos
sub
pop
push
sbb
lret
pop
dec
sub
enter
sub
xor
idivb
cltd
mov
jnp
mov
jg
mov
fstp
inc
pop
jecxz
pusha
cmpsl
jp
or
pop
das
push
sub
jle
rcl
add
xchg
inc
push
cmp
sbb
lret
and
xorl
sbb
pop
scas
fldl
jge
dec
sti
cmpsb
aad
repnz
mov
mov
clc
inc
and
imul
mov
mov
stos
push
mov
iret
mov
cmp
sbb
jp
and
aam
pusha
pop
ds
cwtl
movsb
iret
lahf
adc
out
fsubr
fsubl
aaa
pop
mov
add
adc
mov
and
test
notb
inc
in
pop
in
in
cmp
es
repz
xchg
dec
mov
jnp
jp
pusha
add
dec
fists
pop
sub
inc
xchg
sbb
pop
or
pusha
arpl
stos
int3
scas
lods
outsb
mov
xchg
and
jno
xchg
arpl
push
add
cwtl
andl
scas
pop
push
mov
add
pop
std
movsb
add
lahf
in
loopne
add
shll
daa
or
jg
out
mov
fisttpl
mov
dec
aas
sbb
push
xchg
lret
mov
loopne
dec
sub
fs
mov
adcl
loop
lods
mov
add
int3
lods
sbb
hlt
inc
jnp
popa
lcall
xchg
icebp
int3
lock
xchg
mov
adc
sbb
jno
repnz
add
dec
sub
mov
sub
rcl
inc
cmp
mov
sbb
push
and
pusha
rcrb
lahf
mov
sub
cli
loop
into
movsb
push
push
mov
dec
cld
xor
out
adc
jnp
mov
cmp
std
pushf
fdivrs
call
das
mov
shlb
lds
pusha
flds
xchg
mov
imul
fld
hlt
hlt
xor
mov
cmpsb
aam
mov
test
les
pop
inc
incb
imul
mov
add
mov
mov
std
jmp
and
out
push
scas
add
dec
out
inc
mov
aas
adc
stos
leave
or
and
les
xchg
cmpsb
xor
hlt
mov
inc
jge
paddb
fistpll
daa
sbb
enter
faddl
or
xor
inc
iret
dec
es
xchg
and
sub
lods
rcr
xchg
push
jle
es
lock
inc
cmpsb
mov
jl
dec
pop
xchg
lds
fwait
and
xchg
pop
push
lock
icebp
rorl
adc
mov
mov
ja
loopne
aam
arpl
mov
inc
dec
lcall
xor
jnp
jns
adc
imul
add
pop
xchg
add
and
add
mov
addr16
shlb
es
mov
xor
test
scas
mov
insl
ljmp
mov
xchg
push
cmc
xor
stos
test
jmp
aad
push
push
mov
jg
sbb
out
push
xchg
lods
mov
out
in
outsl
add
cmp
adc
mov
sbb
imul
sbbb
mov
mov
mov
fsubs
cmpsb
les
stos
jl
iret
lea
scas
sbb
mov
movsb
add
out
or
sub
mov
xchg
xlat
ret
loop
adc
add
or
or
in
aaa
or
mov
vpunpcklwd
imul
sub
push
fidivrl
rolb
xor
sbb
mov
add
mov
lods
inc
sahf
inc
push
or
popl
imul
out
pop
mov
pop
xchg
cmp
push
frstor
fs
push
andb
es
aad
test
stos
mov
jno
inc
lods
xchg
cwtl
mov
push
adc
add
fucomp
test
cwtl
movsb
or
in
add
repnz
cmp
push
das
adc
adc
pop
inc
adc
cmpl
and
test
dec
mov
jnp
jnp
pop
and
jbe
add
fldenv
jle
pusha
shr
inc
cmp
jo
das
mov
jge
mov
ror
jae
sbb
and
jmp
mov
cmpsl
movl
pop
or
jecxz
mov
movsb
icebp
aas
sarb
fdivrl
addr16
mov
daa
inc
xor
inc
inc
xchg
js
sub
sbb
adc
add
jnp
ja
or
int
mov
push
dec
shll
cmp
pop
xchg
add
sbb
pop
hlt
stos
cli
sub
and
enter
dec
xor
cld
push
pushf
dec
lret
push
sbb
mov
cwtl
std
pop
jae
roll
mov
cs
ficoml
rcll
mov
adc
cmp
nop
icebp
leave
mov
xchg
jno
imul
jae
xor
and
mov
insl
jge
sahf
xchg
pusha
xchg
popf
inc
mov
inc
loope
imul
and
inc
mov
ja
inc
adc
test
add
sub
mov
mov
mov
stos
es
add
sub
pop
je
jg
pop
lds
jmp
js
das
sti
and
fcoms
ds
jecxz
pop
add
mov
sarl
shl
ret
or
icebp
cmpsl
xchg
lea
jmp
add
imul
iret
sub
pop
pushf
ja
scas
jmp
mov
sub
push
fmuls
mov
cmpl
popa
loop
in
je
add
xorb
jmp
or
mov
outsb
adcb
xchg
dec
gs
push
shlb
mov
test
push
insb
mov
into
ss
pop
xchg
test
jp
xchg
jae
and
mov
pop
lock
out
lret
jl
pop
xorl
mov
mov
insb
in
add
hlt
jg
outsb
inc
push
dec
cmp
mov
or
insb
push
or
cmp
loop
add
test
out
imul
out
int3
xchg
adc
cli
ss
leave
call
lahf
mov
insb
mov
aas
lcall
je
xor
adc
ljmp
je
pop
add
faddl
push
xchg
pop
cmpsb
pop
inc
sub
popfw
into
ds
inc
xchg
or
daa
addr16
mov
jae
mov
lock
sub
xor
jl
aam
dec
insb
pop
jne
xchg
in
lret
fs
or
daa
daa
stos
dec
mov
aam
push
inc
mov
in
sbb
cs
in
cmp
dec
aad
jae
ret
movsb
aad
xlat
imulb
inc
shlb
lret
and
jle
aam
das
sub
adc
adc
outsl
mov
inc
out
cmc
cmp
leave
lods
jbe
mov
in
jb
inc
jecxz
cmp
inc
xor
iret
sarl
pop
fsubr
ror
jbe
mov
cltd
pusha
pop
add
inc
jl
je
incl
ljmp
rcr
and
inc
mov
fiadds
aam
dec
sarl
add
xchg
inc
daa
jle
sbb
movsb
mov
push
mov
data16
jp
testb
xchg
mov
aas
xchg
popa
inc
sbb
in
sbb
imul
jl
ss
adc
mov
lock
add
and
inc
push
dec
dec
sbb
inc
pop
inc
xor
pop
iret
adc
xchg
aam
out
mov
fidivrl
cli
loopne
fistps
jp
jne
aad
notl
pushf
mov
pop
repz
imul
les
std
inc
cmp
or
add
jno
xor
nop
mov
outsl
push
push
pop
jae
pop
dec
pop
jmp
das
mov
out
fwait
sti
outsl
or
jns
pop
add
int3
or
popf
iret
sub
pop
test
int3
gs
stc
push
jg
movsb
inc
sub
cltd
add
mov
xor
leave
repnz
or
mov
cmp
leave
stc
mov
aas
pop
pop
pop
fcmovnb
ret
fnsave
mov
loope
push
hlt
jp
ret
or
cmpsb
into
mov
pop
ficomps
dec
inc
iret
push
fmuls
ficompl
rcl
roll
fstp
fstl
and
loope
fsts
sahf
pop
xor
in
in
aaa
mov
cmp
sbb
jno
add
xlat
or
imul
enter
adc
lret
stos
cmp
scas
cmpsl
movsl
shlb
mov
jmp
lea
out
out
cld
adc
dec
cmpsl
hlt
mov
pop
inc
les
dec
jns
push
mov
jmp
inc
sbb
add
cs
sub
xchg
lcall
or
sub
or
mov
xchg
mov
push
popf
mov
xchg
imul
lcall
cmp
test
into
add
pusha
push
add
xor
jbe
rcrl
outsb
cltd
in
out
push
or
mov
lea
ja
xorl
lock
ds
pop
lds
aam
fxch
pop
clc
shrb
movsb
je
out
repz
pop
push
cltd
jecxz
sbb
faddl
lahf
or
cmp
jle
cmp
pop
xor
jb
mov
dec
push
sub
jb
inc
sub
mov
lds
sti
into
mov
test
movsb
iret
mov
aas
lret
xchg
dec
mov
leave
ljmp
xlat
mov
pop
or
pop
movsb
inc
cmc
shll
repnz
sub
out
cmpsb
xchg
cmovbe
xchg
sahf
dec
mov
sarl
sub
in
leave
jnp
jge
inc
mov
rorb
aam
je
or
fbld
movsl
jl
sub
lea
pop
lcall
jnp
jg
test
aam
ljmp
dec
sbb
jmp
dec
cld
fldcw
or
and
lahf
mov
mov
js
aaa
sbb
into
or
mov
mov
das
fisubrl
push
mov
lcall
pop
adc
imul
decb
mov
lods
insb
fidivl
call
fsubs
sarb
inc
repz
daa
lods
int3
push
add
pop
mov
cs
mov
mov
adc
pop
outsl
cmp
sahf
out
lcall
mov
push
dec
aam
push
add
arpl
inc
pop
xor
test
sti
jecxz
mov
push
mov
ja
push
pop
mov
push
test
cmp
shr
xchg
jg
fdivrs
test
addr16
test
hlt
rclb
and
mov
push
jnp
icebp
push
mov
mov
fwait
loopne
mov
scas
in
out
cmp
pop
mov
push
mov
jmp
cmp
leave
mov
and
cmpb
dec
dec
dec
popf
jne
neg
dec
pop
rcl
aaa
inc
mov
shrb
cmp
xor
loopne
icebp
cltd
popf
in
xor
sbb
add
jecxz
add
pop
rclb
int3
insb
cmp
pop
mov
fnclex
or
clc
pop
pop
ljmp
pushf
pop
nop
mov
jle
loopne
pusha
lret
fucomp
inc
push
jecxz
mov
xor
and
lea
aam
bound
or
pop
mul
rorb
and
pop
inc
xor
jge
and
iret
popf
mov
inc
jne
dec
xchg
fucomi
or
xor
lcall
cmpsl
inc
ja
loope
in
cmp
jo
and
int
mov
ja
pop
and
adc
cmp
icebp
popf
xor
pushf
jns
jmp
es
shll
add
xlat
fsub
inc
icebp
aaa
push
cmp
push
add
lret
popf
pop
mov
jl
add
inc
and
je
das
lods
jge
rorl
fldenv
adc
in
stos
pop
stos
xor
xchg
lods
mov
mov
push
inc
xor
cmp
mov
pushw
sti
mov
xchg
adc
stos
adc
inc
sahf
es
dec
loopne
xchg
addr16
pop
add
psubsw
mov
pop
jno
fwait
jle
push
add
cmp
cmp
adc
dec
dec
daa
les
mov
xchg
nop
sahf
sbb
cmpsb
out
pop
ds
lds
lods
and
mov
push
or
sbb
push
data16
xchg
cwtl
inc
xor
imul
idivb
lds
movq
push
data16
shrb
push
and
cmp
sub
mov
fdivr
mov
nop
arpl
ljmp
add
xor
sub
arpl
jbe
add
adc
xor
repz
gs
fidivs
push
mov
fcmovnbe
leave
xor
daa
mov
mov
call
scas
sti
xchg
not
loope
arpl
mov
mov
xor
fidivl
xchg
addr16
sbb
lods
repnz
dec
lds
and
xor
mov
and
xor
mov
jecxz
ret
repnz
or
push
loope
and
enter
add
inc
jnp
xchg
pop
mov
jne
sahf
fidivl
jge
pop
out
test
lds
cmp
mov
arpl
mov
and
and
out
stos
inc
mov
mov
pop
push
add
jo
mov
xchg
xchg
mov
sub
sbb
mov
mov
inc
sbb
and
xor
sbb
jae
jns
cltd
loope
aaa
xchg
sub
and
jecxz
cmp
xor
xlat
shl
jmp
sub
call
subb
fisubl
push
mov
and
pop
icebp
xchg
leave
shll
adc
std
movsl
sub
lods
cmp
sub
into
rcll
scas
adc
arpl
or
and
xor
xchg
je
xorb
xchg
mov
insb
test
pushf
cmp
add
aam
jbe
hlt
sbb
jbe
or
cmp
scas
xchg
sub
xor
imul
sbb
rcl
rclb
inc
out
lcall
push
std
inc
ds
cmp
stos
mov
fidivs
pusha
fdivrs
cmpsb
xchg
xchg
jg
in
into
add
pop
mov
pop
mull
out
cwtl
rorl
adc
cmpsl
sarb
lods
mov
int3
or
rol
sbb
cmp
movsb
gs
scas
sahf
and
ljmp
sahf
and
cmp
cmp
popf
xor
iret
push
add
jecxz
push
mov
daa
push
xchg
jl
inc
lods
pop
fwait
out
in
cwtl
ret
mov
stos
sub
pop
das
ljmp
and
scas
xor
loop
popa
lret
bound
mov
mov
pop
nop
sub
sti
clc
andl
mov
pop
xchg
mov
cmp
xchg
js
jns
mov
imul
sub
sbb
inc
xchg
pushf
pop
sub
sbb
pop
push
mov
dec
push
cltd
aad
psubsb
or
lcall
mov
out
or
mov
xor
shlb
in
cmp
or
rorb
push
cmpsl
adc
xchg
fsqrt
cmc
jo
bound
push
jbe
jae
aas
pop
add
sti
mov
cmp
mov
jg
mov
pop
xchg
xchg
daa
mov
xchg
or
loop
and
rcrl
int
popa
cmp
cli
inc
xchg
rcrb
insl
adc
mov
xchg
movb
add
mov
popa
mov
push
movsl
cmp
mov
insl
sub
rorb
xchg
and
dec
jle
cmpsl
aad
insl
lret
pusha
pusha
rorb
mov
and
fcmovnbe
lret
test
adc
push
mov
push
lret
out
or
and
arpl
movsb
leave
inc
roll
dec
sbbl
xchg
sahf
ss
mov
and
mov
and
mov
push
sbb
mov
sub
mov
pop
movsb
mov
mov
xor
cmp
mov
jl
dec
xchg
fs
cld
mov
sub
xor
cli
mov
push
fbstp
jg
and
lock
or
addr16
mov
fsubrs
sub
or
lea
dec
pop
arpl
xchg
push
rorb
xor
subl
ja
icebp
in
icebp
cmp
pusha
and
aam
outsb
aas
push
lret
pop
mov
cmp
ret
pop
inc
iret
test
sbb
mov
or
jbe
xor
or
dec
fildl
cmp
imul
dec
cmp
mov
mov
imul
rolb
pop
dec
sbbl
cmp
repnz
xchg
in
loop
cmp
aaa
inc
packuswb
pop
xor
xchg
push
lahf
xchg
fcmovb
push
sub
cwtl
push
cli
sbb
out
rcrb
arpl
or
or
imulb
lret
mov
out
adc
insb
pop
lahf
dec
stos
iret
pop
cwtl
xchg
sar
xchg
or
push
ja
or
inc
push
add
xchg
and
xchg
in
mov
fs
sub
dec
into
loop
pusha
adc
ret
int
loopne
adc
or
dec
adc
and
and
subb
cmp
sbb
xchg
sub
imul
push
cltd
sbb
cmp
sbb
ret
data16
ffree
int3
and
clc
adc
jmp
mov
xchg
push
cmp
test
jle
or
ss
mov
jge
mov
cmp
adcl
mov
repnz
jns
in
and
jo
adc
adc
shll
mov
jbe
mov
test
negb
cmp
jmp
cli
insl
push
mov
xchg
mov
ss
shlb
mov
sub
je
int3
inc
ja
push
nop
jbe
js
int3
push
call
jge
mov
pop
in
stos
addps
mov
jns
enter
push
popa
ret
shl
dec
test
or
aad
or
add
pop
filds
xor
rcr
xchg
enter
fisttps
shlb
iret
cmp
inc
lods
xor
lds
jae
sbb
ja
mov
cmc
repz
mov
jbe
add
out
testb
testb
ljmp
repnz
mov
mov
pop
dec
pop
filds
pop
loopne
push
insb
xor
add
shlb
and
xorl
cli
cmp
aad
daa
leave
push
ret
inc
jge
add
pop
xor
lds
push
jp
mov
or
or
inc
test
pop
xchg
mov
sbbl
jo
xchg
bound
push
mov
pushf
push
loopne
stos
arpl
mov
je
mov
lcall
mov
adc
outsb
jp
pusha
movsb
jne
sbb
bound
jb
rcrl
ss
xor
xchg
inc
adc
mov
mov
bound
xorl
sub
mov
and
fnstenv
mov
loop
mov
fwait
lret
fsubl
movsl
repnz
cmp
sbb
lods
push
sbb
cmpsb
sbb
mov
and
repnz
jmp
and
mov
outsb
jb
jp
cmc
pop
pop
ret
and
sahf
dec
mov
mov
sbb
popf
les
mov
lock
notl
add
mov
jb
inc
inc
mov
sbb
jbe
out
jge
out
push
scas
and
mov
lahf
dec
inc
inc
mov
lods
mov
mov
aam
aad
inc
mov
fcmove
movb
popl
push
adc
jp
xchg
mov
sbb
fsubl
sub
mov
jne,pt
pop
mov
imul
or
pop
pop
in
jg
jae
inc
xchg
mov
test
adc
sub
xchg
shlb
add
call
jne
mov
out
call
nop
sub
xor
inc
clc
scas
adcl
aas
mov
inc
in
push
jg
clc
test
mov
je
aad
pop
dec
cmpsl
stc
rcrb
lret
xchg
and
outsb
les
push
shrl
pop
xchg
pushf
shrb
fcom
lods
xchg
cmp
loopne
in
push
call
dec
js
mov
mov
jge
fisubrs
pushf
clc
in
and
adc
push
push
pop
inc
enter
mov
gs
repz
outsb
aam
cmp
fucomi
inc
outsb
mov
enter
inc
scas
mov
jmp
frstor
mov
jmp
or
fisubs
add
cmp
sub
hlt
cmp
pop
imul
sub
jle
adc
test
mov
les
aad
loop
mov
cmp
dec
push
cmp
loopne
xor
inc
jb
subl
push
inc
in
xor
loop
add
into
xlat
cmc
push
mov
xchg
mov
mov
mov
jne
adc
cmp
in
lret
mov
addl
stc
pop
call
push
pusha
loopne
ja
add
divl
stos
lods
xor
jb
mov
jl
ficoml
push
pop
or
sub
add
insl
cmpsl
shrl
push
mov
pop
scas
or
lods
in
arpl
rcrl
lahf
movsb
mov
adc
imul
faddl
sub
xor
adc
lods
in
outsl
inc
rolb
lds
or
cmc
cmpl
iret
pusha
notb
aaa
cmp
test
inc
jo
mov
mov
inc
pop
sti
xchg
cwtl
repz
inc
flds
mov
or
jmp
in
pusha
and
outsb
cmp
in
and
inc
aad
daa
pop
inc
pop
imul
push
mov
mov
xor
and
sub
std
mov
sub
add
push
inc
sbb
mov
lret
aas
std
outsl
addr16
jmp
ret
sarl
jp
ja
ret
jbe
push
push
mulb
mov
rorb
xor
pop
dec
push
daa
mov
jnp
mov
loopne
cltd
adc
bound
lock
pop
xorl
stc
push
and
mov
fildll
fdivrl
push
jne
inc
pop
cmpsl
push
jg
xorl
inc
call
mov
in
shlb
add
inc
sbb
mov
adc
and
movsl
cmp
jmp
or
push
mov
mov
mov
ljmp
push
dec
or
or
sub
mov
xor
adc
xor
into
mov
xor
imul
sahf
mov
xchg
cli
add
or
in
fdivl
insl
sub
pop
loope
xchg
lock
xor
shl
pop
mov
jns
ja
dec
pusha
cli
push
cmp
jge
push
nop
adc
xor
cmp
arpl
outsb
fwait
or
dec
push
out
fs
aaa
jl
lahf
data16
dec
or
inc
in
xor
loope
cmc
aad
decl
xlat
xchg
fists
jge
pushf
inc
inc
and
cmpsl
mov
push
fidivrs
pop
clc
test
pop
mov
sub
add
aam
stc
mov
pop
push
xor
mov
lds
scas
inc
adc
add
andl
out
popf
inc
mov
sub
imul
out
cwtl
and
fidivrs
jb
cmc
shrl
mov
int
sarb
aas
mov
aas
aad
xchg
out
stos
lods
push
dec
stos
and
cltd
loop
cld
popf
int3
pop
cmpsb
cld
ss
xchg
pop
inc
repnz
rolb
add
test
in
dec
inc
xchg
rclb
mov
mov
jb
mov
in
insl
mov
movsb
xor
test
mov
lahf
fsts
dec
cmp
dec
inc
or
push
aaa
ja
inc
icebp
adc
sbb
xchg
pop
push
mov
xchg
data16
mov
mov
mov
mov
nop
xor
call
test
ds
test
inc
aaa
sbb
lahf
enter
rorb
cmp
mov
cld
mov
icebp
scas
pushf
jno
mov
aam
and
jecxz
loope
dec
and
mov
jne
jns
inc
push
add
adc
jno
cmc
sub
and
fcomi
jbe
fdivrl
mov
ljmp
mov
sub
inc
adc
sub
fnstcw
mov
les
pop
and
std
jno
js
and
cli
push
popf
mov
jno
stos
jmp
stc
add
int
pop
mov
fcos
jecxz
xchg
mov
js
mov
in
and
lahf
clc
les
sti
mov
loop
jmp
add
or
sahf
push
xchg
sub
cltd
dec
xor
fcoml
sub
clc
xor
adc
cs
outsl
lea
stos
dec
in
fildl
stos
or
scas
mov
lods
cs
dec
loopne
sbb
not
jg
popa
xlat
subb
ss
outsb
mov
mov
dec
jne
ljmp
ret
in
cld
add
dec
adc
jnp
popa
idivl
in
out
adc
fidivrl
mov
divb
push
pushf
jmp
mov
xchg
lods
xor
sub
xchg
fcoml
xchg
dec
pop
adc
les
push
imul
xchg
push
out
mov
pop
sub
cwtl
bound
lret
mov
outsb
into
pop
push
xor
sbb
jo
sub
sbb
cmp
push
adc
daa
stc
je
in
push
in
inc
es
cltd
and
icebp
lahf
cmp
and
sbb
rolb
mov
daa
sahf
cmp
cli
dec
mov
jle
fs
popa
jbe
clc
popa
inc
shrl
fs
push
jmp
fstpl
adc
stos
xchg
loope
arpl
shrb
mov
sub
lahf
fdivrs
pop
movsl
shl
xchg
lret
sbb
add
adc
jg
jp
pop
outsb
pop
imul
sbb
mov
cmp
out
or
lcall
pop
mov
in
ja
push
inc
pop
push
pop
aaa
fsubr
cmpsb
sub
and
fcompl
xchg
fdivrs
int3
and
repz
adc
or
pop
fcmovu
scas
push
push
xchg
jne
cld
jne
xchg
cs
subb
hlt
mov
sbb
lods
mov
inc
icebp
ljmp
mov
cmc
jo
or
cmpb
outsl
inc
int
pop
out
xchg
sbb
dec
cmp
popa
mov
std
sub
pop
fistpll
lods
cli
push
sahf
jns
sub
xor
or
pop
and
lods
daa
and
inc
mov
add
jp
pop
xorb
and
cmp
mov
mov
mov
sub
mov
inc
sub
loop
aam
dec
push
imul
js
outsl
jmp
cmc
sbb
in
fadd
sbb
adc
sbb
inc
mov
sti
iret
mov
es
push
mov
or
movsl
stos
and
into
push
ss
jae
adc
mov
push
scas
ja
or
cwtl
cmp
out
daa
xchg
mov
add
cmpl
pushf
mov
jl
jle
pusha
cmp
insl
faddp
push
fistpl
lods
cld
jne
scas
popf
push
aad
inc
sub
ret
adc
lea
jne
mov
add
sub
mov
in
mov
inc
push
add
ficomps
jmp
xchg
jbe
lcall
adcb
cli
adc
in
jbe
cmp
fisubrs
int
mov
out
incb
xor
pop
mov
idivb
aaa
pop
xor
fidivl
ljmp
pop
or
shrd
scas
das
push
out
cli
pop
mov
div
lcall
or
and
jle
scas
or
or
and
mov
xchg
xchg
pop
pop
lods
mov
imul
addr16
jne
in
ss
mov
jns
in
fnsave
xor
rcrb
mov
mov
pop
adc
push
adc
mov
push
pop
inc
xlat
mov
sub
jle
mov
mov
sbb
enter
sti
adc
adc
scas
sbb
inc
adc
xchg
jno
push
pop
inc
fstl
mov
or
cmp
or
pop
fcom
mov
mov
pop
push
inc
dec
out
rcrl
enter
inc
pop
fldt
add
xor
fwait
mov
andb
into
test
in
mov
jle
pop
adc
or
repz
mov
pop
test
es
cmp
mov
ljmp
inc
clc
and
dec
repz
jp
in
xor
mov
jne
xchg
push
dec
xchg
xor
pop
add
sti
cmc
dec
push
push
test
cmpsl
jmp
pop
mov
not
lret
add
cld
jecxz
icebp
dec
or
adc
cs
mov
fnstcw
mov
jo
data16
mov
jno
aas
jl
dec
adc
lret
inc
sub
ljmp
inc
lea
cltd
fsubrl
pop
leave
rolb
push
push
ss
or
sbb
and
loope
hlt
imul
daa
dec
xor
cmp
push
sbb
cmp
dec
inc
pop
mov
inc
dec
pop
scas
inc
outsl
pop
xchg
mov
int
in
stc
pop
xor
push
jbe
sarl
rcrl
pop
aaa
pop
adc
dec
rcrb
mov
movsl
dec
cli
sbb
sbb
mov
xor
sbb
pop
enter
xchg
jmp
insl
enter
data16
sarb
nop
popf
push
adc
fs
pop
std
adc
xor
cmpsb
ds
mov
add
cli
lods
push
push
jecxz
mov
add
dec
push
sahf
fistpll
leave
push
adc
cmp
call
sub
mov
push
mov
jle
inc
jmp
dec
sti
or
add
movsl
add
dec
dec
add
mov
aad
push
imul
cwtl
push
test
cmpsl
ficomps
call
add
stos
cmp
dec
stos
or
push
jno
jnp
dec
push
push
das
pusha
sbb
aad
mov
psubd
fs
jne
pop
insb
add
jbe
add
in
mov
cmp
mov
jp
xchg
pop
mov
adc
outsb
movsl
sbb
pop
test
sbb
push
or
rorb
mov
icebp
xor
jecxz
xor
cltd
outsb
jns
adc
mov
jae
aas
mov
push
addb
dec
xor
pcmpgtd
jecxz
mov
mov
push
lret
sbb
mov
and
in
cmp
enter
mov
aaa
xor
push
ret
add
mov
xchg
lret
fldcw
mov
xchg
fsubrl
adc
jae
mov
cli
mulb
lret
pop
imul
dec
dec
lret
shll
je
int
and
imul
cmp
stc
mov
or
adc
loope
or
popf
jno
mov
xchg
mov
or
and
mov
mov
nop
cltd
add
and
insb
pop
hlt
cwtl
fnstsw
inc
and
mov
leave
jae
sahf
adc
or
insl
mov
iret
out
cmp
xchg
in
outsl
pushf
mov
scas
inc
push
mov
popa
sarl
and
and
xchg
icebp
add
stos
into
pop
cmp
out
jle
imul
repz
mov
push
dec
add
leave
xchg
stos
ss
mov
xchg
mov
pmullw
add
lahf
mov
in
push
or
cwtl
sub
sarb
inc
or
scas
jmp
mov
mov
jne
pusha
dec
dec
mov
aaa
sbb
out
mov
mov
sahf
inc
push
xor
out
and
inc
shll
push
xor
out
stos
in
dec
lods
fdivl
mov
sbb
or
inc
idivl
inc
pop
mov
icebp
pop
xor
aad
cmp
mov
in
xchg
popa
inc
pop
insl
in
dec
std
ds
or
mov
gs
jbe
inc
dec
and
aaa
sbb
mov
ret
push
xchg
push
jnp
rcr
jmp
push
cmp
xchg
push
loop
aas
das
mov
inc
inc
out
lods
or
push
sbb
jle
cmp
or
mov
add
mov
in
mov
movsl
outsl
adc
cmp
enter
shlb
clc
inc
es
push
jl
movsl
jns
dec
cmpsl
sub
xchg
xchg
testb
mov
cmp
shl
or
sarb
mov
ja
or
add
popf
movsb
in
push
and
enter
jp
outsb
dec
mov
sbb
cmp
mov
push
xlat
mov
stos
add
movsb
sbb
adc
ja
jp
sbb
dec
and
mov
dec
xchg
pop
add
mov
cmp
test
pop
rcr
test
repnz
or
mov
imul
les
sub
jle
sbb
mov
xor
icebp
push
jbe
popa
and
cmp
push
inc
dec
insl
and
mov
pop
shll
xchg
out
shll
stc
jbe
push
fisttpll
aaa
ljmp
jmp
movsl
icebp
imull
ret
xchg
sbb
mov
stc
aas
int3
iret
movb
mov
hlt
incl
xlat
loopne
shrl
aaa
lahf
adcb
ret
pushf
clc
in
adc
or
lahf
inc
sbb
mov
std
lahf
push
adc
imul
push
cmp
jne
pop
out
push
lahf
cmp
lds
insl
imul
mov
mov
leave
inc
jb
lret
stos
addr16
in
inc
lds
or
imul
imul
ds
cmpsb
inc
mov
loop
push
pop
add
xor
dec
jp
enter
lcall
mov
or
fcmovb
xchg
mov
jo
sbb
xchg
cmp
adc
mov
pop
dec
and
and
mov
fsubl
dec
sub
int3
mov
sbb
cmpsl
cmp
jecxz
out
out
mov
ffreep
dec
jbe
cmp
ficomps
int3
jns
push
out
pop
adc
xor
test
xlat
sbb
sti
add
les
add
rcrb
dec
jmp
lret
add
imul
and
add
jg
arpl
xchg
sti
sub
mov
mov
add
jns
jle
test
pop
sbb
xchg
or
sbb
ret
movsl
loop
insl
das
out
inc
aas
mov
jp
jge
sbb
stos
jle
rcrb
sub
xchg
mov
repz
jmp
sub
cmp
loop
push
sbb
lock
aaa
cmp
imull
cwtl
or
icebp
mov
testl
dec
mov
out
cmpsb
outsl
lods
mov
scas
or
scas
mov
in
mov
adc
mov
addr16
shl
mov
loopne
and
arpl
cmp
dec
out
fsub
icebp
in
xchg
fnstcw
cmp
leave
rorl
sbb
movsl
out
push
add
adc
jmp
push
sbb
divl
data16
scas
adc
push
push
cmpsb
mull
shll
push
jno
jns
sub
push
test
pop
pop
leave
pop
mov
add
sarl
mov
jo
int
out
fsubl
adc
xor
imul
mov
out
pop
or
push
test
jg
mov
insl
mov
adc
dec
and
out
in
shufps
push
das
jmp
mov
adc
xchg
sub
out
inc
xchg
push
pop
test
lds
adc
inc
add
cltd
movsb
cmp
ret
cwtl
adc
adc
xchg
jnp
aam
mov
pop
enter
push
sbb
mov
lea
sub
imul
dec
mov
out
jns
int
cs
or
cmc
add
pop
mov
push
lret
icebp
xor
sbb
mov
jle
popf
adc
stos
mov
mov
push
xor
jp
pop
sub
aaa
sub
xchg
cmp
inc
xor
mov
cmovb
xlat
stos
xchg
add
adc
out
or
mov
fsubrl
cmp
mov
and
lgs
adc
cltd
ds
adc
cmp
xlat
and
cmp
fs
dec
outsl
push
mov
sbb
clts
in
out
daa
jge
popa
add
sub
jg
cmp
stos
push
in
pop
xchg
test
scas
aad
mov
xchg
lock
rcl
and
loope
jb
decb
push
in
stos
std
lretw
fists
shlb
jne
je
test
cmp
pop
inc
push
cltd
and
jae
imul
jno
nop
inc
mov
fnsave
mull
sar
cld
and
cld
lahf
inc
sarl
add
mov
loope
jge
pop
adc
or
xchg
dec
pop
fistpll
inc
inc
add
mov
xchg
mov
cmpsl
adc
mulb
imul
or
enter
mov
sbb
outsb
inc
pop
add
sarb
push
fidivs
ds
dec
ret
fisttps
int3
ret
int
ret
and
xorb
test
sti
push
in
incl
scas
sysret
push
shll
ja
pop
mov
fists
mov
dec
cmp
clc
push
dec
lcall
dec
mov
subl
mov
mov
adc
sub
in
cwtl
pop
loope
aam
pextrw
dec
jno
dec
sbb
mov
sbb
sbb
jbe
nop
ret
std
xchg
inc
je
and
adc
xchg
xchg
mov
push
mov
cmp
mov
mov
inc
dec
xor
xchg
mov
mov
inc
xchg
inc
push
sbb
fsubs
rcl
rcll
adc
jmp
aas
jns
dec
shrb
push
sbb
mov
mov
test
cmpsl
ret
es
inc
pop
inc
call
test
fcomps
lock
or
fcoml
jo
cli
ss
lahf
push
mov
dec
js
mov
cltd
pop
fucomp
inc
mov
xchg
push
outsl
negl
mov
insl
adc
scas
sbb
inc
sbb
test
insb
mov
daa
dec
jns
mov
push
xor
cmp
les
xor
dec
invd
pop
inc
or
add
xchg
and
ljmp
add
cmp
insb
push
adc
xor
mov
add
std
addr16
cmpsb
jno
test
xchg
mov
push
ds
mov
jmp
jb
add
fcompl
aas
pop
mov
mov
movsb
nop
dec
sub
aad
inc
inc
adc
push
pop
or
popf
sbbl
xlat
dec
mov
mov
jg
inc
cmpsb
and
stos
push
or
xor
xchg
push
lds
push
loope
mov
mov
clc
and
out
bnd
cli
pop
and
mov
dec
ds
ret
xchg
cmp
test
mov
mov
ds
xchg
out
fwait
jne
sub
or
or
es
mov
jge
sbb
cmp
xchg
out
mov
xor
fs
sbbl
call
push
call
sub
and
stos
notl
jbe
cmp
data16
adc
and
nop
cmp
pop
mov
dec
mov
push
daa
dec
dec
sbb
push
push
lret
pop
jecxz
inc
sub
xor
adc
jge
enter
and
mov
mov
xchg
ret
cmp
add
sarb
fdivr
mov
xchg
int3
pop
je
insb
sub
sbb
adc
mov
inc
mov
popa
inc
movsb
jnp
pop
enter
fnstsw
jg
sub
cltd
js
rcrl
inc
cltd
rolb
jl
int3
sub
insl
cmp
scas
js
gs
pop
mov
and
sbb
push
int3
std
jl
and
andl
xchg
add
lret
xor
fdivs
insb
iret
dec
stos
leave
inc
xor
jmp
ljmp
jmp
sub
rorb
iret
shll
inc
sub
pop
mov
jp
jg
popa
cltd
fstps
in
repz
cmc
lds
mov
cmp
pusha
or
stos
dec
sbb
das
xor
xchg
mov
leave
xlat
xchg
jns
push
dec
cli
cli
mov
xchg
pop
mov
or
test
and
jg
lahf
sbb
jbe
mov
jle
push
or
mov
pop
sbb
addl
inc
daa
xchg
push
xchg
jp
or
shl
in
in
movsb
sbb
ror
dec
mov
mov
lods
mov
cmp
aad
or
cli
lods
stos
push
and
stos
scas
sbb
mov
sbb
cs
out
sbb
mov
repnz
dec
mov
mov
mov
jno
add
add
xchg
cmpsb
jbe
xlat
sbb
ror
loope
mov
sahf
enter
sarl
xlat
mov
inc
and
jecxz
xlat
fisubl
stos
push
and
ss
fdivr
mov
push
and
cmp
mov
sbb
ds
lds
or
add
pop
dec
cmpsl
aas
or
shlb
mov
or
pop
push
stos
pop
dec
and
inc
loopne
fwait
jno
addr16
xchg
mov
jp
jne
pop
in
mov
inc
mov
rcrl
push
popf
xor
dec
fs
sbb
in
adc
pop
jecxz
ljmp
jl
pop
jp
insl
fsubrs
cmp
lds
cmp
xor
imul
mov
fistps
xorl
shlb
outsl
leave
push
dec
stc
sbb
pop
daa
inc
test
sahf
cmc
mov
adc
cmp
inc
out
xchg
push
jbe
push
movl
push
mov
into
in
cmp
inc
dec
movsb
sub
pop
loope
lea
pop
xchg
arpl
sub
test
sbb
pusha
xchg
stos
and
xor
std
imul
jl
jns
lea
sub
test
add
js
inc
les
lcall
xor
mov
mov
and
scas
dec
in
les
or
mov
jne
ds
sbb
repz
inc
pop
cmp
cmp
sub
scas
fsubl
dec
add
loop
sahf
rcrb
bound
sarl
pusha
xchg
fidivrl
jb
lock
cmpsl
push
jbe
or
insb
lods
loope
push
xor
rorb
pop
pop
push
movsb
add
dec
icebp
lea
insb
vpmullw
je
call
push
lea
insl
mov
lea
jno
lahf
push
fidivrl
xchg
jb
aaa
push
mov
jge
jnp
data16
fsubrl
jmp
testb
mov
in
aam
ret
mov
scas
xor
dec
sub
dec
scas
pop
imul
scas
cld
fwait
nop
call
jno
sarl
orb
jns
add
das
roll
pop
dec
adc
dec
jnp
scas
cmpsb
jne
push
ss
test
mov
jb
hlt
mov
sub
out
push
sub
mov
cld
or
add
orl
and
sbb
es
xor
push
in
fcoms
mov
mov
adc
sub
sbb
xchg
or
push
outsb
es
sbb
jns
subb
leave
cmp
add
repnz
cmpl
scas
and
fimull
inc
mov
movsb
fxch
and
mov
in
es
xor
xlat
add
dec
mov
shlb
cs
push
sbb
mov
xor
sbb
pop
push
xor
js
fwait
sbb
lods
push
mov
sbb
or
mov
cltd
std
ret
movsl
fdivrp
dec
aad
mov
pop
pop
jae
leave
push
stos
int3
bound
stos
xor
jae
dec
dec
iret
aam
sbb
js
xchg
push
push
into
mov
jmp
popf
call
lahf
push
adcl
jmp
stc
xor
inc
imul
lret
cmp
add
mov
sub
popa
push
aad
mov
and
stos
jbe
mov
in
or
insb
sbb
xor
stos
dec
push
mov
cli
ljmp
push
lea
mov
out
cmp
inc
mov
xor
stc
mov
xor
pushf
inc
out
add
mov
aas
push
daa
cmp
imul
lret
call
and
je
lcall
jne
pop
sbb
shll
push
lods
in
push
es
mov
popa
cmpl
out
outsb
negb
ret
add
push
mov
push
lret
xchg
popa
arpl
xchg
inc
shll
or
mov
lods
or
fnsave
dec
pop
pop
pusha
jg
movsl
into
repnz
out
daa
jmp
xchg
int
sbbl
fs
cwtl
cmp
xchg
jge
fdiv
test
ds
xchg
and
out
push
mov
neg
bound
dec
jns
or
cmpsl
or
jb
pop
push
aas
imul
jbe
pop
repz
jno
ljmp
iret
mov
adc
fisubrl
mov
sub
lock
std
lret
movsb
jecxz
xchg
roll
sub
add
test
idivl
or
loopne
sbb
sti
repnz
std
enter
pop
arpl
xor
hlt
add
jae
hlt
or
call
stc
ficoml
pop
fimuls
cli
jno
sub
fsubrs
aam
shlb
cs
arpl
mov
xlat
xor
lods
lods
inc
add
sbb
mov
fwait
in
lods
ja
scas
in
or
add
jp
jnp
mov
lea
mov
jbe
mov
xchg
mov
ja
cmp
dec
idivl
jbe
imul
jnp
dec
jo
xchg
into
push
test
mov
jp,pt
sbb
sbb
inc
jge
add
adc
mov
hlt
xchg
mov
xchg
push
adc
ret
mov
mov
pop
out
in
arpl
test
xchg
xchg
ret
out
jp
popf
xchg
insb
jae
mov
mov
fisubs
sub
fcoml
andl
push
push
mov
rol
mov
and
not
jl
pop
shlb
je
leave
add
ficoml
test
xlat
fsubrl
xor
xor
insb
add
aam
fnsave
dec
sub
gs
fsubl
nop
inc
inc
ljmp
push
in
add
jb
setp
lret
fs
sbb
jbe
cltd
adc
xor
cmp
jbe
dec
call
xchg
cmp
adc
mov
inc
pop
dec
xor
jge
and
mov
xchg
js
dec
push
cli
adc
and
mov
mov
inc
sbb
push
loopne
stc
and
rclb
popf
ds
fists
scas
inc
adc
insl
sbb
pushf
out
stc
mov
insb
lret
sub
imul
fnstenv
es
mov
fbstp
dec
das
lcall
mov
sbb
dec
insl
stos
xchg
out
ja
mov
xor
fcomps
or
push
cmp
stos
cmp
and
sahf
hlt
cmp
mov
jne
das
sub
repz
lret
jns
mov
jnp
sti
pushf
or
cltd
cmpsb
cmc
dec
adc
sti
cmp
sub
cmpsl
or
pop
push
sbb
fstps
or
jge
loop
nop
test
xor
rorb
daa
dec
mov
pop
mov
jo
xchg
dec
addb
aaa
dec
sahf
repz
pop
xchg
repz
mov
mov
mov
leave
xor
pop
sbb
sbb
cmp
mov
mov
arpl
ja
push
inc
out
pop
pop
mov
inc
sahf
cmpsl
push
and
lret
xchg
xor
and
jbe
cld
cmp
push
jbe
add
pop
xor
inc
cmp
cmpsl
push
aas
dec
and
icebp
and
imul
cltd
fidivrl
cmp
sub
mov
jbe
xor
adc
lea
mov
cli
fwait
insl
xchg
rclb
sbb
mov
lods
push
arpl
lods
out
cmp
out
mov
pusha
sub
jp
xor
lea
jmp
and
mov
sub
cmp
mov
fdivl
int
repz
pop
mov
daa
cmpsb
sub
or
pop
pop
stc
or
loope
out
pop
inc
ret
jg
cmc
scas
dec
push
and
sbb
aas
sbb
mov
sub
add
mov
lret
cmp
icebp
pop
sub
mov
les
ret
mov
clc
push
mov
cmp
popa
clc
fistpll
mov
enter
push
out
pushf
sub
scas
sub
pop
movb
daa
or
dec
xchg
and
cmc
dec
movsb
push
popa
rol
jae
push
push
repnz
insb
and
sbb
pop
js
lock
inc
pop
loopne
lods
repnz
ficompl
das
out
xchg
outsl
insl
outsl
aaa
mov
cld
out
out
xchg
sahf
out
add
in
call
scas
aaa
aam
lret
push
clc
pop
xor
add
jg
dec
js
xlat
adc
jno
rcrl
mov
or
add
sbb
xchg
dec
push
adc
cmp
je
mov
cmp
repz
sub
nop
sahf
dec
outsb
imul
xor
dec
imul
lahf
xlat
mov
out
lret
dec
jae
inc
int3
inc
mov
or
xor
xchg
fwait
mov
fmull
cmpsb
xor
or
push
jg
cli
cmp
stos
loopne
xchg
outsl
gs
cmc
inc
cmc
cs
lea
and
lret
je
movsl
cltd
sbb
sbb
jbe
loopne
sbb
lret
xor
loope
int3
imul
inc
cmp
inc
loope
scas
shlb
aaa
or
sbb
pop
fwait
mov
fidivs
ja
cmp
test
sbb
or
push
loop
jo
inc
iret
mov
jno
jno
fs
imul
setl
insl
insl
sbb
les
adc
sti
sub
mov
es
xchg
mov
add
mov
stos
repnz
adc
jp,pn
dec
scas
repnz
jne
jo
mov
jnp
ja
in
test
insb
stos
cli
push
xlat
cmc
cmp
inc
iret
fwait
ret
int
xor
mov
cmpl
sbb
adc
aad
dec
mov
pop
and
aaa
in
mov
pop
lock
push
fistl
sub
nop
lds
nop
add
sti
sbb
mov
cmc
out
outsl
imul
out
adc
xor
jmp
das
inc
push
lea
xchg
stos
jne
dec
or
mov
push
mov
mov
jecxz
inc
xchg
mov
and
pop
and
scas
clc
popa
stos
sbb
dec
jbe
je
xorl
loopne
cld
fwait
mov
fcompl
fwait
mov
cwtl
inc
jae
stc
mov
and
jge
in
sbb
mov
ss
inc
adc
movsb
mov
inc
lcall
xor
dec
push
mov
test
rcrb
mov
sub
xchg
ljmp
adc
and
push
dec
lods
stos
adc
clc
rcr
loop
dec
aad
inc
xlat
aaa
jmp
or
sub
fstl
mov
enter
in
outsl
inc
in
push
and
jae
jo
jecxz
mov
dec
shrl
jecxz
div
fcmove
fmull
insb
in
loope
faddp
lods
add
xchg
jo
cmp
mov
adc
lds
imul
xor
clc
sbb
repz
xlat
mov
inc
xchg
pop
jle
jmp
pop
mov
ficoml
push
jp
es
xor
push
aad
push
ret
jg
cmc
pushf
cmpsl
cmp
cmp
or
dec
js
mov
loop
std
test
sub
pop
xlat
cmp
outsb
out
leave
imul
sub
jp
jnp
rclb
mov
in
ljmp
cmp
jg
andb
mov
pushf
jp
push
push
mov
mov
in
mov
fisubs
or
xchg
xchg
test
dec
mov
push
sbb
mov
or
outsb
cmp
sbb
leave
insb
dec
lods
cmp
xor
push
jnp
inc
cltd
push
dec
adc
test
jp
aam
movsb
lods
sbb
cmp
ret
cmpsl
inc
movsl
popf
adc
sub
mov
in
cwtl
xchg
fiaddl
dec
loop
add
xchg
in
add
adc
sbb
insb
arpl
pop
jp
push
cwtl
and
outsl
xor
ja
cmp
mov
jecxz
cld
mov
lcall
dec
dec
push
pop
or
jae
int
inc
push
imul
push
xor
or
leave
mov
cltd
iret
lds
push
xchg
lret
test
je
je
popa
rcl
leave
push
in
movsl
cmpsl
and
xlat
fdivrs
cmp
into
jo
std
aas
icebp
ror
add
pusha
add
jno
push
sahf
add
in
insl
sub
mov
cmp
shl
lret
daa
mov
dec
lahf
mov
fs
and
dec
and
cmp
xor
sahf
mov
add
popf
cmp
shl
xchg
movlps
fisubs
movl
leave
ficomps
pushf
inc
mov
lock
add
pminub
lcall
mov
jae
ja
pop
mov
add
inc
into
sub
mov
jg
xchg
aad
jle
insl
cmpsl
cmpsb
fcomp
in
add
cmp
sub
sbb
mov
mov
cmp
mov
jbe
adc
shrb
xor
arpl
call
bound
out
xchg
pushf
leave
xchg
fldt
jne
stos
lcall
fwait
sub
mov
mov
push
or
fstps
pop
je
ret
sbb
or
mov
lret
jecxz
jbe
ffreep
or
xlat
and
iret
xor
sbb
ret
lods
push
hlt
xchg
fcompl
pmuludq
sbb
std
xchg
je
xor
mov
sti
popf
pop
daa
mov
movsl
inc
xchg
pop
mov
xchg
jbe
repnz
mov
outsl
call
fsts
cmovns
testl
dec
mov
jecxz
fsubr
xchg
pop
leave
dec
into
jnp
cmpsb
add
adc
add
outsl
xor
shrb
and
test
fcompp
loopne
add
aad
int3
dec
jl
sub
nop
dec
and
test
and
add
jb
push
lock
jmp
mov
sbb
addb
inc
cltd
sub
iret
jo
jp
fisubrs
dec
je
push
mov
test
inc
push
sub
jb
mov
int3
and
cli
xchg
mov
pop
les
mov
loope
cmpb
inc
and
clc
inc
insl
sub
daa
or
and
mov
mov
pop
xorb
xchg
sub
add
xchg
sbb
imul
sbb
adc
js
cmp
mov
pop
sbb
push
cwtl
pop
mov
mov
push
cld
addr16
loope
fcomp
imul
mov
sbb
xor
in
je
or
xor
push
mov
nop
ss
cmp
lcall
hlt
pusha
int3
in
mov
clc
add
outsl
je
mov
shl
jns
in
pop
ret
add
rcr
loop
in
lcall
mov
pop
xchg
cmp
jmp
insl
fwait
cli
ret
dec
data16
loopne
jo,pn
popf
xchg
xchg
cli
and
adc
ret
mov
dec
jnp
inc
int
repnz
ret
fdivrl
inc
lods
cli
inc
lods
mov
jb
push
fnstsw
push
jge
xchg
inc
add
pop
pop
jge
dec
pop
xchg
or
push
cltd
inc
mov
push
and
dec
mov
inc
lret
negb
stos
sbb
test
mov
mov
add
inc
pop
jno
addr16
sbbb
and
xor
shr
xchg
rolb
xor
or
jmp
call
jno
loopne
pop
sahf
dec
cmp
pop
or
fwait
inc
xor
push
ljmp
inc
sbb
pop
int3
aam
popa
jnp
mov
jo
lods
cli
aas
aam
pop
aaa
jmp
sbbl
shlb
shrb
fsubs
and
xlat
int3
mov
pop
jne
pusha
push
lcall
ds
and
xchg
out
or
sti
mov
cmpsl
mov
pop
xchg
lret
add
fdivs
inc
mov
add
cmp
out
push
jp
push
adc
pop
jg,pt
jmp
leave
dec
dec
push
xchg
andb
loopne
lock
jb
or
sbb
dec
sti
ja
cmp
stc
inc
push
or
pop
ja
mov
mov
add
push
in
fisubs
xchg
fidivrl
mov
out
sub
dec
pusha
repz
sub
push
imul
inc
jl
sub
fs
daa
sub
cld
and
loopne
or
ss
or
or
pop
lahf
sub
andb
test
out
std
loope
mov
fdivrs
jb
and
es
addb
inc
int
jae
and
push
jge
movq
ljmp
jbe
sbb
push
std
xchg
xor
out
mov
xor
inc
inc
jns
aad
in
ljmp
xor
mov
pop
jno
scas
lock
sub
and
mov
out
cmp
dec
mov
sub
xchg
mov
repz
cmp
xor
push
cmp
jg
pop
pop
dec
add
push
stos
lret
loope
inc
ud0
lea
mov
rolb
dec
out
adc
inc
push
or
inc
sbb
jb
mov
iret
test
sbb
mov
subl
mov
xchg
je
xor
hlt
mull
loope
cmpsb
push
mov
pop
pop
mov
pop
pop
inc
ss
ss
das
sahf
sahf
lahf
jmp
mov
sbb
pop
xchg
mov
mov
iret
mov
cmp
push
push
push
mov
roll
mov
sbb
je
and
pushf
fldl
sbb
in
inc
and
ljmp
inc
jle
enter
xor
add
out
push
xor
push
push
mov
or
inc
iret
sbb
aam
repnz
pop
xchg
jge
inc
ret
es
ja
lret
sub
lea
add
hlt
mov
push
mov
jne
cmp
or
shrl
xchg
push
add
dec
stos
mov
insb
xor
orl
inc
in
aad
outsl
arpl
dec
nop
das
loop
addb
xchg
cmp
bound
test
test
sarb
xchg
mov
dec
and
mov
enter
mov
in
aam
jmp
cmp
cmp
dec
or
mov
pop
cltd
cmp
shlb
sarb
push
dec
or
adc
adcb
jns
mov
js,pt
test
pop
ljmp
icebp
popf
dec
pop
adc
insl
fldl
loopne
xor
out
dec
cmp
cmp
ds
push
scas
mov
fs
mov
shll
mov
lock
jns
stos
push
aas
dec
clc
iret
gs
jbe
in
cmpsb
gs
pop
jo
mov
shl
mov
out
hlt
pop
and
scas
adc
add
mov
and
dec
mov
push
pushfw
arpl
rcrl
add
cs
mov
xchg
sti
jp
pop
and
fucom
lret
cmp
sbb
sub
loop
xchg
popf
jle
cmp
ficoml
subl
je
lcall
push
int
out
in
mov
sub
sbb
lods
sbb
adc
lret
test
pop
or
cwtl
mov
data16
shl
in
sbb
mov
dec
gs
mov
sbb
ficoml
pop
ret
ljmp
icebp
ror
rolb
jmp
call
dec
jb
mov
sarb
jns
iret
pop
dec
ljmp
xchg
sub
push
test
int
xor
dec
pusha
cmp
enter
mov
arpl
bound
pop
mov
sub
mov
or
in
in
in
dec
add
lds
into
xorl
arpl
jg
aad
inc
xchg
jnp
sbb
aaa
dec
inc
fcompl
aam
dec
xchg
jmp
call
push
in
add
insl
inc
dec
rcll
shrb
sbb
gs
out
int
xor
add
jno
push
stc
lock
popa
fisubrl
ja
addb
in
jp
cmp
mov
or
insb
fcoml
push
add
cmp
mov
test
cmp
push
xor
ja
lret
or
cmp
js
jg
push
mov
xor
xor
push
fisubs
push
shlb
sub
inc
inc
lock
and
push
jno
cmpsb
out
or
xchg
aam
sbb
push
push
push
xor
inc
fsts
roll
sarl
pop
testl
add
popa
shll
cmp
xbegin
iret
or
xor
loope
inc
mov
and
inc
outsb
sbb
repnz
and
movsb
lea
sub
sbb
out
cmp
outsb
lcall
fadds
loopne
lret
push
cmp
push
lret
rorb
test
push
xlat
outsb
repz
mov
or
mov
xor
xor
push
orb
lods
xchg
cmpsl
scas
mov
push
push
cmp
mov
dec
mov
shrl
lret
out
repz
int
mov
lods
push
scas
xor
dec
jge
mov
repnz
xchg
inc
and
cmc
fsubrl
lret
insb
outsl
movsb
mov
or
mov
data16
les
and
mov
in
fs
gs
or
es
movsb
pop
test
mov
out
imul
and
cmpsl
testb
hlt
adc
add
push
cwtl
or
xorl
neg
adc
pop
rcll
inc
out
cmp
aam
insl
or
cmp
cmpsl
cmp
out
and
inc
push
js
jne
sti
fdivl
data16
dec
xchg
gs
incb
push
neg
cld
jecxz
pop
jg
xchg
mov
push
dec
xchg
rcrl
loope
jp
pusha
insl
je
dec
mov
fistl
sub
mov
insl
cmc
ss
sbb
cmp
push
adc
subb
in
xor
dec
sbb
cs
jae
pop
push
sbb
loopne
sbb
jg
adc
mov
pop
lods
add
dec
xchg
cmc
mov
jp
mov
push
out
push
or
shlb
and
inc
pop
sarl
cmp
push
imul
js
xor
int3
movsb
fsubrs
ljmp
lods
jge
lcall
or
rorb
scas
and
sahf
notb
lods
ljmp
imul
rclb
sti
cmp
lret
nop
dec
aad
push
imul
and
stc
daa
scas
int
xchg
mov
push
out
out
scas
insb
jmp
gs
in
add
mov
out
mov
hlt
fcoml
stos
js
out
loope
shll
push
popf
sub
sub
cltd
out
lods
orb
mov
xor
test
iret
jno
mov
sub
imul
xchg
cltd
pop
xchg
mov
jo
pop
sti
jae
mov
mov
movsb
int
inc
fdivrs
ds
testb
movsl
and
jnp
mov
repz
push
and
shlb
mov
data16
shrl
sub
lahf
fisubrl
cmpsb
fisttpl
iret
rolb
xor
dec
rolb
fcmovne
pusha
push
mov
adc
jnp
xchg
inc
ds
push
fldcw
cld
cld
add
in
sub
ret
adc
addr16
inc
fldpi
in
mov
addr16
ja
cs
js
out
divl
pop
adc
xchg
movsb
dec
or
daa
sub
push
xor
loope
js
call
das
and
cmpsb
iret
jns
xlat
xchg
jg
add
int3
push
mov
cli
out
pusha
fsts
xchg
repz
rorb
jg
ret
sbb
pop
pop
pop
push
into
jp
rorl
int
sbb
pop
js
xchg
aad
cmpsb
ficoms
sbb
jbe
and
xor
movsb
sahf
and
and
mov
or
mov
adc
mov
xchg
mov
mov
leave
mov
jg
lret
and
xchg
data16
mov
in
sbb
loopne
addr16
xor
andl
sbb
inc
jb
enter
gs
orb
in
sti
sbb
pop
cs
sub
dec
sub
jecxz
inc
stos
mov
repz
outsb
popl
adc
insl
je
daa
push
and
xchg
xor
sbb
sbb
fdivrp
push
pop
mov
jecxz
pushf
pop
mov
sbbb
and
jcxz
push
lds
lods
jne
cmp
fmulp
push
cmp
sti
mov
dec
xor
add
jge
cwtl
xor
jecxz
cmp
cmc
pop
sbb
push
dec
out
mov
fistl
aad
shll
push
or
cmp
jbe
jge
mov
or
call
int
add
adc
sbb
dec
inc
notb
fldl
mov
jp
clc
out
out
and
sbb
adc
push
andb
cmpsb
cmp
xor
insb
pop
arpl
add
mov
xchg
pop
pop
pop
insb
lds
cmc
mov
mov
das
or
mov
sbb
push
cmpsb
push
cmp
or
mov
enter
ficompl
pushf
push
pushf
in
lds
mov
pusha
jecxz
dec
ljmp
mov
mov
ja
mov
jecxz
mov
and
xor
cwtl
cltd
pop
push
leave
imul
stos
je
pusha
cmp
jmp
jnp
xor
xchg
mov
or
add
jge
mov
and
xchg
lods
insb
daa
xchg
push
mov
adc
add
ja
sbb
pop
lea
pop
call
mov
dec
mulb
lret
xorb
loop
add
inc
dec
movsb
push
pop
in
neg
cld
push
cmp
pop
and
insb
insb
xchg
mov
mov
out
data16
sub
sarb
arpl
jecxz
cmp
xchg
push
pop
outsl
xchg
test
xchg
pushf
pop
mov
adc
mov
mov
rclb
pop
fucom
sbb
loop
hlt
mov
nop
inc
stos
and
pop
inc
aam
das
pop
andb
adc
jo
ljmp
notl
data16
xchg
cs
cld
mov
ja
inc
dec
push
shll
pop
pop
mov
sarb
push
stos
call
cmp
ja
adc
loop
mov
ret
out
xor
xchg
pop
sbb
das
in
es
sub
dec
rcrl
push
pushf
fdivrl
xchg
or
ja
dec
test
arpl
test
pop
mov
and
push
pop
loope
or
mov
mov
movl
dec
cld
xchg
dec
mov
lret
mov
out
fistpl
jne
dec
dec
adc
jno
xchg
fwait
xchg
es
and
movsl
test
nop
mov
scas
nop
push
jge
and
and
shr
aad
xchg
loop
push
cwtl
mov
sub
xchg
faddl
add
lcall
imul
or
cmpsl
xchg
lahf
inc
push
push
cltd
fldl
in
les
adc
int3
rep
aaa
xor
ja
or
cmpsl
mov
push
leave
cmp
rcrb
cli
mov
aam
int3
mov
popf
pop
sbb
dec
loop
pop
and
inc
dec
ljmp
jg
cmc
mul
xor
or
cmp
in
dec
and
lret
divl
orl
mov
aaa
add
cwtl
insl
mov
inc
adc
mov
out
sbb
push
shr
inc
das
test
push
cmp
push
cmp
push
aaa
jne
fs
xchg
and
xor
sub
dec
fwait
sub
push
cmp
fidivrl
mov
scas
xor
push
clc
and
lods
ret
pop
in
jbe
into
xor
mov
shlb
pop
in
and
dec
popf
out
sub
sbb
inc
popa
sbb
fbstp
push
out
js
and
pop
push
adc
std
mov
pop
shl
shrb
pop
jle
icebp
adc
sbb
aaa
test
cmp
xor
jae
xchg
addr16
rcrl
sub
enter
loop
or
sbb
or
scas
cmp
sub
sub
mov
push
call
pop
leave
inc
insl
cmp
mov
mov
aas
iret
cmp
jmp
mov
mov
ss
and
jl
push
shl
fwait
iret
jmp
mov
pop
pop
and
popa
sub
lcall
adc
out
adc
cld
and
or
test
jno
jne
mov
idiv
lods
fldenv
adc
push
mov
hlt
aad
cli
fmuls
into
push
out
stos
sahf
out
push
cs
pop
les
xorb
pusha
mov
mov
add
scas
jl
pushf
sub
mov
jge
push
pop
insb
fisttpll
loop
inc
idiv
setg
push
fistpll
pop
mov
mov
mov
adc
inc
pop
push
xchg
xchg
in
aam
inc
cmc
and
mov
sbb
int
pop
pusha
mov
xchg
stc
sub
clc
push
or
mov
loop
es
add
dec
inc
pop
repnz
ret
xchg
scas
and
test
mov
inc
aad
dec
pop
sbb
adc
mov
sbb
sub
or
cmc
shlb
and
mov
pop
aad
mov
imul
enter
and
pop
adc
add
js
dec
ds
inc
cltd
jne
int3
imul
pushf
add
inc
pop
ret
add
mov
fistpl
aas
stos
inc
sar
jnp
pop
jne
add
repz
movsb
loope
sub
pop
out
fcom
fisubl
dec
mov
jle
into
ret
sbb
scas
xor
ficoml
daa
mov
push
in
push
repnz
fs
mov
test
mov
inc
pop
popf
shl
pusha
dec
and
pop
jge
jl
insb
out
cmp
movsb
sarb
inc
inc
inc
incl
add
fisubs
xchg
sub
out
push
sub
xchg
xor
jbe
int
xchg
ds
push
jae
jnp
outsb
and
icebp
mov
xor
cmp
mov
popf
movsl
mov
mov
cmp
mov
out
mov
fwait
mov
jge
sub
sbb
daa
int3
iret
and
loopne
mov
inc
mov
jb
inc
sahf
fisubl
push
rcl
je
arpl
mov
push
cmp
cmp
xchg
dec
cwtl
pop
inc
inc
roll
sbb
cmp
cmp
out
xchg
mov
loopne
mov
cld
mov
out
push
test
das
adc
or
es
repnz
in
or
mov
mov
push
sbb
pop
lds
and
popf
jecxz
into
push
pop
jbe
or
cmp
add
loop
xor
arpl
cmc
push
mov
flds
inc
cmp
sbb
test
inc
dec
popf
lret
sbb
or
and
adc
mov
out
xor
xchg
int
mov
mov
cld
pop
push
pop
loop
adc
jge
mov
out
fistpll
cwtl
push
repz
sub
loopne
loope
andb
xchg
inc
and
leave
mov
loopne
pusha
mov
sbb
fists
push
ret
jbe
inc
xchg
in
add
cld
out
sahf
in
sbb
mull
push
out
mov
scas
mov
outsb
fidivrs
mov
ss
test
hlt
test
paddw
out
inc
data16
mov
xor
scas
inc
insl
push
adc
cli
outsl
mov
mov
imul
ror
data16
pop
lahf
ret
mov
cmp
std
or
stos
fcomp
movsb
cmp
lds
je
iret
add
lea
std
mov
ljmp
push
mov
mov
lods
aaa
adc
sub
pop
or
or
fs
notl
sahf
inc
out
enter
inc
jg
aaa
jge
mov
outsb
loope
mov
test
sbb
lahf
push
cmp
inc
fnsave
je
dec
pop
or
push
sbb
dec
subl
fdivs
test
xor
lock
cmp
dec
sbb
add
adc
cld
or
mov
mov
imul
clc
and
jne
xchg
ds
xor
rcrl
sbb
xchg
sbb
xchg
imul
out
aas
mov
jg
mov
sar
testl
xor
pop
or
pop
pop
inc
js
lds
mov
cmp
xor
xor
wbinvd
xor
movsb
xor
fwait
xchg
lret
jne
dec
ss
add
sarl
in
pop
lret
xchg
adc
jmp
icebp
cmpsl
fldcw
mov
lds
mull
xchg
cmc
outsl
add
jne
out
cmp
roll
cmp
out
aam
push
cmpb
ret
jbe
in
inc
test
in
dec
mov
rolb
fdivrs
movsb
lcall
nop
jno
cmp
sbb
and
cmp
gs
ja
push
repnz
sbb
adc
inc
rcl
push
mov
stos
sub
out
mov
leave
xor
xchg
fucomip
loop
inc
jbe
inc
leave
jns
adc
dec
mov
jb
lahf
ja
nop
jmp
jnp
cmp
or
ret
dec
add
repnz
jle
jmp
and
outsb
es
cmp
test
or
fistl
and
mov
movsb
xor
cli
mov
cli
out
mov
lds
fwait
test
xor
js
gs
sbb
push
push
mov
pushl
dec
je
ret
xor
sub
xlat
jne
sarb
mov
sub
jg
cs
loop
mov
jecxz
pop
sbb
jnp
and
aam
add
and
inc
out
out
repnz
mov
loop
stos
mov
dec
jl
mov
mov
adc
cmp
xor
iret
jbe
fiadds
fsubl
inc
jle
mov
and
xor
out
fcoms
xchg
fcomp
outsb
jb
mov
push
push
xchg
imul
out
in
stos
push
jbe
pop
sub
dec
jle
fidivrl
and
add
mov
xor
or
test
xchg
out
cmp
test
imul
out
add
stos
push
test
lret
add
dec
cwtl
xchg
mov
arpl
cmp
add
jno
push
or
push
icebp
shl
or
xchg
das
push
loop
pop
cmp
aam
pop
sub
outsl
cmp
jne
add
es
rorb
js
in
mov
outsl
mov
aam
fldl
ss
jg
dec
jae
fcompl
stos
or
mov
stc
inc
stos
or
mov
xor
sbb
pop
repz
outsl
lret
pop
arpl
lea
pop
adcl
pop
jmp
jno
daa
lret
daa
nop
in
gs
mov
lret
es
sbb
cmp
xchg
lahf
dec
add
inc
xlat
and
add
daa
add
sbbl
jae
in
or
addr16
aas
aas
ror
movaps
fs
pop
push
lds
clc
ret
xor
arpl
shlb
mov
test
add
mov
inc
out
shll
ret
cli
cmc
jae
mov
ror
mov
test
xchg
std
lret
fldz
loop
lahf
jl
xchg
ret
mov
int3
dec
test
mov
test
pusha
jne
cmc
cmp
jb
dec
inc
fwait
aas
add
in
pop
cmpsb
push
lcall
movsl
ljmp
mov
fstl
loop
push
cld
outsl
mov
aad
mov
fsubs
push
pop
enter
stos
andb
inc
dec
xlat
dec
xchg
add
inc
cmp
xchg
ds
dec
lret
fnstenv
in
mov
lret
sub
lods
fwait
jge
nop
cs
lea
sbb
out
ficoml
cmp
addl
mov
push
sub
sbb
cs
mov
sub
mov
out
sar
dec
fcompl
push
jbe
pop
in
rclb
mov
ljmp
push
add
pop
sbb
mov
ljmp
push
jbe
out
mov
fucomp
stos
repnz
pop
iret
lea
arpl
repz
outsb
inc
pusha
xor
lods
jl
xor
mov
int3
cmpsb
in
or
pop
sub
hlt
sarb
mov
mov
into
mov
jnp
sar
jge
push
mov
push
push
pop
fwait
repnz
arpl
or
repnz
push
gs
mov
push
xor
ljmp
stc
es
call
ja
jne
sbb
sahf
sub
movsb
jl
lret
int
aaa
sub
mov
lret
adc
cmp
ror
mov
dec
inc
push
and
cmp
scas
or
out
call
repnz
fisttpl
jbe
add
fstl
outsb
rcr
inc
cmp
or
ret
jl
and
mov
dec
or
pop
xchg
sbb
loop
fldenv
loop
or
shrl
cmp
mov
jg
mov
pop
adc
loope
cld
cmp
add
pop
call
mov
dec
xchg
xlat
pop
or
shrl
inc
mov
jb
push
jbe
mov
mov
pop
sub
xor
notl
push
add
sub
push
sbb
push
add
repnz
arpl
ss
adc
subl
jns
adc
test
xor
iret
add
das
popa
push
push
or
inc
inc
dec
and
fmuls
scas
jmp
cli
imulb
push
jecxz
and
sahf
push
mov
adc
cld
sahf
push
out
pushf
mov
and
mov
stos
inc
inc
imul
xor
cmc
sbbb
add
sbb
or
cmp
lods
aam
inc
and
pushf
test
loop
in
int
pusha
or
inc
push
in
adcb
or
and
sarb
shll
xor
pop
inc
dec
sub
ret
cmp
shll
lods
shrb
divb
call
cmp
ja
loopne
lret
test
into
movsl
xchg
adc
out
jg
es
out
jo
adc
sub
pop
ficomps
rorb
jmp
mov
pop
test
cmp
sub
xor
sub
push
movsb
pop
lcall
mov
mov
mov
aaa
mov
adc
cli
cwtl
pop
les
das
hlt
fs
and
fnstenv
mov
jnp
arpl
fbld
inc
mov
jecxz
sbbb
jo
xlat
je
loop
cs
sub
or
mov
inc
and
sbb
dec
call
mov
aam
cvtps2pd
dec
lods
stos
mov
imul
insb
test
push
pop
stc
test
outsl
sti
std
lcall
push
push
pop
test
and
push
scas
fisttps
stos
aaa
pushf
jno
push
jle
rcrb
inc
mov
aad
xchg
push
mov
xchg
dec
adc
movsb
add
ss
aas
pop
mov
fs
cmp
mov
aas
dec
je
mull
jg
xor
cld
push
popa
mov
ds
lcall
daa
mov
ds
sbb
test
sub
je
cmpsl
movsl
lds
xor
jp
jb
adc
repz
and
sub
mov
dec
pop
rcl
loope
js
cmp
test
in
cmpsl
outsb
sbb
test
sbb
test
clc
cmpl
in
mov
out
je
and
scas
inc
test
bound
push
jno
out
inc
sub
push
xchg
mov
push
fst
dec
mov
sbbl
push
cs
lret
lret
stos
add
sbb
lods
push
mulb
cmp
ret
push
mov
lock
loope
jge
fs
adc
aam
dec
out
sbb
mov
mov
xchg
inc
cld
addr16
jbe
loope
leave
ffreep
out
stc
add
addb
arpl
ret
mov
popa
insb
das
adc
xor
xor
cwtl
xlat
xchg
fsubp
sbb
add
lcall
mov
vmovlps
add
cmc
add
lods
popl
dec
mov
and
sbb
cmp
jns
pop
lock
mov
mov
push
das
pushf
xor
inc
and
sub
xchg
pop
popa
xchg
repz
lods
pop
pop
pop
mov
shrb
pop
test
xchg
jecxz
mov
pop
push
test
gs
pop
adc
arpl
dec
dec
test
and
xor
lods
es
addr16
and
cld
lods
lods
push
pusha
mov
sbb
jns
jae
xchg
mov
mov
add
jp
addb
pop
notb
push
pop
inc
sbb
int3
or
rorb
inc
andl
xchg
mov
nop
leave
lods
jg
daa
call
pushf
mov
call
and
sti
mov
mov
jge
bound
pop
sbb
pop
mov
mov
fwait
insb
movsb
subl
repnz
ds
cwtl
push
inc
xchg
inc
ds
xor
imul
add
dec
bound
pop
xchg
loopne
push
cmp
sahf
cmp
ret
mov
pop
xchg
pushf
enter
dec
jbe
lahf
pop
loop
sbb
sbb
hlt
jmp
sub
mov
fs
std
stos
movsb
fdivl
cmp
test
adc
loopne
nop
insb
rol
mov
and
cmp
jle
shll
mov
cltd
pop
add
xchg
mov
mov
shl
xchg
jo
outsl
cmp
push
adc
test
test
sbb
mov
enter
pop
sbb
mov
test
imul
jl
daa
push
stos
add
stc
inc
enter
and
addr16
daa
cmp
clc
jecxz
push
popl
xor
push
test
fldl
push
jae
sub
hlt
and
push
lahf
push
push
inc
jmp
dec
aam
mov
lahf
dec
mov
xor
inc
dec
jmp
xchg
jp
lret
dec
mov
mov
or
and
inc
das
imul
loop
sub
insl
push
dec
xor
sar
xor
ljmp
sub
jne
enter
xor
add
addl
aas
jmp
outsb
mov
data16
and
mov
sbb
mov
nop
pop
pop
arpl
decb
xchg
or
or
enter
adc
cmp
pop
rclb
sub
mov
dec
or
aaa
xchg
mov
notb
cmp
adc
xor
sar
adcb
cld
xchg
push
outsb
jo
fincstp
ljmp
loope
and
cmpsb
push
pop
stos
imul
dec
pop
adc
sub
in
outsb
dec
add
or
sub
mov
repz
lret
inc
std
or
movsl
loope
xorb
mov
or
aaa
sahf
fidivl
xchg
lret
cmc
push
fmul
pop
push
xchg
or
ljmp
mov
shll
imul
insl
xor
xor
adc
xchg
jg
and
orl
push
mov
fs
inc
push
push
push
pop
sahf
fisttps
xorl
cmc
lret
dec
movsl
cmc
scas
sbb
call
mull
ja
int
mov
jmp
rorl
aam
and
in
int3
cmp
aam
lret
les
xchg
adc
addr16
sbb
loop
lods
dec
inc
fmuls
add
mov
inc
fisubrl
scas
insl
data16
ds
adc
pop
dec
pop
cmovbe
inc
add
les
lret
pop
push
inc
sbb
dec
and
in
jne
push
sbb
test
lods
mov
fsts
xor
shrl
mov
pop
mov
xlat
dec
inc
cld
and
cli
mov
cmp
pop
sub
sbb
lods
xor
shlb
sub
cltd
imul
sbb
push
mov
popf
ret
dec
mov
sbb
ds
dec
mov
mov
mov
leave
fstpl
pop
mov
jmp
push
dec
out
add
out
cmc
fs
and
inc
mov
adcl
pop
lods
sbb
xchg
test
pop
in
rclb
aam
arpl
push
jno
pop
sub
pop
ds
imul
push
pop
mov
pop
insl
aam
mov
cmp
inc
inc
loope
mov
sub
fists
pop
cmc
lahf
sbbb
jle
xor
pop
js
scas
xor
or
int
in
test
std
lcall
ss
mov
adc
and
push
sbb
xchg
int3
sub
jp
fmuls
test
sbb
cmc
lods
daa
pop
int
sahf
xor
xorb
jbe
int3
popa
jns
sbb
push
stc
jg
or
push
pop
add
xchg
or
arpl
xchg
jg
or
inc
out
dec
faddl
inc
imul
sub
out
loopne
xorl
or
popa
imul
cwtl
dec
imul
jo
test
push
in
xlat
pop
lea
arpl
mov
adc
xchg
test
subl
push
xor
pop
aas
and
out
inc
ret
lahf
jbe
sbb
pop
xor
mov
cmpb
inc
and
fisttpll
pop
dec
adc
jl
mov
mov
xchg
dec
repz
pop
popa
jnp
jl
repnz
popa
clc
sbb
mov
push
push
insb
fdivrl
idivl
out
es
push
mov
pusha
jle
jle,pt
lcall
xor
or
bound
lea
xor
cmpl
loopne
mov
data16
test
fsubs
sbb
in
xchg
sbb
aas
dec
xchg
adc
mov
fs
lahf
mov
push
sub
bound
jnp
fs
pop
xor
out
jns
jb
jne
mov
inc
pusha
call
in
lret
inc
pop
lret
std
dec
push
inc
push
clc
movsb
out
aam
xchg
mov
fnstenv
or
popa
repz
cmp
lds
arpl
in
icebp
pop
or
fimuls
lcall
shrb
cmpl
sahf
inc
cli
int3
or
mov
mov
adc
loopne
loope
test
adc
pop
cmc
mov
in
arpl
pop
int
sahf
cmp
lcall
ds
xchg
int3
sbbb
xlat
sarb
cmp
sbb
loop
mov
pop
push
popf
pop
ljmp
push
cmc
mov
aad
jecxz
xchg
xchg
loop
xchg
fs
mov
cmovp
int3
mov
dec
or
addr16
mov
mov
bnd
clc
in
nop
cmpsb
ljmp
in
testl
cmp
lock
rcll
mov
leave
inc
dec
mov
push
subl
inc
rcrl
cmpsb
orl
test
insb
cmpsb
insb
and
loope
int
mov
sbb
sbbb
pusha
inc
xorb
addr16
outsb
nop
lahf
pop
mov
rcll
dec
cmpsb
push
xchg
push
jbe
xlat
jmp
movsl
je
sub
insl
sbb
sbb
dec
mov
push
fistl
mov
jo
fmulp
mov
sub
pop
cmc
jle
xor
pop
out
addb
scas
mov
popf
cs
jne
test
push
mov
and
and
in
push
rcrl
sbb
inc
lds
rolb
enter
stos
inc
shll
mov
sub
hlt
xlat
das
mov
dec
bound
xor
ljmp
dec
daa
push
lds
out
mov
lret
lahf
dec
mov
les
xor
jo
loopne
mov
jmp
and
sub
adc
inc
sbb
dec
jo
mov
test
dec
push
popa
mov
bound
or
or
pop
mov
shrb
ja
inc
jnp
mov
mov
in
ret
jecxz
mov
std
sbb
jg
sbb
dec
pop
popf
fmuls
sub
xchg
mov
sub
sub
shl
int
je
adc
push
in
pop
in
in
fsubs
adc
pop
xchg
cmpsl
cld
xchg
adc
daa
xor
lret
dec
push
mov
xor
add
mov
mov
shrl
aaa
jb
mov
and
or
jg
aad
sbb
mov
js
call
cli
gs
jnp
pop
adc
or
mov
lret
aaa
and
call
and
add
jecxz
call
mov
cmc
cmp
or
adc
jno
pop
fwait
ret
or
jg
int3
cmpsl
pop
enter
jge
cmp
mov
adc
iret
cmp
call
adc
cmp
and
fadds
jp
testl
push
jb
daa
cmc
xchg
mov
xor
int3
jae
cltd
adc
sahf
fwait
mov
sub
dec
andb
ret
mov
xchg
ljmp
dec
call
push
jge
dec
dec
fcoms
xchg
mov
mov
in
mov
xorl
arpl
dec
lahf
xlat
inc
cwtl
ljmp
xor
jne
rcll
lret
scas
test
inc
in
leave
out
push
xor
jp
jmp
inc
js
lock
xchg
push
or
pop
xchg
and
stc
mov
mov
cmpsb
fwait
int
ret
lret
mov
jo
insb
loop
pop
js
and
into
sub
add
in
cmpsb
ljmp
pop
cli
push
xchg
nop
scas
mov
lret
lods
das
mov
mov
aam
test
mov
testl
ret
fdivs
in
rcrb
adc
mov
lret
mov
ficomps
sar
sub
inc
in
adc
jp
nop
ret
or
fisubrl
jmp
pop
addb
fildll
mov
adc
cmp
aas
xlat
ret
xor
arpl
xchg
daa
iret
aam
or
or
test
movsl
jo
adc
jle
sbb
insb
inc
jne
insb
stos
loope
xor
xchg
adc
push
mov
pop
jge
ret
mov
stos
fs
fistl
xchg
xorl
mov
add
repnz
in
adc
inc
fdiv
pop
mov
dec
insl
xchg
stos
add
mov
mov
adc
ljmp
enter
daa
pusha
movsb
and
inc
sbbb
decb
mov
inc
ds
and
subl
mov
fnstsw
enter
mov
mov
push
sbbl
sarl
dec
aam
loopne
adc
ss
int3
stc
cmp
mov
inc
mov
cs
lcall
dec
movsl
mov
xchg
sbb
lret
jns
pop
ss
into
push
cld
and
movsb
push
inc
mov
aas
popf
ja
int
sbb
add
into
std
push
xor
popa
cli
add
lret
xchg
in
jb
jns
cmp
fistpl
jmp
inc
mov
jmp
push
das
jns
lret
adc
test
cltd
mov
xchg
mov
adc
jae
outsb
pop
or
xchg
sahf
mov
lock
mov
test
sbb
sarl
divl
fwait
cmp
inc
outsl
mov
mov
xor
push
test
inc
xchg
or
insb
dec
xchg
mov
data16
enter
push
test
mov
xor
int
xor
cmp
mov
call
in
enter
xchg
outsb
cli
add
lods
fbld
sbb
int
push
jl
shll
aam
repz
sub
cwtl
inc
rcrl
add
popa
or
inc
cwtl
adc
lcall
jge
jne
cmp
jg
enter
add
and
daa
xor
enter
dec
mov
ror
in
je
rcrl
cwtl
sbb
push
push
pushf
inc
add
jbe
or
lret
pusha
test
lret
mov
aaa
test
insl
pop
xor
aas
popa
dec
pop
sbb
imul
sub
in
gs
div
jp
and
mov
std
push
jae
pop
dec
or
lret
cwtl
pop
cld
testb
sbb
fmuls
push
fstl
fisubrs
imul
cmpsl
xor
data16
les
and
or
out
popf
mov
xchg
stos
add
sub
les
fcoml
mov
test
sub
xor
cmp
xchg
xor
or
enter
sbb
orl
aas
or
dec
inc
xor
cmp
cltd
shll
aad
dec
testl
sbb
mov
inc
or
xchg
adc
iret
mulb
push
sbb
dec
mov
pop
pop
fimuls
sub
aas
jmp
cmp
mov
mov
push
mov
mov
jae
adc
stc
scas
inc
push
mov
cmp
aaa
rcll
sti
dec
sbb
int3
jno
jmp
jmp
dec
les
movsl
imul
dec
mov
mov
mov
fcomip
dec
push
xchg
mov
or
pop
rcl
add
lret
seto
cmp
sub
iret
inc
sahf
icebp
std
fwait
pop
inc
rcrl
jle
outsl
push
js
in
cltd
mov
inc
leave
ret
aad
call
ret
xchg
cmp
test
addb
movb
imul
jp
dec
mov
jne
push
repz
pusha
xor
pop
or
imul
repz
sub
lods
shlb
lods
call
cmp
sub
cmp
out
mov
int3
ffreep
pop
ljmp
rcll
es
jbe
lods
hlt
sbb
js
mov
or
arpl
lcall
loop
outsl
int
mov
pop
push
xchg
sub
sbbl
fwait
lret
push
fcmovnu
dec
fstsw
insb
js
and
movsb
pop
push
adc
nop
outsb
hlt
pop
or
ret
cmp
cmp
mov
cltd
inc
sub
shll
or
add
push
mov
xor
xchg
and
insb
xchg
pop
xchg
xor
addr16
sub
outsl
sbb
arpl
sub
cmp
imul
xchg
xchg
outsl
pop
lret
shll
out
jl
fsubs
inc
into
testb
fmuls
mov
cmp
xchg
mov
add
xchg
pop
rorb
mov
sub
xchg
out
adcb
ret
dec
es
das
pop
xor
sbb
mov
mov
push
xchg
es
mov
add
jae
jne
cs
adc
lds
push
push
out
outsb
test
pop
and
out
or
mov
shll
push
mov
int
mov
add
pop
aam
mov
pop
push
and
loopne
xor
scas
aas
rorb
push
mov
cmpsb
mov
jnp
popf
sub
dec
scas
hlt
pushf
rorb
mov
adc
fistpl
pop
shll
aam
mov
sbb
push
shlb
insl
out
test
xor
popa
repz
and
sub
imul
sub
fisttps
in
mov
bound
fcompl
inc
call
inc
in
fstp
aam
aas
sahf
pop
inc
scas
mov
outsl
pop
cmp
bound
mov
jnp
pusha
cli
add
test
push
or
cmp
loop
mov
push
xor
mov
fcmovne
adc
fcoml
fistps
add
je
es
sub
adcb
xchg
cld
jmp
sub
push
mov
and
lods
add
scas
push
xchg
mov
add
aad
and
js
fsubr
lods
fldcw
iret
jno
ror
pop
or
add
call
js
insl
daa
rclb
ret
sub
xchg
divl
jmp
pop
lcall
int3
mov
notl
push
or
sbb
push
and
cmp
sti
pop
xchg
mov
nop
pop
stos
pop
pop
sbb
mov
pop
test
mov
enter
inc
or
in
decb
js
sbb
pop
lea
jno
adc
xor
ss
ficomps
xlat
mov
pusha
es
cmc
or
sbb
fs
sub
fmuls
test
pushl
lret
sub
fiadds
and
dec
xchg
and
in
push
cmp
sub
add
jbe
inc
loope
add
dec
int3
jnp
out
dec
fs
fnstsw
xchg
xchg
pop
test
int3
pop
loopne
mov
loopne
and
iret
push
jp
nop
lods
xchg
call
ret
les
dec
sar
xlat
stos
xchg
dec
dec
dec
fidivs
xchg
roll
adc
andl
into
scas
mov
adc
sub
pop
sbb
cmp
push
mov
add
ret
jecxz
adc
xchg
jbe
mov
mov
inc
push
push
push
mov
ds
mov
sbb
xchg
lret
lret
int
nop
or
and
mov
cmp
dec
jns
cs
and
rorb
setbe
movsb
and
scas
sbb
push
push
jbe
call
dec
sbb
fmulp
jne
cmc
into
xor
or
xchg
sbb
stos
rdtsc
inc
divb
pop
daa
les
xchg
xorl
push
push
popa
ljmp
es
in
movl
inc
dec
add
fimull
addr16
cmp
add
dec
cmp
inc
jle
inc
xlat
jno
jle
sub
inc
icebp
dec
mov
adc
sbb
imul
aaa
je
aam
mov
jl
cli
and
push
insl
fisubl
or
rcl
fldt
jb
push
hlt
roll
add
dec
shl
in
sub
and
xchg
scas
mov
mov
mov
and
inc
mov
sub
out
push
xchg
and
mov
inc
rep
add
and
cmp
fmul
cs
add
or
jmp
xchg
inc
js,pn
pop
movsl
xor
dec
adc
clc
sbb
pop
mov
jmp
enter
add
test
fmull
lods
mov
shll
adc
fisubrl
push
imul
imul
popf
out
pop
nop
or
cmpl
out
mov
lock
xchg
lea
lods
inc
lock
cmp
jnp
fstpl
pop
pop
aam
scas
lock
je
sbb
pop
sub
rolb
repnz
or
fsubs
xor
mov
in
fistpl
sbb
mov
xchg
xchg
xchg
jle
loop
pusha
pop
cmp
repnz
cmp
pop
add
jb
filds
push
movsb
inc
insb
xchg
into
lods
out
add
jl
cmc
jecxz
lea
xor
mov
xchg
jge
pop
lret
push
insb
ficompl
adc
in
js
inc
add
pop
push
lock
jl
inc
lods
cmc
call
fisttps
sbb
jo
loope
je
daa
lret
pop
rcrb
bnd
pushf
test
in
fidivs
mov
daa
aam
add
sahf
inc
ds
sti
imul
fdivs
and
xchg
arpl
negl
mov
xlat
int3
push
call
insb
mov
loop
pop
popl
xor
or
jg
adc
push
jecxz
mov
jns
out
mov
daa
mov
es
inc
out
test
push
pusha
push
add
mov
filds
sahf
mov
push
add
xchg
sbb
mov
adc
lods
sub
out
cli
or
push
inc
xor
ja
sbb
jne
inc
xchg
push
xor
mov
fucom
lods
push
push
rorb
mov
jb
add
cli
mov
mov
pop
sbb
pop
mov
and
les
stos
fcoms
pop
pop
mov
mov
push
ficompl
mov
pop
pop
pop
xchg
cld
mov
imul
int
mov
fwait
adc
inc
pop
movsl
testl
clc
cmc
pop
aaa
les
cmp
lods
xor
cwtl
aam
popa
xor
ret
sti
ds
pop
fistl
push
xchg
adc
lea
std
adc
pop
cmp
test
outsl
test
mov
fidivl
inc
arpl
rclb
inc
jne
imul
es
adc
or
mov
sub
or
insl
adc
inc
adc
pop
jae
mov
hlt
and
ficoms
mov
shrl
jmp
xor
pop
and
cmp
adc
dec
push
mov
mov
push
push
mov
out
xchg
mov
sti
adc
push
fistps
xor
sub
adc
dec
jl
dec
jb
loop
pusha
movsl
push
aaa
push
xchg
loope
cs
push
shll
dec
mov
fucomp
std
sar
or
mov
loope
mov
pop
in
test
sub
cli
fmulp
notb
nop
mov
inc
lcall
test
jmp
jle
in
flds
pop
push
push
push
iret
aaa
and
jle
dec
push
mov
je
pushf
add
or
dec
in
mov
adc
mov
test
mov
hlt
lcall
es
cwtl
adc
adc
lret
and
test
inc
cmc
mov
mov
outsb
inc
add
jp
lret
fcmove
jmp
xchg
sbb
lock
add
pop
popa
insb
lret
adc
inc
mov
add
jecxz
icebp
aad
popf
push
xchg
mov
xor
cmp
jne
lea
or
cld
dec
xchg
test
dec
fistl
aam
xchg
fistpl
mov
fnstsw
pop
sub
ljmp
adc
mov
daa
daa
loop
lea
mov
xor
push
or
or
cmp
in
arpl
cmp
fwait
lret
sahf
jle
cmp
pop
adc
mov
xor
dec
and
bound
adcl
ficomps
mov
xor
jo
inc
cmp
xchg
inc
outsl
or
dec
pop
in
mov
fistpl
and
and
mov
push
pop
movsl
outsb
imul
and
lods
lock
and
add
mov
pop
gs
orl
sarb
outsb
sbb
jns
mov
pop
jbe
outsb
mov
outsl
repz
mov
push
pop
cmp
and
and
inc
shr
adc
inc
adc
movsl
leave
movsl
mov
ret
shlb
push
xchg
add
imul
adc
bnd
mov
adc
test
shll
xchg
and
xchg
das
add
push
shll
mov
xor
adc
jmp
mov
ja
shlb
and
dec
pop
insb
inc
in
int3
aaa
xchg
js
xchg
fcomps
push
lea
dec
sbb
fstps
sbb
sarl
divb
inc
movsb
or
sti
out
insl
inc
jmp
ror
icebp
ds
shrl
shlb
mov
gs
or
and
mov
xchg
hlt
push
jecxz
sbb
sbb
int
adc
arpl
scas
mov
dec
aam
mov
inc
int
pop
out
push
pop
mov
test
or
in
xor
or
mov
sub
inc
std
js
or
aaa
js
or
mov
dec
cmp
in
xor
loop
inc
addr16
mov
lods
mulb
in
add
cmpsb
inc
jg
cltd
jmp
lock
push
mov
add
or
jno
mov
push
scas
les
pop
clc
movsb
stos
pop
in
pop
pop
inc
xchg
dec
xchg
in
outsb
or
movsb
xor
mov
xchg
and
bound
sbb
jo
add
inc
jp
sbb
mov
movb
fnstcw
mov
push
push
cmpsb
jbe
mov
mov
inc
mov
dec
cmpsb
scas
xchg
dec
jmp
or
fmul
dec
sbb
or
mov
les
xor
jmp
movsb
jbe
enter
and
push
cmpb
push
lret
fadds
jp
js
dec
fsubs
aam
dec
mov
je
ja
out
xchg
icebp
mov
dec
std
push
subb
cli
shrl
fisubrs
data16
add
testb
clc
pushf
scas
mov
pop
cli
scas
cmp
in
in
cmpsb
lret
sahf
sbb
inc
cmp
cmc
jmp
jle
add
xor
xor
pop
inc
mov
faddl
or
testb
mov
push
dec
je
adc
int3
jmp
aaa
addr16
cmp
adc
aaa
push
loop
mov
cs
negb
jecxz
int3
xor
xor
decl
mov
dec
je
icebp
in
push
sbb
clc
mov
lcall
cmc
push
cltd
pop
mov
fcomip
cmpb
pop
jg
scas
dec
xchg
lret
insb
int3
xor
pop
mov
frstor
mov
jp
pushf
rcrb
xchg
xchg
into
insl
psubusb
iret
mov
dec
or
adc
imul
decb
pop
jmp
pop
xchg
pop
push
iret
push
popf
testl
inc
dec
jmp
ljmp
addr16
popa
push
mov
pop
call
lcall
dec
rorb
daa
push
pop
loop
out
dec
addr16
inc
jle
xor
or
cmp
pop
fnstcw
mov
add
adc
dec
movsb
movsl
adc
loop
pop
imul
stos
xchg
cmp
lds
add
mov
push
loope
lods
std
aas
test
add
ret
sub
jns
in
mov
lods
paddusb
aad
ja
dec
scas
jge
pop
cmp
xchg
jmp
ljmp
adc
xchg
or
pop
mov
xchg
cmp
dec
mov
cmp
and
movsl
adc
lds
jmp
ljmp
mov
adc
outsb
mov
addr16
inc
cmp
clc
pop
or
push
xchg
pushf
sub
rclb
adc
or
mov
dec
mov
mov
repz
push
add
popa
add
xor
jne
stos
add
cmp
test
jl
lods
xchg
lret
divl
cli
and
call
xchg
push
mov
out
stos
fdivr
pop
jl
jecxz
mov
cs
lahf
pop
dec
fsubrl
leave
sbb
mov
cwtl
out
call
fidivrl
pop
push
dec
std
ja
fistpll
jl
push
sbb
and
dec
jp
and
int3
pop
rorl
ljmp
aad
imul
mov
pop
mov
shrb
jl
push
fstl
adc
lea
push
dec
inc
and
inc
imul
jo
xchg
ficoml
mov
sti
ror
cmp
xor
pop
leave
cmp
notb
xchg
aas
adc
popa
pop
jb
cmpsb
mov
ja
enter
mov
xchg
notl
and
or
mov
sbb
setbe
mov
sbb
jecxz
pop
xor
mov
or
out
mov
dec
push
sahf
or
into
loopne
and
dec
aas
adc
data16
ljmp
pusha
insl
jge
jo
sub
in
or
xchg
mov
push
mov
cli
xchg
sbb
pop
mov
dec
jnp
cld
ret
mov
fcomip
push
sahf
xchg
jge
repz
call
test
xchg
lret
sahf
pop
push
jg
fsubrp
push
inc
sub
fsubs
inc
jp
gs
in
add
mov
push
push
inc
cmp
mov
push
sbb
mov
pop
add
dec
cmp
inc
sub
jb
adc
mov
loop
inc
lock
dec
adc
inc
push
inc
fsubrl
data16
std
or
cli
cmp
sbb
push
pop
cltd
int
mov
popa
xchg
pop
xor
mov
insl
push
enter
mov
mov
push
es
xchg
mov
pop
push
lcall
clc
mov
scas
xchg
xlat
bound
inc
pop
mov
mov
ficoml
dec
cmp
mov
mov
stos
adc
fcomps
and
push
cmpsl
pop
adc
fsubrl
sub
push
movsl
sbb
and
and
mov
popa
mov
lods
mov
js
adc
cs
ljmp
ret
cwtl
push
push
or
push
nop
ficoml
mov
and
stos
loopne
imul
sbb
jp
jns
jle
push
scas
out
or
cld
pop
cs
lahf
pop
addb
push
insl
ret
and
push
sbb
sbb
jmp
inc
jl
insl
xchg
fidivs
or
ficoms
out
cs
push
and
push
aaa
sti
insl
mov
fwait
mov
dec
dec
jge
add
and
xor
sub
jmp
and
clc
cmpsb
aaa
sub
mov
out
sub
int3
bound
xor
sarb
fistpll
jns
sahf
popf
rcrb
push
cwtl
mov
rol
aad
jmp
int
pushf
ds
out
xchg
insl
mov
cmp
data16
mov
aaa
sub
xchg
jl
mov
lret
cmp
outsb
sub
leave
aam
pop
out
shrb
add
push
popa
lcall
add
sbb
add
xchg
or
mov
ljmp
push
sahf
sub
mov
std
xor
pop
pop
in
jmp
cwtl
rorl
fstps
push
arpl
fildl
add
cmc
lret
and
clc
iret
add
adc
and
test
sub
nop
dec
push
mov
rol
jl
mov
iret
stos
jecxz
popa
fistpll
adc
pop
pop
hlt
test
inc
stos
insb
cmpsl
xchg
push
outsb
push
cwtl
add
xchg
jmp
mov
sbb
inc
mulb
das
clc
outsb
lods
adc
cwtl
sub
sbb
mov
jbe
lahf
and
mov
fldl
fcomp
cmp
xchg
lahf
aam
xorb
movsb
test
sbb
xor
out
aaa
movl
stc
sbb
xchg
adc
jnp
loop
sbb
push
arpl
int
aaa
sbb
pop
repz
cld
out
cli
inc
aaa
dec
jne
pop
subl
fistl
pop
sahf
mov
lock
aam
push
movsb
add
movsl
and
hlt
lock
jnp
push
mov
int
mov
std
daa
jne
pop
jle
jno
jae
call
imul
loop
jnp
repnz
insb
in
loop
divb
fldpi
popa
pushf
insb
push
add
inc
je
fnstsw
scas
or
jle
jne
fldl
dec
mov
lret
bound
iret
push
fisttps
popf
xor
lock
fidivl
xchg
repnz
cmpsl
cltd
sub
outsl
repz
sub
push
add
insb
stc
jl
test
stos
les
enter
xor
fisttpll
scas
nop
ret
pop
pop
shrl
cmp
inc
orb
insl
mov
loop
cwtl
and
and
ds
aas
scas
lods
cmc
jne
mov
mov
xor
call
add
cmp
nop
add
push
clc
outsl
add
add
arpl
jns
jbe
sub
mov
in
js
cltd
pop
and
pop
ljmp
mov
cmp
iret
sub
lods
arpl
cmp
pop
jo
clc
push
adc
mov
lea
fisubl
stos
sbbb
xchg
adc
sub
jg
adc
pop
mov
out
xchg
jge
cmp
mov
push
inc
cmpsl
adc
mov
or
dec
rcrl
ljmp
inc
mov
shl
mov
sbb
sub
imul
xchg
enter
xchg
jae
mov
ret
or
imul
int
test
mov
push
cs
dec
push
push
fwait
mov
cmc
dec
xchg
sub
cmpsb
mov
insl
loopew
ret
mov
in
sub
sbb
sub
bound
inc
push
and
xor
adc
movb
cmc
pushf
push
bound
adc
cmc
or
jmp
jmp
stos
xchg
leave
sub
jmp
jae
imul
repz
daa
iret
cmpsb
sar
movsl
cmc
add
and
in
stos
mov
xor
cwtl
sub
test
sub
lock
data16
adc
daa
stc
jae
push
pop
pusha
imul
or
in
sbb
xlat
add
push
or
mov
push
in
es
ficoml
cmpsl
mov
cmpsb
pop
lahf
and
pop
cmp
into
mov
scas
inc
pusha
pop
in
cwtl
ficomps
fnstsw
in
insl
or
mov
or
cmp
inc
mov
jp
jb
xchg
fimuls
xchg
dec
mov
pop
add
sub
in
pop
test
in
sub
mov
add
push
loopne
sub
fcmovnu
addb
mov
mov
mov
insl
into
addr16
xlat
insb
push
int3
sbb
loopne
sub
es
push
sub
jbe
rcl
inc
ret
cld
pop
sub
and
mov
mov
xchg
call
lods
mov
adc
sub
cmpsb
push
lret
sub
inc
ret
jl
call
inc
fs
push
std
scas
in
sub
xlat
insl
popf
mov
mov
xchg
adc
mov
dec
lods
add
fwait
add
lcall
popa
call
mov
pop
arpl
adc
hlt
pop
lret
mov
mov
sbb
and
std
mov
das
mov
pop
dec
push
push
ss
and
cltd
push
neg
jl
pop
aas
and
outsb
xor
dec
jp
xchg
fldt
movsb
popf
inc
movsl
or
sti
arpl
faddl
popa
dec
pop
adc
aam
sub
jno
clc
xor
lods
out
ja
inc
adc
xor
insb
pop
andb
inc
aam
es
out
push
mov
adc
dec
repnz
jno
push
cld
adc
and
adc
fisubrs
xchg
xchg
es
or
dec
xor
fs
or
cld
mov
mov
jmp
xor
sahf
lock
mov
test
jo
decb
aad
cmpsb
inc
dec
pop
push
inc
aam
and
out
ds
fs
ljmp
stos
repnz
sarb
xchg
mov
xchg
adc
inc
stos
push
call
jle
cmp
stos
sbb
hlt
mov
int
scas
inc
jmp
arpl
push
test
shl
fs
lods
lret
dec
rcll
arpl
sub
pop
jne
aad
pop
push
inc
dec
js
stos
sbb
ret
pop
adc
sbb
adc
mov
mov
stos
dec
xchg
sub
pop
adc
cli
pop
scas
sbb
pop
dec
pop
xchg
jbe
xor
data16
jae
pushf
adc
and
gs
cmpsb
push
jg
jmp
jmp
fimuls
mov
jae
jb
mov
movnti
mov
and
inc
sub
dec
xor
ficoml
adc
test
jne
inc
pop
mov
insl
xor
jb
stc
xor
bound
push
sahf
lods
out
sub
or
icebp
fs
repnz
xorl
ficoms
cmp
mov
add
jb
or
and
jbe
in
inc
sub
push
push
insl
ds
cmpsb
push
push
xchg
movsb
in
les
test
int3
lds
fsubs
gs
jnp
mov
outsb
cmp
and
cmpsl
jg
imul
push
jae
mov
push
into
lods
sbb
rorl
std
push
mov
pop
push
xchg
loope
push
xor
xor
mulb
test
xor
sbb
inc
aad
cmpsl
add
negl
add
xor
popf
ret
sbb
mov
lahf
decl
pop
sahf
xchg
gs
stos
mov
xchg
mov
std
sahf
mov
adc
andl
jg
out
mov
rorl
push
inc
add
imul
mov
push
es
jb
xchg
gs
push
cmpsl
push
into
mov
stc
jecxz
dec
jge
jl
cmpsl
add
pop
mov
pop
das
add
cltd
insb
movsb
cmp
out
inc
inc
sub
divb
sbb
jmp
jmp
fs
xor
pushf
mov
xor
sub
std
shll
mov
push
xchg
mov
sub
cwtl
fs
js
mov
xchg
scas
lds
inc
cmp
movl
inc
xor
mov
ds
test
dec
xchg
js
int
adc
in
inc
rcll
sti
push
adc
in
pop
mov
pop
inc
es
xchg
cmpsl
push
pop
push
arpl
daa
push
addl
fucomi
fwait
cmpsb
les
cmp
ljmp
mov
out
mov
leave
pop
jecxz
movsl
aad
pop
nop
ss
mov
add
and
or
fistl
fldenv
out
ss
roll
lret
out
gs
jp
sbb
push
mov
xchg
imul
or
jbe
sub
jp
popa
and
push
xor
jge
inc
pop
mov
jle
inc
rcl
pop
xor
daa
push
fldcw
adc
test
out
pop
pusha
mov
out
mov
xchg
mov
sub
lea
add
adc
cmp
and
icebp
xchg
sbb
cmp
xor
jg
sbb
adc
shr
cli
mov
cmpsl
adc
cmp
in
push
xchg
xor
inc
adc
in
xchg
mov
loopne
pop
ljmp
shl
adc
push
movsl
jbe
mov
mov
ret
jns
das
and
and
aam
adc
add
push
mov
add
dec
daa
sbb
ss
dec
jo
cs
cmc
lret
std
fistpll
mov
sbb
popf
jno
xlat
inc
xor
mov
subl
movd
repnz
ret
cmp
xchg
das
roll
imulb
xor
sbb
arpl
mull
cmpsl
xor
xor
xor
lahf
inc
in
loop
push
cmp
jecxz
mov
inc
pop
mov
in
sbb
cmpsb
loopne
bound
fdivrs
dec
mov
cmp
mov
ljmp
push
lods
rolb
sub
mov
call
inc
xchg
mov
mov
push
faddl
pop
dec
test
xor
mov
or
xchg
pop
pop
loop
jmp
into
pop
push
sbb
mov
rcrb
or
nop
hlt
add
icebp
xchg
push
stos
adc
cmp
dec
maxps
lds
mov
xrelease
shrl
push
ret
add
loop
loope
mov
pushf
and
pop
add
es
ljmp
outsb
or
add
xchg
fistps
mov
and
jle
push
mov
dec
sahf
push
inc
andb
push
push
insb
add
int
loopne
push
adc
fadd
cli
and
xlat
lret
jnp
jae
test
sbb
scas
jns
into
add
mov
ja
cmp
adc
repz
pushf
bound
idivl
mov
leave
mov
xor
mov
popa
rclb
rclb
add
mul
repnz
out
out
aaa
cs
jne
ljmp
clc
jo
clc
xchg
cmp
and
and
shrl
sarl
aas
jecxz
inc
fstl
push
neg
adc
mov
adcb
pusha
into
add
out
sub
cld
pusha
ss
insl
mov
push
mov
shrb
aad
insb
dec
mov
jl
push
jo
cmc
in
cmp
loope
fsubrl
mov
ja
das
arpl
mov
push
stos
addl
enter
fcmovnb
adc
and
subb
push
xor
adc
adc
jl
add
xlat
adc
pop
pop
in
cmp
fnstcw
in
adc
imul
adc
movsb
sar
out
pop
mov
xor
repnz
adc
pushf
cmp
mov
cmpsb
xchg
gs
jmp
inc
scas
and
sbb
lcall
mov
mov
sub
and
imul
imul
pop
sbb
in
inc
jecxz
mov
or
xchg
insb
jle
leave
aam
lcall
mov
rcl
daa
frstor
dec
sbb
fucomip
jecxz
jns
jg
loopne
xor
test
mov
out
push
mov
icebp
test
pop
xchg
jb
ret
mov
pop
test
aaa
push
push
push
test
add
in
shlb
jo
cmp
cld
in
imul
pop
push
xor
xchg
mov
and
cmp
mov
sub
dec
popf
sahf
stos
mov
call
outsl
jo
int3
in
adc
sbb
xchg
push
lret
pop
mov
or
mov
sbb
roll
imul
imul
sub
repz
stos
sub
frstor
adc
aaa
mov
push
sarl
ret
xlat
cltd
gs
cli
icebp
pop
aad
xchg
push
loope
mov
or
iret
pop
xor
bound
pop
scas
inc
cmp
loope
xor
mov
mov
and
fisttpll
mov
push
mov
cmc
add
fs
pushf
cwtl
test
pop
mov
jno
mov
scas
leave
sbb
lock
movsb
pop
or
movsl
push
cmp
push
jecxz
inc
and
add
mov
dec
aam
test
sub
jnp
call
xor
lea
or
lahf
cmp
mov
xchg
pop
cld
mov
dec
test
jle
sbb
mov
hlt
mov
out
inc
test
push
fcmovb
mov
xchg
add
adc
or
or
andb
fsubr
add
out
jecxz
adc
dec
lret
rolb
jl
inc
adc
jo
les
sbb
popf
sub
insb
lds
out
mov
icebp
cmp
hlt
pop
out
outsb
repz
ds
lahf
call
ror
fcoms
add
jp
xchg
and
scas
nop
inc
addr16
mov
push
cwtl
adc
and
mov
je
inc
jmp
xor
aas
push
push
or
cwtl
daa
in
gs
adc
mov
in
rcrb
xchg
test
mov
cwtl
mov
popa
mov
cmc
inc
pop
lret
mov
sti
popa
xchg
cmp
in
pushf
mov
aad
pop
hlt
sbb
push
inc
test
sub
mov
mov
lods
xor
push
es
pushf
cwtl
push
scas
pop
hlt
cmpsl
int3
gs
fs
or
push
cmpsl
fs
mov
sub
xor
mov
xchg
int
movsb
mov
adc
and
pop
roll
cs
icebp
pop
add
xchg
adc
jp
cmp
pop
popf
faddl
sti
rorl
jecxz
in
mov
sbb
jns
daa
arpl
addl
fistpll
popf
cmp
pop
loopne
das
hlt
push
or
testl
lret
lahf
icebp
jcxz
xchg
popa
mov
adc
out
loop
xchg
orl
ret
lret
loope
into
ljmp
inc
jg
sbb
outsb
loope
daa
insb
aad
push
jae
repz
pop
lahf
jae
das
and
sti
cld
iret
sbb
jns
movsl
repz
cmc
lods
cs
ss
sub
shlb
cltd
inc
jge
push
loope
sbb
and
lcall
mov
push
pop
mov
subl
cltd
and
shll
xchg
dec
mov
mov
cs
ja
ljmp
dec
push
push
jno
aas
popa
gs
enter
addl
adc
push
and
inc
andl
stos
ljmp
and
ljmp
test
or
inc
rcrb
imul
subl
xchg
inc
xchg
mov
jle
xor
jo
insl
call
mov
out
lock
test
pusha
sub
lcall
pop
adc
xchg
mov
test
sti
imul
cld
mov
pop
jp
mov
int3
in
in
movl
push
lods
sub
xchg
mov
pusha
pop
ficompl
cmc
push
mov
imul
pop
cs
inc
lock
cli
jge
pop
arpl
mov
ret
cmp
les
in
pop
mov
das
mov
pushf
js
lcall
shll
mov
jmp
divl
inc
add
add
fcomps
leave
aaa
mov
std
xor
inc
xlat
lods
push
mov
dec
dec
pop
sahf
inc
inc
jbe
enter
mov
mov
mov
adc
pop
cmp
sbb
scas
fcomp
test
cmp
dec
inc
xor
test
inc
push
cs
pusha
outsl
lcall
outsl
retw
push
pop
cmp
push
inc
cmp
ljmp
lcall
inc
pop
popf
lahf
std
pop
inc
loopne
xor
in
jl
cs
enter
scas
pop
sub
popa
mov
aam
add
ja
ds
adc
push
xor
xchg
loop
sub
mov
push
xor
sub
lea
aaa
daa
jge
dec
sbb
hlt
enter
lods
mov
mov
mov
mov
adc
mov
jo
cmp
mov
and
aas
push
xchg
xchg
ret
push
out
xchg
cmp
push
xor
movsl
adc
clc
inc
outsb
dec
push
cmp
xchg
sub
stos
nop
int3
add
mov
push
cmc
lahf
push
loopne
jbe
mov
or
out
inc
push
and
inc
add
dec
daa
jmp
sub
scas
mov
shrl
repz
push
mov
adc
cmpsl
sbb
stos
les
out
loope
and
movsl
lods
push
dec
xchg
adcb
push
stos
clc
cmpsl
mov
sbb
cmp
je
dec
gs
dec
into
addl
test
icebp
loopne
es
pusha
js
test
xchg
sbb
bswap
aas
mov
test
sbb
adc
jbe
icebp
push
idivl
daa
push
mov
rorl
iret
jle
insb
enter
cltd
push
leavew
dec
add
pop
mov
cmp
cmpsb
jge
insb
adc
hlt
xor
ss
mov
adc
test
mov
fcomps
lds
leave
loopne
addb
icebp
jbe
fsubrp
push
out
xchg
fidivs
aam
mov
loop
xchg
xor
test
push
cmp
test
add
loop
sub
shl
btr
mov
adc
cmc
rorl
aad
pop
mov
xadd
lea
out
loope
push
sbb
test
pop
jb
scas
mov
test
sub
and
pusha
shrl
mov
int3
cmc
cmpsb
cltd
cmpsb
mull
je
scas
or
lret
sbb
cli
xchg
mov
cmp
lock
inc
add
xor
leave
jl
bound
imul
sub
mov
gs
jnp
push
into
aam
ss
clc
dec
lret
inc
arpl
adc
sub
inc
lods
sbb
jno
add
mov
lret
into
stos
scas
test
or
orb
mov
add
fsts
fidivs
ds
push
jg
out
rcrl
repnz
das
inc
sti
add
or
aam
lcall
pop
movsl
stos
fstp
push
sbb
data16
jle
sbb
sub
jmp
mov
mov
lret
add
test
fists
mov
fisttpl
mov
mov
sahf
gs
or
push
lret
mov
aas
push
mov
aas
movsl
xchg
in
sub
mov
cmpsl
ljmp
pushf
fsts
add
sbb
out
mov
pop
ja
push
lea
int
orl
pop
daa
push
fwait
inc
pop
clc
scas
repz
imul
and
and
lods
mov
shl
or
stc
loopne
fimuls
call
sub
mov
sete
mov
stos
inc
mov
xor
rolb
ret
pop
push
pop
xchg
cmpsl
repnz
jae
leave
cmp
fcmovnbe
pop
jl
ret
jne
out
adc
aaa
pushf
mov
mov
or
push
stos
in
sub
out
mov
add
aad
pop
push
inc
addl
out
out
push
mov
mov
ss
fadds
add
push
xor
fwait
mov
mov
aaa
jecxz
mov
fisubs
rclb
imul
scas
pushf
bound
cmp
mov
add
sbb
std
jb
and
aam
mov
shrl
out
pop
lods
iret
pushf
xchg
dec
xor
int
xchg
bound
jecxz
or
cli
jb
cmp
xchg
pushl
pusha
movsl
lret
pop
sub
xchg
mov
mov
jmp
pusha
fnstcw
stos
imul
push
jno
fdivs
popa
pushf
and
repnz
bnd
int
jmp
dec
mov
repz
roll
xchg
jmp
pop
loop
mov
xor
xor
xor
fdivrs
mov
das
out
arpl
inc
enter
sbb
mov
pop
cmpsb
xchg
rol
out
sbb
lds
and
lahf
xlat
sub
outsb
fidivs
aaa
push
xchg
gs
popa
adc
pushl
pusha
mov
xchg
filds
ja
jmp
jb
addl
inc
sub
sahf
inc
cltd
lock
and
push
push
cmpsb
iret
jno
xor
mov
jb
jne
push
push
flds
loope
shlb
mov
push
subb
xchg
sbb
add
dec
shll
cmc
fistps
test
pop
flds
fwait
push
lock
in
dec
arpl
ss
pusha
or
test
mov
pop
sub
es
mov
adc
mov
in
adc
sbb
mov
es
xchg
out
test
jb
leave
sarl
insb
sub
pusha
or
stos
inc
out
or
mov
cld
scas
sub
sub
dec
and
sbb
stc
test
aaa
cmc
inc
jbe
pusha
daa
pop
cmpsl
lock
adc
in
pop
pop
es
xor
inc
mov
sbb
cmp
lret
cmpsb
movsb
xlat
inc
jmp
pop
cmp
dec
and
add
add
das
addb
movsl
xchg
mov
rcrb
pop
out
xchg
or
jg
loope
stos
pop
stos
pop
mov
stos
stos
insl
push
cmp
lods
ror
fwait
pop
fidivrs
inc
jg,pt
aaa
xchg
mov
mov
fwait
xchg
loope
xlat
sahf
ja
jbe
mov
sub
out
sbb
sbb
les
mov
jg
inc
imul
test
jne
mov
cmp
mov
les
mov
sub
stos
sarl
clc
or
and
push
mov
pop
sub
lcall
pop
inc
adc
push
mov
insb
fmuls
sub
stos
test
test
adc
test
mov
mov
mov
ljmp
das
pop
hlt
loop
cld
adc
mov
in
jmp
add
mov
cmp
nop
inc
das
inc
mov
int3
jecxz
dec
dec
inc
ljmp
es
fsubrs
push
in
or
mov
enter
cmp
in
adc
cmp
sub
mov
aam
mov
gs
mov
pop
iret
mov
out
sbb
mov
pop
mov
jg
xlat
mov
or
dec
xorb
inc
jbe
xor
jbe
lds
dec
je
and
sub
pop
jle
test
outsl
add
insb
sbb
mov
inc
push
mov
jne
lcall
andl
xchg
enter
inc
pop
xlat
out
call
in
fldcw
adc
fidivrl
sbb
loopne
xchg
cmpl
lret
mov
push
fldcw
loopne
lret
mov
repnz
pop
mov
loope
lea
icebp
fs
imul
cmp
scas
stos
xor
pop
pushf
ret
push
dec
sbb
sbb
push
xchg
test
aam
xor
in
test
aas
push
mov
mov
in
sub
notl
mov
inc
sbbb
hlt
stc
mov
insb
imulb
mov
jmp
xlat
or
pop
xor
pop
pop
mov
int
xor
xlat
mov
cs
mov
jg
push
jl
jnp
cmpb
mov
jg
nop
and
rcrb
cld
mov
pusha
mov
cmp
xor
fnstenv
xor
in
outsb
xchg
inc
int3
arpl
ret
enter
pop
pop
cwtl
cmp
inc
mov
mov
mov
sbb
sbb
push
xor
mov
mov
lret
cmp
or
xchg
mov
jns
imul
pusha
or
pop
sbb
data16
mov
loop
out
mov
outsb
cmp
aad
xchg
xor
or
cli
idivb
testl
lock
sbb
adc
inc
dec
imul
jmp
xor
pop
out
xchg
and
dec
push
imul
dec
stos
cmp
aas
mov
imul
jmp
data16
arpl
push
inc
das
push
jp
cltd
gs
daa
in
mov
sbb
add
shll
mov
aad
mov
push
mov
push
pop
push
adc
mov
aas
ret
and
or
dec
xor
push
ror
push
ja
jne
xor
mov
jmp
fstl
in
push
repnz
push
mov
bsr
pop
test
or
ja
cmp
mov
ss
lret
push
movsl
xor
sub
mov
mov
imul
mov
add
jnp
mov
ljmp
in
cmp
movsl
xchg
add
les
push
in
pop
inc
sub
push
int
and
jle
outsb
sbb
jbe
push
sbb
mov
nop
push
jb
adc
enter
mov
sub
std
dec
inc
cmp
es
mov
stos
inc
mov
and
mov
mov
mov
adc
sub
push
adc
rcll
mov
frstor
dec
inc
insl
nop
dec
stos
stc
lahf
popa
aas
ret
fcompl
add
xchg
sarb
jle
fwait
push
push
cmp
xor
test
mov
jae
lds
adc
cmc
xor
out
divb
cltd
mov
inc
add
in
je
pop
adc
add
cli
mov
cmpb
aaa
xchg
mov
fsubs
das
fldl
sbb
dec
xchg
cmp
or
rorl
xchg
repnz
loopne
fs
cmpsl
xchg
jo
pusha
xchg
cmp
push
add
mov
jle
add
loopne
mov
movsl
fidivl
stc
push
aad
cltd
mov
sbb
outsl
jno
sub
rol
xchg
xchg
icebp
jecxz
cmp
lods
popa
push
out
iret
fwait
es
test
nop
lock
mov
jmp
mov
ret
jmp
addr16
xor
repz
loop
cmc
and
les
push
xchg
cmp
jbe
jmp
xor
mov
cli
cmpsl
push
scas
xor
inc
in
ljmp
int3
imul
xlat
les
or
sti
andl
inc
inc
mov
xchg
pop
fcompl
jge
inc
loope
out
pop
lock
outsb
inc
orl
sbb
mov
lret
in
ljmp
xor
pop
loop
or
int3
pop
and
outsl
outsb
xor
and
xor
scas
cltd
inc
test
jecxz
jbe
xchg
sar
rcrl
inc
jge
dec
dec
movsl
mov
or
mov
call
mov
sarb
sti
sub
and
sbb
cmp
pop
sbb
jae
std
ret
adc
in
call
lods
push
jae
in
stc
and
mov
cmp
mov
inc
mov
insb
push
push
and
in
pop
sub
jne
movsb
cld
decb
jae
shll
int3
ja
mov
add
gs
loope
arpl
fsub
mov
addr16
sbb
je
cld
sbb
sub
inc
fdivrs
ds
repnz
xor
aaa
int3
js
add
and
and
aad
mov
pop
jg
aam
mov
fs
mov
cld
not
pop
and
mov
xlat
sub
adc
jne
icebp
cli
lea
sbb
push
loope
xchg
cmpsl
jo
out
pop
dec
in
scas
mov
sti
xor
shrb
mov
push
dec
pop
add
mov
and
mov
nop
lods
dec
lahf
subb
dec
mov
sbbb
lock
lret
mov
out
adc
loopne
cwtl
push
test
stos
xchg
inc
inc
push
push
inc
outsb
lcall
pop
mov
xor
dec
pop
push
cld
imulb
es
loop
scas
sarl
cmp
clc
cmp
daa
lahf
xchg
std
jb
mov
mov
cpuid
hlt
gs
xor
cmp
rcl
cmp
jno
lock
dec
stos
cmpsl
loopne
or
lds
mov
and
jno
dec
stos
push
ljmp
hlt
mov
test
sub
cmc
sti
cmpsl
call
loope
aam
mov
and
enter
mov
mov
mov
add
test
xchg
jo
jg
mov
icebp
lods
jb
imul
mov
movsb
stos
dec
scas
stc
sub
xchg
out
mov
stos
or
add
and
push
stos
pop
outsl
add
dec
rcrb
rorb
cmpsb
test
ja
add
outsl
lock
xchg
adc
dec
js
imul
sbb
adc
fsubrs
test
lret
fwait
cmp
test
dec
jge
push
loop
or
fs
pushf
mov
xchg
lock
fidivrs
push
dec
dec
push
dec
mov
fcmovu
sub
das
testl
adc
icebp
mov
js
lret
cmp
sbb
inc
data16
insb
and
out
inc
mov
in
iret
outsl
jnp
fsubr
cmc
mov
push
push
mov
xor
test
jbe
mov
jg
repz
addr16
push
dec
insl
pop
test
in
test
in
int3
addr16
xchg
jbe
cmp
push
adc
xchg
std
add
arpl
pop
pop
mov
mov
mov
das
add
inc
inc
sbb
jno
call
fs
lods
inc
add
jg
sbb
pop
mov
lahf
fadd
pushf
push
jecxz
mov
jl
ror
cmpsb
and
xchg
mov
es
rsm
mov
xlat
pop
stc
ss
stc
and
inc
and
stos
add
pop
test
and
dec
arpl
into
or
sub
cs
in
sub
decb
mov
xor
dec
adc
mov
mov
add
xor
push
sub
add
cmp
pop
inc
cmpsb
roll
ja
jl
cld
loop
xchg
ljmp
and
aas
adcl
mov
cld
lret
scas
out
shl
xlat
jl
mov
mov
cmp
mov
movsb
rorb
cs
dec
xchg
push
mov
mov
fisubs
lret
out
hlt
pop
pop
dec
sbb
add
ret
mov
or
push
and
mov
xchg
loop
icebp
nop
dec
int3
xchg
xchg
ss
add
mov
shrl
push
js
out
cmc
shr
inc
adc
and
mov
sbb
lret
aas
scas
adc
movsb
push
in
inc
mov
and
and
xchg
scas
lea
mov
push
into
fdecstp
data16
cmp
cpuid
ds
pop
std
cmpsb
pop
insb
xchg
push
mov
pop
cmp
sub
flds
scas
imull
dec
out
enter
and
adc
xchg
or
sub
jno
push
or
dec
add
xor
lret
sub
push
adc
or
in
mov
xorl
pusha
icebp
add
out
daa
cmp
pop
or
hlt
mov
pop
insb
xchg
jecxz
push
andl
inc
push
movb
push
addr16
outsl
imul
fdiv
jp
add
mov
jl
or
mov
xchg
in
dec
popf
xchg
push
les
lret
daa
mov
jae
push
daa
cmp
sub
inc
xor
cwtl
mov
aam
in
in
shrl
es
and
scas
prefetch
or
scas
scas
inc
int
jle
push
negl
mov
push
mov
sub
roll
sbb
movd
cmp
in
inc
pop
xor
roll
cmovae
insb
xor
ret
pop
iret
mov
or
xchg
ror
push
pop
bound
mov
sub
cmpsl
xchg
sub
fcom
imul
xlat
outsl
fidivl
xor
xor
xor
sbb
popa
xchg
dec
mov
jg
cmp
shll
pop
sub
and
pop
les
idiv
scas
ljmp
mov
gs
out
dec
dec
outsl
gs
adc
mov
adc
in
ret
adc
and
arpl
pop
mov
mov
aaa
lret
push
test
jmp
arpl
loope
jmp
and
and
rorl
sub
push
lret
mov
out
sub
and
flds
dec
mov
mov
test
xchg
imul
cmp
lock
test
lods
push
and
div
scas
cld
mov
repz
inc
pop
xorl
imul
int
andb
jne
adc
cltd
iret
ret
arpl
jo
jmp
mov
clc
push
aad
mov
adc
sub
xchg
js
mov
and
inc
pop
adc
jp
jecxz
push
xchg
lret
mov
inc
aad
cmp
mov
adc
pop
or
mov
rorl
mov
sbb
mov
das
nop
jg
jb
add
and
inc
lret
jl
push
out
cmpl
cmovge
in
mov
inc
pop
or
inc
ds
push
leave
enter
or
xor
mov
aaa
push
scas
mov
jg
inc
out
addr16
je
pop
es
xchg
jno
popa
neg
xchg
push
cmp
jl
call
lcall
lods
out
in
cmp
rolb
pushf
repz
iret
adc
sub
mov
jns
mov
aam
xor
mov
cmp
push
add
mov
imul
int
mulb
jae
loopne
in
mov
sbb
inc
jl
xchg
lea
cld
rcr
add
cli
lret
rcrl
movsb
ja
imul
ficomps
dec
in
add
jns
out
decl
je
loope
cmpsl
mov
sbb
xor
mov
mov
test
pop
mov
sub
popa
cmpsb
cmp
mov
dec
and
cld
mov
sub
mov
add
int
sub
jno
push
jno
lock
mov
popf
pop
push
add
add
adc
jbe
mov
leave
jno
mov
mov
xchg
cltd
popa
sahf
mov
push
add
fidivrl
fiadds
push
push
jbe
std
push
adc
xor
mov
mov
xchg
scas
stc
int3
mov
lods
mov
push
mov
lret
adc
jae
bound
dec
cmp
fcompl
inc
imul
sti
orl
movl
pop
fdivl
shr
clc
ret
pop
jmp
ficompl
mov
or
je
push
call
daa
and
xor
out
push
sub
bound
jp
mov
push
mov
inc
popa
dec
sub
push
xchg
cmc
sbb
imul
and
xchg
addb
repnz
cli
xchg
jmp
and
fistps
xchg
mov
cld
push
jecxz
xchg
out
jb
std
jp
push
cmpsb
adc
nop
pop
adc
pop
push
dec
sub
pop
mov
jp
lock
mov
popf
push
push
sbb
outsb
lcall
lds
jecxz
push
aas
lods
pop
lock
mov
adc
stc
lahf
mov
faddp
dec
lock
dec
inc
push
push
ljmp
inc
les
mov
hlt
icebp
iret
inc
mov
push
fcomps
dec
or
sbb
mov
lods
adc
movsb
ret
test
ljmp
movsl
cmp
mov
sbb
dec
xor
sbb
and
push
test
loop
and
adc
out
push
call
das
pop
sub
popf
mov
inc
hlt
and
jecxz
lds
int3
cmc
dec
xchg
or
xor
mov
xor
and
sbb
stos
insb
fistps
push
jns
cmp
push
xor
mov
ljmp
ficompl
mov
or
rol
cltd
push
push
pop
lahf
aad
rcll
pop
mov
cmp
or
and
jae
mov
jge
icebp
sti
lea
lahf
sbb
sub
mov
outsl
xor
dec
fdivrp
jge
adcl
add
gs
stos
aad
mov
loop
push
push
stos
je
mov
adc
stos
sarl
mov
ret
mov
mov
das
daa
jo
sarl
fstl
mov
or
add
adc
pushf
sbb
push
sti
movsb
lcall
xor
adc
mov
push
mov
xchg
rorb
pushf
test
vsqrtsd
sbb
mov
adc
dec
inc
mov
xor
mull
mov
sbb
and
enter
push
in
aaa
mov
xor
and
scas
mov
dec
mov
or
andl
add
pushf
insb
push
nop
and
fistps
inc
jl
clc
lcall
push
iret
mov
clc
gs
mul
and
xor
std
std
mov
push
outsl
cmpsl
add
mov
push
movsl
lret
add
or
adc
lock
int3
arpl
cltd
add
or
jae
and
xor
cmp
in
scas
sub
enter
repz
mov
lcall
xchg
addl
fisttpll
lea
inc
ret
push
push
sub
cltd
icebp
lds
sbb
add
out
lods
cmpsl
inc
or
arpl
mov
outsl
out
aad
xor
loopne
stc
pushf
inc
cmc
stc
nop
xor
mov
sub
ja
pop
loope
adc
fimull
cld
dec
loope,pt
das
cmp
ljmp
xorl
and
aam
adc
int3
int
adc
rep
mov
sub
or
in
testl
dec
add
insl
das
or
fcomp
call
lret
xchg
jno,pt
mov
mov
cmpsl
test
lcall
cltd
dec
push
pop
cld
lock
mov
pushf
imul
insb
lret
or
cmp
add
sbbl
mov
or
mov
xchg
aam
inc
addl
jo
popf
push
rcrl
cmp
cmp
ffreep
pop
pop
xchg
cmpsl
std
or
push
pop
mov
popf
mov
hlt
inc
jge
push
push
inc
idivb
and
push
inc
jae
sti
jno
pop
inc
pop
mov
cli
pop
loop
in
xchg
stos
lea
sbb
es
call
sub
inc
gs
push
in
dec
int3
fmull
sbb
mov
in
lock
pop
mov
call
pop
lods
data16
repnz
jmp
cld
fdivrl
mov
movsb
aaa
into
mov
inc
sbb
fwait
sbb
sti
neg
int3
leave
fadds
stc
movsb
cmp
je
es
pushf
push
jp
sub
and
pop
lock
loopne
aaa
into
cmpsl
sti
mov
pop
push
xor
or
adc
sbb
aam
lret
pop
inc
fwait
mov
es
xchg
jmp
andl
lock
xchg
sub
mov
sub
out
or
add
push
into
push
test
mov
inc
arpl
sub
loop
flds
fwait
xchg
cmp
idivb
aam
mov
dec
sti
xchg
mov
mov
jbe
sbb
push
aaa
push
mov
test
mov
jae
xchg
inc
movsb
sbb
scas
jle
jns
out
sti
gs
lods
mov
jmp
ja
jmp
xchg
xlat
xchg
xchg
stos
xchg
enter
in
cmc
cmp
add
sbb
repz
daa
icebp
inc
mov
das
xchg
sbb
xchg
insb
mov
push
fwait
mov
outsl
adc
cmp
fcoml
add
xchg
mov
add
cltd
jge
mov
in
insl
pop
lcall
jecxz
mov
hlt
cmp
xor
loope
xor
push
sarl
push
jb
adc
enter
or
xchg
cmp
shlb
pop
pop
pop
push
sbb
push
xor
jle
stos
lods
sti
xor
sqrtps
xchg
push
cmpsl
pop
test
or
pop
js
mov
xor
dec
add
pop
addr16
mov
lcall
xor
and
fidivl
mov
imul
xchg
push
out
je
mov
loopne
xchg
jl
or
fwait
adc
fs
je
test
sahf
adc
sbb
sub
cmpsl
adcb
ds
sbb
add
lods
shll
mov
jge
lea
xor
push
xor
sub
inc
or
fwait
hlt
add
fldenv
add
pushf
inc
xchg
shufps
movq
sbb
fcomip
xor
mov
inc
jnp
cmp
xchg
cmp
cmp
pusha
mov
xchg
loope
out
add
add
adc
and
andb
sbb
into
dec
in
les
mov
adc
adc
in
les
pop
imul
cmp
in
mov
cmc
xlat
mov
mov
mov
std
push
mov
mov
andl
sbb
jae
inc
pop
adc
or
sbb
pop
rcrb
add
mov
cld
lock
jne
lock
pop
ljmp
aaa
insl
cmp
push
sub
inc
and
scas
movsb
add
shrb
dec
dec
call
ss
gs
stos
loope
clc
icebp
jg
imul
xor
dec
push
test
and
inc
aam
push
iret
push
leave
loope
xor
sbbb
lock
xchg
insl
xor
pop
in
insb
mov
sti
dec
pop
int3
push
test
xlat
sbb
or
mov
mov
or
sbb
sbb
fisubl
adc
addr16
xchg
or
adc
pushf
repnz
lods
dec
cmp
stos
mov
xchg
cwtl
pop
test
test
mov
add
enter
icebp
mov
ljmp
pop
pop
stc
xchg
xor
aaa
andb
adc
movsb
xchg
push
adc
push
mov
add
xor
and
imul
sbb
push
xchg
les
xchg
sub
inc
jne
lahf
xlat
fdivp
cmp
xchg
adc
fwait
jge
jmp
xor
pop
jl
push
cltd
dec
testl
lock
sbb
sub
mov
jne
mov
cmp
sbb
clc
loopne
rolb
mov
mov
mov
mul
adc
pop
stos
and
cmp
inc
dec
add
divl
jmp
out
pop
scas
addr16
or
int3
je
or
mov
std
xor
mov
je
fwait
popa
cmp
daa
lcall
movsb
shlb
mov
pusha
adc
xor
lcall
inc
jns
imul
mov
push
shlb
stos
adc
aad
or
xchg
adc
ret
jbe
jno
test
cmp
xchg
xor
enter
adc
xchg
into
and
xchg
inc
push
loopne
loopne
popf
mov
shlb
inc
in
lds
jecxz
ret
sub
sub
ja
sub
mov
mov
aas
icebp
movsl
jb
jp
mov
leave
cmp
fidivrs
iret
mov
mov
aad
and
pop
mov
jno
sub
jp
loope
fsts
and
inc
imul
jmp
icebp
loope
sbb
add
outsl
jg
sub
mov
es
clc
or
and
sbb
sbb
lcall
mov
pushl
subb
ss
and
jns
push
in
repz
mov
mov
ljmp
int
iret
repnz
int
fsubrs
mov
dec
in
inc
fwait
into
cmp
fscale
or
je
mov
in
xor
adcl
mov
push
mov
mov
mov
pop
into
inc
cs
enter
push
add
fcmovbe
inc
jge
or
repz
xchg
push
sbb
daa
fildl
push
mov
mov
enter
mov
pop
insl
mov
int
test
xor
fidivl
or
sbb
icebp
lea
in
cli
repnz
cld
pop
adc
out
rcrb
and
push
rolb
loop
jp
pop
sub
and
cli
jbe
jo
div
ja
cmpsb
xchg
ja
xor
dec
mov
push
adc
in
add
mov
dec
iret
and
loopne
mov
xchg
jae
or
pop
out
mov
sub
sbb
lcall
popf
sbb
fisubrl
call
cmp
push
mov
sub
add
fistpll
loopne
fldt
sbb
xor
mov
xlat
aad
jge
xlat
cmpsl
push
cmc
cmp
repz
xorb
mov
idivb
pop
push
lds
enter
cwtl
pop
dec
test
xor
aad
add
inc
sbb
or
sub
pop
scas
xor
lock
adc
xor
push
cs
lods
hlt
fisttps
addr16
mov
mov
or
jecxz
add
mov
push
xchg
inc
xorb
add
jne
cmp
lea
inc
pop
outsb
aad
rcl
sbb
iret
andl
dec
sbbl
sub
test
sbb
fists
cmpsb
mov
mov
shlb
sti
and
add
mov
sub
in
arpl
fs
ds
idivl
std
popa
cs
test
pop
xchg
clc
cld
ficompl
pop
fcmovnbe
scas
sbb
lret
ljmp
inc
subl
mov
push
out
fnstenv
frndint
rcr
test
test
mov
sub
shl
adc
mov
aam
loop
enter
pop
daa
movsl
fadds
adc
loopne
xor
dec
mov
jae
arpl
pop
and
mov
push
outsl
xchg
sub
out
add
push
xor
ffreep
imull
xchg
sar
lcall
xchg
loopne
xchg
mov
test
or
and
and
loopne
repz
or
xor
mov
fmull
std
or
mov
add
cmpsb
test
jae
bound
in
cmpsl
pop
cmp
add
xlat
in
stos
stos
xor
sub
xchg
cmp
movsb
stc
dec
sub
leave
or
stos
adc
push
cmpl
mov
fimuls
cwtl
lock
xor
je
mov
pop
mov
xchg
adc
cmp
inc
xchg
xchg
push
push
out
inc
or
mov
mov
dec
sub
negb
js
push
push
insl
rcl
std
pop
das
loopne
push
dec
iret
jne
ljmp
xchg
xorl
dec
out
sub
in
cld
push
ret
jge
pop
push
dec
stos
sub
xor
loopne
dec
jbe
nop
lds
sub
ss
cli
inc
mov
cmp
dec
cld
shl
mov
into
add
pop
xor
mov
jo
mov
or
ret
imul
add
inc
jnp
sub
and
add
jnp
jno
mov
cmp
pop
adcl
mov
add
in
rclb
jne
mov
add
scas
adc
in
lret
xchg
pop
pop
loope
fs
loopne
cmp
push
pushf
inc
out
push
sub
mov
push
or
dec
or
loop
loopne
or
ret
popa
and
adc
bound
std
add
or
cmp
mov
imul
pushf
std
mov
mov
mov
lods
sti
or
fisubl
sub
xchg
pop
and
mov
mov
in
stos
call
out
sub
sbb
xchg
push
sbb
sub
or
mov
or
xchg
out
xchg
lods
push
mov
xchg
movsl
and
sub
loop
push
orl
push
clc
pop
clc
roll
inc
pop
push
mov
xor
outsl
imul
and
into
aam
add
ficoml
divl
lahf
repnz
out
add
jl
pushl
cmp
sbb
scas
mov
cmp
daa
xor
mov
movsw
sti
dec
and
jbe
cmp
inc
and
arpl
inc
ss
in
xor
cmp
add
mov
sub
cs
popa
jl
push
pop
cmp
inc
outsb
mov
les
cs
clc
insl
mov
inc
or
icebp
or
je
repnz
dec
pop
arpl
int
xchg
mov
xchg
sub
pop
fisttpll
adcl
cld
in
add
inc
mov
in
add
xor
or
cmp
dec
nop
fisubs
outsb
jl
popa
lret
out
xor
jecxz
lret
ds
mov
in
sbb
enter
icebp
pusha
xor
jl
aam
nop
int
inc
mov
cmp
jne
cmc
jp
fbld
iret
push
arpl
push
in
ja
cmpsl
inc
inc
adc
sahf
dec
mov
ficomps
jne
inc
xchg
add
js
sbb
push
mov
movsl
cmp
mov
cmp
lock
ds
jmp
cli
cwtl
add
idivl
cmp
mov
jae
test
loop
cmpb
mov
out
out
dec
inc
outsb
jbe
inc
int3
insb
mov
dec
xchg
xchg
popa
xrelease
in
movb
in
jo
dec
ret
jbe
adc
or
daa
xchg
lcall
fistps
std
pop
mov
bound
testl
rcll
pop
jg
adc
adc
xchg
sbbb
push
test
push
xchg
sbb
in
jle
inc
fwait
lea
jecxz
rcll
xor
scas
std
mov
fldcw
mov
jae
lea
mov
xchg
cmp
inc
mov
push
scas
cwtl
cmc
iret
sub
fldcw
in
xchg
push
cmp
cmpsl
cmp
and
and
fsubr
push
stc
bound
xor
aas
in
mov
cmpsb
daa
and
pop
cmp
outsl
cmp
shrb
sbb
insl
push
aam
ss
enter
mov
testb
xchg
mov
aas
lahf
mov
movsb
jmp
rcrb
cmp
inc
adc
aas
cmp
aam
add
jnp
outsl
jg
and
lds
push
addr16
insb
repnz
lock
call
cmp
jp
ja
aas
ret
adc
js
rcll
repnz
adc
pop
fisttps
inc
jge
dec
mov
push
push
sbb
ss
mov
cmpsl
inc
inc
jl
sahf
mov
popl
adc
or
pusha
imul
out
imul
mov
in
push
or
fs
push
add
inc
jp
pop
xor
mov
inc
cmp
cmp
mov
or
loop
adc
jl
mov
pop
dec
std
add
pop
mov
add
cld
jg
adc
daa
mov
adc
insb
mov
add
add
shlb
scas
add
ret
sub
movsb
mov
leave
add
fwait
in
pop
mov
adc
jle
pushf
fucomp
or
lea
inc
xchg
ret
js
pop
adc
or
or
jbe
sub
xchg
xchg
push
mov
jmp
xchg
call
mov
outsl
addr16
pop
pop
fs
and
xor
sub
pushf
movb
add
pop
bound
rcrl
mov
sub
mov
pop
pop
mov
mov
mov
loope
loope
push
imul
adc
pop
and
xor
sti
inc
rorl
adc
mov
icebp
push
imul
leave
loope
fcoml
test
add
add
mov
xchg
ficoms
clc
fists
fists
fwait
sbb
jnp
and
sbb
mov
shlb
cmpsb
sbb
lahf
mov
mov
jns
dec
aas
mov
jmp
lret
mov
xor
pop
xor
mov
dec
cmp
popa
outsb
aad
xor
push
cmpsb
test
lret
sub
test
xchg
icebp
int3
lea
data16
shll
daa
sub
hlt
out
stos
jb
push
loope
or
ficomps
fsubrs
and
notl
loop
enter
adc
scas
add
adc
mov
add
dec
lds
pop
mov
das
leave
fsubr
mov
test
push
divl
mov
pop
cmpsb
jns
out
int
sub
lret
stos
adc
andb
ret
add
push
cmp
dec
divb
fsubs
sbb
pop
aad
repnz
xchg
mov
es
and
je
int
insl
scas
mov
cmp
shl
test
rolb
xor
push
sub
loopne
xchg
jmp
out
pop
cwtl
loope
pop
mov
rolb
xchg
ja
inc
leave
inc
fisubrl
cmp
adc
in
push
sbb
and
fiaddl
xor
das
and
dec
and
dec
notl
fldcw
fadd
bound
cwtl
dec
enter
sub
or
mov
jecxz
fstl
adc
jg
fadds
mov
jg
pop
fcmovu
rcr
mov
mov
push
jmp
push
test
jno
repnz
faddl
mov
dec
les
shrb
aaa
push
hlt
mov
push
push
shrl
mov
and
dec
xlat
mov
mov
retw
sub
test
or
jmp
adc
xor
ss
mov
scas
cmp
and
call
or
add
sbb
add
lret
dec
cmpsl
lret
addl
incb
adc
lea
mov
das
out
aaa
jbe
nop
mov
or
fildll
insl
xor
rorb
jg
xor
das
test
test
shlb
int3
fsubr
fldl
sti
mov
aad
xchg
lods
or
jnp
jb
xchg
nop
jb
hlt
xlat
addr16
push
xor
inc
adc
lcall
pusha
and
xchg
mov
int3
mull
dec
addr16
repnz
mov
loop
pop
cld
mov
insb
jge
jge
ret
pop
in
jge
hlt
jne
int
imul
movsl
or
sub
inc
mov
xchg
xchg
mov
mov
outsl
mov
mov
sbb
icebp
jge
lds
dec
push
mov
cmp
and
mov
inc
xor
jg
mov
js
aad
pop
or
shl
outsl
addb
fidivrl
jmp
cs
loop
mov
adc
in
jno
sbb
jp
push
push
outsl
pusha
cltd
cmp
dec
pop
mov
mov
push
imull
je
cmpsb
pop
insl
dec
pop
jmp
fxch
or
sub
xor
push
xor
dec
insl
xor
sbb
sub
lock
sbb
cmpsl
push
in
iret
mov
icebp
push
inc
xor
mov
shlb
fs
dec
arpl
stos
inc
ror
int
mov
incl
jne
mov
cmc
mov
cmc
mov
push
js
xor
out
pop
pop
xor
out
sub
rclb
pop
repz
pusha
mov
and
ficomps
das
frstor
dec
or
sub
mov
dec
stos
jns
and
out
sbb
adc
gs
hlt
dec
add
push
mov
mov
rcl
pop
pop
scas
lahf
imul
nop
je
mov
idivb
test
stc
sbb
mov
cwtl
fcomps
dec
lahf
inc
jmp
pushf
fidivs
jno
sbb
std
sbb
repnz
add
insl
sbb
ljmp
and
nop
jp
fistps
sub
push
sub
sbb
pop
jb
jbe
jge
mull
xchg
out
call
mov
dec
mov
outsb
data16
add
iret
ja
into
cmp
sbb
enter
aam
and
inc
scas
ljmp
repnz
push
imul
call
add
cmpsl
mov
out
adc
icebp
into
rcll
movsl
movsb
cwtl
inc
repnz
int
repz
mov
out
and
and
jns
ret
pushf
or
icebp
cmp
shlb
pop
fmuls
les
jmp
jg
sbb
sarb
dec
sub
ret
jmp
lock
popf
in
shrb
inc
lret
push
fnsave
es
or
mov
adc
stos
dec
lahf
lock
cmpl
clc
push
ja
sbb
xchg
push
js
mov
jb
divb
cmp
and
cmp
pop
jbe
jge
jp
and
sti
sub
in
pop
int3
mov
pop
and
jne
pop
outsl
jnp
loope
fsubr
js
jae
daa
sbb
sub
xor
ljmp
sub
mull
dec
mov
imul
xchg
dec
data16
sub
cwtl
push
push
cmc
pusha
pop
in
jnp
rorb
add
add
pop
imul
adc
xor
movsb
imul
scas
or
dec
call
insl
loop
sub
add
inc
mov
fs
ror
shlb
pop
lds
push
pusha
or
divl
cmp
pop
xchg
arpl
sbb
adc
cld
jnp
or
pop
scas
test
mov
call
aad
mov
cltd
scas
xor
cli
bound
lea
adc
sbb
and
sbb
lods
fldenv
frstor
dec
push
push
push
jns
adc
xchg
in
jle
aaa
fistpll
mov
fwait
shlb
add
dec
outsb
add
lock
lods
cmp
xorb
sbb
sti
daa
iret
sbb
int
cltd
cmc
xchg
push
inc
sbb
into
cmp
sahf
mov
cli
test
inc
test
hlt
mov
popa
sarb
mull
cmp
lret
testl
jle
je
xor
or
movsl
enter
push
xlat
push
xor
pop
mov
imulb
xor
add
xchg
fiadds
push
push
inc
or
pusha
or
ficompl
sbb
ret
das
xchg
in
shrb
pop
xchg
scas
cmp
or
lahf
xchg
sbb
mov
mov
dec
negb
cli
mov
sub
cmp
cli
xor
adc
clc
gs
xchg
mov
dec
jecxz
xchg
mov
xchg
pop
rolb
out
adc
or
jb
jno
inc
scas
or
sbb
addr16
ret
xchg
xlat
nop
inc
jb
xchg
ss
data16
les
push
popa
fbstp
fisubrl
push
push
xchg
push
dec
lea
pop
cltd
insl
xor
lret
jb
push
movups
adc
cmpsl
pusha
cs
add
or
cwtl
daa
mov
xchg
xorw
dec
push
int
fbld
xor
cmc
xchg
pop
adc
movsb
fcoms
out
test
in
jmp
jae
xor
mov
fmul
sahf
sti
jecxz
add
jmp
js
fwait
jg
push
sbb
adc
movsb
dec
add
lock
cmpsl
mov
iret
sbb
shlb
jno
les
scas
aas
test
lahf
dec
and
pop
xor
rep
in
aad
adc
dec
lahf
or
fs
mov
cs
jns
ds
mov
pushf
add
pop
mov
adc
push
push
inc
movsb
imulb
xor
cmova
fiaddl
test
xchg
ret
rorl
mov
inc
test
sbb
dec
aad
cmpsl
xor
fnsave
cltd
dec
imul
pop
lret
adc
xor
fwait
mov
inc
xchg
and
addl
stos
sbb
adc
xchg
or
add
mov
cmp
addr16
xchg
jbe
je
add
jbe
les
ss
lahf
push
mov
lock
shll
je
xor
mov
jb
xor
lcall
movsl
push
out
add
dec
popf
imul
cmp
mov
push
cmp
jbe
xor
ss
pop
sbb
sub
xchg
jecxz
adc
rorl
sar
out
mov
mov
push
sahf
addr16
xor
xchg
xor
dec
add
negb
push
xor
inc
in
decl
cmpsb
je
mov
movsb
ss
test
mov
mov
push
mov
sub
jne
push
mov
movsb
lret
mov
adc
or
test
in
sub
ret
sub
stc
icebp
fisubrs
push
jg
lock
cs
rcll
inc
or
test
lods
or
xchg
scas
scas
or
inc
sar
into
and
mov
xlat
popf
mov
stc
ret
cmpl
ljmp
push
cmp
clc
fmull
fnstenv
push
jl
jl
ja
add
into
sahf
adc
mov
les
cmp
jmp
add
dec
jge
into
lea
cmpsb
insb
out
xchg
sti
lahf
add
xor
mov
mov
adc
mov
xchg
test
fnstcw
lahf
push
in
in
scas
mov
pop
lock
pop
incb
out
inc
pusha
das
mov
xor
lds
fdiv
arpl
movl
movsb
sbb
mov
add
or
and
xchg
fwait
pusha
insb
lret
cmp
outsb
stos
lahf
pop
addr16
shlb
out
insl
sti
fstp
xchg
sbb
inc
jbe
sub
sbb
jl
dec
xor
mov
xor
lahf
xor
xor
adc
test
cmpsl
lea
fdivs
xor
xchg
jo
sbb
inc
mov
inc
mov
add
movsl
xor
and
cmp
fdivl
out
pop
sti
sti
pop
ljmp
call
pop
add
adc
insl
mov
jbe
daa
int
popa
out
pop
rcll
jecxz
mov
cmc
xor
ds
fwait
std
mov
mov
jg
out
leave
mov
popa
pop
movsl
xchg
es
inc
xor
mov
imul
fisttpll
cmpsb
mov
cmp
xor
into
inc
jp
pop
loopne
push
cmp
in
inc
ljmp
cs
add
lcall
inc
mov
dec
nop
cmp
or
sub
fmull
or
ds
cmpsb
sub
pushf
lea
daa
stos
mov
fcmovnb
addb
sbb
mov
sbb
jecxz
gs
xchg
in
out
xchg
cltd
mov
xor
xchg
in
stc
clc
jnp
je
xchg
pop
xor
xchg
data16
repnz
test
imul
rcll
fldcw
stos
aaa
lret
xor
sub
imul
fmull
test
xor
imul
pop
xor
xchg
add
lea
jae
in
pop
leave
cmc
cmp
jl
mov
aad
cmc
xorl
fucom
mov
inc
icebp
femms
cmp
mov
decl
inc
jbe
out
xor
xchg
cmc
inc
sbb
inc
dec
es
iret
out
add
cli
mov
sti
mov
popa
push
adc
loop
push
outsb
ret
iret
add
adc
inc
lock
mov
xchg
sub
or
in
sub
adc
mov
and
dec
pop
movsb
repnz
push
mov
movsl
loop
mov
or
testb
int3
and
push
inc
jmp
adc
push
mov
add
cmp
mov
int
jno
enter
cltd
cmp
clc
xchg
xchg
jge
mov
and
pop
or
push
outsb
mov
popf
dec
adc
test
ret
pop
loopne
fcmove
xchg
push
hlt
cmp
xor
and
iret
jno
call
jb
mov
in
adc
jmp
loope
add
xchg
int
sbb
sbb
sbb
mov
lods
inc
imul
xchg
popf
and
pop
push
inc
cs
fucom
inc
repnz
or
call
outsb
popa
rcll
dec
cld
lret
adc
lock
push
insl
pop
mov
jmp
test
mov
inc
ret
test
push
in
out
lahf
sub
pop
cmp
movsl
jecxz
and
pop
adc
xchg
lods
jne
pop
xor
imul
sub
shl
pop
mov
ret
xor
rcrl
adc
and
test
or
outsl
sti
insb
test
pop
jl
jg
and
das
fldl
mov
pop
mov
and
pop
das
jecxz
cltd
push
push
test
out
stos
into
jp
sbb
pop
inc
inc
pusha
cs
ret
scas
andl
or
sbb
addr16
jae
mov
push
cld
repz
test
dec
repz
dec
daa
xchg
cmp
sub
mov
outsb
or
and
xchg
sti
sbb
movsl
pop
push
ret
test
inc
cmp
rcl
out
push
pop
mov
pop
sbbb
push
mov
jg
jae
outsb
rcll
inc
xor
jecxz
negb
adc
testl
pop
pop
pop
add
mov
test
popf
or
pusha
push
dec
fnsave
jl
adc
fldcw
lods
into
pop
mov
fwait
je
stc
jno
pop
inc
test
pop
push
sahf
aam
pop
mov
into
or
movsb
sbbl
mov
sub
mov
jg
inc
push
std
ja
xor
or
mov
push
xchg
mov
popf
jge
jl
and
pop
and
push
add
mov
push
xchg
xchg
xor
cmp
xchg
push
sub
cmp
xor
xor
push
and
aad
out
lahf
cmpsb
sbb
and
lods
jo
adc
jg
cmc
push
lret
push
sbb
xchg
std
test
das
xchg
push
adc
imul
push
mov
test
cmp
shll
pop
fdivs
push
je
mov
cmpsl
xor
pop
dec
inc
adc
mov
fnstsw
xor
test
lock
push
sub
push
popa
lods
clc
jns
fidivl
jns
push
mov
dec
outsb
out
cmc
popa
cmp
lcall
in
enter
addr16
mov
in
nop
jge
js
add
bound
int
ret
cmp
sarb
push
movsl
loop
and
xchg
std
dec
ja
mov
jo
insb
push
push
and
add
inc
pusha
imul
sahf
imul
imul
fbld
push
pop
push
ss
mov
out
test
add
xor
and
call
int
sbb
mull
lea
fwait
sar
les
jns
push
arpl
and
insl
mov
andb
cmp
sub
xor
xor
faddl
cld
sub
pop
inc
mov
sbb
fiaddl
adc
mov
aaa
xor
dec
mov
inc
inc
mov
cwtl
pop
and
dec
sbb
loopne,pt
sbb
xchg
add
enter
mov
cmp
outsl
out
jbe
inc
std
lret
cli
adc
pop
xchg
mov
gs
sub
pop
pop
repnz
mov
xlat
ja
fbld
mul
fnstenv
cmc
into
insl
push
arpl
push
iret
adc
mov
push
dec
inc
imul
imul
outsb
cld
ss
sbb
fnstenv
jl
icebp
cmp
cmp
inc
out
or
jne
enter
sub
das
cmp
push
cmpsb
and
rcrb
inc
push
fcmovbe
mov
pop
or
ja
cmp
popa
stc
jb
ret
xchg
cltd
jnp
cli
stos
pop
dec
rcl
pop
aad
cld
push
in
adc
vphadduwq
push
push
xor
or
icebp
cmp
push
out
imul
push
dec
lahf
pop
sub
inc
pop
jg
sub
es
sub
fsubl
or
jae
loope
push
pop
push
iret
pop
pop
xor
negl
mov
sbb
sbb
jb
bnd
jge
dec
jb
xchg
js
cwtl
imul
fcmovbe
fistps
xlat
or
es
aaa
inc
jmp
lea
sub
push
dec
int
cmpsb
push
pop
pop
adc
jb
jg
iret
pop
xor
pop
adc
lahf
mov
cs
inc
rclb
aam
sbb
daa
inc
push
adc
je
fimull
adc
shlb
in
mov
lahf
xor
in
xor
mov
pusha
test
pop
into
xchg
stc
mov
xchg
call
push
ljmp
popf
dec
pushl
inc
inc
or
pop
ds
dec
cmp
xor
pusha
push
push
fwait
sbb
xchg
sbb
cmp
mov
adcb
push
xchg
and
pop
pop
jb
and
cs
pushf
enter
and
mov
cmp
mov
idivb
and
fwait
and
inc
pop
cwtl
mov
push
popa
push
dec
imul
jg
dec
je
or
add
fidivrl
mov
fdivp
push
pop
clc
lahf
ret
cmp
ret
test
mov
xlat
cltd
shlb
mov
jge
inc
ja
dec
std
push
ret
or
push
test
jb
clc
mov
imul
jge
mov
cwtl
daa
rcr
popf
xor
clc
adc
shlb
or
cmp
enter
mov
ja
mov
mov
out
mov
lahf
movsb
out
add
addb
test
lahf
pop
xchg
fwait
dec
inc
sub
sub
inc
push
sub
cld
out
and
pop
das
cltd
mov
test
lods
lock
cltd
cmp
unpckhps
push
fs
xchg
or
lahf
lret
adc
or
pop
push
ds
adc
repz
cmpsl
leave
icebp
pop
rol
aaa
dec
out
ss
ljmp
jo
ds
mov
cmpsb
jle
cmpsl
lock
stos
frstor
sub
jecxz
popf
push
xchg
aas
xchg
jmp
push
out
lods
popf
je
cmp
xor
dec
fcompl
adc
test
dec
xlat
cli
sbb
sub
cltd
add
test
push
push
sub
aas
dec
shl
mov
pop
fcmovbe
push
cmp
arpl
mov
test
fmull
inc
inc
fsubp
je
iret
or
dec
dec
roll
sub
cltd
loope
inc
ss
adc
xchg
xorb
add
jnp
mov
inc
mov
pop
pop
insb
mov
fmull
hlt
and
inc
lret
ret
or
dec
lock
loop
adcl
and
cmc
lds
orl
ret
dec
mov
mov
hlt
pop
push
int3
hlt
push
clc
pop
pop
mov
imul
or
enter
loopne
and
es
push
testb
lods
mov
scas
shlb
fnstenv
sub
stos
addr16
push
adc
mov
ret
sahf
cmp
jb
push
sub
fdivrs
cwtl
pop
loope
pop
push
adc
shlb
pop
xchg
adc
mov
cld
fmuls
or
lds
shrb
dec
in
leave
fimull
popl
icebp
in
add
mov
mov
adc
and
daa
loopne
add
mov
dec
ffreep
hlt
dec
sbb
adc
in
xchg
cmp
jecxz
mov
mov
mov
cmpsb
mov
and
fcmovu
fwait
jae
jmp
add
fdivr
insb
or
cmpsb
outsb
pop
fs
sbb
jns
and
cmp
xlat
arpl
cmc
push
xchg
icebp
stos
testl
sub
and
addr16
test
sbb
scas
aam
mov
test
sbb
cs
cld
pop
aam
aas
sub
sbb
lahf
push
adc
ja
push
xchg
dec
mov
lea
add
xchg
hlt
push
sub
dec
mov
std
icebp
jnp
scas
sub
and
mov
test
sub
cwtl
test
mulps
mov
push
jo
sti
fdivrl
ds
push
cmpsl
shr
push
cmp
or
mov
mov
shll
inc
pop
ss
inc
outsb
xorb
stos
insl
pushf
cmp
nop
ret
push
jnp
push
pop
mov
jbe
out
push
jbe
jns
pop
and
cs
xchg
loope
std
mov
call
cmp
iret
adcb
jae
insl
mov
lret
and
adc
adc
sti
adcb
daa
jp
nop
sub
dec
test
add
dec
cld
pop
dec
std
mov
jle
repnz
mov
and
sahf
inc
or
aaa
leave
xor
mov
in
add
or
jno
inc
into
lds
out
repz
std
out
sub
push
jae
pop
inc
imul
dec
ret
push
push
or
pop
test
sub
inc
out
or
fwait
xlat
add
mov
mov
in
je
icebp
sbb
inc
inc
mov
push
push
sub
push
mov
in
and
enter
and
xchg
je
sub
sub
or
jmp
andl
rolb
push
mov
aaa
aam
cmpsb
adc
shrl
sbb
add
adc
shl
cmp
fs
orl
mov
dec
inc
add
jne
jb
aad
add
adc
pop
enter
test
dec
rcrl
lcall
ljmp
mov
cwtl
lods
mov
stos
mov
jne
cmc
into
out
push
mov
jne
xchg
add
jl
inc
add
leave
jb
mov
movsl
leave
dec
xchg
inc
aaa
mov
lods
dec
pop
fnstcw
jae
into
popa
dec
jb
jae
pop
inc
pop
mov
or
enter
jne
gs
or
out
sub
ret
les
xor
mov
lods
cmp
test
dec
hlt
mov
mov
xchg
test
jbe
inc
jns
jle
stos
in
out
push
movsl
lcall
sub
push
dec
rclb
mov
lds
inc
in
jno,pn
dec
mov
xor
dec
stc
mov
mov
popf
mov
push
push
sti
jnp
ja
mov
xchg
sub
xlat
mov
mov
in
lea
notl
sahf
pop
mov
or
jge
push
imul
fstpt
imul
adcl
repnz
lret
sahf
data16
add
test
aas
sbb
sub
fimull
inc
shrl
mov
movsl
xor
sbb
cmp
pop
cmpsb
xchg
inc
popf
loope
sarl
ftst
push
and
aaa
inc
mov
pop
rol
pop
mov
xor
sahf
in
stc
jmp
int
test
sbb
xchg
sti
arpl
cltd
or
aaa
out
pop
insb
pop
and
aaa
enter
cs
shlb
sbb
push
daa
mov
xor
daa
inc
outsb
mov
adc
jbe
loope
shlb
popf
gs
stos
shl
adc
sarl
movsl
call
scas
or
dec
add
int
adc
negb
fadds
adc
xor
adc
xor
cmp
mov
sbbl
xchg
mov
fnstcw
stos
jne
mov
pop
mov
xchg
mov
jmp
mov
xchg
cltd
push
sub
xor
cmp
aam
pop
add
lods
xchg
sbb
popa
shlb
enter
addr16
dec
adc
pop
jp
lahf
cmp
sti
pop
outsl
xchg
xor
mov
mulb
pop
sub
add
mov
add
mov
stos
push
aam
nop
xor
mov
xor
push
push
iret
out
inc
adc
out
dec
push
pop
cli
scas
xchg
loop
pusha
in
dec
mov
mov
inc
push
sbb
bound
xor
mov
or
push
test
and
sbb
outsl
and
push
stos
mov
sahf
cmpsb
popa
rcrl
push
or
lret
cmp
daa
fwait
cmp
jae
mov
sbb
mov
mov
hlt
sub
insb
dec
add
in
ret
std
or
add
and
repnz
mov
jo
ss
aaa
xor
mov
mov
mov
add
roll
and
add
inc
jne
xchg
pop
push
dec
out
testl
pop
dec
or
in
out
or
popa
and
notb
mov
repz
pop
mov
mov
or
das
jnp
inc
adc
data16
je
dec
cmc
daa
or
jecxz
cwtl
fadds
push
add
mov
sahf
xchg
adc
or
loopne
movsb
movsl
lds
into
repnz
aam
pop
and
mov
cwtl
aad
mov
test
xor
jl
fs
adc
push
scas
sbb
push
add
sub
rorl
loop
fidivrs
insl
imul
in
jae
mov
stos
rorb
push
outsb
push
cmp
js
les
or
shl
cmp
mov
push
popa
pop
mov
lock
xchg
jns
jecxz
mov
jge
inc
adc
pop
cmp
mov
xor
shll
mov
jle
arpl
stos
xor
call
xorl
or
add
add
sbb
pop
add
sub
dec
sub
pop
outsb
xchg
xchg
cmpsb
sbb
ja
mov
cmp
sbb
mov
dec
jp
pop
or
dec
cltd
das
dec
inc
fwait
pop
push
mov
add
in
imul
pop
push
shrb
int3
cmp
jg
out
movsl
in
aaa
inc
jmp
adc
or
bswap
pop
popa
loope
cmp
and
inc
pop
xor
loope
lea
imul
aam
pop
add
mov
dec
mov
jo
decb
pop
jne
test
pushf
or
jmp
inc
ret
jae
fwait
or
scas
or
std
sub
sahf
mov
mov
sub
loopne
cmp
mov
jne
jnp
sub
jns
popf
xor
out
lret
aaa
jl
xchg
push
jecxz
mov
xchg
sbb
insb
addl
jnp
jo
or
pop
or
insl
rolb
out
js
sub
call
push
mov
ret
adc
and
mov
xchg
insb
push
hlt
into
push
xor
adc
cli
pshufw
cmpb
or
jns
mov
xor
ret
faddl
cmc
shl
out
inc
ret
or
sub
cmpb
mov
jle
mov
dec
push
movsb
test
repnz
insb
lods
xlat
add
inc
sub
sub
inc
cmp
mov
shll
lea
push
push
mov
hlt
mov
jno
jecxz
sahf
pop
pop
push
xchg
test
sbb
mov
jno
cs
lds
sbb
push
lea
inc
lock
and
adc
filds
mov
pop
xchg
xchg
or
push
divb
sub
loop
sub
stos
leave
mov
loopne
xchg
fwait
shll
cmp
jo
push
negl
loope
testl
push
ja
sub
cwtl
jecxz
ljmp
cli
test
mov
mov
dec
stos
out
imull
cmp
xchg
lock
jle
gs
adc
popa
pushf
lock
arpl
push
dec
decl
xor
push
adc
adc
daa
inc
xor
inc
ja
inc
imul
inc
imul
cmp
lock
pop
test
ds
mov
xchg
push
icebp
push
sbb
jae
sti
nop
cltd
sub
cmc
and
rcll
cltd
pop
xchg
jbe
sub
test
sub
cmp
lret
mov
ds
lock
ret
and
cmp
sbb
daa
mov
mov
mov
xor
xor
cmpsl
idivl
rcrb
fcompl
xor
inc
and
cmp
xor
cmp
mov
sub
push
pop
repnz
mov
push
test
xor
mov
mov
and
sbb
pop
push
cmp
and
ficompl
stc
shl
std
aaa
pop
xor
push
fisttpl
add
cld
neg
hlt
lock
pop
sub
cmp
and
rcrl
sbb
xchg
mov
ds
scas
add
lahf
jae
and
push
xor
cld
fcomps
inc
inc
cmc
push
cs
and
jp
cli
ret
nop
lock
cmp
sub
bound
mov
or
sbb
xor
stc
or
outsl
push
cltd
push
fwait
aad
lds
jno
dec
pop
pop
je
or
adc
add
movsb
mov
aaa
xor
test
ds
add
dec
gs
jnp
test
das
jae
cltd
sbb
fdiv
and
push
push
imul
jle
cmpsl
icebp
mov
testb
lods
mov
sub
mov
xor
push
fstpt
bound
mov
add
loopne
sbbb
inc
push
lods
xor
test
nop
dec
adc
iret
mov
jle
sub
shrl
add
or
cmp
enter
or
subl
mov
xchg
sbb
or
aad
sub
lret
push
xor
jge
int
sub
std
push
mov
add
mov
jb
loopne
and
xor
stos
pop
push
fildl
pop
insb
in
mov
iret
lods
test
js
dec
jle
push
mov
mov
mov
jbe
or
dec
pusha
push
pop
mov
adc
add
pusha
stc
mov
ljmp
sub
pushf
jecxz
shlb
dec
into
testb
xchg
adc
leave
mov
dec
ficoms
faddp
cwtl
adc
sbb
insl
jns
push
jmp
xor
in
cmc
push
pop
xchg
and
add
push
mov
push
outsb
mov
mov
jmp
loope
mov
xlat
sbb
mov
add
or
mulb
std
cmp
imul
inc
in
leave
incl
mov
inc
dec
xlat
lahf
or
xorl
sub
jo
arpl
sbb
jbe
cld
xor
cmpsb
cs
roll
adc
adc
imul
icebp
pop
lahf
inc
xor
test
sbb
and
and
ss
ds
mov
adc
push
cld
pop
sbb
adc
ja
jecxz
inc
dec
ret
push
xor
jbe
dec
and
and
inc
pop
push
inc
hlt
mov
lds
icebp
pop
jb
xor
leave
sub
mov
imul
jg
sahf
push
mov
push
repnz
xchg
out
cli
pop
adc
jge
mov
stos
cmp
xor
sub
out
push
aam
jo
inc
inc
dec
mov
mov
sub
mov
fnstenv
jmp
xchg
mov
xor
pop
add
daa
cli
and
popf
negb
adc
cmp
loop
push
aas
call
roll
lds
cwtl
push
mov
cmp
sahf
xchg
adc
popa
pop
xor
jp
sub
jns
fcompl
mov
cmpsl
cmp
enter
sub
jns
outsl
jae
mov
adc
into
xchg
stc
pop
sbb
imul
fimull
push
paddusb
ds
jp
cmp
and
sahf
fwait
ljmp
push
push
outsl
xchg
inc
lods
xor
clc
or
int3
sbb
fdivs
insb
dec
ljmp
jecxz
mov
jne
pop
loop
or
fcmovne
loopne
rcrl
out
jle
jno
test
push
jmp
mov
mov
inc
push
cmp
cmp
sbb
xor
mov
xor
mov
dec
pop
add
ret
push
cmp
cmp
push
lea
pop
subl
inc
sub
or
clc
out
push
in
add
mov
test
or
mov
mov
sub
xor
scas
scas
dec
sbb
push
leave
jnp
dec
adc
pusha
sti
sub
xchg
mov
add
arpl
jl
and
icebp
adc
movsb
inc
cmp
pop
push
push
xor
fcomps
xor
push
mov
or
rolb
push
mov
xchg
int3
pop
dec
shr
push
pop
jnp
cld
sbb
insb
in
cltd
imul
adc
jmp
scas
outsl
les
arpl
gs
data16
shrl
push
lahf
popf
ret
outsb
cmc
adc
sbb
xor
into
lea
and
sub
loopne
pop
inc
cmp
in
mov
scas
jne
bound
fnsave
mov
cmp
popa
and
decl
pop
dec
aam
and
enter
pushf
inc
enter
xchg
or
cmp
frndint
mov
sbb
lds
jl
dec
lcall
out
xchg
or
fistl
das
or
lret
or
mov
sub
dec
iret
in
ja
jg
negl
push
jae
push
and
testb
test
cmp
add
adc
aad
lods
pop
xor
shlb
jecxz
popa
push
sub
mov
cld
iret
sahf
out
mov
cmp
jp
mov
adc
ja
or
sbbb
insl
jge
fildl
mov
xor
inc
data16
jne
fnstcw
pop
fistpll
push
adc
pop
fisttps
daa
sub
xor
add
movsb
in
pusha
enter
add
xor
test
jg
cli
subl
mov
test
lcall
arpl
rolb
add
xlat
test
cmc
mov
jnp
cmp
lret
sub
inc
sbb
cs
rcr
or
mov
cmp
pop
sar
pop
mov
xlat
aad
lds
cltd
jnp
pop
push
mov
ret
shll
out
push
cmp
popa
scas
mov
mov
push
push
dec
inc
push
xchg
sub
cltd
test
pop
xor
stc
and
add
sbb
mov
aaa
cmp
aaa
xorl
mov
js
icebp
inc
std
adc
push
adc
mov
pop
cli
mov
ret
call
js
loopne
xor
jl
cmp
pop
dec
and
shlb
inc
mov
inc
ret
pop
and
cmpsb
enter
ret
sahf
js
pop
mov
xchg
push
decl
xcrypt-ofb
cmpsl
test
push
cmp
ss
sub
jno
aas
sbb
popl
cmpsl
sbb
incl
mov
xchg
stos
or
jge
sub
xchg
popa
mov
xor
cmp
mov
push
jge
add
mov
adc
or
pop
mov
cmp
aam
xchg
fdivp
repnz
pop
scas
std
xor
cmc
cmpsl
fcomip
movsl
es
mov
js
sub
sub
mov
imul
mov
jnp
ljmp
mov
jmp
test
jp
sub
cwtl
mov
pop
push
xchg
fcmovnbe
fidivl
and
add
pop
nop
dec
in
add
ss
loop
shll
int3
push
xor
shrl
idivb
fs
sbb
push
or
cld
decb
xor
push
jne
js
repz
push
call
inc
sahf
jl
aad
jecxz
inc
push
push
ja
insl
mov
xchg
fdivrl
pop
cmp
test
cmc
fbstp
xchg
lods
inc
mov
xchg
cmpsb
sub
pop
mov
lret
pop
and
clc
cmp
xor
and
in
sub
push
pop
and
xlat
leave
jo
roll
jns
int
out
repnz
decl
mov
test
movsb
xchg
pop
mov
insb
into
push
daa
mov
cmp
daa
in
pop
dec
scas
repnz
mov
inc
dec
iret
push
test
mov
cmp
nop
mov
mov
int
dec
idivb
ret
inc
push
pop
clc
mov
insl
pop
pop
sahf
out
pusha
gs
mov
negb
les
out
lret
fstpt
or
orb
xchg
cmp
jmp
pop
jne
xchg
xor
cwtl
xchg
sbb
jge
inc
lods
xor
test
add
mov
test
ds
or
sbb
cmc
pop
xlat
inc
xchg
push
jne
int
sarb
push
jle
xchg
jmp
test
and
dec
sbb
dec
mov
jnp
sbb
dec
scas
xor
mov
jns
mov
inc
aam
pop
pop
dec
andl
stos
pop
in
jae
aaa
out
bound
addr16
repnz
mov
dec
mov
arpl
add
xchg
pusha
cwtl
dec
das
adc
push
imul
jg
in
add
push
aam
push
sbb
ds
sub
jns
std
push
loop
lcall
jae
jne
insw
pop
mov
add
adc
xchg
lea
jl
mov
fcmovne
int3
subl
xchg
mov
data16
jae
jmp
test
and
push
cwtl
test
inc
pop
cmp
mov
les
shll
ljmp
mov
mov
and
cmp
sbb
dec
mov
inc
xchg
mov
ss
inc
push
xor
inc
xchg
dec
cmc
jnp
sarl
in
mov
jns
adc
bound
pop
lret
cs
fadd
mov
push
bound
sbb
adc
jb
iret
or
or
mov
andb
inc
jo
aam
push
jge
mov
jl
add
andb
inc
ss
mov
and
push
jp
inc
mov
insb
bound
cmp
xor
mov
loop
aad
cli
iret
add
outsl
xor
mov
pop
dec
xchg
cmpb
cmp
lcall
jno
adc
sbb
sbb
mov
pop
sub
and
lret
lret
pop
cld
add
or
cmp
lods
dec
aas
and
sub
inc
xchg
cmp
adc
mov
mov
sbb
mov
xchg
in
sbbl
scas
aad
adc
adc
jecxz
shl
nop
test
cld
ret
cmp
lock
mov
inc
roll
hlt
pop
mov
or
popa
int
cmp
mov
das
into
repnz
addb
cmpsb
mov
or
in
dec
aam
jp
xor
nop
scas
mov
and
or
loopne
xchg
jb
iret
aam
jnp
xchg
mov
mov
jo
inc
pminub
xchg
cmp
ret
jp
aam
mov
xor
stos
imull
adc
test
pusha
push
pop
mov
jno
or
ret
push
jb
ljmp
mov
dec
sbb
xlat
mov
mov
mov
dec
mov
pop
ret
outsl
loop
lret
dec
sbb
fcoms
imul
sub
jmp
inc
iret
ss
jne
mov
orl
sub
fdivrs
sub
and
jo
xor
int3
int
xchg
mov
lds
fmuls
jns,pt
fstpt
test
dec
cmp
mov
fsubrl
ret
push
mov
xchg
or
mov
xor
pop
lea
fwait
pop
sbb
out
gs
test
in
fs
cmp
mov
push
rorb
mov
mov
not
sub
dec
sbb
ficomps
shr
out
es
xor
leave
or
jnp
popa
pop
popa
insl
stc
add
lock
or
sbb
bts
dec
addb
loope
jecxz
cmp
test
sub
insb
pop
jge
and
inc
push
mov
pop
pop
ret
loop
and
insb
lcall
pop
mov
aas
mov
lds
ljmp
cmc
mov
cmpsb
in
xor
or
cmp
ljmp
push
addb
mov
jl
mov
loopne
fldt
push
ljmp
sub
imul
cmpb
and
rorb
mov
and
stos
inc
cmp
test
cmpb
loope
sarb
cmc
fildl
icebp
popl
mov
adc
mov
movsb
jle
mov
xchg
mov
outsb
aad
inc
xchg
cmp
js
out
dec
arpl
fiadds
pop
dec
adc
lods
sub
pop
mov
pop
loop
bt
adc
jle
cmp
dec
push
xor
pop
inc
ret
push
push
cmc
xor
js
jne
popa
loope
and
push
fldl
in
cld
aas
out
mov
cmc
into
push
pop
dec
pop
std
aad
dec
xchg
inc
pushf
out
movsl
lea
aad
out
jo
das
pop
push
xchg
bound
pop
in
fsubs
dec
fldt
inc
fwait
mov
sub
xor
and
lea
mov
in
cmp
test
lock
data16
push
fdivr
or
out
or
mov
jbe
addr16
push
shrl
inc
cwtl
jecxz
cmp
dec
and
fsubl
jg
ss
add
or
ljmp
jg
pop
cld
inc
cwtl
push
inc
nop
jae
and
fldt
inc
lods
jp
adc
call
jge
push
ret
sbb
insb
arpl
mov
pop
jmp
push
insb
cs
dec
inc
cwtl
pop
loope
push
push
movsb
jo
lods
sub
push
loop
mov
es
int3
scas
scas
mov
rolb
inc
push
xchg
push
push
mov
dec
adc
movsl
fsubp
xchg
inc
mov
push
jecxz
pusha
dec
pop
push
push
inc
cmpl
dec
xchg
sarl
aas
call
xor
and
cmpl
push
mov
mov
outsl
mov
jno
push
ffree
daa
test
lods
inc
stc
mov
jns
mov
call
call
bound
mov
or
mov
inc
pop
jb
fdivrp
cmp
or
cmp
mov
rorb
ret
stos
push
mov
sbb
fchs
sub
enter
cmc
mov
mov
pop
or
movsl
daa
and
cs
push
fst
and
and
decb
out
les
outsl
and
xchg
scas
adc
jmp
inc
fdivs
sbb
cmpsl
stos
inc
xchg
fxch
aad
xchg
xchg
push
mov
mov
pop
push
adc
or
out
fldenv
fldenv
fs
add
dec
sub
int
push
inc
xchg
sti
xor
popl
mov
ret
hlt
sbb
pop
adc
adc
or
cmp
out
das
dec
jg
cmp
mov
jmp
jne
mov
dec
and
cli
shrb
insb
xchg
shlb
cmc
lods
lea
cmp
xchg
or
and
out
lret
jmp
bound
repz
popl
pop
rolb
ret
and
pop
inc
sub
ja,pt
inc
adc
jns
dec
leave
sti
iret
mov
fsubrl
add
jae
inc
rcll
push
int
mov
push
cmp
push
push
sti
jne
mov
mov
push
in
aad
and
mov
jle
popa
mov
and
test
or
sti
cli
mov
sub
lock
jbe
insl
cmp
aam
je
ret
int
jmp
mov
out
inc
sub
sub
loop
pop
test
insb
inc
in
in
push
test
mov
std
mov
push
cmp
sbb
and
add
xor
fs
scas
int
xor
mov
jae
aam
adc
sbb
and
push
out
cmpsb
push
repnz
clc
aas
sbb
dec
sahf
lods
xchg
sbbb
cmp
sub
mov
mov
leave
pop
add
mov
jmp
clc
sbb
push
fistps
pusha
les
lahf
stos
xchg
lock
or
push
push
push
js
sbb
popa
jo
data16
gs
push
mov
push
sbb
aaa
das
mov
mov
add
jle
xchg
dec
mov
mov
outsl
sahf
push
mov
push
fdivl
cmp
inc
cmp
adc
adc
cmp
nop
fistps
inc
jp
add
xchg
or
dec
loopne
pop
xlat
mov
dec
movsb
fldl
push
jmp
stos
int
repz
mov
fs
xchg
fisttps
sub
and
rcll
fwait
shrb
insl
arpl
add
and
or
adc
data16
push
pop
adc
mov
cmp
xchg
mov
ud1
jno
clc
jnp
aam
xor
add
pushf
pusha
lret
rcrl
sbb
mov
icebp
fldcw
shlb
sbb
xor
mov
mov
lea
push
out
cmp
imul
int3
cmp
add
mov
sub
or
lret
aam
out
dec
fisubrs
inc
xor
sti
push
mov
or
add
mov
dec
inc
repnz
sbb
repnz
je
jae
ds
push
xchg
pop
xor
in
shll
mov
adc
fstps
cld
sub
xor
shrb
and
mov
cmp
jmp
mov
xchg
mov
adc
pop
xor
xchg
push
nop
jecxz
adc
cmc
mov
add
mov
jg
dec
inc
decb
outsl
jne
inc
nop
rorl
cmp
cld
mov
rdpmc
jnp
push
xor
push
in
in
push
out
clc
repnz
or
jge
popf
xchg
fisubs
incl
mov
xor
mov
mov
mov
outsb
add
push
add
in
sahf
jns
insl
mov
les
mov
rclb
dec
inc
mov
iret
sarl
jge
mov
push
sub
cs
cli
jnp
push
test
repnz
adc
adc
and
mov
jle
addr16
push
dec
mov
in
push
jae
insb
sbb
jge
mov
jbe
adc
mov
cld
and
movsl
into
loope
inc
addb
sub
xchg
aaa
lods
notb
adc
mov
insl
insb
push
pop
cmc
mov
movsb
or
adc
xor
ret
and
sub
ja
xchg
cmp
cltd
mov
dec
dec
push
jl
repnz
push
mov
shll
jge
ret
das
sahf
and
in
mov
sbb
push
shl
jmp
xor
lcall
xchg
sub
mov
xor
call
xor
push
jp
loopne
mov
push
sahf
mov
and
xor
push
inc
std
daa
mov
pop
jmp
outsb
xor
jne
pop
mov
in
mov
arpl
neg
lcall
cmpsl
xor
mov
sub
adc
clc
cmp
mov
sbb
or
addr16
inc
xchg
or
fwait
ret
aam
mov
pop
cmp
xor
stos
cwtl
addb
imul
push
fimull
push
or
xor
push
ficoms
push
mov
push
lret
fidivrs
pop
in
or
gs
pop
mov
jle
popf
push
insb
push
add
cwtl
leave
ret
aaa
sub
jb
hlt
or
or
jle
leave
push
push
xor
and
nop
mov
or
and
in
pop
imul
push
and
gs
push
xchg
mov
roll
jbe
inc
fcomip
sub
lretw
pop
or
cmp
mov
xor
stos
mov
cmpsl
cmp
dec
ret
adc
xchg
adc
loop
fwait
lds
popa
fidivs
cmp
fs
cmpsl
stos
push
jl
inc
out
or
scas
inc
leave
jno
ret
sub
fidivrl
adcb
xchg
ret
dec
sbb
imul
cmp
stos
sarb
arpl
pop
sub
loop
fst
out
jo
cld
jge
pushf
pop
mov
push
mov
cmp
mov
mov
mov
push
les
jmp
dec
xor
lds
repz
outsl
out
loope
test
test
mov
arpl
cmpsl
lret
in
outsb
repz
ds
sbb
pusha
outsl
lahf
xor
adc
or
mov
adc
add
fcoms
mov
cmp
std
mov
add
fsub
xchg
jo
stc
rcr
mov
std
mov
jno
insb
adc
inc
dec
ret
pop
movb
jecxz
push
popa
push
pushf
lcall
mov
in
arpl
cmc
loopne
jo
addr16
mov
dec
jle
jae
aas
mov
add
out
mov
mov
jmp
dec
gs
xchg
jg
push
adc
cmp
sbb
inc
incl
inc
or
cli
pop
pop
clc
test
outsb
and
fnstsw
add
sub
jle
call
lahf
mov
cmpsb
cs
pop
sbb
arpl
pop
jp
shlb
jl
dec
jne
pushf
bound
mov
or
push
xchg
sub
sbb
gs
cmc
sbb
dec
or
cld
aad
insl
cmpsl
scas
dec
lods
repnz
push
add
cmp
inc
push
push
add
imul
test
pushf
imul
jae
or
mov
sbb
outsb
ret
ret
sub
ss
aas
mov
gs
adc
sub
xchg
loope
jae
jmp
adc
jge
cltd
inc
imul
sbbb
adc
mov
out
jbe
dec
and
ret
mov
ss
in
push
adc
pop
repnz
or
into
lea
es
dec
mov
mov
push
push
mov
jp
stos
cmp
imul
out
inc
mov
loopne
cmp
cmpsl
addr16
repz
std
or
jmp
imul
clc
rolb
lods
fcmovnbe
and
lds
mov
mov
data16
int
pop
mov
nop
jns
sub
shrl
xor
adc
data16
shll
into
sub
mov
add
repz
add
cmpsl
stc
or
aad
jmp
loope
sahf
nop
xor
adc
add
adc
mov
loop
popf
stos
hlt
fnsave
adc
mov
pop
call
cmp
xchg
clc
outsl
sub
pop
aas
shl
mov
lods
test
cmpsl
insl
xchg
pushf
sub
sarl
xor
test
rcrb
je
fistpl
adc
popl
rcll
xchg
ret
cmc
fidivl
aaa
pop
adcb
cmpl
sub
push
mov
mov
cmp
xchg
pushaw
enter
call
or
loope
dec
xor
leave
pop
push
mov
xchg
pop
repnz
mov
fldcw
rolb
adc
mov
jle
cli
fisubrl
mov
pop
xor
mov
cmp
mov
aas
dec
imul
ds
push
dec
xchg
mov
fadds
push
xchg
jns
rorb
ss
push
popa
movsb
imul
cmc
aas
pop
inc
leave
dec
daa
jnp
add
rcll
xor
adc
out
and
shlb
adc
pop
pusha
aam
out
fcomps
mov
dec
cmp
insb
stos
push
sarb
and
mov
and
xchg
mov
pop
sbbb
and
sbb
ljmp
xchg
incb
in
stc
xor
push
out
mov
icebp
jnp
mov
stos
pushl
xlat
lods
pop
inc
inc
hlt
mov
int3
cmpsl
mov
xchg
lods
aas
xchg
pusha
clc
sub
aas
push
jne
movsl
in
loop
insb
andb
pop
std
leave
push
push
negl
xchg
cwtl
mov
mov
mov
mov
sub
sti
in
jl
js
rolb
jmp
mov
jg
rorl
mov
cmp
or
cwtl
add
push
xchg
xchg
sarl
add
mov
aam
xor
sub
xchg
xlat
in
and
test
pop
cs
test
bound
lods
push
fidivs
pop
loop
push
jno
outsb
mov
movsl
mov
in
fnstenv
add
xchg
scas
xchg
in
ljmp
in
imul
repnz
xor
mov
std
push
enter
add
clc
rcrl
ret
std
cwtl
add
mov
lea
lret
icebp
lds
xchg
xchg
call
dec
and
jbe
sub
push
sbb
add
jmp
dec
sub
sub
push
mov
add
jp
pop
into
inc
xchg
bound
pop
addb
inc
cmpsb
shl
jle
xchg
sti
xchg
inc
push
mov
mov
daa
push
mov
imul
decb
xchg
inc
mov
outsb
lcall
sub
les
rorb
lea
push
push
popa
cltd
iret
mov
fs
je
not
cmp
inc
adc
and
jecxz
inc
mov
adc
push
adc
dec
test
push
sbb
and
mov
and
jecxz
repz
hlt
out
mov
test
adc
xor
ficomps
scas
in
std
cltd
arpl
dec
or
adc
inc
add
jbe
push
or
sbb
jmp
cltd
fcomi
lock
pop
int3
shll
inc
pop
inc
icebp
ja
ret
call
jmp
mov
sub
scas
inc
adc
push
mov
add
orb
xor
xchg
ds
ds
lods
push
add
inc
mov
cmp
xchg
cmpsl
push
jns
arpl
inc
sbb
mov
arpl
outsb
pop
ret
nopl
or
push
or
aam
dec
bnd
in
jbe
and
push
lds
pushl
pop
and
dec
mov
cmpsl
roll
and
push
push
je
mov
sbb
into
sbb
mov
cmpb
mov
pusha
mov
and
cmp
sub
scas
push
dec
mov
sbb
fs
out
insl
xlat
addr16
pop
aam
mov
popf
lds
shrl
mov
lods
adc
das
test
add
negl
inc
mov
movsl
and
inc
mov
mov
out
mov
and
xchg
cmp
cmp
pop
cmp
sbb
sti
mov
sub
mov
andl
or
xor
sub
mov
rcll
mov
cld
adc
xchg
cltd
repnz
ds
jns
lods
mov
outsb
mov
jp
xchg
insb
lods
xchg
shll
movsb
pushf
pop
jge
lret
lret
movsl
add
xor
call
xlat
sub
pushf
popa
inc
sub
inc
push
mov
sbb
sub
xchg
daa
shlb
aaa
and
lret
pop
jnp
sbb
xchg
sub
inc
push
pop
stos
inc
enter
jecxz
out
lea
cmpsb
pop
jns
cli
in
loope
pop
lods
fidivs
xor
mov
rcll
popa
bound
xchg
lcall
mov
xchg
pop
inc
jmp
inc
pop
sub
imul
les
mov
mov
xor
cltd
lcall
addr16
sub
aad
xchg
xor
cmpsl
adc
movb
sti
test
out
inc
adc
in
adc
jmp
fisubrl
mov
shlb
addr16
lahf
sbb
nop
popf
ljmp
ret
pushf
aaa
rcrb
repz
fwait
jo
ret
push
cwtl
cmpb
or
clc
fmulp
add
sub
ja
xchg
pop
ss
xor
mov
mul
push
inc
mov
rcrl
and
xor
out
push
mov
test
sub
dec
pop
pusha
pop
push
jb
outsl
add
mov
sbbb
aas
inc
gs
adc
fcomp
stos
ret
mov
add
sbb
outsb
inc
and
scas
insl
loopne
jo
inc
sbb
push
and
sub
in
sub
sbb
sbb
cmp
clc
ljmp
mov
sub
mov
xor
pop
add
xchg
dec
mov
mov
lds
shl
xor
inc
inc
neg
nop
cmpsl
fmuls
xchg
mov
push
mov
or
stos
aam
cmp
add
lds
or
mov
data16
sub
divb
stc
mov
jns
frstor
push
jl
adc
imull
fisubs
or
insb
ds
pop
cmc
sbb
imul
mov
mov
test
fidivl
outsl
mov
cld
mov
cmp
cmc
dec
outsb
aas
daa
adc
adcb
clc
dec
iret
leave
lods
int3
add
mov
or
sub
out
sahf
insb
fidivrl
sbb
mov
movsl
jp
mov
imul
sub
or
or
sub
cwtl
outsb
dec
hlt
jge
stos
movsl
scas
shlb
push
fadd
leave
cmc
pusha
fcomip
adc
pop
out
lret
xor
outsb
jae
inc
and
dec
arpl
icebp
aaa
xchg
nop
pop
mov
xchg
pop
jl
mov
int3
inc
jb
ljmp
test
push
cmpsb
jge
cli
xlat
lods
test
rclb
mov
inc
mov
gs
jo
test
sbb
sti
or
nop
xor
mov
out
jle
cs
les
jns
stos
inc
lahf
mov
int3
inc
outsb
in
loope
dec
cmpsl
mov
mov
mov
sub
jp
jg
and
subb
and
dec
es
in
in
inc
mov
mov
or
dec
aam
hlt
xchg
cltd
mov
shll
dec
test
enter
cmp
sub
dec
rorl
in
mov
cmp
rorl
sbb
icebp
sbb
insl
mov
fistl
nop
out
sbb
mov
ja
jbe
stos
pop
das
imulb
roll
test
cmp
mov
jno
js
and
add
daa
fsts
movsl
lret
lret
add
sub
lret
bound
repz
imul
nop
gs
stos
or
xor
les
sbbb
mov
test
or
or
add
cmpsb
or
and
in
add
push
mov
scas
and
and
pop
jo
jl
or
stos
sub
mov
lret
sbb
outsl
les
movsl
ficomps
inc
xchg
cmpsb
pop
jb
push
daa
shrl
xor
or
adc
dec
movsl
arpl
lods
out
adcl
insl
iret
pop
mov
pop
lea
out
int3
xlat
xor
sbb
lret
dec
pop
lret
pop
mov
add
inc
enter
cmp
shll
cld
cmpsl
fildll
xor
aas
cld
sub
or
mov
idivl
jp
add
and
subl
fs
lret
out
ja
cmp
clc
inc
call
aad
hlt
jmp
push
mov
ljmp
sub
cmp
into
sbb
popa
pop
lahf
xchg
add
bound
sub
push
out
pop
push
dec
sbb
xchg
jno
cmpsb
sbb
aaa
sub
cmp
or
xor
mov
insb
shll
in
inc
xchg
in
movsl
push
ja
jne
jnp
sub
lock
fcmove
mov
cmpsl
push
movsl
lock
ret
fwait
popa
enter
dec
aaa
jmp
repz
or
fcmovnbe
test
xor
mov
icebp
mov
xchg
or
iret
adc
in
sub
lods
jecxz
xlat
adc
aam
mov
and
pop
adcl
mov
movsl
pop
cmp
or
push
hlt
add
sub
mov
inc
cltd
add
push
repz
jns
daa
xchg
stc
enter
push
pop
jl
jl
add
repnz
and
dec
add
jae
std
icebp
xchg
repnz
ja
stos
aaa
mov
divl
pop
pop
in
aam
push
cltd
dec
push
mov
adc
int
jae
movsb
fbld
mov
xor
testl
jae
xchg
lds
das
fnclex
xor
push
cmp
mov
mov
xlat
add
cmpsl
stos
insb
jecxz
test
and
push
lock
imul
pop
mov
inc
cli
push
push
xchg
cltd
mov
ds
pushf
notb
jne
xchg
enter
jge
outsb
cmpsl
lret
xor
inc
ss
mov
fdiv
and
dec
bound
testl
push
and
push
and
add
jp
mov
cli
test
inc
add
lods
pop
cmp
bound
mov
fldl
jo
aad
mov
sahf
roll
lret
ss
jl
sbb
outsl
seto
repz
test
jbe
cld
push
push
inc
sbb
rcrl
in
ljmp
adc
cmp
mov
lods
stc
adc
lods
xchg
lret
rorl
lahf
mov
sub
repnz
push
jb
cltd
xor
imul
mov
sub
adc
in
insl
int
mov
mov
mov
jmp
cmp
dec
inc
add
bound
outsl
adc
sbb
lret
xor
adc
aam
aas
cs
addr16
test
lahf
dec
je
xor
mov
rclb
cmp
mov
adc
add
adc
inc
adc
test
jp
testb
adc
fnsave
bound
add
mov
xorb
test
cmp
mov
mov
mov
or
inc
out
mov
lcall
nop
lret
loope
or
pop
je
int
std
pop
mov
fimuls
aad
lds
xor
mov
jne
jge
aas
cmp
or
xor
cld
xor
or
jbe
imul
dec
add
scas
adc
inc
jmp
mov
push
fistps
insb
pop
insb
add
adc
sub
xchg
fsubp
inc
cli
scas
js
mov
inc
sahf
out
nop
pop
xor
leave
das
pop
jp
lahf
jecxz
mov
es
push
imulb
jnp
out
cmpsb
fwait
jnp
adc
jg
or
push
add
inc
dec
jl
insl
aam
out
out
stos
call
push
add
in
movsb
or
out
xor
imul
add
push
sti
test
pusha
and
mov
sarb
cmp
pushf
xorb
mov
jmp
or
cld
xchg
outsb
adc
adc
pop
ja
jnp
test
test
mov
xor
ds
ficoml
popa
sahf
mov
push
jp
xchg
stos
cld
scas
xor
movsb
hlt
pop
stc
ficoms
and
mov
xor
xor
imul
xchg
test
lock
shll
adc
adc
cwtl
lods
cmp
lea
movsb
aaa
lahf
std
pop
xchg
lods
adc
das
adc
sub
jno
shrb
dec
aaa
stos
jns
cmpsl
hlt
push
adc
adc
pop
test
mov
sbbb
dec
movsb
cmp
repz
outsb
inc
sub
push
cmp
lods
aam
fs
inc
and
pop
adc
es
adc
cli
fwait
mov
scas
jnp
lcall
pop
vaddsd
mov
dec
adc
dec
or
out
out
out
mov
mov
loopne
xchg
mov
icebp
daa
cld
out
or
add
jne
test
sahf
test
mov
mov
popf
sahf
xchg
das
shrl
in
dec
jno
and
and
pusha
jle
xchg
cmp
mov
xchg
jo
mov
cmp
fldl
mov
jae
outsb
outsb
aam
adc
pop
xchg
ret
jge
add
jmp
outsb
mov
lods
dec
adc
lods
dec
fwait
adc
jns
and
dec
add
popf
std
xor
jo
mov
jge
out
mov
xor
shlb
sbb
in
sbb
xor
gs
add
cmc
add
mov
xlat
mov
cwtl
push
dec
inc
xor
enter
lods
rorl
inc
jle,pn
stos
xchg
cmp
gs
xor
mov
shlb
dec
test
sub
jbe
rcll
or
push
scas
out
or
idivl
jb
jae
iret
ss
inc
xor
insl
and
mov
sbb
popa
push
int
lds
cmc
stos
push
mov
insb
fwait
jp
add
scas
test
lods
icebp
jno
cmpsl
cmpb
fimull
fcoml
loopne
addr16
inc
sbb
out
inc
ror
xor
and
xlat
and
aas
aam
dec
call
mov
mov
pop
sub
and
aam
mov
sbb
xchg
jp
or
fisubl
push
push
mov
call
das
ja
test
jge
pop
cmp
or
jle
push
cli
mov
jne
int
std
mov
xor
sbb
popf
xor
jg
arpl
fstl
dec
hlt
xlat
pop
xchg
je
or
icebp
lock
ja
sbb
push
cmc
xchg
jnp
pop
repnz
jo
ss
popa
sub
mov
add
push
imul
scas
pop
sbb
addr16
je
stc
js
inc
popf
mov
push
fisubl
jl
sahf
mov
faddp
rcr
das
mov
call
or
mov
cs
pop
pusha
into
push
pop
aaa
xchg
lcall
lret
or
jmp
xchg
or
xchg
loop
xchg
jp
cmp
fldl
ds
cmpsb
cli
stos
pop
popa
in
sub
lcall
in
cmp
pop
sarl
push
or
cmpsb
dec
xchg
cmp
inc
mov
add
loop
in
jg
push
shll
mov
movntq
jl
iret
out
lea
pop
fistpl
inc
add
stos
js
or
inc
lahf
popa
add
out
cld
dec
out
std
mov
loop
mov
test
cmpsl
sub
push
mov
mov
test
mov
es
int
sti
sbb
push
inc
cld
push
out
fidivs
xchg
pop
dec
xchg
push
fisttps
stos
aam
sub
lock
fsubs
sbb
dec
movsl
nop
fdivs
scas
das
lret
push
cld
push
aad
jnp
mov
into
les
cmpsb
movsb
mov
jns
pop
shlb
out
pop
cmp
sub
lcall
mov
jmp
dec
push
or
xor
ljmp
push
loopne
mov
pushf
test
iret
xor
pushf
pop
pop
enter
sbb
pop
cmp
fistpl
pop
mov
sub
jns
add
loopne
mov
push
push
ja
xor
jg
sbb
icebp
jp
addr16
mov
pop
les
incb
sbb
jmp
ss
test
les
insb
push
scas
mov
incb
lcall
sti
scas
push
imul
ljmp
mov
adcl
aas
loop
movsl
jno
iret
mov
idivb
into
sbb
or
adc
cmpb
lcall
pop
xchg
icebp
xchg
ja
mov
daa
stos
stos
pop
sub
movsb
cmp
jmp
dec
in
mov
movsl
rol
repz
fwait
aad
jge
sar
lock
push
cltd
sti
or
sbb
pop
je
pop
scas
jmp
mov
mov
les
pop
iret
movsb
mov
imul
or
inc
jb
mov
sbb
aam
outsl
mov
in
repz
cmp
push
fimuls
push
imul
pop
push
push
es
mov
or
stc
jle
sbb
and
jnp
test
ret
cld
push
mov
out
int3
subb
lcall
std
bound
movsb
sub
and
and
ret
jp
out
push
bnd
xchg
inc
mov
lcall
lcall
and
fld
rorl
lods
sub
xchg
jg
test
jle
ljmp
push
rcl
dec
adc
stc
dec
inc
jne
pop
add
bound
push
into
leave
cmp
nop
cli
fstps
stc
repz
dec
inc
xchg
xor
aam
push
xchg
popa
cmp
mov
or
mov
dec
push
fbstp
lret
stc
add
std
xchg
adc
outsb
aaa
add
adc
push
push
inc
cvtps2pi
sbb
fs
sub
jb
ljmp
mov
jae
jecxz
ljmp
sar
xor
dec
add
mov
jle
xor
fsubrl
jb
jnp
mov
test
adc
arpl
pop
dec
inc
inc
movsl
cmp
outsb
addr16
cltd
xchg
arpl
xchg
mov
inc
inc
push
mov
xor
mov
inc
jb
fisttps
mov
mov
ret
mov
jmp
cmp
inc
jne
jecxz
out
test
sub
pop
fdivrs
sahf
mov
ror
or
sub
sbb
fdivrl
iret
lcall
pop
xor
add
lahf
push
hlt
iret
sbb
xchg
fstps
subb
loopne
adc
dec
outsb
adc
inc
xlat
movsl
andb
add
data16
push
roll
outsl
and
jne
mov
aas
addr16
fsubs
imul
mov
mov
mov
in
pusha
in
push
rcll
xchg
xor
or
jl
push
jnp
dec
push
or
jmp
pop
xchg
mov
push
jmp
sub
mov
ds
adc
mov
mov
adc
or
jno
jp
leave
pop
loope
pop
pop
sahf
mov
push
mov
push
out
xor
jo
mov
dec
sbb
iret
scas
shll
xchg
ror
jnp
pop
leave
cmp
cmc
xchg
dec
or
idivl
dec
and
jnp
insl
mov
int3
push
faddp
mov
push
int
dec
sbb
sbb
adc
and
arpl
mov
icebp
jo
into
loope
dec
pop
xchg
aas
lret
je
popf
adc
mov
ret
test
iret
out
mov
xchg
xchg
into
dec
add
aaa
addb
test
sub
rorl
fxch
xor
push
ljmp
sbb
push
push
sti
sbb
sti
lret
pop
push
loope
mul
sbb
aad
or
mov
lods
mov
aaa
iret
cmp
mulb
sub
jmp
add
stos
jl
and
sti
ss
mov
xchg
sub
sub
rcrb
xchg
cmp
mov
pushf
std
mov
add
or
inc
adc
xchg
sahf
icebp
aaa
lea
rcrb
mov
loope
inc
fcoml
cs
fbstp
pusha
inc
pushf
aad
jmp
adc
mov
mov
in
mov
and
push
pop
cmpsw
ficompl
inc
stos
call
xchg
mov
or
ficompl
dec
xor
xor
adc
fiadds
push
cltd
fisubl
jge
push
jl
pop
scas
jmp
pushf
ljmp
push
je
sbb
js
ds
lahf
sub
test
add
xor
out
fwait
add
push
jecxz
inc
pop
fsubs
lcall
xchg
inc
aad
ds
outsb
mov
aaa
mov
xchg
cmc
mov
rorl
int3
dec
clc
push
sahf
orb
pushf
clc
cmc
aas
mov
mov
loope
sbb
add
bound
xchg
adc
push
imul
cmc
stc
mov
fsts
notl
loope
xchg
arpl
pop
add
sbb
pusha
adc
dec
push
pop
ficompl
cs
dec
dec
loopne
call
roll
fbstp
inc
pop
fwait
cltd
jne
ja
push
jns
inc
sub
addl
xor
mov
pop
in
cli
aam
mulb
rcrl
lcall
mov
in
repz
insl
jnp
fisttpll
loope
add
daa
mov
pusha
cmpsl
jp
mov
fstpt
adc
push
ficoml
jle
pop
dec
mov
or
cwtl
jo
xchg
cltd
lods
or
mov
mov
pop
inc
xchg
mov
ficoms
pop
lods
mov
push
pop
pop
mov
xchg
ja
pop
jle
roll
push
mov
into
cld
mov
lock
push
or
cmpsb
mov
xchg
fiaddl
aad
loope
rcrb
mov
jae
subb
and
gs
pop
mov
mov
and
lcall
push
lcall
call
sti
lret
pop
dec
jmp
or
dec
dec
mov
clc
pop
cmc
aam
test
mov
push
lea
int3
in
test
dec
jbe
das
into
mov
mov
imul
cmp
movsb
sbb
push
std
insl
mov
dec
test
das
cmp
cmp
push
inc
outsb
pushf
shlb
jle
xchg
movsb
cwtl
and
jmp
arpl
xor
in
lret
mov
pop
scas
or
loopne
out
shlb
leave
cli
dec
outsl
inc
loop
imul
xor
sub
aad
mov
mov
sahf
bound
push
out
ret
hlt
cmp
imulb
add
push
lds
jge
inc
dec
jns
hlt
roll
test
jns
pop
or
sahf
sub
inc
test
lea
xchg
sub
mov
hlt
push
cltd
xchg
mov
cmpl
sbb
clc
and
clc
out
fcomip
cmp
jecxz
mov
xlat
scas
pushf
xor
stc
out
daa
and
loop
or
xchg
ds
idivb
add
leave
mov
mov
cmpsb
jbe
fcomps
push
or
sub
idivl
test
mov
xchg
or
sti
mov
scas
inc
fdivrs
fistpll
arpl
gs
cli
divb
sbb
jl
sbb
sub
add
data16
adc
bound
je
sub
outsb
int
stos
dec
add
clc
out
inc
adcl
imul
mov
fisttpll
inc
jo
xchg
push
call
push
sti
add
mov
out
inc
mov
fs
jae
in
mov
icebp
movsb
xchg
jge
sub
mov
mov
insb
cmp
insb
xchg
data16
and
sahf
lcall
in
test
loopne
arpl
cs
add
mov
adcl
mov
cmp
add
jno
filds
mov
cmpb
out
lods
mov
mov
add
pop
pushf
jnp
rcl
or
sub
pop
or
popa
mov
loope
movsl
loope
jbe
aam
adc
pop
xlat
inc
mov
test
mov
sub
icebp
push
dec
mov
and
push
push
aaa
sbb
test
repz
mov
adc
cmp
int3
xchg
dec
push
std
test
mov
or
cmpsb
mov
add
mov
pop
push
sbb
xor
ficomps
xor
jge
ficompl
mov
cmpsb
mov
out
sbb
je
sbb
scas
cwtl
stc
repnz
push
in
sbb
popa
ret
push
pop
pop
add
or
cmp
mov
ficoml
fisttpl
add
call
mov
cmpsl
rclb
jnp
cmc
mov
sub
es
fwait
sahf
out
mov
rep
sub
xchg
and
mov
cs
shr
enter
or
jae
mov
aas
loop
sub
out
rcl
xchg
cltd
inc
imul
jno
push
mov
add
mov
jecxz
fs
push
push
sub
jg
cmpsl
xchg
dec
dec
sbb
stos
mov
add
or
xchg
inc
bound
fnstcw
int
sbb
push
push
push
mov
mov
mov
dec
sbb
scas
adc
sub
adc
in
mov
jbe
xor
aaa
pop
fmul
sahf
jecxz
clc
xchg
inc
out
rcrb
adc
incl
mov
inc
pusha
inc
mov
or
jl
dec
leave
cli
or
jo
push
insb
xlat
fdivrs
inc
mov
mov
and
add
loop
adc
scas
mov
fwait
xchg
inc
shll
cmp
push
shlb
fiadds
cs
or
insb
pusha
outsb
pop
addl
sbb
pop
or
fcomps
inc
adc
call
mov
and
jno
outsl
cs
out
in
mov
lea
inc
inc
rcrb
testb
cmp
loopne
dec
mov
es
test
inc
cmp
addr16
ret
cld
lahf
lods
mov
sub
std
cld
ficoms
rolb
loop
addl
es
iret
or
cli
push
stos
jl,pt
popa
dec
inc
lods
dec
pop
push
pop
icebp
xor
lock
lret
stos
sbb
jb
jns
mov
pop
lock
dec
or
xor
mov
mov
imul
adcl
xchg
cld
leave
sub
cmpsl
mov
jns
pop
cmpsb
sub
movsl
adc
outsl
inc
and
fists
pushf
pop
cmp
inc
fsubrs
ja
in
rcrb
dec
xor
sbb
inc
sub
scas
sub
icebp
or
ljmp
sahf
sar
cltd
push
insl
mov
adc
cmpsl
cmpsb
out
and
js
sbb
les
mov
scas
adc
es
lret
daa
shlb
xchg
and
mov
mov
mov
sbb
movsb
mov
and
enter
xor
pop
clc
lea
xor
test
enter
mov
inc
sub
out
dec
mov
mov
popf
sbb
push
iret
ret
mov
and
in
cmp
add
sub
outsl
outsb
aas
add
clc
mov
mov
mov
hlt
je
lds
mov
sbb
popa
imul
pop
mov
stos
fwait
mov
fstl
roll
ret
and
out
pop
fsubrs
lds
fnsave
ss
cmpsb
stc
mov
pop
jae
in
mov
and
loope
jge
or
mov
xor
fs
outsb
mov
pop
jl
std
fimuls
imul
xchg
xor
les
popf
dec
addl
out
imul
lods
daa
shl
adc
jae
jae
test
mov
jl
or
pushf
and
adc
push
push
popa
mov
loopne
imul
sbb
clc
int3
push
test
mov
addr16
pop
cmp
data16
jbe
leave
xchg
adc
lock
lods
mov
roll
fdivs
mov
repnz
and
and
test
fisttps
mov
ds
cmp
pop
xchg
inc
arpl
and
push
mov
test
fucomp
test
cld
or
mov
and
and
mov
xlat
and
notl
test
movsb
xchg
xchg
cwtl
xchg
lcall
dec
iret
fadds
xchg
incl
mov
enter
lock
dec
aad
mov
inc
arpl
push
sub
and
add
mov
cmp
cmp
inc
dec
inc
enter
xchg
add
lods
add
lret
das
orl
pop
jge
mov
in
out
add
loop
pop
mov
cld
mov
cmpsl
scas
jl
inc
scas
outsl
lds
mov
dec
inc
xor
fsubp
shll
inc
bound
lock
sub
cmp
outsl
push
dec
push
sub
enter
pushf
jbe
test
ss
insb
mov
inc
lods
add
xchg
clc
cmp
mov
inc
outsl
imull
sbb
loop
sbb
jne
cmc
cmp
std
outsb
in
dec
add
dec
mov
test
xchg
nop
hlt
sbb
lahf
iret
add
into
test
adc
rorl
hlt
lret
mov
pusha
lret
adc
mov
xlat
dec
mov
es
out
rorl
cli
inc
adc
pop
in
pop
or
fcmovnb
fimuls
testl
daa
pushf
cmpsb
jnp
or
sbb
ja
shlb
jmp
aad
testl
xor
cmpsb
insl
jno
imul
roll
scas
xor
mov
cmp
pop
cmp
cmpsl
xor
mov
repnz
or
mov
pushf
mov
ss
push
mov
stc
imul
aad
ds
cmp
cmpsl
sarl
xor
aam
inc
or
or
adc
mov
loop,pn
xor
xor
lock
sub
js
mov
out
popa
xor
aaa
push
mov
fistpll
mov
push
mov
test
in
lods
pop
xchg
jecxz
jge
insb
fisttpl
or
or
aam
cltd
call
in
jecxz
cmpsl
aad
insl
out
jp
push
repnz
out
xlat
add
repnz
mov
iret
pop
cmp
jge
insb
ret
push
repnz
xchg
sub
mov
aas
jecxz
dec
call
pop
pop
into
iret
les
popf
push
cmp
loop
mov
add
mov
loop
bswap
lcall
shrl
insb
mov
ja
xchg
add
xor
mov
push
test
dec
sub
std
mov
cltd
xor
out
arpl
mov
sbb
aas
sub
orb
push
ja
fisubl
sub
and
mov
push
loope
pop
dec
sbbb
out
addr16
lahf
jmp
aaa
aam
in
add
jae
pop
lock
jl
dec
mov
xor
xchg
inc
or
dec
push
pop
push
lret
or
xor
loop
sbb
and
rcr
loopne
adc
inc
sti
leave
test
test
jg
push
lret
divl
popa
pushf
scas
adc
sarl
jl
cs
mov
sub
jne
movsb
paddd
js
cmpsl
xchg
add
test
mov
mov
ljmp
xor
aaa
in
es
test
mov
jp
jnp
sbb
push
ja
mov
dec
and
pop
enter
xor
leave
mov
sti
test
lods
cmpsb
shll
mov
adc
sbb
pusha
js
inc
fld
mov
jae
cmpsl
mov
fwait
lea
js
imul
rcrb
mov
and
adcb
loop
out
lock
mov
push
incl
sub
lock
mov
and
imul
out
clc
pop
mov
inc
test
lcall
mov
dec
out
xchg
nop
xchg
or
dec
ds
push
fstl
cmp
movsb
mov
xchg
lahf
xor
rorb
xchg
arpl
daa
or
cwtl
fdivs
pop
cmpsb
sbb
push
and
fisttpl
ja
xchg
adc
pop
jne
cmp
leave
insb
out
inc
ds
cmp
cmpsb
dec
cmp
mov
jb
lods
fcoms
loop
pop
jge
jmp
sub
pop
or
sub
loopne
leave
pop
mov
out
nop
inc
fadd
insb
pop
push
mov
mov
shl
pop
mov
sbb
mov
xor
enter
icebp
sub
inc
js
subb
inc
add
mov
mov
ljmp
push
mov
cmp
test
inc
mov
jge
sub
xorb
push
mov
cmp
cmpsl
adc
cmp
into
mov
and
cltd
popa
testb
and
push
mov
xor
pop
or
xchg
push
mov
les
or
in
fstpl
dec
lods
mov
sbbl
mov
jbe
stos
or
xchg
aaa
mov
lea
dec
mov
adc
sub
push
and
pushf
add
sub
or
or
inc
loopne
dec
es
stos
sti
mov
xor
xlat
cmp
xlat
xchg
mov
push
das
int
cld
or
jo
pop
hlt
xchg
es
leave
dec
push
jnp
inc
stc
adcl
mov
mov
inc
dec
xchg
cmp
das
out
dec
mov
movsb
sbb
lret
pop
dec
or
ja
sub
add
cmp
dec
sbb
in
inc
cmp
jbe
sbb
cmp
lods
add
test
push
xchg
and
rol
inc
or
outsb
dec
imul
mov
mov
frstor
fstl
or
vpsllq
mov
sub
shrb
pop
std
dec
cmpsb
xor
sti
jl
sti
lret
popa
sub
sub
std
pop
mov
sub
mov
adc
addl
xor
xchg
loopne
cli
add
nop
or
fcoms
mov
fists
pop
jo
outsl
outsb
sti
adc
hlt
pop
aam
adc
rcl
mov
xchg
lods
xchg
cmpsb
icebp
sub
shlb
mov
daa
movsl
jne
cmpl
test
lods
mov
ja
push
les
dec
xorb
ret
dec
sti
leave
inc
inc
or
mov
iret
lea
addr16
mov
xchg
inc
loop
test
test
jns
xor
xchg
add
mov
push
mov
outsl
pop
lods
jle
inc
repz
cltd
xor
shrb
loopne
push
jge
in
push
sbb
arpl
jae
jmp
pushf
insb
incl
xor
mov
xor
push
dec
enter
shl
cltd
pop
cmpsb
sub
sbb
add
sahf
cs
xlat
xchg
mov
pop
inc
xchg
mov
nopl
dec
xchg
cmp
test
or
notl
pop
lret
dec
mov
jno
adc
nop
inc
mov
xor
rol
mull
dec
mov
sbb
jmp
dec
and
xchg
mov
notl
scas
ret
insb
xchg
dec
sbb
and
jmp
dec
jp
inc
data16
mov
or
push
xor
gs
inc
xchg
dec
cld
idiv
jmp
jmp
jns
pop
dec
sbb
arpl
inc
or
push
lods
mov
out
jnp
outsl
js
dec
pop
mov
adc
push
bound
lods
out
scas
pop
mov
sub
push
fdivs
test
subl
push
adc
nop
ret
jecxz
add
xchg
test
aam
or
cmp
icebp
sbb
xchg
arpl
push
push
mov
dec
cmpb
and
cmp
xchg
mov
inc
icebp
inc
outsb
cmp
test
sub
jnp
popa
xor
dec
cs
xor
les
xchg
xchg
push
inc
cmp
lods
lods
cmp
hlt
sub
enter
bound
into
inc
stos
inc
xchg
aad
out
and
shll
pusha
cs
jg
adc
inc
sbb
mov
or
push
div
lds
rsm
dec
jge
push
xchg
jo
inc
add
test
gs
mov
enter
adc
ja
cmpb
mov
rclb
sub
xchg
inc
in
push
inc
mov
stos
push
mov
test
mov
cmp
push
sbb
lcall
cmp
pop
jp
je
das
jb
cld
mov
loopne
sub
imul
pop
or
shl
stos
and
sub
cmpsb
call
stc
jge
add
cmp
pop
or
push
mov
mov
cmp
adc
mov
xchg
fists
cmp
pop
iret
loop
push
xor
add
push
lea
in
push
mov
jg
in
sbb
jae
add
lret
and
push
push
sub
adc
mov
pop
lods
scas
sub
jnp
popa
stos
lods
fimull
hlt
push
xchg
and
enter
sbb
leave
xor
fmulp
out
jecxz
jge
pop
fstps
in
cmpsl
cwtl
inc
add
cmpsb
inc
and
ja
leave
mov
das
repnz
sbb
mov
mov
imul
fwait
xor
inc
dec
sub
and
leave
or
test
outsl
pop
and
or
roll
loopne
nop
cmpsl
mov
into
push
shrb
sub
pop
into
cmp
and
pop
in
pop
les
lahf
mov
out
xchg
xchg
add
fsubr
in
fistl
inc
movsl
or
pop
das
mov
lret
fdivr
sbbb
pop
adc
repz
fwait
push
mov
mov
ds
or
cmp
add
sbb
mov
cwtl
stc
and
gs
lock
outsl
inc
aaa
xor
shll
jge
out
xchg
inc
or
shlb
pop
lret
mov
iret
test
arpl
repnz
push
aam
cmp
fiaddl
iret
jo
pop
adcl
cmp
loope
jmp
or
mov
xor
xchg
pop
imul
enter
mov
les
xchg
add
std
xchg
jecxz
lods
sub
mov
test
ret
repz
arpl
or
fwait
pop
pop
insl
repnz
adc
iret
fnstenv
shl
aas
push
and
lea
out
sbb
inc
ss
push
sub
mov
frstor
pop
popf
insb
xchg
mov
daa
push
jne
nop
loop
push
ljmp
push
push
dec
push
jle
xor
out
cmp
inc
cmp
mov
jl
and
pop
ret
mov
pop
xchg
xchg
pop
mov
fisubrs
xchg
push
mov
aas
data16
mov
sub
adc
int3
hlt
push
aaa
dec
sti
cmp
fcoms
repnz
pusha
lcall
jmp
cwtl
fcoms
cmp
loopne
sbb
cwtl
lcall
nop
in
stos
push
mov
scas
mov
cmp
push
std
addl
sub
stos
push
and
jmp
addb
push
nop
inc
mov
sbb
loopne
push
sub
addr16
out
jecxz
inc
xor
pop
add
jbe
jecxz
imul
push
imul
loopne
cmp
arpl
adc
imul
mov
xchg
loopne
dec
jmp
add
fildll
push
icebp
mov
pushf
lcall
mov
lcall
jne
nop
pop
popa
insb
enter
push
fstpt
mov
mov
mov
movsl
cmpsb
nop
mov
push
add
les
int3
out
xchg
xchg
and
in
scas
aas
and
cmp
iret
xchg
pop
popf
loopnew
fmulp
mov
add
inc
out
pop
xor
mov
outsl
insb
jp
jmp
lods
clc
and
insb
jbe
aad
cmp
jbe
add
xor
xchg
xchg
test
xor
dec
pop
pop
iret
in
fbstp
jae
jecxz
pop
pop
mov
xchg
or
mov
pop
das
fiadds
push
cmpl
mov
fisubl
shlb
das
push
icebp
aas
dec
pop
push
jo
or
sar
cmp
orb
fstps
adc
or
xchg
fidivl
rcll
in
out
repnz
mov
cmpsl
imul
mov
mov
dec
jl
inc
push
and
xor
ret
icebp
xchg
xor
lods
mov
push
push
xchg
inc
sahf
xor
inc
call
and
pop
lods
mov
inc
out
or
jmp
mov
stc
sysexit
mov
hlt
int
jbe
movsb
adc
adc
jp
push
jae
aad
movsl
sahf
mov
jp
add
pop
sahf
pop
out
inc
push
sub
movsb
rcrl
test
test
das
loope
pop
xchg
call
cmp
or
test
ss
xchg
jecxz
imul
push
inc
ljmp
adc
sub
les
scas
out
frstor
xchg
das
fsub
sahf
mov
sub
test
dec
jns
into
inc
and
pop
mov
inc
stc
loop
test
jns
pop
ficoms
mov
pop
roll
push
mov
mov
mov
movsb
cwtl
ljmp
rcr
into
push
cmp
xor
mov
cs
mov
daa
nop
sbb
rcr
dec
xchg
aam
cmpsb
lahf
cmp
push
jno
adc
addr16
aam
stos
popa
icebp
std
lock
loope
scas
sbb
daa
popf
adc
scas
xor
stos
and
cmp
bound
mov
dec
loopne
xchg
fstps
mov
sbb
dec
or
cmp
jbe
sub
mov
mov
andb
iret
lahf
mov
adc
fistpll
adc
ljmp
and
addr16
loop
test
test
out
jecxz
and
push
ds
mov
leave
and
xor
add
xor
xorb
test
add
ret
loope
inc
xor
loope
fmulp
out
cmc
divb
negl
inc
sub
xor
pop
mov
lcall
xchg
sub
xor
xchg
inc
xchg
sub
or
mov
decb
arpl
loop
lret
fisttpll
cmp
push
mov
fld
lretw
push
decl
and
add
xor
dec
dec
rclb
push
aaa
and
cmp
dec
jecxz
add
cld
aad
xchg
outsb
xchg
sbb
rcrb
xchg
inc
into
cmp
js
pop
les
popa
add
sahf
push
and
sarl
stc
cmpl
cmp
in
cmp
mov
je
test
imul
jae
pushf
dec
bswap
int3
mov
xlat
xlat
xchg
pop
lret
mov
jmpw
stos
pop
aad
dec
shrl
nop
loope
dec
out
shll
mov
push
push
and
jmp
lret
fdivrl
arpl
mov
xchg
test
jmp
sbb
adc
loope
or
lods
int
xchg
ds
ljmp
adc
mov
xor
mov
outsb
xor
sub
movsl
cmp
lret
lea
dec
shrl
shr
in
lods
inc
das
pop
bound
mov
inc
push
pop
mov
je
inc
mov
inc
test
and
cmp
stos
popa
rcll
repz
xchg
vmovaps
mov
mov
inc
jecxz
xor
out
inc
ficoms
pusha
and
dec
cmp
pop
dec
vucomisd
sbb
add
call
loop
nop
ret
pop
add
dec
cmp
jo
add
test
js
ret
shrl
pop
clc
int3
pop
jnp
jmp
jb
aam
xchg
mov
cs
out
mov
repnz
adc
imull
dec
dec
addr16
xor
enter
push
das
jl
sahf
pusha
or
cmp
cmc
sti
mov
shrl
into
add
xchg
push
dec
mov
pop
in
cmp
mov
mov
push
cmpsb
sub
movsb
ds
pop
xchg
sub
fisttpll
lds
cli
das
jecxz
movsl
mov
and
jl
pop
mov
sub
and
xchg
subb
mov
test
add
fidivrl
mov
imul
or
fisttpl
into
xor
jbe
push
pop
aam
popf
pop
and
aad
inc
sbb
cmp
sub
insb
cmp
add
inc
sti
jb
enter
insb
out
mov
jecxz
sub
fiaddl
push
jbe
loope
enter
mov
xor
inc
jl
pop
mov
dec
stos
aaa
xor
addr16
popf
sbbl
outsb
adc
sbb
cmc
mov
jmp
lret
out
test
jb
call
xchg
ret
clc
or
push
adc
sub
dec
aam
jae
xor
jne
xor
orb
sbb
test
mov
dec
adc
popf
jb,pn
psubusb
repz
js
movsl
mov
arpl
pop
popa
sub
pop
js
add
leave
repnz
sbb
cmpb
jbe
dec
xor
sbb
or
sub
cmp
push
pushf
insb
mov
sbb
push
or
lahf
sub
push
sbb
shll
mov
xchg
xchg
int
leave
nop
dec
repz
cmpsl
xchg
jnp
xor
fildll
sbb
scas
mov
mov
or
inc
out
movsl
bound
in
adc
aaa
shll
pop
ds
outsl
add
mov
add
es
mov
out
mov
mov
mov
and
out
pop
mov
push
jno
or
rol
shr
fcmovnb
das
ss
hlt
stos
rorl
and
jnp
dec
pop
xchg
and
sub
cmovl
mov
leave
mov
fs
dec
or
mov
call
out
push
stos
out
mov
stos
xor
fcoms
fsubr
sub
fs
mov
lock
jmp
xor
stos
xor
daa
loop
jmp
push
or
stos
loope
mov
jae
cwtl
push
mov
and
hlt
sub
into
in
jns
jns
ss
loopne
add
jmp
cltd
xor
test
test
cld
and
add
and
xchg
ds
leave
je
dec
adc
mov
sub
inc
inc
dec
setle
push
pop
xorl
test
add
jecxz
mov
icebp
lds
adcl
data16
insl
cmp
adc
imul
fs
neg
fdivrl
xchg
inc
hlt
jb
movsl
popl
jb
test
pop
cmp
xchg
mov
jg
shlb
mov
ja
sub
jecxz
mov
in
mov
repz
mov
lods
or
scas
in
sbb
dec
and
test
sbb
xchg
xchg
mov
shll
cmp
or
fbld
sahf
xor
mov
mov
sbb
jae
aaa
lea
adc
fisubrs
mov
mov
loop
int3
adc
jo
add
xor
inc
sbb
cltd
shrb
cli
xor
xor
mov
cmp
and
filds
sbb
cmc
sub
push
mov
jmp
cmpsl
iret
mov
pop
inc
fnstenv
rclb
hlt
dec
pushf
mov
lods
xchg
dec
xchg
in
mov
mov
or
loop
outsb
jge
adc
inc
jnp
test
add
mov
pusha
popf
jb
and
aaa
fmuls
test
in
jns
ljmp
scas
or
xchg
lea
fmull
cmpsb
and
aam
mov
pop
adc
fwait
test
cltd
je
pop
and
stos
insb
mov
test
adc
cmc
or
sbb
loope
and
int
shlb
sub
mov
cmp
mov
sub
cmp
nop
mov
mov
imul
test
mov
into
wrmsr
adc
mov
or
sub
pop
cwtl
fdivrp
mov
mov
popl
js
lret
inc
mov
stc
shll
in
scas
icebp
fdivrl
xchg
subb
sbb
adc
mov
sbb
jbe
cwtl
mov
xor
loop
leave
cli
out
ss
out
add
std
dec
mov
addr16
cmpl
sub
sbb
mov
cmc
inc
test
sbb
mov
cmp
and
sub
pop
adc
bsf
inc
jae
lahf
or
push
lcall
clc
sbb
imul
mov
stos
loop
movsb
sub
inc
jge
xchg
outsl
mov
xchg
sbb
jg
lahf
cmp
cmpsb
cmp
pop
int3
mov
mov
stc
push
inc
push
das
clc
mov
jnp
ja
push
icebp
xchg
and
pop
pop
das
movsl
leave
or
orl
lahf
sub
arpl
movl
xlat
xor
pop
sbb
jl
int
mov
es
rcrb
mov
push
in
rcll
ljmp
mov
pop
xchg
nop
inc
out
xor
out
jnp
jmp
mov
sub
popf
push
in
xor
xor
cmp
shrl
sub
xchg
sub
and
dec
mov
xchg
jo
sub
pop
repnz
jbe
cmp
adcl
jnp
mov
push
add
and
outsb
xlat
mov
or
test
je
or
jne
call
es
jg
add
lcall
lock
test
inc
in
xchg
call
or
mov
ret
dec
jno
mov
jmp
sbb
in
loopne
hlt
shlb
push
loope
jle
pop
mov
shr
in
xchg
ljmp
das
inc
inc
test
push
or
cmc
les
push
imul
jno
ret
jmp
imul
or
push
fisubl
lods
push
test
xchg
insl
leave
jne
pop
xor
push
stc
push
push
idivb
pop
jmp
addr16
in
mov
outsl
pop
pop
mov
jmp
jae
xchg
jge
inc
addr16
fisubrl
xor
jo
dec
into
leave
loop
cli
pop
int
sti
lock
int
mov
imul
inc
sbb
push
stos
mov
cmp
lods
mov
jp
call
xchg
lret
and
push
pusha
sub
mov
xor
rcl
ret
sub
out
and
xchg
nop
repz
adc
adc
fisubrs
movsl
cmp
push
fcompl
lret
xor
in
inc
xor
mov
add
inc
jne
jle
test
cmpsl
lea
dec
inc
pop
fsubrs
shlb
idivl
dec
xchg
dec
inc
push
push
push
or
sub
addl
loop
jne
enter
fildll
pop
inc
cmp
dec
hlt
sbb
push
fisttpll
loopne
pushf
pop
jge
mov
adc
add
mov
pop
or
fidivs
jle
mov
xchg
out
subl
sub
out
mov
movsb
and
ret
fs
mov
cmp
movsl
fucom
dec
sbb
aam
jae
and
movsb
clc
imul
inc
or
xchg
cmp
inc
push
imul
stc
sub
jns
movsl
xchg
or
sbb
movb
cmc
xchg
insl
test
sub
push
popa
insl
clc
idivb
pop
ds
lds
pop
psllw
stc
adc
mov
int3
fwait
stos
stos
sub
or
fldl
dec
lret
call
aas
stos
cmpsl
mov
out
invd
gs
cmp
mov
cwtl
mov
fldenv
mov
cli
pop
push
add
xchg
jno
xor
dec
stos
lcall
xchg
mov
cmp
setbe
popa
xor
jae
xchg
add
sbb
add
fs
cmp
repnz
push
add
lret
fisttpl
insb
cwtl
fimuls
xchg
and
xchg
dec
adc
add
imull
push
pushf
jge
adc
jne
dec
adc
mov
add
hlt
dec
lahf
xchg
push
scas
int
mov
ds
mov
or
cli
or
jae
pop
test
out
rcrb
insb
cmpsl
in
xlat
fwait
xchg
cli
or
push
cmp
das
sti
jl
push
mov
mov
dec
xor
pop
jg
xchg
mov
pop
cmp
jge
dec
js
mov
test
xchg
insb
dec
jns
fiadds
arpl
xor
push
push
das
sub
jecxz
movsl
fisubl
and
lods
adc
adc
addr16
jp
mov
cmp
cld
mov
fs
insl
stos
push
sbb
xchg
xor
imul
jnp
cmp
bound
inc
gs
xchg
mov
xchg
mov
shlb
inc
ljmp
out
lods
je
js
mov
popa
and
ss
imul
bound
lods
or
mov
xor
fs
int
mov
mov
out
sub
sbb
mov
testb
pop
mov
rclb
imul
in
pop
adc
mov
xchg
mov
mov
dec
call
pop
inc
testl
ljmp
out
ret
ljmp
bound
jb
mov
or
mov
dec
xchg
or
add
fwait
pop
xchg
mov
jge
jp
fs
inc
adc
fldcw
xchg
push
addr16
jnp
test
das
cmpsl
push
lods
add
sub
fstl
cmpsl
imul
jmp
ror
out
sbb
insl
popa
call
adc
and
pop
mov
add
and
add
lret
cmp
cmp
cmpsb
mov
cmp
arpl
dec
out
into
mov
mov
fstl
movsb
add
xchg
adc
mov
inc
iret
incl
aam
in
jge
fmuls
cmpsl
adc
or
outsl
movsl
xor
adc
xchg
repz
mov
test
les
scas
cwtl
push
icebp
out
popf
xor
mov
inc
popf
adcl
mov
dec
push
jae
sbb
lret
jns
stos
das
pop
and
pop
das
jmp
hlt
or
scas
cld
orb
scas
popa
movb
test
jmp
call
push
dec
aaa
sbb
ja
shrl
roll
sbb
adc
shl
cmp
mov
xchg
adc
pop
cmp
ss
sti
cltd
add
shl
std
popa
cmc
jle
sbb
fbstp
push
outsb
push
cmp
call
xor
mov
adc
mov
add
push
sub
and
adc
sbbb
imul
jl
inc
es
mov
mov
rclb
gs
mov
cld
jg
bound
xchg
jmp
bound
clc
inc
rcll
sub
xchg
cmp
push
movsb
insb
push
add
jl
fisubl
fildll
cli
push
sub
subl
fwait
pop
lock
push
adc
add
mov
addr16
xchg
lret
adc
daa
aas
pop
stos
pushl
enter
ja
xor
mov
sahf
aad
mov
lahf
sahf
jne
adc
test
or
faddp
fst
mov
adc
add
dec
or
addr16
xchg
push
cmp
sbb
clc
push
cmp
and
into
pop
mov
or
ficoml
cmc
cmp
mov
pop
adc
inc
fistps
and
cltd
aas
sbb
pop
fisubl
inc
add
mov
cmp
adc
daa
pop
add
outsl
stc
aaa
shrb
mov
xlat
mov
movsl
add
cli
inc
and
jae
add
stc
mov
shrb
push
or
shll
cmpsb
xor
rcr
mov
adcl
jle
jns
inc
ret
scas
pop
jbe
aaa
test
jmp
sub
xlat
cld
inc
je
mov
lods
jecxz
dec
fsubrs
push
mov
inc
pop
or
rorl
jbe
xchg
mov
in
push
fadd
push
or
mov
shrl
cltd
jg
imul
pop
cld
push
cmp
xor
xor
and
int
mov
lds
adc
ret
mov
xor
lods
dec
pop
mov
sub
in
outsb
out
iret
test
shr
or
out
popl
out
cmc
xor
test
jne
adcb
cmp
scas
sub
sub
data16
nop
dec
lods
dec
popfw
and
bound
lock
arpl
fcomps
pusha
push
or
and
jno
inc
xorb
jg
mov
xchg
inc
inc
xor
arpl
mov
addb
cmpsb
push
jge
lods
sub
aaa
lods
xor
je
ja
cld
inc
sahf
inc
hlt
and
xor
scas
jp
in
cli
mov
hlt
cmp
dec
or
bound
mov
cs
daa
add
iret
mov
call
sti
nop
jl
lahf
or
mov
xor
inc
xlat
je
jle
cmp
scas
push
lret
icebp
cwtl
inc
popa
dec
add
mov
ja
scas
mov
xor
out
clc
lret
inc
jmp
repnz
mov
inc
and
jmp
popf
cmp
lods
push
xchg
cmpsb
cmpsb
push
into
dec
pop
jg
lahf
push
std
mov
cltd
aam
popf
aam
mov
dec
mov
enter
push
xor
outsl
and
cmp
test
rcr
sarb
loope
movsb
fsts
inc
hlt
fstpl
test
cmp
roll
add
push
mov
arpl
or
out
ljmp
push
loop
lods
or
ret
cmp
sub
adcb
sub
sbb
cmp
jmp
cmp
sbb
pop
scas
push
mov
bound
push
shlb
shlb
imul
ucomiss
add
mov
dec
and
test
jg
fcmovnb
inc
idivb
inc
sbb
adc
push
shl
lea
mov
into
adc
repz
xchg
arpl
scas
inc
cmp
xchg
lock
daa
dec
jg,pn
sti
or
and
sti
sbb
jecxz
sbb
call
test
test
mov
push
xchg
data16
sub
shll
pop
sbb
jne
sahf
clc
mov
psllw
fcoms
fldt
or
mov
lret
inc
dec
sbb
sbb
jp
push
add
notb
cmp
pop
sub
push
push
mov
push
insl
das
fcom
scas
adc
jno
and
das
push
pop
dec
loopne
xor
push
pop
adc
ljmp
pop
fwait
dec
or
and
sbb
push
mov
mov
and
je
das
xor
jbe
inc
push
js
pop
dec
sbb
scas
mov
sub
jne
negb
jle
cld
jnp
inc
ret
int
mov
es
js
push
inc
xchg
xchg
add
inc
shrl
and
repz
add
loope,pn
mov
push
and
push
les
xchg
inc
pop
dec
jne
cmp
cli
mov
int3
xor
pop
stc
lods
in
ja
das
adc
xchg
jmp
sub
adc
inc
cmp
ret
fisubrl
add
imul
push
lcall
inc
out
jecxz
test
popa
fstpt
js
jg
jne
dec
jo
jge
sbb
pop
xor
test
iret
cmc
pusha
or
outsl
int
sbb
and
or
sbb
xchg
or
or
pop
cmp
test
call
stos
push
into
push
push
int3
adc
sub
or
add
or
adc
push
push
insb
sbbb
adc
jle
dec
push
push
ja
ds
cmp
decl
pop
push
sub
sahf
fsub
les
pop
lret
jae
mov
pop
cmp
les
das
loopne
addb
jmp
and
push
rcrb
jecxz
mov
es
push
mov
adc
stos
daa
decb
mov
mov
js
rcrb
xor
lret
aaa
push
lcall
or
in
inc
push
and
mov
sbb
add
popf
xchg
sub
in
mov
pop
punpckhdq
jp
push
push
adc
lock
loop
inc
out
lock
mov
and
cmc
push
in
adc
test
gs
test
addl
jns
repz
ds
mov
push
jmp
mov
and
adcb
rorb
sbb
outsl
xchg
imul
cld
data16
outsb
mov
cli
notl
ret
inc
mov
repnz
enter
jge
push
jnp
icebp
jmp
or
push
pop
ja
fs
sbb
test
fiaddl
subb
push
inc
adc
jne
data16
lods
adc
in
mov
cmp
cmp
mov
pop
cltd
or
push
daa
sbb
xchg
xchg
adc
mov
mov
pop
pop
popa
in
or
imul
and
fcoms
bound
andb
out
test
jecxz
xchg
pop
in
xor
outsb
mov
add
pop
lods
int3
adc
stc
sbb
inc
subb
ds
and
fisubl
mov
pusha
jb
mov
pop
loop
push
int3
leave
jmp
jmp
push
add
aam
subb
shlb
sub
dec
stos
mov
stos
je
aad
or
out
or
xchg
mov
pop
cmpsb
insl
xchg
int
sub
cli
fsubrp
cmp
adc
adc
sub
mov
fs
imul
add
dec
mov
sti
std
push
adcb
xchg
cmpsb
push
inc
sub
mov
cmp
jle
adc
dec
mov
out
imul
stos
push
adc
dec
arpl
rcl
cld
mov
nop
testb
sbb
test
dec
fnstsw
or
or
xor
roll
sub
adc
ljmp
shll
jne
not
fsubs
mov
pushf
aad
pop
loope
xchg
cmp
jle
jnp
add
cmpsl
iret
pop
xchg
cmc
ss
rcll
rolb
ss
inc
xchg
inc
ja
cmpsb
adcl
cmp
mov
cmovl
jne
mov
out
inc
adc
out
push
nopl
in
xchg
pop
and
movzwl
ljmp
adc
pop
xor
sbb
lea
add
fists
jne
or
lahf
mov
shlb
fiaddl
outsb
xor
in
data16
mov
sub
in
cld
mov
out
ret
push
or
sub
fisttps
pop
aad
lahf
push
dec
mov
fcoml
imul
xchg
mov
testl
sbb
jae
imul
ss
push
enter
rorb
jne
outsb
and
jbe
std
add
aaa
mov
sub
das
scas
in
addr16
addr16
adc
daa
icebp
mov
sbb
inc
dec
pushf
cmp
cmp
stos
out
sub
push
ss
sbb
push
or
push
push
mov
mov
sub
sub
xchg
cmp
xor
sub
jns
das
mov
pop
mov
jg
xchg
jne
movsb
dec
std
enter
in
jno
xlat
xchg
push
cmp
xor
sbb
sahf
fisttpll
mov
adc
dec
push
xchg
imul
jg
insl
jl
in
movsb
pop
sbb
insl
cld
mov
fmuls
test
in
jno
dec
popf
nop
jl
and
push
fnstcw
lods
in
leave
scas
xchg
pop
in
sbb
sub
stos
xchg
xor
inc
push
xorl
aaa
mov
or
adc
xchg
xchg
dec
sub
sbb
mov
add
jmp
repz
dec
add
dec
je
fdivs
xor
jmp
add
sbb
es
mov
inc
test
mov
sbb
scas
mov
repnz
dec
sbb
lret
mov
lcall
into
and
inc
daa
dec
push
pop
inc
lret
out
stc
andb
cmp
jmp
repz
mov
pop
adc
jmp
push
pop
pop
repz
inc
test
xor
scas
push
sub
shll
popa
sbb
jnp
or
stc
sahf
fdiv
into
shlb
es
xchg
data16
push
scas
adc
pushf
sbb
lock
leave
aas
pop
scas
mov
ljmp
les
inc
out
add
mov
adc
lds
sub
pop
fdivrl
mov
pop
pushf
cmp
adc
mov
and
into
into
pop
sbb
dec
push
movsb
out
push
testl
dec
fldl
inc
or
jmp
push
mov
repz
arpl
fcmovnbe
sbbl
push
and
adc
scas
or
xor
mov
fsub
jnp
lock
xchg
fcmovb
jge
mov
lea
movsl
xchg
movsb
mov
mov
or
pushf
xchg
sbb
and
and
addr16
lods
xchg
and
push
inc
sub
in
addr16
addr16
lahf
insb
int3
inc
pop
pushf
xchg
fidivs
jne
mov
or
les
sbb
fidivs
lret
adc
andps
mov
mov
clc
add
jmp
pop
push
fsubs
inc
out
push
popl
cs
nop
pop
ss
adc
js
test
fwait
inc
xchg
push
loop
mov
or
adc
mov
jae
xchg
or
mov
sbb
outsb
stos
inc
dec
push
jecxz
cmp
pop
fs
mov
lock
xchg
inc
aaa
mov
lds
adc
ss
jg
dec
jb
cmp
sbb
ss
jo
sub
jmp
std
jp,pt
daa
adc
pop
pop
mov
adc
loop
dec
rclb
sbb
mov
std
pop
pop
add
push
mov
cmp
gs
xor
test
loope
lock
popf
insb
adcl
or
fiadds
pop
xor
fwait
lret
cmpsl
into
loop
mov
and
bound
dec
push
dec
shlb
mov
sbb
dec
mov
pop
loopne
cmp
loopne
cwtl
sbb
fiadds
mov
mov
mov
add
sbb
loop
mov
jnp
jo
sarb
dec
jmp
fwait
lds
pop
imul
lret
cmp
mov
pushf
xor
pop
aaa
fwait
and
jns
out
insb
cltd
mov
addr16
mov
imul
cmc
int3
adc
pop
cltd
jbe
sahf
ret
je
cmp
adc
xorl
pop
add
frstor
cld
imul
xchg
pop
mov
xchg
xchg
pavgw
in
int3
leave
mov
clc
imul
pop
and
xor
cltd
or
push
mov
fcmove
icebp
aas
hlt
jne
leave
cmp
pop
outsl
outsb
cmpsb
inc
sahf
fidivs
inc
sar
scas
dec
pop
cmp
cli
xor
test
jbe
mov
pop
andb
jns
cwtl
sti
cli
sub
movsl
adc
nop
xlat
adc
mov
outsb
and
cli
sahf
into
add
pop
adc
xor
pop
popa
fstps
lret
mov
pop
add
pop
fldenv
js
sbb
push
sbb
jecxz
sti
mov
int3
jae
dec
push
sarb
mov
mov
out
ss
xor
pushf
aas
and
test
in
inc
int
jle
pop
cmpsl
add
cwtl
into
push
dec
push
inc
push
movsl
inc
outsl
jb
push
push
insb
push
and
xchg
decl
shrb
and
pop
mov
lcall
inc
adcb
mov
pop
movsl
xlat
or
scas
add
bound
xlat
cmc
inc
bound
rorb
mov
imul
cmpsw
outsl
pop
jecxz
dec
add
icebp
pop
bound
lret
mov
add
xchg
cld
jne
mov
xlat
stc
jns
pop
adc
mov
xlat
xchg
push
popf
loope
jno
sbb
push
or
sub
xor
cmp
fists
andl
inc
jmp
sub
movsb
adc
mov
cmp
std
push
in
hlt
inc
inc
jnp
jecxz
sti
loope
les
sbb
orb
mov
xchg
dec
mov
sahf
add
add
adc
jbe
icebp
iret
ljmp
fwait
movsl
repz
sub
enter
mov
dec
stos
dec
mov
aaa
and
imul
push
int3
js
movsb
repnz
test
add
out
add
cmp
sbbb
mov
ret
mov
pop
mov
or
into
jo
test
mov
cmova
sbb
ja
add
sbb
jge
pushf
mov
insb
or
pop
or
lret
cwtl
outsl
xor
mov
push
xchg
cltd
jmp
inc
pop
test
mov
and
adc
clc
or
push
je
outsb
cli
adc
ss
mov
adc
pushf
scas
mov
mov
icebp
xor
inc
mov
lret
addr16
movsl
out
jnp
and
cmp
or
lds
xor
xor
sub
or
inc
xlat
aas
mov
jmp
test
add
inc
mov
shlb
adc
ja
pushf
fnstsw
sbb
and
test
inc
push
cld
sti
out
xchg
and
add
pop
test
fistps
jnp
stc
mov
mov
cmc
jne
dec
enter
stos
push
fdivl
ss
das
fisttps
outsl
push
mov
xlat
cmp
mov
push
movsl
jmp
icebp
lret
hlt
xor
incl
sahf
es
mov
inc
sbb
or
aam
add
mov
call
cmp
dec
call
inc
cmpsl
push
xchg
push
movsb
enter
jecxz
mov
adc
idivb
add
pop
lcall
imul
add
mov
cld
pop
jne
mov
push
fidivl
icebp
loope
stos
pop
mov
rep
adc
add
lods
push
inc
mov
or
adc
add
movsl
sahf
add
jns
in
pop
mov
shll
and
jbe
cli
gs
dec
sbb
and
and
ss
mov
mov
jo
sahf
mov
dec
jle
push
or
mov
jecxz
inc
out
sub
div
outsl
inc
jo
or
push
fs
xlat
lods
cmc
pushf
xchg
in
ret
insl
cmp
filds
jb
pop
dec
mov
lret
jo
mov
fmuls
mov
daa
add
les
xchg
dec
clc
add
push
stc
mov
popf
inc
lret
add
dec
cmp
mov
std
or
or
pop
cmpl
sub
insb
mov
popa
cmpsb
fistpl
or
cmp
outsb
mov
cmp
xchg
and
jge
in
lret
lea
jle
jne
cmp
xor
dec
dec
iret
adc
inc
dec
cmpsl
push
add
and
xlat
insb
dec
cmc
shlb
movsb
loopne
repz
xchg
push
aad
ret
test
arpl
adc
jae
fisubl
mov
sbb
push
cmp
inc
pusha
mov
fcoml
xor
adc
sub
fnstenv
push
repz
ret
push
cmp
mov
es
in
popa
lcall
jle
jae
sub
lahf
sub
pop
shll
push
ljmp
adc
movl
outsl
ja
daa
xchg
sbb
div
push
mov
and
mov
cmp
and
xchg
test
mov
or
mov
or
aam
jecxz
iret
pop
or
push
cmpsb
adc
or
mov
or
movsb
add
sbbb
stos
les
xchg
in
xor
popa
cmpsl
mov
or
or
inc
cli
mov
negb
or
sti
addl
scas
jae
or
movsb
pop
and
movsl
xor
arpl
popf
ret
pushf
idivb
add
xchg
sub
outsb
mov
jmp
movsl
mov
std
dec
cmpsb
jo
xor
jae
aaa
and
push
lret
shr
jecxz
or
scas
push
cmp
outsb
imulb
outsb
sbb
push
jnp
mov
jne
jle
lea
xor
xchg
xor
test
daa
dec
shr
out
cltd
stos
or
jp
seta
and
leave
push
daa
and
lock
mov
inc
pop
sub
rclb
sub
xchg
cmc
sbb
cmpsl
imul
stc
insb
shl
popf
negl
adc
lret
ds
cmp
out
inc
data16
jmp
adc
xchg
cmp
sbb
adcb
int3
in
jecxz
dec
dec
xchg
pushf
lock
ds
outsl
mov
mov
fcmovbe
fwait
or
and
dec
jmp
or
aaa
loope
pop
cmp
call
dec
sbb
jno
sub
mov
jnp
xchg
or
in
fwait
xor
cmp
sti
push
push
sub
mov
and
dec
pop
lcall
addr16
sti
mov
je
inc
jb
je
ds
mov
repnz
adc
dec
inc
in
negb
jne
mov
out
scas
out
cmp
pop
or
and
cltd
out
xchg
call
aam
lock
sbb
xor
jle
lock
mov
sahf
repnz
xor
nop
out
cli
inc
cmp
xchg
cmpsl
enter
sub
sub
hlt
dec
sub
cld
and
sbb
dec
sti
dec
xchg
xor
in
rcll
xor
sbbb
or
pop
push
inc
xchg
loop
int3
mov
mov
pushf
loopne
pop
pop
mov
sbb
adc
imul
xlat
shlb
push
cmp
aaa
cs
xchg
fisubrs
push
hlt
jp
int
cmc
iret
popf
push
cmp
popf
and
jl
mov
sti
pusha
test
or
scas
mov
xchg
in
divl
sbb
in
stos
xor
push
push
adcb
pop
push
inc
arpl
inc
movb
cmc
xchg
jge
int3
inc
fs
imul
add
push
sbb
and
test
inc
inc
insl
fs
pop
and
bound
lret
sbb
sub
mov
insb
mov
shrl
fisubrs
sub
push
xchg
scas
pushl
pusha
xchg
push
push
jg
adc
shr
and
jb
aas
fimuls
cmp
xchg
andb
jnp
shrb
xchg
ds
gs
mov
addr16
inc
push
lret
and
jmp
xchg
mov
fdivrl
inc
outsl
dec
add
testl
fcmovnb
loop
popf
popa
and
lods
cmp
mov
pop
outsb
mov
mov
ds
ja
shlb
push
nop
xchg
push
xor
out
dec
xchg
inc
push
aas
stc
dec
repz
and
inc
jno
adc
test
mov
add
dec
int
cmp
das
clc
inc
fsts
ret
jno
out
mov
mov
scas
add
movsl
pusha
and
mov
outsl
in
or
out
push
pop
mov
cmp
jns
notl
out
push
lea
mov
dec
je
push
dec
jb
cld
popf
je
xchg
xor
enter
mov
sbb
test
cltd
jo
cmp
pop
mov
mov
lcall
sub
adc
bnd
out
push
jl
aas
fistps
add
sarl
js
lods
mov
fcmove
sub
movsl
data16
xchg
es
lret
xlat
mov
arpl
in
adc
arpl
cmp
cld
add
add
sub
roll
shld
lea
pusha
aas
push
aad
adc
sbb
pop
iret
inc
dec
dec
inc
adc
lods
jcxz
pop
lds
push
test
repz
cmc
rolb
scas
clc
pop
in
or
xchg
add
enter
jo
xor
insb
pop
data16
dec
mov
push
and
into
test
xchg
add
pusha
lds
enter
mov
dec
ret
out
xchg
mov
fstp
pop
add
jne
sahf
test
ret
dec
sbb
aad
fistpl
inc
or
jno
pop
pop
lock
jmp
cld
dec
aam
jns
std
cmp
and
cmp
push
adc
lahf
rorl
jns
cmpsl
add
xor
cmpl
out
ljmp
sbb
cmp
imul
push
sahf
mov
pop
clc
add
fnstsw
outsb
or
xchg
cmpsl
mov
push
add
daa
aad
and
adc
xchg
mov
fisubrs
add
inc
pushf
mov
dec
push
int
outsl
imul
lds
pop
repnz
xchg
rcll
into
push
insl
dec
mov
jmp
subb
inc
add
subl
ror
dec
clc
mov
pop
inc
inc
jns
xchg
mov
sbb
xchg
stos
push
jno
pop
xor
inc
pop
cmpsb
dec
sub
inc
cmc
popf
xor
jl
scas
or
and
into
arpl
ljmp
fnsave
xchg
test
add
sbb
shrl
adc
jmp
cmp
adcl
cmp
mov
jmp
in
in
test
stos
iret
stos
push
ljmp
push
jp
into
sbb
lods
ljmp
fadds
hlt
je
push
cmp
imulb
fs
mov
loope
dec
xchg
or
aaa
icebp
sub
adc
cmp
std
fildl
mov
xchg
lret
mov
loopne
imul
roll
inc
and
stos
jl
dec
adc
jmp
or
imul
ffree
jo
add
out
lahf
mov
inc
std
arpl
movsl
push
push
jns
stos
adcb
cli
mov
or
mov
sub
mov
mov
xor
subl
lds
mov
push
pop
cwtl
push
mov
cmp
mov
imul
lcall
push
dec
mov
popa
mov
push
daa
sbb
int3
inc
mov
add
jmp
mov
fcompl
mov
push
sub
adc
mov
and
mov
jmp
mov
add
mov
and
push
stos
cmpl
jae,pt
inc
nop
idivl
xchg
mov
out
leave
fidivrs
cmp
mov
ficompl
mov
inc
ret
jnp
xchg
sarl
pop
subl
jecxz
pop
sbb
ss
inc
push
cwtl
xchg
xchg
insl
dec
dec
jmp
or
mov
pop
adc
andb
int
rorb
hlt
je
add
pusha
pop
bound
xor
pop
jle
ja
or
jnp
mov
call
cmp
test
mov
cmp
not
fsubr
scas
sub
shrl
jl
out
inc
popa
or
fisubs
push
or
ljmp
jns
out
lcall
sar
xchg
mov
xchg
cmp
adc
nop
into
and
cmp
out
push
dec
mov
bound
mov
les
sarb
sbb
in
insl
push
jne
pop
ss
and
dec
lret
cmpsb
sahf
enter
ret
clc
mov
adc
fimuls
mov
mov
mov
shrb
jo
or
mov
adc
jns
loope
call
xor
dec
nop
das
jns
mov
xor
push
bound
or
les
mov
dec
outsl
cwtl
xchg
lods
imul
shll
or
xchg
in
xchg
loope
xchg
fmull
sbb
jg
inc
jbe
mov
dec
and
pushl
cwtl
shlb
enter
pop
ret
lds
jb
sarl
or
dec
inc
mov
pop
cmp
sub
ret
in
testb
jo
xchg
dec
into
mov
ds
jle
cmc
out
lcall
mov
push
sbb
jo
sbb
popa
pop
test
push
popa
negl
aad
fs
arpl
adc
out
in
cltd
xor
sbb
in
mov
pop
popf
lahf
dec
and
dec
xor
test
test
stos
cli
sahf
roll
jle
and
ljmp
mov
aad
mov
int3
mov
inc
mov
xchg
frstor
pusha
pop
roll
cmp
xor
std
xchg
push
fwait
dec
fwait
push
xchg
cli
arpl
cmp
dec
lds
dec
or
cmp
cmpl
gs
inc
test
and
fneni(8087
sbb
loop
call
jne
shll
pop
mov
mov
push
cmpsb
pop
aad
movsl
push
sbb
mov
pop
mov
je
mov
gs
scas
ljmp
dec
outsb
imul
push
cmp
sbb
pop
das
out
jecxz
jl
mov
lret
push
mov
sbb
mov
mov
jle
mov
adc
les
jle
aas
xor
dec
icebp
stc
jp
jl
mov
mov
cmp
add
sti
jmp
lock
push
xor
dec
paddusw
add
ret
aad
negb
or
test
stos
sbb
mov
mov
mov
cmp
and
cmp
mov
sub
sbb
push
aam
jbe
pusha
push
mov
pop
cld
jns
xlat
dec
mov
mov
add
sbb
iret
cld
pop
mov
jns
jb
ret
call
sub
pop
xor
dec
xchg
call
dec
cmp
cmp
xchg
dec
sbb
pusha
or
icebp
psubusb
fisttpl
mov
xor
pushf
test
xchg
jno
popf
sbb
xchg
ja
bound
xor
mov
and
xchg
lret
sbb
dec
sub
xchg
aaa
and
bound
mov
stos
je
sti
js
and
or
and
pop
pop
push
fistl
push
mov
or
aad
repz
ss
push
pop
mov
enter
mov
inc
test
arpl
push
arpl
mov
popa
sub
mov
dec
orl
adc
dec
sub
lea
pusha
testb
sub
xchg
pop
ljmp
jb
icebp
push
mov
fisubs
xor
lret
xchg
jns
mov
cmp
sbb
cld
adc
movsb
rolb
pop
adc
in
call
out
aad
loope,pt
jge
jmp
aaa
adc
icebp
mov
jb
push
aas
or
adc
and
push
jns
fadds
loop
iret
and
push
std
jmp
inc
jmp
int
add
dec
and
std
sub
call
callw
test
mov
push
dec
scas
aas
xchg
add
xchg
mov
or
iret
scas
push
add
jp
and
jg
notb
mov
or
ret
js
xor
add
mov
sbb
sti
cmp
rorb
jmp
subl
push
pop
out
mov
xor
cmpsl
vorps
dec
dec
sub
xchg
imul
imul
jbe
mov
add
jo
xchg
lcallw
inc
pop
and
dec
ljmp
movsb
data16
sub
mov
insb
jle
fmulp
in
sbb
add
xor
lock
aam
add
jl
loope
cwtl
push
sbb
mov
cltd
mov
xor
add
mov
lods
xor
loope
pop
loopne
mov
in
and
inc
adc
lods
loope
and
cld
sbb
popf
ret
push
xlat
mov
mov
outsb
xchg
pop
adc
shrb
pop
cmp
fcmovnbe
stos
fcoml
loop
sub
jp,pn
push
out
test
test
repnz
lahf
stos
push
insl
mov
out
push
push
sbb
hlt
icebp
scas
mov
jno
orl
adc
mov
pop
xor
int3
jb
aam
xchg
or
push
lret
loope
dec
mov
cld
cmpb
rcr
add
test
inc
xlat
cmpsb
cmp
sbb
sbb
mov
das
and
push
shrl
cmc
xchg
adc
js
fs
push
scas
xchg
and
scas
fs
enter
mov
into
in
lcall
dec
je
sbb
jle
stos
adc
icebp
dec
cli
xchg
mov
dec
int
jecxz
and
push
sbb
push
xchg
mov
cli
or
notl
jp
inc
cmp
ljmp
pop
sbb
push
push
jmp
pop
out
push
inc
jg
in
cmc
movb
add
xorb
pusha
movsb
push
sahf
sub
and
or
jecxz
cmp
pop
pop
sub
or
nop
stc
and
js
stos
jecxz
les
jecxz
aad
dec
pop
arpl
stos
mov
and
in
push
mov
imul
sbb
jmp
mov
push
jecxz
iret
sbb
xchg
lock
fists
adc
dec
add
mov
pop
xchg
data16
and
cwtl
inc
jne
fcomps
popf
repz
or
dec
fdivrp
mov
mov
mov
iret
in
pushf
movd
cltd
out
shlb
outsl
sbb
fs
jge
into
stc
jmp
lds
dec
sbb
bound
mov
or
lret
test
sub
ret
jb
jg
xor
xor
stos
scas
addb
jg
adc
jnp
jb
in
rcll
jmp
mov
cmpsb
icebp
lock
imul
icebp
cmp
in
les
xor
lahf
inc
xchg
adc
dec
inc
in
scas
scas
lret
imulb
loop
dec
inc
iret
imul
pop
xor
or
mov
mov
movsb
es
jne
mov
add
dec
cwtl
js
popa
mov
ja
outsb
scas
lock
lods
dec
test
jl
mov
mov
data16
jmp
pop
xor
dec
cwtl
sub
push
lahf
xchg
sub
mov
sub
pop
jno
loop
leave
call
push
mov
je
add
js
loopne
sub
add
dec
fdiv
pop
push
enter
repz
pop
mov
sub
cmpsb
fucomp
mov
inc
mov
in
fld
or
xor
mov
xchg
fwait
notl
pop
into
lret
std
aam
sti
inc
add
push
or
clc
ss
mov
push
dec
sbb
lcall
xchg
ja
add
jb
lret
subb
cmpsl
pop
pushf
pop
cltd
stos
movsb
cmp
push
arpl
jge
lods
and
out
out
xchg
jae
roll
add
sbb
jns
jno
push
outsl
pusha
imul
inc
loop
mov
xchg
add
push
cmp
lcall
repz
cld
xchg
std
loop
rolb
add
jb
adc
xchg
insb
or
pusha
lods
add
loope
outsl
mov
inc
ret
clc
jl
addb
pushl
fisubrs
add
adc
adc
mov
sub
jge
xor
push
loope
into
icebp
mov
mov
inc
aas
loope
push
in
mov
movsb
int3
lea
aad
mov
push
ljmp
mov
jmp
sub
mov
mov
xor
cmc
cmp
adc
fldcw
push
lret
and
fs
rcrb
push
data16
dec
loopne
bound
xor
dec
movsl
add
in
insl
scas
in
sbb
test
mov
divb
add
add
and
mov
shrb
cs
lods
out
dec
lods
fisubs
test
out
scas
outsb
cli
sbb
cwtl
and
rcrl
fiaddl
cmpsl
cld
cmp
inc
cli
or
mov
adc
ljmp
test
sbb
pop
jge
pop
popf
inc
out
cmc
pusha
adc
sub
js
mov
sbb
insl
pop
sub
lret
stc
cmpsl
dec
push
iret
shlb
add
push
dec
shll
loope
js
cld
sbb
in
mov
jmp
mov
and
mov
mov
mov
in
hlt
push
mov
fildl
inc
sbb
mov
popf
mov
push
arpl
xor
dec
cli
mov
movl
movsl
pop
rcrl
les
fisubrs
lock
and
aaa
mov
cmp
insl
pop
in
jo
loop
push
jle
pop
iret
adc
gs
mov
sbb
aaa
pop
xchg
mov
pop
dec
jle
and
mov
mov
mov
cld
and
and
mov
or
cmpsl
jno
daa
popa
sbb
lods
imul
and
es
jno
jbe
aaa
adc
jae
rcll
icebp
enter
outsb
xchg
mov
xor
aas
xchg
xchg
xor
es
pop
xchg
cmp
call
xchg
xchg
pop
push
insl
bound
mov
pop
es
mov
insb
mov
int
jb
scas
xor
dec
lock
mov
cmp
mov
jle
aaa
xchg
sub
push
repnz
outsl
mov
in
insl
insl
stc
pusha
fcoml
and
lods
movsb
das
or
outsl
jp
xchg
sub
push
icebp
jno
lds
xor
repnz
idiv
push
scas
orl
sub
xor
mov
shlb
jno
adc
aas
mov
xchg
test
jo
divl
popa
sbb
sub
dec
ds
inc
push
scas
xor
leave
xchg
addr16
cltd
jb
jmp
inc
adc
test
mov
fidivl
pop
jne
pop
movsl
xchg
cmp
adc
mov
inc
in
or
lds
cmp
js
mov
outsb
mov
es
or
lret
jae
fildl
jno
push
xor
arpl
std
xor
mov
push
adc
loopne
push
and
lods
pop
sbb
jno
add
push
aam
xchg
push
xlat
mov
mov
in
push
cmp
add
sbb
aaa
sub
stos
aad
mov
lret
rorl
mov
out
outsb
ror
sahf
pop
gs
in
outsb
mov
push
shll
mov
shr
mov
sub
dec
pop
adc
or
cs
jge
lods
add
xor
add
insb
inc
popa
lret
shl
pop
xor
jnp
popf
add
shll
jle
dec
enter
ret
sub
pushl
mov
cmp
inc
and
test
in
push
inc
inc
fsubrs
add
jne
popa
add
repz
sub
adc
rcll
or
mov
mov
mov
push
mov
jl
sahf
cli
push
jg
daa
gs
rorl
push
fs
leave
or
sbb
push
pop
ljmp
xchg
loope
inc
push
and
dec
xchg
cwtl
lahf
jnp
outsb
or
dec
in
push
cmpsb
sti
jns
rcll
sbb
add
ss
xlat
arpl
sub
pusha
shlb
inc
mov
inc
insb
mov
cmp
pusha
repnz
dec
lea
fs
cmp
sub
shll
add
shlb
stos
arpl
or
inc
fiaddl
mov
xchg
insl
push
jge
inc
loop
pop
imul
inc
fsts
pushf
gs
xchg
lret
imul
cmpsb
shlb
sbbb
xor
jp
sahf
aas
xbegin
lcall
mov
jbe
cmpsb
adc
jae
sub
lret
int3
and
cmp
jl
cmp
repz
adc
popf
fisubl
push
shll
imul
add
xchg
icebp
add
cli
jns
or
adc
adc
pop
mov
das
adc
stc
loop
fiadds
sbb
mov
lret
push
ss
pushf
lods
sbb
inc
cmp
jno
enter
jb
push
cmp
or
mov
mov
add
jp
shll
mov
out
int
mov
dec
dec
pop
lcall
outsb
mov
dec
je
fiadds
mov
sub
sub
and
mov
push
orb
xor
movsl
notl
mov
cld
adc
mov
loopne
mov
jnp
es
gs
xor
dec
adc
pop
mov
lea
xchg
incl
push
inc
cmp
dec
fs
mov
xchg
iret
int3
iret
imul
push
call
jge
jne
test
pop
repz
out
mov
mov
jmp
cmp
jb
add
and
add
mov
mov
mov
push
sub
mov
cmp
pop
jb
mov
sub
xchg
jbe
push
cwtl
push
dec
je
add
adc
loope
lds
mov
addr16
mov
nop
in
sub
in
xchg
xchg
aad
xchg
jle
pushf
iret
mov
lret
das
ljmp
mov
push
push
mov
cmpsl
into
shlb
bound
aas
mov
ss
sarb
nop
inc
mov
jae
shl
clc
rcrb
movsl
cltd
fcompl
jmp
bound
and
ret
jmp
cmp
mov
shrl
and
arpl
jecxz
push
lret
iret
outsb
out
pop
lret
in
jle
inc
movd
and
jb
out
adc
push
and
dec
jo
and
stc
xchg
and
test
mov
imul
movsb
punpcklbw
sub
and
enter
sbb
leave
add
int3
mov
aam
mov
icebp
loope
insl
arpl
cli
mov
jle
push
in
xor
shrb
outsl
int3
jp
mov
push
call
lea
gs
mov
shlb
mov
xor
push
adc
xor
in
in
pushl
add
fcomps
mov
aam
add
adc
push
pop
ret
jne
pop
xor
mov
mov
cli
mov
cmp
jl
sbb
jns
out
push
in
jo
repz
jbe
adc
fists
dec
sub
test
adc
icebp
movsb
stos
cmp
add
nop
xor
add
inc
sbb
adc
inc
lods
cmp
adc
mov
cmpsb
xchg
xor
and
fsts
imul
jle
fcomp
int
adc
in
cmpsb
ficompl
pop
lock
popf
xchg
xchg
lret
jb
cli
sahf
into
pop
movl
inc
push
lret
inc
mov
dec
xor
add
cltd
mov
jl
sub
push
jmp
adc
bound
test
repz
iret
xor
in
faddl
mov
rcrl
pop
or
icebp
mov
jg
fdivp
scas
cmp
xchg
in
inc
cmp
mov
add
lret
leave
scas
xchg
ja
jbe
pushf
cltd
mov
cmp
jne
jb
mov
cld
adc
insl
and
or
frstor
jge
dec
cmp
push
pop
jg
fcompl
mov
out
xchg
ret
outsb
mov
shl
adc
icebp
inc
cmp
or
test
xchg
rcrl
push
mov
lret
sbb
sub
add
mov
and
inc
mov
and
inc
mov
xchg
dec
add
sub
lds
push
cmp
jns
adc
xchg
outsb
addl
adc
add
lret
jp
mov
stos
push
fprem
jmp
xchg
mov
lret
xor
sub
dec
add
std
aaa
mov
fldenv
mov
sbb
mov
pop
mov
mov
mov
jb
cmp
dec
stc
mov
shll
sub
mov
and
test
shl
repnz
xor
dec
gs
and
scas
rcrb
pop
mov
hlt
dec
mov
mov
icebp
dec
mov
add
inc
inc
stos
push
in
push
das
mov
mov
call
bound
shrl
sbb
jge
stc
movsb
mov
leave
sub
ss
adc
lods
pop
fcoml
call
call
and
mov
mov
pop
lock
cmc
adc
jecxz
stos
mov
adc
out
jmp
rorb
mov
and
push
repnz
dec
test
push
or
adc
cli
test
int
testb
cmp
jge
xor
sarl
xchg
mull
ret
mov
je
test
ja
cwtl
ficoms
adc
fadds
movsb
push
cmp
add
cmpsb
fisubs
xor
add
pop
jno
imul
daa
and
dec
mov
mov
push
js
fldenv
jae
pop
movsb
fsubl
pop
enter
adc
xchg
rclb
call
mov
rol
push
sahf
mov
outsb
gs
fisttpl
gs
sub
shr
test
cmpsl
jp
fisubs
sahf
ret
pop
jl
jge
jp
fs
lret
adc
dec
clc
test
lret
push
shr
sub
jge
mov
cs
loopne
pop
inc
jmp
stos
sbb
or
push
cs
xchg
inc
add
lahf
push
lahf
fidivrs
push
xchg
test
mov
xchg
fdecstp
std
push
cld
push
ret
sbbb
push
cmpsb
mov
es
push
xor
pop
xor
in
ss
and
pop
pop
cmp
dec
and
test
mov
add
imul
sub
add
jae
xchg
add
out
pop
test
lds
ja
in
stos
adc
nopl
sahf
out
bound
or
bound
cmp
mov
ja
inc
cmp
add
mov
in
fwait
pop
jo
sti
gs
arpl
bound
mov
xor
in
pushf
cld
add
stos
adc
enter
scas
sbb
lock
push
add
jae
insb
mov
bound
add
sbb
fnstcw
jb
inc
frstor
push
inc
mov
stos
lahf
cmp
bsr
testb
std
push
jp
cli
xor
sub
sub
push
sbb
shrb
je
jp
test
add
adc
mov
xchg
mov
fwait
mov
xchg
lret
enter
popf
imul
add
movsb
adc
sbb
or
mov
add
jge
mov
pop
inc
or
jle
shll
dec
icebp
iret
loope
pop
sarl
es
push
data16
push
imul
push
add
or
adcb
aad
les
cmp
inc
test
daa
mov
shlb
test
arpl
aas
xchg
es
xchg
mov
xlat
adc
xor
orb
lods
je
lcall
sbb
xchg
dec
cs
push
in
mov
adc
sub
jle
mov
mov
or
or
push
cli
jg
mov
shlb
push
dec
jno
xor
push
jae
push
fsubs
xor
pop
or
or
fmull
js
add
inc
xor
jl
mov
ja
ficoml
mov
sbb
push
test
loope
sarl
out
cmp
mov
dec
into
out
push
push
fwait
pushf
sbbl
out
sub
inc
sbb
mov
cmp
push
dec
pop
xor
mov
scas
jmp
ja
lahf
adc
out
shrb
int
ljmp
or
mov
xchg
adc
push
pop
jae
in
pop
lds
add
inc
mov
jae
xchg
mov
mov
cltd
fdivr
and
inc
sub
cmc
mov
jmp
mov
xchg
lods
jle
out
mov
add
aad
cmpsl
cli
mov
mov
dec
mov
lcall
addr16
jo
loop
gs
xor
mov
xorl
sbb
mov
dec
cwtl
pushf
dec
fistl
int
fidivl
cwtl
xor
dec
fadds
mov
sbb
out
or
jns
vpsubw
scas
sbb
insl
sub
lahf
cwtl
bnd
mov
sub
add
inc
and
in
ficomps
and
stc
lahf
xor
push
mov
shr
stc
pop
sub
adc
das
xchg
les
lods
cmp
int
cmp
or
iret
aaa
sub
jbe
mov
jecxz
cmc
jae
aas
call
xchg
mov
sub
scas
pushf
inc
lea
adc
rcll
lods
jne
mov
jbe
cmpl
adc
xor
loope
xchg
popf
jb
mov
lahf
ljmp
pop
ja
dec
sbb
mov
xor
repnz
lock
andb
lods
sbb
or
cmp
stc
xchg
scas
sub
inc
xchg
out
dec
xor
aad
les
push
outsl
adc
cmp
jnp
bound
push
or
sub
push
jl
cmp
out
in
enter
sbb
dec
and
lods
adcl
imul
xchg
inc
iret
adc
les
outsb
test
movsl
pop
pop
xlat
mov
jb
xor
cmp
enter
cmp
ss
enter
test
mov
cwtl
mov
ds
mov
out
cmp
or
dec
stos
adc
repnz
sub
add
and
add
rcr
adc
jmp
inc
addr16
mov
mov
sbb
mov
sahf
dec
scas
in
aam
mov
jp
testb
mov
mull
cltd
fldenv
ja
push
or
ja
jmp
je
test
adc
sbb
divl
data16
mov
jp
scas
cltd
adcl
mov
movsl
ljmp
pop
xor
out
sub
out
insb
daa
testb
mov
mov
adc
mov
out
pop
js
les
test
sub
mov
pminub
mov
addr16
xor
movsb
movsl
lcall
mov
mov
loope
lock
mov
and
push
sub
add
adc
sub
add
dec
fcomp
jne
xor
xchg
sub
push
arpl
mov
mov
adc
fcmovnb
push
popf
fincstp
dec
dec
and
inc
or
xlat
cvttps2pi
cld
adc
mov
lock
imull
rcl
lds
data16
and
mov
negb
xor
xor
sub
imul
lcall
add
lods
je
mov
dec
mov
inc
js,pn
scas
sub
addl
or
xchg
xor
pop
dec
out
bound
ret
jge
sub
adc
sub
mov
mov
xchg
push
dec
fnstenv
or
insb
adc
test
ja
pop
cmp
dec
jne
sarb
adc
or
jl
inc
in
sub
jl
iret
test
push
mulb
movsb
xchg
xor
cmp
roll
lea
fstpt
xchg
pop
adc
stos
or
mov
xchg
xchg
iret
cmp
sub
sbb
lods
hlt
xchg
sub
ja
dec
lahf
xchg
leave
mov
xlat
xchg
fucom
xor
pop
push
dec
jmp
pop
loope
repz
xchg
cmp
insb
sbb
push
or
xor
jno
mov
test
sti
cmp
int3
xchg
lcall
dec
movsb
int
dec
lds
repz
test
cmpsb
negb
mov
add
jb
add
jmp
adc
mov
je
lea
cmc
and
dec
cwtl
pop
sbb
inc
mov
cmp
dec
aad
push
int
mov
pushf
sub
ds
inc
xor
int3
cmp
push
cmc
mov
aam
into
frstor
xchg
je
inc
sahf
xor
mov
cli
hlt
cld
scas
cmp
out
je
into
xor
xchg
mov
sub
jmp
sub
xchg
inc
and
mov
aaa
lret
adc
cmp
mov
jns
sub
movsl
jl
inc
mov
es
push
push
push
jbe
das
xchg
sbb
rolw
cmpsb
cmp
dec
push
out
orl
fwait
dec
das
fs
aad
jmp
dec
sub
pop
push
xchg
enter
or
lods
ljmp
jbe
insl
shrb
mov
push
fcomps
cmp
lret
cmp
and
jno
ja
addl
mov
sti
int
ret
add
mov
inc
or
jnp
sbb
push
cmpsl
test
push
mov
gs
sub
cmp
cmpl
mov
pop
inc
adc
sub
mov
sbb
dec
popf
xchg
xchg
stos
nop
movsb
hlt
inc
ss
push
fs
push
icebp
and
stos
xor
in
pop
lods
es
jb
jmp
fisubrl
jmp
lahf
xor
mov
call
mov
cmp
sbb
sbb
add
sub
in
dec
mov
imul
out
data16
cwtl
movsl
pusha
cs
scas
mov
jnp
jnp
sub
leave
repnz
or
mov
es
mov
outsl
jmp
testb
push
fistl
test
xchg
lcall
jmp
popf
push
mov
xchg
cwtl
xor
rol
cli
push
sub
jnp
mov
and
or
gs
orb
test
dec
pop
out
xchg
adc
imul
fidivrl
mov
sar
or
sti
lea
ret
in
pop
cmpsb
dec
je
mov
push
mov
dec
dec
rorb
jecxz
sbb
into
clc
xchg
outsb
xchg
mov
aas
mov
adc
adcl
das
jo
jp
scas
test
das
out
dec
in
sbb
fcmovnu
xchg
lods
nop
insb
xchg
js
mov
jge
repnz
or
cmp
push
ret
outsl
jl
test
pop
enterw
or
dec
and
jne
push
addr16
aas
int3
mov
clc
std
jge
inc
dec
frstor
jo
inc
imul
idivl
test
sub
dec
in
cmp
xchg
add
rorb
pop
aad
sti
and
scas
push
in
leave
dec
arpl
mov
cmp
mov
add
mov
cmp
js
insb
js
sbbb
dec
imul
adc
xor
xor
and
mov
jle
mov
inc
sub
inc
std
das
outsb
xchg
gs
xor
dec
lods
dec
loope
sbb
std
sub
aas
sbb
cmp
dec
imul
push
xchg
popf
iret
sahf
pop
movsl
lods
nop
mov
sbb
mov
sbb
in
out
out
dec
push
add
push
and
fnstsw
dec
cmp
add
andl
push
shlb
iret
sub
dec
jno
enter
data16
add
mov
imul
das
scas
push
gs
mov
mov
cld
cs
xchg
adc
dec
pop
cmp
push
fsubrl
dec
mov
inc
pop
mov
sbb
shlb
fwait
sbb
xor
ja
hlt
add
int3
add
repz
jecxz
rcrl
and
cmp
push
dec
jle
xor
pop
sbb
sbb
push
inc
jp
addr16
xor
lods
aam
mov
pop
sahf
aas
or
pop
add
movzwl
ja
pop
subb
shl
mov
mov
ret
adcb
arpl
aad
jg
jns
push
inc
leave
mov
rolb
pop
lods
stos
imul
sub
push
arpl
fs
shr
lahf
push
sbb
xlat
pop
cmp
cmp
jns
call
or
sbb
pop
shrb
sub
add
shrl
xchg
dec
push
repz
sbbb
test
data16
add
xchg
inc
xchg
arpl
mov
mov
mov
sub
pop
push
jmp
add
iret
jecxz
addr16
sbb
test
jbe
popf
pop
lds
insl
test
pusha
pop
pop
das
les
jmp
out
xchg
shrl
lret
sbb
je
repnz
stos
int
rolb
lods
and
xchg
push
ds
pop
shlb
xchg
cwtl
cld
inc
push
xor
dec
jnp
dec
lret
and
arpl
xchg
cmp
icebp
pop
push
aaa
add
xor
push
jno
fcomps
test
aad
rcll
test
jns
xlat
mov
out
pop
das
inc
jns
sub
inc
aad
arpl
das
inc
loopne
ret
jmp
xor
push
sbb
movsl
cli
sarl
cmpsb
adcl
sub
aam
mov
xchg
mov
pusha
adcb
mov
fildl
repz
imul
sub
daa
lea
inc
in
shl
lods
mov
std
leave
dec
movsl
fdivl
movd
push
cmpsb
les
dec
cmpsl
fcompl
inc
cmp
and
mov
mov
lock
shlb
cmp
js
scas
jge
pop
and
jb
dec
nop
lods
fidivrs
out
bound
mov
clc
test
imul
adc
push
aad
insl
negb
inc
pop
gs
push
mov
stos
jecxz
pop
sub
sahf
arpl
setp
roll
sahf
add
outsb
pushl
fsubl
adc
jge
mov
xchg
sti
xor
jecxz
push
dec
jb
jbe
mov
clc
or
add
cld
mov
jbe
stos
inc
xchg
rcl
adc
mov
fbld
sbb
dec
mov
leave
out
in
mov
xor
jbe
sti
xchg
sub
jg
mov
sbb
repz
mulb
imul
or
gs
pop
in
test
nop
mov
aad
sub
cmp
xsha1
cmpsb
dec
nop
inc
jae
test
icebp
mov
fsubl
ds
push
mov
fisubrs
cwtl
xchg
mov
or
out
js
cmc
or
clc
mov
je,pt
lret
sub
in
std
loope
pushf
mov
xchg
push
pop
jo
pushf
add
cltd
push
mov
dec
jbe
pop
aam
outsb
xor
imul
or
push
scas
dec
mov
pop
out
and
cmp
dec
movsb
ss
or
mov
lret
add
mov
pop
pop
cli
divb
das
icebp
fucom
xor
mov
loopne
sbb
add
xor
jp
lea
sub
xchg
xor
sbb
mov
loop
repz
scas
mov
cmpl
loopne
mov
dec
mov
adc
fstp
xor
cmp
sbb
mov
cli
stos
pushl
scas
lods
or
mov
arpl
dec
lret
xor
inc
and
adc
ss
ret
add
test
icebp
movsb
lret
add
and
cmp
dec
imul
jns
pusha
cld
jle
divb
xchg
xchg
mov
gs
and
push
shlb
in
cmp
daa
fwait
cwtl
pop
fs
mov
or
and
jl
pop
bound
das
aaa
inc
cmc
out
mov
mov
sub
ret
shl
out
cwtl
js
push
or
xchg
add
lods
mov
sub
stos
xchg
enter
fs
mov
cwtl
lds
pop
push
ret
ds
push
cld
mov
repz
xchg
jnp
jecxz
sub
adc
rorb
jle
mov
rol
or
inc
and
paddd
les
in
sti
ja
or
scas
lock
ja
inc
push
mulb
dec
mov
and
inc
pop
jb
inc
adc
cmpb
xor
add
jae
xchg
xor
pusha
and
mov
cmpl
sub
pop
xor
xchg
ja
sbb
cmpsl
mov
sbb
fidivs
pop
loop
rcrl
aam
icebp
std
not
cmc
addr16
adc
jmp
cli
sub
bound
cs
pop
jl
jnp
pop
push
cmp
sub
pop
daa
xchg
sbb
push
sbb
clc
fists
xchg
je
dec
mov
pop
outsl
sub
pop
dec
loopne
sbb
add
shll
mov
aam
adc
data16
mov
lds
inc
js
dec
jg
xchg
adc
cwtl
jle
jle
sub
loopne
cmp
sub
push
and
test
sub
jp
ljmp
daa
movsb
jns
and
inc
push
and
aam
ja
fs
in
loope
xor
lods
xlat
inc
rcrl
push
dec
xorb
pop
push
jle
dec
lods
ret
mov
adc
movsl
jmp
push
jno
cmp
cmpsl
adc
mov
add
jecxz
cmp
sbb
int
jecxz
das
cmp
ja
mov
sub
mov
push
sub
add
fs
cmpsb
xor
movsl
mov
addr16
nop
xchg
fildl
les
or
stos
cld
adc
xor
push
std
jl
add
ljmp
leave
inc
aad
ss
mov
fiadds
mov
jecxz
inc
dec
xchg
jmp
sub
sub
sub
roll
ret
repz
jge
mov
push
icebp
add
push
add
and
repnz
or
mov
and
xchg
and
jno
or
push
cmp
push
adc
and
ss
dec
push
pop
rorl
stos
ret
add
stc
sahf
mov
mov
das
fwait
inc
inc
insl
pushf
sub
xchg
mov
jae
and
bound
mov
lods
mov
xchg
outsl
xor
fisttpll
push
jl
inc
pop
pop
ret
imul
daa
sub
mov
std
data16
adc
jb
pop
test
push
jl
sub
jecxz
lock
push
pop
imul
cwtl
stc
cmp
pop
dec
popa
dec
mov
jo
sbb
jg
test
lcall
jo
test
mov
fisttpl
ss
psubsb
nop
aaa
mov
popf
pop
or
cmp
cmpsl
mov
jge
add
pop
stos
mov
out
mov
ja
leave
imul
shl
in
loop
nop
sbb
mov
adcb
add
ja
cli
lock
fadds
and
mov
mov
ja
pushw
inc
mov
pop
mov
or
or
xchg
les
dec
pop
sub
fwait
inc
in
jbe
dec
daa
mov
jb
enter
adc
pop
sti
sub
jl
inc
rol
push
ja
mov
adc
adc
cmp
es
leave
jo
cltd
inc
rcrb
or
into
ja
cld
in
mov
ljmp
addr16
sub
mov
xor
add
sub
xlat
jns
scas
pop
add
sub
xchg
cmp
insb
mov
mov
out
stos
jo
arpl
outsb
or
push
popa
cld
repnz
test
fldenv
or
pop
adc
pop
xlat
shll
enterw
popf
sahf
xchg
mov
ja
int
call
adc
fdivl
push
test
roll
jb
test
jo
sti
mov
adcl
pop
sub
je
xor
out
insl
mov
pop
aaa
cmc
loope
lret
cmc
xor
cmp
dec
mov
and
and
sbb
xchg
sbb
mov
test
push
daa
push
leave
aam
cmp
icebp
mov
xchg
mov
xor
and
dec
inc
hlt
sub
stc
inc
testl
mov
fsub
in
ljmp
jns
das
push
int
jge
lds
loop
lret
cltd
movsb
xor
jp
jle,pn
push
or
inc
sub
push
adcb
iret
outsl
lds
pop
in
es
lret
adc
sbb
ja
lret
adc
dec
jns
out
and
loop
xor
push
stos
dec
idivl
in
mov
add
add
xor
inc
mov
mov
mov
jp
lea
out
mov
cmp
mov
mov
dec
sbb
aam
shll
aam
xorl
xor
pushf
daa
cmpsb
pop
fistpl
lcall
sarl
icebp
pop
mov
out
cmp
push
or
or
pop
push
sub
inc
adc
cmc
gs
les
sti
cmc
leave
xlat
mov
inc
add
and
pop
sbb
mov
stos
nop
ret
dec
xchg
cmp
pop
lcall
loopne
es
push
out
adcb
cmp
cs
dec
je
push
ret
sub
dec
inc
inc
movsb
cmpsb
mov
and
mov
jae
pusha
or
mov
pop
lret
testl
cmp
cs
fisubl
sbb
xchg
cmp
mov
stc
sub
ds
divps
fcmovnbe
sti
pop
icebp
mov
xor
clc
xor
sub
sti
imul
mov
xchg
push
xor
pop
outsb
test
sub
adc
mov
xchg
ds
aad
fucom
sbb
jge
push
mov
in
pop
dec
cmp
add
insl
jmp
inc
sub
cmpb
mov
cwtl
mov
loopne
dec
jmp
scas
gs
les
cmp
clc
jmp
add
ss
pop
and
data16
ret
gs
xor
and
push
inc
push
inc
into
test
adc
popa
shrl
pop
in
mov
hlt
shl
inc
jle
pop
push
repz
mov
test
pop
dec
mov
loopne
negl
and
push
jle
sub
lds
sbb
cmp
scas
lea
mov
xchg
stc
sti
mov
ss
gs
push
lret
je
cmc
sbb
xor
sbb
popl
popf
xchg
push
fucomi
inc
and
andl
xor
mov
cwtl
hlt
loopne
movsl
cwtl
hlt
imulb
push
rolb
sbb
out
sub
push
xor
insb
pop
outsb
push
pop
pop
popf
xchg
inc
rclb
dec
lahf
in
int3
scas
dec
dec
ljmp
and
push
imul
push
inc
dec
negl
jl
add
cmc
out
les
clc
jo
addr16
sahf
jle
loop
dec
jo
jo
sahf
jge
imul
lret
mov
roll
jbe
cwtl
jecxz
pop
inc
jecxz
into
and
or
cmp
ret
pop
hlt
ficompl
sub
pop
addr16
aas
adc
js
dec
jb
jecxz
sub
xchg
mov
inc
and
in
push
popf
repz
jns
sbb
and
jbe
mov
rcr
pop
in
aam
jg
jns
mov
mulb
pop
arpl
into
xchg
inc
mov
inc
inc
movsl
jle
cwtl
fistps
xor
test
jb
repnz
push
sbb
mov
jp
inc
add
push
xchg
scas
adc
inc
dec
ret
cmc
ja
mov
dec
sarl
jae
nop
xchg
iret
ss
pminsw
int
test
jns
cmp
or
or
ja
test
hlt
sbb
inc
les
mov
ret
pop
dec
aas
xchg
adc
dec
cmp
mov
out
aad
and
ljmp
insb
pop
sbb
in
jne
enter
jno
nop
or
add
xchg
pop
cs
ss
or
cmp
jno
dec
mov
inc
pop
int3
in
mov
sahf
and
loopne
enter
mov
jno
mov
pop
or
incl
jno
fcmovb
add
push
inc
out
cmpsl
outsb
push
sti
jmp
divb
xchg
xchg
jg
rcr
std
cmp
orl
aas
jge
sub
add
pop
sti
and
repz
mov
arpl
adc
outsb
in
sub
imul
cmp
add
sbb
pop
jb
sahf
test
stos
jecxz
xor
idiv
test
jnp,pt
mov
jns
out
aaa
insb
ja
cmp
sbbl
aas
push
inc
bound
mov
inc
bound
insb
aaa
lods
fwait
popf
in
adc
dec
adc
test
and
sbb
loop
mov
adc
sub
fwait
inc
xchg
popa
dec
out
cmovl
mov
cmp
pop
pusha
mov
inc
mov
inc
fisttpl
shll
push
js
lahf
mov
mov
mov
stos
fwait
xor
push
dec
dec
jo
out
insb
aaa
lcall
cmp
xchg
popa
js
sbb
sbb
sbb
push
push
mov
sti
mov
cmc
arpl
leave
loope
negb
into
sub
and
icebp
jg,pt
and
jl
cmp
push
arpl
push
dec
dec
add
and
adc
add
dec
out
mov
in
dec
add
inc
stos
fidivs
inc
in
jb
sbb
ret
fldl
mov
stos
imul
xchg
push
das
add
push
pop
pushl
inc
bswap
xor
in
enter
movsl
lea
jle
mov
push
inc
js
ljmp
xchg
enter
popa
mov
mov
es
inc
pop
std
dec
imul
lcall
repz
pop
jb
add
cmp
lcall
mov
xor
jg
push
fmuls
mov
repz
das
fucomip
mov
test
into
fwait
and
ja
dec
mov
xchg
rorb
sbb
sbb
ja
not
pusha
movsb
popf
test
rorb
xchg
iret
mov
lret
iret
cmpb
pop
xor
jecxz
push
aas
pop
sub
out
mov
cmp
je
xlat
test
dec
cld
dec
xchg
int
xchg
sbb
push
cltd
daa
cmp
ret
jg
xchg
jecxz
es
sbb
call
cmpsl
pop
je
pop
or
mov
out
or
int3
xchg
fnsave
test
and
jg
aas
inc
out
movsl
inc
xchg
bound
cld
lret
sbb
addr16
mov
ret
icebp
jns
adc
inc
jecxz
cmp
mov
test
add
out
dec
dec
stc
lahf
inc
xchg
daa
push
and
mov
dec
push
push
call
test
int
dec
dec
mov
sub
in
pusha
stc
mov
add
mov
cmp
jnp
pop
jae
nop
push
cmpsl
and
jmp
xchg
bound
or
add
fs
sub
loop
ds
push
add
and
insl
xor
xchg
adc
fs
test
pop
popa
xor
nop
dec
jb
xchg
mov
inc
add
mov
fcompl
aam
repz
add
or
cmpsb
mov
into
cmp
sub
xor
mov
pop
push
shlb
rolb
mov
nop
pusha
jle
push
xlat
ret
pusha
jae
testl
xchg
jno
xchg
loopne
pusha
mov
and
subb
ja
jo
bound
pop
shll
jle
out
mov
inc
gs
mov
inc
pop
adc
lods
ja
dec
xor
daa
pusha
lret
adc
shl
dec
cwtl
ljmp
addb
add
cmc
icebp
jae
fisttpl
fwait
pop
push
push
cltd
rorl
loopne
addr16
mov
jp
sbb
or
sub
shrd
clc
test
les
scas
add
xchg
pop
ljmp
jbe
sbb
imul
mov
xchg
or
jno
and
inc
lock
imul
or
shr
jo
sarl
out
lret
leave
out
pop
mov
or
mov
ss
mov
loope
fwait
add
fwait
mov
cmp
mov
repnz
sbb
leave
mov
nop
les
push
dec
jo
pushf
lds
imul
add
aam
mov
xorl
sbb
fwait
inc
adc
ret
int
movsl
xchg
loop
shrb
setns
push
rclb
unpcklps
dec
adc
jb
sbb
mov
mov
repnz
add
or
idivl
in
pop
cltd
mov
into
sub
hlt
sarb
push
lods
in
sbb
stos
fiadds
cld
fldt
mov
insl
cmp
push
lcall
push
nop
or
xchg
mov
push
mov
or
adc
cli
jl
lcall
icebp
cmp
or
and
xchg
xchg
xchg
lea
push
inc
aad
dec
inc
xchg
adc
sub
xor
cmc
jno
std
mov
mov
xchg
popa
or
xchg
mov
mov
or
les
push
or
aaa
xchg
lea
aas
in
cmp
in
rorl
fmuls
shlb
adc
loop
mov
sti
imul
lahf
push
cltd
stos
sub
les
add
push
and
sbb
test
mov
push
mov
pusha
inc
add
scas
sbb
xchg
adc
into
aam
lcall
les
or
push
loope
cmc
mov
dec
mov
cmp
int
mov
aad
in
addb
nop
sbb
fldcw
fists
add
lock
jmp
jns
das
and
pop
sbb
xchg
sub
lahf
mov
sbb
xchg
jb
mov
dec
sbb
shlb
xor
push
or
xor
or
jmp
xor
jb,pn
cmpsb
loop
lahf
cmp
inc
xchg
jmp
inc
ljmp
pop
jbe
pop
sbb
pushf
jecxz
shlb
pop
and
jle
inc
add
mov
in
pop
mov
mov
neg
add
cmp
push
lret
dec
push
xchg
adc
in
cli
lea
jmp
imul
mov
and
insl
fmull
je
or
mov
sub
cmc
rolb
pop
cmp
pop
stos
jae
jbe
fiadds
stos
inc
arpl
sub
xchg
add
inc
test
in
mov
and
shl
into
xchg
rcrl
hlt
adc
push
cmp
mov
mov
xor
arpl
lahf
push
popa
ficomps
xchg
and
jne
mov
dec
add
adc
repnz
push
cmp
dec
mov
jb
pop
test
fstenv
jge
sub
jecxz
inc
dec
rolb
idivb
xor
mov
sahf
ss
add
sbb
push
jne
lcall
cltd
mov
stos
add
xor
icebp
int3
fcomps
jp
or
adc
xchg
sbb
sub
gs
inc
jo
sbb
addl
fidivrs
push
lcall
cli
mov
test
lea
int3
stos
fwait
cmp
cwtl
jb
sub
sbb
lret
mov
jae
sub
ds
or
ret
mov
aaa
adc
jmp
mov
jo
je
fabs
mov
call
sbb
pop
shrl
lods
fsubr
rcr
fs
scas
mov
push
test
ret
clc
sub
maskmovq
negl
in
or
pop
xor
dec
loopne
mov
test
jge
jge
and
add
js
ljmp
fldl2e
filds
mov
inc
mov
sarb
jnp
nop
dec
stos
and
aas
push
call
xchg
or
mov
fimull
and
sbb
push
push
pop
mov
and
push
jo
jmp
jnp
push
bound
fmul
xor
lods
std
jg
mov
mulb
pop
sub
mov
mov
cmp
dec
and
sub
cmp
gs
sbb
jmp
ficompl
mov
dec
dec
xchg
loop
cmp
mov
sarl
sbb
lret
sbb
out
out
and
mov
scas
or
out
gs
sub
scas
xchg
test
in
fs
outsb
add
dec
out
in
push
inc
or
into
sub
pop
inc
jmp
dec
sub
cmp
test
xchg
jne
ret
or
xchg
adc
lds
jne
stc
xlat
pushf
test
mov
fwait
in
fists
sub
lret
push
and
dec
outsb
popa
outsl
lea
aaa
cltd
mov
xchg
pop
xchg
sbb
jl
xor
jno
arpl
std
add
shrb
xchg
movsl
push
or
mov
mov
sbb
add
nop
inc
je
sbb
jae
adc
roll
push
lret
test
hlt
sub
in
jbe
lret
ja
xor
xchg
xor
cli
dec
popf
dec
mov
popa
mov
fs
lds
rorb
xlat
xchg
sti
jmp
xchg
mov
std
out
icebp
pop
jge
push
cwtl
dec
jae
pop
xlat
cmpb
inc
shlb
mov
or
shrl
std
push
lods
mov
jb
lds
push
push
push
into
movb
rolb
pop
out
sub
imul
xor
je
ljmp
das
mov
inc
shrl
cmp
push
xchg
popf
lock
daa
popa
and
adc
and
test
adc
cmc
stos
pop
dec
inc
fistps
mov
mov
lods
dec
push
je
test
stos
add
push
gs
in
hlt
popa
lds
pop
int3
or
mov
and
inc
or
ljmp
ret
call
add
out
js
mov
cmp
cmp
xchg
pusha
pop
or
rcrl
adc
fisttpl
push
fnstcw
xor
clc
outsl
add
jecxz
lret
fbld
xchg
fucomip
shr
cmc
push
sbb
clc
mov
pop
mov
push
mov
xchg
mov
pop
dec
pop
scas
fwait
or
incb
pop
mov
repnz
mov
cmp
ljmp
test
fdivl
addb
mov
out
fmuls
sbb
sub
sub
dec
jno
add
jo
jmp
pop
out
xchg
lock
mov
and
pop
cmp
es
lds
xchg
cmp
jo
aaa
lock
adc
sbb
test
mov
or
inc
push
mov
xchg
stos
jne
cmp
mov
jg
test
aam
jp
dec
cmp
je
push
in
push
mov
jge
sbb
mov
mov
ret
xchg
cltd
mov
ljmp
jg,pn
addr16
mov
cmovge
pop
jmp
sub
ret
xor
pop
mov
shl
mov
mov
mov
or
xor
fisttpll
xchg
push
arpl
lds
pop
inc
dec
dec
cmp
imul
dec
fwait
fs
in
jp
pop
add
int
inc
and
in
sbb
into
pop
inc
fadd
mov
push
out
lret
sub
inc
leave
cmp
jge
jmp
ret
movsb
add
iret
scas
inc
sti
or
push
push
add
mov
cmp
cwtl
icebp
sub
nop
mov
mov
jb
adc
xchg
outsb
lret
inc
cmp
mov
or
mov
imul
push
jl
push
sbb
mov
shr
push
shlb
and
cmc
mov
xchg
push
or
and
pop
sbb
ret
jp
adc
nop
movsl
inc
cmp
hlt
mov
iret
push
shlb
mov
adc
pushf
lahf
lret
mov
popa
out
push
sbb
loop
jg
sbb
and
cltd
sub
imulb
cmp
mov
stos
sub
mov
out
jbe
add
pop
mov
or
ja
mov
mov
xchg
inc
leave
xchg
ret
popa
ret
push
iret
add
mov
mov
aaa
jne
enter
jl
cmp
ja
xchg
test
mov
iret
cmpsl
adc
mov
out
push
leave
xchg
add
or
adc
sub
lret
pusha
dec
sub
out
test
lret
inc
push
pop
xor
psrlw
subb
cmpsb
cmp
mov
data16
jns
dec
or
fcmovne
sub
aam
sbb
cmp
cli
add
push
clc
xor
fs
cmp
and
xorb
mov
mov
insl
popf
negb
jl
xorl
add
loope
sub
inc
sub
xchg
dec
xchg
dec
add
adc
clc
cmp
pop
out
sarb
xor
pop
or
int
in
jmp
subl
xor
lock
xchg
jnp
out
pushf
push
cld
iret
in
pop
xor
xchg
fstps
inc
mov
mov
push
add
mov
inc
jmp
hlt
sub
loope
rorb
add
push
sarl
inc
sub
or
xchg
mov
xlat
xor
insb
sbb
cmp
mov
jg
jae
sub
add
push
insl
push
rol
insb
mov
jge
or
add
push
sbb
mov
cmp
jns
lock
and
pop
jge
int
mov
mov
jge
lcall
nop
mov
and
adc
push
xchg
sarb
jmp
push
adc
into
dec
inc
insb
or
mov
mov
jg
fcompl
or
sbb
jae
pop
lock
lds
in
add
dec
mov
ret
loop
mov
test
fs
mov
mov
or
fs
inc
dec
jno
fadds
into
fs
repnz
rcr
out
jl
pop
cmp
sub
mov
lds
jnp
pop
lret
sbb
push
jmp
test
add
ds
popf
pushw
pushf
inc
loope
aas
mov
and
dec
minps
mov
sarb
movsl
xor
scas
push
jae
inc
lea
dec
dec
test
lahf
in
pop
daa
pop
fsubrl
ljmp
js
js
mov
fmul
ret
cmp
sahf
int3
dec
jbe
sbb
insl
andl
lahf
mov
mulb
addr16
std
or
xor
lea
movd
mov
call
cmp
mov
rolb
mov
cmp
test
jmp
xchg
add
les
sbb
inc
pop
and
jmp
adc
mov
pop
rcrl
sub
jns
or
movsb
dec
mov
jae
fnstcw
ret
jmp
jnp
xor
and
and
mov
pop
test
mov
xchg
adc
sti
mov
add
mov
adc
lret
sti
stos
pop
push
aaa
mov
imul
sub
push
aam
jp
dec
dec
imul
cmpsb
add
and
cmp
das
and
enter
push
push
call
je
mov
imull
or
adc
add
cmp
adc
lds
ja
gs
ud1
lock
sub
ror
mov
insl
mov
jge
pop
adc
or
movsb
insb
xlat
lret
les
fisttpll
sub
mov
in
lahf
sub
cmp
dec
add
sub
cli
fdivrs
add
je
out
stc
out
xchg
xchg
ret
ds
pop
inc
cmp
xchg
in
lock
jp,pn
adc
jae
mov
js
jp
cltd
fstps
push
icebp
imul
mov
fdivrl
ja
loop
shrb
cli
int
pop
xor
roll
xchg
mov
popf
inc
jle
popf
leave
adc
nop
outsb
stos
cmp
nop
scas
jle
lds
test
lods
ds
lea
add
insl
in
jo
xlat
dec
push
mov
mov
xchg
arpl
loopne
and
enter
jo
mov
and
mov
cmp
pop
test
test
dec
dec
nop
mov
push
dec
bound
ds
push
cmpsb
fbld
jnp
mov
xchg
negb
dec
add
int
aaa
movsb
xor
jp
rcrb
int
add
scas
and
aaa
imul
inc
into
dec
shrb
mov
addr16
ret
ss
fwait
cmpsb
dec
js
jmp
out
sbb
rcrl
out
clc
fisttpll
and
mov
shll
sub
lret
jo
fmuls
mov
clc
lods
popa
dec
lea
push
push
popf
decl
pusha
or
mov
add
inc
mov
xchg
jp
pop
scas
fs
nop
fdivl
pop
sbb
arpl
rcl
and
cmp
loop
jge
outsb
push
pop
cli
aad
pop
cmp
jmp
jecxz
roll
push
push
flds
imul
and
aam
rcll
pop
loope
negb
cmpsl
rcll
out
sar
push
pop
pop
add
das
call
push
push
ficoms
pop
adc
nop
aam
mov
xor
out
pop
xchg
pop
jb
cli
and
mov
dec
popa
fcoml
jb
dec
fstpt
pusha
ret
outsb
jmp
jae
cmp
adc
mov
adc
pop
sbb
xchg
fistps
dec
push
mov
js
imul
or
fimull
xchg
sub
adc
add
out
shr
cmpsl
sub
inc
in
push
test
inc
pop
mov
inc
shrl
sub
mov
push
ljmp
cmp
sahf
aam
or
sahf
pop
push
lret
xchg
sbb
cs
sub
pop
loopne
and
cwtl
or
hlt
xor
adc
inc
and
pop
mov
fwait
lds
and
adc
cmp
jp
adc
inc
mov
push
or
push
mov
jp
fisubs
movsl
cwtl
jo
mov
jb,pn
xor
or
in
repz
pop
dec
jl
insb
test
lods
and
std
out
arpl
mov
lahf
xlat
dec
stos
mov
movsl
push
sahf
aam
mov
xlat
fucomi
dec
pop
lods
sbb
xor
mov
fwait
cmp
mov
mov
inc
jge
mov
in
fdivrs
fwait
mov
sub
stos
je
sahf
movsl
add
sbb
push
or
ret
push
sbb
sbb
sbb
fwait
mov
xchg
push
add
lret
js
or
cmp
xabort
jbe
es
mov
pop
dec
cmc
and
call
jne
sbb
pushf
out
test
sbbl
scas
jle
pop
lcall
sahf
cmc
sbb
xchg
ret
sub
sbb
repnz
mov
and
cmp
adc
movsb
inc
push
les
xor
jne
adc
lahf
mov
mov
add
les
loope
sbbl
dec
adc
mov
sbb
and
loope
repz
aas
ja
sti
pop
scas
sbb
ret
pop
dec
jl
push
fstl
aad
ljmp
mov
cmpsl
sub
fistl
lods
inc
stos
mov
mov
or
fwait
rcrl
jno
mov
jnp
loop
push
mov
xor
into
push
les
push
adc
shll
sub
xor
scas
and
sti
pushf
gs
fcmovnu
aad
or
push
pop
int
ret
fistpll
jle
fwait
decl
fcomp
or
cmp
mov
mov
les
mov
xchg
xchg
std
mov
cmpsl
std
mov
jnp
sbb
jmp
lahf
mov
divb
cld
cmp
mov
movsb
aam
push
mov
or
mov
hlt
sbb
ljmp
cmp
mov
jnp
inc
push
xlat
ja
mov
idivb
mov
jle
int3
insl
sbb
lret
jmp
dec
push
push
xchg
cmpsl
and
insb
xor
insl
sub
add
mov
cmpb
and
adc
jge
inc
push
pop
push
idivb
xor
in
inc
repz
mov
nop
das
iret
and
roll
and
sti
fadds
dec
push
sub
das
adc
mov
ret
sub
sahf
repz
shlb
icebp
iret
sub
lods
insl
xor
adc
je
mov
cmp
rorb
clc
mov
js
cmp
push
loopne
mov
mov
into
cmp
xor
je
clc
mov
stos
jbe
fimull
popa
dec
lea
arpl
out
add
movhps
sub
icebp
lea
out
cmp
cmp
lock
jno
pop
fnstsw
pushf
mov
fimuls
mov
popa
or
mov
add
adc
mov
andl
push
std
jbe
int3
shll
mov
jnp
imul
jg
xchg
xor
cltd
add
aam
cmp
xchg
lret
sbb
pusha
popa
and
push
das
arpl
mull
dec
imul
or
add
test
inc
lahf
pushf
push
in
es
cltd
btr
mov
adc
lret
lret
popf
sbb
dec
lea
xor
loope
xor
adc
cmp
pop
ljmp
stos
lods
int
mov
add
or
int
xor
fadds
je
repnz
jp
pop
adc
les
pusha
lods
cld
push
push
cmp
hlt
out
loope
xor
into
filds
jo
xchg
repz
data16
imul
shlb
xor
cmpl
cmpsb
or
xchg
test
inc
aad
test
ret
xor
push
clc
shrl
lahf
xchg
push
ret
push
sbbb
rol
xchg
sbb
xor
xor
aam
sub
mov
incl
sub
stos
jle
cmp
ficoml
push
dec
rclb
test
frstor
mov
pop
rorb
adc
and
movsb
cld
push
pop
mov
lret
sbb
clc
insl
dec
add
inc
enter
lret
daa
lds
jmp
push
sub
adc
xchg
jle
sbb
cmp
inc
xor
sub
xchg
in
insb
and
pop
and
push
pop
mov
add
mov
in
cmc
jbe
push
push
dec
negl
pop
decl
lret
cmp
cmp
add
inc
mov
and
inc
and
mov
push
and
leave
movsb
push
lcall
and
test
std
push
repnz
mov
jnp
inc
push
sub
aas
lock
lcall
push
sbb
cli
or
inc
ds
das
jbe
cli
in
mov
sti
xacquire
mov
dec
je
test
jb
jb
imul
sub
popf
jge
sahf
xor
mov
in
cmp
sbb
or
hlt
xchg
scas
mov
inc
xor
pop
imul
clc
movb
sub
lahf
es
rcll
icebp
inc
scas
loope
jae
push
mov
mov
pop
xor
rcl
xlat
mov
pop
int
decl
sbbl
aaa
aad
scas
mov
imul
adc
mov
mov
xchg
mov
cmp
stc
test
stos
xlat
hlt
mov
outsl
test
xor
xchg
xor
add
gs
mov
xor
aad
push
ss
jmp
aas
mov
ss
pop
icebp
adc
add
or
adc
pusha
mov
rclb
sbb
sbb
mov
mov
push
lret
pop
sub
out
cmp
ficomps
mov
leave
pop
fldl
push
xor
dec
in
mov
cltd
adcb
lret
xor
cli
fmulp
sub
sbb
adc
xlat
aas
add
push
cmp
stc
into
inc
and
sub
mov
call
out
or
xor
dec
sbb
mov
and
jmp
dec
clc
jge
pusha
sbb
push
and
inc
sub
adcl
sti
test
inc
test
test
imul
adc
je
icebp
pop
mov
xor
xor
pushf
xchg
jmp
sbb
jmp
or
into
imul
imul
inc
std
add
push
sbb
ds
xchg
push
dec
lods
mov
sub
xchg
leave
mov
and
lret
jnp
insl
push
in
sbb
daa
bound
in
pop
jae
jnp
mov
cmp
sub
lret
rcll
cmp
fnsave
or
sbb
lret
ljmp
std
push
stc
jge
imul
movsl
or
std
lods
xchg
mov
jnp
xchg
sub
sbb
or
int
cwtl
in
add
ret
std
mov
adc
dec
fistps
mov
and
xlat
nop
js
push
dec
mov
jp
inc
cld
and
cmc
lret
xchg
dec
lret
push
add
pop
jbe
out
lds
test
sbb
sub
repz
popf
dec
pop
cmp
add
es
mov
hlt
sbb
jb
dec
jo
nop
inc
rcrl
mov
jecxz
or
int3
lea
repnz
xor
repz
fbld
mov
stos
sbb
mov
xor
push
test
jmp
xchg
in
cld
mov
sub
push
andl
mov
cmp
popa
rcr
cmp
cwtl
jp
or
test
stc
icebp
mov
lods
incb
xchg
cmpsb
movsw
adc
repnz
dec
jmp
add
pop
loope
fildll
ss
jp
or
push
shll
sub
mov
adc
dec
sbb
dec
jno
testl
fs
sbb
xor
xchg
xlat
fisttpl
insb
imul
adc
nop
aad
js
inc
add
ror
out
outsl
sub
jge
sbb
xor
jne
mov
pop
fsub
push
xchg
lock
sbb
pop
call
mov
call
inc
ret
decb
jo,pn
outsl
fistpll
insb
push
mov
xor
test
je
pop
cmp
pop
stos
mov
jae
inc
shl
negl
mov
test
jae
push
outsl
fwait
push
mov
lods
jecxz
push
outsl
mov
jnp
mov
in
clc
add
add
xchg
loope
mov
out
fwait
jg
loopne
mov
sbb
xchg
or
cmp
sub
out
xor
out
stos
sub
stc
negb
adc
popl
cmp
popf
add
mov
dec
es
pop
xor
sti
mov
mov
aas
loop
cmp
cmp
inc
mov
lods
mov
pop
js
outsl
sahf
insb
test
andb
cwtl
xchg
aad
jae
inc
movsb
imul
push
jne
popa
pop
pop
add
insl
or
stc
push
mov
sbb
adcb
xchg
cld
pop
or
jnp
popa
cmp
xchg
xchg
stc
outsb
cmc
push
add
cmp
push
push
mov
cli
test
aad
push
das
insl
bound
adc
data16
imul
push
mov
cmp
outsl
mov
adc
add
imul
fadd
repz
sbb
inc
cmp
jae
scas
xor
dec
shl
jo
ds
pop
jmp
out
mov
movsb
insl
mov
jne
xchg
fwait
imul
outsl
int3
xchg
in
rcrl
sti
sub
push
dec
jmp
bnd
sub
fldcw
mov
mov
adc
jbe
pop
inc
stc
sarb
mov
cld
mov
mov
icebp
in
sub
sbb
jns
insl
mov
fsts
push
pop
inc
sub
or
bound
jb
xchg
pop
aaa
in
xor
out
inc
in
cmp
add
push
sahf
jbe
nop
or
cli
shl
cmpsl
jne
push
sbb
in
xor
xchg
xchg
shrl
inc
enter
cmpb
jae
or
sub
jo
pop
xchg
stos
movsb
add
pop
shll
or
aam
push
push
cmpsb
and
fisttpll
dec
pusha
add
mov
rorb
mov
jge
push
sbb
ret
inc
dec
pop
out
mov
cltd
lods
pop
das
js
xchg
jle
out
bound
sub
fwait
adc
inc
sbb
cmpsb
iret
jne
jecxz
and
out
xchg
sub
inc
xor
hlt
jg
inc
adc
jle
rorl
pop
jmp
es
mov
push
lds
rcll
sub
and
xchg
lcall
pop
ret
adcl
sub
pop
add
pop
jo
dec
add
popa
pop
stos
xor
insb
jle
outsl
pop
int3
daa
sbb
jno
out
push
inc
xlat
dec
or
aas
rcll
shrb
and
xor
shlb
mov
cmp
bound
pop
sub
scas
in
cmp
out
xchg
std
mov
cltd
mov
mov
mov
jecxz
sti
mov
enter
repz
xor
cltd
sbb
xor
mov
jbe
mov
popf
test
outsl
cld
or
mov
sbb
dec
adc
pop
hlt
mov
mov
shrl
fiadds
push
pop
fldenv
shrb
jmp
push
arpl
loopne
mov
cmpsl
dec
jmp
mov
or
call
push
leave
adc
add
enter
pop
movsl
push
jno
cmpsl
psubw
cwtl
aaa
in
sbb
leave
cmpsb
bound
test
clc
push
jb
aaa
sub
fs
cld
mov
cmp
addr16
sub
fsubrs
jbe
loope
aam
and
mov
cmc
cmc
data16
shlb
xor
mov
add
jp
in
insb
push
mov
fdivrs
shrl
push
lods
in
popf
lods
mov
adc
inc
pop
out
push
or
cmp
movsb
sbb
sbb
fidivrs
fstpt
cmc
push
jae
stos
push
add
lret
push
mov
xor
test
gs
loopne
call
sub
add
in
and
insb
fadds
xchg
mov
xchg
test
stos
addr16
pop
loope
dec
out
sub
and
movsb
fwait
popa
push
inc
xor
adc
out
lcall
adc
push
pop
js
dec
dec
fmulp
sub
sub
or
jae
fmul
nop/reserved
or
int3
daa
dec
loope
inc
push
mov
decl
je
add
imul
mov
mov
or
shrl
mov
notl
mov
jnp
and
xor
andb
push
or
and
arpl
mov
mov
fs
push
dec
add
mov
clc
iret
cmp
lcall
jnp
fnstsw
out
movsb
aas
out
imul
int3
imul
js
ljmp
not
xchg
mov
push
lock
insb
dec
sahf
xlat
in
adc
pushf
xor
lret
int3
pop
arpl
sarb
inc
ror
xchg
mov
fwait
or
xchg
int
pop
mov
lahf
jnp
xchg
arpl
push
sar
mov
sbb
es
fcmovnbe
mov
pusha
pushf
mov
dec
sarl
mov
call
js
push
mov
mov
outsb
sub
or
roll
in
faddp
add
cmp
sarl
hlt
push
cmp
jbe
out
enter
mov
dec
insl
imul
out
dec
icebp
mov
outsl
pop
cmp
or
call
dec
xchg
and
leave
adc
in
cmp
inc
lea
cmp
and
testl
or
test
jno
jns
xchg
inc
inc
cmp
cmp
sub
push
cltd
clc
mov
repz
mov
int
rclb
movsb
es
push
sbb
dec
mov
sub
es
jl
inc
in
sbb
xchg
shr
sub
push
lret
jns
and
ljmp
out
sti
xchg
xor
out
push
enter
pop
ljmp
int3
or
je
xlat
sbb
fiaddl
pusha
arpl
loopne
mov
sub
scas
and
xor
in
inc
and
cmp
pop
mov
int
pop
add
mov
movsb
mov
mov
inc
loop
fistpll
out
scas
mov
repz
jmp
mov
jno
cmp
sti
les
mov
push
fidivl
rolb
mov
loopne
and
test
or
mov
lods
add
subl
jge
sti
inc
insb
dec
ss
lahf
mov
lcall
inc
jbe
inc
dec
into
fwait
enter
daa
sbb
inc
pmulhuw
lcall
js
out
xchg
dec
inc
pop
mov
lcall
clc
pusha
hlt
mov
mov
push
inc
out
mov
xchg
push
cmpsl
sub
roll
adc
sub
lea
into
lahf
jns
sbb
sub
outsl
jnp
ja
jle
gs
cs
adc
fisubrl
shrl
lock
hlt
test
xchg
iret
movsl
mov
enter
push
mov
jns
push
aas
js
cmpsb
mov
loopne
inc
fistl
jle
inc
cmp
push
pusha
lahf
hlt
cmp
lds
add
scas
bound
or
ficomps
enter
ja
xchg
out
xor
fistpl
mov
rorb
pop
cmp
rcl
xor
jne
sub
fistpll
cmp
jmp
and
adc
pop
std
sbb
ret
pop
cmp
cmp
into
xlat
jo
fmuls
inc
pop
adc
xor
addb
sub
jmp
jl
dec
shr
ljmp
lods
icebp
mov
outsb
pop
push
filds
popf
test
test
push
xor
adc
arpl
sbb
jne
mov
push
test
xchg
push
sub
mov
ss
sub
xchg
rcll
in
pop
movsl
add
icebp
cmp
fs
xchg
or
stos
or
adc
jnp
movsb
jne
adc
testb
or
add
leave
lret
rcrl
cmp
inc
and
xor
jecxz
ss
push
mov
mov
movsb
int
inc
jo
test
mov
xor
rcrb
jnp
mov
add
rcrb
jge
inc
loope
pop
jp
push
add
cli
movsb
push
mov
push
mov
cmc
cmp
jge
mov
lods
adc
mov
js
pusha
xchg
push
jp
cld
ret
cmp
dec
mov
mov
out
dec
add
test
loop
add
shll
jmp
sbbl
adc
fmuls
fsubs
mov
insl
in
movsb
out
lahf
std
jnp
adc
adc
pushf
cwtl
adc
js
xor
xchg
inc
in
leave
jg
sti
mov
mov
cmp
aam
xchg
and
jge
xor
jns
adc
mov
out
cs
cmp
fidivl
cmp
cmp
lahf
sbb
xor
cmp
xor
std
mov
mov
fistl
cmpsb
xor
lods
add
mov
add
bnd
xchg
push
xor
in
cmp
cs
xchg
jns
add
sub
xlat
cltd
rorb
stos
mov
insl
enter
xor
clc
adc
lahf
sbb
movsb
hlt
jg
fs
dec
sbb
imul
decl
call
pop
out
add
inc
mov
loopne
shll
imul
mov
in
inc
sub
out
cmc
stc
adcl
jb
cmp
sub
sub
adc
std
ja
movsb
inc
jo
loop
stc
xor
dec
adc
push
mov
inc
cmp
flds
and
xchg
arpl
stos
je
fistpll
dec
aam
out
dec
orl
add
xor
mov
shlb
push
lcall
cwtl
rcrl
fsts
insl
adc
mov
jnp
dec
stc
sbb
mov
sahf
mov
push
imul
rcr
lahf
es
sahf
push
cmp
mov
cltd
cmp
jle
cmp
movsb
xor
pop
add
push
mov
shrb
imull
inc
movsb
out
fs
dec
xchg
jo
cltd
insb
mov
xchg
int3
in
orl
xchg
enter
stc
mov
jg
xor
movsb
xor
xchg
out
push
sub
jp
and
ret
cmp
lods
je
sub
subl
adcl
iret
negl
pop
stos
mov
dec
sub
in
xor
and
mov
negl
imul
jns
pusha
vpmaxsw
fcomps
nop
arpl
ja
xchg
pushf
jo
addr16
dec
xchg
sub
xor
mov
sbb
out
mov
push
jg
test
jbe
push
nop
jnp
dec
in
es
scas
jne
xchg
pop
sbb
xor
xchg
icebp
push
call
scas
or
cs
pop
or
ja
je
xchg
pop
int
add
mov
mov
or
popf
dec
mov
sbb
mov
shlb
lret
cli
rcll
cmpsb
sub
and
hlt
out
mov
xor
stos
es
enter
jmp
sub
fs
test
add
jp
rcrl
cwtl
lcall
iret
in
in
lret
pop
xchg
lock
sar
push
sub
aad
xor
cli
sbb
xlat
or
or
shrb
mov
fdivrs
jp
sbb
call
cmc
or
imull
std
adc
xorl
pop
out
cli
jmp
outsb
cli
jmp
jg
pcmpeqb
jl
jbe
lahf
inc
mov
sub
das
or
in
movsl
mov
fstl
mov
sbbb
jae
push
adc
out
lcall
push
push
sbb
ljmp
xchg
loop
jae
mov
not
xchg
iret
or
jb
ss
push
imul
adc
popa
aam
push
jnp
lods
pop
pop
push
dec
daa
outsb
mov
enter
mov
cmp
ljmp
cmp
hlt
jl
jo
and
pop
es
les
mov
push
adc
inc
icebp
pop
cmp
dec
or
cltd
cmpsb
add
and
sbbb
pop
pop
mov
adc
out
das
dec
lahf
push
xchg
jmp
lods
jo
lock
clc
mov
cmc
cli
mov
sahf
xor
movsb
xor
clc
fcoml
pusha
ja
xor
xchg
mov
ret
repz
cmp
or
cmp
add
and
int
sbb
or
pop
xor
and
fsubs
and
ret
push
xchg
xchg
out
xchg
cmc
leave
frstor
mov
in
addl
mov
pop
cmp
mov
add
scas
mov
push
and
popa
lods
mov
adc
jnp
add
scas
adc
pop
fildl
cmovp
xor
and
mov
rolb
repz
add
fwait
insb
jbe
das
das
and
adc
pop
add
cwtl
adc
mov
mov
jmp
sbb
dec
outsl
outsl
mov
push
addl
stos
push
and
in
mov
lods
popa
mov
test
sbb
and
dec
fxrstor
not
or
rolb
cmp
mov
push
sub
stos
jmp
ljmp
imul
and
jae
int3
xchg
add
cltd
lods
mov
leave
loopne
push
popa
fisubl
mov
lea
mov
cmp
and
dec
ret
and
stos
jle
mov
shlb
add
lret
hlt
cmpsb
mov
add
out
sbb
mov
xor
jmp
push
jg
pop
int
add
and
xchg
cwtl
ret
seto
int
out
dec
jmp
push
pop
mov
scas
in
xchg
ja
pop
jno
cmpsl
push
repz
sub
les
sti
leave
push
and
in
repnz
addr16
jae
sbb
push
mov
inc
std
xor
aas
sbb
addb
cmpsw
inc
xchg
jp
mov
popf
lahf
sahf
sbb
jne
push
push
lret
shrb
bnd
sbb
and
not
ret
mov
mov
push
sbb
xor
cwtl
push
pop
hlt
das
xchg
cmc
inc
lds
insb
aaa
sbb
and
rcr
xchg
pop
and
add
sbb
dec
mov
mov
sub
stc
adc
addb
jnp
out
jns
dec
aad
push
enter
bound
scas
test
lods
pushf
cmp
fbstp
adc
dec
ja
mulb
dec
out
cmp
pop
iret
faddl
or
pop
xchg
or
or
test
cmpl
xor
push
sub
xlat
ficoms
dec
dec
movsb
mov
mov
dec
das
push
mov
fnstcw
cmpsb
adc
cmp
pop
insb
ficoms
imul
idiv
push
xchg
add
mov
in
jp
jecxz
jl
sarb
add
jb
loop
inc
jmp
js
out
xor
psubusw
arpl
pusha
sbb
inc
pmaxsw
mov
jp
pop
mov
jb
inc
ljmp
adc
push
xchg
jecxz
leave
adc
mov
and
loope
aam
sbb
int
pop
dec
push
iret
fidivrl
sub
addl
lea
lret
pop
js
sbb
jle
xor
imul
or
daa
sub
outsb
mov
mov
pop
in
jecxz
lods
sti
loopne
mov
or
cmp
test
pop
jnp
fcompl
aas
sub
cmp
inc
xchg
sti
decb
sbb
shr
inc
sub
sti
sub
ja
cmp
jmp
pop
xchg
addr16
nop
mov
push
inc
jne
imul
mov
jae
jb
je
enter
push
out
or
cltd
fdivs
leave
add
ss
popf
sahf
jno
shrb
fsubrs
adc
adc
mov
jnp
mov
stc
sahf
subl
mov
add
xchg
xor
clc
repnz
pop
and
cwtl
mov
xchg
rcll
sub
jnp
mov
xor
cmp
push
jnp
movsl
and
test
xchg
and
pop
or
mov
scas
stos
sub
or
int
pop
ljmp
jbe
mov
jmp
outsb
je
jbe
push
push
jno
pop
out
or
int3
or
cmp
xlat
mov
outsl
iret
jne
ret
jmp
push
insb
stos
sbb
add
test
pop
fcomps
mov
sub
ret
shr
out
ljmp
out
out
ret
xchg
mov
testl
mov
leave
mov
pop
add
jle
jl
in
lods
mov
jmp
push
jmp
leave
sahf
arpl
xchg
add
or
pop
loopw
stc
sti
sbb
or
mov
or
cmp
outsb
outsl
add
inc
mov
out
push
mov
sbb
mov
mov
jecxz
sub
icebp
and
mov
and
test
lea
fistpl
in
ret
sarl
sahf
pop
out
cmp
xor
sbb
enter
lar
mov
out
jmp
and
cli
adc
dec
sbb
shlb
mov
push
in
sti
mov
sti
and
and
and
pop
lret
xchg
repz
iret
pusha
or
sub
dec
xchg
insb
xchg
lret
pop
rcr
scas
in
and
or
add
pop
loopne
fwait
call
movsl
cmp
pop
inc
mov
out
int3
in
jbe
test
insb
insb
hlt
jle
xor
adcl
les
inc
push
pop
jp
pop
lock
xor
iret
xchg
test
pop
outsl
mov
adc
jbe
loopne
or
mov
pushf
sub
mov
out
cltd
not
paddsw
or
adc
add
jge
ret
add
cltd
aad
je
leave
add
inc
pop
clc
loopne
dec
rcrl
push
mov
push
adc
jg
mov
cltd
scas
fisttps
ret
lcall
mov
mov
xor
imul
cmpl
scas
subb
push
lcall
lcall
pop
lock
mov
xchg
aam
add
mov
sub
and
and
add
fists
movsb
inc
xchg
cmpsl
dec
in
pop
iret
idivb
inc
and
cmp
ljmp
in
aas
jnp
ss
mov
movsb
cltd
add
lods
add
lods
lods
outsl
push
push
test
sub
cwtl
xchg
nop
adc
testb
lret
cmp
mov
adc
out
push
fistpl
imul
jne
outsl
and
xchg
outsb
xor
push
mov
jns
outsb
insl
shll
pop
jecxz
sub
sbb
nop
jge
jle
sahf
and
and
into
mov
xchg
jge
jo
pusha
mov
repnz
das
ljmp
stos
movsl
negb
xor
inc
cltd
movsl
sub
lods
jp
cmp
int3
or
fs
mov
inc
aad
iret
cwtl
lock
and
jmp
and
add
jle
sbb
arpl
cmp
roll
in
cmp
xor
pop
cmp
cmp
sahf
mov
mov
sti
aam
dec
data16
popa
lock
inc
stc
aas
xchg
cmp
xor
call
cld
xchg
scas
sub
pop
test
push
fidivrl
mov
ficompl
push
pop
cmc
push
vpcomuq
dec
insb
mov
xchg
add
inc
lret
outsb
pop
adc
mov
gs
fldenv
push
ja
push
repz
pop
xchg
xchg
ret
decb
mov
movsb
add
fistl
mov
mov
push
addl
mov
mov
sbb
cmp
adc
mov
test
xchg
bound
jge
fmul
fldln2
out
add
dec
and
lahf
push
shrl
ret
and
mov
xor
cwtl
in
in
sbb
pop
push
or
sbb
pop
loope
test
pop
outsl
cmp
shll
fcoms
fwait
lret
mov
pop
inc
or
cmp
in
cmp
ficoms
pop
mov
jae
xchg
fstpl
out
sub
test
movsl
aas
mov
fsts
negb
pop
push
lret
repz
loope
xchg
xchg
lahf
mov
or
mov
stos
cltd
daa
clc
gs
cltd
or
stos
or
stos
loope
jb
cmp
clc
imul
cld
cld
cmp
imul
jno
dec
inc
pusha
mov
pop
jmp
push
in
nop
out
dec
jmp
in
stos
or
pop
mov
mov
or
pop
pop
outsb
or
adc
push
jae
imul
inc
stc
in
mov
cld
test
pop
rcrl
xor
or
xor
push
mov
popf
push
pushf
fisubrs
fiadds
mov
stos
xor
mov
insb
aam
ret
xchg
stc
lret
add
or
jb
jo
inc
test
mov
into
std
push
add
xchg
push
dec
and
int3
mov
insb
xchg
dec
mov
fcompl
mov
out
xchg
outsl
arpl
lret
testl
insb
inc
cmpsl
fisubrs
test
out
xchg
outsb
popa
jg
xor
ret
mov
outsl
stos
mov
adc
into
cltd
pop
cmpsl
sub
sbb
mov
into
dec
jg
pop
xor
cltd
sub
mov
lods
pop
or
repz
pop
dec
fwait
dec
int3
push
imul
pop
movsl
sbb
inc
test
jg
pop
inc
jmp
xchg
into
cmpsb
cs
call
adc
adc
test
fistpl
sub
and
xchg
and
jb
mov
xor
inc
adc
sub
cltd
sahf
add
in
inc
out
push
or
cmp
jae
jle
push
xchg
es
sbb
pop
mov
cli
fldenv
sub
repz
dec
out
mov
xchg
insb
or
pop
sbb
mov
out
fstpl
sbb
fiaddl
stc
lock
hlt
jno
mov
roll
pop
xor
push
mov
mov
daa
dec
pop
scas
jg
ret
or
gs
ret
hlt
inc
sbb
outsb
dec
mov
cs
mov
sub
out
mov
movsl
incb
stc
push
pop
mov
cmp
imul
add
xchg
rorl
nop
sub
clc
das
syscall
das
jno
mov
mov
outsb
sti
aad
mov
xor
popa
xchg
add
flds
dec
aam
ret
and
lahf
jg
fwait
pop
inc
je
xchg
rolb
aaa
data16
imul
lods
mov
push
mov
insl
xchg
jo
andl
push
cmp
fprem
lret
stc
sub
sub
mov
cmpsb
cmp
subb
sub
push
call
in
adc
mov
inc
das
mov
jno
mov
xchg
outsb
cmp
jb
int
fiadds
pusha
add
mov
mov
cmc
das
shll
movsl
imul
xchg
std
int3
mov
mov
xchg
iret
daa
cli
cmp
xchg
lcall
and
jle
jbe
sbbb
cs
jl
imul
repz
inc
adc
adc
pop
dec
sub
std
pop
addb
hlt
data16
and
pop
je
sub
into
jne
lds
push
into
xchg
pop
push
inc
aas
sub
insl
ljmp
pushf
test
insb
test
push
push
lock
xor
ret
adc
std
xorb
popa
cltd
mov
add
in
dec
rcrb
jbe
imul
cltd
cld
mov
mov
and
xlat
sbb
inc
pop
loope
xor
pushf
pop
lods
cmpsb
sbb
push
lods
out
cwtl
add
and
ljmp
cmpsb
leave
nop
cld
sub
int
push
sbb
cmc
les
scas
cmpb
out
xor
popa
lock
sbb
jnp
sub
mov
cmp
push
enter
mov
loope
es
iret
inc
daa
repnz
inc
ret
xchg
cli
inc
mov
dec
or
xchg
inc
bnd
add
inc
ja
inc
xchg
xor
dec
ret
pusha
pop
insb
mov
jge
mov
adc
out
cs
mov
pop
out
aam
xor
fwait
xchg
xchg
sub
xlat
faddl
imul
cmp
ss
cmpsl
xor
mov
in
mov
push
ss
les
lret
xor
cmp
cmpsb
xchg
mov
pusha
or
cmp
pop
je
mov
movsb
inc
cmpsb
scas
jnp
cmp
jl
nop
arpl
fdivl
lds
lea
and
mov
fbld
cmpsb
add
jb
cmp
gs
sbb
loope
rorb
cmp
popf
sti
and
pushf
dec
cmp
add
arpl
add
ja
js
mov
push
jb
pop
cli
jae
outsb
cwtl
fsubl
sub
jo
lock
cmc
sbb
mov
pop
jecxz
jmp
cmp
jge
mov
push
daa
negb
lret
and
jmp
and
pop
into
xor
xchg
into
clc
repnz
in
mov
in
dec
dec
xor
and
adc
dec
shlb
mov
jge
mov
or
pop
in
sbb
xchg
and
pop
out
cmp
mov
and
out
pop
pop
xor
adc
jmp
mov
mov
ror
push
dec
jge
adc
cs
xchg
mov
sti
xor
fnstcw
roll
or
adc
mov
icebp
int
jbe
imulb
pushf
out
mov
push
cwtl
ss
test
add
dec
cmp
pop
xor
inc
jnp
out
iret
out
std
sub
movsl
cmp
push
lods
repnz
sub
movsb
popa
out
or
stc
in
cmp
and
insb
hlt
mov
out
mov
mov
mov
lock
in
xorl
fstp
mov
imul
or
lock
lds
inc
popa
sbb
xchg
cmp
dec
mov
inc
dec
das
cltd
sub
mov
push
jnp
jns
mov
aam
gs
shrb
aaa
sbb
into
push
cli
xorl
xor
sti
shl
xchg
stos
out
rcrl
xchg
imul
or
in
dec
dec
xor
iret
cmp
ret
and
inc
das
xor
arpl
sbb
arpl
fbstp
fsubp
popa
lods
imul
lret
sti
lahf
adc
and
push
mov
andb
stc
nop
mov
ss
int3
sub
xor
pop
cmp
mov
roll
push
cmc
inc
sbb
scas
jo
adc
inc
and
add
pop
jg
and
push
jecxz
add
cmp
int3
push
jnp
mov
fdivl
ljmp
mov
fmull
push
xor
or
sub
mov
stos
iret
mov
enter
push
popf
push
in
xchg
cwtl
adc
sahf
shll
cmp
hlt
push
fists
repnz
cmp
mov
lods
rol
outsb
sub
xor
lret
test
push
pop
lcall
rcrl
sub
clc
mov
ret
sbb
and
mov
mov
push
adc
dec
jbe
loop
add
sbb
cmp
stc
movsb
pslld
adc
pop
int3
icebp
movsb
push
je
clc
negl
adc
jo
cld
jmp
ja
mov
inc
sbb
lock
mov
jmp
popf
pushf
fnstenv
cmpsl
pop
xchg
fildll
mov
shl
mov
mov
sbb
ljmp
lock
add
jo
cwtl
roll
data16
scas
add
jmp
ljmp
xorl
xchg
shlb
lods
test
or
inc
lods
dec
cmp
push
notb
test
test
mov
leave
imulb
cwtl
test
jnp
fcmovbe
mov
stos
pop
cmp
add
fimull
rcrb
aaa
sarb
repnz
inc
insl
sbb
cmpsl
mov
out
movsb
dec
jbe
mov
in
ret
push
push
sub
push
mov
out
adc
sub
sbb
repz
jl
pop
sti
cwtl
xor
fisubrl
adc
enter
pop
mov
addl
mov
inc
nop
sbb
sbb
fnstcw
cmp
bound
xlat
test
loope
in
addr16
push
adc
mov
adc
jae
push
xchg
test
fisttpll
cmpsb
inc
loop
fdivrl
inc
clc
bound
sub
mov
pop
mov
addr16
test
jnp
movsl
sub
outsl
sar
or
bound
pop
jno
iret
or
xorb
mov
mov
xorb
xor
repnz
loopne
cmpsl
adc
into
outsl
sbb
jae
lds
arpl
in
rolb
jge
subb
psubd
add
pop
ret
sub
sub
jecxz
das
push
adc
je
inc
add
and
ffree
xchg
mov
or
divb
enter
xchg
int3
mov
xchg
cmpl
or
xor
mov
jl
and
inc
arpl
xchg
and
sbb
fcoms
inc
inc
es
icebp
or
adc
in
inc
push
lods
ret
mov
mov
adc
mov
fdivrs
xor
sub
loopne
xor
in
push
dec
stos
mov
lods
pop
push
or
pop
mov
pusha
and
pop
bound
sub
mov
sbb
in
in
ret
pop
ljmp
push
pop
jmp
sub
pop
addb
shlb
shlb
mov
mov
imul
jae
fs
iret
pop
call
mov
nop
jnp
sbb
ljmp
lea
adc
cmpsl
das
jmp
daa
pop
xchg
repnz
sub
push
pusha
push
pop
push
mov
dec
fdivrl
mov
xchg
jl
int
mov
jge
pop
js
mov
ljmp
int
sbb
ret
sbb
loope
sub
push
jl
add
xlat
pop
imul
aad
lret
aaa
scas
inc
loop
lret
dec
loop
mov
lret
testl
xor
cmp
pop
loope
shr
mov
push
enter
mov
lret
sub
out
loopne
jecxz
dec
push
shll
lcall
sbb
iret
inc
add
push
cmpsl
or
sub
rorl
mov
mov
mov
sub
inc
ds
out
imul
jle
shll
adc
jbe
ficomps
std
jg
subl
jae
mov
call
loope
xchg
push
fmul
cmpsb
and
pmaddwd
adc
fcoml
sahf
call
xchg
dec
cmp
popa
mov
aad
pusha
adc
inc
push
jb
repz
or
daa
inc
dec
xchg
cmp
imul
adc
or
mov
lret
aam
sbb
jne
push
rcll
jmp
sub
loop
ja
mov
adc
dec
pop
adc
pop
pop
fistpl
xchg
in
clc
outsl
roll
xor
je
cmp
add
imul
enter
movsb
shll
test
sbb
dec
lods
xchg
cwtl
dec
rcll
stc
rcll
push
cmp
add
cmpsl
dec
arpl
aaa
add
je
adc
jmp
xor
cs
pop
cmp
setge
imul
addl
in
push
inc
xchg
cwtl
call
stos
sub
pop
out
pop
pop
mov
xor
movsl
pop
pushf
sti
nop
adc
dec
jno
test
xchg
sbb
pop
mov
mov
dec
push
adc
fbld
cmp
mov
sub
in
jecxz
ss
sbb
or
in
ret
popf
enter
in
xchg
pop
dec
mov
or
mov
adc
xchg
mov
xor
shrl
pop
mov
subl
lods
lret
fbstp
jge
decl
push
pop
mov
xchg
jmp
pop
popf
xchg
inc
push
dec
mov
pop
cltd
rcr
adc
test
cmp
jl
xor
inc
xchg
div
pop
movsb
jae
jo
dec
in
mov
jg
cmp
xchg
sbb
aam
pop
cli
loop
lods
and
add
jo
jbe
repz
xor
pop
dec
clc
and
or
adc
mov
push
and
fnsave
fidivl
pop
cltd
jp
ljmp
sbb
dec
sub
cmp
sarb
sub
cmpsb
dec
push
jmp
icebp
sbb
shrb
lahf
fnstcw
jmp
mov
push
ss
rcrl
and
cs
arpl
aam
cmp
sbb
xchg
pop
leave
arpl
ret
push
fs
mov
aaa
test
push
xor
insl
lock
and
push
push
int3
sub
inc
sbb
aad
scas
hlt
pop
loopne
sub
sbb
push
mov
test
bound
sbb
sub
pushf
jle
push
push
sbb
jno
cmp
pop
mov
xchg
mov
xchg
std
out
inc
inc
movsb
addr16
jge
fsub
or
pop
cs
mov
lret
add
adc
outsl
mov
in
fcomi
cmp
leave
sbb
sub
mov
inc
imulb
cmp
mov
cmp
sub
and
pushf
dec
mov
jecxz
fs
js
push
jmp
and
cli
or
fs
xor
fwait
xlat
push
lret
es
imul
push
add
jns
enter
outsl
ret
inc
dec
in
lods
mov
shlb
pop
cmp
loopne
cld
pop
sub
iret
ljmp
adc
stc
das
call
fs
sub
dec
into
and
jg
ret
fs
push
jl
rorb
aaa
sub
pusha
cmpsl
mov
aad
and
mov
add
cmpsb
stos
fcmove
ss
das
cmpsb
push
adcb
mov
sbb
repnz
pop
inc
cltd
mov
sub
es
mov
push
jmp
mov
pop
and
fidivs
or
hlt
and
pop
imul
inc
jg
pop
xchg
or
ret
xor
xor
jl
out
fstpl
mov
hlt
dec
in
out
mov
jno
ljmp
cmp
jbe
les
loopne
xchg
xor
inc
jo
pop
mov
sti
mov
mov
pop
lret
lods
sbb
je
xchg
fidivs
sbb
mov
ret
aaa
lret
popf
sub
inc
dec
test
in
outsb
or
mov
adc
sub
fmul
sahf
repnz
pushf
das
and
adc
jl
out
sub
dec
cmp
lods
jbe
jmp
ljmp
mov
sub
xor
jecxz
test
ret
loopne
nop
gs
dec
fstpt
shl
xchg
add
int3
negb
popa
mov
or
lret
ss
out
lcall
rclb
rorb
lds
stc
mov
xchg
adc
add
and
jg
add
pop
cli
aam
mov
and
cltd
pop
pop
inc
out
xchg
add
iret
mov
into
jnp
add
ja
mov
stos
mov
notl
or
loop
scas
xor
rcrl
scas
inc
xor
and
pop
dec
or
nop
cmc
ret
xor
loope
imul
cmp
and
repz
mov
pop
cwtl
enter
cmp
test
pop
test
adc
in
dec
fwait
xor
push
add
cmpsl
imul
fwait
das
arpl
add
cmp
xor
sub
adc
mov
stc
insb
mov
sbb
lret
sbb
add
cmp
in
sbb
movsl
negl
xchg
or
dec
sub
pop
dec
sub
adc
jle
pop
inc
add
fidivrs
dec
mov
int
jns
orb
xor
jle
stos
stos
xchg
adc
idivb
xchg
or
and
in
mov
jg,pn
imul
arpl
rcpps
imul
mov
out
fnsave
mov
jg
xor
and
mov
shlb
pop
jbe
fstpl
outsl
push
jbe
sahf
popf
jb
inc
mov
xchg
leave
dec
jbe
testb
xchg
adc
clc
adc
stos
or
cmp
cmp
aad
fcoml
movsb
loope
sub
in
faddl
adc
jae
jno
pop
test
cli
mov
jmp
pand
inc
mull
mov
neg
xchg
lahf
xor
jbe
fisubl
jbe
add
in
xchg
xor
or
inc
imul
push
jmp
add
ljmp
movsb
cmp
sbb
callw
pop
andb
jle
subl
push
xchg
mov
ljmp
fwait
idivb
out
mov
cmp
pop
stc
xchg
int
repz
lock
or
gs
sub
outsb
lcall
mov
js
and
mov
dec
sub
stos
enter
add
iret
outsl
jmp
loopw
mov
push
cmp
into
pushf
loopne
out
sub
mov
test
xchg
aam
jb
jnp
movsl
xor
jle
lods
mov
mov
clc
mov
fstp
mov
out
insb
push
cmp
xchg
pop
pop
in
adcl
fs
es
lcall
mov
lcall
arpl
mov
and
push
pop
sub
decb
cli
xor
push
dec
fldenv
shll
sub
lods
mov
stc
rcr
jl
ss
push
decb
sub
lock
add
fsubrp
dec
out
lcall
push
mov
lds
into
jae
lret
inc
pop
scas
mov
cltd
push
adc
cltd
adc
lods
hlt
adc
dec
dec
imul
or
icebp
lods
fldcw
sbb
sbb
call
stos
lock
sub
and
les
repnz
ret
mov
repz
xchg
ds
test
out
mov
push
push
insb
popf
cmp
cmp
mov
push
push
shrl
sarb
pushf
rorl
mov
fwait
sbb
nop
adc
add
adc
mov
inc
sbb
or
stos
sub
xor
test
pop
leave
in
pop
dec
xchg
adc
dec
cmpsl
data16
dec
dec
hlt
inc
cmp
add
rcrb
add
ljmp
push
ds
jne
sub
mov
arpl
in
xor
fstpl
rcll
mov
mov
call
push
adc
sbb
lcall
mov
cli
inc
outsb
add
cmp
shll
or
rorl
cltd
sarb
xchg
stos
dec
std
data16
dec
into
pusha
jg
sub
jb
ja
xlat
ja
movsb
sub
aad
pop
dec
mov
and
imul
cmc
ffreep
loope
js
mov
mov
fadds
or
xor
push
andb
add
iret
pop
inc
mov
sub
mov
sub
cltd
insb
fistl
pushf
dec
sbb
ret
jg
call
in
jle
sahf
cwtl
jle
push
mov
in
jmp
adc
test
pop
stos
scas
mov
add
mov
mov
adc
jle
lahf
fstl
xor
mov
scas
iret
cmp
cmpl
jo
xor
dec
or
into
ret
aam
lret
cmpsb
mov
lds
mov
aaa
dec
fnstcw
xor
mov
jecxz
xor
sub
lret
sub
mov
scas
aas
adc
into
and
push
inc
cmpsl
push
push
adc
loopne
push
bound
shlb
xchg
jecxz
mov
xchg
and
stos
or
insb
scas
bound
shlb
fimull
dec
mov
aaa
or
mov
mov
das
xor
mov
rolb
add
arpl
lods
into
fwait
shlb
mov
xchg
add
aad
ficompl
pop
aas
repnz
mov
clc
std
out
pop
mov
out
jg
push
lret
add
mov
adc
repz
aaa
cmp
xor
dec
mov
inc
and
test
add
push
xchg
push
stc
out
xchg
jb
adc
mov
mov
mov
cmp
adc
out
out
ljmp
and
inc
push
lcall
sahf
cmpsl
popf
je
aaa
roll
lea
sub
fnstcw
enterw
xchg
lahf
fnstenv
push
dec
cli
cmpsl
and
cmp
push
xchg
dec
je
sub
imul
xchg
add
popf
add
or
pop
jle
push
mov
movsb
sbb
insl
lds
loop
enter
nop
lods
call
popa
cmc
sbb
jle
test
aam
ret
adc
mov
arpl
xchg
nop
jbe
xchg
xor
cmp
daa
icebp
out
ljmp
push
je
dec
xchg
cmp
sbb
mov
dec
aaa
jg
pop
stos
dec
call
fsubp
repz
aas
fldl
lahf
xchg
arpl
mov
rolb
jns
mov
iret
add
add
aad
in
sbb
or
xlat
pop
data16
movsb
or
pop
push
in
jbe
lcall
pop
dec
loopne
sbbl
sahf
lea
pusha
dec
jecxz
scas
fsubl
icebp
loop
mov
rcrl
inc
cld
adc
pop
pop
push
mov
je
lahf
dec
fucom
add
add
cmp
shl
cmp
dec
fdiv
sahf
popf
fnstenv
dec
sub
daa
into
pop
loopne
dec
popf
and
fbld
jae
les
in
mov
pushf
mov
push
sahf
jns
and
add
ds
movsb
push
mov
cwtl
or
cmp
sub
or
xchg
imul
pop
xchg
jg
sahf
pop
mov
rorl
push
jge
sbb
testl
or
mov
popa
dec
mov
jl
xor
xchg
mov
xchg
icebp
icebp
xlat
pop
or
cwtl
in
lret
jne
and
in
mov
ret
push
adc
xor
shlb
jb
jae
inc
pushf
cltd
pop
js
sti
dec
xchg
mov
pusha
dec
push
and
cwtl
xchg
testb
xchg
or
cmc
or
popa
and
call
rcl
jge
push
cltd
addr16
test
mov
les
push
mov
cmp
jge
ret
insb
mov
cmp
outsl
cmpsl
and
aam
int3
fnsave
pop
pop
mov
adc
dec
rcrl
mov
inc
hlt
fsubs
dec
cmpsl
and
insb
sub
or
xor
dec
jle
or
mov
lds
fisubl
sub
nop
test
push
mov
ljmp
mov
ret
dec
lahf
push
dec
gs
mov
rorl
ljmp
jno
leave
inc
add
mov
push
inc
in
insb
imul
bound
adc
popa
jo
mul
shll
pop
adc
or
lds
nop
xchg
push
cld
mov
push
jae
stos
xchg
xchg
outsl
dec
cld
mov
mov
addr16
xchg
push
jnp
movzbl
arpl
cwtl
ds
daa
popf
fxch
xor
int
dec
mov
out
cmp
insb
ud1
lcall
xchg
push
pushf
pushf
fsubl
jnp
test
sbb
or
rorb
cwtl
fldcw
adc
push
fcomps
xchg
out
cld
mov
mov
in
mov
add
sbb
js
xor
popa
lret
pop
xor
fmull
jmp
inc
orb
pop
push
loop
xor
in
cmp
decl
mov
lods
xchg
movsl
pop
pop
mov
jne
mov
add
cs
adc
cli
das
rolb
mov
sub
mov
inc
dec
lret
daa
in
and
xor
out
scas
das
jge,pn
fcompl
lods
test
movsb
inc
mov
outsl
jecxz
mov
ds
iret
ud1
in
es
popa
pushf
aam
fimull
sbb
out
aaa
mov
nop
clc
lret
sub
dec
mov
sbb
pop
mov
push
inc
jo
rolb
out
and
sub
sbb
sbb
sti
and
repz
inc
stos
or
lea
xor
ret
push
lret
movsb
pop
cmpl
pop
in
ss
and
push
xor
push
xchg
or
or
sahf
pop
push
pop
adc
pop
jbe
or
imul
push
test
add
in
mov
dec
loopne
sub
clc
inc
es
fiadds
gs
pop
xor
pop
inc
mov
cmpsb
call
insb
inc
fldt
iret
mov
pop
sub
outsl
jmp
jle
push
mov
scas
cmc
xor
pop
fistpll
sbb
cltd
outsb
daa
sbb
sub
add
in
mov
adc
mov
and
cmp
adc
pop
mov
outsl
mov
sahf
mov
cld
xchg
push
gs
fldt
movsb
iret
out
imul
pusha
jns
jbe
push
jmp
mov
stos
xor
pop
push
inc
xchg
push
pop
jae
ds
pushf
adc
movsbl
mov
push
out
in
pop
stc
mov
icebp
jg
xor
inc
push
xor
and
into
fld
push
cld
inc
pop
sar
pop
add
mov
inc
cwtl
lea
mov
xor
xor
sbb
cmp
fcmovb
lret
jno
xor
and
stos
pop
mov
or
in
dec
sub
and
jmp
inc
sbb
xor
mov
outsl
mov
push
mov
fiaddl
imul
sbb
inc
dec
mov
mov
mov
dec
xor
cmc
test
js
loope
pop
loope
sbb
dec
lret
imul
inc
mov
aas
xchg
push
das
mov
and
shll
hlt
or
xchg
insb
aam
repnz
fistpl
arpl
enter
test
popa
push
sbb
sbb
mov
add
pop
pop
cmp
pop
mov
fsubrp
mov
mov
mov
cmp
inc
and
push
xchg
cwtl
shlb
and
loope
sub
int3
incl
sbb
add
xchg
mov
scas
pop
xchg
loop
lock
lds
and
xchg
cmp
xchg
cmpb
sbb
push
insl
ds
push
inc
pop
sarl
and
or
inc
xchg
incl
and
xor
lret
in
pushf
and
dec
mov
cwtl
cwtl
dec
sub
push
repnz
insl
es
pop
mov
push
out
scas
xchg
scas
cltd
mov
pop
and
and
cmp
mov
or
dec
es
mov
insb
dec
addb
inc
aam
sub
push
out
mov
xor
mov
iret
rcr
repnz
aas
jae
std
or
daa
fstl
lods
cmp
popa
clc
sub
jns
les
ret
add
xor
or
mov
loopne
fnsave
jecxz
cli
sahf
cmp
in
dec
das
adc
mov
mov
pop
shlb
incl
imul
pop
mov
into
mov
pop
out
inc
mov
lahf
push
je
push
cmpsb
shll
imul
cmovl
sbb
dec
cwtl
jecxz
jno
xor
sub
xchg
out
enter
mov
mov
add
mov
push
daa
sub
pop
cli
das
mov
fstps
jmp
sets
imul
sub
or
mov
aad
lds
xor
loope
std
pop
sub
mov
push
xchg
and
cs
pop
arpl
fs
xchg
outsb
stos
outsb
jne
loope
sbb
aad
dec
in
fwait
enter
lods
cmp
push
mov
sub
movsb
gs
mov
inc
push
jl
xchg
and
jp
ret
dec
sub
mov
dec
jno
adc
pop
mov
in
pop
adc
push
cltd
dec
arpl
or
push
adc
pusha
pop
loope
lds
inc
mov
repnz
rorl
dec
orl
int
jae
iret
dec
lods
dec
mov
outsb
and
mov
mov
stos
outsl
lcall
nop
inc
and
fidivrl
mov
inc
inc
stos
xchg
inc
sub
lret
pop
push
movsb
lock
mov
push
push
pop
dec
out
in
gs
push
pop
sbb
cmp
aad
jecxz
shrb
dec
neg
ja
add
mov
or
movsb
push
inc
xchg
aad
pop
xchg
pop
sti
and
in
ficomps
mov
test
pusha
inc
data16
icebp
aad
sbb
scas
bound
jo
divl
mov
insb
pop
fdivrl
aas
out
jbe
scas
std
cli
insl
pusha
in
test
outsl
mov
lea
stos
insb
dec
fidivrl
xchg
lods
arpl
adc
lds
mov
cmp
sub
or
mov
jecxz
cmpsl
aam
in
mov
add
movsl
popa
imul
adc
pop
icebp
mov
or
jmp
loope
mov
dec
mov
ds
mov
sub
xchg
sub
in
insl
ljmp
mov
push
cld
ret
push
sub
jae
mov
rorl
mov
cwtl
shrl
xchg
xlat
push
fiaddl
and
test
sbbl
mov
fistpl
aas
dec
adc
add
pushf
pop
stc
popf
mov
sarb
sbb
cli
mov
arpl
repnz
leave
pusha
mov
sbb
cmp
inc
mov
mov
movl
hlt
jmp
add
out
push
lods
stos
xchg
mov
cltd
loopne
xbegin
pop
or
sbb
jnp
iret
cmpsl
cmpsl
lret
jo
or
jno
cmp
pop
out
scas
xchg
dec
js
stos
inc
jmp
push
mov
pusha
sbb
push
hlt
imul
xor
stos
pop
std
dec
out
pusha
fisubrs
in
ss
push
imul
sbb
push
push
sub
and
fstpl
sbb
inc
cmp
icebp
fs
lods
dec
xor
dec
imul
mov
xchg
mov
int3
inc
mov
or
hlt
pop
stos
sbb
add
mov
xorb
sub
fsubrs
les
mov
movsb
cmp
mov
jecxz
loop
mov
hlt
dec
sub
xchg
cltd
das
and
and
mov
lahf
inc
sub
and
dec
ficomps
sub
das
aaa
jae
jns
int3
cmp
sbb
in
xor
repz
pop
cltd
mov
test
sub
pusha
push
fimull
dec
xchg
or
push
sub
mov
or
push
call
sub
int3
mov
mov
loope
ja
test
mov
out
xchg
xchg
sub
mov
xchg
pop
sbb
xchg
push
les
dec
pop
lret
or
sbb
call
mov
loopne
cmpsl
cmp
setnp
sub
and
cmp
fsubrl
mov
or
cmp
aad
pop
adc
orl
clc
sub
sub
into
mov
mov
sub
xchg
sub
mov
xor
test
xchg
aad
adc
das
inc
add
stc
add
mov
and
or
or
stos
xchg
ja
pop
lret
insl
xor
push
shlb
add
add
pop
mov
inc
mov
jg
sbb
sbb
fwait
dec
jle
pop
sbb
aaa
pop
xchg
das
cmp
out
or
lods
pop
mov
mov
add
fsub
in
mov
jo
orl
mov
cmpsb
pop
test
mov
movsl
jbe
loopne
adc
xchg
xchg
out
lods
push
mov
out
inc
arpl
pop
divl
into
push
repz
add
xchg
jno
inc
orl
or
and
stos
int3
int
das
mov
loopne
cmp
add
xor
xorb
in
push
sbb
pop
lcall
cmp
adc
jmp
aas
adc
adc
cmpl
gs
lret
sub
out
push
add
jmp
push
push
xorb
adc
lret
in
aam
pop
out
adc
repz
push
in
mov
push
mov
inc
sbb
jo
insl
rorb
sub
sub
mov
enter
add
push
repnz
sub
mov
adc
sub
jle
aas
rcll
push
or
ljmp
pop
rcl
pop
shlb
jo
ds
inc
cmpsb
jl
jp
into
cmpsl
or
in
pop
push
lds
data16
xchg
xchg
sub
add
or
shlb
dec
adc
xchg
int3
loopne
cwtl
cmp
ficompl
daa
das
ja
out
cmp
hlt
sbb
cmpsl
push
jns
adc
push
xorl
xor
ja
call
dec
push
inc
jnp
sbb
mov
mov
jb
push
adc
fcmovb
mov
dec
pop
cld
lret
sub
pop
lock
stos
mov
or
cld
lahf
movb
fldt
imul
or
xor
js
nop
dec
out
movsl
shrl
inc
inc
ja
xchg
cmc
xchg
pop
lret
int3
push
inc
jl
ds
adc
inc
jbe
dec
mov
and
inc
mov
mov
ror
cli
pop
push
dec
notb
repz
fs
ret
xor
and
xchg
loopne
dec
cmp
outsb
adc
add
pop
jecxz
sub
aam
movsb
xorb
std
pushf
gs
or
rcl
and
xchg
cli
addr16
jno
pop
out
and
dec
mov
and
cmp
inc
and
shl
sbb
pop
lea
adc
leave
in
mov
xlat
fldenv
ror
xchg
pop
js
lds
and
pop
jle
or
stc
mov
in
outsl
jge
lcall
imul
into
int
cli
lods
fisttpll
mov
push
shr
and
cmpsl
push
mov
sub
les
movsb
and
jp
sub
or
rcrb
xchg
xor
adc
ja
sub
mov
and
test
int
mov
clc
aam
sti
sub
mov
lea
call
sarl
cmp
sbb
sub
ljmp
jae
leave
cld
pop
sub
mov
mov
mov
lret
cmp
in
jmp
adc
aaa
xor
test
push
daa
inc
xlat
cmp
mov
mov
xchg
and
and
leave
fadds
add
stc
fs
or
ret
lods
xorb
or
xor
das
or
popa
mov
shl
sbb
push
xchg
fcoms
jge
dec
dec
adc
sub
add
pop
jmp
mov
add
fs
mov
mov
add
insb
push
sahf
test
movsb
lcall
adc
shll
jne
outsb
addr16
cmpsl
inc
mov
jno
push
mov
imul
fdivrl
inc
push
xchg
push
mov
ja
outsb
lcall
push
inc
inc
xor
jnp
insb
or
jns
lcall
cwtl
ss
mov
je
cmp
push
ret
cwtl
call
cmpl
xchg
pushl
pop
or
sub
sbb
add
hlt
adc
dec
daa
xlat
daa
ret
es
test
inc
add
in
push
jg
cli
cmp
mov
out
hlt
loop
adc
rcr
ja
pop
test
ljmp
sbb
jl
sbb
dec
aam
cwtl
shll
cmpsb
rcr
stos
dec
cmp
xor
mov
xor
lahf
push
xor
loopne
fidivrl
xor
and
adc
pop
sub
loope
inc
pop
mov
jle
push
mov
sbb
add
shrb
or
fldt
mov
cmc
insb
push
or
cli
arpl
pop
sub
cltd
and
xor
or
mov
repnz
mov
sub
in
mov
popf
xchg
jno,pt
stos
xor
flds
push
outsb
shlb
xor
add
shlb
push
in
ja
cmp
int3
test
inc
je
adc
pushf
mov
movsb
sti
cltd
lcall
addb
jge
adc
adc
or
push
lods
fwait
add
xchg
push
pop
stos
sub
inc
push
movsb
sub
loope
adc
daa
mov
push
mov
mov
sub
mov
xor
add
dec
insl
test
mov
pop
pop
aas
out
emms
mov
sub
arpl
and
outsl
loopne
mov
xchg
jae
xor
inc
add
sarl
scas
gs
cmp
sbb
rcll
push
pop
outsb
clc
imul
inc
subb
mov
push
inc
hlt
pop
adc
mov
sub
or
sub
dec
dec
ss
cmpsb
out
xlat
shrb
addr16
jecxz
lcall
inc
fnstcw
mov
jns
xor
std
push
mov
into
mov
out
insl
fmul
fwait
outsl
loope
andb
push
jmp
jmp
mov
popa
jne
movsb
inc
push
mov
insl
out
push
add
fdivrs
es
xchg
adc
xchg
shlb
lods
xchg
mov
scas
xchg
pop
jo
insb
orl
xchg
mov
stos
mov
or
inc
push
or
pop
in
bound
xor
mov
dec
sti
cli
repnz
lahf
fistl
es
es
iret
out
fistl
pop
pop
pop
xor
fucomi
bound
xor
bound
test
adc
sbb
andl
pop
pop
mov
data16
cld
ficoml
pop
cmpsb
mov
pop
xor
add
roll
pop
adc
into
dec
outsl
ret
into
cmc
mov
xor
cmp
sbb
mov
int3
sub
sti
std
es
jmp
or
inc
pop
lock
xlat
cmp
dec
pop
loop
in
aaa
pop
jne
and
inc
push
movb
leave
push
imul
mov
jl
fldl
int3
add
loop
data16
jne
sub
dec
cmp
fcoml
mov
fisttps
outsb
shrl
icebp
mov
ljmp
std
cmp
orl
sti
insb
leave
fbld
dec
mov
loope
adc
or
pop
aaa
inc
pop
inc
in
and
testb
push
mov
sub
sub
fidivs
mov
inc
sbb
add
cltd
int
and
dec
mov
or
inc
imul
loopne
lock
cmp
mov
push
push
es
pop
or
cmp
sbb
aad
cmp
sub
push
push
fisubl
repnz
leave
sub
dec
fldt
mov
scas
hlt
int
rolb
xor
roll
jo
add
mov
orb
scas
frstor
inc
or
push
cmp
sarb
xchg
rorb
ja
adc
aam
push
add
xchg
xor
movsl
cltd
or
or
enter
cmp
jbe
jl
xor
in
out
mov
cld
inc
movsl
inc
aaa
into
bnd
xchg
xor
into
sub
scas
pop
adc
dec
mov
jmp
mov
fs
xchg
icebp
gs
in
and
pop
iret
cmp
das
pop
or
xlat
adc
stos
cmc
sarb
cltd
push
jno
or
nop
mov
divb
out
es
jmp
popl
push
dec
jne
jnp
scas
cmp
outsb
sbb
fildl
pop
popa
cmc
imul
add
push
inc
je
lcall
and
fs
push
imul
imul
movsl
push
mov
aad
lahf
insb
jecxz
std
sbb
xlat
cs
add
loopne
xchg
push
sbb
aad
cli
and
notb
mov
and
inc
cmc
jg
cwtl
jno
push
stos
adc
jo
mov
fs
subb
mov
jecxz
stos
mov
push
sbb
imull
int
negb
and
hlt
movsl
mov
lods
inc
and
dec
sub
push
cmp
mov
mov
mov
adc
lods
test
nop
or
add
sbb
pop
scas
cmc
xor
sbb
push
xor
and
adc
out
fnstsw
dec
pop
test
mov
pushf
int
jns
push
into
mov
ret
imull
and
add
aaa
das
xchg
pop
nop
pop
sbb
cld
ror
into
scas
cmp
nop
push
mov
or
push
pop
enter
xchg
pop
adc
inc
stc
xchg
leave
jle
lcall
aam
xchg
ja
mov
clc
mov
das
cmp
insb
lahf
sbb
mov
jg
and
notb
mov
xor
pop
xor
mov
cmp
and
addr16
and
push
mov
ljmp
or
xor
in
inc
jnp
push
dec
push
ss
add
dec
cli
push
stos
dec
pop
xor
rorl
jle
or
push
cwtl
aaa
cmp
push
into
jmp
lock
xor
in
outsl
dec
or
jo
hlt
fidivrl
xchg
adc
std
cwtl
cmp
and
xor
and
stos
push
fisubl
aaa
push
jo
xor
decl
sbb
ret
mov
inc
int3
lods
sub
push
xorl
pop
in
push
icebp
and
jmp
add
xor
hlt
dec
inc
sar
add
sbb
pusha
sbb
hlt
xor
repz
ljmp
sahf
mov
xor
xchg
pop
dec
ljmp
xor
inc
xor
inc
lret
inc
movsb
pop
test
cmp
sub
push
xchg
cltd
jb
cltd
xchg
icebp
les
cmpsl
jmp
add
dec
in
jb
in
xchg
xchg
pushf
push
jno
test
cmp
test
cltd
pusha
push
adc
xchg
jecxz
jmp
mov
arpl
dec
je
dec
fsubrs
add
shll
push
jmp
jae
in
add
sub
outsl
cld
clc
jecxz
xchg
sub
movsb
jle
fs
ret
lret
mov
dec
je
lds
sbb
pop
lds
cli
enter
rcrb
jp
sti
fbstp
lret
cwtl
push
sub
test
icebp
push
scas
sbb
out
mov
int3
lock
jbe
cwtl
sub
adc
movsb
addl
cld
and
nop
xchg
push
push
inc
dec
xor
aam
jl
nop
fisubs
in
outsl
inc
jecxz
push
mov
inc
dec
or
dec
cmpsb
mov
rolb
ljmp
xchg
adc
popa
aad
adc
ds
out
ret
pop
adc
inc
arpl
xchg
mov
fnstenv
fwait
mov
mov
fldl
pop
dec
imul
imul
jne
incb
icebp
das
xlat
push
daa
adc
sub
rcrl
lock
sbb
fidivrs
or
sub
sub
sub
push
loopne
mov
lret
shll
push
test
stos
stc
or
inc
push
shrb
clc
outsl
jge
pop
sub
sub
push
mov
xor
push
je
outsb
jbe,pn
push
insl
es
mov
std
enter
cmp
dec
out
sub
std
cmp
stos
gs
jl
dec
push
and
jg
lret
dec
cmc
push
das
cmp
mov
fwait
or
shrb
negb
add
sbb
pop
aam
or
pop
sub
mov
adc
jp
and
in
and
insb
sbb
andb
mov
std
inc
stos
cmp
lcall
mov
bnd
xor
lods
mov
leave
sub
or
stc
add
xor
ret
inc
mov
or
dec
aas
stc
adc
xchg
je
sbb
je
sbb
lcall
xchg
jb
push
ret
sub
dec
in
call
push
jge
outsl
push
and
int
sub
mov
xchg
add
rsqrtps
divl
movsl
xor
js
dec
popf
dec
push
and
iret
push
dec
jb
rclb
sub
fwait
das
test
and
xor
mov
jg
inc
xor
les
pusha
ja
adc
add
popf
clc
fisubs
test
ljmp
sbb
jmp
mov
dec
push
jbe
je
adcl
sarb
jnp
scas
mov
shrb
mov
sti
pop
ljmp
xlat
insb
sbb
cld
sub
and
jecxz
push
test
dec
add
out
je
aas
push
outsl
repnz
jno
adc
cwtl
sbb
out
je
clc
adc
jae
lods
lret
sbb
test
inc
hlt
rorb
loope
sub
movl
out
pushf
push
subb
sub
rclb
jb
hlt
pop
pop
cwtl
cmp
xor
sahf
mov
add
pop
sbb
enter
add
adc
cli
xchg
inc
lret
jno
xorl
inc
testl
xlat
stos
fsubl
int3
shlb
mov
and
xor
sahf
or
mov
mov
and
xchg
add
lcall
or
sti
or
les
popa
shll
push
jbe
adc
inc
fcoms
pushl
cmc
xchg
add
out
out
jecxz
popl
xor
mov
imul
icebp
inc
and
sbb
test
out
ret
mov
icebp
loope
nop
cmp
inc
add
sbb
sbb
sub
loopne
inc
sub
adc
add
bound
lcall
addb
mov
int
add
pop
dec
dec
out
bound
inc
jmp
adc
dec
mov
mov
fs
sub
shrl
ljmp
cld
stos
or
cs
mov
adc
popa
movsb
inc
mov
daa
or
loope
mov
lret
pushf
hlt
mov
xor
mov
mov
pop
mov
mov
repz
push
outsb
int3
sbb
sub
xlat
jo
pop
incb
ficoms
popa
les
pop
icebp
xor
xchg
jbe
or
jecxz
sbb
pushf
xchg
inc
or
xchg
adc
pop
outsb
pop
jo
popf
cmp
jp
stos
jb
dec
ja
cltd
cmp
mov
jecxz
loope
int3
xor
popf
add
mov
or
add
fidivs
daa
lret
clc
aaa
jae
mov
ss
xor
fisttps
in
stc
loopne
sbb
push
cwtl
xchg
inc
in
into
cmpsb
test
mov
jge
xor
out
sub
cmp
fwait
mov
mov
lea
cmp
or
in
cld
fimull
arpl
xor
rclb
mov
jnp
mov
add
pop
mov
push
jmp
xchg
jmp
jb
mov
cmp
push
add
jnp
icebp
ret
cs
inc
cli
or
jmp
jge
mov
jecxz
scas
and
and
xchg
sub
dec
stc
jge
bound
cmp
addr16
inc
dec
js
daa
out
loope
xor
scas
jmp
cwtl
stc
sub
mov
pop
test
imul
out
add
cmp
fldz
cmp
mov
test
cli
data16
mov
jbe
adc
sub
fcompl
dec
or
or
sub
movsb
xchg
adc
clc
fisubl
jl
sub
adc
cld
cwtl
pop
fldcw
jg
cmp
dec
fwait
fwait
in
test
lds
les
xchg
xor
pop
cli
pushf
cmp
shlb
loope
out
add
pusha
shll
adc
mov
add
mov
bnd
jae
es
int
jno
divl
repz
mov
push
cld
xlat
inc
sbb
ffree
add
int
adc
pop
add
cltd
fimull
mov
mov
push
cmpl
not
xor
iret
cltd
popa
ficoms
pop
in
sub
inc
mov
or
cmp
pusha
je
push
arpl
idivl
adc
mov
loopne
call
jo
xor
push
mov
sbb
dec
and
mov
sbb
icebp
adc
jmp
and
mov
mov
imul
in
rolb
cli
lret
xchg
add
mov
dec
push
inc
push
stc
stos
fisubl
xor
ljmp
xor
mov
xchg
inc
lea
cmp
std
daa
into
nop
mov
iret
ljmp
out
in
mov
mov
movsl
out
adc
ds
adc
test
les
xor
outsb
xlat
push
dec
imul
pushf
xchg
leave
push
scas
push
dec
sbb
cmp
icebp
repz
std
scas
insl
movsl
aas
mov
xor
sub
cmpsl
aaa
lds
jbe
mov
adc
movsb
sub
out
and
inc
cmp
cmp
mov
cmp
cmp
dec
inc
mov
es
fnsave
inc
mov
xchg
aam
mov
push
mov
xor
mov
insl
outsb
sbb
popf
or
mov
inc
stos
mov
mov
fs
adc
clc
leave
xchg
push
mov
mov
or
jle
cli
test
or
iret
inc
iret
cmp
cwtl
cwtl
jmp
dec
push
sbb
xchg
les
lret
fwait
dec
daa
lahf
mov
inc
mov
xchg
push
mov
int3
scas
in
adc
leave
mov
scas
sbb
mov
adc
cltd
repnz
lods
pusha
adc
sahf
jle
into
mov
dec
cs
addr16
fildll
into
mov
or
cltd
push
mov
sub
cwtl
sub
mov
in
fdivs
inc
cmpsl
push
gs
and
pop
pop
addr16
cwtl
imul
into
and
std
mov
fneni(8087
bound
mov
jl
xlat
iret
int
push
test
aam
mov
cmpsb
pusha
sarb
test
cmp
test
sar
jecxz
in
jle
stos
aad
aad
jbe
fldcw
shll
insl
xchg
sbb
jle
mov
push
in
add
int
cmpsb
cmp
popf
repz
pop
or
call
outsb
hlt
sub
mov
shr
loop
jns
mov
pop
fisttpl
mov
sbb
cmc
out
mov
in
push
push
rclb
sahf
mov
jg
aas
push
in
jl
in
stos
dec
cwtl
xor
mov
dec
dec
into
lock
jno
inc
popa
pop
js
sti
sbb
dec
dec
mov
dec
daa
xchg
in
mov
xor
in
insl
shlb
mov
cmpsl
movsb
pop
push
ficoms
jne
popf
cltd
xor
mov
cmp
pop
xchg
mov
mov
mov
test
lret
sbb
or
xchg
cmpsb
sbb
push
sti
subb
or
divl
dec
xchg
and
rcrb
pop
inc
mov
push
xchg
inc
xor
pop
add
mov
jecxz
jnp
fildll
sbb
pop
fs
stos
outsl
inc
mov
shrb
sahf
leave
es
mov
imul
mov
inc
add
sti
add
inc
movsb
mov
pop
mov
push
xchg
out
mov
pop
inc
into
mov
fildl
pop
jns
insb
out
cwtl
mov
jno
fld
loopne
sub
xchg
adc
adc
dec
and
data16
push
mov
das
adc
mov
inc
loop
xchg
test
insl
icebp
mov
cmpsl
stos
aaa
xchg
sbb
xorl
stc
jmp
lcall
jg
or
lcall
lods
sahf
ficompl
call
hlt
lahf
xor
pop
add
push
cmp
int
pop
lahf
movsb
push
xor
sub
ret
movsl
hlt
shll
mov
mov
dec
mov
jno
inc
ljmp
cld
jb
add
mov
push
inc
and
roll
dec
shlb
pop
cmp
xchg
ss
pop
jns
mov
add
popa
mov
push
mov
and
mov
bound
loop
cmpsb
ret
cld
adc
not
and
push
cmpsl
xlat
ficoml
loope
lock
lods
adcb
jne
pop
push
dec
adc
or
cmp
xchg
mov
es
xchg
ss
out
mov
lods
push
sti
in
xorl
fidivs
and
mov
dec
xor
sub
das
add
cmpsb
sub
jns
jns
clc
lods
movsl
shlb
jno
cmp
push
dec
and
cmp
mov
sub
movl
int
sbb
pop
cmp
adc
and
mov
aad
dec
bnd
aad
sti
mov
and
mov
push
adc
inc
test
push
std
daa
sub
mov
jnp
mov
fidivrl
or
jb
stos
mov
repnz
and
scas
mov
mov
cmp
xchg
mov
fimuls
cmc
jecxz
sti
mov
leave
mov
jns
xchg
sub
push
jo
mov
dec
xor
ja
int3
cmc
mov
jnp
sti
pop
push
idivb
pop
jo
sbb
mov
fwait
ds
mov
out
stc
pop
cmp
std
xchg
jae
inc
xchg
and
push
aas
movsb
sbb
icebp
add
add
orl
movsb
jb
xchg
sti
dec
imul
std
popa
lods
out
cmp
addl
jmp
in
mov
mov
mov
push
jge
pop
jl
inc
shll
lock
flds
insl
negb
pop
inc
push
sbb
add
shlb
mov
cli
sbb
dec
cmp
repnz
pop
jae
sbbb
cmp
lock
out
mov
das
imul
xchg
shl
aas
mov
xlat
mov
mov
or
ret
lret
fdiv
xchg
sub
cli
inc
out
or
mov
pop
loopne
cmpsl
shlb
lcall
jmp
push
xor
sbb
dec
xor
scas
test
adc
leave
movsb
movsb
mov
daa
movsb
leave
lods
andl
imul
subl
nop
in
loopne
lea
popf
mov
das
push
add
lods
xor
dec
fidivrl
cmp
xchg
mov
or
dec
cmp
xor
add
mov
xor
int3
cmp
sub
addb
cmp
es
and
test
xchg
gs
add
mov
popf
je
orb
adc
jno
out
repz
xchg
mov
insb
addr16
and
add
bound
lds
cmp
or
fdiv
and
xor
cmp
cmc
dec
push
adc
pop
icebp
cmp
movsl
scas
dec
fldl
push
cmpsb
movsl
xchg
xchg
jbe
fndisi(8087
add
lcall
adc
push
mov
dec
into
cmp
sbb
mov
or
jmp
push
push
scas
stos
adc
or
lea
jle
mov
inc
jae
pop
mov
out
insb
sub
cmpsl
pop
cmp
cmp
stos
sbb
cmpsl
sbb
hlt
ret
add
sub
in
fisttpl
lret
nop
and
push
cmp
in
xorl
cmp
enter
mov
dec
inc
mov
fs
insl
dec
dec
stos
mov
mov
push
fsubrs
push
lods
mov
fstpl
adc
pop
lods
sub
mov
and
vmovq
push
les
xchg
xor
and
out
fistpll
notl
mov
in
mov
push
stos
sarl
sbb
test
push
adc
scas
pop
cmp
inc
shrb
fs
sbb
mov
scas
fsubl
add
sahf
mov
loop
xchg
add
jle
pop
stos
adc
xchg
outsb
jecxz
pusha
das
stos
jo
jb
cmpsb
xor
outsl
pop
lods
outsb
scas
xchg
xlat
inc
adc
pushf
les
jle
and
xchg
jbe
fcompl
dec
jbe
jae
mov
jae
cmp
mov
mov
mov
push
addr16
push
mov
loope
sbb
out
mov
sub
mov
sbbl
pop
stc
cmp
push
sbb
sbb
enter
int
test
lock
out
data16
jge
out
push
push
mov
add
sbb
ficoml
push
pop
mov
sbb
jne
ss
mov
movsl
jp
aas
sti
ljmp
ds
outsb
sbbl
imul
out
or
lcall
xlat
mov
and
loop
pop
outsb
push
rorl
ficompl
add
cmc
adc
inc
ja
jmp
mov
les
mov
je
cmp
mov
and
in
iret
inc
push
lret
lret
fnstsw
pop
push
mov
fmul
das
xor
push
test
scas
int
and
call
out
push
xchg
out
dec
dec
adc
loopne
add
push
mov
dec
insl
or
mov
ja
lea
faddl
cmp
cli
add
pop
outsb
cmp
cmc
cmpsb
cli
pop
rolb
dec
sbb
pop
loopne
ffree
pop
repnz
mov
adc
dec
out
lahf
mov
or
inc
stc
mov
and
pop
andl
rcl
dec
mov
cmp
aam
add
mov
and
call
xchg
scas
scas
jp
mov
rcr
enter
clc
dec
ja
add
push
jle
inc
lahf
shll
push
call
sbb
roll
shl
mov
add
cld
in
xor
pop
sbb
push
in
scas
push
mov
xchg
addl
lods
enter
or
push
add
sahf
jb
sbb
int3
push
dec
dec
aas
mov
fs
clc
aam
aas
adc
pop
imul
pushw
outsl
icebp
inc
dec
int
push
fsubrl
xor
sub
out
pop
and
cmpsb
ljmp
cmp
push
mov
xchg
out
mov
inc
lea
movsl
mov
mov
fdivs
add
pop
test
mov
push
push
mov
cmp
push
push
out
test
lods
jg
or
mov
mov
roll
dec
cmp
fadds
push
mov
data16
lahf
mov
fidivrl
shr
cltd
sub
pop
mov
or
call
jae
push
xor
mov
jno
out
inc
popa
jbe
mov
inc
mov
or
mov
pop
jge
mov
mov
outsb
outsl
mov
dec
in
pusha
jge
cmpsb
in
add
jne
mov
push
mov
adc
adc
data16
pop
jnp
push
push
xchg
fistl
shlb
clc
and
jl
jge
adc
sub
mov
jns
pop
cwtl
jg
or
push
scas
aad
fdivs
popf
or
ja
lock
push
out
stc
dec
or
int3
or
jae
push
lret
fwait
pop
sub
xor
mov
mov
es
je
push
inc
mov
cmp
jge
dec
adc
mov
add
scas
pusha
std
fimuls
xchg
test
jg
mov
repnz
popf
test
fs
xor
push
mov
repnz
dec
cmp
lret
adc
push
inc
inc
xor
loope
pop
movsl
fisubrl
push
bound
add
add
in
push
pop
adc
sar
pusha
fisttps
push
adc
shll
mov
adcb
idivb
xchg
icebp
mov
jg
mov
ljmp
insb
mov
fistl
push
lds
nop
dec
in
jmp
push
stos
incl
imul
or
jg
add
jmp
adc
adc
cmp
int
shrl
loop
cmp
loopne
dec
addr16
lea
add
mov
cwtl
xor
jo
in
test
add
insl
jbe
fists
mov
xor
nop
in
popa
dec
clc
xlat
push
xchg
mov
lea
lea
inc
sub
roll
adc
or
daa
add
ds
xor
sub
in
dec
fimull
adc
sbb
ds
push
ret
orl
adc
inc
jge
jmp
push
in
imul
push
pop
loope
and
sbb
or
sbb
push
jecxz
out
sub
hlt
ds
cmp
or
push
and
mov
cmp
dec
ljmp
fidivrl
shll
inc
or
lods
out
out
jmp
and
out
scas
in
inc
sub
cmp
push
adc
push
sahf
insb
dec
pusha
test
stc
inc
push
bound
pop
jl
out
sarb
xorl
shl
outsl
mov
or
mov
stc
and
addr16
push
mov
add
xor
cli
add
xor
fs
add
repnz
fisubrl
mov
inc
movsb
push
mov
lcall
imul
aam
xor
lret
pop
ds
fcomps
test
je
out
xor
repz
popf
test
xor
adcw
aas
add
inc
xor
mov
fwait
adc
rclw
test
cmp
stc
scas
sbb
fimuls
cmp
aas
enter
ret
aad
cwtl
fdivl
pop
aas
pop
add
outsl
ror
bound
mov
mov
lret
mov
inc
pop
adc
dec
popf
in
sbb
add
outsb
add
lahf
ljmp
or
push
out
gs
les
fdiv
mov
jl
sub
jb
inc
fstpl
push
adc
and
imul
push
vpandn
pop
push
idiv
data16
and
aaa
and
adc
push
mov
sub
sbb
dec
jmp
addr16
or
xchg
in
cmc
test
fstpl
add
push
sub
lds
dec
cltd
inc
dec
movsl
scas
adc
mov
mov
aaa
mov
add
aas
adc
aaa
fstl
xchg
insb
fdiv
jns
loope
mov
sub
jg
inc
dec
icebp
test
lds
outsl
out
push
xlat
jnp
fimull
or
test
push
and
andl
cli
ss
sub
idiv
inc
add
xchg
cltd
mov
out
and
mov
add
popa
mov
shlb
imul
jnp
cld
sub
enter
rcrb
or
sbb
sbb
xchg
dec
sub
fdivrl
test
pushf
in
lock
adc
aas
orl
loop
outsb
test
mov
test
ficoml
in
pop
xchg
rclb
js
mov
les
loop
sbb
repnz
push
mov
pop
test
rorl
or
jb
sub
sub
imul
testl
outsb
test
pop
pop
fs
dec
test
lds
mov
imul
cld
lahf
jp
mov
insl
jle
ds
adc
adc
stos
arpl
jmp
outsb
notl
jecxz
push
lea
test
out
repz
cwtl
out
call
in
add
cld
add
pop
xor
cld
add
stos
das
mov
ljmp
mov
rolb
sbb
insb
leave
push
insl
sbb
or
sub
cmpsl
test
rolb
std
lcall
or
cli
add
in
mov
mull
arpl
clc
popf
pop
jecxz
jmp
lret
scas
nop
jb
sbb
shlb
daa
sbb
lock
push
repz
dec
cld
out
push
lods
push
ret
dec
xchg
fucomi
fstl
fs
pop
mov
lock
in
mov
pop
bound
enter
sub
mov
lds
lret
rcl
xchg
adc
xchg
xchg
xor
cwtl
lar
sub
jbe
pusha
dec
inc
jno
mov
inc
dec
push
jle
mov
xchg
mov
lret
pop
mov
cs
es
iret
add
sbb
inc
jb
lods
in
shll
fs
pop
fwait
rcrl
inc
mov
lea
sub
jp
push
repz
shll
test
push
lahf
dec
dec
loope
mov
test
push
fists
out
repnz
push
push
fdivr
and
cmp
jnp
or
mov
loope
cmpsl
push
adcb
pop
add
stos
dec
ret
mov
inc
sti
inc
xor
sbb
rcrb
push
das
mov
lahf
push
dec
push
pop
loopne
add
cmc
mov
push
cmp
hlt
roll
pop
push
xchg
shrb
leave
adc
cltd
xchg
scas
dec
pushf
shrb
and
leave
pop
movsb
cmp
in
clc
cmp
addr16
xlat
cmpsb
push
or
inc
mov
popa
pop
data16
sub
xor
ja
mov
pop
fsubrs
pushf
push
sti
sub
lret
loop
xchg
in
ss
push
popf
or
adc
ret
dec
mov
push
mov
jp
adc
mov
mov
repnz
cli
push
test
insb
rcr
mov
xchg
xor
xor
dec
pop
loop
int
push
aad
lds
int
cmpsb
xor
rorl
sti
out
xlat
shll
aad
insl
push
shl
or
cwtl
push
sbb
stos
imul
movsb
pop
mov
out
test
stos
fsubp
out
shrb
push
and
lret
pop
push
int
add
xchg
aas
inc
negl
mov
in
push
mov
mov
int
mov
push
mov
jns
rolb
sub
inc
shl
pop
push
leave
inc
scas
sbb
xorl
cmp
and
sbb
xchg
addr16
mov
dec
in
insl
mov
or
cmp
sbb
push
adc
loopne
and
jl
sbb
call
mov
call
add
and
mov
rorb
jg
or
xorl
mov
and
jae
xchg
mov
fstl
xsave
sub
test
xor
ret
ss
adc
fisubrl
cmp
shlb
outsl
pop
add
xchg
inc
icebp
cmc
jg
pop
xchg
dec
stc
sub
adc
xor
sub
mov
decl
aas
and
cmp
cmp
and
push
imul
push
sbb
xor
push
jbe
mov
adc
insb
lahf
mov
fsubrl
cmp
pop
out
imul
cmp
mov
mov
movsb
dec
das
cmpsb
or
sub
loope
roll
and
bound
repnz
je
and
xor
push
and
sub
into
sbb
clc
fidivs
jecxz
popf
das
sbb
rclb
inc
adc
fnsave
sarl
rorb
mov
inc
pop
fcoms
sbb
mov
dec
leave
push
mov
in
imul
int
push
insl
jmp
aam
mov
shlb
push
mov
lret
lods
jmp
hlt
cmp
cld
inc
movsb
add
sub
pop
fwait
rorl
jb
lcall
sub
push
loope
dec
subl
pop
test
push
outsl
aaa
mov
xor
or
daa
cwtl
xchg
shll
popf
pop
icebp
dec
adc
xchg
clc
push
jge
enter
insb
push
pop
icebp
in
insb
sub
movb
cmp
mov
test
popa
out
mov
loop
xchg
adc
cmp
mov
std
mov
pop
fnsave
inc
pop
xchg
xor
push
scas
lcall
mov
push
imul
insb
or
cmpsb
mov
push
sub
pop
rcr
nop
pop
lods
mov
cmp
mov
inc
inc
fidivrs
rcrl
ret
jb
enter
adcb
push
add
or
mov
repnz
adc
push
jb
testb
push
adc
jne
mov
cwtl
cmpsl
add
mov
mov
addr16
jne
mov
adc
xchg
adc
add
jae
pop
cmp
xor
pushf
jmp
cmpsb
jb
aas
mov
pop
ficomps
adc
mov
andl
push
and
fwait
bound
rorl
shrl
out
loope
add
xchg
out
outsb
jmp
cmp
sbb
pop
and
push
mov
cmpb
filds
lahf
movsl
xchg
inc
btr
js
loopne
scas
js
int3
cli
data16
dec
lahf
mov
fcomps
inc
or
lahf
push
imul
inc
or
loope
xlat
fwait
rcl
int
dec
mov
push
pop
add
inc
je
cmpsl
addr16
dec
xchg
popf
daa
div
cwtl
mov
cs
sub
ds
data16
jno
outsl
push
xorb
nop
outsl
mov
negl
sub
and
mov
rclb
jb
gs
cmpsb
xchg
sysret
or
aad
dec
cmp
adc
cwtl
or
pop
mov
in
push
cmp
ja
aam
sub
cwtl
push
mov
shrl
mov
outsb
jg
cli
push
call
jne
cmp
sub
pop
out
mov
aas
inc
mov
xor
in
jle
fwait
mov
icebp
or
and
std
cmc
aam
and
inc
aas
cmp
add
stc
enter
aaa
sbb
test
movb
es
insb
outsb
inc
jge
sub
sbb
cld
imul
push
inc
xorl
xchg
mov
into
add
and
push
xchg
outsb
mov
adc
neg
push
mov
fcmovnb
rcll
or
xlat
pop
pop
fs
cs
push
xor
push
jge
push
lea
adcb
stos
mov
cmp
data16
mov
and
movsl
mov
pop
out
or
popf
rcll
sbb
mov
mov
cmc
mov
movb
xchg
push
sbb
nop
sahf
sahf
mov
gs
mov
mov
bound
das
sti
loop
das
mov
mov
sbb
imul
ja
popa
in
divb
popa
xor
mov
nop
jle
cmpsl
nop
idivb
push
int3
and
fiaddl
add
xchg
pop
repz
fwait
jmp
cmp
cmc
mov
insl
push
stc
sub
ja
cwtl
jno
rcll
jno
jp
adc
fnstenv
mov
cmp
xchg
sbb
rol
push
fdivl
int3
inc
daa
iret
cmp
and
push
fs
gs
ljmp
sbb
and
popl
in
sub
orb
adc
jmp
jecxz
cmc
mov
pop
mov
mov
mov
pushf
lret
sbb
shlb
aaa
fwait
mov
dec
ljmp
xor
inc
lcall
adc
inc
mov
imul
pusha
test
xchg
gs
jge
sub
outsl
and
ffree
pop
call
push
les
sar
test
leave
cwtl
pop
addl
pop
cmp
lahf
cmp
call
cltd
outsl
arpl
sub
xor
ja
imul
rorb
enter
mov
and
inc
sub
rcrl
aad
mov
test
xchg
sub
mov
xchg
xchg
in
cmp
mov
xorl
aam
cmc
jg
sbb
cmp
es
inc
in
lcall
aas
out
mov
hlt
test
xchg
lds
xchg
stos
xlat
push
fadds
xchg
mov
jmp
xor
jbe
mov
ret
cmpsb
mov
jp
mov
insl
andl
pop
pop
or
cmp
push
jnp
pusha
push
stos
push
je
aas
push
push
gs
cli
mov
mov
mov
xor
daa
mov
jl
pop
mov
fwait
repnz
and
and
jle
les
xchg
insl
lock
outsb
das
lahf
lds
mov
lret
mov
sbb
xchg
jl
adc
cmpsl
ds
inc
jg
mov
jno
add
cmpsb
ds
cli
jle
jg
adc
mov
adc
jl
loope
pop
sbb
out
dec
add
ds
lret
pushf
daa
xor
enter
xchg
xchg
sbb
aad
fwait
icebp
fcmovne
insb
shr
and
lds
cmpsb
cmp
int3
js
sbb
adc
xor
dec
arpl
les
or
mov
lock
fs
sarb
dec
popf
and
adc
mov
adc
popa
push
xor
aam
movsl
out
adc
cmp
mov
subb
jnp
jmp
sti
push
lret
or
call
mov
les
pop
loop
and
sti
std
decl
sub
xchg
or
cmp
mov
lret
movsb
jge
aas
jmp
mov
jae
in
and
lret
push
jl
loop
jnp
enter
xlat
push
adc
mov
jns
jae
test
jecxz
mov
lods
xchg
dec
pop
insl
sub
out
cmp
pushf
lahf
push
repz
arpl
adc
mov
sahf
xchg
mov
fsts
dec
mov
pushf
mov
push
push
jg
and
xchg
lcall
lret
cmp
xchg
enter
mov
inc
loop
movsb
arpl
cmp
sbbl
adc
mov
aas
mov
in
xchg
loope
jge
push
test
add
inc
sub
clc
jo
inc
xlat
mov
int
mov
mov
cmp
cmp
mov
out
mov
mov
cli
adc
pop
movsl
and
dec
daa
test
je
mov
xchg
mov
scas
cltd
mov
fstps
sub
fisubl
scas
sarl
adc
aaa
ret
mov
into
mov
fsubs
aas
cwtl
inc
adc
mov
xor
fs
mov
xchg
and
insb
jns
inc
jo
inc
test
sbb
ret
cmc
lods
lods
sub
mov
mov
add
sbb
js
jg
xchg
int3
adc
adc
xor
repnz
dec
xchg
sbb
add
sub
xor
xchg
or
jp
sub
add
xchg
add
outsb
cs
dec
mov
mov
jne
mov
inc
push
cmc
pop
jo
loopne
psrlw
not
ret
push
negl
ret
lods
jle
jmp
mov
aaa
push
sub
bound
fiadds
add
fildll
leave
ljmp
and
mov
add
daa
lock
adcb
pop
out
inc
jle
adc
lcall
and
icebp
pop
cmc
pop
js
pop
dec
ret
xor
cmp
stc
push
add
xor
mov
aaa
xabort
jge
ret
loopne
daa
fidivrs
xor
push
jo
sti
mov
shrb
sbb
movsb
jne
fstl
jae
lock
testl
push
push
push
fsubrl
jmp
imul
sbb
push
push
inc
out
std
in
xchg
clc
sbb
push
test
cmp
pop
push
sub
and
sub
pop
sbb
lock
daa
push
xchg
mov
ljmp
or
adc
mov
adc
xchg
mov
jb
or
stos
fnstsw
fmull
cmp
xor
jl
dec
ljmp
and
loope
and
mov
fisttpl
clc
fldt
notl
rorb
sub
push
xchg
les
jmp
xor
cmpsl
jae
out
push
roll
jo
add
xchg
mov
cmp
jae
dec
push
inc
icebp
mov
sub
nop
js
iret
hlt
cli
mov
icebp
cmp
sahf
stos
subb
stc
xchg
outsl
icebp
or
xchg
mov
cld
jne
sub
lea
mov
push
sub
in
leave
enter
inc
imul
test
outsl
mov
subb
cmpsl
cwtl
adc
cmp
ja
loop
dec
mov
inc
lcall
fildll
and
pop
and
aad
fisubl
inc
push
adc
mov
add
roll
push
loope
imul
dec
cli
and
and
in
and
xor
in
add
fstp
lds
sub
arpl
in
int
daa
lds
pop
es
or
jae
test
fimuls
sbb
mov
test
lds
mov
push
insl
xor
in
push
stos
sub
in
push
call
movsb
lds
sarl
add
xor
push
sahf
push
insb
inc
cli
das
sbb
mov
lock
pop
adc
fcomps
sbb
sbb
outsl
dec
push
fcoms
lgs
mov
lcall
dec
insl
loopne
mov
gs
cmovne
and
loop
sarl
inc
add
pop
fsts
push
bound
push
and
outsl
test
nop
jecxz
mov
test
xrelease
sub
pop
xchg
lock
lods
sbb
lret
pop
xor
mov
arpl
jns
adc
mov
mov
mov
cs
jl
ljmp
sbb
pop
cli
xlat
xor
test
dec
daa
xor
add
andb
cs
fs
into
test
ret
sbb
adc
cmp
xor
dec
repnz
or
dec
fadds
scas
sbb
push
dec
aaa
insl
sub
in
jge
add
add
stos
jmp
mov
fs
lock
push
das
mov
lods
pop
xchg
jae
push
aam
xor
lock
inc
pop
decb
scas
jp
push
mov
or
lods
test
notb
in
insb
sub
mov
gs
xchg
test
aad
xor
pop
cmpsl
xor
out
mov
imul
neg
repnz
testb
cwtl
imul
out
cmp
and
dec
and
in
scas
dec
jno
mov
dec
mov
repz
dec
rep
mov
adcl
outsl
cmp
xor
sahf
cli
fsubrl
icebp
or
jno
loope
mov
mov
test
adc
or
cmp
jg
dec
movsb
outsb
icebp
int3
xchg
loopne
arpl
mov
imul
stos
push
fcoms
adc
sub
xor
mov
jns
aad
mov
dec
push
test
or
sti
lahf
cwtl
xor
or
insl
in
scas
mov
enter
push
mov
gs
test
push
mov
and
push
arpl
in
or
mov
je
mov
xor
je
or
push
pop
jle
push
cmp
iret
adc
xor
out
push
ja
mov
inc
jp
insl
fdiv
lds
stos
xchg
pusha
rolb
xchg
fcompl
cld
cmp
inc
push
sahf
cmp
dec
mov
test
ret
xchg
test
xor
jns
jg
push
sar
sti
jmp
mov
mov
or
fdivrl
inc
bnd
loope
xor
sbb
ss
gs
imul
or
xor
xchg
cmp
inc
dec
sub
iret
ljmp
mov
inc
xor
and
icebp
mov
pop
fs
xchg
xchg
icebp
mov
lods
jo
mov
ljmp
mov
mov
sub
sub
add
cmp
jno
mov
sahf
sti
sbb
int
ret
in
ss
or
mov
cmp
mov
test
mov
sub
cmp
repz
mov
popa
int
std
loopne
fwait
sysexit
pop
fstpl
call
jbe
cld
push
or
mov
int3
fnsave
out
push
jnp
jmp
xor
fisttps
pop
lahf
lods
lret
push
call
jge
fisubs
test
xlat
mov
add
in
or
jae
push
pop
or
mov
cmp
dec
cmp
adc
push
faddl
call
pop
cmp
pop
sahf
test
mov
repnz
rorl
das
mov
or
inc
out
sub
xchg
sbb
xchg
push
popf
push
sub
xor
mov
xor
push
leave
xchg
xor
mov
arpl
add
push
pop
xchg
lock
jae
das
adc
pushf
xchg
mov
data16
pop
js
shl
mov
scas
mov
push
jmp
fistps
enter
and
cmp
pushf
push
or
mov
movsl
mov
push
jle
push
hlt
push
or
inc
pop
sub
jecxz
js
dec
push
dec
or
test
push
clc
fdivr
pop
outsb
pop
jmp
dec
clc
or
test
xchg
sbb
jns
pop
jne
sbbl
scas
and
jmp
imul
stos
test
push
mov
push
sbb
sub
mov
icebp
mov
stc
inc
into
in
call
aas
or
mov
lods
call
fwait
and
mov
xor
mov
outsb
or
test
pop
rcl
pop
popa
mov
dec
ss
sbb
push
pop
imul
out
push
and
xor
and
mov
cmp
sbbb
sbb
stc
scas
cmp
mov
adc
sbb
jge
adc
push
dec
cltd
sub
aam
dec
fldcw
lods
or
sub
jo
pop
data16
into
xor
jbe
inc
mov
push
mov
fwait
add
jge
movsb
enter
dec
jle
mov
lret
fstpl
fsts
test
pop
sbb
or
hlt
nop
mov
pusha
adc
or
push
icebp
aas
and
jle
cmp
inc
clc
fsubs
xchg
loope
sbb
sbb
test
mov
jle
les
mov
aam
xor
mov
mov
fists
loopne
ljmp
repz
test
xor
mov
lcall
inc
loopne
sbb
push
dec
repz
scas
mov
testb
mov
ja
xor
or
lock
mov
push
add
popf
data16
cmp
push
in
test
int3
stc
inc
and
fsubrs
js
loop
fdivrl
int
pop
lods
xor
fmul
stc
test
in
sbb
pop
scas
mov
lea
or
rol
fisubl
dec
mov
adc
test
addl
dec
ss
push
je
dec
sbb
test
repz
fstpt
int
dec
call
rorl
jae
andb
add
mov
fstpt
loop
test
mov
push
call
fs
sub
cmovo
sbb
test
xchg
jns
xor
arpl
aad
sub
jge
sub
cmp
lahf
sbb
decb
cmpsb
inc
lret
enter
jl
adc
and
xchg
or
mov
test
lods
adc
mov
or
jae
jns
testl
cmpb
cmpsb
out
adc
xor
iret
adc
push
test
mov
ja
jae
mov
out
fldt
adc
jp
or
mov
sub
ja,pt
adc
lret
jno
mov
cld
lret
dec
xor
test
inc
data16
std
cmc
movsb
mov
jge
fdivrp
push
add
ret
ret
loopne
jge
shlb
pop
xchg
lcall
mov
xor
repnz
pop
jecxz
mov
rolb
mov
sub
mov
adc
jp
adcl
cmp
test
cld
icebp
aam
pusha
lret
mov
fbstp
lret
xchg
and
aam
stc
xor
in
aas
mov
xchg
sub
xchg
sbb
test
cmp
andb
shrb
sahf
gs
jmp
xor
jne
in
and
repnz
mov
es
cld
or
fwait
pop
ret
xlat
jnp
push
sbb
xchg
jno
aam
inc
mov
lret
push
icebp
push
push
hlt
mov
ja
lcall
push
aam
push
frndint
add
pop
xchg
mov
je
inc
lea
xchg
ljmp
sub
out
add
mov
mov
inc
rorl
stos
sbb
push
rcll
imul
xor
out
pop
ror
jp
push
push
jne
mov
pop
cmp
incl
sbb
frstor
sarb
pop
mov
adc
rcl
xchg
jnp
insl
mov
pusha
mov
fisubl
and
sahf
call
pmulhw
mov
aas
adc
push
iret
movsl
jp
sbb
cltd
fnstcw
cmpsl
jmp
arpl
xor
outsb
xor
lahf
imulb
mov
pcmpgtd
imull
add
shl
inc
insb
push
mov
arpl
into
shll
push
jg
xor
ljmp
pop
push
cmp
mov
pop
dec
cld
sbb
in
mov
dec
lahf
popf
es
ljmp
inc
stc
sbb
xor
lcall
mov
cmp
aam
stc
je
ja
mov
xchg
mov
idivb
mov
scas
jns
adc
out
je
pop
movsb
shrl
pushf
add
in
sub
and
inc
jnp
cwtl
outsb
push
push
stos
scas
or
pop
jnp
mov
sub
xor
pop
mov
adc
pushf
push
cmp
sub
addr16
and
mov
jecxz
jns
mov
and
add
aas
aaa
xor
dec
int3
xchg
fisubrs
cmp
lods
cmpsl
out
orl
sbb
dec
fildll
aaa
jecxz
adc
test
les
ret
inc
lods
les
and
and
dec
pop
fmul
adcl
push
das
iret
pusha
jge
sub
lcall
mov
or
out
pop
jmp
cwtl
pop
popa
dec
rcrb
cmpsb
sub
mov
mov
inc
gs
nop
adc
pop
inc
or
cmc
or
bound
jmp
fcomps
mull
faddl
int3
inc
mov
into
lahf
mov
add
incl
test
cmpb
test
sarl
int3
push
push
mov
jmp
sarb
ss
sbb
adc
adc
inc
or
repz
or
addr16
fcomip
ds
cmpl
lret
or
lret
fwait
push
cmpsl
leave
xchg
int3
and
and
jno
and
int3
push
les
mov
add
jbe
icebp
add
inc
aad
mov
mov
inc
jp
mov
add
mov
push
cltd
mov
add
mov
push
mov
iret
mov
fnstcw
cmpl
inc
inc
aaa
mov
pop
push
pop
imul
inc
jno
sbb
jl
mov
pop
dec
outsb
or
sahf
andl
xchg
std
mov
ljmp
enter
imul
scas
cld
push
fisttpl
sti
jnp
mov
test
jbe
jl
sub
mov
and
mov
outsb
lcall
shl
adc
or
pop
bound
sbb
inc
dec
xchg
rclb
les
xchg
xor
outsb
in
mov
icebp
out
xor
xor
lods
mov
jbe
xor
decl
xchg
inc
call
and
xor
push
mov
fsub
push
fdivl
int
mov
xor
adc
into
in
cli
push
push
sbb
roll
nop
mov
jnp
scas
xchg
sbb
adc
shlb
ja
and
fcmovnb
or
test
dec
in
out
pop
stc
xlat
dec
inc
sarl
mov
fwait
inc
lods
and
xchg
in
icebp
cmp
fmul
push
aaa
enter
sub
sbb
push
jae
push
adc
cmp
mov
lods
cmp
test
dec
rcrl
sub
rorl
movsb
pusha
pop
lods
xor
sbb
or
dec
test
dec
fcomps
cwtl
dec
aad
and
xor
fs
cmp
mov
pop
mov
and
dec
sbb
mov
std
movsb
ja
push
pop
imul
lcall
jg
data16
in
push
sbb
fcoml
leave
outsl
mov
mov
dec
lock
push
sbb
test
movsl
imul
and
mov
adc
rcl
cmpsb
popf
loop
in
cltd
inc
imul
push
nop
shlb
bound
xchg
mov
inc
je
mov
loopne
xor
ljmp
push
xchg
push
test
dec
and
int3
cwtl
mov
and
mov
xchg
inc
les
add
andl
jne
pop
cmpsb
dec
in
xor
cmp
mov
cmp
mov
test
adc
movsb
mov
mulb
lcall
jg
jns
sbb
xor
pop
dec
pop
popf
dec
sbb
repz
leave
mov
mov
cmpsl
or
adc
testl
popa
pushf
jbe
push
ss
push
test
cmp
cld
push
mov
inc
dec
ja
cmp
push
in
add
pusha
clc
lcall
mov
roll
jge
in
mov
and
je
and
in
mov
hlt
dec
lods
daa
ffree
inc
mov
jbe
push
pop
psrlw
insl
cmp
push
ds
scas
and
adc
sahf
and
ret
popf
inc
ljmp
data16
jb
divl
out
inc
mov
push
je
dec
ficompl
pop
push
pop
jmp
sbb
push
sbb
or
push
cwtl
shrb
inc
es
shrb
and
jge
inc
sbb
pusha
add
outsl
movsb
lods
adc
sbb
push
repz
add
jns
movsl
or
mov
lahf
add
mov
xor
stc
scas
enter
outsl
int
insl
mov
mov
pop
ljmp
outsl
lcall
pop
cs
les
cli
popfw
and
inc
xchg
or
dec
add
cs
jne
add
add
xchg
movsl
and
xchg
into
jne
push
lcall
rolb
pushf
aam
xor
ja
push
push
push
out
idiv
adc
cmp
jnp
lret
loope
ud2
push
pop
repnz
jno
push
lretw
aaa
xor
adc
mov
adc
sti
inc
cltd
out
adc
pushf
rolb
and
mov
xor
rorl
sbbl
mov
loopne
enter
cltd
ss
jmp
int
cmp
push
cmpsl
vpmacsdqh
xor
stos
xchg
aas
push
dec
sahf
mov
jecxz
dec
call
enter
jmp
sbb
int
mov
or
in
inc
int
mov
icebp
int
adc
ljmp
xchg
or
roll
jae
pushf
pop
mov
data16
lret
dec
scas
push
push
inc
jg
fcmovb
or
sahf
pop
mulb
sbbl
inc
sti
lret
sub
out
ja
ffree
test
test
out
retw
inc
dec
shrl
in
ds
sbb
sbb
xchg
repz
pop
popf
and
jl
push
adc
fs
pop
clc
lods
cmp
repnz
out
dec
add
movsl
inc
xlat
lahf
sbb
lods
pop
sub
and
rorb
xor
push
aam
sahf
ja
mov
imul
outsl
repnz
in
std
test
insb
fiadds
mov
repnz
shlb
cmp
adc
push
ds
xchg
imul
scas
scas
push
repz
scas
dec
outsl
jns
loope
lods
ja
push
adcl
jp
mov
dec
dec
push
mov
mov
inc
cmp
daa
xchg
cmpl
fucomip
pop
push
dec
push
xchg
sbb
pop
insb
dec
cli
adc
dec
xchg
dec
and
mov
mov
and
mov
addr16
xor
lock
loop
repz
dec
xchg
push
sub
mov
pop
clc
or
mov
cmp
jecxz
stos
aam
jae
les
pushf
out
pop
fs
mov
outsb
cli
push
adc
push
call
subb
and
rorb
sahf
rorb
add
add
push
mov
mov
loop
push
mov
add
mov
inc
adc
ret
mov
aad
add
mov
or
std
sarl
mov
push
cld
adc
iret
int3
and
sbb
mov
adc
pusha
fisubl
adc
lods
sahf
push
jae
insb
std
inc
pop
adc
pusha
mov
int3
xchg
xor
xor
lds
in
int3
xchg
mov
arpl
jb
jg
aas
rcrl
mov
sbb
push
aam
movsl
push
sub
mov
pop
repz
mov
hlt
pop
arpl
scas
aam
lahf
adcl
and
add
sti
enter
cli
or
adc
push
das
inc
rcl
adc
push
sbb
rolb
mov
and
mov
mov
jbe
sbb
mov
ja
sbb
test
shlb
add
dec
push
sbb
leave
jmp
mov
pop
push
xchg
notb
addl
adc
sub
loop
push
dec
aad
cmp
insl
arpl
cmp
out
push
insl
adc
mov
xchg
int
adc
int3
shlb
ret
push
xchg
push
decb
movsb
rclb
enter
sub
jle
sahf
aaa
popa
jbe
into
xor
mov
pop
push
jo
cmpsb
pushf
jl
sti
cmp
pusha
es
push
and
cmp
add
cli
pop
mov
rcrb
sbb
jg
pop
popa
addr16
addr16
mov
out
lcall
rol
xor
pop
or
sub
leave
inc
mov
xor
and
test
xor
xchg
in
testl
adc
xor
pop
or
mov
mov
imul
lahf
push
nop
lock
bnd
fs
jmp
inc
pushf
xchg
aaa
xchg
jle
cmpsb
adc
jle
mov
test
lds
pop
mov
cmp
fcmovbe
mov
cmp
mov
xchg
mov
and
shlb
cmp
push
dec
test
xorl
mov
mov
ret
jae
outsl
mov
lds
xchg
mov
inc
das
mov
dec
pop
sbb
cmp
fcoms
rcr
lcall
xchg
les
pop
jne
and
dec
es
scas
push
hlt
enter
pop
xchg
xchg
mov
mov
imulb
aad
xor
jno
jl
cmp
subps
add
rorl
sub
test
or
inc
adc
cmp
addb
sub
mov
jg
fisttpl
dec
jne
imul
sbb
lcall
out
inc
daa
addr16
pop
xor
dec
dec
daa
std
or
test
in
movsl
xchg
mov
movsb
dec
jb
adcb
xchg
outsl
push
jp
lea
xlat
stc
xchg
insl
cmp
xchg
push
add
jmp
int3
out
xchg
ljmp
repz
test
xchg
stos
and
aam
mov
outsl
xlat
cmp
xor
jecxz
out
jae
fisubl
pop
jp
lods
lret
cmpsb
stc
mov
xchg
mov
and
loope
xchg
push
or
test
sbb
test
outsb
sbb
add
inc
cmp
push
sahf
dec
out
out
mov
ret
xlat
dec
mov
pop
dec
or
inc
push
mov
inc
adc
sbb
jae
sbb
xor
iret
mov
stos
mov
hlt
jmp
and
inc
jae
dec
shrb
insb
jmp
lods
pop
mov
cmp
jns
dec
rcr
out
fsubrs
sarb
out
mov
out
pop
xorb
fidivl
movsl
mov
adc
pop
addr16
mov
push
out
lret
aam
mov
and
add
cmp
xchg
outsl
inc
sahf
inc
sbb
or
sbb
into
or
sti
and
mov
xor
jge
mov
xor
inc
xlat
adc
call
jecxz
aad
pop
mov
dec
loopne
sub
inc
xchg
inc
ret
test
cmp
push
inc
pop
sbb
xor
push
sarl
jecxz
mov
inc
imul
adc
dec
in
testb
enter
sub
xorb
jbe
inc
inc
push
shl
jle
out
mov
out
je
sub
mov
add
outsb
daa
jge
inc
data16
push
jmp
dec
xchg
pop
push
sbb
mov
notl
popf
das
cmc
push
stc
mov
fisubrl
in
shrb
int3
out
lahf
add
lods
sbb
jne
int
add
sbb
sub
jge
jae
rcrl
ret
jbe
enter
add
sbb
subl
jge
sti
or
xlat
pop
adcb
fcomps
cli
les
push
sub
repz
out
mov
add
imul
pusha
or
adcl
xlat
lea
ds
ss
jl,pn
jbe
shlb
insl
sahf
cmp
lahf
dec
xchg
addr16
or
dec
ljmp
xchg
aad
fnsave
das
inc
xchg
push
addr16
jae
je
sbb
xchg
cmc
dec
mov
add
push
xor
or
jge
push
pop
sub
xchg
jg
leave
hlt
fsub
popa
mov
dec
mov
lret
ja
and
iret
dec
adc
sub
mov
jne
pusha
xchg
add
pusha
inc
fcmovnbe
mov
jno
loop
add
lods
mov
dec
sti
cli
add
out
hlt
loop
in
sbb
and
jno
sub
adc
cmp
mov
clc
mov
int
push
leave
jbe
dec
dec
int3
xor
lcall
pusha
jle
mov
ret
stc
mov
lock
lds
cmc
xchg
ja
sarl
loope
jnp
mov
mov
adc
sbb
int
lods
popf
outsl
ljmp
popa
int
popf
daa
cmp
popf
xor
mov
pop
ss
xchg
jle
cmp
inc
into
cmp
popf
nop
inc
lea
sub
xor
push
adc
cmp
or
mov
jp
mov
nop
pop
mov
mov
cmp
ret
mov
push
fs
jmp
inc
add
jnp
cmp
mov
test
dec
push
fnstsw
bnd
dec
push
mov
push
add
loopne
inc
mov
cmpsb
enter
andb
stc
mov
cmp
cwtl
clc
or
jg
push
aaa
int
rol
add
inc
rclb
into
es
add
inc
mov
es
dec
pushf
mov
sbb
mov
add
dec
cmp
pop
and
xor
insb
xchg
outsb
hlt
push
xchg
jl
cmpsb
dec
bound
add
nop
les
aam
mov
leave
out
in
rol
jp
jmp
mov
out
push
sti
dec
and
aam
das
cld
push
ss
pop
xlat
xor
cwtl
cs
addl
rcl
dec
pop
dec
rorl
cmp
int3
sbb
push
dec
sarb
dec
sub
je
push
xchg
sar
cltd
imul
into
out
les
xchg
les
cli
and
hlt
insb
xchg
jmp
dec
loope
pop
mov
lea
das
xor
xorl
out
add
and
xchg
cmpsb
xchg
hlt
xchg
mov
imul
clc
cmp
in
mov
cmpsl
push
out
je
inc
cmpsb
and
aaa
inc
inc
pop
jns
stos
or
dec
stos
sbb
xchg
xor
push
test
mov
xorb
lahf
lea
dec
sub
push
push
aaa
dec
jo
dec
and
into
fwait
pop
jmp
shll
mov
inc
cmpsb
shr
fwait
aaa
nop
push
sbb
mov
aam
lods
and
int
frstor
pop
add
mov
add
cld
movsb
repnz
sbb
fistpll
inc
std
iret
nop
or
push
in
push
sub
cmc
test
gs
pushf
add
add
jo
push
mov
push
jmp
shl
divl
enter
jbe
sbb
ds
sub
lret
mov
add
jge
sti
mul
inc
lret
dec
adc
faddl
popf
inc
ror
cs
iret
scas
int3
in
fildl
and
jbe
addr16
push
mov
inc
push
push
pop
dec
xlat
fwait
divl
lret
or
jno
icebp
test
sub
sbb
in
xor
lock
pop
add
in
addr16
xor
xor
int
dec
out
sbb
lods
push
jle
in
out
mov
xchg
jg
lret
or
orb
cmp
stos
xor
inc
insb
gs
sub
scas
mov
loope
out
jmp
imulb
stos
pop
jmp
stc
cltd
into
sub
in
int
lods
add
cmpl
addb
sarl
adc
in
push
jnp
ret
jb
xchg
mov
sti
adc
stos
clc
jne
or
adc
sahf
mov
jle
adc
sarb
imul
xchg
arpl
jg
fsubrl
mov
pusha
aam
mov
mov
mov
push
test
dec
jne
jnp
xlat
xlat
popf
sbb
mov
pop
sub
testb
jnp
mov
inc
jae
adc
pop
or
mov
cmp
lret
sub
sub
push
push
xorb
or
adc
int
xchg
mov
je
and
xchg
and
mov
pop
dec
mov
aas
dec
adc
popa
test
imul
push
sub
mov
dec
mov
repz
mov
iret
xchg
testb
std
aam
pop
inc
xor
pusha
mov
cmp
push
jge
mov
gs
popa
stos
sbb
ud1
fldl
popa
mov
push
rcl
in
push
add
mov
cmp
mov
xchg
shlb
cmpsl
adc
out
popa
ds
andb
jmp
and
mov
jmp
andl
mov
jns
out
fidivrl
inc
shlb
mov
mov
add
mov
mov
fimull
xor
inc
in
xor
adc
divl
mov
pop
ja
push
ret
out
xchg
push
sub
mov
xor
or
adc
aas
mov
fcoms
add
pop
dec
scas
push
xchg
lret
cld
inc
push
cmp
pop
arpl
repz
insb
mov
jae
fwait
testb
jae
icebp
scas
les
je
jnp
mov
js
popa
mov
xor
mov
popf
jns
adc
mov
and
push
and
aas
mov
fsubrp
ja
imulb
xchg
jo
inc
push
imul
insl
aas
xchg
pop
cld
add
divl
movsb
gs
or
inc
daa
cmp
adc
pop
out
leave
inc
shl
mov
gs
mov
mov
cmp
aas
insl
xchg
inc
or
repnz
xor
adc
lods
data16
pop
add
jns
jne
shll
cld
sbb
lret
mov
push
ret
lods
mov
sub
adc
jne
sub
fsub
pop
sbb
jle
iret
mov
mov
xor
fdivp
push
pop
inc
data16
mov
test
jno
call
inc
in
sub
pop
push
mov
xlat
sahf
leave
mov
cmp
test
mov
xchg
push
push
push
arpl
pushf
shll
xchg
or
lret
test
xchg
and
mov
fadds
sbb
mov
in
sbb
gs
mov
mov
xor
xchg
sbb
sahf
xorl
cmpsl
push
and
sub
mov
xor
in
aaa
xchg
mov
xlat
dec
int
xchg
xchg
push
fwait
mov
cmpl
shll
xor
cli
loopne
jmp
lock
shrb
push
sub
cmpsb
cmp
std
mov
ret
pop
jne
repnz
cs
mov
stos
testl
sbb
xchg
xchg
aad
addr16
jo
jmp
insb
cmc
enter
pop
mov
push
mov
pop
mov
adc
and
cmp
shrl
or
iret
repz
cwtl
scas
ret
lahf
mov
aas
leave
xor
mov
icebp
iret
sbb
xchg
ror
in
jmp
inc
push
pop
inc
int3
mov
int3
or
lcall
loop
cmp
ftst
popf
jle
sub
pop
inc
cmp
fcmovu
mov
mov
xchg
dec
inc
push
sbb
into
push
sub
test
inc
or
rcll
scas
in
adc
fdivl
push
push
rdpmc
out
leave
aad
lds
mov
das
cmc
jne
repnz
xor
out
shrb
xchg
sbb
inc
mov
cli
jb
add
pop
ret
divl
cmp
adc
pop
pop
xchg
imul
ja
sub
enter
stc
sbb
clc
aam
adc
jle
pop
cmpsl
mov
mov
aaa
xor
add
mov
test
pop
sahf
nop
iret
subl
je
jbe
out
adc
mov
xchg
lods
and
test
js
lock
jnp
and
jnp
mov
sbb
stos
inc
or
jge
lret
repz
cltd
iret
mov
mov
rcll
mov
shrl
jbe
adc
imul
xchg
lahf
or
cs
sub
cmc
mov
pop
push
dec
ds
push
cmp
hlt
push
in
mov
mov
jmp
jo
mov
xchg
aas
add
xor
in
jns
and
xchg
stc
test
inc
hlt
in
stos
imul
push
aad
out
mov
rcr
cmp
icebp
inc
lods
int
fs
addl
push
faddp
xor
cmpsb
add
add
shld
pushf
cmpsl
xor
icebp
loop
fisttpl
arpl
loopne
inc
jnp
xor
push
mov
pop
dec
pop
mov
mov
xor
add
jne
mov
outsl
push
cwtl
adc
sbb
fwait
mov
mov
test
repnz
clc
cs
adc
mov
in
cmp
jo
icebp
shlb
sti
enter
test
cli
pop
ss
das
mov
pop
adcl
sub
in
cmc
jg
push
inc
jns
xchg
mov
adc
lds
and
mov
enter
and
insl
out
add
cmp
and
es
cmp
iret
pushf
mov
fistpl
xchg
jecxz
mov
sub
and
jmp
add
xor
in
adc
xchg
into
cltd
xlat
lods
xlat
xchg
das
sub
mov
cmpsl
sahf
rcrl
sub
sbb
add
pop
mov
xor
xchg
call
clc
jno
test
push
mov
xor
sbb
dec
push
dec
pop
xchg
xlat
cmp
jo
enter
jb
push
add
dec
int3
adc
jp
imulb
sub
adc
adc
out
adc
sbb
shlb
aaa
push
into
add
mov
cltd
cwtl
loop
inc
xor
addl
add
pushf
ljmp
cmp
push
cmp
dec
dec
in
xlat
aas
jnp
stos
cld
cmp
iret
out
xchg
fwait
push
dec
mov
mov
inc
adc
push
xchg
and
sub
sti
std
jae
out
shlb
inc
js
push
pop
mov
and
sbb
andb
mov
int3
pop
push
loop
cwtl
mov
mov
xchg
fistl
adc
xorb
push
xor
sub
sub
pusha
sbb
ss
and
cmovp
stos
mov
inc
inc
test
repz
dec
bound
js
cmp
dec
repnz
nop
mov
in
out
or
jp
and
sbb
xchg
sub
mov
rclb
sti
inc
cmp
ss
pop
mov
jle
fadds
loope
jmp
dec
or
or
mov
scas
imul
sahf
lods
push
adc
out
mov
dec
push
and
adc
aaa
jns
adc
or
mov
ret
iret
enter
scas
xchg
enter
mov
sub
adc
nop
cmpsl
hlt
in
js
push
and
cmp
xchg
ss
dec
jl
mov
add
shll
sbb
pop
out
pusha
enter
in
lret
mov
iret
jb
sbb
inc
into
cmp
imul
out
sub
outsb
outsb
popa
xchg
leave
jae
ja
jne
adc
popf
jmp
sub
jae
sbb
dec
jg
cmp
cmc
loopne
add
out
push
xchg
shrb
rorl
js
pop
cmp
mov
sub
pushf
lret
outsb
out
jg
insb
scas
cmpsl
insb
in
in
sub
cmp
push
xor
push
dec
inc
adc
je
add
xor
sub
sub
add
xor
adc
and
pop
enter
jo
push
arpl
leave
fcomip
in
inc
add
pop
inc
jno
hlt
mov
leave
mov
xchg
outsl
or
dec
js
outsb
in
sub
imul
in
sub
imul
rolb
dec
sahf
and
data16
add
and
mov
test
add
push
adc
addr16
adc
cmp
and
out
in
les
repnz
repz
or
lahf
fisttps
mov
xchg
int3
outsl
pop
or
push
jne
inc
fcmovbe
and
ljmp
aas
pop
sbb
mov
in
fs
ljmp
push
imul
fstl
xlat
or
mov
cmp
sbb
pop
rcll
das
inc
test
xchg
fs
push
pop
hlt
ss
fmuls
add
popf
push
scas
jmp
xor
cmp
sub
fcmovbe
jecxz
mov
cmpl
push
jae
test
fwait
lahf
dec
push
es
mov
cltd
cmpsl
or
scas
fdivs
dec
rcll
push
aam
sahf
inc
mov
aad
jns
dec
and
push
lcall
subl
sbb
xchg
cmpsb
sti
js
into
outsb
repnz
sub
mov
mov
aam
cmp
aaa
cmp
push
gs
mov
jle
mul
rorl
lcall
ljmp
push
repnz
xor
add
sarb
and
fcomip
mov
std
aam
stos
lret
rorb
stos
mov
fmul
mov
jecxz
in
jne
scas
dec
sbb
in
adc
lock
jne
jnp
mov
shrl
push
jecxz
push
imul
mov
insb
mov
or
lods
xor
mov
dec
pop
fs
ss
addl
cmpsl
xchg
and
jmp
or
pushf
mov
cmc
mov
pop
ficomps
int
xlat
and
add
add
clc
pushf
sbb
pop
stos
stos
fisubrl
out
push
jmp
lock
or
pop
and
pop
mov
flds
mov
adc
jae
insb
dec
cmp
popf
daa
add
mov
jge
mov
or
or
aam
gs
add
inc
cmpsb
int3
mov
stos
loopne
les
mov
pusha
bound
aas
adc
andb
cmp
mov
jne
mov
or
add
sar
hlt
adcl
decl
xchg
test
jo
cmpsl
pop
lcall
pop
mov
ds
movsb
mov
adc
leave
inc
fisttpll
mov
cmp
sub
in
adc
ljmp
push
mov
loopne
cmp
xor
xchg
jns
les
lret
mov
adc
iret
mov
rolb
cwtl
pop
mov
jg
mov
add
fdivrl
and
mov
addr16
sbb
test
inc
add
dec
jb
fidivrl
sbb
lret
cli
mov
popf
xor
pop
aaa
lock
insl
mov
sbb
scas
cmc
cmp
enter
sub
test
sti
pop
sub
sbb
xchg
int
int
xchg
cmpsb
in
cwtl
lret
sbb
mov
out
popf
inc
jae
jge
xor
lahf
hlt
jp
mov
push
mov
cmp
and
cld
in
xchg
int3
test
enter
stc
add
pop
mov
fwait
inc
adc
inc
mov
sub
movsl
adc
cmp
hlt
imul
add
mov
lret
mov
ret
out
sarb
sub
inc
sub
dec
inc
jae
insl
repz
int
pop
push
dec
in
or
pusha
adc
or
shlb
daa
in
mov
seto
ljmp
outsl
cmp
into
addr16
lcall
dec
push
push
inc
cmp
xor
stos
nop
hlt
sarb
pop
aad
pop
jp
push
imul
mov
push
mov
cmpsl
imul
pop
data16
xor
sbb
jmp
mov
sahf
gs
pop
mov
cmpsl
push
mov
push
lods
xlat
push
pop
loop
fwait
out
dec
mov
pop
xchg
call
cmc
mov
or
aaa
mov
inc
out
mov
inc
jae
add
sub
dec
call
jge
dec
mov
inc
mov
loope
std
add
adc
cmp
pop
xchg
icebp
enter
jb
and
int
int
mov
push
mov
mov
dec
mov
xchg
push
sub
xor
dec
ja
stos
pop
sbb
mov
pop
aam
push
xchg
jle
leave
sbb
or
pop
jae
sub
out
push
pop
rclb
test
xor
sti
test
mov
mov
pop
add
adc
ds
cmp
lds
ljmp
inc
cmp
out
scas
mov
push
jmp
jbe
cmp
movsb
leave
fcomp
aas
and
cmp
jmp
pop
and
push
mov
xchg
mov
push
hlt
sti
push
xchg
pop
rolb
movsl
adc
out
or
out
loope
inc
imul
mov
inc
mov
push
mov
jecxz
xchg
iret
in
jne
adc
adcl
mov
pop
mov
jne
jecxz
cld
aad
cmc
xlat
xor
popa
push
add
xlat
ret
inc
lret
fsubl
sbb
add
cmpsb
adc
jae
or
jno
enter
mov
cwtl
jle
aas
xchg
ret
repnz
imul
or
pusha
mov
sbb
jl
imul
icebp
jge
cmp
add
arpl
imul
setl
pop
mull
pushf
dec
pop
sbb
mov
pop
ret
jl
push
xchg
int3
xor
cmp
mov
imul
daa
add
test
shll
stc
lock
xor
fldenv
mov
or
aaa
adc
mov
mov
int
mov
mov
lret
fbld
les
jno
ret
push
jecxz
es
iret
scas
inc
pop
in
sbb
call
push
aam
out
xchg
mov
pop
imul
fiadds
pop
xchg
inc
aaa
call
iret
pushl
ret
insb
adc
mov
mov
lea
lods
jno
jg
dec
mov
xchg
fsubrs
jp
lock
je
push
ret
ja
mov
mov
xchg
test
jle
ret
mov
jge
cmp
mov
ret
dec
lods
inc
jne
mov
filds
xchg
aad
fldenv
test
cmp
jbe
fstl
call
aam
aaa
mov
push
lock
xchg
and
xchg
pop
sbb
mov
mov
xchg
daa
fcomps
cmp
push
push
pop
mov
lret
mov
inc
cmp
sbb
adc
jmp
adc
xorl
ja
std
jp
mov
std
add
xlat
cmp
mov
pop
xor
or
jecxz
or
roll
mov
out
test
adc
mov
sti
mov
outsl
pushf
pop
cmpsb
and
cmp
dec
lods
and
jp
xchg
lods
cmpb
adcb
mov
sbb
shl
sub
mov
lea
fiaddl
mov
sbb
mov
stc
and
xor
jle
mov
mov
jae
lods
mov
sub
js
test
fnstcw
testl
into
fwait
ja
cmp
inc
in
mov
cli
nop
aam
pop
scas
lods
and
mov
mov
mov
inc
in
in
clc
rcrl
and
cli
out
icebp
outsl
pop
add
out
push
jp
sub
push
mulb
imull
cwtl
inc
out
mov
cmp
inc
add
dec
xor
lahf
mov
mov
jl
in
std
mov
inc
or
xor
adc
lahf
lahf
pop
rcrb
push
lds
dec
std
pusha
fidivrl
adc
sub
dec
sbbb
iret
mov
lcall
insb
lds
insb
xchg
popf
in
pop
cld
xchg
mov
push
hlt
aam
out
stos
jle
movsl
inc
out
jle
inc
cmp
scas
loopne
xchg
or
pop
jg
clc
std
push
inc
cmp
xor
add
outsb
sysret
mov
test
inc
fdivrs
vmovq
and
lods
movsl
dec
xchg
pop
adc
fldl
lods
push
xor
pop
aam
in
movsl
popf
jmp
jg
out
icebp
movsb
xchg
mov
mov
xchg
add
not
stos
outsb
ret
mov
imul
pop
cmpb
mov
mov
mov
and
in
or
loope
sbb
or
loopne
add
adc
jb
mov
stos
dec
lahf
push
das
and
mov
pushf
cmp
inc
sub
addb
fstl
int3
pop
pushf
out
jo
xchg
fdivrs
in
xor
cmc
stc
insl
stos
add
lea
xchg
addb
int
jmp
out
add
and
mov
aad
sbb
mov
push
add
popl
lahf
push
in
test
dec
lods
add
mov
add
outsl
jae
sub
mov
xchg
or
jo
push
das
or
jbe
dec
jmp
jb
jmp
mov
dec
mov
in
lds
rolb
pop
movsb
ja
add
repz
aam
cmp
inc
push
ror
pusha
xor
dec
ja
xchg
ss
and
scas
jns
jle
imul
insl
adc
xchg
push
out
das
ljmp
divb
jbe,pn
mov
repnz
bound
call
loope
in
fsubs
es
inc
push
lret
test
js
and
add
sahf
or
add
xchg
push
pop
cs
mov
mov
aad
fildll
mov
cmp
and
jns
push
sbb
mov
pop
es
mov
sbb
outsb
jns
mov
insl
cmpb
fcomps
fdivs
add
sarl
pop
jmp
sub
test
stc
sub
mov
adc
dec
xchg
cwtl
lahf
add
fiadds
mov
cmpsb
mov
cli
jle
fs
push
mov
test
sbb
sbb
mov
mov
leave
fdivr
dec
xlat
mov
lods
mov
dec
sub
cs
fstpl
aaa
pop
addl
xor
push
ret
loope
adc
adc
push
inc
stos
and
in
imul
int3
dec
or
mov
test
arpl
cwtl
adc
inc
out
dec
movsb
cmpsl
mov
fucom
and
mov
iret
sbb
jg
xor
pop
mov
bound
int
xor
mov
jb
test
xlat
in
imul
in
and
lea
dec
dec
mov
cmpl
adc
imul
rcll
add
push
mov
movsl
jo
xchg
arpl
pop
lahf
mov
push
xchg
pusha
loopne
or
daa
ja
cmpsl
xchg
cmp
inc
ja
inc
es
jbe
in
and
es
jbe
rclb
aad
xor
adc
int
jp
dec
fsubrl
mov
lret
repnz
xor
mov
stos
adc
pop
mov
sub
sahf
jb
xchg
mov
xlat
fwait
sbb
xor
movsb
mov
filds
sub
inc
or
lods
inc
pusha
add
jmp
mov
addr16
lock
mov
repz
arpl
out
cmc
xor
pcmpgtw
fstpl
call
out
mov
push
xor
push
into
jae
pop
mov
test
mov
and
pop
inc
adc
dec
das
int
jg
stos
roll
mov
jl
cmpsb
xor
out
mov
test
pop
add
xchg
insb
cmc
pop
cmpsb
js
mov
adc
inc
and
ret
je
js
dec
push
cmpsl
out
jne
mov
subl
pusha
aas
out
sub
mov
pop
ljmp
xchg
ljmp
mov
push
fs
mov
add
loopne
pop
arpl
aad
sbb
cmp
push
inc
psraw
hlt
inc
xor
lret
sbb
cli
push
add
bound
fiadds
push
and
and
jmp
arpl
dec
and
add
dec
dec
mov
push
into
dec
scas
jb
iret
mov
mov
inc
pop
nop
leave
mov
outsb
loop
jg
imul
shrl
cmp
dec
mov
into
adc
dec
dec
icebp
icebp
jnp
repz
sub
pop
test
mov
add
lahf
xor
ficompl
imul
rcrl
mov
sub
ret
dec
mov
lods
sti
jb
inc
inc
add
outsb
inc
mov
hlt
addr16
cmp
adc
call
das
insl
sub
mov
sbb
xchg
mov
cmp
out
pop
push
xlat
add
add
xor
mov
inc
xchg
fstp
mov
lret
pop
cmp
xor
mov
repnz
mov
subl
inc
mov
inc
fbstp
xchg
xchg
pushf
dec
outsb
xor
dec
shl
pushf
lcall
jo
inc
inc
jmp
fisttpl
push
ja
push
ja
mov
test
mov
sub
bound
ljmp
lahf
xchg
dec
jl
in
cltd
inc
push
inc
push
dec
push
add
cmp
sbb
pop
sub
sbb
sbbb
pop
push
les
dec
or
rcrl
out
mov
shrb
mov
popa
sbb
xchg
inc
mov
cmp
jno
sbb
in
inc
jns,pt
xor
pop
cltd
add
pop
aas
mov
add
cmp
subb
dec
or
cmpsl
jmp
mov
imul
mov
mov
lods
xchg
stos
xor
pop
pop
lds
outsl
sub
shlb
mov
push
mov
push
cmp
xor
int3
cld
push
sbb
inc
insl
ljmp
mov
fsubr
cli
xchg
addr16
sbb
push
xor
jb
sbb
loopne
mov
movsl
jb
std
rorb
mov
and
mov
test
loopne
pop
push
cmp
movsb
out
outsl
jnp
jns
push
mov
shll
idivl
ret
pop
sub
ficomps
fstps
mov
pop
dec
xor
xchg
cli
call
data16
sbb
push
aas
mov
rorb
mov
pop
aaa
rcll
mov
imul
loop,pt
inc
aaa
roll
or
xor
ss
and
cmp
sar
ljmp
add
adc
mov
lods
shlb
push
rorl
cmp
sti
out
ror
cmp
test
aaa
in
cmp
jae
fisubrs
repz
lods
pop
cmpsb
inc
jne
hlt
rcr
mov
ja
inc
dec
inc
jmp
mov
xchg
in
pop
js
sbb
jp
ljmp
mov
mov
orb
sub
cmp
mov
xchg
leave
lret
xchg
xor
inc
ret
and
push
je
mov
xchg
cltd
inc
jge
je
inc
fdivl
js
mov
movsl
fdivp
and
bound
cli
call
out
mov
push
sub
adc
or
jg
cmp
xchg
test
sbb
cmp
adc
fistpl
iret
mov
fidivs
push
cltd
push
push
lods
pop
sub
and
lods
adc
cld
jle
call
lahf
cmp
test
stos
mov
ret
mov
mov
and
jnp
adc
sbb
pop
fstpl
jl
aaa
or
jl
popa
sub
fsts
jl
rol
push
fistl
sbb
jecxz
jno
sbb
les
and
push
fs
push
mov
jg
mov
add
xchg
enter
and
stos
inc
jb
sbb
ret
in
lcall
xor
cli
sbb
mov
pushf
push
dec
ret
lret
in
sbb
push
and
mov
rorb
or
add
jecxz
lods
add
test
jb
sub
pop
cmpsb
inc
cli
lea
popf
outsb
dec
jne
mov
jp
mov
outsb
dec
jo
cwtl
je
jo
and
ret
xor
pop
repnz
js
push
mov
or
scas
je
rorb
jmp
int
dec
jae
incb
jne
aad
push
fisubrs
stos
push
ss
or
bound
in
or
push
insb
fsubrs
lods
lds
lds
pushf
lret
dec
lods
mov
int
push
cmp
cmp
int3
mov
or
adc
xchg
pop
mov
mov
imul
fwait
stc
jmp
stos
and
jl
and
mov
mov
jmp
jp
sub
ja
jnp
or
jb
mov
incb
aam
xchg
add
mov
or
movsl
add
out
mov
mov
jne
loopne
hlt
mov
rorb
out
mov
fdivrl
daa
and
pushf
mov
cmp
xchg
sbbb
sbb
mov
jbe
mov
sub
push
push
std
jp
dec
les
insl
inc
pushf
xor
fs
pushf
jnp
mov
lret
fs
lcall
mov
jg
dec
xchg
pushf
in
clc
inc
adc
stos
lea
adc
mov
fxam
xlat
lahf
leave
jp
sbb
inc
insb
add
out
mov
push
sbb
jmp
and
cmpsb
mov
stos
mov
stc
scas
mov
sahf
mov
mov
js
add
imul
sbb
pusha
xchg
lock
in
popf
sbb
fadds
nop
dec
arpl
in
lea
sbb
xor
or
lods
push
pop
xchg
mov
push
cs
jns
add
push
jb
imul
stos
frstor
iret
mov
jl
xchg
addb
sbb
fucomi
mov
enter
outsl
dec
out
pusha
inc
gs
fidivrs
sarl
fdivrl
or
int3
leave
ss
mov
test
adc
data16
outsl
push
jbe
jp
add
or
shrl
adc
adc
lods
dec
rcll
bound
addl
jg
jl
xor
gs
adcl
lcall
dec
cmp
pop
cmp
dec
push
loope
cmp
adc
xor
dec
adc
les
inc
sbb
mov
ja
mov
subb
out
rclb
dec
inc
scas
sbb
dec
pop
aam
iret
mov
into
cmc
sarl
cmp
sub
mov
jb
dec
push
add
iret
aam
mov
jp
push
iret
cmp
xchg
filds
in
xor
data16
adcb
jae
fnsave
add
mov
sbb
mov
inc
cmp
adc
lock
cs
arpl
xor
test
jb
imulb
data16
fstl
popa
bound
in
fldl
dec
add
jo
ficoms
and
stos
stos
sbb
xchg
sti
jb
das
jge
shlb
std
test
into
inc
or
and
shr
xchg
dec
roll
arpl
scas
sarb
in
dec
fbstp
fwait
mov
lods
inc
lcall
data16
out
push
neg
test
push
xchg
mov
movsl
jnp
adc
jbe
in
fdivrl
js
movsl
and
movsl
jmp
pop
pop
pop
movsb
in
subb
dec
cmp
iret
test
dec
rcrl
incl
aam
inc
xchg
pushf
or
in
pop
sbb
sub
ficompl
dec
pop
imul
cltd
pusha
pop
bound
outsb
js
mov
aad
push
outsb
testw
enter
inc
in
xchg
std
mov
inc
aas
loope
mov
push
cli
insl
jg
scas
jmp
out
push
pop
in
hlt
lds
xlat
aam
xchg
sbb
cwtl
dec
mov
mov
push
or
aad
inc
mov
or
loope
jns
push
or
inc
add
adc
in
shl
mov
jo
push
xor
scas
ret
pop
fs
test
pop
imulb
or
or
jp
mov
les
add
push
shrb
out
mov
jo
adc
test
mov
dec
mul
ljmp
and
adc
push
adc
jecxz
xchg
cltd
pusha
sub
aas
lret
pushf
dec
imul
adc
call
adc
xor
xor
js
orb
cmp
dec
daa
mov
mov
sub
ds
mov
push
inc
loope
shlb
cmpl
push
insl
mov
loopne
cs
mov
imul
xchg
imulb
imull
test
fsts
xor
shrl
sarl
lods
add
cwtl
push
mov
mov
in
fildll
mov
movsbl
outsl
out
and
inc
movb
or
fwait
loopne
mov
insl
mov
sub
nop
xor
mov
mov
idivb
xchg
push
sbb
ret
pop
or
cmp
imul
mov
jge
or
push
mov
pushf
mul
mov
mov
sti
xor
sbb
pushf
and
jnp
shll
shlb
testb
sub
adc
push
movsb
sti
iret
xchg
inc
pop
mov
xchg
shll
subb
iret
and
aam
xchg
les
test
pop
cmp
cmpsb
xchg
mov
stos
push
add
cmp
hlt
xchg
shll
pop
pop
jg
pop
pop
push
mov
iret
inc
push
jle
cmp
jmp
mov
mov
and
cmp
add
jg
inc
mov
repnz
mov
xor
data16
adc
movsl
xor
clc
addr16
add
divps
bswap
dec
js
aad
cmc
push
gs
scas
cmp
es
mov
mov
in
mov
adc
insb
pop
jg
push
out
push
lods
call
fxch
jl
dec
outsb
leave
pop
push
jg
test
xlat
mov
repz
adc
popf
test
pushf
scas
fdiv
sbb
fs
cmc
insb
push
dec
xor
inc
mov
or
stos
aam
call
imul
cltd
js,pn
hlt
dec
imul
adcl
aas
push
scas
ds
mov
test
or
xor
jb
stos
push
sub
jl
pop
sbb
mov
dec
mov
rolb
sub
cli
xlat
add
mov
jns,pn
adc
insb
push
mov
test
loopne
repnz
fstpt
gs
jg
test
imul
xor
rorb
or
enter
cmp
int
iret
fcomps
dec
sti
pop
mov
aam
adc
cmpsb
add
icebp
aad
fnstcw
sbb
and
adc
jo
xchg
insb
or
loop
xor
sarb
xchg
or
pop
rcr
inc
ljmp
sbb
mov
lret
hlt
jno
fidivs
popf
leave
adc
test
or
mov
call
icebp
jnp
std
or
aas
and
inc
push
mov
or
imul
in
dec
inc
lret
inc
jne
iret
movsl
mov
mov
lret
dec
addr16
cli
loope
jb
lahf
shlb
or
jae
jp
cmp
mov
sbb
adc
mov
or
out
pop
sbb
idivl
fdiv
test
or
lock
jb
subl
mov
scas
mov
test
hlt
mov
ljmp
movsl
add
out
daa
scas
and
lret
add
or
icebp
loopne
mov
sti
call
pop
enter
add
je
fwait
lock
pop
mov
push
stc
jmp
aaa
sub
dec
sarb
rcrb
dec
mov
stc
lcall
sub
bound
out
inc
adc
push
jne
ss
pop
movsl
scas
addl
xchg
fistpll
lock
inc
dec
jno
push
jns
inc
insl
in
lret
test
sub
cli
push
inc
mov
hlt
loope
stc
es
add
and
mov
xchg
lea
adc
jno
out
int3
lods
inc
mov
lods
or
mov
insl
add
inc
pop
jae
imul
mov
cmpl
sub
jbe
adcb
movsb
shll
xor
pop
cmpsb
jp
test
mov
push
sub
dec
add
out
loopne
scas
pusha
in
fwait
xchg
cmp
xor
out
aad
cmp
push
jae
pop
jo
roll
lahf
dec
and
sbb
sbb
pusha
ss
and
cmp
test
push
iret
loopne
shll
dec
jnp
adc
cld
int3
push
leave
shr
int3
cmpsl
clc
and
pop
cld
and
jge
lds
mov
or
test
das
fsubr
adc
jno
or
sbb
mov
push
mov
outsl
dec
repz
lahf
shrb
push
scas
jmp
jecxz
icebp
scas
shrb
psrad
xchg
and
movsb
mov
or
inc
rcrb
cmp
mov
mov
and
jae
hlt
maskmovq
testl
mov
rcr
rorb
xchg
test
lret
daa
insb
imul
pop
mov
shl
in
push
add
sbb
mov
cli
mov
lods
mov
stc
rolb
aas
adc
or
fidivrl
out
lret
out
mov
call
mov
xchg
sub
xor
call
xchg
jmp
out
lds
xchg
pop
pop
shl
mov
push
daa
dec
sbb
icebp
jb
mov
sbb
or
fisubrs
adc
sbb
lcall
js
dec
outsb
nop
inc
mov
push
adc
ret
cmpl
dec
addb
ljmp
push
ss
sbb
mov
inc
adc
xor
imulb
imul
pop
es
pop
orl
mov
push
and
out
dec
lods
lods
add
mov
mov
dec
repz
xchg
cmpsb
mov
mov
test
aam
sub
push
add
in
mov
inc
sti
adc
stos
hlt
imul
push
mov
test
or
cmp
ja
adc
rol
inc
pop
roll
mov
pop
and
in
push
scas
aad
push
jb
sub
shll
fidivrl
sahf
and
cmpsb
jp
dec
loop
scas
mov
shll
aas
popf
rol
lahf
mov
aad
or
aad
test
xlat
aaa
pop
lds
jbe
cltd
push
or
cwtl
das
cmp
xor
ret
push
fmulp
cmpl
cmc
iret
lcall
jge
inc
mov
aam
enter
insl
adc
loop
aas
xor
pop
cmp
add
sti
add
lea
mov
jg
into
mov
lds
jmp
xchg
inc
in
aas
mull
stos
mov
testl
push
aaa
leave
pusha
insb
pushf
pop
lsl
gs
push
sub
sub
hlt
fwait
pop
xchg
sbb
ds
mov
mov
scas
in
aas
out
aas
fs
or
int3
mov
dec
and
xor
out
cli
rcrl
in
add
iret
aaa
or
movsb
sbb
dec
jo
adc
outsb
cmc
xor
sti
mov
xchg
mov
xor
cli
int3
clc
adc
mov
mov
lods
ret
arpl
in
or
jbe
fcoml
out
dec
mov
adc
jne
add
dec
jne
xchg
xor
aaa
push
mov
les
xchg
outsb
jae
mov
jnp
mov
arpl
and
ret
sub
fs
push
daa
sbb
jmp
mov
xorl
scas
lea
jl
test
push
popa
dec
xchg
pop
ret
icebp
dec
or
cmp
rorl
jecxz
fistpll
aad
icebp
push
pop
arpl
dec
call
js
cwtl
mov
xor
push
ret
cwtl
lahf
outsl
stos
inc
jae
pusha
mov
fs
mov
xchg
push
orl
ret
shl
pop
jb
clc
rclb
jle
xchg
popf
es
pop
movsl
ds
mov
aas
movsb
jp
hlt
rolb
mov
loop
mov
jecxz
mov
mov
int
and
lea
stc
imulb
mov
cmp
bnd
cltd
pop
dec
int3
push
push
jle
ljmp
fbstp
rclb
out
cmp
adc
mov
adc
adc
lret
push
sub
mov
scas
lahf
mov
sub
pop
pop
ffreep
cmp
jp
push
xchg
xor
mov
int
or
ret
bound
mov
js
jge
mov
pop
jmp
xchg
into
ds
aas
adc
outsl
mov
std
dec
sub
push
add
sub
rorl
rcrl
mov
jno
jae
idivb
in
lcall
rcl
loop
into
fmuls
xchg
and
add
stc
mull
jg
out
lahf
adc
jle
js
fnstenv
dec
mov
loop
sbb
ret
pop
push
jnp
adc
or
cmp
sub
sti
cmpsl
xchg
lcall
aam
dec
add
push
pop
inc
lret
or
in
jp
jecxz
xor
lret
push
fildl
and
ret
and
or
orb
pop
and
cmp
mov
pop
push
xlat
sub
fldcw
out
mov
pop
add
loope
clc
dec
jo
adc
data16
pop
or
or
fninit
add
or
sbb
das
xlat
test
shll
jae
je
jecxz
jle
imul
mov
std
inc
mov
xor
testl
lock
mov
enter
jno
xchg
loope
stos
mov
shl
or
xchg
in
adc
sub
jne
inc
push
mov
pop
popa
sub
imul
std
pusha
push
push
movsl
pop
mov
cmp
scas
data16
clc
loop
je
addr16
jne
repz
mov
es
frstor
lahf
mov
adc
orl
cmp
cmpsb
loope
sarl
add
fprem1
fcomps
jno
xchg
cmp
mov
das
data16
cmp
shlb
xchg
lahf
mov
jne
fists
push
xchg
stos
lea
mov
push
and
in
add
push
jno
rorl
int
stos
mov
dec
loopne
fcoml
es
movsl
xor
xor
inc
xchg
test
jo
fsubrl
test
les
pop
cmp
cmpsl
insb
xor
mov
jae
stos
int
mov
dec
js
xchg
into
mov
ja
arpl
int3
loop
lret
mov
xorl
addr16
pop
insl
sti
sbb
dec
repnz
add
js
lcall
or
mov
gs
push
enter
xchg
mov
fmul
int
push
pop
ret
mov
xor
lret
pop
sbb
dec
mov
lret
clc
cmp
or
hlt
adcb
mul
lret
mov
in
pop
iret
out
pop
mov
mov
rcrl
test
xchg
addr16
ret
xor
push
dec
jecxz
and
dec
fs
jg
xor
stc
xor
pop
cmp
push
jnp
cmp
sahf
sub
jp
xor
or
cmc
jp
andl
shll
jo
add
xchg
repz
test
bnd
enter
dec
daa
add
not
fisubrs
scas
mov
insb
out
into
add
out
push
lods
or
or
repnz
out
or
pop
rcrl
jmp
loopne
dec
in
pop
pop
push
inc
xchg
dec
ret
stos
mov
movsb
test
decl
repnz
repnz
into
psadbw
mov
ret
daa
and
dec
adc
andb
insl
xor
xor
xchg
jmp
push
adc
cwtl
ss
mov
out
push
dec
test
and
pop
popa
push
jle
or
in
sub
xchg
sub
test
fmul
cwtl
psadbw
mov
fsubs
in
je
push
mov
mov
dec
fcomip
fnstsw
icebp
xchg
and
and
lock
stos
cwtl
in
in
jnp
sbb
add
in
hlt
or
mov
add
push
xor
fs
jge
and
stc
test
dec
or
jp
cwtl
movl
xchg
scas
mov
inc
adc
adcl
iret
or
mov
ds
daa
clc
cmp
xor
inc
dec
or
or
mov
adc
shrl
mov
xchg
xchg
out
pushf
iret
dec
outsb
call
sub
push
jne
or
fldt
out
add
pop
movsl
sahf
fs
fsubrp
mov
cmpsb
or
or
sub
mov
shlb
ficompl
sbb
loopne
int3
push
inc
clc
sub
faddl
cmc
jo
shll
std
jns
cld
insl
dec
cmovp
sbb
xor
push
mov
sub
xchg
loope
in
inc
dec
jg
movsl
insl
roll
addb
shll
lock
jne
xchg
idivb
or
js
xchg
jno
push
mov
pop
call
mov
dec
jnp
mov
jle
stc
dec
xchg
jo
fimull
out
ja
sub
scas
pusha
fbld
aam
test
ja
ljmp
jns
pop
shlb
cmp
out
pop
mov
test
mov
cmc
sub
push
xchg
je
xchg
fmul
push
xlat
cmpsl
mov
shrb
pop
mov
test
in
mov
sub
test
add
mov
cs
ret
add
and
push
ja
or
aad
pop
adc
mov
mov
jbe
jb
xchg
loope
jl
mov
addr16
fstpt
dec
fadd
int3
pop
loope
mov
mov
bound
add
lahf
je
pop
popf
movsl
dec
jne
fsubrl
in
or
mov
pop
xor
leave
jle
mov
inc
and
pusha
insl
and
xchg
or
aam
jecxz
push
insl
std
mov
mov
xor
fwait
xchg
xor
xchg
jo
aad
loopne
inc
xor
jb
pop
dec
dec
add
mov
and
mov
add
adc
cmp
xchg
ret
jge
icebp
mov
loop
cmp
or
dec
xor
sub
pushl
out
mov
ds
inc
fs
sti
push
std
mov
adc
cmpl
adc
fdivrs
mov
jne
dec
call
mov
mov
in
add
jge
bound
iret
pmullw
fwait
scas
or
test
or
sub
hlt
js
sti
iret
mov
imul
pop
insl
fwait
dec
repz
divb
xchg
das
mov
das
mov
cmp
bound
loop
insb
dec
cmp
bound
dec
mov
jg
test
mov
sbbb
idivb
jge
fwait
mov
mov
out
pop
sbb
pop
inc
lods
mov
mull
and
js
xchg
mov
in
into
mov
ror
pop
test
xchg
scas
jno
loop
and
mov
xor
adc
call
sub
pop
lea
dec
pop
mov
pop
inc
cli
repz
mov
jmp
mov
popa
mov
push
rcll
imul
testb
call
aas
fisttps
jno
loop
fs
mov
scas
adc
test
sbb
dec
adc
loop
in
xchg
ds
sub
pop
pop
repz
gs
adc
out
pop
or
push
push
mov
iret
repz
xchg
xor
stos
iret
popf
ret
in
je
xchg
dec
icebp
mov
jg
test
pop
leave
push
pop
aaa
inc
into
insl
insl
std
dec
fildl
filds
adc
mov
push
fmulp
jns
jle
push
mov
cmp
flds
in
aad
pushf
push
jecxz
clc
mov
inc
or
inc
jbe
into
push
lahf
arpl
ss
int3
cmp
hlt
loop
out
mov
jae
mov
test
out
add
mov
inc
push
push
sub
or
cmp
insl
dec
fisttps
or
iret
sub
mov
adc
push
lcall
jecxz
mov
xchg
ret
addr16
pusha
fnstenv
insl
inc
lods
and
gs
pop
jo
aaa
sub
add
mov
xor
push
add
cmp
gs
pop
xchg
scas
and
movsl
arpl
sub
push
fisttpl
aaa
mov
jle
dec
addr16
dec
daa
sahf
push
out
push
or
and
fildll
shll
add
fsubrl
test
std
mov
in
test
mov
ljmp
in
sti
rcrl
repnz
stc
repz
sub
jb
insb
out
jnp
leave
arpl
push
mov
sub
adc
mov
mov
repnz
and
test
scas
js
dec
inc
pop
leave
movsb
jae
outsb
push
clc
xchg
xor
dec
lret
jl
cmp
inc
xor
out
push
xor
mov
ja
les
jp
test
mov
sub
cli
and
jmp
xchg
and
sbb
in
movsb
call
decl
sbb
mov
aam
test
jmp
xlat
lock
mov
les
pushl
testb
pop
divb
add
subb
mov
add
lock
mov
adcl
mov
add
mov
pop
imul
arpl
movb
cltd
test
movsw
aas
xor
dec
and
or
jl
mov
inc
push
loop
xchg
xor
test
sub
jg
and
jno
or
inc
inc
testb
daa
mov
xchg
add
in
imul
hlt
es
jl
dec
pop
insb
sub
add
call
sbb
icebp
xchg
xchg
out
jo
add
adcl
movsb
pop
cld
mov
enter
cmp
loop
xor
imul
jnp
pop
pop
outsb
adc
adc
out
sub
fs
lds
mov
sub
mov
stos
outsb
ret
popf
adc
pop
aas
add
push
outsb
cmp
add
pop
arpl
movl
lods
xchg
sub
cmpsb
out
cli
sub
mov
enter
cmpsb
pop
jns
ja
jno
inc
pop
popf
mov
xor
scas
inc
push
clc
sbbl
psllw
ret
mov
out
imul
rcl
and
mov
inc
sub
adc
add
icebp
adc
adc
in
sbb
xchg
adc
imul
push
jne
imul
mov
mov
leave
adc
leave
stc
pop
ds
mov
dec
gs
pop
test
xor
cmp
sbb
idivb
or
xchg
loopne
jne
jne
dec
cmp
stos
jp
push
pusha
les
or
or
outsb
fists
pop
jg
cs
push
adc
jl
adc
mov
sub
sahf
adc
jo
rorb
pop
add
pop
or
push
mov
inc
in
adc
jno
pop
arpl
sub
xor
insb
mov
movsb
sub
call
xor
dec
mov
xchg
add
insb
mov
loope
ja
cli
mov
pop
popa
ja
or
jbe
subl
jb
xor
std
sbb
ficoms
add
xor
movsb
cmp
pusha
rclb
mov
shll
mov
pop
int
fwait
sub
cmp
mov
test
icebp
jo
sbb
outsl
xlat
inc
jmp
mov
data16
pop
out
jg
mov
lock
inc
pusha
jb
mov
fs
jo
insb
cmpsb
sbb
xchg
dec
popf
shrl
push
push
adc
push
mov
pop
push
mov
fisttpll
cli
dec
imul
dec
push
ret
jo
push
popf
inc
cmp
jecxz
pop
hlt
clc
mov
lcall
scas
pushf
pop
aas
sub
sahf
cli
add
sbb
adcl
pop
jae
push
scas
adc
xchg
loopne
jbe
mov
xorb
xchg
dec
cs
loopne
adcb
ja
idivl
data16
mov
aaa
std
popf
xchg
imul
xchg
or
cld
loope
stos
mov
xor
jno
inc
pop
mov
xor
pop
decb
ficoml
sbb
inc
adc
nop
jp
sub
enter
ret
lcall
push
xor
xchg
loope
out
cwtl
sbb
pop
sbb
out
jbe
mov
pop
xchg
insl
push
xchg
cs
idivl
add
and
xchg
sub
and
gs
shll
ja
clc
aad
daa
mov
cld
movl
mov
or
dec
mov
scas
in
gs
movl
nop
inc
pop
call
shl
xchg
sub
add
out
lret
jne
pop
aaa
mov
in
inc
adc
fstl
imull
sti
add
and
mov
fisubs
push
push
add
shlb
jno
negl
or
stc
into
test
mov
fidivrs
or
scas
cli
jns
adc
and
xchg
mov
dec
mov
and
sub
pop
pop
addr16
sbb
aas
aaa
pop
mov
sub
xor
jns
sub
lret
and
dec
cmc
aas
adc
loopne
jg
aad
sub
pop
not
adc
mov
fs
shrl
jmp
xor
in
jecxz
dec
jecxz
sti
ss
out
xchg
push
ja
test
inc
lods
les
mov
xchg
int
movsl
xchg
xchg
ja
loop
sub
inc
pusha
daa
push
gs
sti
std
push
leave
lahf
addl
bound
addb
mov
sub
hlt
cmp
inc
insl
inc
push
mov
pop
les
scas
push
cmp
sbb
cmp
enter
cmp
mov
and
ljmp
ret
mov
adc
ss
imul
test
dec
xchg
and
pusha
add
jle
outsl
stos
and
sbb
mov
ss
fsub
in
pop
loopne
inc
and
aam
iret
mov
cltd
out
sub
rcr
adc
daa
sbb
and
sti
dec
js
pop
lods
mov
jbe
pusha
imul
loope
pop
out
or
test
mov
aam
push
pop
sub
movsb
xchg
dec
xchg
aas
fcompl
pop
sbb
cmp
fcmovu
sub
cmp
sub
push
fisubrs
cmp
xor
jg
push
in
cld
or
std
mov
loope
lods
dec
mov
sbb
jbe
pop
int
std
mov
out
rcrb
movsl
mov
xchg
xor
jg
sub
rcl
cmp
or
hlt
xor
fstpl
popa
inc
pop
test
add
dec
mov
mov
cmp
mov
adc
sahf
aad
mov
xor
adc
leave
in
mov
mov
adc
xor
adc
das
adc
nop
nop
in
fsubrl
adc
mov
mov
mov
jbe
fdivrs
jmp
ds
dec
push
test
mov
testb
push
arpl
push
mov
cmp
mov
addr16
movsl
mov
xor
push
mov
test
test
push
xor
jne
xor
cs
cmp
xchg
daa
add
lds
aad
outsb
xor
xchg
in
push
jne
push
jbe
and
pop
dec
cmp
pop
mov
xor
pop
xor
pop
jg
sbb
cmp
add
iret
add
int
rcr
movsb
push
loope
push
adc
in
xor
push
or
push
xor
pop
popf
or
dec
adc
xor
jae
sahf
sahf
out
pop
pop
push
dec
mov
xchg
sbb
adc
aaa
mov
pusha
lcall
fisttps
cwtl
mov
pop
xchg
mov
pop
inc
jmp
sub
bound
xor
dec
cmp
rorb
add
add
fdivrl
mov
ret
pop
int
gs
jno
push
in
mov
call
xor
xchg
push
xchg
xchg
xor
sub
jl
sbb
insb
fstps
cltd
fcomi
pushl
out
aaa
push
and
adc
cmp
sbb
rcrb
mov
out
fdivs
jo
inc
lds
add
mov
push
in
lahf
mov
jl
mov
sub
sub
xor
inc
lret
xchg
bound
mov
pushf
xchg
pusha
jne
or
nop
dec
sti
in
orl
nop
call
divb
clc
repnz
lock
shll
fcmovbe
mov
dec
outsl
sbb
imul
add
insb
mov
lods
daa
push
pop
ljmp
outsl
jne
or
dec
xchg
cwtl
arpl
inc
ds
sbb
outsb
frstor
repz
adc
sbb
pop
push
or
lret
pop
in
lcall
cld
test
or
and
xor
push
adc
leave
enter
lock
fcomps
sbb
xor
adc
outsb
or
push
push
sub
jg
xor
adc
mov
sub
jae
lock
enter
mov
mov
testl
je
repnz
jae
call
xchg
push
ret
mov
sahf
fcmovne
fs
lret
dec
or
daa
arpl
nop
les
test
mov
iret
jno
mov
cmp
loop
repnz
xor
rcl
loope
and
test
sti
cmp
std
fs
lods
mov
dec
sub
and
dec
and
fmul
cmp
popa
ficompl
imul
test
sub
dec
popa
cmpsl
and
test
or
xor
mov
es
adc
mov
sti
sub
stc
aas
or
cs
mov
shl
popf
iret
jecxz
mov
mov
repnz
cmp
jmp
data16
mov
test
mov
ja
add
sarb
lahf
addb
mov
mov
pop
jge
insb
and
aam
cmp
rcl
adc
ret
mov
cmpw
ljmp
push
add
mov
xchg
xor
inc
pop
test
mov
addr16
ficoms
adcb
ljmp
push
shlb
pop
mov
push
jne
dec
outsl
add
or
sub
xor
pop
cld
add
icebp
dec
call
and
push
sub
dec
jbe
pop
in
jns
ss
addr16
cli
roll
pop
sub
and
cmc
repz
cltd
pop
imul
add
xchg
push
mov
imull
and
inc
loopne
stc
in
movsb
add
mov
stc
fistps
rcll
jns
cmp
xchg
pop
or
mov
jl
popa
push
es
jnp
jp
inc
insl
jb
test
hlt
test
dec
dec
sbb
mov
or
mov
push
int
aaa
nop
pop
loopne
outsl
add
das
xor
push
pop
xchg
lret
popf
aad
mov
push
fcomps
lret
push
fistpl
rcrb
lahf
sbb
push
in
data16
inc
lcall
sbb
leave
cmp
mov
xchg
fwait
pushf
xchg
aam
sbb
shll
mov
lret
shlb
pop
or
rolb
sbb
and
push
cmp
lahf
push
mov
rcrb
int3
pop
cmc
stc
push
push
or
mov
jp
shll
jnp
fndisi(8087
xchg
jge
cwtl
cmp
mov
xor
data16
mov
mov
sbb
mov
mov
jae
int
xor
repnz
sub
ljmp
sbb
repz
fstpt
adc
jmp
dec
jne
hlt
dec
aaa
push
push
out
xor
lea
pusha
mov
mov
dec
shrb
pop
leave
xor
adcb
jbe
mov
xchg
repz
mov
jno
dec
mov
sti
test
movsl
lahf
pop
adc
mov
or
nop
ljmp
cmp
inc
insl
int3
ret
mov
push
sbb
pop
mov
pop
pop
inc
das
push
rorl
jp
int3
jae
mov
sub
into
jmp
aad
jne
push
mov
outsb
sbb
lock
test
sub
data16
outsb
filds
mov
data16
in
mov
outsb
loopne
das
aad
imulb
and
mov
push
aas
sbb
out
testb
jo
lds
add
mov
sbb
cmpsb
xorl
out
fisubl
dec
stos
mov
mov
js
mov
dec
jnp
mov
cmpsl
into
jae
xor
mov
jbe
repz
adc
or
aaa
sarl
fcomps
and
enter
addr16
inc
fsubs
test
or
sbb
xchg
out
and
movsb
cmpsb
or
cltd
mov
jmp
mov
lods
movsb
push
loope
adc
js
aas
sub
clc
nop
lret
in
or
pop
test
shll
xchg
xchg
stos
jo
sub
sbb
sub
xorb
cmp
mov
loope
shrl
xchg
pop
xor
or
das
js
insb
push
pop
adc
jo
aas
inc
popa
cmp
add
loopne
fldl
xchg
xor
mov
sub
insb
sub
in
imul
insb
les
sbb
push
mov
jnp
cmp
jmp
ret
stos
stos
loopne
sub
xor
cwtl
add
mov
out
dec
sbb
pop
addr16
jmp
xor
out
dec
popa
aaa
inc
dec
sbb
pushf
outsl
sti
jns
stc
pop
xchg
xchg
xor
or
in
and
loope
sbb
or
insb
sub
pop
lea
pop
xlat
mov
incb
mov
push
lods
addl
dec
or
out
lret
cmp
loope
sbb
mov
or
mov
test
cltd
sub
add
jmp
aas
jg
adc
and
aad
jle
fstl
popf
adc
cmp
enter
nop
leave
xchg
fwait
jl
inc
push
in
call
outsl
movsb
adc
stos
cmp
mov
sbb
outsb
mov
push
mov
dec
std
out
aas
mov
icebp
add
je
jne
adcb
jmp
mov
mov
mov
mov
mul
cmp
loop
push
add
adc
inc
das
add
andl
mov
push
ret
mov
iret
cmpsb
xchg
aad
pop
lret
xchg
push
sbb
movsb
pusha
dec
popf
out
insl
xchg
sbb
clc
xchg
xchg
out
cmpsb
fimuls
push
sahf
adc
add
das
loop
test
pop
adc
or
push
les
jmp
sbb
cmp
sarl
add
sbb
pop
scas
pop
or
cs
jp
mov
clc
lock
jo
cmp
push
sbb
xor
dec
test
loop
xor
int3
push
ds
push
cmp
call
lods
call
out
rcll
loop
leave
ljmp
and
fdivr
dec
insl
or
das
rcrl
ja
push
call
stc
call
sub
add
scas
dec
xlat
adc
movsb
ja
mov
pop
into
pop
outsl
lret
push
mov
dec
sahf
adc
movsb
lea
icebp
push
in
lret
aaa
xor
repnz
xor
cmpsb
mov
cmp
pop
jne
push
stc
mov
mov
cmovo
test
arpl
es
insb
leave
scas
sbb
stc
popa
arpl
push
pop
adcb
imul
cmp
in
jmp
fldl
xchg
aad
jl
cmpsl
or
push
pop
mov
lcall
out
inc
xchg
js
jb
xchg
xor
xchg
mov
inc
xchg
jne
and
loop
push
out
fs
inc
add
ss
push
pop
xchg
xor
mov
adc
cmp
loop
out
dec
lret
add
push
push
add
dec
fsubl
icebp
lods
icebp
inc
fwait
nop
adc
cltd
mov
mov
pop
xchg
mov
repz
jb
std
sbb
call
xor
stc
into
pop
test
add
loope
mov
pop
or
stc
sbbb
pusha
inc
addl
hlt
push
and
lahf
outsb
push
dec
push
int3
sub
sti
mov
loop
cld
pop
and
ds
sti
movsl
icebp
cs
xor
test
xchg
lea
lret
cmpsb
mov
mov
testl
ljmp
clc
add
adcb
and
jp
adc
mov
or
in
es
sahf
cld
popa
mov
jp
cltd
bnd
mov
loopne
or
ljmp
push
add
rcrb
fcomps
xchg
ss
fwait
or
jl
inc
dec
add
in
or
mov
mov
pop
sbb
pop
shrb
pop
dec
lret
sub
lods
loop
push
push
pushf
xchg
ret
mov
xchg
movsl
repz
push
movl
jmp
sahf
ss
lahf
and
mov
xchg
cmp
mov
xchg
imul
mov
lcall
ret
mov
or
mov
adc
xchg
jl
rcl
gs
call
xor
mov
sbb
sbb
movsb
jg
xchg
jge
decl
adc
rorl
push
stos
scas
cs
jg
fiaddl
int3
xchg
shl
mov
cmp
cmp
out
into
cmpsb
fxch
fcmovne
and
xchg
pusha
movsl
out
outsb
lahf
dec
sub
pop
shr
cmp
push
push
xor
cmp
sti
mov
xor
aam
lock
jns
mov
xchg
sahf
leave
jb
push
mov
jp
out
fmul
xor
add
jecxz
sub
mov
das
push
or
sbb
mov
imul
test
jmp
lret
aam
iret
or
push
movl
sub
in
ds
pop
int3
int3
adc
cmp
adc
jecxz
sub
sti
or
wrmsr
xor
adc
pop
xor
mov
xchg
add
pop
pushf
sbb
push
rorl
xor
lret
xor
fnstsw
repnz
and
in
cmp
cmpsl
sub
int
stos
scas
or
xor
push
or
lods
testb
sbb
mov
or
adc
jnp
jns
and
das
jbe
dec
mov
mov
mov
call
or
hlt
mov
cli
inc
xor
in
fs
sbb
xchg
mov
mov
in
stos
mov
repz
lcall
dec
les
pusha
lds
mov
jge
or
add
aas
pop
push
cltd
into
out
hlt
shll
aad
dec
sub
or
mov
inc
or
mov
lea
gs
mov
push
mov
push
stos
mov
call
cmp
cltd
inc
cmp
outsb
mov
int
rcll
pop
pop
shl
add
aam
stos
sub
sub
pop
sbb
adc
sub
push
and
push
sub
gs
popa
imul
aas
repz
gs
add
cmc
sbb
jmp
xchg
xchg
mov
test
mov
mov
mov
sbb
mov
inc
rorb
push
rcrl
int3
jnp
repz
rcll
pop
dec
jle
push
mov
pop
into
push
pop
inc
jl
cmc
call
jg
inc
and
mov
and
pop
ret
outsl
filds
jno
sbb
bound
inc
insl
gs
ror
out
xchg
in
addr16
and
int
cmp
mov
xor
lret
test
insl
test
and
push
mov
push
xor
repz
test
inc
sub
pop
je
pop
and
push
mov
out
clc
adc
lods
fiaddl
out
sbb
jge
sahf
push
xchg
mov
sbb
mov
fdivr
xchg
jle
into
xchg
out
pop
mov
sbb
pop
mul
adc
mov
push
out
adc
push
cmp
aaa
lock
les
lds
in
dec
and
call
inc
leave
hlt
movsb
mov
and
test
push
lahf
cmp
mov
loopne
mov
ret
sbb
mov
jae
push
ja
xor
sub
mov
push
xchg
or
adc
ss
out
mov
pop
or
fs
cwtl
dec
pop
pop
cmpsl
push
inc
roll
push
daa
adc
lldt
arpl
jnp
call
fsubl
fdivr
movsb
add
pop
mov
sar
addb
lahf
in
or
in
jae
mov
movl
and
jg
popa
mov
dec
cmp
enter
out
lods
popf
adc
mov
negl
push
dec
sbb
pop
mov
jecxz
fwait
mov
xchg
mov
xchg
in
add
xchg
or
push
cmp
dec
aad
cmc
jo
movsl
jmp
add
cwtl
lcall
inc
mov
mov
scas
iret
ja
insl
imul
popa
fisubl
push
push
leave
inc
jmp
push
aam
leave
popf
inc
adc
loope
mov
fldl
xchg
outsl
fldenv
sti
jl
sbb
ret
hlt
mov
inc
add
mov
xor
xchg
lret
ss
sub
xchg
pop
mov
xchg
sarl
iret
lret
pop
push
mov
xchg
ds
jae
jbe
in
lahf
cmp
mov
and
notl
repz
lods
push
jnp
pushf
xchg
scas
popa
pop
arpl
int
cmp
jge
cmp
fstpt
xchg
es
xor
popa
shrl
fimuls
xor
mov
pop
gs
sub
cltd
dec
imul
or
daa
mov
sbb
stos
cld
fiadds
adc
pusha
and
adc
negl
add
inc
jg
test
adc
jmp
dec
cmp
sti
push
aad
mov
pusha
je
mov
fiadds
shlb
stc
rcr
fcmovb
jl
sub
mov
cltd
inc
loope
aaa
push
xorl
fdiv
nop
mov
add
movsb
in
push
cmp
xchg
das
fsubrp
out
inc
stos
push
popa
aam
sbb
adc
jmp
or
clc
cld
dec
cld
dec
xchg
pop
mov
cmp
add
rcrb
dec
push
daa
call
add
adc
lea
out
gs
movsb
or
add
adc
clc
shlb
push
sub
cltd
mov
int3
push
cmpsl
out
jns
mov
jae
insl
mov
cmp
test
pushf
cltd
test
andb
repz
mov
aad
jp
mov
mov
xlat
int
nop
jb
adc
dec
pusha
push
push
inc
xchg
daa
scas
mov
mov
pop
mov
repz
and
push
lcall
sub
cmpsl
mov
xchg
xor
imul
repz
inc
sub
lcall
adc
or
xchg
out
jl
add
or
imul
scas
adc
and
lds
test
jmp
jb
lods
mov
sbb
fwait
cs
fbstp
pusha
loopne
sub
or
pusha
mov
cwtl
push
lock
mov
xor
pop
jge
pop
jnp
enter
or
and
pop
push
cmpsl
sarl
ds
xorl
xchg
lcall
adc
push
out
hlt
sti
movsl
xchg
je
jle
lods
out
jmp
aas
rcll
ds
adc
mov
jmp
or
ja
call
xor
jb
movsb
lock
outsb
mov
jbe
sbb
outsl
movsl
add
inc
aaa
dec
lock
xchg
ljmp
xor
jl
lods
adc
xlat
sbb
mov
cmpsb
sub
pop
std
xchg
popf
std
iret
js
lods
mov
fcmovu
mov
adc
dec
push
dec
sbb
rorb
mov
insl
insb
pop
jnp
out
or
mov
cltd
gs
add
fbstp
mov
pop
jg
rcrb
adc
inc
aaa
adc
decb
inc
jbe
imul
and
mov
push
dec
clc
mov
push
adc
ret
inc
jg
or
mov
xor
movsl
jge
pusha
xlat
rorl
and
movsl
data16
or
ljmpw
pop
jne
add
lret
and
mov
xchg
es
das
insl
or
sbb
test
lcall
test
call
jmp
jnp
cwtl
scas
push
test
pop
jmp
sbb
gs
int
jbe
xor
std
cmp
push
fcmovne
out
imul
icebp
loope
xchg
pop
inc
hlt
mov
mulb
lds
mov
jae
loopne
mov
sub
aam
cmp
xor
jecxz
mov
xchg
lds
sbb
cs
and
xor
lcall
dec
pop
sbb
fistpll
pop
jp
pushf
loop
iret
sti
daa
add
or
xor
jg
jb
aad
mov
aad
xor
ds
outsl
add
xchg
ss
pop
loope
fisubl
jne
or
pop
xchg
faddl
lods
xor
cmp
in
dec
xchg
xor
pop
jge
sbb
add
subb
inc
jecxz
inc
and
jo
or
bound
mov
popa
add
xor
dec
inc
aas
in
add
xor
lahf
add
mov
jae
scas
repnz
aad
test
xchg
popa
add
fmuls
mov
and
mov
sahf
xchg
dec
xchg
scas
jo
mov
cmp
pop
xor
pushf
sahf
cmp
dec
into
aam
cld
pushf
xchg
push
cs
into
pop
in
shl
cwtl
push
shll
adc
dec
sub
es
mov
roll
xchg
sub
stos
push
mov
add
rolb
ja
add
daa
cmpsb
pop
stos
cltd
inc
stos
jp
repnz
sbb
outsl
pushf
orb
sahf
sar
adc
sub
push
adc
pop
adc
shl
scas
pop
repnz
lea
jecxz
mov
mov
xchg
popa
je
loopne
xor
jle
lods
cmp
and
lea
adc
les
vcvtdq2pd
mov
decl
enter
mov
lret
bound
inc
sub
lock
mov
aas
stc
sbb
dec
push
cld
xor
in
inc
dec
jae
pop
adc
push
or
sahf
std
push
aam
push
stos
lock
js
sbb
mov
push
ljmp
ret
rolb
jne
mov
hlt
mov
fucomip
int
cmp
push
mov
fcomi
inc
ss
addl
shlb
notl
scas
insl
mov
pop
xchg
mov
cmp
dec
out
inc
inc
sub
repnz
mov
push
cmp
stos
fcoml
adc
mov
inc
xlat
subb
arpl
int3
mov
mov
adc
mov
jp
imul
mov
mov
jecxz
push
stc
mov
mov
into
lods
sbb
push
lds
in
rcll
inc
jno
add
jae
xor
mov
mov
rep
add
jo
mov
std
add
filds
lret
out
fistpll
jge
xorl
mov
cli
or
jo
cmc
andb
lods
adc
add
jb
rolb
and
and
lock
cwtl
aaa
cmpsb
pop
cmp
cmp
lock
add
cmc
loope
inc
mov
das
xchg
pop
adc
fbstp
dec
pusha
repnz
dec
insl
dec
or
call
stc
shrl
imul
xor
adc
lret
inc
push
push
mov
in
repz
ret
daa
pusha
xchg
dec
popf
enter
in
sti
adc
sti
pop
in
roll
cmp
flds
orl
xchg
pop
pop
pop
pop
sbb
shll
mov
adc
sub
pop
gs
xchg
imul
mov
sahf
jo
js
aam
in
mov
scas
mov
dec
inc
fisubs
push
xor
popa
movsb
dec
sub
call
cmp
jnp
inc
jae
fwait
in
inc
test
imul
outsl
out
sbb
inc
out
dec
sub
divb
lret
leave
push
jle
push
xchg
mov
leave
mov
sbbb
insl
cmp
imul
enter
lret
jnp
add
push
fidivrs
mov
mov
repnz
pushf
add
out
mov
mov
outsb
xchg
outsb
or
and
incb
xor
adc
or
jo
sti
lret
jge
aas
call
sub
rol
mov
and
popa
into
in
add
leave
clc
mov
mov
jns
sbb
pop
pop
pop
inc
sbbb
cmp
adc
repnz
cmp
cmp
in
into
ret
mov
jno
or
sbb
cmp
cmp
popa
cmpb
and
mov
sbb
and
inc
dec
je
add
push
mov
mov
enter
push
icebp
insb
pop
push
mov
outsb
bound
pop
mov
jns
jmp
jl
mov
pushf
fidivl
sti
dec
fnstenv
in
lcall
cmc
adcl
into
add
dec
notb
mov
aad
aam
stc
cmp
add
mov
inc
lcall
sub
repz
iret
imul
jecxz
and
pushf
lods
pop
lods
shlb
data16
rcrb
push
shl
jae
les
mov
push
shl
and
pusha
lds
out
inc
cmp
sub
subl
stc
mov
sbb
lret
das
jbe
cs
repz
ja
cmp
ret
mov
clc
icebp
jl
subl
in
orl
pushf
xor
cmp
cmp
mov
pop
sbb
xchg
sub
push
lahf
or
adc
mov
and
je
adc
out
mov
cmp
movsl
mov
iret
rcrl
js
lcall
imul
js
mov
push
mov
das
sbb
xchg
out
nop
and
fidivs
sub
cli
mov
adc
imul
gs
xchg
xchg
nop
sub
xchg
jo
push
inc
out
imul
loop
lock
mov
jno
dec
or
repz
mov
cmc
lock
ss
aam
jg
pop
rol
jno
inc
sub
int3
jmp
push
push
push
pop
xchg
pop
jb
xlat
addr16
pop
sub
lret
pop
lea
movsl
dec
pop
call
add
inc
pop
add
into
aad
add
sbb
mov
sub
lcall
or
jp
divl
out
fmul
movsl
mov
repz
in
sti
fldenv
cltd
inc
or
adc
xchg
push
mov
lea
inc
or
loopne
xchg
dec
inc
and
add
mov
decb
sbb
pop
inc
rcl
xchg
fcoms
cmpsl
aaa
push
sub
cmp
push
movsb
cmp
imul
sahf
jle
dec
inc
and
dec
aam
in
les
cmc
fdivrs
mov
sbb
push
das
insb
aas
mov
pop
add
scas
ret
push
bound
sarl
shlw
repnz
sbb
in
mov
dec
xor
lods
mov
in
bound
xor
mov
imul
lea
sarb
mov
outsl
sbb
rcr
sub
cmp
xor
outsl
and
push
push
je
pop
sbb
out
lds
push
cmp
loope
jo
mov
dec
lock
jg
push
jl
insl
mov
int
push
pop
push
xchg
faddp
das
pop
lods
mov
jp
ljmp
cwtl
arpl
fucomip
sub
sub
std
jo
fisttps
rclb
inc
push
push
sar
rcrb
fcompl
and
loopne
push
lcall
xlat
cmp
jg
add
xchg
or
xor
jmp
sbb
in
jno
pop
into
xor
notb
xchg
shlb
sbb
dec
inc
xchg
pop
jne
inc
sysenter
fwait
or
iret
repnz
pop
daa
mov
fstps
mov
andb
ljmp
ret
sbb
scas
divb
iret
rcrl
ret
fwait
push
fucomip
je
push
jle
cli
jbe
push
xlat
adc
mov
sub
fwait
loope
xchg
pop
lret
ljmp
sub
mov
xchg
mov
and
loopne
sub
pop
fildll
cltd
xchg
push
sub
xchg
je
cmp
insb
inc
jmp
xchg
mov
lret
add
sub
jne
jl
or
std
jg
lcall
dec
or
dec
inc
mov
jae
push
dec
mov
enter
cmc
pop
mov
in
lods
dec
push
popf
call
insl
ds
stos
lods
movsb
test
ss
jne
sub
mov
pop
cli
sub
cmp
subb
lea
push
adc
sub
fnstcw
ss
sub
sarl
arpl
mov
jns
test
test
repz
pop
in
das
pop
sub
jb
sti
mov
iret
xchg
mov
int
inc
mov
lea
or
lods
arpl
jae,pn
leave
pop
das
jns
data16
pop
lcall
dec
jnp
or
mov
pop
outsl
test
sar
mov
inc
xchg
sbb
and
fcomps
or
inc
movsl
pop
mov
sub
outsb
fisttpl
ret
imul
rcrl
out
mov
sbb
loope
movsb
xchg
xor
js
fldt
add
push
mov
mov
inc
js
sub
xchg
cmp
into
call
lahf
push
idivl
xchg
je
mov
sahf
jns
outsl
or
outsb
sbb
ss
movsb
push
into
inc
sbb
lds
mov
dec
xchg
into
inc
xchg
xchg
cmp
xchg
or
iret
inc
or
jl
dec
mov
rcll
cmp
and
mov
into
or
xor
loopne
imul
sahf
pop
mov
cmc
stos
push
mov
dec
in
xor
jbe
ljmp
push
aad
clc
out
add
sahf
inc
pop
ss
call
adc
lods
xor
push
adc
inc
inc
inc
sbb
jg
push
or
or
push
mov
lods
and
xchg
aaa
inc
dec
test
fildll
mov
loopne
cli
popa
jecxz
or
test
ret
popf
in
xor
movsb
sub
push
fcmovbe
fildl
sahf
dec
fdiv
rcrl
add
cmpsl
scas
dec
cmc
rcl
int
hlt
sbbl
repnz
adc
lods
xchg
mov
pop
ja
dec
sti
lods
push
int
sbb
inc
xlat
push
pop
mov
in
fiadds
xchg
cs
cli
fdivrs
push
dec
dec
mov
add
outsl
test
mov
fnstenv
out
pop
outsb
hlt
xchg
mov
ja
scas
jmp
popa
cmp
jne
cld
cmp
xor
cmp
jmp
pop
aam
out
jl
inc
test
inc
xchg
push
fidivrl
dec
jl
rcrl
rolb
sub
sbb
test
xor
add
add
add
mov
dec
stos
mov
adc
adc
in
repz
js
scas
popa
inc
push
frstor
fiadds
xchg
fadds
in
cltd
and
je
adc
std
ljmp
cmp
bound
cmpl
dec
sub
shrb
pop
mov
ret
jno
mov
lcall
addb
adc
insb
notb
out
loope
cwtl
jns
test
stc
fs
aad
mov
xchg
push
add
repz
repnz
push
or
push
jge
dec
mov
sbb
test
adc
jb
cmp
push
push
loopne
bound
add
jp
inc
std
xlat
jae
push
mov
mov
sub
dec
mov
pop
push
push
in
out
mov
xor
stos
dec
xor
aas
cmpsl
test
cmp
mov
sarb
cmpsb
push
outsb
and
and
gs
bound
adc
cmc
push
inc
pop
and
mov
roll
movsl
loop
rolb
pop
js
movsb
iret
mov
fidivrl
pop
shl
mov
cld
adc
lock
jmp
mov
push
add
fwait
add
test
mov
push
pop
dec
and
mov
popf
dec
pop
push
je
xchg
aam
fs
int3
jns
mov
xchg
adc
push
jnp
jmp
and
pminub
and
aam
fcmovne
loope
xor
cld
and
fldl
stc
jmp
shrb
lods
pop
ja
inc
push
jb
push
lods
cmpsb
cmp
jno
and
inc
mull
jo
push
mov
std
cmc
sbb
cmp
setns
cmp
ds
shl
push
push
xor
inc
xor
sub
push
je
cmp
xor
mov
dec
and
sti
pop
jae
sub
xor
jecxz
push
and
loop
lcall
pop
ss
call
xchg
pusha
push
push
inc
fnstcw
jle
dec
or
mov
adc
adcb
cmp
mov
sub
aad
dec
jno
mov
ss
in
mov
push
xchg
ret
or
add
lea
dec
mov
test
push
out
add
jecxz
jns
inc
cmp
push
sub
aas
push
lods
pop
jno
rorb
pushw
and
cmp
pushf
pop
and
imul
insb
sub
das
adc
daa
out
scas
add
ret
std
popf
aas
dec
inc
push
jge
int3
jo
sbb
hlt
call
add
fstpl
fisttpl
out
mov
mul
cmovns
adc
cwtl
test
sbb
and
insb
insl
xor
mov
and
insb
xor
mov
jae
jo
or
filds
lods
bound
cmp
loop
sub
dec
stc
sbb
or
shrb
jge
mov
data16
push
adc
add
cmp
xchg
add
inc
xor
dec
rolb
xchg
lcall
mov
adc
clc
sub
add
cmp
lock
or
loope
add
outsl
repnz
push
out
pusha
test
jnp
cmp
movsb
addr16
jg
adc
insb
stc
movq
adc
jo
push
pop
mov
mov
mov
adc
shrb
inc
push
lock
fwait
fwait
pop
incb
adc
and
shlb
mov
lods
std
insb
push
repz
mov
mov
sahf
pop
pop
gs
fs
fnop
mov
dec
mov
add
bound
lret
je
cmc
orb
stc
cli
repz
mov
inc
pusha
nop
incb
popf
je
dec
push
dec
cmp
call
sub
lret
sbb
mov
icebp
jle
push
cmp
sbb
out
outsb
rolw
cld
ds
cmp
xchg
sbb
roll
or
adc
in
xor
sub
call
in
popa
mov
lret
or
add
loope
add
cmp
lods
stos
sbb
mov
push
movsl
xchg
xor
push
push
aaa
jne
adc
fistl
int3
fwait
out
push
mov
jno
cli
jmp
add
push
fildll
sub
sbb
mov
mov
out
fstl
mov
out
ficoms
loope
ret
jno
subl
add
adc
gs
into
pop
jo
sarb
movsl
jne
test
int3
adc
or
mov
add
daa
mov
dec
aaa
in
pop
ret
out
push
stos
push
mov
std
mov
shll
push
lea
imul
fucomi
loop
mov
mov
dec
xchg
lock
pop
call
jmp
cli
push
inc
push
push
ljmp
xchg
hlt
icebp
lret
lods
ret
push
adc
repnz
jg
push
sbb
jnp
mov
outsl
movsb
fidivs
cltd
lret
std
loopne
dec
fildll
jp
iret
fistl
inc
cmp
pop
cltd
lret
xorb
push
push
pop
data16
or
pop
jl
sbb
adc
cmpsl
mov
sub
adc
mov
mov
cmp
mov
jne
add
mov
xchg
hlt
xlat
jecxz
jmp
xor
pop
pop
test
mov
pop
push
daa
jl
in
or
xchg
insl
fs
sbb
mov
inc
insl
sbb
or
call
push
fadds
in
lds
add
loopne
mov
jle
ljmp
ja
in
xchg
popa
xor
ds
idivb
add
push
pop
int
cli
das
cmpsl
or
add
cmp
sbb
aam
pop
inc
jl
push
mov
jno
fs
dec
cmpsb
jbe
bound
dec
in
sbb
xchg
icebp
in
push
xchg
idiv
xor
mov
mov
or
lock
cmpsl
cmp
insb
add
pop
std
inc
mov
dec
pop
sarl
xchg
lods
fidivs
out
push
mov
ficoml
sahf
cld
out
add
xor
mov
add
fucomip
jbe
aas
cli
mov
in
orb
jno
cs
adc
pusha
xchg
cmp
jbe,pn
jae
xor
ret
pusha
std
lret
repnz
xchg
lods
stos
in
pop
xchg
mov
test
addl
push
sti
fcoms
sbbl
jg
ss
mov
cmp
nop
int
xor
sbb
add
and
cwtl
push
sub
pop
in
lret
and
jle
sub
shlb
dec
scas
pusha
pop
cmp
aad
jne
jl
jb
mov
xorb
dec
mov
mov
inc
xchg
mov
lret
fincstp
adc
ret
lods
sbb
movsb
mov
push
jnp
fistpl
sbb
ljmp
pop
lahf
adc
jg
xlat
decl
hlt
loopw,pt
inc
lcall
in
xorb
insl
in
jecxz
push
scas
adc
cwtl
ret
sbb
or
faddl
mov
fsubl
dec
xor
into
gs
out
hlt
int
icebp
adc
lcall
jle
int3
sahf
adc
pop
jecxz
test
or
in
adc
rcrl
jns
cld
cld
les
jae
pop
dec
fs
ja
push
enter
adc
sub
and
sub
sub
mov
xchg
faddl
test
fisttps
mov
push
push
xchg
rol
mov
mov
gs
cmp
push
bound
pop
jmp
sti
inc
mov
cmc
sub
scas
enter
adc
cmpsb
mov
scas
mulb
dec
test
shl
xor
and
cmp
in
push
outsl
mov
inc
lods
adc
add
adc
mov
movsb
pop
test
mov
adc
nop
xor
adc
fisubl
test
loopne
dec
aas
lcall
fsubrp
mov
dec
std
or
movsl
xor
sbb
shll
mov
movsb
aaa
dec
mov
hlt
dec
enter
xchg
or
das
or
in
or
shrl
in
outsl
lahf
jb
clc
outsb
in
mov
aad
popf
mov
arpl
flds
dec
mov
lds
mov
sahf
dec
pop
imul
cmpsl
aam
into
aam
dec
jae
jno
adc
or
mov
ds
in
jb
enter
je
pusha
subb
insb
int
add
inc
ljmp
jecxz
call
add
nop
mov
add
ficomps
inc
xchg
jae
test
dec
repz
sub
xor
fdivs
in
icebp
cmp
jg
popa
pop
les
jne
or
dec
push
pop
sbb
out
dec
pop
lret
lds
inc
jbe
push
lcall
cmp
addr16
sub
mov
xchg
mov
mov
jmp
je
andl
js
inc
icebp
mov
and
mov
dec
das
pop
fcompl
repz
jle
in
dec
adc
and
xchg
cmpsl
mov
pop
sub
movl
or
out
xchg
xlat
das
mov
loope
jmp
icebp
xchg
mov
mov
sbb
cmp
dec
pop
in
push
fcoms
pop
test
gs
daa
mov
ljmp
push
icebp
add
lea
popa
ds
out
dec
jp
sub
pop
mov
sbb
cmp
insb
cmp
xchg
xchg
xchg
jle
sbb
xchg
add
mov
mov
inc
rcrl
test
dec
shrl
fwait
out
bound
fwait
outsl
sbb
enter
xchg
mov
pop
push
test
xchg
sbb
fbld
cmc
repnz
les
push
loop
inc
xchg
int
mov
pop
push
stos
shl
push
pop
aam
icebp
inc
cmp
push
pop
add
shlb
stc
push
or
lret
mov
call
cmpb
pop
or
out
pop
adc
sbb
adc
add
sbb
loop
cmp
loop
push
mov
mov
je
stc
cmp
jo
xor
loop
popf
and
mov
test
and
movsb
mov
and
adc
out
cmp
or
and
test
jge
iret
adc
xchg
mov
imul
push
mov
xchg
push
je
mov
ret
adc
sbb
xchg
in
or
push
cli
pusha
insb
fs
xchg
push
out
add
mov
outsb
loop
fwait
pop
lds
leave
scas
jg
xchg
sub
mov
jl
mov
loopne
lret
test
jge
or
fst
xchg
cmpb
pop
or
lea
jns
sbb
jnp
mov
xor
jb
pushf
lcall
adc
mov
cmp
das
cmp
jle
dec
je
in
popa
xchg
xor
jbe
inc
xor
decl
ror
sbb
jge
xchg
mov
xor
push
pop
push
jno
mov
icebp
scas
inc
mov
adc
cmp
faddl
adc
repz
adc
pop
es
icebp
push
mov
dec
jl
loopne
lret
jle
or
adc
xorb
pop
mov
cmp
or
mov
jmp
mov
lds
inc
xchg
jnp
push
scas
jns
mov
divl
inc
daa
lret
and
and
xchg
arpl
adc
inc
sbb
push
sbb
lods
mov
adc
dec
mov
xor
test
xchg
xchg
dec
xchg
add
cmp
repnz
imul
inc
jbe
mov
arpl
fiaddl
js
pop
push
xor
push
inc
fptan
jmp
inc
xor
lods
mov
pop
out
mov
add
jle
fs
adc
movsl
xchg
xor
mov
ret
sahf
js
loop
xchg
sub
stos
adc
inc
nop
pop
stc
sbb
test
adc
loopne
add
movsl
inc
inc
xor
cmp
mov
lret
scas
jmp
push
jno
imul
xchg
aaa
sub
jb
jge
cmp
xchg
xor
dec
dec
scas
lret
jnp
out
push
adc
sbb
and
icebp
sub
xor
mov
mov
or
jns
sti
insb
adc
dec
out
sbbb
or
dec
fs
adc
lret
ja
mov
in
and
mov
mov
jg
mov
test
push
shl
insb
mov
jl
arpl
pop
cmp
dec
aam
aaa
dec
mov
lahf
push
js
xor
dec
xor
pop
mov
cmp
and
lret
data16
push
adc
js
inc
mov
test
daa
pusha
lcall
imul
in
arpl
jno
dec
ss
sub
and
mov
dec
adc
cld
pop
dec
nop
ror
push
out
pop
imulb
jnp
mov
push
in
ss
xchg
fdivrs
fisttps
dec
mov
and
dec
mov
and
shrl
mov
xor
shl
sbb
jae
movsb
sbb
nop
push
clc
fstps
stc
loope
lcall
ja
gs
push
into
push
xor
ljmp
cmc
scas
mov
ss
adc
xor
jbe
jno
xchg
mov
test
xor
scas
jge
add
inc
mov
push
mov
mov
cmp
push
sub
xchg
ljmp
inc
xor
push
mov
pusha
add
mov
push
jne
push
pusha
movsl
or
mov
adc
adc
cwtl
ljmp
pushf
mov
data16
lea
push
add
jnp
sbb
repz
sub
or
cmp
lods
jae
repz
pushf
cmp
cmp
addr16
mov
mov
loopne
loopne
movsb
shrb
jg
xor
out
aaa
das
cld
call
loopne
inc
lahf
jns
mov
aad
daa
enter
add
ja
and
push
push
aad
into
mov
mov
movsb
jo
rcll
std
xchg
enter
xchg
pop
cmpsl
ret
mov
push
inc
xchg
out
out
dec
push
fstpt
inc
push
pop
xchg
dec
movsl
pop
daa
lcall
push
repz
mov
pop
outsl
lcall
fdivs
push
gs
js
in
jbe
cmp
icebp
adc
rclb
loop
add
ret
inc
aam
scas
mov
mov
pop
mov
mov
in
ja
sub
call
clc
cmpsb
ret
cmp
out
loop
mov
shll
mov
sbb
in
daa
pop
push
adc
ds
imul
in
aaa
repnz
push
jge
xor
notl
mov
adc
xor
in
clc
jae
arpl
lods
inc
cmpb
dec
sarl
mov
add
stc
fwait
clc
repz
push
inc
push
fnsave
cmpl
push
lds
ljmp
mov
adc
add
push
daa
mov
aam
push
inc
mov
jp
push
jle
mov
dec
and
roll
enter
xor
jne
pop
sbb
js
sbb
and
and
pop
lods
in
fisubs
sub
and
mov
sbb
mov
cmp
leave
jmp
fs
inc
cmp
sub
adc
ror
or
popa
add
in
and
jb
frstor
jb
inc
fisttpl
adc
push
decl
jb
push
test
adc
push
sub
scas
add
and
jl
pop
push
pop
mov
sub
rorb
dec
loop
out
cli
addl
inc
sub
mov
dec
push
leave
adc
in
adc
loopne
xchg
imull
movups
sbb
jmp
shl
cmpsb
roll
push
push
movsb
jl
and
jnp
insl
mov
mov
loop
outsb
out
cmpsb
int3
shl
scas
xchg
into
pop
xchg
cmpsb
push
mov
xchg
out
add
cli
mov
es
and
jmp
bound
jge
out
xor
inc
lret
mov
or
xor
in
mov
sti
and
ret
nop
xorb
sbb
call
fcoms
into
pop
test
jns
sub
cmp
xor
push
mov
dec
mov
add
xchg
and
pop
notb
adc
leave
aad
outsl
test
and
stos
pop
aad
push
or
xchg
js
push
fisttps
fstpt
pop
add
arpl
sub
ds
loopne
mov
jne
cmpb
pop
daa
push
mov
jmp
pop
icebp
faddl
int
jne
jns
cmc
scas
push
and
push
cmp
das
icebp
cli
dec
dec
mov
aad
cmpsb
mov
lods
ljmp
xchg
neg
mov
mov
push
ja
pop
inc
mov
je
cmpsb
sub
jae
xor
dec
stc
jp
cmpsl
aam
lods
xchg
sbb
adc
popa
stc
clc
xchg
inc
lods
lock
adc
xchg
add
inc
xchg
xchg
mov
movb
fsub
test
jnp,pt
sub
addr16
mov
adc
xlat
mov
push
mov
inc
sub
push
dec
clc
ja
mov
cs
and
es
jmp
es
pop
adc
lret
and
repnz
movsb
mov
int3
inc
inc
jl
inc
xor
imul
addr16
clc
mov
das
lods
xlat
push
xor
sub
out
js
inc
dec
cmpsl
dec
inc
pop
jp
adc
int
mov
leave
mov
pop
dec
mov
icebp
inc
dec
mov
ret
es
jbe
insb
or
mov
pop
nop
jg
loop
pop
push
inc
or
fstpt
inc
nop
or
lcall
sbb
mov
push
push
adc
adc
loop
ds
mov
jns
sbb
ds
add
lds
mov
in
and
sbb
mov
cmp
lahf
mov
or
xchg
lds
in
movsb
in
cmp
add
test
jne
add
push
dec
lret
pushf
xchg
test
popf
mov
movsb
sbbl
dec
jg
pop
mov
xchg
imul
or
and
divb
cmp
pop
add
insl
test
push
mov
xchg
lea
cmp
sub
adc
mov
mov
mov
sarb
cltd
inc
shlb
fs
popa
lods
inc
add
jmp
xor
dec
mov
and
fwait
sarl
sbb
mov
aam
jns
loope
loope
hlt
testl
mov
sbb
push
jle
adc
push
call
mov
or
sbb
cli
cli
mov
mov
cmp
jle
lret
jle
add
outsl
stos
popa
adc
sub
dec
fmull
testl
clc
stc
mov
in
push
xchg
pop
inc
pop
xor
mov
iret
pop
mov
sti
cmp
scas
push
jo
scas
stc
sbb
movb
out
pushf
test
adc
jmp
sub
in
fstps
mov
xor
ljmp
jae
imul
or
inc
nop
adc
ficoms
lret
les
xchg
pushaw
push
sub
add
push
insl
jl
mov
mov
fidivs
addr16
ja
and
fsubl
xor
jo
outsl
repnz
push
add
sarb
mov
mov
cld
mov
xor
mov
xchg
jl
push
mov
imul
call
add
ss
je
xchg
sbbb
dec
sti
pusha
rcl
clc
stos
jecxz
mov
in
pop
outsl
inc
adc
iret
push
pushf
loopne
and
fdivs
and
push
out
adc
sub
xchg
xchg
xor
das
divb
fcoms
in
arpl
or
push
fnsave
add
jbe
mov
cmpsl
pusha
mov
sub
mov
push
iret
inc
das
sub
pop
daa
repz
and
sti
dec
mov
in
mov
cmpsb
xchg
int3
xchg
jp
rdpmc
roll
mov
repz
adc
in
mov
mov
loope
test
mov
movsl
repnz
cs
das
adcl
lods
scas
mov
and
sub
mov
push
cmp
cmpsl
sbb
call
sbb
scas
sub
inc
jl
jne,pn
fdivrl
and
lret
cmp
fnstenv
and
test
sub
int
ja
mov
fdivl
mov
lds
andb
push
fadds
dec
pop
ss
cwtl
movsl
xchg
jno
jle
jb
dec
popf
or
cwtl
rcrl
mov
mov
pop
dec
mov
rol
int3
les
push
xchg
dec
decb
cmp
and
xchg
dec
stos
ds
shrl
pop
jle
ljmp
or
outsb
ss
icebp
jmp
test
jns
dec
push
xor
fsubs
mov
sti
inc
cli
aas
es
jae
lock
ljmp
pop
loop
repz
js
out
cmp
lret
insl
test
out
sub
jmp
insl
insb
xchg
sbb
in
sbb
nop
scas
dec
pop
lds
pop
loope
inc
arpl
insb
xchg
test
adc
xchg
push
shl
add
int
scas
mov
cmp
sub
out
xor
shlb
lods
incl
loope
mov
lods
inc
jns
imull
aad
adc
test
inc
test
pop
cli
in
scas
sbb
push
negl
push
jge
or
mov
or
pop
xchg
data16
iret
add
add
xor
in
mov
add
ret
xor
repnz
adc
flds
mov
test
std
and
out
vzeroall
in
fldenv
inc
movsl
add
inc
and
popa
shlb
xlat
inc
xor
mov
jle
je
in
sub
js
xor
cwtl
jmp
push
push
das
adc
outsl
jmp
imul
push
loop
mov
icebp
es
out
mov
lcall
push
mov
ljmp
dec
xor
dec
mov
mov
and
pop
mov
imul
pop
xor
mov
mov
or
adc
mov
adc
orb
out
mov
iret
cmp
mov
pop
push
lret
fsubrs
push
push
pushf
add
jp
les
add
sbb
gs
cmp
or
push
inc
xchg
jae
jne
push
sbb
or
lret
dec
ficomps
cmp
and
add
pop
frstor
in
push
out
push
mov
add
push
sti
in
ja
lahf
pushf
rolb
repnz
push
ss
dec
jo
add
testb
adc
adc
jge
xchg
xor
imul
out
push
lret
add
es
in
xchg
loopne
xchg
sub
or
adc
mov
mov
sub
mov
call
inc
xchg
sbb
jmp
hlt
cmpsl
add
sbb
lods
adc
in
cmp
add
stos
mov
push
pop
push
shlb
dec
push
cmpb
jb
push
cmpsb
jno
outsb
cli
aas
push
ret
push
adc
mov
jl
push
mov
jle
insl
xchg
push
pop
les
jno
and
dec
fisttpl
mov
and
scas
and
scas
and
add
fsubl
push
cmp
inc
fsubs
inc
jl
mov
or
insl
jne
int
hlt
sahf
xchg
jnp
data16
xchg
pop
cmp
je
sbb
imul
mov
mov
jbe
call
movsl
jg
sub
jb
xchg
lcall
mov
in
lcall
mov
cld
pop
xchg
dec
mov
in
pop
pop
mov
cmp
push
xchg
add
shrl
jne
mov
dec
cmp
movsb
push
jno
jns
mov
xchg
and
repz
xchg
mov
pop
sbb
out
pop
and
jmp
je
daa
andl
inc
cld
and
sub
add
cmp
fucomi
out
cmpl
mov
test
and
les
movd
cld
int3
lock
cld
inc
jle
icebp
push
lret
mov
jo
cmp
test
push
test
sub
dec
mov
fwait
ljmp
clc
push
adc
lret
imul
xor
inc
pop
mov
xor
add
stc
mov
ja
fiadds
mov
adc
cmp
mov
loope
ja
xor
push
jno
mov
insl
jmp
or
xor
add
xchg
xchg
testb
adc
push
push
mov
dec
pop
adc
int3
cwtl
cli
sbb
nop
das
mov
cld
movsl
lahf
test
mov
jnp
cmpsl
ss
mov
testl
cmpsl
push
out
sbb
daa
mov
jg
xor
and
repnz
das
hlt
lahf
cmp
sbb
xor
imul
dec
insb
out
add
test
in
mov
sti
fsts
dec
and
xchg
or
xchg
dec
sti
xlat
call
push
loope
add
mov
mov
xchg
sub
inc
mov
lret
pop
jns
scas
lcall
js
ret
dec
and
movsl
hlt
xchg
lds
add
cmp
dec
fdivrl
xor
inc
sbb
notb
es
pop
jmp
xchg
stos
repz
mov
push
add
popf
test
ret
ljmp
dec
pop
mov
push
scas
aaa
pop
jg
inc
lret
mov
ja
outsl
jecxz
les
jb
insl
test
aas
andb
mov
mov
or
jnp
out
movsl
dec
push
push
fwait
push
out
out
lods
lea
aaa
or
jl
rcrb
cmp
push
sub
shrb
jno
mov
or
daa
daa
cli
or
xor
stos
sbb
fdivrl
mov
aad
adc
out
pusha
lcall
negl
jne
push
out
cmp
vmread
out
gs
mov
mov
add
or
adc
adc
jnp
idivb
sub
add
cwtl
xor
inc
lcall
xchg
or
mov
test
mov
lods
mov
icebp
mov
dec
int3
mov
sbb
sbb
lock
sbb
es
mov
sub
and
or
sbb
or
sbb
or
add
push
rolb
fidivrl
pusha
cwtl
pop
dec
xchg
pop
js
xchg
jnp
rcrl
jmp
mov
rolb
cli
lret
adc
movsl
pop
push
out
mov
mov
xchg
testb
adc
in
cmp
ficoml
pusha
push
jmp
fimull
rcrl
pop
icebp
into
mov
pop
lods
sub
inc
sub
xor
dec
call
pop
lret
pop
dec
mov
sbb
add
xchg
push
outsl
movb
imul
fisubl
sub
jmp
xorb
gs
jae
adc
add
ret
out
mov
mov
fcompl
ljmp
jle
pushf
mov
notl
lods
and
in
and
nop
push
dec
sub
or
scas
cmp
adc
imul
in
sahf
xor
push
cmp
or
cltd
aam
inc
cmp
mov
dec
dec
push
jmp
or
clc
loope
xchg
fdivr
cmp
dec
jo
pop
cmc
xlat
dec
and
pushf
pop
pop
enter
leave
or
mov
cmp
jb
out
fsubs
xchg
or
sub
xchg
test
mov
call
negb
fcoml
jbe
sub
fiadds
arpl
pusha
jb
pop
or
xchg
imul
mov
into
sub
stos
xchg
cwtl
in
ds
sub
ds
push
push
xor
pop
cmc
push
inc
xchg
stos
test
lret
or
inc
imul
jmp
xchg
jle
mov
adcl
in
out
add
cmpsl
enter
lods
sarb
subl
cmp
add
or
dec
xor
test
xlat
out
out
sarl
xchg
sti
mov
cwtl
xchg
mov
and
pop
in
cld
jp
roll
jl
xorl
nop
or
addl
call
test
gs
mov
and
jecxz
push
mov
idivl
icebp
in
out
pop
inc
jo
mov
int3
scas
xor
pop
lcall
jne
std
popa
mov
dec
xor
xlat
push
mov
out
addr16
pop
aam
int3
add
ret
rcrb
fsubrp
jmp
stc
test
test
cmpsb
xchg
jne
mov
lds
fdivrs
out
push
bound
xor
ljmp
cmc
mov
inc
mov
mov
add
int3
ljmp
pop
push
lcall
addr16
iret
pop
loop
js
mov
sarl
in
cmpsl
jl
insb
xchg
inc
cltd
xchg
mov
call
enter
pop
xchg
add
dec
push
or
sbb
pop
mov
fisubs
in
popa
dec
divl
add
mov
fst
xchg
sub
cli
sti
mov
xor
xchg
push
pop
int
and
sbb
jle
cld
bound
inc
lods
sahf
adc
push
lods
insb
cmpl
ficompl
psllq
lret
mov
popf
cs
sbb
subl
xchg
jne
int
sbb
sbb
arpl
mov
push
push
or
mov
push
push
push
pop
or
scas
pushf
and
add
test
ret
xchg
xchg
sbb
sbb
xor
and
mov
or
jmp
push
sub
test
call
and
pop
push
andl
cltd
movsl
or
addr16
hlt
push
test
sub
push
lods
leave
pusha
out
leave
inc
mov
jg
int3
jno
daa
push
inc
es
xor
mov
or
add
pusha
xchg
sbb
icebp
add
aam
out
rorb
sbb
xlat
mov
and
mov
popf
xor
jmp
das
ljmp
dec
rcll
dec
sbbb
mov
aaa
movsb
popl
cmpsl
leave
adc
xlat
movsl
push
cmc
adcl
nop
fildl
rcll
addb
fcoml
shrb
flds
mov
ds
aad
in
repz
mov
sbb
les
xchg
sbb
lods
enter
popa
or
stos
mov
ficompl
enter
push
jle
loope
adc
dec
fsub
rcrb
jbe
in
into
mov
or
adc
jecxz
je
adc
insl
adc
fucomip
pop
fidivrl
loope
call
das
stos
fdivs
stos
push
sbbl
dec
lea
pmaxub
fsubl
repnz
mov
daa
out
in
leave
cmp
cmp
ss
jmp
loope
lret
jl
test
mov
movsl
inc
outsb
cmpsb
std
pop
push
stos
pop
outsb
scas
stos
jle
push
push
das
or
cld
ret
dec
xor
call
arpl
pop
popa
add
aad
mov
sub
and
jbe
sub
push
push
stos
jp
xlat
daa
sbb
shlb
sbb
xor
mov
inc
adc
xor
pop
loopne
popf
cmp
inc
outsl
or
shlb
movsl
cmp
shlb
repz
pop
fidivrs
aaa
jge
jl
cmp
insl
bound
loopne
mov
sbb
mov
mov
cmp
mov
out
inc
shrb
cmp
mov
cmp
pop
jne
inc
mov
push
ret
scas
cmpsb
dec
mov
inc
jg
iret
pop
int3
dec
jle
push
jmp
enter
pop
jno
rcl
xchg
fldcw
cmp
sub
negb
subl
inc
push
test
call
popf
lds
rorl
push
rcl
pop
inc
inc
add
jge
cmp
inc
hlt
dec
fwait
cs
xchg
push
in
dec
data16
bound
mov
xor
cmp
icebp
lcall
das
in
xor
dec
inc
dec
inc
push
insl
outsl
stos
adc
xor
or
iret
enter
add
mov
ret
inc
or
sub
fcomps
pop
and
sub
mov
or
pusha
and
mov
mov
out
sbb
cli
mov
add
or
and
imul
scas
xchg
mov
jae
dec
scas
cmp
pop
cmp
aam
shrb
fsubs
xor
cmc
or
fwait
das
arpl
cmp
lret
pop
addl
dec
out
test
sub
sub
nop
jnp
sahf
stc
dec
in
roll
shrb
push
call
imul
jmp
rcr
cmp
das
mov
mov
xor
rcll
pop
in
in
add
jecxz
dec
imull
or
jbe
xlat
nop
dec
adc
sbb
fwait
jle
stos
pop
xor
lcall
push
cli
cltd
cmp
cmp
or
add
or
sub
jp
xor
push
pop
lods
sub
cmp
stos
mov
ret
div
and
or
fists
push
add
outsl
insl
push
dec
gs
cmpsb
inc
adc
imul
cli
push
sub
mov
or
int3
mov
clc
dec
shrb
insb
jg
mov
push
shll
aam
aam
xlat
lahf
inc
mov
or
mov
xchg
or
mov
xlat
scas
mov
jns
cmpsl
and
adc
ja
jbe
cld
leave
cmp
in
nop
das
dec
movsb
lods
xchg
mov
cmpsl
ret
rcl
cltd
or
pop
xor
test
push
and
imul
sub
sbb
push
movsl
lds
xchg
mov
arpl
xlat
js
leave
mov
sbb
arpl
xchg
jno
mov
push
mov
jg
test
mov
pop
mov
imul
jno
xchg
mov
popf
mov
mov
xchg
sahf
fwait
int3
sub
clc
sbb
fwait
shll
cmpsl
pop
scas
lods
jle
pop
ret
cs
rorl
sub
pop
rclb
sbb
cld
ds
fdivrl
inc
push
adc
stc
test
mov
fmulp
lods
push
mov
cs
push
sbb
mov
fcomip
and
or
call
add
movl
mov
movl
sbb
ds
movsb
je
lret
cmp
call
into
pusha
andb
gs
ljmp
or
pop
jno
aad
insb
mov
cmp
adc
push
scas
es
dec
out
pop
pop
push
xchg
js
jle
daa
outsb
and
inc
call
in
inc
dec
cmp
mov
test
jno
jo
or
mov
loopne
and
stos
jne
imul
ret
sbb
ja
cmp
jecxz
cld
dec
push
leave
roll
add
sti
inc
das
sti
dec
std
push
imul
push
mov
dec
xchg
cs
push
shrb
ret
or
inc
insl
stos
mov
xchg
in
scas
daa
stos
aam
les
jp
and
into
ret
add
xor
out
ljmp
mov
stos
jg
out
inc
adc
daa
mov
rorl
mov
cltd
sbb
scas
fwait
gs
mov
jmp
pop
repz
inc
dec
xchg
aad
pop
fucomp
pop
jae
pop
jg
out
dec
mov
and
loope
lods
dec
cwtl
add
into
shll
lahf
dec
mov
pop
jecxz
neg
outsb
add
fcompl
insl
push
or
sbb
arpl
loope
int3
mov
stos
xchg
mov
js
fldln2
rcl
sub
mov
pop
and
fs
insb
pop
dec
ljmp
mov
ds
jge
sbbb
xchg
pop
push
pop
ret
jnp
fiaddl
cwtl
shlb
and
cld
hlt
rep
insb
leave
mov
stc
imul
fisubrl
push
fwait
or
lahf
pop
aas
push
jo
jecxz
add
dec
xchg
push
aam
mov
and
andl
mov
icebp
xchg
pop
sub
orb
sbb
sub
cs
data16
xchg
mov
pop
sub
or
loop
cmpsl
jb
xchg
cltd
in
outsl
or
push
leave
shlb
sahf
jp
sub
daa
push
mov
mov
pop
mov
hlt
in
push
pop
cmp
cwtl
outsb
push
enter
mov
pusha
cmp
sahf
es
hlt
in
test
mov
data16
data16
jmp
rolb
pushl
sbb
and
sbb
shr
push
push
sbb
jg
lds
into
call
outsl
mov
push
push
and
sub
repz
enter
cltd
mov
push
pop
incl
repnz
inc
std
je
pop
or
rsqrtps
sarb
xlat
push
or
repz
xchg
xchg
pop
push
fcompl
outsb
sbb
pop
mov
cmp
sbb
das
push
inc
cmp
mov
mov
xor
push
shlb
clc
rolb
stos
push
xchg
es
clc
jnp
popa
xchg
movsb
sub
test
inc
inc
imul
dec
jge
fldt
jmp
cmc
sub
jl
pushf
jp
test
inc
push
cmc
adc
icebp
icebp
stos
or
stos
push
dec
adc
cmp
push
mov
aaa
cmp
hlt
gs
mov
cmp
mov
mov
enter
enter
fidivrs
sbb
mov
cltd
dec
or
pop
and
push
cld
cltd
sti
lds
jno
movsl
icebp
jb
inc
pop
sbbb
adc
scas
leave
int3
fldcw
adc
roll
cltd
dec
sbb
xor
dec
and
add
push
sbb
sbb
inc
popa
xor
mov
pusha
dec
inc
sbb
xor
jne
sub
ss
lret
jle
jns
mov
pop
in
jae
cmp
xor
pop
xchg
or
and
cli
add
insb
dec
lcall
mov
loope
in
add
or
sahf
push
mov
push
push
rclb
fbstp
jno
pop
fwait
cli
jmp
in
sar
xor
jle
stc
cmp
push
mov
call
and
movsb
jg
pop
jo
lcall
mov
cmpsb
jns
xlat
mov
in
xor
ret
repnz
dec
jae
addb
ror
mov
test
test
pop
cmpsl
rclb
clc
rorb
add
xchg
sbb
xchg
mov
cmpsl
pushf
mov
nop
shrl
or
or
inc
inc
insl
lahf
rcll
nop
mov
jle
push
cmp
xchg
jecxz
xchg
aaa
add
shll
add
in
lock
sbb
cmp
jg
push
and
mov
cmp
adcb
dec
in
rol
push
sub
sub
scas
nop
sbb
rorl
loop
or
sub
jae
adc
dec
sahf
jb
or
ljmp
ds
sbb
push
insb
les
and
mov
das
sub
dec
mov
nop
in
movl
mov
xchg
jno
inc
mov
into
movsb
fs
div
sbb
repnz
push
nop
jmp
or
adc
imul
inc
sbb
jnp
xchg
bound
or
test
leave
jb
and
dec
adc
mov
xor
mov
push
or
in
cmp
out
pop
outsl
enter
sbb
adc
xchg
fst
movsl
cmp
in
mov
aad
stc
push
daa
push
leave
mov
jno
sbb
decl
mov
faddl
fwait
mov
sbb
and
dec
sub
or
xchg
ds
push
lahf
loope
xchg
sti
stos
andl
push
xor
cltd
inc
test
pop
addr16
mov
inc
push
shr
cld
test
push
in
mov
mov
fisttpl
pusha
es
shl
outsb
mov
inc
pusha
fisttps
xchg
sub
mov
adc
ja
xchg
std
xor
test
dec
jge
push
jmp
pop
ds
mov
mov
lahf
xchg
add
testb
or
out
inc
push
outsl
and
insb
inc
fs
daa
mov
out
mov
sbb
subb
jnp
mov
imul
ficoms
test
vpmullw
mov
aaa
sub
das
rclb
pop
arpl
xchg
inc
mov
dec
stos
mov
jg
push
test
mov
pop
push
xchg
nop
or
int3
sub
ljmp
xlat
jle
jle
push
mov
scas
aad
sbb
jne
fdivs
or
jo
mov
pop
xor
cmp
xchg
dec
cmp
mov
sbb
pusha
mov
push
cwtl
mov
xor
bound
mov
dec
out
jne
sbb
sub
inc
and
pop
dec
xor
xor
shll
adc
pop
aad
movsb
in
adc
mov
jne
sbb
xchg
pop
add
mov
pop
dec
out
fwait
or
aaa
and
and
mov
sbb
jae
bound
insb
loope
mov
testb
mov
jb
add
sbbl
mov
out
mov
movsl
cmp
mov
dec
int
pop
jae
jg
mov
add
lea
clc
inc
sbb
or
and
pusha
fadd
pusha
adcb
inc
mov
ja
pop
jecxz
add
loope
jae
les
adcl
ljmp
cmp
cmp
mov
jnp
or
mov
dec
popa
xor
mov
fadds
lock
or
stc
pushf
jp
push
xchg
xlat
in
jmp
es
shlb
jno
mov
and
cltd
sub
fdivl
aad
xchg
sbb
cmp
imul
sub
or
xchg
in
cmp
sbb
mov
fsubrl
cmp
lods
popa
inc
add
and
jnp
scas
movsb
subb
ss
aam
out
cmp
jle
pop
mov
ret
sarb
cltd
and
ljmp
imul
out
mov
mov
and
pop
in
into
mov
push
mov
push
in
in
in
mov
repnz
sti
inc
cmp
in
fdivs
sub
and
and
cltd
imul
bswap
mov
dec
jmp
pop
fs
xchg
into
xor
xchg
add
dec
call
add
adc
imul
test
lods
test
leave
jmp
mov
push
fdivr
adc
sub
jg
fcmovbe
lea
cmp
sbb
lods
mov
mov
outsb
hlt
outsl
adc
fldl
inc
outsb
ror
add
sub
jmp
cs
xor
lds
jle
rclb
and
cmp
mov
loopne
aas
adc
stos
dec
mov
jo
add
pop
movsb
add
add
xchg
sbb
mov
daa
clc
dec
repz
xor
cmp
xor
add
dec
xchg
sub
inc
jne
insb
fnsave
lahf
sbbb
icebp
das
fsub
or
jbe
in
sub
push
adc
ja
dec
dec
cld
jmp
push
int3
out
mov
cmpsl
mov
test
inc
fdivrs
rorb
jl
test
rclb
dec
iret
inc
push
dec
aam
adc
hlt
aas
fstp
sbb
sbb
mov
lcall
cltd
and
mov
and
add
or
andb
or
jo
inc
push
pop
ficompl
or
int
cltd
dec
mov
pop
or
cmp
movl
ret
bound
sub
ds
insl
sarb
shl
inc
aas
mov
inc
pop
clc
push
jae
jp
mov
mov
sahf
subb
jne
push
jle
lods
pop
popf
mov
mov
jg
pop
sahf
aaa
or
stc
jle
jmp
dec
adc
mov
jmp
fbstp
aaa
mov
xchg
sbbb
and
rcll
out
in
mov
outsl
xor
xorl
mov
push
inc
stos
inc
jne
ss
add
dec
cmp
stc
ja
push
ret
das
mov
pop
mov
lock
push
sti
andb
add
add
mull
push
test
sub
sub
roll
mov
ret
sbb
test
pop
test
pushl
jmp
fimull
iret
mov
lahf
out
or
or
dec
bound
sti
cmc
loop
add
divb
jl
in
xchg
fcmovb
ds
pushf
adc
mov
xchg
push
test
cmpsb
mov
enter
hlt
cmc
ja
mov
loop
js
mov
push
and
pop
ficoml
mov
data16
pavgb
cli
popa
mov
hlt
testb
xchg
push
cmc
scas
xor
lcall
mov
stc
inc
or
inc
sbb
and
jae
in
mov
stc
into
leave
pop
adc
cmp
stc
push
call
sub
das
cltd
cmp
dec
jg
iret
clc
add
loop
jmp
sub
loop
mov
mov
or
dec
pop
push
push
mov
cmp
mov
and
test
pop
and
decb
add
rolb
add
mov
popa
add
repz
fsubl
cmp
lret
daa
insb
dec
aad
inc
cmp
push
or
repnz
add
stos
mov
sbb
push
mov
rclb
rclb
or
mov
mov
pop
dec
fwait
jmp
cmp
ljmp
sti
movsl
cmp
sbb
hlt
hlt
loope
or
xchg
out
nop
fwait
lods
sbb
outsl
hlt
ret
pop
out
xor
test
jg
ljmp
call
add
cs
or
je
adc
pop
push
xor
push
scas
cmp
rcl
loopne
clc
out
xlat
fisubrl
cld
jae
mov
cmp
scas
jnp
push
mov
mov
jnp
dec
add
mov
les
jne
adcb
fcomp
arpl
pushf
repz
cmp
adc
insl
in
xchg
maxps
gs
jno
es
testl
adcl
mov
cmp
push
xlat
inc
push
xlat
pop
mov
das
outsl
mov
repnz
icebp
adc
addl
jne
mov
movsl
in
in
mov
incl
add
jo
lea
cmp
je
sbb
mov
or
mov
adc
push
push
js
jecxz
aam
test
or
in
jg
mov
pop
cmp
add
cltd
pushf
sub
mov
mov
cli
das
dec
xchg
sub
test
clc
mov
mov
hlt
sub
addr16
fucomip
repnz
stos
scas
inc
shll
pop
pop
ljmp
loop
stc
pop
roll
fisttpll
jp
cld
jbe
pop
pop
call
ljmp
out
fistpl
jae
mov
cmp
lods
lea
xchg
jo
test
mov
jns
aam
pop
or
aas
rclb
enter
lock
mov
adc
dec
es
cmc
push
sub
push
insb
jo
inc
mov
test
jno
test
mov
cmp
sub
mov
or
les
cmp
jle
xchg
into
sbb
pop
xchg
sbb
js
lahf
jecxz
fldenv
push
mov
mov
outsl
sub
mov
xor
cmp
std
in
loope
dec
or
ljmp
mul
xorl
push
stos
in
mov
push
mov
je
xor
ret
or
movsb
jl
mov
in
test
js
push
sysenter
lahf
adc
scas
aad
sub
xchg
std
or
add
cmp
je
rcrl
push
scas
xchg
pop
xor
sub
in
pop
loope
cli
mov
mov
cld
int3
les
xchg
iret
fs
not
cmp
and
mov
xchg
mov
subps
jne
pop
ret
adc
push
xor
lret
inc
jo
xchg
pop
xlat
aam
fcompl
xor
push
ret
fs
cmp
pop
push
popa
jnp
orb
lcall
out
xchg
movd
aad
fldt
xchg
scas
scas
stos
push
jo
test
lret
js
das
cmp
xor
ljmp
fwait
mov
mov
in
adc
add
imul
sub
pop
sti
xchg
in
aad
into
fstpl
xchg
xor
cltd
dec
push
jnp
ds
gs
leave
adc
adc
pop
lds
pusha
jp
mov
or
in
rcl
and
jmp
subl
gs
aas
pop
or
call
xlat
xchg
test
adc
jbe
and
loope
aad
fisttpl
test
pop
outsb
xor
cmp
shll
lcall
scas
sbb
cmp
lods
fsubs
test
sbb
test
orl
test
jno
adc
jnp
popa
push
mov
aad
fwait
rclb
mov
adc
fwait
or
mov
push
cltd
adc
insl
addb
insl
jp
xor
push
shrl
push
es
in
inc
mov
dec
bound
negl
sahf
push
out
jb
neg
and
ret
lret
or
mov
sbb
lods
loope
jbe
mov
ja
dec
cmpb
lods
pop
xor
cmp
repnz
cmp
sbb
shlb
jae
sub
movsb
into
push
cmc
sub
neg
aaa
sti
cmovo
popf
ror
mov
pop
stos
push
repnz
mov
retw
push
or
scas
sub
dec
shrl
xor
and
jae
sahf
adc
cwtl
pop
and
sahf
dec
fistpl
ds
push
inc
xchg
mov
xchg
push
ficomps
cmpsl
mov
sbb
test
sub
mov
imul
add
gs
stos
xchg
and
and
jo
es
in
nop
js
push
cmp
hlt
je
mov
mov
and
es
adc
fstpt
out
jg
dec
xchg
in
iret
and
iret
mov
and
dec
insb
mov
lods
push
insl
xor
add
ja
adc
lods
std
nop
push
scas
xor
mov
pop
call
pop
push
xchg
daa
fisttps
sbb
cmpsl
cltd
into
test
ja
bound
loope
pop
nop
sbb
or
inc
dec
stos
sbbb
mov
fldt
lahf
leave
lcall
inc
add
pop
movsl
sahf
and
cmp
xchg
pop
pop
kunpckwd
test
in
ss
das
jo
aas
mov
subl
notb
test
mov
fbld
mov
sub
lret
clc
ficoms
jecxz
icebp
xorb
lods
cmp
in
cmc
add
mov
sahf
and
push
inc
dec
mov
mov
xchg
mov
xchg
or
cld
xor
mov
dec
add
sbb
idiv
xor
mov
je
mov
ret
jmpw
aad
sahf
dec
mov
cld
dec
adc
xchg
mov
aas
xchg
pop
adc
push
nop
xchg
rol
inc
repz
std
jmp
inc
xor
pop
xchg
inc
outsl
adc
cltd
and
adc
in
int3
mov
pop
jg
adc
movsb
es
sarl
imul
lcall
iret
fucomi
jo
pushf
or
ret
jo
frstor
and
mov
xor
fdivrs
div
jg
fstps
mov
pop
xchg
loopne
jns
xchg
mov
mov
nop
inc
sub
pop
outsl
enter
adc
or
xchg
cmp
repz
addr16
xchg
jg
les
dec
push
aam
mov
flds
adc
and
popa
aas
mov
and
xor
nop
lcall
pop
cltd
jb
and
pop
cmp
mov
call
cmp
and
cwtl
xor
data16
fistl
mov
jmp
pop
sub
call
xor
dec
mov
test
ss
enter
sbb
mov
out
call
aad
scas
mov
popf
lds
aaa
jl
aas
outsb
mov
sbb
ja
outsl
dec
push
xor
mov
sbbb
mov
xchg
push
ds
aas
setns
ss
mov
mov
mov
push
lods
mov
orb
jo
add
fwait
cmp
cmp
and
arpl
mov
jno
mov
add
cs
jnp
outsb
test
and
jecxz
push
add
sub
mov
dec
add
insb
cmc
cmp
jg
mov
rcrl
int
xor
sbb
mov
mov
mov
mov
cs
push
clc
movsb
sar
mov
int
aam
icebp
jge
push
cmp
jecxz
nop
sarb
je
jge
fstp
push
aam
mov
dec
mov
in
xor
jmp
add
sbb
pop
es
nop
clc
cmc
and
push
pusha
test
xchg
stos
scas
xlat
lahf
mov
jnp
cld
push
mov
and
dec
adc
not
fdivl
cmp
scas
jae
decb
mov
nop
lods
xchg
out
dec
mov
cmp
add
mov
dec
push
mov
scas
std
int
lods
pop
enter
shll
loopne
ror
cmp
lds
in
jmp
outsb
testb
fnsave
movsl
cwtl
mov
fisttps
cmp
hlt
cmp
jbe
push
push
and
xchg
mov
push
cmp
xor
add
pop
pop
jmp
das
xor
rclb
imul
fisubl
stc
cmp
int
gs
inc
test
pop
fs
inc
stc
mov
imul
arpl
xchg
inc
mov
enter
test
push
xor
int3
gs
xchg
pop
roll
sub
pop
cmpsl
push
fistps
or
inc
daa
stc
pop
ljmp
stos
in
and
inc
xchg
movsl
cmpxchg
cmpsb
les
mov
mov
jmp
les
sub
ds
idivl
xlat
cmpsl
lods
testb
fbld
lock
addr16
js
push
shld
lret
adc
inc
repz
mov
in
mov
mov
lds
aas
cld
out
pop
dec
jp
data16
out
jnp
insl
gs
jmp
push
inc
popa
adc
jg
and
pop
and
xor
push
mov
add
or
jmp
testl
pop
scas
xchg
or
daa
bound
leave
lock
push
shlb
mov
push
sbb
jge
faddp
into
or
cmpsl
clc
adc
dec
sub
clc
cmp
push
into
popa
notb
lret
pop
sahf
sahf
adc
int
sbb
push
mov
sti
arpl
movq
xor
scas
sbb
out
ficoml
adc
nop
xchg
jne
xchg
ja
dec
lock
xor
xor
rol
add
hlt
jl
and
lahf
insb
jecxz
sbb
aaa
fisubrs
jl
xchg
adc
mov
jge
pushf
cmp
mov
push
inc
inc
and
imul
aas
cmc
pop
in
sahf
sub
add
adc
repz
lret
das
adc
dec
cmp
xor
into
add
dec
ficoml
push
add
repnz
sub
or
lret
pop
xchg
call
cmp
bound
adc
mov
lret
and
dec
xchg
inc
fsubs
les
push
aad
cmp
mov
movsb
aad
mov
pushf
and
test
cmp
hlt
add
ja
jbe
into
sbb
and
cltd
xchg
push
clc
daa
sarb
mov
cwtl
mov
out
mov
loope
enter
inc
jae
mov
mov
enter
push
jge
test
aas
cltd
adc
out
das
mov
ja
push
pop
lods
cld
ja
jne
lret
xor
fidivl
repnz
cmp
jns
or
imul
inc
imul
dec
jmp
dec
push
fcoms
cmpsb
and
flds
push
js
xor
repnz
aam
out
ret
sarl
sub
cli
jmp
stos
test
lahf
in
pop
xor
mov
xchg
mov
pop
ds
inc
cld
aam
es
pop
add
lret
or
jae
jnp
scas
inc
sub
pop
xchg
fldt
mov
fs
mov
arpl
mov
sub
pop
and
and
imul
cld
jp
outsb
test
inc
daa
rclb
es
and
mov
inc
xchg
jmp
in
fsubrs
fsincos
adc
add
sar
lods
gs
or
push
and
shlb
mov
mov
insl
dec
adc
idivb
ja
scas
cmp
jp
enter
sbb
push
sub
mov
and
cmp
dec
jno
mov
adc
and
lods
dec
sub
add
xor
or
or
fnstenv
jle
notb
sahf
mov
push
xchg
pmaxsw
xchg
int
scas
sti
xchg
push
int3
adc
jnp
adcl
cmp
sbb
idivl
push
add
dec
push
and
mov
movsb
mov
xchg
inc
pushl
in
lods
adc
dec
test
pusha
dec
insb
jnp
les
or
in
sbb
ss
sub
cltd
int3
push
mov
mov
mov
xor
jno
fcmove
stos
sbb
cmp
xchg
iret
aad
dec
icebp
mov
and
int
or
sbb
sbb
dec
lcall
push
stos
inc
sbb
xchg
fsubl
pop
bound
mov
pop
fisubrl
push
filds
mov
pop
fsub
mov
arpl
enter
push
out
push
out
stos
jmp
int3
daa
adc
aad
in
sti
cmp
pop
xor
and
jno
jmp
mov
ret
in
push
pop
int3
add
jmp
xor
push
daa
iret
sbb
fldenv
or
xor
data16
stos
inc
xchg
inc
lds
test
cmc
add
or
jns
clc
sarb
xor
imul
or
int
cmp
mov
inc
cmp
mov
lcall
ud1
scas
push
pop
sub
outsl
jbe
cld
es
lret
sti
insl
dec
pop
decl
dec
gs
mov
jl
jg
out
aam
fiadds
int
push
mulb
xor
shlb
jnp
outsl
inc
bound
pushf
in
xchg
scas
imul
jmp
dec
int
xor
in
stos
stos
ret
out
mov
mov
sub
xchg
scas
popl
lret
xor
cmp
cmpsl
pop
cltd
hlt
add
lret
mov
push
ljmp
xor
iret
outsb
sti
lods
push
movsl
sbb
pop
lcall
in
addr16
xlat
pop
xchg
imul
fcomip
cmp
std
loope
popf
les
repnz
cld
mov
jmp
inc
pop
sti
imul
jecxz
sbb
iret
cltd
sbb
add
mov
in
stos
lret
cs
js
add
xchg
mov
lea
in
daa
sbb
aaa
inc
je
lea
testl
jnp
pusha
adc
test
stc
xlat
mov
mov
sbb
sti
xchg
loop
es
cmpsl
xor
dec
stos
or
adc
push
and
leave
mov
cld
ds
stc
mov
mov
pop
fcomps
push
adc
sub
call
loop
push
pop
or
je
dec
mov
pop
hlt
fimuls
in
push
rclb
pop
add
lds
mov
popa
mov
dec
xor
js
leave
in
mov
mov
pop
test
fdivrl
shlb
inc
lahf
aas
pop
cmp
jno
xchg
push
xor
nop
test
mov
sbb
dec
jbe
mov
pop
inc
lcall
cltd
mov
insb
pop
cltd
and
lods
out
push
pop
imul
aad
pop
outsb
nop
add
leave
test
loop
mov
cld
cli
insl
mov
adc
cmp
mov
mov
loope,pn
aad
adc
mov
pop
in
addl
hlt
or
sub
dec
pop
loope
insl
lcall
dec
inc
xchg
dec
in
cmp
iret
and
pusha
or
or
cmp
dec
pusha
xlat
jl
std
xor
jns
xchg
movsl
out
in
inc
nop
dec
sbb
inc
hlt
std
sub
mov
mov
push
lret
shrb
mov
cwtl
pop
test
cmp
xchg
add
lods
or
sarb
mov
in
xor
roll
inc
iret
lahf
loop
add
mov
xor
fistl
xchg
push
inc
loop
dec
sbb
sub
stos
add
dec
aad
sub
sub
mov
push
push
lea
fsubl
lahf
push
sbb
das
push
notb
iret
xor
fidivrs
and
es
pop
mov
cwtl
mov
and
lret
call
cmp
mov
loopne
or
mov
xor
mov
jg
leave
aad
push
icebp
loopne
in
mov
mov
pop
lock
lock
clc
in
push
push
push
test
dec
cmp
xor
or
jae
and
shlb
scas
jecxz
mov
addl
sub
inc
pusha
push
mov
jmp
sbb
xor
bound
sti
adc
inc
jo
ja
mov
dec
xchg
in
sbb
sbb
jne
lcall
mov
out
adc
fldl
adc
orb
loop
xor
cli
cltd
ja
push
inc
in
sub
lock
sbb
cli
sbb
dec
dec
test
dec
outsl
in
loope
int3
addr16
push
push
and
jle
jecxz
or
popa
pop
adc
cld
xchg
movsb
inc
mov
push
iret
fs
cmp
jge
punpckhwd
mov
repz
lret
cwtl
or
fs
push
pop
dec
sub
pop
cmp
shrl
sbb
test
mov
cmp
fucomi
daa
jle
popa
mov
in
mov
loopne
xor
and
xor
out
xchg
arpl
jae
movsb
pusha
stos
push
test
xchg
imul
flds
adcb
movsl
xchg
aam
push
jmp
adc
xlat
xor
xor
out
mov
push
aas
fs
mov
lret
aaa
jmp
pop
aad
inc
clc
xor
jp
icebp
cmp
and
pop
lret
mov
or
aaa
inc
fstl
in
into
jle
popa
push
in
leave
mov
repnz
shlb
adc
arpl
stos
ljmp
adc
pop
aaa
jno
xchg
es
ljmp
clc
jnp
sub
or
popa
mov
test
dec
inc
repz
stos
xor
mov
scas
sti
and
fsubrl
add
lcall
adc
loope
sub
inc
in
insb
fucomi
imul
outsb
scas
sub
int
incl
rorb
push
mov
mov
sahf
lods
fsubr
pop
jbe
sbb
cwtl
leave
push
icebp
lea
adc
xlat
add
mov
test
xlat
jo
ret
push
jbe
xor
test
cli
aaa
lahf
icebp
data16
aaa
pusha
cld
lea
dec
enter
or
pop
test
leave
sbb
xor
mov
imul
pop
mov
imul
mov
xorl
jae
bsf
pop
lret
rcll
or
out
fmuls
sbb
lret
clc
outsl
je
cmpsb
int3
pop
int3
inc
pop
addr16
mov
inc
inc
sub
xchg
les
xchg
adc
scas
mov
out
test
push
outsb
loope
iret
push
pop
std
cmp
dec
test
pop
lods
aad
sub
orb
jbe
cmp
cld
lahf
sub
repz
xor
xchg
stos
inc
rorl
out
pop
xor
xchg
mov
cld
les
int
inc
sti
nop
dec
fistpl
rcl
mov
adc
mov
mov
push
mov
shr
jle
stos
stos
sub
push
or
sub
cmc
xor
jnp
addr16
and
xor
repnz
push
jbe
xchg
xor
mov
mov
xchg
or
clc
out
stos
out
bound
popa
hlt
loopne
cld
fdivrs
adcb
xor
insl
lods
push
cmp
gs
shll
push
jnp
push
pop
jno
and
sub
mov
sub
push
xor
ja
inc
lret
rorl
jp
adc
int
pop
les
sahf
inc
inc
mov
out
lods
inc
push
sub
and
pop
loop
mov
push
push
inc
sahf
push
enter
jge
cmp
aam
dec
lock
xlat
ljmp
stc
push
dec
xchg
stc
xor
sbb
dec
mov
jle
cs
pop
and
dec
add
dec
insb
jge
xor
aad
clc
adc
or
push
adc
std
push
fdivs
add
push
iret
sub
gs
mov
leave
loopne
icebp
dec
cmp
scas
popa
imul
push
clc
jge
pop
mov
or
sub
pop
decb
loopne
push
dec
add
je
adc
xlat
xchg
cli
jge
movsl
lret
insb
xor
enter
jo
cmc
push
xchg
dec
add
jecxz
and
jo
cmp
test
mov
add
jmp
xchg
icebp
jg
aam
xchg
stos
mov
push
pop
test
push
xor
daa
inc
enter
les
out
shlb
inc
push
mov
mov
jmp
call
enter
pop
mov
pop
dec
and
and
sub
sub
gs
adc
cltd
inc
nopl
sahf
les
mov
adc
mov
cmp
pop
mov
dec
fldt
lds
mov
jmp
out
mov
sub
jnp
mov
in
mov
je
lret
fimull
jp
xor
loopne
pop
pop
pop
cmpsb
arpl
fs
inc
add
jno
jmp
and
out
xchg
call
mov
xchg
push
aad
cmp
xor
mov
push
ret
sahf
mov
testb
filds
push
fs
or
cwtl
cltd
sbb
adc
call
daa
in
jb
adc
fmull
shrl
pop
xchg
mov
push
pop
lock
imul
or
push
or
ljmp
pushf
dec
repz
add
rorl
or
les
stos
and
mov
jnp
cs
enter
decl
fdivl
cli
or
pusha
mov
iret
lods
rsm
orl
int
loop
mov
or
lcall
leave
inc
cmp
sub
xorl
dec
pop
mov
pop
jg
pop
push
enter
aas
pop
test
mov
lret
fmul
orl
mov
xchg
jno
push
stc
and
out
lea
aam
ficomps
fdivs
mov
imul
push
cmpsb
fs
adc
lods
rcl
aam
xchg
mov
add
cwtl
lcall
sub
ljmp
or
push
mov
lods
push
nop
cmp
xchg
andl
out
mov
mov
icebp
and
pmaddwd
hlt
lds
cli
or
inc
daa
inc
out
sub
sbb
mov
fdivl
add
push
bound
jb
and
push
je
lret
jecxz
sar
scas
addb
not
sub
pop
or
sub
cmp
pusha
push
fdivrp
mov
sarb
mov
and
std
notb
push
std
xor
es
insl
pop
mov
mov
repnz
popa
call
lds
imul
xchg
mov
fmul
adc
cmp
mov
xor
mov
mov
out
lods
dec
out
in
ret
negl
in
andl
clc
lret
popa
dec
dec
dec
jb
dec
and
shr
ret
adc
lcall
mov
and
push
cmp
inc
shl
ja
inc
mov
adc
inc
leave
mov
mov
pop
out
cmpsl
mov
mov
aam
dec
cmp
adc
icebp
sbb
xchg
into
imul
adc
or
sub
pop
test
ss
stc
test
mov
jmp
int3
std
inc
or
xlat
lock
add
testl
pop
fwait
out
cmpsl
popf
cmp
int3
je
mov
loope
inc
loopw
jbe
ljmp
movsb
or
jge
add
or
mov
andb
mov
sub
arpl
fstps
mov
xchg
xor
pop
cmp
negb
imul
inc
orl
cmp
daa
adc
push
mov
cmp
jo
daa
or
lahf
lcall
leave
fidivl
adcl
in
test
enter
jo
mov
jb
sbb
scas
pop
sub
pop
dec
cltd
lahf
fiaddl
xchg
je
rolb
sbb
out
jge
fidivrs
xchg
mov
mov
fsubrs
loopne
in
cltd
adc
out
pop
xchg
clc
call
mov
sub
sbb
addr16
jecxz
ret
inc
sti
cmpsb
and
sub
cmp
mov
jp
or
cld
mov
and
xorb
fimuls
push
fidivl
int3
cmc
data16
repnz
inc
notb
aam
xlat
mov
add
int
lods
cltd
xorl
enter
jb
fistpl
aam
arpl
lods
mov
sub
clc
sbb
sbb
cltd
gs
sub
add
pop
xor
mov
sbb
repz
outsl
shrl
adcl
adc
sbb
ds
mov
icebp
xor
out
xor
call
fimull
xlat
push
xor
push
dec
and
xchg
sbb
xchg
daa
fs
sbbl
xchg
and
sub
adc
sbb
decb
jmp
dec
xor
add
xor
loop
pop
jo
mov
scas
cld
jns
or
xor
lods
int3
mov
fldl
adc
mov
lret
inc
push
xchg
adc
xorb
xor
push
mov
adc
fld
xor
sub
jno
push
ret
sbb
cmp
outsb
mov
sub
lods
jbe
xor
repnz
out
loop
loopne
out
mov
leave
addr16
iret
cmpsb
test
stc
mov
adc
push
sub
jmp
stos
lcall
arpl
inc
or
jne
cmp
es
add
cltd
stos
lcall
repnz
fistpl
mov
jmp
loopne
inc
and
loop
sahf
ss
push
push
xlat
call
or
cld
jl
fstl
dec
jno
loope
fs
sbb
iret
icebp
mov
xchg
push
add
out
in
cmpsb
sahf
dec
icebp
call
push
mov
lods
sub
cmp
adc
and
lods
and
sar
hlt
data16
add
xor
loopne
loopne
add
out
jae
jo
lret
jb
adc
xchg
fstpt
dec
testl
fsubl
lret
movsb
pusha
dec
mov
mov
test
jmp
rclb
stos
xchg
dec
notl
nop
arpl
and
sub
mov
and
jmp
mov
pop
lcall
enter
ret
mov
add
cmp
dec
dec
cli
pop
jnp
filds
xor
fstpl
adc
addl
leave
and
add
ljmp
mov
xor
push
std
jno
xchg
cmp
xor
nop/reserved
mov
mov
sti
xlat
inc
sub
mov
pop
push
push
jo
push
add
sub
test
pop
sub
push
xchg
leave
loopne
cli
in
cld
mov
add
test
pop
xchg
mov
out
mov
mov
add
faddl
mov
jg
push
dec
outsl
sub
das
jle
sti
push
fcoml
daa
int3
xorl
dec
lcall
fists
testl
xchg
jo
popw
mov
adc
xchg
stos
nop
orb
and
mov
movsb
fldenv
roll
mov
scas
pusha
jae
subl
xchg
push
fsubl
hlt
cltd
dec
out
xor
jbe
popa
ja
mov
push
adc
mov
pop
push
and
arpl
ds
sub
loopne
xor
mov
js
or
int
sub
inc
cs
fmull
dec
repnz
sti
pusha
cmp
std
inc
adc
hlt
repnz
testb
adc
mov
mov
mov
ret
cmp
mov
and
fcoms
movl
loop
add
sahf
push
hlt
movsl
out
inc
ret
test
test
pop
in
cmp
sub
out
cmp
mov
ljmp
nop
cli
fs
pop
or
call
jns
ds
push
in
add
fwait
addb
into
xchg
inc
push
pushl
lock
pop
shll
fsubr
sahf
cltd
jmp
cmp
adc
icebp
inc
stc
arpl
dec
es
xchg
sahf
push
ja
fwait
or
ja
adc
dec
mov
sahf
aaa
pop
sub
lret
sub
xorl
not
jns
outsb
jno
or
mov
mov
ss
inc
pop
fsubl
test
and
aaa
or
xchg
sbb
int
cmp
sbb
mov
popa
aam
mov
pop
xor
cmpsb
inc
leave
leave
scas
inc
inc
sbb
aam
sub
insl
mov
outsl
dec
ret
mov
mov
pop
hlt
scas
cli
mov
lret
cmpsb
ljmp
negb
in
rorb
lcall
shlb
sbb
pop
cmp
das
aam
xchg
lods
incl
mov
int
outsl
outsb
mov
xlat
test
mov
mov
cwtl
and
rorb
and
dec
mov
pop
xchg
and
mov
fldl
sbb
push
in
push
cmp
imul
inc
cltd
lds
insl
mov
ret
nop
sbb
mov
das
pop
mov
in
xor
nop
xchg
loopne
jle
cmp
inc
scas
lret
mov
pop
push
out
rcl
lds
xor
icebp
and
push
test
pop
std
pop
xlat
xor
mov
fldt
pusha
adc
mov
adcb
repnz
ret
addr16
in
repnz
stos
pushf
shll
xorl
les
or
loop
aam
hlt
add
movnti
pop
xchg
sub
adc
iret
and
mov
int
jae
fisttpl
push
enter
mov
lahf
xchg
test
ret
std
pop
test
xchg
mov
sbb
lock
outsb
cmc
lea
negb
out
mov
hlt
xchg
movsb
gs
mov
jae
cltd
mov
icebp
mov
cld
sub
outsb
sub
aas
jno
sbb
sub
fsubl
repz
adc
pop
jle
pop
into
enter
int3
fisubrs
outsb
sbb
dec
imul
dec
jnp
in
stc
and
repnz
mov
outsl
daa
adc
std
fistpll
rcrl
lret
sub
jo
mov
cmp
adc
mov
push
popf
add
fcmovb
popf
mov
rcrl
outsb
loopne
sar
inc
inc
loope
sti
frstor
or
in
fisttpl
and
int3
lock
xor
pusha
sub
scas
sub
aas
xchg
or
outsb
lds
in
mov
dec
fldt
scas
mov
ss
pop
adc
mov
shll
scas
gs
pop
xchg
inc
sbb
mov
js
dec
out
adc
aad
push
in
jo
in
or
mov
stos
mov
loopne
sahf
lds
sub
cs
fidivrl
dec
mov
and
mov
int
lods
add
fwait
pop
pop
test
test
or
push
cwtl
hlt
je
jg
inc
outsl
loope
aas
aad
es
pop
adc
stos
sub
adc
mov
pushf
xchg
jge
lods
mov
push
imul
sbb
mov
daa
inc
cli
test
inc
mov
dec
dec
mulb
fistpl
int3
sub
decb
cld
aam
inc
mov
sub
vmovlpd
ficomps
pop
sbb
jae
and
or
cwtl
outsb
out
loop
push
lret
and
cmp
cmp
les
cmp
mov
add
mov
dec
or
inc
xorl
gs
lods
mov
add
cli
fs
push
inc
inc
xchg
and
adc
mov
loope
test
adc
sbb
sbb
add
mov
call
inc
dec
jp
xchg
mov
imul
sbb
jne
sbb
stc
sub
push
in
mov
rol
orb
jns
bound
mov
lret
adc
cmp
in
mov
int
sub
pop
adcl
test
cmc
cmpsb
inc
popl
outsb
push
jbe
jns
xor
push
aad
mov
mov
ret
or
dec
test
add
push
and
xchg
cmp
movsb
pop
shl
lret
in
mov
mov
sahf
cmc
mov
xchg
inc
push
mov
cltd
jp
push
enter
outsl
add
dec
mov
jp
lahf
nop
pop
dec
jmp
icebp
insb
or
xor
jg
cmpsb
insl
ffreep
pop
rcll
or
inc
div
movsl
in
fdivp
dec
pop
cmp
shrb
ja
popa
divl
daa
mov
and
mov
and
test
mov
pushf
aad
lret
jno
mov
in
xchg
fimuls
dec
push
clc
loope
xor
aas
sub
dec
pop
test
outsb
sub
push
sub
xor
pop
push
xchg
add
std
or
fs
je
mov
push
stos
bound
push
xchg
popa
fdivs
xor
jb
aam
test
cmp
push
lods
mov
rorb
out
cmp
test
cmp
mov
lods
popa
cmp
xchg
insb
cs
cs
loop
cmp
inc
js
lahf
pop
pop
cld
jecxz
inc
jne
test
cmovbe
aad
jge
xor
sub
gs
lods
icebp
pop
xor
loop
cltd
xor
out
mov
inc
mov
lea
pop
lock
mov
ret
mov
lods
data16
xorb
jmp
les
mov
outsb
push
clc
repnz
mov
ss
xlat
or
and
cmp
pusha
out
fisubl
mov
pop
or
xchg
aam
ds
xor
fs
sub
xor
test
inc
ja
inc
sti
sub
push
mov
rcll
test
std
xchg
cmp
pop
jge
bound
mov
sbb
lods
mov
lcall
mov
pop
out
popf
into
inc
mov
inc
into
cs
test
mov
push
les
dec
cmc
shr
in
call
xor
in
pop
sub
stos
ret
sbb
or
xor
movntq
pop
lret
xchg
jno
sti
int3
lea
in
push
cltd
sahf
aam
mov
or
sub
lods
or
fsub
mov
and
notl
jae
aas
cmc
cltd
sbb
test
sbb
xchg
ret
and
adc
daa
jae
ds
mov
je
icebp
or
add
ficomps
mov
xor
mov
add
mov
loopne
or
shlb
push
insl
imul
fbld
insb
leave
lods
mov
sbb
fsts
xchg
adc
lea
in
cmp
jl
and
push
addl
stc
ret
pop
mov
loop,pn
push
mov
lea
cmpsl
inc
loope
fimuls
mov
jbe
jnp
stc
adc
sbbb
adcb
fildl
test
mov
add
rorb
mov
push
aaa
sbb
addr16
lods
in
das
or
inc
pop
add
cli
add
icebp
inc
xor
xor
flds
push
clc
and
scas
arpl
mov
jae
popa
adc
inc
es
ds
sbb
lock
mov
stc
push
pusha
dec
fsubrs
push
dec
popf
cwtl
popa
sub
lods
inc
lods
xchg
and
movsl
pop
sti
xor
mov
xor
fsubrl
jp
ds
jb
cmpsl
repz
mul
cld
sbb
mov
int3
xor
negl
out
jbe
mov
xchg
and
stos
push
sub
or
xchg
ret
dec
insb
push
inc
ss
cwtl
push
mov
sbb
push
jmp
loop
mov
and
or
stc
loopne
jns
test
dec
loopne
or
fnstsw
jno
loop
and
push
inc
movsb
cltd
inc
sahf
lret
sbb
inc
xor
lea
insl
mov
enter
in
fstp
test
fidivrl
inc
pop
clc
pop
push
and
ret
pop
and
or
rcll
jns
cmpl
loope
outsl
mov
or
adc
repnz
jb
mov
sti
fwait
mov
xchg
lcall
imul
je
stos
imul
je
mov
out
shrl
xor
xchg
cmp
push
jno
sub
into
pop
test
cmpsb
jg
pop
test
aaa
fcoml
daa
inc
lods
mov
sbb
xchg
test
jb
gs
push
or
test
arpl
scas
jge
mov
xor
pushf
cmpsb
sub
sbb
adc
pusha
int3
aad
push
sbb
dec
ss
adc
out
js
dec
insl
lret
test
lret
mov
jl
jns
xlat
xor
hlt
adc
rcr
shl
lret
or
enter
dec
ljmp
or
jo
mov
cmpsl
push
lods
pop
or
dec
push
fs
imul
stc
push
loopne
pushf
jae
and
dec
xchg
or
stc
mov
inc
dec
xor
pop
jo
out
lret
jo
push
dec
fsubl
gs
scas
hlt
add
sub
sub
mov
cld
sbb
and
dec
add
scas
lahf
sbb
push
sbb
pop
stos
and
pop
outsb
lea
xor
jmp
rcr
out
sub
aaa
mov
dec
xlat
cs
nopl
and
push
sti
or
inc
mov
jg
mov
add
pusha
enter
push
and
loopne
pop
addb
sbb
lahf
mov
push
add
and
sbbb
test
dec
mov
testb
xchg
cs
jbe
ficomps
push
xchg
pop
xchg
cld
mov
fdiv
test
es
cmc
jecxz
jae
and
movsl
push
outsb
push
insl
mov
outsl
cld
and
inc
ret
or
add
loope
je
std
enter
out
sti
dec
out
bound
fs
mov
xchg
cld
loop
popf
or
lret
into
movsl
stc
mov
mov
adc
mov
inc
outsl
orb
xor
out
sub
sbb
lcall
sbb
leave
dec
scas
xchg
cmp
pusha
dec
in
xor
add
repz
pop
mov
and
es
vorpd
mov
dec
inc
movsb
sub
mov
cwtl
jg
popa
fyl2x
movsb
mov
jno
push
add
adc
scas
mov
pop
push
pusha
mov
ljmp
pop
jo
cld
push
out
push
mov
outsb
jle
mov
push
jb
fidivs
push
jecxz
fsts
mov
out
adc
andb
ljmp
sub
inc
leave
subl
daa
sbb
mov
ss
cmp
push
inc
mov
xlat
clc
mov
test
sti
in
mov
cmp
clc
es
test
push
je
cmp
out
lcall
sub
jnp
shlb
setbe
int
push
or
leave
add
ret
cmp
enter
out
sbb
lods
and
inc
int
jecxz
in
jo
test
push
or
mov
aam
push
out
decl
test
pop
out
sbb
jns
pop
rcll
mov
sbb
inc
adc
pop
xchg
add
dec
popa
ror
jno
arpl
mov
jnp
add
and
hlt
add
xrelease
adc
xchg
lock
mov
in
data16
insl
pop
mov
dec
rcl
push
int3
add
cld
dec
inc
stc
inc
mov
cmpsl
push
in
int3
mov
pop
pop
pop
fbstp
mov
int
movsl
in
imul
scas
sarb
cmpsl
int3
ss
arpl
inc
xchg
ret
lahf
out
lret
adc
mov
mov
clc
xchg
sub
xor
outsl
repz
pushl
das
cmc
jl
dec
stc
outsl
jae
sbb
enter
enter
inc
dec
xchg
out
test
lods
cmp
mov
add
or
lahf
jo
or
out
clc
mov
outsb
movsb
sbb
jns
sti
jge
lods
lods
adc
push
clc
xchg
jmp
lds
jno
cwtl
pushf
jae
push
cli
jp
xchg
sbb
adc
into
mov
js
or
rclb
test
fs
lods
mov
xor
and
repz
lret
jns
mov
adc
dec
pop
dec
cmpsl
adc
mov
hlt
aam
adc
ret
nop/reserved
lret
incl
insl
mov
sbb
je
stc
cli
shll
sahf
or
xchg
and
mov
adc
jbe
imul
roll
xor
jo
pop
pop
rcr
mov
ficoml
lea
inc
aam
mov
or
cld
enter
xor
loopne
or
xor
mov
arpl
mov
jnp
repnz
lfs
adc
icebp
shrb
mov
sahf
pop
ljmp
subb
in
repnz
push
je
rcrl
ret
cmc
ficompl
inc
inc
scas
enter
and
call
add
push
sahf
rol
rcrl
mov
inc
and
popf
iret
xorl
adcb
inc
sbb
xchg
or
insb
lahf
or
jmp
aad
lea
jb
in
mov
sbb
pop
sbb
test
jmp
jp
fs
pushf
lret
fwait
push
sbb
je
fmul
ljmp
sub
mov
inc
mov
sub
shl
fnstenv
lods
fimull
loope
lods
std
or
push
stos
dec
clc
loop
jp
outsb
push
xchg
fdivrl
inc
sub
pop
lock
fidivs
mov
jle
lret
or
sub
shrl
lods
push
jns
adc
push
sahf
and
cmp
test
pushf
add
jne
inc
jbe
xor
inc
bound
imul
aad
popa
cmp
data16
ret
fs
add
push
push
xchg
mov
dec
mov
inc
mov
ret
test
sub
repnz
adc
pop
xchg
imul
sub
push
or
cmc
xchg
std
xor
pop
push
pop
lock
jbe
fcmovnb
imul
bound
rcrb
inc
testb
insl
je
jge
add
mov
jmp
inc
or
jmp
push
and
xor
fcmovbe
je
mov
sbb
push
inc
popf
insl
ret
inc
popf
mov
adc
loopne
jno
movnti
dec
int
aad
jle
inc
xchg
xchg
adc
in
push
test
jg,pt
fstpl
imul
dec
cmc
cmpsl
aam
push
roll
lods
stos
adc
pop
mov
jp
sbb
and
jecxz
mov
jp
loope
movsb
jnp
scas
xchg
jg
push
cmpsl
addr16
mov
mov
out
fistpl
sbb
rclb
repz
mov
mov
clc
repnz
inc
pop
ljmp
rorb
outsl
mov
stos
cwtl
jle
stos
or
adc
pop
jnp
jae
pop
cs
sbb
out
repnz
or
cmp
mov
dec
std
pop
andl
xchg
test
lret
cmp
lock
es
xchg
inc
scas
popf
pop
xor
dec
aaa
arpl
fsubl
pushf
lea
aam
mov
addr16
adc
xchg
pop
sbb
fsubr
dec
and
ljmp
cmpl
pushf
fsubrs
lret
inc
or
shlb
jae
and
ja
mov
test
cmp
lret
mov
stos
add
adc
fcmovnb
push
inc
lret
xor
arpl
aam
ret
and
and
cmpsb
adcb
inc
jnp
sbb
imul
stc
ljmp
push
pop
mov
and
inc
aaa
jns
dec
fcoml
push
inc
push
jg
in
jns
rcrl
jmp
lock
push
les
repnz
mov
icebp
adc
mov
loop
mov
xchg
jg
xor
bound
sbb
ret
stos
mov
inc
mov
sbb
icebp
sbb
into
movsl
outsl
and
jno
or
mov
popa
pop
jnp
sahf
add
jmp
lret
je
adc
mov
adc
loope
xchg
in
pop
mov
jb
out
loop
mov
jne
dec
daa
dec
mov
push
cmc
push
cmpsb
or
mov
ss
xchg
mov
iret
xchg
pop
call
or
jb
push
out
sbb
cmp
xor
pop
lock
add
in
push
mov
scas
and
mov
sbb
push
jmp
in
stc
inc
test
mov
pop
ror
imul
push
dec
insl
ret
divl
push
xor
lahf
xor
pop
loopne
scas
cmp
cmpsb
out
in
rcr
sbb
and
xor
adc
loop
pop
gs
cmp
stos
mov
cmp
dec
inc
mov
das
ret
add
mov
test
test
inc
add
call
aam
sbb
sub
and
jmp
mov
mov
int
inc
popa
mov
add
dec
icebp
inc
fcompl
mov
add
push
jg
mov
sub
cwtd
dec
sbbl
xchg
dec
shlb
mov
push
test
popf
inc
rcrl
mov
imul
or
push
mov
insb
out
jmp
imul
and
aaa
ficoml
js
inc
mov
lar
je
jp
es
xchg
imul
fxch
iret
fucom
mov
push
aad
insb
gs
rol
stos
pop
inc
lcall
out
outsl
mov
pop
jno
jo
test
sbb
jnp
sahf
and
mov
jne
cmp
fisttps
dec
dec
push
mov
or
insl
push
add
dec
mov
aas
imul
inc
rorb
fmull
push
out
fimuls
sub
mov
lea
aaa
dec
ljmp
and
xchg
pop
aaa
jne
jbe
cltd
std
xorl
mov
fsubrl
aam
add
adc
fwait
mov
lcall
fwait
shlb
mov
addr16
cmpsb
pusha
lock
mov
enter
lods
fldl
leave
ljmp
inc
sub
inc
cmc
cltd
les
mov
pop
mov
xchg
lock
sub
cli
xchg
not
call
or
mov
and
rcl
jae
and
sbb
sub
and
inc
stos
test
imul
jl
cmp
and
lods
pushf
cmp
jp
xchg
js
test
mov
jmp
push
mov
stos
and
xor
scas
sub
bswap
scas
jge,pn
imul
sub
ds
imul
sbb
inc
adc
imul
fwait
add
push
fistps
lds
push
jns
dec
mov
lahf
ljmp
icebp
fwait
and
out
sbb
out
jg
shrl
mov
loope
repnz
shrb
and
jg
and
dec
lea
js
cltd
subb
xchg
insl
xor
inc
or
inc
nop
or
mov
sub
mov
dec
cwtl
push
and
dec
aas
mov
shrl
xor
lahf
fnstcw
les
fs
push
test
inc
negl
add
jae
sbb
jns
fistpl
es
int
fcomps
push
or
or
scas
clflush
or
dec
inc
push
cmp
in
push
mov
mov
add
lods
xor
iret
ja
out
adc
jge
xchg
orl
jae
movsl
aam
mov
pop
popa
inc
sti
out
imul
testl
mov
pushf
adc
lods
xor
mov
std
idivb
fisttpl
cmpsb
add
jae
mov
pop
jp
push
mov
pop
xchg
into
add
pop
push
sub
mov
lret
cli
sti
faddl
lds
push
dec
pop
mov
mov
xchg
push
cli
loope
cld
adc
jl
rorb
push
sub
pusha
js
or
cmp
ret
xchg
aas
mov
push
fs
sbb
rcrb
inc
xchg
xlat
rorb
ret
mov
add
jl
xchg
sbb
fs
cwtl
mov
cmpsb
jae
imul
rcr
cmp
mov
ret
fnstcw
fisubl
shll
or
fsubs
stos
mov
lds
mov
bound
out
mov
lahf
sti
adc
in
sub
or
mov
iret
dec
int
add
in
call
inc
bound
xor
lods
or
outsb
mov
adc
and
xchg
addr16
fdivp
inc
jns
mov
xor
mov
fsubrs
mov
mov
pop
loope
scas
lods
mov
mov
sbb
rcrl
rcl
test
rol
inc
xchg
mov
fiadds
xchg
popf
cmp
mov
insb
dec
mov
add
mov
cmp
cmpsl
nop
or
xor
xor
int3
enter
shl
mov
add
cmp
xor
xor
scas
inc
in
pop
push
les
cs
xor
inc
push
in
mov
push
mov
je
cmp
xchg
cmpsl
jg
or
pop
lods
dec
int3
xor
adc
xchg
fimull
push
imul
add
jg
ficomps
aad
sbb
cmp
cmp
in
xchg
push
adc
repz
xchg
ljmp
icebp
addr16
add
fdivs
sahf
lcall
mov
jg
shr
xor
ret
dec
rcll
test
add
and
and
sbb
mov
adc
incb
imul
or
push
cmpsl
mov
aam
and
rcrb
cli
sbb
push
xchg
pusha
jmp
notl
mov
push
pusha
adc
pop
add
lcall
stc
push
repnz
inc
test
test
sub
sbb
ss
cmp
sahf
adc
push
sbb
xorb
xchg
pop
mov
xlat
imul
icebp
xchg
insl
sahf
sbb
mov
iret
dec
pop
xchg
push
mov
lret
mov
lods
mov
xorl
test
lcall
and
pusha
push
push
cwtl
add
inc
mov
aas
int
jmp
inc
sub
push
mov
int3
jmp
sub
shlb
inc
pop
sub
xchg
mov
adc
dec
jae
popa
push
rcrl
mov
lock
sti
fsubrp
sbb
or
ljmp
ljmp
pop
sub
out
cmp
cmp
mov
lods
lret
fnstcw
fldt
add
rcrl
sub
scas
xorb
aad
lret
xchg
adc
roll
repz
icebp
mov
pushf
loopne
mov
lret
leave
or
stos
out
dec
or
ret
addr16
cmp
dec
or
fsubrl
and
lods
sbb
xor
adc
movsb
mov
inc
and
les
shrl
push
xor
mov
adc
iret
ds
pop
nop
sbb
dec
mov
pushl
xchg
icebp
outsb
and
pop
push
clc
xchg
jmp
aaa
lds
fucom
cmp
jle
xorl
nop
dec
and
adc
or
arpl
aaa
js
jne
push
mov
cltd
mov
xchg
cmpsb
ljmp
mov
xacquire
inc
sbb
cld
sub
test
push
movsl
sub
jo
popf
movd
jecxz
add
repnz
sub
stos
adc
xor
dec
cmpsl
cmc
mov
in
jno
mov
jne
ljmpw
inc
xchg
out
sub
sbb
shlb
arpl
xchg
iret
push
xor
mov
xchg
out
mov
xchg
test
loopne
scas
push
xor
xchg
dec
pop
mov
nop
es
push
add
cmpsl
mov
pop
sub
mov
mov
ret
mov
outsb
pop
adc
nop
lods
pop
or
inc
xchg
cmpsb
adc
out
pop
lea
sbb
ret
in
xchg
dec
jo
inc
fcoml
push
inc
out
inc
fidivrs
sub
mov
stc
ss
sub
push
pop
insl
movups
inc
loop
cmp
push
cmp
xchg
mov
inc
in
sahf
js
outsb
fnstsw
or
push
fcmovnb
jne
bound
test
xchg
cmpsb
push
loope
outsb
aas
shrb
je
and
add
push
adc
jbe
movsb
pop
pop
cmc
fst
daa
pop
pop
sub
or
mov
je
jmp
adc
sbb
push
mov
stos
fcomps
test
ret
iret
add
arpl
add
fidivrl
xor
cmpsl
mov
dec
int
js
mov
xchg
mov
js
iret
adc
cmp
jge
inc
aas
xorl
in
dec
jns
aaa
in
xchg
shl
cmp
lds
shrb
mov
dec
sub
dec
or
mov
ja
outsl
dec
mov
fnsave
lea
fiaddl
sbb
lea
cmp
bound
push
fdivrs
pop
sub
popf
push
sub
mov
imul
icebp
xchg
mov
cmp
xor
rcll
subb
jns
lock
outsl
repz
rorl
adc
ja
lret
stc
scas
inc
sbb
pop
in
inc
add
xchg
shll
movlps
mov
mov
mov
mov
popa
push
xchg
cmp
mov
pop
mov
sarl
mov
or
clc
ja
movsb
icebp
jno
cmp
dec
pusha
mov
shlb
fadd
sub
inc
clc
jmp
jg
dec
fsub
andb
stos
icebp
sub
hlt
pop
mov
jecxz
out
gs
ljmp
je
cmc
pop
mov
sbb
xchg
mov
insl
and
cmp
imul
int3
insl
push
mov
jmp
loopne
adc
inc
jns
popa
pop
mov
stos
push
lcall
adc
lret
testb
adc
cmp
aas
pop
dec
jecxz
clc
or
jo
scas
xor
arpl
and
push
lret
test
stos
ljmp
push
out
dec
in
push
iret
add
dec
or
jmp
pop
sbb
mov
xchg
jnp
push
clc
mov
shl
xchg
mov
fistl
lret
lods
das
je
dec
mov
movsl
mov
lock
lea
pop
lods
rorb
imul
adc
sbbl
push
outsl
fsub
pop
inc
test
ror
fildl
adc
push
adc
push
lods
add
push
dec
int3
cmpsl
sahf
je
out
stos
adcb
mov
add
insb
pusha
aas
aam
data16
mov
mov
mov
xchg
je
dec
adc
mov
xchg
pop
ljmp
adc
jne
inc
jns
std
fs
pop
adc
and
push
and
xchg
outsl
or
xor
mov
push
mov
sub
mov
dec
mov
pop
test
pop
cld
and
or
sbb
push
fdivl
int
iret
sahf
cmp
ds
xor
jg
sahf
test
mov
dec
fisttpll
filds
jbe
js
ficompl
add
aam
mov
rcrl
orl
aad
mov
ss
fidivrl
push
add
dec
filds
pop
aas
jb
cmpsb
dec
int
push
mov
sub
cwtl
mov
xchg
and
repz
or
mov
mov
mov
xorl
mov
adc
sbb
cmp
orl
dec
adc
inc
lods
or
cmpsl
sbb
sbb
lock
mov
adc
in
sbb
xchg
test
pop
or
pop
lcall
pop
bound
adc
out
push
xlat
dec
jmp
pop
int3
cmpsl
and
xor
mov
mov
xchg
jmp
xor
dec
xchg
xor
sbb
cmpsb
popf
paddw
shlb
enterw
sub
and
stos
cmp
adc
aaa
inc
es
test
mov
andl
gs
std
fildll
mull
cld
test
cltd
frstor
lock
mov
das
scas
pop
pop
shl
xor
add
xor
outsl
lods
ret
add
das
and
negl
cmp
into
dec
mov
and
stos
js
stos
pushf
or
sti
sbb
icebp
lock
sbb
decb
or
mov
sbb
nop
cmp
lods
cmpsb
jg
jnp
ficompl
pushf
xchg
mov
popa
iret
in
cmpps
sti
pop
rcr
pop
cmpsl
pop
das
jecxz
inc
lods
mov
ffreep
mov
fbld
sarb
add
fdivs
lods
insb
js
fldenv
cmp
xchg
stc
dec
imul
mov
addl
dec
sub
popf
fbld
mov
jmp
in
inc
cmp
sbb
adc
in
jns
xchg
lds
mov
cmpsl
or
mov
push
sahf
bound
mov
test
js
inc
mov
cmpsl
ja,pn
sti
sbb
xor
js
mov
les
or
sbb
cmp
dec
xor
int
sahf
cltd
in
jae
push
jge,pn
mov
adc
push
dec
loope
and
cmp
xchg
mov
adc
add
outsl
inc
cs
inc
stos
lret
lea
pop
inc
dec
cmp
mov
push
or
insl
sti
xlat
cmpsl
xor
cmpl
sbb
mov
das
aas
push
fnsave
imul
adc
sbb
iret
popa
ret
sub
in
mov
jmp
fildl
sub
adc
outsb
cwtl
pop
jbe
add
in
daa
mov
sbb
push
sbb
push
sub
cs
mov
and
xor
imul
hlt
aas
mov
sub
divb
jo
outsl
dec
test
scas
adc
add
jno
aam
sub
cmp
xchg
es
in
push
mov
mov
jle
rorl
nop
faddl
repnz
adc
mov
rorl
xchg
dec
mov
xor
mov
loop
sub
sbb
in
xor
inc
mov
fiaddl
popa
loopne
pushf
sbb
jmp
pusha
jmp
sbb
rclb
sbb
pop
or
lcall
jns
xor
mov
shll
insb
xor
xchg
add
lock
push
jne
cwtl
push
leave
mov
test
inc
sub
push
fs
cs
je
in
stos
clc
mov
push
jp
dec
mov
pop
movsl
lret
inc
fadds
cmp
popf
out
jno
inc
out
int
inc
pop
sub
push
sar
or
add
mov
xchg
mov
pusha
sub
jae,pt
push
xchg
stc
mov
lock
rcrb
mov
cmc
mov
add
jge
or
hlt
sbb
sbb
pop
jno
jb
mov
add
pop
hlt
jo
sbb
mov
or
test
sbb
lea
cmp
xchg
adc
popf
cs
sub
push
lret
push
dec
adc
imul
shrl
shll
orl
adc
test
push
cmc
mov
mov
push
outsb
iret
fbstp
mov
js
inc
scas
int
mov
jne
mov
mov
inc
pop
sub
lahf
mov
push
out
out
movsl
and
xor
adc
xlat
stc
cmp
insb
cmp
insb
add
mov
and
dec
insl
pop
leave
out
jg
xchg
cs
lds
arpl
test
lods
jl
scas
inc
es
bound
jbe
fstps
popa
es
loopne
and
jecxz
sub
jl
std
mov
loope
push
sub
outsb
insb
out
mov
mov
subb
lock
addr16
daa
inc
pop
cld
xchg
inc
rolb
mov
mov
pop
mov
in
test
inc
loop
mov
adc
js
dec
call
add
pop
and
xor
fdiv
mov
jnp
jnp
mov
lods
jae
stos
xchg
in
sub
insl
enter
inc
cmp
or
mov
mov
jp
cmp
add
lods
shll
scas
push
idivl
shl
xchg
in
adcb
scas
cmp
sub
sub
shll
cmp
xlat
cmpsl
jmp
insb
jo
inc
jnp
mov
mov
push
jnp
movhps
push
repnz
xchg
out
test
sbbl
imul
fcomps
adc
cmpsb
imul
fisubrs
arpl
mov
sbb
pop
sub
hlt
jge
inc
cld
gs
sub
repnz
lods
ss
rcll
push
jecxz
lods
inc
or
mov
xor
fldt
and
pop
fld
inc
daa
sahf
dec
mov
mov
addl
pop
jg
in
pop
stos
cmpsb
imulb
stc
fisttpll
sub
ja
and
fstl
or
addl
jge
sub
sub
jns
or
ret
std
and
add
add
popf
lods
bound
mov
push
pop
inc
fdivrs
jnp
lret
push
sub
jge
and
xor
clc
add
cltd
ljmp
lcall
std
outsl
lcall
push
clc
enter
sbb
add
sti
adc
scas
cmp
cmp
loope
dec
inc
sbb
mov
cmc
sub
fisubs
sahf
pop
int
mov
pop
jle
sbb
jnp
aas
mov
aad
and
enter
dec
addr16
mov
sbb
push
sub
cmp
lods
das
and
daa
imul
shlb
mov
test
dec
and
dec
outsb
cwtl
jg
mov
getsec
ds
adc
pusha
add
mov
aad
je
test
or
push
lahf
iret
stos
xchg
call
mov
test
mov
mov
lods
call
mov
aaa
xchg
mov
stc
outsl
pop
xor
sub
in
jge
lock
sti
in
leave
fsubs
jo
and
iret
fidivrs
add
fsubp
fmulp
xor
and
icebp
sbb
mov
sahf
add
or
pop
mov
in
iret
stos
and
sbb
jae
xor
xchg
or
mov
test
add
mov
ljmp
stc
or
sar
push
aam
mov
fistpl
ret
cmp
xchg
add
dec
xchg
int3
and
add
lods
push
mov
push
movsl
subb
leave
sbb
testb
sub
cmp
mov
sub
pop
cmp
dec
xchg
jnp
jb
sub
das
lea
jle
iret
stc
lods
enter
sub
in
movsl
fldt
xchg
test
hlt
adc
adc
ror
out
jp
cwtl
sahf
mov
xchg
jg
mov
jbe
cmpl
add
outsl
pop
call
out
push
pusha
xchg
testl
xor
aad
or
dec
inc
pop
dec
test
inc
stos
arpl
in
imul
jbe
enter
imulb
pop
loop
inc
sub
in
bound
ficoml
data16
enter
adc
push
addl
mov
aas
add
jmp
add
imul
lahf
push
daa
jle
pop
mov
push
cmpsb
incb
mov
push
and
add
jl
and
lcall
xor
mov
loopne
sub
add
gs
popa
cltd
or
sub
sbb
xrelease
hlt
rorl
hlt
add
or
jecxz
push
movsb
adc
sbb
dec
inc
xor
xchg
int3
adc
mov
sbb
hlt
cs
xchg
inc
call
or
loopne
jnp
shr
cmp
outsl
or
fdiv
xor
mov
mov
push
xor
outsl
out
xchg
jecxz
mov
dec
lods
add
xchg
xchg
lock
fildll
or
mov
cmp
mov
fldcw
dec
stos
and
lods
out
fldenv
fst
mov
push
test
xor
adc
aaa
sbbl
push
pop
add
pop
push
pop
out
bound
push
popa
inc
add
mov
cmp
hlt
xor
mov
mov
cmp
cmpsl
lret
dec
in
daa
orb
mov
lcall
shll
mov
mov
jle
cmp
shl
sbb
subb
jae
or
dec
nop
mov
std
xlat
mov
dec
adcb
repnz
stc
push
inc
out
cmpsb
adc
cli
xchg
sbb
mov
push
int
jo
push
fmull
js
xchg
pop
dec
add
sub
int3
lods
xchg
pop
shrl
mov
sub
hlt
in
xor
inc
std
dec
movl
adc
jbe
loope
jp
ds
pop
cmpsb
js
mov
jg
add
stos
mov
jns
cwtl
enter
pop
cltd
mov
or
push
dec
lcall
mov
adc
push
es
fldt
sti
mov
pop
jb
dec
adc
mov
inc
mov
js
sub
push
and
mov
cmp
lahf
xchg
cmp
insl
cltd
insl
stc
pop
lock
or
mov
dec
pop
pop
sti
or
dec
push
jl
test
lahf
mov
and
jno
aam
cmc
cltd
lcall
test
clc
in
lods
push
push
or
and
sarl
rcll
xchg
dec
xor
cmp
aaa
inc
mov
dec
push
adc
in
push
xor
jno
hlt
cmpsl
jmp
jp
movsl
popa
push
add
cmpsl
lret
out
mov
into
lahf
push
sbb
push
gs
jl
cmpsl
xchg
push
sub
mov
sbb
xorb
sbb
fprem1
lods
cmp
and
ret
and
mov
stc
jp
or
and
popf
in
xor
mov
mov
cmp
daa
int
or
cmp
pop
mov
stc
int
fdivrl
and
sahf
adc
jno
sub
jbe
enter
push
test
push
jns
into
nop
and
mov
out
or
lds
call
cmp
call
xchg
pop
jmp
jp
lret
pop
mov
push
mov
nop
mov
mov
mov
gs
sbb
lahf
dec
dec
les
imul
cmpxchg
mov
test
fwait
and
test
add
push
aad
inc
or
xor
lahf
jno,pt
sbb
xor
mov
cmp
jle
sbbl
mov
mov
test
mov
test
adc
mov
dec
ret
in
test
push
mov
stos
fwait
pusha
mul
and
icebp
in
fsts
jbe
sub
pop
movsl
fsubrl
push
pop
mov
pop
jl
jg
cld
push
fstps
jecxz
insb
loop
popa
xchg
popa
in
stc
pop
push
mov
push
rcrl
mov
pop
jae
push
lret
xchg
mov
addb
or
mov
loopne
jge
pop
mov
xchg
test
test
fs
subl
clc
sub
jo
pop
xor
cmp
addr16
movsl
inc
push
ret
fmull
mov
mov
xor
pop
fcoms
add
sub
popa
cld
mov
sti
or
fnstenv
ficoms
mov
movsl
xchg
adc
fnstcw
loope
add
ljmp
sbb
jmp
xor
fstp
inc
mov
dec
inc
aam
jmp
inc
push
clc
lret
fnsave
enter
loope
mov
lea
dec
or
rclb
aam
scas
push
cwtl
leave
int3
daa
pusha
out
xchg
mov
enter
xor
sahf
xor
cld
inc
lods
adc
aas
mov
dec
adc
hlt
jl
jns
add
cmc
sbb
inc
sub
popa
lds
xchg
repz
xchg
push
cmp
mov
jl
icebp
stc
add
xor
xlat
mov
fs
cmp
sahf
fstpl
in
and
inc
cmp
jno
jmp
jne
jno
mov
mov
and
pop
js
mov
pusha
mov
xchg
push
arpl
sub
subb
mov
xchg
pop
arpl
pop
scas
xchg
push
sbb
xlat
enter
dec
ja
and
xchg
sub
insb
lods
dec
dec
dec
loopne
pop
mov
daa
mov
or
in
mov
dec
sbb
adcb
sbb
dec
push
les
fadds
adc
dec
mov
jl
rol
jo
mov
and
dec
je
add
mov
sbb
pop
lods
mov
push
cld
dec
pop
inc
out
enter
xchg
frstor
push
loop
push
and
stc
test
mov
mov
and
jmp
adc
mov
cmp
inc
mov
push
iret
fildll
mov
rcrb
arpl
dec
clc
loop
push
xchg
xlat
in
jbe
xchg
mov
pop
xchg
push
xor
mov
sub
out
and
and
cmp
inc
mov
sub
inc
mov
jbe
inc
out
inc
inc
or
jno
adc
xlat
xchg
or
shlb
push
test
bound
mov
flds
lods
jmp
imul
jmp
fmull
mov
pusha
sbb
xchg
xorb
cltd
aad
jns
dec
lret
sbb
test
sbb
xchg
inc
cmp
test
jb
aas
lcall
push
ss
ss
sub
insl
mov
lods
repz
in
xor
jmp
cmp
jno
fwait
add
call
adc
cmpsb
call
mov
add
xor
js
stos
dec
adc
cld
xlat
jmp
xchg
cmp
out
dec
or
scas
and
ret
sti
jae
dec
jb
popf
enter
je
daa
xchg
rolb
sarb
ficomps
push
or
hlt
inc
mov
insb
jp
add
jno
js
fucomip
popf
les
sub
mov
push
mov
push
lahf
adc
jmp
sbb
xor
mov
fsubrl
data16
pop
xchg
and
lods
push
bound
xchg
mov
ljmp
ss
and
sub
add
mov
mov
addr16
movq
fistl
dec
stos
sub
mov
ret
cmp
hlt
cmp
mov
or
cmp
out
in
mov
xor
inc
jb
faddp
mov
push
int
adc
out
popa
cmp
sahf
jne
dec
mov
fwait
mov
stos
scas
cs
lods
cmpsb
sti
add
dec
mov
fcompl
loope
jnp
sbb
xchg
adcb
cli
or
mov
sbb
arpl
arpl
sub
fidivrl
add
mov
lahf
and
pop
icebp
mov
enter
sbb
inc
xchg
or
jns
and
in
ret
push
or
add
cs
repz
sbb
hlt
imul
adc
lods
push
cltd
jecxz
sub
call
mov
mov
dec
mov
jno
addr16
sbb
lret
push
add
rcrl
aaa
adc
ss
jnp
out
cltd
push
adc
sub
es
movsl
mov
es
push
sub
out
divb
icebp
xor
and
popa
jg
movsl
fcmovnu
adc
mov
repnz
aad
xlat
fwait
pushf
cmp
loopne
jecxz
cmc
es
inc
or
cmpb
mov
fadd
in
xor
xor
jmp
xlat
add
insl
jl
lods
inc
loopne
sub
lods
data16
cmp
out
xor
lock
cmp
dec
pop
jle
fwait
pop
out
mov
sbb
aas
ss
sub
dec
jb
inc
push
lds
and
jb
mov
daa
mov
mov
hlt
push
cmpsl
push
aam
in
mov
cmp
mov
imul
xor
repz
stc
dec
jbe
mov
adc
loop
dec
scas
push
jl
mov
sbb
repz
test
push
movsl
xor
pop
mov
xchg
clc
test
push
xor
cmc
or
aas
or
jae
aas
mov
in
sbb
dec
fdivs
pop
popf
and
sbb
dec
xchg
dec
dec
mov
testb
ss
add
rolb
int
cmp
dec
pushf
mov
cli
lea
rclb
aas
ret
sbb
adcl
add
gs
add
xorb
fwait
mov
in
mov
adc
pop
sbb
inc
sbb
scas
mov
shr
cwtl
xor
cmp
cmp
and
insb
inc
aad
push
jnp
push
push
sub
push
push
xchg
xchg
xchg
call
mov
lods
or
enter
dec
sti
call
sahf
push
cmp
testl
mov
inc
inc
ja
add
cwtl
lods
lret
dec
aad
negl
pop
lods
or
jg
xor
and
out
inc
clc
and
push
and
or
outsb
mov
aad
pop
iret
pushf
fwait
push
sbb
outsb
fcoml
adc
sbb
and
js
push
xchg
nop
push
inc
ss
xor
xlat
pop
xorb
lods
add
cmpsb
mov
mov
and
jo
movsl
pop
popa
pop
sbb
mov
icebp
in
mov
push
mov
cmpsb
mov
je
lea
xor
mov
mov
fucomip
inc
mov
xorb
fdivl
sti
jns
fbld
mov
fwait
lds
mov
adc
mov
adcl
mov
test
jns
aam
sub
adc
sub
dec
iret
sub
fs
fimull
jno
mov
lds
push
cmp
leave
aas
shrl
shlb
fwait
xor
jo
xchg
sbb
test
jb
mov
enter
dec
dec
pop
xchg
movsb
stc
and
stos
xchg
leave
mov
outsl
js
hlt
push
enter
xor
pop
int
inc
mov
ss
loope
enter
or
in
adc
inc
mov
clc
inc
push
iret
aad
push
mov
lods
insb
cmpl
xchg
loope
imul
pop
jecxz
std
pop
cwtl
xchg
sbb
loop
sub
push
cld
mov
into
cmp
mov
outsl
outsl
inc
test
lds
push
pop
std
inc
jno
repnz
fimuls
sbb
scas
inc
cmpsl
cmpsb
clc
pop
cmp
cld
adcl
popf
je
popa
sub
in
and
jne
xchg
mov
dec
stos
dec
push
scas
mov
or
loopne
fidivl
repnz
add
and
push
sahf
jnp
xor
into
pop
test
jae
fsts
ret
mov
lret
mov
rol
imul
jo
sbb
push
push
in
stos
js
dec
das
cmp
add
enter
cs
rol
lahf
je
in
xchg
daa
adc
inc
insl
mov
and
xor
int
pop
ljmp
movb
out
clc
in
shlb
mov
sbb
add
in
lods
pop
add
cltd
add
js
sub
inc
mov
into
jl
mov
push
aaa
sbb
nop
pushf
mov
adc
rcrb
daa
push
fidivrs
cwtl
mov
pop
daa
sbb
pop
clc
test
pop
andb
daa
cmpsl
cmp
pop
pushl
push
or
cmpsl
pop
sbb
lret
fnstsw
xor
ljmp
cli
aad
loop
stos
or
sub
aaa
push
mov
mov
dec
mov
test
out
add
mov
cmpsl
test
mov
pop
inc
bsf
fdiv
inc
push
push
push
cmpsb
arpl
sarb
scas
int3
cmc
adc
lcall
hlt
in
push
insb
push
or
aas
push
in
add
sbb
lahf
adc
es
std
add
std
mov
cmp
sbb
xor
sbb
cmpsb
jl
mov
inc
arpl
mov
sub
xor
or
mov
mov
pop
push
or
int
jle
inc
jmp
les
xchg
inc
dec
add
imul
mov
stc
int3
in
lret
or
sbb
xchg
addb
inc
jne
or
jne
pop
or
ss
and
fnsave
lock
xchg
dec
frstpm(287
icebp
jle
pop
or
fadds
sbb
outsb
scas
or
mov
mov
or
mov
jge
inc
jmp
adc
pop
ret
addr16
mov
and
pop
ds
fbld
les
leave
ja
sahf
out
in
add
adc
xchg
sub
test
out
fst
jns
aas
in
mov
add
push
bound
xor
jo
aas
rclb
cmp
inc
jne
or
hlt
sbb
insl
cli
aam
push
dec
sbb
push
add
pop
es
fiadds
xor
ret
add
out
ds
sub
popf
pop
lds
add
stc
mov
jns
lock
and
repz
adc
jns
mull
and
pop
xchg
xor
mov
andl
push
aad
or
sub
jo
jnp
ret
movsb
out
cmp
les
lock
or
mov
shl
mov
aas
xor
sbb
mov
pop
pop
jne
out
imul
mov
mov
dec
mov
repnz
ret
stc
repnz
loope
sbb
div
push
inc
fsubrl
arpl
loope
cmp
adc
rcr
rorl
insb
jl
sahf
jae
mov
roll
push
out
repz
add
xor
repnz
lret
pop
cli
ds
fs
mov
addr16
push
lret
shll
out
xchg
outsl
inc
movsl
lds
adc
lock
movsb
mov
aas
dec
ds
xor
cwtl
mov
bound
xchg
push
mov
add
pop
jae
inc
lea
jg
add
mov
fwait
inc
mov
adc
mov
rclb
cmp
and
js
rol
xor
stos
pushf
mov
xadd
mov
inc
jmp
cmpsl
repnz
or
adc
mov
mov
cltd
test
sbb
sahf
xorl
inc
jne
stos
loop
cmpsl
and
add
add
sti
adc
leave
xchg
inc
pushf
push
or
inc
rcrl
push
mov
xchg
inc
repz
jno
leave
mov
push
lret
jne
sbb
sbb
daa
or
movsl
sub
fldt
ja
insl
adc
aam
pop
dec
sbb
cmpsl
mov
mov
jmp
cmpsl
xchg
imul
mov
ret
fisubrl
pop
xlat
je
in
loop
push
gs
pop
add
mov
mov
push
jo
sbb
jnp
and
lahf
pop
mov
repz
ss
mov
and
or
push
inc
dec
pop
popa
fstpt
push
adc
xor
icebp
rclb
xchg
xor
xchg
inc
in
jno
hlt
sub
insb
andl
fsubrs
std
lock
arpl
inc
mov
mov
mov
into
mov
add
cli
push
lods
filds
push
or
fwait
and
orl
mov
dec
xchg
cmp
cmpb
cmpsl
pusha
ror
rcrl
add
leave
sbb
add
arpl
int
shrb
or
pop
and
or
lret
rcl
adc
inc
outsb
mov
mov
mov
inc
pop
call
mov
jl
mov
stc
jns
call
mov
inc
jb
mov
or
mov
insb
in
int
sbb
dec
adc
js
cmp
sbb
inc
ret
icebp
in
fldt
repnz
popf
test
cmp
mov
cmc
ljmp
cltd
je
and
add
cli
push
movsb
sbb
xchg
add
jl
pop
add
mov
inc
in
inc
inc
movsl
mov
push
push
mov
or
sbb
cmp
out
insb
pop
int3
xchg
movsb
xchg
fisubrl
jns
in
bound
xchg
push
mov
or
cli
jmp
jecxz
rcrb
cmp
dec
dec
in
adc
std
mov
mov
aam
pop
ror
sub
jbe
rol
cmpsb
mov
mov
push
xchg
dec
sub
adc
xchg
mov
pop
xor
cmp
adc
mov
mov
sbb
in
imul
xchg
add
into
mov
inc
push
add
fwait
out
dec
adc
data16
insb
sbb
lock
adc
adc
mov
shlb
mov
inc
mov
push
xchg
pop
fwait
xor
cmp
xchg
enter
pusha
out
push
imul
jb
lahf
sarl
pusha
js
test
and
push
repz
test
push
push
nop
and
jne
sbb
dec
xchg
push
xchg
loopne
cli
or
test
js
push
adcb
xlat
push
cmp
dec
mov
mov
mov
add
fwait
scas
fwait
js
dec
mov
inc
inc
dec
jne
push
pop
cltd
mov
add
pop
out
fimuls
je
xor
test
mov
arpl
xchg
out
inc
jnp
aas
xchg
int3
cs
in
dec
jmp
xchg
popf
loop
in
and
mov
sbb
mov
mov
mov
add
out
jno
push
clc
mov
cmp
mov
mov
and
inc
pop
int3
xor
popf
push
jbe
adc
pop
cmc
int3
push
nop
inc
sub
loope
cli
outsl
adc
hlt
pop
pop
sbb
jno
es
adc
popa
push
lods
insb
pushf
or
je
mov
mov
imul
cmc
cmp
loope
sub
inc
insb
jg
sarb
xchg
pop
mov
test
mov
enter
jb
sahf
push
iret
xor
fisttpl
loop
xor
cmp
push
cmpl
rcl
jno
loope
sub
test
xor
xchg
adc
push
ror
xchg
scas
mov
lret
lods
lock
add
icebp
lahf
and
ljmp
inc
test
mov
mov
leave
insb
mov
lret
or
clc
xchg
enter
and
sub
sbb
imul
cmp
mov
pop
adc
fidivs
in
jae
bound
push
gs
nop
iret
cs
orl
pop
adc
nop
jle
hlt
cmpsl
or
cwtl
push
scas
or
cmpsb
ss
cs
icebp
out
out
and
pop
or
xchg
scas
xchg
jecxz
jo
cs
sbb
pop
int
ds
lods
push
aaa
mov
inc
orl
mov
xor
mov
pop
jmp
cmpsb
addr16
sub
jns
inc
lret
stos
xlat
aaa
cmp
outsl
icebp
jnp
push
enter
add
xor
sbb
dec
imul
ficoml
mov
outsl
icebp
aaa
data16
scas
dec
push
daa
rcr
sub
cmp
sbb
lahf
mov
cwtl
cli
cmpb
inc
pop
cld
inc
hlt
adc
push
loope
std
sarl
push
mov
jmp
rcrl
in
dec
mov
sbb
cmp
sub
sub
dec
ret
inc
or
outsb
sbb
lds
cld
mov
shrl
cltd
rcr
sbb
mov
fisubrs
adc
inc
call
xor
cmpsb
pop
jne
mov
andl
push
jecxz
and
jmp
test
add
cwtl
lea
cmc
sub
push
daa
push
adc
mov
lea
adc
pop
mov
or
mov
jbe
xor
pop
add
pop
mov
stos
adc
jo
pop
in
pop
imul
andl
arpl
inc
imul
cwtl
mov
mov
cmpsb
jno
or
arpl
pushaw
mov
add
jecxz
push
cmp
pop
push
outsb
push
in
aam
mov
cwtl
call
stos
popa
out
les
lcall
push
js
adc
or
stc
sub
icebp
mov
pop
inc
test
stos
js
cmpsb
addb
xchg
rorb
mov
das
cmpsl
cld
pop
leave
mov
repnz
add
mov
push
add
xchg
daa
in
stc
dec
cmp
addb
aam
stc
adc
push
rorl
pop
dec
xor
sbb
push
scas
popf
cmp
daa
push
rclb
inc
mov
repnz
pop
pop
ja
aas
xchg
clc
fistpll
xor
ret
cltd
xor
jl
mov
loop
cli
dec
mov
ds
in
mov
ret
mov
mov
aam
xor
lret
mov
mov
or
inc
stos
clc
lods
pop
cld
outsb
mov
leave
adc
andb
aad
jno
ljmp
shrb
pop
xor
fdivl
mov
fcoms
mul
idivl
and
sub
mov
dec
popa
loopne
mov
sbb
mov
inc
pushf
outsl
imul
fs
or
movsb
mov
loope
add
inc
pushf
xchg
outsl
divl
jbe
aas
xlat
sbb
movsb
shlb
cmp
pop
loopne
cld
gs
enter
imul
fcoml
gs
aad
dec
mov
push
popf
xchg
pop
jmp
mov
sbbb
add
mov
pop
pop
adc
mov
xchg
lock
xor
pop
test
repnz
mov
dec
jne
int
aad
and
stos
inc
dec
sub
mov
rol
fcomps
fs
movsl
push
fsts
mov
inc
and
add
hlt
int
jne
bound
fs
pop
imul
gs
push
jb
push
mov
sahf
lock
outsl
lcall
adc
mov
int3
in
mov
xchg
dec
mov
adc
ljmp
pop
je
sbbb
rclb
xchg
mull
and
inc
xor
lret
shlb
push
xchg
arpl
fcmovnu
popf
outsl
push
jecxz
xchg
lds
scas
orb
int
xor
push
je
cmpsl
jecxz
pop
imul
jmp
cmp
notl
dec
sarl
shll
jle
dec
pop
dec
mov
shlb
dec
adc
movsl
repz
pushf
scas
mov
cmp
outsb
inc
inc
insl
hlt
jno
daa
xor
dec
enter
xor
mov
mov
push
fincstp
mov
mov
and
jns
inc
push
sbb
ss
pop
or
cld
dec
aaa
push
dec
hlt
mov
arpl
add
notl
jmp
in
sbb
out
jbe
scas
xchg
add
sub
xchg
mov
lock
push
or
cmp
jl
sbb
sbb
pushf
sub
dec
popf
loopne
in
cmpsl
out
sub
jge
scas
mov
pop
imul
cwtl
mov
push
pop
jno
mov
fs
mov
fdivrs
inc
cmp
ss
dec
adc
aaa
in
push
ss
push
fwait
xor
mov
push
inc
mov
mov
jo
bound
mov
iret
jmp
push
dec
xchg
pop
xchg
les
xor
sbb
dec
scas
mov
xor
fisttpll
xor
bound
ja
jle
out
dec
jae
dec
cld
mov
lcall
cmp
pop
notb
loop
cmp
sahf
cmpsl
push
cmc
sub
test
cmp
push
inc
xchg
cmp
dec
arpl
add
push
cwtl
into
mov
popf
mov
adc
push
sub
daa
and
insl
aad
inc
rorb
sahf
mov
xchg
insl
int3
sub
cwtl
imul
out
in
xlat
mov
or
jo
cwtl
dec
cs
pop
out
fimuls
pusha
data16
ja
jo
fdivrs
mov
lds
jecxz
in
cs
out
mov
mov
test
pop
lods
mov
add
inc
rcr
sbb
pop
xor
lret
nop
arpl
divb
xor
jge
and
jo
inc
shufps
xchg
xorb
rcrb
ljmp
imul
into
mov
fcmovne
lods
sbb
jmp
inc
into
in
in
sub
inc
xor
pop
push
sbb
pop
jae
dec
sarl
loop
sti
push
int
xor
out
rcrl
addr16
sbb
inc
sar
dec
push
adc
pushf
je
movsb
das
inc
adc
shrb
add
jns
push
mov
aad
add
out
rclb
xor
or
jnp
sbb
aad
inc
cmp
je
mov
push
pushf
add
pop
cmp
mov
inc
mov
decl
dec
insb
cltd
leave
cmp
jmp
inc
pop
xchg
repz
push
std
mov
loop
sub
stc
les
or
jl
cmpsl
or
fs
add
js
or
insb
inc
jne
sub
cmp
jne
aaa
sub
jp
jle
cli
stc
flds
lock
xchg
je
cs
add
mov
aaa
cs
jp
clc
fadds
sbb
test
mov
pop
es
stc
dec
push
adc
inc
test
sahf
and
push
aas
insl
xchg
lahf
xchg
and
hlt
push
je
add
movsb
mov
data16
orl
mov
and
movsb
cmp
jg
es
into
int
inc
int3
dec
jmp
mov
push
sub
mov
fwait
dec
cmp
mov
cmp
lahf
pop
int3
sbb
xor
adc
sbb
data16
into
dec
mov
cmc
or
pop
xchg
dec
mov
xor
icebp
nop
sbb
divl
lret
xor
fistpl
movsb
outsb
xchg
add
call
mov
fwait
bnd
pop
aad
fscale
cmp
pop
int
cmc
xchg
fidivs
cmp
loopne
lods
xor
ljmp
push
icebp
call
add
sub
jl
mov
insl
subb
mov
or
or
add
pop
andl
mov
aaa
enter
out
js
insl
xchg
sarb
mov
xor
mov
imul
add
adc
mov
xchg
rolb
sysret
frstor
ja
mov
pop
outsb
insb
xor
mov
lret
mov
sub
ret
movsb
push
sahf
adc
jl
and
xor
pusha
add
std
in
aas
or
ret
jge
pop
iret
ss
rcl
mov
xor
adcb
nop
cmc
les
mov
jns
add
sbb
mov
mov
sbb
xor
not
mov
adc
mov
cmp
arpl
add
sub
fsubp
test
cmp
sub
fcompl
mov
jnp
dec
mov
jno
cmp
out
push
jnp
dec
dec
or
pop
pop
call
push
inc
or
xor
push
stc
movsb
mov
lock
pop
push
xor
inc
sbb
adc
inc
inc
int3
xor
cmpb
pop
stc
xchg
sub
mov
ficompl
testb
mov
in
sub
adc
add
xor
or
or
dec
sahf
mov
test
mov
mov
loope
xchg
hlt
popf
lret
ds
pop
test
loopne
dec
pushf
rcl
dec
cmp
xor
repz
aaa
out
out
test
xlat
and
push
mov
mov
pop
cltd
jg
cltd
mov
cltd
sbb
test
mov
mov
notb
and
mov
push
mov
cmpl
cwtl
clc
push
inc
imul
jg
and
cmp
enter
push
fisubrs
mov
sub
cmp
das
inc
scas
hlt
xor
pop
cwtl
jne
inc
lock
jne
gs
aad
aaa
push
push
into
jns
ret
lahf
iret
in
jl
mov
aad
pop
aaa
add
mov
cmp
and
cs
jl
jbe
mov
aad
pop
mov
iret
push
xchg
out
mov
inc
jp
cld
stc
pushf
sbb
add
dec
cmp
ret
std
pop
sub
mov
ret
sahf
aad
jne
in
inc
jge
jmp
js
stos
lds
pop
je
popf
loope
test
or
jl
sbb
dec
dec
ret
out
fnstsw
lret
and
mov
sub
cli
aad
sahf
cmp
push
inc
cli
add
fdivs
ds
or
inc
in
pop
imul
movsb
sbbb
lock
inc
jmp
xor
adc
adc
jl
rcrl
cmp
fnsave
and
or
adc
sub
mov
cmp
xor
dec
jmp
add
xchg
push
xchg
xor
fstpl
aad
lahf
cmp
lcall
jns
aam
outsb
xor
sub
cmp
imul
sbb
in
sub
push
out
jmp
or
jp
out
mov
lcall
in
push
fists
popf
lret
or
push
fwait
ljmp
pop
push
mov
inc
mov
add
lds
jo
ljmp
das
cmp
pop
push
dec
cmp
call
pop
jp
loop
adc
dec
push
ds
add
lcall
cmp
and
insl
lods
jo
add
cli
cmp
je
pop
dec
inc
xor
sbb
sahf
call
cmp
std
ss
lret
or
lods
mov
lret
xlat
mov
inc
pop
divb
mov
enter
pop
movsb
mov
lods
or
dec
sbb
jge
pusha
mov
daa
adc
xchg
adc
clc
jae
jbe
pop
stos
je
add
pop
dec
sub
bound
push
jns
and
aas
cmp
fwait
mov
popf
cmp
lods
insb
loop
push
add
ljmp
add
shlb
inc
sahf
xor
jae
jmp
push
sub
xchg
sub
sub
enter
pop
cmpsl
cmpl
and
mov
inc
outsb
jecxz
mov
inc
sahf
mov
scas
sub
stos
xchg
adc
mov
js
jae
adc
shr
ss
pop
push
hlt
imul
insb
loope
repnz
jb
std
add
pop
ja
adcb
fcmovnbe
sub
xor
sahf
popf
iret
sbb
loop
lret
xchg
lret
jbe
stos
insl
ret
cmp
pushf
add
lea
sbb
fisttpl
cld
aam
mov
mov
je
pop
faddp
xor
rcrb
jne
jnp
loope
std
fstpt
pop
test
sub
sub
mov
jg
testl
mov
sti
sub
dec
cmp
and
cwtl
gs
pushf
int3
inc
jmp
jl
out
mov
pusha
sahf
rcll
outsb
xchg
roll
push
cmc
mov
mov
sbbl
jmp
imul
movsl
jo
pop
sub
jno
pop
das
xor
or
loope
sub
sbb
mov
push
sti
mov
mov
and
pop
mov
push
cs
dec
jb
push
push
ljmp
pop
rclb
xchg
cmp
ss
sarl
es
in
outsw
inc
test
inc
inc
cmp
mov
push
filds
cs
mov
mov
movsb
add
add
icebp
lods
push
ret
popa
test
arpl
sbb
cmpsb
pop
aaa
xchg
xchg
fcmovnbe
xchg
mov
add
gs
xchg
jg
push
pop
ret
in
orl
push
adc
loope
adc
jnp
popf
pop
jno
xor
jbe
inc
xchg
push
lcall
sbb
cmp
lock
repz
mov
loopne
cmpl
out
out
loop
and
sbb
shlb
push
sub
dec
and
cmp
pop
jbe
insb
mov
outsb
aas
mov
adc
ljmp
fstl
push
and
push
adc
mov
gs
or
fcmovu
push
lret
in
arpl
jne
xlat
imul
cmpsl
dec
pop
ss
sbb
outsl
inc
cmp
push
test
adc
call
ret
mov
push
mov
hlt
xchg
std
enter
fs
mov
xchg
int3
ret
shl
inc
lret
fstpl
dec
ljmp
pop
pop
dec
sub
mov
push
insl
mov
inc
pushf
jbe
lahf
lds
xchg
mov
sub
push
sbb
pop
dec
pop
inc
leave
lret
xchg
aad
push
movsb
push
adc
and
lods
mov
push
iret
cmp
sbb
mov
cli
outsb
pop
push
test
loopne
dec
adc
adc
scas
fcompl
into
pop
add
stos
mov
jns
lock
cmp
sbb
movsl
sbb
mov
aad
sbb
out
xchg
fadds
int
fsubs
test
repz
inc
or
mov
mov
aaa
movsl
in
aad
and
aaa
mov
push
js
sub
xchg
sbb
pop
jae
sbb
fimuls
inc
pop
fidivs
es
push
push
sub
ds
adc
loopne
mov
mov
ja
test
es
xor
sub
jns
lods
sbb
dec
cmpsl
or
or
ret
jmp
jnp
mov
mov
jbe
cmp
fwait
sti
movsb
lret
jp
cs
jle
scas
shr
ret
mov
pop
lret
jecxz
or
cmp
cmp
cmp
test
test
faddl
mov
adc
mov
sub
popf
mov
jmp
cmpsl
test
push
mov
cmc
repnz
and
pop
stos
jl
arpl
decl
fmull
jecxz
mov
mov
in
xchg
jecxz
pop
sbbb
jle
cmp
mov
shll
push
sub
inc
movsl
std
je
push
sub
clc
fistpll
shlb
jmp
ret
xchg
enter
lds
fs
xchg
push
out
ss
mov
ja
stos
mov
fstl
lcall
inc
fldenv
lret
push
mov
pushf
data16
data16
cmc
testl
aas
mov
or
dec
hlt
sbb
mov
push
add
lock
adc
ret
test
or
inc
push
dec
mov
and
insb
fmull
xor
dec
in
cmp
and
fldlg2
fwait
mov
mov
subb
fiadds
popa
jns
mov
xchg
mov
push
fcompl
in
cmpsb
dec
mov
pop
fisttps
jb
jns
cmp
imul
xchg
ficompl
out
ljmp
jp
cmp
add
inc
out
jno
dec
out
ds
cwtl
dec
movsb
test
fcomps
push
xchg
fsubrs
testl
sub
fistpll
adc
cmp
enter
jl
cmp
shrl
mov
icebp
add
call
jmp
push
out
sub
mov
and
mov
push
hlt
data16
and
les
icebp
xor
jnp
outsb
cmc
mov
icebp
push
xchg
sbb
xchg
cmp
add
cmpl
jnp
push
xchg
faddl
imul
pusha
lock
jg
and
xor
out
dec
mov
sbb
int
test
loope
movsl
test
push
pop
sbb
loopne
push
and
ljmp
repz
jmp
jb
sbb
mov
fcmovnb
stc
sub
packuswb
jmp
rorl
les
pop
clc
pop
or
mov
notb
jne
cmp
and
xchg
in
into
sbb
or
sbb
je
outsl
stos
or
fimuls
mov
lock
aam
push
xchg
sub
or
inc
cmp
cmp
and
xchg
out
aas
rcr
push
push
mov
ss
out
lahf
cmpb
inc
fstps
sub
and
jecxz
mov
lods
mov
ds
inc
sar
loop
fadd
pushf
xchg
aas
sti
inc
aam
out
data16
jle
cs
icebp
push
sbb
sub
sbb
inc
stos
fwait
pop
aam
sub
adc
push
pop
popa
and
test
mov
lock
in
stc
andl
add
xchg
dec
mov
mov
add
xchg
dec
icebp
xor
roll
jno
dec
in
mov
pushf
push
jae
fstpt
call
xlat
in
insb
mov
jbe
push
std
insb
cmpb
es
aad
popf
test
mov
paddusw
pop
into
sub
jmp
pop
cmp
les
jmp
lds
inc
sub
mov
lods
xchg
shll
push
lahf
out
fnstenv
sub
sarl
in
adc
dec
dec
insl
jae
pop
add
push
popa
std
ret
xor
mov
mov
pop
dec
jmp
push
into
or
xor
push
jmp
add
lret
rorl
out
je
popa
mov
data16
fwait
scas
scas
pop
mov
xor
xor
ss
ds
orb
loopne
xchg
and
jno
in
mov
movsl
nop
sub
and
ljmp
add
jecxz
pop
das
push
mov
add
sahf
jge
cmp
cmp
in
ds
dec
divb
pop
fcmovne
mov
ja
lcall
xor
fidivrl
push
push
or
mov
ret
xchg
push
add
das
loop
gs
addr16
xor
or
ret
and
cmpsl
adc
loop
hlt
cmp
pop
adc
aad
shl
pop
xor
notb
push
jl,pn
jl
stc
or
fcompl
xor
loop
or
adc
sub
dec
stos
ds
cmp
xchg
mov
popa
lcall
call
mov
jecxz
dec
int
xchg
sbb
or
test
adc
add
jbe
loop
xchg
sub
cld
les
pusha
popf
loope
cmp
lock
int
pushf
cmp
add
mov
popa
loop
pop
jns
ficoml
pushf
jmp
mov
test
stos
popl
or
ret
imul
sbb
push
fsubrl
lock
inc
cmc
out
sbb
and
lret
jmp
push
pop
dec
inc
leave
adc
arpl
insl
push
orl
mov
jae
jg
adc
push
jb
xchg
push
mov
add
adcl
push
jecxz
mov
rol
sbb
adc
dec
out
mov
sti
popa
fdiv
jne
jns
and
sub
hlt
leave
mov
leave
xchg
pop
ljmp
gs
ret
sub
pop
dec
adc
xor
cli
imull
push
rcl
and
or
in
insb
ja
test
loop
mov
in
jno
pop
pop
sbb
mov
rcl
jg
lock
cli
out
sub
xchg
add
in
pop
xor
push
xchg
ficoml
or
cmp
or
adc
scas
cmpsb
dec
in
or
scas
je
in
jae
and
pushf
fldenv
mov
push
adc
cmp
jnp
pop
mov
stos
push
popf
adc
mov
jp
ljmp
or
xchg
inc
inc
addr16
adc
dec
cli
cwtd
fistps
xchg
jae
sub
xchg
inc
push
repnz
test
push
das
lahf
outsb
ret
mov
shll
xchg
lahf
out
xchg
push
inc
xchg
mov
push
sarb
rcll
adc
sub
lods
jo
lds
mov
sbb
push
dec
pushf
arpl
adc
loop
popf
aaa
jmp
imul
pop
stc
cmp
push
mov
inc
pop
cld
mov
adc
fs
outsl
in
adc
psadbw
sahf
fstps
cmp
mov
in
inc
jb
xor
popl
loope
mov
or
fildll
pop
outsl
fsubl
int
sbb
dec
fists
mov
xchg
mov
fdiv
push
cmp
xchg
call
mov
jmp
push
mov
lods
inc
adc
fstps
xor
sbb
pop
add
or
loope
adc
cmp
in
repnz
icebp
shrb
pusha
fsubrs
ret
adc
sub
and
sub
push
cmpsb
lock
outsb
call
out
imul
mov
jb
js
das
sbb
add
fistpl
cs
ficomps
bnd
sbb
push
lahf
mov
aad
push
ss
xchg
mov
xchg
fnsave
stos
decl
mov
xchg
aas
imul
test
cmp
vsqrtsd
mov
inc
rcll
xchg
pop
ljmp
pop
xor
xchg
test
cmc
mov
cmpsl
pop
loope
in
popa
stos
cmpb
sbb
mov
or
mov
pushf
xor
jnp
pop
jnp
jmp
cmpsl
mov
jle
test
ljmp
lret
stc
sub
xchg
sbb
xor
pop
shlb
push
sbb
mov
xchg
push
cmpsb
subb
mov
mov
inc
outsb
or
ret
imul
rorb
aas
add
rolb
aad
or
movsb
adc
jg
sub
enter
push
dec
orb
and
fmull
mov
je
rorb
mov
lods
out
adc
daa
push
and
out
movsl
test
cmp
jl
je
inc
jo
into
and
sbb
pop
dec
push
rcll
push
fidivs
fs
adc
push
xor
clc
xchg
mov
insl
add
iret
lea
sub
test
mov
pop
cmpl
insl
mov
bswap
call
add
push
mul
xlat
aam
mov
cli
sbb
je
and
add
and
je
pop
mov
test
or
int
repnz
aam
sub
clc
pop
inc
sbb
in
in
push
mov
rcl
addl
adcl
sub
mov
fs
frstor
fwait
inc
outsl
pop
or
and
in
into
in
sarl
cmp
push
std
xchg
push
cmp
test
js
jae
xor
pop
cmp
sub
xchg
jae
aaa
cmp
push
popa
test
jbe
jbe
int
adc
add
dec
mov
or
xchg
int3
out
pop
cmpsl
jmp
mov
adc
sahf
stos
mov
pop
sub
aaa
push
movsl
stos
mov
mull
out
jp
pushf
ss
pop
jnp
add
push
push
mov
adc
mov
scas
insb
jl
adc
jo
inc
add
cmp
popf
orl
pop
adc
es
test
adc
clc
xor
pop
mov
ds
mov
mov
orl
mov
aad
fidivrl
into
adcl
subl
call
cmp
mov
data16
popa
jle
adc
pop
sti
and
mov
mov
sbb
out
std
or
les
lahf
out
sub
daa
cmp
push
mov
icebp
cwtl
lods
add
add
daa
cmp
loope
push
or
adc
lret
inc
iret
loopne
mov
add
xchg
imul
sahf
adc
mov
cmpsb
dec
jmp
sub
mov
fdivrl
mov
addr16
test
dec
repz
test
xor
test
push
lea
add
test
in
loopne
mov
xor
inc
push
and
push
mov
add
out
push
xchg
dec
mov
adc
andl
insb
jo
add
adc
mov
cmp
pop
clc
inc
aaa
jne
aaa
xchg
jae
jo
add
mov
pop
jb
fbstp
jne
rorl
mov
cmc
pusha
in
dec
or
and
insb
inc
mov
jno
cmp
fidivrs
stos
mov
add
js
ret
js
cmp
sbb
das
nop
stos
ljmp
sbb
jns
mov
jno
push
adcl
jb
pop
lahf
jb
test
popa
jp
push
pop
rcrl
xchg
mov
add
adc
scas
ret
paddd
inc
jae
lret
cmp
adc
pop
fwait
adc
cli
fsubl
add
and
push
cwtl
sub
fidivrl
adcl
jno
call
insb
pop
loope
push
mov
js
std
incb
cmc
cs
ss
aaa
cld
jecxz
mov
sbb
and
pop
lods
sub
aam
ret
pop
rorb
aam
hlt
std
lret
sbb
sub
int3
nop
fidivs
and
push
jmp
cmp
insb
push
jnp
popl
push
daa
add
in
mulb
xlat
sbb
xchg
xchg
add
loope
mov
and
inc
cltd
jns
repnz
mov
mov
mov
lods
push
mov
movsl
cmp
fwait
das
hlt
mov
pop
push
ret
iret
lock
icebp
lea
lods
push
rcrb
lcall
xchg
jecxz
addb
dec
scas
jbe
pop
dec
xchg
cmp
inc
movsb
das
int3
out
movb
in
sbb
insb
data16
fcomps
sbb
repnz
aas
pop
data16
bound
mov
adcl
or
movsb
lcall
sbb
or
jb
inc
andb
cmp
subb
inc
in
cltd
mov
dec
mov
loope
int
stos
repz
pop
icebp
lret
xchg
into
inc
cmc
inc
out
les
cmpsl
lods
xlat
pop
shlb
adc
mov
add
sarl
je
jno
mov
aam
jg
jmp
mov
mov
xor
lcall
and
or
test
movsb
fdivl
cmp
sub
mov
stos
jns
add
cmp
mov
lock
popf
call
mov
inc
adc
mov
jbe
pop
xor
cmc
aam
dec
cmpsl
lods
js
sbb
rcrl
aam
mov
jnp
aad
bound
rorb
loop
add
outsb
clc
js
fadds
repz
mov
in
shl
jb
add
xor
ljmp
inc
xor
stos
and
and
fcomps
movsb
popa
adc
leave
fwait
jb
scas
and
sbb
flds
pusha
mov
pop
adc
imul
popf
jecxz
nop
cld
hlt
xor
out
mov
std
imull
in
mov
xchg
sbbb
aas
jl
sub
add
adc
adc
xchg
fsubrl
test
xor
push
shlb
dec
mov
mov
std
in
lret
xchg
lods
inc
mov
daa
testb
inc
mov
mov
push
rorb
sbb
sti
mov
and
movsb
adc
int3
dec
les
loop
or
sbb
push
out
dec
dec
cmp
cmp
jmp
xor
inc
sbb
cld
mov
adc
add
sbb
rcll
push
ljmp
test
mov
add
cmp
repz
jo
adc
add
rorb
pop
pop
pusha
in
aas
mov
out
pushf
sub
and
daa
inc
push
rol
xor
or
inc
sbb
sbb
pop
ljmp
and
stc
es
repnz
pop
out
pusha
insb
jns
scas
scas
insl
repnz
mov
dec
pop
in
js
mov
mov
ja
xchg
hlt
mov
fsubr
test
stc
mul
popf
dec
mov
lods
pop
or
pop
pop
inc
or
push
mov
or
loopne
jp
fwait
add
test
xchg
data16
sbb
xchg
xor
repz
xor
push
and
inc
loop
sti
test
jp
test
adc
xlat
loop
mov
sub
cs
push
xchg
push
mov
push
lret
insb
in
lods
pop
cmp
test
rcl
and
sub
pop
insb
sbb
adc
ret
out
pop
mov
cmp
subb
arpl
rcrl
and
push
mov
mov
sbb
out
mov
data16
lea
rcrb
shrl
stos
dec
inc
sbbb
mov
popa
outsl
cmp
pop
dec
xchg
notb
scas
dec
add
hlt
inc
or
push
test
xchg
decl
gs
sub
fs
add
mov
push
mov
push
mov
repz
faddl
mov
inc
cmc
mov
ret
in
inc
mov
inc
jae
cmp
inc
sbb
adc
add
xlat
lea
mov
pop
mov
add
mov
pop
nopl
mov
insl
dec
xchg
loopne
call
pop
pop
stc
mov
xor
dec
mov
dec
push
ss
sbb
imul
loop
inc
push
cmp
adc
sarl
dec
ss
jno
lret
push
outsl
push
mov
pop
out
hlt
pop
mov
sub
loopne
and
push
rol
add
adc
sub
cmp
inc
push
and
adc
inc
sub
and
ficoms
clc
jae
jbe
outsb
shrl
pop
int
rolb
in
xchg
inc
push
enter
mov
lds
fs
int
in
sub
scas
das
sbb
push
push
shl
sbb
ljmp
lock
and
movswl
fisttpl
lcall
aas
jp
add
js
cmc
inc
sbb
insb
outsl
int
stos
adc
lahf
in
aam
outsl
cwtl
ret
pop
xchg
cmp
movsl
sub
scas
lcall
pushf
fwait
scas
lods
addb
repnz
cmpsb
adc
das
xorl
jmp
call
xchg
in
xchg
pop
jg
adc
and
or
jmp
repnz
adc
outsl
mov
xchg
sbb
or
ja
dec
or
sahf
shll
es
cli
scas
sti
sti
call
xchg
jp
aad
push
or
adc
jp
fcompl
jne
aas
add
movsbl
out
push
je
sbb
shll
adc
mov
sub
pushf
loop
xchg
inc
icebp
faddl
push
jno
dec
sbb
sub
pop
mov
pop
cmp
dec
xor
aas
test
and
xchg
into
adc
jmp
lahf
fiadds
push
adc
aad
cli
and
clc
push
add
popa
movsl
cltd
pop
jp
push
mov
inc
aas
jmp
loopne
mov
xlat
adc
lcall
das
mov
push
dec
ljmp
mov
mov
mov
lea
popf
xor
sahf
std
mov
sbb
inc
mov
lock
dec
loopne
pop
hlt
or
popf
xchg
fsubr
cld
mov
pusha
test
and
mov
daa
bound
gs
sbb
jno
dec
push
adc
and
sbb
push
inc
in
imul
dec
shlb
ljmp
repz
jo
mov
pop
cmpsl
sub
dec
out
inc
popf
cmp
mov
sbb
inc
xor
xor
pushf
push
pop
mov
mov
pop
add
ret
lcall
insl
data16
test
pusha
add
or
xchg
dec
xchg
mov
jnp
lods
lret
jg
and
inc
dec
ja
sub
test
clc
mov
push
rclb
loope
jnp
pop
or
sbb
andb
int3
xor
adc
sbb
rclb
pop
hlt
into
mov
cmp
cmpsl
imulb
data16
jbe
es
ret
idiv
lret
in
xchg
push
ret
cmp
add
in
pusha
ds
push
daa
jg
movsl
sub
inc
mov
in
dec
push
dec
pop
xchg
loop
dec
push
aad
ds
push
divl
scas
iret
dec
add
jns
je
dec
inc
cmp
inc
sub
cs
loopne
out
pop
out
shrl
shlb
repz
mov
imul
cmp
push
fs
fstpt
std
cmp
jecxz
rcrl
pop
push
aaa
add
mov
mov
and
sbb
movsb
or
xchg
out
mov
push
pop
lods
dec
mov
das
jmp
jno
xchg
mov
or
pop
stos
jne
jp
jnp
fstp
xchg
push
add
dec
lods
ror
add
fisubl
pop
adc
loop
add
mov
xchg
sbb
or
outsb
jecxz
fstpl
jmp
jno
insb
pop
daa
ret
cmpsb
ret
jl
jle
fisubl
pop
adc
ficomps
icebp
push
push
ficoml
xchg
divl
xor
mov
fwait
stc
mov
xor
jns
sti
test
mov
xchg
movsl
sarl
adc
test
push
jae
mov
pop
cmpsb
add
lcall
xchg
movsl
loope
sub
ret
mov
insl
jns
lods
movb
test
stos
xchg
shrl
fsts
daa
and
adc
mov
dec
xchg
fbld
enter
inc
outsb
repz
inc
push
fsts
cli
fcmovne
inc
flds
add
cmp
ja
jecxz
js
lea
je
sbb
adc
mov
shrl
jge
xchg
cli
inc
cmp
test
pop
dec
mov
mov
add
das
push
outsl
and
push
shrl
push
loop
sbb
lahf
sbb
movsl
dec
mov
gs
push
dec
xlat
add
sub
loop
pushw
xchg
test
pusha
cli
or
fisttpl
ficompl
dec
jp
or
inc
or
test
into
stos
mov
jge
xchg
cmp
adc
mov
jmp
gs
mov
cmpl
inc
je
lds
imul
pop
popa
jecxz
push
sbb
xor
mov
int
and
psubd
sub
in
mov
xor
lret
cmp
mov
mov
inc
xlat
add
mov
mov
inc
arpl
mov
loope
out
mov
push
fiadds
dec
push
or
push
cmp
mov
inc
int3
je
in
loope
stos
mov
arpl
mov
push
xlat
mov
fcompl
push
icebp
mov
xlat
hlt
mov
add
shl
xchg
mov
mov
xor
jecxz
mov
mov
jp
test
fldt
add
popl
jl
movsl
xor
xor
mov
mov
imul
lods
dec
push
xor
scas
repnz
stos
shlb
fsubrl
inc
sub
adc
jno
in
adc
jae
mov
pop
fmull
test
lret
movsb
mov
out
addr16
daa
dec
cmc
mov
int
pop
add
pop
inc
xchg
inc
adc
mov
jge
fs
popa
lds
testl
jl
loope
xor
stos
inc
jae
fldz
jb
aam
or
hlt
mov
mov
ss
jbe
mov
push
imul
sbb
into
ds
mov
cmpsb
scas
pop
add
push
pop
imul
loop
gs
popl
sbb
xchg
or
cmpsb
sbbb
adc
pop
dec
ret
call
pcmpeqd
inc
xor
xor
fmulp
in
sub
pop
adc
sbb
lds
mov
push
test
lahf
dec
add
loop
cs
imul
out
cmc
ficompl
xor
xchg
sbb
dec
jnp
daa
popa
in
subb
idivb
inc
cmpsl
fidivl
js
push
stos
cmpsb
std
push
inc
dec
rcl
dec
sti
roll
and
imul
push
lcall
adc
inc
add
daa
sbb
sub
lods
sub
lods
cwtl
push
mov
addr16
dec
prefetchwt1
sbb
jae
and
jbe
xor
mov
sbb
jb
stos
mov
pop
xor
mov
fsubrl
sbb
call
sbb
repz
in
nop
std
sub
push
fisubs
dec
jo
dec
dec
mov
push
mov
movsb
test
mov
inc
mov
pop
add
adc
dec
adc
lods
push
divb
xchg
adc
jmp
fwait
xchg
mov
imul
adc
push
fs
mov
lods
in
or
sub
dec
jbe
lahf
repz
test
daa
test
in
add
xchg
pop
test
sbb
int3
into
test
mov
movsb
xor
icebp
in
jno
push
daa
sarl
aas
mov
nop
sub
sarl
or
and
arpl
xchg
inc
dec
sbb
shlb
ljmp
clc
es
insb
xchg
dec
push
daa
xchg
popa
mov
fisttpll
cwtl
jns
mov
xchg
xor
push
rcrl
lods
jge
enter
inc
call
aaa
jl
loopne
and
push
nop
pushf
dec
test
cmp
addl
mov
mov
mov
rcr
sub
sarb
jmp
cs
jnp
shlb
in
push
shlb
mov
push
cs
and
xchg
cmp
dec
popf
aam
mov
andl
enter
test
idivb
jne
cmpl
fwait
xor
jnp
push
sbb
insb
xor
nop
cmp
lods
fcompl
loop
shrl
mov
ljmp
xchg
or
cmp
jle
aad
int
or
sub
mov
test
jecxz
out
cmpsl
dec
sub
stc
or
or
lods
jmp
jne
push
imul
xchg
xchg
je
jns
mov
add
adc
outsl
push
mov
inc
cld
cmpsb
div
js
es
cltd
mov
aam
sbb
fcompl
mov
fbstp
xor
out
sbb
add
cmp
and
fsubrl
je
push
mov
lcall
test
pop
cld
sbbb
sahf
out
mov
dec
icebp
out
out
loop
xor
xor
fwait
dec
addb
pop
jne
adc
loop
push
inc
insl
push
shrb
lea
call
rcrl
inc
sub
cltd
ret
xchg
das
mov
jo
jns
adc
cmp
iret
add
sahf
push
push
inc
mov
daa
les
call
in
outsl
inc
arpl
mov
cmp
dec
pop
or
add
stos
out
cmpsb
mov
or
adc
push
cmp
sarb
addr16
xor
xor
jmp
and
outsb
icebp
cmp
rcl
mov
ss
sar
stos
cltd
push
adc
xchg
add
add
cltd
cmc
das
pop
outsl
popf
arpl
and
sbb
cmpsl
jne
jmp
add
vmovntpd
ror
adc
out
cmp
or
shl
xor
dec
insl
push
add
dec
std
into
outsb
xchg
sub
mov
mov
into
xchg
sub
adc
xchg
mov
sub
into
cmpsb
sbb
lock
ljmp
fnstenv
in
arpl
sub
jp
add
loopne
adc
push
mov
jl
dec
je
xchg
xchg
mov
mov
shl
fmul
aaa
xor
nop
enter
inc
push
jne
js
divl
iret
jl
mov
frstor
out
divl
aaa
movsl
push
inc
shrl
pop
sti
dec
popf
ret
imul
aaa
addr16
dec
or
xchg
cwtl
sbb
adc
mov
daa
fists
icebp
out
pop
in
cmp
cmpb
cmpsb
sub
add
shlb
mov
add
or
idivb
pushf
mov
xchg
xchg
add
adc
jns
scas
andb
int
aam
popf
test
sub
shlb
xchg
cmp
mov
xchg
outsl
add
fidivs
mov
jnp
jg
mov
adc
pushf
ljmp
jns
ret
adc
xchg
mov
xor
outsl
xchg
cmp
jb
cmc
mov
adc
sub
push
incb
pop
out
enter
nop
sub
rcrb
cmp
lret
loopne
daa
stc
insl
dec
pop
inc
insb
pop
xchg
loopne
das
jns
roll
xchg
iret
test
mov
into
outsl
push
addr16
and
push
xchg
cmp
std
test
mov
push
mov
mov
imul
ljmp
or
test
js
repnz
stc
xorb
movntq
scas
mov
push
fwait
cs
mov
rcrl
push
popa
sub
mov
enter
mov
push
pop
popa
test
stc
dec
mov
out
push
xchg
pop
in
bound
mov
and
neg
pop
mov
or
fstpt
pusha
scas
scas
adcb
jae
jg
add
inc
mov
jmp
add
push
jg
inc
inc
jb
lds
das
loopne
shll
ljmp
cmpsl
lahf
sbb
shll
mov
mov
les
insl
cltd
sub
xor
loopne
cmp
mov
adc
mov
insb
or
leave
test
mov
lahf
fstps
enter
addb
aas
mov
loop
ret
arpl
xchg
adc
ret
in
mov
jbe
adc
out
xchg
ret
mov
xchg
dec
and
dec
mov
jp
dec
inc
mov
push
in
jge
cmp
fsub
stc
push
out
dec
and
pushf
xchg
xlat
lds
pop
jmp
mov
cmp
jne
outsl
arpl
sbb
pop
jo
xor
mov
push
and
cmpsb
cmpsb
xor
sti
pop
mov
lret
pop
jno
rcrl
fwait
mov
mov
addl
push
inc
pop
test
pop
in
mov
dec
repnz
sahf
movsb
inc
jns
adc
loopne
subb
stos
stos
inc
and
push
outsb
xchg
clc
outsl
movsb
sbb
loop
adc
jg
pop
or
into
cmpsl
aas
cmp
pop
lret
jo
jne
jo
and
mov
mov
inc
mov
pop
jmp
push
pop
add
cmp
ret
xor
sbb
push
or
dec
adc
add
push
int
cwtl
daa
mov
loopne
push
fistps
lods
mov
fnsave
pop
mov
xchg
ret
adc
jp
mov
sbb
add
sub
xchg
cld
mov
mov
and
into
jge
jo
dec
aaa
xor
scas
push
leave
imul
mov
lods
addr16
adc
popa
mov
push
loopne
mov
dec
dec
and
push
push
xor
imul
sbb
leave
out
mov
lods
pop
mov
lret
icebp
je
or
jno
cmp
pop
je
sub
cmp
call
imul
mov
jno
dec
xchg
icebp
xchg
cmc
js
xchg
aaa
xor
bnd
in
pop
rcll
mov
push
outsl
mov
repnz
shll
pop
pop
sbb
mov
movsl
repz
int
mov
jp
sbb
out
pop
in
dec
ret
jge
xchg
iret
test
scas
sub
into
pop
repnz
fs
mov
cmp
jp
pop
loope
add
stos
sub
jmp
int3
xchg
pop
sbb
insl
cmc
push
stc
mov
inc
xchg
mov
in
lock
imul
insl
imul
jnp
inc
and
lods
mov
scas
into
cmp
out
cli
mov
out
fwait
dec
insl
clc
mov
cmc
xor
fidivrs
sti
jno
pop
fidivrl
sbb
stos
rcl
mov
or
sbb
lret
movsl
inc
inc
loopne
sbb
gs
fidivrs
rcl
pop
sub
mov
lahf
jbe
mov
xchg
aam
stos
insl
cltd
xchg
stc
and
dec
and
ds
cwtl
push
sbb
ret
sub
sub
jb
test
es
cltd
jns
push
sub
popl
mov
mov
adc
test
sub
out
jge
push
rcr
mov
loop
mov
test
fistpll
js
mov
bound
pusha
xor
iret
pop
inc
pop
lea
arpl
and
outsl
jmp
cwtl
push
lret
cld
add
mov
sub
lcall
dec
das
xchg
jb
das
xchg
sahf
inc
sbb
insl
xlat
outsl
pop
push
xchg
sub
aad
notb
add
xor
xchg
in
xchg
add
fwait
xchg
stc
in
das
leave
dec
or
in
push
pop
ror
pop
insl
jbe
mov
dec
mov
lahf
cmp
das
insb
stc
adc
stos
adc
into
fmull
sub
cltd
push
es
in
xlat
stos
ss
insl
es
outsl
cmp
sbb
pop
add
pop
lcall
enter
sbb
stos
loope
sbb
popf
daa
ret
sahf
mov
lds
and
ficoms
sar
adc
enter
sub
mov
pop
or
lret
ret
pop
push
sub
cld
cld
mov
mov
add
xchg
loop
lds
xchg
decl
fistpll
and
or
sti
or
and
pushf
aaa
adc
in
lret
xlat
jns
dec
sub
or
mov
dec
icebp
and
movsl
test
push
and
add
inc
and
sub
enter
cmpsl
mov
cmp
xchg
cld
lea
divb
fwait
dec
add
xor
in
imul
pop
test
dec
mov
leave
sbb
fadd
add
or
scas
add
hlt
xlat
stc
xchg
rcll
je
je
mov
ror
and
popa
inc
pop
jmp
dec
cwtl
in
or
int
lock
jae
daa
and
or
sub
scas
out
jmp
dec
sarb
xor
pop
xchg
mov
mov
cltd
jp
push
leave
inc
xor
hlt
dec
mov
arpl
lods
loop
lock
stos
pushf
js
shlb
call
mov
cmpsl
inc
or
xorl
lds
sbb
imul
add
jle
jns
repnz
mov
test
inc
std
test
mov
into
call
sub
std
aad
jno
cmp
xchg
fidivrs
sub
mov
cmp
rcrl
jno
sub
jnp
jmp
rcrb
pop
in
cli
sub
xchg
mov
xchg
aas
xor
xchg
lret
rorl
and
inc
div
or
sbb
xchg
imul
fmul
mov
fcmovbe
push
sbb
jmp
or
pop
sub
and
add
jns
jbe
mov
xlat
fstpt
and
xor
out
pushf
in
mov
xchg
iret
movsb
mov
push
icebp
and
test
faddl
test
sub
xor
js
aam
rolb
jmp
add
int3
inc
nop
fstp
or
sbb
out
scas
and
mulb
pop
adc
jg
mov
cmpsl
leave
ret
data16
sbb
sbb
int
test
cmp
ret
mov
lods
ret
arpl
inc
rcl
push
mov
fdivr
nop
popa
shl
cmpsl
mov
add
sbb
aam
fwait
mov
mov
sbb
pop
cmc
push
and
adc
inc
rcrl
shrb
notl
loopne
mov
xchg
inc
cmp
sbb
cmc
in
xor
and
sub
mov
jmp
int3
in
mov
dec
stos
lret
lret
jle
xchg
nop
or
je
fidivs
jno
iret
das
mov
sbb
pop
lcall
enter
cmpsl
test
rcll
sub
xor
jo
sub
seta
lea
ficoms
xor
test
or
ret
outsb
fldpi
pusha
std
mov
addr16
xor
andb
push
pop
fdivrs
out
mov
test
xchg
sub
imul
lods
int3
jl
js
popa
scas
in
insb
mov
jae
int3
pop
dec
in
xchg
scas
add
cmp
mov
jmp
movsb
repnz
xchg
pop
mov
test
xchg
push
xchg
mov
inc
loop
lds
inc
mov
mov
push
or
addr16
add
dec
adc
mov
mov
sub
sbb
fsubrl
or
lds
cmpsl
rorl
out
mov
mov
addr16
mov
mov
pop
jp
ja
push
dec
pop
cmp
daa
stos
add
or
mov
cmp
push
or
rorl
fidivrs
or
push
mov
mov
fwait
loopne
out
pusha
mov
and
popa
and
fwait
push
mov
adc
push
push
push
aad
imull
mov
test
enter
lret
imul
sub
mov
xchg
in
xlat
ds
dec
push
lea
inc
push
ds
scas
pop
push
sbb
imul
into
fstpt
mov
scas
sub
pop
repz
rorb
lods
jl
cmp
add
imul
jecxz
sbb
cmc
int
pop
test
stc
pushf
lret
push
dec
mov
cmp
cltd
cs
out
mov
outsb
mov
inc
test
sbb
pop
je
inc
xchg
jge
mov
int3
ljmp
xor
push
jbe
out
insl
sahf
lods
cmc
popf
sbb
dec
cwtl
test
xchg
push
sbb
subl
lea
mov
sbb
pop
cmpsb
es
testl
dec
xor
sti
mov
xorl
mov
stc
and
int3
sbb
jbe
lock
push
adc
mov
mov
dec
jns
sub
cli
cli
mov
xchg
xchg
adc
in
sbb
xor
lds
cld
dec
add
cld
idivb
add
sbb
jno
daa
cmp
scas
notb
jnp
lahf
or
enter
fcmovnbe
test
decl
fldenv
fisubl
int3
dec
dec
inc
push
xor
pushf
mov
or
gs
xor
in
push
jno
lea
test
and
movsb
jb
add
xchg
sbb
int3
dec
jo
inc
inc
xor
mov
loop
insl
dec
pop
stos
jle
cli
sbb
mov
stos
daa
call
pop
aad
xor
jno
dec
sti
and
inc
inc
adc
xor
test
inc
adc
mov
ret
dec
sub
out
cmp
dec
xor
mov
adc
pushf
mov
jg
mov
leave
jecxz
cmp
push
inc
lds
add
pop
dec
add
xchg
xchg
and
shll
mov
add
sub
dec
dec
icebp
sub
adc
adc
dec
pop
xchg
jp
xchg
push
jl
sar
fisttpll
mov
or
xor
dec
adc
out
mov
xchg
in
clc
push
and
lret
push
loopne
push
pop
pop
dec
jge
jae
into
hlt
or
pusha
mov
pop
xor
inc
push
sahf
ja
mov
jp
xchg
push
js
xchg
xchg
jns
mov
dec
cmc
std
outsb
fcomi
je
jns
sub
test
sub
cmp
cmp
inc
out
mov
xchg
ss
movb
jnp
aam
add
sub
stos
rep
pop
imul
ret
movsb
fistpl
sub
xor
js
push
push
pop
insb
shrb
fwait
sub
aas
fcmovbe
jge
or
mov
add
and
lock
lcall
popa
fadds
stos
pop
mov
loopne
into
pop
pushf
adc
movsb
daa
push
dec
fnstcw
jmp
movsb
mov
and
les
jbe
adc
mov
out
inc
bound
les
add
adcb
push
lahf
xor
arpl
or
xorps
mov
push
jmp
js
inc
mov
mov
jg
icebp
mov
movsb
test
add
sub
mov
push
mov
cmp
insl
pop
push
pop
and
subb
add
dec
je
cld
xchg
scas
or
cmc
pop
test
xor
jnp
imul
ret
jae
pop
icebp
add
mov
mov
stos
ljmp
xlat
mov
xchg
lea
loopne
popf
mov
xor
fnstsw
lds
lret
sbb
inc
cltd
xor
mov
and
pop
pusha
popa
fcomps
mov
xor
inc
sbbb
popa
lea
mov
inc
stc
hlt
loop
push
inc
xor
mov
imul
adc
xchg
int3
cltd
test
andl
enter
mov
inc
pusha
inc
iret
pop
ret
repnz
pop
cli
fidivs
out
cs
cmc
jmp
sbb
jb
fs
sbb
mov
push
xchg
pop
fsubrs
push
mov
sbb
or
pop
mov
pushl
or
or
push
jb
sbb
pushf
mov
add
dec
jo
sti
mov
push
in
imul
push
cmp
imul
push
inc
or
int3
or
or
mov
adc
jge
stc
cmpsl
out
insl
and
cmp
inc
call
stc
add
sti
fcomi
xor
mov
mov
sub
js
shl
loopne
pop
in
outsl
ss
lods
jp
popf
mov
jnp
mov
ljmp
jmp
dec
fstpt
sbb
adc
dec
test
rclb
push
push
push
dec
idivl
aam
in
in
sub
jmp
cmp
add
ds
inc
cmpsl
lret
cwtl
popa
mov
dec
leave
in
test
mov
jecxz
jl
mov
in
mov
pop
xor
inc
adc
out
cs
push
dec
filds
and
enter
mov
push
pop
adc
test
dec
xchg
repnz
rcrb
movsb
push
sub
mov
pop
aam
cmpb
and
pop
fistl
test
sar
ja
mov
divb
and
xor
sti
hlt
cli
ret
jbe
test
dec
lret
mov
cld
ljmp
nop
imul
loopne
icebp
fdivl
lods
int
mov
push
mov
mov
xlat
pop
movsb
mov
mov
mov
mov
jmp
sbb
or
inc
popa
ljmp
flds
or
mov
mov
sahf
fs
lods
adc
fmul
fidivs
lea
es
inc
mov
push
out
data16
lea
divl
enter
and
add
mov
adc
jbe
inc
mov
adc
bound
test
stos
mov
sarl
scas
mov
sbb
jb
shlb
jg
stc
xchg
arpl
jg
std
xchg
xor
push
xchg
popf
out
sbb
jne
pop
das
je
add
aaa
mov
pushf
mov
cltd
scas
movsl
inc
leave
rol
inc
pushf
xchg
gs
cmp
push
addl
call
mov
push
sub
and
in
lret
stos
mov
scas
push
rcl
movsb
into
addr16
cmp
pop
mov
je
and
les
sahf
popf
mov
test
lods
and
jecxz
inc
mov
add
movsb
daa
jnp
mov
int
mov
jbe
xor
push
idivb
sub
fmull
push
mov
mov
dec
scas
dec
xor
push
test
adc
dec
lcall
mov
jae
adc
push
lock
imull
jnp
rol
mov
pop
pop
mov
test
push
aas
paddsw
xchg
and
les
test
push
push
popl
and
in
add
lds
daa
dec
mov
icebp
in
ljmp
push
push
lea
dec
fstpl
das
dec
push
outsl
cmp
mov
xor
sbb
stos
in
dec
jno
and
imul
testb
sub
repz
sub
pop
stos
jne
inc
shrl
out
movsb
push
ss
mov
gs
mov
loope
xchg
lea
andb
test
and
adc
add
xchg
repz
bnd
adc
xor
cli
sbb
cmp
movsl
inc
mov
in
or
fisubrs
rorl
inc
repnz
fcmove
scas
test
mov
out
test
sti
fwait
insl
xchg
call
push
jle
cmpsl
mov
xchg
pusha
xor
adc
addl
xor
stos
loope
xchg
mov
mov
xor
call
dec
jge
cltd
popf
aaa
adc
sbb
and
xchg
imul
xor
stos
fs
adc
mov
mov
testb
cmp
aad
mov
bound
jae
push
aad
push
je
movsl
inc
mov
aas
andl
mov
push
inc
xchg
inc
cmp
mov
pushl
lock
stos
roll
sti
mov
mov
cltd
inc
xor
iret
sub
push
mov
shlb
inc
das
and
rorl
mov
cltd
inc
mov
pop
mov
loope
gs
dec
cs
sahf
decl
add
test
or
in
aad
inc
push
aas
bsf
sbbl
jmp
jmp
mov
jns
xchg
out
xor
pusha
mov
dec
cmp
xchg
pop
aas
push
push
daa
or
xlat
js
jo
dec
xlat
cmc
dec
adc
repnz
push
movb
rorb
lcall
adcb
fidivrs
sbb
pushf
insb
decl
sbb
xlat
adc
sub
in
divl
sbb
xor
mov
push
xchg
pusha
push
lods
and
lods
out
arpl
sub
inc
stc
scas
hlt
popa
mov
adc
or
outsb
in
and
mov
adcb
mov
test
scas
push
int
and
clc
into
and
xchg
rorb
and
dec
pop
flds
aam
mov
fsubrp
shll
dec
push
adc
repz
enter
jp
inc
test
pop
jb
dec
adc
jp
loope
test
or
jmp
movsl
mov
push
xor
mov
enter
ret
mov
sbb
out
and
or
sbb
and
cmpsl
cmp
or
or
dec
add
inc
loopne
pop
adc
repnz
pushf
stc
push
jmp
pop
inc
or
add
mov
jbe
adc
rorl
lret
pop
adc
mov
cmp
jo
ret
cmpsb
cmp
cltd
jo
jns
xchg
cltd
or
arpl
sub
sbb
push
push
xlat
test
push
ljmp
mov
cmc
loop
pusha
dec
int3
mov
enter
sub
rolb
dec
mov
jp
dec
lcall
imul
faddp
sub
or
cli
push
xor
mov
cltd
std
and
outsb
and
xchg
test
cs
pop
pop
in
sti
add
push
out
adc
cs
sarb
ret
lods
jl
and
jmp
mov
mov
scas
insb
xchg
mov
mov
pop
test
pop
push
mov
pop
dec
inc
mov
xchg
hlt
cmpsb
add
adc
mov
stc
ss
icebp
icebp
xor
das
adc
inc
hlt
sub
dec
scas
sub
inc
sbb
and
add
sti
add
jmp
pop
jmp
or
test
sub
sub
xor
inc
jns
call
mov
dec
push
push
cmp
dec
pop
mov
inc
adc
inc
repz
or
xor
push
popf
orb
scas
mov
loop
mov
je
lret
mov
movsb
inc
mov
test
add
pusha
notb
ja
movsl
daa
clc
mov
or
mov
fxch
jmp
or
xchg
jne
and
stos
mov
lods
mov
ja
jne
movsb
aas
ds
pop
aaa
mov
dec
and
and
scas
mov
push
cmp
test
pop
mov
xorb
lods
filds
jne
mov
xor
dec
pop
nop
push
fdivrl
mov
inc
shrb
mov
fsub
mov
or
into
mov
add
pusha
and
std
dec
call
xchg
sar
adc
xor
add
mov
cmpsl
pop
inc
out
sub
int3
rolb
cmp
push
push
add
and
lss
in
add
xor
pushf
add
or
fdivs
rorb
add
out
cmp
lahf
dec
and
mov
mov
xchg
shll
cmp
bound
jecxz
adc
xchg
data16
cltd
stc
xchg
in
xor
dec
cmp
pop
daa
nop
fwait
add
xchg
jge
mov
cmp
stos
jg
aas
cmp
add
mov
scas
mov
fidivrl
sbb
push
sub
xor
or
subb
and
stos
pop
mov
out
cmpsb
mov
sub
cmpl
xor
enter
loop
insl
mov
roll
or
jl
loop
add
stos
jo
stc
vpsubq
jne
xor
adc
mov
cmp
movsl
add
das
hlt
das
popa
push
xchg
jns
repz
arpl
clc
mov
sub
jo
dec
sbbl
or
or
adc
cld
mov
push
call
stos
pushf
test
in
arpl
pop
adc
or
xor
gs
clc
pop
in
adc
xchg
aaa
push
in
and
sbb
dec
add
lcall
scas
pop
ljmp
ja
fnstcw
sbb
mov
pop
nop
jo
mov
out
aam
dec
sbb
or
xchg
sub
add
pop
les
sbb
shlb
je
jmp
xor
outsb
std
rcrb
fadds
daa
push
inc
push
push
int3
inc
mul
or
push
dec
not
mov
shrl
adc
sbb
popf
sub
adc
cld
inc
leave
xchg
push
mov
cwtl
stos
mov
mov
dec
inc
mov
incb
pop
out
mov
iret
cmpsl
or
lret
sbb
std
dec
fwait
cld
daa
fs
mov
insl
jg
xchg
dec
sbb
lods
mov
xor
jmp
or
or
or
clc
aas
jbe
mov
insl
mov
mov
pop
mov
lret
imul
cmp
arpl
mov
sub
mov
inc
sarl
fsubrl
xchg
xor
jg
mov
hlt
pop
mov
inc
sbb
mov
xchg
lahf
jecxz
cmpl
int
pop
pop
out
popf
lret
pextrw
jge
push
cmp
jmp
lea
rorl
imul
fmull
jp
lret
inc
test
push
ficoml
or
rcll
test
add
cs
jecxz
imul
cmp
clc
adc
adc
std
adc
sbb
fdivr
mov
mov
sub
fnstenv
fcompl
sbb
mov
xor
nop
xor
iret
mov
ret
push
push
cli
push
movsb
pop
inc
fistpl
aaa
pusha
gs
bound
fdivrs
stos
mov
inc
mov
xorl
insb
shll
xor
adc
xor
jno
out
or
mov
movsb
hlt
xchg
pop
fwait
cmp
xlat
jno
inc
aaa
sub
dec
inc
mov
add
mov
mov
nopl
mov
xor
cmpsb
cmpsb
jno
outsb
push
fisubl
pop
mov
shrb
xchg
ja
pop
jns
push
xor
add
xor
push
mov
add
jmp
inc
int
stos
scas
fldt
movsb
or
mov
popa
mov
les
xchg
jecxz
out
fsqrt
lahf
jno
mov
push
sub
jnp
dec
sbb
popa
mov
dec
pushf
jo
inc
pushw
jle
xchg
je
scas
dec
xchg
sahf
jmp
or
mov
movd
fisubrs
push
addr16
mov
lahf
dec
pop
push
fs
pop
mov
push
lods
imul
jg
into
xchg
push
dec
sarb
out
fstpt
fistl
push
mov
mov
cmpl
lahf
call
fmuls
and
std
notl
jbe
in
cmp
xchg
in
or
xor
xchg
jmp
sub
idivb
movsb
repnz
movsl
ret
lret
pop
dec
push
mov
pop
lahf
and
imul
sub
xor
fwait
out
xchg
sub
inc
dec
aam
call
pop
or
ds
or
enter
cmp
fcom
inc
add
imulb
sbb
mov
shrl
in
ret
lret
call
mov
pop
sbb
call
enter
xchg
xchg
stc
lds
repnz
sti
gs
pushf
mov
sbb
loop
loopne
xchg
xchg
inc
mov
mov
add
icebp
add
popf
scas
orl
ret
and
mov
jne
arpl
xor
sarl
sarb
aam
cmpl
mov
dec
scas
and
push
fdivs
test
rol
loop
xchg
or
lods
dec
mov
mov
clc
imul
or
jle
mov
sub
or
adcl
lahf
loop
int
movl
push
into
adc
aaa
or
cmpb
leave
inc
leave
xor
popf
mov
or
sub
cltd
or
movsl
gs
pop
jne
pop
cld
add
push
inc
ret
mov
scas
fidivrl
mov
mov
icebp
outsb
cmp
dec
jmp
push
mov
mov
lods
sti
sahf
xchg
out
pushw
es
xor
add
sbb
and
inc
lods
pop
cli
adc
aad
push
jae
inc
roll
movsb
std
or
mov
cmpsl
mov
inc
adc
xchg
and
mov
leave
fwait
xlat
jg
dec
cmpsb
adc
out
pop
out
xor
dec
lret
sbb
lods
or
outsb
add
out
nop
call
dec
leave
push
lds
idivl
mov
hlt
into
cs
mov
das
mov
push
push
aas
pop
nop
in
push
and
je
push
lahf
cwtl
mov
not
xchg
sub
fiadds
xchg
sub
roll
xor
push
mov
enter
sarb
addr16
mov
lods
and
jns
dec
mov
or
mov
cmc
adc
test
push
ljmp
push
int
dec
jnp
cmp
cld
cld
xor
adc
mov
dec
out
rol
popa
or
lods
adc
adcl
rcrl
add
mov
pop
dec
or
imul
adc
pushf
pushf
xlat
push
pop
movl
sbbl
add
sbb
cs
lods
jle
div
mov
inc
aas
mov
sub
icebp
cmp
xchg
mov
mov
xor
cwtl
cmp
push
xchg
mov
or
mull
inc
jno
pushf
sub
insb
sub
push
cmovnp
mov
sbb
dec
sbb
pop
xchg
push
shlb
inc
jg
pop
movsl
notl
inc
fimull
das
inc
xor
jmp
mov
pushf
int
cmp
jg
out
push
fcmovnb
push
test
ss
pop
loop
stos
cli
inc
call
and
in
inc
inc
out
ret
int
inc
adc
outsl
push
sbb
les
les
pop
cli
inc
or
push
xchg
dec
jle
jne
add
mov
roll
add
pop
dec
mov
fiaddl
ds
test
inc
sub
lock
xchg
stc
cmc
mov
dec
enter
jge
mov
mov
push
push
movsl
cs
test
repz
sub
pop
insb
cmp
test
dec
xor
mov
ljmp
jnp
les
insb
insl
sbb
xchg
pop
pop
pop
jmp
insb
cmp
loope
fs
in
repz
stc
dec
xchg
shl
insb
mov
sub
mov
cmp
dec
inc
jg
jle
out
jb
pop
fldcw
lahf
lea
imul
push
mov
dec
push
cmp
ljmp
dec
inc
dec
cwtl
pusha
jns
xchg
push
lahf
push
adc
addr16
pop
lds
pop
in
cltd
dec
stos
test
lea
sub
out
insl
xchg
inc
xchg
repz
rolb
orl
repz
lret
into
rolb
xor
dec
aam
mov
mov
call
jmp
lret
xor
fisubl
xchg
push
pop
inc
xor
xor
imul
add
test
inc
mov
out
sbb
cli
dec
mov
scas
pop
add
jmp
jmp
pop
cli
out
mov
aad
add
rolb
shll
movsb
push
in
rorl
lods
lods
or
mov
nop
pop
cmp
insl
pushf
mov
test
dec
sbb
out
lods
mov
jo
fs
add
pop
push
cmpl
pusha
loope
pop
dec
push
inc
not
push
push
pop
orl
xchg
jecxz
inc
pop
xchg
pop
loop
out
insb
inc
jmp
fiaddl
inc
notb
xorb
gs
fucomi
scas
inc
jp
mov
inc
push
orb
and
je
lret
js
loopne
leave
jp
cld
push
xor
xor
mov
in
lock
adc
inc
sub
push
dec
mov
xchg
adc
xor
or
sbb
adc
jl
xchg
fdiv
and
std
xor
xor
cli
cs
jno
sub
adc
lret
ljmp
mov
aad
or
dec
mov
cmpsb
daa
push
je
les
loopne
js
pushf
cmc
out
repz
adc
js
pop
jg
mov
add
sub
aas
ret
add
int
ss
mov
popa
inc
jnp
inc
mov
sub
ja
inc
pop
and
test
data16
out
jmp
xchg
aaa
repnz
in
sub
movzwl
mov
gs
jmp
dec
dec
clc
pop
jb
dec
out
loop
shll
jne
fadds
sbbl
mov
cwtl
mov
sub
xor
inc
dec
pop
xor
mov
xor
adc
testb
mov
push
jno
xchg
outsl
adc
jle
xchg
add
xor
loopne
jno
lret
stos
cmp
mov
jmp
lea
fs
jnp
mov
pushl
out
sbb
js
aam
ja
mov
lret
lahf
sub
fs
movsb
xorb
pop
cld
iret
dec
sahf
clc
xor
fstpt
jp
fsubrs
cwtl
mov
out
aam
inc
xchg
dec
dec
push
add
mov
cmc
pop
xchg
iret
add
fmul
pop
ljmp
add
xchg
fisubs
cmpsb
rorb
orb
sbb
repnz
fld
imul
ljmp
mov
and
dec
scas
aad
hlt
inc
in
mov
pop
loop
xor
mov
xchg
jb
cmp
push
or
iret
in
and
aas
adc
fimuls
sub
fwait
mov
xchg
xchg
jp
in
and
mov
je
leave
push
lds
sub
call
stos
ss
cmp
push
dec
ds
jae,pt
leave
ja
in
and
add
std
cmc
add
mov
xchg
and
mov
mov
push
jmp
fisttpll
lods
cmpsl
sub
add
aaa
sbb
int3
pusha
cwtl
or
clc
mov
sub
adc
or
popw
dec
sbb
bswap
loop
pop
ljmp
insb
out
lods
iret
pop
das
push
cmp
in
popa
addr16
rol
xchg
repz
jle
mov
roll
xor
ret
je
stos
xchg
data16
push
mov
ret
sti
xor
mov
jl
sub
aam
mov
or
cld
out
insl
cs
hlt
sbb
loope
xchg
push
dec
stos
cli
jo
or
cmp
sbb
icebp
xor
aas
outsl
xor
jnp
inc
mov
bound
lods
adc
xlat
cmpsb
jo
pop
xchg
mov
fwait
adc
into
and
mov
xchg
popf
add
outsl
cwtl
xor
flds
add
or
rorb
jle
push
lret
shl
inc
dec
scas
cmp
loope
mov
inc
stos
xchg
lahf
xor
sub
lock
jns
inc
pop
test
insl
ja
in
sti
mov
adc
cs
rcll
es
mov
dec
mov
and
push
lcall
cmpb
iret
inc
ret
or
push
mov
cli
je
fs
repz
mov
jge
test
inc
or
push
xor
dec
pop
imul
mov
roll
aam
test
xchg
ja
and
mov
dec
jbe
in
push
inc
ljmp
fstps
dec
fs
cs
push
jae
push
rorl
sbb
sub
arpl
cmp
in
cs
call
test
cmp
gs
in
scas
mov
dec
clc
movsl
fsubs
dec
scas
dec
addb
adc
sbb
fisubl
cld
out
mov
xor
mov
loop
add
and
stos
stos
mov
out
ds
or
mulb
or
jmp
cmp
loopne
movsl
movsl
inc
adc
shrb
sahf
lods
lahf
mov
inc
add
insl
and
loop
or
shrl
push
inc
gs
ljmp
mov
xor
push
int
mov
fstpt
pop
out
mov
or
mov
cmp
test
jmp
sub
and
pop
push
xor
xchg
out
xor
test
out
sub
int3
or
inc
jnp
xchg
sbb
ret
in
inc
inc
js
mov
stos
xor
cltd
dec
and
pusha
jecxz
push
imul
inc
ficomps
ret
sbb
cld
sbb
stos
jge
int
sub
enter
out
cmc
mov
pop
negb
sub
iret
push
pop
leave
sub
out
dec
xor
xor
lcall
ja
mov
fsubrl
xorb
and
mov
rclb
push
cmp
gs
xchg
push
mov
loope
adc
js
and
test
inc
inc
rcll
sbb
inc
fisubrs
xor
ret
cmc
fisttpll
mov
lret
test
sub
pop
pop
add
mov
repnz
ret
shll
xchg
or
shrb
dec
pop
js
and
cmp
sahf
scas
imul
fdivrs
out
test
mov
int
fstpl
jnp
out
xchg
push
aam
jle
mov
out
push
jbe
jae
push
bound
rcr
cmc
add
mov
decl
cld
jecxz
cli
mov
ja
les
and
lock
pop
stos
ja
mov
fs
inc
mov
or
shll
rcrb
xchg
ljmp
jge
mov
pusha
mov
jge
adc
repnz
loope
ret
ficoml
inc
mov
jg
and
dec
mov
inc
out
fs
mov
jmp
adc
scas
mov
xlat
mov
push
mov
pop
in
pop
jecxz
sub
insl
add
add
inc
jno
das
mov
xor
into
movsl
aas
mov
sub
clc
or
lods
xchg
sub
adc
xchg
test
mov
xchg
cmc
fildl
int
repnz
inc
out
xchg
push
xchg
mov
in
in
mov
mov
push
mov
inc
fsubs
pop
arpl
mov
jle
daa
loop
xchg
sti
cwtl
mov
sub
or
stc
mov
xchg
and
sub
out
fwait
dec
lods
and
inc
call
pop
cmp
movsb
test
mov
lret
inc
jl
inc
mov
xchg
jl
mov
les
out
push
iret
sahf
test
mov
std
mov
das
bound
mov
pop
pop
leave
into
jns
clc
push
clc
in
fdivrs
fldl
cmp
and
inc
add
gs
test
cli
mov
dec
push
fwait
aaa
pop
mov
hlt
or
andl
imull
es
dec
dec
mov
fcoms
mov
push
add
or
xor
lods
and
mov
xor
aam
mov
add
daa
jbe
mov
es
scas
push
push
pop
adc
xchg
mov
sbb
int
fs
push
shll
adc
dec
jb
jge
leave
je
dec
sub
cmp
es
pop
mov
pusha
loopne
stos
lcall
and
push
insb
movsl
xor
xchg
lret
adc
dec
lods
hlt
out
in
popf
xchg
lods
pop
sbb
pop
push
into
icebp
fldcw
int
lock
and
cmp
das
and
add
mov
push
test
fadd
popa
inc
add
mov
sub
xchg
les
arpl
xlat
lret
or
sub
popf
loop
mov
push
adc
fwait
rorb
sub
movsl
lahf
andl
mov
push
xor
andb
lods
cmp
inc
lods
xor
fsubrs
data16
test
bound
sarb
jae
or
push
stos
push
jle
daa
imul
adc
fcoms
mov
add
sbb
jg
pop
lcall
inc
inc
xchg
mov
call
in
test
test
jns
inc
nop
jnp
leave
mov
out
sarl
in
out
adc
dec
inc
jo
rolb
cmpsl
fldenv
fwait
jo
dec
add
das
cmp
enter
pop
leave
sub
out
jnp
daa
sbbl
not
scas
loopne
adc
dec
pop
inc
cld
incw
xchg
and
sub
pop
mov
sbb
sub
daa
in
dec
push
xor
in
xchg
stos
push
jne
jecxz
xor
adc
or
adc
xor
xchg
or
loope
sub
pop
jb
cmpsb
and
aaa
sub
fbstp
sbb
mov
jne
les
adc
push
mov
sbb
add
mov
sbb
xor
sbb
jmp
push
enter
pop
add
jns
push
fcoml
push
pop
add
mov
jae
int3
ret
xor
inc
mov
mov
xor
bound
xor
adc
dec
out
mov
or
jne
icebp
adc
ret
inc
aad
cmpsb
movsb
icebp
int3
xchg
repnz
sub
call
inc
testb
jle
rorl
push
sub
ret
in
insb
adc
jnp
pmulhw
pop
imul
mov
and
xor
or
xchg
jnp
stos
push
push
jbe
ss
mov
cmp
jnp
add
jmp
xor
jg
sbb
or
pop
cmp
mov
mov
sub
lds
lret
cs
fcomip
fcompl
dec
mov
xchg
push
mov
out
adcb
cmp
adc
int
rcrb
jge
push
inc
or
push
adc
lods
jge
testb
xorl
jp
fisubrl
mov
flds
pop
mov
daa
cmp
mov
pop
mov
cmp
sub
or
pop
add
and
sbb
nop
rcll
pushf
movsb
push
sub
add
pop
mov
jp
cmp
lret
add
scas
jno
scas
push
mov
fisubs
or
shlb
jne
xchg
and
loop
daa
push
outsb
int3
test
mov
cmp
and
dec
pushw
dec
cli
aad
cmc
sub
jbe
pushf
rorb
or
fld
inc
fsts
inc
push
push
test
addr16
mov
iret
popf
cmp
arpl
cmpsl
test
sahf
fcoml
cs
xchg
aaa
jne
mov
or
cmpsl
loope
or
cwtl
xchg
pop
rorl
or
pop
cwtl
cmpsb
mov
jb
dec
addr16
in
stc
mov
sbb
mov
and
rclb
jmp
adc
push
fstps
mov
push
insb
scas
cmp
iret
mov
lahf
cmp
or
xor
inc
aam
push
sbb
fcom
in
mov
test
mov
lods
sbb
mov
mov
xor
cli
call
xchg
cs
int3
lock
and
sbb
fwait
xorl
add
lcall
addr16
ss
icebp
in
mov
out
fnsave
rcll
dec
add
popa
add
push
rcrb
pusha
jns
lock
mov
popf
movsb
push
loop
mov
mov
xchg
dec
icebp
mov
jnp
sub
cmpsl
mov
mov
add
dec
dec
pop
adc
push
sbb
arpl
out
and
stos
pop
fldt
mov
ja
addr16
cmovle
jno
mov
dec
add
pop
pop
cli
mov
addr16
or
jae
js
lret
sub
mov
dec
cwtl
or
addr16
aas
push
icebp
mov
mov
loope
xchg
sub
xchg
mov
inc
into
cmp
push
or
loop
jae
or
shll
loope
jle
mov
insl
xorb
xor
imul
or
pushf
ljmp
rcrl
test
sbb
sub
add
jl
xchg
pop
xor
jmp
stos
in
xchg
cli
mov
sub
inc
push
enter
daa
or
scas
jae
in
xchg
xchg
das
cwtl
jmp
loopne
cmp
leave
imul
and
xor
sahf
lea
push
repnz
adc
ss
int
add
inc
pop
sbb
enter
or
push
push
dec
stos
push
push
and
sbb
mov
rorl
xor
in
or
mov
xor
jno
je
jbe
and
xor
xchg
clc
test
arpl
bound
sti
xor
jnp
cmpb
dec
or
mov
stos
dec
cmpsl
add
mov
jl
je
and
sub
out
add
je
mov
fidivs
sub
out
ja
loope
push
dec
inc
and
or
mov
divl
aad
pop
mov
xchg
push
xchg
test
cmpsb
cmpsb
mov
fmuls
das
jp
les
jle
pop
pop
pop
xchg
cmp
mov
and
clc
in
xchg
mov
xor
jl
jmp
sub
in
in
addr16
push
fs
fwait
hlt
add
inc
fiadds
ja
sti
in
arpl
mov
push
xor
addr16
mov
test
pop
push
pop
sbb
hlt
into
xchg
inc
fadds
sti
fiadds
cmp
xchg
jbe
lds
popf
or
cli
call
rorb
pusha
sbb
and
add
out
pop
push
mov
cmp
in
jbe
jns
imul
es
push
incl
jb
aam
lahf
jns
lar
pop
jno
imul
jnp
imul
dec
dec
add
gs
loop
testl
sbb
jno
pop
pop
push
sub
inc
mov
sahf
xchg
das
xor
int3
mov
test
stos
inc
xchg
dec
sub
jl
push
lds
push
rcl
dec
mov
cmpsl
sub
in
cmpsb
and
push
std
in
cli
cmp
leave
std
jae
scas
repnz
xchg
in
sbb
jbe
inc
dec
arpl
cmp
inc
and
xor
shrb
mov
fs
cmp
xchg
enter
lahf
je
test
jb
insl
push
mov
or
or
hlt
mov
mov
pop
sub
pop
mov
adc
aaa
daa
data16
pop
aas
lds
aam
jmp
mov
push
in
inc
sbb
jle
xor
scas
into
jns
cltd
mov
xchg
hlt
cmp
inc
pop
das
aaa
mov
out
add
adc
aas
int
push
jns
mov
aad
imul
mov
aad
mov
dec
mov
push
mov
add
loop
mov
ret
push
dec
lret
add
mov
and
adc
call
imul
xor
adcb
xor
sbb
pop
fimuls
scas
test
sub
pop
jp
aaa
mov
add
inc
pusha
hlt
xchg
in
push
inc
adc
mov
mov
sar
xor
out
repnz
xor
outsb
and
fbld
int3
xor
outsb
fistpl
xchg
mov
outsb
into
cmp
mov
inc
cmp
ret
pop
stos
pop
lahf
pusha
shll
imul
xor
movsl
mov
dec
xchg
xchg
push
test
out
mull
cmpsb
inc
lcall
mov
pop
push
mov
popf
stos
xchg
inc
gs
mov
sub
aas
sbb
cmpsl
out
test
xchg
outsl
js
xchg
hlt
rol
movsl
dec
or
pop
in
jecxz
test
idiv
adc
ljmp
ret
fnstenv
jg
adc
xchg
xor
sbb
fistpll
int3
pop
xchg
xchg
fsubl
mov
out
cmp
fisttpll
add
lock
push
pop
push
xor
sarb
test
call
adc
lds
shll
popa
imul
push
out
xor
aad
das
adc
mov
mov
outsb
sbb
or
or
outsl
sub
and
scas
push
movsl
and
pushf
in
mov
orb
test
lods
nop
stos
or
clc
mov
lret
leave
adc
mov
and
jl
adc
pop
imul
stos
aas
iret
pop
mov
dec
push
push
sbb
mov
aas
jne
or
icebp
es
stc
cmc
stos
jmp
sub
cmp
iret
mov
mov
aaa
arpl
adc
xor
je
and
mov
cmp
add
lods
fwait
pop
and
push
jno
imul
arpl
bound
jl
xorl
jnp
out
addb
or
lret
imulb
lds
and
mov
mov
inc
xor
cmp
and
inc
pushf
insb
sub
pop
dec
jbe
fcmovu
insb
subb
mov
jne
int
and
ret
test
pusha
cmp
xchg
lods
mov
mov
lods
push
cwtl
ret
pushf
inc
inc
cli
insb
xlat
mov
or
in
lret
inc
or
adc
ljmp
sbb
jnp
loop
in
icebp
arpl
out
and
popf
std
jg
hlt
sbb
adc
dec
add
push
pushf
sbb
pop
rcrl
mov
cmpsl
push
and
popa
dec
imul
fimuls
mov
test
lods
hlt
sub
sbb
cli
sub
mov
sbb
mov
lahf
cs
fnstsw
push
scas
sbb
xchg
xor
loope
push
jl
and
push
outsb
dec
push
popf
xchg
iret
and
inc
xor
inc
mov
pop
andl
shll
int
test
xor
mov
cmp
mov
mov
mov
out
rorl
ljmp
sar
leave
dec
fcoml
sub
cltd
or
mov
dec
in
add
add
outsl
adc
dec
jecxz
aaa
bound
divb
xchg
addr16
outsl
jnp
mov
inc
dec
cli
dec
inc
dec
jno
leave
dec
ret
adc
xor
mov
dec
mov
push
xor
popa
imul
jmp
scas
daa
jmp
sbb
xor
push
inc
sbb
in
push
xchg
rolb
call
jge
cmp
or
out
pop
add
jge
xchg
xchg
int3
sbb
dec
cmp
adc
call
pop
jo
mov
xor
insl
push
jle
cmp
mov
or
inc
mov
mov
test
push
mov
sbb
push
pusha
cmp
movsl
inc
pop
out
mov
adcl
push
pop
cwtl
pop
test
xor
inc
cwtl
xor
adc
popf
pop
mov
mov
movsl
cmc
dec
cmp
lods
xchg
sub
and
push
push
adc
mov
adc
scas
lahf
stos
ss
cmpsl
std
adc
mov
sub
aad
dec
jle
mov
xchg
cmp
ret
jl
gs
pop
popf
push
out
inc
sbbl
sub
je
pop
xor
mov
ss
adcb
insb
movsb
adc
pop
lock
lds
mov
ret
dec
iret
aad
cmp
sbb
cmp
rcrb
stos
and
sti
inc
dec
sub
inc
lahf
fistpl
data16
push
xchg
xchg
dec
cmp
mov
pop
mov
fdivp
cwtl
rcrl
xor
addr16
lret
jb
aam
addl
dec
cmc
push
popf
ljmp
and
cli
mov
idivl
or
xor
jno
or
daa
push
lret
cmpsl
ret
mov
mov
jnp
lock
shll
push
sbb
loope
leave
cs
sbb
loopne
stos
imul
out
insb
mov
lcall
test
inc
xchg
test
and
adc
lods
in
add
mov
sub
cmp
mov
or
and
sbb
mov
loope
jae
imul
mov
adc
dec
lret
jno
rcl
xor
ja
scas
ljmp
sbb
jge
mov
and
dec
test
loop
xor
aad
push
out
mov
int3
test
or
jge
iret
xor
rcl
pushaw
loop
pusha
or
and
faddl
sti
push
sbb
adc
jae
jb
cmpb
xlat
outsl
cmp
call
in
xor
push
xor
inc
cmc
push
dec
js
mov
ds
adc
inc
pop
ds
pop
mov
dec
adc
out
scas
std
adc
xor
cmpsb
xor
cld
sbb
xor
inc
lods
into
push
mov
es
bswap
sbb
xor
aad
test
mov
or
adc
stos
pop
xor
js
xchg
daa
lods
repnz
jns
lahf
iret
lock
mov
pop
and
loope
dec
mov
inc
jnp
adcl
mov
push
pop
push
push
jge
jmp
pushl
movsb
adc
mov
add
pop
jle
imul
or
cltd
mov
insb
cmp
insl
cld
fldcw
lods
lret
fidivl
xlat
pop
popf
cmp
lcall
xchg
mov
pop
mov
dec
push
cmp
ficomps
inc
into
inc
dec
dec
pop
jne
getsec
push
xchg
xchg
in
push
les
add
jns
stos
push
dec
mov
bnd
add
popf
mov
lock
arpl
in
adc
add
mov
sahf
roll
repnz
xchg
and
jecxz
inc
out
inc
and
push
jae
and
ljmp
add
je
inc
adc
sbbl
mov
cs
inc
sahf
outsb
lods
aam
mov
and
divb
xchg
std
test
das
push
jns
jbe
leave
mov
das
cli
jae
push
inc
test
imul
ficompl
in
xor
js
adc
jg
mov
xchg
hlt
lods
fiadds
dec
cmc
fnstenv
and
cmpsl
mov
or
and
and
xchg
dec
push
sub
sarb
bound
out
push
push
or
mov
sbb
sbb
cmpsb
aam
adc
mov
add
sub
pop
in
iret
fwait
xchg
lahf
int3
popa
test
sbb
arpl
pop
in
clc
and
sub
adc
pop
in
imul
dec
pushf
fldt
inc
push
mov
fcomi
pop
and
add
aam
loope
cmc
mov
lods
push
leave
pop
jbe
movsl
cmp
cmpsb
mov
xorl
sbb
add
dec
fsubl
scas
scas
aad
pop
jle
out
ds
or
ret
sub
dec
fstps
jnp
sbb
mov
mov
add
dec
xor
sub
dec
ss
mov
sbb
mov
adc
or
std
faddp
push
fiaddl
mov
fst
pusha
xor
lods
jle
xor
lock
sub
mov
pop
pop
subb
cld
ret
dec
into
inc
push
sub
ret
add
push
adc
push
jb
sbb
xchg
sub
mov
xchg
fiadds
mov
jecxz
adc
fisttps
and
int
leave
dec
xor
add
clc
mov
aam
sub
in
and
push
lahf
fisubrl
movb
jle
xchg
inc
loope
adc
movsl
inc
jle
jmp
clc
pop
xor
shll
cmpsb
dec
cs
xlat
jns
sub
jb
stos
ds
orl
cmpb
imul
cltd
mov
cmp
or
sub
aam
mov
or
imul
xchg
or
ds
aam
push
sbb
mov
mov
outsb
testl
and
pushf
ds
xor
xlat
inc
adc
jns
stc
and
pop
adc
inc
gs
loop
ret
shrb
or
roll
xchg
xchg
adc
add
mov
jge
fildll
jne
lcall
movsl
push
loopne
pop
dec
mov
iret
sub
lods
outsl
or
mov
sbb
rorl
outsl
test
rorl
loop
int
les
pop
jne
mov
stos
inc
cmp
enter
fwait
out
push
lock
inc
cmp
and
push
xchg
or
lea
jmp
jge
jle
lcall
mov
mov
push
dec
mov
pushf
loopne
fdivl
scas
pop
pop
add
das
scas
repz
imul
ret
cmp
push
imul
roll
dec
daa
ret
out
sar
mov
push
xor
popa
fimuls
in
push
mov
dec
adc
add
cmp
sbb
sub
pop
push
dec
sub
inc
scas
pop
addb
dec
mov
scas
xchg
lock
cwtl
adc
or
iret
dec
jl
and
add
cmp
adc
sti
pop
incb
stc
repz
fiadds
rolb
lods
sub
jb
inc
mov
cmpsl
inc
in
dec
mov
daa
sar
jns
sub
sti
pushl
fcomps
in
hlt
cltd
scas
push
or
adc
cmc
push
dec
ret
and
jno
popa
loopne
flds
out
stos
adcb
mov
jne
or
fdiv
xor
push
and
in
mov
xor
or
pushl
or
shrl
jg
adc
jl
and
popf
stos
in
pop
sbb
pushf
or
ds
add
stos
daa
outsl
inc
dec
xadd
fcomip
imul
mov
jae
dec
adc
xchg
mov
fxch
test
push
lods
sub
imul
lret
insb
adc
dec
inc
push
test
pushf
pop
mov
sub
add
mov
daa
sub
mov
push
shll
xor
insl
arpl
ljmp
cmp
jb
cmpsl
cmp
scas
cmp
pusha
out
push
aad
fldl2e
and
cmp
dec
jecxz
and
cmpsl
and
mulb
push
sub
mov
cwtl
and
cltd
jno
fs
imul
dec
jl
shl
mov
xchg
ja
or
push
push
in
push
adc
cmc
ret
cld
scas
inc
aam
mov
into
cli
inc
js
js
in
lcall
arpl
or
and
fadds
mov
dec
cmpl
nop
es
popa
aam
out
dec
out
je
inc
dec
ret
andl
out
push
or
stc
jecxz
shll
jle
popf
bound
mov
jns
dec
push
mov
scas
mov
pop
mov
mov
mov
mov
addr16
data16
nop
mov
xchg
push
outsb
cltd
adc
xchg
loopne
lahf
mov
sub
bound
dec
fsubrp
lods
bound
sbb
xchg
in
pop
enter
fucomip
mov
outsl
mov
cmp
and
jle
add
or
or
pushf
push
mov
aas
add
out
test
add
lds
sbb
dec
out
scas
fisubs
mov
cmp
nop
sti
cmp
jnp
mov
fldcw
mov
arpl
aam
cmpsb
out
mov
jp
movsb
or
dec
jbe
call
pop
push
lret
es
fistpl
int3
out
add
decb
push
aad
gs
mov
jp
movsb
jb
sahf
xor
xchg
mov
cld
add
enter
insl
imul
xlat
adc
mov
enter
clc
add
ds
cwtl
and
inc
out
pop
cmp
mov
inc
pop
scas
pop
xchg
mov
mov
xor
or
sbb
hlt
adc
mov
or
scas
lret
xlat
das
cltd
inc
jb
shl
stc
jle
mov
sahf
mov
or
lds
add
mov
mov
cmp
xor
fcmovb
loop
sahf
sub
or
movsl
dec
pop
push
cmc
sbb
inc
out
int
shl
inc
ds
mov
and
mov
mov
xchg
adc
out
xchg
cmc
dec
push
ret
mov
aad
and
xor
fwait
adc
mov
scas
jnp
inc
fcoml
push
pop
xchg
in
jmp
mov
lahf
ljmp
jne
or
adc
movsb
out
aam
xchg
push
fs
adc
mov
mov
cld
jmp
fyl2xp1
pop
push
out
movsb
pop
mov
sub
jg
jo
movsl
ljmp
xor
xor
mov
jbe
daa
es
jne
dec
and
pop
mov
xchg
jae
repz
mov
loope
inc
cmp
movsl
push
xchg
cli
loop
jno
mov
fstl
pop
je
xchg
dec
mov
lock
loopne
mov
outsl
xchg
sbb
dec
repz
sub
out
push
idivl
sbbb
cmp
sbb
pop
fsubl
scas
fidivl
call
add
shlb
cs
loopne
scas
cmp
popa
mov
cltd
imulb
push
push
mov
mov
adc
stc
lods
cmp
ljmp
lcall
rolb
sbb
addl
fs
jnp
fisubrs
cmp
out
xchg
sbb
insl
jnp
sub
jp
jae
mull
jo
jbe
jecxz
adc
out
mov
cld
push
xchg
out
xor
jnp
iret
out
mov
pop
std
jnp
mov
fdivl
add
ret
dec
dec
loope
lods
xor
daa
inc
xchg
insb
pop
in
mov
push
pushf
lds
das
pop
iret
fisubs
aad
pslld
call
or
adc
pop
pop
and
in
ss
pop
shll
push
xor
jno
flds
mov
loopne
add
add
ds
xchg
jo
clc
movb
inc
push
ja
inc
sub
cli
sub
dec
nop
testb
jae
sbb
int
pop
dec
sub
js
das
dec
mov
fildll
xchg
loope
mov
fcom
mov
xchg
sub
adc
leave
sbb
loopne
cld
fldenv
mov
push
cld
lea
inc
ja
push
jbe
mov
pop
jae
push
cmc
aad
and
setno
or
ljmp
sbb
add
lret
xor
cld
ja
sub
sub
xchg
sbbb
adc
push
daa
xor
sub
cmp
mulb
jne
in
mov
pmulhw
jo
ficoms
outsl
je
sub
jmp
bound
lret
out
or
push
nop
adc
inc
sub
ljmp
mov
jecxz
xor
pop
or
sbb
xchg
outsl
lods
dec
scas
das
cmp
cmp
mov
push
jae
mov
adc
fcoml
dec
jge
ret
outsb
cs
pop
push
pushf
mov
fcomps
repnz
pop
jmp
pop
and
mov
cmpsb
js
pop
jb
sti
push
adc
cmc
dec
rcr
cmp
adc
xchg
mov
xchg
add
sarl
movsb
mov
insb
std
out
mov
aam
lret
cmpsb
cmc
aaa
outsl
stos
mov
lret
movsl
testb
push
xlat
cmp
mov
aam
daa
push
xchg
roll
sub
cmp
je
xchg
mov
fimuls
gs
das
inc
lahf
addb
cwtl
mov
cmpsb
je
hlt
es
add
aam
mov
iret
scas
rcll
lahf
repnz
ss
xlat
test
mov
lret
jmp
mov
scas
in
dec
push
mov
or
lock
aaa
push
dec
inc
iret
pop
xlat
pop
test
or
loope
pop
lock
mov
add
cli
cmpsb
pop
xor
mov
pop
lods
pop
test
aas
and
mov
clc
inc
push
xchg
jle
stos
or
and
inc
push
and
shll
mov
cmp
add
and
pushf
lods
sbb
lret
xchg
lcall
insb
jbe
ret
xchg
xlat
jns
clc
push
xor
push
inc
iret
cmp
dec
jl
icebp
mov
mov
ss
mov
xor
xor
leave
repnz
mov
mulb
fldenv
pop
jbe
mov
cmp
jg
cmp
xchg
mov
cmc
or
pop
xor
adc
pop
insl
sub
loopne
add
and
mov
mov
mov
add
out
sub
clc
popa
loop
push
and
add
jl
stos
mov
das
and
shrb
or
movsl
xor
push
enter
cmp
cmp
shl
push
dec
xchg
mov
mov
fiaddl
jne
push
repnz
push
enter
stos
dec
xor
fcmovu
xor
lock
cmp
lret
cltd
pop
popa
pop
int3
inc
js
mov
add
cmp
outsb
sub
push
leave
js
and
lods
pusha
test
adcb
int3
addb
outsb
sbb
mov
in
jmp
jo
ds
insb
jecxz
sub
sub
out
xor
pop
xor
inc
mov
mov
les
xor
inc
aam
inc
push
icebp
xchg
xchg
fnstcw
lods
mov
adc
xchg
lea
rcrb
imul
mov
inc
inc
ss
mov
pop
mov
mov
push
inc
lret
test
cli
imul
inc
outsb
in
push
push
dec
xchg
adc
push
sub
loopne
cmp
xlat
cltd
dec
jae
pop
lds
cld
mov
and
aad
push
imul
mov
test
aam
add
test
mov
inc
jp
mov
xlat
test
fadd
es
sub
loop
movsl
scas
and
dec
mov
jmp
in
ss
andl
add
mov
out
mov
jb
outsb
cltd
jg
ds
rep
jns
dec
loope
inc
shrl
push
andb
loopne
and
mov
testb
push
xchg
test
fucomp
mov
cmp
dec
xchg
pop
insl
mov
jl
pop
xor
cld
call
int3
pop
testb
jnp
cmpb
mov
sub
dec
mov
scas
ja
test
out
push
and
inc
stos
xor
fidivl
fwait
xor
jge
andl
fnstenv
ss
repz
popf
addl
pushf
push
insb
push
sbb
mov
add
pop
test
xchg
rclb
and
insl
add
cmp
lock
in
xchg
aaa
xchg
icebp
push
cmc
or
mov
nop
cmp
cmpsb
popf
or
scas
cmp
dec
add
sub
fdivp
pop
mov
dec
outsl
jo
jbe
lcall
xlat
ljmp
and
cli
aaa
inc
stos
push
adc
inc
arpl
push
jp
mov
fs
gs
ret
les
es
aaa
ss
jp
test
imul
icebp
hlt
cld
idivb
enter
mov
push
outsb
orl
cmp
lret
fisubrl
ds
data16
and
jle
push
mov
adc
or
cs
outsb
fdivrs
call
pop
dec
xchg
mov
jno
pop
data16
nop
mov
les
repz
mov
jne
popa
pusha
xchg
bound
icebp
jg
sbb
outsb
or
sbb
movb
mov
sbb
dec
inc
mov
dec
mov
out
inc
mov
fdivs
sbb
dec
sub
dec
push
jge
push
adc
call
dec
rclb
dec
sub
add
or
jp
jae
cmp
mov
or
in
mov
sub
orb
mov
and
sub
lahf
cltd
cmpsl
pop
jmp
jp
xor
movsb
push
jb
incl
mov
inc
hlt
loope
lea
jge
test
addr16
call
inc
je
jae
pop
or
cmpsb
pop
out
jns
ret
cs
jns
jbe
mov
out
add
out
ss
dec
cli
sbb
ret
jmp
mov
xor
mov
sub
mov
lods
ds
movsb
mov
enter
or
mov
std
lds
xor
icebp
shrl
inc
xor
xor
aaa
xchg
shl
mov
test
ss
mov
outsl
adc
popa
insl
outsb
fistpl
push
xbegin
dec
lock
outsb
inc
movsl
pop
pop
iret
out
xchg
pop
shll
adc
jae
inc
pop
and
mov
jmp
dec
call
aaa
js
add
or
das
mov
jne
loope
jns
fistpl
insb
nop
pop
mov
nop
push
and
mov
pusha
loope
push
in
mov
repnz
sbb
ret
daa
xchg
xchg
into
nop
jl
iret
cli
inc
add
clc
cmc
sub
mov
dec
xchg
ret
insb
add
xchg
ja
jb
push
and
stos
xor
loopne
or
pop
inc
aaa
mov
xchg
frstor
mov
addr16
enter
arpl
or
jbe
mov
sbb
bound
lret
aaa
jo
lea
lods
adc
in
add
into
xor
lock
je
test
flds
fidivs
mov
mov
shll
add
aad
mov
jp
or
sbb
jge
and
push
push
jno
and
cltd
add
bound
mov
xchg
mov
sub
jg
push
adc
in
sbbl
inc
cwtl
clc
xchg
imul
adc
pop
push
cltd
stos
xor
lods
arpl
fdivs
fimull
mov
jnp
divb
roll
fucomi
sbb
dec
rcrl
clc
dec
xlat
fldt
les
pushf
push
pop
rcll
cmpsl
pop
cld
and
negl
iret
fcoms
pop
and
ret
push
in
pop
sbb
or
add
add
mov
pop
cld
jge
mov
nop
jno
and
cmp
add
mov
or
mov
mov
stos
jbe
fs
pop
cltd
jmp
jp
lock
mov
and
loope
pop
jge
imul
mov
add
dec
pop
mov
dec
popa
jno
lret
sub
je
into
mov
mov
xchg
add
adc
movsb
and
or
cmpsb
cmpsb
inc
dec
int3
cltd
popa
ja
lea
addr16
fistps
mov
gs
leave
push
and
sbb
mov
ljmp
cmpb
push
enter
test
pusha
fldenv
imul
out
jo
movsb
daa
mov
xorb
xchg
and
int
outsb
popa
rolb
fucomi
xchg
popf
shll
sub
std
xlat
cmp
je
insl
sub
mov
sub
xchg
js
adc
fstpt
mov
movsb
mov
mov
fsubl
and
sub
xchg
testl
adc
mov
jae
scas
mov
aam
loopne
adc
push
sbb
and
and
or
rorl
movsb
int3
jmp
mov
jns
jo
sbb
out
inc
testl
addr16
xchg
mov
adcb
xor
popf
mov
iret
cmpsb
jns
ja
lret
jns
in
cltd
pop
adc
lret
leave
out
pop
inc
shll
dec
sub
jne
inc
nop
jmp
jbe
adc
and
lret
arpl
xchg
sbb
mov
or
mov
xor
adc
shrb
fadds
push
xor
inc
inc
xor
sub
jmp
dec
pop
mov
push
cmp
pop
jno
out
repnz
mov
add
jno
lock
inc
rcrb
push
jne
dec
packssdw
adc
iret
jns
fsubrs
cli
xor
dec
mov
aas
mov
xor
jnp
dec
lea
mov
call
adcl
pop
ret
aad
scas
movsl
clc
pop
sub
ret
jns
and
mov
or
jecxz
aas
lods
xchg
dec
push
fs
mov
call
dec
sub
jecxz
push
sub
ja
mov
mov
push
sbb
xchg
inc
push
cltd
std
ja
mov
pop
pushf
aam
aas
outsl
xor
push
fwait
cmp
lods
inc
lock
xor
int3
or
daa
and
cmp
mov
xchg
stc
dec
out
sbb
pop
pusha
addl
rorb
or
cmp
jl
mov
lds
adc
jle
push
je
push
cld
cmp
stc
fs
jns
fdivl
out
jno
je
pop
stc
pop
enter
mov
js
out
rol
out
les
cmp
lcall
add
and
loope
cli
jg
jo
rcrb
lret
sbbl
or
mov
rclb
pop
adc
loopne
adc
leave
clc
inc
lods
aaa
outsl
mov
jne
pop
add
mov
sbb
mov
xchg
sub
push
and
into
inc
sbb
bound
mov
mov
adc
ds
inc
cwtl
cld
data16
insb
adc
imul
mov
stos
push
sbb
or
cmpsb
mov
ja
aas
fucomi
cmp
fcos
movsl
xor
dec
xor
xchg
inc
ljmp
ss
cmpsl
inc
int3
xor
sbb
xor
pop
popa
mov
mov
loop
fsubr
ds
lds
popa
xchg
stos
xchg
cmp
into
stos
pop
push
std
push
loop
in
fisubrl
insb
loope
rcrl
jae
dec
roll
cmp
js
scas
cli
add
lea
ss
testb
vmovsldup
mov
bound
push
jmp
sbb
dec
jle
nop
push
lods
test
jbe
movsb
movsl
repnz
xor
lods
pop
icebp
fimuls
and
enter
xchg
movsb
cs
rcrb
outsl
xchg
or
ss
lret
fisubrl
sbb
push
xor
fildl
pop
sahf
cmp
add
lcall
xchg
out
or
push
jne
js
push
int
inc
dec
test
arpl
int3
jp
gs
mov
lret
orl
mov
xchg
add
xor
hlt
rcll
pop
adc
xchg
push
jp
scas
inc
mov
out
ret
in
test
jns
sbb
mov
addl
jp
fs
rcr
rcrb
cmpxchg
adc
ret
pop
push
pop
and
jecxz
mov
xor
aam
cmpsl
jg
stos
fst
jns
inc
sub
xchg
lds
fdivl
movsl
imul
insb
or
jnp
fcmovb
xchg
out
fbstp
insb
cltd
inc
mov
movsb
lret
leave
and
mov
shll
gs
add
adc
dec
mov
jns
add
add
sub
stos
enter
mov
lahf
jmp
lods
jbe
cmp
xor
std
lock
fwait
icebp
out
arpl
push
out
jp
lds
mov
mov
add
add
and
push
push
sub
push
jne
inc
inc
sub
sti
fidivl
lret
push
dec
lods
data16
outsb
sub
push
mov
in
and
sbb
mov
sbb
adc
js
std
scas
sbb
cmp
mov
and
ret
sub
jle
test
shrb
push
xchg
pushf
xorb
pmaxsw
imul
dec
scas
mov
test
and
dec
sahf
xchg
add
xchg
test
pop
fwait
in
add
loopne
jl
pop
and
xchg
in
orb
xor
jo
call
adc
add
aam
adc
imul
out
jp
shll
push
jb
push
pop
jp
add
les
fs
pop
mov
xchg
cmp
clc
mov
push
std
int
xor
inc
jg
dec
sub
pushf
pusha
insb
inc
daa
mov
mov
popa
pop
sbbl
jns
xor
dec
adc
xchg
jae
loop
inc
int3
jns
and
fldl
mov
scas
call
icebp
or
add
and
xor
fmull
mov
dec
stc
sbb
mov
push
xor
xorl
pop
push
lds
clc
pop
and
push
std
imul
cltd
mov
cmpsl
movsl
sti
addb
es
cli
and
jne
ret
or
fcoml
pop
cs
imul
inc
push
inc
fcomip
inc
jno
and
lret
shll
pop
repnz
mov
in
push
fisubrs
out
mov
in
sbb
xchg
std
xchg
mov
jg
mulb
sbb
scas
sbb
aas
xchg
test
imul
mov
mov
cmp
stos
inc
mov
push
dec
xchg
pop
subl
gs
js
lods
in
push
fwait
jno
push
cltd
mov
lcall
ret
testb
jbe
mov
sti
pop
repnz
or
lret
push
xchg
push
loop
test
sbb
imul
in
cmp
ret
xchg
push
es
arpl
or
mov
mov
push
pop
and
push
sbb
ja
cwtl
call
push
loopne
xor
ds
jmp
and
add
or
pusha
mov
inc
inc
and
in
lea
or
jg
add
push
jge
jp
mov
and
and
mov
scas
xor
push
pushf
imul
test
ja
adc
repz
imul
sti
pop
sub
ror
dec
or
idiv
mov
mov
mov
push
mov
fcoms
dec
pop
mov
fbstp
lahf
jae
ret
adc
mov
cmc
fcoml
fnsave
jbe
push
pop
pop
fwait
rclb
les
adcb
lcall
gs
adc
loopne
lods
xor
bound
test
hlt
inc
mov
rcrb
mov
out
cmpsl
nop
cmp
and
into
scas
xchg
jmp
mov
sub
mov
sbb
xor
fistps
cmp
ret
popf
shll
mov
bound
sub
js
andl
mov
aad
cmpsb
lcall
dec
pop
xlat
loopne
xchg
mov
gs
ljmp
movsl
mov
sbb
mov
sub
xor
cwtl
fidivrs
lret
mov
mov
imul
mov
dec
movb
push
pop
pop
jbe
repz
add
xor
fdiv
sarb
scas
pop
in
cmp
jbe
test
pop
js
outsl
out
test
cmp
fsubp
aas
mov
out
xchg
xor
rorb
add
cmpsb
jecxz
push
out
xchg
test
pop
das
lret
push
mov
cmp
mov
stos
mov
hlt
es
or
or
jnp
jg
pop
orb
aam
pusha
push
cli
fadds
xchg
add
mov
push
ja
jl
cmp
stc
sahf
aas
dec
jnp,pt
fadds
repz
dec
push
jno
jge
cmp
neg
push
lds
jo
push
addl
cli
inc
xchg
stos
and
sbb
ret
fcoml
scas
jne
ljmp
adc
loope
sub
sbb
jecxz
iret
mov
mov
int3
push
adc
cmp
out
mov
stos
inc
and
ljmp
xlat
mov
jge
mov
mov
not
jg
or
ret
aaa
fildll
mov
jnp
adc
cli
dec
ljmp
sub
jns
mov
push
pop
push
movl
lcall
ljmp
cli
adcl
cmpsl
mov
mov
inc
std
pop
xor
push
mov
stos
push
pop
mov
pop
loop
jg
and
pop
aad
jmp
dec
mov
sbb
jae
int
push
pop
mov
jl
repz
cmc
add
sub
jl
jg
es
dec
dec
xorl
xchg
sub
and
adc
ret
xor
cmpsl
incb
or
pop
sub
insb
or
xchg
xchg
daa
data16
mov
mov
jno
adc
or
test
push
add
sahf
lcall
orb
jle
mov
jl
aam
jns
xor
or
pop
xchg
test
leave
lea
mov
mov
jno
shll
fsts
dec
xor
pop
outsl
and
mov
lret
stos
je
adc
push
test
pop
stos
mov
lds
repz
cwtl
xlat
adc
sbb
rcll
js
outsb
sbb
mov
dec
gs
xor
mov
mov
or
into
and
inc
insl
call
fwait
js
push
xchg
daa
sub
sub
pop
sbb
mov
repnz
pop
loopne
insb
sbb
cltd
movl
xchg
cmpsb
ja
and
lcall
daa
jb
jl
jmp
lock
idiv
and
test
fists
hlt
sahf
in
mov
or
dec
jb
aas
lds
sarb
es
and
aad
dec
inc
jnp
sbb
test
out
fsts
add
sub
push
outsl
insl
fmull
sahf
pop
into
mov
cmc
or
leave
lahf
inc
mov
dec
in
sbb
mov
out
lock
and
pop
cmpsl
push
hlt
sbb
negb
lcall
mov
insl
pop
lds
cmp
test
inc
mov
mov
pop
push
and
xlat
imul
cmc
push
ja
mov
or
dec
andl
and
ljmp
ds
push
cli
add
pop
or
mov
imul
jno
and
iret
dec
push
mov
adc
mov
push
dec
cmp
xor
rcrl
sub
fwait
stos
setg
mov
dec
loope
rorb
ret
pop
repnz
jno
lock
test
cs
inc
adc
gs
les
lcall
mov
add
sub
dec
xor
jecxz
push
lds
jns
push
and
stc
mov
sbb
test
ret
jmp
mov
pop
push
in
dec
icebp
loopne
imul
cld
pop
enter
push
xchg
xchg
mov
sub
sub
shl
jmp
inc
inc
inc
mov
jl
mov
cmpb
push
push
gs
xchg
aam
out
inc
fildl
inc
adc
pop
addr16
adc
stc
xchg
inc
adc
gs
mov
ror
adc
repnz
call
aaa
xchg
loope
pop
push
sbb
inc
xorb
xlat
fidivs
xchg
imul
rclb
ja
cmp
insl
ljmp
adc
push
ljmp
loop
jge
popf
bndldx
sub
and
or
pop
sub
iret
xor
mov
mov
pop
fisttps
outsl
mov
cmp
mov
pop
std
fcmovnb
lods
push
rclb
jbe
push
mov
mov
xor
or
dec
cmp
push
push
xchg
scas
inc
inc
push
pop
mov
mov
pop
cli
pushf
push
jp
test
cmp
dec
shlb
enter
stos
pop
popa
imul
or
mov
pop
push
je
pop
hlt
jb
idiv
roll
adc
movsl
mov
adc
add
push
dec
mov
aad
add
xor
or
fsubrl
arpl
mov
in
sub
add
fistps
sarb
sub
xlat
sub
xor
ja
mov
incl
cli
lret
pop
sub
das
cmp
sbb
sahf
dec
stos
test
addl
cmp
aam
out
or
jle
mov
xor
xchg
in
dec
xchg
inc
xlat
hlt
into
insb
add
insb
out
inc
lret
popa
add
xchg
cmp
xchg
fcompl
fcompl
dec
in
pop
add
pop
jo
and
sub
push
iret
sbb
shll
repz
ficoml
shlb
xorl
es
cmp
imulb
shlb
push
jne,pn
sbb
mov
fcmovbe
lods
mov
jbe
addr16
and
in
cli
cmc
stc
adc
insl
xor
jmp
pop
sub
pop
mull
lock
mov
dec
fdiv
jl
mov
ss
sbb
jle
mov
push
pop
sbb
pop
cmp
or
mov
stos
xchg
or
fimuls
in
mov
jp
dec
cmp
lock
mov
or
and
sub
sar
neg
mov
and
cmp
hlt
add
jo
cmp
add
ret
popa
dec
push
jbe
imul
mov
mov
cltd
and
xor
nop
fs
fadd
cmp
mov
xorb
pop
sub
in
imul
inc
and
sbb
imul
in
aad
adc
jle
sub
adc
xor
mov
sbb
into
jle
adc
aas
cli
pop
dec
cmc
aas
cmc
mov
push
sbb
and
and
xor
lods
xor
rcll
pop
stos
cs
mov
sbb
push
sahf
nop
das
xor
jo
xchg
sbb
mov
or
bound
fidivl
mov
adc
sti
sahf
stos
inc
bound
ffree
mov
add
jecxz
xlat
adc
pop
pop
xchg
xchg
pop
add
mov
mov
scas
insl
or
cwtl
hlt
push
push
sub
movhps
jle
in
andb
loop
fdivrl
test
push
fs
shrb
mov
jmp
loop
sub
jo
jno
movsb
cmpsl
dec
adc
dec
pop
push
push
gs
ja
jne
jle
ja
and
add
jo
repnz
mov
dec
inc
fistps
xchg
scas
popa
enter
inc
adc
sbb
and
ret
jecxz
mov
ds
out
inc
bound
dec
mov
out
cmp
mov
push
mov
xor
and
xchg
lods
xchg
mov
xchg
scas
xor
lods
push
frstor
ja
mov
outsl
xchg
aam
adc
rorb
stos
scas
mov
ja
adc
xor
jno
scas
xor
dec
mov
dec
andl
repnz
cmp
push
jmp
scas
fldcw
cltd
mov
inc
andb
les
add
or
xlat
add
inc
jge
ds
mov
dec
in
inc
psrlw
adc
aad
shlb
outsl
jl
add
in
out
testb
pop
and
mov
out
mov
cltd
xchg
popl
ret
dec
lcall
mov
xchg
jmp
or
lret
lds
cmpsl
xchg
add
xor
xlat
loopne
mov
push
push
sti
int3
in
cmp
inc
mov
lods
lret
loope
inc
loop
add
sti
enter
sbb
mov
lcall
aam
cmpsb
xor
test
cwtl
xchg
push
push
fwait
std
out
lret
in
scas
adc
in
testb
mov
out
insb
fucomip
out
out
mov
or
push
cmp
cmpl
or
mov
inc
scas
push
xor
sub
fwait
mov
add
test
or
lea
add
pop
mov
dec
mov
test
cwtl
pop
pushf
dec
popa
mov
mov
jg
push
and
jne
pop
push
imul
ret
mov
adc
push
mov
sbb
inc
jge
cmp
xchg
adc
out
andb
fs
cmp
das
pop
dec
push
sub
inc
jo
addr16
sti
mov
aam
hlt
into
addr16
push
decb
add
jle
cmpsb
fstp
rclb
cli
sti
push
mov
jno
lods
cwtl
mov
mov
and
ss
push
or
scas
ret
out
cltd
neg
movsl
test
add
aam
fstpl
fisubl
add
das
cmp
rcrl
movsl
aas
add
rcrb
js
sbb
lea
test
dec
pop
fs
pop
push
negl
xchg
jge
push
imul
pop
stos
xlat
out
test
ret
adc
sub
jnp
xor
pop
xor
mov
imul
call
lcall
imul
or
push
int
jnp
push
sete
dec
sbb
sbb
dec
mov
fwait
mov
push
fistps
push
enter
int3
pop
imul
jno
lea
and
jbe
sbbl
lahf
stos
mov
cltd
push
jo
shll
jle
push
in
xchg
loope
ds
std
ds
inc
fnsave
push
ds
push
in
add
repnz
xchg
jg
movsl
jae
aad
push
mov
xchg
lret
shlb
rcl
xor
sbb
cmp
mov
inc
rcl
dec
imul
cmp
cmpsb
inc
je
ja
test
aam
cltd
frstor
lret
js
mov
xlat
push
or
mov
add
push
out
pop
jmpw
add
int3
add
loope
popa
pop
cmp
and
adc
xor
hlt
mov
fidivrs
jnp
xor
dec
hlt
pop
repnz
pop
fistpll
xchg
push
xor
xor
add
dec
insl
add
xlat
xchg
mov
std
clc
xor
cmc
subb
in
scas
sbb
loop
pop
stos
add
mov
cld
cmp
mov
shll
hlt
mov
js
pop
jae
inc
scas
jg
enter
adc
add
xor
and
lds
push
je
dec
inc
hlt
ljmp
sarb
sub
int
add
add
add
lret
pop
shrl
movsb
or
add
cld
sahf
roll
inc
push
sarl
addr16
imul
sub
das
stos
mov
test
arpl
hlt
mov
imul
ficoml
loopne
rcrl
test
cwtl
add
dec
adc
iret
push
out
xor
divb
dec
dec
ljmp
in
imul
repnz
mov
aaa
inc
test
popa
cmp
outsl
enter
andb
bound
ja
jno
push
sbb
adc
lds
dec
jne
push
xor
or
orl
mov
jne
jle
jl
mov
stos
and
out
add
dec
rclb
xchg
sub
pop
in
fisubs
loopne
pop
cmc
negl
notl
xchg
push
fwait
movsb
mov
stc
addb
popl
or
jg
xchg
aam
mov
cmpsl
dec
std
xchg
and
inc
push
scas
call
and
cmp
lret
xorl
push
fldt
movb
out
rcrb
inc
leave
add
dec
pop
arpl
and
cmp
and
pop
xchg
push
add
testb
mov
xlat
jge
jmp
xchg
or
nop
push
divl
inc
sti
xor
jmp
pop
xchg
incl
push
mov
ret
or
les
pop
fsts
leave
push
fwait
jmp
adc
adc
fadds
shlb
arpl
out
or
adc
or
xchg
ljmp
and
mov
mov
es
pop
jo
xor
out
lcall
les
mov
dec
pushf
sbb
rclb
pop
stos
sub
sbb
pop
vmwrite
ficoml
inc
addr16
mov
dec
cltd
xchg
add
popa
pop
add
fs
sub
cltd
call
icebp
mov
jbe
mov
or
fucom
cmp
or
cmp
int3
xor
cmp
add
imul
cmpl
cltd
outsl
sub
into
push
movsb
mov
xor
test
inc
ja
out
sbb
daa
ja
push
add
call
mov
sub
test
xchg
jecxz
sbb
sbb
aam
adc
rclb
out
jg
xchg
xchg
cmpsb
sbb
iret
fs
mov
test
adc
mov
add
inc
add
icebp
inc
addr16
xchg
xor
fidivs
inc
iret
adc
mov
xor
jge
sub
jp
dec
ss
cmpsb
dec
fisttps
in
mov
movsb
cmpsl
adc
dec
decl
or
rolb
mov
xor
jmp
cmc
mov
adc
adc
and
cmp
aaa
pop
rolb
psubw
and
cmpsb
xor
mov
hlt
not
or
js
jb
dec
inc
rclb
or
loope
xchg
mov
mov
push
cmpb
cmpsb
movsl
sbb
pusha
sub
cltd
enter
ficoms
pop
repz
js
aaa
out
push
cli
mov
shll
imul
call
int3
and
sbb
test
out
sti
imul
out
insb
nop
pushf
and
add
inc
sbb
pop
inc
imul
testl
arpl
inc
ret
leave
push
push
sahf
push
aam
jo
and
inc
add
mov
pop
xor
in
mov
cmpb
scas
shll
test
cli
mul
repz
scas
popf
sbb
mov
dec
enter
fsubs
jae
lret
cmpsl
je
in
gs
cwtl
shl
pop
test
xor
and
jnp
dec
add
mov
jb
and
dec
cltd
mov
inc
rcrl
orl
mov
dec
cld
mov
inc
mov
push
xor
jb
cmp
std
mov
cli
inc
mov
mov
push
cmp
rolb
sub
cli
or
lret
mov
rcll
and
shl
jne
adc
or
push
inc
ja
xchg
xchg
or
and
test
ljmp
pop
add
add
mov
jmp
mov
sub
cmp
ja
adc
adc
jbe
lods
roll
popf
mov
xchg
mov
pop
adc
test
out
push
sbb
mov
jae
sub
xchg
fcoms
jmp
mov
out
xchg
sub
imul
popf
cs
push
jle
xor
into
jle
loopne
push
stos
shlb
and
jno
lock
addr16
lods
dec
std
iret
xchg
cs
xchg
pop
inc
or
sti
call
je
jns
sbb
test
mov
xchg
loopne
dec
mov
stc
nop
icebp
pop
je
pop
inc
int
mov
add
clc
outsl
cmc
sub
sbb
push
jne
dec
popa
fildl
xor
cmp
or
int3
out
jno
add
sbb
ja
ljmp
jp
gs
pop
aas
mov
rcl
test
push
shlb
cmp
cmpb
cmp
pop
lcall
mov
or
ljmp
mov
xor
xchg
repnz
mov
and
push
fisttpll
sarl
lret
addr16
jmp
jae
mov
movsl
sub
inc
sbb
notl
jne,pt
andl
push
mov
push
push
cwtl
imul
dec
scas
sahf
faddl
psrlq
pop
mov
jb
je
xchg
mov
and
out
bswap
test
in
push
mov
pop
hlt
je
in
std
jle
xor
popf
fbld
mov
repz
or
pop
cmp
popa
push
mov
dec
xor
xor
movsb
mulb
lret
push
mov
jmp
push
loopne
mov
lret
pop
mov
sar
inc
or
jmp
cmpsb
or
iret
jbe
scas
roll
fnstcw
xlat
imul
test
ja
sub
rolb
push
pusha
cmpsl
pop
jl
iret
filds
cmp
push
and
xchg
jge
dec
xchg
rol
adc
xor
xchg
stos
pop
imul
sarl
pop
lret
push
sbb
mov
mov
pop
jp
fstpt
in
dec
std
loop
add
out
outsb
stos
loope
mov
jp
add
addl
sbb
cmpsb
sbb
mov
xor
repnz
lahf
push
dec
scas
nop
repnz
mov
shlb
mov
mov
lret
mov
push
xor
cmp
shrb
mov
int3
mov
lods
sub
sub
loope
subl
rcll
inc
andl
outsb
mov
dec
and
aam
pop
or
ljmp
cwtl
cmp
int3
cmp
xor
dec
ds
push
sbb
pop
inc
mov
cmp
jb
mov
cmovae
movsl
popf
fcmovu
mov
lahf
popf
cmpsb
fs
call
inc
or
ljmp
dec
pusha
jne
sbb
xchg
in
mov
inc
ljmp
bound
lods
pop
adc
das
mov
ror
add
mov
aas
inc
xchg
movsl
sub
mov
ljmp
sbb
std
stos
mov
repnz
movsb
and
fnstsw
xchg
out
cmp
lahf
addr16
inc
ljmp
lahf
ret
xor
lahf
pop
movd
leave
xchg
adc
rolb
jecxz
in
mov
repnz
mov
insb
shrb
cmpsb
dec
push
sub
jge
xchg
jl
pushf
ja
ja
xchg
xor
ret
movsb
mov
push
xor
les
out
gs
sbb
daa
jecxz
jmp
sbb
cs
and
jne
add
xchg
pusha
adc
pusha
popf
mov
add
les
xchg
and
add
int3
test
xchg
stos
xor
adc
mov
adc
mov
xor
jg
pop
in
xor
xchg
in
mov
shll
push
mov
leave
or
enter
gs
fldl
sbb
div
lds
in
inc
xchg
popf
in
or
aam
in
bound
ret
sub
cmp
xchg
insb
mov
daa
push
call
push
add
mov
fadds
cmpb
lods
movsb
int3
push
push
orb
mov
pop
aas
add
sbb
jne
cmpl
pop
pop
push
mov
ret
test
arpl
adc
mov
xchg
mov
rcrl
xchg
jb
ret
dec
popa
jle
mov
pop
out
std
je
sub
push
out
addr16
daa
aaa
leave
data16
lret
push
mov
dec
mov
add
ret
add
leave
cmp
stos
lea
ret
leave
hlt
sub
mov
jecxz
pop
loopne
ret
imull
mov
mov
ret
mov
push
push
mov
mov
test
rorl
xor
jns
push
mov
iret
ret
sbb
push
xchg
mov
dec
fxch
xlat
jns,pt
dec
or
inc
cmc
in
jne
push
pop
cmpl
adc
bnd
jne
pop
sbb
push
in
cmp
pop
and
mov
popf
fnstenv
jnp
push
stos
les
cmpsb
pop
je
mov
imul
call
test
pop
pop
lds
pop
mov
sarl
arpl
push
push
dec
sub
aaa
fs
popa
ret
dec
add
and
pop
xor
lock
bnd
adcl
sarl
jno
xchg
lret
inc
shlb
sbb
lcall
push
or
jne
in
mov
ljmp
aaa
xchg
mov
pop
push
mov
adc
jp
scas
data16
inc
lea
mov
pushl
add
cmp
outsl
adc
xchg
push
add
pop
mov
aas
sahf
jmp
pushf
mov
add
ljmp
sbb
jnp
das
ret
test
jno
dec
or
jno
leave
fisttpll
arpl
into
or
pop
xchg
sbb
imul
or
pop
cmpsb
mov
les
xchg
aas
outsb
jae
and
dec
add
push
dec
arpl
stos
icebp
iret
jmp
fs
in
jno
ficoms
mov
sets
pop
add
shlb
cmpsb
ljmp
ljmp
inc
ljmp
jnp
ret
ret
mov
push
rcl
push
cli
int3
lret
adc
rcrl
sbb
pop
lea
jecxz
cld
xor
mov
sbb
xor
ret
jae
bound
mov
inc
ret
jl,pt
xchg
inc
adc
sbbb
and
push
sbbl
jns
jp
clc
stos
mov
addr16
ficompl
popf
adc
push
pop
mov
xchg
cmp
scas
out
roll
fmull
push
jecxz
cmp
fcmovnu
std
sti
cwtl
sarl
cmp
out
lret
pop
in
jnp
add
ret
pop
mov
inc
add
out
fmulp
mov
sub
mov
sbb
fstps
popa
mov
xor
outsb
inc
pop
scas
mov
push
push
or
xchg
xor
inc
loope
mull
mov
or
aad
imul
movsl
adc
lds
in
add
out
mov
out
add
inc
sbbl
ror
shll
fidivs
std
mov
imull
adc
popa
test
pop
or
cmp
xchg
cmp
add
mov
lea
jb
scas
xor
mov
inc
push
vucomiss
lock
xor
push
and
daa
pusha
and
testl
inc
sub
arpl
aas
jle
xchg
jg
enter
fnstsw
push
add
stc
pop
jb
rolb
add
cmpsb
mov
pop
inc
jg
dec
imul
dec
lods
and
sahf
mov
xchg
pop
sub
push
sub
add
mov
mov
sbb
cmp
dec
ficoms
jb
es
in
fwait
outsl
iret
adc
addr16
ljmp
pop
mov
int
cwtl
ljmp
out
mov
cmp
mov
dec
jb
add
mov
sbb
das
movsl
push
jmp
push
cmp
adc
cmpl
lret
xor
xor
je
inc
pop
sub
sbb
adc
loope
and
out
scas
dec
push
shlb
test
imul
xchg
fisubl
ffreep
push
and
inc
aas
cmpsb
xchg
mov
xchg
mov
mov
shlb
jb
dec
push
out
outsl
aas
xor
inc
sub
aas
rcpps
outsb
inc
add
out
lret
mov
push
and
adc
hlt
out
dec
fisubrl
inc
jmp
bound
xchg
and
xchg
jle
imul
imul
lods
cmpl
cwtl
sti
sbb
es
popf
mov
add
aad
xlat
jecxz
push
or
cmp
lea
dec
lcall
xchg
xor
xchg
mov
clc
lds
cmp
cmp
mov
xor
aam
repnz
push
int3
jmp
and
xor
mov
es
cltd
pop
mov
sub
mov
pusha
or
cld
sbb
cmp
and
rcll
pop
ja
inc
push
lret
fdiv
in
push
add
pop
fldl
or
fdivs
jg
roll
dec
out
cmc
in
xor
jg
xchg
addl
push
mov
in
aad
test
mov
lods
mov
mov
or
jne
fwait
test
int
lahf
popf
xor
in
aad
test
mov
repnz
sbb
int3
pop
ret
push
in
pushf
push
popa
dec
pop
pop
dec
dec
mov
repnz
jmp
jmp
add
sti
push
sbb
loop
xlat
ljmp
pop
xchg
inc
cmp
imul
testb
fstpt
and
sub
in
or
fstpt
xlat
or
lods
es
es
fcompl
in
loopne
xor
jae
loope
gs
mov
or
cltd
jbe
add
or
stc
pop
adc
add
cltd
rol
imull
out
push
arpl
out
mov
and
lock
cmp
sbb
mov
or
sbb
sbb
ds
dec
mov
fcmovnu
stos
mov
std
cltd
mov
fisttps
push
lahf
push
std
sub
out
adc
cwtl
sub
lods
lock
push
jae
fimuls
int3
out
lcall
adc
punpckhdq
das
fmull
and
cmpsb
idiv
sub
mov
test
scas
ljmp
nop
dec
cmp
or
sub
out
pushf
jbe
std
mov
hlt
pop
sub
mov
sbb
cmp
inc
jnp
int
outsb
shr
and
and
dec
movsl
adc
call
sti
push
les
pop
popa
addl
pop
insl
dec
iret
shl
mov
nop
dec
mov
movsl
idiv
repnz
roll
xchg
dec
and
addr16
xor
and
adc
aad
fmuls
cs
jb,pn
mov
mov
inc
in
add
sti
out
adc
dec
mov
dec
fdivrs
and
mov
out
jb
mov
jp
mov
int3
dec
pop
test
inc
pop
push
sbb
ss
lods
out
pushf
or
and
das
call
pop
mov
fidivrs
jne
adc
sub
mov
push
mov
dec
in
push
sbb
std
xchg
pop
aas
push
data16
pop
out
inc
jmp
popf
aas
mov
mov
dec
ljmp
or
andb
mov
xchg
imul
lods
cmp
pop
cs
data16
inc
jne
ror
push
aad
cmc
fwait
mov
mov
add
ud2
xchg
jno
jg
mov
xor
jg
sti
into
rcll
outsb
std
add
sbbl
xor
scas
xor
xor
sarl
cmp
in
inc
jno
lcall
negb
sub
and
pusha
mov
cmp
loop
jb
mov
inc
in
aaa
scas
les
xchg
mov
sbb
adc
xor
inc
arpl
add
jl
xchg
decl
sbb
jge
mov
jns
cwtl
cmp
mulb
sbb
ret
repnz
loop
xchg
and
ficoms
mov
or
push
inc
lock
pop
insl
mov
xchg
mov
pop
negb
push
adc
add
or
mov
scas
mov
adc
cltd
push
pop
filds
xor
aad
fdivrs
xchg
and
xchg
scas
loop
lods
pop
repz
int3
fcoms
pop
adcb
mov
cmp
in
call
adc
xchg
add
sub
mov
inc
jno
mov
sbb
mov
mov
inc
cld
inc
jg
jecxz
insl
cltd
jbe
jle
cltd
aaa
sbb
in
add
fstpt
loopne
hlt
jge
xor
jns
loope
or
and
sub
lcall
mov
xchg
push
add
pusha
rolb
fmul
jae
stos
jecxz
mov
add
xor
popf
lock
ljmp
xlat
sub
adc
mov
loop
shll
movsb
test
adc
mov
pop
shrl
sbb
jae,pn
mov
pop
mov
lcall
push
xchg
cmp
mov
mov
aam
orb
imul
rorl
andb
rorb
mov
lods
dec
cmp
cmp
jno
imul
out
mov
rcr
ds
test
mov
add
xor
enter
clc
mov
mov
faddl
ret
rcr
stos
cs
test
stos
cmp
outsb
popf
add
jg
inc
or
mov
jnp
mov
movsl
hlt
sbbl
cmp
repnz
mov
jmp
push
mov
dec
and
push
cmp
inc
testl
sahf
inc
xor
push
mov
pushf
repnz
in
in
cmp
sbb
lods
pop
pop
add
add
rep
mov
fnstcw
mov
dec
jg
faddl
add
mov
ds
in
sbb
mov
movsl
xor
xchg
xor
ret
int
add
jmp
sub
nop
mov
scas
jge
test
add
cmp
cs
out
mov
adc
mov
push
dec
ret
xor
lcall
dec
sbb
in
in
lahf
xor
stc
subb
mov
jl
adc
sti
mov
inc
or
push
in
mov
inc
clc
jge
mov
inc
frstor
adc
nop
mov
cld
imul
xor
mov
inc
scas
xor
pop
push
or
test
jne
xor
xchg
mov
jecxz
aas
stc
je
add
mov
stc
outsb
fcoml
aad
in
ret
movsl
lret
dec
sbb
negl
stc
jae
xchg
popa
xlat
adcl
mov
popl
pushf
out
stos
in
adc
hlt
jg
outsb
gs
mov
int
dec
jp
mov
or
xor
jno
xchg
aad
push
sub
fsubl
pop
in
rcll
jno
shll
sub
push
cwtl
xchg
dec
ss
jae
and
ret
push
les
jns
and
cmpb
xchg
sbbb
cli
mov
call
or
mov
sub
mov
or
mov
lcall
mov
shll
and
call
insl
lret
mov
cmpsb
in
mov
ret
xchg
push
sbb
std
dec
jb
push
mov
cld
jg
jmp
jae
scas
cmc
inc
in
mov
xor
mov
mov
aaa
add
lds
mov
push
in
inc
subl
or
inc
sub
sar
cmp
aas
call
push
adc
in
jmp
adc
sarl
das
sbb
jne
push
fwait
sarl
xchg
rorl
int3
imul
pop
leave
pop
dec
inc
inc
stos
mov
ds
xchg
pop
xchg
dec
sub
or
cmp
or
adc
or
mov
rclb
xlat
sub
add
out
sub
cs
and
cld
aaa
ljmp
sbb
mov
clc
cmpsl
mov
sbb
shll
out
dec
mov
arpl
scas
jl
jns
in
test
adc
repz
cltd
in
ljmp
adcb
lea
cmpsl
std
jns
push
xor
das
addr16
fwait
int
std
add
sub
lock
lods
hlt
add
insb
decl
mov
inc
cmpsb
mov
lea
cmp
pop
xchg
out
cmp
cpuid
and
or
insb
imul
push
push
out
pop
push
or
jge
bound
sub
decb
out
jp
cmp
dec
sbb
sub
cmp
fsubl
mov
sbb
jbe
sahf
je
xchg
jno
fisubrl
jge
or
mov
push
dec
test
stos
subl
jne
movq
mov
cltd
cmp
repz
sbb
adc
fldenv
xchg
jecxz
out
jle
out
aad
loop
daa
popf
notl
repz
cmp
js
in
std
mov
add
es
enter
jecxz
mov
mov
push
sub
ret
xchg
rorl
lods
sbb
dec
jnp
push
sub
aad
popa
and
xchg
popf
sub
pop
incl
sbb
jl
and
daa
pop
cmp
mov
daa
int3
add
sub
movsb
aaa
pushf
jo
jp
ret
or
cmp
ds
cmp
sbb
jns
test
and
or
jmp
sbb
inc
out
xchg
loop
lods
loope
rclb
std
stos
aas
bnd
dec
sbb
pop
cltd
andb
out
or
inc
pop
push
jmp
xor
ror
inc
mov
gs
movsb
test
add
cmp
out
lret
arpl
ja
or
loopne
mov
cmp
pop
adc
lods
fistpll
std
add
popf
pop
push
aad
fwait
insb
rcrl
xchg
add
mov
xor
andb
cmpsb
pop
mov
xor
sbb
daa
pop
fiaddl
sub
cmp
js
pop
push
lahf
cltd
andb
jle
mov
push
dec
rcr
and
les
xchg
sbb
shlb
fbld
ret
sbb
and
dec
adc
mov
adc
jb
clc
mov
loopne
cmpsl
in
cmp
mov
pop
es
fisubrl
mov
imul
stc
mov
jmp
jo
dec
into
out
sar
ljmp
mov
and
mov
in
fwait
into
jp
nop
sub
loopne
add
mov
hlt
cld
fistpll
sahf
adc
ja
or
push
pop
mov
dec
aaa
cmp
pop
xchg
xor
pinsrw
jns
cmp
mov
shrl
inc
or
adc
sub
xor
push
out
mov
inc
mov
pop
movsb
repnz
jnp
loopne
dec
out
sub
add
lahf
cmpsl
add
mov
jnp
xor
mov
mov
movsl
imul
cmp
cmp
mov
les
adc
adc
repnz
aam
rorb
cmp
mov
incl
mov
gs
xchg
and
dec
jns
cmp
jnp
add
dec
pop
dec
xor
xchg
sbb
sub
xor
leave
or
popf
insl
fdivr
xor
jge
repnz
cmp
add
lea
std
cmp
fnsave
icebp
push
jmp
out
add
pop
out
xchg
cmp
testl
and
jo
ja
mov
xlat
aad
mov
in
test
sarl
and
js
sbb
cwtl
push
xchg
sbb
dec
dec
mov
add
mov
stos
adc
mov
popa
inc
add
or
mov
xor
mov
jl
xchg
push
inc
pop
adc
mov
push
sbb
or
push
pop
and
lret
push
and
sti
or
outsb
mov
ficoml
and
ljmp
sub
lcall
mov
insb
negl
mov
jne
sub
insl
fidivl
das
adcl
out
mov
test
es
rclb
and
aam
mov
incb
cwtl
mov
xor
jbe
jae
push
test
clc
lcall
lea
lock
dec
jne
nop
outsl
clc
adcb
nop
cmp
and
or
jg
pushf
add
pop
pushf
ret
push
and
imul
dec
pop
xchg
dec
scas
xor
jbe
add
dec
cltd
cmp
mov
sub
push
lret
sub
mov
insl
push
mov
inc
in
sbb
mov
ret
lret
cmp
ret
mov
hlt
jae
popa
xchg
jne
push
jp
dec
push
xchg
adc
mov
sub
stos
leave
nop
lods
shrb
cli
push
add
mov
popa
mov
into
out
xor
lock
call
pop
outsl
sbb
mov
push
sub
orl
jg
pop
mov
arpl
push
jge
sti
subb
cmc
mov
push
push
xor
nop
loop
stos
sbb
lcall
mov
punpckhbw
lcall
dec
jle
adc
popf
scas
orb
jecxz
loop
push
jo
sbb
lods
mov
inc
or
pop
outsb
inc
sbb
mov
add
out
outsl
shl
inc
and
js
cli
nop
lds
mov
pushf
rcrl
and
lret
cld
lahf
stc
bnd
shrb
in
mov
xchg
insb
fisubrs
int3
inc
std
shrl
xchg
in
cwtl
push
into
push
pop
jb
ficoml
jae
jnp
push
xlat
pop
int
pop
inc
lds
pop
das
popf
jnp
repz
out
loope
mov
dec
je
outsb
lods
stos
mov
mov
push
repz
nop
xor
sahf
cltd
pop
lods
or
or
hlt
cmp
xchg
and
sub
or
mov
mov
js
mov
adc
sbb
or
sbb
sbb
xchg
in
add
push
adc
outsb
add
jecxz
jno
xchg
mov
pop
js
dec
stc
pop
roll
bound
mov
lock
lods
add
inc
mov
bound
gs
mov
sahf
adc
fcoml
shll
sbb
loopne
mov
jl
ja
lods
push
jle
pop
insl
inc
int
sbb
das
test
ljmp
cs
ss
mov
and
adc
mov
dec
arpl
or
sub
cmpsl
or
and
adc
lock
popf
jno
jo
test
fldl
xor
das
lret
fimuls
fiaddl
in
xchg
outsl
daa
ror
or
add
mov
popa
mov
fdivrs
or
and
xchg
jle
dec
adc
in
pop
out
mov
inc
inc
lock
popa
push
rorb
orl
inc
rol
cmp
mov
pop
rcrb
test
add
aam
nop
aaa
xor
lods
xorb
cld
cwtl
imul
cmpsb
scas
shll
push
std
jmp
jo
jp
pop
pusha
xchg
jae
push
inc
xor
daa
sbb
sbb
push
cmp
mov
mov
sbb
test
add
data16
mov
push
adc
add
xor
fwait
mov
scas
pusha
mov
notl
into
int3
scas
ds
jp
sbb
pop
mov
adc
pop
insl
xlat
inc
insb
notl
repz
fmull
lds
push
xor
inc
cli
ja
stos
mov
mov
sub
dec
mov
lret
and
adc
adc
or
mov
loop
jnp
sbb
push
pop
andb
int3
sub
cmp
jmp
pop
add
test
daa
sub
jge
fldenv
push
movsb
add
bound
add
popa
mov
vpunpckhdq
sub
bound
out
aad
or
fisubl
push
mov
xchg
dec
mov
mov
movsb
out
scas
cmpsb
mov
repz
pop
negb
popf
lods
jmp
xor
sbb
pusha
xacquire
mov
mov
or
scas
sbb
lods
or
cmc
sbb
mov
xlat
mov
scas
idivb
dec
lods
and
shll
ret
push
add
sbb
inc
rol
adc
and
das
jo
test
adc
subb
push
test
mov
inc
sbb
aas
movsb
gs
mov
dec
pushf
stos
shll
cmp
mov
addl
scas
ret
lods
cmp
fisubs
cmp
or
fiaddl
stc
cmp
sbb
push
rcll
insl
pop
fnstcw
xchg
loop
cmp
lret
fdivrl
stos
or
cmp
xor
aaa
cli
cld
pop
mov
fisttps
popa
or
mov
js
push
fstps
jge
sbb
inc
jo
mov
lret
bound
and
jp
ret
icebp
inc
mov
or
mov
cmp
push
popa
out
mov
ja
pop
imul
out
mov
inc
add
sbb
xor
inc
dec
cld
incl
cmp
push
loopne
call
push
cs
push
mov
lods
pop
cmpsb
clc
pop
mov
add
fucom
addr16
jge
loope
push
out
cmp
fildll
push
shlb
addl
lds
jle
add
adcb
sbb
insl
inc
fsubs
pop
push
shlb
repz
fdivs
and
leave
lock
jnp
inc
testl
jb
and
jnp
sub
pop
lret
out
pop
popa
xchg
and
xchg
sub
ja
enter
cltd
incl
fdiv
int
test
lret
sbb
xchg
push
clc
mov
push
and
lcall
movsl
jmp
pop
lods
rcrl
xchg
mov
fildl
loopne
mov
outsb
popf
pop
jge
add
dec
ret
pop
cmc
inc
mov
call
pop
xor
incl
into
imul
xchg
mov
inc
cmp
jbe
pop
fnstcw
sbb
stos
mov
or
push
negl
mov
leave
sbb
sbb
lahf
dec
popf
jae
in
cltd
scas
fadd
push
pop
cmc
jmp
enter
push
addr16
sub
xlat
mov
outsl
pop
arpl
xor
pop
repnz
push
and
scas
jae
pop
dec
pop
in
mov
mov
ds
std
in
push
lods
cmp
sbb
xor
push
fdivrl
int
int3
sub
ret
cwtl
mov
cmp
rorl
pop
fld
push
pop
push
popf
aad
push
aaa
imul
xor
or
add
aas
dec
push
out
mov
mov
int
cs
xlat
test
adc
add
jmp
cmc
mov
jmp
les
mov
push
shrl
outsb
clc
mov
mov
add
sbb
push
dec
sub
mov
dec
xchg
jne
fmulp
sbb
jp
push
daa
pop
xor
mov
imul
rolb
pop
xchg
mov
and
push
stc
dec
cmc
std
stos
jmp
jns
insb
outsb
or
push
sub
ss
in
cmp
daa
rcrl
aad
pop
jb
and
loopne
imul
rsm
mov
xchg
cltd
jo
xchg
cmp
jge
les
test
jecxz
mov
dec
ss
mov
push
sbb
outsb
adc
jne
int
push
adc
out
out
pop
loop
or
jge
mov
adc
mov
in
pop
jg
clc
push
data16
mov
xchg
pop
jns
xor
cmp
clc
jb
fbld
roll
mov
in
push
jmp
xchg
add
test
unpckhps
cwtl
sub
add
cmpsl
jb
test
lea
cwtl
push
pop
mov
push
mov
insl
push
outsb
loope
jb
out
jae
cmp
mov
cmp
hlt
sti
pop
sti
adc
mov
adc
sbb
sbb
pusha
je
jne
ljmp
cmp
hlt
arpl
mov
sub
mov
rcl
repnz
cs
jne
sub
or
fs
aaa
repz
lock
dec
sbb
mov
pop
fwait
push
lea
pushf
push
adc
pop
push
pop
jle
data16
mov
dec
mov
data16
mov
add
lods
mov
fistpll
test
lds
sbb
sbb
pop
cmp
or
andb
aam
mov
jae
cmp
jecxz
stc
sub
fcmovb
lret
push
scas
fimull
and
push
icebp
jns
les
adc
jb
out
xchg
push
outsb
xchg
insl
cmpb
pop
insb
cmp
jle
adc
cld
add
push
mov
lret
fsub
adc
or
mov
add
cmc
inc
aam
push
dec
nop
shl
nop
lds
sbb
imul
or
adc
mov
test
test
in
push
cmpsl
nop
test
pavgw
mov
pusha
loopne
clc
and
pop
outsl
jecxz
addb
jmp
xchg
xor
movsb
push
push
xlat
add
add
aad
cwtl
cmp
cmp
jns
sbb
inc
test
fnsave
out
call
xchg
adc
lret
movsl
jb
push
jns
and
dec
sub
and
inc
sub
or
fwait
ret
xor
add
movsl
push
sbb
cmpsb
stc
dec
fidivrl
add
xorb
jge
dec
xor
enter
dec
push
or
push
pop
in
fcomps
fwait
popf
cmc
pop
xlat
jp
add
lock
shr
cwtl
jb
jp
mov
outsb
sar
addr16
inc
or
int3
xchg
cmp
in
cltd
test
or
dec
jbe
mov
ret
call
stos
imul
decb
sub
cs
lret
std
jo
sbb
jae
lods
sahf
incl
not
call
sbbl
clc
shll
movsl
pop
mov
lods
insb
mov
pop
mov
fnstenv
pop
ljmp
push
mov
hlt
mov
inc
imul
int3
adc
lret
repnz
xorl
cmc
andb
inc
mov
imul
out
aaa
mov
push
in
or
or
lret
ja
jo
in
pop
jmp
pop
fs
xchg
lahf
xchg
xchg
lcall
mov
cwtl
dec
and
shr
incb
outsl
and
sub
mov
imul
cmpsl
test
mov
mov
inc
add
mov
and
sub
push
sbb
dec
and
sti
mov
into
dec
leave
or
xor
leave
insb
pop
pop
push
xchg
xor
mov
mov
mov
mov
push
jns
hlt
xchg
mov
inc
les
and
jg
and
es
sbb
pop
sub
xchg
inc
sbb
popf
int3
dec
push
mov
aam
pusha
mov
xor
push
sub
ret
mov
pop
xor
dec
push
inc
or
xchg
insb
ror
or
mov
sti
data16
dec
xor
es
or
push
xor
icebp
push
sub
fistps
stos
les
xlat
add
xchg
cld
rclb
or
mov
cli
mov
ret
sub
mov
rolb
outsl
sti
push
push
rol
popf
xchg
ja
outsl
lea
dec
cmp
repnz
incl
fwait
cmc
jg
mov
pop
pusha
xor
jno
mov
and
push
bsf
sahf
inc
push
mov
mov
shrb
dec
dec
add
fistl
jecxz
push
ja
add
stos
push
adc
jmp
mov
push
xchg
inc
pop
inc
xchg
hlt
pop
mov
test
insl
xchg
cmpsb
sbb
clc
jecxz
lea
test
and
shl
xor
cltd
cmp
in
mov
sarb
int
sub
loope
mov
xchg
subb
cwtl
jmp
pop
mov
adc
add
push
push
jae
mov
jg
jle
test
je
xchg
dec
push
lret
push
lea
data16
ss
mov
icebp
mov
cmp
xorl
iret
xor
and
and
iret
push
push
sti
xchg
push
add
pop
sub
and
ret
adc
cmp
adc
aas
roll
leave
in
loopne
mov
push
insb
xor
in
push
sbb
jmp
das
incl
jle
pop
mov
les
scas
insl
pop
mov
pop
add
sub
bound
fadds
sti
inc
loopne
fwait
stc
mov
loope
and
sbb
movsb
std
iret
les
decb
sub
sbb
xchg
mov
pop
sub
pop
jle
dec
ja
mov
pop
sub
mov
enter
fisttps
cmpsl
stos
pop
xorb
aam
push
cli
sbb
ror
icebp
out
cmp
add
mov
lds
lahf
push
shr
push
popa
gs
mov
dec
hlt
lret
add
and
xchg
imul
incb
mov
scas
cltd
cmp
in
outsb
xchg
in
cmp
test
cmpsb
aaa
inc
lret
stos
dec
imul
pop
jnp
repnz
loope
data16
sbb
fsubrp
push
pcmpgtd
mov
mov
and
cmp
mov
dec
clc
dec
lret
loop
dec
into
stos
or
das
mov
sbb
sbb
mov
call
ret
andl
and
gs
aam
dec
pop
rcrb
outsl
aaa
pop
icebp
mov
adc
sti
adc
mov
push
cwtl
mov
jns
fstl
inc
xchg
add
push
inc
cwtl
mov
push
cltd
add
stc
mov
xchg
or
dec
jae
fimull
jecxz
mov
jl
ficomps
test
in
fadds
pushf
pushf
add
push
mov
push
dec
xchg
inc
xchg
inc
push
and
xchg
nop
insl
xchg
sub
xor
bound
popf
mov
out
daa
jg
les
mov
fwait
dec
cmp
push
sti
loopne
mov
jmp
in
mov
mov
inc
inc
inc
imul
push
and
xchg
xorb
out
inc
jno
add
clc
decb
cmc
fnstsw
mov
pop
stos
je
mov
out
mov
scas
xchg
js
mov
ror
scas
xor
je
js
push
and
inc
fnsetpm(287
xchg
movsl
adc
popa
cmp
and
pop
repz
mov
inc
icebp
bound
mov
adc
fwait
and
add
add
jl
mov
xor
out
dec
out
mov
fs
test
dec
movl
enter
adc
out
dec
dec
add
lds
xchg
mov
int
mov
scas
push
jg
cs
loop
in
push
out
push
xor
notb
clc
outsl
inc
pop
stos
sarb
push
push
adc
xchg
out
repz
sbb
inc
decl
mov
aam
arpl
pop
dec
lock
jle
mov
ja
cmp
repnz
xlat
in
stc
jo
add
das
inc
es
sbbl
and
and
cmp
in
mov
push
aam
insl
dec
push
inc
arpl
movb
shlb
shrl
add
imul
jp
mov
mov
out
adc
cld
out
pop
mov
aas
divb
jo
cmc
dec
rorb
stos
xor
decl
pop
stc
notl
cs
mov
mov
cmp
ljmp
rcrb
cs
je
cld
outsb
jno
fmuls
sarb
add
shrl
movsb
or
and
mov
push
fwait
jecxz
sahf
sbb
jno
dec
cmpsl
xlat
xor
sahf
cmp
pusha
outsb
and
push
add
arpl
pop
shll
sub
mov
ss
dec
cwtl
clc
aad
or
leave
push
jb
dec
mov
fidivrs
push
lahf
sbb
lea
aam
in
pop
mov
ficoml
sub
movsb
int
cmp
popf
leave
add
cmpl
dec
inc
push
inc
or
gs
cltd
adc
lcall
std
adc
lret
sub
fs
pop
jno
sbb
cmp
shr
push
int
fs
or
xor
fstl
mov
cltd
sub
fwait
icebp
cmpsb
aaa
dec
pushf
mov
scas
sub
sbb
jnp
and
imul
gs
scas
pop
and
rcrb
dec
mov
xchg
shll
outsl
and
xchg
fwait
ret
out
jecxz
cmp
lea
jnp
and
lds
sbb
mov
fdivrl
fwait
fwait
xor
jns
cs
jbe
jp
scas
outsl
dec
jnp
or
repnz
xchg
repz
sbb
pop
dec
daa
xchg
and
add
or
push
ja
scas
mov
cmp
rorb
shrb
push
enter
outsl
sbb
inc
scas
sbb
das
cmp
je
sbb
jge
jmp
lods
sbb
mov
mov
add
mov
scas
push
xchg
cltd
mov
fisttps
mov
or
cmp
cmp
sbb
pop
es
add
gs
sub
jno
mov
test
adc
insb
xchg
jb
jns
add
mov
push
and
lock
dec
sbb
outsl
popf
mov
psrad
divb
mov
sub
mov
jle
fldcw
shrl
jns
loop
adc
pushf
adcl
sbb
xchg
stc
aaa
daa
dec
cld
ljmp
adc
mov
into
xor
xchg
jecxz
ret
mov
xchg
inc
lea
subl
gs
mov
xchg
mov
pop
ljmp
jg
cmp
pop
cmpsl
ret
mov
inc
xlat
pop
outsb
push
leave
sub
mov
pushf
dec
mov
icebp
inc
add
adc
mov
pop
int
xor
shll
add
pop
dec
mov
fwait
jecxz
lret
rolb
test
dec
ss
notl
mov
fistl
arpl
or
enter
jae
test
lret
ljmp
fidivl
cmp
rcll
mov
cmpb
jo
sbb
into
mov
sbb
fincstp
adc
lahf
in
lret
call
fidivrl
jno
cli
sub
mov
mov
das
imul
xor
repnz
push
cmp
test
dec
sbb
lret
pusha
cmpsb
sub
jb
iret
or
cmpsl
aam
xchg
push
sti
lock
flds
inc
lods
aaa
call
clc
aas
add
test
jbe
mov
mov
pop
jnp
dec
inc
pop
push
pop
jbe
ret
jo
jnp
push
mov
xchg
test
insl
or
xor
jno
or
dec
or
jae
lods
mov
outsl
je
ja
xor
scas
xor
mov
xlat
imul
jl
sbb
pop
mov
inc
pop
nop
pop
mov
ds
adc
subl
pusha
jg
mov
es
rcl
dec
imul
cmp
fwait
test
lods
adc
xor
icebp
int3
jle
xchg
inc
or
xchg
pop
gs
test
jl
loope
fcmovnb
mov
dec
pop
ret
mov
scas
dec
cli
lret
sbb
mov
or
outsl
enter
leave
in
cmpsl
stos
repz
mov
xor
xchg
addb
jno
cmpsb
sbb
mov
je
mov
fsubr
std
insb
and
mov
add
popf
pop
sbb
push
mov
pop
jg
loop
mov
popf
mov
adc
data16
icebp
push
movsl
inc
clc
cmp
and
jmp
nop
cld
mov
mov
je
sub
std
scas
imul
sbbb
xor
insl
pop
ljmp
std
fwait
xor
sub
mov
add
je
dec
add
lsl
pop
cli
pop
adc
int3
adc
mov
mov
mov
loop
les
ss
in
test
inc
and
aad
jns
push
dec
sub
dec
int3
push
add
test
sarb
mov
int3
mov
ficoms
sbb
pop
leave
xchg
mov
xchg
in
cmp
dec
pop
out
cli
xchg
jl
call
add
ffreep
jle
xor
icebp
hlt
adc
adc
pop
fisubl
cmpsb
fnstsw
iret
call
call
mov
lret
adcl
cltd
loopne
jp
fisttpll
and
out
in
and
pop
mov
jl
aaa
popa
sub
inc
cmp
enter
dec
scas
sbb
dec
cmp
aaa
sbbl
and
pop
ja
xchg
subb
cmp
std
popf
je
fadds
mov
lret
push
push
cmp
mov
xor
adcb
out
mov
sti
cmpsb
and
dec
pop
jge,pn
lods
or
int3
fmull
xchg
xor
loope
dec
inc
test
add
icebp
mov
pop
xchg
jo
nop
orl
mov
daa
out
outsl
fcoms
popf
pop
popf
pop
roll
adc
sbb
int
aaa
xor
jg
scas
pop
dec
mov
test
jnp
add
scas
outsl
out
mov
iret
shll
fstp
dec
inc
sbb
jo
leave
sbbl
ja
je
xorb
lahf
dec
cmp
aas
pop
xor
mov
or
cmp
push
pop
jl
pushf
outsl
adc
cmp
popa
imul
outsb
adc
pop
pavgw
and
lds
jb
push
mov
out
jo
dec
mov
inc
fidivrl
icebp
subb
inc
sbb
mov
idivb
mov
xchg
pop
sub
rclb
out
mov
push
and
xor
add
inc
ficoml
or
ret
mov
cmpsl
mov
fwait
add
lods
lods
stos
cltd
dec
or
dec
mov
add
cmp
sbb
cltd
cltd
scas
cmpsl
fcomps
mov
push
lods
stos
popa
cmp
repz
mov
pop
neg
insl
dec
test
rclb
jp
mov
sub
roll
inc
jne
sets
jne
nop
and
pushf
inc
scas
xchg
mov
loope
pop
and
rcrl
cmc
stos
decl
add
xlat
inc
mov
pop
outsb
lret
test
cmp
mov
mov
js
mov
loopne
mov
out
sarl
int3
dec
cmp
add
lods
ss
xlat
ss
cli
and
or
daa
inc
loopne
adc
mov
insb
shlb
pop
jp
or
cmp
xchg
mov
scas
inc
push
inc
push
sub
stc
push
mov
fcoms
inc
gs
loopne
fidivrl
lods
mov
push
icebp
mov
out
in
ret
out
icebp
dec
mov
mov
pop
xchg
xor
arpl
cmp
add
aaa
pushl
push
push
push
mov
movsb
xor
fimull
or
sbb
sub
adc
jnp
pushf
push
iret
mov
fs
xchg
sbb
mov
or
add
push
adc
push
xchg
mov
insb
aam
jle
jmp
cmpsl
dec
mov
mov
loope
jl
aas
cli
adc
add
jae
mov
mov
sbb
mov
jne
mov
mov
sti
sahf
lahf
loope
and
test
les
push
xchg
push
out
xchg
and
cmpsb
testl
cltd
mov
ja
jp
lods
xor
jecxz
mov
jl
mov
push
sub
movb
inc
add
lahf
xor
xor
pop
divb
sub
mov
lret
push
mov
fdivrl
lods
dec
lret
or
notb
pop
bound
and
push
pop
pop
out
enter
push
sub
fildl
repnz
pop
mov
xchg
cmp
and
call
orb
test
pop
fwait
mov
mov
pop
or
push
fisttps
rcl
mov
scas
mov
sub
sbb
addr16
out
and
sbb
fstp
cmp
push
sub
jne
push
push
pop
daa
mov
mov
mov
mov
mov
in
sahf
pop
pop
out
jbe
mov
mov
leave
std
stos
je
add
mov
insl
das
sbb
mov
or
cmp
nop
push
ljmp
daa
js
push
and
aam
sub
ficoml
adc
sbb
out
roll
inc
mov
or
mov
aaa
mov
push
scas
mov
pop
mov
xchg
test
mov
inc
cmp
add
and
popf
data16
pushf
xor
movsl
sub
or
adc
test
mov
push
jle
cmp
call
jecxz
sbb
cmp
test
mov
mov
jmp
ds
fwait
xor
sarb
popf
inc
adc
lret
inc
cmp
test
mov
push
jl
add
push
sbb
jl
xorl
adc
or
call
in
fsub
loope
push
pop
push
pop
jno
xchg
jp
jne
test
push
or
xchg
pop
addb
sub
ljmp
ss
push
mov
jnp
bnd
test
std
aam
mov
rorb
idivl
jae
test
scas
jbe
inc
fisttpll
inc
inc
jo
repnz
sub
arpl
outsb
dec
jo
pop
outsb
dec
imul
sahf
aam
push
out
jb
lret
add
jle
or
cmp
pop
sub
add
loop,pn
sbb
sbbl
stc
and
pop
lcall
mov
mov
insl
adc
jae
nop
jl
sbb
xchg
cmpsb
push
lock
jge
or
test
out
jns
push
adc
out
xlat
pop
mov
ficompl
pop
mov
mov
scas
std
cltd
and
shrb
dec
mov
pop
adc
mov
push
repnz
imul
enter
push
ja
enter
stos
lock
stc
push
xlat
je
pop
int
mov
iret
cs
stos
aad
mov
add
pop
loope
insl
add
orl
iret
scas
nop
fwait
int
jne
dec
test
mull
es
adc
repz
inc
faddl
cmp
xlat
test
cltd
jns
dec
popa
xchg
sub
sbb
shlb
lea
or
lcall
cmpsb
popf
popa
imul
sbb
inc
pop
stc
push
push
insl
rorb
cli
jno
sub
lock
cmp
enter
xchg
sub
pop
leave
jne
jmp
lea
outsl
aad
cmpsl
mov
add
sbb
push
or
sbb
adc
push
dec
lret
leave
aad
push
loope
push
pop
out
push
imul
pop
push
dec
int
mov
decb
xchg
sub
push
movsl
dec
pop
mov
jge
cmpsl
in
xchg
xchg
jmp
movsl
adc
pop
jmp
outsl
xor
jmp
mov
mov
out
cmc
lret
mov
xchg
cmp
cmpsl
ret
out
jge
inc
and
jb
rcrl
mov
icebp
add
push
pop
test
repz
scas
cmc
cmp
sbb
mov
lods
xlat
pop
repz
out
jmp
leave
jle
lods
filds
dec
pop
std
mov
leave
fcomp
cmpsl
and
xor
imulb
pop
jge
gs
sbb
std
int
jbe
mov
cmc
sbb
sbbb
pop
repz
pop
fldcw
inc
push
mov
das
cmpsl
xchg
ret
and
jbe
adc
loope
sbb
xchg
inc
mov
add
and
jo
scas
fistpll
jle
movsb
push
fcoms
idivl
shlb
push
incb
cmp
mov
dec
push
mov
shrb
xor
mov
test
scas
sub
add
jbe
mov
or
shrl
sub
adc
lds
pop
test
mov
mov
xchg
aaa
sbb
ljmp
dec
in
push
sbb
repz
stos
sub
fmul
fidivl
mov
mov
pop
jmp
push
addr16
lds
lret
scas
cmp
arpl
and
xor
in
sbb
pushf
test
sub
sbb
jbe
dec
adc
add
leave
add
push
icebp
imul
scas
jb
adc
xor
cmpsb
inc
call
mov
sub
or
pop
nop
mov
cmp
mov
shll
cmp
pushf
jne
nop
ss
jne
lahf
jg
sahf
stos
ljmp
outsb
pusha
test
mov
mov
pushf
push
inc
xchg
dec
push
in
mov
int
mov
add
movsl
mov
ja
sbb
cmpsb
in
ss
dec
and
mov
loop
fcos
gs
sbb
cwtl
mov
inc
out
mov
cmp
hlt
ljmp
dec
ss
jns
and
pop
es
stos
xchg
add
repnz
shr
rcl
lret
jle
stc
adc
fmulp
add
addb
pop
and
movb
mov
and
js
mov
inc
xor
stos
cmp
adc
into
xchg
push
out
adc
push
out
dec
mov
mov
sbb
or
adc
std
fcoml
mov
adc
in
mov
daa
mov
xchg
ficoms
inc
push
aaa
ds
outsb
imul
sbb
inc
out
sub
push
mov
xchg
xchg
mov
fisubrl
in
test
bound
iret
aaa
add
data16
pop
repz
repnz
mov
push
test
mov
sbb
and
out
mov
push
je
add
nop
sbbl
shl
lahf
sahf
add
pop
rcrb
into
jmp
aas
dec
insl
gs
outsb
jecxz
hlt
test
fsubrl
pop
lock
inc
inc
mov
iret
enter
pop
mov
mov
sahf
push
fists
in
mov
cmp
dec
pop
xchg
aam
mov
mov
and
sarb
mov
xor
xchg
dec
jb
pop
mov
ljmp
jbe
pop
data16
cmp
xchg
cltd
dec
popl
cmpsl
xchg
scas
push
stos
xchg
mov
push
popa
stos
pop
xchg
fwait
aaa
sbb
ret
xchg
dec
ds
int
push
cs
imul
gs
mov
sahf
and
lods
ret
xchg
repz
insl
jl
sbb
pusha
lea
xchg
mov
shll
mov
xchg
or
fidivrs
adc
push
pop
ljmp
mov
pushf
scas
mov
push
xchg
inc
std
pop
test
and
push
jnp
fbstp
icebp
das
cwtl
mov
movsl
xor
add
xchg
cli
test
loope
push
clc
jbe
jecxz
insl
xchg
mov
cmp
fucom
pop
stos
cmpb
dec
push
loop
adc
push
sbb
add
cmp
jp
call
enter
dec
pop
ljmp
adc
and
fnstsw
inc
pop
mov
or
mov
sbb
call
pushf
push
outsl
xchg
mov
test
add
popa
stos
push
inc
xor
or
add
xchg
ret
dec
in
cmpsl
cmpsb
test
xor
cmp
inc
pop
mov
push
mov
mov
sbb
repnz
inc
outsb
pop
lods
xchg
cwtl
lcall
ja
xor
in
sbb
add
xor
push
or
cwtl
cmp
stos
scas
adc
repnz
fwait
dec
mov
dec
jae
xchg
out
inc
ja
xor
mov
jge
adc
mov
mov
roll
mov
dec
ret
xchg
repnz
mov
xchg
aas
outsb
adc
sarl
loopne
fisubrs
popa
dec
or
push
ret
test
push
fs
cmp
dec
or
dec
cmpsb
add
std
mov
arpl
pop
and
pop
cmp
mov
sahf
mov
mov
je
xchg
or
pop
sbb
insl
test
and
mov
fbstp
cmpsl
xchg
mov
and
sub
cli
in
nop
insl
push
sbb
pop
aad
fcomps
pop
leave
sbb
pop
add
mov
pop
fdivs
dec
repnz
or
sbb
movsb
xor
inc
not
push
xchg
js
and
iret
fmull
test
adc
rcrb
fstps
sbb
shlb
test
or
lea
jbe
jle
idiv
test
mov
cmp
daa
jo
jg
std
xor
push
dec
push
add
in
mov
cmp
mov
mov
leave
cmp
push
insl
mov
mov
in
cmp
int3
gs
pop
addr16
sti
daa
pop
jo
rolb
mov
cmp
lds
out
test
in
xor
movsb
mov
push
rcrl
loopne
imul
dec
jne
xorb
nop
pop
les
fisttpl
mov
xchg
es
sti
sub
mov
lods
or
popf
stos
jg
dec
pop
dec
imul
inc
fdivl
es
test
setns
xchg
jno
loopne
jnp
mov
add
sarl
int
mov
cltd
cmp
sti
mov
pop
push
shr
and
inc
test
add
cltd
xlat
out
lea
inc
int3
or
sahf
out
movsb
mov
in
cmp
sbb
roll
addr16
rorb
inc
outsl
decb
jmp
push
pop
sbb
fidivrl
xlat
aas
outsl
add
ljmp
ja
adc
mov
pop
or
mov
cmp
xor
xor
popf
pushf
lea
movsl
aas
mov
mov
lock
rcrl
fidivs
sbb
mov
fsub
inc
fs
in
cs
pop
std
sbb
inc
pop
lret
add
add
mov
jmp
mov
rol
in
stos
cmpl
xor
mov
cmp
push
pop
mov
sub
sbb
fmull
xchg
sbb
fcomps
push
and
mov
mov
addr16
inc
shll
movsb
jle
pop
lret
cwtl
push
ret
fwait
push
jmp
arpl
cld
pop
adcl
or
adcl
btsl
and
push
adc
xchg
push
jecxz
xchg
popf
mov
add
jno
or
and
push
in
imul
fst
outsb
cmp
or
cmp
les
and
inc
rcl
scas
cmc
ss
or
fwait
sub
inc
xor
lret
test
js
fstpl
fwait
test
daa
xchg
mov
xchg
pop
cmp
mov
shl
aas
add
fs
fcoms
add
jo
movsw
cmp
push
ja
aam
jnp
cmp
in
sub
int3
jne
daa
addr16
mov
in
jmp
ret
jne
adc
scas
or
push
fcoms
icebp
insb
bound
mov
repnz
inc
test
test
cmp
push
pop
mov
loopne
cmp
push
ret
inc
lock
or
iret
jns
jmp
pop
aad
andb
ret
lea
or
and
sub
push
cli
mov
xor
push
out
xchg
push
pop
jb
sbb
pusha
je
mov
cmp
in
lock
inc
lods
lcall
mov
and
loop
jae
mov
or
inc
pop
push
push
pusha
mov
mov
sbb
imul
scas
ss
insl
xor
mov
je
movsl
inc
test
jcxz
repz
ljmp
fistps
lahf
push
xlat
cld
xchg
push
pop
mov
inc
ds
out
mov
mov
mov
cmp
in
dec
jns
mov
scas
out
stos
ljmp
leave
or
cmp
adc
scas
xchg
mov
sbbb
push
adc
leave
dec
daa
test
in
js
xor
pop
push
xchg
jecxz,pt
into
popf
push
sbb
dec
sbb
jmp
xchg
dec
sbb
cmp
cmc
jae
jge
iret
inc
lock
sbb
jg
loope
lods
ficoml
addl
in
push
in
xor
push
test
cs
mov
imul
mov
stos
cli
fdiv
sbb
sub
mov
cmpsb
andl
int3
lahf
pop
pop
gs
lahf
cmp
test
fsubrs
aad
mov
mov
movsl
and
outsb
add
daa
push
pop
scas
out
sarb
loopew
inc
shrb
sub
roll
mov
inc
jae
push
mov
or
xchg
mov
aad
xchg
push
lcall
adc
xor
mov
ficoml
daa
aaa
xorb
mov
adc
addr16
sbb
jb
sub
push
jecxz
movl
inc
xor
mov
mov
add
dec
xor
xchg
icebp
or
push
mov
test
sub
ret
ret
insl
pusha
push
push
jle
pop
out
xchg
jp
cmpsl
and
sub
cmc
test
cmc
xchg
cmp
out
sub
xchg
sahf
push
xchg
fimull
sahf
in
push
inc
jbe
das
xor
or
dec
cmpsb
inc
add
dec
int3
test
ret
stc
xchg
or
arpl
negl
pusha
or
data16
dec
stos
test
push
cmpsl
dec
push
cwtl
or
pop
mov
cmpsl
cmp
and
jb
int
sbb
sub
jae
jnp
lock
adcl
jne
insb
popf
cmp
jns
mov
addr16
cli
cmp
ret
ds
cltd
jb
in
movsl
ds
xor
and
adc
jle
inc
xor
mov
shrl
ja
cmp
push
pop
call
neg
movsb
ret
and
push
lods
inc
ret
aad
jae
lea
sti
or
lret
dec
inc
sub
push
movsl
imulb
lret
ja
int3
jo
aas
pop
sbb
ret
adc
jge
lods
adc
rcl
mov
fistpl
mov
pop
push
iret
or
movsb
gs
adc
fistps
jb
jmp
mov
or
xor
sti
mov
imul
test
cmc
addl
xchg
sub
mov
and
mov
insl
test
test
mov
add
je
pop
sub
mov
adc
insl
aas
out
ret
addr16
es
mov
mov
fcoml
mov
or
mov
or
sbb
jno
pop
push
or
sbb
cmp
repnz
push
cmpsl
cmp
leave
andb
xor
push
or
jb
jle
cmp
inc
jle
cmpb
dec
mov
pop
mov
dec
adc
adc
or
inc
mov
insb
dec
mov
sub
arpl
aas
jae
fadds
pop
in
and
fdivrs
movsb
push
icebp
xchg
sbb
insb
movsb
adc
sbb
mov
addb
mov
add
push
shll
mov
mov
pop
mov
sub
sbb
pop
dec
rcrb
loopne
mov
push
sbb
and
mov
jecxz
scas
ljmp
xchg
and
loop
cs
test
mov
add
popf
das
fcmovne
inc
das
nop
dec
lret
fwait
mov
sub
lcall
imul
mov
imul
mov
daa
jg
fwait
and
dec
sti
loop
cmc
aad
mov
cmp
sub
add
loope
mov
cs
xchg
xchg
and
outsl
mov
hlt
sub
mov
pop
xchg
sub
decl
iret
xchg
repnz
fucomi
repz
push
dec
jnp
clc
mov
cmpl
xor
jb
enter
dec
mov
out
pushf
cwtl
push
mov
sub
popa
pop
cmp
addr16
gs
xor
pop
dec
xchg
mov
shrl
mov
addb
xchg
lret
mov
aad
or
xlat
daa
mov
call
xchg
push
sub
push
pop
lods
movsb
xor
jns
mov
clc
in
push
sahf
mov
ret
jns
in
jp
jae
mov
test
int3
fistpll
sahf
js
outsl
lret
inc
lret
jo
pop
push
gs
fdiv
sbb
jnp
xor
fsubl
pop
and
mov
sbb
cmp
mov
test
cmc
in
add
popa
add
dec
lock
out
adc
into
add
mov
mov
pop
lock
sbbl
push
sub
insb
aam
cmp
or
xor
or
out
mov
adc
fwait
or
ja
xchg
adc
adc
int3
dec
fstl
add
xchg
jge
cmp
fldt
xor
ja
pusha
xorb
and
mov
out
scas
xchg
addr16
lods
sti
mov
mov
sub
mov
icebp
adc
ret
call
pop
pop
jg
add
insl
fsub
enter
mov
and
pop
jno
cmpsb
out
xchg
sbb
add
push
mov
push
stos
jae
cli
gs
cmp
scas
push
or
int
ss
mov
cmpsl
andb
fwait
push
pop
fnstsw
add
outsl
mov
mov
mov
xor
mov
out
call
jb
daa
or
pop
out
not
cs
sbb
mov
cmp
mov
jo
scas
insb
push
add
enter
add
sahf
enter
ret
and
subb
push
mov
insl
sbb
int3
lahf
dec
iret
pop
and
dec
ja
clc
xor
adc
push
mov
jl
sbb
push
scas
dec
test
inc
loopne
inc
arpl
icebp
out
jge
enter
xor
xchg
or
xchg
adc
lcall
sbb
sbb
mov
mov
cmp
pop
and
push
pop
mov
aas
mov
xchg
ja
dec
xor
out
nop
and
add
and
insl
data16
outsl
jp
sti
push
icebp
aad
repz
nop
faddl
mov
inc
jg
bound
inc
insl
fnsave
xchg
aad
jle
imul
dec
mov
xlat
mov
or
sub
push
mov
mov
mov
xlat
js
stc
addr16
ljmp
xor
fidivrl
sub
xorb
jp
xor
jg
lock
ja
xchg
pop
aas
sub
add
js
int3
cmp
outsl
mov
pop
cwtl
xor
xchg
dec
out
test
adc
or
clc
sbb
xchg
cs
aaa
aas
sub
addb
sbb
xlat
adc
mov
pop
push
adc
shrl
jo
inc
mul
cmp
pop
loop
mov
rcll
adc
shlb
fidivl
xchg
cmp
push
inc
movsb
or
jo
lret
popf
pop
mov
xor
xor
out
enter
movsb
imulb
lret
sahf
push
ss
pop
dec
lea
xlat
and
cmp
in
ja
iret
push
mov
xchg
fldcw
fcmove
add
cli
sbb
cltd
or
and
scas
sub
jne
cmpsb
push
lret
sub
mov
aas
or
cmp
fimuls
and
mov
or
enter
sbb
rclb
jnp
cwtl
out
inc
jno
adc
pop
clc
lcall
loopne
lcall
test
call
arpl
movsl
and
test
xor
adc
xor
dec
and
cmp
mov
scas
jo
mov
out
xchg
js
loopne
fcoms
sub
movsl
sbb
adc
dec
mov
xchg
fsubr
movsl
mov
mov
mov
lret
es
inc
pop
mov
repz
xlat
sub
mov
enter
hlt
or
les
dec
cmp
fmul
rcrb
add
nop
imul
sub
aad
aas
in
aam
sub
or
mov
enter
adc
lcall
lods
jecxz
stos
push
dec
out
jae
xor
fcoms
stos
movsb
shl
sub
cli
lods
es
out
ss
jg
test
aad
outsl
mov
js
inc
ret
xchg
int
mov
xchg
fisttpl
clc
iret
fsubrl
cmp
mov
push
testb
ds
repz
push
popf
cmp
sahf
xor
outsl
cs
mov
inc
mov
jae
xchg
ret
sub
sub
push
and
push
arpl
imul
or
daa
push
cld
mov
sahf
ds
xorl
and
cmp
andl
jnp
test
and
cmc
and
fs
jns
scas
out
xlat
cli
and
mov
test
rcr
dec
mov
dec
mov
add
repz
mov
jae
ljmp
or
hlt
push
cmc
and
imul
inc
xor
movsb
pushf
sti
or
sub
cmpsl
or
jne
sub
mov
dec
adc
sbb
loope
sti
adc
jle
and
inc
hlt
adc
int
mov
hlt
mov
in
sub
dec
mov
push
mov
nop
lcall
call
cs
insl
jle
add
sub
jle
jne
call
mov
sub
lret
sti
lahf
dec
ret
sub
push
or
es
ljmp
or
mov
cmp
outsb
pop
aaa
push
xor
push
hlt
scas
sti
in
push
out
cli
mov
leave
andb
jecxz
lcall
loope
rorb
cmpsb
mov
cmpsl
icebp
push
add
jnp
aaa
loop
rcrb
adc
xor
push
frstor
fmuls
dec
sahf
and
push
cmp
aam
dec
pop
loope
mov
rorl
in
das
test
lret
push
cmp
push
mov
jmp
call
sub
sahf
adc
sub
push
imul
cwtl
jg
ljmp
roll
test
xchg
xchg
lcall
jmp
test
jo
push
mov
icebp
inc
adc
cmpsl
inc
mov
push
jbe
fiadds
insl
jg
rcll
mov
fwait
pop
mov
adcb
cmpsb
dec
adc
push
adc
in
fdivl
xchg
btr
cli
and
adc
stc
sub
leave
out
mov
pop
movsl
push
jns
sahf
xor
jns
rol
aaa
aas
add
sti
fisttps
xor
pop
idiv
sbb
pushf
cmp
or
hlt
cmp
js
ret
adc
mov
aad
dec
mov
or
dec
mov
dec
cwtl
out
sbb
jne
cmp
jg
push
xchg
jae
or
popa
dec
pop
popa
stos
test
mov
inc
mov
cmp
ljmp
jp
lds
shll
pop
cli
data16
pop
aas
int3
lds
int
push
jecxz
mov
adc
inc
cmpsb
outsb
dec
mov
clc
cmpsl
jnp
orl
sbb
xor
jmp
xchg
aas
pop
and
lcall
rorb
jbe
xor
or
dec
lahf
sbb
insl
fnstcw
xor
pop
jge
dec
push
push
pop
aad
pop
jge
fcompl
mov
adc
push
dec
jo
xchg
out
add
mov
xchg
pop
dec
out
popa
sub
daa
dec
sub
pop
adc
pop
xchg
call
stos
sub
cmp
fcmovne
mov
in
cmp
dec
sbb
mov
dec
and
and
cmpsb
rorl
sti
je
push
test
cmpsl
sbb
pop
jmp
pop
add
sbb
xchg
in
subl
adc
shlb
push
mov
mov
jg
movsl
nop
sbbl
outsb
xchg
cmp
or
rolb
rol
inc
sarl
je
lock
push
outsl
or
sbb
adc
adc
incl
mov
xor
jl
cwtl
push
flds
test
aam
dec
pop
sbb
icebp
jg
out
mov
pop
cli
imul
mov
or
push
pusha
sbb
std
mov
jns
push
add
daa
roll
mov
add
addr16
mov
mov
jno
xchg
dec
xchg
pop
mov
outsl
sub
jmp
sbb
and
cmp
xlat
cs
mov
psrad
and
push
xchg
and
fmull
xchg
cmp
icebp
sbb
xorl
mov
push
fcoms
and
xchg
mov
push
xchg
mov
ja
aad
cmp
fucomp
sahf
shlb
push
adc
mov
leave
inc
stc
adc
adc
sbb
sbb
push
mov
in
popa
sarl
cmp
mov
jp
push
inc
dec
dec
sahf
push
cmp
lods
cld
ret
add
mov
xchg
jge
add
imul
ror
sub
push
gs
push
push
and
xor
mov
int3
push
orl
sqrtps
lock
popa
add
push
dec
xor
and
pop
or
dec
or
jns
imul
jmp
pop
inc
fst
lods
dec
xchg
int
xchg
jle
das
addl
inc
leave
xchg
scas
add
in
cmp
stos
inc
xor
out
mov
dec
cmc
shrb
xor
pop
out
xchg
xchg
adc
cmp
jmp
pushf
cmp
xchg
xchg
ja
out
xchg
fcomp
aas
int3
inc
xchg
add
pushf
xchg
sub
hlt
cmp
ja
xchg
jae
lsl
sti
sub
jne
fwait
movsb
jnp
movsl
sub
dec
xor
scas
imul
add
popa
and
xchg
out
dec
jmp
jb
inc
add
fstl
push
cmpsl
stc
and
aas
sahf
scas
inc
sbb
xchg
in
shlb
push
scas
inc
int3
cltd
in
rclb
stos
sti
adc
adc
fs
ret
testl
scas
sub
aam
cmpsb
das
jnp
out
mov
push
popa
sbb
xchg
hlt
mov
add
mov
and
mov
data16
pop
mov
negb
andl
and
test
sarb
mov
mov
ret
es
inc
scas
push
incb
and
rcll
xchg
jge
push
sub
faddl
clc
shrb
jl
popf
test
lret
mov
daa
xor
mov
inc
mov
cwtl
adc
pop
fsubrl
bnd
mov
or
fildll
jbe
fstl
fisttps
pop
popa
out
xchg
fsubrs
jecxz
cld
fsubs
dec
addr16
movsl
and
xchg
jbe
cmpsb
mov
fildll
mov
jo
andl
lods
and
stos
ss
jns
lods
dec
cmp
bound
les
movsl
aam
pop
adc
clc
ja
add
in
xor
add
push
or
imul
ljmp
mov
addl
xchg
push
mov
add
js
sub
push
add
dec
mov
je
mov
daa
orl
in
jnp
push
push
xchg
fwait
lods
mov
testl
fisttpll
iret
mov
push
nop
test
lea
lds
dec
jnp
mov
push
cmp
mov
mov
cwtl
cmp
mov
fcmovu
pop
repnz
cmp
push
test
jb
movsb
xchg
fbstp
xchg
jae
sti
pop
ss
dec
pop
pop
call
cmpsl
fcoms
sub
sahf
ficomps
jnp
add
testb
or
repz
iret
fs
or
sahf
add
mov
add
je
jmp
ja
lock
mov
and
nop
lods
sahf
imul
lahf
add
xor
mov
aad
test
mov
out
iret
mov
sti
data16
pop
xor
mov
cmp
scas
sub
dec
sbb
push
cmp
popf
add
shl
mov
add
dec
popf
mov
scas
sbb
pop
xchg
inc
pop
adc
push
mov
jmp
decl
xchg
scas
rolb
pop
cmp
adc
xchg
ret
mov
inc
cwtl
dec
xchg
pop
rorl
arpl
adc
lods
pop
mov
inc
mov
vunpckhps
pop
in
jns
sub
call
ss
adc
push
subl
loopne
fdivrs
push
push
cmpsl
dec
unpcklps
mov
daa
sbb
mov
stos
xor
sbb
mov
add
xor
dec
data16
sbb
jb
ficoms
inc
cli
sti
push
lea
fwait
stos
jb
cmp
movsb
pop
imul
cmc
add
pop
inc
int3
daa
lcall
and
add
mov
cwtl
sbb
pushl
std
into
mov
cmp
gs
enter
mov
mov
xor
lret
jecxz
sbb
data16
mov
insl
mov
in
mov
and
mov
clc
movsl
sbb
loopne
xchg
inc
or
mov
xlat
mov
adc
int3
push
sbb
pushf
mov
ret
loop
js
jns
sbb
mov
adc
std
jecxz
lret
and
sbb
fcoml
sub
cmp
ret
jge
sub
sbb
pop
stc
xchg
pop
daa
jne
dec
push
or
jl
sbb
xchg
cmc
shrb
ljmp
movsb
adc
movsl
fwait
jecxz
repnz
cltd
mov
push
ret
sub
and
arpl
in
movsb
xor
jnp
rorl
adc
sub
jb
addr16
dec
cmp
sub
stos
out
outsl
xor
push
stos
adc
js
and
fbld
push
pop
inc
sub
cld
stos
mov
jnp
clc
inc
pop
mov
jo
stc
fildll
mov
sbb
sub
aam
mov
xor
mov
aad
out
jne
cmp
adc
xor
push
add
insl
clts
std
fiaddl
aaa
and
sub
xor
adc
jno
xchg
loope
ja
inc
repnz
push
sbb
jmp
sbb
rcll
add
xchg
xchg
add
ret
insb
mov
mov
ret
mov
mov
push
mov
fcmove
rolb
mov
inc
fnstenv
push
mov
and
rol
iret
or
hlt
xchg
cmp
pop
lea
mov
ljmp
mov
scas
lcall
movsb
jns
push
jb
fcomps
add
lock
sbb
jg
cmp
arpl
sbb
add
jge
sbb
mov
ja
lret
repnz
pop
add
gs
into
popa
ficoms
hlt
shll
sbb
mov
mov
push
aaa
cltd
xchg
jl
outsl
int
int3
push
imul
mov
jno
sub
rorb
push
popa
mov
out
pop
lock
or
add
dec
adc
stos
leave
cmp
push
push
pop
mov
xchg
in
adcb
pop
ret
push
iret
jo
movsl
sub
jb
sbb
jp
xchg
test
cwtl
inc
push
mov
pop
push
aad
dec
hlt
shrb
pop
jae
int3
xchg
fldl
lcall
repnz
les
mov
jbe
std
push
shl
xor
push
cwtl
pop
jb
lds
bnd
mov
in
xchg
adc
fmulp
ret
cmp
imul
xchg
clc
jb
mov
add
or
push
lret
mov
xor
sub
mov
les
push
adc
xchg
pop
mov
int3
jae
inc
aaa
lods
jp
adc
aas
pop
sbbb
insb
pop
and
lret
pop
ficomps
xchg
xchg
aam
xlat
out
nop
mov
movsb
imul
xchg
nop
imul
repz
int
sbb
pop
sbb
dec
pushf
dec
or
mov
mov
lret
insl
mov
loopne
fsubrp
outsl
jo
adc
test
sbb
std
cmp
mov
dec
jns
dec
jne
jne
hlt
sub
into
add
das
pusha
mov
dec
pop
lret
xchg
data16
add
andnps
mov
xchg
lret
inc
cmpsl
or
cli
adcl
and
xor
xchg
dec
lret
insl
sahf
mov
mov
daa
pusha
and
aam
jb
jl
jecxz
out
push
jne
sbb
in
adc
adc
popf
inc
pop
mov
mov
addr16
outsl
ds
in
cmpsl
push
jbe
ja
aam
sbbl
cmc
ljmp
out
test
mov
dec
mov
rolb
bound
in
dec
and
cwtl
xchg
jns
sub
or
fidivl
insl
and
test
push
jbe
aad
jne
push
ds
jg
hlt
in
jg
add
stos
out
imul
inc
sub
xchg
push
pop
push
bnd
cs
popf
jo
cmp
daa
inc
add
les
int
inc
sbb
xchg
dec
stos
jb
xchg
mov
mov
pop
lret
ja
popf
inc
jb
out
aad
xchg
cmpsl
inc
imul
push
jp
pop
xchg
adc
xor
dec
xor
int
xchg
sub
add
xchg
jb
jb
add
inc
outsl
mov
adc
loop
push
or
xchg
sarb
add
mov
stos
xorl
sub
sub
bound
or
jge
es
adc
cmp
lods
xchg
sbb
aaa
aam
dec
mov
int
add
mov
mov
mov
test
sarb
pop
jle
repz
int
test
xor
lods
ds
orb
pop
adc
xchg
icebp
adc
mov
addr16
jmp
in
clc
mov
in
ljmp
ret
mov
jecxz
dec
data16
mov
jnp
movsl
cs
jb
mov
mov
dec
xchg
jecxz
test
mov
lods
cli
mov
mov
and
jbe
sbbl
mov
jb
addr16
dec
or
or
jb
nop
jns
sbb
xlat
nop
adc
mov
adc
mov
jl
pop
imul
testl
pop
das
in
sbb
mov
movb
mov
mov
mov
call
mov
push
mov
dec
xchg
cmp
sti
int3
inc
cli
js
imul
mov
push
icebp
fwait
dec
jne
movsl
xlat
mov
dec
fwait
out
dec
into
mov
addr16
jl
cmp
xchg
sahf
lahf
mov
or
stc
mov
or
hlt
cwtl
pop
mov
jmp
je
imul
sahf
cmp
ja
pop
push
lret
in
pop
pop
sub
pop
test
push
popa
arpl
rclb
clc
inc
jo
in
pop
xor
movsb
pop
sbb
es
adc
test
in
ss
shrb
in
int3
mov
decb
push
popa
cld
pop
mov
sub
aam
push
and
mov
test
sub
out
loope
pop
mov
dec
repz
xchg
mov
cwtl
lods
cltd
dec
cwtl
cld
xchg
int
aaa
pop
repnz
sbb
xchg
jbe
push
mov
mov
adc
sbb
mov
ss
mov
mov
xchg
adc
lods
test
sbb
jge
sub
and
sub
je
pop
std
mov
movsb
push
rclb
cmpsb
xchg
pusha
popa
pop
mov
cmp
shlb
mov
pusha
pop
mulb
ja
int
mov
insl
test
aad
xor
out
mov
sbb
popf
mov
pop
movsl
in
xor
dec
xchg
test
aam
mov
pop
shl
mov
test
cli
sub
pop
test
int3
xchg
mov
adc
iret
test
gs
aam
inc
mov
mov
pop
pop
aaa
jecxz
movsl
mov
fucomi
push
sahf
mov
ds
mov
add
mov
adc
mov
cmp
scas
aaa
cs
push
jl
fadd
mov
arpl
repnz
push
out
dec
mov
pop
dec
cs
mov
and
out
pop
inc
sbb
outsl
out
cmp
sahf
iret
jo
fwait
leave
add
or
mov
sahf
and
push
and
push
jo
in
sub
jno
xchg
dec
ljmp
mov
test
mov
loope
clc
test
aas
xchg
fwait
inc
dec
mov
adcb
mov
mov
jns
enter
lock
push
add
imul
adc
stc
pop
in
pop
lahf
or
dec
rcrb
iret
xchg
cmpsb
orl
fneni(8087
ds
in
popa
jge
into
mov
and
test
and
jne
pusha
pop
sbb
repnz
dec
dec
scas
and
mov
xor
pusha
mov
int
in
aaa
clc
jns
cmc
dec
sbb
int3
lock
dec
mov
insl
stc
stos
sbb
ja
movsb
cmp
and
shlb
lock
insb
das
cli
test
in
int
cld
inc
push
idiv
ficomps
jle
fstl
xchg
cld
je
push
cli
push
xchg
mov
std
xor
inc
mov
sbb
pop
jecxz
in
jg
out
jae
push
inc
loopne
mulb
add
inc
movsb
int
insb
or
fnstcw
push
mov
xor
out
pop
pop
jg
or
fcompl
les
xor
int3
cwtl
enter
enter
es
pop
fistpl
push
fistpll
testl
dec
mov
jp
in
popf
aam
insb
adc
notl
adc
mov
cmp
jns
inc
loopne
mov
cltd
mov
jns
and
pushf
faddl
inc
push
push
fsubs
jge
dec
in
sbb
cmc
or
lods
push
push
mov
ret
mov
adc
pop
mov
pop
mov
daa
mov
shr
or
xchg
mulb
push
xor
repnz
lret
add
fistpl
xor
icebp
push
inc
arpl
cwtl
sub
pop
jnp
sbbb
inc
dec
xchg
dec
ds
clc
fcoml
ret
cmp
inc
std
addb
mov
les
pop
mov
xchg
xor
imul
lret
dec
mov
inc
adc
setle
js
cltd
inc
or
push
cmpsb
lods
add
mov
mov
push
or
jge
idivl
lea
mov
dec
stc
inc
mov
into
mov
adc
outsl
jl
mov
lea
movsl
mov
mov
cmpl
fcmovbe
hlt
push
out
cwtl
and
rcl
mov
nop
and
movb
in
int
xchg
testb
cmp
pop
sub
mov
pop
xchg
or
and
hlt
sub
sbb
lea
nop
into
cmc
xlat
cld
sub
sub
pop
push
xchg
pop
inc
ss
and
jbe
mov
into
or
inc
out
data16
jle
movsb
jg
push
or
pop
xchg
insb
fsubr
es
adc
jecxz
mov
mov
jns
jmp
add
add
dec
adc
cltd
jmp
jecxz
fdivrs
sub
or
push
mov
or
jecxz
push
into
or
inc
outsb
xchg
iret
hlt
mov
jnp
push
insb
loope
dec
xor
push
test
shrl
jae
mov
and
mov
pop
add
and
outsl
xor
jge
xchg
int
mov
cmp
div
dec
pop
inc
xchg
pop
in
mov
sahf
pushf
clc
addr16
mov
negl
rcrl
jl
and
ljmp
pop
push
in
and
pop
add
jne
leave
xchg
jb
clc
in
push
les
cmp
xchg
push
xchg
jmp
push
push
xchg
addr16
dec
lcall
mov
jno
pusha
pop
sbb
dec
ss
sahf
scas
outsl
xchg
test
mov
inc
fisubrs
jns
push
fsin
movsb
icebp
aas
daa
test
cmp
jle
sbb
dec
ja
cmp
push
dec
pusha
int3
loop
pop
and
subl
lret
push
movb
sbb
cmpsb
cmc
xchg
ret
or
push
sub
es
mov
push
aas
push
xchg
icebp
and
fisubrs
pop
mov
pop
adc
lret
outsl
ss
scas
pop
cmpsl
into
xor
xchg
aad
sbb
fnstenv
ss
stc
pop
aam
push
jecxz
and
shll
rclb
mov
mov
mov
inc
pusha
jae
mul
rclb
aam
sub
lea
icebp
jmp
fstps
data16
xor
ja
xchg
gs
cld
jns
test
mov
cltd
dec
or
les
xor
mov
cli
lds
test
addl
jno
sub
xchg
jns
pusha
insb
adc
int3
movsl
aas
add
adc
in
cld
fisubrs
in
push
mov
fwait
dec
inc
in
js
jb
or
or
cwtl
xlat
and
xor
lcall
lcall
pop
jmp
inc
sbb
les
mov
test
inc
xchg
outsl
outsb
inc
sbb
dec
xchg
mov
pop
js
dec
js
mov
mov
sbb
fldenv
xorb
scas
and
mov
pop
jno
insb
pusha
mov
clc
dec
inc
outsl
mov
and
sahf
lcall
jle
outsb
cmp
pop
jmp
xor
and
mov
xchg
or
stos
pop
popa
cltd
sbb
sub
data16
inc
cmp
sti
test
sub
mov
push
add
add
sbb
popa
mov
fucomip
lcall
push
fs
adc
jae
jl
jae
mov
push
cmp
pop
fisubrl
das
inc
lds
cltd
adc
dec
or
inc
cld
xor
cmp
jno
xchg
sbb
cmp
mov
inc
ljmp
ficomps
dec
xor
xchg
test
mov
sub
add
stc
shld
pop
push
fwait
lods
inc
ret
roll
xor
in
sbb
scas
aaa
push
jl
test
shll
jle,pt
xchg
pop
rorb
clc
lock
cmpb
icebp
adc
or
sbb
mov
js
aaa
icebp
inc
loopne
lods
test
cli
sub
in
or
leave
dec
cli
and
fiadds
inc
test
cmp
pop
out
mov
mov
adc
cmpsl
cmp
pop
push
adc
icebp
dec
scas
pusha
or
add
mov
lret
dec
lret
stos
loopne
add
ret
or
xor
dec
filds
sub
mov
ffreep
imul
xor
lods
jo
or
dec
arpl
or
xor
gs
xchg
cmp
cmp
test
xchg
mov
push
shll
inc
insl
loope
mov
and
mov
call
cmpsb
imul
movsl
jecxz
mov
push
inc
fdivl
out
imul
push
call
je
dec
scas
in
or
xlat
lods
idivl
outsl
lahf
aam
add
ret
mov
mov
lret
data16
out
xchg
or
mov
je
int3
es
aaa
xchg
adc
mov
sbb
cmpb
rorb
mov
dec
add
pop
xlat
mov
nop
sub
xchg
pop
shll
push
mov
ds
push
xchg
push
and
sbb
xor
std
test
int
imul
loop
push
imul
rclb
clc
mov
sub
jp
xlat
dec
sbb
inc
sbb
test
mov
jmp
ret
mov
add
stos
pusha
stos
jg
xchg
lods
enter
cmpl
mov
mov
in
dec
out
jmp
inc
push
hlt
pop
inc
jl
adc
inc
xchg
ljmp
pop
aaa
cltd
iret
repnz
ljmp
xor
rcl
push
xchg
in
jp
jp
sub
popa
pop
dec
loope
mov
push
lcall
push
into
lcall
mov
mov
mov
sbb
cmp
sub
out
movsl
loopne
outsb
pop
cmp
pop
lods
lahf
lcall
lahf
add
add
xlat
je
cwtl
aam
leave
mov
add
and
lcall
inc
push
enter
cmp
sub
mov
stc
dec
fsubrs
push
push
sbbb
sub
je
adc
xchg
out
sarb
insl
and
and
lock
push
stc
pop
inc
mov
das
sub
mov
aas
add
fucom
mov
sub
push
repz
jmp
test
cmp
fsubl
icebp
clc
rclb
in
push
pop
sub
or
jecxz
lcall
add
loope
andl
adc
jae
out
fmuls
jle
mul
scas
loop
sti
hlt
mov
mov
ljmp
ja
test
pop
ss
jno
pop
cs
cs
xor
adc
idiv
repz
cmc
adc
sbb
mov
negl
jmp
movsl
pop
cmp
js
insl
sbb
mov
mov
rcrl
insl
shr
jnp
or
push
mov
cld
mov
stc
scas
sbbb
fmull
mov
arpl
stos
sbb
loop
ficomps
xchg
jl
mov
inc
iret
cmp
pop
push
leave
jbe
fistl
lock
cmc
pop
js
fildl
fiaddl
jge
out
xchg
mov
dec
inc
add
or
fidivrs
ljmp
xor
pop
clc
xchg
test
shlb
sbb
sarb
ret
nop
adc
mov
and
out
addr16
push
in
or
arpl
mov
xor
add
cmp
pop
je
sub
iret
mov
pushf
sub
sub
or
xor
sarl
dec
aas
pop
sarb
daa
mov
iret
idivl
dec
aad
or
adc
or
dec
out
xchg
jl
pushf
pop
aas
mov
cli
ret
int3
call
mov
mov
sarb
inc
fcmovnu
dec
xchg
mov
dec
popa
outsl
jg
xorl
imul
or
aas
aad
dec
or
add
bound
sarl
popf
out
xchg
add
lret
mov
sbb
and
stos
into
or
dec
movsl
adc
mov
pop
jmp
aaa
iret
addr16
mov
sub
mov
jl
nop
ds
cmp
inc
xor
jo
mov
mov
push
mov
lea
imul
jne
sbb
stos
pop
jge
aam
loop
jb
jo
jnp
stos
push
scas
add
adc
ret
lods
inc
cli
arpl
mov
andl
or
add
push
mov
daa
imul
dec
enter
mov
push
pusha
mov
adc
fisubs
dec
push
test
and
push
cmp
adcl
xchg
cmc
push
mov
adc
in
mov
inc
fistl
pop
pop
push
ljmp
insb
call
pop
test
dec
movsl
sbb
adc
leave
outsb
lahf
sub
popa
push
add
mov
out
cmp
mov
dec
cs
or
cmp
inc
and
mov
test
cmpb
dec
mov
in
ljmp
ja
out
insb
sbb
push
push
xchg
cltd
push
add
lods
je
enter
bswap
adc
push
daa
cmc
push
jecxz
test
addr16
int
jnp
cmp
lods
jne
lods
ja
mov
shlb
addr16
into
stc
push
in
xchg
nop
jmp
sub
mov
popf
xor
data16
jg
push
mov
jecxz
popa
push
sbb
push
push
mov
and
rorl
pop
adc
pop
out
xor
imul
cmpsl
testl
xlat
xor
add
xchg
cmpsb
xchg
dec
add
and
nop
xor
push
mov
cmp
inc
or
mov
push
je
jp
es
cmp
ss
push
cmp
pop
pop
cmp
iret
es
nop
pushw
imul
scas
or
idivb
xchg
jno
cmp
imul
jo
and
test
iret
stos
cmp
nop
cltd
aaa
pop
ss
iret
mov
insl
bound
inc
ret
test
gs
psraw
test
jg
fidivrs
xchg
popa
fwait
ds
das
xchg
inc
into
lret
push
jp,pt
mov
aaa
ret
sahf
cmp
and
loop
test
adc
in
movsl
rcrl
notl
test
xchg
fs
mov
inc
xchg
push
pop
scas
lahf
lret
inc
pushf
mov
shlb
push
lret
dec
jge
mov
mov
nop
icebp
unpckhps
xchg
xorl
adc
outsb
mov
lea
xor
out
inc
inc
jp
fs
cs
xchg
push
out
or
push
cmp
add
fisubrs
pop
push
mov
ljmp
xorb
xor
cmp
or
xchg
nop
rorl
inc
pushl
mov
ret
movsb
dec
sbb
lret
jb
in
mov
lods
mov
inc
jae
inc
mov
out
or
jg
lret
push
stos
scas
push
xor
leave
dec
xchg
gs
and
mov
addb
inc
mov
scas
dec
call
add
and
insl
nop
ds
dec
adc
push
or
cmp
shr
es
lods
fs
jo
mov
mov
fldt
pop
scas
cmpsl
push
jle
sti
out
sbb
mov
arpl
push
data16
orb
enter
sub
push
stc
cmp
pusha
dec
call
mov
or
test
insb
jp
push
stc
mov
sbb
ljmp
cmp
cmp
push
mov
push
add
xchg
mov
mov
jg
jl
imulb
cmpsb
jmp
icebp
ret
jge
stos
jl
test
sti
rcrb
ja
dec
and
mov
popa
inc
sbb
mov
mov
add
mov
adc
and
adc
pop
sbb
and
loop
aaa
sub
lret
pushf
out
adc
insb
iret
and
dec
ljmp
outsb
cmpsl
dec
pop
ds
push
mov
negl
leave
cmp
inc
dec
pop
sub
mov
sti
xor
dec
cmp
inc
dec
outsl
rolb
or
addr16
imul
aad
xchg
and
cmpsl
fistps
out
andb
pop
imul
out
dec
dec
push
inc
into
inc
jae
inc
fs
push
in
movsl
jecxz
cmp
or
fldenv
dec
mov
mov
mov
and
pusha
mov
jmp
popa
mov
xchg
jb
js
adc
in
inc
or
rep
jge
mov
and
cmpsb
out
and
pop
popf
pop
xor
sbb
lods
test
pop
pop
movsl
movsl
pop
dec
sbb
inc
push
xchg
cmp
test
push
subl
out
inc
lea
aas
addb
add
ljmp
lret
cmc
es
ja
int3
add
int3
jle
call
std
mov
pushf
push
cmp
mov
jge
mov
pop
and
xlat
push
jle
cmp
mov
rolb
out
or
in
inc
pop
iret
movsb
shl
add
lea
pushf
cmp
daa
lock
add
xchg
lds
mov
push
fisttpll
mov
out
push
push
and
sti
rcl
mov
movsb
or
cmc
adc
xor
nop
push
repz
sbb
jle
ljmp
ljmp
or
add
lret
repnz
jne
mov
cld
imul
ret
cld
mov
dec
sub
loop
clc
xchg
bound
cmp
dec
and
jae
insb
shlb
popf
dec
add
imul
pushf
cmc
sub
dec
pop
jne
movsb
pop
dec
in
sub
and
mov
std
adc
cltd
ficompl
lret
dec
mov
pop
pop
sahf
and
xlat
mov
movsl
and
pop
sti
push
cli
lcall
mov
cmp
cmp
lcall
cltd
or
xor
sahf
insl
mov
push
pushf
pop
push
or
add
pop
cmp
stos
je
les
sub
lcall
pop
or
aas
mov
adc
inc
mov
aas
xchg
mov
popf
pop
stos
ljmp
and
shrb
lods
outsb
popf
push
or
imul
in
jp
fbld
lret
repnz
into
unpckhps
rorl
mov
mov
push
subb
xor
in
ss
fs
mov
and
nop
test
mov
dec
sub
rorl
lahf
pop
pop
out
addr16
jecxz
adc
ror
adc
and
mov
push
leave
mov
frstor
cld
pop
sti
mov
out
mov
xchg
add
pop
add
loop
andl
das
adc
fsts
sub
sbb
test
pop
icebp
xchg
into
add
into
icebp
clc
loope
ljmp
fwait
rcrb
mov
nop
outsb
pop
cmp
nop
lahf
adc
or
fildl
jne
inc
loopne
outsb
jbe
cltd
or
mov
xor
mov
pop
adc
push
sbb
mov
popf
js
cli
jmp
push
or
adc
xchg
stos
push
shrl
mov
cld
dec
inc
xchg
aad
js
dec
sbb
mov
add
inc
dec
dec
sbb
sti
lret
and
mov
and
sbb
pop
js
test
mov
pop
mov
sahf
jge
jo
andb
lea
sub
into
mov
mov
outsl
sbb
sahf
mov
outsl
mov
jae
ret
adc
dec
hlt
lods
ret
outsl
inc
addr16
fnsave
mov
subb
aas
inc
ret
div
jg
repnz
das
cmpsl
pusha
dec
jno
jecxz
imul
fisttpll
rcrl
and
pop
xchg
jnp
add
pop
xchg
pop
gs
arpl
andb
fildll
xor
aad
inc
add
push
or
dec
popf
stos
dec
and
cmpsl
jnp
push
mov
adc
sub
sub
or
mov
pusha
push
cli
ljmp
mov
je
cmp
rcrb
cmp
movsb
push
jbe
aaa
mov
mov
push
pusha
fucomip
xchg
pop
jl
dec
xor
hlt
and
aad
add
xchg
or
mov
test
inc
fnstenv
adc
dec
pop
hlt
movsb
std
in
in
cmp
mov
jnp
jle
lret
repnz
add
push
in
jns
test
repnz
and
xor
push
mov
push
adc
pop
xor
cmp
fldt
dec
push
es
frstor
cmpsb
outsl
and
repnz
mov
mov
pop
outsb
shlb
or
gs
dec
jge
fs
inc
jmp
xchg
cwtl
rolb
cmc
ljmp
ss
pop
add
popf
outsb
push
cmp
push
sbbb
jg
mov
ret
jne
jecxz
sahf
adc
xlat
imul
xchg
inc
mov
pop
ljmp
je
mov
cmp
in
fs
test
insl
pop
push
mov
popa
sub
repz
and
insb
mov
insl
jnp
mov
sbb
mov
loop
xchg
jl
enter
bound
push
push
push
jp
movsb
xchg
jno
vcvtsi2ssl
rcll
in
aas
test
addb
xor
dec
sbb
sbb
out
enter
or
daa
cmp
push
jns
push
and
aad
je
add
inc
jl
ja
push
xor
inc
add
dec
push
out
jbe
and
add
sub
push
dec
hlt
bnd
movsb
push
or
jno
shlb
xor
lret
xor
sub
sbb
mov
xor
mov
adc
dec
mov
push
xor
pop
adc
mov
push
or
jge
inc
push
outsl
lahf
xor
sub
adc
or
adc
lods
sbbb
icebp
nop
pop
xor
and
pop
xchg
aam
add
push
dec
addb
rcll
add
adc
scas
lock
sub
and
push
jo
adc
add
lret
out
lret
mov
mov
out
mov
add
jl
sbb
push
test
xchg
sbb
mov
inc
and
inc
cmp
lock
cmpsb
add
jg
pop
add
jbe
nop
cmpsl
sti
jns
xchg
mov
inc
movsb
aad
xorb
pop
pop
rcrl
add
jmp
insb
aas
sahf
sub
sbb
lds
or
or
add
movsl
and
cmpsl
arpl
mov
shrl
cmpb
xchg
out
daa
mov
push
sti
xchg
push
mov
dec
lods
pop
add
scas
ljmp
iret
nop
jae
sbb
pop
rcll
jmp
push
add
call
gs
ret
pusha
mov
loopne
fisubrs
lods
movsb
inc
int3
adc
lret
dec
mov
lret
lock
ljmp
xchg
sahf
jg
mov
dec
dec
repz
repz
dec
mov
sarb
addr16
dec
das
pop
jg
push
mov
mov
adc
aad
mov
shlb
xor
add
push
cld
sbb
popa
fnstenv
add
sahf
pop
rcrb
inc
or
ss
enter
cld
xchg
inc
sub
lahf
mov
shl
mov
or
sti
mov
inc
fcoms
test
dec
mov
xchg
pop
imul
roll
cmpl
mov
push
mov
into
and
fidivs
lret
pop
leave
push
movsb
loop
pop
imul
dec
mov
pop
lods
insl
or
mov
mov
jae
into
lcall
adc
insb
lock
lods
rol
mov
das
push
mov
sbb
ret
aaa
and
or
push
jnp
repnz
dec
jmp
out
sub
pop
xor
push
es
pop
cmp
repz
push
add
inc
xchg
sbb
mov
cmp
jmp
and
loop
push
xchg
add
cmpsb
imul
in
xchg
jnp
cltd
call
sbb
and
add
jp
xor
arpl
mov
jge
cli
shll
mov
jle
xchg
xchg
std
rcl
popa
mov
xchg
jb
pop
mov
mov
stos
icebp
das
pop
mov
pop
add
adc
loopne
push
nop
shlb
loopne
jecxz
mov
cmp
lret
sbb
cmpsl
divb
inc
fdivrs
and
cmpsb
nop
notl
fldl
sbb
leave
adc
and
loope
xchg
pop
es
out
rol
imul
mov
ror
aam
cmp
pop
cltd
push
imul
jl
aad
mov
mov
xchg
xor
das
fstpt
push
add
mov
ljmp
add
jnp
pop
inc
mov
les
int3
or
and
xor
incb
jp
adc
dec
cmpsl
push
leave
mov
pop
pop
mov
mov
push
cmpsb
mov
testl
mov
mov
aas
mov
sti
xchg
lods
xchg
jne
mov
pop
outsb
push
in
aas
push
sbb
cltd
frstor
xchg
out
pusha
fmull
imul
imul
in
shlb
imul
fsubl
call
mov
fcompl
insl
cs
ja
xor
fs
sbb
jb
in
cltd
pop
push
mov
cs
xchg
xlat
push
fmull
push
adc
dec
sti
push
mov
cmp
sbb
popa
aaa
mov
movsl
fnstcw
rcr
es
sbb
or
rcrb
mov
xchg
jmp
xor
cmp
xorl
sbb
inc
fsubrp
outsl
adc
add
mov
push
bound
mov
call
push
leave
mov
imulb
xor
cmpsl
aaa
sahf
xsaves
mov
mov
hlt
xlat
popl
mov
mov
sahf
mov
popa
sbb
fisubl
enter
push
cmpsb
mov
mov
int3
fnstcw
jmp
fsubrl
pop
bound
jae
fmuls
add
sub
sub
or
mov
addr16
and
push
stos
pop
xlat
inc
test
bound
ret
inc
cmp
and
aas
movsb
jl
add
stc
cltd
cmp
jno
mov
negl
fdivrl
in
out
inc
cwtl
mov
jo
lock
clc
xor
inc
movb
mov
jecxz
cmp
test
ret
push
ss
inc
scas
add
hlt
in
xor
in
sub
jmp
inc
mov
dec
xchg
sbb
cld
out
cmp
sbb
arpl
addr16
push
push
mov
stos
test
outsb
rcll
cli
test
repnz
cmp
cmp
mov
sbb
gs
push
jmp
lret
mov
mov
xchg
cmp
gs
dec
push
adc
out
pop
in
add
loopnew
cld
aas
imul
lret
dec
mov
mov
and
pushf
fimuls
cmp
ret
out
cmp
lea
pop
jbe
jl
add
jnp
scas
push
sbb
mov
into
cmpb
pop
adc
fidivl
ds
pop
cmp
lea
cmp
push
loop
push
jbe
fwait
clc
js
add
int
scas
jmp
fwait
aaa
mov
jb
orl
das
or
out
mov
lret
xorb
out
dec
mov
in
imul
pop
mov
lods
jns
xor
push
sarb
jge
mov
outsb
add
frstor
into
cmp
enter
ficomps
loopne
lea
jecxz
and
sbbb
clc
jp
fisttps
call
dec
jno
pop
aas
mov
pushf
jb
and
or
outsl
aam
jl
ja
repz
cmpsl
sahf
mov
jmp
sub
mov
push
push
push
mov
and
sub
and
mov
int
jbe
test
adc
leave
jae
or
xlat
xchg
pop
mov
jmp
int
sbb
mov
push
inc
hlt
ficompl
loop
out
sub
mov
sahf
call
xchg
cmpb
sahf
shll
push
jle
insb
pop
hlt
addr16
rcrl
jmp
jns
bnd
outsb
fidivs
push
shl
mov
shll
mov
sbb
push
cmp
mov
subb
inc
loop
in
lahf
or
fsts
sahf
negb
push
sbb
pushf
push
cwtl
mov
inc
push
jnp
fsubs
mov
add
test
add
jb
push
mov
pop
aas
push
xchg
mov
jns
call
fnstcw
fmuls
leave
jge
xchg
push
iret
jb
xor
filds
inc
push
sub
push
sahf
jb
getsec
test
mov
pop
stc
and
xor
add
cmc
imul
fwait
adc
daa
jnp
aad
test
and
mov
push
pop
movsl
jge
int
imul
adc
dec
daa
dec
add
movb
jnp
iret
or
cmp
out
js
sbbl
adc
jg
xchg
pop
cld
and
push
xor
cmp
add
ss
enter
sbb
bound
and
stos
pop
jp
in
inc
lcall
in
dec
xchg
dec
fwait
in
cmp
jns
mov
or
xor
xor
ret
pop
imul
mov
xor
inc
loopne
test
insb
or
and
xorb
jmp
je
mov
add
lock
pop
sub
add
mov
push
or
jns
xor
lahf
inc
ret
push
mov
insb
test
xchg
fwait
rcrl
cs
dec
mov
popfw
and
sbb
fwait
in
les
and
sub
cmp
add
mov
xchg
mov
mov
pop
inc
test
ds
and
inc
fcompl
cmp
popa
pop
popa
outsb
lods
mov
loop
and
fcomps
call
pop
loope
fidivl
or
cmp
push
push
mov
arpl
addr16
insb
jle
enter
pop
jo
lret
xor
xchg
imul
cs
addr16
aaa
xchg
pop
xchg
mov
ljmp
or
sbb
xor
aad
je
lock
scas
sqrtps
dec
xor
fbstp
pushf
xchg
cmp
add
push
or
xchg
lcall
mov
xchg
popa
mov
shll
bound
scas
push
iret
mov
loop
sub
divb
jge
loop
sbb
and
loopne
ljmp
push
into
jp
mov
mov
roll
jnp
and
mov
inc
test
loop
adc
dec
jne
add
clc
dec
mov
out
std
push
loop
jno
cmpsl
shrb
dec
mov
mov
mov
jne
mov
mov
leave
xchg
pushf
fadd
mov
adcb
push
push
ret
les
jno
rorb
cmp
push
test
bound
cwtl
and
lret
push
jae
or
sub
mov
fildl
lods
add
les
xlat
cmp
inc
mov
push
ds
fwait
daa
in
mov
push
inc
aad
push
jmp
push
push
hlt
jmp
jp
in
pop
lret
mov
iret
addb
mov
cltd
mov
xchg
clc
xor
loopne
adc
sarb
add
pop
jge
dec
xchg
sahf
fimuls
fnstenv
scas
cli
xchg
stos
inc
adc
mov
and
sbb
jl
xchg
insl
adc
imulb
and
stc
loop
aad
in
pushf
pop
lret
lea
add
xor
pop
jge
mov
aad
jns,pt
pop
enter
mov
xor
xor
lahf
into
fadd
cmp
push
pushf
sahf
test
jmp
out
fcomps
xor
xor
cs
mov
mov
fildl
adc
xor
push
pop
mov
mov
inc
bound
bound
cld
mov
leave
inc
push
lods
xchg
pop
inc
push
or
frstor
push
jge
pop
aas
arpl
fcomps
push
dec
inc
mov
jmp
mov
stos
enter
fldenv
inc
adc
and
xor
inc
adc
mov
mov
mov
mov
insb
mov
ja
out
push
fwait
out
cmp
outsb
in
adc
stc
and
cmpsb
push
cmp
movsl
push
pop
leave
movsb
mov
aas
mov
je
mov
inc
xchg
dec
pop
std
xchg
adc
fcom
sti
loopne
jnp
out
xchg
pop
push
iret
dec
je
iret
add
fwait
xor
pop
and
outsl
lds
pop
sub
repz
xor
dec
mov
inc
ret
fstl
adc
push
sbb
clc
and
sub
mov
sarl
jb
or
addr16
dec
cmp
inc
ret
inc
pop
lods
ficompl
sbbl
push
pop
add
push
divl
push
mov
stc
sbb
fisttpll
inc
insb
or
mov
fucompp
rorl
jl
ljmp
cmpsb
repnz
loop
push
divl
sbb
pop
out
rorl
sahf
mov
lock
pushf
xchg
push
vcvtsi2ssl
shlb
mov
adc
jmp
es
sub
cmp
pop
pop
or
mov
push
xor
xchg
rcl
jne
xchg
out
xor
push
mov
push
lcall
int3
cmp
int3
push
jns
fildl
test
and
sbb
inc
cld
stos
sbb
hlt
pop
repnz
lret
repz
mov
sbb
fwait
xchg
xor
mov
pop
pop
mov
mov
push
or
scas
mov
xchg
add
or
push
imul
adc
or
pop
outsl
nop
das
imul
addr16
inc
lock
lods
outsb
aaa
push
lds
or
ss
xchg
mov
xchg
push
adc
fucom
stos
repz
cmp
stos
pop
xchg
inc
scas
int3
pop
ret
cmp
adc
repnz
mul
pop
mov
push
movsb
xor
jns
push
or
sub
idiv
aad
mov
loope
loopne
js
xchg
sbb
inc
aam
mov
mov
sub
jmp
and
outsb
jle
push
ret
push
sbb
pop
cmp
stos
xchg
mov
mov
imul
call
jmp
xchg
mov
xchg
cltd
mov
mul
icebp
adc
sbb
sbb
push
or
mov
xchg
dec
cli
out
or
pop
push
xor
ds
int
push
insl
andb
mov
push
je
movsl
mov
sub
mov
push
ret
mov
mov
and
push
lahf
mov
int
sbb
cmc
mov
clc
inc
xchg
jnp
push
add
inc
and
cmpsl
pop
xchg
ror
add
movsl
pop
les
or
and
dec
sbb
ljmp
daa
sub
dec
mov
sbb
mul
pushf
xchg
sub
loope
nop
subl
decb
xchg
pop
pop
aas
ja
aam
cwtl
jecxz
pop
into
clc
sbb
ja
lds
mov
mov
pusha
or
sbb
cmpsb
push
or
push
dec
js
lock
lahf
flds
adc
xor
out
test
mov
sub
into
jnp
arpl
arpl
pop
push
movsl
das
dec
and
or
movsl
leave
cmp
dec
cmp
rorl
out
xchg
popa
and
lock
dec
adc
mov
push
lds
sti
pusha
push
sahf
lods
int
xor
ret
xor
loop
aas
sbb
mov
adc
in
inc
and
and
stos
xor
mov
shll
sub
and
mov
xor
sbb
xchg
push
and
sahf
lds
mov
aas
cmp
jge
mov
pop
ljmp
sbb
xor
push
inc
aam
or
mov
adc
les
sbb
ss
testl
push
mov
and
das
push
push
jle
sub
test
sub
xchg
jecxz
xchg
push
jecxz
sbb
pop
jb
in
inc
pop
jno
push
sub
lock
push
imul
push
loope
add
adc
pop
les
xor
and
mov
add
pop
inc
loopne
inc
add
out
stos
insb
aam
and
pop
fists
lods
cld
mov
aas
or
pop
fsubs
push
clc
fidivrs
bound
pushf
xchg
push
inc
dec
add
hlt
enter
rorb
cmp
inc
pusha
push
xchg
cmp
daa
repz
repnz
and
and
scas
sub
sub
test
sarb
sbb
mov
ljmp
mov
pop
sbbl
lock
cwtl
and
popl
in
test
repnz
adc
rcll
lods
ret
dec
shrl
je,pt
or
gs
xchg
pop
jge
jmp
mov
xor
push
hlt
pop
xor
mov
cld
aad
pop
cmc
push
testb
out
xchg
leave
scas
sbb
cmp
aad
jp
in
pop
jno,pn
cs
xchg
das
xchg
inc
es
jl
jne
ljmp
test
sbb
sbb
or
popa
std
xor
jns
arpl
dec
and
imul
cltd
jo
push
xchg
or
fnsave
sub
or
movsl
repz
cmp
shll
imul
daa
lods
lahf
pop
lahf
int
mov
cmp
stos
mov
sbb
mov
mov
je
push
fsub
fcmovnbe
movsl
xchg
repnz
fstpt
xchg
sub
imulb
jl
push
outsl
loope
lret
mov
fldt
mov
fnsave
adc
inc
sub
lahf
pop
rcrb
and
movsl
enter
dec
add
lret
sbb
cmc
decl
pushf
mov
ljmp
subl
xchg
roll
jne
and
xor
push
lcall
pop
push
test
ja
sbb
movsb
and
or
mov
call
xchg
cwtl
lds
adc
aas
mov
and
cmpsl
pop
stc
push
inc
push
rcrb
pop
pop
iret
rolb
xchg
mov
xchg
pop
aaa
cmp
lods
cmp
or
popa
xchg
inc
mov
popf
add
test
dec
jae
xchg
loop
in
aas
and
test
int3
in
popa
and
arpl
add
jbe
sbb
ret
mov
or
jge
test
ret
xchg
out
roll
ss
shl
pop
jae
jle,pn
or
xor
movsl
dec
mov
or
outsl
dec
jp
and
xchg
lock
jb
push
cld
cli
neg
inc
scas
addr16
lret
cmp
push
mov
mov
mov
dec
lcall
and
out
jbe
sti
pop
sub
jb
loope
pushf
test
adc
mov
shll
cmp
scas
hlt
ss
sub
repz
sbb
leave
sbbl
pop
jno
loope
cmc
push
inc
test
mov
enter
jb
repz
sub
movsb
rclb
gs
dec
ja
out
scas
das
ja
push
push
mov
sbb
and
cmp
pop
add
das
add
sub
xchg
jecxz
test
shl
xlat
push
jmp
jle
imul
loope
in
ljmp
mov
mov
or
fmull
int3
lcall
xchg
jmp
xor
and
cli
mov
mov
mov
mov
or
je
mov
leave
cmp
sar
xor
and
push
flds
subl
or
xchg
add
add
cmp
xchg
xchg
sbbl
roll
out
aas
push
ljmp
mov
fsts
jne
int3
shlb
out
das
pushf
cmp
add
cltd
cmp
dec
cmc
cmp
out
push
cmpsl
cld
frstor
cwtl
jns
arpl
in
xchg
add
cmp
test
adc
pop
and
mov
addl
rcll
cmpsb
test
out
fs
adc
clc
and
mov
inc
cmp
cli
lods
ret
data16
subl
add
jecxz
das
inc
std
movsl
insb
sbb
ja
xor
mov
add
popf
mov
adc
mov
mov
mov
mov
clc
push
sub
or
cli
mov
and
sbb
add
arpl
mov
repnz
sbb
rcrl
outsl
sbb
daa
inc
sbb
js
gs
sbb
test
xchg
int3
div
pop
loopne
cmpl
jp
sub
or
movsb
je
and
fwait
add
xlat
hlt
pop
adc
lods
inc
inc
rolb
movsl
or
or
jp
cmp
stos
iret
add
jp
insl
shrl
pushf
push
ljmp
adc
push
cmpsb
outsl
pop
out
push
loope
pop
cmp
adc
sbb
add
outsb
decl
xchg
sti
ret
int
outsl
popa
add
dec
push
callw
and
sti
push
mov
xor
mov
sub
mov
mov
jne
outsl
mov
bswap
lods
sbb
jne
sbb
les
es
imul
jg
popa
int3
or
xlat
stc
call
xchg
mov
addr16
xchg
inc
hlt
jae
pop
xlat
cwtl
dec
into
pusha
mov
mov
test
insl
cmp
cmp
jb
sub
dec
iret
push
cmp
ficomps
rorb
dec
pop
adc
fimuls
cmp
ja
nop
sbb
cmp
fs
add
and
fldcw
push
bound
fnsave
inc
jo
fadds
or
test
xor
loop
cmc
mov
dec
inc
fisttps
cmp
icebp
or
lret
sub
shlb
push
adc
xchg
pop
in
ds
cmp
jb
pop
or
mov
xchg
popf
adc
jmp
adc
sub
jne
mov
mov
aas
adc
mov
or
jg
jns
cmp
push
iret
xor
stos
test
cmp
mov
into
lods
mov
mov
mov
sub
jne
or
jge
sub
repnz
push
jl
or
iret
test
xchg
in
pop
popf
test
lods
xchg
fcomps
int
xchg
ret
fs
bound
xchg
ds
aaa
or
inc
into
enter
fwait
daa
lds
push
idiv
mov
test
mov
push
jecxz
mov
pop
fistpll
pushf
xchg
jmp
adc
or
mov
aas
jmp
jp
inc
xchg
jg
outsl
cltd
shl
jmp
pop
bound
mov
mov
pop
std
mov
xor
imul
jo
sahf
loope
std
cmp
cli
das
in
popa
cmpsl
mov
clc
imul
imul
in
adc
push
dec
pop
mov
mov
fs
jmp
inc
inc
mov
cmc
cmpsl
jge
je
xor
adc
outsl
sub
call
lock
xchg
sub
adc
mov
pop
mov
push
adc
and
scas
xchg
push
jno
dec
or
das
sub
out
pop
adcb
imul
mov
xchg
das
xchg
aaa
ret
lds
add
and
push
xchg
mov
or
xor
cmp
adcl
add
mov
arpl
fbstp
jae
ret
adc
and
cmpsl
add
sti
jmp
int
or
fldenv
test
lcall
cmp
hlt
into
inc
inc
or
adc
popa
sbb
dec
pushf
ret
push
les
add
sub
inc
jmp
sbb
outsl
int3
ja
adc
inc
add
add
sub
lods
ret
out
push
dec
or
rol
adc
fimull
xchg
aaa
mov
adc
das
cltd
sub
pop
sbb
dec
test
cs
xor
adc
pop
rolb
ret
mov
pusha
jmp
fcompl
es
scas
aaa
push
subb
mov
mov
jno
fbld
insb
jns
cmp
pop
insl
cltd
rcrb
xchg
xchg
push
push
add
fisubrl
xchg
jg
xchg
lock
test
sbb
pop
and
push
or
test
shl
out
js
leave
adc
cmpsb
jne
lods
test
cmpsl
loopne
mov
pop
inc
leave
dec
mov
mov
xchg
in
xor
repnz
mov
pop
sbb
lods
ja
insb
jns
int
mov
outsb
cmova
test
mov
push
shlb
cmpl
mov
in
or
fdivl
es
shrl
push
adc
ja
movsl
stos
movb
sbb
dec
push
xchg
mov
jecxz
mov
neg
dec
insb
sbb
pop
in
adc
pop
shlb
and
movsb
and
push
mov
fidivl
int
std
cmpsb
std
or
xor
sub
insb
imul
hlt
add
lahf
adc
jl
mov
rcl
push
inc
cmpsb
sub
cmc
loope
ja
ret
jecxz
or
mov
or
outsb
inc
cs
pop
rcr
lods
xor
cmp
sbb
jns
push
movsl
std
inc
mov
mov
dec
add
popf
test
xchg
jne
test
movsl
das
inc
into
cmp
mov
inc
aam
insb
xor
sub
icebp
repnz
xchg
or
movsb
jge
cmp
imul
mov
mov
out
xor
jbe
loopne
jp
loop
rorl
test
icebp
test
jmp
mov
sub
or
add
mov
dec
or
pop
xor
mov
cli
insb
mov
fcmovnb
cmpsl
sahf
mov
sub
repnz
ljmp
or
aam
rorb
lods
xchg
pushf
sub
sub
clc
test
ret
pop
rolb
sti
scas
int3
pop
mov
mov
sbbl
jp
xchg
jns
cwtl
ds
and
mov
inc
rol
je
cmp
rep
cmp
lea
jle
iret
cmpsb
repnz
in
and
mov
bound
scas
mov
insb
push
jg
out
cmpsb
ds
test
adc
cli
imul
lret
dec
hlt
pop
repnz
mov
imul
pushf
push
data16
cmp
pop
xor
jecxz
rolb
jns
fistpl
cwtl
pop
push
fcom
test
ss
push
jns
mov
std
lods
popa
stos
jbe
jne
mov
add
int3
cmp
enter
sbb
mov
in
nop
lahf
push
pop
out
movl
into
jmp
push
test
mov
inc
gs
xchg
inc
and
call
cli
ljmp
adc
xor
inc
mov
movsl
xchg
pop
add
enter
inc
inc
je
xchg
and
jg
inc
lds
into
scas
xor
xor
mov
jecxz
fmuls
push
adc
sbb
pop
sbb
fstl
pop
shrl
pop
jle
adc
out
in
in
dec
sub
sbb
and
into
mov
arpl
push
push
mov
jmp
xchg
pop
cmpsl
rorl
pop
out
mov
sbb
jle
pop
call
pusha
xorb
inc
mov
fisubs
xchg
loope
xchg
push
or
roll
fcmovnbe
pop
leave
imul
rol
push
cmp
push
jbe
or
loop
into
sub
rcr
jns
xchg
sbb
or
sub
daa
mov
movsb
xor
daa
sbb
xchg
bound
int
jge
sahf
mov
jmp
sbb
mull
jecxz
or
jge
mov
sbb
in
fstpl
int3
mov
sub
dec
xchg
fsts
mov
cld
sub
jne
test
lahf
cld
cmpsb
and
sbb
push
mov
jmp
cmc
daa
fstl
imul
in
inc
adc
imul
mov
jecxz
or
aaa
insl
mov
stc
jle
hlt
daa
jae
dec
push
cmp
test
out
dec
decb
mov
stc
mov
arpl
and
and
arpl
jns
sbb
xchg
push
and
mov
repnz
mov
inc
xor
sub
cmpsl
cs
loope
repz
and
mulb
push
dec
dec
addl
js
movsb
mov
out
sbb
or
pop
loope
leave
je
cmp
dec
xchg
jo
cmpsb
pop
mov
ds
or
cmpsb
mov
pop
loop
push
xchg
and
mov
bound
jnp
stc
sahf
dec
dec
xchg
sbb
test
sub
cmc
ss
enter
xchg
test
jl
pop
add
lods
jge
sbb
sti
rcl
sbb
fisubrs
mov
sbb
dec
call
daa
mov
jecxz
daa
out
dec
roll
outsb
ja
sub
cmp
daa
inc
lahf
movntps
test
hlt
cmpb
mov
jp
push
js
dec
adc
inc
inc
lea
fldcw
cmp
pop
jg
pushf
popa
mov
and
and
int
xor
movsb
rorl
cltd
sub
mov
adc
insl
add
nop
loope
mov
out
cli
scas
in
gs
sub
adc
add
loope
mov
sub
jne
ja
ja
popa
jle
xchg
push
fisttpl
sub
sarb
sub
in
aam
scas
out
jle
push
iret
sahf
cmp
ret
stos
mov
in
arpl
jns
xor
rclb
mov
cmp
mov
cmp
lock
and
inc
mov
in
or
js
cmpsl
mov
xor
imul
repz
mov
dec
fidivrs
lret
pop
add
ret
xchg
imul
add
in
bound
push
mov
daa
sub
pop
dec
loop
and
loope
xorb
cmp
dec
mov
sbb
xor
add
cmp
cwtl
mov
jge
and
sti
lret
or
aam
iret
and
iret
test
xchg
push
mov
push
push
mov
or
adc
sahf
lods
mov
jae
xor
bound
or
sub
mov
or
push
mov
and
adc
xor
shlb
ret
cld
sub
dec
icebp
or
xchg
movsb
cld
out
mov
xchg
loopne
cmp
dec
rol
jl
lods
or
add
mov
int
call
les
cmp
lods
pop
inc
stos
inc
cmp
gs
cld
shl
daa
cwtl
or
test
and
loope
dec
mov
xor
push
shl
inc
scas
imul
aaa
pop
scas
mov
fnstsw
or
loop
shll
mov
mov
sti
or
test
mov
and
jno
pusha
lds
aam
push
orl
nop
cmp
pop
mov
in
add
cmp
ret
xor
call
cmc
ljmp
push
sahf
jge
mov
mov
fidivrl
movsl
shll
mov
sbb
shl
shll
xchg
loope
or
jecxz
imul
inc
sub
daa
jmp
push
fidivrs
xor
mov
lahf
test
shll
jnp
sbb
fdiv
push
lock
das
mov
in
aam
add
add
add
aad
mov
lcall
pop
cmp
shlb
mov
pop
mov
xor
outsl
push
mov
xor
int
xchg
aad
jo
mov
and
ret
js
dec
mov
push
dec
or
ss
stc
out
in
ficoms
movsb
cmp
fadd
fstl
mov
imul
xchg
sub
sub
dec
or
push
shl
mov
fldl
or
out
mov
sbb
pop
xchg
dec
xchg
clc
pop
call
xor
test
movsb
pop
jp
mov
cmpsb
sti
sbb
xchg
xor
fdivl
push
rcrl
aad
xchg
daa
js
push
inc
pop
fcompl
out
inc
push
call
or
push
dec
cmpsl
scas
sbb
cltd
subl
lret
mov
jne
and
test
cmp
adc
push
mov
sbb
pop
jo
in
fildll
mov
jge
mov
scas
lcall
jns
mov
loop
xor
cmp
cmpsb
outsl
add
insl
lock
imulb
sar
push
ss
cmc
in
xcrypt-ctr
cmpsl
fwait
es
iret
and
cltd
insb
loop
pushf
cmp
or
gs
xchg
imulb
pushf
or
pop
pop
pushf
inc
test
fcmovnu
out
fbld
or
mov
mov
mov
sub
jae
fcmovnu
sub
mov
xchg
subb
xchg
and
scas
mov
inc
mov
sti
mov
andl
jb
push
pop
xor
mov
dec
inc
adc
stos
rorl
push
pop
jns
lret
xor
ljmp
mov
in
mov
and
cld
aas
fs
sti
movl
sbb
push
cmc
mov
mov
cmp
cltd
decb
shlb
push
bound
pop
inc
xor
daa
or
adc
add
inc
jg
pop
push
jno
xlat
xchg
sbb
decb
outsl
jp
cmp
out
jne
pop
push
movsb
jp
push
mov
xchg
lods
aam
jne
fldcw
mov
jecxz
sti
lea
xor
mov
mov
xor
jg
sub
cmp
pop
lahf
pop
mov
mov
outsb
mov
and
gs
sbb
ficomps
je
mov
sbb
inc
into
ret
and
nop
fistps
push
sbb
jle
popa
cmp
pop
push
fcomip
jmp
sbb
in
cmp
xor
mov
xchg
testl
dec
inc
ret
leave
dec
pop
cmp
or
push
mov
insl
vmread
test
xchg
jle
xchg
xor
lods
lock
aaa
popa
bound
and
loop
fsubl
and
insb
add
out
int3
push
adc
cmc
int
fs
lea
pop
sbb
jae
cmpl
test
aas
divb
fwait
popf
mov
push
xchg
shrb
dec
out
and
mov
mov
inc
lret
fists
xor
into
divl
xchg
pop
xchg
push
mov
push
inc
xor
mov
or
cltd
lret
hlt
xchg
xor
inc
jb
and
loop
pop
push
test
scas
andb
inc
das
jg
mov
out
sbb
sub
in
pop
adc
push
sbb
or
mov
mov
rorl
dec
mov
xchg
fs
mov
stos
icebp
add
push
push
je
pop
xor
mov
pop
fucomi
or
out
and
sbb
fstps
sbb
sbb
js
mov
cmp
stos
out
stc
pop
or
add
lock
ror
loop
mov
gs
lock
adc
pusha
pop
mov
in
rorb
jg
mov
push
fwait
push
pushf
dec
cmpsl
push
jae
pop
pop
or
cwtl
or
add
mov
fiadds
notb
jl
lods
dec
dec
sbb
inc
ret
ret
lods
xchg
lods
cs
cmpsl
lahf
add
leave
ret
outsl
movsb
aas
icebp
inc
fstl
cmp
andl
shlb
push
pop
mov
mov
adc
call
in
lods
scas
fdivrp
mov
mov
sbb
jns
pop
popa
xchg
daa
mov
xor
mov
push
ja
mov
movsb
sbbl
in
jp
xchg
mov
inc
aam
xor
mov
popa
les
flds
mov
jg
ljmp
jnp
dec
gs
je
cmpsl
insb
das
dec
add
pop
pop
push
rol
mov
adc
or
fnsave
shr
inc
sbb
data16
inc
sbb
mov
into
adc
pop
jg
mov
mov
mov
imul
inc
decl
lahf
test
cmpsb
xchg
jg
mov
or
xchg
pop
cs
push
jmp
push
mov
sub
popf
lahf
fs
cli
lods
sbbb
pushf
pop
pushf
or
bound
and
inc
hlt
mov
js
pop
test
xchg
xchg
lret
sbb
dec
mov
mov
test
or
je
int
dec
sub
and
jg
push
hlt
sub
xchg
mov
xchg
jl
adc
mov
xchg
cmc
cmc
mov
mov
xor
and
sbb
mov
sarb
add
jb
or
js
push
or
hlt
cmp
xchg
push
push
inc
sbb
and
cwtl
and
ficompl
push
ret
lahf
out
pop
mov
mov
and
in
repnz
cmp
or
ja
pop
mov
and
fs
shll
and
stos
jo
lds
sub
jl
faddl
sahf
data16
adc
xor
lods
cltd
lahf
repz
pop
inc
sbbb
negb
adc
in
out
or
add
add
rcrl
aam
ficompl
push
sub
out
imul
jbe
sub
push
std
movsl
pop
xor
into
data16
add
jae
in
adc
xor
sub
scas
xchg
xchg
jg
into
mov
add
pop
test
sahf
add
cmpb
es
cld
stos
xor
aad
add
jo
inc
jbe
mov
lea
and
pop
icebp
pause
push
orl
add
adc
std
popa
cmp
dec
imul
cmc
mov
xorb
mov
cli
push
popf
add
xchg
xor
or
fs
ljmp
ss
push
cld
sub
fsubr
ljmp
loop
sub
setne
loop
ljmp
pop
or
movsl
fildl
xchg
adc
in
dec
leave
dec
mov
lcall
mov
ficoms
jp
mov
push
addr16
dec
xlat
jle
out
int3
xlat
sub
repnz
loopne
fld1
in
xor
and
and
xchg
jle
cltd
popf
cli
test
sub
pop
xchg
jle
push
jle
rclb
xchg
stos
addl
aas
out
rcrb
mov
adcl
imul
jne
cmp
xor
movsb
test
jnp
test
or
fwait
pop
mov
jg
rcrl
mov
sarl
or
daa
daa
mov
loope
dec
xor
dec
fistpl
xchg
roll
sub
subb
test
push
lods
fs
fistpll
push
add
loope
push
loopne
filds
pop
loope
sahf
xchg
inc
add
lret
adc
repz
stos
std
push
outsl
fidivs
arpl
inc
mov
cs
repz
jp
cmpsl
push
xor
test
jns
inc
jae
nop
add
and
jg
test
dec
jo
mov
pop
hlt
into
popf
loop
mov
push
call
dec
cld
jno
push
jno
jae
and
ja
xchg
push
mov
push
ja
movsl
mov
cmpsb
push
aad
hlt
testb
jmp
sahf
cmp
repnz
dec
inc
adc
pop
xchg
or
int3
mov
pop
push
mov
fsubr
bound
lcall
out
fildll
lods
jne
jl
or
das
lcall
cmpsb
shrl
add
xorb
lahf
pusha
inc
pushw
jae
jge
or
imul
and
cmp
int3
mov
mov
jb
add
icebp
cmp
jne
js
pop
dec
and
jno
cmpsb
mov
jp
dec
cs
pop
mov
jne
mov
lods
fadds
data16
or
call
fnsave
sbb
ficoms
pusha
mov
iret
pop
mov
push
mov
ljmp
jae
out
jbe
into
and
fcmovu
in
pop
fbstp
out
cmp
or
dec
movsb
and
jl
xchg
mov
sub
int3
mov
inc
pop
lock
inc
fistpl
mov
pop
mov
enter
xchg
scas
add
cwtl
sbb
stos
add
cs
xor
pop
adc
icebp
mov
xor
cltd
js
addb
add
fildl
mov
cmp
in
xchg
mov
aaa
stos
stos
and
fidivrs
push
pop
mov
out
add
cltd
dec
lods
lahf
popa
insb
jmp
and
cmp
std
mov
in
adc
inc
mov
xchg
movsl
mov
add
roll
lock
fdivs
subps
sbb
insl
arpl
sub
adc
jl
fimuls
subl
adc
icebp
mov
repnz
mov
jp
sub
inc
ficoml
sarb
mov
push
fnstsw
cmp
cmp
ljmp
enter
sahf
or
mov
or
xchg
and
mov
inc
mov
and
enter
xchg
xchg
ret
clc
repz
out
xchg
push
dec
or
std
not
comiss
xchg
cmp
stc
vprotq
dec
inc
cld
stos
test
into
ds
into
aad
movsl
jae
fimull
int3
adc
test
or
jnp
bound
aam
push
cmp
cmpsl
ss
inc
test
es
cld
pop
dec
push
xchg
cmpsl
mov
je
scas
insb
gs
sbb
jle
mov
in
pop
and
dec
clc
inc
repnz
jbe
cmp
xor
xor
and
fnstenv
pusha
mov
in
cmc
sbb
dec
cltd
rcr
rol
pop
cwtl
mov
jg
dec
je
cmpsl
aas
in
ret
xchg
out
jnp
lret
dec
lcall
xor
mov
cmpl
rol
and
sarl
out
xchg
fldenv
es
or
loopne
inc
dec
mov
lock
incb
imul
mov
divb
xchg
mov
pmulhuw
test
repz
mov
mov
hlt
jae
pop
dec
insb
lcall
sbb
ja
loope
dec
mov
mov
insl
in
cmp
adc
pop
lock
pop
lock
or
xchg
pop
and
jns
xor
xchg
mov
mov
adc
fidivl
cmp
cmc
push
flds
mov
xchg
bnd
insl
mov
and
cmpsb
add
mov
outsl
sbb
aam
sti
lahf
inc
adc
movsb
imul
bound
cmpsl
pop
xor
or
jae
movhps
ds
adc
mov
pop
pop
add
lcall
test
jmp
push
shl
lds
jmp
jne
scas
mov
daa
nop
bound
cmp
flds
sbb
xor
xor
dec
ds
jmp
and
add
add
pop
mov
jg
mov
and
jb
xor
loop
sub
adc
push
inc
out
push
push
mov
adc
cmp
lods
aam
rsm
xor
and
sub
mov
mov
aad
das
jle
cmp
sbb
fisubs
adc
and
xchg
lock
or
mov
sub
or
pop
push
int
sbb
and
mov
and
in
mov
inc
into
in
out
flds
pop
imul
shlb
mov
cli
shrb
push
stos
popa
jae
xor
jecxz
pop
pop
jae
sub
testl
mov
popa
pop
ret
pop
inc
push
rolb
aaa
frstpm(287
push
xchg
mov
inc
fwait
inc
sarb
cmp
jno
xor
sbb
dec
pop
or
ljmp
sbb
ret
or
scas
pushf
sub
outsb
das
xchg
in
lea
or
jae
jb
mov
lret
or
xchg
jmp
adc
inc
dec
fs
xor
mov
adc
adc
subl
pop
and
insb
and
jle
inc
lret
std
cs
sbb
dec
iret
or
mov
push
mov
loop
cmp
outsb
divb
mov
dec
or
fdivs
add
dec
lods
adc
out
into
and
push
in
mov
outsb
scas
pop
scas
mov
push
mov
fidivrs
cli
push
es
aam
iret
cmp
add
adc
nop
pop
bound
imul
cmp
mov
loope
repnz
ret
mov
pop
and
mov
xor
dec
dec
xor
repnz
rcrl
dec
mov
add
mov
int
lds
or
sti
testl
lods
popf
outsb
add
and
lods
test
xor
xchg
mov
fstpl
xor
mov
cmpsl
mov
or
into
cmp
lret
clc
movsb
stos
xor
out
xchg
add
inc
cmpsb
je
sbb
and
mov
dec
inc
add
loopne
movsl
push
xchg
in
pop
jne
addr16
adc
dec
movsl
sbb
mov
icebp
dec
rcrl
fsubp
jno
or
scas
lahf
shll
inc
or
mov
arpl
mov
jno
jl
mov
stos
mov
inc
jg
pop
dec
in
xchg
dec
clc
jns
lahf
icebp
mov
sub
push
movsb
push
imul
mov
dec
imul
pop
mov
sub
jns
mov
ss
sub
cmpb
or
mov
sbbb
pop
test
cmp
addl
stc
cmpsl
pusha
push
jecxz
pop
repnz
mov
jmp
rcl
push
test
pop
mov
sub
pusha
popf
mov
lret
aam
xchg
je
pop
pop
add
aas
nop
mov
adc
daa
fstp
cmp
sbb
in
mov
fdivs
adc
adc
inc
and
outsl
sub
pop
mov
and
push
jp
and
mov
xchg
inc
or
cmp
rol
in
xchg
outsb
xor
mov
pop
out
decb
inc
std
or
pop
aam
mov
push
ss
mov
loope
scas
aad
aas
shrb
jg
repnz
add
mov
mov
mov
mov
in
aas
cli
out
cmpl
jmp
cmp
in
in
pop
push
pop
div
fcomip
fstpt
ja
cmp
xor
rorb
mov
and
jp
inc
mov
xor
sbb
sub
scas
repz
xor
pop
xor
xlat
pop
xor
mov
inc
ss
mov
scas
repnz
test
scas
add
mov
test
mov
cmp
hlt
decb
daa
pop
cwtl
mov
lret
iret
jbe
loope
rcrl
push
mov
sbb
dec
lock
dec
dec
mov
push
cmpsl
mov
mov
add
mov
adc
mov
stos
ljmp
popa
sub
inc
ficompl
sbb
ja
sti
fistpl
repnz
jge
js
cmc
mov
jl
mov
outsb
pop
inc
adc
pusha
or
div
idivb
and
div
xor
mov
xchg
cmp
mov
adc
and
add
sbb
test
cwtl
ds
lea
stc
aas
sub
xor
lret
mov
sahf
sbb
scas
dec
lea
das
divl
rorl
xlat
push
imul
sbb
xor
inc
aam
and
mov
icebp
outsb
pop
mov
dec
mov
and
jmp
and
jo
push
cmp
and
dec
es
lock
pop
mov
dec
sub
xor
inc
inc
movsb
xor
out
es
insb
lret
cltd
xchg
clc
test
sub
mov
sub
insb
adc
cmpsl
xor
jbe
jp
addb
jo
popa
pop
push
js
xor
and
aas
outsl
in
stos
bound
in
sub
xchg
lahf
lahf
sbb
sbb
sbb
sbb
lahf
mov
int
fidivrs
mov
clc
jge
jl
xchg
fcmovne
sbb
mov
pop
out
sub
xor
xlat
add
and
mov
adc
fucomi
test
push
adc
pop
lock
pop
pop
imul
outsb
popf
cmp
int3
fstpt
cmp
cs
pop
xchg
push
bnd
enter
sub
daa
cmp
stos
jmp
mov
mov
jnp
icebp
xor
leave
xchg
or
push
stos
stos
shrb
push
sahf
add
out
je
test
movsl
mov
dec
arpl
or
imul
inc
jne
pop
mov
or
lds
test
pushf
iret
divl
xor
mov
sub
daa
arpl
fstl
loopne
xor
push
mov
add
cwtl
mov
mov
or
mov
mov
pop
not
xchg
lods
pop
iret
dec
pop
adc
loopne
sarb
sub
rcrb
dec
push
cmpsb
inc
popf
test
ret
push
lret
adc
cs
dec
pop
into
frstor
mov
mov
out
inc
js
mov
add
sbb
xchg
push
cmp
jle
xchg
pop
xchg
push
call
vpcomuw
jne
sbb
push
inc
sub
out
repnz
add
fnop
fs
loop
dec
pop
lods
add
adc
scas
lds
jne
sbb
inc
ror
mov
out
mov
mov
in
push
fnstsw
and
imul
xor
out
adc
test
stos
std
ja
adc
add
outsb
mov
in
mov
cmp
push
je
shll
xor
cmp
call
cmp
insl
adc
int
fsubl
mov
aad
ss
call
adc
cmp
aaa
sub
lods
sbb
sub
jle
pop
mov
cmp
jns
mov
jo
cmp
std
pop
shlb
out
xchg
fxch
popf
sub
jmp
scas
add
lds
aaa
mov
mov
in
jmp
aaa
orb
into
push
inc
subw
jb
inc
mov
adc
lods
and
imul
jnp
insb
rcll
fisubs
in
scas
push
pop
es
dec
jge
xor
inc
cmpsl
imul
pushf
jno
loop
sub
inc
add
mov
ja
mov
ja
imul
data16
push
adc
xchg
lret
ror
inc
pusha
loopne
arpl
xchg
jge
arpl
xor
cld
lahf
bound
mov
cli
xorb
imul
xchg
lds
or
cld
xor
jle
fsubrp
sub
add
test
ljmp
fsubrl
inc
jbe
push
out
push
mov
cli
in
cld
dec
imul
pop
fildl
push
je
sub
rorl
lods
dec
jo
mull
adc
cltd
and
in
pop
sbb
pop
push
xchg
mov
add
cwtl
out
jge
sti
les
call
jbe
stos
cmpl
fstpt
xor
push
sti
mov
sarb
incb
shlb
add
imul
outsl
cmp
xchg
inc
test
aaa
mov
adc
push
mov
pop
subb
lea
sahf
loope
and
loope
subl
ss
push
push
jle
mov
fwait
pop
xchg
js
gs
pop
iret
jle
push
fadds
aam
cmpsl
into
outsl
hlt
outsb
xlat
rorb
js
jae
inc
sbb
jmp
enter
adc
cmp
inc
shrb
fiadds
loope
dec
push
mov
jl
mov
arpl
lods
into
add
push
ret
stos
add
xchg
decl
sti
pop
lcall
xchg
or
jno
test
iret
leave
test
cltd
mov
out
jle
jmp
sub
out
add
adc
stc
and
stos
cmp
jl
gs
jmp
data16
pop
stos
xchg
mov
lcall
shr
push
pusha
push
ds
sub
jns
inc
out
mov
std
sbb
lahf
mov
mov
into
xchg
push
add
out
jp
insb
pushf
xchg
add
testl
fstl
adc
hlt
loope
adc
or
lcall
sub
xchg
fldenv
lret
ljmp
pusha
xor
pop
push
das
adc
adc
sub
push
fldenv
pop
pop
add
or
call
mov
xchg
iret
and
lods
cmp
cmpsl
jne
fnstsw
mov
sbb
rol
push
dec
in
adc
mov
mov
cwtl
movsb
in
data16
pop
adc
sub
lret
mov
scas
mov
jb
mov
jbe
adc
loop
pop
or
adc
mov
shlb
lods
adc
fisubs
icebp
mov
cwtl
stc
sbb
and
lds
xchg
add
mov
inc
popa
insb
pusha
test
out
es
xor
fadd
in
movsb
xor
aam
jo
mov
ss
ret
cmc
ss
pop
mov
and
in
int
imul
mov
mov
pop
ffree
aas
mov
add
fadd
pop
popa
cwtl
out
test
ljmp
cld
dec
or
dec
push
andl
add
test
lods
or
mov
imul
jae
dec
or
in
int
adc
xlat
test
mov
jo
mov
add
in
insb
ljmp
daa
and
xor
subl
sbb
sub
push
cmp
pop
push
sbb
dec
pop
cltd
xchg
inc
fs
mov
aam
or
lods
pop
xchg
mov
rol
mov
mov
dec
jnp
stos
test
data16
add
xchg
repz
and
mov
or
je
push
aaa
push
imul
fiaddl
cli
or
scas
mov
sub
jge
lods
mov
nop
mov
lcall
ja
lcall
insb
mov
iret
sub
jp
xchg
enter
sahf
mov
loope
rol
aas
fnstcw
pop
mov
lret
bound
imul
aam
mov
std
mov
push
jb
and
mov
jae
outsb
and
nop
js
mov
outsb
ret
int3
aad
sub
pop
jecxz
jg
xchg
call
dec
mov
cmp
test
mov
mov
cli
mov
inc
inc
mov
out
or
adc
mov
jae
sahf
scas
jmp
addb
into
xor
jne
idivb
jl
xchg
jbe
shlb
lahf
push
outsb
xchg
inc
dec
call
andl
cld
xor
repz
mov
sub
mov
cmpsb
dec
inc
jb
xlat
scas
mov
and
mov
sahf
pop
jp
inc
push
popf
xlat
sbb
hlt
in
pop
jecxz
and
hlt
fldt
dec
aaa
int3
test
adc
mov
adc
jae
clc
js
xchg
and
dec
lock
and
push
or
sbb
iret
sub
les
ret
scas
mov
jb
ret
out
mov
call
pop
jl
and
fwait
outsl
dec
rorb
xor
test
cmp
leave
xor
mov
icebp
sti
inc
fisubs
cmp
inc
sbb
int3
loop
jb
dec
pop
jns
das
inc
pushf
mov
jmp
sahf
xor
push
adc
lcall
mov
pushf
inc
fstp
outsl
mov
push
or
insl
inc
ret
fistpll
dec
imul
jae
cwtl
test
icebp
nop
fwait
or
push
addl
add
ffree
stos
adc
sbb
ret
push
repz
les
out
sbb
jns
push
dec
pop
mov
sub
jbe
pop
xchg
loopne
fisubrl
push
pop
xchg
lcall
and
pop
jmp
sbb
inc
das
pop
inc
mov
in
dec
or
add
mov
xchg
mov
sbb
in
imul
arpl
xorb
ret
pop
shlb
and
popa
insb
push
lock
outsb
adc
lods
push
or
aaa
xchg
int3
pop
push
dec
pop
flds
add
sub
sbb
repz
ds
adc
jno
dec
aaa
sti
adc
jmp
cmp
adc
psubsb
mov
cli
cmc
orl
fistpl
roll
push
lods
mov
mov
popa
lds
cli
push
inc
dec
mov
pop
daa
imul
xchg
mov
cmpsb
mov
fiadds
int
jge
push
and
in
aad
fadd
stos
adc
lcall
out
repz
lock
mov
xor
arpl
jecxz
insb
int
pop
mov
pop
push
mov
outsb
outsl
push
mov
mov
inc
dec
inc
adc
into
decb
lcall
fwait
push
rcr
push
mov
or
test
inc
aas
xchg
pop
je
and
pop
and
aam
dec
frndint
dec
cltd
mov
lock
lods
fisubs
daa
xor
hlt
fbstp
stos
js
inc
adc
cmpsl
sub
cwtl
jns
add
cmp
insb
inc
push
mov
xor
pop
dec
sbb
dec
sbb
stos
ja
xchg
or
xchg
cmp
sub
les
test
add
push
shll
es
push
fs
cmp
mov
or
cmp
movsl
mov
faddl
lea
sbb
int3
jg
dec
inc
sub
movsb
mov
cmpb
das
sbb
cmovle
loopne
pop
add
cmc
enter
mov
shll
icebp
imul
pop
mov
sbbl
icebp
mov
and
cmp
or
out
or
pop
in
mov
xchg
nop
pop
flds
pusha
outsl
sarl
lods
and
cli
repnz
jns
fcom
push
fidivrl
push
movsb
insl
mov
push
push
inc
lock
mov
lret
inc
cltd
add
int3
mov
or
mov
jns
xor
adc
dec
aas
hlt
int
ljmp
sub
cmp
aam
cmp
test
lret
xor
cmpb
leave
sub
xor
inc
and
clc
js
gs
cmp
and
sub
mov
aam
incb
xor
or
pop
mov
arpl
jnp
insl
rcl
lcall
fsubs
xchg
jle
or
add
push
cltd
fmul
fdivrl
adc
std
or
dec
daa
push
sub
cmc
cmc
or
push
cmp
mov
add
and
adc
sbb
popf
xor
mov
leave
mov
lock
cmp
sub
push
mov
adc
jnp
ficoml
cld
imul
and
es
add
push
xor
mov
aam
xchg
pop
movsl
mov
mov
jmp
sahf
sbbl
fldl
pop
sub
push
push
std
mov
dec
in
adc
or
aaa
xlat
adc
sub
xlat
xchg
pop
adc
cmc
xchg
test
add
add
test
mov
pop
mov
push
jmp
stos
mov
sub
jecxz,pt
loopne
and
repz
and
cmpsw
sub
jg
test
inc
cmp
jg
repnz
cmc
pop
cmpsb
mov
push
xorb
cld
sti
push
cwtl
push
incl
and
mov
out
mov
sub
addr16
or
xchg
mov
bound
xlat
xchg
add
pop
inc
mov
xchg
mov
call
xchg
in
add
push
lds
and
push
test
mov
add
push
jae
inc
rorl
jmp
enter
lcall
jmp
mov
or
sahf
ds
mov
rcrb
cwtl
lret
outsb
in
sub
mov
sub
add
dec
push
push
lea
xlat
inc
sarb
aas
and
cwtl
mov
and
and
sbbl
inc
add
sbb
das
cmp
outsb
movsb
ror
cmp
addr16
adc
push
jg
movsb
adc
js
lods
testl
sarb
pop
addb
stc
aas
xor
cmc
arpl
push
sub
mov
lcall
dec
sbb
pop
jbe
and
inc
js
flds
or
std
lds
push
mov
ljmp
pop
jmp
jae
fsts
sbb
adc
cs
test
xor
nop
into
push
sarb
jecxz
cmp
sbb
jecxz
ds
cmp
mov
outsb
mov
pop
into
popa
mov
and
aad
scas
mov
sti
mov
js
jnp
push
movsb
aas
popf
ret
sbb
or
lea
movsb
inc
js
pop
inc
test
imul
adc
pop
adc
xchg
es
dec
xor
mov
mov
lahf
loop
dec
mov
sbb
pop
les
pop
rcll
sub
je
cmp
inc
leave
mov
fmulp
add
in
lahf
inc
les
mov
jge
data16
sub
mov
dec
insl
mov
pop
lret
dec
or
and
sahf
shr
scas
std
cmp
mov
adc
loope
cmc
or
int3
cmp
xchg
lret
sub
mov
das
and
repnz
xchg
or
sahf
shll
roll
adc
stos
les
jge
les
or
jecxz
push
enter
add
loope
gs
fdivrp
ficoml
pop
js
push
mov
cli
sbb
in
bound
mov
repz
adc
xor
jl
pusha
mov
or
jg
adc
loop
jb
sub
stos
or
cwtl
icebp
inc
pop
xlat
push
pop
jno
mov
pop
or
stc
push
sub
pusha
scas
sbb
cld
rorl
mov
loopne
das
cmp
push
xchg
leave
adc
in
sbb
scas
in
and
pop
out
scas
cmp
adc
adc
sub
jmp
das
xchg
lcall
mov
in
shll
mov
sbb
and
sub
scas
cmpsb
mov
mov
or
mul
das
xchg
js
aam
outsb
add
pop
pop
mov
push
sbb
repnz
or
cmp
push
adc
repnz
adc
mov
xchg
gs
add
sti
sub
or
xchg
adc
fwait
inc
jmp
outsl
cs
sbb
test
cmp
and
adc
repnz
or
ja
test
push
jle
pop
sub
rorl
les
cmp
ret
lret
cmpsb
mov
sub
jae
sahf
or
jno
dec
mov
or
push
arpl
jg
push
ljmp
jns
mov
xchg
cs
and
cld
shrb
stc
add
call
out
xlat
jo
popf
repz
mov
dec
mov
pop
xchg
int3
gs
xchg
or
ret
add
ja
in
stos
sub
call
test
in
enter
aad
push
insl
iret
jp
cmp
test
and
adc
popf
enter
xchg
sbb
je
jecxz
jmp
or
mov
pop
push
sub
push
pusha
and
negl
stos
or
push
bound
in
or
add
and
pusha
sub
out
fisttpll
inc
jecxz
xor
repnz
out
in
cmp
loop
aas
xchg
cs
dec
jns
xor
repnz
sub
mov
or
dec
mul
scas
inc
mov
push
js
mov
mov
dec
movsl
ljmp
imul
sub
pop
sbb
xor
ret
add
or
jns
xchg
ss
or
out
out
cmp
mov
jne
sti
mov
inc
nop
dec
mov
pop
in
mov
out
insb
add
in
ljmp
repz
sub
ret
add
pop
int
and
jno
add
mov
xor
std
call
xchg
test
repnz
push
pop
mov
test
jae
xor
lods
movsb
pop
mov
mov
jne
inc
es
dec
or
stos
dec
scas
mov
mov
ret
aam
push
mov
lods
sbb
test
stc
shll
push
nop
jp
lahf
xor
sub
xor
xchg
ss
cld
adc
sbb
inc
lahf
jl
out
ja
cld
jl
or
xlat
scas
dec
fs
hlt
mov
xchg
mov
dec
aam
sar
jmp
cmc
inc
mov
pop
mov
test
mov
push
ret
stc
js
pushl
pop
rcrl
xchg
xchg
pusha
dec
lret
jg
movsl
inc
xchg
jns,pn
sub
ja
sub
cmp
or
ret
stc
in
jl
xchg
fcomi
test
and
enter
in
test
dec
fdivs
outsb
repnz
aaa
pop
pushf
hlt
mov
cmp
sub
cmovae
pushl
andb
out
mov
outsb
add
inc
in
mov
push
daa
fucompp
jl
std
sti
dec
add
or
mov
jmp
add
xor
inc
fwait
mov
icebp
pop
shl
and
sar
xchg
xor
jnp
or
out
cltd
scas
jnp
push
out
loop
fs
lock
push
loopne
aad
fmuls
fwait
xchg
inc
xor
pushf
pushf
mov
mov
call
mov
mov
imul
aam
in
and
das
mov
mov
xchg
or
stc
test
mov
jbe
stos
aaa
iret
cmpsb
sub
and
out
mov
loopne
and
cmp
push
in
mov
iret
stos
int
sahf
push
loope
mov
mov
je
xchg
sbb
sbb
jge
fldenv
shr
pop
dec
jno
shll
pop
scas
loope
fcoml
cli
xchg
sub
inc
cltd
or
incb
divl
sub
sbb
fidivl
icebp
mov
xor
sub
rorb
push
add
test
je
aas
cs
add
jne
sub
int3
pusha
ljmp
gs
mov
aas
jge
sti
fmul
and
add
daa
addr16
jmp
dec
dec
and
xchg
imul
dec
mulb
pop
out
lods
stc
lahf
test
xchg
in
mov
mov
pop
fnstenv
xor
mov
push
sub
sbb
push
sbb
mov
mov
mov
inc
pop
dec
jne
jae
pusha
insw
cmp
pop
imul
ja
mov
scas
ret
dec
idivb
repz
mov
pop
fiaddl
std
pop
sbb
adc
mov
adc
out
dec
inc
shlb
cs
mov
push
mov
stc
lods
mov
bound
push
icebp
adc
sbb
xchg
rorb
or
imul
sbb
jns
rorb
arpl
dec
mov
scas
roll
and
pusha
sub
lods
cmp
dec
inc
mov
sub
int
test
fwait
into
stos
aad
pop
ret
jmp
test
stos
fsubrp
repnz
xor
cmpl
mov
cwtl
or
div
pop
psllw
jmp
cmp
cmc
and
popf
mov
jmp
clc
cmp
push
dec
sbb
sub
sub
mov
fs
andb
push
pop
xor
cltd
adc
cmc
sbb
pop
dec
movsl
es
outsl
lahf
insb
leave
adc
sti
out
stos
stc
cmpsb
hlt
jb
add
xlat
and
icebp
mov
adcl
dec
pop
icebp
fcoms
dec
inc
push
ljmp
xchg
cwtl
dec
mov
dec
cwtl
and
bound
std
dec
cmc
mov
fwait
hlt
aam
or
mov
mov
shl
dec
cmp
mov
push
in
jne
adc
in
nop
dec
inc
loope
xlat
push
test
clc
rcrb
and
push
ret
fiaddl
or
jecxz
insl
sbb
push
push
xor
adc
repz
lods
inc
push
movb
mov
add
push
int3
fcoml
imul
test
fidivl
scas
sbb
lods
inc
movsb
loope
shlb
aad
cmp
repz
xchg
mov
daa
fmull
inc
cmpsb
or
inc
in
jp
test
iret
fadds
rorl
pushf
pop
mov
inc
jo
in
push
pop
inc
mov
pusha
pop
ljmp
decl
adc
sbb
div
cmpsl
scas
inc
sub
push
lock
sub
ss
pop
popa
lods
call
sahf
imul
ds
dec
mov
push
push
iret
outsb
call
mov
sub
jecxz
xchg
pop
jmp
xchg
fnstcw
inc
mov
xchg
call
add
movsb
sub
fstps
push
in
pop
adc
dec
adc
push
and
icebp
idivb
inc
out
add
inc
jns
imul
dec
pushf
add
cmc
ret
arpl
mov
sbb
aam
sub
jns
mov
pop
arpl
cli
mov
movsb
out
int
mov
out
pop
jno
dec
dec
arpl
cmp
mov
in
pop
rolb
pop
mov
jp
xchg
in
cmp
xor
pop
cmpsb
test
mov
scas
push
fnsave
adc
dec
ds
push
mov
adc
pop
jle
mov
pop
insl
adc
mov
loope
mov
cmp
or
ss
lock
adc
xchg
push
mov
add
hlt
mov
cwtl
push
cld
loope
clc
out
cmp
pushf
fiadds
stos
push
lds
enter
pop
shl
jecxz
out
lret
into
rcrb
jo
insl
mov
pop
inc
sub
sarl
mov
int
out
cltd
shlb
adc
sub
fimuls
idivl
jmp
adc
int3
dec
mov
lahf
in
sub
inc
push
inc
push
mov
pop
inc
pop
jmp
outsl
xchg
jnp
stc
dec
ret
and
clc
iret
cmp
jle
test
xchg
pop
in
mov
pop
pushf
out
arpl
mov
mov
push
sahf
cmp
jbe
icebp
fistpl
popa
cmp
sub
roll
fildl
pop
dec
xor
pop
loop
aam
push
out
outsb
add
mov
sti
jne
xlat
mov
dec
push
sub
std
pop
pop
jp
sar
enter
pop
mov
sarl
lods
xchg
cmp
roll
xchg
imul
lock
stos
sahf
lret
or
or
imul
lds
aad
mov
ret
and
jo
xor
nop
lds
dec
sub
rorb
shl
popf
rcrb
fnstenv
rcrl
in
movsb
mov
adc
scas
les
fdivrs
cmc
gs
cwtl
mov
scas
es
adc
jae
xor
sbb
add
xor
out
nop
jmp
in
jns
out
out
mov
leave
popf
xchg
into
stos
inc
into
into
lods
inc
dec
inc
sbb
lcall
cmp
loop
iret
xor
jb
sub
loope,pn
fmuls
push
mov
jns
mov
sbb
or
into
fisttpl
sbb
cmpb
inc
pop
mov
sub
cmp
add
xchg
sub
std
or
xchg
pop
push
xor
add
je
mov
push
cmpsl
imul
pop
out
popf
divb
lahf
xchg
xchg
sbb
push
lahf
outsb
andl
out
lods
aas
adc
cmpsb
or
enter
xchg
dec
xor
ret
dec
and
sti
and
xchg
flds
xlat
ss
xor
xchg
mov
aam
fdivp
js
push
mov
fiadds
push
in
jae
push
jmp
dec
mov
adc
xchg
cmp
mov
into
xor
rcl
push
call
mov
push
pop
test
jmp
je
and
pushf
and
out
std
in
in
pop
repnz
mov
and
inc
aas
push
shll
dec
mov
push
imul
cltd
nop
pop
pop
cmp
sub
in
fs
nop
std
push
cltd
push
jl
pop
sub
repz
scas
sti
sub
imul
mov
cld
leave
inc
push
xchg
cmc
sub
popf
shl
mov
adc
pop
push
adc
jge
jne
sbb
pop
inc
ret
sub
fcompl
pop
in
mov
xor
add
mov
clc
jno
cmpsl
fistps
lahf
fimull
out
sarb
xchg
cmp
insl
add
inc
pop
push
fcmovnu
aaa
and
loope
shll
xchg
mov
mov
in
xor
decb
ficoms
jns
jl
rolb
inc
mov
adc
xor
ret
mov
ret
popf
add
jbe
jo
pop
lods
test
gs
cmp
push
xlat
push
lahf
outsb
push
or
daa
dec
ret
jge
pop
mov
add
aad
sub
pop
dec
aaa
loope
sahf
push
xchg
nop
sub
cli
mov
and
sub
cmp
or
pop
mov
pop
lock
shrb
mov
pusha
test
adc
mov
adc
or
rcl
sub
mov
add
and
pop
pusha
mov
in
cmp
xchg
into
in
xchg
icebp
mov
jae
loopne
test
int3
imul
adc
push
and
cmpsb
lods
std
mov
dec
ss
and
inc
fst
stc
adc
aam
aam
mov
mov
cld
and
sbb
sbb
fisubrl
mov
and
mov
dec
sbb
xor
mov
cmp
aaa
data16
and
es
fisubl
jne
nop
repnz
mov
xor
push
add
es
lock
iret
lret
test
test
les
out
cltd
mov
sbb
pop
inc
jmp
cltd
xchg
out
inc
fstpl
add
stos
inc
and
in
adc
mov
inc
fisttpll
jmp
cmp
mov
aad
pop
mov
iret
push
sub
mov
outsb
enter
stos
xchg
leave
cmpsb
mov
ja
sahf
ja
enter
mov
push
xor
mov
inc
cmpsl
xor
mov
mov
sub
neg
out
out
imul
popf
mov
inc
mov
outsb
mov
jae
lret
jl
dec
test
jae
add
sbb
adc
adc
ja
lret
lret
add
int3
decl
popa
lods
cs
adc
xor
out
mov
stc
push
xchg
sub
adc
push
loop
outsb
std
lret
movsb
das
mov
mov
mov
mov
into
push
xor
jne
daa
dec
sahf
mov
fidivrl
cs
push
or
leave
or
cmp
out
mov
rolb
popf
pop
sub
xor
lock
rolb
fistpl
cmp
je
or
imul
test
stc
push
lods
push
fldl
and
or
pop
jne
stos
mov
addr16
leave
cwtl
and
inc
push
xor
sbb
lods
ja
cmc
add
jnp
mov
xorb
ret
popa
jl
in
sahf
xchg
xchg
das
fsts
popf
les
fwait
ss
aaa
and
mov
push
arpl
jl
pop
pop
imul
cmpxchg
lea
add
inc
out
add
sti
jae
push
pop
add
sbb
call
leave
xor
sar
sub
push
or
jae
xchg
rcrl
jecxz
inc
fsubrl
cs
test
ss
pop
adc
adc
das
lds
fwait
aam
cmp
pop
pop
xchg
iret
jnp
imul
in
xchg
mov
xchg
cltd
in
cmp
mov
sub
pop
inc
imul
push
ss
movsl
add
rcrl
or
jle
lods
imul
xor
jmp
lcall
int3
out
out
cmpsl
jno
stos
je
cmp
push
mov
ret
enter
xlat
das
stc
cpuid
push
push
sub
in
out
iret
inc
mov
push
lds
xchg
insb
divl
dec
popf
ja
jmp
imul
or
dec
shlb
and
and
xchg
push
sub
inc
mull
jb
es
inc
jns
mov
in
loopne
and
mov
sbb
in
ret
pop
fidivrl
and
loopne
nop
addr16
stos
sbbb
xor
faddl
sbb
mov
loopne
add
add
pop
sar
mov
pop
jecxz
jae
push
stos
outsl
std
ds
aad
iret
jge
fwait
mov
push
mov
sbb
in
xchg
hlt
jge
jne
mov
popf
push
sbb
lret
stos
or
push
jb
push
cmc
push
data16
mov
sbb
ds
in
mov
dec
mov
loopne
loopne
adc
jecxz
mov
cmp
bound
jno
rcll
sti
outsl
sub
jmp
sahf
xchg
push
pop
out
outsb
pop
jne
jne
lret
mov
adc
inc
fstl
push
sbb
repnz
pushf
pop
in
lcall
ds
rcll
addb
pop
sbb
mov
test
cmp
inc
testl
jecxz
adc
outsb
jp
jecxz
cmc
cli
mov
jmp
cmp
xchg
add
cld
es
test
std
adc
jbe
jle
inc
inc
mov
out
aas
not
repnz
stc
cmp
mov
sbb
iret
push
xor
das
mov
push
sub
or
sbb
int3
cmc
xchg
pop
mov
ds
lods
jae
cmp
bound
sbb
test
ljmp
bound
ss
xchg
insb
mov
aam
gs
stos
insl
cli
xchg
xor
push
dec
sbb
mov
jb
cmp
ret
mov
and
inc
dec
pop
sbbb
aad
sahf
dec
cmp
sbb
loopne
dec
repz
xchg
cmc
and
rcl
or
jo
test
pop
sbb
inc
es
nop
jb
sub
dec
inc
daa
fs
mov
xor
adc
outsb
fsubrs
sbb
xchg
loope
bound
or
inc
or
popf
inc
push
mov
idivb
adc
fsts
adc
cmp
cmc
imul
push
sti
mov
cmp
xor
or
loope
hlt
aam
mov
cltd
pushf
ja
lcall
enter
mov
out
sarl
test
cwtl
mov
jge
notb
cmpsl
arpl
outsl
xor
pop
in
jns
lret
sbb
push
in
iret
ja
pop
sub
scas
add
fildl
dec
add
data16
cmp
sbb
dec
xchg
add
pusha
xor
push
repz
inc
icebp
rclb
ret
adc
das
add
or
inc
jns
inc
cmp
out
out
inc
pop
jg
subb
adc
rorl
lods
add
rcr
in
rorl
cld
mov
mov
xorb
lds
mov
aaa
add
mov
mov
jg
jg
add
in
mov
xchg
and
stos
add
xchg
inc
fnstenv
loope
cwtl
add
push
mov
dec
int
fcomi
aad
lock
xlat
dec
aad
loopne
xor
loop
addr16
loop
sbb
cmpsb
jecxz
mov
jne
or
cmp
pop
jge
sbb
aaa
mov
lret
cld
sbb
push
aas
xchg
cmp
cmp
jp
mov
jge
rorb
imul
dec
push
or
adc
push
iret
out
popf
fists
add
pop
in
out
popa
push
fcmovnu
push
cld
stos
cmpl
cli
adc
mov
add
lret
and
mov
mov
ficoms
aam
jae
sbb
scas
icebp
jb
xor
pop
inc
out
push
cmpxchg
cmc
ljmp
or
fwait
mov
pop
adc
das
call
jo
cld
sub
stos
sbb
cmp
xchg
divb
shll
shlb
adc
jp
int3
sahf
rol
sarl
fs
mov
ss
fldl
mov
mov
add
leave
pop
pusha
lahf
push
and
loop
push
jle
jecxz
fcmove
test
lret
pop
mov
lret
push
stos
jno
jnp
aas
ret
inc
and
gs
pop
shl
shll
dec
pop
xor
scas
sbb
and
mov
and
xor
inc
mov
xchg
repnz
mov
mov
xchg
std
leave
cmp
push
in
insb
roll
cli
sub
jmp
jo
or
jecxz
mov
ja
xchg
imul
or
lret
shlb
pop
adc
inc
daa
data16
scas
stos
pop
pop
cmp
sahf
xor
call
cwtl
les
ret
lret
push
mov
or
imulb
adc
jnp
mov
mov
add
iret
fwait
mov
dec
dec
jmp
and
xchg
pop
test
push
xchg
aas
int
int
push
clc
mov
stos
sub
and
shll
jg,pt
xor
jecxz
push
pop
or
xchg
jge
add
js
cmp
aas
or
mov
aam
jge
pop
xchg
jle
jo
data16
cltd
mov
jns
shlb
mov
loope
sub
loope
jbe
ds
out
mov
ret
jp
xchg
xchg
xor
out
xchg
jno
cmp
pop
into
jno
pop
faddl
push
xchg
stc
dec
cwtl
sbb
stos
lea
out
dec
hlt
mov
adc
sti
and
mov
mov
xchg
rclb
xchg
loope
scas
iret
inc
inc
sub
jmp
or
mov
sbb
pop
lea
xchg
jge
or
xor
jmp
fnstenv
xlat
fsubp
add
push
mov
add
cld
sahf
lock
std
rcll
add
push
movsl
push
ret
es
mov
mov
movq
cwtl
arpl
add
je
ret
sub
sub
outsb
stos
cwtl
xor
jbe
push
xchg
ljmp
or
jnp
push
inc
aas
pop
rclb
lret
not
mov
push
sbb
loop
insl
and
add
inc
push
push
or
mov
scas
into
cmp
imul
movsb
add
fs
outsb
xchg
mov
dec
out
lods
cmp
repnz
xor
and
add
dec
push
js
push
pusha
inc
pop
pop
aas
xchg
fxch
pop
jecxz
cmp
or
sub
add
lcall
sahf
mov
sbb
iret
daa
cmp
mov
mov
fwait
pop
pusha
xchg
sbb
xchg
pop
inc
stos
mov
cmc
jb
fsubrs
lock
adc
pop
push
ds
outsl
insl
add
data16
jmp
lods
inc
and
in
xor
scas
dec
pop
pop
fs
aas
mov
dec
mov
and
adc
mov
iret
add
popf
mov
repz
test
scas
daa
pushf
xchg
iret
test
loop
negb
dec
stos
js
mov
shrl
and
roll
negb
cs
dec
bound
aaa
mov
mov
mov
sub
lahf
les
xor
xchg
popf
je
mov
xchg
jmp
adc
jmp
mov
pushf
jne
ret
dec
rcll
pushf
mov
jno,pt
jno
push
xchg
xor
fidivrs
pop
pop
inc
call
xchg
push
pushf
pushf
mov
fcoml
inc
je
ljmp
cmpsb
loope
jle
cs
andb
pop
mov
mov
jns
xchg
xchg
roll
out
lcall
mov
repnz
mov
jge
inc
xchg
xor
mov
idivl
inc
in
push
aam
lea
bswap
cmpb
aad
fisubrs
adc
add
pop
loop
jmp
push
out
xchg
outsb
lret
fcoms
mov
xchg
out
fsubrp
push
lret
mov
add
mov
int
jo
cmp
dec
add
rcr
pop
insl
movsl
out
es
clc
pop
rclb
inc
shrl
test
xchg
insl
cmp
push
test
mov
push
es
ss
std
pop
stc
sub
repz
or
push
jns
data16
test
xlat
jno
xchg
sub
les
mov
mull
jg
repnz
test
xchg
sub
xor
in
pop
imul
jmp
mov
mov
inc
mov
jge
mov
aas
push
fxch
fsub
mov
xor
xorl
xchg
dec
bound
pop
sbb
ljmp
push
push
pop
divl
mulb
mov
ret
inc
lock
xor
subb
xchg
scas
xor
dec
fists
fnstcw
mov
inc
inc
popl
stc
cli
xchg
pop
push
pop
xchg
pusha
xchg
sahf
arpl
mov
or
inc
call
mov
repz
repz
addr16
repnz
mov
jge
mov
hlt
sbb
mov
lret
push
xor
cwtl
fwait
out
lods
xchg
aaa
cmpsb
mov
ja
mov
into
iret
int3
hlt
push
push
das
or
inc
mov
push
add
sarb
or
cltd
sti
lods
out
dec
rolb
and
aaa
mov
lods
adc
dec
sub
psrad
das
sub
mov
or
push
xchg
adc
mov
test
xchg
mov
xor
cli
and
mov
arpl
xchg
jb
jnp
lock
mov
adc
mov
loopew
pop
divb
xchg
es
push
hlt
cmp
shl
cmp
movsl
xchg
pop
push
xchg
jmp
or
sub
das
mov
leave
popa
loop
mov
gs
outsl
aas
divb
outsl
mov
xchg
out
addr16
and
fwait
imul
jnp
pop
jne
pop
in
test
and
mov
jle
mov
mov
sub
push
jmp
nop
mov
dec
fldpi
cmp
cmp
inc
stos
push
testb
out
loopne
jns
adc
jle
loopne
roll
xchg
fidivrl
fsubrs
shlb
fldl
stos
sub
lcall
pop
inc
js
negl
sarl
and
aaa
mov
jl
js
adc
dec
xlat
int3
icebp
xor
imul
or
sahf
inc
sarb
ret
sub
pop
aaa
push
mov
repz
stos
lock
movsl
cld
and
pop
jmp
rorb
mov
shlb
and
sbb
pop
pop
mov
xchg
outsb
lret
in
sahf
fisubrl
push
faddl
jns
mov
lcall
dec
loop
pop
push
mov
nop
xor
cmp
mov
cld
and
call
jae
sbb
mov
rcll
pop
xchg
cmpsl
inc
xchg
lods
jno
dec
int
jno
lds
lahf
nop
mov
repnz
sbb
fiaddl
or
and
movsb
and
mov
xor
adc
sbb
inc
push
sbb
add
or
iret
push
enter
xor
or
sahf
mov
inc
mov
xor
sbb
je
popa
andl
and
mov
mov
repz
iret
pop
bound
xchg
je
idivl
push
mov
mov
lods
sub
in
int3
mov
xor
xchg
sub
gs
fsubr
insb
je
int3
or
insl
ret
popf
loopne
enter
cmpsb
cmc
push
xchg
and
or
xor
xor
pop
push
pop
lcall
gs
mov
lods
clc
dec
adc
adc
test
sbb
xchg
repz
sahf
xor
incb
add
push
out
lret
jb
nop
std
icebp
cs
faddl
or
loop
mov
sub
rcrl
loopne
add
sbb
cmp
sub
stc
xchg
stc
xchg
das
cmpsl
mov
xchg
sub
loopne
xlat
adcb
outsl
jle
loope
and
adc
xor
cld
das
mov
shr
test
shrl
push
inc
pushl
adc
mov
cs
and
in
mov
test
popf
mov
fiaddl
xor
mov
or
loop
push
movsl
mov
in
add
push
inc
xchg
dec
xor
dec
inc
mov
lret
rcl
es
out
adc
inc
aaa
rclb
arpl
leave
cmp
fwait
fwait
inc
inc
ret
xchg
and
dec
push
lds
or
cmpsb
aas
mov
pop
sarb
stos
pop
lcall
mov
pop
pop
adc
push
jmp
jnp
push
and
je
mov
mov
in
push
cmp
mov
cmp
sub
push
int3
repz
cmp
mov
sbb
test
vmaxpd
or
aas
push
push
mov
jno
add
ret
fstpt
pop
stc
push
ljmp
xchg
hlt
sbb
push
dec
fadds
pushf
std
and
roll
lea
lods
iret
lock
mov
mov
add
jbe
loop
fmulp
int3
jge
fidivl
lods
dec
mov
fimuls
cmp
jmp
inc
cmp
pop
sbb
inc
xchg
ficompl
ret
add
outsb
sub
inc
mov
sahf
aam
aam
insb
mov
lahf
lods
cmp
jb
push
adc
or
add
popa
or
mov
popf
cwtl
dec
sbb
hlt
xor
add
fimuls
in
sbb
and
fisttps
popa
adc
jle
leave
sub
jg
mov
ljmp
jmp
mov
fisttps
icebp
adc
aas
nop
push
xchg
sub
push
int3
sub
mov
xor
cmpsl
pop
push
out
in
std
popa
jns
pop
sahf
out
insb
das
push
pop
xor
out
dec
add
jl
daa
sahf
clc
outsb
stos
dec
mov
shll
jge
cs
add
cltd
das
xlat
sub
lods
mov
or
rorl
call
mov
sti
fdivr
insb
or
cmpsb
push
in
outsb
mov
scas
aad
pushf
incl
and
scas
sahf
std
xlat
dec
ja
daa
mov
ja
or
add
jo
xor
dec
pop
and
loopne
insb
int3
xchg
sub
adc
jmp
imul
fucomip
dec
or
aas
pop
jg
pop
lods
sbb
inc
and
xorb
mov
daa
jae
dec
sub
dec
dec
mov
cld
sub
out
lock
add
bound
shl
mov
daa
out
dec
imul
std
inc
lea
xor
or
leave
sub
xor
add
hlt
jo
and
mov
mov
jge
add
dec
lcall
inc
aaa
nop
sub
or
repz
dec
mov
loope
sbb
inc
dec
mov
fucom
loopne
loopne
mov
out
jecxz
and
popa
inc
xchg
out
lcall
xchg
roll
or
push
inc
xor
fldcw
mov
pop
lahf
stos
lahf
lock
cltd
sbb
and
lahf
xchg
inc
ds
push
pop
std
gs
shll
aaa
sub
ficomps
jo
xchg
js
aaa
loopne
mov
test
aad
clc
pop
dec
xchg
mov
pop
push
xchg
cmp
loop
sbb
enter
dec
cmpsl
push
dec
xchg
xor
mov
adc
scas
xchg
lahf
pop
outsb
in
jp
orl
xor
xor
les
out
mov
std
imul
pop
adc
lret
add
adc
fstps
cmp
dec
push
ficoml
cmp
cmpsl
pop
inc
xchg
push
lea
cltd
xlat
int
loopne
fsubp
dec
xor
mov
movsl
cli
int3
xor
mov
mov
pop
ds
cmp
cmp
aaa
out
xor
dec
pop
cli
dec
stos
aaa
mov
das
sarl
aas
sbb
jbe
cmp
add
lea
ljmp
lcall
xor
push
push
insb
aas
flds
cmpsl
inc
xchg
ret
cmp
shll
gs
xor
xor
xor
mov
and
mov
pusha
decl
mov
sbb
mov
pop
ret
ror
scas
aam
cmp
add
and
xor
inc
dec
shr
out
xchg
jnp
les
jb
mov
lret
rcrl
add
cmc
fiaddl
or
insl
push
pop
call
stc
xor
test
pop
adc
pop
daa
mov
ss
and
dec
mov
sub
xor
xor
outsl
les
ret
cmc
ret
cmc
push
and
push
sbb
and
xor
add
hlt
sub
mov
jg
fdivl
ljmp
mov
es
adc
push
adc
xor
jbe
fnstsw
pop
sub
mov
cli
xchg
clc
xchg
cmp
cmp
popa
sub
push
lcall
sbb
cmp
adc
lret
insl
dec
pop
cmp
int
inc
jg
enter
mov
dec
aad
int
in
or
sbb
and
pusha
push
lcall
call
jge
or
inc
sbb
enter
mov
sub
cmpsl
bound
pop
nop
movb
pop
into
ljmp
push
mov
and
mov
add
js
js
jbe
jo
clc
stc
jb
or
sub
jmp
xchg
call
push
push
test
mov
xor
jne
inc
fsubrs
inc
push
stos
jbe
dec
imul
int
cmp
jbe
and
mov
fxch
mov
adc
push
dec
xor
xor
sbb
mov
lret
sbb
cli
lods
mov
in
jbe
xchg
xor
mov
popf
push
xchg
es
add
fucomip
inc
adc
add
and
or
and
and
sti
mov
or
and
or
adc
mov
and
rcll
and
or
push
shll
jmp
jmp
lea
mov
push
test
sub
add
mov
jl
pop
ja
stos
aaa
jae
ret
push
mov
and
cld
adc
mov
stc
test
fs
aas
imul
or
inc
sbb
fildll
dec
push
notb
leave
fisttpll
test
stc
mov
xchg
inc
les
adc
mov
lods
sub
pusha
movsl
xchg
pop
push
outsl
adc
mov
aaa
jnp
mov
adc
inc
xor
fisttpll
jg
xor
inc
rcll
pop
outsb
loope
mov
les
cli
mov
push
loopne
ja
add
repnz
int
sbb
xchg
jle
mov
jns
push
rolb
lock
push
jp
push
cmp
aad
lret
push
jns
shr
adc
mov
ret
pop
into
aas
cmp
insb
jbe
test
adc
vmovshdup
stc
cld
pop
arpl
dec
into
and
sbbl
les
outsl
lds
sub
mov
adc
lods
mov
mov
push
gs
test
or
adc
and
je
test
out
sar
add
mov
pop
pushf
xchg
mov
cmc
gs
nop
les
ds
hlt
push
les
addr16
mov
lock
and
in
inc
jno
push
pop
adc
xor
or
insb
xor
cmc
outsl
clc
cmpsl
cs
pop
push
add
jo
jns
mov
xchg
icebp
jmp
xchg
mov
test
add
cmp
pop
test
xchg
add
cli
lret
sti
inc
jecxz
pop
or
enter
lock
out
dec
lock
mov
xor
push
inc
bound
test
xor
mov
push
dec
imul
jno
pop
pop
cltd
subb
xchg
or
fldt
mov
push
out
mov
movsb
adc
int3
movsb
jg
mov
sub
mov
inc
pop
cmp
cwtl
adc
call
sub
ljmp
dec
ficoml
xchg
xlat
mov
jbe
mov
add
and
ret
mov
fiadds
nop
addr16
lret
add
xlat
lahf
cltd
cmp
adc
iret
push
or
test
movsb
mov
in
in
repnz
push
outsb
movsl
les
mov
jo
imull
jp
pop
xor
mov
aaa
fidivl
mov
cwtl
imul
aam
test
ljmp
xchg
inc
loop
xlat
xor
movl
cmp
push
fwait
jge
rcl
push
out
cwtl
out
cltd
cs
addr16
xchg
movsb
out
call
or
dec
jnp
int
add
mov
ljmp
adc
jnp
add
stos
sbb
mov
daa
cmpsl
cmp
fstps
lods
mov
pop
aaa
inc
lcall
stos
nop
sti
mov
outsl
clc
hlt
loop
xchg
nop
mov
pop
mov
popf
pop
add
in
jnp
sarl
addb
jp
call
mov
pop
fsubs
or
nop
aad
and
enter
pop
stc
es
data16
jl
inc
arpl
mov
out
and
xor
xchg
mov
fldenv
mov
cltd
add
rorl
sbb
call
movsl
sbb
fucomp
dec
or
pushf
cmp
and
fidivrs
xor
and
lret
stc
enter
fidivl
add
xchg
add
add
jecxz
mov
cmp
mov
test
cmp
add
mov
imul
mov
inc
sbb
int
pushf
clc
lcall
mov
lahf
adc
sahf
sub
test
fxch
push
mov
and
pop
ret
je
int3
pop
dec
pop
repnz
adc
and
std
pop
cwtl
hlt
jecxz
lods
into
dec
xchg
pop
jg
lcall
cmp
paddusw
and
pop
pop
movsl
adc
scas
lret
shrb
in
xor
pop
fsubr
sbb
xchg
inc
inc
xchg
push
int
xchg
xchg
prefetch
push
lcall
xchg
pop
cmpsb
fsubr
xchg
jge
aas
sbb
sarl
inc
push
fcmovnu
jno
les
inc
test
jbe
sub
cwtl
jo
popf
faddl
sub
pushf
and
in
push
iret
mov
jbe
mov
leave
sti
cwtl
sub
fcmovnu
pop
test
pushf
sbb
pusha
aad
ja
adc
call
jb
cwtl
xchg
mov
add
ret
test
addl
out
cli
mov
roll
daa
sbb
pushf
push
cmc
mov
shll
out
sbb
into
xchg
imul
xchg
jg
adc
rcll
sbb
and
bound
addl
jo
mov
icebp
lea
outsb
aad
ja
enter
push
lret
stos
lds
dec
sub
xor
cmc
movsb
rol
call
cwtl
lds
add
push
jp
pop
setle
xor
bound
push
test
mov
movsl
in
dec
call
cmpl
pop
mov
pop
jns
adc
ficoms
jno
addr16
mov
and
cs
pop
pop
mov
int3
mov
aad
sbb
cmc
sti
jbe
inc
cmp
sarb
aad
bound
and
mov
push
push
mov
test
pop
rcl
scas
adc
push
ss
movsl
mov
jns
mov
xchg
js
pop
and
lods
lods
sbb
mov
bound
or
sub
jae
dec
xchg
xlat
pop
in
repz
repnz
fucomi
loope
cmpsl
iret
push
daa
fldcw
xor
stos
fcomip
mov
inc
dec
inc
sbb
adc
lock
sahf
cltd
pop
mov
mov
es
mov
ja
int3
les
cwtl
cld
loopne
out
lcall
leavew
mov
mov
pop
dec
jne
mov
or
jne
pop
inc
mov
sbb
arpl
leave
test
test
icebp
sahf
or
jb
popf
call
lahf
ja
mov
pop
testl
jae
test
out
js
cs
psrlw
dec
sub
push
out
aam
lahf
inc
push
dec
fmull
clc
aad
pop
or
loopne
cmpsl
gs
sub
loop
rorb
mov
jne
or
int
xchg
adc
cmp
jo
or
mov
fsubrl
ficompl
int
cmp
scas
adc
mov
mov
dec
dec
pop
mov
fwait
scas
dec
mov
add
jae
fidivl
jmp
lock
arpl
loop
push
pop
sbb
iret
clc
pop
dec
jne
lock
cli
adc
popf
fimull
inc
dec
flds
cmp
mov
das
pop
pop
inc
add
pop
push
in
mov
ljmp
imul
mov
adc
sub
jg
push
bound
mov
ficomps
sub
arpl
mov
arpl
idivb
jo
cmp
aaa
or
repz
bnd
ret
push
jmp
push
lods
je
mov
cwtl
jno
xchg
loope
in
mov
das
mov
cmpsb
push
hlt
lea
xor
repz
inc
or
lcall
jle
sbb
mov
mov
lea
popf
cmp
and
adc
xchg
int
mov
stos
mov
and
cli
lahf
bound
xlat
je
xor
mov
jb
adc
push
js
xchg
outsb
test
lret
push
stc
cs
jmp
insb
jge
inc
cmpl
scas
cmp
stos
subps
repz
mov
inc
in
cltd
pop
mov
jg
int
jb
sbb
scas
adc
adc
xchg
imull
cli
xchg
push
ret
es
fucomip
jne
jp
and
push
cmp
xchg
sbb
adc
xor
outsl
popa
sub
js
ret
jns
pmuludq
lret
fimull
and
sbb
adc
out
pop
lcall
test
pop
or
orb
je
imul
add
xchg
daa
inc
pop
jns
test
test
scas
or
mov
fisttpl
mov
and
mov
dec
push
xchg
dec
sarl
bound
inc
dec
test
xchg
sbb
jne
and
cltd
inc
test
pop
mov
pop
pop
loop
aad
in
sti
test
sbb
rorb
add
jge
sbbb
xchg
std
cmc
mov
aas
mov
mov
insb
fldenv
nop
out
pop
rcr
mov
sti
outsl
xchg
push
stos
or
xchg
leave
cmpsb
pop
mov
stos
lods
imul
arpl
sub
inc
in
idiv
adc
js
pop
shlb
sahf
out
popa
mov
imul
into
stc
mov
std
inc
xchg
jne
stos
adc
icebp
xlat
movsl
xchg
clc
mov
adc
test
xor
flds
sub
and
jmp
in
pusha
movlhps
mov
mov
pop
int
jp
call
jne
lock
lret
fcomps
cmp
sarb
imul
mov
sub
sub
inc
inc
aas
pop
pop
adc
pusha
stos
fbstp
jno
inc
in
lret
in
int3
ljmp
div
test
fsubrs
stc
mov
xchg
out
jmp
lods
shll
lahf
push
add
repz
cld
cmp
jp
and
sub
cwtl
sar
test
mov
xor
add
cwtl
test
popa
xchg
and
add
int3
das
adcl
icebp
mov
mov
xorl
scas
push
outsb
add
add
push
mov
fcomps
push
pop
ds
mov
jbe
dec
fwait
ljmp
lret
cmpsl
mov
sbb
xlat
xor
xlat
js
xchg
push
jbe
push
push
cld
dec
adc
ss
lea
mov
shrb
pusha
inc
out
push
es
sysexit
idivb
icebp
daa
cmp
je
movsb
stos
sub
mov
stos
fidivl
cmp
in
and
xchg
xchg
lcall
push
cmp
sub
scas
mov
loope
cli
sbb
mov
sbb
stos
xor
sahf
gs
sbb
xor
cmp
adc
pop
stos
dec
cmp
je
popf
mov
xor
sub
shr
test
jns
jnp
push
mov
icebp
or
add
fstps
add
pusha
jns
adc
jae
jmp
insl
repnz
mov
xlat
xor
leave
cmp
insb
sub
add
cmc
or
stos
nop
enter
lods
int
and
push
push
pop
sbb
movsl
sti
mov
inc
cmp
adc
je
xor
jecxz
ret
push
and
mov
xchg
inc
pop
dec
xchg
mov
or
push
shrl
or
mov
lret
daa
lock
push
arpl
repnz
sar
ds
in
xchg
mov
xchg
mov
push
xor
enter
adc
data16
mov
in
sub
pop
arpl
test
push
ficomps
rcrl
sbb
sbb
aam
orb
lret
sbb
or
adc
dec
xor
in
aas
jb
mov
mov
xchg
ja
icebp
addr16
clc
xchg
xchg
sahf
enter
fdivr
sbb
lds
lret
pop
mov
pop
add
into
movsl
popf
mov
cmp
jl
adc
loope
mov
or
inc
add
and
sub
divl
sbb
jle
rcrb
jnp
sbb
cmp
popa
in
push
cmpsb
stc
xchg
inc
push
fmul
gs
je
jmp
mull
enter
lock
sub
arpl
imul
pop
loope
inc
push
lea
imul
sarb
dec
cld
fidivrl
lock
jne
mov
mov
mov
addl
or
dec
jnp,pn
push
mov
pop
push
rclb
pusha
in
and
adc
cld
out
out
dec
dec
sbb
divl
dec
fcmovnu
outsb
jmp
cwtl
sbb
repnz
adc
or
mov
ss
outsb
mov
pop
jno
lcall
add
cltd
dec
js
push
dec
adc
jno
rolb
jb
sahf
pusha
icebp
stos
in
push
inc
push
pop
xor
adc
xor
sbb
and
aas
and
int
sbb
xchg
lcall
cmp
xchg
test
lea
out
movsl
jbe
inc
lock
sbb
aam
pop
mov
sarl
pop
add
out
push
push
data16
mov
arpl
jne
ret
adc
inc
push
shlb
fisttpl
push
clc
add
pop
jge
sbbb
add
test
into
jge
addr16
sub
stc
lock
xchg
cwtl
gs
mov
jl
rolb
pop
sub
ds
imul
movsl
daa
ja
mov
and
aad
ud1
and
movl
iret
or
daa
xchg
jo
and
int3
adc
sbb
lods
call
mov
loopne
pop
pop
fists
and
cmpsb
pop
mov
js
xlat
lret
jo
inc
inc
inc
imul
cwtl
dec
ss
xchg
sub
es
and
add
sbb
imul
nop
aaa
mov
and
push
push
faddp
jne
es
ret
xor
pop
push
sub
enter
imulb
js
call
sahf
test
mov
sub
lret
add
out
fmuls
mov
repz
lret
shll
xchg
cmp
cli
cwtl
adc
insl
ss
sub
and
in
jg
inc
dec
jb
xor
scas
sbb
movsl
pop
into
sti
dec
sbb
shl
jae
movsl
addr16
adc
adc
adc
and
xor
adc
daa
sub
addr16
call
andl
jnp
arpl
ret
cmp
push
je
mov
mov
mov
sub
cmp
outsb
dec
call
cmp
insl
push
push
clc
cmpsb
insl
cli
adc
sub
jmp
or
leave
out
sti
imul
lret
pusha
call
pop
mov
popa
lret
inc
rcrb
aam
shll
push
pop
clc
repz
insb
aaa
or
xchg
mov
fnstenv
ss
pop
mov
cwtl
cli
cwtl
shrb
mov
mov
mov
in
xchg
push
xchg
fadds
scas
adc
lods
pop
in
adc
roll
test
push
dec
fs
ja
mov
leave
mov
adc
lret
test
pop
jns
jb
sub
jno
inc
pop
mov
aaa
mov
repnz
sbb
inc
add
mov
xor
clc
mov
nop
jns
ljmp
cmp
add
clc
sbb
jmp
enter
dec
mov
and
dec
adc
xor
cmp
push
sbb
test
stos
xchg
rolb
icebp
inc
pop
sub
mov
xchg
xor
push
cmp
cs
rolb
jl
and
nop
mov
pop
ss
std
mov
push
scas
mov
pop
aaa
xor
mov
int3
or
mov
mov
stc
cmpsb
out
outsb
dec
cmp
push
mov
cmp
xchg
sbb
fmul
test
repz
mov
and
andb
inc
push
xchg
mov
xor
mov
cwtl
adc
js
pop
mov
jg
inc
out
mov
in
jp
pusha
xchg
cmpsl
int
test
xchg
js
adc
andl
sub
int
sub
cmpsl
daa
shll
inc
jg
inc
adc
dec
movsl
add
fists
pop
lret
pusha
lods
sbb
push
scas
inc
data16
jg
xor
lods
mov
dec
decb
push
mov
les
dec
mov
outsl
lahf
and
rcr
push
add
mov
leave
in
push
repnz
js
insl
outsb
out
xor
adc
adc
pusha
jo
loope
mov
cmp
jae
xor
add
ret
insb
add
adc
out
sahf
out
mov
jno
mov
dec
out
arpl
cmp
jnp
and
add
pusha
jle
jge
pusha
js
pusha
aaa
pop
and
mov
dec
leave
in
es
vaddsd
pop
in
inc
es
pop
and
adc
pop
shr
pop
mov
int3
testl
sub
shll
enter
das
push
mov
push
ficoml
dec
fnstcw
mov
jns
aad
xor
inc
push
ds
sbb
mov
xchg
shlb
popa
jne
in
dec
fneni(8087
sub
and
mov
xchg
inc
mov
or
dec
mov
gs
mov
inc
repnz
xchg
sbb
aas
sti
jae
mov
fsubrp
lods
daa
movsl
int
cltd
stc
lock
ljmp
das
mov
pop
das
dec
mov
push
std
or
dec
idiv
lea
jge
imul
fimull
rol
ljmp
jg
addr16
int3
sbb
xor
mov
sbb
dec
xchg
cmp
xchg
movsl
inc
into
inc
xchg
bound
fisttpl
out
jmp
dec
test
fiaddl
mov
pop
je
inc
mulb
or
adc
shlb
out
cmp
adc
push
pop
dec
lds
cmp
scas
sbb
sub
mov
mov
lahf
stos
sbb
inc
inc
test
cld
mov
pop
and
fldenv
mov
popf
pusha
test
or
cmp
jecxz
loopne
cmpsl
dec
cltd
jmp
sbb
and
add
inc
and
fcoml
sbb
and
or
call
lods
enter
fwait
incb
mov
test
push
jo
iret
stc
cmp
mov
lods
mov
popf
jmp
adc
xor
addb
sbb
mov
cmp
cmp
shl
mov
cmp
mov
cmp
push
lods
scas
sbb
cmc
insb
rolb
sbb
adc
adc
movsb
jo
inc
movsb
ror
and
loopne
cmpsb
xlat
xchg
mov
pusha
jae
xchg
cli
imul
jnp
mov
cmp
cmp
mov
adc
arpl
addl
rcll
inc
cwtl
cmp
in
xlat
hlt
push
mov
and
mov
insl
add
pop
jle
test
jle
popa
mov
inc
fdivs
lods
test
aam
cmp
pop
add
cmpsl
pop
movsl
push
out
out
adc
sbb
xchg
nop
xchg
sahf
pop
xchg
nop
test
or
cmp
xlat
sub
outsb
inc
pop
xchg
pop
cmpsl
add
jmp
mov
dec
sub
clc
stos
pop
or
cltd
jg
jne
sbb
fdivl
std
aaa
inc
mov
mov
pusha
mov
mov
in
jb
dec
push
lea
jp
imul
mov
cmp
loopne
das
in
fstp
cli
loopne
cld
jnp
adc
les
jle
mov
pop
fwait
out
into
xchg
jae
in
jb
repnz
ret
pop
mov
dec
sub
daa
xlat
fdivrp
jg
and
aam
sbb
lods
cmp
subb
daa
xor
cmp
and
cmc
mov
stc
mov
push
dec
lds
sub
nop
adcb
and
fnsave
outsl
cs
adc
xchg
sahf
fwait
or
jbe
xchg
mov
stos
insb
push
add
and
sbb
arpl
pop
test
xor
cli
jo
subb
add
jge
shrl
jo
adcl
inc
rclb
push
inc
inc
cmp
rcll
in
std
adc
lock
inc
out
pushf
xor
sbbl
test
fisttpll
xchg
in
sbb
add
in
cmpsb
int3
je
stos
repnz
add
iret
push
lahf
xchg
inc
bound
sub
fists
daa
sbb
stos
dec
add
pop
jg
push
aam
shrl
repnz
lock
clc
push
jmp
in
ss
outsb
les
xchg
int
addl
stc
mov
inc
xchg
sar
xor
xlat
int3
out
int
cs
dec
sbb
stos
jg
xchg
out
stos
or
xchg
or
mov
inc
mov
sbb
pushf
mov
shl
mov
push
mov
xchg
or
arpl
xor
add
mov
mov
aad
rcrb
jae
xchg
arpl
push
std
ffree
mov
xchg
ret
and
mov
mov
sub
mov
mov
in
jbe
or
add
pop
xlat
dec
xchg
pmullw
or
inc
iret
mov
xor
xor
add
pop
mov
int
lds
cld
ja
mov
mov
ss
enter
rcl
into
int
xor
test
xor
push
pop
add
into
dec
mov
sub
stc
mov
xor
mov
dec
and
mov
xchg
pop
sbb
addr16
fisubs
std
jno
add
sbb
lret
cmpsb
shlb
mov
add
push
jmp
xor
xchg
adcl
fdivs
out
sub
cwtl
xchg
adc
fs
rclb
loopne
pop
scas
icebp
xchg
imul
sub
and
shl
pop
test
inc
aad
inc
scas
das
sub
add
sbb
dec
jge
lret
cli
out
into
mov
pop
daa
cld
xor
pop
adc
in
xchg
push
xchg
es
dec
push
lea
jg
int
daa
push
pop
or
cmc
pop
mov
xchg
xor
movl
mov
xchg
xchg
loop
icebp
jl
sbb
stos
inc
aas
mov
push
std
pop
cltd
cmp
iret
push
lods
xor
mov
inc
or
je
fstps
xchg
lock
sti
push
add
dec
aad
lock
mov
ja
jge
sub
xchg
sub
pop
lock
out
insl
lods
jne
fsubs
mov
add
scas
dec
jp
gs
int3
lahf
sub
xor
popa
sti
rorb
pop
and
push
outsl
jbe
pop
mov
sahf
inc
movsb
jecxz
lea
or
data16
xlat
sub
cltd
sbb
rclb
repnz
fimuls
mov
rclb
dec
jge
sub
bound
outsb
fs
mov
stos
addl
lea
leave
sbb
add
inc
push
stc
or
int3
push
test
xchg
xchg
je
loop
cmp
adc
cwtl
inc
sub
sub
inc
test
or
add
aas
dec
ja
inc
insb
repz
imul
pop
xchg
push
je
ret
mov
adc
add
insb
jg
mov
ss
pmullw
cvtdq2ps
dec
xor
into
inc
xor
negl
cmp
ds
sub
cmp
add
pop
test
rolb
lock
inc
xor
repnz
add
aaa
xchg
int3
dec
ds
in
movsl
pop
jmp
arpl
sbb
jne
xchg
mov
data16
test
divl
cmp
scas
and
or
out
ss
mov
movsl
movsb
les
fildl
cld
mov
sbb
pop
add
dec
nop
push
cltd
lods
mov
negb
mov
sub
push
in
xor
mov
lods
repnz
int
imulb
pop
rcll
sub
xor
out
les
cmpsb
lcall
ds
imul
orl
add
and
xor
dec
mov
test
mov
jge
mov
inc
call
add
add
add
insl
inc
mov
imul
sbb
fisubrs
jne
out
clc
inc
or
adc
pop
imul
lret
and
mov
push
jns
jbe
popf
ror
aas
arpl
xor
push
popa
mov
pop
lock
aaa
loopne
push
mov
out
jne
inc
in
cmp
mov
rcll
push
jne
xchg
lcall
jecxz
mov
bound
cmp
pop
lret
ja
push
mov
call
fisubrl
rorb
out
gs
jae
and
stc
add
push
jno
ss
cmp
js
cmpsb
lea
xchg
lds
hlt
jle
cmp
jg
xchg
inc
cmpsl
idivb
push
pop
jb
add
jg
fistps
mov
inc
roll
jnp
cmp
jp
decb
leave
popa
cmp
dec
ret
roll
adc
enter
cmp
xchg
aad
or
xchg
jg
pop
sub
push
mov
rcll
ret
inc
ror
dec
push
fsub
sub
push
inc
mov
adc
jne
loop
cli
ja
and
xchg
testl
pop
scas
jne
fidivl
lcall
add
cmp
pop
dec
icebp
sarb
test
mov
into
cmpsl
ss
sarl
outsb
xlat
push
xor
testb
mov
xchg
fisubrs
popf
mov
ret
lods
repnz
mov
scas
iret
xchg
add
mov
dec
cmp
push
and
das
imul
loope
decb
jmp
cmp
jno
inc
icebp
adc
mov
inc
repnz
pop
outsb
push
jae
nop
mov
pop
mov
jb
in
mov
or
or
jnp
js
dec
lods
xor
stos
int3
push
dec
shlb
daa
sub
adc
stc
jle
dec
pop
inc
cmp
sub
out
stos
popl
xor
and
cwtl
push
mov
cwtl
jmp
dec
cmp
xor
push
or
data16
mov
mov
insb
inc
int3
vunpckhps
sub
aas
jo
loope
sarb
out
pop
push
je
xchg
in
cmp
std
stos
out
int3
or
xchg
es
push
dec
nop
std
imul
push
mov
inc
sub
jl
fisttps
and
adc
or
xchg
sbb
mov
addl
orb
dec
stos
imul
ljmp
mov
inc
daa
dec
sub
popa
jg
xor
insb
mov
push
gs
or
adc
sub
cmp
jae
mov
mov
jg
cli
outsl
scas
inc
insl
cmp
and
adc
leave
shlb
add
add
mov
shrb
fwait
xchg
cmp
sub
mov
cmp
mov
push
xchg
jne
sahf
leave
xchg
mov
or
push
pushf
dec
add
jmp
mov
aam
pop
rcll
adc
aaa
cmp
pop
pop
push
and
daa
sub
xor
push
in
cmp
in
fldenv
jg
cwtl
aam
lods
bound
cld
in
pop
sahf
or
inc
dec
dec
xchg
fsubrs
addl
decl
xor
inc
push
ds
pop
or
loope
or
ret
hlt
xor
ret
jae
inc
filds
scas
sub
jae
out
inc
leave
std
popf
stc
push
xchg
lret
imul
cmp
out
push
mov
into
mov
out
add
sub
sbb
push
pop
out
cmp
repnz
jb
add
sub
mov
push
repnz
add
lock
ja
or
jecxz
mov
stc
aam
dec
cwtl
bound
pop
and
pop
fs
mov
pop
scas
lock
idiv
jp
into
insl
lahf
in
dec
sub
mov
or
cmp
es
not
adc
jns
gs
or
adc
insl
lahf
jnp
add
mov
ja
sbb
cmc
lods
jo
addr16
jge
iret
test
cwtl
mov
arpl
mov
mov
push
inc
aam
icebp
cmp
into
ljmp
scas
cld
cmp
shrl
inc
mov
xchg
fcomi
lcall
inc
sbb
jg
xor
js
cmpsl
jmp
js
inc
cmp
sti
fstps
pop
ret
jl
stos
dec
adc
sub
icebp
mov
in
pusha
arpl
pop
pop
stos
push
call
add
push
arpl
push
lods
aam
cmc
aas
xchg
mov
and
mov
jecxz
adc
out
ret
in
push
mov
jns
mov
sub
pop
mov
loop
lods
jl
mov
jns
test
shl
popa
fisubrs
cmp
das
imul
adc
sub
out
cmp
add
mov
dec
pusha
in
cmp
test
or
xor
mov
ficoms
mov
imul
xor
scas
cli
sbb
cmpb
and
xchg
push
ja
or
loopne
jl
mov
outsl
shrl
pop
fcomps
mov
mov
adc
xchg
xor
mov
idivb
pop
js
pop
clc
jge
jne
shl
xchg
mov
or
jb
rorb
or
or
scas
adc
push
cmp
outsl
scas
into
cmp
stc
popf
into
je
xchg
movsb
fs
pop
mov
insl
leave
cwtl
jno
jne
cld
in
and
aas
out
sub
mov
inc
fs
loope
ds
or
mov
lcall
lea
and
add
js
mov
adc
or
ds
icebp
fstpt
cmp
sbb
pop
push
mov
hlt
mov
mov
fninit
jmp
sub
or
cmc
jp
jle
pop
push
cmp
movsl
das
inc
stos
sub
mov
sbb
call
and
lock
or
rorl
jnp
push
cmp
into
divl
cmpsl
popf
xchg
repz
jbe
dec
stc
clc
add
xchg
lret
lahf
mov
out
imull
cmp
pop
jae
xchg
pop
enter
sbb
mov
sbb
sbbl
lock
xor
cmc
xchg
fistpll
adc
arpl
push
adc
push
sub
test
in
sub
das
fisubrs
shlb
pop
mov
xchg
adc
push
cltd
fwait
pusha
aam
insl
divl
adc
inc
cmpsl
ret
inc
pusha
push
xor
jecxz
cltd
imul
xchg
shlb
mov
out
add
dec
in
lods
sbb
push
inc
or
xorl
in
stc
xor
cmp
pop
sbb
out
insl
push
aas
mov
or
xchg
cwtl
adc
dec
ljmp
jmp
mov
cltd
pop
test
mov
inc
das
sub
xor
pop
or
ljmp
cmpb
std
mov
bound
and
xor
into
dec
mov
push
xchg
mov
xlat
pop
lock
cmp
xor
movsb
orl
int
dec
inc
mov
push
cmp
jne
mov
in
jle
sbb
fsubrl
inc
mov
in
or
pop
sbb
mov
and
mov
js
mov
mov
std
pop
xchg
bound
and
dec
fs
push
test
imul
ja
cltd
xchg
ret
jne
and
shlb
pushf
push
imul
xor
inc
cmp
js
dec
add
je
xchg
push
bnd
xchg
lea
fdivrs
cs
stos
lret
fwait
pop
rcr
mov
mov
sbb
call
sbb
sub
rcrl
aam
add
mov
mov
jecxz
mov
jmp
ss
pop
and
stc
cmp
jno
push
nop
xchg
mov
xor
adc
lcall
sbb
jl
adc
cli
inc
cmpsb
push
jo
mov
in
fdiv
pop
jns
imul
fildll
repnz
mov
pop
loop
daa
jne
mov
mov
pop
outsl
iret
pusha
adc
popf
cmc
imul
jmp
mov
insb
adc
cwtl
mov
mov
and
cld
lcall
or
sbb
out
lock
icebp
jo
scas
inc
lods
jp
push
sbb
stc
inc
jno
jecxz
mov
xor
xchg
lds
pop
jle
and
mov
ds
stc
fcomp
rclb
js
sbb
pop
test
push
inc
mov
bound
lock
sbb
cmp
or
fnstsw
popf
movsl
pop
xchg
pop
repz
adc
mov
jg
mov
or
cmp
cltd
or
xchg
pop
cmp
mov
sahf
outsl
or
outsl
lahf
cld
andl
popl
stos
pusha
fs
mov
nop
inc
push
mov
sbb
icebp
mov
and
sbb
test
in
cwtl
jb
adcl
sahf
repnz
outsl
push
cmpsl
sbb
lods
test
out
pop
es
xchg
mov
mov
add
jo
xor
xor
sahf
lahf
mov
pushf
jno
adc
xchg
in
jge
into
ljmp
pop
adc
mov
xlat
and
sub
pop
dec
test
push
inc
mov
stc
cmp
fwait
and
inc
dec
jnp
mov
sar
sbb
push
stc
push
outsb
add
push
lea
jp
jae
adc
xchg
push
push
xchg
mov
push
fcompl
in
adc
push
mov
rol
xchg
mov
mov
jle
inc
flds
pop
into
popa
cmp
stc
lds
cmp
adc
sub
lcall
jge
jb
sbb
cltd
int
inc
add
popf
xchg
jmp
cwtl
xlat
mov
mov
xchg
xor
inc
xor
add
jle
mov
insb
mov
sbb
inc
es
es
iret
mov
sbb
ret
into
mov
cmpsb
cli
add
push
repz
daa
mov
mov
jae
sbb
fldenv
stc
loop
fs
xchg
cmc
roll
std
loope
push
mov
ja
outsl
cltd
xor
test
inc
mov
lcall
and
fisubl
add
loopne
into
out
sub
js
and
push
insl
dec
decb
or
daa
mov
movsb
jae
xchg
mov
sub
add
mov
dec
rcll
rcrb
push
push
in
in
ret
xor
es
loope
into
dec
xchg
insb
aad
ret
lds
movsb
inc
and
jecxz
imul
jle
fimuls
push
dec
movsb
jmp
jbe
aas
in
adc
add
out
or
dec
sbb
fsubr
pop
loope
movsb
repz
sub
notb
in
xor
sti
mov
aam
mov
push
pop
jae
int
or
outsl
pop
aam
leave
sbbb
xor
popa
sbb
xchg
mov
pop
fstpt
cmpsl
imul
sbb
data16
outsb
cmc
rolb
push
xchg
call
jge
imul
xor
mov
test
lahf
pop
jb
call
mov
or
stc
push
cmp
jecxz
adc
arpl
mov
sub
or
mov
loope
ds
popa
push
or
or
mov
adc
or
push
and
scas
xchg
sahf
xchg
mov
scas
dec
sub
mov
push
iret
into
fldcw
push
xor
ret
dec
push
or
mov
aaa
and
push
xor
xchg
inc
faddl
rol
sbb
mov
addl
popa
inc
adc
daa
jb
mov
xchg
adc
xrelease
mov
jae
movsl
mov
inc
jno
bnd
push
movsw
xchg
mov
fcompl
je
je
xor
shl
test
pushl
dec
push
fidivrs
adc
add
mov
dec
push
pop
pop
fadds
arpl
verr
dec
sbb
mov
ljmp
bnd
add
loopne
fiadds
inc
int
xor
cmp
dec
test
xor
lret
push
sub
cmpsl
call
imul
fs
dec
test
scas
jnp
push
jmp
dec
and
jae
sbb
mov
push
sbb
push
push
mov
jns
mov
fcomip
jg
xor
jnp
ljmp
push
lods
cmp
xlat
loop
jb
push
ror
lret
imul
std
lahf
or
aam
int3
add
cmp
xchg
push
lds
push
cmc
daa
xchg
xchg
push
ficomps
icebp
div
loope
fildl
cmp
icebp
and
pop
bound
ljmp
lahf
daa
sub
pushl
jp
gs
inc
out
cs
adc
add
push
in
push
jb
jae
jbe
sub
js
sub
push
addl
mov
and
arpl
push
dec
repz
and
jmp
xor
push
aad
jb
xchg
jnp
jl
xchg
aam
insl
dec
or
cmpsb
sti
fs
test
hlt
xchg
jmp
jbe
es
cli
scas
pop
push
push
mov
fwait
xchg
adc
pop
dec
inc
xchg
not
jae
cmp
inc
mov
fbstp
scas
jg
repz
scas
sbb
ret
and
pop
aad
jp
sbb
js
and
loope
sti
xchg
sti
and
rclb
xchg
cmpsl
and
xchg
jo
xchg
pop
out
xchg
cld
in
pushf
push
cs
pop
pop
push
inc
nop
fdiv
xchg
test
mov
punpckhbw
pushf
cmc
int
adc
imul
xchg
jge
dec
rol
mov
sub
call
pop
push
dec
vmread
mov
rcrb
lahf
and
bound
icebp
xlat
ja
xor
or
fsubrs
cmp
jge
add
add
jle
aaa
or
pop
mov
xchg
and
fdivs
sbb
dec
xchg
push
insb
int3
and
xor
aam
and
push
cmpsl
divb
jae
push
mov
ljmp
sub
std
lods
adc
lret
fcomps
popa
jmp
fsubs
inc
outsb
outsb
dec
arpl
ljmp
jbe
push
cli
mov
cmp
lds
cmp
push
inc
stos
call
call
mov
dec
ljmp
adc
xchg
fs
fnstenv
mov
pusha
cmc
loopne
and
pop
dec
dec
mov
inc
adc
mov
xchg
int3
xchg
push
lret
cs
fucomi
sub
push
or
pop
sti
add
pop
fldenv
add
jnp
adc
and
mov
jge
adc
or
sti
xchg
fiadds
lret
mov
mov
jg
xchg
jp
pusha
sub
std
mov
mov
or
insl
daa
out
sbb
aad
pop
push
in
mov
inc
mov
mov
cltd
daa
push
in
jp
sahf
lods
in
dec
jns
push
out
dec
lcall
xchg
inc
dec
add
adcb
adc
adc
or
mov
fsubl
cwtl
mov
arpl
rcr
stc
sahf
shll
das
or
mov
cmpsl
mov
jle
and
or
out
pop
and
inc
push
fildl
or
push
mov
push
xor
jns
xchg
adc
cmpsb
mov
jmp
xlat
sbb
clc
out
adc
jge
mov
or
mov
ret
mov
iret
divb
pop
mov
xor
jecxz
inc
add
shlb
mov
mov
addl
stos
xor
imul
mov
loop
outsb
or
dec
push
test
pop
lret
push
push
popf
cmpsl
into
mov
and
jle
jno
rolb
mov
repz
out
addl
dec
fnstenv
shl
inc
fildll
test
scas
mov
iret
mov
xor
jg
mov
pop
or
pop
or
int3
jp
push
mov
pop
mov
roll
ret
lahf
mov
sbb
xor
stos
sti
lret
jl
int
xor
lcall
lods
push
push
lcall
add
pop
jge
out
jns
xchg
dec
cltd
sbb
sti
fdivl
mov
adc
stc
dec
cmpsl
fldenv
testl
cld
aad
std
insl
cmp
jbe
fdivp
outsl
mov
or
dec
mov
push
cmpsb
sti
les
push
push
add
pop
test
ja
pop
push
inc
ljmp
cmp
movsl
sbb
rorb
call
orb
adc
or
ret
ror
fimull
and
push
fsubl
jo
mov
dec
fcmovu
push
dec
sbb
sbb
pop
shr
add
jl
mov
jb
push
push
movb
insb
pop
xchg
ret
inc
inc
and
in
sti
dec
daa
pop
sub
cmpsb
jns
pop
mov
cmp
mov
lea
sub
aad
mov
mov
scas
out
bound
cmp
push
lods
pop
rcll
xchg
lret
cld
fisttpl
leave
fcomp
fdivrs
cmpsl
icebp
arpl
arpl
xlat
mov
inc
and
add
mov
enter
loop
cmpsb
and
jle
das
mov
pop
xchg
xadd
call
sub
and
xor
shrb
jno
mov
inc
jp
push
push
stos
lcall
push
mov
cmpl
out
loope
jne
in
mov
adc
xchg
rorl
and
inc
ds
cmp
jmp
or
pop
daa
inc
cmp
jnp
scas
mov
sub
mov
lods
push
or
jne
push
insb
and
add
repz
dec
push
xor
push
pop
push
lahf
lds
fdiv
mov
add
push
pop
pushf
dec
test
mov
ret
or
and
popa
mov
ds
scas
fldt
pop
scas
lock
pop
les
stos
and
shll
daa
lock
mov
adc
insl
cld
mov
xor
arpl
mov
xlat
cmp
xor
add
ds
xchg
sub
push
sub
insl
or
cld
fsubrl
xchg
in
mov
mov
or
mov
popf
cli
shr
xor
xor
and
icebp
sbb
cmp
and
push
push
or
test
lret
push
xchg
stos
and
sub
stos
insb
xor
adc
aam
xor
fiaddl
or
rorb
add
pop
jge
ja
jne
out
scas
adc
xor
popa
orb
cmpsb
faddl
fbstp
or
xor
jl
dec
or
andl
lcall
xor
je
inc
xchg
or
enter
mov
pop
call
pop
or
daa
mov
mov
push
jns
repnz
push
jnp
jg
sbb
jecxz
push
gs
mov
lahf
sbb
js
inc
notl
mov
push
dec
cmpb
or
xlat
lahf
mov
pop
gs
repz
jno
mov
ja
push
cs
jmp
pop
cmpb
cmp
push
daa
cmp
inc
push
and
mov
mov
jne
and
jne
adc
jge
andl
sbb
sbb
or
popf
mov
pop
test
mov
and
mov
mov
jg
js
mov
cmp
ret
and
ret
aaa
fwait
in
call
test
popl
pusha
adc
cmp
jl
mov
mov
rcrl
leave
push
jmp
sub
das
jbe
andb
popa
cs
ds
fmul
ja
pop
stc
cmp
out
in
jb
jo
xchg
sub
or
sub
pop
or
xchg
xchg
fisttps
popf
xchg
xlat
adc
mov
pushf
addl
rclb
mov
push
sarb
mov
xor
cmpb
inc
or
push
xchg
pop
mov
xchg
insb
scas
add
es
mov
jnp
gs
mov
adcb
jmp
clc
icebp
mov
or
mov
pop
and
inc
adc
test
mov
arpl
jmp
call
enter
or
mov
in
sbb
daa
daa
das
pop
test
push
mov
call
sar
cltd
gs
push
sbb
sbb
adc
dec
orb
cmp
and
repz
andb
rolb
into
lods
mov
icebp
mov
lea
aaa
and
mov
mov
pop
push
mov
fbld
mov
test
lcall
repz
negb
inc
cmp
test
jmp
ljmp
roll
mov
ret
adc
mov
add
push
jno
jb
ds
repnz
xor
mov
into
into
xor
sahf
jb
gs
jg
xchg
jle
add
cmpsb
inc
repnz
and
ja
jae
mov
or
xchg
cld
nopl
outsb
mov
xor
out
pop
cmp
jnp
xchg
push
xor
jl
stos
inc
mov
cmp
divb
cmp
nop
int
dec
push
xchg
push
dec
cmpb
push
add
mov
popa
and
mov
loope
hlt
fidivl
cmp
iret
adc
jecxz
mov
dec
dec
pop
js
subl
dec
jge
pop
push
movsb
push
push
inc
mov
inc
or
add
jbe
and
dec
cmp
insl
ljmp
clc
sti
and
push
inc
std
lods
inc
adc
and
cmc
stos
xchg
xor
mov
xor
mov
js
dec
adc
shlb
pop
cltd
or
dec
aam
pop
clc
jb
sub
dec
dec
jb
call
in
mov
cmpsl
sub
xlat
stos
sub
lea
movsl
add
mov
ret
push
cld
mov
aaa
and
insb
inc
cs
ja
jns
jne
mov
mov
cmpsl
xor
sub
mov
dec
mov
pop
add
xchg
orl
mov
sbb
lcall
roll
push
mov
pop
mov
call
es
mov
into
pop
sahf
aam
cmp
cli
enter
addl
xchg
clc
movb
sbb
mov
outsl
sbb
push
test
mov
push
adc
push
xchg
cmp
inc
fstps
lds
lods
lret
in
mov
sub
dec
adc
outsl
ljmp
mov
shlb
sub
mov
push
in
or
sub
pop
loope
out
inc
jae
pushf
or
repz
add
mov
add
pop
inc
or
mov
nop
mov
inc
loopne
fdivs
inc
lahf
fsubrl
sti
and
mov
push
push
pushw
xor
or
lea
push
pop
cmp
cli
aam
dec
xor
dec
fiadds
rorl
fsubrl
daa
pop
mov
das
sub
pop
clc
lds
jg
jmp
jp
inc
pop
jmp
push
mov
data16
sbb
sbb
and
xchg
test
leave
popf
adc
adc
sbb
cli
inc
mov
andb
xor
xor
subl
out
jge
dec
pop
aad
stos
dec
test
mov
cwtl
pop
nop
jnp
fistpll
mov
fisubrs
les
pushf
sub
add
jmp
insb
push
push
imul
add
rclb
pusha
stos
push
lret
ds
xchg
cltd
jnp
imul
mov
mov
arpl
pushf
andb
imul
xor
hlt
and
cmpsl
sub
inc
popf
xor
jae
les
daa
loop
xchg
mov
and
or
fldt
cmp
movsb
hlt
dec
mov
arpl
dec
stos
enter
cmpsb
sub
je
stos
cmpsl
lret
sub
out
adcb
shll
push
mov
icebp
rclb
sahf
xchg
bound
push
ret
lock
adc
jge
icebp
stos
jae
sub
and
mov
lods
xor
out
pop
ljmp
arpl
mov
out
ret
int
pop
dec
cmp
mov
dec
sarl
mov
cmpsb
mov
mov
pushf
jmp
xor
push
loope
sub
test
mov
jecxz
aas
jno
idivl
inc
sti
test
mov
sahf
insl
dec
dec
aam
cmp
out
mov
dec
xchg
pop
push
mov
add
sbb
lret
cmp
pop
imul
xchg
aas
mov
loopne
shll
roll
mov
ss
ds
xchg
push
pop
and
cli
aam
std
lret
je
inc
push
fwait
jl
lret
and
pop
push
xchg
and
scas
loop
arpl
divb
mov
in
ret
in
pop
jb
out
sub
pop
jbe
fs
data16
mov
shll
fwait
ret
mov
lahf
sub
cltd
nop
je
mov
sbb
sbb
lcall
inc
popa
jl
pop
clc
jnp
cmp
lahf
insl
dec
xchg
adc
cmp
sub
mov
std
push
aaa
lock
cmc
arpl
loop
aad
enter
mov
inc
adc
std
sub
stos
stos
jo
mov
mov
rorb
xchg
sbb
lret
popa
sbb
push
sbb
sub
jns
push
ja
dec
rclb
push
xor
imul
sahf
sarb
jb
xchg
nop
fmuls
andb
dec
testl
dec
fmull
add
xor
mov
mov
imul
xrelease
xor
or
xchg
hlt
mov
and
mull
bound
mov
xchg
ss
and
adc
in
fs
sbb
incb
push
cli
shrb
hlt
push
dec
or
stos
aaa
repz
add
es
sub
dec
jne
imul
aaa
sub
es
outsl
dec
pushf
lock
cwtl
shrb
icebp
pop
adcl
cmp
sbb
mov
xor
cli
ljmp
fldl
sub
push
mov
fwait
aam
xor
inc
movsl
pusha
cli
shl
adc
pop
std
lahf
addr16
cmp
push
mov
mov
adc
push
aam
cmp
mov
mov
cmp
jno
lds
rcrb
clc
lods
cwtl
pop
insb
lods
cmp
into
aam
mov
fiadds
mov
shll
out
xchg
in
dec
mov
and
insb
mov
aaa
inc
pushf
das
dec
xchg
push
or
outsb
std
cmpsb
add
pop
inc
xor
adc
mull
mov
rclb
xor
adc
pop
out
inc
xor
int3
pop
popf
dec
mov
inc
fwait
push
lcall
rcrl
enter
shrl
sub
jp
cmp
adc
pop
movsb
xorb
pop
int3
cvttps2pi
lock
fwait
lret
repz
sub
jmp
hlt
dec
popa
xchg
sahf
in
cltd
mov
dec
ret
arpl
out
in
fistps
xchg
sub
repz
mov
and
xchg
sbb
movsb
xchg
in
mov
pop
push
inc
jle
sub
loope
or
aam
cmp
push
rcrb
fcmove
xlat
sub
andb
lock
scas
dec
sub
pusha
adc
mov
jl
cmc
mov
out
mov
push
inc
xchg
or
fadds
iret
sbbl
mov
out
sub
lock
fimull
mov
or
dec
and
push
adc
gs
pop
inc
outsb
sbb
jae
jns
pop
fistl
into
add
mov
sbb
jg
fdivl
testl
aam
scas
into
or
mov
pop
out
inc
push
inc
cli
mov
sbb
pop
mov
pop
lahf
mov
push
fdivrs
fcomps
inc
mov
xchg
sti
add
pusha
sbb
sbbb
das
jg
ljmp
out
sahf
shlb
fcomps
inc
cld
pushf
div
icebp
in
cld
mov
xchg
mov
enter
mov
sub
dec
xor
sbbb
mov
es
or
mov
scas
test
dec
out
cmp
fstpl
cmpsl
sub
xchg
pop
mov
adc
pop
leave
mov
stos
test
dec
repnz
idivb
inc
sbb
aad
sbb
sub
mov
and
cmp
rep
lret
push
mov
jae
mov
xor
or
push
in
and
gs
jecxz
lods
test
jg
jne
call
in
fidivrs
data16
test
mov
cmp
imul
ss
outsb
cmp
adc
mov
push
pushf
das
out
je
btl
mov
test
lret
fnsave
and
out
out
pop
out
in
popa
insl
xchg
push
push
shrb
mov
cmovb
cmp
test
fsqrt
in
inc
lret
fnstsw
repz
or
pusha
dec
shrb
in
daa
pop
pop
mov
adc
fdivr
ds
pop
xor
insl
les
xchg
insb
adc
xchg
int3
mov
repnz
cltd
cltd
mov
pop
sbb
mov
fmull
sub
pop
insb
xor
fisttpll
add
push
stos
stos
adc
test
or
sub
push
pop
sti
stos
int
mov
cmpsl
out
movsl
and
inc
lods
xlat
fdivrs
jp
shl
rcll
cwtl
lods
mov
cli
andb
ss
cmp
pop
xor
dec
jnp
ret
cmc
out
faddl
pop
inc
cld
loopne
jecxz
jno
mov
ljmp
daa
in
mov
mov
aam
cld
ja
lret
xchg
dec
fidivs
add
cmp
int
cmp
int
popa
addr16
decb
pusha
stc
jmp
sarb
or
iret
lret
sub
ret
mov
or
pop
je
mov
lret
or
push
cltd
pusha
sub
mov
stos
mov
sbb
pop
test
push
in
dec
ret
mov
pop
pop
push
lret
ljmp
mov
add
mov
mov
push
dec
into
mov
fwait
out
xor
adc
xchg
sub
cmp
repz
xchg
jo
ljmp
mov
jae
mov
lods
cmpb
pusha
mov
jmp
add
les
icebp
or
inc
xchg
or
pop
ret
pop
adc
fmull
mov
stos
cwtl
into
adc
dec
sti
lods
dec
xchg
cmpsl
loop
in
int
or
mov
clc
shll
and
push
cltd
sarb
mov
div
add
xchg
outsl
and
jns
in
fldpi
mov
sti
inc
imul
mov
and
dec
inc
mov
lahf
mov
mov
inc
xchg
mov
pop
sub
mov
lock
dec
test
xchg
pop
add
mov
pop
and
push
xchg
negb
mov
shl
sub
xchg
sub
mov
xchg
and
mov
bound
jb
ljmp
into
scas
xor
imull
cld
icebp
sarl
sbb
popa
imul
jge
jae
inc
xlat
out
jo
pop
add
shll
xchg
pusha
xchg
addr16
mov
aam
add
mov
push
ret
fwait
adc
rol
les
jg
and
sub
cmp
xchg
xchg
mov
dec
cmp
push
cld
jbe
shrb
jno
in
out
pop
lar
ret
les
push
or
mov
push
lret
hlt
loop
into
pop
imul
cli
inc
pop
cmp
sub
inc
insb
rol
shll
in
pop
mov
mov
nop
insl
pop
cmp
pop
push
in
xchg
test
sbb
push
mov
inc
or
fsubrs
lahf
jmp
mov
dec
lahf
xchg
outsl
lcall
cmc
rcrl
xor
push
sbb
insb
cli
lds
test
sbb
jp
mov
fidivrl
stos
test
jecxz
rorb
inc
jnp
add
xchg
xchg
and
data16
jmp
cmpsl
popf
cmc
aas
mov
jmp
dec
jb
inc
ljmp
pop
sbb
xchg
gs
sub
loope
loop
iret
fs
inc
add
mov
inc
cwtl
fcmove
push
dec
dec
jne
cmp
pushf
sbb
scas
ljmp
mov
dec
xchg
inc
sarl
test
or
insl
das
dec
imul
inc
sbb
lahf
xor
jae
sbb
inc
push
mov
and
ja
mov
aaa
and
loope
mov
xchg
pop
sbb
das
sub
inc
cmpsb
call
insl
sbb
pop
jbe
push
xchg
pop
cmpsb
jmp
je
inc
add
dec
mov
test
jp
cwtl
dec
lea
subl
lods
pusha
sub
xchg
jb
lock
lods
dec
fisttps
jmp
incb
movsl
xlat
jge
xchg
stos
sarl
mov
sub
sub
mov
in
mov
xchg
in
jnp
inc
xor
test
xchg
pop
dec
inc
imul
or
mov
pop
lcall
pop
inc
cltd
sbb
cmp
fnstenv
dec
sub
jp
jno
daa
push
les
push
xchg
outsb
popa
xchg
jge
sbb
gs
add
push
xor
xchg
mov
repnz
insl
iret
adc
aas
repnz
jne
outsl
sbb
push
lret
pushf
popa
fcoms
das
fbstp
sub
push
dec
lret
cmp
dec
sub
xchg
push
cmp
jge
fbstp
jmp
call
adc
mov
pop
in
pop
ret
and
cli
mov
jg
bound
mov
push
or
movsb
sub
jecxz
mov
inc
es
adc
arpl
insl
xchg
push
imul
and
pop
xchg
pop
mov
gs
fisttps
arpl
js
fnstcw
mov
sbb
cmpsl
mull
int
sub
inc
jns
jns
mov
xchg
cmpsb
dec
cmp
out
addb
cmp
je
sti
fstsw
inc
sub
mov
fldt
cmc
sub
sub
sbb
adc
push
dec
sbb
lahf
cmp
sahf
ds
lcall
jno
xchg
xchg
int
inc
iret
sti
loopne
mov
addr16
call
adc
ds
xor
lret
call
mov
ljmp
in
sbb
push
jp
ror
stos
cltd
push
sbb
mov
loop
push
cld
push
fcoms
loop
mov
inc
jp
fidivrl
adc
jne
iret
xchg
sti
ret
lock
add
mov
in
push
outsb
cmpsl
fdivrl
enter
pop
mov
inc
aad
dec
adc
pop
int
in
jge
enter
int3
or
in
xchg
and
pop
pop
test
shrl
and
jns
jno
in
jmp
or
lahf
and
shrl
adc
outsb
pop
popf
xor
cld
and
push
je
pop
test
or
loopne
pop
cmpsb
xchg
test
fisttps
outsb
lock
mov
bswap
mov
into
loop
lahf
jbe
test
xchg
pop
jae
pop
dec
pop
scas
or
xchg
inc
and
mov
pop
push
mov
or
sarb
sub
les
in
jmp
mov
cmp
mov
sbb
adc
adc
jle
add
xorb
mov
scas
xchg
mov
sbb
sub
fisubrl
adc
out
out
mov
imul
push
int3
fcoms
sbb
insb
cmp
add
mov
pop
fwait
aaa
mov
addb
sub
sti
pop
call
insb
mov
mov
sarl
cmp
pushf
and
popa
inc
popf
ret
iret
xlat
clc
imul
fsts
sti
mov
add
in
mov
push
mov
sub
xchg
lea
dec
ja
fsubl
movsb
push
mul
mov
ss
int3
xchg
push
cmp
inc
jns
pop
sub
cld
mov
outsb
push
jmp
shll
pop
fcomp
jno
xchg
sbb
mov
lahf
ret
cs
popa
sub
jecxz
mov
cmpsl
std
outsl
inc
cmpsb
sub
pop
and
pop
cmpsb
xchg
jns
repz
pop
jp
and
sbb
xchg
mov
push
pop
push
fistps
mov
pop
jle
sbbb
aas
sarb
lret
add
inc
ljmp
sbb
xchg
cmp
fiadds
and
dec
fwait
repz
jno
add
xchg
insl
out
outsb
xor
and
add
push
cli
pop
inc
pop
jbe
mov
call
pushf
pop
xchg
cmpsl
pop
push
sti
xchg
cld
lret
mov
mov
mov
pusha
sub
ret
jmp
in
inc
icebp
inc
int3
jne
test
mov
cmp
int3
xchg
push
xchg
mov
sub
pop
int3
xchg
cmp
mov
add
jbe
fwait
test
stos
cmpsb
leave
and
std
sbb
jbe
xchg
test
jge
imul
sub
fcmovne
mov
stos
jbe
cmpsl
out
cmp
imul
cmp
aam
dec
push
adc
jp
js
xchg
pause
data16
fidivs
jge
shll
or
add
imul
push
fs
mov
sub
aas
sub
add
divl
lods
mov
pop
cmp
mov
mov
adc
xchg
add
mov
shrl
sbb
mov
lods
jecxz
adc
insb
negb
mov
sub
mov
cs
and
ss
sub
pop
or
pusha
pop
lcall
xchg
out
test
add
add
stos
xchg
push
repz
enter
and
pop
das
cltd
mov
add
sub
shrb
jg
sbb
lret
movsl
inc
or
fstps
dec
or
ret
es
and
int3
jbe
lods
or
push
dec
push
arpl
xor
shll
jp
sarl
push
sub
sbb
push
sbb
mov
and
pushf
jl
leave
lock
outsb
jbe
mov
xor
iret
and
dec
ja
ret
lahf
sub
es
mov
xor
sub
fisttpl
imul
dec
add
jo
sbb
test
out
xor
cli
roll
fwait
in
adc
subb
cmp
jnp
test
push
add
xchg
rcrl
in
sbb
push
pop
jb
xor
int3
sar
cli
lret
mov
dec
movq
pop
les
sti
dec
jecxz
jmp
inc
xchg
jae
xchg
out
push
outsl
movsb
ficompl
idivl
iret
js
jb
cmp
add
je
hlt
test
mov
add
fistps
add
pmaxsw
ds
mov
jno
das
mov
xchg
mov
xchg
add
sbb
insb
jmp
dec
push
imul
movsb
cmpb
flds
lock
inc
not
push
inc
test
cmp
cwtl
arpl
mov
pop
aaa
add
outsb
int3
sub
int3
in
hlt
gs
adc
xor
ja
xchg
data16
iret
cld
scas
popf
add
pop
sub
ret
mov
jnp
insb
jbe
fidivl
je
pop
shlb
add
cmp
sbb
fidivl
in
or
repz
sbb
rcr
jecxz
cmp
outsb
incb
push
inc
mov
sti
dec
pop
and
gs
xchg
or
cmc
mov
repz
sbbl
loop
pop
inc
std
inc
jb
jg
out
pop
jae
daa
push
icebp
es
xor
pop
nop
dec
loop
xchg
add
dec
sbb
stos
sahf
dec
faddl
les
stos
xchg
cmp
pop
clc
mov
inc
loopne
or
xchg
xchg
push
rorl
xchg
add
adc
loopne
call
lds
jmp
xor
std
aaa
adc
cmp
lret
cmp
das
enter
sub
mov
sub
inc
clc
dec
mov
dec
mov
scas
scas
out
rclb
inc
mov
movb
mov
sahf
mov
imul
aad
inc
adc
inc
mov
xor
outsb
xchg
test
cmp
adc
mov
clc
in
pop
dec
inc
shl
mov
pop
mov
jb
hlt
shrl
pop
pushf
cli
in
jns
fsub
bnd
leave
xor
mov
or
add
aam
and
cmp
or
add
imul
sahf
cmp
xchg
movsl
dec
cli
enter
pop
push
sbb
ret
cs
ret
add
std
mov
jb
and
cmp
loopne
dec
push
dec
sbb
mov
or
test
dec
pushl
and
lcall
dec
js
test
sub
fisttpll
pop
xor
adc
outsl
mov
pop
pusha
cmpsb
jbe
pusha
or
push
inc
repnz
dec
fwait
mov
in
inc
sahf
xchg
push
enter
outsl
cltd
mov
mov
lcall
cmp
inc
push
ret
mov
imul
repz
adc
mov
pop
xchg
fldcw
out
inc
leave
mov
test
out
sub
sub
cmp
and
or
inc
test
cs
sti
pop
in
shr
dec
cmp
cmp
add
repnz
push
mov
add
mov
loop
js
or
test
stos
fadds
mov
cmpb
clc
and
idivb
imul
jmp
shl
ficomps
cmp
imul
in
incb
xchg
or
fdivs
bound
sub
push
or
iret
xchg
in
push
push
xchg
cltd
sub
and
mov
or
jecxz
loopne
test
sbb
jns
lahf
cld
sub
pop
lods
ljmp
ret
jo
cmp
and
fldcw
push
push
sar
sub
jmp
adc
lods
cmpsb
jb
iret
pushf
push
xor
push
dec
movsb
jmp
sbb
pop
jl
sub
dec
imul
xor
aaa
popf
and
dec
ret
repnz
sub
jae
arpl
int
push
sub
jnp
and
cmp
mov
xorl
in
nop
imul
cmp
xchg
cmc
sbb
scas
xchg
sub
fdivrl
call
dec
inc
push
xchg
mov
jp
aas
insb
lods
lods
movsl
dec
rorb
cmp
popa
sbb
adc
es
shlb
dec
sti
mov
add
sbb
adc
or
stc
pop
into
mov
out
mov
fucomi
xor
jecxz
add
dec
xor
jmp
sub
lret
xor
jg
cltd
mov
sub
mov
adc
cs
lods
pushf
dec
sub
fwait
xor
pop
add
jbe
dec
roll
into
add
sahf
int3
lahf
lahf
pop
cmc
xlat
sbb
xor
ret
and
mov
pop
dec
or
xchg
inc
inc
ret
aam
mov
in
popf
ss
xlat
js
sub
adc
dec
mov
jecxz
jg
jae
rsqrtps
rcll
out
cs
pop
ficomps
scas
dec
shlb
and
lods
lods
mov
mov
and
ds
xor
daa
push
push
pushf
fisubrs
lock
mov
outsl
jmp
inc
outsl
pop
xchg
inc
xchg
pop
sub
mov
stos
movsb
cld
cmp
jle
push
andb
and
jecxz
sarb
cmp
pop
sbb
test
outsl
cli
push
mov
sar
jo
shll
sub
and
sbb
push
and
xchg
jl
xor
data16
aaa
sbb
sub
leave
sub
idivb
pushf
ss
sbb
push
nop
xchg
decl
pop
cmp
or
mov
cmpl
add
xchg
or
mov
in
mov
fldt
sbb
pop
icebp
push
ljmp
js
jmp
push
insb
dec
lock
repnz
ss
and
pop
aam
add
adc
jns
xchg
inc
pop
and
mov
push
or
add
cmc
or
push
sub
xchg
sub
psubb
in
jge
xchg
xchg
out
test
inc
scas
mov
jae
xchg
cwtl
or
lcall
ret
push
mov
js
add
lcall
mov
push
pop
xor
add
into
mov
pop
mov
stos
cli
inc
leave
and
or
scas
xchg
and
jbe
jecxz
out
fst
into
movsb
fcompl
rcrb
jge
add
mov
fisttpl
jne
pop
fnstsw
push
dec
out
add
add
fisubs
mov
call
and
push
pusha
jecxz
cltd
or
push
jl
shll
xchg
or
movsl
dec
push
jg
xlat
jl
stc
mov
fsubrl
pop
or
decl
lods
lods
mov
add
inc
add
and
gs
lea
bound
adc
out
jecxz
fsubp
sub
or
jecxz
ret
pop
test
adc
mov
lcall
movsb
sbb
push
xor
pop
das
inc
jmp
loope
xchg
cli
cs
lea
lea
test
pop
jp
xchg
cmp
lret
out
cmc
lods
jmp
loope
pop
mov
cmpsb
mov
mov
sub
mov
push
mov
lock
lods
xchg
fucomp
xlat
adc
out
stos
leave
repz
mov
add
sub
loop
frstor
dec
insb
or
orps
lret
mov
push
xor
xor
sbb
lret
xor
cmp
xchg
sub
ljmp
lods
in
dec
cmp
and
sub
xchg
movsl
inc
out
dec
sub
shr
add
xchg
aas
push
mov
adc
sbbl
jb
mov
mov
cmp
push
push
mov
ffreep
mov
jne
cmp
arpl
xchg
std
aam
xchg
sbb
sbbl
pop
or
cmp
jl
xchg
dec
jno
inc
test
jp
shlb
sahf
icebp
les
sti
sbb
mov
rcl
sahf
rorl
pop
jb
inc
sub
mov
mulb
sub
pop
sub
test
popf
add
cmp
aad
fsubrl
lret
inc
cmp
orl
lahf
add
loope
jmp
jle
fidivs
mov
inc
mov
jp
mov
add
xor
arpl
dec
lahf
fldcw
mov
adc
cli
dec
mov
adc
xor
call
push
popf
cld
adc
sub
aas
pop
nop
out
aam
cli
pop
cmp
dec
popa
push
sbb
cli
jge
mov
inc
shl
jns
xor
mov
fisttps
jge
in
jmp
sub
jne
or
dec
xor
pop
fwait
jae
push
leave
pusha
pop
dec
pop
stc
imul
push
pavgb
std
sub
xchg
outsl
xchg
push
adc
imul
outsb
xor
pop
push
sbb
loope
sbbb
lea
dec
adc
sub
outsl
mov
sub
sbb
jg
mov
shr
dec
nop
mov
pop
test
cmc
pop
imul
pop
sbb
out
lret
addl
ljmp
cmpsb
test
add
aam
nop
aas
dec
sub
jae
insb
jo
xchg
and
sub
sbb
and
nop
mov
jnp
insl
fdivrs
neg
lock
scas
les
jle
jns
inc
popf
stc
sub
add
lret
pop
bound
pop
fwait
inc
xchg
ret
enter
lret
jg
dec
xchg
clc
ljmp
into
fcoms
add
mov
push
mov
add
pop
aad
mov
cmc
test
dec
adc
mov
fdivrl
mov
push
je
xor
outsb
imul
fdivrp
adc
xor
cld
cltd
scas
addr16
ret
loop
push
mov
push
cmp
xlat
cmpsl
aaa
aaa
or
mov
nop
pop
popf
ja
cs
ja
arpl
cmpb
and
cmp
pop
inc
in
sbb
subb
mov
mov
pop
cmp
in
mov
dec
out
enter
outsl
add
fistpll
adc
fsubrs
sbb
xor
lahf
fdivl
adc
inc
fdivrl
icebp
loope
jmp
je
pop
daa
negb
xchg
add
out
cld
jne
dec
arpl
daa
sub
enter
roll
outsb
lret
mov
cmpsl
bnd
inc
mov
mov
jmp
xchg
mov
inc
ret
jle
lods
pop
out
mov
pop
xchg
lcall
mov
xlat
std
ret
mov
mov
xchg
dec
in
jmp
lahf
imul
pop
push
xchg
mov
pop
ret
lret
and
adc
lea
icebp
imul
sbb
and
pusha
out
lods
mull
cmp
out
js
pop
jmp
out
push
push
roll
aam
mov
jmp
or
or
jne
cld
xchg
addr16
jo
cmpsl
xor
lahf
cwtl
mov
xor
mov
pop
and
in
iret
mov
loop
or
test
ret
adc
fmul
js
sub
sbb
clc
jecxz
and
fstpt
repz
and
xor
push
sub
call
add
test
fiadds
adc
mov
inc
add
adc
data16
mov
mov
stos
mov
xor
sbb
stos
xchg
ret
inc
sar
ret
push
shrb
pop
adc
sti
test
push
push
jecxz
mov
in
push
dec
movsb
xchg
insl
lret
and
daa
xchg
and
cmpb
popf
lcall
ret
pop
mov
lret
sbb
fbstp
imul
xchg
jo
mov
inc
xchg
sbb
outsl
xor
mov
pop
insl
mov
outsl
jo
out
cmp
roll
mov
adc
mov
jae
aam
jecxz
jmp
dec
stos
shl
mov
frstor
fst
mov
sub
sub
add
adc
shll
sbb
arpl
inc
lods
lods
cs
jp
rcrb
sarb
ljmp
ss
sbbl
movsl
pusha
mov
jmp
shl
add
mov
cmp
out
fcmovne
dec
daa
lea
adc
pop
pop
push
adc
xor
mov
adc
insb
hlt
andb
aas
cmp
and
and
es
push
jge
dec
es
scas
test
pop
xlat
xchg
mov
stc
je
cld
mov
mov
fcomp
jecxz
ficomps
les
push
and
cs
inc
jo
pop
and
popf
inc
pop
loope
in
popf
and
ljmp
repnz
push
jp
jns
popf
xor
loope
les
mov
in
adc
pushf
fisubs
enter
test
sub
add
or
pop
jb
mov
mov
mov
mov
ud1
imul
cli
sbb
fcompl
mov
push
loop
adc
or
mov
jmp
pop
pop
aaa
cmpsl
mov
pop
scas
pop
outsb
stos
iret
std
cmp
push
add
inc
or
xor
mov
stos
aam
mov
mov
sub
jmp
imulb
xlat
aaa
sbb
push
dec
lods
aam
xor
adc
and
gs
insl
or
in
cmpsb
imul
ret
jecxz
pop
scas
cmp
cmpsl
jne
and
lock
test
push
jg
pop
mov
and
mov
inc
bound
xlat
out
push
adc
cmpsb
mov
cmp
add
and
repnz
jp
sub
mov
dec
fsubrl
cltd
push
xchg
inc
push
and
pop
or
mov
mov
fsubl
cmp
popa
adc
fwait
int
xor
push
into
jns
adc
sub
mov
out
fidivl
mov
and
sahf
lcall
jp
es
jns
icebp
sub
sub
mov
cs
and
nop
repz
out
pop
adc
xlat
loope
or
dec
or
pop
or
push
call
push
test
arpl
xor
in
add
jns
cltd
int
push
fdivrp
adc
frstor
or
push
js
js
inc
out
outsb
xchg
push
cmc
adc
xchg
or
jl
jnp
lds
in
imul
fcomps
jb
cmp
leave
pop
cmc
sti
sub
loopne
sbbb
int3
lret
ds
pop
test
cld
lcall
sahf
jo
jne
aas
mov
rorw
fistl
xchg
jp
push
jo
pop
inc
jge
pop
dec
jle
dec
clc
push
sub
fs
js,pt
insb
cmpsb
push
rcr
pop
mov
bound
xor
mov
les
movsl
mov
xor
add
call
dec
insl
lret
inc
fs
push
or
addb
jbe
adc
outsl
mov
scas
pushf
pop
icebp
push
popf
mov
int
or
dec
scas
cli
test
out
movsl
pop
cmpsb
cmpsl
mov
fnstcw
or
pop
cmp
xor
pop
dec
push
cli
cmpsb
or
sar
lock
sbbl
data16
popa
mov
or
jns
mov
aaa
jmp
std
sbb
pop
ljmp
in
or
bound
pop
sub
xchg
stos
daa
fisttpl
inc
lcall
pop
jno
jo
in
adc
jg
cmp
pop
xchg
and
push
or
ja
dec
je
jnp
adc
mov
pop
mov
mov
xchg
popa
repz
xchg
jae
scas
jp
ljmp
out
hlt
enter
xor
notl
nop
subb
push
xlat
lcall
arpl
mov
mov
add
xor
test
out
xchg
push
cmp
js
fistl
push
xchg
aaa
inc
imul
sub
les
movsl
pusha
mov
popf
xlat
sahf
jae
movsl
lods
and
push
cmpsl
pop
jge
insl
sbb
out
jnp
dec
dec
dec
mov
fistl
test
sub
lds
jecxz
push
hlt
push
mov
fsub
lods
or
cmp
pusha
and
add
sar
imul
pushl
mov
rcll
and
and
je
call
fistpll
call
add
aaa
scas
mov
leave
pop
sarb
stc
adc
push
lahf
pop
push
jge
xchg
mov
aam
or
fiaddl
cmpl
inc
fwait
lds
fsts
sub
jl
pop
movsb
xchg
or
jnp
cli
mov
xor
in
xchg
add
dec
sbb
lcall
fdivl
ja
dec
push
push
out
rcrb
inc
fwait
out
testb
sbb
fwait
mov
icebp
fcompl
and
xchg
push
aad
icebp
pop
jno,pt
stos
inc
call
xchg
rol
cmc
inc
cmpsl
xlat
xchg
pop
je
loope
pop
lods
insw
loopne
aam
mov
xchg
or
mov
sbb
data16
adc
xor
push
insl
dec
sti
jmp
js
test
pop
sbb
inc
ds
push
gs
cmpsl
mov
fsubrp
jbe
shll
in
arpl
xor
std
js
push
or
push
cmp
dec
pop
xor
pop
push
insb
jb
incb
push
cmp
loop
aaa
jle
jmp
mov
sbb
arpl
mov
imul
sahf
add
adc
xchg
inc
aaa
or
cmc
jbe
xchg
mov
inc
aad
add
cwtl
cmpsl
jp
xor
mov
rcr
push
pop
xchg
das
xor
in
mov
or
xchg
ret
das
and
mov
or
shlb
adcb
mov
std
pop
jmp
into
test
dec
daa
or
call
insb
movsl
sbb
divl
or
sarb
repz
out
stos
inc
je
xor
cmp
out
jae
adc
int3
lods
dec
xchg
lcall
adc
xchg
jg
ja
mov
mov
repnz
mov
dec
pop
sub
sub
test
mov
shlb
popa
outsl
push
xor
jo
cltd
mov
lahf
mov
adc
loopne
lock
test
inc
xchg
push
mov
lock
pop
pop
shlb
xchg
push
push
shll
notl
fisubrs
pop
out
inc
andb
jl
and
xchg
or
lods
aas
in
popa
out
pop
jae
xor
cmc
mov
hlt
push
clc
sbb
js
jl
push
sbb
dec
or
xchg
sub
bound
clc
nop
das
out
cmp
ss
or
sub
mov
mov
pop
ljmp
push
mov
repz
xchg
sbb
inc
lock
mov
popf
frstor
inc
ja
idivl
jnp
and
loopne
sbb
pop
xlat
add
outsb
add
int3
mov
dec
icebp
xchg
loopne
cmpsb
and
loop
cltd
mov
sbb
repnz
call
dec
pop
iret
aas
jmp
popa
jmp
add
mov
dec
loopne
addb
es
inc
sub
or
fcomps
push
loope
mov
xchg
cwtl
or
imul
push
mov
imul
push
mov
push
loope
jnp
add
pop
cmp
loope
add
and
mov
lods
inc
clc
out
out
adc
sbb
mull
fcompl
fstpl
in
out
mov
loopne
mov
mov
movsb
loopne
or
mov
call
dec
pop
test
das
movsl
loopne
jae
cmp
in
leave
lods
cmpsl
jmp
inc
stos
movsl
cmc
xchg
jo
scas
mov
int
jecxz
xor
and
insl
sub
jl
xchg
daa
outsb
call
mov
gs
dec
in
adcl
ds
lret
sti
fmul
loope
daa
adc
and
mov
lret
stos
cmp
into
notl
mov
inc
outsb
movsb
push
cltd
mov
cmc
movsb
test
in
fs
cmp
movsl
pop
fcmove
stos
mov
loop
aas
sub
mov
dec
lret
xchg
pop
fmull
and
xlat
in
mov
pop
fildll
sbb
subl
lods
jno
decb
jle
or
mov
fnstsw
pop
aaa
out
jge
cmp
jl
and
inc
lahf
xor
inc
push
cmpl
sub
cmp
ficomps
mov
fnstenv
jnp
inc
scas
mov
dec
lock
cmc
in
adc
test
push
fcomps
ret
mov
int
xchg
mov
pushf
jne
fnsave
mov
mov
mov
add
adc
je
jle
mov
xchg
sbb
stos
repz
pop
jmp
cmp
insl
or
in
dec
mov
mov
shr
cmp
shlb
dec
sbb
imul
pop
ljmp
mov
sub
mov
outsb
mov
push
adc
lret
mov
cmp
xor
mov
pop
and
mov
mov
jno
pop
rcrl
dec
inc
rcr
test
fnstcw
cmpsl
fsubrl
jle
add
jae
lret
fimull
fisttpll
stc
pop
stos
pop
xor
sbb
jge
cmp
pop
xor
jl
lods
adc
mov
mov
jg
popf
adc
xor
xor
mov
adc
inc
xchg
jns
ss
movsl
int
sbb
mov
fld
push
hlt
mov
cs
xor
and
or
aas
xchg
cs
and
fistpl
scas
mov
push
push
insb
pop
ret
lahf
xchg
fmul
jl
push
pop
inc
movsl
cmp
fcmovbe
sti
insb
pop
push
jp
movsl
adc
mov
test
sub
mov
and
imulb
add
les
pushl
lods
fdivl
pushf
push
xor
pop
jp
and
scas
jo
icebp
loop
mov
push
dec
aas
sub
sti
mov
sbb
es
xor
adc
cmp
lret
mov
xor
cmc
ret
movsl
fwait
sahf
sahf
mov
cli
or
aad
sub
lea
and
in
inc
ret
dec
insl
inc
lds
clc
in
add
cmp
out
cli
and
mov
mov
pop
imul
mov
outsb
sub
arpl
adc
das
cmpsb
mov
cld
push
inc
imul
xor
arpl
xor
ja
xlat
xchg
sti
stc
inc
cmp
sub
bound
movb
and
jmp
fdivl
hlt
das
mov
or
cmp
sbb
push
mov
lahf
xchg
test
int
sub
and
mov
pop
mov
xlat
mov
das
sbb
cmp
mov
insb
sbbl
jmp
rcll
out
pop
loope
jmp
xor
xchg
mov
add
mov
fldl
push
push
jl
lahf
jne
inc
jb
inc
jmp
testl
or
and
loop
mov
sti
and
scas
inc
push
andl
mov
sub
cmp
test
cs
mov
call
fwait
shll
testl
lock
dec
xchg
loop
movsl
or
add
movsb
inc
push
or
das
mov
mov
pop
pop
adc
dec
inc
adc
lds
stos
or
xor
gs
add
fnstcw
repz
or
je
je
pop
mov
mov
les
adc
mov
pop
xchg
push
fdivrs
roll
les
pop
lock
call
je
and
inc
cmpsl
testl
popa
dec
setp
pop
loopne
insl
mov
xchg
xchg
fistpll
insl
jg
or
dec
imul
outsb
divl
out
pop
adc
adc
push
adc
hlt
andb
test
cwtl
popf
jnp
ja
cmp
fdivs
pop
push
push
mov
les
lret
and
mov
imulb
adc
test
mov
test
cld
js
jo
adc
repnz
pop
mov
jl
pusha
enter
ljmp
sub
xor
int
sub
fisttpll
ret
xchg
test
add
adc
clc
mov
cmpl
mov
mov
or
daa
call
repz
or
popf
push
cmpsl
test
stos
in
cmpsl
scas
pop
add
jg
xor
adc
ror
or
mov
pushf
lods
in
xchg
sbb
dec
or
cs
cwtl
shrb
jg
je
add
add
pushf
clc
jp
fs
sbbb
shlb
jle
pop
mov
popf
aaa
stos
repnz
jge
testl
jbe
xchg
jno
pop
pop
dec
xchg
popa
rorl
outsl
inc
push
leave
insl
xchg
leave
xor
or
sub
push
push
das
jns
enter
mov
ror
or
dec
xchg
dec
lds
mov
cmp
adc
jl
mov
cwtl
jge
fisttps
sar
cwtl
or
jl
adc
cmp
in
ss
outsb
stos
add
aad
inc
out
roll
mov
lods
xor
sub
pop
pop
cmpb
jecxz
push
popf
push
sahf
cmp
push
push
pop
mov
push
or
cmp
jnp
repz
cmpsl
repz
imul
popa
sub
pop
inc
mov
cmp
mov
incb
or
adc
insl
mov
xchg
or
sbb
xchg
fwait
push
add
rcrl
dec
jne
push
lods
mov
insl
mov
push
lds
mov
jg
lds
adc
push
int
xchg
icebp
jae
mov
shll
jle
mov
aas
dec
and
jmp
ss
test
sub
js
push
hlt
stos
push
inc
imul
in
push
test
push
xor
mov
repnz
mov
push
inc
xor
bound
aaa
sbb
mov
inc
sbb
into
jb
iret
scas
cmp
outsb
out
fiaddl
sub
enter
lret
rol
popf
push
mov
stc
aas
icebp
in
fwait
mov
add
into
mov
push
dec
fsubl
aam
sbb
mov
add
mov
repnz
data16
sbb
cli
dec
daa
or
outsl
ja
rcrl
mov
int
and
dec
dec
xchg
and
das
sub
or
mov
out
test
mov
xor
repnz
je
jmp
and
sbb
cmp
daa
mov
lret
and
mov
fucomp
cmp
add
push
incl
leave
sub
xchg
mov
iret
pop
in
xchg
sub
pop
inc
pop
mov
adc
jo
push
xchg
and
pushf
pushfw
stc
addr16
mov
in
mov
or
clc
mov
inc
push
mov
pop
or
xor
test
dec
aad
aam
popa
cmpl
mov
nop
xchg
add
inc
sub
xor
cld
cmp
cmp
testl
sbbl
adc
lods
scas
scas
test
sahf
xor
andb
sbb
imul
loope
jg
test
out
or
push
outsb
cmp
dec
dec
jae
mov
dec
xor
lret
adc
rcrl
imul
scas
stos
insb
xchg
fwait
or
adc
loopne
cmc
sub
cmp
dec
xor
add
jmp
pop
or
pop
xlat
lret
cwtl
scas
xor
mov
cmp
cmp
loop
and
insb
adc
dec
pusha
add
fisubrs
ds
lret
adc
imulb
ss
push
cmp
sub
fldcw
lret
add
push
out
add
arpl
leave
mov
add
mov
movsl
fs
xor
xchg
into
xlat
out
out
dec
jnp
movsb
add
in
pop
push
aaa
jl
sahf
sub
or
mov
sbb
mov
or
fstpt
adcl
stos
push
pop
or
cmc
jl
cltd
mov
or
adc
mov
sub
ja
or
push
ljmp
insl
sbb
lods
call
mov
sbb
sarl
pop
pop
test
pop
push
jno
mov
repz
inc
mov
or
cmp
cmp
stc
inc
xor
test
sub
mov
fcoml
stos
movsb
inc
mov
mov
push
inc
pop
push
add
mov
adc
orl
jecxz
push
in
int
cld
divb
add
scas
xor
xchg
data16
jge
rorl
in
stos
lret
cmp
fstps
cmpsb
outsb
nop
test
bound
jmp
xor
cmpl
sbb
mov
and
lods
pop
jns
bound
adc
test
sbb
mov
sub
xor
jp
icebp
ljmp
push
ss
pushf
push
adc
pop
sbb
scas
sarb
sbb
pop
cs
cmc
lock
pop
fcomip
bnd
inc
xchg
inc
xor
jg
fwait
inc
jo
dec
adc
popf
fsubl
pushf
add
mov
xor
jnp
mov
pop
mov
sarb
cwtl
les
xchg
xchg
icebp
hlt
add
inc
add
test
icebp
inc
stos
push
in
adc
add
adc
add
mov
push
xchg
inc
mov
sub
je
icebp
or
cli
pushf
popa
movsb
or
and
add
xchg
and
sti
inc
sbb
xor
repz
or
add
xlat
dec
and
movsb
popa
sbb
in
mov
lahf
test
rcrl
or
stc
cld
imul
imul
or
sbb
jb
mov
call
lock
add
adc
jmp
inc
mov
fnsave
cmp
insl
lods
pusha
dec
sbbl
xor
outsl
mov
xorb
loope
imul
pop
fsubs
fsubs
jae
push
outsb
cli
in
push
and
insb
or
loopne
lahf
dec
insl
les
dec
pop
idivl
movsl
dec
inc
inc
xchg
push
jge
xchg
cltd
jle
lock
int3
pop
test
outsb
cmp
mov
pop
stos
mull
dec
or
fstps
add
mov
std
jge
push
outsl
xor
inc
lods
test
add
and
das
add
in
jl
cltd
lods
mov
jb
lods
aam
leave
dec
or
dec
shl
jle
jecxz
fisubs
movsl
push
add
repz
rcll
test
pop
fidivl
pop
pusha
out
mov
mov
mov
dec
pop
cltd
pusha
aam
repz
mov
push
repz
faddl
js
dec
nop
repz
ret
sub
movsl
or
lahf
or
stc
add
mov
sbbl
push
shr
dec
jmp
shl
inc
fcomps
shrb
insb
ds
mov
jmp
adcb
pop
ror
push
out
hlt
movsb
jo
jl
push
mov
jno
jl
cs
xor
aad
es
imul
bound
imul
pop
call
mov
fnstsw
fisubrl
movsl
negb
mov
push
add
fs
ficompl
xor
test
icebp
xor
jle
rcrl
movsl
sbb
mov
xor
pop
push
subb
in
mov
push
xor
add
or
leave
loope
mov
xor
enter
and
je
fst
fimull
les
mov
mov
sub
lds
repz
jbe
lds
idivl
in
sahf
out
fldenv
sbb
cli
cmpl
int3
pusha
sub
pop
push
out
daa
ja
jecxz
xchg
jp
pop
or
or
pop
aad
je
movsb
sbb
sbb
jmp
adc
icebp
cmp
push
jbe
in
cld
add
and
cmp
xlat
lea
and
call
or
inc
pop
stos
mov
push
sbb
inc
dec
je
sbb
out
and
stos
jns
idivb
or
ret
stc
rcrb
test
call
lcall
subb
inc
imul
or
push
or
mov
pop
lret
mov
cmp
sub
push
mov
in
fdivrl
ret
jp
shll
push
fcomps
jae
lds
mov
jno
dec
adc
daa
push
imul
cmpsb
ja
push
push
es
imul
test
inc
mov
pop
or
xlat
lods
cmp
inc
loopne
push
test
ss
jno
and
das
rcll
leave
cwtl
ljmp
clc
dec
mov
jae
cmp
sbb
shlb
into
loope
dec
sbb
xorb
and
js
lahf
mov
jne
xchg
stc
icebp
mov
fsubrp
scas
dec
popa
ljmp
scas
xchg
sbb
and
and
repnz
pushf
xlat
xchg
pop
shrl
push
ja
pop
fwait
insl
pop
push
sub
push
pop
in
pop
push
addb
das
dec
cmp
cmc
in
cmp
insl
pop
out
dec
mov
inc
jbe
ds
xchg
mov
dec
inc
mov
lret
pop
fmuls
idivl
and
sub
mov
fcomp
icebp
pop
xchg
loope
imul
inc
adc
cmp
sbb
ljmp
sub
xchg
test
xor
adc
jne
movsl
std
adc
test
inc
xchg
cmp
popf
lods
out
mov
cld
hlt
adc
dec
jnp
cwtl
inc
and
cmp
test
mov
das
sahf
shll
cmp
dec
arpl
push
push
sbb
pop
es
xlat
bound
lret
push
adcb
push
jnp
sub
mov
nop
dec
mov
sub
test
out
mov
sub
lret
inc
mov
cmc
mov
hlt
orb
jl
lds
icebp
pop
ljmp
xor
test
sub
jne
xchg
xor
mov
push
push
roll
std
pop
inc
mov
aad
add
pop
jns
mov
aas
popa
out
xor
mov
cld
sub
dec
dec
hlt
mov
sarl
sahf
or
test
in
icebp
repz
lahf
fnstcw
dec
movl
push
mov
jp
popa
lahf
das
sbb
or
sbb
int
imul
lret
cmp
es
repz
cmpsl
cmp
mov
shll
mov
jl
fwait
out
mov
ss
dec
xor
xor
and
cmc
jns
xor
xlat
mov
hlt
dec
xor
add
jge
jnp
mov
or
bound
outsl
fnstenv
imul
jno
mov
stos
out
or
sbb
ficoml
in
adc
bound
inc
inc
inc
fmulp
xchg
pop
inc
add
sbb
sub
xchg
sbbb
xor
mov
xor
fiaddl
sub
cmp
dec
jns
jecxz
rcrl
xchg
sub
fstpt
sbb
out
ret
test
adc
repz
inc
mov
and
pusha
arpl
in
mov
aad
ljmp
push
std
push
stos
dec
or
out
sub
popa
fwait
pop
clc
popa
mov
prefetchwt1
or
pop
sbb
mov
mov
lea
cmp
aad
idivl
rep
adc
mov
insl
hlt
repnz
mov
popa
push
pop
inc
lcall
adc
xchg
rcrb
xor
add
test
jnp
pushf
popa
push
inc
std
pop
adc
out
pop
int
and
in
adcl
push
lea
xchg
shl
aad
and
dec
shlb
add
sbb
data16
in
xor
dec
imull
pop
mov
jbe
jge
cli
aas
mov
sbb
cli
or
in
xchg
and
dec
iret
insb
scas
and
inc
idivb
je
shrb
xchg
dec
adc
fwait
pusha
divb
flds
sarb
insb
or
cmpsl
repz
push
push
sub
sub
xchg
arpl
sub
ljmp
daa
pusha
mov
subl
dec
jne
out
iret
out
dec
stc
sarb
jnp
sti
push
mov
fcoms
movsb
mov
out
sub
dec
push
add
push
ss
test
mov
cmpsl
lods
or
fisttpl
test
aaa
xchg
cltd
pop
xchg
scas
jne
iret
data16
cmc
push
lods
popl
into
out
jle
dec
mov
dec
popa
ret
mov
or
leave
jg
adc
movb
scas
xor
outsb
arpl
mov
sub
movsb
filds
add
mov
adc
mov
enter
xchg
data16
jl
sub
or
hlt
loopne
lret
sbbb
mov
fwait
loopne
fcmovnu
pop
fs
add
xor
les
mov
adc
mov
data16
repz
stc
or
fdiv
out
lret
inc
ret
in
add
outsb
jno
cli
lds
mov
es
loop
hlt
push
lods
outsl
sbb
adcb
mov
xchg
iret
lret
sbb
dec
mov
inc
fnsave
cmp
inc
xchg
mov
jo
int
test
sbb
lret
pop
cmp
sub
orb
cld
addr16
mov
cli
add
push
jle
sbb
orb
call
jne
jg
sbbb
les
movsl
inc
in
cmc
mov
dec
test
xor
sbb
mov
jge
jb
mov
jge
mov
add
mov
xchg
cmpsb
mov
push
add
popf
jl
andl
sbb
cmp
push
sbb
push
cmpsl
push
out
in
pop
dec
pop
cmp
sbb
mov
lcall
test
push
mov
push
movsb
movsb
jns
insl
in
xchg
push
xchg
mov
adc
pop
inc
pop
lcall
jecxz
out
cmp
mov
inc
sahf
jg
enter
rorl
mov
mov
mov
dec
in
adc
outsl
jp
mov
inc
jbe
xchg
sub
rcll
in
pop
inc
add
mov
scas
mov
arpl
mov
mov
addr16
adc
xchg
ja
int3
fistl
jo
out
lock
mov
xor
lea
loop
mov
outsb
add
repnz
inc
push
and
test
int3
xchg
cmp
sub
jb
lret
popl
aad
xor
sbb
pop
mov
ret
cmc
subb
sbb
xchg
lret
adc
mov
push
mov
and
xchg
sbb
mov
mov
push
add
xchg
ss
sbb
adc
into
push
data16
stc
lcall
pop
in
and
lahf
popa
xchg
inc
scas
mov
mov
cltd
mov
mov
pop
rep
xchg
ret
mov
jbe
sbb
cmp
sbb
jbe
push
push
std
js
xorb
xor
mov
mov
std
pop
adc
out
fisttpl
sbb
sbb
fisttps
iret
repnz
push
addl
or
shr
insl
lcall
sub
lahf
fbld
les
xorl
aas
into
ljmp
repz
js
inc
jns
push
cld
and
flds
mov
shrl
mov
or
scas
mov
lretw
mov
popf
leave
movsb
pop
mov
jmp
ja
add
add
ja
inc
dec
push
push
out
xlat
pop
xor
cmp
popa
out
xchg
push
aaa
pop
cmpsb
negb
adc
test
out
gs
mov
pushl
imul
addr16
add
fcoml
daa
shrb
mov
mov
int
pop
scas
scas
and
mov
xchg
test
sbb
adc
pop
jecxz
lds
lcall
pop
or
mov
lahf
jne
cmpsl
mov
shll
out
ret
loope
xchg
je
in
inc
add
xlat
pushf
aaa
dec
roll
push
mov
idivl
loopne
out
pop
pop
sub
cwtl
loop
in
ljmp
jl
pushf
lods
in
and
lret
das
jecxz
mov
pop
sbb
or
ja
adc
sub
jnp
movsb
popf
xor
bound
mov
cmpsb
mov
mov
and
jbe
icebp
mov
je
xor
movsb
addr16
push
adc
lret
les
imul
fcoms
mov
call
sub
in
movb
sbb
imul
lea
leave
inc
nopl
repnz
mov
imul
and
inc
xchg
stos
mov
xor
push
rcr
mov
push
add
out
imul
cli
sub
sub
out
fwait
scas
cmp
in
xor
sbb
push
jo
test
je
data16
jae
xor
cmpsl
test
add
add
or
out
sbb
add
mov
int
mov
xchg
pop
loope
repz
int3
add
addr16
sub
jge
sbb
fucomi
pop
mov
or
scas
dec
lods
cwtl
xor
pushf
into
stos
popa
xchg
or
mov
cmp
pop
popl
lods
sbb
outsb
mov
mov
mov
out
loope
js
testb
adc
or
jp
sti
test
inc
sbb
int3
dec
and
aam
cmc
test
pop
xor
out
les
aaa
jae
sub
and
mov
jmp
addb
xchg
cwtl
jb
jnp
pop
mov
popl
leave
sahf
pop
bnd
arpl
bound
loopne
call
jecxz
fsts
std
dec
fmuls
fists
jo
push
sti
xchg
lods
jno
pusha
fcoml
lock
push
in
jp
and
je
test
ret
cmpb
jns
cmp
lods
fistpll
or
pop
and
xchg
jne
pop
lcall
popf
jg
and
or
subl
pop
dec
insb
mov
xchg
es
pop
cmpsb
fimuls
aad
fwait
mov
mov
shrb
dec
add
fidivrl
aam
arpl
and
fs
cld
cmpsl
and
dec
push
jno
cmp
or
adc
xor
pop
xor
imul
add
insb
and
sbb
aaa
hlt
fwait
and
xor
xchg
lock
mov
ficoml
jbe
mov
inc
sbb
ja
fldenv
in
imul
lods
cmp
sahf
pop
imulb
and
leave
jle
cmpsb
bound
roll
dec
lret
sub
fsubrp
icebp
jae
jge
fstl
enter
bound
push
xlat
hlt
addl
fwait
pop
jg
inc
jg
jle
or
pop
fimull
xchg
cmpsl
cmp
shl
dec
sbb
and
xor
jae
movsl
in
inc
cmp
popf
add
adc
and
pop
sbbl
push
mov
xchg
pop
jne
xor
loope
mov
test
fnclex
cli
andb
ja
test
pop
xlat
jne
xchg
xor
pop
test
mov
add
adc
pop
fldt
enter
rcrb
lods
mov
push
push
dec
jg
pop
mov
inc
jbe
mov
out
test
xchg
or
lods
inc
xchg
jge
adc
cmpsl
shll
jecxz
sub
add
arpl
loopne
xor
jb
lea
out
divl
lcall
push
ficompl
xlat
inc
push
stc
fisttps
mov
cmp
cwtl
add
sbb
out
test
pushf
or
add
out
lret
cltd
jecxz
in
lret
jle
mov
insl
dec
dec
repz
loop
add
jp
xlat
xchg
ja
stos
sti
mov
sbb
add
in
cmp
in
testb
sbb
lods
push
arpl
mov
and
pop
or
shll
pop
repnz
push
scas
popl
and
adc
test
mov
jne
test
sbb
hlt
pop
jno
outsl
and
sub
and
xchg
sbb
test
fisubl
sub
mov
pusha
out
movsl
andw
icebp
mov
xor
data16
inc
sbb
movsb
ret
mov
adc
xchg
in
sbb
push
les
jmp
call
sti
push
jae
dec
mov
xchg
ljmp
push
divb
into
adc
nop
push
hlt
out
adc
and
int3
push
lock
sbb
adc
out
add
pop
add
cmp
sbb
push
pop
aam
scas
cmp
sbb
mov
repz
push
sub
sbb
or
adc
or
jb
jnp
lret
inc
lret
xor
jmp
pop
dec
in
out
leave
mov
in
adc
mov
mov
popa
mov
add
mov
arpl
cli
scas
xchg
push
ret
jge
xchg
sub
mov
ret
fwait
dec
dec
xor
pusha
popa
lret
mov
data16
dec
out
or
add
pop
popl
xchg
sbb
jnp
loopne
negl
cwtl
stc
scas
mov
mov
jne
stos
or
and
ja
inc
out
in
fsubrl
cmpsl
xor
ftst
cmpsl
inc
insb
push
inc
lcall
iret
xchg
loop
dec
cli
sub
mov
in
or
int
loope
mov
leave
dec
xor
mov
sub
lcall
xchg
nop
lahf
mov
xor
sbb
push
clc
sahf
push
mov
add
cmp
loopne
cltd
dec
adc
sti
int
adc
inc
enter
lret
movsb
xchg
lock
mov
out
mov
pop
push
jl
sahf
ret
mov
mov
sti
insb
pop
out
aad
pusha
mov
outsl
push
fildll
fcoms
jno
lahf
les
jle
mov
pop
aas
cmp
dec
sub
call
lahf
add
mov
jle
bound
push
aad
push
or
mov
dec
pop
push
bound
adc
xor
push
ja
mov
rcl
mov
or
push
addl
pop
sbb
or
mov
sub
fcomp
std
fdivrs
sti
mov
faddl
and
sarl
xchg
clc
ljmp
and
or
loopne
sub
dec
divb
or
push
sub
jmp
and
cli
push
and
icebp
outsb
mov
sub
cmp
sub
std
test
pop
enter
sbb
dec
mov
jg
push
sbb
dec
lcall
push
lods
icebp
inc
push
cmpsb
cmp
fnstsw
je
sub
icebp
lds
adc
loopne
sbb
popa
roll
mov
das
cmp
addr16
push
sbb
ljmp
xor
adc
pop
sarl
cwtl
loopne
jns
pushf
mov
and
popa
in
icebp
pop
push
dec
test
xor
jle
jmp
mull
or
fnsave
fcompl
adc
icebp
inc
test
pop
pop
sub
cli
pop
mov
mov
dec
mov
dec
mov
mov
xchg
dec
rorl
fnsave
add
imul
scas
repz
inc
pop
jmp
xchg
jnp
loopne
lods
mov
aad
lret
lea
xchg
adc
out
mov
jae
mov
out
sbb
mov
cmp
push
cli
mov
inc
outsb
in
ljmp
inc
cmpsb
xlat
jmp
mov
push
sahf
rcr
ds
mov
sbb
push
push
pop
push
add
hlt
mov
jmp
xor
xchg
insl
jbe
jno,pn
scas
imul
add
call
jnp
pop
adc
fwait
cld
jmp
cld
push
imul
cltd
std
and
pop
jle
sbb
inc
nop
mov
enter
mov
mov
dec
push
fstpt
pop
imul
mov
loop
dec
insl
add
bound
nop
adc
add
xor
in
pop
shll
fwait
subl
movsl
push
push
jle
mov
lret
push
les
stos
or
xchg
mov
loop
sub
jnp
int3
repnz
test
xor
push
ds
cmpsb
ds
cld
xchg
sbbb
mov
sub
push
jns
loop
loope
pop
add
or
mov
bound
jmp
cli
leave
shll
xchg
cli
sarb
xlat
jl
push
cmp
sub
int3
inc
xchg
xchg
cmp
roll
insl
or
and
mov
in
mov
push
ret
push
rcrb
pop
test
mov
and
push
sbb
stos
loopne
fiadds
push
jb
jecxz
nop
cs
push
xchg
push
sbb
les
stc
cs
push
in
loopne
and
aad
stc
jno
jecxz
xor
test
or
movsb
scas
sub
inc
fsubl
sub
push
negb
out
sbb
popa
jge
inc
xor
ljmp
andb
ss
jae
daa
inc
stc
lock
push
pop
adc
imul
cmp
mov
lahf
stos
mov
cmpsb
ret
cli
cwtl
jns
fsubs
pop
mov
insl
add
push
push
sbb
pop
pusha
lock
xchg
jo
arpl
movsb
lret
inc
rcrb
sub
lret
pop
movsb
xor
inc
outsl
lret
fldl
test
xchg
jae
sbb
mov
xchg
shr
cmp
rol
adc
fsin
jns
pop
sbb
in
mov
je
dec
mov
loope
cmp
sbb
imul
push
cmp
loope
out
daa
icebp
ret
cmpsb
mov
lret
outsb
sbb
pop
cmp
mov
dec
out
xor
sub
loopne
xchg
jg
mov
rorl
and
repnz
jg
and
leave
or
dec
adc
aad
ret
stos
or
sti
les
jmp
addr16
mov
lahf
push
aas
mov
aas
jl
add
mov
pop
mov
add
in
mov
jb
das
xor
and
jb
lock
jle
out
mov
jmp
adc
iret
insl
and
push
loope
insb
pusha
test
mov
nop
mov
xorl
daa
sbbb
xor
dec
sbb
pop
xchg
push
mov
add
adc
fnstenv
jmp
jecxz
xor
sbb
inc
push
and
imul
sbb
jmp
jmp
pop
jae
in
or
outsb
mov
in
fnstenv
pushf
vaddsubpd
jne
sbb
inc
pop
rolb
out
or
bound
and
ret
loope
jmp
loop
cmpsb
das
push
inc
mov
cmpsb
xchg
les
xchg
popa
data16
and
jnp
cmc
jno
pop
push
mov
popf
cmpsl
cmp
adc
and
sbb
shr
push
aad
mov
xchg
sub
adc
sarb
xor
bound
mov
cmpsb
cmp
cmp
push
out
sbb
jle
push
inc
in
cmpsb
and
clc
adc
sbb
cmp
fcoml
push
push
leave
int3
mov
inc
sbb
xchg
lret
cs
xor
in
xor
dec
and
xor
jg
adc
cwtl
jmp
fucomi
jge
xlat
mov
lock
cmp
xchg
scas
xchg
flds
cmp
inc
mov
call
mov
ljmp
movsb
cmp
adc
add
arpl
push
mov
mov
sbb
jno
push
movsl
shrl
cmp
push
sub
cwtl
mov
pop
addr16
jmp
sbb
notb
repz
call
aam
and
adcb
pop
sub
in
out
int
icebp
lret
mov
js
mov
ljmp
cmp
fisubrs
fstl
jne
loope
xchg
insl
cwtl
insl
jns
ret
add
add
jle
rcrl
jg
fabs
leave
cmp
jno
fidivrl
loope
mov
fists
jle
xchg
push
mov
pop
jne
sub
adc
bound
sub
movb
jne
outsb
mov
cmpsb
sub
mov
add
mov
mov
push
dec
popa
push
fwait
or
adc
mov
fsubs
add
and
dec
cmp
adc
push
iret
push
and
cmp
loope
dec
and
sbb
xlat
outsl
repnz
fsubl
fsubs
data16
xchg
push
fstps
pop
lret
xor
mov
leave
jmp
and
xor
decb
mov
dec
ret
push
jle
inc
outsb
push
cmc
aas
sub
mov
sub
and
mov
xorl
stc
int3
ss
pop
sub
mul
cmp
ret
add
dec
mov
icebp
jg
out
or
and
lea
stc
data16
add
push
cltd
nop
xchg
ljmp
xrelease
mov
add
add
mov
cld
fcmovnb
into
sub
fsubl
and
dec
jle
inc
popf
mov
dec
fst
fwait
fs
push
add
jle
sub
lea
sahf
scas
lock
push
mov
xchg
sub
push
sub
repz
sahf
pop
dec
test
mov
ffreep
out
dec
jbe
clc
cwtl
icebp
xorl
outsb
fadds
hlt
pop
pushf
std
cwtl
lea
push
mov
mov
inc
dec
aaa
test
sbb
in
cs
cmpsl
add
dec
sub
pop
leave
mov
sub
into
nop
mov
or
inc
les
cmpsb
xor
aad
sbb
inc
jge
cmpsl
das
nop
and
add
mov
pop
jo
dec
mov
xchg
xchg
movzbl
mov
je
lret
pop
addr16
mov
mov
cmp
inc
push
leave
mov
mov
lret
in
shrb
xchg
je
mov
push
xchg
aam
mov
js
sub
push
sbb
js
jp
dec
rdmsr
js
dec
nop
out
sub
mov
fwait
adc
adc
dec
fimuls
rcrb
dec
stos
fisttpl
dec
push
addl
mov
and
iret
mov
test
sub
scas
scas
pop
mov
shr
sub
addr16
jbe
dec
ljmp
ficomps
adc
cmc
xchg
insb
mov
jp
dec
imul
jae,pn
mov
sbbb
xor
cli
lea
shl
popf
es
jno
sti
imul
rclb
mov
adc
sbb
in
sahf
movsb
test
repnz
pop
jmp
mov
es
outsb
inc
push
shr
dec
stos
es
mov
lods
icebp
jae
cmp
enter
cmp
mov
enter
mov
cmpsl
mov
pop
stos
jge
inc
out
roll
mov
push
mov
mov
cmp
xchg
pop
sbb
das
lea
sub
mov
or
dec
mov
push
mov
xchg
inc
jns
dec
test
imul
push
pop
or
sbb
enter
adcb
cmp
fs
test
and
pop
mov
pop
push
xlat
dec
jb
xor
or
mulb
aas
and
hlt
push
inc
jp
stos
jae
mov
mov
mov
lods
jg
out
test
divb
pop
mov
or
inc
sbb
xor
lahf
arpl
rcll
clc
jne
pop
inc
jne
lock
movb
cmovbe
cmp
imull
int
pusha
jecxz
xchg
pop
jle
mov
xchg
je
push
add
cltd
cmp
int3
mov
fs
in
fsubs
les
mov
sbb
mov
sbb
add
and
inc
add
pusha
jo
xchg
or
adc
mov
rcrl
push
push
sub
ja
mov
cltd
jb
push
loopne
xchg
popf
stc
sub
mov
mov
push
push
xchg
repnz
mov
repz
int
or
mov
dec
and
push
and
insl
mov
ljmp
sbb
mov
xchg
lret
add
lock
sub
and
icebp
rorb
ljmp
xorb
pop
lcall
mov
xchg
movsl
xor
add
sahf
push
aam
mov
icebp
jmp
pop
bound
dec
push
movsl
std
pop
mov
mov
out
inc
hlt
imul
in
jle
stc
testl
cmp
push
cmovns
aad
xchg
sbb
or
ret
xor
cmp
lods
push
jae
cmp
fsts
sbb
filds
sti
xor
ja
jne
pop
sbb
sbb
push
data16
cmp
in
imul
adc
xor
fdivs
js
mov
push
xlat
mov
rcrb
lcall
mov
push
rcr
data16
jb
mov
aas
fsubl
mov
sub
pop
repnz
ja
enter
xchg
repnz
jae
es
js
test
lcall
test
pop
cld
mov
mov
push
xor
xor
cwtl
xchg
lret
andl
inc
lods
mov
fnsave
xchg
and
inc
mov
or
inc
cs
bound
jecxz
daa
inc
mov
dec
push
fucom
mov
pop
adc
jle
and
lret
lret
ja
or
push
imul
cwtl
xor
xor
xor
jns
data16
pushf
push
dec
dec
xor
popf
rcll
out
outsl
mov
xchg
lcall
mov
nop
xor
loopne
sub
jmp
push
or
jmp
cmp
mov
inc
push
data16
dec
mov
sbb
inc
mov
test
mov
dec
jo
mov
out
pop
sbb
adc
sti
inc
hlt
mov
xlat
sub
es
imul
mov
mov
mov
sbb
loopne
repnz
push
adc
cld
les
movsl
mov
add
out
cli
pop
xor
inc
sbb
addr16
cwtl
pop
les
pop
push
xchg
xor
add
into
out
inc
arpl
fsubr
fldcw
xor
jp
add
adc
loope
aas
mov
or
cld
push
gs
jl
popa
add
push
cmp
pop
pop
fincstp
lret
xchg
cmp
xor
add
loopne
movsl
mov
loope
inc
imull
or
dec
inc
dec
call
in
sub
cmpb
enter
repnz
sbbl
in
inc
pop
into
nop
in
std
xchg
sbbl
test
repz
xor
pop
jae,pt
outsb
out
pop
nop
xor
adc
es
or
out
rcrb
or
cli
jmp
out
xchg
fdivr
sti
lret
outsb
add
push
popa
inc
sub
fdivrs
mov
js
inc
aaa
loop
xor
mov
leave
gs
aas
xchg
test
fcoml
sub
jnp
loop
and
addr16
xchg
mov
sbb
into
mov
loopne
xchg
fnstcw
lock
mov
fdivs
shl
add
and
es
mov
in
mov
inc
mov
jno
cmp
xor
lods
xlat
xor
adc
jnp
and
je
cmpsl
and
fists
clc
jbe
enter
shlb
dec
loope
xchg
jo
mov
ja
mov
and
push
test
jae
mov
dec
mov
jb
push
inc
or
mov
sub
mov
shll
mov
inc
adc
inc
xchg
sti
lods
lret
test
adc
sbb
daa
aad
and
adc
mov
loopne
aam
sub
test
mov
lcall
repz
mov
rcr
scas
test
pop
push
inc
jns
leave
jae
or
out
add
lock
jecxz
or
mov
mov
xchg
xor
ljmp
cmp
sbbb
lds
xchg
jae
inc
push
pop
add
je
xchg
lods
push
push
add
pop
jns
fnstsw
out
mov
pop
adc
sub
jne
jb
fwait
repz
lcall
pop
inc
dec
je
mov
xor
loope
fdivrl
insb
mov
imul
push
out
pop
xchg
mov
div
mov
cmp
sub
adc
pushf
cmpsb
fsubs
jle
imul
mov
mov
and
fsubs
lret
mov
std
inc
pusha
sub
fnstcw
dec
cmp
in
inc
jnp
xchg
jp
push
movsl
mov
or
mov
aaa
call
push
dec
mov
cmp
sbb
dec
outsl
mov
mov
mov
push
cmpsl
lcall
jmp
aam
mov
call
jmp
aas
inc
mov
out
lods
xlat
jae
add
push
dec
xor
cltd
movsl
int
xor
arpl
adc
test
dec
sub
test
mov
loop
push
dec
or
or
mov
sub
test
bound
or
pusha
outsl
cmpsb
and
ret
jmp
in
shl
sub
inc
bound
or
cs
test
outsb
cmp
cmp
fsubrl
xor
and
out
and
mov
outsb
shrl
or
mov
jp
cmp
aad
aas
pushf
icebp
loop
pop
lea
xor
sbb
in
test
lea
xchg
mov
jge
paddusw
and
jge,pt
cmc
outsb
sub
loop
lret
jb
push
push
xchg
ficompl
add
cmc
stc
in
pop
iret
xor
push
adc
sahf
stos
mov
into
fmuls
inc
cltd
mov
cmp
and
sbbl
aam
insb
push
xor
inc
or
xchg
and
scas
adc
mull
add
add
std
cli
les
xchg
and
cltd
fstpt
or
dec
lcall
add
int
push
sub
dec
or
sbb
cmp
std
push
jmp
aas
add
push
imul
ja
xchg
mov
add
pop
push
xchg
scas
mov
mov
int3
pusha
leave
movl
fistpl
jns
mov
ja
arpl
cli
pushf
adc
push
ret
and
push
dec
repnz
pop
push
add
xor
stc
sub
ljmp
dec
js
mov
lea
add
jmp
push
jp
pop
adc
and
xlat
push
jo
mov
sahf
push
xchg
jne
cmpsb
test
dec
sbb
push
or
ljmp
jg
sub
test
mov
jl
mov
sbb
add
loopne
cmp
andb
xchg
fimull
imul
xor
test
dec
jle
pop
jecxz,pt
notl
cmp
fiadds
mov
mov
lret
jns
fistps
xor
or
cmpsl
es
jns
mov
icebp
js
test
sahf
ds
inc
dec
mov
shll
xchg
jg
out
enter
dec
push
jp
imul
pop
es
push
stc
cmp
sbb
push
rolb
icebp
pop
jne
xor
lcall
jmp
xchg
sti
in
push
shrl
jne
push
sub
movsl
or
lcall
and
dec
xor
xchg
jo
xlat
adc
and
adc
add
rcrb
fsubrl
fildl
jns
jmp
jg
aam
and
sub
mov
pop
xor
jp
call
stos
mov
enter
repnz
xor
das
add
mov
or
stos
into
dec
lcall
xchg
in
xor
jmp
jg
xor
pop
pop
pop
jno
vmovaps
mov
cmp
lret
rorl
push
mov
idivl
mov
lods
adc
sahf
mov
out
pop
cli
mov
sahf
mov
lret
inc
add
movsb
adc
in
les
lret
inc
and
ss
rorb
mov
or
fs
into
or
xor
cmp
dec
shl
divl
mov
rcrb
mov
fisubs
std
mov
xchg
sbb
iret
pop
clc
dec
adc
push
pop
shlb
inc
jge
das
repnz
sbb
or
bound
fwait
pop
pop
icebp
movsb
test
dec
jmp
xchg
pop
push
repnz
add
xchg
or
fildll
sahf
adc
pop
subl
push
lea
ds
jg
mov
add
jmp
leave
fnstsw
jmp
rclb
test
xchg
lods
test
mov
inc
mov
inc
inc
stos
aad
ret
ret
add
adcb
cmp
int3
pop
sub
sbb
orl
test
sub
or
popf
jnp
push
sub
fistl
mov
add
mov
test
sbb
xchg
mov
or
sbb
addb
mov
mov
test
mov
or
inc
cmp
cltd
jno
dec
jp
cmp
insl
mov
push
xchg
push
sbbl
sti
in
hlt
mov
dec
ret
jbe
ret
inc
mov
cmpsb
sbb
insb
inc
sbb
mul
out
fucomip
dec
xchg
inc
and
in
mov
testl
cwtl
pop
adc
mov
xchg
and
sbb
mov
outsb
repnz
test
movb
add
mov
js
mov
fists
lods
or
mov
lds
dec
fwait
fwait
inc
fldenv
cmp
mov
xchg
out
or
jecxz
ljmp
in
mov
call
fcmovnu
mov
mov
scas
xchg
xchg
adc
jecxz
dec
sub
and
repz
addl
fs
fisubrl
jge
jp
jo
xor
dec
jb
lcall
and
call
sub
inc
push
or
inc
cli
add
mov
sbb
add
jecxz
cmpsl
call
xor
sub
sub
xchg
push
pushf
mov
and
jnp
es
leave
into
inc
xchg
pop
add
cmpsb
xchg
or
fadds
add
loopne
repnz
sbb
fstl
ljmp
scas
jb
xchg
clc
iret
mov
inc
add
js
mov
or
mov
cli
pop
push
icebp
lcall
out
insb
add
cmpl
cwtl
jns
push
inc
or
pop
jecxz
xchg
test
push
pop
add
jbe
loopne
mov
imul
sub
pop
push
je
orl
mov
es
or
adc
inc
mov
stos
sub
or
or
jns
jo
push
inc
cmpsb
test
ljmp
loope
xor
cs
sbb
push
fcmovb
mov
xchg
push
cmp
push
inc
fwait
lods
push
cmp
mov
inc
pop
jo
and
fstpl
loopne
fldpi
ret
add
out
or
stc
mov
rcll
loope
les
je
and
pop
stos
out
cltd
dec
sti
inc
fimuls
pop
into
dec
clc
mov
mov
and
imul
ljmp
ret
xchg
push
cmp
popa
in
int3
sub
clc
push
mov
in
push
lods
cld
dec
inc
or
pop
or
adc
pop
add
jmp
jno
and
xchg
call
aad
pop
and
std
cmp
stc
cwtl
xchg
pop
adc
cmc
insl
popl
mov
mov
xchg
sub
js
repz
decb
fsubrs
push
icebp
jmp
and
jp
xchg
mov
push
mov
sbb
sub
sub
adc
rorl
rolb
xor
adc
jns
jmp
popa
dec
dec
cmp
mov
xchg
in
adc
ret
dec
pop
or
lods
sahf
hlt
and
or
or
mov
into
jg
dec
jnp
and
iret
mov
repnz
or
mov
int3
inc
pop
add
je
fbstp
add
scas
mov
sar
stos
shl
add
push
mov
outsl
jnp
js
sarl
mov
mov
data16
mov
mov
ss
and
mov
das
dec
insl
jp
push
xlat
jge
mov
sti
mov
imul
mov
dec
add
mov
xchg
pusha
mov
sbb
xchg
imul
aaa
pop
jnp
dec
movsb
dec
push
sahf
mov
dec
push
and
ficoms
pop
aam
inc
fsubrl
mov
addl
mov
das
add
cltd
lahf
add
fdivrp
in
mov
cmp
cmp
sbb
jns
push
or
or
cld
mov
jl
ss
inc
cmp
pop
leave
lahf
pop
jl
xchg
movsl
sub
mov
roll
inc
lret
push
iret
adc
mov
jg
sbb
jl
nop
fisubrs
test
adc
jno
mov
je
push
aaa
into
mov
xor
add
add
add
jp
inc
cmp
leave
les
xchg
es
mov
mov
cmpsb
lret
and
mov
jo
dec
mov
inc
push
mov
cmp
and
adc
jmp
mov
dec
imull
push
dec
inc
test
xchg
sbb
test
insl
sbb
jns
scas
lcall
pusha
movsl
icebp
filds
insb
bound
sub
mov
mov
jnp
and
imul
xor
ljmp
ja
lahf
insl
out
in
sbb
sub
clc
daa
int
data16
push
cli
addr16
pop
test
gs
imul
in
push
pushf
decb
repz
hlt
lods
in
cmc
adc
shl
jb
dec
insl
es
pop
jmp
add
lds
push
pop
stos
cwtl
xor
std
adc
mov
in
gs
dec
imul
std
add
cmp
jae
adcb
dec
rol
pop
xlat
jmp
loop
daa
inc
or
lcall
xchg
aaa
stos
add
adc
push
imul
mov
push
insl
das
adc
shlb
xor
sub
xor
mov
scas
mov
push
and
in
sti
nop
stc
daa
xor
xchg
nop
shr
shlb
out
test
shlb
iret
pushf
add
sub
cmc
or
notb
imul
mov
dec
inc
xchg
sbb
sub
fbld
pop
mov
pusha
push
fcomps
xor
inc
pop
mov
ret
adc
mov
xchg
stos
sbb
dec
jl
mov
jne
adc
or
fwait
pop
fisubl
jnp
ljmp
cmp
sbb
repz
popa
call
cmpsb
inc
mov
mov
out
pop
jge
pop
push
insl
fidivrs
in
mov
das
fildll
negb
int
stc
int3
cmp
xlat
mov
stos
jle
push
or
jno
mov
mov
sub
mov
dec
xor
into
hlt
push
repnz
stc
and
sub
mov
pop
test
sarb
add
push
fisubrl
xchg
cmp
lods
movsl
fmul
clc
pop
and
shll
nop
andb
nop
sbb
lock
mov
jge
add
fsts
jno
or
push
pusha
pusha
out
test
test
cmp
dec
pop
es
insl
imull
xor
dec
ret
push
lahf
and
pop
push
ja
lods
cmp
cs
pop
dec
push
mov
jo
icebp
ljmp
jle
aam
jl
sbb
sahf
stos
push
xchg
repz
cmpsb
dec
fs
dec
out
inc
fwait
mov
popf
and
sahf
pusha
mov
and
sub
and
inc
or
jmp
add
bts
adc
jnp
xchg
xor
mov
mulb
outsb
jae
imul
xchg
cltd
and
push
nop
ss
pop
cmp
xchg
lds
out
sbb
fwait
aas
loope
mov
addb
aas
jmp
jne
popf
or
cltd
cs
ljmp
xchg
jecxz
and
test
int3
aam
jg
sub
js
dec
scas
jae
pop
js
scas
xor
pusha
or
adc
sub
shl
cltd
aad
int3
push
shlb
dec
outsl
mov
ret
push
and
sub
add
xor
ret
adc
or
push
jns
out
adc
mov
sub
lret
inc
add
adcl
mov
mov
icebp
imul
cmpsb
xchg
sub
sub
xchg
pop
mov
jg
inc
jns
faddp
add
sbb
sub
jns
and
sti
mov
xor
in
repz
sbb
sarb
addr16
push
sub
adc
mov
out
lds
dec
mov
dec
jecxz
or
mov
mov
mov
jo
mov
jno
jmp
movsb
mov
addr16
mov
ljmp
test
bound
and
bound
std
je
mov
mov
loope
inc
divl
mov
iret
lcall
std
or
mov
mov
nop
jmp
ja
add
loope
imul
lods
out
test
ds
enter
test
mov
push
std
dec
out
xchg
inc
sbb
mov
mov
cmpsl
pop
sti
hlt
xchg
cli
xor
jbe
push
flds
dec
add
popa
jae
lods
test
out
int
loope
ret
mov
mov
scas
clc
imul
cli
push
add
imul
xchg
sbb
into
lcall
lods
mov
and
push
adc
xor
leave
hlt
ljmp
popf
and
je
ffreep
js
stos
xor
scas
or
push
scas
and
sub
jno
xchg
das
sbb
adc
xchg
push
jnp
inc
mov
std
iret
and
inc
out
and
sbb
in
inc
or
sub
fcomip
xor
cld
mov
or
inc
dec
dec
leave
enter
push
jb
push
ret
pop
lods
or
sbb
stos
in
jmp
flds
xchg
push
mov
repnz
cltd
inc
or
addl
int3
call
mov
popf
js
hlt
jp
push
mov
mov
rorl
fsubr
mov
ds
sub
cmp
loope
fidivrs
pop
xor
cmc
dec
les
and
mov
iret
adc
push
cmp
rcrb
js
add
ds
and
dec
es
xchg
mov
ss
mov
push
pop
adc
lret
adc
mov
inc
inc
leave
pop
add
test
add
push
push
imul
mov
in
jl
stos
jmp
and
mov
daa
dec
lahf
push
loope
xor
mov
and
adc
fwait
dec
and
call
inc
aad
push
mov
xchg
pop
in
mov
cmp
lahf
aas
pushl
cmp
dec
mov
lahf
push
or
popa
push
insb
dec
fimull
mov
dec
xchg
lret
stc
adc
cmp
sub
idivl
outsb
lsl
and
mov
add
push
sub
fldt
push
cmpsb
ret
lock
in
bnd
mov
push
pop
cwtl
es
pop
insb
push
mov
pop
jo
push
ds
mov
jne
jge
add
mov
int3
xor
sbb
in
cmp
mov
inc
fs
inc
xor
fldenv
dec
xlat
sbb
fcoml
and
nop
andl
insb
cmp
mov
jp
push
movsl
cmpsl
daa
lods
xchg
adc
enter
cli
cmp
sarl
pop
add
ss
sub
dec
jno,pt
xchg
orb
sub
loope
or
aaa
pop
xchg
xchg
imul
dec
jae
sbb
pop
sbb
ljmp
mov
sub
sub
dec
mov
push
cwtl
xor
mov
push
jnp
mov
mov
loope
cli
call
push
insb
icebp
movsl
out
fidivrl
mov
xor
dec
xor
fdivl
in
mov
outsl
sbbl
sbb
xlat
sub
aas
mov
lock
ljmp
popa
mov
pop
xchg
outsl
rorl
xchg
fisubrl
aas
push
sbb
cmp
loop
push
dec
pop
in
add
hlt
mov
lods
leave
mov
jb
and
mov
add
getsec
les
add
mov
pop
cli
and
pop
inc
cmp
iret
inc
addl
cltd
in
pop
cld
daa
out
mov
push
rcll
sarb
lcall
cmc
lcall
mov
daa
jnp
push
jo
int3
mov
sub
mov
cmp
or
faddl
cmp
cli
mov
aaa
cmpl
sti
ss
pop
inc
and
int3
je
xchg
clc
mov
scas
loopne
lods
sub
cmp
call
test
sbb
jnp
daa
call
mov
or
loope
movsb
pop
push
jge
in
stos
inc
jmp
loop
insb
popa
lods
jge
push
rorl
imul
ss
mov
adc
es
pushf
sbb
mov
inc
movsb
push
incl
mov
or
push
push
aad
add
fbld
call
jge
mov
mov
xor
push
jno
jmp
loope
add
jo
xchg
iret
clc
in
por
cmpsl
pop
mov
cmp
repnz
lods
aaa
gs
subl
or
adcl
add
jg
ja
adc
cltd
je
cli
arpl
lret
mov
dec
mov
xor
cld
stos
es
fstpt
dec
xchg
and
rcll
xor
and
icebp
pop
inc
pop
push
mov
pop
push
lret
mov
sbb
xchg
repz
stos
cltd
shl
mov
sti
push
js
loop
push
sbb
and
imul
repnz
movsl
dec
jb
adc
and
addr16
in
and
sbb
in
loop
push
add
push
dec
push
cmp
frstor
mov
mov
sub
es
mov
imul
insb
push
movsb
add
dec
clc
dec
mov
inc
pop
xor
hlt
loopne
push
push
cmp
loop
push
push
mov
pop
ret
xor
xor
rorl
fmulp
sub
nop
xor
rcl
ret
insb
and
les
into
in
pop
arpl
pop
insl
cld
outsl
push
adc
mov
and
out
or
xor
and
push
sub
enter
cwtl
pop
pop
mov
imul
cs
lods
push
fwait
xchg
sbb
cwtl
cmp
mov
jo
popa
gs
test
dec
push
push
decb
cmpsl
mov
xchg
mov
into
hlt
mov
out
sahf
cli
ljmp
or
ret
add
lahf
shlb
sarb
jne,pt
mov
es
inc
mov
cmp
lock
xor
mov
jns
push
cltd
pop
adc
jnp
inc
sar
loope
outsl
xor
dec
test
or
mov
push
cmp
or
pushf
leave
mov
push
scas
sbb
nop
mov
push
xlat
lods
jae
adc
leave
cmp
arpl
dec
mov
sub
out
pop
shrb
sub
sbb
jmp
add
repnz
int3
pop
fdivrs
js
dec
stc
out
push
outsb
movsb
fmuls
jns
cmp
popa
shll
stos
add
das
pop
jecxz
fisubs
or
jle
rcrb
lahf
xchg
or
adc
mov
inc
les
jo
call
and
scas
xor
xlat
sub
loopne
lret
negl
dec
movsb
sbb
out
cmpsb
mov
int3
xchg
lds
fistl
mov
jb
enter
js
popf
mov
in
inc
gs
mov
pop
xchg
push
sub
daa
push
push
pushf
add
test
cmpsb
push
int3
sahf
test
mull
imul
lods
xor
jo
addr16
cmp
idiv
sarl
je
mov
or
pop
repz
and
lcall
ss
sbb
dec
rcll
orl
push
lahf
mov
scas
xchg
and
aaa
faddl
test
xchg
adc
jo
test
sbb
cltd
out
scas
cmp
scas
push
or
cmp
ficoms
mov
inc
pop
call
cmpsl
mov
xor
faddl
ret
fsubrp
adc
sub
jae
dec
nop
negl
pop
push
insl
addr16
and
daa
addr16
in
mov
fisttpll
sbb
int3
cmp
pusha
lret
add
fistpll
nop
xor
sahf
dec
mov
test
mov
fimull
fwait
jns
or
dec
popf
dec
je
and
cmp
mov
push
outsb
incb
aad
inc
inc
mov
test
or
fs
call
dec
cmp
lods
cmc
jecxz
nop
lcall
idivb
sbb
notl
jns
fstps
lret
cmp
outsl
sbb
fnstenv
cmpsl
cli
mov
cltd
inc
xchg
add
out
dec
popf
movsl
pop
sbb
push
insb
push
dec
adc
sub
nop
lea
std
cmpsw
cmc
cmpl
pop
pop
mov
lods
scas
dec
inc
out
filds
jmp
pop
sub
push
push
cmpsb
inc
jge
mulb
xor
outsb
xor
das
sub
popa
jge
mov
push
mov
pop
adc
xor
mov
outsb
ljmp
jb
sbb
out
sarb
push
dec
negl
and
sub
or
cmc
xor
adc
mov
je
test
cld
xchg
leave
dec
out
or
in
mov
iret
xor
inc
fwait
sahf
pop
jecxz
mov
jle
add
lret
sub
scas
cld
rorb
outsb
and
sub
divb
mov
dec
sbb
movsb
sub
aas
xchg
sub
xor
and
pop
movsl
int
out
pushf
xor
inc
fwait
sub
sbb
sub
ljmp
push
dec
pop
cmc
xchg
sbb
jg
mov
inc
and
inc
int3
mov
mov
mov
mov
lahf
aas
fsubl
adc
arpl
testl
loop
or
pop
pop
and
xchg
into
xor
jl
sbb
push
inc
xor
inc
mov
mov
fisttps
lretw
loopne
jecxz
mov
or
icebp
movsl
into
mov
fucomi
outsb
pop
add
ljmp
pop
xchg
mov
lock
aaa
jmp
lds
popa
fiadds
fs
jnp
and
neg
push
cwtl
cmp
mov
out
stos
push
into
in
divb
sbb
xchg
push
pop
dec
xor
pop
loop
adc
fwait
ss
inc
mov
pop
mov
cs
stos
sbb
add
pusha
inc
mov
pop
mov
sub
pop
call
aad
out
faddp
inc
pop
gs
jp
push
mov
test
jle
das
xor
popf
fsubrl
lods
movntq
out
dec
repnz
decl
cmp
jecxz
cmp
add
dec
and
enter
loop
xorb
push
sti
sbbb
and
mov
iret
scas
xchg
cwtl
mov
icebp
push
cs
idivl
fcompl
lock
mov
or
sub
shll
xor
out
cwtl
sub
and
lret
dec
mov
xchg
adc
std
mov
out
jno
gs
push
push
lret
nop
add
sub
xor
cmp
cs
and
mov
xlat
ror
sub
fincstp
das
xchg
push
add
loope
mov
iret
aaa
and
xchg
pop
imul
xor
sarl
out
decb
cmp
jae
push
mov
iret
jo
jbe
and
testl
mov
in
xlat
dec
mov
lds
rcl
out
imul
test
cmp
inc
mov
das
add
mov
and
jo
into
incl
cmc
mov
mov
mov
gs
mov
shlb
pop
jo
outsb
insl
les
hlt
fcompl
cmp
mov
stos
ret
shll
lcall
or
mov
js
js
pop
jno
and
mov
faddl
call
sbb
xchg
lret
repnz
sbb
mov
push
pop
inc
mov
inc
addr16
out
sbb
sbbl
xor
lds
mov
dec
mov
cmpps
leave
pop
mov
enter
mov
insl
iret
dec
xchg
test
pop
sub
cmp
mov
lds
arpl
aas
or
jns
and
cltd
cs
cmp
sarb
rcll
scas
cmpsb
xchg
fists
jb
xchg
pop
jb
insb
mov
add
or
sub
mov
jnp
xchg
or
loope
dec
inc
std
stc
inc
jg
sub
inc
add
pop
std
cmp
test
test
les
test
out
adc
movups
xor
inc
fcoms
loopne
push
dec
mov
jo
jbe
aam
cmp
jg
ret
mov
pop
adc
js
mov
addl
mov
jecxz
jmp
fiaddl
mov
pop
xor
jl
repz
test
push
pop
sbb
add
dec
test
sub
cld
shrb
pushf
fadd
in
in
jnp
dec
dec
loopne
loop
and
xchg
test
loop
adc
jne
shrl
mov
inc
enter
push
loop
in
mov
hlt
xchg
fdivrs
sbb
cmc
xor
nop
out
xchg
fistl
es
outsb
aam
jge
dec
andl
xchg
int
jns
xchg
sti
into
xchg
or
jl
add
out
add
mov
fdivrp
daa
or
clc
push
repz
adc
std
push
test
xchg
sbb
stos
cmpsl
jno
fwait
icebp
mov
sahf
test
jb
pusha
aas
mov
and
inc
test
xchg
lods
cltd
mov
jnp
cltd
insl
aaa
mov
pop
and
lods
cmc
pop
sahf
mov
addl
scas
adc
dec
call
rorl
in
push
dec
mov
mov
shll
in
out
inc
mov
movzbl
inc
jae
mov
mov
adc
mov
fnstenv
xor
mov
sbb
cmp
add
jns
aaa
dec
mov
adc
mov
add
cld
xchg
or
xchg
das
cmp
insl
jmp
or
mov
lods
movsl
inc
gs
bound
xlat
gs
cld
mov
dec
adc
std
add
rclb
movsb
in
fs
lds
outsb
or
mov
dec
or
test
add
jne
mov
pop
mov
jbe
jp
push
adc
dec
pop
or
fsubs
and
imul
push
lret
mov
rclb
mov
push
push
int
sub
push
add
dec
lock
mov
out
in
nop
xor
stos
call
adcl
scas
xor
hlt
mov
lret
divl
popf
xchg
adc
xchg
push
pop
fmul
les
aas
repz
adc
test
pop
pop
dec
mov
test
pop
lcallw
pushf
test
xor
iret
jle
cltd
xor
xchg
push
mov
push
fcmovu
hlt
xor
push
jl
xor
push
inc
xor
movsl
insb
mov
jmp
pop
cwtl
mov
jge
iret
cli
into
jbe
inc
mov
adc
pop
dec
stos
dec
lcall
popf
test
cli
test
sbb
push
cli
add
iret
and
jo
arpl
mov
dec
ret
pop
aam
orb
xor
add
push
mov
mov
pop
xchg
in
into
aam
adc
data16
mov
cmpsb
sbb
aas
in
and
daa
repz
lret
iretw
leave
dec
decb
mov
sbbb
mov
shll
xchg
xchg
push
aam
clc
stos
inc
push
pop
add
jp
adc
lret
and
sbb
xlat
push
add
xchg
adc
sub
data16
xor
dec
lahf
jo
std
test
ficoms
cmp
data16
outsl
fmul
cmp
lret
rcl
push
jae
xchg
fildl
add
pop
jno
xor
dec
je
stos
stc
dec
pop
xchg
jmp
cmpsb
ds
scas
xchg
mov
jae
add
movl
jo
test
jg
pop
jnp
ss
cmp
adc
sbb
icebp
sub
push
fistpll
in
and
sbb
outsl
fnstenv
stc
sub
std
mov
les
addr16
ja
insl
ja
dec
xchg
dec
sbb
dec
sbb
loopne
sub
push
push
fadds
mov
lds
pop
mov
xchg
jb
adcl
xchg
pop
shlb
add
orb
inc
push
pop
mov
mov
push
jg
in
pop
fsts
arpl
jmp
fisubrs
nop
idivl
sub
jl
sbb
adc
sbb
push
int
xchg
xor
dec
aad
in
and
push
cwtl
outsb
imul
add
mov
lds
jno
inc
or
leave
test
into
fsubrs
push
sbb
push
bnd
jle
lods
in
sbb
out
in
dec
lret
or
xchg
jnp
dec
lock
push
inc
mov
repz
mov
fidivs
and
lcall
pusha
clc
adc
frstor
fstl
xor
xchg
mov
mov
call
sbb
dec
dec
inc
call
fadds
xchg
filds
insl
xchg
stos
js
lods
push
jmp
loopne
or
mov
xchg
dec
xchg
push
movsl
push
js
adc
loop
jecxz
inc
jbe
lret
lods
xlat
cs
loopne
mov
nop
or
adc
repz
sub
sbb
out
ret
dec
cmpsl
out
out
adc
pop
pop
aaa
jnp
mov
je
sbb
adc
cmpsb
push
pop
sub
inc
in
adc
mov
cs
dec
fimull
pushf
mov
mov
xorl
push
pop
movsl
lret
adc
xor
push
adc
lcall
jo
sub
cmp
cs
jp
mov
fstpt
pop
gs
aas
lods
mov
push
mov
mov
loop
popf
sub
sbb
mov
mov
ror
scas
dec
or
cmp
pop
jne
lods
dec
icebp
enter
in
stc
sti
pop
cwtl
es
xchg
lods
mov
xchg
stos
out
je
add
jb
add
mov
and
jge
and
push
pop
into
js
push
push
xor
mov
jno
mov
mov
dec
dec
pop
mov
sbb
push
dec
jecxz
push
jo
fsubrl
add
and
pop
mov
push
dec
push
pop
add
or
xcrypt-cfb
cmpsl
and
pop
mov
pop
mov
adc
xor
cmp
sahf
mov
setg
cmp
jp
fwait
insb
inc
icebp
sub
mov
pop
push
push
das
lcall
stos
jb
sub
sar
cli
adc
push
fs
and
mov
mov
insb
aaa
in
jle
jnp
mov
movl
inc
jg
jge
fs
ds
sub
mov
in
xor
ja
ret
imul
pop
dec
out
js
lret
or
fcmovne
pop
inc
sbb
sub
pop
jp
inc
aad
push
leave
sub
pushf
cmpsb
test
fcompl
mov
in
push
mull
sbb
das
push
int3
mov
int3
sbb
xchg
xchg
xor
cwtl
cmp
jecxz
dec
inc
aad
add
decl
mov
repnz
push
sbb
sbb
mov
cli
or
outsb
and
cmpsl
xchg
daa
roll
xor
test
mov
adc
lret
enter
xlat
fwait
cmp
addl
and
mov
loope
adc
fistpl
mov
mov
scas
pop
out
icebp
pop
idiv
jb
push
adc
cmpsl
stos
xor
mov
orb
xchg
andl
add
and
cmc
sti
mov
enter
mov
je
out
cmp
stos
jle
push
into
cmc
fcompl
cli
sub
shrb
xlat
enter
jle
push
lcall
mov
jge
pop
arpl
mov
je
jbe
fxtract
push
ret
sub
jg
mov
jae
loopne
out
cmpsb
pop
outsb
sarl
mov
jo
jmp
pop
das
fcoml
lret
movsb
imul
xor
push
icebp
sub
push
inc
out
mov
dec
enter
inc
insl
mov
jp
cmp
movsb
jge
mov
pop
fadds
ja
push
ds
imul
xor
lahf
push
sub
sbb
push
or
addr16
andl
dec
fwait
sub
test
cmp
or
enter
pop
xchg
or
adc
lahf
mov
jle
fisttpl
repnz
mov
dec
mov
sbb
dec
mov
mov
gs
sbbl
scas
xchg
push
jmp
or
or
mov
jle
add
pop
loope
outsl
pop
adc
aas
jg
fsubr
jbe
jb
pop
sbb
je
inc
mov
mov
mov
nop
nop
add
pop
adc
int3
sbbb
fisttpll
loopne
pop
fisubl
test
jno
mov
pop
dec
lret
pop
pop
xchg
mov
mov
into
jecxz
or
jg
push
or
add
popf
mov
or
aas
xor
rolb
xchg
xchg
in
pushl
sarl
mov
nop
jb
cmpsb
aas
inc
cmp
add
cmp
in
sub
dec
mov
push
add
cli
fs
pop
sahf
scas
in
ljmp
pushf
mov
sub
xchg
add
ret
test
push
or
dec
jmp
mov
mov
in
popa
pushf
lcallw
inc
cli
xlat
jmp
and
sbb
adc
or
aam
js
movsb
int3
test
lock
mov
mov
or
push
push
sub
jo
ret
cmpsb
jno
mov
cwtl
in
mov
in
and
cs
cmp
pop
notb
pop
add
add
dec
mov
xor
lahf
adc
jb
aam
ss
fists
inc
xor
fcomp
xchg
add
popf
dec
das
cli
call
pop
push
mov
daa
cltd
mov
jge
and
outsl
rcrl
dec
mov
mov
movsl
in
adc
repnz
pop
subb
fstl
mov
jnp
sbb
xchg
jns
mov
shlb
dec
fs
sbb
scas
cwtl
mov
ret
sti
fwait
xor
cmpsb
mov
cmp
repnz
xlat
push
test
pop
imul
stc
dec
call
insl
in
add
mov
test
jp
cmpsl
clc
jmp
iret
mov
orb
inc
loop
jns
jns
vandps
leave
xchg
jnp
fmull
jp
out
into
xor
data16
sub
adc
mov
xor
cmp
clc
decb
mov
lods
ljmp
lea
xchg
sub
call
aas
cmp
xchg
adc
daa
insl
push
insl
mov
inc
push
or
xchg
push
clc
and
sbb
dec
sub
inc
and
inc
sub
das
fs
neg
mov
je
loope
sbb
test
inc
and
xor
push
inc
fcmovne
out
dec
dec
fs
mov
aam
aad
jae
lahf
adc
sub
jp
lret
mov
repz
daa
addr16
inc
mov
pop
mov
cmpsl
jo
movsb
sahf
xchg
push
add
andl
sbb
and
gs
adc
arpl
push
jge
aam
enter
push
daa
loop
leave
xlat
in
test
mov
inc
dec
inc
sbb
xchg
jnp
ret
psrlw
repz
cltd
loope
add
out
cltd
mov
add
pop
adc
dec
enter
cltd
lret
lea
pop
inc
cmp
shll
fstl
pop
pop
jb
ss
jmp
popf
stos
mov
or
and
mov
arpl
hlt
addb
jmp
sub
mov
test
pop
cmp
jp
inc
loopne
lds
insb
mov
mov
mov
push
insb
mov
add
movsl
sbb
pop
push
addr16
push
fcoml
push
negl
sti
repnz
std
cs
ficomps
imul
or
push
js
cmpl
xchg
sbb
xor
xchg
or
fsubp
sbb
xor
push
in
jo
lcall
iret
cmp
mov
lods
rcl
push
add
test
jl
mov
insl
jmp
xor
lock
scas
adc
lods
cld
mov
pushf
sub
fwait
pop
xchg
xchg
jge
push
nop
lock
rolb
fstpl
jns
push
sub
es
in
lcall
or
clc
sbb
ljmp
fstpl
shll
mov
sub
mov
mov
das
leave
insb
mov
push
jb
aas
sarl
push
je
jp
test
inc
mov
pop
jle
and
nop
sub
sbb
and
mov
sbb
jae
inc
lcall
dec
cmovno
xchg
pop
outsl
ljmp
sbb
insl
rorl
repnz
std
sbb
xchg
sub
pop
les
sti
adc
inc
addb
repnz
hlt
aas
loope
nop
cmp
addr16
or
lcall
popa
push
cli
enter
mov
bsr
adc
cmpsb
mov
pop
dec
jecxz
pusha
xor
rolb
pushl
pop
jle
dec
push
clc
shrb
faddl
loop
jae
mov
pop
mov
test
xchg
xor
outsb
pop
inc
les
or
into
add
in
pop
dec
adc
movsb
sub
les
sub
or
mov
ljmp
pop
mov
pop
xor
in
js
xchg
pushf
iret
and
mov
in
leave
outsb
jp
mov
xor
daa
stos
xorl
lods
cmp
cli
pop
cmp
pop
mov
insl
je
cmp
or
movsb
sub
scas
mov
sahf
and
push
sbb
sub
jb
jns
test
into
and
jp
inc
inc
push
je
or
push
pop
in
test
jl
push
insb
filds
ds
mov
out
in
pop
loopne
adc
pusha
cmpsl
das
fs
out
sahf
cmp
push
es
xchg
insl
dec
lret
xchg
cli
popf
xchg
fstps
imulb
sti
cmp
jg,pt
or
cmp
mov
and
lods
mov
jns
imul
fimuls
fsubs
arpl
mov
je
and
aad
shrb
std
jg
sbb
inc
mov
ja
nop
popf
adc
add
loop
imul
sbb
cmp
dec
dec
in
add
xchg
fbld
mov
pop
movsb
jmp
aad
fisubrs
iret
mov
fwait
dec
jo
cs
xor
js
mov
sub
je
jo
adc
idiv
jne
lods
cmpsb
repnz
push
mov
mov
sbb
mov
xchg
stos
xchg
mov
xchg
mov
adc
cmp
mov
push
push
out
sub
pop
andb
lret
aad
mov
cli
fmul
sub
jg
stc
mov
jno
pushf
inc
cmp
xor
mov
mov
xor
std
sahf
in
mov
pop
dec
repz
or
enter
push
push
jnp
lods
cltd
movsl
imul
out
ja
sub
push
pop
fdivrp
and
jae
xor
mov
cwtl
inc
pusha
adc
loope
or
inc
mov
and
add
dec
cmp
addr16
bound
pop
fadds
clc
roll
inc
mov
and
xchg
push
dec
loope
ret
push
push
movsb
sbb
pusha
xchg
adc
in
sbb
icebp
push
arpl
and
clc
push
cmp
loopw
sub
fistpl
ljmp
loopne
mov
lds
xchg
push
push
pop
pop
sub
imul
notl
stc
inc
mov
dec
mov
cmc
cmc
sbb
sar
cli
insb
lds
inc
pop
insl
loope
pop
in
aaa
add
aaa
adc
bound
pop
inc
push
leave
mov
mov
jo
test
pop
push
je
inc
loopne
push
jo
pop
adc
in
sub
and
mov
mov
jp
jg
adc
sti
aad
scas
xor
jne
dec
push
arpl
mov
sub
add
cmp
mov
mov
dec
push
lods
cmpsb
daa
test
popa
mov
imul
adc
pop
into
push
mov
inc
mov
sub
xor
inc
xchg
mov
lcall
and
push
dec
rcrb
xor
mov
cs
test
xchg
push
dec
and
sub
mull
cmp
arpl
out
sub
jno
test
fsubl
lahf
pop
roll
mov
sub
icebp
jmp
mov
push
insl
orl
mov
push
adc
or
cli
movsb
repz
sbb
mov
sub
or
out
xlat
adc
push
dec
js
divb
dec
xor
jge
into
enter
cltd
and
jl,pn
pop
adc
cltd
cld
imul
pop
sbb
push
mov
aaa
adc
sub
inc
pcmpeqb
sub
imul
sbb
cmp
andb
mov
push
xchg
adc
xchg
sbb
lea
cmpsl
incl
ljmp
in
mov
lds
xor
sti
outsb
cmp
jae
not
dec
pop
loope
sbb
aas
jb
sti
xorl
cltd
or
sub
shlb
cs
cmpl
and
dec
xor
pop
sarb
sub
ljmp
aad
push
add
xlat
daa
insl
cmpsl
loopne
xchg
icebp
xchg
aam
pusha
ljmp
jp
and
mov
sbb
dec
in
jecxz
in
loop
mov
lcall
fiadds
push
add
orl
jl
pop
icebp
mov
stos
mov
int3
xor
adc
dec
movsl
jmp
inc
cld
jns
stos
sbb
repnz
or
hlt
addb
cmp
fisttpl
daa
repz
pop
into
adc
ret
sub
test
push
xor
xor
sahf
neg
shr
inc
cli
mov
cmp
cli
dec
xlat
cmpsb
sahf
mull
adc
cmp
jae
outsl
nop
in
out
cmovbe
out
mov
test
repnz
sub
test
inc
mov
sbb
call
rolb
inc
shlb
movsb
and
jge
or
sbb
push
sbb
xor
cmpsb
cs
sub
daa
bnd
sub
inc
lods
sbb
rorb
jmp
inc
adc
and
mov
adc
mov
lds
cmp
cmp
xlat
cmp
call
movsb
aam
ljmp
scas
gs
sbb
and
aam
cmpsb
out
sbb
mov
cmpl
sbb
repz
lret
mov
adc
das
cmp
or
pop
push
mov
nop
jo
mov
mov
xor
and
and
shr
or
fisttps
dec
dec
bound
rorl
jbe
add
mov
jg
jns
or
in
lahf
repz
mov
rorb
push
push
inc
lcall
jg
lock
rcll
stos
icebp
mov
cmpb
js
loope
and
sarl
sbbl
lahf
xor
adc
lea
cs
repz
sbb
sbb
sbb
cltd
popf
sub
icebp
int
fnstenv
leave
fwait
add
clc
shlb
into
or
mov
cmp
mov
sti
hlt
rcll
jmp
dec
insb
sbb
movsl
xchg
fcompl
xchg
pop
dec
psadbw
jns
in
push
es
movsl
xchg
sub
insl
sub
and
mov
sub
add
xor
aad
add
int3
out
and
push
movsb
notb
xchg
cmp
or
out
test
mov
std
mov
cmpsl
sbb
stc
xor
popf
adc
xor
push
or
inc
outsb
and
cmp
cmp
sub
shr
jp
jecxz
in
sbb
fildl
sbb
fmulp
test
outsb
dec
mov
cs
sbb
aam
ja
aad
nop
outsl
mov
popa
stos
mov
test
addr16
fnstenv
loope
inc
mov
imul
in
pop
es
cmp
push
mov
dec
mov
mov
repnz
stos
in
lea
xchg
icebp
mov
jns
cmp
xorl
out
mov
xlat
push
xchg
rorb
in
and
idiv
data16
outsb
pop
dec
mov
out
ja
aam
imul
jmp
sub
jo
movb
rorb
and
xchg
fdivrs
lret
jmp
out
push
pop
rorb
jl
lahf
pop
loopne
pop
cltd
push
cltd
lahf
dec
ficoml
inc
sub
mov
sub
out
xor
out
mov
dec
dec
es
cmpsb
xchg
or
sbb
pcmpgtw
adc
jnp
push
pop
add
cmp
sbb
or
xchg
cmpsb
mov
mov
shr
jb
idivl
fsubl
mov
arpl
popa
out
xor
popf
test
cmp
sbb
int
popa
xchg
mov
and
setbe
lods
dec
movsb
pop
dec
pop
inc
bound
aad
adc
mov
in
fs
jae
cs
repnz
pop
push
out
jp
out
rorb
add
sti
arpl
enter
cmpl
ficoml
imul
sarl
mov
scas
into
adcb
xchg
mov
scas
addb
xor
sub
dec
js
jnp
mov
add
xchg
xchg
xor
pop
cmp
push
decb
push
loopne
int
fs
push
mov
push
repz
ret
enter
out
and
movsb
mov
mov
sbb
pop
mov
jge
mov
repnz
mov
mov
jle
ja
sbb
add
std
lcall
int
stos
mov
sbb
fcom
sahf
xchg
in
cltd
cmpb
loopne
sub
cld
push
add
in
addb
fstps
mov
cmpb
call
dec
mov
inc
sub
fs
pop
push
ret
stos
xorl
mov
repnz
hlt
test
dec
ja
or
add
mov
xchg
push
adc
add
push
test
dec
sbb
test
in
aas
test
fld
jnp
pop
divl
and
sub
loopne
sbb
jg
fwait
mov
out
adc
mov
repz
sub
sbb
enter
cmp
pop
xor
adc
jp
and
xchg
mov
lds
add
mov
xchg
push
push
dec
imul
or
mov
mov
xorb
movsl
cli
xchg
insb
mov
fdivrs
test
mov
lods
inc
push
xor
aaa
outsb
shll
inc
cmc
jle
sbbl
sbb
or
lcall
adc
jl
into
outsl
inc
mov
dec
lret
sub
mov
in
push
sti
cmpsb
std
mov
loopne
add
ret
cwtl
fcmovb
inc
xorl
fbstp
xchg
jo
dec
push
lods
imul
repnz
inc
xor
push
adc
repz
add
cltd
jno
shr
push
ljmp
test
or
jne
push
fs
cmp
call
dec
ljmp
inc
fcmovnbe
mov
jmp
inc
rclb
lods
cmpsl
pop
loopne
xchg
push
or
icebp
rorb
pushl
mov
ds
iret
push
outsb
leave
das
notb
pop
mov
movsl
lods
push
lahf
xchg
sti
and
leave
adc
jbe
mov
or
ficompl
cmp
inc
adc
arpl
and
pop
insb
js
jnp
mov
xor
aam
out
aas
mov
imul
mov
mov
mov
pop
lret
scas
adc
hlt
in
outsb
mov
into
scas
inc
ja
inc
mov
mov
inc
cwtl
mov
negl
push
sarl
push
or
ret
outsl
pop
mov
pop
jae
jb
lods
xor
out
adcb
addr16
lcall
add
enter
jmp
sub
push
jbe
and
data16
push
std
sub
cmp
lahf
mov
xor
mov
stos
dec
clc
scas
mov
in
lods
adc
test
jmp
lea
pop
inc
inc
push
jns
movsl
hlt
or
push
xchg
or
mov
sub
sbbl
push
stos
mov
push
xor
shlb
stos
mov
mov
add
jmp
int
and
fnstenv
cmp
loope
into
testb
addr16
int3
out
std
and
loop
mov
inc
cwtl
lret
icebp
cmp
cmp
adc
pop
push
pop
inc
pop
cli
testb
ja
testb
add
jg
xor
xlat
aam
adc
mov
mov
sbb
inc
inc
cmpsl
cmp
movsl
adc
lock
pop
adc
mov
insb
in
mov
sahf
in
int3
and
or
incb
aad
fsubrp
shl
test
lret
loopne
pop
mov
nop
pop
hlt
fwait
adc
adc
push
je
xchg
xchg
arpl
cmp
dec
push
pop
xorb
insl
imul
in
xor
add
mov
mov
sbb
mov
je
push
mov
dec
mov
test
mov
dec
decl
jnp
mov
sbb
add
incb
pop
jge
dec
fistpl
in
xor
dec
scas
rcll
push
mov
or
es
roll
and
push
mov
adc
sbb
pop
fists
push
dec
adc
outsl
mov
sti
mov
nop
cwtl
or
mov
mov
mov
pop
push
pop
lods
fdivrs
arpl
ret
mov
pop
mov
lods
jmp
jno
push
cmp
aad
and
mov
dec
jns
cmp
loopne
mov
inc
lods
imul
add
ret
inc
xchg
lock
hlt
rcrl
mov
scas
mov
fucomp
xchg
out
adc
mov
mov
xor
inc
ljmp
test
movsb
mov
fcomp
xlat
aaa
shrl
xor
cs
jecxz
and
xchg
pop
mov
add
ljmp
dec
xor
push
lcall
fcompl
aas
jmp
pop
mov
lahf
enter
retw
out
dec
mov
or
je
mov
mov
jmp
pusha
or
addr16
sbb
sub
jle
outsb
mov
dec
jmp
push
and
cmp
pop
stos
add
lods
xor
push
mov
ret
lods
or
mov
fabs
mov
bound
or
scas
or
push
cmp
es
in
or
or
adc
lret
sub
jl
mov
sub
and
cmpsl
xor
or
push
xor
enter
gs
cmp
outsl
js
add
and
mov
inc
fstps
jo
jge
pusha
inc
popa
scas
imul
fwait
pushf
lds
pusha
and
pop
inc
in
lret
outsl
cld
scas
sub
lea
mov
dec
cmp
js
mov
sub
cli
push
clc
pop
mov
and
lods
fcoml
push
sub
addr16
rorl
test
jo
pop
push
push
dec
cmp
xchg
xor
std
cmp
push
bound
pop
repz
add
jecxz
push
push
test
arpl
sbb
xor
xor
mov
adc
mov
lods
shl
push
pop
stos
cltd
into
leave
xchg
push
jmp
test
stc
test
push
gs
test
mov
enter
or
in
lahf
jbe
leave
inc
dec
or
cltd
mov
add
sti
xor
jl,pt
or
pop
jmp
push
les
fisttpll
sub
lock
cld
and
loopne
shrl
add
arpl
scas
stos
ljmp
stos
hlt
popa
imul
aaa
test
lcall
jnp
push
add
dec
ret
sub
xchg
cmp
test
std
out
and
daa
in
or
jb
fidivs
ljmp
imul
adc
std
mov
ljmp
es
jmp
cmpsl
arpl
xor
xor
mov
test
cltd
push
popa
jecxz
jae
mov
scas
loop
std
mov
push
lea
adc
les
cwtl
sub
repnz
arpl
iret
cmpsl
fnstcw
test
inc
cmpsb
xlat
loopne
pop
rorl
push
out
mov
test
add
push
sbb
fsin
lods
popf
jnp
pop
dec
dec
push
jl
mov
xor
dec
pusha
jns
testb
sub
mov
cs
out
sbb
pop
rorb
nop
sub
stos
cmp
cmp
arpl
mov
aas
ja
jl
test
aam
pop
cmp
repnz
fisubl
outsl
lcall
pop
sub
fildll
in
cld
xchg
shll
jp
arpl
repz
mov
lods
pop
in
xor
inc
add
add
sub
xor
adc
adc
gs
movsb
sub
pop
or
rcll
js
fadds
scas
outsb
mov
dec
outsb
sub
negl
ffreep
adc
lret
inc
pop
sti
rorb
shlb
push
ljmp
fsubrl
movsl
add
bound
scas
and
jno
das
ret
xchg
scas
js
jb
mov
push
add
pop
dec
jg
cmp
dec
jmp
ds
push
lock
aaa
cmc
lahf
imul
mov
aam
cmpsb
movsl
ja
mov
ljmp
add
test
push
adc
repz
popl
cmpsl
aaa
decl
in
pop
push
bound
movsl
sub
loopne
sub
add
mov
pop
aas
mov
jnp
lea
and
sbb
pusha
js
mov
shlb
push
jmp
pop
pusha
mov
cmp
pop
and
push
stc
nop
jb
loopne
movsb
arpl
scas
push
cmpsl
mov
test
adc
push
dec
mov
or
pushf
dec
adc
xor
pusha
push
dec
xchg
pop
push
and
imul
call
xor
add
movsl
push
sbb
cwtl
idivb
pop
jecxz,pn
outsl
sub
lret
movsl
dec
mov
adc
iret
fidivl
ja
ficompl
into
pushf
jbe
cmp
mov
fbld
fnstsw
mov
arpl
sub
add
leave
cmc
cltd
in
mov
and
dec
xchg
test
aaa
mov
outsl
jge
test
arpl
imul
inc
lds
xchg
aam
adc
adc
push
cmpsb
xor
pop
pop
cvtps2pi
jecxz
js
hlt
mov
jne
sbb
call
sub
adc
mov
nop
push
in
aad
sub
add
popf
fildl
push
dec
cmp
xor
adc
pushf
xor
add
lods
cmpsb
movsb
xchg
daa
imul
lock
mov
es
sbb
sub
aas
sub
or
das
insb
lahf
std
out
adc
push
outsl
int3
lea
sbb
subl
lods
xchg
sub
mov
fld
and
jl
outsb
pop
mov
fucom
insb
ror
push
fiaddl
dec
and
cmpsl
or
test
outsl
sub
call
je
add
xor
adc
rclb
adc
dec
cltd
pop
adc
ss
imul
aaa
cmp
cmpsb
mov
outsl
popa
and
inc
dec
sub
inc
jns
xor
jmp
xchg
push
mov
js
cs
lahf
push
andb
fisttpl
out
aaa
inc
and
ds
xor
and
sbb
cli
or
aaa
cld
jo
pop
into
aas
ja
or
mov
jecxz
das
xor
sub
sahf
jp
push
fldenv
scas
not
dec
pushf
sahf
cmp
xchg
outsl
push
into
cmc
mov
cltd
and
fiadds
mov
mov
cmp
lret
inc
dec
test
leave
lods
call
out
jmp
arpl
sub
or
pushf
xor
pop
arpl
jge
lods
sub
push
cmpsb
mov
in
sbb
and
loop
push
jl
hlt
out
cmpsb
adc
mov
std
inc
adc
gs
inc
out
or
ret
sub
stc
xchg
imul
popa
icebp
test
test
lret
inc
dec
push
outsb
int3
jns
adc
out
jmp
push
aam
pop
lods
pop
pop
pop
outsb
dec
pop
fcmovbe
jecxz
and
es
ljmp
cltd
int
mov
mov
adc
mul
mov
repz
out
cmp
sahf
mov
fisttps
lcall
dec
sahf
mov
lret
ds
cld
xchg
loopne
and
movsb
jl
pop
fmulp
sbb
xor
push
xchg
enter
mov
xlat
pop
test
ds
aad
mov
cmpsl
ljmp
repnz
adc
mov
addr16
sar
push
adc
add
and
imull
mov
popf
sahf
cwtl
cmp
ficomps
es
dec
jp
xor
imul
mov
loope
xor
or
out
ljmp
mov
pop
lahf
pop
push
js
xchg
dec
add
cmc
adc
add
mov
jl
fidivrl
in
add
inc
cmpsl
dec
add
pop
mov
inc
xchg
push
xchg
xchg
repz
add
and
pop
sbb
popa
int3
jo
stos
es
clc
xchg
jge
jg
lock
mov
mov
ljmp
lock
xor
popa
or
clc
sbb
stc
ljmp
das
lret
mov
mov
lret
scas
sbb
ret
inc
fnstenv
cli
mov
stos
jge
xchg
sbb
cmc
daa
jg
dec
or
pop
adc
xor
xlat
mov
jae
push
xlat
into
add
pop
es
rcll
data16
js
or
jb
int3
fdivl
int
xchg
lahf
pop
or
push
mov
pop
xor
ja
pusha
arpl
lcall
mov
bound
mov
mov
sub
jns
in
jp
push
fisttpll
and
add
dec
xchg
jg
bound
je
fistpll
push
and
mov
les
mov
mov
ds
leavew
cltd
mov
hlt
ret
stos
adc
dec
inc
and
inc
roll
pop
gs
and
loope
cmp
ror
dec
pop
repnz
pop
pop
loop
clc
imul
rol
push
jo
and
rcrl
push
out
ret
rcr
xor
jns
push
ftst
and
xor
pop
and
ja
mov
adc
mov
hlt
jae
mov
adc
aad
and
pop
jb
test
sahf
xor
xchg
xchg
int
or
clc
jno
add
mov
ret
push
inc
or
and
push
nop
sub
outsl
jmp
sbb
enter
push
xor
push
cli
or
test
mov
mov
mov
pop
rorb
push
jl
daa
movsl
pop
xor
mov
jge
ficomps
mov
ss
movsb
and
daa
pop
dec
stos
sti
lret
gs
out
or
and
repz
je
fmuls
ljmp
call
ja
stos
mov
xchg
xchg
dec
adcl
stc
mov
arpl
pop
sbb
sub
test
pop
aas
cmp
jo
inc
in
push
push
in
in
sbb
cmp
or
test
popa
inc
nop
ds
mov
push
aaa
fildl
inc
mov
popf
rol
or
ret
sbb
sub
add
mov
mov
sbb
push
decl
sahf
fsubrp
xor
sti
cmp
sbb
cld
in
in
xchg
jb
jns
mov
lret
data16
mov
sbb
add
call
jae
icebp
xchg
xor
mov
test
mov
pop
push
mov
test
ja
mov
mov
mov
or
hlt
dec
pop
jbe
cltd
aas
ljmp
cmp
movsb
inc
test
ja
in
push
cmpsb
fdivrs
add
stos
and
dec
and
divl
je
leave
sbb
lahf
or
add
sbb
dec
movsl
jl
icebp
jno
shll
sbb
or
push
add
jl
mov
fisttpl
adc
dec
sub
pusha
les
mov
loopne
add
arpl
ja
dec
rcrl
out
fstps
lock
add
add
lods
clc
add
sub
cmp
dec
clc
pop
cli
ljmp
cmpsl
xor
in
sub
aad
mov
pop
test
pushf
mov
imul
jae
hlt
or
hlt
pop
add
pop
push
outsb
fldl
adc
inc
std
mov
gs
push
push
arpl
enter
pop
leave
hlt
xor
dec
or
in
outsl
loop
cmpsl
lret
pop
lods
lret
ds
loop
jmp
add
cmp
cmp
push
std
sbb
shlb
add
in
bound
cmc
dec
mov
cs
xor
or
clc
push
xchg
std
jne
jns
jno
sbb
je
in
into
fdivs
ret
mov
mov
push
sub
and
jecxz
jnp
fildll
shl
sub
out
inc
lret
xchg
adc
in
out
aas
popa
adc
push
xchg
push
jne
mov
add
pop
cli
fisttpll
sahf
out
outsb
pop
movsl
adc
shrl
adc
cmp
inc
scas
outsl
icebp
adc
jle
inc
pop
pop
xchg
cwtl
inc
outsb
cmc
in
pop
popf
inc
cld
fisttpll
cli
mov
mov
xor
sbb
pop
scas
sub
data16
or
and
adc
nop
stos
jno
push
or
out
jle
jp
lock
mov
mov
jle
loopne
leave
jb
cmc
inc
loopne
xchg
push
mov
fs
mov
into
lret
xor
fld
es
mov
aas
adc
out
cmp
js
jmp
repz
dec
es
and
es
in
mov
pop
xorb
add
stc
scas
scas
int
ret
jo
mov
repz
cmpsl
test
or
loopne
fmull
scas
mov
adc
and
push
adc
arpl
repz
jecxz
repnz
and
mov
inc
xchg
and
ja
add
and
mov
stc
xchg
adc
rcrl
cs
mov
std
clc
imul
or
cmp
insb
sti
int
call
push
movsb
into
addr16
cwtl
hlt
mov
btc
mov
push
pushf
jecxz
mov
ss
insl
push
into
jno
or
adc
adc
popa
popf
mov
sbb
push
addl
push
jne
dec
mov
or
clc
aad
shll
les
inc
adc
xchg
negl
dec
xchg
or
aas
push
jnp
sub
dec
jge
xchg
les
repz
je
popa
pop
adc
mov
adc
sbb
or
sub
mov
mov
push
mov
sbb
mov
jge
jae
aas
cmpsl
sahf
cltd
mov
adc
mov
es
mov
cli
xchg
scas
push
cs
sbb
dec
movsb
lret
add
and
push
repnz
mov
lds
sti
imul
call
stos
xor
icebp
mov
cmp
in
rcll
adcl
xchg
mov
pusha
mov
mov
mov
or
pop
add
stc
in
loopne
push
repz
loopne
pop
cmp
lods
dec
test
sbb
test
sub
int3
dec
jecxz
inc
loopne
cmpb
out
int
cmp
addr16
ljmp
mov
push
popa
push
aaa
xor
sarb
pop
mov
pop
xor
pop
ret
or
push
jecxz
lds
adc
xchg
dec
js
into
test
ficomps
sub
add
out
xchg
dec
pop
mov
inc
mov
cli
pop
icebp
push
xor
movsb
sbb
out
orb
mov
pop
scas
movsl
loope
and
lret
pop
dec
je
jae
cmpb
stc
movsl
imul
sets
movsb
mov
mov
popa
push
sarl
ds
out
pop
jmp
and
jb
lret
dec
mov
into
mov
notb
cmpsb
rcll
testb
fisttpll
mov
popf
cmpsl
stos
sbb
bound
xor
or
adc
fwait
inc
arpl
mov
stos
jne
xor
jne
stos
pop
fiaddl
dec
mov
sbb
cli
js
push
out
dec
cli
insb
mov
mov
or
mov
pusha
and
minps
xchg
icebp
dec
insb
popa
fistpl
iret
xchg
fcoms
sti
jle
cli
pop
cli
test
cmp
int
mov
sti
jp
int3
popa
mov
inc
or
sarb
js
inc
orl
stc
lods
mov
das
pop
mov
push
shlb
outsb
je
repnz
dec
insb
sbb
clc
pop
dec
adc
mov
add
sub
sahf
aad
dec
in
cwtl
call
dec
daa
sbb
mov
sbb
js
cmp
jns
push
insl
ja
shlb
divl
scas
mov
test
in
mov
inc
fildl
or
push
dec
sti
mov
in
xor
pop
xor
lret
rcll
adc
mov
out
xchg
inc
sub
test
cmp
xchg
js
aaa
inc
notb
scas
in
sbb
icebp
data16
out
leave
je
xor
lret
xchg
popa
cmp
pop
lcall
imul
sbb
out
add
pop
jbe
clc
mov
push
pusha
cli
push
in
sub
test
sbb
lret
scas
andl
mov
insl
dec
cmp
std
mov
in
ffree
ret
or
sbb
xchg
loope
movsb
in
add
cltd
ficompl
ss
lock
cmp
pop
movsl
mov
daa
std
loope
dec
sbb
or
loopne
je
int3
es
or
push
pushf
test
sub
stos
aad
inc
stc
ret
pop
mov
cmpsb
pop
inc
lcall
pop
sbb
mov
aad
push
add
xor
sub
gs
dec
and
mov
dec
xchg
pop
adc
cs
or
sbb
test
sarl
inc
cli
jle
adc
jecxz
shrl
sub
push
mov
pop
dec
mov
lods
jmp
lods
adc
cmc
out
dec
inc
push
push
and
pusha
cmpsb
movswl
repnz
mov
roll
mov
popf
inc
pop
push
aaa
dec
mov
mov
xor
jno
mov
mov
clc
aaa
mov
push
iret
cmp
out
mov
push
fldenv
xor
mov
outsl
sbb
mov
test
pop
test
sub
dec
movsl
fbstp
jecxz
xchg
xor
imul
fsts
jl
je
pop
add
bound
pop
ja
adc
mov
add
fdivl
push
mov
cmp
test
mov
nop
imul
in
dec
in
insl
push
nop
gs
pusha
dec
jle
hlt
cmp
dec
and
push
idivl
addr16
mov
xor
scas
in
nop
jno
inc
xor
push
xor
pop
pop
dec
dec
cmc
lea
enter
fdivrs
cmpb
shlb
adc
pop
cmp
sahf
out
cmc
cmp
in
mov
scas
pop
jp
xor
xchg
lods
cmp
out
cmpl
shll
push
cld
les
jmp
jno
popa
jbe
mov
xchg
lds
mov
sti
cltd
add
pop
sarl
rcr
or
pusha
hlt
lea
bound
fidivl
xlat
jmp
imul
and
mov
shlb
lahf
add
fisubs
sbb
aam
roll
subl
mov
aas
or
mov
mov
pop
mov
std
mov
add
out
test
pop
xchg
pop
into
add
adc
xchg
jnp
fcmovnbe
popl
mov
xchg
or
jp
xchg
out
out
push
bound
jmp
cmpsb
clc
popf
mov
fistps
fs
mov
dec
xor
jbe
lds
inc
push
cmp
pop
arpl
sbb
mov
sub
push
mov
stos
jne
inc
fwait
or
push
rolb
jnp
pop
lret
jmp
hlt
adc
and
jns
imul
cmpb
xchg
stos
cmp
cmpsb
dec
in
js
adc
or
add
negl
loope
sarb
mov
push
pop
add
call
or
push
data16
mov
int3
xor
push
sbb
ds
mov
mov
in
xchg
adc
push
cwtl
push
jmp
stos
xchg
jge
dec
or
sub
in
int3
and
jo
or
pop
mov
sub
ds
std
mov
adcl
sub
push
idivb
sub
fyl2x
popf
sub
rolb
mov
addr16
sub
xchg
in
nop
lds
mov
aam
lret
or
lcall
inc
jge
imul
xchg
iret
adcl
aam
pop
pop
pop
ljmp
int
cs
stos
cmp
scas
cld
xchg
cmp
loope
addl
popa
enter
mov
movsb
xor
inc
cld
loopne
and
mov
xchg
sbb
mov
std
in
jl
xchg
xchg
pop
sbb
lret
and
push
xchg
mov
mov
pop
inc
icebp
dec
aad
xchg
jmp
dec
cmc
lods
lcall
out
rcl
fs
int3
dec
aam
loopne
sbb
xor
xchg
jecxz
stc
cmpsb
mov
movd
jge
in
mov
divb
es
push
mov
xor
ret
lock
adc
addr16
cltd
clc
out
out
and
lds
sub
leave
xlat
add
dec
sub
xor
mov
mov
repz
inc
sahf
std
repz
or
adc
jg
push
mov
sbb
jb
cmp
cmp
add
imul
mov
mov
lret
and
ja
dec
xor
into
js
sub
xchg
push
inc
xchg
dec
push
test
ficoml
stos
loop
ficoms
inc
decb
add
adc
out
shlb
out
orl
or
iret
imul
in
outsl
xor
popf
lds
mov
sarb
pop
jo
cmp
pop
mov
add
nop
ret
cmc
test
jae
out
pop
mov
cld
push
fs
es
lea
std
inc
pause
inc
xchg
cld
mov
inc
dec
pop
push
mov
stc
sub
and
mov
clc
mov
mov
clc
fldt
lods
xchg
mov
mov
rclb
cld
cmpsl
xor
inc
push
jno
pop
cmpl
pusha
loop
repz
lahf
mov
lods
mov
in
push
loopne
inc
or
jg
mov
xchg
push
jo
aad
push
pop
mov
addl
dec
jle
dec
repnz
mov
xchg
sub
dec
dec
pop
js
jmp
add
mov
pop
ret
or
call
out
data16
jae
jo
jecxz
mov
xchg
cltd
push
bound
and
adcb
popa
xlat
adc
inc
lea
cmpsb
in
mov
push
mov
test
rcl
push
inc
push
loop
pop
int
add
rcr
out
fimuls
shl
cmpsb
and
scas
cmpb
mov
ja
mov
movsl
xlat
push
xchg
hlt
in
mov
ja
pushf
pop
sub
ret
fs
in
sti
sbb
mov
js
jecxz
cmp
out
gs
pop
mov
clc
dec
andb
es
push
mov
mov
lds
int
stc
in
cld
dec
sbb
add
xorl
hlt
addr16
or
fiadds
pop
test
adc
repz
fildll
mov
lcall
mov
xchg
dec
lods
xor
fistl
jecxz
fidivl
add
ret
sub
xor
mov
clc
pcmpeqw
cmp
jb
xchg
sub
arpl
adc
pushf
mov
adc
xchg
das
hlt
jae
push
push
lock
fcom
xchg
repz
adc
mov
jl
mov
adc
cmc
std
inc
xchg
jno
sub
add
pusha
push
push
fstl
mov
adc
popf
in
stos
xchg
cmp
fwait
iret
mov
jb
scas
push
adc
fists
push
scas
sub
pop
push
in
cli
mov
adc
inc
add
js
hlt
mov
mov
mov
mov
sub
push
xchg
and
imul
and
lcall
xchg
test
xchg
add
mov
mov
sbb
fiadds
mov
pop
and
addl
jecxz
int
pop
xchg
jmp
inc
mov
mov
subl
stc
push
cmpl
cltd
xor
fstps
lret
lahf
xor
and
xor
ds
or
mov
push
pop
daa
inc
popf
mov
mov
dec
adc
mov
push
test
xchg
dec
push
inc
jl
mov
sbb
icebp
jne
inc
in
xor
add
dec
xchg
or
dec
cld
call
mov
jmp
shrl
movsb
cmc
jmp
jge
adc
xor
dec
pop
sub
shl
sbb
adc
inc
inc
mov
xchg
mov
push
bnd
cmp
and
jns
ret
jae
inc
and
xchg
add
xor
and
adc
stc
test
jl
fiaddl
fdivrl
mov
mov
mov
mov
pop
cmp
mov
sbb
insb
pop
push
fmulp
dec
mov
outsl
fnsave
mov
cli
add
cmp
nop
lea
inc
fmull
fwait
dec
adc
and
push
fsubl
jmp
add
ficoms
cmp
cmp
ss
add
inc
push
call
sub
mov
decl
rolb
xchg
sar
xchg
aam
movsl
ret
shr
xor
lcall
pop
mov
or
mov
aas
pop
jp
cmc
inc
jle
jmp
or
and
in
jo
cmpsb
ret
lock
loope
jno
push
jo
mov
push
and
test
fsubrl
xor
mov
jb
xor
test
cmpsl
pop
mov
or
movl
aaa
inc
or
ss
iret
push
filds
jo
or
in
pop
xor
mov
in
inc
dec
mov
test
cmp
push
subb
push
mov
loopne
lds
push
cs
lahf
xor
std
test
push
cmc
scas
dec
push
mov
inc
fs
loope
jp
aam
add
jns
cmp
fs
adc
lret
mov
lds
cmc
pop
adc
push
cmp
xlat
push
dec
fmulp
fsubl
inc
and
cmpsb
rcrl
arpl
insl
cmpsb
jbe
clc
fnstcw
push
or
xchg
push
and
add
mov
xlat
scas
outsb
jns
jle
cmc
or
rol
fwait
out
add
sbb
mov
xor
cmp
cmpsl
fstpl
xchg
jbe
dec
and
mov
shr
xor
aas
shrb
inc
aad
mov
int3
mov
xor
dec
dec
adc
sahf
pop
mov
jecxz
pop
push
scas
push
jnp
mov
cmp
mov
stc
jge
ds
cmp
shlb
nop
push
sbb
insl
dec
jecxz
xchg
mov
pop
jae
jp
lret
divl
aad
sub
mov
shlb
nop
adc
sbb
adc
mov
rcl
dec
int3
jg
sbb
xchg
pop
jns
stos
inc
movswl
cltd
es
scas
xchg
into
faddl
or
fcompl
sbb
idivb
sbb
mov
sub
fxch
mov
dec
mov
xorl
aad
stc
sub
int3
cmpsb
and
arpl
mov
push
scas
cld
or
out
mov
fdivs
push
jecxz
inc
in
xor
and
shr
cmpsl
repz
sub
xchg
add
add
mov
inc
adc
rcrl
shl
mov
push
mov
popl
lock
push
cmpsb
mov
jae
add
xchg
pop
mov
pop
mov
rclb
stos
or
push
mov
les
sbb
mov
push
shll
xchg
or
add
sti
sbb
mov
js
jb
sub
call
leave
add
lcall
mov
out
add
push
mov
repz
sbb
cmp
push
aad
dec
mov
cld
mov
adc
jp
pop
inc
out
mov
out
pop
push
negb
pusha
lods
icebp
inc
fnstcw
or
pop
iret
xor
std
inc
pop
xchg
xchg
lahf
pop
push
and
xchg
leave
outsb
push
push
movsb
sti
mov
adc
mov
add
test
enter
pushf
stos
ljmp
add
pop
mov
insb
aaa
jo
aam
in
int
add
mov
sub
adcb
shll
in
lahf
popf
cld
mov
xor
in
push
fwait
jno
push
pop
nop
lds
jns
sbb
pop
popf
rcl
inc
iret
imul
jmp
aad
jo
stos
push
dec
mov
aaa
push
dec
add
stos
jo
mov
mov
pop
jmp
stos
mov
loope
adc
ss
pop
enter
inc
lcall
lock
js
mov
mov
int3
outsl
lcall
andl
data16
lret
cld
insl
pusha
adc
xor
push
xchg
jg
mov
cmpsb
outsb
loopne
xchg
pop
inc
push
addr16
lock
adc
cltd
in
les
lret
jo
mov
cwtl
adc
add
or
jae
outsl
dec
cmpsl
sub
mov
add
mov
clc
sub
mov
mov
push
dec
jbe
xchg
cmc
pushw
add
or
cmp
rorl
push
bound
mov
or
das
rorl
popa
enter
cmp
adc
stos
test
xlat
mov
add
or
mov
lds
les
or
dec
pop
movsl
scas
inc
shl
inc
shlb
dec
test
lock
push
dec
cwtl
stc
sbb
stos
or
mov
pop
or
jbe
jecxz
jns
cmp
add
decb
clc
add
add
fdecstp
mov
stos
mov
ja
out
insb
sbb
test
roll
add
inc
dec
mov
out
mov
inc
sahf
jbe
xor
push
push
sti
mov
andl
jo
push
sub
jb
in
cltd
addr16
mov
mov
xchg
pop
jnp
stos
repnz
in
cmp
repnz
in
mov
mov
xlat
inc
jns
icebp
xor
pop
dec
cli
arpl
mul
cmp
rolb
les
arpl
cmpsb
ret
std
push
jnp
fdivrs
mov
jg
xor
pop
xchg
or
jle
or
lock
lret
jmp
lcall
xor
rorl
dec
xchg
flds
mov
sub
or
push
mov
pop
ror
adc
aam
inc
add
dec
pop
jge
mov
fisttpl
flds
cltd
push
in
pop
fprem
sbb
mov
insb
addr16
and
jno
out
mov
jnp
mov
push
push
inc
daa
cmpsb
jg
and
popa
leave
xor
push
mov
out
mov
iret
pop
insl
imul
and
dec
pop
popf
mov
push
divl
push
mov
aad
stc
fwait
or
lock
cmp
jns
and
mov
jl
push
testb
imul
mov
sbb
subps
lods
lretw
xor
pop
shlb
and
add
in
lock
push
ja,pn
stos
scas
adc
mov
stc
xor
sbb
cwtl
enter
push
adc
sbb
cmpsl
or
fiaddl
mov
test
xor
outsb
and
repz
xor
js
lahf
outsb
inc
pushf
xchg
sti
lret
cli
dec
mov
ret
stos
stc
adc
fisubrs
and
jae
or
lret
rcrl
add
inc
add
ljmp
iret
ror
repnz
jo
xchg
add
fwait
shr
and
xchg
jnp
mov
mov
push
pop
ficoms
jns
mov
sbb
loopne
cmp
rorl
std
and
mov
pop
jnp
dec
es
shrb
data16
cmc
pop
into
inc
out
sbb
cmp
daa
nop
std
adc
lods
jb
jp
jle
mov
loop
add
stc
nop
cmp
adc
fcmovnu
or
movsl
inc
insl
xchg
mov
adc
and
pop
insb
ror
sar
jno
testl
add
cmp
xchg
jmp
mov
mov
xor
movsl
inc
pop
jb
or
add
movl
mov
sbb
mov
fwait
jno
adcl
ret
jmp
xchg
or
push
rol
pop
mov
jecxz
rclb
jmp
enter
outsl
and
cli
dec
xchg
mov
daa
pop
fdivl
jg
insb
inc
enter
out
xchg
shlb
xorl
inc
lcall
push
andl
loop
push
xchg
sahf
jmp
mov
nop
jl
jmp
xlat
ds
clc
test
adc
adc
mov
xlat
ret
call
mov
inc
add
fmull
dec
and
cld
pop
mov
mov
jb
sti
lock
aas
movsl
rcrb
xchg
and
test
adc
sub
or
mov
xchg
inc
daa
dec
and
xchg
outsb
imul
lods
popa
cltd
cltd
repnz
mov
push
pusha
movb
dec
fimull
push
add
jl
xchg
loop
xor
aas
sbbl
scas
jb
jbe
xor
outsb
jb
sbb
aaa
mov
inc
dec
mov
fsubrp
bound
and
ret
pusha
orl
xorl
push
or
into
fadds
subl
inc
cli
mov
sbb
push
dec
stc
lcall
and
cmp
test
fwait
pop
adc
xor
out
adc
cmp
pop
sbb
lea
inc
inc
sahf
int
sub
int
mov
xlat
jmp
xor
adc
jnp
shll
in
xchg
out
pop
nop
mull
and
orb
inc
popa
or
xchg
das
or
dec
out
jae
pop
dec
insb
test
lret
mov
mov
sub
lret
mov
lock
sbb
inc
and
mov
inc
pop
hlt
repz
ret
sub
and
imul
xor
push
cwtl
lret
sti
test
push
call
cmp
iret
push
cmp
mov
scas
pop
out
lods
cld
jo
mov
call
jns
lods
subb
ds
mov
push
sbb
sbb
cmp
add
inc
test
test
in
in
push
cmpsb
adc
bound
xchg
xchg
push
fwait
lea
pop
xor
fwait
enter
out
xor
xor
out
cmp
test
push
mov
cs
dec
cld
lret
adc
cmpl
sbb
cltd
mov
scas
rclb
inc
std
mov
pusha
or
xchg
mov
es
je
cld
outsb
fdivp
sbb
jb
dec
xlat
daa
stos
jbe
ss
dec
dec
pop
or
pop
lock
cmp
mov
jl
jecxz
out
dec
movsb
call
lahf
mov
jno
xor
gs
int3
movsl
mov
fidivs
and
and
cmp
pop
lods
clc
ficompl
mov
sbb
add
in
xchg
mov
out
mov
xor
pop
ret
mov
sti
xor
adc
orl
gs
mov
subl
stc
mov
loop
push
pop
ficoms
mov
imul
fsqrt
fidivrl
or
pusha
mov
pop
pop
or
test
push
xlat
cmp
sbb
cmp
pop
int3
sbb
cld
fnstsw
xchg
push
mov
cmp
int
sub
je
push
out
lods
call
imulb
int3
jg
outsl
fldt
push
fcmovnbe
pop
and
or
xchg
fs
add
mov
jbe
scas
arpl
push
lea
cmp
xor
outsl
ljmp
mov
cmpsb
je
popa
sub
push
mov
pop
xchg
je
mov
xchg
cltd
int
push
and
fsubs
mov
sbb
movsb
or
jmp
aaa
int3
adc
fstps
cmp
into
imul
addl
mov
sti
in
cmp
sbb
sub
ss
mov
mov
in
lods
lods
aad
int
leave
mov
cmpsl
lahf
cmp
loope
mov
adc
jns
fildl
or
jge
cmp
sbb
or
iret
xchg
imul
mov
les
into
mov
sbb
imul
fcoml
imul
mov
nop
mov
sbb
push
push
test
enter
pop
inc
ret
dec
cmpsl
cmp
cmp
js
push
popa
sbb
stc
mov
mov
sti
outsb
or
scas
mov
xchg
dec
cs
mov
fcoml
lret
cmp
xchg
shlb
push
adc
cmp
movsb
push
les
mov
push
std
inc
push
cmc
and
add
xchg
dec
pop
int
stos
iret
leave
scas
inc
testb
nopl
xchg
xor
adc
in
movaps
subl
cmp
fcompl
in
push
mov
mov
xor
repnz
int
popf
adc
jno
push
adc
jns
bound
lds
or
sbb
jge
aaa
inc
pushl
sub
pop
jne
ret
pop
sbb
mov
lock
inc
xchg
hlt
in
dec
xchg
stos
fldenv
fisubrl
int
lds
pop
jp
shrl
inc
ja
test
pop
loopne
xor
pop
cmp
dec
adc
mov
dec
cmpsl
or
mov
ja
inc
shrl
decl
cld
in
fiadds
cmp
outsl
fdivrs
cmpsb
lcall
jl
sbb
mov
in
pop
mov
xchg
cmp
rorl
sbb
pop
adc
addb
ret
loop
clc
mov
dec
sub
mov
imul
adc
out
sub
icebp
add
fs
das
push
pushf
mov
hlt
sbb
mov
aam
and
ljmp
fwait
sub
sub
popa
pop
leave
xchg
mov
cwtl
and
bound
lret
xchg
mov
mov
or
shrb
lret
lret
add
sbb
sub
mov
cmp
mov
jnp
repnz
cli
mov
fldt
outsl
fstl
sbb
xor
push
mov
outsb
movsl
jno
movsb
data16
dec
scas
sub
lret
das
mov
lds
les
jnp
push
in
pusha
mov
pop
mov
dec
shrb
xor
clc
shld
scas
add
xchg
cmpl
mov
addl
sbb
outsl
cmp
lock
imul
mov
pop
mov
outsl
ret
test
push
mov
mov
insb
rolb
scas
jl
cmc
inc
push
clc
inc
jb
fadd
adc
dec
sarl
and
mov
test
pusha
aaa
jb
jne
push
stc
imulb
fistl
dec
fisubl
cwtl
and
push
cmp
fcmovnbe
call
aam
cmp
scas
cltd
mov
xchg
push
fsubp
iret
sub
xor
xlat
fists
jp
pop
aad
mov
push
pop
push
lcall
fildl
pushl
add
jg
cmc
xchg
and
and
mov
ja
sbb
jmp
pop
in
stos
sbb
mov
adc
test
xchg
shr
dec
xlat
add
fwait
insb
sti
cmp
sbb
xchg
adc
push
add
cs
fcomps
push
inc
outsl
daa
xchg
and
xor
mov
xchg
lcall
cli
out
sub
inc
inc
outsl
add
xlat
stc
popf
mov
add
outsb
xchg
adc
inc
jo
imul
mov
sub
jae
pop
arpl
and
jg
mov
dec
data16
icebp
xchg
mov
lds
and
mov
movsl
jne
outsb
arpl
jns
mov
inc
dec
or
fst
push
shlb
push
lret
xchg
icebp
mov
pop
enter
outsl
iret
inc
fisttpll
pop
pop
push
flds
movsb
cmp
test
or
test
xor
cli
cltd
push
pop
push
movsl
jmp
lea
shll
sbb
jg
shr
shll
sub
les
lahf
dec
daa
add
dec
cltd
jle
enter
ljmp
lcall
inc
inc
pop
popf
or
enter
cmp
gs
pop
dec
loopne
loop
insl
sti
push
xor
and
insl
dec
popa
imul
adc
mov
jo
stos
push
das
call
jno
pushw
loope
xchg
xchg
sbb
paddw
scas
push
pop
scas
adc
imul
repz
enter
or
int3
mov
pusha
fwait
mov
shll
imul
sbb
hlt
lea
add
sub
cmpsb
push
jno
pop
mov
cmp
pop
dec
dec
adc
call
xlat
dec
mov
cs
xchg
adc
js
push
sub
das
test
and
push
mov
sbb
mov
cld
cmp
fsts
lret
and
clc
inc
push
fisubs
pop
push
scas
aad
shll
into
daa
test
jne
jmp
shlb
fidivl
in
mov
mov
jmp
push
cmp
sub
and
bound
test
loopne
in
jnp
je
loope
test
mov
pop
xchg
enter
pusha
popa
fucomp
sbb
add
ret
jae
add
inc
cmpsl
mov
rcll
int3
shll
push
arpl
sti
jnp
lcall
nop
pop
aaa
mov
in
jecxz
js
aad
jg
aas
and
mov
xlat
in
xor
xchg
fcomps
xlat
pop
push
scas
imul
rcll
mov
dec
ficoms
sub
lea
cs
shlb
cwtl
sbb
lock
sub
xor
pop
pop
xchg
aaa
std
mov
call
in
and
jecxz
pop
sub
fiaddl
add
pop
mov
test
repnz
enter
stos
call
dec
mov
sub
out
dec
or
mov
mov
outsb
std
pop
mov
pop
and
mov
rorl
jg
test
sub
and
in
je
cmpsl
fldcw
add
xor
rcr
mov
stc
dec
push
jae
or
adc
test
sbb
popf
jbe
push
push
mov
xor
out
cwtl
cmc
sub
cwtl
ljmp
nop
sub
jb
and
jb
jp
and
pop
cmp
stos
jbe
adc
in
inc
sahf
cli
push
das
setge
or
stc
cmp
mov
dec
jb
cmp
arpl
mov
dec
mov
insl
cmp
das
iret
mov
test
aas
sarl
das
test
push
mov
xor
arpl
movsb
out
and
mov
lds
jo
mov
and
xor
aad
inc
ret
push
push
sti
fimull
mov
sub
add
mov
mov
jl
enter
dec
cmp
repz
dec
sbb
sar
insb
xchg
pop
mov
sub
vmovshdup
or
pop
pop
xchg
add
xchg
test
scas
inc
js
je
pop
std
jp
xor
cmp
dec
mov
test
and
inc
repnz
outsl
movsl
xchg
out
loope
inc
data16
sub
sbb
pop
jl
outsl
test
inc
push
push
stos
mov
orl
push
sub
or
adc
dec
push
imul
xor
daa
push
data16
ds
xchg
movsb
lods
arpl
and
into
cmp
mov
ljmp
pop
sahf
push
in
into
xchg
lods
mov
add
movsb
push
push
sub
stos
mov
inc
sub
lcall
push
in
cld
enter
shrb
lret
dec
data16
sbb
pop
aaa
mov
add
scas
push
push
and
imul
xor
sub
jp
mov
ss
and
or
push
mov
jb
and
je
and
or
dec
out
out
ja
adc
outsl
add
ds
aas
jo
add
xlat
movsb
sbb
jmp
jle
dec
imul
and
lret
and
xchg
xchg
movsb
push
push
xchg
jae
mov
in
movl
add
hlt
push
lcall
mov
and
mov
negl
stos
insl
mov
adc
jo
mov
cmp
push
fisubl
ret
sub
mov
out
ret
jp
add
mov
popa
inc
mov
ds
ret
shrb
dec
and
and
sub
adc
int
sahf
cmp
sti
cmp
lret
mov
push
gs
inc
notb
leave
cwtl
andl
leave
aam
aam
dec
and
xchg
xor
js
mov
pop
xchg
dec
das
fisubrs
jp
icebp
or
mov
fistpll
pop
ds
inc
adc
mov
int
inc
scas
lea
add
push
adc
inc
cs
fildll
and
enter
in
aad
jae
mov
test
sbbb
aaa
sub
imul
repz
out
popa
lret
sub
hlt
movsl
scas
mov
ret
mov
arpl
data16
xchg
popa
or
sub
outsb
scas
negb
in
sub
mov
pop
xor
insl
push
inc
fucom
pop
sub
arpl
data16
pop
or
jmp
and
cmp
lcall
jmp
int3
add
fwait
mov
and
push
scas
pop
cmpsl
rclb
xchg
pusha
push
pop
mov
jle
jecxz
inc
mov
sub
xlat
jbe
adc
ds
jl
outsl
dec
out
addps
outsb
pop
xor
xchg
es
adc
cmpsb
fabs
inc
push
cmp
pop
xchg
or
add
mov
xchg
jecxz
cs
push
out
popf
sub
push
cmpsl
push
or
int
aad
xchg
lret
mov
repnz
test
fsubl
sbb
ret
adc
mov
icebp
sub
cmp
ss
jmp
lea
das
jg
push
adc
imul
jmp
and
cmc
test
cmp
dec
mov
and
sahf
scas
and
decl
adc
insb
jbe
das
shrb
nop
aad
fiadds
inc
jecxz
dec
ret
mov
jg
cmp
xchg
ret
sti
push
dec
scas
cmp
jbe
in
jle
hlt
test
lock
jno
adc
lock
or
jecxz
mov
sti
daa
lahf
subl
aad
hlt
arpl
je
cmpsl
or
rorl
pop
notb
js
dec
std
ljmp
dec
push
add
xlat
or
cltd
aam
in
pop
ss
pop
jo
mov
adc
or
std
sub
in
ret
mov
mov
xchg
lret
int
mov
push
mov
adc
shll
jle
pop
xchg
in
pop
outsb
inc
jb
cli
cmp
dec
inc
sub
lcall
mov
mov
jmp
xchg
cltd
mov
cwtl
mov
push
rorb
dec
dec
arpl
inc
mov
bound
fwait
xchg
mov
negb
push
fists
test
add
inc
mov
jp
out
addb
add
inc
fsubr
mov
add
mov
xor
xchg
test
jo
mov
sub
or
xor
xchg
adc
cld
adc
adc
outsl
flds
jl
es
ficompl
aad
test
lahf
sub
cmp
aam
out
mov
mov
scas
les
jge
mull
xor
repnz
mov
jp
dec
dec
mov
push
stos
in
fisubrs
std
in
inc
jle
cs
push
mov
mov
lea
repnz
shl
lcall
ss
pusha
push
ret
mov
mov
loope
jbe
xorb
sub
sbb
inc
inc
aam
test
and
dec
mov
clc
adc
psadbw
aam
lret
insb
decb
inc
mov
cmp
jno
fidivs
test
out
adc
push
jle
fsubrs
xor
push
fs
jl
mov
add
pushf
xchg
das
adc
mov
test
push
aaa
and
jl
mov
xchg
push
sub
lock
dec
xor
leave
jg
push
stos
cmp
mov
sarl
lcall
add
test
std
xor
jmp
insb
outsb
push
pop
jne
push
sbb
pop
cmp
aaa
imul
pop
jg
lret
shlb
call
ljmp
lret
cmp
aad
in
jecxz
pop
pop
push
sub
and
or
pop
pop
inc
pop
mov
aas
push
cmp
iret
js
jl
inc
jp
and
fsubs
cmp
mov
jg
add
adc
mov
out
xor
pushf
lods
push
lcall
jl
in
fildll
push
jecxz
dec
cmc
dec
rorl
mov
dec
inc
xor
push
xor
movsl
xchg
cmpsl
cmpsl
movl
nop
lahf
mov
outsl
les
inc
or
daa
mov
out
add
daa
mov
inc
imulb
bound
xlat
in
adc
and
sahf
cmpsl
pop
sti
pop
or
push
push
clc
dec
mov
int
lock
outsl
ds
clc
mov
cmpsl
and
pop
push
aad
loop
iret
addr16
fs
shll
ja
stc
jne
xchg
jbe
cmp
mov
push
leave
jl
ret
aam
push
ss
daa
xchg
in
pushf
sbb
repz
daa
cltd
es
mov
jnp
mov
inc
mov
add
dec
pushf
xor
test
or
cmpsl
jbe
cmp
dec
mov
cmp
dec
jb
adc
fcoms
ljmp
sbb
pop
sbb
in
pop
add
popf
dec
inc
outsl
adc
in
sbb
cmp
xchg
insl
test
mov
add
sarb
push
mov
popl
std
cwtl
xchg
test
aad
addr16
dec
in
sub
inc
fld
addr16
push
jmp
mov
or
sbb
test
fisttpll
mov
insb
stos
lds
int
mul
loopne
enter
jecxz
bound
fucomip
inc
sub
insb
insb
xchg
gs
rcrb
xchg
push
push
ret
push
pop
dec
sti
add
push
aam
adc
nop
out
arpl
movsb
or
inc
rcrb
mov
inc
aad
add
fldl2t
xchg
pushf
out
mov
cmp
sbb
aad
push
hlt
or
xchg
sub
loop
sub
pop
push
pop
clc
mov
inc
in
aaa
pop
inc
add
data16
into
mulb
loopne
std
mov
dec
jns
cs
mov
shrl
or
jne
in
mov
mov
stos
punpckldq
movsl
ret
into
mov
sysexit
jns
mov
sub
inc
into
pop
dec
jmp
mov
mov
mov
enter
shrb
adc
std
push
cwtl
mov
xor
and
push
data16
leave
pop
dec
insb
repz
fdivs
into
inc
dec
jg
xor
outsb
scas
rcrb
test
ss
test
pop
sub
dec
adc
add
test
cltd
fistl
lea
push
pusha
outsb
jns
movsb
shrl
jmp
jmp
icebp
enter
jnp
jno
repz
sbb
imul
sbb
jecxz
mov
or
daa
loop
inc
clc
jle
or
popl
sub
mov
sub
xchg
hlt
jb
lock
loopne
jle
popl
xor
sbb
push
push
in
push
pop
fsubrs
mov
lahf
fmuls
dec
test
aam
inc
ljmp
inc
jne
cmp
mov
push
out
push
pushf
decb
aaa
lret
lahf
mov
movsb
mov
pushf
add
outsl
int3
enter
xor
cmpsl
jnp
or
xchg
inc
jnp
inc
es
aam
mov
push
mov
in
pop
push
pop
out
mov
pop
mov
mov
adc
sub
arpl
das
push
es
mov
js
mov
js
xor
loopne
add
push
inc
mov
jb
mov
leave
bound
ficoms
repnz
mov
les
mov
lea
pop
fisttps
repnz
jl
lcall
mov
je
sti
lock
dec
push
dec
or
fldenv
adc
int
cli
popa
cmp
add
insl
arpl
jo
jns
sti
lods
adc
mov
jl
xchg
xchg
jbe
or
pop
cmp
ljmp
and
shrb
repnz
adc
mov
sbb
bound
mov
test
lcall
or
add
xchg
or
mov
mov
pushf
push
jns
sbb
jno
inc
sbb
or
and
shr
xor
adc
add
or
sub
rcrb
jge
jge
aaa
jae
shrb
cmc
pop
or
popl
fsubl
lret
popa
addr16
movsb
pop
cmp
push
cltd
in
daa
inc
pusha
add
iret
into
movsb
dec
xchg
dec
popf
popf
aas
inc
inc
cmovns
stos
fs
pop
sbb
sbb
pop
fstpt
insl
hlt
cmp
vpunpckhbw
stos
mov
roll
mov
lret
ret
sub
pop
jno
lods
mov
loop
mov
sbb
cltd
xchg
xchg
fs
adc
mov
dec
xor
inc
mov
jno
mov
outsl
add
adc
cli
xor
dec
dec
inc
xchg
out
out
int
cmpsl
jne
jo
xchg
add
popl
mov
xor
rcr
xchg
sbb
mov
jns
pop
aad
into
cmp
push
aas
xor
fldcw
inc
jbe
jae
mov
dec
ds
fdivrs
enter
or
fisttpll
dec
lds
mov
int3
cmp
sub
adc
fsubl
xor
sub
mov
or
loop
insb
cmpsb
add
shrb
outsl
lret
outsl
and
sti
lods
xor
mov
cmp
jae
mov
shlb
add
dec
cmpsb
jge
fiadds
push
jns
neg
mov
lahf
mov
js
and
pop
dec
cld
jb
adc
or
lret
jge
cld
sub
xor
and
aaa
mov
mov
js
push
out
dec
hlt
unpcklps
stos
dec
xchg
call
sbb
fmuls
fs
movsl
xchg
and
dec
and
ret
cmp
stos
mov
andl
ja
mov
mov
mov
jl
jmp
xor
pop
insl
call
mov
jb
inc
dec
pop
cmp
pop
fs
incb
cmc
daa
movsl
test
mov
and
and
das
mov
xchg
test
xor
out
xchg
pop
cmp
inc
push
add
and
es
cmp
xor
jle
les
push
cmpsl
add
ret
mov
push
push
dec
cli
cmp
mov
dec
lahf
jae
stos
sub
pop
arpl
sub
xchg
fprem
fstps
fcoml
shlb
mov
rorl
sbb
mov
cmp
fimull
insl
jnp
cli
icebp
sub
insb
mov
in
mov
mov
dec
pushf
fsubrl
lea
fisubl
jl
pop
outsl
jge
cwtl
dec
aas
cmpsl
pusha
dec
js
push
inc
lods
pop
mov
push
add
ljmp
shrb
popa
or
and
pop
sub
sbbb
cwtl
jno
sbb
es
mov
inc
jmp
or
andb
idivl
mov
jle
cld
and
add
inc
into
imul
or
bound
jno
clc
inc
std
lahf
xchg
jge
stc
data16
mov
mov
ret
adc
fistpl
dec
scas
xor
or
and
xchg
adc
dec
xor
mov
jl
sbb
mov
ja
mov
mov
pop
jne
pop
lret
aaa
xor
mov
testb
fildl
ffreep
lahf
lret
xor
sbb
adcb
lods
cmp
adc
stos
add
shrb
add
ds
jb
stc
mov
push
ja
cmp
mov
pop
sti
cmp
movsl
mov
in
xor
pop
pop
sarl
ret
pushf
push
jl
inc
add
fsubl
gs
sub
and
roll
inc
push
or
clc
mov
mov
mov
cltd
dec
and
cmp
into
jno
jecxz
pop
jle
imul
jp
bndstx
add
lret
rolb
push
pop
lea
pusha
icebp
dec
or
clc
jbe
xchg
movsb
inc
jbe
xchg
xor
jae
enter
sbb
push
fcomp
mov
ss
aad
push
icebp
mov
push
pop
lmsw
mov
ss
push
add
test
imul
rcll
sbb
popf
and
ljmp
pop
add
push
and
js
add
mov
cmp
or
mov
cmp
rcrl
rcrb
or
and
xchg
mov
and
xor
in
sti
push
pop
shr
mov
or
sub
das
dec
adc
inc
xor
lcall
bound
imul
and
sbb
add
sti
icebp
arpl
lea
jle
imulb
adc
jecxz
push
fadds
or
xchg
and
pop
outsl
cmp
xor
xchg
mov
and
add
stc
ljmp
sub
testb
fucomi
mov
jae
shll
cli
add
leave
and
gs
addl
outsb
test
inc
xchg
shll
sbb
push
sub
dec
ljmp
out
mov
mov
out
hlt
and
addb
xchg
mov
cmp
mov
adcb
cmp
faddp
stos
xchg
gs
jmp
je
js
mov
push
adc
jbe
add
fucomip
arpl
nop
jecxz
ja
in
mov
jge
pop
sbb
jecxz
test
adc
xlat
pop
test
xor
rclb
fwait
xchg
rcll
andb
xor
push
jp
xor
mov
mov
popa
es
cmc
insb
std
dec
repz
jp
and
rol
xor
inc
inc
cmp
out
push
loopne
jge
ljmp
decl
push
adc
sbb
jecxz
cmpsb
mov
sbb
jns
or
int3
cmpsl
mov
add
jnp
sbb
loopne
outsb
je
adc
dec
jle
cltd
aas
pop
ret
iret
jle
out
lahf
enter
divb
ss
xor
sub
jns
lds
xlat
xor
test
popf
pop
in
les
into
ds
xchg
imulb
out
jae
sbb
aad
jp
mov
push
aam
xchg
lcall
popa
lret
arpl
iret
ss
outsb
cmpsl
mov
enter
or
xor
inc
ror
xchg
ds
mov
jmp
xlat
jns
cli
mov
inc
lret
push
fldt
loopne
pop
leave
xor
jl
ss
jns
test
fadds
jecxz
les
outsl
pop
and
aad
jne
cs
leave
mov
mov
adc
inc
cmp
aaa
push
jle
mov
and
andb
int3
jo
shrb
rol
adc
push
inc
ds
por
sbb
add
adc
dec
dec
scas
in
lds
cmp
lods
mov
jge
mov
lret
xchg
movsb
push
out
in
adc
push
icebp
pop
xlat
inc
and
ret
inc
stc
cmc
das
aad
or
dec
or
push
xchg
mov
pop
jmp
in
mov
mov
cmp
dec
cmp
gs
cmpsb
ds
outsl
mov
xor
notl
movsb
and
or
mov
aaa
lods
sti
scas
int3
test
sbb
movsl
mov
jle
and
cli
push
mov
sbb
mov
mov
sarl
cmp
enter
xchg
out
inc
push
out
daa
rorb
stos
sbb
mul
lea
xchg
pusha
ret
movsl
decb
gs
push
hlt
dec
push
lahf
sti
or
int3
cmc
leave
adc
add
mov
push
pop
stc
inc
mov
rorl
cmp
pop
loope
lahf
sbb
dec
fidivrl
cmpsl
adc
push
inc
jg
daa
in
nop
lds
dec
nop
lock
pusha
xchg
orb
add
pop
push
adc
into
cmp
mov
shrb
push
lea
jmp
subb
jo
cmc
cs
dec
in
add
cld
cmp
mov
jns
mov
imul
cmp
push
push
or
loope
push
ret
jle
adcb
jg
ficoml
jnp
mov
sbb
clc
imul
nop
aaa
mov
mov
push
sbbl
xchg
stos
jle
sbb
shl
fcomip
loope
fs
sbb
jnp
nop
sbb
xchg
in
clc
jae
push
daa
scas
cwtl
mov
popf
cmp
xchg
cltd
lods
pop
call
dec
stos
test
test
fsts
sar
inc
fiadds
sbbb
sbb
cmp
cmp
inc
mov
inc
in
sub
push
jne
iret
mov
bound
je
push
out
cli
mov
push
lock
sub
loop
adcb
cmpl
sbb
cld
pop
iret
cmp
mov
cli
xchg
test
mov
cmp
jg
test
jbe
dec
lahf
push
dec
adc
mov
xchg
mov
jns
ja
mov
jp
mov
popf
mov
push
outsb
daa
rsm
loop
mov
jne
nop
clc
loope
xchg
cmp
imul
rcll
jb
movsb
dec
lret
loopne
mov
mov
mov
lea
mov
popa
cs
pusha
xchg
dec
mov
movsl
iret
mov
divb
pushf
daa
dec
mov
fsub
in
or
cli
shll
jg
xchg
or
mov
int3
movsb
mov
jle
xchg
icebp
add
adc
pop
fcmove
xor
movsb
push
or
sbb
movsb
sub
add
not
cmp
aam
xchg
sub
adc
ss
stc
push
hlt
xchg
outsl
sete
ret
ret
mov
dec
in
sub
push
or
xchg
out
dec
mov
adc
testl
sti
jle
adc
add
shrl
jb
nop
inc
cmc
popf
adc
push
sarl
and
xlat
sub
xchg
loop
test
pusha
xchg
test
sub
js
sahf
shl
cmovl
push
inc
add
fstpl
dec
xor
sub
pop
cmp
mov
push
cmp
cwtl
nop
mov
jecxz
jge
loope
add
push
cli
xchg
push
cmp
add
iret
push
mov
out
jl
bts
ds
push
adc
jb
fcoml
xor
mov
cmp
sbb
mov
jg
leave
push
xchg
push
testl
sub
call
mov
xchg
adc
add
pop
cmpsl
and
aas
xchg
in
sbbl
jb
es
mov
pop
outsl
xchg
pop
dec
adcb
cmp
inc
and
sub
bnd
cmp
or
mov
testl
rorl
scas
sahf
mov
cmpsl
mov
test
jns
js
jne
call
int3
and
jns
dec
push
and
insl
xchg
bound
scas
mov
pusha
pop
sbb
fstps
inc
mov
sbb
gs
dec
jno
xor
adc
bound
mov
cld
or
loop
xorb
pop
movd
mov
enter
or
in
scas
inc
jp
nop
pop
call
mov
in
push
fiaddl
xchg
push
movsb
mov
or
frstor
inc
das
pop
ds
test
xchg
mov
pop
movsb
adc
push
jp
lods
dec
cld
fisttpl
inc
fdivrl
add
rcrb
and
pop
add
pop
scas
mov
fcmovu
and
push
lods
cmp
test
or
jp
fldcw
fistps
gs
call
in
clc
xchg
movsb
xor
rcll
mov
loope
push
out
pop
cmc
clc
roll
jno
es
mov
mov
mov
je
mov
push
popf
repnz
cmp
aaa
inc
gs
push
jo
lahf
cld
js
and
inc
shlb
out
addl
or
repnz
ljmp
sarl
sbb
mov
xchg
mov
adc
jg
mov
jb
cmp
fcompl
mov
lds
mov
cmp
lods
ja
xor
jge
ja
in
fnstcw
mov
btc
cmp
das
inc
decb
mulb
cmp
add
pushf
dec
das
les
mov
inc
lds
into
outsl
sbb
sar
bnd
rcll
ret
fcmovnb
pusha
mov
inc
aaa
mov
pop
jne,pn
xchg
rorl
mov
xor
mov
scas
pop
dec
sbbb
jl
aad
aaa
jp
iret
jnp
lahf
cmp
fistpll
sub
cmp
or
mov
mov
or
mov
jle
shl
push
pop
sbb
stos
outsb
pop
imul
push
ret
clc
ja
xor
mov
jmp
cwtl
cwtl
call
xchg
out
dec
idivl
add
lret
lahf
pushf
movntq
cli
mov
and
sbb
push
mov
es
aad
push
mov
xchg
mov
dec
and
jne
ja
sub
dec
push
mov
add
or
loopne
jno
mov
cmp
loope
imul
test
nop
ljmp
cmp
inc
mov
lret
mov
mov
mulb
sub
incl
jl
sub
push
pop
adc
repnz
repz
mov
cmp
add
bound
imul
and
mov
sbb
cld
popa
mov
out
mov
add
pop
dec
pop
aaa
addr16
xor
stc
fidivrl
adc
popa
mov
xchg
pop
mov
ss
imul
inc
and
ret
test
mov
add
mov
xor
dec
and
dec
sub
push
inc
sub
and
dec
scas
pop
mov
mov
lods
in
mov
adc
fwait
sahf
mov
cmp
int3
and
rcll
outsb
es
adc
stc
jb
dec
mov
dec
cmp
sub
popa
or
push
loopne
ljmp
add
popf
scas
mov
dec
into
inc
sarl
test
js
test
push
and
bound
lds
push
push
loopne
cmp
test
xor
xchg
sub
adc
jge
and
push
cmpl
mov
lods
call
adc
jno
enter
jecxz
shll
call
mov
sub
lcall
pop
sbb
xchg
imul
dec
jge
cmp
fmull
xchg
leave
or
pop
push
popa
sub
into
insb
loop
cld
jns
mov
mov
shr
or
xchg
in
add
outsb
adc
fwait
addr16
test
loop
loop
fldl
loope
adc
or
mov
push
pop
sahf
mov
sbb
mov
jae
popa
xchg
push
pop
lock
scas
cmp
roll
popl
pop
add
shrl
push
push
imul
pushf
push
push
or
sbb
movsb
call
mov
dec
push
clc
mov
mov
out
xor
jl
jmp
rcrl
mov
mov
std
sbb
xchg
cwtl
fisttps
rcll
lret
jl
ret
rcrl
sub
inc
or
push
cmpsb
fisubs
cmp
jge
stos
mov
xor
mov
xor
loopne
in
ficomps
mov
imul
mov
and
icebp
daa
cmp
dec
mov
pop
scas
push
paddq
jle
call
cmp
mov
mov
hlt
mov
je
adc
out
mov
ljmp
pinsrw
fwait
pop
sbb
jmp
push
repnz
fucomip
negb
push
sbb
gs
pop
inc
or
push
sbb
andb
out
movsb
scas
push
and
xchg
addr16
pop
cmpb
divb
adc
push
imul
adc
dec
orl
lods
and
aad
or
repnz
mov
call
ljmp
negl
or
pop
inc
dec
xor
pop
fs
push
in
fnstenv
scas
addl
cmp
ljmp
push
mov
sub
xor
mov
xchg
sbb
repnz
in
push
addr16
pop
shl
dec
insb
and
fildll
in
jbe
mov
je
call
mov
sub
pushf
ror
push
lods
inc
mov
sarb
hlt
jl
mov
mov
adcl
or
cmp
icebp
int3
into
outsl
dec
mov
or
push
daa
pop
je
mov
icebp
push
adc
sarl
push
mov
dec
mov
stos
jne
movsl
xchg
xchg
jle
sub
push
fptan
add
lea
aaa
cld
dec
sub
mov
or
push
sbb
or
scas
cmpb
call
cmpsb
sbb
loope
jae
jae
inc
rorb
scas
je
jg
popa
lods
xchg
popa
ljmp
lea
push
push
mov
push
test
and
mov
arpl
mov
repz
and
adc
clc
std
adc
jmp
arpl
sbb
push
ss
mov
rcl
fcoml
sbb
or
mov
fwait
cmp
jmp
loopne
fists
iret
sub
xor
and
adc
adc
and
insl
leave
sub
mov
ret
dec
inc
mov
mov
adc
xchg
pop
mov
mov
pop
pop
mov
int3
sti
inc
or
iret
cmpsl
mov
and
jb
ret
jb
cmp
lea
xchg
outsb
jle
jecxz
push
cmc
mov
fistl
sbb
call
in
in
popf
sahf
xchg
and
rcrl
pop
lock
outsb
insl
and
jo
test
sti
outsl
lea
dec
inc
lret
scas
add
aad
or
xor
outsl
inc
out
int
xchg
ja
jge
jb
mov
idivb
inc
inc
mov
dec
inc
callw
push
pop
pop
jo
sub
push
pop
fs
ret
pop
inc
loope
pop
cli
ja
test
addl
movsb
cltd
jo
xor
mov
cmp
jecxz
inc
fs
xor
xadd
cmp
adc
jp
adc
ret
in
sub
cmp
test
or
in
xchg
addr16
shll
dec
mov
xchg
pop
jno
xor
jl
inc
add
mov
adc
cltd
int
rclb
cmc
fildll
mov
lea
gs
lods
xor
ret
loope
xchg
jmp
lea
cmpsb
xchg
mov
inc
jne
sub
jno
jnp
aas
mov
inc
jl
daa
lods
out
lock
cmp
mov
fucomi
lss
cmpl
mov
out
pop
and
andl
mov
icebp
jbe
inc
mov
xor
xor
addr16
test
pop
ret
movq
dec
cmc
mov
cld
stos
fs
mov
xor
js
xchg
inc
aad
aad
xor
pop
test
pop
mov
cmpsb
pop
mov
inc
daa
sbbb
push
cmp
andl
loope
aad
sbb
enter
cld
movsb
out
arpl
rorb
mov
mov
sbb
jecxz
sub
mov
add
test
push
stos
pop
loope
repz
jmp
pop
iret
popa
mov
xchg
push
push
mov
loope
cmp
and
call
cmpsl
popf
inc
xchg
arpl
ss
or
sbb
xorl
jno
lock
pop
movsl
daa
lods
mov
dec
clc
sahf
pushf
xchg
iret
jmp
insb
mov
lcall
in
bound
and
inc
push
daa
loope
and
sub
cmp
or
mov
test
mov
in
inc
dec
sbb
inc
inc
pop
mov
and
loop
xchg
ds
dec
ret
orl
cmp
test
out
sub
fwait
stos
sti
and
aad
mov
jo
mov
cmpsb
lret
xchg
shlb
lock
ficoms
arpl
push
pop
test
popa
aam
sub
les
insb
int
lods
out
sbb
sahf
pop
mov
cltd
mov
mov
inc
pop
sbb
xchg
loopne
outsl
or
push
loop
mov
inc
mov
flds
mov
in
cmc
lret
int3
inc
ljmp
push
inc
dec
mov
test
in
fidivrs
xchg
mov
repnz
mov
mov
ret
test
stc
inc
pop
and
mov
inc
push
scas
je
mov
pop
stos
rorl
mov
xchg
jae
cmp
jae
cmp
add
mov
decb
movzwl
adc
or
and
lea
test
lahf
jmp
inc
clc
or
aam
sbb
in
adc
jmp
out
or
loopne
lret
inc
stc
push
testl
sarb
xchg
gs
clc
idivb
in
aas
push
inc
fucom
add
xchg
xchg
jecxz
imul
insb
add
data16
neg
pop
sbb
cmp
in
out
shlb
imul
aaa
cli
sbb
jle
cmp
mov
sbb
sahf
in
pop
sub
cmc
xchg
nop
xor
pop
inc
add
out
add
ss
jns
out
scas
into
movsl
insb
movsb
sub
and
cmp
mov
call
sbb
shlb
popf
mov
out
jbe
sbb
xchg
lea
fstps
pushf
push
inc
inc
ret
fidivl
cwtl
sbb
adc
in
sub
dec
xor
mov
add
and
arpl
dec
ret
insl
adc
addr16
aad
jl
les
inc
call
adc
mov
cmpsl
gs
cmp
cmp
test
into
inc
mov
ljmp
cmp
xchg
cmpsl
int
mov
into
popf
aas
mov
push
pop
push
nop
xlat
xchg
cmpsl
aam
cmpsb
cmpsl
xchg
cmp
cwtl
pop
pop
cld
fistpl
mov
or
les
mov
addl
xlat
fisttps
sbb
dec
das
cltd
pop
push
pop
movsl
dec
loopne
xchg
push
mov
inc
cmp
mov
mov
cmp
arpl
xchg
les
sahf
insl
int3
lret
scas
push
movb
and
stc
mov
mov
add
in
aas
mov
jnp
lahf
pop
popa
repz
mov
into
testl
lea
push
dec
inc
loop
scas
jns
cltd
cmp
mov
in
jbe
sub
or
pop
aas
aas
cwtl
xchg
orl
xlat
inc
inc
repnz
cmp
cwtl
and
lea
jmp
and
add
insl
sbb
inc
push
out
das
icebp
sti
addr16
mov
dec
mov
cmpsb
cmp
push
hlt
xor
repz
shl
pop
ficompl
jae
into
inc
cmpsb
push
jmp
je
jecxz
test
xor
out
popa
insl
or
cltd
scas
test
mov
mov
xor
jno
dec
fistl
sbb
lds
push
fldenv
sub
add
lret
jo
pusha
mov
mov
dec
mulb
mov
and
cmp
xchg
push
rcl
divb
adc
dec
ja
aam
mov
dec
gs
pop
out
pop
cs
sub
sbb
adc
fbstp
and
ljmp
imul
xor
mov
lock
out
inc
push
in
push
xchg
repnz
push
xor
or
mov
pop
inc
push
xchg
or
out
cltd
inc
outsb
pop
arpl
pop
out
mov
push
dec
add
aad
hlt
mov
fsts
and
and
cs
cs
repz
pushf
imul
cmp
cs
lock
movsb
mov
aaa
xchg
movsb
adc
test
inc
rsqrtps
ds
add
out
xchg
inc
insb
dec
push
gs
and
stos
roll
dec
jl
sbb
xor
in
cmp
js
xchg
psubq
xor
jnp
dec
std
dec
out
nop
mov
cld
xlat
push
or
jge
mov
sarb
lock
push
mov
lods
out
idiv
xor
sbb
pminub
nop
sub
rcl
adc
mov
sbb
cli
xor
jle
aas
ud1
test
mov
call
cmp
test
xor
adc
xchg
icebp
sti
loope
je
lods
push
dec
gs
adc
push
sbb
mov
inc
add
test
addb
repz
scas
pop
push
hlt
out
sub
stc
imul
mov
add
incl
outsl
sub
outsl
cltd
xchg
sub
xchg
ret
push
roll
push
push
mov
scas
cmp
jecxz
mov
adcb
sub
icebp
mov
fldenv
aam
jmp
or
aas
cs
xor
pop
push
mov
or
dec
out
andb
mov
mov
mov
xchg
or
sahf
repnz
ds
sub
xchg
mov
push
mov
cmpsb
inc
xor
cld
push
out
out
inc
jmp
cmp
push
mov
xlat
push
push
call
leave
pop
pushf
dec
mov
clc
test
sub
jmp
xor
movsb
add
push
fwait
addr16
dec
loopne
or
inc
or
xor
or
pushl
xor
enter
xor
jns
sub
aas
dec
jbe
jns
add
mov
mov
imul
aaa
pop
fsub
movsb
ds
repnz
in
lahf
in
lahf
aaa
push
lret
or
in
dec
pop
sub
push
inc
testl
xor
inc
xchg
sbb
jb
push
adc
jmp
aas
out
jns
sbb
ret
sub
push
pop
cld
or
jnp
inc
les
push
test
fisubrs
stos
dec
negl
xor
jb
jge
pop
dec
push
gs
repz
jbe
fsubl
and
scas
xchg
adc
pop
insl
cmp
xor
insl
lea
xchg
mov
stos
fstpl
dec
les
test
aaa
xor
pop
mov
mov
insl
fwait
in
leave
push
js
push
mov
imul
pusha
or
aas
dec
ljmp
inc
xor
mov
and
negb
jge
mov
sub
xchg
xor
ficoml
mov
jle
dec
pop
imul
xor
push
ret
cs
mov
push
mov
fstpl
nop
or
push
ret
inc
icebp
cmp
lcall
filds
inc
mov
rcll
cmp
xchg
pop
repz
out
inc
aam
mov
xchg
adc
mov
arpl
cmp
jbe
pushl
dec
filds
rcl
ret
xor
or
cltd
mov
cmp
lahf
adc
push
movsl
movsl
test
sbb
jne,pt
ljmpw
push
pop
cwtl
repnz
rclb
adc
mov
adc
pop
outsb
outsl
mov
leave
mov
add
pop
dec
cmpsl
loopne
movsb
fldenv
test
addb
and
or
jne
lea
gs
push
or
jae
jno
push
xchg
jecxz
add
cwtl
xor
movsl
cmpsl
push
push
scas
cmp
icebp
add
pop
xchg
in
bound
jae
fstps
test
cltd
data16
scas
inc
sbb
pop
js
outsl
enter
out
stos
or
sbb
or
int3
shlb
dec
lret
dec
inc
sbbb
xor
js
or
aas
int
inc
mov
es
stc
hlt
sbb
js
fcompl
push
mov
add
shrl
call
sarb
out
jge
mov
lods
stos
mov
daa
dec
xor
and
hlt
test
dec
out
cmp
iret
ljmp
scas
icebp
jnp
flds
adc
pusha
sub
xor
xor
frstor
mov
push
cs
shlb
push
mov
or
or
icebp
xor
arpl
pop
ds
pop
cs
mov
or
inc
pop
adc
add
imul
and
push
iret
pop
cwtl
fmull
jb
push
and
inc
adc
int3
pusha
add
or
rclb
push
pop
mov
cmp
mov
dec
popa
rolb
lock
mov
js
repnz
jnp
lahf
mov
adc
sub
repnz
pop
jns
xor
lds
int
pop
outsb
popa
dec
mov
mov
xorl
sbb
data16
jle
jl
mov
jbe
mov
or
gs
call
add
mov
repnz
jp
arpl
out
test
mov
push
out
int
xor
lods
cmp
cli
or
repz
cld
loope
pop
jmp
sub
jo
jl
xchg
gs
add
add
hlt
or
das
and
push
in
into
dec
sub
add
adc
sub
shrb
dec
xchg
mov
and
loopne
cmpsb
sub
pop
inc
inc
mov
push
sub
mov
jl
sbb
sarl
push
sti
jecxz
dec
and
mov
dec
movsb
xchg
xchg
rcll
mov
mov
mov
inc
jmp
mov
or
xchg
dec
sub
in
test
movzwl
jge
mov
xor
push
ja
fdivrl
and
lahf
lret
lods
test
out
out
test
dec
cmpsl
js
lret
or
push
inc
sahf
inc
pop
hlt
push
daa
aaa
xchg
jl
or
aas
cmp
pop
imul
add
and
xchg
sarl
fidivl
lret
sahf
jecxz
dec
xor
test
xchg
pop
sbb
jb
add
pop
push
pop
mov
lretw
or
aad
cmp
in
dec
clc
testb
icebp
mov
ret
stos
dec
or
sub
xor
pop
repz
dec
mov
inc
add
rcrb
mov
imul
sub
gs
in
add
in
in
adc
dec
sbb
mov
adc
or
aas
mov
or
xor
mov
or
mov
es
pop
adc
mov
mov
adc
pushf
mov
mov
outsb
repnz
cmp
mov
dec
lahf
jae
popa
mov
ret
int3
pusha
xchg
rcrl
sti
sub
push
or
and
dec
cmp
adc
sti
sub
fwait
divb
sub
inc
and
push
shrl
fiadds
jae
cmp
out
lds
sbb
repz
iret
pop
mov
cs
mov
aad
xchg
and
push
push
push
jp
std
and
mov
mov
jno
mov
jp
into
sbb
cmpsl
out
insl
in
xchg
mov
out
aaa
mov
lret
bound
sub
in
add
rclb
mov
adc
lcall
es
adc
ja
fdivp
adc
or
sub
ja
cld
ret
dec
popa
push
mov
fisubl
mov
out
cmp
xchg
cmp
inc
mov
mov
rol
and
ficoml
xchg
hlt
cli
and
lcall
jg
fs
out
and
sbb
inc
jo
sub
xchg
pop
dec
loopne
sbb
xchg
xchg
sub
sub
pop
in
cs
mov
sbb
int
test
cmp
andl
sub
sti
dec
sbb
cmp
add
mov
push
test
lret
les
push
bound
xor
jnp
push
stos
xor
mov
cli
loope
jge
sbb
sbb
mov
inc
mov
fiadds
int3
gs
push
jbe
and
popf
xlat
sbb
nop
add
push
inc
out
pop
or
sahf
add
pushf
loop
pop
lods
out
jb
cs
adc
nop
roll
ljmp
cmp
xlat
sbb
or
and
repnz
xchg
ret
iret
int
jo
out
hlt
out
push
xchg
out
repnz
aaa
divb
xchg
stos
rol
imul
push
inc
xchg
adc
lods
outsl
jecxz
mov
sub
and
adc
mov
lds
jmp
stc
sahf
aaa
mov
lods
out
jae
daa
and
ret
pop
shll
out
or
stos
sub
cld
sarl
mov
popf
mov
sarl
pop
movsl
hlt
jbe
sti
mov
and
rorl
mov
loope
mov
xor
ss
out
pushf
mov
cmp
push
push
mov
out
pop
iret
inc
push
jg
mov
gs
inc
dec
xor
mov
mov
pop
mov
addr16
ljmp
jge
clc
rclb
repz
ss
jo
or
sbb
pop
jb
cmp
inc
adc
shrl
inc
lret
mov
insb
dec
sbb
adc
xlat
pusha
fldt
out
fimuls
mov
outsl
or
or
jnp
ret
mov
loop
sbb
and
push
push
out
popa
pop
pop
shrb
in
or
sahf
push
fdivrp
mov
cmp
imul
aaa
subl
xchg
pop
rol
inc
add
inc
test
dec
popa
lcall
cmp
cmp
rcrl
cli
push
subb
adc
mov
pop
jno
leave
int3
gs
adc
cld
pop
mov
pop
shr
sti
xchg
ljmp
fdivrs
aas
rcrb
cmp
not
test
or
int
fildll
das
in
pusha
movsb
in
vpmacswd
enter
out
loop
jno
inc
or
mov
mov
loopne
sti
outsl
adcl
push
js
mov
aam
mov
out
fwait
xchg
mov
pop
sbb
jmp
out
ficompl
aas
inc
enter
adc
aaa
loop
popa
xor
pusha
jg
cwtl
jmp
mov
fsqrt
sub
lods
pop
les
jb
int
adc
fadd
pusha
mov
ss
bound
adc
loope
pop
sbb
dec
push
les
cli
repnz
daa
pop
imul
jg
call
lret
data16
std
or
cmpsl
and
fildl
fs
mov
jns
inc
inc
mov
rorl
pushf
adc
sbb
add
ds
imul
add
inc
aam
std
scas
mov
jp
mov
gs
std
add
mov
mov
and
xchg
clc
xor
mov
ljmp
lods
fistpl
inc
cmp
jp
and
icebp
aaa
xchg
loopne
inc
popa
ds
cmc
xchg
jp
xlat
rcrb
cmpl
inc
xor
sbbb
mov
rcrb
mov
xlat
and
jne
ret
and
fistl
push
in
push
int
repnz
call
jmp
cmp
outsb
jl
fld1
cltd
shl
stos
fmull
add
repz
pop
jne
cmp
push
sahf
mov
xchg
imul
cmp
inc
push
lret
push
je
lret
outsl
gs
shrl
xor
insl
repnz
lods
push
into
xchg
leave
pop
std
int
lods
movsl
les
or
imul
iret
hlt
inc
daa
jae
andl
sarl
adc
add
mov
xchg
pop
cmp
ja
adc
ss
sbb
adc
cwtl
dec
inc
jl
push
push
int
rcrl
adc
push
out
in
cs
repnz
mov
xchg
pop
mov
ds
cld
sbb
pop
jno
add
je
sahf
inc
jmp
rol
subl
sar
jge
rcl
sub
jl
fstsw
cmp
add
xchg
jo
out
movsl
sti
inc
es
mov
les
ret
lock
aaa
idivl
xor
popl
inc
jo
sbb
jl
stos
sbb
pop
add
test
int
cmp
sahf
lea
cmp
lret
data16
sub
jno
jae
cld
mov
push
push
or
jne
shrl
lahf
repnz
cmpsl
push
mov
cmp
add
arpl
fistpll
lds
sbb
inc
lods
pushf
dec
jle
mov
push
xchg
imul
std
inc
scas
rorl
pop
mov
push
jge
imul
ds
jne
dec
and
cmp
or
ja
shlb
popf
rol
cs
adc
jns
or
ss
call
inc
dec
sti
sbb
sbb
js
sub
mov
xor
shl
xchg
outsb
int3
and
and
sub
pop
xor
mov
aaa
pop
xchg
xchg
mov
in
pushf
subl
fsubr
add
insb
das
or
xor
inc
pop
add
arpl
push
std
sti
mov
and
inc
and
js
and
cmp
and
inc
mov
add
hlt
stos
inc
cmpsl
les
js
loop
jmp
stos
mov
jp
and
fsubl
sbb
cwtl
fidivrl
iret
mov
xor
or
cs
das
mov
mov
xlat
and
or
jge
cli
loop
icebp
pop
ljmp
lods
inc
mov
insb
adc
movhps
xlat
in
xor
or
in
rclb
jmp
xor
in
mov
ds
push
mov
pop
negl
lahf
jmp
push
imul
call
jg
xchg
call
lods
jge
lea
mov
adc
pusha
aam
out
or
xor
inc
sub
pushf
or
outsb
dec
lds
ljmp
das
jmp
dec
sbb
jae
mov
fdivs
dec
mov
rorb
sarb
add
scas
imul
nop
jno
fs
pushf
mov
xor
or
pop
sar
je
mov
inc
pusha
in
push
push
aam
xor
or
adc
jns
jae
jg
mov
dec
mov
nop
dec
and
sti
mov
sbb
xor
ja
inc
test
out
ficompl
daa
test
in
test
lods
clc
out
xor
xchg
fisubs
push
enter
in
ret
xor
lahf
xlat
rol
daa
add
xchg
jno
sbb
mov
mov
pop
and
out
in
adc
mov
mov
mov
add
in
iret
loope
nop
cmp
push
loopne
pop
adc
sub
mov
iret
pop
cmp
jg
scas
test
mov
outsb
popa
es
jge
sarl
pop
add
cmpsl
and
add
es
or
jnp
mov
sub
clc
fsub
lods
ss
lcall
dec
xchg
jae
shl
fwait
sbb
cmpsl
xchg
add
add
cmp
mov
dec
movd
lock
sbb
cmp
stos
fcoms
mov
popf
dec
mov
pop
sub
cli
add
in
loope
push
mov
test
adc
aas
hlt
int3
cld
imul
sbb
dec
mov
push
pop
int3
xchg
mov
movsb
xor
ret
inc
mov
sbb
jl
pop
loop
out
xlat
cmpsl
lock
scas
test
push
lods
out
ds
out
addr16
int
lea
ljmp
icebp
cmpsl
or
flds
mov
insb
adc
in
sarl
xlat
sub
cmpsl
sub
xchg
dec
pop
roll
jb
stc
call
inc
sub
push
outsl
add
dec
lahf
sti
mov
xor
repnz
arpl
add
ret
push
push
jmp
mov
test
aaa
clc
sbb
pop
dec
repnz
pop
lods
sti
adc
mov
add
loope
sub
aad
int3
lcall
or
out
ljmp
sub
adc
adc
push
bound
push
and
jle
ljmp
cmpsb
xor
mov
faddl
popf
enter
cltd
in
das
sub
js
add
push
aaa
pop
push
movsb
jg
push
shll
mov
shl
addb
cltd
push
xchg
xor
push
insb
xor
mov
mov
dec
sti
jno
sbb
pop
imul
scas
cmpsl
pop
add
mov
cmpsl
xchg
ret
notb
jecxz
arpl
lds
jp
test
pop
or
xchg
xor
in
xor
dec
pop
xchg
sub
push
pop
jnp
insb
clc
or
adc
dec
xchg
cmp
int
add
lods
inc
xchg
sbb
out
scas
lret
lods
pop
sub
xor
or
leave
mov
fstp
xchg
and
fstps
icebp
neg
add
jne
insb
sbb
inc
xor
fadds
xchg
addb
int
pop
shlb
cld
xor
sbb
mov
mov
das
inc
loope
sub
inc
sbb
dec
push
jnp
adc
pop
pushf
mov
js
lods
cmp
mov
adc
mov
xor
mull
lahf
mov
mov
addr16
xor
xchg
xchg
sbb
lds
daa
push
and
mull
lods
sbb
mov
jno
adc
jnp
notl
repz
ret
pop
jmp
pop
push
jle
popf
cmc
pop
movsb
mov
mov
ja
inc
adc
addb
jle
xchg
jo
arpl
ds
int3
test
dec
add
lods
xchg
adc
push
negl
int3
xchg
or
daa
or
jns
sub
add
mov
dec
leave
mov
orl
push
hlt
insl
test
aam
jne
and
mov
loop
and
stos
int
orb
fsubr
xchg
mov
cmp
fwait
mov
inc
repnz
stos
add
mov
jge
stos
aaa
imul
sarb
addl
aas
lea
pop
cmp
push
cmp
andl
and
cmp
mov
sahf
icebp
lahf
add
pop
push
push
mov
fwait
sar
movsb
pushw
test
push
fdivr
pop
mov
mov
outsl
xchg
imul
pop
pushf
cli
stos
clc
and
xchg
lock
mov
jmp
sbb
fsubrs
stos
adc
inc
push
popf
jmp
cmpsb
jo
fidivl
sub
add
and
jne
hlt
icebp
and
pop
out
cmpl
or
pop
push
and
das
cltd
clc
lahf
cmpsb
xor
adc
pop
aad
mov
mov
mov
cmp
pop
mov
stos
dec
mov
cmc
out
jne
adc
cmpsb
loope
mov
pop
mov
inc
fcoml
arpl
mov
fidivrs
icebp
cli
call
or
movsl
xor
mov
imul
insl
pop
mov
sbb
mull
xchg
call
xor
dec
insb
pop
mov
inc
cmp
fiadds
push
sub
fbld
xchg
xor
lret
jnp
loope
or
mov
add
cmp
and
inc
jle
stos
xor
cmp
inc
push
imul
out
aam
mov
ss
dec
mov
mov
mov
leave
std
out
nop
lock
dec
add
cmpsb
cltd
mov
sbb
sarb
dec
sbb
and
cmp
insl
lods
pusha
pop
movsb
mov
push
subb
ret
jecxz
add
xor
rcr
stc
mov
inc
mov
shr
imul
sub
lret
inc
popa
lret
dec
pop
shll
adc
pop
xor
aas
das
pop
xchg
cmp
stos
out
loop
lret
cmpl
sarb
out
add
push
out
testl
push
aad
and
rcrl
adc
rcl
push
pop
imul
sbb
popf
ljmp
jecxz
imul
fidivs
jno
mov
cmpsb
mov
dec
test
xchg
rcr
lret
jns
jle
xchg
dec
adc
jl
fsubl
popf
test
out
insl
xchg
in
ja
push
int3
push
sub
inc
cli
cmp
add
pop
xchg
adc
sbb
or
mov
test
jnp
adc
xorb
pop
mov
cltd
mov
or
mov
ljmp
cmc
push
test
insl
adc
xor
sub
movsb
notl
mov
pop
mov
jb
mov
push
loope
sbb
pop
adc
insl
fsts
test
adc
add
pop
or
jbe
setno
call
add
into
into
sti
popa
sub
mov
lret
pop
mov
pop
pop
les
push
dec
pop
clc
or
push
pop
fs
imul
jecxz
add
or
cltd
cmp
xorb
neg
aad
sbb
aaa
jge
mov
mov
mov
fldt
xor
aas
aas
gs
cmpsb
arpl
pop
mov
inc
or
bnd
inc
adc
out
cmp
cs
mov
pop
sub
es
mov
mov
or
add
ror
xchg
add
cmp
sbb
es
fiadds
mov
test
ds
pop
int3
movsb
mov
sub
addr16
insb
lods
ljmp
inc
fists
mov
fmull
cmp
push
stos
sarb
cmp
pop
jl
cmpsl
loope
xor
ss
sbb
mov
mov
call
cmc
mov
dec
jg
sbb
rorl
cltd
push
xchg
int3
mov
push
xor
decl
nop
adc
inc
or
pop
inc
sbb
dec
add
mov
daa
sub
cltd
sarb
dec
push
or
inc
popa
adc
mov
xor
ljmp
gs
test
ret
shlb
sahf
mov
fildll
jmp
outsb
popa
cmpsb
pushf
bound
dec
xchg
xchg
pop
xchg
add
fdivrs
int3
mov
lret
cld
mov
pop
insl
xor
xor
imul
add
sbb
push
sti
popf
in
outsl
xorps
xchg
jge
push
sub
dec
cmpsb
out
xorl
insl
test
xor
and
aaa
in
dec
test
or
arpl
repz
mov
subb
mov
loope
divb
xchg
mov
sub
and
pop
enter
mov
aaa
jo
dec
add
ljmp
fstpt
cmpsb
movsb
push
int3
mov
mov
test
lods
push
cmc
xchg
add
iret
push
notb
mov
repz
int3
add
aaa
ja
imul
mov
mov
pop
ja
in
test
jmp
jge
jns
jmp
popa
movsl
enter
lock
sbb
pushf
sub
insl
fbld
jne
cwtl
dec
dec
cmp
enter
dec
sbb
lret
inc
cltd
adc
mov
jo
adc
push
out
cmp
sahf
mov
mov
sbb
les
fbstp
push
outsl
xlat
mov
push
subb
sti
inc
in
lds
fs
lcall
mov
inc
xor
adc
adc
imul
adc
inc
sti
push
loop
xchg
jle
jo
push
test
mov
mov
mov
movsb
mov
push
mov
or
xor
call
test
lcall
sub
fwait
iret
cmpsl
adc
inc
or
and
fnstenv
or
xor
mov
lea
jb
push
xchg
dec
mov
jl
and
movsb
xchg
mov
xchg
movsb
jle
popa
inc
xchg
dec
negb
mov
inc
dec
stos
sub
add
popa
out
stos
outsb
cmp
pushf
das
test
jg
xor
popf
mov
lcall
into
call
jns
pop
lea
push
xchg
lret
push
sub
xlat
xor
sbb
or
int3
xchg
xlat
sbb
imulb
mov
rcrb
sti
cltd
mov
cld
pusha
dec
or
test
ds
pop
jno
dec
arpl
aad
int3
cld
pop
iret
add
push
movsb
inc
jmp
cmp
xchg
popa
fidivrs
cmp
movsl
fisttpll
shr
and
push
inc
neg
dec
pop
sbb
ss
sbb
push
xchg
adc
out
nop
jmp
stos
inc
inc
in
pop
pop
mov
inc
jnp
and
mov
aam
push
imul
push
cmp
add
fcompl
lods
lcall
movb
out
test
push
btc
push
sub
xchg
sub
cld
sub
pop
mov
sbbb
sti
fbstp
je
push
sub
sbb
push
inc
fyl2xp1
mov
pop
clc
push
sbb
sbb
dec
xchg
pop
lds
cmpsb
push
sbb
adc
cmp
aaa
jge
mov
fwait
ljmp
mov
movsb
and
daa
loope
cld
es
inc
fadd
es
clc
clc
in
pop
pop
sub
mov
cmp
fcoml
jle
mov
fstpt
xor
dec
mov
inc
outsl
and
lcall
and
pop
sub
sub
pop
pop
loope
sub
push
push
or
fistpl
and
addr16
adc
cmpsb
imul
lods
cmp
sbb
mov
mov
loope
loop
mov
mov
cmc
cltd
lods
out
jns
cwtl
lcall
sub
sbb
movsl
mov
jns
jo
mov
sbb
inc
les
out
mov
stc
shrb
sbb
and
aaa
and
xchg
pop
xchg
xchg
xchg
dec
xor
pop
outsl
cs
in
arpl
stc
push
pop
push
mov
lods
movsb
bound
inc
push
xor
mov
push
sahf
test
aas
push
pop
pop
mov
mov
cld
sbb
sub
xchg
push
dec
sub
xchg
cmp
pushf
bound
lods
mov
jp
out
dec
pop
sub
xchg
sbb
mov
xor
enter
add
sub
dec
lods
sub
and
fwait
dec
aaa
mov
inc
mov
rcrb
pushf
aas
test
mov
lret
push
punpckldq
mov
and
das
enter
cmp
cltd
adc
dec
movsb
dec
inc
cmp
iret
pop
or
sub
xchg
dec
inc
in
mov
xchg
xchg
push
dec
lret
xchg
rcrl
scas
movsl
dec
mov
ljmp
stos
iret
mov
mov
cmpsl
into
cwtl
ds
sub
cmpsb
pop
mov
cld
aad
cs
adc
cs
sbb
les
insb
cmp
ret
sub
push
adc
cwtl
mov
sbb
pusha
fstl
add
lahf
pop
clc
in
jmp
or
or
add
fistl
aad
lret
adc
jnp
repnz
mov
mov
cmpsl
or
lahf
push
adc
popf
sub
out
cs
in
das
push
mov
mov
sbb
scas
pop
leave
jne
ja
adc
pop
stos
sbb
data16
aaa
pop
and
pop
push
pop
adc
lods
mov
xchg
mov
cmp
lahf
mov
nop
xor
pushf
and
int
mov
jb
xor
movsl
out
dec
push
cmp
in
call
pop
data16
leave
imul
pushf
fistl
and
adc
je
stos
sti
ret
je
mov
sahf
stc
jl
push
out
mov
and
repz
lea
and
mov
sub
rclb
outsb
sbb
mov
push
mov
cmpsb
cmp
dec
inc
jns
fsubl
ret
jnp,pn
pop
jp
or
and
outsl
xchg
sub
push
cwtl
xlat
enter
mov
pusha
push
addr16
mov
and
jo
pause
into
dec
ffreep
inc
sahf
sub
loopne
pop
sub
pop
cwtl
inc
fistpl
dec
mov
inc
cmp
nop
hlt
adc
sti
sahf
inc
jle
mov
push
div
mov
xor
std
mov
stos
paddb
dec
mov
cmpsl
mov
xor
xor
mov
cmpb
xchg
sbb
shl
jno
cmp
fstpt
sti
mov
xlat
pop
fistpl
add
push
or
cmovae
pop
pop
xchg
mul
sarl
pop
xchg
add
cmp
sbb
dec
cmpsl
fistps
andl
aaa
fucom
push
stc
hlt
loope
push
xchg
in
fimuls
into
cld
shl
sub
lret
push
xchg
push
push
jecxz
imul
xor
jecxz
push
xor
lods
jg
cmpl
cmp
test
push
pop
pop
addb
push
pusha
jns
ss
fimull
pop
outsb
dec
dec
imul
mov
sti
sub
lret
jl
xchg
inc
ljmp
out
pop
leave
jmp
xor
mov
cld
pop
fsubr
test
call
adc
dec
inc
mov
mov
jmp
data16
or
mov
imul
push
mov
stos
push
xor
xor
xchg
lret
movsl
dec
cmp
xchg
sbb
cltd
adc
out
es
push
adc
mov
sbb
arpl
add
das
mov
sbb
mov
cs
jp
inc
push
push
cli
leave
xlat
inc
adc
xor
pop
xor
cmp
pushf
xchg
fidivl
out
lock
cmpsb
test
sarl
mov
outsb
cli
mov
rcrb
xchg
xchg
les
xor
loope
ds
xchg
mov
mov
sbb
mov
and
cmp
insb
adc
mov
loopne
and
dec
ret
or
sbb
sbb
push
aam
scas
xchg
or
xor
stos
stc
stos
cli
imul
mov
aas
inc
xchg
lahf
mov
xchg
sbb
lahf
sub
inc
loopne
pop
inc
test
sbb
out
mov
ficoms
inc
mov
mov
xlat
mov
jmp
cmp
fdivl
mov
mov
iret
ljmp
or
data16
ljmpw
sarb
add
adc
or
in
imul
call
nop
add
push
cmp
lret
jbe
dec
sub
pusha
scas
pop
pusha
gs
mov
pusha
loopne
clc
push
js
repnz
add
xorl
fsubrs
jp
push
jle
and
fldl2t
lcall
testb
fwait
sti
xchg
mov
mov
in
mov
loopne
mov
lea
xchg
cmc
xchg
push
les
add
pop
xor
cs
scas
pop
add
pop
jo
and
daa
lcall
xchg
jne
stc
dec
je
divl
cmp
jb
jns
cmpsl
push
lods
je
popa
outsb
xorl
mov
mov
pop
mov
ja,pt
cmp
jmp
clc
sbb
and
subl
cmpsb
and
fisttpl
or
sub
and
dec
pop
out
loop
sub
mov
pop
loopne
in
js
or
mov
lret
mov
xorl
aad
insb
mov
into
fstpl
jb
push
std
repz
cwtl
jns
mov
sbb
mov
or
push
ja
sbb
push
add
push
pop
and
adc
sti
ja
sbb
repz
or
jo
push
xchg
and
mov
hlt
jbe
pop
insb
cmp
repnz
movsb
out
add
cmp
ss
js
jno
jge
test
adcl
repnz
in
stos
in
hlt
xchg
push
jb
test
outsb
outsb
add
or
xlat
nop
fdivrs
xchg
jp
cmp
cltd
and
into
mov
lods
mov
cmp
inc
xor
dec
adc
fadd
push
ja
mov
fdivl
cmp
xchg
out
lcall
mov
loopne
mov
sub
ja
mov
mov
add
adc
das
jle
aam
dec
addr16
aas
adc
daa
jg
sti
ljmp
mov
add
into
mov
jmp
push
pop
xor
out
push
aas
cmp
pusha
cld
cld
gs
cmp
cmpsb
add
into
dec
pop
xchg
outsl
mov
lds
mov
das
inc
add
cmp
xor
push
mov
out
sub
dec
ret
mov
push
xor
mov
nop
push
loopne
cmp
cmp
sti
test
lods
xor
add
sbb
xchg
inc
xchg
lret
ret
scas
inc
adc
cmp
je
inc
mov
rcrb
jmp
call
add
xchg
outsb
push
rcl
rol
jo
xchg
fidivrs
mov
aad
cld
mov
sub
lods
int
cmp
push
lds
aaa
xlat
xchg
out
cmpsl
popf
xchg
cli
pusha
inc
inc
mov
loopne
movb
test
cmpsb
fs
xchg
or
das
imul
mov
pop
stos
js
sub
mov
xchg
mov
push
fistl
or
fildl
aaa
jnp
cmc
in
loopne
push
insl
push
or
sbb
or
cmp
sbb
lods
dec
cli
gs
movsb
inc
push
jp
nop
add
sub
push
pop
xor
les
insb
cmp
out
mov
jge
insb
sub
pop
push
and
jae
in
pop
shr
push
add
fimull
xchg
push
add
mov
cwtl
push
incb
adc
fiadds
inc
xor
popf
xchg
mov
and
les
mov
jno
jp
cmp
iret
aad
dec
ds
repnz
sub
addl
int
je
and
xchg
push
cmpsb
dec
into
stos
mov
adc
jle
jnp
test
add
aad
mov
addr16
mov
push
mov
fsubrl
mov
jmp
pop
jb
mov
xor
es
and
popf
loope
loope
shl
jg
fistpl
xchg
ffree
daa
mov
jg
ljmp
and
pop
push
sbb
and
test
int
dec
mov
or
mov
sub
xchg
cmpb
pop
mov
ss
xor
addr16
mov
mov
xlat
or
mov
js
cmc
dec
call
mov
sti
stos
sbb
mov
mov
aad
mov
push
sub
push
gs
in
addr16
stc
cmp
fsubrs
mov
je
lahf
pop
lahf
xor
xchg
add
sub
sub
jg
adc
jge
sbb
pop
xchg
inc
fmuls
mov
dec
xor
rcll
xchg
mov
pop
xor
test
jp
mov
mov
cmp
insb
mov
dec
dec
lcall
xorb
fbld
sub
mov
mov
xlat
sub
jno
and
jp
pop
mov
lea
mov
push
mov
push
sbb
shlb
popf
clc
or
addr16
cltd
sbb
cmc
enter
fdivr
scas
pushf
repnz
ljmp
jmp
adc
mov
jmp
push
mov
dec
andb
and
pop
add
ja
call
or
in
rolb
or
jne
sub
push
xchg
sub
xor
xchg
in
push
out
in
in
jl
jl
xchg
inc
cld
lods
or
fs
inc
popa
pop
sarb
xlat
cmpl
push
mov
mov
adc
stc
mov
cmpsl
sbb
and
sti
cmc
stos
outsl
sub
push
lret
pushf
fildll
mov
stos
insl
test
pop
and
and
fstpt
cmp
ret
bound
xor
adc
icebp
into
xor
jne
insl
add
cltd
mov
idivl
or
inc
aam
inc
xor
nop
mov
push
mov
mov
mov
gs
call
sti
addb
out
jne
loopne
sbbb
jbe
or
xchg
dec
sarl
int3
cld
mov
or
push
sbb
lahf
test
in
fidivl
lret
ret
fdivl
inc
iret
cmpsb
cmc
cli
int
out
pusha
enter
add
aas
shll
jno
xor
les
rorl
out
xor
adc
mov
xchg
lea
pop
jp
subb
mov
orl
add
scas
mov
sub
in
jmp
shll
mov
out
mov
adc
jns
cmp
loope
jp
xor
push
push
sti
sbb
or
xor
sub
and
aas
add
adcl
fisttps
outsb
mov
push
pop
mov
dec
xchg
mov
imul
mov
sbb
xlat
lret
pop
aam
adc
scas
lret
push
xlat
test
fs
push
xor
inc
sbb
pushf
icebp
pop
adc
mov
aad
jecxz
ret
js
ret
test
in
rclb
lods
xchg
loope,pt
and
stc
repz
mov
cmp
pop
frstor
loopne
jge
inc
inc
mov
rolb
idiv
fs
imul
push
sub
rorl
jp
mov
imul
xor
mov
xchg
lods
into
in
cmp
inc
jmp
out
xchg
mov
stos
frstor
movsb
mov
jg
mov
stos
dec
lods
mov
jb
mov
inc
jo
stc
shl
xchg
xchg
cs
or
push
fidivl
cs
jmp
pop
mov
insl
es
divl
decl
fldl
xor
mov
fnstenv
mov
dec
push
xor
dec
cmp
jno
orb
icebp
inc
sub
or
cmp
shlb
fidivl
push
push
xchg
xor
leave
jo
push
rep
sbb
enter
out
lea
hlt
sub
das
shll
rcrl
stos
call
pop
jb
sbb
cmp
or
and
pop
push
ds
inc
push
pop
aad
mov
aad
test
imul
aam
and
mov
jecxz
nop
mov
or
movsl
popa
arpl
pusha
xor
fstl
pop
xchg
mov
pop
test
cltd
ja
call
sbb
sbb
insb
mov
test
inc
adc
aam
jo
dec
xchg
cmc
adc
stc
mov
xchg
jecxz
out
je
mov
mov
popf
addl
pop
jl
insl
sbb
sub
shlb
sub
adc
xchg
xlat
jecxz
mov
xchg
ret
iret
in
repz
fmull
repnz
rcrb
mov
pop
jae
mov
adc
inc
or
flds
in
cltd
ja
and
xchg
nop
xchg
push
mov
repnz
add
icebp
iret
mov
ljmp
mov
xchg
lods
outsl
or
sub
inc
push
mov
stos
mov
mov
push
cmpsl
rcr
adcl
fildll
dec
jecxz
lret
movl
lahf
fstps
push
xor
dec
in
mov
ljmp
ljmp
xchg
loopne
dec
ja
insl
sbb
sbb
mov
sbb
addr16
pop
addr16
push
repz
lcall
mov
fdivs
pop
loope
inc
and
fcompl
mov
push
leave
loope
cltd
sbb
jns
insl
or
or
xchg
test
push
arpl
leave
push
sbb
daa
adc
les
lods
sarl
jmp
push
pop
nop
and
aam
cmp
sub
xlat
xchg
mov
pop
push
daa
movsb
je
add
outsb
jae
xor
dec
stc
mov
dec
cmpb
lret
or
or
mov
mov
jle
shr
mov
or
adc
xchg
mov
mov
in
push
insl
pop
subb
das
fcmovnu
mov
add
dec
add
adc
daa
xchg
loopne
adc
iret
mov
notb
fcmovbe
xchg
sub
dec
enter
jl
xlat
aam
lcall
inc
add
enter
push
xchg
push
ds
lods
lahf
daa
ljmp
and
mov
adc
movsl
test
jae
fistpll
cwtl
mov
mov
lock
adc
scas
sub
jl
and
test
mov
sub
aad
lods
mov
sub
or
int
mov
and
pop
sub
xchg
and
cmpl
or
dec
cs
xchg
outsb
inc
adc
add
or
cmpsl
jmp
pop
mov
pop
ja
fsubrs
dec
je
cmpsb
sub
imul
lea
mov
mov
pop
mov
mov
ret
aad
sbb
jae
inc
mov
xor
xorb
icebp
jl
nop
sub
xchg
mov
insb
inc
xor
cli
psrlq
pop
js
outsb
nop
push
shl
mov
out
cmp
sub
add
lahf
mov
jae
jp
sbb
adc
pop
ja
xlat
mov
leave
out
xchg
and
popa
push
add
mov
cmp
in
and
rcrl
sub
xchg
mov
pop
pop
mov
dec
cwtl
out
xor
clc
shl
mov
rolb
insl
xchg
les
mov
xor
xacquire
lahf
adc
sbb
dec
orl
fcmovb
mov
pop
lock
or
jge
mov
addr16
outsb
push
loopne
aas
test
inc
mov
sbb
mov
fdivr
test
dec
push
xor
fmul
out
sbb
lret
outsl
inc
pushf
insl
cs
cmp
iret
mov
add
fstps
push
fists
jle
cmpl
mov
iret
push
pop
repz
mov
and
aaa
adc
mov
addr16
aaa
nop
mov
add
cmpsl
and
faddl
or
push
mov
mov
pusha
test
stos
dec
repnz
pop
ja
pop
fwait
int
lahf
insl
ja
inc
push
shl
fbstp
and
push
adc
push
sbbl
mov
xchg
arpl
lock
jg
sub
fcmove
cmpsl
adc
and
sti
and
scas
les
movsl
pop
lock
in
pusha
push
out
or
mov
jbe
xor
mov
jl,pn
shrl
movsl
add
fistpl
ret
cmp
roll
dec
in
cmp
adc
and
pop
iret
xchg
xchg
sub
sbb
xchg
and
mov
sub
cld
mov
xor
loope
imul
mov
ja
xor
out
adc
pop
xor
jae
cmp
dec
jnp
ret
push
in
adc
in
or
pop
dec
add
popf
and
or
bound
mov
mov
inc
push
cwtl
sbb
sarb
cltd
push
into
ja
cmp
mov
mov
lret
popa
pusha
inc
lea
inc
gs
jnp
mov
lcall
xchg
cmp
xchg
in
in
and
bnd
cs
into
aad
xor
pop
push
out
repz
pop
pusha
out
mov
fistpll
out
gs
ja
jbe
cld
jmp
loopne
sbb
gs
ds
dec
out
pop
inc
mov
roll
xor
push
addr16
inc
aam
icebp
sub
add
cmp
mov
mov
add
ds
mov
inc
test
popf
decl
xchg
mov
inc
mov
sub
mov
mov
and
sbb
and
or
add
mov
hlt
lock
mov
fiadds
push
ja
outsl
lcall
mov
lahf
mov
out
push
adc
xchg
imul
adc
push
mov
movsb
mov
out
push
pop
and
cmp
cwtl
adc
subb
mov
rorl
test
jns
mov
jge
repz
roll
test
sub
adc
mov
int
push
inc
stos
and
push
push
loopne
mov
stos
or
pop
popa
sub
jp
jge
test
into
mov
add
rcrb
ds
adc
mov
adc
stos
xor
enter
mov
pop
mov
inc
sti
inc
outsb
mov
mov
jbe
mov
mov
cmp
jno
dec
imul
sbb
mov
push
mov
insb
imul
jns
clc
push
test
leave
je
dec
add
shrb
mov
fidivrl
cli
sbb
popf
dec
push
pop
ljmp
and
and
loopne
leave
imul
xor
sbb
scas
mov
mov
xor
xchg
and
aam
adcb
clc
sbb
lds
negl
cmp
xor
push
mov
outsb
outsb
mov
push
sahf
xchg
adc
inc
sbb
mov
inc
mov
lds
add
xor
fwait
stc
jle
nop
or
bound
push
mov
shll
addr16
cmpsb
xchg
icebp
shrb
cltd
xchg
add
sarb
cwtl
out
xor
fucomip
pop
rorb
movsl
inc
movsb
push
cmc
rol
arpl
rcrl
xchg
lea
sbb
subb
dec
jns
dec
test
sbb
cltd
loop
add
push
inc
and
push
jae
cmp
push
push
fwait
sahf
fisttpl
pop
mov
pop
std
sub
pop
jne
incl
jbe
jecxz
mov
cmp
mov
int3
adcl
sub
and
cmp
adcl
jmp
inc
add
add
mov
movsl
sub
mov
inc
and
push
lock
shl
ret
ja
jnp
hlt
push
shrb
sbb
xchg
and
add
jmp
out
lret
aas
and
push
scas
lods
lock
xor
stos
rorl
push
ret
pop
or
into
cltd
out
lahf
stos
out
pop
enter
jle
sub
pop
sbb
push
push
out
push
adc
movsl
mov
xchg
jnp
sbb
push
sub
popf
stc
dec
mov
mov
dec
mov
mulb
rcll
cmp
push
lcall
mov
mov
add
pop
andl
push
js
sarl
movsb
push
aas
or
mov
sub
pop
sbb
jns
in
jne
jp
mov
pusha
cmp
sub
add
pop
aas
aaa
andb
xorl
push
stc
cmpsl
mov
movb
mov
testl
jo
pop
nop
lret
mov
pop
cmp
mov
sub
adc
in
xchg
insb
adc
out
push
imul
clc
insl
mov
sbb
or
inc
jns
rcrb
mov
outsl
push
shlb
inc
add
adc
imul
cmc
call
int
stos
or
dec
or
arpl
dec
lods
das
fs
mov
or
cmp
les
test
jns
movsb
and
test
shll
jmp
xchg
sar
add
or
lcall
adc
cli
iret
sub
mov
mov
in
sarl
mov
pop
stos
pop
ret
leave
jb
jbe
dec
mov
addl
cmp
dec
arpl
sti
push
scas
fcompl
shlb
push
mov
mov
shll
into
cld
mov
stos
jle
pop
xor
xor
nop
and
int3
rcll
aas
fwait
mov
fbld
pop
add
negl
adc
es
mov
add
push
repnz
ja
adc
aaa
repz
mov
sbb
xor
xlat
pusha
xchg
popf
arpl
pop
addl
call
cmc
push
dec
and
xor
int
shrb
in
sbb
aas
pop
repnz
imul
das
xorl
insl
bound
loopne
lahf
jae
push
xor
jns
xor
enter
cmp
xorb
sarb
or
and
rolb
out
test
mov
inc
inc
xchg
jge
out
mov
add
mov
sti
fcmovnu
pop
loopne
xchg
fcmovbe
or
imul
out
mov
loopne
jl
out
lods
and
popa
pop
add
mov
add
or
xlat
das
xor
jp
movl
and
adc
mov
rcll
dec
cmpsl
cmpsl
gs
pusha
dec
outsb
rcrl
or
ja
movsl
and
shr
jne
fsubrp
cmc
pop
jl
bound
out
aad
test
movl
add
fiadds
icebp
or
mov
mov
inc
mov
xor
xor
lock
test
fwait
bound
iret
or
or
jns
sub
cwtl
fsubrl
sbb
sbb
inc
fidivrl
push
scas
mov
push
aas
push
xorb
cld
mov
sub
xor
xchg
dec
repz
xchg
mov
pop
insb
sbb
test
mov
xor
cli
mov
loop
xorb
insl
xchg
jmp
mov
out
xorps
sbb
call
adc
cmp
dec
bound
mov
xor
dec
lcall
cli
jae
cli
cmp
mov
pushf
push
stos
mov
inc
pop
arpl
mov
mov
ret
sub
clc
fisttpll
in
jno
xchg
and
aad
dec
fmull
stc
es
dec
adc
shll
push
and
cmpsl
xlat
and
in
je
icebp
ljmp
adc
jl
xchg
icebp
mov
inc
fs
movsl
popa
sbb
insl
jge
and
push
jno
lea
jnp
and
cmp
xor
decl
jo
aas
add
and
out
push
push
jmp
mov
pusha
pusha
fildl
sbb
dec
nop
icebp
mov
sub
add
add
and
pop
jb
xchg
jg
aad
xchg
jns
pop
test
sub
mov
cmc
sbb
pop
mov
insb
addr16
push
fldt
mov
or
xor
inc
mov
inc
rcll
or
popf
or
dec
es
xor
lret
xor
adc
rclb
jmp
cmp
aad
rcr
ret
or
scas
inc
stc
imul
pop
xchg
and
loope
les
inc
mov
imul
clc
cmpsl
mov
and
cld
gs
dec
mov
rclb
xor
and
mov
and
pmuludq
push
cltd
aad
leave
push
cmp
divb
jecxz
das
cwtl
aam
push
icebp
daa
nop
sbb
fidivrs
mov
loop
push
add
addr16
mov
jnp
pop
aam
nop
mov
loopne
mov
or
xor
and
out
subb
or
mov
inc
repz
jle
movsl
cmp
xchg
mov
jno
or
xchg
and
dec
and
push
and
xorb
jl
pop
mov
in
rep
xchg
jnp
jle
mov
imul
popa
mov
ss
xchg
fmuls
inc
inc
hlt
iret
mov
mov
pop
clc
xchg
int3
lock
sub
mov
js
cmp
arpl
mov
jmp
idiv
outsb
iret
and
iret
stos
adc
cltd
fsubp
arpl
outsl
lret
bound
sbb
cmp
insb
sbb
mov
lea
addr16
cltd
sarl
lock
call
mov
repnz
pop
insb
fsubrl
xchg
idivl
or
mov
in
cli
lods
xchg
cld
jl
or
fldt
out
enter
idiv
xor
es
int3
test
xchg
repz
fisttpl
xchg
mov
sbb
scas
adc
adc
xor
sbb
mov
movsb
jne
push
jno
cld
aad
fidivl
jg
aad
sub
and
lock
int
pop
add
pop
icebp
addr16
and
cld
or
mov
insl
clc
cmp
pusha
jbe
mov
rcrb
jmp
mov
dec
movb
call
cmp
mov
pushf
sbb
dec
push
jbe
pop
mov
sbb
arpl
inc
cmp
jns
in
jo
sub
movsl
adc
xchg
je
jmp
dec
into
gs
lret
std
sti
js
inc
enter
sti
mov
loop
ror
cs
rorb
icebp
ret
fld1
xchg
addr16
out
add
pop
and
arpl
fsubrs
sub
fstl
inc
loopne
cltd
fmull
ds
push
mov
lret
or
mov
mov
jns,pt
mov
ret
fs
out
xlat
lcall
std
adc
sub
je
mul
movsl
outsb
cmp
sbb
pop
jecxz
cmc
popf
out
pop
ljmp
cli
ja
loopne
pop
shlb
cmp
lahf
pop
in
fwait
and
lock
ljmp
scas
sbb
rorl
out
imul
push
push
leave
or
les
adc
cmp
jns
test
dec
mov
ror
stos
pop
inc
and
clc
hlt
lcall
xor
and
fistl
scas
cltd
jecxz
movsl
iret
adc
or
mov
addb
or
add
in
ljmp
mov
push
xorb
jmp
sbb
cmc
pop
arpl
outsl
push
leave
sbb
xlat
xchg
sti
inc
push
fcompl
sahf
lret
mov
sahf
push
pop
js
rolb
stc
fdivrs
xorl
testb
rolb
push
ret
cli
pop
inc
cltd
push
shll
sub
cmp
jl
jo
inc
sbb
add
dec
xchg
push
outsb
mov
mov
push
sbb
xchg
mov
rclb
stc
insl
sub
dec
pusha
dec
add
testl
jae
adc
cmpb
cmp
addr16
lahf
or
mov
mov
and
mov
sub
mov
movsl
iret
imul
loope
sub
stos
sbb
pop
data16
sub
xchg
int3
loopne
insb
repz
push
inc
out
rcrl
mov
in
push
and
push
or
rol
mov
jl
cmpb
jp
pusha
or
or
ja
pushf
cltd
mov
sub
cmp
dec
scas
pop
and
and
sti
xor
dec
pop
cmpsb
jg
stos
dec
outsb
and
std
dec
inc
in
mov
or
pop
xchg
mov
mov
add
mov
les
mov
cs
xchg
and
fists
sbb
xor
adc
sub
mov
jp
pop
fiadds
cwtl
loopne
mov
faddl
pop
mov
or
dec
or
add
mov
jb
aad
mov
jge
sub
dec
shlb
aad
adc
loope
mov
faddl
lret
in
jbe
shll
mov
xor
outsb
movsl
inc
jp
test
cmpsl
jecxz,pn
testb
adc
lahf
push
sarb
push
hlt
test
cli
orl
repz
push
push
and
adc
lock
ja
out
into
sub
and
cmp
adc
push
xlat
jns
add
cs
int3
xor
pop
mov
loopne
xor
inc
pop
mov
in
pop
or
xchg
lea
fisttps
mov
popf
lret
dec
adcb
mov
mov
and
js
out
je
push
sub
shlb
adc
pop
dec
cs
shlb
jno
in
rorl
sbb
mov
fisubrs
dec
leave
es
push
mov
or
es
ja
loop
push
sbb
test
sub
scas
cmpsl
andb
mov
inc
lods
push
jno
mov
push
popa
fwait
dec
adc
push
cmp
gs
cwtl
es
xchg
xorb
jno
xor
dec
cmp
pusha
sub
mulb
subb
xchg
hlt
add
mov
imul
jecxz
popa
clc
xchg
rcrb
push
dec
je
mov
or
pop
sbb
test
lcall
out
fs
insl
mov
mov
xor
cmp
aam
dec
pop
sub
mov
out
jbe
addr16
adc
sbbl
push
shrb
jns
out
data16
xor
int3
jb
outsb
stos
xor
xor
inc
out
int
xchg
push
pop
adc
push
sbb
fimuls
gs
mov
adc
push
scas
dec
mov
pusha
lea
dec
fistpll
jl
xchg
mov
sub
test
rorl
mov
adc
mov
loop
inc
hlt
inc
mov
sub
pop
mov
push
fisubrl
jmp
out
and
mov
mov
sub
mov
out
int3
cmp
dec
cmp
or
push
add
lock
das
xor
xchg
jb
mov
gs
loopne
test
loop
inc
push
sub
mov
lock
call
aam
stc
push
aas
mov
adc
push
pop
sahf
dec
adc
in
ret
filds
cmp
pop
xchg
mov
mov
divl
fmull
ss
jne
mov
xor
pop
xchg
sti
decb
dec
push
nop
cwtl
jge
test
sarb
fiadds
ja
add
xchg
add
lods
mov
dec
mov
adc
sbb
inc
shrl
pop
stos
aad
mov
cmp
dec
jns
push
in
dec
stc
cli
lret
cs
sub
xchg
pop
adc
jns
ficoms
inc
push
adc
popa
out
xor
es
jbe
sub
inc
mov
sub
xor
xor
sub
insl
mov
out
sub
hlt
mov
ror
data16
push
dec
pop
or
push
push
and
ljmp
stos
popa
pop
clc
ficoml
aaa
scas
jmp
lock
inc
stos
mov
mov
xor
mov
cmp
jmp
stc
jae
and
push
in
adc
push
pop
lea
jge
ret
jb
stos
pop
inc
and
jl
cmpsl
js
lret
fnstsw
int
loopne
imul
push
sbb
pop
mov
push
clc
std
push
testl
lds
lret
out
ljmp
sub
aaa
rorl
fbld
dec
sub
sbb
movsl
jne
data16
icebp
in
in
adc
stc
pop
insb
mov
mov
icebp
sahf
popf
adc
pop
je
cli
arpl
mov
scas
and
sar
loopne
mov
pop
outsl
pop
adc
dec
sub
clc
movsb
js
sarl
das
inc
inc
sbb
dec
out
jb
xchg
out
sub
pop
mov
sarl
and
mov
or
mov
dec
adc
mov
out
push
popa
int3
fwait
sbb
sbbl
jno
jbe
pop
je
pushf
xchg
cmp
mov
shr
sarb
or
ficoms
mov
push
pop
fcmovnb
inc
cs
mov
into
cmp
cltd
mov
aas
jp
cmc
and
jbe
negl
sti
in
xchg
loop
add
out
lods
fstl
aam
test
push
mov
sub
enter
push
les
gs
lret
ss
fisubl
lret
data16
push
inc
adc
xchg
cmp
xchg
lea
aas
pop
subl
fs
add
mov
fistpl
cmpsb
js
cmp
rcll
push
rolb
mov
into
lods
call
and
mov
pop
mov
popa
or
fucomip
loope
mov
fs
dec
imul
sub
lret
pop
icebp
hlt
jnp
and
mov
aaa
pop
scas
out
fwait
push
sbb
sbbb
outsb
cmpsl
cmc
js
clc
outsl
das
sub
add
sarb
dec
lods
push
sbb
inc
in
shrl
xchg
cwtl
jnp
xchg
push
in
aad
arpl
ds
jbe
sub
xor
outsl
fdivrs
std
adc
mov
pop
nop
cmpl
callw
rorl
in
pop
cltd
jnp
in
cmp
ds
mov
sbb
cmpsb
pop
push
imul
aaa
pop
iret
mov
and
test
ss
cmc
pop
jl
jmp
or
and
repz
adcl
jmp
xlat
push
and
jnp
jno
fmuls
mov
data16
loop
push
cmpsl
push
push
iret
nop
xchg
in
inc
addb
daa
sub
dec
adcb
enter
and
cltd
pop
les
and
mov
xchg
lods
fldln2
xor
mov
mov
test
mov
incl
sbb
cmp
aad
into
fnstsw
mov
sahf
ror
scas
push
lock
cmp
mov
add
adc
in
sbb
jno
sbb
adc
aaa
pop
js
je
js
sbb
push
stos
jle,pt
sbb
or
push
cmp
stos
xchg
sbb
movsb
mov
mov
testl
or
jg
mov
dec
fcomip
xchg
jp
cmc
mov
es
lds
cmc
dec
adc
decl
jl
in
adc
cmp
mov
std
hlt
out
fbstp
popf
pop
shlb
xchg
and
imul
pop
jb
insl
cmp
test
dec
loopne
rcrl
int
leave
jge
push
jae
mov
inc
sbb
add
pop
mov
loope
lock
mov
mov
ss
dec
aas
in
jns
lods
xor
xchg
bound
fildl
movsb
lret
xchg
rcrb
xchg
xorl
and
pop
fdivp
dec
xor
int
pop
ja
stos
js
aaa
mov
mov
xchg
sbb
cli
popf
xor
add
jno
jp
pop
sti
jg
neg
sub
pop
int3
in
adc
push
pop
jecxz
dec
pop
pop
rcll
fwait
pop
insl
sbbb
aaa
xor
xchg
subl
nop
sbb
sub
flds
add
push
faddl
in
clc
pop
leave
dec
push
ljmp
movsl
neg
les
and
test
out
xchg
xor
xchg
ds
test
dec
dec
in
mov
aad
pop
andb
stos
in
push
cmpsl
in
mov
in
loopne
out
lods
loop
push
lods
inc
mov
dec
or
sub
mov
loopne
push
xor
inc
lret
or
cmpsb
add
sti
sbb
mov
shrb
ljmp
int3
adc
or
fstpt
lret
jo
xchg
jecxz
xchg
mov
lret
cmp
fnstenv
cmp
mov
push
lods
pop
dec
jl
pop
andb
aam
jecxz
imul
xor
push
mov
inc
cld
stos
xchg
aam
dec
lock
test
push
jnp
gs
aas
cmc
test
mov
mov
push
add
mov
adc
movsl
sbb
xor
aam
outsb
test
arpl
lcall
cltd
rcrb
mov
and
jle
sub
ret
andb
out
cmp
ret
cmpsb
dec
aam
jnp
push
ljmp
cmp
inc
push
fdivrl
and
lret
sbbb
stos
mov
out
std
jecxz
movsl
xor
and
jae
cmpl
pop
fucomip
push
mov
xor
repnz
and
or
cli
adc
adc
mov
xchg
jns
inc
rcll
cmp
push
pop
int
and
sbb
lds
fnstcw
sbb
ss
push
es
pop
mov
orb
cmp
gs
out
push
sbb
mov
loopne
and
mov
dec
lret
mov
xchg
dec
sub
jne
mov
aad
sti
repnz
mov
jnp
cltd
cmpb
pop
aas
cmp
xor
dec
jge
out
fldl
push
push
or
push
ret
jno
mov
fdivl
add
mov
add
adc
dec
aas
lds
js
cmp
mov
ror
testl
in
mov
repnz
mov
arpl
sahf
in
rcl
pop
mov
outsl
addr16
clc
dec
adc
pop
sub
inc
inc
pop
and
push
sti
fnstsw
aam
adc
xorl
dec
out
add
out
cmpsb
stos
or
loope
add
faddl
sar
xchg
xchg
add
jecxz
in
adc
jne
jno
xchg
add
jae
aaa
ficoms
jb
arpl
and
sti
push
and
bound
notb
stos
mov
data16
jns
jecxz
xor
mov
and
sub
adc
je
and
rcl
out
arpl
adc
adc
sub
inc
pop
mov
nop
mov
inc
or
icebp
mov
iret
jl
xchg
in
daa
dec
incl
out
pop
ss
imul
icebp
lret
imul
inc
or
scas
xor
sbb
mov
adc
jbe
notb
shrd
jmp
ljmp
stos
sbb
imul
adc
push
iret
mov
ret
xor
mov
lcall
mov
inc
sti
repz
cmp
push
cmp
stc
dec
and
sub
and
sub
adc
jecxz
enter
xor
jg
shrl
pusha
jg
sbb
xor
push
iret
out
xor
or
inc
enter
out
push
shl
mov
lods
cmp
insl
movsw
lea
xchg
xor
mov
into
rorl
jo
in
jmp
adc
sbb
jno
or
aas
stc
push
mov
in
inc
ret
push
icebp
add
mov
push
sbb
xchg
daa
scas
outsl
outsl
pop
clc
mov
scas
mov
jbe
fcomi
in
jne
insl
ret
jl
inc
enter
addr16
inc
fs
pop
push
or
mov
mov
jno
enter
add
sub
call
imul
dec
mov
xor
jmp
xlat
shlb
dec
repnz
add
mov
xlat
ret
cmpsb
in
push
cli
ja
imulb
dec
mov
popf
mov
popf
enter
sub
loop
scas
or
dec
dec
push
xchg
cmpsl
sti
fchs
push
notl
in
pusha
xor
inc
and
fst
push
jg
mov
jo
add
int3
and
es
int
push
cwtl
dec
push
outsb
sub
pop
or
out
repz
add
mov
scas
shl
loop
fsubs
mov
sbb
out
or
push
lahf
dec
xor
aas
inc
imul
mov
mov
punpckhqdq
xor
call
sbb
dec
add
dec
repz
arpl
aam
sbb
jl
mov
or
mov
jns
sbb
push
addr16
fadds
mov
cwtl
adc
dec
sub
mov
sbb
in
cli
dec
mov
mov
clc
mov
icebp
rol
pop
fdivrl
data16
mov
push
imul
add
mov
push
push
icebp
mov
fldenv
lea
adc
sbb
and
jnp
jmp
stos
xchg
sbb
mov
sti
incb
jmp
or
dec
cmpsl
xchg
dec
inc
inc
jo
icebp
mov
add
push
fisubrl
and
mov
pop
jl
and
sub
movsl
xor
cmp
cmp
test
push
lret
adc
jno
je
lods
mov
cld
mov
fwait
jb
pop
jge
mull
pop
lcall
addr16
lds
lahf
scas
es
insb
dec
test
jecxz
mov
xor
lods
call
sti
rcl
insb
jge
cmpsb
fwait
arpl
jl
xchg
cmpsl
lock
pushf
popa
ss
add
mov
popf
or
lods
insb
xor
dec
inc
scas
sbbb
je
sbb
movsl
or
shl
pusha
fidivrs
adc
mov
js
outsb
mov
mov
and
push
add
mov
lret
or
cld
add
and
cltd
inc
or
cs
cmpsb
xor
and
push
ss
insl
xor
iret
cmc
cwtl
popa
jae
xchg
adc
push
mov
xchg
repz
pop
jne
cmpsl
icebp
pushf
xor
push
mov
outsb
mov
jmp
insl
jmp
fimull
cmp
pop
or
ds
cwtl
in
testw
push
ljmp
xchg
jle
roll
add
mov
xchg
nop
inc
lock
cli
xchg
xchg
adc
inc
push
sti
rorl
dec
mov
and
or
mov
or
scas
popf
xchg
push
std
stos
std
xor
xchg
imul
mov
es
push
clc
inc
in
in
ffree
js
stos
leave
outsl
movsl
sub
dec
cmovge
ja
enter
imul
aaa
mov
xor
adc
std
enter
sbb
loope
cmp
imul
test
cmp
repz
mov
xor
xor
push
aaa
fsubrs
test
ret
icebp
int3
pop
sbb
adc
mov
test
add
xchg
pushf
mov
out
jmp
out
dec
aas
in
push
dec
add
fisubl
sub
sbb
push
lcall
or
je
pop
add
clc
push
stos
jb
jae
mov
mov
ljmp
jns
outsb
or
mov
ss
pushl
sbb
les
imulb
loopne
mov
push
push
push
cmc
add
or
aas
inc
add
xchg
mov
cmp
roll
stos
xchg
rcrb
push
pop
shl
dec
ja
imulb
pop
je
sub
je
jae
into
mov
repz
jg
ljmp
adc
mov
mov
arpl
in
pop
inc
sbbl
adc
mov
mov
repz
pop
dec
iret
mov
jnp
push
and
ja
call
sbb
push
xchg
xor
xlat
lods
push
fisubrl
push
repnz
test
sbb
bound
xor
stos
mov
clc
mov
or
mov
xor
fdivrs
testl
inc
loop
or
shl
out
nop
dec
mov
pusha
stos
adc
daa
rcll
xor
xchg
imul
out
rcll
pop
dec
push
xchg
cmp
insb
or
sbb
sbb
sub
cmpb
aad
mov
dec
jge
push
and
inc
mov
mov
stc
jle
aam
mov
imul
movsl
ljmp
or
lea
gs
popf
inc
push
xlat
cmp
adc
and
fidivl
fstps
scas
push
mov
mov
test
lret
mov
daa
int3
jnp
js
arpl
add
dec
and
and
push
add
xchg
pop
stos
clc
jecxz
int3
loop
or
dec
mov
call
aas
adc
and
aam
shrb
xlat
xorb
cmpl
aaa
mov
pop
adc
push
mov
pop
xor
inc
rcrb
daa
in
xchg
neg
xchg
sub
aas
div
jmp
in
adc
mov
out
mov
xchg
clc
mov
dec
adc
dec
mov
push
xchg
xor
sub
rorl
xlat
or
sbb
push
shrb
mov
lds
mov
icebp
je
push
dec
pop
int3
cli
iret
arpl
jg
lock
js
sub
imul
outsl
rcrb
movsb
sbb
pop
cmp
dec
mov
sub
loope
mov
imul
push
ficoms
and
lcall
dec
xchg
and
out
adc
jmp
popa
aaa
sub
mov
adc
aam
add
cmp
enter
xchg
sbb
xchg
pop
inc
rcll
pushl
ret
dec
jb
stos
xor
ds
sbb
lock
and
adc
and
push
loop
aam
sbb
xor
pop
popf
and
jno
adc
cmp
sub
pop
sub
jae
adc
aad
out
daa
mov
pop
iret
lea
fisubs
out
push
jl
sub
xor
and
fwait
je
es
xor
mov
jp
sbb
inc
fwait
mov
ja
test
test
pop
xchg
fimull
jae
dec
dec
push
iret
xchg
jmp
loopne
pop
pop
cli
mov
cmp
adc
mov
inc
lcall
ss
cld
mov
adc
mov
add
sti
test
inc
mov
inc
mov
loop
sbb
bnd
in
jae
push
scas
jecxz
in
in
int
sub
cltd
xchg
repnz
mov
pop
vmwrite
inc
dec
rcrb
fisubl
jecxz
mov
sbb
push
push
sbb
cmp
dec
xlat
ds
jo
jne
mov
loope
mov
push
movsl
jp
pop
xchg
cmovo
ficompl
pop
nop
pop
out
fs
pop
push
xchg
out
in
adc
ret
scas
fs
sub
test
lods
add
sahf
mov
fadd
lret
mov
dec
inc
cs
and
clc
popf
cld
test
rcrl
jl
sti
sbb
or
push
push
rcl
sub
mov
or
loopne
out
sub
inc
dec
insl
enter
sbb
out
mov
mov
aam
bound
lahf
push
fcomip
lret
cmpsl
xor
iret
or
jae
out
mov
or
flds
pop
jecxz
fisubrl
sbb
add
fidivl
mov
and
cmp
dec
sub
in
mov
xchg
mov
rdmsr
or
lods
push
loop
mov
bswap
adc
stc
stc
rorl
inc
cmp
std
pop
lea
mov
jle
inc
push
mov
push
xchg
loop
mov
test
pop
and
add
outsl
adc
push
sbb
mov
or
xor
in
push
outsb
pop
xorb
mov
mov
in
ds
das
inc
daa
inc
movl
insl
mov
jb
aam
mov
mov
mov
bound
mov
mov
jle
imul
pop
push
fwait
mov
data16
cmp
ja
jns
sbb
imul
xchg
mov
cwtl
insb
fdivl
pop
jae
adc
dec
dec
xor
or
pop
cmc
mov
cld
or
icebp
mov
outsl
jl
iret
mov
jnp
mov
jnp
dec
popa
sbb
negb
test
out
lahf
lcall
push
push
fs
enter
mov
arpl
inc
js
mov
sub
loop
rep
test
mov
dec
dec
das
sbb
out
pop
fmuls
mov
xor
dec
je
in
leave
sbb
sub
jecxz
xorl
xor
pusha
push
sbb
pop
ffree
stos
push
sbb
sbb
insl
sub
and
sub
mov
jge
or
jg
inc
lods
ret
sbb
aam
out
sahf
movsl
sbb
xchg
pop
xchg
mov
negl
pop
cmp
xchg
fldenv
jne
jle
sub
pop
add
jne
scas
jbe
stc
pop
lcall
adc
shrb
movl
daa
popa
xchg
mov
xchg
mov
mov
jno
or
imul
inc
xchg
es
ret
in
pop
gs
xor
mov
cltd
clc
sbbb
and
add
push
fistpl
mov
loop
push
cmp
dec
adc
out
sub
jle
xchg
aas
adc
sahf
push
jmp
out
mov
cs
mov
xlat
jns
clc
es
mov
pop
stc
sub
or
cmp
mov
mov
jmp
add
aam
iret
xor
cld
cmp
lock
mov
std
push
out
lret
inc
pop
push
icebp
cwtl
inc
mov
pop
dec
notb
or
leave
inc
cmp
sbb
rorl
int3
bound
in
mov
lret
jne
pop
loop
sahf
sub
pop
inc
cltd
into
add
push
cmp
fadd
xor
push
add
lods
cs
fiaddl
roll
test
xchg
sub
dec
and
shlb
push
idivl
inc
lret
or
pop
dec
and
inc
in
outsl
sub
aam
and
std
cmp
ds
das
clc
lods
fidivrl
popf
sbb
stc
or
les
stos
imul
imul
cmpsb
jb
loopne
pushf
add
mov
jnp
jle
mov
les
push
mov
push
jne
lret
cld
xor
add
out
jnp
pusha
test
stos
xor
test
aaa
ljmp
sbb
inc
sbb
mov
into
loope
cmp
mov
xor
jl,pn
ja
sbb
bound
xchg
loopne
test
sub
cmpsb
lea
cld
push
stos
push
push
stos
shlb
fwait
mov
adc
and
mov
shll
test
imul
push
pop
es
cmpsl
or
dec
out
call
repz
cmp
or
loopne
jecxz
rorb
sub
adc
fwait
in
fistpl
aaa
and
cwtl
hlt
imul
push
pop
xchg
mov
and
mov
mov
add
cli
jl
inc
or
sbb
je
sbb
push
jno
cli
mov
xchg
cmp
xchg
xorl
insl
sub
pop
inc
cmpb
or
jmp
pushf
cmc
sbb
jne
into
push
test
scas
sub
mov
sub
cwtl
loop
popa
cli
rcrb
nop
out
sub
jbe
sti
sub
sahf
add
xor
jmp
repz
mov
lods
sbb
lahf
inc
rcrb
in
pop
inc
mov
hlt
lret
loope
out
mov
hlt
shl
mov
or
adc
adc
xchg
int3
shll
clc
dec
out
loope
mov
into
scas
push
je
out
out
lcall
jp
pop
fidivs
lock
cltd
loop
push
ret
lret
sbb
dec
push
adc
fs
pop
inc
mov
pop
aas
ror
test
addr16
lds
test
ljmp
pop
mov
mov
cltd
dec
dec
mov
fidivrs
adc
dec
pop
dec
cmp
or
rorb
push
adc
call
xchg
push
hlt
out
cmc
mov
bound
xchg
in
mov
sahf
jns
in
addr16
mov
movsl
xchg
push
push
pop
or
add
inc
scas
cmc
fnstsw
cmc
je
jmp
mov
push
imul
in
push
jnp
push
xchg
lret
mov
dec
daa
jle
adc
add
sbb
stos
cmp
and
or
testb
test
inc
scas
jmp
mov
cmpsl
push
scas
mov
adc
repz
cs
xchg
dec
popa
jne
mov
test
aaa
xchg
lock
dec
inc
pop
push
daa
lcall
clc
dec
sbb
cli
stos
mov
adc
int3
sahf
pusha
adc
sbb
fidivrs
mov
ja
fcmovnu
mov
mov
imul
les
aas
push
pushf
mov
ss
mov
jmp
sbb
int3
jp
or
ret
cmpsl
sub
stos
repz
bound
mov
mov
cld
fildll
mov
adcb
or
test
and
push
cwtl
xchg
int
test
add
and
pop
inc
cmpsl
mov
cmc
add
shll
xchg
inc
push
popa
mov
sarb
push
mov
sbb
and
sbb
sbb
rcl
cltd
daa
mov
cs
add
loopne
push
jl
pop
fidivrs
or
mov
loopne
sub
mov
fwait
mov
incb
push
pop
sub
clc
jnp
xor
xchg
xor
dec
pop
mov
cmp
stos
inc
push
xlat
movsl
imul
je
adc
or
mov
leave
js
sub
dec
nop
dec
adc
sbb
sahf
inc
cmp
sti
pop
ljmp
mov
ret
jmp
pushf
sbb
add
iret
mov
loop
jp
inc
das
mov
loope
fcomip
aam
lahf
inc
fwait
inc
lods
mov
and
cmp
push
loop
jl
push
fadds
add
pusha
stos
out
mov
push
movsl
mov
bound
out
sbb
scas
mov
lcall
subb
mov
mov
fstps
pop
test
cmpsb
push
cmpsb
mov
and
push
mov
dec
xchg
in
mov
xor
add
mov
cmp
mov
mov
push
insb
movsb
cmp
xor
stc
push
pop
jns
mov
inc
mov
fsub
test
loopne
cmp
lods
push
xor
xor
fldenv
in
lods
mov
stos
outsl
cmp
dec
popf
add
mov
jne
fistps
sbb
xor
cmc
movsb
push
inc
cmp
aam
xchg
ret
ret
mov
jo
stos
xchg
xchg
fsubl
cld
hlt
add
fiaddl
outsl
pop
mov
scas
adc
shrl
adc
sub
fisubs
or
sti
out
shrl
ds
mov
inc
jle
pop
push
sub
inc
xchg
fnstenv
sbb
sub
cmp
push
jmp
cmp
imul
in
in
jnp
mov
cmp
push
xor
dec
add
inc
insl
adc
dec
out
pop
aam
add
mov
sbb
popa
mov
cs
mov
mov
dec
mov
mov
sbb
pushw
fstpt
js
shrb
jle
inc
mov
fnstcw
lret
in
fstp
pop
mov
int3
jmp
pop
aad
jl
push
cmc
dec
push
iret
test
scas
mov
sbb
cmp
in
xchg
out
inc
sbb
dec
or
mov
push
and
and
sbb
pop
xchg
jmp
and
je
mov
out
jmp
insl
inc
jecxz
mov
cs
fisubs
add
lahf
xchg
inc
aaa
xchg
mov
add
out
flds
mov
sub
or
cmpsb
push
jle
ret
inc
cmpsl
outsl
cmp
les
ficoml
lods
pop
pop
cmp
in
and
test
cmpsl
sbb
mov
adc
lods
mov
negl
cmp
mov
jbe
std
pop
imul
das
loopne
sbb
or
push
inc
inc
std
pop
repnz
pop
mov
push
sbbl
pop
mulb
fwait
push
enter
mov
addr16
or
fucomip
nop
jo
mov
icebp
hlt
add
xor
sub
das
test
and
shlb
sub
repz
xchg
cmp
pop
xchg
or
dec
scas
mov
ficoml
popa
mov
imull
shrb
cmpsb
adc
icebp
sar
jge
aad
outsb
imul
mov
xor
into
adc
inc
out
push
sbb
andb
push
sbb
shlb
ror
mov
pop
xchg
sub
enter
pop
sbb
bnd
mov
xchg
enter
push
dec
shll
jbe
lahf
shll
out
incb
int
lea
scas
ss
daa
outsl
pusha
dec
xchg
clc
stc
dec
int
ss
fwait
or
adc
xchg
roll
xor
cmp
jg
call
popa
cwtl
andb
gs
arpl
mov
outsb
mov
outsb
sub
test
push
push
das
or
fcoms
cwtl
stc
lods
xchg
shrl
sub
xorb
add
pushf
dec
push
dec
jmp
or
and
dec
enter
test
loopne
pop
std
jne
jg
cmc
mov
fs
push
cld
mov
cltd
mov
and
lret
push
jae
xor
xchg
inc
push
repnz
sub
adc
roll
mov
adc
dec
lret
leave
sub
jbe
nop
jns
cli
lea
leave
jnp
mov
dec
jne
pop
adc
mov
test
outsb
xchg
jb
push
mov
decl
fidivs
sub
in
aam
imul
sbb
mov
pop
add
push
icebp
dec
sahf
pushf
test
repnz
mov
add
push
lock
pop
jmp
jg
popf
mov
pop
fcoml
pushf
add
push
sbb
or
ds
sbb
int
add
push
add
sub
jp
and
lods
cltd
pusha
add
mov
mov
push
mov
fidivrs
jmp
sbb
jne
or
lcall
mov
mov
daa
or
test
sahf
dec
cwtl
sti
popa
clc
testb
adc
mov
ss
rcl
mov
or
mov
sti
addr16
aad
mov
xchg
cmpsb
sub
cmp
mov
lea
loop
into
push
pushf
jl
mov
dec
xchg
das
push
or
mov
les
into
mov
jle
rorb
jbe
cmp
jne
push
mov
mov
mov
in
mov
lahf
mov
das
jle
shr
js
lcall
lret
xchg
pop
imul
lahf
sub
xlat
mov
je
xchg
gs
xchg
mov
ret
cmp
jo
loopne
adc
xchg
cmp
lcall
ret
aam
paddw
lret
orl
xchg
cmp
loope
outsl
mov
in
push
jge
cmp
jl
test
adc
push
cwtl
mov
sub
cld
repnz
cs
or
aam
popa
out
inc
xchg
push
and
mov
or
imul
adc
mov
adc
clc
cmc
lret
inc
dec
mov
int3
jl
lahf
jg
sub
insl
mov
je
adc
add
xchg
fsubrs
arpl
xor
jmp
sar
jns
dec
js
out
add
pop
mov
cld
daa
adc
ret
or
sub
sub
js
adc
push
leave
loope
mov
mov
mov
mov
mov
push
mov
addb
dec
sub
faddl
and
inc
sbb
push
dec
bound
fwait
mov
or
jns
aaa
xchg
loopne
inc
xchg
sbb
inc
jg
lds
xor
jns
adc
push
xchg
nop
mov
pusha
push
lock
mov
sbb
jecxz
sub
jne
iret
push
adc
ljmp
mov
mov
inc
jb
and
loope
jmp
stos
enter
aam
test
push
and
mov
sub
pop
push
cmc
pop
inc
out
add
pop
ret
mov
rcr
pop
pop
xor
or
xchg
mov
in
push
xchg
cmp
sub
pop
pop
pusha
mov
movsb
xor
dec
push
out
push
pop
shrl
cmp
movl
or
mov
call
add
rcr
fistl
aam
test
rorl
inc
add
nop
jb
lock
dec
adc
dec
ja
mov
sti
sub
inc
push
jae
into
pusha
mov
idivb
jge
aad
les
mov
push
out
pop
in
inc
pop
ret
insb
popf
ja
adc
bound
jle
stos
ret
lods
dec
mov
cmc
lfs
aas
bound
push
cmp
push
xchg
sub
out
add
mov
jmp
push
dec
cmp
fxch
xor
icebp
inc
shl
mov
cmpsb
std
inc
jmp
jl
add
xchg
mov
imul
and
ret
pop
add
int3
repnz
inc
loop
sahf
rcrb
shrl
popf
add
cmp
sub
faddp
roll
inc
cwtl
sub
push
rorl
xchg
nop
lcall
sbb
stc
iret
out
ficoms
inc
pop
push
fdivs
add
xchg
sahf
je
push
out
pop
shr
xor
loope
loopne
jle
in
cmp
es
mov
out
shlb
jecxz
pop
jg
or
mulb
and
pop
addr16
lock
mov
sub
vorps
jno
sbb
mov
daa
js
cmc
pushf
jbe
push
call
cmp
xchg
cmp
push
inc
dec
sub
or
push
aaa
xchg
inc
lock
mov
iret
adc
dec
loopne,pn
int3
push
test
out
dec
push
mov
cmp
push
pushf
negl
lock
js
xchg
adc
jnp
cmpb
inc
outsl
shrb
sbb
cmpsb
pushf
or
je
call
mov
mov
int3
cmp
mov
mov
cmp
shlb
xor
movsb
sbb
jge
out
adc
and
out
dec
int
xor
mov
pop
std
sti
out
pop
dec
cmp
divb
outsl
xchg
or
mov
or
aas
dec
sbb
fisubs
outsb
pop
or
push
stc
push
and
lock
test
xchg
popf
into
movsl
scas
movsl
scas
mov
das
mov
call
mov
xchg
xchg
jnp
mov
imul
test
sbb
pop
cld
ret
je
pop
mov
sbb
roll
xchg
mulb
test
pop
dec
jg
xor
dec
daa
dec
fisubrs
sbb
mov
ds
dec
scas
inc
sub
jge
adc
and
xchg
sbb
or
xorb
andl
cmp
pop
cmpsb
mov
mov
rclb
mov
in
push
jo
leave
cmpsb
xchg
inc
jle
push
xchg
mov
sbb
jp
add
cmp
and
push
push
aad
enter
daa
sar
adc
mov
dec
xchg
xor
sbbb
test
pop
gs
add
cmp
addr16
scas
add
movsl
pop
xchg
dec
add
loopne
mov
jecxz
jnp
add
sbb
pusha
lods
dec
gs
popf
xor
lahf
fdivp
aam
dec
jno
dec
sbb
jne
scas
pop
xor
sbb
int
pop
stos
aas
test
fidivrl
mov
or
cwtl
and
jno
aas
scas
pusha
out
je
jmp
mov
std
repz
mov
stos
out
adc
jle
xor
into
adc
xlat
les
lret
add
scas
addr16
insl
adc
adc
roll
andb
or
dec
pop
cltd
sub
scas
adcb
lods
fbstp
push
lcall
aaa
push
dec
cmpsb
pop
divb
xor
or
xor
fdivr
imul
sub
mov
lods
mov
or
icebp
mov
cmpsb
imul
push
orb
repz
fwait
xchg
lods
jle
sub
cmp
adc
arpl
testl
mov
ja
push
test
sbb
divl
add
jo
jecxz
jno
inc
sbb
sbb
test
dec
inc
cwtl
push
and
cmp
mov
lods
repnz
aad
pop
ret
adc
into
mov
mov
test
xor
test
dec
sub
mov
movb
enter
mov
mov
mov
int3
pop
or
mov
movsl
call
ds
jmp
ljmp
sbb
sbb
leave
std
mov
xchg
cld
cmp
sub
jl
mov
add
popf
test
repnz
sub
sbb
in
loop
sub
ja
pop
call
movsb
mov
ja
xchg
lcall
in
and
mov
xor
les
test
mov
repz
xor
cs
in
push
or
scas
aam
scas
jmp
or
in
hlt
xchg
xor
ret
sub
jmp
fidivrl
repnz
pop
inc
add
jbe
cmp
push
aaa
jbe
lea
sub
sbb
in
xchg
pop
es
loop
pop
cwtl
mov
das
or
push
sub
mov
cmp
sub
aaa
pushf
test
push
fdivl
sbb
xchg
cmp
stc
es
je
popa
jecxz
add
incl
sti
cmpsb
cld
cmp
addr16
cli
scas
pop
mov
or
mov
adc
pop
adc
roll
out
mov
and
das
sbb
in
fisttpl
mov
outsl
mov
das
xchg
add
inc
pop
rclb
and
cmp
out
es
cwtl
sbb
and
adc
lret
icebp
sahf
push
xchg
cmc
shr
js
repz
xchg
clc
out
mov
or
cmp
cwtl
inc
jno
and
addl
bound
das
dec
cmc
xchg
jg
sub
mov
sbb
or
outsb
mov
jno
xchg
test
mov
adc
push
cltd
mov
shll
data16
adc
test
rcl
lret
dec
in
sti
inc
rolb
cmovs
and
dec
fcompl
xor
lds
jmp
push
adc
pop
fidivl
sbb
mov
out
inc
imul
gs
inc
insb
dec
xchg
push
mov
icebp
adc
loope
mov
cmp
and
insb
fidivs
sbb
in
mov
int3
push
int3
xchg
sbb
inc
divps
sbb
subl
mov
dec
rcr
in
dec
mov
leave
add
lret
insb
adc
gs
aam
or
pop
add
jb
mov
pop
mov
fisttps
movsb
and
adc
jbe
outsl
lock
repz
ss
inc
add
or
dec
pop
push
dec
adc
xlat
fwait
test
je
fnstsw
pop
mov
push
lea
xchg
cltd
pop
sub
into
pushl
pop
int
repnz
pop
sbb
ljmp
lcall
ds
sub
jecxz
cmpsb
das
and
and
mov
add
sub
lock
add
bound
mov
mov
arpl
stos
mov
sbb
mov
jge
xchg
call
scas
imul
xor
push
lock
lret
scas
xor
stos
movsl
xor
insb
push
stos
scas
roll
outsl
xor
xchg
cwtl
adcl
or
icebp
mov
xchg
sub
push
mov
mov
scas
lods
sub
in
push
jl
jbe
cmp
mov
mov
lcall
pusha
mov
jno
push
inc
sbb
lret
jmp
push
add
lea
mov
adc
ret
ret
push
je
aaa
fs
pop
xchg
xchg
outsb
test
mov
out
outsb
hlt
fildll
xchg
mov
subl
add
dec
rol
xchg
test
sbb
je
and
and
jo
loope
cmpsb
mov
lds
inc
sub
dec
mov
lods
cmpsb
jne
sub
ljmp
or
jbe
cmpl
andl
adc
je
out
iret
dec
lods
jle
jns
xchg
inc
xchg
jae
xchg
iret
adc
aas
lret
jbe
fstpl
mov
xchg
mov
xlat
push
jns
gs
lea
bound
pop
sbb
inc
cmp
lret
test
jb
popa
sub
das
dec
pop
jge
imul
and
mov
shl
xchg
fwait
jg
push
insl
add
or
inc
cmp
sti
adc
and
mov
enter
mov
repnz
dec
into
mov
mov
xchg
mov
push
aaa
mov
xchg
stos
add
cld
jge
and
inc
pop
addr16
aaa
and
mulb
adc
mov
xchg
jne
xor
xor
fisubrl
addr16
mov
mov
hlt
fsubrl
mov
adc
aaa
outsl
xorb
mov
shrl
pop
pop
std
or
jnp
fcmovnb
pushf
andb
sub
or
push
and
movl
in
into
lret
out
xchg
jae
mov
lahf
dec
ds
pop
hlt
das
pop
test
jg
fcompl
sbb
icebp
cmp
stc
pop
xchg
cmp
mov
ss
mov
das
lahf
lds
pop
lds
inc
pop
icebp
jne
stos
dec
fsubrs
and
cmp
sbb
push
lea
clc
cwtl
sarb
add
fwait
popa
xchg
xchg
ljmp
dec
push
test
js
fwait
or
cli
push
xrelease
test
mov
sub
add
add
jne
hlt
faddl
pop
divl
push
mov
jp
jge
pop
imul
push
daa
cli
pop
je
fisttpl
out
or
cmp
rorl
cmpsb
pop
int3
rcrb
arpl
cmc
add
pop
rclb
dec
mov
lret
cmpsl
das
inc
loope
xchg
rorl
cwtl
fisttpl
jns
andl
pop
lret
cmp
and
fstps
jnp
sbb
sub
outsb
rcrb
out
mov
scas
jg
fldl
fwait
loop
cmpsb
mov
dec
mov
push
cwtl
lock
xlat
sub
lods
fiadds
shl
fists
addl
push
mov
and
pop
inc
mov
aaa
xchg
dec
sub
dec
push
popf
testl
xchg
xor
xor
inc
loop
mov
pop
add
psrad
mov
in
ljmp
mov
cmp
xchg
lods
xor
and
js
mov
imul
mov
adc
pop
push
mov
inc
enter
and
adc
jecxz
ja
sbb
enter
lods
mov
lret
pusha
pop
push
or
cld
aam
inc
daa
shr
pop
mov
cwtl
mov
adc
push
loope
lods
lea
fstpt
or
cmovns
lahf
xchg
inc
mov
xchg
cmpsl
mov
mov
cld
mov
pop
and
sahf
rorb
inc
popf
push
and
popf
lods
imul
jno
out
jae
lretw
ror
adc
dec
adc
add
hlt
sbb
mov
mov
add
pushf
xchg
xchg
sbb
inc
xor
fdivr
arpl
inc
rorb
stc
in
inc
mov
std
adc
push
imul
sahf
subb
xor
sub
xchg
int3
add
lods
cltd
popf
and
inc
push
subb
adc
outsb
movsb
and
jnp
inc
push
add
ficomps
add
rcrb
cwtl
push
xor
gs
out
lcall
popf
pop
ret
lret
push
repnz
out
pop
xchg
fldcw
adc
mov
inc
out
adc
dec
mov
fstp
xchg
cltd
dec
popa
data16
add
in
xor
pop
xor
cmp
insb
dec
push
sbb
jbe
mov
xorl
rcrl
sub
jl
pop
mov
cmp
je
mov
mov
mov
xchg
aad
or
in
push
stos
imul
into
inc
dec
std
lret
sbb
pop
out
mov
adc
iret
js
sub
aaa
jb
nop
jnp
fistpl
cs
repnz
dec
cltd
test
sbb
push
enter
out
xor
mov
outsb
pop
addr16
xor
addr16
mov
mov
lcall
out
call
dec
push
push
pop
xlat
mov
mov
xor
loopne
and
adc
jns
nop
rcl
sbb
jbe
mov
mov
ret
cld
cs
pop
pusha
pop
dec
lea
cmp
mov
loope
pop
es
push
pop
cltd
jbe
sbb
lret
mov
scas
in
aad
movsb
rcrl
pop
imul
imul
jge
insl
pop
lock
lods
enter
testb
sbb
loop
mov
repnz
ja
insb
daa
arpl
dec
pushf
icebp
jle
loop
jg
mov
xor
xchg
imul
dec
or
addr16
pop
es
es
mov
bound
xlat
sbb
in
sti
sti
sbb
movmskps
insl
or
lret
pop
pop
std
sbb
mov
inc
or
push
out
push
jp
xchg
fabs
mov
cmp
xchg
mov
cmp
icebp
aaa
pusha
adc
stos
mov
mov
imulb
test
out
add
iret
fcomps
stc
pushf
rcrb
or
test
shll
push
xchg
mov
std
mov
decl
xor
sub
add
cmpsl
add
mov
repnz
js
cmp
jo
in
jg
inc
ss
or
xor
inc
div
or
push
mov
jmp
shrb
sub
repz
mov
xchg
sbb
cmp
dec
inc
lahf
xchg
imul
mov
lods
inc
mov
pop
int3
daa
fwait
mov
cmp
xor
and
daa
jle
xchg
outsl
jo
sbbl
sbb
xchg
push
aam
aaa
into
loopne
ficoms
and
sbb
repnz
in
ficompl
push
dec
push
lret
jb
lods
inc
and
mov
xchg
sub
push
cltd
mov
sarl
push
sahf
daa
push
mov
imul
sbb
xor
das
xor
xchg
push
pop
shll
mov
out
cmp
dec
or
cmp
loopne
cmpsb
imul
xchg
jmp
jp
test
mulb
sbb
lds
push
sub
aas
adc
sbb
outsb
sub
pusha
pop
std
test
fsubrl
rcrb
and
mov
and
pop
or
fnop
xor
les
outsb
negl
mov
js
pop
aaa
scas
gs
push
push
cs
sbb
xchg
lret
add
push
pop
cmp
inc
bound
lock
cmp
fwait
pop
iret
jb
mov
repnz
jp
push
stc
scas
sbb
lcall
lcall
mov
mov
dec
ds
pop
cmpb
add
or
jae
out
add
xor
adc
gs
xor
les
cltd
and
out
lock
jle
pop
sbb
sub
int3
ret
lcall
es
cmp
mov
or
aas
cmp
lods
jl
and
mov
xor
sbb
add
leave
jecxz
and
or
pop
test
pop
test
ljmp
subl
lock
mov
xlat
jp
push
incl
jnp
xchg
sbb
outsb
push
imull
mov
mov
jmp
cmp
cmp
nop
mov
dec
xor
call
push
pop
mov
push
pop
push
repnz
cmp
repnz
cmp
cmp
pop
cmpsb
pushf
xor
fnstcw
push
sub
in
popf
pop
call
dec
in
sub
popf
fs
rol
mov
push
rolb
je
mov
cmc
inc
adc
jl
or
test
cwtl
sbb
mov
popf
repz
pusha
fistl
shr
in
push
aaa
mov
xor
adc
xchg
mov
out
mov
push
push
test
fsts
mov
mov
lds
xor
push
lahf
xor
or
mov
mov
addr16
push
pusha
pop
xor
sub
xchg
xchg
xor
xor
jne
leave
shrl
popf
xchg
inc
rcrb
daa
pop
daa
lret
sub
mov
lock
fcoms
dec
sub
pop
js
push
in
mov
add
fisttps
jle
out
decb
loop
pop
and
into
jb
and
dec
push
rcl
ss
test
jb
out
add
mov
pop
push
xchg
in
aam
rorb
sbb
dec
and
mov
outsb
or
divl
xchg
lods
adc
dec
adc
cli
xchg
es
mov
stos
and
mov
je
push
mov
addr16
test
mov
mov
lret
xor
js
decb
or
jmp
sub
fs
sub
in
test
out
ret
add
mov
imul
inc
mov
dec
fdivrl
sub
setns
pop
push
inc
cmp
das
faddl
xchg
push
xchg
test
movsb
outsb
loop
jge
cmpsb
je
sbb
js
aad
and
jb
jb
push
cli
scas
cmp
xchg
scas
aas
hlt
inc
ja
cmp
cltd
mov
mov
inc
stos
dec
lods
xor
pop
jl
hlt
inc
inc
cmp
lret
fwait
loope
jnp
mov
and
sbb
push
es
je
dec
add
push
fsubs
sub
jno
mov
xchg
or
jmp
rcll
outsb
xchg
mov
fdivrs
push
fisubl
xchg
sbb
push
pop
fwait
xchg
fwait
and
inc
sub
js
or
jle
xchg
in
es
push
pop
jbe
sbb
cmp
push
cwtl
cmp
or
pusha
sar
clc
jl
pop
shll
pinsrw
pop
mov
push
cmp
dec
cmpsl
fdivrl
xchg
into
fcoms
mov
ja
inc
pushf
push
pushf
fsubrl
mov
push
jbe
int3
jns
push
mov
dec
mov
or
push
sbb
push
dec
outsl
adc
nop
pushf
push
sbb
push
data16
das
push
mov
in
loop
dec
in
inc
xorb
fst
pop
jecxz
inc
push
mov
cmp
repz
scas
xor
push
into
pusha
inc
xor
ja
pop
mulb
dec
adc
sub
loopne
pushf
jns
jmp
jmp
xchg
sub
jo
jge
rolb
in
push
ja
xchg
icebp
ret
shlb
js
outsl
xor
jnp
dec
xlat
push
inc
mov
popa
jne
cld
and
jl
adc
pop
push
push
mov
imul
sub
mov
lock
jb
xor
fisubrs
cmp
aad
push
lcall
xchg
jnp
and
mov
stos
push
cmp
push
jae
jl
aas
hlt
or
cmp
aam
pop
cwtl
pop
mov
loop
vcvtss2sd
mov
scas
sbb
and
jns
xlat
sbb
xor
arpl
jmp
pop
mov
dec
iret
lret
pop
shl
cmp
cmpsl
xor
mov
inc
mov
mov
pushf
and
add
inc
aam
loop
in
cmp
icebp
mov
in
mov
cmp
lock
fs
test
sub
out
add
rorb
jg
repz
pop
inc
out
push
add
add
xchg
mov
inc
jns
popa
xchg
ret
movsb
stos
cmpsl
test
into
jle
pop
push
jecxz
imull
push
lea
out
bound
arpl
je
mov
mov
dec
imul
or
mov
or
dec
mov
mov
in
rorl
jg
mov
stos
xchg
push
faddl
sbbl
and
jmp
pop
push
xlat
icebp
loope
imul
sbb
int
xchg
scas
xor
dec
test
aam
jle
pop
ja
or
sbb
cmp
lea
mov
fadds
mov
leave
dec
xchg
inc
cli
dec
mov
mov
mov
sbbl
std
sahf
and
xchg
in
aam
stos
fcmovne
hlt
ds
xchg
xchg
sub
rorb
jg
stos
xchg
inc
pusha
cmpsl
aaa
cmp
xor
or
mov
scas
je
fildll
test
cmc
mov
arpl
jbe
out
xchg
ret
xchg
cs
fwait
mov
cmp
push
aad
pop
push
or
popf
pop
xchg
jge
mov
flds
cmpsb
inc
lahf
paddsw
cli
xchg
and
ret
test
jle
shl
lods
sbb
xchg
mov
out
in
adc
sbb
sub
push
mov
inc
imul
cmpsb
out
stc
mov
xchg
dec
adc
pop
mov
pop
imul
pop
or
mov
mov
out
test
ret
sahf
incl
xor
inc
push
dec
mov
push
jbe
lret
mov
xchg
and
clc
push
pop
mov
mov
or
and
pop
rclb
out
cli
popf
shlb
pop
dec
fs
jne
xor
and
inc
ja
test
sbb
rcrl
dec
decb
xor
and
sbb
outsb
pop
outsl
sbb
call
pop
and
adc
inc
push
and
repz
ljmp
cwtl
mov
sbb
jle
adc
push
leave
adc
std
fnsave
hlt
ret
mov
pop
hlt
cmpsb
dec
and
pop
mov
sbb
fs
mov
aad
xchg
mov
mov
jmp
inc
xchg
repz
xor
inc
stos
lock
dec
dec
inc
adc
out
mov
push
mov
and
lcall
pop
push
pop
scas
ja
leave
out
cmp
popf
hlt
cmp
icebp
dec
push
fstps
lods
idivb
cmp
mov
pop
jle
icebp
pop
xor
lcallw
add
nop
mov
sub
out
imul
cltd
sub
lret
mov
xchg
in
addr16
cmc
scas
push
mov
jp
arpl
sub
test
mov
test
mov
repnz
aas
lret
insl
mov
aam
or
mov
or
sbb
sbb
jnp
or
adc
xchg
mov
jns
or
sbb
jnp
loopne
in
shl
notl
adcb
or
xchg
aaa
hlt
jmp
pop
iret
pop
xor
test
jne
add
add
mov
sti
sbb
xor
test
xchg
pushf
cmp
mov
push
int
xor
mov
in
or
cld
rcl
in
push
and
ret
jae
cmpb
or
xor
loopne
or
push
insl
cmp
push
fcompl
call
inc
fistps
and
aaa
push
cmp
xor
jmp
add
jg
pushf
and
pop
lret
out
and
ds
in
cmp
mov
and
pop
push
notb
es
shrb
sbb
adc
mov
movl
sarl
addr16
lock
pushf
jl
int
pop
xchg
push
xchg
inc
fcmovnb
adc
or
push
sarb
aas
dec
test
das
mov
outsb
jge
notl
mov
rol
sti
das
jp
adc
out
les
xor
cmp
stos
rcrl
lods
adc
lcall
mov
jo
dec
leave
push
notl
adcl
push
inc
sbb
arpl
cmp
repz
sub
popf
lret
test
mov
lcall
andb
jge
pop
jae
ja
outsl
stc
pop
push
pop
in
lret
fdivs
push
mov
add
lock
stc
cmpl
xchg
lret
fdiv
or
pop
outsl
adc
adc
stos
jle
movsl
stc
lds
sub
sub
mov
insb
mov
and
cmp
pop
push
loop
loop
mov
inc
jle
jg
sbb
loop
ja
out
inc
lret
add
sbb
fwait
mov
push
mov
push
hlt
xchg
add
fdivrs
movsb
sub
add
push
cwtl
jnp
xlat
mov
decl
jnp
jecxz
gs
xor
or
cmp
mov
push
aad
rcll
stc
or
shll
outsl
sub
adc
fistpll
mov
xchg
mov
movsb
cmp
jns
loop
cli
ficomps
jp
sbb
lock
in
aad
icebp
adc
mov
cli
jle
lods
shlb
cld
stc
sbb
xor
push
fcomi
cmp
iret
loope
cmpsl
mov
pop
mov
push
sub
out
dec
lret
mov
jge
xchg
xor
push
insb
mov
cwtl
add
inc
and
dec
mov
dec
mov
xchg
jb
shrb
jp
cmp
mov
mov
jmp
xchg
call
push
in
in
iret
push
inc
pop
push
inc
gs
sbb
mov
pop
xchg
jg
cmp
call
push
mov
je
lods
add
sti
pop
jno
xchg
fistpll
mov
mov
pop
cmp
cmp
or
xor
sub
cld
or
mov
jle
inc
push
dec
inc
ret
addr16
imul
stos
jbe
push
out
dec
cmp
adc
loope
data16
push
loopne
sbb
mov
and
popa
mov
fbstp
ret
test
out
inc
stos
flds
adc
inc
call
mov
cwtl
jo
pop
imulb
ficompl
xchg
mov
mov
sub
mov
jbe
xchg
popa
repz
fucomip
loop
dec
loopne
pop
scas
mov
pushf
push
jbe
cmp
bound
and
aad
push
pushf
inc
mov
dec
lcall
push
inc
sbb
pop
xlat
dec
dec
mov
dec
cmp
fs
xor
aaa
adc
fs
leave
aam
aas
sbb
push
lcall
fcompl
mov
xchg
fcoms
jecxz
mov
inc
lods
xchg
movsl
jno
add
inc
push
mov
mov
add
outsl
push
cmp
pop
rorl
push
inc
lcall
loop
iret
xor
popf
shl
xchg
push
add
jge
sbb
cmp
roll
aaa
aas
lret
cmpsl
mov
test
mov
mov
jg
ljmp
pushf
mov
ds
sub
std
xor
insb
nop
scas
in
je
add
xor
sbb
pop
rorl
push
addl
aam
add
adc
movsb
rolb
aaa
adc
pop
xchg
or
bound
sub
mov
in
jne
jmp
fnstsw
sbb
xchg
inc
mov
psrlw
cmc
lahf
xorb
sbbb
ds
dec
cmp
sub
sub
and
xor
frstor
xchg
mov
jno
int
or
lret
push
pusha
inc
and
shll
loope
pushl
jb
xlat
jnp
or
mov
fs
push
lcall
xchg
jb
inc
pop
push
or
in
or
and
inc
test
xchg
xchg
mov
inc
cltd
mov
xchg
stc
stos
xor
mov
cli
gs
mov
ss
insl
in
dec
xchg
mov
add
sbb
dec
cmp
pusha
lret
data16
jl
dec
mov
xor
test
adc
jne
incb
in
xor
dec
cmp
or
fcoms
inc
cmpl
fdivl
dec
pop
pop
jl
jp
xorb
imul
fnstcw
sub
lods
jae
mov
mov
mov
jmp
leave
sbb
insb
insb
sbb
pop
push
sbb
lds
loope
mov
sbb
sub
xlat
out
imul
mov
xor
mov
cmp
pop
jg
push
out
sub
imul
sbb
mov
cmpl
jle
xor
test
std
sub
sub
ret
sbbl
cs
fldt
push
outsl
insb
mulb
dec
out
test
fisttps
in
xor
nop
arpl
out
sbb
inc
sbb
fcomip
int3
mov
jg
enter
mov
xchg
xor
cltd
and
scas
jl
mov
icebp
fisubl
test
shll
loop
dec
aam
add
adc
psubusb
ljmp
clc
sub
push
xchg
pop
mov
leave
lock
jl
sub
into
push
insb
lret
into
icebp
dec
xchg
and
repz
add
fbstp
mov
leave
add
and
or
fcoms
mov
mov
mov
scas
das
mov
xchg
inc
bound
loope
cmc
xor
sbb
idivl
in
mov
lds
ljmp
or
mov
bndldx
cmc
scas
dec
lret
add
lods
call
div
daa
test
mov
out
shrl
mov
call
ret
cmp
inc
stc
xchg
or
xchg
inc
fildll
scas
hlt
outsl
ds
fstpl
mov
mov
mov
bound
clc
imul
mov
push
jno
lods
pop
lods
xchg
adc
jo
push
mov
mov
lds
add
xchg
or
inc
in
sub
int
sbb
pop
cmp
mov
test
mov
fstpl
rorl
sub
movsl
dec
js
xchg
mov
cmpsb
test
lods
sub
mov
fistpll
xchg
or
xor
fldenv
jne
fsubrl
sub
jle
pop
and
pop
mul
icebp
gs
push
decb
imul
cmp
inc
mov
mov
clc
inc
xchg
inc
jmp
inc
add
jno
inc
iret
subl
push
aad
int
fwait
pop
aas
cltd
aaa
mov
push
push
jo
jae
rcrb
xchg
out
xchg
mov
mov
pop
adc
mov
out
mov
dec
sbb
fmuls
pop
push
lcall
outsl
mov
hlt
cmp
pop
out
push
fbld
fwait
or
lea
std
filds
loop
enter
adc
adc
sti
rorl
or
mulb
sbb
xorl
jl
add
out
out
mov
stos
mov
and
cmp
decb
or
mov
scas
aaa
lcall
mov
rcr
in
and
shlb
andl
insl
out
jmp
daa
mov
jg
sub
push
xor
push
roll
sub
adc
vmovhps
mov
lods
test
sub
fwait
mov
arpl
icebp
adc
cltd
lods
jns
xchg
js
out
bound
cwtl
data16
fdivrl
addb
icebp
pushl
call
lods
push
data16
push
cmp
adc
dec
testl
shrl
xchg
test
sub
movsl
push
insl
xchg
push
fistl
and
xchg
popf
popf
fnstsw
mov
leave
jnp
cwtl
cmp
test
ficompl
les
shll
nop
adc
mov
int3
pop
out
lds
ja
ret
fs
add
call
fisubrs
divb
and
ret
scas
push
out
xchg
insl
cmp
imul
test
fimuls
cmp
jecxz
stc
int
or
mov
out
out
push
jp
xchg
mov
in
pop
jbe
mov
inc
jg
fildll
add
clc
jno
imul
add
sub
xchg
mov
fwait
mov
inc
popf
roll
mov
sub
orl
inc
sahf
mov
test
scas
pop
jmp
jnp
out
pop
subb
stos
test
hlt
mov
pop
mov
js
aam
mov
pop
add
sbb
pop
cmpsl
add
sbb
mov
in
sbb
js
das
jb
in
das
decl
push
pusha
xlat
dec
dec
dec
mov
jl
enter
imul
ja
sbbb
aad
xchg
insb
scas
mov
jge
ret
adc
rcll
int3
and
pop
and
lea
push
imul
push
sbb
shl
xchg
call
test
das
and
imul
xor
xor
and
daa
push
push
jae
dec
xchg
les
xchg
popa
pop
sarb
mov
push
int3
pop
scas
movsl
pop
sbb
popa
mov
lds
loopne
xchg
sbb
sbb
enter
ss
bound
sbb
rcll
inc
jl
movsb
fwait
cmp
sub
out
sbb
fcoms
lret
in
fcmovbe
jl
test
stos
fnsave
aas
cmp
pop
jmp
aaa
iret
pop
dec
ds
jne
mov
inc
movsb
daa
adc
je
outsl
push
mov
pop
mov
mov
pusha
arpl
shlb
hlt
inc
xor
jg
int
clc
pop
pop
cmp
ret
fpatan
cmp
and
pop
mov
push
popf
jnp
xor
jl
pusha
aas
pop
shlb
mov
fists
mov
rcrb
push
push
cmpsl
and
xchg
add
mov
and
or
sahf
xlat
ja
xchg
mov
mov
jne
jo
adc
scas
fidivrl
jmp
movsb
aas
icebp
pusha
popa
lock
and
add
in
sub
push
xchg
dec
aam
jo
add
push
icebp
xchg
jl
jge
mov
jmp
shll
mov
ret
adc
sbb
adc
jg
repz
mov
inc
cmpsl
test
adc
dec
sbb
pop
popa
and
jbe
mov
sub
inc
add
sbb
cltd
loop
sub
out
decl
lcall
das
int3
cmp
mov
scas
pusha
xor
inc
adc
inc
add
sbb
pop
outsb
inc
pop
pop
outsl
add
pop
sub
aad
aam
fs
push
xchg
lret
in
movsb
cld
jg
and
cmp
xor
cltd
cli
add
mov
pop
outsb
dec
cmp
pop
xchg
jne
inc
loope
sbb
xchg
stos
pop
imul
mov
cs
aad
aam
adcl
insb
push
jl
sti
lahf
add
sbb
fildll
mov
cmp
push
inc
cmp
xor
fstp
ja
xor
shrl
cltd
rcrl
imulb
arpl
dec
imul
inc
rorb
stos
stos
popa
stos
sub
scas
in
ss
dec
inc
cmp
popa
fisubrs
inc
outsb
and
les
mov
in
ret
push
into
xlat
mov
lahf
out
xchg
jbe
inc
nop
nop
ret
scas
mov
xor
stc
shlb
and
les
cmp
es
cld
mov
add
jmp
pop
pcmpgtd
jo
lock
fcomps
mov
out
pop
xchg
lods
cwtl
into
dec
cmp
insb
cmpl
daa
dec
lahf
ja
testb
inc
shl
fstpt
jne
ja
xchg
jl
aas
pop
test
outsb
adc
or
jae
je
out
push
dec
outsb
push
das
out
movl
push
mov
test
jnp
and
pop
fxch
pusha
sarl
outsl
fcoml
pop
push
mov
out
addr16
jo
sub
ds
ljmp
insl
fcom
or
cli
sti
sarl
pop
ljmp
jp
scas
dec
pop
adc
iret
in
push
pop
icebp
push
push
dec
hlt
xlat
in
pop
insl
and
aad
pop
clc
nop
pop
pop
add
aam
jo
add
cmp
in
jecxz
test
loope
mov
mov
jnp
dec
pop
adc
mov
cmp
jle
jmp
loopne
inc
dec
movsb
decl
int3
pop
mov
or
stos
xchg
rorb
sub
jecxz
icebp
sbb
ret
imul
push
int3
lds
jmp
sbb
in
lcall
dec
and
scas
iret
mov
jne
ss
or
rorb
pop
and
dec
out
and
pop
aaa
sub
fidivrl
xor
add
jmp
cmpsb
lret
sarb
cmp
inc
out
jb
rorb
mov
dec
dec
fisttpll
lods
int
mov
pop
rcll
lods
movsl
lret
sti
popf
mov
nop
paddusb
scas
sub
mov
test
add
addr16
mov
mov
sub
ftst
jg
sub
adc
jmp
xchg
mov
rcrl
push
int
cmp
pop
or
mov
inc
pop
push
lods
lods
adc
loop
jle
test
fnstenv
shlb
rcr
cs
adc
loope
mov
sub
inc
xchg
mov
jbe
das
call
pop
outsb
es
lret
arpl
push
test
sarb
jle
lret
or
add
repnz
addr16
mov
inc
add
mov
rcl
daa
iret
lret
adc
stc
fimull
flds
roll
imul
lret
imul
mov
pop
loope
sub
mov
xlat
jmp
ds
jg
outsl
pop
mov
mov
mov
lahf
dec
pop
loope
mov
sbb
add
mov
push
and
imul
sbb
ret
mov
shlb
mov
inc
mov
out
jae
and
stc
push
in
mov
cwtl
popf
popf
push
jno
dec
jl
int
dec
sub
data16
pop
and
fnstcw
movsl
dec
out
cmp
in
movsl
pop
int
out
and
shl
int
lcall
cmpsl
loop
jg
or
addr16
enter
cmpsb
or
xchg
or
fidivs
in
xor
inc
cmpsl
mov
clc
orb
cmp
daa
push
xchg
in
inc
hlt
out
aad
xchg
pushf
leave
and
andb
xor
shlb
cs
xchg
idiv
jbe
fisubrl
cli
loop
cli
xor
xchg
dec
addl
es
mov
xor
das
cwtl
add
sbb
dec
push
pusha
ja
fnstcw
std
jle
xlat
int3
dec
mov
push
cmp
sub
pop
push
add
adc
decb
pop
and
mov
jl
insl
xchg
cli
push
decb
sbb
and
clc
addr16
lds
sahf
int
addr16
mov
mov
rcrl
popa
aad
pop
ret
dec
mov
out
sbb
dec
add
fcoml
adc
test
dec
cmp
jg
inc
push
loop
push
ficomps
addr16
add
lods
mov
inc
jl
les
xchg
xchg
mov
mov
sti
mov
xor
loop
adc
sub
inc
sbb
leave
fstpt
dec
and
lock
stos
sbb
sbb
mov
cli
jecxz
rcrb
out
xchg
aaa
jo
cmp
cmp
push
mov
push
sub
mov
outsb
xor
add
mulb
ret
fbstp
cmpb
out
popf
or
mov
lods
fcoms
pop
cli
mov
sti
add
icebp
les
ljmp
sar
out
jbe
dec
lock
sub
mov
ja
movsl
enter
sub
jo
sbb
setp
xor
mov
pop
cmp
lods
jg
data16
mov
movsl
arpl
dec
mov
fcomi
test
out
jle
jnp
pop
mov
and
gs
pop
pop
push
mov
inc
fbstp
lock
ret
ret
lods
lds
addr16
loop
loope
or
inc
and
out
inc
int
xor
flds
insl
jne
cmpsl
xchg
gs
adc
xlat
mov
xchg
or
pop
mov
xor
mov
xchg
cmpsl
jnp
xor
loop
sbb
int
xchg
mov
sub
out
daa
xchg
cltd
lock
cmp
adc
add
adc
and
dec
or
aam
xor
lods
aam
jnp
mov
loop
aas
xor
fnstsw
scas
mov
les
xchg
jnp
outsl
arpl
loop
call
or
inc
in
popa
adc
or
cmp
cmc
pop
js
in
mov
fildl
movsl
mov
inc
mov
out
dec
les
mov
or
dec
dec
fbstp
inc
repz
jmp
pop
sbb
xor
sub
xor
int
pop
loope
adc
data16
int
movsb
repnz
mov
push
pop
adc
mov
cmp
inc
ret
inc
mov
call
jo
xor
sbb
mov
adc
aam
ror
mov
mov
pop
push
and
cmp
cmp
pop
sbb
mov
das
and
jnp
cmp
sbb
shrb
jecxz
stc
sub
insb
cmpsb
loopne
adc
jmp
jne
dec
jo
enter
cld
and
cmpsl
call
stos
mul
pop
push
pop
xchg
imul
and
es
add
or
lock
cmpsb
push
data16
mov
add
and
mov
ja
popf
pop
jl
inc
dec
test
cmp
cmc
sub
cmpsb
cmpsl
js
xchg
cmp
daa
jae
pop
xor
arpl
nop
cmp
mov
fdivl
mov
and
push
xor
sub
flds
xchg
cltd
mov
mov
adc
or
popf
jmp
adc
cmpsl
in
mov
or
imul
adc
mov
call
xor
dec
and
ds
dec
sub
xor
stos
popa
and
push
add
adc
push
aam
jb
pop
out
fcoms
imul
sbb
sahf
and
les
mov
aas
or
pop
add
gs
pop
imul
enter
pop
pop
mov
scas
sahf
std
xor
sub
popf
stc
xchg
cmpl
jo
int
add
mov
sbb
shlb
orl
loope
lods
add
lcall
xchg
mov
dec
jle
jae
mov
rcrb
in
inc
pop
jle
xchg
mov
popf
mov
adc
mov
insl
push
rolb
dec
cmp
aaa
pop
sub
ds
or
stos
testl
xor
fisubs
scas
lret
shr
dec
cmp
mov
or
pop
fs
cs
mov
addl
xor
sub
popf
aad
dec
xchg
and
pop
icebp
sahf
adc
xchg
mov
mov
cmp
push
jge
int3
fwait
jnp
push
ret
fstps
mov
daa
out
mov
fnstsw
push
sti
addl
xchg
movsl
lret
mov
sbb
mov
push
shlb
jp
push
mov
inc
mov
loopne
pop
cwtl
mov
xor
nop
cwtl
or
rcll
roll
mov
and
imul
push
dec
test
sub
bound
xorb
jbe
into
dec
and
inc
cmp
mov
lds
dec
ja
sbb
jp
xchg
sub
dec
or
mov
mov
adcb
ljmp
sbb
mov
out
mov
cltd
sbb
aam
push
fistpl
sti
ret
movsb
leave
inc
sub
nop
popa
test
dec
sbb
shrb
cli
lods
cmpsl
push
xor
push
push
and
in
inc
or
scas
jne
addr16
sbb
pusha
aam
shll
or
jle
pushf
xor
and
xor
int3
es
mov
jge
test
push
mov
xchg
xchg
dec
and
fldt
into
or
sub
cmp
adc
daa
popa
push
jb
gs
sub
or
cmp
push
sarb
mov
or
jae
popfw
arpl
xchg
or
mov
jmp
dec
xchg
outsb
sub
adc
rcrb
xchg
icebp
add
stos
mov
xor
icebp
adc
dec
and
mov
add
add
xchg
mov
lahf
add
shll
adc
push
loopew
and
nop
adc
jl
mov
xchg
notl
pusha
ljmp
or
add
sub
xor
jp
dec
jno
notb
cmp
pop
push
sbb
or
cmpsb
sbb
mov
inc
sbb
hlt
les
shl
out
adc
lahf
and
sbb
lret
insb
add
inc
xor
nop
push
sti
out
je
mov
popa
sbb
clc
adcl
jo
and
pop
pop
fisubs
in
lea
push
lcall
add
push
push
jge
arpl
jb
push
popa
jae
std
fwait
push
test
dec
in
popf
pop
jnp
jmp
push
xchg
pop
sub
push
jo
lret
leave
stos
push
mov
mov
inc
pop
rcrl
sbb
add
pop
pusha
xchg
icebp
movsl
xchg
pop
sbb
gs
inc
cwtl
cmp
xor
andb
mov
leave
or
cmp
dec
push
push
sbb
lock
ret
daa
loop
xchg
jecxz
lret
xchg
jg
mov
xor
inc
jge
faddp
fs
jg
stc
aaa
xchg
pushf
pop
andb
jne
cmp
push
ret
inc
hlt
mov
inc
mov
mov
mov
leave
cltd
and
fiaddl
pop
xchg
push
inc
push
lods
lock
pop
add
sub
pop
mov
aad
cltd
nop
add
jnp
gs
sti
xchg
mov
movl
and
push
les
ret
dec
es
mov
jnp
pop
xchg
sbbb
in
adcl
outsl
les
dec
sti
mov
inc
mov
mov
andb
fmul
jno
aad
cmp
adc
or
mov
lret
cmc
or
sbb
out
mov
test
mov
in
clc
pop
and
stos
sub
xor
sbb
or
mov
in
fs
mov
or
xchg
pop
mov
dec
sub
test
add
fdivrl
add
mov
xchg
lret
ljmp
jmp
aam
out
mov
dec
into
mov
hlt
imul
dec
adc
sarb
or
adc
hlt
dec
leave
mov
jle
adc
es
std
xchg
incb
loopne
mov
js
sti
ss
mov
cld
ret
shll
push
xchg
nop
cmpsb
jge
lds
aaa
push
vmread
rol
and
inc
fldenv
cmp
mov
jle
mov
insl
imul
add
adc
test
out
popl
cld
xchg
lods
push
xor
pop
cwtl
aaa
adc
aam
je
or
mov
insl
add
call
in
loop
out
jge
sbb
push
add
push
outsb
js
add
cli
mov
test
adc
lock
mov
or
mov
inc
mov
sub
xlat
movsb
les
mov
pop
icebp
jmp
mov
add
lock
xchg
push
jnp
mov
xchg
push
cmp
outsb
cmp
dec
push
push
inc
mov
out
fldenv
cmp
repnz
loope
push
cmpsl
cmpsb
out
iret
push
and
bound
inc
jecxz
inc
imul
call
lods
in
jmp
mov
popa
pop
pop
outsl
sti
dec
repz
push
push
mov
xchg
mov
fwait
rcrb
sarb
imul
or
and
stos
das
pop
test
ss
cmp
inc
inc
arpl
cmpsb
push
cmp
cmp
icebp
jbe
sbb
int3
pop
pop
leave
das
mov
mov
add
mov
pop
sub
dec
aam
mov
lds
xor
mov
dec
dec
jo
clc
or
pop
fisubl
mov
xchg
movsl
pop
add
and
mov
repnz
les
aaa
ja
shlb
insb
mov
push
sub
dec
pop
or
int3
push
xchg
mov
sbb
je
movb
bound
cs
inc
push
adc
add
outsb
cmpsb
lds
pop
xlat
loope
cli
enter
mov
dec
test
push
lea
scas
or
cs
cs
mov
sbb
inc
lds
and
scas
mov
mov
dec
sarl
pop
cmpsb
and
adc
sub
adc
xor
jmp
xor
jno
mov
xor
cmp
mov
jmp
subl
loopne
mov
mov
fidivrs
push
in
mov
nop
add
jge
outsb
and
or
out
aas
stos
jo
push
mov
sub
mov
cli
push
push
or
enter
pop
pop
mov
mov
imul
sarb
or
inc
push
popa
cmpsl
inc
std
sahf
fiaddl
cmp
mov
dec
loope
mov
or
movsl
cld
sarl
cwtl
lds
mov
ret
out
nop
sub
xor
out
test
inc
fnsave
adc
mov
stos
xchg
xor
in
mov
xchg
jg
mov
sbb
dec
data16
xchg
jg
mov
cmp
add
es
loop
or
xorb
stc
sarl
loope
call
push
fisttpll
addr16
rorb
stc
xchg
push
sarl
sub
and
pop
mov
lock
jne
jecxz
xchg
mov
lock
add
adc
pop
sbb
mov
mov
jp
add
xor
pop
mov
mov
and
and
jne
andb
inc
andb
adcl
mov
mul
call
mov
cmpl
mov
lret
xlat
and
mov
mov
cmpsb
xor
pushf
add
dec
into
sbb
mov
lret
fbld
mov
ds
testl
xchg
cli
cmp
lret
jne,pt
popf
pop
xor
sbb
dec
mov
dec
push
shlb
inc
dec
xchg
jb
hlt
cmp
cmp
ljmp
push
iret
cmp
stc
std
push
test
pop
adc
cmp
xor
inc
lock
aam
or
popf
push
or
mov
repnz
lret
repz
xchg
icebp
es
or
imul
jl
push
cmp
mov
scas
cmp
sub
sar
loope
push
shll
je
mov
pop
mov
cltd
stc
sti
cs
mov
fadd
xchg
inc
xor
pop
fmulp
pop
adc
pop
push
cmp
mov
mov
repz
cs
mov
xchg
insb
mov
pushf
pop
mov
into
mov
mov
cmpb
cmp
xchg
jg
cmp
data16
or
or
push
jae
cmc
xor
push
aad
in
mov
sbb
jmp
cltd
and
add
xorb
outsl
sbb
push
cmpsl
pop
mov
pop
sahf
lods
mov
add
push
cli
roll
push
sbb
in
scas
dec
subb
bound
aam
and
stos
xlat
dec
stos
push
dec
jle
shlb
cmp
add
movsl
sub
mov
mov
pusha
xchg
scas
and
mov
outsl
ja
ds
mov
out
push
xor
ret
shlb
pusha
enter
pop
scas
mov
movsl
shll
or
mov
rcrl
call
mov
jne
inc
js
subl
scas
es
popf
dec
cmc
and
or
into
adc
ja
lods
mov
std
icebp
cs
enter
icebp
mov
add
xchg
mov
push
sub
arpl
pop
inc
dec
fidivrl
sub
push
mov
xor
pop
mov
sbb
rcl
repz
fdivl
cli
test
iret
and
jge
jge
dec
shr
mov
loop
enter
jge
jnp
push
pop
dec
ljmp
mov
sub
inc
lods
out
xlat
mov
cltd
je
or
xchg
sbb
jo
and
mov
scas
imul
test
sbb
fs
scas
fnstsw
sbb
jmp
cli
dec
aad
sahf
clc
mov
vmread
sub
dec
inc
or
push
int
out
or
and
fnstsw
pop
insl
sub
push
movsb
push
test
adc
shlb
idivb
test
faddl
and
repnz
sbb
lods
mov
dec
or
sahf
ljmp
test
inc
inc
std
pop
add
in
bound
es
mov
fwait
addr16
or
xchg
out
pop
inc
jecxz
lods
inc
dec
or
loopne
xor
arpl
push
les
fnsave
test
push
ret
fstl
jo
mov
nop
sti
shrb
jnp
pop
sbbl
mov
lret
sbb
rep
pop
xchg
out
sub
add
fwait
dec
ret
inc
pop
jle
mov
outsl
xor
xor
int
dec
test
loop
push
pushf
outsl
jnp
xor
xchg
dec
dec
cmp
insl
and
and
pop
pop
add
sub
ja
inc
add
fistpll
popa
xor
pop
push
or
in
cmpsl
fnstsw
leave
lock
test
sub
cld
dec
mov
cli
jns
push
add
inc
test
daa
and
ds
in
push
jge
ficompl
mul
mov
rorl
insb
add
hlt
or
sub
cmpsb
push
lcall
push
inc
xchg
adc
xor
mov
cwtl
iret
xlat
push
in
xchg
jmp
xor
or
int3
cltd
xchg
testl
dec
lds
mov
lcall
testl
pop
mov
hlt
sbb
mov
stos
inc
lods
push
push
cmpsl
xchg
push
addr16
xchg
ds
mov
xchg
imull
das
pop
cmp
imul
xchg
sub
aas
cmp
push
xlat
mov
rcrb
lret
dec
add
push
mov
and
cmp
jg
push
jmp
push
cmpsb
ror
inc
jno
jne
or
in
aam
xchg
aaa
xchg
pop
test
lods
loopne
shll
gs
lock
dec
dec
add
ss
outsb
sbbb
loopne
inc
shrl
or
add
mov
aas
std
popa
sub
hlt
mov
int
cmpsl
cs
aad
lock
rol
outsl
int3
pop
call
pushf
sbb
jne
jge
push
ds
enter
int
cmp
ficomps
stos
test
lahf
ret
jnp
bound
cmp
in
xchg
ljmp
sbb
xchg
js
add
sbb
enter
and
jb
mov
mov
leave
out
cmc
adc
scas
inc
push
mov
push
sub
fs
int3
pop
stos
adc
fbstp
stc
out
inc
pmullw
add
lds
mov
das
xor
test
and
lret
loopne
jns
adc
les
lods
mov
stos
loope
sub
adc
inc
fs
sub
imul
sub
push
movsb
mov
repz
mov
enter
fidivl
xchg
fdivrl
je
mov
iret
bound
into
pop
iret
mov
das
aas
adc
and
stc
add
ljmp
xlat
aad
sbb
js
ret
lods
ss
pushl
les
mov
loopne
dec
mov
jecxz,pn
fnstcw
jecxz
dec
popf
xchg
or
adc
outsb
pushf
xor
and
scas
addr16
cmp
fsts
or
xchg
das
xchg
xlat
out
lret
inc
add
and
sub
lods
inc
std
pop
ret
mov
add
aad
pop
xchg
mov
imul
icebp
loopne
adc
and
push
push
pop
shrb
loop
mov
test
test
lret
xorb
push
xchg
inc
movsb
lods
sub
mov
dec
cmc
test
add
push
xchg
pop
jp
mov
fwait
mov
cmpsb
cmp
les
xor
addr16
jmp
xchg
call
call
add
lods
xor
scas
sub
pop
xor
enter
mov
push
sbb
mov
adc
xchg
sbb
js
dec
ret
push
pop
mov
push
mov
sti
inc
pop
push
ret
inc
xchg
aaa
loop
xchg
xchg
jmp
dec
popa
add
pop
popf
add
mov
ja
mov
push
mov
testb
leave
or
sub
pushf
movb
add
dec
mov
push
and
jno
inc
xchg
adc
mov
es
xchg
dec
mov
push
cmp
outsl
and
test
add
jle
subb
rcrb
inc
inc
lcall
inc
decb
ljmp
push
push
lret
imul
add
xor
icebp
add
pop
aad
pop
test
data16
cmp
outsb
xchg
gs
mov
lods
test
cwtl
mov
lcall
movsl
jl
add
mov
lea
push
test
imull
xchg
outsb
daa
or
mov
push
jb
aad
mov
cld
addb
dec
adc
jp
clc
xchg
xchg
or
insb
or
out
inc
das
sahf
lret
jno
les
jl
in
mov
pusha
jg
and
jecxz
pop
sub
mov
pop
bound
adcb
and
cmpsb
adc
cmp
pop
inc
add
cltd
xlat
mov
xor
or
adc
aas
cmpsl
adc
add
mov
pop
cvtps2pd
pop
daa
leave
es
cmp
push
icebp
sub
cmp
ds
popf
fcmovbe
sub
adc
push
push
stos
fidivl
dec
mov
bound
and
sbb
fsubl
fistl
jle
add
mov
pop
sbbl
movsb
mov
test
jecxz
sub
es
call
pop
xchg
imul
add
mov
popf
nop
fdiv
sbb
mov
lods
mov
xchg
jo
pop
subl
je
in
testl
or
cmpsb
popa
push
shr
cmpl
or
jns
aas
icebp
add
hlt
push
sbb
sarb
cmc
ss
cmc
mov
je
subb
sub
inc
insb
lret
fldenv
cmpsl
jo
xchg
xor
pusha
and
lods
and
lret
int3
and
cltd
mov
shll
mov
pop
or
xor
mov
out
sahf
pop
push
push
ret
fsts
xchg
ja
jp
arpl
loope
and
shll
mov
inc
scas
xchg
pop
aaa
mov
clc
jo
shlb
mov
andb
inc
iret
cli
mov
mov
adc
imul
dec
mov
dec
xchg
imul
xor
mov
das
adcl
xchg
pop
sub
fld
jo
iret
cmp
daa
leave
gs
aaa
cld
fiaddl
cwtl
mov
imul
adc
sbb
fmul
jnp
push
scas
divb
in
fwait
loope
cld
outsb
test
mov
dec
mov
imul
lret
fsubrl
ljmp
insb
bound
loop
add
cmp
lds
imul
imul
xchg
nop
cwtl
adc
cmpsb
dec
shll
sub
push
or
cmpsl
fs
aaa
or
push
stc
test
xor
mov
dec
loopne
cmp
mov
bound
push
inc
xor
and
dec
and
xchg
sub
test
pop
in
xchg
mov
push
push
rcll
and
in
adc
jmp
movsb
cmp
pop
sub
pop
dec
sub
repz
adc
divb
xchg
dec
insb
inc
jbe
cwtl
fs
mov
and
sub
sbb
rolb
mov
adcl
fwait
clc
mov
ret
cli
cmp
data16
test
icebp
mov
sbb
clc
bound
in
dec
lret
jmp
or
shl
movl
xor
arpl
nop
lods
outsl
in
mov
and
push
mov
push
mul
xor
sub
decb
daa
and
jbe
out
sbb
lret
cmp
sbb
neg
adcl
ss
test
push
adc
adc
loope
test
divl
das
es
mov
push
mov
jnp
jg
xor
cltd
les
inc
sub
mov
mov
mov
aaa
xchg
mov
sahf
out
jns
outsl
sub
in
cmp
sbb
cs
subb
jecxz
jle
xchg
jae
ljmp
subb
fimuls
sti
fmuls
sti
add
xor
sub
sbb
mov
and
xchg
mov
lds
clc
xchg
stos
movsl
add
or
sbb
ret
insl
filds
mov
sahf
stc
jmp
cltd
dec
pop
xor
pop
mov
aam
jp
dec
push
pop
push
sbb
clc
out
arpl
mov
xorb
aad
imul
cmp
cs
test
mov
gs
cmpsb
int3
push
pop
dec
push
mov
movsb
and
mov
lret
popf
loop
dec
or
push
and
lahf
jbe
xchg
lods
dec
out
popa
push
hlt
jae
lock
mov
scas
cmpsl
push
loope
call
mov
sub
xchg
sbb
lods
testl
xor
cmp
out
push
push
rorb
lods
sbb
push
mov
rclb
cmc
xor
jo
loopne
scas
dec
and
inc
pop
pop
mov
shll
and
sub
sub
xor
sub
arpl
mov
addl
rclb
push
jae
pop
je
xor
aam
mov
jb
pop
test
imul
push
sarb
das
imul
aad
jo
xor
lock
inc
adc
add
jnp
fstpt
aam
call
inc
ss
int3
das
cwtl
repz
insl
mov
outsb
test
or
jno
mov
add
repnz
pusha
lods
push
mov
cmp
jp
adc
xchg
xor
fstl
xchg
jne
insl
inc
sbb
add
ljmp
jno
shrl
mov
mov
dec
dec
cmpsb
push
aas
repnz
out
mov
shrb
mov
imul
push
and
add
jo
pop
fimuls
out
xor
repnz
mov
movsl
cmp
jle
fdivrp
cmp
push
gs
sub
or
inc
ret
jne
sub
and
pop
in
stc
add
fs
jle
mov
cmp
clc
push
test
jns
xor
and
dec
fcom
mov
cmpb
test
leave
imul
dec
sahf
dec
scas
lcall
add
inc
push
out
xor
add
aaa
icebp
push
inc
divb
int3
cs
add
movsl
push
sub
inc
push
fists
adc
out
push
push
and
cmpsl
mov
das
clc
push
push
fcmovb
xchg
subb
sahf
cmp
jp
aas
lock
and
add
popl
jp
xchg
and
xor
jle
clc
test
inc
jns
jg
in
pop
rclb
pop
call
mov
mov
add
std
test
movsl
dec
jge
stos
mov
clc
and
mov
mov
jl
fistl
pause
xor
sub
add
movsb
nop
push
mov
aaa
je
push
aam
fsubrs
cmc
cmpsl
mov
cwtl
cli
insl
pushf
adc
ret
push
sarl
adc
cmpsb
test
or
cmp
divl
lods
cmpsl
mov
adc
or
sbb
xchg
and
push
mov
loope
fsubrs
test
push
sub
out
fmuls
lods
pusha
fmull
mov
mov
inc
daa
rolb
cmpsl
in
jl
and
frstor
addr16
sbb
lods
inc
outsl
push
sub
mov
mov
mov
sar
jp
daa
in
pop
or
xchg
pop
xor
mov
movsb
mov
roll
sbb
fiadds
push
sahf
mov
dec
int3
mov
mov
mov
bound
fcompl
insb
test
mov
ret
jge
daa
mov
mov
jg
inc
jecxz
jle
pop
and
xchg
hlt
lea
outsb
andb
fmull
scas
jne
cmp
pop
rcrb
push
lea
daa
out
adc
dec
adc
push
or
pop
cmp
arpl
shr
mov
shll
outsb
sbb
testb
push
pop
fldt
push
repnz
test
xchg
jl
leave
out
pop
in
jle
sub
xchg
or
mov
xchg
insl
ljmp
cltd
iret
or
aad
mov
aas
or
addr16
icebp
push
pop
cltd
mov
testb
mov
lea
hlt
out
xor
je
dec
lcall
xor
ja
inc
dec
dec
es
and
mov
inc
imull
out
add
pop
mov
xchg
push
cmp
pop
push
inc
xchg
imul
add
stc
insb
lods
push
jnp
or
hlt
push
xchg
movsb
jb
jns
cld
mov
lret
add
sub
sbb
pop
repnz
pop
push
mov
cmc
pop
sbb
andb
cli
xchg
movsb
fwait
xchg
ret
cmp
jo
pop
xchg
dec
pop
or
xchg
mov
stc
repz
adc
xor
pop
rorl
push
xlat
pop
xchg
inc
sub
mov
pop
rolb
mov
pop
loopne
dec
jle
fmull
aam
pop
dec
sub
insl
mov
ljmp
lret
dec
xchg
xchg
daa
mov
and
push
call
push
int3
sbb
mov
out
cs
pop
orb
inc
scas
lock
arpl
mov
cmp
movsl
pushf
test
aad
adc
xchg
aam
jmp
test
dec
jmp
scas
notb
outsl
mov
mov
seta
icebp
popa
stos
cltd
out
mov
and
or
popa
imul
pop
jmp
lods
aas
inc
and
xchg
dec
or
mov
sbb
sub
mov
or
add
pop
aaa
fstp
repnz
and
lret
es
xchg
cmp
jecxz
ret
xchg
push
mov
lret
mov
or
dec
jnp
pop
push
rep
sub
aas
int3
in
cmpb
fldl
shl
loop
stc
push
lods
out
not
fwait
push
in
out
jmp
xor
jne
or
ljmp
sarl
mov
gs
lahf
stos
cwtl
stc
cmp
stc
lock
mov
sbb
cmp
inc
or
je
or
sbb
cld
push
popl
int3
xor
or
add
or
xchg
movsb
add
divl
data16
popf
sbb
cmp
cld
cs
int
push
jmp
fildl
add
es
pop
push
or
out
dec
adc
jg
sbb
inc
es
aad
jb
sti
sub
add
jno
rcrl
aas
movsl
add
or
sub
pusha
xor
mov
and
push
ja
rol
loop
push
or
sti
mov
in
jae
or
fimull
mov
cmp
xor
je
fnstcw
imul
pusha
lods
mov
push
adc
imul
pop
int3
pushf
aas
cmp
repz
push
data16
jo
ljmp
mov
xchg
bound
fs
js
xchg
nop
popf
push
and
dec
fiadds
pop
enter
or
xchg
outsb
cli
mov
dec
and
sbb
sbb
bound
jae
push
orl
mov
pop
inc
mov
push
fadd
inc
mov
dec
pop
outsb
dec
xchg
xor
pop
cmp
add
sarb
mov
inc
nop
push
inc
out
jb
push
in
mov
in
ficomps
scas
pushf
dec
lods
mov
pushf
mov
pop
cmpl
and
jmp
gs
in
call
add
and
or
test
push
pop
test
pop
inc
mov
sbb
pop
mov
and
shrl
adc
inc
sti
mov
bound
mov
in
xor
stos
aad
mov
cmpsb
data16
out
mov
mov
ljmp
hlt
and
xchg
pop
in
xchg
xchg
dec
test
fsubr
mov
mov
stos
adc
jb
push
push
ret
lret
pop
xorb
cmpl
outsb
repnz
mov
arpl
inc
test
mov
lods
cmp
rorb
out
adc
cmpsb
inc
adc
xor
inc
mov
xchg
mov
and
cmp
in
pop
mov
in
mov
xchg
gs
and
inc
dec
xor
iret
push
pop
out
sbb
push
jno
mov
adc
cmp
inc
xchg
stos
adc
je
fldcw
daa
or
adc
repz
mov
out
cwtl
out
int3
mov
out
pop
loope
int
shrb
mov
sti
pusha
and
dec
inc
leave
mov
test
dec
or
push
mov
xor
nop
bound
imul
adc
ret
xor
pop
in
test
pop
or
pusha
ror
add
add
js
jmp
inc
xchg
loop
push
test
out
inc
or
mov
leave
mov
outsb
sub
negl
shlb
out
xlat
out
xchg
setae
out
inc
pop
orb
loope
push
hlt
insl
sub
std
sub
adc
js
xor
xchg
lea
xchg
add
call
xor
insb
icebp
movl
punpckldq
psadbw
push
in
pop
loopne
xor
push
or
addr16
and
push
sahf
hlt
cld
fwait
xchg
push
mov
insb
ja
inc
mov
pop
addr16
adc
cltd
mov
data16
cmovo
test
outsb
dec
and
lods
or
xchg
iret
int
std
out
ret
std
cmpsl
aad
cmpb
pop
push
adcb
xchg
repnz
and
sub
adc
pop
out
mov
and
aad
mov
pop
iret
cli
cmp
cld
inc
je
xlat
hlt
je
jb
mov
adc
fnsave
or
rcrl
div
mov
lods
mov
hlt
pop
ret
mov
inc
xor
adc
push
inc
dec
test
cli
leave
mov
adc
fisttpl
into
sub
shll
sahf
and
pushf
and
lds
mov
mov
bnd
dec
inc
mov
cmp
lds
and
jb
jae
loope
inc
push
pop
xor
jnp
cmp
arpl
test
xchg
jbe
push
and
test
inc
mov
pop
enter
adc
jge
stc
sub
in
jo
dec
add
cmp
repnz
push
nop
cmp
sbb
mov
pushl
nop
inc
sarl
mov
jecxz
ljmp
adc
dec
sbb
cltd
ljmp
fnstcw
stos
icebp
push
ret
sub
mov
cltd
xor
push
mov
gs
add
in
popa
jnp
push
std
or
cmp
push
popa
stos
mov
jne
repnz
es
jecxz
and
ret
call
sub
inc
cmp
adc
ljmp
xchg
dec
rcll
dec
cmc
fdivp
jmp
or
sbb
sub
in
iret
stos
cmp
dec
outsb
sbb
push
iret
pop
cltd
mov
cwtl
cmp
test
cmc
xorl
push
das
fistl
add
neg
icebp
cmp
hlt
mov
lods
mov
lods
dec
dec
ja
mov
pop
fs
mov
mov
movsb
lcall
lods
pop
inc
icebp
clc
mov
jnp
add
jmp
lods
sub
and
mov
outsl
or
inc
pop
and
pop
add
xchg
out
mov
in
mov
dec
imul
xchg
jnp
repnz
into
mov
adc
xchg
xchg
cmp
cltd
pop
cwtl
mov
loope
fsts
xor
clc
cmp
dec
insl
mov
pop
int
dec
jp
pop
aad
pop
mov
leave
jecxz
cmp
jae
push
pop
insb
call
dec
or
mov
stos
or
clc
int3
xchg
test
loope
test
test
and
repnz
dec
jge
cmp
sbb
in
cmp
imul
icebp
push
jle
push
dec
lret
imul
mov
mov
dec
jecxz,pt
lock
and
xor
sbb
dec
cli
call
testl
mov
jecxz
adc
inc
in
or
or
or
cwtl
and
mov
adc
ret
sub
add
outsl
dec
cs
inc
xchg
lds
mov
pop
cld
scas
repz
push
mov
js
pop
movl
aam
std
test
xchg
pushf
repz
sub
mov
sarb
pop
orl
adc
inc
scas
icebp
pusha
inc
loopne
xorb
xor
stc
in
mov
dec
mov
add
and
js
dec
and
clc
arpl
lret
cmp
push
cli
push
js
sub
nop
xchg
mov
pop
in
jb
dec
inc
repz
xchg
imul
push
add
testb
add
lea
adc
js
into
popf
cld
pop
add
mov
sub
int
or
jbe
xor
pop
sbb
add
push
negb
jo
pop
sbb
out
int
inc
mov
inc
push
je
nop
pop
in
pop
dec
sbb
mov
movsb
aas
pop
loopne
aad
outsl
dec
sbb
adc
push
push
sbb
add
add
xchg
mov
cmp
mov
cli
adc
int3
add
sbb
test
mov
insb
and
scas
push
lcall
stos
pop
int
prefetch
or
pusha
hlt
fldcw
or
xchg
adc
and
push
add
scas
jp
clc
int3
inc
mov
cmp
fisubrl
movsl
sub
in
sbb
lods
imul
push
inc
dec
or
daa
cmp
sti
lods
nop
mov
mov
ljmp
sub
add
mov
bound
adc
imul
and
enter
pop
cs
push
lahf
xchg
test
fadds
popf
pop
jmp
in
mov
xchg
jecxz
adc
mov
loop
pop
jns
fwait
mov
sbb
xor
pop
sbb
and
cmp
and
pop
mov
int3
sti
cld
bsf
mov
pop
dec
inc
dec
dec
andl
cmp
pop
mov
out
cmpsl
ret
xchg
add
pop
jl
jb
ss
pop
arpl
xchg
fwait
pop
inc
loope
sbb
cmp
pusha
add
mov
incb
scas
or
jle
xchg
divl
imul
mov
inc
rcr
lret
imul
aas
pop
into
mov
xor
ret
push
out
jno
sti
repz
bound
dec
inc
jno
cmp
dec
xor
cmp
dec
mov
xor
mov
pop
ret
cld
fcmovb
repnz
and
pushf
or
mov
fwait
jb
mov
add
xlat
test
cmp
insb
and
jne
sahf
jecxz
inc
dec
arpl
sub
mov
jl
ficompl
sbb
movsl
xor
xchg
rorb
mov
sbb
cld
fldcw
lea
and
mov
cwtl
notb
lock
pushf
scas
shll
lret
dec
mov
cs
lods
inc
push
call
cmp
aad
jns
push
orl
lret
ret
ljmp
test
cmc
jl
pop
insb
popa
leave
inc
and
cmp
mov
subl
adc
cmpsl
inc
into
inc
stc
cmp
leave
push
gs
mov
adc
sbb
pop
add
shrl
orb
push
cwtl
push
mov
fidivs
jmp
hlt
or
gs
popf
and
jne
pop
mov
outsb
enter
cltd
cmc
mov
adc
sbb
xor
lret
std
mov
lret
xorl
cwtl
adc
cmp
cmpsb
cmp
cmp
mov
repnz
dec
shlb
loope
adc
ja
aas
dec
fsubr
xchg
popa
jo
pop
scas
shrb
push
inc
aas
cld
mov
pusha
sub
adc
out
popf
adc
sub
test
clc
push
inc
rol
clc
inc
adc
jno
push
aam
test
or
cwtl
push
lret
pop
and
js
shlb
in
xchg
imul
jge
xor
add
ret
pushf
xor
cmp
mov
imul
pushf
jno
cmp
pop
lret
push
ret
insb
jp
adc
push
rcr
cmp
popf
mov
push
sub
rcr
out
adc
mov
outsl
popf
xor
cmpsb
jmp
mov
dec
cli
shrb
adc
sub
sbb
or
pop
into
ret
or
sub
and
xchg
mov
stos
pop
outsl
mov
arpl
lahf
inc
push
sub
pop
scas
or
sbb
ret
int3
adc
pop
mov
sbb
jle
ret
testl
mov
shr
mov
push
test
and
test
push
mov
adc
cmp
jmp
jl
adc
ljmp
dec
xchg
mov
mov
jle
hlt
pop
outsb
hlt
lcall
dec
dec
sbb
pushf
pusha
jmp
fdivs
jae
cmpsb
fistpl
mov
or
push
push
push
inc
pop
ror
ja
ja
fldcw
xchg
addr16
mov
into
imul
add
pop
insb
nop
imul
fnstsw
xchg
jp
mov
xchg
imul
cs
scas
inc
sub
je
ds
sub
lret
adc
push
and
into
lea
out
jns
stc
lock
mov
test
adc
mov
mov
sbb
and
push
pop
jge
inc
adc
loope
rcr
cmp
pop
inc
mov
sbb
mov
stos
sub
mov
add
lods
push
cmovs
sbb
sarl
mov
fcompl
inc
xorb
lret
dec
xor
shl
out
adc
cwtl
test
mov
leave
jno
mov
mov
popf
fdivs
dec
cmp
adc
cld
cs
leave
and
lret
push
dec
clc
sbb
mov
cmpsb
mov
or
and
into
cmp
addr16
pop
sub
pop
imul
xchg
inc
lcall
std
je
and
fcomi
inc
or
adc
pusha
pop
mov
push
cld
add
lea
cmp
xor
inc
mov
sub
hlt
xor
mov
aad
mov
and
pop
fisttpll
fsubl
push
pusha
xor
add
add
pop
sbb
dec
xchg
insl
clc
stos
fsub
add
clc
pop
in
push
lret
test
mov
loop
add
cltd
sub
lods
sbb
andb
jle
cmp
int
icebp
mov
loope
pusha
orl
enter
and
sbb
inc
adc
sbb
cltd
mov
push
lea
cs
je
lods
or
push
push
and
ret
out
jne
cmp
add
leave
dec
popf
rclb
test
adc
lret
dec
sahf
ret
dec
xchg
push
jns
popf
add
dec
out
out
mov
mov
sub
sub
cmpsl
adc
inc
pop
fs
daa
jo
dec
arpl
push
mov
push
in
dec
pop
xchg
bound
leave
or
pop
and
movsb
inc
xchg
or
shl
shll
xchg
push
mov
or
fs
stos
cmp
jo
roll
mov
jle
imul
sub
into
sub
add
shll
lea
cmc
dec
sbb
fiaddl
jl
mov
mov
rcll
inc
lods
push
fimull
imul
add
add
ret
sub
adc
sbbl
cmpsb
pop
fidivs
push
lret
jb
jmp
les
push
addr16
inc
or
shrb
mov
add
sbb
mov
dec
loop
divl
leave
in
imul
jge
mov
add
sti
and
push
mov
inc
mov
outsl
into
and
aaa
mov
scas
lahf
jmp
pop
sub
add
mov
mov
repz
fwait
in
cmc
pushf
xchg
push
stos
mov
out
movsl
mov
adc
xchg
xchg
ficomps
push
add
popf
movsl
sub
aaa
jno
int3
test
sub
mov
roll
mov
ljmp
and
movsl
popf
xchg
fldcw
repnz
and
cmp
movsl
cld
jg
in
movsb
popa
dec
dec
jbe
fadds
pusha
dec
push
imul
adc
repz
and
jnp
adc
fs
jb
int
inc
adc
out
mov
xchg
adcl
leave
std
mov
test
pop
jb
sub
std
hlt
cmpsb
jle
add
mov
fwait
idivl
push
and
cmpsb
mov
add
sub
xchg
fcoml
xchg
push
add
fists
mov
cmp
lds
outsb
jns
push
xchg
out
in
xor
mov
rol
cs
movsb
aas
sbb
cmp
addr16
ljmp
mov
inc
inc
cli
add
mov
mov
push
add
jl
ss
lret
sahf
mov
std
add
add
cmp
and
pop
xor
arpl
add
push
inc
ret
test
xchg
xor
dec
and
push
in
cs
shlb
cmp
lock
cli
jl
shl
xor
pop
xor
push
inc
and
push
je
int3
push
mov
push
scas
lods
jp
std
scas
dec
mov
xchg
adc
cmp
sbb
cltd
mov
xchg
mov
jge,pt
movsl
push
add
fisttpl
frstor
outsb
loopne
iret
pop
hlt
dec
push
pop
mov
adc
jmp
add
mov
fwait
sub
pop
popa
lods
or
sub
sbb
and
stc
fnstsw
mov
test
fwait
or
add
mov
push
jo
add
pop
mov
pushf
dec
pop
repz
test
mov
aad
pop
pop
leave
push
cmpsl
xchg
fldt
dec
mov
addl
mov
push
cltd
inc
sar
inc
xor
int3
xchg
dec
scas
cltd
adc
sub
mov
xchg
in
xor
sub
push
js
lods
aad
and
lock
mov
dec
aam
sub
xor
xchg
inc
popf
push
test
je
push
fistl
enter
sbb
jae
xchg
lcall
mov
in
inc
dec
inc
or
or
popf
adc
mov
sub
push
pushf
ds
jmp
xchg
xorb
sbb
pop
outsb
out
fwait
int3
iret
out
ss
adc
jg
pop
sbb
sti
enter
xchg
mov
jo
int
mov
js
sub
movb
loope
pop
xchg
rolb
adc
xchg
and
pop
scas
cltd
push
xchg
sub
mov
call
and
out
shrb
xor
fidivs
arpl
pop
pop
int
into
adc
jo
push
push
popl
mov
jge
ret
sub
add
xchg
stos
jmp
cwtl
jge
mov
ficompl
inc
aas
adc
orl
lahf
push
inc
jg
cmpsb
push
insl
mov
cmp
outsb
xor
sbb
add
aas
and
fdivrl
xor
and
fsubl
ja
jb
xlat
shrl
mov
mov
mov
lcall
dec
dec
sub
or
push
inc
sub
xchg
in
push
sahf
push
xchg
add
loopne
sbb
inc
xchg
mov
pop
jle
jg
hlt
push
sbb
imul
lods
jns
mov
mov
sahf
xor
lcall
int
mulb
test
inc
stc
in
xor
imul
push
inc
int
push
mov
ds
and
js
jae
insl
and
push
mov
in
xchg
addr16
pop
jb
call
and
imul
cmp
int
popf
movsb
lods
or
pop
loopne
xchg
sbb
cmpb
dec
test
insl
cli
cld
sbb
add
es
leave
lods
mov
mov
dec
inc
jns
loopne
cmp
repz
hlt
mov
sar
decl
mov
dec
fwait
jb
int3
fcmovnbe
loop
addr16
xchg
add
out
jecxz
cld
inc
sahf
push
mov
cmc
mov
lock
mov
rorb
push
shll
sbb
and
xchg
inc
inc
dec
xchg
outsl
cltd
out
inc
and
mov
cmp
push
lods
hlt
shrl
sub
ror
xchg
pop
pop
out
mov
cmpsb
push
roll
mov
pop
jae
mov
loope
push
fnstcw
outsl
pop
jb
sahf
xchg
mov
pop
pushf
lock
cmp
icebp
sbb
inc
add
xchg
jo
test
dec
jno
jle
xor
btr
in
jmp
mov
pop
rcrl
xchg
pop
sbb
jns
and
notl
jno
mov
push
scas
dec
data16
fsubrl
pushl
jecxz
pusha
mov
fstp
fadd
jo
jo
lret
fisubrs
in
mov
xchg
or
pop
mov
cmp
inc
mov
js
jo
insb
push
push
loope
pop
mov
jle
mov
loop
sahf
sub
push
in
or
mov
fisttpll
test
adc
mov
cmpsb
pushl
jo
call
stos
sahf
or
test
stos
loopne,pn
xor
xchg
loopne
jne
mov
notl
stos
jne
pop
aad
push
daa
mov
mov
or
cmp
cmpsb
fsubs
push
fbstp
sub
iret
pop
lret
das
adc
pmaxsw
sbb
adc
adc
mov
cmc
adc
jmp
xchg
lods
insl
dec
nop
mov
push
adc
xchg
push
rcl
clc
stc
test
out
movsb
fidivs
nop
insl
cwtl
mov
imul
or
jecxz
cmp
outsl
inc
ret
inc
fidivrs
dec
popa
or
cli
push
dec
push
sbb
loope
xor
cmpsb
pop
sub
mov
bound
xor
movsl
icebp
cli
mov
cmp
jle
inc
ljmp
push
cmpsb
insl
xor
mov
test
loopne
mov
jecxz
sub
test
xchg
cltd
sbb
in
shl
int3
sub
push
aaa
pop
mov
movsl
xchg
push
movsl
mov
xchg
or
out
or
mov
or
iret
sti
das
jb
gs
pushf
ficomps
popl
jmp
shl
sbb
aam
notb
sbb
subl
pop
jno
add
int3
push
cld
xchg
pop
xor
incb
fdivrl
addr16
push
push
add
fcompl
call
push
cli
push
jno
enter
sbb
pushl
mov
lea
jo
mov
test
sbb
sub
bound
cmp
push
arpl
lods
add
pusha
icebp
pop
andb
loop
movsb
push
and
jp
aaa
xor
cmpsl
lds
cmpsb
push
jae
imul
js
enter
ljmp
mov
xor
clc
faddl
or
sti
test
xlat
cmp
xlat
push
shrb
pop
test
fldpi
or
cmp
sbb
inc
mov
cmp
daa
xchg
jnp
mov
fdivs
mov
or
pop
jg
mov
in
pop
cmp
cltd
add
xchg
jbe
pop
fsubr
insb
mov
add
inc
loope
fstps
rcrl
jecxz
adc
les
hlt
jnp
dec
jl
je
dec
lds
cmpsb
popa
inc
adc
clc
or
sub
mov
push
clc
ds
jecxz
or
in
mov
scas
lea
adc
and
insl
sbb
stc
mov
in
scas
mov
mov
cli
pop
test
adc
mov
push
data16
popa
dec
jo
or
jecxz
cmpsl
cmp
inc
fists
inc
jo
ljmp
jbe
xchg
cltd
fldenv
and
decb
cs
outsl
inc
mov
lea
mov
mov
jmp
adc
rcll
push
adc
push
imul
lds
dec
addr16
jne
mov
fcoml
sbb
and
test
fwait
cmp
dec
jb
pop
jle
dec
out
cld
dec
jl
pop
scas
cmpsb
mov
cli
ss
xchg
in
cltd
or
push
mov
inc
xchg
clc
xchg
jl
lea
sub
add
jnp
mov
mov
jnp
fcmovnbe
jecxz
gs
or
idivl
insl
inc
aaa
ficoml
pop
orl
sub
imul
into
cli
repnz
ljmp
jb
cwtl
add
xchg
adc
std
jns
mov
push
add
cltd
dec
mov
je
cmp
or
nop
daa
aad
xchg
xchg
and
bound
aaa
arpl
into
aam
cmpb
or
lcall
mov
jmp
or
or
les
nop
mov
mov
lods
xor
dec
mov
dec
and
stc
inc
mov
xchg
and
repz
fdivs
add
push
fwait
and
pop
fisubs
movsl
adc
mov
mov
lock
adc
loopne
xchg
mov
fadd
adc
dec
and
cwtl
sub
mov
add
stc
outsl
push
xorb
fsubp
repnz
cmp
or
ds
icebp
jle
daa
fstpl
pushf
mov
push
stc
subl
cwtl
sti
out
shlb
cmpsw
sahf
dec
mov
mov
daa
sub
cltd
mov
and
push
lods
cmp
xor
mov
cld
jno
cld
shll
sarl
ja
mov
adc
lods
mov
repnz
jno
xrelease
out
xchg
and
dec
pop
and
xor
sub
cli
inc
add
xchg
mov
sbb
pusha
sub
lock
sub
sbb
xor
clc
adc
mov
or
push
cwtl
push
inc
lret
pop
push
push
push
jge
mov
pop
scas
push
repz
lock
scas
sbb
mov
cmpl
in
mov
dec
ja
out
mov
std
jae
lods
roll
ret
and
adc
xchg
pop
pusha
scas
sub
jl
mov
push
pop
adc
imul
mov
ss
mov
or
sarl
mov
pop
xor
and
cmp
out
xorl
lods
aad
mov
push
les
iret
fdivl
xchg
je
xchg
adc
pop
popa
mov
sub
int
xor
push
sub
popa
xchg
cmc
mov
pop
pop
mov
ljmp
pop
mov
std
push
out
lods
jecxz
jmp
cltd
add
mov
sub
adc
xorb
mov
cs
or
in
mov
out
sbb
and
insl
xor
cmp
inc
popa
dec
movsb
push
fstl
xchg
add
cmpsb
pusha
addb
dec
nop
mov
push
cmp
fistl
adc
fldt
rcr
in
adc
xchg
xchg
pusha
jl
xor
fadds
push
sbb
mov
mov
lahf
jle
xchg
mov
movsb
cmp
leave
mov
in
ss
push
dec
dec
fistl
fists
ss
fidivs
xor
std
inc
test
inc
mov
xor
dec
xchg
xor
call
cwtl
pop
mov
adcb
push
popa
dec
scas
xor
cmp
jb
out
fmuls
or
in
mov
ret
loope
mov
adc
stc
push
ret
lods
emms
pushf
sbb
les
rcrl
call
out
cli
aas
mov
jp
fdivrl
sbb
inc
inc
imul
cmp
push
sbb
filds
xor
sbb
and
dec
xchg
fbld
in
pop
pop
and
stos
add
or
scas
call
xchg
addr16
push
mov
roll
pop
outsb
and
shl
sub
jbe
fcompl
push
test
lds
and
sti
fldt
push
cmp
lcall
sbb
jge
sub
push
cmp
cmp
and
js
scas
pushf
gs
jns
push
in
ss
jo
push
cwtl
inc
clc
push
rcrb
data16
repz
outsb
mov
mov
adc
iret
pop
rclb
or
jb
loopne
jp
sti
jle
std
sbb
mov
jb
push
pop
pusha
push
int
idivb
jb
nop
jecxz
mov
int3
xchg
popa
add
int
test
in
dec
lea
adc
jge
jnp
mov
lret
or
jecxz
pop
sbb
mov
cmpl
inc
pop
leave
jno
setb
add
test
lcall
jo
inc
fcoml
push
xor
mov
jae
fwait
adc
inc
mov
insb
pop
notl
jp
jmp
and
into
lret
aam
or
sti
outsl
mov
mov
out
nop
sbb
push
sub
call
cmpxchg
mov
imul
dec
sub
adc
sub
insl
inc
push
mov
adc
xchg
or
or
cmc
xchg
fadds
cli
orl
inc
and
sub
sub
mov
inc
pushf
push
movsl
add
dec
inc
cmc
stc
cwtl
ss
sbb
icebp
push
push
jno
test
iret
pop
adc
lret
scas
sti
orb
jle
mov
or
dec
lods
pop
mov
fists
pop
sbb
gs
sub
imul
test
cltd
std
mov
push
add
add
mov
or
in
pop
flds
add
push
fidivs
sub
inc
cmp
daa
push
fstl
mov
push
aam
jae
mov
cmp
xchg
add
or
pop
push
add
mov
mov
sub
pop
cmp
xchg
add
scas
pop
stos
imul
sbb
cmp
leave
aam
jno
rol
in
xor
and
xor
add
fwait
mov
sahf
into
inc
scas
out
adc
ss
inc
push
cmpsl
or
inc
add
mov
adc
add
lahf
iret
dec
out
pop
das
fiaddl
cs
xor
and
pusha
jns
push
stc
jae
jb
gs
aaa
or
loope
std
push
icebp
sarl
sarb
scas
or
movsl
add
fsub
je
mov
push
inc
jae
outsb
sbb
int3
push
mov
pop
bound
sub
mov
mov
lods
and
jp
sub
sub
mov
jmp
sub
repz
sbb
cmp
inc
push
inc
fcoml
data16
std
mov
pushf
mov
sbb
out
pushf
outsl
cltd
bound
cmpl
popf
pop
dec
orl
mov
xchg
mov
roll
pop
and
in
dec
icebp
xlat
mov
std
push
es
movsl
dec
scas
and
out
pop
fstl
gs
sbb
add
push
and
fucomp
shl
push
cld
pusha
mov
cmc
jb
les
jo
xor
in
cmpsl
in
or
xor
outsb
stos
sbb
clc
gs
movsl
push
clc
into
xchg
repnz
cmp
mov
jle
dec
enter
shll
jne
dec
inc
mov
test
add
and
ret
jne
cmp
mov
lahf
mov
jnp
cmpsb
es
xchg
addr16
pop
in
loope
mov
repz
push
cmp
push
movsb
add
add
cmp
mov
mov
mov
mov
into
xchg
xchg
and
into
push
pop
push
sub
add
insb
sub
dec
dec
andb
cmp
xchg
sub
lds
into
mov
push
lcall
inc
das
popa
mov
add
movsl
push
and
inc
mov
pop
xchg
jnp
les
ret
pushf
scas
repz
sub
jns
loopne
pop
fcmovnu
aas
pop
lock
out
mov
xlat
adc
icebp
mov
ds
pop
or
clc
mov
std
cmc
lahf
inc
lret
sahf
lods
scas
pmuludq
inc
sahf
fbstp
es
or
cmp
mov
aas
mov
mov
imul
mov
jo
push
xor
xchg
sbb
imul
repnz
cmp
adc
icebp
xchg
fs
loopne
loop
adc
fs
lret
out
lock
jns
xchg
andl
sub
and
xlat
adc
lock
inc
fcmovne
and
ss
inc
adc
inc
pop
into
adc
jae
xor
jl
xor
xor
aad
ss
jnp
fimuls
dec
sub
fnsave
sbb
jge
xor
push
jg
pop
fstpl
jbe
daa
pop
inc
xchg
mov
aam
jg
lock
and
rcll
inc
lahf
popw
push
mov
mov
mov
dec
inc
stos
jno
sbb
std
adc
shl
testb
dec
pop
lret
loop
add
jne
aad
negl
aam
jnp
es
jne
imul
rorl
inc
lahf
mov
sub
lods
mov
leave
mov
xchg
sarb
pop
pop
inc
cmpsl
inc
das
xchg
adc
mov
adc
lock
lret
pop
inc
iret
adc
inc
sub
mov
xchg
cmp
adc
ja
jecxz
fdivs
and
add
mov
xor
inc
mov
pop
daa
cmp
sub
push
pop
out
bound
stos
repnz
add
sbb
sbb
push
gs
cmp
push
stos
scas
std
sub
xchg
inc
lahf
sbb
inc
stc
mov
fcmovnb
push
popf
jecxz
movsb
inc
repnz
roll
push
aas
shrl
fs
and
stos
out
jmp
fs
mov
jb
inc
lcall
and
inc
ret
imul
shl
lods
testl
insl
fs
out
cmpl
add
repz
mov
es
aaa
cs
je
adc
cmp
aas
mov
idivl
add
or
sahf
pushf
xor
bnd
dec
dec
ljmp
ljmp
jae
or
int
pop
adcb
adc
push
pop
mov
test
mov
int3
jnp
dec
push
cmp
push
cmp
jae
icebp
es
cmp
add
mov
mov
jo
fistps
cmc
arpl
fisubrs
sub
lcall
dec
and
mov
adc
push
iret
or
fwait
in
icebp
ficoml
shr
and
mov
ret
pop
push
dec
movsl
lret
bound
pop
push
mov
or
outsl
sub
adc
int
xchg
cmp
loope
cli
pushf
dec
adc
sti
sub
pop
lods
push
andl
jno
jnp,pt
push
mov
aad
flds
mov
int
xor
and
mov
dec
mov
pop
cmc
popa
dec
xor
daa
adc
leave
xlat
dec
cmp
jge
aam
pop
adc
loop
mov
mov
sbbl
pop
jge
lods
lret
fbstp
xchg
loope
lods
in
mov
iret
incl
inc
roll
fmuls
cld
repz
lahf
dec
fildll
pop
pop
jl
xor
dec
lahf
cmp
sbb
mov
jbe
adc
pop
fstl
scas
repnz
popf
outsb
nop
push
push
stos
out
bound
out
loopne
ret
cs
lea
mov
sbb
les
lret
js
sub
icebp
sahf
lock
push
push
shlb
das
fidivrs
pop
jae
push
sbb
test
test
mov
sbb
sub
adc
lret
or
lds
rorb
lock
jp
mov
xchg
fsubs
cmp
outsb
adc
mov
rcll
idivl
cltd
xchg
repz
sub
mov
or
xchg
daa
aam
mov
push
or
fwait
mov
das
pop
lahf
sub
aas
repz
cmp
cs
pop
xchg
cli
test
xor
xchg
loope
adc
dec
into
and
pop
jecxz
cld
fwait
mov
sub
mov
jge
in
push
lods
push
xchg
push
ror
cmp
lahf
inc
or
xor
inc
xchg
mov
push
pop
or
repz
ret
in
jg
sbb
pop
cmp
ror
jne
idivb
clc
pop
rcrb
repnz
out
jns
push
cltd
mov
cmp
into
lods
xor
stos
pop
cmc
insl
sub
jns
mov
fldcw
je
xchg
sub
sbb
lret
xchg
mov
adc
int
xchg
repz
mov
and
sub
dec
jo
xchg
add
fnstcw
and
jb
sbb
and
rcl
ss
sbb
dec
ds
jecxz
nop
nop
call
xorl
dec
jno
addr16
aad
and
inc
aad
leave
pop
imul
cmpsl
mov
pop
mov
out
dec
mov
mov
and
sbb
and
roll
and
sti
jbe
cs
aam
adc
dec
sarb
hlt
cld
fcomps
faddl
pushf
adc
mov
rcrl
movsl
lds
mov
inc
mov
sbb
outsl
adc
lret
xchg
mulb
movsl
ds
in
xchg
jae
out
negl
xchg
loop
xor
jl
out
dec
into
push
in
xchg
jecxz
inc
mov
daa
xor
dec
out
rcll
cmp
scas
push
es
push
jp
negl
and
cwtl
mov
dec
mov
push
dec
and
iret
pop
jge
jb
faddl
sub
cmc
add
xor
jbe
and
push
insl
mov
add
cmpl
in
test
ja
or
mov
and
mov
inc
mov
loopne
call
fnsave
lods
lcall
popf
push
or
sbb
adc
adc
in
add
push
movsb
rorl
dec
push
xchg
test
cmp
adc
mov
stos
add
loop
mov
stos
popa
aas
fs
out
in
stos
pop
in
adcb
dec
leavew
aam
aaa
addr16
jne
pop
sbb
ret
add
mov
int3
and
jl
xor
xor
ja
shll
cmpl
sbb
mov
leave
sub
mov
add
mov
add
bound
aam
addl
add
outsb
negl
push
adc
lahf
pop
pop
xor
mov
jbe
call
dec
nop
and
xchg
and
es
in
inc
cmp
push
iret
jo
aas
xor
inc
push
inc
inc
mov
movsb
out
jae
inc
xchg
and
arpl
in
jo
adc
jno
cmc
jp
mov
dec
xor
icebp
cmp
call
fmul
add
pop
adc
sub
lea
in
lahf
shll
call
cmp
shll
insb
mov
mov
popa
jmp
repz
fstpl
shrl
stos
imul
jle
mov
sbb
mov
fs
pop
xor
sbbl
pop
int
std
pop
fistpll
xchg
push
sub
fldl
sub
roll
jp
out
fidivrs
cltd
adc
pop
imul
push
inc
repnz
je
jb
into
ja
dec
movsl
call
gs
jnp
xorb
jl
iret
pop
mov
int
sbb
mov
mov
mov
lods
fdivp
mov
popa
cld
fcmovbe
inc
ja
dec
xchg
das
fsub
mov
repz
inc
in
in
arpl
fsubl
fistpl
or
jp
sbb
mov
shr
or
push
addr16
scas
or
es
gs
es
jle
and
add
xlat
xor
mov
adc
aam
fisttps
cltd
add
es
out
adc
mov
mov
int
iret
orb
ret
imul
data16
add
fbstp
pusha
push
push
out
mov
movsb
addr16
cli
and
cmpsl
add
add
xlat
lret
mov
push
sub
inc
shl
fbld
xorl
out
xor
mov
xchg
fucom
imul
aaa
mov
dec
addl
lods
mov
push
clc
fs
xchg
push
cmpsl
push
in
ja
ret
adc
push
add
jle
call
sub
data16
lahf
pop
bound
movsb
stos
fs
mov
mov
xchg
sbb
mov
and
sti
ret
jecxz
insb
xchg
dec
mov
cmp
hlt
push
lahf
sbb
cmc
inc
sub
jl
paddusw
movhps
daa
lahf
aad
popf
loopne
mov
fsubrs
test
or
dec
push
xchg
sahf
div
cltd
pop
call
mov
pop
inc
xchg
enter
pop
fldenv
lods
repnz
mov
dec
lret
stos
pop
adc
push
jne
cs
inc
fmull
cmc
cmp
insb
ret
mov
pop
cmp
das
popa
cmp
aas
and
or
pop
jno
je
push
imul
mov
or
pop
pop
cmp
aas
gs
dec
sub
cmp
insl
cmp
mov
xlat
movsb
aaa
insb
lahf
ret
mov
cli
lods
in
insb
sarb
lcall
and
in
lds
add
mov
mov
inc
push
mov
lret
dec
imul
out
pop
jmp
mov
and
aaa
popa
or
loop
push
stos
bound
cli
push
aaa
add
inc
jns
add
mov
lods
hlt
pop
add
sbb
cmp
mov
push
repnz
ret
aam
add
pop
inc
adc
mov
push
popf
ret
xchg
inc
es
or
jo
sbb
pop
mov
dec
rclb
cmp
mov
push
cs
inc
jmp
adcl
call
loope
or
test
sbb
sbb
push
cmpsl
cmp
sub
mov
hlt
adc
inc
shr
das
mov
and
gs
mov
shrl
cld
repnz
ret
in
idivl
mov
push
or
fnsave
cwtl
inc
push
mov
mov
frstor
xor
xchg
lret
call
xchg
or
lds
mov
pop
cmp
mov
das
out
loopne
mov
push
cs
negl
mov
leave
stos
lods
test
add
mov
fldl2t
cmpsl
pop
hlt
lret
cmpsl
adc
scas
xor
add
sbb
outsl
mov
mov
out
mov
mov
dec
mov
lcall
int
call
in
aam
cmp
scas
movsl
xorb
sti
arpl
popa
test
out
sub
ret
xchg
lea
push
mov
jno
mov
and
dec
jmp
or
bound
jg
lret
shl
shr
xor
incl
es
xor
inc
sbb
push
cld
dec
push
push
std
fists
fmull
ljmp
xchg
pop
addl
inc
sti
xor
jae
cmp
push
pop
add
add
adc
xchg
je
push
in
mov
jge
jle
xor
inc
js
and
movsb
popf
jne
cmpsb
dec
outsb
shll
popa
js
cld
mov
dec
lea
jae
pusha
insb
sahf
mov
jbe
lods
ret
outsl
les
xor
cmpsl
mov
inc
pusha
mov
jno
mov
cmp
jnp
push
pop
mov
int
fistpll
fbld
outsb
or
lcall
push
rcrb
aam
xchg
push
sbb
jp
push
adc
cs
sub
outsl
add
cmp
popa
rcrl
or
std
sbb
or
pusha
mov
push
int3
lret
imul
sbb
inc
mov
mov
and
jmp
adc
es
daa
inc
lods
add
test
addr16
dec
xchg
mov
jle
dec
mov
push
lds
mov
fstp
mov
dec
aas
inc
adc
inc
xchg
nop
or
xchg
sbb
dec
movsb
mov
inc
xor
add
mov
cmc
sahf
pop
push
adc
xor
adc
pop
cltd
lea
xor
and
lock
stos
loope
popa
jg
xchg
lods
sub
add
and
sbb
mov
iret
sub
faddl
scas
out
xchg
aad
mov
ret
call
push
pop
scas
sbb
loop
add
imul
nop
mov
ficomps
pop
jnp
push
fwait
mov
int
ret
dec
aaa
mov
dec
xchg
xchg
mov
fstps
insb
xor
xlat
mov
arpl
adc
add
out
xlat
inc
test
mov
loop
xor
xchg
loope
inc
mov
xchg
pop
mov
aas
nop
fiaddl
xor
jno
fcomps
test
leave
or
mov
jb
icebp
pop
jbe
testb
dec
xchg
sub
cli
in
std
iret
or
int
mov
xor
mov
pop
mul
iret
in
hlt
jne
icebp
leave
jmp
fidivrl
xchg
mov
add
pop
sbb
por
xor
loopne
rcrb
pop
push
adc
out
out
push
sub
cmp
aaa
cmc
mov
inc
outsb
cmpsb
sar
mov
stos
jg
clc
dec
pop
dec
adc
push
dec
cmc
loopne
daa
arpl
out
inc
mov
xlat
pop
lahf
ljmp
popa
cltd
sub
cs
adc
inc
sub
lods
sbbl
loopne
jp
xchg
pop
xor
jo
jge
push
popl
mov
inc
in
bound
and
adc
rcr
movsl
xor
jmp
jg
icebp
addb
add
xor
test
inc
movsl
xchg
scas
xchg
leave
mov
xchg
cmpsl
xor
jne
push
sti
push
jae
mov
jb
rcll
inc
adc
cmp
cmp
and
pop
lock
insl
imul
nop
push
andb
sbb
jns
adc
sub
push
xchg
sets
mov
pop
aam
inc
popa
add
shll
es
mov
iret
repz
clc
jnp
popf
mov
mov
hlt
pop
xor
xchg
stos
loopne
dec
lds
sbb
out
cmp
cmpsb
mov
out
or
mov
pop
or
in
sub
fsubl
outsl
loop
mov
dec
inc
lcall
push
mov
mov
ds
fwait
insb
es
mov
in
sbb
and
bound
idivl
push
in
push
sub
or
les
xchg
mov
jmp
push
or
push
les
fs
cmpsl
mov
add
movsb
in
aad
add
add
pop
push
popa
ljmp
add
mov
sub
sbb
addr16
out
xor
cmp
bound
aam
inc
cld
repnz
jne
stos
dec
push
vshufps
int3
jns
pop
ljmp
sub
mov
mov
push
orl
test
aad
mov
inc
push
mov
scas
movsl
jg
cmp
flds
lea
into
push
daa
and
sbb
movsl
push
push
xchg
xor
mov
add
ss
dec
dec
ret
cmpsl
inc
mov
sbb
aam
dec
loope
cmp
test
and
cmpsb
in
popf
or
adc
inc
adc
add
in
mov
int3
xor
jl
jge
and
subl
sbb
lea
or
xor
adc
aaa
fisttpll
into
and
aam
inc
idivl
out
lods
xchg
mov
mov
xchg
sub
popf
jnp
icebp
mov
xchg
pop
mov
imull
mov
test
lods
sub
lret
mov
or
pop
mov
out
daa
and
subb
imulb
loop
jno
push
daa
roll
lcall
dec
fcoms
stos
mov
loop
sub
push
divb
orb
cltd
rolb
and
and
cmc
mov
xchg
aam
mov
dec
es
mov
jnp
cmp
cmpsl
mov
push
mov
and
mov
sbb
cmp
add
loope
mull
fs
ss
adc
insl
cmp
shl
pop
daa
adc
xor
sbb
and
pop
mov
lds
mov
mov
xchg
jb
mov
dec
test
sub
or
pop
lahf
rorl
std
sbb
mov
adc
pusha
jb
je
test
inc
adc
inc
inc
out
movl
fcoml
cmpsb
and
cmp
mov
mov
inc
jle
fs
arpl
ret
cmp
fwait
out
cmp
dec
adc
mov
or
pop
adc
je
inc
lods
sbb
xor
xchg
or
sub
decb
mov
leave
hlt
mov
sub
pushf
out
pop
jbe
push
dec
sub
push
adc
in
les
popf
lcall
in
lds
inc
mov
jmp
dec
dec
testl
adc
push
shrb
fldenv
insl
jecxz
int
dec
xchg
push
xor
xchg
sti
inc
adc
das
mov
rcrl
ds
nop
add
xchg
xchg
pop
jecxz
jg
dec
add
or
cmp
inc
and
cmp
out
insl
stos
les
mov
sbb
or
in
jmp
dec
fistps
mov
fnstenv
pop
push
mov
icebp
jae
out
test
aad
sub
addr16
and
mov
loop
sub
adc
or
cwtl
psubb
dec
out
jp
cmpl
negl
mov
mov
and
push
and
shll
adc
inc
call
into
and
in
xorl
jmp
lret
cwtl
inc
pop
movsl
dec
movsb
dec
adc
and
sbb
cmp
jae
pop
inc
push
sub
jecxz
add
ljmp
or
imul
imul
mov
sub
movsl
push
xchg
dec
pop
cld
lds
mov
fdivrl
cli
cmp
inc
mov
mov
mov
mov
cmovnp
aas
icebp
sbb
dec
lock
cld
insb
imul
in
mov
push
outsb
sbb
add
imul
rorl
xchg
cmp
mov
std
ror
sub
setge
pop
or
push
mov
lock
jnp
dec
adc
mov
aas
mov
out
add
push
clc
jp
jno
xor
inc
lock
pop
rol
xchg
push
scas
dec
dec
mov
lahf
sbb
out
mov
xor
inc
ret
aas
arpl
jne
fistps
pop
imul
push
out
mov
push
pop
jl
dec
push
adc
cmpsb
cmp
mov
repnz
std
flds
inc
mov
scas
and
sbb
mov
mov
mov
call
inc
add
cmp
inc
filds
or
jl
inc
jns
ja
into
and
les
cmp
or
add
adc
int
sub
nop
jnp
add
lods
rorb
inc
jns
std
notb
das
add
mov
sub
nop
push
stc
sbbb
pop
push
push
cwtl
sub
xor
scas
and
cmpsl
orb
dec
call
and
insb
sub
fdivs
cmp
mov
fstpl
cli
repnz
popa
xchg
data16
aad
loop
test
xchg
jbe
push
fs
fdivrp
fildl
xchg
aam
gs
ret
ljmp
sbb
cli
and
push
andb
and
mov
loope
jmp
out
xor
test
adc
and
inc
leave
adc
cmp
push
shr
sar
test
add
int3
das
xor
cmpsl
xchg
lock
push
cmp
push
jmp
push
addr16
shll
in
dec
add
movsl
mov
mov
ret
les
pusha
lahf
push
pop
imul
stos
mov
pop
sbb
cmpsb
arpl
jno
jo
outsb
mov
push
xor
cltd
call
or
jmp
sarb
inc
pop
ret
or
out
jmp
mov
ret
and
cld
addb
scas
or
pop
push
mov
cmp
add
pop
call
stos
ja
subl
dec
sub
testb
xchg
xor
lret
insl
lret
jo
bound
mov
fisubrs
fstpt
pop
mov
sub
fldl
dec
sbb
jne
mov
mov
int
inc
loop
push
mov
or
or
or
repnz
pop
add
xchg
lock
mov
test
pop
mov
fsub
cmp
add
lock
mov
or
jbe
mov
jmp
daa
rolb
jge
or
xor
icebp
hlt
adc
cmc
xchg
hlt
icebp
jno
pop
cmp
xor
in
popa
xchg
sub
ret
les
lock
insl
arpl
addr16
dec
pop
popf
iret
lahf
mov
sbb
out
or
cmp
test
movsb
imulb
iret
cmc
pop
iret
jge
cwtl
add
push
inc
iret
jb
push
xlat
lret
jecxz
clc
jmp
push
adc
jg
push
aam
mov
into
cmp
rcrl
add
xchg
cmp
movsl
outsl
xlat
es
inc
int3
add
cmpsb
aas
adc
fstpl
adc
or
stc
test
add
sarb
ds
scas
adc
sahf
cmp
cmp
sbb
and
rcr
mov
sub
dec
mov
dec
les
icebp
nop
sahf
je
and
cmc
stos
loopne
in
shrb
add
repnz
mov
dec
das
cmp
lret
idivl
xchg
inc
mov
in
inc
cld
andl
arpl
dec
lods
adc
adc
pop
in
aam
inc
dec
or
nop
xchg
inc
xchg
popa
cmp
repnz
jmp
mov
adc
out
nop
outsl
pop
cmp
jmp
es
xorl
pop
fmulp
xor
cmc
pop
add
add
enter
mov
fcomp
xor
push
popa
addr16
xchg
mov
sub
sub
pop
std
push
xchg
enter
out
cli
sbb
inc
mov
xchg
mov
loopne
incb
jnp
xchg
pop
mov
pop
push
aam
ja
sub
mov
dec
out
aad
decl
mov
aaa
daa
lret
mov
shlb
mov
das
pop
push
movsb
xlat
ja
add
imul
xchg
xor
repnz
xchg
iret
mov
clc
dec
push
push
mov
fs
push
in
neg
xor
xor
aas
xchg
pop
pop
inc
jbe
out
int3
popa
push
or
xchg
mov
mov
insb
jecxz
outsl
clc
pop
fwait
aaa
push
and
rorl
adc
fsub
cltd
pusha
test
jle
pmuludq
pop
out
scas
push
add
test
call
daa
std
aaa
mov
push
cmp
pop
adc
stos
mov
stc
xchg
je
mov
sti
lcall
inc
add
shll
or
xchg
imul
fists
movsb
adc
adc
sbb
ja
lock
addr16
pop
js
sti
xor
mov
sbb
sbb
add
pop
movsb
std
aam
inc
dec
pop
lock
sub
mov
jae
pop
daa
jns
imul
and
mov
sbb
mov
xlat
fistl
outsl
xor
mov
inc
fwait
mov
push
movsb
scas
aad
int3
jecxz
xor
scas
aas
jle
push
loope
push
and
ja
leave
iret
call
add
lret
clc
sub
mov
pop
shll
pop
mov
cmp
or
loopne
sbb
repnz
pop
scas
xor
loopne
push
xchg
mov
xchg
icebp
add
shrb
imul
push
ret
xor
hlt
mov
mov
mov
push
cmp
inc
lods
pop
lret
mov
push
movl
lock
fwait
in
out
loopne
sbb
fwait
push
pop
xor
and
xor
fwait
push
in
sahf
in
push
mov
sub
sarl
mov
push
lcall
jl
sar
loop
xorb
fs
cmpsb
xchg
sub
aaa
mov
stos
or
and
xor
mov
mov
cwtl
add
fs
mov
and
pushf
push
in
and
and
mov
jno
jo
popf
mov
loopne
mov
clc
add
pop
fwait
dec
notb
mov
das
and
sub
aaa
fisubrs
loopne
dec
jno
xchg
dec
bndldx
nop
lcall
mov
addb
mov
cmpsb
outsl
in
stos
out
out
pop
ficoms
rcr
jb
xchg
inc
stos
xchg
add
and
push
dec
push
fistl
rorb
aas
stos
lcall
stos
mov
add
in
outsl
push
mov
movsl
test
ja
and
xchg
push
sarl
jo
shlb
das
rorl
push
adc
into
mov
les
nop
mov
fadds
repz
xor
mov
and
cmp
xor
mov
sub
dec
daa
inc
mov
cmp
test
adc
push
fs
loopne
cmp
scas
sahf
dec
inc
sbb
imul
dec
cmp
pusha
pop
push
pop
jle
loope
xor
shr
dec
adc
cmp
sarl
cmp
jo
add
fistl
mov
dec
jnp
xchg
popf
aaa
push
ljmp
and
sahf
cli
and
ret
inc
jae
xchg
les
xor
mov
push
push
outsb
jne
push
inc
xchg
xor
mov
pop
pop
push
cwtl
cmp
leave
fistps
jae
bound
scas
and
mov
sub
sub
orl
adc
rclb
fucomip
and
mov
cs
xchg
mov
mov
mov
aas
or
test
and
cmp
or
mov
movsl
jp
mov
xchg
inc
lret
lahf
sub
push
xlat
jecxz
sbb
adc
outsb
ret
repz
mov
lret
aaa
shll
iret
cli
aas
inc
pop
and
in
int
mov
add
pop
pop
jmp
jp
adc
sub
sub
mov
lret
inc
or
mov
dec
mov
or
fadds
cltd
jae
aaa
sahf
xchg
out
fidivrl
rclb
jne
jge
lahf
xchg
xchg
cmp
add
pop
sbb
dec
cltd
stos
addr16
jmp
loopne
push
mov
cs
mov
mov
repnz
fwait
cs
enter
cld
mov
mov
add
inc
lret
fstps
fsts
cmp
cs
add
add
inc
cwtl
inc
dec
pop
test
bound
scas
fs
sbb
scas
es
xor
inc
or
push
jbe
fsubl
jb
and
ss
repz
addr16
in
arpl
aam
push
add
pmulhuw
sub
imul
jl
cmp
jne
pop
fistpl
mov
fs
inc
jb
pcmpeqd
out
fistps
movsl
in
sar
int3
jmp
adc
outsl
ds
inc
push
fisubrl
jp
jg
gs
pop
xor
jecxz
dec
sub
daa
or
jecxz
adc
scas
mov
mov
imul
inc
je
mov
and
in
cli
jl
xchg
ret
loope
mov
sbb
mov
enter
pushf
push
push
dec
jae
fidivrl
rolb
jmp
ss
sbb
out
mov
add
xchg
and
and
jb
inc
out
fistps
jp
loope
rcr
inc
jo
hlt
pop
mov
js
addr16
sbb
sahf
mov
push
push
pop
mov
insl
and
mov
xchg
stos
in
outsl
insb
cmpsb
mov
outsb
or
inc
test
imul
and
push
cs
pop
and
jne
mov
lods
cltd
and
into
inc
in
add
daa
std
cwtl
rorl
movsl
icebp
fsubl
lret
arpl
pusha
mov
dec
mov
sahf
notl
fbstp
mov
add
outsl
xor
incl
out
lock
push
xchg
inc
mov
in
je
das
pop
pop
or
orl
or
pop
lea
push
jne
push
lcall
adc
mov
es
loopne
push
jle
leave
adc
add
test
xor
in
test
mov
sub
imul
decl
fadds
test
jge
and
dec
je
push
movsb
sbb
aad
pop
mov
int3
dec
sar
push
push
cwtl
or
fsubrl
daa
inc
leave
int3
mov
hlt
test
fimuls
inc
into
xor
mov
jle
cmp
add
inc
cmp
aam
cmpsl
lahf
mull
sub
push
and
imul
fstl
adc
mov
sahf
pop
xor
cmp
iret
cmp
fwait
sahf
lret
inc
std
sub
push
add
aas
jo
imul
push
test
pop
mov
fnstsw
dec
pop
aam
cmpsl
movsl
push
ficoms
jmp
cmc
shrb
or
add
rorb
cmp
dec
dec
and
test
fcoms
cs
movsb
mov
adc
sbb
mov
pusha
xchg
outsl
aad
add
mov
push
push
lret
fbstp
int3
sbb
addr16
sub
out
cwtl
ret
repz
pop
rcrl
mov
pmulhuw
test
xor
pusha
fwait
aad
inc
ja
and
fsincos
sub
jmp
notl
dec
arpl
jns
fbld
adcl
ret
cwtl
cmp
sarl
or
xor
es
xor
adc
cltd
push
fsubs
arpl
jp
repz
ljmp
dec
and
es
scas
mov
sub
test
lods
xor
mov
adc
pop
sub
loopne
or
xor
jecxz
sbb
pop
and
add
movsb
jo
fs
stos
sbb
insb
mov
shl
stos
jno
mov
sub
mov
rcll
xchg
xchg
mov
inc
pop
pop
sub
xchg
mov
mov
sub
sub
mov
add
inc
scas
scas
ror
lahf
jl
nop
out
dec
jns
xor
movsb
int3
mov
enter
leave
sbb
and
sub
addl
sahf
adc
sbb
dec
inc
mov
test
cmpsl
jmp
and
xor
sbb
sbb
and
daa
aad
and
add
addb
and
adc
adc
mov
cmp
dec
out
mov
jne
jmp
jmp
scas
in
insb
nop
inc
xor
das
popa
cmpsl
shrl
sub
pop
mov
dec
inc
test
pusha
push
rcrb
repnz
hlt
jnp
ljmp
inc
pop
stos
inc
sahf
inc
jp
add
imul
aad
pop
mov
mov
mov
push
popf
pop
ret
xlat
mov
jbe
stos
andl
sahf
js,pn
out
sahf
sub
in
mov
push
outsb
loopne
xchg
xor
ss
int
int3
cmp
pop
ja
aas
loop
in
in
addr16
je
sub
sub
or
mov
xchg
inc
fildl
sub
mov
xchg
dec
hlt
test
bound
xor
repz
mov
js
mov
jno
imul
cmc
mov
imul
decl
js
xchg
sarl
fdivl
fmuls
or
inc
cs
dec
xor
in
adc
popf
and
mov
cmp
data16
dec
or
test
push
aad
mov
mov
stos
jno
test
test
jno
add
or
loope
dec
test
xchg
cmpsl
sbbl
pop
je
mov
xchg
rcll
stos
test
out
out
mov
loopne
dec
xor
pop
fistps
inc
leave
xorl
inc
push
lock
cmp
scas
jae
fwait
shrl
inc
mov
inc
push
jecxz
xlat
adc
in
aas
inc
punpckhbw
inc
std
nop
cmc
fs
xchg
add
add
adc
dec
jmp
dec
inc
inc
jp
cs
jne
fs
and
scas
inc
call
cmpsb
xchg
mov
mov
xor
gs
insb
fisubs
xchg
xor
or
setae
xchg
add
sub
shll
aaa
stos
test
and
jnp
inc
mov
mov
jl
cld
fcompl
pusha
movsb
daa
jmp
addps
into
in
mov
adcb
stos
clc
push
mov
mov
sbbb
jmp
add
pop
inc
repnz
cmp
sbb
cmpsb
std
jb
jg
xlat
je
mov
popa
repnz
stc
sbb
add
push
lds
addl
loope
lock
and
in
pop
fistpll
and
fcomip
mov
popa
and
pop
mov
stos
mov
cmp
in
repz
or
lret
lret
aaa
push
xor
mov
iret
test
ds
xchg
test
shll
jae
dec
mov
pop
inc
inc
andb
popf
or
int3
mov
mov
dec
or
mov
loope
roll
pop
xor
hlt
shl
pop
mov
decl
mov
js
div
pop
jg
iret
rclb
divb
or
xorl
loop
in
jl
xorb
inc
and
and
push
movsb
sub
sbb
push
gs
xor
cmpsb
push
xlat
lods
xor
mov
jo
inc
cld
movsb
add
test
push
aam
imul
inc
loop
cli
adc
mov
push
stos
mov
xchg
add
push
jg
add
push
cmpsb
mov
mov
dec
mov
aam
in
push
hlt
push
pop
sti
adc
mov
fisubs
and
ljmp
cmp
mov
xchg
outsb
cli
mov
adc
ljmp
jmp
test
imul
push
aas
out
mov
test
sbb
ds
cltd
sarb
addr16
cwtl
out
and
add
idivl
xor
cmpsl
adc
ljmp
fs
in
cmp
jecxz
adc
rolb
mov
inc
mov
xchg
jno
dec
xchg
inc
xchg
cmp
imul
out
in
leave
lcall
sti
lea
push
pop
in
or
inc
or
fwait
push
pop
push
movsb
or
dec
stc
inc
loopne
pop
mov
sti
jno
idiv
mov
xchg
mov
subl
jo
cld
stc
mov
lret
fstpt
mov
cmpsb
or
mov
sbb
inc
call
scas
xadd
les
mov
inc
add
scas
cmp
ljmp
xchg
les
inc
xor
test
inc
xchg
cmp
xchg
inc
fistl
add
or
pop
loope
lods
or
ja
xor
incl
adc
repnz
and
pushf
int3
data16
fnstenv
mov
xchg
loopne
rcrb
add
into
adc
mov
push
scas
push
push
decb
xchg
out
out
cmp
mov
ds
inc
out
cmp
loope
push
leave
mov
fs
xchg
push
adc
leave
mov
rorb
fisttps
mov
xchg
sti
xchg
js
xchg
iret
mov
pushf
cmp
pop
xor
lods
bound
sbb
jmp
fimuls
imul
cmp
ss
aad
fistpl
lods
adc
adc
js
enter
lea
inc
add
xchg
or
call
xchg
or
mov
ret
jmp
add
testb
sub
repz
imul
rcll
jne
aas
jl
jg
lea
or
xor
add
add
fldl2e
and
inc
push
mov
popf
loop
imul
std
aam
lahf
mov
and
push
loopne
sbb
or
mov
mov
sbb
mov
sbb
imul
add
or
mov
rcrb
pop
and
je
xor
movb
inc
sub
in
bound
pop
mov
mov
pop
mov
adc
push
dec
ljmp
in
fstpt
negb
adc
push
pusha
mov
testb
lock
add
cmp
inc
mov
add
push
xor
xor
leave
icebp
push
add
daa
ss
je
test
insb
pop
cmp
dec
pop
adc
adc
mov
test
pop
xlat
idivl
popl
cmp
fmul
out
pop
cmp
and
inc
pop
or
adc
add
pop
or
push
cmp
pop
xor
pop
je,pt
insb
shll
cmp
sub
test
sub
mov
xchg
lea
mov
aad
fsubr
inc
shrb
pop
xchg
subb
jg
scas
aas
mov
ljmp
xor
cli
and
addl
or
push
mov
test
lahf
lds
jb,pn
popa
pop
or
jae
ds
cltd
jo
sbb
lahf
adc
mov
das
mov
or
cmc
pushf
push
call
mov
jno
in
adc
scas
shlb
mov
ds
mov
add
sbb
jmp
xorb
xchg
dec
out
into
sub
mov
inc
xor
arpl
ret
xchg
cmp
test
lods
test
mov
mov
xchg
out
adc
xchg
loopne
mov
or
mov
adc
add
ja
push
sbb
xor
inc
hlt
fbld
xchg
pop
pop
loope
mov
add
fsubrp
jmp
aam
push
in
pusha
inc
stc
pushf
fsubp
push
fnstenv
cmpsb
lcall
ss
push
ret
bound
lret
subl
push
and
ljmp
cs
mov
clc
xchg
into
xchg
aam
mov
push
aam
jmp
das
and
imul
lds
push
push
inc
pop
rol
mov
jp
popa
idivl
pusha
or
xor
les
fadds
xchg
loop
inc
or
test
cmp
jbe
mov
mov
sub
jo
clc
xlat
aaa
mov
filds
ja
sub
pusha
in
hlt
xchg
and
fdivl
test
les
and
cmp
mov
xchg
and
jne
adc
mov
jno
js
xchg
mov
cmpl
adc
les
in
clc
pop
pop
push
cmpsl
dec
les
mov
out
sbb
cltd
push
pop
mov
cmp
xor
and
xlat
ss
pop
out
jp
inc
lock
adc
inc
cmpsb
fs
lods
jne
lahf
scas
push
cli
iret
push
fwait
call
in
sub
loop
cld
cwtl
arpl
jnp
lahf
imul
lcall
repnz
or
mov
mov
xor
dec
mov
xor
movsl
in
push
xchg
jno
testl
shl
test
mov
in
sbb
mov
push
sub
sbb
mov
adcl
add
pmaxub
hlt
pushf
cld
sub
cli
jle
dec
add
pop
outsl
pop
xchg
sbbb
sbb
rol
cld
add
data16
add
ret
adc
shll
int3
icebp
scas
jns
ficomps
inc
and
jns
rorb
rclb
pushf
jg
sbb
cwtl
mov
adc
jb
cmp
loop
cltd
jl
push
imul
fnstenv
cmc
shlb
imul
and
and
addr16
adc
sysenter
and
popf
jbe
scas
outsb
cld
xor
jge
cs
lcall
aas
and
sbb
cld
sub
sub
in
stos
out
xchg
or
loope
pop
fldcw
inc
decl
cli
es
push
leave
ret
cli
mov
lret
aas
or
xor
daa
jo
pop
xor
aas
in
push
mov
xchg
out
mov
cwtl
lock
test
sub
xchg
mov
arpl
scas
mov
ret
sahf
addr16
les
out
xchg
lret
je
pop
jb
ret
cld
push
or
pop
cltd
push
sbb
std
push
mov
lods
inc
push
dec
dec
adc
lods
lods
or
jg
gs
lock
mov
push
and
jge
jle
ror
push
dec
cmp
rclb
inc
pop
sub
mov
in
xor
mov
or
iret
mov
cld
les
arpl
dec
adc
or
add
jbe
xchg
add
or
mov
pop
push
jcxz
mov
rcll
pop
and
mov
xor
movsl
divl
sub
xor
popa
lea
or
pop
fsub
jl
pop
adc
add
outsl
inc
sbb
int3
and
pop
testb
mov
insl
dec
inc
iret
lods
inc
cmp
loopne
je
cmpl
inc
mov
hlt
movsb
out
ret
or
mov
add
adc
aas
jbe
ret
add
pop
insl
mov
inc
scas
mov
dec
xor
xor
and
stos
clc
subb
cmp
cmc
jg
jg
adc
xchg
xlat
sti
rcr
sti
rorl
or
jge
jbe
scas
pop
and
cmp
xor
xchg
or
sbb
popa
aas
mov
test
les
bound
pusha
lcall
or
mov
push
in
mov
std
js
repz
out
cmp
cwtl
cli
inc
int
cmp
movsb
aad
test
and
faddl
cmp
ljmp
push
or
fidivrl
lret
pop
add
insb
loope
leave
fs
pop
loopne
lds
pop
aad
mov
popw
sub
je
lret
test
push
xor
push
push
clc
jp
mov
cmp
adc
jae
lock
cmp
mov
xor
lahf
out
lret
sub
ret
fstpl
cmp
fistps
push
rcr
lcall
mov
subl
shl
test
and
outsb
mov
jbe
mov
mov
and
lds
arpl
idiv
mov
loope
push
cmp
mov
jge
lret
popa
loopne
das
mov
xor
popf
pop
jmp
sub
adc
out
mov
dec
in
nop
in
nop
in
push
aad
or
in
out
xchg
or
sub
mov
sbb
mov
dec
cmp
call
cmp
cmp
jge
jbe
dec
gs
mov
xor
or
je
shrb
rol
lods
fisubl
jg
inc
inc
mov
scas
pop
push
filds
mov
dec
data16
shlb
jecxz
and
mov
arpl
fwait
aaa
or
and
int
jno
mov
dec
cmp
dec
pop
fwait
cmp
cli
ror
add
mov
mov
add
cs
fnsave
test
pop
or
or
dec
fs
mov
mov
pop
ret
mov
std
pushf
rolb
fistps
push
stos
ljmp
dec
lods
nop
add
popa
int3
ja
xchg
dec
loopne
aaa
frstor
inc
addr16
xor
push
rcll
movsb
inc
xor
mov
adc
sahf
popa
bound
js
add
xor
push
cmp
xor
int
mov
out
cmpsb
negb
repnz
pop
or
nop
sbbl
mov
jno
adc
in
addb
loopne
mov
test
push
add
pop
out
pop
enter
or
push
mov
mov
ja
cmp
daa
fldcw
mov
inc
jp
xor
pop
push
movsb
push
aas
add
aad
cmp
push
sti
xor
sbb
push
std
jno
add
aad
das
mov
mov
dec
xchg
fcomip
xor
adc
scas
xchg
push
mov
and
movl
dec
push
and
jnp
mov
lcall
mov
add
aaa
cmpsl
pop
fwait
inc
add
dec
insl
xor
mov
out
ljmp
mov
inc
ljmp
mov
push
inc
pop
push
subb
mov
ljmp
jmp
mov
call
mov
mov
push
add
inc
in
push
cli
or
scas
dec
invd
stos
std
dec
js
mov
push
sbb
dec
out
mov
lahf
mov
ret
fcompl
pop
inc
cld
or
insb
adcl
in
shll
inc
sub
and
pop
inc
roll
dec
mov
sbb
mov
and
pop
and
pop
leave
xchg
pop
add
or
mov
loopne
mov
cmp
nop
js
xor
rcl
or
lret
ja
fwait
pop
popl
fisubl
jb
mov
fadd
int
mov
sbb
repz
jg
or
dec
xchg
push
frndint
aad
push
hlt
ret
fstl
data16
add
jns
cmp
adc
mov
xlat
setb
lahf
es
jo
mov
add
mov
adc
sub
aam
jns
popa
push
add
or
pxor
jne
icebp
push
push
adc
xchg
mov
sbb
loop
or
in
test
mov
imul
xchg
cltd
or
sbb
or
jp,pt
out
jge
sub
ret
test
jg
sbb
mov
xor
cmp
mov
jge
fs
adc
mov
jae
sub
sub
pop
loopne
mov
xchg
fmull
js
jp
jmp
mov
mov
mov
adc
push
call
into
inc
in
test
std
lret
in
fstps
pop
pop
cmp
movsl
mov
mov
cmp
ss
cld
std
pop
push
add
sub
aaa
scas
ss
jbe
xor
cwtl
test
lock
add
notb
outsb
leave
xor
shlb
loopne
pop
fnstsw
mov
or
rorb
jb
leave
cmc
mov
mov
cltd
scas
cli
mov
lret
jg
out
popf
push
enter
scas
push
inc
pop
inc
jmp
mov
ja,pn
dec
stos
test
mov
mov
add
icebp
jmp
inc
jecxz
lret
add
inc
movsl
inc
fcoms
add
je
pop
cmp
or
mov
movsl
inc
lcall
fs
rorl
cmc
bnd
clc
inc
data16
lcall
je
sub
mov
or
xchg
ret
stos
mov
aas
or
les
xor
ret
xor
sbb
outsl
mov
popa
mov
xchg
sub
lahf
cmp
loop
mov
cmp
push
stc
imul
jl
mov
scas
movsb
mov
iret
sti
cmc
mov
fmulp
das
pop
and
aad
jb
fstl
mov
arpl
addb
enter
lahf
dec
push
lahf
push
adc
aad
cmc
cwtl
shl
adc
jecxz
xchg
cld
xor
in
ds
dec
mov
xchg
push
icebp
orl
rol
xor
jp
push
out
imul
jo
adc
xchg
or
pop
cltd
nop
mov
jge
cmp
adc
mov
add
pop
xor
and
aas
adc
or
ret
ja
pop
xchg
enter
fidivl
add
int3
std
mov
sub
fbld
setg
push
dec
mov
inc
push
pop
mov
jns
add
fbstp
mov
inc
movsb
daa
mov
xlat
adc
dec
jle
icebp
testl
xor
dec
mov
ljmp
test
sub
cmp
adc
adc
push
pop
andb
sbb
icebp
mov
mov
rcrb
xchg
pop
cs
mov
addb
sbb
fisttpll
data16
enter
sbb
sbb
mov
pop
arpl
pop
push
cmp
cmp
push
mov
push
repnz
jb
jo
ja
pushf
sbb
mov
cmp
pop
jb
pop
testb
sbb
xchg
loopne
jle
rorl
dec
out
or
std
mov
cld
dec
movsl
ja
push
xor
add
inc
mulb
test
cmp
loope
xchg
push
mov
pushf
xor
dec
jp
adcl
cmp
push
imul
mov
cmp
pop
shrl
and
dec
clc
repz
popf
and
xchg
f2xm1
pop
cmp
notl
and
dec
pop
mov
sti
outsl
mov
mov
push
int3
je
out
push
insl
es
mov
aad
sbb
pusha
push
xchg
dec
inc
nop
fs
jge
cwtl
data16
or
mov
dec
fldcw
rcll
mov
or
outsl
inc
jne
add
mov
hlt
rolb
sub
inc
dec
mov
mov
sbb
dec
out
xor
lcall
sti
test
fwait
adc
ds
stc
int
push
add
dec
mov
adc
hlt
inc
std
in
sbb
pop
xchg
pop
jbe
repz
push
cld
js
and
ds
ret
add
bound
aas
xchg
mov
sub
movsb
int3
pop
lea
les
push
shrl
mov
test
les
aam
sub
je
in
out
addr16
mov
push
pop
dec
insl
push
xor
into
push
ret
xlat
lods
jecxz
push
in
sar
nop
lahf
push
push
fcompl
lods
jo
jge
mov
enter
xlat
daa
adc
push
fadds
pop
push
dec
push
daa
jbe
pop
rcll
cmp
xlat
dec
push
mov
bnd
lods
cmp
fnstenv
sub
mov
arpl
rcr
insb
dec
orl
jbe
cmp
shrb
cmpsb
add
ret
iret
loopne
scas
pop
clc
xlat
push
adc
lock
xor
xchg
push
add
out
push
sbb
arpl
sbb
popf
lret
add
jecxz
sbb
loopne
lds
push
adc
pop
jne
ret
inc
scas
xchg
fucom
out
daa
xor
movzbl
and
fcomps
jmp
push
cmp
xlat
dec
cmpsb
loope
loope
inc
test
mov
fstpt
mov
mov
daa
jp
insl
in
xlat
and
push
pop
xor
int
mov
pop
lret
inc
stos
sbb
sbb
scas
popf
mov
dec
or
sub
jbe
rcll
aad
stc
sbb
mov
push
dec
jg
outsb
lods
loop
adc
jg
mov
push
cmp
stos
xchg
sub
lods
jb
dec
dec
sub
sub
into
pop
adc
xchg
scas
cwtl
inc
test
stos
mov
adc
aam
pushf
test
in
xor
mov
push
bound
sbb
mov
scas
pop
add
mov
push
fidivrs
cmc
jge
xchg
mov
push
jmp
stos
push
sar
push
jge
and
xchg
test
mov
mov
ficomps
arpl
lods
pop
jnp
dec
outsb
push
imul
add
dec
mov
sub
mov
add
fwait
jp
int
mov
and
add
repnz
fsub
into
or
mov
jbe
jo
movsl
repz
dec
jp
shrl
jl
lcall
bnd
ljmp
jg
int
cmp
test
and
cmc
mov
sahf
int
inc
dec
dec
mov
jo
push
stc
xor
arpl
dec
inc
stos
mov
adc
sbb
sti
pop
cmpsb
int
and
ds
push
pop
xlat
fldcw
mov
test
pushf
sub
je
mov
cmpsb
inc
or
lods
xchg
repz
mov
std
stos
les
adc
jl
or
cmp
and
sbb
sahf
ds
mov
pop
jne
je
cmc
lds
sbb
push
jp
sbb
xor
add
mov
jmp
imul
push
ja
xchg
loopne
cmp
xchg
stos
jo
mov
daa
xor
lds
xchg
stos
iret
pop
outsl
jns
scas
xchg
mov
arpl
or
mov
inc
subl
int
mov
jge
inc
or
adc
fmull
jmp
push
in
cmp
gs
push
testl
outsb
dec
aam
and
or
das
nop
sahf
adc
mov
sbbl
cld
adc
sub
inc
stos
out
inc
and
int
dec
pusha
in
sbb
jbe
lods
into
add
stos
ljmp
xchg
xor
or
adc
mov
jg
inc
push
or
mov
lahf
or
popa
nop
lret
in
mov
daa
sti
or
je
iret
lock
xor
sbb
mov
inc
mov
push
inc
xchg
xor
mov
sbb
divl
or
mov
pop
push
xchg
popa
adc
faddl
out
mov
mov
sbbb
and
cs
hlt
xor
cmpsb
loop
fidivrs
ja
mov
push
cmpsb
push
in
inc
js
xchg
sub
decb
lahf
sub
sbb
mov
mov
lahf
iret
sarl
into
inc
outsl
pop
sbb
cwtl
jae
sbb
pusha
aaa
jne
pop
xchg
int3
mov
iret
push
cltd
into
jp
adc
movsb
out
or
rcl
or
cmpsb
sahf
lock
mov
dec
xchg
and
imul
repnz
add
out
inc
xor
sbb
dec
inc
sahf
rol
arpl
sbb
and
lock
pop
push
inc
cmpsl
lds
xor
mov
jbe
xor
ljmp
das
mov
es
pop
mov
jecxz
cld
scas
inc
xor
jno
mov
sahf
hlt
dec
call
insl
mov
nop
lea
inc
jne
outsl
repz
push
in
mov
add
cld
jno
outsl
ljmp
mov
cmp
xchg
std
sub
imul
xchg
jno
movsl
jnp
mov
icebp
mov
mov
iret
loop
fstps
add
pop
and
push
stc
jmp
je
sahf
xor
dec
pop
dec
or
sub
test
clc
and
adc
fcom
enter
lret
sti
ret
nopl
ret
dec
movsb
jo
cmp
scas
inc
dec
xchg
cld
dec
jnp
aaa
or
cltd
push
int
inc
incb
xor
loop
mov
mov
push
scas
cmpsb
mov
je
jg
mov
mov
or
outsb
mov
int
mov
icebp
push
add
test
mov
nopl
dec
cmp
lcall
sbb
insb
mov
xor
xchg
jp
sbb
pop
mov
test
inc
adc
sbb
push
pop
lock
lret
push
jp
leave
fs
int
jns
rorb
pop
pop
mov
popa
and
cmp
out
repz
test
xor
out
mov
rcl
mov
pop
jp
stos
clc
addr16
int3
push
ljmp
jp
push
mov
mov
int
mov
add
jne
push
mov
mov
adc
pop
lcall
dec
inc
jns
cmp
lahf
cmpb
cmp
jbe
ds
test
testl
gs
leave
dec
sub
arpl
cmp
adc
xchg
mov
add
mov
testl
and
push
fsubs
mov
cmp
lds
mov
pop
stos
dec
dec
or
mov
loop
dec
mov
lcall
ljmp
orl
jge
jbe
xor
pop
in
mov
adc
jno
xchg
and
mov
xlat
je
mov
or
adc
and
adc
repz
and
fcoms
hlt
adc
sub
inc
xchg
cmc
les
aad
jae
je
sbb
addr16
jg
vunpckhpd
fwait
icebp
dec
mov
aad
jp
ret
push
js
cmpsl
adc
leave
mov
add
test
push
test
fists
jo
mov
jge,pt
js
rcrl
and
xor
xor
inc
movsb
mov
cmpsb
vpshab
jns
addr16
test
pop
out
or
ficoml
add
inc
ror
xor
mov
in
cwtl
cli
push
sahf
mov
jno
xchg
cmp
loop
mov
jp
sub
push
call
das
xchg
mov
popf
jmp
cmp
pushf
ss
adc
hlt
add
mov
pop
int3
lret
loop
lds
loope
outsb
test
mov
mov
mov
pop
xchg
dec
testb
or
in
rcr
xor
dec
movzbl
jae
inc
stos
sub
insb
sbb
xor
outsb
xchg
adc
insl
xchg
mov
cmp
push
lods
je
mov
xor
test
movsl
hlt
aaa
pop
mov
inc
outsb
and
mov
bound
cmp
or
mov
mov
fisttps
lret
dec
xlat
sub
mov
imul
pop
mov
faddl
pusha
dec
or
xchg
push
aas
imul
mov
xchg
inc
rcl
or
mov
sub
addr16
outsl
add
sub
aas
ret
sbb
scas
cmp
aas
jp
mov
lret
add
push
jle
push
xor
add
enter
dec
push
xchg
call
inc
push
mov
push
dec
dec
cwtl
lods
ljmp
aas
loop
mov
scas
pop
mov
cli
add
addr16
insb
insl
push
test
mov
test
jnp
rcl
shll
mov
inc
mov
or
mov
push
testb
dec
out
push
push
in
and
dec
loop
and
movsl
cmp
ja
pop
ret
mov
lahf
rol
add
fimull
inc
adc
cltd
add
mov
popf
test
aas
push
jle
cld
xchg
int
pop
pop
popf
jge
adc
dec
dec
aam
add
cmp
jo
add
mov
mov
mov
sub
notb
in
jno
int
pop
sbb
insb
lods
sbb
xchg
xor
hlt
cmc
mov
mov
push
mov
lret
sti
arpl
jb
sbb
stos
adc
sbb
lock
xchg
jle
mov
fldl
es
popa
cmp
add
mov
out
mov
leave
lods
mov
xor
sahf
movsl
cld
adc
js
daa
pop
arpl
xor
aas
into
rcrl
int
fdivrs
inc
add
mov
dec
push
xor
jg
cld
jmp
pop
mov
pop
mov
and
cld
insb
int3
jbe
and
mov
lods
jecxz
push
mov
pop
arpl
je
add
out
pusha
shll
mov
hlt
mov
ss
popf
sub
aad
mov
lret
mov
setl
outsl
dec
cmpsb
fdivs
fisttpll
subb
mov
sub
clc
xchg
in
cmp
out
xchg
lods
data16
loope
adc
push
call
sbb
xchg
mov
or
iret
adc
sbb
fxch
test
xchg
hlt
push
fwait
ljmp
xor
imul
pop
and
sbb
or
jbe
hlt
push
jo
mov
push
xchg
sub
xchg
inc
icebp
notb
xor
in
jae
xor
push
loop
mov
bound
push
ret
rolb
std
jno
pop
movsl
std
and
xchg
or
pop
mov
jne
mov
adc
mov
push
mov
pcmpeqd
cmp
jge
ljmp
decl
gs
lcall
jmp
clc
pop
mov
pop
xchg
repnz
sub
scas
fdivrl
mov
mov
lret
mov
pop
pop
test
popa
xor
mov
rol
inc
cmpsl
push
rolb
loop
adc
jnp
or
jl
sub
push
and
arpl
lcall
das
pop
adc
and
push
in
and
fwait
minps
sahf
stos
and
cmpsb
sub
daa
sbb
and
and
ret
cmp
inc
lds
and
mov
or
dec
dec
sbb
fiaddl
dec
stc
getsec
xchg
or
xchg
inc
sub
cli
push
in
sbb
push
and
add
jl
jge
push
out
ja
push
push
cmp
inc
lahf
cmpsl
int3
test
cli
ss
pop
mov
lcall
xor
pop
roll
leave
mul
cmp
mov
imul
jae
das
jl
fcmovnbe
xchg
pop
jge
dec
push
aaa
adc
lods
jae
or
jno
shll
lds
jl
decl
inc
jne
and
xchg
push
fnsave
lcall
mov
push
mov
jecxz
jg
xchg
movsb
lods
shll
stos
outsb
mov
mov
outsb
or
push
lret
int
out
stc
shrb
hlt
jl
dec
xchg
pushf
jg
xor
and
jg
in
sub
sti
testb
sbb
aaa
int3
test
daa
sbb
push
movsl
sub
outsb
adc
or
in
cltd
notl
int
xchg
das
es
push
lcall
push
pusha
fwait
std
cld
adc
mov
pop
jmp
sub
popa
cmp
mov
aaa
out
and
scas
cmp
ss
adc
push
ds
iret
outsb
dec
stc
push
sbb
adc
sar
jmp
loope
and
insb
xor
jbe
jae
xor
add
and
in
mov
mov
scas
leave
or
push
xor
dec
cmpb
ljmp
gs
daa
cmp
mov
lret
outsl
imul
sahf
jb
mov
push
jecxz
add
movsb
xchg
sub
mov
leave
cmp
mov
adcb
adc
cmp
repz
lods
mov
loope
imul
jl
fdivs
cmp
cmp
xchg
mov
jl
mov
rclb
xor
bound
out
cmp
inc
test
pop
imul
roll
push
orl
push
rorb
pop
roll
and
out
xchg
dec
test
std
jg
sti
push
and
inc
stos
imul
ret
inc
xchg
incl
sub
cwtl
and
out
pop
out
ja
lcall
mov
andb
pop
xchg
movsl
jno
xorl
mov
jns
add
movsb
ret
xor
and
and
adc
int
lods
push
scas
in
jp
arpl
orb
sub
push
out
jbe
jecxz
push
jae
out
aam
dec
adc
pusha
and
ds
pusha
push
adc
out
and
dec
inc
outsb
movzwl
sbb
mov
push
mov
jecxz
out
aad
jmp
popf
in
mov
cld
out
push
pop
insb
ja
shl
add
aam
jge
lret
mov
add
into
sbb
fnstsw
cmpsl
addl
jno
rclb
xor
xor
xor
sarb
dec
push
mov
loop
out
and
mov
xor
stos
pop
mov
rolb
out
sbb
jge
inc
ljmp
scas
mov
and
lret
shll
mov
jecxz
cs
in
pop
pop
fnstenv
xor
cmp
enter
pop
jno
test
lret
pop
js
add
add
sbb
ret
xabort
pop
pop
stos
data16
subb
aam
jns
push
int3
cwtl
filds
lcall
lods
iret
cmp
pop
arpl
lods
les
mov
aaa
data16
and
jle
push
pushf
push
fisubs
push
push
adc
jl
fistps
push
int
mov
pop
out
push
sbb
mov
fimuls
mov
jne
and
daa
sbbl
out
cmpl
ret
sub
lahf
icebp
xchg
jg
shlb
mov
xchg
fcomi
adc
pop
andb
lret
repz
iret
ror
adc
push
sbb
leave
xchg
mov
ja
repnz
les
push
testl
fstpt
mov
inc
cld
mov
popf
jge
mov
jmp
adc
sbb
cld
or
jge
ja
sti
test
lock
dec
lds
mov
test
xchg
push
pop
and
shlb
imul
xchg
sub
test
sti
jle
mov
push
xlat
and
sbb
dec
inc
addl
jnp
jge,pn
outsl
ret
cs
and
or
mov
jbe
sarl
lods
and
fwait
adc
je
std
jge
mov
sti
inc
aas
pop
dec
push
fdivrp
scas
adc
xchg
dec
dec
pop
or
popa
mov
jbe
sbb
pop
inc
and
mov
jmp
std
mov
jae
test
xchg
cli
bound
arpl
inc
sarl
fsubr
sub
and
mov
jmp
lret
inc
or
xor
cmp
sbb
in
jg
aaa
inc
adcb
loopne
pop
out
push
test
enter
mov
out
lcall
mov
inc
pop
push
cmp
push
stos
xor
fimull
shl
fwait
xchg
pop
jo
loop
inc
adc
cmpsb
or
ljmp
lods
fwait
lahf
jg
mov
je
sti
pop
pop
test
jno
icebp
outsl
je
imul
daa
ss
pop
mov
inc
stos
cmp
jmp
repz
inc
popf
jae
cltd
cmpsl
cmp
into
sbb
mov
xor
push
imul
adc
jae
adc
cmpsb
push
xchg
dec
shl
and
jnp
pop
pop
jns
sbb
sbb
sbb
inc
pop
jmp
pop
push
iret
iret
xor
inc
sbb
dec
fs
push
mulb
inc
test
inc
mov
and
test
mov
shl
lods
pop
and
pop
rep
adc
pop
int
sbb
inc
and
sub
pop
in
dec
out
lods
and
pop
sbb
mov
andb
arpl
xor
and
aaa
add
adc
sarl
fmul
movsb
xchg
pop
push
pop
test
rcl
push
lods
lock
iret
mov
pop
enter
cmpsb
sarb
xchg
lods
scas
out
dec
mov
insl
cmp
mov
imul
negb
stc
negb
mov
push
dec
xchg
ficompl
ja
pop
hlt
scas
leave
inc
or
cli
and
jecxz
pop
or
jg
outsb
sar
and
push
fld1
cs
call
movsl
je
mov
movsl
imul
and
cltd
pop
fbld
les
xchg
jno
sbb
movsl
aas
iret
and
or
xor
and
push
mov
mov
ficompl
dec
xor
add
jnp
rcl
mov
shlb
mov
arpl
fidivrl
cmp
mov
rclb
adc
rcll
cmp
movsb
arpl
mov
push
into
les
ret
add
and
lcall
cmc
outsl
adc
ret
scas
xchg
add
ss
cli
insb
and
pop
les
sub
lea
inc
mov
jno
pushf
add
dec
or
add
call
pusha
sub
pop
rorb
xchg
rol
mov
fs
in
loopne
ss
mov
push
sahf
cmc
ja
pusha
jge
jmp
adc
and
out
cmp
add
imulb
insb
pop
ret
xchg
out
daa
and
push
mov
fcoml
fcoms
and
sub
lods
in
mov
pop
jge
out
stos
jae
sahf
adc
in
int
mov
xchg
cwtl
ja
loope
in
test
lcall
cmc
mov
mov
xchg
xchg
push
push
xchg
fnstenv
repnz
mov
sbb
dec
les
stos
out
outsb
xchg
or
fnstcw
outsb
insb
push
lahf
filds
inc
lds
fs
push
xchg
dec
jo
add
pop
mov
cld
mov
xchg
mov
cmp
push
xchg
jge
mov
lret
arpl
mov
sbb
je
push
lods
cmc
out
dec
aam
mov
sbb
mov
mov
sti
cmp
orb
ret
push
cmpsl
adc
sub
or
insb
mov
push
aam
jo
mov
cwtl
xor
cmp
movsl
lahf
loop
out
aaa
push
mov
inc
int
add
lods
jle
pushf
dec
movsl
scas
lds
xchg
mov
lahf
nop
jb
insb
pop
mov
sbb
inc
mulb
rclb
js
mov
fistps
stc
or
add
cli
pop
mov
ret
pop
outsb
out
mov
mov
call
xor
adc
mov
test
add
lea
cli
lret
adc
stos
in
in
loopne
pop
rorl
jl
jl
and
pop
and
ljmp
and
inc
push
mov
add
jl
outsb
imul
fbld
les
fsubl
lods
ljmp
in
and
add
pop
std
in
or
push
ljmp
cmp
sub
sub
pop
pop
push
iret
jecxz
movsl
or
dec
testb
movsl
stc
jno
mov
popa
jge
repz
dec
and
jo
push
popf
pop
push
insb
jmp
cltd
mov
mov
push
mov
or
dec
or
inc
jo
outsb
adc
nop
fldt
xchg
fldt
andb
push
idivl
xchg
cs
sbb
sbb
clc
lcall
notl
inc
xchg
cs
xor
mov
std
or
sub
js
fs
inc
or
cmpsl
push
sbbl
push
mov
cmp
jb
leave
fcomps
int3
and
jnp
cmpsb
mov
call
adc
or
test
pop
pop
dec
stos
movsl
xchg
adc
jp
std
inc
xchg
sub
in
cmp
xor
arpl
enter
ja
mov
je
push
daa
pop
xchg
cltd
jp
jp
fstps
push
fbstp
mov
icebp
loope
xor
mov
lahf
mov
imul
fidivs
cmp
leave
divl
jmp
jmp
js
rdmsr
xchg
cmpl
lret
xor
cmp
rolb
mov
mov
cld
jb
rcll
testl
sub
ja
cmp
or
jg
in
mov
filds
xor
jmp
rclb
push
lret
cwtl
popl
cmp
scas
dec
fisttps
mul
mov
idivl
mov
sub
dec
pop
add
fs
add
insl
push
xchg
jae
iret
lahf
jno
repz
std
add
and
ljmp
and
stos
or
xchg
test
add
inc
lahf
xchg
incb
fnstenv
outsb
push
pop
sub
testb
movl
push
outsl
push
adc
lods
push
sub
js
jmp
adc
dec
out
pop
ljmp
mov
cmp
push
jmp
and
ja
pop
xchg
lods
cwtl
pop
add
mov
pop
cmpsb
or
mov
pop
imul
fimull
push
leave
dec
mov
add
sbb
mov
sub
imul
sarb
xor
gs
pop
pop
sub
sbb
ljmp
xchg
rcl
mov
push
sbb
cltd
lods
clc
mov
cmp
out
inc
lcall
loop
xchg
in
inc
mov
pushf
mov
inc
jl
inc
lea
mov
sbb
es
pop
out
ficoms
lock
into
dec
mov
xchg
inc
or
xor
cltd
pop
xlat
pop
fucomip
sbbb
scas
push
push
dec
out
negl
sbb
add
cltd
jne
or
mov
addb
inc
xchg
lahf
dec
aad
test
aas
or
loop
lcall
out
js
jo
or
fnsave
pop
adc
mov
cmp
addb
fistpll
std
inc
pop
add
sub
mov
popf
xchg
dec
xlat
pushf
leave
or
popf
std
ret
rcrb
je
dec
fsubrp
cli
sbb
scas
aad
inc
in
or
out
dec
adc
jl
iret
xor
das
hlt
imul
pusha
movsb
cmp
repz
or
adc
jb
jbe
mov
scas
inc
xchg
jnp
mov
push
stos
fisttpll
sbb
sub
mov
ficoms
jne
cwtl
cltd
ret
hlt
leave
je
xchg
add
adc
shrl
loop
mov
or
aam
or
jp
std
insl
outsb
aas
movsl
into
loop
add
pusha
dec
sub
add
mov
out
sub
rolb
xchg
test
jno
fidivs
dec
outsl
xchg
enter
and
jle
sbb
push
sub
lret
or
cli
call
call
std
xor
cmp
xchg
jmp
lds
push
pop
aaa
test
shll
mov
cld
pop
rolb
ret
push
mov
mov
jle
cmp
pop
int3
in
xchg
mov
jns
jne
call
jge
fstpl
ss
pop
inc
mov
fsts
fwait
divl
test
imul
mov
rol
fwait
inc
std
xorb
mov
lret
pop
sub
push
xchg
in
fcomps
fmull
jecxz
dec
stos
mov
movsl
or
sub
jno
aam
or
xor
test
mov
pop
es
mov
je
addr16
and
mov
addb
ljmp
repnz
push
popf
lods
loop
orb
out
daa
or
outsl
ss
arpl
push
lret
sbb
fidivrl
cltd
sbb
and
push
xchg
cmp
sbb
arpl
sub
les
pop
aas
les
loope
fildll
lret
sti
push
pop
imul
repz
dec
jecxz
bnd
adc
adc
push
dec
out
mov
fidivrl
and
xor
das
mov
jb
jp
jmp
test
fwait
jae
and
pop
inc
arpl
enter
fldcw
inc
cmp
xchg
pop
mov
sub
xor
and
mov
into
dec
repz
stos
cmp
hlt
lods
movsb
inc
mov
pop
scas
rolb
cli
lret
mov
jmp
pop
nop
rolb
lock
xchg
xchg
mov
mov
in
and
mov
dec
inc
adc
cmp
lahf
adc
adc
xor
shll
jp
mov
mov
imul
jge
insl
add
jae
insb
mov
sub
nop
xchg
mov
negl
dec
xchg
repz
mov
ss
icebp
ja
fistps
dec
mov
mov
cmpsl
ljmp
push
dec
loop
xchg
shl
jns
std
jae
mov
fstps
jmp
xlat
aam
inc
sub
int3
bound
addr16
push
inc
xor
mov
fmull
cli
jmp
aas
leave
adcb
xchg
jae
xlat
xchg
pop
in
int
pop
xor
and
shl
pusha
sub
cs
in
ret
bound
movsl
pop
adc
aas
dec
in
or
inc
inc
xchg
rorb
daa
pop
mov
inc
lds
lds
xorl
adc
fwait
and
loopne
jecxz
mov
jno
inc
inc
xor
test
lahf
pop
jg
repz
sbb
test
cltd
repnz
add
loop
or
adc
mov
js
cmp
push
notb
push
cmpsb
push
mov
mov
inc
cmp
xlat
loope
pop
xchg
cwtl
sbb
shlb
jle
cmp
mov
lahf
xchg
daa
lea
sub
add
mov
add
and
ljmp
outsb
fabs
jo
loopne
cmc
pop
push
mov
xor
sbb
mov
lds
scas
leave
clc
add
inc
jb
mov
out
xchg
push
jmp
fmul
mov
xchg
mov
inc
adc
out
fst
or
in
jecxz
jecxz
icebp
xlat
hlt
cmp
data16
stc
out
xor
jae
hlt
inc
cwtl
test
icebp
lods
cli
dec
nop
addr16
and
in
xor
cld
cld
jge
adc
enter
testb
dec
movsl
and
inc
sub
pop
xor
jecxz
bound
std
sbb
push
jno
jno
jae
xor
jle
mov
mov
sbb
and
xchg
pushf
fdivrl
int
add
xchg
int
mov
getsec
pop
ds
pop
sbb
pop
or
mov
cmc
mov
xor
in
bound
push
xor
addl
outsl
or
mov
jo
mov
imull
fs
inc
stc
cmp
js
inc
popf
sbb
outsb
push
push
jb
ret
mov
mov
jno
fmull
addr16
mov
cmp
or
sbb
int3
jle
int3
jmp
jmp
dec
push
jno
and
incb
cmp
inc
dec
jbe
sub
and
xor
out
add
ja
xchg
mov
push
and
jg
sub
dec
adc
mov
inc
jge
mov
imul
sbb
cli
or
loop
or
les
leave
xor
inc
mov
sbb
dec
sbb
shl
jmp
push
ja
sbb
dec
xor
mov
pop
clc
dec
add
test
mov
pusha
cmp
push
cmp
sti
jl
aad
mov
pop
filds
xchg
dec
sbb
bound
outsb
or
jns
enter
std
pop
out
push
faddp
pop
stos
sub
push
mov
popa
mov
mov
std
xorb
rolb
bound
mov
dec
addl
cwtl
dec
mov
ret
cmp
shrb
mov
imul
fdivr
out
cmp
ljmp
test
cmp
repz
ficoml
dec
mov
fsubs
jbe
add
cli
xor
movsl
adc
ror
jns
js
dec
daa
je
fisubl
mov
cmpsl
push
fsubl
or
sub
hlt
lret
sbb
fisttpl
cli
adc
test
cmc
push
mov
xor
inc
push
jnp
js
js
shlb
and
jnp
jg
and
imul
int
bnd
stos
ret
cmp
stos
xchg
arpl
fdivrs
aaa
sub
pushf
push
popa
or
jmp
into
xor
and
je
sbb
pop
js
clc
xchg
in
stos
inc
mov
leave
jae
sbb
jne
pop
dec
lcall
push
xchg
test
xor
cmpsb
lods
call
jbe
inc
sub
mov
je
push
ss
outsb
xchg
xor
not
test
in
push
cmp
mov
mov
push
mov
lret
sbb
shrl
jbe
xchg
jl
mov
test
cmc
addl
ds
adc
and
rclb
mov
adc
addr16
adc
insb
loopne
movsb
out
and
xchg
out
inc
inc
sbb
insl
xor
sti
adc
lret
pop
mov
les
add
fsubrs
xor
push
icebp
outsl
cwtl
adcl
daa
lret
pop
shll
jp
nop
adc
adc
sti
adc
xor
out
mov
push
xor
or
jp
inc
pop
fisubs
inc
push
mov
movsb
lea
int
rcr
mov
mov
pop
add
mov
mov
cs
push
out
fucomp
mov
lods
push
jno
xchg
jns
jnp
insl
cmp
xorl
mov
cltd
loopne
and
fldenv
pop
dec
sbb
arpl
jmp
inc
repz
fpatan
jge
jo
pushf
out
sbb
in
stc
shld
push
xchg
imul
outsl
inc
xor
ret
repnz
xor
pop
outsb
cmp
pusha
xchg
pop
xchg
jecxz
and
movsb
cltd
or
loop
jb
shlb
pop
xchg
call
les
sub
addr16
rorb
mov
jmp
push
int3
bound
xchg
sahf
lret
xor
dec
mov
sub
dec
jle
or
jle
xchg
fimuls
push
ljmp
push
in
fstpl
cmc
mov
mov
mov
fldt
push
stos
xchg
mov
stos
xchg
orl
and
xor
pop
mov
iret
stos
repnz
pop
fimuls
imul
and
inc
icebp
add
cmpsb
dec
rol
adc
mov
in
loop
jns
cld
cmpsb
and
daa
xchg
jp
movsb
dec
add
pop
xchg
aas
xchg
push
outsb
inc
pause
leave
es
popa
rolb
rcrl
or
ret
jae
jge
ds
icebp
inc
jae
mov
xchg
xchg
imul
gs
jmp
pop
je
xor
inc
test
pop
fmuls
inc
or
enter
xchg
sub
mov
bound
out
mov
lods
repnz
in
sub
cmc
pop
sub
sub
jmp
mov
jbe
shlb
lea
xchg
and
mov
insl
and
jge
cmc
lret
es
in
push
dec
inc
pop
stos
sub
ret
mov
jp
mov
or
xor
pop
cltd
mov
mov
lret
pop
mov
jbe
js
pop
jl
scas
or
ds
push
xor
push
inc
inc
outsl
xor
push
mov
mov
incb
out
icebp
pop
add
pop
mov
ret
test
gs
aas
sub
mull
dec
daa
xchg
subl
pop
aam
shll
sti
fiadds
ljmp
mov
adc
ret
cltd
mov
imul
xchg
pushf
pop
dec
repz
sahf
lock
cmp
out
in
icebp
inc
mov
bts
bnd
sbb
adcl
and
xor
dec
lods
sub
cli
pushf
mov
outsl
mov
adc
stc
sub
push
pushf
ds
imul
icebp
imul
add
jle
fldcw
shl
addl
push
sub
bound
decl
mov
lcall
test
or
pusha
psubw
pop
inc
jp
movsl
xchg
ret
test
jne
mov
rcll
mov
xchg
xchg
scas
add
xchg
adc
pop
fsubs
and
sahf
add
mov
or
cmc
inc
push
lock
pop
add
inc
cmp
cmc
sbb
cmpsl
pop
adcl
jb
sub
pop
insb
hlt
into
xchg
fldt
mov
push
lahf
lcall
lea
xchg
sub
ljmp
jmp
in
mov
filds
cltd
inc
jno
mov
loop
aas
or
mov
pop
imul
ss
lahf
aad
inc
sbb
sbb
fstps
nop
lods
jp
fadd
inc
daa
jns
adc
sti
pop
pop
pop
mov
cli
pushf
cld
popa
jb
mov
dec
jmp
popl
cmp
movsb
dec
scas
test
pop
shlb
imul
cli
jns
mov
dec
icebp
test
cmp
and
xor
mov
inc
mov
lods
and
jnp
or
aas
jne
outsl
cwtl
rcrl
lcall
xchg
cmpsb
nop
cld
jae
dec
jbe
pop
lahf
fistps
mov
cmpsb
xchg
add
push
mov
cmc
mov
jns
imul
pop
loope
adc
aaa
imul
lea
aas
subl
or
and
xchg
add
dec
repnz
xor
adc
cmp
lods
sbb
aam
xor
or
or
stos
int
lret
test
mov
rcll
and
xchg
repz
sub
ret
cmp
incl
sti
leave
pop
iret
mov
sbb
and
jbe
jbe
orb
adc
xchg
dec
or
imul
sub
imul
lods
push
xlat
fsubrp
lea
xor
in
push
jns
fwait
sub
mov
fbld
jns
mov
dec
mov
je
jb
jno,pn
mov
sti
leave
or
cmp
push
orb
stc
inc
dec
fistpl
lret
pop
ljmp
pop
lods
cmpsb
mov
lahf
loop
outsl
add
daa
add
mov
sub
mov
sbb
lods
dec
push
sbb
stos
negb
inc
clc
jns
xchg
out
inc
mov
out
sub
mov
cld
mov
push
push
stos
cmp
cmp
dec
scas
add
and
mov
mov
xchg
pop
aad
or
shr
loope
clc
dec
fadd
pop
cld
lods
idivl
xchg
aaa
push
inc
jle
adc
loop
outsl
sbb
cmp
xor
out
aaa
stos
and
call
popa
dec
xchg
pop
mov
outsb
xchg
scas
mov
xor
dec
js
pop
or
pushf
js
fmuls
pop
sub
incl
lods
clc
fwait
mov
inc
sub
cmpsb
push
ja
lcall
cmp
xchg
sbb
cmp
imul
push
in
xlat
sub
jmp
daa
jecxz
imul
add
xchg
inc
dec
fs
adc
repnz
jp
inc
xor
outsl
sarl
pop
mov
sub
mov
add
cmp
cmp
inc
daa
or
jp
pop
cmp
test
adc
inc
add
sub
add
mov
inc
in
out
inc
and
cmp
ljmp
adc
stos
mov
icebp
mov
cld
mov
inc
cmpsb
lea
mov
loope
sarl
lods
mov
jnp
add
sub
in
mov
adc
jl
and
xchg
fsubrs
pushf
cmp
orl
pop
cwtl
cld
movsl
sahf
lods
test
inc
mov
popf
fld
cmp
inc
arpl
cmp
out
das
mov
sbb
mov
mov
xchg
mov
data16
movsl
in
jmp
dec
xchg
imulb
dec
xchg
and
push
sub
hlt
es
pop
fsubs
aas
arpl
adc
bound
lea
imul
xchg
push
mov
jecxz
fbstp
pop
loope
pop
cmp
cltd
xchg
mov
out
iret
insb
mov
or
sub
inc
and
push
int3
ja
or
ds
in
imul
inc
out
sahf
pop
adc
ja
ficomps
arpl
aad
les
jecxz
loop
cwtl
push
push
test
in
mov
sbb
ret
dec
jl
or
pusha
mov
dec
pop
rolb
test
cmp
enter
pushf
cmp
scas
xchg
rcl
jnp
push
in
pop
loope
fdivrp
dec
cltd
loopne
lret
lock
push
or
jmp
ds
sub
xor
mov
cmpsb
xchg
lahf
push
inc
push
roll
pop
pop
cmp
dec
xchg
in
shlb
jae
dec
mov
xchg
movsl
mov
or
jg
push
xchg
jae
push
xor
mov
dec
add
xor
adc
lcall
loop
cmpsl
cmp
ficompl
add
or
inc
addr16
pop
lods
xchg
dec
ds
pop
push
subl
cmc
mov
and
pop
repz
mov
loop
lds
aas
in
mov
leave
sbb
mov
loope
repnz
pop
pop
sbb
mov
sub
and
inc
fidivrl
jns
clc
imul
cmp
ljmp
mov
xor
xor
fldt
pop
and
jmp
scas
sbb
inc
call
test
outsl
das
cmp
outsb
inc
mov
sub
lcall
jo
xlat
pusha
cmp
mov
push
ja
push
int3
cld
sbb
ljmp
sbb
test
adc
ror
pop
xlat
arpl
mov
in
pop
push
in
pop
xlat
divb
push
imul
pop
into
scas
in
and
andl
nop
mov
sbb
push
inc
lods
mov
fidivs
xlat
stos
lods
pop
inc
pusha
in
and
push
out
scas
call
add
shr
in
rolb
pop
sub
popa
gs
inc
cmp
outsl
in
jecxz
sub
and
mov
xchg
mov
xchg
xchg
insb
cs
sbb
ret
mov
inc
ds
add
fs
sti
out
dec
or
jg
and
cmpsl
xchg
push
xor
rorl
push
sahf
rclb
xor
lods
icebp
adc
jno
in
mov
and
mov
lret
roll
mov
add
out
roll
adc
fcmovbe
mov
roll
pop
test
loop
or
ss
jbe
lock
jecxz
fstpt
cmp
pop
mov
aam
inc
dec
jnp
jge
inc
mov
sbb
scas
aad
and
adcb
jmp
subb
push
gs
fstpl
mov
add
movsl
outsb
insb
inc
icebp
push
add
sti
jb
nop
pop
test
fwait
bound
jl
enter
lock
cmpsb
movsb
push
jo
push
out
iret
arpl
stos
xor
xchg
mov
pop
in
cs
cmp
in
rorb
mov
in
jno
dec
inc
push
xor
mov
mov
jb
mov
or
cmp
subb
stos
daa
bound
orl
push
inc
or
adc
lret
fldl
mov
push
loopne
and
lahf
imul
push
insl
and
in
mov
movsb
or
xchg
jne
rorb
aad
lcall
cld
mov
rcrb
push
test
inc
adc
mov
fs
mov
aam
pop
ret
and
cmp
cltd
push
mov
sub
jbe
fists
dec
mov
in
dec
jp
inc
sti
fcoms
repnz
inc
and
movsb
inc
testb
xor
or
jb
xor
addb
pop
ds
lcall
inc
add
test
sarl
jle
ja
jmp
dec
and
mov
adc
loop
idivb
dec
fdivp
mov
pusha
and
fists
out
fs
fwait
shll
xor
lret
pinsrw
data16
xchg
out
int
sbb
push
push
lods
mov
outsb
push
pop
xor
cmpl
cmp
sahf
adc
cmp
cmpb
test
push
dec
es
inc
fwait
jp
xchg
out
add
stos
adc
test
je
nop
xchg
enter
dec
int
cwtl
inc
fimuls
or
jns
aas
scas
pop
mov
dec
sti
scas
mov
sub
sti
pop
test
faddl
push
mov
adc
mov
and
fistpll
dec
std
cwtl
clc
lock
adcl
mov
push
lret
cmp
bnd
test
test
repz
into
les
jnp
cli
xor
inc
movsb
push
lea
push
lods
or
or
fs
inc
sub
jae
sbb
pop
jmp
and
push
loope
fldt
pop
and
icebp
push
leave
ficomps
test
stos
mov
or
shlb
cli
das
adc
push
pushf
inc
iret
loop
fwait
cmc
lds
jo
xchg
repz
pushf
jl
pop
add
adc
mov
pop
jns
inc
les
lea
sbb
inc
pop
sub
mov
jo
pop
mov
dec
jmp
sub
inc
in
sbb
stc
and
inc
xchg
jno
int
in
adc
test
jb
cmpsb
rolb
mov
out
inc
inc
mov
je
out
cmc
imul
pop
icebp
lcall
mov
sub
jnp
fwait
jle
es
push
or
arpl
pop
jmp
cwtl
cs
mov
test
popa
sub
in
jge
add
or
int
xlat
je
or
gs
xor
js
mov
movsb
sbb
push
fnstcw
pushl
adc
movsb
xchg
push
dec
fldcw
cmpsb
ss
cmp
push
sti
jns
xchg
enter
pop
pop
pop
push
nop
scas
cmpsb
push
mov
sbb
shll
popf
mov
pop
shlb
and
mov
shll
dec
push
adc
add
loope
jo
push
sbb
xchg
pop
call
sub
push
fwait
cmp
repz
lods
sub
repz
outsb
push
cmc
mov
scas
out
add
ja
dec
push
insl
call
int3
jnp
mov
mov
fists
jo
loopne
inc
fistl
sbb
push
loopne
sub
test
mov
inc
pop
movsl
mov
lret
repz
mov
rolb
mov
jb
lock
cmp
push
dec
ss
call
jne
xor
sbb
test
or
cmp
sti
sbb
inc
aas
out
push
pop
sbb
sbb
int
sbb
push
dec
aad
lock
cmp
mov
pushf
pusha
lds
mov
std
popf
stos
fildll
notb
jb
push
imul
xor
out
enter
in
movsb
or
push
adc
xchg
pushf
inc
clc
icebp
lods
inc
shrb
xor
mov
js
xor
push
sarl
jb
mov
sub
mov
roll
lret
xchg
jnp
sub
mov
scas
push
shrl
imul
testl
lods
and
cmpsb
stos
push
rcll
inc
mov
lcall
jno
out
mov
xor
out
pop
or
add
lods
imul
dec
and
pusha
imul
push
cmpsl
and
je
pop
inc
stos
rcll
mov
cmp
cmp
mov
aad
and
into
pop
sub
data16
mov
sbb
dec
cmp
or
sub
orb
mov
pop
scas
jnp
sub
daa
out
add
lret
lahf
int
cli
mov
js
push
add
ret
pop
mov
hlt
jge
mov
pop
xchg
adc
push
or
inc
fistpl
mov
lods
inc
cli
xchg
mov
mov
scas
inc
std
rorb
xchg
lods
jns
mov
ja
sub
xor
dec
fisttpl
out
call
sub
adc
add
xchg
dec
mov
mov
mov
xchg
imul
and
lods
xlat
or
hlt
leave
add
rol
shlb
xchg
call
ljmp
xor
stc
fidivrl
adc
int3
call
leave
cmpsb
jg
jmp
iret
test
test
pop
jl
xor
and
and
jecxz
in
cmp
test
inc
xchg
xchg
push
push
insl
push
lahf
in
sti
popf
and
lahf
adc
scas
je
dec
or
adc
push
pop
mov
jnp
pop
mov
jl
int
inc
inc
xor
cli
sbb
nop
shll
out
cld
inc
jnp
pop
ret
jmp
aam
cmp
adc
iret
out
cs
mov
in
std
or
gs
dec
mov
jecxz
test
push
out
aam
out
and
enter
pop
mov
sbbl
lds
and
push
pop
push
jne
imull
fists
mov
adc
inc
mov
mov
xor
cmc
xchg
lret
and
mov
add
mov
or
mov
mov
cs
xor
enter
sub
mov
push
arpl
add
add
enter
shll
loopne
jp
cs
lods
xor
andb
aas
adc
xorl
pop
ret
or
fisttpll
lret
xchg
vandps
push
push
xor
test
pop
imul
repnz
lods
adc
test
mov
push
roll
in
les
jne
xor
es
push
shrl
jl
and
lret
mov
inc
loope
xchg
xchg
xlat
jne
fcom
or
add
sti
movsb
data16
es
arpl
ljmp
cmp
ljmp
shll
or
cmpsb
int3
mov
jno
popw
fidivrl
scas
std
filds
dec
lahf
push
nop
jo
nop
pop
sahf
jb
jns
add
loopne
repz
ror
xlat
xor
rolb
cmp
outsl
inc
loopne
dec
sarb
lret
rcrl
cld
pop
ja
xchg
leave
fdiv
fcomp
xor
and
sbb
cs
nop
in
push
fs
sub
push
cli
jno
mov
or
jge
call
mov
sub
jmp
or
dec
cmpb
jb
ljmp
or
addr16
jb
lret
xchg
loope
int
test
or
cmove
shrl
out
push
lea
in
ret
int
mov
push
sbb
int3
jle
mov
popa
movsl
sarl
icebp
mov
push
repnz
and
repz
test
mov
cmp
scas
dec
testb
andl
leave
and
lret
or
push
jb
jnp
stc
mov
lcall
sbb
xchg
jb
leave
add
pop
pmaddwd
push
push
imul
inc
pop
dec
mov
pushf
and
cmp
push
pop
sti
inc
int
xor
mov
cwtl
push
xchg
jbe
jne
in
mov
and
and
inc
jo
push
pop
xlat
push
mov
leave
enter
ds
inc
je
mov
sub
xchg
mov
sti
es
shrb
add
fisubs
push
out
cmp
sub
test
aas
dec
faddp
dec
ja
sbb
xor
add
lods
sub
mov
cmp
icebp
sub
mov
cmp
dec
daa
adc
mov
daa
test
mov
pop
jge
les
pop
jb
xchg
push
stos
xchg
and
out
lea
bound
in
mov
push
add
cwtl
sub
iret
loope
mov
outsl
cmpl
dec
cmc
xchg
out
les
dec
pop
inc
iret
and
push
add
sbb
lock
and
lret
push
push
mov
aam
call
ret
popw
dec
xchg
ja
push
sarl
push
push
cmc
out
cmc
mov
lcall
stos
addl
jnp
cltd
in
test
or
xor
jmp
enter
les
push
mov
jge
out
pop
or
xor
adc
mov
fistps
incb
mov
jne
mov
cmp
test
mov
es
mov
xchg
imul
inc
sbb
out
xor
mov
int
cmpsb
dec
push
push
js
dec
loopne
mov
pop
or
stos
fidivl
out
adc
jg
dec
outsl
and
or
loope
out
aaa
rorb
xchg
aas
int
out
leave
mov
shlb
shl
mov
fnstenv
dec
inc
and
outsl
int
or
insb
fsubrs
rcll
cmp
fiadds
enter
mov
popf
add
adc
mov
inc
cs
gs
push
inc
pushf
repnz
in
shrl
mov
mov
ljmp
add
mov
sub
shll
je
dec
push
jle
adc
out
add
xchg
sub
mov
je,pt
fwait
pop
pop
add
adc
jp
push
mov
push
scas
jmp
fmull
sahf
ljmp
sub
push
add
sbb
push
mov
repz
into
and
fmull
dec
data16
aam
pop
hlt
les
inc
push
or
movsl
ds
sub
into
lods
mov
scas
leave
pusha
shrl
lahf
xchg
std
xor
aas
leave
lock
repnz
lahf
loop
xor
lret
xor
mov
mov
es
mov
pop
test
or
into
loopne
lahf
aam
movsb
inc
jecxz
xchg
rcl
xchg
push
mov
dec
pop
ljmp
and
test
jmp
aam
xor
fidivs
jg
sbbb
pop
pop
popa
out
dec
es
shlb
int
mov
sbb
test
or
dec
hlt
adc
sbb
rcr
ds
repz
loopne
and
xchg
cltd
daa
push
jecxz
insl
ret
fdivrl
sbb
popa
push
and
push
xor
inc
fldcw
cmp
fisttpll
repz
lahf
inc
lcall
sbb
or
mov
test
mov
inc
sarb
pop
jno
or
or
shl
lret
stos
addr16
cmp
mov
dec
outsb
mov
xor
mov
js
test
rcll
lret
loopne
loop
dec
lods
sbb
cmp
and
adc
cmc
add
out
pop
cld
sbb
rcrl
adc
mull
xor
or
sysenter
mov
nop
scas
lret
int3
add
adc
add
fsubs
addr16
ja
inc
push
jp
xor
xor
xor
lret
pop
jo
xor
fcomip
iret
adc
imul
add
mov
push
pop
aas
sub
mov
loopne,pn
loopne
xchg
push
and
mov
leave
sbb
dec
inc
clc
mov
xor
and
ds
mov
insl
data16
int3
mov
pop
or
sarb
iret
or
jmp
cmp
mov
out
mov
and
xor
sbb
adc
js
aam
lahf
movb
or
loop
ret
inc
adc
sub
xor
test
add
mov
sub
adc
sbb
mov
cmp
xor
mov
out
jge
add
ficoms
lret
fadds
adc
and
and
push
leave
jnp
cmp
in
pusha
pop
in
push
lea
mov
push
sbb
into
sub
movsl
test
imul
rcl
sti
out
cmp
mov
add
jge
inc
out
mov
repnz
jae
mov
aas
fistps
fmull
shlb
repz
aas
insl
inc
outsb
cmp
push
lret
xchg
out
cli
or
ljmp
icebp
inc
addr16
shl
test
hlt
pop
jnp
fcmovbe
xor
sbb
jbe
mov
mov
pop
out
push
adc
jo
mov
or
inc
xor
out
call
test
pop
cmp
xor
int
cli
xchg
insb
inc
jl
call
sub
ja
xchg
in
popa
hlt
xchg
cmp
mov
dec
in
je
xor
xlat
push
dec
fs
sbb
pop
xchg
sub
ss
ret
subb
clc
das
mov
add
loop
jp
int
sbb
xchg
fcomps
push
push
les
movsb
std
mov
cmpsl
cmp
into
xor
add
push
sbb
sbb
aam
sbbl
push
mov
and
jl
in
fldcw
outsl
rcrb
or
fcoml
data16
shrb
sub
icebp
pmaddubsw
popl
push
mov
popf
adc
push
inc
pop
mov
or
jp
add
lock
in
push
mov
pop
jmp
pop
add
sbb
cwtl
cmpsb
ds
enter
or
mov
jb
sbb
sub
mov
mov
jp
mov
push
pop
cmp
add
lcall
adc
data16
sbb
and
dec
push
add
adc
rolb
cmp
mov
cmp
push
repz
or
repnz
subb
in
push
sti
jl
aaa
mull
and
call
stos
push
mov
and
mov
clc
xchg
ret
jecxz
cmpsl
movsb
mov
sub
andl
phsubw
xor
outsl
pop
out
lcall
mov
mov
xor
ss
inc
aas
fs
jle
fsubr
int3
sbb
jbe
or
aam
clc
stos
fsubrl
push
mov
outsl
mov
fstpt
int3
lods
mov
hlt
mov
in
pop
xchg
or
cmpb
jge
sub
mov
add
xor
enter
lods
adcb
test
jbe
xor
cld
mov
push
adcl
sahf
and
push
aaa
sub
arpl
ficompl
sbb
les
add
jg
outsl
ret
mov
negl
fistpl
adc
and
aas
mov
mul
cwtl
fistl
push
sub
push
movsb
cmp
add
sub
popa
in
addr16
add
sbb
dec
inc
jae
or
int3
scas
adc
data16
loopne
or
pop
fistpll
in
pusha
adc
inc
repz
es
arpl
cmp
aad
inc
lock
iret
arpl
sti
lahf
shrb
es
ljmp
ret
sarb
frstor
lods
in
leave
in
sbb
fdivrp
enter
add
xchg
cmp
pop
add
loopne
into
cmp
pop
das
xchg
test
outsb
or
push
aas
jb
loop
push
pop
push
push
xchg
shll
pop
lea
lahf
and
decb
pop
xlat
pop
adc
jmp
mov
add
sbb
cmpsl
scas
int3
mov
loope
inc
jp
ret
fstps
mov
sub
mov
imul
jge
dec
mov
data16
mov
xchg
in
ret
notb
push
les
test
pushf
push
xor
cmp
lds
pop
leave
dec
fnsave
popf
or
mov
rorb
test
xchg
ret
cli
cmp
fidivrl
hlt
movsl
insb
sub
and
stos
imul
shrl
inc
es
and
mov
divl
jl
movsl
dec
bnd
push
jno
pusha
test
jp
mov
jns
jge
cli
rcrl
xchg
testb
fisttpll
iret
push
inc
inc
mov
mov
push
pop
add
lea
pop
hlt
mov
clc
movsl
add
sarl
xlat
rcl
cmp
sbb
cmp
add
adc
pusha
inc
gs
cltd
pop
jp
add
and
insl
mov
je
push
sbb
jnp
xchg
repz
xor
pushw
outsb
out
push
orb
lock
pslld
xor
sub
fisttps
adc
mov
ss
fwait
jecxz
sbb
leave
or
jne
cmp
pushf
mov
or
je
ror
add
sahf
xchg
popf
scas
fistl
dec
in
adc
lcall
adc
mov
cmp
dec
jbe
pop
into
call
pushf
inc
or
gs
incl
mov
int
shlb
fildl
pop
dec
das
jnp
movsb
cltd
cmp
loop
sar
in
lahf
jmp
sbb
adc
mov
dec
dec
insl
inc
cld
mov
adc
push
dec
roll
mov
iret
aas
mov
pop
mov
fdivs
pop
pusha
push
xor
dec
fs
lahf
movsl
mov
insb
divb
push
cmp
lcall
arpl
add
mov
pop
mov
mov
or
cwtl
cmc
loope
sti
push
mov
sar
out
int
stos
lock
inc
sbb
and
shr
psllw
pop
sbb
movsb
and
fdivrs
inc
ud0
cmp
or
push
addr16
fldcw
xchg
dec
rcll
xor
daa
lods
xor
xor
xor
mov
rcrb
sub
mov
aas
mov
dec
push
adc
test
out
pop
pop
sub
stos
ficomps
rcr
mov
fidivl
aas
cmp
js
sarl
mov
lret
inc
addb
mov
ljmp
xlat
dec
cmpsb
jecxz
cmp
movb
ss
adcl
cld
lock
pushf
lods
rcl
aaa
scas
mov
in
mov
pop
inc
xor
jbe
mov
dec
adc
out
mov
sbb
pop
mov
fstpt
jae
std
push
xchg
icebp
movsb
test
ret
sub
adc
lods
xlat
dec
scas
jbe
sub
data16
sbb
push
insb
cmpsl
sub
repz
fldenv
push
lds
mov
jbe
and
adc
dec
fs
sub
arpl
sbb
addr16
cmp
add
in
dec
lcall
test
sbb
inc
xlat
das
pop
call
mov
cmpsl
fcmovbe
lret
stos
arpl
in
pop
imul
ret
popa
mov
ljmp
mov
test
sbb
cmp
dec
cli
adc
outsb
pandn
pop
dec
cwtl
mov
xchg
inc
call
in
ljmp
add
imul
fstps
push
push
loope
std
jge
adc
sbb
scas
pop
incb
imul
hlt
test
add
inc
xor
xor
jge
test
icebp
mov
dec
vpsubsb
jge
push
sub
lahf
xchg
xchg
mov
out
rcll
and
outsl
pop
lahf
daa
into
stos
or
xchg
mov
sbb
dec
inc
faddl
pop
adc
test
mov
sub
push
popa
adc
mov
lea
xchg
sub
lock
cmp
dec
pop
jecxz
sub
lock
and
stc
rcll
loope
pushf
or
aam
xchg
dec
jo
xlat
cmp
sub
sbb
fdivs
inc
add
push
ds
aam
xor
mov
rcl
imul
std
xacquire
mov
xor
mov
xchg
fcomip
jno
xor
sbb
outsb
pop
aam
scas
iret
pop
testl
fisubrl
insl
xchg
in
xchg
in
inc
sub
mov
mov
inc
push
aaa
push
pop
ret
push
push
mov
fiaddl
mov
rcll
sahf
int3
sbb
insb
imul
int3
clc
push
xor
or
adc
ja
test
clc
out
nop
xchg
repz
add
xchg
movsl
in
shll
popf
es
sbb
xor
cmp
adc
sbb
mov
push
jb
lods
jno
cmp
iret
leave
mov
dec
out
lods
mov
push
stos
mov
shll
inc
notl
imul
shr
xor
jns
xor
and
xchg
call
sub
clc
lods
cmp
xor
inc
sbbl
mov
jns
jo
mulb
xor
cmp
sbb
std
xlat
push
mov
repz
loop
sub
push
mov
sub
sbb
rcrl
cmp
push
push
mov
mov
or
mov
leave
sbb
mov
pop
push
enter
movsb
jp
cmp
sbb
mov
pop
jg
scas
in
in
mov
bound
std
dec
sbb
nop
push
rcll
popf
pop
mov
push
mov
jns
mov
adc
add
push
pop
roll
test
inc
jns
inc
jg
neg
lcall
jecxz
iret
aad
push
or
mov
xor
call
mov
jge
or
xor
add
lea
fwait
rclb
xor
xchg
nop
sub
sar
adc
rep
popf
adc
out
repz
push
dec
std
rclb
stc
popf
mov
xchg
jle
push
jge
push
fwait
pop
xchg
mov
cmp
cmpb
jbe
inc
dec
repz
mull
cs
pop
pop
dec
mov
ret
fucom
xchg
xchg
mov
repnz
sub
aam
aas
and
and
int3
cmp
mov
test
ret
test
rolb
xor
push
xor
sbb
inc
push
syscall
mov
dec
daa
jge
loop
push
push
cmp
cmp
add
and
pusha
out
lea
push
adc
jnp
sub
cmp
mov
out
pop
leave
sbb
xchg
repz
and
andnps
jne
pop
xchg
xchg
pusha
mov
cmpsl
inc
inc
mov
jns
jne
imul
mov
add
mov
mov
icebp
pop
adc
adc
adc
clc
orb
inc
outsl
mov
xchg
cmpsb
jl
pop
jge
fsubrs
and
sub
push
push
test
ret
cli
ss
jl
cmp
aas
out
jle
mov
sub
jecxz
scas
dec
movsb
sti
mov
orl
mov
stos
addr16
jp
cwtl
stos
pop
jg
mov
adc
xor
cs
popf
hlt
add
cmp
push
mov
lcall
pop
adc
xor
out
pop
hlt
jno
pop
rorl
loope
adc
loop
jg
mov
sub
shrb
inc
insl
aas
ret
sbb
push
adc
mov
iret
pop
inc
data16
aam
bound
and
lahf
lret
or
or
test
roll
or
inc
es
xchg
test
dec
mov
push
mov
pop
jl
dec
xor
mov
les
or
mov
fwait
mov
loopne
xchg
fcoms
mov
mov
lods
add
pop
sub
dec
cltd
jge
inc
xor
inc
xor
dec
push
and
dec
mov
sub
aam
rcl
loop
mov
adc
mov
insb
pop
repnz
in
in
jb
cmc
push
inc
popf
pop
push
or
add
jnp
or
insl
fildll
adc
sar
aaa
pop
pop
jae
mov
into
xor
jmp
sarb
xor
inc
xchg
or
les
rclb
in
adc
cmc
das
jl
xchg
movsb
sarb
add
mov
adc
ret
cmpsl
outsl
inc
lret
lret
enter
jo
aas
ffreep
fwait
xchg
or
rorl
loope
fsubrs
int3
mov
jmp
cmp
jnp
js
adc
sbb
ljmp
sbb
sub
cmpsl
jecxz
aam
shlb
push
dec
pop
cmp
xor
mov
push
bound
in
push
adc
hlt
or
out
aad
ss
jns
pop
inc
push
enter
loope
xchg
out
je
mov
pusha
jg
push
aaa
movl
dec
mov
fwait
add
aas
inc
sbb
xor
push
fstps
cli
mov
pcmpgtd
mov
imull
push
shll
lret
icebp
and
pop
aam
sbb
sub
cmpsl
bnd
cltd
inc
pushf
cmc
inc
push
adc
jecxz
aad
aad
dec
inc
mov
and
or
pop
sub
out
cli
jb
loop
xor
xchg
xchg
push
dec
fbstp
pop
test
mov
shrl
out
cwtl
xor
xor
fdivr
and
mov
popf
pop
and
sbb
push
pushl
mov
add
push
movsl
xor
cli
jnp
iret
mov
mov
ljmp
dec
inc
push
clc
dec
add
jg
jns
lret
leave
mov
lods
cld
sahf
cmp
popf
and
sbb
jecxz
mov
sub
jae
pop
mov
insl
dec
nop
adc
sbb
clc
push
cmpsl
rcl
lds
inc
cmpsb
push
lret
jnp
das
and
jno
lret
cmp
cltd
push
cmpl
lods
cmpsl
cld
popa
push
adc
loope
inc
addr16
cmp
test
sbb
outsl
outsb
sti
or
jg
ret
movsb
inc
pop
iret
call
and
out
movsl
mov
jg
cltd
lock
mov
dec
mov
sbb
jae
push
pop
dec
push
fcoms
and
dec
inc
outsl
fsubs
jmp
nop
lods
lcall
stc
addl
mov
dec
outsb
pop
push
xorb
dec
add
mov
xchg
in
or
mov
push
test
push
xor
jns
into
iret
fimuls
rclb
lret
pushf
out
idiv
xchg
push
imul
pushf
popa
push
jns
jg
lret
call
lods
call
inc
mov
out
push
push
jnp
xor
and
lea
insl
mov
pop
pop
out
pop
pop
cmp
add
les
cmp
lret
subl
shll
dec
fstpt
mov
pop
dec
push
dec
ret
lods
out
scas
add
push
aad
xor
add
out
cmp
fildll
dec
shll
fld1
cli
sub
xor
fnstsw
rclb
mov
les
and
jno
add
pop
add
dec
jno
les
daa
dec
sbb
daa
xlat
inc
mov
inc
mov
inc
orb
shlb
inc
fdivr
xchg
cmp
push
xor
and
test
fiadds
sbb
sub
xchg
add
and
test
push
push
mov
pop
pop
les
sbb
call
jmp
xor
sarl
jge
jno
and
adc
inc
pop
cmp
xchg
mov
sbb
in
in
mov
xchg
es
push
pop
stos
push
loopne
repz
lret
pushf
scas
ja
push
mov
push
packssdw
jae
dec
out
cli
out
push
pop
fildl
lock
cmpsl
scas
dec
or
jo
call
and
xor
mov
xchg
jecxz,pn
arpl
and
ds
mov
dec
mov
repnz
jle
pop
aaa
inc
loopne
adc
push
js
sti
mov
cmp
pop
adc
repz
xchg
inc
lods
pop
shlb
stos
add
add
cltd
scas
mov
mov
mov
xchg
or
adc
dec
xchg
adc
push
mov
xchg
pop
and
adc
shll
and
push
outsb
dec
out
movsl
dec
mov
push
sbb
iret
pop
inc
jno
xchg
push
mov
les
test
sbb
push
int3
arpl
cmp
insl
ret
cmp
or
push
push
mov
jo
incb
lods
rolb
hlt
jge
add
mov
test
push
imul
lret
stos
mov
sub
cwtl
leave
dec
and
mov
xor
and
dec
lret
adc
inc
lock
aad
xchg
or
mov
icebp
adc
mov
jae
dec
mov
repz
sbb
cmp
pop
dec
cs
rorl
xchg
sub
sbb
push
jl
push
pop
push
cmpsl
add
addl
sbb
push
jle
jb
in
rcl
xchg
mov
xor
lods
out
repz
mov
or
cs
fiadds
mov
jo
aam
lods
xor
call
push
mov
rclb
and
outsl
and
insb
iret
clc
or
fnstcw
lock
inc
mov
jno
bt
xor
cs
mov
push
aam
push
or
nop
shrb
sub
movsl
pop
test
nop
xchg
scas
fsubr
jl
xchg
int3
mull
loope
lea
pop
mov
mov
jnp
sbbl
ja
insl
sub
stos
outsb
mov
fadds
movsb
pop
test
jmp
out
dec
rclb
inc
stos
mov
addr16
popf
mov
and
sbb
js
loopne
jmp
xor
stos
pmaddwd
bound
shrl
add
insb
dec
mulb
loope
pop
loopne
pop
jbe
repz
jne
std
int3
pop
das
in
cmc
addr16
out
add
pop
scas
jns
or
frstor
jns
imul
ret
lods
shrb
mov
adc
lock
popa
mov
sti
mov
sub
xchg
push
cmc
push
ficomps
fcoml
pop
loop
mov
jo
sub
add
sbb
fdivr
call
push
and
adc
mov
aam
cmc
add
mov
pop
sub
sbb
pop
inc
mov
dec
or
les
aam
pop
pop
cmp
xchg
vpaddd
jbe
cmpsl
gs
adc
xchg
in
cmp
lock
push
pop
mov
ljmp
lret
mov
dec
cmpsl
icebp
sub
cmp
adc
sub
jo
mov
inc
add
popa
rolb
mov
jo
pop
aam
ds
pop
stos
dec
add
negl
push
loope
jno
mov
push
clc
das
xchg
cwtl
mov
pusha
adc
jmp
cmpsl
dec
mov
push
aad
xchg
sbb
outsl
adc
push
mov
hlt
rcll
pop
lods
addb
dec
sbb
ljmp
xlat
jns
popf
mov
xchg
adc
xor
jne
pop
sub
jnp
test
xor
cwtl
fsubr
cmpsl
xlat
movsl
ljmp
mov
mov
lahf
mov
insl
addl
sbb
fdivrl
jle
push
sbb
rol
lods
jge
out
roll
mov
mov
shl
sub
loop
or
or
and
data16
test
push
rol
mov
jp
mov
jb
jo
and
xor
adc
or
sti
leave
or
nop
leave
adc
push
sbb
pop
jo
pusha
sbb
and
pop
mov
push
insb
divl
lahf
add
mov
mov
jl
std
ret
pslld
mov
pop
daa
xchg
fsubs
mov
hlt
inc
adc
addr16
mov
or
cmp
pop
cltd
sub
out
shr
stos
je
mov
pop
inc
fimull
pop
xor
push
xor
add
mov
aam
dec
push
or
mov
lret
into
jp
dec
mov
lret
ljmp
hlt
and
mov
inc
das
adc
lret
adc
and
lock
push
mov
adc
pop
add
or
adc
push
outsb
adc
add
sbb
popf
sbb
test
xchg
fisttpl
daa
jl
or
pop
shrb
subb
popf
sbb
mov
xor
mov
inc
xchg
xchg
call
adc
nop
inc
aas
jno
dec
out
sahf
cld
cs
int3
xchg
out
push
inc
jno
push
ficoml
pop
mov
and
adc
test
fnstsw
cs
xor
xchg
or
dec
fstps
or
sbb
inc
ss
mov
mull
and
sbb
xor
jne
cmp
inc
dec
pop
out
add
sarb
or
mov
inc
out
inc
rcl
test
mov
pop
movsb
sahf
pop
mov
cwtl
inc
xchg
dec
xor
jl
push
test
jb
sar
mov
cmp
fistl
jecxz
jnp
ret
mov
call
sub
mov
mov
adc
test
imul
add
cmp
out
gs
movsl
cli
cmp
dec
jnp
mov
fwait
cld
lea
or
cmp
ficoml
out
or
movsb
jmp
lret
pop
dec
pop
mov
in
lcall
out
jo
or
inc
sbb
ljmp
fpatan
adc
js
lahf
inc
std
ljmp
fimuls
xor
daa
std
or
jbe
cmp
xor
jp
fildl
sbb
inc
nop
jbe
jg
movsb
add
outsl
fbstp
push
pushf
das
cmp
lods
stc
xchg
lods
xchg
je
les
jmp
sub
sbb
pop
pop
ret
lea
adc
mov
int
test
pop
cmp
jo
dec
jle
mov
test
jmp
sub
xchg
push
scas
enter
repz
or
mov
lds
or
aam
mov
cmc
loop
add
add
mov
fnstcw
jnp
insb
ror
cmp
jbe
pop
jmp
sahf
scas
out
and
in
mov
repz
mov
sbb
outsb
add
std
lret
int3
out
ljmp
sbb
mov
and
and
out
out
daa
leave
ss
in
scas
je
mov
mov
jecxz
ss
pop
push
jo
lock
in
das
dec
lret
pop
lock
sub
aam
das
mov
pop
sbb
xchg
mov
jl
push
jbe
in
jnp
rorl
mov
mov
inc
aad
imul
xlat
push
push
mov
and
xchg
cwtl
mov
ficomps
jb
fimull
adc
lock
insb
push
filds
int3
pop
int
jno
sahf
mov
out
sub
test
ljmp
jge
xchg
imul
cmpb
dec
loope
insl
loop
outsl
mov
or
jg
ret
adc
sub
lods
sub
sbb
lahf
aam
fadd
and
pop
hlt
xor
xor
stos
cmp
mov
jnp
sbb
or
popf
scas
aaa
in
in
mull
pushf
idivb
jne
clc
xor
xchg
pop
idivb
mov
mov
mov
in
loope
or
and
je
sarb
lods
pusha
and
sbb
sub
ljmp
inc
adc
inc
scas
decb
adc
in
in
cmp
xor
fcomi
nop
sub
and
pusha
int3
mov
fidivrs
sahf
or
mov
push
fnstenv
mov
mov
sti
in
mov
in
in
popf
icebp
mov
mov
mov
sub
add
jo
add
mov
xchg
mov
xor
andl
mov
cmpsb
sub
jmp
arpl
out
cmpsl
push
mov
xor
mov
fiaddl
scas
adcl
cmp
lock
dec
push
arpl
jbe
cmp
push
mov
pop
pushf
pop
adc
jge
mov
mov
imull
pop
in
mov
lahf
scas
jne
cmp
pop
gs
sbb
xor
push
hlt
fimull
test
cmp
jge
xchg
fildl
pop
lock
xchg
pop
pop
xlat
in
insb
pop
mov
lret
outsl
repnz
cwtl
test
mov
adc
ds
test
rcrb
cmpsl
addl
jnp
jmp
push
jns
test
adc
outsb
push
mov
mov
push
int
fs
aad
or
fstl
into
shrl
xchg
imul
xor
mov
mov
lods
mov
cmp
inc
hlt
mov
add
mov
mov
ljmp
mov
aam
lea
cmp
testb
xor
or
pop
jbe
inc
cltd
jns
aaa
add
stos
sahf
mov
mov
xchg
xchg
cmp
or
das
cmc
add
pop
mov
sub
pop
iret
add
fimuls
or
mov
repnz
fwait
jmp
into
xchg
and
cli
push
and
and
rcr
test
std
fwait
outsl
sub
xchg
das
dec
xchg
lret
gs
mov
pop
xor
mov
cmp
sbb
mov
fistpll
mov
ret
jecxz
mov
ret
push
in
int
sub
push
dec
addl
jg
daa
insl
adc
in
sub
inc
sub
sbb
sub
scas
faddl
add
xlat
fwait
je
cmc
push
adc
add
outsb
push
pop
xorb
push
in
ds
std
cmp
loop
xchg
mov
inc
outsb
shll
loope
inc
pop
das
mov
hlt
sub
aas
stc
push
adc
adc
and
add
pop
in
xor
lret
imul
pop
aad
pushf
xor
xor
pop
leave
xor
filds
adc
adc
mov
xchg
cmc
jl
aas
call
jbe
mov
adc
cmpsl
jl
mov
sbb
test
inc
sbb
dec
sub
hlt
xor
xlat
xor
inc
or
pushf
mov
fwait
stos
pop
cli
xlat
mov
mov
mov
jl
cmpsb
popa
repnz
sbbl
adc
in
inc
xor
jns
fs
push
incb
mov
pop
hlt
lahf
lret
xchg
mov
jbe
hlt
or
push
xor
sbb
iret
push
fcoms
pop
mov
aaa
push
int3
mov
sbb
push
xchg
pusha
orb
sahf
icebp
lods
push
arpl
push
bound
add
pop
in
pop
out
imul
add
jp
or
adc
or
std
outsl
cltd
push
cmp
outsb
jns
fdivl
xor
inc
rclb
pop
cld
aaa
cmp
xchg
and
mov
mov
adc
fidivl
push
jg
std
outsl
xchg
jmp
dec
stc
sbb
data16
je
xchg
out
adc
jmp
in
push
xchg
arpl
pop
dec
test
and
leave
add
jne
mov
enter
ds
dec
mov
ljmp
stc
jp
and
stc
shlb
and
push
and
mov
imul
fstps
scas
notl
dec
lds
cmp
out
lahf
pop
sbb
stc
dec
rorl
inc
dec
mov
jmp
dec
clc
push
scas
adc
ljmp
fisubrs
jle
jp
repz
xor
sub
mov
adc
and
in
ss
or
fdivr
inc
inc
dec
inc
add
out
pop
in
out
sbb
push
adc
xchg
std
inc
jbe
sub
adc
adc
mov
mov
sbb
adcb
mov
dec
cmp
sub
jb
or
mov
xchg
inc
push
pop
push
mov
insl
lret
sub
rcrl
cmp
out
mov
mov
arpl
lods
popl
mov
adc
insb
push
lahf
sbb
sbb
je
call
jns
gs
aam
jmp
jb
push
lret
js
xchg
cmp
mov
or
pop
adc
push
fstps
push
add
dec
xchg
jg
dec
inc
idiv
jne
mov
iret
jae
ret
movsb
in
pusha
push
rcrw
fcmovnbe
xchg
xor
cmp
jl
sbb
jb
sub
repnz
aas
mov
cli
push
mov
fisttpll
mov
xchg
sub
stc
loopne
fs
adc
mov
push
cmp
aad
sub
sub
jb
inc
push
xchg
insb
icebp
sbb
add
nop
fxch
ret
mov
imul
inc
lcall
dec
push
push
cli
xchg
or
into
push
pushf
int
stos
out
fstps
pop
aas
xchg
and
addr16
push
mov
in
xchg
dec
ss
mul
mov
mov
lahf
popa
xlat
popl
sub
testl
inc
pop
cs
data16
adc
jo
ja
cmp
mov
sub
add
mov
jae
push
fdivrs
pop
lods
enter
test
incl
cwtl
cwtl
ja
test
xchg
fs
xor
sub
add
and
daa
cmpsb
int3
xchg
ror
stc
fisttpl
sub
rcr
clc
dec
sbb
pop
jnp
jl
push
aaa
clc
pop
cmp
scas
or
sub
dec
jno
jge
mov
mov
xchg
cmpsl
push
cs
adc
add
jne
and
hlt
adc
les
or
cld
faddp
xchg
sub
je
add
mov
mov
xchg
subl
lahf
adc
sub
xchg
dec
cwtl
jge
push
rorl
xchg
sbb
arpl
inc
cmpsb
or
add
cld
push
hlt
mov
push
adc
enter
enter
mov
xchg
jge
add
mov
stos
xor
or
test
ja
sar
adc
pop
lods
lret
sbb
cmpsl
in
pop
xchg
mov
xchg
hlt
xor
ljmp
shlb
cs
add
sub
lock
jp
cmc
xchg
or
jecxz
imul
inc
loope
mov
pushf
subl
inc
mov
inc
xor
daa
inc
std
or
mov
ja
mov
mov
call
dec
divb
push
and
mov
mov
gs
stos
gs
in
mov
mov
cwtl
push
adc
lds
jmp
jge
dec
clc
int3
mov
inc
ficoml
es
cmpsb
cltd
add
sbb
mov
das
inc
mov
push
sbb
mov
loop
mov
or
daa
cwtl
mov
jns
cmpb
lret
pop
lods
fcoms
dec
movsw
or
inc
push
adc
sub
int
insl
push
pop
mov
arpl
xchg
fwait
xorb
out
jne
sahf
xor
out
cmp
sbbb
xchg
mov
push
mov
cltd
pushl
add
push
cs
pop
dec
shl
sub
movsb
sti
mov
loope
or
pop
inc
outsl
push
and
mov
orb
imul
popf
sbb
inc
dec
and
in
dec
or
inc
sub
jb
dec
iret
ret
stc
add
sub
insb
lods
mov
mov
push
ja
xchg
xlat
mov
cmpsl
xlat
dec
out
je
and
repnz
mov
mov
lods
sbb
jbe
jo
std
call
popf
inc
rorb
pop
push
mov
rcll
mov
push
lret
pop
pop
sti
js
xchg
test
out
stos
adc
inc
je
and
xor
insb
sbb
push
roll
bound
aam
push
push
out
pushw
cli
dec
leave
xchg
lods
adc
jbe
mov
loope
add
inc
ja
ret
cld
cmp
sbb
sbb
test
push
insl
pop
pop
xorb
lea
mov
push
fimull
mov
cmpsb
ja
cmp
sahf
adc
cmpsb
add
ljmp
jge
mov
push
fwait
mov
jbe
xchg
mov
dec
dec
lret
mov
dec
and
pop
mov
pop
int3
into
jns
stos
insl
mov
xorl
jg
mov
repnz
clc
add
js
or
loop
sub
xor
ret
xlat
dec
mov
mov
bound
push
es
cmpsb
mov
mov
es
add
push
xchg
and
xor
pushf
in
sub
add
fwait
push
cmpsl
outsl
sub
es
lahf
sbb
aas
call
or
leave
dec
mov
add
sbb
inc
icebp
xchg
stos
pop
js
mov
fcomi
movsl
add
push
jae
gs
sbb
daa
jae
xchg
jg
jae
mov
jl
jl
or
push
adc
adc
adc
jno
cmp
fisubrs
cltd
outsb
mov
jecxz
xor
leave
mov
xchg
cltd
xor
jl
out
test
outsl
cmpsl
and
arpl
fistps
xor
lret
or
sub
or
sbb
popa
mov
mov
decl
xchg
sub
stos
adc
addr16
mov
or
ljmp
add
ja
mov
sbb
mov
das
outsl
inc
cs
int
dec
shll
fmuls
mov
mov
push
xor
cmpsb
lcall
mov
stos
rolb
inc
mov
loope
push
sbb
lret
ds
jae
lcall
mov
sarb
cmp
jmp
das
leave
mov
fnsave
divl
and
aaa
mov
mov
repnz
inc
aaa
fcoms
stc
fdivr
scas
jnp
int3
xor
pushf
pop
ja
es
push
mov
es
sahf
cmpsb
hlt
push
shrb
pop
out
jne
sub
fwait
add
adc
pop
xor
outsb
inc
cltd
scas
arpl
push
pop
push
push
into
or
push
mov
loope
mov
push
cs
lds
aas
inc
shlb
test
xlat
cmpl
mov
test
sbb
adc
shll
movsb
test
add
movb
in
cmp
xchg
mov
loop
aad
pusha
aaa
jne
lds
stc
ss
int
or
mov
andb
jnp
stos
popf
gs
movsl
stos
ja
hlt
xor
out
jbe
xor
mov
data16
mov
das
jo
jl
adc
ljmp
jecxz
adc
or
shlb
or
xchg
cmp
movsl
cmp
cmp
xchg
sub
ret
cmpsb
fdiv
pop
adc
movsl
les
xlat
xchg
or
xchg
enter
jne
in
sub
mov
ficoms
xor
push
push
fisttps
xchg
sbb
mov
arpl
pop
or
pushf
sbb
xchg
pop
inc
pop
pop
push
push
xchg
pop
test
xchg
pop
subl
inc
jae
loopne
popa
pop
cmpb
mov
repnz
pushf
in
push
xor
xlat
out
aam
adc
adc
lret
mov
fdivs
sub
sub
clc
das
repnz
sub
xlat
lea
push
dec
dec
ss
and
mov
push
imul
mov
rcrb
popa
xchg
adc
inc
inc
cmp
jl
inc
mov
mov
aam
and
movsb
and
or
int
jg
stc
aad
in
xlat
enter
test
mov
sub
add
and
push
mov
xchg
hlt
mov
push
fld
in
cmp
mov
inc
mov
testb
jns
sbb
mov
push
push
ret
call
sbb
push
dec
ret
sub
pop
test
dec
push
loop
inc
jns
shll
push
sub
xchg
cmpsb
xor
and
lods
cs
mov
mov
adc
fs
inc
stc
jae
ficoms
ljmp
dec
int
cld
jns
test
adc
sbbl
xor
xor
mov
mov
fists
leave
pop
cwtl
push
cmc
adc
and
dec
in
adc
in
mov
sbb
popa
sub
or
mov
adc
push
pop
push
test
cmp
mov
stos
and
inc
jl
jp,pn
pop
mov
popa
ljmp
pop
add
pop
outsl
mov
pop
push
stc
es
int3
jle
add
jns
stos
cmpb
xchg
xchg
xor
pop
test
push
cmovge
stos
sub
mov
mov
leave
xlat
nop
cmp
shl
imul
in
push
push
push
sbb
iret
adc
lds
cmpsb
rcrb
adc
fldenv
mov
push
loopne
imul
jp
pop
lds
xchg
inc
aam
or
les
mov
fistpl
dec
outsl
mov
mov
addr16
push
dec
jg
inc
and
lea
stc
xchg
ficoms
fcomps
add
mov
sbb
sub
cwtl
mov
xor
ja
lock
inc
jmp
inc
xchg
mov
repnz
push
mov
fstps
and
add
xor
subl
rep
push
fdivr
mov
addb
icebp
aad
mov
fdivrs
mov
mov
fnstenv
pusha
xchg
rol
rorb
int
shlb
aaa
dec
xchg
pop
lods
test
nop
push
lret
mov
pop
mov
dec
inc
sahf
leave
out
loopne
push
cmp
shll
sti
inc
insb
cmp
sbb
xchg
jmp
ds
cmpl
dec
cmp
scas
ss
pop
aam
lds
jae
mov
lea
adc
lcall
rorl
mov
fisubl
call
sub
leave
push
clc
popa
shrl
sti
bound
lods
mov
flds
pop
push
pop
nop
push
mov
sbb
gs
mov
cld
fisubrs
push
leave
mov
movsl
push
shr
ficomps
dec
and
out
lret
jne
sbb
sbb
xchg
xchg
out
jmp
adc
lds
push
clc
inc
inc
icebp
pop
out
fcoml
outsb
ds
sbb
js
lock
dec
gs
clc
mov
fs
pop
out
sbb
shlb
je
adc
or
fcomps
out
jge
out
xchg
or
inc
mov
add
sbbl
mov
popf
xor
dec
mull
inc
mov
mov
jl
fdivrs
arpl
jns
addl
jae
cmp
mov
sub
lea
shlb
cwtl
jbe
mov
dec
push
and
call
sub
cld
xor
scas
inc
nop
leave
inc
fiadds
in
nop
gs
jle
insb
adc
sbb
or
fdivs
dec
and
add
pop
mov
inc
lea
or
jecxz
dec
fwait
inc
dec
bound
test
lods
xchg
push
or
push
xchg
add
jno
sbb
pop
push
aad
sub
inc
int3
xlat
mov
inc
pop
dec
pushf
mov
jne
mov
fstpl
in
dec
out
xor
add
nop
mov
sub
mov
subb
lock
sub
idivl
jl
dec
lea
sbb
mov
xchg
push
xor
dec
lock
mov
fs
in
mov
jnp
mov
gs
imul
fmuls
dec
iret
and
stc
fildll
push
xchg
and
push
repz
jns
mov
stc
adc
lods
jmp
or
mov
or
fstp
sbb
pop
cwtl
leave
pop
orb
push
pop
pop
loop
cmp
movsl
cmpsb
inc
stos
cli
cmp
dec
cwtl
and
dec
aam
sub
dec
std
daa
add
out
ret
imul
and
not
mov
inc
ljmp
mov
movhlps
gs
and
jae
ds
lds
cltd
scas
out
add
and
outsb
call
xchg
pop
mov
popf
aaa
repz
lahf
fists
aaa
lret
mov
fcompl
call
insb
rol
cld
xchg
les
leave
out
jge
inc
in
fiadds
test
sub
loopne
push
popa
lods
mov
sub
in
push
not
jp
ret
addr16
insb
cmp
mov
movsb
leave
adc
xor
sbb
and
js
cli
fwait
sbb
mov
fldcw
leave
fiaddl
xchg
fsubrs
ljmp
fwait
mov
ja
lock
dec
mov
ret
aad
adc
mov
ds
xchg
pop
cld
pop
pop
scas
das
daa
pop
mov
fwait
or
gs
jae
pop
add
add
cld
mov
inc
ds
jp
sub
mov
push
xchg
pusha
lds
mov
inc
adc
iret
callw
xor
or
clc
push
inc
xor
in
sbb
add
xchg
test
inc
fstp
jb
jb
ret
mov
nop
lret
out
xor
add
dec
sbb
sbb
and
push
cmpb
dec
xchg
arpl
push
xchg
int3
aam
push
pop
data16
fdivl
push
inc
mov
xor
push
xchg
jmp
idivb
lret
sbb
push
repz
cmpsb
and
mov
push
jecxz
ret
sub
insb
bound
add
stos
or
push
inc
aam
fisubrl
fwait
inc
fwait
pusha
aam
into
scas
and
xor
dec
clc
xchg
or
xor
and
enter
push
dec
sub
rolb
add
dec
push
add
or
into
addr16
inc
es
inc
aam
pop
cmp
xchg
lods
js
std
loope
sub
dec
inc
mov
aas
je
jns
imul
jp
shl
pop
loope
jge
mov
cmc
and
pop
bswap
fcmovnb
push
out
addl
hlt
inc
adc
jbe
or
or
in
jne
rcll
test
inc
pop
mov
add
mov
in
jle
mov
scas
test
mov
push
daa
mov
xor
rorl
sbbl
leave
out
insl
cmp
lcall
pop
cmc
add
pop
into
rcrl
sub
nop
xchg
adc
pop
inc
add
ljmp
iret
adc
loope
rorb
mov
jne
nop
lock
outsb
cmp
mov
jo
popf
pop
shll
shrb
mov
scas
pusha
adc
xchg
cltd
adcl
mov
mov
pop
xchg
jns
cmpsb
mov
pop
adc
mov
aaa
inc
enter
aad
lahf
cld
push
and
arpl
pop
dec
cmpsb
lcall
xchg
xchg
mov
in
pop
jns
les
mov
into
scas
adc
adc
jmp
add
adc
ret
jl
inc
icebp
adc
sbb
push
push
cli
sub
int
jnp
push
and
aam
call
das
pop
xor
ds
push
lret
mov
push
xor
add
pop
sub
mov
stos
loopne
cmp
xor
cmp
mov
dec
sbb
daa
add
mov
cltd
in
test
repz
lods
out
das
pop
cmpsb
rcrl
inc
dec
je
lods
dec
and
mov
insl
scas
sar
pop
pop
sub
jle
test
add
cltd
xchg
sub
adc
and
outsb
xor
in
push
rcrb
aad
gs
jp
sub
loop
cs
sub
shrd
xor
sbb
jae
pushf
fbstp
lock
mov
sub
xor
push
jp
es
inc
lret
cmp
xchg
jp
sub
jp
jns
xchg
cmp
fwait
xchg
fstps
stos
xchg
xchg
inc
and
dec
sub
jp
pusha
inc
xor
lea
sarl
xor
push
adc
cld
dec
fsubr
mull
jl
aas
dec
mov
out
mov
pop
jecxz
dec
jns
jp
adc
cmc
dec
sarl
adc
lods
pop
aad
or
xor
jmp
bound
mov
data16
push
jne
rclb
jl
ret
adc
mov
mov
adc
pop
xchg
pushf
shll
pop
sti
add
mov
adc
cld
xor
dec
pusha
inc
adc
add
mov
outsb
jp
mov
dec
dec
loope
fdivs
pushf
cld
ds
scas
jnp
add
push
sbb
and
lret
iret
shlb
mov
mov
pop
mov
or
add
test
bound
ljmp
repnz
push
pusha
das
popf
mov
jns
enter
jae
cmc
fistpll
and
pushf
mov
jg
ret
push
push
shlb
ds
push
pop
jbe
add
jo
stc
dec
lret
outsl
dec
xor
add
inc
mov
jb
fsubrl
test
or
push
sub
imul
push
adc
inc
jno
daa
xor
jb
cld
shlb
mov
sub
insb
out
loope
adc
shlb
xchg
mov
jle
sarl
mov
jne
js
gs
add
inc
lock
nop
sub
push
xchg
and
std
stos
xorl
les
outsl
insw
dec
cs
repnz
dec
mov
xchg
inc
idiv
and
out
rcr
imul
rcrb
xor
sbb
lret
sbb
roll
sub
push
addr16
test
sub
lods
gs
rolb
jge
push
or
xchg
xor
push
push
mov
mov
inc
xor
mov
sub
push
inc
imul
pop
fnstsw
js
add
adc
call
jl
dec
out
addr16
xchg
inc
lods
pusha
and
cmpsb
pop
sbb
or
or
out
mov
repnz
dec
mov
subb
in
pushl
cmpsb
ret
adc
inc
push
cmp
arpl
cltd
setbe
xchg
jb
jle
int
mov
dec
dec
pop
mov
mov
push
push
sbb
cltd
sbb
inc
dec
pusha
aad
outsb
in
cmp
mov
inc
pusha
in
jle
call
arpl
movsb
pop
pop
mov
int
stos
adc
sbb
in
test
imul
fistps
push
loope
stos
jno
push
push
push
test
pop
dec
xlat
xor
jg
mov
popf
cmpsb
inc
mov
icebp
insb
push
daa
jae
scas
pop
sub
in
push
xchg
push
mov
movb
test
push
fisubl
andl
inc
into
mov
mov
add
cwtl
xor
pop
dec
cmp
fs
inc
push
sbb
inc
add
lahf
sti
mov
pop
inc
popf
and
decb
int
lock
cmp
add
mov
xor
imul
mov
jb
pop
scas
push
mov
sbb
lcall
fucomi
jp
notb
stos
fs
fwait
jle
xchg
pop
cltd
mov
pop
ret
std
xchg
push
scas
fsubs
add
dec
ret
inc
cwtl
cmp
pop
dec
push
loopne
cmp
pop
adc
dec
add
jno
add
mov
cmp
popa
insl
in
push
ss
cmp
arpl
mov
movsl
popf
cld
mov
int
and
insb
lds
jle
mov
sub
std
stc
push
aaa
pop
push
js
jno
cmp
or
mov
dec
andl
pop
or
cltd
outsb
add
imul
mov
dec
sbb
sub
cmpsb
out
ljmp
sbb
pushf
xchg
movsl
jno
pop
cwtl
ret
mov
dec
mov
fdivl
inc
fwait
push
daa
or
mov
pop
repnz
dec
call
bts
mov
lret
mov
inc
in
dec
push
leave
lods
les
adc
xor
lea
mov
cltd
xchg
jae
cld
push
inc
inc
incb
cmc
or
pop
outsb
push
aam
popf
scas
jbe
cmpsb
xchg
push
mov
dec
and
dec
mov
loop
popf
dec
xor
fisubs
push
sbb
aam
inc
mov
mov
fwait
mov
insb
cli
cwtl
test
shll
cwtl
aam
add
cmp
test
cmp
push
insl
pop
stos
mov
cmp
out
mov
paddw
lcall
sbb
loopne
in
or
and
fwait
adc
dec
push
clc
mov
jae
push
in
iret
aam
ljmp
cltd
das
shll
jmp
sarb
cmc
dec
popa
aas
lods
cld
or
dec
fidivl
inc
cmp
or
sbb
aad
test
sbb
adcb
filds
shlb
cmp
arpl
lcall
dec
sbb
fcoms
and
fimull
imul
inc
and
xchg
lods
shlb
lea
iret
lods
xchg
das
push
sbb
lret
inc
xchg
mov
xchg
mov
pop
lahf
sbb
pop
inc
xor
sub
cld
pop
das
loope
mulb
mov
inc
or
mov
es
adc
call
adc
test
outsl
adc
fimull
jns
xlat
leave
xchg
decl
lret
mov
popf
leave
fmull
xchg
cmp
jg
push
xor
cmp
add
sbbb
or
mov
push
lahf
dec
mov
test
iret
and
loope
ficompl
lock
fs
and
push
or
outsl
dec
shl
mov
dec
jl
mov
vpsllq
lods
xchg
xor
xor
clc
mov
cli
in
and
xchg
or
mov
faddl
and
sbb
out
fidivrs
stc
testb
sar
js
push
fistpll
jns
fldl
xchg
sahf
popf
mov
and
outsl
cmp
movsl
xor
add
nop
mov
loopne
mov
xchg
xor
ret
mov
andb
je
mov
push
decb
cmp
rcl
cmc
xor
cmp
ljmp
push
imul
orl
pop
popa
subl
addr16
lahf
jl
mov
push
add
sti
xor
cmc
into
push
jns
xor
push
rorb
add
or
scas
xchg
fincstp
shl
jecxz
inc
mov
and
mov
repz
loope
mov
adc
add
hlt
stc
hlt
mov
cmc
inc
mov
jns
sbb
mov
sbb
pop
loopne
push
scas
pop
ljmp
push
lods
mov
out
pop
mov
pushf
dec
in
cmp
inc
mov
rcll
jb
add
movsl
dec
scas
in
xlat
int
dec
jnp
mov
jmp
sbb
mov
enter
cmp
mov
stc
stos
pop
sbb
and
sbb
popa
fxch
push
mov
cmc
sbb
pusha
mov
pop
hlt
int
cmpb
mov
cmp
cmp
leave
hlt
fldl
or
sub
mov
push
dec
mov
imul
sub
or
pop
jae
inc
cmp
xor
fists
xor
insb
rclb
cmp
cs
add
mov
pop
cmpps
stos
jo
sub
es
mov
jbe
mov
mov
mov
jnp
mov
cld
ss
repz
xor
popa
sub
stc
xor
fwait
mov
xor
adc
rcrl
sub
jmp
xchg
cli
or
int3
fidivrl
and
xor
cmp
daa
in
xchg
sub
adc
popa
into
movsl
cld
das
popf
aam
pcmpgtb
cs
loopne
push
jge
push
jnp
sahf
test
and
jo
sbb
enter
ja
lods
jmp
mov
lcall
pop
inc
add
jne
out
xor
scas
adc
shll
popf
andb
push
jno
ds
movsb
adc
sub
lods
testl
push
lods
push
test
popa
sbb
dec
insb
decl
ret
cwtl
adc
out
jle
push
fsubl
jp
pusha
mov
pop
ja
sub
aaa
rcr
mov
popf
subb
mov
lock
fchs
sbb
push
test
sub
adc
dec
push
mov
adc
ds
inc
loopne
scas
clc
aad
or
push
andl
pusha
imul
mov
sbb
and
jb
inc
data16
stos
scas
subb
pop
movsb
or
and
bound
jge
inc
and
cmpsl
stc
mov
push
call
bound
xchg
jo
test
js
mov
xor
mov
out
aad
sub
or
pop
outsl
ret
pop
ss
add
jae
mov
andb
fmuls
and
push
push
jp
pop
repnz
xchg
push
xor
push
movsb
subb
lea
subl
xor
iret
test
mov
pusha
cwtl
jo
loope
pop
sub
jno
dec
sbb
mov
xor
cmp
push
adc
out
push
and
cli
nop
jmp
sbb
mov
push
mov
mov
cmpsb
add
cmp
or
cmp
and
std
aad
iret
mov
push
mov
add
push
ds
ror
jb
sbb
negb
int3
out
pop
push
add
xchg
das
xchg
xchg
rclb
insl
sahf
loope
in
mov
fwait
ss
fcoms
push
mov
add
call
addr16
xchg
dec
jmp
sbbb
push
imul
xor
adc
sub
fldl
mov
mov
inc
cmp
xor
aam
add
imul
sti
sub
clc
cmpsl
mov
add
sar
cltd
orl
pop
fcmovnb
jne
scas
push
cmp
mov
inc
add
loopne
jns
in
mov
hlt
push
stc
cmp
rolb
cld
enter
and
imul
and
push
ljmp
adc
and
xor
int
and
loopne
loop
push
inc
mov
outsb
mov
imul
std
and
das
std
bnd
mov
lret
sbb
xchg
mov
adc
cmp
fwait
pop
push
fisubs
ret
push
dec
stos
and
mov
mov
lret
xchg
aas
xchg
sub
les
aad
xchg
inc
insl
imul
fld
rcrb
jg
dec
sub
jmp
popf
mov
adc
sbb
in
jb
dec
add
int
push
pusha
mov
popf
mov
cli
mov
enter
jb
push
mov
loopne
cli
or
js
fmulp
call
mov
sub
mov
nop
xor
or
jb
idiv
js
fsubrs
xor
jo
rorl
jns
sysenter
cwtl
lods
iret
push
xor
test
pop
es
cmp
test
sahf
adc
imul
and
push
data16
outsb
in
imul
xchg
push
fstpt
fld
addr16
mov
inc
sbb
cmp
inc
mov
jae
stos
xchg
mov
fcmovbe
lods
mov
and
ja
adc
into
sbb
ljmp
test
sub
pop
shll
out
mov
lcall
jne
lahf
mov
xor
outsl
sub
and
test
rcrl
sbb
sub
jmp
jl
jle
pusha
bswap
xor
cmp
cmova
mov
sub
or
pop
aad
xor
popf
sub
mov
aad
pop
mov
sbb
mov
cmp
popa
sub
xor
pop
int
inc
xor
repnz
in
xchg
pop
hlt
or
insb
movsb
outsl
data16
mov
sbb
jb
pop
mov
sbb
sub
mov
jno
inc
add
jl
int3
add
into
scas
stos
testl
xor
mov
jmp
test
aam
test
xor
cmp
rcrb
std
sar
xchg
xchg
mov
cmp
dec
dec
outsb
adc
fisttpll
sbb
push
or
mov
sbb
cmp
scas
imul
pusha
add
add
and
fnsave
clc
xor
dec
adc
ljmp
sub
data16
jbe
mov
pusha
dec
push
jp
rolb
or
adc
mov
or
sub
mov
aas
xchg
cld
push
je
cmp
je
lods
adc
cmp
ja
in
repz
inc
and
rcll
cwtl
or
es
jns
mov
mov
mov
lods
pop
andb
aad
lret
sbb
or
and
icebp
dec
jno
adc
pop
lods
testl
jle
aaa
fistl
repz
arpl
leave
cwtl
and
imul
and
xor
ret
addl
or
fwait
add
add
xchg
lahf
daa
mov
adc
arpl
jmp
dec
js
mov
aam
adc
bound
or
mov
or
loope
and
mov
xor
loop
sub
cmc
je
mov
cmpsb
jecxz
std
sub
push
fldcw
push
jmp
movsb
lea
fs
jbe
cmpsl
enter
clc
push
and
mov
in
xlat
fdivrl
or
mov
mov
xchg
and
sub
pop
mov
hlt
mov
pop
jae
pop
jg
lds
ds
movsb
pop
jnp
enter
dec
mov
adc
outsb
loopne
lahf
mov
daa
lret
test
add
bound
xchg
cmp
xchg
sbb
dec
les
scas
add
imul
into
arpl
testl
ror
divl
dec
mov
sbb
xchg
push
push
jg
sub
jg
repnz
sti
mov
pop
dec
push
rol
xchg
repnz
xchg
dec
imul
adc
sbb
in
cmp
sub
rorb
sub
adc
shrl
loop
int3
inc
jecxz
mov
movsl
orl
jns
jl
hlt
or
sti
jecxz,pn
push
inc
pop
rcll
sbb
dec
mov
repnz
mov
in
mov
cmp
loop
xchg
leave
test
fsts
xchg
sub
inc
inc
fistps
xchg
fsubr
or
ret
inc
or
adcl
js
lock
cmp
rol
lds
jecxz
fnstcw
cltd
es
push
jmp
jl
stos
stc
adc
mov
vpunpckhqdq
sub
jno
test
loop
stc
jne
add
mov
and
xchg
jp
fdivr
std
loope
cwtl
push
xchg
sbb
push
stc
cmp
or
mov
xchg
out
sahf
xor
jge
xor
jge
test
aad
mov
or
xor
daa
je
or
pushf
nop
dec
scas
dec
arpl
xor
jnp
jge
pop
out
movsl
xchg
sarl
subl
cmp
push
cwtl
and
and
sbb
xor
adc
pop
dec
cmp
test
sub
ja
outsl
sub
lock
push
or
jle
aad
jg
mov
mov
xlat
js
sbb
or
fbld
mov
mov
cmp
mov
daa
shll
int3
loopne
scas
sub
into
rcll
movsb
adc
xchg
sub
cmp
int3
xchg
movsl
jl
daa
jne
int
test
lods
das
mov
mov
and
or
inc
sahf
sbb
int
movsb
cmp
xor
jbe
pusha
inc
xor
outsl
pop
jne
clc
call
sbb
jo
imul
xchg
xor
xlat
mov
inc
and
inc
pop
jbe
pop
out
cld
mov
xchg
and
dec
imul
out
mov
or
js
sbb
shlb
dec
ret
pop
pop
adc
dec
fildll
rcr
into
arpl
inc
push
outsb
aas
jae
mov
shr
pop
sub
in
iret
cwtl
mov
xchg
mov
jle
pop
ljmp
xchg
verr
into
jmp
inc
push
cmp
dec
sub
jno
iret
fldcw
sbb
dec
inc
dec
add
push
add
mov
xor
out
pop
adc
jne
jl
jno
lahf
loopne
test
cltd
xor
stos
mov
mov
jmp
leave
sub
sub
or
fcmovu
inc
decb
outsl
fists
aam
adc
aad
jno
imull
sbbb
mov
shrd
push
stos
int3
pop
cwtl
pop
mov
sti
nop
into
or
inc
loopne
rorb
cmc
shll
ret
xor
ret
mov
jns
or
outsl
dec
scas
mov
jno
xlat
and
or
jb
addr16
test
mov
jnp
mov
icebp
push
jae
adc
mov
imul
push
dec
sti
aas
ret
in
bound
sub
mov
or
and
sbb
pop
push
xlat
cmp
adc
sub
pop
mov
test
sub
mov
jmp
cli
sahf
daa
fwait
pop
fbstp
cmp
cmpsl
xor
test
popa
adc
iret
xchg
dec
mov
data16
jbe
lods
jb
sbb
dec
xchg
jae
movl
mov
insb
leave
inc
fstps
in
rcr
lret
pop
dec
xchg
xchg
cwtl
mov
or
sbb
push
xchg
in
aas
add
insb
mov
push
rol
sbb
jae
or
shr
adc
xchg
psubsw
aaa
add
dec
arpl
fnsave
push
es
push
jns
add
daa
insl
mov
pop
inc
ret
in
ljmp
xchg
xchg
out
bnd
mov
movsl
in
pushf
xchg
orl
adc
es
in
lret
jge
mov
jle
or
imul
shll
std
dec
sub
dec
sti
inc
dec
sub
or
xor
xchg
call
push
push
jne
pop
iret
lods
int3
dec
sbb
sti
sbbl
loop
repz
bound
je
aaa
mov
fcmovnbe
and
push
xor
pop
imul
mov
push
push
sub
dec
cmc
cmp
int
ret
xchg
fst
jns
sub
lods
sbb
mov
or
mov
je
cmp
in
push
push
les
xor
test
ljmp
mov
repnz
xchg
jmp
aaa
movsb
jmp
movb
dec
pop
and
daa
mov
jge
ficoml
push
fnstenv
clc
push
ret
pop
pop
pop
cmp
or
pushl
scas
inc
cld
into
xor
icebp
sub
mov
mov
dec
push
or
out
in
je
cmp
jmp
popl
notb
iret
cs
shll
mov
push
add
ret
and
popa
sub
stc
enter
and
sbb
inc
xchg
negl
idivb
add
imul
push
inc
mov
push
fstl
xor
div
mov
movsl
lea
inc
leave
jp
mov
ljmp
test
daa
call
lock
dec
lahf
dec
shlb
lret
addr16
in
pop
cmc
nop
cmp
or
leave
mov
mov
lea
insb
or
push
push
inc
popf
sbb
out
fcomps
push
fisttps
bound
in
push
xchg
xchg
lret
dec
jnp
and
jge
hlt
movsl
shl
cmp
and
or
adc
in
xor
and
xor
lcall
movsb
decb
addr16
or
mov
in
xchg
sbbb
out
or
add
pop
jp
push
inc
test
pop
push
cmc
jo
es
bswap
movsl
insb
and
insl
push
test
es
into
dec
lret
or
test
stos
imul
or
rorb
leave
int3
loope
dec
xorb
push
clc
pop
dec
daa
ds
xchg
inc
dec
push
icebp
add
roll
xchg
or
flds
es
fwait
dec
mov
xor
int
push
adc
fnstcw
cmp
xchg
divb
ret
jecxz
idivl
imul
sbb
neg
cmp
xor
shlb
push
or
jb
fisubl
arpl
jae
pop
gs
pop
sbb
cmp
mov
mov
xchg
jbe
sub
adc
or
in
repz
inc
mov
or
mov
ret
or
imul
inc
imul
jecxz
loop
pushf
xor
push
adc
xchg
in
insl
xor
out
cmp
cld
push
mov
out
test
lds
pop
mov
push
imul
push
mov
adc
push
in
icebp
mov
xchg
dec
cli
repz
push
mov
pop
mov
sahf
fisttpll
outsb
std
and
loop
push
ds
aad
rcr
or
dec
add
adcb
lock
push
sahf
je
inc
sar
inc
aad
cmpsb
or
out
call
outsl
push
jle
fldcw
or
sbb
adcl
in
fsubrl
stos
pop
add
sbb
jg
nop
pop
xchg
adc
test
mov
mov
sbb
sub
negl
and
add
xor
push
jb
fbld
orb
inc
clc
sub
insl
jne
popa
fwait
lret
test
loopne
stc
test
adc
lret
push
pushf
fdivl
lods
jecxz
clc
xchg
push
idivb
mov
inc
lahf
pop
push
sbb
xchg
push
mov
aaa
fs
clc
xchg
ss
lods
lds
in
pop
ror
jo
test
or
mov
mov
filds
divl
adc
shrb
test
lret
xchg
cmc
xchg
cmp
lods
mov
and
lock
inc
jne
insl
mov
mov
xor
xchg
sbb
or
ret
push
mov
sub
sti
int
push
jl
cmp
adc
fisttps
in
nop
mov
lods
dec
nop
cmpsl
jae
push
in
jae
jae
xor
fwait
jl
cmp
inc
imul
fisttpl
dec
jae
test
push
lret
sbb
jne
xchg
push
mov
das
in
push
adc
je
xor
shrl
out
mov
out
cwtl
fildl
xchg
out
or
incl
pop
jp
ja
adc
mov
rolb
cmpsb
ds
movsb
repnz
sub
int3
inc
and
pushf
xchg
add
add
enter
jbe
cld
push
arpl
popf
sbb
cmp
cmc
mov
scas
inc
stos
pop
mov
test
or
inc
lret
test
inc
cmp
and
and
cmp
push
scas
test
in
adc
rcrl
idiv
orl
outsb
xchg
sbb
jno
cmpsb
inc
pop
aaa
xor
jnp
into
xchg
daa
repz
scas
js
and
pop
in
adc
inc
rclb
dec
fmuls
cltd
push
fdivr
scas
rcr
fistpl
inc
lret
mov
out
xchg
jmp
pop
pop
cmp
xor
int3
mov
cmp
xor
hlt
mov
dec
mov
test
and
add
and
loopne,pn
sbb
addl
movsl
nop
call
xor
aaa
gs
sti
in
std
lods
std
lahf
sbb
ficompl
sub
insl
out
loopne
xlat
xor
in
add
mov
push
inc
jge
adcb
xor
adc
push
stos
jp
jae
dec
pop
cmpsb
sub
pop
sbb
push
mov
and
shrl
xchg
pusha
lret
ss
jmp
ss
add
sbb
adc
cs
cmp
lock
js,pn
pop
popf
inc
enter
mov
lahf
js
sbb
push
lea
mov
sbb
stos
sbb
pop
stos
arpl
jmp
fdivl
popa
imul
mov
das
pop
faddl
cltd
and
stos
jl
aam
negb
adc
cltd
daa
sub
push
ljmp
mov
pop
aad
lret
cmp
pop
movsl
mov
int3
mov
cmp
xchg
addr16
popf
pop
negl
mov
jae
pop
mov
xchg
stos
and
push
addb
scas
or
in
pop
pop
add
pop
add
adc
test
mov
cmc
lods
inc
xor
jmp
sahf
sbb
mulb
jge
lock
add
inc
pop
adc
add
cmp
jae
popf
fildll
sub
push
add
pushf
sbb
mov
in
sahf
ja
imul
inc
shlb
sub
xlat
fstpt
adc
sarb
cs
push
pop
mov
mov
push
or
in
out
gs
out
jecxz
push
lret
dec
push
int
xor
push
xchg
jbe
jl
sbb
mov
faddl
ja
test
mov
addb
jge
ja
mov
icebp
add
jae
roll
adc
fs
clc
test
sbb
pusha
mov
shlb
jmp
cmp
add
shrl
fiadds
sbb
push
shlb
jne
push
jo
or
loope
aas
adc
jne
jnp
xor
adc
xor
push
mov
das
xchg
in
lahf
fldt
out
dec
xlat
sbb
push
jb
push
xchg
inc
sub
pop
pop
jb
sbb
xor
shll
or
jne
pop
out
inc
pop
jns
sbb
aad
mov
add
movsb
cs
adc
pop
pushf
inc
pop
lock
loope
movsb
mov
xchg
nop
mov
les
mov
fidivs
movsl
jae
fistl
push
sbb
lret
and
nop
add
andl
aas
mov
fcomip
repnz
cmp
fdivs
dec
fwait
mov
sub
add
ret
inc
sub
cmp
icebp
xchg
push
aas
jno
aam
cmpsb
adc
jmp
dec
mov
and
testb
push
push
mov
popf
out
int3
idivb
lock
cmp
enter
dec
dec
in
ret
xor
mov
dec
push
xchg
in
mov
rorb
jmp
fwait
and
mov
int
mov
push
and
mov
sbb
and
jbe
das
cs
ss
js
sti
in
and
das
call
fiaddl
mov
inc
cld
adc
les
cltd
dec
lea
lods
out
nop
je
adc
dec
or
fsubs
mov
mov
popa
inc
xchg
aam
std
and
movaps
fs
xor
rcrl
test
outsb
daa
inc
or
sbb
into
scas
int3
fsts
pop
lcall
in
addr16
add
cmpb
xor
pusha
mov
cmp
test
push
into
push
shlb
orb
ficomps
dec
xchg
sub
or
icebp
aaa
lahf
xor
adc
out
aam
adc
push
adc
and
jecxz
or
xchg
data16
cmc
adc
sub
out
push
sub
fs
ret
cmpsl
das
jg
sbb
mov
push
ret
jl
push
push
xchg
lret
mov
push
std
lahf
xor
in
es
dec
out
icebp
pop
cmp
int3
mov
xor
inc
dec
lahf
sub
sbb
jp
push
dec
fsubp
ss
test
mov
sbb
add
jmp
or
lods
xor
out
loopne
push
fidivl
sbb
mov
in
ja
sub
sahf
adc
outsl
pushf
sbb
push
cmc
xor
push
mov
lods
mov
data16
lods
jb
in
push
mov
cmp
ret
or
test
jnp
lret
fdivl
iret
fbld
inc
jcxz
add
mov
xchg
dec
inc
das
pop
jp
inc
jle
push
out
adc
cli
dec
call
xor
and
aas
push
movsl
gs
xchg
ja
cmpsb
adc
cmp
mov
cmc
pop
test
mov
imul
jmp
push
cmpsb
cmc
data16
leave
pop
rolb
loope
sahf
std
push
sbb
leave
sbb
into
mov
xor
mov
push
subb
pop
ret
in
sbb
sub
xchg
sbb
scas
mov
int
sarb
inc
xchg
mov
loopne
inc
test
or
popf
mov
pop
push
jle
inc
sahf
out
pop
loope
out
xor
repz
loopne
sub
xchg
int
sub
pop
out
jp
repnz
loopne
and
shl
mov
lret
mov
movsb
inc
icebp
cmp
enter
sub
das
stos
cltd
jge
xchg
push
cs
adc
inc
gs
xor
out
arpl
ret
pop
pushf
pushl
and
fimull
xor
pop
scas
out
inc
add
lock
ljmp
cmp
aad
lods
jge
jb
mov
je
insb
adc
mov
push
push
inc
in
repnz
int
or
fs
pop
inc
inc
roll
add
ffree
jae
inc
aaa
sarb
pop
push
loopne
or
mov
cmp
rcrb
sub
jp
sbb
fistl
dec
sbb
or
or
sub
call
pop
pop
imul
data16
xlat
je
pop
mov
mov
adc
push
add
test
jnp
cmpsb
jb
inc
ja
rclb
inc
sbb
lret
and
push
xlat
les
call
sub
ss
adc
fs
jns
mov
cmp
lock
and
dec
xor
lcall
stos
mov
mov
mov
test
cmp
pop
pop
bound
sub
xchg
mov
adc
xor
xor
nop
sbbl
sub
shlb
inc
nop
loope
inc
sbb
repz
jno
loop
sti
je
stc
in
push
cmpsl
xor
lds
jg
out
outsl
movsl
cmp
xor
mov
jg
faddl
jne
dec
test
insl
xchg
mov
enter
mov
jnp
fcmovne
adc
mov
xor
repz
lcall
nop
mov
push
stc
dec
scas
push
fwait
les
loopne
push
aas
and
insb
sbb
mov
stc
enter
inc
std
fiadds
or
inc
mov
movups
movsb
bound
es
outsb
lret
jns
adc
jle
cs
adc
xchg
dec
mov
lock
add
into
fdiv
jp
in
cmc
jmp
mov
or
cmp
cmpsl
pop
xchg
xor
xchg
mov
int3
sub
ret
aad
aas
lea
mov
fisubrl
ljmp
mov
arpl
jns
jecxz
test
cld
mov
rcll
xchg
test
dec
cmpl
cmpb
mov
negl
sbb
mov
ficoml
aas
js
jl
cwtl
mov
lea
into
js
sbb
icebp
imul
mov
lods
arpl
stc
pop
fbstp
pop
add
out
pop
pop
ret
jp
add
add
loop
faddp
dec
jecxz
inc
push
ds
inc
pusha
cltd
in
sbb
mov
cmpsb
and
inc
mov
xlat
adc
xor
sbb
pop
fmull
sub
lahf
popf
bnd
lds
test
ficompl
das
dec
push
and
stos
pop
adc
fisttpl
imul
inc
fsubs
addb
orl
sbb
ss
sub
call
inc
xchg
cmp
push
xor
lea
dec
push
scas
cmpsl
loop
cmc
jae
cmp
adc
sbb
scas
fwait
jge
rclb
xchg
add
je
adc
or
out
xchg
imul
mov
fwait
sub
into
out
xchg
inc
add
dec
jg
inc
sti
test
je
mov
mov
ret
ss
les
std
fcoms
or
cmp
fwait
adc
loopne
out
sbb
pusha
cmpb
xor
push
dec
add
sbb
and
mov
xchg
xlat
sbb
inc
out
sub
mov
inc
mov
dec
and
push
daa
xor
ret
and
inc
shrl
outsl
sbb
daa
mov
push
jne
jmp
in
sahf
aam
sub
shlb
out
in
jl
inc
mov
decl
pop
cld
repnz
cwtl
jne
aas
in
in
nop
pusha
out
stos
xchg
lds
in
mov
dec
mov
mov
mov
inc
pop
inc
jno
and
cld
sbbl
inc
out
test
daa
mov
imul
ljmp
mov
imull
out
mov
lahf
stos
push
mov
imul
mov
dec
sub
clc
cmp
comiss
cmp
aaa
push
xchg
jg
mov
pop
sub
inc
ds
mov
enter
jne
dec
pop
popf
data16
or
sbb
movsl
js
sub
cmpsl
int
data16
mov
mov
ds
sub
push
repz
das
pop
mov
jae
fcmovnbe
cltd
repz
lods
xchg
call
addl
mov
popa
push
mov
lds
xlat
add
mov
frstor
ret
in
sub
sbb
sub
outsb
scas
ret
loop
loopne
imul
mov
orb
pop
dec
pop
jbe
rcrb
cmp
outsb
sbb
test
es
or
fstpl
xchg
inc
cli
sub
push
pop
arpl
icebp
jge
insb
aas
or
test
scas
popa
dec
inc
loop
xchg
lods
xor
cwtl
dec
int3
push
stos
movsl
or
xchg
lods
outsl
mov
sbb
and
inc
inc
dec
punpckldq
shll
xchg
fwait
lret
ret
popa
lea
cmp
mov
popf
faddl
repnz
std
sbb
test
iret
imul
adc
int3
call
dec
aam
dec
sar
add
pop
outsb
push
pushl
int
les
clc
dec
sub
xchg
adc
jne
cs
fldt
out
add
roll
jmp
xor
cmp
ja
cmpsb
add
shlb
xchg
mov
imul
mov
int
jns
push
mov
cmp
sbb
xor
test
sbb
xchg
xlat
mov
sbb
mov
lea
inc
adc
adc
push
aas
int3
cli
sbbb
cmpsb
or
push
sub
test
or
or
xor
lea
jb
push
test
test
mov
mov
jne
push
inc
test
es
leave
into
imul
in
bound
or
sbb
test
in
neg
rcrl
pop
faddl
sub
daa
sub
mov
sub
in
sbb
scas
outsl
enter
sub
cs
mov
mov
jnp
push
adc
mov
push
cwtl
jge
jmp
enter
daa
jbe
pop
cmp
xor
jbe
rclb
test
xor
jb
pop
mov
inc
adcl
cmp
insb
pusha
stos
xchg
shrl
push
inc
mov
cmp
in
das
mull
cmp
jno
push
aam
incl
int
add
es
ljmp
mov
cmp
adc
jb
add
dec
jne
sub
int3
mov
add
lea
mov
addb
stc
out
pop
addr16
and
and
lret
adc
mov
inc
xlat
mov
xor
stos
lret
outsb
push
mov
dec
aas
sahf
aaa
rolb
xor
cmc
adc
stos
jp
sbb
aas
ljmp
loop
int3
pushl
pusha
and
sub
add
repz
mov
adc
xchg
dec
clc
pop
xor
out
mov
pop
fwait
shlb
mov
repnz
test
lahf
pop
and
subb
inc
jae
sbb
jo
push
sbb
popf
dec
loope
adc
mov
pop
roll
pop
in
sahf
add
loop
or
add
mov
inc
les
fidivrs
dec
scas
sub
aaa
out
jo
in
xor
mov
adc
xor
inc
xchg
in
cmp
adc
mov
mov
mov
rcr
loopne
lahf
lods
ret
inc
arpl
in
mov
xor
sub
mov
xchg
jecxz
adcb
mov
movsb
fiadds
fldcw
les
outsb
ljmp
notb
sti
jb
mov
pusha
or
or
insl
ret
pop
out
ljmp
or
xor
stos
and
jmp
cmp
jno
sbb
sbb
jg
aam
in
popf
pop
lret
dec
jb
push
mov
lret
out
xchg
test
adc
insb
jo
cs
movsb
or
mov
xchg
or
inc
inc
mov
das
sub
fcmovbe
mov
js
push
jno
cmpsl
pmaxub
push
add
fldcw
push
jno
int
aas
popa
ret
aam
lods
out
leave
push
lods
stos
test
adc
cmc
shlb
mov
int3
outsb
nop
add
xlat
lahf
aam
and
into
fmuls
lods
outsl
insb
cmp
popf
shl
lret
rclb
bound
clc
push
ds
adc
in
xchg
iret
mov
pop
sbb
cmp
sbb
push
mov
pop
test
inc
in
roll
adcb
mov
jo
popa
test
pusha
je
adc
cmp
fidivl
in
movsl
inc
push
sub
aam
push
ret
inc
pop
into
jl
ja
push
push
mov
stos
ret
rclb
xor
ret
push
jnp
adc
outsb
es
outsb
insb
sub
dec
ljmp
mov
mov
icebp
fbstp
cmp
or
jbe
sarb
push
inc
dec
imul
ror
sbb
dec
add
xchg
sub
incb
ja
mov
cwtl
cmpsb
or
aas
jmp
fxch
and
ret
jp
sub
mov
jecxz
jmp
outsb
dec
lds
jmp
xchg
dec
movsb
or
std
aam
mov
jg
mov
ja
sbb
aas
sbb
xlat
add
jae
xlat
sub
out
push
mull
add
dec
bound
popa
inc
push
or
js
ss
aaa
lds
push
nop
addl
test
lcall
lcall
out
inc
mov
cmc
adc
insb
push
adc
cli
pop
adc
sbb
mov
xchg
shll
mov
mov
mov
ljmp
inc
cmp
aam
xlat
enter
loope
lock
mov
xchg
jl
imul
mov
xchg
mov
push
out
mov
cmp
or
sbb
mov
inc
mov
sbb
fistpll
test
dec
mov
and
xor
dec
shll
out
fnstcw
testb
lods
pop
mov
loopne
or
push
adc
movsb
sbb
or
js
testb
mov
sub
movsl
mov
xchg
and
inc
and
dec
lcall
sub
je
repz
mov
xchg
push
lret
mov
xor
jbe
adc
xlat
test
push
cmpl
jnp
xor
jbe
enter
pushf
test
js
cmp
sbb
fisttpll
loope
xchg
xchg
adc
push
lock
jo
imul
cmc
loop
out
pop
out
mov
mov
aad
adc
les
jns
rorb
pop
pop
mov
in
fwait
movb
test
jb
add
xorl
int
add
addr16
dec
jg
mov
jb
add
mov
cmp
pop
fildl
push
nop
mov
pop
lret
xchg
lock
test
and
mov
pop
movsb
bound
adc
testb
jo
sbb
rorb
pop
xchg
mov
xchg
cli
lret
cwtl
mov
pop
inc
cwtl
fnstsw
add
sbb
xor
nop
push
into
adc
inc
stc
scas
lret
or
jge
sarb
pop
fisubrs
sub
outsb
int
push
push
js
movsl
rorb
jne
stc
pop
sbb
inc
dec
test
repz
jne
dec
or
fisubrs
bound
sbb
xchg
sbb
sbb
enter
pushf
fstl
ss
repz
js
fisubrl
stc
stos
std
sub
imul
inc
mov
pop
sub
jge
les
inc
fcompl
fildll
leave
pop
pop
lcall
lahf
jb
bound
insl
adc
dec
cmp
sub
out
jge
lahf
outsl
adc
xchg
sub
imul
hlt
pushf
push
fwait
ljmp
or
cmp
add
movsl
pusha
xor
adc
lea
sub
dec
lock
lret
in
inc
dec
pop
insl
fsubs
sub
add
enter
ds
lahf
std
test
push
jg
xor
jmp
add
jecxz
shr
sbb
pop
gs
fidivrl
into
push
ret
xor
add
insl
ret
xchg
or
je
xchg
fwait
pusha
pop
mov
mov
ret
fwait
loope
push
xor
jno
loop
or
in
pop
jno
add
out
jge
loop
jl
iret
hlt
xchg
stc
movsl
jnp
mov
js
jns
popf
cli
rcr
fadds
adc
pop
add
jmp
pop
dec
dec
lods
mov
xchg
push
movups
repz
and
cmpsl
test
hlt
add
xchg
pop
or
shl
andb
cli
imul
popf
add
mov
aam
lcall
cvttps2pi
in
mov
xor
test
outsb
cmp
fiadds
xchg
ds
divb
sti
das
xchg
or
mov
mov
adc
out
pop
imul
arpl
loop
jmp
movsb
test
dec
stos
lret
adc
mov
adcb
pop
xchg
inc
bound
push
mov
aas
repz
jecxz
hlt
jae
js
ror
testl
aaa
icebp
lds
mov
xchg
test
stos
call
jecxz
clc
xor
lret
mov
inc
mov
clc
inc
mov
aam
roll
fnstcw
ret
and
jp
cmp
jo
mov
shll
inc
dec
xchg
incl
je
loop
int
jns
pop
add
mov
insl
icebp
stc
push
sub
cmp
scas
jb
dec
mov
mov
dec
mov
and
pushf
outsl
addl
mov
and
test
xchg
push
jo
testl
hlt
andb
mov
mov
mov
in
ljmp
jle
loopne
cmp
test
lea
loope
lods
negb
add
insb
add
inc
inc
mov
jns
inc
jne
jmp
adc
out
std
mov
call
movsb
sbb
or
or
and
test
or
fldl
mov
pop
in
pop
jbe
pop
inc
or
dec
cmp
test
popf
mov
mov
cmp
insl
ret
jnp,pn
or
push
inc
and
xor
stos
pop
loope
je
cmc
and
adc
xchg
inc
mov
popf
push
adc
ja
test
test
pop
or
repz
xor
in
jle
subb
arpl
bound
loope
rclb
xchg
fcmovnb
mov
or
push
lods
das
shl
push
mov
outsl
jne
rol
jo
jmp
leave
shlb
popf
inc
scas
pop
pop
xchg
or
in
fsubrs
out
push
lcall
push
add
ljmp
sbb
scas
jmp
bound
cmp
jg
stc
and
add
roll
and
and
insl
rcrl
jp
dec
out
jo
pop
mov
dec
test
insl
push
lock
jns
xchg
cmp
int
and
mov
out
icebp
or
mov
dec
clc
mov
xor
push
rclb
adc
pop
lock
das
ret
ud1
pop
ds
cld
ljmp
ret
stc
cmp
mov
pop
jb
and
insl
cmp
mov
in
shl
mov
dec
and
or
mov
pop
sbb
bound
mov
fimuls
leave
sub
test
sahf
movsl
push
test
dec
les
imul
shll
arpl
sbb
inc
jbe
int3
cld
scas
xchg
and
bound
dec
sti
xsha256
cmpsb
xchg
ljmp
or
jle
insb
xchg
mov
loope
sbb
leave
in
adc
jbe
pop
gs
mov
and
or
and
xchg
inc
je
mov
into
cmp
aas
nop
lock
push
xchg
inc
xchg
imul
jge
mov
dec
incl
cmpsl
fwait
rclb
push
movsl
jns,pn
mov
jecxz
cmp
sbb
xor
stc
pop
jge
inc
jle
inc
mov
addl
shrl
jo
cs
jo
out
xchg
or
add
mull
cmp
dec
or
repz
sub
imul
movsl
sub
xor
xchg
cltd
into
mov
jno
lret
push
pop
and
fdivrs
mov
or
clc
repz
in
dec
dec
push
lods
jl
mov
test
stos
or
das
mov
addb
cmpsl
add
out
les
push
sbb
in
add
pop
and
movsl
dec
cs
inc
decl
es
push
dec
push
push
dec
push
push
pop
cmp
mov
ja
sbb
add
mov
inc
cli
pusha
nop
jg
sub
ss
jl
push
fbstp
mov
push
dec
dec
pushf
jbe
mov
int
jno
dec
mov
sub
pop
jno
shll
fistl
push
push
nop
cld
push
push
add
add
ja
add
in
mov
popf
sarb
cli
shl
pop
sbb
repz
mov
adc
push
lods
dec
push
loope
or
ret
clc
aas
scas
fcmovnbe
mov
add
sbb
inc
in
xor
aas
jmp
out
jp
loopne
iret
adc
mov
loopne
insl
dec
out
sub
mov
add
cmp
int3
enter
push
mov
roll
add
shlb
dec
inc
jge
inc
shlb
inc
dec
dec
mov
push
push
adc
adc
sti
push
adc
push
or
pop
jl
lret
mov
and
adc
sub
push
sbb
idivl
stc
pop
push
dec
add
sti
adc
inc
out
xor
stos
loope
jp
pushaw
cwtl
arpl
sub
rcll
inc
mov
sub
or
mov
mov
cltd
in
addr16
adc
cmp
sub
add
cmp
mov
cld
out
jecxz
cwtl
push
jns
ds
scas
js
pop
popa
lret
mov
pop
push
es
lret
pop
ds
test
aas
lods
fisubrs
lds
sub
cmpsb
mov
jae
arpl
push
nop
mov
add
push
push
jo
adc
insl
mov
stc
pop
jl
enter
icebp
mov
pop
or
and
push
push
dec
divb
sbb
pop
hlt
or
and
mov
sub
subl
and
shll
xchg
xchg
cwtl
aas
popf
gs
push
lret
js
mov
fistps
or
add
xlat
add
sub
loope
insl
mov
mov
add
adc
ss
add
lods
repz
fstps
out
sub
inc
jmp
sub
insb
scas
in
mov
call
fsubs
mov
fs
mov
test
ret
cmp
dec
arpl
lods
leave
mov
fdiv
mov
adcb
in
adc
inc
sbb
sbb
out
movsb
push
adc
lea
inc
mov
adc
inc
lret
stos
xor
lock
cmp
dec
pop
mov
mov
add
mov
rcl
mov
sub
sbb
gs
stos
jge
popa
or
insb
adc
filds
aam
popa
inc
int
xchg
add
and
mov
push
mov
cmp
sbb
cmp
ljmp
in
ljmp
mov
insl
dec
mov
mov
pop
ret
push
pop
jecxz
jl
arpl
xor
and
mov
in
sti
mov
jb
xchg
add
xor
fwait
and
dec
xchg
add
clc
fiaddl
xor
into
out
fsub
into
inc
repz
push
dec
push
loope
or
push
aas
mov
pushl
cld
mov
mov
pop
jge
jb
mov
out
or
adc
xlat
outsb
push
fists
mov
jae
adc
addr16
test
inc
bound
and
xchg
add
jo
ds
mov
leave
pusha
addl
push
pop
insl
sbb
stc
pop
rorl
and
mov
push
stos
push
das
inc
and
adc
es
mov
sti
insb
mov
fistps
xchg
push
mov
jl
scas
out
stos
jo
cmpsb
mov
movsb
xchg
mov
pop
adc
in
mov
in
jb
jno
rcll
and
lahf
xor
cmpsl
pop
or
ljmp
jmp
mov
pop
sahf
jecxz
sbb
mov
xchg
ss
in
adc
imul
push
mov
sub
loope
inc
imul
in
dec
mov
iret
insl
mov
jl
fldenv
stos
stos
mov
pop
pusha
mov
inc
dec
enter
stos
cmp
sub
leave
dec
in
adcl
test
jp
mov
mov
pop
stos
mov
pop
mov
mov
aaa
sbb
jecxz
out
jbe
in
das
cltd
xchg
xor
pushf
cmp
dec
jl
out
mov
xor
ljmp
cmp
lods
adc
int3
jmp
sbb
inc
add
fstps
jne
and
lods
adc
xor
xor
hlt
xadd
jecxz
or
mov
cmpsl
negb
mov
insl
push
lahf
clc
cmp
out
in
sub
xchg
cmp
loope
pushl
addr16
call
or
sub
add
sub
push
pushf
and
test
push
push
repnz
mov
daa
xchg
daa
and
adc
out
xchg
repnz
mov
out
dec
lcall
cli
dec
cmp
ficompl
fs
in
popa
fcmovu
ja
sarb
and
fisubrl
scas
push
ds
mov
sbb
inc
jl
in
xchg
pop
loopne
sub
lock
addl
shl
pushf
xlat
lods
cli
cmpl
mov
int3
xlat
add
insb
inc
fprem1
adc
add
or
sub
lcall
dec
fnstenv
xor
xor
clc
jp
pushw
xor
dec
jl
movsl
add
icebp
clc
pop
jecxz
js
cmpsb
inc
or
push
ljmp
lcall
mov
push
or
stc
push
pop
lods
shlb
or
push
je
nop
fmull
xchg
ljmp
ds
out
xor
sub
mov
dec
pop
ds
pushf
and
loop
push
lock
addr16
int3
push
sbb
jmp
push
sub
pop
pushf
mov
daa
mov
xchg
mov
jno
adc
inc
push
fadds
push
subl
jo
orb
xor
mov
into
or
mov
ret
lea
test
scas
lods
pop
scas
mov
stos
hlt
cmp
mov
mov
mov
xchg
and
and
sub
pop
imul
adc
jns
mov
inc
mov
pop
xchg
sub
jl
popf
sbb
jmp
sub
jns
add
fwait
adc
jp
lock
mov
cli
aaa
loope
cmp
js
mov
loopne
daa
mov
or
sbb
mov
fdiv
fisttpl
js
mov
outsb
dec
ss
xchg
lret
aas
adc
xchg
push
lods
fucomip
add
dec
in
cmc
push
movsl
fiaddl
add
push
pusha
and
add
jl
fisttpl
and
fs
hlt
push
shlb
cmc
sti
mov
mov
divl
inc
fbld
inc
js
cmp
dec
sub
mov
ljmp
mov
jg
sbb
test
stos
andl
lahf
sbb
sti
adc
cld
adc
adcb
xor
bound
dec
mov
xchg
stos
jne
cmp
mov
into
and
out
push
incl
push
inc
lea
mov
xchg
jecxz
jo
jne
subl
xchg
cltd
push
cli
mov
or
push
or
mov
stos
push
mov
pusha
ds
stc
ja
push
push
mov
and
push
xchg
mov
rorb
mov
and
pushf
cmp
fsubp
mov
lods
dec
fidivl
data16
xchg
jbe
fistl
mul
xchg
pop
clc
and
hlt
inc
fdiv
mov
popf
or
mov
jae
nop
sarb
mov
iret
sbb
stos
or
mov
push
shrl
lret
xchg
cmpsl
jmp
pop
repz
movsb
pop
jb
cwtl
or
or
mov
or
fsubrs
pop
adc
lds
dec
mov
and
cmp
cmp
insl
mov
int
adc
aad
lret
fildll
out
lsl
das
into
xor
notl
xor
push
mov
enter
mov
call
movsl
sbb
add
and
std
mov
popa
cli
adcb
lds
inc
dec
push
orb
xchg
push
insb
ds
sbb
cld
ficoms
jno
jp
les
xchg
pop
jge
out
cld
lods
mov
cltd
add
cmp
hlt
jp
shrl
jbe
and
jae
jecxz
loope
enter
push
sahf
mov
outsl
adc
dec
xor
lods
mov
jno
sub
push
cmp
out
and
add
outsl
jle
shrl
js
imul
push
cmp
aad
fdiv
mov
mov
inc
ds
call
pushf
scas
out
dec
xchg
add
sbb
and
jecxz
int
jnp
push
int
inc
adc
lods
lods
xor
imul
pop
add
sbb
out
push
xchg
mov
mov
lods
cmp
mov
lret
or
shll
push
test
dec
repnz
lcall
and
mov
mov
int3
cmp
jle
repz
mov
sbb
dec
xchg
cmp
inc
mov
xchg
xor
xor
pop
mov
rcrb
inc
sbb
shll
add
sbb
cld
push
fadds
in
or
out
scas
lods
jns
adc
inc
mov
push
inc
push
dec
sub
shll
and
mov
cmp
ss
jns
pop
test
cli
aaa
jle
rclb
dec
lds
hlt
push
xlat
pop
xchg
int
jnp
shrl
lods
inc
and
dec
inc
push
or
push
sbb
fwait
sub
cmc
sub
pop
adc
and
sbb
fsubs
loopne
inc
rcll
push
enter
es
scas
xorb
add
and
sub
sahf
arpl
mov
pop
jo
fbstp
mov
sub
jb
adc
cmpsl
mov
dec
repnz
xlat
dec
mov
js
aaa
pop
iret
cmp
push
cld
sbb
dec
mov
andb
pop
out
xor
mov
inc
sbb
or
enter
jae
or
stc
rolb
push
cmp
cwtl
daa
aad
mov
test
pop
cmpsl
mov
adc
sub
pop
jb
enter
push
adc
cli
sbbb
mov
int3
mov
lds
mov
push
xorb
movsl
push
dec
mov
mov
out
rcrb
push
shrb
pop
rolb
dec
outsb
pop
or
xor
addl
xchg
shll
in
dec
sbb
and
insb
test
jb
adc
mov
test
sub
out
jnp
and
push
jg
lret
xor
sub
pushf
stc
movsl
lret
mov
push
pop
or
push
loop
mov
ret
mov
daa
cmp
rcrb
push
test
xchg
dec
scas
cmp
ds
aam
loop
xor
adc
fisttps
les
ss
mov
lret
adc
in
jge
dec
mov
lock
mov
mov
loop
imul
cmp
xor
int3
or
stc
adc
xchg
cmc
jns
ror
rcll
add
mov
mov
mov
fstpl
sub
add
sub
ret
dec
aam
stos
push
nop
int
jnp
dec
pop
push
adcl
notb
pushf
push
in
in
fs
dec
add
xchg
aas
outsl
test
std
arpl
jbe
js
jmp
shrl
and
lret
call
ljmp
push
xchg
sbb
xor
flds
push
shl
mov
add
sub
ljmp
pop
in
cmp
movsb
dec
popf
lret
sub
add
fcmovnb
mov
gs
jle
sbb
test
fistpl
pop
dec
pop
testl
enter
or
sbb
xor
mov
insl
cli
aas
pop
adc
pop
fidivs
mov
rolb
sahf
shl
xor
jle
in
pop
inc
push
jp
inc
mov
pop
xlat
gs
jns
pop
jns
push
into
pop
mov
cwtl
lret
and
xor
jno
pop
leave
lcall
and
cmp
mov
push
and
outsl
shrb
out
outsb
xchg
int
cmp
or
pop
icebp
add
movsl
add
imul
lcall
int3
fdivs
xor
adc
pop
jns
ljmp
fldenv
xchg
xor
xchg
fiadds
cmpb
push
stos
outsb
sub
roll
or
das
push
jnp
sub
or
xor
mov
insl
sarb
push
mov
stc
clc
imul
scas
adc
cmp
xchg
jne
push
stc
gs
out
adc
lahf
or
out
add
and
std
lret
sub
inc
shlb
sub
outsl
out
addl
shrb
cmp
int
jp
sahf
cmp
into
inc
sbb
pop
inc
mov
and
cmp
fwait
sbb
sbb
cs
movsl
jnp
inc
stos
inc
jmp
scas
fidivrl
sub
mov
fsubrs
cld
pusha
pusha
ret
jle
in
das
jmp
bound
lcall
aad
out
fmull
daa
je
sbb
out
sahf
int
ret
adc
lret
xor
adc
mov
in
add
dec
jp
pusha
and
pop
paddsb
fstpt
pop
adc
adc
aad
fldl
dec
frstor
sub
dec
lds
sbbb
xchg
aas
call
shrl
nop
inc
cmp
xchg
pop
jecxz
sbb
dec
leave
mov
or
mov
popa
mov
sub
lock
or
lahf
cmp
mov
sbb
inc
jg
pop
xor
popl
xor
mov
imul
push
arpl
lods
fnsave
fs
jl
adc
xor
xor
dec
add
fcmovb
sbb
stos
push
rcll
mov
int3
adc
fsub
add
in
sbb
arpl
out
inc
data16
call
inc
aam
push
inc
mov
fldenv
mov
add
push
mov
push
cmpsb
cmp
loop
rsqrtps
sub
mov
sbb
inc
es
iret
jle
adc
push
xchg
addr16
dec
cld
fildll
repz
mov
add
rcll
adc
add
or
stos
jl
add
sbb
out
cmc
inc
mov
inc
sbb
jns
xor
jo
mov
imul
jne
addr16
stos
sarb
fyl2x
scas
ret
or
xor
int3
push
ds
sub
lods
add
stos
xchg
orb
add
inc
dec
ret
iret
inc
and
enter
xor
add
insb
dec
pop
push
loopne
pop
frstor
pop
sbb
outsb
mov
arpl
cmp
or
movsb
jnp
repnz
lds
fcoml
fdivl
inc
mov
xor
lds
mov
add
jbe
jo
mov
addr16
into
rcrl
adc
xor
inc
pop
lock
mov
mov
dec
add
jmp
lahf
sbb
mov
jb
adc
xor
ret
mov
and
lods
pop
jle
dec
dec
xchg
pop
jl
add
mov
mov
xlat
lods
dec
aam
push
cmp
js
dec
push
cltd
testb
leave
xor
das
cmp
fisttpl
mov
fsub
add
jbe
scas
repnz
jle
push
aaa
jp
int3
filds
push
mov
addl
lds
lds
sarl
push
xchg
dec
ss
dec
fadd
xchg
into
lods
inc
stc
cmp
out
stos
sbbb
popf
mov
mov
neg
mov
std
out
or
sahf
orl
jns
mov
sub
inc
std
scas
mov
cmp
cwtl
mov
faddp
cld
sbb
or
cmpsb
pop
arpl
das
cmp
popf
mov
enter
dec
push
jl
popf
adc
xchg
loop
jb
scas
dec
mov
adc
xor
mov
pop
rorl
mov
mov
shll
lock
fcmove
jl
adc
xchg
cltd
xor
mov
out
imul
test
jb
imull
mov
sub
add
in
mov
jb
jno
iret
sub
aad
std
sbb
cltd
sub
inc
repz
sbb
imull
jg
and
sti
xlat
gs
mov
mov
jbe
push
xchg
test
jmp
sub
loopne
mov
adc
push
xor
js
add
pop
ss
inc
or
jge
int3
mov
xchg
jmp
add
inc
sub
test
xor
fiadds
cld
test
add
or
int3
iret
jns
outsb
gs
sbb
sub
sub
fwait
xchg
int3
pop
mov
or
push
lret
dec
in
sub
and
int3
push
mov
adc
mov
ja
sub
jo,pn
lcall
test
xor
sar
sbb
jbe
lret
add
push
imul
data16
cmpsb
cmc
or
lret
mov
push
push
scas
cwtl
bound
adc
mov
dec
jg
mov
clc
and
repz
mov
inc
xchg
add
outsb
mov
xor
bound
pop
cmpsl
in
bound
mov
sahf
cmpsb
dec
sbb
lcall
out
lods
adc
jmp
loopne
cmpsl
ljmp
cltd
xor
sbbl
pop
or
sahf
nop
dec
push
cmp
or
clc
leave
cmp
out
ja
stos
xor
je
lcall
ror
xchg
inc
sbbb
jnp
jmp
adc
fisttpll
push
push
in
mov
add
cmp
sbbl
test
xchg
mov
pop
rsm
stos
lds
push
adc
mov
sbb
cmp
inc
loop
notl
test
or
or
mov
popf
xchg
sti
les
push
sbbl
mov
stos
jnp
shll
xchg
cs
pop
xor
jecxz
inc
fidivs
fcom
sub
pop
xchg
scas
dec
outsl
loopne
jecxz
popf
lds
mov
movsl
adc
jo
lock
mov
js
inc
push
out
push
sub
popa
xor
or
jnp
cmpsb
mov
sub
dec
loope
dec
ficoms
in
mov
mov
hlt
pop
cmp
pop
add
jo
or
test
pop
push
fistl
fadd
clc
cmpsb
inc
ss
mov
js
jp
mov
pop
dec
sbb
icebp
sbb
cmp
inc
ja
cwtl
pop
arpl
push
out
rol
jae
ret
test
les
cmp
mov
sbb
push
in
pop
mov
mov
out
inc
cmpb
mov
in
push
jl,pn
sub
ret
jnp
mov
scas
cmp
jmp
mov
outsl
aam
bound
sub
lods
dec
test
scas
xorl
sbb
inc
fimuls
xor
scas
cmpsl
test
in
dec
inc
mov
dec
mov
xchg
cmp
mov
out
xchg
cs
mov
xchg
fistpll
xor
out
and
fucomip
shll
clc
mov
sbb
nop
fisttpl
repnz
lahf
insl
cmp
mov
xchg
add
out
fdivrs
sarl
frstor
pop
cmc
jmp
shll
pop
stos
and
aad
xor
jbe
or
cmpsl
nop
pop
fdivs
rep
xchg
mov
pop
dec
in
xor
dec
and
and
mov
cmpsl
xchg
outsb
cmpsl
jp
fdivl
insl
hlt
imul
or
aam
or
lds
xor
pop
push
popa
lret
pop
aas
adc
test
out
lcall
icebp
test
inc
mov
dec
lods
mov
aad
aas
lcall
pop
pop
push
data16
xchg
pop
out
pop
pushf
out
cmp
scas
fs
push
insl
sub
lahf
leave
mov
xchg
lods
aam
xchg
add
lret
flds
test
inc
sub
mov
xchg
inc
or
fs
pop
push
lcall
push
push
les
add
dec
jge
out
mov
add
call
xchg
jmp
arpl
xorb
mov
pop
mov
jns
push
rcrl
call
xchg
sahf
pop
das
mov
lcall
jne
addr16
shr
enter
paddw
jb
fisubl
xchg
popa
bound
sti
push
sbb
add
in
lahf
stos
adc
add
mov
lods
adc
sbb
pop
adc
incl
insb
and
inc
divl
call
fcmovnu
push
pop
scas
nop
cld
data16
fildl
mov
cmpsb
xor
notl
mov
ja
dec
loopne
daa
xor
test
cmp
xchg
fwait
enter
pop
adc
test
addr16
add
mov
pop
mov
xlat
addl
mov
in
mov
iret
ficoms
pop
test
mov
aas
adc
xchg
or
es
pop
dec
sahf
imul
popa
mov
imull
mov
out
jle
and
mov
arpl
cmp
shr
pop
push
mov
popa
mov
sub
cld
mov
xchg
clc
mov
out
push
inc
mov
cmpsl
out
lahf
add
notb
test
adcl
call
mov
sub
ss
adc
lock
xchg
fucom
mov
adc
stos
leave
mov
fwait
pop
inc
mov
sub
xor
mov
scas
aad
sub
pop
or
jge
int3
fdivr
mov
push
pushf
mov
and
lcall
xlat
lds
sbb
xchg
sbb
lds
pusha
lret
sub
loopne
loop
adc
ljmp
sbb
pop
bound
sub
cltd
testl
jmp
cmp
mov
pop
hlt
jne
fidivrl
lret
mov
pop
jno
pop
ret
fidivl
mov
and
mov
cwtl
push
lcall
pushf
sbb
adc
or
xchg
add
lcall
adc
testl
mov
popa
or
mov
sub
imul
scas
cmp
mov
out
arpl
inc
adc
push
cmp
incb
out
icebp
jb
or
mov
jecxz
dec
mov
push
into
pop
mov
sub
inc
lods
in
mov
or
dec
loop
jnp
popf
sbb
push
cmp
lret
and
cmpsl
hlt
mov
xlat
xchg
repnz
js
sti
popf
jle
negb
mov
dec
and
xlat
jno
inc
sbbb
outsb
fwait
mov
mov
lods
jp
fwait
rorb
in
jbe
cli
push
and
sbb
int3
mov
repnz
in
addr16
in
enter
sub
sbb
cmp
mov
outsl
out
push
xor
mov
arpl
mov
sub
in
imul
or
call
push
fisttpl
xchg
lahf
dec
inc
popa
fistl
or
call
insl
and
pop
push
xchg
stc
xchg
push
shlb
inc
adc
cmp
call
pop
dec
int
loop
roll
lcall
adc
lea
jecxz
pop
aaa
loopne
pushf
popf
jge
push
lock
pop
xchg
fs
adc
jne
inc
dec
adc
adc
inc
inc
in
pusha
cmpsl
cmp
pop
loope
xchg
xchg
sbb
push
cmc
jmp
subl
sbb
stos
mov
adc
dec
adc
bound
inc
jnp
stc
jl
shlb
lods
cld
lds
xlat
leave
push
pop
insl
push
leave
outsb
ret
shrl
sti
ds
lea
push
es
mov
mov
insb
push
add
pop
jl
aad
add
into
in
in
jge
in
jo
or
add
leave
push
fstps
adc
int3
push
rorl
adc
leave
rcrl
xchg
jp
popf
dec
lahf
fs
xchg
fdiv
sbb
mov
add
sub
mov
call
and
decl
loopne
std
adc
jge
add
and
inc
add
lret
stos
out
sub
sub
xchg
jno
sbb
pop
gs
adc
data16
sti
ret
in
xchg
cmpsb
jo
mov
push
enter
adc
pop
andnps
pop
cmp
add
fstps
mov
sbb
in
cmp
int3
or
mov
lods
dec
add
lret
push
cmp
push
add
xor
dec
lods
fldcw
cs
xor
xor
jo
mov
jno
subb
mov
cmp
outsl
or
int3
aaa
aad
cmp
and
xchg
cmp
jle
jne
push
dec
jns
mov
sbbl
push
mov
pop
adc
jbe
jno
call
or
mov
lret
dec
shr
sub
push
mov
sub
inc
hlt
jae
jle
or
or
push
jnp
jmp
sbb
mov
test
inc
add
mov
cmp
xchg
dec
or
cli
inc
loope
pop
add
xor
lock
and
push
aad
mov
pop
popa
stc
leave
jne
jo
cmp
aas
jnp
lea
inc
fcmove
es
push
jno
mov
sahf
inc
mov
inc
xor
add
int
sbb
mov
cmpsb
or
lods
cmp
mov
fldenv
and
mov
mov
xor
push
sbb
xor
lea
pop
or
in
mov
out
push
and
loop
test
or
pop
add
and
push
or
mov
jle
data16
or
ds
stos
cmc
in
fwait
mov
test
adcb
daa
xor
jbe
push
in
add
push
imul
and
fisubs
ja
cwtl
inc
dec
movsl
pusha
ret
in
dec
inc
insb
inc
test
jge
xor
mov
lcall
or
aam
fistpl
adc
aam
pop
in
push
lret
test
xchg
jbe
adc
ljmp
fsubr
imul
lahf
loop
mov
nop
and
rcr
int3
dec
xorl
int3
scas
xchg
sub
xchg
cmpsl
lret
insb
pop
and
dec
xchg
pop
sahf
sub
xor
and
fwait
scas
sub
mov
inc
sub
scas
bt
sbb
rolb
cmp
mov
aam
imul
pop
adc
sbb
ret
repnz
add
ss
mov
andl
in
lock
dec
xchg
test
xchg
jbe
cmp
in
pop
sbb
jnp
jl
pop
out
rcll
mulb
stc
xchg
cmp
aam
sti
add
add
mov
addr16
xlat
dec
stc
cltd
es
adc
addr16
push
mov
pushf
insl
add
xor
lcall
in
cmpsb
fcompl
sbb
aam
push
or
mov
imul
imul
inc
cmp
or
sub
fisttps
fidivrs
and
roll
xchg
inc
mov
cmp
cwtl
aaa
adc
aam
mov
sbbb
add
mov
adc
insb
lcall
cmpsl
push
xor
mov
lret
xchg
filds
xor
push
adc
insb
js
jno
mov
lods
int3
shll
mov
repz
nop
cmp
int3
mov
ret
fists
fstpl
or
xchg
pop
jb
ja
insl
pop
xchg
mov
stc
flds
pop
mov
or
push
loopne
lret
ja
jnp
xchg
addb
mov
push
dec
or
jo
or
lcall
sti
out
lea
dec
push
pusha
stc
js
dec
inc
pop
dec
lcall
lcall
orb
sub
jo
xor
fidivrl
push
ljmp
cmp
mov
xchg
and
aas
or
cmp
xchg
out
sub
pop
add
hlt
scas
push
jne
or
cmp
mov
mov
comiss
mov
aam
xchg
xchg
inc
divb
pop
or
mov
cmp
mov
dec
sub
icebp
jbe
arpl
xchg
test
mov
adc
jle
mov
jmp
cltd
pop
and
sub
mov
mov
mov
push
cmp
add
mov
lds
pop
les
push
cmp
mov
gs
or
aas
outsl
cli
lret
xor
or
clc
cmpsb
pop
cmp
add
mov
dec
fwait
mov
out
loop
fs
push
dec
mov
lret
in
call
jnp
sbbb
or
push
mov
jl
sub
testb
adc
mov
out
dec
inc
mov
ljmp
cmp
dec
gs
shl
inc
loope
mov
lea
adc
sbb
aam
lret
in
js
pop
fnstcw
lea
xorl
repnz
cltd
mov
popa
sarb
and
inc
shlb
push
ss
mov
pop
addr16
xchg
sub
mov
rcll
dec
cmp
xor
cltd
decb
pushf
xor
popa
xor
in
jmp
bnd
xchg
div
jmp
mov
mov
gs
pop
aad
sar
mov
shll
insl
nop
fcomps
cltd
adc
in
cmp
aaa
mov
xchg
xchg
push
mov
scas
in
mov
mov
mov
mov
push
xor
inc
jnp
or
out
js
nop
xchg
int3
rorl
test
jp
xchg
subl
and
hlt
das
pop
push
adc
push
adc
insl
mov
and
icebp
jnp
loope
icebp
jns
add
shlb
or
push
push
xor
xor
ljmp
lcall
in
xchg
inc
push
dec
mov
push
out
inc
sbb
jnp
add
xor
pop
test
inc
test
sub
call
sub
aaa
dec
arpl
pop
push
dec
fisttps
pop
and
nop
das
inc
xchg
xlat
xor
push
dec
inc
imull
data16
cld
repnz
xchg
cmpsl
test
sbb
mov
testb
lret
dec
popa
inc
mov
movsl
jg
mov
cmp
nop
xchg
hlt
sbb
ja
bound
dec
in
jge
fcompl
in
jbe
sbb
ds
sbb
repz
xor
mov
inc
and
int
xor
jo
in
lock
lods
je
stos
repz
shrl
rorb
xchg
mov
jl
fisttpll
pop
ret
xchg
out
sahf
mov
adc
dec
dec
ds
in
out
and
ret
xchg
loope
sub
int
push
or
mov
fistpll
pop
mov
inc
fmull
push
inc
push
and
pop
jbe
icebp
sub
mov
movsl
pop
rep
call
mov
cmpsb
lsl
mov
inc
inc
fidivl
in
xchg
cmp
movsl
jno
cmp
pop
jns
lock
xchg
lock
jmp
shlb
insl
sbb
aaa
xor
imul
imul
xchg
repz
ret
mov
jmp
mov
cmc
in
sub
test
jmp
sbb
test
jo
out
sbb
ffreep
and
inc
or
in
cmc
fs
adc
xchg
aam
daa
lods
hlt
dec
adc
sbb
mov
daa
rolb
mov
mov
mov
xchg
insw
icebp
bound
test
je
inc
fistps
in
mov
rcr
xchg
es
lods
lcall
aas
dec
lods
mov
adc
test
pop
xor
mov
xor
ret
and
pop
push
into
clc
movsb
pop
or
lock
and
adc
pop
cli
hlt
push
jp
sbb
adc
inc
jae
pop
sub
dec
or
leave
adc
movsbl
and
jp
imul
jge
pop
loopne
inc
cmp
cwtl
in
pop
add
rcll
das
ret
lds
fsin
not
inc
pusha
popf
add
sub
daa
jmp
out
mov
sub
loopne
mov
xlat
jnp
fmull
push
mov
cmp
mov
mov
pop
bound
xor
scas
mov
sbb
pop
cs
pop
pop
imul
and
enter
push
jge
pop
mov
mov
in
push
cmp
inc
dec
mov
sbb
xor
xor
dec
pop
inc
mov
daa
inc
lea
in
cwtl
or
cwtl
xchg
push
sti
std
and
mov
cmc
es
int3
divb
out
sbb
out
inc
inc
clc
test
or
call
jno
idivl
jns
xor
cbtw
add
das
fs
mov
and
jle
xchg
inc
push
lahf
cltd
movsb
mov
add
xor
mov
mov
fisubl
adc
pop
and
fimull
sbb
jnp
std
cwtl
mov
pop
mov
jae
pushl
mov
adc
dec
jbe
int
les
jl
movsb
xor
xchg
out
jno
inc
gs
sarb
jg
int
lods
clc
or
iret
cmc
xor
push
jmp
stos
mov
out
or
repnz
test
and
lcall
das
lret
mov
addr16
mov
sbb
jle
hlt
jns
and
fstpl
jl
aam
nop
lea
daa
in
rcr
popf
mulb
inc
scas
mov
push
dec
pop
xor
jle
andl
in
call
nop
jnp
in
ljmp
daa
out
arpl
fs
popa
xor
popf
jo
adc
jns
mov
sbb
pop
sub
data16
movsl
or
icebp
pop
stc
mov
out
and
adc
les
dec
inc
aaa
or
dec
repnz
addps
daa
loopne
scas
idivl
sub
dec
mov
das
sbb
sahf
fucomip
jmp
mov
or
lahf
mov
push
test
nop
mov
jmp
mov
jmp
idiv
mov
jb
adc
sbb
jp
or
ret
mov
sbb
into
dec
mov
bound
or
clc
or
stos
int
xchg
sahf
inc
mov
dec
jbe
lret
mov
jo
enter
add
dec
cmp
mov
and
sahf
xor
ficoms
mov
or
out
test
pop
lret
inc
dec
dec
fsubl
jecxz
pop
int
rclb
inc
mov
out
sub
inc
xor
aad
cmp
sub
mov
dec
int
push
mov
lea
sbb
pop
test
push
xchg
sbb
mulb
loop
pop
inc
std
sub
adc
pushf
xor
jnp
dec
jno
cltd
adcl
aas
cmpsl
jl
pop
xlat
xor
xor
movsl
iret
pop
jmp
adc
inc
jnp
insl
pop
or
cmp
mov
js
aam
lcall
movsl
rcr
lods
and
pop
and
xchg
push
sub
inc
out
insb
xchg
loope
inc
out
in
jmp
cwtl
xor
ja
pushf
add
or
out
adc
les
xchg
cmc
dec
daa
mov
nop
xchg
popf
jnp
test
and
jg
or
mov
mov
sbb
das
adc
add
jnp
xchg
nop
popa
mov
insl
ja
mov
mov
dec
mov
mov
out
and
mov
jp
mov
mov
sbb
mov
push
test
aad
leave
hlt
mov
sbb
xchg
hlt
in
gs
mov
sub
ss
pushf
lcall
push
cmpsl
js
lds
inc
push
push
cmp
popf
push
jnp
pop
xchg
jle
pop
jge
and
jge
sub
lods
mov
mov
pop
ficoms
jno
add
mov
cld
sub
add
mov
xchg
add
mov
leave
bound
inc
ds
cli
mov
mov
cmp
lds
mov
insl
in
push
lock
orb
fwait
pop
int
pop
jge
shrl
sti
mov
stos
popa
mov
les
shlb
mov
xlat
xor
sbb
sahf
shl
jecxz
js
cmpsb
aad
js
repnz
xchg
jne
jns
dec
arpl
stos
add
push
pop
loop
add
adc
cmp
or
rorb
pop
cmp
cwtl
into
mov
push
outsl
adc
xorb
shll
andl
js
sbb
pop
mov
inc
xor
jl
inc
and
jecxz
xchg
hlt
loope
pop
lret
pop
rcrl
adc
aam
movb
in
pop
dec
pop
popl
imul
push
mul
pop
cmp
adc
inc
leave
cltd
cmp
aas
icebp
inc
lahf
push
push
mov
idivl
sub
ljmp
negb
dec
xlat
inc
cmc
mov
scas
adc
cld
shlb
fdivp
pop
movl
notl
push
fs
les
stc
fisttpll
cs
lock
xor
xor
dec
jecxz
mov
mov
jg
xor
sar
inc
pop
fwait
dec
cmp
into
movsb
mov
add
or
adc
cwtl
inc
push
pop
movsb
and
repz
push
hlt
popa
xor
inc
mov
cmc
add
cmp
dec
aas
mov
pop
call
or
mov
cld
push
xlat
cmp
and
pop
xchg
shrb
out
outsl
std
inc
shlb
or
mov
in
repnz
xchg
insb
nop
popf
in
xchg
mov
and
push
mov
sbb
xlat
push
sar
dec
pop
fmuls
xlat
add
push
push
cmpb
lahf
pop
push
sbb
add
cmp
hlt
xor
out
ss
dec
cmp
es
movsb
imul
loop
pop
popa
pop
mov
mov
call
test
js
and
dec
fs
lods
pop
popf
jle
or
mov
push
loope
sub
dec
aaa
out
adc
icebp
and
lahf
push
test
pcmpeqw
leave
mov
je
test
nop
jge
pop
clc
xchg
cmp
pop
lahf
push
inc
stc
aas
les
or
jb
jmp
movsb
jns
insb
das
leave
shrl
xchg
push
mov
aaa
or
clc
cmp
sub
jmp
add
fnstcw
jne
pop
pop
mov
in
stos
imul
je
push
ss
xchg
inc
fucom
rcl
push
ret
clc
icebp
frstor
stc
fwait
incb
hlt
leave
xor
loope
movsb
sti
iret
aad
lret
scas
sbb
inc
add
adc
sahf
adc
pop
sbbl
insl
mov
xchg
push
cmp
mov
jg
lahf
fsubp
repnz
jae
lret
repz
andb
mov
jne
xchg
sub
imul
int3
call
lods
mov
mov
outsl
stos
jmp
mull
sbb
call
fdivr
xchg
mov
mov
xchg
sub
add
fs
push
mov
lods
pushf
lods
imul
cs
cmp
divb
ja
shll
xchg
cmp
cmc
add
pop
pop
jne
stc
mov
mov
iret
das
rorb
in
lcall
loope
or
fbstp
mov
mov
test
adc
cli
out
jb
sti
sbb
mov
lock
mov
je
popl
in
inc
imul
aad
adc
push
aas
dec
sbb
into
inc
scas
gs
dec
nop
lret
fidivl
dec
pop
lret
push
inc
adc
push
xchg
mov
hlt
xchg
sbb
adc
and
in
int
jmp
std
lret
icebp
mov
sub
daa
imul
sbb
or
sbb
sub
or
pop
clc
lds
ss
icebp
jo
xor
xchg
sub
inc
mov
or
ds
inc
pop
ldmxcsr
es
roll
data16
je
mov
cmpsb
cmova
mov
push
stos
cmp
mov
jne
xor
dec
cmp
jno
cltd
jecxz
xorb
jne
ret
aad
popl
int
inc
mov
aad
xor
adc
adc
mov
push
rorl
ss
adc
ja
sbb
adc
jns
sub
repnz
xor
aad
sub
scas
insl
sub
xchg
mov
test
mov
shlb
jmp
mov
mov
gs
xchg
mov
sub
fdivr
or
dec
xchg
lods
mov
sub
jle
aad
cmp
pop
int
mov
cmp
jle
scas
push
fisttps
jns
sbb
inc
adc
fxch
rolb
popa
xchg
xor
out
add
js
and
out
push
adc
cmp
cli
sub
adc
mov
inc
dec
mov
inc
loop
mov
out
push
scas
xchg
pop
or
addr16
xchg
xchg
aaa
fmull
mov
punpckhdq
loop
sbb
xchg
fmuls
popf
std
test
rclb
mov
mov
sub
lods
loopne
movsb
pusha
xor
push
stc
dec
lock
inc
mov
movsl
inc
mov
pop
insb
xlat
pop
iret
fabs
leave
xor
xlat
pushf
xchg
mov
jnp
stc
push
mov
jbe
ret
iret
call
out
add
adcb
fwait
push
cmp
xor
mov
jl
leave
arpl
popa
fchs
into
popf
jmp
or
lret
sbb
or
andb
int
push
jp
jl
adc
mov
in
loopne
test
mov
lcall
notb
clc
mov
pusha
bound
jbe
lea
lods
and
lock
jmp
das
jns
push
mov
mov
jmp
pop
xchg
inc
iret
pop
mov
jae
jae
std
cmp
sbbb
lods
dec
xor
mov
xor
insb
sbb
popf
aam
arpl
xchg
ret
xchg
sub
lea
fnstcw
jns
or
inc
push
jne
test
nop
mov
dec
cmp
cmp
xorl
data16
les
inc
xor
enter
out
xor
lcall
rcr
pop
and
out
mov
ss
lods
pushf
mov
jle
sbb
sti
sysenter
push
push
xchg
xor
mov
adc
ljmp
inc
xor
xchg
mov
sub
or
inc
mov
push
xor
xor
push
in
mov
test
sub
inc
jmp
rol
imull
mov
popf
adc
pop
rclb
mov
aaa
repnz
add
mov
mov
pmuludq
ds
sub
in
sahf
mov
sbb
xchg
xorl
add
or
push
push
gs
and
aaa
adc
pop
pop
inc
mov
rcll
xchg
pop
push
mov
icebp
mov
push
rolb
add
mulb
push
or
lcall
xor
mov
out
pushf
jb
mov
das
sub
mov
mov
jecxz
ficompl
push
and
repnz
adc
fbstp
cwtl
mov
and
adc
aas
xor
mov
cmp
or
stos
jae
add
cld
push
mov
loop
mov
popf
adc
sub
lcall
call
push
sbb
loope
js
jns
gs
std
loope
sbb
mov
sarb
sub
subl
pop
sub
aaa
rorb
pop
xchg
mov
pop
es
imul
mov
or
cmp
enter
cmc
push
mov
dec
mov
or
pop
xor
ret
or
push
xor
insl
inc
dec
fmuls
push
sub
mov
push
ds
bnd
push
sub
cwtl
mov
lahf
popa
fistpl
dec
imul
pop
mov
push
push
push
je
and
jbe
add
sbb
fbstp
add
sub
fldl
mov
popl
dec
fldcw
loope
push
testl
out
jno
pop
jge
xor
sbb
mov
jae
jmp
cs
mov
pop
mulb
in
testb
movsb
mov
sahf
jge
or
xchg
pop
mov
cld
into
push
popa
push
cltd
push
jp
rcr
dec
jno
sti
insb
push
add
sub
jge
pop
sti
mov
std
or
jno
jno
cmp
pop
ret
pop
add
cmpsl
nop
test
jge
mov
sbb
mov
dec
aaa
imul
sbb
popf
adc
fwait
cmpsb
sbb
jle
push
mov
xchg
xchg
jl
fwait
sbb
mov
or
sub
es
and
outsl
lret
cmpsw
lods
xor
aaa
loopne
jl
mov
or
popf
sbb
sti
imul
rcl
fstpt
clc
aas
xchg
lods
cmp
decb
imul
xor
add
mov
add
push
mov
dec
lds
and
jecxz
mov
jae
pop
inc
push
add
jp
sbb
jae
pop
cmpsl
negl
push
adc
mov
or
mov
xchg
xchg
xchg
roll
jbe
push
cmp
lods
jecxz
push
jne
pop
push
data16
adc
mov
fldcw
mov
pop
std
fs
filds
mov
in
cmp
xchg
mov
and
std
push
inc
fisttps
xchg
scas
aad
or
add
dec
frstor
adc
outsl
lea
ficompl
imul
mov
cmp
adc
loopne
add
mov
notb
test
jno,pt
jns
lods
lret
mov
aad
push
pop
add
push
adc
ljmp
faddl
mov
and
xor
loopne
insb
daa
iret
scas
cwtl
push
sbb
gs
mov
push
ficoml
bound
decl
fdivrp
push
movsl
in
aaa
xchg
or
xchg
imul
push
ror
stos
push
or
push
aaa
cmp
adc
outsl
jecxz
ds
insb
roll
outsb
scas
sbb
popf
sub
ljmp
adc
jns
imul
dec
adc
pop
adc
jg
out
inc
pop
dec
cltd
jns
aaa
jl
stos
out
pop
test
xchg
inc
jne
cmp
jnp
inc
addr16
popa
mov
push
sub
dec
inc
add
or
lods
js
lods
and
mov
dec
icebp
outsb
addb
pop
cmp
shrl
loop
xchg
pushf
sub
shlb
cmp
aaa
lods
adc
push
mov
fdivl
sub
rcrl
dec
cmp
nop
and
add
add
inc
data16
mov
in
xor
out
cmpsb
test
inc
and
sub
jmp
imul
mov
inc
or
mov
nop
xchg
jge
mov
in
push
imul
fnstcw
aaa
dec
mov
fmull
pusha
cld
pop
xchg
faddp
push
subw
mov
sub
push
sbb
hlt
mov
inc
pop
inc
jecxz
inc
adc
dec
fdivr
mov
xor
enter
int3
xchg
test
mov
xchg
and
mov
xor
cmp
cltd
rorl
mov
mov
stos
in
jbe
mov
rcll
das
int3
inc
dec
outsl
sbb
push
lock
and
add
sarl
leave
mov
sarb
mov
inc
push
outsl
dec
jecxz
or
sar
lret
mov
mov
cmpsb
es
or
in
jnp
dec
or
icebp
imul
and
into
out
xchg
inc
sub
sbb
fisubrl
mov
xacquire
xchg
or
sarl
into
sub
jns
pop
and
divb
sub
cmp
xlat
sbb
enter
push
dec
xor
mov
mov
lods
sub
fsts
mov
cmp
and
push
mov
add
out
ja
fcoml
jmp
mov
in
cmpsb
je
jp
and
mov
test
sbb
movsl
pop
hlt
loop
xlat
sbb
test
xor
jmp
inc
and
push
shl
fisubrs
jp
icebp
mov
jp
mov
outsl
sahf
mov
inc
mov
xchg
push
push
shlb
stc
mov
das
jbe
enter
cli
push
mov
aas
jb
shlb
cmp
mov
je
or
sub
mov
dec
dec
out
jge
in
int3
lds
dec
stos
mov
push
cmp
sub
in
or
gs
stc
gs
mov
and
inc
movsb
sbb
test
das
nop
dec
loope
mov
pop
jl
xor
sbb
mov
mov
mov
out
lods
inc
add
push
enter
jge
lock
mov
sub
sub
dec
pop
loope
loope
jmp
inc
ficompl
xor
in
pop
call
repnz
stc
and
bound
pop
ja
push
insl
push
inc
iret
jl
test
push
outsb
movsb
out
mov
jge
rcr
mov
ja
rolb
lock
mov
and
stos
data16
ljmpw
movb
adc
mov
xchg
stos
punpckhbw
call
int
xchg
jns
cmp
dec
inc
jge
adc
mov
or
cmpsl
dec
mov
mov
or
div
adcl
push
loopne
mov
cmc
out
pop
lods
xor
sub
mov
sbb
inc
sub
cld
mov
icebp
int3
out
sarb
arpl
divb
xchg
fs
pop
inc
fmuls
lret
insb
jbe
cmpsl
mov
or
arpl
inc
sbbb
in
faddl
push
mov
outsl
testb
or
and
pop
cmpsl
sub
mov
xor
cld
dec
dec
fdivrs
cmp
lods
es
xor
or
sbb
rcl
pop
lea
add
push
mov
xchg
ret
xchg
sub
nopl
les
dec
test
insl
xor
dec
mov
mov
and
push
push
aas
fcomp
jl
data16
into
inc
dec
lods
in
push
leave
cmp
movsb
sti
inc
or
idiv
lds
call
pop
adc
and
and
cmp
call
sub
lds
adc
lcall
xchg
lods
jmp
mov
std
sbb
xor
pushl
call
and
sahf
xchg
ret
dec
stos
xchg
out
stos
test
daa
not
inc
cmp
clc
dec
add
adc
fdivrp
int3
and
push
xlat
push
and
lret
xchg
xchg
movsl
adc
or
mov
arpl
bnd
jbe
adc
imull
ds
mov
ja
jbe
push
mov
addr16
arpl
push
scas
popf
inc
push
jp
jno
lahf
cwtl
adc
dec
stos
xor
fs
inc
imul
mov
inc
inc
ret
xor
jge
dec
cmp
jge
xchg
adc
stc
iret
sti
div
xor
jp
movsl
imul
fldl
cmp
adc
test
mov
outsl
aam
inc
jb
fstl
pop
test
or
ret
xor
dec
xor
sbb
inc
subb
scas
cs
pop
add
leave
inc
push
nop
mov
xor
je
icebp
or
popa
jle
sub
lods
sbbl
cmpsl
jbe
cs
inc
sub
mov
xlat
jge
lret
bound
call
sub
pop
jae
stc
jns
cmp
or
sub
xchg
shlb
push
add
hlt
mov
sbb
pushl
inc
lods
in
or
xor
call
enter
push
cmc
sbb
stos
and
outsb
mov
jp
sbb
ja
clc
or
pop
incb
dec
lods
push
icebp
push
cmp
pop
ds
xchg
fistpll
pop
aam
fimull
ss
lock
rol
add
jge
lods
fisttpl
pop
pop
call
pop
ror
loopne
subb
cwtl
popa
mov
mov
mov
adc
ja
lahf
in
inc
sbb
outsl
je
cmp
shr
push
pop
cld
aas
out
xchg
movsl
xor
sub
xchg
mov
xlat
jns
push
out
cmp
cld
jns
cwtl
and
add
int
lods
ss
xchg
xchg
ljmp
ljmp
das
adc
push
dec
push
or
xor
jmp
repnz
mov
push
mov
gs
in
fimull
and
or
inc
xchg
push
lock
adc
sbb
mov
mov
cs
sbb
iret
inc
leave
aad
jmp
std
mov
int
jmp
fst
xor
and
test
xchg
addl
imul
ljmp
dec
shrb
shl
mov
push
roll
or
aam
dec
push
cmp
sub
and
jnp
jp
push
lods
inc
jge
insl
pop
outsb
cli
mov
dec
fsubrl
sbb
pop
mov
inc
and
in
out
cmp
dec
inc
or
adc
sbb
lcall
mov
lcall
lret
xchg
mov
repnz
sbb
bound
xchg
cmpsl
addb
aad
inc
jecxz
mov
xchg
mov
dec
adc
in
pusha
push
add
dec
xchg
mov
mov
pop
testb
add
sbb
push
inc
mov
pop
aam
xor
sbb
popa
ret
dec
test
cltd
push
into
sub
fnstcw
loope
sahf
xor
xor
dec
in
cmp
popa
jl
ss
das
mov
cmpsl
fs
and
jge
sbb
fsubl
ljmp
sub
jmp
lcall
xchg
xor
filds
addr16
sub
xor
ds
push
hlt
sti
sub
dec
test
sarb
xor
sbb
cmp
sub
gs
repnz
lods
and
xchg
aad
ja
mov
inc
xor
cs
shl
push
xor
pop
xchg
insl
outsl
cld
fcmovu
ljmp
gs
pop
push
pop
outsb
and
jg
pop
sub
xor
fsubl
add
cltd
pop
aas
out
jge
test
xchg
push
cmpsl
cmp
inc
and
gs
cmpsb
movsl
jl
outsb
cmpsb
jle
repnz
sbb
shrb
pop
leave
ss
jns
and
aad
decb
or
add
and
sahf
out
xor
addb
push
xor
and
movsl
jo
fldl
lahf
adc
test
jo
into
sbb
pusha
in
lds
jg
rol
inc
fdivrl
push
je
sbb
lock
lret
and
aaa
movsb
xor
pushf
cltd
jp
aaa
out
loopne
cld
shl
scas
mov
outsb
clc
rcrw
test
mov
out
cmp
pop
jge
cwtl
mov
ss
aas
pop
or
push
push
dec
jmp
add
je
stos
in
lock
int3
inc
jb
out
or
aam
int
push
xchg
lret
ja
lahf
inc
int
ja
arpl
xor
jle
xchg
dec
sbb
mov
out
xchg
test
jecxz
sahf
imull
or
dec
push
xor
insb
add
cmp
ljmp
ja
or
aam
dec
fcmovnb
dec
loopne
cmc
push
daa
adc
pop
adc
imul
je
xchg
xor
mov
hlt
fcmovb
pop
pop
movsb
sbb
jl
inc
sbb
cmp
inc
sbb
and
testb
ljmp
add
fdivl
aad
aas
aam
bound
fs
aam
sti
scas
aad
push
push
pop
jle
jne
jb
out
mull
inc
test
into
mov
pop
clc
call
ret
mov
add
cmp
insb
cltd
mov
cs
loopne
ds
pop
test
inc
mov
or
hlt
testl
pop
les
push
mov
sub
dec
xchg
das
pop
in
mov
ss
pop
mov
lret
movl
sub
inc
push
xchg
adcl
call
fldl
into
je
pop
stos
sub
cmp
ja
pop
ja
aas
xchg
jle
shl
addl
sbb
dec
lret
xchg
push
fmull
and
adc
mov
sbb
popa
adc
popa
cli
aad
outsb
aam
aas
outsl
js
jne
pop
pop
jmp
shr
mov
mov
mov
xchg
mov
pop
inc
and
mov
push
cltd
push
in
movsl
inc
fnsave
pop
jle
pushf
mov
rcrl
sbb
inc
test
pop
pop
jle
lods
movsb
xor
cmp
scas
dec
mov
mov
aaa
insb
popf
insb
aad
or
adc
test
lret
xchg
in
bound
iret
lcall
ror
push
add
cwtl
jmp
lods
rcrl
inc
repnz
ds
das
add
pop
mov
push
pop
adc
push
sub
imul
cmp
mov
fs
dec
fistpll
and
sti
mov
and
data16
popf
push
mov
xor
int3
fs
test
jbe
mov
mov
ds
hlt
xor
sub
mov
jle
addb
lock
leave
inc
maxps
in
test
cli
push
mov
lcall
pop
inc
arpl
push
inc
lods
lods
pushf
sahf
lret
inc
push
mov
add
adc
mov
inc
sbbl
and
dec
sahf
lahf
lahf
int3
sti
aad
test
xchg
sarl
js
aam
ficoml
out
pushf
sub
rclb
or
and
aam
fiadds
xor
dec
jp
mov
shl
push
jo
movsb
push
test
lods
xchg
and
or
aam
cs
call
loop
xor
cli
mov
cmc
sbb
mov
sub
rolw
mov
mov
push
cmc
add
sbb
xor
in
pop
jbe
cmp
ret
inc
cli
push
test
mov
jmp
stos
push
jbe
pop
xchg
pushf
push
mov
push
out
stos
aam
lds
pusha
jno
fiadds
fimuls
pop
dec
xchg
lahf
sub
aad
lock
data16
nop
out
pop
mov
sbb
rcrl
inc
bound
xchg
scas
mov
mull
arpl
test
jo
or
movsb
lret
in
or
roll
movsb
xor
dec
pop
mov
cs
mov
xor
inc
int3
inc
push
pop
inc
adcb
push
es
cli
mov
xchg
pop
and
das
mov
hlt
push
dec
insl
pop
and
popf
sbb
stos
pop
lret
ja
test
mov
shl
mov
xchg
sahf
icebp
add
mov
gs
add
sbb
pop
imul
mov
push
cmp
repz
push
cmpsb
sarl
mov
into
push
shlb
lods
pop
pop
movsb
pushf
outsb
or
leave
mov
cwtl
pop
pop
test
and
push
sub
push
mov
dec
dec
jae
sbb
xchg
or
jg
mov
jbe
xchg
out
out
imul
das
mov
mov
adc
es
or
cmp
ret
and
dec
into
imul
fnstcw
sub
xor
gs
cmp
and
cltd
fisttpll
test
push
dec
xchg
pop
dec
idiv
jo
into
sub
xchg
rolb
lea
and
sbb
sub
cmc
andl
add
mulb
inc
arpl
imul
xor
je
cld
sub
or
movsl
mov
sbb
mov
cmp
xchg
jae
out
insb
jl
xchg
cld
arpl
sbb
mov
mov
sub
vpsubsb
outsb
xlat
fwait
pushl
aaa
roll
sub
imul
add
ja
lock
pop
int
add
ljmp
test
lds
jl
push
mov
js
shll
fimull
daa
add
test
fildl
je
ficoms
add
sub
add
cs
and
std
mov
pop
sub
adcb
and
cmp
stc
xchg
add
xchg
clc
lds
ja
add
push
cmp
adc
aam
xchg
and
push
xor
mov
popf
lret
jae
bound
ret
jno
rorb
add
ss
cmp
imulb
loopne
enter
adcb
mov
xlat
cmp
mov
leave
mov
popf
cs
imul
aam
lret
xchg
xor
pop
mov
add
scas
int3
mov
lret
jae
in
loope
xor
dec
and
ja
jb
and
in
add
or
aad
sbb
jmp
mov
mov
lret
sbb
jge
in
lods
mov
fiaddl
and
add
xchg
jo
inc
fprem1
xchg
push
adc
inc
inc
inc
inc
push
mov
jnp
rcr
and
add
dec
mov
imul
scas
out
sti
aad
mov
fucomi
rcr
cmp
adc
dec
sti
xor
push
sbb
lahf
aad
insb
xchg
mov
lahf
mov
cmpsl
daa
mov
faddl
add
daa
into
dec
adc
fimuls
sub
or
inc
pop
pushf
psllw
lods
in
stos
outsb
movsb
daa
stos
push
in
or
mov
mov
and
decl
jne
mov
xor
dec
mov
scas
int3
sahf
loop
dec
lahf
mov
xor
inc
push
sub
xor
test
mov
adc
int
dec
out
mov
loope
adcb
cmpsb
pop
divb
dec
push
in
mov
hlt
sub
in
jmp
mov
cmp
scas
inc
mov
dec
or
enter
jmp
dec
rcrb
inc
fdivr
imul
sbb
or
aad
les
and
mov
adcb
cwtl
dec
fsubrs
movsl
fimuls
scas
jl
mov
xor
mov
xchg
rcll
mul
popl
insb
scas
lds
pop
lds
icebp
pop
outsb
sahf
pop
cwtl
or
das
out
or
es
pop
pop
daa
rclb
lret
out
test
mov
inc
jg
add
insl
loopne
popf
popa
jns
icebp
push
jmp
ds
in
mov
iret
mov
pop
pop
push
bound
hlt
pop
xchg
std
sarl
out
push
xor
push
sbb
imul
dec
mov
and
pop
ret
push
push
addr16
mov
repz
xor
mov
cmp
lock
pop
or
xchg
mov
cwtl
ljmp
stos
jbe
mov
ret
xor
dec
xchg
dec
or
sub
push
xor
mov
aaa
add
xchg
rol
mov
and
popa
popa
lcall
dec
jb,pn
pop
pop
pop
cmp
or
out
cs
les
sbb
fmull
xchg
lret
mov
outsb
pushf
scas
pop
aas
lret
dec
adc
sbb
and
pop
popf
dec
adc
pop
adc
shl
js
cmpb
mov
xor
mov
fyl2xp1
lea
insl
stos
inc
divb
cmp
out
test
ret
std
cmp
pop
jnp
jno
or
pop
loopne
push
add
push
lods
push
out
cli
js
mov
fisttpl
sbb
ljmp
mov
fwait
mov
out
popa
pop
inc
scas
daa
loop
push
xor
mov
xchg
add
dec
bound
aas
enter
xchg
popf
gs
orl
xor
clc
push
xlat
leave
rorl
fbstp
mov
es
ja
fwait
jne
test
dec
lods
gs
inc
or
inc
add
ds
and
enter
pop
mov
xlat
hlt
push
and
out
pop
jne
call
mov
cmp
mov
adc
and
mov
adcb
std
cmp
out
push
in
pop
mov
adc
xor
dec
cmp
std
adc
push
sahf
fimuls
fbstp
cmpsb
ss
mov
jb
mov
lahf
sbb
push
add
sub
fcoms
xlat
outsl
inc
mov
sbb
cmc
scas
std
dec
aas
dec
xchg
lea
inc
dec
jmp
dec
sbb
addr16
cld
sbb
or
mul
hlt
push
inc
sarb
movsl
outsb
decl
daa
popa
xor
push
jne
xor
push
and
pop
gs
jge
adc
mov
sub
jecxz
js
test
pushf
push
cmp
sub
pusha
cmp
xor
movsl
jl
idivb
sbb
adc
xchg
imul
aam
mov
pushf
push
mov
in
scas
pop
adc
or
and
mov
xorb
inc
sarb
mov
push
pop
pop
xchg
popa
jo
and
sbb
insl
mov
cmp
lret
pop
mov
mov
pop
mov
test
stc
inc
arpl
mov
cltd
push
and
ja
and
xchg
jg
xlat
push
mov
mov
mov
cmpsb
mov
enter
xchg
xor
jmp
incl
ret
mov
pop
das
cwtl
int
mov
xchg
aad
or
dec
stos
in
push
into
cmp
lods
mov
mov
sub
push
inc
divl
leave
mov
mov
adc
mov
out
mov
push
ja
add
pusha
dec
dec
out
mul
jg
sbb
dec
jg
sub
inc
jnp
push
dec
add
shll
cmp
stos
mov
movl
les
fidivrs
push
outsb
daa
mov
xchg
es
popa
push
cmpsb
ss
xchg
inc
mov
or
cs
stos
es
hlt
pop
hlt
lds
lods
cmp
gs
mov
loopne
in
xchg
sub
std
jno
mov
out
mov
mov
ss
lods
mov
mov
std
aas
gs
ss
lahf
pop
jne
xlat
adc
jle
jae
pushf
push
cli
dec
push
stc
flds
std
ss
es
push
sbb
das
push
lea
xchg
sbb
std
pop
or
xchg
daa
out
loop
xlat
mov
rcrl
mov
sti
inc
inc
jle
ret
ret
adc
test
pop
mov
sub
jae
push
dec
and
mov
rorb
jl
cmp
int3
and
pop
adc
push
push
movsb
cmpsl
pop
mov
or
jge
scas
out
push
add
fstps
fmul
loop
sti
hlt
push
out
aad
pusha
mov
sub
sbb
movsb
dec
jb
push
pop
sub
push
and
aaa
jbe
popa
fs
cmpsl
ret
sarl
mov
add
pop
dec
adc
mov
cmp
dec
push
iret
test
cmp
in
sbb
fs
je
lds
mov
data16
cmp
cmp
bound
clc
ja
test
push
xchg
pop
sub
incb
out
jnp
or
loopne
lea
xchg
arpl
dec
lahf
stos
inc
repz
in
sbb
push
mov
add
cltd
mov
mov
inc
mov
cld
pushf
jmp
push
dec
rcll
mov
xor
pop
adc
lds
es
xor
push
mov
inc
out
popa
pop
cmp
and
push
jbe
xor
push
mov
neg
inc
dec
aad
repz
shll
mov
xchg
shll
jno
inc
pusha
shrb
lock
decl
cmp
dec
xorb
inc
in
cli
inc
lds
inc
mov
test
lcall
das
cmp
inc
dec
cmp
popa
test
add
xor
jno
dec
ret
dec
adc
testb
push
fsubrl
nop
scas
and
xlat
inc
scas
cs
xchg
es
pop
ss
xchg
cmp
scas
sub
lcall
cmpb
out
and
and
and
xchg
or
insb
adc
clc
idivb
lahf
popf
js
clc
je
iret
ljmp
mov
cmp
mov
neg
rcl
popf
mov
jno
cmp
insl
shll
add
jge
dec
addr16
xor
fnstenv
mov
push
cmpb
dec
out
xchg
das
stc
lods
scas
lds
bound
fldenv
loopne
xlat
outsl
push
jne
pop
xchg
sub
sub
xchg
test
add
fwait
sti
ret
ret
setp
int3
sub
into
pop
les
addr16
repz
mov
out
cmp
sub
out
fnstcw
mov
xchg
ret
mov
push
add
fisubrl
fcomps
add
dec
add
push
out
mov
filds
and
dec
pop
mov
mov
ja
xor
mov
outsb
add
out
pop
xchg
aad
add
sub
and
data16
scas
outsb
data16
sbb
cli
pop
lock
push
dec
cmp
nop
mov
ret
sub
mov
sbb
inc
out
test
popf
mov
sbb
daa
sub
movsl
push
fcoml
adc
ss
sub
or
and
mov
cs
push
sbb
pop
scas
adc
or
cltd
xchg
loopne
divl
fldcw
sub
mov
data16
insb
mov
into
or
and
int3
movsb
or
fcmovnu
mov
loope
js
pop
rclb
loop
or
jle
dec
lret
inc
jp
pop
sub
fnstcw
mov
dec
insl
pop
cltd
jns
sti
jns
or
sub
fmuls
cwtl
sub
pop
jnp
and
sbb
out
unpcklps
and
test
xchg
and
sahf
mov
cmp
fwait
adc
fldl
mov
add
into
sub
pushf
gs
or
xchg
pop
psubd
insl
jbe
push
hlt
sbb
stos
pop
stos
cmp
ja
xor
test
or
or
sbb
jnp
push
daa
arpl
test
call
movsb
lret
jecxz
iret
lock
cmp
mov
add
aas
xor
jl
roll
out
ret
pop
out
dec
mov
lea
ret
xor
pop
addr16
pushf
pop
test
pop
jl
hlt
test
xor
gs
sbb
jns
mov
mov
xor
sub
add
shr
fistpll
and
testl
xchg
push
mov
dec
xchg
fnsave
sub
ja
fsts
testb
mov
pop
out
and
xchg
mov
cwtl
lods
rorl
ret
dec
jp
sbb
repnz
loop
andb
out
or
mov
mov
push
movl
xchg
fsubl
jns
call
std
or
in
cmp
or
mov
sbb
cmp
mov
je
jbe
lret
imul
jae
int
push
xor
lods
mov
nop
dec
mov
xchg
loopne
iret
cmp
inc
inc
inc
jl
pop
sbb
mov
pushf
repz
cs
scas
push
stos
push
cmp
repz
dec
and
pop
cmp
or
xchg
fdivrs
fs
inc
xchg
js
movb
out
test
js
fnsave
in
xchg
mov
jg
and
lret
push
jno
into
ret
ja
in
es
shll
call
xor
sub
mov
or
push
mov
xor
pop
cmp
sbb
mov
sub
pop
imull
xchg
into
inc
xor
mov
leave
pop
cmc
in
mov
sub
jge
sub
xchg
or
not
sbbb
push
xchg
mov
cmp
inc
adc
dec
fildl
in
scas
clc
xor
sub
inc
or
sbbl
mov
push
add
pusha
mov
inc
xchg
aaa
jno
push
subl
pop
jl
xor
push
mov
test
adc
into
adc
clc
das
cmp
ror
pop
jne
push
mov
mov
jne
xor
cmpsl
andl
fldl
lds
inc
popa
das
cmp
sub
fstl
dec
mov
mov
shlb
or
sub
lds
push
adc
pop
addr16
ds
add
sub
testl
out
sub
movsl
adcb
inc
xor
mov
push
cmp
nop
sub
mov
cltd
cmpsb
xor
inc
sarl
nop
jle
out
in
pop
pop
sub
dec
int
mov
fs
and
inc
clc
sbb
or
mov
sub
lcall
popa
cmpsl
pushf
es
and
or
outsb
hlt
arpl
test
mov
push
or
jne
xor
fcompl
jne
rcrl
sarb
adc
xchg
ret
inc
push
dec
dec
jg
xchg
stos
pop
ret
aas
aad
push
xchg
arpl
mov
xchg
and
js
fwait
or
jecxz
sahf
ret
push
xchg
scas
inc
sub
inc
outsl
mov
iret
pop
rol
int
ja
jg
jnp
sarl
insb
divl
subb
outsl
cmp
pop
xchg
addl
dec
in
mov
dec
leave
xchg
xor
insl
push
int3
mov
movsl
inc
fcompl
adc
in
and
ret
lea
stc
lcall
shrl
divb
aam
cmp
xchg
rolb
cwtl
inc
xchg
bound
cmpl
lret
push
cmp
iret
inc
jmp
push
jmp
xor
test
pop
inc
inc
stos
jmp
push
pop
aam
push
orb
imul
push
lret
loope
mov
adc
rcll
xchg
int
rol
jp
js
aas
inc
pop
notb
push
sub
xchg
pop
int3
lret
stos
arpl
les
sbb
fsubrs
sbb
push
decl
ss
xor
daa
addr16
inc
out
int3
jle
fisubrs
rcrl
mov
js
addr16
scas
mov
push
or
es
jmp
cmp
mov
shlb
jns
cmovns
insb
cltd
int
xchg
ljmp
cmp
pop
mov
iret
xchg
xchg
push
outsl
leave
lods
fcmovnu
and
cld
movsl
mov
dec
lahf
fiaddl
pop
xor
sub
mov
mov
insb
ds
icebp
push
pushf
hlt
cmpl
push
cmp
sbb
int
jns
fwait
scas
cs
call
rorl
xor
and
daa
mov
xor
mov
lret
std
mov
aas
fwait
jmp
inc
xor
xor
mov
mov
cmp
sub
outsl
insb
ret
and
ds
shr
xchg
or
mov
mov
clc
mov
xor
test
mov
xor
popf
cmp
icebp
les
mov
or
xchg
mov
imul
xchg
sbb
mov
cmp
jns
aas
out
mov
lret
cmpsl
lret
pop
jecxz
push
loope
xor
adc
mov
mov
out
sahf
cwtl
pop
int
fcoml
xchg
das
je
xor
jbe
je
mov
js,pn
int3
outsl
mov
lods
lahf
stos
sub
out
aas
ss
sbb
ret
jbe
adc
push
push
pop
push
mov
lcall
leave
mov
cmpb
cli
lea
xor
mov
lock
dec
pop
inc
xor
nop
cltd
push
ret
lock
jbe
faddl
fnstcw
lock
dec
mov
sahf
pushf
dec
cmp
push
adc
fistpll
push
or
xor
pop
aas
cmpsb
xchg
cld
cmp
test
aas
jl
rcrl
cmp
out
or
data16
sbb
out
push
insl
stos
sbb
xchg
mov
cmpsb
mov
js
push
jge
icebp
jns
arpl
test
xchg
sbb
cmp
add
pop
out
mov
pop
push
enter
pop
lock
popa
lea
cwtl
movsb
cmpsl
repz
fildll
and
sbb
lods
in
icebp
das
ret
xor
xchg
mov
stc
pop
push
mov
sbb
or
data16
jae
fxch
movsb
out
fadds
cmc
adc
mov
xor
xchg
iret
data16
nop
or
movsl
inc
pop
sarl
aad
inc
inc
shrl
enter
mov
push
cmp
sbb
xchg
out
push
insb
in
sbb
fsts
andb
lcall
stos
pusha
jbe
sub
add
sub
addr16
mov
pushf
dec
mov
sub
ficomps
sub
dec
add
mov
adc
mov
mov
mov
xchg
pusha
jne
lcall
xchg
imul
add
decb
sub
nop
pop
xchg
xor
inc
add
cmp
out
and
sub
ficompl
pop
outsb
mov
mov
ss
or
adc
jge
adc
test
aad
mov
and
jp
mov
pop
jl
fs
pop
xchg
jne
mov
in
loopne
subb
add
and
call
inc
icebp
inc
push
mov
call
mov
rcll
sub
mov
repz
mov
mov
push
fldt
test
dec
aaa
xchg
mov
xchg
clc
push
add
out
or
ja
rol
mov
movsl
leave
inc
lds
testl
jae
pop
sbb
pop
jmp
sub
cmp
add
push
jg
cmp
or
pop
push
fwait
and
pop
sub
repnz
aad
mov
rol
mov
sbb
and
jbe
xchg
add
fs
inc
push
sbb
fstl
imul
cmpsl
insb
pop
shl
adc
imul
xor
test
aam
sahf
xchg
repnz
fidivrl
and
cli
push
lcall
mov
in
sbb
add
jge
addr16
jbe
or
sbb
fsubs
lods
arpl
dec
add
jns
adc
cli
bound
mov
popf
aas
test
or
xchg
jb
mov
jg
out
adc
out
hlt
popf
jg
int3
lcall
and
test
jo
cmc
add
push
push
popf
add
cmp
mov
lock
adc
jg
pop
mov
fmull
shrb
fsubrs
bound
in
js
adc
push
mov
aad
nop
cmp
lcall
or
sub
sti
movsb
push
push
and
xchg
dec
icebp
jno
out
icebp
jecxz
xchg
pop
or
outsb
les
jle
adc
mov
das
rolb
sbb
push
shll
flds
jge
sbb
mov
shlb
outsl
jb
scas
lds
dec
enter
inc
sbb
push
enter
xchg
inc
mov
int3
repz
shll
mov
push
or
das
lcall
xchg
dec
cmpsb
scas
in
fimull
out
cwtl
mov
add
movsb
std
outsb
call
pop
mov
pop
push
inc
leave
mov
cmp
xchg
adc
mov
cwtl
cmpsl
cmp
jo
cmp
and
add
xchg
pop
dec
push
popa
sbb
push
loope
inc
fcomp
and
inc
daa
call
fsubrs
out
xor
jne
sub
rclb
mov
testl
ret
fmuls
pop
fsub
adc
in
sbb
jl
inc
inc
loopne
add
fldcw
sub
divb
aad
mov
adc
mov
mov
ss
add
or
jl
sub
das
mov
fildll
jae
fwait
jne,pn
xlat
push
jmp
in
sbb
arpl
fs
es
imul
aam
adc
mov
dec
iret
or
lret
mov
scas
adc
stc
xchg
dec
push
aad
inc
add
cmp
xchg
cmp
iret
push
stos
mov
sbb
adc
sub
pop
sti
mov
adc
hlt
cs
lcall
mov
mov
or
dec
int3
mov
stc
pop
cltd
pop
mov
incl
mov
pop
call
cmp
popa
imulb
pop
sub
fidivrl
xchg
jmp
inc
fmuls
dec
jl
sub
sbb
lret
sbb
and
xchg
and
and
shl
sarb
popa
mov
add
mov
pop
mov
and
mov
mov
xchg
rcll
pop
pushf
loopne
cmp
push
lds
int
xor
nop
inc
stc
gs
negb
pop
or
fimuls
scas
outsl
stos
test
inc
int3
insb
cltd
in
xor
sar
jmp
mov
mov
lret
ret
shr
sbb
mov
mov
in
adc
xchg
dec
pop
cwtl
mov
sub
mov
jecxz
test
xlat
push
mov
inc
lods
jl
jge
dec
dec
out
sbb
sbb
ss
and
jl
mov
xlat
hlt
inc
and
fdivrl
std
fsubrp
out
rclb
pop
add
mov
stos
scas
jge
sbb
in
adc
lahf
addr16
xchg
icebp
lahf
xchg
loop
dec
jle
adc
cs
fcomps
ret
cwtl
cmpb
mov
sub
pop
jb
pop
or
pop
lahf
retw
jae
in
jg
mov
shlb
js
mov
cmpsb
add
ret
in
and
cwtl
push
cmp
dec
into
sbb
negb
jl
and
inc
and
add
push
add
xchg
aad
and
cs
es
push
inc
fnclex
aam
mov
mov
mov
push
mov
das
sub
xor
js
aas
loopne
dec
gs
ja
stc
mov
movsb
xor
lcall
push
addr16
lods
and
fsubs
adc
rcrb
aas
ljmp
hlt
cwtl
ja
leave
or
shr
in
inc
xlat
in
inc
mov
and
jne
xor
xchg
mov
sahf
xchg
test
je
xorb
sbb
cmpsl
xor
hlt
push
nop
cmp
cmc
gs
mov
cmp
cmp
adc
mov
pop
dec
mov
sahf
lea
dec
cmp
push
mov
mov
jle
push
jo
shlb
dec
and
cmp
out
iret
dec
loop
test
mov
mov
lock
or
sahf
adc
xchg
test
cmp
push
pop
nop
nop
push
mov
cmp
pop
push
out
mov
dec
sub
xor
rcrb
push
jo
movsb
aaa
fstps
xorb
pop
pop
jge
jecxz
pusha
stos
mov
jl
xchg
rcll
scas
icebp
sub
jb
add
movsb
or
or
jne
push
ljmp
add
mov
push
xorb
test
xchg
xorb
ljmp
pop
nop
jns
aas
ret
cwtl
xchg
popf
inc
mov
stos
push
sbb
icebp
sbb
lods
pop
rolb
iret
jns
push
mov
das
inc
lock
insl
test
mov
lock
shll
mov
add
cmc
sbb
xchg
mov
dec
mov
push
inc
out
xchg
inc
mov
pushf
stos
xor
sete
gs
cmp
clc
and
gs
xchg
loopne
mov
xchg
inc
popa
mov
push
fadds
mov
push
fistl
and
int3
adc
les
cmp
cmp
cmp
out
cmc
xchg
mov
cmova
add
fneni(8087
je
sbb
dec
fs
or
cmp
xchg
sarl
add
cli
aas
cmp
popa
jnp
scas
and
lods
bound
push
xlat
out
dec
xchg
insl
push
repz
xchg
xchg
cmp
lods
ss
xorl
pushl
inc
lcall
pop
daa
dec
vmovdqu
aad
lods
jmpw
adc
stc
dec
popa
stos
movsl
call
icebp
cmp
gs
cmp
xor
jmp
iret
mov
je
in
clc
cmpsl
js
xor
push
jns
iret
sti
cmp
and
stc
xor
xchg
loop
jecxz
add
push
fs
shrl
movntq
out
inc
in
and
and
or
repnz
inc
pushl
sbb
addb
lds
fdivrs
scas
and
push
adc
push
int3
sbb
or
paddq
or
rclb
inc
or
lret
adc
and
orb
mov
dec
pop
xor
lret
scas
popa
mov
sti
mov
cmp
mov
in
dec
call
lock
test
sub
sti
jo
call
mov
test
pop
jge
mov
push
add
test
orb
mov
pop
dec
sub
daa
and
mov
or
clc
js
pop
out
loopne
dec
adc
cmpsl
jno
movsb
insb
jo
shll
mov
gs
movsl
jbe
fcoml
mov
das
aaa
rcr
mov
test
mov
inc
fdivl
das
out
dec
into
ret
int
vsubpd
fld
inc
dec
rcl
mov
push
adc
sarb
fistpl
cmp
das
insl
inc
mov
out
push
xlat
dec
js
loop
sub
scas
daa
dec
push
mov
lea
hlt
mov
mov
int3
shrl
pop
leave
mov
mov
jns
mov
mov
int3
and
fldt
rol
repz
scas
xchg
loopne
rcr
jmp
sub
outsl
aam
jmp
cltd
sub
rclb
cwtl
mov
sarl
jmp
push
cli
or
sbb
insl
popa
mov
and
repnz
rorb
jecxz
push
fwait
imul
lahf
and
mov
jbe
ficoml
loopne
push
jae
pop
push
jo
andl
xchg
push
lahf
lahf
lret
test
push
mov
push
xor
hlt
dec
or
pop
fistps
aam
shrl
inc
mov
push
out
jno
das
sub
sbb
pop
push
insl
lock
jb
push
mov
fstpt
pop
fsts
aam
dec
arpl
cmp
mov
out
bound
pop
pusha
jbe
jae
jp,pn
cltd
xor
test
or
mov
xchg
loopne
fcom
pop
rcl
imul
sub
repz
jl
ljmp
adc
aas
data16
push
and
mov
fists
fmul
shlb
cmp
aaa
add
outsl
sbb
cltd
or
sarb
and
sbb
into
aaa
jae
cmp
fucom
lahf
stc
addl
cmpb
cmpb
hlt
fcmovnb
jmp
xor
mov
cli
insl
dec
xchg
mov
xchg
mov
mov
inc
mov
xchg
outsb
pop
jns
mov
jne
push
sbb
xor
push
fmuls
push
mov
out
dec
movsl
out
pop
popa
add
clc
add
shlb
int3
and
mov
pusha
aas
mov
clc
cvtpi2ps
add
jl
lock
mov
cmp
mov
bound
pop
jge
mov
pop
int3
mov
xchg
test
pop
mov
ret
adcl
ret
nop
xorb
push
bound
out
pop
sub
xchg
lret
outsl
mov
popa
cmp
mov
out
push
test
jno
in
jl
jae
movsb
dec
sub
push
or
mov
leave
pushf
mov
mov
lods
sub
inc
jl
xor
rcrl
push
mov
or
pop
daa
adc
mov
or
stos
sub
in
dec
mov
inc
mov
popa
mov
loope
sbb
fs
roll
dec
mov
add
pop
ljmp
sbb
out
mov
jp
xchg
jno
xchg
push
jl
sub
cmpsb
or
dec
push
cs
insb
mov
aad
cmc
inc
outsb
xor
iret
cmpsl
in
stc
lock
test
sbb
clc
js
lahf
clc
fdiv
dec
push
adc
dec
cmp
xchg
xchg
shr
jae
test
loop
and
lods
or
ss
mov
mov
loope
mov
fisubrs
add
inc
out
sbb
jle
dec
pop
mov
je
call
sub
dec
add
jae
stc
scas
test
and
xchg
cmp
sub
ljmp
fbld
in
pop
nop
pushf
cmp
xchg
ss
fisubrs
jbe
cli
add
jae
sbb
xchg
push
inc
test
cmp
sub
adc
nop
leave
jns
or
mov
aad
mov
in
sub
aas
push
jno
pop
add
jle
add
jno
jbe
hlt
pop
fidivrs
int3
daa
push
es
dec
lea
sub
mov
loope
adc
xor
enter
rcrl
xchg
rcll
add
and
call
xor
inc
jb
adc
insl
lret
adcb
mov
rcll
das
out
cmp
jg
fwait
cmpsl
mov
sbb
mov
movsl
nop
lea
mov
jl
sbb
aam
nop
jbe
mov
xor
xchg
lods
push
push
bound
fsts
inc
add
movsl
xchg
mov
leave
and
insl
pop
jb
mov
or
dec
leave
sbb
add
xor
xchg
gs
push
jg
push
xchg
or
or
int
mov
mov
sar
clc
push
and
popf
mov
test
insl
cmp
mov
imul
pop
shrb
lahf
cli
dec
cld
ror
and
push
xchg
cmp
shrb
sbb
pop
jne
jbe
xor
cmpsb
test
mov
ljmp
mov
ds
sbb
inc
sbb
jno
sub
jbe
lods
add
pcmpgtd
scas
sqrtps
dec
hlt
mov
pop
lock
sarl
testb
adc
popf
ret
fidivl
adc
xchg
sbb
xor
std
orb
push
cwtl
mov
movsb
mov
push
mov
lods
movsl
sub
sbb
pushf
jecxz
dec
sub
pop
fcmovnbe
ret
fisttps
adc
sti
fldenv
or
cmp
aas
inc
pop
cmp
mov
adc
pop
inc
jno
jp
roll
lcall
lock
js
push
pop
cwtl
cwtl
mov
adc
leave
mov
sbb
sub
jns
push
pop
lock
pop
pop
mov
pop
mov
std
inc
xchg
mov
or
cmp
sbb
pop
pop
or
enter
pop
leave
dec
les
jmp
jb
mov
push
cmovge
xor
mov
pop
mov
and
jbe
sub
mov
xor
push
or
pushf
mov
inc
lock
loopne
jb
ret
jmp
fwait
cli
fst
cmc
lods
ss
inc
pushf
push
add
stos
push
lcall
fcmovnb
mov
and
inc
mov
push
mov
pusha
or
mov
push
jo
sbb
xor
cwtl
lods
fists
hlt
and
lods
aam
add
dec
cld
xlat
in
cli
mov
push
sub
jmp
mull
and
cmp
in
xchg
pop
in
mov
dec
out
mov
push
push
xor
sbb
pusha
inc
xchg
out
gs
sarl
fld
jg
ja
test
cmp
and
es
xchg
std
call
scas
aam
not
adc
ds
jb
mov
mov
jle
popf
idivb
leave
cmp
sti
jae
test
lea
cmp
iret
mov
mulb
popf
sub
xor
dec
mov
sbb
push
imul
pop
jne
das
sarl
cmp
xor
add
xor
fcmovbe
mov
dec
cmp
and
pop
adc
leave
test
mov
sbb
pop
je
inc
xchg
pinsrw
jl
xchg
push
xchg
dec
xchg
popa
mov
xchg
in
fs
inc
cmp
push
insl
gs
fcomps
dec
in
xor
pop
jb
popa
out
cmpsl
shll
iret
adc
sbb
fstpl
jle
add
pusha
xchg
sahf
push
ds
inc
dec
jo
insl
rcr
or
mov
lea
push
jne
pop
adcl
sbb
jbe
nop
aaa
loope
add
or
inc
ficomps
push
arpl
repnz
pop
or
int
fprem
imul
pop
leave
jne
lods
xchg
dec
jg
int3
ficomps
divb
int
dec
sub
std
sbb
in
push
inc
cmpl
js
notb
aad
or
fidivrl
xchg
sbb
xchg
gs
mov
clc
mov
pop
lret
inc
dec
adc
sub
lods
pop
ds
iret
clc
mov
aam
mov
sbb
movsl
arpl
sub
mov
xor
pop
mov
cmpsb
or
dec
icebp
pushf
xorl
cmp
cmpsb
cltd
repnz
mov
int
and
arpl
xor
or
cmp
add
mov
cmp
es
inc
popf
imull
lret
scas
mov
out
xor
push
std
decl
inc
imull
sub
xchg
out
push
pop
fnstenv
xor
mov
cmp
dec
inc
loop
push
pop
cmpsl
mov
inc
loop
fwait
jnp
mov
or
push
cwtl
sbb
dec
ljmp
cmp
movsb
adc
in
cmpsl
push
lret
mov
pop
mov
push
mov
jnp
stos
lods
jmp
mov
loopne
imul
adc
inc
pop
movsl
xor
cwtl
stc
sbb
pusha
iret
pushf
xor
dec
stos
jecxz
andb
jae
or
repnz
jg
mov
mov
and
sbb
mov
in
fdivl
push
mov
lret
jne
pop
mov
mov
out
and
rclb
enter
mov
cli
shrb
lods
adc
xchg
sbb
xor
and
cmpsl
outsl
pop
cmpsl
push
jp
test
sub
call
mov
subl
push
inc
movsb
mov
sub
inc
jg
sub
and
call
and
mov
or
mov
push
lahf
mov
call
mov
aas
sub
jl
gs
and
mov
jbe
inc
je
orb
adc
push
jo
cld
mov
sti
mov
sti
popa
pop
scas
mov
mov
fsubl
imul
into
inc
daa
add
rcll
shlb
mov
mov
ljmp
sbb
roll
data16
inc
pop
add
sbb
push
test
stos
pop
nop
pop
test
mov
out
lret
pop
jbe
popf
lret
push
fistpll
lahf
gs
sbb
jle
lret
shrl
xor
mov
jbe
cli
movsb
jecxz
push
add
and
daa
scas
aas
mov
in
mov
push
lock
mov
loope
inc
pusha
cmp
sbb
cli
lods
mov
imul
push
inc
push
pop
fsubp
out
mov
xchg
or
pusha
jmp
mov
ror
cwtl
xchg
adcl
push
scas
cmpsl
sbb
mov
and
xor
mov
iret
xor
fcompl
ret
cmp
lahf
inc
fnstcw
fists
inc
inc
and
pop
cli
lds
push
inc
lahf
jmp
clc
mov
mov
sub
push
cmp
stos
std
mov
sbb
aad
push
dec
inc
cltd
dec
cmp
jl
pop
popf
pushf
insl
sbb
imull
pop
add
int
jle
jmp
dec
jle
jb
inc
inc
mov
jbe
jb
cmp
xor
cltd
mov
out
pop
sub
inc
dec
or
lods
xchg
cltd
cmp
sub
fisubrl
jg
pushf
stc
les
cmp
mov
fistl
sub
cmp
fisttps
or
outsb
xchg
push
pop
rcll
pop
ss
push
aaa
in
mov
stos
and
iret
inc
xlat
fmul
aam
mov
jae
fsubs
rcl
repnz
fsub
mov
mov
mov
adc
mov
push
sbb
and
xchg
adc
lea
bound
int
mov
pop
pop
mov
push
pop
jo
aaa
sbb
pop
sbbb
pop
insl
ljmp
xlat
gs
mov
xchg
push
loope
and
les
inc
mov
or
sub
ds
dec
push
mov
sti
jnp
imull
mov
imul
sub
orl
mov
ds
push
icebp
mov
and
mov
ljmp
inc
push
outsl
mov
fs
outsb
insb
movsl
shrb
inc
int
rcll
inc
dec
jge
mov
inc
mov
mov
cmp
lods
pop
into
xchg
push
jecxz
inc
push
fnstsw
into
shr
cmp
mov
mov
pop
pusha
add
mov
bound
int
push
dec
jle
rolb
movsl
mov
pop
push
jbe
stc
and
add
xchg
movsl
and
xor
mov
mov
jl
inc
jns
cmp
jecxz
add
fmuls
aas
daa
mov
xchg
push
vfrczsd
jnp
popf
insb
pop
xor
push
stc
jne
sbb
std
cmpsl
and
ret
insl
push
sub
inc
loop
sbb
bound
or
dec
and
or
mov
movsl
fmul
inc
mov
mov
pop
leave
adc
test
or
rol
jmp
dec
push
ficoms
sbb
in
jge
jge
inc
vpaddsw
adc
stos
lret
and
ret
jo
push
call
imul
aad
mov
inc
sbb
adc
imul
lahf
pop
pop
inc
add
popa
mov
inc
jmp
fnstenv
dec
xchg
in
nop
popf
or
and
sarb
hlt
cmpsb
xor
insl
xor
sbb
mov
mov
dec
lcall
es
inc
gs
iret
xlat
pop
aam
movsl
push
add
push
mov
mov
add
push
or
and
loopne
lret
and
or
xor
out
inc
push
cmc
inc
repz
aaa
mov
js
std
adc
adc
or
push
jne
cmpl
cltd
xchg
jbe
fidivrl
outsb
pop
lods
mov
pop
xchg
inc
jg
dec
jb
sub
sbb
jo
bnd
mov
dec
jg
int
arpl
mov
pop
pop
mov
popa
inc
or
jle
scas
inc
xor
mov
bnd
and
stc
lods
imul
jl
or
inc
jmp
add
icebp
roll
jle
push
jle
jns
sbb
xchg
pop
jns
inc
and
pop
test
imul
inc
loopne
out
lds
cli
push
pop
mov
sub
lcall
add
es
cmp
std
flds
imul
imul
sub
xchg
fbstp
call
mov
and
les
xor
push
inc
das
cmpsl
enter
aas
adc
cmc
call
and
push
fabs
sub
vpunpckhdq
adc
js
mov
xor
ror
xchg
inc
repnz
xchg
out
inc
test
xchg
adc
cmc
xor
daa
pop
pop
mov
stc
and
pop
push
lods
insl
stos
and
xlat
add
xlat
je
out
jno
add
mov
mov
lods
aad
js
sub
and
sbb
pushf
cmpsl
add
lcall
fdiv
pusha
cld
push
add
outsb
sbb
stos
and
sub
test
fsubrs
jae
sub
xlat
mov
jp
fs
mov
ret
lret
push
lret
frstor
fimull
jbe
dec
mov
outsb
scas
addr16
test
loopne
adc
into
jns
pop
scas
jo
mov
movsb
daa
mov
lret
in
xchg
rep
inc
inc
adc
mov
in
gs
inc
jl
je
addr16
xor
dec
cmc
xchg
xchg
ljmp
movsl
and
sbb
loop
or
jno
xor
ss
sub
ret
pusha
sub
jecxz
mov
xchg
aad
or
stos
lods
or
out
out
ret
pushf
faddp
std
inc
lock
test
repz
sbb
insl
fisubl
int
mov
fwait
mov
sbb
dec
arpl
imulb
sbb
pop
aaa
fists
and
cmc
mov
into
in
mov
sbb
fdiv
mov
mov
cmpsb
fsqrt
insb
mov
jo
gs
push
mov
fs
ficompl
sub
xchg
rcll
es
in
jle
xor
das
imul
incl
pop
adc
lret
or
cli
xlat
mov
les
push
adc
ja
loope
push
nop
mov
push
imull
sbb
fists
adc
sub
dec
cmc
lahf
cwtl
lahf
and
pop
fyl2xp1
jl
repz
mov
mov
arpl
inc
mov
ja
jns
dec
or
sub
adc
or
mov
cmpsb
jo
pop
pop
sub
mov
subl
cmp
sti
insl
sbb
cmpsl
mov
mov
mov
cmp
sbb
mov
and
cmpsb
push
and
or
mov
into
popf
sub
cmpsl
int
rorb
ds
mov
xor
xchg
lahf
les
add
mov
rcl
nop
nop
enter
sbb
or
stos
test
notl
push
repnz
mov
adc
les
jns
ret
ds
lods
cmpsl
and
xchg
push
pop
fnsave
mov
into
icebp
sbb
push
out
lea
inc
fs
loopne
lods
jmp
out
cmc
insl
add
mov
sbb
and
popa
cmp
mov
jge
inc
push
jmp
inc
or
es
cmp
adc
test
nop
jl
test
daa
adc
mov
inc
mov
ror
bound
subl
adc
mov
cmpsb
sbb
jnp
lods
out
add
mov
xor
loop
lret
in
inc
add
int
xor
call
xor
add
sbb
mov
dec
push
test
test
scas
fdivl
dec
int3
cmp
pusha
dec
pusha
scas
xor
sti
cmp
ret
movsl
inc
rcl
adc
gs
push
dec
test
negl
repnz
out
in
jle
inc
rcl
adc
xorb
jbe
sbb
out
jmp
aaa
scas
incb
mov
sbb
arpl
push
sub
in
inc
sub
rcll
add
jl
lods
xchg
fdecstp
pop
or
mov
lods
jnp
mov
cwtl
sub
out
dec
mov
xor
lock
cltd
mov
xor
cmc
jae
rcrl
ficoms
idivl
xchg
ja
xor
mov
xor
mov
xchg
dec
int3
adc
or
cmc
daa
je
leave
mov
popa
cmp
mov
push
inc
cmpsb
and
lret
je
xchg
add
lea
push
imul
add
xchg
mov
add
and
andl
push
aam
inc
push
fiadds
outsl
xchg
dec
mov
jmp
adc
mov
aas
or
adc
fldcw
iret
and
and
cmp
cmp
in
pop
push
inc
pop
aam
mov
pushf
ljmp
out
inc
rcrl
divb
dec
sub
ds
cmp
jae
ss
adc
mov
scas
shrl
int
pop
cmp
pop
daa
lds
pushf
pop
loopne
mov
jb
in
mov
rorb
adc
lahf
mov
leave
lret
fcompl
xchg
push
mov
push
mov
cmpsb
xor
cmp
pop
les
inc
cmpsl
mov
fisubs
movsl
lock
fcompl
sbb
ret
add
jge
stc
dec
pop
clc
jp
mov
jnp
shrb
push
mov
mov
imul
add
fildll
cld
inc
add
mov
repz
mov
bnd
jecxz
insb
mov
pop
adc
cmp
mov
dec
pop
lds
addr16
es
xchg
fisttpll
imul
jp
ss
dec
cmp
adcb
adc
xchg
cmpsb
ss
and
sbb
lods
gs
mov
lcall
inc
repnz
cli
push
les
sbb
jb
xor
mov
les
mov
into
repz
mov
lret
ficomps
jo
bound
lahf
scas
es
dec
daa
mov
push
mov
movsb
lock
mov
aad
neg
int3
dec
adc
loopne
pop
sbb
aas
cmp
mov
iret
outsl
cmp
sub
repz
sbb
push
cmp
mov
fldcw
and
mov
out
sbb
out
xor
and
mov
inc
mov
es
rcrb
add
jbe
cmp
repnz
adc
das
aad
lret
or
test
mov
jmp
inc
jne
ljmp
cmp
cltd
ja
sbb
cs
in
mov
outsl
rclb
cmp
add
shlb
dec
jg
mov
std
cmpsl
out
loopne
xchg
lods
lret
cmpsl
insb
ja
adc
lock
rcrl
dec
pop
jge
enter
sbb
out
fwait
or
cmpl
stos
lahf
sahf
add
lret
sub
pusha
lock
mov
test
fstpt
data16
fimull
cmp
mov
sti
enter
lret
int
inc
fldcw
and
test
daa
testl
call
push
or
call
es
push
adc
fildll
lahf
je
pop
cmp
iret
cld
sub
cmpsb
push
outsb
jl
ret
pop
jg
mov
test
sub
fs
xchg
inc
mov
fs
push
ss
fmuls
jmp
sub
icebp
inc
jb
pop
ss
pop
test
push
mov
fldcw
lahf
push
inc
add
xchg
cmp
mov
lret
jne
stos
cmp
sbb
cmpsb
cmp
adc
mov
js
dec
sub
and
sub
xchg
push
mov
pop
loop
jmp
mov
mov
imul
and
ds
jno
inc
in
addr16
push
push
call
cltd
pop
sahf
hlt
xchg
jb
filds
cmp
xchg
ljmp
adc
rcr
ret
push
popf
test
dec
fmuls
fisttpl
dec
lahf
mov
aas
pop
dec
loop
pop
movsb
push
insb
mov
sahf
mov
push
mov
adc
imul
les
imul
xchg
lcall
ss
insb
xchg
add
imul
rolb
ja
pop
daa
fcomip
hlt
cmp
jg
xchg
std
xor
ret
sbb
fs
lret
pop
cli
outsb
int
fisttps
mov
xchg
sti
rorb
xchg
or
aam
sub
inc
das
in
xor
jmp
dec
adc
data16
out
in
and
rcll
push
mov
mov
cmp
mov
into
add
ss
mov
xor
aaa
add
xchg
stc
cmpsb
cs
ret
adc
mov
mov
jl
loopne
cmp
or
iret
push
mov
or
lahf
mov
imul
adc
daa
jg
pop
shll
mov
jg
inc
sub
mov
jmp
mov
into
lret
mov
or
add
or
hlt
hlt
ficomps
fadds
jno
jle
lahf
fs
insb
sti
xchg
mov
test
lods
out
push
inc
cwtl
mov
push
push
arpl
es
out
xor
sbb
add
jmp
dec
mov
mov
pop
jae
ljmp
add
xchg
pop
mov
jmp
sti
pop
mov
test
sbb
sarb
and
mov
xchg
stos
add
push
insb
mov
jl
cmp
ljmp
lock
cwtl
fs
repz
pop
xchg
in
pop
inc
sbb
and
test
mov
xlat
xor
or
sub
fdivl
and
inc
imul
in
out
rorb
pop
inc
adc
outsb
mov
cmp
jmp
test
into
dec
arpl
inc
pop
adc
fs
xchg
decb
pusha
cmc
dec
insl
iret
cltd
ret
mov
sbb
xchg
push
pop
inc
sbb
shll
dec
cltd
lods
insb
bound
inc
and
sbb
dec
jae
fnstenv
aas
and
xchg
push
enter
push
jecxz
dec
mov
sub
add
xchg
aad
push
push
mov
pusha
popa
bound
pusha
adc
jae
cmpsl
outsb
inc
and
sub
sub
jecxz
bound
sub
lods
pop
cld
mov
sub
or
push
mov
adc
mov
push
scas
insb
lahf
fdiv
mov
add
shlb
add
outsb
jg
in
pop
or
xor
add
in
adc
cli
dec
rclb
std
mov
push
push
mov
pop
or
xor
inc
push
mov
mov
sti
mov
xchg
popa
mov
movsb
jmp
push
cmp
push
cmpsb
mov
jne
xchg
mov
or
lahf
inc
mov
out
testb
sub
andl
pop
pop
inc
xchg
mov
lahf
sahf
addl
sbb
sbb
jg
jg
dec
lahf
fmuls
mov
lret
scas
mov
xor
mov
int
pop
fcomp
push
add
sbb
or
stos
pop
jmp
and
adc
into
cmc
mov
xor
jo
shlb
mov
clc
xor
cwtl
xor
cmp
xor
frstor
into
or
cmc
cltd
mov
pop
mov
outsb
in
push
mov
jb
xor
mov
dec
in
or
mov
inc
popl
movsl
adc
sub
cld
mov
sbb
push
dec
sbb
mov
mov
jae
xor
repz
jnp
push
add
inc
mov
jmp
adc
cmp
push
pop
mov
inc
dec
or
fstpl
cmpsb
cs
xchg
pcmpeqw
insl
or
mov
mov
xor
loop
pushf
mov
jno
dec
out
das
mov
in
ret
out
or
cld
ljmp
pop
das
repnz
lods
pop
push
push
into
cmpsl
shll
mov
and
pushf
mov
or
adc
xor
add
das
inc
xchg
xor
cwtl
std
push
cwtl
mov
js
lret
sbb
lret
or
jae
dec
scas
mov
testb
imul
out
add
aas
ds
stos
sbbl
mov
adc
int3
adc
add
fisubs
int3
sbb
rorb
std
sbb
movsb
sub
stc
int3
in
mov
add
dec
xchg
jb
rep
mov
outsb
loope
sub
jns
je
pop
jecxz
stos
push
int
adc
test
sub
mov
or
mov
idivb
lahf
mov
jle
int
xchg
push
push
jne
add
push
in
mov
inc
pop
mov
and
cmp
call
das
pop
xchg
lods
shl
inc
lahf
xchg
ljmp
push
inc
arpl
xor
and
fisubl
add
mov
cld
add
push
addr16
pop
adc
xorl
cld
insb
mov
adc
cmp
pop
sar
out
sub
in
dec
inc
mov
int
push
sarl
xchg
rol
out
ror
xor
sbb
pop
aad
cmp
xorl
jnp
repz
mov
lock
popf
mov
addr16
orb
jmp
sub
inc
and
push
cwtl
sbb
dec
mov
xlat
or
fs
call
jg
mov
insl
cmpsb
nop
mov
pop
mov
hlt
out
mov
xlat
jmp
inc
jae
inc
ss
cmp
xchg
add
dec
in
pop
popaw
nop
jne
pusha
lcall
lods
push
ds
lea
in
cmpl
loope
pushf
sbb
jmp
push
jns
xor
test
roll
adc
jbe
aad
fisubrl
or
testl
mov
shlb
out
push
push
loopne
fimull
pushf
jns
cmp
xor
sbb
mov
sbb
loopne
inc
or
invd
movsl
movsl
dec
out
ret
out
jl
sbb
add
clc
jge
jge
rclb
jb
test
jb
mov
and
mov
adc
ret
inc
movsb
pop
sub
es
cwtl
aad
add
icebp
jge
insb
vlddqu
and
xchg
cwtl
push
ret
inc
mov
jb
pop
pop
fisttps
cwtl
hlt
int3
jns
outsw
push
lahf
test
sahf
push
cld
mov
jno
dec
or
fildll
pop
pusha
dec
jno
lods
cli
mov
cmp
in
aam
fwait
mov
loopnew
lods
mov
or
shlb
adc
stos
aam
push
negb
fs
in
sbb
jmp
popa
ret
nop
lret
dec
aad
push
and
or
push
add
cmp
push
cs
lods
mov
jmp
xor
mov
cld
xchg
or
inc
xchg
lcall
mov
adc
mov
insb
movsl
pusha
inc
fdivrs
mov
lret
cmp
cmp
dec
lret
jmp
adc
insl
xor
int
push
ficompl
gs
mov
sbb
in
cmp
nop
sbb
and
shlb
stos
pop
subl
jne
mov
cmc
push
cmpsl
pop
jle
cmp
iret
lods
jnp
jne
push
sbbl
lret
adc
xchg
int
shrl
in
sub
inc
inc
dec
dec
push
xor
mov
aas
push
xchg
cmp
xchg
jnp
sub
cltd
movsb
shlb
inc
jns
fildll
push
popa
fildl
cli
jmp
mulps
popf
icebp
and
ja
dec
cwtl
jp
mov
jg
loopne
cltd
mov
adc
cmp
xchg
adc
pusha
out
iret
mov
ret
hlt
jecxz
test
lods
outsl
movsl
mov
mov
pop
fwait
imul
int3
out
sub
pop
fwait
lods
loope
cld
adc
mov
and
movsb
cmpsl
push
lret
lret
lods
and
add
repnz
leave
xor
add
in
fdivl
mull
pop
icebp
sti
mov
cmpsb
aaa
lock
hlt
push
mov
out
mov
push
add
inc
push
mov
stos
inc
outsl
aad
je
jns
and
sbb
mov
arpl
mov
fdivs
rorb
daa
push
push
push
insb
xor
cmpsb
in
cmp
add
inc
int3
imul
jbe
xor
push
jl
mov
pop
cltd
xchg
imul
xor
adc
icebp
push
addl
push
mulb
stc
cmp
sbb
sbb
jno
lahf
sar
js
dec
das
js
andb
nop
pop
loope
push
pusha
mov
loop
pop
adc
lea
jbe
mov
mov
outsb
dec
pop
daa
ja
cmpsb
push
in
inc
orl
loop
shrb
or
mov
cmp
pop
xchg
lret
jno
cmc
out
push
add
mov
sub
stos
cld
rcrb
jb
pop
ret
testl
shll
mov
stos
fsubrl
pop
sub
loopne
popa
cmpsl
idivl
pop
leave
inc
xchg
sub
mov
repnz
inc
gs
push
jae
sub
push
shll
jnp
or
clc
jno
and
fstps
pop
scas
scas
push
popf
mov
jbe
push
les
or
decb
sbb
inc
add
fs
dec
stos
js
sub
mov
cmpsb
xchg
add
fcmovu
dec
imul
lcall
cmp
cmp
sarl
cmpsb
data16
dec
data16
insb
lds
in
lods
lods
pusha
mov
in
push
sbb
imul
hlt
sub
es
push
or
in
add
pop
ficompl
repnz
incl
dec
xchg
movsb
cmc
lret
dec
add
movsl
jbe
mov
jecxz
test
push
enter
mov
addr16
fld
inc
jae
mov
pop
xchg
xchg
cmpb
cwtl
andl
das
aas
cli
call
cli
icebp
pop
addr16
addr16
out
cs
push
in
sub
into
inc
dec
jge
xchg
add
in
pop
lds
clc
das
push
jno
cld
push
bnd
mov
sub
stc
jecxz
dec
js
sub
cmp
scas
pusha
mov
inc
mov
sbb
sbb
addr16
mov
add
sti
jbe
bound
pusha
fbld
inc
in
stos
add
cmpsl
out
frstor
mov
adc
hlt
sub
outsl
inc
outsb
and
dec
dec
sub
xchg
fists
sub
xlat
shlb
push
jg
scas
pop
nop
aas
pop
in
cmp
subb
mov
shlb
jp
mov
add
or
sbb
pop
or
xchg
mov
pop
and
pop
lods
mov
pop
add
push
hlt
outsl
mov
in
out
outsb
lods
outsl
sti
lret
pop
mov
jne
xchg
mov
fbld
es
xchg
xchg
stos
fisttpll
outsb
jecxz
repz
dec
addr16
mov
orb
das
adc
mov
push
insb
sbb
aad
ss
xchg
mov
lock
dec
add
iret
test
iret
call
push
mov
insb
bound
jmp
xchg
movsb
mov
movsl
dec
mov
mov
mov
clc
std
or
and
inc
xchg
dec
push
pop
outsl
cmpsl
nop
jmp
aam
mov
ds
shlb
sbb
pop
mov
or
cmpsb
in
dec
ret
push
icebp
xchg
xor
das
dec
je
gs
cwtl
cmpl
cmp
sbb
jge
sub
loopne
cli
adc
popl
xor
mov
sbb
fisttpll
mov
xor
and
into
push
push
out
inc
das
imul
test
fwait
repnz
pcmpgtb
pop
mov
xchg
cltd
push
enter
fdivrs
adc
test
xchg
inc
jnp
sbb
sbb
fsubrl
sub
shrl
jnp
pop
cmp
adc
xchg
pop
mov
test
inc
sbb
xlat
xor
or
cmp
lods
and
rol
insb
xor
sub
nop
add
test
lret
out
sbb
jne
mov
mov
pop
out
dec
dec
hlt
mov
arpl
daa
jne
cmp
push
cmp
fldl
cmp
or
aaa
sti
divb
add
lret
cld
sub
lcall
add
cli
lcall
push
push
push
push
mov
lahf
shlb
jecxz
lret
sbb
lcall
dec
push
cmp
test
pop
stos
ret
inc
insb
add
sub
fsubrs
mov
add
mov
and
andb
push
fisubrl
cmpsb
call
repnz
cld
les
aas
lcall
or
and
mov
fcompl
sbb
mov
jmp
jmp
dec
mov
push
lods
stos
in
add
out
mov
dec
lds
loopne
es
add
xchg
loop
enter
fldt
fchs
sahf
shll
jmp
push
mov
mov
ret
or
shll
xor
daa
mov
xchg
pop
dec
sti
dec
or
scas
fnstsw
fadds
inc
mov
and
push
aas
sub
dec
sahf
lea
dec
clc
mov
aaa
pop
test
out
pop
or
nop
ds
ret
lods
mov
pop
test
js
shll
xor
mov
cltd
jg
jb
or
out
aaa
in
mov
cmp
cmp
test
test
pop
aaa
xchg
xchg
repnz
dec
jno
mov
sub
je
in
pop
popa
jmp
stc
or
xchg
sub
clc
sub
sub
arpl
jo
sub
dec
iret
in
call
mov
dec
inc
imul
fisubrl
sti
ret
fisubl
add
jne
mov
jge
in
mov
xor
dec
pop
cmp
sbb
flds
shlb
xor
jp
lea
cmp
mov
ja
jb
insb
lret
mov
xchg
mov
xor
dec
mov
test
inc
xor
je
stos
hlt
or
push
jmp
std
fwait
in
sahf
dec
pop
xchg
jb
jb
imul
pop
inc
ret
testb
call
inc
sbb
addl
cli
xchg
mov
dec
sub
stc
mov
cmp
fwait
mov
rcl
jge
jg
imul
jg
sub
shrl
sahf
mov
jbe
adc
pop
push
aad
jb
cmpsl
fnstcw
fstpl
pop
add
sbb
xchg
pop
sbbl
cmp
xchg
pop
cmpsb
mov
mov
outsl
fs
pop
and
xchg
adc
mov
rcll
mov
mov
ja
leave
sbb
das
fisubrs
add
and
call
inc
repz
loopne
and
daa
adc
push
push
sub
movaps
das
mov
cmp
popf
dec
lret
pop
xchg
popa
mov
in
pushf
xlat
jmp
inc
jae
out
out
cli
mov
sbb
jl
out
mov
add
rcl
cmpsl
fwait
mov
in
jmp
jp
jle
out
push
std
insb
in
repnz
pop
mov
pop
out
repz
or
inc
xchg
sbb
or
mov
ja
pop
mov
mov
bnd
jl
hlt
inc
rorb
insb
sub
imul
leave
cld
fidivs
sub
pop
inc
aas
cmp
sub
or
lret
sub
adc
add
es
in
pop
mov
fbstp
cvtdq2ps
add
inc
add
adc
pop
leave
in
orl
xchg
sub
decl
stos
or
cmp
fdivr
fs
call
addl
nop
aas
pop
or
jae
ljmp
movsb
dec
pop
add
inc
and
jmp
jno
xor
popa
push
cld
dec
out
montmul
cmpsb
inc
inc
mov
scas
test
add
push
inc
in
xchg
fists
mov
vpackssdw
mov
and
stos
cmc
jno
push
lahf
jbe
cmp
repnz
adc
sub
stos
daa
pop
mov
jae
notl
mov
sub
and
sbb
mov
dec
loop
js
dec
mov
or
cmpsl
mov
adc
adc
decl
or
je
cmc
xor
push
jmp
bound
inc
sbb
dec
cmp
js
dec
insl
sti
andb
pop
popf
mov
cmovs
cmp
loop
sub
inc
loop
pop
adc
into
inc
lcall
popf
sub
pop
fstpt
lock
xchg
shlb
imul
push
ror
cmp
frstor
mov
or
rol
dec
cmp
xor
sub
sti
popa
and
cld
sbb
test
mov
in
cs
mov
fistpll
adc
mov
pop
pop
push
xchg
cmp
xchg
fldcw
movsb
repz
mov
rorb
cmp
icebp
sahf
push
jle
in
xchg
ret
in
loop
jge
cltd
movsb
mov
fldt
fldl
pop
pop
lcall
shll
fstpt
movsb
divl
mov
mov
pop
dec
add
aaa
daa
adc
jne
jp
je
cli
ficompl
clc
jae
mov
add
and
into
fistl
popa
jbe
dec
mov
out
mov
js
sub
jecxz
insl
push
add
mov
sbb
push
stos
lret
adc
shr
cmp
mov
xchg
nop
js
repnz
notl
test
repz
notl
cmp
jae
adc
fcmovbe
dec
lock
leave
aaa
std
add
mov
imul
cmp
mov
cld
in
push
cmp
mov
cmp
aad
adc
mov
pusha
push
hlt
loopne
sub
int3
adc
mov
mov
imul
mov
in
mov
shlb
push
aad
pop
fs
dec
hlt
push
ljmp
dec
or
jmp
stos
cmp
fldcw
pushf
xchg
xchg
data16
or
in
scas
aam
mov
push
imul
in
mov
inc
ficoml
jp
xchg
and
add
mov
ss
adc
je
add
cmc
xchg
pusha
test
push
hlt
pmullw
ljmp
not
test
rorl
adc
nop
movb
dec
sahf
dec
iret
icebp
inc
imul
and
jl
insl
les
xor
push
addl
enter
imul
sub
sub
push
mov
scas
lods
orl
pushf
popf
push
mov
pop
lods
iret
mov
xchg
jmp
xor
add
andb
loop
icebp
xchg
jmp
adc
pusha
cmp
bound
mov
test
es
or
insb
mov
xchg
xchg
and
aad
aam
sub
push
push
jbe,pt
imul
andl
loopne
jl
call
popa
mov
and
pop
mov
jge
dec
sub
test
sbb
leave
jno
or
aad
jle
orl
pop
cltd
dec
and
add
inc
int3
lret
pusha
test
jge
pop
or
pop
jnp
cmpsl
cmpsl
pop
inc
or
push
and
pop
and
pop
or
or
popl
add
dec
js
clc
cmp
push
aad
xor
mov
xor
dec
repz
and
sbbl
push
vpcmov
or
lock
repnz
pushf
mov
cmpsl
iret
dec
xor
int
sbb
sti
inc
mov
xchg
mov
inc
jo
repnz
cmp
pop
test
test
mov
pop
mov
inc
iret
hlt
loope
mov
push
insb
roll
push
in
xchg
jnp
mov
pusha
fwait
div
xchg
adc
in
xchg
sub
test
add
hlt
rol
push
ja
xor
sbb
dec
and
dec
pop
rol
pop
push
fndisi(8087
lods
cmp
outsl
fwait
ret
stc
sbb
hlt
jae
add
je
adc
pminsw
add
push
das
push
sbb
cli
push
cmpsb
add
insl
int
cltd
jmp
cmp
ret
mov
addl
ss
push
subb
loop
repz
jl
push
js
xorl
mov
push
xchg
and
ficoml
cmp
pop
or
andb
sbb
cmp
xor
leave
lds
hlt
xor
outsl
stos
into
aam
jmp
int3
push
cli
outsb
push
enter
icebp
jo
sbb
cwtl
inc
mov
loope
into
into
cmp
and
inc
push
std
inc
add
jbe
inc
dec
cld
popf
into
jecxz
and
jo
add
in
imul
lcall
pop
loope
adc
mov
xor
out
rcr
addr16
test
idivb
adc
lock
hlt
in
stos
dec
xchg
rcl
in
iret
in
xor
cltd
iret
enter
mov
lea
adc
dec
push
lret
lock
or
mov
mov
mov
add
rclb
or
leave
daa
lds
cmovne
rcll
push
fs
lahf
cmp
dec
fisttpll
daa
or
daa
rclb
and
scas
jnp
and
stos
xor
inc
xor
inc
mov
inc
cs
jno
adc
pop
dec
leave
insb
mov
stc
fisttpll
jns
sbb
xchg
xchg
dec
fcoml
xor
or
inc
roll
xchg
lahf
sahf
data16
movsb
shl
jbe
pop
push
jl
mov
arpl
jae
mov
fstp
mov
mov
fildll
lea
mov
in
mov
imulb
pop
enter
out
scas
call
jp
das
shll
pop
or
loopne
jecxz
nop
and
lahf
outsl
clc
mov
mov
arpl
outsb
fsubrl
inc
lret
jnp
xor
std
cmp
es
mov
push
shl
pop
test
cli
dec
cltd
hlt
jne
loope
mov
dec
jb
loopne
mov
pushf
jnp
mov
push
jnp
mov
cwtl
mov
bound
cmp
mov
mov
int3
lds
fcoml
xchg
mov
push
xchg
aaa
nop
inc
xor
mov
and
sub
xchg
xchg
cmc
inc
data16
cmp
add
push
mov
in
pushf
inc
xchg
gs
sbb
rcrl
gs
adc
ljmp
cmp
pop
xchg
insb
fstp
inc
or
push
sarl
sub
inc
aaa
cmp
and
repz
jb
daa
jecxz
xchg
push
or
nop
xlat
dec
sbb
adcb
mov
jnp
lock
adc
popf
jnp
push
decl
xchg
lods
pop
movsl
and
add
rcll
leave
es
jnp
mulb
lret
clc
xor
in
mov
mov
lea
sbbl
stos
cmp
jno
xchg
outsb
pop
dec
ja
psrld
fidivl
push
ret
mov
les
sbb
pop
test
mov
push
adc
inc
aaa
add
out
and
pop
aad
sbb
sahf
jle
out
daa
stos
and
not
push
mov
aas
popf
mov
int
jnp
cmp
and
in
test
sub
lcall
out
int
test
lds
imul
adc
enter
jmp
push
inc
adc
repz
sti
mov
outsl
pop
sti
dec
push
mov
sub
dec
movsl
and
push
cltd
test
push
xor
mov
sti
scas
lock
outsl
mov
aas
neg
sahf
sub
dec
jns
or
fsubp
pop
push
xchg
inc
sbb
add
xor
aaa
dec
movsl
fimuls
push
cmpsl
mov
sub
xchg
xchg
mov
aad
mov
cs
cmpsb
nop
and
sub
pop
cmp
fistl
mov
aas
repnz
pop
in
jle
mov
xor
scas
aad
mov
and
out
test
adc
loop
xchg
jecxz
mov
push
pop
addl
outsl
jns
add
fisttpll
repz
cltd
mov
push
call
in
enter
test
add
aad
mov
jns
aad
cmp
or
test
xchg
cmp
into
cmp
rcll
pop
lds
xchg
add
inc
out
leave
insb
push
outsl
and
incb
fwait
rclb
add
fisttpll
and
push
jb
push
ss
mov
cmpsb
outsl
dec
ja
jbe
jecxz
es
scas
sbbl
sbb
push
mov
loopne
cmc
push
mov
ficoms
xchg
rol
pop
adc
jae
dec
mov
pop
jecxz
loop
inc
pop
shll
jno
mov
into
push
adc
mov
mov
push
mov
push
cmp
flds
jno
icebp
nop
fcoms
clc
and
es
or
scas
sti
loop
cmc
leave
push
insb
sbb
cs
or
push
das
mov
cmp
push
nop
jl
icebp
sar
xchg
sbb
sbb
aas
into
movsb
mov
pop
out
imul
outsl
adc
ret
mov
lods
pop
rclw
int3
int3
sub
sti
rcrb
in
ret
out
bound
test
outsb
push
dec
scas
test
mov
cmp
popa
faddl
mov
or
sbb
into
dec
jns
mov
lds
frstor
std
imul
movsl
xchg
mov
enter
cmpsb
sbb
pop
fnstcw
sbb
cs
push
mov
and
sub
mov
inc
mov
fsubs
fistl
ret
add
outsl
shl
mov
xchg
movsb
fsts
ljmp
dec
int
arpl
sub
mov
sub
add
lea
mov
sub
add
rcrl
xchg
pop
lock
iret
inc
push
xor
and
jbe
mov
ljmp
lods
imul
fidivrl
or
or
and
rcr
xchg
cmp
int
push
idivl
push
pop
shll
icebp
test
stc
fldcw
xchg
iret
dec
int
ficompl
push
push
xlat
jns
leave
pop
ss
or
jecxz
imul
mov
imul
icebp
push
push
pop
movsl
iret
test
cmp
pushf
test
pop
sbb
jno
shll
xlat
ret
sub
xchg
stc
lds
sarl
fidivs
or
movsl
adc
push
cwtl
imul
insl
test
pusha
subb
sub
lea
cmp
jp
jle
cmp
popf
out
mov
jno
out
push
les
mov
shrb
stc
bound
mov
mov
je
push
stos
jno
mov
cmp
scas
cmpb
and
mov
mov
adc
push
cwtl
cmpsb
cmp
sahf
pop
aam
jmp
push
ret
and
mov
fs
fs
and
sbb
leave
sub
mov
sbb
xchg
imul
xchg
decb
les
sbb
out
roll
pop
insb
pop
xchg
aad
inc
mov
xor
pop
sub
xchg
movsl
xor
jbe
mov
addr16
jg
inc
test
lahf
into
push
jl
jle
xor
cmc
adc
push
loop
lods
push
mov
and
xor
sbb
mov
loop
cmp
fsubrl
dec
pop
stos
incb
lock
aaa
loopne
jmp
push
mov
repz
adc
fbld
cwtl
jnp
add
inc
popf
rol
aaa
mov
inc
jmp
adc
sbb
xchg
xchg
lock
out
sbb
sti
aaa
jne
sarb
sbb
xchg
sub
leave
add
arpl
movsl
inc
push
arpl
inc
xchg
dec
addr16
fmull
nop
inc
cmp
jb
sub
mov
jp
sbb
cs
inc
fidivrl
dec
mov
in
pushf
and
lret
mov
scas
jp
mov
inc
jnp
mov
push
sub
fsubs
add
or
jb
mov
and
fisubrs
outsb
cmp
out
jbe
in
mov
or
stos
fdivl
dec
leave
pop
test
xchg
mov
inc
popa
pop
dec
push
jge
hlt
fucom
mov
mov
call
xchg
rorl
orb
adc
dec
mov
xlat
mov
int
xchg
dec
pop
insl
lods
cmp
jl
std
ret
xchg
cs
jo
cwtl
dec
in
int3
fcoms
fstl
out
inc
inc
lret
stc
mov
lds
mov
test
dec
ret
pop
mov
lods
mov
insl
lahf
nop
inc
mov
addr16
cld
fisubl
xchg
mov
and
insb
scas
jae
xor
adc
jmp
frndint
and
jle
push
pusha
xchg
outsl
int
dec
pop
push
aas
lret
xor
stos
jns
jecxz
out
cs
cmp
lea
dec
mov
stos
int3
pop
icebp
mov
jle
pop
mov
jbe
bound
inc
mov
inc
push
jo
cs
pop
ja
cli
mov
aam
out
push
lea
and
repnz
ss
xchg
cmp
test
shll
mov
cmpl
xchg
cwtl
mov
push
in
stc
iret
pushf
mov
add
aad
inc
xlat
pushf
cwtl
inc
xchg
sub
or
repz
or
aam
dec
out
fldt
lods
xor
cmp
mov
lret
cmc
mov
int3
cltd
enter
bound
stos
push
push
dec
dec
movsl
jb
gs
mov
fistpl
cli
loop
loop
testb
add
cld
es
ljmp
jno
dec
ljmp
aas
outsl
mov
les
sbb
xchg
xor
sub
fadds
into
push
push
outsb
adc
push
and
test
xor
fsubl
movsl
cmpsl
popf
mov
imul
lahf
or
lods
pop
and
mov
cmpb
xor
pop
adc
cmp
sbbb
test
pop
pop
adc
push
pop
negl
mov
popf
push
imul
mov
and
lcall
stos
xor
inc
and
es
es
jmp
mov
jle
addb
jnp
fistps
dec
cld
push
add
cmp
or
scas
sub
add
mov
pop
xchg
pop
lock
out
push
out
jmp
pop
add
mov
in
mov
fsubrp
popf
mov
dec
jb
mov
xchg
in
roll
xchg
mov
push
sub
pusha
jecxz
popw
addb
add
int
loope
aam
out
add
insl
cmp
fiadds
cmp
dec
sbb
scas
sahf
sub
add
push
pop
int3
mov
push
cmp
lods
fidivs
xchg
xor
sub
jg
addl
jmp
daa
and
dec
mov
shl
fwait
arpl
iret
xchg
dec
sahf
out
jp
jbe
xchg
pop
xchg
jecxz
adc
cwtl
int3
std
gs
outsl
sahf
jno
test
xor
insb
and
push
cld
xor
icebp
sbb
mov
sbb
mov
add
popa
fisubrl
imul
mov
pop
cwtl
push
inc
dec
jo
call
movsb
mov
jg
or
sbb
mulb
mov
repnz
adc
xor
and
mov
rclb
cmc
adc
pop
jne
lret
xchg
bound
in
xor
xchg
and
adc
cmp
jns
inc
pusha
dec
fnstsw
xchg
inc
cmp
stc
fsubr
cmpsl
pushf
pop
shrl
mov
test
out
popa
cli
out
jecxz
jl
dec
test
out
cltd
dec
push
insl
jle
cmpsb
mov
fmul
insb
inc
jg
roll
out
dec
insl
fwait
outsl
add
decl
outsl
mov
imul
sahf
cmp
int
cli
push
push
xor
jo
out
frstor
jg
popa
lcall
daa
rcl
das
add
jb
fsubrl
lock
loopne
into
shrb
test
cmp
stos
sbb
inc
mov
fwait
arpl
cld
xlat
out
mov
dec
and
or
adc
repnz
addb
sub
cmp
pop
xchg
rcl
xor
into
push
dec
scas
bound
xor
mov
call
xchg
jb
aam
sbb
rcll
in
lret
mov
push
mov
jmp
push
jle
fildl
dec
adc
jo
pop
dec
xchg
mov
repnz
pop
pop
mov
mov
dec
dec
clc
pop
les
xor
mov
xchg
sbb
xor
push
xchg
cmp
inc
je
pop
daa
dec
negl
enter
mov
in
clc
shl
je
sbb
repnz
mov
xor
int
es
cmp
or
mov
mov
inc
inc
enter
adc
ds
das
sub
call
fisttpl
jecxz
mov
test
and
loop
cwtl
inc
adc
xor
push
mov
popf
mov
pop
ss
sub
out
push
sub
inc
xchg
in
sub
popf
xchg
je
jle
jmp
sbb
out
inc
jmp
lods
jno
loopne
lret
mov
add
out
push
sbb
imul
mov
loope
and
sbb
fcoml
or
aam
and
je
xchg
call
xchg
push
inc
sub
in
sbb
cmp
xlat
dec
dec
pop
adc
fstl
in
cmc
and
mov
repz
jl
or
inc
add
push
push
mov
cltd
shll
xchg
int3
pop
shr
int3
adc
dec
xor
imul
or
lcall
pop
mov
xchg
inc
out
fmull
movsl
pop
pop
rcrl
adcb
les
rcrb
mov
in
mov
std
jne
out
lods
push
push
daa
popf
adcb
pushf
pop
aad
sub
mov
jae
lea
add
sahf
call
pop
cld
shr
jp
xor
sub
sbb
mov
pop
rorl
mov
outsb
cs
pusha
xchg
push
into
testl
psllw
dec
cmp
or
loopne
dec
popa
call
sbbb
pushf
jle
aaa
dec
sbb
cmc
fisubrl
mov
cmpsl
imul
or
or
inc
jnp
nop
and
rcr
mov
in
jl
mov
sbb
sub
decb
and
call
dec
scas
sub
cmp
pop
stos
adc
nop
cmpsl
stc
mov
xchg
lret
roll
add
and
jbe
mov
jbe
lcall
fistpll
hlt
sbb
jl
jne
jecxz
jmp
push
jg
jecxz
es
xchg
xchg
jp
and
lds
cmpsl
ds
mov
pop
mov
clc
pop
dec
rolb
ss
test
add
sbb
das
jmp
pop
mov
and
aas
maxps
in
movsb
repnz
loop
cmp
jg
mov
xchg
sbb
or
out
pushf
sahf
or
inc
jge
xlat
adc
pop
add
xchg
test
lahf
fidivrs
jmp
aad
adc
or
sbb
mov
push
mov
fdivl
std
sbb
push
jge
xchg
into
adc
xchg
xor
jb
clc
pusha
out
lds
or
inc
into
int3
and
pusha
jle
std
mov
lahf
sbb
mov
mov
sub
outsb
je
sub
and
mov
sub
shrb
xorl
jmp
in
add
or
stos
mov
fsubrl
lea
sub
sti
das
jl
add
push
out
int3
xchg
movsl
sub
jns
out
fists
jg
out
dec
push
imul
add
movsl
fwait
mov
and
or
fimuls
push
les
cs
jle
in
dec
mov
pop
lret
scas
test
inc
push
jg
sbb
jmp
fadds
sbb
push
and
jb
inc
pop
cltd
aad
pop
xor
cmp
xor
pop
shl
adc
push
in
xlat
push
add
nop
scas
jecxz
pop
adc
mov
out
out
jb,pn
inc
dec
sti
sub
sub
mov
mov
call
sub
dec
pop
mov
ret
xor
jb
outsl
cmp
or
mov
sub
pop
pop
inc
push
cmpsl
dec
xchg
inc
dec
fs
loop
std
mov
push
dec
mov
jne
loop
int3
scas
mov
adc
xorl
inc
fisttps
out
cmc
sbb
cmp
fistpll
pop
sub
mov
add
xor
insb
mov
imul
and
stos
dec
push
or
push
adc
pop
daa
and
cmp
and
mov
cmpsb
jno
xor
cmp
addr16
mov
inc
push
xchg
out
sti
icebp
and
jo
mov
sub
dec
or
mov
shll
cmp
shll
cli
loop
pop
jae
push
pop
leave
xchg
jecxz
xor
cmp
add
addr16
xor
jp
je
and
dec
cmpsw
sub
push
cmp
jecxz
pop
stos
mov
jb
orl
sbbb
fisttps
int3
sbb
adc
sbb
jl
repnz
and
sub
mov
movsb
cmp
scas
adc
lahf
jae
xchg
sub
sahf
int3
adc
push
mov
add
js
add
and
andb
jne
xchg
xchg
mov
in
cld
lahf
add
pop
push
adc
jnp
sarl
mov
inc
subl
inc
jno
out
sbb
dec
subl
xchg
pop
jmp
add
imul
insl
jecxz
cli
mov
pushf
push
gs
clc
leave
lods
mov
repnz
sbb
mov
mov
loop
test
iret
and
xchg
sahf
mov
jecxz
add
and
je
mov
movsl
insb
sub
mov
cs
push
int
cs
lods
fcomps
test
lcall
sahf
push
fstps
and
pop
mov
jnp
xorl
scas
nop
pop
xchg
pop
add
mov
adc
std
in
mov
sbb
adc
push
imul
pop
lcall
xor
mov
mov
stos
adc
xor
fsubl
push
popa
stos
pop
lret
mulb
imul
adc
clc
test
bound
test
inc
sbb
xchg
jno
lods
push
das
dec
xlat
jecxz
movsl
fisttpll
les
xchg
jnp
lret
out
test
cmovb
push
mov
js
adc
mov
int
ret
aas
pusha
cltd
hlt
sub
pop
mov
aas
loop
inc
les
clc
mov
cmp
cs
pop
sub
xor
xor
pop
std
aaa
lahf
test
push
jb
push
lea
cmpsb
insl
fistpll
scas
jmp
lock
jge
jbe
mov
xchg
int
ljmp
push
pop
sti
jmp
data16
xchg
mov
nop
cli
cmpsl
mov
pop
xor
sbb
cmc
fwait
jp
das
mov
cs
daa
popf
push
dec
aad
mov
cmp
cltd
mov
inc
mov
into
shl
je
pop
out
daa
adc
pop
mov
mov
testl
sub
mov
arpl
add
imul
adc
in
sbb
shlb
push
sub
or
aad
out
add
ja
adc
inc
xor
fucomp
popa
scas
jecxz
mov
adc
into
pop
iret
push
sub
cmp
mov
dec
test
mov
dec
lods
add
pusha
movsb
out
rol
cwtl
popf
pop
add
scas
fsubl
cmp
repz
ja
lods
call
push
imul
mov
add
mov
cmc
lods
xor
xlat
call
popa
mov
xchg
mov
jne
push
mov
lds
lahf
scas
mov
dec
inc
push
adc
shll
dec
out
int3
popa
clc
cmpb
insb
in
mov
scas
dec
lock
or
sbb
ds
push
mov
lock
push
mov
jle
test
adc
dec
in
xor
out
xor
bound
gs
fistpll
iret
jge
or
repz
inc
mov
xor
cmp
enter
jecxz
ret
icebp
lcall
or
lock
cmc
push
fistl
sbb
fs
jge
mov
mov
or
scas
jl
cltd
rorb
xchg
or
xlat
cmc
in
sbb
dec
shll
shll
daa
fucomi
ret
add
cmpsl
orl
ja
lret
mov
push
adc
pop
add
cwtl
les
xchg
cmp
adc
push
mov
cmp
xchg
ficomps
bound
jnp
sbb
fimull
push
cltd
aad
lahf
inc
lods
push
cmpsb
push
ret
pushf
or
insl
ficompl
pop
add
mov
mov
or
inc
test
adc
mov
test
das
lret
das
cmc
fcmove
mov
add
ss
ret
loop
cld
fnstenv
cmp
mov
jmp
fsts
xchg
int
mov
dec
mov
lea
sbb
adc
dec
scas
ret
inc
xor
pop
dec
incl
dec
jae
mov
add
xor
mov
sbb
jl
xor
lcall
xchg
mov
add
xor
push
lcall
sti
mov
outsl
xchg
hlt
cmpsb
sub
xchg
or
sbb
imul
pop
mov
and
clc
inc
nop
adc
pop
enter
add
outsl
pop
cltd
psignd
or
mov
mov
out
lds
in
out
sahf
sub
jecxz
rcrb
daa
rcrl
pop
mov
int3
push
pop
lcall
idivl
or
inc
addb
negb
cwtl
inc
cmp
test
mov
pop
js
adc
adc
in
sbb
push
pop
mov
les
xchg
dec
sbbl
fucomi
ja
inc
jge
lock
push
sub
test
es
jbe
pop
int
mov
push
adcb
mov
jnp
ficompl
adc
iret
shlb
mov
aas
repnz
pop
mov
popa
jl,pt
sub
jne
inc
xor
jnp
push
rolb
int3
xor
inc
mov
mov
mov
inc
int
jecxz
ror
xor
jne
fistps
popf
jns
inc
rorb
push
jp
sub
jno
xor
popa
ds
cmpsb
fcompl
popl
jecxz
sbb
jl
add
add
movsb
stos
sbb
fnstsw
stos
mov
dec
mov
cwtl
lds
arpl
dec
clc
sarb
ss
cs
push
adc
sub
dec
lret
lods
subl
inc
imul
adc
les
pusha
jmp
pushf
mov
pushl
insb
sbb
sub
add
movsb
fcmovnb
fsubl
cmc
loopne
icebp
fs
and
cmp
imul
incl
test
cli
pop
add
sbb
push
nop
pop
inc
adc
pop
ficoms
pop
pop
cmp
outsl
hlt
rcrb
or
adc
fildll
pop
and
and
pusha
fidivrl
lret
movl
test
or
jp
xlat
cli
leave
mov
insb
adc
jae
mov
mov
cmp
sbb
adc
cmpsl
sbb
loope
add
dec
cmp
xor
psubsb
scas
jecxz
cmp
push
push
shl
data16
pop
stos
bound
mov
inc
adc
clc
jg
loope
mov
push
sbbl
hlt
cli
push
shll
xor
mov
push
xchg
pop
lret
ret
add
dec
pop
add
and
cltd
pop
pop
xor
daa
pop
inc
loope
sahf
xor
test
lods
js
shlb
fsts
test
dec
fwait
jne
ficomps
mov
pop
mov
call
mov
shufps
stos
ss
cmp
cs
inc
pop
ja
neg
cwtl
pop
cmp
push
call
mov
ret
mov
push
jne
xchg
subb
push
xor
repnz
mov
sub
push
jl
adc
shlb
test
sbb
mov
xor
pop
in
insb
mov
ret
jns
and
adc
mov
iret
inc
fadds
cmpsb
xchg
negb
js
es
inc
or
mov
fdivp
fmull
xchg
mov
adc
popf
js
test
mov
and
dec
jb
arpl
rclb
sbb
pop
pusha
shl
test
inc
in
testb
dec
add
es
aam
push
xchg
mov
lods
or
fiaddl
in
fisubrs
into
sbb
in
gs
sbb
lcall
or
lahf
cld
subb
xchg
sub
dec
ljmp
xor
mov
cmpsl
mov
pop
jge
push
shrb
outsb
sti
addr16
sub
mov
adc
jge
push
xchg
ja
dec
mov
xchg
pop
fimull
adc
loopne
dec
int3
xor
xchg
jae
cld
repz
aam
lret
popf
or
cmp
out
out
cmpsl
cli
cmpsb
push
dec
adc
je
loop
mov
bound
sahf
dec
call
mov
or
mov
repz
cmpsb
jns
dec
cmp
sarb
decl
gs
cmp
scas
xchg
jge
adc
lds
sub
hlt
pop
or
xchg
popa
add
sub
gs
ja
jae
jg
inc
cld
gs
push
shrl
adc
sbb
ja
adc
xchg
das
and
movsb
inc
mov
cmp
inc
cmp
dec
sub
adc
pop
sti
out
fisubrl
pop
sub
cmpsb
sub
xor
pop
adc
mov
pusha
mov
data16
mov
mov
sub
out
mov
sub
lret
in
pop
cltd
sbb
fs
lds
imul
movsl
fisttpl
jmp
out
repnz
in
movsb
iret
mov
jnp
push
js
add
sub
jmp
imul
pop
add
fxch
xchg
call
rcrl
loope
cmp
loop
lock
push
cmp
xchg
jnp
mov
das
sub
mov
xchg
sub
xor
and
mov
inc
stc
icebp
jge
adc
ret
icebp
or
inc
cmc
fwait
mov
repnz
mov
mov
push
xchg
mov
mov
daa
jno
popa
xor
mov
mov
jmp
jbe
pop
clc
insb
das
cli
cmc
push
pop
jo
mov
push
adc
jmp
push
ja
jnp
test
dec
cmc
rcr
mov
mov
scas
aam
jmp
cmp
xor
stos
or
and
xchg
push
mov
push
testb
dec
mulb
imul
cmp
mov
xchg
fsubrs
inc
rcll
push
loope
xchg
adc
dec
push
in
movb
adc
idivb
loop
push
jno
nop
addb
cltd
lcall
pop
mov
mov
test
jle
enter
test
lea
pop
sti
dec
nop
mov
pop
mov
sbb
or
pop
jge
fidivl
ret
pop
pushf
ret
jmp
sti
fwait
pop
sahf
dec
mov
push
fldln2
decb
sub
pop
mov
adc
out
xchg
fs
clc
xchg
es
sub
add
in
pop
cmp
pop
cmpsl
mov
jmp
ljmp
rclb
mov
enter
ljmp
in
push
pop
popw
or
mov
pusha
and
add
cmp
gs
std
jbe
filds
xchg
add
mov
call
cmpsb
lock
int3
cmp
mov
mov
xor
add
les
sbb
outsb
xchg
and
in
js
sbb
es
xchg
or
aaa
mov
lock
mov
mov
ss
fiaddl
or
adc
inc
int3
in
cld
push
stos
adc
outsl
jbe
call
cli
test
movsl
add
xor
push
pop
sbb
add
in
out
mov
inc
jo
inc
cs
lret
es
push
xlat
pop
xchg
mov
movsl
cmp
aad
sti
daa
fdivrs
dec
cmp
jnp
cmc
adc
push
mov
cmovno
lret
dec
push
or
sarl
mov
repz
inc
cmpsb
shrb
sarb
popf
dec
inc
jge
int
dec
inc
inc
lret
jae
adc
pop
inc
adc
mov
xchg
cld
mov
insl
fnstenv
sbb
jnp
xor
pop
mov
jmp
div
ss
pop
xchg
jmp
sbb
mov
adc
jne
or
inc
gs
mov
and
stc
adc
adc
mov
dec
and
inc
test
or
xor
hlt
or
rolb
mov
jns
insb
ds
or
das
shll
or
out
push
push
jnp
rcl
scas
jg
inc
mov
mov
sub
xchg
cmpsl
adc
outsl
mov
int3
movsb
out
sub
dec
rcl
and
jnp
fld
rolb
aad
fucomp
and
mov
ss
fwait
imul
cmp
jge
push
inc
test
pop
pusha
mov
mov
push
insl
sub
lcall
mov
in
jl
cmp
addb
lods
push
inc
std
jp
add
cmp
loopne
push
mov
pop
les
inc
mov
mov
add
mov
inc
insl
adc
lret
enter
cwtl
dec
in
daa
mov
fidivs
aad
dec
jge
enter
mov
pop
pop
inc
jge
add
test
pushf
mov
test
ds
jl
cmp
hlt
jecxz
xlat
inc
cmp
push
cmp
pop
push
sub
jmp
pop
jo
enter
sbb
and
cmpsb
or
mov
out
aaa
arpl
inc
xor
cmp
std
test
loop
adc
mov
cmp
aas
div
xchg
in
mov
lods
jmp
pop
insb
adc
push
push
sarw
xchg
pop
in
cmp
ljmp
adc
leave
dec
jle
adc
inc
shll
xor
cmpsl
lahf
lock
and
lods
cltd
pusha
or
fsub
lods
adc
and
add
mov
xchg
ret
mov
xor
mov
adc
mov
pop
jg
push
mull
roll
imul
or
xchg
aam
mul
jl
js
jno
shlb
fmul
scas
lea
lret
push
in
cmpsl
or
and
mov
mov
bound
mov
cmp
push
jno
rcrb
add
adc
xchg
subb
dec
es
inc
push
sub
in
push
dec
xor
sub
and
loop
add
fcompp
into
jmp
cmp
add
add
movsl
sarl
stc
push
push
call
or
mov
adc
xchg
stos
jae
pop
xchg
dec
inc
push
mov
push
jle
dec
call
mov
scas
arpl
popa
je
inc
leave
fwait
add
or
mov
jmp
fwait
lods
lds
test
xchg
sub
jmp
sub
xor
dec
movl
sbb
das
mov
in
stos
out
addr16
fwait
int
daa
into
cltd
das
jmp
sar
loop
shrl
adc
xor
imull
mov
adc
enter
push
ss
popa
shrb
jp
aad
mul
fbstp
sbb
pop
dec
adc
sti
insl
lret
aaa
push
sbb
xchg
cltd
mov
scas
leave
add
loop
xor
cmp
repnz
std
xchg
mov
xchg
into
nop
icebp
mov
dec
pop
jecxz
pop
popa
jnp
mov
mov
repnz
cmc
pop
inc
xchg
add
rolb
loop
fisubs
add
fmulp
ret
xchg
mov
mov
out
test
jne
jle
aaa
jns
push
insl
jne
cmp
jno
dec
pop
xchg
stos
add
jne
jne
or
inc
incl
or
pop
mov
daa
pop
movsl
mov
dec
addl
arpl
xor
leave
dec
jmp
xor
movsb
push
pop
push
pop
xchg
add
out
dec
jg
test
daa
dec
cmp
add
pop
dec
cmp
and
ja
repz
cmp
sbb
xchg
sahf
ret
inc
cmp
jno
outsl
lds
adc
xchg
sahf
sbb
jl
adc
pop
xor
insl
fstpt
into
inc
faddl
enter
mov
adcl
or
sub
negb
hlt
jne
dec
push
or
mov
in
ljmp
je
mov
jle
rcll
int3
inc
in
ja
push
out
adc
outsb
pop
mov
mov
mov
aad
xchg
jmp
and
adc
out
inc
in
daa
xlat
or
out
outsl
sbb
insl
jmp
daa
test
popa
jmp
dec
bound
and
xor
fstpl
rol
pop
dec
ss
aam
dec
out
jae
or
out
inc
in
lcall
fisubl
push
cltd
sub
xor
enter
cmc
fsub
fstl
stos
adc
lret
test
mov
ljmp
pop
je
subb
jecxz
xor
mov
jmp
dec
xlat
outsb
and
aad
imul
push
xchg
loop
out
orb
mov
jae
mov
mov
popa
les
or
ud2
add
mov
mov
insb
jo
push
jmp
xchg
pop
or
pop
pop
adc
aaa
push
sbb
jg
xor
rcll
xchg
mov
pop
mov
incb
popa
ljmp
dec
and
sbb
or
dec
add
and
lahf
mov
gs
pop
jle
sbb
sub
jp
dec
int
push
sbb
aas
nop
and
mov
dec
mov
test
fnsave
cmp
ds
and
cmp
fwait
fwait
imul
dec
xchg
ss
in
stc
mov
adc
cmp
movsb
adc
mov
jae
mov
push
js
xchg
fildl
dec
add
fimull
push
sbb
scas
mov
stc
cld
imul
dec
scas
dec
stc
clc
mov
or
idivl
bound
lea
test
inc
mov
adc
inc
push
test
sub
lea
cmpsb
ds
dec
adc
int
xor
pop
pop
pop
arpl
mov
cmp
inc
push
mov
jge
orl
aad
jge
jp
and
jmp
jg
add
fisubrl
outsb
andl
mov
lods
mov
inc
movsl
inc
jno
xor
imul
ficoms
test
test
mov
cmpsl
js
daa
dec
jmp
push
std
inc
jmp
pop
rcll
dec
push
and
pop
repz
jae
and
adc
mov
pop
int
mov
negb
dec
gs
in
out
mov
mov
std
sbbl
insb
icebp
pop
cmc
sbb
loope
mov
rolb
or
sbb
add
push
sub
xchg
mov
inc
cmp
mov
ljmp
pop
incl
dec
cmp
pop
mov
lds
popa
jne
movsb
jbe
loop
bnd
sub
xor
mov
xor
pushl
stc
icebp
out
push
repnz
pop
sti
gs
dec
es
loop
lahf
add
xchg
call
push
lret
icebp
sbb
gs
mov
mov
shl
loope
xor
lret
fsubrl
sbb
cmc
cltd
dec
ljmp
addl
orl
rcrl
in
mov
inc
es
stc
lds
arpl
ljmp
sbb
push
pop
ljmp
ret
adc
sti
push
mov
aaa
push
or
pop
movzww
call
inc
cwtl
mov
lret
mov
jae
xchg
bound
add
ja
sub
mov
jg
mov
in
fistpl
sbb
mov
cmp
jg
and
rcrb
cwtl
dec
sbb
and
mov
daa
enter
sbb
push
stc
or
rcll
inc
out
push
adc
imull
push
inc
out
sub
dec
fisubl
dec
ret
sbb
inc
mov
push
sahf
faddp
sbb
xchg
cmp
mov
jg
or
mov
mov
ds
das
lds
test
push
xchg
mov
cmc
push
rcrl
mov
repz
xchg
push
mov
shlb
outsb
cmp
mov
jecxz
add
pushf
imul
loope
and
mov
xchg
xor
xchg
xchg
and
and
adc
jnp
mov
movsb
repnz
mov
jae
das
pop
test
shrb
or
in
test
stos
out
stc
cmc
xchg
int3
or
stc
test
xchg
mov
mov
cmp
push
movb
ds
mov
clc
shl
cmc
mov
test
inc
add
jl
push
daa
mov
push
push
icebp
popa
pop
push
daa
stc
fdiv
sbb
and
sub
xchg
insl
sub
lret
fsub
or
dec
fdiv
hlt
pop
mov
inc
aam
or
sub
std
frstor
cwtl
mov
inc
clc
mov
and
push
ja
in
cmp
sub
and
cmp
enter
jae
xor
push
cmp
notb
loopne
mov
sbbl
and
adc
aad
testl
call
loope
fdivl
fs
mov
xchg
pushf
cmpsb
xor
addr16
subl
aad
add
pop
add
sahf
jecxz
call
mov
jae
and
cs
repnz
mov
push
inc
jno
cli
mov
mov
rcll
test
mov
pop
push
subb
ss
sti
push
pop
js
daa
jmp
test
push
lods
popf
push
or
into
ja
fwait
inc
add
sub
xor
mov
test
insb
or
loope
adc
mov
daa
mov
sbb
mov
xlat
ss
icebp
push
sbb
lea
pop
imul
mov
dec
addr16
jno
aad
lret
test
push
or
mov
jl
mov
sti
push
mov
jg
aad
adc
sarb
mov
adc
lods
push
jecxz
out
mov
jno
inc
cmp
sti
sbb
aas
mov
dec
ljmp
sub
jno
loop
cwtl
nop
imul
ss
pop
xchg
and
cmc
and
pop
mov
into
mov
jle
adcl
rcrb
xchg
sti
xor
cltd
xchg
sbb
iret
pushf
cmp
or
negb
test
test
rcrb
nop
lahf
cltd
cmp
clc
adc
ljmp
jp
pop
loopne
sbb
xlat
lods
sbb
loop
incb
repnz
ljmp
jmp
cmc
pop
mov
lods
cmp
mov
loopne
add
pop
xchg
pop
aas
or
xor
push
shrl
scas
or
sbb
cmpsb
jb
mov
cmc
das
inc
jecxz
cwtl
cmp
in
lret
inc
dec
mov
lahf
mov
loop
add
mov
stc
movsb
jo
jb
jne
jo
ret
mov
int3
cmp
pop
cmpsl
fdivrl
sub
loopne
cmp
jg
add
xchg
shlb
and
mov
lret
and
gs
inc
push
xor
aaa
popa
dec
cmp
cmp
push
or
lcall
std
mov
and
mov
mov
cltd
sub
cmp
push
adc
mov
fcomi
mov
lcall
xchg
inc
iret
sbb
loope
cmp
cmc
fdivrl
imul
xchg
push
and
mov
cmp
dec
push
test
lods
je
mov
mov
lahf
fdivs
mov
js
fisttpl
fistps
mov
clc
shrl
cwtl
popf
mov
das
jnp
mov
jmp
jg
aam
push
jmp
mov
lods
push
fildll
add
dec
inc
and
pop
outsl
pop
mov
mov
add
adcl
js
ficompl
imull
inc
sbb
test
loop
mov
sti
or
push
sbbl
xchg
repnz
xchg
jnp
gs
call
shll
mov
stos
add
cmp
mov
push
sar
fldenv
ljmp
in
test
bound
dec
mov
cmp
xor
mov
pop
popa
test
push
jle
insl
dec
mov
add
lcall
lret
stos
sarb
mov
mov
loopne
or
stos
cmp
in
lods
jns
jne
mov
loope
cmpsb
xchg
xor
fsubrs
jo
and
int3
add
xor
push
inc
dec
xlat
jp
ret
fisttpll
mov
jge
xlat
sub
cmp
push
int
jle
mov
or
and
cltd
jnp
xor
mov
js
mov
and
cmpsb
insb
idivb
loope
jecxz
mov
xchg
adc
test
in
adc
xchg
and
xchg
xchg
inc
xlat
and
xlat
data16
enter
adc
sbb
stos
sbb
inc
out
mov
in
inc
cmpsl
pop
scas
jae
jno
mov
psadbw
dec
mov
rolb
rclb
out
pop
xchg
fmull
dec
fnstsw
pop
or
pusha
test
popa
and
dec
cmp
test
fldt
xlat
inc
fwait
lods
test
addl
sti
sbb
mov
dec
mov
inc
sbbb
int3
pop
insl
int3
fcomps
and
xor
inc
div
lods
faddl
add
mov
sti
mov
dec
call
mov
sub
xor
dec
enter
stos
daa
das
mov
xlat
lret
add
pop
jno
sbbb
add
sbb
aam
dec
mull
lds
cmpsb
insb
dec
adc
pop
mov
pop
imul
dec
jnp
jecxz
fnsave
or
pop
stos
xor
cli
loope
shr
mov
lahf
clc
mov
pop
dec
jmp
dec
dec
addr16
and
movsl
gs
fistpll
test
jp
xor
xchg
test
pushf
jae
cltd
je
insl
xchg
mov
dec
je
orb
or
call
imul
push
mov
jb
test
cmp
in
lcall
sbb
dec
push
dec
ret
dec
add
js
push
mov
mov
sub
inc
jmp
inc
int3
ret
adc
shlb
adc
and
mov
daa
pop
pop
ljmp
movsb
cs
cld
ss
jge
in
xchg
jl
cmpsl
pop
aaa
mov
loop
notl
stos
fldcw
enter
add
inc
push
scas
lods
jp
mov
mov
mov
mov
cmp
pop
add
fcmove
arpl
mov
adcb
fldcw
into
mov
lret
stos
ljmp
pop
movsl
lds
bound
pop
add
inc
push
out
test
clc
fstpt
cmp
nop
fxam
add
fildll
test
pmulhw
mov
lds
add
jecxz
xchg
xchg
popa
or
lret
and
movsb
mov
popa
pop
ss
or
cmpl
ror
mov
pop
orl
imul
mov
loop
orl
pop
das
mov
cmp
push
push
mov
push
cwtl
movsl
mov
mov
lods
fcompl
xor
fstp
je
mov
jmp
cmp
add
add
out
je
gs
jne
sbbb
fidivs
jae
imul
mov
das
loop
fldl
push
scas
repnz
sub
cmc
lock
lret
cmp
pop
add
mov
lret
gs
ret
lds
pop
mov
int
push
mov
or
dec
cli
aad
mov
adc
inc
hlt
mov
push
out
xor
cmpsb
inc
cltd
or
es
mov
insl
adc
mov
sbb
xor
add
mov
jne
add
orl
xor
shlb
sbb
lock
pusha
stos
hlt
inc
push
cs
fdivrs
scas
fwait
sub
aad
sub
fwait
sbb
sbb
add
imul
jb
sti
mov
dec
jne
pop
mov
adc
test
fmull
inc
fists
xchg
outsb
fidivl
int3
popf
sub
xor
inc
mov
sbb
imul
push
and
xchg
cmp
and
or
std
sbb
push
add
sbb
mov
mov
test
aaa
jbe
and
sub
xor
dec
dec
cmp
cli
xchg
stc
iret
lret
cmpsb
rclb
mov
aad
mov
mov
sbb
inc
adc
fcmovnbe
push
jo
mov
gs
rcll
leave
or
pushl
and
xchg
cmpsl
mov
inc
jge
add
in
xchg
mov
pop
out
mov
or
dec
insl
mov
lret
jge
pop
movsl
add
or
out
call
shll
pop
add
ljmp
fwait
imul
das
inc
lock
mov
adc
jmp
dec
fwait
fwait
pop
addr16
test
sub
pop
imul
or
enter
cmpsb
cli
js
mov
test
sbb
iret
icebp
push
jge
rorb
js
mov
xchg
cs
in
sarl
ret
mov
outsl
sti
mov
cmp
les
hlt
dec
mov
xor
add
push
sub
sbb
sbb
adc
test
test
cmp
inc
jle
icebp
sub
cmp
xchg
je
ja
js
popl
clc
inc
and
mov
push
or
popf
out
clc
std
call
loope
push
aam
or
data16
rcrb
sub
sub
loopne
cmp
movb
outsl
and
loop
xor
add
das
mov
push
dec
mov
sbb
mov
jns
push
pop
out
jl
and
pop
sbb
cmp
cmpsl
test
adc
lods
jmp
lods
fldt
or
mov
roll
adcl
ljmp
mov
fwait
pop
add
aaa
dec
sbb
pop
ret
out
and
push
mov
cmpsb
inc
sbb
pop
mov
sbb
idivl
negb
ret
push
das
imul
cld
sub
and
scas
in
pop
ror
pop
out
pop
mov
or
fs
sbb
cmc
pop
out
cmc
adc
ud0
or
jae
loopne
jmp
sub
add
adc
mov
inc
pop
leave
jle
xor
cwtl
mov
enter
add
repz
xor
frstor
icebp
sbb
pushf
nop
idivl
add
and
mov
xchg
mov
or
lret
mov
outsb
xorb
lret
xor
cli
push
inc
out
pop
loope
fisttpl
pushf
ss
jo
or
xor
or
dec
push
adc
aaa
jno
push
ror
testl
hlt
int
mov
hlt
mov
pop
xchg
adcb
in
xchg
fiadds
jmp
cmp
mov
push
sahf
mov
mov
hlt
shll
fucomip
mov
ret
add
or
xchg
sahf
lcall
xchg
pop
push
mov
aad
pop
fildll
into
lcall
and
shrb
fmul
sbb
sbb
cli
xchg
nop
cmp
cmpsl
or
dec
cs
mov
pushf
mov
cs
mov
in
mov
or
dec
fists
das
jmp
sub
sbb
arpl
sbb
js
mov
lret
cmc
cmpsb
in
popf
in
fdivs
pop
scas
aaa
clc
xchg
jnp
ret
xor
mov
dec
incb
push
mov
ret
jle
pop
scas
loop
adc
push
outsl
mov
mov
or
scas
cmp
test
push
mov
add
mov
jle
enter
and
mov
les
mov
sbb
ss
mov
push
xlat
mov
ret
sbbl
dec
add
lock
push
fcmovu
sarb
in
hlt
push
loopne
pop
loop
in
shl
imul
ret
lea
jp
ljmp
sbb
push
cmp
xchg
sbb
pop
push
rorl
cmp
in
fadd
adc
push
insb
test
sbb
inc
out
rolb
pop
out
into
and
pop
cmp
call
call
mov
mov
in
push
add
shr
jmp
int
add
adc
pushl
sahf
jle,pn
mov
push
les
bound
push
sbb
shll
sub
mov
aas
loopne
mov
push
ds
bound
clc
and
inc
dec
out
dec
test
xchg
dec
lahf
xor
std
in
ja
xchg
mov
int3
cmp
push
out
and
mov
gs
mov
dec
pop
inc
sbb
dec
paddq
mov
out
arpl
nop
jecxz
or
jg
cmpsb
jno
out
inc
push
xchg
xor
xchg
loopne
xor
cmp
xchg
int
push
dec
sbb
rorl
out
mov
fidivrl
xlat
rcrb
xor
or
push
jo
sahf
cmpsl
and
js
sbb
or
xor
jle
dec
daa
or
les
test
rorl
jno
mov
mov
mov
xlat
ror
imull
push
enter
scas
and
or
inc
push
cltd
mov
pop
push
pop
rorl
in
cs
xorl
push
jne
cmp
add
shl
mov
lahf
cs
stc
lcall
arpl
fs
sahf
rcrl
sahf
fisttpll
push
fdivs
lcall
insw
and
imul
popa
mov
in
mov
out
adc
and
inc
je
mov
iret
add
or
xchg
in
bnd
mov
xchg
repz
or
ss
dec
ds
mov
inc
add
bound
jae
pop
cwtl
xchg
test
bound
adc
lret
mov
in
mov
jmp
ss
faddl
jbe
or
sahf
insb
lock
lret
pop
adc
cmp
cs
fwait
repz
mov
je
ficompl
xor
movsb
xchg
mov
push
fisubl
loopne
ret
fucomi
scas
sub
test
sbb
mov
sub
repnz
iret
sub
pop
mov
xor
sub
inc
shlb
js
xor
mov
test
push
pop
inc
cs
dec
xchg
loope
fisttpl
lret
icebp
pusha
cmpsb
rorl
push
fwait
inc
fwait
and
inc
and
jnp
pop
std
add
rcrb
idivb
call
mov
mov
add
mov
fsubs
add
mov
inc
xor
jg
or
jle
in
sti
jns
aas
subl
add
insl
inc
lods
inc
push
iret
data16
jle
dec
jp
arpl
fidivs
sbb
adcl
jmp
pusha
xor
pop
mov
insl
pop
lahf
stos
test
sub
jmp
in
lcall
sub
and
fildl
push
jle
mov
imul
hlt
pop
pop
pop
mov
fcomi
push
pop
jo
inc
lods
insb
jmp
mov
loopne
push
inc
in
imul
jecxz
xor
adc
jle
stos
std
mov
or
call
pop
and
adc
xor
lock
xchg
mov
sbbb
fisubrs
shll
enter
nop
or
das
out
sub
stos
adc
shl
mov
pop
push
dec
jbe
pop
iret
mov
and
sbb
ret
enter
xchg
add
fsub
mov
repnz
dec
and
sub
mov
cmp
sub
push
mov
ja
ljmp
adc
add
jb
filds
jnp
cli
shrl
jo
or
dec
lahf
jnp
cli
out
dec
cmpsl
cmp
fwait
shll
dec
scas
mov
adc
lock
fsubp
jmp
mov
and
mov
mov
mov
arpl
out
jbe
addr16
push
lcall
xor
mov
leave
cmpsl
aad
test
push
pop
out
push
arpl
outsb
addr16
add
in
add
cmpsl
push
jmp
nop
loop
xchg
int3
enter
cmp
dec
dec
adc
fisubl
mov
dec
out
adcb
cmp
add
sti
mov
icebp
and
lret
out
fdivs
sahf
mov
mov
call
std
jae
mov
repz
dec
jl
lahf
or
test
cmp
fsubs
mov
cmp
mov
or
jecxz
imul
filds
pop
jo
mov
add
add
or
mov
mov
aam
test
cmpsb
dec
shlb
das
dec
mov
iret
in
mov
mov
push
push
mov
ss
jne
cmpsb
inc
enter
and
testb
dec
lea
or
shrb
sub
mov
sbb
pop
mov
xor
xchg
outsl
xchg
xchg
dec
and
mov
mov
lods
pop
inc
xchg
aaa
adc
jg
jge
repz
out
sub
fcmovnu
sbb
je
jle
mov
out
sub
int
jo
out
cmp
dec
fcmovnu
cmc
out
jmp
and
andb
ret
xchg
in
mov
loop
int
pop
xchg
dec
pop
add
sbb
jp
insb
pop
jmp
movsl
mov
or
ja
xchg
pop
into
int
sbb
push
jmp
inc
ja
movsb
ljmp
xlat
and
jne
jge
and
jl
inc
mov
sbb
mov
test
mov
popa
cmp
lods
jno
outsl
or
xor
mov
aam
test
dec
outsl
jge
aas
es
mov
jb
mov
lret
mov
pop
mov
sahf
jno
pop
sar
jge
mov
pop
dec
jle
adc
pop
and
mov
decl
outsb
mov
addb
or
cmp
shl
inc
int
inc
xchg
icebp
bound
pop
push
sub
pop
add
fs
std
mov
mov
cmp
add
pusha
or
mov
hlt
cmp
pop
xchg
leave
lret
xchg
jbe
scas
imul
jmp
shll
xchg
outsl
add
xor
push
sub
fsts
cmp
jle
outsb
fcomps
dec
push
cmp
cmp
clc
in
mov
xchg
push
add
mov
push
in
fisttps
cmp
jbe
lret
inc
aas
xchg
add
imul
sub
xchg
mov
cmp
ret
dec
pusha
push
push
leave
fwait
mov
pop
add
ret
lods
out
lretw
loope
jle
push
cmpsb
int
cmpl
pop
test
jbe
and
loopew
lcall
ljmp
jno
popf
cwtl
js
cmpsb
pop
pop
dec
jae
jmp
fs
lds
mov
pusha
xor
pop
mov
shl
ds
aaa
fsubrl
and
xor
int3
adc
jae
push
adc
xor
cmp
xchg
movsl
out
in
decb
aad
ret
addr16
aaa
xchg
cmp
mov
mov
pop
push
je
xor
sbbl
in
imul
dec
loopne
test
imul
nop
leave
out
pop
jecxz
or
loopne
xor
mov
xchg
cmp
cmp
loope
adcb
cltd
add
push
and
pop
test
sub
push
ljmp
lea
imul
out
xchg
into
mov
xor
es
aas
aad
pop
sbb
aas
push
les
push
jbe
stc
ds
mov
shlb
cltd
cmovne
cwtl
push
cmp
cmp
or
leave
xchg
push
push
rcl
sbb
pop
mov
inc
xchg
push
sbb
loope
inc
cli
outsl
xchg
mov
and
test
lahf
cwtl
fimuls
xchg
jne
sbb
lcall
icebp
repnz
sub
and
xchg
imulb
xor
orl
or
jo
push
hlt
mov
or
iret
push
xor
adc
push
jmp
push
sbbl
adc
idiv
lret
push
sub
jl
and
add
cmp
negb
cs
in
push
addr16
bound
cmp
pop
mov
jg
call
ja
out
nop
or
jns
mov
cmp
fstps
call
fstpl
push
mov
stos
pushf
sbb
mov
fcoml
xor
or
stos
subb
pop
es
mov
pop
or
adc
ret
sub
aaa
pop
jge
xchg
pop
loop
pop
outsb
test
or
mov
scas
jecxz
popa
mov
enter
push
lods
iret
inc
mov
imul
sahf
adc
add
fstpt
loopne
or
sti
insl
cmp
loopne
xor
ss
clc
pop
data16
push
mov
je
inc
dec
sbbb
xchg
and
push
inc
or
and
sbb
inc
or
mov
push
aas
pop
xchg
imul
mov
popa
ja
xor
sbb
out
and
int3
cmp
sysret
dec
xor
frstor
adc
push
loop
ficomps
cmp
gs
into
cmp
mov
pop
or
add
pop
call
outsl
pop
sub
mov
push
orl
jbe
jge
cs
lcall
jge
cmp
push
dec
adc
fcom
fsubr
or
cmp
dec
push
mov
jle
xchg
hlt
je
mov
imulb
xchg
test
cmpsb
into
add
mov
pop
mov
cmpsl
test
or
out
ficompl
stc
mov
jg
adc
out
imull
xor
movsb
outsb
mov
loop
aas
fidivl
push
and
fucomi
sub
push
mov
push
leave
hlt
mov
aas
bnd
loopne
xchg
in
dec
fmull
cmc
loope
sub
je
mov
xchg
mov
movsb
out
arpl
daa
dec
cld
jne
pop
outsb
cmpsb
sahf
shll
leave
cmp
dec
fsts
sbb
inc
jl
adc
js
jae
repnz
mov
decl
or
mov
stos
scas
xlat
xchg
mov
nop
loopne
out
loopne
inc
int3
and
mov
and
xchg
sub
dec
js
xor
lock
jnp
ljmp
ja
jne
into
xor
nop
lods
gs
and
movsb
aas
fbstp
cmpsl
mov
mov
cmpl
xchg
adc
ja
xchg
jle
jnp
jp
fcmovbe
mov
pusha
ja
sbb
sub
push
shlb
push
pop
stos
xor
xchg
out
fistl
mov
test
out
imul
int
bound
pop
inc
les
scas
adc
dec
add
cmp
fdivl
out
sti
mov
fxsave
push
xor
inc
fimuls
cs
jp
in
pusha
dec
adc
add
mov
loop
push
push
fldt
outsl
jbe
or
clc
enter
dec
fsubl
les
and
push
sti
pop
cmp
mov
pop
or
movsl
fisubl
xor
js
jecxz
out
je
inc
push
mov
movsl
xor
cli
sub
mov
add
jne
pop
int3
mov
in
hlt
aam
mov
push
jne
outsb
rcrb
adc
push
mov
mov
ljmp
fstps
pusha
sub
mov
dec
les
stos
test
xor
lret
sar
mul
scas
add
test
mov
movsb
rclb
sub
movsl
flds
jle
les
mov
push
jecxz
subb
imul
jp
xor
fiadds
mov
and
cmpsb
mov
js
mov
repz
test
push
mov
cmp
or
sbb
pop
adc
jg
adc
add
dec
mov
test
and
add
and
dec
push
aas
dec
add
cmp
dec
xchg
pop
push
inc
test
inc
call
jne
push
in
xor
movsl
adc
adc
adc
cmp
lods
adc
inc
and
loop
push
lahf
sub
mov
orb
inc
test
mov
test
dec
outsb
sbb
mov
mov
cli
mov
ja
mov
sub
xor
leave
add
adc
cmp
daa
jmp
aaa
mov
sbb
sahf
dec
mov
inc
sbbl
dec
and
ret
out
imul
sbb
mov
subl
mov
xchg
das
mov
je
int3
pop
push
mov
xchg
lods
lret
js
pop
push
rcr
add
ja
xor
jge
cmp
mov
and
pushf
add
adc
mov
mov
jge
nop
xchg
pop
adc
dec
mov
mov
add
xlat
dec
add
lret
inc
pop
aaa
and
xlat
inc
lock
outsb
sub
loop
cmp
inc
push
add
xchg
ljmp
xchg
push
repnz
and
stc
ret
push
xor
inc
shlb
cmpsl
popf
sub
cmp
sbbb
ss
std
jns
pop
ret
aam
fdivrs
push
movsb
repnz
sbb
mov
mov
or
xchg
jle
lods
jb
dec
dec
add
std
outsb
pop
call
fisttpll
arpl
or
dec
jg
jno
cmp
dec
cltd
inc
cmp
push
xor
loopne
std
pop
xchg
lods
movsb
xrelease
xor
ret
jo
pushf
pop
mov
jecxz
cmp
xchg
dec
mov
pop
loopne
test
shll
mov
and
adc
cli
or
int3
leave
fisubrl
lret
sbb
add
insl
loope
cli
sub
xchg
adc
and
jns
les
aas
hlt
sbb
lcall
lods
lret
inc
adc
not
rcll
lods
sub
adc
jmp
mov
jp
scas
bound
icebp
outsb
mov
xchg
cmc
mov
lock
cmpsb
decb
dec
sbb
and
xor
xchg
mul
sbb
insl
fstps
insb
cmp
leave
mov
push
and
lret
into
hlt
nop
aam
inc
inc
int
cmp
lcall
cwtl
xlat
mov
mov
outsl
cmp
sbb
scas
sbb
cmp
push
mov
push
xchg
xchg
push
int3
dec
add
outsb
cmp
xchg
xor
jo
jp
dec
arpl
es
dec
stos
push
adc
and
xchg
xchg
cmp
popf
cwtl
fidivl
xchg
cmp
lods
adc
rol
stos
pop
lret
push
int3
iret
jo
jecxz
stos
adc
pop
jnp
adc
std
lret
mov
ret
leave
dec
pop
je
test
and
lds
pop
or
mov
dec
sub
push
cmpsb
mov
push
rorl
aad
aaa
jo
into
out
aas
xchg
arpl
pop
dec
mov
shll
sbb
out
scas
adc
test
cwtl
pop
and
adc
aam
aaa
push
decl
pushf
pop
hlt
loope
sbb
cmp
sahf
cld
lahf
mov
rorb
cmp
add
mov
and
ja
ficomps
jmp
out
fcmove
paddsw
xchg
icebp
push
int3
mov
daa
scas
or
insl
rorl
fst
pop
in
insb
mov
ficoms
push
jno
cmp
or
lods
cmpsb
es
xor
jns
repnz
adc
insb
mov
mov
rol
cmpsb
mov
cld
mov
outsl
sti
insb
daa
cmc
js
call
pop
sbb
orb
mov
jp
insl
jmp
aad
movsb
adc
xchg
je
dec
movsl
pop
cmpsl
push
rcrb
pusha
mov
es
nop
mov
mov
aad
pop
in
cmp
loop
je
jae
aam
in
das
xor
stos
negl
imul
cmpsb
push
loope
jo
dec
jbe
es
pop
hlt
xchg
jne
fadds
pop
std
aas
or
xor
dec
stos
stc
sahf
add
adc
out
xchg
mov
cmp
rol
test
pop
push
sbb
sbb
fnstenv
cmp
push
adc
xchg
out
dec
inc
add
inc
clc
jecxz
mov
xor
xchg
mov
cs
xor
jmp
andl
xor
mov
mov
mov
push
or
stos
mov
mov
and
mov
jnp
sub
or
shl
mov
pushf
mov
mov
inc
mov
iret
push
in
dec
les
xor
add
cmp
sbb
pop
mov
add
adc
push
cmp
cmpl
and
leave
mov
in
cmp
in
scas
adc
cmp
in
adc
jne
xor
popf
add
mov
mov
mov
inc
push
fcoml
shll
sub
fsts
jl
mov
dec
mov
mov
push
ljmp
cltd
mov
sub
fdivs
pusha
xchg
clc
mov
insb
pop
imul
xchg
inc
push
or
pop
popf
or
outsl
je
add
xorb
mov
adc
call
xchg
pop
cmpsb
popa
out
sbb
push
ljmp
push
hlt
cltd
lods
shll
mov
call
inc
dec
int3
movsb
jae
lds
push
out
rcll
or
test
mov
mov
and
fildll
adc
ds
or
addl
int
imul
lods
sub
jle
fwait
das
ds
pop
das
arpl
mov
movsl
or
inc
enter
jecxz
mov
sbb
pop
add
pop
jbe
sbb
and
mov
insb
std
imull
out
hlt
xchg
cmpsb
xchg
das
ja
mov
mov
or
loop
jb
pop
dec
dec
ss
sbb
inc
stos
and
fwait
into
or
lcall
cmp
and
imul
imul
aad
pop
jle
rdtsc
jl
sti
jle
push
adc
push
pop
mov
movsl
pop
mov
jns
sar
mov
cld
mov
std
mov
mov
pop
adc
fwait
push
jo
and
mov
mov
scas
ds
or
roll
sub
dec
pop
push
jmp
jecxz
in
outsl
jle
pop
imull
sti
out
test
pop
jle
cmovno
js
orl
adc
sub
pop
hlt
pop
add
clc
push
clc
ror
dec
aas
sub
stc
push
in
lods
cmp
aam
pop
mov
xchg
mov
ljmp
dec
xlat
pop
in
test
mov
add
cmp
pop
cmc
test
and
imul
sub
adc
sbb
pop
push
add
out
add
sub
loope
pop
pop
adc
mov
sbbl
nop
incl
ljmp
inc
cwtl
fistl
test
pusha
adc
pop
popf
push
mov
or
mov
pop
cwtl
cli
iret
mov
jl
arpl
das
fisubrl
cmp
aaa
stc
mov
leave
mov
xor
shrb
repnz
ja
mov
sub
adc
fwait
les
xchg
lcall
or
fildl
cwtl
scas
sbb
dec
jmp
mov
jmp
gs
aas
loopne
push
xor
out
mov
push
pop
loope
shlb
inc
daa
fsubs
and
add
xchg
xchg
or
lahf
dec
push
shl
cmp
mov
add
mov
shrl
shlb
push
jns
movsb
out
aas
mov
xchg
and
mov
dec
xchg
push
lcall
repz
iret
bsr
fdivs
ret
outsb
divb
xchg
pushf
xorb
push
je
pop
mov
shll
sub
or
sbb
sub
push
lea
mov
pop
push
jle
inc
jo
xchg
pop
cmpsb
jbe
iret
jae
mov
pop
push
xchg
and
fmull
mov
mov
xor
push
sbbl
jns
sbb
icebp
jge
rolb
scas
mov
jmp
js
popf
ret
filds
push
ret
xchg
add
and
test
mov
lret
cmc
iret
movsb
pop
negl
nop
mov
xor
std
test
pusha
mov
sbb
aam
mov
je
cmp
aam
out
or
jns
scas
call
or
mov
or
loop
adc
pop
adc
mov
fldl
pop
test
dec
adc
xor
pop
rorb
sbb
mov
xchg
sbb
push
addr16
xor
int3
xor
inc
lock
fcoms
mov
push
mov
movsl
loopne
dec
in
shll
dec
int
sbb
sub
push
repz
push
arpl
jl
jb
sbb
adc
movl
scas
push
jns
loope
in
dec
mov
sbb
int3
jne
mov
lock
xor
in
push
sub
jbe
push
and
mov
pop
les
aaa
push
sub
das
in
iret
outsw
test
inc
scas
arpl
and
and
jns
xchg
xor
jle
xor
pusha
xlat
pushf
sub
inc
lret
xchg
out
sbb
outsl
fwait
rol
sub
cmc
or
pusha
int
xchg
cmp
lea
aas
push
movsb
enter
rcll
mov
mov
jbe
mov
mov
dec
les
xor
pop
in
mov
inc
mov
pop
mov
and
sti
push
jg
and
sub
and
xchg
mov
lret
sti
lahf
xor
add
rcrb
push
outsb
push
mov
cmp
mov
fwait
sbb
cmp
add
mov
dec
xor
xor
mov
sub
jno
fsubrs
cmpsb
pop
pushf
add
jl
and
loope
sbb
mov
adc
push
dec
scas
lock
sub
mov
lds
lcall
repz
out
sub
rorb
stos
or
dec
mov
adc
in
xchg
pmulhuw
mov
mov
fstps
push
sbb
mov
inc
dec
scas
pop
adc
adc
je
or
xchg
outsb
sub
cmp
pop
test
mov
ljmp
inc
xchg
or
adc
adc
inc
stc
push
mov
mov
push
and
mov
mov
loope
or
lret
mov
xchg
test
cs
pop
mov
scas
stos
mov
lea
fdivs
push
pop
push
out
arpl
pop
and
ljmp
jnp
bswap
mov
into
xchg
sbb
sbb
std
out
inc
xor
push
loope
ret
das
sub
cmp
add
adc
cs
jp
jp
mov
xchg
into
mov
push
out
adc
iret
xchg
cmp
shrl
mov
mov
stc
jae
aam
jg
loope
pop
test
cli
fdivl
repnz
cmpsl
mov
test
adc
mov
or
fs
fnstcw
pop
sbb
stc
dec
lret
dec
jmp
inc
mov
into
cmp
cmp
cmp
sbb
sbb
aam
mov
aad
jae
xchg
test
lods
mov
in
js
cmp
mov
sub
mov
ret
sub
pushf
push
mov
aam
xchg
rorb
jb
andl
iret
and
insl
aaa
and
push
adc
data16
inc
jno
aaa
fwait
jns
push
jmp
cmp
sbb
xchg
jp
pop
les
aas
call
ret
outsb
inc
inc
mov
or
add
mov
loop
test
daa
insb
cmp
mov
adc
lods
mov
fisubl
insl
push
pop
sub
fsubl
insl
or
push
outsb
mov
lea
out
xchg
sub
fdivrp
or
mov
cmp
pop
add
sub
rol
testb
repnz
xor
setge
gs
std
xchg
jmp
icebp
jae
dec
xor
add
mov
jle
pop
lods
cmpsl
shll
sbb
xchg
add
mov
jle
fsubrl
dec
rcl
or
lea
push
push
lahf
add
out
push
mov
cmp
push
mov
ss
roll
mov
lret
sbb
jnp
dec
adcl
fisubl
dec
cmp
mov
mov
sub
inc
lods
int
jbe
mov
into
and
push
leave
mov
repz
sub
movb
stos
cmp
lahf
std
mov
push
sar
and
shll
inc
dec
pushf
mov
xchg
dec
push
pop
shr
repnz
mov
cmpb
or
mov
add
and
cld
lock
mov
sbbl
sub
cmpsb
and
fimull
mov
or
sahf
adc
outsl
andl
xchg
xchg
pop
and
repnz
inc
pop
into
fsubrl
divb
xchg
ds
roll
fistpll
cltd
cmpsb
clc
sub
mov
test
insl
xor
push
jg
inc
pop
or
jecxz
imul
or
push
sbb
jecxz
mov
dec
popf
inc
lea
iret
cmpsl
jecxz
jns
xchg
iret
push
xchg
mov
int
and
or
dec
lods
cltd
dec
inc
xchg
cmpsb
adc
call
mov
in
ret
dec
fistl
sbb
cmp
mov
roll
test
mov
stc
sub
gs
push
aaa
mov
insl
lcall
sbb
popf
sbb
aam
hlt
xlat
xchg
insb
daa
xchg
movsb
mov
add
or
insb
mov
jae
xlat
rcrb
pop
or
push
mov
lods
mov
int3
jnp
cltd
movsb
cmp
outsb
sub
jae
mov
sub
lods
shll
js
adc
add
mov
or
inc
xchg
or
sub
push
roll
lods
cmp
push
sarb
aad
popf
add
shlb
jae
fwait
adc
enter
clc
cmp
mov
and
repz
mov
mov
cmp
sbb
fs
pop
stos
adc
jl
pop
pop
mov
mov
xor
jb
repz
mov
aam
aas
scas
push
dec
mov
aad
pop
mov
dec
and
in
js
pop
sar
cmp
in
mov
je
shlb
leave
fs
mov
inc
insl
loop
jns
movsl
sub
ret
int3
cmc
push
and
cli
dec
inc
fxam
pop
pop
test
cmp
or
sahf
adc
add
sbb
adc
mov
jge
shl
pop
sti
dec
or
mov
xchg
orl
outsb
int
sub
sub
arpl
fcoms
loope
adc
cmc
mov
das
shl
xchg
pop
jecxz
popa
repnz
into
inc
es
in
out
aaa
test
lret
adc
push
lret
out
test
pop
add
ret
xor
outsl
mov
or
out
in
movsb
jo
les
jnp
or
ja
cmpb
adc
nop
push
cmp
lret
repz
mov
adc
adc
js
fdivrl
es
mov
xchg
xor
sbb
mov
mov
testl
test
popa
mov
out
ret
es
test
sbb
bound
jno
jbe
fiaddl
lock
leave
push
push
fcoms
add
dec
cmp
pop
mov
scas
push
push
xchg
sbb
repz
imul
hlt
out
jp
adc
stc
dec
fcoms
aaa
or
gs
jae
mov
inc
sub
mov
xchg
fisubrs
adc
dec
pop
popf
mov
popf
rcrb
cld
das
fildl
xchg
cmp
sti
xchg
xchg
movsl
jle
or
adc
in
add
iret
les
xchg
stos
out
sahf
xchg
mov
rcrb
sub
add
pop
adc
xlat
push
nop
ljmp
add
dec
mov
jns
movsb
aam
dec
push
ljmp
bound
test
roll
clc
mov
or
sbb
mov
inc
in
bound
pop
fsubs
enter
xchg
sbb
add
mov
mov
add
out
or
popa
adc
insb
cmp
pop
sub
movsl
pop
sub
pop
mov
mov
add
aad
test
dec
fmuls
jle
and
fcom
adc
popa
add
iret
sbb
adc
sbb
and
shl
ret
add
ret
cld
push
and
pushf
jp
sarb
cmpsb
mov
pop
shlb
shl
loop
sub
jns
mov
or
es
loope
mov
push
sub
xor
mov
adcl
in
jmp
jno
inc
or
nop
inc
jo
xor
mov
mov
lea
push
sti
out
shl
insl
icebp
fcomps
fwait
aam
inc
or
add
xchg
mov
push
testl
rcr
stos
xchg
test
pop
pop
and
sbb
out
lcall
pop
popf
cltd
xchg
or
pop
mov
jb
enter
jmp
int3
dec
movsb
std
frstor
pop
inc
xchg
inc
mov
insl
testb
xchg
jp
rcll
inc
sti
lock
jl
pop
nop
data16
pop
pushf
sub
in
lods
jecxz
out
mov
push
arpl
rcll
movsl
popf
fdivl
xchg
add
out
pop
xor
sub
pop
in
popa
or
xor
cwtl
sarl
movl
inc
inc
mulb
sbb
mov
lds
loop
mov
lock
adc
mov
andl
push
sub
inc
fsub
imul
mov
jge
fisttps
test
add
push
std
out
dec
clc
sub
adcb
mov
movsw
pop
push
inc
add
icebp
adc
push
sbb
imul
arpl
shl
rclb
inc
and
into
sub
fsubr
repnz
lahf
rorl
ror
fs
push
ror
xchg
lcall
pushf
jne
mov
mov
cmp
ds
jge
ficompl
sbb
jne
push
aas
repz
leave
lods
inc
bound
xchg
popa
cs
adc
aad
cmp
jmp
pop
inc
push
mov
jle
pop
inc
mov
lahf
dec
mov
loopne
rcll
clc
lock
jbe
xorl
inc
loopne
xor
mov
pop
cmp
sub
test
scas
push
xor
xchg
mov
in
lcall
pop
xchg
jmp
sub
sti
sub
cld
pop
call
adc
test
lds
incl
daa
stos
jmp
in
mulb
cmp
clc
aam
mov
sub
push
jno
xor
shrl
mov
ret
sbb
push
jg
cmc
mov
andb
cli
aas
mov
jbe
lods
pop
sbb
mov
mov
mov
mov
cmp
aam
mov
daa
mov
repnz
dec
inc
mov
xchg
ljmp
add
inc
xchg
push
addr16
test
pop
jp
sub
add
ja
adc
adc
dec
imul
or
testb
negl
cmp
repnz
cmp
push
loop
cmp
pop
dec
xchg
and
mov
pop
xchg
cmp
scas
jae
mov
jne
scas
and
mov
push
xchg
sbb
bound
add
imul
dec
adc
mov
fadds
xchg
mov
pop
add
pop
stos
cmp
xchg
in
outsb
adc
subb
mov
clc
push
leave
les
ljmp
mov
sahf
into
popa
loop
insl
push
rcrb
adc
pop
mov
cmp
stos
mov
add
outsb
das
xchg
popf
aam
ret
jmp
cmc
jp
inc
cmp
outsb
in
jmp
jno
cmp
cmpsl
jbe
mov
enter
in
push
sbb
mov
jno
mov
xlat
es
flds
lcall
xor
sub
scas
mov
cld
mov
or
js
mov
test
sub
adcb
outsb
clc
bound
sbb
rcrb
dec
ss
cmpsb
in
dec
outsb
cs
mov
enter
mov
cmpsl
sub
xor
pop
and
icebp
popa
adc
inc
ffreep
cmp
mov
push
push
pop
pop
dec
sbb
mov
mov
aam
js
out
inc
dec
fcmovbe
sub
ret
sub
sub
lea
outsl
scas
sbb
scas
in
jl
jmp
push
adcl
addb
and
cs
mov
xor
add
pushf
add
xlat
test
ret
pop
fmuls
aas
xchg
mov
mov
push
iret
enter
das
sbb
rcrl
ficoms
add
mov
jb
and
mov
mov
adc
dec
xor
xor
lods
scas
pushf
js
push
xchg
in
dec
hlt
jne
xchg
in
mov
lahf
jo
jg
mov
fldt
xor
cmp
fists
enter
popf
push
mov
pop
cmp
sub
or
and
mov
popf
notl
arpl
dec
imul
shlb
cltd
xorb
mov
adc
in
loop
jns
jp
cwtl
cmp
clc
imul
imul
mov
mov
push
xorb
xchg
mov
push
subl
mov
mov
js
inc
insb
fiadds
push
scas
jp
xor
stc
pusha
int
lret
push
test
pop
cmp
jne
scas
stc
js
mov
pop
test
shlb
xchg
add
and
movsl
mov
xchg
fistpll
xchg
xor
gs
adc
aam
pop
pop
mov
dec
push
pushf
adc
xrelease
imul
pushf
negb
and
aad
xchg
or
pushf
repnz
and
lcall
push
push
dec
test
xchg
scas
out
fldt
or
lods
adc
push
mov
xchg
pop
adc
mov
rcll
adc
dec
push
rcrl
negb
mov
scas
xchg
adc
cwtl
popf
ja
repnz
pop
cmp
push
xchg
inc
test
orl
insb
mov
pop
enter
fldcw
popa
dec
scas
add
frstor
sbb
out
leave
jae
jg
mov
movsb
mov
fmuls
mov
push
inc
iret
adc
adc
sbb
mov
cli
rcrl
fstl
push
xchg
call
sbb
mov
js
xlat
xchg
inc
loope
lock
call
fdivl
and
cltd
ret
add
movsl
in
rcrb
mov
ffree
arpl
adcb
inc
movsb
shll
enter
pop
pushf
xchg
and
outsb
dec
xchg
out
push
movsl
cmpsl
sub
cmp
adc
fiadds
jmp
pop
push
add
fdivrl
or
shlb
pop
lahf
xorb
adc
push
jno
xchg
incl
xchg
dec
rcrb
sbb
cmp
sahf
xchg
cmp
pop
add
pop
lret
push
push
pop
enter
mov
push
push
mov
gs
and
or
incb
push
mov
ret
sbb
push
scas
lods
or
test
out
or
mov
addl
std
test
faddl
lret
js
shlb
add
shl
xor
cmp
test
sub
les
xchg
mov
jmp
in
mov
dec
sahf
add
pusha
and
addr16
inc
fidivrl
fs
es
mov
mov
aas
or
pop
pop
sub
or
mov
std
and
cmp
jecxz
stos
popa
sub
xorl
in
mov
mov
inc
sub
popa
repnz
jae
inc
dec
inc
cmc
push
push
sub
stos
and
add
mov
ss
mov
push
xchg
call
gs
fs
push
divl
inc
lock
iret
jecxz
sti
xor
mov
ret
jbe
loope
out
inc
push
insl
in
or
push
sbb
sbb
loope
xchg
xor
dec
repnz
movsb
hlt
or
cmp
movsl
daa
ret
clc
mov
xchg
repnz
cs
adc
cmpsb
and
xor
sub
sub
jae
std
push
cs
dec
mov
sbb
adc
mov
in
pop
mov
repnz
lods
jp
mov
add
jne
out
add
sub
rcrb
push
aas
sahf
lea
outsb
pop
jmp
sbb
dec
dec
imul
lods
mul
call
roll
mov
xor
sub
or
addl
xlat
enter
jno
pop
loopne
xchg
lret
mov
add
pop
add
mov
mov
imul
fstp
mov
mov
jl
mov
sbbl
sbb
popf
jb
pop
loopne
cs
mov
into
sbb
cmp
or
mov
push
stc
mov
and
inc
icebp
ds
or
ljmp
inc
sbbl
adcl
das
popf
movsb
pop
cmpsb
pop
ds
push
pop
adc
insb
jp
dec
addr16
dec
test
pop
mov
enter
cmp
xor
cmp
stc
fists
mov
xchg
inc
std
jno
mov
mov
cmp
out
mov
fcoms
mov
mov
mov
aam
imul
push
daa
push
hlt
lds
rolb
aaa
out
loopne
movsl
jecxz
into
jne
scas
inc
scas
and
dec
aad
sub
popa
or
imul
adc
das
scas
add
or
jmp
mov
addr16
adcb
cmc
dec
arpl
repz
movsl
sbb
jns
dec
leave
aad
xchg
arpl
mov
mov
aad
jle
sub
leave
dec
into
add
outsl
pop
jmp
ljmp
pop
xchg
int
inc
adc
test
mov
rcll
ja
pop
sarl
pop
mov
and
and
mov
xor
and
and
fucomp
push
je
push
insb
outsl
lahf
inc
test
add
push
hlt
mov
xor
icebp
daa
out
popl
mov
dec
and
inc
testb
cmpsl
sbb
jmp
jle
out
scas
sub
outsl
sbb
imul
inc
out
fmuls
insb
jge
xlat
push
jmp
sub
test
fcomip
loope
mov
lahf
adc
aas
jle
in
cmp
ljmp
ja
iret
and
or
lods
data16
stos
pop
push
mov
lahf
mov
repz
sbb
lock
mov
movb
sub
ljmp
dec
shrb
lock
out
sbb
push
insl
add
aas
shll
into
into
sarb
cmp
lods
inc
mov
add
cmp
jmp
stos
scas
mov
adc
pop
cmp
clc
rcl
jbe
popf
cmp
jmp
lcall
sbb
adc
mov
lock
lods
aaa
sbb
dec
push
insb
xchg
dec
mov
lock
stos
popf
repz
fdivr
icebp
ja
xor
push
jecxz
xor
mov
aad
gs
aas
xchg
movsl
outsb
xor
repnz
jp
jae
add
stos
push
jb
inc
pushf
and
shlb
addr16
push
call
sbb
insl
mov
cld
mov
mov
ret
cmp
push
fwait
pop
sub
adc
lcall
sbb
sti
or
dec
test
lods
cmp
gs
pusha
pushf
pop
lret
mov
les
inc
xor
sbb
je
stc
jns
into
mov
pop
jg
fists
jecxz
or
mov
and
pop
rclb
stos
cld
sub
jno
pop
ret
jo
cld
and
pop
mov
add
cli
lret
and
inc
lahf
mov
bound
pop
shl
frstor
sahf
enter
sbbl
mov
out
jbe
shll
cs
imul
inc
add
outsb
les
mov
mov
testb
jmp
xor
sbb
leave
sub
bnd
insb
jecxz
in
in
mov
jle
cmc
inc
xchg
ret
jmp
std
xchg
jns
sarl
aaa
pop
test
adc
jmp
iret
xor
lea
add
cmp
add
mov
and
pushf
out
gs
daa
dec
mov
dec
les
cmp
jl
dec
das
and
adc
pop
sbb
or
pop
shl
mov
dec
or
xlat
cmp
mov
in
into
lea
popf
movl
pop
add
xor
test
les
pop
stc
pushf
daa
loop
divl
jbe
xor
and
insb
arpl
mov
movsl
adc
inc
jle
outsb
in
std
and
outsl
adc
sub
jae
jmp
and
faddp
testl
icebp
cs
mov
fs
shll
sbb
movsb
jge
lea
lret
jne
xor
push
fimuls
adc
roll
call
stc
add
sarb
jle
cmp
push
mov
push
inc
sub
test
call
mov
fcmovu
rep
cmpsb
jle
jge
cmp
pop
sti
fildll
dec
mov
in
dec
arpl
in
inc
andl
popf
sbb
mov
addb
iret
or
adc
sub
ljmp
movsl
loopne
aas
pop
pop
loopne
xor
cld
std
push
mov
rcll
popf
aaa
mov
xlat
mov
in
incb
pop
sub
out
ja
lret
pop
dec
rolb
fs
int
sbb
dec
iret
stc
outsl
mov
xchg
cmp
pop
adc
fdivs
and
jp
and
rolb
xchg
ss
push
cmpsl
sbb
lods
pushl
and
fiadds
cmpsb
aas
cmc
iret
int3
leave
inc
jb
cmpsb
xchg
push
mov
shlb
cld
test
sub
cmpsl
lea
xor
jbe
repnz
gs
adc
jp
lret
leave
and
and
jo
lret
inc
adc
fidivl
sti
adc
movsb
mov
sbb
xor
mov
mov
adc
addr16
add
ficompl
push
mov
data16
jge
imul
push
mov
jb
das
pop
movsl
inc
lret
jg
repnz
aad
xchg
xor
imul
mov
es
dec
popa
xor
je
push
lahf
mov
movsb
sbb
ss
mov
lret
inc
fcmovnb
enter
inc
movsb
inc
clc
lret
mov
scas
mov
add
cwtd
adc
push
icebp
dec
fsubrp
ret
xor
mov
sti
rclb
stos
sub
ret
loopne
ret
shll
stos
xchg
push
sbb
fwait
add
push
aam
adc
pop
dec
loop
push
cmp
int3
cmp
mov
popa
add
lahf
pushf
add
lods
out
cmpsb
xchg
inc
scas
inc
jmp
insb
mov
jbe
and
ljmp
jl
xorb
enter
scas
mov
adc
jo
and
pop
xor
jne
call
inc
dec
jbe
aad
push
push
mov
adc
cwtl
push
xlat
div
push
cmp
test
push
xchg
das
jl
xchg
daa
daa
inc
push
and
outsl
cmc
dec
arpl
push
loop
xor
addb
jne
out
push
adc
mov
xchg
fldcw
xlat
adc
bound
andb
outsb
cmp
arpl
in
rol
jge
imul
pop
mov
insl
cmpb
cmp
ds
int
movsl
push
out
mov
adc
pop
addr16
mov
in
test
repnz
cwtl
sub
mov
or
sbbl
push
fidivl
data16
push
xlat
loope
cmp
push
sbb
jmp
inc
insb
pop
scas
jmp
daa
loop
dec
jle
rolb
sbbl
leave
cmp
sarb
mov
dec
adc
push
mov
fiadds
xchg
jns
fwait
sbb
xchg
enter
xor
cmpsl
adc
mov
in
cmp
hlt
jp
jge
mov
shr
aam
cmpsl
outsb
xchg
lret
cmp
fs
stc
fstpt
or
pop
push
js
pop
pop
jl
lods
or
int3
in
pushf
imul
repz
jl
fwait
test
notl
xor
add
add
add
lea
ret
or
mov
insl
movsb
push
aaa
stos
push
ja
pusha
imul
cli
adc
jp
mov
push
nop
lret
xor
cs
push
mov
sbb
lea
loopne
push
sbb
pop
jbe
cmp
pop
and
sbb
test
fwait
insl
xlat
inc
push
dec
dec
pop
adc
mov
pop
jnp
mov
idivb
arpl
in
out
lret
imulb
es
jmp
inc
inc
into
scas
push
mov
arpl
and
xchg
addb
call
leave
xchg
cmpsb
jnp
inc
jl
fistpl
mov
jne
jbe
push
hlt
addr16
fisubl
dec
out
int3
mov
enter
arpl
fcmove
dec
adc
je
sbb
aam
out
test
lods
stos
repnz
xchg
fistpll
and
xor
dec
fcoms
ret
addr16
sbb
sti
jae
into
jecxz
push
int3
ds
out
or
add
dec
adc
imul
icebp
rcr
ret
das
push
sbb
or
push
in
icebp
in
aam
dec
repnz
push
fstl
xor
jge
test
pop
and
daa
and
sub
xchg
call
lcall
data16
out
mov
sbbl
in
stc
fbld
shrl
pop
outsb
pop
stc
std
repnz
mov
jo
shll
pop
imul
mov
outsl
imul
xchg
out
or
cltd
mov
scas
das
xor
sbb
push
int3
xor
mov
xchg
push
push
mov
mov
stc
push
mov
cwtl
fsubs
movsl
sahf
cltd
and
mov
mov
in
push
rcrb
mov
and
test
cs
xchg
xlat
scas
jno
adc
out
aad
add
scas
fwait
daa
les
add
out
stc
mov
mov
lret
ror
stc
out
call
push
mov
xchg
mov
xor
sarb
xor
jb
jbe
nop
inc
addr16
sti
imul
leave
xchg
xor
dec
fmulp
repnz
test
cmp
or
pop
stos
xchg
mov
push
cmpsb
mov
xlat
add
add
pop
pop
push
jns
cmp
sub
gs
jbe
jns
xor
mov
push
or
out
fs
adc
lock
mov
pop
xchg
cmp
xor
adc
pop
mov
pop
mov
mov
insb
mov
out
outsl
jbe
sbb
and
xchg
filds
add
push
std
icebp
lret
sbb
dec
sub
adc
pop
inc
and
sub
pusha
jb
push
ja
dec
inc
in
mov
push
lret
push
mov
mov
jp
xor
push
xor
xor
cld
sbb
mov
jns
jp
push
xchg
cld
pusha
stos
test
jo
int3
movsl
inc
pop
mov
pusha
push
lds
fbstp
inc
add
push
enter
add
pusha
inc
mov
loop
push
test
mov
movsb
sarl
xor
lods
adcl
jl
jmp
or
dec
dec
movq
int3
xor
ja
or
jecxz
add
and
sbb
push
aas
push
push
ja
pop
jne
imul
repz
mov
fdivrs
inc
jnp
jne
push
jnp
shrl
mov
pop
xchg
sarl
lods
sub
movsl
sti
sbb
repz
xor
inc
cld
movsb
jno
dec
aas
cld
cmp
push
mov
lcall
xorb
jge
xchg
pop
nop
dec
mov
xlat
push
fadds
fnsave
ret
mov
dec
adc
jge
adc
call
adc
cmp
inc
inc
mov
out
jge
in
sub
xchg
add
hlt
sbb
add
dec
add
addr16
div
mov
mov
cmp
or
push
nop
ret
pop
jbe
int3
divl
lods
inc
rcll
inc
and
xor
xor
scas
sbb
mov
add
pop
or
icebp
mov
cmc
in
sti
sub
jg
out
fdivrs
aam
shll
xchg
cs
mov
jmp
adc
data16
test
xchg
mov
in
scas
sub
cli
mov
aas
cmp
xor
stc
add
jb
mov
sti
mov
or
adc
mov
jb,pt
inc
lock
pop
mov
es
cmp
int3
fldcw
jb
bound
sub
mov
mov
cmp
loopne
push
jp
lret
and
out
clc
lds
les
mov
mov
xchg
in
push
call
lods
in
into
mov
xchg
iret
rcll
fidivs
pushl
jecxz
andb
xchg
mov
out
outsl
pop
mov
push
jno
xor
pusha
dec
scas
and
adc
mov
movsb
xor
jno
push
inc
les
cmp
pop
cmp
mov
out
and
or
arpl
jbe
loop
sbb
sub
or
iret
inc
pop
jns
adc
in
mov
add
mov
or
push
icebp
jne
inc
xor
aas
and
daa
push
xor
into
pop
movsl
les
cmp
add
jnp
xchg
pop
or
ljmp
int
xor
cld
cmp
mov
fiadds
lcall
dec
leave
cs
test
mov
stos
push
inc
movsb
rclb
cmp
roll
sbb
cmpsb
jo
arpl
jp
test
lods
shll
dec
dec
scas
fbld
stos
sbb
push
and
add
ds
cmp
rcll
repz
and
enter
cmpsl
popl
in
jl
js
fsubs
aad
xchg
jo
mov
sub
dec
ss
in
sub
push
adc
push
xchg
mov
inc
jge
les
mov
loop
lahf
fisubs
push
cmp
and
fiaddl
push
arpl
addl
sbb
lea
scas
lret
call
and
addr16
mov
add
out
mov
add
xchg
jg
or
icebp
adc
cmpsb
faddl
stos
dec
sub
jb
xchg
cs
jbe
mov
loope
lahf
pop
dec
shlb
std
sub
mov
insb
and
je
rolb
enter
pop
dec
dec
pop
lret
push
imul
mov
mov
push
mov
push
xor
scas
xchg
and
popa
push
mov
addr16
and
js
push
test
push
mov
mov
fs
outsl
ds
push
lahf
and
jae
out
xor
and
rcll
pop
in
cmp
sbb
les
pause
cmp
les
push
sub
out
icebp
xchg
sti
aad
imul
mov
lcall
mov
rcr
fisubs
pop
fidivl
adc
fiadds
cwtl
lods
je
repz
idivb
push
sbb
pop
jle
jne
jl
test
push
or
sub
out
sbb
cmc
adc
mov
mov
xchg
testb
dec
aaa
stos
pop
pop
mov
mov
and
xor
jp
rcrl
bound
add
out
inc
shlb
aad
pop
inc
out
add
out
fmull
addr16
cwtl
or
xorl
inc
mov
bound
mov
insb
dec
popf
lds
stos
jp
jg
dec
xor
data16
push
stc
test
test
js
bnd
xor
enter
add
cmp
das
das
add
jo
xchg
daa
out
inc
jmp
mov
or
cmp
lods
movsb
mov
lret
mov
ret
jo
jge
xchg
pop
inc
in
or
rcrb
jne
mov
add
scas
fisubl
in
es
sbb
mov
dec
call
pushf
sub
dec
push
dec
sub
je
mov
xlat
shll
in
mov
ret
subb
add
xchg
pop
sbb
fcoms
add
xchg
adcl
outsl
enter
xor
mov
xor
movhps
jmp
shl
lea
adc
fcmovnbe
shl
adc
pusha
sbb
mov
sbb
cmp
lret
mov
xor
clc
mov
or
or
and
dec
or
loopne
sub
jecxz,pt
test
aam
incl
lret
mov
rcrl
leave
stc
add
cmp
mov
lcall
pop
scas
push
pop
aam
add
mov
push
mov
dec
ljmp
mov
jecxz
cwtl
arpl
fidivl
xlat
das
cmpsl
out
stc
pop
xor
fiadds
cmp
or
mov
fwait
sti
lock
xchg
insl
mov
lret
xor
lods
ret
fdivrl
jmp
push
loop
mov
movsl
mov
sub
mov
cmpsb
push
mov
xchg
sahf
outsb
in
xchg
bound
mov
ret
pop
repnz
xor
push
jo
and
imul
js
fistl
idiv
insb
mov
jle
lods
scas
lds
sub
push
pushw
inc
ja
jb
shll
stos
bound
push
push
inc
das
xor
push
frstor
repnz
pop
adc
push
pop
dec
fisttpll
sbb
xchg
test
lret
mov
fwait
outsl
loopne
dec
movsb
and
int
or
jae
add
and
lret
arpl
add
jns
or
mov
push
repnz
or
mov
add
mov
jnp
pop
movsb
pusha
xor
nop
dec
int
inc
mov
jle
lds
enter
jno
xchg
je
xor
out
jns
fbld
jmp
ss
ljmp
pop
je
xchg
cmp
mov
mov
addr16
mov
data16
fxch
shr
mov
popf
xlat
adc
mov
cmp
jbe
fldl
lods
gs
cmpsl
lods
jmp
mov
cltd
cmp
adc
in
dec
dec
imul
mov
scas
sbb
rcll
fbld
or
add
xor
cltd
mov
into
pop
fsubrs
push
add
cmp
rorb
jg
xor
subl
aam
add
mov
repnz
cltd
bound
xchg
lahf
pop
jae
push
inc
test
int
jnp
jmp
xlat
subb
cmp
testl
pop
cwtl
mov
js
xor
pxor
scas
scas
sahf
adc
mov
mov
dec
fcompl
imul
jne
and
lods
pop
dec
xor
imul
jge,pn
jae
and
sub
mov
and
jmp
lahf
push
xchg
push
jl
jp
pusha
xchg
fwait
cli
jo
cmp
and
popa
mov
jmp
add
pop
scas
mov
sub
je
mov
adcl
test
xchg
sbb
pop
dec
mov
and
call
cmp
xor
pop
sbb
add
cmp
lds
js
push
or
or
int3
push
mov
inc
insl
out
mov
xchg
xor
adc
scas
stc
imul
dec
sub
push
les
mov
ret
xor
clc
addr16
xlat
lret
jp
imul
push
cli
cmp
shlb
in
xchg
add
sub
and
xorb
lods
sub
mov
cs
add
mov
push
loope
push
or
cli
fnstsw
add
sbb
test
sbb
cmp
imul
sbb
jns,pt
mov
gs
cmpsl
cli
dec
ss
outsl
fimuls
push
jl
or
add
pop
mov
push
and
mov
sub
mov
jae
sub
movsb
arpl
pop
jl
insl
cmp
jns
nop
add
lock
bound
cs
repz
popl
cmp
scas
jo
pop
push
test
inc
xchg
sub
test
jne
adc
repz
inc
mul
xchg
xchg
sahf
push
ljmp
sbb
icebp
sahf
and
jl
mov
shr
xchg
dec
add
push
jecxz
push
movsl
cmp
aaa
mov
mov
xor
or
sub
mov
in
in
imul
lea
add
lcall
fiaddl
cs
fsts
jle
call
push
into
mov
mov
xlat
pop
or
sub
add
adc
test
ficoms
out
push
fwait
arpl
lahf
xchg
jmp
shr
imul
pop
popf
fildll
push
jne
or
add
push
orb
xor
pop
jmp
jo
out
or
jne
call
add
jne
inc
and
pushf
cwtl
mov
push
movsb
inc
mull
out
push
xchg
inc
jge
out
adc
cmpsl
pop
ret
pop
jmp
in
test
call
mov
imul
xchg
pop
and
imulb
in
xor
cmp
lods
push
ljmp
bt
xor
ljmpw
xor
adc
xchg
sti
std
fbld
jns
ret
lret
icebp
cld
cli
lcall
fwait
nop
mov
mov
mov
push
mov
mov
add
sbb
jb
push
push
and
fdivs
lahf
out
daa
push
sarb
sub
xchg
test
shlb
into
in
fildll
insl
cmp
fidivrs
test
sbb
loopne
sarl
mov
rcrb
push
insl
test
inc
call
out
es
arpl
xchg
fucomp
rcl
push
inc
ret
sbb
push
xchg
das
cmp
iret
or
mov
sub
loop
mov
add
int3
imul
int3
je
pop
es
lods
pop
inc
icebp
in
and
inc
xor
out
arpl
outsl
mov
push
cmp
aam
in
lcall
xchg
xchg
out
out
xor
adc
xlat
inc
stos
push
sbb
outsl
sti
push
inc
jb
es
std
in
sub
dec
sbb
in
or
inc
repnz
push
jg
and
mov
or
dec
xor
clc
mov
and
std
and
repnz
sahf
addl
mov
scas
mov
repz
jae
mov
xor
cmc
push
mov
hlt
ficompl
xor
xchg
adc
xchg
imul
mov
pop
cmp
pop
aam
popa
xor
jmp
pop
adc
daa
cwtl
sbb
int3
daa
add
shlb
dec
push
in
pop
leave
mov
inc
push
shrb
xor
push
xchg
sbb
clc
mov
repz
nop
adc
mov
decb
mov
xor
rcrl
bound
sahf
pop
les
dec
rolb
push
sti
fsubrs
cmp
das
mov
mov
push
je
js
mov
adc
out
popf
mov
add
enter
or
pop
mov
mov
adcl
negl
pop
and
inc
subl
push
mov
sub
imul
add
dec
sbb
jle
mov
hlt
adc
push
adc
jb
mov
mov
adc
mov
fldcw
xor
in
outsl
add
cld
loope
and
sahf
and
std
mov
pushf
outsl
sar
or
adc
adc
in
adc
mov
lock
inc
aaa
js
mov
clc
xchg
add
mov
xchg
mov
or
scas
add
cmpsb
in
inc
inc
or
dec
scas
jo
sub
jecxz
jge
imul
lea
nop
inc
pop
pop
or
mov
es
rclb
std
sti
fwait
add
sub
jne
out
and
fdivrs
ss
push
pop
push
inc
push
push
loopne
sub
fisubrl
ja
adc
or
cmpsb
lds
sahf
jmp
ljmp
dec
sbb
xchg
rol
popa
lret
inc
pop
fdivrs
cwtl
pop
jnp
inc
sbb
loop
fmul
and
into
jl
sub
repz
std
popf
das
loop
ficompl
sub
xchg
mov
adc
xchg
std
push
test
xor
push
jns
push
cltd
dec
leave
push
jp
arpl
xor
lret
cmpsb
ficoml
or
cmpb
loop
lret
xor
xchg
out
push
cltd
dec
aam
or
add
push
push
jnp
push
neg
pop
mov
pmullw
enter
xchg
out
popf
pop
or
or
addr16
or
loope
shl
cmpsb
sub
mov
adc
scas
push
push
jb
add
cli
data16
mov
fidivl
test
addb
push
data16
insl
inc
mov
test
mov
jnp
add
mov
in
dec
jno
pushf
sti
dec
gs
fmull
jp
mov
int
sub
adc
jb
shr
loop
push
out
dec
pop
mov
cmpsb
and
es
jnp
sub
call
scas
in
shlb
cmp
rorl
in
int3
sub
dec
frstor
mov
and
movsl
jne
adc
hlt
lods
sbbb
mov
mov
notl
mov
push
lret
jge
push
ret
cli
scas
cmpl
jae
sub
cmp
cli
cmp
jns
std
jmp
js
cmp
aas
std
inc
ret
daa
jecxz
push
outsb
xchg
cs
repnz
lock
call
fldt
dec
add
push
popf
push
lcall
cs
xchg
xor
sub
shlb
in
test
rorb
mov
mov
aaa
test
mov
mov
fiadds
mov
fldenv
insb
mov
or
sbb
sbb
push
addr16
xchg
inc
bound
mov
and
xchg
or
mov
add
push
dec
jg
mov
in
mov
mov
in
mov
cmp
push
aad
mov
inc
push
cmpsb
das
sub
pop
inc
push
jge
loop
cmp
iret
das
push
punpckhbw
sar
push
test
pop
sub
inc
stos
sub
inc
and
fs
mov
pop
out
sub
out
mov
stos
dec
push
push
sbb
cmpsb
insl
in
cmp
pop
popf
lcall
add
dec
mov
outsl
jg
sahf
push
xor
and
jle
push
cmp
lods
pusha
jae
push
mov
cmc
rcll
andl
pop
dec
pop
mov
mov
std
mov
inc
jg
and
jg
inc
xor
notl
mov
xor
and
mov
mov
or
cli
xchg
push
xchg
xchg
jnp
fs
adc
or
out
gs
and
inc
pop
lock
pop
pushf
sbb
add
add
aaa
jae
fadds
fisubs
stc
mov
mov
fcomps
cltd
sti
and
mov
cmp
test
sbb
jge
push
cmp
cmp
cmpsl
push
movsb
iret
outsl
adc
dec
or
mov
mov
adc
popa
sub
ficoms
out
cli
xlat
and
fdivl
cmp
cmpsb
loop
or
rcr
or
adc
vcvtps2qq
sbb
int3
cmp
pop
out
xchg
and
xor
jbe
push
mov
sbb
pop
push
ja
push
mov
adcl
cmp
mov
pop
bnd
xchg
add
mov
jecxz
je
stos
cs
sub
and
push
push
sbb
lea
cmpsl
insl
sub
xchg
or
push
outsl
vbroadcasti64x4
cli
dec
popa
fidivs
xchg
shlb
and
popa
xor
jge
adc
mov
sub
xor
es
xor
stos
ljmp
mov
jo
xchg
push
mov
mov
xchg
cmc
pushf
inc
mov
jl
test
push
cmp
jg
insl
xor
test
imul
lds
repz
lcall
pushl
mov
xor
pop
adc
in
cmp
std
ficoms
and
mov
sub
xchg
leave
out
cmc
subb
jne
lcall
or
jno
push
mov
push
test
or
jle
inc
inc
jb
in
lds
out
mov
mov
addb
jne
std
shlb
in
cwtl
xchg
or
fists
sbb
push
daa
xor
push
aaa
add
jg
lds
repz
push
sti
xchg
in
mov
xor
jmp
sti
aam
sbb
mov
movsb
cmp
flds
aad
test
inc
inc
dec
rcrb
repnz
mov
popa
movsl
ja
pop
sahf
mov
mov
testl
inc
inc
push
xchg
sub
loope
cltd
or
inc
roll
negl
dec
mov
and
push
sub
movsb
out
xchg
jmp
xor
adc
fmul
and
data16
sbb
xchg
dec
bound
repnz
mov
xor
mov
pop
sbb
je
mov
lods
mov
dec
or
adc
push
shrb
out
xlat
rcl
inc
sbb
add
push
rcll
gs
dec
outsb
xchg
mov
adc
jnp
mov
or
pop
cld
mov
or
es
mov
cmpsl
nop
clc
iret
xor
mov
mov
push
mov
push
lds
dec
mov
add
movsl
pop
inc
mov
lret
xor
adc
mov
jo
int3
inc
push
mov
dec
jecxz
scas
divb
xorb
mov
popf
lretw
pop
movl
pop
or
jp
cmp
mov
dec
enter
mov
jb
aam
aaa
adc
sbb
mov
das
sub
pop
dec
jl
dec
test
outsb
pop
adc
mov
push
pop
push
shrb
mov
and
mov
sbb
fidivs
cld
arpl
cltd
jmp
cs
sti
mov
leave
push
mov
aas
movsb
push
mov
sbb
sbb
adc
frstor
xor
push
lret
xchg
cmpsb
andl
sbb
psubw
push
push
fs
loopne
pop
int
xchg
sar
mov
add
nop
das
out
pop
loope
gs
sub
sti
stos
fdivl
jns
xlat
pop
cwtl
push
adc
inc
imul
jge
jmp
cmp
jmp
test
repz
and
popf
jecxz
add
xchg
and
cwtl
pop
mov
mov
sbb
fsubl
enter
mov
mov
cs
ja
ljmp
ja
iret
dec
enter
out
daa
in
sarb
rol
add
mov
loop
cmpsb
mov
push
sub
dec
das
add
lret
sub
sbb
xor
lea
shll
dec
ljmp
sbb
adc
rcll
or
cmp
ljmp
stos
inc
cwtl
mov
into
lcall
mov
and
stos
add
lcall
mov
or
and
jbe
cmpsl
mov
sub
cmp
sub
lahf
xlat
das
xchg
int
xchg
push
cmp
pushf
xchg
and
vmwrite
push
adc
cmc
sbb
jmp
jnp
lock
fs
or
arpl
and
cli
cmp
fildl
movsb
mov
jg
mov
dec
lods
mov
jmp
or
sub
sub
mov
sub
jge
in
iret
in
add
xlat
inc
cmp
fdivl
inc
ja
sbb
scas
cmp
scas
push
cpuid
insl
sub
scas
jns
and
adc
push
inc
and
call
int
es
add
sub
in
in
xchg
pop
xor
cmc
mov
popa
movsb
adc
cmp
shlb
dec
sbb
nop
add
or
add
add
arpl
es
pushf
ret
xor
hlt
dec
cmc
and
pop
add
add
cwtl
dec
jb
loopne
dec
ficompl
sbb
add
mov
in
pop
or
out
stos
mov
or
sub
add
andb
xor
xor
stos
bound
jecxz
dec
mov
jo
add
int
cltd
cmc
pop
cmc
mov
adc
cmpsl
call
sub
test
jge
fimull
mov
cmc
mov
jae
dec
mov
dec
jp
inc
and
adc
out
stos
sbb
lahf
lahf
sub
mov
xchg
xchg
pop
dec
dec
push
mov
mov
dec
pop
sbb
lods
push
subb
xchg
lret
aad
cmp
aad
xchg
xchg
jg
add
scas
in
popf
mov
ss
cmc
ds
jnp
dec
es
shll
call
pop
adc
cwtl
les
xchg
test
fwait
call
pop
stos
inc
xor
call
and
andb
and
jne
lds
and
movsl
test
test
andb
outsl
or
cmp
adc
andl
aam
out
jb
fisttps
push
or
in
icebp
arpl
mov
mov
mov
cmpsb
loopne
rcl
fs
cmpsl
out
outsl
mov
popa
aaa
cmp
call
mov
fwait
xchg
pop
out
popa
add
xor
mov
mov
lahf
fsubrl
aas
icebp
xchg
mov
dec
arpl
mov
xchg
mov
ds
sbb
lds
push
hlt
fldcw
adc
aad
sbb
cli
mov
dec
fmul
mov
jo
xor
or
mov
int
xor
fistpll
pop
push
out
iret
cltd
xchg
movsb
ds
mov
in
or
ret
and
sbb
in
aam
pop
arpl
cmp
pop
xchg
dec
push
sbb
push
push
shr
or
push
into
pop
mov
repnz
test
lcall
mov
mov
mov
ret
lret
mov
or
outsl
xor
mov
into
inc
dec
mov
mov
dec
jo
jecxz
pusha
jo
clc
pop
jp
test
and
jle
adc
add
xlat
int3
shrl
ss
sbb
xchg
hlt
lcall
nop
frstor
mov
in
sarb
in
cmp
stc
cwtl
arpl
out
adc
mov
pop
jae
ja
mov
push
shrb
cs
pop
pop
pop
mov
pushf
cli
mov
imul
or
or
sbb
mov
jb
shll
fs
inc
in
sub
xor
inc
movsb
fwait
lret
dec
add
sub
push
bound
mov
cmp
out
sbb
aad
cmp
test
xor
sbb
inc
mov
xor
cmp
jecxz
cmc
scas
iret
inc
mov
push
mov
pusha
scas
faddl
adc
fimuls
mov
jmp
ds
dec
pop
dec
test
sub
fisttps
sbb
arpl
push
jp
push
popa
mov
fadd
inc
add
push
mov
test
adc
jl
loop
jle
inc
or
je
fistpll
inc
aam
adc
leave
pop
inc
insl
mov
xor
cmc
jbe
xor
jl
fdivrl
and
jb
dec
in
pop
mov
pop
shlb
add
bswap
push
stc
out
pushf
pop
test
aam
imul
popa
fs
lret
push
popa
popf
mov
push
or
daa
cwtl
sub
insb
or
in
cmp
out
int3
icebp
mov
lret
loop
dec
pushf
ret
mov
sbbb
stos
mov
or
arpl
pop
out
ss
add
jae
ret
adc
cmp
pop
out
pop
in
out
hlt
cld
inc
adc
mov
cwtl
pop
mov
out
imul
jnp
dec
and
sarb
test
xchg
cmp
cmpsl
in
cmc
imul
gs
shlb
arpl
xor
rclb
ss
dec
mov
sbb
les
add
push
cwtl
sub
insb
xor
rcl
inc
pop
mov
outsb
adc
sub
std
lea
sub
push
test
repnz
lret
add
xor
cmp
std
dec
ret
add
in
aad
dec
push
gs
jnp
mov
sub
adc
adc
repnz
cmpsl
fdivl
sub
cmp
jns
outsl
lret
or
pusha
das
scas
std
in
pop
mov
adc
and
insb
pop
xor
xchg
mov
repz
sbb
mov
and
stc
xor
fwait
xor
inc
fnsave
es
imul
inc
dec
mov
cltd
negb
and
rcr
pop
adc
mov
jmp
mov
and
lods
inc
push
and
repz
xchg
fstpl
inc
jnp
mov
cmp
cmpsl
sub
sbb
cmpsb
adc
mov
pushf
stos
hlt
xchg
xchg
add
es
inc
mov
and
push
jns
pop
dec
pop
cld
inc
sub
pop
movsl
ds
hlt
sub
mov
jns
push
sbb
jne
adc
jle
idivb
daa
fwait
push
ret
aad
repnz
fnsave
dec
push
lea
push
insl
xchg
in
fwait
imul
xor
sub
je
scas
fstl
test
cld
mov
mov
cmp
cli
fmulp
loope
dec
push
inc
std
loop
and
mov
sub
xorb
sub
lock
sub
cmp
xchg
jnp
cmp
sub
outsb
add
mov
shlb
scas
stc
test
ror
xor
fwait
adc
loope
push
aaa
or
stc
xor
cmp
test
mov
push
lcall
daa
xchg
sahf
jecxz
bound
push
adc
loop
test
in
cltd
pop
sub
syscall
subl
fcmove
mov
sbb
sub
or
adc
loopne
hlt
out
sub
or
hlt
push
movsb
out
xchg
jmp
clc
jbe
jge
push
es
push
push
scas
push
push
xlat
fisubrs
jecxz
lock
mov
inc
push
in
repz
dec
pop
mov
in
lds
je
jnp
inc
inc
dec
and
push
push
add
inc
or
test
mov
popa
cmp
clc
loopne
jno
pop
addr16
push
jmp
mov
mov
arpl
imul
xchg
sbb
mov
dec
cmp
push
loope
xchg
cs
out
leave
inc
push
cmp
jp
pop
cmp
mov
iret
cs
sbb
sti
les
daa
out
test
pop
lret
add
imul
push
jno
sbb
lods
push
cmpsb
stos
mov
mov
lea
in
ljmp
popa
pushf
push
scas
jl
call
pop
pop
adc
mov
into
ja
push
repz
cmp
mov
jae
lock
in
dec
pop
std
cs
mov
daa
loope
fsubrl
lret
sub
lods
inc
imul
lock
mov
insl
xor
and
stos
pushf
lahf
mov
out
es
lea
or
arpl
ds
and
pop
cmp
lea
pop
in
lcall
xor
dec
push
jmp
xor
je
clc
ficoml
int
outsb
subb
divb
cmpsb
dec
clc
mov
mov
pop
ret
xor
dec
fs
loope
mov
pop
add
test
imul
mov
mov
inc
mov
cmpsl
and
ja
mov
loop
out
dec
mov
imul
sub
dec
mov
sbb
pop
mov
pop
add
cmc
jp
loopne
mov
in
push
test
pusha
jno
lock
pop
nop
jno
popf
mov
fisttpll
pop
push
dec
pop
mov
add
jns
push
scas
mov
arpl
jbe
push
insb
rclb
shlb
sub
or
push
aaa
ds
sub
int3
dec
cmp
adc
xor
mov
mov
mov
jb
ljmp
inc
rcrb
data16
xor
insl
insl
push
bnd
lret
or
pop
je
movsl
aad
mov
xor
cmp
push
rcl
imul
inc
das
pop
nop
in
into
dec
cmp
sbb
int
add
adc
scas
jae
dec
vcvtss2sd
xor
inc
mov
dec
xchg
dec
jg
aad
jbe
pop
aas
xor
sbb
push
push
leave
loope
daa
mov
data16
cmp
cli
sarb
out
roll
mov
fstpt
test
arpl
sub
mov
fidivrs
pop
out
mov
push
cmp
push
aas
iret
cmp
mov
cmp
xchg
iret
dec
mov
js
test
mov
pop
movsl
mov
jae
cmpsl
insb
movsl
cmp
jae
xchg
cmp
sar
das
in
pop
stos
cmp
aam
pop
and
aad
xor
pop
cmp
repnz
pusha
mov
xor
sub
fildl
cs
pop
cmp
or
negb
lahf
push
push
dec
mov
in
add
mov
add
mov
cltd
clc
jne
xchg
inc
std
out
dec
adc
push
pusha
loopne
aas
mov
in
out
ds
out
lcall
push
add
push
aad
adc
mov
adcb
or
jbe
movsl
push
pop
jnp
and
js
cmp
push
and
fildl
shr
cmpsw
or
stc
jp
scas
je
dec
dec
xchg
mov
mov
scas
push
jns
pusha
in
pushf
jle
sub
stc
test
sub
sbbb
lods
jbe
nop
in
cwtl
pop
mov
push
and
orl
xchg
jae
xor
je
mov
stos
sub
sbb
les
cltd
mov
adc
push
lret
xchg
adcb
cmp
lds
in
mov
mov
in
mov
hlt
adc
repnz
mov
inc
ret
popa
pop
adc
imul
out
sub
jle
sahf
cld
push
int
add
or
cld
stos
adc
xchg
pop
mov
mov
shll
cmp
push
adcb
popa
stos
inc
fs
pusha
fnstsw
sbb
mov
imul
pop
jne
cld
mov
das
mov
sarl
fisttpl
lea
movsl
cmpsl
push
les
in
orb
pop
int
int3
movsl
pop
nop
repz
leave
fwait
dec
popa
negb
xchg
cmc
ds
idivl
or
fdivrs
mov
adcb
ja
arpl
xchg
sti
sub
xchg
inc
inc
mov
fcmovbe
xor
dec
xchg
cmp
in
les
jbe
cs
pop
repz
push
cltd
jnp
cltd
mov
inc
cmp
cmp
inc
mov
xchg
pop
pop
jl
jg
dec
in
lahf
dec
sub
sahf
sub
cmp
setnp
push
cmpsl
dec
int3
out
or
mov
sub
leave
addb
adc
adc
cmp
rolb
jle
or
pop
xor
xor
roll
cmpsl
movsl
in
jecxz
outsl
push
mov
push
adc
addb
icebp
push
test
in
dec
mov
mov
mov
cwtl
lahf
popa
popa
bound
ficoml
inc
xchg
cmp
sbb
lds
xchg
push
loopne
les
das
xor
add
adc
mov
hlt
stc
mov
loopne
xor
iret
sarb
xor
adc
fwait
sub
ja
xor
adc
les
icebp
dec
test
jb
imull
lahf
jl
mov
sbb
dec
and
sbb
dec
imul
movsb
ret
aam
hlt
mov
fadds
mov
xchg
int
and
loop
push
and
or
lds
xchg
repz
mov
dec
ret
into
insb
xlat
jecxz
pop
insb
cmpsl
out
lret
inc
inc
std
xor
xchg
xchg
sub
mov
xchg
scas
dec
ret
mov
mov
out
fsubrl
fildll
adc
std
in
cmp
mov
xchg
mov
mov
cmp
or
popa
mov
inc
lea
pop
dec
ret
or
and
pop
stos
imul
push
jp
lock
adc
in
push
xor
out
orb
imul
jns
push
ja
leave
roll
and
insl
clc
pop
outsl
pop
mov
leave
test
or
inc
imul
push
sub
int3
leave
jns
stos
dec
push
inc
stc
sub
cmp
pop
dec
cmp
add
jl
js
imul
and
mov
and
movsb
sub
aam
mov
add
xchg
popa
movsb
rcll
xor
sti
idivl
jg
push
mov
leave
sbbl
mov
and
test
stos
xchg
jb
inc
sub
push
fstl
fsts
xorl
lea
out
lcall
imul
es
cmpsl
outsb
sbb
jle
movsl
dec
jnp
xor
gs
and
call
or
cli
lcall
dec
jl
scas
not
rclb
pop
xchg
mov
jno
divb
mov
mov
les
lods
pop
js
test
push
and
call
aaa
inc
fistpll
loop
mov
shlb
decl
mov
sub
xor
lds
test
popf
movb
dec
jge
call
ds
mov
cmp
add
mov
cmp
call
arpl
xchg
cmp
cmp
ljmp
cltd
jg
repz
mov
sub
mov
rolb
xchg
shll
dec
adc
or
push
in
mov
enter
test
out
scas
jmp
outsl
std
rclb
adc
inc
mov
cs
mov
inc
loop
ljmp
stos
in
xchg
sub
mov
mov
pop
xor
out
ss
fisttpl
andl
add
loop
and
fsub
lds
cmc
mov
pop
mov
ja
lds
mov
mov
xchg
iret
push
inc
popa
iret
mov
mov
jo
std
mov
pop
and
and
dec
inc
stc
xchg
add
and
shlb
nop
dec
sub
ret
cld
lret
or
lock
addr16
mov
and
mov
pop
jne
lcall
rcr
cltd
addl
ret
aaa
inc
dec
scas
mov
in
push
dec
fcomps
pop
adc
mov
cmp
pavgb
icebp
scas
and
and
test
ret
fdivl
das
cltd
sub
lahf
insl
xor
or
mov
pop
push
stos
rcll
mov
xor
call
lahf
cmp
push
mov
fs
cmp
adc
int3
cmpsl
inc
push
lret
insl
sti
jne
sbb
incb
mov
ljmp
pop
sub
arpl
sbb
xor
inc
push
lea
xchg
xor
mov
mov
popf
and
push
xchg
imul
stc
and
ret
pop
xor
mov
je
cmp
adc
sbb
inc
mov
out
and
cli
jmp
lahf
shr
xchg
sub
sbb
inc
push
lea
add
lret
outsb
stos
cmp
fsubrp
add
icebp
inc
movsl
add
push
cmp
hlt
pop
push
cltd
nop
fdivl
push
add
mov
pusha
mov
pop
lret
cmp
and
out
mov
adc
add
pop
stos
jno
and
std
fisttpl
xchg
data16
pop
jae
or
inc
pushf
add
js
mov
aas
pop
je
jp
inc
int
dec
and
jg
push
es
pusha
adc
test
inc
imul
dec
push
pop
daa
add
cli
lea
mov
imul
cs
push
push
lret
test
pop
xor
mull
test
negl
cmp
pop
sbb
sahf
sbb
neg
shlb
jecxz
sub
bound
repz
and
ficompl
data16
and
xchg
sti
mov
jb
lret
popf
dec
icebp
dec
lods
aad
mov
push
mov
mov
out
cmp
dec
or
mov
and
cmp
push
icebp
or
pusha
or
push
xor
dec
enter
rorl
push
idiv
iret
insl
mov
jmp
push
in
addr16
daa
add
popa
inc
js
xor
loop
inc
bound
in
mov
pop
in
sbb
xor
ret
inc
pop
movsb
mov
hlt
int3
jbe
rolb
sub
mov
sbb
cli
xchg
popf
adc
cmp
push
jnp
ss
in
cmp
cmp
sbb
out
cmp
xor
test
aam
loope
rclb
stc
add
jae
pop
dec
or
xchg
testl
xchg
std
lock
movsl
jg
mov
jbe
sbb
push
shlb
sbb
jp
mov
push
mov
add
insb
rcrb
enter
repz
outsl
sub
subb
push
add
add
and
nop
lahf
icebp
xchg
xchg
cltd
cs
xlat
aas
jo
stos
lods
jmp
push
push
fld
add
mov
mov
mov
or
fimull
out
sub
loope
jmp
mov
fldt
mov
xchg
mov
pusha
enter
sub
push
shlb
add
jb
aad
add
test
push
add
push
cmpsb
fmull
dec
dec
fisttps
syscall
xor
mov
add
jge
add
push
adc
jge
iret
cs
push
dec
nop
lcall
pop
mov
xchg
ljmp
ficoml
pop
mov
jl
aas
fsincos
dec
jnp
jnp,pn
dec
mov
inc
jge
fidivrl
cmp
sbb
sub
dec
in
out
insl
pop
mov
add
cmpsb
scas
fs
fldenv
fldenv
pop
lods
jnp
add
xchg
in
push
sahf
jns
pop
jno
arpl
cwtl
cltd
rclb
aad
popa
faddl
mov
lock
inc
es
lods
subl
daa
das
cmp
aad
pop
shrb
bound
cltd
out
or
cmpsl
push
pusha
out
xor
xchg
push
sub
inc
leave
loop
int
dec
fs
data16
ja
pushf
xchg
pop
cld
cltd
sbb
cmp
inc
xchg
shll
repz
sbb
inc
test
push
movsl
push
mov
push
xchg
xlat
neg
push
cmp
enter
xlat
sub
das
mov
movsb
pop
in
out
out
mov
mov
push
leave
push
or
sbb
loope
cmovl
stos
jecxz
jecxz
push
or
mov
push
sahf
jnp
pusha
adc
mov
out
jns
faddl
cmc
rcr
mov
pop
mov
lahf
xlat
sbb
pushf
rorb
fisubrs
adc
mov
aad
mull
das
mov
jle
and
lcall
cmp
jmp
sbb
push
inc
hlt
shlb
stos
popf
mov
out
in
mov
vpunpckhqdq
test
add
sub
imul
aas
sbb
mov
insl
mov
outsb
xor
and
pop
add
adc
pop
cli
mov
int
adc
lods
daa
xchg
ret
sbb
inc
cs
jl
push
sbb
mov
pop
lea
cmp
sub
push
mov
dec
mov
pop
dec
pushf
add
pop
imul
jnp
lret
repz
cmc
fldenv
or
test
in
xor
cmp
and
dec
cwtl
in
stos
push
xor
adc
lahf
orl
dec
mov
pop
dec
ds
mov
cmp
int
inc
sbb
stos
std
scas
jp
push
loopne
mov
in
add
fldenv
lods
mov
cmpsl
adc
test
lret
in
and
cmpsl
push
aad
add
push
jge
xchg
cwtl
or
xchg
ljmp
adc
pop
and
xor
pusha
dec
fistpll
sbb
daa
dec
sar
leave
nop
rcl
nop
fildll
or
mov
xor
xor
jo
or
dec
hlt
mov
mov
lods
nop
or
mov
das
aad
outsb
jecxz
out
pop
dec
jge
test
mov
pop
rcl
leave
popf
into
out
pop
inc
outsl
jbe
jne
arpl
mov
mov
repnz
faddp
add
dec
jp
inc
push
negb
outsb
lahf
pop
test
clc
or
in
mov
mov
adc
mov
adc
loope
iret
and
and
mov
fnstcw
sub
adc
jge
call
pop
or
lret
xor
inc
xor
adc
jmp
inc
es
fs
shlb
push
mov
mov
insb
cmp
pop
mov
push
adc
push
sub
adc
call
in
aam
jmp
mov
sub
out
pop
jns
xchg
and
scas
lret
mov
cmp
sarl
push
imul
clc
mov
enter
push
inc
sbb
imul
mov
mov
js
int3
mov
xchg
mov
push
lods
jg
push
cmp
adc
nop
lods
push
inc
cmp
sbb
movsb
iret
inc
mov
lahf
jnp
lahf
popa
pop
mov
jge
mov
cli
xchg
mov
add
or
test
push
pop
cmp
xchg
mov
cmpsl
mull
jo
sbb
lea
or
push
cltd
inc
movsb
and
push
loope
int3
xor
sub
mov
add
or
fsub
pop
push
and
mov
jae
aam
cmpb
ljmp
daa
pop
insb
inc
xchg
push
cmpsl
and
sub
fists
pusha
jnp
insl
cld
insl
ret
mov
cltd
and
clc
mov
ljmp
js
mov
xlat
clc
add
jp
data16
mull
dec
mov
jne
movsb
ret
sub
push
bswap
or
sbb
jne
xorb
sbb
lcall
push
pop
sub
push
sahf
adc
dec
adc
sbb
aam
fisttpll
push
aad
mov
inc
data16
pushf
pop
mov
sub
or
aas
lds
dec
pop
cltd
jl
xlat
dec
push
push
lods
mov
lock
dec
scas
test
mov
dec
negl
sahf
das
jbe
mov
xor
cmpxchg
idivl
push
xor
xchg
mov
orb
mov
insb
fldcw
in
out
aaa
push
incb
in
and
xor
sbb
in
icebp
inc
push
jae
test
enter
icebp
add
jae
dec
jns
out
icebp
es
or
aas
adc
push
ss
inc
jg
repnz
xchg
stos
xchg
jbe
or
pop
dec
jns
inc
cwtl
pop
xchg
test
repz
bound
into
jecxz
sbb
popf
leave
test
in
dec
sahf
icebp
inc
jp
faddl
fcmovu
or
rcll
xchg
insb
insl
insb
or
push
outsb
clc
mov
jecxz
aas
adc
mov
call
lock
mov
xor
xchg
sbb
sti
xchg
fs
int
mov
fnstcw
dec
test
sbb
mov
loopne
shll
mov
xor
and
lods
add
pop
fwait
dec
nop
sbb
test
pop
sbb
outsb
fbstp
xchg
xchg
mov
push
xchg
jae
mov
sbb
insb
or
jecxz
cld
dec
fnsave
loope
lret
inc
outsb
imul
adc
fmull
push
into
mov
and
xchg
stc
out
and
cld
xchg
fstps
push
insl
cmp
ljmp
cmpsb
or
in
orb
push
jae
loopne
sbb
sbb
mov
sbb
sub
mov
ficomps
pop
xor
fcmovnb
pushf
daa
cs
inc
pop
inc
add
sub
ja
add
or
jae
jb
roll
loopne
mov
dec
repnz
dec
mov
mov
sub
sub
mov
cltd
and
adc
ror
and
cmp
dec
cmp
add
clc
sbbb
inc
leave
negb
inc
cmpb
or
mov
xor
push
ret
jb
lret
mov
xchg
mov
ret
clc
outsl
adc
inc
mov
xchg
jl
add
cmp
inc
mov
xchg
cli
ret
insb
lods
push
rorl
mov
sbb
ja
inc
dec
outsl
jb
jp
dec
mov
and
mov
xchg
fs
int3
and
out
add
idivb
cmpsl
xchg
bound
sub
add
movsl
push
movsl
dec
imul
push
inc
cmp
or
cmc
repz
mov
push
jl
mov
jbe
int
rcrl
or
test
out
clc
mov
and
push
mov
adc
sarb
in
jae
insb
xchg
add
mov
lds
subb
push
mov
rclb
fbld
outsb
mov
shlb
mov
pop
xlat
dec
sub
fucomp
imul
pop
or
rclb
clc
pop
xchg
pop
iret
daa
gs
push
out
leave
or
add
rclb
cs
into
pop
pop
leave
jo
mov
icebp
aaa
cmp
addr16
mov
xchg
adc
xchg
lret
mov
sbb
mul
mov
sar
mov
mov
pop
or
test
adc
xchg
jecxz
jbe
paddw
mov
jno
lahf
xchg
pop
movsl
enter
jmp
cltd
jmp
lds
jae
jmp
inc
js
ss
cmp
pop
xor
add
hlt
or
test
or
mov
popa
test
cmp
push
test
xchg
repnz
inc
movsb
inc
stos
jecxz
int3
insb
rcrl
daa
push
lcall
jne
sbb
jnp
and
jg
or
stos
addr16
xor
gs
je
and
cs
mov
push
pop
movsb
leave
add
out
ret
iret
lcall
inc
push
out
aas
sbb
cld
xchg
loopne
xchg
out
aas
pop
sahf
cmp
mov
or
or
inc
sub
push
jmp
jecxz
ret
gs
je
jecxz
inc
in
xor
addr16
mov
in
fisubl
shll
in
fimull
imul
hlt
test
xchg
add
lods
xor
lcall
mov
jl
sub
add
push
hlt
mov
or
test
in
cmp
adc
out
mov
mov
add
lahf
cmp
xor
mov
lds
std
dec
leave
xchg
mov
icebp
xor
ret
aam
xorl
adc
dec
xorb
xor
scas
cmp
xchg
cmc
pop
testl
add
mov
push
adc
ja
sbb
mov
dec
inc
sub
lcall
dec
iret
in
out
push
mov
inc
lahf
pushf
rcll
pop
and
nop
pop
arpl
jo
mov
fisubs
bound
ja
add
movsl
adc
cmpsl
ja
cmp
pop
adcl
mov
out
jg
fstpl
push
fucomip
arpl
xor
cmp
dec
pop
es
push
pusha
stos
pop
dec
mov
sub
jno
cmp
push
and
hlt
push
mov
frstor
daa
pushaw
jo
push
int
dec
add
push
inc
roll
test
inc
loopne
push
mov
xchg
data16
dec
push
jne
scas
fisubrl
icebp
rorl
cmc
subb
sub
mov
jge
out
mov
pop
leave
scas
les
ret
test
leave
or
jge
aam
sub
dec
dec
fcomps
mov
push
sbb
sarl
dec
or
xor
cwtl
dec
shl
incl
or
or
dec
inc
lret
rorl
jmp
xchg
shrb
cmp
mov
sbb
mov
aam
jmp
push
sti
aas
inc
sahf
in
sti
xchg
sti
cwtl
xchg
int
and
dec
pusha
popf
sub
out
sub
push
lds
in
outsl
pop
adcl
adc
or
mov
sbb
dec
mov
movsl
fcmovnb
fwait
cmp
int
movsb
push
adc
push
cmpsl
pop
js
lods
or
out
mov
jmp
fldt
add
inc
and
loop
pop
xchg
aas
sarb
inc
inc
jg
add
cmc
xchg
mov
mov
ret
fxtract
pushf
mov
xchg
ret
sarl
adcl
rcl
cmp
cwtl
mov
lret
sbb
add
add
orl
cmp
sti
push
inc
or
and
push
dec
jecxz
cli
mov
dec
xor
into
cwtl
bound
pop
and
fisubs
mov
out
dec
adc
lahf
mov
imul
ljmp
fcoml
push
sbb
sub
pop
mov
or
push
je
ss
jle
sti
mov
pop
popa
sbb
pop
imul
cli
sarl
out
loop
loopne
shrl
dec
and
int3
xchg
subl
sbb
shrl
lcall
jno
and
jmp
mov
lds
loopne
push
jnp
call
mov
idiv
sub
pop
push
xor
mov
out
cmp
cltd
push
cltd
outsl
pop
stc
std
hlt
lea
push
mov
ljmp
jns
data16
sub
push
push
push
pop
sbb
cli
and
xchg
movsl
mov
mov
adc
cmp
push
mov
add
adc
mov
sub
xorl
lcall
ror
cmp
in
cmp
out
std
push
fcomps
out
xor
sarl
loope
cltd
sub
popf
loope
ret
inc
push
lods
les
cltd
sbb
mov
out
adc
jno
cmpsb
es
sbb
bswap
jne
lods
aad
shl
stos
ljmp
adc
adc
pusha
jle
dec
sub
cmp
inc
movsb
sub
rcrb
inc
fldcw
mov
push
push
inc
sbb
dec
jp
out
addr16
sub
mov
push
imul
xchg
bound
and
xchg
rclb
jne
and
test
notl
imulb
jne
lret
test
es
imull
adc
stos
adc
pop
aaa
ds
jmp
mov
loop
mov
mov
std
sbb
xchg
pop
subl
data16
or
addr16
mov
and
cs
pop
mov
dec
adc
mov
push
and
aas
cld
sub
dec
iret
pop
and
pop
cmpsl
xchg
jne
pop
adc
cmp
movl
ret
into
aad
xor
shlb
sahf
std
std
lret
ds
scas
lret
dec
cmpsl
mov
sub
aad
sub
or
adc
adcb
ret
xchg
inc
pop
movsl
shlb
push
ds
jo
mov
mov
mov
call
mov
cmpsb
std
sbb
insl
enter
mov
fsubs
adc
fnstenv
dec
mov
fsub
mov
aam
push
in
ljmp
hlt
mov
mov
out
ret
pop
fisubrs
dec
push
xor
mov
imul
push
fldcw
aas
outsl
dec
jbe
or
or
loope
shl
or
hlt
sbbl
outsb
pop
shll
mov
daa
outsb
or
and
and
cltd
sbb
scas
sbb
arpl
dec
cmp
xchg
sbb
test
cli
mov
in
mov
mov
push
les
pop
cmp
cli
ret
insb
aaa
hlt
arpl
cmp
xchg
jmp
aam
cmc
mov
push
add
lcall
mov
jbe
adc
and
sldt
rorl
push
push
outsb
cli
out
dec
xchg
pop
and
inc
outsl
adc
push
cmp
sti
andb
bts
sub
and
mov
les
dec
call
sahf
cltd
jno
mov
adc
jb
jbe
aas
mov
insb
xchg
popf
test
icebp
leave
cltd
repnz
xchg
paddusb
aaa
sbb
push
pop
test
mov
or
xchg
pop
es
xchg
cmp
imul
xchg
pop
inc
mov
xchg
fwait
mov
pop
add
aas
int3
xor
and
mov
enter
leave
rcl
ret
stos
and
addr16
jg
cmp
inc
pop
adc
ja
sti
fdivl
sbb
mov
push
cmpsl
sub
cld
movsb
adc
inc
and
xchg
adc
jl
lock
outsl
sub
sbb
cmp
subl
xor
in
repz
lcall
sub
mov
popa
mov
sub
dec
das
loop
dec
out
pop
mov
cmc
arpl
in
rorl
cld
mov
mov
lahf
inc
int3
jne
orl
rcr
popa
sub
xor
xchg
sbb
push
or
repz
imul
shrl
mov
mov
scas
js
out
leave
stos
aad
push
shlb
pop
jbe
and
push
xchg
pushf
mov
mov
adc
push
sbb
mov
sub
cmp
or
repz
popl
push
mov
stos
xchg
out
push
or
mov
pop
mov
xchg
pop
les
outsl
and
adc
lods
hlt
out
jecxz
and
fmull
adc
xlat
outsl
jae
cwtl
push
dec
pop
sbb
pop
movsl
jg
push
pop
int
inc
ljmp
pop
add
mov
fcmove
jne
mov
and
inc
mov
cmc
loop
daa
mov
lods
popa
test
add
cwtl
repnz
idivb
mov
jne
mov
daa
cs
mov
adc
xor
jae
and
inc
mov
mov
test
pop
cli
jnp
insl
jns
das
lcall
leave
shlb
xor
mov
xchg
gs
data16
xor
iret
lods
int3
popa
rcr
mov
aam
sahf
add
pop
mov
icebp
push
xchg
xlat
push
aas
lods
test
lods
xor
sti
lds
and
mov
mov
jmp
inc
mov
xor
call
xchg
leave
jnp
mov
movsb
add
jns
bound
mov
mov
mov
dec
loopne
and
cmp
jnp
cmp
cmp
scas
or
xor
dec
adc
xor
subb
enter
cld
out
cmc
out
cmp
or
ret
les
add
mov
in
mov
mov
iret
mov
addb
jae
outsb
in
mov
lret
scas
jg
fldenv
or
and
adcl
mov
adc
roll
adc
lcall
fistpll
popa
pusha
inc
enter
inc
pusha
cmpl
jns
push
repz
dec
lods
pop
adc
sar
mov
pop
or
inc
loop
testl
mov
pusha
xchg
imul
ret
push
xor
jb
mov
ret
ret
lahf
in
cwtl
shl
pushf
add
sbbl
ljmp
xor
add
push
mov
add
mov
ret
and
sahf
push
push
and
popa
fwait
push
fmull
arpl
repz
pop
push
xchg
mov
testb
xchg
cmp
pop
sbbl
js
add
cmp
mov
pop
mov
lods
leave
repz
cwtl
inc
dec
cmc
sbb
pop
add
fidivrs
pusha
pop
iret
and
pop
ljmp
test
push
cmpsl
sub
int
cmpsb
push
hlt
xchg
cmpsb
add
fmuls
push
sub
popa
sub
loopne
imull
ss
jl
or
sahf
test
mov
and
rcll
or
adc
adc
in
pop
jp
scas
xchg
andb
into
mov
adc
fstpt
xchg
loope
cmpsb
inc
bt
and
pop
xlat
out
sbb
ljmp
inc
mov
push
xor
push
xchg
xchg
mov
mov
idivb
mov
xchg
add
mov
mov
sbb
test
cmp
or
in
pop
sub
mov
out
inc
jecxz
lret
sbb
cltd
in
nop
bound
shl
leave
push
xor
paddsb
shr
jg
testb
jbe
repnz
xchg
mov
mov
rol
repnz
test
dec
ret
adc
rorb
mov
adc
je
xor
bound
add
jbe,pn
xchg
enter
inc
xor
or
addb
loopne
cmpsl
sub
mov
adc
sub
xchg
jge
lret
mov
adc
add
dec
leave
or
rclb
aaa
inc
push
or
push
jmp
repnz
push
int
mov
jmp
cltd
ds
jecxz
scas
adc
inc
mov
loop
mov
mov
mov
aam
jge
pop
fs
rclb
mov
cmpsb
mov
aas
cmpl
jb
pop
lea
daa
pop
inc
sbb
aam
insl
jbe
arpl
and
jns
addb
insl
lret
xorb
add
scas
into
push
cwtl
jp
fwait
hlt
push
pop
mov
mov
and
or
cld
frstor
xchg
das
movsb
sub
push
pop
xor
lds
cmpsb
int
cmp
int3
shl
ret
inc
in
and
dec
sbb
add
ljmp
outsb
call
fcmovb
or
xchg
mov
adc
testl
ficoml
popa
and
je
sahf
push
add
and
mov
mov
jne
mov
mov
pop
or
outsb
push
and
imul
mov
cmpl
inc
push
lahf
inc
or
movhps
test
sbb
add
andb
and
stos
and
lcall
fstpt
push
mov
es
add
cwtl
and
push
into
sbb
xor
lock
in
dec
push
cmc
mov
out
aaa
pop
loop
push
sub
sub
stos
cmp
popa
sub
lods
cmp
das
pop
mov
test
cmp
mov
in
inc
jg
outsb
inc
int
add
inc
jecxz
lahf
pop
cmc
mov
xchg
sub
lock
dec
fsubs
fld
and
push
scas
testb
mov
ljmp
addr16
mov
test
lahf
and
test
jbe
fmull
adc
test
lods
xchg
jmp
scas
movsb
ret
push
aad
sbb
xor
call
dec
jo
cmp
stos
pop
popf
in
popa
mov
sub
add
jne
mul
movsb
in
outsb
rcrl
movl
pusha
fdiv
adc
jl
and
mov
dec
sub
jne
jne
mov
fwait
xlat
in
loopne
or
lods
mov
push
jp
fdivrl
bnd
out
repz
aad
cmpsb
jae
or
hlt
pop
xchg
mov
jg
jne
mov
sbb
jl
sti
dec
in
xchg
popf
sbb
and
pop
mov
ret
faddp
adc
aam
add
dec
mov
test
dec
pop
xchg
push
push
jmp
in
inc
bound
add
test
mov
push
xor
add
nop
les
sub
adc
dec
cwtl
pop
mov
mov
push
loopne
mov
pop
xchg
or
add
cmp
icebp
pop
ljmp
iret
ja
xor
xchg
ds
adc
lret
mov
mov
mov
call
cmp
and
xlat
add
or
repz
pop
xchg
and
mov
stos
mov
jmp
aam
inc
sub
leave
push
sbb
out
scas
add
push
add
jecxz
jmp
pop
dec
je
into
mov
dec
lahf
popa
in
push
movsl
imul
inc
sub
and
jnp
push
xor
add
jl
inc
push
ret
jno
dec
ljmp
add
mov
or
lret
cmp
dec
pop
cmp
mov
mov
mov
das
push
incl
add
mov
sub
mov
jns
inc
imul
int3
pop
push
xlat
leave
shlb
cltd
outsb
dec
push
repz
jno
sbb
stos
cmc
and
iret
mov
and
insl
xor
xor
mov
jbe
cmpsb
cmp
mov
lret
lods
pop
adc
push
push
inc
pop
dec
pop
xchg
xor
sbb
imul
stos
xchg
mov
mov
cmp
mov
push
aad
add
lret
addr16
insl
mov
and
lcall
in
sbb
sub
fisttps
cs
push
iret
sub
inc
adc
fsubp
insb
add
xor
xor
into
xchg
fistpl
pop
cmp
cmpsb
and
iret
lock
cmp
ret
sbb
outsl
shl
stc
in
inc
dec
fsubs
push
mov
in
mov
les
cmpsb
pushf
and
nop
fstpl
filds
rclb
imul
fdivs
mov
cmpl
mov
xor
pushf
gs
dec
sbb
addl
leave
sbb
and
inc
mov
les
data16
fnstenv
xor
fwait
es
pop
int
xchg
xchg
xor
and
rolb
cld
xchg
insb
xchg
out
jecxz
lret
and
fcomip
dec
test
negb
and
movsb
icebp
jmp
inc
ljmp
pop
mov
pop
popa
pop
les
je
pop
movsl
daa
das
mov
jae
out
fsubs
fiadds
pop
int
push
pop
sub
xchg
pop
and
cmp
stos
insb
xchg
pushf
lahf
add
out
and
mov
jns
loop
int
bound
or
and
int3
repz
into
jmp
pusha
jnp
into
outsb
shrb
fsts
push
and
mov
jno
cmpsb
out
mov
adc
cld
xchg
pop
cmp
insl
mov
add
xor
adc
bound
enter
mov
or
xor
sbb
or
clc
cmp
lods
insb
bound
les
xor
cmp
pop
pop
mov
into
jmp
sub
test
shll
cmp
ljmp
xor
mov
jmp
push
aam
lock
loop
add
sbb
hlt
into
out
xchg
inc
rcr
out
pop
inc
outsl
xor
inc
lcall
call
aaa
cmpsl
or
test
jge
movsl
repnz
or
push
or
adc
add
jg
scas
sbb
leave
imul
inc
add
subb
jb
sub
loopne
pop
pop
ljmp
cmpsl
dec
repnz
xor
out
not
xchg
or
orl
popf
loop
sub
mov
js
jae
jae
xor
push
rcrb
sbb
in
stos
stc
jecxz
mov
ss
cmpsl
push
and
mov
inc
jae
inc
stos
fsubl
icebp
test
jne
or
inc
jl
jbe
imul
sub
sub
enter
pop
shlb
das
and
imul
mov
sbb
adc
or
test
pop
std
ljmp
out
aad
dec
jb
in
pop
icebp
pusha
pusha
push
inc
pop
mov
pop
pop
jae
ffree
xchg
or
inc
xorb
inc
fnstenv
push
pop
dec
js
push
and
shl
mov
mov
insl
mov
jg
fisubrs
and
jge
and
fisubl
ljmpw
imul
push
jno
fimuls
fisubrs
lcall
xchg
mov
pusha
or
xchg
xchg
cmp
adc
dec
gs
adc
ljmp
pusha
or
mov
invd
or
ljmp
lret
fnstcw
sub
push
sub
cmpsb
das
data16
mov
sbb
lds
adc
por
out
incl
inc
inc
xor
stos
leave
rolb
shl
and
mov
aad
stos
and
test
push
push
xchg
push
in
je
push
enter
sub
add
or
out
cltd
jle
in
pusha
dec
dec
loop
lcall
out
and
mov
pand
pop
dec
imul
pop
in
adcb
mov
xchg
xchg
mov
cmp
lret
inc
pop
iret
bound
cmp
int3
mov
xor
scas
je
aaa
fcmovnb
sub
ret
pop
call
leave
xor
push
push
add
cs
fwait
lods
pop
lods
outsb
jmp
xchg
jne
arpl
xor
and
mov
and
call
mov
in
pop
push
xchg
in
dec
add
in
inc
outsb
loop
xor
lret
out
je
orb
adc
sahf
jmp
popa
sub
push
sti
fdivp
insl
jg
xchg
sub
aas
mov
push
clc
enter
mov
sbb
sti
add
jne
and
or
mov
push
sbb
adc
ss
mov
inc
sub
push
push
lret
call
popf
fimuls
loop
push
cmp
or
fwait
mov
scas
leave
mov
xchg
aas
jmp
mov
rcr
or
into
push
daa
jns
movl
dec
in
xor
pop
icebp
mov
es
sub
imul
xchg
and
ss
pushf
cli
fstps
jae
lea
scas
or
loope
in
pop
ds
shll
pop
adc
lret
and
popa
adc
xchg
fs
pusha
dec
mov
add
frndint
arpl
pop
fmulp
xchg
mov
call
repnz
dec
lret
rol
test
adc
xor
xchg
mov
shl
and
outsb
cltd
push
cld
mov
lret
lret
shrb
je
pop
xchg
mov
int
jbe
pop
int
push
bound
lcall
nop
stos
stos
outsb
dec
stc
insb
mov
in
out
std
dec
test
xrstors
scas
add
scas
cld
addl
cmpsl
dec
sub
cmpsb
filds
cltd
add
dec
dec
inc
jmp
ficoms
rcr
mov
cmp
lret
mov
and
xchg
inc
arpl
xor
pop
int
sbb
lock
pop
mov
fwait
orb
mov
xor
lods
xchg
and
loopne
pop
leave
sbb
movsl
rcrl
stos
inc
inc
gs
mov
pop
mov
adc
sahf
in
ficoml
insb
ficoml
in
dec
mov
mov
in
in
mov
mov
pop
cli
ljmp
add
dec
gs
es
movsl
mov
jbe
push
leave
push
dec
mov
subl
shlb
or
hlt
push
mov
int3
rcrb
outsb
arpl
or
mov
mov
movsl
js
inc
mov
xor
mov
push
pop
sbb
pop
popa
es
int
gs
pop
sub
inc
movsb
xchg
dec
push
xchg
xor
in
lret
fisubrl
mov
adc
js
pop
pop
or
out
cmp
fisubs
pop
mov
pop
mov
in
fwait
push
test
lcall
repz
mov
dec
xor
popf
cmpsl
mov
in
cmpsl
mov
jns
pop
mov
sub
mov
mov
test
inc
lock
or
bound
pop
cltd
xor
cmp
fidivl
rcl
mov
pop
imul
outsb
xor
adc
sub
stos
xchg
enter
aam
lret
leave
das
sub
push
mov
cmp
das
cmc
sub
loopne
xchg
adc
sub
loope
xchg
mov
aas
shlb
pop
out
lret
xor
addr16
in
pop
rcrb
sarl
lret
mov
lods
push
insl
jmp
dec
dec
pop
adc
jae
mov
lods
cli
jg
pop
jmp
push
ficoms
cmp
pushf
and
test
xchg
sbb
and
fldcw
aaa
xchg
jb
pop
pop
mov
and
mov
fisttps
mov
ss
fsubs
cmp
inc
mov
aam
dec
mov
mov
jp
or
adc
pop
mov
mov
insl
cli
imul
gs
xchg
xchg
lds
xor
pop
iret
or
adc
repnz
mov
pop
lahf
mov
dec
or
test
outsb
and
notl
pop
stos
daa
scas
pop
add
add
dec
sub
cmp
mov
les
es
cltd
adc
lock
jns
je
lahf
lds
stos
mov
hlt
mov
and
jecxz
add
hlt
fildl
mov
push
or
cmp
addl
mov
adcl
jge
lds
in
js
pop
xchg
outsl
shll
lock
jb
movsb
pop
int
sbb
lret
iret
fstps
fmulp
jmp
std
stc
xchg
adc
inc
ret
add
mov
loopne
aam
hlt
cmp
sbb
lods
mov
jge
ss
stos
lahf
xor
out
leave
js
std
or
ja
aad
xchg
sahf
lea
scas
xor
lret
hlt
jb
push
fsubrl
inc
stos
leave
xchg
mov
data16
mov
pop
popf
scas
xor
mov
push
fcmovbe
ficoms
jns
cmpsl
pop
jg
inc
jne
xchg
loop
push
xchg
pusha
push
cwtl
jge
in
lock
hlt
cltd
iret
add
loope
and
lahf
xor
push
mov
jo
call
gs
das
lods
adc
ud2
bound
or
enter
cs
subl
and
imul
jp
mov
dec
push
insb
lock
mov
push
adc
inc
out
mov
xchg
xor
mov
xor
push
emms
or
out
add
jg
sub
push
pop
scas
ret
xchg
xchg
pop
push
aad
dec
imulb
in
mov
push
pop
mov
call
mov
and
ds
jmp
push
scas
adc
and
cwtl
idivb
or
push
push
mov
push
iret
dec
pop
repnz
dec
add
jge
mov
sti
xchg
xchg
xchg
sub
push
jle
fidivrs
ljmp
test
lret
out
xchg
call
addr16
dec
divl
adc
push
ljmp
sbb
add
shrl
push
pusha
out
push
mov
jmp
lret
js
sbb
fbld
cmp
aaa
mov
pushf
fstps
push
jmp
fs
clc
and
pop
pop
mov
jns
movsl
mov
and
adc
adc
xor
aaa
mov
cmp
mov
adc
cltd
fsub
ss
jle
shrb
arpl
xchg
xor
mov
shrl
out
mov
push
pop
pushf
out
and
cmpsb
add
pop
pusha
mov
dec
cmp
mov
mov
aam
add
arpl
push
imul
or
mov
cmp
mov
mov
inc
imul
xorb
inc
rolb
adcl
mov
push
and
add
pop
jmp
sbb
mov
sub
jb
push
lahf
cs
movb
lock
lahf
xchg
cmp
xor
sti
xor
xchg
sti
cmpl
jg
inc
mov
out
jmp
or
add
adc
cmc
outsb
loopne
cmp
dec
test
pop
outsb
clc
mov
dec
jle
xchg
in
dec
es
jecxz
jecxz
adc
rclb
push
cmp
nop
push
stos
aam
adc
push
movb
out
add
sarl
das
sbb
daa
adc
inc
test
popa
into
mov
sbb
shrb
push
pop
lock
cld
and
pop
call
cmp
sub
mov
pushf
pushf
test
mov
xchg
fldenv
inc
xchg
pop
scas
jno
imul
lret
pop
or
cmp
cmpl
es
pusha
mov
jns
mov
cmc
mov
js
dec
pop
sbb
mov
or
xlat
hlt
cmp
mov
ss
les
sbb
add
dec
mov
sti
paddsw
in
repz
adc
enter
int3
inc
mov
pop
sub
push
add
or
or
imul
add
mull
xchg
and
xchg
scas
sbb
push
lods
inc
cmp
addl
lock
in
sbb
es
inc
sub
stos
dec
xchg
aas
lahf
jbe
pop
negb
cmc
sbb
jae
ret
lds
xchg
data16
cs
xchg
push
mov
js
movsb
dec
outsl
fucomi
push
mov
add
mov
bound
in
repnz
or
pop
int3
das
pop
mov
lods
ja
xchg
aaa
or
inc
movsb
out
xchg
out
dec
mov
add
roll
push
inc
stc
std
and
mov
out
sahf
push
sbb
xchg
fsubrs
fldcw
dec
arpl
popa
lret
add
push
add
pop
test
stc
mov
shrb
and
fwait
sbb
xchg
cld
add
or
popf
test
into
inc
mov
xchg
push
sti
lock
in
add
dec
jl
cmp
mov
insl
dec
cli
orb
dec
adc
pop
adc
out
xchg
cli
push
enter
push
rolb
mov
lret
aaa
js
fbld
and
mov
cmpsl
mull
das
cs
xchg
inc
lock
faddl
iret
push
dec
xor
fwait
punpckhbw
insb
sbb
dec
js
xor
adc
mov
xchg
push
pop
sbb
pop
test
sub
lcall
outsl
and
adc
xchg
mov
fisttps
mov
cmp
out
mov
xchg
mov
data16
fxch
mov
dec
insl
loop
sbb
repnz
jo
xchg
addr16
xchg
push
lock
sub
dec
push
fdivl
xchg
jae
xchg
cmp
pushf
lods
cmp
out
pop
enter
push
xchg
jo
fstpl
lds
movsb
leave
or
or
inc
in
pushf
adc
stos
mov
out
xor
xor
aam
iret
push
in
push
inc
js
out
scas
push
repnz
push
or
pushf
xor
aas
clc
lds
mov
or
push
scas
mov
mov
dec
loope
nop
ret
mov
mov
mov
or
jp
sbb
cmp
adc
idivb
push
mov
and
add
scas
test
test
mov
stos
xor
lds
push
shl
ret
push
xchg
pop
pop
lcall
dec
dec
xor
movsb
les
adc
mov
cmpsb
and
push
jmp
mov
sbb
push
cmp
adc
int
push
fiadds
rorl
add
out
mov
std
fistpl
sbb
jmp
rep
andl
test
test
adc
xchg
add
sub
test
scas
xchg
into
pop
mov
iret
xor
es
pop
xor
mov
bnd
stos
adc
pop
jle
pop
loop
loop
cmpsl
xchg
or
sbb
mov
jp
mov
cwtl
mov
or
jecxz
inc
lret
jp
adc
cmp
cmpsl
xchg
mov
daa
mov
xor
leave
sub
sbb
mov
repz
add
call
data16
pop
mov
lahf
jp
lea
outsb
mov
mov
test
lcall
mov
mov
notb
adc
inc
add
pop
pusha
shr
adc
ret
mov
imul
cmc
xchg
and
mov
cs
inc
push
loop
bound
cmpb
jno
stos
insl
cmp
mov
lcall
imul
xor
cmp
adc
int3
stc
sub
cmpsl
movsb
stos
mov
js
and
cmp
jmp
insb
xchg
hlt
mov
out
and
lret
push
add
js
jns
pop
lods
and
push
dec
mov
cmpsl
shlb
loopne
push
lret
cmp
pop
outsb
mov
lret
test
popl
lods
or
jno,pt
ljmp
ds
mov
jns
cmc
cmp
push
test
push
mov
std
stos
in
mov
add
stos
dec
jns
xor
loop
aam
mov
jnp
loope
pusha
sbb
sub
cmp
aad
loope
aas
pop
adc
loope
outsl
lock
and
mov
inc
rolw
mov
dec
jbe
mov
fists
lret
sub
or
mov
rorl
xchg
sub
out
cmpsb
out
test
outsb
inc
mov
push
ss
add
push
insb
inc
sti
push
aas
push
jae
leave
cmp
popf
mov
pop
mov
sbb
fwait
incl
sub
add
pop
pop
mov
bound
aaa
out
fnstsw
adc
mov
pop
fiadds
add
cmp
lahf
sbb
call
scas
das
fidivs
insb
fwait
pusha
test
add
inc
in
xorb
ljmp
mov
movd
pop
sbb
dec
ss
stc
sbb
or
sbb
ds
dec
add
mov
cmpsb
sahf
push
mov
inc
mov
ljmp
jno
insl
lcall
push
in
sbb
cmp
in
jl
pop
xchg
mov
jnp
sbb
test
add
stc
scas
ds
sar
or
pop
and
pop
sub
xor
in
repz
cwtl
test
mov
pop
jbe
adc
std
adc
rclb
and
mov
push
and
loope
ja
iret
insb
xchg
adc
inc
out
xchg
fists
ds
or
xchg
xor
pop
std
jbe
int
outsl
nop
push
inc
aam
adc
and
sbb
dec
sub
jae
sub
rcll
jno
in
lcall
stc
push
in
outsl
adc
pop
push
daa
andb
into
or
inc
es
jmp
push
out
ja
pop
pop
pop
xchg
xchg
or
cmc
jg
shlb
push
loop
out
or
jbe
jns
pop
imul
shlb
mov
inc
into
fimuls
xchg
adc
pop
iret
fmull
pusha
push
mul
imul
inc
and
movsl
and
mov
sbb
pop
pop
arpl
inc
scas
add
or
or
stc
sub
out
push
mov
rep
les
sbb
sahf
mov
adc
lods
pop
adc
imul
jl
jbe
mov
test
shll
and
popa
inc
dec
mov
inc
jbe
xchg
dec
fsubr
and
rcrb
frstor
pop
lds
sbb
mov
adc
ds
pop
adc
dec
aaa
mov
outsb
sti
testb
cltd
sub
mov
testl
ret
inc
push
sahf
lahf
int3
pop
jge
xchg
fcmovnu
lcall
test
jb
and
jecxz
aas
sub
aam
mov
pop
mov
icebp
int3
std
push
daa
gs
add
push
jle
je
push
jmp
in
andb
dec
mov
in
jb
jbe
stos
pusha
lock
sbb
and
dec
inc
loop
pop
in
cs
outsl
jecxz
leave
int3
leave
std
scas
jb
pop
adc
dec
outsb
js
and
lods
xor
pop
in
arpl
es
cltd
add
lret
mov
out
pop
or
cmp
into
out
jns
data16
mov
sti
je
mov
cmp
xchg
ljmp
clc
icebp
inc
adc
xchg
in
pop
insb
inc
mov
jbe
enter
mov
dec
insl
lret
add
xor
fcomps
daa
sub
cmp
fwait
adc
push
nop
in
xorl
daa
cmp
jne
daa
jp
repnz
and
negb
jno
xchg
add
ficomps
mov
jle
cmp
cmpsl
jmp
div
shrb
fs
mov
jbe
push
jbe
lock
loope
mov
mov
cmp
les
jnp
adcl
cmp
sbb
sub
mov
sbb
loope
mov
test
push
ja
es
ljmp
repz
cmp
add
int3
pop
test
nop
sub
sahf
jae
leave
inc
xor
mov
sbb
ret
or
xchg
aas
xor
lea
inc
xchg
sti
push
adc
lds
inc
ss
and
dec
imul
scas
cmp
lret
fsubl
and
scas
cld
jl
inc
pushf
mov
je
popa
daa
popf
pop
lret
test
pop
cmpsl
or
insb
scas
mov
in
and
out
sahf
pop
xchg
lock
les
mov
xor
ja
aad
add
sbb
jl
das
int3
mov
xchg
cmpsl
fbstp
mov
out
mov
pop
movsl
scas
roll
mov
cmp
mov
fwait
push
pusha
ret
jb
push
mov
ja
ds
adc
lods
xor
jp
aaa
aas
jo
notb
ret
mov
cmp
xor
sahf
clc
jp
stos
clc
repz
add
adc
pop
insb
pusha
aas
mov
add
xchg
aas
add
aaa
xlat
outsb
inc
or
jecxz
xlat
jl,pn
into
push
xor
jbe
lds
test
and
sub
xrelease
fwait
out
mov
hlt
sti
or
adc
outsl
push
dec
cmp
call
mov
xor
mov
pop
dec
inc
and
sub
add
dec
stc
mov
sub
dec
fidivrl
cld
fs
or
mov
mov
hlt
shll
inc
fistpll
pop
sbb
xchg
pop
iret
mov
xchg
bswap
test
stos
or
xchg
mov
pop
jl
cs
fcompl
sbb
hlt
mov
sub
aad
nop
push
adc
xchg
and
notb
call
mov
or
mov
jecxz
subb
jnp
sarb
sub
inc
mov
loop
aas
jo
sbb
adc
jb
leave
adc
jns
mov
aas
jo
mov
data16
enter
mov
fbld
push
mov
aas
imul
orl
into
andl
aas
sbb
add
xlat
lcall
push
jmp
sbb
mov
dec
mov
xor
rcll
pop
adc
mov
pop
sbb
jl
lods
and
aaa
int3
dec
push
pop
jmp
jl
push
xlat
xchg
sub
roll
jmp
data16
push
and
jnp
or
dec
pop
pop
mulb
repnz
iret
sub
test
in
movsb
fcoms
mov
mov
mov
stc
ret
andb
inc
in
mov
mov
cmp
pop
lahf
pop
adc
push
seto
adc
pop
sbb
jno
inc
sti
mov
stc
stc
sbb
mov
cmpsl
and
mov
loope
int3
mov
adc
test
jnp
fsubrl
pop
lock
xor
in
add
or
sbb
lods
mov
jae
lock
jl
adc
outsb
mov
gs
decl
das
pop
or
popf
out
jnp
jns
into
mov
cmpsb
cli
or
pop
jge
push
fnstenv
lods
push
outsb
icebp
stos
push
inc
or
rcrl
mov
movl
cld
pop
mov
cmc
test
jecxz
or
mov
out
sub
fimuls
dec
setp
sub
mov
pop
dec
nop
sahf
and
xchg
mov
push
add
cwtl
adc
sbb
xor
test
adcb
sbb
add
pop
out
fsubr
fs
push
adc
adc
orb
je
jne
std
sbb
push
or
mov
loop
mov
dec
mov
jmp
or
push
and
jo
jno
cmp
dec
mov
sub
add
dec
mov
mov
leave
mov
inc
loop
lea
mov
out
test
or
jnp
lods
sub
jnp
dec
scas
mov
lea
std
inc
ds
gs
hlt
scas
pop
inc
xchg
mulb
mov
nop
xchg
mov
sbb
mov
push
fdivrs
cmp
push
aaa
ficoms
lcall
aad
inc
pop
dec
outsb
dec
adc
fldcw
pop
sbb
sbb
cmpsl
cmp
jge
mov
dec
pop
sub
dec
or
je
xchg
dec
cli
out
into
je
mov
mov
mov
data16
insl
lret
jmp
shll
rol
or
sbb
and
xor
mov
xor
popf
jnp,pn
incl
add
dec
jns
xchg
fs
adc
fistl
inc
add
out
mov
add
imul
shrb
inc
sbb
sti
inc
inc
aaa
inc
scas
cmp
in
push
fsubs
push
xchg
push
daa
mov
insb
and
cltd
jmp
mov
dec
mov
lcall
xor
and
outsb
fbstp
mov
jns
test
sahf
jb
rorl
inc
fisubl
pop
cmp
push
out
adc
mov
shlb
cmpsl
and
pushf
lret
xor
test
cmp
das
rclb
out
cmc
int
xchg
enter
cmp
dec
cmpl
out
fwait
cli
dec
lods
fidivs
jbe
clc
mov
adc
clc
cmpsl
mov
pop
pushf
mov
fidivrl
jae
sub
in
adc
ds
in
mov
pop
sub
mov
push
mov
cmpsb
cmp
cs
mov
loop
push
repnz
std
inc
mov
xor
add
cmpsl
addr16
loop
push
fnstenv
mov
pushf
unpcklps
arpl
in
jle
and
sub
in
out
outsl
push
adc
sub
ficoml
std
add
add
das
jmp
xchg
inc
jae
add
or
scas
mov
adc
out
mov
js
pop
sbb
scas
sbb
ficoml
adc
cmp
sub
push
inc
test
mov
mov
pushf
lahf
in
jecxz
cmp
mov
xor
push
push
scas
xchg
aaa
mov
jecxz
xchg
cmpl
jg
add
popa
popa
iret
sbb
jo
adc
sbb
pusha
fnstenv
jnp
xor
aam
xor
rol
xchg
push
inc
jle
mulb
cmp
loopne
jmp
cmp
cmc
mov
daa
div
adc
sbb
int3
mov
iret
xorl
jmp
xchg
ficomps
jno
cmp
add
lea
inc
dec
mov
cmp
pop
sub
sti
pop
bound
push
pop
imul
or
mov
dec
xchg
lods
dec
push
dec
push
in
xchg
repz
pop
mov
daa
mov
mov
mov
mov
mov
mov
and
movb
pop
cwtl
enter
jb
subl
xchg
mov
arpl
or
mov
add
nop
pop
pop
and
xchg
cmp
mov
cmpsb
jmp
push
cmpb
mov
jmp
adc
sti
jno
sahf
cmp
mov
add
jg
arpl
and
cmp
aam
ret
cmpb
jmp
inc
into
dec
jge
aaa
jl
mov
aaa
dec
xchg
xchg
mov
int3
cwtl
add
call
clc
mov
mov
xchg
sbb
movsl
adc
fneni(8087
mov
scas
ss
add
sbb
outsb
mov
xor
orb
dec
adc
cli
data16
cmc
push
movsb
xchg
adc
xor
sahf
popf
mov
stc
dec
das
cs
xchg
popf
mov
mov
adc
shl
xchg
cli
bound
dec
aad
sub
xadd
xchg
mov
add
add
and
jge
xchg
push
bound
cmp
lret
mov
lock
push
imul
jp
outsb
pause
mov
ficomps
xchg
push
aaa
mov
out
test
lods
aam
in
mov
push
popf
jne
aas
xor
xlat
test
jmp
dec
cmpl
push
mov
jmp
and
push
int
pop
lock
xrelease
xchg
mov
mov
cwtl
cmc
loop
and
sbb
fmuls
mov
and
cli
out
dec
xlat
imul
ja
xor
mov
fcomip
repnz
mov
jmp
lock
std
or
fadd
jo
rolb
mov
test
mov
shrl
test
loope
pusha
mov
js
add
or
xlat
mov
loop
cld
add
inc
mov
pop
das
outsl
out
push
cmpsl
push
lcall
inc
adc
pop
cld
in
pushf
hlt
nop
pop
push
shll
ret
ljmp
fldt
cwtl
mov
jmp
or
into
mov
js
andl
lods
mov
add
add
mov
mov
test
push
lock
repnz
dec
mov
mov
sbb
int
js
clc
outsl
rcr
mov
dec
aaa
sbb
inc
mul
shll
hlt
pop
adc
or
ret
test
jmp
dec
test
mov
cmp
mov
cs
pop
rcl
mov
mov
and
loope
rol
and
pop
cmp
int3
cmp
call
sbb
mov
int3
xchg
or
jecxz
mov
push
rcrl
cmp
int3
in
inc
rorl
loop
add
lock
cmc
push
sub
pushf
daa
jne
in
jl
pushf
in
fistps
repz
sbb
mov
xor
imul
and
movsb
jnp
enter
loop
je
cmp
push
cmp
jge
testb
rcrl
pop
lcall
mov
xor
lock
push
mov
les
and
or
mov
notb
mov
ja
lcall
jnp
enter
mov
dec
push
shlb
sub
xor
push
lods
ret
das
adc
pop
hlt
movsb
subb
push
lods
sbb
int
dec
iret
cs
cmpsb
arpl
loop
aas
es
insb
iret
movsl
jno
fnstsw
xor
orb
push
add
xchg
add
imul
push
movd
cmp
push
jmp
push
cli
clc
out
sub
clc
lds
popa
push
pushf
sbb
mov
pop
testl
out
xlat
or
sbb
mov
push
push
sub
jmp
imul
cmovns
add
adc
int3
arpl
fcom
cmp
inc
mov
dec
repnz
ret
mov
subl
nop
push
mov
pop
js
in
push
je
in
push
push
or
or
mov
sbb
sbb
push
std
jae
movsl
mov
mov
cltd
and
cli
pop
adc
mov
push
xlat
push
into
add
mov
iret
lea
sub
mov
shll
push
cmp
inc
mov
jmp
cvttps2pi
jb
in
and
mov
movsb
xchg
aaa
pop
xchg
mov
xchg
cmp
jno
and
out
mov
std
sbb
testl
adc
jg
movsb
out
stc
cltd
push
int
or
aaa
xchg
jge
int
in
sahf
pop
push
dec
mov
and
das
into
push
icebp
sub
test
push
inc
bound
cwtl
xlat
add
cmp
adc
mov
scas
xor
into
es
or
xchg
dec
scas
and
dec
daa
cmpsb
sub
mov
out
lds
insb
adc
mov
test
imul
or
inc
add
sbb
movsb
mov
or
lods
add
mov
sub
pushf
jg
dec
test
add
dec
pop
dec
xchg
add
cmp
scas
dec
mov
std
lret
push
adc
mov
fwait
mov
out
lcall
fisubrs
leave
adc
sbb
arpl
or
div
lahf
int3
andl
add
inc
pushf
dec
xor
ja
mov
fs
outsl
add
mov
cs
punpckhwd
mov
or
inc
jb
nop
scas
sbb
repz
hlt
movsl
push
pop
rol
lret
add
fs
push
popf
mov
std
mov
pop
bnd
and
add
dec
jno
jmp
imul
adc
adcl
add
xchg
das
out
cmpsb
push
adc
cs
adc
push
ja
push
mov
movsb
fildl
leave
repz
int
cmp
add
pop
outsb
fsubrl
or
aaa
int
roll
ds
pushf
ret
mull
and
lods
addr16
mov
idivl
sub
jge
outsl
iret
lea
lahf
sahf
cmp
and
mov
cmp
cwtl
lods
xorb
test
mov
enter
mov
aam
push
divl
cmp
pop
sbb
mov
pop
push
pop
push
orb
adcl
and
mov
fs
jb
sbb
or
xchg
outsb
out
outsb
sbb
fdivs
cmp
jecxz
mov
xchg
aas
cmp
js
jl
loope
pop
push
enter
push
or
lret
ljmp
enter
pushf
into
fs
cmpsb
int
imul
andl
lahf
pusha
push
or
dec
push
lret
xor
and
sbb
mov
mov
xor
jle
mov
push
mov
imul
addr16
test
mov
stos
fcmovu
xchg
sahf
loop
clc
add
pop
cmp
lods
test
or
inc
fmull
popf
ja
stc
inc
and
aaa
sbb
ss
push
movsb
inc
sti
pop
sti
int3
sti
push
divb
leave
rclb
enter
mov
xor
fcomps
sbb
or
addr16
mov
mov
fcompl
movsl
insb
cmc
ja
cmpsl
mov
mov
jo
lock
mov
and
hlt
out
mov
xor
mov
out
sbb
and
inc
popa
jmp
in
mov
test
imul
leave
ds
xchg
xchg
ret
fisttps
and
push
mov
negl
adc
addr16
std
aad
or
mov
mov
inc
incb
cmpsb
mov
mov
and
sti
je
or
imul
xchg
lock
aam
sbbb
pop
out
fisubrl
mov
ja
das
dec
cmp
mov
mov
test
and
and
mov
push
leave
mov
int3
sub
stos
pop
push
add
lret
vaddps
popf
inc
rcrb
pop
push
dec
daa
fimuls
mov
or
cs
add
pop
movsb
sbb
and
repnz
cld
adc
das
pushf
push
popf
lret
rcll
cmp
push
and
add
out
jb
insb
xchg
sub
adc
pop
jb
jne
mov
xchg
popf
scas
ss
in
xchg
inc
push
jo
cli
pop
xchg
fs
jb
mov
ficoml
or
mov
mov
push
repnz
out
sub
mov
add
dec
cmp
mov
dec
shlb
jae
insb
or
inc
cmp
xchg
cmp
subl
dec
sub
mov
inc
jmp
inc
test
insl
loop
js
lods
int
idivb
insl
mov
jno
fdivr
aad
out
push
lock
mov
lret
cmp
ds
int3
movsb
push
lock
mov
cltd
push
xor
xor
cmp
inc
imul
lds
out
sub
subb
adc
scas
xor
xor
push
aas
icebp
bnd
aaa
dec
icebp
aas
sbb
out
in
inc
jle
ljmp
mov
jl
das
jo
inc
xor
xchg
push
jns
push
sub
movsl
mov
mov
push
stc
sbb
addr16
orl
es
sub
loope
or
push
xchg
inc
lods
add
lock
dec
js
fldt
ss
xchg
stos
mov
push
in
sbb
push
aaa
sbb
ret
lcall
mov
jne
imul
pop
dec
or
xchg
loop
in
mov
cmc
dec
mov
test
pushf
and
lahf
outsb
xchg
push
bswap
fidivrs
xor
cmp
push
pop
shrb
sbb
cmp
leave
es
adc
sbb
mov
popa
sbb
sbb
adc
mov
cwtl
inc
daa
into
popa
mov
clc
add
jge
out
in
sub
test
mov
pop
idivl
mov
aas
add
sbb
loop
jnp
mov
mov
sti
aas
push
adc
push
adc
cmp
jmp
in
mov
xchg
add
les
and
jne
jmp
das
cld
ds
mov
orl
testb
stos
pop
or
xor
popa
sub
fs
mov
sub
test
leave
xchg
add
shl
add
sbb
test
xchg
xchg
sub
ret
mov
push
mov
sub
push
movsb
inc
fldenv
jmp
incl
adc
or
in
call
mov
sbb
xchg
repnz
outsl
cmp
push
adc
addr16
dec
mov
cmp
add
dec
addl
enter
or
in
sbb
jmp
pop
fwait
mov
mov
mov
cs
mov
jp
add
cmp
or
repz
shrb
or
fsub
and
das
push
mov
fs
je
fmuls
mov
mov
mov
add
rcrb
inc
sahf
adc
mov
and
cmc
add
push
add
jge
pop
nop
and
pop
clc
rol
in
mov
adc
ja
bound
add
and
repz
pusha
inc
add
add
fdivs
mov
js
in
jb
push
mov
mov
sub
in
dec
mov
inc
in
adc
xlat
cld
add
lods
jge
or
jle
stos
loope
mov
fnop
pushl
cmp
bound
sbb
sub
gs
in
sbb
dec
sbb
or
in
mov
shr
iret
add
xor
adc
xchg
ret
in
push
fucomp
fidivl
mov
mov
test
loopne
sbb
inc
lods
fstps
pop
cli
rcll
push
xlat
movsl
dec
push
push
lret
popf
push
jmp
ja,pt
push
and
sub
push
pop
or
scas
xchg
pop
stos
jnp
mov
aas
in
stos
int
fidivrl
loope
mov
insl
mov
push
adcb
xor
push
jg
pop
inc
push
les
cmp
jle
jnp
cli
or
cmpsl
inc
mov
and
in
push
iret
xchg
mov
test
push
andb
aaa
mov
imul
mov
cmp
insb
xchg
hlt
hlt
ljmp
ja
and
ret
cmpsl
adc
stos
out
shr
movsl
sarl
xchg
mov
mov
sahf
adc
aad
fiadds
cmp
xorb
mov
pop
scas
leave
push
repnz
rclb
mov
iret
aas
pop
cs
xchg
push
dec
hlt
jae
push
addl
clc
cmp
sub
cmp
mov
inc
add
repnz
in
sbb
pop
mov
mov
mov
loope
ret
push
dec
leave
nop
or
sbb
mov
or
push
pushf
call
fwait
xor
xchg
add
xchg
shlb
dec
sbb
lret
mov
sbb
pop
pop
mov
ja
call
sbb
testl
in
daa
xchg
push
xorl
inc
lods
ja
push
popa
scas
stc
test
inc
cmpsb
xchg
rorb
inc
and
ds
jno
incb
outsb
hlt
mov
xor
fdivrl
das
xor
jns
ja
shll
and
in
scas
pop
jne
push
insl
pop
pop
insb
push
sbb
and
cmp
sub
sahf
mov
pop
fs
outsl
cmp
lods
fwait
mov
shrl
roll
dec
pop
push
mov
jle
fistl
and
js
pop
xchg
mov
sub
sahf
mov
jnp
popf
sahf
scas
add
xchg
in
push
xor
xor
jle
cmp
cmp
fadd
push
fsubl
and
cwtl
enter
push
sbb
int3
jo
pop
mov
jecxz
mov
mov
push
mov
data16
add
mov
mov
lea
mov
and
sub
pop
mov
jg
ret
icebp
dec
jns
mov
es
cmp
ficoml
iret
scas
lock
hlt
mov
outsb
test
iret
mov
lods
sti
jl
inc
mov
mov
shrl
xor
hlt
pop
mov
loopne
in
xor
jnp
cmp
test
and
roll
jle
mov
das
clc
add
dec
clc
mov
push
dec
xor
xor
sub
add
divb
inc
mov
shrl
push
sub
popa
xlat
pop
push
pushf
push
or
mov
cmp
mov
ds
adc
bound
outsb
arpl
pusha
sub
out
icebp
add
cmp
cmp
neg
ljmp
jbe
pop
mov
push
loop
inc
movsb
notb
dec
nop
int
dec
ret
iret
inc
shl
cmp
xchg
arpl
pop
stc
xchg
mov
or
aaa
gs
arpl
and
add
inc
mov
insb
addr16
adc
mov
enter
jge
fiadds
loop
pushf
sub
int
lahf
cltd
dec
push
lahf
push
fwait
sub
xchg
mov
mov
movsl
addr16
mov
cltd
repz
inc
push
jg
or
jge
lret
xchg
inc
pop
lds
mov
movsb
fdivrl
xlat
dec
notrack
and
fdivs
xchg
fwait
dec
or
pop
ds
ds
lods
mov
jmp
roll
call
sbb
inc
dec
lods
jl
sub
ss
or
mov
bound
imul
or
adc
scas
inc
xchg
out
dec
jb
sar
sbb
push
pop
sub
notl
outsb
mov
mov
hlt
push
jb
nop
add
or
imul
xor
inc
cmp
movsb
push
fisubrs
or
pusha
push
cmp
lret
data16
mov
movsl
nop
inc
adc
sahf
push
loopne
mov
std
pop
in
xor
and
push
inc
dec
nop
daa
fsubrp
shl
jp
test
sbb
jg
and
add
and
xor
data16
jae
ret
aad
add
lea
mov
xor
sbb
push
daa
insb
or
cwtl
and
and
add
or
ljmp
push
dec
loopne
mov
mov
cmpsb
and
fcompl
pop
ficoml
sub
shrl
cs
xchg
inc
mov
popa
out
dec
out
mov
xchg
lcall
and
add
aas
pop
addl
lcall
nop
mov
xor
jo
mov
xchg
call
loopne
xchg
pop
xchg
sbb
xchg
in
hlt
pushf
mov
dec
adc
nop
and
and
jmp
in
jecxz
fiadds
sbb
inc
shrl
scas
test
lcall
mov
inc
jb
mov
mov
loope
xor
ret
jl
js
je
dec
pop
ret
or
xor
lret
in
pop
data16
xchg
ret
ja
repz
addr16
jg
cmp
inc
repz
cmpsb
outsl
movsl
sub
mov
ds
std
or
jecxz
push
xchg
jle
or
pop
jmp
mov
dec
lcall
jae
repz
cli
push
out
add
int
test
inc
popf
jae
mov
jb
sti
sbb
sbb
mov
dec
call
push
mov
scas
dec
and
enter
imul
inc
pop
push
fs
test
movsl
mov
adc
cld
daa
xor
jo
mov
mov
cmp
sub
xchg
xorl
pop
mov
sub
mov
push
loopne
call
lahf
sub
mov
pop
dec
sahf
sub
push
push
jge
cmp
lods
mov
cmp
push
jne
adc
add
xor
aad
add
pop
push
aad
sub
xchg
jbe
cs
mov
repnz
inc
jge
das
add
out
repnz
xlat
xchg
mov
dec
jbe
lock
mov
add
sbb
and
insl
and
mov
mov
shld
dec
sub
scas
in
imul
xor
aad
ja
push
xchg
xchg
dec
adc
pusha
dec
push
ret
mov
test
or
dec
jnp
lret
popf
mov
call
repnz
clc
inc
mov
into
mov
and
test
sub
stc
test
inc
push
sub
inc
stos
in
insb
test
lds
cwtl
sbb
jne
jg
mov
xchg
call
out
jge
jmp
push
push
ss
dec
xchg
insb
test
icebp
push
lods
mov
data16
fcoms
push
into
mov
stos
mov
add
jp
idiv
cld
or
xchg
sbb
mov
idivb
out
xchg
xchg
and
cmc
xor
or
mov
sbb
cltd
out
xchg
out
scas
daa
jmp
mov
dec
loopne
pop
ja
jl
adc
adc
mov
inc
cmp
cmp
or
pushf
mov
mov
loope
or
stos
adc
mov
ror
jae
cli
inc
in
lret
or
mov
dec
push
mov
in
fiaddl
mov
call
ss
clc
xchg
xor
imul
test
lahf
jge
jp
insb
or
rolb
xor
xchg
fwait
jns
push
cmp
sub
jle
or
dec
mov
test
in
adc
push
inc
adc
push
dec
push
mov
mov
fsts
icebp
test
subl
call
or
movsl
es
inc
int
fisubrs
add
sub
repnz
das
dec
movsl
lods
testl
das
mov
mov
sbb
cmp
and
pop
enter
and
cli
adc
mov
pop
cmp
sbb
mov
dec
mov
ja
mov
dec
sbbb
sbb
out
ja
mov
shrl
movsl
jmp
and
into
push
push
adc
pushf
jg
or
stos
dec
movsb
xchg
movsb
and
pop
lahf
xor
loop
jb
or
repnz
int3
jmp
xor
subl
fidivrl
add
mov
pop
push
or
mov
int3
mov
mov
sbb
mov
sbb
xchg
das
cmpsb
loopne
ss
lcall
rclb
xchg
fisubrl
repz
add
adc
shl
cld
pop
xchg
mov
mov
stos
int3
mov
mov
sub
push
movl
mov
pop
adc
and
faddl
inc
imulb
out
adc
pop
aaa
sarl
rclb
xchg
inc
dec
mov
xchg
loop
sub
push
pop
lods
lods
sbb
adc
fdivrl
add
mov
mov
stos
rcll
or
jp
jg
pop
imull
sbb
mov
imul
stos
push
std
push
addr16
in
pop
pusha
sti
jmp
sbb
mov
push
ja
cmp
cmp
loop
das
test
or
insb
inc
or
aas
int
add
mov
and
jno
push
mov
leave
jl
jne
out
jecxz
jl
sub
inc
into
lds
dec
mov
and
daa
pop
pusha
push
pop
inc
xchg
outsb
rcl
xchg
imul
or
scas
outsb
cmp
sahf
andl
push
pop
add
mov
mov
fmuls
andb
addr16
mov
mov
sahf
dec
mov
and
push
inc
adc
mov
iret
mov
xor
mov
ljmp
ja
stos
fsubl
jb
mov
cltd
mov
xor
xchg
cmp
data16
enter
orl
inc
xchg
and
cmp
rorl
js
test
mov
push
cmpsl
leave
subb
cmp
xchg
mov
pop
add
aam
aaa
mov
dec
push
orb
cwtl
fdivrs
and
push
aam
sub
sub
mov
or
into
fdivl
xchg
sbb
imul
and
repz
xor
loopne
adc
je
notb
daa
sub
pop
mov
ja
mov
sub
and
sahf
cmp
cld
repnz
mov
sbb
iret
xchg
lret
int
repz
aaa
scas
clc
jge
jmp
and
jle
and
inc
jg
push
lods
mov
pop
pop
xchg
sub
inc
dec
lods
cltd
stc
push
sbb
xchg
mov
push
xchg
push
outsb
add
jae
inc
mov
xchg
decb
xchg
inc
add
push
fisubrs
or
repz
mov
aaa
clc
jno
insb
push
pop
fwait
out
dec
or
mov
sbb
or
aas
out
rcrb
sub
fsubs
mov
mov
xchg
lods
cmp
xor
mov
clc
push
fstp
ss
out
cmp
fstps
jae
aad
bound
adcb
sbb
das
push
push
xor
xor
inc
imul
arpl
ljmp
xchg
push
mov
imul
nop
pop
testl
orb
call
aam
adc
stc
int
sub
repz
dec
out
cmp
xorl
pop
sub
shlb
ret
sti
popa
jmp
pop
fistl
les
dec
orl
xlat
or
arpl
mov
int3
add
jg
nop
xchg
shlb
or
jle
cmpsl
cmc
sbb
jmp
testl
xchg
fsincos
clc
sub
pop
jle
dec
insb
adc
adc
add
dec
mov
inc
out
enter
not
iret
xchg
mov
mov
adc
shl
push
pop
mov
sbb
or
sbb
lods
push
xor
stc
jmp
fidivrl
sub
imul
mull
jb
fnstenv
push
jns
shr
repz
mov
das
xor
inc
mov
test
cmp
jle
mov
in
in
sub
fcmovu
mov
jecxz
fildll
mov
loop
add
call
call
in
pop
xchg
repnz
dec
adc
cmpsb
data16
mov
adc
imul
pop
cmp
popa
loope
push
out
adc
xor
scas
ret
roll
mov
iret
cmp
push
or
xlat
repz
dec
xchg
loop
call
dec
or
or
pop
push
je
xor
push
or
dec
inc
fldenv
pop
jmp
out
cltd
mov
or
mov
mov
fnstcw
rcrl
aad
enter
sub
loop
and
xchg
xchg
test
pusha
in
mov
daa
lods
adc
cwtl
lods
cwtd
out
test
mov
sub
fcoms
daa
inc
outsb
xor
negl
and
cwtl
dec
cmp
inc
aad
dec
sbb
cld
dec
inc
iret
sbb
xlat
lret
out
shrl
ja
adc
add
cmpsl
rep
js
test
pop
inc
mov
ffree
stc
das
mov
ljmp
stos
jecxz
mov
push
jp
adc
cmp
mov
pop
loopne
xchg
push
cld
cmc
les
xor
sub
mov
popl
cmc
loopne
js
cmp
xor
rclb
mov
scas
cmp
jno
aaa
or
addb
cmp
sbb
jmp
ja
pop
rep
faddl
lea
jl
movsb
imul
adc
int
inc
loopne
cs
inc
pop
push
movsb
les
lret
sub
repz
mov
shr
and
jg
btr
iretw
or
xchg
shl
mov
and
xchg
shrl
aad
popa
das
notl
xor
pop
adc
jl
inc
lods
lds
push
sbb
popa
lods
mov
jg
and
add
or
mov
aas
les
pop
out
nop
in
sub
adc
movsb
dec
mov
add
sahf
repnz
or
cmp
mov
and
cmpsl
sub
mov
xchg
cmp
into
fildll
test
and
test
inc
test
xchg
lds
dec
cmp
cmp
repnz
dec
into
pop
aaa
sti
add
pop
xor
mov
dec
icebp
dec
les
pop
cmp
or
dec
inc
mull
sahf
mov
jmp
aas
mov
fcom
loopew
pop
xchg
jl
adc
cmp
mov
lcall
sbb
lret
inc
fmuls
jmp
xor
dec
pop
std
test
and
add
lods
inc
loope
loopne
scas
and
out
or
sbb
les
push
jp
xor
mov
fldcw
push
call
enter
push
mul
adc
xor
and
imul
ljmp
or
test
push
aad
add
hlt
or
mov
call
mov
and
lret
cwtl
and
cmp
or
sarb
rcrl
mov
std
mov
mov
mov
or
dec
inc
or
mov
std
xchg
les
cmp
and
mov
notb
leave
jbe
orl
js
xor
mov
adc
imul
ficompl
sub
ljmp
ds
jle
push
loop
aaa
bound
xor
jle
cmp
in
jmp
adc
mov
shll
fwait
in
push
adc
sub
sub
push
dec
ret
push
jg
mov
xor
and
dec
mov
movsl
jl
in
and
inc
fisubl
mov
or
std
push
adc
call
jecxz
es
lods
push
adc
ffree
sbb
and
or
mov
lods
jb
mov
orb
pop
mov
iret
cmp
mov
into
push
decl
adc
xchg
nop
mov
rcrl
scas
jge
pop
pop
xchg
ret
cmpsl
push
sti
mul
mov
jnp
mov
ljmp
cmpl
clc
add
xor
aaa
icebp
repnz
inc
or
bound
inc
mov
cmp
sub
fsubs
and
xchg
mov
cmp
test
pusha
cmp
sbb
jp
adc
adc
jge
lret
mov
notb
jecxz
adc
jp
js
int3
popa
sbb
aas
mov
sbb
loop
mov
inc
push
fldenv
adc
mov
les
mov
pop
pop
push
mov
outsb
sti
in
push
adc
dec
cmp
xchg
push
outsl
lds
rcr
les
sbb
call
or
cli
mov
negb
mov
dec
stc
mov
in
fwait
sbb
mov
and
shl
clc
in
add
push
pop
call
in
adcb
loopne
jo
inc
dec
inc
add
mov
mov
add
or
mov
call
cmp
fcmovnu
sbb
sub
jecxz
adcb
mov
out
sbb
sbb
mov
xor
aad
pop
pop
push
xor
and
mov
sahf
mov
push
mov
in
loope
jp
mov
sub
jne
adc
sbb
aas
fildl
nop
dec
and
inc
cmp
xor
test
push
icebp
pop
lds
bound
sbb
mov
mov
add
sbb
pop
xor
in
pushf
mov
dec
leave
pop
xchg
decl
imul
jo
lcall
pushf
mov
mov
test
xor
add
in
push
das
or
nop
mov
arpl
addb
lock
jno
xchg
pop
xchg
icebp
pop
pop
jb
jae
std
sub
bound
add
xchg
int3
sub
fiaddl
cmp
pushf
imul
xor
or
xchg
inc
sub
dec
pusha
push
aam
fisttps
adc
jle
out
lcall
lahf
or
dec
int3
dec
ljmp
inc
mov
xchg
imul
rol
fnsave
jge
int
adc
repz
pop
std
mov
lcall
pop
sub
sub
out
les
cmp
dec
mov
xchg
pop
ja
icebp
xchg
pop
mov
stc
je
mov
jae
sbb
inc
mov
aaa
sbb
push
sti
mov
je
mov
push
femms
push
shl
mov
test
dec
pop
fidivrl
push
sbb
xchg
xchg
xor
std
shrl
lcall
in
mov
mov
fs
xchg
cld
out
xor
sbb
icebp
cmp
popa
sub
fwait
pusha
add
outsb
orl
and
cld
push
xchg
out
pop
int3
test
mov
cmpsl
xor
jl
sahf
mov
sarb
xor
dec
dec
dec
push
cmpsl
adc
jl
jne
mov
mov
inc
and
imul
inc
dec
mov
dec
ja
jbe
sub
mov
shrb
add
arpl
test
ficoms
jo
push
and
sub
xchg
mov
movsb
dec
stos
mov
leave
pop
jmp
push
nop
data16
sarl
shlb
cmp
repnz
add
pop
int3
and
packuswb
jno
std
cli
loopne
sahf
cmp
xor
je
push
movsl
icebp
ret
adc
or
sbb
pop
out
mov
sub
in
sub
stos
sbb
movsl
xor
mov
mov
addr16
clc
fadd
xor
pop
movl
stos
mov
or
mov
adc
pop
push
out
stos
xorb
lods
ss
pop
pop
imul
mov
lods
enter
sahf
loop
adc
daa
push
pop
rcl
shlb
rcrl
aas
gs
scas
cld
sub
shll
cmpsl
dec
mov
xchg
sbb
test
stos
pop
lock
das
mov
xchg
daa
mov
sub
dec
mov
mov
ret
pop
mov
cmp
rorb
inc
dec
sbb
mov
pop
test
push
sarl
add
pop
inc
mov
push
and
aad
xorl
data16
mov
fidivs
jnp
jb
mov
arpl
je
cmp
push
push
push
and
add
mov
inc
insl
aaa
test
mov
pop
dec
jge
or
add
loop
popa
inc
adc
bswap
jle
and
gs
or
xor
and
push
aaa
sahf
in
sbb
jg
cli
dec
fs
adc
cmp
mov
into
push
iret
stos
popa
gs
vcvtsi2sdl
adc
or
bound
mov
ret
movsb
sub
imul
and
out
cmp
xor
mov
call
aas
decl
subb
pop
add
lcall
cmc
mov
sti
mov
shrb
repnz
lds
cmp
cmp
cmpb
jge
cmc
orb
addr16
add
inc
cmp
gs
ja
imul
loop
add
imul
cltd
push
add
dec
mov
adc
pop
and
jmp
stos
call
mov
sub
out
mov
dec
or
inc
daa
jmp
mov
mov
rorl
int3
sub
sbb
mov
add
xchg
add
pushf
sbb
mov
pop
xor
mov
outsl
xor
iret
push
jb
sbb
jmp
pop
orl
mov
loop
sub
movsb
mov
cmpsb
aas
pop
or
push
add
add
mov
sarl
or
in
push
ja
cmp
shrl
sbb
sbb
lcall
out
imul
jno
and
aas
adc
dec
or
xchg
pop
push
mov
lcall
mov
push
scas
xchg
nop
fmull
xchg
jb
add
sbb
pop
rclb
xchg
icebp
mov
mov
stos
mov
push
in
mov
stos
lret
outsb
mov
pop
arpl
adc
lods
loop
pop
in
adc
int
nop
ds
add
adc
sbbb
pop
nop
mov
movsl
ret
int
jmp
pop
xchg
sahf
mov
popa
gs
cltd
mov
adc
clc
xchg
mov
orb
ljmp
test
mov
push
aas
mov
movsb
mov
mov
sub
jb
jbe
xor
inc
jns
aam
sbb
and
aam
or
sbb
xchg
out
push
or
sbb
pop
inc
idivl
jmp
push
lods
lret
pslld
adc
mov
iret
mov
addr16
sbb
cmp
push
push
inc
inc
pop
notl
pop
lahf
shll
push
ret
push
jecxz
pop
sarb
and
insl
jb
cmp
sub
sbb
in
add
xor
sbb
fiaddl
call
push
ret
hlt
das
jmp
clc
mov
call
scas
xchg
frstor
push
pop
fists
mov
lods
push
push
sbb
testb
mov
fnstenv
mov
sub
dec
pop
cltd
imul
testb
gs
roll
mov
push
sahf
insl
lock
pop
push
aad
mov
pop
sbb
push
in
jmp
jb
arpl
jmp
pushf
cli
imul
outsl
int
fisttps
dec
pusha
mov
xlat
cli
mov
jnp
push
popf
xor
dec
ret
daa
xor
cmp
inc
outsb
sub
mov
sub
xchg
arpl
push
pop
aad
and
or
test
and
or
mov
inc
cmp
cmp
cmp
sbb
je
jecxz
fs
lock
scas
sbb
aad
pop
std
mov
mov
xchg
and
jbe
jg
faddp
push
into
loop
jno
adc
ja
inc
lret
pop
push
push
mov
pop
adc
mov
xchg
or
adcl
out
jo
loopne
adc
cmp
push
push
xchg
push
mov
mov
out
xlat
and
cmp
ljmp
push
repz
jae
sub
lret
dec
inc
rcll
jb
std
xor
scas
xor
cmpsl
jnp
xor
icebp
xor
jb
pop
repz
xor
in
or
cmp
rorb
mov
lea
adcb
sbbl
in
dec
pop
cs
nop
and
push
out
aad
fs
in
imul
test
lar
cmp
rcr
and
mov
gs
mov
jecxz
push
mov
push
and
outsl
mov
jns
add
push
leave
addl
and
push
adc
aam
cwtl
out
scas
inc
pop
fs
push
orb
subl
shlb
test
fildl
lock
xchg
and
xchg
arpl
or
addr16
ljmp
mov
jecxz
mov
sbb
pushf
push
jg
andl
push
mov
jno
mov
fwait
sub
jge
dec
fs
push
mov
cmp
dec
and
jns
adc
cmp
add
or
sahf
dec
sub
sub
ret
rolb
fstl
fwait
arpl
jge
incl
pop
or
fcoms
push
gs
imul
pop
pop
cmp
push
sarl
adc
fdivs
and
aas
stos
push
cmpsb
xlat
fildl
ja
push
outsb
and
into
add
pop
pop
popf
cld
inc
sbb
cmp
dec
loopne
divb
sub
movsb
jg
fst
mov
pusha
mov
and
ret
int
xchg
sbb
rolb
dec
lods
mov
add
cmpl
mov
cmc
inc
pushf
cmp
xchg
and
sub
lods
rcrb
jbe
push
mov
cmc
test
mov
push
sub
aam
cmp
rcrb
enter
jge
and
sub
mov
push
lds
dec
cltd
out
cmp
pushf
scas
hlt
adc
sahf
cmp
out
out
adc
sub
arpl
aad
sahf
sub
inc
or
call
sub
push
jmp
sub
sub
sti
xor
xchg
xchg
sub
insb
outsl
pop
sti
mov
enter
fisubrs
test
sbb
add
jae
cltd
adc
addb
mov
int3
adc
das
jno
add
mov
movsl
cld
outsl
and
cmp
xor
into
jl
adc
int
mov
iret
imulb
or
push
in
push
pop
push
and
add
cld
stos
int3
clc
movsl
bound
xor
pop
rorl
lahf
push
pop
lds
dec
int
sub
lcall
outsl
sub
mov
sti
enter
dec
leave
xchg
les
mov
add
icebp
test
xlat
pop
mov
faddl
or
or
jo
mov
jge
add
icebp
mov
cmpsb
xor
movsl
movsb
push
dec
or
ficomps
cmpsl
movsb
mov
lret
dec
dec
gs
mov
inc
sub
xchg
pop
xchg
pop
cwtl
sub
xor
decb
call
arpl
dec
xchg
out
fnstsw
in
stos
xorb
cltd
cmp
xor
push
adc
add
insl
lcall
pop
mov
or
adc
mull
adc
sbb
push
repnz
scas
push
fs
mov
xorb
adc
mov
cmpl
out
out
aad
or
aad
fldpi
push
mov
pusha
mov
fnsetpm(287
sbb
cmpl
pop
fisubrs
in
imul
inc
mov
hlt
push
dec
stc
ret
roll
xor
push
sbb
into
push
jbe
add
cmp
stc
mov
push
push
cmp
stos
fcoms
mov
imul
adc
daa
xchg
pushl
fsts
add
pop
loop
lea
mov
ret
mov
pop
jg
dec
stos
out
daa
xor
push
mov
mov
jo
repz
push
dec
and
or
sub
inc
push
out
stc
test
sub
add
and
rclb
push
xor
aam
pop
jg
cltd
shrl
or
jle
loop
dec
and
pushf
mov
lock
loop
mov
out
xorb
inc
mov
roll
es
cli
aas
jnp
call
sub
add
shlb
cmp
in
imul
xchg
daa
je
mov
add
xchg
pop
xchg
and
mov
das
jae
push
push
sub
jo
pop
sbb
ljmp
mov
jns
adc
jecxz
ss
test
dec
loope
inc
add
mov
aas
push
and
int3
js
popa
sub
in
arpl
call
xor
loopne
pop
jnp
mov
mov
sbb
xor
xchg
enter
push
addr16
mov
adc
dec
mov
mov
notl
pop
leave
jmp
jge
sub
jns
sbb
mov
sti
rol
aad
or
popf
shrl
lcall
jnp
sub
inc
mov
and
sub
mov
xor
stos
loop
adc
inc
pop
out
pop
and
int
mov
lret
mov
pop
xchg
mov
lea
mov
push
push
pop
inc
popf
loopne
pop
and
dec
add
adc
movsb
xchg
sahf
into
pop
sti
aas
dec
push
fstl
lods
mov
out
sbb
and
add
lcall
imul
cli
xor
sbb
mov
pusha
mov
xchg
or
scas
lret
pop
aam
inc
pushf
nop
bound
fnstenv
and
fwait
dec
inc
mov
mov
adc
dec
cmp
push
sbb
fmul
outsb
loop
add
dec
mov
pop
cmp
sub
xchg
mov
cli
icebp
lock
stc
mov
xor
test
cltd
dec
add
idivb
fiaddl
rolb
push
cs
fildll
fsub
mov
jle
and
outsl
gs
inc
jmp
aam
popa
loopne
adc
lahf
xchg
in
movups
xchg
dec
daa
pop
mov
insl
addr16
inc
dec
dec
stc
cmp
dec
mov
pop
xchg
jge
sub
mov
repz
addr16
push
push
xchg
add
lret
aaa
es
cmpsb
and
pop
daa
jecxz
sti
push
push
data16
mov
adc
sub
push
sbb
adc
push
mov
cmp
pop
xchg
mov
jne
outsl
loopne
xchg
xchg
xorb
push
add
insl
or
das
lcall
xor
adc
std
cmpb
cmpl
scas
mov
mov
mov
xchg
push
push
mov
push
ret
outsb
data16
lcall
es
subl
stos
dec
aam
in
push
inc
lods
and
icebp
fisubl
rorl
push
push
mov
sbb
divb
sub
cmp
push
lret
mov
lahf
and
jb
rorl
outsl
lods
ret
clc
daa
inc
outsb
or
cmpsb
sar
xchg
cmc
and
lock
outsl
popa
inc
jae
push
pop
subl
notl
aaa
add
dec
rorb
vpmullw
jb
into
aaa
enter
mov
out
mov
xor
bnd
jg
test
dec
cmp
insl
inc
or
jmp
adc
cs
jle
push
enter
mov
sub
pop
lock
cwtl
inc
mov
int
push
test
pushf
xor
mov
sub
mov
lret
push
addr16
add
and
mov
mov
data16
pop
les
jp
stos
insl
fldcw
les
inc
xor
cli
cmpsb
push
ud1
int3
inc
outsl
jae,pn
adc
inc
mov
lods
adc
out
jno
xor
jg
fstl
enter
dec
sbb
aad
sub
mov
mov
mov
inc
jge,pt
adc
mov
aas
ljmp
mov
jo
xor
outsb
popf
add
clc
ja
xchg
adc
lock
cmc
jmp
add
aam
cmp
cmpsb
shll
push
insb
or
mov
xchg
test
or
sbb
mov
jbe
lods
mov
dec
loopne
xor
xchg
jg
stos
mov
pop
inc
rolb
xchg
sbb
imul
aas
lahf
sti
leave
lods
push
mov
dec
mov
push
outsb
mov
xchg
stos
add
push
cmpsb
rorl
mov
mov
stos
sbb
mov
popa
ja
jl
jle
and
and
xchg
movsl
popa
inc
repnz
jae
outsl
and
sub
or
dec
fnstcw
movb
rclb
popa
roll
dec
mov
cmpsb
fimuls
jae
dec
push
into
sbb
ljmp
aam
cmp
clc
push
add
sub
mov
pop
jae
mov
cwtl
add
or
sahf
clc
test
xor
push
stos
jp
lods
lock
and
cmc
enter
jnp
adc
cmp
lret
cmp
or
fwait
ds
in
pop
bound
icebp
jp
divb
cmp
out
iret
js
dec
movsb
mov
addr16
mov
cmpl
mov
sbb
sbb
popa
sub
test
test
add
es
mov
push
hlt
iret
and
cmpsb
jl
adc
push
out
outsb
enter
fsubs
xor
imul
mov
shrl
xchg
lret
mov
push
sub
lahf
fsubrs
lahf
sbb
or
adc
add
loope
das
cmpsl
lock
mov
push
cmp
sub
cmp
lods
mov
sbb
imul
adcb
leave
lret
xchg
ret
out
data16
shlb
push
or
out
out
sbb
test
in
cwtl
mov
cmp
sarl
mov
jne
xchg
jmp
mov
in
sbb
mov
pop
xlat
add
inc
imul
jp
lcall
leave
push
je
pop
dec
pop
sbb
add
pop
outsb
add
loop
ret
or
lods
lods
xchg
sub
xchg
ret
rol
xor
fs
popa
cmp
dec
cmp
movsb
sub
sti
stos
mov
fildl
les
arpl
mov
stc
pop
pop
das
outsb
mov
fwait
popf
cmp
icebp
ficomps
cld
sti
jl
cmpsl
mov
jbe
shlb
dec
ljmp
cltd
scas
pop
fimuls
jnp
mov
lahf
jb
add
push
fdivrl
ja
popa
scas
sub
push
aas
addl
cli
jle
fucomi
push
into
ss
pop
mov
and
popa
mov
test
fwait
iret
in
sub
clc
mov
repz
std
scas
int3
lret
dec
mov
das
test
and
iret
test
mov
in
movsb
aaa
mov
rcrb
popa
dec
and
ja
xchg
das
rolb
into
pop
xor
xor
fnstsw
rolb
lds
lods
std
ljmp
repnz
sbb
ficomps
sti
outsb
jge
cmc
aam
in
inc
hlt
xchg
call
push
or
fs
stc
add
lock
dec
pop
cmp
jnp
jmp
cmpsl
or
and
jl
adc
fcompl
sar
daa
mov
dec
test
push
inc
cs
jo
mov
mov
andb
lods
pop
jnp
jno
push
pushf
xor
sahf
lock
push
arpl
mov
jb
or
ret
repz
inc
shlb
cwtl
lock
les
pusha
push
dec
cmpsl
je
movsb
insb
lret
js
pop
arpl
scas
lret
inc
outsl
test
ret
ljmp
mov
cmp
int
pop
jle
sbb
sbb
movsb
bound
aas
sbb
xorl
xor
andb
jle
jne
in
mov
fisttps
push
push
mov
xor
push
mov
dec
sahf
scas
out
pop
jne
gs
test
lea
pop
jmp
cmp
jno
xor
jg
stos
mov
test
in
hlt
adc
rclb
xorb
sbb
pushf
imul
adc
int
jecxz
xchg
xchg
mov
push
int
pop
das
cmp
icebp
call
loope
loopne
mov
cmp
ror
jns
xchg
jo
inc
pop
mov
imul
sub
sub
sbb
inc
add
push
or
andl
in
xchg
cs
ds
into
scas
inc
mov
fs
arpl
in
mov
mov
dec
mov
pop
inc
pop
cmpl
mov
stos
mov
fs
inc
or
gs
lods
or
popf
aas
pop
mov
xor
sahf
pop
adc
cmc
arpl
cli
sub
xchg
addb
mov
dec
sbb
mov
push
add
gs
cltd
dec
nop
push
push
mov
xchg
adc
sbb
xchg
and
dec
andl
mov
mov
cmp
pop
pop
scas
je
adc
jge
xchg
pop
data16
xor
aas
mov
in
push
repz
add
cmp
dec
pop
clc
in
in
inc
mov
js
mov
aad
aad
cld
pushf
xor
mov
les
insb
dec
ret
push
imul
xchg
xchg
and
mov
sbb
pop
in
xor
mov
cmpsl
in
xchg
jno
xchg
xor
jl
add
pop
push
into
mov
inc
cmp
insl
in
hlt
fnsave
fcmovu
iret
adc
sbb
movl
lret
std
mov
sub
sub
aad
jb
mov
jns
xor
cmpsl
inc
sub
loop
add
test
pop
popf
repnz
nop
inc
or
add
mov
push
ds
ja
lock
sti
or
sbb
jb
js
je
shl
cmp
sarb
or
jo
mov
out
cmp
shrl
add
test
dec
nop
arpl
cmp
and
xor
jl
addr16
mov
xchg
jmp
std
mov
lcall
mov
mov
sbb
dec
rcrb
imul
mov
mov
mov
imul
xchg
mov
adc
pop
test
inc
fadd
jns
sti
ljmp
fcompl
int
xor
add
push
js
out
testl
sub
adc
outsl
pushf
xor
repz
imull
xor
sti
or
push
stos
bound
mov
dec
push
repz
pop
insl
fsts
jg
lods
jle
jmp
cli
jbe
add
out
movsb
ja
movsl
push
pop
push
sub
adc
mov
push
and
fadd
fnsave
adcl
fistps
in
fs
push
cmp
adc
sub
std
mov
add
jl
jb
sub
pop
push
cli
in
inc
hlt
mov
leave
and
cli
pop
xchg
inc
leave
sahf
and
daa
sti
xor
sbb
dec
ret
shr
mov
jno
jns
mov
inc
cmp
adc
ja
inc
and
or
xchg
add
inc
mov
fildll
jae
push
jmp
vpaddb
xchg
popa
pop
mov
push
mov
push
sbb
in
rclb
aaa
outsl
call
or
fiaddl
jecxz
jb
jne
jl
mov
outsl
cltd
xor
sti
sahf
push
sbb
mov
mov
mov
pop
push
push
jge
lock
stos
stc
fwait
jp
shll
ret
movsl
add
or
cmpsl
add
movl
push
leave
into
xchg
fldt
mov
ds
addr16
das
xchg
pop
mov
ja
pop
jl
ljmp
stos
cmpsb
adc
jnp
negl
repnz
adc
xor
push
popf
jmp
dec
dec
sbb
jecxz
xchg
mov
mov
rcrb
xchg
popa
xchg
lret
arpl
xchg
outsl
out
into
fwait
std
dec
jnp
in
shrb
mov
pop
repnz
inc
inc
xor
sbbl
rorl
xchg
insb
enter
xchg
or
add
je
and
jno
lahf
mov
mov
and
sti
cwtl
and
xor
add
shll
add
je
sbb
nop
xchg
aam
pop
popa
mov
imul
in
std
or
xor
push
add
clc
aam
stos
dec
lods
add
repz
arpl
dec
push
pop
push
push
mov
lock
inc
or
shlb
aaa
mov
mov
jne
clc
aad
dec
push
jno
push
mov
mov
adc
xchg
adc
ret
repz
daa
push
sub
fldcw
jp
xchg
sub
jbe
pusha
movsb
lods
jno
sub
lret
push
es
aas
in
sahf
ret
cmp
imul
stos
inc
das
push
xchg
mov
jge
cwtl
scas
ficompl
out
mov
and
or
xchg
cmp
inc
test
dec
in
std
and
fcomps
outsl
pop
nop
mov
in
scas
cli
divb
xchg
iret
mov
sarl
inc
inc
cmpl
sarl
dec
imul
rolb
aas
pusha
repnz
je
sti
mov
dec
cmp
negb
xchg
jl
out
and
sub
sub
mov
push
and
push
mov
adc
int3
in
mov
mov
mov
mov
sub
std
mov
adc
das
jge
das
pop
push
cs
and
fimull
and
rolb
mov
jb
aaa
adc
in
loopne
and
mov
pop
or
jp
mov
fstps
jb
test
mov
xor
push
stos
mov
mov
in
aas
ds
orl
sbb
jnp
fisubrl
mov
or
shll
xor
add
cmp
clc
dec
hlt
fcompl
popf
je
mov
repz
cmpsl
sbb
pop
xchg
test
cmp
icebp
shlb
and
mov
in
push
mov
and
xor
mov
test
js
lcall
sbb
dec
arpl
ret
pop
cmp
into
jp
rolb
pushf
test
ficompl
js
je
jnp
xor
daa
int
mov
pop
inc
jle
bound
xor
pop
or
sbb
and
add
inc
scas
jecxz
rolb
sub
jg
pop
lret
pop
sub
adc
cmp
cmp
ljmp
aam
enter
test
jmp
callw
adc
adc
out
lcall
cld
mov
dec
call
push
inc
mov
mov
fs
push
sbb
jbe
push
popa
xor
cld
sub
xchg
jmp
pop
mov
adc
es
insl
add
sub
cld
in
jg
cmp
and
fsubs
cwtl
add
pop
stos
jmp
mov
pop
fs
addb
sub
mov
adc
loop
sub
add
push
push
inc
jb
push
dec
adc
sub
adc
movsl
jo
dec
outsb
jmp
add
sub
movsl
pop
sarl
sub
mov
shll
idivb
or
loop
les
test
pop
push
outsl
andl
test
and
mov
daa
sbb
lods
sub
xchg
shll
roll
bound
sub
popa
clc
mov
cmp
mov
les
test
adc
mov
adc
pop
dec
andl
or
es
in
mov
mov
fsubl
lock
scas
pusha
sub
call
mov
data16
jae
mov
jns
push
mov
mov
js
xchg
or
pop
sbb
ret
fbld
loopne
shll
inc
sub
push
fdivrp
gs
xchg
cmc
test
pop
push
or
into
mov
cli
mov
outsb
mov
mov
push
pop
pop
adc
jns
xchg
dec
hlt
aaa
xor
bound
outsb
ja
sbb
lock
inc
ja
inc
mov
push
lea
insb
fsubs
xlat
fidivrl
aam
adc
dec
int3
mov
xlat
incl
data16
pop
repnz
xlat
sub
add
test
add
pop
pop
adc
inc
lods
outsl
mov
sbb
mov
xor
dec
leave
jp
jns
mov
ja
popf
stc
fwait
pop
orl
adc
sbb
out
jne
xor
mov
jecxz
sub
pop
hlt
lea
lods
inc
test
add
sbb
idivl
sbb
scas
enter
cmp
push
xchg
sub
push
xlat
add
adc
sub
stc
and
xlat
cmp
jmp
cli
jl
fsub
fcomip
aad
rclb
sbb
add
add
fsubs
mov
mov
xchg
or
insl
and
mov
les
mov
pop
or
jl
vroundsd
out
mov
mov
mov
mov
in
ss
or
jno
movsl
jmp
dec
call
sbb
mov
xchg
add
sbb
call
daa
mov
fidivrl
iret
cmc
rclb
and
mov
pop
jecxz
xor
popa
shll
icebp
icebp
cld
adc
mov
std
jmp
bound
sbb
sahf
enter
daa
pop
or
sub
std
lods
xchg
or
and
mov
add
and
xchg
adc
inc
mov
out
pop
call
mov
loopne
imul
jge
jbe
push
inc
pop
pop
ret
and
pushf
gs
lahf
jecxz
push
test
out
fstpt
pop
jbe
dec
mov
mov
add
adcl
in
sbbb
jmp
add
jl
test
cmc
xchg
xchg
fisubrl
fnsetpm(287
stos
ss
pop
insl
jnp
or
push
or
inc
mov
popf
jo
jmp
nop
rorl
nop
jo,pn
jno
rol
cli
sbb
inc
jbe
mov
out
jnp
dec
in
push
pushf
fwait
scas
outsb
push
inc
xchg
add
jnp
jmp
xchg
lds
mov
xor
mov
test
loope
lret
ljmp
adc
jg
push
dec
rol
xchg
mov
loope
or
repnz
cwtl
dec
push
mov
rcrb
add
jg
xor
push
mov
mov
js
xchg
mov
jns
ret
pop
testl
add
scas
into
push
sub
int
int3
mov
and
mov
out
jl
stos
dec
insl
jge
in
pop
inc
and
jmp
adc
sbb
repz
mov
add
loope
push
imul
pop
aas
gs
mov
sbb
xchg
mov
lret
or
imul
unpcklps
xor
adc
jecxz
cwtl
sbb
dec
pop
or
cld
and
test
icebp
mov
ja
mov
test
mov
push
and
inc
push
xchg
xor
decl
lods
lahf
push
lcall
lods
insl
dec
in
cmpb
rcr
mov
roll
daa
stos
xchg
popf
pop
sub
fidivrs
enter
or
lcall
push
sub
or
aas
test
loop
inc
add
ja
adc
ja
in
lods
mov
pop
add
ljmp
mov
mov
mov
ss
hlt
xor
popf
int3
push
fbstp
loopne
jno
dec
mov
stc
jp
mov
setg
xlat
and
cld
movsl
dec
mov
enter
daa
xor
and
xchg
int
inc
xor
add
iret
adc
mov
pushf
and
das
in
sbb
mov
insb
test
int
ja
mov
loopne
mov
xchg
sti
or
fnstsw
dec
out
ss
lea
je
sub
inc
xchg
stc
pop
sbb
lods
shll
fwait
add
daa
shl
cmp
aaa
fldt
les
mov
sbbb
ret
mov
jbe
bound
add
iret
pop
xchg
sub
dec
pop
sub
test
jmp
push
inc
adc
gs
jnp
push
or
push
and
xchg
pop
test
adc
mov
pop
push
iret
fsubrs
xchg
loope
in
gs
fincstp
mov
lcall
outsl
clc
ss
mov
mov
fs
out
enter
leave
add
xor
xorl
mov
jp
hlt
xor
sbb
stc
add
adc
pop
pop
or
repz
cmp
adc
xor
xchg
call
scas
cmpsl
inc
or
pop
cmp
inc
js
lret
lods
jnp
movsb
repz
xor
pusha
pop
inc
rcl
cmp
and
roll
xchg
arpl
mov
xor
pop
jecxz
nop
ret
faddl
je
cltd
inc
cmp
fdivrs
lock
or
je
fmull
or
ret
dec
inc
stc
cltd
mov
push
outsb
cwtl
cmp
cli
leave
cmp
lahf
inc
push
pop
xor
mov
cmp
and
out
cmp
inc
je
fidivl
mov
sub
sbb
pusha
ret
mov
es
mov
scas
inc
lcall
movsl
xor
mov
inc
sub
leave
movsb
sbb
out
shlb
xchg
push
inc
shl
sub
seto
jbe
jp
cmp
dec
mov
lock
std
push
nop
enter
fsubrl
pop
daa
enter
add
mov
out
repnz
cmp
imulb
add
jne
fmulp
js
aaa
cmp
das
cmp
test
inc
mov
lock
mov
xor
rcr
inc
and
push
sbb
cmp
and
idivl
lds
inc
cmp
divl
sub
cmp
mov
or
je
cltd
scas
es
xchg
cmpsl
mov
pop
jle
cwtl
push
cmp
cmpsb
fwait
imul
pusha
xchg
les
pop
jp
xchg
loope
mov
test
sbbl
js
mov
inc
pushf
sar
xchg
js
inc
sub
adc
subl
mov
inc
stos
dec
bound
pop
pop
sub
es
into
ljmp
dec
mov
fadds
dec
ficoml
xor
push
adc
cld
cmp
xorl
sub
fldt
push
jecxz
fs
xor
or
or
xor
jp
mov
hlt
cs
int
imul
adc
shll
nop
inc
mov
loopne
dec
insb
and
shlb
dec
out
ds
sub
data16
loope
cmpsb
mov
fidivl
sbb
pop
jecxz
shlb
cmp
inc
mov
inc
into
adc
cwtl
mov
dec
int3
pop
test
aam
bound
cmpsb
sub
pop
in
jns
lods
push
xchg
out
fld
fwait
xor
lahf
cli
cmp
xchg
rorb
adc
loop
mov
pop
inc
ficompl
fcomp
xor
mov
add
adcl
sbb
loop
sub
sbb
stc
fistl
outsb
notl
mov
addb
rorb
sbb
mov
pop
das
mov
xchg
push
jnp
push
sbb
pop
ss
out
mov
or
and
push
jge
mov
or
lret
sbb
push
xor
jl
or
lret
rcrb
cmp
aaa
lret
and
dec
xchg
mov
aaa
jp
sar
xor
loop
jbe
sub
sbb
and
push
sub
scas
xor
xor
dec
fwait
sbb
push
in
sbb
hlt
cwtl
mov
lret
dec
adc
out
cmp
push
and
sti
jmp
jo
xor
movsl
inc
cmp
fcomps
cli
mov
pop
push
ja
sbb
sbb
push
jne
popf
sub
push
mov
and
adc
push
push
mov
push
sub
push
mov
leave
sbb
add
dec
mov
pop
xchg
clc
jl
inc
pop
leave
repz
add
rclb
mov
pop
xlat
lret
popa
mov
in
lods
add
fildl
cs
fnsave
clc
jl
addr16
jmp
xor
cmp
sub
and
xor
inc
xchg
cmpsb
inc
jno
pop
pop
sub
inc
ret
jae
and
mov
repnz
arpl
lcall
or
mov
mov
push
shl
pop
xchg
fsubrl
and
pop
inc
fisubrs
add
rorb
dec
or
jno
std
call
jmp
insl
stos
mov
lahf
pusha
cmp
test
sbb
mov
jp
jo
xor
movsb
ret
orl
ljmp
ljmp
repz
icebp
enter
push
or
mov
cwtl
cmpl
mov
cmp
cli
jle
add
mov
mov
xchg
fisttps
and
notb
push
push
mov
stc
mov
and
add
mov
add
fnstsw
jo
xor
pop
adc
xchg
cltd
rcl
out
popf
mov
xchg
sbb
or
in
pop
dec
aaa
andl
cmp
movsl
shlb
jne
mov
pop
xchg
mov
fsubl
leave
mov
and
inc
mov
xchg
lods
incb
inc
int3
out
enter
or
std
mov
push
cmpsl
lods
push
mov
out
out
dec
clc
cltd
lcall
les
imul
outsl
fidivrs
xor
or
sub
sti
hlt
int3
and
out
popf
pop
cmpsl
cmp
xor
push
call
dec
lret
mov
sbb
cmp
lret
pop
jne
pmaddwd
pusha
scas
and
jbe
sub
mov
cmp
sub
repnz
push
arpl
inc
dec
in
test
leave
lock
push
or
jle
imul
mov
xchg
lcall
insl
inc
mov
cld
fsub
xorl
lret
xor
push
mov
sub
out
arpl
mov
lods
xor
inc
cmp
mov
sti
push
add
nop
popa
dec
inc
and
push
out
cmp
cmp
es
mov
mov
movsl
cmp
std
jmp
fldln2
add
jns
dec
xchg
mov
lods
rcr
cs
mov
movsb
and
daa
adc
and
sbb
andl
mov
fwait
mov
push
cli
gs
or
aam
shll
fldt
pop
shll
rcrl
push
sbb
jne
sbb
cmp
into
int3
inc
aam
test
out
sub
push
fcoml
push
leave
shll
fcmovnb
mov
dec
inc
xor
jg
in
fsub
pop
and
jge
adc
mov
sbb
lret
mov
add
or
outsb
es
xor
enter
lahf
lahf
xor
ljmp
mov
pop
loopne
mov
retw
xchg
insb
dec
pop
mov
icebp
cmp
xchg
arpl
add
xlat
jo
call
xor
mov
testl
pop
das
sbb
shrl
pop
int3
mov
js
xchg
or
sbb
fdivp
cwtl
bound
jg
mov
lahf
testl
ret
push
lds
test
xchg
sbb
aas
int3
mov
ret
bound
adcl
xchg
sbb
xlat
mov
std
mov
fdiv
ss
aam
pop
mov
fidivrl
inc
rcrb
mov
mov
push
dec
inc
and
sub
inc
pop
arpl
decb
fs
xor
add
enter
lea
scas
fwait
cmpb
pop
jb
js
add
pop
jae
xchg
jb
imul
jne
pop
add
test
mov
sbb
mov
inc
shr
imul
inc
dec
imul
mov
inc
and
dec
cmp
pop
outsb
mov
inc
ja
push
ljmp
repnz
jl
in
jo
aad
jo
stc
mov
mov
cmpsl
and
sbb
idiv
sub
inc
test
aad
out
je
bound
stos
fnstcw
push
and
jnp
jle
sub
inc
and
arpl
dec
xchg
outsb
adc
sub
pop
adc
xor
mov
jecxz
cmpsb
iret
cmpsl
jg
lock
fsubrs
stos
lds
sahf
in
lods
cwtl
adcb
or
iret
or
mov
cmpb
fistl
cmp
out
lds
arpl
mov
stos
add
lcall
pushf
scas
dec
mov
xchg
test
add
pop
lock
addr16
scas
je
mov
or
add
std
adc
push
es
das
and
pop
push
xchg
dec
xor
mov
fsub
dec
jl
push
ror
call
gs
sub
fisttpll
sarl
push
xlat
fistpl
jae
aam
jae
ljmp
mov
test
push
sbb
push
ljmp
pop
lods
push
fiaddl
jl
scas
jecxz
sbb
inc
jbe
pop
test
cwtl
mov
mov
int
inc
call
mov
mov
mov
mov
mov
sub
push
in
inc
push
shlb
mov
dec
and
mov
movsb
sbb
or
ljmp
jmp
stos
or
clc
xor
lds
pop
jecxz
lock
mov
sub
dec
iret
and
add
or
ss
in
adc
loopne
in
or
fildll
sbb
pop
sub
jae
frstor
lds
xchg
push
aaa
fmull
mov
mov
insl
bnd
inc
jbe
or
inc
mov
cmpsl
xor
cltd
into
add
jno
dec
pop
cltd
mov
fbld
ss
fwait
daa
popa
xor
lods
scas
lcall
pop
in
pop
xchg
sub
enter
mov
jle
pop
and
lcall
cld
rcr
pop
ret
sahf
dec
jae
ds
mov
out
push
aaa
add
das
adc
int3
jp
popf
jle
cwtl
jne
sar
les
fcomps
lods
jmp
dec
sub
dec
inc
outsb
idivl
mov
cmp
inc
mull
xchg
mov
jge
out
bound
mov
fcomi
cli
outsb
stc
andb
xlat
rorb
sub
pusha
sub
insb
pusha
lahf
pop
inc
iret
mov
dec
and
sbb
mov
leave
ss
test
arpl
rcrb
sub
or
popa
imul
test
and
inc
int3
sub
jne
in
mov
sarl
cmpsl
adc
xchg
lock
int3
xchg
adc
push
cmpsl
sbb
mov
mov
inc
add
jae
int3
outsl
add
call
sub
es
inc
dec
sub
xor
aam
outsl
mov
sub
lea
mov
mov
sub
in
loop
xchg
add
jo
jg
or
ss
aaa
into
idivl
pop
sub
hlt
int
sub
xchg
in
dec
loop,pn
mov
imul
mov
aad
nop
sbb
cld
jle
lods
ror
and
jbe
inc
lcall
pop
cmpsl
cmp
push
cmpsb
int
pop
mov
jle
mov
sbb
movsl
cmp
imull
adc
je
scas
or
addr16
jl
push
xor
xchg
testb
out
sub
sub
adc
negb
sub
cmp
sbb
imul
push
inc
mov
cs
lahf
xchg
or
inc
xchg
out
push
and
movsl
inc
outsl
xchg
fdivrl
push
sahf
call
lods
clc
cmpsb
loopne
test
lock
mov
arpl
scas
fcomps
lods
mov
ficoml
outsb
lahf
jmp
sub
mov
mov
sub
pushf
dec
jns
xchg
fdivs
sbb
aad
lahf
sbb
in
pop
jae
mov
into
push
arpl
adc
out
fistpll
push
dec
fcoml
mov
ja
gs
pop
mov
add
xchg
inc
subl
notl
fnstsw
orl
lock
xchg
dec
push
sbb
push
jbe
arpl
lods
or
pop
mov
xchg
adc
mov
repz
mov
push
or
cmp
subb
sti
test
fxch
out
add
cmp
lret
fwait
lock
and
adc
mov
xchg
mov
aad
mov
jnp
xchg
cmpsl
movsl
movsl
fbstp
or
sbb
mov
jl
mov
xor
xchg
gs
dec
je
dec
add
or
adc
std
cs
aam
inc
xchg
loope
aam
sbb
pop
stos
rcrl
or
dec
cld
leave
mov
ss
outsl
repz
jae
fisttpl
in
scas
idivb
push
ret
jns
sbb
push
fs
mov
fst
cmp
outsb
sub
cwtl
or
fimull
insb
mov
fistps
shlb
adc
push
mov
data16
or
lcall
movsl
or
or
and
push
fisubrs
dec
shll
mov
cwtl
daa
ds
xchg
mov
into
or
repz
aad
xchg
jmp
jge
mov
enter
push
xor
stos
cmp
jo
push
cmc
bound
scas
out
mov
or
jae
bound
iret
mov
xor
sbb
add
mov
add
stc
jmp
pop
sarb
sub
adc
je
lahf
shlb
xchg
cmp
rcrb
pop
ss
push
mov
push
es
js
mov
popa
mov
pop
jnp
int3
xor
mov
rcr
jl
or
adc
pushf
repz
adc
inc
push
cmp
mov
cmp
dec
fimull
mov
add
clc
popf
and
mov
insl
or
mov
cwtl
outsb
sub
and
sbb
aas
lods
icebp
test
subb
inc
nop
fdivl
rcrl
mov
hlt
push
mov
xor
fsubs
cmp
mov
pop
in
dec
popf
ds
je
xchg
aas
out
inc
mov
jns
jae
and
sbb
xchg
adc
nop
jne
sub
or
into
fstps
or
inc
and
dec
xor
btr
repnz
aam
jns
fmuls
adc
rorl
mov
lea
fdivrs
dec
adc
jmp
cli
add
call
jmp
pop
xchg
adc
lds
lret
daa
add
aam
fdivrs
imul
call
lods
repz
lret
gs
push
dec
mov
cmc
xchg
xor
adc
jg
xlat
mov
xor
push
fdivl
js
gs
inc
mov
cvttps2pi
cmp
cmc
andb
std
dec
mov
dec
pop
hlt
incb
sbb
sub
and
loopne
or
jle
je
jns
xchg
hlt
jl
stc
outsl
je
sbb
adc
iret
sbb
jge
sub
push
mov
xor
loop
mov
lea
mov
sub
das
sub
out
mov
test
aad
mov
cmpsb
mov
imul
daa
and
imulb
gs
pop
fistpll
and
xchg
mov
pop
push
mov
mov
or
inc
cmpb
jb
xlat
lret
xchg
xchg
sub
add
stos
flds
adc
ljmp
imul
les
pop
pushf
popf
sarl
lret
leave
jns
and
pop
jne
lahf
imul
test
cmp
frstor
lods
push
popf
lahf
xlat
push
and
lahf
outsb
sbb
inc
push
movsb
jno
bound
jmp
shlb
pop
rcll
jae
or
hlt
bound
loopne
gs
arpl
dec
les
frstor
xor
subb
call
lea
cli
push
clc
arpl
cmp
repz
pop
cltd
iret
cmpsb
aaa
aaa
or
and
pusha
mov
push
inc
push
sahf
int3
repnz
mov
pop
gs
fstl
es
orb
pop
xor
mov
fimuls
fs
sub
jne
pusha
sub
push
jmp
mov
rclb
in
mov
loope
mov
push
pushf
in
push
pop
test
not
mov
rcll
add
inc
sti
arpl
cwtl
mov
inc
xchg
out
pusha
cltd
mov
push
fwait
xor
xorb
lcall
lahf
idivl
fisubs
std
es
js
aad
dec
in
cli
mov
xor
adc
mov
push
cmp
xor
arpl
and
sbb
stos
movl
subb
pop
and
repz
aaa
pop
jp
cmp
mov
push
call
push
mov
mov
js
pop
test
dec
loope
mov
jbe
jmp
mov
xor
pop
ss
ss
lds
adcb
leave
dec
push
add
pop
jl
pop
lods
push
movsl
jle
outsl
cltd
push
pop
pop
lock
inc
cwtl
stc
xor
add
in
out
pop
sbb
jg
mov
inc
rorb
lahf
push
cmp
xchg
jl
scas
inc
jns
and
dec
int3
out
xor
test
popf
or
sub
jae
out
xchg
test
xor
imul
push
sbb
mov
rorl
sbb
sub
add
xchg
lods
fld
sbb
fldcw
scas
clc
shrb
cli
sub
or
adc
pushf
mov
xor
fstpl
loopne
add
xchg
mov
jge
cli
ffreep
or
mov
sbb
popf
aad
sub
jb
push
cltd
dec
xorb
xchg
cmp
dec
xchg
test
orb
in
jle
outsb
add
adc
sub
add
xchg
mov
ljmp
pusha
es
add
mov
jne
or
mov
mov
insl
insb
push
or
mov
scas
in
subl
outsl
and
cmpsb
insb
pop
sub
push
adc
jno
aaa
mov
push
loope
fmull
cld
icebp
fs
call
mov
aaa
jbe
in
jg
lods
repnz
mov
aam
test
or
dec
mov
sbb
mov
cmpsl
pop
call
push
xchg
stc
mov
cmpsb
aad
into
or
insb
jmp
nop
outsl
repz
pop
add
sub
mov
cmpb
and
aaa
push
push
rolb
push
and
pop
jne
sbb
int3
jae
jg
cmp
dec
mov
roll
out
popf
pop
sub
ja
sbb
jnp
xchg
jle
fbld
test
mov
inc
cmp
adc
loopne
dec
or
mov
scas
pop
mov
xchg
in
fdivr
out
jmp
cmpsl
cmc
pop
xchg
mov
jg
insb
mov
ficomps
xor
push
dec
and
or
les
sbb
jp
cmp
xor
add
pop
cmp
and
rcrb
outsl
xor
and
adc
pop
aas
nop
jecxz
dec
or
popf
sahf
hlt
lods
mov
fiadds
or
lea
and
lods
or
jecxz
xor
das
out
aaa
in
fiaddl
lods
jl
popa
mov
xchg
pop
aam
fldenv
xchg
add
out
and
scas
scas
inc
jmp
xchg
aam
sbb
nop
jle
lds
sub
ds
repnz
mov
scas
in
add
clc
cmpsl
rcrb
xor
dec
jbe
pop
xor
test
sahf
inc
out
mov
xor
xchg
fldenv
cltd
sbb
data16
add
xchg
mov
pop
sbb
lret
aaa
mov
sahf
pop
push
sbb
imul
sbb
rcr
jle
bound
dec
rclb
adc
push
push
call
mov
insl
jnp
or
pop
jae
jecxz
jl
insb
sar
negb
rclb
cmp
adc
fsts
xlat
aad
pusha
inc
xlat
inc
repz
cmp
sub
dec
cltd
xchg
inc
sti
push
popa
sbb
negl
sbb
inc
xchg
jno
mov
or
std
cld
pop
cmp
mov
sahf
pop
repz
pop
outsb
xchg
pop
loope
jnp
cmp
sahf
lret
loope
movsl
mov
mov
pop
dec
pop
out
push
shlb
bnd
test
mov
pop
jl
addr16
mov
lcall
dec
mov
lret
sbb
insl
push
add
out
jae
imul
sbb
jbe
pop
fistps
rcl
fs
push
and
push
mov
mov
xchg
das
mov
cmp
adc
shlb
arpl
fwait
inc
pop
mov
in
xor
lods
add
adc
es
icebp
add
mov
cld
addl
xor
jp
adc
in
add
jns
pop
cmpl
inc
lea
push
sub
outsl
scas
xchg
xor
lods
in
mov
fisubrs
or
dec
rclb
xor
cmpsb
sbb
or
sbbl
xchg
push
or
cmc
mov
lea
mov
mov
push
pushf
mov
repnz
push
popa
aaa
dec
dec
nop
push
nop
inc
sub
lret
cmpsb
loope
cmp
repz
mov
je
ja
outsl
sbbl
mov
pop
popf
aaa
leave
movsl
out
lock
xor
jns
pop
push
lods
cmpsl
das
dec
jle
lock
push
fyl2xp1
aam
pop
adc
jb
imul
pusha
dec
repnz
mov
test
xchg
idiv
adc
mov
sarl
push
add
push
iret
xchg
sub
adc
and
cmp
fdivl
leave
mov
xchg
lea
sti
scas
lock
xor
ds
dec
fstp
mov
out
or
mov
divl
jg
mov
xor
mov
and
out
jecxz
cmp
sub
mov
and
xor
add
jle
test
xlat
xlat
aaa
cld
les
xor
pop
nop
jg
cs
fldt
or
xchg
insl
pop
out
and
mov
loope
mov
daa
sub
add
ss
fwait
pop
mov
sub
pop
bound
in
xchg
xchg
add
mov
inc
mov
push
sarl
mov
xchg
pusha
lock
andl
and
xchg
pushf
adc
popa
jne
lods
lods
shlb
pop
and
dec
jl
out
dec
pop
int
lods
inc
add
and
in
inc
fiadds
sub
ret
out
jecxz
aam
rorb
push
ror
or
pop
stos
insl
sbb
sbb
daa
cli
inc
jge
sbb
and
sbb
push
out
cmpxchg
jne
aas
arpl
or
jns
mov
pop
cmpsb
xchg
and
inc
pushf
and
mov
jmp
and
mov
test
stc
and
test
xchg
ror
xchg
movsb
xchg
cmp
js
sarl
mov
push
call
xlat
jnp
popl
cli
dec
pop
jle
or
imul
in
leave
sbb
sub
rorl
dec
pop
sahf
jge
mov
adc
and
add
jl
test
int3
imul
aam
xor
adc
hlt
cmpsl
cmp
sub
sub
icebp
push
into
stos
lahf
lretw
fiaddl
jle
mov
out
leave
jg
fs
lds
sahf
or
mov
xor
out
or
xchg
popa
xchg
out
or
fwait
rcrb
pop
jle
or
jb
rcrl
pushf
jle
dec
imul
mov
lock
sub
xor
bound
sbbb
jg
fs
aas
sarl
aas
jmp
lock
jnp
or
pop
pushf
jge
addr16
outsb
push
xchg
push
jo
rolb
jbe
xchg
or
add
or
sub
adc
adc
jp
stc
aaa
outsb
mov
inc
icebp
add
aad
shlb
sub
movsl
mov
stc
sahf
mov
enter
sbb
mov
in
int3
daa
dec
pop
inc
xor
dec
sub
push
sbb
fwait
sub
dec
fucomip
dec
mov
inc
int3
adc
pop
jno
and
rcr
xchg
cmp
gs
cmp
dec
dec
scas
sti
pop
dec
insb
sti
jmp
dec
fwait
push
test
cmpsl
xchg
inc
ret
iret
mov
je
pop
stos
sbb
push
pop
xor
xchg
xchg
cwtl
scas
call
fmull
cmpsl
cmp
ja
jg
xor
jne
mov
xchg
popf
fldlg2
sahf
outsl
sub
shrl
jle
icebp
pop
fildll
sub
mov
test
add
popa
sbb
cld
mov
test
xor
xor
mov
push
sarl
mov
inc
and
sbb
adc
adc
mov
inc
negb
not
popa
inc
xchg
sub
shll
stos
dec
dec
jg
sar
pusha
test
mov
test
aam
or
push
jne
insl
lahf
in
call
lods
cmp
or
out
add
cwtl
dec
inc
lods
push
outsl
punpckhdq
les
mov
cmc
out
sbb
loop
aam
in
mov
clc
lock
mov
cmpsb
fimuls
sbb
inc
into
xor
out
pop
ds
pop
adc
fnstsw
push
pop
cmp
fisubl
pop
mov
lcall
mov
dec
add
repz
and
mov
push
mov
in
cmc
je
jle
jae
fiadds
ret
mov
std
das
pusha
stc
test
js
pop
gs
out
push
idivl
popf
mov
push
loop
add
xchg
xor
insb
cmpsl
inc
jnp
and
jno
jo
adc
inc
test
pop
and
in
mov
std
cmpb
xchg
jbe
dec
fildll
pop
xor
adc
insl
mov
cwtl
adcl
shr
pusha
mov
mov
aad
xorl
int3
or
jno
aam
ficoms
int3
xorb
jnp
sbb
mov
mull
les
lret
mov
sti
adc
les
cs
cmp
and
cs
clc
std
ds
sbb
test
loopne
or
subb
mov
fsubp
cmpl
test
cmc
rcll
push
cmc
xor
out
xorb
gs
cmp
jle
int3
es
leave
daa
xorl
in
jns
jae
jl
fisubl
test
sbbb
lods
jecxz
fwait
xchg
mov
imulb
xor
and
mov
or
fsubrp
ds
cmc
sub
push
mov
add
lret
test
or
xchg
ds
leave
jno
dec
movsb
fdivrl
lcall
mov
xchg
mov
xchg
es
mov
sahf
adc
mov
xor
loope
dec
mov
jno
cli
in
les
inc
ret
mov
std
sub
jb
inc
in
mov
insb
push
inc
cmc
idivb
divb
bound
scas
xlat
mov
sbb
imul
aam
movsb
and
jl
or
push
xor
cmp
xchg
mov
push
pop
mov
repnz
cmp
inc
push
divb
lods
enter
xchg
ret
dec
fcomi
push
dec
fistpll
cltd
sbb
cmpsb
loopne
imull
cmp
pop
or
or
rorl
mov
push
pop
idiv
scas
test
adc
icebp
pushf
xchg
fwait
mov
or
or
pop
mov
lods
int
mov
adc
daa
and
lods
imul
pop
in
push
mov
aad
test
mov
and
iret
add
ss
mov
mov
inc
nop
jecxz
dec
in
push
or
push
sub
inc
dec
push
ds
sub
adc
jg
pusha
popf
out
pop
shlb
mov
fwait
mov
sub
fadd
in
adc
stos
fcmovbe
js
das
scas
sbb
lods
and
push
and
je
and
push
cmp
adc
pop
shll
subb
push
out
int3
mov
push
cmpsl
repnz
mov
fsts
cmp
mov
das
imul
mov
push
jnp
dec
fninit
mov
mov
jecxz
arpl
fimuls
movsb
fscale
mov
ja
sbb
enter
lock
test
mov
push
xor
pop
jp
dec
pop
outsb
mov
mov
test
dec
push
jnp
mov
pop
adc
mov
sar
lahf
inc
js
jae
cmp
out
mov
lods
push
mov
adc
add
cmp
dec
das
mov
pop
pop
cmpsl
push
sbb
out
or
imul
mov
mov
in
mov
sarl
cmp
bound
cmp
push
not
mov
lds
out
repz
and
imul
roll
inc
imul
aas
add
ds
cmp
sub
insl
orl
subps
and
mov
iret
jl
wbinvd
out
dec
add
negl
xlat
jg
sub
lcall
gs
pop
jl
inc
cli
cld
push
dec
mov
xor
rclb
icebp
out
mov
mov
xor
pop
xchg
leave
jecxz
aad
pop
test
les
push
jbe
dec
pop
lock
mov
icebp
outsl
pop
inc
add
xchg
data16
in
fsubl
pop
mov
xchg
iret
mov
outsb
loopne
aad
repnz
lea
bound
push
lret
repz
sbbl
divb
in
jbe
int
aaa
lods
mov
scas
adc
ret
sti
loopne
clc
pop
je
lahf
mov
inc
push
pushf
cmp
insl
shll
or
aad
stc
xchg
ja
in
sub
push
xchg
push
mov
sbb
ss
push
or
lcall
hlt
add
movsb
add
xor
lods
xchg
sub
lret
push
push
nop
xchg
movsl
jo
ljmp
mov
out
inc
cmpsb
mov
pop
dec
adc
xor
jl
push
mov
shlb
pop
add
add
lods
mov
jge
mov
push
out
repz
pushf
cs
out
outsb
repnz
and
xchg
sub
fwait
fwait
cmp
mov
sub
lahf
scas
testb
fs
aam
sar
sbb
pop
imul
mov
enter
lret
xor
or
push
mov
adc
ljmp
mov
mov
or
xor
inc
push
fisubs
dec
jae
pushf
bswap
dec
aam
sub
sub
nop
inc
sahf
mov
mov
add
sbb
adc
mov
and
lock
add
jb
dec
mov
out
les
in
lahf
cmpsb
ss
xchg
mov
cmovns
add
pop
cs
fldl
jp
arpl
nop
nop
push
fisttpl
mov
dec
stos
shld
mov
push
adc
lahf
lcall
es
ds
mov
fwait
mov
ret
or
cmpsl
push
xor
or
dec
sub
stos
pop
xor
sbb
into
push
mov
sbb
fistps
fldenv
cmp
ss
fld
jo
pop
cmpsb
repz
out
movl
testl
roll
cmp
add
cltd
cmp
lcall
fistps
adc
cwtl
mov
mov
sbb
dec
pop
stos
dec
xor
addl
fcoms
mov
js
and
mov
nop
sbb
cltd
aas
cmp
lock
cmovae
jge
je
leave
sub
in
inc
add
outsl
mov
pop
shr
mov
lods
cltd
out
and
icebp
or
dec
xchg
mov
in
loop
iret
test
pop
sbb
inc
loopne
jbe
outsl
mov
cmp
sbb
inc
out
mov
pushf
lret
imull
mov
add
sub
jg
add
scas
push
mov
clc
int
sbb
or
sub
popf
cmc
dec
sbb
cmc
xor
jns
jl
test
cmp
sbb
push
cs
sbb
fiaddl
sbb
mov
pop
and
adc
ds
scas
cmp
cmpsl
enter
call
daa
cmp
fdivrs
mov
test
jne
cmc
jno
enter
xchg
mul
adc
les
int3
in
in
scas
arpl
sbb
sub
shll
mov
cmp
int
inc
sub
inc
js
iret
cld
or
insb
ss
pushf
loope
sarb
jmp
add
and
punpckhdq
jle
popf
inc
aas
aam
cs
in
sub
xchg
jmp
mov
dec
add
xchg
push
sub
mov
cmpsl
jne
jmp
loop
in
mov
dec
xor
inc
or
mov
xchg
adc
xchg
adc
mov
cmp
inc
lds
inc
dec
pop
and
xor
and
stos
mov
aaa
adc
pushf
sti
pop
adc
mov
mov
pop
aaa
xchg
sbb
cmp
add
mov
cli
mov
ret
xor
movsl
addb
addr16
push
cmc
in
push
movsl
mov
rolb
scas
push
jnp
fs
adc
scas
cld
xchg
or
inc
iret
pop
sbb
push
jge
pop
fneni(8087
mov
sub
pop
push
dec
xor
mov
and
or
outsb
mov
in
pop
push
push
push
dec
mov
je
popf
and
push
lcall
push
mov
test
mov
xchg
or
or
xlat
inc
dec
test
mov
push
insb
pop
stos
sub
dec
and
inc
mov
scas
sbb
mov
mov
or
mov
xor
mov
loop
addr16
pushf
cmp
decl
dec
ficoml
push
lea
cmpsl
pop
call
inc
aas
orl
adc
mov
sti
add
mov
out
incl
ljmp
pop
fs
jp
pop
mov
and
addl
arpl
loope
mov
arpl
lods
int3
ljmp
add
rcl
sbb
mov
repnz
sub
repnz
push
dec
sahf
mov
dec
data16
sub
lret
shll
xor
or
fs
sbbb
pushl
int
and
addr16
scas
push
es
loopne
es
dec
and
dec
add
ds
sub
mov
lods
xchg
dec
aas
mov
sarb
push
and
out
or
lock
gs
xlat
decl
mov
cld
movsl
mov
loop
fstpl
cli
mov
ja
mov
pop
movsb
aaa
std
sub
jne
and
stos
scas
adc
or
pop
and
sti
adc
adc
into
jno
mov
hlt
push
loop
pusha
cmp
cli
cld
nop
loopne
fldl
clc
jp
pop
sbb
pop
lret
push
inc
in
mov
jae
das
imul
mov
addr16
call
lret
dec
sub
xchg
inc
shrb
mov
pop
std
sub
pop
pop
cmp
enter
fstpt
xor
jae
pop
mov
sar
loop
data16
mov
cmpsl
js
dec
dec
lds
loopne
test
rcll
notl
loopne
std
inc
add
add
sub
cld
mov
mov
jecxz
mov
jge
or
movsb
dec
and
pop
push
mov
cmp
cmp
dec
sub
out
mov
sbb
pop
lahf
inc
fsts
sub
out
xor
dec
xor
sbb
adc
sti
shrb
inc
test
in
insb
pop
jns
imul
orl
das
in
mov
mov
cld
aas
enter
push
test
lret
aaa
xor
push
pop
inc
push
sub
dec
xor
xor
stc
add
test
jb
sarl
inc
in
and
xor
arpl
sub
mov
xchg
enter
and
in
cmp
xlat
loopne
in
and
dec
lods
stos
fdivrl
mov
adc
pop
push
xchg
jo
scas
mov
test
sub
insl
das
cmpsl
insl
inc
and
ja
push
jae
inc
fimull
lods
xlat
arpl
sub
adc
mov
js
jbe
popf
imul
add
movsb
les
mov
ds
sbb
repnz
xchg
je,pt
xchg
clc
mov
cli
push
adc
sub
mov
cmp
out
js
push
sarl
add
jno
lahf
outsb
pop
push
jg
cmpsb
sub
sbb
xchg
jo
idivl
sbb
add
jg
movsb
aas
pop
enter
dec
add
xor
pushf
cs
push
jle
rolb
js
and
dec
hlt
cmp
or
dec
pop
adc
sbb
fdivrl
ja
rolb
gs
adc
xor
xor
dec
outsl
subl
inc
xchg
cmp
out
dec
jns
xchg
lahf
scas
lea
and
fcmove
imul
clc
add
fnstenv
imul
pop
sbb
movsl
test
xchg
repnz
mov
or
jp
ja
mov
adc
popf
add
push
ds
out
adc
jmp
adc
mov
js
jge
sti
inc
inc
and
sub
push
cld
push
jb
pop
mov
pop
loopne
xor
lods
or
dec
and
loop
js
xchg
lahf
data16
xchg
or
outsl
pop
enter
imul
rep
xchg
movsl
adc
mov
sahf
jne
out
clc
outsl
push
into
test
loop
ret
inc
test
sahf
out
pusha
imul
cwtl
inc
push
xchg
les
or
jmp
jns
pop
rcl
dec
sbb
mov
jnp
sbb
add
mov
out
popa
rorb
mov
in
test
loope
imul
emms
sub
js
ss
cwtl
out
and
out
dec
inc
clc
ror
xchg
mov
movsb
cmc
in
lahf
push
add
in
cmp
ret
mov
das
popf
or
jecxz
call
lods
mov
cmpsl
push
sub
jnp
cld
push
imul
aas
or
aas
jae
loop
out
sub
xor
es
ds
pop
mov
bound
lds
fisubs
pusha
xchg
loopne
movsl
dec
add
mov
jne
jno
adc
loopne
cmpsb
pop
test
mov
fmuls
jge
fsubrl
pop
cmp
or
les
addr16
arpl
fyl2xp1
inc
jle
rcrl
ds
ret
inc
js
xchg
xor
xchg
fldt
dec
test
cmp
popa
xchg
pop
enter
push
sub
push
inc
fadd
adc
adc
lods
lret
push
ret
adc
popa
xor
outsb
out
roll
pusha
out
gs
xlat
shlb
sbb
dec
shlb
jl
fldt
into
pop
iret
cmp
mov
sbb
pop
ja
and
icebp
js
jo
jle
sub
dec
jns
lock
lret
inc
sub
push
add
push
movsl
push
test
sbb
jecxz
shll
cmp
vaddsubpd
aaa
je
test
arpl
inc
test
enter
pop
lea
mov
std
ja
into
add
loopne
mov
test
test
sub
call
or
sahf
iret
mov
inc
push
enter
cmp
cmp
pop
push
xor
and
es
out
frstor
xor
lods
fstl
pop
popa
loope
jle
lret
mov
test
popf
inc
pop
loopne
mov
lock
push
cmpsb
xchg
sub
inc
and
not
into
mov
rcrb
mov
cs
mov
xor
mov
push
pop
scas
cltd
icebp
dec
jo
data16
push
adc
add
les
inc
pop
fistpll
mov
lds
repz
insl
inc
shlb
mov
add
lock
movsb
inc
pop
pusha
popa
in
mov
gs
jle
cmp
inc
mov
xor
jae
jmp
je
out
adc
fsub
push
sbb
adc
jno
dec
je
sub
pop
xor
nop
sub
sbb
mov
cltd
inc
daa
jg
pop
xchg
push
aas
push
mov
adc
test
pop
push
mov
adc
mov
arpl
dec
mov
into
pop
cmp
pushf
push
bound
lock
or
xchg
std
pop
push
mov
inc
adc
mov
sub
loope
adc
sti
cmp
bound
add
movsl
out
sub
in
and
jno
mov
jbe
ret
fsubr
mov
jmp
sbb
cmpsb
repnz
push
int
push
loop
or
mov
cmp
out
mov
mov
pop
add
stc
hlt
aam
lea
push
mov
xor
daa
mov
inc
push
add
aas
sub
loopne
icebp
clc
fdivs
xchg
dec
insb
inc
adc
mov
out
or
and
add
xchg
mov
mov
imul
ljmp
cmp
xchg
inc
clc
mov
push
mov
cmpsl
addl
xor
xchg
cmpsl
xchg
pop
jb
jnp
cli
or
jp
mov
ljmp
fwait
call
repz
xor
inc
inc
xchg
outsb
mov
xor
ja
repz
jmp
mov
jge
in
mov
in
jae
rclb
mov
xor
mov
xor
and
fucom
fcomps
adc
xchg
push
xchg
stc
jge
mov
ljmp
lods
jl
xchg
xor
xor
cwtl
xchg
jecxz
fnstcw
lea
notb
pop
bswap
sahf
push
jb
nop
loopne
mov
pop
push
mov
xor
sti
xor
arpl
push
movsb
and
shl
lahf
or
inc
int3
arpl
lods
xchg
or
scas
inc
cwtl
loope
and
cmc
jae
pop
cmpsb
cltd
mov
or
xchg
mov
xor
out
icebp
pop
sub
inc
xlat
ds
and
cld
cmpl
add
cs
fmuls
jbe
jle
adc
fildl
popf
ss
out
pop
std
in
dec
sub
jo
mov
inc
push
cmp
jb
dec
or
jo
ret
dec
cli
mov
sub
flds
cmpsb
xor
cld
pop
push
test
jb
push
and
rorb
xchg
inc
mov
aam
aaa
pop
pop
daa
push
lret
hlt
bound
lret
ficomps
xor
pop
inc
movsb
iret
data16
mov
aam
push
xchg
sub
pop
inc
lock
bt
andl
fadd
arpl
roll
in
sbb
pop
mov
movsl
mov
pop
out
dec
xchg
scas
mov
lock
sahf
mov
fldenv
lds
adc
fistps
int
sbb
lret
stos
mov
pop
jmp
and
push
cmp
pop
or
or
push
dec
iret
adcl
ret
push
aaa
sbb
mov
sti
jne
outsb
mov
mov
adc
inc
cli
lods
mov
jne
or
mov
pop
jo
pop
adc
lds
pop
scas
cmp
pop
cmp
insb
mov
or
adc
cmpsl
repz
adc
xor
mov
in
sub
subb
pop
in
and
xor
les
add
ja
dec
inc
jbe
pop
insb
stos
imul
mov
jl
mov
mov
push
cs
push
mov
mov
cmp
dec
jl,pt
mov
sbb
pop
test
dec
ja
mov
pop
mov
inc
lret
sbb
add
mov
cli
and
mov
or
int3
test
lcall
mov
hlt
shrl
test
push
jbe
loopne
and
or
add
xchg
mov
popa
or
mov
test
dec
jbe
mov
pop
cs
sti
call
pop
inc
icebp
cmpsl
fmull
mov
xor
push
pushf
sbb
sahf
into
int3
mov
stc
sub
pop
repnz
popa
fwait
icebp
out
outsl
rcrb
adc
loope
lcall
push
jno
jmp
mov
mov
clc
push
pop
clc
mov
stos
scas
fldenv
fisubrl
sbb
outsl
test
das
jo
push
das
xor
int3
mov
cmp
xchg
out
rcl
sub
mov
mov
cmpb
and
mov
xor
add
scas
sub
pop
fbld
add
scas
push
fs
inc
adc
inc
inc
inc
or
mulb
aaa
loope
cmc
cmpsl
sub
stc
leave
scas
loope
cmpsb
jbe
aam
xor
fmul
cwtl
mov
adc
jp
out
jp
pop
dec
mov
push
xor
aad
push
insl
dec
pop
add
test
jae
lds
mov
jne
inc
or
jo
jmp
mov
and
mov
iret
dec
xor
push
daa
in
lretw
lcall
pusha
mov
arpl
hlt
cmp
cmp
dec
jae
incb
jbe
arpl
pop
push
cmc
bound
das
push
out
scas
lret
pop
cmp
inc
sbb
push
repz
scas
push
imul
xor
pop
pop
sbb
std
pushl
sbb
ja
daa
jmp
jo
push
loop
cmp
mov
push
xchg
dec
inc
cmpsb
fwait
or
inc
cmp
mov
mov
adc
test
cltd
enter
sub
enter
fucomip
push
xchg
inc
dec
addr16
clc
dec
idivb
orb
repnz
dec
mov
ja
clc
mov
dec
adc
sub
ror
and
ds
add
or
sbb
jle
or
arpl
push
jle
pop
lea
sub
dec
jl
adc
test
xchg
aaa
imul
addb
inc
ret
pop
xor
mov
pop
add
out
mov
push
push
inc
sbb
fidivs
iret
lds
jecxz
out
mov
ljmp
xor
dec
and
jmp
ficompl
leave
dec
gs
inc
push
loop
push
bound
pusha
pop
push
cmp
scas
push
in
inc
add
jg
fmuls
lds
cmc
push
xor
insl
in
pop
xor
push
movsl
push
lods
push
inc
push
adc
add
movb
mov
jbe
ss
in
imul
test
stos
cmc
cmpsl
mov
or
xchg
ffree
test
xorl
mov
jb
adc
or
xchg
push
xchg
aas
ror
inc
bound
lea
repz
dec
sub
sbb
std
push
daa
mov
mov
inc
lock
pop
insb
dec
push
cmp
cwtl
addr16
out
pop
adc
mov
xchg
mov
adc
data16
sarl
call
pop
sub
das
enter
xor
cmp
or
data16
cmpsl
or
adcb
mov
push
cli
sub
les
call
ljmp
sarl
mov
pop
sub
movsb
jae
aas
out
pop
xor
mov
jl
push
jnp
jo
xor
pusha
mov
add
mov
mov
nop
push
sbb
xor
jp
pushf
mov
mov
gs
es
sbb
out
fdivrl
add
rorb
lcall
lret
ja
stos
imul
pop
je
pushf
shr
in
aas
leave
loopne
cmp
repz
add
dec
cmpsb
pop
fwait
inc
cvtpi2ps
js
mov
pop
shlb
mov
sahf
xor
dec
setle
decb
stc
and
add
ret
rcll
fs
pop
or
sbb
lods
sbb
jb
jo
icebp
dec
sub
or
push
fwait
sbb
sbb
iret
mov
and
sbbb
adc
test
aam
push
addr16
loope
adc
cmp
sahf
loop
and
inc
mov
rcrl
push
int
inc
lahf
repnz
add
inc
cmp
pop
stc
mov
les
push
aad
enter
sub
loope
pop
cmc
punpcklbw
sti
inc
arpl
and
pop
fidivl
je
test
in
sub
lcall
jb
outsl
movsb
push
shrl
in
mov
jns
push
scas
call
push
gs
push
popa
cli
push
popf
ds
mov
fs
jmp
and
pusha
push
popf
rorl
cltd
dec
jp
mov
mov
or
ja
cs
mov
xor
or
sbb
popa
or
mov
xchg
or
xchg
div
push
and
jmp
push
scas
cmp
pusha
jle
sbb
mov
mov
mov
or
pushf
or
inc
test
pop
adc
mov
pop
adc
mov
ja
je
inc
in
push
movsl
leave
test
aas
pop
sub
repz
jae
xor
mov
outsl
out
gs
xor
xor
mov
pop
mov
adc
xchg
pop
and
lret
lcall
jbe
pop
pop
cmp
lahf
sbb
inc
adc
or
jge
jl
lcall
jp
loope
rcrb
insb
pop
xor
push
loopew
mov
mov
xor
jne
dec
jne
jl
push
cltd
push
sbb
adc
push
add
xor
mov
cld
aad
xor
jmp
push
sub
or
fs
and
add
loopne
sbb
pop
push
push
shlb
into
dec
rol
es
ds
dec
xchg
push
xchg
fwait
rorl
subb
rcll
test
in
inc
inc
pop
pop
lds
sub
mov
loope
mov
addr16
out
scas
mov
and
rol
xchg
imul
popf
lea
outsb
push
sub
xor
xchg
or
sti
adc
imul
ja
popa
push
push
pusha
add
ljmp
data16
adc
popf
fwait
sti
dec
ja
rorb
push
enter
pop
or
or
cmp
inc
mov
or
imul
pop
enter
cmpl
jg
and
sub
pop
sbb
subb
inc
jmp
xor
xor
movsb
out
dec
in
fmull
xchg
dec
mov
out
pop
jae
adc
sbbb
push
or
push
clc
push
adc
mov
daa
lock
shr
jp
adc
aas
cwtl
inc
bound
xchg
ret
movsl
xchg
ds
les
mov
iret
ja
sbb
cmpsb
loop
outsl
test
jmp
xchg
add
push
ja
data16
out
imul
inc
mov
and
lcall
rcr
inc
sbb
mov
push
mov
adc
sbb
das
cwtl
das
cmc
or
arpl
in
std
fstpl
mov
inc
sbb
ficoms
mov
push
jno
pop
xor
push
add
dec
fwait
dec
push
push
mov
in
clc
jmp
dec
clc
xchg
mov
push
cmc
fldenv
sub
push
fwait
shlw
dec
add
outsb
jae
sub
push
lret
pop
pop
les
cmp
cli
push
adc
pop
or
fcomip
sti
xor
lahf
lcall
dec
scas
xor
push
jl
lods
mov
sti
movsb
xchg
cs
lods
fisubrs
stos
cli
mov
mov
jmp
je
leave
push
lods
jb
push
in
adc
dec
call
dec
mov
adc
inc
fldenv
cld
adc
adc
cmc
and
mov
jle
test
adc
inc
in
mov
fs
mov
mov
nop
xchg
testl
jb
cmpb
lods
mov
gs
push
mov
enter
xchg
mov
or
out
outsl
enter
mov
push
mov
inc
call
out
pop
or
loope
or
adc
cmp
inc
repz
aam
faddl
mov
mov
fdiv
xchg
es
movsb
lret
pop
push
cmp
dec
sub
divl
mov
add
cltd
in
stos
mov
mov
mov
mov
mov
inc
loopne
dec
js
inc
lock
int3
sub
lock
xor
rol
add
test
xchg
dec
shr
int
or
add
dec
jle
pop
outsl
mov
pop
cld
push
jge
in
adcl
test
adc
adc
xchg
into
or
or
jle
cmp
nop
mov
add
imul
xchg
inc
cmp
push
mov
sar
adc
push
outsl
lock
das
and
int3
dec
xorb
and
bound
loope
pop
ljmp
int
push
mov
pop
xchg
push
push
mov
push
inc
jp
or
clc
mov
sbb
or
lds
jbe
mov
xor
xlat
shl
mov
mov
movsl
rcrb
sub
xchg
repz
dec
aaa
loope
aam
movb
cmp
inc
pop
hlt
dec
pop
scas
sub
mov
sar
lds
sub
xor
mov
mov
test
rorl
push
cmp
mov
aas
sbb
push
es
das
mov
mov
jns
sahf
lea
mov
push
dec
add
xchg
out
lret
and
test
sbb
arpl
aaa
mov
inc
imul
inc
and
xorb
mov
jo
fsts
cmpl
mov
dec
jbe
lock
icebp
into
dec
dec
shr
pop
mov
sub
lahf
dec
inc
or
mov
aas
addr16
or
jp
rorb
xchg
lods
pop
cmp
loope
movsl
pop
es
lods
outsl
lock
add
test
mov
dec
lret
sbb
adc
inc
push
push
pop
xchg
dec
jecxz
jbe
push
mov
push
and
push
loope
pop
stc
andb
jle
jp
enter
xchg
js
aam
push
dec
data16
ret
or
fwait
mov
sub
pop
adc
inc
scas
pushf
popf
jnp
or
cs
xchg
xor
dec
pop
cmpl
ja
fwait
insl
mov
div
dec
xchg
fdivrs
mov
sahf
mov
dec
mov
xchg
jle
lds
fcomp
cmp
call
mov
mov
xchg
mov
daa
xor
pop
cli
hlt
xor
jmp
xor
or
mov
aaa
lods
movsb
data16
mov
mov
sbb
mov
fists
or
or
push
clc
fistpll
loope
or
roll
ret
xor
cmp
adc
cmp
imul
pop
dec
leave
sub
imul
stos
in
mov
mov
hlt
xchg
or
and
and
scas
push
ja
jns
xor
sbb
not
mov
stos
popf
pop
shlb
pop
fsubrs
adcl
or
dec
lret
or
imul
mov
push
mov
pop
loopne
mov
adc
in
addr16
fimull
inc
js,pn
sbb
lret
cltd
jns
cmp
xchg
into
pop
insb
jnp
in
push
cmp
xor
push
pushf
clc
jae
lds
xchg
imul
jb
test
test
jns
call
insb
dec
adc
fwait
push
push
pop
jp
mov
adc
fisubs
xchg
ljmp
push
dec
inc
mov
nop
sub
icebp
test
repz
andl
test
repnz
das
loope
lods
out
lcall
and
pop
scas
rep
cmp
inc
jae
movsl
inc
push
xor
outsl
pop
adc
sarb
test
cmp
stos
mov
adc
xor
inc
roll
gs
push
loope
and
testl
fnsave
sub
jae
push
cltd
dec
out
stos
jns
je
adc
std
cmp
xor
mov
jbe
cmp
cmc
incl
dec
add
mov
cwtl
aam
xor
jno
jno
mov
sbb
testl
and
or
mov
scas
popa
jecxz
test
xchg
or
imull
int
popf
sub
push
fstl
adc
mov
scas
scas
push
pop
jg
int3
or
xor
and
rolb
pop
mov
pop
sbb
mov
addl
xlat
sub
lcall
or
int3
push
sti
outsl
out
notl
int3
int
cmp
sbbl
subb
fisttps
adc
bt
lock
and
pop
or
ja
mov
repnz
addr16
jmp
rcrb
mov
mov
ja
mov
add
fisttps
mov
sub
in
stos
mov
loope
xchg
out
fs
rol
mov
fbld
dec
xor
dec
sub
clc
rclb
adc
xchg
push
pop
push
mov
popa
push
adc
jbe
je
dec
negb
stc
lock
sbb
stos
out
sahf
or
and
xchg
mov
cltd
sub
jg
test
sbb
out
mov
pop
sub
cmp
stc
lods
rcrl
fistl
in
and
pop
fstps
stc
sub
push
mov
imul
lods
inc
and
xchg
adc
and
lock
popa
std
in
add
movsl
cmp
cld
fistps
popf
mov
push
sbb
outsb
dec
jbe
hlt
subb
xchg
pop
out
push
arpl
jl
sub
and
mov
xchg
mov
out
test
cmovl
cwtl
int
cli
out
dec
xchg
adc
mov
push
out
mov
enter
ficompl
pop
pop
jmp
jne
mov
mov
mov
cmp
int3
inc
add
lds
or
out
movsl
nop
jbe
and
xor
addr16
ss
js
lea
outsb
aad
test
in
push
lahf
xor
pop
into
add
and
add
jg
inc
iret
mov
inc
icebp
fwait
xchg
xchg
faddl
mov
pop
pop
dec
in
mov
fstpt
push
jp
mov
aaa
xchg
mov
ljmp
in
ret
out
outsl
lahf
add
mov
push
mov
pop
neg
push
push
test
mov
inc
jae
mov
xor
cmp
ja
stos
std
and
enter
cli
aam
or
fimull
jns
test
lea
pop
xor
js
sbb
leave
js
sbb
push
mov
int
jne
popa
sub
mov
lds
push
mov
and
fsubr
mov
pop
push
mov
push
push
aam
shll
jae
adc
push
rorb
ss
fs
shll
testb
dec
add
adc
push
cmp
mov
shl
hlt
inc
lret
pop
add
dec
insb
stos
shl
mov
sub
aad
mov
adc
sub
push
push
in
xor
pusha
enter
xor
and
sbb
mov
and
inc
aaa
fcmovne
xchg
ja
and
sti
movsb
iret
ss
das
or
and
out
xchg
shr
adc
orb
lret
push
xor
push
pusha
pop
dec
test
xchg
repz
and
in
ljmp
mov
xlat
in
lss
and
andb
jbe
push
mov
ret
cmp
shr
fucomip
xor
jl
ds
and
mov
mov
jbe
cmpsl
jl
jecxz
in
and
jecxz
sarl
mov
aam
or
pop
push
es
mov
scas
xchg
daa
dec
movsl
or
sti
sub
jecxz
add
repz
mov
insb
cmc
mov
lea
or
out
cltd
sbb
inc
cmp
out
sub
push
xor
nop
jne
enter
inc
mov
cmpsl
xchg
dec
jbe
pusha
lret
idivl
or
mov
jecxz
add
push
jo
popa
jl
mov
jae
pop
mov
movl
test
or
icebp
cmp
lcall
flds
xor
mov
jo
jno
js
outsb
leave
lret
stos
add
das
mov
push
fidivrl
out
out
fsts
mov
pusha
mov
es
std
mov
cwtl
in
sbbb
bswap
push
faddl
int3
in
or
adc
xor
or
lods
fsubrs
jp
sub
rcl
mov
dec
popa
mov
ret
jecxz
push
call
mov
pop
gs
adc
ljmp
adc
mov
inc
mov
jle
andl
xchg
bound
inc
jmp
and
gs
loope
aas
cmpl
cltd
add
and
aam
leave
jbe
push
add
mov
test
pop
jp
mov
mov
push
cmp
fmull
aam
cltd
dec
sub
inc
data16
xor
popf
and
rolb
rcrb
push
xor
cmp
mov
sbb
mov
pop
cmp
add
cmp
gs
jmp
push
popa
imul
mov
mov
arpl
mov
movsl
xor
pop
mov
out
cmp
movsl
outsl
push
inc
xor
mov
in
pop
stos
mov
push
xchg
sbbb
mov
mov
out
xchg
and
or
aas
movsb
decl
mov
mov
dec
leave
pop
and
and
mov
cmpsb
jl
mov
cld
mov
cltd
hlt
ja
add
inc
cmp
pop
push
pop
mov
sarl
gs
dec
xchg
in
daa
stc
jle
sub
push
push
ss
call
loopne
das
ja
sahf
cmp
cmpsl
stos
lea
xor
into
inc
jmp
popf
sub
lahf
adc
imull
imul
inc
mov
pop
stos
pop
adc
pop
xchg
insl
cmp
leave
cwtl
ja
sub
mov
iret
mov
loop
rcl
push
pop
xchg
pop
inc
in
fstp
ret
in
or
sbbb
jecxz
lcall
mov
cmp
aaa
sub
leave
sub
mov
stos
mov
mov
loop
mov
out
xor
adcl
xchg
gs
cwtl
push
icebp
push
ficoml
dec
fcmovnbe
pop
and
inc
adcl
in
dec
cmp
mov
fnsave
dec
mov
arpl
repnz
xchg
add
mov
push
enter
pop
setl
jae
lret
push
call
mov
lods
mov
or
jp
cld
stos
jmp
or
mov
fwait
popa
pop
fiadds
and
cld
inc
lods
int
dec
pop
outsl
in
and
sbb
inc
stc
or
inc
pop
movsl
xchg
push
movups
xchg
repnz
nop
mov
fisttps
lods
jmp
adc
pop
mov
je
xchg
cs
lds
ds
or
cmpsb
jno
cmp
cmp
test
add
sub
stc
pop
daa
out
jns
sbb
or
jae
xor
xor
pop
push
iret
je
roll
jns
sub
push
or
sbb
xor
test
fists
bound
ret
add
xchg
jmp
jno
and
addr16
cmp
repz
mov
or
sub
mov
and
into
add
enter
sbb
sub
xor
or
mov
jne
jbe
mul
sbb
xor
pop
and
mov
repz
fsts
jo
pop
sahf
dec
out
xchg
ss
xchg
adc
push
dec
int3
into
inc
pushf
fstpt
vmwrite
test
mov
mov
jmp
mov
mov
cld
sub
add
andnps
mov
insl
push
cltd
outsl
xchg
inc
add
mov
outsl
push
lods
rol
push
or
mov
cmpsb
push
aad
or
leave
xorl
pop
cld
sub
pop
lock
in
jecxz
pushf
fs
xor
lea
mov
dec
and
gs
jne
mov
inc
adc
arpl
cmp
imul
push
pop
cs
data16
popf
mov
aaa
xor
out
imul
negl
inc
inc
ficompl
mov
sub
pop
add
add
jle
inc
bnd
loop
pop
adc
outsl
sbb
je
loop
fucomip
mov
dec
or
mov
jg
mov
mov
jno
xchg
push
pop
fmuls
notl
popa
imul
lret
cmc
push
ss
mov
and
adc
pop
xchg
inc
movsb
lock
mov
test
int
pop
inc
sub
and
je
push
stos
fldcw
aad
adc
int3
sarl
add
inc
enter
cmp
jp
mov
xor
push
pop
inc
pop
flds
mov
jg
test
arpl
divb
mov
test
mov
dec
repz
sbb
push
xor
cwtl
jecxz
mov
dec
xor
repz
push
add
pop
insl
pushf
push
mov
test
and
int
add
icebp
xchg
movsl
lock
sub
and
das
aam
fwait
mov
sbb
ljmp
sub
fildl
je
add
and
inc
insb
xchg
clc
pop
out
dec
lret
ss
fs
and
dec
ds
pop
adc
dec
xlat
mov
push
dec
mov
cmp
popa
jnp
push
or
mov
dec
dec
cmp
inc
or
std
sub
test
dec
sbb
clc
cmpsl
nop
lods
sub
push
pop
test
or
sahf
and
mov
iret
pop
test
cld
pusha
adc
cmp
jp
aaa
jge
addr16
jne
cld
mov
cmp
mov
adc
cs
notl
inc
stos
jbe
mov
pop
cmp
fisubs
dec
lahf
mov
sbb
mov
gs
pop
imul
mov
jl
mov
pop
xchg
jae
sub
dec
jl
cmp
dec
lods
pop
xchg
push
cmp
sub
mov
or
cs
pop
mov
aam
jl
js
std
in
scas
stos
scas
push
icebp
mov
pop
js
nop
lds
jl
leave
inc
cmp
lods
out
sbb
and
fbld
dec
push
pushf
jmp
push
jno
sbb
cmpsl
push
movsb
inc
pusha
leave
out
jnp
pusha
mov
mov
out
in
dec
enter
daa
hlt
jle
pop
fwait
mov
insb
cltd
bound
ljmp
aas
fyl2x
sub
shrb
hlt
mov
dec
xlat
mov
pusha
sti
inc
dec
mov
pop
add
mov
sub
imul
jle
pop
cmp
and
xchg
loopne
xlat
cmp
inc
stos
daa
adc
mov
sub
mov
ret
mov
xchg
out
orb
push
jb
cmp
mov
inc
sbb
cmc
popl
daa
je
test
mov
insb
jne
xor
fs
mov
mov
and
flds
cmp
hlt
xchg
mov
and
sub
and
aaa
sbb
push
stc
adc
lock
mov
sbb
pushf
add
cli
nop
adc
and
je
ret
loop,pt
pushf
fbld
loope
push
inc
int
mov
cs
adc
lcall
insl
jnp
nop
repnz
inc
loope
xchg
mov
shr
ret
mov
inc
push
aad
enter
pop
cmpsl
sbb
sub
fsubs
leave
ret
jg
call
test
add
imul
push
xor
or
fiaddl
add
popa
cmp
loop
test
pop
bound
shrl
stos
push
adc
jp
push
xor
inc
lcall
gs
adc
insb
repnz
aam
je
add
pop
cld
or
repz
push
movsb
lock
xchg
call
push
cmp
lcall
sub
mov
js
rorl
xchg
pusha
rorl
call
xlat
mov
lock
sbb
sub
addr16
mov
cmp
mov
sbb
jo
xor
ds
push
sbb
cld
loope
jnp
mov
je
scas
adcl
imulb
int
xchg
dec
ljmp
dec
daa
add
adc
fstps
xlat
jge
rorl
orb
stos
sahf
scas
inc
jns
fwait
push
xchg
test
daa
mov
stos
pop
out
mov
fildll
push
pop
mov
xchg
int3
dec
fstl
xor
dec
lock
pop
xor
jl
pushf
cmpsb
shlb
out
add
pop
imul
test
movsl
pop
fadd
call
mov
cmpsb
dec
stos
jp
push
fsub
rcrl
sub
out
aas
jb
lods
pop
mov
jbe
push
testl
leave
addr16
inc
cwtl
lcall
push
sti
fwait
repz
cld
loop
hlt
jmp
xor
mov
fsub
pop
mov
decb
pushf
push
dec
sbb
mov
aad
add
dec
adc
popa
movsb
inc
add
outsb
mov
or
mov
inc
mov
add
daa
outsl
addr16
hlt
clc
xchg
xor
lea
add
imul
xchg
pop
ja
push
sub
push
sbb
adc
push
push
xor
scas
clc
test
aaa
dec
test
pop
pushl
pushf
adc
stc
sti
cli
sti
test
adc
fistpll
adc
and
fmuls
nop
es
insl
pop
and
cmp
push
fisubs
xor
imul
scas
int
mov
pushf
dec
ljmp
dec
adc
sbb
jecxz
test
push
icebp
mov
pop
pop
dec
test
cmp
cmp
out
shlb
xor
aas
gs
mov
test
das
enter
xchg
lea
cmp
mov
mov
fildll
dec
push
loope
fimuls
pushf
sbb
fadd
jne
pop
ja
test
fsubrl
shlb
je
xchg
imulb
dec
adc
mov
testb
sbb
cmc
xor
dec
in
aam
fidivl
inc
push
or
mov
int
scas
popf
push
loop
and
xchg
subb
and
jecxz
and
or
in
mov
cmp
ret
mov
mov
inc
jl
lret
dec
fisttps
and
sbb
mov
mov
pop
mov
sub
add
ljmp
xor
jmp
sbb
sti
add
fstl
mov
js
inc
ja
test
lahf
hlt
cmp
adc
dec
xlat
rcll
pop
jno
xor
clc
jbe
cmpb
inc
js
jae
fldl
mov
or
push
roll
dec
sbb
pop
push
jg
cli
shlb
wbinvd
xor
cmp
lret
cmp
dec
lret
inc
sbb
mov
xorl
xchg
push
cmp
xchg
cmc
loope
rolb
cmp
cli
addb
pop
jle
cmp
jo
cli
sub
pop
sub
push
mov
push
xor
lret
cmp
add
pop
lods
js
push
scas
addr16
lahf
cli
mov
xor
test
xchg
out
add
push
repz
sub
add
ret
int3
ss
inc
xchg
jne
int
cmp
mov
mov
dec
inc
add
lods
fldt
arpl
sbb
aas
fmul
in
fadds
out
add
adc
iret
leave
add
sbb
aas
fldcw
jg
clc
sbb
xchg
inc
push
inc
mov
nop
and
dec
pop
adc
insb
xlat
inc
imul
mov
testb
pushf
push
in
mov
popa
stos
pushf
scas
jns
jno
xchg
in
enter
adc
cltd
sbb
arpl
icebp
test
sub
sahf
mov
mov
loop
mov
mov
inc
lds
mulb
push
hlt
test
ret
call
sti
in
jmp
mov
cvtdq2ps
dec
insb
flds
ficomps
insl
ja
ret
jno
pop
out
and
outsl
or
push
dec
push
add
jecxz
jg
xchg
xorl
pop
or
int3
mov
mov
adc
shlb
cltd
mov
btc
ret
mov
sub
into
pop
dec
push
lea
incl
sub
add
bound
cmpsl
cmp
movsl
shrl
cmp
inc
movsb
fcomip
xor
add
stos
or
add
sbb
test
dec
out
fadd
jae
and
in
daa
cmp
lret
inc
test
push
ret
mov
in
xchg
imul
push
movsb
out
xor
and
ja
lret
cmpsl
and
fbld
and
lret
xchg
push
int
in
inc
pop
inc
or
pop
pop
xchg
cltd
sub
mov
pop
inc
test
sahf
loope
or
into
call
cwtl
jp
mul
and
lea
and
mov
js
clc
pop
mov
push
mov
out
jecxz
sub
pushf
jle
inc
cmp
movsl
sbb
stos
ret
stos
stc
add
enter
repnz
sub
in
imull
cltd
or
call
out
xchg
std
and
jmp
pop
int
nop
adc
pop
sub
add
push
xor
imul
jo
lods
mov
loopne
cmc
into
repz
xor
orl
xchg
mov
mov
xchg
jmp
es
daa
fcom
sub
outsb
jp
cmp
mov
mov
add
mov
xchg
dec
stos
and
loope
or
cmp
and
mov
jecxz
mov
inc
loope
pop
pop
inc
add
inc
jnp
negl
dec
lods
sub
or
sahf
int
sbb
addr16
cmp
aad
jne
mov
xchg
jo
xchg
xchg
sbb
push
adc
daa
mov
mov
clc
mov
out
jle
or
inc
inc
add
mulb
mov
fstps
jb
push
push
mov
cwtl
push
xchg
pop
xor
push
andl
icebp
in
pop
stos
pop
inc
jecxz
dec
pop
sub
outsb
fst
cmp
js
aaa
sbb
jp
inc
sti
fcmovnb
and
pop
xor
pop
cwtl
das
outsl
bound
or
scas
into
cs
push
je
outsb
aam
mov
xor
cmpsb
pop
jno
fidivrs
pusha
xor
cli
jmp
gs
insl
dec
inc
pop
dec
adc
lods
loop
xor
scas
xchg
ficoms
lods
mov
xchg
subb
das
cwtl
addr16
adc
leave
pop
stc
movsl
mov
inc
push
pop
sti
pop
insl
outsl
addb
leave
xor
sbb
rcl
repnz
int
sbb
negl
pop
adc
shlb
mov
xlat
fildl
pop
inc
test
sbbl
mov
test
sub
jge
dec
jecxz
int3
les
add
cmp
js
subl
insl
sub
fsubs
add
rcl
xchg
cmc
mov
cmp
imul
add
aas
fisttpl
rcl
xchg
xor
in
mov
xor
xor
lods
int
xchg
and
cmp
ljmp
int3
loop
lods
stc
fisttps
cmp
rol
cmp
dec
frstor
sub
scas
jno
js
sti
fimuls
jle
pop
lods
xchg
mov
adc
push
adc
mov
negb
aam
les
mov
xorl
mov
gs
rcrb
outsb
push
and
xor
add
ficoml
dec
jg
imul
subb
xchg
mov
stos
lock
inc
pusha
jno
roll
rol
aad
xchg
pop
shlb
fwait
mov
nop
and
fildl
or
insb
xor
dec
addr16
xor
andl
push
xor
aam
mov
cmc
mov
movsl
mov
push
iret
xchg
mov
ficoml
imul
mov
andl
push
fwait
sub
lods
out
xchg
cmpsb
aad
push
int3
das
inc
or
xor
and
rep
cmc
test
mov
divl
cmpsl
insb
test
or
or
sub
rorl
shrl
cmp
pop
aaa
cmp
xchg
stos
inc
or
std
inc
aam
jmp
cmp
cmp
outsl
mov
xorb
sbb
mov
jge
dec
mov
cmp
mov
push
push
jo
sub
ds
jge
in
call
xchg
stc
or
out
pop
mov
cmp
adc
aaa
push
adc
hlt
sub
jge
repz
and
mov
cmpsb
sti
test
sub
add
or
stc
inc
sbb
mov
movsb
loope
add
xor
ficomps
xchg
xor
xchg
or
ljmp
insl
adc
push
pop
mov
sub
cltd
sub
lret
lds
cli
jbe
mov
bound
xor
fisubrl
and
jnp
xlat
xchg
cli
xor
lret
add
mov
or
loopne
mov
adc
in
sub
sub
xchg
xlat
add
push
sbb
lahf
dec
mov
push
fnstenv
mov
faddl
add
sbb
pop
adcb
lea
push
jno
lea
jl
dec
ret
xor
lods
bound
cmp
sahf
add
decl
fistpll
xchg
es
aad
mov
mov
sub
in
push
fiaddl
movsl
cmp
fisttps
outsb
sub
loope
test
push
das
inc
pop
inc
dec
stos
mov
xchg
mov
in
and
cmp
jne
jae
enter
out
lcall
push
push
push
icebp
xchg
divl
push
push
stos
sub
lods
pop
fisubs
jp
or
cltd
cmc
int3
fsubl
mov
push
int3
mov
sbb
push
mov
adc
adc
xchg
dec
rcrb
addr16
add
inc
mov
inc
hlt
jno
js
inc
out
push
xor
stos
loop
movsb
jmp
cmc
xchg
and
inc
xchg
aaa
cmp
or
lds
mov
pop
fsubl
cmp
pop
int
popa
xor
test
loopne
push
or
rol
lds
out
arpl
out
sahf
subl
ljmp
mov
adc
xchg
ret
ljmp
and
ret
xchg
mul
insb
mov
xchg
shlb
cld
cmpsb
jge
jg
mov
push
inc
lret
xchg
ljmp
ds
push
push
jae
add
sbb
aad
mov
leave
jecxz
push
in
lahf
jle
mov
pop
add
or
scas
loopne
rorb
repz
jb
dec
out
jae
fwait
out
pushw
inc
push
mov
sub
dec
jns
xchg
es
xchg
inc
in
mov
adc
adc
arpl
movsb
inc
cmp
imul
or
bound
popa
addb
mov
and
dec
mov
jmp
xchg
adc
ret
xchg
addr16
dec
sbb
int3
xor
sbb
shlb
sbb
repnz
jns
mov
xor
sub
inc
pop
rol
xor
push
test
inc
xor
push
cmpsl
sub
mov
stos
loope
scas
sub
call
aaa
setg
pop
stos
repz
jo
sti
push
ss
stc
pop
mov
shll
in
inc
rcrl
in
lods
cld
xchg
test
addr16
mov
int3
sbb
or
jo
fistps
repnz
jg
add
ljmp
xor
mov
pushl
aad
mov
iret
roll
idivb
pushf
in
test
pop
movsb
shll
cli
or
push
sbb
in
xlat
mov
or
dec
xchg
add
scas
push
mov
js
mov
rcrb
clc
ds
nop
xor
pop
cltd
inc
ss
pop
popa
addl
les
cmovle
cmp
fisubrl
inc
pop
mov
pop
sti
adcl
jg
or
adc
scas
test
mov
test
xchg
dec
jno
dec
cwtl
or
shl
jge
adc
sbb
scas
sub
adc
gs
shlb
out
mov
pop
mov
adc
test
push
add
outsb
rorb
loop
jne
xor
std
dec
xor
out
dec
mov
jmp
pusha
bound
loope
data16
jo
movl
icebp
ficomps
pusha
popa
inc
clc
shll
push
xor
mov
std
jae
popf
pop
inc
pop
std
test
ret
movsb
cmp
inc
loopne
inc
cmp
or
inc
inc
xchg
rcll
fcompl
call
pop
out
pop
xchg
sub
mov
xchg
xchg
int3
mov
orl
ds
insb
xchg
cmpsb
inc
sbb
scas
adc
pop
jb
lea
push
movsl
xchg
loope
cmp
or
in
cmp
imul
ds
sbb
lea
add
inc
das
xor
in
inc
add
addl
js
mov
xor
int3
xor
jle
es
mov
and
sub
mov
movsb
adc
lds
fidivs
mov
psrlw
add
ret
ret
inc
fs
daa
in
cmp
or
xchg
inc
mov
ss
and
push
push
inc
test
pop
loop
data16
jbe
mov
mov
jo
push
adc
push
repnz
sarl
mov
push
jmp
or
mov
sahf
lahf
mov
mov
decl
shlb
call
mov
enter
mov
mov
fs
mov
or
cmp
mov
pop
cmpb
shlb
mov
jb
and
add
dec
leave
fstpt
xor
cmp
aaa
pop
cwtl
inc
push
mov
pop
test
addr16
mov
adc
pusha
sbb
push
or
ffree
mov
nop
sub
imul
ljmp
imul
and
xchg
in
push
jae
sti
orl
dec
cld
xor
cmpsb
mov
mov
xchg
das
cmp
repz
inc
mov
jo
lcall
dec
lret
lods
daa
and
in
cwtl
ficoms
and
mov
cmpsl
dec
jbe
or
add
das
ljmp
int3
mov
les
push
pop
jno
push
jnp
sahf
insb
addl
dec
and
mov
xor
loopne
sbb
or
test
jb
hlt
clc
pusha
push
mov
cmp
ficompl
data16
lds
push
adc
cmp
jecxz
adc
int3
dec
scas
ret
mov
xor
pop
adc
sub
dec
sbb
fcoml
cmp
push
pop
repnz
std
lahf
xchg
aas
push
aad
lods
xchg
mov
xchg
push
cmp
aaa
mov
in
inc
aas
xchg
pop
aaa
outsb
xchg
cmp
lds
rorb
and
pushf
aad
popf
or
push
jo
leave
aas
mov
enter
xchg
fisubrl
testb
cmp
rcll
ds
mov
xor
cmp
enter
and
cs
adc
pop
dec
enter
test
mov
xlat
scas
sbb
sub
sbb
lds
je
sub
and
lahf
pop
loope
jns
and
xchg
and
dec
sbbl
sarb
pop
jnp
adc
insl
pop
push
movsb
js
add
mov
clc
iret
movsl
cltd
mov
fdivrs
push
ret
mov
mov
push
cmp
hlt
xchg
cs
mov
mov
or
lods
and
or
out
cltd
sbb
or
ret
cmp
ret
pop
arpl
sbb
mov
mov
mov
cltd
cld
loop
mov
xchg
rcr
xchg
cmc
add
pop
out
nop
add
xchg
push
jg
xor
mov
dec
xchg
clc
adc
jbe
xchg
test
mov
fidivl
or
mov
leave
xorb
xchg
movsb
ljmp
sbb
sub
aas
inc
push
loope
xchg
test
xor
inc
add
in
fcmovbe
mov
icebp
sbb
ss
inc
mov
mov
in
in
lea
mov
pop
addr16
fwait
push
mov
sahf
push
fiadds
out
dec
hlt
inc
xchg
sub
and
mov
rclb
stc
fwait
push
mov
dec
jne
xchg
adc
cs
jge
xchg
push
scas
push
add
out
arpl
mov
iret
sub
xor
jp
cmp
adcl
fnstcw
push
shlb
dec
lcall
faddp
xchg
sub
repz
xchg
jne
jg
faddl
jb
xor
fwait
ret
stos
xor
in
inc
rorb
mov
sbbl
push
xor
jne
sbb
scas
mov
ficompl
movsb
jnp
movsl
fbld
stos
aaa
aas
cmpl
xchg
add
xor
xchg
int3
jbe
das
scas
fistpll
cmp
in
xchg
sub
ljmp
jno
dec
mov
push
xchg
enter
or
pop
out
inc
xor
roll
insb
test
xlat
mov
into
imul
ds
cmp
inc
lret
pop
mov
mov
es
aad
sbb
ficomps
mov
fnsave
xor
inc
pushf
inc
pop
mov
les
scas
inc
add
jno
adc
mov
xor
pop
mov
insb
cmpb
xchg
rdmsr
mov
std
sub
cmp
insl
les
pop
js
jmp
inc
pop
insb
jbe
cmp
pop
pushf
cli
lahf
dec
mov
or
mov
mov
pop
stos
and
pop
cmp
sbb
sbb
jmp
addr16
add
std
pop
out
dec
cmp
loop
ret
call
add
int
mov
arpl
xchg
call
jg,pt
mov
sub
inc
in
in
adc
push
movsb
int
insb
jns,pt
dec
insb
or
ljmp
js
and
mov
xchg
in
ja
inc
jmp
and
push
insb
es
or
test
mov
mov
test
leave
fxch
and
fistpll
jp
mov
pop
push
outsb
aaa
xchg
rcll
inc
inc
inc
test
dec
inc
inc
aaa
adc
pusha
pushf
mov
or
add
lods
mov
mov
outsb
sub
testl
jne
inc
fiaddl
das
adc
pop
call
rol
or
clc
xchg
or
mov
loope
ret
cmpl
insl
in
hlt
ret
push
sarb
sbb
push
das
and
mov
push
jecxz
push
sbb
movsl
daa
cmp
fcmovnb
popa
mov
aam
nop
push
jg
cmpsb
mov
push
fimuls
js
cmp
mov
jp
adc
inc
and
push
mov
and
dec
fldl
sub
sbb
xchg
mov
pop
add
and
jecxz
jb
adc
loopne
mov
pop
mov
xor
pop
dec
adc
out
es
fmulp
inc
out
mov
mov
stos
push
jns
xchg
jnp
in
aam
cltd
sbb
stos
pop
mov
pop
inc
neg
sahf
mov
mov
and
outsl
or
lods
scas
push
sub
lret
mov
test
mov
mov
clc
outsb
xorb
sbb
inc
and
mov
cmp
add
scas
xchg
mov
pop
sbb
push
test
repz
sbbb
and
cmpsl
add
ret
cmp
jecxz
sti
int3
dec
inc
sub
mov
aaa
cmp
int3
movsb
xchg
dec
or
out
pushf
mov
js
in
or
insb
call
cmc
in
push
add
xchg
fwait
jnp
clc
movsb
fldenv
mov
push
or
pop
pushf
jp
rolb
jmp
fdivl
mov
pushf
nop
jecxz
jne
pop
fnsave
shll
shlb
test
push
jl
sub
insl
dec
lcall
xchg
or
jp
jne
in
pop
add
add
mov
movsl
loop
lret
dec
in
lds
adc
popa
lret
ret
bswap
aad
inc
test
adc
add
out
and
sub
fbld
fstpt
add
and
pop
or
lret
inc
aaa
push
in
cmc
fcoml
and
insl
dec
shrb
cmc
jg
dec
rcrb
data16
inc
push
cmp
lcall
lock
dec
xchg
push
push
xor
jp
stc
sub
and
mov
scas
sbb
inc
fidivs
add
lock
loopne
mov
xchg
push
lahf
clc
jl
leave
sbbl
jmp
insl
js
mov
pop
rorb
imul
inc
mov
cltd
cmp
cmp
popa
cmpsl
jle
adc
repz
push
sbb
int
aam
mov
pop
jle
ds
dec
frstor
jb
adc
adc
fistl
cmp
aad
out
outsb
sub
adc
xor
adc
mov
repz
mov
aaa
inc
xor
imul
push
mov
jnp
das
push
into
push
repz
add
xchg
push
push
push
daa
sub
inc
insl
pop
mov
mov
fs
xor
sub
lahf
cwtl
and
mov
pop
sub
mov
mov
push
push
inc
sbb
xchg
pop
adc
arpl
movb
pop
out
cwtl
xor
xor
in
fs
cmpsl
lods
cwtl
pop
shr
ss
xchg
loopne
jecxz
xchg
cmp
in
in
test
mov
mov
fbld
sub
lcall
mov
mov
sahf
sbb
mov
cmpsl
lcall
popa
lods
push
push
adc
js
stc
ffreep
pop
outsb
aas
xor
mov
leave
stos
insl
jmp
cmp
sti
add
jo
push
ljmp
scas
lahf
cmpsb
shrb
aam
aaa
incl
into
imul
pop
dec
push
push
enter
fcoml
clc
nop
mov
add
pop
dec
aas
in
push
xchg
stc
stos
popa
out
pop
lock
lret
outsl
push
xorl
pop
xchg
push
movsl
loopne
fistpl
jmp
cld
bound
sbb
in
add
cmpsl
rorl
hlt
push
jne
sbb
lock
movsl
pop
mov
inc
mov
jp
push
test
cs
out
popf
inc
dec
push
sti
push
inc
adcl
je
jnp
popa
pusha
pop
lods
push
pusha
out
and
fists
adc
inc
push
pop
movsb
lods
cli
push
mov
hlt
cmp
in
pop
push
adc
push
jle
mov
mov
xor
jb
lods
adc
sub
cli
and
jg
lea
sub
mov
leave
inc
xor
dec
add
pop
movsl
stos
or
enter
sbb
pushf
push
pop
cmpsb
into
pushf
sub
and
pop
push
out
pop
gs
xchg
pop
xchg
into
or
and
leave
push
sub
subb
inc
aas
jle
cli
in
int3
push
jecxz
xchg
daa
ljmp
pop
and
mov
jmp
sti
popa
push
int
sub
aas
gs
fmuls
rclb
add
loopne
sub
mov
add
rcrl
push
push
mov
mov
outsb
mov
mov
cmc
int
mull
imull
add
in
int
cmp
push
pop
ds
adc
sub
test
sbb
add
call
sub
push
add
mov
push
mov
ret
push
xor
bound
xchg
jecxz
lret
addl
sbb
xchg
mov
cmp
mov
data16
fld
push
stos
add
push
popf
in
pop
hlt
dec
lock
in
xor
sahf
mov
mov
pop
jo
sbb
add
pop
fsubrs
scas
dec
or
pop
shrb
test
fs
cwtl
lcall
xchg
jo
aaa
icebp
sub
test
aas
repnz
push
inc
scas
mov
das
loop
xchg
xor
popf
xchg
imul
pop
add
push
cmp
ss
sbb
xchg
movq
mov
icebp
jmp
iret
loopne
xor
pop
sbb
ljmp
out
ja
adc
iret
fists
mov
out
mov
scas
fsubl
fwait
arpl
insb
add
lods
inc
add
dec
fldenv
add
outsb
popf
mov
and
ja
xchg
push
cmp
fldt
fwait
loopne
mov
jne
pop
inc
mov
mulb
inc
sub
mov
les
repz
mov
hlt
mov
pop
les
inc
add
push
popf
push
sahf
int3
outsb
push
scas
sbb
cltd
cwtl
enter
or
pushf
jg
or
xor
mov
iret
popf
jns
push
jo
xor
jecxz
xlat
test
mov
mov
iret
xchg
or
dec
les
out
add
loope
push
dec
cli
data16
repz
mov
sub
jg
popa
or
jge
leave
mov
in
inc
pop
stos
cmc
pop
dec
fmulp
ja
xor
scas
pushf
sbb
and
lahf
pop
or
or
cmp
xchg
jl
aaa
mov
mov
jg
sti
mov
popa
mov
sbbl
and
fisubl
sahf
fwait
testl
jne
adc
push
mov
into
dec
sub
dec
or
pop
les
shlb
mov
xlat
xchg
add
scas
aaa
dec
or
pop
dec
ret
cmc
jo
iret
adc
mov
adc
daa
sbb
adc
xor
inc
out
xor
jg
imul
std
dec
add
xor
jb
push
xlat
mov
cmp
sub
daa
sti
dec
push
xor
shll
js
test
push
fbstp
add
and
repz
mov
push
push
cmpl
add
aam
pmullw
push
and
mov
mov
push
shlb
and
jp
or
lock
jp
cmpsl
lock
mov
fwait
daa
xchg
sub
mov
pusha
jnp
xchg
add
lods
jle
xchg
xchg
or
daa
mov
leave
into
jbe
jecxz
int3
and
adc
fstp
mov
sbb
int3
push
jg
mov
dec
xchg
adc
lret
jecxz
andl
lret
syscall
rcll
imul
pop
aad
gs
in
jp
mov
popa
mov
mov
ljmp
sub
fsubrs
loope
xchg
popf
and
dec
cwtl
jbe
mov
out
mov
scas
jo
mov
cmp
jge
and
dec
xchg
adc
cmp
cltd
loope
inc
test
xchg
lret
mov
movsb
mov
push
adc
jg
xor
xchg
cmpsb
loop
mov
stos
xchg
movsl
scas
jb
movsl
or
pop
mov
and
mov
pop
inc
ret
push
out
sbb
insl
and
jg
dec
imul
cmpsb
adc
out
mov
jb
scas
xor
jl
test
or
repnz
ss
aaa
dec
in
ja
sbb
ret
hlt
fcmovnbe
dec
sbb
jo
cmp
test
cmp
inc
mov
inc
loope
std
scas
out
in
push
and
inc
adc
shlb
inc
cltd
mov
add
sahf
mov
stos
jne
stc
push
push
repz
add
pop
fnstsw
mov
popa
mov
notl
mov
bound
push
dec
pop
ret
push
in
mov
push
ss
stos
insl
jae
xchg
dec
ficompl
xchg
jmp
rorb
sub
ffreep
jl
mov
xchg
mull
push
or
ret
inc
mov
jge
aas
in
scas
jno
pop
fnstcw
jbe
push
fs
add
stc
sbb
xchg
xchg
add
xorb
int
imul
mov
loopne
push
push
notl
fwait
inc
add
adc
lea
rcrb
cmpsl
inc
pop
dec
dec
inc
lods
cmp
xor
pop
pop
test
stc
mov
mov
shl
fs
lret
repz
xchg
shrl
push
pop
mov
pop
sbb
sub
enter
adc
xchg
aaa
mov
push
or
in
cmpsl
jo
shlb
addb
push
sub
xor
push
daa
cmp
aaa
lea
push
pop
inc
jle
sar
cs
adc
enter
test
out
push
cltd
dec
cmp
test
int3
test
pop
dec
loopne
mov
push
flds
movsl
lcall
xchg
rorl
cwtl
or
rorb
bound
mov
xchg
jo
push
lret
repnz
pop
leave
xor
test
lods
xor
insb
gs
or
cld
mov
xchg
adc
push
cmp
push
loop
jno
xchg
inc
dec
mov
push
loope
imul
lret
test
dec
push
inc
xchg
mov
pop
in
sub
outsb
cmpl
mov
loopne
ficoms
pop
push
fmuls
je
inc
nop
jae
xor
ja
sub
mov
add
gs
imul
jge
pop
pop
in
mov
adc
orb
mov
clc
roll
loop
and
movsl
push
inc
out
stos
sbb
sbb
les
aas
mov
decl
imul
dec
mov
enter
lret
stos
jle
or
cmp
jnp
jnp
rolb
fnsaves
pop
xchg
jae
sbb
gs
mov
push
mov
fisttpl
es
pop
or
push
sub
mov
sub
test
pop
mov
inc
sahf
pop
pop
lea
push
fisubs
or
jle
pop
jp
cmpsl
sbb
cmpb
testl
call
xchg
pop
repnz
fwait
adc
nop
popl
and
adcb
int
dec
sti
int3
call
mov
fwait
and
dec
and
dec
into
mov
or
int
test
sub
lea
and
mov
stc
xor
mov
ss
ljmp
repnz
mov
jp
mov
cwtl
pop
xchg
lds
sub
rcll
roll
decl
inc
movsb
inc
imull
mov
cmp
mov
mov
jbe
ret
dec
out
mov
cmp
lcall
push
pop
inc
xchg
fwait
jl
jg
mov
loop
ret
test
les
or
dec
or
scas
sbb
mov
cs
test
pop
mov
pop
in
mov
aam
mov
cltd
sbb
adcl
andl
jle
lahf
lret
lock
mov
pop
popa
std
xor
xchg
jnp
insb
out
lods
mov
mov
xor
mov
add
push
or
enter
aam
xchg
repnz
sub
jge
dec
xchg
push
mov
and
aad
push
daa
mov
sbb
cmp
aas
scas
je
jmp
cmpsb
rolb
mov
fs
mov
or
cmp
push
inc
lods
xchg
xor
dec
ret
in
adc
ds
add
xor
add
or
mov
arpl
mov
ret
mov
daa
push
mov
call
mov
int
rol
mov
pop
mov
pop
push
je
into
fs
in
mov
mov
xchg
sbb
dec
mov
jle
mov
ds
lret
inc
xchg
cmp
sub
test
rcrl
xor
nop
sub
aaa
rolb
rcrl
mov
lret
cmpsl
dec
fdivrp
jg
hlt
xchg
push
ss
divl
mov
pop
fmuls
xchg
lcall
jg
mov
xor
fsub
lods
xor
cmp
je
inc
in
js
xchg
outsb
cmp
mov
cmp
jbe
adc
shll
imul
xlat
ss
jo
movsb
dec
iret
repnz
cmp
mov
mov
aad
stc
ss
xchg
loope
or
fdiv
cli
jg
repnz
aad
push
fisubrl
fistl
mov
lock
and
fwait
pop
adcl
stc
jbe
mov
ja
test
and
xor
jbe
cmp
xor
mov
fdivp
std
push
repnz
add
xchg
mov
aaa
lcall
sbb
shll
roll
rolb
jp
pushf
sbb
cmpsl
sbb
fwait
outsl
cmp
inc
jp
mov
cmp
icebp
mov
sbb
pop
pushf
insb
movsl
xchg
cmp
js
jbe
ret
aas
loopne
or
cmpsl
pop
loopne
ret
add
push
fwait
inc
push
push
mov
dec
inc
jp
cli
cld
shl
inc
mov
rcll
adc
insb
add
sarb
inc
or
or
out
leave
mov
mov
cltd
cld
push
in
scas
inc
mov
js
jmp
fdivl
pop
mov
xor
jbe
nop
ret
inc
cwtl
fnstenv
dec
sbb
jb
adc
push
mov
xor
stc
mov
in
cmp
xchg
faddp
sub
sbb
sub
lods
cli
push
push
add
into
fcomps
std
test
and
pop
jbe
leave
inc
lock
dec
scas
and
ds
in
ljmp
or
ret
clc
sbb
lods
rolb
out
subl
ja
loope
fisubs
test
add
cmpb
ja
test
lea
mov
gs
push
ljmp
fdiv
lods
sub
add
xchg
mov
and
popl
pop
mov
rep
or
cltd
bound
fadds
push
cmpsb
mov
or
aam
mov
jae
sbb
clc
mov
jbe
aad
inc
xlat
lcall
shll
sbb
pop
ljmp
lcall
pop
mov
xor
add
xchg
dec
sbb
and
mov
cs
in
or
pop
enter
inc
lods
xorl
xchg
sub
dec
dec
cmc
lcall
cmpl
std
or
xchg
std
lahf
outsl
xchg
shrb
pop
mov
push
std
lods
repz
ljmp
inc
fwait
shlb
or
xchg
cmp
fildl
push
and
pop
add
lods
aad
adc
sar
loopne
add
lock
sub
insl
das
cmp
mov
push
dec
out
fistpll
sub
lods
xchg
and
pop
stos
or
and
or
sbb
loopne
dec
cs
lock
push
or
fwait
lods
xor
pop
stc
aas
jmp
xchg
xor
lret
stos
sub
repz
xor
fistps
mov
shll
rorl
sbb
ljmp
ret
aad
lret
inc
adc
mov
adc
enter
fisubrl
xchg
loope
xlat
aaa
pop
jge
mov
arpl
mov
cmp
mov
push
push
imul
push
shrb
mov
test
cltd
jmp
adcb
cwtl
cltd
sbb
and
dec
xchg
mov
xchg
mov
sbbl
lock
dec
stos
inc
pop
popa
sub
stc
jnp
stc
cltd
pop
mov
push
les
jae
pop
sarl
gs
mov
lahf
xchg
in
push
inc
jo
xor
mov
test
sbb
in
sub
out
into
push
divb
push
movsl
outsb
sbb
jecxz
or
pop
push
jo
out
pop
jge
loop
push
cmpsb
pop
xchg
ret
mov
in
sub
std
movsb
lods
loope
or
loop
loop
push
push
shr
fwait
rcl
sub
adc
fwait
cs
push
sub
add
roll
push
mov
sub
jne
out
aam
xor
and
mov
fistpl
iret
push
xor
push
in
sub
iret
daa
pop
lcall
insl
sub
fcoms
sbb
mov
fmuls
dec
xchg
and
lcall
fwait
rclb
dec
ljmp
jne
push
cmp
adc
xchg
nop
sbb
insl
mov
inc
repnz
fldl2e
repnz
mov
pop
sub
and
out
jae
negb
xor
orl
xlat
daa
ret
mov
jmp
push
rcll
aad
mov
nop
adc
inc
inc
cmpsl
jmp
add
push
cmp
sub
fwait
sub
rcrb
mov
insl
lea
xor
dec
gs
pop
push
mov
lahf
lods
and
insb
testl
jae
xchg
rcll
push
jnp
dec
xor
enter
inc
scas
cmp
mov
mov
cmp
jnp
push
push
sti
dec
dec
xchg
mov
mov
or
inc
push
imul
cmp
fdivs
fnstsw
outsl
mov
mov
xchg
or
jbe
xchg
andl
xchg
pop
adc
and
fildll
rcl
fsubs
add
pop
test
adc
ret
add
mov
out
decl
sub
lcall
jnp
in
mov
pop
fistpl
or
stc
das
sarl
jno
dec
mov
xchg
mov
or
mov
dec
btrl
sub
fs
leave
out
out
filds
xchg
insb
mov
add
imul
ficomps
cmp
sti
sbb
sub
push
inc
jb
or
mov
mov
xor
rcl
xchg
inc
popf
add
in
imul
and
imul
les
pop
mov
in
ds
xor
or
fwait
pushf
jb
inc
adc
adcl
mov
adc
mov
rcrb
jg
dec
cmp
mov
dec
insl
mov
sub
jmp
dec
mov
mov
sbb
leave
push
mov
in
jns
or
adc
lcall
and
fwait
mov
mov
and
adc
cld
pop
adc
pop
cmp
pop
xchg
jae
ds
mov
push
test
aad
arpl
addr16
xchg
fildll
push
ficoms
pop
jnp
dec
push
subl
popf
xor
fisubrs
xor
and
jnp
ss
xchg
rorl
add
pushf
mov
jnp
stos
jl
or
dec
cmp
push
imul
mov
sub
sahf
popa
es
mov
scas
clc
ds
scas
sbb
fsubrs
lea
jnp
movups
and
mov
jl
push
and
pop
mov
lods
cmp
test
rcll
test
cmp
jecxz
loop
jno
xor
dec
mov
mov
shll
in
xor
inc
pop
imul
inc
insl
fstps
mov
hlt
pusha
lods
adc
stos
cltd
push
jecxz
dec
and
das
aad
lret
bound
mov
add
xor
mov
jae
pop
imul
aam
rcrb
xchg
pop
and
movb
inc
adc
xor
xchg
rcrb
outsl
sbb
inc
xlat
jp
jb
inc
sbb
inc
and
fistpl
shll
call
movsb
lret
in
ds
lods
add
and
cld
sbb
lret
xchg
mov
xchg
jae
sbbb
fsts
mov
xchg
fsts
rolb
xchg
sarl
std
dec
imul
aaa
mov
mov
in
lds
add
jmp
jne
jae
mov
mov
dec
shr
mov
mov
addl
scas
xchg
sahf
push
mov
push
das
call
mov
pop
lea
ljmp
adc
or
enter
test
stos
dec
inc
mov
xchg
add
jbe
mov
sub
or
cmp
or
jno
push
sti
inc
mov
ss
and
ror
push
je
iret
and
add
adc
pop
clc
addl
mov
insb
ffree
push
pushf
xchg
inc
adc
pushf
das
mov
cmpsb
mov
sub
out
lcall
aam
xchg
aas
jnp
popa
cmp
popa
xchg
bnd
popf
fstl
divl
bound
push
mov
adc
lock
int3
push
fnstsw
cmp
xor
cld
cmp
loope
test
mov
xchg
ret
movsl
jo
cmp
adc
sub
out
int3
iret
adc
jmp
jl
sbb
mov
stc
out
test
int3
test
mov
fwait
xor
pop
xchg
out
in
sub
cmp
cmp
push
addr16
mov
or
insb
cmc
xchg
jbe
xor
sub
sbb
mov
divb
mov
mov
xchg
pop
pop
adc
pop
mov
jbe
and
jg
imul
xor
cmp
lods
dec
push
push
pop
sbb
test
sbb
and
adc
rcl
or
mov
inc
subb
pop
test
dec
pop
or
outsb
adc
mov
cmp
in
xchg
roll
mov
pop
mov
fwait
jmp
lock
lods
mov
mov
cwtl
outsb
loop
jae
mov
lods
das
pushf
scas
out
cmpsb
je
frstor
insb
pop
lds
out
or
pop
push
mov
xchg
cmc
or
jne
lock
je
icebp
int3
mov
sbb
pushf
cli
arpl
or
fstp
in
lret
push
mov
loopne
jnp
faddp
in
stos
pop
and
into
xor
in
mov
and
mov
aam
push
cmp
xor
xor
lret
jmp
and
inc
jmp
mov
xor
xorb
fistpll
out
out
je
les
test
subl
decl
bound
imul
popl
jge
lock
cmpsb
test
movsl
pop
mov
stos
outsb
fnstcw
mov
dec
aaa
jns
push
mov
stc
inc
fyl2x
adc
push
add
insb
pop
insl
fdivr
dec
lahf
mov
lahf
xchg
dec
cld
add
xor
pop
sahf
fimuls
fs
cmc
rclb
sbb
pop
fstpt
fcomi
dec
push
push
mov
inc
jecxz
js
scas
loopne
push
lods
clc
mov
or
add
push
subb
push
nop
fs
bound
movsl
lret
jl
mov
push
sub
lcall
scas
cmc
xor
mov
test
or
mov
sub
icebp
pop
je
pop
add
icebp
lods
adc
jg
mov
fidivs
inc
push
daa
dec
ja
mov
push
ret
mov
inc
jne
push
adc
cmp
and
test
xchg
mov
mov
xchg
cs
mov
enter
pusha
sbb
cmp
dec
add
inc
test
lods
lds
mov
jp
mov
dec
cmp
and
mov
adcb
lret
mov
test
es
mov
add
cmp
cmp
cmc
xor
scas
mov
inc
mov
mov
jnp
cs
pop
pop
scas
add
and
pop
mov
mov
andb
or
push
aad
addr16
inc
fdiv
es
aas
ds
mov
jns
outsb
inc
add
jecxz
push
push
pop
cld
ljmp
imul
call
mov
outsl
fsubrs
scas
xor
lods
sahf
ds
mov
movsl
call
daa
aam
or
shr
scas
jno
repnz
xchg
cmp
andl
cld
jle
sub
mov
push
dec
lods
adc
in
rcrb
jno
mov
jne
movsl
idivl
divb
das
loopne
jb
mov
sti
in
jbe
mov
cmp
outsl
pushf
push
aas
fs
adc
inc
mov
mov
jge
or
out
cmp
js
std
cli
mov
lret
mov
and
test
cmc
and
adc
dec
mov
shl
orl
in
push
pop
stc
mov
mov
popf
xchg
out
sub
xor
mov
inc
and
daa
sbb
add
fisubrl
add
or
repnz
add
xchg
mov
mov
int
cwtl
mov
rcll
aaa
je
jne
cld
sbb
ja
pop
lret
push
les
jmp
and
dec
push
cwtl
movsb
fadd
sub
mov
test
mov
setno
lcall
add
add
inc
sbb
dec
lea
push
imul
lods
shll
ja
stos
add
andl
mov
adc
test
jns
add
dec
pop
test
pop
addl
stc
cmp
roll
arpl
lock
js
sbb
jge
mov
test
aas
mov
inc
jbe
lret
outsl
push
mov
sub
dec
lret
fsubrs
fs
dec
push
sub
cmp
sub
or
pop
outsl
add
jecxz
fsubrl
and
lahf
add
hlt
movsb
test
les
loope
and
fwait
jl
xchg
jecxz
shll
adc
test
push
fsubs
cmp
xor
pop
mov
jo,pt
cmp
pop
lods
mov
pop
dec
clc
aaa
and
xchg
sbb
ds
sbb
lods
pop
xor
mov
out
daa
push
adc
mov
sub
jo
push
mov
or
lcall
mov
or
std
pop
adcl
mov
dec
inc
imul
daa
mov
sub
jno
or
ror
push
xchg
movsb
arpl
pop
or
xchg
cmp
jg
dec
dec
push
xchg
cld
cmp
je
das
fistl
cs
popf
mov
inc
inc
ret
sub
ljmp
fdivr
into
and
cmp
rcrl
or
cld
out
icebp
cmp
inc
dec
mov
mov
sub
addl
hlt
out
sub
pop
push
mov
cltd
or
push
lds
addr16
enter
xchg
daa
push
cmpsl
fadd
push
lret
pop
or
jns
or
movsb
imul
loope
and
cld
stos
outsl
inc
rorl
lds
or
fs
pop
inc
push
adc
gs
hlt
jns
bound
sbb
ja,pt
and
and
lahf
mov
ljmp
adc
sbb
xorb
pop
mov
jo
mov
add
push
and
mov
in
add
mov
imul
ds
bound
jle
lock
andl
lea
fscale
out
cmp
mov
adc
sub
adc
push
jmp
dec
lods
hlt
xor
scas
stos
mov
inc
aas
pop
dec
mov
lods
movsb
and
mull
adc
adc
inc
cmp
incb
shr
push
sub
cwtl
push
cltd
sbb
test
cmp
xchg
add
arpl
mov
adc
inc
fwait
in
repnz
movsl
bound
pop
xlat
push
popf
dec
mov
jae
mov
or
leave
pop
shll
adc
cmp
dec
push
lret
int3
int
fisubl
andl
sahf
lods
dec
hlt
push
pop
icebp
and
xchg
xchg
pushf
xchg
push
mov
inc
jns
adc
lea
outsl
mov
stos
jb
sbb
mov
aad
pop
pop
stos
orb
insl
je
or
shl
xchg
xchg
les
mov
fidivs
pop
mov
repz
mov
gs
xor
inc
push
sbb
mov
rolb
mov
shlb
fisubs
mov
inc
pop
sub
xchg
lods
push
mov
pop
xchg
lea
ffreep
mov
cmpsb
push
arpl
std
shll
mov
adc
push
ret
jo
icebp
lods
xchg
mov
imul
sub
pop
mov
and
jae
lret
out
fsubrl
xor
dec
jns
or
add
add
push
jns
bnd
je
negb
orb
xchg
add
sbb
mov
cmp
movsl
divb
ret
sbb
js
out
jmp
in
ss
ja
cwtl
push
mov
cmp
iret
xlat
loop
arpl
lret
add
jne
cmpsl
jp
or
hlt
aaa
adc
fs
xchg
mov
idivb
xchg
fisubrs
add
mov
fnstcw
mov
fs
enter
mov
out
fdivs
push
imul
ret
rclb
aad
jne
stos
pop
out
push
mov
pop
xchg
jne
mov
lods
inc
xchg
cli
fisttpl
pop
or
ss
sbb
jge
push
push
sub
push
fdivr
pop
pop
mov
mov
cmp
push
mov
sbb
and
repz
rolb
les
push
jb
xchg
mov
mov
jecxz
cwtl
fiadds
sub
insl
xor
loop
push
adc
loop
cmp
ss
cmp
repz
dec
adc
or
test
enter
lret
jmp
ss
inc
daa
in
std
adc
adc
mov
or
pop
lds
push
out
lret
inc
subb
cmp
dec
ficompl
pop
push
xchg
ljmp
jae
in
xchg
lea
sub
mov
cmpsl
mov
iret
inc
sbb
ret
sbb
sbb
sti
into
push
inc
call
pop
xor
push
add
popf
jle
xlat
cmp
and
inc
bound
sbb
sbb
or
push
cmp
mov
and
mov
iret
pop
inc
stc
es
aam
js
mov
add
add
jno
push
dec
mov
aad
sbb
push
mov
cmpl
ss
idivb
dec
les
and
icebp
fstps
mov
testb
mov
and
daa
in
mov
or
xor
mov
dec
sbb
fidivs
adcl
movsb
scas
fld
ja
rolb
std
into
mov
rcll
dec
mov
cltd
add
jbe
lock
pop
mov
xchg
mov
out
in
pop
out
dec
scas
xchg
rorl
xchg
jmp
push
inc
pushf
dec
jg
test
jge
test
jo
lret
roll
in
sbb
add
mov
aas
sub
adc
add
mov
popa
loopne
nop
dec
shlb
leave
mov
iret
nop
cmp
mov
mov
rclb
inc
aam
roll
jbe
xchg
sub
inc
push
insl
xlat
out
scas
pop
andl
cli
int3
or
pop
rcrl
adc
pop
sub
addb
and
xor
or
cmpsl
test
dec
or
cmp
fiaddl
sbb
ror
xor
cmp
cwtl
icebp
xchg
mov
lret
ss
sbb
hlt
push
iret
shll
je
pop
sub
andb
cmp
mov
push
testl
pop
mov
jo
adcb
les
mov
mov
test
pop
cmp
dec
not
in
repz
xchg
pop
or
or
insl
jg
jp
push
sti
mov
push
xchg
mov
imulb
pop
dec
push
test
orb
stos
and
subb
xor
gs
dec
or
test
in
add
or
jp
ret
xor
fs
lret
mov
enter
outsl
out
lds
mov
xchg
push
pop
push
push
enter
mov
dec
popf
clc
dec
mov
push
push
aam
stos
jae
inc
nop
mov
shlb
add
fwait
mov
push
jne
leave
inc
xor
shlb
and
ja
push
push
fistpll
cmp
jle
push
je
in
push
in
fimull
std
pop
push
mov
das
mov
bound
xchg
dec
hlt
pop
jge
lret
mov
mov
test
sarl
aad
push
mov
xchg
repz
push
dec
ret
std
adc
fadd
mov
xchg
push
js
loope
lods
mov
notl
xor
and
adcl
and
int
test
popf
movl
jecxz
lock
mov
jns
in
jne
shrl
sbb
lea
in
cmp
xchg
xlat
mov
clc
sub
lock
repnz
loopne
jb
sti
and
ret
stc
push
scas
jmp
mov
leave
mov
lahf
decl
pop
or
aam
and
pop
dec
pop
xchg
cli
dec
xor
test
ret
in
jp
and
mov
aas
popf
fwait
mov
popa
dec
mov
and
popf
testl
lods
gs
inc
push
fidivs
out
ss
test
pop
xor
idiv
jg
xchg
repz
in
mov
hlt
pusha
and
addr16
popf
jno
aad
in
daa
xor
xchg
adc
cmpsl
inc
add
add
lea
mov
inc
outsb
imul
dec
xchg
push
clc
or
and
rcll
nop
or
xchg
mov
add
filds
in
inc
lcall
mov
fistps
xor
mov
cltd
push
pop
int3
sahf
jb
add
inc
cltd
cwtl
jns
es
mov
scas
xor
lods
lret
rorl
in
mov
mov
cmpsb
push
push
pusha
inc
xchg
arpl
stc
adc
les
mov
fisubl
cs
mov
pushf
add
xchg
mov
sar
push
loop
sbb
xchg
and
cmp
push
add
sar
outsl
pusha
mov
nop
js
imul
sub
ffreep
flds
inc
pop
add
sub
sti
lret
fisubrs
test
cltd
push
pop
data16
nop
and
mov
mov
or
lods
mov
cmp
sahf
pusha
push
enter
lds
scas
sbb
mov
cld
lods
jg
aaa
cmc
aas
mov
cmp
sbbl
imul
inc
cwtl
xchg
je
in
jns
loop
repz
inc
mov
out
pop
movsl
fnsave
dec
xor
adc
push
jo
or
jp
movsb
clc
jmp
dec
push
dec
dec
dec
push
push
xchg
and
inc
sbb
imul
movsb
and
jnp
push
jecxz
mov
cs
jmp
out
mov
fsubp
jmp
aad
sahf
jmp
pop
loopne
rorl
inc
popl
lods
ds
mov
mov
mov
add
test
push
inc
pop
cmp
stos
push
int
jne
adc
push
mov
jnp
pop
cmc
sub
xchg
inc
fistps
dec
pop
lods
rcr
mov
imul
mov
andb
negb
mov
pop
hlt
fucomi
stc
and
dec
inc
repnz
mov
dec
or
jge
mov
inc
mov
test
mov
xor
dec
xor
and
hlt
or
mov
in
ss
popa
mov
xor
jecxz
mov
mov
sti
ret
andl
fnsave
aas
add
pushf
mov
fidivs
fwait
cmc
inc
movd
mov
in
aas
mov
idivl
movsl
aam
loopne
das
test
dec
mov
xor
repnz
lret
popf
fiadds
test
jecxz
adc
push
push
es
mov
push
movsl
aaa
xchg
inc
rorl
add
ss
xlat
int
mov
sbb
scas
or
in
and
inc
cwtl
jmp
jge
cmp
ficoms
dec
mov
in
fwait
popf
xor
ss
dec
or
outsb
pop
ljmp
mov
js
mov
add
or
mov
mov
sub
jae
hlt
movsl
cwtl
test
jp
je
shrb
xorb
sbb
sbb
addr16
push
jp
sarl
sbb
les
adc
push
push
movsl
gs
mov
hlt
das
test
imul
cmp
sahf
xor
adc
dec
add
ss
stc
call
add
mov
and
mov
inc
sti
mov
and
shl
js
cmp
and
mov
sub
rol
xchg
shl
fildl
ss
push
cmpsb
xor
sbb
shrl
int
cmc
jno
stos
loop
popf
aam
jecxz
sub
out
xor
pop
push
and
fmull
ret
outsl
mov
out
insl
xorl
mov
cmp
in
mov
fnsave
cli
lods
adcb
mov
aam
stos
femms
push
jmp
pop
rclb
or
mov
cmpsb
lret
adc
dec
cltd
cmp
loope
orb
push
or
stos
je
mov
in
dec
pushf
sbb
movsb
mov
imul
leave
lea
loop,pn
push
movsl
fwait
cld
orl
call
dec
out
push
ret
aas
sahf
fistpl
push
add
aaa
and
sbb
pop
and
mov
lret
inc
ja
jno
sti
jl
push
inc
cld
inc
insb
js
xor
cltd
and
push
push
aam
add
movsb
std
sub
repnz
cmp
pop
fmull
sbb
aam
fldcw
xchg
fwait
xchg
movsb
popa
cltd
aaa
jle
addr16
cmc
mov
in
push
adc
pop
inc
mov
js
add
js
hlt
add
and
lock
lret
bound
ja
cmc
dec
jl
sbbb
sbbl
clc
mov
pop
and
cmp
jae
pop
pop
rorb
shlb
xchg
fidivl
lods
mov
sub
ds
adcl
fnstenv
test
pop
mov
cmp
mov
pop
inc
sbb
xchg
cmp
and
cwtl
clc
jno
cli
in
fidivrs
inc
int
mov
inc
mov
xorb
push
mov
adc
mov
enter
call
out
es
xor
mov
jle
ret
sti
dec
sbb
fs
jg
out
out
fdivr
xchg
out
loope
adc
adc
inc
and
pop
and
sub
in
inc
jl
daa
mov
jp
icebp
adc
roll
mov
and
xlat
leave
jnp
and
into
ljmp
push
movsb
add
mov
xchg
ljmp
mov
mov
mov
rcll
sub
enter
out
xchg
leave
in
movsb
push
sbb
adc
fdivr
pop
jno
imul
movsl
push
add
cmc
xor
cmp
xchg
jp
xchg
fstpl
lods
jle
mov
jecxz
aaa
lds
adc
xor
cmc
inc
bound
mov
push
mov
pop
pop
andl
jge
bound
push
mov
rcrb
mov
push
jb
orl
pop
call
rol
sbb
add
pop
push
idivl
sbb
push
imul
mov
pop
movsl
test
mov
mov
sub
cmp
out
stc
pop
add
xchg
mov
call
mov
xor
cmp
push
daa
lcall
cmp
cmp
pop
inc
cli
arpl
xchg
aaa
mov
or
sbb
lret
mov
pushf
and
mov
clc
inc
jge
xchg
aad
inc
int
mov
lods
push
cmp
dec
shl
test
adc
sub
not
sbb
andl
mov
loop
cs
mov
pop
ficoml
or
ljmp
ja
mov
add
push
push
sub
push
sarb
outsb
mov
or
fscale
lret
gs
inc
xor
lea
jp
xor
cwtl
dec
mov
clc
lea
dec
cmp
cmp
sub
mov
mov
dec
mov
sbb
int
mov
or
out
cmp
testb
pop
xchg
xlat
cmp
cmp
and
xchg
mov
adc
cli
cs
adcb
or
or
aaa
lret
and
xchg
test
les
out
mov
ljmp
je
sub
sub
pop
push
sbb
repz
repnz
pop
mov
repz
mov
inc
cmp
inc
mov
or
mov
mov
jb
xor
push
popa
cmp
jecxz
sub
fimuls
pop
adc
orl
lret
jp
push
kmovb
cmpsl
push
push
pop
push
mov
push
test
lea
jle
cmp
add
frstor
push
jbe
adc
add
scas
mov
test
adc
push
sbb
sub
ljmp
cld
xor
je
test
pushf
mov
jl
cmpsb
ret
mov
sbbl
cltd
mov
fsts
xchg
mov
mov
xlat
ljmp
push
add
arpl
imul
je
loopne
mov
pop
pop
pop
sbb
je
movsb
jp
push
jmp
push
pop
test
inc
xchg
les
loope
cmp
push
repz
jg
dec
push
stos
sarb
leave
mov
sub
cmp
mov
ficoms
mov
mov
mov
sbb
faddl
ds
sub
pop
popa
and
in
movsl
adc
mov
adcl
push
stos
pop
mov
imul
in
popa
push
fdivrs
icebp
fs
xchg
add
push
and
mov
push
adc
lods
and
adc
mov
push
cmp
mov
mov
or
xchg
repnz
pop
test
das
dec
jae
sti
or
rcrb
xchg
lret
insl
jmp
pop
adc
push
mov
jmp
dec
leave
pop
sub
jmp
jmp
jle
inc
pop
add
and
cld
mov
or
loopne
mov
cld
sub
ja
lock
loope
or
mov
fsubs
sbb
inc
icebp
shr
push
outsl
pop
xchg
cli
loopne
add
sbb
in
in
mov
mov
subb
mov
stos
mov
in
cmp
lret
sub
lcall
mov
jbe
mov
popa
addl
out
outsl
lcall
jg
je
out
pop
sub
or
pop
jecxz
inc
mov
mov
loope
and
movsl
push
mov
cmp
xorl
pop
inc
outsb
ljmp
xor
jnp
dec
addr16
cld
xor
inc
xor
pop
sbb
mov
and
dec
add
xchg
in
call
pop
jmp
sar
jbe
mov
cwtl
das
mov
xor
inc
xchg
jge
outsl
in
adc
push
xchg
jns
jae
xor
xchg
test
out
repz
cmp
js
lds
int3
imul
cmp
jo
mov
mov
pusha
pop
lods
lock
in
add
int
fildll
sub
cmp
pop
lods
fnsave
fcoms
outsl
roll
mov
scas
fcoms
mov
loop
cmp
into
push
xlat
pop
mov
mov
or
sub
rol
insb
mov
pop
push
hlt
test
push
push
pop
imul
xchg
ja
std
xor
scas
andb
inc
cmpsl
jl
repz
mov
and
inc
sub
jnp
notb
mov
add
inc
cld
pop
cmp
xchg
pop
cmp
xor
aad
lea
mov
dec
jl
in
sub
xchg
mov
scas
rcrb
mov
lea
imul
push
cmc
pop
out
mov
add
pop
cmpsb
add
cmp
les
es
and
shll
pop
jge
mov
testl
lods
je
pop
sub
mov
sbb
or
insl
cs
jmp
test
lret
pop
pop
mov
fwait
xchg
adc
cs
loope
mov
adc
pushf
in
sub
jg
xor
mov
add
push
mov
bound
adc
push
enter
shrl
jecxz
mov
inc
push
popf
push
in
pop
pop
scas
je
inc
out
pop
subl
dec
xchg
cs
xor
enter
cs
pop
or
or
push
fiadds
sub
mov
dec
stos
mov
idivb
mov
lock
xor
jb
js
pushl
packsswb
push
loop
jl
cli
aam
pop
dec
xchg
test
sbb
cmp
stos
iret
xchg
and
mov
xchg
fwait
dec
xor
adc
xchg
into
repz
or
or
mov
cmp
aad
add
lods
push
out
jecxz
stc
sbb
mov
sarb
dec
add
cmp
push
push
mov
mov
imul
or
js
sbb
shlb
push
ds
sahf
jnp
lock
pop
js
out
inc
hlt
loop
rcrl
dec
out
pop
push
sbb
call
inc
jmp
call
jno
out
aas
xor
lods
and
insb
fwait
jmp
cli
xlat
cli
push
ret
decb
sub
sbb
adc
xchg
xchg
idiv
mov
scas
addl
pushf
js
shlb
or
in
dec
pop
inc
hlt
gs
or
and
push
xor
imul
cmp
dec
xchg
ja
sub
add
sub
mov
add
out
pop
repz
mov
add
aad
inc
pop
lahf
test
aas
xor
xchg
enter
int3
adc
add
sub
je
cmp
lahf
in
in
and
aam
mov
int
and
jbe
and
fwait
std
mov
repz
lret
push
test
and
insl
mov
mov
xor
cld
mov
mov
or
out
xlat
sbb
mov
cmp
imul
icebp
sbb
sub
add
lahf
lret
sahf
add
push
add
daa
push
das
inc
int3
mov
mov
jns
mov
sub
xchg
sbb
sbb
pusha
jp,pt
dec
out
pop
mov
andb
sbb
push
imul
jb
adc
adc
and
inc
inc
push
dec
movsb
imul
shlb
fnstenv
jge
xor
repnz
or
xor
pop
xchg
push
pop
mov
or
fisubrl
repz
bound
sbbb
inc
fsubrs
les
or
das
pop
js
mov
and
inc
arpl
cmp
repnz
inc
mov
es
sbb
inc
fcmovnb
adc
std
lods
loopne
add
rcrl
sti
imul
adc
stos
jbe
movsl
subb
stos
or
mov
xor
out
into
rorl
xorl
adc
sub
xchg
stc
dec
jp
push
push
outsb
repnz
xor
sub
adc
stos
flds
add
cmpsb
stos
insl
pop
out
or
sub
jle
ljmp
popf
cmp
sbb
ljmp
sub
dec
clc
lcall
adc
clc
mov
add
sahf
xchg
mov
sbb
cmp
xchg
rorb
imul
xlat
push
fiadds
fimull
or
mov
jle
mov
dec
fwait
aas
ficoml
faddp
add
aaa
aad
cltd
push
fwait
out
into
fdivrl
jno
sub
xor
je
test
sbb
mov
and
jnp
jne
fwait
pop
push
pop
sub
nop
mov
jne
pop
or
call
push
sbbb
mov
das
push
mov
push
fnstsw
or
cwtl
or
xor
mov
scas
cmp
aaa
xchg
push
ficoms
add
push
ficoms
scas
cmc
xorl
jge
pop
sub
ljmp
mov
lods
aam
cwtl
ds
mov
xor
mov
ret
sbb
int3
movsl
pop
mov
push
jmp
mov
mov
sbb
or
add
xchg
jnp
jns
cmp
adc
mov
lods
jnp
inc
xchg
xchg
mov
sahf
call
cmc
mov
outsl
iret
into
inc
xchg
orl
xlat
sbb
ss
leave
cmp
aad
push
xchg
inc
jmp
cmp
xchg
pop
pop
in
out
mov
call
pop
and
int3
notb
leave
jg
and
pop
xor
mov
xlat
sbb
je
mov
in
jle
gs
mov
out
sub
imul
pop
adc
rcll
sbb
lods
andl
fisttps
int
imul
and
add
lods
add
cmp
or
ficoml
cmp
inc
xor
lcall
and
push
insb
dec
int
sub
gs
mov
cmc
xor
dec
sub
cmp
cs
aas
aas
les
loopne
ret
push
fwait
test
test
aaa
hlt
ret
xor
add
xchg
push
fcompl
or
movl
add
shlb
mov
sub
xchg
dec
and
negl
cwtl
es
and
cmpsb
and
lret
mov
out
out
add
popa
sbb
or
out
push
push
pop
cmp
fs
iret
or
inc
lcall
mov
push
inc
xor
mov
xchg
adcl
and
outsb
call
loope
pop
movsb
xor
xlat
sti
stc
push
mov
lods
push
into
enter
dec
jge
xor
and
pop
mov
pop
cltd
sbb
dec
inc
mov
mov
cwtl
mov
dec
xor
and
jb
push
jmp
mov
xchg
or
mov
pushl
movsl
or
sbb
jl
jno
xchg
inc
into
les
faddl
bound
insl
sarb
lock
xor
add
push
pop
stos
icebp
adc
xchg
leave
cmp
inc
mov
and
cs
test
dec
jb
into
jle
ret
std
sti
fldcw
or
in
mov
lods
sti
sti
dec
sbb
cli
mov
xlat
faddp
les
add
push
jo
cmp
int
fwait
loope
repz
enter
rcrb
cmpsb
pop
xor
jp
push
aas
test
jbe
push
jg
andl
adc
orb
inc
cmp
mov
pop
or
test
insl
xchg
xlat
sbb
popf
loop
inc
fbld
sub
xchg
push
xchg
xchg
cwtl
xor
pop
sub
cltd
mov
jg
ds
addl
pop
std
std
lahf
push
push
adcb
jecxz
sti
pop
push
or
mov
popf
in
mov
mov
cmp
js
push
fadds
pushf
test
test
sarb
leave
fnstcw
or
enter
and
pop
xchg
gs
push
sarb
test
push
jg
aaa
lods
movl
mov
add
push
mov
mov
xchg
jno
cld
repz
leave
jmp
pop
loop
icebp
pop
adcb
ja
dec
xchg
es
lock
stc
in
das
ret
js
add
addr16
fsub
mov
lcall
pushf
loop
movsb
jne
lods
ss
dec
or
ds
outsl
dec
popa
imul
cli
lock
jecxz
inc
into
hlt
pushl
pushf
xchg
push
jne
into
inc
or
jae
icebp
into
scas
dec
jb
int3
pop
push
iret
xchg
aas
iret
push
call
push
pusha
cmpsb
mov
cmpsl
mov
dec
mov
or
push
and
shll
loopne
std
mull
pop
jle
fwait
lret
popa
push
lahf
adc
imul
sub
call
sub
mov
push
xor
repnz
pop
call
inc
add
rorl
cmp
pop
push
xor
add
inc
or
out
in
mov
popf
xchg
dec
test
das
push
sarb
fstps
push
mov
test
and
mov
add
xor
cltd
outsl
mov
jle
into
dec
movsb
pop
mov
add
nop
adc
dec
in
mov
xor
mov
scas
push
mov
push
data16
jne
inc
mov
push
xchg
testl
mov
cmp
test
lret
xlat
repnz
inc
xchg
dec
gs
pop
cld
scas
adc
and
pop
sbb
and
sti
cmp
mov
mov
enter
pop
push
add
add
lock
pop
dec
or
fwait
stos
dec
rcll
pop
scas
gs
dec
mov
inc
in
fwait
mov
outsb
adc
dec
cwtl
dec
ljmp
cld
int3
lahf
mov
movsb
arpl
jg
sahf
sbb
push
cmpsl
sbb
iret
lock
xor
mov
adc
cmc
lock
push
js
aam
push
std
dec
fmull
add
arpl
sbb
lods
stos
incl
fidivl
lret
js
rorl
movsl
test
mov
xchg
xor
sub
sbb
inc
js
aaa
out
data16
fdivl
imul
scas
inc
push
icebp
cld
push
or
xor
fisubrs
leave
mov
frstor
mov
cmp
ljmp
lods
xchg
rol
arpl
test
ljmp
mov
aam
dec
std
xchg
mov
loopne
mov
lcall
push
call
adc
xor
xlat
es
insb
or
or
cli
push
pop
lods
out
and
cs
aad
or
mov
inc
xlat
test
fcoms
cli
out
rorb
xor
cld
cs
sbb
jmp
insb
ret
mov
ficompl
lret
pop
mov
ja
cld
pop
cmp
nop
in
sti
push
lock
adc
push
in
cmpsl
xchg
shlb
add
call
or
rolb
ss
pushl
lods
jp
aam
jbe
fisubl
dec
mov
lcall
popl
stos
movups
and
outsl
mov
loope
mov
mov
insl
sub
iret
sub
daa
fildll
iret
ja
adc
in
sbb
enter
popf
jns
xchg
mov
xlat
add
xchg
add
fldt
test
stc
mov
or
in
dec
imul
sbb
dec
xor
adc
in
ja
sbb
popa
sub
aas
ds
lret
pop
push
cmpl
sahf
adcb
jno
leave
mov
sbb
pop
mov
or
jecxz
mov
test
or
repnz
fs
leave
not
lds
mov
or
jg
pop
cs
fistpl
pusha
ret
cmpb
push
fsin
js
cwtl
inc
mov
sub
jnp
push
in
repnz
dec
sbb
in
aam
jae
nop
add
dec
pop
cs
dec
add
pop
repnz
mov
mov
in
jns
js
pop
lret
shll
push
in
out
ljmp
jae
data16
xchg
push
lds
mov
push
arpl
lea
movsl
adcl
lods
xor
jno
jmp
or
aam
pop
xchg
loop
lods
pop
ljmp
out
rcl
arpl
pop
push
loop
xor
data16
mov
mov
xchg
mov
xlat
adc
in
push
mov
repz
fxch
out
inc
mov
cmp
sbb
mov
iret
ficompl
mov
rcll
sahf
lds
lcall
nop
jecxz
iret
pushf
xchg
inc
cmp
push
sbb
cmp
mov
sbb
adc
cs
scas
and
push
test
nop
xlat
scas
fcmovnb
adc
rcrl
sbb
loopne
pop
aas
sahf
push
push
rcl
inc
jp
xchg
nop
pushf
je,pn
std
xchg
cs
jno
movsb
in
lret
and
les
jnp
push
out
in
mov
dec
mov
popa
push
add
cmp
aam
out
mov
mov
xchg
push
imul
and
and
dec
jge
dec
movsl
adc
aaa
pop
rcr
push
cli
inc
mov
dec
lock
insb
clc
lea
pop
cmp
cmp
mov
pushf
pusha
xchg
stos
pop
jae
cmp
push
dec
dec
aad
popa
sub
sbb
in
mov
mov
mov
xor
in
push
add
stos
lret
jnp
inc
pushf
movsl
test
andb
call
lods
mov
lods
mov
and
scas
push
jp
pop
push
pop
popa
lahf
stc
adc
rcl
test
jo
aas
int3
ret
movsl
push
and
mov
add
cmp
gs
gs
add
in
and
cwtl
jmp
dec
movsl
pop
bound
xchg
jecxz
mov
xchg
in
dec
lea
sub
ljmp
mov
pmulhuw
into
xchg
inc
loop
jecxz
into
mov
pop
gs
jle
and
pop
cmp
inc
pop
push
xor
and
in
dec
data16
lahf
or
nop
ss
mov
out
lret
test
or
pop
rcrb
and
clc
xor
cmp
test
adcl
sub
dec
adc
test
outsl
sbb
xor
adc
sub
test
outsl
push
sbb
repz
scas
lcall
mov
pop
or
xor
push
lock
add
jmp
shl
sbb
arpl
fstpl
lret
xor
dec
push
sbb
mov
enter
sub
daa
popf
stos
shlb
jmp
mov
int
ret
mov
sbb
sti
inc
add
ret
stos
outsl
pop
ds
test
fbld
mov
inc
and
push
loop
inc
std
je
xor
ljmp
adc
and
lods
sub
filds
sub
sub
push
fs
pop
mov
pop
push
xor
jae
inc
movsl
pop
cmp
add
aam
cmpsl
mov
push
aam
je
fdivrs
movsl
pop
cld
fsqrt
or
add
call
jmp
ret
xchg
rcrb
out
xor
cmp
movsl
pop
stos
cmp
in
les
push
lock
jb
lock
fmull
adc
aas
out
cld
stos
xor
int3
insl
sub
jg
rep
leave
sbb
jae
jl
pop
cli
jnp
js
mov
loope
cs
repnz
bound
popa
jnp
mov
mov
int
push
outsb
mov
or
sar
jb
stos
lahf
mov
xor
sub
lock
pushf
lahf
mov
cmpl
movsl
jp
inc
mov
pop
cwtl
push
add
xchg
mov
mov
mov
push
pushf
in
sti
and
in
mov
fidivrs
push
mov
mov
add
jge
mov
jmp
clc
int
pop
xor
loopne
rolb
and
mov
std
scas
bound
sbb
in
dec
into
ret
or
jno
repnz
fcomp
int3
jp
adc
sbb
mov
dec
ljmp
popf
pop
insb
scas
addr16
or
adc
shll
dec
dec
sbb
mov
and
les
jno
add
je
repnz
addb
push
push
mov
and
out
fistps
jae
in
jbe
imul
es
mov
mov
test
insb
or
in
push
in
int3
pop
dec
push
fcmovu
or
mov
and
in
in
dec
xchg
fdivr
loop
clc
adcb
int3
je
adc
and
cwtl
test
xchg
cmp
inc
mov
sub
scas
pop
adc
push
imul
iret
ds
imul
pop
inc
iret
cli
call
ret
pusha
stos
push
cmp
inc
fdivs
mov
push
inc
insb
fisubl
enter
or
fucom
pop
jp
sub
ljmp
xchg
adc
int
mov
push
rclb
jle
cmp
imul
fistl
dec
shr
ja
push
faddl
xchg
ror
xchg
mov
sbb
or
fbld
scas
sti
mov
cmp
pop
inc
cmp
fcoml
inc
sti
sbb
test
imul
mov
lret
jle
lea
int
inc
sbb
inc
xchg
sub
scas
fsub
fwait
pop
jb
test
test
jl
fstpl
adc
sbb
sub
fwait
dec
leave
push
sbb
jno
jno
sub
cmpb
out
and
xor
inc
mov
sbb
fnstenv
cltd
je
mov
cmp
pop
lods
and
iret
mov
aaa
cmp
jmp
out
jbe
xor
dec
jge
mov
jo
adc
adc
or
test
cmp
sbb
in
push
xor
xchg
pop
mov
jmp
lods
adc
and
fldcw
pop
xchg
sbb
cwtl
xor
adc
ds
ljmp
out
sbb
mov
call
inc
pop
icebp
icebp
push
outsl
ja
nop
add
mov
sbb
notb
loopne
dec
xchg
call
nop
inc
push
mov
movsb
mov
pop
js
xchg
dec
cli
lods
cmp
mov
imul
cmp
stos
or
addr16
ret
arpl
in
out
aad
scas
sbb
push
sub
and
ret
fs
pop
int
cmp
iret
and
out
movsl
adc
or
fidivrs
cmp
les
clc
push
cmpsb
testb
mov
in
sub
pop
stos
dec
push
ret
cli
call
insl
aas
cs
rolb
or
sbb
movsb
jbe
adc
jbe
fsubl
pop
fnstcw
cmp
js
scas
and
adc
cmp
sarl
dec
push
inc
mov
cld
pop
sub
das
addr16
addb
inc
lods
clc
fs
mov
adc
mov
repnz
inc
mov
mov
mov
jmp
movsl
sub
shlb
jns
mov
daa
or
mov
shll
cs
adc
adc
xchg
sbb
fisttpl
lahf
jp
js
and
test
addr16
pop
or
shll
inc
in
adc
in
jns
mov
enter
inc
cmp
adc
sbb
sbb
out
iret
cmovg
pop
sub
xchg
out
in
pusha
cwtl
inc
sub
rcrl
leave
fidivrl
ljmp
jne
sarl
mov
outsb
inc
out
or
mov
push
in
add
xor
mov
sbb
adc
xchg
clc
cmp
std
dec
mov
and
lcall
mov
fs
fisttpl
push
stos
dec
decl
mov
insl
mov
and
dec
and
push
dec
mov
xchg
xchg
adc
xlat
in
sub
fistpll
mov
cmp
add
mov
xchg
inc
stc
push
ficoms
movb
fsubp
mov
ds
sahf
lret
or
in
popf
arpl
cmp
jmp
push
nop
ss
pop
push
xchg
outsl
sbb
pop
loop
out
pop
test
popa
decb
mov
sub
ljmp
add
lods
scas
adc
fwait
pop
mov
pop
or
pop
outsb
aas
sub
xorl
xchg
ficompl
dec
das
cmp
mov
lret
mov
stos
xor
cld
sbb
adc
dec
pusha
cmp
or
jbe
je
jne
mov
pop
xchg
inc
inc
push
enter
add
mov
jge
fildll
orb
call
sbb
mov
jbe
push
popf
jbe
xchg
mov
jge
jae
out
add
mov
cli
dec
xlat
mov
out
sti
mov
mov
push
pop
inc
add
push
das
pusha
and
je,pn
and
scas
aad
ret
dec
fisubs
negb
frstor
sbbl
imul
cmp
dec
or
cltd
cmpsb
imul
popf
mov
sbb
xchg
mov
ror
dec
push
push
fldenv
and
sbb
jle
jecxz
addr16
push
dec
inc
inc
xchg
stos
or
testl
cmp
xchg
or
xchg
jb
scas
sbb
in
stos
sarl
filds
test
mov
mov
aaa
adc
std
sub
sub
test
dec
lods
stc
adc
mov
lahf
cltd
push
push
mov
inc
add
and
push
adc
adc
icebp
mov
mov
loop
push
mov
out
pop
cmc
rcrl
pop
or
insb
inc
in
xchg
iret
mov
pop
mov
loope
cmp
jo
jge
fs
sti
lods
int3
icebp
cmp
add
ret
imul
aaa
or
mov
lret
xor
imul
notl
mov
inc
jne
movsb
imul
sub
add
push
out
imull
jns
lds
jbe
stos
cmpl
jns
cmpsb
aad
lahf
imul
test
add
int3
mov
xchg
push
lds
stc
jbe
push
push
sub
scas
inc
pop
xchg
and
add
mov
shll
pop
mov
and
mov
push
inc
lret
and
sti
inc
dec
or
lea
add
adc
add
filds
xchg
sub
movsl
mov
out
mov
je
ljmp
mov
rcrl
les
shrb
subl
adc
mov
mov
push
sub
sub
pop
sahf
push
rcrb
pop
inc
xchg
inc
pop
cmpsl
repz
jb
cmp
test
jbe
pop
cmp
sbb
testl
adc
xor
jge
dec
pop
lret
mov
in
sbb
loope
pop
sbb
jb
arpl
sbb
mov
inc
xchg
fwait
inc
jmp
cmc
cmp
in
loope
ja
jge
aam
jge
adc
jge
clc
push
xchg
jae
push
xchg
ret
pop
jbe
enter
loopne
cld
cld
push
lcall
ja
stos
pop
subl
shlb
je
or
sbb
mov
sahf
and
sbb
push
sub
xor
jmp
sub
xchg
das
lret
push
add
cmp
inc
jl
mov
inc
out
fldl
rcrb
fidivl
mov
sub
mov
mov
lret
mov
jge
mov
xchg
push
jne
jo
cltd
xchg
clc
and
jnp
ret
ja
cmpsb
inc
inc
add
mov
mov
fnstsw
push
and
pop
push
mov
xor
or
mov
xor
pop
test
std
mov
orb
sub
push
push
hlt
cwtl
dec
mov
mov
cmp
xchg
into
fdivp
mov
adc
cwtl
imul
pushf
decb
ds
bound
sub
or
ss
outsl
inc
shrb
adc
in
mov
adc
mov
push
xor
lods
outsb
mov
lcall
push
pop
test
test
xchg
sub
dec
iret
add
push
ja
add
sub
dec
cmp
xor
push
or
or
ja
adc
xchg
pop
pop
mov
mov
stc
mov
sub
xchg
xor
jo
fmuls
xchg
aad
mov
ljmp
lock
repnz
fldcw
pop
insb
pop
test
adcb
jno
sbbl
and
imul
clc
pop
sbb
loop
rclb
cs
lods
xchg
xor
test
jle
in
insl
and
push
jae
inc
mov
push
scas
inc
lea
add
add
arpl
adc
push
sahf
fmull
cmc
nop
addr16
lock
mov
into
ficomps
xor
test
mov
pop
add
adc
iret
cmpsb
faddl
xor
sbb
ficompl
orb
cmpb
push
mov
fsubr
sbb
cmpsl
adc
lock
jp
lahf
mov
out
mov
ds
fdivl
stos
mov
cmp
inc
inc
lcall
push
pop
dec
xchg
pusha
push
shrl
sbb
hlt
sbb
jb
push
pop
scas
adc
jge
sti
jl
imul
mov
test
pop
pop
mov
ljmp
ds
out
push
mov
das
mov
in
cmpl
out
adc
dec
xchg
shlb
leave
cmp
sbb
pop
fstpl
inc
ljmp
adc
inc
cmp
adc
add
push
xlat
gs
ret
push
shlb
sbb
mov
cmp
mov
add
negl
cmp
movb
mov
and
push
gs
or
push
adc
insb
loope
adc
dec
sbb
pop
cmp
test
in
xlat
sbb
inc
rclb
in
mov
shrb
sub
inc
mov
inc
mov
arpl
pop
in
stos
cwtl
jl
in
stos
inc
xor
sbb
cmp
lods
push
daa
adc
dec
testb
xor
leave
dec
dec
sbb
mov
mov
push
xchg
ss
arpl
sub
mov
xchg
pop
mov
cmp
xor
clc
mov
ss
pushf
lahf
test
xchg
push
cmp
std
xchg
imul
fldt
xchg
in
adc
cmc
sub
sti
inc
dec
aas
data16
mov
and
dec
fnsave
test
cwtl
add
dec
pop
insl
inc
or
enter
inc
fwait
out
push
pop
scas
mov
out
or
adc
cwtl
iret
xor
pop
mov
push
int
adc
adc
mov
movsb
pop
incb
out
dec
fdivrl
sahf
repz
leave
repz
inc
loopne
mov
rol
push
outsb
push
push
ja
rcl
pop
and
bnd
jb
hlt
pusha
stos
mov
inc
cmp
jo
aam
xchg
inc
aad
out
ret
jno
push
aas
cmpsb
jecxz
jmp
mov
sahf
xchg
lcall
aas
incl
sbb
ja
cmp
mov
cmpsb
cmpsl
push
pop
fwait
scas
test
fwait
or
dec
imul
andb
xchg
sbb
imul
mov
xor
pushf
shrb
stos
leave
sahf
mov
adc
cwtl
mov
cmp
fdivrs
mov
sbb
xchg
sbb
mov
in
bound
mov
pop
jge
adc
gs
and
rolb
test
pop
test
scas
nop
xor
jno
clc
mov
stos
and
pop
mov
push
dec
test
mov
dec
lret
test
mov
pop
fldenv
pmaddwd
adcb
push
dec
adc
inc
inc
cmpsb
mov
pop
lock
aad
nop
pop
mov
bound
dec
popf
and
or
xor
and
or
adc
push
xor
xchg
jecxz
push
ds
idiv
jmp
xchg
frstor
adc
and
testl
test
sbb
in
pushf
cmp
mov
add
or
loop
sub
adcl
cld
or
std
daa
pushf
xchg
push
jnp
inc
shrl
shlb
out
gs
stos
fwait
popa
xchg
jbe
nop
int3
dec
aad
jne
push
sti
lcall
dec
or
xchg
pop
rcrb
ror
pop
push
nop
loop
jge
dec
add
es
hlt
popa
scas
and
push
gs
jmp
mov
cs
out
and
arpl
outsl
cli
cmp
insb
xchg
and
and
adc
ja
adc
mov
adc
sbb
xchg
cmp
hlt
jmp
lods
inc
idivl
xchg
adc
scas
lock
jp
in
push
mov
jmp
add
addr16
dec
xchg
push
dec
sbb
mov
out
mov
test
add
popf
les
mov
sbb
mov
mov
cmp
add
xchg
xchg
pop
iret
in
mov
out
imul
and
negb
dec
shlb
xchg
mov
push
cli
filds
fistps
mov
mov
sub
bnd
lcall
add
mov
aaa
dec
pop
stc
xchg
jbe
and
into
punpckhwd
in
xchg
add
loopne
lret
adc
push
mov
mov
mov
cmp
movsl
lea
test
jb
jge
in
pushf
cltd
fcmove
mov
test
mov
push
adc
inc
mov
jae
xchg
leave
sub
inc
sub
xor
lods
pop
jp
dec
test
sbb
xor
ss
jo
jno
in
arpl
sbb
out
addb
xor
jge
mov
mov
nop
sub
add
mov
xorb
test
or
xchg
lret
sbb
rcrl
push
mov
fists
lea
enter
je
cmp
push
inc
outsb
dec
jg
mov
call
fptan
cmp
pop
std
jecxz
or
mov
out
aas
mov
cld
mov
mov
and
loope
orb
leave
daa
out
es
rcrb
mov
xchg
cmp
push
les
dec
js
adc
fs
clc
sahf
dec
addl
sarb
lcall
and
ret
stos
add
out
jge
imul
xor
dec
xchg
out
popa
xchg
and
movsb
daa
or
xlat
fldcw
in
daa
lds
pop
dec
xchg
je
or
rorb
jae
stos
pushf
lret
push
sti
xor
data16
xchg
dec
jno
enter
fcompl
std
cltd
pop
fdiv
in
stos
inc
add
sbb
xchg
ss
push
aaa
xor
push
outsl
rorl
std
fadd
ds
adc
pop
in
or
call
mov
fstpl
xchg
xor
mov
in
mov
mov
ret
stos
or
pop
aam
mov
cld
mov
mov
daa
leave
lods
and
mov
mov
cmpsl
lds
mov
add
cmp
mov
xlat
or
int3
jl
push
scas
lret
dec
repnz
inc
call
shll
mov
xchg
pusha
fisttps
cmp
popa
sub
mov
push
xor
cmp
cmp
jmp
shlb
sub
adc
imul
leave
push
push
and
or
aad
mov
nop
imul
scas
mov
leave
cli
pop
xor
fdivrs
ljmp
cltd
add
fsub
jmp
dec
mov
inc
jae
or
out
dec
cmpb
add
jbe,pt
add
aas
out
int3
pop
add
and
pop
push
push
mov
std
mov
sub
aaa
les
aam
jmp
clc
mov
sbb
mov
rcll
incl
xor
sub
fsubs
pop
xchg
test
xor
mov
gs
lret
cmpsl
xchg
divb
push
imul
push
mov
insl
popf
in
mov
inc
lods
xor
push
jle
cmp
je
rcrb
xchg
cwtl
xchg
clc
sbb
mov
pxor
push
cld
adc
stos
aad
mov
outsb
add
out
xor
inc
and
mov
in
xchg
cwtl
xchg
mov
jmp
jp
les
scas
das
mov
mov
in
leave
pop
in
mov
icebp
into
sub
sub
push
stos
repnz
xor
hlt
push
or
sbb
pop
scas
and
pop
inc
sbbl
and
push
mov
sbb
int
xor
rcll
cmp
lahf
xchg
xor
test
jmp
pushaw
lcall
mov
sub
xor
xorb
ss
cltd
movsb
scas
mov
ret
and
mov
push
mov
fisubrl
sbb
cld
out
jecxz
leave
fsubr
sbb
and
dec
les
pushf
rorb
adc
bound
rep
bound
sub
sahf
pop
and
mov
mov
add
ja
into
inc
clc
cmpsl
repz
in
adc
scas
jb
jmp
or
or
out
sub
jge
arpl
xchg
push
into
out
out
mov
xchg
clc
dec
mov
push
xchg
sbb
jbe
mov
sti
inc
clc
fadd
nop
idivb
repz
pop
sbb
clc
fisttps
mov
jmp
loope
cmpl
aas
xor
ljmp
in
xor
adc
paddusw
out
lods
imul
cmpsl
mov
lret
push
inc
aam
jge,pt
das
std
ficompl
fadd
out
test
daa
jo
testb
ret
sub
lds
sbb
les
push
inc
sub
fcmove
jb
and
aam
std
mov
in
jns
addr16
cs
testb
inc
out
xchg
pop
cld
mov
mov
in
pop
dec
lods
insb
outsb
hlt
imul
dec
push
jmp
dec
xchg
push
or
xor
fwait
jle
iret
scas
cld
jnp
jns
cmpsl
adc
sbb
adc
stos
in
leave
jo
fistpl
cmp
sub
icebp
pop
lods
dec
aam
aad
pop
mov
repnz
cmp
pop
pop
ds
sub
dec
sbb
push
jl
std
jmp
dec
fwait
xchg
adcl
ss
mov
insb
aas
cmpsb
add
inc
mov
test
stos
mov
jne
jne
mov
pop
mov
iret
sbb
hlt
outsl
mov
pop
in
mov
mov
test
out
xchg
bound
aad
stos
ja
mov
jl
push
in
popa
nop
dec
test
inc
cld
cmp
jae
or
cmpsl
add
xchg
rcll
and
mov
mov
add
xor
lods
or
out
je
ret
mov
xor
lret
add
xor
dec
into
call
pop
mov
loope
test
lods
jp
in
arpl
xor
mov
test
cmp
sub
test
std
mov
negl
dec
and
stos
fmuls
popa
or
shlb
pop
cmpsl
iret
mov
jae
insb
mov
sti
pop
and
inc
cmpsb
pop
or
jecxz
shr
mov
or
cwtl
push
mov
sahf
xor
or
push
cld
fidivrs
loopne
sar
ds
rol
cs
aam
gs
add
in
fbld
fldcw
or
adc
sbb
cmp
std
mov
cld
jle
push
ja
nop
sub
sub
mov
mov
cmp
mov
lds
je
mov
jno
cwtl
add
sar
fisttpl
jmp
cli
ss
xor
dec
sbb
fldenv
inc
mov
push
popa
jmp
out
stc
pop
fildll
adc
sub
lods
insl
shlb
stos
push
jmp
aam
xchg
mov
pop
das
into
jecxz
mov
push
push
jno
pop
cwtl
jg
mov
add
cmpsl
xchg
cmp
jmp
rorl
insb
fsubrl
ret
fwait
xor
or
xchg
stc
jae
push
add
lcall
mov
insb
leave
lcall
jg
inc
cmp
push
jmp
mov
and
sarb
and
jmp
push
mov
in
adc
in
mov
call
les
mov
movsl
add
and
xchg
popa
cmp
mov
mov
nop
outsb
pop
ret
insl
add
scas
dec
aam
push
mov
cmc
xor
jbe
shlb
insb
sbb
outsl
xchg
fisubrs
pop
orb
jmp
inc
xchg
lods
push
lret
push
xchg
mov
xchg
cmp
cmpsl
popa
into
mov
fwait
out
iret
sbb
into
xchg
or
hlt
cld
push
inc
loopne
pop
xchg
je
sub
outsl
pop
cmp
push
jmp
adc
or
in
lahf
negb
pop
ds
push
loopne
push
pushaw
sbb
fdivrp
dec
push
xor
jecxz
jb
in
lock
lods
or
sub
push
xor
into
rol
xchg
shll
and
dec
fs
or
xchg
sbb
add
test
ret
jecxz
leave
int
push
inc
xchg
cmpsl
mov
and
mov
sti
lret
dec
pop
xchg
xchg
cmp
inc
scas
lods
js
je
ja
xchg
lea
and
inc
les
decl
hlt
dec
fiadds
jbe
test
push
cs
iret
dec
jne
insl
test
jl
in
dec
jno
cmp
add
xchg
loope
push
mov
inc
inc
aaa
jb
push
inc
mov
jnp
mov
and
xchg
test
ljmp
mov
lret
aas
lahf
cmp
iret
call
and
sbb
jle
jl
pop
out
outsb
nop
ret
dec
mov
and
xor
xor
hlt
mov
das
push
push
pop
xor
push
jb
test
mov
in
dec
jg
negl
xchg
dec
pop
xchg
jmp
pusha
jecxz
xor
ret
popf
les
jmp
xchg
mov
mov
enter
cli
in
dec
daa
loopne
push
ret
dec
adc
xchg
lods
and
scas
pslld
xchg
sub
repz
mov
in
add
mov
sub
cld
xor
mov
movsb
mov
mov
ficoms
hlt
push
and
aad
insl
sub
sbb
lods
mov
data16
pop
xlat
and
in
xchg
out
cmp
out
nop
aam
cmpsl
or
jo
cmp
fcoml
dec
cli
in
stos
mov
mov
aad
mov
sub
pop
xor
and
loope
mov
sub
sahf
in
push
sbb
inc
push
ret
imul
test
sbb
loope
jne
int
add
jns
mov
mov
into
add
repnz
mov
and
mov
jle
test
aam
sbb
xor
incl
inc
jle
mov
pop
fildl
aas
popa
aaa
xor
pop
sbb
adc
dec
pop
mov
arpl
sub
sahf
iret
mov
pop
js
hlt
imul
adc
out
idiv
test
call
rorl
xchg
popf
mov
pushf
pop
cli
push
repz
in
xor
repnz
test
mov
jae
cld
or
push
xchg
inc
out
and
sbb
icebp
add
sub
loop
cwtl
xchg
and
mov
sbb
and
mov
aad
adc
mov
popf
cmp
or
mov
aam
imul
push
xchg
push
xor
add
insl
xor
or
in
mov
dec
enter
jnp
les
push
push
loope
imul
in
push
mov
in
dec
lods
shlb
popa
pop
cmp
dec
addr16
test
cmp
imull
inc
out
fs
fld1
sub
clc
xchg
push
cs
inc
and
jb
mov
adc
cmp
jo
cmpsl
in
repz
dec
rcrl
mov
mov
test
xor
push
popf
mov
fcoms
and
in
mov
lret
xchg
and
jmp
push
pop
adc
or
dec
add
ret
rclb
arpl
mov
xchg
shll
testl
adc
jl
mov
into
mov
inc
pop
push
lret
stc
je
jmp
mov
jae
pop
xchg
dec
dec
cmp
jmp
cs
lret
xor
aad
clc
in
pop
dec
inc
lret
pop
sub
dec
push
pmulhw
push
xchg
stc
pop
and
or
mov
aaa
cmp
bts
dec
int
repz
ficomps
jle
jecxz
std
or
cmp
aas
jecxz
fimuls
mov
add
imul
mov
pop
es
fbstp
jg
mov
push
mov
or
call
orb
and
mov
mov
jg
nop
and
leave
mov
int
sbb
pusha
adc
inc
mov
pop
adc
jp
cmc
xlat
jo
add
pop
enter
push
ljmp
inc
push
ds
mov
mov
and
jno
out
outsl
das
push
in
fdivr
fs
lea
lea
sbb
aaa
xor
inc
test
add
aas
mov
push
imul
fucomp
ret
or
test
test
sbb
stos
fwait
mov
aad
imul
push
cmpsb
fcmovnbe
hlt
insl
mov
mov
imul
lahf
test
inc
in
pusha
jecxz
orl
cmpsl
or
scas
lods
lock
push
outsb
fisubl
and
les
adc
test
ds
fsubrl
mov
add
stos
push
cwtl
sub
cmpsl
xchg
call
pushf
aaa
sti
out
cmc
lods
push
inc
xchg
shl
xchg
jne
push
xor
sbb
test
pop
inc
out
xlat
xchg
cli
inc
mov
into
sub
mov
mov
push
adc
add
push
cld
ficoms
xchg
and
enter
rcll
leave
cmp
dec
jmp
es
xchg
cmc
xchg
adc
and
sarb
and
pop
mov
cmp
add
stc
mov
es
add
mov
or
mov
movsl
outsl
adc
rcl
into
das
repz
sub
sar
mov
mov
pop
mov
stos
xchg
stos
add
push
into
adc
add
sbb
pop
aam
cmpsb
arpl
or
jmp
mov
sahf
shl
repnz
mov
sbb
mov
jne
mov
lret
and
leave
aad
aas
sub
repz
in
mov
cmp
ss
and
fistl
mov
xor
push
mov
es
cmp
stc
aad
xchg
inc
or
mull
adc
jecxz
xor
in
fidivs
pop
jbe
fwait
xor
out
roll
dec
rorl
jl
dec
xchg
aaa
xchg
push
stos
pop
mov
scas
loope
and
sbb
push
mov
sahf
imul
xchg
adc
test
mov
ja
shll
outsb
jmp
ss
enter
sti
sub
mov
inc
loope
jno
lods
daa
sbb
rcrl
ljmp
pop
xor
lea
andb
mov
mov
les
sub
or
xor
les
jo
lea
push
xor
rcrl
dec
add
push
icebp
fcomi
mov
push
rcr
ljmp
dec
push
fisttps
mov
mov
pop
xor
cwtl
adc
jb
mov
pop
sbb
repnz
pusha
out
repz
test
mov
fbstp
sbb
popf
mov
stos
xchg
inc
pop
pusha
or
es
push
jg
or
std
rorb
xor
ds
inc
mov
stos
jae
cmp
dec
scas
out
jge
jnp
dec
test
adc
push
push
dec
and
leave
sarl
cmpsb
nop
dec
fwait
jp
into
adc
pop
jnp
sub
jo
sahf
push
scas
test
or
lret
icebp
or
jo
and
in
iret
nop
roll
or
aam
and
pop
lds
lds
shrb
pop
cmpsb
popf
mov
daa
xchg
pop
fldcw
jae
loope
pop
leave
lods
andw
push
mov
sub
negl
int
stos
cmpsl
fdivrl
cmp
sbb
cld
xchg
in
inc
xchg
inc
insb
or
pop
test
xchg
mov
scas
or
adc
lods
cmpsb
mov
fidivrl
mov
jle
push
pop
push
add
cmp
sub
lods
nop
shrb
daa
push
hlt
xor
cmp
jae
jg
cltd
enter
push
arpl
add
xchg
xorl
sub
aam
add
repnz
rolb
test
jns
pop
inc
xchg
mov
add
adc
fildll
jbe
lahf
pop
scas
in
push
popf
bound
clc
loopne
stos
pop
mov
mov
bound
setne
cmp
and
test
cli
scas
xchg
fldenv
cmp
jbe
roll
loope
cmp
loop
or
gs
cmc
sub
popa
cmc
mov
das
xor
inc
inc
xor
adc
sbb
nop
jns
lcall
and
pop
jg
cltd
cmp
fldenv
cmp
gs
insl
aam
lret
add
shl
lock
xlat
out
and
dec
jg
sub
dec
ror
pushf
mull
fisubs
bound
xchg
pop
sub
inc
popa
jnp
or
xor
xlat
mov
in
xchg
adc
cmp
rclb
cmp
and
inc
js
adc
movsl
ss
jb
push
int3
test
addr16
test
cmp
rcrl
inc
pop
test
fisubl
push
or
mov
xchg
loope
xchg
ds
xchg
insb
pop
push
pop
mov
or
insl
mov
sahf
adc
or
xor
mov
jge
adc
mov
and
mull
fisubs
dec
pop
xor
cmp
icebp
cld
lods
mov
sub
testl
lods
or
cmpps
xor
fsts
dec
cmp
mov
lret
xor
inc
mov
loope
mov
lds
cmp
aaa
pop
out
das
xor
xor
popf
out
mov
int3
jb
inc
cli
jnp
push
ficoml
xchg
lods
insl
fmul
call
stc
push
bound
cmp
push
adc
mov
add
sar
inc
mov
jae
shlb
dec
push
mov
stos
mov
sahf
mov
aad
fisttpll
shlb
enter
int3
leave
test
cld
pop
nop
adc
jae
mov
imul
testb
cmpsl
mov
faddl
lock
add
cli
out
xchg
test
jle
push
in
xchg
inc
cwtl
cli
ljmp
pop
fdivrs
adc
push
mov
push
cmpsb
jecxz
mov
inc
test
or
cli
cmp
xor
pop
xchg
push
ljmp
mov
mov
aam
jle
scas
mov
jae
setge
ret
xchg
icebp
push
mov
pop
data16
aaa
xor
addr16
dec
negb
push
inc
hlt
cs
push
filds
mov
jl
dec
add
cwtl
push
mov
in
shrb
movsb
out
cmp
ret
xor
sarl
xchg
jo
add
stc
jns
mov
cli
fisttpl
ljmp
mov
insb
roll
jne
out
ds
rorb
mov
mov
xor
cmp
or
cmpsb
add
mov
push
pop
xor
fwait
sbb
ss
lahf
pop
fcoml
rcll
xchg
ret
and
popa
pop
mov
jnp
add
xor
icebp
rol
mov
fstpt
adc
mov
sbb
pop
mov
stc
sbb
push
or
rcrb
lea
icebp
scas
imulb
xchg
loope
push
jne
jnp
cmpsl
and
cmc
shlb
ret
out
in
mov
stc
rclb
ljmp
test
adc
mov
mov
aam
fcoml
xor
testl
mov
and
pop
mov
mov
stos
sarl
fiadds
loopne
xlat
insl
pop
sub
mov
mov
or
inc
xor
inc
scas
or
arpl
loop
mov
fnstcw
jl
ret
mov
int3
pushf
push
cmpsb
mov
pop
popf
das
mov
sub
push
mov
dec
xchg
addr16
iret
cmc
scas
test
adc
dec
xor
pop
mov
sub
iret
inc
jae
push
mov
sub
fcompl
xor
imul
and
xorl
lcall
sbb
cmpsl
call
push
add
cmp
xlat
mov
test
push
clc
mov
cltd
adc
inc
pop
stos
mov
hlt
cmc
xlat
cmp
mov
mov
push
fnstsw
push
nop
inc
fbld
jae
call
lahf
cmp
movsb
sub
mov
xchg
jle
in
mov
push
jne
lret
and
mov
inc
fstps
jecxz
cmpsl
cltd
cld
jp
mov
icebp
pop
sbb
loope
adc
scas
jge
jae
insb
movsl
insl
cmp
xchg
fdivs
or
hlt
xchg
nop
out
ss
mov
cmp
mov
pop
xchg
jno
outsl
push
js
enter
int3
jp
xlat
mov
mov
mov
pop
out
add
add
push
les
lret
lahf
out
xchg
outsl
mov
push
pop
xchg
pop
test
lods
jg
daa
insl
lods
xchg
or
mov
jp
push
push
movsb
jle
cmp
cmp
cwtl
mov
adc
dec
sbb
shll
mull
sub
dec
jno
in
hlt
xor
cmp
inc
cmp
sub
cmpsb
decl
jnp
push
imul
xor
or
stc
jp
mov
push
xchg
adc
fwait
jb
push
xchg
das
pop
inc
outsb
pop
mov
leave
jp
cmp
dec
mov
jb
push
fldt
and
add
push
in
lock
lock
mov
outsl
xchg
aaa
dec
add
mov
inc
fcmovb
lds
frstor
dec
pop
ds
lods
jge
inc
addr16
xor
lcall
in
test
xchg
dec
arpl
dec
ja
mov
jae
add
in
xchg
iret
sub
cs
bndldx
xchg
inc
aaa
pop
jns
scas
dec
lea
jns
cli
nop
pushf
sbb
xchg
sbb
repnz
idivb
mov
push
adc
xor
xor
mov
jbe
repnz
and
loopne
cmp
pop
and
xor
hlt
xor
mov
outsb
mov
push
cvtps2pd
inc
pop
jecxz
movsb
mov
scas
cmc
loopne
dec
sbb
ljmp
add
xor
imul
mov
mov
dec
es
mov
push
xchg
mov
das
inc
jmp
mov
add
sbb
xchg
fcmovnbe
mov
cmp
mov
in
lahf
xchg
in
in
mov
xor
fldcw
sub
add
dec
orb
scas
sub
scas
bound
xor
mov
push
leave
fmull
mov
outsb
test
iret
sbb
in
or
xchg
dec
inc
mov
dec
sti
pop
push
pop
adc
push
dec
mov
outsl
push
inc
inc
xchg
sahf
mov
mov
and
or
cli
je
pop
call
mov
movsl
leave
jno
andb
cmp
imul
cmp
test
cmc
pop
mov
jp
pop
in
xchg
push
inc
push
les
es
and
js
lods
in
sbbl
mov
ror
mov
mov
lcall
leave
andb
xor
xor
loopne
popa
outsb
or
in
push
rorl
adc
mov
sub
and
shlb
pop
call
cmc
out
jb
xchg
out
mov
push
mov
addb
xor
adc
or
xor
pop
cmp
xrelease
push
and
pop
call
repz
loop
inc
inc
rolb
and
pusha
jne
and
ljmp
cmp
pop
xchg
mov
ret
push
stos
jno
std
pop
cmp
pop
aam
cmc
rcrb
xchg
jo
inc
getsec
shlb
movsl
cmp
lret
mov
jne
add
arpl
push
adc
jb
and
add
out
cwtl
pushf
inc
repz
icebp
add
and
jns
ja
mov
xor
adc
and
lcall
mov
fldl
cmp
or
mov
jl
mov
and
inc
dec
xorb
daa
ret
test
mov
jnp
andl
insb
or
fxch
or
mov
dec
mov
insl
fildll
pop
pop
xchg
jns
sbb
rcl
dec
jmp
mov
pop
jl
lock
xchg
add
inc
shrb
ljmp
mov
add
cli
stos
jmp
mov
xchg
cld
int
mov
mov
loopne
test
inc
outsl
rclb
jae
inc
clc
in
pop
orl
sub
test
sbb
pusha
nop
inc
cmpsl
jae
ja
fwait
cmp
in
fsubrl
subb
popf
js
movsl
aam
add
or
lock
cmp
dec
fs
sahf
leave
xor
dec
out
test
sar
cmp
lret
sub
stos
test
mov
pop
adcl
add
ret
sbb
push
or
test
mov
cmc
inc
test
pop
inc
addl
xchg
pusha
or
jle
and
xor
mov
mov
fiaddl
push
cmp
adc
insl
xor
fsubr
mov
adc
cltd
fcompl
pop
add
or
leave
add
sbb
add
mov
movsb
pop
ja
fdiv
jne
mov
js
push
mov
add
mov
pusha
add
outsb
cs
dec
and
mov
test
push
inc
hlt
mov
or
mov
push
push
add
fbstp
pop
push
pop
mov
dec
adc
ret
mov
jecxz
scas
mov
jne
jl
or
cmp
int
jne
sub
fdivrl
mov
xchg
mov
or
pop
and
push
jg
loope
mov
dec
popa
adc
add
shlb
test
jb
cld
lods
fildl
out
cltd
lea
sub
orb
xchg
movsb
daa
bnd
fldt
lea
mov
and
fnsave
xchg
mov
popl
or
adc
mov
adc
sbb
jno
sbb
xor
adc
imul
pusha
xchg
es
sub
rcr
bound
xor
add
mov
movsl
flds
iret
cmp
test
sub
iret
inc
inc
jmp
out
and
or
rorb
lds
aas
lret
mov
ret
lds
ja,pt
mov
jecxz
in
movsb
sub
lods
jmp
adc
imul
repnz
dec
dec
test
jne
and
ja
in
pop
out
jle
jb
fnsave
push
and
adcb
lock
es
or
movsb
cld
and
xchg
jo
pushf
xchg
xchg
out
dec
cmp
mov
insl
dec
clc
scas
ljmp
lods
lret
and
xchg
cmc
mov
cmp
imul
mov
into
out
xlat
ss
inc
mov
xchg
cs
jp
mov
cmp
nop
nop
jmp
insb
mov
add
adc
aas
mov
clc
add
mov
test
pusha
pop
sub
cmpsl
insl
sbb
mov
adc
cs
mov
call
shll
jge
mov
popa
xchg
mov
push
ja
dec
in
sarl
or
jns
adc
push
je
dec
adc
mov
in
int
leave
repnz
in
leave
pop
jp
mov
outsl
cmpsl
repnz
pusha
arpl
scas
mov
xchg
pop
dec
pop
or
xchg
shll
iret
sbb
lahf
ja
pusha
inc
out
adc
cwtl
sbb
and
jae
inc
sbb
int3
in
testb
pop
xor
jle
xchg
push
and
pusha
rcrl
cmpb
inc
imul
cmp
push
fwait
cmp
js
xchg
lret
sub
jne
or
bound
fadds
mov
sbb
push
cld
ffree
mov
mov
push
inc
sub
mov
fwait
mov
std
sub
cmp
gs
out
push
daa
adc
adc
loopne
dec
outsb
fists
mov
dec
pop
mov
lret
je
xchg
sbb
lret
addr16
test
or
clc
pop
push
ljmp
add
gs
stos
mov
je
sbb
aad
xor
imul
jnp
faddl
popa
hlt
stos
pop
xchg
sahf
mov
aas
incl
jl
clc
roll
xchg
mov
addr16
sub
mov
jmp
inc
pop
pop
inc
mov
jecxz
jp
out
and
imul
je
and
lcall
fistps
rorb
call
mov
and
movsl
mov
and
and
inc
ljmp
mov
jbe
push
ret
mov
aas
popa
dec
std
cmp
je
push
pop
iret
in
cmp
push
in
push
adc
inc
dec
scas
and
pop
pextrw
xor
dec
cmp
mov
orb
xor
xchg
mov
push
sub
adc
dec
xchg
pop
xlat
sub
jmp
stc
mov
adc
xchg
pop
les
int
scas
jne
adc
mov
push
pop
mov
xor
add
std
sub
cmc
loopne
push
dec
push
push
icebp
insl
lea
stos
pop
dec
inc
mov
ret
sbb
mov
or
push
test
dec
jg
xchg
lret
repnz
push
xlat
pop
movsl
es
packssdw
sti
or
int3
call
fstl
ret
cmpsl
push
test
insb
inc
cwtl
dec
pop
loopne
sub
mov
outsb
jne
pop
cmp
mov
xor
dec
dec
loop
jno
push
xorb
xor
mov
pop
repnz
mov
xor
mov
sub
dec
clc
or
xor
xchg
cmpsl
add
and
mov
sub
push
loope
int3
inc
dec
ja
or
push
call
je
and
xchg
mov
or
das
roll
pop
sbb
and
das
repnz
bsf
and
mov
pop
dec
mov
test
mov
fxch
aas
sub
lret
cmpsl
test
in
or
mov
xchg
out
int
mov
lcall
sbb
xor
sahf
cmp
and
mov
stos
and
call
ret
xlat
mov
pop
jecxz
sbb
in
cmpsl
out
mov
mov
or
hlt
lcall
sbb
fisubl
lcall
sti
mov
mov
dec
add
inc
mov
cmovne
or
sub
xlat
jbe
aad
incl
test
xor
inc
jne
test
push
dec
cmpsl
icebp
pop
scas
lods
faddp
add
clc
xor
in
fistps
mov
jb
jno
adc
mov
pop
sub
lock
icebp
jne
inc
or
pop
lods
push
in
lods
sahf
push
das
push
lods
inc
pop
mov
push
lea
test
int
cltd
pop
je
add
sbb
rol
int3
out
daa
jmp
testb
int
cmp
push
mov
mov
jecxz
inc
test
sbb
push
rep
das
xchg
div
daa
and
cltd
mov
popa
pop
pushw
fwait
andb
cld
dec
pop
xor
add
xchg
pop
fwait
mov
daa
shlb
iret
xor
mov
xor
xchg
lock
addr16
dec
out
pop
cmp
cmp
add
mov
push
ret
push
insb
add
test
xlat
outsl
pop
xchg
xor
fildl
push
test
and
dec
mov
add
cld
fs
inc
xor
inc
xchg
cmp
sbb
in
or
arpl
push
jmp
pop
mov
sbb
mov
xchg
shrl
adc
adc
leave
cmp
lcall
cmp
pop
les
repz
loop
cmp
lea
out
adc
movsb
cld
sub
mov
dec
adc
sub
call
fstps
or
insb
inc
arpl
or
lods
in
outsl
adc
int
test
aas
xchg
ljmp
insl
adc
push
das
xchg
addb
inc
cld
add
xchg
jae
es
sbb
popa
ret
js
push
push
data16
or
push
mov
or
out
push
add
mov
addb
in
scas
mov
and
cmp
xlat
mov
out
rorb
add
out
dec
ret
jns
rorb
jb
mov
dec
in
repz
xlat
repnz
pop
and
adc
mov
lret
fcmovnbe
jp
add
cltd
xchg
negl
in
or
sbb
int3
out
int
clc
es
sbb
mov
lods
cld
mov
popf
out
out
mulb
ds
push
push
aam
and
push
sub
in
adc
pop
rcll
dec
push
sub
in
push
stc
sub
sub
mov
cmpsl
daa
mov
push
xor
xlat
das
jle
inc
daa
xor
push
data16
enter
adc
aas
out
add
mov
xchg
scas
and
dec
movsl
jp
adc
xchg
sti
jae
test
pop
pop
out
push
or
mov
and
loop
int
xchg
pusha
enter
out
add
mov
jg
sub
pop
aam
stos
xor
andb
stc
xor
adc
scas
jge
sub
popl
pushf
push
fsubrp
sub
cld
and
iret
leave
pop
out
or
stos
mov
nop
sbb
fmuls
js
rcll
subl
stos
idiv
dec
in
pop
psubb
adc
neg
adc
or
dec
pushf
inc
jno
testl
jae
sub
add
push
lcall
mov
push
mov
sub
xchg
sub
ficoml
jns
add
fiaddl
jno
aas
add
mov
sbb
xor
mov
test
mov
inc
fnstenv
pushf
cltd
scas
into
ss
loope
xchg
dec
sub
mov
dec
repz
jae
dec
mov
je
lahf
pop
pop
ret
and
mov
xchg
or
js
shlb
cs
sbb
inc
in
pop
scas
out
shr
aam
fcomp
jecxz
ss
dec
cli
xor
adc
ret
and
pop
leave
or
xor
mov
and
loopne
pop
or
jo
inc
into
loop
jo
jo
inc
dec
inc
mov
add
fidivrl
add
and
jbe
mov
dec
mov
in
mov
sub
push
push
adc
pop
ds
gs
add
xchg
sbb
or
mov
xchg
out
into
in
mov
push
je
mov
test
sub
outsl
or
shll
orb
push
xchg
pop
push
movsb
loope
pop
inc
xlat
dec
jno
aas
mov
jge
outsl
adc
fstl
add
out
js
jmp
je
jg
fs
add
pop
add
xor
xchg
mov
sbbb
xor
pop
xchg
mov
push
lods
pop
and
or
sbb
pushf
xchg
int
xchg
dec
mov
jge
nop
rorl
push
xchg
jecxz
stos
jno
lock
ljmp
lock
into
adc
nop
mov
pop
in
add
insl
addl
insl
push
dec
dec
dec
push
xchg
mov
loopne
leave
dec
imul
ret
xchg
out
push
sub
add
and
leave
icebp
dec
jle
fcmovb
add
dec
push
popl
aad
or
cmc
idivb
and
lret
mov
and
xor
sbbl
les
shll
adc
dec
sub
jmp
jae
xchg
loop
adc
adc
out
mov
inc
loopne
add
dec
lret
dec
dec
test
leave
icebp
mov
scas
jo
sti
jno
sti
mov
imul
gs
xchg
leave
xor
jae
jp
mov
mov
aad
add
cmpsl
cltd
inc
sub
sub
pop
dec
jp
and
dec
rol
shlb
mov
into
mov
mov
out
adc
cwtl
loopne
cwtl
out
push
loope
mov
cs
movsb
cmpsl
loop
call
dec
arpl
in
mov
fisttpl
outsl
cmp
xor
ss
aas
out
inc
dec
mov
stos
inc
add
sarl
mov
push
xor
mov
neg
je
mov
jle
fprem
push
or
out
ds
sarb
sbb
outsl
pushf
enter
jp
cmp
jg
and
mov
jbe
lock
jb
or
adc
dec
jge
pop
sub
pusha
dec
mov
sub
stos
adc
popf
stos
in
xor
dec
or
or
mov
sbb
ror
mov
faddp
icebp
mov
sub
repz
lds
dec
int3
mov
rcr
enter
fcmovnbe
mov
fmulp
cmp
inc
xorb
add
fnstsw
cld
lahf
cmp
inc
add
in
sub
fmull
inc
ret
int3
iret
out
mov
jg
mov
cmp
push
shl
dec
decl
and
or
in
es
les
pushf
insl
sarb
ja
enter
mov
jecxz
test
jo
roll
jne
lea
daa
adc
push
sub
enter
dec
pop
jae
fcmovnb
cmp
push
std
sbb
aad
lahf
notb
cmp
testl
mov
ret
push
add
cs
push
lret
pop
sub
and
push
outsl
push
ljmp
popf
stos
jl
movsb
leavew
imul
rorb
outsb
mov
lock
xor
push
pop
xchg
jmp
ss
js
push
inc
jb
cltd
cmpsl
lds
arpl
mov
xor
xchg
and
lret
lea
dec
adc
insl
adcl
fcompl
adc
push
push
addb
mov
mov
addr16
std
pop
out
xor
cmpsb
sti
clc
pop
ficomps
cmp
cmp
call
stc
xor
sbb
outsl
mov
mov
sbb
xchg
mov
inc
int
dec
add
loop
xor
outsb
lods
ljmp
dec
jno
call
adc
pop
inc
sbb
outsl
gs
xchg
loopne
xor
or
sarl
pop
jecxz
out
cmovp
int3
test
pusha
inc
push
fsubs
or
int3
lock
fisubs
push
hlt
cltd
rorl
movsl
stos
and
clc
lock
fisubs
sub
mov
sbb
cltd
mov
lods
cld
xor
and
es
mov
ljmp
xor
test
outsb
xchg
cmp
adc
pop
stos
mov
dec
add
xchg
lcall
xchg
rcrl
subb
divb
movsl
test
xchg
mov
mov
into
rorb
dec
jae
mov
rcr
stos
aas
lock
xchg
adc
enter
xchg
aas
rcrb
jbe
mov
jmp
mov
into
xchg
pop
inc
mov
mov
subl
sbb
jmp
dec
or
rcl
repnz
lret
decb
push
stos
lcall
push
lods
jo
test
inc
cmp
and
xor
aas
pop
inc
cmp
test
movsl
hlt
jmp
jne
hlt
or
cmp
cmc
mov
xor
inc
fwait
ss
stos
test
mov
mov
or
into
rcrl
sub
stc
out
push
ss
mov
stos
repnz
insb
mov
xorps
add
lahf
icebp
cli
rorl
aaa
sahf
insb
adc
inc
stos
leave
sbb
jle
divb
xchg
js
push
fnstsw
add
lods
ret
mov
xlat
mov
mov
scas
movsb
push
outsl
cmpsb
dec
xor
mov
mov
stos
mov
jg
push
add
xchg
mov
mulb
lcall
mov
fldcw
insl
in
jge
icebp
or
js
add
jbe
pop
cmp
sbb
mov
shll
pop
pop
xor
ficoms
les
dec
bound
or
mov
out
and
mov
jl
in
pop
or
cmp
jbe
loopne
call
pop
cmp
fimuls
sbb
push
jbe
imul
sbb
jl
xor
jne
and
adc
push
sub
hlt
out
dec
in
movsl
mov
xchg
mov
inc
jmp
push
scas
lds
mov
mov
jecxz
or
popa
mov
ret
aad
add
lret
and
ds
jg
arpl
xchg
sbb
mov
add
testb
sahf
sub
jae
mov
mov
lret
aas
mov
pop
jecxz
enter
loope
cmp
add
sub
addr16
decb
icebp
or
sub
imul
pop
mov
xchg
push
or
add
stc
filds
es
arpl
mov
pop
jg
xorb
cld
mov
testl
mov
stos
jns
adc
loope
cwtl
jno
shll
mov
sub
or
push
sub
xor
in
test
jbe
popa
dec
mov
fnstcw
fdivs
pop
sub
jns
iret
jnp
push
outsl
sti
mov
subl
push
ja
sbb
icebp
push
xor
cmc
fcmovne
lcall
xor
popf
lret
aaa
lds
push
out
fdivrl
int3
cmp
xchg
inc
push
sub
das
mov
cwtl
add
xchg
arpl
and
popa
scas
xor
mov
sbb
sti
lcall
inc
in
xchg
push
and
and
iret
cmpsb
test
cmp
cmpsb
mov
arpl
insb
cwtl
icebp
mov
push
stc
incl
std
mov
push
movsb
xchg
sub
cmpsl
xor
test
inc
add
scas
lods
enter
jle
push
xor
sub
inc
sar
xchg
in
jle
loopne
je
adc
lea
cmp
and
int
out
or
div
jb
cmp
stos
xchg
sti
out
push
rorb
adc
xchg
inc
sub
test
mov
test
js
mov
rolb
sub
mov
int
dec
push
xlat
lahf
push
fcmovb
stos
add
es
cmc
ds
movsb
xor
or
jno
out
add
xor
scas
mov
xchg
and
pop
imul
daa
cmpl
jnp
push
lods
movsb
addr16
sbb
and
loopne
clc
daa
dec
mov
sbb
clc
leave
jo
or
mov
xorl
sbb
outsb
jno
repnz
ds
sbbb
aam
xchg
mov
clc
or
jle
push
insb
jbe
mov
xchg
movsl
xor
mov
addb
pushf
jo
cmpsl
repnz
dec
cmc
sbb
adc
sub
pop
jl
push
das
das
sahf
or
pop
adc
lds
ret
xchg
mov
int
push
add
xor
pop
jbe
mov
sbb
xor
test
pusha
push
adc
hlt
hlt
pop
fmull
cld
shrl
push
jle
adc
sbb
repnz
sahf
mov
pop
hlt
cmp
aad
mov
mov
mov
adc
ss
ljmp
inc
jmp
pop
icebp
daa
das
xchg
sti
jnp
mov
into
adc
add
pop
out
ss
push
gs
dec
std
imul
jb
lcall
scas
cmc
ret
rol
shlb
xchg
aam
and
and
mov
mov
add
lea
fcoms
and
mov
movsb
mov
xchg
leave
mov
aad
xchg
jo
imul
push
push
data16
stos
sub
into
fldpi
fwait
mov
cmp
push
rcr
fisttps
sbb
inc
xchg
aad
call
gs
sbb
mov
fdivp
call
push
mov
test
inc
movsl
ds
fstpt
aaa
out
clc
cmp
xor
xor
push
mov
add
xlat
inc
mov
in
insb
add
stos
mov
popf
mov
xor
jnp
addr16
inc
jae
xorl
sub
mov
fistpll
pop
lcall
insl
add
xchg
and
rcrl
xlat
mov
fists
pop
stos
test
mov
xor
inc
pextrw
dec
and
xchg
repnz
fsub
hlt
fsub
xor
nop
sbb
ljmp
jno
jo
imul
ss
repz
popa
test
adc
or
xchg
and
xchg
int3
loop
inc
rcrl
sub
popa
jg
mov
sbb
mov
dec
out
jo
lret
fidivs
mov
int
popl
adc
mov
push
pop
adc
ret
sbb
xor
xlat
push
lahf
adc
sub
stos
or
fisttps
std
ret
rclb
pop
cmp
sbb
mov
sbbb
scas
xchg
inc
fucomp
pop
ret
div
jp
or
sbb
rcrb
stc
js
jle
cwtl
ljmp
pushf
fs
outsb
xchg
hlt
movsb
sub
push
jae
cmp
adc
push
and
pop
cmp
mov
dec
or
xorb
xchg
stos
mov
inc
inc
ljmp
xchg
dec
lds
mov
imul
test
es
push
cmp
mov
xor
in
sbb
push
sub
loope
sahf
xchg
fstps
add
add
sbb
out
rclb
or
cli
jg
push
xchg
repnz
lods
xchg
mov
pop
mov
repz
push
xchg
pop
scas
fldenv
dec
mov
out
insb
pop
jl
in
ret
je
and
aam
movb
jl
xor
fimull
or
sub
xchg
shrb
inc
test
adc
mov
scas
jle
dec
dec
lds
mov
xorl
je
xchg
fwait
mov
jg
ret
fistl
push
dec
in
popf
lods
rorb
in
cmc
nop
push
mov
and
mov
mov
mov
jno
je
mov
and
loopne
inc
pop
jp
adc
lret
ss
ljmp
sub
mov
mov
mov
gs
ret
aad
and
std
xchg
repz
icebp
outsl
lods
fs
and
mov
or
xchg
push
inc
pusha
in
push
mov
cwtl
stc
lret
imul
sbbb
lahf
stos
mov
push
test
loope
imul
mov
mov
int3
add
cmp
loop
mov
inc
push
adc
adc
in
mov
mov
xchg
sbb
mov
sbb
outsl
inc
jl
sub
inc
sbb
and
pop
pop
jge
and
jle
mov
dec
and
test
pop
xor
push
push
xchg
xor
int3
aam
cs
cmpsl
xor
mov
fcoms
in
out
push
jl
dec
stc
imul
pusha
cmc
pusha
cmpsl
or
rorl
sti
cltd
and
adc
repnz
fwait
clc
imul
inc
mov
mov
popa
sbb
out
pop
dec
cli
jg
and
push
mov
inc
into
fs
xchg
andb
sub
push
cmp
andl
daa
sbb
repnz
inc
out
sarb
inc
add
hlt
pop
loop
jecxz
mov
mov
xor
push
and
ds
inc
jb
les
leave
cld
push
sbb
cmp
sub
out
cmp
mov
shlb
movsl
leave
and
pop
mov
cwtl
adc
jecxz
repnz
xchg
loopne
lahf
inc
ljmp
and
push
xchg
mov
mov
les
sbb
and
enter
rep
pusha
mov
fisubs
lea
lret
mov
add
cwtl
xchg
mov
out
inc
stc
mov
lahf
cmpsb
xchg
imul
ljmp
bound
fistpl
aaa
and
xorb
movsb
jo
gs
inc
pop
cmp
pushf
and
xor
imul
daa
out
push
orb
popa
enter
sbb
pusha
loope
jb
les
scas
cld
inc
repz
mov
ficoms
jmp
pop
rorl
cmp
pop
adc
push
adc
into
jb
ds
sti
cmp
call
loop
dec
sbb
xlat
xchg
dec
jp
xchg
pop
push
lret
pop
std
rorl
rcrl
bound
dec
mov
lock
push
pmaxsw
test
mov
push
sbb
leave
jl
mov
fisubl
mov
lahf
fdivl
cmpsb
cs
dec
pop
adc
sbb
dec
add
int3
jmp
jecxz
std
ja
add
pop
loop
mov
inc
in
mov
imul
pop
daa
inc
and
aaa
mov
sbbl
mov
lcall
and
addb
insb
cmpsb
xchg
test
sub
int
push
sahf
xorl
cmpsl
inc
loop
mov
sbb
jge
outsb
jl
mov
cmp
and
cli
xchg
add
mov
in
mov
out
inc
ss
xor
cmp
inc
mov
lods
push
repnz
dec
cmp
subb
jo
xchg
popa
test
push
dec
sub
add
sti
xchg
inc
movsl
push
lods
cmp
xor
subb
cld
cmp
pusha
xchg
in
cmp
mov
gs
pop
pop
outsl
lods
dec
and
mov
xchg
push
or
inc
pop
adc
sbb
loop
sarb
mov
xchg
push
insb
sub
xchg
cmpsb
cli
mov
mov
sbb
mov
cmp
cmp
sbb
dec
sbb
dec
or
int
sub
mov
cs
add
adcl
jns
pop
dec
push
xchg
ds
clc
mov
mov
fimuls
shll
jo
lahf
or
dec
addl
in
adc
cmpsb
cmp
jg
aam
and
push
xchg
rcl
loope
xchg
rolb
jmp
je
mov
rclb
pop
mov
repz
sub
xlat
sqrtps
imul
xlat
sub
or
jp
repz
pop
clc
and
pop
fsubs
dec
in
xor
lea
push
jne
mov
inc
loope
push
sahf
lock
outsl
sarl
sbb
sub
clc
sub
push
pop
or
aaa
leave
inc
movsb
sbbl
sub
int
mov
pop
or
mov
popf
imul
add
loopne
xchg
lea
fucom
push
push
pop
ret
mov
in
xor
outsl
xchg
and
sbb
neg
mov
negb
add
fmuls
inc
mov
jg
ds
sbb
and
add
push
in
mov
xchg
mov
pop
test
out
pop
push
add
repnz
pop
popf
popf
sbb
push
fiaddl
jno
push
xchg
sbb
cli
fnstcw
cmpl
or
aas
mov
pop
je
jbe
mov
popa
lods
ret
jne
push
inc
xor
fadds
and
and
std
mov
rcll
and
mov
add
jmp
and
repz
xchg
cli
cmpsb
sub
xchg
push
cmp
mov
jg
test
jp
xorl
lods
ret
in
shll
mov
popa
mov
rolb
lret
sub
ret
xchg
push
push
cmp
mov
inc
aad
addr16
push
or
fmuls
pusha
rcll
out
sub
fs
cmc
pop
test
dec
frndint
lds
sahf
fadds
cmp
xorb
inc
adc
add
rol
push
mov
sub
adc
dec
xchg
adc
leave
mov
cmp
popa
pop
sbb
and
popf
push
sbbb
jmp
in
les
and
cmc
repz
jae
adc
adc
inc
add
mov
outsb
jae
xchg
push
jg
xchg
push
dec
jo
addr16
jo
hlt
ret
sub
inc
pop
in
pop
push
stc
out
sub
dec
ret
push
je
cmp
jo
sbb
es
popa
push
xchg
cmp
pop
mov
xor
outsl
fstpl
cmp
in
sbb
ficompl
ss
and
xor
pop
push
test
fxch
lods
xchg
ss
nop
lret
loope
dec
pop
push
fisubs
iret
mov
xor
fwait
clc
repz
dec
pop
and
in
repz
nop
xchg
test
pop
jae
test
cltd
adc
or
xchg
jno
mov
jmp
mov
mov
jl
jmp
and
int
filds
jnp
pushf
andb
sti
lods
ja
repz
push
jbe
mov
pop
sbb
shl
add
les
jbe
fwait
push
and
pop
mov
xor
lahf
or
je
and
and
and
adc
mov
mov
aas
or
idivb
sbb
loope
sbb
cmc
cltd
test
test
sarb
idivb
and
adc
in
clc
fwait
inc
xchg
add
lods
fisubl
pop
xchg
sbbb
xlat
jnp
rcrb
fs
repnz
iret
std
fimuls
ret
in
or
mov
lahf
xchg
dec
cmp
outsb
js
cmp
lds
je
cmpxchg
mov
in
pop
dec
cs
mov
pop
je
cmp
iret
loopne
aad
push
dec
outsb
test
lret
bound
and
xchg
andl
mov
mov
mov
adc
mov
dec
xor
cmp
sbb
jl
in
popa
ja
jmp
adc
push
pop
das
cmpsb
daa
cmpsb
into
sub
movb
stc
movsb
pop
xchg
data16
lock
mov
mov
lods
sub
sbb
mov
andl
or
stos
push
fistpll
push
jecxz
jge
sbb
rcpps
test
adc
data16
shll
pop
int3
int3
cmp
fwait
int3
test
jo
ret
mov
out
mov
loope
pop
jns
sub
inc
cmp
call
fwait
mov
lea
pushf
dec
mov
sub
cli
aam
scas
xchg
jmp
das
xor
cmp
popa
bound
lret
daa
pop
mov
mov
push
decl
imul
inc
xor
leave
cwtl
out
xchg
xchg
pop
mov
adc
xor
sbb
pop
xor
mull
or
or
pop
fsubs
mov
ja
push
mov
out
lods
push
pusha
add
fldcw
and
fildll
sahf
lock
pop
icebp
add
stc
in
jmp
or
sbb
pop
iret
dec
or
mov
mov
dec
inc
pop
mov
inc
mov
mov
xchg
pop
mov
test
mov
sub
xor
out
sahf
mov
fwait
xchg
out
inc
lods
jecxz
push
jno
je
sub
ja
das
sub
ret
jbe
mov
iret
mov
rorb
mov
fs
or
fnsave
aam
hlt
in
adc
adc
sbb
xorl
jo
pusha
cmp
lcall
and
in
xchg
imul
sbb
and
ss
popa
push
mov
fcmovb
sbb
xor
lcall
xor
pop
xchg
push
shrl
lods
xlat
xchg
push
and
popf
out
cld
stc
and
popf
mov
cld
cmpsl
mov
insb
cmc
fdivrp
outsb
sahf
pop
lds
sub
outsb
popf
shl
orl
outsb
cs
inc
call
inc
lods
dec
arpl
jno
pop
ds
js
mov
push
push
jmp
pop
inc
mov
add
mov
sbb
out
ljmp
adc
inc
xor
je
popf
test
or
mov
divl
aad
popf
pop
dec
xchg
notl
dec
push
xchg
sbb
test
dec
mov
stos
push
sbb
and
sub
mov
sahf
mov
addb
sbb
repz
sub
aaa
inc
jle
movsb
pop
popf
out
push
inc
mov
xchg
int3
filds
fsub
adc
nop
and
xor
cld
dec
jnp
sub
fs
xchg
xchg
xor
scas
repz
inc
addr16
ficoms
rol
mov
and
xchg
out
fistl
imul
sti
movsb
mov
cwtl
inc
inc
dec
dec
push
mov
add
inc
roll
ret
xor
enter
sysret
pop
sahf
iret
lret
mov
push
adc
js
cmp
ljmp
sub
jno
dec
in
inc
jge
ds
fsubr
fcom
mov
add
push
jg
push
rcr
ljmp
jge
jp
enter
xor
pop
dec
add
dec
iret
xor
es
pushf
push
insb
shll
pop
cmp
jp
into
inc
inc
pop
pop
dec
xorl
pushf
dec
movsb
push
xor
neg
jnp
push
dec
adc
adc
lcall
dec
loop
xor
hlt
inc
insl
push
ror
movsl
mov
mov
add
mov
icebp
out
jnp
add
sub
inc
addr16
mov
xchg
test
add
inc
or
inc
xchg
out
les
movsb
int
stos
xchg
or
icebp
xchg
outsb
nop
mov
mov
mov
notb
mov
popf
push
xchg
clc
push
add
mov
inc
aaa
jl
call
js
aam
cmpsb
mov
or
sti
enter
into
mov
hlt
daa
mov
lret
inc
push
ret
imul
cmp
mov
xchg
fstpl
pop
pushf
frstor
jge
pop
lret
rol
or
push
cmp
orl
ss
dec
shrb
dec
hlt
cmp
cli
fnstsw
jp
lahf
mov
sbb
mov
les
nop
dec
jmp
and
or
add
les
mov
pop
mov
repz
add
cltd
and
nop
lret
aam
jmp
lahf
repz
stos
mulb
cwtl
pop
stos
in
outsb
shlb
adc
inc
int3
inc
in
insl
stc
push
lods
inc
cmp
leave
or
xchg
adc
push
test
lcall
xchg
mov
repnz
dec
loopne
mov
sbb
cwtl
loop
movsl
inc
xchg
cli
adc
jne
fs
in
les
pop
xor
int
mov
cmp
dec
lahf
push
movsl
loop
inc
and
mov
pushf
cmpsb
stc
sbb
jp
mov
dec
push
or
adc
pop
jns
sbbl
lret
dec
inc
in
addr16
fsub
divb
popa
ret
mov
movsl
push
push
pop
or
cmp
fsubl
scas
jb
into
lods
ja
cmp
lret
dec
mov
add
adc
mov
xor
push
push
add
in
xchg
and
addr16
xor
or
dec
push
jp
or
pop
out
in
sahf
add
bound
lea
or
fildll
cmp
push
fcmovb
push
xchg
imul
push
adcb
stos
dec
mov
push
icebp
pop
inc
sbb
aad
jl
mov
jne
fcoms
inc
jl
jl
movsl
icebp
jl
mov
test
cmp
and
pusha
out
out
cwtl
jae
stos
sub
hlt
adc
dec
sbb
mov
pop
les
and
idivb
mov
ret
cmp
scas
jmp
or
insb
or
and
pop
out
and
test
lods
xchg
in
shll
mov
sahf
movsb
jecxz
shlb
aam
pop
pusha
push
scas
test
int3
insb
jns
bsf
push
xchg
pop
xor
lcall
xor
xchg
sbb
scas
jmp
mov
jle
decb
push
dec
js
sub
jbe
add
dec
pop
test
inc
mov
mov
int
sahf
mov
xchg
ljmp
push
push
jg
icebp
out
jbe
icebp
orl
inc
icebp
xor
idivl
lcall
subl
aam
lcall
ret
pop
jge
add
mov
inc
dec
sbb
stc
or
push
push
mov
and
or
jno
lods
lea
or
incl
call
or
mov
sarl
sbb
je
sbb
dec
or
or
mov
inc
cltd
stc
and
cld
push
sbb
dec
mov
xchg
lcall
outsb
lret
stc
dec
jb
push
pop
je,pt
mov
xchg
add
sub
hlt
cli
outsl
jbe
out
mov
mov
cmpsl
xchg
xchg
push
cmc
je
mov
int3
in
or
jg
test
mov
sbb
xlat
ss
sbb
cs
lods
pop
jmp
pop
pop
into
mov
shll
dec
js
fbld
jl
popf
xchg
jns
adc
xchg
xchg
loopne
and
pop
inc
xchg
xchg
insl
fs
imul
adc
dec
dec
pop
sbb
ficoml
mov
in
ret
inc
ljmp
xor
das
cmpsl
push
xchg
shl
cmpsb
test
xor
and
sub
popa
lods
mov
rclb
je
xchg
in
shrl
loopne
jmp
hlt
mov
lods
in
outsl
rcrl
sti
imul
xchg
stos
decl
ja
cmp
xchg
imul
or
dec
jle
cmp
push
and
lret
or
insl
adc
inc
push
mov
adc
add
xchg
loopne
dec
out
and
xchg
add
adc
adc
dec
icebp
cwtl
nop
repz
sub
cmp
and
iret
sahf
inc
jle
pop
insl
pop
sbbb
xor
dec
mov
lea
push
xchg
sbb
cmp
out
sbb
cld
fmul
shrb
xchg
jmp
movsl
stc
cmp
std
sub
cmpsb
xlat
icebp
cmpsl
inc
pop
movb
ret
and
push
inc
and
fists
jl
mov
mov
das
out
cli
push
mov
in
pushl
fsubrp
lock
sub
mov
enter
notb
fs
aam
sbb
inc
aad
shl
enter
das
jae
ds
xor
push
scas
je
sbbb
jl
pop
sub
movsl
ret
sub
mov
inc
mov
sti
mov
call
adc
shlb
ret
mov
dec
pop
pop
sbb
insl
mov
mov
loope
bound
adc
pop
and
loope
mov
jno
js
jno
xor
pop
xchg
aas
sti
xchg
mov
orb
push
cmp
fnsave
stc
sbb
retw
rolb
xchg
push
push
sub
lret
out
shlb
inc
pop
xchg
push
ja
inc
push
mov
sbb
sar
cmp
aad
enter
xchg
int
mov
dec
jmp
das
ficoml
imul
pop
popf
icebp
out
push
adc
and
enter
mov
mov
test
jb
lds
stc
insb
add
ljmp
hlt
add
or
sub
movsl
inc
ret
dec
cmp
pop
jge
jp
push
hlt
lcall
adc
push
and
mov
es
lods
call
mov
mov
dec
fs
push
icebp
cmpsb
jne
push
out
imul
test
jae
scas
cld
cmc
repz
int
leave
and
xchg
stos
lods
incb
sbb
hlt
in
jp
inc
or
bound
je
imul
xchg
das
lods
xor
mov
rcrb
mov
xor
ljmp
xchg
cmc
mov
sarb
xchg
lock
and
mov
shlb
pop
cmpsl
fisubrs
adc
dec
xchg
sbb
jl
add
mov
dec
xchg
lock
shlb
push
lret
push
push
mov
addr16
sbb
pushf
cmp
out
mov
cwtl
nop
jo
jl
xorb
sarl
shrl
pop
std
mov
inc
test
orl
lea
test
fcomp
lret
aad
mov
jmp
cmp
or
test
lcall
ljmp
cmp
jg
lea
orl
repz
test
sbb
in
loope
push
fistpll
popa
lcall
shrb
frstor
ret
loope
sub
imul
in
mov
lcall
adc
xchg
pop
lea
pop
bound
cmp
inc
pop
xor
mov
movsl
data16
sti
mov
inc
push
cmp
jecxz
adc
in
std
fisubl
arpl
add
dec
inc
xor
and
orb
fdivl
push
sbb
and
or
test
adc
mov
in
sahf
mov
stos
fisubrl
or
in
xor
out
ret
lahf
adc
push
int
lret
sahf
popa
dec
fmuls
pop
dec
dec
outsl
dec
mov
imul
sbb
inc
pop
mov
xchg
das
lods
pop
mov
mov
mulb
add
cltd
call
test
loopne
pop
add
loopne
ds
loopne
cmp
leave
ror
mov
push
jno
movsl
or
sbb
jne
bound
xor
jp
jmp
sbb
jecxz
jae
sub
lcall
mov
ret
pusha
pop
int
test
mov
push
xchg
or
fldcw
xor
fstpt
jbe
je
dec
jmp
sbb
inc
leave
jmp
sbb
add
cmpl
cs
jns
jns
imul
mov
pop
sbb
mov
jmp
add
xchg
imul
pushf
mov
and
popa
stc
dec
arpl
adc
popf
scas
fistpll
xchg
daa
inc
mov
mov
lret
lds
pop
cmpl
mov
fldt
mov
jecxz,pt
icebp
jge
jnp
ljmp
pop
mov
sarl
jno
mov
xchg
lods
adc
shl
or
cmp
dec
hlt
icebp
scas
in
jp
lea
call
push
sbb
inc
inc
es
and
mov
mov
sbbb
adcl
and
adc
push
mov
cmp
xor
inc
xor
adc
and
sti
das
sbb
inc
inc
movsl
mov
loop
adc
shll
mov
je
cmp
lock
arpl
sahf
or
xchg
sahf
test
and
sub
cmpsl
test
xor
repz
pop
leave
and
and
xchg
cmp
stos
pop
out
test
insb
call
dec
popf
int3
fildll
fldt
inc
cmpsl
push
subl
cmp
xor
sbb
in
add
cmp
inc
insb
and
adc
dec
outsb
jns
fdivs
jb
cmp
sub
jne
or
shll
js
push
cld
mov
repz
aas
and
pop
lahf
or
std
add
and
xchg
aad
movsb
mov
mov
xor
or
push
rcll
faddp
jge
sti
xchg
xchg
shlb
les
inc
xchg
mov
inc
sbb
mov
pop
push
int3
sub
xor
lret
jecxz
mov
pop
and
mov
stos
mov
repz
push
clc
dec
xchg
aam
xchg
shlb
mov
repz
stc
add
adc
dec
pop
daa
cmpb
xchg
ja
mov
repnz
or
lds
hlt
pusha
lods
mov
and
out
aaa
jae
mov
cli
inc
inc
push
sub
xchg
int
jbe
sbb
xchg
rcl
adcl
xchg
cmc
nop
mov
out
lds
mov
adc
and
adcb
sub
in
rcll
inc
mov
sti
leave
push
cmpsl
andl
jp
iret
mov
pop
pop
andb
pop
into
xor
or
cmpsl
pop
cli
cli
jne
daa
push
shll
sar
idivl
andl
or
mov
jmp
mov
movsl
push
pop
scas
cmpsl
jle
fnstcw
outsb
dec
sub
fnstenv
mov
fucomp
xchg
dec
pop
stos
insl
xchg
mov
mov
add
xchg
xchg
or
ret
and
cmpsb
arpl
adc
outsb
sbb
adc
adc
ljmp
insb
sub
jnp
das
stc
clc
mov
fwait
imul
sarl
je
repnz
jl
jo
dec
mov
or
mov
aaa
add
add
jle
dec
cmp
or
hlt
pop
and
xor
fisttpll
mov
rorb
adc
sub
xor
stc
idivl
clc
push
int3
jge
sub
lods
mov
xor
fidivrl
mov
jae
push
stc
dec
cltd
jb
loopne
adcl
lock
pop
ret
jmp
cmovg
mov
out
jne
mov
inc
cltd
pop
cmpb
or
mov
sub
xor
cmpsl
imul
mov
xor
mov
inc
sbb
jo
mov
push
mov
stos
je
mov
mov
subl
jmp
sahf
jmp
jae
add
or
test
into
add
aas
out
fwait
outsb
sbb
jge
push
rorb
jb
jbe
jnp
add
inc
push
inc
sarl
lock
jns
std
fwait
nop
es
jp
sbb
shrl
mov
adc
arpl
mov
shlb
pop
and
rorb
sub
push
mov
cwtl
in
xlat
or
sahf
pop
lret
bound
pop
dec
add
ror
out
loopne
pop
lods
pushf
addr16
sub
add
xchg
sbb
mov
insl
or
xchg
xchg
xchg
sub
andl
sahf
mov
shrl
pop
in
pop
mov
movsl
pushf
mov
fists
inc
bnd
cld
mov
sub
mov
cmp
aam
or
fwait
jle
xlat
mov
xchg
xchg
xchg
cmp
xchg
mov
movsl
aad
mov
cld
lret
out
daa
movsb
xchg
stc
push
jno
leave
xor
scas
arpl
scas
cmp
sub
pop
adc
int
scas
popa
sbb
clc
lods
jge
aad
pop
arpl
jl
test
dec
and
clc
sub
lds
cmpsb
pop
mov
rcrb
out
or
aas
xchg
insl
in
rcrl
daa
movsl
xchg
jg
cmp
vandnpd
lret
in
in
sub
lcall
jnp
sbb
test
lret
jae
jl
es
mov
add
rolb
jp
inc
mov
and
into
imul
out
mov
xchg
aas
adc
jo
xchg
sub
orl
mov
mov
add
pop
test
das
gs
movsl
mov
popa
adc
std
daa
jl
imul
aam
es
movsl
pop
push
sub
scas
jb
sub
adc
pop
mov
sub
jnp
out
movsb
mov
and
cmp
mov
loop
adc
push
mov
inc
or
sbb
pop
out
movsl
int
mov
sub
pop
lds
fdivrl
pop
xchg
fwait
sbb
lahf
xor
bound
or
icebp
adc
cltd
or
jp
push
push
xchg
adc
insl
arpl
and
xor
ja
fists
mov
pop
dec
xchg
pop
jns
out
imull
loop
pop
xchg
sub
mov
pop
mov
call
mov
aaa
cs
xchg
in
and
les
sub
push
and
push
push
insl
lret
je
pop
mov
push
pop
bound
add
sub
enter
mov
lret
pop
ds
xchg
pop
int
ja
enter
test
sbb
xor
jecxz
shll
lods
pusha
inc
js
pusha
dec
faddl
mov
pop
xor
jmp
push
mov
and
xor
add
mov
adc
mov
sub
pop
add
mov
jecxz
push
fimull
push
ficompl
imull
in
std
mov
xchg
call
mov
jae
lds
clc
jle
out
sti
punpckhwd
push
jbe
jo
test
push
pop
mov
loope
jl
mov
dec
mov
out
dec
jnp
push
pop
std
stc
sbb
enter
scas
jne
sti
mov
jns
outsb
ret
in
push
ss
dec
fdivl
dec
lret
int3
addr16
stos
scas
pop
xor
jbe
jns
outsl
mov
or
xchg
iret
cmp
call
mov
pop
xor
pop
nop
aaa
or
je
mov
xchg
push
or
ss
in
or
cmp
mov
stc
mov
sbb
xor
dec
push
dec
das
mov
push
stc
jae
int3
inc
pop
lss
stc
xchg
ss
add
mov
mov
push
test
cmp
test
adc
mov
loopne
jmp
out
test
sbb
mov
mov
cwtl
add
push
push
rclb
jns
rcrb
stc
mov
cltd
mov
mov
add
cli
ljmp
fiadds
push
popl
lret
loopne
xor
xchg
mov
bound
sahf
jmp
adc
dec
outsl
mov
shrl
add
ja
cmp
lret
mov
cmp
notb
idivl
sets
xor
in
xchg
int
lods
bound
mov
push
shrb
ret
insl
and
add
into
cmp
rolb
mov
push
in
cmp
jo
xor
fstl
imul
repnz
and
sbb
dec
xchg
push
dec
scas
imull
jae
lahf
ss
popa
out
cld
bound
sub
mov
movsb
aaa
pop
loope
icebp
sub
ljmp
push
js
sub
sub
sbb
fdivp
popf
dec
cmpsl
test
fwait
xor
mov
test
jne
bound
enter
cld
sub
cmpsb
jbe
push
jp
mov
imulb
mov
lock
jg
pop
ljmp
pop
cmpb
fcomps
sbb
mov
aas
xchg
mov
bound
je
push
gs
cs
mov
jae
out
fcmovne
sub
loop
jp
inc
es
leave
cmp
push
mov
cmp
daa
jge
inc
pushf
pop
xchg
lock
xchg
cmp
push
fcoml
xchg
int
jmp
inc
xchg
xor
daa
andb
mov
test
out
pop
lret
outsb
enter
sbb
jl
and
aaa
adc
push
pop
cmpsb
add
sub
jecxz
mov
add
xchg
jecxz
int3
push
sbb
f2xm1
sbb
sub
pusha
push
jmp
sub
inc
jbe
or
jmp
fwait
std
test
xchg
lods
xchg
ret
call
ljmp
mov
push
call
mov
mov
dec
aas
mov
jl
ret
xchg
xchg
andl
call
js
lret
popl
push
push
push
lret
adcb
push
inc
loop
movsbl
fcomip
dec
jg
sub
lcall
mov
das
ja
movsb
in
sub
pop
mov
repz
out
xchg
aam
pop
sub
fucom
nop
idivl
jne
push
lock
xchg
fstl
jb
pusha
lods
dec
xchg
and
cmc
std
mov
and
int
cmp
and
inc
sbb
pop
dec
xchg
je
mov
cmp
sub
je
div
orb
and
cmp
xor
popf
inc
popf
daa
mov
pop
mov
stos
sbb
enter
inc
iret
ss
das
cmp
mov
arpl
std
mov
insl
xchg
jmp
xchg
push
adc
xchg
ffree
inc
lahf
sub
lock
adc
jo
js
lods
ljmpw
mov
jbe
or
icebp
jecxz
dec
xor
dec
mov
and
dec
add
hlt
mov
fstps
sti
mov
bound
mov
clc
xor
lahf
ret
lea
scas
dec
int
xchg
shll
out
std
hlt
cmp
sti
cmpsb
jecxz
jnp
stos
arpl
mov
insb
insb
movsl
addr16
and
mov
mov
mov
mov
iret
in
mov
jbe
cmp
rcrl
dec
mov
pxor
inc
pop
aas
sbb
push
sub
fs
ficoml
sub
notb
or
fbld
pop
push
mov
sbb
sub
xchg
sti
int
or
es
dec
sbb
call
call
outsl
vmread
pop
shr
pushf
enter
iret
pop
add
add
test
sub
fcoms
scas
shlb
das
clc
jns
rol
adc
cmp
fldcw
insl
jns
imul
add
jp
inc
add
dec
push
aas
xchg
and
popa
xor
inc
push
mov
sbb
push
xor
add
mov
sub
fists
aaa
xchg
nop
movsb
mov
cmp
jmp
push
add
jne
stos
dec
jecxz
xchg
pop
shlb
xor
mov
fs
mov
push
jl
cmpb
pushf
sbb
pop
ret
xchg
sub
sub
mov
mov
mov
in
popf
test
loope
add
sub
or
inc
push
rol
cld
xor
jge
lret
in
cmp
fdivr
dec
movsl
mov
jno
mov
mov
loopne
stc
aaa
dec
adc
loopne
insb
repz
fsubl
xor
addr16
scas
in
clc
das
xchg
xor
testb
mov
out
pop
xchg
jno
xchg
repz
shll
dec
xor
sbb
fwait
sub
pushf
ret
pop
fmul
inc
clc
fldl
decl
jno
inc
hlt
fimuls
cmpl
mov
xlat
in
jns
jmp
imul
gs
das
push
jnp
push
push
mov
enter
jb
jb
xchg
cmp
dec
and
lock
repz
mov
repz
cmpl
xchg
mov
inc
sbb
xor
or
test
clc
mov
movsl
jne
loope
push
lret
inc
xchg
je
xchg
lahf
mov
xor
scas
mov
rorb
in
push
adc
mov
mov
sbb
mov
fmull
xor
andl
push
into
lret
das
add
rclb
in
imul
pushf
sahf
mov
pop
xchg
xor
xsavec
xor
arpl
dec
mov
push
jge
cmpsb
cmpsl
lret
inc
mov
outsl
mov
xor
or
mov
test
int3
popf
test
stos
xor
test
jmp
dec
inc
push
sbb
jg
mov
jnp
dec
insb
imul
push
mov
or
arpl
pop
lea
ret
gs
jmp
cmp
pop
repnz
mov
negl
pop
mov
fdivrl
xchg
notb
enter
lods
test
and
loope
and
sub
push
or
pop
mov
aad
lcall
das
push
jmp
outsl
sub
scas
jo
pop
mov
jns
out
int
dec
or
sub
jp
dec
add
pop
movsl
or
imul
mov
mov
cmp
jns
call
in
push
xchg
pushl
incl
jne
or
shrb
sbb
fsubp
adc
sub
pushl
pop
outsb
add
sahf
cli
lods
dec
cmp
jb
and
aam
dec
xchg
test
push
push
mov
ja
iret
and
xor
repnz
pop
loop
scas
adc
cmp
ljmp
in
cmp
ret
ljmp
out
mov
sub
sub
pop
mov
sub
repz
push
sbb
sbb
pushf
das
insl
jg
fdivrl
pop
add
repz
jnp
xlat
jmp
inc
push
mov
and
mov
int3
xor
sti
inc
or
mov
push
lea
cmc
cwtl
in
push
sbb
ljmp
mov
adc
jmp
pop
lcall
jo
shl
aam
push
xchg
mov
hlt
xor
lahf
test
das
shlb
adc
int
ja
mov
inc
decb
sub
jl
lea
ja
xor
sbb
lods
push
and
fmuls
mov
cmp
dec
das
sarl
jge
push
cmp
fimull
sub
adc
fistpll
adc
lahf
lahf
lods
and
imul
adc
lods
push
clc
push
cmovs
push
bound
xorb
aas
js
aad
mov
add
aas
jb
cli
jns
imul
mov
mov
mov
dec
test
fistpl
xor
repnz
insb
mov
fwait
and
idivl
mov
sub
inc
dec
scas
repz
push
xor
adc
xchg
pop
pop
xor
outsl
mov
in
inc
outsb
mov
push
push
sbbl
mov
adc
sbb
xorl
xor
call
sub
cld
addb
das
aam
les
in
aaa
test
fidivs
sbb
in
cmp
push
mov
lahf
push
sarb
dec
pop
sbb
mov
clc
in
dec
pop
add
or
ret
jmp
xchg
je
iret
push
dec
xchg
in
push
sahf
sub
pop
xchg
cmp
cmpsb
sqrtps
lcall
sti
xchg
push
lods
pop
cmp
mov
ja
adc
cwtl
ret
inc
inc
jle
sub
out
shll
scas
into
mov
pushf
jo
adc
fdivrl
insb
and
out
dec
sub
xchg
pop
pop
insb
cmp
and
jg
cld
jg
xchg
xchg
fimuls
shlb
jecxz
pop
jns
pop
push
sub
frstor
pop
xor
xchg
lock
mov
faddp
mov
or
cwtl
lods
sbb
imul
cmpsb
xchg
lret
fidivrl
hlt
and
push
push
inc
arpl
inc
jnp
inc
push
fcmovbe
mov
pop
ret
push
cmp
imul
aas
sub
adc
sbb
out
add
shr
sub
adc
pop
int
hlt
adc
inc
jecxz
dec
mov
mov
cld
nop
arpl
dec
xchg
stos
sub
mov
int3
pop
fadds
addr16
out
push
adc
or
xchg
adc
cmpl
xor
popf
mov
aas
rorl
fs
inc
push
sbb
fs
int
sub
xor
ja
loope
iret
lahf
jns
cli
sbb
and
dec
outsl
jecxz
push
inc
das
sbb
xchg
jmp
sub
xchg
call
xchg
cs
mov
bound
sbb
repz
mov
cltd
mov
xchg
and
xor
cmpsb
mov
jp
pop
mov
sub
fcom
dec
pop
out
cld
lret
jne
push
sahf
sub
add
inc
out
test
imul
popa
testb
xorb
je
pusha
dec
call
fists
aad
mov
popa
icebp
repz
in
or
out
jge
hlt
mov
jno
cmp
pop
iret
in
sahf
xchg
adc
cmp
and
insl
xchg
inc
test
fiadds
divb
jl
movsl
outsb
push
xor
ja
inc
push
cmp
xor
fiaddl
cmp
mov
jnp
int
fdivrl
mov
pop
mov
xchg
adc
dec
dec
sbb
jbe
jmp
xlat
cltd
adc
orb
xchg
jle
ss
xorb
fwait
mov
mov
mov
and
daa
ss
mov
fstl
cmc
jl
imull
pop
adc
mov
push
outsl
inc
in
pop
sbb
pop
pusha
in
mov
inc
xchg
xchg
in
cmpsl
pop
jl
xchg
je
pop
dec
dec
bound
cmpl
movsb
or
sbb
ret
insl
jecxz
negl
lcall
dec
jae
xor
shrb
movsl
popa
sbb
iret
loope
push
shlb
or
or
adcl
pop
enter
dec
xor
fimuls
xor
cmpsl
in
push
dec
movsl
push
lcall
cmp
xchg
mov
je
and
rcll
adc
sub
xchg
mov
ret
mov
xor
mov
mov
sti
xchg
mov
xor
sub
sbb
mov
push
aad
rol
sub
inc
jbe
sub
dec
orl
in
push
push
fsubrs
inc
xor
mov
loope
xlat
loop
stos
in
mov
mov
jecxz
inc
imul
inc
adc
mov
ret
insb
scas
pop
into
andl
xor
xor
mov
mov
es
test
and
xor
fimull
mov
jne
dec
lods
xchg
push
scas
ss
daa
test
lret
lds
es
jns
mov
or
mov
into
in
stos
mov
pop
insl
dec
cmp
jmp
xor
ret
out
and
pusha
mov
push
sub
jb
les
les
mov
stos
daa
jmp
xor
cli
roll
dec
mov
lock
pop
push
test
adc
inc
and
cmp
jmp
lods
mov
xchg
fnstsw
shlb
lock
iret
ret
cltd
xchg
dec
mov
or
hlt
and
std
xchg
pop
adc
loope
lods
pop
mov
aaa
mov
addr16
dec
or
push
mov
xchg
xor
pop
cmp
sub
push
je
lods
stc
sub
jmp
pop
popa
rcr
mov
jno
shll
push
push
cmp
xlat
data16
shlb
mov
mov
inc
inc
das
shr
sub
fbstp
jo
imulb
lcall
sbb
fcmovnbe
sbb
jmp
lahf
out
pop
cmpsb
outsb
and
pop
or
sbb
sti
fs
xor
jae
scas
das
push
scas
push
xchg
push
or
lret
les
fwait
push
dec
xchg
ja
shl
mov
cmpsl
in
jb
adc
cld
repz
hlt
mov
stos
test
repnz
cli
or
dec
mov
mov
in
push
push
je
jbe
push
inc
or
repz
xchg
lods
and
or
sbb
pop
mov
xchg
testb
fs
popa
adc
push
sbb
add
lret
inc
pop
xor
int3
inc
mov
pop
inc
adc
xchg
hlt
mov
mov
in
outsl
jne
dec
mov
fmul
dec
sub
stos
and
push
add
or
into
or
mov
mov
mov
aas
stos
notl
loop
cmp
shlb
pop
in
rolb
jnp
add
sbb
fwait
mov
aam
cmpl
inc
xchg
fisubl
into
mov
aas
sbb
or
shlb
mov
mov
fucomi
stc
sbb
push
or
cwtl
or
add
fwait
insb
jne
or
jb
imul
icebp
sbb
bound
pop
mov
dec
notb
lret
cmp
pop
inc
push
jecxz
iret
lret
jo
mov
into
dec
xchg
subb
in
and
js
imul
xor
fsubrl
jbe
addb
lret
out
adc
jp
adc
push
imul
sub
das
cmp
int3
insl
mov
push
mov
aas
xchg
add
loope
je
push
and
fidivl
or
add
cmpsb
cmp
lret
cmp
popf
add
lret
dec
mov
cmp
fbld
push
cmp
test
dec
jg
in
xor
add
mov
mov
loope
insb
xchg
sub
sbb
xlat
mov
push
jno
aas
jne
and
ret
push
jo
jae
test
xor
scas
int3
dec
icebp
lock
shll
adc
repnz
loopne
repz
dec
xchg
lods
mov
pop
adc
xchg
pop
out
or
sbbl
mov
nop
cld
sub
aam
and
clc
adc
mov
les
dec
xor
dec
pop
mov
popf
mov
fs
sbb
shr
roll
into
movsl
xor
call
xor
sahf
call
addr16
mov
inc
xor
and
movsb
xor
iret
jle
lods
pushf
add
cmc
in
sahf
jp
hlt
lret
ljmp
clc
jae
and
and
pop
mov
pop
fdivr
and
jo
inc
mov
xchg
cmp
popa
mov
dec
aas
jo
ret
jmp
ret
xchg
not
test
sti
mov
fs
rcll
movsl
imul
inc
cld
jnp
mov
lods
xor
add
xchg
xorl
sahf
popf
jge
push
es
xchg
jmp
mov
or
outsb
ja
sarb
pop
mov
cmp
aaa
cld
sbb
subl
mov
daa
fisubrl
pop
stc
push
pusha
or
fs
add
insl
test
pop
pop
push
fs
cmc
and
mov
xchg
mov
jb
in
in
es
or
cmc
jae
pusha
mov
dec
insl
aad
add
sub
fs
popf
outsl
sbb
stos
inc
xchg
push
mov
pop
mov
int
lea
add
sbb
ror
jb
es
dec
movsb
cs
out
push
fcomps
and
adc
add
adc
inc
test
fs
mov
fdivr
cmp
in
mov
push
mov
in
mov
mov
push
movl
add
mov
or
test
push
or
xchg
push
bound
ret
je
inc
sbb
ss
add
lds
cld
cld
and
xor
jle
and
inc
call
adc
mov
cmp
push
sub
lret
rorb
jno
call
xchg
pop
sub
sti
sbb
inc
test
xchg
sbb
cmp
mov
and
rolb
adc
sub
push
hlt
lea
ret
mov
mov
pushf
lock
or
out
lret
push
out
mov
mov
inc
inc
pop
call
or
jns
mov
test
neg
xchg
mov
mov
cld
mov
mov
sbb
and
jnp
sub
pop
testb
imul
push
xor
movsl
xor
adc
lods
scas
or
adc
andb
mov
das
and
mov
xchg
inc
jg
in
mov
pop
movsl
div
iret
adc
push
xchg
adc
or
leave
sub
test
xchg
and
push
lcall
ljmp
lahf
push
sub
sbb
and
mov
iret
sbb
adcl
fistpl
js
xchg
lret
std
jnp
xor
xor
aad
fdivrp
movsb
push
add
loopne
ds
push
cmpsl
pop
add
or
or
mov
adc
sarb
leave
jge
jb
into
add
sub
mov
push
dec
jne
mov
cmp
ret
inc
mov
add
shld
pop
fdivrs
lret
push
push
shlb
inc
mov
roll
test
in
sub
pushf
mov
xchg
lahf
sahf
adc
jo
mov
test
pop
fldt
ret
cli
jmp
pop
or
popf
mov
mov
je
mov
cmc
cmp
lret
pop
sbb
jnp
ror
mov
or
fs
push
push
sbb
test
or
sub
das
sub
insl
sarb
stos
push
fldcw
rclb
sub
sarb
rcrb
inc
push
repnz
jg
pushf
push
mov
or
jbe
pop
cs
adc
jb
jmp
mov
lea
adc
data16
mov
or
sbbb
das
repz
and
popa
in
push
adc
sbb
fsubrl
aam
or
mov
or
in
lahf
insl
test
mov
repnz
sbb
inc
jmp
and
mov
jae
inc
fmuls
and
cmpsl
jnp
mov
ds
dec
jnp
cmp
adc
into
das
std
and
cmpsl
adc
iret
adc
test
or
jnp
aaa
cmp
sub
push
dec
cmp
mov
repz
pop
out
outsl
mov
in
mov
mov
mov
ret
lods
pop
inc
and
push
cmpsb
push
jmp
sbb
std
sbb
insb
cmp
jg
jns
jns
mull
add
bound
hlt
repnz
sti
roll
dec
addr16
nop
or
aas
ja
popf
xlat
cs
cwtl
dec
mov
cld
sbb
fnstsw
data16
out
iret
mov
test
gs
mov
cmc
loop
mov
mov
out
mov
leave
xchg
shr
movsb
js
sbb
int
xorb
test
out
adc
sbb
iret
add
dec
or
lods
in
adc
mov
mov
das
jmp
fs
insb
xchg
lds
push
pop
test
cwtl
hlt
sbbl
and
sbb
jne
fistl
push
or
scas
jnp
or
loopne
adc
xor
dec
mov
ret
loopne,pn
adc
or
imul
or
jg
mov
dec
popf
inc
shl
push
cli
lcall
jl
sbb
fidivs
cmp
cli
or
ljmp
test
in
jg
inc
sub
insb
pushf
xlat
inc
flds
sarb
xor
int3
pop
dec
dec
push
sub
xor
test
ja
cmp
negb
push
jbe
rep
mov
adc
sti
andb
sbb
lods
push
push
pop
js
sub
pop
inc
nop
mov
out
test
mov
and
lret
adcb
xlat
sub
adc
sbb
rcl
lock
mov
xor
repz
mov
js
mov
in
cltd
add
sub
shrl
mov
sub
popf
pop
adcb
leave
dec
push
movsb
test
mov
stos
jne
mov
push
fs
mov
jl
inc
jbe
xchg
mov
and
mov
xchg
lds
add
in
movsb
cmp
mov
ret
repz
fwait
add
push
jo
cmpsb
jae
fwait
outsl
aaa
xlat
dec
or
rclb
pop
mov
popf
add
push
repnz
push
test
cmp
cmp
sbbl
fistpl
add
sbb
add
shrb
imul
testb
jno
mov
aad
xchg
es
inc
add
dec
inc
mov
mov
jmp
jmp
lahf
nop
mov
push
dec
pop
mov
repnz
mov
mov
bound
xchg
dec
fldenv
or
jns
mov
not
sub
xchg
jp
cmpsl
stos
push
push
or
enter
or
pop
mov
lea
popf
xor
subl
in
inc
insl
call
mov
fldl
lret
ds
test
imul
and
in
fs
push
bound
pop
inc
push
aas
mov
cmp
je
add
mov
sub
lods
inc
ret
addl
jmp
repz
pop
shll
popa
into
add
les
std
xchg
xchg
call
lock
dec
adc
add
xchg
xor
aam
or
sub
adc
and
lock
jg
rcrl
cmp
or
cmp
inc
ret
jl
sbb
push
jp
icebp
inc
bound
aaa
add
mov
jmp
adc
sbbl
stc
add
push
out
mov
mov
xchg
fwait
dec
ljmp
cmc
pop
xchg
aaa
xchg
jg
xchg
test
js
mov
inc
dec
pop
shl
dec
cmp
scas
push
test
mov
inc
jle
scas
int
lret
rcl
sub
mov
dec
and
or
adc
push
mov
out
imul
add
fmull
inc
xchg
iret
incl
push
xlat
xchg
sbb
in
aaa
mov
fwait
out
jbe
pop
dec
jecxz
xor
faddl
fldt
in
cs
and
cmp
icebp
addr16
pop
enter
dec
outsl
or
jbe
into
movsl
jg
push
cld
cmc
dec
test
sbb
fadds
into
mov
out
xor
icebp
pop
mov
and
lcall
inc
fisttpll
pop
inc
mov
jb
sub
dec
data16
andb
xor
jb
cmp
and
sub
xor
outsb
cmp
cmp
ficoms
je
addr16
dec
sbb
or
data16
pop
push
xorl
movsl
push
in
popf
ret
imul
repnz
arpl
adc
dec
dec
out
fcompl
stos
dec
xor
adc
jne
or
mov
xor
ret
inc
dec
add
sbb
test
cmp
adc
addr16
out
xor
inc
test
inc
bound
and
pusha
xor
repz
jmp
andb
stos
mov
and
out
call
imul
xchg
test
ret
pop
ret
add
testl
pop
int3
or
mov
pop
and
fxch
pop
mov
int3
mov
inc
fs
test
or
add
bound
inc
mov
inc
shld
fmul
das
pop
test
xchg
into
jne
adc
adc
inc
jne
and
cmpsl
into
out
lods
xor
sub
fcoml
sub
leave
mov
dec
mov
pop
xlat
aad
push
mov
or
and
push
xchg
sti
jp
adc
int3
sub
inc
xor
addl
push
xchg
aam
sti
mov
outsl
xchg
repz
sbb
dec
stos
ficoms
fistpll
stos
pop
subb
lock
jns
sbb
lretw
test
adc
or
sub
out
stos
jmp
hlt
fcompl
mov
and
lret
mov
sub
and
inc
ds
xchg
cmp
lods
jb
lea
mov
jno
or
cmp
popa
cmp
je
cltd
inc
insb
mov
dec
unpcklps
adc
aas
stos
adc
pop
mov
es
mov
adc
ret
insl
movl
mov
fnsetpm(287
aaa
cmpsl
push
inc
insb
pop
sub
mov
pushf
pop
or
lods
or
and
adc
call
jmp
inc
fildll
inc
nop
mov
mov
jmp
or
cmp
lods
xchg
mov
xchg
jb
js
push
inc
xchg
lods
mov
and
mov
xchg
lea
add
std
cmc
cmp
or
pop
cld
fwait
clc
mov
jg
aaa
mov
mov
lret
in
cltd
pop
lods
jae
rcrl
sti
xchg
js
outsl
xchg
xchg
in
xor
sahf
jl
adc
iret
pop
xor
fnstsw
jmp
inc
fidivl
ja
sub
sahf
jns
mov
mov
stos
dec
xchg
icebp
std
mov
fbstp
mov
outsb
pop
sub
lcall
dec
je
dec
or
cmp
mov
sub
in
insb
fwait
jnp
cmp
mov
call
aam
push
lock
repnz
lods
pop
jbe
cmpsl
mov
sbb
out
jb
dec
outsl
or
fisttpl
inc
in
je
leave
push
sbb
inc
sti
cmp
ret
push
mov
pop
lcall
xchg
outsb
in
mov
or
xor
popa
pop
or
dec
stos
mulb
and
loopne
or
iret
fsubl
cmp
xchg
outsl
add
test
lds
mov
and
shll
pop
or
xchg
loopne
inc
fwait
ret
je
push
pop
je
popa
mov
int
inc
sub
mov
and
loop
aaa
out
and
test
push
add
jb
and
push
mov
fdivl
aad
fiadds
cwtl
sub
mov
dec
ds
imul
das
jg
xor
and
jp
insb
in
mov
xchg
dec
mov
cmpsl
xor
sub
iret
js
mov
lods
into
jne
data16
mov
jne
bound
xchg
stos
ljmp
adc
hlt
xor
or
shr
out
popa
daa
lods
ret
mov
lods
push
nop
daa
sub
arpl
mov
mov
xchg
subb
mov
cs
mov
inc
jmp
jnp
or
push
lods
xchg
xchg
scas
imul
ljmp
xchg
mov
insb
inc
enter
and
push
cmp
xchg
mov
std
sbb
call
and
pop
cmp
lret
mov
stos
mov
mov
pop
xchg
call
inc
scas
mov
enter
sub
mov
adc
or
ret
je
mov
aad
loope
loopne
fdivl
int3
insl
pop
mov
sub
adc
outsl
push
lahf
gs
bound
ret
sub
cltd
mov
mov
pop
in
push
orl
pop
jmp
push
or
and
xor
shlb
test
jno
adc
pop
mov
xchg
cld
ljmp
ss
mov
test
in
scas
ja
fbld
xor
test
sbb
inc
xchg
xor
int
pusha
xchg
pushf
adc
cmp
add
mov
out
jns
inc
mov
out
sbb
mov
cs
flds
stos
subb
nop
mov
testl
stos
js
sub
in
xorb
test
int
cmp
or
push
inc
mov
fists
pop
shlb
jne
shlb
mov
mov
shlb
pop
jle
aam
movsl
mov
inc
addl
outsl
ja
stos
jle
enter
bound
outsb
cmp
arpl
out
xor
and
mov
push
xor
mov
in
loopne
lret
pop
push
add
bnd
je
outsl
push
rcrw
jo
xor
scas
stos
cmp
mov
mov
lret
cwtl
bound
add
insl
ja
fistps
jle
adc
xchg
pop
mov
cmp
loopne
mov
rclb
imul
mov
cmp
dec
and
testl
sbb
pop
inc
lods
dec
sbb
xchg
stos
dec
addr16
lea
pop
pop
mov
jbe
rol
orl
and
popf
dec
lahf
orb
jmp
xor
arpl
mov
adc
push
or
fnop
lock
inc
cmp
pop
sub
mov
dec
or
lahf
add
jp
clc
rorb
mov
push
pop
sti
jbe
dec
and
iret
sahf
int
in
int3
imul
mov
and
add
loope
inc
jmp
mov
jo
push
pop
cld
addr16
sub
or
push
cmpl
or
mov
jns
imul
pop
bound
fsubp
mov
in
dec
pop
pop
repz
adcl
cmp
xchg
lods
daa
sub
jg
dec
add
cs
cmp
les
dec
or
xor
jb
and
outsl
stos
addr16
pop
sti
add
xor
or
jge
mov
imul
or
aam
ret
lahf
mov
jbe
xchg
shll
mov
sbb
movsb
mov
test
inc
and
shlb
scas
mov
test
mov
xor
push
scas
pop
add
cmp
imul
int3
out
cmp
and
push
aam
sbb
push
sbb
scas
test
add
cmp
jne
shlb
dec
sub
outsl
mov
xor
sahf
sbb
and
dec
xor
pop
add
pusha
dec
or
adc
pop
in
dec
push
xor
cmp
sub
notb
sbb
outsl
leave
xor
xchg
dec
fldl
push
clc
xor
jns
loope
ret
mov
mov
ret
aad
divb
mov
push
adc
movsl
mov
jnp
lcall
lahf
xor
inc
test
mov
shl
mov
adc
int
scas
ror
and
inc
into
jecxz
xchg
or
cmp
sbb
sahf
icebp
jo
fucom
mov
rorl
aad
or
lds
push
jmp
ljmp
psubsw
lock
adc
iret
scas
inc
push
jmp
add
insl
and
and
or
in
ss
addr16
and
aad
mov
push
sbb
call
jp
push
lret
pusha
js
popa
fisubrs
insb
aas
jo
sub
jge
outsb
inc
scas
repnz
jo
clc
sub
cs
lods
xlat
js
cmp
pop
mov
mov
push
pusha
inc
xchg
push
pusha
js
js
jge
andb
pop
jno
jmp
out
mul
pop
xchg
cmp
rcrl
sub
jle
xor
push
sub
push
mov
cmpsb
and
adc
ljmp
mov
xchg
mov
xor
or
mov
fadds
xchg
mov
ja
push
mov
aaa
gs
push
ds
mov
push
aad
arpl
into
dec
stos
inc
loopne
xor
adc
imul
jge
arpl
add
mov
pushf
rcrb
imul
cmp
data16
addl
pop
fwait
xchg
stos
mov
add
push
jo
or
clc
inc
popa
loope
adc
inc
adc
jle
sti
mov
enter
enter
xchg
aad
jnp
hlt
lds
out
mov
lret
adcb
sbb
bound
orb
push
cli
mov
dec
lahf
sub
xor
bound
sbb
sub
js
jb
outsl
pextrw
cmp
xorl
xlat
js
test
add
je
sub
sbb
sbbb
stos
pop
xchg
add
movsb
popl
andb
mov
mov
fisubrl
push
popf
pop
lds
inc
filds
int3
sub
mov
jb
outsl
imul
mov
ret
ds
out
scas
std
fdiv
stc
xchg
fildl
clc
outsl
xchg
push
stc
movl
pusha
jo
ror
cmp
mov
cmp
js
mov
out
jmp
ljmp
dec
add
mov
js
sub
std
into
enter
jecxz
xchg
cmp
data16
out
mov
stc
daa
push
or
insl
aad
pop
fidivs
push
neg
std
jo
test
cmp
push
pusha
and
shrb
je
repz
pop
idiv
fneni(8087
je
jnp,pn
test
push
jecxz
aad
mov
pusha
dec
and
pushl
js
xor
add
push
jns
sub
cmc
dec
rcll
ja
out
or
dec
adcl
test
add
or
dec
out
aam
or
xchg
rcr
scas
pop
ljmp
cmpsl
push
testl
push
push
push
dec
or
iret
shr
sub
add
jle
out
mov
pop
inc
dec
sub
inc
call
and
out
icebp
sub
sub
stos
aam
imulb
std
mov
xchg
jnp
jg
hlt
arpl
loope
lret
mov
adc
xchg
inc
orl
adc
sbb
jge
pop
pop
out
xchg
jnp
sbb
sub
pop
stos
mov
inc
xchg
lret
lods
sub
add
cmp
pop
inc
int
push
sbb
data16
lods
sarl
hlt
scas
xor
call
sbbb
and
ds
into
test
cs
xlat
dec
lock
mov
or
lret
in
ret
jg
mov
test
std
push
cmp
jmp
loopne
out
mov
jmp
ds
dec
call
mov
fldl
sbb
rcrb
std
scas
xor
sub
in
stc
pushf
or
inc
call
lea
inc
mov
imul
sub
mov
ret
add
loope
es
aaa
mov
push
mov
fs
sub
mov
jp
push
dec
iret
cmp
fsubl
mov
shlb
ret
lock
adc
popa
outsl
push
dec
in
push
shlb
xchg
repnz
dec
mov
and
push
mov
lock
movsb
pop
ret
push
or
and
xchg
fmull
mov
xchg
cwtl
sbb
into
jge
sbb
fwait
pop
aaa
decb
inc
or
enter
icebp
popa
test
xchg
xor
imul
gs
nop
sub
sbb
pop
mov
fidivrl
sbb
xor
outsb
adcl
jbe
pop
mov
jmp
mov
lods
fdivp
mov
and
inc
push
shrb
hlt
mov
shrl
or
mov
mov
data16
mov
inc
push
movsb
add
jns
or
dec
imul
pop
mov
ja
es
mov
dec
pop
pushf
imul
into
dec
add
loopne
pusha
out
pusha
cmc
xor
orb
and
fcoms
in
sub
cmp
mov
xchg
adc
adc
add
cs
xor
outsl
sub
shll
ljmp
movsw
push
and
xchg
inc
dec
xchg
jnp
mov
mov
in
dec
pop
outsl
add
sub
outsb
dec
jmp
mov
push
sahf
nop
xor
les
xor
cwtl
cmp
xchg
repz
mov
pop
out
in
lock
sub
lock
lock
push
scas
jge
mul
repnz
xchg
clc
push
sbb
movsl
movw
cmp
popa
sbb
xchg
jnp
dec
das
enter
scas
cmovne
adc
fmull
lds
mov
rdtsc
fisubs
xor
xor
pop
stos
jns
daa
insl
cmpsl
and
sub
pop
lret
push
cmp
arpl
in
iret
adc
in
mov
data16
xchg
jb
mull
test
pushf
scas
push
enter
test
or
pop
mov
test
dec
in
fiadds
les
xor
fstps
js
fdecstp
in
sub
jl
pop
pop
mulb
cld
cmp
bound
repnz
stc
add
in
insb
aas
rcrb
sbb
pop
add
mov
ficoml
out
cwtl
cmp
xor
stos
mov
cmp
mov
scas
sarb
jb
in
mov
aas
dec
mov
stc
clc
daa
and
test
fs
xor
jle
mov
cmpsb
adc
xchg
mov
mov
movsb
and
lret
aas
fcoms
insb
outsb
dec
adc
lods
cmp
adc
nop
xchg
in
xchg
nop
daa
xor
sbb
cmp
xor
bound
add
rcrl
xchg
aaa
or
fs
inc
test
mov
sbb
pushl
je
push
ret
add
dec
push
xchg
fistpll
inc
shll
xor
mov
mov
dec
nop
mov
sbb
jo
xchg
popa
push
jl
xchg
adc
iret
lods
out
fstpl
jbe
scas
adc
repnz
adc
pop
pop
sub
out
testb
rcrb
adc
sar
in
sbbl
and
test
pop
pop
xchg
inc
das
rcr
sti
and
sub
jg
xor
inc
jns
adc
pop
in
mov
stos
daa
adc
mov
sub
jmp
arpl
mov
out
lods
mov
pop
sbb
rcl
push
push
xchg
lock
xor
jg
lods
add
and
dec
cs
out
fisubrs
xchg
cmp
dec
xchg
jg
add
arpl
fdiv
cmpb
insb
test
adc
dec
in
test
cmp
sub
push
mov
sbb
add
and
imul
mov
add
mov
mov
jne
push
aad
rorl
cmpsl
jo
and
popw
icebp
mov
dec
in
or
push
or
aas
loope
nop
mov
inc
rcll
dec
mov
inc
in
lea
cmp
inc
jp
push
adc
call
xchg
sbb
cwtl
out
clc
mov
nop
sub
pop
xor
or
mov
cmp
mov
cs
stos
mov
adc
adc
std
out
jp
rcrb
mov
mov
sub
or
jecxz
add
jmp
les
pop
imul
xor
int3
xchg
mov
lea
mov
sbb
icebp
test
std
add
cld
jge
xor
dec
movsl
jp
dec
sbb
insb
pushf
add
inc
xchg
std
loope
mov
mov
enter
bound
stos
dec
or
test
cmp
mull
cmpsb
repz
lret
adc
std
fisubrs
jl
aas
pop
mov
cltd
mov
mov
insb
add
push
loopne
adc
jl
insl
dec
adc
imul
int3
dec
lods
pusha
xchg
push
scas
outsl
andl
sub
jno
outsb
stc
jge
nop
lea
xlat
xlat
popf
add
mov
and
insl
insl
jp
sti
popa
aad
mov
pop
lods
insl
sar
dec
add
in
sub
int3
dec
in
ja
and
jb
push
inc
test
pop
xor
xchg
cmp
outsb
neg
xchg
mov
bound
scas
lret
inc
js
sbb
pop
push
push
inc
sbb
ds
xorl
mov
jmp
cmovno
mov
out
sub
fildl
mov
adc
jg
mull
movsb
lods
mov
xor
sbb
ds
jp
mov
ds
and
sub
int
xorl
mov
pop
fildll
fwait
adc
outsl
daa
dec
cmp
leave
lret
mov
push
mov
hlt
pop
daa
push
jmp
leave
and
and
xor
push
sub
xorl
insb
lods
mov
icebp
and
push
out
push
adc
add
pop
dec
xchg
xchg
data16
jmp
xchg
inc
dec
pushf
push
scas
push
insl
or
dec
add
or
mov
push
test
add
adc
cmp
mov
cs
xor
sub
fldt
cltd
leave
or
cli
jmp
out
add
out
cwtl
sti
xchg
rorb
imul
push
in
mov
pop
add
cmp
enter
jae
mov
or
loop
ds
loope
or
xchg
mov
mov
mov
in
lahf
mov
jmp
xchg
mov
dec
pop
add
mov
push
pop
push
adc
fsubl
outsb
aas
ljmp
movsl
fwait
mov
int3
mov
fsqrt
lock
int
ljmp
and
add
pop
adc
jmp
out
mov
shlb
in
push
mov
sub
popl
pop
loope
jmp
mov
test
dec
sub
xchg
jmp
sbb
push
fmuls
popa
xchg
aad
mov
xchg
xor
sahf
push
dec
pop
sub
movsl
ljmp
jae
in
incl
mov
mov
xchg
fnstsw
icebp
or
lds
mov
in
and
iret
inc
mov
test
std
test
fdivrs
addr16
mov
jge
fadd
addr16
push
lret
add
leave
mov
aaa
shld
mov
adc
test
scas
repz
mov
mov
lds
fldl
xchg
mov
or
cmpb
shll
lahf
and
fstpt
push
adc
fistpll
aad
sbb
add
iret
jecxz
dec
movsl
out
bound
std
stos
mov
sbb
pop
mov
aas
pusha
pushf
mov
cli
inc
gs
outsb
ds
hlt
pop
std
jmp
pushf
adc
ret
loopne
test
cli
sarl
cmp
sub
mov
ljmp
repnz
les
jmp
jp
mov
lods
or
xorb
cmp
mov
subb
jl
sbb
cmp
cmc
in
dec
fcomp
push
sbb
rorb
mov
mov
int
or
ret
inc
rcll
nop
and
clc
push
push
and
rorl
and
push
xorb
xchg
xchg
cwtl
adc
movsb
xchg
push
push
sbb
add
test
mov
and
or
xchg
adc
dec
xorl
insl
inc
loopne
in
jg
sub
aas
loope
out
aas
into
imul
xor
data16
sbb
sbb
push
mov
push
lods
add
adc
fstpt
fldl
cmpsb
sbb
incb
dec
xor
rclb
adcb
push
and
arpl
dec
mov
fdivrp
imul
sbb
push
fisttpll
movsb
cmovle
loope
mov
lret
xor
enter
mov
mov
sarl
cmp
cmp
nop
or
test
repnz
xor
push
mov
inc
mov
pop
lahf
pop
lds
mov
xchg
call
in
pop
push
mov
aam
xor
ljmp
adc
pop
xor
mov
fstpl
lcall
sarb
pop
inc
insb
flds
icebp
call
sahf
aam
dec
sbb
out
popf
nop
xor
idiv
inc
or
das
outsb
insb
jb
push
les
out
and
mov
std
sbb
jno
mov
es
add
push
enter
sub
or
sbb
xor
xchg
fwait
xor
lahf
leave
inc
out
test
xor
lds
mov
popa
std
lea
sarl
int3
cmc
cmp
movsl
lcall
shrb
outsb
sbb
cwtl
pushf
mov
shlb
ljmp
pop
mov
push
mov
sub
dec
stos
and
mov
dec
rcll
jbe
push
pop
fs
add
mov
sarb
add
js
addr16
pop
push
pop
lods
mov
test
jp
dec
or
jge
movntq
out
loop
fwait
mov
sbb
mov
and
fdivrs
lock
cs
cs
fadds
dec
jle
aam
sbb
iret
cmp
sub
imul
sbb
rclb
pop
mov
mov
mov
mov
sub
add
in
int3
int3
fisubrl
jge
pop
fmuls
sub
pop
push
sbb
rol
add
mov
cmp
mov
insl
jge
ljmp
fdivl
sbb
inc
mov
sarb
insb
sub
shll
stc
pop
lock
mov
mov
jne
mov
dec
sub
cli
mov
mov
imul
pushf
pop
fbstp
cmp
mov
pop
int3
inc
les
ds
pusha
arpl
gs
jnp
jno
pushf
mov
out
and
push
sti
mov
pop
scas
movsb
insb
les
add
loopne
imul
in
push
add
mov
jecxz
stos
out
adc
aad
sbb
in
loopne
sti
fchs
cli
lret
test
mov
xchg
mov
imul
cmpsb
xor
pop
xor
or
xchg
imul
sub
xor
add
inc
xchg
or
mov
test
js
mov
arpl
popa
int
jecxz
cld
inc
icebp
in
notl
cmp
xchg
insb
sti
and
jecxz
mov
mov
sar
rcll
ds
in
mov
daa
test
sub
mov
sub
cmpsl
pop
popa
in
outsl
loopne
dec
movsl
in
inc
push
push
mov
inc
and
dec
cmp
jmp
xor
add
adc
push
scas
cmc
push
cli
xchg
fs
xchg
andl
pop
sahf
mov
movsl
mov
sbb
mov
rcll
popa
sbbb
jmp
xchg
mov
mov
cmp
andb
pop
xor
pushf
xchg
lods
lods
mov
rorb
sub
outsb
out
pushf
ret
xchg
pop
mov
mov
or
mov
cwtl
aaa
ds
mov
ret
leave
arpl
rorl
push
mov
adc
ss
arpl
xchg
sbb
push
xchg
and
adc
fcmovnbe
insl
notb
rolb
in
in
jo
dec
jge
pop
in
cli
push
repnz
shlb
in
arpl
sub
lcall
xor
and
mov
insl
popa
cld
jbe
adc
ds
inc
cmp
rcll
sub
mov
cmp
or
stc
xchg
pop
lods
enter
cmpsb
mov
xor
mov
mov
pop
mov
dec
in
sub
mov
lock
inc
jge
les
xchg
subb
push
inc
ret
enter
xchg
dec
pop
mov
push
xchg
mov
lret
and
std
cld
jb
fmull
push
bound
scas
pop
cwtl
add
in
or
lahf
or
add
loop
addl
sub
add
xor
imul
push
lock
popl
dec
push
push
scas
les
cli
cmpsb
xchg
cmp
inc
iret
lea
mov
and
out
scas
cmp
test
dec
aaa
aas
cmp
call
gs
test
cli
cmp
test
outsb
popf
inc
xor
ljmp
ds
addl
nop
or
add
add
xor
daa
imul
mov
idivl
dec
das
lret
ficomps
pop
out
sbb
push
pop
xchg
sub
fidivl
bound
and
push
pop
or
sti
cmp
inc
arpl
mov
push
loopne
daa
add
clc
fstpl
out
mov
lret
sub
scas
push
aad
mov
in
lret
sbb
pop
shlb
dec
insw
flds
jp
fnclex
mov
sub
mov
mov
movhps
fimull
add
jno
pop
lea
dec
outsb
ds
mov
and
int3
and
stc
lods
call
fisttps
out
addl
loop
outsb
sbb
aaa
pushf
pusha
ret
xchg
and
bound
push
jne
test
pop
stos
xorl
xchg
cmp
pusha
jae
sub
jb
add
icebp
push
adc
xchg
xor
push
jl
lahf
pop
mov
cmp
xor
xor
mov
inc
jno
andl
std
pop
mov
lcall
sbb
in
out
subl
xchg
xchg
cmp
jle
cld
mov
cmp
pop
cmp
cmp
dec
in
mov
int
inc
clc
sbb
aas
inc
xchg
subl
fbld
sub
add
aam
insl
ret
fsubrs
mov
cld
outsl
sub
sub
pop
mov
adc
xor
es
adc
push
cmp
or
sbb
lcall
cli
pop
shlb
add
lock
cmp
nop
cltd
sub
fstpl
xlat
popa
in
loope
inc
push
cmp
jecxz
popl
cmp
or
xchg
xor
xchg
or
add
mov
std
mov
rol
jbe
xchg
mov
loope
shll
sbbb
or
cmp
mov
push
pop
xor
add
fsubl
nop
and
xchg
fisttpll
add
mov
scas
cmp
dec
dec
mov
rorb
lods
enter
in
push
xchg
sbb
jnp
in
push
jge
scas
es
aam
orl
cs
push
fwait
jle
les
scas
fidivs
adc
std
outsl
insb
push
jnp
mov
pop
std
fwait
rcll
stos
cmp
jl
cmp
cltd
xchg
push
xor
jle
jp
inc
add
mov
or
or
jle
push
ds
sub
pop
clc
sub
pushf
adc
push
sub
push
dec
adc
int
and
dec
scas
add
mov
adc
mov
mov
xchg
inc
jecxz
cs
fisubl
or
sub
jl
sti
data16
ret
adc
insb
icebp
or
std
inc
mov
pop
jbe
and
xchg
dec
outsb
xchg
and
mov
dec
sti
subl
cmp
jecxz
repz
testl
testb
inc
scas
cwtl
lret
enter
dec
push
pop
xchg
or
cmpsb
cmc
fucomi
negb
aam
inc
in
sbb
xor
fisttpll
inc
fs
push
js
mov
adc
in
into
loopne
xchg
loop
push
call
jmp
add
fwait
add
sar
sub
out
es
adc
pop
and
vpsubb
pop
mov
xchg
xor
loopne
xchg
jae
testb
jmp
popa
jl
out
add
push
in
pop
mov
inc
dec
push
fdivr
mov
cmpsb
mov
mov
clc
add
mov
fisubl
xchg
jp
xchg
or
jle
arpl
jmp
iret
int3
xor
int3
int
xchg
into
dec
mov
sbb
ret
cmp
nop
xor
cmp
ja
iret
int3
cmpsb
pop
push
pop
dec
add
jns
xchg
jae
push
fwait
push
jne
xchg
in
ljmp
mov
lret
cli
out
insl
mov
jns
test
xchg
stos
mov
xchg
jl
xchg
xor
in
xor
rolb
and
mov
mov
and
dec
imul
loop
xchg
movsl
les
imul
dec
imul
xor
lcall
push
mov
fisubrs
pop
push
cmpsl
cmp
neg
dec
rolb
addb
enter
cwtl
nop
push
test
fs
mov
jae
xchg
rcll
adc
pushf
sarl
sub
xchg
lahf
movsb
andl
inc
in
mov
jle
dec
fstps
jno
sbb
arpl
ds
fimuls
pop
pop
inc
mov
and
jmp
and
mov
test
out
lahf
add
fwait
sbb
xor
sub
mov
aaa
inc
shrb
fldz
in
pushf
mov
push
std
in
rcl
inc
or
pop
xor
rcll
inc
mov
out
ds
mov
out
cld
push
push
mov
pop
nop
xchg
stos
out
addr16
stc
xor
mov
add
push
jge
and
bound
cmpl
loope
lods
pop
mov
pop
inc
movsl
mov
push
push
pusha
mov
cmp
repz
movsb
xchg
mov
xlat
jge
cmc
ljmp
push
aas
dec
inc
jmp
xchg
fwait
scas
pop
mov
call
and
je
and
arpl
lods
lods
push
xor
sti
fs
sbb
lds
xchg
mov
jae
pop
pop
ds
lret
jmp
xor
push
add
dec
lret
mov
mov
and
aam
inc
rcr
push
pushf
xor
ret
mov
sub
or
ja
mov
addr16
rolb
push
rcrl
mov
rorb
sub
mov
sub
xor
in
push
xor
inc
jne
aam
or
movsl
stos
xchg
int3
fwait
je
rclb
iret
ljmp
icebp
mov
pushf
jecxz
daa
sbb
ja
jae
aad
cmp
mov
out
adc
lcall
daa
lcall
xchg
jge
int
or
sub
ret
stos
mov
sub
int
clc
add
mov
push
cmpb
leave
ficompl
mov
pop
jnp
jbe
sub
fcmovu
int3
in
mov
and
mov
out
mov
lret
cmpsl
jbe
cli
daa
pop
aaa
sub
pop
cli
lock
lcall
clc
and
mov
mov
out
lds
in
mov
loop
faddl
adc
out
mov
fbld
inc
sub
xor
ficoms
ret
dec
les
pop
clc
inc
dec
jnp
sbb
mov
cvtdq2ps
sub
xor
andb
cmp
cmc
test
scas
cmp
rclb
imul
mov
mov
sub
in
repnz
stos
jno
cmc
inc
aas
insl
stos
xlat
gs
add
push
fdivr
les
add
test
xchg
add
test
outsb
fistpl
cmp
scas
insb
out
popa
imul
je
xchg
rorl
add
popa
loope
lcall
inc
lea
or
push
je
mov
jp
cmp
mov
inc
push
sub
bound
lahf
mov
pop
pusha
push
call
sbb
adc
mov
push
loop
adc
or
loope
lahf
mov
pop
inc
or
sub
aam
aaa
jmp
clc
pushf
lods
jp
lahf
jb
js
stc
pusha
dec
movsl
in
test
ror
pop
outsl
push
cmp
cmp
jmp
mull
call
dec
cmp
jg
data16
movb
jge
jmp
repnz
sarb
jno
in
add
int3
dec
inc
sahf
mov
pop
dec
cmp
inc
adc
mov
ljmp
mov
push
xchg
mov
repnz
push
push
dec
push
stos
dec
jnp
insl
stos
or
mov
jo
dec
das
cli
push
fcom
mov
sub
jmp
xchg
loope
add
jge
add
mov
mov
sub
mov
jb
dec
js
pop
adc
insb
lret
in
sub
fsubrs
out
call
scas
mov
sahf
iret
test
pop
jb
es
cmp
stos
fnstcw
pop
das
aas
push
sbb
fnstcw
mov
dec
jp
leave
fsts
inc
mov
fildl
ja
cli
xchg
fistl
ror
test
mov
roll
mov
cld
pop
clc
in
scas
or
test
dec
aas
mov
imul
cmp
gs
daa
mov
xchg
sbb
mov
lods
cmp
add
jne
in
jnp
std
add
scas
mov
popf
shr
xor
jnp
pusha
mov
push
pop
xchg
cmp
push
ficoml
sbb
hlt
lret
pop
cmpsb
add
in
leave
pop
xlat
sbb
pop
jo
arpl
pop
ret
call
fs
push
adc
pop
push
pushf
mov
lods
push
movsl
pop
call
cs
push
nop
fcoms
mov
aad
lret
std
mov
pop
jo
sbb
in
pop
fnstsw
adc
inc
cmp
jecxz
cs
icebp
jne
push
push
mov
or
sub
enter
shrb
add
sbb
mov
cmp
add
je
xchg
ret
mov
scas
stc
inc
and
fcomps
cmpl
pop
mov
out
push
jo
nop
cmpb
lock
lahf
jge
aad
mov
outsb
jne
push
xchg
std
lret
fnstenv
sbb
xchg
out
inc
shlb
sub
and
fisttpll
mov
xor
mov
mov
repz
jne
jbe
cmpsb
mov
and
cmp
sub
xchg
nop
jbe
sbb
icebp
stos
push
mov
lock
sti
cmp
popa
aaa
or
lock
mov
sahf
btrl
mov
popl
dec
sub
add
add
aam
or
pop
in
sub
xor
push
mov
sbb
das
sub
pop
bound
dec
and
cmp
cs
aam
dec
movsl
les
es
lahf
mov
sub
sub
add
sahf
js
push
xor
popf
neg
rcll
mov
lds
inc
mov
outsl
mov
in
fiadds
clc
inc
sahf
outsl
in
outsl
mov
pop
xchg
fmull
push
sbb
sub
push
je
xorl
sub
cmp
mov
push
cmp
mov
add
out
cmp
push
jne
push
data16
mov
adc
iret
mov
mov
xchg
notl
adc
sbb
jmp
or
pushf
rorb
mov
sub
fldenv
rorl
or
aad
xor
mov
daa
aas
xchg
stos
pop
sbb
loope
test
dec
push
mov
inc
add
xor
xor
popf
xor
sub
hlt
xlat
cmpsl
inc
pop
cmpl
bound
push
or
shlb
fs
mov
sub
push
lret
pusha
mov
outsl
lcall
scas
popf
enter
push
jnp
jl
xchg
and
mov
jnp
rcrb
sbb
mov
mov
push
jecxz
dec
icebp
cmpsb
sub
jo
mov
rorb
cli
es
iret
cmpsb
ljmp
adc
jmp
jno
and
dec
push
xchg
and
xchg
aaa
fdivrs
shrb
dec
je
push
ja
or
jp
insl
xchg
sub
adcb
push
xlat
cs
or
std
jle
mov
shlb
sub
inc
ss
xor
ret
jge
bound
add
or
add
dec
xchg
adc
scas
imul
push
out
scas
mov
pushf
pop
aas
hlt
mov
xchg
mov
push
add
or
sbbb
call
xor
sbb
test
notl
cmp
lret
insl
jl
cltd
push
push
and
jnp
clc
in
pop
aad
aaa
dec
pop
xor
das
bound
xor
jl
sbbb
pop
adc
hlt
mov
xor
lea
shll
or
sub
jb
mov
adcb
scas
push
mov
fxch
je
rcr
inc
ljmp
sub
pushf
xorl
xchg
rorb
dec
cmpl
push
out
in
leave
sub
mov
mul
movsb
ror
jne
ret
mov
pop
clc
pop
rep
inc
repnz
pushf
sub
sbbl
jg
and
mov
pop
pusha
incb
aas
pop
push
inc
and
adc
jns
sbb
or
aaa
cmp
loope
lea
pop
cmp
addr16
push
test
cmp
adc
jbe
sub
xchg
pushf
mov
ret
out
fs
repnz
jo
cwtl
push
in
add
repz
mov
xor
lods
ds
fildll
sub
push
lret
add
mov
or
jmp
inc
dec
leave
ror
hlt
and
cli
inc
idivl
ljmp
out
and
xor
pop
dec
mul
lods
or
bnd
icebp
dec
cmp
daa
in
or
test
pop
mov
lret
iret
ljmp
push
sub
push
gs
sbb
cmpsl
incb
inc
out
movsb
cmp
pop
push
lock
mov
sti
fmull
cmc
dec
out
mov
jnp
test
inc
cmpb
das
in
cwtl
outsl
xor
xchg
call
ja
je
push
lea
divl
into
push
pop
ficompl
filds
push
pop
repnz
mov
jbe
xchg
jo
and
add
mov
mov
iret
addr16
aam
lahf
divl
xor
mov
andb
sbb
iret
ja
lahf
jne
pop
lods
mov
inc
cmp
pushf
adc
daa
xchg
lock
lahf
daa
arpl
dec
pop
xor
cmp
sbb
scas
lretw
pop
jecxz
adc
je
dec
sbb
jle
push
sub
xchg
adcb
ljmp
lret
jp
lcall
ss
pop
jmp
clc
xchg
lds
lcall
push
inc
pop
jbe
arpl
sub
test
out
sub
push
lret
hlt
in
aas
notl
mov
and
sub
cmpsb
push
pop
shlb
dec
dec
shrb
std
push
jne
scas
xchg
jno
insl
test
enter
pop
adc
cmc
xor
sub
pop
or
xchg
stos
outsl
js
sahf
lret
sub
stc
ja
pushf
and
mov
mov
sahf
daa
ss
mov
jmp
xchg
ror
jne
xchg
add
or
inc
pop
dec
push
enter
adc
add
push
subl
pop
cld
adc
sbb
lock
rcll
jb
mov
xor
or
sahf
pop
push
sbb
cs
mov
pop
push
inc
nop
sbbb
fsub
add
adc
inc
stos
mov
scas
sbb
sub
inc
and
and
add
mov
insl
jecxz
sub
bound
fwait
stos
jb
mov
je
sub
and
cmp
bound
lods
fs
scas
mov
daa
lds
xchg
test
jp
subl
out
idivl
test
dec
mov
or
aad
fadds
and
subb
leave
sbb
out
jne
scas
dec
sbb
pop
add
lock
loop
pop
jmp
insb
pop
aad
fdivrp
xchg
loopne
xor
loope
sti
shl
mov
insb
ljmp
nop
imul
gs
cs
sbb
add
js
out
pop
data16
push
rorl
mov
cmc
popf
add
icebp
je
push
mov
lds
or
and
icebp
cmp
cmpsb
push
and
jle
dec
in
icebp
inc
je
push
inc
mov
pop
hlt
out
xor
sbb
add
adc
add
stos
inc
inc
aam
pop
into
ja
mov
cltd
push
mov
pop
or
outsl
xor
and
adc
aam
fs
and
xchg
js
fildll
jno
pop
sub
imul
jno
mov
inc
aas
mov
into
mov
xchg
ds
inc
stos
add
cmpsb
arpl
dec
cmp
call
xor
in
out
stos
add
xchg
inc
sub
cli
sbb
sahf
insb
pushl
aaa
and
movsb
sbb
and
or
stos
out
std
push
mov
inc
outsl
xchg
mov
ja
fadds
ss
outsb
aam
sti
je
xchg
push
adc
dec
popa
add
mov
pop
arpl
pop
mov
je
and
in
cmc
sti
movsl
inc
adc
imul
or
push
and
pushf
lea
mov
stos
fistps
repnz
mov
cmp
in
pop
mov
fidivs
outsb
daa
stc
jmp
idivb
adc
pop
push
js
push
dec
sub
cmpsb
mov
xchg
adcl
flds
test
insl
add
and
cmpsl
testl
push
or
aas
pop
push
out
pushl
dec
inc
add
sbb
movsl
or
cmp
or
inc
stos
or
mov
repz
fcmovb
cmpsb
add
xchg
rorl
mov
jae
cmp
dec
push
ss
jne
insb
mov
cmp
xchg
imul
or
cmpl
xor
cmp
mov
push
sahf
mov
mov
mov
popf
dec
cmp
test
push
jl
push
pop
cld
movsb
pop
add
fcmovb
mov
mov
cmpsb
cmp
dec
rcll
imul
ror
movsl
cmpsl
enter
jl
xadd
jae
push
call
subb
cmpsb
jmp
daa
or
cli
jg
ja
pop
bound
js
int3
and
xor
aaa
push
xor
fs
sbb
int
mov
inc
jmp
loop
int
mov
pop
call
and
fistl
jno
pop
sbb
cmp
dec
sub
test
fwait
mov
aam
dec
add
adc
sti
imul
pop
dec
test
mov
mov
lods
cs
jo
mov
push
inc
test
sahf
xchg
into
cmc
stos
insb
test
scas
mov
dec
push
outsl
pop
cwtl
sub
adc
dec
jno
out
push
addl
in
sub
data16
mov
enter
out
push
xchg
fcmovbe
pop
cmp
or
sbb
outsb
mov
mov
jmp
jmp
sbb
xchg
stos
mov
shlb
adc
jns,pt
inc
mov
push
cmp
popa
pushf
jbe
test
leave
lock
inc
stos
sub
aaa
pop
pop
inc
push
jl
or
repz
inc
jg
sbb
fstpl
loop
into
push
dec
jmp
fists
stc
loopne
dec
mov
xor
push
xchg
outsb
adc
push
dec
jne
or
mov
test
cmpsl
test
in
ret
vpmuludq
into
loope
xchg
aaa
mov
pop
sbb
loop
mov
loopne
add
pop
jo
lahf
lcall
dec
arpl
popa
mov
sahf
lods
data16
es
mov
xlat
pop
sbb
cmp
push
repnz
cld
lret
sbb
lahf
dec
in
outsb
gs
mov
lods
mov
aad
aad
fisubrl
sbb
into
aas
hlt
ja
insb
push
test
cltd
addb
insl
inc
sahf
dec
mov
add
fsubrl
xchg
adc
dec
xchg
out
insl
mov
ds
dec
lret
sbb
jle
into
repnz
sub
fsubr
dec
pop
sub
rcl
shlb
mov
inc
jl
cld
dec
movsb
push
pop
adc
insl
gs
fimuls
add
iret
addr16
dec
push
jmp
aas
mov
pop
mov
mov
rclb
pop
imul
repz
test
sahf
and
daa
mov
add
mov
ss
in
into
pop
cmpsb
sub
cli
hlt
jno
or
cmp
jno
dec
negb
inc
or
mov
shll
pop
jo
sub
mov
and
inc
jmp
ss
inc
push
addl
cmp
or
stos
jecxz
jns
je
inc
fsubrp
in
cmp
mov
or
mov
add
leave
cmp
stos
pop
ret
stos
fcomp
incl
cs
arpl
out
leave
ja
testl
add
mov
sub
stos
mov
enter
fidivl
call
aaa
mov
sub
es
add
movsl
fisubrl
pop
cltd
mov
loope
sahf
sub
and
mov
push
cmpsb
cli
mov
adc
test
sti
dec
ret
inc
jae
lcall
jo
ds
daa
cmpsb
inc
test
insl
push
stos
loop
fstp
xchg
fwait
mov
aam
loop
js
stc
js
jns
sbb
fwait
cwtl
test
dec
mov
or
imul
out
aas
in
xor
lret
cltd
lds
fisttpll
lret
stos
addr16
mov
shlb
leave
dec
xchg
dec
test
cmp
shl
dec
loop
push
cmc
xor
fnsave
inc
pop
sti
les
or
cmp
jecxz
xchg
mov
adc
cmp
xor
mov
push
and
jmp
pop
pop
cs
fisubrs
sar
xchg
xor
insb
push
inc
inc
stos
push
clc
loopne
pusha
mov
les
sub
fwait
sub
or
inc
shlb
sub
adc
dec
lods
pop
iret
cwtl
ret
push
mov
xor
or
and
sbb
sbb
sub
mov
aaa
push
mov
gs
pop
outsl
jb
out
push
cmp
imul
push
mov
and
jbe
cmp
sbb
lea
and
mov
jno
jle
adc
sbb
jnp
mov
cmpsb
arpl
roll
lret
mov
push
push
orb
js
test
ret
mov
inc
push
arpl
or
and
adc
loopne
iret
sbb
rclb
cwtl
fsts
outsl
xor
mov
rorl
bound
dec
jno
sbb
xor
mov
sub
out
xchg
mov
iret
cli
xchg
inc
adc
test
sub
repnz
rcrl
and
mov
insb
nop
pop
mov
mov
repz
pop
or
mov
mov
mov
aas
popf
sbb
fwait
mov
push
inc
and
stc
icebp
cli
or
xchg
adcl
jle
mov
and
push
push
cmp
xchg
cmc
pop
jb
mov
popf
lahf
and
int3
xchg
or
popf
sbb
xchg
and
ja
test
sub
push
or
mov
cmp
enter
push
rorl
psubsw
movd
jb
test
mov
jmp
addb
sub
jecxz
inc
arpl
pop
mov
mov
sub
insb
mov
jg
cmpsb
jne
dec
in
insl
shlb
sub
pop
xor
std
and
jecxz
popa
mov
inc
cld
adc
pop
adc
popl
sub
push
clc
xor
mov
mov
daa
fidivrs
mov
jo
out
dec
push
xchg
aas
and
sub
movsb
cld
cmp
sub
cmp
dec
lret
adcl
fcmovnu
jp
sbb
cmpsl
scas
xor
pushl
imul
sar
aaa
fisttpll
ficomps
adcb
enter
lret
sbb
addl
rclb
dec
or
xor
cwtl
sbb
mov
sbb
pop
mull
mov
int
bound
cmp
out
and
ja
enter
imull
or
lds
lret
adc
incb
js
adc
fldenv
ror
jno
ja
xchg
jo
mov
or
nop
cs
addl
cmp
jl
daa
aam
icebp
mov
pop
cmpsl
lods
dec
lock
bound
std
sbb
dec
int
std
add
cmp
jb
ss
sub
push
pop
and
dec
fidivl
std
cmc
add
pop
out
mov
lcall
ss
dec
mov
jne
xchg
shrl
out
adc
fiadds
int
insl
daa
inc
fcom
ret
adc
and
fs
sbb
mov
jbe
std
push
mov
in
fldenv
loop
add
or
mov
mov
mov
pop
pop
rorb
adc
and
cs
jecxz
dec
orb
push
cwtl
sbb
pop
inc
xchg
xor
out
pop
push
stos
fstps
gs
jae
insl
or
loop
cmpsl
adc
ret
ret
xor
lahf
or
int3
stos
jbe
out
inc
inc
sbb
lcall
in
subb
popf
dec
xchg
movzwl
inc
fs
cs
push
and
imul
stos
mov
dec
sub
int
pusha
clc
std
je
push
imul
sbb
mulb
ljmp
call
sub
jbe
inc
and
mov
xchg
mov
add
dec
sbb
jl
cmp
sbb
pop
xor
cltd
and
data16
loop
bound
sarl
shrb
push
je
std
mov
test
hlt
sti
insb
mov
rcrl
icebp
push
xorb
movb
pushf
lods
not
push
cmp
cld
je
xchg
das
mull
xchg
cbtw
dec
es
popa
sub
push
xchg
aas
enter
inc
and
push
xor
cltd
xchg
mov
popf
add
sub
lahf
cmp
ret
addr16
std
cmpsb
dec
call
or
mov
lea
lret
jno
mov
sbb
icebp
das
daa
and
roll
cld
lahf
mov
ss
fldenv
in
or
cmpsb
push
cmp
inc
in
pop
pop
insb
and
xchg
xchg
inc
cltd
wrmsr
movsl
popf
fs
leave
sbb
pop
push
push
test
cmp
sbb
stc
test
psubsw
ficoms
or
xchg
fcompl
in
or
fcmovnu
jo
dec
aam
and
jnp
add
scas
dec
filds
mov
lods
mov
in
clc
addr16
stc
adcl
mov
xor
mov
adc
movsl
adc
mov
sarl
jl
sbb
in
popa
insl
dec
inc
hlt
daa
rorb
cltd
insl
popf
imul
mov
out
cli
dec
sub
mov
pop
mov
dec
mov
inc
sub
sub
pop
imul
add
and
and
jne
ja
sbb
std
xlat
jo
jl
xchg
loope
lock
lahf
mov
xor
in
imul
mov
sbb
leave
fidivrs
rcll
dec
pushf
inc
sub
movsb
lods
out
nop
or
mov
test
lea
fs
loop
cmp
adc
sub
out
addr16
cmpsl
jne
push
push
ror
push
jb
dec
push
rcll
sahf
rcrb
pop
stc
sbb
stc
arpl
mov
push
enter
pop
loope
fs
cmp
jp
dec
xchg
sub
mov
mov
push
clc
and
test
aaa
jge
scas
bswap
fidivs
and
stos
and
aad
mov
jle
jle
icebp
bound
call
fcomps
fists
add
mov
jnp
addr16
out
xchg
pop
push
cmc
push
test
lock
popf
sub
cmc
leave
pop
mov
pop
sub
lods
sub
leave
cmc
mov
sub
jno
xchg
xchg
fiadds
fs
xchg
imul
pop
fs
dec
lahf
adcb
ret
call
cwtl
ja
mov
roll
push
lea
jbe
inc
jle
loopne
mov
sahf
mov
mov
fld
mov
mov
mov
sbb
in
les
xor
pop
mov
mov
sub
fisttpl
inc
add
out
testl
mov
outsl
sbb
gs
mov
push
jmp
and
and
cmpsl
mov
sbb
in
bound
js
sbb
ret
push
mov
js
addr16
das
out
inc
jmp
test
adcl
inc
push
cli
cmpsb
cmp
dec
cmp
imul
aas
pop
cmp
push
push
notl
mov
lea
mov
xor
dec
inc
ficompl
repz
push
mov
sbb
adc
cli
in
shrb
and
stos
int
mov
je
and
cmp
rorl
or
ss
ficomps
lret
arpl
ss
dec
adc
arpl
nop
cli
or
xor
inc
ljmp
sahf
test
fistl
adc
decl
pushf
xchg
popa
pop
pop
mov
cmpsl
cmp
insb
out
fcomip
std
dec
frstor
xor
dec
cmp
int3
leave
inc
imul
add
mov
cwtl
fisubrl
pop
loop
mov
pushf
xor
cmpsb
cmpsb
pop
push
test
mov
lret
push
fdivrs
mov
mov
movl
mov
mov
test
inc
xchg
ficoms
jbe
js
fimuls
inc
cld
cs
mov
and
ljmp
aam
mov
ret
push
xor
outsl
fldl
jne
or
popl
subb
das
lret
test
imul
lock
jl
dec
arpl
add
fs
xchg
les
mov
mov
leave
pop
sbb
or
divl
int
sbb
push
mov
sbb
cld
dec
inc
and
adc
out
imul
repnz
jg
int3
xchg
adc
or
test
pop
mov
mov
adc
mov
sbbl
out
shlb
mov
mov
sub
aam
sbb
mov
cmp
aas
jnp
push
addl
into
cmp
jmp
insl
icebp
inc
in
mov
fimuls
inc
adc
sbb
scas
adc
xor
in
xor
pop
add
aas
adc
shrl
sub
icebp
lcall
repnz
cmp
push
pop
sub
add
ljmp
in
cmpsl
lahf
sti
fwait
mul
int
call
ljmp
testb
mov
inc
in
mov
push
test
ds
xchg
dec
mov
mov
or
xchg
mov
jmp
push
jg
bound
mov
jne
rep
js
test
ja
push
xor
fsubp
cmp
pop
mov
lock
inc
pop
les
lret
xorl
mov
push
lods
cmp
arpl
mov
sub
sar
dec
mov
adcb
inc
jp
mov
and
jne
insb
sub
jne
fsubrs
or
xor
adc
sbb
or
add
cmpsl
movsl
in
xor
cmpsl
cs
pusha
dec
jge
pusha
fdivl
adc
clc
jnp
stos
nop
cmp
pushf
and
cmp
inc
adc
mov
dec
hlt
mov
lods
pop
andl
mov
jg
out
xchg
mov
or
pushf
arpl
mul
mov
cmp
leave
xchg
push
fwait
je
call
sub
jle
jnp
mov
scas
movsb
dec
sti
stc
sbb
push
leave
push
subl
lock
in
fbld
loope
inc
imul
lods
jae
fistl
jl
xchg
scas
test
es
popf
enter
push
and
fs
cli
or
xchg
sub
scas
sbb
cs
mov
mov
dec
pushf
loop
outsl
mov
les
icebp
sub
fcoml
out
lret
ja
push
notb
xchg
mov
addr16
add
repz
jp
stos
pop
fwait
lods
out
popw
mov
stos
lods
mov
and
scas
outsl
mov
jge
sbb
mov
inc
jns
pop
and
insl
xchg
inc
sub
repz
rol
outsb
jecxz
and
jge
std
mov
add
ret
jnp
iret
test
xor
ljmp
mov
xchg
not
inc
xchg
out
push
sahf
sti
pushf
pop
ret
movsl
xchg
ds
inc
ss
not
stc
add
cld
push
push
add
cmp
or
sbb
pop
add
mov
lret
mov
rolb
lret
ret
fs
lcall
push
sub
fsubrs
jbe
addr16
xchg
jg
sub
fsubs
fimuls
dec
sbb
mov
pop
scas
xchg
fcompl
in
mov
sub
jl
jecxz
xchg
cmpsl
cli
in
pop
dec
dec
mov
test
mov
lcall
idivl
jecxz
repz
mov
inc
in
cs
mov
add
clc
or
or
jno
cs
sbb
cwtl
inc
arpl
ret
fbld
push
and
dec
xchg
inc
test
sub
fwait
or
outsb
mov
mov
pop
aam
push
dec
and
loopne
mov
popf
inc
loopne
cwtl
inc
sub
or
ljmp
aaa
int
test
and
notb
aaa
and
and
lock
leave
mov
mov
ret
inc
jge
mov
cmp
xor
lret
test
mov
xchg
add
pop
push
pop
cmp
adc
rorb
shll
repz
scas
xchg
sub
sub
jmp
xchg
gs
sarb
lods
xor
rorb
es
and
pop
fcom
adc
cld
push
loop
xor
cltd
aam
push
lret
test
add
subb
cs
test
add
loop
setbe
in
mov
jp
sarb
enter
push
push
and
xor
sbb
dec
stos
jmp
sbb
sbb
les
in
fdivl
dec
xor
jecxz
pop
test
xor
xor
push
and
mov
fisttps
push
aam
or
dec
mov
cmpsb
mov
jbe
fldcw
sub
dec
push
aas
mov
sub
sub
push
dec
repz
lret
inc
aas
lock
push
dec
lods
inc
lret
ds
scas
sbb
jmp
lock
and
jmp
jbe
jg
xlat
cmc
fnstsw
mov
fcmovbe
ret
sbbb
aad
stos
mov
sarb
imul
fsubrs
rolb
sub
imulb
iret
push
lods
dec
stos
cmp
push
ljmp
fwait
pop
lock
xor
xor
push
outsl
mov
lahf
pop
adc
pop
je
pop
pop
icebp
movsb
lock
mov
lock
jp
xchg
sub
ja
sub
test
shlb
mov
shrb
cwtl
or
loop
nop
xchg
push
sbb
jo
ss
loope
mov
xor
or
dec
push
cmp
call
in
ljmp
jb
daa
lret
mov
aad
icebp
or
shrl
sbb
pushf
add
dec
aas
cmp
gs
lods
ss
pushf
and
pushf
aaa
int
cld
push
in
into
jmp
mov
mov
mov
aam
xlat
sbb
std
sub
push
outsb
add
cmp
fiadds
or
xchg
inc
into
jbe
mov
pop
in
scas
adc
adc
scas
outsb
mov
push
xchg
in
dec
mov
push
jns
loope
push
cmc
mov
fwait
jmp
jbe
or
pusha
stc
inc
aas
js
push
pusha
shrb
cmp
pop
cmc
mov
test
xchg
ljmp
and
mov
add
lret
js
aaa
inc
pop
lock
pop
jo
roll
add
sbb
fmull
jnp
orb
ror
cmp
sub
xor
in
or
fistl
rorb
subb
xchg
outsb
outsb
aaa
sub
scas
jp
adc
dec
mov
sub
les
xlat
lret
inc
xchg
outsb
pop
out
sub
test
js
adc
jae
fistps
mov
push
cld
sarl
pop
adc
outsl
int3
push
sub
mov
addr16
jno
addr16
adc
call
dec
mov
inc
dec
cld
ja
int
nop
add
popa
je
or
adc
xchg
lods
aam
inc
je
sub
ret
outsl
lret
sub
pop
sub
or
mov
jmp
jecxz
jmp
sub
adc
xchg
push
mov
pop
or
xchg
adc
cs
outsb
stc
in
jmp
xorb
sbb
orl
fcoms
daa
inc
mov
nop
jg
call
pop
mov
in
lret
xor
data16
push
and
int
rorb
jl
pushf
cmp
cwtl
push
loopne
hlt
xchg
arpl
sahf
orb
ja
xlat
insl
lds
pop
stos
xchg
adc
inc
mov
inc
fs
mov
imul
js
lock
sub
pop
or
add
xor
lods
dec
lods
jno
sub
enter
int3
or
mov
cs
fwait
gs
outsl
out
sub
negl
pop
jp
jo
cmp
and
jmp
mov
sbb
cmpb
jmp
and
dec
inc
adc
shll
jmp
xor
cmp
daa
cli
sub
imul
cmpsb
pop
xchg
fwait
ret
movzwl
je
and
nop
mov
sub
cmp
add
xchg
and
addr16
ljmp
xchg
aam
add
pop
mov
lods
mov
ljmp
xchg
pop
rorb
subl
push
sub
aad
sti
jmp
jg
xor
xchg
add
pop
je
lahf
xchg
sahf
xchg
sbbl
sbb
mov
mov
fwait
lcall
sbb
into
stc
sub
lock
adc
xchg
push
shlb
mov
xchg
xchg
imull
add
pop
outsl
mov
loopne
out
and
add
cmp
imull
in
scas
pop
cwtl
inc
int
incl
mov
add
pop
xor
xchg
adc
jo
adc
sub
andb
sbb
xor
and
sub
cmp
pop
lret
add
movsl
push
sahf
movsl
push
dec
and
addr16
sahf
ret
mov
rcl
mov
enter
pop
aad
or
mov
sar
push
mov
addr16
call
jle
lret
sub
rcrb
xor
inc
leave
addr16
cmc
pop
loope
pushf
movb
sbb
gs
jecxz
jmp
cmp
jno
sarl
add
sub
sbb
mov
mov
dec
rolb
or
or
xor
sub
add
add
movsl
mov
lret
bound
dec
jmp
sbb
mov
stos
xor
cmpsb
xchg
xchg
jg
xor
orl
dec
sbb
dec
ss
cwtl
mov
dec
inc
lods
ljmp
int3
xchg
cwtl
push
aas
fstpl
out
xor
mov
add
push
mov
jle
andb
jmp
movsl
push
push
dec
aaa
mov
add
xor
imul
rcll
sahf
in
fiaddl
push
adc
mov
pushf
xlat
xchg
cmp
sbb
jge
jbe
sbbb
add
pop
ror
sub
cli
popa
pop
jae
imul
sbb
loop
cmp
dec
in
sub
ss
loope
popf
ljmp
stos
stos
adc
xor
out
in
mov
xchg
pop
gs
dec
pop
push
or
cmp
jnp
add
or
sub
movsb
icebp
cmp
jno
or
inc
sub
xor
push
lock
push
xor
or
ret
mov
and
add
or
pop
fwait
imul
pop
into
xor
jno
jb
les
inc
cmp
dec
movsl
js
fisubl
decl
cmp
cltd
push
mov
loopne
and
stos
sbb
inc
loop
mov
js
sti
xchg
jmp
jno
pop
addr16
mov
add
xor
mov
ret
mov
jp
ret
mov
sbb
loopne
push
push
jno
notb
aaa
pusha
das
and
imul
xchg
pop
mov
inc
imul
ret
lods
lret
mov
and
or
ss
out
mov
xchg
push
stos
sbb
mov
enter
mov
pop
nopl
iret
addr16
mov
jno
adc
lret
mov
lret
lods
dec
pushw
cwtl
mov
icebp
or
rcl
dec
cs
pop
or
sti
pop
scas
inc
push
ret
add
adc
jle
mov
push
popa
jnp
push
popa
dec
xchg
aas
cmp
pop
out
jmp
fistpll
or
sar
ss
leave
call
test
mov
cmp
rolb
ss
and
notl
or
cmp
add
sbb
clc
ja
lock
mov
jae
mov
dec
and
outsb
arpl
and
test
test
jnp
or
inc
fsubp
leave
movsl
leave
sbb
add
dec
add
dec
loop
lds
sbb
lcall
popa
xor
fcomps
push
out
int
rorb
add
in
imul
pushf
adc
xor
fwait
mov
shll
icebp
xor
aad
xchg
adc
xchg
xchg
rcrl
and
and
or
push
test
pop
jl
inc
jmp
xor
cli
lret
out
arpl
fmull
andb
xchg
test
fimull
jp
mov
rorl
rclb
ds
jmp
pushf
out
fnstsw
cmp
or
cmp
and
mull
mov
adc
pop
dec
jne
or
push
rcl
inc
lret
sub
adc
movsb
push
add
stc
ror
mov
rorb
mov
xchg
test
push
stos
inc
mov
testl
cmp
jp
rcr
addr16
scas
push
hlt
call
jbe
int
mov
in
mov
lds
xor
lods
test
or
outsb
push
jae
adc
mov
adc
push
sbb
loopne
mov
jnp
xchg
push
dec
test
add
mov
lock
jb
bound
or
adc
dec
xor
movsl
pop
out
push
xor
lds
jns
and
mov
push
mov
push
add
jmp
ja
sub
push
ss
pop
lods
mov
xchg
inc
mov
ret
add
inc
test
stos
push
xchg
dec
and
leave
andb
shlb
ret
bound
in
jo
fwait
leave
xchg
cmpl
and
lds
lds
mov
insl
es
or
loope
sbb
rcrb
sbb
loope
push
add
lods
es
leave
ljmp
pop
mov
icebp
ss
dec
dec
movb
es
pop
test
mov
dec
adc
fcomp
cmp
sbb
stc
sbb
mov
lret
es
loope
cmp
jbe
mov
jo
jae
cmp
aam
loope
test
pushw
ud2
mov
call
movsb
aad
movups
outsl
add
or
fwait
mov
shlb
xchg
sub
push
fbstp
mov
jg
cmp
out
mov
add
sahf
xchg
xchg
mov
jge
dec
jmp
or
mov
cmp
cmpb
or
jp
xchg
xorb
outsb
xchg
sbb
inc
imul
imul
cli
outsl
popa
sub
scas
xchg
repz
repnz
jb
int
aas
jmp
and
add
or
pop
inc
push
in
push
adc
add
adc
mov
dec
lock
loop
shl
shll
test
je
lret
jbe
pop
mov
mov
in
push
iret
aam
or
outsb
imul
std
stos
out
jecxz
test
mov
in
push
int
push
jg
nop
movsb
sbb
xchg
inc
cmpsb
rcl
pop
xchg
gs
lods
insl
jno
out
aaa
or
push
arpl
adc
adc
dec
in
fisubrl
jb
sub
scas
lahf
orl
into
insl
dec
scas
mov
ret
add
jmp
or
pop
in
xor
mov
and
cmc
mov
or
lds
dec
les
cld
xchg
arpl
and
call
sub
cmpsl
pop
fldenv
testb
mov
dec
js
or
mov
mov
popl
mov
push
lds
mov
mov
inc
jne
mov
rcr
pop
hlt
push
add
mov
xchg
xor
lock
xchg
das
call
dec
lods
dec
imul
sarl
push
inc
aad
movl
data16
cmpsl
pop
nop
pop
or
into
adc
je
aam
movsb
sbb
test
andb
in
fdivrl
imul
pop
mov
pushf
sti
lods
mov
das
call
mov
add
adcl
ficomps
dec
cltd
sub
lcall
sahf
cmp
stos
addr16
mov
dec
jmp
lods
lcall
xchg
es
pop
shlb
jmp
fidivrl
dec
dec
push
call
xchg
les
mov
test
mov
push
xchg
inc
push
mov
stos
cli
hlt
mov
add
dec
sub
es
dec
adc
stc
mov
or
rcll
enter
dec
leave
cmpsb
jp
sub
inc
jg
cmp
std
sub
inc
mov
xor
js
inc
add
cltd
jnp
scas
aam
jg
es
ds
pop
and
lcall
push
ljmp
sub
push
adc
cmp
sahf
int
cmp
add
in
ret
js
call
pushf
out
sub
divl
idiv
pop
cltd
jo
cltd
int3
mov
lods
mul
mov
ret
mov
addr16
leave
xor
cmp
sub
pusha
nop
lcall
sbb
mov
pop
lock
mov
loopne
dec
add
sbb
mov
jg
aaa
mov
add
xchg
dec
pop
pop
inc
repz
cmpsl
out
sbbb
mov
in
pusha
xchg
xor
pop
dec
lods
sbb
in
loopne
xor
cld
xchg
xchg
push
jecxz
mov
xor
sub
stos
mov
jb
decb
das
sbb
fs
xchg
mov
insl
push
repz
inc
outsl
rcrl
repnz
lcall
aas
push
mov
mov
mov
mov
xor
data16
xor
xchg
out
hlt
mov
mov
lea
inc
fistpl
push
jnp,pn
jge
fistpll
push
data16
std
subb
push
mov
add
xchg
cmp
sub
rcll
push
pushf
decl
insb
jb
or
xlat
sub
push
push
out
mov
decl
mov
push
iret
mov
imul
aaa
adc
roll
mov
mov
jl
jns
aam
scas
loop
aad
repz
jnp
add
rcll
mov
mov
xor
frstor
jo
xor
sti
mov
std
cltd
arpl
shr
ss
xor
cmpsl
cld
cmpsb
or
add
pop
inc
lods
jp
clc
mov
aas
adc
push
xorl
jge
xchg
outsb
enter
push
mov
jae
stos
rorl
scas
or
mov
mov
dec
arpl
mov
add
or
fninit
loopne
out
mov
xchg
push
jnp
pop
ret
mov
pop
mov
repz
andl
int3
es
movsl
dec
lods
xor
call
clc
sarl
popa
lods
xorb
mov
mov
sahf
pop
jne
and
mov
popa
xor
mov
dec
push
out
jp
shlb
sbb
xchg
in
sub
cmp
fidivrl
sahf
inc
mov
mov
lret
lret
jg
testb
outsb
scas
test
inc
es
aas
pop
cmpsb
mov
sbb
mov
sbb
cmp
mov
cmp
sub
add
mov
movl
jecxz
cltd
sub
sbb
inc
jo
imul
cmp
or
rcl
cltd
int
fnstcw
mov
sub
imul
jle
clc
cmp
adc
unpckhps
cmpsl
and
shlb
mov
mov
lds
mov
mov
lock
jns
cmp
fildl
and
lret
pushf
lret
push
jle
fisubs
fidivl
call
mov
jns
dec
inc
repnz
daa
fs
xchg
data16
sbb
mov
andb
mov
mov
popf
bnd
sbb
in
por
rclb
cmc
xchg
ficompl
cli
sub
jge
in
aaa
xchg
push
je
xchg
xor
mov
addb
imul
mov
inc
movl
push
jmp
fnsave
inc
jecxz
push
jge
push
xchg
xchg
xchg
out
xchg
add
lods
lock
mov
mov
push
dec
ja
shr
adc
js
js
lods
dec
xor
push
xchg
cmp
lea
sub
pop
ds
pop
insl
push
leave
decl
into
pop
xchg
jmp
cmp
pop
adc
mov
shll
gs
stc
push
jae
xorb
dec
popa
xchg
stos
and
subl
fstpl
mov
push
out
lea
leave
mov
repz
push
int
xchg
sub
add
inc
and
repz
jp
mov
scas
inc
cmpsb
test
sbbb
mov
mulb
jecxz
jge
or
lahf
lcall
cmpsb
push
mov
jle
jns
or
lods
lods
dec
and
add
pop
cmp
adc
sbb
sub
test
fidivs
std
or
imul
xor
mov
test
sbb
out
inc
out
sub
xor
and
cmp
push
std
or
arpl
sbb
rcl
ljmp
mov
testb
cwtl
les
pop
xchg
mov
sub
mul
xchg
loope
testb
fsubrs
pop
and
xor
orl
fsubs
fwait
push
mov
in
mov
fwait
incb
cmp
jno
mov
jnp
test
push
mov
push
incl
ss
mov
stos
aaa
stc
idivl
mov
and
push
scas
popa
jl
bswap
or
lea
adc
jae
and
out
popa
dec
add
mov
cmp
pop
popf
neg
ret
push
pop
xchg
repnz
push
sbb
cmp
mov
ret
mov
mov
sub
push
pop
test
sbb
out
mov
cmc
js
popf
sub
dec
push
sub
les
xchg
lods
lods
cmp
rorl
lds
repnz
nop
hlt
or
std
fldl
jg
mov
dec
lahf
sahf
cmpsb
xor
inc
xchg
fadds
pop
das
push
ljmp
cld
inc
jp
sub
mov
pusha
mov
mov
mov
mov
mov
cmc
sahf
mov
mov
inc
pop
push
push
lahf
ljmp
mov
pop
adc
fsubrl
add
in
pusha
ss
jg
push
xor
rcr
and
xchg
addr16
dec
leave
jbe
dec
aas
push
add
imul
mov
sbb
cmp
sahf
mov
jne
pop
mov
dec
test
aaa
in
sub
bt
pop
cmp
in
daa
mov
out
jp
dec
cmp
inc
out
test
xchg
js
mov
inc
dec
mov
incl
push
out
inc
movsl
push
loop
mov
cmp
inc
mov
daa
sbb
xchg
mov
jp
pop
fdivr
pop
inc
orl
add
or
inc
xor
sbb
push
jecxz
cmpsb
mov
fists
cltd
push
cmp
mov
mov
stc
xor
mov
dec
pop
mov
dec
fstpt
sub
pop
push
stos
xchg
in
jns
cmp
out
adc
jno
pop
push
out
cmp
xchg
sub
xchg
cmp
add
push
inc
insl
jbe
pop
jbe
adc
pop
leave
std
lret
enter
les
sbb
sub
pop
pop
inc
jl
imul
sbb
or
sbb
das
nop
xlat
das
out
mov
punpckhwd
out
add
mov
dec
arpl
jg
fwait
cmpsl
rol
add
pop
dec
dec
daa
stos
pop
sahf
fwait
xorl
stos
pop
aaa
or
andl
ja
pushf
aaa
jge
jns
or
mov
fldt
lock
lcall
out
les
out
mov
cmp
cmp
xor
ret
mov
mov
push
or
or
movb
filds
stc
mov
cmp
aas
shrl
mov
add
fwait
sbb
cs
and
inc
popa
pop
pop
add
jne
or
aad
or
add
xchg
mov
pop
js
ret
jmp
sbb
xchg
js
lds
rorl
inc
shll
or
adc
lods
enter
scas
and
pop
dec
push
and
jb
jp
scas
in
aas
cmc
mov
loopne
popa
ds
mov
xchg
sbb
inc
cmpsl
xchg
pop
ljmp
add
sbb
jns
in
inc
adcl
enter
shll
pop
pop
lds
rcr
cmpsl
es
ret
bswap
sbb
push
mov
and
repnz
fsubrs
int3
loop
adc
ljmp
scas
mov
mov
inc
arpl
inc
jle
xor
cmp
out
pusha
daa
test
push
xchg
jo
push
pop
mov
xchg
test
push
or
fidivl
in
inc
cwtl
jbe
nop
aas
fcmovnb
xor
xor
jnp
ja
adc
js
orb
out
std
pop
mov
mov
loop
mov
jecxz
pop
sub
cmpsl
es
xchg
push
hlt
lods
lcall
test
cli
jl
push
dec
rolb
cld
pop
shll
div
lods
fdivrl
mov
cs
cmp
mov
push
pop
dec
push
ret
pop
mov
lahf
cld
xor
add
mov
jns
daa
cmp
jge
and
lcall
sub
rol
psubusb
neg
test
aas
negl
adc
ffree
mov
addr16
xor
sbb
imull
xchg
mov
push
jecxz
cmc
lret
sbb
or
adc
aas
test
push
pop
add
in
or
ss
cmpsb
xor
dec
ljmp
hlt
popa
out
movsb
repnz
push
jne
mov
repnz
scas
loop
repz
pusha
push
mov
mov
int3
or
and
jno
test
ss
sahf
dec
aam
scas
add
int3
daa
fcomip
xor
and
jo
sahf
xlat
xchg
outsl
aas
jne
mov
and
ja
jle
bound
lcall
into
outsl
inc
roll
repz
jg
xchg
js
in
fisubrs
mov
aam
iret
pop
int
jge
and
and
mov
push
push
sbb
xor
pop
jns
lahf
test
pop
notb
inc
iret
sti
pop
loop
leave
inc
int
inc
imul
or
inc
push
fidivs
sbb
dec
scas
jae
xor
and
cmpsb
pop
xchg
mov
xchg
mov
leave
shlb
jp
sbb
xchg
sahf
pop
jno
xchg
add
mov
sub
mov
cmpsl
sbb
sbb
jecxz
les
lock
iret
inc
gs
mov
lcall
je
xchg
xor
push
popf
out
push
push
test
sub
mulb
mov
stos
fmuls
rorb
imul
mov
sbbl
sub
push
mov
jp
sub
push
mov
sub
ljmp
inc
xor
adc
lods
jno
push
sub
or
addr16
pop
xor
cli
loope
lret
xchg
testl
push
sarb
xor
fdivrs
test
or
fidivl
cmp
les
sub
xchg
mov
stc
insl
push
imul
inc
xchg
mov
and
test
jne
adc
inc
sbb
adc
pop
out
rcrl
xchg
pop
mov
inc
enter
cli
sub
es
pop
pop
shrl
xor
mov
add
push
mov
mov
dec
out
sub
inc
divb
je
cmc
test
dec
pop
repz
mov
insb
movsb
push
xchg
loopne
aad
push
jp
movsl
jmp
mov
mov
add
xchg
jl
addr16
inc
cmpsl
mov
xor
std
scas
outsb
xchg
sti
cmpsl
test
out
and
xchg
ret
in
test
outsl
ss
and
ret
xor
push
jg
clc
mov
mov
xlat
dec
xchg
mov
add
outsb
push
ljmp
pop
outsl
addl
movsl
mov
arpl
and
adc
push
jno
jo
daa
stos
adc
push
push
arpl
pop
pop
into
test
adc
mov
mov
ja
inc
sub
and
mov
fstpl
adc
popa
mov
pop
fdivrp
xor
and
mov
jae
cmp
leave
inc
sub
out
test
adc
xchg
scas
add
add
and
lret
addb
aam
mov
je
pop
test
insl
push
into
je
imul
cmp
push
in
xchg
xchg
xchg
mov
xchg
daa
stc
aam
dec
xchg
dec
sbb
add
shlb
test
xchg
daa
shlb
jns
ja
outsl
fcmovne
ds
push
lahf
fstps
pop
outsl
sub
jns
cwtl
jmp
fs
add
xor
lret
sbb
cmpsb
stc
xor
popa
or
das
cmp
addr16
xchg
bound
and
movsb
cmp
pop
jecxz
outsb
hlt
lcall
or
sub
lcall
mov
and
in
and
xor
or
frstor
lea
jecxz
push
hlt
xchg
xor
lret
aad
jbe
cld
les
in
addr16
mov
je
adc
fsubrs
mov
lods
add
addr16
rcl
les
int
mov
cld
std
lods
div
push
or
inc
into
jbe
sti
je
or
stc
notb
xor
mov
cmpsl
into
adc
mov
xor
jnp
dec
aaa
fistl
adc
enter
inc
jecxz
sbb
cmpsb
cmp
cwtl
add
hlt
hlt
add
rcr
in
dec
vmovd
inc
ljmp
shll
mov
stos
push
test
popa
inc
outsl
dec
inc
dec
ss
cs
shlb
pop
lea
or
shld
xor
incl
call
pop
lea
rol
shll
cmp
pop
jmp
or
xor
popf
imul
sub
xchg
inc
fildll
jp
xchg
in
rcl
lahf
jl
aam
push
dec
daa
outsl
mov
loope
push
xchg
cwtl
pop
push
add
jl
push
push
movsb
add
aam
push
lahf
fnop
dec
cmp
xchg
repnz
in
cli
mov
jge
mov
inc
icebp
mov
cmp
mov
pop
dec
mov
jo
stc
mov
rcrb
push
and
lods
xor
aas
xchg
cmpsb
cltd
loope
pop
scas
xchg
es
andb
inc
gs
xor
ficoml
pop
cmpsb
push
xor
and
mov
inc
jb
sbb
jne
jg
in
sbb
push
xor
dec
fs
push
aam
adc
inc
mov
mov
les
pop
int
mov
lret
and
mov
xchg
mov
push
movsl
pop
dec
mov
imul
jmp
cmc
sbb
sub
and
int
and
jg
in
mov
and
shl
jle
fistl
or
xchg
or
out
orb
mov
js
and
sbbl
jg
mov
adc
in
pop
std
rclb
pop
push
adc
es
subl
pop
add
imulb
fistl
out
adcb
lahf
je
popf
stos
cwtl
fadds
cli
sub
sti
dec
adc
push
stc
ret
es
add
adcb
jbe
ljmp
adc
int
imul
lcall
loope
sub
inc
lods
or
out
test
xlat
addr16
xor
mov
pop
rcrb
or
mov
cwtl
loope
xorb
push
insb
or
push
rolb
mov
mov
push
inc
hlt
cmp
pop
xchg
shl
and
pop
push
jl
test
pop
mov
push
clts
dec
sub
and
stos
imul
mov
test
jb
scas
jbe
jno
stos
mov
popf
sarl
mov
cmp
xchg
mov
pop
repnz
pushf
pusha
mov
shll
mov
push
mov
ljmp
dec
xchg
push
loop
push
dec
jecxz
sbb
fwait
xchg
insb
add
popf
fsubl
int3
in
dec
in
pushf
cmc
out
movsl
inc
inc
inc
add
dec
jge
sub
xchg
add
lret
repz
leave
push
imul
or
dec
gs
sahf
add
mov
icebp
inc
cmp
and
adc
subl
xlat
mov
push
xor
jecxz
and
push
inc
push
cwtl
inc
adc
aaa
xor
push
insb
cmp
push
lret
mov
hlt
add
jae
movsl
fcoms
cmc
push
loop
testb
xor
call
dec
cmp
aas
mov
aaa
pop
lret
leave
sbb
add
jne
shlb
and
inc
mov
bound
and
stos
mov
das
loop
fidivs
pop
mov
or
mov
push
jb
cltd
sbb
imul
dec
cwtl
arpl
cmpsl
repnz
movntps
xor
xchg
mov
mov
jle
mov
out
add
xor
push
cwtl
cwtl
jmp
mov
mov
les
sub
loope
hlt
pusha
std
rcr
int
xor
loopne
psubb
iret
stos
cmpsb
pushl
mov
test
pushf
mov
dec
add
imul
fs
in
cmp
xchg
mov
sub
lods
mov
repnz
stos
sub
xor
aaa
cs
test
imulb
jp
fsubr
sti
jmp
sub
cmc
out
sub
mov
xchg
jmp
xchg
xchg
add
cmp
stc
inc
xchg
xchg
incl
out
jle
dec
addr16
das
daa
ficoml
push
dec
mov
sahf
scas
mov
or
mov
lret
outsb
or
mov
sub
fcomps
popa
fisubs
adcl
push
pusha
sbb
add
into
inc
mov
xchg
ficoms
aaa
jl
cmpsl
or
adc
shrb
xchg
fdivrl
jne
aam
ja
xor
in
pop
inc
aam
in
mov
fwait
cmp
imul
hlt
pop
sbb
mov
push
xor
shrl
popf
push
aaa
dec
aas
xchg
cld
jle
inc
scas
sub
mov
loop
orl
xor
stos
xchg
or
xchg
push
pushf
add
mov
pushf
rclb
test
xchg
stc
rcl
ja
mov
mov
pop
movsl
mov
nop
xor
out
lahf
pop
push
sub
pop
pop
fidivs
push
or
mov
sub
dec
mull
add
outsl
cld
jmp
mov
pop
or
add
sub
xchg
fmul
sti
ret
add
jle
mov
pop
sbb
xchg
cmp
mov
outsb
adc
sbb
fisttpll
xor
sbb
aam
add
add
out
lret
pop
sub
jmp
int
push
pusha
or
popf
outsb
pop
or
mov
cmp
adc
adc
mov
clc
jecxz
pusha
negl
mov
lds
int3
orb
mov
pop
xchg
outsb
add
sub
push
divb
loop
scas
imul
sub
jl
inc
lea
or
xlat
inc
dec
pop
pop
and
xchg
nop
and
jecxz
xor
xchg
pop
sbb
jp
jns
pop
nop
adc
push
jo
hlt
das
inc
sti
adc
xchg
pop
or
jge
jmp
push
pusha
jg
mov
adc
jl
pop
adc
dec
inc
aad
popf
fsts
aas
lock
imulb
outsl
notl
mov
jle
mov
push
repz
jg
mov
in
jle
pop
fcompl
mov
cmp
xchg
mov
insl
pop
mov
xchg
test
mov
fidivs
jne
sub
lods
repnz
mov
mov
adc
xor
mov
stos
hlt
push
aas
rcrl
imul
out
jno
mov
adc
mov
pop
rolb
push
or
hlt
fildl
bnd
mov
in
xor
in
cmp
push
sbb
popa
enter
mov
mov
fwait
std
cwtl
lret
jo
insb
mov
mov
xor
jnp
and
xor
mov
or
inc
push
push
nop
out
dec
lods
daa
inc
ret
test
mov
mov
dec
adc
int
sbb
push
mov
mov
add
mov
mov
dec
in
cmp
cmp
rcl
pop
fidivrs
xchg
pusha
loope
cmc
mov
pop
xchg
sbb
mov
xlat
fs
cltd
bnd
mov
ffreep
iret
adc
lret
aad
test
js
mov
lret
arpl
or
mov
mov
fld1
pop
xchg
push
and
mov
mov
lock
idivb
int3
rcrl
mov
mov
popa
loope
fsubl
pop
push
subb
daa
out
sub
bound
dec
loopne
sbb
push
stos
loope
inc
push
xchg
xor
or
aas
call
ret
mov
pop
add
jmp
push
xorb
les
adc
mov
jle
sub
aam
push
frstor
out
xchg
js
subb
js
jne
and
xor
js
inc
lods
mov
mov
movsb
mov
xor
xchg
xchg
hlt
dec
pop
inc
cmp
and
cmp
jmp
in
jnp
dec
inc
jmp
cmp
xchg
lret
lahf
fldcw
mov
jg
xchg
test
rorl
push
std
adc
xchg
insb
xchg
in
outsb
add
cwtl
test
and
std
push
sbb
cmp
xchg
pop
mov
push
xor
decb
movsl
pop
mov
mov
loope
js
scas
and
out
adc
fsubrl
ret
es
bound
and
lock
mov
mov
movsl
jbe
inc
ret
mov
cltd
jbe
popa
in
mov
push
enter
push
cmpsl
in
jbe
xor
pop
or
dec
inc
stc
repnz
divb
push
and
lcall
sti
push
mov
mov
mov
imul
adc
mov
iret
mov
adc
leave
lea
cli
mov
sbb
fucomip
icebp
std
push
aaa
fistl
pushf
jae
dec
sbb
pop
push
xlat
mov
jmp
lods
js
sbb
push
in
int3
or
push
mov
insl
ds
mov
and
clc
mov
or
mov
pop
ljmp
jg
adc
ja
inc
jmp
push
dec
dec
and
sbbl
dec
mov
leave
jmp
scas
cwtl
dec
dec
outsl
ja
adc
sub
scas
xor
pop
lahf
and
stos
ret
cmp
sbb
jle
ds
int
in
jb
std
pop
dec
dec
mov
movsb
stos
xor
cld
pushw
dec
out
xchg
jbe
mov
arpl
call
jmp
pop
sbbb
mov
mov
xor
in
fdivs
sub
filds
xchg
mov
ljmp
sbb
dec
lock
pop
jne
xor
add
bound
add
lret
mov
push
lahf
xor
scas
ss
mov
int
mov
pop
xchg
mov
insl
cwtl
out
xchg
nop
les
fistl
or
int3
aaa
clc
rclb
adc
sbb
jmp
and
xor
mov
lock
sbb
dec
pushf
xor
pop
cwtl
int
sub
mulb
loopne
push
jle
pop
fildll
mov
inc
adc
push
xor
rcrl
or
rcll
loop
cmp
or
or
imul
stc
cld
ja
rol
mov
dec
int
jae
sbb
iret
fldcw
bound
and
add
cmp
push
cmp
test
aas
aam
aas
movsb
or
sub
xchg
mov
push
mov
and
arpl
push
xchg
and
subl
dec
fisubl
mov
xor
push
pop
mov
or
in
js
dec
mov
jle
mov
rcll
sub
data16
rolb
mov
xchg
dec
or
mov
fidivrs
test
in
orl
inc
push
pop
sub
dec
lahf
pop
cs
adc
or
shrb
sub
stc
push
loop
cwtl
pop
sahf
mov
mov
inc
pop
mov
lret
shrl
dec
mov
lea
call
sub
sahf
adc
adc
mov
xlat
adc
fistpll
pop
push
adc
cs
adc
int3
adc
loopne
enter
pop
xlat
imull
lea
xchg
lret
push
push
mov
insb
push
mov
mov
pop
add
push
ret
lret
jle
sbbb
imul
jge
pop
fidivrl
cmp
and
mov
xchg
rorl
pusha
cmpsb
pop
xor
fs
jl
pop
jo
into
pop
pushf
es
int3
int
rcl
movsl
dec
daa
lcall
pushf
imull
push
arpl
imul
mov
aam
out
divps
lods
push
cmc
jns
rcl
stos
icebp
imul
xor
sbb
test
pop
adc
xchg
jnp
push
dec
mov
mov
xor
sbb
inc
gs
pushf
std
out
and
jae
loopne
in
sti
inc
icebp
sahf
ficompl
dec
pop
jb
mov
bound
push
aas
inc
mov
add
pushf
les
xchg
loopne
scas
cli
andb
mov
gs
mov
jmp
jg
mov
test
sbb
jb
cmc
cmp
cmp
ss
je
or
mov
push
mov
addr16
add
add
adc
pop
push
dec
mov
pop
loop
cltd
xlat
xchg
ds
jbe
ds
cmp
fwait
mov
inc
fcomps
mov
fldt
inc
test
adc
jno
addr16
pop
cmp
mov
and
xchg
ror
popa
pop
mov
dec
mov
adc
dec
scas
movsl
ffree
test
xchg
mov
sbb
mov
loope
push
dec
les
mov
push
lods
xor
jb
jl
ja
jae
adc
add
cmp
fmull
sbb
dec
or
push
jmp
jno
xchg
cmp
sbb
push
inc
sub
push
mov
aad
js
adc
insb
mov
popa
outsl
popa
jne
push
sahf
sub
sbb
mov
fwait
push
in
in
stos
add
test
ret
and
push
aam
cmp
roll
dec
mulps
mov
jbe
xchg
iret
pop
sbb
push
fwait
bound
mov
pop
mov
xchg
cs
cmc
pop
or
sbbl
mov
inc
sub
ja
inc
rcrb
in
into
outsb
dec
mov
fidivl
lret
fmuls
das
jmp
xchg
stos
jnp
pushl
and
ljmp
adc
in
je
lret
sbbb
test
cli
add
addb
call
xchg
or
mov
fwait
or
not
sahf
stc
scas
pop
jge,pt
insl
xchg
subb
sub
dec
test
shll
dec
mov
pushf
inc
gs
cmp
fdiv
push
sub
mov
mov
dec
shll
dec
ljmp
iret
mov
es
cmpsl
push
sbb
fistpll
outsb
in
xor
pop
dec
adc
mov
mov
out
mov
mov
cmc
mov
into
pusha
sbb
mov
sub
mov
insl
xchg
sbb
fdivrs
ja
inc
push
mov
lret
mov
xor
imul
jmp
rorl
dec
xor
aas
dec
sub
pop
cli
pop
leave
rorb
xorl
mov
shll
cwtl
sbb
pop
repnz
inc
jge
add
mov
fadds
lcall
mov
mov
popf
or
cvttps2pi
jns
leave
test
in
mov
xchg
jnp
push
iret
lret
sub
movsb
jne
es
lods
jl
ret
out
inc
data16
es
rcrl
xchg
icebp
repz
aas
std
call
incb
xor
call
data16
add
gs
subb
mov
inc
mov
pop
rcr
pop
inc
ret
imul
mov
xchg
clc
dec
cltd
push
cmc
testl
cmp
int3
les
cmp
and
sbb
jecxz
movsb
pcmpgtw
stos
jg
cld
pop
xchg
xchg
sub
gs
xchg
pop
push
mov
jl
movsb
das
shrb
xchg
inc
in
pop
push
mov
rcr
mov
sbb
push
pop
xchg
cmpl
cli
cmp
imul
lods
sbb
fists
outsl
xchg
or
add
shlb
repz
fbld
test
and
lods
and
insb
dec
mov
sbb
adcl
mov
mov
jno
mov
jno
mov
push
into
push
fsubl
mov
movsb
push
or
fnstcw
cli
mov
mov
cmp
mov
outsb
pop
je
mov
inc
es
inc
push
mov
out
jle
jno
or
pop
push
cli
and
xor
push
push
test
dec
adc
mov
ret
ja
stos
xchg
xor
lock
jnp
in
dec
loopne
mov
xchg
sub
xor
sbb
pop
repz
imul
cmp
in
lods
jnp
aad
or
pop
mov
sar
iret
add
jae
mov
adc
cli
adc
mov
push
and
shl
lds
lds
jae
ss
sub
loop
pushf
mov
mov
dec
cmpsb
pop
push
ljmp
dec
out
cmp
stos
dec
es
jge
jecxz
dec
xchg
aaa
rclb
nop
xchg
cs
out
ror
push
in
push
adc
aam
shlb
ret
push
push
cmp
mov
pop
xor
cwtl
ljmpw
out
mov
jnp
fistps
pop
sub
jge
cld
fsubr
mov
mov
mov
pop
js
imul
out
sbb
arpl
int3
repz
cmp
pxor
out
xchg
jl
mov
jns
imulb
and
xchg
roll
mov
aam
jl
lock
jbe
sti
xchg
cmp
dec
pop
xchg
lods
sub
pop
pop
and
je
jbe
cmp
lret
or
aaa
sti
lds
jmp
cmp
jecxz
push
dec
dec
scas
jo
lea
dec
enter
bound
mov
fcoml
movsb
mov
scas
jge
push
stos
push
lods
ljmp
xor
pop
sbb
or
mov
sub
or
cmp
lds
aam
add
mov
push
xor
cmp
mov
ljmp
adc
addr16
sarl
jp
jne
push
jle
call
xor
or
imulb
icebp
pop
add
pop
jbe
aad
jae
pop
mov
sub
nop
jl
add
add
mov
dec
ljmp
mov
jle
cmc
add
and
mov
test
aad
push
pop
xchg
push
pop
sbb
jb
bound
inc
popf
rcrb
inc
pop
cmp
sub
bound
push
out
push
lahf
in
imul
pop
jbe
cmp
leave
and
cmp
mov
aaa
push
push
cmpsl
jmp
jae
scas
xchg
test
sti
lret
sbb
fsubrl
sub
pop
jecxz
popf
jnp
pop
outsl
in
popf
gs
pushf
mov
mov
add
xor
cmove
xchg
mov
in
aad
cs
imul
in
rclb
cmc
in
scas
push
jno
movl
lret
or
fcmovnb
dec
push
mov
rorb
fldcw
jnp
outsl
bnd
xor
sub
pusha
lods
jnp
loope
pop
adc
dec
pop
pop
mov
pop
sub
cmp
mov
jle
xor
pop
repz
arpl
push
jo
xchg
scas
xchg
lret
insl
bound
mov
jmp
push
inc
test
adc
mov
jle
into
xor
call
xor
gs
add
aaa
frstor
shlb
and
xor
repnz
mov
mov
out
dec
push
pop
icebp
addl
inc
push
rclb
push
push
cld
sub
incb
pop
adc
push
jl
pop
outsb
mov
out
jg
bound
shll
rcrl
sbbl
pop
dec
lret
inc
std
push
add
jbe
nop
jl
pop
ret
pop
push
lods
cmp
outsb
out
push
and
jmp
outsl
mov
out
aaa
shl
pop
movsb
jl
inc
inc
pop
push
fxch
sbb
das
and
push
adc
lods
jne
push
nop
leave
pop
xchg
push
sbbl
and
push
pop
or
dec
pop
cmc
cmp
loopne
cltd
xchg
add
int3
mov
insl
cmpsl
or
insb
mov
repz
popa
push
pop
pop
call
xchg
or
and
mov
es
adc
jmp
inc
bound
adc
into
mov
movsl
or
scas
mov
ljmp
sub
mov
outsb
sarb
dec
and
sbb
sub
push
mov
cltd
aas
adc
test
cmp
stos
pop
test
fmul
bound
or
rorb
mov
dec
and
loopne
fucom
imul
push
ss
jne
out
sbb
jnp
mov
cmp
outsl
pop
mov
pop
xchg
jg
jns
stos
aaa
push
push
sub
jb
cmpsl
mov
jmp
stc
fs
push
jg
ficomps
iret
sub
xor
shrb
jecxz
mov
xor
mov
rorb
loop
sti
dec
pop
jns
mov
arpl
xor
sbb
dec
scas
cs
popf
xchg
ja
hlt
push
aad
mov
lahf
adc
sbb
xlat
out
pushf
mov
rorl
inc
mov
mov
mov
dec
inc
out
rcrl
sub
orb
push
add
sbb
mov
roll
pop
call
jns
and
xchg
in
js
push
xchg
andl
add
pop
lea
loope
mov
std
je
mov
sub
pop
push
cmpsb
jo
xchg
cmp
dec
mov
mov
js
and
mov
movsb
je
imul
mov
fdivr
hlt
xchg
mov
or
lahf
push
outsb
cld
sbb
xchg
mov
orb
jg
xchg
aas
in
inc
shll
sbbb
push
jmp
scas
in
das
adc
sbb
pop
and
addb
clts
xchg
aam
xchg
mov
jno
dec
popa
sbb
mov
xchg
or
xor
xor
sbb
rcrb
xlat
enter
pop
int3
mov
scas
dec
popa
ror
mov
subl
fmull
dec
jns
sub
iret
ret
pop
cmpb
call
push
xchg
int3
iret
mov
xchg
pop
mov
ficoms
or
mov
or
pop
movsb
push
fistps
or
cwtl
leave
push
inc
lods
movsb
pop
pop
mov
popf
hlt
jg,pn
shlb
rol
mov
pop
jnp
icebp
adc
negb
mov
xchg
jns
icebp
icebp
push
stos
xchg
cmp
and
mov
xchg
xchg
dec
push
stc
mov
jns
adc
dec
mov
fnstcw
mov
jne
or
mov
fsin
push
cmpsl
xor
adc
xor
xchg
and
test
mov
stos
pop
jp
or
dec
es
add
jmp
push
jo
hlt
inc
jmp
aad
lea
sbb
ds
mov
cld
into
sub
jno
push
out
cmpsl
test
ja
dec
aad
mov
xchg
xchg
push
daa
pop
rorb
vunpcklps
sbb
sub
xchg
mov
lret
int
outsb
sbb
ficoml
test
or
cmpsl
mov
adc
jmp
and
jnp
aas
push
cmp
pop
xchg
movsl
pop
leave
mov
loopne
pop
and
adc
pop
mov
fwait
pop
or
cmc
loop
pop
stos
add
imul
ret
fprem
mov
cmp
mov
adc
or
xor
flds
add
inc
push
xor
pop
loop
ljmp
inc
cli
pop
pop
loop
push
fdivs
xchg
mov
push
mov
cs
ljmp
push
mov
pusha
add
xor
sbb
adc
jne
inc
popa
push
mov
int3
lcall
jnp
adc
ficoms
push
mov
dec
sub
mov
fistpl
hlt
sub
xorb
hlt
sub
dec
cmpb
sub
push
and
xlat
push
xor
mov
xor
jno
mov
mov
xchg
and
mov
pusha
popa
dec
fs
mov
push
fdivs
int
cmp
repz
xchg
dec
cs
aas
jno
test
in
cmp
pop
ds
inc
pop
je
enter
and
mov
aad
jle
mov
cmp
mov
sbb
cmc
xchg
popa
dec
sahf
inc
sub
xlat
xlat
loopne
push
out
and
adc
or
pop
inc
hlt
icebp
orl
cmpsb
mov
int
in
inc
pop
vcvtpd2dqy
out
clc
jno
push
call
fdivr
outsb
arpl
jmp
pop
faddl
dec
loopne
ss
pop
adc
sbb
mov
rorl
popa
jae
fisttpl
les
and
dec
adc
sti
les
lret
lret
sub
call
je
in
inc
stos
mov
and
shlb
jno
sti
jg
cmp
out
mov
lods
dec
std
das
push
dec
pop
ljmp
sub
les
stc
sub
xor
push
mov
adc
or
sub
mov
fnstsw
enter
stc
mov
call
push
push
insb
in
insb
lea
test
imul
xor
mov
jnp
scas
adc
push
addr16
and
mov
inc
into
fidivs
xor
cmp
cmp
outsl
aad
mul
push
test
cmp
ss
pop
lds
stos
xchg
mov
cs
scas
push
add
mov
dec
jp
scas
loope
mov
mov
aaa
sub
inc
sti
jne
add
sub
outsl
mov
imul
cmp
fwait
jbe
lods
cli
xchg
imul
dec
xor
hlt
lahf
daa
cwtd
je
or
outsl
mov
lcall
cwtl
orl
mov
adc
pop
aas
sti
addr16
orl
stc
xor
dec
test
scas
xor
pop
push
cmp
pop
xor
mov
shrb
and
popa
mov
out
popa
sbb
dec
add
loop
sbb
adc
outsl
dec
jmp
fwait
push
clc
sub
repnz
ficomps
jmp
mov
mov
adc
outsl
js
leave
insl
and
push
fistps
test
in
cmp
jne
pop
sub
inc
push
inc
mov
adc
xor
shlb
lods
cmp
adc
sub
in
lret
push
cli
daa
xchg
xor
sti
ficoms
sbb
ja
mov
sub
mov
and
je
leave
lds
jb
cmp
sbb
fimuls
and
jns
div
or
jge
push
adc
fwait
into
mov
es
clc
loope
rorb
jg
gs
pop
ds
mov
in
fsubl
jbe
xor
imul
sbb
xor
jno
in
add
jmp
je
incb
lcall
and
adc
lods
loopne
movsl
adc
mov
pop
popa
mov
xchg
mov
dec
dec
push
scas
jle
scas
sub
bound
sahf
imul
cmp
int3
add
push
clc
xor
jmp
imul
fbld
sbb
out
mov
jne
fildll
cli
fstenv
cmp
std
inc
aad
stos
gs
in
mov
lret
push
pusha
pop
std
xor
inc
movsb
sbb
jg
cvtps2pd
loopne
xor
mov
je
sub
jae
adc
mov
in
pop
repnz
inc
adc
out
jns
lock
aam
and
cmc
mov
cmp
jmp
add
push
mov
mov
sub
sub
sub
outsl
lods
aad
pop
lret
sti
jge
and
and
repnz
push
pushf
dec
or
je
cwtl
in
shrb
imul
push
inc
xchg
jge
inc
rorl
cli
jnp
or
or
repnz
out
cmp
fs
cmc
stc
lcall
jb
mov
cmp
sbb
xor
xchg
out
shrl
mov
xchg
gs
out
lcall
loop
addr16
adc
divb
jmp
rclb
repz
movsl
jmp
push
loop
out
imul
dec
fcmove
mov
jmp
bnd
mov
inc
add
imul
pop
sub
cmp
clc
xlat
jne
dec
xchg
je
xchg
in
and
mov
mov
mov
jl
cmp
mov
push
pop
xor
popf
push
cmp
pop
xchg
cmpsl
in
aaa
mov
mov
mov
mov
jo
fbstp
mov
out
cld
xchg
pusha
sbb
andl
pop
aad
add
iret
arpl
imul
add
call
lock
repnz
outsl
xor
repz
daa
jl
mov
cmc
adc
xchg
jns
mov
in
jmp
clc
push
jns
dec
ret
adc
push
push
mov
and
push
cmove
mov
cmpsb
mov
test
insl
sub
jp
cli
jecxz
mov
outsl
jle
xlat
pop
and
inc
mov
cmp
scas
addl
inc
xchg
and
leave
aas
xor
pop
es
fs
loope
push
jl
sbb
out
fists
xchg
pop
mov
fisttpll
push
sarb
ss
fs
cld
repnz
in
int
lret
mov
in
add
sbb
xchg
ret
std
add
mov
es
mov
inc
stos
aad
lcall
xchg
pop
sbb
jmp
dec
cmp
negl
and
shlb
out
movsl
mov
push
rorb
js
jne
cs
adc
insb
sti
inc
mov
jo
adc
sub
sub
out
ds
mov
dec
cwtl
or
cmp
sub
cwtl
inc
add
cmp
pop
xor
lods
inc
aad
or
sarb
mov
xor
scas
dec
cmp
orb
xchg
scas
jp
cmp
out
mov
stc
sbb
lock
xor
ljmp
xchg
mov
bnd
cs
add
sub
push
sbb
mov
pop
out
push
cmp
inc
and
aas
or
test
nop
ret
or
gs
imul
push
insl
icebp
es
and
push
jbe
out
shl
stc
hlt
push
loope
pushf
das
add
shl
inc
rorl
mov
jle
or
cmp
pop
lahf
movsb
cwtl
jle
test
pop
mov
push
dec
repz
sbb
add
loopne
mov
pop
and
leave
sub
das
in
dec
pop
out
xchg
les
dec
out
int
adc
lds
cld
in
mov
inc
push
cmp
or
clc
and
dec
pop
fbld
ja
mov
xchg
fsubl
mov
bound
pop
inc
push
dec
insb
push
aad
sbb
lock
lods
js
xchg
and
insl
es
mov
adc
push
cmp
jecxz
xchg
sub
adc
rcrb
sub
mov
lea
sbb
lods
mov
iret
jnp
repz
sub
enter
jmp
aas
dec
gs
fmull
mov
cmp
in
push
mov
xor
add
ret
xchg
jl
std
xchg
cmp
jp
xchg
mov
jecxz
fisttps
mov
xchg
and
push
scas
dec
ljmp
jp
insb
or
sub
aaa
ret
xor
cmp
or
cmpsl
outsl
push
cwtl
pop
fs
imul
stc
push
arpl
ret
xor
or
pop
cmp
aaa
sbb
cmp
call
pop
xchg
jmp
lea
dec
sti
jmp
add
adc
sbb
push
mov
inc
ror
scas
insl
sub
cwtl
movl
xchg
sub
sbb
push
ret
sub
xchg
cmpsl
dec
scas
xchg
or
jne
and
mov
pop
or
test
clc
or
and
jbe
add
mov
scas
cmp
xchg
xor
adc
loop
and
test
rolb
pop
scas
push
addr16
dec
jle
cmpsl
mov
call
stos
cwtl
andl
call
fistpll
scas
pusha
push
cmp
dec
xor
or
lods
test
push
xchg
jbe
icebp
ja
test
inc
push
cmp
inc
xor
dec
pop
dec
repz
xor
push
movsb
dec
xlat
mov
ss
jae
aaa
scas
sub
jo
fcompl
jne
pop
pop
sti
scas
mov
mov
jns
or
push
push
scas
lcall
and
enter
in
xor
repz
mov
mov
push
xchg
or
cmp
xchg
jne
les
sub
in
movsl
fs
pushf
aam
or
xchg
xchg
sub
mul
enter
jle
fcoml
fdivp
shl
cmp
sbb
xchg
inc
lods
mov
mov
mov
mov
pop
mov
push
loopne
pop
xchg
sahf
dec
dec
mov
and
xchg
fstps
or
mov
insb
lock
cmp
aas
lahf
movsl
pop
lcall
pop
push
xor
in
popa
push
in
mov
out
rorl
lret
ds
sbb
mov
xchg
ss
dec
cmp
xchg
xchg
mov
xchg
sti
mov
dec
lcall
roll
xchg
mov
push
das
icebp
aam
insl
addl
mov
push
cs
movsb
movsl
adc
aam
cmpl
xchg
call
in
sub
xor
das
cmp
pop
jecxz
jg
mov
mov
dec
test
push
fdiv
xor
shl
xor
and
or
mov
mov
jo
ja
ja
in
and
push
mov
adc
dec
jae
mov
push
jge
mov
imul
out
pusha
pop
xor
xor
cmp
fdivrl
mov
pop
mov
aam
add
daa
out
shll
dec
stos
sbb
insb
xor
fabs
cmc
jle
adcb
adcl
or
into
xchg
mov
push
fsubl
add
test
adc
adc
jmp
loopne
andps
adc
xchg
push
lods
fisubrl
repnz
or
int3
sbb
inc
add
pop
test
cwtl
in
std
mov
or
and
inc
xlat
inc
nop
pop
cmpsl
xchg
fdivr
cli
xorb
mov
fdivl
inc
pop
fcmovnu
sbb
ss
inc
push
popa
jge
jo
cld
sub
imul
ds
repz
pop
call
js
cltd
repz
lock
stos
adc
loopne
xor
adc
jo
cmp
bound
add
int
daa
lret
js
loopne
jp
in
shll
notl
mov
enter
push
add
adc
xchg
lds
lods
mov
orb
push
and
sbb
dec
pop
push
sub
outsb
mov
jne
jle
mov
stos
testl
or
in
sti
push
mov
daa
das
sbb
inc
icebp
xor
nop
rorb
test
or
pop
call
lcall
mov
aaa
sub
adc
insb
xchg
xchg
orl
and
adc
mov
movsl
xorl
ja
xor
mov
dec
inc
ret
clc
jno
or
xor
jmp
push
test
jne
pop
inc
or
mov
mov
pop
rorl
adc
jle
sub
loop
enter
mov
mov
mov
loop
pushf
ret
xchg
pop
add
and
arpl
push
ret
push
or
popa
cmp
iret
sbb
mov
fldt
addb
jbe
insl
fiadds
ja
ret
cmp
or
int3
dec
loopne
xor
imul
or
adc
adc
jbe
addl
movsl
mov
imul
xchg
and
inc
ret
in
or
out
stos
adc
xchg
out
inc
mov
push
sub
adcl
cmp
mov
ficoml
or
js
sbb
andl
cmp
out
jae
call
sbb
dec
pop
outsb
pop
pop
push
push
mov
add
popa
insl
fnstsw
data16
xor
lret
dec
inc
test
or
push
mov
inc
rorb
push
loopne
sbb
out
inc
popa
and
andb
push
mov
dec
test
or
cli
cmpsb
stos
pop
call
xor
stos
cmp
pop
test
scas
bound
out
lods
ja
xor
test
push
dec
add
xor
sbb
dec
or
pop
aad
lea
push
jne
test
fs
ret
sti
cmp
fbstp
jge
shll
das
push
inc
das
and
icebp
sbb
pop
int
test
cmpsb
add
adc
dec
dec
sahf
inc
and
push
mov
inc
xchg
outsl
mov
inc
inc
mov
fbld
jmp
cmp
aad
add
pop
inc
or
scas
subl
sub
add
pop
shll
mov
in
in
lock
push
fs
jl
popf
push
push
shll
stc
dec
shl
decb
adcl
rcrl
data16
dec
sahf
pop
xchg
loop
jmp
je
mov
mov
push
test
fists
cmp
gs
pop
pop
outsl
mov
dec
jle
je
jb
pop
aaa
jo
nop
jp
mov
xchg
das
mov
int
popf
lret
jnp
cs
push
dec
cmpsb
push
sub
and
hlt
pop
sbb
je
lret
movsb
out
ffree
gs
sbb
sahf
pop
rorb
popa
pop
sarl
hlt
out
dec
lods
fwait
shl
loope
jle
sahf
lret
push
ds
call
pop
jmp
lea
xchg
addr16
pop
mov
push
popf
jns
mov
ds
adc
inc
mov
xchg
mov
sub
rcrb
sahf
es
scas
jb
push
mov
push
and
inc
mov
adc
jne
sub
cmp
jecxz
fwait
adc
jmp
outsl
sbb
xchg
or
pop
jg
addr16
aam
lds
ss
adc
pop
lock
scas
call
dec
mov
dec
or
call
aam
aaa
jo
mov
stos
pop
out
xlat
mov
loopne
or
lret
adc
mov
out
jae
int3
je
mov
inc
jge
das
ret
jns
dec
notb
nop
inc
mov
mov
dec
fstpl
mov
and
adc
jb
pop
add
loopne
sbb
xorb
fnsave
push
call
mov
push
not
pop
adc
in
out
xchg
mov
std
or
dec
and
dec
mov
jne
cmp
pop
sub
mov
js
jnp
lock
aam
sahf
jns
add
xor
fs
sbbl
scas
cltd
testl
or
pop
xor
gs
loopne
mov
sub
mov
cmpsl
adc
jo
pop
sahf
hlt
push
or
xor
mov
out
lea
jne
xor
cmc
bound
cmp
shlb
sbb
mov
inc
sbbl
jbe
adc
adc
pop
loopne
std
sbb
popf
movsb
in
dec
inc
mov
pushf
hlt
xor
ja
sarl
pushf
movsl
cmp
in
push
push
add
div
jbe
adcb
xchg
fsubp
fisubrl
dec
mov
cmp
mov
jmp
bound
inc
mov
adc
mov
mov
daa
scas
shll
push
leave
faddl
shlb
cmp
outsb
ja
roll
daa
jbe
loope
inc
ret
daa
aad
push
or
leave
das
cmpsl
push
mov
incl
aas
stos
jle
aam
sbb
add
out
mov
cmc
data16
and
fisttpl
mov
leave
stos
dec
testl
mov
xor
fildll
ja
jne
rorb
test
loop
out
jmp
imul
xchg
xor
or
sub
push
iret
and
push
lret
xor
or
push
lret
xchg
mov
jp
push
jp
test
xor
scas
adc
out
sbb
fldenv
inc
pop
xor
jne
sub
and
sti
sarb
sub
insl
int3
jb
in
sahf
add
int3
or
push
jb
in
sub
jecxz
pop
jo
add
sbb
enter
cmpsl
xchg
mov
sarl
les
popf
ss
sub
mov
sbb
adc
test
xor
push
dec
pushl
popf
cmp
inc
jne
repz
pushf
cmp
orl
test
sub
hlt
inc
sub
push
cmp
jb
push
push
int
stos
xchg
xchg
icebp
adc
lods
mov
cmp
div
jbe
fmuls
aaa
sub
cld
or
push
outsb
sbb
push
jmp
bound
aad
mov
jbe
push
fcmovnbe
add
sub
test
push
das
sub
pop
nop
jno
add
clc
dec
pop
mov
add
inc
mov
nop
push
jmp
subl
xchg
shll
lods
mov
push
bts
sarl
pop
inc
psadbw
sbb
sbb
loopne
mov
dec
mov
test
aas
pusha
or
pop
hlt
sbb
ret
jle
xchg
lret
push
pop
mov
mov
clc
and
bound
xchg
inc
mov
call
inc
inc
mull
dec
adc
dec
jno
push
gs
cmpsl
hlt
popf
or
ljmp
enter
iret
out
mov
jg
mov
test
inc
mov
sub
xor
jl
mov
cltd
clc
xchg
in
rcpps
icebp
push
dec
int
cmp
movsb
int3
xchg
fwait
pop
adc
aad
and
les
xor
outsl
movsb
cmp
inc
mov
sbb
push
cld
call
lret
out
pop
test
test
aad
pop
mov
mov
push
push
aas
addr16
inc
shlb
shl
xchg
dec
stos
jne
lea
inc
mov
pusha
dec
fbld
jge
jnp
jae
cmc
arpl
mov
xlat
mov
aas
xor
mov
mov
or
inc
xor
in
mov
add
sbb
sarl
dec
xchg
outsb
and
mov
adc
out
mov
lcall
and
xor
or
sub
lods
sub
and
mov
dec
inc
arpl
popf
lret
int3
cmc
sbb
rclb
push
dec
fistps
xor
in
mov
pop
inc
cmpsl
rcll
push
in
mov
aas
add
lea
mov
shr
mov
jae
cwtl
cmp
in
ljmp
pop
and
jno
stos
or
cmp
dec
mov
xor
into
mov
push
mov
jmp
inc
repnz
cmc
mov
mov
sbbl
push
rcrl
pop
shl
xor
mov
jg
jge
clc
movsl
icebp
cmp
xor
xor
or
adcl
lods
mov
cwtl
ja
out
ds
nop
daa
fcomp
sub
xor
dec
ljmp
mov
fimuls
insb
pop
adc
fnsave
jge
ja
stc
cmpsl
rep
mov
inc
or
mov
bound
and
pushf
je
sub
mov
imul
ret
jnp
cmpsl
loope
xchg
push
pop
cmc
xchg
or
sbb
cmpb
adc
add
sbb
xor
mov
xchg
pushf
inc
cmp
leave
in
cli
f2xm1
pop
sbb
cmp
mov
push
xchg
inc
inc
mov
mov
std
xchg
outsb
mov
lgs
adc
mov
inc
hlt
xor
or
or
cmp
mov
xchg
mov
jl
push
add
es
mov
or
sbb
js
xorb
xchg
or
into
fstp
xchg
jno
cli
pushf
cwtl
xor
dec
inc
outsl
test
lcall
inc
xchg
sub
jns
push
mov
xchg
ds
aas
dec
ss
mov
pop
dec
dec
cmc
subl
mov
inc
aam
push
fcmovb
mov
out
in
inc
mov
mov
stos
mov
adc
insl
dec
aad
dec
and
mov
std
pop
inc
adc
imul
dec
cmp
push
sbb
mov
and
in
lret
les
inc
lods
mov
and
stc
or
cmp
cwtl
das
adc
inc
cld
sahf
leave
lcall
movsb
incl
imul
add
cmp
pop
les
pop
sbb
loopne
sub
and
xor
mov
sbbl
mov
sub
jbe
mov
jmp
jg
xchg
inc
call
ljmp
or
fcoml
lock
mov
pop
sub
fstpl
shll
cmp
jbe
lods
fcoms
jp
rolb
repnz
shrb
cmp
adc
ret
mov
sub
adcl
mov
xchg
sar
in
sbb
loopne
testb
test
xchg
add
pop
sbb
test
icebp
mov
jbe
stos
cmpsb
outsl
push
iret
insb
sahf
xchg
xor
outsb
push
sub
dec
add
icebp
rcr
fcmovbe
push
rcr
inc
das
push
insl
fdivrs
mov
idiv
test
mov
sub
bswap
sbb
fildll
pop
jb
push
mov
mov
and
jbe
lcall
cmp
das
popa
add
lret
fistl
mov
inc
dec
jle
mov
adc
daa
or
pop
cmc
or
jle
pop
and
push
jo
test
mov
cmp
sbb
cmp
dec
repnz
cmp
mov
cli
cli
repnz
xor
mov
mov
ss
jo
or
sbb
cmc
js
cmp
stc
cli
cmc
out
xchg
mov
and
andb
jns
leave
lds
mov
cmp
inc
cmpsl
sbb
xor
inc
in
outsb
jmp
adc
bound
and
aad
stc
pop
scas
sbb
jbe
mov
arpl
popa
call
jns,pt
mov
pop
loopne
insb
jno
add
pop
xchg
ret
ljmp
adc
add
stos
mov
js
outsb
xchg
std
mov
push
mov
fwait
pushf
mov
lahf
sbb
xor
mov
ja
loope
jo
andl
in
jmp
mov
push
or
inc
inc
pop
sub
xchg
or
inc
repnz
fmull
jg
adc
clc
xchg
xchg
lock
jno
push
clc
lcall
mov
rcrb
xor
sbb
mov
notl
and
jne
mov
push
pop
fistpl
cmpsl
mov
test
out
dec
push
pop
into
and
mov
sahf
out
xchg
xchg
decb
cltd
cmc
inc
mov
and
mov
sbb
sbbl
jno
push
ret
addr16
aad
inc
or
loopne
pop
das
mov
jecxz
add
add
mov
push
jno
adc
or
popf
xorb
gs
mov
sbb
pop
out
jecxz
push
sub
rcrl
pushf
dec
mov
push
cmpsl
shll
sahf
int3
in
pop
or
call
shll
mov
xchg
mov
xchg
pop
mov
xor
sub
out
adc
inc
dec
xchg
adc
ret
push
pushf
jno
mov
fs
dec
adc
push
jae
fistpl
addr16
clc
addr16
pusha
push
sbb
cltd
cmp
inc
mov
inc
pop
out
push
push
sahf
pop
ficoml
inc
outsl
jne
fwait
pop
push
push
jno
ds
std
xchg
pop
adc
cmp
fiaddl
sub
shll
cmp
jge
repnz
leave
inc
adc
or
xor
dec
push
fldl
dec
fnstsw
mov
lea
f2xm1
mov
xchg
clc
int
ljmp
test
xor
sbb
add
pop
xlat
dec
daa
push
jae
xchg
jle
mov
out
rcll
aaa
popa
xchg
outsl
dec
out
cmp
aas
lea
jns
aaa
pop
pop
inc
aaa
les
adc
les
mov
dec
fadd
mov
push
xor
mov
mov
pushf
sbb
jae
jnp
icebp
fisubrs
xlat
cmpsb
sbb
cmpsl
lahf
and
jmp
iret
fdivs
lcall
icebp
dec
pushf
pop
insb
lods
ret
sub
add
insl
xor
shl
int
sub
movsb
in
xchg
cmp
inc
repnz
lds
xchg
es
mov
pop
scas
lds
mov
daa
das
push
nop
jo
sub
xchg
inc
pop
adc
sub
cwtl
lcall
push
cwtl
je
inc
jle
scas
in
mov
in
lret
outsb
pop
ret
mov
je
xchg
mov
or
push
popa
push
and
imulb
cmp
std
pmaxsw
mov
xor
xor
xchg
push
jmp
mov
lock
xor
sbb
filds
lock
add
rcrl
lds
cmpsb
bound
roll
push
imul
xchg
xchg
sub
sbb
push
xor
mov
sub
cmp
std
adc
jecxz
pop
cli
into
pusha
movsb
js
sub
mov
mov
push
dec
loop
cwtl
pop
sbb
xchg
push
xchg
je
inc
mov
push
jecxz
nop
adc
gs
and
mov
lcall
dec
lahf
adc
fmull
mov
pop
cmp
cmp
test
das
jge
addr16
jbe
loopne
jns
loop
aas
sub
jbe
cmpsb
cmpsb
and
rolb
out
adc
mov
sub
push
mov
inc
enter
orl
sub
push
lcall
in
iret
rcr
inc
hlt
mov
faddp
jmp
sahf
mov
jae
xlat
fistpl
pop
xchg
int3
pop
movl
jecxz
aaa
or
ss
sbbl
in
les
push
mov
cmpb
popa
lahf
or
mov
ror
rcrl
repz
sub
push
cmp
or
xor
sbb
mov
push
jbe
in
out
call
mov
loop
cmp
cmpsb
lock
xchg
ds
mov
inc
pusha
xor
jge
popl
outsl
jno
push
xchg
push
xchg
cmp
xchg
sbb
push
xlat
pusha
and
mov
or
lcall
pushf
icebp
shr
popa
xor
push
adc
push
xchg
inc
dec
xchg
push
mov
or
scas
cmp
int3
mov
inc
xor
sbb
mov
push
fucomip
mov
aaa
mov
sub
push
fsubs
test
dec
or
sub
call
or
xchg
mov
mov
sarl
xor
add
nop
dec
mov
rcr
lock
xor
jg
shlw
loopne
pop
pop
sub
jae
sub
mov
popa
xor
inc
mov
push
cmpsb
mov
popa
inc
and
in
push
ljmp
sbb
das
mov
mov
dec
lcall
sahf
mov
pop
xor
js
movd
or
cmp
add
out
in
scas
data16
or
int
add
mov
out
xchg
aaa
imul
into
addr16
push
fisttps
cmp
or
cmc
xlat
popf
push
test
es
and
movsl
iret
pop
fwait
lds
adc
mov
movsb
xor
dec
pop
sti
lret
pop
fsubr
pop
das
pusha
mov
imul
icebp
xchg
xchg
test
jl
arpl
mov
xor
test
bound
adc
mov
aaa
cld
ljmp
mov
mov
mov
ja
imul
push
fcompl
loopne
xchg
mov
push
lahf
arpl
insb
lcall
cmpsl
xor
cmpsb
hlt
push
mov
mov
dec
add
add
dec
fdivrs
jns
js
or
jo
sbb
lock
push
sub
dec
xchg
frstor
mov
cmp
jmp
insl
xor
and
pop
daa
inc
mov
aam
mov
push
std
sub
xsavec
and
xor
sbb
xchg
sbbl
xchg
popf
loope
adc
sub
nop
cltd
mov
jno
fiaddl
adc
push
jge
sub
jmp
or
fdivl
fildll
arpl
push
sbb
filds
test
inc
ret
repnz
orb
ja
pusha
sarb
jns
push
cli
test
dec
cmp
lea
lds
fimuls
pop
push
imulb
popf
jl
sar
fmull
inc
mov
decb
cmpsb
sub
mov
push
push
jg
stos
shlb
sub
adc
nop
push
and
popf
in
ljmp
sti
ret
push
adc
pop
push
jg
notb
mov
add
mov
ret
sbb
inc
sub
xchg
sahf
rcrl
es
leave
lcall
mov
ret
sbb
rorb
jle
sbb
xchg
addl
in
inc
xchg
aaa
in
xchg
dec
fwait
cs
inc
pop
sub
jmp
mov
lret
inc
inc
pop
jnp
add
test
mov
jmp
push
lahf
mov
out
jo
pop
repz
xchg
mov
cmc
inc
icebp
jbe
pop
mov
add
push
outsb
idivl
dec
outsl
jnp
test
movsl
cld
mov
fildll
fsubrs
call
inc
adc
imul
pop
jno
popa
inc
shrb
mov
fildll
nop
incl
cmp
jo
insb
jns
out
xor
jg
mov
cwtl
gs
jb
xchg
stos
cltd
push
imul
lahf
into
mov
dec
pop
movsb
or
bound
add
bound
lret
shlb
dec
push
dec
pop
pop
add
movsb
add
and
repz
mov
jb
push
sub
pop
xlat
push
mov
bnd
cli
add
test
repz
push
mov
adc
std
ret
nop
jle
fwait
sbb
ljmp
js
mov
das
mov
movb
and
ret
xchg
add
add
cwtl
ja
mov
push
jnp
push
jl
dec
cmp
addr16
sub
filds
es
and
pusha
pop
lret
and
shrl
push
sbb
lea
adc
jnp
adc
mov
stc
jecxz
pop
sub
cmp
or
dec
jne
mov
inc
add
inc
daa
mov
ret
cmc
inc
dec
jmp
icebp
jecxz
or
cmpsl
mov
inc
stos
dec
add
push
arpl
stc
cmp
gs
aas
and
sbb
and
sbb
fsts
jne
push
push
xlat
pop
cmp
lods
inc
cmp
push
subl
test
sub
add
mov
inc
cmp
mov
add
pop
cltd
pop
jp
xchg
inc
out
aam
popa
lret
ret
dec
cmp
xchg
dec
inc
dec
xchg
shlb
rorb
mov
cmp
adc
mov
movsb
icebp
popf
neg
push
je
xchg
jno
popa
dec
cmp
dec
pop
mov
scas
add
call
cmpsb
enter
jg
dec
aaa
add
mov
sarl
dec
sbb
rclb
out
fadds
in
sbb
push
aad
add
sbb
dec
fnstcw
lds
addb
or
sbb
imulb
shrb
pop
outsb
ljmp
or
daa
test
dec
orb
add
adc
sub
add
or
test
jbe
pop
in
and
add
adc
mov
sbb
sbb
loopew
mov
into
dec
push
sbb
cmc
dec
lods
rcr
cmc
sbb
dec
aaa
movsl
hlt
call
inc
pusha
mov
adc
out
stos
ljmp
cld
loope
jecxz
rorb
push
cmp
imul
test
fs
dec
bound
jle
mov
push
or
pop
sbb
mov
std
leave
pmulhw
push
hlt
xchg
cld
push
mov
pushf
dec
sub
inc
cmpsb
sub
in
shlb
dec
aam
lret
aaa
outsl
mov
scas
rcrb
adc
arpl
mov
add
xchg
push
add
adc
loop
test
out
cld
in
xchg
dec
or
and
repz
leave
stos
xor
ds
mov
sbb
imul
mov
roll
jge
es
lods
lahf
shrb
scas
shlb
cmp
push
mov
je
add
adc
add
loopne
mov
loopne,pn
jecxz
inc
mov
jecxz
sub
es
push
std
jge
cmpsl
aas
push
adc
push
std
or
mov
sti
mov
xchg
xchg
cld
dec
push
ljmp
lahf
stos
out
xor
sbb
cltd
dec
cmp
and
in
xchg
int
fs
cmp
sbb
aad
xlat
or
rorb
xchg
jle
lea
inc
fsubl
or
jp
push
push
testl
pop
pop
stos
stos
jo
sub
fs
lcall
push
sbb
dec
fistl
or
push
jb
ror
ljmp
test
xchg
rcl
popa
mov
stc
fwait
push
enter
scas
cs
sub
mov
pusha
mov
scas
push
jecxz
test
cmpb
mov
test
and
stc
ficomps
sub
jo
int
cmp
push
or
adc
and
and
sbb
movsb
push
test
jne
je
imul
adc
pop
adc
mov
add
negl
cmp
xchg
call
enter
clc
push
jle
xor
icebp
mov
jp
xchg
imull
insl
scas
add
sub
sbb
js
dec
aas
xchg
fisttpl
clc
jno
ret
aam
jo
loop
lock
mov
jecxz
xchg
shll
pop
and
pop
loopne
jge
pop
pop
mov
out
xorb
daa
aaa
iret
jmp
pop
xchg
cld
adc
pop
dec
xor
addb
inc
mov
in
push
jo
inc
mov
xor
cmp
dec
cmp
icebp
xor
std
cltd
mov
std
lds
dec
addb
sar
sti
cwtl
clc
popl
fildl
enter
scas
add
sub
outsl
aad
and
out
jb
test
add
jns
ds
in
push
sub
cld
mov
push
mov
adc
dec
pop
push
jno
ret
jnp
cwtl
bound
inc
pop
ss
pop
cmc
outsl
jg
bound
mov
jp
stc
mov
push
add
xor
jge,pn
test
xor
scas
sbb
pop
inc
push
xchg
imul
nop
mov
scas
fdivrl
lds
and
test
mov
xlat
mov
ljmp
xchg
ja
or
aad
in
out
ljmp
lods
mov
int
movsb
sub
cmc
aaa
mov
mov
leave
lahf
aaa
push
stc
lcall
mov
sahf
cmc
pop
pushf
mov
jnp
dec
rcl
repz
jbe
jo
jecxz
and
mov
ficoml
rorl
push
cmpsl
add
out
out
or
xchg
nop
ljmp
jnp
cmp
cmp
mov
inc
xor
mov
dec
decl
sbb
outsb
jge
bound
pop
movsb
jge
fprem
sahf
lcall
cltd
popa
in
push
ja
dec
adc
add
in
data16
add
nop
popa
aas
divb
aas
sub
xchg
shl
loopne
sub
lods
les
aad
push
callw
sub
or
rcr
push
lret
iret
call
mov
loop
aad
xchg
or
sub
lahf
test
mov
mov
xor
inc
ds
pop
imul
dec
xchg
test
xor
dec
pusha
aas
and
arpl
inc
push
cmp
or
aam
ret
or
pop
xlat
adc
dec
aaa
xchg
push
mov
mov
xchg
fs
es
xchg
push
idivb
int
nop
mov
fs
out
and
js
add
dec
gs
or
push
notb
js
mov
mov
cmpsb
pop
sub
in
sub
cmp
mov
lcall
mov
in
pushf
sbb
mov
outsb
mov
cwtl
cmp
out
inc
jg
pop
and
lret
mov
mov
ss
push
stos
sub
in
in
call
add
xchg
mov
pop
mov
push
fidivrl
fucom
add
inc
sbb
mov
sbb
stos
jns
inc
neg
xchg
into
xchg
mov
sbb
jp
xchg
inc
dec
sub
fwait
bnd
in
jge
lret
lcall
xchg
add
fdivrs
imul
icebp
stos
or
mov
and
pop
insb
mov
dec
cmp
jmp
shrl
pop
push
daa
push
dec
sbb
lds
cli
push
daa
vmaxps
lret
and
mov
inc
pop
ror
aaa
jno
rorl
sbb
dec
and
shrb
movsb
cmpsb
adc
or
mov
stos
sbb
cmp
xor
add
or
sti
lods
and
jmp
andb
or
mov
xchg
or
pop
out
xor
inc
add
stc
xchg
cmp
aaa
mov
jg
jecxz
sbb
xchg
out
sti
nop
or
js
in
add
adc
xchg
fidivrl
adc
sbb
and
and
push
sub
sbb
imul
jne
or
xchg
mov
ja
add
jo
rcrb
enter
les
daa
aaa
stos
repz
rclb
or
xchg
test
test
cmpsb
lea
mov
out
jns
xor
and
dec
scas
lds
inc
les
push
cmp
cli
add
sub
loope
cli
loop
outsl
movsl
sub
dec
push
xchg
nop
jns
jmp
pop
gs
loopne
mov
enter
mov
mov
jl
mov
js
insl
jne
xor
daa
movb
repnz
add
jmp
xor
add
ljmp
inc
mov
lret
dec
int
sub
addr16
lcall
aas
and
or
or
stos
sbb
xor
mul
loop
and
aas
mov
ffreep
movsb
jnp
adc
mov
mov
pop
adc
ficoms
lahf
into
inc
pop
test
cs
out
jo
rorb
sti
jmp
cmpsl
stc
icebp
cli
imul
push
hlt
mov
push
jnp
fnstenv
loope
lods
or
ret
mov
sbb
mov
mov
inc
sub
sbb
out
inc
pop
or
adc
inc
aam
mov
and
jmp
std
mov
jl
aaa
subb
movsb
lds
test
or
xor
fsin
nop
push
xor
out
add
cltd
scas
lods
sbb
inc
inc
dec
push
loop
adc
xchg
dec
data16
xchg
push
mov
icebp
test
push
int
fisttpll
dec
incb
cmp
mov
mov
repnz
xor
pop
iret
xchg
cmpsb
dec
imul
sub
cltd
mov
add
sbb
xchg
imul
adcl
dec
outsb
push
xorb
sar
pop
rcl
mov
push
or
loopne
adc
mov
sub
inc
loope
cmp
cmpsl
xchg
lahf
or
or
lahf
notl
dec
jge
inc
fcoml
mov
fs
xor
aad
xor
imul
sbbl
pop
sbbb
sbb
jp
push
repz
dec
pop
jg
pop
std
outsb
enter
add
pop
ds
jge
fptan
jmp
cmpsb
cli
mov
rorb
icebp
movsb
cld
fistpll
ss
inc
lods
mov
loopne
ret
testb
nop
cmp
adc
jl
dec
inc
gs
add
out
hlt
rcrl
mov
xor
shrb
and
out
or
pop
gs
add
xor
adc
mov
jecxz
aam
addr16
cli
sub
push
pop
cmp
mov
mov
aad
pusha
aam
adc
mov
mov
pcmpeqw
inc
mov
fisubrl
inc
out
xchg
pop
push
sbb
fcom
mov
dec
cmp
sub
fsubrp
ja
ffreep
mov
push
adc
scas
jmp
add
ret
jae
enter
cmp
mov
dec
cmp
fsubrl
cli
call
push
pop
cmpsl
nop
loopne
out
ljmp
call
mov
icebp
pop
sub
or
jmp
push
jg
loop
into
or
daa
int3
pop
jo
push
ret
cmp
lahf
or
mov
roll
aam
add
dec
out
mov
adc
mov
je
sub
int
test
jg
fisubs
imulb
or
push
mov
test
pop
dec
cld
into
inc
dec
xchg
xchg
sbb
popa
or
sbb
lcall
fildl
pusha
lds
addr16
pop
outsb
in
cmc
sahf
sahf
dec
sbbl
jecxz
cmpsl
push
outsl
in
pusha
stos
xchg
sub
std
add
lods
xchg
popf
mov
and
cmp
push
push
test
sub
mov
rclb
lcall
cltd
sbb
xor
xchg
jmp
cmp
loopne
and
pop
sub
sub
cmp
cltd
add
jl
pop
lea
es
movsb
ret
out
in
pop
or
mov
icebp
mov
dec
jbe
imul
xor
fstl
or
hlt
mov
inc
push
mov
pop
sub
aam
xor
adc
lret
pop
ljmp
in
popf
cli
cltd
xor
popf
inc
mov
orb
imul
mov
pop
enter
outsl
out
push
add
fldl
and
push
aaa
jl
hlt
fmuls
cmc
xchg
sti
sahf
call
lea
inc
out
add
jns
jl
out
jmp
shr
test
incb
aad
mov
imul
sti
gs
xor
jge
inc
leave
pop
xchg
mov
xchg
int
xchg
mov
mov
xchg
xchg
js
aad
push
faddl
in
enter
jecxz
or
pop
std
shll
mov
pusha
cmp
sub
mov
mov
push
sub
iret
pcmpgtw
jg
stos
or
ret
dec
pop
outsb
lock
xor
repz
sub
ss
in
jbe
repz
mov
and
sub
pop
outsb
inc
js
sti
cmp
inc
int3
outsl
cmp
cltd
jmp
dec
mov
ret
hlt
aad
stc
adc
pushf
cmc
jae
jle
xor
push
jnp
leave
mov
cmc
jbe
add
insl
push
insl
fistps
push
jg
push
sbb
xchg
adc
mov
adc
inc
xor
data16
mov
fwait
sbb
popa
in
mov
test
jno
fsubs
adc
inc
inc
fstpl
aas
adc
xchg
in
scas
lods
inc
jmp
push
mov
fidivs
pop
rcrl
inc
and
cwtl
pop
jle
fdiv
or
push
and
lods
xchg
ds
pop
rcrl
push
inc
jae
sahf
in
and
or
es
lret
nop
xor
out
adc
push
push
in
cltd
mov
gs
cld
cmp
adc
aaa
xchg
cmp
mov
mov
fisubl
mov
cmp
loopne
or
sub
ljmp
push
xlat
inc
pop
icebp
shll
daa
xchg
int3
idiv
adc
adc
es
push
and
pop
push
testb
ja
scas
xchg
nop
outsb
addr16
pop
leave
add
lret
scas
lret
and
push
pop
jg
ja
xor
push
mov
xchg
pusha
test
orl
cmp
scas
adc
pop
aas
arpl
jbe
lret
jns
stc
xor
inc
xlat
mov
ret
test
fdivrp
mov
movsb
cmpb
xor
les
cmc
mov
and
mov
lods
xchg
sahf
insb
mov
mov
mov
jp
cmpsl
lods
aas
xor
xchg
int3
sub
push
jl
test
fnstenv
popa
repnz
xor
inc
outsb
sahf
mov
and
adcl
loope
fwait
inc
cld
dec
mov
jecxz
cmpsb
popa
je
cltd
ja
cmp
lock
cmpsl
insl
sub
dec
jno
cmp
pusha
mov
xlat
jne
out
sub
mov
xor
icebp
je
data16
dec
push
iret
jae
psllq
mov
test
outsl
pop
or
add
cmc
jbe
xchg
push
cli
negb
sub
jbe
sbb
add
jne
xchg
imul
mov
ja
adc
mov
pop
cli
add
pop
movsb
xchg
add
cmp
insl
sbb
jle
jle
jb
mov
std
pop
jno
xor
fildll
push
add
jmp
adc
icebp
mov
cmp
popa
and
adc
push
orb
imul
adc
xchg
shr
sub
ficoms
add
sub
jae
dec
jns
adc
call
cs
stos
sub
push
icebp
mov
mov
popf
in
mov
push
movsb
dec
in
in
lret
vmptrld
fcmovnb
outsb
push
cmp
cmp
outsb
jp
fnsetpm(287
push
cld
lock
sbb
nop
xchg
lcall
pop
xchg
subb
push
adc
daa
scas
inc
nop
dec
pop
lds
sbb
pop
pop
lds
add
outsb
negl
push
mov
cmpsl
push
mov
fildl
cmp
rclb
xchg
daa
sub
jns
xchg
pop
daa
out
pop
loop
pusha
out
mov
repz
jnp
jmp
xchg
and
nop
jno
xor
lea
cmp
dec
sbb
sbb
jns
mov
pop
dec
jae
pop
push
mov
out
cli
arpl
test
mov
and
xor
popa
sub
and
out
dec
cmp
loope
and
cs
ret
std
inc
bound
inc
mov
and
xrelease
mov
hlt
mov
cmp
iret
lcall
stos
xchg
std
lock
rcll
inc
std
jne
nop
leave
pop
mov
out
mov
push
pop
push
push
ss
popl
pop
test
inc
pop
inc
cmp
and
pop
shrl
loop
in
scas
mov
std
clc
pop
add
icebp
adc
push
inc
xchg
jnp
int
out
pop
adc
pop
inc
leave
insb
mov
xor
cld
mov
es
imul
add
stc
arpl
fisttpll
in
mov
and
and
repnz
movsb
mov
xlat
xchg
ret
add
mov
pop
cmpsb
sub
imul
xor
hlt
xor
lds
adc
mov
cli
push
sub
cltd
insl
dec
mov
enter
pop
ret
sub
loop
dec
imul
pop
fdivs
pop
jmp
icebp
add
add
sbb
dec
push
jg
inc
sbb
lret
inc
in
in
pop
cli
nop
bnd
sbb
or
lcall
cmpsb
dec
mov
int
or
out
adc
imul
xchg
add
mov
xchg
mov
adc
pushf
pop
fstpl
jle
jp
outsb
pop
fistpl
sbb
cmp
in
adc
into
xor
mov
into
add
shrl
pop
ds
mov
insl
xchg
stc
push
mov
pop
lods
lds
jnp
fimuls
and
jl
dec
and
sbb
cmpsb
sub
addr16
or
int3
add
adcl
xchg
in
sbb
push
aad
cwtl
push
out
sub
xchg
xor
shrl
dec
inc
jle
adc
push
jle
xchg
pop
lea
mov
xchg
push
iret
xor
or
test
ret
push
mulb
mov
and
pop
mov
stos
mov
sbb
cmp
cli
icebp
loope
push
sub
stc
pop
pop
push
insl
add
or
or
decb
or
test
pop
lret
clc
pop
sbb
adc
push
popf
punpcklbw
sbb
and
jo
add
jge
out
xchg
ret
divl
pop
mov
mov
fadd
sub
push
outsl
jg
sbb
jo
popf
mov
and
movsl
mov
lods
push
jns
int3
ljmp
xor
xchg
push
out
mov
sbb
add
jge,pt
pop
mov
fistps
mov
mov
test
jp
daa
bound
test
jnp
fdivrl
xchg
or
pop
fisttpl
jg
sahf
dec
jmp
jnp
mov
pusha
xchg
mov
mov
fdivs
out
mov
or
push
pop
push
and
cmp
bound
or
out
call
outsb
aaa
jne
test
cld
inc
sub
lds
add
popa
sarl
inc
push
test
sti
xchg
xor
jmp
add
test
out
inc
adc
ss
mov
jle
dec
call
clc
push
xchg
mov
dec
lds
sbb
pop
xor
dec
js
repz
xor
out
pusha
adc
adc
imul
lcall
mov
xor
adc
lds
mov
mov
clc
cltd
data16
aas
add
jmp
xchg
or
cmpsl
lahf
adc
push
mov
dec
mov
bound
mov
pop
push
pop
push
popf
test
in
jg
data16
addr16
jo
adc
push
pop
mov
mov
mov
test
daa
daa
jno
adc
insl
aas
mov
call
ds
notb
mov
addr16
xchg
aad
int3
cmp
cs
push
xchg
sbb
or
inc
jle
dec
lds
lods
push
pusha
leave
jb
call
jnp
imul
push
sbb
xor
inc
inc
repz
or
mov
in
cmp
mov
repz
jle
lods
add
sbb
out
xchg
repz
js
aaa
cmp
add
out
add
xlat
orb
mov
outsl
xchg
xchg
adc
rcl
lea
mov
mov
fsubrl
pop
push
dec
cmc
stos
jns
inc
outsl
or
push
test
outsl
add
sub
popa
or
stc
dec
mov
xorl
les
sbb
outsl
xlat
imul
push
outsl
cmp
dec
add
mov
aas
xchg
push
icebp
movsb
dec
xchg
inc
pop
cmpsl
adcl
nop
push
push
mov
dec
dec
sub
inc
shrl
fiaddl
les
sti
sbb
xor
jle
pop
push
or
pop
cmp
scas
jns
ret
mov
stos
addr16
cmp
in
adc
stos
inc
push
push
push
rcrl
adc
setbe
sub
cmp
jmp
jg
add
jno
mov
addr16
cltd
sarl
jp
jb
mov
xor
ja
sbb
pop
cmp
enter
jp
mov
inc
ljmp
in
fisubrs
and
sbb
ss
adc
adc
mov
adc
out
mov
jmp
pop
sub
cmp
sti
les
sub
and
ret
aad
add
cmp
inc
sbb
or
rcr
add
lods
loopne
jle
test
mov
sub
shl
xchg
dec
dec
pop
jno
jge
sbb
jle
sub
jge
cs
jmp
loope
mov
aas
fmuls
mov
jb
sar
cmp
dec
sub
lock
rorb
imul
lret
mov
lret
xchg
stc
lret
or
xor
insb
push
mov
jbe
adc
or
cmp
idiv
mov
movsb
icebp
imul
mov
lret
add
insl
aas
and
ror
jb
inc
dec
mov
cmc
ds
add
mov
and
loope
pop
dec
pop
push
ss
lods
lcall
stos
shl
aaa
mov
jo
mov
push
cmp
es
jnp
call
mov
push
cld
aad
cmpsb
int3
stc
popa
push
out
pop
outsl
or
jne
out
pop
fistpll
outsl
orb
stos
push
js
lods
jl
xchg
and
pop
pushf
mov
sbb
adc
push
in
push
dec
push
sub
jno
push
vmovntpd
xchg
sub
incb
shl
int3
dec
imul
ret
cwtl
push
in
les
push
xchg
mov
mov
jle
xorb
cmp
call
mov
pop
iret
jnp
jae
cmp
mov
jg
cmp
fidivl
fadds
xor
jecxz
lds
cmpsb
cmovb
mov
jmp
iret
dec
sbbl
aaa
pop
or
rorl
test
js
clc
mov
cmpsb
hlt
sub
mov
popa
es
in
in
cltd
push
in
adcl
jl
push
adc
addr16
iret
mov
add
sub
dec
loop
push
outsb
mov
ror
mov
and
cmp
cmp
daa
sub
push
jno
stos
sbb
pop
mov
inc
outsb
cld
mov
jbe
cmc
orl
into
lods
add
mov
push
stos
inc
mov
loope
ljmpw
inc
cmc
xor
inc
adc
or
icebp
imul
push
jge
xorl
and
int
sub
mov
out
mov
adc
and
sbb
hlt
jmp
aam
loop
cmpsb
push
and
dec
out
push
xchg
sbb
leave
ds
std
cmpsb
lret
mov
icebp
dec
loopne
nop
add
pop
mov
inc
aaa
repz
pop
test
stc
xchg
rcrb
push
jl
and
adc
mov
lahf
pop
outsb
jno
mov
ret
mov
push
sub
xchg
pop
mov
sti
mov
mov
cmc
arpl
aaa
push
ljmp
stos
dec
lds
jo
pop
int3
or
pop
sahf
and
push
pop
cmpsl
fstp
leave
jno
ret
nop
fisubl
cld
imul
inc
cmp
push
sbbb
dec
hlt
repz
std
popa
jae
add
popf
or
insb
xchg
inc
inc
test
cltd
cld
leave
int
mov
push
or
inc
sarb
push
bound
lcall
adc
andb
sti
mov
mov
push
mov
xchg
test
mov
cmpsl
cmp
jmp
and
jmp
or
jle
sti
and
adc
mov
lods
lods
sub
mov
lods
mov
dec
xchg
xor
fmul
stc
jo
pop
idivl
aas
cmp
out
push
mov
test
iret
test
lods
dec
popf
jns
mov
push
dec
divl
icebp
cmpsb
insl
leave
add
sub
pop
mov
into
mov
pop
sub
add
pop
pop
and
paddusw
mov
xor
and
cli
jo
cli
shrb
jae
ss
add
adc
jb
loop
je
outsl
in
ret
add
nop
add
jns
mov
in
dec
mov
xor
pop
mov
fcmovnb
fstl
xchg
and
enter
fsub
fdivrp
mov
sbb
sbb
fldt
adc
inc
ret
jecxz
stc
cmp
cltd
mov
xor
inc
jge
jmp
leave
mov
mov
cli
add
inc
lahf
int
daa
pusha
mov
jb
xor
mov
fwait
lods
xchg
and
or
mov
dec
rorb
add
xchg
test
xchg
fdivl
in
add
lds
xchg
and
jae
xchg
cmp
movsl
call
xor
fwait
sbb
sub
dec
imulb
iret
push
or
sbb
push
in
xchg
je
fdivl
mov
insl
out
dec
mov
mov
xlat
movsl
fsub
sub
sbb
xlat
push
stos
and
adc
push
mov
and
insb
call
push
sbb
pop
scas
psrad
fmul
cltd
cmp
or
ja
stos
insl
fdivrs
push
xchg
in
stos
adc
mov
mov
insb
dec
aad
push
cmp
add
out
repnz
or
sbb
or
add
arpl
mov
sbb
stos
cld
jne
loopne
and
out
sbb
jmp
jbe
insb
fcoml
pop
bound
test
popa
mov
pop
jne
or
dec
cwtl
jne
in
mov
adc
outsb
push
jp
xor
mov
je
cmp
and
jb
mov
cs
lods
xor
aad
mov
mov
cli
sbb
mov
dec
lock
mov
insb
test
and
insb
inc
orl
xchg
nop
adcb
aas
xchg
dec
lret
mov
dec
cwtl
pop
lods
pop
stos
insl
ds
int
mov
cmp
or
mov
cmpb
sub
push
ret
cmp
mov
call
xor
pop
inc
aam
fstps
in
xchg
mov
stos
stos
mov
arpl
adc
cmp
es
jnp
shl
in
test
xlat
xor
hlt
mov
pop
aad
cmp
cmp
push
dec
mov
insl
insb
jno
jmp
mov
inc
push
imulb
sbb
mov
cmp
in
test
sbb
inc
in
in
and
mov
sbb
xor
lret
push
inc
stc
jl
cmp
mov
jae
jmp
shl
and
fwait
xchg
je
dec
xor
sbb
fdivs
sub
add
mov
or
fistps
add
sbb
xor
sti
es
popf
jbe
in
shlb
jg
lock
jecxz
adc
or
xor
inc
pop
lds
add
das
shrl
jg
or
leave
xchg
pop
bound
mov
lret
mov
sbb
ja
mov
sti
mov
cmp
cmovp
pop
adcb
xchg
push
cs
cld
push
rcrb
outsl
add
call
test
scas
fbstp
xor
leave
ljmp
fsubrs
xchg
xor
into
add
add
add
or
notb
xchg
inc
cmpb
leave
clc
cmpsb
lods
add
adc
and
jo
or
jg
rorl
insb
sti
fdivp
mov
lds
sahf
xor
mov
lcall
add
lea
push
inc
loop
adc
repnz
loopne
add
xor
testl
or
mov
mov
cmpsl
rorl
call
stc
enter
movsb
imul
roll
or
int3
popa
mov
jb,pn
mov
nop
xor
and
ljmp
add
loope
inc
and
pop
ljmp
xchg
or
aas
mov
testl
xchg
sbb
aas
jmp
rcrb
lret
rcll
hlt
jl
fwait
mov
aas
imul
sarl
and
test
das
addr16
inc
enter
jae
mov
daa
std
divb
sti
push
mov
in
mov
inc
inc
ljmp
xor
bound
sbb
lods
sub
pop
adc
outsb
xor
jno
push
push
lods
ret
push
testl
and
aad
cli
mov
pop
add
cli
mov
push
testb
sbb
ljmp
clc
jnp
outsl
add
mov
cmp
cmp
and
or
adc
aaa
int3
cmc
cmp
mov
adc
adc
xchg
dec
cmc
xchg
xor
mov
int3
add
loopne
decb
push
and
pop
cmc
inc
mov
add
and
pop
insb
push
subl
jae
or
dec
and
movsb
xor
shl
loop
xor
call
inc
movsl
mov
lret
mov
mov
out
sub
lcall
mov
ss
addb
sbb
rorb
push
mov
xchg
pop
mov
sbb
push
inc
imull
inc
xlat
push
mov
cmp
movsb
sub
outsl
test
pop
and
fs
test
mov
jmp
jb
sarb
ja
xchg
lock
dec
jp
sbb
sub
shll
jo
sbb
ljmp
or
pop
dec
adc
jp
mov
xlat
add
loope
pop
push
adc
cwtl
adc
pop
aaa
sub
xchg
inc
push
and
add
add
ja
xchg
repnz
push
xorl
daa
and
jb
inc
sahf
fldt
xchg
fsub
and
vpand
cmp
dec
fwait
pop
mov
popf
pop
testb
pop
imul
mov
jne
xlat
cmc
add
add
in
aam
call
hlt
cwtl
popa
ret
jno
and
dec
cmp
push
pop
jp
nop
mov
aam
aas
clc
or
sbb
cmp
repz
xor
inc
lds
pop
and
decb
stc
push
pop
ja
and
flds
sub
push
fcoml
fs
daa
orl
cmp
jae
fldl
push
adcl
int3
adc
mov
jo
out
addr16
fstps
mov
xlat
or
adc
mov
dec
and
mov
mov
into
out
add
lea
mov
mov
sbb
jno
mov
insl
pop
cltd
js
sbb
data16
icebp
in
lods
rclb
inc
adc
jb
dec
test
push
jne
jmp
subl
movsl
cmp
or
xlat
stos
add
adc
cli
cmp
insl
pop
mov
cmpsl
outsl
add
or
icebp
push
push
popa
test
and
test
mov
cmp
push
movsl
cmp
xchg
stos
das
push
das
test
mov
rorl
loope
jae
xrelease
jecxz
xor
xchg
data16
cli
dec
pop
popf
add
pop
xlat
mov
popl
jne
sbb
inc
sbb
jle
adc
cmc
int
orl
cmp
insb
sti
idivl
pop
dec
and
es
sbb
in
pusha
iret
jmp
insb
xchg
filds
scas
xchg
pop
cmpsl
adc
mov
and
pop
fstl
lcall
aas
mov
jl
xchg
dec
cmp
mov
inc
ffreep
inc
aaa
mov
mov
pop
push
dec
cmpl
adc
and
ss
sbb
xchg
jb
cmp
add
jae
mov
xor
sub
fiadds
jg
out
loope
repnz
jne
inc
lea
lock
mov
inc
pushf
ljmp
xor
mov
jl
xchg
inc
xchg
scas
jae
test
cmp
push
in
mov
aaa
mov
loopw
mov
mov
mov
loope
inc
out
dec
sahf
xchg
xchg
into
mov
aam
rorl
adc
add
std
call
push
sti
cmp
pop
fsub
pusha
adc
shlb
fcomip
sbb
xchg
popf
pop
xchg
push
arpl
fstpl
test
mov
sahf
rcl
adc
and
loop
mov
dec
pushf
int
add
sbb
mov
or
jmp
jg
scas
fld
cmp
fcmovnbe
mov
rcr
pusha
push
xor
mov
data16
sub
test
jle
inc
push
cmp
repnz
repz
aaa
lods
mov
push
push
enter
ret
or
adc
jge
push
mov
icebp
jnp
test
std
int
rcr
aam
jne
int
mov
sti
xor
push
dec
mov
push
mov
add
dec
nop
rorb
popf
aad
jmp
pop
mov
pop
hlt
out
movsb
mov
push
lods
pop
mov
js
mov
rclb
call
dec
call
imulb
and
jge
fsubrs
pop
mov
stos
jmp
in
jo,pt
sub
mov
lcall
test
mov
add
pop
pop
dec
pop
cli
or
and
or
dec
dec
faddl
pop
push
cmpsl
push
jae
or
jae,pt
leave
pushf
push
jmp
mov
lods
push
mov
jae
mov
push
cmp
mov
mov
push
mov
fisubl
sub
dec
push
cmpl
pusha
dec
scas
test
icebp
or
adc
daa
mov
ret
cwtl
sub
jo
arpl
pop
sbb
cltd
inc
popf
push
pop
and
js
out
xlat
dec
mov
push
test
and
sub
rcll
mov
lods
cmp
loop
clc
cld
subl
inc
leave
push
mov
inc
adc
jnp
rol
ret
xor
sarb
loopne
popf
shlb
mov
and
pop
mov
test
cmp
add
iret
ljmp
shlb
fwait
cmp
sahf
shl
jp
cwtl
jg
mov
or
pop
cmpsb
sbb
lods
xchg
popaw
repz
dec
add
test
imul
aaa
add
sub
push
and
enter
adc
pop
clc
enter
and
push
sarl
dec
add
cmc
jl
bound
xor
dec
pop
aad
add
jbe
cmp
inc
popa
rclb
stos
outsb
and
adc
lahf
mov
nop
lods
repz
sahf
daa
mov
in
aaa
loope
out
mov
test
mov
in
push
mov
push
je
les
cmp
add
lret
out
mov
inc
rcrl
cli
pop
mov
mov
pop
xchg
test
in
fldenv
xor
stos
rcrl
lods
in
test
pop
nop
push
mov
mov
mov
lods
stos
bound
test
pop
mov
lcall
mov
or
cltd
xor
xor
stc
xlat
mov
dec
je
loope
push
dec
test
xor
fildll
fnsave
mov
fstpl
mov
sub
mov
js
inc
xchg
mov
roll
and
aad
orl
sbb
js
dec
out
push
lock
push
jle
in
or
ja
and
xor
nop
push
test
bound
icebp
cmc
stc
fists
aas
sub
xchg
fadds
or
cmovbe
mov
sbb
mov
mov
and
nop
push
sub
decl
rol
not
pop
xchg
pop
fcomip
push
xchg
jl
push
insl
sbb
neg
dec
ror
movsl
mov
jb
sti
cmc
jp
fs
outsl
es
jg
imul
lds
push
cmp
loope
mov
mov
add
out
sbb
push
push
dec
mov
scas
outsb
subl
or
inc
add
jge
sbb
enter
fldl
jp
in
sub
jg
mov
xchg
in
jnp
lret
int3
mov
xchg
jmp
xchg
mov
mov
xchg
mov
xor
icebp
cltd
js
cmpsl
sbb
loop
call
xchg
cmp
jbe
push
jle
into
sub
xchg
lea
and
in
mov
sbbb
fldt
push
pop
jb
repnz
in
mov
inc
into
cwtl
mov
negb
insl
xchg
fisttps
and
sub
pop
and
or
sub
sub
stos
cltd
xchg
divb
addr16
inc
sub
mov
push
das
push
fidivs
hlt
sub
pop
lock
mov
and
pusha
push
in
ficomps
add
or
idivb
mov
test
icebp
clc
and
mov
jl
push
pop
scas
pop
xchg
mov
sub
out
fwait
loope
call
sahf
add
pop
jmp
pop
arpl
aas
shll
xor
fsubs
or
sbb
inc
pop
adc
call
into
push
stos
sti
xchg
aas
out
xchg
iret
add
mov
xchg
daa
pusha
push
imul
and
and
mov
stos
mov
cmp
mov
cmp
and
xor
sub
xchg
xchg
and
inc
adc
dec
cmc
mov
pop
dec
dec
dec
cmp
or
popa
adc
inc
and
pop
dec
pop
idivl
mov
mov
mov
jno
jg
cltd
or
xchg
add
cmp
sub
push
insl
jecxz
jne
rolb
pop
pop
cmp
mov
daa
inc
dec
mov
iret
scas
jns
out
inc
add
cld
repz
pop
jns
outsb
popf
shll
push
inc
inc
xchg
and
outsl
inc
push
mov
into
mov
or
loopne
mov
int3
or
adc
fldl
xor
and
push
lods
add
in
ss
and
pop
or
jb
add
loope
push
daa
jmp
out
adc
int
sbbb
test
les
popa
sbb
push
mov
test
jle
or
cli
pop
test
push
aad
iret
jecxz
mov
jne
mov
ret
insb
fisubl
adc
icebp
inc
icebp
xor
fnstsw
aad
push
push
stc
dec
cwtl
sbb
nop
fstps
adc
sbb
cmp
aas
or
lahf
jns
iret
cmp
and
sub
and
dec
or
or
dec
sbb
dec
jo
int3
mov
sbb
sub
mov
repnz
test
dec
mov
xchg
sbb
add
xor
das
cli
dec
dec
jb
mov
sub
adc
dec
pop
pop
adc
and
scas
in
aad
mov
es
sub
pop
shl
xchg
cli
lock
ds
inc
push
mov
cld
ret
sub
mov
jecxz,pn
mov
iret
orl
cmp
icebp
sbb
xchg
pushf
hlt
cld
filds
clc
add
ret
rcrb
stos
push
pop
pop
xchg
and
push
sarl
out
loopne
cwtl
push
inc
cld
dec
jecxz
outsb
mov
sbb
mov
inc
aad
mov
roll
pop
popa
call
jo
cs
fbld
roll
cltd
sarl
cmp
sbb
push
mov
inc
xchg
negl
xchg
mov
jae
ja
stos
inc
scas
cmp
repz
xor
call
dec
jecxz
mov
inc
aas
hlt
popf
xlat
add
push
int3
test
mov
cmpsb
mov
ja
es
in
cmpsb
jge
adc
xor
and
sbb
xchg
sub
aaa
inc
xor
cmp
sbb
adc
xchg
and
fs
dec
cmp
sbb
cs
mov
and
les
rclb
mov
leave
and
mov
aaa
fldt
cltd
xchg
push
or
outsb
mov
imul
dec
lret
cmc
push
mov
xor
dec
vpunpckldq
dec
add
fwait
rcrl
xchg
fisubl
rep
cmp
fildll
inc
sub
dec
aad
dec
cld
jo
mov
jno
push
cmc
out
int
daa
testl
jns
jns
sbb
lods
fstl
push
clc
pushf
shll
scas
jl
out
and
cmpsb
inc
sub
insl
add
stc
out
ret
stc
cmpsb
pop
out
sbb
int3
ljmp
imul
enter
xchg
sub
inc
das
loopne
mov
mov
cmp
mov
adcb
jl
popw
inc
jge
dec
mov
and
stos
xchg
jno
jo
mov
xchg
leave
lods
xchg
and
decl
jmp
cltd
test
ret
push
ficoml
inc
hlt
movntps
xchg
push
pop
xor
rcrb
outsb
lods
cmpl
aad
sahf
sub
lds
mov
push
in
mov
test
dec
xchg
addb
addr16
sbb
nop
mov
pop
adc
mov
jbe
gs
pop
and
add
aad
mov
lods
roll
jl
out
dec
loope
add
sbb
or
add
fists
mov
call
fdivs
outsl
jae
cmpsb
mov
add
mov
ror
or
xchg
push
adc
mov
je
pop
xchg
rcrb
adc
mov
sub
in
xchg
inc
adc
push
loope
mov
jmp
xchg
fldcw
mov
adc
sub
pusha
mov
shll
scas
mov
das
push
arpl
xchg
xchg
jno
adc
xchg
push
jb
rcl
add
jle
xor
sub
add
fstpl
inc
push
rep
inc
leave
fcomps
pop
mov
or
mov
pop
cmp
in
jge
jp
xor
inc
lock
inc
or
arpl
scas
and
ret
mov
outsl
sti
ja
push
lods
lret
mov
pop
rcll
adc
cmp
cmp
or
ror
lods
popf
int
jg
cmpl
jecxz
xlat
ss
xor
xchg
loopne
fwait
jecxz
xchg
mov
mov
cmp
xor
mov
sub
inc
rcrl
mov
add
mov
mov
mov
fsubrs
jecxz
push
daa
xchg
or
mov
in
jno
cmpsb
out
sbb
mov
mov
add
pop
mov
ret
orb
ljmp
dec
sahf
sub
push
cwtl
rcll
sub
sub
lods
xchg
mov
push
mov
inc
stc
cmc
ljmp
sub
sbb
outsl
shrl
ds
inc
mov
add
or
lahf
inc
push
cld
mov
cmp
daa
popf
fimull
xor
dec
jae
mov
outsl
test
ret
mov
cmp
int
or
mov
and
jb
mov
pop
inc
test
xchg
arpl
cld
enter
adc
les
jg
icebp
divl
inc
jbe
sbb
bound
or
mov
inc
sub
in
xor
sub
test
shrl
inc
dec
imul
imul
leave
bound
fsubl
js
repz
ljmp
fwait
sub
add
imul
fwait
loope
jnp
cwtl
inc
insb
andb
or
lcall
or
mov
xlat
add
or
out
push
push
outsl
lret
xchg
mov
adc
xor
or
and
adc
xor
aaa
mov
pushl
iret
rolb
and
push
stc
and
pop
push
jp
mov
mov
in
cmc
mov
cwtl
arpl
inc
lret
into
adc
in
xor
fidivrs
and
int3
loope
std
in
icebp
daa
and
sub
mov
adc
push
adc
or
pop
sbb
push
adc
cmp
outsl
sub
add
jns
popf
and
lock
push
mov
add
popf
and
dec
sub
push
test
pop
mov
sti
adc
in
cmp
xchg
lds
mov
loopne
in
jae
je
sub
insl
arpl
fiaddl
stos
push
rorb
lret
xchg
and
scas
jge
sbb
adc
hlt
outsb
mov
and
daa
in
int
xor
repz
fimuls
dec
adc
nop
push
les
xor
mov
inc
dec
cmp
movsl
fsub
cli
js
fnstcw
insl
fmull
add
in
fistps
fcomip
stc
mov
xor
jae
aam
pop
jns
cwtl
jno
xor
xchg
outsb
mov
aad
test
stc
push
sub
adc
rcrb
andl
pusha
inc
hlt
xor
fsubs
iret
inc
sar
shll
add
lods
xchg
ss
repnz
adc
int
test
or
outsb
adc
pop
jge
das
in
mov
in
aaa
mov
fidivl
inc
loope
jbe
push
push
in
ret
cmpsb
in
push
out
ret
shll
test
das
inc
sti
stc
xor
and
ret
dec
and
cwtl
dec
adc
or
add
cmpsl
mov
add
test
cmp
dec
lock
scas
sti
int
push
sbb
xchg
test
add
daa
dec
push
pop
stos
js
xchg
cmc
cmp
and
cltd
sbb
aas
sbb
and
mov
mov
ss
jge
jmp
hlt
bound
push
add
insl
or
jbe
push
and
sub
mov
or
loop
int3
sbb
cmp
es
aad
add
mov
inc
fidivrl
adc
test
cmp
jne
mov
pop
cmpsl
jg
aaa
ja
xor
add
or
aam
cs
mov
leave
pusha
sbb
lods
ja
imul
enter
adc
xor
jae
adc
push
dec
xor
aas
in
pop
xor
outsb
inc
outsl
cmc
frstor
jmp
dec
lret
or
jp
push
fists
mov
fldl
mov
adc
js
jmp
loopne
or
ffree
lret
push
out
ds
fildll
adc
pop
inc
insl
xchg
call
sbb
out
mov
test
xchg
mov
push
cmp
inc
testl
adc
repz
add
dec
sub
adc
jmp
mov
hlt
aaa
loop
aam
idivb
cmp
pop
out
lock
pop
andl
push
cli
lret
stos
test
lock
loop
js
gs
test
adc
outsb
mov
flds
sahf
pop
jmp
push
mov
push
fs
sar
es
out
or
scas
icebp
movsb
lds
pop
loop
lds
push
add
add
push
nop
lret
dec
mov
and
sub
out
enter
imul
out
outsb
and
je
call
scas
cmp
add
test
jns
mov
and
sbb
dec
out
push
je
sbb
out
jg
sahf
cmp
dec
pop
dec
push
btc
sti
push
js
xchg
xchg
sbb
mov
or
adc
stos
mov
xorb
inc
mov
les
sub
pop
clc
xchg
add
sbb
lret
fdivl
and
sub
mov
mov
ss
cwtl
gs
je
pop
pop
mov
mov
mov
les
shll
outsb
push
mov
out
out
add
scas
xchg
cmpsl
xchg
jo
fcmovne
mov
daa
fldcw
dec
mov
adc
cmpsb
add
mov
int
xchg
in
mov
dec
inc
cmp
adc
and
addr16
cmp
ret
dec
mov
scas
xor
call
xorl
push
add
adc
push
pop
dec
or
sbb
mov
push
mov
fwait
xchg
cmpsl
cltd
cmpsl
fs
mov
jg
aam
aam
ljmp
iret
testb
stc
jbe
cmpsl
mov
add
push
ret
dec
jl
jge
jb
mov
push
out
push
ljmp
mov
int3
adc
mov
xchg
adcl
push
aas
ja
loope
dec
arpl
lcall
jge
insb
mov
mov
add
fptan
inc
mov
sub
rcrl
push
jnp
mov
and
push
scas
add
jp
jno
jo
aam
pop
lahf
lea
mov
push
pop
mov
test
icebp
sbbl
or
push
daa
mov
arpl
jne
pusha
jno
cmpsl
subb
scas
outsl
cwtl
jge
pop
or
dec
push
mov
dec
dec
cmp
mov
inc
push
mov
lahf
test
sbb
test
lea
and
inc
sub
out
add
popa
lea
mov
xchg
sub
mov
adc
inc
cmpsb
psrld
shrb
jg
and
int
jnp
mov
fdivrs
or
fcomps
xchg
repnz
sub
lcall
cmp
xor
js
mov
cmpsb
movl
add
mov
and
dec
mov
leave
add
jle
clc
sbb
in
int3
ret
leave
pop
mov
test
pop
and
adc
dec
lds
cs
xor
out
jle
shl
cltd
mov
insb
fdivs
pop
in
das
ja
lret
aad
int3
roll
ficoms
jecxz
in
mov
test
loope
sbb
or
xor
push
or
ficoml
pop
mov
rclb
test
jne
int
fcoml
jmp
jae
mov
pop
mov
stos
pop
adc
mov
test
mov
pushf
adc
adc
xor
add
sub
jb
jo
shlb
iret
mov
or
or
mov
or
sub
in
xchg
int3
jae
mov
cmp
push
cs
scas
hlt
push
fstps
nop
inc
mov
or
call
rorl
push
jae
jg
stc
inc
outsl
and
push
hlt
das
lods
jo
outsl
sbb
loope
xchg
repz
lret
jae
in
fbstp
mov
xlat
fsubrs
andl
fs
push
push
jle
out
outsb
negl
fimuls
pop
xorl
ds
fisubrs
into
and
push
xor
or
test
negb
stos
inc
imul
cmp
mov
bound
sbb
push
or
aas
xchg
push
mov
push
inc
sub
push
hlt
in
inc
mov
mov
push
push
lods
push
dec
xor
and
jo
ficoml
pushf
add
jbe
sbb
jmp
pop
and
add
imull
lahf
daa
cmc
orb
movl
cltd
jmp
outsb
mov
mov
push
into
mov
add
add
dec
or
outsb
lea
adc
dec
mov
hlt
movsb
subb
aad
push
gs
idivb
dec
lret
push
xchg
cmp
mov
cmp
push
bound
adcb
and
fadd
dec
mov
jmp
mov
cwtl
inc
push
mov
and
mov
fbstp
aam
mov
ds
mov
jno
scas
pop
leave
ret
xchg
movsl
xchg
repnz
icebp
outsl
stos
push
push
cmp
add
mov
mov
mov
adc
ljmp
out
push
jle
or
mov
add
rorl
push
pushf
sahf
push
fstpl
mov
mov
cmp
add
jae
out
icebp
hlt
xchg
jge
aad
pop
je
leave
xor
ljmp
sub
sbb
fsubs
xchg
test
mov
shll
loope,pt
sbb
dec
or
mov
jle
test
arpl
add
jno
mov
ss
stos
jle
pop
xchg
fsubl
xchg
xchg
imul
xchg
mov
ret
mov
mov
or
and
adc
pop
stos
fldenv
mov
mov
loopne
cmp
ret
pop
out
xchg
lods
hlt
push
ret
cs
xor
adc
push
push
orl
orl
sub
test
inc
pop
mov
push
xor
repz
repnz
jmp
aaa
mov
cmp
push
pusha
sub
movl
test
sbb
adc
xor
cmp
xor
ret
or
push
and
pop
aas
loopne
arpl
out
js
fidivl
cmp
mov
shrb
push
mov
scas
cmpsl
scas
push
out
sahf
mov
aam
loopne
loop
push
icebp
cmpsl
add
cmp
repz
sbb
stc
js
outsb
cmpsl
testb
fwait
imul
aam
fwait
lds
into
mov
pop
icebp
insl
out
cmpsl
fistpll
push
add
int
fmull
fwait
lock
mov
imul
push
cmpsl
cmp
mov
es
add
inc
out
outsb
lret
or
xchg
les
bound
test
and
fcmovbe
add
pop
xor
adc
das
sbb
cmpsb
dec
lods
hlt
cmp
shr
mov
push
inc
dec
movsl
jmp
cs
stos
in
out
lea
test
das
ljmp
arpl
scas
loope
sub
mov
fisubs
adc
lock
ljmp
xor
adc
adc
inc
push
fwait
and
cmp
aad
scas
movsl
push
fcomi
xchg
push
cld
cld
push
pop
ret
and
jle
fcoml
int3
mov
rcl
shrb
ja
fbld
outsl
mov
insb
data16
cli
push
jns
imul
xchg
mov
mov
and
push
subb
out
imul
mov
dec
or
loope
ja
cmp
repnz
mov
sub
movsb
ficoml
aad
or
call
scas
test
dec
sbb
sarb
or
and
sbb
dec
jecxz
mov
pop
push
jnp
ret
push
mov
dec
dec
or
sub
inc
outsb
leave
insl
ja
dec
inc
lods
call
jnp
xchg
jle
mov
test
vpsubsw
fstpt
mov
jmp
and
dec
popf
dec
vphaddsw
mov
jge
movb
cltd
pop
imul
cs
xor
loope
push
dec
inc
shll
nop
sbb
xchg
sub
lret
in
mov
pop
push
add
add
cmp
test
mov
dec
push
adc
adc
and
mov
push
test
xor
push
stc
xchg
mov
jle
fs
jo
sub
orl
arpl
xacquire
xchg
dec
lock
in
push
pop
mov
mov
sub
cli
push
lcall
stc
ud0
push
outsb
call
cmp
cli
inc
or
push
out
push
repnz
sti
aam
jns
mov
push
dec
loop
xor
scas
fwait
dec
in
out
add
out
mull
mov
and
jle
in
cli
ret
mov
fs
sbb
fs
jae
das
xor
mov
lcall
push
enter
cmp
mov
add
xor
orl
pop
and
or
ja
sti
stos
enter
jl
pop
data16
adc
xor
enter
dec
and
enter
ret
in
jae
jae
lcall
ud1
pop
mov
stc
xchg
and
xor
mov
xor
or
sti
xchg
or
pushf
cmp
mov
mov
stos
rclb
cmpsl
out
dec
addb
pop
ret
mov
pop
and
fistps
add
cli
decl
xchg
push
orb
stos
out
clc
mov
mov
xor
sub
mov
lcall
pop
mov
test
lea
rolb
mov
cmp
test
jp
leave
test
mov
jmp
movsl
rol
or
and
fsubrl
cltd
ljmp
push
cmp
enter
or
andb
fucom
push
mov
cli
sahf
inc
aad
sub
dec
les
loopne
add
in
and
movsb
sub
pop
mov
mov
sahf
and
sbbl
inc
andb
shrb
add
xchg
add
das
jl
sbb
rcl
pop
push
cmp
dec
lretw
lahf
and
leave
lock
clc
shll
mulb
mov
and
and
mov
cli
or
pop
scas
leave
cmpsb
mov
xchg
enter
cmpsb
scas
and
testl
pushf
mov
icebp
mov
push
cmp
aam
movsl
xchg
insb
aam
scas
xchg
pop
xor
adc
sbb
repz
push
stos
and
dec
xchg
push
add
shrb
lds
fs
adc
movsl
adc
rclb
jge
jae
cltd
pusha
es
jo
xchg
push
jae
cli
cmp
push
mov
inc
mov
push
push
nop
rcl
aam
jns
push
aam
fsubl
mov
out
jl
cltd
sahf
test
ret
dec
out
mov
jp
or
xor
adc
sub
iret
scas
mov
in
leave
lret
lret
jmp
pop
add
lahf
movsl
popa
cmp
sti
insl
stos
imul
fcoml
insl
pushf
xor
mov
sub
roll
out
adc
dec
addl
enter
sbb
jle
inc
insb
mov
push
cmp
cmp
xor
mov
jmp
test
cld
cmp
pushf
dec
add
outsl
jl
popl
lcall
mov
adc
pop
scas
and
out
das
das
sub
in
in
sbb
xchg
data16
sahf
fptan
jo
sub
addl
sarb
or
hlt
cmpl
mov
push
popf
mov
or
sbb
sti
push
fwait
in
and
sbb
xchg
outsl
pusha
test
dec
fwait
movsb
cmpsl
lock
test
or
cmpsl
movsl
add
shl
mov
add
in
jne
cmp
mov
movsl
mov
fwait
lds
andl
dec
mov
mov
push
cmpsl
subb
js
adc
inc
pop
mov
and
mov
jp
repz
cltd
out
negl
pusha
cmp
addr16
jae
ds
and
fcomps
ret
rcl
std
fldt
popf
mov
das
push
out
and
push
sub
add
out
jns
cmp
lock
sti
nop
clc
dec
sbb
mov
popf
fmull
jge
imul
aad
cmp
mov
fdivl
add
xchg
mov
jno
outsl
mov
loopne
mov
push
jbe
into
push
mov
cmpsb
jno
mov
adc
ret
xchg
xor
sub
in
bound
cmpsb
ss
and
add
xchg
lods
pushf
add
fimull
insb
mov
mov
lock
das
mov
adc
shrb
xchg
repz
pop
outsb
dec
out
or
xor
pop
ficoml
loop
in
in
jnp
test
adc
shll
enter
fnstcw
js
mov
insb
ret
ja
xor
ss
add
insl
jp
lahf
push
aaa
push
or
jbe
add
sub
ficompl
xchg
push
inc
fstl
push
scas
and
cmpl
mov
andl
or
call
gs
mov
bound
test
inc
popf
add
mov
push
cmp
mov
jg
imul
bound
shl
fst
out
mov
insl
mov
addr16
sbb
inc
cmp
xchg
add
cmp
jle
rcll
xchg
loop
loopne
imul
out
and
add
daa
sbb
and
sbbl
loop
mov
push
jae
jbe
jp
inc
xor
std
push
pushf
jge
das
lret
dec
inc
jg
add
popf
xor
mov
mov
jb
imul
sbb
arpl
jmp
mov
and
repz
popf
out
shlb
and
das
or
pop
push
rcrl
mov
sahf
sbb
jmp
xor
outsl
iret
mov
inc
fdivp
mov
mov
push
dec
or
cmp
cmp
sbb
fimull
sub
int
adc
lds
out
mov
sti
rolb
add
push
clc
and
adc
mov
outsl
mov
dec
xchg
and
into
cwtl
stos
insb
mov
push
shrl
push
inc
mov
dec
or
cltd
xor
jb
cld
aas
push
lea
mov
cltd
rcrb
les
or
sub
pushf
fsubrl
iret
push
stos
rcl
cmpsb
mov
mov
push
dec
jb
dec
movsl
js
push
test
xchg
mov
adc
sbb
jecxz
jecxz
and
lock
adc
clc
mov
out
out
sbb
subb
test
push
xor
xorb
mov
mov
pop
movsl
mov
or
cmp
add
cwtl
lret
inc
std
cld
rcl
arpl
jnp
stc
stos
mov
pop
roll
mov
mov
into
nop
int
or
cltd
push
sbbb
fldlg2
inc
jo
sbb
cli
hlt
sahf
sbb
inc
lods
mov
jmp
popf
lods
pop
lods
mov
lea
in
cld
call
aas
mov
mov
je
popa
mov
sub
arpl
jb
adc
mov
adc
inc
and
call
mov
repz
or
stos
mov
mov
shll
popa
jo
or
inc
push
rcll
mov
jns
xchg
mov
lock
inc
lret
mov
cwtl
pop
add
dec
stos
dec
stc
stos
test
add
mov
repz
pop
lret
js
cmp
aas
fistps
adcb
mov
cmpsb
clc
push
lods
pushf
sub
idivl
or
dec
xchg
out
in
movsb
lahf
cmp
shlb
fsubrp
push
lock
les
mov
test
mov
xchg
push
stos
jecxz
pop
sbb
pop
add
hlt
sub
mov
jb
mov
mov
aam
ljmp
xor
in
adc
nop
jecxz
je
pop
cmp
loop
shr
pop
dec
test
aaa
andl
dec
xor
insl
lret
xchg
push
push
rcrl
and
dec
dec
pop
mov
lods
mov
pusha
ljmp
push
cltd
push
cld
and
pop
jecxz
imul
or
inc
push
mov
shrb
and
bound
xor
jmp
mov
jnp
popa
fisubrs
xchg
fnstcw
out
imul
in
push
cli
lret
xchg
xlat
ret
sarl
push
js
cmp
sbb
sbb
lods
rcrl
les
push
enter
outsb
or
in
mov
sub
sbb
inc
fdivs
cmp
ss
in
jae
mov
mov
sbb
jbe
cmpsb
mov
dec
gs
lods
jmp
cltd
in
xchg
in
fisttpl
mov
jl
dec
cmp
mov
sub
shrb
jge
push
cwtl
xor
iret
and
dec
push
outsb
js
pop
sbb
mov
dec
mov
pop
lods
jmp
outsb
sub
stos
cli
mov
jl
mov
ret
sbbb
jge
push
dec
and
inc
sub
sbb
ror
mov
scas
mov
xor
dec
jmp
mov
jge
movsb
outsl
xchg
and
jo
hlt
mov
xchg
outsl
ja
sub
fcmovne
lea
add
dec
fmull
push
shll
nop
ss
mov
mov
stos
stos
rep
mov
cmp
push
push
sbb
xchg
jl
pop
xchg
pushf
xchg
sub
rolb
popf
cwtl
jns
inc
push
jne
mov
cmp
sub
pop
dec
int
cld
xchg
mov
shrl
pop
ss
data16
in
cwtl
mov
aas
cmpl
mov
adc
and
jg
scas
stc
dec
lret
rcll
xor
dec
pop
inc
ret
out
mov
push
add
adc
add
cmp
loope
pop
pop
inc
mov
push
pop
popa
lock
push
pop
out
jle
sbb
pop
and
in
mov
xor
out
icebp
push
stc
fldcw
xor
dec
sub
cltd
pop
or
xchg
scas
mov
add
adc
pop
jmp
dec
or
shlb
dec
jnp
ljmp
or
mov
mov
flds
pop
daa
out
fmuls
dec
jecxz
adc
jae
lock
xchg
jbe
jne
xor
lcall
lds
inc
icebp
sbb
pop
orb
hlt
fisubrs
lock
sbb
jo
mov
lret
iret
xchg
imul
daa
inc
mov
inc
inc
mov
lret
fistpl
test
lds
xor
popf
push
jnp
mov
fistpll
movsl
and
insl
inc
leave
fdivrs
test
dec
xor
or
push
add
mov
xor
fldt
sub
pop
mov
mov
in
mov
in
jecxz
push
mov
popa
mov
adc
sub
or
pop
xchg
ss
push
cmpsl
jnp
push
xchg
lock
clc
aad
fdivp
movsb
mov
adc
mov
mov
call
std
cmp
lahf
fidivs
sbb
xchg
pop
jl
push
cmp
adc
lcallw
dec
inc
test
inc
sub
push
adc
xchg
repnz
adc
movsl
sbb
and
jl
or
jo
lods
movsb
mov
data16
into
or
xor
aad
sti
fwait
aas
sahf
xor
pusha
push
xor
icebp
mov
mov
mov
lods
jecxz
icebp
sti
mov
aas
mov
arpl
rorb
sub
outsb
loop
jb
clc
lds
jmp
push
adcl
dec
loop
lock
cmp
pop
out
and
mov
cmp
adc
ficoms
push
jecxz
jae
repnz
aam
sbb
inc
inc
inc
sub
and
inc
int
xlat
inc
mov
inc
xor
jmp
scas
shlb
movsl
mov
jne
mov
pushf
dec
shl
std
fs
lds
push
pop
dec
sub
ss
cmp
ss
jns
cld
mov
mov
xchg
popf
push
int3
mov
subl
or
shlb
sub
movsl
inc
xchg
and
out
fwait
int3
jae
test
dec
clc
inc
mov
ret
pop
lea
push
mov
xor
iret
js
popa
pushf
adcl
mov
pop
popa
pop
hlt
push
jmp
mov
lcall
push
jnp
mov
push
and
mov
loop
dec
aad
cltd
sahf
adc
mov
ljmp
outsb
nop
lcall
cltd
xchg
add
test
push
mov
pop
inc
pop
lea
insb
adc
or
pusha
push
je
inc
scas
orb
and
mov
cs
xchg
sbb
mov
push
or
ja
mov
pop
add
push
add
sbb
sub
push
xlat
or
xchg
roll
or
pop
dec
fidivs
and
jo
stc
sbb
es
mov
adc
aad
call
pop
fstpl
movl
and
mov
imulb
pop
jae
shl
shl
xor
mov
push
out
movsb
sti
imul
mov
jnp
leave
and
sbb
mov
ljmp
repz
pop
xchg
out
sbb
addr16
or
push
loope
pusha
dec
ljmp
popf
xor
dec
cmpsb
in
xchg
xchg
lea
push
out
insl
lods
jb
xor
pop
fs
ret
cmp
jg
or
addr16
xor
xchg
jns
mov
ds
mov
ss
lods
jge
adc
fildll
sarb
mov
mov
sbb
push
cmp
iret
sbb
pop
or
or
gs
testb
jns
psadbw
cmp
inc
in
lds
add
jecxz
arpl
push
getsec
mov
hlt
stos
lret
and
jns
jle
sub
je
popf
xchg
aas
push
shlb
cld
lods
movb
cmc
stos
or
lods
stos
sub
cmc
pop
testl
fsubl
inc
js
and
test
iret
xor
jmp
and
imul
insl
dec
fcomp
xchg
or
pop
loopne
mov
add
jecxz
imul
hlt
xchg
in
popa
mov
and
fcompl
xor
cmp
xor
imull
inc
sarl
mov
insl
inc
popa
xor
js
inc
jge
cmp
cmpsb
mov
jbe
popa
or
loop
aad
mov
sbb
dec
addb
mov
sub
mov
mov
int
lcall
ret
add
fs
mov
and
movsl
fwait
add
cmpl
push
lret
xor
add
push
or
ds
cwtl
cld
call
in
shlb
adc
push
jle
je
shrl
outsl
pop
rorl
mov
lahf
mov
sub
dec
dec
shr
outsl
loopne
lods
push
mov
xchg
scas
jle
dec
jmp
das
ss
mov
mov
jns
xor
inc
loop
out
or
and
divl
sub
cli
inc
je
mov
stc
sahf
sbb
jo
js
add
std
add
cmpsl
dec
inc
jmp
push
jmp
mov
mov
mov
int
xor
mov
loope
sbb
xchg
lret
push
jae
xor
xchg
aam
sbb
and
push
addr16
xor
clc
jle
mov
mov
ficompl
fwait
into
stc
mov
jge
mov
pop
mov
sbb
add
ret
sti
pop
inc
lcall
test
lret
mov
push
jae
vandnps
hlt
aas
pop
inc
xor
push
push
jge
aas
dec
repz
imul
adc
cltd
and
inc
cmc
cmpsb
enter
mov
jl
ret
push
jmp
mov
int3
mov
arpl
dec
cltd
fcmovb
fld
push
pop
xor
and
push
out
push
jge
lcall
daa
and
jge
xor
out
jo
lea
jne
mov
jl
sub
dec
cltd
insl
fdivs
mov
lods
leave
sub
mov
push
adc
test
xor
clc
sub
daa
lcall
icebp
adc
pop
call
or
pushf
dec
aas
leave
lock
fadds
fdivl
movsb
aad
outsb
stc
testl
popf
mov
dec
std
movsl
add
out
jle
out
test
ds
cmpsb
stos
add
mov
jno
xor
mov
mov
jb
jno
cmp
dec
testb
insb
mov
bound
inc
push
mov
lods
sub
shrl
shll
or
mov
mov
dec
js
mov
mov
insb
push
or
jae
and
js
dec
dec
jp
movsl
and
or
xchg
outsl
push
pop
cmp
lods
lods
pop
xlat
int3
iret
xchg
sbb
bound
jge
or
pop
ret
leave
loopne
sbb
fistl
push
jge
stc
xor
xchg
cli
out
sub
pop
lods
je
sub
movsl
add
out
loope
and
scas
jl
sbb
jmp
lds
in
lret
pop
sub
imul
push
mov
add
aad
mov
xor
mov
jo
push
rol
mov
mov
imul
mov
pop
test
pop
inc
icebp
loope
push
iret
scas
test
push
ror
or
icebp
in
push
imul
xchg
xchg
dec
sub
mov
pop
stos
cld
es
sbb
mov
or
sbb
mov
cmc
inc
sahf
push
aad
int
test
fcoml
dec
fidivrs
fwait
mov
pusha
sbb
std
jg
cmpb
mov
es
mov
xchg
and
mov
addr16
add
inc
scas
stos
mov
adc
push
mov
and
xor
mov
lahf
sub
test
push
push
fsubs
lret
add
xchg
pushf
xchg
lods
inc
mov
movl
dec
test
call
cmp
xchg
mov
test
mov
daa
inc
aaa
aas
dec
jl
js
dec
or
sub
jg
fwait
js
cmpsl
sub
jnp
sub
inc
fisubl
jae
popa
call
rorl
hlt
test
mov
or
pusha
punpckhwd
into
or
and
js
das
call
inc
sbb
and
fldenv
scas
dec
xorl
and
mov
push
test
int3
ljmp
lock
mov
cld
imul
inc
lods
test
out
cwtl
repz
mov
dec
movsb
jmp
popf
js
xchg
ret
lock
adc
cmc
and
mov
bound
dec
and
repnz
hlt
mov
cmc
jle
in
rorl
cli
push
and
lcall
jecxz
inc
je
outsb
movsl
mov
inc
add
mov
pop
nop
das
lcall
faddl
insl
sahf
adc
jmp
insb
call
mov
jle
mov
imul
xchg
movsb
or
jg
sbb
push
dec
add
into
push
sbb
imul
jl
mov
sbb
sahf
mov
inc
mov
dec
pop
inc
in
push
ret
fs
sahf
shl
imul
jl
imull
mov
mov
lods
insl
sub
mov
push
je
aam
mov
in
cmp
ss
sub
or
cltd
sub
and
fnsave
stc
jb
andb
sbb
mov
xchg
in
pushf
ss
push
mov
mov
mov
fucomip
pushf
cs
push
pop
mov
pusha
in
jecxz
sahf
mov
add
cli
sub
call
nop
bnd
mov
clc
ds
popf
mov
iret
inc
pusha
lods
jne
sub
jge
xchg
xchg
jecxz
or
mov
into
daa
push
xorl
mov
stc
or
iret
data16
add
pop
jb
pop
sahf
pushf
pushw
stos
pop
xor
cmp
or
or
jns
sbb
push
jne
clc
jo
addl
mov
xor
das
jbe
lods
mov
pop
das
mov
mov
ret
in
adc
dec
push
ss
or
mov
adc
lods
lods
adc
xchg
dec
pop
lods
push
fildl
jo
push
jmp
loope
inc
jnp
push
dec
scas
test
and
cmp
dec
cmp
leave
dec
adc
shll
lods
js
adc
pushf
sub
cmp
lcall
push
nop
dec
fildl
shlb
mov
lods
je
mov
das
fimuls
xchg
orl
dec
lock
imul
cmp
mov
arpl
xchg
mov
xchg
mov
out
mov
mov
dec
popa
stos
inc
repnz
jg
jnp
xchg
movsb
jns
clc
ret
lahf
xor
push
inc
sbb
int
adc
jmp
insb
lret
push
shrl
mov
into
in
mov
mov
xchg
out
inc
mov
push
lods
cli
jne
sbb
int
cmp
pop
in
test
jge
sbb
arpl
pushf
pop
scas
enter
test
xor
in
push
push
xor
and
and
mov
and
xchg
mov
pusha
arpl
cmp
mov
xchg
add
jmp
cmp
lret
out
cmpsl
cmpsb
repz
fsubrs
jbe
xor
aas
mov
lods
insb
cmc
movsb
pushf
or
js
das
sub
or
fwait
mov
add
dec
cld
adc
ds
aas
scas
xchg
push
pop
adc
jno
dec
add
inc
jmp
xchg
and
js
sar
jmp
iret
sub
cmc
xor
mov
mov
sub
xchg
mov
cmp
mov
add
sbb
iret
les
pop
sbb
jl
mov
dec
cmp
cmpb
aas
xchg
sti
outsb
pop
lods
mov
jo
out
das
cmp
clc
adc
ja
cs
sbb
lods
pop
lds
adc
in
jmp
cwtl
sbb
or
jmp
push
out
into
sbb
mov
dec
jb
leave
jb
or
mov
stc
jbe
popf
popf
cwtl
outsb
xor
lcall
dec
xchg
test
adc
stos
inc
xor
push
mov
jmp
loopne
mov
inc
jno
call
sahf
negb
and
dec
test
cmp
lcall
sub
add
fsubl
jns
cmp
test
push
adc
dec
in
sbb
jmp
in
sub
lds
mov
jae
inc
stos
mov
pop
daa
or
aas
push
insl
popa
xchg
std
mov
sub
test
jge
cmp
mov
xchg
sub
cmp
mov
mov
adc
dec
dec
xlat
data16
dec
jle
ja
mov
xchg
xor
and
adc
cmpsb
cmp
lea
sbb
scas
mov
lret
and
ja
cmp
add
jle
clc
mov
out
fsts
icebp
cmpsb
ds
lock
dec
repz
mov
pusha
in
cs
subl
fldenv
ds
xchg
addr16
insb
fsubrs
ljmp
cs
bound
mov
adc
cwtl
mov
stos
ss
jl
xchg
and
sbb
push
gs
jmp
add
mov
cmp
xor
xchg
xchg
icebp
cmp
inc
cwtl
xor
dec
jnp
add
xchg
xchg
push
xor
fucom
call
js
jmp
dec
dec
out
and
iret
and
cmp
mov
cmc
jnp
je
aam
jnp
or
out
nop
addb
mov
scas
sub
jno
mov
sub
loopne
in
jno
testl
jnp
sahf
cmp
cmp
outsl
pop
xor
cmp
and
mov
stc
test
ja
ja
rolb
fadds
nop
test
pop
cmp
mov
pop
lret
imul
dec
sbb
cmc
push
lea
out
bound
scas
pop
pop
inc
dec
or
sahf
mov
jb
sti
dec
scas
movsl
jmp
mov
loopne
out
in
and
idivl
jmp
fs
movsb
lods
imul
mov
pop
loopne
sub
sub
mov
mov
nop
xchg
out
push
sbb
fs
sar
les
pop
das
sub
mov
dec
fcomi
xor
mov
rorb
pusha
pop
add
pop
test
and
loopne
hlt
jmp
inc
lea
arpl
dec
dec
adc
outsl
sub
cli
addb
movsb
push
inc
or
daa
fnstcw
dec
xor
xor
mov
sub
cltd
mov
leave
fidivrs
orb
add
push
dec
fsubrs
fwait
mov
sbb
sub
daa
inc
push
out
mov
mov
fldt
ds
adc
cmp
popa
mov
fistpll
int3
xchg
mov
push
push
add
jle
rcrl
cmp
add
cld
jbe
adc
enter
jnp
or
aaa
sub
jnp
cwtl
ret
add
inc
roll
cmp
loope
jo
sbb
sub
dec
lods
out
pop
loopne
pusha
add
and
xor
adc
push
dec
aam
shr
sbb
shrl
clc
dec
pop
or
xchg
aaa
movsl
psubd
icebp
test
pop
or
pop
jne
sti
xchg
push
xchg
mov
xorb
xchg
out
push
mov
inc
mov
adc
xor
adc
aam
lock
cwtl
xchg
sub
sub
sub
loopne
xor
inc
adc
dec
mov
dec
fcmovnu
pop
xorb
lods
inc
xchg
xchg
sarb
mov
lret
fnstenv
fsubl
fcmovb
mov
popf
popa
xchg
xor
pusha
jecxz
jb
dec
or
repz
inc
out
lea
xor
adc
pop
jmp
enter
stos
stos
test
mov
ret
fldenv
or
rorb
nop
frstor
xor
test
jo
xchg
ficoms
test
adc
ror
loop
test
outsl
lods
icebp
inc
ror
in
das
std
adc
das
pop
repz
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
out
stc
dec
xor
loopne
mov
dec
fadds
mov
and
and
jp
dec
lahf
insl
pusha
mov
bound
dec
leave
pop
in
cltd
adc
bound
add
add
inc
popa
idivb
adc
mov
push
je
ljmp
out
add
cli
icebp
out
push
jae
mov
sbb
add
cli
fmulp
adc
test
dec
into
xorb
call
xchg
fwait
popa
sti
pop
push
xor
mov
mov
mov
mov
mov
pop
dec
out
and
dec
je
cmp
sti
xor
shrb
mov
jl
xchg
and
xchg
jbe
xchg
aam
les
mov
lock
jg
out
jmp
test
and
push
pop
aas
sahf
cltd
scas
in
and
jo
jo
insl
sbb
push
pusha
lcall
jl
pop
setb
imul
or
push
xchg
scas
fldl
insl
inc
and
jae
pop
fisttpll
sub
stos
add
cmp
cmp
mov
add
add
fcmovnb
cmp
dec
out
cmpsl
js
int3
lock
nop
lea
jnp
fdivr
adc
shrl
add
jo
mov
add
jnp
pop
lods
mov
push
dec
push
repz
fisubrs
adc
lcall
fcompl
ljmp
sub
call
lahf
sub
ds
push
cli
test
inc
es
ja
adc
sub
xchg
daa
xchg
loopne,pt
sbb
outsb
and
mov
push
pop
icebp
xchg
nop
xor
lret
loope
pop
pushf
sub
and
sahf
cwtl
out
cld
rcpps
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
loop
