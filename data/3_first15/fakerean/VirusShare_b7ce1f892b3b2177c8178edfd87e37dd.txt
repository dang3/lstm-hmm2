dec
and
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
lea
xor
push
inc
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
call
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
mov
mov
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
cmpl
mov
mov
push
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
call
xor
cmp
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
lea
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
lea
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
lea
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
mov
mov
mov
push
push
call
test
js
lea
lea
call
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
add
push
call
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
jne
mov
mov
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
mov
ret
mov
test
je
mov
test
jne
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
je
push
call
pop
lea
cmp
je
push
call
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmpb
jne
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
push
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
xor
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
test
mov
je
mov
push
call
mov
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
incl
mov
mov
addl
cmp
jb
xor
mov
cmp
jne
addl
mov
mov
cmp
mov
jne
mov
pushl
push
push
call
pop
pop
xor
pop
leave
ret
mov
mov
call
sub
jne
mov
add
lea
cmp
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
pushl
xor
push
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
pop
jmp
call
jmp
push
mov
push
push
push
mov
mov
xor
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
test
je
andl
push
mov
mov
mov
call
mov
andl
test
jne
lea
mov
lea
push
call
test
mov
js
mov
test
je
mov
push
call
mov
mov
mov
call
mov
test
je
decl
cmpl
je
mov
pop
pop
leave
ret
mov
test
je
push
call
pop
xor
ret
push
mov
test
je
cmpl
jg
xor
mov
xor
pop
ret
push
mov
push
andl
push
push
mov
mov
lea
push
mov
call
test
js
cmpl
push
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
call
lea
mov
call
push
mov
mov
call
pop
pop
ret
mov
test
je
push
call
pop
xor
ret
andl
inc
mov
mov
test
jne
mov
cmpl
push
je
pushl
mov
call
mov
test
jne
mov
mov
call
andl
andl
mov
pop
ret
pushl
push
pushl
pushl
call
jmp
push
mov
cmpl
je
cmpl
push
je
mov
push
lea
movl
call
cmpb
je
pop
xor
pop
ret
pushl
lea
call
test
je
jmp
cmpb
jne
push
lea
call
mov
call
pop
movb
jmp
int3
mov
sub
cmpl
push
push
mov
push
jge
mov
mov
movl
mov
mov
push
mov
movl
call
mov
add
test
js
mov
cmpl
push
je
mov
test
je
addl
test
je
push
call
mov
add
cmpl
jge
mov
mov
push
push
push
call
mov
add
cmpl
mov
jge
mov
mov
push
call
mov
add
addl
je
test
jle
mov
mov
add
adcl
mov
push
call
add
test
js
test
jle
mov
push
call
mov
pop
pop
pop
pop
add
ret
jge
call
cmp
jne
push
call
add
pop
pop
pop
mov
pop
add
ret
cmpl
je
push
push
mov
push
pushl
mov
mov
pushl
mov
push
call
test
lea
js
cmpl
je
andl
mov
pop
pop
ret
mov
jmp
movl
jmp
push
mov
sub
mov
xor
mov
push
pushl
mov
mov
push
call
test
jne
xor
mov
xor
pop
call
leave
ret
push
mov
cmpl
jne
cmpb
je
pushl
mov
pushl
call
cmpb
je
push
mov
call
push
push
lea
call
pop
call
pop
ret
push
call
jmp
call
jmp
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
pushl
mov
xor
push
mov
call
test
jne
mov
mov
call
test
jne
lea
call
pop
ret
xor
inc
jmp
push
mov
push
andl
mov
test
mov
push
mov
je
mov
mov
andl
mov
push
call
pushl
mov
push
call
mov
test
pop
pop
je
mov
push
call
mov
neg
sbb
and
add
lea
call
mov
pop
pop
pop
ret
push
mov
lea
movl
movl
call
lea
call
lea
call
lea
call
testb
movl
movl
jne
mov
pop
ret
push
call
pop
jmp
push
mov
push
lea
push
mov
call
test
jne
mov
xor
cmp
mov
jne
mov
push
mov
call
xor
pop
pop
ret
push
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
xor
inc
jmp
push
mov
sub
mov
xor
mov
mov
shr
movzbl
push
push
mov
shr
movzbl
push
movzbl
push
push
lea
push
push
mov
call
add
push
call
test
je
andl
lea
push
mov
call
mov
lea
push
movl
call
pop
pop
mov
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
xor
cmp
je
cmp
jne
push
call
test
js
mov
mov
mov
mov
mov
lea
mov
push
lea
mov
movl
mov
mov
mov
mov
mov
movl
movl
mov
mov
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
jne
mov
push
lea
call
lea
mov
lea
lea
lea
mov
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
lea
jne
mov
push
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
test
js
mov
mov
mov
shr
and
lea
je
lea
push
push
push
mov
movl
movl
mov
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
sub
push
mov
push
add
push
lea
mov
call
mov
call
mov
mov
and
jne
andl
push
lea
call
mov
push
call
mov
xor
push
push
push
lea
push
lea
push
mov
movl
call
add
testb
mov
jne
testb
jne
mov
mov
and
jne
mov
mov
mov
add
mov
mov
call
mov
mov
add
call
mov
mov
add
call
mov
mov
call
mov
lea
push
xor
push
lea
inc
push
movl
movl
mov
call
mov
and
mov
jne
pushl
mov
push
mov
call
lea
call
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
lea
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
cmp
lea
je
call
jmp
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
movzbl
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
inc
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
inc
add
adc
push
pop
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
call
mov
add
add
add
popf
shrb
mov
lcall
mov
out
add
add
add
mov
fwait
add
add
icebp
push
stc
add
rolb
add
mov
add
add
add
enter
mov
add
jnp
sub
push
mov
add
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
testl
mov
popf
add
lcall
rolb
add
lret
popf
call
jno
out
movl
fdivr
lcall
inc
in
push
push
lea
push
push
push
push
call
lret
insb
cmc
repnz
mov
add
jle
mov
std
movl
add
jp
jle
stos
in
loope
in
adcl
xchg
stc
sub
pop
push
push
push
push
push
push
call
leave
add
call
movsb
add
sahf
movsb
pop
cltd
sti
add
add
sarl
add
lret
add
cld
mov
add
out
sub
pop
push
push
push
push
push
push
push
call
roll
imul
movsl
xchg
xchg
xchg
mov
addl
mov
faddl
add
add
xchg
add
jbe
cmpsb
add
add
call
in
in
lcall
mov
add
push
push
push
push
push
push
push
call
add
jns
pop
push
std
add
jbe
add
mov
add
xchg
leave
testb
clc
mov
add
xlat
scas
divl
mov
loop
add
loope
add
mov
in
call
call
push
push
push
call
add
mov
xlat
testl
add
imul
add
push
ret
rclb
add
pop
push
arpl
jbe
mov
leave
add
mov
ret
fiadds
sub
pop
jmp
ret
push
push
push
push
lea
push
push
push
push
call
add
nop
add
cltd
imul
lret
imul
mov
add
add
ja
addb
test
add
add
rcr
in
jae
sub
pop
mov
push
lea
push
call
roll
add
out
add
add
mov
cltd
pop
xchg
rolb
in
lret
rcll
add
lcall
add
into
mov
hlt
in
add
je
in
clc
lcall
pop
hlt
add
push
push
push
push
push
push
push
push
push
push
call
lds
add
mov
fildll
aam
mov
add
add
add
add
add
add
add
out
fisttps
scas
scas
add
add
cmpsb
clc
add
mov
pop
add
add
add
mov
mov
in
fdivr
lcall
ret
add
add
push
push
push
lea
push
push
push
call
push
pop
jge
add
loope
add
lock
push
add
add
add
add
scas
out
jge
pushf
add
add
stos
int3
iret
mov
addb
jb
add
mov
pop
pop
sti
imul
sti
xchg
add
push
mov
xchg
movl
add
jb
push
das
push
call
add
add
add
sahf
add
lret
cli
jno
cld
jae
fildl
mov
add
add
lods
add
add
mov
add
add
add
aam
add
fs
add
lods
jae
add
add
add
mov
addl
add
cmp
jp
push
push
push
lea
push
lea
push
call
aad
pop
jmp
out
xchg
in
pop
mov
pop
test
add
add
add
js
add
cld
ljmp
add
test
add
add
arpl
xchg
add
add
add
shlb
aad
les
in
call
xor
push
push
push
lea
push
push
lea
push
push
push
push
call
add
call
mov
mov
mov
movsl
jcxz
add
jno
test
jnp
add
add
add
jmp
lods
fidivrl
mov
add
leave
add
sub
pop
add
push
push
add
xor
ror
shr
push
and
add
inc
rol
shl
sub
rol
sub
sub
pop
xor
sub
pop
push
lea
push
lea
push
lea
push
push
push
call
add
pop
add
popf
add
add
mov
add
add
fadds
les
test
add
rolb
popa
bound
add
add
add
add
pop
add
add
imul
xchg
mov
mov
cmpsl
lret
xchg
jbe
push
ljmp
in
call
push
lea
push
push
call
xchg
push
add
in
jmp
add
ljmp
data16
popl
cltd
add
pop
add
hlt
mov
add
mov
xchg
pop
add
push
push
push
push
push
push
lea
push
push
push
push
call
sahf
add
stos
test
add
mov
xchg
mov
js
add
mov
add
mov
lock
in
add
mov
jae
imul
xchg
rolb
test
add
mov
add
xchg
push
add
stos
mov
add
mov
add
mov
in
fcomps
inc
lock
push
push
push
push
push
push
push
push
lea
push
call
add
bound
add
jmp
cmpsb
pop
ja
outsl
sahf
loope
add
add
aad
pop
sub
pop
movl
push
push
push
push
lea
push
lea
push
push
call
jne
mov
test
out
sti
lcall
push
test
mov
xchg
shlb
rcr
push
add
add
xlat
push
mov
rolb
add
add
stos
in
mov
fiaddl
push
jae
add
mov
push
add
add
test
in
lcall
inc
call
push
nop
push
push
push
lea
push
push
push
push
lea
push
call
mov
stos
ljmp
lcall
div
hlt
add
add
mov
xchg
loope
add
add
rolb
pop
jbe
pop
jne
add
jns
add
lods
add
in
fcomps
push
lea
push
call
add
xchg
mov
add
add
mov
jns
movsl
enter
leave
add
jl
stos
push
clc
add
mov
add
imul
add
repnz
add
addr16
xchg
loop
add
add
add
std
cltd
nop
jno
mov
test
add
jne
push
push
call
mov
nop
add
incb
push
add
add
fiadds
add
xchg
int3
add
mov
sahf
mov
testb
std
lods
scas
add
xchg
rolb
mov
sub
pop
pushl
call
push
push
call
add
add
add
add
jae
mov
test
jnp
mov
xorb
lods
cltd
cmp
mov
roll
stos
push
leave
popf
test
add
add
sub
pop
pushl
pushl
push
push
push
push
push
call
add
mov
mov
add
aad
mov
add
mov
push
mov
add
mov
flds
aad
data16
add
fisubl
stos
push
stc
add
in
ret
mov
movb
mov
les
add
add
add
add
out
lock
add
iret
cmp
add
add
push
or
not
add
lea
add
ror
sub
add
dec
pop
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
call
test
scas
lahf
shl
pop
out
enter
xchg
add
sarl
jns
faddl
xchg
add
pop
add
insb
movsl
ja
add
mov
add
mov
push
fucom
jbe
add
add
imul
lcall
jne
push
lea
push
push
push
push
lea
push
call
add
xchg
mov
scas
mov
jge
js
add
mov
add
ljmp
mov
into
cmpsl
add
add
mov
add
jno
int
add
add
add
ficoml
push
jmp
sub
pop
call
push
push
lea
push
push
push
push
push
push
call
add
add
add
loopne
lea
faddl
lods
stos
add
add
cmpsl
mov
add
fidivrl
add
add
add
push
movsb
add
pop
add
lcall
inc
push
push
shl
push
push
pop
add
sub
xor
dec
xor
sub
pop
sub
sub
shl
pop
push
push
push
push
lea
push
push
call
push
mov
cld
lods
mov
pusha
pop
cmc
add
mov
std
add
icebp
add
pop
mov
repnz
xchg
mov
mov
mov
mov
lods
icebp
add
add
add
mov
add
add
gs
mov
lcall
push
push
lea
push
push
push
push
lea
push
push
call
push
cld
pop
add
xchg
add
mov
jae
add
add
add
loop
arpl
add
jnp
scas
mov
test
add
adc
or
popa
add
add
stc
cmpsl
pop
fdivrs
sub
iret
add
push
add
add
into
pop
add
lods
nop
mov
fisubl
scas
mov
fiadds
movsl
gs
leave
add
enter
arpl
mov
faddl
shrl
add
cwtl
push
pop
lret
pop
stc
add
mov
jbe
in
hlt
lcall
rclb
push
push
lea
push
push
lea
push
push
push
push
call
add
std
incb
cmp
mov
mov
mov
xchg
lret
jge
lret
fadds
add
add
movsl
xchg
add
add
lcall
clc
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
add
add
pop
add
mov
loopne
in
mov
add
add
loopne
push
add
xlat
imul
arpl
sub
pop
push
push
push
push
push
push
push
call
cld
xchg
mov
cmpsb
add
add
pop
add
cwtl
bound
add
icebp
add
movsl
in
pusha
add
add
add
mov
add
jge
add
add
jmp
add
add
pop
push
sub
pop
push
push
push
push
push
call
nop
jge
jmp
imul
mov
int
out
jne
add
in
outsl
scas
addb
add
mov
mov
add
mov
add
pop
xchg
push
add
jge
lcall
loope
add
sti
mov
mov
add
mov
push
push
lea
push
push
push
push
push
push
push
push
call
add
scas
add
sarb
add
jmp
mov
add
fldl
jmp
add
add
mov
add
add
push
cld
add
mov
sub
pop
add
push
push
push
push
push
lea
push
push
push
push
call
add
bound
xchg
ret
imul
xchg
add
mov
movsb
out
fildl
jbe
add
add
jl
add
pusha
add
xchg
rcr
add
add
add
negl
lds
lret
imul
test
mov
jnp
add
add
lcall
ret
add
add
push
push
push
lea
push
push
push
call
add
jns
add
stc
stos
movsl
add
add
add
xchg
ja
cmp
xchg
add
add
add
xchg
cmpsb
outsl
jbe
add
add
jge
lahf
out
movsb
lock
fldl
je
add
add
lcall
ret
pop
inc
add
push
push
push
push
lea
push
push
push
push
push
call
je
add
mov
mov
bnd
ret
xchg
xchg
cmpsb
lods
push
xchg
add
add
popa
fsub
add
out
push
and
ljmp
add
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
loopne
icebp
add
add
ja
add
xabort
mov
add
add
loopne
add
mov
add
call
cmpsb
ljmp
add
add
in
faddl
push
in
add
fimuls
add
sub
pop
xor
push
push
lea
push
push
push
call
sahf
add
jge
add
jle
cltd
cmc
jnp
ljmp
sti
add
add
add
xchg
add
mov
add
fdivl
push
add
mov
add
add
movb
jno
add
in
add
je
add
sub
pop
add
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
cmpsb
cld
mov
mov
add
pusha
shll
sbb
push
jne
movsb
clc
int
out
test
mov
jbe
push
mov
in
mov
add
add
add
popf
add
add
jne
push
push
push
push
call
in
add
add
add
add
mov
hlt
jle
mov
add
movsb
add
add
mov
mov
add
add
add
lods
sub
pop
push
mov
xor
push
push
call
pushf
fldl
add
xchg
add
test
insb
test
add
scas
mov
xchg
int
add
nop
out
out
add
add
repnz
jae
add
sub
pop
add
push
push
lea
push
push
push
push
lea
push
push
push
call
push
test
stc
add
popl
add
test
add
leave
icebp
push
lds
test
in
add
mov
xchg
out
add
negl
scas
mov
shlb
mov
in
popf
fdivl
out
mov
std
add
add
repnz
push
add
lcall
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
loope
lods
pushf
mov
fwait
add
ret
cli
jmp
scas
add
mov
mov
add
add
je
xlat
pop
pushf
out
add
jl
add
scas
add
int
jge
repnz
add
test
add
push
fiadds
in
out
add
dec
add
icebp
cmp
ja
push
push
push
push
push
lea
push
push
call
mov
add
jmp
pop
add
arpl
add
add
outsl
arpl
cwtl
add
jbe
mov
add
out
clc
jo
sub
ret
mov
in
jae
sar
lds
add
roll
lcall
push
lea
push
lea
push
push
push
call
pop
add
jge
mov
push
lea
cmpsb
enter
add
jle
int
pushf
add
add
push
call
push
lcall
inc
or
mov
push
push
push
push
push
push
call
je
stc
xchg
mov
add
mov
jno
addl
js
rol
cmpsb
in
push
fildl
out
leave
pop
pusha
mov
xchg
data16
js
pop
add
add
add
aad
add
popa
movsb
add
test
outsl
add
add
into
add
popf
loop
in
in
lcall
enter
push
push
push
push
push
call
add
add
stos
movsb
mov
clc
push
les
repnz
out
add
outsl
xchg
jno
push
lcall
mov
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
add
stos
add
add
xchg
aad
loope
add
xchg
mov
add
add
test
call
in
fchs
mov
cmpsl
pop
je
shlb
add
add
mov
push
xchg
mov
add
mov
add
js
in
mov
out
add
add
add
lcall
movsb
pop
push
push
push
lea
push
push
push
push
call
outsl
pop
add
mov
mov
repnz
pushf
mov
aad
mov
add
mov
pop
add
add
add
lcall
add
add
add
mov
add
add
add
popa
int
in
in
mov
push
lea
push
call
add
in
call
clc
movsb
jp
jnp
enter
jns
xchg
add
mov
ja
fcoms
ja
fiaddl
add
add
outsl
add
add
mov
jne
xchg
jb
pop
mov
popf
mov
add
imul
sub
pop
add
push
push
push
lea
push
call
lahf
enter
pusha
add
mov
pop
lcall
mov
add
push
push
xchg
add
jle
add
add
xchg
les
add
add
xchg
add
lcall
add
call
push
add
enter
filds
add
cmc
rolb
xchg
fwait
cld
add
sub
pop
add
push
push
push
push
push
lea
push
push
lea
push
call
xchg
rolb
shrl
add
push
xchg
add
aad
add
int
add
xchg
add
add
hlt
add
lret
ljmp
add
add
scas
add
add
add
lret
push
stos
iret
scas
sub
pop
add
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
add
flds
jge
cmc
push
lahf
data16
sahf
scas
mov
popf
in
add
clc
ret
add
int
xchg
add
pop
rcll
ljmp
movsb
mov
xchg
imul
insb
xchg
add
fnstsw
sub
pop
mov
push
push
push
push
lea
push
lea
push
push
push
call
add
mov
stos
cmc
add
add
pop
sti
popa
add
xchg
jne
push
push
add
in
mov
add
stos
stos
movl
mov
test
in
xor
push
push
lea
push
push
push
push
push
call
add
add
add
push
test
faddl
sti
add
add
mov
fists
pop
add
add
add
gs
aad
mov
pop
sub
pop
add
push
push
push
push
push
push
lea
push
push
call
rcll
add
in
add
push
add
pop
lds
in
add
lock
add
add
add
mov
add
add
out
add
je
add
add
add
push
add
cmpsl
iret
push
mov
add
add
cli
flds
add
add
push
and
cmp
cmp
xchg
push
push
lea
push
lea
push
lea
push
call
call
stos
mov
add
mov
imul
mov
add
outsl
sahf
add
in
mov
add
add
add
out
faddl
fs
mov
into
add
add
popf
and
mov
repnz
pusha
sti
xchg
add
add
enter
mov
in
sub
pop
xor
push
push
push
push
push
push
push
push
push
call
fdivl
roll
add
outsl
pop
add
lods
add
add
popf
push
add
clc
jo
loope
fdivr
cmpsl
sahf
add
mov
mov
add
cltd
add
mov
mov
hlt
xchg
add
add
mov
les
add
add
xchg
leave
pop
roll
add
sub
pop
add
push
lea
push
push
call
push
jecxz
add
lahf
push
jge
add
addr16
add
push
outsl
add
add
add
mov
push
add
dec
sub
mov
pop
add
add
push
xor
rol
pop
mov
push
push
inc
ror
push
push
pop
add
rol
sub
not
add
shl
pop
ror
pop
push
ror
inc
rol
add
pop
pushl
call
push
push
call
add
add
lret
jle
push
add
movsl
aam
pop
jb
imul
add
pop
push
add
cltd
mov
into
scas
insb
add
js
add
add
add
add
add
cld
aam
stos
addr16
jl
lret
in
mov
scas
xchg
xlat
mov
in
clc
pop
push
push
push
shl
rol
add
not
push
xor
add
not
shr
sub
shl
xor
shr
sub
pop
inc
rol
not
pop
push
dec
not
pop
push
push
push
lea
sub
rol
pop
call
push
inc
ror
add
sub
pop
mov
push
push
sub
pop
push
push
push
lea
push
push
push
push
push
push
call
jbe
mov
add
test
add
add
push
jno
mov
lret
add
xchg
add
mov
test
int3
cmpsl
jae
repnz
pop
mov
push
sub
inc
pop
add
push
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
add
nop
rolb
leave
xchg
lods
pop
cwtl
add
mov
add
add
sahf
mov
add
jb
cmpsb
iret
xchg
add
jns
mov
popa
add
in
add
jae
add
xchg
in
add
sub
pop
add
push
push
push
push
push
push
lea
push
call
mov
add
add
cwtl
jge
add
mov
mov
add
jnp
mov
jno
add
sti
push
xchg
scas
add
addl
add
add
popa
add
add
add
add
add
add
add
ret
pop
inc
add
push
push
lea
push
call
add
add
mov
imul
stc
test
ja
lcall
mov
add
jecxz
add
add
add
cwtl
into
mov
out
add
mov
add
pop
stos
mov
mov
in
hlt
pop
mov
xor
push
lea
push
push
push
push
push
push
lea
push
call
add
addb
add
cmc
add
add
add
add
add
fildl
add
add
repnz
imul
add
add
push
add
loopne
add
push
lea
push
push
push
push
push
push
call
add
push
ret
add
cld
add
testl
rclb
add
lock
add
imull
lcall
add
add
add
movb
and
in
into
jge
leave
cmpl
xchg
push
pusha
test
movsl
add
pop
push
mov
xor
push
add
sub
add
rol
pop
add
push
shr
xor
ror
pop
pop
mov
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
jmp
add
loopne
push
mov
add
push
imul
add
mov
mov
mov
add
add
mov
add
add
mov
push
ljmp
test
add
mov
add
or
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
mov
add
addb
add
loopne
xlat
ja
add
add
mov
enter
mov
mov
ret
add
loopne
add
push
push
lea
push
push
push
push
push
lea
push
push
call
loope
add
add
add
add
xlat
pop
pop
add
iret
fimuls
add
test
loop
iret
sarl
add
xlat
in
test
mov
cltd
add
std
add
add
add
test
add
call
add
jbe
pop
sub
pop
rep
push
push
push
lea
push
push
push
call
lds
add
push
lods
hlt
mov
pusha
rcl
lock
add
add
add
lret
cld
xchg
add
xchg
add
mov
imul
and
icebp
cmp
leave
stos
inc
pop
or
je
push
xor
xor
xor
pop
mov
push
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
mov
mov
add
add
add
hlt
test
pushfw
imul
jl
add
xor
push
push
push
push
call
add
pop
add
xchg
sarb
fwait
add
jno
add
pop
gs
mov
addb
movsl
mov
shrl
push
movl
add
sub
pop
mov
push
push
push
call
add
push
shl
pop
add
add
stos
add
subb
leave
add
bound
jp
add
add
jo
add
add
hlt
ret
loope
pop
mov
add
add
lcall
adc
push
push
push
call
add
mov
pop
enter
mov
add
add
mov
cmpsb
xlat
stos
add
mov
in
hlt
pop
add
push
shr
add
pop
add
push
push
push
push
push
push
call
loopne
sti
fadds
pop
push
mov
add
jne
cwtl
add
add
jmp
pop
add
add
sti
push
add
mov
fistpl
push
add
push
jge
add
fildl
faddl
add
pusha
sub
pop
add
push
push
rol
rol
add
pop
mov
push
push
lea
push
push
lea
push
push
call
mov
add
add
cltd
enter
add
add
add
add
add
add
mov
add
lods
pop
add
xchg
add
shlb
add
add
mov
mov
add
add
mov
sub
pop
xor
push
push
push
push
push
call
push
pop
les
call
out
leave
add
xchg
push
imul
pop
pop
add
mov
loopne
add
lcall
les
sub
pop
add
push
push
push
push
push
push
call
test
mov
add
idiv
loopne
mov
into
in
movsb
add
add
push
shll
mull
lds
scas
add
enter
add
sub
pop
pop
push
shl
pop
rep
mov
push
push
lea
push
push
push
push
push
push
push
call
lods
add
push
mov
ljmp
add
imul
add
add
fildll
pop
fwait
xchg
popf
jns
imul
mov
add
mov
push
nop
sti
out
jge
xchg
jns
mov
mov
push
lahf
sub
pop
xor
push
push
push
push
call
add
movsl
add
add
add
enter
fucom
outsl
pusha
pop
add
jecxz
call
cmpsb
rcl
pop
aam
or
mov
add
sub
pop
add
push
push
push
call
testb
add
nop
test
in
jne
iret
lock
mov
mov
add
mov
lcall
leave
je
push
lea
sub
inc
pop
mov
add
push
push
push
lea
push
push
call
add
xchg
push
add
add
xlat
in
add
add
out
sahf
add
mov
mov
rolb
ret
add
jle
add
add
in
int
add
fcmovb
add
xorl
shll
add
orl
pop
add
push
push
push
push
push
push
push
push
call
pop
push
pop
add
add
add
pop
add
cmpsl
je
mov
add
mov
add
xchg
ja
scas
enter
add
call
add
iret
faddl
fildl
add
add
lcall
movsb
pop
push
push
rol
push
and
add
dec
sub
xor
rol
shl
pop
dec
rol
pop
push
lea
push
push
push
push
call
cmpsl
rclb
jmp
add
jge
add
outsl
jae
fwait
les
push
cmpsl
add
add
mov
loope
adcl
js
je
add
popf
add
pop
stc
xchg
clc
lea
add
push
popl
lcall
push
push
push
push
call
jp
mov
add
add
add
jne
hlt
xchg
flds
mov
push
add
add
sub
pop
mov
push
ror
pop
mov
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
js
push
add
add
jno
add
stos
fiaddl
sahf
xchg
add
shlb
enter
add
in
mov
xchg
add
add
jno
xchg
add
pop
rolb
add
add
ljmp
add
add
inc
and
push
lea
push
push
push
call
add
jge
mull
add
test
add
addb
xchg
add
add
mov
add
mov
add
aad
out
fdivrp
out
add
divl
jle
mov
add
sub
pop
jmp
push
push
lea
ror
ror
pop
mov
push
inc
dec
shl
pop
add
push
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
incb
add
mov
mov
popf
out
add
sahf
jmp
ret
add
add
lds
add
cld
add
add
test
add
add
lcall
hlt
int3
add
rolb
lcall
push
sub
sub
lea
pop
push
push
push
sub
shr
pop
push
push
xor
not
pop
mov
push
add
pop
pop
push
push
lea
push
push
push
push
lea
push
push
call
jne
add
repnz
add
out
out
add
ret
shll
add
push
fbstp
add
movsb
pop
mov
loopne
mov
bound
addl
sub
pop
pop
pop
push
push
lea
push
push
push
push
lea
push
lea
push
call
scas
pop
jecxz
stos
push
scas
data16
jle
add
add
cli
push
add
testl
lea
cmc
iret
add
pop
fwait
add
jno
test
mov
lret
add
add
out
add
add
lcall
push
sub
pop
leave
ret
push
xor
add
shr
pop
push
mov
push
ror
ror
pop
add
push
push
lea
push
push
push
push
push
push
call
rolb
xchg
add
icebp
add
mov
add
insb
shll
fnsave
call
stos
jle
cli
push
add
add
add
cltd
mov
outsl
rcrb
ret
loopne
push
push
push
not
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
push
cmc
add
mov
add
out
fiadds
lds
mov
push
add
xchg
test
add
push
xorb
add
add
add
mov
add
popl
movsl
add
into
out
sub
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
add
les
into
mov
push
mov
data16
subb
shrl
jp
mov
jo
xchg
sub
pop
movl
push
shr
shl
pop
addl
test
je
push
push
push
push
lea
push
lea
push
push
call
out
jae
add
add
in
add
mov
xchg
lret
popf
xchg
mov
add
add
add
jb
add
inc
or
or
push
push
call
add
aad
jo
xchg
add
add
in
add
mov
aad
add
add
test
add
mov
mov
cmc
lods
int
add
flds
add
lds
sub
pop
pop
push
push
call
add
mov
add
test
nop
jnp
in
movb
add
mov
xchg
test
movb
out
jl
pop
add
jge
jno
mov
pop
add
in
clc
lcall
pop
push
add
add
lea
shr
pop
pop
push
push
push
lea
push
push
call
add
add
int3
add
add
mov
add
add
mov
cmpsb
add
xlat
add
pusha
fstpl
stos
cli
insb
add
adcb
clc
sub
pop
leave
push
push
push
lea
push
lea
push
lea
push
push
call
add
add
add
loop
jne
pusha
push
pop
add
add
data16
add
mov
add
add
add
add
jmp
mov
cli
popf
cli
add
add
add
push
in
in
ret
push
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
test
add
gs
jno
out
lods
xchg
lret
add
ret
icebp
xchg
in
lods
add
add
xchg
lock
aam
ja
loopne
add
add
push
sub
pop
mov
push
sub
inc
pop
add
push
push
lea
push
push
call
addl
roll
add
cmpsb
outsl
xchg
aam
push
jle
add
std
gs
add
add
add
iret
add
jecxz
shl
addl
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
add
jmp
addr16
add
cltd
add
andl
mov
sahf
pop
push
lahf
test
scas
test
into
lods
mov
xchg
mov
cmpsb
add
insb
mov
xchg
add
add
addl
stos
add
fists
mov
add
mov
sub
pop
push
push
push
push
lea
push
push
push
push
call
in
push
mov
add
fildl
pusha
lock
imull
pusha
cwtl
clc
test
push
mov
mov
add
cmpsb
mov
popf
add
xchg
add
add
scas
add
add
add
add
int3
testb
add
push
sti
mov
les
add
add
lahf
add
mov
mov
lcall
push
xor
xor
pop
testl
push
push
push
push
push
call
add
cltd
add
add
push
pop
add
int
js
add
shl
addl
push
mov
add
hlt
popa
stos
sub
pop
addl
push
push
dec
shl
add
pop
call
push
lea
push
push
push
push
lea
push
lea
push
push
call
je
les
add
add
add
add
mov
imul
scas
jbe
add
add
les
pop
mov
pop
fadds
mov
icebp
ret
add
enter
lcall
inc
cld
push
push
push
lea
push
push
push
push
push
call
add
mov
add
les
mov
mov
mov
add
arpl
mov
add
mov
mov
mov
pop
pop
cli
out
lret
loopne
lcall
jne
push
push
push
push
push
lea
push
push
push
call
loope
les
outsw
cmpsl
test
push
clc
addr16
jb
aad
xchg
addb
add
popl
add
out
pop
lock
std
push
add
add
sub
pop
push
push
push
push
push
push
push
push
push
lea
push
call
test
add
lock
lahf
insb
add
add
loopne
gs
pop
movb
sti
add
jp
add
push
outsl
shll
add
mov
in
fdivr
lcall
popf
idiv
call
test
push
push
push
push
lea
push
lea
push
push
call
add
stos
addl
add
pop
mov
push
xchg
add
add
mov
mov
roll
add
add
pop
xchg
in
mov
incb
mov
pop
add
popl
jge
add
test
std
lcall
push
lea
push
lea
push
call
lahf
addb
xchg
test
add
arpl
add
enter
leave
jge
xchg
add
fiaddl
cmpsb
mov
add
lock
lcall
pop
push
shl
shr
shl
inc
pop
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
mov
add
add
add
aam
fcmovb
jne
add
add
data16
aad
mov
leave
add
add
xchg
clc
jb
jb
icebp
test
mov
fdivr
lcall
ret
push
push
call
testl
add
add
in
pop
xchg
mov
add
movsl
add
leave
push
mov
add
movsl
add
outsl
add
cltd
add
outsl
add
pop
pop
lods
popf
add
add
fiadds
stos
mov
lods
int3
in
xchg
add
int
xchg
loopne
lea
add
mov
mov
pop
push
push
push
push
lea
push
push
call
add
mov
add
mov
popa
pop
into
add
mov
test
lods
lcallw
js
mov
mov
mov
jae
add
cmpsl
push
xchg
fldcw
mov
out
add
add
add
xchg
add
add
add
sub
pop
mov
push
inc
dec
shr
pop
add
push
lea
push
lea
push
lea
push
push
call
add
add
jo
add
add
cli
add
add
push
push
outsl
cltd
pop
stc
jo
fdivr
add
add
mov
push
add
add
addr16
loope
pusha
xchg
in
pop
push
push
not
pop
push
push
push
push
push
call
add
sti
xchg
outsl
xchg
loop
add
testb
add
add
test
out
add
jno
add
xchg
in
mov
xchg
add
push
add
mov
lock
lcall
push
ror
shr
sub
pop
push
movl
push
lea
push
push
push
push
call
lods
in
xchg
shrb
add
jno
push
pusha
xchg
add
add
pop
add
add
in
add
add
mov
stos
lods
pop
lcall
mov
test
jmp
std
popa
in
xchg
jge
add
add
add
mov
call
add
sub
pop
push
call
push
rol
pop
push
call
push
push
push
push
push
push
push
push
call
add
hlt
xchg
jl
cmpsl
idivb
jne
add
jge
fcomps
add
jno
add
mov
add
add
pop
add
movsb
ret
gs
in
add
mov
addr16
pop
subl
push
dec
pop
cmpl
jne
push
push
push
push
call
add
add
jae
add
add
mov
int3
add
add
les
rolb
jecxz
mov
pop
add
rcll
sahf
push
pusha
fs
in
lock
lcall
pop
push
pop
pop
pop
push
shr
not
pop
leave
ret
push
lea
push
push
push
push
call
ja
js
sar
addl
in
add
pop
popf
mov
test
mov
sar
mov
add
xchg
add
push
pop
mov
push
inc
ror
dec
pop
add
push
push
dec
ror
pop
push
push
push
lea
shr
pop
push
push
pop
mov
push
lea
push
call
add
add
mov
stos
mov
mov
stos
add
push
roll
filds
add
out
xchg
add
add
rcr
xchg
jb
add
add
add
mov
push
movsl
lret
js
ja
xchg
mov
imul
mov
in
clc
pop
lea
push
lea
push
call
jno
hlt
addb
out
lret
add
add
jo
jns
add
pop
add
lahf
mov
push
imul
sbbb
pusha
clc
jno
out
add
filds
mov
sub
pop
sub
push
sub
shr
shr
pop
mov
shr
push
push
push
push
call
imul
add
add
add
sti
mov
xchg
stos
fadds
add
jecxz
repnz
jno
add
xchg
mov
add
mov
xlat
aad
rol
sub
pop
add
push
sub
shr
inc
pop
mov
push
shr
ror
dec
rol
pop
mov
add
push
push
push
push
lea
push
lea
push
push
push
call
cmc
add
pop
add
pop
popl
movsl
mov
out
add
fimuls
jae
mov
loopne
add
push
not
pop
mov
push
dec
rol
pop
mov
cmp
jne
push
sub
pop
cmp
jne
mov
push
add
not
pop
movl
push
push
lea
push
push
push
push
call
test
add
popa
add
test
je
jmp
add
add
enter
pusha
test
jge
roll
in
pop
add
add
stos
lds
sti
add
lcall
std
or
add
mov
mov
mov
push
push
push
push
call
add
nop
in
rolb
leave
add
xchg
add
stos
js
add
out
push
cltd
add
add
add
fildl
pop
rcrb
fildl
mov
sbbb
push
loop
fs
fwait
push
add
add
pusha
pop
pop
mov
cmpsb
add
sub
pop
mov
push
push
push
push
push
push
push
push
call
add
loope
notl
add
add
ficompl
lods
add
fs
rcrb
fldenv
add
add
cltd
popa
add
gs
pop
sub
jne
push
push
lea
push
call
fwait
jge
mov
add
stos
pop
add
cltd
ret
xchg
add
jge
arpl
mov
add
xchg
roll
add
in
jb
test
ficoml
sub
pop
mov
movl
push
inc
inc
pop
jmp
push
inc
pop
mov
push
not
xor
lea
pop
mov
push
push
call
loopne
shlb
add
add
call
jl
out
in
in
add
add
mov
pop
fiaddl
lcall
cli
add
test
add
add
loop
mov
push
push
push
push
push
push
push
lea
push
lea
push
push
call
sahf
add
notl
out
ja
jb
add
add
shll
add
xchg
add
shrb
imul
mov
add
jp
add
scas
jmp
push
add
fdivr
lcall
add
add
add
in
add
push
push
push
lea
push
lea
push
call
rol
lods
enter
add
pop
addr16
out
jmp
rolb
mov
js
pop
add
add
ret
push
popa
sahf
fadds
add
sbbb
pop
jne
jnp
shrl
les
lcall
inc
cld
push
push
push
push
call
add
add
imul
cmpsl
mov
out
add
add
mov
cwtl
mov
xchg
xchg
mov
clc
add
mov
add
jnp
fildl
add
test
movsb
outsl
movsb
add
add
cmpw
jne
mov
push
shr
pop
movl
push
add
shl
add
pop
jmp
pushl
push
push
push
push
call
jmp
add
cmpsb
pop
nop
xchg
movsb
cwtl
add
xchg
xchg
add
loope
add
stos
rclb
fldl
cmpsl
add
aam
fs
jmp
add
add
out
add
into
push
add
jge
imul
lcall
push
shr
rol
not
sub
pop
mov
push
add
pop
mov
mov
push
push
lea
shl
rol
push
sub
add
shr
sub
lea
pop
lea
lea
pop
push
shl
xor
pop
push
call
push
push
lea
push
push
lea
push
push
lea
push
push
call
push
add
enter
add
shll
mov
add
cmc
filds
push
out
rolb
imul
lret
in
push
add
mov
in
add
addl
lods
sub
pop
cmpl
je
push
push
dec
xor
push
or
inc
add
inc
xor
shl
not
sub
sub
inc
pop
add
lea
rol
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
rcll
arpl
enter
pop
mov
jp
add
cli
mov
add
add
mov
jns
add
xchg
je
lcall
add
push
lea
push
push
lea
push
push
push
push
push
call
add
jecxz
add
add
mov
add
pushf
push
icebp
lret
incb
add
add
push
fisttps
add
int
jp
add
add
jp
lret
pop
push
fs
add
add
add
jae
cli
ja
add
lcall
arpl
add
push
add
shr
sub
pop
cmpl
je
push
push
shl
add
shr
push
or
inc
add
ror
not
sub
sub
pop
sub
add
pop
push
push
push
push
push
call
lods
cmpsb
addr16
bound
out
add
arpl
jecxz
cmc
add
adcb
shrb
add
int3
divl
add
mov
loop
add
mov
shr
pusha
add
je
sub
pop
push
call
push
lea
push
push
push
push
call
push
stos
add
mov
add
jp
xchg
imull
add
roll
add
hlt
add
add
push
imul
aam
xchg
loopne
add
xlat
add
insb
mov
rorb
mov
add
add
add
out
lea
cld
les
loopne
add
sub
pop
cmpl
je
push
push
lea
shl
add
add
push
xor
add
add
sub
sub
not
sub
shr
pop
add
pop
push
not
pop
push
call
push
push
push
push
push
push
push
call
push
fildl
add
add
cltd
add
add
add
push
add
add
xchg
push
add
mov
sti
add
sub
pop
cmpl
je
push
push
sub
sub
sub
push
sub
add
sub
rol
pop
xor
add
pop
push
shr
pop
push
push
add
shr
pop
call
push
lea
push
push
push
push
push
push
lea
push
push
call
pop
into
add
add
insb
xchg
add
fidivrs
movsb
add
int
mov
ret
add
mov
data16
mov
jnp
jo
push
add
ficoml
mov
shl
in
fdivr
lcall
cmp
rol
je
push
push
shl
xor
shl
not
push
sub
add
add
sub
lea
shl
xor
pop
rol
rol
inc
add
pop
push
shr
pop
push
call
push
shl
pop
cmpl
je
push
push
add
push
xor
add
add
ror
sub
sub
pop
shr
pop
push
shr
sub
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
xchg
jbe
stos
mov
add
negb
mov
ja
mov
add
add
add
mov
mov
add
movsb
cld
int3
add
pop
add
xchg
mov
add
clc
scas
loop
cli
roll
xchg
stc
int3
add
test
hlt
add
lcall
jmp
add
cmpl
je
push
push
sub
push
and
add
add
sub
shr
shr
add
sub
pop
not
dec
add
sub
pop
push
xor
not
shl
pop
push
push
add
not
pop
call
cmpl
je
push
push
ror
lea
push
or
inc
add
shl
xor
sub
shl
shl
pop
add
dec
sub
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
rolb
cmpsb
pop
xchg
add
xchg
push
push
mov
add
roll
add
mov
add
repnz
xchg
out
add
add
icebp
icebp
fwait
int3
add
add
add
push
addl
iret
push
mov
call
add
enter
imul
mov
sub
pop
push
push
push
push
push
call
insb
stc
les
add
pop
mov
ja
add
add
fstl
fstpl
add
clc
add
add
add
push
lods
xchg
je
popl
add
out
mov
lret
jno
add
mov
xchg
movsl
pop
add
mov
repnz
pop
add
icebp
roll
lcall
push
sub
enter
pop
add
shr
pop
cmpl
je
push
push
shl
add
not
push
or
inc
add
shr
lea
sub
sub
pop
shl
pop
push
inc
pop
push
call
push
push
push
push
push
push
push
push
call
call
mov
push
mov
pop
mov
mov
push
jno
add
add
add
jl
pop
stc
insb
jle
mov
add
add
scas
lods
add
fs
add
sub
pop
cmpl
je
push
push
not
ror
push
or
not
add
dec
sub
add
sub
add
pop
rol
pop
push
add
inc
pop
push
push
add
dec
not
pop
call
cmpl
je
push
push
not
dec
push
sub
add
add
sub
sub
shl
inc
pop
add
pop
push
shl
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
xchg
cmc
add
pop
add
add
fldl
mov
cli
add
jmp
jnp
addr16
in
add
mov
push
add
mov
pop
cmpl
je
push
push
shl
inc
add
push
or
not
add
add
sub
sub
dec
inc
dec
pop
sub
lea
pop
push
inc
add
sub
not
pop
push
call
push
dec
add
pop
cmpl
jne
push
add
shl
pop
mov
push
dec
sub
not
not
pop
movl
push
push
lea
push
push
push
call
andb
fildl
add
add
int
enter
aam
aam
mov
add
test
add
test
ret
mov
mov
lea
add
pushf
nop
push
mov
add
add
add
add
add
add
rolb
push
mov
iret
pop
xchg
cmpb
or
add
push
sub
sub
pop
xor
pop
push
push
push
push
push
lea
push
push
push
call
xchg
in
xchg
push
out
cwtl
lret
scas
enter
add
ja
testl
push
test
add
add
mov
gs
pop
pop
add
arpl
popa
xlat
ja
incb
sti
add
add
sub
pop
pop
push
push
push
push
push
push
call
jp
xchg
cltd
add
sarb
scas
jae
bnd
mov
rolb
add
pushf
add
cltd
push
loope
xchg
add
mov
cli
mov
mov
movsb
add
lcall
push
not
lea
pop
pop
push
lea
pop
leave
push
push
push
push
push
lea
push
call
jl
add
xchg
fs
add
leave
mov
mov
add
in
imul
mov
add
add
je
add
jmp
add
add
pushf
push
pusha
add
add
lcall
or
push
push
push
call
jge
add
push
xchg
add
js
add
mov
ret
jns
js
cmpsb
add
lahf
aad
mov
fstpt
outsl
mov
cwtl
roll
sub
pop
push
mov
push
push
call
idivl
add
add
loope
cli
push
cmc
loope
push
jae
rol
pusha
jnp
test
mov
bound
mov
imul
add
in
lods
add
add
add
sub
pop
add
cmpl
jne
push
push
add
rol
push
or
not
add
rol
shl
shr
ror
sub
pop
xor
not
shl
pop
push
push
lea
push
call
mov
test
std
add
add
add
xchg
mov
add
leave
loope
pop
addl
hlt
pop
pushl
push
push
push
push
call
rolb
loopne
fidivs
jne
movsl
add
orl
scas
add
add
sarl
push
add
cmc
mov
popa
jecxz
pop
mov
sahf
jmp
popf
xchg
jns
add
testb
mov
add
jmp
mov
lret
lock
call
push
push
push
push
push
call
push
testb
jecxz
add
add
mov
lret
rcl
out
in
ja
fiaddl
jmp
rcrl
add
lea
stos
add
shlb
in
in
lcall
call
push
inc
pop
jmp
push
push
push
push
push
push
push
push
push
call
add
mov
call
jecxz
mov
imul
rorl
xchg
add
add
mov
push
fcmove
add
add
jge
add
test
add
add
lret
push
push
push
call
add
add
add
add
add
add
mov
orb
cmpsb
xchg
push
add
add
test
fisubrl
push
add
add
add
shr
jnp
add
mov
lock
roll
in
lcall
iret
adc
add
push
pop
jmp
push
push
push
push
push
push
call
xchg
vaddsubps
loop
test
add
ljmp
add
add
outsl
movb
stos
scas
jnp
mov
lahf
add
add
add
pop
xchg
jle
in
call
add
test
mov
lea
inc
add
push
or
inc
add
ror
lea
sub
shl
rol
ror
pop
inc
pop
push
push
push
call
fsub
xchg
mov
add
xlat
add
xchg
add
add
pushf
xchg
add
andl
add
add
rolb
mov
add
sub
pop
pushl
push
xor
shl
ror
pop
call
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
pushf
jns
lret
add
add
roll
icebp
add
cli
push
add
jo
add
add
xchg
add
xchg
flds
sub
pop
push
push
push
lea
push
push
push
call
push
add
xchg
add
ficoms
addl
pusha
jmp
xchg
xlat
pop
push
les
jo
pop
clc
test
stos
add
rorl
js
in
js
add
movsb
add
pop
push
movsl
add
shlb
add
add
sub
pop
call
push
push
push
lea
push
push
lea
push
push
push
push
call
neg
add
add
mov
add
test
mov
cmpsb
add
shrl
fistl
push
mov
in
push
push
xchg
addb
adc
add
ret
test
add
test
add
add
push
lea
pop
cmpl
jne
mov
push
lea
push
push
call
jno
jge
sahf
add
add
add
mov
into
pop
add
add
add
jp
iret
jnp
pop
add
add
movl
clc
mov
leave
in
add
movsb
insb
out
add
je
add
add
leave
cmpsl
popf
xchg
call
pop
mov
push
sub
sub
shl
pop
push
call
test
aas
push
call
jb
cmc
add
add
pop
add
imulb
mov
add
jmp
xchg
add
sbb
rclb
add
rcl
sti
addb
imul
add
xchg
scas
add
scas
mov
xchg
les
add
add
roll
cwtl
lods
xchg
push
add
lcall
pop
adc
add
cmpsl
jae
push
sub
ror
push
or
inc
add
xor
add
rol
sub
sub
pop
shr
pop
push
not
inc
lea
pop
pushl
call
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
loopne
test
add
pop
mov
andl
stos
lcall
pop
add
negl
xchg
add
int3
sub
pop
call
push
push
sub
sub
add
shl
push
or
not
add
rol
dec
sub
sub
shr
pop
add
sub
pop
push
sub
shl
lea
not
pop
pushl
push
add
pop
call
call
push
push
add
not
shl
push
or
inc
add
not
not
sub
add
sub
pop
add
pop
push
sub
inc
add
pop
pushl
call
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
fadds
jle
add
xchg
add
push
add
lock
movsb
xchg
jle
lret
repnz
jae
pusha
add
push
into
cmpsl
add
fdivr
lcall
shrb
stos
push
dec
push
lea
rol
add
push
or
not
add
add
sub
add
shl
sub
shr
ror
pop
sub
not
pop
push
push
push
call
sbb
xchg
add
add
add
pop
add
jns
fldt
add
out
test
add
push
mov
add
pop
push
jne
add
int
add
mov
hlt
pop
pushl
push
push
push
lea
push
push
push
push
push
call
add
add
pop
mov
mov
add
insb
std
lret
pop
add
add
in
add
test
mov
add
mov
jmp
push
ja
add
add
lret
add
mov
add
out
add
add
sub
pop
call
push
lea
sub
pop
call
push
push
sub
add
add
push
and
add
lea
ror
sub
inc
pop
add
dec
rol
xor
pop
push
xor
sub
ror
pop
pushl
push
pop
call
call
push
push
add
sub
inc
push
or
inc
add
inc
ror
sub
not
pop
lea
sub
pop
push
inc
pop
pushl
push
rol
add
add
pop
call
call
push
push
xor
ror
push
or
inc
add
sub
sub
xor
pop
lea
pop
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
mov
testb
jge
push
filds
add
xchg
add
mov
xor
test
mov
fwait
mov
std
mov
xchg
js
add
sti
add
add
in
test
mov
jae
pop
add
jl
cwtl
add
add
xchg
mov
lcall
jne
push
lea
push
push
push
push
push
push
call
add
push
add
pusha
add
aam
mov
push
pop
add
add
divb
out
add
mov
mov
pop
fisubl
call
push
lea
pop
call
push
push
xor
inc
dec
push
and
add
sub
lea
pop
ror
inc
inc
lea
pop
push
push
push
push
push
push
push
call
insb
add
stc
cmpsl
xchg
fiadds
add
add
add
add
add
clc
add
jle
add
aam
jle
add
add
add
ret
push
pusha
movsl
add
test
loope
add
ret
jno
outsl
xchg
ja
sahf
mov
aam
stc
rolb
pop
scas
add
in
lcall
jne
push
lea
push
push
call
push
call
int
addb
mov
jmp
test
add
out
add
add
add
xchg
add
add
xchg
push
test
pusha
add
add
add
sub
pop
call
call
push
push
add
sub
push
and
add
not
shl
ror
sub
shr
sub
xor
pop
add
inc
shr
rol
pop
push
push
call
test
jo
add
outsl
add
test
ja
pop
pop
add
push
loop
xchg
leave
imul
add
mov
cli
add
add
add
pop
faddp
pop
fs
arpl
int
push
add
in
loop
test
iret
xlat
cmc
push
fwait
cld
push
add
push
test
mov
lcall
jne
call
push
not
inc
pop
call
push
push
sub
shr
lea
lea
push
or
inc
add
not
sub
rol
ror
pop
sub
rol
dec
pop
push
not
add
pop
pushl
push
ror
not
pop
call
lea
push
push
push
push
push
push
push
lea
push
push
push
call
xchg
add
fsubp
mov
push
hlt
add
sarl
jmp
lds
jno
lods
cmpsb
mov
xchg
add
stos
add
push
mov
ljmp
add
imul
add
scas
add
add
pop
add
cwtl
outsl
fwait
add
js
addb
hlt
mov
addw
add
sub
pop
push
call
push
push
push
push
pop
add
sub
shl
sub
shr
dec
ror
shl
pop
ror
shl
dec
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
mov
ror
enter
test
mov
jl
addb
mov
push
hlt
add
jl
lds
add
bound
jo
fsubl
add
add
test
pushl
call
push
lea
ror
pop
call
push
push
add
add
add
lea
push
xor
add
add
not
sub
sub
pop
rol
shl
pop
push
sub
pop
pushl
call
push
push
push
push
push
call
add
insb
add
add
add
rcr
mov
add
out
mov
clc
add
std
add
popf
add
jae
add
xchg
add
mov
out
add
cmp
je
add
jp
add
add
fildl
push
cltd
jmp
addb
add
in
in
lcall
shrb
in
stos
push
push
and
add
shl
sub
not
dec
pop
add
dec
pop
push
lea
push
lea
push
push
lea
push
push
push
call
xchg
lock
mov
add
call
xchg
popf
add
ljmp
lcall
ret
lds
in
add
push
cmpsb
int3
add
movl
push
add
jge
push
xchg
add
in
jecxz
stos
add
sub
pop
pushl
push
add
not
pop
call
push
rol
shl
pop
call
push
push
add
inc
push
push
pop
add
rol
lea
add
add
sub
add
sub
sub
sub
pop
dec
inc
lea
pop
push
push
push
push
push
push
push
push
call
add
fldl
add
add
scas
fdivl
enter
mov
ret
add
push
faddl
loope
sahf
jno
fiadds
add
scas
add
add
add
mov
xchg
pushf
add
add
pop
in
arpl
add
testb
or
dec
sbb
add
jle
add
ret
push
shr
push
or
inc
add
ror
xor
ror
not
sub
add
shl
xor
xor
pop
xor
xor
shl
add
pop
push
push
add
push
and
add
inc
sub
sub
rol
pop
xor
pop
push
lea
push
push
push
call
mov
add
add
add
in
mov
lret
add
cwtl
add
add
add
add
stos
bnd
add
sub
pop
call
push
ror
rol
not
pop
pop
dec
jne
push
push
push
push
push
lea
push
push
call
xchg
out
mov
mov
add
add
mov
add
mov
test
add
add
cli
lea
add
in
in
call
mov
push
rol
pop
int
lea
push
push
dec
inc
shr
push
and
add
not
sub
sub
pop
add
shl
not
add
pop
push
add
ror
pop
pushl
push
push
call
insb
add
andl
add
pop
gs
add
ret
fsubp
add
lret
sti
jl
add
add
add
mov
cld
add
jnp
jbe
add
cltd
pop
mov
testb
test
in
add
pop
out
in
clc
pop
call
push
push
push
lea
push
push
push
push
call
add
mov
aad
add
in
stos
add
xchg
add
add
fwait
movsl
add
andl
sub
pop
push
push
sub
pop
call
push
push
ror
add
sub
sub
push
sub
add
sub
ror
pop
shr
dec
shl
sub
pop
push
push
push
push
call
add
outsl
xchg
push
sahf
mov
mov
add
mov
add
add
lret
mov
imul
add
add
imul
add
add
add
pop
add
sub
pop
pushl
call
push
lea
push
push
push
push
push
call
mov
lcall
xchg
mov
add
xchg
addr16
mov
test
add
xchg
into
insb
filds
lock
add
mov
repnz
testb
add
icebp
xchg
push
pushf
ret
mul
jb
in
mov
call
mov
call
push
push
push
push
push
call
add
add
add
jecxz
pop
add
out
add
add
push
andb
rclb
mov
idivb
add
add
in
enter
pop
add
jecxz
lahf
add
add
add
sub
pop
mov
lea
push
push
ror
not
rol
shl
push
sub
add
lea
shr
lea
add
sub
xor
sub
pop
lea
xor
ror
add
pop
push
sub
inc
pop
pushl
call
push
lea
push
push
lea
push
lea
push
push
push
call
pop
xlat
pop
pop
lahf
outsl
std
push
add
cmpsb
leave
insb
mov
add
fisttps
add
pop
mov
fldl
jmp
jb
add
jns
xchg
mov
add
iret
jge
push
rcll
in
stos
jno
stos
je
clc
add
push
in
mov
in
lcall
add
push
push
inc
sub
pop
push
push
push
push
push
push
push
lea
push
push
call
lcall
roll
add
add
add
add
mov
loope
add
add
mov
push
test
fdivl
add
add
mov
add
lcall
add
ret
shl
pop
pushl
push
push
shr
add
push
or
inc
add
not
dec
sub
pop
sub
pop
push
pop
push
push
lea
push
push
push
push
call
loop
add
add
test
scas
mov
fildll
imul
add
faddl
aam
add
jno
push
mov
rolb
push
add
ret
xlat
shr
add
add
popf
movsl
faddl
incb
add
push
add
push
in
in
lcall
shrb
in
out
push
shr
lea
sub
push
or
inc
add
inc
add
sub
sub
rol
pop
sub
shl
sub
pop
push
lea
pop
pushl
push
push
push
push
push
push
call
incb
mov
add
add
movsl
mov
js
rol
add
out
in
add
bound
jbe
rolb
jno
test
test
add
push
mov
je
add
push
push
sub
shr
pop
call
push
push
push
xor
add
shr
sub
add
xor
not
not
pop
xor
xor
add
pop
push
push
lea
push
call
sarb
xchg
add
add
add
mulb
cli
nop
add
pop
fcoml
add
add
add
fdivs
mov
pop
popf
outsl
add
pop
fucompp
xchg
add
add
je
add
mov
push
add
arpl
add
add
imul
lcall
jne
call
push
shr
pop
call
push
dec
xor
add
add
pop
pushl
push
lea
push
lea
push
call
movsl
fsubrl
push
add
mov
add
add
add
pushf
jl
repnz
in
fiadds
lcall
add
in
add
add
add
add
add
add
sub
add
hlt
pop
mov
push
sub
add
xor
pop
jmp
push
push
dec
push
or
not
add
sub
xor
xor
dec
sub
sub
pop
xor
shl
rol
pop
push
dec
rol
rol
shr
pop
pushl
call
push
sub
pop
push
push
add
sub
pop
call
push
push
rol
not
add
push
push
pop
add
shl
shr
add
sub
shr
inc
pop
shl
add
pop
push
push
push
push
push
push
push
push
push
call
fmull
outsl
loop
add
add
mov
add
mov
imul
fimuls
push
jo
add
fldenv
cwtl
add
add
shll
add
cmpsb
add
xchg
add
pop
rcrl
in
fdivr
lcall
jne
call
push
dec
sub
shr
pop
push
call
push
add
rol
sub
rol
pop
leave
add
push
ror
pop
pop
push
dec
not
pop
pop
push
ror
not
inc
pop
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
repnz
int
pop
jbe
mov
add
pop
rolb
add
add
mov
shll
jb
push
imul
cld
andl
fwait
stc
add
rclb
xchg
les
add
incb
fsub
jl
add
push
pusha
mov
sti
add
add
mov
pop
loopne
add
flds
sub
pop
inc
push
push
push
call
add
loopne
mov
out
fs
add
jge
mov
add
mov
add
pop
jo
vsubps
mov
add
cmc
ja
add
add
push
sub
pop
ret
leave
push
shl
ror
pop
ret
push
push
lea
push
push
call
add
add
jnp
fst
lahf
add
add
js
jno
mov
xchg
mov
add
push
mov
jb
add
lods
add
incb
mov
add
mov
jo
in
hlt
pop
mov
push
push
call
fsubrs
add
add
add
add
add
mov
add
add
out
shlb
sahf
nop
add
mov
mov
add
add
jle
fsubs
add
bound
outsl
cli
rolb
mov
jne
add
sti
cmpsl
test
mov
jns
lahf
fucomip
fiaddl
sub
pop
cmpl
jne
push
push
push
push
push
call
push
mov
jmp
mov
add
mov
scas
outsl
jnp
add
mov
xchg
stos
push
add
push
push
mov
lret
add
cltd
je
pushf
mov
jle
mov
jge
push
lcall
lods
mov
in
pop
mov
push
sub
pop
jmp
mov
push
lea
push
push
push
lea
push
call
mov
add
cwtl
filds
fldl
aam
add
outsl
mov
arpl
stos
add
ret
add
add
cld
add
jmp
lea
test
add
out
lods
push
ljmp
arpl
jecxz
lret
add
cld
mov
aad
fiadds
scas
add
cld
sub
pop
and
push
push
lea
push
push
call
leave
leave
scas
lock
lcall
add
add
add
fidivrs
add
mov
add
add
lcall
leave
push
push
push
lea
push
lea
push
push
push
push
push
call
jp
add
cmpsb
leave
add
jecxz
pop
into
add
xlat
imul
add
jb
addb
add
add
mov
out
jnp
add
mov
add
mov
rol
xchg
stc
add
push
in
scas
test
mov
mov
sub
pop
xor
push
ror
pop
add
push
push
push
call
add
out
iret
add
add
fildll
outsl
add
out
scas
imul
add
loope
arpl
mov
les
push
jge
add
add
add
mov
mov
lcall
dec
call
mov
push
push
push
push
push
push
lea
push
push
call
arpl
mov
insb
mov
ja
out
add
mov
lea
in
ffreep
test
add
add
aad
add
push
add
add
add
add
mov
add
stos
lahf
add
add
test
in
fcompl
sub
push
sub
sub
rol
pop
jmp
push
lea
push
lea
push
push
push
push
push
call
add
add
mov
pop
jmp
les
add
lods
nop
imul
jmp
data16
mov
cld
mov
add
pop
add
add
add
nop
add
nop
cld
cmc
add
lcall
pop
sub
pushl
push
lea
ror
shl
sub
pop
pop
push
lea
push
push
lea
push
call
add
add
jo
jl
je
add
xor
add
add
mov
add
lret
push
pop
pushf
pop
sahf
loop
neg
cmpsl
mov
add
shrl
add
sub
pop
sub
cmp
jne
push
not
pop
mov
push
push
push
push
push
push
push
push
push
push
call
mov
pop
add
add
add
add
test
lret
push
loop
add
aad
flds
test
add
mulb
add
jne
and
jge
popf
jbe
test
cmpsl
add
insb
jecxz
add
lcall
dec
cmp
not
lea
sub
sub
pop
sub
mov
push
rol
sub
pop
shr
push
shl
shr
pop
add
push
not
pop
sub
push
push
push
push
call
add
add
mul
mov
add
loop
std
in
add
pop
add
add
lods
add
pop
enter
mov
cltd
imul
add
lock
pushl
push
rol
ror
pop
pop
push
not
add
pop
shr
and
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
mov
mov
cmpsl
mov
testb
add
in
clc
add
add
add
aad
test
aam
add
in
add
imul
add
mov
jmp
jmp
mov
cmpsb
aad
mov
xchg
subb
cmpsl
out
pop
xchg
out
add
add
sub
pop
sub
cmp
jne
push
lea
push
push
push
push
push
push
call
add
filds
jecxz
mov
jae
movsb
push
add
add
iret
push
mov
push
add
lods
add
stos
add
add
add
scas
mov
add
pop
lea
pop
test
lret
in
leave
push
push
push
push
push
push
push
call
in
movsl
jb
add
lcall
mov
push
jecxz
mov
add
add
add
push
lea
in
stc
add
mov
add
xlat
leave
mov
fbstp
lea
les
movl
movsb
fbld
in
in
lcall
add
push
inc
lea
pop
push
push
push
push
lea
push
call
add
loopne
test
jp
mov
loope
shlb
movsl
stos
add
rcll
sti
cmc
into
aad
test
jo
testb
mov
popf
push
iret
add
push
jmp
je
add
lods
jno
add
in
cmpsb
hlt
add
outsl
add
mov
cwtl
mov
add
repnz
pop
mov
add
push
lea
push
push
lea
push
push
lea
push
push
call
mov
lret
loope
arpl
add
mov
add
jecxz
add
xchg
jae
add
lret
gs
add
add
cmpsl
cld
cltd
add
xchg
fstps
lods
flds
add
popf
xlat
rolb
add
out
lds
add
lods
add
testb
sub
pop
push
push
push
shl
shl
pop
push
push
pop
push
push
push
lea
push
push
push
push
call
negl
add
std
mov
jle
add
add
add
mov
cld
xorl
add
popa
scas
aam
in
call
push
mov
push
lea
pop
lea
push
ror
pop
sub
mov
push
lea
push
lea
push
push
call
add
gs
add
pop
fiadds
mov
test
add
mov
call
add
add
fwait
mov
movsb
add
outsl
cmpsl
mov
pusha
add
xchg
jns
add
sub
pop
shr
push
add
pop
add
push
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
add
loope
add
add
cmpsb
add
add
mov
pop
add
add
mov
add
out
roll
add
imul
add
data16
add
add
out
add
jmp
lcall
fwait
addb
add
pushf
lock
sub
push
push
push
push
push
push
push
call
add
add
leave
add
add
add
add
cmpsl
add
jno
push
xlat
xchg
adcl
push
js
add
addb
clc
lret
mov
add
imul
nop
add
lods
cld
add
add
fistpl
push
xchg
add
in
loopne
add
push
add
sub
pop
mov
push
shl
shl
shl
pop
add
push
shl
not
shr
add
pop
xor
push
ror
add
pop
mov
and
push
push
push
lea
push
push
push
push
lea
push
call
stos
add
mov
nop
int3
add
test
roll
add
mov
cld
hlt
push
out
fsubrl
mov
add
mov
push
rorl
add
add
add
add
jb
mov
call
add
add
jmp
add
sub
pop
rol
push
push
push
push
push
push
push
push
push
push
call
sbbl
mov
add
stc
leave
add
jecxz
fidivl
add
mov
pop
add
xchg
lahf
add
mov
decb
mov
add
in
fcomps
rolb
add
negl
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
pop
lods
add
stos
add
out
loop
add
pusha
into
add
lcall
add
add
out
push
jnp
rcrl
add
xchg
rolb
sub
pop
cmpb
jne
push
lea
push
call
les
add
icebp
out
pop
add
add
pusha
add
addr16
enter
add
int
add
push
add
add
pop
add
push
push
push
push
push
push
push
push
call
subl
rolb
pop
jbe
mov
pop
mov
fs
add
add
add
push
jb
push
add
push
fs
mov
pusha
push
add
in
loopne
lcall
inc
or
test
add
add
lea
push
push
lea
push
push
push
lea
push
lea
push
call
add
imul
pop
add
mov
add
add
add
in
outsl
xchg
test
incb
add
cwtl
pusha
xchg
add
jnp
add
test
call
push
push
push
call
rcl
faddl
in
push
add
add
xchg
xchg
add
lahf
push
xchg
xchg
lds
addl
add
leave
mov
in
ret
mov
add
mov
test
mov
add
jnp
cli
add
bound
mov
xor
push
inc
pop
pop
push
rol
shl
ror
rol
pop
pop
push
push
push
lea
push
push
push
lea
push
call
enter
add
addr16
mov
fadds
mov
add
mov
add
lods
add
mov
pop
jp
stos
mov
mov
mov
push
xchg
leave
add
add
mov
add
jno
out
mov
in
test
lcall
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
icebp
add
fildl
add
add
add
jne
add
add
lret
dec
fidivs
add
jb
add
xchg
add
mov
mov
add
add
jo
rclb
add
imul
add
js
in
fdivr
lcall
push
dec
not
pop
pop
leave
push
inc
sub
pop
ret
push
dec
pop
mov
add
push
lea
push
push
lea
push
lea
push
push
push
push
call
jle
pusha
fwait
mov
add
add
ror
push
add
lret
add
push
xchg
add
fstp
int3
addr16
pushf
stos
fadd
arpl
insb
add
std
fsubrs
incb
into
xchg
add
add
add
add
add
add
sub
pop
mov
push
shr
sub
pop
push
mull
push
push
push
push
push
push
push
push
push
call
add
add
leave
jne
test
xchg
in
mov
int
add
lods
add
mov
jb
add
add
add
loop
add
add
add
test
add
lcall
ljmp
push
lds
enter
add
in
fcompl
push
lea
push
lea
push
lea
push
push
push
call
ja
pop
add
mov
add
shrb
lock
add
add
add
mov
std
mov
add
cwtl
add
add
pop
push
push
sub
rol
rol
shr
pop
call
push
lea
push
push
push
push
push
lea
push
push
push
call
push
out
loopne
lds
add
lret
fcompl
xchg
lret
add
add
lods
fdivl
add
scas
in
repnz
mov
insb
add
lcall
xor
pop
push
push
push
push
push
push
push
lea
push
push
call
add
add
loopne
int3
jb
add
add
pop
add
push
call
mov
add
add
pop
cmpsl
add
pop
out
push
pop
ret
js
mov
int
movsl
xchg
pop
add
mov
xchg
ja
fadds
add
mov
iret
mov
jb
in
fcompl
push
sub
sub
sub
pop
pop
push
push
push
lea
push
push
push
push
push
call
add
cmc
add
fstp
faddl
add
testb
cmpb
in
add
push
in
add
push
loop
int3
popl
test
add
int3
loope
test
mov
add
pop
add
jmp
lahf
bound
push
movsb
pushf
int
in
mov
loopne
pop
pop
push
push
push
push
push
push
push
lea
push
push
call
mov
aam
jle
fiaddl
jle
add
mov
push
fsub
out
add
pop
add
add
mov
mov
std
test
pushf
add
lock
add
ficoms
in
fcompl
push
push
call
fucomi
sahf
filds
test
add
add
cld
push
add
add
push
gs
add
iret
add
sar
ljmp
add
mov
push
add
jge
add
adcb
mov
add
popf
addl
lcall
or
push
lea
shl
add
shr
pop
push
mov
push
sub
not
pop
add
push
push
sub
pop
push
push
push
sub
add
pop
push
push
lea
add
xor
pop
mov
push
lea
push
push
push
push
lea
push
push
lea
push
call
shl
add
add
xchg
loope
add
add
lods
mov
mov
add
js
stc
add
fimuls
pop
xchg
add
idivb
push
xchg
out
add
push
popa
ljmp
stos
mov
sahf
popf
sti
add
pop
xchg
add
pop
push
pop
push
push
push
push
push
push
call
xchg
cltd
jmp
mov
push
add
add
data16
xchg
mov
add
imul
mul
les
cmpsb
add
mov
push
popf
add
add
add
mov
add
lret
add
pushf
jae
add
mov
incb
add
add
addb
pop
lea
sub
push
add
dec
pop
mov
push
xor
pop
shr
add
push
lea
shr
inc
pop
mov
push
push
push
push
push
lea
push
call
add
lds
jns
jne
lea
stos
pop
pop
mov
mov
add
add
add
pop
out
pop
add
add
jne
call
insb
cmpsl
hlt
add
jmp
xchg
test
add
add
sub
pop
add
pushl
push
xor
ror
pop
popl
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
test
ja
enter
add
add
add
mov
add
lret
fidivrl
add
fnstsw
idivb
add
add
add
xchg
add
call
mov
jb
cmpsl
add
fs
jne
mov
in
fcompl
jnp
push
sub
shr
pop
add
push
lea
push
push
push
lea
push
push
push
call
push
test
in
add
add
add
add
mov
andl
bound
ror
push
xchg
test
cmpsl
add
mov
push
add
stos
out
jmp
int3
xchg
pop
add
loopne
clc
lods
add
mov
leave
sti
sub
pop
xor
push
rol
xor
pop
lea
push
sub
pop
mov
push
lea
push
push
push
call
jnp
into
stos
mov
lea
add
lods
filds
stc
mov
mov
mov
in
add
jb
add
addb
fidivrs
lock
lcall
shll
rclb
lock
shr
pop
rol
push
lea
push
push
call
test
add
mov
jge
aad
add
mov
add
test
add
test
pop
aam
lods
int3
add
jge
lods
pop
push
mov
jecxz
add
stos
mov
xchg
lds
hlt
lcall
push
push
push
push
push
push
push
lea
push
push
call
pop
add
pushf
mov
mov
add
xlat
add
aad
add
lds
aad
lods
mov
fs
out
fadds
push
not
pop
xor
push
sub
pop
nop
push
push
push
push
call
add
std
mov
jne
lea
xchg
pop
shl
push
aad
or
add
add
mov
xchg
sbbl
test
out
mov
nop
push
add
not
lea
add
pop
inc
nop
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
add
jge
push
xchg
add
xchg
fistl
fildll
in
mov
jnp
mov
fadds
shlb
add
mov
add
divb
sub
pop
nop
push
push
call
add
mov
pop
push
add
sti
out
leave
add
out
jl
mov
mov
add
cmpsl
jp
cltd
fsubl
add
xchg
push
test
pop
fucom
jge
ret
mov
add
add
add
ja
mov
add
mov
push
add
clc
pop
cmpb
jne
push
shl
sub
add
add
pop
add
push
push
lea
push
push
push
call
add
jbe
add
add
add
add
imul
rolb
add
jge
add
add
fnstenv
xchg
add
add
enter
popa
cmpsl
add
andb
pop
add
push
push
push
push
lea
push
push
push
call
add
jnp
lret
int
add
les
pop
addl
loop
jl
ror
add
iret
lods
add
add
xchg
add
sub
pop
nop
cmp
je
push
push
push
push
lea
push
call
add
mov
sahf
pop
nop
xchg
je
call
rol
xchg
add
pop
mov
fwait
ror
gs
in
mov
insb
add
outsl
add
push
lea
push
push
call
add
add
add
add
pop
movsb
mov
fnstcw
add
xchg
add
add
pop
mov
add
add
push
enter
loope
imul
icebp
shr
sub
pop
inc
push
push
push
push
push
push
call
mov
repnz
add
add
jmp
jns
add
aad
popf
add
add
scas
cltd
xchg
push
push
add
add
push
fwait
int
cld
xlat
add
add
add
fsub
stos
sub
pop
nop
nop
push
push
push
lea
push
call
cwtl
cmpsb
push
mov
add
roll
lock
xchg
mov
add
add
cmc
add
sarl
mov
jne
sub
pop
cmp
jb
push
lea
push
push
push
call
xchg
mov
jo
mov
fdivrl
mov
push
rorb
in
hlt
in
pop
push
loope
in
lock
xor
jmp
push
push
push
push
push
push
push
lea
push
push
call
add
imul
int3
mov
loopne
add
add
jnp
push
testb
add
xchg
jecxz
add
bnd
add
add
mov
push
xchg
scas
imul
add
add
push
and
push
push
lea
push
push
lea
push
push
push
lea
push
call
leave
add
add
lcall
in
loop
movsl
test
jle
push
mov
add
add
pop
cmc
mov
add
shr
test
mov
addb
add
add
add
mov
rol
jb
pop
addl
cmp
in
fcompl
rcll
out
xor
pop
movzwl
push
lea
push
call
arpl
jecxz
scas
jne
scas
data16
add
test
lret
pop
cmc
jnp
int
imul
mov
add
test
sub
pop
mov
push
push
push
push
push
push
push
push
call
jb
in
fcomip
clc
testl
add
fiadds
testl
add
stos
neg
add
lcall
rcll
loopne
fucomp
inc
add
add
jo
aad
mov
add
add
scas
fwait
mov
faddl
lock
movsb
pop
add
arpl
xorl
cltd
xchg
add
mov
scas
add
ret
js
sub
pop
mov
xor
push
lea
sub
pop
xor
push
lea
push
lea
push
push
call
lods
add
add
mov
xchg
jne
add
add
add
pop
add
add
test
xlat
mov
pop
add
add
data16
shl
fldl
add
add
bound
repnz
add
sub
pop
shl
xor
push
rol
pop
shl
push
push
push
push
push
lea
push
push
push
push
push
call
jae
add
add
mov
fxch
nop
add
mov
mov
fstpl
push
add
mov
add
enter
add
xchg
push
xchg
push
cwtl
out
add
sub
pop
xor
push
sub
add
lea
not
pop
shl
xor
push
ror
pop
mov
add
push
xor
add
not
pop
pop
pop
push
rol
dec
add
pop
pop
push
lea
push
push
lea
push
call
push
mov
mov
add
push
pop
add
add
add
add
stc
aad
scas
add
add
mov
shl
add
add
addl
movb
sub
pop
pop
leave
push
inc
pop
ret
push
inc
shl
ror
dec
pop
push
mov
push
sub
sub
rol
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
pop
pop
rcrb
xlat
mov
mov
mov
into
mov
add
add
lea
fsubs
add
out
pop
test
sub
pop
push
push
push
inc
ror
pop
mov
push
shr
lea
shl
pop
mov
push
pop
mov
push
dec
ror
pop
test
je
push
push
push
lea
push
push
push
push
push
call
add
cmpsl
add
out
neg
push
add
out
insb
add
shl
addb
out
mov
aam
into
mov
xlat
add
add
push
mov
add
push
add
loopne
sub
pop
mov
push
not
pop
test
je
push
xor
dec
pop
mov
mov
push
push
push
push
lea
push
call
add
mov
cld
stc
push
add
mov
orl
lea
add
rcl
lahf
in
add
add
sti
add
mov
fiadds
je
ljmp
add
jl
xchg
jo
jl
ljmp
pusha
repnz
pop
push
rol
add
shl
pop
inc
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
mov
aad
xchg
pop
add
add
add
add
add
rolb
mov
add
add
add
jp
add
sub
pop
cmp
je
push
push
push
lea
push
lea
push
call
add
mov
popf
mov
lods
fdivl
enter
add
add
roll
pop
cli
je
push
mov
pop
mulb
add
add
fstpl
add
popl
add
add
rorb
add
add
aad
pop
sahf
push
push
push
push
push
push
call
pop
pop
lods
lds
mov
insb
loopne
add
add
addl
lock
pop
add
fiaddl
jo
test
fcoml
movsl
fistpll
add
fldl
add
sub
pop
inc
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
lret
xchg
call
ja
mov
add
mov
add
add
push
add
mov
fdivrs
add
lret
push
test
rorb
test
dec
jle
lea
rol
pop
test
jne
push
push
push
push
call
add
add
enter
bound
out
add
cltd
add
mov
add
push
mov
add
filds
lods
add
add
add
ja
lret
mov
loop
xchg
push
out
in
lock
xor
pop
push
push
push
push
call
pop
add
loope
add
nop
lahf
popa
mov
fsubrp
mov
add
add
add
add
test
cmpsl
stos
mov
push
fcoml
out
call
push
mov
mov
ret
add
jecxz
add
add
add
mov
insb
mov
subb
add
pop
rolb
sub
pop
pop
pop
push
push
push
push
call
add
fcomp
out
fdivrs
xlat
in
add
push
arpl
add
add
mov
add
add
js
add
add
pushf
push
push
jns
out
add
add
add
mov
cld
push
add
xchg
lretw
lock
pop
push
push
call
mov
into
add
in
add
add
add
incb
mov
add
fldl
aad
add
add
add
cli
fsub
push
add
loope
in
push
add
js
test
add
ficomps
add
add
push
add
test
add
leave
push
pop
ret
mov
push
push
lea
push
push
push
push
push
push
push
push
call
add
push
add
js
mov
shrb
add
add
mov
xchg
cmpsl
add
mov
mov
add
test
add
popl
lods
fiaddl
add
add
lea
rorl
add
add
add
add
je
add
sub
pop
inc
cmp
jne
push
push
push
push
push
push
push
call
mov
add
push
mov
add
add
movsb
cltd
push
mov
lret
popf
cmpsb
add
in
xorl
imul
add
pusha
add
add
in
add
mov
roll
je
add
add
add
mov
add
push
mov
lcall
jle
mov
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
mov
add
enter
loop
mov
add
clc
js
pop
add
add
lret
add
mov
add
leave
add
add
sub
pop
test
je
push
push
call
data16
insb
fsubrl
add
fadds
test
mov
add
add
jb
xchg
jecxz
mov
mov
add
lcall
push
push
push
call
test
xchg
add
out
out
filds
test
mov
fs
mov
stos
sub
pop
add
push
shr
pop
cmp
jne
mov
push
push
push
push
push
push
push
call
mov
leave
mov
add
mov
add
roll
mov
add
loop
push
add
add
mov
mov
pop
jbe
add
in
xchg
add
lret
xchg
add
xchg
add
rolb
sub
pop
test
je
push
push
push
lea
push
call
sti
gs
stos
out
scas
push
scas
add
test
add
add
xchg
add
push
mov
add
scas
push
push
add
add
mov
sub
pop
mov
push
push
push
call
push
mov
add
pop
add
cmpsb
loopne
leave
lret
imul
mov
faddl
sar
add
jno
mov
sub
pop
add
push
lea
push
lea
push
push
call
add
add
fistpl
test
mov
cli
add
add
leave
add
add
add
sahf
testl
add
sub
pop
cmp
je
push
ror
sub
pop
jmp
xor
push
ror
dec
not
inc
pop
pop
push
ror
xor
pop
pop
pop
push
sub
add
pop
pop
push
push
call
add
mov
scas
add
add
jmp
adcb
add
add
add
imul
push
ret
add
notl
add
in
mov
add
add
add
hlt
roll
jbe
fmul
pop
sub
pop
leave
push
sub
not
add
pop
ret
push
lea
push
push
push
push
push
push
call
jl
addr16
add
mov
outsl
les
add
add
push
add
out
cwtl
in
popa
add
cli
loopne
add
push
add
nop
cwtl
add
stc
add
mov
cmpsb
mov
in
lea
pop
push
sub
pop
pop
push
not
ror
rol
dec
pop
pop
push
shr
pop
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
add
lods
sti
add
jecxz
ret
add
pop
sti
loop
test
rolb
add
add
add
outsl
lcall
loopne
jno
push
test
rcrl
jns
ja
add
push
add
stc
subb
pop
in
jns
int3
mov
lcall
push
not
pop
ret
push
add
pop
mov
push
pop
pop
push
inc
sub
ror
pop
pop
push
push
push
lea
push
push
push
call
add
add
add
xlat
add
lds
iret
mov
mov
nop
imul
mov
add
jne
loopne
mov
scas
add
gs
jp
int3
fcomps
in
add
add
fs
addb
stos
add
push
dec
pop
pop
leave
push
push
call
mul
add
addr16
fwait
incb
add
in
add
pop
pop
add
add
outsl
mov
ret
jbe
cltd
add
add
call
add
outsl
mov
jp
sbbl
roll
add
jmp
add
xchg
leave
imul
rclb
add
mov
in
clc
pop
ret
cmp
mov
inc
lret
cmp
into
mov
ror
mov
mov
lret
add
mov
xchg
lret
or
cmp
mov
add
add
inc
push
and
repz
mov
sub
into
mov
ljmp
adc
sbb
mov
neg
out
sbb
jno
add
inc
sti
test
int
movsl
int
xor
pop
xchg
insl
fstpl
icebp
mov
adcl
or
out
incl
xor
repz
xchg
gs
push
cmp
insb
sub
shr
jp
aaa
push
rcrb
pop
jne
lahf
outsl
ud1
xor
fidivl
cli
adc
loopne
jbe
jmp
xchg
fcomi
sub
sub
xor
mov
jmp
lea
mov
jbe
repnz
mov
sbb
and
mov
jae
mov
in
pop
andl
push
lods
fmuls
dec
add
aas
and
pop
mov
fbstp
sbb
push
cmp
mov
fidivrs
mov
mov
outsb
mov
insb
insl
and
jo
repnz
sbb
lods
scas
push
das
arpl
jnp
dec
sbb
int
out
cwtl
int3
in
fistpl
aad
fcmovne
cmpsl
add
mov
mov
inc
jmp
cmc
push
jnp
mov
aam
dec
add
or
inc
loopne
mov
movsl
in
jle
mov
pop
inc
lods
repz
push
dec
js
pop
mov
loopne
daa
arpl
sbb
int
sti
paddusb
fdivl
mov
addl
and
dec
dec
inc
xchg
sti
mulb
pop
xor
push
loope
and
xchg
ja
pop
fs
mov
sub
mov
ljmp
add
push
or
inc
sti
fisubrl
push
stos
in
jle
xor
sbb
pop
ss
arpl
pop
or
lret
add
push
mov
sbb
or
adc
nop
stos
in
inc
fildll
enter
xor
out
mov
out
les
and
add
jnp
pop
mov
loopne
mov
mov
outsl
mov
andb
mov
xchg
xor
push
dec
lods
mov
add
mov
fldl
shl
adc
or
and
mov
test
mull
cmpsl
push
divb
scas
and
cld
lea
pop
out
jnp
mov
outsb
in
cld
xchg
xchg
adc
icebp
inc
and
mov
std
xlat
or
mov
jno
push
mov
mov
sub
rcrb
popa
pusha
sub
imul
stos
sbb
sbb
mov
xchg
fwait
mov
dec
punpckhwd
xchg
js
out
insb
pop
push
mov
push
sbb
xchg
xchg
jge
jle
adc
lret
test
ds
mov
mov
rcrb
stc
or
pmulhw
push
roll
shlb
dec
jle
je
mov
sarl
adc
test
push
mov
push
leave
in
adc
add
adc
pop
ret
dec
mov
push
pop
sub
test
sbb
jne
or
gs
mov
lret
and
cmp
popf
mov
daa
scas
push
dec
sbb
les
out
cs
shr
shrl
xchg
jnp
sbb
in
sub
and
hlt
sub
xor
rorl
add
aad
add
fdivs
lahf
mov
cmp
cmpsl
mov
cli
sarl
fwait
xchg
sahf
mov
jae
push
or
xorb
xchg
adc
movd
dec
lods
mov
out
out
xchg
inc
pop
adc
xchg
xor
notl
insb
adc
fwait
xchg
mov
mov
mov
leave
jmp
fdivrp
test
adc
insl
std
adc
repz
push
push
and
lret
cmp
aaa
dec
add
pop
mov
inc
std
and
cld
mov
orl
loop
pusha
pop
sti
test
stos
xchg
mov
fcoms
test
dec
decl
test
pop
cmp
mov
mov
aaa
sbb
sub
test
sub
mov
mov
and
or
outsb
mov
pop
dec
xchg
out
or
aad
imul
or
fs
xor
adc
stos
outsl
shll
and
cmc
lcall
jnp
cmp
pop
push
repnz
addr16
or
in
rcll
fcoml
cmpsb
mov
jmp
hlt
je
stc
pop
sbb
mov
adc
insl
lret
jne
fistpl
in
adc
xchg
shrb
repz
arpl
sub
dec
pushf
bound
add
ret
and
xchg
xor
pop
ja
push
shlb
pushf
movsb
std
mov
loope
add
push
movsb
push
stos
and
test
pop
and
cli
adc
xor
test
mov
xchg
icebp
in
mov
sbb
xlat
fcomps
frstor
sahf
icebp
sub
mov
sub
sub
std
and
lock
cmpsb
hlt
hlt
fld
cltd
jmp
dec
xor
notb
mov
xchg
push
mov
mov
insl
iret
lcall
je
rorl
rcll
lea
out
sahf
sub
scas
arpl
push
and
movsb
dec
push
xchg
je
pop
scas
aas
sti
inc
xchg
jp
sti
jb
or
cmpb
gs
movsb
leave
sub
sub
clc
orl
and
pop
rolb
pop
test
orl
stos
push
filds
cli
in
pop
enter
pushf
clc
scas
cmpb
xchg
rcrl
pop
inc
add
repz
sub
push
cld
outsb
call
pop
dec
lret
push
ljmp
ret
xchg
mov
sbb
push
lcall
ss
or
mov
add
out
pop
cmp
pop
cmp
addr16
dec
and
ljmp
adc
add
or
cmc
scas
sbb
lahf
arpl
scas
sbb
mov
adc
in
je
add
push
enter
dec
and
xchg
movsb
sub
or
ret
shll
cmp
jns
aam
push
cmc
movsb
fadds
xchg
pop
dec
out
dec
dec
shlb
aas
sub
mov
gs
test
adc
mov
lcall
aas
movsb
sub
imul
push
pop
push
out
es
insl
sub
sbb
enter
sub
test
fildl
xor
fs
pop
popa
and
mov
pcmpeqw
inc
xchg
mov
repnz
js
std
xchg
aam
and
scas
loopne
js
test
stos
sbb
dec
adc
inc
movsb
imul
daa
push
pop
mov
inc
add
in
dec
push
sbb
sbb
jbe
sbb
sbb
inc
repnz
aad
das
xor
add
xchg
cwtl
lods
bnd
out
in
dec
dec
cwtl
testl
cmpb
rorb
sbb
mov
inc
or
mov
jne
sbbl
mov
sahf
pop
rclb
mov
out
xor
cmp
out
sti
mov
mov
repz
mov
dec
mov
xor
pop
jl
and
dec
xchg
or
add
mov
pop
cmp
add
loopne
jle
hlt
sbb
pop
sbb
cli
lahf
aas
scas
inc
lea
outsl
mov
or
dec
cmpsl
lock
in
xlat
test
aam
rcrl
aaa
addr16
mov
cmp
xor
dec
icebp
jae
mov
cmc
in
aam
add
and
cmpb
aam
or
in
dec
shl
mov
pop
cli
loopne
inc
cmp
push
fcomip
in
mov
adc
bound
ja
push
fdivr
mov
stos
mov
add
pop
mov
test
mov
bound
pop
nop
mov
mov
into
test
mov
cwtl
mov
or
lods
fwait
mov
xchg
enter
xchg
out
push
aaa
jnp
data16
outsb
pop
or
cmp
adc
jmp
rcl
pop
sbb
sub
dec
out
out
cli
lods
rcll
xchg
loope
daa
push
pop
xchg
call
ficomps
adc
ja
ljmp
mov
imul
jne
or
mov
inc
add
xchg
das
jnp
leave
decl
int
sbbb
jns
lret
cmpsb
jge
dec
pop
xchg
jl
pop
mov
cmc
sub
ret
fwait
inc
lret
sbb
lahf
dec
push
jg
in
leave
enter
xchg
andl
sti
xor
pushf
test
xchg
iret
adc
and
insl
dec
add
sarb
pop
out
addl
pop
idivl
iret
popa
xor
and
jmp
sbb
jbe
jno
insl
or
and
jl
push
or
xor
mov
loop
addr16
jo
xchg
fcmovbe
and
add
push
push
lret
cmp
push
cld
mov
pop
shl
fwait
clc
enter
mov
cs
xchg
jb
subl
cmp
add
loope
cli
add
jle,pn
out
fimull
imul
jns
pop
mov
push
mov
and
cs
and
inc
sub
out
jle
psrlw
push
sub
call
cmp
sub
mov
popf
mov
repnz
sbb
popf
push
push
or
mov
ljmp
in
and
sbb
sub
ds
out
add
push
test
cmp
cmp
sbb
mov
inc
ja
and
scas
mov
xchg
jmp
push
sbb
jg
test
xor
js
out
mov
test
dec
mov
xchg
imul
add
ds
cmp
jmp
jecxz
mov
jne
xchg
dec
fdiv
push
lods
sbb
inc
mov
jle
adc
int
loope
adc
xchg
jmp
mov
es
mov
inc
call
mov
inc
testb
lret
mov
pop
outsb
insl
outsl
push
push
jns
mov
lds
cltd
cmpsb
js
add
mov
fcomi
dec
or
inc
cmp
loope
daa
xchg
inc
push
push
fcompl
out
lods
fldl
loopne
addr16
repz
mov
adc
loopne
inc
push
out
inc
pop
arpl
sbb
ret
and
mov
cmp
sysexit
adc
das
mov
mov
fwait
cmp
nop
mov
or
sbb
jo
inc
jb
xor
idivl
jo
mull
mov
out
sbb
xor
mov
fldcw
das
mov
xor
sbb
int
call
inc
aaa
ret
xchg
jb
push
inc
in
xor
mov
mov
in
lcall
ljmp
inc
mov
out
push
pop
in
cmp
sbb
ret
xor
jno
jecxz
outsl
fs
and
dec
xorb
test
imul
mov
inc
xchg
xchg
imul
fs
xlat
push
out
push
ds
mov
pop
dec
dec
lods
adc
les
orb
outsl
movsb
in
scas
out
sub
in
call
lods
pop
hlt
test
xchg
xor
addl
pop
jge
mov
in
push
push
in
imul
int
data16
jmp
sub
in
orl
mov
hlt
mov
inc
mov
mov
push
cwtl
jle
mov
mov
add
sbb
and
es
lcall
push
and
int3
or
addr16
dec
subl
ret
sub
inc
lahf
dec
fcomps
nop
push
xor
std
pop
mov
enter
cld
mov
bound
cmpsb
add
int3
scas
js
xchg
sbb
push
push
xchg
sbb
mov
jae
mov
insl
xchg
adc
push
pop
jo
icebp
es
mov
adc
inc
adc
testb
pop
iret
outsl
std
fs
add
loopne
inc
idivb
loope
jno
mov
outsb
das
add
mov
mov
inc
mov
mov
arpl
sbb
ds
lret
pop
pmullw
stc
fstpt
push
shlb
lcall
xchg
push
pop
test
xchg
and
rcrb
or
mov
sbb
daa
imul
movsl
loopne
pop
imul
or
dec
js
shll
inc
icebp
and
clc
mov
mov
lods
cmpsl
repz
in
stc
test
pop
cltd
mov
popa
scas
pop
loop
add
mov
mov
or
add
stos
push
cmp
call
es
pop
jmp
iret
adc
popa
pop
lea
sbb
stos
sti
cmpsb
inc
aad
or
sarl
lods
dec
pop
adc
rcl
jno
bound
pop
xchg
in
cmpsb
dec
fbld
mov
lahf
inc
jno
lret
or
push
push
xchg
dec
jmp
test
dec
shll
or
test
mov
popf
sub
push
fsubrl
int3
icebp
and
sub
imul
xchg
mov
dec
stc
mov
add
mov
imul
gs
mov
movsl
inc
fs
cmp
movsb
jge
mov
mov
adc
fcmovnbe
rorl
ss
cmpsb
mov
xor
out
in
add
push
ds
lods
sbb
dec
jecxz
inc
mov
popa
mov
fdivl
frstor
xchg
xchg
int
in
push
push
nop
mov
scas
push
int
dec
lret
jb
pop
lcall
nop
cmp
push
std
cmpb
pop
jge
cld
dec
add
lea
and
arpl
insl
outsb
jae
push
sub
mov
jb
stc
cltd
pop
movsl
fisubl
in
fists
cmp
outsl
sbb
subl
lahf
ror
jbe
dec
inc
cmp
rolb
lahf
cld
mov
out
cmp
mov
lods
test
mov
push
jb
ja,pt
push
icebp
cmp
or
fistps
imul
sbb
leave
cmp
adc
xor
jb
push
sahf
scas
das
or
pusha
adc
jb
add
push
xchg
sub
cli
fistps
add
stos
dec
fisttpll
seta
dec
mov
push
in
or
mov
enter
push
idivb
sahf
sbb
inc
in
in
aam
scas
mov
sub
adc
aaa
inc
int
sub
xor
jnp
lds
clc
mov
push
pop
sbb
fnstenv
mov
jns
mov
xchg
out
ss
pop
js
sbb
jns
or
sbb
int3
jg
mov
test
rcr
std
sbb
sarb
mov
adc
cmpsl
sub
lcall
mov
mov
push
hlt
pushf
mov
sub
aad
movsb
pop
and
and
jmp
sbb
je
sbb
sbb
fiadds
sub
dec
mov
lock
mov
mov
bound
mov
push
daa
loopne
sbbb
pop
es
mov
cmp
jmp
je
inc
cli
push
mov
jno
rcll
aas
mov
ds
cld
sbb
lahf
mov
dec
pusha
nop
pextrw
aas
lods
and
cs
push
lret
inc
push
mov
or
sbb
xchg
adc
push
clc
rol
or
xor
push
dec
pop
pusha
lods
popf
mov
stos
bound
jle
icebp
mov
mov
out
icebp
repnz
fisubs
daa
jo
mov
ret
jb
push
out
ja,pn
pushf
repnz
sbb
std
push
or
cmp
fists
das
sbb
mov
mov
push
sti
xor
xor
xchg
inc
add
test
sub
jp
scas
test
in
or
pop
xor
sti
aas
mov
adc
xor
jae
loope
cmp
xlat
test
iret
jbe
out
dec
popf
sbb
xor
mov
or
cmp
adc
xor
add
cwtl
mov
or
inc
add
sbb
out
insb
idivl
jmp
fcompl
or
in
std
ret
dec
mov
repnz
dec
cmc
mov
pop
cwtl
lock
stos
jns
jecxz
add
push
push
cld
scas
push
pushf
add
mov
xchg
pop
repnz
sub
push
mov
jne
insl
data16
or
push
sbb
aam
push
dec
sbb
ds
dec
bound
inc
gs
push
adc
stos
pop
mov
int3
aas
pop
fldl
in
ror
nop
aas
dec
lods
push
into
mov
push
mov
dec
add
jno
in
movsl
pop
or
inc
scas
lret
mov
pusha
lock
or
mov
sbbw
aaa
nop
sub
icebp
fsubr
pop
or
mov
mov
sti
sbb
cli
xchg
adc
push
adc
cwtd
clc
mov
mov
xor
imul
mov
dec
leave
cmc
adc
xor
pop
cmp
cmc
movsl
dec
adc
call
mov
mov
xor
cmp
test
or
call
sbb
ret
loopne
mov
or
or
mov
lods
jae
push
cmc
push
pop
jne
cmp
test
out
pop
dec
in
cmp
in
fmull
jb
pushf
push
adc
rcrb
sub
push
and
mov
cmp
stos
fists
loop
arpl
sbb
ja
sti
lea
pop
fcomp
push
insb
push
pop
push
popf
and
cli
arpl
pop
inc
stos
xchg
rcrb
std
inc
or
xchg
inc
sub
je
xchg
and
dec
push
inc
es
cltd
mov
aad
lcall
fmul
dec
adc
mov
adc
or
sub
mov
cmp
add
push
jp
jns
fstpl
xchg
add
and
aas
mov
sbb
je
cwtl
mov
mov
xor
pop
add
std
jno
dec
mov
stos
adc
push
ret
int
pop
add
jg
sbb
mov
cmpsb
and
arpl
aaa
cmp
xchg
and
mov
jae
mov
out
stc
dec
test
dec
std
mov
mov
pop
test
sub
xchg
outsb
add
inc
push
xchg
jle
adc
adc
sbb
mov
adc
stos
lods
movsb
xor
mov
adc
fmul
jmp
sub
jo
lret
inc
jb
nop
mov
inc
xchg
mov
mov
fistpll
xchg
in
adc
and
jp
aaa
repz
mov
and
in
notl
outsl
lret
leave
insl
mov
cmp
xlat
push
or
cmp
and
aaa
pop
add
dec
icebp
inc
inc
lret
call
dec
out
mov
dec
cmpsl
pusha
xor
mov
sti
sub
fsubrl
sbb
hlt
cmpsb
lcall
mov
outsl
cli
stc
pop
enter
fsubr
stos
push
stc
leave
aaa
xor
imul
mov
mov
shrb
mov
mov
push
or
in
stos
roll
sbbl
sub
mov
push
pop
ljmp
das
enter
into
and
mov
mov
dec
stos
adcb
mov
pusha
enter
adc
addb
pop
add
jmp
lods
pop
sub
push
mov
pop
xor
data16
or
mov
out
and
push
test
nop
and
jg
mov
inc
xor
mov
dec
imul
pop
jmp
dec
sbb
pop
daa
lock
outsl
sbb
jp
lahf
sub
test
jbe
lret
in
pop
arpl
mov
xchg
js
cmp
adcb
or
sub
into
push
inc
jns
xlat
and
adc
add
xor
rclb
xor
je
and
adc
pop
push
fyl2xp1
lret
cmp
sub
pop
fcoms
jmp
mov
sub
lret
xchg
pop
lods
and
inc
cmp
lds
pop
sbbl
ret
push
cmp
aad
adc
xlat
aas
push
pop
cmpsl
pop
add
sbb
fisttpl
pop
jns,pn
movsl
xchg
es
inc
mov
xlat
aad
pop
movsl
xchg
dec
sbb
jecxz
popa
das
imul
inc
or
xor
mov
mov
xor
mov
mov
mov
inc
cli
and
pop
or
pop
or
or
xchg
pop
icebp
sti
in
push
xor
insb
pop
jg
popa
cltd
pop
ret
stos
mov
adc
cli
ret
cwtl
cmp
in
dec
movsl
jl
repz
adc
cmp
imul
mov
xchg
jg
test
mov
lods
testb
pop
aad
je
pop
push
push
xor
in
inc
push
mov
fcomip
or
pop
movsl
mov
arpl
test
test
xor
ret
daa
gs
clc
jecxz
jecxz
scas
xchg
sbb
push
push
ss
loope
cld
dec
outsl
clc
adcb
or
sub
mov
adc
mov
mov
gs
enter
sbb
sub
xchg
inc
mov
bswap
lods
ljmp
add
sub
sbb
aad
fwait
push
mov
cmc
les
fnstenv
inc
sub
lock
adc
lahf
jl
jle
jae
mov
lods
lock
ljmp
ds
daa
mov
adc
inc
jle
jmp
in
mov
cli
xchg
out
jne
sub
dec
dec
dec
mov
and
xor
test
pop
dec
ja
add
dec
fisttpl
fistpl
push
adc
sbb
jmp
iret
dec
mov
or
xlat
xor
stos
xor
inc
lahf
xchg
test
insb
cmp
shlb
popf
dec
mov
mov
out
fs
jbe
and
data16
or
repz
dec
aas
pop
dec
in
inc
or
orb
ss
lds
call
lods
sub
mov
int
add
mov
jbe
fimull
jnp
mov
mov
add
dec
inc
orb
dec
add
mov
movsb
movsl
in
fists
xor
int
stos
adc
fldenv
lods
leave
addr16
lods
or
loop
push
jbe
gs
int
testl
outsb
or
pop
cmpsl
scas
inc
push
xchg
and
clc
fisubl
ja
push
lock
js
xchg
fwait
ret
inc
lock
pop
inc
dec
les
pop
mov
xchg
stc
jecxz
lahf
mov
popa
mov
dec
dec
add
inc
fists
sbb
or
in
aas
cmp
xchg
int
jo
cmc
fimull
popa
inc
sbb
rcrl
xchg
pop
pop
inc
scas
inc
ficoms
and
aaa
and
lcall
xchg
mov
icebp
je
fmuls
pop
dec
push
movsl
mov
jnp
jnp
xchg
or
cs
ljmp
sbb
add
xor
mov
sbb
xlat
cwtl
test
mov
es
or
and
jle
dec
mov
pop
inc
dec
stos
rcl
sub
add
in
mov
dec
movsl
out
fwait
xor
pop
jmp
push
and
adc
int3
ja
and
insl
nop
jl
adc
mov
sub
add
lret
dec
daa
push
stos
fbstp
and
cmp
xor
cltd
pop
pushf
inc
jo
mov
xor
add
pop
and
mov
test
out
add
pop
xchg
fwait
out
xchg
mov
loopne
stos
push
cmpsl
adc
jecxz
cs
lods
cltd
xor
sub
in
xchg
notb
les
test
daa
test
les
pop
xchg
shlb
and
pop
in
scas
xor
sbb
sub
clc
push
xor
lods
push
movsb
add
xchg
xchg
out
lock
fcomps
mov
pop
popa
push
adc
lcall
sub
ja
mov
repnz
je
out
les
or
and
xchg
aad
mov
inc
sub
fs
enter
dec
inc
push
addr16
scas
cmp
das
xchg
xor
movsb
lret
sbb
out
xchg
sbb
aas
data16
push
fnsave
adc
jg
mov
jo
pop
inc
pusha
mov
cli
push
add
dec
and
scas
pop
mov
rorl
mov
call
or
jb
bound
daa
and
fdiv
fst
inc
rep
cmc
imull
ja
dec
jo
push
fwait
dec
sub
jge
test
ja
adc
lods
test
out
cwtl
daa
mov
testl
add
aas
pop
xor
popa
out
or
outsl
and
movsl
inc
aam
mov
mov
inc
fs
or
pop
mov
xor
outsb
rcrl
pop
dec
or
fidivl
popa
stos
popa
ret
lea
xchg
push
push
fs
xchg
xchg
es
lods
xlat
sub
int3
xor
pop
push
mov
imul
loope
pop
out
sub
add
mov
sbb
testb
adc
in
or
addr16
pushf
add
js
ljmp
aad
adc
dec
xchg
lcall
movsl
jge
in
or
daa
sub
data16
add
fsub
incl
clc
outsl
inc
xchg
fcmove
xchg
push
adc
pop
leave
push
sbb
add
repnz
mov
add
adcb
adc
or
and
ja
out
pop
hlt
decl
pop
or
push
and
add
inc
sbb
insl
push
pop
mov
mov
inc
xchg
xor
and
mov
cli
in
imul
push
or
aam
dec
mov
outsl
cltd
mov
jg
rcl
push
xchg
mov
mov
lock
fstpl
in
test
loope
push
cmp
xchg
frstor
std
push
out
jno
enter
lds
dec
and
movsl
or
jnp
ds
test
cmpl
and
add
in
ss
mov
add
dec
scas
xchg
lock
cmp
sbb
xchg
mov
and
mov
pop
adc
xor
sub
inc
cwtl
xor
xor
ljmp
sbb
fstpt
push
mov
out
inc
jecxz
mov
stc
adc
jge
pop
dec
xchg
loope
xchg
insb
pop
popa
inc
jecxz
outsl
mov
pusha
les
inc
dec
adc
stos
cmp
js
mov
xor
xchg
fisttpl
stos
insl
enter
das
inc
adc
and
popa
outsl
jmp
xchg
jne
xchg
dec
idivl
inc
pusha
mov
lret
push
add
aam
ljmp
dec
popf
nop
mov
iret
push
push
fwait
into
jg
ds
stos
test
in
mov
dec
inc
out
lock
dec
jp
xor
xlat
jle
jnp
or
mov
adc
xor
outsl
call
sub
sub
adc
ret
inc
addb
pop
add
mov
repnz
jmp
mov
mov
xchg
jb
and
into
movsb
ljmp
hlt
jnp
es
mov
sub
outsl
lahf
imul
lods
mov
push
test
dec
fdivrs
inc
jbe
in
push
or
cmp
pop
xor
sub
popl
out
push
add
xor
fnstsw
mov
bound
mov
lods
push
popf
sbb
mov
add
fcomps
pushf
and
fstps
xor
dec
ja
mov
lcall
lret
add
mov
add
and
sub
out
fmulp
xor
std
fidivs
mov
jnp
leave
adc
mov
inc
sub
es
shrb
popf
mov
mov
lcall
js
adc
push
aaa
lods
or
pop
push
int3
lahf
loop
mov
mov
add
push
cmpsb
pop
ret
dec
adc
inc
es
inc
mov
sti
arpl
xchg
imul
fistps
sbb
cmp
ficoml
mov
ss
adc
repnz
jecxz
loope
pop
mov
xor
dec
addr16
add
inc
popa
ss
xchg
js
pusha
bound
or
sti
aas
out
lods
pop
pop
push
in
addr16
pop
stos
stos
out
repnz
cmp
add
dec
in
mov
and
sbb
addb
inc
les
test
cltd
mov
mov
in
push
repnz
divb
lret
mov
mov
decl
mov
push
xchg
add
adc
sar
sub
test
pop
and
push
sub
jno
adc
repnz
push
es
sub
int
leave
fstp
cli
xlat
arpl
mov
xor
repnz
mov
cmp
bswap
dec
jno
repnz
pop
cli
inc
aad
mov
xchg
push
fcom
adc
loopnew
lods
mov
and
insb
jno
ss
sub
add
cmp
addr16
popf
sub
notb
pmaxub
test
rorb
dec
hlt
stc
push
insb
push
incl
push
xor
fstpt
daa
mov
inc
aam
and
int
fisttpll
cmp
cs
sub
or
mov
jbe
cmp
or
inc
les
fwait
or
sarb
pop
lahf
or
sbb
das
shrl
ficoms
xchg
dec
push
sub
mov
adc
cmp
into
xor
int3
sti
pop
mov
mov
loopne
or
push
cwtl
add
pop
lret
add
xchg
nop
leave
mov
pop
inc
xchg
scas
ret
mov
mov
mov
dec
push
adc
jne
sbb
pop
xor
out
or
dec
adc
out
repz
dec
pop
sbb
jp
or
imul
addb
ss
jb
stc
cmp
push
lea
mov
and
mov
jb
jmp
aam
xchg
mov
pop
aas
stos
inc
mov
in
push
mov
popf
add
adc
ja
push
xchg
ljmp
shll
outsl
push
fcomps
into
into
pushf
pop
pop
mov
stc
and
outsb
test
pushf
adc
pop
js
pushf
roll
lret
adc
mov
sarl
cmp
push
test
sbb
fwait
clc
in
jge
jmp
dec
add
dec
mov
sar
xchg
dec
xor
and
fisttps
cmp
lahf
rcr
push
insl
loope
fstps
repz
loop
dec
repz
and
outsb
clc
mov
gs
push
and
push
test
xchg
cltd
xor
xchg
push
mov
scas
sbb
stos
out
mov
subb
mov
int3
cmp
jmp
rolb
and
int
jo
inc
or
in
mov
mov
sbb
mov
or
mov
test
repnz
outsl
fistpl
cmc
mov
out
movsb
mov
sub
push
push
out
stos
dec
fistps
xchg
fs
mov
enter
pop
ss
cld
inc
mov
lock
mov
jmp
sbb
lcall
cs
pusha
adc
movsb
push
xor
cmpsl
dec
or
lret
mov
jp
mov
xchg
push
out
lea
iret
pop
mov
loop
mov
jno
lret
ret
ret
mov
std
addr16
call
mov
push
aad
mull
or
sbb
sbb
add
insl
mov
xor
sbb
sbb
xor
cmpsl
adc
cmpsl
inc
or
std
sbb
jbe
jecxz
pop
gs
inc
nop
in
fbstp
mov
mov
pop
dec
daa
dec
sbb
rol
cld
jl
imul
add
mov
arpl
adc
mov
jne
aam
dec
jle
cmpl
orl
pushf
fmull
outsl
test
test
push
cmpsb
rcrb
faddl
out
push
popf
cmp
lea
rorl
sbb
dec
fists
jb
add
xor
out
aas
mov
repz
sub
push
lahf
push
dec
movsl
dec
es
jno
repnz
lock
xchg
jbe
cltd
add
sbb
andl
pusha
adc
mov
lds
rcll
ret
popa
mov
dec
jbe
dec
sbb
sbb
xor
mov
out
cmc
pop
arpl
sbb
es
jb
popf
xor
and
xor
addl
sti
ffreep
fwait
in
push
andl
arpl
mov
fbld
add
fnstenv
push
mov
lock
xor
sbb
les
ljmp
js
testb
cmp
sbb
mov
mov
js
push
or
cli
mov
push
pushf
pop
lcall
cmc
jmp
sub
and
arpl
xor
in
lea
popa
add
aas
sbb
mov
jae
bnd
mov
repnz
aam
dec
sti
test
rolb
add
rorb
jecxz
pop
adc
cld
and
add
push
lods
cld
inc
test
jle
cmpsb
lret
cltd
xor
jbe
mov
scas
mov
dec
in
jmp
jmpw
cltd
sbb
popf
mov
push
sahf
push
hlt
pop
insw
clc
aaa
rorl
mov
pop
fidivrs
cltd
push
pop
jge
or
push
shlb
cmp
ljmp
ss
push
adc
add
pop
ds
push
xchg
xor
rolb
pusha
iret
or
cmc
adc
fdivp
leave
testb
cmc
cmp
cmp
dec
fcomps
dec
mov
or
mov
pop
and
add
imul
fnstcw
adc
xor
mov
and
jp
ds
mov
or
ss
mov
shl
mov
out
scas
mov
sbb
mov
add
push
lds
popa
push
fidivrl
inc
jge
idivb
push
or
sti
mov
aad
adc
sub
xchg
jle
scas
sti
mov
clc
pop
dec
xchg
mov
or
jbe
in
push
hlt
jmp
xchg
push
pop
push
loop
cmp
jg
imul
cltd
out
and
in
add
enter
sbb
mov
imul
int3
mov
and
push
daa
mov
jl
mov
icebp
mov
push
cmp
sti
bnd
pop
jae
loope
adc
neg
aad
popa
push
lret
jle
cmp
push
jnp
mov
add
jns
in
xchg
pop
jl
or
sbb
add
or
inc
fldl
or
daa
fbstp
jecxz
das
mov
fxch
scas
lds
mov
or
mov
mov
xchg
outsl
pop
add
push
scas
lock
inc
jne
mov
inc
adc
xchg
xchg
hlt
aam
js
lret
fists
outsl
loope
mov
adc
xchg
push
cmp
lcall
add
push
in
dec
and
mov
add
inc
sub
pop
jmp
into
dec
sbb
faddl
sub
sub
aaa
push
jo
sbb
ret
sbb
outsb
mov
aas
jae
mov
jnp
scas
ds
sub
inc
mov
nop
hlt
inc
pop
loop
and
pop
jp
icebp
rcll
adc
mov
repz
mov
lret
test
jae
sbb
xor
mov
xor
pusha
dec
inc
push
icebp
popa
jne
inc
shl
clc
jge
sbb
popa
pop
dec
rcrl
dec
in
nop
cmp
or
loopne
scas
dec
mov
or
in
or
test
mov
mov
enter
or
jns
pop
out
or
mov
fstps
test
or
bound
out
imul
xchg
fs
imul
shlb
dec
add
icebp
mov
xor
sub
and
int3
mov
inc
sbbb
pop
push
lds
mov
pop
mov
dec
andb
daa
dec
lea
push
call
mov
movsl
mov
das
repz
push
sbb
out
aas
aaa
cmp
jbe
add
pop
inc
repz
out
dec
scas
push
shlb
aad
cmp
leave
adc
dec
pop
pop
pop
in
es
rclb
sub
mov
mov
dec
inc
or
loopne
or
xchg
imul
movsb
pop
int
push
inc
or
xchg
loope
inc
xchg
mov
adc
sbb
popa
and
stos
stos
lret
dec
push
repz
js
mov
test
xchg
pop
jno
daa
andl
enter
xor
in
gs
mov
pop
scas
fisubrl
outsb
das
xchg
or
test
dec
jo
sbb
add
outsb
movsb
into
out
sbb
adc
outsl
mov
sbb
adc
dec
sbb
adc
movsb
jae
pop
add
call
and
stos
xor
pop
and
scas
add
lret
and
imul
nop
mov
std
jo
mov
pop
fwait
add
aam
lahf
lahf
cli
inc
adc
stc
push
int3
inc
sub
lgs
ss
xchg
or
sub
push
jle
mov
aas
dec
and
repz
xchg
xchg
mov
popf
in
lret
jl
cmp
mov
arpl
aam
mov
pop
cld
cmc
mov
fimull
sahf
loopne
mov
jno
jle
mov
loop
adc
pop
mov
inc
jo
test
ds
into
pop
jmp
xchg
lods
adc
mov
insb
push
testl
lret
pop
sub
jns
push
out
lods
jg
sbb
jmp
add
fstpl
repnz
sub
sub
sbb
je
dec
imul
and
aaa
dec
std
dec
mov
ss
inc
xchg
cmpsb
lods
sarl
add
push
outsl
push
adc
sbb
xor
popf
test
mov
addr16
imul
rcl
fistps
into
iret
aad
jo
fmuls
mov
pop
fcoms
subl
stc
adc
shlb
lds
jecxz
push
outsb
lahf
ds
sbb
jno
or
icebp
out
cmp
cmp
test
mov
lock
loop
jo
push
imul
hlt
and
enter
jg
inc
dec
push
dec
fidivrl
mov
jae
je
push
cmp
in
popf
pop
or
int3
lods
arpl
mov
jecxz
pop
daa
sbbb
sahf
push
jnp
subb
aaa
mov
push
dec
cmp
mov
xlat
mov
jl
insb
int3
outsl
mov
shrb
in
call
cmp
vmwrite
scas
cltd
outsl
scas
jp
adc
cmpsb
icebp
or
mov
test
dec
andb
and
shrb
jge
push
lock
ja
xchg
pushf
pusha
test
mov
into
cmp
fmull
out
mov
rcrl
jl
cmp
ljmp
pop
dec
push
imull
in
outsb
mov
push
das
clc
pushf
stos
mov
push
lahf
push
mov
daa
push
xor
scas
sub
fmulp
arpl
jbe
push
pop
xchg
in
fwait
sti
mov
or
outsb
mov
mov
mov
icebp
push
dec
jne
mov
inc
out
inc
jno
loope
out
nop
xor
or
jmp
jne
cltd
jecxz
push
adc
mov
sbb
sar
fcmovnbe
inc
das
add
jns
jbe
std
scas
xchg
and
sbb
loopne
mov
dec
pop
mov
out
adc
or
ret
add
fxch
mov
adcl
out
imul
xor
popf
gs
mov
outsb
es
cmp
jae
mov
mov
adc
inc
sub
pop
lahf
ret
mov
loope
stc
dec
ljmp
mov
push
clc
xor
pop
fdiv
push
and
mov
test
mov
xor
test
xlat
leave
fisubl
lret
lahf
adc
push
cwtl
mov
xchg
mov
clc
in
push
popa
xlat
mov
xchg
inc
leave
push
push
mov
cmp
sarb
or
dec
inc
cmp
mov
fcoml
jne
adc
mov
jg
out
sbb
shl
and
ljmp
pop
xchg
jmp
test
stos
les
and
mov
ds
push
xchg
ss
sbb
lcall
insb
fidivl
push
dec
shlb
dec
dec
cmp
cmc
pop
jl
inc
ja
mov
fisubs
scas
pop
fs
cmp
loope
sbb
arpl
outsl
inc
push
popa
shlb
dec
push
les
xor
pop
push
or
push
push
into
fisttps
inc
fsubrs
fcomi
xchg
pop
mov
add
inc
in
lret
cmpsb
sbb
call
inc
pop
jno
mull
fcmovnbe
lret
subl
fldt
aad
leave
cld
ret
int
repz
cmpsl
gs
fwait
jl
jge
in
push
iret
push
xlat
addr16
loope
sbb
add
pop
loopne
dec
shll
add
mov
jb
push
adc
sbb
jns
out
nop
push
sbb
inc
lret
in
mov
hlt
fs
subb
decb
daa
test
imul
dec
sbb
stc
clc
dec
pop
push
addr16
dec
nop
xor
mov
lods
std
cwtl
adc
pop
xor
mov
lods
je
ret
sub
push
inc
adc
push
push
loop
aas
loop
pop
call
sbb
push
lds
lcall
in
xchg
adc
inc
js
in
dec
outsb
lods
and
push
rorl
imul
iret
repz
clc
pop
je
mov
shlb
shlb
pusha
push
mov
fildll
stos
cmp
jle
pop
or
and
lahf
mov
push
popf
fxam
dec
pop
inc
jae
rcll
add
push
pushf
lret
xor
pop
xor
jmp
cmc
or
sbb
adc
or
xchg
test
insl
sbb
in
inc
insb
mov
out
ja
xor
push
scas
das
pop
mov
test
mov
push
int3
shrl
sti
hlt
mov
sbb
fstpt
pop
mov
fwait
push
dec
or
shlb
loop
jno
in
push
mov
xchg
jns
sbb
aas
jae
xlat
clc
jne
and
stos
lea
mov
movsb
jge
adc
push
and
pop
inc
fimuls
mov
popa
xor
fsubl
mov
xlat
ljmp
lcall
daa
stc
dec
fsubrs
jnp
push
and
jo
outsb
rorl
pop
mov
out
std
jae
inc
je
jo
sub
call
movsb
imul
push
mov
adc
into
movsb
mov
push
xlat
enter
fninit
out
add
iret
xor
cwtl
dec
push
cmp
jle
stc
dec
outsl
and
addr16
aaa
push
cmp
xlat
adc
mov
fisttps
xor
xor
or
xchg
in
cltd
out
pop
clc
sub
jb
js
or
push
xchg
jmp
cld
movsb
repz
push
mov
test
test
and
cwtl
frstor
fxch
inc
jle
add
lds
popa
mov
test
sti
out
sbb
mov
cmp
imul
jecxz
faddl
sub
lahf
ror
xor
out
mov
subl
jne
or
dec
or
mov
inc
xlat
mov
iret
test
sahf
adc
std
fucomip
cld
nop
clc
outsl
jo
and
hlt
gs
cmp
int
inc
cmp
cmpsb
jge
loop
roll
xchg
push
enter
jmp
aam
les
loope
sub
jecxz
dec
shlb
hlt
test
pop
cld
shl
mov
fs
pop
in
pop
jo
xchg
mov
mov
adc
stos
or
and
insb
pop
lea
xchg
inc
mulb
or
scas
dec
push
in
xchg
and
sahf
mov
ret
add
push
push
add
lods
leave
pop
shl
push
xchg
dec
sub
push
pop
xor
fisubl
dec
out
push
shll
js
push
ljmp
int3
aam
stos
mov
inc
mov
mov
orl
sbb
inc
mov
sbb
inc
movsl
mov
cwtl
test
lock
jbe
xor
shll
jmp
inc
mov
in
push
mov
lock
xchg
test
dec
xchg
lds
je
push
lahf
adc
notb
bswap
cmp
mov
aam
aaa
retw
and
orl
push
cmpsl
pop
mov
ljmp
in
jg
inc
rcrl
add
mov
push
xor
cltd
cmp
cmp
adcb
mov
ret
xchg
movsb
inc
ret
inc
out
pop
push
mov
add
xlat
mov
outsb
mov
les
dec
sbb
out
sbb
fildll
xor
popf
popf
arpl
loop
cmp
testl
fcmovnbe
sbb
inc
xchg
out
pop
insl
pop
scas
sarb
adc
jle
popf
in
int3
adc
dec
loope
push
jg
pop
shll
iret
iret
scas
sahf
shl
cmc
jl
mov
in
shlb
test
xchg
shll
or
in
clc
testb
inc
movsb
lds
mov
pop
ss
das
test
dec
jmp
sbb
ljmp
jo
into
xor
xor
cmp
inc
sub
mov
xor
bnd
in
mov
xor
aas
filds
data16
adc
call
fadds
adc
sbb
test
add
std
imul
cmpsl
cs
add
fs
filds
fidivrl
test
sbb
xor
inc
loope
aas
xchg
sub
stc
push
mov
call
insb
mov
lcall
scas
decl
mov
loope
sub
jge
xor
jecxz
fimull
notl
add
xchg
test
or
or
inc
push
inc
push
in
cmp
mov
cmp
fldl
scas
das
popa
gs
mov
sbb
sti
pop
scas
ljmp
pop
cmp
ret
pop
sub
pop
xchg
sarb
fdivrp
push
push
aas
lret
cmp
cmpsl
push
jg
out
and
stos
pop
fchs
push
and
mov
pusha
out
out
leave
xchg
lcall
inc
repz
fcoms
mov
xor
push
add
push
lret
mov
jp
dec
lret
or
sub
sub
iret
aaa
sbb
jo
mov
push
fdivl
dec
lods
fnstenv
sti
xchg
loope
fs
ret
cmp
jle
out
jne
add
mov
cltd
xor
cmc
mov
popf
sti
lock
in
outsl
test
fidivrs
push
mov
leave
sub
dec
mov
andb
mov
or
pop
ret
and
push
dec
in
add
jl,pt
mov
add
gs
divb
or
mov
cmp
iret
cmc
pop
xchg
aad
hlt
in
jnp
sub
cmp
movlps
lahf
push
movsl
adc
cmp
jae
insl
and
and
jmp
push
mov
ror
in
jno
mov
inc
add
or
mov
cvtps2pi
das
mov
stos
lods
rol
inc
dec
lea
popl
add
scas
mov
movsl
int3
cmp
jae
sub
out
js
push
cld
jle
dec
dec
ss
std
and
das
scas
mov
inc
or
fstl
adc
sarl
xor
fnsave
push
out
push
mov
gs
xchg
jge
mov
jg
stos
dec
fcomps
adc
cs
and
mov
mov
pop
sub
xor
aaa
push
dec
sub
xchg
cltd
out
pop
adc
pop
es
cmc
lds
mov
lret
pop
jo
pop
lcall
dec
out
mov
lahf
cwtl
xchg
jecxz
mov
test
imul
sub
fprem1
sti
mov
mov
outsb
out
cld
xor
flds
sub
out
roll
lods
cmc
std
ror
test
vpavgb
inc
mov
add
push
pop
dec
scas
enter
or
dec
outsl
xchg
test
icebp
movsb
loop
enter
incl
xchg
add
sti
lret
inc
inc
insl
jne
test
test
nop
sub
and
test
xlat
int
orb
mov
insl
je
and
or
stos
adc
sub
inc
add
push
jp
and
sbb
push
ds
cld
push
xchg
sbb
sub
mov
aas
mov
int3
aaa
out
mov
or
sbb
dec
mul
mov
xor
add
into
dec
push
ret
push
es
into
mov
das
aas
xchg
jg
insb
mov
jnp
pusha
sbb
mov
cltd
fwait
aaa
fisubrl
sub
jns
in
pop
gs
mov
xchg
int3
movsb
scas
push
dec
stos
fwait
mov
xor
out
adc
fsubrp
js
push
fstps
cwtl
add
mov
xchg
stos
xchg
fdivrl
mov
cmp
mov
mov
ret
fwait
js
mov
mov
jnp
stc
jg
adc
icebp
rclb
mov
sbb
stos
js
imul
jno
out
daa
inc
mov
jmp
inc
pusha
ret
imul
das
out
adc
jno
xlat
push
xlat
adc
hlt
inc
aad
push
movsb
mov
negb
cli
mov
or
inc
dec
adc
mov
lret
xlat
xchg
and
in
mov
or
pusha
movsl
cmp
mov
xchg
iret
test
mov
addr16
nop
jns
push
sbb
fadds
mov
xor
or
sub
push
push
fildll
cmp
mov
movsb
das
ret
sbb
or
xor
add
gs
cmp
and
mov
enter
inc
push
pop
sub
xor
lea
mov
sbb
xchg
dec
add
fdivr
pop
andb
and
add
pop
mov
pop
xlat
sbb
int3
pop
mov
and
pop
stos
pop
iret
xchg
pop
arpl
cmp
shlb
call
dec
push
clc
sarl
jmp
adc
sub
loope
push
popa
xor
pop
xor
pop
repz
hlt
push
mov
ljmp
daa
pop
mov
jmp
test
nop
cmp
inc
push
xchg
sbb
adc
pop
sbb
aam
sub
sub
fistps
mov
or
sub
lods
adc
adc
pop
push
cmp
or
int3
mov
sahf
fs
popa
sbb
push
int3
notl
fisubl
insb
cltd
cli
cmp
out
pushf
sub
pop
int3
data16
mov
mov
cmpsb
jae
jmp
xchg
shll
in
insb
jnp
call
aam
xchg
adc
push
cmp
insl
xlat
out
cmp
adc
stos
or
in
and
jmp
nop
jae
mov
addb
and
lds
fisubrl
lret
push
mov
push
das
movsl
fmul
sbb
cli
pushl
mov
add
decl
mov
insl
mov
sub
out
addr16
or
nop
sub
insl
adc
jno
push
push
xchg
clc
lcall
jl
scas
inc
mov
jmp
stos
or
add
sysenter
stos
pop
fs
sti
xor
mov
in
xchg
lods
je
cmp
cmp
pop
lea
dec
and
bound
les
lock
pop
mov
pushf
cmpsl
mov
shr
movsb
xor
stc
mov
jo
in
lock
mov
inc
inc
xlat
pusha
xor
in
mov
mov
inc
fldt
out
push
xor
dec
xchg
push
jg
pop
stos
scas
mov
lods
push
rolb
push
inc
push
je
dec
xchg
add
xlat
mov
popa
mov
cmc
ss
cmpsl
cmp
sbb
cmpsb
xchg
pop
sbb
inc
dec
shl
cltd
inc
cmpb
outsl
jo
cli
pop
jnp
cs
scas
mov
popa
in
nop
dec
lock
sbbb
jns
ret
leave
outsb
mov
dec
out
int
push
jno
pop
and
icebp
sbb
dec
iret
mov
std
movsb
iret
jge
cmp
pop
leave
push
sub
sub
xlat
pushf
jne
outsb
and
push
xchg
mov
mov
sub
jbe
lds
mov
push
mov
movsl
cmpsl
jmp
imul
rcrl
lods
mov
jne
sbb
cmp
push
mov
lods
ljmp
xchg
xchg
cmp
cli
enter
xchg
movb
mov
popa
jae
add
jg
inc
mov
rcr
rorb
enter
mov
push
cmp
imul
pop
and
xchg
movsl
cmp
mov
dec
push
jl
int
mov
add
enter
lock
push
push
outsb
lds
xchg
test
jle
pop
inc
or
jmp
or
sub
outsb
cld
add
pop
mov
je
pop
daa
mov
pop
popa
js
lods
insb
mov
testl
or
mov
test
dec
div
iret
out
and
call
das
xchg
cli
jns
imul
rcl
jl
insl
ja
mov
fxam
in
mov
and
js
xchg
mov
sub
xchg
out
ljmp
sbb
into
cmpsb
outsl
imulb
inc
push
aad
in
mov
std
lock
dec
sub
sbbl
fnsave
out
add
data16
push
push
and
xchg
lds
xchg
jg
sub
jge
sahf
bound
test
xchg
cli
and
mov
dec
xchg
push
dec
xchg
or
ja
cld
mov
mov
cmp
cmpsb
test
out
xchg
dec
test
or
test
inc
mov
inc
cmp
aas
dec
aaa
mov
xor
in
ljmp
pop
xor
std
mov
fstl
out
roll
pop
enter
push
int3
cmp
xor
xchg
arpl
ds
dec
mov
outsl
and
js
orl
dec
enter
data16
inc
pusha
dec
mov
fisubs
shrl
stos
leave
mov
clc
sub
fcmovnb
xor
lods
test
mov
paddq
pushf
and
sbb
mov
into
jne
mov
sbb
cmp
nop
les
imulb
sub
fcmovu
mov
dec
mov
and
xor
push
or
cs
cld
push
int3
in
lods
push
jle
aas
aam
nop
insl
push
inc
movsl
sbb
lea
mov
or
lahf
je
stos
or
into
and
aam
stos
jge
cltd
or
mov
mov
fldt
negl
ss
mov
push
pusha
es
pop
xchg
mov
ja
pop
cmc
xor
es
arpl
sub
sbb
cmpb
enter
sub
out
add
mov
push
xchg
and
mov
xor
jg
mov
ljmp
lcall
in
jb
mov
xor
ss
mov
dec
ja
rcl
mov
adc
out
inc
js,pt
rol
jg
push
mov
data16
in
daa
sbb
cwtd
xor
jnp
rcl
test
mov
test
jp
cltd
popa
mov
and
stos
movsb
jp
pop
sub
data16
xor
push
imul
mov
leave
fsts
pop
in
ljmp
sbb
stos
pusha
xor
xor
leave
mov
sub
shlb
cmp
xchg
movsb
dec
xchg
lret
stc
movsl
stc
pop
test
mov
roll
cmp
movsl
pop
insb
gs
bound
add
aas
ret
lea
jns
pop
jecxz
fs
sbb
mov
nop
xchg
or
test
push
js
mov
inc
daa
repnz
add
jl
fcmovnu
or
xchg
dec
movsl
fnstenv
fsubs
insb
imul
or
push
sub
push
push
xchg
mov
inc
add
addr16
scas
cs
dec
inc
arpl
sub
popl
pop
add
fs
aad
out
xlat
xor
stos
dec
add
in
inc
popa
ret
push
subl
in
add
pop
sub
dec
out
adc
xor
xor
stos
push
cmp
mov
inc
dec
push
mov
cmp
inc
or
sbb
insb
gs
mov
outsb
lock
pop
sub
out
jp
adc
mov
adc
mov
mov
leave
lcall
pop
fdivp
dec
jnp
imul
cmpsl
cwtl
adc
lods
insl
xchg
cmp
iret
push
inc
fisubrl
adc
pop
and
push
cmp
outsb
jnp
test
jae,pn
and
adc
mov
in
cmp
lock
repz
shrb
sbb
call
xchg
fcoms
add
fwait
shrl
add
mov
into
cmp
out
sub
inc
jnp
push
cmp
mov
test
add
mov
and
push
jbe
and
adc
aas
and
stos
sti
fstpl
lds
lds
aad
test
fldl
lods
sti
xor
inc
push
and
mov
cmp
testb
push
out
inc
push
call
push
inc
inc
lret
aam
pusha
pop
add
jnp
iret
cmpsb
frstor
push
mov
fisubrs
cmp
adc
andb
fildll
int
pop
push
add
aaa
shlb
and
adc
mov
jae
xor
dec
rorl
loopne
pop
inc
cmp
or
push
aas
adc
jmp
dec
jnp
hlt
es
sti
fnstcw
jbe
xor
mov
fistpl
sub
lods
jl
pop
popf
mov
rcll
test
pushf
sub
popa
mov
in
xor
push
cmp
sti
iret
lret
cld
shl
subl
pop
xchg
pop
jbe
in
outsb
cli
jmp
push
pop
sbb
pop
aad
in
sbb
push
aaa
imul
cmpsb
outsl
add
and
mov
cld
jnp
push
enter
adcl
inc
sbb
dec
cmp
and
sarb
aas
call
or
mov
out
push
xchg
roll
or
bound
add
adc
xchg
jp
add
aad
lock
cmp
jge
push
in
add
xor
addb
add
add
inc
test
adc
adc
jl
inc
stos
sub
pushf
add
jnp
outsl
cmp
cli
loopne
inc
inc
dec
ds
decb
dec
jl
cmp
xchg
mov
inc
jp
pop
mov
mov
mov
dec
std
mov
pop
or
xchg
hlt
push
inc
adc
das
leave
sbb
ret
nop
inc
jb
xor
outsb
mov
pop
mov
sub
repnz
mov
pop
out
sub
adc
data16
sbb
int3
cmpsl
fdivrs
dec
lds
lcall
pop
ret
sbb
adc
loop
dec
lcall
ror
loope
je
fwait
inc
sbb
shrb
inc
pushf
push
movsb
addl
out
push
out
int3
ret
and
add
mov
in
mov
sbb
cmp
inc
mov
mov
in
jnp
mov
daa
adc
test
fiaddl
xor
xor
inc
cmp
cmp
aas
mov
les
inc
jmp
push
cmp
les
mov
loopne
int
scas
inc
push
mov
pushf
sahf
pop
arpl
lods
xchg
ljmp
addb
js
cmp
push
test
sbbb
add
daa
add
sbb
adc
dec
inc
in
add
pop
jle
push
and
popf
xchg
idivl
dec
cmp
sub
pop
cmp
outsb
int3
mov
jbe
pop
push
cs
outsb
sub
xchg
push
jns
cmpsb
test
scas
pushf
xor
jmp
push
fldcw
sbb
fwait
xchg
xchg
dec
mov
stc
cmpsl
mov
sahf
dec
inc
rorb
jecxz
js
imul
data16
icebp
mov
loop
jmp
dec
rorl
adc
repnz
dec
fwait
add
stc
and
mov
mov
cwtl
lods
lret
inc
push
inc
mov
mov
and
in
inc
sub
lcall
std
mov
das
dec
fisubl
nop
mov
pop
mov
test
shlb
jge
sbb
aad
and
jns
cltd
fcompl
lods
jbe
repz
lods
adc
xor
lds
rolb
mov
cmpsl
jmp
lcall
xor
inc
iret
ljmp
imul
lahf
lock
xchg
xchg
cld
xchg
out
aas
xchg
jbe
jno
out
sub
adc
and
xor
xchg
mov
mov
or
bound
out
inc
mov
mov
ja
jp
pop
lret
sbb
mov
cmp
in
mov
das
jmp
lods
das
xor
ja
pop
pop
inc
mov
and
mov
cmp
inc
sub
adc
shrb
sub
xorb
jecxz
mov
repnz
mov
into
jecxz
jge
je
lods
push
ret
ficompl
xor
es
and
shll
test
xchg
ret
mov
loop
rcll
sarb
es
scas
cmp
arpl
aaa
leave
inc
pop
pop
rolb
push
into
mov
cmpsb
cmp
loop
jmp
ss
xlat
fdivl
mov
sub
push
scas
mov
out
scas
fsubl
or
adc
stos
xchg
dec
push
daa
sub
dec
lds
pusha
mov
pop
hlt
cmp
cmc
xor
sbb
jno
dec
dec
pop
sahf
pop
pop
jecxz
movsb
push
mov
fs
dec
sti
pop
test
jge
jg
xor
clc
les
les
roll
mov
es
jl
js
push
mov
inc
call
sub
and
push
dec
sub
jle
or
cld
pop
sbb
fimull
mov
dec
ret
mov
data16
stc
add
or
into
adc
imul
scas
dec
add
dec
cmp
add
icebp
cmp
divl
clc
stos
mov
push
sbb
data16
sub
js
jns
adc
inc
or
mov
icebp
mov
pop
mov
mov
icebp
pop
cld
sub
aaa
dec
clc
scas
sbb
mov
roll
cmp
adc
out
add
or
addl
dec
jecxz
lock
cmp
lock
clc
or
mov
push
push
mov
orl
dec
inc
nop
mov
pop
cmc
xor
in
scas
sbb
cld
ret
loope
jb
nop
insl
xchg
stos
adc
push
mov
ljmp
push
stos
repnz
out
dec
daa
dec
insb
xchg
add
dec
push
leave
cwtl
fbld
imul
aas
les
test
fwait
popf
ja
addr16
jp
lock
sub
push
add
mov
xchg
mov
pop
cwtl
ljmp
adc
movsb
testb
sbb
dec
or
shl
sub
ds
sub
jne
cmp
xor
cli
ret
mov
sbb
scas
adc
mov
push
and
mov
fcompl
mov
lds
orb
pushl
pop
or
in
ret
or
jae
mov
sbb
test
sub
inc
cmpsl
sbb
shll
inc
jns
push
in
rcrb
inc
push
and
pop
mov
clc
rol
ds
sbb
adc
subb
push
lds
rclb
mov
cmp
push
and
inc
push
clc
dec
push
testl
test
jg
cmpsl
pop
adc
pop
mov
jb
lea
js
xor
mov
add
imul
add
sub
pop
jns
dec
sti
bound
or
add
pop
pushf
mov
sbb
out
notl
add
jno
mov
sub
lds
insl
fstpl
ljmp
int
fsubrs
mov
sub
xorb
js
mov
dec
and
loop
stc
mov
and
jns
in
gs
adc
leave
gs
xor
jge
shr
push
divb
dec
data16
pop
bound
dec
leave
lea
aad
jnp
lcall
test
add
push
xchg
add
jg
movsl
jmp
push
push
or
mov
mov
loopne
lods
push
repnz
mov
xor
fs
and
pop
cwtl
out
xor
xchg
cwtl
mov
fdivs
fdivrl
clc
cmp
jg
insl
call
ret
xchg
adcb
out
loop
imul
pushf
sbb
mov
insb
inc
mov
fstl
or
cmc
pop
cltd
pop
insb
lds
rclb
mov
push
and
jl
push
dec
aad
mov
xor
mov
loopne
or
imul
shll
popf
dec
mov
jno
js
out
std
lods
das
push
scas
out
pop
fistl
shlb
lret
cs
inc
repz
jns
nop
mov
xor
add
test
fwait
int
mov
test
jg
inc
das
int3
insl
cld
test
pop
mov
rorl
aas
cmpsl
outsl
test
daa
ds
xchg
jnp
xchg
into
out
test
int
jecxz
lahf
fcoml
out
roll
and
sti
in
fcoms
mov
out
pushf
sbb
data16
xchg
into
dec
sub
ret
sbb
negl
dec
test
sbb
add
dec
lods
mov
xor
sub
and
test
dec
popa
aaa
shll
imul
aas
inc
sarl
cmp
dec
pop
bound
or
mov
test
inc
jecxz
mov
xor
dec
push
ljmp
aad
lods
pop
icebp
pop
dec
popf
stos
push
lret
xchg
pushf
cmpsb
sub
jnp
or
mov
add
sbb
mov
cmp
xchg
mov
enter
in
dec
out
inc
inc
scas
mov
push
jmp
push
sbb
nop
dec
fisubl
xchg
sbb
in
mov
shlb
repnz
cmp
jo
xchg
xchg
pop
jne
jo
insb
mov
lcall
fidivrs
inc
mov
lcall
jmp
pop
nop
shlb
in
dec
aad
addr16
cmp
or
mov
sbb
push
push
inc
subb
push
pusha
ret
cs
in
mov
mov
xchg
mov
mov
sti
loope
aas
and
push
cmpsb
mov
ss
adc
jl
lock
fcomi
cmc
adc
cld
aad
outsl
sbb
in
mov
jne
sbb
iret
adc
xor
add
add
outsb
clc
push
mov
xchg
and
popf
fisubs
add
loop
push
and
icebp
aaa
sub
sbb
or
dec
cmp
es
or
xchg
inc
jle
and
jl
pop
fiaddl
xchg
subl
in
psubsb
dec
test
pop
std
xor
dec
pushf
out
orl
jmp
imul
sub
xchg
scas
pop
divl
sbbl
cli
push
call
xlat
sbb
mov
scas
bound
dec
ret
or
jns
repnz
enter
cmp
and
pusha
inc
shrl
cmp
add
xchg
out
lret
jge
xchg
jno
rcl
xlat
subb
pop
cli
daa
and
jbe
data16
adc
rorb
std
jecxz
ds
in
mov
stos
add
inc
vpshufd
stos
inc
xlat
xchg
pop
fsubl
inc
jne
aaa
jg
fdivp
das
pop
xchg
out
stos
popa
ret
pop
mov
dec
mov
mov
sti
inc
mov
cwtl
movsb
fstpt
xchg
lahf
icebp
jmp
int3
sbb
xchg
cmpsl
into
test
ljmp
pop
jge
cld
mov
inc
lcall
xchg
inc
mov
std
aas
and
mov
mov
mov
inc
pop
xor
inc
xchg
ss
add
mov
ret
ret
cmpb
dec
lock
mov
es
cmpsl
ret
mov
aad
adc
cmp
ror
mov
cmp
mov
sub
or
add
enter
fs
loope
push
fistpll
pop
add
push
push
sbb
fadds
mov
fxam
imul
mov
div
out
pop
lcall
inc
push
push
dec
cmpsl
popa
ljmp
cmp
xchg
sbb
in
jmp
pop
adc
dec
testw
push
mov
xchg
test
inc
mov
loopne
mov
pop
cmc
outsb
push
mov
pop
xchg
sub
and
mov
sbb
mov
pop
imul
push
mov
add
lock
pop
mov
test
popa
addr16
mov
and
scas
jnp
push
call
fwait
cmp
sarb
aad
xchg
int3
sbb
push
or
mov
push
aaa
xor
fwait
aad
sub
or
inc
and
xorl
push
mov
lret
js
xor
leave
es
inc
les
cld
or
inc
icebp
lods
movsl
sbb
out
jo
mov
js
call
scas
sbb
outsb
adc
sbb
rcll
xchg
pop
fildll
rcr
inc
mov
shrb
push
dec
or
cmp
cltd
mov
and
sub
std
clc
dec
mov
stc
cmp
mov
ret
aam
xchg
push
dec
mov
cld
inc
adc
insl
lcall
sub
cs
cmp
push
sub
pop
sbb
mul
loope
mov
icebp
mov
nop
inc
xor
dec
push
mov
mov
stc
xor
gs
jle
addr16
pop
sub
pushf
mov
icebp
repnz
and
and
sbb
cmpb
mov
into
icebp
out
loop
or
into
cmp
loope
test
shll
add
inc
xor
and
loope,pn
inc
jge
subb
rol
xchg
jae
pushf
lcall
push
sbb
rolb
xlat
or
or
outsl
mov
mov
jbe
dec
pop
int3
dec
adc
mov
std
or
cld
add
jp
pop
and
and
mov
dec
mov
ret
stc
cmp
and
mov
repz
mov
loop
cwtl
cld
xchg
test
jl
mov
inc
cmp
mov
test
lcall
sub
stos
in
sahf
nop
jnp
dec
jb
rcrl
push
adc
repnz
das
movsl
and
add
out
or
fbld
mov
push
mov
iret
mov
cmp
pop
and
mov
sbb
out
cmpsb
test
out
outsl
shr
pop
mov
cwtl
jecxz
lods
arpl
mov
xchg
xor
ds
das
cltd
je
pusha
les
jae
pop
xchg
bound
int
fildll
push
sbb
loop
lcall
shll
insl
pushf
sub
jbe
cli
dec
push
daa
add
data16
sub
push
jo
das
das
adc
adc
lea
mov
sub
jp
xchg
push
xor
jp
popa
cmp
shrl
jno
or
pop
xor
mov
mov
adc
imul
cmp
pop
lods
push
iret
pop
fdivrs
cld
fistpl
lods
xor
mov
aad
sub
sbb
xor
adc
test
mov
xor
cmp
mov
jecxz
and
insb
inc
jb
pop
adc
cld
ds
mov
lret
ret
add
out
push
or
adc
jmp
ja
and
or
daa
xorb
in
cwtl
sbbl
xor
pop
jg
xor
aaa
mov
or
or
push
das
popa
jmp
cmp
pop
outsl
lea
in
push
dec
insl
lea
jne
inc
fimull
cmc
stc
outsb
mov
mov
lahf
add
dec
es
into
xlat
int
cmp
bound
jp
gs
jmp
jmp
mov
dec
pop
cmp
outsl
std
inc
pop
jl
xchg
mov
movsl
dec
adc
filds
lea
mov
into
pop
cmp
imul
pushf
cwtl
je
mov
mov
cmp
aaa
cmp
loop
cmp
inc
dec
in
jp,pt
das
in
jo
push
das
push
jno
xlat
sub
cwtl
aaa
xchg
mov
mov
leave
mov
stos
jns
dec
inc
fsubp
add
scas
push
cli
or
dec
push
out
pop
cmp
ret
js
sarb
push
pop
ret
sbb
and
cmp
adc
daa
cmpsl
dec
jge
xchg
add
lods
xor
add
cmp
inc
test
inc
ljmp
clc
fistpll
mov
std
xor
pop
stos
movsb
popa
cwtl
pop
rolb
addr16
cmpb
push
add
jnp
mov
icebp
mov
mov
shll
fsub
pop
sub
movsb
xchg
jg
jl
push
pop
sub
cmpsl
aad
loop
cmp
add
mov
je
jbe
dec
cwtl
xor
cli
dec
or
stc
and
movsb
daa
hlt
add
ljmp
ss
dec
cmpsl
jmp
enter
pop
cmp
sbb
out
test
sbb
pushf
in
roll
jmp
test
rorb
loope
cld
dec
xor
cmc
and
mov
xchg
addr16
jp
xchg
sub
imul
pop
ret
push
push
sbb
call
rcll
sub
mov
xchg
push
xchg
enter
lret
xchg
lret
push
cmp
inc
scas
mov
mov
icebp
fcmovnb
xor
sub
jle
jne
fcomp
pop
stos
orl
lock
bound
mov
pop
dec
pop
xchg
xchg
pop
dec
pop
std
dec
xor
inc
fadd
xchg
ror
pop
mov
push
inc
jl
js
jns
dec
sub
movsl
mov
mov
mov
cmp
xchg
dec
stos
sarl
sbb
outsb
int
sarb
das
adc
sub
sbb
xor
arpl
popf
out
lcall
sbb
adc
cli
icebp
sub
test
loop
xor
movsl
jo
xor
shll
cmpsb
mov
pop
sub
cli
fisttpll
lcall
mov
dec
stos
inc
call
xchg
test
cmp
adc
arpl
into
cmp
lcall
daa
addr16
pop
push
pop
pop
adc
mov
xchg
rcl
cmp
test
push
dec
push
insl
push
jno
in
sub
adc
aad
out
lods
scas
jl
stos
push
cld
mov
mov
dec
testl
icebp
or
int
test
jbe
push
or
ss
call
mov
leave
sub
cmp
mov
cwtl
sbb
and
ficomps
sahf
lcall
fstp
in
lods
inc
test
lahf
out
popa
pop
mov
sub
inc
nop
rorl
xchg
dec
inc
addl
mov
movsl
add
ljmp
test
ja
gs
out
jae
jnp
icebp
cmp
jno
sahf
adc
rcrb
fsubs
sahf
stc
cmp
push
mov
push
push
push
mov
es
stos
movsb
jmp
mov
outsb
enter
mov
mov
pushf
loope,pt
nop
sub
xchg
cltd
adc
lcall
jae
ret
cmc
jmp
xor
jbe
adc
mov
pop
inc
xchg
and
das
leave
mov
test
sbb
insl
pop
test
inc
mov
sbb
sub
push
pop
pop
pop
mov
cmp
in
and
push
int
add
insl
daa
xchg
loope
mov
sub
push
xor
bound
or
dec
mov
and
daa
xchg
cmp
add
xchg
insl
scas
push
or
lret
and
addl
jb
and
and
jmp
jbe
xchg
or
dec
clc
ret
mov
jb
xchg
mov
xchg
lcall
in
push
push
hlt
das
jmp
loop
cmpsb
inc
outsl
mov
dec
lret
and
add
jge
jg,pt
jbe
add
nop
stos
test
push
xchg
fwait
mov
fsubl
dec
mov
jg
bound
stos
rclb
movsb
sub
xchg
pushf
scas
push
and
test
testb
push
add
arpl
addr16
push
cmp
enter
jge
aaa
push
addb
sub
fwait
dec
pop
jl
push
nop
ja
scas
cmp
xor
sub
xchg
pop
push
lcall
aam
test
xchg
sub
sub
fs
ss
movsb
add
push
addb
ss
adc
and
jecxz
stos
testl
ret
out
pop
and
push
or
out
inc
movsb
cmpsb
sbb
xchg
outsl
mov
iret
stc
mov
adcb
sbb
pusha
mov
or
sbb
fildll
shlb
mov
mov
sbb
mov
add
dec
or
out
fwait
jg
test
adc
jae
jmp
js
aam
xor
js
add
lods
shr
push
inc
and
sahf
stc
fiadds
xor
xorl
sub
jnp
jne
inc
and
sbb
mov
jg
cmp
dec
jecxz
andl
js
aas
pop
pop
dec
mov
fists
push
xchg
int
leave
fstl
test
mov
scas
repnz
xchg
ja
push
es
mov
mov
inc
sbb
or
jge
lea
mov
mov
pop
lea
loop
dec
push
roll
lret
sahf
out
into
mov
cmp
inc
movsl
mov
xchg
lds
pop
sub
push
je
xlat
dec
pop
pminub
in
xor
jne
jmp
mov
aas
sbb
rcl
insb
sub
inc
add
stos
ror
sbb
mov
fcompl
and
dec
icebp
out
iret
pusha
inc
lret
jecxz
push
mov
fnstenv
jo
inc
aaa
pop
add
sbb
mov
adc
fsubrs
lea
in
sbb
nop
dec
fdiv
lret
xchg
or
ret
cmp
daa
or
and
xor
inc
mov
or
jne
aas
cmp
push
cmp
sbb
lods
or
out
sbb
mov
das
dec
insb
dec
cmp
mov
or
jle
push
lock
cmp
imul
mov
mov
mov
movsl
lret
rcrl
cli
clc
cli
cwtl
xchg
dec
sahf
add
mov
jne
clc
push
mov
das
in
mov
addr16
ljmp
xor
mov
loop
xor
mov
cmp
mov
je
mov
sub
jg
mov
mov
jg
push
outsl
cmp
stos
xchg
mov
inc
xor
jns
dec
hlt
push
mov
and
dec
xor
call
mov
and
pop
xchg
xor
mov
jl
pop
cmpsb
lea
lock
sbb
stos
aas
xchg
jnp
int3
sbb
not
push
stc
jl
mov
dec
ja
xchg
mov
jae
xchg
or
iret
std
add
push
lods
test
sahf
fs
push
aas
cli
push
scas
nop
addr16
cmp
mov
in
int3
or
adc
and
mov
lret
sbb
aad
je
mov
ss
or
xchg
cs
cmpsb
push
iret
sub
pop
pop
or
cmp
sub
sub
les
call
xor
fimuls
dec
jmp
dec
dec
dec
iret
aaa
ss
mov
std
sbb
mov
push
mov
in
scas
adc
mov
test
popl
xlat
mov
xor
inc
ror
dec
loopne
fstl
sbb
adc
xchg
js
inc
in
jmp
mov
sar
lds
movsb
pop
inc
fdivl
pop
nop
or
jno
jmp
mov
test
hlt
repnz
por
fsts
pop
push
push
mov
jle
jle
xchg
rolb
add
lock
xorl
mov
inc
mov
dec
outsl
push
add
mov
jmp
sbb
push
fstps
sahf
nop
xchg
outsb
mov
sub
or
lcall
test
pusha
mov
add
sub
repz
mov
out
cmpb
mov
xchg
test
cmpsl
fidivrs
fistpll
repz
and
sbb
adc
xor
cmpsl
push
call
pop
jnp
loop
dec
popf
ss
aas
iret
cmp
movsb
or
xlat
inc
lea
sbb
outsl
out
push
ja
sbb
lock
ljmp
sub
sarl
sahf
cmc
fmull
sbb
pop
rcrb
dec
jmp
cwtl
mov
ljmp
loopne
icebp
mull
js
iret
sbb
int
stc
cmp
sub
mov
dec
xor
push
icebp
lods
pop
inc
cli
pop
or
test
push
loopne
sub
jns
dec
ss
into
push
cmp
push
out
out
sub
js
dec
cmp
test
and
mov
clc
fstl
push
out
mov
bound
sahf
rcrl
mov
cmp
mov
shrl
incb
or
xlat
iret
inc
add
je
cmp
mov
mov
sti
xor
push
sub
call
xchg
icebp
testl
dec
mov
or
subl
fnstcw
js
mov
mov
push
arpl
xchg
outsl
scas
loop
pop
imul
jnp
loope
test
outsb
sbb
das
xor
std
cmp
mov
pusha
inc
ret
mov
les
mov
jle
jbe
sbb
es
enter
daa
xchg
cwtl
imul
lock
xchg
add
daa
xor
jg
idivl
fcomp
jg
or
dec
jb
js
mov
and
adc
or
jbe
imul
ret
pop
nop
cmp
sarl
inc
push
and
sbb
add
cmp
inc
ja
adc
insl
mov
cmpsb
xchg
pop
lock
push
or
pop
jne
addr16
jmp
cmp
push
stc
mov
xor
inc
mov
xchg
mov
addr16
xchg
push
fwait
movsl
fsubl
adc
cli
mov
repnz
cmp
xor
inc
mulb
jbe
cmpsl
out
sti
iret
inc
and
sbb
mov
lret
cli
and
add
inc
je
leave
mov
add
jl
sbb
hlt
popf
or
xor
jmp
mov
inc
jbe
frstor
lahf
push
int
aaa
mov
jae
clc
mov
repz
pushf
jb
mov
mov
cs
andl
incl
nop
ficompl
jp
btc
das
sbbb
or
dec
iret
ja
mov
xor
cmpl
mov
and
dec
inc
stos
sbb
jl
mov
xor
inc
xor
js
dec
daa
sub
cmpsb
repnz
push
sub
nop
clc
out
inc
jae
test
shlb
adc
mov
cli
lahf
jmp
mov
sub
xor
push
mov
sahf
out
jmp
nop
jmp
jmp
pushf
cmovl
pop
outsb
push
lret
xchg
mov
and
dec
std
adc
or
out
mov
imul
shll
mov
add
cmp
jae
aad
dec
mov
jg
or
sbb
daa
pop
pop
lcall
lods
pop
cmp
subb
movsb
rcll
stc
sub
xor
dec
add
fwait
pop
out
test
test
idivb
shll
fstpl
xchg
jnp
mov
adc
jne
movsb
cmpsb
jne
lea
stc
or
and
mov
or
or
sahf
mov
xor
jne
outsl
testb
cmp
sarl
sub
lahf
adc
gs
fwait
int
loop
sbb
mov
cmp
fwait
push
push
jp
std
cli
ret
dec
outsb
inc
mov
jae
ror
mov
repz
sub
add
iret
lret
jb
lret
jbe
movsl
jp
out
or
sub
pop
cs
pop
jae
xchg
xor
cmp
lds
pop
outsl
pop
sar
inc
test
leave
call
js
dec
or
les
mulb
dec
inc
fldenv
or
inc
call
push
iret
in
add
decb
lret
and
into
push
xor
pushf
dec
fcmovb
fs
jmp
sbb
in
sub
sub
sub
push
or
and
fistl
popf
pop
adcl
add
pop
dec
push
mulb
call
popf
or
inc
inc
lods
dec
adc
sbb
iret
dec
add
aam
pop
fsubs
outsl
add
pushf
pop
add
dec
enter
cwtl
mov
push
pop
test
add
push
sarb
add
jnp
test
and
add
dec
iret
cmp
aas
popa
adc
mov
ret
jno
daa
stos
push
imul
shlb
sbb
dec
mov
push
jns
push
test
jns
xor
or
shrl
fsubrs
and
jle
call
push
ljmp
jle
cmp
mulb
mov
lods
sub
stos
mov
dec
lock
xlat
int3
sub
adc
dec
dec
sahf
or
push
or
lret
frndint
jecxz
lret
pop
pop
insl
add
fbstp
push
popf
cs
pop
popf
es
mov
jbe
xchg
aas
mov
out
in
add
mov
mov
mov
dec
ss
es
mov
gs
jl
push
push
and
jbe
int3
and
invd
ret
add
mov
hlt
mov
mov
mov
or
enter
fdivs
and
adc
jmp
hlt
mov
test
and
and
xor
or
mov
push
mov
cmp
inc
or
mov
leave
xor
inc
inc
je
and
fisubrs
fisubrl
cmp
mov
dec
ret
mov
cmp
xchg
imul
mov
add
mov
xchg
xor
aam
or
loop
sbb
cmpl
dec
mov
lock
ficomps
and
arpl
or
into
movsl
cld
sub
xchg
sbb
das
jmp
inc
imul
outsl
mov
push
lock
call
mov
sarb
push
xchg
cmp
int
mov
arpl
insb
jo
mov
pop
daa
mov
out
add
icebp
in
sahf
pusha
test
lods
jne
mov
push
mov
addr16
fsubr
jnp
cltd
stc
loope
jle
lahf
add
push
inc
aas
add
cmc
dec
dec
in
outsl
jo
jmp
xchg
sbb
jl
mov
or
pop
lea
test
inc
fsubs
add
push
inc
leave
pop
or
xchg
push
fsub
jno
mov
call
xchg
or
fsubl
or
std
out
pop
add
pushf
sbb
cs
enter
and
sar
adc
mov
push
fwait
ss
cld
sbb
jbe
popa
mov
not
clc
cmp
lret
cmp
add
and
add
sub
sbb
xchg
cmp
and
add
xchg
loop
jl
std
fdivr
jne
fldl
repz
loopne
xchg
call
pop
in
xchg
pop
push
stc
xchg
and
das
dec
outsb
into
test
push
inc
jne
mov
inc
mov
call
or
scas
fbstp
sbb
insb
dec
jmp
mov
xchg
sub
ljmp
mov
aas
xor
inc
js
int
hlt
call
ja
mov
xchg
out
jmp
push
jl
adc
ffree
test
pop
faddp
xchg
sbb
std
cmp
scas
sbb
mov
add
idivl
push
mov
push
movsl
out
pop
push
adc
pop
mov
rclb
out
std
xchg
je
push
lods
fwait
mov
outsb
mov
mov
lahf
mov
jle
mov
lret
or
repz
cld
dec
jno
ja
mov
xchg
cmp
mov
cltd
sub
cmpsl
insb
popf
sub
pushf
pop
jo
out
jno
add
fucomp
inc
or
pop
adc
inc
ret
dec
push
adc
pop
jne
cli
movsl
cld
push
out
adc
gs
mov
mov
ds
jnp
adc
test
scas
jo
sub
lods
mov
sub
stc
mov
mov
mov
dec
fwait
xchg
sbbb
jne
mov
xchg
insl
repnz
adc
cmp
mov
push
shrb
repnz
cmovne
and
xchg
cli
repnz
icebp
mov
mov
cmp
aaa
jmp
jecxz
mov
add
pop
xchg
aaa
nopl
sbb
adc
lcall
fmuls
jecxz
call
imull
jl
or
adc
imul
sbb
adc
fisubl
mov
lods
repz
or
push
fldcw
loopne
sti
and
ds
leave
adc
cwtl
mov
sti
pop
xchg
sbbb
int3
push
mov
inc
jo
mov
pusha
push
inc
stos
xchg
add
jae
lret
hlt
stos
pop
cltd
and
cmp
aad
mov
dec
sbb
fdivs
je
push
push
pop
sbb
adc
testl
add
adc
orb
sbb
lahf
xor
dec
mov
xor
xor
mov
mov
stos
mov
cmp
cmp
ret
imul
mov
dec
mov
mov
and
jb
cmc
cmp
test
fdiv
imul
pop
and
inc
mov
jg
mov
repz
dec
movsb
cmp
add
int
mov
repnz
daa
sti
sti
mov
stc
cmp
dec
mov
loopne
popf
xor
xlat
add
ss
in
pop
sub
bound
adc
mov
lcall
cmp
xchg
out
frstor
inc
pop
shl
stc
lret
mov
sbb
mov
fwait
jb
out
mov
lahf
jecxz
pop
cwtl
cmp
dec
call
aaa
loop
dec
sub
fimull
cld
adc
push
xchg
adc
push
dec
cmpsb
out
das
dec
dec
adc
jno
cli
enter
lods
dec
pusha
shll
sub
xchg
jne
xor
in
push
outsl
pop
jmp
cmpsb
dec
stc
cmp
in
mov
div
vfrczsd
sbb
dec
mov
mov
fstl
sbb
xchg
cmp
fsubrl
or
cmp
and
mov
popa
data16
inc
sbb
xor
inc
push
sub
jle
and
cmp
sbb
sbb
jmp
sbb
pop
mov
das
fmuls
cwtl
mov
dec
cmpsl
sub
cld
sub
mov
cmpsb
push
repnz
jae
fiaddl
jbe
pop
mov
imul
int3
lahf
test
mov
fbstp
add
outsl
dec
std
push
in
lds
loopne
popf
adc
adc
sub
xchg
adcl
icebp
jge
lods
leave
add
ja
mov
fimuls
cmc
shrl
inc
inc
sar
mov
ficoml
imul
jns
adc
adc
sub
adc
stos
push
movsl
movsl
es
add
and
xorb
sbb
cmp
shrl
addr16
lods
lods
xchg
sbb
sbb
or
inc
xchg
sub
mov
dec
outsb
sub
fsubrs
bound
and
cmpl
and
das
cmp
mov
shr
push
ret
aaa
mov
enter
into
xor
jne
sbb
jp
or
rorb
cli
mov
imul
out
seta
sub
sbb
xchg
push
mov
push
leave
cmpsb
fbld
in
sahf
and
push
sbb
sbb
std
sub
leave
fnsave
lret
sub
sbb
addr16
jno
lahf
cmpl
add
jp
clc
sbb
mov
call
popa
or
mov
dec
pop
lods
inc
prefetchw
sbb
jne
xor
and
hlt
xchg
adc
mov
add
and
arpl
not
scas
js
nop
adc
cmp
mov
loop
mov
sbb
rorl
mov
or
hlt
dec
mov
jns
icebp
test
xchg
shrl
jp
mov
xchg
jns
leave
in
shlb
pop
jae
mov
imul
imul
adc
xor
mov
insl
mov
sub
scas
scas
adc
mull
xor
cmc
pop
out
push
jg
xchg
ds
ja
mov
lods
insl
push
add
jnp
incl
fdivl
out
aam
cmp
or
cmpl
fsubp
add
push
cmp
adc
jns
cmp
imul
mov
popa
push
add
outsb
pop
push
inc
xor
and
outsl
mov
add
xchg
jecxz
loop
idivl
sti
andl
fstps
fs
aad
xor
stc
cmpsl
push
outsb
jae
mov
dec
or
es
sbb
iret
out
jo
inc
cltd
ret
lds
or
outsb
dec
push
mov
jecxz
and
bound
xor
add
jo
lock
inc
or
cld
fucomi
dec
push
bound
scas
clc
push
sar
aas
mov
gs
fsubrs
adc
cmp
mov
loopne
aaa
sbb
movsb
mov
in
gs
shr
out
xacquire
push
in
popa
or
and
rcl
dec
sub
push
xor
icebp
fwait
loope
pop
inc
dec
stos
and
xor
imulb
pusha
push
fistps
lods
push
mov
out
data16
rclb
or
loop
shrb
fmuls
jmp
push
cmpsb
mov
jo
sub
xchg
in
cmpsb
sub
jno
andb
adc
pop
adcb
jne
dec
mov
orb
xor
test
jno
and
mov
ret
xchg
xor
movsb
sub
popf
push
add
push
test
pop
movsb
jp
mov
mov
stos
jle
jno
or
or
adc
adc
mov
cmp
sahf
or
aam
call
cmp
je
xchg
cmp
jbe
movsb
or
jecxz
pusha
rclb
ds
lds
jl
fwait
or
cmp
mov
es
pushf
lcall
ja
std
mov
dec
insb
push
xlat
jge
sti
in
xor
mov
lock
add
xchg
push
sbb
aad
and
and
xchg
lods
and
cmp
fidivl
movsb
pop
mul
ljmp
mov
iret
jae
lahf
aam
jge
mov
adc
outsb
push
pop
mov
inc
xchg
mov
lods
push
or
inc
pop
incb
jl
in
jmp
add
lret
incl
scas
outsl
add
lods
and
cmp
gs
clc
test
cmp
mov
sub
out
xchg
lods
inc
jns
dec
int3
dec
add
sub
leave
cmp
cmp
in
fadds
mov
sbb
aaa
push
or
les
orl
dec
xor
gs
jg
es
mov
inc
testb
jecxz
lahf
mov
test
repz
lods
jp
gs
out
push
clc
rcrb
fs
xchg
daa
test
cwtl
sub
inc
out
and
mov
divb
sti
inc
cwtl
mov
jmp
sub
enter
push
sub
adc
lock
pop
daa
popa
jbe
lcall
xor
or
ss
fwait
xchg
adc
adc
in
xchg
ljmp
mov
mov
xorb
xchg
push
and
xchg
aas
jno
push
dec
pop
pushf
in
cli
shrb
xlat
ds
int3
outsl
dec
out
inc
lods
mov
inc
insl
add
cmp
sbb
push
repz
mov
test
rcrb
rcrl
bound
nop
scas
dec
scas
sbb
sarb
mov
mov
lcall
mov
and
movsb
inc
imul
sbb
and
hlt
in
mov
stc
pop
imul
rclb
stc
aam
xor
xor
lahf
dec
cmpsl
or
in
sar
xor
cmp
pop
xchg
lret
jmp
loopne
inc
mov
mov
or
enter
in
loope
mov
sti
leave
pop
pop
mov
mul
clc
xor
sbb
stc
xchg
xchg
push
aas
mov
cli
lods
jecxz
jb
push
cmp
pusha
or
jo
pop
call
movsb
dec
cmpsb
xor
data16
push
jl
mov
std
sub
jp
dec
lret
xor
adc
int
outsb
adc
gs
dec
aam
pop
pushf
test
ss
mov
sub
cs
ret
ret
lds
jge
addr16
std
xchg
sbb
dec
sub
push
data16
inc
fisttps
mov
ljmp
jmp
add
es
mov
rolb
cmpsb
in
inc
scas
pop
arpl
push
cmc
push
jnp
cmp
jne
in
adc
aas
add
cli
iret
ret
xchg
lcall
jle
mov
add
shrb
test
imul
jb
mov
add
lret
bswap
out
test
jle
mov
insb
popa
sar
add
movsb
mov
pusha
push
sub
lea
jno
sub
jnp
or
xor
movsb
lods
mov
xorb
push
mov
pop
mov
mov
pop
insl
movsb
add
mov
arpl
push
and
repz
sub
ret
adc
dec
les
out
mov
or
or
sbb
aam
scas
sarl
movb
push
cs
cli
addr16
mov
das
add
sub
scas
imull
inc
rolb
bound
pop
jnp
inc
lahf
cwtl
sub
sub
insl
in
cmc
mov
mov
xchg
jbe
shlb
shrl
mov
and
jbe
sbb
sti
sub
data16
fs
fs
xchg
push
xchg
add
lods
or
and
pop
and
or
push
sbb
stos
rorl
repz
lcall
mov
je
test
cmpsb
bound
mov
pop
xlat
push
push
xor
mov
push
mov
pop
notb
fsubr
test
imul
dec
gs
adc
xor
jp
dec
jle
in
in
js
dec
nop
add
lcall
test
out
fucomp
ss
dec
scas
js
lahf
xchg
cmpsl
inc
jp
push
dec
outsl
cmp
cmp
jae
cmp
push
stos
jbe
sbb
inc
call
lret
rcr
lcall
cmp
pusha
sub
outsb
inc
sbb
and
push
dec
rclb
mov
rol
lcall
scas
pop
xor
out
inc
adc
jl
cmpsl
sti
push
inc
mov
mov
mov
jbe
xchg
pop
push
inc
test
mov
mov
push
jle
add
lods
mov
fbld
sub
mov
inc
lret
inc
in
loopne
push
xchg
add
mov
inc
lret
roll
scas
out
jne
subl
inc
cmc
sbb
aaa
push
fsub
pop
ds
jo
cltd
sbb
repz
pop
pop
add
jle
pop
inc
xor
xchg
xor
inc
or
push
test
mov
pop
add
mov
aad
repz
or
test
out
ret
cmp
ret
push
inc
dec
xor
cmp
cmp
or
jge
fst
loop
roll
test
xchg
dec
xchg
sbb
xor
and
or
fsubrp
xchg
fistps
pop
bound
rclb
sbb
xchg
imul
jne
loop
and
cmp
jl
inc
jbe
mov
fwait
push
inc
push
jo
subb
mov
and
xor
aam
jge
mull
cmp
insb
xchg
insl
adc
orl
popa
ss
stos
cmp
shr
push
ret
lock
test
ret
mov
jno
dec
cmp
je
leave
enter
jmp
push
mov
pusha
lahf
daa
lds
cs
lea
mov
into
xchg
fsubr
imul
stos
test
push
push
pop
pop
push
ja
inc
clc
aaa
fbstp
adc
addr16
adcb
push
pop
stos
push
cli
test
imul
out
dec
ds
das
dec
iret
push
cwtl
js
scas
push
bound
add
ss
insb
mov
aas
and
iret
in
xchg
cmp
call
aad
sbb
shl
add
out
ret
cmpsb
jbe
scas
in
jp
mov
lret
and
fmuls
es
fwait
dec
pop
cwtl
sbb
into
adc
outsl
sahf
pop
mov
fidivs
divb
jnp
jge
add
js
movl
xor
push
xchg
cli
repz
lret
daa
das
and
add
mov
adc
pop
cs
mov
mov
and
lea
mov
pop
dec
ja
sub
jecxz
mov
xor
xor
lret
xchg
push
aad
xorb
repz
pop
pop
mov
pop
outsl
nop
xchg
shlb
iret
ret
mov
scas
ss
push
pop
dec
cmp
loopne
jb
cli
pop
dec
push
sbb
xor
mov
mov
pop
js
fwait
dec
sbb
xor
negl
push
movsl
rolb
fadds
imul
ret
addr16
or
xor
inc
xor
pop
fs
inc
push
adc
sbb
sub
cmp
jge
inc
mov
mov
enterw
notl
mov
push
xor
sarb
imul
mov
imul
sub
jns
adc
or
iret
shr
inc
fisttpl
rolb
rcrl
lds
sti
filds
les
sbb
test
rorb
xor
outsl
adc
repz
mov
mov
mov
test
sbb
scas
push
cmpsb
std
xchg
push
xor
mov
sbb
test
int
call
pusha
push
or
inc
pushf
push
add
pushl
mov
and
mov
jb
shll
xchg
pop
testb
mov
mov
xchg
dec
lock
leave
rcr
repz
add
cmp
sbb
pusha
out
repnz
pop
or
idiv
sub
cmp
in
pop
mov
cmp
xchg
data16
jmp
sarl
mov
aad
jge
enter
xchg
cmc
or
scas
or
mov
rolb
insb
fstpt
jecxz
pop
rolb
jecxz
mov
sbb
or
xchg
sbb
outsl
inc
push
imul
mov
bound
test
xchg
ss
mov
unpckhps
shl
mov
dec
pop
out
cmp
cmc
mov
add
sub
gs
test
jo
dec
int
popa
or
inc
xor
mov
and
popf
insl
inc
lods
das
push
dec
fsubl
movsb
faddl
lcall
mov
lods
pusha
inc
outsl
inc
aas
jmp
sub
ss
sub
or
lea
jnp
dec
repz
lock
cmp
test
imul
fsubrs
jl
push
mov
jnp
ljmp
unpckhps
fidivs
pop
xor
jmp
out
xchg
mov
cmp
mov
jg
pop
jg
jnp
mov
cli
call
fs
pop
stos
rcr
adc
add
inc
push
push
mov
pop
mov
cmpsl
sbb
xchg
add
dec
or
xchg
jbe
and
popa
out
fmuls
mov
dec
and
rcr
or
mov
mov
ror
inc
sbb
test
in
cs
push
in
in
jo
or
push
or
or
out
mov
movsb
dec
push
pop
sahf
xchg
popf
out
les
arpl
push
jne
int
mov
jge
mov
or
imul
mov
mull
jnp
mov
out
lods
loop
sub
sub
or
push
clc
daa
mov
mov
or
dec
sbb
cmp
pop
aas
mov
jnp
pop
scas
push
and
pop
out
add
add
sbb
mov
rcll
and
leave
cwtl
mov
loopne
sti
push
dec
jge
fs
lret
sub
mov
add
push
and
or
in
cmp
fsubrl
and
add
and
repnz
xor
push
scas
cmp
test
adcl
rcll
ss
inc
cmp
stos
lods
xchg
or
arpl
xor
fs
cwtl
bts
inc
outsl
popa
cmp
xchg
int3
or
fdivs
leave
test
xchg
cmp
das
hlt
jnp
and
xor
adc
fwait
add
jle
roll
dec
mov
xchg
sub
mov
mov
fildl
push
cwtl
pop
mov
jge
lock
add
movsb
mov
mov
push
outsb
jne
xor
dec
push
in
mov
in
cmc
mov
call
jl
xchg
arpl
cmp
jmp
mov
fmull
dec
and
xor
adc
into
cmp
pop
aad
clc
nop
push
sub
push
ret
and
push
jmp
out
mov
push
out
xor
movsb
or
fdivrl
add
xlat
sbb
cmpsl
fnstenv
mov
shll
sub
leave
dec
cwtl
cli
xor
mov
xor
push
ret
adc
inc
xor
push
inc
stos
cmpsb
cmp
test
pop
cmp
lret
cmpsb
and
jl
mov
and
jge
fsubrl
notb
das
and
out
mov
push
out
xor
mov
pop
icebp
jb
js
aas
gs
mov
cmp
or
inc
lea
or
sahf
jecxz
inc
lret
cmp
inc
lcall
push
aad
cmp
pusha
bnd
outsl
jo
clc
aas
push
mov
lods
mov
ret
aaa
int
out
cli
or
push
mov
dec
inc
in
xor
inc
cli
ss
roll
ret
sbb
xchg
pushf
bound
imul
mov
lahf
mov
dec
movsl
mov
and
or
or
mov
scas
inc
and
lcall
mov
in
xlat
pusha
or
push
add
jb
xchg
push
sbb
jg
shlb
sbb
out
xchg
mov
jmp
add
xchg
adc
cli
outsb
loopne
mov
inc
jae
aam
popf
push
outsl
jmp
gs
adc
add
jp
jno
xor
ljmp
or
iret
inc
mov
and
mov
xchg
mov
push
pop
or
dec
push
in
xor
cmp
sub
xor
jecxz
scas
push
fnsave
pop
and
dec
cmp
mov
les
decb
insl
out
outsl
cmpsl
out
sbb
add
popf
push
in
pop
sub
lret
lods
in
aaa
cmp
push
das
inc
fcoms
xchg
cmc
mov
lcall
push
sub
jae
pop
pop
push
push
cmp
xchg
mov
mov
repnz
add
bound
sub
in
scas
lock
sarb
inc
scas
es
xchg
sub
jl
push
or
xchg
push
jbe
push
lea
mov
hlt
scas
xchg
mov
inc
shlb
or
dec
or
imul
push
and
sub
scas
xor
ret
or
or
jge
mov
insl
cmp
mov
or
mov
cmp
rorl
xlat
test
popa
bound
test
lea
jae
test
movsb
insb
std
pcmpgtw
out
push
lea
repz
leave
xchg
add
push
repnz
imul
adc
jge
dec
mov
dec
jmp
xchg
stos
ljmp
repz
jb
jl
outsl
imul
test
and
popf
stos
pop
jmp
push
xor
daa
lret
ret
pop
mov
push
out
fsubl
dec
enter
sub
in
mov
out
xor
add
push
mov
ret
outsl
rolb
fs
in
mov
xor
js
xor
sub
cmpsl
add
inc
fildl
adc
jnp
leavew
lea
fmull
push
fs
pop
fucom
imul
inc
add
jle
adc
push
mov
arpl
cmp
cmp
loop
and
sub
cmp
std
mov
jae
pop
sbb
push
jns
and
xchg
insl
inc
jmp
in
ret
or
mov
out
lcall
inc
dec
test
push
cmpl
push
cmc
and
adc
jnp
push
out
mov
mov
or
mov
add
xor
int
imul
daa
adc
xchg
clc
or
add
push
shl
push
mov
bswap
mov
cmpsl
test
or
out
cmpsl
enter
mov
pop
repz
lret
test
lret
in
or
add
cmpsl
sbbb
dec
mov
inc
push
dec
mov
mov
cld
mov
dec
jo
nop
jbe
add
gs
sbb
mov
or
mov
cmp
cli
sti
add
in
out
jnp
mov
cmc
xchg
movsb
jo
pusha
mov
jge
call
in
test
repnz
pop
aaa
mov
jmp
jle
icebp
inc
pusha
jle
sub
popa
jecxz
stos
adc
ljmp
in
cmp
shlb
dec
or
fs
push
push
lock
andl
testb
jl
pop
mov
mov
jne
dec
fsubl
push
es
loop
mov
cld
test
jle
push
in
imul
fisubrl
in
adc
mov
jmp
repnz
in
jno
bnd
mov
out
ret
jmp
lahf
shlb
lds
int3
jno
out
dec
movsl
jmp
ja
jno
jae
jl
imul
dec
xor
subb
insb
push
pop
xchg
gs
pop
imul
movsl
pusha
and
lds
dec
inc
call
or
mov
sub
clc
test
movsb
sub
ret
xchg
ret
loope
sbb
xchg
ja
in
pushf
fiaddl
lcall
and
sbb
mov
cmp
adc
cmp
push
shl
fcompl
out
pop
and
inc
outsl
aad
lret
mov
daa
fisttps
sub
inc
outsl
xchg
pop
mov
out
ret
and
pop
sub
push
out
test
and
push
cmp
mov
push
mov
push
pusha
jg
or
cld
push
mov
xor
push
andl
inc
dec
mov
rorl
sub
ss
add
imul
jge
sub
xchg
pop
jb
rcrb
and
mov
shrl
orb
inc
mov
mov
sub
in
cli
pop
pusha
fisttpl
lods
jae
cmp
push
sbb
rcrl
not
add
js
stos
not
sarl
shll
aam
dec
fs
bnd
sub
sbb
cmp
clc
adc
add
push
idivb
out
ficomps
dec
and
lods
inc
pop
xchg
loop
and
mov
dec
ret
inc
incb
or
sub
ja
inc
dec
in
insb
push
pop
fildl
fmull
dec
clc
jle
stos
mov
cwtl
pusha
scas
jae
outsl
mov
cmp
mov
inc
pop
ret
std
sahf
mov
xlat
int
sub
insl
rcll
xor
push
and
pop
popa
and
pshufw
xor
jbe
insl
dec
jecxz
aam
or
cli
add
xchg
pop
ret
int
in
xchg
mov
push
aaa
popf
sbb
xor
push
xchg
pop
es
mov
or
lea
arpl
push
aad
bound
add
in
xchg
test
out
and
pop
and
mov
iret
mov
stos
ja
leave
add
nop
pop
jl
repz
xor
mov
int
mov
sbb
sub
jl
idivb
add
or
inc
xor
insl
sbbb
xchg
lret
mov
cmpsl
push
rcrl
xchg
sbb
sahf
pop
aam
shrb
cmp
inc
stos
jp
pop
jge
push
out
inc
jo
jo
xchg
inc
mov
mov
push
sub
shl
jno
mov
push
hlt
mov
and
xor
sub
roll
pusha
stc
mov
mov
aas
in
imul
inc
aas
add
add
mov
add
les
mov
negl
repz
test
arpl
aaa
mov
sub
into
scas
outsb
std
pop
loopne
pop
pushf
pop
xchg
mov
xchg
setno
call
repnz
daa
stc
xchg
es
clc
push
adc
stos
icebp
mov
inc
movsb
aas
fwait
js
cld
mov
xor
pop
inc
push
mov
lret
inc
mov
pusha
add
push
in
popa
inc
pop
lret
test
aas
pop
ja
cs
iret
data16
dec
lahf
mov
inc
aas
mov
push
dec
mov
inc
mov
xorw
jns
or
add
ss
adc
imul
mov
and
fwait
jg
xor
movsb
dec
sub
fs
jne
xor
mov
insb
mov
mov
js
jmp
mov
push
mov
arpl
shlb
ja
jno
and
hlt
adc
fimull
orb
scas
jle
fcompp
mov
mov
adc
or
inc
jnp
mov
mov
jle
imul
mov
clc
fwait
mov
jge
fisubl
cmp
cli
mov
xchg
popa
push
xor
aam
and
mov
cwtl
pop
cmp
cmp
dec
outsl
cmpsl
xlat
cld
aaa
hlt
jp
cwtl
mov
cmp
pop
loopne
sarb
movhps
mov
mov
iret
xor
rcpps
xchg
loopne
scas
stos
cmpsb
xor
push
jg
lcall
aas
rcll
loope
test
addb
int
scas
lcall
test
dec
es
xchg
pop
sbb
pop
dec
mov
aas
mov
cmp
mov
fnsave
adc
push
outsl
or
loope
add
ret
xor
test
and
int
push
nop
pop
push
xchg
mov
or
xlat
rclb
into
xlat
mov
xor
mov
pop
insl
mov
fldcw
inc
add
aas
and
pop
sbb
aas
xor
imul
inc
outsl
push
aad
lods
test
sub
mov
out
pop
fists
jno
adc
inc
push
stc
lock
or
sub
cmpsl
pop
int
addr16
cmp
shll
xchg
mov
gs
xchg
std
fs
add
inc
lret
add
mov
gs
je
inc
adcb
mov
shrb
pop
and
or
or
xor
insb
mov
lods
ret
dec
cmp
gs
mov
adc
mov
sub
adc
cmp
shlb
xor
jp
xchg
sub
jns
dec
imul
mov
mov
mov
mov
or
push
dec
scas
and
enter
cmp
jne
and
cli
xor
insl
stc
popf
add
push
or
rolb
pop
scas
sahf
xchg
incb
lcall
int
mov
adc
push
int
shlb
jl
scas
orb
daa
js
xor
je
movsb
bound
jnp
sbb
sub
lods
shlb
sub
mov
rcrl
jae
ror
jle
mov
fs
push
sahf
mov
testl
in
cmp
lods
xor
dec
shr
out
lods
out
and
mov
mov
aam
sub
jp
bound
sbb
xor
sarl
cmpsb
mov
scas
cmp
jle
je
aaa
cltd
push
add
jecxz
ja
jo
outsl
xorb
pop
sub
in
push
test
jns
hlt
test
nop
clc
movsl
push
push
push
outsl
mov
dec
pop
inc
notl
enter
xchg
addr16
add
imul
jg
sub
mov
push
jo
test
jmp
rorl
lret
aas
popa
gs
or
stos
cmp
imul
cltd
inc
in
inc
xchg
inc
push
pop
cmp
and
cli
mov
int3
cmc
shrl
nop
icebp
imulb
test
inc
mov
lods
movsl
xchg
mov
jp
stos
sti
cwtl
mov
pop
sarb
add
xchg
mov
sbb
rcr
and
lock
call
adc
push
inc
sti
ret
sbb
xchg
leave
dec
sub
out
sbb
popa
add
frstor
sbb
dec
mov
sbb
imul
jle
and
or
or
jo
adc
sbb
push
sbb
imul
and
pop
std
pushf
xor
xor
rcr
jns
cs
dec
arpl
imul
or
adc
mov
lock
inc
adc
aam
sbb
ja
or
xchg
cmp
cs
cs
sahf
outsb
shrb
adc
es
sbb
mov
mov
lcall
addr16
or
icebp
push
das
out
clc
jns
mov
mov
lods
in
push
insb
in
jmp
lock
mov
jmp
iret
and
test
xchg
outsl
inc
and
stos
and
lahf
rorb
fstps
cmp
fisubs
adc
inc
out
jne
pushf
push
fisttpl
mov
push
jo
mov
insl
sbb
arpl
mov
ss
xchg
cmp
jno
jb
dec
push
adc
sbb
mov
test
sahf
jle
lcall
insb
nop
mov
out
ret
repz
add
fbstp
push
mov
daa
dec
shrl
sub
sub
outsb
out
pop
dec
in
out
lods
outsl
cmpsl
addl
cmp
and
lds
push
sahf
jno
in
stos
inc
xchg
out
pop
mov
inc
pushl
lea
add
xlat
sbb
push
fsubrs
add
js
jg
movsb
push
not
pop
push
jo
ja
js
lods
ret
add
pop
inc
sub
clc
mov
jmp
sbb
mov
xchg
xchg
fiadds
push
mov
icebp
out
xor
popa
jo
aad
dec
into
lret
in
std
sub
inc
or
bound
cmpsl
cmp
std
add
mov
inc
mov
jmp
mov
inc
out
into
daa
aaa
das
sbb
loope
jno
pop
lods
frstor
cmp
loopne
aam
adc
inc
fstps
clc
aad
push
pop
adc
push
inc
add
clc
ret
daa
mov
mull
pop
loop
add
ja
out
mov
nop
sub
mov
fs
mov
jae
repz
mov
push
add
iret
stc
mov
pop
sub
add
mov
cmp
fwait
sub
andb
inc
out
mov
ljmp
les
and
mov
dec
inc
mov
add
push
mov
mov
or
push
pop
lahf
iret
clc
lret
mov
bnd
ret
jae
adc
or
jnp
dec
ret
lock
pop
mov
lahf
mov
inc
sbb
and
mov
inc
jp
test
dec
xchg
std
jne
push
lea
cmp
sub
lea
ret
jnp
mov
test
push
cmp
test
inc
testl
push
mov
jp
jle
lods
dec
pop
xchg
cmp
xchg
pusha
cmpsb
inc
or
fs
inc
adc
mov
push
xor
jl
mov
ss
iret
out
xchg
cli
and
jg
dec
pop
iret
mov
leave
movsb
insl
sar
or
dec
repz
movsl
sub
mov
mov
les
nop
sub
addl
pop
mov
sub
pop
xor
add
adc
mov
sub
add
cmpl
outsb
sahf
push
sub
fadds
aam
lahf
ja
push
sub
cli
fisttps
popf
or
dec
jle
cs
cmp
and
pop
gs
mov
jmp
cmp
push
ret
cmc
mov
or
cmp
xchg
or
loope
jns
push
pop
std
ja
daa
sub
fcoms
cmp
cmp
pushf
pop
jnp
jno
xor
xchg
mov
xchg
stos
add
decb
sbb
mov
loopne
clc
arpl
push
iret
dec
push
test
mov
addr16
adc
cld
daa
and
cld
lods
and
add
incl
xchg
scas
cmp
inc
repnz
out
cs
addl
leave
popf
hlt
scas
xchg
stc
jae
add
fsubs
pop
das
xor
and
mov
in
cmp
movsb
pop
in
push
bound
imul
out
outsb
js
dec
and
xor
fcoml
call
pop
das
lret
xor
jge
sub
dec
adc
out
or
aad
out
ret
and
jb
jp
mov
idiv
inc
int3
sbb
pop
jl
imul
out
data16
sbb
iret
xchg
xorl
scas
push
in
shl
movsb
jecxz
push
ss
push
std
mov
cltd
int
divl
dec
jnp
mov
iret
xchg
idivl
in
xor
sbb
xorl
mov
aam
int3
leave
pop
imul
jne
or
lds
out
mov
pop
repnz
rclb
sbb
xchg
cmp
out
lock
dec
pop
movsb
inc
or
mov
js
hlt
inc
lret
loope
stos
ljmp
adc
repnz
adc
dec
jbe
adc
mov
aaa
lahf
mov
mov
test
pusha
dec
into
movsb
movsb
mov
nop
pop
scas
mov
stos
and
mov
pop
dec
push
leave
xchg
or
sub
mov
or
and
out
push
test
push
pop
jns
imul
fcmovnu
adc
mov
lods
sub
lea
sub
jecxz
xor
jp
jne
or
lret
ljmp
jmp
mov
push
lods
repz
adc
int
pop
out
out
popa
jns
cmp
cli
lahf
and
inc
xchg
lahf
repnz
rorb
jns
sbb
xor
jge
jmp
mov
and
sbb
push
cmp
add
pop
and
pop
bound
imul
leave
popf
pop
dec
cmp
les
inc
inc
out
insl
jb
or
out
andb
xor
jge,pt
rclb
arpl
mov
daa
popa
xor
dec
lret
xchg
xchg
push
xor
imul
dec
jmp
mov
mov
xchg
mov
test
movsb
fwait
stos
andb
sub
aaa
or
jb
rorl
pop
scas
jae
xor
xchg
xchg
xor
mov
push
js
add
mov
aam
mov
lods
bound
rcrl
xor
mov
arpl
scas
pusha
outsl
jl
mov
mov
rcr
xchg
dec
aam
jae
js
call
fimull
mov
sbb
xor
ficompl
sbb
jmp
jle
inc
stc
inc
sub
push
inc
sub
xor
xchg
push
fiaddl
push
mov
in
push
icebp
sub
xor
xchg
pusha
or
jl
mov
call
push
sbb
sub
jecxz
lret
shll
data16
cltd
dec
cs
dec
sahf
inc
xchg
mov
jne
jp
push
rorl
sub
into
js
imul
icebp
and
les
out
ss
mov
mov
dec
pop
out
sub
popa
mov
cli
fstps
push
iret
adcb
insb
pushf
push
mov
and
or
pushf
adc
xor
or
jbe
push
loope
jle
repnz
movsl
sub
std
push
sbb
xchg
jg
enter
lret
and
les
cmp
dec
lret
sti
enter
mov
jge
mov
mov
addl
stos
aas
stc
out
push
or
aaa
fcoms
sub
jmp
xchg
call
movsl
lcall
and
cmp
in
add
lods
sarl
imull
mov
ffreep
mov
int
xor
aad
add
inc
jns
pop
cmp
xchg
aad
cld
inc
mov
sub
cmp
push
lcall
mov
shlb
xchg
sarl
or
push
push
sbb
xor
lods
cmp
jle
dec
mov
pop
cmpsb
add
dec
nop
cli
repz
mov
lock
adc
add
jns
push
jmp
cs
mov
cmpsb
mov
movsl
push
imul
inc
insb
mov
pop
int
xlat
jmp
inc
cld
mov
mov
mov
dec
push
andb
lahf
inc
inc
inc
movsl
and
jl
jl
fstl
sbb
aad
bound
lods
aas
sarb
mov
sub
mov
sub
fsubp
imul
shl
ds
sub
lret
test
daa
outsb
inc
popl
push
dec
jmp
cmpsb
sbb
in
jl
xlat
push
pop
test
or
push
outsl
test
fdivr
addr16
ret
repnz
dec
dec
inc
and
pushf
test
pushf
sahf
dec
fidivl
jl
xchg
sub
movsl
cmp
sbb
in
jo
decl
loop
sbb
or
pop
mov
mov
mov
subb
mov
inc
stos
mov
movsb
stos
adc
outsl
fldl
repnz
push
xor
xor
jb
scas
enter
lea
shrl
movsl
xlat
sahf
add
pushf
jo
adc
outsl
fidivrl
pop
push
push
pop
pop
xor
mov
sub
jb
inc
out
add
jecxz
jle
add
ljmp
hlt
mov
loop
repnz
inc
dec
xchg
stos
lret
icebp
mov
ja
xor
iret
repz
adc
jp
shrb
mov
cwtl
lods
outsl
negl
lea
mov
adc
pop
jno
lret
ljmp
cvtdq2ps
xchg
sub
and
sbb
sti
fildl
mov
dec
push
ss
jl
mov
mov
jbe
mov
push
arpl
es
sub
negb
aam
sbb
test
or
ljmp
dec
mov
lahf
or
out
les
fcmovnb
push
lods
int
leave
movsb
xorl
test
jg
inc
std
divl
and
or
sahf
push
cltd
inc
mov
sub
dec
fucom
addr16
repz
arpl
fisttpl
rcrb
jmp
mov
pop
out
rcrl
in
sbb
sbb
jg
nop
adc
icebp
xor
add
cmp
int
test
xor
jb
lahf
cli
and
test
mov
imul
xor
sbb
sub
andb
sahf
mov
into
push
push
out
pop
xor
fstpl
int
add
push
push
jno
roll
xor
and
xchg
jno
adc
mov
outsb
aad
repnz
jle
xor
cld
mov
mov
or
bound
pusha
and
lods
and
jg
ja
hlt
mov
jns
sub
nop
cmp
sbb
ficoms
xchg
dec
fs
cmpsl
in
std
mov
push
jns
ljmp
mov
in
es
in
xor
cmpsb
fs
dec
ja
addr16
in
xor
les
sbb
out
adc
or
hlt
lea
lea
or
xor
push
daa
ret
js
cmp
daa
inc
in
or
or
lods
rorb
jb
push
dec
jl
outsl
mov
cli
jns
clc
mov
sbb
mov
cmpsb
fiadds
call
hlt
mov
and
ror
jl
loop
jbe
lock
cmp
leave
icebp
and
insb
shrl
xor
sub
mov
addr16
fcomps
outsb
fimuls
lret
clc
sti
cmp
dec
scas
insb
imul
xor
in
hlt
push
add
jno
fldcw
cmpsb
inc
clc
xor
adc
or
xor
xor
lcall
into
out
and
pop
push
outsb
adc
std
xor
rcrb
pop
dec
imul
test
dec
outsl
pushf
mov
lods
mov
imul
dec
jbe
push
sti
mov
fwait
addr16
out
fisubl
gs
or
add
cmpsl
or
mov
mov
cmc
iret
jae
je
jge
sbb
in
add
dec
push
cli
mov
aas
or
push
imul
pop
popa
push
pop
add
sti
and
vpsubb
xchg
ss
push
and
insb
add
cmp
ss
jge
sahf
aam
sahf
arpl
mov
pop
add
jns
adc
cmp
adc
sti
fsubrs
std
jne
out
pusha
je
sbbl
lds
xchg
popf
aaa
dec
ds
cld
xor
push
adc
rol
loopne
xor
pop
jno
pop
mov
mov
out
in
syscall
cmpsb
imul
dec
jo
inc
shrb
shlb
jp
test
out
cmpl
jmp
loop
push
pop
rclb
or
mov
sahf
loop
test
pop
jl
sbb
mov
fnstcw
sti
das
stc
popa
jns
lods
leave
test
loopne
insb
inc
ret
popa
in
mov
mov
add
xchg
dec
sar
js
adc
ljmp
jb
sbb
addb
fstps
jb
mov
lods
out
mov
movsb
mov
ljmp
rorb
mov
call
or
sub
es
int
jge
cs
adc
sub
xor
jmp
mov
in
push
push
shlb
in
sti
fwait
dec
xchg
ljmp
sbb
mulb
dec
shll
lock
ret
cmp
inc
ret
int3
sub
lock
xchg
sahf
shlb
adc
or
fiaddl
jge
sbb
inc
or
dec
pop
fs
sub
fmulp
sbb
adc
push
icebp
sbb
cld
xchg
mov
scas
fbstp
jno
lods
jge
lods
in
jmp
fnstcw
popf
jne
sub
inc
in
mov
ret
jecxz
sub
inc
sbbl
xor
mov
sti
andb
mov
iret
or
mov
xchg
into
scas
dec
sub
ja
aam
mov
nop
out
jmp
push
dec
pop
fwait
pop
dec
jo
ja
push
pushf
sub
add
enter
lds
dec
sub
push
lcall
test
add
clc
rorb
inc
add
or
xor
mov
jno
sbb
in
iret
sti
ret
je
jl
jb
nop
mov
popf
hlt
cli
fcomps
ja
jo
xchg
fcmovnu
std
int3
pop
pop
mov
lods
scas
daa
xchg
adc
and
mov
outsl
push
movsl
pop
scas
lods
mov
ds
mov
or
or
and
fwait
dec
push
out
sarl
setns
in
sahf
nop
arpl
add
jns
add
int
xchg
imull
add
test
sbb
test
imul
repz
xchg
mov
mov
adc
or
call
ds
cmp
outsb
jbe
enter
xchg
out
mov
stos
js
add
lcall
adc
loopne
jno
into
scas
ja
aas
mov
pop
fcomps
sub
in
jge
adc
cmp
ja
repnz
pop
loop
ljmp
jecxz
mov
and
lret
mov
push
testb
jno
xchg
mov
movsb
jns
and
data16
pop
je
std
es
mov
int3
xchg
mov
dec
dec
xor
inc
std
mov
xor
es
pushf
popf
jmp
stc
mov
xchg
and
sbb
fiaddl
add
adc
js
mov
rclb
addr16
add
mov
add
outsb
push
inc
lds
mov
out
or
push
daa
xlat
test
movsb
mov
mov
dec
jbe,pn
add
inc
fnsaves
out
mov
aam
imulb
fdivl
dec
mov
inc
push
mov
push
sub
inc
or
out
jbe
stos
adcb
pop
push
test
jae
dec
dec
outsl
and
jmp
sahf
divl
fs
cli
mov
xchg
or
ljmp
data16
lret
in
gs
rcll
stos
mov
mov
and
into
pusha
out
xchg
push
lock
mov
stos
loope
mov
aad
xor
pop
insl
pop
push
mov
mov
lock
adc
call
pusha
cld
push
push
shlb
push
pop
pop
add
add
jnp
pusha
pop
xchg
fs
insb
adc
in
push
test
scas
sub
lock
fs
ret
pop
icebp
cmp
and
xor
jmp
sarb
sub
xchg
and
jp
mov
nop
popf
pop
push
mov
push
dec
sar
mov
das
mov
dec
push
pop
add
imul
lock
fdivp
fldcw
mov
xchg
int
in
cld
xchg
mov
lea
mov
aad
mov
out
jb
mov
pop
add
scas
and
cmp
xlat
call
shrb
pop
popa
aaa
dec
daa
mov
dec
pushf
pop
jl
mov
sarb
mov
fisubrs
mov
lcall
ficoms
dec
sarb
cmp
dec
xchg
testb
sub
pop
stos
xchg
ss
dec
mov
nop
cmp
pop
sbbl
pop
outsb
sub
mov
mov
aas
int
xchg
dec
inc
cmp
pop
stc
push
or
or
roll
push
pop
stc
jecxz
fdivr
mov
or
sbb
dec
mov
pop
shll
rcl
push
dec
xor
aad
shl
jl
stos
out
inc
or
mov
dec
orb
mov
add
in
push
dec
cmp
push
out
addr16
or
in
les
or
repz
pushf
lret
insl
sahf
and
cltd
loopne
push
xchg
in
std
dec
test
cmp
fnstenv
repz
and
ret
pop
mov
testl
fmull
and
ss
addr16
xor
nop
sbb
or
movsb
inc
aaa
fisubrl
sub
ja
inc
ljmp
add
lahf
mov
xor
fisttps
jp
jle
out
popf
sar
lahf
into
mov
cmp
jnp
add
inc
outsb
in
jno
repnz
inc
fwait
lret
mov
outsl
fcomps
push
negl
or
push
les
flds
movsl
mov
cmpsb
xor
div
fdivrs
popf
and
idivb
inc
xchg
push
and
xchg
jle
xbegin
mov
fsubrl
mov
enter
or
into
dec
negl
adc
lahf
pop
pop
pop
xchg
sbb
and
pop
jmp
jbe
xlat
sbb
daa
cs
lret
dec
out
rolb
xchg
jecxz
add
push
fld
mov
mov
in
fs
push
mov
jbe
cmp
scas
xor
sbb
mov
stos
das
mov
sbb
sbb
xor
movsb
sbb
inc
into
fwait
mov
mov
in
jle
pop
jg
lret
xor
mov
out
inc
mov
and
mov
cld
daa
pop
pusha
pop
sub
ljmp
or
sbb
push
jno
es
cmp
pop
xlat
lea
cs
aas
dec
into
mov
imul
mov
dec
jo
movsl
out
add
or
dec
sbb
xchg
bound
ds
les
cmpl
fadds
or
cs
xchg
add
push
subl
cmpsl
shrl
aas
sbb
jns
nop
mov
bound
dec
lds
mov
in
mov
test
pop
mov
imul
cmp
dec
jmp
sub
xor
xchg
faddl
addr16
jmp
and
ret
xor
sbb
sbb
add
sti
lea
popa
out
popa
jmp
shlb
and
adcl
cmp
cmp
mov
inc
iret
xor
and
icebp
ds
shlb
adcl
push
in
dec
pop
inc
xor
fwait
scas
sbb
jnp
add
out
jge
mov
cmc
pop
and
cmpsl
maskmovq
idivl
lock
cmc
jmp
cld
pop
scas
adc
mov
fistps
out
aaa
xchg
push
xchg
lods
push
xchg
clc
mov
sub
xor
cli
or
fmul
fmuls
jmp
pop
cs
ljmp
add
mov
xchg
mov
cmp
mov
ds
mov
sub
xchg
pop
push
and
dec
popf
leave
mov
jb
jnp
loop
aas
pop
fcompl
jo
outsb
repnz
push
inc
je
or
pop
fcoms
out
rcrl
sub
push
pop
pop
lret
js
movl
mov
mov
lds
gs
sahf
push
mov
mov
cld
fnstenv
xor
mov
adc
mov
adc
or
in
xor
pop
test
insb
push
cmpsl
or
cmp
pop
mov
pusha
pusha
or
int3
dec
bound
pop
fdivrs
ficoms
stos
dec
mov
or
notb
mov
mov
xchg
ret
std
lods
es
das
lods
dec
jg
and
cs
enter
mov
adc
outsl
cmpsb
idivb
scas
push
or
pop
jmp
sbb
cltd
sub
mov
mov
incl
add
jae
inc
push
push
sahf
mov
xchg
in
jno
cmp
js
insl
clc
fs
and
rolb
jbe,pn
inc
sub
stc
lock
adc
inc
in
sbb
jmp
sbb
test
test
dec
sbb
jg
and
popf
fcoms
fs
addb
add
sub
push
testb
popa
jle
sbb
repnz
xchg
shl
or
popf
rorl
jl
iret
clc
dec
adc
movb
pop
popf
xor
mov
ja
lock
push
inc
movsl
pop
mov
je
add
or
insb
orb
xchg
xchg
mov
push
and
and
xchg
into
vmovaps
loopne
hlt
fcompl
aaa
mov
mov
dec
mov
adc
push
and
loop
add
out
jo
cld
call
mov
in
and
scas
mov
mov
jo
sbb
pop
inc
add
cld
xrelease
mov
cmp
xchg
scas
iret
add
xlat
pop
or
dec
xchg
enter
and
mov
xchg
hlt
into
pop
daa
add
mov
mov
imul
dec
int
mov
int
mov
loopne
xchg
jo
push
xchg
pushf
inc
scas
sub
hlt
jo
mov
int3
out
mov
inc
cmp
aam
lret
daa
cwtl
sbb
in
or
jl
dec
jo
mov
mov
jp
adc
and
inc
jnp
inc
add
xlat
xor
jmp
cs
mov
adcb
lret
mov
inc
into
sbb
xchg
cmp
cwtl
mov
fs
out
add
cltd
xchg
out
sbb
pop
inc
dec
inc
push
pop
xor
cmpsb
cmp
mov
loop
cmpsb
xor
pop
pusha
jmp
xor
add
inc
and
pop
out
stos
cmpsl
adc
mov
pop
push
rcrl
inc
xor
fcmovbe
ljmp
mov
cwtl
xor
das
cmp
lods
icebp
gs
arpl
adc
inc
inc
jg
mov
sub
les
fisttpl
pop
gs
pop
orl
mov
js
js
xchg
cmc
fs
jne
or
adc
std
mov
lcall
dec
add
lds
jne
out
mov
stc
outsb
outsb
push
daa
jae
popa
outsb
insl
mov
jbe
lock
pop
xlat
test
jne
pop
pop
pop
and
mov
mov
imul
enter
test
xor
shrl
inc
pop
cmp
lret
ss
or
aad
fs
xor
sti
cmp
das
sub
fmuls
mov
lods
add
outsl
cmp
imul
fadds
pop
cmp
ret
jecxz
in
cmp
xor
in
faddl
push
mov
lahf
lea
hlt
popa
cs
xchg
bound
sbb
mov
mov
addr16
inc
inc
mov
gs
push
ret
and
das
pop
pusha
shrb
push
adc
fnstenv
pop
fs
addr16
add
lret
fcmovu
ljmp
pop
add
push
lea
fadds
cli
mov
xlat
insb
pop
mov
cmp
mov
xor
inc
inc
xlat
dec
ja
sbb
imul
pop
mov
arpl
ss
jo
ljmp
int3
dec
fs
dec
push
lret
xchg
test
je
cwtl
push
les
dec
dec
aas
mov
aad
loop
push
ds
inc
xor
fnsave
in
scas
into
in
add
mov
fmull
and
or
push
daa
out
iret
sbb
test
sub
int
add
aaa
inc
enter
hlt
aam
mov
adc
std
aad
mov
pusha
mov
ret
xorb
mov
aam
mov
mov
or
jnp
mov
sub
call
sbb
mov
add
inc
jge
pop
mov
jge
inc
pusha
pop
mov
mov
insl
adc
push
mov
mov
nop
pop
in
lret
sbb
mov
lods
pop
insb
and
std
pop
push
mov
insb
jle
sbb
push
insb
shlb
xlat
das
pop
adc
sub
push
test
and
fs
cwtl
pop
add
std
and
sub
inc
insl
mov
sbb
lcall
jne
int3
fmul
lods
lods
movsb
test
sbb
cld
push
hlt
clc
cltd
addl
inc
xor
and
test
popf
les
mov
lcall
mov
lret
dec
cmp
lock
add
push
imulb
pop
ja
out
arpl
and
sbb
adc
push
mov
test
dec
stos
dec
pop
xlat
add
mov
inc
pop
mov
adc
sub
cltd
adc
pop
push
ret
or
xchg
push
fwait
pop
add
and
sbb
fcmovb
push
lock
sbb
push
xchg
hlt
adc
mov
hlt
adc
sbb
out
push
pop
shlb
int3
stos
into
cmp
imul
out
scas
loope
mov
or
outsl
mov
enter
cmp
add
xor
mov
scas
stos
xchg
mov
mov
fbld
adc
push
fdivr
leave
movsb
pop
aas
mov
cmp
sarb
arpl
cmpsb
popf
lret
out
jb
cltd
loopne
and
jg
enter
mov
add
loope
std
movsl
mov
aam
ror
jbe
jbe
pop
loop
repnz
stos
xchg
int3
push
xorb
fisubl
in
ss
mov
inc
es
or
mov
push
push
pop
xor
bound
cmp
fadds
xlat
cmc
dec
mov
jle
add
inc
lcall
mov
sbb
mov
loopne
mov
das
cld
xor
inc
rep
push
sbb
xor
int3
sub
icebp
push
test
mov
pop
std
cld
aam
std
jnp
xor
cwtl
xor
arpl
add
sub
and
js
sub
add
add
cmpsb
xor
mov
xchg
ss
xchg
sbb
mov
js
lods
cwtl
jge
cmp
loopne
pusha
cmp
dec
repz
cli
lds
mov
add
adc
pusha
xchg
lcall
jp
mov
outsb
add
movsb
xchg
adc
inc
inc
fildll
lock
adc
cmp
popf
inc
mov
or
cld
test
jae
mov
dec
pop
int
loop
push
dec
cmc
rorl
pop
das
aad
cmp
icebp
cltd
fldcw
rcr
or
lea
dec
ss
subl
xchg
sarl
inc
sbbb
outsl
jae
cmp
jl
ret
shll
dec
mov
test
repz
dec
mov
push
inc
xchg
sbb
xor
inc
jnp
aad
push
dec
or
data16
lea
test
add
outsl
repnz
xchg
lahf
movsl
and
mov
mov
dec
imul
aas
and
sub
or
sub
push
addr16
test
notb
js
cwtl
aas
xor
into
cltd
mov
lret
cld
xor
cmp
lock
cmp
and
movsb
rcl
adc
cmpsb
push
aas
sbb
inc
mov
sbb
movsb
es
pop
xchg
dec
mov
mov
jno
pusha
stos
adc
mov
jne
or
data16
lods
out
aam
xchg
ret
stc
inc
stc
add
and
sahf
ret
pop
lock
jecxz
and
push
shrl
sbb
xchg
mov
mov
xor
jl
clc
mov
add
mov
push
mov
test
loop
pusha
in
aam
call
nop
lock
int3
and
mov
adc
stos
jmp
loope
xchg
inc
cld
pusha
mov
and
divb
cmp
xchg
mul
test
jns
pop
mov
outsb
or
fildll
sub
xchg
xchg
out
lods
pop
scas
sub
xor
sbb
add
fstps
mov
pop
mov
adc
fnsave
push
rcl
pop
ljmp
lret
cmc
cmp
movsb
xlat
fstps
xorl
insb
or
lea
push
popf
enter
sahf
shll
xor
test
ljmp
cs
fisttps
addr16
lds
lock
dec
rclb
les
or
mov
movsl
hlt
jno
out
aas
adcb
or
adc
jne
outsb
adc
into
aam
mov
inc
sbb
mov
push
push
pop
loop
outsl
push
inc
icebp
push
scas
push
out
mov
jnp
mov
inc
lret
push
aas
pushf
mov
lds
push
lds
mov
jnp
data16
push
or
insb
sahf
mov
jo
add
in
stc
mov
dec
push
adc
push
imul
mov
das
cmp
push
jne
mov
enter
fsubrl
rorl
dec
int3
push
gs
in
add
in
lock
jge
fwait
inc
stos
pop
subb
scas
clc
outsb
mov
add
std
leave
arpl
xor
data16
jo
push
sbb
ret
dec
mov
and
jb
rclb
push
in
jecxz
fildll
pop
lahf
orb
mov
jno
or
shrl
sub
out
lret
mov
xchg
xchg
lcall
pop
fistpll
les
push
sahf
push
push
test
lahf
sti
xchg
shll
add
andb
sbbb
movsb
cwtl
dec
in
incb
pop
and
inc
in
inc
adc
sbb
dec
adc
or
out
sub
out
out
pop
hlt
cltd
xchg
jns
inc
pusha
dec
in
and
lods
dec
ficompl
ret
je
aam
sub
mov
cmpsb
push
fstpt
rclb
lret
aam
mov
pop
fwait
ljmp
lret
mov
lret
push
outsl
arpl
aam
push
pop
cmp
sbb
xchg
out
xchg
cltd
mov
dec
cld
scas
cmp
sbb
idivb
and
add
clc
pop
lret
adc
cmp
xchg
or
mov
xchg
pop
repz
jae
stos
and
add
fildl
aam
and
ss
xor
sbb
jns
je
clc
dec
inc
pop
inc
outsb
push
push
cli
loopne
lods
cmpsl
xchg
es
jns
adc
or
sarl
inc
or
cwtl
pushf
pop
and
sbb
add
insb
and
push
mov
mov
lods
int
xor
mov
push
pop
jmp
adc
repz
popf
sub
pop
xchg
incl
popa
inc
sbb
cmpsl
pop
jns
test
iret
cld
inc
and
das
push
imull
mov
jae
sahf
jmp
shll
push
out
outsl
daa
xchg
push
loope
ds
xchg
sub
out
rcr
in
stc
repz
add
xor
inc
repz
xor
mov
jp
jo
js
add
cli
in
aas
arpl
cs
in
ds
rol
bound
push
hlt
push
loopne
in
xor
lea
std
push
popf
xchg
fwait
mov
ss
cmc
jb
sbb
clc
mov
in
add
pop
and
ret
imul
xchg
pop
out
xchg
repnz
mov
push
aas
and
aaa
cmp
inc
push
push
outsb
pop
or
and
mov
sub
shrb
inc
mov
xchg
mov
not
push
pop
xbegin
mov
cmp
mov
lret
jo
imul
pop
jae
pop
cltd
jb
sub
stos
das
int3
mov
mov
neg
sbb
pusha
mov
jmp
je
popa
bound
cs
pushw
arpl
addr16
es
xlat
sbb
fwait
xlat
jmp
push
leave
mov
inc
je
movsb
sahf
rolb
pop
orb
cmpsl
loopne
inc
pop
sbb
and
jbe
xor
push
add
sti
sub
iret
rol
jae
lock
sbb
mov
jmp
or
fistl
mov
cmp
outsb
adc
mov
cmp
xor
xor
lock
into
jp
lahf
mov
push
jno
fimull
xchg
push
add
cmpsl
push
add
adc
xor
sbb
push
or
sbb
pminsw
adc
add
inc
loope
jg
outsb
jo
dec
xchg
adc
loope
out
test
cld
insl
icebp
outsl
mov
or
loope
pop
jae
xchg
jae
jnp
testb
xchg
xchg
call
pop
sahf
or
bound
cmp
jno
adc
mov
inc
lret
mov
mov
xlat
mov
rorb
xor
ds
loop
fwait
mov
paddusw
dec
dec
inc
mov
shl
pop
mov
push
mov
mov
xchg
test
add
mov
into
mov
mov
mov
addr16
cmp
mov
in
cmpsb
push
cs
ret
shr
mov
in
or
dec
dec
enter
jns
enter
sbb
stos
shll
inc
cmp
dec
aas
inc
leave
xor
add
push
shr
out
out
push
add
cld
cmp
mov
inc
inc
clc
call
dec
jecxz
divl
lret
xor
cmp
in
push
pop
insb
lock
out
mov
sub
in
push
cltd
mov
push
push
jno
push
cmp
mov
je
stc
mov
dec
and
push
test
push
inc
shll
and
sub
in
lds
in
ret
arpl
or
jge
enter
dec
and
outsl
xchg
xchg
and
sbb
add
stos
adc
lds
add
or
push
mov
das
sti
mov
push
inc
jo
stc
scas
pop
xchg
or
jge
adc
out
add
inc
nop
pop
enter
mov
sub
xchg
jae
adc
or
sarl
test
cltd
aam
mov
rorl
cmpsb
filds
stc
xor
rcr
push
nop
push
arpl
jb
daa
or
fsub
lds
xchg
and
js
out
out
xlat
xchg
mov
sub
sbbb
inc
sbb
mov
sub
outsb
ja
cmp
and
xchg
pop
push
jbe
insl
out
ljmp
adc
lods
enter
enter
scas
out
out
jecxz
inc
push
xchg
rcl
gs
sti
movb
xor
mov
or
scas
mov
roll
sbbb
lret
adc
dec
pop
cltd
in
insb
pop
gs
mov
orb
fmuls
loopne
push
jp
sbbl
dec
rcrl
add
out
sub
fnsave
aaa
je
mov
scas
pop
mov
jmp
mov
aas
leave
pop
insb
and
arpl
mov
lock
dec
movsl
shll
sub
imul
pop
sarl
addr16
lods
jns
add
std
sub
cwtl
orl
dec
inc
mov
nopl
or
cwtl
movsl
ss
mov
push
and
mov
out
cmpsl
sub
and
inc
mov
jne
xor
pop
lcall
jne
popa
imul
ja
add
addr16
mov
movsb
mov
iret
stc
adc
stos
roll
mov
xchg
lahf
push
fiaddl
push
cmpsl
push
dec
pop
icebp
pop
jno
icebp
adc
cld
adc
mov
movsb
aaa
or
pusha
repz
cwtl
sbb
push
mov
mov
and
adc
adc
lret
sbb
into
test
cmp
lock
push
lds
movsl
mov
xchg
addr16
lret
mov
int3
fcoms
ds
cwtl
ds
jb
lret
cmp
data16
pop
ds
sub
les
push
div
push
enter
adc
cltd
push
jmp
sbb
cmp
xchg
sub
sub
xor
test
add
decl
stc
sub
xchg
xchg
sti
pop
push
fldt
jno
pushf
test
mov
sub
out
and
clc
testb
addr16
jbe
popf
mov
out
fsubs
aaa
int
jb
aaa
cmpsb
sub
mov
pop
fldt
pop
roll
inc
cmpsl
push
add
mov
xchg
pop
add
mov
sti
sbb
gs
fnstcw
lcall
xor
in
test
or
xchg
ret
shlb
mov
repz
xchg
push
rorl
pop
inc
popf
sub
jae
pop
and
jmp
icebp
aas
movsb
or
test
pop
push
fbstp
sahf
popa
mov
ret
clc
cli
insb
stos
jmp
jmp
stos
imull
dec
mov
jle
neg
fnsave
pop
popa
mov
popa
mov
arpl
jp
shll
aas
or
xchg
and
je
aas
insl
data16
inc
aas
in
mov
fmuls
mov
std
loop
jb
xchg
dec
push
into
or
insb
ljmp
lock
fucomip
lret
fistl
add
inc
sub
cld
call
clc
mov
pushf
dec
cld
pop
pusha
int
pop
sbb
sub
adc
jbe
xchg
jae
mov
das
inc
lods
daa
in
stc
in
call
mov
inc
shl
stc
mov
rol
or
pop
imul
pop
out
jae
and
pusha
outsb
rcrb
pop
mov
fucomi
jne
ljmp
hlt
jne
insl
pop
add
imul
jno
mov
out
xchg
xchg
adc
adc
fnstsw
push
fisubs
imul
pop
ljmp
loopne
cmpb
mov
aas
add
aam
sub
lahf
mov
pop
arpl
aad
out
sub
xchg
out
jle
xchg
movsb
xor
mov
filds
sbb
push
fcoml
into
repnz
loopne
mov
test
xlat
cmp
sub
jae
and
jbe
sub
lcall
in
dec
test
xor
scas
mov
icebp
mov
jae
out
stc
test
lret
push
stos
jp
add
inc
clc
cmp
jo
inc
repz
imul
arpl
aaa
out
mov
scas
sub
jl
bound
pushf
sbb
sti
bound
xlat
xchg
aam
xlat
fldenv
imul
idivl
or
popf
push
shlb
pop
sarb
mov
dec
mov
ficoml
int
roll
sub
sbb
icebp
xlat
pop
in
or
fdivs
aad
sub
xlat
pop
gs
ja
mov
cmp
lcall
and
mov
sbb
sub
ljmp
push
aam
dec
sub
faddl
dec
mov
lcall
adc
lcall
ljmp
ror
adc
daa
jns
dec
pop
push
mov
loop
jns
sbb
dec
imul
add
jno
pop
mov
in
jg
cmp
movsb
lods
into
pop
into
jns
movsl
daa
hlt
enter
mov
out
and
jl
clc
jmp
test
add
mov
insb
andl
adc
daa
xorb
pop
sti
ds
cmp
das
adc
pushf
adc
xchg
jnp
movsl
idivb
outsl
jne
mov
fldl
adc
and
das
mov
mov
shrb
mov
pop
mov
adc
and
in
sub
pop
xchg
mov
ljmp
shl
mov
jl
mov
mov
inc
bound
lods
rcrb
push
inc
mov
sbb
fbstp
or
dec
lret
add
in
xor
ss
inc
mov
lcall
popf
mov
mov
sub
sarb
out
dec
jecxz
xlat
int
sub
xchg
jae
test
insl
fildl
or
stos
mov
test
sahf
push
mov
sub
dec
jb
ret
push
sahf
jecxz
popf
and
mov
or
mov
das
pop
sbb
xchg
call
test
cltd
cmp
xchg
lcall
outsb
mov
inc
pushf
and
jno
jle
sub
in
sub
sbb
xchg
or
ret
and
loopne
jne
fcomps
inc
fldt
into
dec
or
mov
push
adc
cmp
cmovnp
ret
sub
mov
inc
push
mov
ljmp
pop
pop
iret
push
mov
icebp
push
lret
mov
pushf
shr
jle
pop
sub
cld
mov
or
leave
push
imul
lock
fmull
dec
jl
sti
shlb
or
adc
jp
loope
jnp
dec
lahf
inc
xchg
pop
clc
xchg
jb
jle
jns
js
stos
rol
and
fmul
loop
jge
adc
scas
pop
out
mov
xchg
lock
test
sub
add
shlb
pop
pop
mov
int
xor
repz
add
mov
arpl
mov
imul
not
inc
push
sbb
inc
add
push
in
push
xor
pushf
sahf
push
push
and
mov
inc
cmpsb
sbb
roll
add
stos
out
xor
test
mov
subb
stc
cwtl
lahf
lock
lret
mov
cmp
cs
lcall
mov
and
cmc
pop
jp
pop
into
scas
or
int3
push
loopne
cltd
outsb
punpcklbw
fbld
xor
arpl
push
fs
cmp
rep
xor
jmp
jbe
imul
sbb
xchg
iret
jl
mov
cltd
shll
push
or
mov
pop
pop
push
out
mov
xchg
pop
or
popf
cmp
std
push
je
adc
dec
ret
mov
stc
jecxz
push
ljmp
outsl
pop
mov
decb
rorb
mov
ret
test
jle
negl
mov
movl
imulb
insb
insb
daa
mov
pandn
lcall
cltd
push
inc
add
xor
sbb
pop
cld
lret
pop
dec
pop
jl
xor
outsb
je
sbb
test
leave
fucom
stos
sbb
push
jg
cmpsb
movsl
in
mov
xchg
or
dec
or
inc
fsubrs
or
jo
andl
cmp
fdivs
sub
loopne
push
mov
test
or
add
adc
and
test
jno
sarb
nop
cltd
imul
and
cld
das
sub
push
mov
daa
ljmp
stos
cmp
xbegin
arpl
jp
adc
push
ret
and
xor
sub
inc
mov
dec
loope
les
fildll
inc
jbe
in
inc
shrb
pop
and
cmp
mov
leave
pop
loope
and
mov
mov
or
punpcklbw
mov
ss
pop
popa
orb
add
lcall
xor
std
pop
inc
jecxz
sbb
lods
xchg
adc
fwait
imul
push
in
and
pop
ja
pop
popf
pop
sti
inc
cmp
sub
ljmp
mov
rorl
inc
mov
repz
addr16
jmp
pop
outsl
fnsave
adcb
and
mov
out
jno
movb
and
pop
add
nop
out
mov
mov
push
push
inc
mov
jns
pop
mov
push
sbb
mov
in
xlat
dec
mov
sub
sbb
xchg
jl
mov
es
bsr
fisubs
test
add
fmull
jne
lahf
in
sarl
cmp
jg
inc
rol
cwtl
cmp
faddl
lea
ja
js
cmpsb
inc
adc
leave
test
mov
mov
and
popa
or
fs
fnsave
adc
leave
popa
jle
test
xchg
icebp
shll
movsb
push
mov
jge
sub
es
outsb
sahf
jns
dec
cmpsl
lds
inc
jo
xor
mov
movsb
cmpsb
sbb
into
mov
andl
cltd
call
aam
cmpb
adc
cltd
test
sub
cmpxchg
mov
mov
or
sbb
cmp
int
lods
cwtl
leave
pop
sub
pop
sbb
repnz
push
pop
cs
jne
pop
imulb
inc
dec
inc
jmp
ret
cmp
es
aaa
push
or
addl
adc
sub
or
int
mov
mov
mov
jp
pop
in
lea
lods
jae
clc
pop
and
rol
push
and
negb
mov
insl
aam
xchg
pop
jne
fsub
jge
lret
mov
out
ss
out
add
movsb
push
out
idiv
cmp
dec
scas
insl
loop
inc
scas
test
stc
std
mov
jo
inc
push
jecxz
add
in
test
imul
inc
lods
and
addl
cmpsb
aaa
inc
add
fidivs
data16
mov
and
enter
rcll
add
dec
sub
lods
pop
or
movlps
jecxz
jno
lock
jecxz
sbb
test
imul
decl
dec
pop
cvtps2pd
pusha
sub
mov
fstl
sbb
cltd
inc
sub
mov
sbb
xor
mov
mov
in
loopne
sub
add
jns
mov
dec
aas
imul
jecxz
lret
push
mov
lret
int
and
outsb
inc
cltd
pushf
iret
pop
xchg
push
add
push
mov
movsl
sub
lods
jp
std
lahf
ret
and
and
inc
movsb
out
jle
mov
scas
repz
pop
jae
mov
pop
fdivp
hlt
push
or
in
mov
cmc
sub
mov
flds
fdivs
icebp
jne
mov
cld
inc
mov
aas
xor
dec
mov
or
stos
or
dec
pop
rcll
sti
lret
inc
dec
sbb
lock
cmpsl
cmp
or
mov
shll
ljmp
sub
out
mov
pop
inc
xorl
dec
inc
dec
scas
cltd
jge
mov
subl
jae
xor
daa
popa
add
ftst
sahf
mov
testl
call
push
xchg
xlat
je
fimuls
add
data16
pusha
test
out
push
fnstcw
lahf
jmp
pusha
xchg
in
cli
testb
mov
sub
xlat
inc
mov
mov
pop
mov
scas
scas
jecxz
test
negb
and
outsl
jle
pushf
mov
in
hlt
xor
add
mov
xchg
sbb
cmc
out
mov
mov
cmpsb
popf
gs
cli
xor
pop
push
xchg
push
mov
loop
lods
scas
mov
jo
jnp
and
mov
jmp
jns
aas
out
flds
int
lods
std
sub
dec
mov
pop
bound
aaa
insl
xchg
cli
retw
scas
subl
adc
inc
iret
and
xlat
adcl
push
sbb
out
push
and
inc
mov
mov
lock
push
call
dec
mov
dec
stc
ljmp
lcall
sub
mov
js
push
ret
jl
aaa
jmp
push
pop
imul
icebp
outsl
push
imul
add
mov
out
or
adc
add
pop
hlt
jl
cmp
testl
pop
mov
fildll
jbe
mov
movsb
test
fcoms
inc
lock
mov
mov
out
sub
xorl
lcall
dec
pop
cld
cltd
iret
mov
es
data16
shrw
inc
stc
sbb
sbb
pop
push
pop
enter
inc
lea
push
mov
xchg
xchg
leave
imul
inc
sbb
cmp
jae
sub
sahf
xchg
in
sbb
dec
push
subl
mov
leave
loopne
jns
add
lret
push
popa
rcrb
mov
fists
pop
lcall
std
adc
adc
xor
cli
int
pop
arpl
into
xor
ret
jmp
mov
add
jne
cltd
sbb
mov
lret
les
cmpsb
sbb
stos
test
mov
nop
outsl
push
pop
insb
adc
adc
push
xor
cmc
cmc
jle
adc
push
ret
outsb
int
movsb
rclb
and
push
xchg
arpl
push
repz
xchg
push
mov
icebp
insb
not
in
mov
adc
push
cmpl
aam
jge
jmp
in
test
add
enter
outsb
mov
jbe
xor
cmp
push
out
lds
lods
add
popa
in
push
out
fisttpl
jle
stos
lahf
mov
les
xchg
mov
mov
call
out
cld
adc
negl
loop
maskmovq
xchg
cwtl
sub
push
pusha
ss
into
mov
lods
pop
and
push
mov
popf
jne
mov
mov
xor
mov
lret
cmp
in
xor
mov
mov
mov
ds
sub
jno
andb
into
sbb
jmp
ljmp
add
jl
jbe
push
sbbb
jns
lods
out
ja
popa
ret
add
mov
dec
stos
pop
push
cmp
mov
js
lods
movsl
xor
and
int3
daa
mov
jge
inc
cli
out
aam
sub
sub
mov
movl
scas
idivl
or
sbb
popa
push
xchg
repz
or
xor
push
shrb
lods
xchg
inc
fildll
dec
pusha
pop
cld
stos
sbbb
cmp
dec
jl
mov
xor
lahf
insl
push
xor
neg
rcrb
sbb
inc
push
pop
and
xchg
fisttpl
push
movsb
xor
xor
sti
push
adc
imul
mov
mov
scas
sbb
in
mov
push
in
sahf
mov
add
adcb
cli
or
and
lock
std
es
shlb
adc
xchg
test
mov
daa
movsb
sub
push
gs
mov
je
fcoml
sub
jns
adc
jno
pop
sahf
adcl
mov
push
mov
rclb
jle
push
mov
xchg
iret
imul
push
hlt
jbe
mov
push
jne
jl
push
sub
and
xchg
jbe
adc
mov
xor
cmc
js
xchg
icebp
aas
ja
data16
clc
sub
rolb
andl
sub
push
sahf
shl
mov
rol
sub
and
jns
push
and
jecxz
lret
add
mov
cmp
ret
add
mov
or
test
aam
lcall
or
in
lods
push
sub
pop
cs
das
push
cmp
mov
mov
xlat
shll
mov
or
sub
inc
mov
popa
repnz
enter
inc
add
stos
jmp
mov
cmpsl
hlt
mov
xchg
xchg
icebp
daa
jge
mov
clc
fs
dec
cmpb
push
pop
push
ss
sahf
outsb
nop
fdivrp
add
aad
sub
insb
dec
jb
cli
out
ss
out
push
dec
xchg
stos
pop
or
sarb
sbbb
and
jmp
outsb
mov
xor
in
fmul
mov
aaa
fs
xor
mov
jmp
or
jo
pop
hlt
xchg
mov
test
sub
jns
rcrl
dec
jmp
inc
xchg
cmp
adc
pusha
ret
pop
aam
inc
cmp
dec
popa
pop
jb
sbbb
int
push
jp
xor
cltd
ret
push
pusha
shrb
stc
fstpt
xlat
pop
push
adc
push
fldenv
nop
push
test
loopne
lahf
movsl
stc
push
and
shll
in
add
dec
in
sbb
or
xchg
and
dec
dec
aam
and
xchg
jp
repnz
lds
dec
decl
out
xor
push
xor
lods
les
mov
scas
fidivrl
ret
ficomps
sar
aad
pop
push
scas
rcll
das
xor
sub
cmp
imul
dec
xchg
push
imul
xchg
aas
pop
xchg
ret
pop
mov
dec
mov
mov
outsb
loop
ljmp
icebp
sub
into
jl
mov
mov
inc
jl
fnstenv
cmp
push
inc
adc
add
and
add
push
xor
push
mov
arpl
scas
cmp
sub
pop
das
les
sub
sub
in
push
fistpl
dec
incb
testl
xor
jle
fmul
or
and
faddl
insb
into
cmp
inc
fisubs
cmpsb
and
enter
in
and
mov
push
sbb
or
ret
inc
repnz
int3
push
inc
fcmovbe
and
xchg
outsb
xchg
clc
push
lahf
mov
jl
cmp
mov
and
mov
cmc
pop
inc
mov
fisubs
jno
loopne
dec
imul
jmp
push
std
ret
add
loop
and
out
cmp
ficomps
mov
ja
pop
xor
lock
jle
idivb
push
mov
xor
add
popf
outsb
sbb
or
inc
mov
ficomps
scas
insb
mov
sti
int
sub
mov
lods
popa
xorb
aaa
push
jp
and
lcall
cmpsl
lods
lret
xchg
pop
or
mov
vphadduwd
push
mov
aas
nop
addb
inc
or
cmp
and
shrb
xor
inc
jne
icebp
push
jnp
out
aam
int3
roll
lock
cmp
pop
in
bound
fwait
outsb
jmp
cmp
add
outsb
test
ljmp
push
je
int
scas
sub
ja
movsb
enter
popf
cmp
testb
jmp
imul
outsb
add
mov
jnp
stos
lock
sbb
setnp
sub
test
adc
cmc
adc
aas
fsubr
inc
sub
fidivl
pop
test
nop
pop
adc
or
aaa
sbb
xor
sub
jge
push
std
adc
outsb
sub
in
je
sub
adc
mov
aas
mov
pop
sub
stc
push
xor
push
jp
ja
mov
mov
call
mov
nop
popf
mov
call
test
or
lret
leave
lret
mov
mov
insl
mov
loopne
or
cld
inc
jo
rclb
sahf
mov
orl
jl
mov
pop
mov
fsub
and
inc
xchg
lret
xchg
add
sbb
cmp
add
mov
jp
jns
xchg
inc
push
cltd
imul
aam
pop
jo
mov
adc
scas
loop
pop
pop
test
in
push
icebp
jno
outsb
outsl
fwait
pop
loopne
add
lret
adc
stc
xor
cmp
mov
dec
cltd
lods
stos
xchg
popf
out
add
andb
xlat
push
leave
pop
fucomip
xchg
add
lcall
into
inc
sub
and
stc
daa
push
movl
jmp
mov
cwtl
pusha
sti
and
es
test
decl
dec
int
jae
das
push
dec
pop
push
mov
test
cmp
inc
inc
pop
pop
xchg
cli
xchg
xor
adc
cmpsb
loopne
and
push
mov
mov
dec
enter
scas
pop
fistpl
pusha
cmp
cmpsb
bnd
xchg
ret
pop
lret
mov
lods
repz
xchg
fdivl
mov
or
jnp
out
pushf
or
mov
lahf
pop
jnp
pop
andl
repz
out
repnz
verw
fs
arpl
jg
jbe
xchg
dec
jns
xchg
pop
mov
movsl
mov
scas
idivl
sbb
idivb
xor
aaa
mov
into
lds
xor
jmp
insl
lds
cmp
negl
bound
popa
xchg
and
adcl
es
clc
sbb
mov
or
inc
cmp
jge
mov
jno
mov
mov
int3
fnstcw
mov
mov
xchg
and
mov
push
push
lret
lret
notl
and
ret
lds
inc
sti
leave
test
bound
and
mov
iret
adc
sbb
pop
sti
jl
scas
dec
addr16
fstpl
mov
lock
sbb
push
into
push
scas
xchg
lods
or
cmp
and
mov
loop
cmpsb
or
jge
insb
in
dec
add
cli
aaa
lahf
mov
out
pop
jae
push
std
fldt
push
cmp
lock
adcb
call
mov
imul
andl
stos
mov
mov
xlat
xor
addr16
mov
inc
pop
es
mov
xchg
fldt
push
divl
imul
sbb
rclb
sbb
fistpll
mov
mov
jle
pop
sbb
fwait
xor
pop
or
pop
sbbb
push
out
stc
leave
add
xor
scas
add
pop
and
xchg
clc
ret
and
jmp
cmp
pushf
stc
repz
pop
bound
push
add
ljmp
cltd
inc
push
push
adc
dec
lahf
cmp
cmc
jb,pn
add
jnp
mov
bound
adc
lods
dec
leave
mov
cltd
rol
xlat
pop
mov
jno
sti
xor
rcll
outsl
outsb
jnp
mov
mov
adc
imul
push
fcmovnbe
cmp
add
inc
addb
inc
or
fcoms
jmp
jg
jp
lods
aam
xor
adc
inc
cs
xchg
xchg
cmpsl
cmpsb
add
dec
out
js
nop
sub
xchg
das
int3
jnp
shrl
mov
jno
outsl
inc
lds
hlt
addl
cmp
popf
cmp
notb
mov
test
stos
push
xchg
jbe
dec
rclb
nop
dec
mov
mov
mov
mov
mov
insb
push
frstor
cmpsb
int
xor
mov
mulb
sbb
das
scas
aad
insl
mov
pop
mov
lds
or
fimull
ss
mov
sbb
lea
mov
pop
xor
mov
pop
loope
pop
dec
mov
adc
jle
mov
mov
dec
rorl
clc
sub
mov
push
pushf
push
test
test
rcr
test
mov
or
mov
cli
gs
lea
daa
insb
or
mov
test
test
les
inc
pop
adc
push
into
icebp
int
jge
xchg
mov
clc
ja
int3
data16
or
pop
popf
push
adcl
fst
inc
andl
aam
mov
jb
sub
dec
add
adcb
rorb
out
mov
insl
pop
xor
out
mov
aaa
add
iret
xchg
cmc
hlt
sub
add
mov
xchg
jnp
icebp
gs
lock
sbb
xchg
adc
xchg
ss
inc
bound
iret
push
push
cmc
xchg
cld
hlt
iret
add
inc
imul
in
xor
insb
lds
push
test
out
ds
dec
jae
pop
or
aaa
or
lds
imulb
jae
mov
inc
cmpl
mov
pop
push
pop
imul
inc
outsl
add
scas
adc
outsl
inc
cld
shlb
test
fisttpl
xor
aas
sahf
call
pop
test
sub
outsb
or
add
pop
pop
mov
and
xor
jnp
aaa
xchg
jecxz
lock
lret
sub
cltd
jns
xchg
pop
xlat
mov
daa
pop
mov
mov
fs
xchg
subl
mov
fisttpll
sub
adc
repz
dec
adc
pop
cli
sarl
mov
mov
ljmp
cwtl
jmp
push
adc
aam
js
xchg
mov
add
adc
orb
push
int3
imul
stos
push
push
ret
popf
out
dec
and
mov
into
sub
clc
mov
mov
inc
icebp
sbb
xor
push
push
shrl
idivb
and
and
lds
cmp
dec
push
shlb
hlt
cs
cld
pop
xor
scas
pop
xchg
ja
cld
mov
pop
dec
pop
int
loopne
js
adc
xor
adc
aas
enter
imul
aaa
hlt
leave
in
addr16
cmc
pushf
and
mov
data16
or
dec
mov
push
cmpsl
inc
or
inc
dec
imull
int
xchg
leave
sub
stos
or
and
in
jb
loopne
sub
inc
add
mov
pop
imul
inc
mov
xor
repz
gs
js
mov
cmp
mov
sarb
fsubr
xchg
dec
push
xchg
jecxz
inc
shrb
stos
dec
pop
repz
and
ret
ja
sbb
push
mov
or
adcb
adc
mov
push
inc
mov
jns
dec
stc
movsl
xor
push
mov
mov
xor
jle
xchg
push
jle
xorl
aad
stc
iret
jp
lret
xchg
imul
icebp
data16
push
push
push
jae
inc
lds
jl
lods
out
stc
cld
push
outsl
outsl
hlt
xchg
xor
outsb
daa
and
sbb
lds
movsb
fstpt
repz
xchg
gs
dec
imul
inc
in
mov
and
loopne
bound
imul
fdivs
inc
subl
or
xchg
out
enter
gs
pop
dec
arpl
scas
mov
bound
lahf
mov
pop
out
sub
and
cmp
push
data16
pop
xlat
test
mov
cmpb
adc
test
ficoms
or
idivb
cld
xchg
mov
testb
sbb
ret
add
mov
jno
mov
mov
xor
dec
pop
sbb
mov
inc
pop
gs
xchg
mov
push
loop
popa
dec
cmp
mov
cmp
push
inc
repnz
mov
mov
loop,pn
pushf
mov
nop
pop
test
and
or
mov
or
pushf
xchg
fcmove
outsb
cli
pusha
and
xor
sub
nop
push
sbb
stos
mov
jg
arpl
push
arpl
mul
icebp
cmp
scas
gs
ja
je
js
mov
mov
xor
xor
cmp
movsb
cmp
bnd
lret
cmpsb
out
test
mov
inc
outsl
mov
loope
push
nop
out
cmp
mov
lock
push
jns
mov
pushf
pushf
add
jns
popa
movsl
lea
sbb
out
jle
and
rclb
cmpsl
cli
sbb
add
rclb
add
fsubrs
and
nop
ficoms
push
test
jmp
and
and
cltd
insl
lret
add
cmp
xor
pop
test
push
xor
mov
mov
int3
jno
sub
add
sbb
in
cmc
leave
in
sbb
repz
lods
sar
leave
clc
outsl
xchg
popa
movsb
call
cld
js
popa
sub
mov
fs
mov
enter
inc
imul
lds
popf
adc
pop
dec
ret
in
mov
icebp
jp
xchg
cs
cmp
sbb
mov
movsl
adc
repz
std
es
dec
xlat
add
insl
or
movsb
mov
outsb
pop
icebp
pop
pusha
xchg
aam
incb
or
scas
jno
mov
movsb
cwtl
es
aad
xor
jecxz
lods
xchg
xchg
fldcw
bnd
ret
push
fcoml
and
in
mov
rclb
mov
imul
pop
rorb
stos
or
inc
mov
cmp
xchg
cmp
test
mov
in
stc
xlat
rcrl
inc
xor
pop
mov
add
sahf
jo
push
and
cmpsb
and
inc
int3
aam
arpl
mov
pop
dec
jle
int3
cmp
fnstsw
rcrl
or
mov
inc
xchg
dec
jnp
add
out
aas
mov
jne
and
push
int
inc
sbb
xchg
xchg
ret
or
mov
pop
cmp
jmp
sub
jmp
icebp
and
cs
mov
nop
jmp
push
rcrl
mov
das
add
addl
dec
scas
mov
fidivs
lahf
fildl
cmpsl
adc
test
xchg
sbb
outsb
or
mov
mov
enter
out
lahf
loopne
xchg
lea
arpl
adc
cmp
lahf
gs
in
js
imul
cmpsb
and
and
mov
loope
jmp
stos
mov
cmp
xor
sub
pop
mov
pusha
sbb
loop
push
and
fists
push
sub
push
cli
dec
push
mov
sti
jp
add
lods
mov
push
es
pop
dec
icebp
adc
dec
sub
adc
rclb
movsb
fldcw
cmpl
ljmp
scas
out
lea
int3
es
add
in
inc
rorb
fwait
insb
sbb
call
out
lock
stos
push
xor
jmp
inc
pcmpgtb
outsb
push
xchg
cltd
sub
jg
xchg
nop
cs
mov
les
jl
xor
or
or
sahf
insb
cmp
sbb
cmp
es
cmc
mov
push
or
and
ret
stos
clc
dec
and
insb
push
mov
or
fsub
popf
pop
xchg
ret
sub
test
rclb
mov
mov
imul
adc
stos
xor
sbb
repz
cmp
mov
inc
je
jle
mov
add
jb
cmp
shl
clc
icebp
out
sub
mov
adc
in
xor
xchg
mov
out
stos
out
push
inc
mov
xchg
loope
push
mov
sub
lea
mov
aam
xchg
out
xchg
je
movsl
mov
xchg
xlat
outsb
sbb
lcall
add
inc
xchg
stc
inc
loopne
adc
mov
bound
fs
hlt
push
jmp
mov
loop
cwtl
hlt
adc
xchg
xor
jnp
adc
cmp
cld
stc
nop
pop
xchg
movsl
sub
add
jmp
aas
in
xor
scas
das
aam
pushf
into
fcompl
mov
ds
out
adc
mov
and
sub
int
sub
jbe
xor
mov
inc
in
mov
in
and
fnstcw
mov
fiadds
jl
sbb
aas
cmc
inc
ret
lret
fldcw
xchg
cmovge
ss
ds
pop
push
xchg
sbb
sub
insl
xchg
jecxz
or
test
and
dec
jo
ret
lock
shll
mov
lahf
hlt
icebp
sahf
aaa
out
fadds
nop
xorl
inc
and
lods
dec
cmpsb
jecxz
jle
cmpsw
push
in
rcll
loop
xchg
xor
in
call
xor
pop
xlat
xor
jbe
andb
sub
jg
pushl
mov
scas
cld
lahf
sub
or
inc
mov
jecxz
cmp
in
ljmp
out
push
dec
pop
hlt
rorl
mov
bound
sbb
mov
mov
mov
mov
and
push
jb
adc
or
add
sub
cwtl
pushf
pop
dec
cltd
sub
xchg
jne
sub
sbb
mov
mov
cmp
push
imul
aad
out
sbb
jp
xchg
mov
ret
mov
inc
test
mov
add
cli
repz
arpl
push
pushf
add
jns
sti
mov
push
mov
cmpsl
lret
lods
mov
popf
out
jb
and
push
movsl
lods
dec
mov
filds
push
inc
popf
pop
nopl
fsub
or
pop
adc
dec
mov
push
sbbb
jg
mov
enter
mov
out
push
push
notb
adc
dec
outsb
icebp
ret
cwtl
and
scas
mov
jg
hlt
xchg
jne
cmp
fwait
ror
stos
das
xchg
andb
aaa
es
add
jo
hlt
mov
clc
cld
imul
adc
xor
scas
lea
pop
inc
clc
ret
dec
add
inc
or
popa
adc
cwtl
ss
fisttpll
cmp
sub
and
xlat
dec
xchg
and
or
sbb
jae
inc
sbb
jo
das
pop
bound
pop
dec
mov
push
lds
sarb
arpl
mov
sbb
nopl
jnp
and
popa
and
add
jo
cld
inc
pop
shlb
cmp
mov
mov
mov
fistpl
movsl
es
in
mov
sbbl
lcall
mov
xor
cld
mov
jae
bound
es
jp
sahf
sbb
ja
push
jae
xchg
jne
mov
fcmove
add
les
test
pop
sub
pop
fcoms
sub
sub
dec
repz
addb
outsb
out
jae
inc
pop
pop
jo
cmp
xor
pop
jecxz
imul
rorb
or
mov
mov
mov
lcall
pop
push
call
and
mov
das
mov
adc
test
iret
push
mov
rcll
cmp
ljmp
mov
lahf
dec
push
addb
jge
cwtl
and
shlb
inc
xchg
cmp
lds
ret
loope
add
add
add
mov
push
pop
pop
sub
cld
aas
sti
sub
cmp
scas
mov
ljmp
jp
sub
xlat
in
xchg
lods
daa
adcl
xchg
outsb
stos
aam
inc
lock
add
mov
jb
ds
int3
fisubs
cmp
loopne
xchg
xor
ljmp
pop
dec
in
push
in
lods
hlt
mov
and
sti
mov
jbe
outsb
or
enter
xor
in
pusha
inc
call
jge
xlat
enter
jge
nop
sti
mov
call
push
dec
outsl
fstps
jbe
jecxz
mov
sub
or
les
jnp
dec
push
in
jge
push
aaa
test
das
cmpsb
dec
fcompl
outsb
inc
fwait
popa
pop
push
push
add
in
lret
sub
push
inc
out
cwtl
stos
inc
clc
sbb
das
lods
jmp
cmpsb
fsts
jmp
push
adc
dec
mov
mov
jns
pop
in
sbb
js
arpl
nop
pop
dec
inc
lock
jmp
enter
cmp
je
cwtl
jle
les
or
rclb
add
inc
clc
mov
imul
cmpsl
popa
mov
fisttpl
dec
bound
outsl
stos
outsb
jo
fwait
cmp
insl
xor
push
movsb
jnp
pop
xchg
fs
imul
bnd
ret
mov
fadd
loope
dec
popf
jl
imul
int3
enter
mov
xchg
stc
stos
out
lret
add
subb
call
jnp
sbb
sbb
dec
push
mov
dec
jecxz
mov
loopne
add
push
imul
cli
mov
fs
pop
mov
xor
rorb
sbb
mov
imul
pop
and
pop
mov
cmc
dec
arpl
or
sar
dec
fdivs
pop
cmc
rorb
mov
and
xchg
movsl
mov
mov
lret
push
adc
mov
fisubl
lds
and
mov
imul
js
sub
adc
or
xchg
xchg
jecxz
jmp
push
mov
pop
sbb
inc
mov
push
iret
push
jo
sub
mov
movsl
icebp
test
pop
sub
jne
mov
mov
rcl
lds
mov
mov
inc
adc
ljmp
pop
mov
cld
leave
imul
insb
stc
mov
xchg
inc
jge
in
in
jnp
mov
add
aas
adc
push
rcl
xchg
scas
mov
mov
adc
dec
xor
sti
dec
push
mov
inc
dec
and
jbe
sub
cld
stos
fidivrl
and
popa
bnd
pop
sahf
inc
in
pushf
rcl
shlb
mov
add
iret
mov
ja
mov
bound
inc
insl
enter
push
jns
jbe
fstpt
lahf
xchg
sub
shlb
adcl
mov
in
jmp
ret
aaa
enter
sbb
arpl
sub
std
imul
inc
or
xchg
dec
mov
push
je
xor
jnp
xor
fidivs
xor
sbb
jl
xchg
test
xchg
cmpsb
loopne
into
call
xchg
lds
jg
je
insl
sub
dec
pushf
cmp
mov
sarl
imul
mov
add
fidivl
push
push
int3
fdiv
pop
popf
adc
jmp
dec
out
outsb
add
stos
in
push
pop
outsb
mov
gs
stos
lds
repnz
daa
rcl
dec
mov
mov
subl
stos
enter
jge
iret
sbb
imul
add
push
lock
ljmp
mov
popl
aaa
daa
shrl
jl
mov
insl
fisubrl
add
pop
into
mov
es
pusha
rcrb
push
and
xchg
xchg
push
xor
lds
sti
sbb
fidivrs
cmpsb
fists
push
mov
fmuls
jg
add
out
hlt
and
mov
sbb
push
fisubs
rclb
subl
xchg
xchg
sub
cmc
cmp
or
mov
jno
dec
lret
dec
cmp
ficoms
in
pop
or
dec
fnstcw
push
xor
mov
out
popf
jne
xchg
lods
xchg
mov
adc
push
add
pop
mov
movb
repnz
out
popf
add
ret
sub
jnp
or
mov
cwtl
rclb
pop
leave
xchg
dec
mov
loopne
repz
push
outsb
cmp
xchg
push
es
in
dec
push
jmp
xchg
or
xlat
mov
xchg
fldcw
lds
pop
add
xchg
lods
xchg
pop
call
out
jnp
push
add
sub
shll
scas
or
enter
cmp
cltd
sbb
jns
dec
fstpt
incb
push
xchg
add
aam
leave
js
int
mov
andb
xchg
sti
inc
mov
mov
mov
xchg
outsb
cmpsb
mov
jne
test
push
mov
push
test
int3
sub
popf
out
js
movsl
push
cmp
gs
mov
into
and
xlat
in
jo
sbb
or
fwait
arpl
jmp
and
jns
fsub
pop
clc
ret
mov
cwtl
cmpb
and
fldcw
xor
cmp
sub
imul
dec
in
xor
mov
aaa
mov
negb
cmp
test
lcall
arpl
adcb
insl
cmc
inc
mov
push
xor
das
and
loopne
mov
cmp
jno
add
or
scas
movsb
jb
adc
lahf
xorl
xchg
sbb
movsb
ja
xchg
mov
pop
bound
dec
pusha
ficoml
pop
shrl
or
or
imul
cld
xor
push
sarl
ja
sti
int
fistps
sbb
sub
xchg
xchg
push
adc
mov
or
loope
enter
insb
lods
data16
stos
mov
cmp
loop
divl
lods
jmp
mov
cmp
mov
push
mov
cmp
outsl
xchg
push
mov
adc
mov
stos
dec
movb
adc
loop
cmp
or
jp
pop
pop
push
sub
mov
adc
mov
xor
add
inc
mov
dec
or
aad
clc
inc
add
jno
push
mov
push
sub
jle
add
movl
mov
ja
and
imul
cmp
fadd
cltd
jmp
or
cmp
pop
xchg
add
jo
mov
aam
in
mov
sub
das
shl
sbb
xchg
movsl
clc
sbb
stc
sar
jae
dec
add
out
dec
movsl
pop
or
dec
jmp
test
and
data16
adc
rclb
lods
call
fwait
push
pop
rclb
push
pop
push
and
sbb
sub
xor
sti
hlt
scas
inc
jmp
cld
movsl
xchg
cs
fdivr
std
xor
inc
inc
inc
das
cmp
jl
mov
adc
rorl
lods
imul
dec
xchg
icebp
jae
test
sub
and
and
inc
insb
and
jl
ficompl
sbb
xorl
xchg
mov
fcoml
dec
dec
xor
hlt
mov
lea
pop
out
mov
addr16
cmc
add
inc
cld
cmp
cwtl
aas
ss
push
xchg
adc
repnz
or
push
dec
adc
pop
je
and
push
icebp
lea
xchg
fs
xor
xor
sbb
mov
arpl
xchg
icebp
mov
add
inc
push
addl
rcrb
mov
jns
dec
cmp
mov
nop
dec
out
orb
and
clc
bound
inc
xchg
insb
popf
dec
adc
pop
lret
decb
shrb
pop
mov
dec
flds
add
ret
or
xor
cli
and
in
inc
mov
dec
jnp
les
dec
fucom
push
dec
addr16
in
sahf
sub
push
add
add
mov
sti
imul
movsb
sbb
fidivrl
loope
ds
mov
out
and
stos
jne
std
popa
sub
add
jge
pop
loop
mov
bound
test
cmp
mov
ret
cwtl
pop
inc
mov
faddp
loop
pop
xchg
and
lahf
jnp
push
addl
pushf
or
inc
iret
iret
fndisi(8087
push
push
out
lds
arpl
sbb
mov
sub
pop
xor
scas
or
stos
out
cltd
jo
mov
addr16
dec
je
push
scas
xchg
mov
fwait
adc
pushf
mov
out
in
and
push
dec
je
insb
push
jb
xor
mov
fwait
dec
cmc
sbb
enter
inc
movsb
mov
dec
loopne
shll
push
push
fcomps
lods
clc
adc
mov
mov
fs
dec
xor
popf
sarl
rclb
add
lret
and
mov
dec
test
dec
jb
std
movsb
enter
pop
push
or
jb
fcoml
out
mov
xchg
lret
out
fcomps
rcrb
test
je
arpl
dec
cmpsb
xchg
and
outsb
push
paddsw
dec
mov
jno
or
pushf
js
dec
push
or
aad
cli
lods
and
jge
in
dec
sti
outsb
mov
dec
in
mov
jle
sbb
in
pop
lea
test
incb
fstpl
movsl
add
scas
mov
xchg
and
cmc
sub
mov
cltd
je
ljmp
jbe
mov
nop
xor
mov
int3
or
inc
mov
mov
sahf
std
inc
cmpsl
aaa
clc
inc
nop
popa
push
rorb
push
repz
arpl
jecxz
adc
scas
test
xchg
push
sbb
jns
adc
fstpt
sbb
icebp
and
xchg
lret
jae
scas
out
shlb
movsb
jle
dec
mov
inc
std
mov
loope
lock
or
pop
stc
popf
fsubl
push
mov
hlt
dec
sub
push
aaa
mov
jecxz
subb
pop
stos
inc
or
cltd
jg
sub
sub
and
imul
fists
pop
nop
mov
in
jp
scas
ja
ds
lea
pop
aam
mov
push
fst
and
dec
lods
inc
xchg
mov
add
sarl
push
call
fs
inc
jns
mov
push
xchg
out
or
das
sbb
enter
sahf
jb
movsb
inc
add
fwait
xlat
es
out
clc
xlat
push
mov
outsl
mov
loopne
pop
rolb
push
mov
repz
adcb
std
lods
in
push
jle
in
aaa
cs
sahf
mov
test
inc
fs
dec
insl
arpl
jae
sub
rcr
mov
mov
jbe
dec
mov
fnstenv
rorb
fisubl
sub
jg
dec
sbb
daa
les
mov
xor
cmc
notb
mov
adc
scas
mov
lcall
loopne
sub
test
call
push
ss
lret
lods
inc
fcomi
gs
out
or
fmuls
cmp
cmc
out
mov
insb
xor
loope
mov
sub
sar
test
push
adc
aaa
aam
aas
rcll
sub
jecxz
mov
push
xchg
mov
cmp
ret
in
sub
add
mov
pop
shll
jmp
jnp
rcrb
or
pop
ret
testb
xchg
add
int3
sub
cmp
enter
iret
xor
adc
and
push
repz
aas
jg
mov
aas
cmpsl
mov
jne
lds
adc
mov
test
mov
fsts
adc
lretw
and
cld
xchg
jle
add
jns
mov
xor
add
neg
ss
mov
insl
mov
out
jmp
fmull
jne
cmp
sub
test
aas
add
in
dec
movsb
outsl
fisubrs
adc
cld
in
ja
inc
adcb
loopne
adc
pop
cltd
push
xor
xchg
popf
adc
adc
cli
dec
pop
iret
jl
push
insl
icebp
sbb
pop
push
sub
insb
cld
dec
xchg
cmpsb
xor
sbb
addr16
cltd
jge
mov
jge
mov
mov
adc
xchg
mov
je
sti
xchg
mov
cmp
lahf
sub
cmp
cli
mov
and
popa
pop
outsl
sbb
out
jnp
dec
sub
in
scas
and
ja
pop
inc
rcl
sbb
ret
insb
cmp
or
ljmp
adc
stos
adc
imul
mov
faddl
sbb
fnstcw
outsl
adc
arpl
push
ficomps
stc
test
ret
mov
rcrb
push
mov
lods
fs
clc
and
or
xor
movsb
or
add
lret
ss
insb
stc
repz
div
call
mov
addr16
stos
mov
fmull
sub
mov
mov
imul
pop
repz
cwtl
dec
mov
xchg
dec
lods
lds
sahf
xlat
int
mov
ficomps
jno
lods
fstp
jg
pop
xor
dec
sub
outsl
xor
sub
cmp
ljmp
fcomip
in
mov
pop
mov
inc
inc
xchg
stc
pop
inc
push
cmc
jg
or
push
cld
jb
sub
push
dec
xchg
nop
sub
lods
in
test
xchg
call
iret
in
clc
rolb
xlat
fildll
lods
shlb
xchg
idiv
xchg
ja
mov
mov
insl
lahf
ret
aad
xchg
xchg
in
inc
inc
adc
pop
cmp
pop
add
les
push
dec
leave
dec
adc
aam
fs
leave
imulb
push
pop
xchg
or
sub
fwait
rorl
in
test
jl
pop
cmpsl
iret
sub
movsl
imul
jl
int
ret
stos
or
jb
call
fildl
fwait
and
popa
pusha
inc
cmp
out
add
int
jno
and
push
inc
xlat
jg
cmp
movsl
push
pop
scas
mov
aam
call
daa
xchg
mov
es
jp
imul
add
jbe
mov
jecxz
cmp
shlb
out
iret
xor
mov
sahf
das
sub
imul
aaa
xchg
sbb
dec
arpl
lret
rcrb
xchg
fdivrl
bound
inc
adc
sub
mov
inc
ljmp
or
in
sbb
and
nop
mov
inc
xor
rol
or
jle
sbb
rcll
lock
ds
jecxz
jl
cmpsl
xor
xchg
mov
or
rorl
fsubl
in
xlat
shrb
cmp
mov
fsubrs
jns
pop
test
mov
xor
dec
adc
lahf
inc
out
or
adcl
in
mov
insl
xchg
pop
cmp
cmp
sub
in
outsb
rolb
dec
mov
sbb
mov
cmp
sbb
dec
rorl
ja
subl
sbb
push
xor
xor
inc
daa
sub
stos
ficoml
cmp
mov
pushf
loop
xor
out
sbb
arpl
or
inc
pop
aaa
test
in
scas
mov
test
xchg
cmpsl
shlb
add
cmpb
jnp
jnp
jle
or
push
fimull
push
sub
sub
xor
clc
je
mov
inc
mov
in
cwtl
mov
loope
push
aas
sbb
out
gs
fs
movsl
loop
push
clc
aad
mov
inc
stc
jp
sub
jno
push
and
loope
inc
inc
outsl
xchg
js
inc
cmp
orl
cmp
xchg
add
xchg
or
mov
xor
mov
add
jge
xchg
bound
or
dec
dec
jmp
mov
addr16
jns
xchg
pop
ret
dec
xchg
insl
pop
xchg
xor
adc
xor
jecxz
pop
fdiv
mov
jb
mov
dec
pop
inc
rcrl
nop
jb
adc
or
cld
lds
fcompl
ss
jae
inc
mov
jl
aad
pop
dec
dec
fdivl
jecxz
and
xchg
ffreep
daa
insl
fimull
movsl
clc
adc
sbb
dec
jge
in
xor
hlt
adc
sub
mov
adc
pop
rclb
stos
jae
lcall
js
cmc
dec
jecxz
addb
mov
dec
inc
test
ja
out
mov
shrb
xlat
xchg
outsb
xchg
add
loopne
cmp
add
lock
push
in
push
je
je
jmp
sbb
add
cmpsb
inc
lods
test
fistps
test
sub
push
push
ficoms
jno,pn
mov
pop
mov
and
dec
fs
out
int3
repz
lahf
fdivr
enter
ja
jno
inc
and
movb
dec
cli
jle
je
call
xchg
sti
sbbb
repz
add
jg
inc
ret
adc
ret
and
stos
jg
ret
shrl
loop
jecxz
dec
shlb
xchg
sub
pop
lods
adc
lods
lea
jns
int
rcrl
les
dec
int3
sbb
pushf
jae
pop
loop
xchg
js
cmp
repz
pop
rclb
subb
push
mov
and
inc
repz
es
sub
ja
xlat
repz
lret
jecxz
popa
cmp
test
shll
ret
into
xchg
cmp
leave
lods
adc
dec
les
mov
mov
shl
inc
scas
idivb
jecxz
leave
fstenv
out
lahf
nop
les
popf
push
aas
and
and
cli
aas
mov
jp
xchg
ja
notb
or
xchg
pop
push
popf
pusha
rol
xor
orl
lds
sub
sbb
inc
fwait
lea
fs
pop
xchg
mov
lahf
mov
sbb
add
stc
into
mov
std
pop
cltd
test
fisubl
cmpsb
xchg
mov
out
ljmp
popa
cmp
sbb
mov
and
pop
and
inc
and
fstp
bound
ficoms
lock
jnp
jp
ficoms
cmp
xchg
popf
pop
push
adc
jae
jae
sub
dec
mov
adc
dec
sub
mov
sbb
mov
js
sarb
loopne
int3
std
sahf
bound
pop
das
lahf
cwtl
out
loopne
cwtl
idivb
pop
imul
stos
lods
mov
and
push
aam
xchg
push
cs
fistpll
cltd
adc
push
dec
mov
push
stos
imul
adc
out
test
flds
ljmp
mov
les
outsb
sahf
pop
out
ret
push
or
lds
aaa
pop
mov
push
shlb
dec
dec
sti
xchg
stc
mov
xor
adc
pop
and
cmp
popa
lock
jp
inc
addb
xchg
les
ss
aad
xor
mov
jecxz
arpl
and
dec
jl
leave
mov
jo
sti
in
push
push
add
gs
cld
ljmp
jge
pop
rcll
mov
aad
jno
jp
push
cmp
mov
pop
mov
es
adc
aam
add
and
ja
add
repz
cli
lret
stos
cld
mov
test
xor
mov
dec
or
sbb
or
add
pop
leave
ret
dec
cmp
or
scas
push
imul
dec
add
lcall
pop
jno
cwtl
inc
lahf
ret
enter
adc
cmp
xchg
outsl
jne
pop
mov
mov
fsts
fstl
or
movsl
gs
popa
jno
pop
inc
test
sbb
aam
push
ja
outsb
call
out
push
jne
pushf
popf
aam
xchg
or
mov
push
cmpsb
je
inc
sub
sbb
inc
fisttpll
and
adc
pop
fcmovnb
or
pop
push
enter
xchg
dec
cwtl
add
add
fnstcw
mov
jns
jmp
inc
sysexit
and
jmp
or
mov
sbb
mov
loope
push
addr16
rclb
xchg
pop
nop
gs
cmpsl
test
mull
add
mov
inc
push
mov
lea
push
mov
jecxz
xchg
dec
jp
adc
icebp
pop
mov
dec
push
sub
lods
call
stc
cmp
and
into
pop
lcall
xorb
dec
mov
insb
cltd
sub
shll
sbb
int3
pop
ret
shl
mov
jae
es
sub
int
ror
mov
cmp
and
stc
fcoms
cmpsb
sbb
js
adc
fstl
scas
shrl
orb
mov
jle
stos
or
cmp
mov
mov
mov
stos
jg
and
xor
cmp
inc
js
insb
xlat
push
xchg
and
and
setae
adc
fs
out
adc
jno
repnz
push
jns
jae
loope
stos
push
mov
in
cmp
xor
cld
mov
xchg
pop
cmp
mov
jge
mov
pop
inc
jbe
in
jne
jns
pop
cld
or
mov
jae
xor
test
and
test
movsb
sub
xor
push
sub
jp
xchg
imul
fldl
ret
rorl
pop
leave
shl
add
xor
jg
ja
cmp
mov
sub
mov
sbb
sti
repnz
mov
clc
gs
mov
loop
insb
in
dec
stos
inc
iret
mov
jnp
fldcw
aaa
ja
mov
icebp
and
sub
test
decl
or
pop
cmp
gs
gs
pop
mov
lods
push
test
imul
jge
fstpl
xchg
xor
sahf
jecxz
adc
insb
xor
clc
imul
lret
xchg
and
jbe
mov
divb
cmp
insb
pop
ljmp
jne
add
adc
push
jmp
pop
mov
scas
jl
xlat
cs
or
xor
fs
pop
inc
sahf
icebp
xor
lret
and
xchg
push
xchg
test
xchg
iret
push
xor
fstpl
insb
or
inc
jne
xor
add
or
pop
xor
sbb
cld
dec
sub
ds
pavgb
aas
cs
js
popf
push
sbb
xlat
imul
jmp
inc
and
ficoms
das
es
loopne
push
inc
mov
mov
xor
dec
sub
jno
std
and
fisubl
daa
in
cmpsb
movl
xor
enter
jmp
mov
push
or
or
outsl
add
sub
rorl
push
xor
sub
sbb
outsl
sub
das
mov
addr16
lcall
pushw
sub
pop
pop
xchg
cmpsl
and
xlat
cld
into
dec
mov
mov
ss
jb
sti
ljmp
movsl
dec
data16
sbb
jmp
bound
add
popf
jle
neg
pop
test
and
mov
or
mov
je
in
inc
popf
stos
arpl
pop
scas
aam
in
mov
add
shlb
mov
adc
pop
in
lcall
pop
aam
imul
mov
mov
mov
fwait
sub
popf
sahf
aam
out
fs
pop
and
inc
cmp
dec
call
std
cmp
ljmp
or
les
jno
xchg
or
pop
push
es
push
sub
and
andb
roll
jge
inc
imul
imul
and
inc
xchg
stc
cmp
mov
fmull
jo
adc
push
decl
test
fnstsw
dec
int
lock
jnp
lret
imul
add
xchg
jno
daa
cmp
pop
adc
xlat
stc
scas
mov
jp
xchg
dec
mov
sahf
insb
mov
jmp
mov
test
out
pop
loopne
ds
xchg
fsubp
loope
mov
and
fnstsw
lahf
jle
push
stos
sub
lods
mov
jae
fstps
gs
push
and
or
sbb
flds
lods
stos
mov
in
icebp
fs
test
nop
sbb
jae
aam
cli
out
lret
daa
inc
mov
rcr
fs
xor
cmc
dec
sbb
shlb
jp
ror
iret
lds
mov
imul
mov
lds
push
sub
divb
andl
stos
jne
add
dec
mov
xor
push
lret
xchg
rorb
popa
addr16
hlt
xchg
roll
outsl
daa
out
ss
and
pop
xor
aad
cmc
ss
ja
mov
arpl
sti
iret
jmp
fwait
mov
pop
adc
mov
pop
xorl
adc
sub
and
ret
pop
andb
sub
into
mov
push
leave
mov
push
add
push
sbbb
or
jne
mov
popa
jb
icebp
push
cli
xor
mov
in
xor
call
sysexit
cmpsb
add
pop
jg
pop
inc
sbbl
sbb
stos
test
sub
pushf
test
fdivp
inc
jnp
mov
out
xchg
hlt
pop
sub
pop
movsl
rcrb
loopne
push
mov
adc
dec
sbb
adcl
inc
sbb
mov
mov
mov
bndldx
jmp
dec
mov
jo
aas
xchg
pop
fwait
les
or
pop
bound
int
push
jno
ja
xor
hlt
daa
push
fstl
add
iret
push
push
ret
hlt
jb,pn
mov
adcl
ret
pop
sbbb
aam
mov
fisubs
push
idivb
ficoms
push
lea
lahf
push
mov
cmp
outsl
inc
aam
das
xor
cmp
xchg
addr16
out
add
pop
shrl
shll
fwait
repnz
in
xor
test
outsb
pop
pop
ljmp
jle
pop
and
sub
push
pushf
lcall
nop
mov
xchg
xcrypt-cfb
cmpsl
addr16
xchg
mov
add
mov
jmp
push
dec
loopne
fldl
inc
push
data16
fistps
sar
cmp
or
sbb
mov
leave
xlat
xlat
scas
xchg
inc
fcoms
hlt
inc
insb
xchg
sbb
xor
pop
mov
pop
cmp
int3
mov
pop
sbb
mov
es
adc
mov
pop
jne
cmp
xor
icebp
test
push
ja
xchg
add
loopne
mov
mov
insb
sbb
or
mov
xchg
andl
loope
pop
jo
add
cmc
push
mov
pusha
sub
mov
outsl
push
adc
sub
popa
cmpsl
cmp
jb
mov
sbb
xor
jg
out
imul
add
test
cmp
loope
jbe
fcmove
jmp
hlt
jge
idivb
sub
and
shr
cli
push
pop
jns
popf
inc
clc
addb
addr16
imul
and
mov
bound
mov
adc
pop
lock
repz
dec
aas
inc
imul
aas
xlat
push
or
sbb
xchg
add
jg
lret
sub
mov
fs
xchg
out
push
lds
inc
jnp
jge
mov
dec
rclb
lods
sbb
iret
sahf
or
mov
or
and
add
dec
add
fucom
cmpsl
aas
test
jb
adc
mov
cmc
stos
push
inc
xor
in
xchg
adc
js
xchg
and
add
pop
pop
stos
adc
cmp
mov
jns
push
jb
out
rcrb
mov
push
int
pop
xor
out
and
or
aam
out
add
imulb
xchg
and
enter
mov
repz
xchg
jne
adc
dec
ss
movsl
and
inc
mov
test
stos
test
push
imul
es
test
in
and
andl
scas
aam
dec
or
repz
push
dec
pushl
adc
popf
imul
insb
scas
daa
mov
xor
mov
test
fnstenv
cmp
jl
pop
sub
and
rcrb
cmpsb
icebp
cmp
sub
dec
add
jg
mov
pop
push
add
push
pushf
in
mov
cmc
ret
and
es
cmpsb
cmpsb
push
insl
mov
add
and
subb
sub
jae
rep
push
lds
or
jp
das
or
lahf
push
sub
sahf
std
fcos
out
fidivl
xchg
jb
jne
test
aas
mov
push
pop
bound
sbb
xor
push
test
insb
imul
mov
or
lods
aas
rolb
dec
jnp
int
shll
pop
in
scas
push
dec
or
lods
movsl
xchg
xor
cli
ja
mov
xchg
adc
mov
jnp
out
pop
out
and
sub
xor
and
rclb
sub
test
push
xchg
dec
mov
adc
lret
call
add
mov
sbb
xchg
ss
repz
jbe
xchg
sbb
int3
inc
and
stos
lahf
mov
enter
sub
leave
add
pop
cwtl
push
stos
sub
push
jbe
in
not
leave
sub
leave
mov
iret
cwtl
and
fstpl
jne
push
aam
mov
cmp
cmp
es
aas
stos
or
push
jecxz
fnstcw
cwtl
xor
cmp
fildl
inc
pop
mov
ja
jge
jns
loop
cmp
add
inc
dec
lods
dec
aas
movsb
pop
in
pop
jp
jo
adc
mov
lds
pop
mov
inc
movsl
mov
xchg
movsb
lret
push
mov
cmp
add
inc
xchg
lret
sbb
add
mov
rclb
loopne
inc
xor
and
rorb
loop
insb
xor
mov
sub
adc
sub
push
inc
mov
test
shrl
movsl
ret
ret
mov
dec
mov
ss
xchg
lods
or
add
idivb
arpl
in
insb
push
cli
std
sbb
xor
mov
or
orb
jne
into
dec
fsubrl
xchg
or
fiaddl
push
jae
xchg
mov
hlt
jno
dec
push
push
push
push
pop
fnstcw
in
adc
cmp
or
cmp
scas
lea
out
push
cwtl
add
subps
rorb
jbe
lock
std
addr16
clc
jmp
mov
jne
iret
cs
xor
sbb
lds
mov
xchg
pop
test
jge
or
imul
pop
ficomps
dec
pop
aad
xchg
xchg
push
add
xor
sub
fst
sub
cwtl
int
rorl
test
neg
cld
aas
imul
xchg
fs
adc
ds
push
cmpsb
xchg
outsb
and
pop
out
mov
pop
adc
cmpsb
and
cmpsb
or
xchg
mov
mov
push
cmpsb
fwait
rcl
insl
test
je
xor
push
push
leave
lods
or
add
pop
sbb
or
pushf
das
nop
jg
out
nop
pop
pop
mov
in
and
aaa
pop
test
rorb
xchg
mov
in
lea
mov
mov
adc
scas
out
mov
inc
scas
out
cmp
push
mov
movsb
dec
lds
add
fmuls
add
pop
inc
subb
jge
push
icebp
test
pop
out
cmp
pop
std
inc
inc
cmpsl
inc
mov
lock
push
jge
pop
cmp
jge
loop
repz
lock
xor
aas
inc
jbe
insl
cmc
add
mov
adc
sbb
jbe
je
repnz
aam
testl
sbb
in
andb
imul
sub
cli
neg
add
dec
jae
and
add
adc
mov
mov
xlat
jne
andb
in
dec
aas
xorb
cmp
jg
mov
mov
les
cmp
sbb
bound
inc
subl
xor
repz
cmp
int
mov
push
pusha
popf
es
xchg
jbe
cmp
push
push
mov
ret
repnz
push
loopne
xchg
mov
adc
pop
xchg
das
int3
adc
push
dec
mov
inc
adcb
xchg
loop
adc
push
ret
sub
lret
dec
ret
roll
fcmovbe
int3
in
or
hlt
adc
add
dec
out
dec
das
xlat
stc
jns
loop
sub
and
jns
xchg
jg
jb
mov
jge
pop
std
pushf
or
movsb
push
xor
insl
push
testb
stc
in
or
xchg
lret
jg
adc
ljmp
arpl
imul
imul
xor
pop
fcoms
xor
hlt
pop
or
pop
scas
loopne
pop
cmp
negb
in
adc
fxch
dec
push
lahf
xchg
cmp
push
test
sub
insb
sbb
and
lock
add
mov
mov
aam
rolb
jge
add
testb
cwtl
lea
dec
and
call
xchg
mov
lret
int
mov
cmp
pusha
int
xor
arpl
or
popf
pop
and
andb
rcrl
cs
jle
dec
add
pushf
jecxz
adc
jp
jge
fsubs
jge
cmp
or
and
mov
cmp
mov
fcmovnbe
repz
loop
or
fstpl
or
xchg
sub
jae
jno
movsl
mov
outsb
adcb
outsb
push
mov
adc
and
fstpl
mov
cmp
icebp
xor
cmp
ret
cwtl
pop
jnp
pop
stc
cmp
int
sub
jno
mov
mov
test
ja
daa
jmp
mov
shll
in
fisubs
mov
faddl
inc
shl
cmp
cmp
adc
adc
dec
xchg
and
loop
inc
mov
insl
jno
xor
pop
ret
and
mov
loope
lods
xchg
aad
sbb
test
js
jne
scas
push
push
insb
mov
dec
icebp
push
dec
int3
sbb
and
and
jns
sbb
ret
sahf
push
mov
imul
testl
mov
rsqrtps
rorl
out
movsl
push
ljmp
sbb
xchg
adc
ja
push
fildll
push
fisubl
fwait
scas
mov
push
mov
loop
jp
xchg
xor
int
jmp
addr16
jbe
cltd
inc
adc
lock
aas
push
enter
cmp
daa
dec
adc
stos
in
add
roll
mov
test
push
lock
call
out
pushf
icebp
jmp
lcall
int3
in
adc
mov
das
lods
xchg
mov
pop
inc
and
aas
std
jo
mov
mov
pop
leave
add
lods
repnz
out
sbb
or
movsl
rorl
mov
xchg
dec
mov
xor
mov
fcompl
xor
cli
pusha
pushf
es
or
dec
sar
mov
pushf
or
push
repz
mov
fimuls
add
in
xchg
repz
mov
dec
das
das
imul
pop
pusha
jecxz
or
iret
adcl
lret
jo
mov
stc
sbb
xor
mov
mov
adc
push
popf
jbe
sbbl
adc
jbe
sub
sbb
push
js
int3
sub
icebp
pushf
and
pop
inc
pop
fwait
mov
jle
mov
jne
decl
pop
push
negb
cli
popf
mov
pop
mov
or
cmp
sbb
xor
cmp
cmp
sbb
push
cli
montmul
cmpsb
les
sbb
pop
xchg
xchg
out
out
iret
in
sbb
das
dec
les
adc
mov
jb
aaa
scas
mov
push
movb
dec
push
jbe
and
or
daa
mov
fisubl
sbb
fadds
push
xchg
sbb
adc
push
and
int3
xor
icebp
fwait
or
loopne
bound
out
test
test
push
int3
pop
sub
ss
ret
push
lods
push
xchg
dec
inc
sbb
in
add
xchg
sub
icebp
push
in
sub
lea
clc
mov
out
cmp
xor
or
int
inc
mov
cwtl
aaa
and
inc
dec
call
mov
mov
test
or
adc
ss
mov
cwtl
fstpl
in
cmp
cli
std
cmpsb
cld
jae
es
add
push
lret
sub
cld
in
pop
int
movsl
out
cmp
sahf
adc
adc
loopne
scas
pop
mov
dec
xor
pop
sarb
fldenv
sahf
pop
add
mov
notb
push
pop
inc
push
ret
add
dec
test
in
imul
loopne
out
testb
jg
lea
test
xor
or
fsub
clc
loop
lcall
sahf
hlt
cmp
lea
jecxz
sub
cmp
and
cmc
jp
rolb
inc
scas
cmp
sbb
jo
xor
mov
jns
dec
stc
jl
mov
mov
push
jmp
test
add
mov
nop
push
cmp
mov
sbb
adc
dec
idivl
jmp
mov
push
mov
fldt
std
mov
add
imul
mov
xchg
cmp
mov
rorl
push
hlt
outsb
push
es
cmpsb
mov
mov
adc
negl
int3
scas
adc
cmp
xor
xor
adc
fdivrs
sahf
xor
sbb
int3
es
popa
sub
and
mov
pushf
inc
test
adc
mov
jae
xor
scas
cs
in
dec
rorl
pushf
out
js
aad
enter
out
cmp
inc
adc
push
push
or
xor
stos
fucomi
and
or
cmpsb
orb
minps
jbe
push
repz
jge
aad
iret
mov
pop
push
jge
roll
xchg
cltd
mov
push
mov
lret
push
jecxz
inc
cmpb
fiaddl
out
fadd
pop
cmp
cli
mov
out
lcall
cmp
inc
outsl
les
leave
andb
sbb
ljmp
dec
je
sub
shrb
jg
jge
or
push
adc
xor
scas
push
cmp
jp
dec
sarb
movsb
out
jno,pn
jecxz
push
or
mov
imul
aam
pop
lret
mov
xchg
mov
jg
fldenv
stc
adcb
fcmovne
shl
lret
dec
inc
outsb
push
jbe
add
sub
add
in
cld
mov
cmc
or
aas
mov
fsubp
aad
imulb
insb
es
test
es
lods
lahf
lods
jecxz
lcall
push
loope
xchg
std
dec
repnz
rcll
jne
sbb
cmc
std
insl
movl
pop
jo
ret
je
bound
imul
ja
out
inc
jb
jg
mov
sub
dec
cmp
and
push
jl
cmp
push
push
movsb
lods
lods
popa
insl
sbb
sub
repz
jge
nop
mov
lcall
inc
xchg
fistl
scas
enter
loopne,pt
std
repnz
repz
icebp
leave
cmp
lds
push
mov
lcall
push
aad
scas
insb
fwait
aad
xchg
pop
jmp
xor
lods
pop
mov
rcrl
mov
mov
out
mov
std
fdivr
adc
cmp
jle
shrb
stos
mov
andl
loop
divb
lret
sub
ror
mov
push
cmp
or
mov
pop
mov
cli
inc
push
jg
pusha
repnz
and
adc
cmpsl
fisubl
sahf
ss
pop
dec
xchg
int3
iret
sbb
xor
inc
cmp
scas
mov
out
sub
lret
mov
sti
xchg
lret
jb
mov
cltd
out
leave
jle
pop
enter
push
loop
sub
loope
sti
mov
stos
cmp
enter
bound
mov
jg
sahf
mov
xchg
xchg
aaa
xorb
jnp
lret
rcrb
movsl
popf
inc
xchg
mov
je
sti
add
mov
push
xchg
data16
je
sub
sbb
cmp
sti
test
add
mov
int3
sar
dec
cmc
int
or
outsl
sub
ds
fistpl
xchg
scas
mov
xor
leave
icebp
xchg
mov
add
popf
and
push
mov
or
outsb
sub
cmp
in
je
mov
mov
xchg
dec
aas
ret
sahf
push
daa
xor
or
js
iret
leave
mov
cs
clc
lea
mov
push
dec
outsl
sub
jo
leave
push
xchg
sub
test
jge
aaa
popw
test
cmpsl
stos
shrl
aam
imulb
xchg
push
sbbl
add
adc
xchg
test
jg
sub
xchg
xor
mov
pop
add
std
pop
pop
cmp
stc
cld
push
lret
das
jo
push
sub
cmp
mov
icebp
out
bound
inc
in
decw
xchg
addr16
arpl
cli
in
popf
cld
xchg
inc
call
mov
faddl
add
cmp
mov
add
scas
fadds
inc
dec
lret
adc
adcl
mov
or
inc
fwait
mov
sar
and
popf
xchg
sbb
push
and
push
lret
pop
test
xor
cmp
pop
lods
popa
fdivrp
xchg
dec
insb
mov
adc
aaa
in
std
movsb
fdivs
and
cwtl
and
mov
std
or
adc
add
cmp
xor
cmpsl
adc
cmpb
sub
push
loopne
and
xchg
and
pop
pop
fs
xchg
out
inc
mov
push
inc
push
cmp
test
jbe
adc
insb
push
mov
mov
mov
mov
rcl
push
mov
sarb
outsl
sub
or
outsb
pop
add
test
mov
xchg
int
mov
leave
sbb
outsb
ljmp
pop
xor
xchg
mov
mov
pop
add
push
mov
inc
push
xchg
gs
pop
xor
dec
rolb
adc
adc
insl
fisubs
ffreep
xor
or
movsb
scas
loop
xchg
mov
push
mov
ror
ss
leave
xor
dec
arpl
mov
xchg
aad
in
shrb
rcr
std
dec
xchg
adc
gs
cld
shrl
or
call
cltd
sbb
push
inc
lods
adc
icebp
mov
fdivs
dec
cmp
mov
repz
inc
push
lcall
stos
gs
xor
dec
shl
adc
mov
add
xor
ficoms
jb
mov
out
gs
lea
rorb
add
mov
call
adc
fdivs
push
outsb
push
into
enter
sub
daa
xchg
sub
dec
imul
movsl
mov
les
sub
add
into
repnz
es
add
fsubs
pop
mov
test
fimuls
add
mov
cmc
pop
outsb
shrb
or
inc
sbb
loop
outsl
add
add
push
fld
adc
mov
lret
or
ljmp
jb
imul
sarb
pop
push
sbb
or
add
jno
inc
jl
aaa
loop
lcall
out
lret
inc
jmp
imul
inc
fistpl
jno
and
push
xchg
pop
jge
sbb
fdivr
rorb
outsl
into
es
aam
mov
add
adc
js
stc
adc
jg
sub
dec
mov
pop
inc
or
inc
adc
popa
dec
mov
out
cltd
lret
pushf
sarl
aad
ret
sub
adc
jmp
or
or
jne
xlat
clc
mov
ss
push
mov
imul
je
pop
in
xor
cmp
xchg
sbb
cmpsl
js
mov
mov
test
in
push
sub
dec
lcall
shlb
jmp
push
icebp
mov
mov
out
cmp
stos
push
xlat
push
add
mov
dec
call
nop
cmp
scas
and
mov
fistl
stc
notb
daa
dec
insb
sub
push
pop
adc
adc
and
js
cli
adc
ficoml
aam
hlt
nop
bound
cltd
jno
mov
jmp
xchg
andb
push
and
lods
or
shlb
cmp
mov
dec
mov
aas
cld
add
sub
xor
rcl
mov
movb
fsubrl
pop
or
dec
das
xor
push
inc
rcll
mov
jmp
sarb
pop
orl
or
or
pop
push
cmp
push
jno
dec
and
push
adc
idivb
and
ds
cmp
pop
cmp
repz
add
mov
rorb
push
shlb
mov
push
dec
rcrl
fistpll
std
cmc
push
sbb
inc
dec
lods
or
jl
fisubl
add
sbb
adcb
movsb
ljmp
or
cli
push
cmp
jg
mov
mov
mov
lds
xor
or
aam
lods
sahf
lods
cmp
cli
mov
imul
push
mov
mov
push
cli
imul
xchg
in
mov
mov
ljmp
mov
push
scas
xchg
ja
pop
or
xor
sub
iret
ret
inc
xchg
scas
fbld
xor
dec
imul
mov
and
mov
leave
push
iret
dec
xor
pop
push
or
jns
mov
pop
xor
cmp
fbld
insb
movsl
sub
std
rclb
mov
fstps
pop
mov
jle
cmp
and
pop
leave
test
arpl
pop
stos
jp
fcmovnu
sahf
push
mov
push
push
sbb
adc
call
push
adc
test
dec
pop
xchg
push
xchg
mov
jg
pop
dec
push
std
pop
xlat
aas
movsl
stos
mov
dec
xadd
pop
lock
pushf
scas
movsb
dec
iret
sub
pop
sbb
mov
xor
shll
mov
or
dec
sbb
jecxz
inc
lods
add
aaa
lods
lret
jmp
jmp
dec
pushf
and
inc
jno
add
inc
dec
push
std
out
inc
jle
adc
cli
adc
push
jg
shll
aas
dec
fsubl
mov
jge
dec
lods
and
rorl
add
inc
aad
mov
sbb
dec
adc
or
add
dec
mov
cmp
fstp
xor
loopne
sub
fcoml
lods
push
lods
mov
inc
or
mov
and
sbb
cmpsl
jg
mov
adc
imull
in
jno
bound
ja
jg
inc
test
cmp
push
jg
aad
in
adc
orb
ror
ss
xchg
sti
mov
popa
arpl
adc
push
jp
jb
mov
loopne
aaa
adc
int
pop
xchg
cmp
insl
movhps
scas
and
sub
mov
cmp
pusha
ret
nop
iret
add
adc
mov
xor
xchg
mov
xchg
inc
repz
jns
sahf
shll
adc
jg
iret
sahf
or
dec
xchg
pop
lret
pop
adc
push
outsl
sub
test
mov
repnz
push
fwait
fs
rol
vmptrld
add
out
mov
xchg
or
ret
mov
das
into
jae
xchg
loope
push
cmpl
insb
push
cmp
in
daa
mov
lods
dec
shlb
pop
push
pop
mov
hlt
mov
adc
iret
push
out
leave
fstl
pop
or
dec
xchg
into
pop
aad
jmp
jle
lock
ss
sahf
jg
lods
sarb
push
mov
inc
mov
lds
outsl
sbb
es
push
movsl
sub
imul
xchg
mov
xlat
or
aaa
jl
out
push
pop
addr16
fs
push
inc
stos
push
ss
sub
mov
xor
lahf
mov
and
lahf
mov
inc
add
jle
fnsave
repz
or
insb
mov
push
fwait
icebp
push
out
lea
ss
jae
imul
jno
xor
int3
rcr
shl
mov
arpl
mov
or
xor
pushf
add
fisubl
mov
lods
pop
pop
aad
dec
in
jo
sarb
jmp
mov
test
mov
sub
or
out
pusha
sbb
add
add
outsb
test
mov
arpl
push
jle
lods
test
pop
sub
inc
sub
pop
in
jg
mov
sub
push
in
adc
sarb
push
inc
fcoml
imul
inc
mov
inc
lahf
add
out
cmp
add
std
dec
adc
ljmp
aam
add
add
ret
es
stos
lock
sub
fidivl
testb
cld
dec
mov
movsb
ss
lret
sbb
dec
test
cltd
jp
sbb
imul
mov
stc
push
call
and
cmpsb
adc
enter
shrb
jns
mov
push
fisttpl
leave
jge
lahf
dec
push
movsb
arpl
push
push
push
add
into
jecxz
mov
nop
mov
fs
and
mov
mov
das
sub
aad
cmp
aam
rcll
aas
xchg
push
in
pop
push
out
js
pop
pop
jae
stos
clc
pop
cmp
gs
jmp
mov
adc
xlat
pop
xor
xchg
pop
andps
cmp
mov
gs
int
cmp
xor
push
mov
jp
sub
stos
subl
jnp
adc
data16
jns
xor
test
xchg
loope,pt
movsl
in
and
loopne
cli
push
dec
sbb
add
cld
mov
dec
sbb
mov
rcl
adc
test
cmpsb
inc
gs
call
pop
mov
lahf
jo
push
pop
lods
inc
aam
movsl
pop
and
aad
pop
fcompl
jo
fidivs
cmp
adc
fldenv
dec
pop
ret
xchg
mov
fs
xor
push
hlt
bnd
mov
gs
sub
mull
insl
fmul
push
scas
sub
cmpsb
mov
in
sbb
push
fs
push
test
sbb
pop
cwtl
mov
int3
outsl
pop
lods
mov
std
push
cld
fimull
cmpsb
notl
fidivrl
jno
xor
inc
loop
gs
enter
cmp
adc
aas
in
cmp
and
outsb
or
xlat
fisttpll
pusha
mov
mov
sbb
mov
shlb
xlat
lret
int
xchg
jecxz
pop
leave
sbb
pop
sbb
adc
fdivp
and
xor
dec
div
inc
lods
imul
jo
add
lea
scas
loop
shll
bound
lock
mov
xchg
imul
push
sub
mov
add
shl
xlat
and
mov
notb
sti
dec
sub
push
nop
js
mov
jecxz
xor
mov
xor
sub
pop
call
sbb
push
push
fdivrl
sub
ds
iret
les
xor
jo
es
mov
fwait
movsb
bound
and
aas
aas
lcall
pusha
imul
mov
imul
jb
jae
mov
adc
repz
repz
jp
xor
rcll
mov
push
movsb
sbb
pop
stos
push
fisubl
mov
xchg
loopne
add
pop
test
jo
mov
orl
movsb
pop
jb
mov
aaa
inc
addr16
movsl
and
jns
fisttpl
xchg
jnp
xchg
sub
outsl
ret
fsubl
and
leave
sub
sbb
shlb
rcll
lret
lods
cwtl
mov
adc
repnz
ljmp
aaa
adc
out
inc
mov
repz
and
subb
or
test
jecxz
mov
fbld
or
leave
lret
insl
or
adc
jbe
push
xchg
and
inc
push
es
call
sahf
inc
es
xor
mov
lods
adc
icebp
push
add
int
jge
push
xor
push
int3
repnz
push
daa
add
repz
add
fistl
es
mov
stos
jnp
lcall
dec
fdiv
lret
add
mov
cmp
mov
daa
push
dec
fwait
xchg
jo
cwtl
and
cmp
add
scas
iret
fs
mov
pop
sahf
ljmp
out
aas
push
pop
dec
sub
stos
cmp
mov
ss
adc
addl
mov
push
lcall
je
xor
in
lahf
mov
clc
xor
fs
ja
mov
arpl
popa
sbb
arpl
stos
adc
or
mov
and
hlt
cmp
loope
add
xchg
movd
mov
aam
xchg
cmp
lods
and
jno
or
ss
or
dec
jle
jne
dec
push
push
pop
cwtl
movsl
lcall
lock
xor
iret
movsl
jecxz
in
in
repz
cmp
jle
push
popf
shrl
cmc
insl
push
repnz
mov
xor
repz
and
mov
add
ds
cwtl
pop
mov
loope
cmpsl
mov
icebp
loopne
pop
subb
mov
leave
pop
popf
mov
jo
sub
data16
mov
mov
sub
xchg
inc
mov
pop
cmpsl
xchg
stos
and
aaa
inc
ret
jecxz
add
out
pusha
jge
push
cmp
imul
xchg
sbb
adc
mov
and
out
cmp
in
adc
ljmp
xchg
xchg
std
ret
cmpsb
pop
lods
jp
push
or
or
and
add
or
mov
add
jg
clc
mov
dec
arpl
addr16
out
in
cmc
pop
fwait
mov
rol
sbb
jl
arpl
inc
jmp
sub
sti
mov
cwtl
and
mov
jae
inc
xchg
shlb
xor
jno
orb
xchg
pop
sbbb
push
or
or
shrb
sbbb
xor
adc
lahf
ljmp
mov
adc
inc
cmp
fdiv
pop
cmp
add
dec
pushf
test
and
aad
mov
andb
xchg
mov
add
mov
mov
xor
and
xchg
fs
push
adc
sarb
loop
mov
sub
add
cmp
out
pop
in
mov
pushf
fldl
mov
add
fmull
imul
pop
icebp
test
push
xchg
cli
sub
sbb
test
and
sub
push
lock
and
pop
add
lods
pushl
mov
pop
sub
ror
in
std
lods
imul
mov
mov
push
dec
xorb
adcb
inc
arpl
adc
mov
js,pt
jo
fisttps
xchg
lods
add
lahf
stc
popf
sub
push
mov
mov
adcb
add
fwait
pop
pop
loopne
xchg
hlt
xchg
gs
iret
pop
cmp
testb
fisttps
or
test
or
push
scas
sbb
ss
cwtl
das
nop
and
or
mov
push
inc
sahf
mov
push
cli
in
mov
push
dec
fildll
nop
push
push
and
mov
mov
inc
enter
mov
dec
clc
stos
dec
jmp
movsb
decl
int
cmpsl
push
ljmp
push
add
cmovs
icebp
xchg
fnsave
dec
push
inc
popa
or
xchg
mov
mov
sbb
fisubrs
dec
and
shr
pop
cmp
inc
mov
sbb
iret
fdivr
js
arpl
jg
jno
adc
jmp
push
xor
repz
mov
push
rorb
add
ljmp
adc
mov
fimuls
cmp
rolb
push
jae
ret
scas
lods
popa
out
ficoml
cmp
addb
pop
das
push
enter
mov
sbb
popf
push
xor
mov
ds
test
jno
ja
xchg
xor
lds
stos
clc
add
mov
stos
shll
popa
adc
dec
xchg
adc
scas
ret
lret
pop
mov
mov
adc
pusha
pop
adc
mov
mov
cmp
nop
scas
sub
test
rorl
cmc
mov
xchg
rclb
jl
or
stos
inc
dec
sub
adc
pop
dec
daa
hlt
fistl
idivl
dec
idiv
dec
adc
movsl
jnp
push
add
and
xchg
inc
push
cmc
jl
and
popf
aaa
ret
fcomps
ffree
mov
push
and
mov
xchg
jmp
adc
movsl
clc
in
xor
mov
sbb
nop
pop
lret
mov
stos
movsl
jno
popa
outsl
filds
data16
out
jmp
push
inc
cmp
out
lea
cmp
pop
stos
arpl
sti
dec
mov
inc
inc
mov
mov
out
ror
mov
mov
xor
lcall
xchg
cld
dec
insb
in
xlat
jnp
js
clc
fcmovnu
and
sub
fldt
call
sub
or
lods
and
cmp
cmp
or
inc
insb
outsl
xor
cmp
imull
mov
pusha
mov
mov
vpperm
adc
cmp
js
int
push
iret
mov
daa
int
pop
fwait
xchg
imul
push
insb
sbb
das
cmc
pushf
rorl
adc
call
push
hlt
push
mov
xlat
mov
movsl
xchg
std
fnstsw
push
adc
sbb
and
add
jmp
lret
sahf
imul
xchg
pop
cmp
mov
mov
test
jecxz
pop
inc
or
inc
xchg
cwtl
pop
xchg
test
decl
movsb
add
les
fdivrl
out
outsb
sub
mov
and
pop
mov
or
not
mov
in
dec
jle
sar
inc
mov
adc
loope,pt
sbb
call
and
test
loopne
or
inc
and
cld
leave
and
rclb
lret
bound
xor
lret
pop
shrl
xor
movsl
in
pop
enter
je
out
push
dec
nop
rolb
dec
xor
cmp
cli
clc
into
test
in
inc
fstl
add
add
lcall
sbb
ja
aad
aaa
jle
mov
outsb
or
inc
push
stos
push
ljmp
xlat
aad
fisubrs
xor
ljmp
pop
pop
jp
aaa
jmp
ss
jge
mov
test
and
loop
arpl
daa
cmpsl
out
push
add
push
stc
cmp
or
jl
cmp
orl
sbb
adcb
mov
adc
inc
mov
pop
fimuls
in
loope
push
jno
push
fbld
pop
inc
pushf
jge
jecxz
adc
jle
adc
mov
jg
jg
pop
adcb
pop
adc
pop
mov
xchg
pop
inc
push
loopne
add
pop
in
aam
cmp
or
lret
add
movsb
inc
adc
sub
aam
or
and
xor
gs
repnz
test
jnp
inc
push
mov
push
adc
fxtract
mov
mov
mov
ret
or
insb
les
sub
cld
je
sbb
into
imul
sbb
stos
cld
mov
cmp
adc
in
cwtl
sbb
and
out
adc
scas
jge
jmp
xor
xlat
cmp
mov
out
dec
and
add
dec
scas
cmp
pop
jmp
inc
mov
mov
lea
fwait
aad
pop
cmp
bound
std
mov
mov
and
stos
loopne
orb
dec
clc
mov
pop
push
ljmp
dec
jo
mov
cltd
dec
xchg
jbe
sub
movsl
scas
shll
mov
and
inc
dec
dec
sti
ret
mov
cmpsl
pop
test
jp
sbb
xlat
xchg
fwait
xchg
push
adc
fstl
aas
hlt
call
xor
jno
jnp
push
incl
das
inc
jo
jge
fmull
and
and
and
fwait
xchg
add
call
sarb
fs
push
inc
in
dec
sbb
pop
dec
aas
loopne
or
shll
loop
repz
gs
cld
cmp
pop
call
popa
jae
inc
idivb
sahf
mov
xchg
inc
ljmp
and
pop
mov
push
test
xor
push
popa
pcmpeqw
jb
outsb
mov
push
push
xchg
cltd
jmp
fnstenv
enter
pop
std
lret
xchg
mov
add
outsb
jp
leave
cltd
mov
sti
and
push
faddl
es
inc
mov
addr16
les
or
cs
push
stc
test
pop
or
pop
test
mov
and
and
pop
in
cmc
daa
in
sub
test
icebp
push
lock
das
stc
push
ret
mov
cmpsb
popf
mov
push
mov
add
cmp
subb
mov
testl
pop
scas
xchg
sbbl
dec
fistl
test
mov
mov
pop
mov
fucomip
dec
xor
cmp
and
jge
in
cmpb
fcmovnb
jge
in
insl
adc
and
jno
mov
xchg
out
lahf
dec
outsb
mov
pop
scas
xor
sbb
pop
lret
loopne
xchg
sbb
jnp
leave
pop
js
ret
mov
xchg
cmp
push
stc
pop
jmp
sbb
dec
and
adc
jp
and
and
mov
enter
shl
push
push
push
fisubrl
sub
push
lods
fwait
cmp
shrb
mov
fs
jns
mov
or
mov
add
and
and
ljmp
inc
add
stos
mov
xor
or
jecxz
pop
ja
mov
cmp
mov
aaa
and
add
sbb
aas
jle
push
data16
popa
mov
jmp
jne
sbb
std
das
lods
sbb
sti
mov
push
jbe
scas
leave
lcall
mov
dec
mov
push
call
mov
int3
pop
cmpsl
loop
adc
dec
in
mov
xlat
jmp
pop
mov
cli
mov
nop
insb
stc
ss
jo
repnz
and
dec
fidivl
cs
sbb
fsubrs
pusha
jmp
push
inc
xchg
add
add
add
xchg
cltd
sbb
cmp
jp
rclb
pop
std
mov
das
or
sbb
sub
je
mov
mov
imul
dec
nop
sbb
cmpsb
test
cmc
or
es
test
fdiv
add
imul
inc
mov
outsl
loop
in
mov
adc
mov
cld
lods
pop
popf
addb
loop
pushf
inc
loopne
pop
sbb
xor
icebp
stos
pop
ret
sbb
fnstsw
sbb
dec
jnp
lds
iret
sbb
mov
and
addr16
sub
xchg
push
xor
xor
mov
stos
xorw
rorb
add
mov
lcall
pusha
rorl
in
xchg
sbbl
gs
mov
mov
mov
enter
push
hlt
mov
jecxz
data16
fwait
inc
push
lcall
xchg
xchg
jg
mov
out
hlt
fsts
loop
aad
js
negb
or
sub
in
mov
imul
idivb
fcomps
xor
fsub
add
cmpsl
pop
rcrl
jl
jecxz
das
sub
xor
nop
movsb
out
mov
sub
cwtl
pop
xlat
jne
ss
dec
inc
scas
xor
or
popa
aad
push
addr16
gs
mov
lea
push
aam
inc
pop
dec
setns
lcall
xlat
pop
stos
add
notb
sbb
jbe
push
test
jmp
adc
loop
adc
and
imul
and
mov
cvtps2pi
fs
fildl
shrl
jbe
pop
imul
in
fsts
adcl
push
mov
adc
es
idivl
dec
cmp
mov
adc
ret
or
mov
call
fistl
inc
xchg
pop
jne
push
imul
inc
cmp
iret
hlt
subb
outsl
xchg
cli
test
inc
push
enter
js
push
mov
xchg
inc
mov
and
outsb
iret
testl
cltd
fistpl
xchg
inc
enter
sbb
inc
fsts
int
dec
mov
push
das
icebp
js
pop
loope
pop
enter
sahf
sahf
int3
in
pop
lods
push
xchg
das
add
mov
add
inc
inc
mov
mulb
fisttpll
bound
cs
or
push
cmp
imul
rcr
mov
fadd
sub
pop
subl
negl
xchg
add
pop
mov
movsb
ret
sarb
cmovb
or
std
imull
fldcw
pop
repz
xor
and
cmpl
cmp
inc
mov
sub
iret
inc
and
daa
mov
repnz
pop
mov
shr
push
les
cmpsl
or
push
jne
xchg
sub
cmp
adc
in
push
xchg
popf
out
test
pusha
push
decb
xchg
dec
testb
mul
and
dec
iret
rorb
push
adc
shrb
xchg
inc
mov
outsl
mov
rclb
or
xchg
pop
fwait
mov
inc
insb
movsl
sub
add
adc
sub
stos
frstor
dec
out
mov
iret
lods
cmp
xchg
repz
movsl
lret
cmpsl
or
xchg
dec
imul
lret
mov
cmc
add
jecxz
dec
pop
inc
mov
jmp
enter
ret
push
mov
sub
notl
sahf
or
in
rcll
cld
push
push
add
out
test
fldl2t
call
cmpsb
test
push
test
hlt
aaa
mov
icebp
xchg
and
jae
clc
cmp
mov
mov
dec
sub
sbb
cmp
xor
cli
adc
xchg
ret
aam
ss
sub
arpl
mov
aas
mov
and
jle
xchg
cmc
adc
mov
sbb
and
mov
dec
dec
or
mov
push
insb
or
mov
bound
imul
push
adc
fst
sbb
in
jnp
fiaddl
mov
ljmp
xchg
insb
adc
leave
pusha
in
push
cld
mov
loop
or
xor
dec
out
loope
pop
mov
lds
cmp
sub
mov
inc
repnz
pop
pop
fdivs
aam
fistl
add
ja
pop
mov
xorb
mov
xchg
lock
cmp
xchg
jb
ret
ds
popa
call
cmpsl
fimull
call
shrb
lret
jne
movsb
lahf
lock
mov
adc
push
mov
inc
push
inc
sbb
mov
mov
les
jge
scas
xchg
aad
pop
and
orl
add
das
and
xchg
pop
mov
add
or
cmp
test
ds
insb
ret
jb
push
or
das
popf
adc
in
xchg
jmp
cmpsb
pop
dec
testb
adc
mov
push
sub
or
js
out
jno
stc
scas
addl
lods
xchg
insb
es
inc
pusha
mov
pop
aas
loop
cwtl
iret
fisttpl
imul
iret
bound
mov
mov
ja
mov
les
ljmp
xor
lock
xor
fldenv
pushf
rcr
leave
mov
std
outsb
popf
insb
mov
sbb
cmpsl
in
push
les
lods
aam
lds
jp
cmpsb
gs
out
and
mov
outsl
data16
cmp
pushf
adc
rorl
loop
dec
adc
lea
mov
out
into
cltd
jmp
lds
insl
pop
mov
pop
mov
insl
imul
xchg
cmpsb
add
bound
jae
andl
fcmovnb
popf
test
adc
sub
or
mov
aas
push
jae
jnp
cmp
jp
std
hlt
adcl
mov
enter
notl
jo
pop
cmp
loop
sub
xchg
xchg
and
or
insl
adcb
mov
enter
movsb
es
nop
jb
sbb
pop
push
movsb
adc
fdivp
fstps
mov
add
xchg
fidivl
lret
push
add
cs
fmull
sub
dec
andl
mov
sbb
adc
and
and
pushl
in
jne
daa
or
mov
add
shl
mov
inc
xchg
or
push
sbb
leave
int
xchg
in
mov
and
out
push
cmp
call
mov
ljmp
cmp
and
adc
xchg
daa
data16
es
sub
pop
shlb
in
divb
out
mov
sub
cmc
popf
sahf
jo
hlt
pop
inc
in
sbb
mov
or
pop
xlat
rolb
out
sub
sahf
in
cld
pop
adc
pop
into
cld
adc
popa
mov
ss
mov
das
imul
cwtl
or
test
rcr
add
popa
mull
push
out
cmovae
outsl
cmp
xchg
aad
push
push
repz
jbe
fdivl
fsubs
fwait
outsl
push
xchg
dec
xor
pop
ss
lret
push
push
mov
out
mov
sub
loope
ljmp
cmc
ffree
xchg
pop
iret
inc
sub
xchg
push
sub
cmpsb
out
jge
pop
mov
pop
push
jae
push
push
xchg
inc
adc
mov
push
nop
or
push
xchg
lret
ss
data16
adc
loope
out
jecxz
fildl
adc
test
add
jmp
inc
das
aam
shlb
xorb
out
dec
repz
or
dec
fidivl
push
inc
mov
xchg
cmp
sahf
mov
icebp
jmp
xor
movsl
push
out
sti
dec
es
pop
ljmp
popa
and
lock
cmp
xchg
cltd
fistpll
lahf
xchg
data16
fidivs
mov
data16
test
lcall
rolb
jo
in
lret
mov
jmp
xchg
loope
push
xorl
xor
cmp
sub
outsb
pusha
les
add
sbb
in
sahf
dec
mov
xor
adc
fisttps
sub
mov
test
jl
inc
inc
cmpsl
mov
xor
sbb
cmpsb
add
mov
mov
in
out
xchg
sub
cmpsb
mov
jns
add
scas
push
nop
in
lret
mov
pop
enter
mov
inc
out
in
push
and
mov
add
scas
xchg
call
jl
sub
jnp
xor
mov
sbb
pop
test
push
enter
mov
ret
es
xor
inc
pop
pop
cs
xchg
mov
sub
cli
push
adc
rclb
inc
fisubs
arpl
pop
and
popf
ret
dec
sub
in
dec
int
ja
rcr
in
scas
dec
and
out
jg
push
mov
stc
dec
jne
or
ds
jg
data16
inc
test
je
dec
fcom
fs
push
mov
adc
inc
push
cmpsb
int
scas
dec
nop
insb
adc
shll
incb
jnp
push
out
test
icebp
cmp
pushf
sti
mov
sbb
ret
clc
ja
es
mov
shll
mov
jo
pop
lea
in
loope
lods
sbb
or
jecxz
loopne
dec
popf
cmc
add
repnz
and
add
push
out
mov
outsl
cmp
fidivrl
sbb
popa
jmp
ss
idiv
mov
lods
add
xchg
mov
out
dec
dec
stc
add
lods
lahf
aas
repz
add
inc
cmp
mov
icebp
popa
adc
add
adc
push
and
push
mov
repnz
mov
popf
stc
out
mov
cli
push
push
mov
push
shufps
stc
in
rcrl
idivl
adc
pusha
sti
imul
imul
mov
xor
in
or
xor
pop
lea
jle
xorb
xor
pop
adc
dec
sub
loope
leave
fsub
and
clc
insl
sbb
loope
clc
xchg
adc
popf
les
imul
dec
or
mov
xor
xchg
mov
mov
fimull
mov
xchg
insl
pop
dec
jl
cli
sbb
mov
xchg
dec
rol
adc
jns
xor
incl
aas
and
fimull
xchg
sub
aas
mov
dec
stos
xchg
add
in
cmp
outsb
movd
sbb
mov
sti
pop
test
aad
inc
mov
or
pop
ja
cmp
mov
clc
xchg
push
fs
sbb
imul
xor
in
pop
inc
adc
and
dec
lea
mov
out
xchg
xchg
jnp
aas
cmp
jbe
ja
push
or
adc
fidivs
pusha
mov
mov
mov
cmp
add
mov
xchg
movsb
ja
test
jl
icebp
lds
xchg
push
xorl
push
arpl
add
or
sub
cmp
adc
fcomi
add
adc
jmp
into
loope
lcall
inc
fisttpl
test
aaa
and
xchg
cmp
dec
rcrl
add
ret
adc
add
pop
jg
mov
inc
dec
ret
ljmp
mov
cmpsb
adc
dec
xchg
fadds
push
lahf
sub
add
mov
cmpsl
lret
test
fistl
sarl
pop
stos
mov
dec
mov
daa
jae
mov
jae
add
cmpsl
in
ljmp
cmp
lock
gs
ja
orb
jmpw
fisttps
mov
rolb
jmp
icebp
lcall
lret
dec
icebp
shlb
cwtl
mov
popa
inc
test
jbe
in
movsl
fs
popa
inc
sub
iret
fcompl
lock
sbb
lods
push
adc
inc
dec
or
jns
cmp
xor
pop
lods
imul
sub
pop
shll
push
testl
mov
dec
leave
insl
push
push
hlt
scas
sbb
ret
shlb
jmp
fsubrs
jle
mov
cld
xor
push
iret
repnz
mov
inc
hlt
dec
test
cmp
cmp
sub
fists
aaa
and
mov
mov
xchg
mov
dec
cmp
loopne
data16
scas
inc
sbb
pop
and
shrb
push
jb
or
inc
inc
xor
in
and
or
push
xchg
add
and
and
out
loope
addl
adc
loopne
fstp
sub
mov
xor
inc
in
stos
dec
mov
add
imul
imul
inc
dec
sahf
xchg
out
test
push
sbb
int3
xor
push
cs
add
jmp
xor
mov
cmp
and
add
rorb
jns
loop
js
dec
movsl
inc
rol
fs
mov
pop
sub
jne
sbb
mov
scas
xchg
cltd
aas
pop
mov
shr
pop
scas
xchg
inc
repz
cld
adc
fnstcw
adc
push
mov
pop
out
fcomi
sbb
jge
test
or
push
in
shlb
leave
push
xor
jae
dec
xlat
lods
or
cmpsb
dec
lcall
xchg
pop
push
repz
xchg
stos
outsl
fbld
lds
jl
mov
dec
xchg
lods
xor
es
push
cld
loopne
mov
sub
cltd
push
aad
cmp
or
jle
dec
xor
int
push
stc
xchg
mov
push
add
push
push
lret
jbe
xchg
rclb
jmp
scas
xchg
fwait
call
dec
mov
sti
fisttpll
cmp
aas
dec
arpl
gs
ja
or
push
jl
clc
jnp
arpl
fsubp
jge
mov
test
jge
imul
pop
or
adc
mov
pop
cmpsb
arpl
stos
push
push
jl
sbb
mov
and
mov
inc
rorl
pop
js
bound
test
pop
rcrl
ds
push
push
cmpsb
push
sub
aad
push
inc
lahf
jb
push
push
mov
sub
addb
jnp
je
jl
cmp
sbb
mov
pop
insb
addr16
mov
das
xchg
movl
loopne
mov
sub
test
mov
sub
xchg
outsl
in
lret
fistl
and
dec
mov
mov
aas
dec
jb
js
push
fwait
loop
hlt
int
xor
pop
stos
xlat
call
int3
data16
fidivrl
xor
fisubrl
sbb
mov
inc
inc
nop
mov
movsb
ret
cmp
shrl
dec
js
faddl
repz
ret
sbb
nop
add
aam
fsubrs
push
lret
out
test
or
arpl
mov
stos
push
or
xchg
adcl
mov
cmp
mov
sbb
push
ret
sub
enter
sbb
ljmp
mov
jg
xchg
inc
push
cmc
test
rol
lahf
add
iret
sub
and
out
into
out
dec
xlat
mov
ret
pop
cmp
subl
xchg
ja
out
xchg
sub
jno
sub
mov
push
inc
inc
dec
movsl
and
out
push
pop
xor
lcall
loopne
adc
imul
dec
mov
in
mov
xor
clc
cmp
xchg
push
jp
sbb
inc
xchg
mov
jne
adc
push
sbb
add
fwait
in
mov
adc
jmp
ljmp
xor
mov
ret
scas
jbe
int
lret
mov
push
mov
iret
and
les
add
jmp
in
push
sbb
cltd
fs
cmc
ds
mov
pusha
icebp
mov
jne
inc
ss
pop
push
pop
lea
mov
out
inc
icebp
add
jbe
pusha
jae
sub
in
push
inc
ffreep
inc
pop
in
stos
cmp
xchg
aad
push
scas
add
mov
test
bound
daa
jne
mov
pop
aas
popf
fldt
fadd
sub
lods
int
in
sub
sbb
les
shlb
and
push
and
loop
shr
inc
loop
roll
lods
or
jcxz
fsubs
pusha
das
jge
nop
int
shlb
mov
sub
ret
or
xchg
call
fwait
stos
mov
push
sbb
outsb
stc
outsl
mov
sub
jae
shlb
movsl
clc
and
mov
jle
mov
jno
push
icebp
jb
inc
push
aas
dec
fwait
clc
cmpsl
dec
jb
lea
mov
mov
in
inc
lahf
insb
pop
ja
inc
insb
andl
mov
shrl
push
push
jnp
sbb
jmp
jle
mov
stos
lahf
iret
sub
icebp
xor
out
sub
xor
scas
jecxz
pop
fs
fwait
mov
add
fs
jecxz
mov
and
mov
sar
sub
dec
mov
sub
mov
sbb
je
push
cld
push
das
icebp
and
outsl
in
repnz
lods
popf
mov
call
inc
or
pop
or
add
cmp
jp
repz
test
imul
cli
xor
mov
repz
dec
fmul
pop
je
push
ja
or
dec
adc
sub
arpl
xorb
mov
pop
gs
and
insl
out
push
mov
lahf
dec
fcmovnbe
sbb
pusha
mov
sbb
xchg
insb
sub
loope
cmp
or
jae
sbb
jb
or
xchg
insb
sahf
pop
aas
add
shrl
cmp
ret
cmp
add
push
pop
sub
mov
inc
in
js
inc
xor
add
xchg
dec
fiadds
dec
mov
pushf
stos
fldenv
jb
xor
mov
cmp
adc
xorb
loope
jmp
xchg
icebp
add
sub
sbb
sbb
jne
addl
or
or
add
imul
pushf
fsubl
inc
aam
pushaw
xchg
sub
imul
mov
shl
ja
sub
sbb
shll
push
sub
push
popl
mov
jmp
inc
out
mov
jmp
dec
cmc
lea
ficompl
xorb
in
movsb
sub
stc
sahf
out
imul
mov
add
xchg
dec
ret
inc
xchg
mov
jne
inc
arpl
pop
mov
js
out
xchg
push
scas
out
adc
sti
je
mov
bsf
pop
out
mov
ljmp
mull
subb
jne
divb
jge
and
mov
cmp
aaa
loop
mov
xchg
loop
push
aas
rclb
adc
lods
js
cmp
fidivs
dec
aad
push
add
pop
sahf
cmp
fsubl
call
test
add
add
call
xchg
jno
lret
push
mov
pop
insb
icebp
mov
lods
push
dec
int
out
sub
orb
cwtl
js
imul
add
sbb
test
sarl
rclb
fbstp
loope
adc
xor
pop
push
cltd
pop
xchg
rolb
xor
repz
and
xchg
ret
jge
out
cmp
aaa
in
fsub
jne
xchg
adc
mov
ret
lahf
pop
inc
pop
insb
into
fildll
test
jmp
or
call
and
cmc
dec
pop
insl
push
fisubrs
std
movsb
sbb
pusha
dec
das
jl
xor
movb
xchg
inc
xor
pop
adcl
and
fimull
dec
test
cmp
pop
adc
test
insb
add
push
or
cmpsb
cmp
xor
loopne
mov
dec
je
inc
int
fcoms
sbb
xchg
sbb
test
dec
jge
js
dec
pop
incb
lods
dec
cltd
cltd
push
push
adc
stc
in
bnd
xchg
pop
mov
mov
ljmp
js
into
pop
adcl
stos
addr16
jbe
dec
jnp
push
fsin
pop
mov
mov
imul
mov
inc
popa
mov
bound
int
stos
ficomps
xlat
lret
dec
add
stos
mov
inc
inc
lret
ret
repnz
loop
cmp
dec
inc
ret
dec
je
and
cmp
mov
dec
lods
jne
add
add
cmpsl
xchg
lcall
ret
push
pop
mov
nop
mov
gs
or
inc
lahf
movsl
hlt
mov
pushf
xchg
mov
sbb
jno
enter
jne
pop
jne
sub
fcoms
pop
lods
insb
sub
nop
pop
dec
test
ljmp
cld
mov
dec
mov
mov
sbb
xchg
cmc
sub
dec
jae
jns
inc
cmp
or
add
lea
stos
sub
js
fdivp
or
xlat
bound
inc
ds
fsts
adc
rorb
adc
mov
jmp
pop
pop
mov
mov
add
fisttpl
leave
js
mov
fiaddl
fwait
or
sbb
sarl
or
sub
lds
gs
mov
xchg
ss
adc
test
adc
cmp
into
adc
or
inc
jle
mov
lds
out
nop
stc
shrl
adc
mov
jmp
or
lret
ret
push
clc
cmpl
xlat
mov
inc
les
inc
and
adc
js
es
imul
fildll
lods
stos
out
and
push
mov
mov
adc
cltd
iret
mov
pop
nop
out
inc
mov
lahf
ja,pt
sbb
sub
popa
jns
lods
sub
pushf
into
push
frstor
ret
adc
lds
sbb
xor
adc
jae
icebp
xchg
mov
lcall
js
lods
imul
push
mov
lea
shlb
and
pusha
xor
lea
or
mov
push
mov
js
cmpsb
cmpsb
call
leave
dec
jecxz
pop
sti
mov
xchg
jg
int
mov
mov
and
sub
jbe
inc
sbb
mov
outsb
cvtps2pd
cmp
xchg
jno
xchg
jecxz
lea
repz
mov
out
jno
mov
stc
loopne
scas
sahf
push
mov
sbb
jle
out
stos
xchg
in
int
sbb
subb
lods
xlat
aam
fcmovnbe
dec
aaa
xor
jns
rcr
pop
jo
dec
xchg
push
in
mov
enter
adc
inc
int3
mov
clc
xlat
push
xchg
fs
call
push
push
sbb
test
mov
push
fdivrs
pop
out
inc
mov
aaa
xchg
imul
or
icebp
mov
into
or
add
rorl
mov
lret
pop
mov
add
fwait
mov
sbb
mov
push
fstpl
sbb
cmpsb
fsubs
add
enter
sub
mov
das
mov
pusha
int
inc
cmc
test
pop
and
dec
or
cmp
cmp
stc
aam
or
mov
inc
or
push
mov
in
stc
xor
pop
mov
inc
gs
sub
xchg
cmp
lods
pop
fcoml
sbb
aas
jp
jp
gs
lds
rep
and
mov
xchg
mov
and
pop
cmc
imul
loope
mov
inc
int3
ss
in
out
sbb
pop
daa
ss
and
in
push
xchg
fidivrs
lods
mov
pop
js
mov
fdivrl
cltd
imul
imul
aad
arpl
sbb
neg
pop
lea
daa
repz
push
and
out
mov
dec
rcrb
cmp
repnz
andl
inc
push
adc
jno
fwait
xlat
fwait
lock
sbb
xor
cld
out
scas
ss
pop
sub
pop
add
shrl
xor
xchg
sbb
nop
cmp
shlb
dec
test
cmp
aam
xchg
daa
or
or
pusha
mov
inc
adc
imul
in
pop
add
mov
je
xchg
mov
sbbl
imul
mov
mov
ljmp
adc
pushf
ret
mov
pop
arpl
cli
stc
push
out
sub
xlat
jne
sbb
cltd
jb
fisubl
out
test
push
ljmp
push
sbb
je
mov
fucom
dec
xchg
mov
leave
push
sub
sahf
push
mov
mov
mov
mov
arpl
fwait
ret
insl
and
lcall
sub
fwait
and
dec
xlat
sarl
inc
pop
inc
ss
adc
cwtl
jp
jno
sahf
and
mov
pop
jno
cmpb
stos
je
adc
or
inc
pusha
dec
xchg
or
push
sbb
push
mov
sub
call
mov
mov
in
pop
daa
fldcw
stos
mov
pop
jbe
sarl
pop
pop
daa
enter
push
lea
push
dec
sbb
jb
in
inc
daa
dec
mov
sbb
mov
mov
es
xor
lock
sbb
cmc
adc
rcrl
daa
pop
popf
add
lcall
out
sub
fsubl
pop
dec
out
das
cmp
cmp
mov
aam
adc
pop
jae
inc
aas
sti
inc
movsb
lds
dec
xor
mov
cld
xor
shrl
lret
and
xor
sub
add
adc
inc
or
js
dec
mov
popl
xchg
xor
jne
outsb
enter
mov
push
lods
clc
mov
cltd
inc
cld
rcr
xor
mov
fcomps
xor
psubd
dec
andb
inc
mov
add
mov
jl
mov
movsl
jo
repnz
into
xchg
insl
outsb
icebp
or
testb
int3
jae
sub
cmp
jb
cmp
sbb
scas
leave
cltd
mov
jge
in
ds
xor
mov
les
fisubrl
push
in
adc
test
in
pop
ljmp
push
and
push
sub
jae
test
rclb
shlb
rep
hlt
cmp
lea
xchg
push
mov
arpl
lret
cmp
dec
cltd
push
xchg
sbb
test
js
fsub
mov
stos
xchg
dec
cwtl
xlat
pop
or
pop
jg
push
roll
and
pushf
adc
xor
mov
stc
cmpsb
out
fldenv
cmp
jmp
repz
xor
insl
xchg
add
daa
ja
aad
sbb
sbb
mov
mov
popa
inc
out
inc
sub
imul
or
ss
insb
enter
js
fldcw
std
ljmp
test
cmp
push
in
mov
push
cmp
cmp
xchg
mov
dec
push
or
test
lret
sub
loope
adc
adc
inc
pop
add
jmp
int
fmul
loope
ficomps
fstpl
enter
popa
aaa
cltd
xchg
loopne
inc
ret
add
jl
sub
sub
pop
ss
xchg
sbb
xchg
mov
xor
ja
inc
add
fwait
fwait
ja
mov
shrl
loopne
pop
out
cld
inc
adc
xchg
cmpsl
xchg
out
pop
inc
jno
jae
in
xor
outsl
in
mov
movsl
jne
lcall
mov
stc
inc
push
in
les
lea
std
insl
in
sub
xor
inc
pop
mov
addr16
sbb
lahf
repz
std
mov
lock
adc
repz
jecxz
int3
adc
addr16
jno
sub
adc
vdivss
cmp
test
cmp
xchg
dec
jb
aas
ss
ss
push
jae
pop
dec
pop
call
lock
mov
xor
and
mov
into
pop
ss
out
cmp
mov
add
dec
out
xor
adc
bound
xorb
xchg
add
push
mov
inc
or
xchg
aad
int3
testb
js
fildl
xchg
mov
mov
shl
mov
insb
std
dec
insb
or
lcall
mov
mov
xchg
stc
inc
inc
add
aam
xchg
cwtl
mov
adc
xchg
enter
gs
scas
sub
iret
pop
inc
fsubp
cmpsb
xor
jmp
movsl
jae
mov
leave
imul
aam
add
lcall
fsts
sahf
dec
cmp
jb
cmpsl
jb
xchg
inc
out
jp
clc
data16
pop
cmp
push
mov
iret
xchg
jmp
adc
test
jl
cld
pop
xor
insb
sbb
dec
lods
inc
movsl
dec
push
dec
or
imul
scas
fwait
mov
into
lods
in
jbe
pop
xor
add
daa
jl
or
or
je
dec
push
mov
xor
push
movsb
arpl
pop
cld
ret
dec
mov
inc
pop
mov
lret
cmp
fcmovnu
push
dec
dec
and
dec
xchg
jl
in
iret
mov
aad
push
imul
divl
in
sarl
push
loope
sub
jp
push
into
and
ret
faddl
enter
rcrb
mov
ret
fiaddl
jp
or
in
imul
mov
mov
iret
cld
repz
je
je
stc
xor
insb
dec
or
daa
add
iret
add
pop
outsb
out
inc
stos
imul
stos
and
dec
test
cmc
xor
jmp
je
jge
pop
xor
repz
pop
and
mov
xchg
or
in
pop
adc
dec
pushl
cld
cwtl
or
push
pop
repz
lods
scas
popa
outsl
mov
ds
and
push
jg
cmp
andl
out
cmp
add
cmp
out
lcall
stos
sub
inc
cmc
ljmp
stos
inc
mov
lret
xchg
mov
out
xchg
cmp
repnz
sbb
mov
xchg
push
xchg
sbb
mov
int
into
mov
xor
fnstenv
and
mov
jnp
cwtl
xchg
subl
jns
dec
movsl
imul
sbbl
xchg
pop
clc
popa
test
cld
and
sbb
push
subl
out
call
pop
sti
repnz
or
in
insb
sbb
int3
rclb
pop
add
aam
xor
sarb
sbb
imul
cmpsl
inc
int3
aaa
mov
push
mov
mov
repz
jno
insl
adc
sbb
push
popa
mov
sub
movsb
dec
jb
cmp
ret
out
mov
fwait
cld
mov
insb
xchg
loop
mov
or
imul
and
dec
or
add
xor
lahf
mov
rol
xor
pushf
jge
mov
or
mov
nop
std
iret
sbb
cwtl
mov
xchg
ret
fisttpll
jl
mov
add
fcmovnu
je
xchg
fldl2t
cmp
xor
aam
dec
sbbb
xchg
cmp
popa
mov
xchg
std
aam
push
mov
ja
pusha
sbb
adc
push
cmpsl
add
pop
xchg
daa
add
pop
dec
nop
jnp
adc
inc
dec
fldenv
and
test
inc
push
push
cltd
int
subl
outsb
lock
push
leave
fldcw
imul
xchg
out
xchg
test
jmp
outsl
xlat
loope
jg
jmp
jecxz
popf
dec
shlb
lea
jle
or
daa
cld
and
pop
daa
and
roll
sub
push
adcb
or
push
ja
lods
dec
inc
jne
dec
pop
cld
imul
mov
cmc
dec
ljmp
ja
das
and
frstor
ret
into
movsl
mov
lret
xchg
cmpsl
dec
jns
push
das
or
mov
and
or
mov
push
xchg
sbb
or
orl
mov
jmp
cmp
sub
add
xchg
mov
dec
jl
out
dec
ficoms
cmpsl
addr16
stos
out
jo
inc
xchg
sbb
loop
ds
mov
pop
jb
or
sub
adc
std
es
rcl
jl
cmpsb
dec
shrb
hlt
insl
mov
sbb
or
push
imulb
mov
in
incl
insb
in
mov
mov
mov
insl
pop
fists
lahf
jle
mov
dec
pusha
movsl
lods
pushf
shll
inc
dec
in
mov
mov
push
fwait
jmp
xor
xorb
stos
je
mov
and
scas
addr16
add
out
sbb
pop
ficompl
mov
sbb
sub
inc
outsb
aas
mov
mov
movsl
popf
loop
ljmpw
lock
loope
fcomip
popa
push
xchg
cmp
pop
les
adc
insb
sub
in
pushf
and
into
xchg
mov
lock
ljmp
push
lods
pop
sti
fs
jge
cmp
sahf
jo
adc
mov
jns
cmpsw
fs
movsb
sbb
xorl
mov
inc
sbb
mov
cmp
pusha
cltd
sub
adc
pop
lock
push
jecxz
jle
shrl
adc
repz
cwtl
jp
mov
scas
sbb
sar
rcrb
xor
cld
das
add
aaa
out
loope
dec
or
pusha
fsubrs
in
xor
fistpll
or
mov
cmp
add
push
sbb
cmpsl
aaa
mov
pop
and
jl
enter
mov
lret
es
test
mov
jae
dec
scas
dec
ja
pushf
inc
mov
popa
adc
mov
std
xor
mov
mov
ja
aad
xchg
ja
inc
inc
sub
std
cmp
fdiv
add
sahf
addb
stc
loop
clc
hlt
jae
xchg
xchg
stc
mov
jne
out
nop
andb
orb
jg
ss
and
js
pop
xchg
cmp
mov
jg
shrb
addr16
mov
adc
mov
out
mov
je
inc
gs
jl
and
mov
xlat
adc
imull
push
mov
int
or
xor
jmp
mov
xchg
jecxz
repz
or
popf
or
in
test
add
jge
in
jo
insl
push
pop
outsb
mov
cmc
jbe
xchg
push
aas
in
add
pop
ss
fistl
cltd
cld
jbe
xchg
mov
xchg
scas
inc
loop
cmc
cmp
fisubs
push
in
inc
xor
sub
mov
cwtl
sahf
xor
jb
call
rorl
push
jp
lcall
pushf
test
loop
add
mov
popa
repz
push
inc
rorl
push
repnz
test
cmp
hlt
or
mov
outsb
iret
mov
sbb
es
mov
push
mov
push
int3
pop
les
popf
mov
cwtl
lret
insl
xchg
jmp
shr
and
into
push
js
cmpsb
call
or
paddsw
dec
sub
loopne
daa
cmc
test
adc
push
jge
cltd
cmp
xchg
jbe
add
lods
mov
sahf
addr16
xchg
stos
fadds
insb
inc
imul
idiv
lret
hlt
popa
jmp
inc
in
cs
shrb
icebp
enter
mov
add
je
es
xor
jne
add
test
ja
sahf
daa
outsl
xor
in
jnp
cmp
js
fmull
cwtl
add
dec
pop
mov
push
ss
sub
inc
fisttps
mov
xchg
lds
and
xchg
sub
leave
xchg
leave
push
std
jge
pop
xchg
mov
jmp
clc
pop
clc
orl
inc
xor
test
sti
inc
mov
xchg
fwait
int
shr
test
mov
pop
mov
jl
outsl
es
dec
pop
or
lret
xor
test
imul
mov
xchg
int3
inc
in
inc
cmpsb
fmul
bound
scas
dec
xchg
lods
mov
xor
icebp
lret
pushf
bound
cltd
dec
pop
in
sub
fsubl
push
sub
xor
xor
cmp
xchg
loope
notb
adc
lods
cmp
push
inc
movsb
and
and
stos
data16
xor
ja
lods
cmp
or
daa
into
les
dec
xorl
div
arpl
lods
out
jno
dec
jmp
inc
int3
add
jg
in
adc
in
shll
ja
shll
mov
dec
cmc
mov
lahf
pop
outsb
les
sub
mov
fisttps
jne
or
push
cmp
push
shl
adc
push
sti
xlat
xchg
int
repnz
mov
xchg
xchg
js
les
les
bound
sub
push
sub
push
or
mov
outsb
hlt
rcrl
icebp
jnp
lret
rclb
subb
add
mov
inc
mov
js
lahf
cmp
jg
pop
scas
nop
lds
or
jb
xor
or
sub
test
cmpsb
inc
movsb
stos
xor
adc
call
repz
in
dec
adc
mov
test
jo
call
hlt
data16
mov
push
jne
push
pop
insb
fidivs
inc
and
mov
call
ss
es
or
std
xor
cli
mov
xlat
ss
subb
aaa
test
aam
inc
jb
xchg
or
mov
and
lods
scas
cwtl
pop
xor
lcall
jbe
jle
pusha
aaa
setle
mov
mov
xor
sub
incl
es
jnp
jle
pop
adc
aaa
jl
sub
dec
scas
out
mov
mov
addb
testl
pop
nop
fidivl
int3
and
in
fnsave
mov
popa
imul
mov
or
xor
imulb
adc
mov
add
pop
xor
outsb
decl
jecxz
dec
data16
out
test
xchg
jge
out
push
aaa
jecxz
scas
lahf
pop
les
lock
enter
cli
in
fcomp
stc
rorl
mov
jecxz
jge
lods
mov
xorb
cmp
lret
les
fldl
push
cmp
test
pushl
lods
inc
jns
jb
pushw
sub
icebp
xchg
loope
mov
pop
push
mov
sarl
jmp
sub
leave
mov
push
in
adc
adc
mov
dec
sbb
repnz
rclb
insb
or
mov
sub
xlat
and
sahf
sub
lods
in
daa
lret
push
xor
fildll
mov
sarl
dec
cmpb
mov
cs
push
push
das
pop
lret
inc
lcall
mov
push
sub
jge
rorb
mov
sbb
pop
pushf
push
pop
inc
mov
dec
push
movsb
inc
push
xor
mov
lock
or
lret
notl
push
ror
ret
mov
cltd
and
cmp
mov
adc
cli
inc
ljmp
loop
xchg
xor
insb
jle
daa
add
or
and
dec
jno
jbe
cmp
adc
je
inc
imul
xor
dec
outsl
es
fdivrl
cmpsw
adc
push
cmp
or
daa
jbe
in
aas
ficoms
dec
lock
xor
jmp
scas
cmp
sbb
div
das
int3
adc
sti
lods
push
mov
and
lret
xchg
jle
out
jmp
mov
xor
and
or
pop
addr16
mov
mov
push
jae
ret
sti
xor
mov
xchg
fs
jecxz
sub
jecxz
mov
aam
in
ret
sub
dec
add
loope
ret
or
add
or
shll
aas
ret
jmp
pop
ret
lret
outsl
or
push
pushf
or
outsl
pop
icebp
pusha
jae
std
push
pusha
and
and
mov
aas
daa
or
mov
adc
and
roll
mov
cwtl
scas
cmp
push
inc
das
lock
mov
mov
mov
and
aaa
jnp
fs
cli
sub
jb
xchg
push
out
xchg
les
mov
sub
jnp
aas
mov
pop
cld
fsubs
push
les
xchg
pop
jp
jge
cmp
popf
and
clc
lds
xchg
fbstp
mov
arpl
cwtl
or
sbb
jns
inc
push
and
rcrl
sub
cmp
mov
aaa
cmpsb
aad
mov
xchg
cmpb
jle
or
pop
xor
je
add
adc
and
arpl
test
cmp
or
scas
xor
xchg
bound
inc
das
mov
idivb
xchg
add
add
push
in
xor
pop
pop
mov
mov
and
xlat
in
adc
mov
mov
pusha
jmp
test
cmpb
in
push
pushf
ret
xlat
in
sbb
push
lock
jns
in
ret
dec
dec
mov
stc
sub
nop
xchg
mov
mov
sbb
stos
dec
stos
jl
lock
mov
push
mov
and
inc
inc
xchg
movsb
fcomps
mov
jbe
nop
dec
outsb
pop
clc
loopne
out
fcoms
in
cmp
imul
sbb
push
cmp
sti
jb
notb
out
in
push
xchg
lret
jmp
clc
test
add
or
lods
mov
mov
jns
pop
pop
xor
pop
imul
pusha
int
cs
add
cmp
xor
pop
cli
jle
movsl
pop
fwait
jns
dec
ljmp
push
imul
test
push
adc
jno
jge
pop
dec
and
dec
pop
jns
pop
sub
sbb
add
cmp
adc
add
lods
xchg
mov
mov
das
sahf
ret
jb
and
call
mov
sbb
or
into
adc
cwtl
jbe
out
movsb
rorb
mov
mov
inc
subb
mov
xor
inc
xor
or
or
pop
sahf
fistpl
or
lods
mov
xchg
add
stc
std
push
mov
cmpsl
jg
inc
fidivs
js
neg
adc
cmp
adc
lahf
fstpl
aas
jecxz
mov
dec
push
add
xor
aad
test
cmc
push
jl
mov
rcr
in
cmp
aaa
cmp
jl
pusha
sub
cmpsb
xor
xchg
inc
pop
movntps
pushl
cmp
icebp
test
xor
out
lock
mov
jecxz
sub
ret
cmp
mov
jnp
fs
sbb
or
mov
stos
jne
jp
inc
sarl
xchg
sbb
mov
jnp
addl
roll
xchg
stos
or
nop
gs
cli
shrl
cmp
inc
push
icebp
scas
fld
push
rep
cwtl
stc
cmp
iret
cmp
das
inc
arpl
fiaddl
add
xlat
cmp
fidivs
adc
stc
ret
ljmp
out
xchg
cmp
test
test
mov
cmp
or
enter
sbb
mov
mov
cltd
xchg
shll
xor
addl
mov
add
pop
insl
rcrl
or
in
cmp
add
je
mov
test
sar
cmpsb
pop
aam
push
fs
test
sbb
mov
out
loopne
jnp
pop
fisubrs
fwait
xchg
sbb
mov
movntps
je
jp
dec
ljmp
mov
les
push
in
jae
mov
xlat
in
imul
dec
bnd
inc
negl
loopne
fucomi
or
jbe
and
mov
jecxz
mov
sbb
cwtl
mov
in
inc
push
pusha
inc
hlt
mov
mov
dec
mov
stos
cltd
jbe
mov
sub
mov
aad
mov
not
fwait
movsb
jb
fstl
fimull
and
sarl
mov
xor
pushf
adc
mov
rolb
arpl
fmuls
mov
xor
ret
movsb
ljmp
out
setae
mov
xor
inc
sub
mov
mov
jnp
clc
adc
or
sahf
add
xchg
mov
xchg
pushl
sbb
shr
push
test
fisttps
in
aad
cmp
data16
into
or
cltd
and
inc
je
outsl
aas
sbbb
lcall
roll
xor
or
dec
dec
mov
mov
sub
sbb
aaa
mov
popa
imul
fidivrs
mov
or
pop
adcw
inc
hlt
mov
cmp
int3
add
jecxz
lret
dec
jo
ficompl
lea
push
add
mov
scas
push
jb
mov
push
jle
or
insb
dec
sarb
mov
sbb
addr16
std
pop
inc
and
les
ss
xchg
mov
lods
mov
dec
js
popa
sarb
es
dec
xor
aad
leave
sti
popf
dec
icebp
xor
imul
xchg
in
mov
cmp
cmpsl
std
popa
push
aad
push
push
jbe
or
aam
and
and
cmp
icebp
fsubs
sbb
lock
and
push
andb
ss
and
int
dec
andl
out
pop
cmp
jne
out
mov
jns
push
fdivl
mov
mov
add
arpl
sub
shlb
fsubrs
cmp
aad
push
sub
inc
add
jecxz
xchg
fdivrl
lret
add
arpl
push
sbbl
cmpsl
test
rcrl
mov
imul
cmp
dec
insb
addr16
adc
mov
loopne
or
and
test
loopne
mov
jbe
sub
lret
lret
enter
in
sbb
mov
jl
cmp
mov
aam
sbb
push
inc
and
xchg
pop
insl
addr16
adc
add
and
ja
and
add
outsl
or
loop
push
pop
shlb
mov
mov
stos
mov
sbb
add
or
push
push
jmp
sub
cmpsl
jge
adc
orl
leave
pushf
push
mov
enter
mov
leave
add
std
lods
call
sti
aaa
jno
and
cli
into
cld
push
and
push
push
sbb
lahf
jb
movb
pop
or
sub
sbb
test
das
and
mov
loopne
test
std
inc
idivl
jbe
xor
jb
sub
cmpsl
ds
aad
ds
leave
cmc
dec
fnstcw
rorb
mov
scas
mov
or
cmp
and
mov
xchg
dec
movsb
ja
fsub
cmpsb
lds
out
and
clc
push
add
jle
stos
mov
sahf
push
mov
out
clc
mov
dec
std
nop
xor
cmp
pop
pop
ret
mov
adc
fcoml
in
pop
push
incb
xchg
loop
stos
add
cs
aaa
rol
outsb
xor
and
or
call
sbb
decb
mov
out
pop
adc
mov
jg
mov
dec
rcrl
popa
movsl
xchg
mulb
jo
iret
fs
dec
push
fs
pop
test
shlb
cmpsl
and
jno
mov
inc
mov
dec
add
fsub
jb
lock
imul
lcall
data16
sbb
das
test
mov
cmc
dec
sbb
add
jge
or
les
dec
movsl
or
ss
pop
jne
outsb
xor
dec
in
inc
mov
and
loope
sub
lock
mov
sub
je
jge
add
or
mov
xorl
sub
stos
std
adc
dec
daa
sbb
sbb
cli
dec
xchg
jmp
adc
std
jae
lods
sbb
mov
cld
pushl
xor
jl
fwait
mov
mov
daa
mov
fldln2
pop
les
xchg
dec
and
dec
lock
rolb
or
arpl
xchg
in
loope
addr16
cli
push
jg
cmp
cld
enter
or
sub
and
mov
inc
inc
pop
mov
iret
scas
adc
adc
cld
movsl
out
jge
push
fists
push
xlat
dec
or
inc
dec
aad
mov
es
cmp
lods
fisubrs
xchg
jl
dec
aas
lahf
cmp
cmp
dec
cmpsb
fidivrs
and
jae
sti
in
or
mov
idivb
leave
pusha
jle
cmc
push
rolb
lret
mov
test
jg
xor
adc
leave
out
in
push
xorl
pushf
lret
mov
jg
xchg
repnz
and
addr16
cmc
jno
ljmp
or
hlt
scas
mov
and
gs
jne
mov
sub
outsl
xchg
jmp
push
pop
call
inc
repnz
push
mov
imul
lcall
lea
mov
lds
xchg
ja
mov
mov
xlat
push
cli
cmpsb
test
xchg
add
and
mov
adc
cwtl
fistps
cmpsl
jb
inc
popa
nop
aaa
lret
dec
popf
iret
jp
push
xor
mov
xor
mov
push
movl
ds
jae
shl
rcll
ret
int
movsl
or
dec
inc
in
pop
adc
xchg
mov
inc
insb
aas
pop
shll
lret
mov
add
cli
test
pop
jmp
mov
mov
mov
and
mov
into
cwtl
addl
lcall
inc
xlat
out
fsts
dec
xchg
rcl
cmp
pop
xor
mov
in
out
jle
aam
fwait
xchg
sbb
mov
popf
aad
or
adc
add
jo
or
cli
movl
test
std
jecxz
sbb
adc
jecxz
repnz
cs
mov
sbb
in
call
ret
and
lods
xchg
lock
fdivrl
or
jnp
clc
adc
and
mov
loop
xchg
xor
jmp
dec
stos
sarl
xor
cmp
cmp
jae
leave
add
je
pushf
push
jmp
lahf
icebp
jbe
out
adc
in
mov
push
cmp
ret
push
sbbb
or
lret
cmpsl
jae
add
cmpl
out
push
andb
sbb
hlt
and
mov
out
pop
and
or
mov
ftst
pusha
cmpb
cs
xchg
cmp
sarl
out
xchg
dec
fstl
or
jb
mov
js
sbb
mov
jmp
gs
inc
sbb
dec
jne
arpl
cmp
add
insl
dec
mov
outsl
sbb
push
js
inc
and
xor
jp
push
je
out
inc
mov
dec
dec
mov
xchg
or
inc
jnp
scas
lods
or
mov
lret
stos
inc
mov
cmp
jmp
loop
lcall
mov
xchg
inc
mov
jne
xchg
rclb
outsb
cmp
in
jmp
jl
les
xchg
or
jmp
gs
xchg
lret
lds
hlt
hlt
out
lds
push
in
jge
cld
add
stc
push
fnsave
aas
dec
xor
je
aaa
or
fcmove
mov
aam
mov
xchg
lahf
or
or
sbb
aam
lods
in
sbb
cmp
out
jg
cmp
in
cmp
add
dec
xchg
jns
xor
ja
in
adc
in
fstps
jbe
pop
add
xor
mov
ret
xchg
mov
imul
add
xlat
hlt
lds
push
pushf
mov
insl
adc
mov
clc
jmp
lret
jae
mov
mov
dec
cmp
cmp
outsb
outsl
aas
xor
pop
mov
bound
mov
scas
adc
push
mov
jle
fcmovbe
inc
nop
pop
push
add
lea
dec
ret
xchg
adc
andb
ficoml
mov
mov
inc
into
je
enter
push
add
add
xor
shlb
cmp
cmp
pop
clc
mov
test
add
or
and
fisttpl
arpl
lock
fldcw
je
data16
cmp
aas
mov
dec
mov
inc
sbb
aad
mov
dec
pop
push
jne
inc
sti
add
dec
dec
add
push
repz
add
daa
fcompl
lock
xchg
cmp
loopne
inc
negb
mov
pop
lock
inc
enter
js
test
sbb
push
and
fadd
jge
sub
jne
rol
pop
mov
js
outsb
out
outsl
sub
fwait
add
inc
xchg
ret
inc
jmp
pop
jae
inc
dec
mov
sarb
xor
mov
mov
data16
xchg
call
mov
xchg
cmp
nop
fs
repnz
dec
mov
mov
jle
test
aam
inc
int
pop
sti
arpl
kmovw
call
popf
mov
pop
stos
dec
out
cmp
mov
rorl
test
negb
mov
test
subl
cmp
fiaddl
fucomi
mov
das
dec
add
es
aad
fld
jae
sti
inc
add
add
add
jl
adc
sub
repz
lods
out
pop
inc
test
insl
and
hlt
popa
rorl
push
cmpsb
xchg
sub
xor
jmp
mov
push
xor
addl
movsb
aas
int3
cmp
push
dec
adc
push
pop
or
ljmp
and
das
sarl
mov
int3
adc
mov
loop
xchg
jno
fistps
repnz
dec
xchg
xchg
inc
cmp
rcl
add
imulb
mov
push
lcall
pop
imul
cmp
mov
push
pop
mov
arpl
lods
bound
xchg
add
cli
sub
orb
and
rorb
add
xchg
sarl
arpl
test
ljmp
pop
enter
and
cmp
stc
stos
push
in
push
adc
cmpsb
dec
aas
fs
sbb
push
xchg
test
outsl
and
aaa
push
sbb
mov
pop
dec
push
jle
lods
pop
ja
push
xor
les
fs
xor
inc
mov
pusha
sahf
fidivrs
rcr
jo
mov
add
rolb
sub
sub
test
pop
mov
mov
out
enter
sub
adc
push
pop
or
add
xor
inc
dec
mov
lods
xchg
mov
sbb
outsb
popl
call
scas
mov
inc
inc
jle
in
pop
and
pusha
mov
loope
or
out
sub
dec
ja
pop
clc
jbe
jp
fdivp
push
pop
in
arpl
sbb
inc
sbb
mov
test
mov
cmpl
fs
cmp
movsl
stc
lock
cli
outsb
xchg
jmp
ljmp
or
rol
call
out
test
pop
movsb
dec
sti
call
mov
cmp
mov
outsl
add
pop
mov
stos
pop
mov
jno
addr16
xor
mov
aaa
adc
sbb
or
xchg
mov
shr
int
int3
pushf
jp
mov
inc
shrl
notb
mov
int3
sub
or
addb
enter
mov
ljmp
adcl
sbb
mov
mov
mov
jge
sub
or
sub
outsl
cmp
es
or
sub
es
jnp
rorb
and
clc
adc
incb
adc
rcrb
leave
stos
loopne
and
scas
daa
inc
icebp
in
and
scas
mov
jbe
dec
fmull
jecxz
and
dec
dec
or
test
add
jb
sar
dec
or
adc
into
loop
xchg
push
and
imull
jg
xor
jae
and
or
push
push
lds
outsl
shrl
std
out
push
xor
inc
stos
lods
sbb
push
mov
mov
mov
lcall
pop
stos
inc
int3
push
std
or
jae
addl
mov
mov
out
insl
dec
cltd
lock
lods
hlt
aas
and
ds
jbe
xchg
iret
mov
jns
dec
clc
daa
mov
aad
and
in
push
inc
mov
out
push
push
rcr
js
jo
orl
pop
dec
push
push
lcall
xchg
lock
inc
inc
push
add
aam
pop
push
fildll
mov
test
loopne
adc
xchg
arpl
sbb
or
jl
dec
mov
je
notl
pop
imul
lods
pushf
addr16
jp
jmp
push
push
push
outsl
pop
and
jno
dec
xor
rcrb
mov
imul
mull
inc
adc
clc
imul
pop
pop
push
pop
fiaddl
cld
je
daa
lds
ja
xor
cmp
loop
cltd
sub
xor
out
add
push
pop
and
mov
andb
enter
pop
aaa
adc
xor
cmp
dec
mov
imul
inc
lods
mov
adcl
in
scas
mov
decb
rcl
mov
lret
pop
adc
out
xchg
add
sbb
icebp
jnp
dec
jne
cs
and
mov
push
fdivl
mov
cli
cmpsb
jne
insl
aam
mov
out
pop
push
mov
scas
xor
sahf
dec
xchg
orl
push
lds
xor
test
in
mov
sbb
xchg
jns
or
push
movsb
jmp
test
sub
mov
xchg
dec
repz
jp
aad
sarb
jge
pop
sub
or
pusha
sbb
incl
add
sbb
push
fiadds
mov
xlat
inc
inc
sub
push
cmp
add
call
mov
cmp
mov
jp
mov
sub
xchg
adc
int
fstp
sub
in
jp
and
mov
mov
mov
call
dec
cld
fadds
cmp
and
or
push
arpl
imul
jb
sti
rolb
ljmp
xchg
nop
mov
mov
or
in
adc
pop
ret
dec
sbb
inc
cli
jbe
inc
lret
sub
mov
dec
push
mov
test
aam
aas
inc
inc
xor
add
xchg
pop
cmpsb
sbb
cs
adc
aam
inc
cs
mov
xlat
stc
mov
nop
sbb
add
iret
out
ds
in
stc
cmc
fcmovbe
scas
dec
xor
aas
jp
mov
lahf
mov
call
loop
scas
enter
int
fsubrs
ss
or
jns
clc
push
sbb
sub
jne
insl
test
jl
fadds
add
ja
sbb
mov
lock
inc
aam
xchg
movsb
hlt
jmp
test
fcompl
pop
xor
sub
sti
aas
jno
lahf
movsl
mov
cmp
scas
hlt
fwait
pop
inc
adc
jne
pop
pushf
ficomps
shrl
mov
xor
hlt
dec
pop
in
dec
and
lcall
sbb
mov
sub
popa
lods
nop
dec
ja
enter
mov
scas
adc
jnp
dec
pop
scas
jae,pn
pop
add
jbe
sub
cwtl
out
int3
ljmp
fldenv
cmc
in
push
mov
aad
inc
and
hlt
fimull
in
mov
fistpl
xchg
push
sub
push
fld
push
stos
imul
xchg
mov
ret
xchg
lds
xchg
fcmovu
push
xchg
mov
cmp
mov
lcall
inc
imul
in
mov
push
cmc
shl
pushl
push
adc
ja
xchg
stos
fists
aas
mov
jg
mov
jge
test
xchg
lods
cmp
out
mov
cld
push
pop
mov
pop
sub
mov
lods
inc
jecxz
pop
loop
in
test
sbbb
andl
ret
fwait
push
and
es
jle
jo
adc
js
scas
xor
mov
cli
pop
dec
dec
fisubrs
dec
cmp
xlat
inc
add
adc
mov
lods
aas
movsb
decb
inc
in
testl
pop
push
mov
loop
pop
or
sub
jae
cmp
ficoms
mov
pop
push
imul
mov
add
push
int
das
push
lcall
outsl
orb
jne
inc
dec
sbb
push
mov
jmp
in
sub
or
aas
or
pop
shll
push
ja
int
push
mov
mov
adc
pop
pop
es
call
mov
pop
aam
push
dec
xchg
adc
push
push
pop
dec
lock
stos
ret
mov
sbb
sub
in
sub
xor
cmp
pop
and
jp
enter
cmp
imul
push
adc
adc
lcall
test
cmp
xchg
sti
out
int3
mov
xchg
sub
cmpsb
mov
add
cs
imulb
or
push
fsubrl
imul
jne
fwait
int
xchg
shlb
rep
pop
in
cwtl
loop
iret
adc
cwtl
repnz
lock
push
js
pop
ret
shll
mov
mov
shll
mov
fwait
xor
push
fwait
mov
cli
adc
inc
mov
nop
aam
mov
icebp
mov
and
or
sarl
sub
lods
in
pop
mov
lahf
add
popf
inc
fcompl
jl
push
cmpsl
adc
dec
and
fnsave
in
add
std
sub
xor
lahf
rcrb
arpl
mov
sahf
mov
mov
mov
and
je
andl
or
lds
fwait
jne
clc
jmp
pop
cmpsl
add
inc
les
sti
mov
pop
sti
mov
hlt
dec
sub
and
jne
lock
lret
idivb
mov
jle
mov
rsqrtps
mov
cmc
add
mov
inc
loope
mov
pop
in
and
sub
jb
or
push
arpl
jns
insl
inc
sbb
add
adc
jmp
aam
push
out
add
push
popf
mov
and
sub
movups
out
pop
ja
popl
mov
mov
jl
sub
dec
mov
js
xor
mov
xchg
sub
fcomps
cmp
mov
arpl
loop
int3
jmp
daa
mov
addr16
popa
lcall
add
lret
shrb
sub
movsl
adc
roll
inc
mov
arpl
push
xchg
enter
mov
in
rcrb
xor
das
adc
cmpb
pop
sbb
xchg
jp
fdivl
adc
cmovae
cld
gs
aad
stos
idivl
fs
stc
dec
andb
pop
add
jl
aas
xlat
pusha
out
nop
pop
test
xchg
js
and
push
push
fsubl
cmpsl
sub
push
mov
jg
xchg
loopne
stos
clc
insb
in
jmp
inc
push
push
and
sbb
movsb
mov
jecxz
lock
lcall
xchg
ret
test
rcll
cli
es
test
xlat
jb
mov
push
inc
mov
sub
arpl
mov
dec
mov
lods
push
mov
in
arpl
cmc
sahf
sbb
sub
loope
jns
mov
cwtl
cmp
ja
imul
or
subb
add
lds
jns
push
aad
lcall
pop
mov
or
andb
sub
add
pop
in
sbb
xor
jno
cmp
pushf
dec
dec
std
inc
sbb
fbld
lahf
fcomps
cmp
or
aaa
sbb
daa
add
inc
jns
add
dec
mov
add
movsb
jg
dec
int
dec
cltd
jo
fldenv
xchg
add
leave
dec
out
mov
pop
faddp
inc
cli
icebp
sub
push
rclb
dec
ljmp
jle
mov
sbb
or
push
mov
repnz
mov
dec
and
lcall
jbe
rorl
dec
fsts
or
out
nop
notb
insl
ss
cmp
shl
mov
jno
xchg
jb
push
xchg
repnz
adc
add
cmp
mov
in
dec
out
fwait
sub
inc
loop
fdivrp
aaa
add
cmp
pop
mov
cmpsb
cmp
gs
jle
cmp
xor
pushf
and
inc
sub
mov
lods
cli
jmp
xchg
negb
mov
push
inc
lods
pushf
mov
in
push
out
inc
cmpsb
lcall
fsubrs
xor
mov
in
mov
xlat
xor
jmp
sahf
fucomp
int3
xchg
js
sbb
xor
test
xor
adc
ret
in
loop
jno
cmpsb
mov
xchg
push
dec
mov
fists
pop
ret
mov
inc
and
jge
pop
into
stc
insb
sahf
sub
sub
or
inc
jl
popa
outsl
imul
sbb
adc
push
sub
xor
mov
dec
cmp
mov
mov
xor
mov
cmpsl
mov
es
mov
inc
cmp
test
xchg
inc
cmp
mov
in
jnp
fidivrl
mov
push
bswap
dec
aam
popf
out
xor
sbb
cmp
jge
or
in
sub
movsl
cs
loope
aas
inc
dec
outsb
push
cmp
imul
std
or
insb
mov
inc
adc
jno
aas
loope
jnp
dec
adcb
mov
ficoml
leave
rorb
cmpb
jp
xor
cmp
mov
pushf
shrl
or
js
sub
pop
mov
jo
lock
xor
cmpsl
hlt
pushl
mov
addr16
dec
jmp
xor
mov
insb
cmp
cmpsb
sbb
lods
jnp
subl
repz
or
shlb
add
rcll
push
pop
fimuls
stos
ss
sub
ds
int
adc
jp
stos
andb
std
int
daa
cltd
rcll
jp
fistl
enter
nop
iret
stos
adc
mov
ds
out
icebp
es
imul
push
lods
push
adc
popf
mov
push
negl
jb
add
xor
fidivrl
adc
rorl
pop
fistl
cmp
fistpl
das
mov
ljmp
push
cltd
lods
jno
jae
mov
outsb
inc
jl
out
popa
xchg
in
div
mov
jne
and
jne
int3
shr
out
in
sbb
daa
adc
adc
aam
sub
mov
push
stos
pop
mov
push
cmpsb
fnstsw
xchg
shlb
inc
pop
pop
pop
push
bsf
push
xchg
or
mov
cltd
mov
iret
xlat
iret
push
inc
sahf
pop
inc
faddp
mov
jae
mov
mov
jae
shrl
xor
jo
push
scas
hlt
les
and
dec
jmp
repz
je
pop
daa
or
clc
xor
jl
mov
jno
stos
jns
jnp
dec
repnz
stc
lahf
dec
fs
inc
xorb
and
test
icebp
aas
cltd
push
pushf
sub
inc
mov
out
test
cwtl
sub
sbb
fnstenv
mov
lahf
fnop
mov
pop
inc
push
cmpsb
jmp
js
mov
out
mov
push
jne
push
mov
push
inc
or
cmp
lret
sarb
xchg
popf
push
aas
xor
mov
mov
cld
sub
cmp
push
ljmp
mov
fisubl
xlat
jmp
in
mov
nop
cld
rolb
out
mov
fdiv
or
jb
pusha
loope
or
mov
xor
ret
cmpsl
ja
jge
fildl
pusha
leave
jae
stos
mov
jge
jmp
mov
push
sbb
outsb
ss
loopne
repz
push
test
popa
xor
sbb
jl
andb
sub
mov
mov
xlat
pop
mov
pop
sbb
push
sti
lret
inc
shl
popa
lds
push
push
sbb
jno
cmpsl
fs
cwtl
xlat
inc
sarb
sub
cmp
outsb
or
cmp
loope
repz
pushf
inc
popl
gs
mov
call
test
dec
push
mov
cmc
xchg
cmpsb
fildll
or
paddq
test
call
in
xchg
mov
lods
adc
out
mov
fsubrl
in
fwait
pop
adc
pop
rorl
xor
jno
in
adc
cltd
pop
xchg
mov
sahf
sbb
mov
dec
rorb
out
or
sarb
out
shr
in
mov
mov
cmp
xor
repz
outsb
mov
dec
push
mov
hlt
pop
adc
jo
inc
insl
push
cltd
pop
jno
subl
pop
xchg
loopne
lods
in
rorl
mov
je
xchg
sti
jle
cwtl
sbb
push
hlt
sub
adc
test
insl
fisubl
push
cs
adc
pop
ljmp
pop
pushf
dec
cs
pop
inc
fsubr
mov
mov
pop
mov
push
call
sub
icebp
aad
cmp
mov
dec
inc
fcmovu
das
and
cmp
shrb
clc
xor
push
je
fsubl
js
pop
sbb
jae
dec
aad
bound
or
js
jmp
add
adc
add
scas
add
movsl
jg
inc
and
jg
fcmovu
add
dec
lods
into
push
out
and
ljmp
pop
jle
cmc
add
int
or
fcmovne
xor
dec
cmp
jge
xchg
fildl
test
add
rclb
or
sub
push
out
cmpsl
add
or
jbe
jge
stc
add
dec
adc
pop
jge
add
adc
sub
icebp
mov
xchg
pop
loopne
or
mov
dec
int3
mov
pop
test
xchg
std
sub
xchg
adc
movsb
in
push
mov
xor
mov
les
pop
jae,pt
dec
xor
xchg
pop
add
pop
pop
dec
mov
je
test
mov
subb
pop
adc
inc
jb
sbb
jne
test
das
mov
and
dec
jb
ret
pop
int3
mov
jne
ja
jb
mov
lcall
jg
jg
cmp
mov
clc
in
mov
and
inc
fadd
loopne
jne,pn
jl
pushl
pop
in
inc
cmpsb
lods
aad
pop
push
and
js
fsubrl
xor
or
jmp
dec
shr
push
lcall
cs
mov
push
push
ret
repnz
push
xchg
xorb
rcl
push
scas
pusha
out
and
jmp
addl
enter
ret
dec
cld
fmull
adc
lea
lret
sub
sub
dec
sbb
sub
xor
xorl
scas
sbb
shrb
ret
decl
pop
pop
xchg
mov
jbe
jnp
pop
xchg
push
push
add
out
sbb
stos
and
jmp
repz
xor
jle
popa
stos
leave
adc
std
inc
mov
cmp
cmp
sub
cmc
pop
cmp
jne
shrb
sbbl
fs
inc
insb
adc
jne
lea
test
adc
xlat
addb
sub
bound
xchg
sti
push
imul
pop
sbb
test
movsb
mov
enter
jo
mov
lods
adc
sub
jnp
pop
repnz
inc
cmp
mov
sub
add
aam
push
insl
xchg
adcl
ficoml
ljmp
push
push
scas
cmp
lock
inc
nop
rorb
push
push
jmp
imul
das
jno
mov
and
daa
sub
sbb
add
mov
pop
scas
fidivrs
in
add
adc
pop
aad
adc
xchg
rorb
fbstp
xchg
jns
popf
icebp
inc
aam
je
shlb
mov
repnz
sti
sahf
js
mov
mov
movsl
fwait
aam
fmul
or
das
loop
and
fadds
cwtl
nop
push
aas
sub
sub
loop
push
cs
jmp
in
sub
ficoms
mov
lock
cmp
pop
dec
leave
xor
cwtl
and
ret
mov
enter
push
sar
dec
dec
adc
mov
pop
into
icebp
popa
mov
stos
push
pop
jno
repnz
and
or
pop
inc
xor
sbb
call
dec
lods
or
cmp
dec
cmp
dec
lds
xchg
mov
add
popa
and
xchg
int3
cmp
test
cmp
clc
insb
je
xor
out
xchg
or
mov
test
pop
icebp
push
mov
adc
icebp
dec
sbb
leave
insb
call
adc
and
sar
sub
test
jge
jmp
pop
xor
push
lcall
pop
mov
sbb
ret
and
jl
or
insb
mov
subl
adc
adc
mov
mov
jno
cmpsl
sub
mov
gs
cmpsb
add
shr
sub
call
or
push
and
les
pop
mov
cmp
int
mov
stos
cmpsb
ds
push
mov
cmp
scas
jo
adc
lahf
leave
xor
lcall
push
mov
xchg
adc
cmpb
jnp
add
pop
sub
insl
inc
adc
out
cld
inc
in
cmpsl
loopne
popf
enter
add
mov
sub
les
jnp
sbb
pop
roll
lret
dec
cmp
incb
test
mov
sbb
ljmp
push
das
push
or
xlat
out
je
mov
add
push
pop
lock
xchg
push
cmp
popf
xchg
sbb
addb
lea
xchg
lods
sbb
inc
jne
into
sbb
push
out
imul
pusha
movsl
jge
push
cmp
fbld
test
insl
sub
repz
push
js
cmpl
setg
sbb
subl
cmp
test
cmc
and
fildll
mov
sub
sub
cmpsb
int3
push
add
insl
push
inc
sub
xchg
lods
lds
jns
int
in
orb
loope
mov
movsl
addr16
pop
out
imull
out
sub
push
testl
fcomp
mov
test
pop
sahf
jns
call
or
mov
imul
push
sbb
jae
mov
in
scas
stos
sub
dec
insb
sub
sub
jecxz
xchg
movsl
pop
lds
js
and
loope
and
xor
loope
adc
push
jl
jne
cmp
pop
inc
push
daa
stos
lods
or
jo
lock
xor
xor
orl
inc
and
in
fimuls
rol
mov
dec
pop
fwait
or
fsubrl
loope
shrl
mov
cltd
cs
shr
icebp
sahf
mov
lret
push
jmp
pusha
aas
fsubrs
add
daa
pop
shll
and
iret
rolb
fwait
sbb
es
movsl
aas
jno
xchg
push
orb
or
dec
inc
cmp
in
scas
or
popf
lahf
call
add
cmp
dec
pop
aas
loope
inc
cmp
mov
ja
mov
xor
jnp
mov
cmp
lahf
std
or
cmp
pushf
mov
mov
cmp
pop
nop
xchg
push
dec
js
xor
pop
mov
outsl
jg
das
dec
jge
jmp
into
jb
out
imul
add
xchg
jecxz
and
stos
lods
mov
addr16
movsl
jbe
inc
cwtl
mov
hlt
pop
cmp
push
push
fwait
dec
fdivrs
adc
stos
push
js
cli
mov
mov
dec
jg
pop
sahf
mov
aam
sahf
lcall
inc
iret
pop
mov
insl
mov
push
lcall
sti
cmc
mov
push
gs
pop
jg
adc
xchg
sbb
fldl
test
adc
and
add
dec
out
outsl
and
in
out
call
mov
sbbb
int
fldpi
sub
jp
pop
test
fcmovnu
sub
das
out
das
cmc
sub
dec
je
loope
dec
rolb
push
xchg
nop
mov
clc
xchg
aam
xchg
sbb
or
insb
stos
fstps
mov
or
jecxz
xor
mov
stc
aaa
dec
jo
jb
scas
lret
xchg
int3
out
or
lock
xchg
imul
shlb
addr16
sbb
pop
call
and
mov
out
xlat
out
stos
ret
sbb
shl
add
mov
fsubs
and
jecxz
test
shlb
adc
and
orl
sbb
ljmp
pop
pop
push
cmp
pop
mov
out
xor
mulb
ds
orl
mov
sbb
lods
push
bound
jo
cli
xor
cli
mov
cwtl
orb
imul
pusha
leave
pop
in
push
stos
scas
lock
add
shll
sahf
int3
int3
int
adc
inc
iret
call
dec
ljmp
sub
sbb
je
adc
movsb
sub
int3
mov
xlat
or
bound
scas
mov
mov
add
lods
sub
sbb
add
cld
pop
movsb
sbb
xchg
rclb
into
cmp
add
mov
push
pushl
in
jno
mov
subb
mov
js
mov
shlb
shlb
sbbb
repz
in
shll
jo
jg
int
fcomi
mov
sbb
mov
adcl
sub
xchg
cltd
and
mov
or
mov
add
jbe
sub
inc
imul
mov
loop
pop
inc
xchg
fcmovnu
icebp
mov
inc
cmpsb
std
je
xor
inc
xchg
pop
add
out
sar
sbb
xor
jae
jo
push
fs
pusha
mov
js
jb
pop
xor
cmp
imul
imul
sbb
fidivl
mov
test
sahf
mov
in
fildl
out
fsub
xor
add
adc
jb
pushf
mov
jae
push
test
cwtl
dec
cmp
insl
xchg
jo
nop
dec
dec
push
sub
insb
mov
jp
das
dec
call
dec
out
pop
lock
push
nop
les
push
xor
in
das
jmp
pop
inc
jbe
loop
cmp
inc
xor
aas
mov
inc
dec
jmp
xchg
cmp
cmp
mov
jb
shlb
out
dec
test
vpmacsww
push
lret
xchg
sti
movsl
shrl
add
sbb
push
sbb
mov
mov
lahf
mov
icebp
sbb
ja
sarb
in
fwait
jnp
ds
iret
or
subb
mov
lock
insl
sub
xor
inc
jne
jmp
popa
mov
fcomps
mov
mov
xchg
add
push
lods
cmp
ja
pop
dec
push
cli
outsl
jmp
pusha
mov
loopne
or
push
outsl
pop
pusha
mov
or
add
adc
push
adc
mov
cmp
cmp
jne
add
sbb
add
jge
push
jb
call
cmp
add
dec
cmpsb
test
add
je
dec
sahf
jae
sahf
xor
subb
dec
push
rorb
imul
int3
fcompl
adc
insb
fstpl
dec
aam
dec
or
lea
jb
mov
inc
add
jnp
dec
int
adc
dec
out
imul
repz
pop
xor
sub
xchg
in
addb
pop
xor
lea
lcall
sti
das
pop
out
clc
cmp
adc
cmp
or
stos
mov
testl
sar
dec
shlb
push
adc
ja
pop
je
or
dec
xchg
push
jle
sub
ss
sub
or
pop
push
das
push
fdiv
rclb
or
cmp
and
mov
mov
cwtl
js
pop
mov
ljmp
ja
test
dec
pop
xchg
adc
cmp
cmp
push
adc
sub
pop
add
cmp
mov
test
test
add
jecxz
arpl
je
xorb
xchg
call
sub
mov
ffreep
sub
or
pop
add
fdivs
jmp
sbb
rclb
push
rol
popf
dec
pop
ja
dec
cmp
out
pop
inc
jae
inc
and
test
test
or
data16
mov
outsb
push
hlt
adc
pushf
xlat
push
sbb
mov
sar
jl
xlat
test
in
int
xor
data16
sub
bound
mov
idivb
mov
and
jae
ret
out
fucomip
cmp
sub
roll
fwait
jne
rorl
daa
movsl
popa
loope
adc
xchg
xchg
inc
and
fpatan
gs
mov
daa
xchg
add
push
jge
jp
inc
popa
or
stc
test
jne
out
or
sarl
out
sub
or
scas
cmp
xor
call
cmp
loopne
call
xchg
popa
jbe
es
sahf
push
jge
leave
mov
insl
inc
repz
lds
xchg
fwait
xchg
cli
into
ret
popa
test
push
icebp
aaa
scas
fwait
sbb
and
mov
jb
inc
sahf
outsl
rcrl
mov
stos
imul
mov
sahf
outsl
out
cld
aas
sbb
add
out
in
clc
mov
mov
sarb
int
cltd
cmp
sbb
cmpb
or
sub
clc
lods
push
add
fs
rcll
roll
inc
adc
fistl
sahf
icebp
das
icebp
mov
divl
sbb
idiv
movb
aaa
fs
insb
pop
stc
sbbb
sbbl
ret
das
inc
ret
jg
jle
test
inc
int3
mov
lds
sub
lock
clc
or
arpl
popf
mov
mov
repz
repz
mov
lcall
cmp
inc
int3
insb
jmp
add
cmpl
push
mov
nop
dec
jns
nop
pop
cmp
dec
mov
addr16
bound
call
adc
imul
fadd
pop
dec
mov
mov
pop
aam
push
or
lock
or
jecxz
push
dec
out
push
stos
jg
xor
fcmovnbe
jae
and
mov
jl
out
jnp
jge
arpl
ret
push
loope
in
rcrl
outsb
cmc
or
add
out
push
int
loop
mov
ret
sbb
out
jbe
pop
jb
cmp
fcoml
sbbb
push
mov
xor
jmp
add
andl
jg
ljmp
mov
sub
std
dec
inc
pop
xchg
stos
shrb
sbb
pop
adc
int
lea
popa
js
iret
xor
rcrl
sbb
xor
and
or
mov
testb
movsl
pop
push
jle
fldcw
ror
dec
cmp
push
inc
sub
pop
jp
and
xchg
enter
xchg
orl
popa
adc
and
stc
mov
rorb
rcpps
adc
aad
ret
cld
mov
loop
mov
adc
lea
daa
and
sub
add
add
sub
mov
xchg
xchg
push
arpl
mov
addr16
scas
mov
es
ljmp
sahf
data16
cld
jmp
or
jnp
or
sub
mov
sbb
dec
xchg
push
mov
mov
cld
pop
mov
ja
adc
sarl
cmp
or
push
bound
scas
mov
enter
and
popf
sarb
xchg
sbb
jg
or
mov
push
xchg
inc
lds
test
in
push
stos
xchg
pop
shlb
jb
fiadds
adc
inc
mov
std
and
mov
jbe
jmp
js
pop
jae
mov
cmp
lahf
pop
es
xchg
dec
or
dec
push
sub
stos
movsb
cmpsb
pop
xchg
int3
enter
jmp
popa
pop
cmp
push
mov
shrb
daa
push
movl
addb
cli
int3
aam
aad
pop
pop
jb
jns
mov
add
stos
and
dec
orl
jbe
mov
mov
pop
clc
cld
iret
fisubrl
xchg
test
lods
jbe
xchg
jle
scas
adc
icebp
sbb
stc
repz
in
xchg
loopne
ss
nop
fstpl
jbe
mov
inc
in
jle
cs
sub
mov
lods
push
or
sbb
add
adc
sbb
dec
inc
push
loop
pusha
push
movsl
out
pop
jo
out
dec
lcall
xchg
adc
fimuls
in
rcl
or
imul
insl
adc
push
insl
mov
pop
dec
test
fnstenv
sbb
pop
rorb
xchg
jmp
mov
xor
lock
std
aad
jno
btr
jb
fisttpll
in
jns
mov
xchg
xor
in
mov
mov
adc
dec
inc
loop
sbb
mov
fstl
leave
jnp
call
dec
push
cmp
pop
in
adc
rcrb
iret
adc
and
imul
int
sub
iret
jnp
pop
push
mov
das
push
push
or
cmpsl
repz
or
adc
inc
lods
or
mov
nop
aas
outsb
or
and
es
add
dec
iret
cwtl
xchg
inc
aas
adc
mov
sub
or
stos
cmp
sub
mov
mov
lcall
inc
inc
jb
mov
ja
inc
sbbl
lods
mov
add
dec
sahf
sahf
inc
rcrl
loope
push
mov
and
jle
add
sub
dec
sub
lea
sbb
adc
into
nop
loope
test
sbb
pop
mov
mov
pop
lahf
and
xchg
aaa
xchg
or
fisubs
or
and
jo
cmp
and
lret
push
jnp
sub
push
aam
push
test
ljmp
enter
cmc
es
jo
pusha
out
pusha
bound
lods
jno
testl
jb
and
movsl
call
push
xrelease
or
mov
sub
inc
mov
ficoms
sub
lret
add
lods
xchg
leave
outsl
mov
cwtl
imul
je
push
js
test
jl
cmp
scas
in
pop
stc
sbb
outsl
dec
rcl
fxtract
shrl
sbb
or
imul
sub
mov
jns
push
jbe
and
in
in
lock
inc
mov
pop
adc
imul
int
mov
push
shlb
and
insl
fadds
pop
xorl
xor
jecxz
idivb
inc
clc
inc
gs
xorl
sub
cmp
or
sub
out
xor
xor
xchg
and
add
in
test
or
pop
xchg
insb
ret
mov
loope
into
adc
inc
rcll
stos
push
movsl
ja
shrl
push
add
hlt
outsb
fsubrs
pop
xchg
je
push
shr
pop
out
push
pop
mov
mov
cmpb
roll
pop
inc
jae
adc
add
adc
fnstsw
outsb
xchg
xor
push
int3
sub
push
cmp
lahf
xor
pop
std
aad
psubb
jb
and
xchg
mov
add
mov
insl
add
xchg
or
mov
pushf
xchg
rclb
fdivrs
add
dec
jp
addr16
cld
int3
lods
push
scas
jg
movsl
aad
mov
pop
dec
dec
loop
negl
xlat
and
add
fidivrl
pushf
fs
xor
push
jb
stc
cmp
arpl
andl
xor
mov
into
cmp
sbb
and
cmp
faddl
pop
xchg
stc
insb
mov
sub
or
iret
cmp
inc
pop
mov
es
inc
pop
leave
xchg
push
sub
out
push
fdivs
and
push
lea
sti
lods
sahf
mov
arpl
movsb
int3
add
cmp
loop
testb
lret
or
lods
sbb
cmpl
sbb
out
dec
pop
fidivs
mov
int
arpl
dec
cmp
ror
adc
mov
adc
jp
in
into
sbb
or
push
sbb
jb
decl
add
add
push
stos
stc
loope
pop
inc
mov
adc
push
or
divb
dec
and
xchg
or
mov
hlt
mov
dec
mov
out
sub
add
mov
push
mov
adc
add
sbb
dec
test
dec
into
cwtl
or
sarb
add
and
fisttpll
out
or
jp
xor
lcall
cmc
jmp
mov
stos
jnp
jl,pt
sub
cmp
je
xchg
call
roll
cwtl
jnp
push
std
aaa
aaa
jbe
das
outsb
adc
jns
in
cmp
push
mov
stos
cli
xchg
dec
enter
dec
rclb
pushf
xor
or
pop
lret
inc
push
sub
ret
xor
loopne
xchg
arpl
lcall
and
add
ret
scas
pop
pause
leave
and
lret
sbb
filds
out
xor
mov
mov
sub
jb
adc
test
jecxz
sbb
insl
jae
mov
std
xchg
push
lea
and
sub
movsb
int3
addr16
insb
xor
decl
mov
xor
dec
imul
jl
and
pop
jno
ss
inc
inc
xchg
adc
addl
scas
cld
fists
pop
loope
les
dec
sbb
dec
jmp
pcmpgtd
sub
mov
mov
push
mov
stc
cwtl
fildl
scas
mov
push
push
xor
pop
mov
jge
mov
dec
xlat
test
dec
fsubs
rolb
js
ja
cmp
fidivrs
frstor
fistpl
arpl
lods
inc
jns
call
mov
add
shlb
loop
inc
add
in
pop
cltd
outsl
xor
mov
add
xlat
cs
pushf
lods
pop
dec
xor
xchg
cmp
and
jle
cmp
sub
sti
insl
negb
xchg
sbb
inc
adc
dec
nop
roll
pop
xchg
mov
mov
cmp
aas
out
pushf
clc
cs
mov
and
sbb
cmp
arpl
fldcw
sbb
add
pushf
fstpt
in
jl
aas
mov
xchg
loope
jo
js
repnz
inc
fsubl
lock
fildll
xchg
lods
clc
adc
and
mov
repz
jl
mov
ret
jo
icebp
dec
dec
bound
loopne
add
ficoms
xor
lods
cmp
repnz
xchg
fistpll
mov
inc
in
cmc
shrb
out
fistl
stos
push
aam
out
or
mov
xor
dec
addr16
je
loopne
jg
push
adc
in
jo
lock
cli
xor
inc
jae
jecxz
adc
jl
call
cli
add
sbb
aaa
jmp
or
push
sbb
test
adc
and
orb
or
lods
add
xchg
insl
leave
in
out
shll
hlt
clc
xlat
cmp
jb
push
push
ss
xchg
stos
pop
xor
xor
addr16
mov
les
sub
js
xor
fldt
shll
bsf
imul
mov
add
repnz
ds
outsl
xchg
fldl
inc
and
jge
cmp
mov
and
icebp
stos
sub
loope
pop
fldt
cmp
dec
jmp
icebp
fiadds
cmpsb
sub
das
mov
mov
out
sub
pusha
dec
pop
adc
cltd
fmul
jg
add
scas
add
jg
fistps
scas
fs
mov
jp
sbb
push
pop
mov
test
mov
rcrb
sbb
lods
sbb
mov
les
test
imul
aas
push
ds
xor
ret
scas
movl
xchg
adc
jnp
inc
jg
inc
mov
test
and
imul
mov
mov
inc
outsb
mov
and
mov
inc
mov
test
or
je,pt
in
pop
rorl
mov
sbb
lahf
fdivrl
dec
sub
mov
mov
xchg
out
enter
sub
out
adc
cmpsl
nop
dec
ret
sbb
testb
push
shrb
insl
out
inc
fldl
xlat
cmpsb
xchg
fsubs
sahf
jg
pop
shrb
cmp
adc
sahf
sahf
mov
das
notb
fistps
sub
cmc
imul
fldl2t
sbb
mov
pushf
push
mov
xor
cmp
jmp
div
stos
push
mov
es
sbb
lods
jbe
push
out
insl
push
cs
xor
cltd
test
and
int3
jg
cmp
aaa
add
out
in
mov
push
add
lods
jmp
dec
mov
inc
icebp
cmpsl
push
mov
sahf
cwtl
cld
sarb
fbstp
cmp
mov
push
ds
jecxz
jmp
adc
pop
xor
jae
test
jecxz
test
sub
int3
cmc
fldcw
dec
xchg
call
decl
push
cmp
dec
dec
das
sub
push
in
movsl
xchg
or
aaa
ret
insl
in
add
scas
push
cmpsb
sbb
loope
sbbl
or
mov
ret
int3
imul
add
shrb
or
aad
sahf
mov
mov
arpl
jo
ret
sbb
stos
mov
jg
cmpsb
cmp
int3
lods
sahf
push
mov
loop
and
fldenv
adc
pop
idivb
jge
inc
add
shrb
ret
pop
mov
dec
imul
test
and
int3
add
lret
jg
lock
loop
jns
inc
inc
mov
push
addr16
mov
jg
faddl
push
sub
jo
add
insb
into
icebp
dec
or
push
cmp
pop
sarl
outsl
or
das
shl
aaa
fbstp
fdiv
jo
and
dec
adc
sarb
push
popf
sub
push
adc
clc
popf
pop
sub
cmp
shll
jnp
orb
inc
stos
mov
xor
cltd
xchg
iret
add
les
add
and
stc
cs
fldcw
movsl
sti
push
shrl
sub
xlat
add
notb
fs
dec
and
shl
push
xchg
movsl
lcall
sbb
xchg
xor
add
mov
movsb
insb
mov
sbb
sti
addr16
mulb
fildll
leave
push
outsb
jp
scas
xchg
xor
xchg
inc
inc
mov
adc
and
lret
xchg
pushf
scas
in
inc
add
sub
jb
imul
repnz
cmp
dec
loop
gs
lock
mov
setbe
loopne
mov
push
sub
data16
lods
pop
cwtl
jl
out
sbb
inc
inc
inc
push
pop
jle
bound
and
pop
xor
movsb
mov
add
scas
dec
mov
mov
dec
adc
push
push
fwait
negb
jae
in
jecxz
mov
and
jp
sub
and
sbb
pusha
or
std
dec
stc
cmc
or
push
pushf
leave
sbb
out
movsb
dec
mov
shl
sar
clc
loopne
test
rclb
pop
or
pop
mov
xchg
jp
stos
enter
scas
orl
inc
push
and
mov
jp
adc
call
data16
xor
decb
aad
inc
dec
pop
sbb
xchg
pop
mov
test
int3
mov
jle
ret
out
dec
push
imul
loopne
jbe
pushf
in
and
inc
movl
rorl
leave
int
fldenv
xor
push
mov
mov
adc
cmpsl
xchg
jle
cmp
cmp
jmp
dec
xlat
data16
pop
and
lds
aaa
and
repnz
pop
inc
xchg
mov
mov
jp
cli
lock
or
aam
cmc
lret
pop
mov
mov
sbb
daa
or
mov
add
imul
das
movsb
jge
or
adc
jge
jle
push
lret
mov
mov
ret
sbb
jmp
aad
mov
dec
aam
test
lods
dec
movl
push
inc
add
jno
and
pop
testl
inc
xlat
es
int3
mov
xchg
push
shl
mov
adc
sub
or
pop
fmuls
decb
in
pop
enter
xor
sbb
daa
mov
test
jno
mov
mov
or
mov
mov
inc
imul
fwait
xchg
cld
jnp
jae
les
imul
addl
pop
jb
popa
dec
inc
fsubl
ljmp
cli
dec
dec
cmp
out
addr16
pop
lret
pop
push
xchg
dec
cmp
rolb
pop
cmp
mov
out
hlt
addr16
mov
push
adc
sbb
mov
cs
jb
push
cmp
cs
iret
imul
and
loopne
mov
shll
iret
cs
inc
icebp
ds
test
pop
inc
adc
dec
push
mov
xchg
ret
push
add
add
mov
cmp
aas
pop
add
in
rcrl
mov
mov
out
jb
dec
pop
mov
sbb
insl
movsb
nop
push
sbb
xor
loop
mov
mov
sub
aaa
loope
xchg
add
adc
xchg
jmp
mov
stos
in
pop
cmp
pop
popl
ja
dec
lods
xor
sub
movsl
jb
gs
push
das
rep
mov
jne
mov
inc
inc
pop
fistl
adc
mov
dec
enter
iret
xchg
shl
in
fs
push
hlt
lods
jmp
mov
xchg
stos
scas
repz
mov
dec
xchg
dec
mov
test
lret
mov
call
adc
jno
div
iret
push
icebp
push
cmc
xor
fstps
daa
repnz
idivb
hlt
fnstenv
stos
mov
xor
rorl
out
jl
aad
aam
jge
and
dec
divl
pop
andl
fucomi
add
sbb
cwtl
mov
adc
push
inc
cwtl
ret
jns
cld
xchg
sbb
mov
faddl
lcall
cmpsb
push
mov
push
push
add
imul
mov
pop
xor
std
add
push
inc
dec
test
lret
lods
mov
outsl
ficomps
loope
lret
ficompl
rcrb
rclb
push
ret
lods
xchg
lcall
in
outsl
mov
mov
clc
cmpb
test
jb
adc
mov
sbb
int
shrl
mov
cmpsl
test
jg
jle
xchg
add
out
int
dec
jnp
push
push
and
or
flds
sbb
xor
push
xlat
out
aaa
stc
pusha
mov
out
adc
out
fidivrl
adcb
ja
iret
and
mov
mov
lock
ja
mov
sbb
lcall
iret
adc
shrl
adc
dec
fists
loop
aaa
sbb
sub
jae
insl
mov
pop
mov
stos
mov
cmc
xchg
repz
push
stc
xor
ret
cs
cmc
incb
push
push
call
insb
mov
jp
aas
mov
rol
mov
adc
loop
out
sbb
and
les
mov
xchg
inc
repnz
outsl
inc
mov
and
push
stos
sahf
xchg
jge
push
out
push
jae
and
mov
mov
imul
imul
enter
testl
xor
mov
adc
pop
fidivrl
xor
in
fsubs
mov
outsl
adc
push
cwtl
addb
icebp
loope
mov
icebp
les
add
sub
push
mov
push
dec
sub
movsl
mov
push
adc
adc
lods
jecxz
subb
mov
adc
nop
pop
push
hlt
and
pop
push
clc
add
pop
dec
add
loope
mov
das
cwtl
pop
bound
mov
inc
push
pusha
jge
sbb
cmp
push
jmp
jno
sbb
cli
mov
dec
call
js
fldt
xor
nop
pusha
pop
jo
xchg
outsl
sbb
sub
and
or
lahf
jl
shll
mov
rol
mov
ds
add
mov
add
xor
or
pop
ds
xchg
fdivrl
fstpl
imul
nop
clc
es
push
loop
rcll
cmovno
xchg
daa
push
dec
jle
sahf
lcall
pusha
push
mov
imul
shlb
sub
mov
mov
dec
fwait
jecxz
mov
adc
jmp
out
je
push
mov
andb
cs
pop
mov
jg
pop
das
fwait
mov
pop
stc
outsl
inc
mov
jg
dec
xchg
mov
lcall
mov
xchg
inc
pop
lcall
mov
ss
ret
leave
btc
cwtl
in
add
in
cmpsb
fistpl
mov
jecxz
cltd
mov
mov
cltd
int3
cwtl
in
int
fsubrs
push
test
mul
cmp
and
call
js
bound
into
subb
cmpsb
insb
jno
sub
xchg
repnz
jb
gs
pop
sbb
mov
cmp
arpl
arpl
mov
iret
cmp
xlat
pop
fisubrs
push
dec
sbb
sbb
insl
and
push
fs
sarb
cmp
push
jge
notl
pop
scas
mov
and
sbb
sahf
cmp
testb
sbbl
dec
sti
inc
sbb
push
ret
xor
aas
cld
mov
or
inc
add
inc
sbb
mov
mov
jmp
mov
and
sub
inc
or
and
rcrl
inc
mov
mov
push
cmp
xchg
cmpsl
cmp
cmp
ljmp
imul
adc
sub
pop
pop
loope
xchg
jb
xor
arpl
and
test
push
dec
adc
outsl
and
push
sub
outsb
sbb
in
enter
mov
or
stos
sub
aam
repnz
xor
adc
lret
lds
call
sub
and
cs
push
inc
sub
loop
mov
je
shlb
cmp
pop
ss
pushf
adc
lcall
xchg
subl
out
mov
sahf
aaa
lret
sub
je
jl
in
mov
dec
bound
mov
in
mov
push
leave
pushl
inc
leave
sbb
or
push
stc
mov
and
sub
test
cmp
push
int
or
inc
mov
cli
arpl
push
cmp
and
inc
adc
mov
xchg
icebp
or
xchg
mov
stc
dec
cmpsb
cltd
mov
movsb
ds
sub
out
add
and
jg
mov
xchg
mov
icebp
adc
xchg
in
es
push
ljmp
or
inc
pop
inc
inc
test
add
adc
inc
dec
cld
lea
xor
cmp
hlt
mov
mov
xchg
push
push
xchg
outsb
pop
push
in
mov
fmulp
sub
rcrb
jno
pop
ret
xchg
mov
shlb
jnp
dec
or
jae
mov
rcrl
and
jno
sub
inc
xchg
xchg
test
xchg
adc
stos
call
jae
jecxz
jae
scas
enter
lahf
mov
mov
sub
mov
mov
xchg
push
out
cmp
daa
aam
cld
pop
or
xchg
in
les
mov
lret
mov
sub
xor
xorb
push
jne
orl
sub
fcomp
loope
cmp
jp
insb
xor
or
hlt
adc
rol
out
push
lea
add
aad
loop
loope
dec
and
lds
push
sbb
push
push
mov
push
sahf
out
mov
sbb
imull
stc
jl
push
cltd
xchg
imul
push
inc
int3
mov
jge
xor
jae
test
jecxz
in
xor
push
ljmp
and
fs
shlb
ljmp
push
enter
bound
lods
pusha
pop
xchg
pop
jmp
push
inc
push
push
mov
cmpsb
dec
inc
jmp
mov
nop
dec
adc
in
push
cmp
shlb
out
cmp
sbb
pop
in
popl
pop
or
sbbl
xchg
fsubrl
or
mov
sbb
cli
movsb
icebp
ljmp
out
inc
xchg
sub
mov
xchg
add
xor
mov
mov
aaa
into
push
orl
sub
data16
mov
jmp
xor
out
xchg
dec
jb
in
fwait
dec
cwtl
lret
jns
fdivs
loopne
xchg
jl
mov
movl
call
dec
stos
jg
into
icebp
imul
imulb
ret
ficoms
pushf
mov
xchg
xchg
jbe
dec
icebp
mov
outsl
popa
es
pop
inc
add
repz
sub
ret
out
add
sub
dec
mov
rorl
jl
fnstenv
shrl
insl
les
ds
add
popf
adc
in
dec
jne
scas
mov
daa
loop
cmpsl
test
xor
mov
mov
xlat
sub
je
lret
fistpl
mov
and
in
aad
out
pop
out
jg
push
mov
mov
xor
ljmp
push
stos
xchg
mov
sub
pop
adc
xor
dec
sub
in
xchg
insl
pop
repnz
push
sbbl
dec
jmp
imul
mov
mov
mov
cmc
ror
aad
je
ret
push
pop
test
and
jl
out
sbb
std
je
adc
sub
insb
push
mov
orl
lret
repz
pop
push
jp
gs
sub
mov
roll
mov
dec
dec
adc
stc
dec
pop
mov
add
push
and
and
imul
call
cltd
push
adc
lea
aaa
xchg
adc
pop
pop
cwtl
daa
push
mov
mov
aas
mov
push
push
les
es
outsb
sbb
shl
repz
sub
or
or
rolb
sbb
mov
mov
sub
loopne
mov
mov
push
aad
mov
cmp
movsl
or
xor
jp
in
inc
stos
shrb
sbb
pop
inc
pop
test
cwtl
outsl
int
sub
xchg
jge
inc
mov
std
xchg
or
inc
popf
mov
pop
sub
scas
pop
adc
stos
mov
push
push
pop
jns
scas
xchg
shlb
add
push
mov
test
pop
insb
jae
int3
adc
inc
pop
fcmovnu
or
mov
inc
fs
mulb
dec
jle
lcall
cvtps2pd
scas
xor
test
pop
lahf
int
pop
push
imul
xor
adc
cli
mov
add
pop
adc
inc
xchg
lret
xchg
sub
out
jmp
jnp
fdivrl
ret
fldcw
pop
das
jmp
inc
leave
mov
or
sbb
lea
push
push
or
movsl
jns
sbb
and
sub
pop
push
push
add
cmpsl
sarl
scas
jo,pn
mov
jg
lock
xor
jecxz
cmp
inc
xor
insl
daa
fs
outsl
gs
push
mov
fidivrl
dec
adc
into
xorb
ss
mov
in
pop
xchg
pop
fcmovne
mov
lcall
das
addr16
sub
leave
fucomi
rclb
imul
jecxz
imul
jnp
insb
cmc
movsl
jmp
cli
rcr
jo
in
aaa
and
jne
fdivr
fnstsw
or
inc
stc
xchg
out
mov
psubb
add
clc
mov
leave
movsl
xlat
int
loope
js
lods
jmp
inc
cmpsl
pusha
sub
jmp
xor
jle
adc
xchg
xchg
push
popf
inc
call
xchg
jae
mov
in
jno
fnsave
pop
mov
dec
pop
mov
aam
sbb
pop
sub
loop
cli
jle
mov
lret
add
lret
or
xlat
clc
cwtl
mov
stc
push
out
inc
mov
mov
mov
loop
mov
xchg
shll
stos
fdivrs
mov
sbb
or
sbb
jge
les
and
leave
cmc
loope
imul
or
push
rcrb
scas
roll
lcall
fwait
sbb
in
aas
mov
je
pusha
inc
and
gs
cmpb
mov
sub
and
cmp
mov
adc
mulb
push
add
addr16
push
aaa
adc
int
test
cmp
setle
pop
push
dec
jmp
add
sub
in
or
mov
inc
pop
mov
mov
add
and
push
sub
sbb
push
and
cmp
mov
cmp
cli
mov
xor
jg
push
inc
cli
out
repnz
inc
pop
inc
jnp
outsl
push
cwtl
cmp
sbb
stc
sub
xchg
pop
jae
fistps
jge
xchg
and
pop
out
dec
and
outsl
sub
fwait
add
mov
loope
mov
cltd
stos
jbe
mov
push
addr16
icebp
cmp
lret
daa
dec
jb
jae
js
lea
es
adc
rorb
hlt
pop
inc
lret
lods
into
dec
push
shll
loop
fistps
mov
repz
ja
sub
pushf
icebp
cmp
cmc
cwtl
sub
or
pop
aam
and
fwait
outsb
lods
out
data16
lahf
movsb
jle
or
adc
mov
inc
xchg
loopne
flds
outsl
dec
dec
push
ja
mov
pop
int3
jle
push
leave
mov
push
out
pop
test
mov
or
pop
mov
jns
push
pushf
add
fwait
adc
add
jmp
iret
push
loope
mov
inc
pusha
add
in
call
and
xchg
incb
out
adc
pop
bound
sar
pop
mov
cwtl
and
cmp
das
dec
inc
adc
enter
jecxz
fidivrs
cmc
mov
dec
inc
push
sarl
stos
adc
jbe
ret
mov
adc
mov
xor
add
sub
adc
jb
mov
test
outsl
je
data16
or
scas
xor
shll
das
push
outsb
jge
imul
mov
data16
cmp
mov
lret
loopne
test
push
dec
cmpsl
xchg
lcall
cli
sbb
out
mov
inc
inc
cld
mov
inc
and
mov
movsb
push
pop
mov
stos
sbb
ljmp
shll
mov
shlb
add
cmp
out
dec
jmp
sti
add
out
ds
cmp
jns
adc
adc
es
sbb
mov
xchg
adc
add
add
movsl
aaa
adc
pop
lret
add
push
dec
sbb
scas
jle
mov
lahf
shrb
out
mov
repz
add
imul
movsl
je
ljmp
xchg
loope
push
into
test
fdivs
cs
fcoms
jb
xchg
sbb
sbb
sbb
andps
outsb
fsqrt
mov
mov
pop
cmp
cwtl
wbinvd
incl
inc
sub
mov
adc
adc
pop
mov
loop
lods
test
cmc
mov
jle
pop
addr16
pop
mov
jg
popf
and
sub
inc
adc
loope
or
cmc
cmc
std
inc
dec
add
inc
gs
jns
stos
adc
bound
mov
push
cltd
and
shl
stc
fidivs
jb
lahf
movsl
jmp
adc
sarb
xor
icebp
and
test
fstpt
jecxz
data16
call
and
xchg
nop
mov
int
repnz
xchg
cmc
lock
cmc
nop
data16
test
test
dec
stos
inc
sbb
pop
rcr
in
jae
cmp
push
dec
jbe
fdivrp
dec
lock
xor
pop
or
or
rorb
inc
loope
lret
fdivrl
push
gs
ret
into
sub
frstor
rclb
fisubrl
fnstenv
sub
scas
fmulp
leave
push
loop
or
icebp
in
dec
rorb
mov
outsb
jno
ret
lret
lcall
xor
shr
or
sbbb
mov
or
hlt
subb
inc
add
jle
or
fadds
out
jp
mov
pop
mov
or
inc
aam
mov
dec
hlt
ret
mov
push
sahf
fsts
test
or
sbb
inc
mov
sub
push
mov
adcb
xlat
mov
jns
adc
shrb
mov
imul
out
leave
in
jno
inc
dec
xchg
stc
pushf
rcl
imul
mov
in
mov
or
xor
dec
aad
mov
nop
and
outsb
stos
ss
pop
mov
mov
add
push
mov
enter
jb
push
in
mov
inc
leave
les
adc
jno
push
sub
mov
and
jo
cmpb
daa
and
mov
aam
cmp
repnz
outsb
dec
fidivrl
mov
jbe
dec
aaa
lods
or
cmp
pop
xor
in
decl
dec
shrl
or
adc
xchg
xor
clc
into
mov
pop
pop
push
jl
mov
jne
adc
mov
and
cs
aaa
outsl
adc
scas
cmpb
pop
out
pop
sbb
fcomps
sub
xlat
and
cmp
pop
xchg
inc
test
xor
xlat
sub
inc
jae,pt
push
cmp
pop
mov
scas
shll
aaa
cmovae
call
loopne
fs
mov
xchg
lods
xchg
xorl
add
xchg
or
into
sete
xchg
cmp
icebp
push
mov
std
testb
mov
fs
xchg
mov
or
inc
outsb
dec
sbb
loop
call
and
lret
int
enter
dec
mov
mov
xor
fcomi
push
jne
xor
adc
jp
movsl
inc
inc
push
in
or
repz
ss
repz
dec
mov
sbb
jbe
jmp
dec
pop
incl
in
inc
pop
xor
push
xchg
stos
inc
add
insb
push
push
loope
stos
and
repz
shrl
rcrl
push
clc
jno
pop
mov
inc
push
enterw
cmp
stc
enter
jg
mov
jns
and
dec
int3
out
fstl
jecxz
imull
and
test
imul
mov
mov
pusha
daa
dec
xchg
ja
pop
dec
popf
push
cmp
cs
push
cmp
in
out
les
sub
insb
popa
movsb
and
aaa
mov
movsb
call
cmp
dec
dec
pop
adc
lods
mov
mov
test
xor
push
into
jge
or
adc
mov
gs
add
pop
jb
jmp
adc
cld
insl
fwait
xor
fstpl
sbb
lds
decb
jns
not
das
xchg
cwtl
xor
clc
sbb
jae
pop
push
inc
into
mov
out
aas
inc
repz
repz
dec
sbb
sbb
mov
sub
rorl
mov
dec
scas
inc
test
in
movd
adc
xchg
and
lods
mov
aaa
imul
or
push
sub
cmpsb
xchg
aaa
lock
movsb
fnstsw
outsb
cmpsb
sbb
mov
adc
fyl2x
or
mov
adc
imul
pop
xchg
mov
cld
cmp
out
mov
pop
push
add
shrb
dec
lods
xlat
add
mov
movb
push
sarb
in
clc
jnp
dec
mov
and
fs
jnp
push
aas
hlt
test
xor
fcomi
mov
outsl
test
add
mov
mov
jmp
push
push
mov
lret
cmp
xchg
xor
rcll
dec
les
dec
and
mov
dec
and
pop
sbb
sbb
jg
push
ret
hlt
in
and
mov
cmp
cmp
mov
add
or
out
xchg
push
shr
jg
movsb
fstpl
and
shl
sbb
pop
hlt
test
lds
popa
repz
jo
cmp
rcrl
fcomps
sahf
nop
jl
cmp
incl
ss
cli
sahf
aas
mov
mov
fcmovnb
cmp
ret
jne
hlt
push
in
cli
add
ja
add
mov
imul
cmc
and
je
lcall
les
jns
sbb
jecxz
add
cmp
mov
cmp
andb
js
cmc
sub
cmp
ss
jb
fwait
sahf
sbb
or
push
test
cmpsb
xchg
addb
sahf
out
testb
negl
imul
mov
shll
test
movsl
scas
sub
repz
xor
jmp
daa
popa
adc
sub
testb
pop
aas
jg
aad
and
dec
jge
push
aas
filds
sbb
mov
pop
push
test
pop
fcomps
push
js
leave
push
jp
in
inc
jp
xchg
insb
xchg
mov
std
mov
out
xor
cmpsb
dec
pop
adc
icebp
sbb
mov
mov
cmc
jmp
dec
loope
jns
test
lock
fistl
das
outsb
lret
addr16
in
sbb
xor
out
xchg
mov
add
insb
push
in
xchg
push
mov
cmp
arpl
popf
arpl
adc
jo
push
aad
pop
lods
call
icebp
dec
pop
icebp
mov
lock
and
mov
push
mov
ja
push
imul
cli
lret
mov
ds
jge
divb
dec
pushf
insl
out
stc
test
mov
xchg
lock
test
cmp
add
inc
fsts
jo
repz
fistl
mov
xchg
sbb
mov
push
sub
xchg
push
shll
out
sub
adc
dec
imul
bound
pop
adc
data16
sbb
cmc
adc
add
daa
in
imul
stc
dec
or
add
in
jns
lahf
cmp
and
jbe
mov
push
enter
aaa
out
sahf
aaa
rcll
subl
mov
xchg
adc
stos
outsl
push
xchg
sbb
mov
pushf
ret
inc
mov
add
dec
cmp
stos
lret
inc
movsb
inc
popf
mov
sub
pop
cmpl
imull
dec
mov
pop
mov
pop
aad
mov
testb
in
lods
les
mov
pushf
and
stos
imul
insb
mov
insl
inc
sbb
inc
or
daa
fiaddl
out
lcall
pop
imul
addr16
divb
cmp
jno
ds
fmull
mov
aas
mov
or
jge
jbe
pop
or
and
mov
cmpsb
cmp
icebp
sub
mov
mov
adc
xor
push
stos
mov
icebp
push
jge
lds
fwait
adc
iret
push
sub
in
jp
scas
dec
clc
scas
sub
movsl
icebp
xlat
inc
jle
mov
pusha
sbb
rol
in
dec
mov
sub
bound
mov
out
iret
lret
xchg
subl
xchg
add
rcl
mov
jae
rcll
mov
cmp
mov
cmp
bound
adc
or
push
xchg
xorl
xor
in
mov
push
dec
sub
dec
cmp
and
lods
pushf
pop
mov
inc
mov
les
xlat
and
sbb
insl
cmc
dec
out
fidivrl
mov
or
jnp
ds
mov
dec
dec
lods
cmp
adc
sub
loopne
rol
sub
int
rolb
jg
pop
sub
and
pusha
pusha
iret
mov
jb
mov
or
add
sub
adc
dec
mov
ja
cli
and
test
cmp
aaa
shrb
sbb
and
mov
dec
outsl
loopne
or
daa
xor
cmp
inc
cmc
jae
add
loop
dec
pusha
add
iret
mov
sub
stos
add
dec
dec
mov
in
sbb
cld
xlat
cwtl
mov
inc
cmc
jle
sbb
mov
adc
dec
pop
add
cmc
vrcpss
scas
cmpsl
xchg
leavew
popa
ret
push
cli
jle
adc
aas
icebp
mov
cltd
and
sub
repz
push
cwtl
daa
jno
sub
lock
adc
lret
and
sbb
stos
dec
xchg
mov
xor
in
ret
sub
ja
fldl
cld
je
mov
call
push
roll
bound
mov
jp
jo
sahf
cmp
push
push
and
mov
xor
sti
out
std
ret
cmpsl
pop
xchg
and
movsb
fistpll
sarl
insb
loopne
xchg
mov
into
adc
dec
inc
and
mov
sbb
push
repz
and
dec
push
jle
push
mov
inc
les
adc
loopne
mov
xchg
pop
lock
addb
and
lret
adc
pushf
add
ret
push
in
inc
cmp
repnz
sbb
ret
xlat
pop
mov
imul
cli
es
lea
and
xor
lahf
test
filds
test
pop
fwait
push
add
mov
mov
xchg
mov
mov
mov
or
lds
jg
fldz
pop
cwtl
pop
testl
in
mov
jmp
pop
cltd
je
ljmp
in
out
sub
jno
out
es
popa
push
jb
popf
addr16
call
mov
in
cmpsb
ret
in
jns
insb
imul
pop
push
or
lret
cmp
xchg
clc
jmp
sti
inc
hlt
add
adc
rorb
in
add
dec
jle
add
lods
pop
divl
pusha
sbb
lret
sub
out
push
or
aas
scas
lock
mov
jne
mov
xchg
mov
lock
pop
add
push
pop
dec
push
cmp
cld
push
push
out
push
stc
dec
jo
xchg
fsubl
fidivrs
out
xor
addr16
pop
mov
mov
mov
xchg
add
enter
mov
inc
inc
adc
mov
inc
dec
add
cmpb
cltd
cmp
les
mov
out
sbb
push
sahf
jo
cmc
data16
xchg
addr16
mov
pop
pop
test
insl
cmpsl
sti
xor
rorl
pop
pop
add
pop
dec
shld
jp
lahf
mov
mov
and
fistpll
pop
push
jecxz
mov
jmp
aas
jnp
pop
aaa
sbb
sub
push
adc
mov
movsb
inc
pusha
mov
push
xchg
pop
das
mov
xchg
xorb
xor
clc
and
adcb
push
push
push
and
sub
std
imul
sub
sahf
loopne
cmp
loop
inc
leave
fs
xchg
rcll
pop
dec
sub
scas
or
and
sbb
movsl
jmp
xchg
pop
xor
cmp
mov
testl
lahf
in
dec
and
nop
inc
pop
gs
dec
jb
aaa
mov
test
push
xchg
fdivrs
fdivrl
or
cmp
and
adc
jbe
adc
roll
push
icebp
scas
dec
enter
push
call
dec
inc
cmpb
pushf
xchg
aam
stc
xchg
cmp
popa
push
loopne
add
imul
int
dec
test
add
dec
leave
scas
and
fcoms
xlat
outsb
inc
enter
ret
sub
dec
rcrb
adc
into
ret
push
in
mov
mov
xchg
pop
cwtl
jge
cs
sti
scas
mov
dec
dec
jmp
gs
cli
xchg
inc
xchg
xor
in
in
fdiv
lcall
cmp
daa
movsb
cmp
popf
leave
into
mov
add
xor
incb
daa
xor
cwtl
jle
scas
jle
cs
sti
rcrb
and
or
ss
push
mov
repnz
pop
mov
and
add
inc
repnz
xchg
lret
xchg
xor
imul
sbb
outsb
loope
test
ljmp
add
sub
int
cwtl
insb
repnz
js
pushf
and
testl
pop
inc
sbb
pop
adc
cwtl
ret
std
gs
movsb
dec
scas
leave
imul
mov
or
xor
flds
test
imul
mov
scas
pop
inc
push
movsb
mov
inc
outsl
aam
mov
loope
lcall
dec
lock
xlat
rol
sbb
push
xchg
inc
adc
pop
jp
adc
add
cmp
jecxz
push
js
jno
add
dec
pop
aaa
cli
xor
arpl
aas
sbb
push
shll
xchg
mov
cmp
sub
outsb
mov
stos
cmp
mov
fidivs
dec
xchg
out
paddusb
data16
pop
notb
repz
or
xor
int3
xchg
jo
out
sarb
push
or
pop
push
mov
sarb
enter
mov
and
xchg
push
xchg
mov
mov
fdivp
mov
xchg
imulb
xor
sbb
repz
jl
xorb
xchg
sub
xchg
pop
movsb
dec
cmp
jmp
jecxz
dec
test
icebp
pop
cli
mov
cld
or
xchg
fcoml
jae
sub
jnp
fisttpl
test
lods
dec
mov
imul
ds
cmp
jno
push
pop
or
dec
and
fcomps
xchg
icebp
sub
orl
imul
sub
loopne
scas
pop
inc
ljmp
jg
and
aas
mov
loope
gs
push
pop
cmpsb
push
or
xchg
aam
dec
mov
inc
cmp
push
aas
or
outsb
leave
stc
sarb
xrelease
push
or
das
aas
lret
lea
mov
ret
inc
ret
inc
ficoms
vmovq
cmpsb
loop
rcrl
lcall
in
imul
pop
mov
xor
dec
xor
pop
in
push
cmc
mov
mov
xlat
gs
fbstp
mov
mov
scas
sbb
repnz
jl
inc
adc
pop
and
rorb
sub
mov
movsb
sbb
push
lcall
adcb
jo
inc
push
out
dec
mov
xchg
loop
clc
xchg
pop
mov
rcll
mov
mov
aad
insb
xchg
imul
or
adc
dec
mov
add
lcall
daa
mov
mov
pop
jno
ja
inc
arpl
pop
repz
adcb
ret
pop
xor
mov
insb
aad
movsl
mov
xchg
mov
xor
add
adcb
sti
mov
sub
inc
add
lea
out
cmpsb
movsl
das
bound
dec
out
pop
addr16
fs
xchg
and
xor
and
xor
and
xor
std
lock
dec
lret
jp
jo
push
xchg
fstp
push
mov
push
cmpsb
or
movsl
mov
push
jnp
sub
dec
test
sub
pusha
dec
cmp
test
inc
sub
or
andl
inc
sbb
js
mov
popf
and
pop
enter
jmp
inc
jmp
dec
bound
mov
mov
rsm
pop
scas
test
xchg
test
movsl
insb
sbb
int3
cmp
in
push
pop
repz
in
aaa
es
sbb
lret
cmp
fs
into
mov
imul
sbb
daa
out
fdivs
jp
scas
inc
aam
lahf
les
push
insb
data16
loope
mov
jae
xor
jne
pop
mov
push
jmp
or
ficompl
xchg
and
stos
inc
add
xchg
les
mov
sub
jecxz
test
iret
xchg
jp
std
and
add
clc
enter
mov
popa
imul
jno
sub
std
call
ficomps
js
and
scas
test
lea
pop
and
mov
stos
out
pop
xor
pop
inc
jnp
lret
lds
adc
mov
loope
xor
xchg
ret
and
inc
arpl
test
pop
push
in
iret
std
push
dec
out
in
push
fistps
rclb
adc
call
adc
sub
lods
add
addr16
jp
inc
adc
xor
popa
jne
push
pusha
or
mov
xchg
enter
stos
jg
dec
push
pop
dec
jbe
shll
orb
pop
inc
pop
std
out
sub
rorb
lock
ljmp
mov
xor
in
sub
add
lret
sbbl
mov
mov
adc
add
cmc
or
rclb
mov
popa
and
aaa
jno
add
into
mov
lods
dec
test
xchg
xchg
mov
fsubs
mov
ret
ficompl
mov
movsl
and
add
sub
ret
mov
mov
xchg
mov
or
push
mov
in
or
jo
add
popa
dec
inc
rorb
pop
dec
sub
jno
xor
nop
add
push
mov
into
push
hlt
mov
and
ja
nop
cmp
sub
pop
lods
cmc
jp
dec
or
nop/reserved
cmp
add
loopne
pop
cwtl
jge
pop
mov
mull
push
mull
jle
std
rcrb
pusha
das
adc
sahf
loop
mov
inc
xchg
insb
sti
xor
push
mov
mov
pop
cs
daa
stc
enter
mov
jp
xor
pusha
incb
mov
xchg
lret
xchg
data16
sbb
mov
jnp
out
bound
jno
pop
push
scas
cld
cmpsb
stos
imul
ss
cmpsl
push
and
and
dec
test
outsl
jb
popa
xchg
enter
inc
jge
cld
aas
call
andl
div
cmpsl
nop
lcall
mov
in
iret
jns
mov
xlat
xlat
dec
xchg
lret
push
fidivl
lcall
cld
les
pop
fmull
leave
cmpsl
outsb
mov
std
idivb
mov
gs
adc
xchg
cmp
dec
mov
xor
mov
and
jmp
testl
shrb
test
outsb
scas
and
jle
mov
sub
test
pop
das
inc
lock
adc
push
cmp
adc
mov
call
out
xchg
addr16
push
sahf
dec
cmp
sti
mov
mov
cmc
sbb
jns
pop
sub
loope
pusha
test
int
stc
das
pushf
aad
jns
fdivl
sarb
and
popf
stc
stos
cli
rolb
ja
sub
jae
std
cli
cmpsl
imul
sub
pop
adcl
out
cwtl
movsb
jl
ljmp
addr16
jmp
jg
pop
test
inc
dec
stos
xor
roll
cmpl
pop
xor
jno
sbb
jg
test
push
loope
iret
mov
mov
fs
jmp
lret
xchg
hlt
mov
sub
enter
mov
lahf
jne
mov
int
xchg
sub
je
push
outsb
sti
or
mov
lea
dec
inc
mov
in
imul
jae
cs
cwtl
pop
push
in
and
test
cmp
rol
mov
outsl
cltd
mov
jmp
mov
loopne
xchg
inc
and
es
sbbl
lcall
sti
jle
sub
jp
pop
sti
call
pop
jnp,pt
subb
push
dec
es
pushf
push
and
cmp
mov
cmp
les
cmp
mov
pop
ds
or
ds
ficompl
or
mov
pop
push
gs
fcompl
mov
and
mov
mov
pusha
add
mov
int3
sti
sarw
sub
dec
imul
cld
jmp
movsb
mov
imul
sarl
push
notb
std
lock
jmp
jle
aam
push
xlat
mov
shr
das
stc
pushf
insb
enter
arpl
in
or
je
movsl
jmp
int3
or
cmp
out
pop
scas
sahf
adc
ficoml
add
xchg
xor
dec
sbb
jmp
popa
xchg
jmp
sub
xchg
sub
pop
scas
pop
clc
ret
push
filds
popa
cltd
popa
das
adc
in
ficoms
push
imul
fimull
sti
mov
push
mov
lds
fs
add
imul
into
outsb
push
fwait
pop
sub
dec
rcrl
popf
jb
mov
xchg
mov
out
aaa
xor
and
ss
rcl
jp
inc
dec
in
mov
xchg
test
or
outsb
cs
mov
es
cmpsl
jno
sbb
mov
out
pushf
sub
fwait
ss
mov
dec
cmpsl
and
jp
add
jmp
xchg
cmp
mov
xchg
pop
sbbl
xchg
jae
call
xor
fistpll
cmc
inc
inc
or
mov
sbbl
mov
arpl
pop
sbb
push
pop
jne
mov
sbb
add
mov
leave
sarl
xchg
test
dec
or
lods
mov
or
mulb
dec
xchg
mov
cmp
scas
dec
mov
ficoml
sbb
dec
mov
stos
xor
sbb
stos
shlb
or
addb
pushf
dec
fs
jp
jmp
cmc
sub
mov
mov
or
repnz
jnp,pt
fcmovne
aaa
jge
lods
pop
imul
jle
inc
out
mov
cmp
push
ss
cmp
jge
mov
clc
rolb
cs
aas
ds
js
xchg
nop
aas
cmp
je
push
cmp
jge
cmp
test
in
jb
divl
imul
rcl
jle
sub
shll
xchg
loopne
dec
pop
ret
loopne
mov
dec
shll
test
pushf
sub
lret
jno
sti
pop
gs
xchg
add
mov
insl
loopne
dec
push
loopew
mov
iret
enter
and
pop
pop
inc
push
das
ss
push
cmpsb
dec
inc
mov
dec
fisttpll
dec
pop
jns
push
sub
loop
icebp
sbb
sub
clc
js
out
lods
int3
outsl
jo
sbb
add
jb
jge
inc
out
cld
jp
pop
int
out
xor
xor
arpl
pushf
adcl
pop
push
ja
xor
pop
or
imull
scas
daa
mov
decl
xchg
insl
add
add
jae
dec
jns
rcr
add
adc
dec
push
mov
sub
ret
xor
das
popf
sbb
mov
nop
push
jb
roll
cmp
andl
dec
daa
stos
inc
ret
jle
jb
std
dec
jmp
cli
pop
sbb
loope
add
dec
stos
hlt
push
xchg
mov
insl
cmp
fdivrl
inc
dec
cmc
mov
leave
mov
bound
cmp
addb
dec
mov
hlt
pop
repz
ret
pop
pushl
aaa
clc
call
and
jno
add
mov
pop
jle
dec
aas
lea
mov
push
in
inc
imul
jno
sub
xchg
fs
cld
dec
jl
scas
mov
dec
or
cmc
idivl
ds
sarb
in
test
adc
adc
cli
les
repnz
xchg
mov
xor
gs
mov
adc
push
mov
xlat
into
cli
add
ljmp
js
mov
push
pop
push
sub
dec
add
jno
loopne
cmpsb
dec
stos
and
filds
mov
xor
and
mov
test
shll
xor
xchg
mov
and
sahf
mov
xchg
sbb
xor
xor
mov
inc
and
sub
aas
fiadds
jb
mov
imul
in
outsl
lock
mov
add
and
inc
shl
out
dec
mov
push
gs
iret
sbb
push
xor
adc
pusha
outsb
test
sub
out
cmpsl
in
sbbb
fcompl
lods
sub
sbb
lret
inc
mov
cmpsb
adc
adc
enter
std
jmp
inc
cld
cmp
and
aad
out
jg
jge
mov
jns
xchg
xor
into
ss
std
out
mov
mov
icebp
shll
cs
scas
mov
imul
jecxz
int3
push
fbstp
int
mov
sub
mov
push
lret
enter
mov
jle
dec
lock
sahf
lret
call
popa
out
jle
sbb
hlt
and
sub
cs
pop
adc
popa
xchg
lret
mov
cmp
pop
test
adc
das
push
call
mov
adc
xchg
jne
imul
lods
arpl
movups
xor
and
shlb
or
mov
mov
pushf
pop
mov
clc
adc
ficoms
mov
in
adc
mov
xor
ja
rclb
mov
sub
nop
dec
lock
sub
sbbb
dec
cmpsl
clc
inc
pop
mov
cld
sub
or
jmp
dec
outsl
bound
or
mov
pusha
stc
popf
sbb
jle
pop
dec
movsl
repz
mov
leave
and
ljmp
in
jno
aad
into
aad
stos
xor
mov
shrl
movsb
cmp
pop
fists
adc
or
cli
int
inc
jno
xchg
pop
pushf
rolb
in
add
aaa
pop
fwait
aad
stos
pop
arpl
outsl
cmp
lods
enter
mov
push
adc
negb
inc
dec
mov
inc
cmp
imulb
inc
outsl
dec
fisttpl
adc
aad
aam
xor
iret
cmp
and
push
dec
data16
in
inc
ss
inc
pop
or
das
jg
cmc
jle
in
sbb
icebp
stos
decb
and
std
jbe
in
es
jb
enter
rorb
dec
pop
jge
ljmp
stos
jne
xlat
add
popa
xor
stc
push
jp
stos
dec
xchg
push
sahf
dec
rcrb
and
rol
mov
sarb
xchg
int3
mov
pop
cld
mov
or
test
in
jae
push
cs
jmp
add
cmpsb
xor
mov
lds
and
into
add
repnz
or
aaa
mov
popf
sbb
mov
lds
sbb
mov
inc
jge
mov
add
push
rcrl
insl
fidivrs
addr16
push
xchg
aad
adc
mov
in
in
or
dec
cwtl
in
and
cmp
or
pop
aam
int
lcall
pop
jmp
lret
mov
jge
add
imul
lock
mov
leave
push
insl
sub
movsb
test
push
enter
and
jecxz
loop
push
arpl
push
in
enter
aaa
jle
js
or
sub
sbb
mov
sbb
push
sbb
int
cs
mov
in
fsubrl
mov
inc
xlat
cmp
pop
sbb
in
sub
adc
xchg
xor
push
filds
lds
pop
xor
ret
call
sbb
push
push
xor
ljmp
scas
test
dec
incl
adc
or
xchg
out
cltd
mov
inc
mov
push
imul
insl
rorb
mov
das
or
pop
adc
sbb
cmp
and
mov
sbb
xchg
test
jge
sbbb
xor
fstpt
cmp
pop
xor
cwtl
icebp
out
sbb
cli
pop
mov
mov
addr16
lcall
mov
bound
mov
xchg
push
cmc
push
jle
dec
ret
or
mov
js
mov
adcl
test
jg
and
xchg
push
test
pop
and
imul
mov
jle
cli
ret
test
rclb
jp
cmpsl
mov
out
push
ds
test
mov
jae
mov
adc
and
aaa
jno
add
shlb
xchg
pop
fsts
out
xor
push
and
inc
js
bswap
outsb
jl
mov
push
mov
pop
mov
out
add
leave
inc
movsl
push
pop
mov
jns
fisttps
sbb
lahf
xor
mov
and
cmpsl
lea
dec
ret
mov
lds
idiv
rcr
fwait
sbb
ret
or
stos
xor
bnd
mov
cmc
mov
inc
adc
cwtl
fdivl
pop
pop
mov
js
sahf
and
xchg
mov
or
pop
loop
adc
es
fbld
sbb
je
testl
jle
in
and
clc
cmpsl
daa
hlt
setle
mov
adc
sub
xchg
pop
sahf
lods
shll
mov
or
shrb
mov
push
imul
xchg
jle
or
or
push
xchg
inc
inc
adc
push
into
add
test
pop
je
sbb
loope
jno
stos
fdivrp
pop
mov
ret
test
xlat
call
jmp
test
xchg
stos
loopne
addr16
mov
int
push
inc
fsubs
and
sbb
cmc
inc
out
in
cs
pop
sbb
sbb
jae
xchg
inc
mov
xchg
jb
cmpsl
cmp
mov
push
repz
xchg
jb
imul
mov
xor
xor
and
pop
inc
jle
cs
cmp
popf
dec
mov
push
push
test
mov
adc
ja
enter
xor
ljmp
xchg
out
gs
mov
pop
mov
lret
pinsrw
sub
fldln2
lret
push
xchg
lcall
rorb
adc
xchg
xchg
mov
cmp
jle
mov
push
shll
insl
push
imul
jmp
push
xchg
mov
ret
push
pop
orl
clc
mov
dec
adc
test
jno
adc
mov
or
push
stc
jb
jmp
jno
clc
push
push
dec
adc
arpl
enter
cwtl
xor
pop
xchg
movl
sub
fists
je
sub
cmpsl
xchg
sub
sub
mov
idivb
imul
popf
jnp
icebp
test
cmpsb
test
xchg
lods
dec
fsubs
pop
lret
pushf
ljmp
jp
ss
sbb
jne
loope
xor
cmpsb
ficomps
xor
loopne
dec
sbb
jne
push
push
loop
xchg
cwtl
les
mov
data16
stos
add
rolb
fsubp
daa
xor
xor
shll
xor
lds
sti
lds
xor
adc
xchg
dec
stc
mov
add
aaa
mov
inc
sub
and
mov
xchg
dec
sahf
cmpsb
pop
pop
ds
test
push
jmp
xchg
incb
in
xor
push
mov
fidivs
mov
aad
push
shr
xchg
inc
test
push
xchg
sarl
or
and
pusha
mov
pop
daa
dec
sub
mov
dec
mov
mov
cmp
cmc
mov
repz
sarl
stc
sbb
outsl
mov
and
jno
sub
jnp
mov
dec
sub
cmc
iret
insl
inc
xor
dec
shrb
loope
stc
call
push
jmp
loope
adc
push
dec
jmp
jmp
in
xchg
cwtl
add
mov
mov
inc
andb
call
mov
insb
jmp
xchg
mov
jmp
test
je
cltd
call
mov
out
pop
es
jnp
add
mov
cmp
sbb
cmp
mov
or
and
pop
stos
aaa
inc
outsb
xor
sarb
aad
es
pop
sbb
mov
or
sti
adc
shrb
scas
jecxz
sbb
rorb
test
sarl
cmp
icebp
pop
mov
mov
pop
or
loopne
andb
xchg
push
mov
rcll
mov
push
sub
ss
adc
loop
lds
das
adc
shld
and
xor
and
adc
cmc
iret
adc
into
fisttpll
fsts
xor
fcomip
pop
scas
in
mov
mov
shll
lcall
fdivrs
fcoms
out
lahf
xchg
mov
cmc
inc
sbb
sbb
sub
mov
fwait
lea
pop
mov
ret
sar
add
xchg
adc
gs
testl
or
les
int
inc
imul
movsb
imul
mov
ror
sbb
and
cmpsl
icebp
imul
dec
dec
push
leave
mov
enter
inc
leave
xor
aad
jbe
mov
dec
mov
rcrb
lods
fdivl
into
daa
jbe
roll
movsb
in
loopne
push
aaa
jecxz
in
mov
pop
add
sub
movsb
and
inc
push
add
mov
fsubrs
push
aaa
and
mov
mov
sbb
cmpsl
negb
lock
jecxz
int
dec
jb
mov
cmp
mov
push
test
mov
jnp
data16
sarb
test
pop
bound
enter
mov
out
sbb
es
mov
lock
int3
leave
mov
mov
in
adc
addl
lods
std
jge
mov
cmp
or
add
and
sub
movsl
repz
cmpsl
mov
mov
jb
fisttpll
mov
fldenv
faddl
mov
jnp
jecxz
and
loopne
fnstcw
xor
cmp
clc
daa
stos
mov
sub
cmp
push
xor
push
clc
test
das
rorl
adc
mov
jno
xor
adc
pop
xorl
and
xor
ljmp
jns
subl
cmp
mov
dec
mov
int
adc
mov
jo
int
adc
mov
pop
mov
daa
pop
dec
fs
mov
shlb
inc
rclb
adc
lcall
mov
jecxz
adc
in
adc
rcll
pushf
ja
pop
xor
repz
pop
inc
loop
mov
cltd
jle
loope
pop
dec
test
xlat
cltd
lret
mov
bound
scas
pop
nop
pushw
dec
push
xchg
into
pop
mov
push
and
pop
rcl
sub
sahf
cmp
xor
adc
in
pusha
sahf
jle
inc
mov
aam
mov
clc
sbb
lock
dec
mov
rolb
mov
pop
jbe
jnp
pushf
int
mov
addr16
inc
shll
sbb
mov
push
test
imul
or
mov
sbb
sub
lds
insb
out
mov
mov
gs
ret
addr16
or
xchg
push
jge
test
jp
shrb
add
push
push
jnp
dec
add
cmp
inc
outsl
sahf
int3
mov
cmpsl
sub
lock
xchg
lods
scas
jmp
cltd
mov
neg
mov
xchg
les
mov
mov
sbb
sahf
sub
arpl
mov
ret
lea
sub
jb
outsl
scas
mov
dec
daa
adc
jl
dec
sub
aas
scas
jp
jbe
pop
mov
push
in
mov
mov
pop
sub
xchg
xor
jne
ja
sbb
cmc
sti
jne
inc
loopne
sub
ljmp
mov
mov
xor
scas
popf
push
jno
ja
and
and
and
out
jecxz
cmc
test
icebp
ds
add
pop
testl
ja
adc
adc
test
sub
add
clc
push
movsl
das
ss
arpl
mov
mov
loope
and
lret
roll
insb
lret
jbe
or
sub
sub
or
popa
sarb
jae
pop
pop
pop
jle
push
mov
inc
fdivrp
shll
xor
mov
rolb
cmpsb
push
ror
ret
sahf
or
add
testl
ret
fsubl
icebp
repz
xor
mov
push
sbb
add
mov
jns
in
aad
mov
sub
out
inc
xlat
imul
loope
sar
mov
push
test
jb
fs
ds
mov
push
mov
repz
pop
aad
mov
cmp
lea
out
add
outsl
mul
fcmove
add
sbb
push
loopne
dec
cmovb
lea
sub
lods
jmpw
mov
lods
jb
jae
jne
mov
push
inc
mov
cwtl
dec
fucom
jae
popa
je
cmp
lret
cmpxchg
insb
int3
fldenv
push
sub
add
cli
fwait
in
inc
inc
fmuls
inc
mov
movsb
fildll
mov
push
mov
adc
xchg
scas
fstl
jno
jl
andl
sbbb
sbb
xchg
pop
rcll
mov
mov
adc
and
ljmp
push
cli
sub
jae
out
out
loop
push
fstpt
push
push
notl
mov
jns
out
inc
repz
jns
das
inc
cmpsb
popa
mov
clc
inc
add
cmc
xchg
inc
inc
mov
dec
rcrb
sub
pop
fists
into
test
out
or
out
pusha
rcll
aas
jae
inc
aaa
sahf
aam
scas
mov
das
sub
inc
push
pushf
cwtl
stos
dec
adc
cmp
call
ljmp
into
fistl
jns
jle
mov
aad
je
push
or
lea
pop
adc
jle
cmp
jo
jne
adc
push
adc
and
outsb
mov
xor
mov
mov
cmp
andb
sahf
dec
or
lds
sub
in
pushf
sbb
aam
pushf
jbe
mov
aam
rol
adc
lock
fisubrl
push
push
aas
pop
fnsave
xchg
fcmovnb
movsb
aaa
mov
es
jp
aaa
mov
push
push
fildl
push
mov
sub
ljmp
inc
popa
mov
mov
cld
cmp
cmp
push
stc
adc
pop
test
mov
mov
push
jl
xchg
sub
neg
stos
sub
lods
in
xchg
mov
fsubrs
fdivrs
or
lahf
or
jge
sbb
sub
rcrb
movsl
mov
jg
xchg
pop
into
push
out
pop
dec
sarl
imul
dec
adc
arpl
cs
cli
dec
add
cld
lock
mov
pop
call
jl
inc
notb
push
xchg
push
xor
cs
scas
sbb
into
call
sbb
les
leave
pop
into
xchg
cld
in
jnp
adc
jae
cmc
rcll
aad
gs
add
mov
arpl
push
inc
addr16
das
loop
roll
rclb
mov
fwait
in
loopne
lret
and
sbbb
pushf
or
and
sub
fstpt
lods
orl
add
inc
clc
pop
add
pop
cmp
iret
mov
lock
xchg
push
lea
addr16
push
pop
pop
fwait
lahf
cmp
in
mov
pop
roll
mov
inc
nop
cmp
loop
fcomps
inc
dec
mov
jae
jae
sbb
cltd
in
clc
loop
scas
mov
xchg
mov
push
mov
or
loop
js
add
insl
dec
sbb
imul
and
rclb
mov
inc
xor
and
ret
or
into
mov
ret
sbb
rolb
aam
cmp
pop
cmp
sub
test
and
mov
les
sarb
dec
jnp
inc
bnd
inc
xor
inc
fmull
imul
add
jg
ret
adc
jle
sub
push
or
sbb
dec
lahf
pop
clc
imul
sub
sub
andb
test
lock
sbb
imul
int3
mov
loop
inc
out
mov
add
push
in
sub
int3
pop
divb
pop
pop
loop
dec
jns
clc
jbe
nop
pop
add
add
movsb
jp
aas
xchg
mov
push
sub
xchg
outsl
pop
add
add
je
fistps
nop
into
jns
add
mov
push
ja
mov
cld
scas
in
jp
sub
xchg
jge
and
sbb
or
dec
mov
subl
or
add
mov
xor
fucomp
mov
ret
aas
daa
pusha
add
xchg
sbbl
int
mov
jle
mov
pop
dec
jg
cmp
lods
mov
imul
mov
and
pop
test
nop
pop
inc
add
xor
cmpsl
dec
push
int
ret
mov
jmp
ds
and
cmp
enter
cmp
jmp
lds
push
and
ljmp
inc
js
pop
push
xchg
fwait
pop
mov
notb
out
pop
or
ret
mov
pop
xor
push
fbld
mov
pop
testb
fbld
loope
je
ds
notb
bound
jmp
fcomps
int3
inc
inc
pop
bound
fucom
cmp
in
xor
mulb
ret
push
mov
cmp
pop
add
aaa
clc
hlt
repnz
outsl
pop
out
mov
sti
daa
clc
scas
je
dec
ds
shrb
out
out
aad
fwait
mov
mov
pop
sub
inc
into
or
out
popf
cld
cmp
sub
insl
adc
push
and
xchg
mov
data16
jo
jmp
clc
call
bound
sbb
cmpsb
popf
inc
mov
mov
xor
sub
shlb
mov
dec
stos
andb
in
sbb
adc
sbb
call
ds
mov
repz
sbb
mov
icebp
or
sbb
ja
sub
subb
ror
ret
xor
adc
test
sahf
scas
lods
and
adc
sbb
aam
xor
mov
mov
push
lahf
fimull
and
and
stos
lea
repnz
lret
mov
xor
fwait
xchg
push
std
mov
sti
xor
push
loope
call
sub
gs
xchg
jae
insl
or
inc
fisubrl
xor
stc
push
not
cs
push
inc
in
dec
add
in
rorl
lods
pop
ljmp
out
scas
sbb
mov
out
gs
hlt
cmp
sbb
lods
and
dec
cld
mov
mov
lea
std
jmp
iret
inc
mov
ret
jb
std
xchg
xchg
mov
pop
jp
push
test
mov
addr16
pop
adc
push
outsb
pop
shrl
fneni(8087
daa
xor
pusha
ljmp
lret
in
jbe
and
ds
xchg
aas
jb
mov
push
aaa
jmp
in
cld
aad
xchg
xchg
jo
out
arpl
cmpsl
or
xchg
movsb
insb
fldl
psllw
loopne
xor
int
in
gs
mulb
cmpsl
rolb
or
cld
arpl
mov
lret
dec
add
sbb
push
push
into
sbb
fsub
dec
pop
imul
push
fcompl
aaa
add
stos
sub
leave
jle
shrl
ljmp
repz
jl
mov
push
imul
mov
adc
or
lds
mov
leave
jl
fmulp
mov
xor
xchg
jp
test
pop
or
push
idivl
rcrb
cmpsb
push
and
jmp
stos
pop
cmp
adc
lods
movsl
xor
mov
btr
test
push
push
loop
inc
jb
lret
lds
in
mov
jecxz
and
or
loop
pop
scas
pop
in
and
mov
xchg
stos
rol
les
stos
xor
lock
shlb
insb
out
or
xchg
mov
loop
arpl
or
jmp
nop
add
in
pushf
dec
push
jnp
or
inc
pop
aad
push
add
sbb
inc
xor
jmp
icebp
adc
sub
movl
stos
inc
cmpl
int
cmpsl
imul
ret
loopne
sbb
std
and
aam
mov
sub
in
lods
out
push
mov
mov
xor
cmp
jmp
sahf
pushf
pusha
push
push
leave
and
sbb
adc
movsb
mov
dec
pop
outsb
dec
add
mov
cmp
adc
sbbb
inc
cmp
xchg
sbb
push
lea
xchg
sub
push
xor
je
mov
mov
fdivrs
das
in
and
mov
sub
mov
icebp
stos
shl
lret
test
add
mov
mov
cmp
lods
xchg
add
in
or
xor
cmpsb
dec
pop
pop
jmp
sub
aas
in
jo
inc
fstps
nop
mulb
push
and
push
movsl
mov
ja
and
stos
lret
pop
nop
push
xor
pusha
jnp
jmp
push
xchg
jno
jo
or
nop
jg
in
mov
push
cmp
lahf
pop
jno
je
mov
or
add
into
hlt
jne
ret
lock
lcall
mov
xchg
jmp
clc
cmpl
pop
dec
add
leave
cli
aaa
dec
mov
sub
ja
mov
jge
mov
mov
xchg
mov
xor
sbb
out
mov
fsubrl
cmpsb
jnp
js
into
cmp
pop
jl
adc
mov
xor
fcomip
test
jmp
cmpl
jp
or
sbb
or
sbb
mov
into
sbb
clc
add
sahf
xchg
sbb
or
in
push
sub
leave
jp
and
mov
xor
sbb
imul
shlb
popf
jne
pop
in
test
cmp
fmuls
dec
or
push
xorl
or
imul
jbe
test
inc
mov
stos
lahf
sarb
mov
gs
xor
inc
pop
jae
out
loope
cmpsb
xchg
push
leave
or
xchg
dec
stc
or
lret
loope
inc
sahf
mov
imul
sub
jnp
jmp
imul
mov
shl
faddl
sbb
scas
xorl
push
bound
jmp
rcll
pop
pop
adc
sbb
pop
out
or
loope
loope
out
push
scas
sbb
inc
dec
ds
and
ds
shlb
or
movsb
scas
jl
lea
cltd
push
rcll
push
sahf
pop
cmpsb
sbbl
xchg
jb
lahf
add
repz
out
das
jp
lret
and
push
stos
add
loope
xchg
dec
add
in
out
dec
cwtl
pop
movsl
lock
lahf
mov
inc
mov
repz
or
xchg
xchg
xchg
push
mov
mov
cmpsl
push
jecxz
mov
sbb
add
mov
fs
cmpsb
idivb
jne
pop
jg
pop
fsubrs
lret
push
xchg
inc
and
in
nop
mov
fwait
stos
std
int3
addl
sub
cltd
outsl
sub
aas
fnstcw
mov
rdtsc
mov
scas
add
ret
jmp
fcom
pop
inc
icebp
loopne
pop
dec
inc
cwtl
xor
movsb
inc
mov
mov
test
in
je
sub
pop
xchg
add
dec
fcoms
cmp
sub
push
pop
adcb
add
fs
mov
imulb
mov
or
push
mov
rorl
pop
out
mov
xchg
hlt
mov
push
mov
inc
movsl
movsb
jns
cld
jp
test
inc
insl
dec
dec
adc
inc
not
cmpsb
mov
jns
and
jecxz
cli
xlat
scas
jecxz
push
and
lret
add
ljmp
fisubl
dec
push
call
dec
notb
or
mov
iret
enter
xchg
clc
scas
in
sub
adc
mov
fimuls
jle
jmp
or
ficomps
es
add
ljmp
ss
push
add
mov
mov
cmpsb
jno
ljmp
adc
push
vroundpd
nop
xchg
cwtl
adcb
orb
ds
cltd
test
jge
movb
test
inc
pop
fadds
push
jl
repz
inc
jae
or
ds
xchg
adc
mov
fdiv
mov
jmp
das
cmp
fnstcw
inc
mov
iret
or
sbb
and
mov
sub
stc
jb
mov
js
adc
movsl
clc
mov
sbb
aad
push
mov
imull
mov
lock
mov
jbe
daa
jne
cmp
aas
cli
aad
mov
std
dec
jae
rclb
pushf
repz
aam
xorb
and
inc
stc
les
jg
mov
push
lahf
cmp
hlt
mov
shll
jne
push
push
cmpsl
std
stos
sub
mov
pop
pushf
loopne
pop
jl
or
xorl
dec
jecxz
repz
loop
aas
xor
dec
jne
push
cmp
jnp
subl
pushf
shll
dec
inc
in
nop
in
arpl
sbb
xor
ja
lret
dec
gs
xorl
xchg
dec
mov
pop
mov
and
out
or
addr16
movsl
mov
mov
jl
cmp
in
mov
ljmp
mov
jg
cmp
push
out
in
xchg
fimuls
les
out
adcl
fldt
mov
mov
mov
lods
inc
push
nop
mov
clc
pop
cmp
adc
es
paddd
sub
fists
rcrl
add
mov
and
lock
dec
incl
inc
and
and
mov
mov
push
insl
cmp
imul
and
cmpsl
and
mov
loopne
scas
testb
call
imul
scas
xlat
adc
or
adc
lds
jb
stos
add
and
and
repnz
xchg
testb
mov
xor
push
in
or
fs
mov
cmp
mov
loopne
mov
hlt
mov
pop
in
push
push
xchg
xchg
dec
ss
pop
xchg
dec
fsubrs
ljmp
notb
outsl
imul
addr16
mov
pop
rol
arpl
mov
pop
jle
push
and
lret
aaa
push
ret
adc
sti
mov
ret
cvtdq2ps
das
mov
adc
cmc
xlat
xchg
cltd
jl
push
sub
iret
pop
lods
call
dec
jnp
jp
loopne
stos
inc
dec
call
pop
es
mov
pop
sub
xor
pop
mov
mov
testb
aas
mov
pop
sub
dec
incl
leave
mov
iret
or
dec
sub
add
mov
dec
xchg
ds
cmp
or
aaa
mov
xor
fisubrs
call
aam
inc
xchg
cmc
in
sub
sbb
frstor
shlb
pop
imul
pop
sbb
inc
push
ss
push
sub
add
jge
imul
adc
fisttpll
lret
or
push
roll
std
test
dec
mov
sub
aad
lea
lret
fmuls
leave
inc
inc
incb
mov
or
push
inc
fistpll
fnop
pusha
imul
xor
popf
aas
cmp
jns
daa
in
je
aad
sbb
push
dec
jno
xchg
mov
push
xchg
sbb
inc
mov
dec
imul
daa
xchg
xor
xchg
ret
es
jp
jle
sub
mov
inc
jnp
pop
cmpsb
push
xor
adc
cmp
dec
out
xor
mov
stos
testl
and
testb
aas
and
pop
or
xchg
mov
fisttps
xchg
mov
sub
mov
fsubrs
push
xchg
popa
mov
mov
add
jmp
pop
xchg
test
mov
push
in
mov
test
mov
inc
sbb
movsb
fistl
push
in
cmp
mov
pop
push
subb
pop
notl
bound
mov
xchg
nop
add
lods
push
daa
mov
mov
inc
les
shrb
fistpl
lret
inc
dec
in
sub
push
xor
loope
push
and
in
add
cmpb
aaa
stc
into
push
lods
stc
test
push
mov
repz
stc
das
call
adc
jl
fnstcw
pop
flds
mov
imul
add
mov
scas
aaa
sti
popf
xchg
mov
or
ljmp
xchg
or
mov
mov
or
sbbb
add
cwtl
gs
sti
sbb
pushw
sbb
test
or
mov
adc
cmp
inc
out
mov
es
mov
push
popa
mov
ljmp
in
dec
adc
aam
jle
mov
fiadds
or
adc
cmp
cmc
cli
or
rcrl
push
cld
push
lret
push
iret
movsb
dec
xchg
mov
push
cmp
stos
ja
adcb
cmp
outsl
mov
cli
xor
pop
xor
fwait
cmp
lods
loopne
and
aaa
inc
pop
stos
lcall
xor
testb
mov
bound
scas
jge
push
push
xchg
pop
loope
push
aam
and
cmpsl
sarb
movsl
in
in
fldenv
mov
mov
jl
clc
shll
imull
je
insb
xchg
icebp
xor
jge
jnp
cmp
jecxz
xchg
sti
cld
test
mov
sbb
test
mov
or
repz
xchg
fstps
mov
push
jnp
cli
mov
inc
call
pop
mov
push
repz
xchg
loop
mov
cmp
movmskps
mov
lds
push
out
loope
push
mov
cmp
sbb
imul
mov
sbb
sub
mov
lods
inc
or
ljmp
inc
cmp
mov
cmp
sbb
push
aaa
or
or
in
mov
cmp
xchg
fstpl
mov
jp
pushf
aad
push
test
sbb
push
jl
push
ss
cmp
and
ja
sbb
cmp
ret
cmp
or
push
je
lcall
leave
aaa
xchg
push
inc
xor
xor
movsb
adc
pop
xor
cmp
push
sbbl
pop
aad
push
push
mov
fistps
int
sbb
push
stos
fsts
push
sbb
in
mov
mov
add
or
outsb
pop
push
inc
ja
dec
jo
or
ficompl
sbb
arpl
mov
add
dec
stc
sbb
hlt
in
gs
lds
je
imul
data16
cs
cmp
fdiv
adc
add
out
test
xor
xor
rorl
repz
jecxz
mov
lahf
pop
fs
dec
push
in
fstps
mov
add
sbb
stos
sbb
lock
jle
lahf
insb
call
xchg
inc
movsl
je
mov
es
dec
in
shlb
sbb
lret
pop
push
jmp
sbb
mov
dec
call
push
xor
mov
aad
adc
call
pop
push
xchg
mov
sahf
fiaddl
mov
enter
jns
pop
xor
inc
lea
cmp
ror
jbe
in
fbld
fldcw
inc
ds
mov
lcall
xchg
mov
fbld
cmp
jo
jb
je
mov
icebp
xchg
loopne
inc
cmp
sbb
sti
pop
sub
movsl
mov
pop
out
jae
dec
lods
mov
in
stc
test
test
popa
incb
in
repz
in
int
jp
xchg
aam
xor
adc
add
dec
mov
cltd
ss
push
mov
roll
or
das
mov
enter
xor
mov
mov
adc
lods
pusha
lds
xchg
pop
sbb
dec
in
lea
adc
inc
mov
lea
and
decb
mov
push
je
inc
mov
pop
mov
and
lret
sbb
pop
mov
lods
sub
cld
mov
aad
bound
mov
movsl
adc
xchg
jno
es
jmp
dec
loop
pop
pushf
xor
imul
mov
xchg
aad
xor
sub
push
sub
pop
xchg
mov
xchg
mov
ljmp
inc
xor
pushf
loop
outsl
ret
xchg
shll
add
push
xchg
xchg
and
jp
mov
push
mov
xchg
and
loope
cmp
stos
cmp
test
and
jns
test
dec
into
test
int3
and
sub
adc
enter
push
les
push
clc
test
jnp
ret
imul
pop
cmp
push
add
push
push
sahf
jl
mov
inc
mov
dec
incb
add
loopne
cli
scas
mov
dec
adc
out
enter
pop
dec
mov
sti
cmp
fs
sahf
outsb
popa
xchg
sbb
jns
and
out
sahf
vsubps
bound
daa
add
std
sub
sti
cmpsl
fists
fdivs
shl
xor
push
adc
sub
pop
jbe
pop
jl
rcrb
push
cmp
mov
xchg
add
aaa
stos
jae
xchg
push
out
inc
jno
inc
mov
or
and
push
lods
xor
inc
and
or
dec
out
imull
adc
xchg
lret
nop
or
push
shr
sbb
cli
or
push
and
jno
negl
mov
cmp
mov
leave
je
push
jge
push
rorb
fsubl
dec
inc
inc
mov
pop
push
push
push
inc
lahf
fdivr
jg
jp
popf
testb
fistl
dec
arpl
sbb
cmp
cwtl
ds
push
imulb
call
sub
push
scas
lret
lcall
jg,pt
fcomi
jno
dec
xor
xchg
leave
adc
out
rorl
hlt
and
jo
pop
andw
lcall
outsb
pop
sbb
gs
mov
sahf
sub
cmc
push
xor
push
dec
cmp
lahf
dec
adc
out
outsb
stos
stos
and
mov
fisttps
mov
scas
idivb
fidivrl
popf
pop
in
push
insl
xchg
adc
test
mov
clc
bound
add
jbe
fwait
cltd
or
ret
ffree
stos
ljmp
jp
stos
sub
in
inc
pop
stos
xor
das
sub
mov
mov
pop
xchg
or
push
in
bsf
xor
nop
add
or
js
mov
dec
or
inc
lods
movsl
xchg
xchg
jp
iret
or
add
mov
loop
dec
imul
out
ljmp
ret
dec
push
cld
adc
sbb
pop
je
imul
lock
lea
sub
xchg
imul
repnz
jecxz
adc
dec
sub
out
xchg
xorl
jno
or
xchg
xchg
sub
mov
jecxz
fcomi
fbstp
jo
push
or
dec
jns
pop
int
js
stc
cs
fstpt
data16
mov
push
test
xchg
xchg
pop
mov
add
cmp
or
sub
push
movsb
fcmovnb
mov
cli
ss
adc
add
sub
adc
pop
int3
sub
fs
dec
jae
sbb
xor
jns
fstps
loope
enter
sbb
lds
lret
and
stos
jl
xchg
pop
adc
das
repz
testl
fnstcw
push
mov
je
xchg
mov
mov
test
and
push
in
and
popf
push
cmp
sub
imul
imul
mov
mov
xor
jg
repnz
shll
push
push
sub
inc
xor
ljmp
lds
push
repz
or
sbb
cli
aas
inc
push
mov
cmp
mov
pushf
movsb
enter
repz
ret
enter
pop
test
les
arpl
movsb
pop
or
xchg
jnp
inc
push
mov
dec
int
inc
sbb
jns
mov
mov
and
inc
les
and
jp
roll
sbb
add
and
out
push
sbb
push
mov
push
xchg
jmp
inc
push
push
in
adc
jecxz
push
or
adc
or
mov
cmpsb
mov
and
and
outsl
jmp
xor
push
jmp
sbb
dec
and
mov
add
mov
xchg
imul
ret
xor
lcall
inc
rclb
xchg
leave
sub
pop
adc
mov
mov
or
mov
enter
leave
xchg
xchg
rorl
in
sbb
mov
and
jae
jb
xchg
or
aad
int3
add
leave
test
mov
inc
ret
xchg
clc
add
lahf
leave
leave
jbe
cmp
pop
ret
aad
fsub
mov
imull
mov
cmp
sub
aas
mov
fwait
out
in
fildll
cmp
add
add
sub
push
push
cld
bswap
mov
cmp
dec
jp
cld
jbe
hlt
les
add
cli
adc
inc
cwtl
mov
xor
test
sub
outsb
scas
imulb
add
mov
dec
mov
clc
dec
jp
aaa
lahf
test
cld
mov
stc
and
mov
cmp
repz
sub
mov
les
or
nop
mov
lret
aas
test
fs
outsb
pushf
mov
daa
jle
push
insl
fcmovnb
jl
sbb
clc
in
lret
or
jge
nop
inc
imul
cmp
leave
pop
ss
sahf
es
mov
mov
divl
iret
mov
adcb
cmp
pop
aaa
adc
jae
dec
inc
cmc
push
and
in
in
adc
pop
sub
lahf
xchg
shrb
mov
mov
mov
in
std
in
jno
shrb
inc
mov
in
mov
mov
xor
cli
mov
push
jo
dec
pop
test
dec
pop
fsubl
popf
cwtl
jge
subl
push
dec
jae
adc
add
or
mov
dec
pop
imul
lds
ss
and
aam
pop
dec
lds
jge
fmull
enter
cmc
sub
and
out
pop
sbb
mov
mov
xchg
movsl
in
add
cltd
push
mov
mov
fsubs
or
or
pop
dec
adc
sti
cltd
ss
lea
inc
xlat
add
cld
movsb
jb
jo
xor
repz
or
mov
mov
cmp
cltd
cltd
fsubrs
xchg
sbb
mov
mov
iret
stc
fbld
or
imulb
and
mov
adc
dec
shll
stos
nop
and
add
mov
sbb
insb
das
movsl
or
gs
mov
xlat
imul
out
xchg
bsr
add
and
fwait
iret
inc
insl
xor
mov
inc
mov
sub
and
xchg
mov
fwait
sbb
sub
jae
aas
fwait
test
loopne
xchg
xchg
push
lods
push
jl
inc
lods
fsubrl
or
mov
or
push
repz
cmpsb
mov
test
lods
fst
outsl
addb
adc
or
les
arpl
lds
insb
movsb
sub
out
xlat
pushf
adc
push
cmp
mov
loope
insl
ss
pop
and
call
xchg
out
cmc
fdivs
cmp
jbe
leave
cmp
cli
sub
mov
shl
sahf
pusha
das
in
xor
xchg
daa
fstpt
or
pusha
loopne
outsl
fcomps
xchg
xchg
mov
xchg
inc
stc
or
mov
and
cmc
inc
out
rorb
aas
iret
mov
mov
imul
ret
ficoms
cmp
jnp
cmp
je
popa
cwtl
inc
adc
and
xchg
cmpsb
inc
xchg
sub
lea
push
jle
xchg
aam
adc
lods
lods
fisubrl
out
int3
adc
pushf
push
jb
cmp
gs
iret
mov
addr16
out
ljmp
into
in
jmp
jne
xchg
repnz
mov
lahf
push
std
sub
sub
push
rcrl
sti
dec
push
add
jno
jge
mov
daa
imul
stos
inc
loope
push
sub
cmp
inc
es
es
cmpsb
jge
cltd
pushf
jns
dec
push
xor
jl
out
pushf
pop
lds
je
jns,pn
sub
inc
movsl
or
rcll
or
pop
sbb
xlat
pop
aad
gs
je
lds
jo
sub
cmp
pop
push
xor
xchg
cmp
or
movsb
mov
roll
lods
dec
sub
cmp
ficomps
mov
insl
cltd
mov
in
cmp
pop
jno
enter
pop
out
mov
adc
decb
push
sahf
xchg
ds
push
fmuls
cmpsl
lret
sbb
pop
inc
scas
test
push
lods
jle
jge
ret
subl
filds
out
add
pop
pop
mov
xchg
push
fwait
das
loop
data16
add
pop
bound
lret
push
xor
pop
movsb
int
mov
sub
cli
mov
lcall
orl
mov
test
inc
push
dec
bound
sarb
mov
push
daa
xor
aaa
mov
cmp
inc
xor
jne
outsl
inc
dec
and
lock
enter
sbb
popl
pop
sub
push
or
xor
push
cld
push
sbb
pop
mov
jb
cmpsl
add
ja
pushf
jle
mov
push
adc
popl
rorb
lds
mov
inc
imul
shr
mov
out
adc
mov
cmpsl
mov
jae
pusha
addb
cmp
and
fmuls
xor
jmp
pop
cmpsl
fstl
into
xor
cli
sub
cmp
jns
out
imul
sbb
mov
sti
add
rcl
push
mov
push
daa
jle
daa
in
or
or
mov
imul
clc
pop
sbb
jle
stc
cmp
xor
int3
test
and
push
jns
mov
fidivs
lahf
das
stos
outsl
and
orb
ljmp
inc
or
clc
call
xor
mov
ffree
pop
cltd
jecxz
decb
xorb
ret
inc
mov
jmp
stos
and
in
pop
pop
popa
sbbb
xor
pushf
adc
xchg
jle
test
xor
sbb
dec
imul
cmpsl
loope
mov
rolb
fmuls
mov
mov
dec
cmp
mov
es
add
cmpsb
lock
lret
add
mov
shl
adc
push
dec
dec
mov
enter
stos
arpl
inc
pop
or
inc
push
mov
rclb
in
push
lods
pop
push
test
cmp
imul
mov
adc
mov
sub
jno
mov
pop
mov
mov
push
popf
in
add
lock
sbb
lahf
leave
test
aam
dec
pop
mov
cwtl
jne
popa
pop
decl
xor
out
std
or
dec
mov
bound
dec
nop
or
ret
mov
inc
notl
shrb
or
inc
inc
xor
pop
repnz
jb
jecxz
xchg
sarb
cs
xor
xor
ret
inc
cmpb
std
mov
out
loopne
sbb
dec
mov
sbb
mov
inc
push
adc
movsl
pop
js
xlat
fs
mov
je
mull
jmp
xchg
sbb
mov
aas
cmp
xor
mov
cmpsb
rclb
mov
mov
jnp
push
sbb
test
mov
add
fwait
in
and
movsl
dec
adc
fwait
addr16
pop
inc
jbe
adc
push
sbb
sub
enter
mov
out
inc
aaa
push
jbe
into
inc
cwtl
or
sarb
popf
and
nop
dec
fistps
push
stos
add
adc
stos
cmp
mov
xor
test
lea
pop
outsl
dec
jns
mov
lea
push
dec
add
jae
in
ss
adc
pop
mov
jns
push
mov
shll
add
cld
push
inc
xchg
bound
and
das
cs
leave
pusha
rcrl
cmp
int3
lock
negb
pop
sahf
inc
sbb
cmpsl
push
dec
jg
popa
mov
mov
dec
mov
mov
sbb
out
ret
pushf
sti
addr16
bswap
into
icebp
js
lahf
pop
mov
push
push
xchg
xchg
aad
fistps
test
test
popa
fnsave
int3
push
arpl
outsb
pop
into
xchg
fmul
stos
fwait
mov
jnp
mov
cmp
sub
xlat
scas
jl
movsb
dec
shrl
push
das
xor
std
int3
clc
stos
sub
jg
or
xchg
push
outsl
and
popa
cmp
cmp
jns
mov
out
inc
fcmove
dec
insl
mov
lods
add
and
sub
btc
es
shll
outsl
es
xor
pop
push
mov
push
mov
xlat
inc
cld
inc
add
les
inc
mov
cwtl
push
int3
inc
mov
gs
lds
xor
mov
or
or
or
pop
loopne
clc
cmpsl
lcall
pop
faddl
es
cmp
fdivrl
and
sbb
daa
push
out
js
sbb
cmpsl
add
out
xchg
add
mov
sahf
xchg
inc
pop
xchg
mov
cmpl
xchg
out
in
push
loop
insb
jae
ret
repz
jbe
test
mov
notl
xor
cmp
xchg
xchg
or
aas
fildll
jno
dec
std
cltd
xchg
mov
imull
or
push
loope
sub
and
or
andl
rcl
fcoms
lahf
sbb
lret
popa
mov
mov
jnp
xchg
mov
xchg
sbb
mov
insb
movsl
and
ret
mov
and
and
ljmp
stc
jmp
pusha
and
fidivrs
adc
xor
mov
xchg
push
pusha
hlt
add
pop
cmp
add
cli
subb
xor
les
test
adc
xlat
int3
or
jg
cmp
jle
xchg
xchg
and
nop
xchg
aaa
dec
add
daa
xchg
xor
push
inc
lret
add
dec
popf
mov
fldcw
int3
mov
push
daa
int3
mov
bound
cmp
fstpt
mov
sub
or
cmp
jp
push
test
xchg
sub
sbb
sub
xlat
jno
sbb
jg
jmp
push
xchg
loope
jle
xchg
inc
pusha
push
stc
dec
jg
dec
xor
stos
or
pop
cmp
aas
dec
popa
adc
lcall
clc
call
nop
fwait
shrl
push
sbb
ret
in
jmp
pop
and
push
fstpl
mov
mov
std
mov
push
cmp
adc
xor
cmp
lret
dec
mov
ret
jno
pop
es
into
pop
mov
mov
subb
mov
sbb
outsb
repnz
mov
movsb
std
pop
fnsave
jmp
rcll
dec
push
jb
mov
das
insl
pop
pop
xor
mov
lret
xor
lock
shlb
iret
fdiv
cmp
xor
sub
lds
popf
mov
mov
sub
or
loope
sar
and
push
push
in
mov
test
push
dec
ss
mov
pop
dec
lahf
dec
adc
push
dec
fldt
xchg
push
ret
sbb
or
mov
test
inc
cli
mov
pop
or
mov
fwait
or
push
fwait
jbe
inc
push
mov
aaa
stos
or
pushf
mov
dec
adcb
gs
or
xchg
push
pop
jecxz
insb
insb
pop
andl
mov
inc
inc
rolb
enter
sbb
repnz
mov
bound
mov
sub
xor
sub
mov
mov
mov
sub
sub
inc
add
pusha
das
push
iret
pop
or
or
push
mov
leave
bound
clc
xor
xchg
pop
fyl2x
mov
jne
js
add
push
popa
test
jno
js
dec
adcb
dec
loope
xchg
fcomps
sub
jo
subl
jbe
es
lods
loopne
scas
pop
lret
sti
lcall
pop
push
pop
mov
jecxz
mov
int3
or
sub
fcmove
jne
mov
mov
mov
subb
and
xchg
xlat
jae
lahf
scas
sarl
lods
inc
cmc
in
mov
lcall
shrb
out
dec
mov
add
js
outsl
in
mov
cmp
enter
shrl
mov
aad
jge
push
out
or
mov
xlat
adc
mov
mov
repz
jbe
jbe
add
lcall
iret
cmp
pop
data16
sahf
dec
mov
jo
dec
loopne
xchg
dec
jb
insl
mov
lods
sub
inc
aaa
mov
mov
test
sub
xchg
dec
js
out
mov
adc
lret
pop
sti
mov
gs
fstpl
inc
popa
bound
sbb
inc
fstp
xor
jg
cmp
add
das
dec
mov
enter
xchg
daa
adc
mov
jb
imul
ja
cmp
gs
dec
inc
jb
adc
scas
std
mov
das
into
js
xlat
stos
aas
dec
xor
dec
ljmp
jecxz
pop
jnp
inc
repnz
or
loope
and
add
add
mov
pusha
or
sub
cs
push
pop
push
out
sbb
out
jge
bound
sub
outsb
or
popa
mov
sub
jnp
mov
mov
push
sbb
ss
ljmp
sbb
lods
adc
push
dec
push
leave
lock
cmpsb
push
jmp
mov
adc
dec
adc
jno
out
or
dec
xor
ficompl
pop
mov
cmp
pusha
mov
mov
mov
and
inc
jbe
sahf
insb
enter
dec
scas
in
insl
in
ds
lds
jecxz
fcmovne
loop
adc
out
rclb
add
out
in
stos
mov
xchg
popa
scas
sub
stos
aas
and
test
lahf
mov
xlat
fisttps
stc
fisubs
jp
scas
sub
ljmp
ja
clc
popf
pop
adc
push
decb
sbb
or
loopne
or
push
scas
ljmp
cmp
inc
vphsubdq
loope
add
sbb
addr16
push
cs
ret
shll
imul
ljmp
inc
jno
mov
jl
add
inc
sub
add
cmp
jg
add
js
aas
push
push
lea
cld
inc
icebp
jg
daa
pop
sti
inc
orb
dec
cli
aaa
dec
sar
dec
outsb
neg
mov
adc
pushf
icebp
and
mov
mov
add
push
adc
add
jno
in
inc
mov
jle
sub
mov
out
in
pop
leave
mov
mov
jl
xchg
mov
and
sbb
clc
dec
mov
out
dec
popa
sti
xor
std
push
out
push
push
dec
inc
cmp
lock
and
sarb
sub
les
icebp
xchg
mov
mov
rorb
pusha
sbb
clc
cmpsl
mov
dec
push
popf
sbb
sbb
pop
cltd
or
lea
dec
jne
sub
sub
fs
push
mov
das
test
imul
aaa
adc
and
pop
jnp
inc
dec
mov
jg
lds
call
pop
lods
shlb
sar
rcrl
aad
stc
xchg
mov
xchg
lods
bnd
cmc
data16
mov
or
addr16
mov
push
mov
and
outsb
rclb
cwtl
in
or
hlt
pop
mov
mov
daa
adc
icebp
cwtl
popf
mov
add
xor
mov
test
cmp
xchg
jmp
add
push
add
xchg
push
inc
in
push
push
stc
xchg
into
mov
push
test
daa
addb
adc
cmp
and
mov
lret
or
push
pop
mov
adc
fwait
lock
or
mov
jbe
dec
lea
int3
sarl
sbb
xor
int3
aam
dec
adc
daa
mov
and
cmpsl
enter
add
iret
fwait
xor
push
rolb
push
imul
mov
jge
std
test
cld
bound
inc
sub
sub
popa
push
adc
adcb
jecxz
fisttpll
cmpsl
repnz
or
mov
stos
les
pusha
je
xlat
loopne
mov
movsb
mov
inc
push
dec
in
mov
mov
mov
mov
mov
push
test
push
ret
cs
push
adc
mov
adc
pop
mov
and
in
rcll
adc
cmpsl
pop
movsb
call
mov
or
jp
push
stos
imul
push
dec
or
sbb
mov
inc
daa
adc
cmp
sbb
jo
jmp
xchg
jne
fwait
stos
add
sub
or
shll
stc
pop
mov
pop
and
xchg
add
ljmp
xchg
sbb
and
jnp
in
je
pop
iret
sbb
lds
xor
sbb
xchg
xor
jnp
sub
mov
push
xlat
aas
aas
or
xor
inc
shrl
mov
add
jbe
xchg
push
mov
add
out
and
imul
xor
mov
insb
add
lock
mov
xchg
and
jmp
int3
ds
push
fucomp
push
mov
adc
ds
push
dec
test
mov
jnp
outsl
and
mov
fisttpl
loopne
jmp
packssdw
pusha
mov
or
cmpsl
xchg
subb
mov
mov
add
xor
mov
mov
cwtl
xchg
test
mov
out
std
ret
mov
dec
jb
xchg
and
negl
aaa
and
push
mov
inc
pop
daa
xchg
ljmp
dec
sub
mov
cmp
scas
lret
mov
xor
adc
pop
mov
jge
cmp
xor
xor
push
or
pop
push
rcll
adc
popf
notl
mov
or
shll
lcall
int3
lcall
sub
jns
in
bound
test
int
xorl
sbb
mov
sub
in
mov
push
repz
loop
mov
sub
mov
sar
mov
push
sub
aaa
adcl
mov
jne
cmp
pop
rclb
pop
cmp
mov
xor
xchg
imul
inc
lds
xchg
xchg
in
test
ss
cmp
stos
movb
push
mov
push
push
jbe
adc
jg
adc
mov
and
insl
test
sub
outsb
dec
iret
insl
jp
xchg
js
jns
stc
test
iret
test
mov
bound
dec
pop
xlat
arpl
loopne
mov
cmpsl
push
cmp
mov
jb
inc
mov
fsubrl
loopne
sub
push
mov
sub
lret
pop
das
nop
jle
sbb
in
fwait
loope
sub
jnp
mov
icebp
insl
outsb
in
dec
hlt
aam
enter
jg
hlt
adc
xlat
test
sarl
xchg
cmpnltps
adc
dec
and
cmp
je
ficomps
leave
and
mov
push
pop
mov
inc
inc
loope
push
mov
mov
sti
pop
mov
movsl
fs
nop
add
sbb
mov
add
movsl
fcompl
aas
sbb
pop
mov
rorb
clc
mov
aam
pop
and
jge
jmp
cltd
push
cli
xor
pushf
int3
or
lahf
jg
xchg
push
std
dec
leave
repnz
mov
in
iret
xchg
dec
jg
stos
xchg
imul
pop
sub
aam
jle
or
dec
out
cmp
sub
aas
cwtl
insb
pop
dec
dec
jle
cmp
aad
rcll
fwait
jno
pop
loopne
cmp
int3
xchg
cwtl
stos
jb
into
mov
xchg
adc
mov
lods
push
aas
addr16
icebp
and
gs
jmp
out
mov
jp
jns
lret
test
cmpsl
aam
and
scas
imul
jge
push
lock
popf
jo
pop
shl
inc
ret
add
cli
movsl
push
pushf
xor
notl
inc
and
jne
push
xchg
fld1
sbb
pop
mov
sub
sub
mov
rorb
jb
push
cmp
push
push
add
jp
lods
pop
push
jg
mov
cmp
test
cwtl
sub
sub
adc
lods
add
or
dec
mov
bound
jo
mov
push
jecxz
lods
in
aaa
repz
cmp
in
ret
cmp
xlat
cmp
scas
xchg
inc
aam
outsl
sub
rclb
xchg
lock
sti
mov
lret
loop
and
adc
and
repnz
int3
jno
cs
fwait
repnz
test
pusha
mov
ss
mov
ret
jne
lret
in
push
xlat
sar
shll
xchg
jl
add
sbb
xchg
xchg
pop
mov
fwait
movsb
sti
pushl
cmovs
ror
aad
nop
jo
push
mov
notb
push
cmp
inc
dec
mov
daa
jecxz
lahf
mov
stc
xchg
pushf
fidivrs
dec
jne
mov
mov
cmpsb
adc
jge
andb
xor
gs
xlat
aaa
jbe
push
dec
nop
inc
imulb
mov
hlt
dec
into
xor
jno
fldcw
in
push
xchg
or
mov
cmpsl
outsb
adc
adc
pop
mov
cld
cmp
push
incl
inc
aam
in
clc
les
inc
cmp
adc
xor
adc
scas
jne
daa
sbb
fdivrl
xor
stc
xchg
cmpsl
stc
mov
jae
mov
mov
lods
ja
mov
les
sub
into
cmp
xorb
lea
imul
xor
loop
scas
mov
movsb
dec
daa
sub
sub
xadd
lahf
add
fcmovbe
insb
mov
inc
cmp
cli
mov
movsb
pop
or
or
jg
pushl
loope
aas
lods
mov
mov
lds
mov
cmpsb
fimull
sbb
jmp
dec
add
sti
fisubs
xor
mov
std
es
stos
in
dec
cld
ja
mov
xchg
imul
stc
test
aas
cld
out
cld
mov
jmp
jg
sbb
push
cltd
rcr
aam
xchg
dec
push
cld
cli
push
adc
mov
mov
and
jl
cmpsl
jl
xor
push
cmpl
sub
mov
test
shl
and
out
xor
fildl
pusha
shl
mov
rcrb
cmpsl
repnz
pusha
push
or
ret
push
mov
aad
mov
in
imul
pop
xchg
sbb
pop
pushf
dec
mov
mov
dec
mov
inc
int
push
loope
rolb
jp
xor
add
scas
in
mov
pop
cmpsb
xlat
push
pop
pusha
ror
or
cwtl
int3
or
jno
jo
jl
outsb
mov
ljmp
sbb
cmp
xchg
push
adc
cwtl
scas
jne
je
aam
lret
mov
push
jmp
rorb
test
cmp
mov
fnstcw
cmp
cmc
sbb
and
movsl
lea
and
adc
mov
dec
inc
push
cli
sbb
lock
and
xchg
test
je
push
inc
stos
xor
cwtl
fistl
jmp
mov
movsl
inc
pop
arpl
ret
sbb
stc
xor
stc
pop
push
push
ret
mov
fisttps
fwait
xor
out
ret
js
iret
add
sub
cli
test
inc
jo
and
lea
xlat
faddl
ja
out
jl
mov
outsb
nop
mov
movsb
aam
jae
mov
mov
hlt
sbb
or
jnp
js
mov
stos
pop
pop
push
pop
data16
or
mov
and
jecxz
mov
lods
and
push
cltd
addr16
inc
sahf
mov
data16
dec
jmp
sti
out
mov
or
adc
sahf
mov
daa
lcall
lods
and
sub
sub
out
mov
notb
movsb
sarb
jmp
loop
repnz
popa
daa
sub
sbb
lds
pop
mov
cmp
cmpsb
fwait
sub
and
inc
mov
or
mov
cmp
imul
pop
push
mov
dec
outsl
pusha
cmp
out
loopne
cmpsb
push
iret
lods
call
incb
mov
mov
mov
fdivrs
jmp
pop
xor
lock
iret
fdivrl
xchg
cmpb
add
xor
test
movsb
dec
inc
aaa
mov
movsl
mov
cmp
movsl
push
pop
mov
int3
out
xchg
mov
mov
icebp
sbb
loope
jo
clc
adc
inc
or
lcall
mov
xor
lea
imul
fs
mov
xchg
pushf
lock
ja
enter
idiv
fs
jmp
inc
xor
xor
sbb
inc
andb
imul
jle
and
into
sub
and
mov
pop
dec
lahf
cmc
testl
add
mov
xchg
jmp
adc
xchg
clc
pop
scas
imul
pop
lods
les
mov
push
shlb
jo
push
rol
hlt
popf
insb
sub
cmp
inc
cli
and
imul
mov
cltd
pop
mov
insb
mov
daa
xor
out
adc
xchg
mov
push
xchg
out
xlat
inc
xchg
enter
pop
jle
push
sub
negb
ja
or
lock
mov
mov
hlt
jecxz
xchg
inc
divb
cwtl
aad
int3
xor
sbb
ds
cmp
iret
xchg
pop
sub
or
cld
mov
jmp
shr
mov
jge
dec
clc
mov
push
pop
cs
sbb
mov
test
loop
sub
push
or
pop
std
sub
mov
sar
xor
adc
adcb
mov
pop
and
loope
dec
sbb
stos
pop
out
pusha
xor
adc
pop
jno
xor
pop
inc
setg
aam
push
sbb
pop
stos
test
popf
es
sub
or
fstp
and
movsl
and
dec
lret
pop
ds
mov
out
inc
addr16
pop
fcoml
or
insl
imul
lea
mov
test
dec
ficoml
adc
sbb
aad
cmc
xchg
nop
add
or
sbb
dec
out
dec
out
popf
add
je
dec
pop
xchg
aas
and
lret
adc
nop
test
js
xchg
mov
cli
mov
adc
sub
bound
popa
sar
fsts
adc
xor
mov
fstps
jge
xor
sub
es
push
sahf
jno
dec
and
xor
aas
pop
ds
pop
mov
sbb
fidivs
ds
pop
push
cmp
mov
cmpsb
cmp
jae
in
sbb
cmp
xchg
loopne
and
rclb
ljmp
inc
sbb
mov
dec
adc
loop
push
mov
pop
jg
rcr
and
fisubrs
std
bound
in
gs
xchg
sub
jecxz
pop
outsb
lret
cmpl
cld
mov
shlb
and
in
jo
repnz
mov
sarl
lcall
repnz
inc
inc
xchg
std
fstpt
or
cmc
push
mov
imul
pop
js
jnp
mov
mov
scas
enter
xchg
jecxz
adc
or
sbb
xchg
sub
movsl
or
ret
aad
or
xchg
xor
es
xchg
or
jbe
mov
xor
mov
movsb
dec
mov
or
ljmp
jnp
addb
cmpsl
mov
xchg
arpl
cmpsl
add
in
sub
xor
iret
pop
add
adc
dec
jns
mov
loope
and
push
adc
mov
xor
adc
jg
add
in
clc
popa
jno
testb
adc
int3
fistl
xchg
dec
xchg
mov
push
ror
pushf
sub
or
loopne
or
inc
add
je
cmp
jmp
cmpsb
sbb
cmp
sub
fwait
mov
rcrl
cmp
jp
push
test
and
adc
inc
sbb
repnz
pop
or
xor
push
leave
or
lds
jg
fcom
cmpsb
mov
pop
add
cmpsb
test
jns
sbb
rol
xor
pushf
andb
sbb
stc
ret
push
dec
jae
mov
out
xchg
rclb
pop
inc
repnz
dec
stos
xchg
jnp
sbb
cwtl
ja
das
cld
xor
sbb
mov
orl
push
sarb
inc
jge
xchg
in
nop
bound
xchg
in
push
mov
ds
mov
insl
sbb
imul
cs
imul
add
ret
cltd
sbbl
fbstp
dec
cmpsl
jecxz
sbb
in
in
xchg
les
mov
out
jbe
imul
out
js
orb
imul
jb
adc
push
in
test
jb
jae
adc
into
push
testb
mov
mov
hlt
jg
out
add
lret
pop
xchg
repz
sub
movsb
cmp
in
in
sbb
clc
mov
xchg
pushf
stc
repz
push
pusha
repz
add
out
push
xchg
or
shlb
sbb
dec
fwait
lahf
jp
enter
shll
add
stc
hlt
add
cmp
imulb
lcall
xor
gs
jp
mov
pop
jno
jp
fisubrs
iret
mov
insb
jno
arpl
sub
jbe
lods
cmp
push
mov
inc
mov
cmp
out
push
inc
pop
inc
inc
push
mov
mov
pop
mov
nop
sbb
cli
cs
int
fiaddl
gs
lret
imul
sahf
sub
aad
push
scas
shll
lret
push
stos
jns
mov
test
in
enter
push
fnsave
fs
mov
movsb
fdivl
mov
push
je
ret
push
pop
gs
lock
push
test
dec
add
adc
shl
or
jbe
push
ucomiss
out
mov
xchg
lcall
xchg
subl
adc
mov
and
mov
fcoms
lret
and
jnp
xchg
mov
dec
and
neg
jnp
mov
jno
pop
into
imul
sub
faddl
adc
mov
xor
mov
xchg
sub
jmp
pop
outsl
mov
sahf
lds
scas
fsts
push
or
sbbl
xchg
add
xor
pop
lahf
out
aad
lcall
cmpsl
mov
push
mov
outsl
mov
lahf
ficoml
loope
xlat
js
and
xor
je
xor
popl
pop
xchg
mov
dec
xchg
dec
aad
cli
cmp
jg
cmpsl
enter
adc
or
push
movb
repz
mov
add
jecxz
add
xchg
push
and
dec
push
cmp
ljmp
sub
dec
cld
cmp
repnz
sbb
mov
movsl
out
push
ret
pop
cli
mov
enter
addr16
sub
lcall
imul
daa
mov
adc
fmul
addr16
push
jo
jbe
xchg
push
insl
mov
xchg
push
fs
xor
mov
mov
std
jl
xor
icebp
add
or
mov
jne
enter
push
or
push
mov
in
xchg
std
and
pusha
mov
xchg
in
sbb
sahf
iret
xorl
cwtl
insl
cmp
fs
xor
mov
clc
jb
cmp
mov
scas
fmull
push
mov
push
xor
inc
in
popa
notb
ljmp
xor
adcl
int
mov
cltd
push
aas
popa
iret
add
cmp
insb
jae
dec
cltd
mov
insl
xchg
mov
lds
jae
idivb
movsl
repnz
insb
into
ret
mov
mov
arpl
push
dec
cmp
std
mov
aas
mov
in
dec
dec
pushf
add
in
mov
mov
xchg
jnp
xchg
inc
jp
das
inc
or
fisubrl
mov
xor
imull
xchg
add
test
js
mov
arpl
xchg
jae
rcr
cmp
jns
jg
jno
clc
repnz
mov
mov
and
lret
cwtl
pop
ljmp
xchg
sahf
shl
enter
bnd
push
sti
mov
push
outsb
pop
dec
dec
push
xlat
inc
jg
pop
pop
popf
stos
aad
popf
out
cmp
test
lret
ret
scas
outsb
ljmp
jns
jg
insl
movsb
and
in
pop
adc
pop
fs
cwtl
inc
sti
inc
push
mov
mov
adc
or
stos
scas
add
pop
xlat
in
pop
push
idivb
inc
add
clc
jbe
repnz
cmp
std
push
mov
mov
lods
pushf
jp
add
pop
mov
mov
call
xchg
and
push
mov
sub
clc
sahf
lret
scas
mov
fsubr
push
jmp
push
adc
pop
add
jp
push
xchg
jbe
add
add
add
rcll
cmp
jns
clc
jae
cmp
enter
enter
into
aam
add
sti
test
pop
sbb
inc
sub
outsb
in
rcrb
aas
pop
or
and
leave
adc
add
cld
stos
sbb
cmp
sbbl
ret
jns
rcrb
cmp
jg
movsb
mov
icebp
xorl
cmp
add
out
ss
lret
push
mov
xor
mov
pushf
hlt
mov
shufps
or
and
and
fcoml
sub
movsb
lcall
ss
and
fiaddl
js
pop
mov
mov
inc
cld
into
outsb
xchg
mov
std
xor
push
cmpsl
add
mov
xor
imul
in
or
mov
mov
mov
sbb
mov
movsl
jg
shlb
cmp
xchg
leave
out
pop
sub
xchg
push
mov
cmc
mov
movsl
mov
jmp
fcompl
scas
inc
xchg
and
cmpsb
sbb
jbe
mov
sub
addr16
pop
out
mov
std
or
pop
sbb
mov
movl
mov
loop
lock
cmc
stos
cmp
add
push
push
arpl
or
xchg
stos
cmp
aad
jnp
or
ljmp
add
xlat
mov
or
or
jge
dec
push
adc
lods
or
std
pop
rol
aam
leave
add
and
mov
ja
cmp
fimull
cmpsb
add
addr16
sbbl
sub
inc
and
in
cmp
push
cltd
cmp
out
xor
pop
aad
push
sub
adcb
cs
xchg
and
clc
push
movsl
iret
or
dec
popa
ficoml
ret
adc
add
mov
cmpsl
popa
cmp
clc
push
movsl
testb
mov
pop
nop
aas
jo
jecxz
iret
add
jb
cs
add
hlt
into
mov
jp
lret
cwtl
push
and
mov
and
sbb
sub
sbb
add
je
inc
outsl
jns
and
in
addr16
sbb
or
cmp
jge
xchg
xor
aaa
pop
mov
and
inc
push
cld
xlat
jns
add
sbb
mov
fcoml
pop
xor
outsb
pop
cmp
jnp
push
mov
mov
insl
sbb
pop
bound
fs
cmp
add
and
push
sub
pop
mov
ret
imull
aam
std
idivw
cld
dec
inc
insl
sahf
popf
stos
ror
cmpsl
dec
cmp
das
lds
inc
push
push
dec
mov
lods
pop
bound
sub
stc
push
js
mov
ljmp
add
mov
dec
je
mov
lea
jo
jns
addr16
add
rcrl
xchg
adc
out
push
adc
fcmovb
or
sarl
jl
test
data16
es
xchg
gs
jecxz
mov
jge
or
sbb
jbe
adc
sbb
cmp
dec
scas
dec
sbbl
dec
and
icebp
imul
aas
cs
orl
lcall
pop
mov
sbb
xchg
ss
add
mov
jp
cmp
push
stos
mov
icebp
or
out
pop
dec
out
inc
mov
jl
mov
and
scas
js
cmp
into
jg
adc
push
pusha
dec
cld
mov
and
outsb
mov
add
popa
loopne
mov
sbb
jne
mov
popa
pop
and
cmc
test
sbb
pushf
sbb
gs
mov
mov
mov
lods
or
jo
rcll
jno
pop
loopne
insl
lret
pop
adc
fnstsw
repz
or
xor
cmp
mulb
jge
ror
xlat
cmpl
jg
cmp
test
popa
xchg
fcoms
shr
sbb
subl
orb
shl
cmp
adc
mov
push
mov
cmpsl
mov
mov
cmc
sub
mov
insl
mov
cmp
jp
cmpsl
or
inc
xchg
xchg
sahf
mov
xchg
cwtl
cld
aaa
xchg
xchg
jae
mull
ss
cmp
ret
mov
xor
sbb
jg
xor
dec
sub
gs
mov
inc
testb
push
testb
jecxz
cwtl
bound
inc
mov
cltd
xchg
or
je
cmc
cmp
fists
repnz
mov
and
mov
test
repz
jnp
lock
loopne
daa
popa
aad
jl
xor
jle
pop
mov
push
sub
jmp
ss
nop
sbb
jp
int3
push
jbe
and
mov
daa
xor
lock
xchg
xchg
push
xor
mov
out
push
xchg
rclb
lds
jo
dec
adc
push
mov
mov
sub
cli
ds
fcoml
rorl
cmpsb
mov
xchg
notb
lds
lods
int
push
jle
imul
sbb
adc
push
jbe
scas
push
mov
lret
or
jbe
and
mov
sub
insl
gs
dec
enter
mov
jno
out
fs
stos
cwtl
fs
je
leave
imul
inc
pop
push
push
lahf
lds
add
fsubs
push
cmc
in
aaa
adc
pop
leave
ret
xchg
mov
sbb
mov
xchg
dec
dec
repz
push
add
sbb
dec
push
jne
orl
sbb
popl
pop
lret
push
subl
or
pop
addr16
out
push
add
scas
sub
pushf
jbe
cwtl
or
outsl
jge
jecxz
into
jae
jge
inc
movsb
gs
lcall
call
fsubs
popf
cltd
mov
add
sbb
mov
mov
jp
fnstenv
mov
mov
add
sti
jle
inc
loopne
fisttps
push
jmp
inc
cmp
loop
dec
hlt
rolb
fadd
in
fistpll
pusha
mov
sbb
imul
imul
dec
xchg
fcoms
int3
add
out
jle
xchg
dec
push
in
and
in
mov
cmp
test
dec
sub
push
fsubs
call
mov
jbe
pop
mov
jmp
mov
xchg
cmp
sahf
imul
cmp
dec
icebp
push
mov
ret
ret
loopne
cs
aad
fadds
pop
dec
pop
pop
arpl
lahf
test
xchg
pop
imul
mov
dec
jns
pop
jg
or
scas
pusha
insb
dec
inc
sub
jnp
inc
mov
and
aam
lods
sbb
lret
aas
push
jmp
dec
shll
call
adc
inc
popa
scas
cmpsl
fidivrl
orl
jo
sbb
and
mov
mov
ss
or
sub
mov
enter
sarl
ret
sarb
jo
adc
or
inc
push
into
push
mov
xor
addr16
add
mov
mov
sub
insb
lcall
dec
adc
sub
or
decl
movsl
lea
je
pop
cmc
popf
ds
xchg
pop
mov
jbe
fcmovb
xor
jb
add
loope
mov
test
aas
inc
inc
adc
les
pop
mov
ss
jb
ret
aad
incl
adc
imul
jg
mov
rcrb
jecxz
and
mov
jl
jae
and
cli
mov
inc
data16
push
jne
xor
loope
ficompl
sub
fsubrs
cmpsb
push
cmp
fcompl
mov
jmp
push
ftst
pop
mov
xorb
or
lds
cmp
xlat
testb
nop
dec
popf
int
mov
aas
push
xchg
imul
inc
add
imul
mov
jg
jmp
cmp
repz
jl
push
mov
in
or
adc
push
mov
cmpsb
orl
les
or
out
ljmp
dec
loop
pop
mov
mov
xchg
sub
hlt
xorb
movsb
mov
dec
mov
push
int
fidivs
xchg
fstps
addr16
mov
cmovno
inc
push
lcall
jbe
lods
mov
jno
fildll
jnp
stos
int
cmp
subl
and
pop
ljmp
push
call
aad
int
xchg
mov
mov
lock
jg
popl
les
daa
adc
test
fcmovnb
subb
cmpsl
les
xor
fadds
dec
sbb
jle
fcmovnu
enter
mov
shl
mov
incb
xor
sub
inc
xor
lret
fmul
imul
les
leave
mov
scas
mov
and
ljmp
ja
xchg
sub
inc
pushf
cmp
orl
inc
icebp
xor
add
xlat
or
fstl
mov
fwait
aas
orb
test
push
dec
in
xchg
fdivr
inc
fiadds
test
sarb
and
aas
mov
xchg
sbb
sti
push
sahf
push
xchg
sub
shlb
mov
mull
cli
pop
sub
call
mov
or
cwtl
les
test
and
out
pop
inc
insb
lea
ds
add
scas
mov
cmp
xor
xor
xchg
dec
mov
stos
ss
orl
aas
clc
shll
or
dec
rolb
pop
or
xor
fidivs
fiaddl
adc
add
mov
out
cltd
das
mov
pusha
xchg
addr16
call
je
push
in
scas
aam
add
sbb
mov
repnz
xchg
xchg
fbstp
ja
xlat
test
test
push
mov
fstpl
bound
dec
imul
push
or
push
imul
or
sbb
nop
mov
add
arpl
aas
ljmp
pop
mov
scas
rolb
inc
cwtl
sar
arpl
cli
das
push
mov
push
push
aad
aad
test
xor
hlt
inc
adc
push
stos
aas
jmp
pop
xchg
cmc
jecxz
mov
pop
lret
add
inc
int3
jmp
sbb
in
push
cmp
mov
xor
and
sub
mov
shrl
aaa
jb
pop
ljmp
sub
jae
scas
aaa
and
imul
ds
dec
pop
mov
and
fs
mov
mov
addr16
cld
cwtl
add
sbb
aaa
inc
dec
mov
shl
gs
sub
mov
or
in
pop
in
inc
jns
xchg
int3
jno
mov
into
adc
sbb
lods
pop
adc
scas
xchg
or
cmpsl
pop
ljmp
stc
jmp
mov
xor
jo
push
cmpb
inc
in
mov
test
ds
std
jecxz
aam
xor
push
out
mov
call
jle
cmpsl
push
pop
mov
out
cmc
loopne
jae
outsl
stos
repz
mov
cmp
je
movsb
mov
cli
jecxz
mov
sbb
ret
outsl
ds
mov
mov
stc
aad
push
add
out
and
icebp
les
xor
push
fwait
pop
push
dec
mov
cmp
cmp
pop
icebp
jne
pop
es
xchg
sbb
fistpl
xchg
xchg
jns
cmpsl
xchg
inc
outsb
test
out
xchg
pop
mov
lea
cltd
or
adc
jo
stc
pop
jl
xor
test
push
mov
lock
sub
xor
and
jmp
sahf
mov
loop
in
sub
inc
out
push
inc
jl
cmp
mov
enter
xor
xor
in
aam
repz
repnz
iret
cli
outsl
sub
push
push
cmp
jbe
jge
mov
fsub
mov
leave
fsts
push
nop
mov
jl
or
cmc
lods
into
sub
sub
jl
push
std
ja
call
loope
mov
or
nop
out
push
xchg
es
xor
push
inc
movsl
sbb
mov
add
nop
lahf
popf
adc
sub
jmp
cmpsb
xor
mov
fldcw
jmp
cmp
push
cmp
mov
aas
int
sub
in
mov
in
cmpsb
out
insl
int3
pusha
and
or
push
fimull
pop
and
sbb
push
xor
cmp
daa
pop
mov
push
inc
sub
daa
and
ffreep
out
pop
mov
xor
sbb
test
inc
inc
mov
inc
sbb
cmp
jp
vmwrite
rolb
dec
data16
dec
out
ds
sub
mov
lcall
xchg
sbb
into
aam
sbb
mov
sbb
lret
lret
pop
cmp
pop
cwtl
loope
leave
rclb
clc
mov
rcll
and
mov
rcrb
and
pop
sbb
sar
jmp
hlt
cli
adc
mov
out
jge
int3
and
inc
and
mov
pop
ss
pop
bndstx
xor
ja
add
xor
pop
orb
cmp
fwait
pop
mov
xor
pop
test
cmpsb
jg
inc
fisttpl
sbb
or
aam
and
scas
mov
jnp
pop
dec
pop
jae
xchg
imulb
push
or
int3
mov
dec
jg
andl
or
mov
dec
int
mov
push
mov
ror
inc
adc
inc
or
les
icebp
jno
mov
inc
and
das
and
mov
and
or
adc
testb
scas
push
mov
rcrb
or
neg
jbe
es
and
cmp
sbbb
mov
pop
pop
shll
or
mov
in
xchg
pop
lahf
rcr
fstp
xor
mov
add
and
and
pop
xorb
pop
sbbb
inc
bound
jns
sarl
in
xchg
jl
movsb
out
mov
adc
push
aaa
js
add
cmc
ret
xor
test
gs
test
pop
outsl
push
das
push
divps
shrl
pop
in
bound
call
stos
sub
and
push
dec
je
jno
ret
lret
dec
jns
mov
out
cmp
fwait
dec
mov
adc
out
dec
dec
mov
sahf
and
ja
test
clc
or
jne
pop
mov
mov
stos
shr
gs
pop
icebp
mov
xchg
xor
aam
inc
push
scas
mov
repnz
jmp
dec
mov
jcxz
les
daa
cmc
pop
jl
pop
mov
pop
divb
or
lods
mov
sti
mov
pop
scas
test
cmp
fcomp
jge
sub
or
in
pop
mov
cwtl
repnz
and
rorb
mov
or
mov
stos
pop
pop
dec
repnz
fs
aas
dec
decl
cmp
mov
cwtl
sbb
scas
xor
int3
clc
sbb
mov
arpl
jae
sbb
push
out
pop
leave
roll
jg
lret
pop
out
push
jmp
in
mov
cwtl
cmpsb
jne
cltd
lods
mull
int3
in
dec
outsb
repz
pop
jne
popf
sbb
insl
push
xor
mov
rorl
sbb
pop
lcall
mov
sbb
hlt
pop
clc
pop
or
data16
mov
out
push
jbe
sub
and
subb
lds
cwtl
push
push
rclb
push
mov
xchg
xchg
or
mov
rcr
adc
or
pop
add
cmp
xor
fistps
jns
adc
mov
scas
enter
add
xchg
sub
jg
fisubl
jg
cmp
xchg
test
imul
xchg
das
ja
psrld
fmuls
or
pop
push
data16
push
inc
fwait
sbb
stos
push
mov
sbb
divb
outsb
adc
out
mov
add
mov
adc
xor
cmp
js
mov
cwtl
xchg
sub
test
lods
or
cmpsb
jne
sub
das
push
inc
sub
outsl
sahf
or
mov
inc
insl
mov
pusha
mov
xor
ficoml
loopne
inc
push
push
xor
mov
push
jmp
jne
sbb
mov
ja
fbstp
pop
jmp
or
xor
ljmp
loope
popa
jg
jae
cmc
mov
mov
fmull
mov
mov
movsl
jp
mov
ret
stos
out
repnz
mov
cmpsb
or
mov
push
mov
daa
test
ljmp
fildll
ffreep
mov
or
scas
sbb
sbb
leave
mov
gs
xchg
stc
std
lea
mov
loop
xor
and
or
ljmp
sarl
sbb
imul
mov
or
out
pop
mov
ret
xchg
int
xchg
fbstp
and
das
roll
dec
lret
dec
aam
mov
mov
stos
mov
dec
out
shrl
jns
cmpsb
decl
adc
std
jbe
and
push
fldenv
ret
adc
je
xchg
xchg
insb
or
gs
fucomi
and
mov
mov
shll
mov
mov
ja
fnstsw
xchg
cwtl
or
in
popf
cs
sbbb
or
mov
cld
cmp
mov
dec
mov
push
cmp
loop
mov
push
push
jae
mov
dec
arpl
pop
push
in
bt
out
push
push
xchg
lret
stc
xchg
push
cmc
pop
xor
jl
or
jmp
push
adc
fmul
cs
and
xchg
jmp
adc
fsubr
xor
test
sub
rcrl
in
cmp
pop
cmp
or
lret
cmp
loopne
movsl
mov
and
push
mov
stc
aad
pushf
sbb
or
fsts
xor
push
test
dec
adc
xor
lods
mov
or
pop
mov
arpl
imulb
jb
push
sub
lcall
adc
jo
dec
jne
je
lahf
cmp
inc
adc
bound
inc
adc
adc
dec
dec
mov
je
mov
mov
xor
cs
push
mov
sbb
int3
cmpsb
mov
cli
stc
das
push
push
cmp
mov
loope
and
fidivrl
xrelease
xor
scas
repz
mov
and
ror
movsb
ds
ret
and
rorl
ds
xchg
add
push
nop
lds
sub
xor
shl
popa
aaa
xor
jecxz
test
cmp
rcr
sahf
loop
popa
es
pop
sti
or
dec
cmpl
jge
pop
insl
xor
dec
xchg
gs
cmpsl
pop
sahf
fcoms
inc
ss
cmp
aad
lret
inc
add
jle
icebp
jno
dec
loopne
mov
mov
pop
pop
cmp
in
xchg
ja
push
sti
emms
aad
mov
mov
out
push
addr16
mov
mov
jns
testb
rep
in
xlat
dec
test
xor
cwtl
mov
cmp
stos
push
loope
cmp
shll
subl
ja
xchg
je
in
adc
fnstcw
shrb
xor
push
inc
xchg
ljmp
loopne
jmp
mov
mov
scas
in
lods
enter
out
xor
sbb
lea
pop
pop
adc
js
out
subl
push
dec
jl
cltd
pusha
mov
fimuls
pop
div
mov
jecxz
add
jbe
notb
mov
xchg
cwtl
mov
jle
mov
xchg
or
push
jne
or
fwait
mov
mov
inc
sub
sti
lds
das
add
fucom
xchg
pop
jb
cltd
xor
jg
adc
jmp
jae
enter
mov
xor
pause
jmp
out
enter
jno
fsubp
icebp
fisubrs
cmp
fisttpll
jl
adc
mov
sub
loope
lds
add
adc
jl
aaa
mov
mov
dec
inc
mov
dec
jne
jns
mov
data16
add
jae
in
jl
and
movsb
xchg
call
jnp
mov
cs
mov
mov
enter
lahf
jg
mov
mov
loope
sub
or
pop
or
pop
out
fstpt
sbb
mov
and
and
leave
gs
jle
es
lods
fs
fists
sub
es
xchg
mov
mov
push
icebp
xchg
pop
andl
xlat
imul
mov
dec
orl
xchg
imul
enter
jg
ror
cmc
adc
jnp
sahf
cmpsl
jo
ds
xor
arpl
popf
push
or
in
fstpl
loopne
xchg
or
and
mov
mov
lods
jbe
mov
jns
xchg
push
mov
pop
mov
fdivrl
and
shl
jae
out
push
sbb
jle
mov
inc
adc
cld
imull
mov
adc
mov
sub
push
shrl
mov
add
pop
ret
cmp
sub
scas
jbe
lds
or
in
mov
mov
push
push
into
sahf
mov
rcrb
adc
xor
scas
fildl
lock
push
and
inc
adc
pop
or
into
mov
jns
inc
fcomps
cmpb
jb
and
sub
and
sub
jmp
inc
adc
fcoms
mov
ja
sbb
jle
mov
cs
stos
ret
xchg
cwtl
jmp
sub
sub
in
mulb
jne
clc
dec
subl
sub
add
dec
lds
sarb
adc
sbb
mov
imul
out
sub
add
jl
outsl
insl
add
lret
or
cmp
scas
inc
xchg
int
push
sub
mov
loope
jge
mov
loope
lods
nop
jl
stc
cmp
icebp
pushaw
arpl
mov
cmp
inc
int
aas
gs
loope
shll
jbe
cs
sub
pop
inc
adc
imul
call
pop
popa
adc
cmp
fcomp
sbb
dec
insb
mov
scas
sbb
pop
es
push
adc
mov
xchg
or
mov
cmp
xchg
cmp
daa
nop
jno
push
int
dec
pop
jne
xchg
cmp
xor
and
addps
jae
bound
mov
pushf
cli
orl
gs
shlb
imul
mov
adc
inc
or
dec
loop
or
into
sub
mov
test
push
cs
mov
push
daa
push
into
jmp
lahf
xorb
subb
push
arpl
mov
sbb
lds
lahf
jo
and
insl
and
jo
mov
rolb
outsb
movsl
sub
add
mov
push
mov
mov
lahf
mov
push
xchg
sahf
dec
mov
lods
add
das
pop
jg
fisubs
icebp
enter
add
cmp
ljmp
andb
pop
mov
mov
mov
imulb
mov
push
scas
xlat
aaa
outsl
movsb
shrb
shlb
popa
loopne
pop
int3
cmp
xor
push
cmp
repz
mov
push
cmc
mov
in
inc
mov
xchg
ret
mov
adc
adc
mov
xchg
xor
shll
outsb
lcall
xchg
pop
jae
aam
loop
and
cmc
and
pop
cli
xlat
xor
bound
mov
push
sub
mov
xchg
call
ljmp
xor
bound
push
jle
add
outsb
loop
dec
or
mov
pop
cli
das
mov
jb,pt
jecxz
push
imul
in
jae
adc
or
cmp
cmp
xor
mov
or
testl
and
aaa
fcmovu
cli
dec
mov
inc
aad
in
scas
lds
daa
das
enter
mov
sbb
enter
pop
mov
push
mov
aas
mov
in
hlt
int3
jbe
push
test
inc
mov
test
fs
and
into
push
loopne
and
mov
out
testb
aas
adc
pop
incl
sbb
movsb
imulb
add
adc
pushf
pusha
imul
inc
lea
test
sub
fsubl
xchg
xor
xor
outsl
lods
push
idivb
fcmove
push
sahf
das
sti
xchg
enter
or
arpl
shl
lds
mov
add
xchg
mov
jne
cmp
decl
gs
jno
cwtl
inc
dec
dec
imul
addr16
xor
aas
push
push
inc
pop
fidivs
pop
idivl
lret
and
dec
fbstp
les
adc
iret
scas
inc
mov
push
clc
sbb
pop
jp
sarl
int3
es
sbb
cmp
sub
sbb
mov
jg
or
fidivs
andl
nop
jne
jle
xchg
mov
push
pop
cmpsl
lds
shrb
sub
jmp
adc
icebp
push
dec
dec
daa
or
call
cmp
adc
inc
jb
arpl
arpl
mov
rcr
int3
movsl
mov
shll
fs
loope
rcr
and
pop
sub
sarl
jnp
or
in
xor
jge
ljmp
fnstsw
pusha
cmp
arpl
xor
fcomip
jl
mov
push
pushf
pop
or
jmp
inc
adc
in
jp
mov
fcompl
pop
pop
pop
jb
sbb
bnd
test
add
xchg
je
sub
imul
push
imul
mov
fsubrl
push
cmp
mov
cmpsb
enter
in
mov
and
das
cli
das
ret
push
mov
mov
outsb
lahf
popa
stos
jge
cmp
mov
cmp
jg
push
xor
in
ss
mov
or
fwait
fstpt
in
jbe
insb
jne
ret
jnp
xchg
aaa
dec
dec
faddp
jmp
cmp
push
stos
add
jbe
jb
fstpl
jae
in
mov
insl
cmpsb
push
mov
sbb
stos
das
test
loop
jne
stos
pop
cmp
dec
pop
popf
addr16
adc
xlat
sbb
movsl
cmp
jae
sti
add
push
repnz
negb
sbb
jne
loopne
das
mov
push
ljmp
jnp
scas
pop
lret
rorl
fyl2xp1
repnz
negb
mov
pop
outsb
pushf
leave
subb
mov
sub
mov
fadds
aas
dec
test
int
sub
ret
popa
jo
xchg
imul
xchg
mov
sub
push
imul
leave
adc
data16
mov
fucomp
lock
and
pushf
ror
sar
mov
dec
xlat
fisttpll
jmp
addr16
jno
xor
jg
pop
lret
sbb
lret
jns
mov
jnp
mov
fdivr
pop
fwait
insb
in
cwtl
shrb
xor
jo
cmp
push
mov
mov
fdivrl
movsl
test
hlt
roll
sbb
fcompp
je
inc
mov
adc
rcrl
cwtl
lea
mov
mov
mov
dec
mov
lock
lret
jns
aam
cmp
cmc
popa
mov
or
aas
lret
imul
in
cli
xchg
or
mov
outsl
fdivl
cmp
ret
pop
adc
push
jle
push
test
xor
imul
imul
repnz
hlt
fcoml
loopne
mov
push
mov
ror
mov
inc
xlat
mov
sbb
insb
add
fidivs
xor
lret
xor
test
push
jle
pop
pop
push
outsb
jmp
xlat
div
mul
xor
fnstsw
mov
inc
adc
push
dec
jle
cmp
or
cmp
leave
sbb
inc
pop
jo
and
jns
and
cmp
cmp
cs
stos
mov
gs
stc
test
call
sbb
mov
and
gs
rcrl
test
gs
inc
lods
pop
daa
add
jmp
dec
pushl
mov
jp
inc
in
or
cltd
add
pop
inc
fldenv
js
iret
stc
jb
and
fcmovne
adc
dec
outsb
outsl
add
mov
das
or
inc
jmp
fnstcw
js
or
iret
jecxz
adc
xor
mov
mov
movl
sub
push
mov
out
outsb
movsb
xor
in
mov
into
ss
xchg
push
sub
jmp
vmwrite
lods
jbe
sti
fcmove
sbb
arpl
sbb
mov
arpl
cltd
stos
xlat
sub
mov
mov
cli
push
adc
mov
jnp
cmp
adc
loop
and
pop
or
test
lods
out
shl
bound
mov
mov
pop
jge
sbb
pop
adc
xlat
cmp
clc
xchg
mov
stos
inc
insl
add
fcmovnu
mov
and
cld
push
adc
jmp
dec
jnp
adc
xchg
sbb
push
mov
aaa
push
xchg
inc
ret
and
add
dec
adc
dec
sbb
xchg
int3
adc
mov
mov
mov
cltd
js
pop
jb
jg
cmpsl
inc
scas
stos
invd
jle
addl
sbb
jne
or
mov
xchg
xor
dec
jae
push
imulb
mov
push
mov
adc
stc
mov
test
stc
mov
scas
aaa
sub
and
les
xchg
sub
ficoml
arpl
in
cmp
jecxz
movsl
out
fdivrs
sbb
and
sub
jbe
mov
xchg
shlb
inc
pop
pop
cmp
es
inc
dec
jnp
jne
stos
ja
sahf
xchg
mov
mov
pop
pop
xor
sbb
mov
enter
out
pop
negb
fbld
sahf
hlt
push
cmp
xor
lret
mov
xor
lcall
stos
pop
or
mov
jae
add
push
imul
sbb
cmp
roll
mov
les
dec
sub
xchg
mov
xor
pop
lcall
pmulhuw
addl
fcmovu
scas
rorb
xchg
loopne
cwtl
mov
int
cmp
outsb
adc
xchg
or
push
push
arpl
scas
bound
add
outsl
lods
hlt
enter
pop
inc
adc
fidivs
cmc
inc
mov
and
jp
shrl
out
xor
cmpl
in
lods
mov
jae
dec
pop
pop
mov
std
into
aaa
jle
push
push
dec
lret
jno
stos
fcomi
xor
outsb
and
jl
in
xchg
jmp
inc
call
fucomi
or
and
call
mov
mov
mov
dec
and
nop
fildll
pop
mov
out
test
lods
push
dec
xchg
pop
mov
dec
in
or
jmp
add
xor
loopne
iret
into
sbb
stos
rorb
push
bound
shll
inc
mov
cmp
popa
shlb
xor
jns
mov
or
imul
cld
out
test
mov
cmp
jo
imul
fmuls
addl
or
push
negl
mov
cmp
aaa
lahf
xor
pushf
test
test
stos
dec
es
cmc
mov
jmp
dec
cmp
in
int
jle
xor
into
mov
jbe
imul
gs
stos
pusha
cld
out
ss
adc
cmp
bound
outsl
mov
cld
mov
gs
or
sbb
out
mov
pop
inc
outsl
jo
call
insl
sbb
in
daa
cwtl
jmp
cld
sbb
dec
or
out
mov
mov
add
lods
mov
stos
push
repz
rorb
jecxz
mov
movsb
pop
fdivs
fiadds
jnp
and
or
mov
jbe
popa
add
inc
jns
int
mov
mov
xchg
mov
cs
fsubrs
mov
xlat
call
loop
jg
sti
pop
mov
add
xor
pop
in
lcall
jl
sub
inc
data16
cmp
mov
pop
scas
and
nop
das
dec
xchg
mov
adc
popf
or
jle
pushf
xor
dec
fwait
nop
fsubs
lock
fisubrs
test
push
jnp
pusha
push
pop
jnp
or
mov
in
sbb
outsl
rep
int
xchg
imul
dec
rorl
pusha
std
adc
cmpsl
cmp
scas
ja
lfs
jmp
es
rcll
pushf
mov
lret
scas
mov
int
xor
fwait
test
push
jmp
in
data16
pop
sbb
xor
cmp
mov
push
inc
into
xchg
outsb
jmp
adc
xlat
movsb
aad
and
jns
adcb
fwait
pusha
ret
clc
shll
add
inc
out
cmpsl
push
in
jle
stos
cs
shlb
out
push
popf
out
cmc
xor
jne
shrb
sub
cwtl
push
sbb
push
pop
mov
fs
into
push
nop
adc
aas
sub
stc
in
pop
xor
cmpl
mov
and
sbb
das
int3
pusha
push
in
testl
fisttps
movsb
or
dec
decb
bswap
mov
test
mov
inc
pop
int3
and
cmpsb
add
cs
stc
shll
fs
pushf
cmc
mov
sbb
gs
push
and
cmp
outsb
dec
stc
test
arpl
push
mov
enter
addr16
aas
push
mov
sub
sarl
jmp
mov
mov
hlt
push
push
lock
mov
jmp
push
insl
pop
call
dec
cltd
jmp
mov
mov
pop
les
leave
fistps
ljmp
imul
imul
into
cltd
popa
cmc
pop
xor
push
inc
dec
push
and
mov
mov
insl
ret
sbb
shl
xchg
pop
scas
xchg
sub
mov
cmpsb
clc
push
sarl
jg
inc
mov
call
push
pop
dec
and
cmp
dec
dec
push
mov
loopne
mov
push
aaa
xchg
ljmp
and
test
movsl
mov
xor
ss
lcall
push
ss
lcall
test
jg
jl
sub
movsl
and
out
aam
std
sbb
jo
fistl
pop
mov
inc
sub
lds
iret
fisttpll
mov
data16
cltd
aas
testb
push
imul
sub
ss
nop
pop
mov
movsl
jbe
and
cltd
imul
int
sub
fwait
xor
fcom
push
ret
imul
int3
ljmp
xor
add
fnstsw
xor
adc
test
daa
stc
jnp
push
push
mov
xchg
aas
shll
enter
fs
jl
xor
sti
scas
mov
lods
scas
leave
popl
pop
ja
add
jg
fbld
rolb
jb
cli
cmp
mov
sub
lea
pop
push
sub
inc
jne
in
jmp
jb
inc
sub
lock
inc
out
xchg
jl
icebp
notb
jg
ret
or
ret
add
sbbl
fsts
pop
mov
adc
sbb
or
fcoml
into
cld
mov
mov
jge
jnp
cmp
daa
jmp
scas
loop
push
sarl
in
or
push
pop
push
jae
jno
and
je
std
insl
xchg
sub
cmc
mov
lret
out
bound
inc
xchg
jbe
xchg
cmp
mov
movsb
mov
roll
mov
cmpsl
sti
xlat
call
add
test
bound
xor
pop
and
addr16
stos
lods
jmp
cmc
out
adc
aaa
push
bound
sbbl
into
adc
fnsave
sbb
dec
lock
cld
loopne
ljmp
mov
or
pop
mov
bnd
jecxz
movsl
and
adc
hlt
jg
stos
jne
push
bound
add
inc
into
mov
or
cld
pop
stos
push
mov
and
pop
mov
outsl
push
sub
cltd
lret
push
mov
push
ret
mov
andl
mov
inc
int
aam
push
fsubrl
ljmp
xor
lret
jns
test
jle
xor
std
adc
mov
test
jo
mov
push
xor
ret
pop
push
aaa
sbb
outsb
ljmp
jne
sbb
pop
xchg
outsl
dec
mov
mov
pop
push
test
mov
fmuls
in
dec
xor
cmc
mov
push
pop
and
fnstsw
pop
xchg
inc
push
dec
aas
pop
ja
lods
sub
push
jno
push
hlt
mov
and
push
lahf
or
out
jle
popa
andl
xor
jecxz
lods
mov
jns
or
xor
mov
mov
pop
test
fcomip
and
cmc
sub
mov
addr16
sbb
cmovs
dec
rcll
rorb
inc
loop
push
lods
mov
rolb
jecxz
cmp
stc
ja
dec
cmpsb
out
in
out
dec
fistpl
sbbb
push
xchg
xor
in
loop
addl
mov
aam
mov
push
loope
jns
bts
push
push
pop
enter
imulb
sbb
cmpsl
mov
jge
cmpsl
cltd
or
dec
sarl
out
mov
add
push
flds
jle
cld
or
or
mov
adc
inc
jo
frstor
add
cld
push
push
pop
mov
lods
sbb
out
insl
mov
xor
cmp
xchg
mov
pop
mov
pushf
mov
sbb
fldenv
sbb
cwtl
orl
popf
hlt
adc
inc
cli
aaa
adc
in
lods
cs
jns
fcoml
out
mov
inc
insl
push
jmp
xor
lea
and
jne
mov
xchg
xchg
pusha
ss
and
bound
push
push
cmp
imull
outsl
enter
xchg
jg
rcr
and
nop
mov
pop
mov
pop
xchg
sbb
sub
insl
movl
out
dec
xchg
outsl
inc
arpl
pusha
lcall
inc
pop
aaa
in
jecxz
mov
adc
int3
cmc
pusha
inc
adc
cmp
aam
push
aas
pop
push
cwtl
mov
pop
js
xlat
sub
add
lret
pop
push
push
jle
dec
inc
idivb
fnstenv
mov
pop
pop
add
in
pop
mov
xchg
xor
cmp
in
mov
jno
adc
lock
push
std
sub
in
adc
jmp
mov
pop
push
pop
jl
dec
jb
call
jmp
mov
ss
test
stc
cld
xlat
inc
lea
sahf
out
xor
inc
cld
mov
ljmp
sbb
cwtl
cmp
loope
mov
xchg
outsb
pop
push
sahf
push
movsl
mov
mov
arpl
cltd
jae
jp
in
ret
jbe
push
int
in
sti
fmul
xor
scas
jo
sbb
jb
adc
push
cmpsb
mov
inc
cld
mov
test
aaa
test
test
push
shlb
movsl
inc
inc
sub
jns
js
cmpsb
pop
aam
orl
arpl
int
aas
cmpsl
xchg
push
inc
int
sbb
loope
pop
inc
mov
test
cmp
out
ret
mov
repnz
pop
xchg
or
cmpsl
rcl
mov
and
pop
rclb
outsb
and
dec
xchg
inc
push
cwtl
adc
push
pusha
pop
lock
jmp
mov
inc
cs
jae
fsubrp
rorl
pushf
fwait
and
hlt
sub
scas
aad
ret
fwait
or
cmp
mov
dec
daa
aad
xchg
test
adc
aaa
push
insl
mov
out
insb
fbstp
or
mov
dec
adc
pop
ds
nop
sbb
adc
test
push
mov
mov
int
mov
mov
cmpsl
sub
out
pop
test
cmpsb
push
gs
cld
fnstsw
push
sbbl
mov
and
mov
and
xor
mov
mov
jno
or
subl
fstps
xchg
pusha
inc
inc
nop
cmp
arpl
lahf
push
outsl
inc
mov
sub
cmp
in
ds
pop
cmpsb
cmpsb
inc
ds
lret
pop
push
xchg
xchg
cmp
ss
mov
push
inc
int3
outsl
jle
xor
mov
add
pop
sahf
inc
fcomps
pusha
pop
mov
cmpb
cmp
xchg
shrl
mov
les
movsl
testl
xchg
out
aaa
arpl
mov
sub
sub
jmp
adc
cli
push
cmpsb
repz
push
repz
pop
mov
pop
inc
daa
leave
clc
fsubs
adc
mov
jno
xchg
adc
sbb
or
adc
sub
xchg
xchg
ret
jnp
jbe
mov
or
xor
scas
aaa
pop
xor
or
bound
cwtl
cmp
call
and
jbe
xchg
rcrb
sbb
call
inc
jg
jmp
push
cmp
push
imul
push
mov
dec
jmp
sub
lods
pop
mov
hlt
div
mov
lcall
cmpsl
ja
aaa
int3
loop
inc
int
adc
clc
popf
enter
xor
inc
mov
pop
addr16
fiadds
xchg
xlat
mov
imul
push
pop
test
add
aaa
daa
fisubrl
lret
data16
cmp
cmp
push
addr16
or
iret
adcb
sahf
pop
cwtl
xchg
ret
inc
lea
movsl
pop
cmp
mov
jp
jmp
shlb
lock
pop
outsl
add
push
sub
jecxz
out
insb
les
xor
dec
aam
cli
push
scas
dec
popf
pop
and
insl
divb
stos
cmc
dec
test
mov
imul
enter
es
in
mov
cltd
js
adc
in
mov
mov
in
jle
sub
imul
add
push
in
daa
lcall
sub
js
inc
xlat
addr16
jle
iret
test
cwtl
cmpsl
fcoms
insl
jbe
in
int3
test
sbb
inc
lahf
pop
xchg
test
aaa
and
pop
call
sbb
push
in
sahf
cltd
adc
nop
cmp
in
loop
in
mov
push
or
mov
fld
les
xchg
cmp
jne
lcall
cltd
mov
pop
jp
test
push
loope
cmp
sbb
in
lcall
insl
push
shll
sbbb
leave
xchg
jp
popf
mov
hlt
in
out
xor
xchg
push
sbb
ret
arpl
hlt
or
add
sti
rcrb
cwtl
orb
push
mulb
jns
std
rorb
xor
mov
clc
or
jns
leave
cmp
xchg
nop
add
adc
js
sbb
xchg
testl
xchg
orb
xor
cmp
push
push
negl
and
inc
jno
jle
lret
cmp
xchg
mov
movsl
xlat
push
addr16
cmpsb
imul
jl
movsb
test
stc
loope
cmp
mov
and
mov
imul
test
or
cmpsl
add
cmp
popa
mov
cmc
pop
pop
movsl
in
enter
mov
lods
dec
lods
idivb
std
subb
jmp
aas
dec
push
xor
jbe
ret
mov
lods
sub
stos
sub
sub
es
dec
xor
outsl
stos
in
cltd
jge
mov
mov
adc
hlt
imul
xor
fdivl
int
lret
lahf
hlt
xor
cmpb
sbb
sbb
popf
sub
pop
sbb
jmp
and
mov
or
in
fbld
gs
mov
loopne
gs
test
push
dec
push
ret
js
and
mov
pushf
sbbl
push
cmpl
pop
xor
or
in
and
movsl
mul
mov
mov
mov
fldcw
cwtd
cmp
shrl
inc
imul
cmpsb
movsl
sbb
inc
and
subl
es
cmp
push
xchg
or
inc
and
loop
dec
loopne
adc
xchg
cmp
push
add
mov
cmp
jne
adc
out
stc
inc
mov
dec
enter
int
dec
inc
mov
hlt
adc
or
mov
loopne
jp
mov
leave
push
icebp
add
mov
push
jae
cmp
jo
mov
int
loope
sub
loope
xor
fisttpll
sti
mov
sahf
stos
jne
lret
loope
push
xor
sti
repz
mov
add
jle
lret
xor
test
icebp
mov
xchg
and
cli
push
pop
mov
test
lock
mov
jbe
mov
and
mov
pop
scas
mov
adc
movsb
enter
and
add
fsubr
out
out
jnp
loope
inc
ljmp
sub
xchg
sub
lret
sbb
pop
and
mov
ret
dec
shlb
push
mov
lahf
ss
out
mov
into
mov
dec
rcl
dec
pop
adc
add
sbb
adc
mov
or
mov
adc
test
push
push
or
lcall
mov
lret
xchg
ljmp
or
dec
jg
mul
mov
sbb
fmull
xchg
lock
mov
ret
les
jne
mov
ret
sub
cmp
push
enter
scas
movb
nop
icebp
push
adc
je
cmp
outsl
dec
sub
int
dec
fucomp
xchg
xchg
mov
sub
shrl
pop
outsb
je
sbb
push
pop
popf
push
in
adc
cmp
mov
movsl
pop
stos
mov
xor
das
xchg
lods
mov
mov
sahf
les
pop
cmp
or
xor
jnp
jno
xor
in
pop
push
sub
xor
ret
out
enter
mov
lahf
cmp
dec
inc
dec
addr16
enter
scas
adc
pop
jmp
pushf
mov
into
out
test
in
std
fisttpl
shr
fnstcw
clc
push
pop
pop
out
dec
lcall
push
add
jns
hlt
and
push
mov
xor
xor
lock
ficompl
xchg
inc
lods
mov
mov
dec
fcmovnb
dec
push
inc
xchg
subb
push
jb
push
cmpsb
push
cmp
push
out
add
and
push
pop
mov
int
aaa
loopne
add
ljmp
cmpsb
out
dec
mov
push
arpl
ss
rcll
sbb
lret
cltd
mov
test
nop
cmpsl
inc
lds
mov
jbe
push
cltd
cld
cmp
mov
les
inc
sub
fidivs
jg
aas
in
xchg
mul
jae
daa
in
test
jns
mov
mov
loope
popa
scas
xchg
sub
mov
pop
out
in
lahf
in
pop
ljmp
pop
hlt
repz
stos
enter
sar
mov
sbb
loopne
or
pusha
sub
xor
test
add
adc
les
test
xor
or
sub
xor
or
or
sti
add
xor
in
add
mov
repz
cmpsb
mov
loop
xchg
fnstenv
mov
imul
mov
scas
jnp
xorl
or
aaa
je
leave
xor
push
rorl
and
stc
mov
mov
inc
aas
fildl
sahf
mov
fadds
in
add
adc
xor
je
xchg
fnstenv
out
aas
xchg
addr16
shlb
test
outsb
vorps
mov
xor
pop
shrl
pop
push
inc
xchg
pop
out
mov
lea
pusha
jno
inc
cmp
and
pop
and
inc
pop
test
negl
add
lods
aam
or
pop
aas
lods
pop
pop
das
and
scas
arpl
and
mov
out
inc
lods
pop
cld
fadds
fiaddl
fwait
jbe
addr16
fs
repz
add
xchg
aas
test
xor
mov
pop
fcomp
fstl
jae
push
mov
out
stos
cmp
jnp
rorl
aad
jecxz
ret
dec
decb
and
scas
andl
xorb
in
xchg
out
cmpl
xor
hlt
sub
lds
push
mov
enter
jae
dec
les
testb
jecxz
js
mov
or
dec
std
cmc
mov
test
insb
sub
stc
mov
pop
out
jno
xchg
cmpsb
jno
sti
hlt
jp
xchg
aam
add
jmp
ret
xchg
imul
push
cmp
imul
mov
lods
xchg
movsl
push
cs
inc
outsb
in
add
mov
fisubrl
mov
mov
pop
test
pop
pop
pop
mov
mov
adc
sub
aaa
stc
ljmp
inc
add
sbb
jg
mov
mov
ja
xchg
push
jg
pop
gs
stos
dec
adc
xor
clc
sti
lods
icebp
mov
jp
sbb
jns
out
call
or
je
xchg
movsl
movsl
lock
dec
insb
shll
imul
inc
mov
loopne
mov
rcrl
and
pop
pop
sbb
mov
jmp
push
mov
jl
mov
iret
enter
xchg
lods
xchg
stos
push
es
add
das
fdivrs
push
or
ljmp
outsl
fstl
loopne
pushf
cmc
inc
mov
mov
cwtl
mov
popa
cmp
repnz
dec
rorb
xchg
sbb
sub
lret
or
nop
push
rorl
int3
cmc
je
fsubrl
loopne
adc
sub
incl
cmpsb
push
inc
and
shr
push
or
xchg
or
test
mov
enter
add
int3
aas
je
sti
xor
push
insl
jecxz
in
xor
or
dec
fs
jp
movl
fisubrs
xchg
mov
mov
mov
subl
xchg
jmp
std
mov
fisttps
addr16
fisubs
lea
pop
xor
inc
fs
fmull
shl
or
aam
xor
push
or
jg
xor
pushf
xchg
mov
pop
fstpl
cmp
call
ret
pushf
ljmp
mov
addr16
or
loopne
jbe
daa
test
repnz
pop
enter
ret
ret
rcrb
shlb
dec
out
gs
jns
in
cmp
in
push
popa
cld
orl
push
cvtdq2ps
hlt
in
xor
jne
test
aas
and
pop
ret
fdiv
and
cmp
mov
or
xchg
ret
dec
test
adc
xchg
mov
pusha
shl
sub
lds
mov
xchg
add
xor
adc
lods
jge
sub
es
xor
ja
ljmp
insl
icebp
xor
shr
xchg
fsubl
repz
imul
pop
sub
out
dec
mov
js
dec
inc
stc
sbb
cli
pushf
fcmovu
push
lock
adc
xchg
mov
cld
in
in
mov
aad
lods
push
jne
cli
insb
loopne
pop
mov
lret
in
jbe
movsb
xlat
rcr
and
loope
in
add
imul
nop
filds
sbb
cltd
adc
mov
push
mov
jns
pushf
add
jecxz
xorl
cmp
fwait
jmp
push
rcrb
lret
test
test
adc
jns
cmp
les
call
xchg
push
jp
jl
insl
inc
adcl
call
sub
or
clc
pop
or
out
sbb
icebp
outsl
inc
rorl
test
mov
push
loope
popa
mov
sbb
sbb
std
test
ss
int3
les
loop
xchg
push
rcll
repnz
leave
inc
xor
mov
jl
mov
lods
lods
shl
push
push
js
lret
mov
cli
mov
or
sub
mov
lock
jge
repz
rcr
stos
sti
lods
out
mov
jge
mov
xor
sub
shlb
inc
addl
pop
or
addr16
xor
rclb
lahf
loope
or
cli
fdivr
push
jmp
jmp
nop
sub
pop
shr
xchg
jae
enter
pushf
or
aaa
js
fsubrp
mov
aas
dec
add
mov
stos
movsb
inc
adc
js
sbb
xchg
jecxz
ja
push
push
and
xchg
clc
jbe
jo
sti
in
leave
fmul
shll
mov
mov
shlb
in
or
loopne
jle
ror
test
mov
pushf
push
adcl
fs
cmp
rcrb
imul
sahf
loope
and
addr16
cmc
add
negl
push
or
aad
push
cmc
add
fcmovnb
xor
insl
inc
mov
or
es
jns
xchg
push
addr16
and
cwtl
cld
sub
ds
leave
pop
cwtl
ja
pop
daa
ret
push
mov
adc
fildl
into
adc
xchg
sbb
lea
xchg
push
incb
jl
cmp
xor
jbe
jb
orl
subl
sub
inc
sub
out
pop
mov
test
sti
cli
scas
das
cli
fmull
mov
lods
jge
rorl
and
outsb
lods
repnz
cmpsb
xchg
nop
cmpsl
dec
stc
pop
into
cmp
out
jle
daa
sbb
imul
cltd
out
push
out
lods
pop
xchg
idivb
rorl
lods
int
js
mov
xlat
xchg
test
clc
push
mov
lret
mov
insl
lcall
add
sti
add
sbbw
arpl
ss
and
and
inc
sti
aam
and
shll
mov
inc
sub
pop
mov
lcall
gs
mov
cltd
jno
in
mov
ret
sub
xor
sub
shl
imull
pop
sbb
xchg
xor
rcrb
cmp
roll
xchg
fisttps
or
push
arpl
lret
mov
push
out
mov
shrl
in
sbb
add
sbb
aas
add
lahf
lret
rcll
xor
sub
sbb
cmp
dec
addr16
lret
mov
loope
adc
sbbl
or
jp
das
pop
xor
inc
push
push
cmp
shlb
cmpsl
cmp
jge
movl
outsl
jle
cmp
xchg
mov
movsl
mov
push
add
mov
cmpsb
addb
inc
and
jp
sarl
mov
adc
mov
mov
adc
movsb
movsb
fnop
jge
push
stos
push
sub
jnp
sbb
jecxz
addr16
sti
lock
jbe
mov
lea
jle
lods
mov
mov
fildl
dec
sub
inc
data16
aam
mov
cmp
mov
gs
sub
jo
repz
std
sub
jge
push
subl
and
aaa
xorl
aam
hlt
sub
fstl
scas
fdivl
js
inc
scas
iret
push
dec
inc
pushf
les
cmp
popf
xor
and
inc
or
aas
fildll
add
and
adc
rcll
cmp
pop
cmp
mov
jno
cltd
ja
adc
push
add
in
movsb
mov
sti
mov
mov
dec
fs
dec
scas
mov
mov
shll
mov
aaa
jecxz
mov
rcll
sub
pop
les
jle
rclb
sub
inc
add
call
sub
adc
rclb
aam
repnz
orl
cwtl
daa
outsb
mov
xor
aam
leave
in
dec
scas
repz
test
mov
in
inc
icebp
fcmovne
mov
dec
sbb
scas
loopne
sub
subb
xchg
outsl
and
push
test
ljmp
fcmovb
fstps
in
mov
xchg
push
push
jno
pushf
pop
cli
cmp
inc
dec
orl
pop
jb
in
pusha
adc
lret
testl
scas
lret
dec
std
pop
mov
mov
xor
adc
pop
lock
add
mov
rorl
ret
jle
dec
cli
pop
cmpsl
std
mov
in
xchg
mov
jge
daa
ret
test
in
lcall
inc
loope
xchg
int
pushf
sti
lods
cmp
dec
fldt
cs
je
mov
int3
sbb
push
pop
data16
int3
loope
es
rcrl
stos
fnstenv
add
push
sbb
lods
sti
cmpsl
imul
pop
movsl
jecxz
lret
test
pop
shlb
cmp
adc
and
xchg
sub
test
adc
pop
cmp
and
mov
sti
jmp
icebp
lret
mov
mov
call
out
pop
ja
mov
repz
jl
push
mov
push
loop
cmp
in
mov
das
xchg
inc
pop
push
popf
ja
fsubl
inc
rorl
mov
lahf
popf
repnz
sub
lods
cltd
and
cmp
xor
sub
hlt
sbb
jb
dec
xlat
adc
sbb
loope
jno
adc
aaa
pop
mov
stc
nop
or
push
or
scas
icebp
inc
mov
repz
ret
inc
lods
out
movsb
test
pop
roll
mov
cli
cld
or
insb
into
pop
xor
negl
out
xor
ret
rcr
add
call
and
cmp
test
test
stos
mov
xchg
lods
sarl
popa
pop
lods
inc
or
aaa
aas
int
lds
fstpt
or
and
shll
or
push
cli
sub
mov
lahf
test
fisubl
ret
xchg
repz
nop
push
sbb
sahf
sub
les
mov
mov
xchg
dec
jae
in
arpl
mov
sub
xchg
lods
mov
xchg
pushf
insb
fistl
xchg
dec
and
push
fimuls
cmpsb
xchg
push
mov
cwtl
cmp
mov
lods
dec
sub
push
pop
test
xchg
pop
shll
pusha
xchg
test
pushf
rep
call
repz
add
sub
inc
insb
mov
test
std
adc
xor
iret
imul
cli
scas
hlt
fmull
inc
mov
sbb
and
repz
inc
or
mov
divb
sub
stc
cmpsb
sub
push
sbb
xchg
push
adc
push
xlat
pop
pop
dec
pushf
out
outsb
test
mov
cmp
mov
inc
dec
ja
rorl
push
repnz
sti
add
add
iret
mov
nop
or
movsl
adc
loop
sti
xchg
and
push
jle
pop
mov
mov
cwtl
mov
or
hlt
mov
lods
xchg
int3
mov
pop
sbb
pusha
mov
outsl
sbb
xchg
movsl
hlt
cmp
add
sub
xor
loope
mov
fldcw
scas
mov
jo
inc
adc
inc
or
je
and
sbb
dec
inc
cmp
les
xchg
push
xor
jno
lds
das
mov
leave
rol
sar
xor
pop
add
movsb
cld
push
js
jl
aaa
aaa
ds
les
jle
sahf
pop
fisubrl
popa
lahf
jle
adc
leave
gs
cmpsl
adc
mov
mov
mov
call
inc
decb
movsl
out
lcall
lea
push
jnp
push
imul
test
cmp
mov
mov
cli
shl
aad
fnsave
xchg
mov
push
in
int
stc
sub
fistl
cli
fcompl
and
pop
les
or
lea
enter
scas
cmp
mov
out
ret
sbb
xor
add
int3
adc
pop
mov
mov
decb
add
in
nop
pusha
scas
out
shlb
sub
or
dec
in
xor
cli
add
pop
ret
popf
dec
sbb
push
roll
mov
fdivr
push
sub
mov
insb
xor
push
je
leave
and
inc
push
icebp
inc
es
xchg
mov
inc
jae
push
and
out
pop
push
enter
inc
lods
decb
stos
flds
fwait
insb
scas
rcrl
imul
mov
fildll
push
lods
cmp
sbb
mov
adc
push
or
int3
flds
lahf
cli
cwtl
mov
outsb
stos
push
xor
ficoml
sbb
lret
inc
daa
and
dec
adc
jbe
aaa
pop
mov
pushf
inc
push
push
or
test
sahf
add
pop
mov
push
xchg
or
loop,pn
mov
cs
sbb
bound
mov
pop
loopne
jno,pn
xchg
call
push
sub
js
adc
pop
and
jg
sub
test
mov
shr
lock
je
jns
cltd
add
add
jno
ss
mov
mov
dec
daa
or
mov
adc
pop
cmpsb
dec
fwait
xor
int3
and
ret
push
or
testl
addb
push
mov
adc
xchg
ja
or
sbb
add
pop
pop
jae
pop
inc
add
sbb
push
aas
pushf
data16
mulb
push
nop
loop
and
les
scas
inc
test
loopne
fsts
int
push
out
andl
pushf
dec
std
bound
stos
adc
dec
mov
sahf
enter
jb
mov
rol
out
in
mov
fstl
mov
jnp
xor
dec
mov
mov
enter
sub
rol
push
ss
ds
jmp
dec
int
or
insl
imul
xor
xor
push
aas
stc
mov
sahf
or
sarb
data16
xchg
pop
lret
hlt
xchg
xchg
shl
adc
and
bound
ljmp
test
or
rcrl
jo
dec
mov
cmp
dec
lcall
adc
mov
jne
adc
add
jne
stos
mov
daa
xor
in
stos
push
ds
cmovno
xor
push
daa
daa
aam
xor
sti
adc
pop
or
pop
in
bound
and
aam
out
cltd
dec
or
int
inc
les
cwtl
push
jnp
mov
cmp
mov
push
xor
xor
into
mov
lods
mov
jae
add
xlat
jne
out
jae
das
cmp
imul
cmpsl
int
xchg
pop
mov
mov
inc
or
cmp
outsb
jle
xchg
into
mov
mov
push
and
push
push
push
cmp
dec
addl
mov
out
jp
xchg
jp
cmp
jne
notb
stos
fisttpll
mov
xor
pop
loop
aaa
shrl
enter
mulb
fisubrl
xor
cld
adc
mov
enter
dec
adc
lds
pop
dec
shll
push
je
lods
inc
push
and
ret
test
sbb
arpl
adc
jl
repnz
and
fistpl
outsl
mov
call
pop
jp
js
cmpsl
xlat
cmp
les
outsl
jne
fimull
dec
lahf
mov
decl
mov
lahf
jns
inc
clc
inc
jne
testl
aaa
inc
leave
lahf
mov
fisubl
lcall
test
aaa
hlt
mov
int
test
inc
mov
push
jp
clc
into
enter
push
xchg
push
mov
cld
jbe
hlt
xchg
ss
cmp
push
out
shrb
pop
movsl
jle
test
std
cltd
stos
fisubl
cli
movsb
mov
fwait
add
daa
pushf
xchg
add
adc
xor
push
pop
add
push
fstpt
das
movl
xchg
enter
and
push
or
dec
repnz
aaa
jnp
cmc
mov
and
xchg
pusha
mov
fists
stos
add
xor
test
adc
mov
int3
pop
insl
mov
push
jl
cld
adc
sahf
sub
xchg
mov
cmp
mov
add
mov
ja
in
pop
ja
xor
das
sahf
sub
scas
mov
xchg
mov
dec
jno
call
xchg
aad
cs
pushf
jnp
dec
xchg
push
xor
mov
add
stos
xchg
lods
enter
dec
scas
iret
into
ret
cmp
inc
mov
adc
test
mov
out
repnz
lret
fistps
rclb
int3
inc
push
repnz
gs
sahf
lahf
imul
mov
pop
push
les
push
popf
cli
data16
xor
jns
ds
nop
pop
xor
mov
dec
sub
clc
xor
int
xchg
cli
filds
test
add
sti
push
test
mov
sub
ret
lret
pop
es
test
icebp
cwtl
in
and
sub
mov
aam
cltd
jecxz
int
lock
dec
push
ret
pop
dec
mov
cs
or
inc
fsubs
and
or
xchg
jmpw
xor
loop
shlb
lea
mov
jle
jp
sub
sub
cmp
sbb
add
fcmovnu
out
aaa
test
dec
sbb
lcall
add
sti
push
push
fcoml
jb
scas
mov
and
dec
ficoms
adc
movsb
adc
mov
xchg
es
xchg
xchg
jge
push
lahf
and
popa
cmp
xchg
inc
xchg
mov
into
xor
lock
sbb
les
dec
dec
or
jno
movsl
push
test
repnz
andb
or
xor
xlat
dec
mov
xor
add
mov
clc
push
cltd
jecxz
ds
sbb
inc
pop
ljmp
pop
xchg
mov
mov
mov
into
dec
test
scas
inc
mov
xor
in
or
or
dec
inc
push
sbb
roll
xchg
test
sub
daa
cmp
mov
outsl
insl
pop
pusha
jo
outsl
cmpsl
fwait
lock
subb
sub
mov
sbb
push
iret
inc
pop
insb
xchg
jno
xorl
pop
adc
dec
mov
xchg
iret
and
mov
adc
inc
mov
in
mov
movsl
mov
sub
sbbl
inc
push
adc
enter
mov
push
sbb
add
or
lea
xchg
sti
xor
lret
sbb
pop
or
inc
push
xor
lods
cwtl
mov
std
sti
xor
push
xchg
cmpl
fbstp
int
mov
pop
popa
and
push
stos
sub
xchg
xchg
adc
in
iret
sub
mov
pop
cmpsl
shlb
lret
dec
xor
jae
pushf
jmp
lret
scas
fbstp
and
jmp
int3
cmpsb
lock
ret
loop
sub
cmp
addr16
push
jle
cmp
dec
mov
imul
lret
lds
arpl
js
inc
push
or
leave
arpl
mov
push
sbb
js
mov
lea
xor
cmp
and
bnd
dec
mov
inc
or
pop
out
clc
pop
xor
lock
mov
fnstcw
add
xchg
and
cmc
pop
shll
insl
fdivl
movsl
ja
lods
add
pushf
sbb
push
out
ret
jae
xor
cmp
sbb
shlb
xchg
mov
repz
sbb
mov
pop
and
outsb
xchg
inc
aaa
pushf
daa
mov
add
mov
lock
mov
in
mov
add
out
loope
pop
cmp
mov
mov
and
or
stos
jle
imul
jg
xchg
in
push
stc
or
cwtl
orb
jb
mov
nop
add
repz
lods
dec
and
lcall
push
pop
jecxz
mov
cmp
push
pop
jmp
mov
pop
xchg
push
icebp
mov
cmc
and
and
xor
cld
movsl
dec
xchg
or
push
ret
pop
repz
repnz
xchg
int
std
add
imul
sub
lahf
mov
mov
sbb
divl
sub
mov
mov
xlat
adc
xor
mov
call
and
and
xor
adc
movsl
mov
and
or
ljmp
xorl
inc
sub
xchg
push
rcrl
popf
xchg
push
xchg
inc
std
add
jle
sub
jbe
dec
add
jl
inc
sbb
adc
add
movsb
xor
add
cmp
fdiv
xchg
test
mov
xor
ret
cmp
jle
xlat
push
jno
sub
repnz
imul
imul
out
mov
mov
and
and
fisubl
mov
inc
ds
add
cmp
jp
dec
dec
sub
cmp
mov
je
or
pop
sbb
sub
lock
lahf
cmp
xorb
pop
mov
jne
shlb
mov
lods
jns
pushf
int3
outsl
sub
push
dec
fcmovnb
mov
pop
orb
inc
mov
insl
pop
rol
fisubs
adc
aam
push
fbstp
arpl
jae
fs
lock
popa
shrl
out
stc
filds
inc
gs
out
or
repnz
or
lea
mov
clc
arpl
imul
pop
int3
pop
sahf
xchg
test
dec
es
sbb
fcoms
repnz
clc
test
mov
cmp
or
mov
xchg
dec
adc
adc
ret
jecxz
push
lret
jbe
int3
ffreep
dec
jb
and
push
dec
xchg
pushf
test
mov
nop
xchg
push
jecxz
lret
cmpsl
iret
and
movlps
or
sub
inc
inc
adc
stc
push
lock
sbb
leave
fisttps
pop
jle
in
jno
mov
dec
mov
out
insl
sbb
cmpsb
and
sarb
inc
sub
std
xor
push
or
movsb
jg
or
int3
pusha
xor
lahf
jle
push
push
cli
mov
jbe
aad
jg
dec
sub
push
dec
push
push
sub
ss
out
push
mov
iret
jo
out
dec
xlat
pop
mov
mov
sbb
add
jb
mov
pop
add
js
ja
mov
and
xchg
lahf
mov
mov
pop
daa
fisubl
dec
mov
add
loopne
loope
inc
and
cli
and
aad
and
cltd
daa
pop
gs
test
mov
cmp
bound
mov
mov
mov
inc
xorb
pop
rorb
lds
jl
xor
adc
push
pop
aaa
jno
imul
adc
ja
mov
dec
outsl
mov
jmp
ret
dec
roll
pavgb
fildl
sub
adc
cmpsl
imul
xor
dec
cwtl
stos
ret
call
popf
jge
push
push
cmp
insl
fcomi
imul
stos
stos
xchg
push
jl
jmp
add
sbb
movsl
in
sarl
xor
aaa
and
idivl
mov
mov
rcr
aaa
iret
mov
mov
jle
inc
or
cltd
push
gs
mov
pop
inc
or
inc
sub
jg
cmp
mov
mov
add
cld
adc
adc
incb
inc
xor
jge
in
scas
pop
sarl
mov
cld
sti
adc
mov
outsb
test
outsb
cltd
adc
cmp
pop
lods
xchg
out
jae
or
lret
in
add
fimull
xor
jne
push
out
cs
test
lods
repnz
push
sbb
stos
imul
aad
es
rcr
jge
sub
jge
jbe
lahf
movsb
cmp
adc
push
sbb
pop
push
loope
in
mov
push
or
das
out
out
daa
fwait
rorl
dec
sbb
push
xor
mov
mov
scas
dec
xchg
mov
sbb
xchg
mov
pop
jo
xchg
push
adc
xor
int
pop
call
mov
repz
sbb
cmp
jae
sub
sahf
lds
jp
add
mov
and
adcb
movsl
lcall
repnz
sbb
in
push
sbb
stos
adc
adc
nop
jns
sub
aas
in
mov
jns
push
push
cmp
stc
inc
adc
cli
rcr
lods
xor
cmp
out
imul
cmp
cwtl
push
jle
inc
sbb
into
shlb
xorl
pusha
adc
jne
iret
popa
popa
imul
lea
adc
fstp
add
jp
outsl
mov
dec
pop
xchg
mov
movups
push
adc
test
jp
pop
notl
add
inc
sub
pusha
mov
int
xchg
sbb
or
daa
bound
fcomps
popf
outsb
mov
add
lods
mov
inc
xchg
xor
and
into
movl
and
cwtl
cmpsb
test
iret
jl
lods
lock
loope
jae
mov
subb
fnstcw
jo
dec
push
mov
pop
dec
icebp
xor
adc
pop
cld
push
dec
shlb
gs
lods
mov
inc
mov
int3
inc
pop
xor
adc
shlb
or
jmp
clc
mov
std
leave
sahf
xchg
push
icebp
mov
roll
faddl
pop
fiadds
lock
aas
xor
mov
inc
scas
sahf
icebp
mov
dec
jb
and
add
xor
in
or
dec
xchg
out
cmp
push
sub
leave
mov
cmpsb
mov
idiv
mov
pop
scas
test
shrb
test
inc
loopne
test
scas
fwait
lcall
ss
xchg
inc
fs
mov
push
and
sbb
lock
or
clc
fbstp
rorl
enter
fsubrs
or
mov
pop
jl
mov
or
inc
or
jp
dec
mov
jmp
and
popa
gs
push
jnp
inc
push
aaa
int
add
movsb
mov
out
leave
push
in
dec
mov
mov
adc
mov
jne
adcb
mov
mov
or
lret
outsb
ja
outsb
loop
adc
dec
push
shl
cmp
fnstsw
push
stc
pop
pushw
cmc
mov
test
shr
cmc
prefetch
fcomip
push
gs
push
lods
cli
std
jae
gs
cli
push
ror
adc
faddl
stos
inc
pop
lods
ret
xlat
fimuls
and
scas
aaa
stos
adc
insl
xchg
dec
sub
mov
movsl
aam
bound
mov
jbe
dec
dec
jge
fistps
fisttpll
adc
ret
jno
dec
jge
stos
ljmp
rol
lcall
orl
mov
push
add
pop
aam
or
out
inc
mov
arpl
repz
dec
sub
cs
sbb
jg
pop
push
movsb
mov
test
dec
jecxz
adcb
into
jns
pop
adc
ja
test
dec
pop
popf
in
inc
dec
movsl
cmpsb
xor
mov
adc
mov
or
jle
scas
jecxz
sbb
shlb
shll
mov
lods
iret
sub
adc
rorl
sbb
lcall
or
lret
and
test
inc
popa
jge
sbb
fstpt
into
pop
insb
aam
inc
cwtl
pop
out
push
int3
xchg
sub
cmp
sbb
push
sbb
and
or
mov
lea
cmp
mov
icebp
xor
or
aaa
cmp
push
enter
mov
sarl
test
xor
pop
add
outsb
dec
repz
add
xor
xor
aaa
and
xchg
push
push
std
fcmovne
jl
daa
test
pop
hlt
roll
fidivrs
insl
push
jne
dec
xchg
sbb
pop
gs
xor
mov
sbb
ret
xchg
push
fdivs
mov
scas
adc
ror
sbb
pop
fidivrs
or
jo
inc
dec
push
push
add
les
scas
add
xchg
fs
lock
icebp
mov
lahf
pop
fistpll
sub
add
jb
loope
push
push
addr16
aam
bound
and
addr16
sbb
pop
insl
jne
mov
les
test
add
cli
mov
ret
subl
jge
dec
and
push
rcr
in
fcom
ljmp
out
inc
fisttps
cltd
pop
aad
xchg
xor
cmp
aas
mov
sbb
or
testb
insl
fldz
cmp
lods
jmp
inc
lods
es
sahf
jecxz
xor
mov
std
cmp
sbb
lock
idivb
fimull
mov
cmpsb
cmp
xchg
test
ds
sbb
scas
fwait
lods
ds
sub
fwait
push
enter
push
insl
sahf
xor
inc
or
test
repz
jnp
aas
sbb
lods
inc
sbb
pop
or
jecxz
pop
sub
adc
cs
dec
cltd
imul
and
mov
push
sti
cltd
out
mov
insl
out
mov
iret
cmp
outsb
in
mov
mov
scas
sub
inc
push
and
icebp
adcl
sti
pop
mov
push
or
cmpsb
pop
in
xchg
dec
stc
fimull
fdivr
mov
dec
cmpsb
mov
jno
jle
mov
aam
insb
popa
ret
xchg
stos
int3
or
sub
xor
pop
fldcw
mov
mov
push
repnz
enter
push
adc
xor
enter
ljmp
or
in
add
pop
test
or
or
mov
xchg
push
pop
and
ret
dec
aad
pop
dec
xor
and
loop
mov
jae
ds
hlt
lds
sub
repnz
lods
das
cltd
push
jp
mov
mov
aas
push
fcmove
mov
pop
hlt
pop
xchg
mov
cmp
scas
and
inc
aaa
scas
mov
add
test
lcall
mov
add
xlat
inc
add
sarb
stos
push
scas
push
and
dec
nop
lods
inc
jmp
xor
mov
push
cwtl
mov
subl
cmc
pop
and
outsl
in
dec
lret
dec
lds
or
add
push
pop
add
dec
mov
sarl
xchg
fidivs
add
ss
int3
mov
adc
mov
shlb
inc
or
cmpsl
pushf
shlb
mov
dec
xor
xchg
pop
ret
mov
or
negl
adc
insl
mov
out
mov
jbe
test
cltd
insl
std
shrl
pusha
iret
and
data16
add
jp
cwtl
dec
call
into
or
inc
mov
cmp
out
push
aas
popf
sti
sub
int
loop
fldcw
inc
data16
push
xchg
je
mov
sbb
mov
or
jbe
adc
dec
adc
dec
dec
imul
pusha
add
bound
mov
or
cli
pop
ret
loopne
cmp
push
cltd
adc
aas
lods
mov
stos
xchg
in
icebp
aaa
lods
xchg
xor
mov
enter
outsl
lock
push
push
and
icebp
push
sbb
aam
xlat
pop
pop
xchg
jge
fsubs
repnz
arpl
mov
jmp
shll
lods
scas
jecxz
xor
dec
fnsave
shll
fsubrs
iret
sbb
push
scas
adc
mov
dec
inc
cmp
add
sub
insb
ficoms
push
add
mov
nop
idivl
adc
rcl
mov
aas
sbb
mov
and
xchg
mov
scas
jg
push
fadd
jno
cmp
mov
aad
jge
mov
imul
ja
push
fdivl
icebp
push
inc
dec
mov
inc
push
addl
jae
pusha
call
icebp
mov
loopne
push
adc
mov
mov
hlt
sarl
inc
jb
cli
das
mov
ljmp
cmpsl
xor
mov
mov
out
xor
ss
ret
push
cli
jmp
pop
shll
jne
mov
mov
frstor
std
daa
xor
fidivl
icebp
jns
push
mov
jle
mov
aam
jp
nop
dec
fdivrl
cltd
dec
dec
jge
push
jne
lea
rolb
jae
cmpsl
and
gs
push
add
fsubrl
lret
xlat
adc
dec
jb
push
jo
repnz
xchg
xchg
sub
push
mov
icebp
and
pushf
dec
add
or
fsts
sub
loopne
cmp
cld
insb
adc
int3
out
jp
dec
scas
js
inc
leave
mov
add
or
outsl
mov
int3
sub
push
in
jae
lret
push
insl
mov
ret
jmp
inc
inc
mov
pop
cld
leave
inc
xor
pop
jecxz
cmp
cs
pushl
sbb
bound
mov
lahf
lds
fadds
scas
sub
icebp
in
insl
jle
cmpsl
sub
and
inc
or
mov
loopne
jns
or
jl
test
pop
pushw
idivb
inc
shll
icebp
popf
loope
xor
test
jecxz
aad
cmovnp
ficoms
add
inc
lods
adc
std
lock
test
std
fistpl
pop
frstor
adc
push
adc
inc
pop
scas
fildl
cmp
hlt
movsl
inc
sub
xchg
and
mov
imul
sbb
add
aaa
mov
into
int
cmp
stos
mov
lahf
dec
jl
std
out
orb
daa
sbb
loopne
pop
xchg
pop
hlt
and
in
xor
mov
dec
mov
clc
dec
rcrb
jge
lret
jae
xor
xchg
popa
ja
add
mov
jae
lock
xchg
adc
cltd
cmc
xor
sbb
cmp
push
sbb
mov
jbe
std
and
andb
add
sbb
lods
pushf
mov
and
inc
add
add
aam
push
cmpsw
adc
jecxz
and
jno
sub
mov
int
or
minps
ds
imul
mov
arpl
mov
gs
jge
mov
enter
mov
xor
jb
jge
ss
repnz
mov
ss
out
jns
in
test
jnp
jmp
imul
repnz
lret
lcall
xchg
xor
lret
imul
mov
mov
add
cmc
dec
cli
push
stos
mov
cmp
sbb
insb
out
int3
stos
fcoml
fstp
xchg
adc
aas
mov
dec
pop
dec
ficomps
jmp
xlat
xlat
adc
rcrl
xor
iret
mov
dec
jle
out
popf
mov
lds
lock
cmp
inc
fstl
xor
in
jb
das
or
fimuls
adc
mov
cs
mov
lock
push
mov
lods
das
out
xchg
pop
scas
add
push
rorb
mov
int
xor
push
aam
insb
lret
ss
loop
cmp
scas
into
fisubs
or
xchg
pop
xchg
xchg
or
inc
mov
push
pop
pop
and
add
or
scas
sub
cmp
sarb
xchg
mov
jmp
and
movsl
jmp
or
insb
cmp
lcall
loopne
or
pop
jo
jg
xchg
iret
jg
sbb
movl
mov
push
add
push
pop
xchg
mov
pop
sahf
stc
xor
std
loopne
cmp
shrb
rcrl
repnz
pusha
jmp
xchg
scas
mov
sub
mov
scas
das
ret
jle
addl
sub
inc
ja
retw
xor
fs
aas
adc
fnsave
scas
lret
push
add
mov
leave
dec
xorb
xchg
out
ficoms
and
imul
lods
sub
leave
jl
xchg
or
scas
in
test
add
test
imul
loop
xchg
rorl
or
fdivrl
adc
insl
or
les
lahf
sbb
scas
and
sbb
and
gs
lds
xor
mov
fsts
cmpsb
lds
mov
push
fistpl
mov
imul
xor
mov
aad
in
scas
rcl
dec
in
cli
sbb
jl
push
dec
sub
pop
lahf
addb
les
lahf
sbb
sub
xor
cmp
int
icebp
movsb
in
mov
cmc
repz
mov
lds
iret
iret
mov
add
push
dec
add
mov
xchg
push
xchg
stos
clc
imul
je
out
jbe
push
dec
jb
jnp
gs
pusha
inc
insb
xor
sub
mov
xor
xchg
jmp
xchg
mov
jns
in
jge
addr16
inc
xor
pop
bswap
push
shr
stos
dec
xor
sbb
orl
outsb
jecxz
icebp
fs
dec
xchg
cmp
pop
lret
xor
outsl
lcall
jbe
pusha
or
xchg
jno
sbb
xor
mov
mov
cmp
inc
push
into
lock
adc
xchg
cmpb
gs
ja
ss
push
sub
or
sub
cmp
push
dec
fstp
adc
stos
push
cli
out
mov
dec
arpl
icebp
mov
or
jne
outsb
jno
jecxz
pop
push
testb
stc
xor
jns
xor
test
push
aam
mov
jmp
pop
je
push
jbe
lcall
cld
sub
sbb
clc
lock
xchg
sbb
xor
adc
test
adc
push
int3
add
icebp
mov
fisttpll
sti
popf
dec
insl
sub
aad
test
in
adc
mov
xor
pop
jno
mov
mov
mov
sub
xchg
aaa
fsubrl
mov
cltd
adc
cli
cwtl
not
repz
iret
lods
mov
dec
push
les
sbb
mov
jge
test
sub
mov
out
int3
or
fimuls
les
inc
mov
and
mov
inc
or
pop
pop
sbb
adc
fidivs
in
call
jl
push
dec
popa
stos
xor
xor
ss
rorl
xchg
stc
push
movsb
sbb
push
lds
xor
dec
add
cld
push
push
fcmovne
pop
mov
push
inc
push
fcmovnb
xchg
add
call
sub
cmc
xchg
add
and
mov
ljmp
lcall
lret
loop
es
incb
hlt
pushf
cmp
mov
rol
lret
lret
dec
cmp
sbb
test
dec
xchg
or
fs
cmp
lret
sub
push
cmp
je
leave
gs
and
aad
dec
xchg
ror
push
fidivl
and
icebp
sbb
push
repz
data16
xchg
add
dec
jmp
xor
rcr
aaa
test
mov
add
nop
rclb
push
pop
xchg
jnp
cmpb
int3
cmp
mov
into
cmpsl
loope
loop
and
mov
push
shr
mov
lahf
aam
mov
mov
in
or
ret
jae
lahf
in
lcall
into
je
adc
outsl
dec
adc
dec
sbb
lea
adc
dec
lahf
jne
stos
xor
daa
mov
out
outsl
daa
or
movb
adc
lcall
push
loope
stos
fisttps
aam
dec
in
jae
out
cld
dec
jg
jo
in
jg
test
mov
mov
xor
pop
std
pusha
xchg
and
sbb
sub
or
test
adc
out
or
inc
adc
pushf
cmp
add
pop
nop/reserved
in
xchg
sub
xchg
loop
mov
mov
shrb
xchg
clc
fnstsw
pop
fimuls
xchg
loopne
push
mov
loopne
mov
pop
or
mov
mov
xlat
jge
std
stos
pop
adc
cmp
ret
inc
insl
push
xlat
and
std
dec
pop
push
cmpsl
cmpsl
ja
fs
js
into
test
fiaddl
imul
test
mov
push
fidivrl
xchg
inc
add
mov
push
ret
inc
sbb
aam
je
lret
cwtl
jne
imul
clc
mov
adc
in
mov
xor
cmpsb
jmp
add
xlat
adc
xchg
xchg
push
pop
sbb
call
or
stos
movsl
in
push
cmc
outsb
aad
dec
inc
dec
aas
add
adc
and
dec
or
movsl
gs
dec
sbb
aaa
lds
mov
push
xchg
mov
dec
inc
scas
cld
mov
lret
inc
enter
lahf
out
stos
out
lds
push
lcall
test
xchg
in
mov
inc
rolb
ljmp
jnp
sbb
int
jecxz
inc
dec
scas
xor
scas
mov
popf
fucomp
jb
inc
inc
inc
loopne
inc
vunpcklpd
mov
cmp
mov
xor
and
push
repnz
insb
sbb
xchg
xlat
xchg
fnstcw
add
push
addr16
push
fld
xor
dec
out
mov
mov
ror
cmp
adc
jo
ss
jb
ljmp
mov
fmull
sti
insb
sbb
stos
fs
in
sbb
push
fnsave
sub
sbb
scas
mov
cmpsb
push
and
iret
xchg
das
mov
push
jge
data16
popa
inc
pop
outsl
out
std
push
and
jmp
or
and
mov
popl
cli
loop
mov
inc
inc
addr16
leave
mov
mov
adc
xor
rcrb
jns
fsubs
cwtl
adc
test
fs
and
gs
shld
int3
shl
mov
jle
mov
lret
in
xchg
jnp
cmpsb
test
xor
mov
adc
insl
cmpsb
popf
in
inc
sar
pop
push
std
inc
das
pand
push
pop
cltd
aaa
push
fnstsw
mov
lret
jno
add
or
stc
cli
xchg
sub
and
mov
pop
ljmp
hlt
rcll
cs
inc
mov
scas
lds
push
push
inc
pop
movsb
cmp
cmpsb
imul
adc
cmpsl
xor
mov
pop
loope
popf
pop
lahf
dec
xchg
dec
mov
jp
ljmp
sbb
adc
pop
pop
stos
mov
icebp
cltd
outsl
mov
addr16
sub
ja
mov
sbb
jg
jno
cltd
fiadds
push
femms
jmp
bound
mov
mov
dec
and
out
sbb
scas
mov
jmp
jge
imul
into
jno
sbb
adc
push
das
adc
adc
inc
jg
mov
and
stos
in
arpl
fimull
adc
pop
xor
nop
mov
cli
orb
xchg
movsb
decl
std
daa
mov
repnz
into
aam
out
fs
clc
pop
lret
inc
xor
pop
clc
adc
cmp
xchg
hlt
push
lock
nop
xor
imulb
push
push
lods
lahf
stc
insl
fs
loopne
push
dec
and
xchg
jmp
xor
gs
scas
or
xor
dec
sub
shll
push
test
and
mov
movsb
aas
sub
mov
pushl
mov
sub
xchg
dec
xor
mov
xchg
insb
cmp
cwtl
int3
xlat
shrb
fs
icebp
scas
and
add
push
mov
les
fimull
out
sub
int3
loopne
push
inc
cbtw
in
and
push
and
sbb
xlat
test
or
scas
adc
or
push
std
push
add
jae
in
adc
mov
loopne
push
lcall
xchg
lret
in
movsl
and
je
sbb
test
push
sbb
popf
out
lods
sub
mov
inc
repz
push
xchg
xchg
cmp
scas
out
cld
add
mov
in
inc
clc
adc
cltd
cmp
out
mov
adc
xchg
ljmp
pop
ret
xchg
movsb
outsl
addb
inc
cmpsb
scas
pop
addr16
mov
outsb
or
xchg
xor
pop
in
notl
sub
jl
inc
insl
pop
dec
pop
paddw
int3
ret
shll
pop
xchg
xchg
or
jl
dec
es
and
imul
xchg
xor
js
out
aam
aas
test
mov
fdivrl
sub
adc
adc
inc
das
dec
jge
push
mov
xor
mov
jle
data16
cld
gs
les
in
rcll
cwtl
addr16
mov
mov
sbb
lods
int3
sub
sub
or
xor
mov
sbb
mov
mov
fldl
sbb
subl
ss
pushf
les
pop
add
mov
ja
mov
std
into
ljmp
push
arpl
into
rcrb
and
jae
pop
shr
out
jb
pop
jno
push
out
inc
lret
enter
cs
repnz
pushf
jge
inc
mov
jo
mov
gs
or
das
cld
ja
ljmp
xor
cli
cli
insb
dec
and
cmp
adc
jecxz
push
jno
loop
inc
cmp
add
push
sub
mov
pop
cmpsb
add
popf
dec
mov
out
push
push
dec
xchg
fmuls
les
stc
cmp
in
mov
xchg
xor
pusha
push
cmp
xchg
mov
shl
xchg
leave
add
stc
mov
hlt
xchg
data16
cmpsb
dec
ss
pop
insl
jg
shll
add
adc
popf
adc
sbb
dec
push
or
mov
ficomps
shlb
pop
clc
jns
rcrb
mov
pop
ret
adc
sbb
out
cs
test
fstpl
inc
test
testw
jne
mov
es
adc
repnz
rcrb
sub
push
pop
inc
bnd
out
outsl
test
push
movsb
xchg
pop
jle
loopne
cmp
adc
xchg
je
adc
mov
jecxz
ja
inc
sbb
lret
inc
loop
push
int3
push
sub
test
mov
sbb
jmp
or
inc
jge
outsl
enter
cmpsb
notb
mov
icebp
adc
pop
lock
cmp
test
mov
ds
push
cmpsb
push
sbb
jp
jo
jne
stos
mov
inc
popl
je
cltd
lcall
testb
lret
iret
lds
fwait
pop
pop
mov
push
add
int
cmpsb
mov
cmp
sub
mov
push
inc
mov
mov
push
push
pop
adc
cmp
imul
or
sbb
out
lret
dec
jnp
sti
mull
inc
mov
test
ss
fdivrl
aaa
mov
loope
addr16
or
and
xorb
popf
sbb
sbb
jbe
jb
or
imul
and
scas
mov
push
push
movsl
test
mov
mov
dec
mov
adc
lods
xchg
icebp
iret
popa
outsb
cmp
das
or
lea
je
mov
movsb
cmp
or
imul
gs
lds
mov
inc
mov
mov
sbb
xchg
ja
mov
xchg
sarb
int
btcl
fldpi
call
xchg
mov
fnstcw
mov
pushf
cmp
imul
in
fs
ret
jmp
dec
xchg
cs
cli
dec
rcrl
mov
sbb
cld
push
xor
mov
ja
push
pop
cmc
fprem1
pop
adc
out
daa
pop
adcl
mov
mov
je
aas
fldt
insl
movsl
ficoms
inc
ficoms
std
inc
rorb
xor
popf
arpl
mov
ret
out
shlb
lahf
push
out
xchg
add
adc
pop
add
shlb
mov
dec
or
mov
mov
adc
xchg
mov
ja
inc
sahf
lcall
fldl
cs
xchg
mov
inc
add
dec
sub
outsl
mov
xor
jmp
adc
int
mov
out
les
push
in
sub
add
mov
jmp
fwait
lahf
imul
mov
lea
xchg
lea
and
xchg
fs
lods
xchg
sub
push
sbb
shrb
lcall
rorb
test
incb
jg
push
rcll
ds
xor
scas
and
cmp
repz
je
mov
and
and
decb
fcomps
test
cmpsb
xlat
hlt
std
cmpsb
insb
jno
inc
mov
mov
scas
add
cmc
push
cmpsl
leave
out
push
push
sub
imul
jg
mov
xchg
inc
movsl
mov
setno
mov
mov
shrl
push
pop
jnp
pop
insl
push
push
pop
popf
xor
imul
jg
adc
and
and
xchg
mov
es
lret
pop
popa
cmpsl
lret
pop
pop
push
mov
jle
or
fmull
xchg
imul
jge
das
in
lahf
int3
push
xor
adc
jo
sti
and
call
adc
xor
enter
jae
lret
lret
andb
xor
adc
sbb
test
imul
mov
sub
pop
fdivrp
leave
stos
cltd
cs
pop
je
in
jb
adc
add
sub
mov
mov
insl
and
ficompl
lods
std
imul
mov
fbstp
push
sti
es
das
arpl
aam
pushf
xor
or
and
outsl
mov
adcb
movsl
into
mov
jl
in
out
adc
push
or
repnz
sub
xchg
cmp
cli
xchg
mov
cli
xchg
test
addb
push
push
dec
adc
pop
sarb
ss
xchg
int
lods
mov
aas
mov
aas
xchg
dec
mov
push
mov
rcll
in
icebp
mov
jg
or
clc
inc
inc
lods
negb
test
mov
cmpsl
arpl
pop
data16
adc
movsl
loope
and
mov
movb
insl
or
addr16
lds
mov
icebp
inc
push
lea
mov
xchg
leave
mov
cmp
jns
xchg
ret
icebp
imul
dec
cmp
xor
push
sti
movsb
sub
jecxz
mov
lahf
adc
in
push
add
mov
mov
bsr
add
mov
js
pop
mov
cmp
cs
imul
push
adc
xchg
std
cmc
xchg
and
insl
jns
or
cli
lea
and
push
and
cs
test
out
nop
xor
dec
inc
sub
xchg
fcmovnbe
rcl
pslld
call
and
jns
xchg
jecxz
jle
pop
std
lahf
loopne
lds
pusha
add
dec
or
popf
out
pop
sbb
mov
daa
fwait
push
add
in
inc
mov
xor
inc
movsb
jge
xor
icebp
rcrl
xchg
push
ljmp
mov
adc
lcall
loope
cmpsl
test
lods
daa
nop
and
xchg
in
ljmp
add
cltd
stos
sbb
inc
out
pop
loopne
push
lds
cmpsb
jge
xlat
mov
jg
sub
fistl
repz
clc
aaa
pop
sbb
aas
sbb
cltd
sbb
stos
and
repnz
and
push
or
mov
inc
fwait
testl
sub
mov
testb
xchg
adc
pop
xor
push
adc
stos
icebp
je
pop
mov
pop
shlb
scas
shl
scas
pop
and
out
xchg
hlt
pop
cli
adc
aaa
and
test
dec
push
sahf
inc
lcall
push
or
loope
imul
xlat
push
sbb
xor
fwait
mov
mov
mov
or
rclb
aam
sahf
cmp
and
faddl
jno
push
mov
loope
adc
xor
int3
xchg
push
js
outsb
aaa
rcll
arpl
rcll
mov
pop
mov
mov
andb
cltd
lods
in
sbbb
sub
ja
add
mov
sbb
xlat
shrl
dec
into
data16
in
scas
das
clc
and
inc
jecxz
movsb
pop
xchg
dec
popf
push
clc
mov
push
cmpsl
gs
mov
jne
mov
je
cld
fbld
xor
sbb
dec
nop
adc
push
daa
push
add
je
push
push
test
mov
xchg
or
xchg
enter
jbe
adc
les
pushl
test
pop
xchg
mov
jle
jmp
push
je
pop
inc
repnz
fisttpl
xor
cmpsl
sub
out
xchg
sub
sbb
loope
repnz
das
dec
popa
xchg
sub
mov
enter
mov
fsubrp
dec
shlb
idivb
sub
sbb
push
sbb
push
lods
mov
ljmp
cmpsb
inc
rcll
push
xchg
mov
push
and
popa
loope
jg
stc
adc
mov
test
rolb
mov
cld
out
sbb
xchg
pop
fldenv
dec
movsl
sbb
scas
xor
add
flds
out
icebp
xchg
push
mov
mov
push
sbb
stos
mov
jae
xchg
test
sbb
popa
push
pop
sbb
dec
jo
int3
sub
in
adcl
jle
daa
repnz
push
fisubs
push
add
sbb
rcll
inc
outsb
push
jnp
pop
mov
or
sub
icebp
popa
add
out
rcll
and
stc
out
xlat
out
sub
ret
cs
mov
mov
loope
mov
enter
mov
aad
adcl
mov
jae
push
cld
push
cltd
sbb
outsl
sbb
mov
push
xor
scas
ret
jno
nop
dec
jno
adc
adc
xor
mov
and
or
inc
mov
stos
cmp
jne
cmc
adc
mov
jnp
fcompl
push
ret
xchg
mov
fwait
test
cmp
or
pop
in
sub
jg
sets
push
cmpsb
push
xchg
jmp
das
es
mov
int3
shlb
or
lahf
scas
nop
shlb
mov
negl
iret
cmpsb
andb
repnz
in
adc
mov
fisubs
mov
repnz
jo
stos
cmp
sbb
fld
out
mov
loop
aam
sub
push
or
xchg
pop
mov
adc
pop
in
pop
mov
pop
mov
mov
add
sub
dec
inc
sub
in
push
or
leave
mov
les
test
cmp
xor
add
call
sbb
int3
outsb
imul
les
mov
stos
jb
xchg
fcomp
jo
cmp
or
mov
lds
mov
scas
mov
push
ds
mov
xchg
imul
cltd
inc
leave
in
push
pop
adc
push
je
nop
mov
div
cmp
jecxz
jno
js
pop
inc
pop
mov
mov
loopne
mov
xchg
dec
aad
push
lcall
sub
call
gs
outsl
mov
das
hlt
fmuls
mov
loope
cmp
mov
inc
outsl
lock
faddl
ljmp
stos
scas
sub
push
jecxz
dec
enter
idiv
loope
repnz
pop
pop
xor
mov
add
mov
shrl
clc
out
add
jb
mov
test
and
cmpsl
adc
xlat
jp
xchg
sub
jge
or
ljmp
push
mov
in
and
outsl
pop
stos
cltd
fistps
ss
jb
ja
and
std
push
test
push
push
cmp
mov
push
data16
push
pop
mov
lcall
lcall
mov
idivl
jmp
fsubs
ljmp
sbb
mov
dec
lea
pop
push
or
stos
in
push
jp
jle
pusha
push
lret
push
stos
cmpsb
fwait
mov
push
subl
dec
in
mov
push
cmpsl
mov
fcoms
xor
cmp
push
adcl
inc
xchg
dec
mov
cld
call
scas
jge
sub
les
pop
lods
or
lock
js
aad
das
jp
leave
pop
and
or
inc
jle
insb
imul
dec
inc
jae
cmp
xchg
push
mov
xchg
xlat
push
cmpsb
push
ret
mov
push
xchg
fistl
adc
in
jo
inc
inc
das
jle
jecxz
ret
mov
pop
cmp
pop
cmpsl
pushl
daa
xchg
iret
jmp
int3
jns
aas
repnz
fisubrs
sahf
pop
sub
push
pop
fst
aaa
cmp
out
rcr
xchg
or
sub
push
repnz
out
xchg
adc
fisubrs
movsl
and
and
data16
in
and
out
xchg
aaa
add
jnp
mov
lcall
fisubrl
cmp
add
mov
mov
sub
jmp
testl
sub
ret
rcl
mov
jle
sahf
cmp
cmp
xor
outsb
insb
mov
out
sub
jl
out
imul
outsb
lds
fwait
mov
xor
adc
out
dec
int
dec
inc
mov
xorl
jmp
cmp
mov
push
call
sti
and
and
adc
push
sub
xchg
rcr
pushf
aad
mov
leave
mov
pop
pop
push
cld
mov
cmpsl
stos
sbbb
ds
mul
arpl
inc
inc
sahf
add
aam
mov
pop
loope
inc
lods
fwait
sbb
push
in
jb
mov
ret
in
jle
mov
movsl
nop
sbb
push
rcrl
movsl
mov
inc
adc
and
dec
push
xchg
stos
shrb
inc
inc
pop
jns
movsl
adc
rcll
push
mov
xlat
adc
mov
jnp
adcb
and
ret
adc
mov
dec
cli
fucomp
test
fistpl
scas
xchg
loop
push
and
int3
shr
sti
add
jns
push
adc
dec
mov
inc
test
jmp
data16
jb
fstps
or
add
orl
int
aas
iret
fmul
xchg
or
add
push
jecxz
add
xor
and
jbe
repnz
push
mov
and
ja
daa
and
bound
cmp
cmp
xor
and
hlt
jmp
in
sub
xlat
jbe
scas
xor
addr16
dec
cmpsb
fldt
mov
cwtl
or
pop
fwait
mov
jns
xor
sub
lock
add
in
add
int
cmp
mov
add
adc
mov
adc
or
insb
ds
jg
in
inc
cmc
adc
das
push
mov
inc
cmp
shll
jnp
adc
out
into
mov
xor
outsb
movsl
insb
mov
pop
repz
jle
pushf
pop
jp
neg
ljmp
xchg
jg
mov
aad
out
bound
mov
movsb
andb
jl
aaa
mov
mov
add
jbe
sahf
inc
shrb
mov
xor
or
mov
jns
cli
ret
in
cmp
aad
pop
dec
jg
popa
out
stc
iret
rcrb
loopne
mov
pusha
cmp
xchg
adc
or
loop
out
jbe
pop
in
pop
stc
sub
arpl
shrb
sub
pop
sbb
pop
sub
fstl
popf
xor
xor
pusha
std
xorl
xchg
lock
fisubs
jo
aad
jmp
call
cwtl
loop
scas
inc
sub
adc
leave
in
mov
pop
clts
rclb
ror
pop
out
leave
repz
mov
mov
jne
out
push
ds
or
sahf
or
je
dec
das
push
sbb
jbe
add
dec
loopne
stos
ret
loop
das
mov
les
push
sbb
test
addr16
inc
cmc
testb
movsl
xor
out
in
sub
jbe
push
mov
xchg
rcr
push
xchg
int
xorb
repnz
add
fdivl
jmp
xor
mov
enter
test
cltd
ficompl
gs
cmp
xor
jg
int3
push
sub
call
ss
pop
shll
fcoms
adc
in
jge
clc
pusha
outsb
sub
jge
mov
jl
out
adc
lcall
and
jge
lea
aas
popf
jp
popa
mov
out
mov
pushf
scas
les
in
scas
adc
jmp
push
dec
inc
xchg
inc
sub
fdivr
in
mov
cmp
movsb
push
fs
cld
test
push
test
push
sub
imul
mov
fdivrl
pop
or
pushf
inc
pop
inc
mov
lret
add
push
xor
push
mov
mov
xor
mov
add
dec
xchg
add
lock
cli
movsl
mov
movsl
imul
cmpsb
mov
mov
xchg
push
rolb
jg
or
fmull
pop
ds
clc
scas
sub
xorl
loope
insb
pop
pop
daa
or
inc
sub
cld
pop
jno
lds
stos
jb
stc
cmpsl
push
andb
inc
pop
daa
test
xchg
in
mov
push
add
lcall
int3
aaa
scas
out
and
jo
xchg
ret
add
cmp
insl
mov
cmpsl
jno
xor
int
rcrl
inc
adc
cmpsl
and
dec
scas
sub
jae
fistl
xor
push
loope
roll
loope
mov
jmp
ret
jbe
fdivl
rcll
clc
insb
pop
in
rcll
pop
ret
sbb
inc
xchg
js
mov
sahf
pop
xchg
inc
outsb
cmp
aad
ret
xchg
loopne
iret
fwait
lds
in
aas
out
pop
ss
stos
fwait
xchg
mov
loope
pop
sub
mov
mov
les
push
cmp
jo
dec
in
pop
out
adcl
loopne
popf
sub
clc
test
mov
adc
pop
out
inc
lret
mov
or
adc
fxrstor
or
ljmp
loope
sub
push
pop
in
mov
imul
push
test
lods
incb
lds
jl
adc
imul
mov
pop
sub
xchg
or
cmp
daa
ret
rcll
lock
lods
out
jg
mov
bound
imul
in
jae
test
mov
pop
sub
mov
int3
mov
pop
popf
nop
inc
js
jmp
mov
stos
int3
xor
pop
fcoml
arpl
aad
test
lahf
inc
push
or
test
jg
daa
xchg
cmp
mov
lahf
sub
gs
inc
shr
int
jns
mov
fldenv
cmp
add
ret
mov
aaa
mov
loope
jb
add
andb
addb
pop
movb
insl
mov
pop
hlt
mov
adc
adc
mov
insb
lods
adc
pop
pop
in
cmp
je
jg
lret
sbb
sbb
add
fisubs
xchg
fnsetpm(287
insb
icebp
xor
lods
pop
inc
arpl
fidivrs
pop
rcll
repnz
adc
repz
test
inc
and
ret
cmovns
pop
jmp
cmpsl
lock
jge
dec
push
mov
mov
fildl
or
jb
idivb
xlat
loopne
stc
mov
test
push
stos
or
mov
jp
sbb
cld
ficoms
or
jnp
dec
and
add
test
add
mov
out
cmp
lahf
lods
pop
inc
mov
mov
jmp
enter
leave
je
jg
xchg
mov
out
jb
movd
mov
mov
addb
stos
cmp
xchg
jl
mov
imul
cmp
xlat
mov
add
popf
in
sub
mull
cwtl
inc
xchg
push
icebp
repz
push
adc
jne
iret
pop
out
out
or
mov
out
aad
outsl
dec
inc
stc
fistps
dec
xor
in
mov
std
dec
jb
clc
cmc
inc
sub
xor
sbb
mov
outsl
cmc
jge
pop
imul
movsb
pop
std
xor
mov
and
fwait
adc
mov
call
js
mov
ss
mov
dec
and
adcl
push
push
ds
or
cld
sbb
pop
sub
mov
aaa
aas
sbb
pop
add
mov
clc
sub
push
xchg
aas
hlt
sub
cmpsl
xor
lahf
adc
or
stc
xor
xor
pop
fisubrs
inc
cli
vpcomub
lods
mov
nop
jmp
mov
dec
dec
cli
mov
pop
xchg
mov
sbb
push
push
fwait
pop
movsl
adc
into
inc
repz
xor
push
nop
dec
push
cvttps2pi
xor
pop
test
pop
mov
into
stos
push
add
mov
mov
jns
movl
aam
lret
stos
xchg
data16
fstpl
sbb
iret
out
sub
mov
mov
sub
or
cmp
adc
lret
sahf
rcl
cmpsl
inc
outsl
scas
lods
stos
in
inc
arpl
icebp
std
push
pop
fisttpl
sbb
jle
push
xor
sub
daa
xchg
xchg
daa
sbb
pop
sub
sbb
lods
add
mov
repz
daa
mov
xor
xor
cltd
inc
jg
dec
ds
mov
stos
aas
insl
in
scas
lret
lds
push
sub
and
inc
xor
cmp
cwtl
int
mov
negb
outsl
mov
out
shlb
lods
mov
xchg
jge
std
das
sbb
mov
sbb
mov
jne
cmp
mov
loopne
outsl
imul
dec
mov
iret
cmp
pop
pop
sub
daa
jb
jecxz
mov
fadd
dec
add
icebp
jle
mov
enter
jecxz
lds
xchg
in
outsb
and
jl
push
cmpsl
cltd
loopne
mov
mov
test
movsb
and
push
sbbb
clc
mov
and
int3
pop
cwtl
data16
sub
xchg
subl
jl
cltd
fstp
jb
or
negb
in
cmp
pop
mov
pop
jnp
sub
or
lods
fsubl
dec
mov
fwait
cwtl
sub
xor
cmp
lret
jne
lcall
scas
sub
mov
push
leave
inc
adc
into
subl
nop
fs
fidivrs
jp
add
out
pop
or
in
dec
xchg
push
adc
and
mov
ss
cmpsl
call
loop
outsb
fimuls
dec
inc
sahf
daa
gs
stc
imul
dec
ds
cmp
cmp
dec
adc
sbbl
lret
in
fidivrl
test
cmp
add
push
jb
fcmovne
or
mov
data16
mov
fnstsw
push
ret
das
sbb
pop
pop
push
dec
push
imul
inc
lods
roll
stos
xor
lret
mov
cmp
mov
lret
lcallw
outsb
out
sub
mov
sub
inc
in
push
sub
mov
inc
inc
dec
repnz
cmpsl
push
xlat
sub
jl
lock
pop
xchg
icebp
fisttpl
add
mov
push
outsb
jp
dec
push
out
sub
iret
pop
daa
lds
je
fidivrs
popf
lods
ret
sub
push
mov
jae
adc
and
test
ljmp
mov
push
jmp
imul
pushf
pop
stos
sbb
int
mov
add
mov
mov
cmp
sbb
cmp
cld
dec
lea
or
in
inc
mov
sub
les
outsb
adcb
adc
jne
lret
arpl
sub
das
cmc
pop
test
pop
add
lret
and
jae
xchg
sbb
xchg
scas
mov
push
xchg
pop
inc
mov
dec
lds
add
xor
inc
out
pop
cmpsl
jno
lret
cltd
lret
movsb
and
mov
add
sbb
data16
or
lods
cmp
in
test
push
jl
cld
mov
and
inc
fs
and
iret
stc
testb
mov
inc
inc
jno
mov
ret
sub
pop
push
push
cmp
scas
test
xor
insb
inc
mov
sub
mov
and
arpl
rolb
sahf
mov
mov
pop
loope
dec
mov
pushf
xchg
push
sub
inc
jb
enter
inc
cltd
xor
ds
imul
jmp
int3
xchg
in
and
mov
dec
cld
and
and
lods
jb
mov
xchg
xor
enter
fistpll
pop
sbb
inc
pop
and
in
xchg
pop
or
lea
ss
jae
mov
out
mov
inc
mov
mov
adc
daa
push
pop
lock
clc
rcrb
or
mov
xchg
cmp
sbb
or
xchg
mov
lahf
dec
cmp
pusha
push
pop
enter
pusha
out
enter
paddusb
aas
je
pop
add
jg
or
psubsw
in
lock
sub
and
in
cmp
mov
add
xchg
mov
and
push
inc
inc
shl
cmp
cmc
push
fimuls
jp
sub
stos
mov
or
cwtl
lahf
fsubs
xchg
pushl
sahf
out
ret
xchg
test
movsb
addb
push
xlat
and
bound
sbb
lret
paddsw
icebp
cmp
out
xor
push
dec
mov
push
adc
mov
test
dec
jl
movaps
dec
cld
lcall
cmp
cmpsb
lahf
cwtl
lret
pop
stc
inc
xchg
clc
rclb
xchg
pop
xchg
jmp
pushf
pop
enter
mov
push
sbb
jne
stc
fwait
lods
test
out
push
inc
sub
xchg
gs
enter
call
cmpl
push
pop
pushf
push
mov
out
cmpl
lret
xorb
dec
xchg
push
pop
and
imul
clc
in
clc
ret
push
stc
jbe
xchg
mov
out
push
jnp
fadds
mov
popf
pop
pop
pop
mov
sti
xor
xor
outsb
xor
inc
mov
mov
pop
repz
or
fdivp
sahf
or
stos
repnz
xchg
arpl
pop
pop
jecxz
stc
addl
ret
mov
push
jge
bound
idivb
loopne,pt
fadd
dec
jne
sub
cld
fisubs
push
jnp
jae
daa
movsb
xor
ljmp
ds
pop
adc
aad
cmp
pop
pop
stos
pop
negb
gs
outsl
adc
fisttps
xchg
addr16
mov
repz
out
pop
outsb
jbe
pop
lcall
fcmove
mov
xchg
inc
popf
adc
ljmp
imul
mov
xchg
rcrl
xchg
pop
je
and
sbb
cli
and
and
stos
fdivl
bound
jl
ficoml
clc
inc
pushf
xor
rsm
dec
subl
test
jno
inc
jecxz
jno
seta
push
divl
rcrl
or
mov
pusha
xor
les
outsb
or
push
and
xchg
dec
aas
and
leave
jns
imul
mov
xchg
ljmp
xorl
fdivs
hlt
ror
lcall
stos
dec
sbb
and
adc
inc
lods
lcall
pop
mov
repz
adc
cmpsb
int
or
and
sbb
mov
cmp
push
adc
hlt
lock
iret
cld
mov
xchg
mov
pop
pop
cmp
outsb
cmp
rcr
pop
fidivs
cs
fs
rclb
jb
push
add
dec
mov
aad
std
cmp
out
ja
adc
movsb
lea
adc
outsb
fisttpll
cmc
movsl
pop
shrl
ret
movsl
or
mov
fidivrl
mov
cmpsb
xchg
imul
jge
jl
mov
rcll
pop
loope
xchg
jp
sub
adc
pop
or
inc
jecxz
lret
xor
sub
inc
je
daa
out
cmp
jle
mov
mov
stos
jo
dec
lods
in
pop
repz
mov
fwait
and
xor
pop
ja
movsb
cli
jp
push
or
cli
pusha
xor
xchg
dec
clc
cmp
or
sbb
loop
adc
sbb
sti
adc
call
rclb
loopne
popf
mov
fstps
ret
jne
dec
into
dec
sub
ss
cmp
and
sarb
hlt
loope
sbb
inc
cmc
test
add
mov
sub
xor
jb
filds
out
popa
int3
push
and
add
mov
dec
adc
repz
test
ss
shlb
mov
icebp
push
addr16
xor
mov
imul
xor
adc
cmp
fwait
stc
inc
or
leave
stos
push
outsb
loope
xchg
inc
mov
mov
sbb
scas
fisubs
loopne
adc
insl
je
mov
fisubrs
pusha
mov
inc
push
cmp
inc
sub
xchg
push
add
pop
mov
mov
push
loopew
cmpsb
fsubs
and
pop
xor
sbb
and
push
fs
test
adc
mov
pop
dec
div
repz
jne
int
pusha
mov
inc
movsb
test
call
jns
sbb
js
cmp
push
sbbb
xor
cmpsl
push
inc
sbb
pop
mov
cwtl
sub
mov
xchg
xlat
stos
imul
lods
arpl
inc
lahf
outsl
lret
or
popf
fwait
ljmp
pop
dec
fld1
or
sbb
mov
sub
xchg
lcall
xchg
push
cmpb
add
inc
dec
jmp
leave
push
push
js
rcrb
and
xor
and
es
incl
addr16
sub
xlat
xchg
mov
mov
sahf
stc
or
scas
push
cmp
and
push
bound
push
int3
xchg
aaa
jo
dec
jle
inc
pop
push
pushf
fcomip
and
pop
push
push
scas
hlt
lock
adc
fidivrl
add
insb
fisttpl
dec
ja
push
inc
pop
cmp
insl
jne
cmpsl
mov
and
xchg
xchg
xchg
dec
mov
ja
fxch
or
ds
add
mov
push
cmpsb
inc
jo
std
es
lea
adc
mov
dec
sub
xor
jmp
out
inc
add
in
dec
mov
dec
sub
lahf
test
aam
test
outsl
lds
leave
loopne
in
sbb
adc
mov
jmp
fisttps
xchg
push
xlat
les
sti
dec
jle
ficoms
inc
xor
dec
xchg
sub
lds
dec
xorb
lods
inc
push
fdivrs
pop
js
fs
lds
into
mov
int
int3
fistps
push
das
jp
mov
push
lods
jmp
fstl
add
decl
mov
xchg
mov
sub
xor
popf
ljmp
inc
inc
jmp
mov
out
dec
xchg
les
fistpl
xor
test
rolb
rcll
and
rcll
pusha
pop
add
popf
pushf
test
lcall
jae
inc
xor
pavgw
mov
repz
xor
push
dec
push
mov
insb
test
push
in
jb
push
cmpsb
call
mov
shrl
mov
aam
sub
rorb
push
push
xchg
lods
das
sbb
xlat
add
sub
xchg
enter
mov
shr
pop
dec
lds
loop
cs
or
xor
loope
cmp
sbb
pop
jge
xchg
mov
fcoms
aam
pop
repnz
ss
pop
cmc
adc
in
or
divb
jmp
popl
fstpl
add
test
mov
jne
jle
mov
xor
scas
lret
dec
dec
adc
cmpsb
jns
out
push
aad
mov
cmp
fdivs
push
xchg
mov
cli
cmp
jo
sub
cmp
dec
lret
xchg
mov
outsl
es
daa
popf
mov
xchg
loop
inc
mov
cmpsl
jle
lret
xor
or
test
inc
sti
mov
jmp
pop
rorl
fcoms
loope
jg
cmp
je
test
xchg
dec
xchg
jecxz
clc
pop
jge
fmul
int3
mov
int3
fldenv
mov
sbb
sub
and
ljmp
push
shrb
xlat
cmp
mov
sub
jb
cltd
icebp
jae
or
jmp
mov
leave
mov
sub
pop
aas
and
xchg
adc
icebp
mov
xor
cmp
jae
adc
fdivs
sbb
pop
or
dec
dec
sbb
jb
daa
lahf
loop
cltd
roll
cld
sbb
movsl
ss
movsb
inc
adc
pop
scas
pop
push
out
lea
adc
fistpl
sbb
adc
jle
dec
stc
or
sbb
pusha
lds
insl
inc
loop
test
or
push
stos
aas
jl
aas
lcallw
jge
xor
es
xlat
daa
dec
inc
mov
addr16
fsubr
mov
pop
inc
and
lret
cmpsl
lods
in
ds
jg
and
sbb
xor
push
inc
outsb
cmp
data16
in
cmpsl
aam
pop
dec
xor
sub
mov
xchg
repnz
mov
out
inc
mov
xchg
hlt
push
jo
fs
push
jns
nop
jge
add
fldt
mov
push
xchg
jmp
loopne
sub
jns
or
mov
ror
into
inc
mov
adc
fldz
mov
mov
mov
divb
adc
pshufw
fwait
jae
aaa
int3
sub
dec
icebp
mov
notb
sub
and
or
ret
push
into
ljmp
hlt
cmp
dec
popf
rcll
nop
ss
pop
loopne
mov
enter
sub
arpl
dec
or
addl
divl
gs
scas
aam
mov
mov
mov
jae
mov
pop
dec
jbe
dec
mov
jmp
push
imul
jae
pop
int3
xchg
sub
rolb
loopne
pusha
dec
movaps
add
lcall
jp
dec
mov
imul
xor
push
cmp
dec
stos
cmp
add
cltd
mov
cs
aad
dec
cmp
xchg
in
mov
jecxz
jg
loopne
jb
xchg
mov
pop
addr16
lds
pop
add
mov
pop
lea
mov
rcll
sub
add
imul
roll
lcall
xor
jl
imul
imul
jnp
jge
jb
mov
dec
cwtl
sbb
shll
nop
xor
jno
das
in
mov
ds
mov
jne
xchg
orl
cmp
and
popa
fstps
cld
lret
ja
outsl
mov
xor
outsb
push
cltd
pusha
push
mull
mov
cltd
fisttps
ss
gs
fwait
out
orl
mov
mov
shlb
daa
inc
cld
cmpsb
pop
and
fwait
dec
pusha
sub
jne
pop
cmc
and
pop
xchg
stos
mov
sbb
ret
push
out
scas
cli
lods
in
pop
movb
cmpsl
jmp
cltd
cltd
aas
jge
movsb
out
hlt
lds
shlb
push
cs
sbb
int3
std
and
jg
inc
mov
and
ljmp
dec
shlb
or
fsubs
repnz
and
xchg
fildll
dec
inc
jns
test
lahf
addr16
lods
xchg
add
out
pop
andb
jnp
lods
stos
add
loopne
cwtl
aas
adc
std
int
lods
jl
lcall
jmp
cmp
fnstcw
das
orl
addr16
xchg
stos
repz
insb
inc
nop
cld
adcl
pop
mov
jne
pop
push
in
ja
pushf
jmp
out
inc
int3
push
push
inc
cmp
int
and
mov
push
outsl
add
push
jb
daa
jg
imul
in
push
daa
leave
cmp
iret
jmp
inc
out
rorl
into
in
push
out
or
jecxz
stos
test
mov
cmpb
adcb
orl
cmp
inc
out
sbb
mov
insb
movsl
loope
repnz
repz
rcrb
xlat
xor
iret
mov
mov
mov
arpl
sbb
adc
push
mov
inc
dec
idivl
adcl
fisttpll
mul
inc
xor
pop
sbb
test
push
js
popf
repnz
sbb
jge
fs
mov
nop
or
adc
push
pop
jl
add
sub
mov
scas
cmc
mov
lods
sub
jb
out
mov
add
jbe
mov
nop
pop
lahf
lret
lahf
or
test
ret
iret
and
and
aaa
sub
or
mov
popf
and
mov
fcomps
pop
imul
repz
data16
mov
dec
int
aas
mov
dec
sub
in
leave
cmc
adc
outsl
shlb
xor
jnp
mov
adc
popf
jns
mov
xor
out
pop
push
lret
cmpsb
cwtl
shrl
or
push
fs
insl
mov
pop
rcr
mov
sbb
mov
std
push
loopne
lock
cmc
mov
xchg
mov
loope
and
ss
pop
inc
clc
cltd
adc
xlat
pop
outsb
sbb
in
std
dec
mov
cmp
ja
and
mov
inc
lods
or
pop
mov
pop
int3
sbb
mov
xor
adc
fwait
sbb
movsl
cmp
jns
js
js
repnz
lods
mov
pop
push
dec
imulb
cmp
shr
gs
loopne
mov
test
adc
hlt
pop
inc
jmp
loop
jle
test
xchg
and
in
fwait
or
inc
ljmp
jmp
fnstsw
in
imul
ds
mov
cmp
xor
mov
out
dec
loopne
lret
loopne
int
leave
fisubrs
or
or
cmp
repz
mov
or
adc
popf
dec
divl
aam
jbe
mov
xchg
int
mov
dec
and
pop
jp
push
sub
xor
dec
sub
push
sahf
dec
enter
or
dec
jnp
mov
sahf
fdivrl
je
jge
fisubrl
mov
inc
shll
inc
scas
sbb
adc
and
fnstcw
icebp
cmp
lods
aad
pop
mov
out
mov
mov
xchg
jecxz
cmp
sub
sbb
sahf
inc
cmp
pushf
cld
std
je
lods
into
sub
in
xor
dec
and
dec
sbb
insb
cmpsl
and
push
mov
pop
mov
inc
jp
inc
add
ret
ficompl
sub
andb
jo
movsb
shrb
cwtl
mov
mov
ljmp
and
les
jl
xlat
push
adc
xchg
movsb
or
mov
arpl
push
and
and
hlt
dec
ret
adc
jno
adc
mov
adc
add
inc
mov
clc
add
nop
push
shlb
nop
pushf
inc
add
jmp
push
or
rol
mov
cwtl
mov
loop,pt
out
mov
or
inc
cwtl
cld
aad
lcall
push
sub
out
pop
sbb
dec
out
mov
or
inc
je
cmp
out
jb
jmp
xor
sub
ljmp
divl
stos
movlps
out
int
sbb
mov
inc
xor
lcall
sub
or
mov
cld
idiv
shlb
push
shl
fstps
testl
sub
inc
mov
cmpsb
add
pop
push
in
in
mov
sub
test
sbb
cmpsb
xchg
lahf
inc
pop
sub
and
cli
loop
cmp
mov
sub
add
pop
jb
ficoml
pop
push
ret
popf
mov
cli
xchg
or
iret
arpl
popf
pop
push
mul
imul
enter
out
mov
sbb
adc
js
sub
jns
and
sub
jo
jp
xchg
imul
or
xlat
icebp
add
icebp
leave
lret
push
cs
mov
xchg
sarb
out
sahf
pop
stos
mov
cwtl
fstps
test
daa
cmp
pop
jno
seta
mov
xchg
fiadds
pusha
mov
mov
sub
ljmp
into
mov
dec
pop
mov
inc
test
inc
dec
fcompl
movsl
jnp
xchg
jp
fxch
mov
adc
jb
mov
pop
sti
and
out
daa
insb
mov
ds
adc
fstps
inc
xchg
imul
scas
lcall
test
imul
cli
lahf
pop
xor
in
xchg
test
out
add
pop
arpl
imul
ror
stc
cmpsl
outsl
iret
cmp
into
notl
inc
inc
sub
inc
popa
mov
leave
sbb
adc
gs
push
mov
test
iret
out
cmp
loopne
dec
mov
inc
stos
and
adc
adc
idivl
int
sbbb
jno
jnp
fists
sbb
cltd
or
lock
fwait
loopne
je
sbb
push
mov
push
loopne
mov
sarl
cmpsb
adcb
repz
mov
test
jp
push
xor
adc
xor
ljmp
es
ret
ds
jmp
mov
add
jnp
fidivrs
xor
cmpsb
fildll
dec
lock
jle
pop
mov
xor
pop
xor
xchg
sub
adc
and
or
clc
pop
xchg
and
jno
movsl
cltd
test
xchg
jmp
lea
insb
cmp
pop
jl
xchg
or
pop
call
sub
mov
leave
adc
movsl
and
fs
orb
cmp
sbb
insl
les
pop
cli
and
jecxz
xchg
dec
adc
or
dec
scas
xlat
cmc
lahf
mov
inc
cmp
test
movsb
cs
fistl
dec
test
push
adc
pushf
ja
stc
aas
inc
add
xchg
add
dec
or
cmp
jno
and
sub
and
scas
and
push
inc
push
cmpsb
xchg
xchg
xor
sbb
xor
push
in
jle
test
xor
ljmp
movsb
push
int3
es
loopne
cli
mov
push
xchg
paddw
or
notl
pop
inc
add
gs
add
sbb
out
es
jnp
std
mov
test
xor
repz
mov
icebp
xchg
cmp
mov
cld
negl
fisttps
jb
dec
sub
lock
test
mov
mov
inc
sub
fstpt
pop
pop
sbb
lds
sbb
mov
sti
adc
repnz
mov
mov
aad
sub
jne
jmp
mov
xor
fcomps
sub
hlt
xchg
sub
cmp
std
add
push
xchg
mov
loope
cmp
fdivrl
mov
mov
mov
sbb
add
test
mov
mov
pop
add
cltd
test
mov
je
mov
sub
pusha
in
jb
cmp
lcall
pushf
xchg
jp
dec
mov
into
ret
and
push
mov
inc
xchg
cmp
add
imul
mov
jae
popa
outsb
cli
adc
jp
loopne
fistps
call
ficomps
int
leave
mov
cs
test
sub
cmp
ja
or
sahf
pop
inc
ret
in
in
rorl
or
pop
dec
and
push
aaa
mov
xor
cmpsl
sub
sub
nop
sbb
fs
push
test
sub
dec
adc
fwait
cmpsl
push
fs
pop
mov
adc
cmp
out
movsl
out
addr16
arpl
jg
outsb
and
out
sbb
push
ds
std
xor
cmp
xor
adc
dec
clc
pop
je
fcmovnbe
arpl
loop
push
cli
test
jno
andb
rclb
cmp
jle
mov
cmp
pop
xchg
and
test
sti
add
mov
mov
les
stos
cmp
pop
jge
shll
insb
rclb
fwait
sbb
pop
add
pop
cmpsb
jp
aad
arpl
rorl
or
scas
fistpl
addl
ret
popa
jb
cmpsb
in
imul
scas
sbb
fwait
sub
aad
neg
test
incl
fidivl
mov
or
sub
inc
dec
loope
sbb
sbbb
dec
push
cli
mov
cmp
xor
adc
and
in
pop
lcall
cmp
sub
jecxz
js
sub
mov
in
push
cmpsb
shr
bound
fisttpll
xchg
gs
movsl
fistl
and
fsub
add
pop
inc
dec
or
add
repnz
jl
mov
pop
lret
add
pop
lret
pop
adc
daa
dec
lods
jno
hlt
xchg
insl
or
cs
fstpt
mov
mov
add
cmpsl
lahf
jb
inc
jo
inc
loope
sub
shlb
cli
adc
or
adc
adc
lods
aam
bound
dec
jno
cmc
lahf
into
je
add
jmp
stos
sbb
add
xchg
lret
dec
adc
pushw
sub
outsl
pop
imul
mov
dec
inc
mov
jo
push
and
loopne
in
add
dec
call
cltd
out
or
mov
add
loope
or
mov
pop
jecxz
mov
stos
mov
and
mov
leave
pop
jns
inc
je
or
ljmp
loope
jmp
pop
daa
sbb
mov
repnz
cmpsb
lods
dec
or
test
in
cmp
in
push
jbe
mov
mov
inc
push
sbb
rcll
push
out
fstpt
adc
xor
mov
aas
push
pop
dec
out
lret
clc
repnz
or
insb
dec
mull
movsb
aad
fld
insl
push
dec
aas
mov
push
push
ret
cmpsl
bound
rcrb
and
fwait
mov
jne
iret
ret
pop
jne
adc
jg
enter
divl
mov
push
out
mov
inc
mov
shlb
xchg
pop
fisubrl
sub
mov
inc
adc
rorb
sarl
es
lds
jae
push
and
aas
shl
loop
fildll
xor
shrl
push
bound
and
scas
push
js
cli
mov
mov
sbb
mov
inc
loop
and
frndint
ja
pusha
outsb
inc
pop
adcl
daa
or
leave
push
jg
idivb
push
sbb
pop
and
in
lret
jns
dec
jb
sbb
fldenv
flds
insl
std
imul
adc
mov
push
pop
mov
test
pop
pop
mov
push
fs
cmp
in
into
add
adc
stos
dec
jmp
rep
out
lock
mov
ret
test
adc
lods
ret
push
push
in
pop
or
lock
fdivl
lret
jl
je
add
lret
push
cmp
pop
sbb
inc
pop
mov
mov
and
push
or
lock
jp
or
jecxz
shrb
pop
add
xchg
fstl
rcrl
fiaddl
adc
movsl
arpl
mov
xchg
mov
dec
pop
pop
xchg
nop
repnz
int
test
cmp
fldt
mov
and
pop
js
enter
mov
mov
fdivs
pop
xor
mov
leave
ficoms
rorl
dec
icebp
fyl2x
stos
mov
ja
xor
mov
in
fsubrl
fists
mov
mov
insb
pushf
gs
add
add
dec
pop
jo
dec
fs
dec
xchg
imul
cld
jbe
or
add
xchg
mov
pop
and
outsb
or
repnz
jo
in
cwtl
cmp
outsl
xor
fcmovnu
sub
sbb
loop
xchg
mov
mov
lods
add
fisttps
push
bound
mov
test
pop
icebp
add
dec
or
fsubrs
popl
xor
leave
sub
dec
sbb
outsb
inc
cmpsl
and
call
cltd
xchg
xor
lahf
mov
mov
pop
mov
pop
mov
jecxz
imul
xchg
dec
stc
adc
sbb
xlat
inc
and
push
xchg
mov
sbb
fdivrl
and
adc
fistpl
jnp
cmp
push
lcall
cmp
rolb
mov
lret
lret
jl
ror
xchg
xlat
stos
sahf
mov
enter
jae
push
jb
in
dec
lods
jge
aad
push
outsb
xchg
loopne
add
lea
jo
jb
add
aam
lea
lret
xchg
cmc
jmp
test
push
inc
add
shll
dec
in
inc
les
mov
inc
inc
cmpsl
push
sub
jl
sbb
iret
sub
pop
dec
sub
pop
jl
lock
jbe
int
test
scas
scas
cmpsl
pop
popf
daa
shlb
nop
aaa
and
ss
inc
mov
mov
or
idivb
jg
mov
adc
aas
push
mov
sbb
push
das
lret
adc
loop
ret
cmc
cmp
shll
pop
insb
sahf
jbe
or
pusha
in
repz
ret
out
fldcw
mov
dec
repnz
fsubl
loope
add
push
inc
xchg
cmp
fdivr
xor
in
inc
mov
inc
dec
push
stos
xorb
lods
fbld
stc
jg
jae
imul
push
and
mov
jg
lret
inc
xchg
mov
mov
sarl
add
leave
cltd
jg
clc
insb
popf
sbb
das
movsl
shrb
adc
push
pop
dec
divl
out
pop
or
sub
lahf
push
xchg
ljmp
push
cltd
and
mov
pop
jae
xor
push
jno
insl
daa
cwtl
jne
jbe
mov
pop
test
push
inc
add
push
rcll
sub
dec
out
hlt
and
lahf
xor
mov
fldcw
hlt
cmp
insl
pop
mov
or
in
repz
loopne
xchg
mov
sbb
sub
nop
out
cs
push
test
fwait
or
mov
loopne
fadd
inc
out
jo
movsl
scas
or
mov
pop
dec
test
out
jno
ret
or
adc
push
and
inc
mov
dec
js
cmpsb
rcrl
cld
call
xor
jb
jbe
stos
pop
xchg
and
pop
xchg
add
stos
and
mull
xor
shlb
sbb
and
pop
sub
imul
or
mov
jle
stc
push
pop
lods
mov
sti
cs
xchg
or
loopne
xor
in
ds
sbb
rcrb
add
add
das
testb
pop
cs
and
xchg
insl
das
xchg
push
dec
test
pop
mov
jge
xchg
addr16
ljmp
jns,pn
xor
and
dec
or
ficomps
cli
lcall
and
shrb
les
jno
pop
xchg
fcom
inc
push
negb
adc
adc
add
imul
jmp
leave
testl
xor
add
scas
or
mov
outsb
addl
push
mov
mov
int
notl
les
add
cmp
enter
pop
dec
lods
mov
xchg
jl
xlat
aam
test
dec
sub
add
mov
and
ss
into
and
lahf
dec
jmp
jg,pn
add
loopne
mov
rolb
or
dec
mov
adc
outsb
dec
inc
inc
sub
test
nop
lock
lret
sub
push
or
adc
xchg
cs
adc
int
imul
jle
pop
shll
cltd
mov
dec
add
hlt
call
mov
xchg
cmp
mov
imul
adc
pusha
jecxz
add
push
and
mov
repz
aam
sbb
and
dec
jne
cmp
imul
jns
jge
mov
jge
in
or
test
hlt
test
pop
ja
xor
and
adc
repnz
lret
sub
sub
enter
jnp
xor
ds
in
in
mov
scas
sahf
jg
mov
icebp
sbb
dec
and
or
or
dec
or
shll
in
fneni(8087
int
pop
fstpl
pop
popl
dec
xlat
loope,pn
stc
push
pushf
mov
xchg
scas
shll
lock
dec
mov
fs
pop
xor
cmp
stos
repz
and
cmc
xor
adc
sti
dec
mov
lods
lds
jmp
call
lahf
leave
or
jo
mov
mov
xchg
jne
mov
das
testl
mov
pop
push
movsl
xchg
dec
out
cs
leave
shlb
jns
enter
in
adc
fisttpll
push
adc
mov
sbb
fidivrs
out
jbe
aaa
push
and
mov
int
jb
dec
mov
jb
cmp
je
ljmp
push
add
enter
pop
imul
push
cmc
adc
sbb
xchg
xchg
add
mov
mov
arpl
inc
mov
and
fildl
push
scas
mov
fstpl
push
cltd
and
inc
pushf
negb
xchg
fsubl
mov
inc
mov
iret
enter
lea
cld
cmpsb
mov
out
mov
pop
int
es
dec
shrb
scas
ljmp
mov
inc
cmpsl
xacquire
pop
daa
xor
adc
jecxz
lods
fnstsw
xor
inc
cmp
pushf
pop
xchg
push
in
loopne
pop
and
shlb
add
test
pop
pop
test
fptan
add
js
iret
mov
xor
stos
push
sub
xchg
jno
dec
mov
imul
jb
iret
iret
ficomps
out
ffreep
pushf
sti
test
ss
fdivrp
test
pusha
inc
lret
inc
inc
cli
stc
test
cmp
outsl
and
push
jno
movsl
or
ljmp
rcr
in
mov
addr16
lds
xor
pop
int3
push
shl
dec
jl
les
mov
ret
xchg
ret
out
xor
pop
mov
add
jecxz
cmp
ds
addb
sbb
out
mov
fisubs
lret
scas
mov
ret
fisttpll
mov
rcrb
jp
std
orl
popa
adc
push
test
insb
hlt
shrl
inc
or
push
arpl
daa
popa
aad
jmp
jmp
mov
out
pop
insb
xor
ficomps
add
push
fistl
pop
and
or
mov
inc
dec
fs
or
and
xchg
jbe
mov
test
clc
jp
fiaddl
loop
fidivrl
pusha
sti
repz
stos
test
shrb
movb
push
dec
outsb
xchg
and
fs
int
add
and
cli
xor
leave
jp
xchg
popf
outsb
jecxz
push
in
cwtl
cld
outsl
sbb
orb
or
repz
sbb
push
rcrb
imul
cmpsb
fstpt
dec
xor
and
popf
out
add
mov
stc
ljmp
xor
rcrb
pushf
mov
cmp
iret
inc
aam
mov
stos
fisttpl
shll
mov
aad
out
adc
inc
dec
stos
mov
ds
outsb
pusha
cmp
out
and
jge
aam
popf
int3
cmp
jnp
out
xor
xchg
test
jecxz
fwait
sbb
push
lret
insl
mov
sub
mov
xorl
mov
or
lcall
mov
cltd
xchg
xor
imul
imul
mov
add
or
dec
imul
jecxz
cli
ret
imul
push
xor
repz
movsb
push
sbb
ss
cmp
push
lods
cmpsb
fsubrl
dec
test
mov
push
inc
add
adc
fwait
or
je
mov
push
add
mov
xchg
cmp
ds
ret
cmc
inc
pop
sub
loope
pop
inc
or
hlt
pop
fnstsw
push
orl
inc
jge
test
mov
lods
in
push
ja
pop
sti
icebp
adc
lret
rolb
pushf
add
pop
test
fnstsw
lahf
mov
mov
dec
mov
daa
adc
fbstp
mov
xlat
mov
sbb
and
scas
inc
inc
xchg
jns
push
or
inc
pushf
enter
aam
aaa
sbb
dec
cmp
xor
mov
lds
lret
loop
popa
mov
jl
popf
or
popa
sarl
test
pop
push
lcall
aad
mov
cmc
push
mov
dec
xchg
jo
dec
push
cmpsb
pop
scas
xlat
mov
sarb
jecxz
cmp
mov
mov
sbb
rolb
ja
cmp
cmp
lret
lds
mov
adc
subb
mov
pop
cmp
insl
mov
int
div
pop
xchg
jp
into
or
rclb
fwait
mov
sahf
sbb
push
mov
xor
dec
sbb
in
bnd
add
stc
stc
cmovp
dec
ret
sub
inc
xor
jle
mov
jne
scas
mov
jns
push
js
sbb
jb
pop
addl
push
stos
mov
loopne
popf
add
repnz
push
pop
mov
ja
jl
jmp
cmp
dec
mov
sbb
into
rolb
clc
je
je
pop
sub
fldt
xlat
aam
adc
jae
adc
popf
imul
and
popa
xchg
inc
test
aaa
jo
in
jp
ds
dec
pusha
mov
rcl
pop
xlat
push
dec
loop
pop
daa
out
dec
or
shl
in
cmp
ret
loopne
push
mov
pop
gs
fsubl
cwtl
or
mov
add
sub
inc
pushf
loop
pop
jbe
sbb
outsl
icebp
sub
popa
mov
in
jns
inc
and
lock
mov
add
xor
inc
mov
and
lods
mov
mov
mov
inc
clc
inc
imull
mov
mov
sub
mov
in
leave
fucom
jl
sbb
pop
jmp
inc
dec
pop
pop
faddl
rclb
aaa
dec
xchg
jg
les
mov
sub
jp
loopne
loopne
push
gs
sbb
jle
int
ljmp
imul
adc
mov
jg
jg
popf
dec
or
mov
shlb
cmpsb
xchg
inc
ret
loop
leavew
lret
fs
pushf
xchg
test
fiaddl
icebp
xchg
xor
xchg
and
dec
sbb
rcll
clc
xchg
jg
or
sarl
ret
popa
sbb
cmp
mov
stos
or
lahf
outsb
jg
fcompl
lds
push
add
bound
jmp
xor
aaa
sub
nop
out
aad
imul
fstps
xchg
arpl
test
repnz
or
mov
loop
xchg
nop
sub
push
dec
fsubrp
out
clc
mov
xor
test
stos
push
and
arpl
or
jl
push
shrl
mov
hlt
or
inc
dec
xchg
push
ret
ja
stc
shlb
push
fistpl
in
push
mov
cli
popa
je
mov
inc
jb
into
mov
cmp
mov
in
mov
lcall
xor
push
pop
and
jg
cmp
cmp
repnz
dec
ret
mov
data16
lret
lds
sub
mov
mov
in
enter
push
repz
das
xor
aas
jecxz
icebp
mov
xor
loop
mov
dec
push
jno
mov
sbb
or
xchg
add
xchg
jae
jmp
mov
push
mov
or
das
xor
and
push
sub
push
fbld
jo
aad
pop
xchg
xchg
dec
lods
sub
push
mov
xchg
pop
icebp
add
sbb
icebp
loopne
mov
fstps
sbb
sbb
pop
repz
mov
das
pop
jns
sub
cwtl
cmpsl
bound
inc
fcmove
and
xchg
inc
fs
stc
pop
dec
inc
testb
dec
in
mov
pop
mov
cld
pop
loop
xor
fidivs
nop
push
in
je
xchg
mov
insb
iret
imul
mov
or
mov
push
out
and
and
jb
mov
mov
jbe
jle
leave
cmp
pslld
xor
out
mov
mov
push
dec
push
test
push
je
cmp
push
cmpsl
movsl
cmp
ds
dec
clc
push
cmp
sub
push
sbb
les
xchg
stos
call
inc
adc
dec
stos
push
mov
pop
jno
mov
orb
dec
in
sub
xlat
imul
adc
sti
cmc
movsl
scas
inc
cwtl
repnz
divb
or
xchg
cmp
or
ja
xchg
mov
push
mov
dec
cmp
retw
and
adc
out
outsb
pop
test
adc
cli
push
leave
and
jg
xchg
push
or
daa
add
cmp
inc
jl
xor
pop
pop
xchg
repnz
jo
out
or
mov
ljmp
int3
cmp
add
movsl
fs
les
push
cmpsl
dec
mov
or
jg
js,pt
push
popa
xchg
xchg
scas
lods
mov
fisttpl
jno
adc
into
xchg
mov
test
xor
xchg
cmc
scas
stc
push
mov
pop
xchg
push
mov
call
inc
add
jnp
aad
jle
imul
in
fbstp
xchg
int3
xchg
lahf
shlb
inc
sub
cwtl
int
shlb
iret
pop
mov
and
xchg
or
or
push
mov
nop
cld
jle
test
pushf
cltd
scas
sub
imul
xor
add
ds
mov
hlt
lret
push
mov
stc
js
lea
xchg
aad
arpl
sub
int
push
arpl
stos
cld
adc
nop
repz
adc
and
pop
ss
imul
cwtl
subl
aam
pusha
or
mov
les
mov
or
cmp
bound
ss
aad
inc
in
jo
popa
mov
push
rcr
shl
fsub
cmc
fwait
xchg
xor
test
xchg
and
push
test
jp
add
mov
les
out
sub
je
adc
lods
inc
mov
pop
idivb
loope
mov
sbb
mov
inc
int3
repnz
fnsave
lock
nop
or
shrl
xor
jecxz
ficompl
in
add
addr16
andl
inc
aaa
xchg
sub
xchg
jge
xchg
fwait
mov
mov
data16
aad
mov
xor
std
je
and
sbb
jle
pusha
sbb
push
cld
fcomps
push
jb
enter
sbb
inc
and
pop
pop
fsubs
sbb
jle
int3
cmp
daa
jno
adc
ljmp
sbb
push
or
fistps
mov
or
xchg
lahf
pcmpeqb
or
mov
and
call
insl
rcrl
insb
cmp
xor
test
mov
sub
or
jno
aad
lods
mov
cmp
lock
in
mov
push
js
fwait
sbb
fsubrs
jecxz
in
or
daa
popa
jbe
aaa
mov
mov
inc
arpl
sub
adc
icebp
divl
imul
mov
push
dec
add
pop
push
mov
fdivp
shll
into
sbb
andl
inc
leave
mov
rorb
test
inc
repnz
pop
loope
paddw
jge
sbb
jge
xchg
lods
adc
adc
lret
lock
mov
and
jecxz
sbbb
dec
ljmp
cmp
outsb
adc
jbe
loopne
push
addr16
rcrb
ljmp
or
pop
dec
adc
sub
and
dec
adc
rclb
mov
arpl
std
scas
dec
adc
test
mov
lret
or
push
scas
mov
out
in
lods
xlat
js
aad
stos
daa
cmp
pop
icebp
je
dec
sbb
mov
std
mov
jne
pop
mov
sbb
pop
pop
pop
loop
xor
popf
mov
jmp
data16
dec
testb
push
fisttps
xchg
test
mov
jae
loopne
dec
enter
popf
add
pop
pop
clc
sahf
sub
xchg
inc
or
imulb
xchg
test
xchg
rolb
rorl
xchg
scas
sbb
push
push
sbb
fs
push
enter
mov
pop
ret
xchg
cmp
popa
fwait
repz
ss
pop
lock
add
or
add
mov
sbb
shr
ja
fucomi
leave
push
mov
mov
rcr
lods
mov
loop
inc
jbe
std
outsl
movsl
fcmovne
iret
push
divb
mov
or
dec
inc
in
mov
cmp
push
xchg
lds
lods
cmp
dec
insb
add
add
pop
test
jno
cwtl
add
push
jnp
xchg
shll
js
rcrl
insl
inc
in
jp
in
cmp
loop
out
movsl
or
add
push
shr
sub
jae
jns
or
imul
push
xchg
out
in
loopne
fwait
xchg
inc
lock
pusha
inc
jno
pushf
mov
shl
lock
adc
xchg
pop
pop
or
inc
inc
pop
pop
sbb
sahf
leave
nop
addr16
mov
cmpsl
xchg
dec
sub
xchg
mov
mov
inc
inc
div
or
daa
int
adc
enter
sti
icebp
testl
add
enter
sbb
lods
stc
pushf
xchg
cli
mov
aas
mov
mov
add
pop
fists
mov
outsb
repnz
sub
inc
pop
dec
cld
fisubrl
inc
mov
repz
pop
xchg
pop
or
and
sbb
xor
sbb
sbb
popf
mov
cmp
rcl
mov
test
sbb
jp
jae
adc
sbb
imul
pop
andb
pop
inc
fldt
mov
popf
rorb
jne
test
mov
imull
jb
jmp
mov
mov
push
ret
jbe
xchg
xlat
jnp
mov
jne
xchg
enter
add
fld1
lahf
jne
dec
push
xchg
mov
hlt
mov
push
adc
addr16
add
sbb
push
xlat
in
jg
lods
cmp
das
jo
xchg
loopne
push
adc
sarl
cwtl
push
in
mov
dec
movsb
mov
cmp
xchg
call
push
xor
add
mov
inc
xor
ljmp
jnp
aaa
pop
xchg
fisubrl
lods
lret
movsl
repnz
or
jle
inc
xchg
mov
mov
mov
call
cmpsl
cmp
lahf
xor
nop
sub
mov
pusha
mov
sbb
xchg
pop
or
sti
mov
sub
scas
add
stos
add
sub
fadds
pop
mov
lret
sti
dec
loop
icebp
xchg
push
push
mov
xchg
push
xchg
jb
fstl
lret
and
nop
mov
cwtl
rorl
movsl
rcr
scas
in
xchg
jg
insl
cmc
sets
arpl
push
aad
aaa
xor
mov
adc
fwait
pusha
adc
cwtl
xchg
or
cmpsb
jne
push
fisttpl
mov
test
xchg
add
ret
outsl
fs
aam
or
dec
std
cs
mov
inc
inc
cmp
add
lcall
pop
aaa
clc
stos
pusha
sti
leave
popa
cmc
rcl
push
xchg
or
ss
mov
pop
xchg
mov
insl
loop
ja
test
outsl
cwtl
cs
jg
inc
lods
push
or
mov
stos
xor
outsb
lahf
decl
sbb
inc
or
fwait
scas
cld
jbe
sub
xor
xlat
fimuls
insb
not
cld
cli
cmpsb
jae
mov
stc
add
movsb
mov
mov
add
arpl
lcall
mov
add
sti
sarb
add
push
and
sbb
pop
shrl
jne
mov
push
and
jg
inc
test
cwtl
jecxz
mov
jnp
pop
shlb
fmuls
pop
mov
push
jne
inc
out
mov
mov
je
sbb
mov
ret
add
mov
adc
add
push
fxch
imul
jle
pop
nop
aas
add
clc
addr16
pop
lock
adc
add
mov
sbb
xchg
jle
xchg
jns
aad
xchg
int
mov
test
dec
ret
pop
insb
jl
cmp
adc
mov
or
mov
dec
sub
movsb
imul
je
mov
xor
xchg
adc
outsb
jbe
ret
dec
push
sub
pop
add
or
ret
enter
into
pop
xchg
jmp
mov
jge
lret
xchg
xor
sub
int3
cli
bound
scas
mov
les
fs
add
pop
mov
push
jns
imul
les
push
loopne
cmc
mov
jne
lods
add
cmpsb
dec
inc
lcall
adc
mov
xchg
sub
xor
mov
enter
push
dec
fcomi
lcall
xor
aas
dec
insl
adc
mov
stos
xor
and
add
frstor
aad
pop
popa
add
adc
push
lahf
jbe
jae
dec
xchg
mov
xchg
lret
lds
ljmp
and
jnp
test
loopne
inc
aad
shll
push
out
mov
arpl
insl
jns
scas
jbe
and
stos
mov
push
sub
mov
fstps
rdpmc
popf
call
js
arpl
loopne
call
pop
mov
movsl
popa
sbb
bound
popf
xlat
sub
pop
sub
sbb
mov
or
adc
pusha
dec
sub
add
rcrb
dec
jmp
mov
push
mov
jnp
add
cwtl
aam
in
ljmp
lahf
xor
adc
jns
cmp
in
cmp
mov
push
shlb
test
mov
xchg
and
xor
add
push
nop
hlt
pop
dec
pop
mov
and
push
lods
test
lock
jno
lahf
test
mov
lahf
xor
ds
fistl
les
or
push
pop
int
out
mov
ljmp
das
in
jb
out
xchg
xchg
cmp
or
imul
xchg
push
inc
push
lods
shl
lock
imul
mov
jp
lods
jle
mov
add
sti
and
cwtl
into
repnz
js
pop
out
andl
testb
push
inc
mov
cmp
cmpsl
daa
lret
lea
movsb
push
and
lahf
in
mov
jno
leave
lcall
test
es
scas
cld
add
test
cmpsl
jbe
fsubrp
popf
jb
pop
mov
or
push
in
xor
push
les
mov
push
mov
push
jp
add
cmpl
xchg
lahf
sub
leave
or
mov
push
dec
shrb
add
xchg
lcall
xchg
inc
ljmp
adc
daa
test
inc
ficoml
int
pop
orl
fimull
jl
inc
gs
dec
add
mov
and
