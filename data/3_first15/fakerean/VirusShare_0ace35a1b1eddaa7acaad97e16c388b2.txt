movl
mov
movb
movb
mov
test
je
mov
push
call
test
mov
je
mov
movb
jmp
testb
jne
mov
andl
test
jne
testb
jne
add
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
lea
push
lea
call
pop
mov
test
mov
je
push
call
jmp
mov
push
call
jmp
cmp
je
jmp
push
call
cmp
pop
je
call
mov
test
je
mov
push
call
test
mov
je
andl
andw
lea
lea
mov
mov
lea
mov
push
push
movl
movl
call
lea
call
mov
lea
push
add
push
call
pushl
pushl
call
pop
pop
jmp
scas
jge
adc
jle
adc
jle
adc
add
add
add
add
add
add
push
mov
push
push
push
call
xor
cmp
pop
je
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
push
call
mov
sub
je
dec
jne
pushl
mov
pushl
push
call
mov
test
js
mov
mov
xor
pop
pop
pop
pop
ret
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
cmpl
jge
push
push
push
call
mov
andw
mov
mov
mov
mov
movw
call
andl
push
mov
lea
mov
call
lea
test
je
lea
mov
mov
push
push
call
mov
mov
push
call
mov
push
call
cmpb
pop
push
jne
call
push
pushl
call
add
jmp
call
mov
cmpl
pop
jge
mov
dec
jns
mov
dec
jns
mov
push
call
mov
andl
cmpl
pop
pop
pop
jge
lea
call
xor
leave
ret
push
mov
mov
test
jne
call
test
je
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
pop
ret
xor
pop
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
call
push
call
pop
xor
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
push
call
pop
xor
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
cmp
je
cmp
jne
mov
mov
push
push
call
mov
mov
mov
xor
pop
ret
mov
mov
call
jmp
xor
jmp
cmpl
jne
cmpl
je
push
pushl
call
pop
mov
call
cmpl
pop
je
mov
push
call
ret
xor
jmp
push
mov
push
push
push
mov
test
je
mov
push
mov
push
lea
push
push
call
mov
test
jne
andl
push
lea
call
mov
lea
push
push
call
mov
and
mov
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
mov
push
call
lea
call
cmpl
jne
cmpl
je
mov
lea
push
push
call
test
jne
pushl
mov
mov
push
push
call
mov
test
jne
mov
lea
mov
call
lea
mov
call
pushl
mov
pushl
pushl
push
push
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
xor
mov
mov
pushl
mov
mov
call
test
pop
je
inc
cmp
jb
jmp
add
add
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
cmpl
push
push
je
mov
mov
test
je
mov
decl
mov
sub
cmp
jbe
cmp
je
movzbl
movzbl
sub
pop
pop
ret
inc
inc
cmpl
jne
mov
neg
sbb
jmp
add
jmp
cmpl
push
mov
je
mov
call
cmpl
je
mov
test
jne
mov
push
mov
call
pop
ret
mov
push
mov
add
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
add
call
mov
add
cmp
mov
mov
jae
mov
test
lea
je
push
mov
cmp
jb
pop
mov
mov
add
mov
test
je
cmpl
je
push
call
add
pop
pop
ret
lea
mov
test
je
jmp
imul
push
lea
push
push
call
add
push
call
add
pop
pop
ret
push
mov
test
je
mov
call
pop
ret
push
mov
push
push
push
mov
mov
test
jne
pop
leave
ret
andl
push
mov
lea
add
call
mov
mov
andl
push
mov
lea
call
mov
andl
xor
mov
call
lea
call
lea
call
jmp
push
push
mov
cmpl
je
add
push
lea
mov
call
test
je
cmpl
je
push
pushl
mov
call
pop
pop
ret
mov
call
xor
jmp
push
mov
and
sub
push
lea
mov
push
call
test
jne
mov
call
test
mov
jne
andl
lea
lea
push
lea
mov
movl
movl
mov
call
mov
mov
test
jne
mov
mov
mov
mov
call
pushl
mov
push
call
test
jne
andl
andl
mov
mov
mov
mov
mov
mov
mov
call
mov
push
pushl
lea
push
push
call
test
je
mov
mov
call
test
jne
mov
xor
cmp
jne
cmp
je
lea
call
mov
push
push
call
mov
lea
call
mov
pop
pop
mov
pop
ret
mov
call
jmp
orl
cmp
movl
mov
movl
mov
mov
mov
mov
movb
mov
mov
je
xor
cmp
je
push
call
movl
test
mov
je
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
mov
mov
push
mov
test
push
mov
je
cmpb
je
test
je
test
mov
mov
mov
mov
movl
je
movl
test
jne
mov
test
je
lea
movsbw
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
test
push
push
mov
je
cmpb
je
mov
test
je
lea
cmp
je
cmp
je
mov
add
test
jne
mov
push
call
mov
mov
add
test
je
test
mov
je
jmp
lea
movsbw
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
add
test
jne
mov
movsbw
push
call
add
test
jne
cmpb
je
movsbw
push
call
add
test
jne
mov
cmp
je
test
mov
mov
jne
mov
mov
sub
mov
cmp
je
jle
mov
mov
mov
push
push
push
call
add
test
je
movsbw
push
call
add
test
jne
cmpb
je
movsbw
push
call
add
test
jne
mov
test
jne
mov
cmpl
jne
mov
pop
pop
pop
pop
mov
xor
call
add
ret
mov
test
je
cmp
je
movsbw
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
mov
add
test
jne
cmp
je
mov
sub
add
push
call
mov
add
test
je
push
push
push
call
add
test
mov
mov
je
sub
movb
mov
pop
pop
pop
pop
xor
xor
call
add
ret
push
mov
push
push
push
mov
push
push
pushl
lea
mov
call
xor
cmp
jne
lea
cmp
je
lea
mov
mov
call
push
lea
call
mov
call
testb
jne
push
pushl
call
mov
mov
call
add
je
lea
mov
mov
push
call
mov
andb
mov
call
mov
call
pop
pop
xor
pop
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
mov
cmpl
je
push
push
call
test
pop
je
mov
andl
movl
mov
mov
push
call
test
mov
je
mov
push
call
mov
mov
push
pushl
push
call
lea
call
pop
pop
leave
ret
xor
jmp
mov
push
mov
push
lea
mov
call
cmpl
je
lea
mov
call
test
jne
cmpl
jne
mov
mov
push
call
cmpl
je
mov
test
je
mov
test
je
mov
push
push
call
pop
xor
pop
ret
mov
test
je
mov
call
jmp
push
mov
push
mov
push
mov
xor
mov
cmp
je
cmp
jbe
push
mov
mov
mov
mov
sub
cmp
mov
jb
mov
cmpl
lea
ja
mov
push
call
test
jne
mov
cmp
je
jmp
andl
lea
push
pushl
mov
pushl
neg
sbb
add
push
pushl
and
push
call
test
jne
mov
add
sub
add
cmpl
ja
cmpl
pop
jbe
xor
pop
pop
pop
ret
xor
jmp
push
mov
push
mov
cmpb
jne
cmpl
je
mov
push
mov
sub
test
jg
mov
add
lea
push
adcl
mov
mov
andl
sub
push
mov
add
push
mov
mov
push
call
test
pop
js
mov
add
xor
pop
pop
ret
mov
test
je
cmpl
jne
mov
push
call
push
mov
test
je
pushl
call
mov
cmpb
jne
mov
push
call
lea
mov
test
jne
pop
ret
mov
push
call
xor
mov
call
jmp
cmpb
je
cmpl
jne
push
mov
test
je
mov
mov
call
cmpb
je
cmpl
jne
mov
jmp
xor
inc
pop
ret
xor
ret
andl
cmpl
je
pushl
mov
push
pushl
pushl
call
ret
mov
test
jne
xor
jmp
push
mov
sub
push
mov
mov
mov
push
push
mov
push
push
push
pushl
mov
pushl
lea
lea
mov
movl
call
mov
pushl
mov
push
call
mov
mov
lea
push
push
pushl
pushl
push
call
lea
push
pushl
lea
push
push
call
mov
mov
mov
cmpb
lea
movsl
movsl
movsl
movsl
jne
mov
sub
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
push
pushl
pushl
push
call
pop
pop
pop
leave
ret
push
mov
mov
sub
cmp
jne
leave
ret
call
mov
sub
mov
neg
sbb
inc
mov
xor
ret
push
mov
push
push
mov
push
lea
movl
movl
call
mov
call
andl
mov
mov
mov
lea
push
push
call
cmpl
je
lea
call
mov
test
jne
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
mov
test
je
mov
push
call
pop
pop
leave
ret
push
mov
sub
cmpb
je
cmpb
push
je
xor
cmp
push
mov
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
push
mov
mov
and
jne
cmp
jne
pushl
lea
call
cmp
jne
mov
pushl
mov
push
call
test
jne
push
lea
mov
call
mov
mov
lea
push
pushl
pushl
push
call
test
jne
pushl
mov
mov
push
pushl
push
call
test
mov
jne
mov
mov
mov
push
mov
mov
mov
call
incl
pop
lea
push
pushl
pushl
call
pop
pop
push
pushl
pushl
call
add
test
je
pushl
mov
pushl
mov
pushl
call
add
mov
mov
xor
decl
mov
pushl
mov
push
call
mov
mov
push
push
call
test
jne
add
push
mov
call
pushl
call
pop
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
mov
mov
lea
mov
cmp
je
cmpl
je
mov
not
movzbl
shr
and
pop
ret
push
push
push
call
test
jne
xor
pop
pop
pop
jmp
push
mov
push
push
push
mov
mov
xor
cmp
je
mov
push
call
mov
cmp
mov
je
cmp
jne
mov
cmp
jne
lea
call
pop
pop
leave
ret
cmpl
jne
push
push
lea
call
mov
xor
inc
mov
mov
push
call
add
mov
ret
push
mov
push
mov
push
push
xor
cmp
jne
lea
call
add
je
mov
mov
cmp
je
call
mov
cmp
mov
je
mov
push
call
pushl
lea
mov
call
testb
je
mov
mov
call
add
test
je
inc
add
call
push
lea
call
test
je
lea
mov
mov
push
call
cmpl
je
mov
mov
call
mov
call
pop
pop
xor
pop
pop
ret
mov
test
je
lea
push
movl
mov
push
call
add
add
test
ljmp
push
call
jmp
xor
jmp
push
mov
push
push
mov
cmpb
jne
push
push
xor
call
mov
and
test
pop
je
mov
push
call
mov
test
pop
je
mov
mov
push
call
mov
mov
push
call
lea
call
leave
ret
push
mov
push
push
cmpl
je
mov
andl
testb
mov
jne
testb
je
mov
mov
push
call
lea
call
leave
ret
mov
mov
test
jne
mov
xor
cmp
je
dec
cmp
mov
je
ret
cmp
je
cmp
jne
push
mov
call
pop
jmp
cmp
jne
movl
call
jmp
push
mov
sub
push
mov
push
xor
push
lea
mov
mov
call
mov
mov
lea
push
pushl
push
call
cmp
je
push
pushl
call
pop
mov
mov
mov
lea
push
push
call
mov
xor
push
inc
call
cmp
jbe
mov
mov
mov
push
lea
mov
call
mov
lea
push
pushl
push
call
pushl
mov
lea
mov
call
push
pushl
pushl
pushl
pushl
call
add
cmp
lea
je
call
lea
call
lea
call
lea
call
pop
pop
xor
pop
leave
ret
call
lea
call
incl
mov
cmp
jb
jmp
cmpl
je
mov
pushl
add
call
neg
sbb
and
add
ret
push
mov
sub
push
push
lea
push
mov
lea
mov
movsl
movsl
movsl
mov
lea
mov
mov
mov
mov
mov
mov
test
je
mov
mov
call
mov
andl
andl
mov
test
mov
lea
mov
movsl
movsl
movsl
je
call
mov
call
test
jne
xor
pop
pop
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
call
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
mov
leave
ret
push
push
mov
push
mov
test
je
mov
mov
call
cmp
je
mov
test
je
push
call
mov
mov
mov
mov
call
test
jne
push
mov
call
mov
push
push
call
pushl
mov
call
add
ret
push
call
pop
test
je
mov
mov
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
push
call
pop
jmp
mov
mov
mov
call
cmp
jne
jmp
xor
jmp
int3
int3
int3
mov
mov
push
mov
push
mov
shr
cmp
push
jae
mov
lea
mov
and
test
je
test
jne
mov
mov
pop
pop
pop
ret
mov
sub
lea
mov
call
test
je
mov
lea
push
push
push
call
add
jmp
movzwl
shl
add
pop
lea
pop
mov
pop
ret
push
mov
call
add
test
je
cld
les
mov
mov
rep
mov
mov
shr
shr
and
mov
mov
mov
pop
mov
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
push
mov
call
movl
mov
mov
mov
mov
pop
lea
push
lea
movl
call
test
je
mov
lea
add
push
mov
call
cmp
je
push
push
push
pushl
xor
inc
call
decw
call
test
mov
jne
cmpl
jge
push
mov
call
add
mov
push
call
push
push
mov
call
inc
add
add
mov
push
call
cmpl
je
pop
pop
pop
mov
pop
ret
cmpl
jge
mov
lea
push
add
call
add
incw
call
cmpl
mov
je
call
push
push
push
push
call
xor
add
cmp
ja
jb
cmp
jae
push
call
jmp
push
mov
lea
push
call
test
pop
jne
mov
push
call
mov
mov
push
call
pop
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
pushl
call
mov
test
pop
je
pushl
pushl
push
call
add
mov
pop
ret
mov
xor
inc
add
push
mov
push
push
mov
lea
mov
call
test
jne
fildl
dec
and
push
call
flds
lea
fstps
push
push
lea
call
mov
test
je
flds
flds
fucompp
fnstsw
test
jp
mov
mov
lea
push
push
call
push
lea
call
lea
call
xor
pop
leave
ret
push
mov
sub
push
push
push
mov
lea
mov
call
test
jne
flds
mov
lea
fstps
call
flds
lea
fstps
push
push
lea
call
mov
test
je
flds
push
fstps
call
mov
mov
lea
push
push
mov
call
push
lea
call
lea
call
pop
pop
xor
pop
leave
ret
mov
movsbl
and
shr
ret
mov
test
push
push
je
mov
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
jmp
push
mov
movl
movl
cmpl
je
push
lea
push
call
pushl
call
pop
pop
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
mov
push
push
call
test
pop
je
movl
andl
movl
movw
test
push
mov
je
mov
push
call
mov
test
je
pushl
mov
pushl
push
call
pushl
mov
pushl
add
mov
push
call
mov
lea
call
mov
pop
leave
ret
xor
jmp
int3
int3
int3
int3
mov
push
push
push
push
mov
push
call
mov
mov
mov
mov
test
jne
mov
call
test
jne
mov
and
mov
push
push
call
mov
add
test
je
mov
test
je
mov
push
mov
call
cmpl
je
mov
test
je
pop
pop
pop
mov
pop
ret
mov
test
je
push
push
call
add
test
je
mov
lea
call
push
push
lea
call
test
je
push
mov
call
push
push
push
push
call
add
test
je
test
mov
je
cmpl
je
mov
mov
push
mov
call
test
je
cmpl
jne
mov
mov
mov
test
je
lea
call
pop
pop
pop
mov
pop
ret
mov
cmpl
jne
jmp
push
push
call
add
mov
jmp
call
test
mov
jne
jmp
push
mov
sub
push
xor
movl
mov
movl
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
mov
mov
mov
push
call
mov
push
pushl
call
lea
call
mov
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
cmpl
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
lea
push
mov
mov
push
call
cmp
jne
lea
call
cmp
mov
je
mov
test
jne
mov
test
jne
cmp
add
xor
mov
call
cmp
jne
pop
pop
pop
leave
ret
xor
inc
jmp
push
lea
sub
test
mov
je
mov
push
call
fildll
push
fstpl
call
test
mov
fildl
jl
fdivrl
mov
fstpl
call
andl
andw
lea
mov
mov
lea
push
push
movl
movl
call
pop
pop
push
lea
push
mov
mov
call
lea
andl
lea
push
push
movl
movl
call
fldl
testb
fstps
jne
testb
jne
mov
pop
add
leave
ret
push
mov
push
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
mov
imul
push
lea
lea
cmp
je
mov
mov
add
mov
lea
test
je
mov
mov
test
mov
je
mov
push
call
mov
flds
push
push
fstps
lea
mov
call
pushl
andl
push
movl
movl
call
flds
fstps
addl
add
add
cmp
jne
in
mov
add
incl
mov
pop
lea
pop
pop
leave
ret
push
mov
push
andl
push
push
push
lea
mov
mov
push
call
test
js
push
mov
call
test
pop
je
mov
mov
mov
test
movl
mov
mov
je
mov
push
call
andl
test
je
mov
push
call
test
jne
mov
mov
mov
mov
push
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
jmp
xor
jmp
push
mov
push
cmpb
mov
mov
jne
leave
ret
push
mov
sub
mov
xor
mov
push
push
pop
push
lea
lea
add
call
push
mov
call
test
je
mov
xor
inc
push
push
pushl
mov
push
call
sub
je
dec
je
pushl
pushl
add
icebp
or
pop
pop
mov
mov
xor
pop
call
leave
ret
mov
jmp
push
mov
andl
andl
push
push
pushl
call
mov
mov
add
cmp
je
cmp
je
add
cmp
jg
mov
pop
ret
mov
jmp
mov
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
je
inc
add
test
je
lea
test
je
inc
add
push
add
rorb
or
adc
pop
ret
mov
movl
jmp
mov
jmp
xor
jmp
push
mov
mov
test
push
mov
push
push
je
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
mov
test
je
pushl
mov
mov
call
test
je
pushl
mov
mov
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
jmp
insl
ret
inc
add
clc
sub
push
mov
cmpb
push
push
jne
mov
lea
push
lea
push
lea
push
call
mov
test
mov
je
cmpb
je
pushl
call
test
pop
jne
lea
push
mov
pushl
call
fldl
fstpl
pop
fldl
pop
fstpl
lea
fldl
fstpl
fldl
jg
inc
add
inc
and
fstpl
fldl
fstpl
call
test
jne
and
cmpb
je
pushl
call
cmp
pop
jne
cmpb
je
pushl
call
cmp
pop
jne
mov
lea
call
mov
test
mov
jne
mov
pushl
call
test
pop
mov
je
mov
test
jne
fldl
fldl
fstpl
fstpl
movb
cmpb
je
mov
call
mov
cmp
jne
cmpl
jne
lea
push
pushl
call
fldl
push
call
fldl
add
push
call
add
push
pushl
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
cmp
pop
je
push
lea
add
pop
add
pop
mov
call
mov
cmp
mov
jne
cmpb
mov
mov
mov
mov
add
mov
mov
mov
mov
jne
push
call
push
lea
push
pushl
call
cmp
je
jmp
cmpb
je
pushl
call
cmp
pop
jne
testb
je
jmp
lea
movb
call
cmpl
jne
fld1
push
fld
push
fld
fxch
fstpl
fstpl
clc
loope
add
call
call
fldl
faddl
mov
add
call
pop
pop
call
mov
jmp
push
jmp
push
mov
test
je
call
push
call
pop
mov
andl
test
je
mov
andl
push
call
test
mov
jne
pop
ret
push
mov
sub
push
xor
cmp
je
push
mov
cmp
je
push
mov
push
push
call
test
mov
je
push
mov
lea
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
call
mov
test
jne
pushl
mov
mov
push
pushl
push
call
mov
cmp
je
test
js
test
jne
add
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
call
xor
cmp
je
push
mov
cmp
jne
mov
cmp
jne
pop
pop
leave
ret
cmp
push
jne
push
call
cmp
pop
je
mov
xor
mov
stos
stos
stos
stos
stos
mov
cmp
mov
je
mov
mov
lea
mov
mov
mov
mov
lea
lea
movsl
movsl
mov
lea
mov
mov
movsl
call
test
lea
push
lea
push
lea
push
jne
lea
movl
call
add
test
je
mov
sub
mov
sar
mov
pop
jmp
cmpl
jl
ret
push
push
pop
push
push
movl
mov
call
cmp
pop
pop
mov
je
cmp
je
cmp
jne
mov
push
push
call
pop
movzbl
pop
mov
pop
ret
push
lea
sub
add
enter
mov
push
mov
call
cmpl
je
cmpl
jne
mov
xor
pop
call
add
leave
ret
call
test
jne
lea
push
lea
lea
push
movl
call
test
pop
pop
jne
jmp
push
mov
sub
mov
xor
mov
mov
test
je
andl
push
push
mov
lea
lea
push
mov
mov
rolb
inc
mov
add
add
inc
mov
add
add
inc
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
call
test
pop
jne
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
xor
call
leave
ret
testb
je
jmp
push
call
pop
jmp
push
mov
cmpl
push
mov
jne
mov
call
pop
pop
ret
push
lea
sub
add
enter
mov
mov
cmpl
push
push
mov
push
jge
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
jne
cmp
jne
mov
mov
lea
push
push
call
test
jne
testw
jne
mov
mov
add
test
jne
and
cmpl
jne
andl
andl
lea
mov
push
pop
lea
mov
mov
lea
mov
mov
mov
lea
mov
push
mov
mov
movb
mov
mov
movb
call
test
jne
mov
mov
lea
push
push
call
test
jne
mov
lea
push
pushl
mov
pushl
pushl
pushl
push
call
testb
jne
testb
jne
testb
jne
testb
jne
xor
lea
call
mov
pop
mov
pop
xor
pop
call
add
leave
ret
push
mov
mov
sub
test
push
push
je
cmp
je
mov
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
mov
call
test
js
mov
pushl
mov
push
call
test
js
mov
mov
mov
push
push
call
test
js
mov
cmp
je
lea
push
mov
mov
mov
mov
mov
push
call
mov
mov
lea
push
push
call
test
js
mov
mov
push
call
mov
cmp
jne
mov
cmp
jg
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
sub
cmpl
push
push
mov
mov
jge
mov
test
jne
mov
test
push
jne
mov
test
je
mov
call
andl
mov
cmp
mov
mov
je
test
jne
test
je
test
jne
testb
je
testb
jne
mov
test
je
mov
push
call
andl
orl
lea
xor
mov
call
lea
push
call
test
je
andl
xor
lea
push
call
test
je
mov
mov
cmp
jne
mov
pushl
mov
push
call
pop
pop
pop
leave
ret
mov
cmpl
jl
jmp
push
mov
sub
mov
andl
push
lea
push
pushl
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
mov
mov
mov
pop
leave
ret
mov
sub
push
mov
call
test
jne
xor
add
ret
push
lea
sub
mov
xor
mov
and
inc
add
gs
je
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
push
call
mov
lea
push
call
pushl
mov
push
push
lea
push
push
call
mov
add
lea
mov
call
lea
call
testb
jne
testb
jne
mov
ja
inc
add
rcrb
rdmsr
add
or
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
push
mov
call
test
pop
je
mov
xor
mov
mov
mov
mov
mov
mov
mov
into
ret
inc
add
push
or
push
and
push
lea
push
push
xor
inc
push
mov
mov
mov
mov
call
add
test
je
cmp
jb
lea
push
pushl
xor
pushl
lea
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
lea
push
push
call
test
js
push
lea
lea
call
push
push
push
push
lea
call
mov
mov
add
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
mov
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
test
pop
je
mov
jmp
push
mov
lea
mov
or
lock
dec
jne
movl
lea
call
lea
call
push
call
pop
xor
pop
ret
push
mov
push
push
push
push
lea
push
pushl
mov
mov
call
test
je
mov
pop
pop
leave
ret
mov
lea
push
pushl
movl
mov
call
mov
and
neg
sbb
not
lea
and
push
pushl
mov
call
lea
mov
call
mov
jmp
sbb
inc
add
add
and
call
mov
neg
sbb
and
je
mov
test
je
mov
cmp
je
inc
mov
mov
mov
xor
inc
ret
xor
jmp
push
lea
push
pop
call
pop
jmp
push
test
push
push
je
mov
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
jmp
push
mov
push
push
push
push
push
pushl
mov
mov
push
call
add
test
je
mov
push
push
push
push
push
push
call
add
neg
sbb
neg
pop
pop
ret
push
mov
push
push
push
push
pushl
call
xor
cmp
pop
je
mov
mov
call
cmp
mov
je
mov
lea
push
push
push
call
test
mov
js
pushl
lea
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
mov
cmp
je
pushl
mov
push
push
call
lea
mov
call
lea
call
pop
mov
pop
pop
leave
ret
mov
and
neg
sbb
inc
ret
push
mov
and
sub
push
mov
push
lea
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
mov
movl
movb
mov
call
lea
mov
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
add
test
jne
test
jne
mov
call
pop
pop
add
ret
and
cmp
jg
je
cmp
ja
jmp
xor
ret
nop
data16
adc
inc
aaa
adc
inc
aaa
adc
inc
aaa
adc
aas
aaa
adc
aas
aaa
adc
aas
aaa
adc
aas
aaa
adc
aas
aaa
adc
aas
aaa
adc
in
push
push
push
mov
mov
test
je
push
push
push
xor
call
cmp
pop
mov
mov
jne
mov
cmp
mov
jne
add
mov
cmp
jne
mov
call
pop
pop
pop
leave
ret
xor
jmp
push
mov
lea
mov
call
mov
mov
push
mov
lea
mov
call
mov
xor
lea
mov
call
lea
call
lea
call
jmp
cmp
jne
lea
call
jmp
lea
call
jmp
push
mov
lea
mov
call
mov
mov
push
mov
add
mov
call
mov
xor
mov
mov
call
lea
call
lea
call
jmp
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
mov
movl
xor
ret
mov
push
xor
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
ret
mov
push
call
mov
jmp
mov
push
call
mov
pop
ret
mov
push
call
mov
jmp
mov
push
call
mov
jmp
mov
push
call
mov
jmp
mov
push
call
mov
jmp
push
mov
movl
movl
movl
movl
add
push
inc
and
add
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
push
call
mov
mov
push
push
push
call
add
test
je
pop
xor
pop
ret
mov
add
push
push
call
pop
xor
pop
ret
push
mov
push
push
push
mov
andl
lea
push
push
pushl
pushl
call
add
test
je
cmpl
jne
mov
test
jl
mov
xor
pop
leave
ret
xor
cmp
je
mov
push
lea
cmp
jne
call
push
push
call
mov
mov
pop
ret
xor
ret
push
mov
push
andl
push
push
push
lea
mov
call
lea
call
cmpl
je
mov
push
pushl
pushl
pushl
push
push
pushl
call
mov
pop
lea
call
pop
mov
pop
leave
ret
xor
jmp
mov
push
mov
push
lea
mov
call
mov
test
je
mov
lea
push
push
call
andw
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
mov
add
cmp
jae
xor
xor
mov
mov
mov
mov
mov
lea
cmp
jne
mov
add
test
mov
js
cmp
jb
cmp
jne
mov
pop
pop
pop
pop
add
ret
push
lea
sub
mov
xor
mov
push
push
mov
lea
call
mov
test
mov
je
pushl
lea
xor
push
lea
mov
mov
movl
movl
mov
mov
call
mov
pop
pop
pushl
mov
push
push
push
call
testb
jne
testb
jne
lea
call
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
sub
mov
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
mov
mov
lea
push
push
lea
push
call
mov
mov
mov
xor
sub
je
dec
jne
mov
mov
lea
push
pushl
mov
mov
push
call
mov
neg
sbb
and
add
mov
lea
call
lea
call
mov
pop
leave
ret
mov
jmp
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
call
push
call
pop
xor
jmp
mov
test
push
push
je
mov
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
pop
pop
ret
push
pushl
lea
pushl
push
call
test
jl
mov
test
je
mov
test
jne
xor
cmp
jb
push
mov
sub
lea
pop
mov
test
je
mov
test
jne
xor
cmp
jb
sub
lea
mov
mov
mov
pop
ret
mov
andl
andl
jmp
push
mov
sub
push
push
mov
push
mov
xor
cmp
je
mov
cmp
je
mov
and
jne
movzwl
cmp
jne
mov
push
mov
call
test
jne
xor
inc
pop
pop
pop
leave
ret
cmp
jle
cmp
jg
xor
cmp
setne
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
push
mov
push
push
push
push
mov
push
mov
call
mov
mov
and
xor
or
jne
mov
mov
call
cmp
je
mov
mov
push
sub
push
mov
push
pushl
call
cmp
je
mov
mov
add
mov
add
mov
cmp
jne
pop
pop
pop
leave
ret
mov
mov
call
mov
shr
jmp
push
mov
push
mov
push
push
mov
mov
mov
movb
mov
mov
mov
mov
call
call
mov
push
push
mov
movb
call
test
jge
push
push
push
mov
push
mov
call
pop
pop
pop
pop
ret
push
push
push
mov
call
test
jl
jmp
push
mov
push
pushl
mov
call
push
mov
cmp
jbe
push
dec
push
mov
call
mov
sub
mov
mov
call
test
jne
mov
inc
pop
pop
ret
push
mov
sub
xor
mov
call
mov
test
je
mov
push
call
test
je
mov
lea
push
mov
call
mov
andl
andl
mov
mov
push
lea
mov
mov
call
mov
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
mov
and
sub
push
mov
push
lea
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
mov
movl
movb
mov
call
lea
mov
call
mov
pop
pop
mov
pop
ret
push
mov
push
push
mov
mov
lea
push
push
pushl
lea
pushl
push
push
call
mov
test
je
mov
mov
mov
test
je
mov
test
je
mov
flds
mov
fstps
mov
push
call
mov
mov
pop
pop
pop
ret
mov
push
push
call
jmp
xor
jmp
mov
test
push
push
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
push
call
test
pop
je
push
push
push
push
mov
call
push
call
mov
add
mov
pop
test
je
cmpl
je
ret
xor
jmp
xor
ret
push
mov
push
movl
mov
mov
push
mov
call
mov
call
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
call
pop
mov
mov
mov
mov
mov
add
cmp
mov
lea
mov
mov
mov
mov
mov
mov
je
pushl
call
pop
cmp
pop
je
pushl
mov
push
call
mov
leave
ret
push
push
mov
mov
mov
mov
push
mov
push
call
test
pop
pop
jne
push
call
test
pop
je
pushl
mov
call
mov
pop
mov
pop
ret
push
mov
push
mov
push
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
jne
lea
call
mov
pop
pop
pop
ret
pushl
mov
pushl
push
call
mov
jmp
mov
xor
cmp
mov
sete
mov
xor
ret
push
mov
sub
test
push
mov
je
mov
test
jge
push
call
pop
andl
push
mov
mov
call
test
je
andl
lea
push
call
pop
pop
leave
ret
push
xor
mov
mov
mov
push
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
mov
scas
movb
or
je
or
dec
xor
fistpl
and
cmp
pop
je
mov
lea
push
push
call
push
call
test
je
mov
orl
push
lea
call
test
je
mov
orl
pop
mov
pop
ret
push
mov
sub
push
push
call
test
pop
je
pushl
pushl
push
mov
call
mov
test
mov
je
mov
push
call
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
push
push
call
test
js
lea
call
test
je
mov
push
call
xor
pop
leave
ret
push
mov
push
cmpl
push
je
mov
pop
leave
ret
push
lea
call
cmpl
mov
je
call
jmp
push
mov
and
mov
sub
cmpb
push
push
push
jne
cmpl
je
call
test
je
mov
lea
push
mov
add
mov
push
push
call
test
js
xor
cmp
je
cmp
je
mov
lea
push
pushl
push
call
test
js
cmp
jne
push
push
lea
push
movl
call
pushl
lea
push
call
push
lea
push
call
mov
mov
neg
sbb
inc
testb
je
mov
add
push
call
test
pop
je
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
testb
jne
testb
jne
test
jne
mov
cmpl
je
add
call
pushl
mov
mov
mov
call
mov
mov
xor
shr
inc
and
and
je
testb
jne
testb
jne
test
jne
test
jne
test
je
movb
movb
mov
cmpl
je
mov
call
test
je
lea
push
push
mov
call
test
pop
pop
js
lea
call
mov
test
mov
je
mov
push
push
pushl
push
call
lea
call
mov
mov
mov
imul
lea
add
cmp
jne
push
push
push
lea
push
mov
call
cmpl
jne
xor
pop
pop
pop
mov
pop
ret
testb
je
jmp
push
mov
push
mov
test
je
push
mov
cmpl
je
mov
mov
lea
push
push
call
test
js
mov
xor
cmp
setl
mov
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
mov
mov
test
push
push
je
mov
test
je
xor
inc
xor
push
push
mov
lea
push
push
push
movl
movl
call
add
testb
jne
testb
jne
lea
call
mov
cmp
mov
je
lea
mov
mov
mov
mov
mov
movl
movl
mov
mov
mov
lea
call
push
call
test
pop
mov
jne
mov
pushl
mov
mov
push
push
push
call
testb
jne
testb
jne
lea
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
push
push
xor
push
call
test
je
mov
push
lea
mov
call
mov
lea
push
push
call
test
js
cmp
je
push
pushl
call
pop
pop
mov
lea
call
mov
pop
leave
ret
push
push
mov
call
jmp
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
mov
movl
mov
movl
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
mov
test
push
push
je
mov
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
cmp
je
xor
ret
pushl
mov
call
pop
test
jne
inc
jmp
push
mov
test
je
mov
test
je
mov
test
je
mov
test
jne
pushl
pushl
call
andl
pop
pop
xor
pop
ret
push
pushl
call
pop
pop
jmp
push
pop
pop
ret
push
mov
sub
mov
lea
push
push
call
test
mov
je
ljmp
dec
clc
test
je
push
pushl
lea
movl
movl
movl
call
testb
pop
jne
testb
jne
andl
mov
push
lea
call
mov
lea
push
push
push
call
lea
call
pop
lea
call
leave
ret
mov
push
xor
mov
mov
mov
add
cmp
ja
jmp
push
call
cmp
pop
je
mov
mov
movl
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
pop
ret
push
call
cmp
pop
je
mov
mov
movl
mov
mov
movw
jmp
xor
jmp
mov
imul
sbb
add
mov
mov
dec
cmp
enter
fmull
cmc
dec
cmp
sbb
das
dec
cmp
push
dec
cmp
inc
dec
cmp
push
push
mov
push
lea
movl
movl
movl
movl
movl
movl
movl
call
lea
call
lea
call
mov
test
mov
mov
je
lea
push
call
test
pop
jne
push
call
pop
mov
push
loope
add
je
lea
push
call
test
pop
jne
push
call
add
enter
dec
pop
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
test
jne
pop
movl
movl
lea
cmpl
pop
pop
je
push
call
pop
ret
test
je
jmp
push
mov
mov
test
je
mov
push
call
mov
test
pop
je
mov
push
call
ret
push
mov
sub
mov
push
push
push
xor
push
push
lea
push
mov
mov
call
test
je
cmpl
mov
je
cmpl
je
push
push
lea
push
mov
call
lea
push
lea
call
test
jne
cmp
jne
mov
mov
add
add
lea
cmp
je
cmp
jne
lea
call
mov
xor
mov
and
inc
shr
shl
lea
or
cmp
jne
cmp
je
lea
call
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
push
push
lea
push
push
movl
movl
call
test
js
push
mov
call
test
pop
je
pushl
lea
push
mov
call
mov
test
mov
je
mov
push
call
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
push
push
call
test
lea
jne
call
test
je
mov
push
call
testb
je
mov
add
push
call
test
pop
je
xor
pop
pop
leave
ret
push
push
mov
mov
imul
push
lea
lea
cmp
jne
or
pop
pop
pop
ret
push
mov
sub
push
mov
push
push
mov
test
mov
jne
call
mov
pop
pop
pop
leave
ret
lea
call
andl
mov
lea
lea
mov
call
inc
add
fstpt
add
mov
dec
fsubr
lcall
nop
or
pop
jmp
push
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
or
adc
loopne
les
test
add
push
or
add
fcomp
fnstsw
test
jnp
fcomps
fnstsw
test
jnp
flds
fadd
faddl
fistpl
mov
sar
leave
ret
xor
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
mov
mov
push
mov
cmp
jne
push
mov
sub
push
push
push
lea
push
push
push
push
push
push
push
call
add
imul
xchg
add
cmpsb
push
out
mov
add
imul
add
mov
mov
stos
iret
add
xchg
add
add
add
add
cltd
mov
add
inc
in
push
push
lea
push
call
rcll
fcompl
add
add
pop
add
data16
test
mov
jno
scas
add
add
rolb
fldcw
cwtl
mov
pop
add
add
add
cltd
gs
add
add
addl
mov
add
out
sub
pop
push
push
push
push
push
push
lea
push
lea
push
call
xchg
rcl
add
xchg
push
fiadds
add
in
mov
add
neg
add
mov
jp
add
add
add
xchg
in
jge
add
add
mov
sti
add
mov
add
add
nop
mov
idivb
roll
cli
mov
lret
mov
add
jp
xchg
mov
fildl
push
jmp
lcall
push
lea
push
push
call
xchg
movsb
add
pop
push
add
xchg
add
add
add
add
movsb
roll
add
add
mov
sub
pop
push
call
push
push
push
lea
push
push
call
push
flds
loopne
push
fs
pop
repnz
add
loop
cwtl
out
add
mov
imul
cwtl
add
fists
xchg
add
pusha
add
sti
sub
pop
push
call
push
push
lea
push
push
call
add
pop
addl
jl
in
lock
popa
faddl
mov
out
add
xchg
add
loopne
add
mov
add
add
test
flds
add
push
jne
cwtl
mov
pop
add
add
add
mov
pop
jmp
push
push
push
lea
push
lea
push
push
push
call
add
lods
pushf
add
add
out
add
lahf
lahf
push
add
xlat
lock
movl
mov
popa
add
mov
add
fiadds
add
add
into
add
arpl
xchg
push
jle
add
add
add
mov
xchg
adcb
in
in
ret
mov
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
xchg
add
add
icebp
xchg
add
add
rorl
mov
cltd
test
je
in
fcompl
pop
hlt
push
push
lea
push
call
mov
add
mov
add
cltd
movb
shlb
add
add
add
data16
add
jge
cmpsb
add
cltd
jno
push
add
jge
jle
in
hlt
lcall
pop
in
push
push
push
push
push
push
push
push
push
call
add
jecxz
jnp
add
testl
add
add
jge
mov
ret
je
in
in
add
pop
add
loop
loope
movsl
add
in
nop
icebp
add
sub
pop
add
add
push
push
lea
push
push
push
push
push
push
lea
push
call
loopne
shrb
mov
mov
mov
mov
popl
xchg
cmpsl
sar
add
jno
add
rolb
add
add
jne
out
add
std
xlat
int3
add
add
in
fdivr
lcall
pop
add
repz
int3
iret
iret
push
push
lea
shl
shl
not
push
xor
add
sub
dec
xor
lea
sub
pop
shr
shl
not
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
hlt
add
add
pushf
add
push
add
add
mov
push
push
add
mov
mov
xchg
add
add
ja
leave
add
add
imul
add
lods
rolb
out
arpl
fcompl
add
add
ja
add
jne
push
push
push
push
push
call
add
mov
int
sbbl
imul
out
add
push
add
mov
fnsave
scas
add
lahf
leave
mov
aam
add
faddl
add
add
pop
add
shll
in
in
pop
call
push
lea
push
push
push
push
push
call
test
les
mov
fadds
jae
jb
add
add
hlt
fildl
pop
add
repnz
add
xchg
cwtl
add
loop
xlat
popl
push
rcr
cwtl
rolb
out
add
add
add
out
lds
add
add
xchg
add
mov
lcall
inc
lock
push
push
push
push
call
xchg
add
loope
out
add
add
add
jmp
sahf
add
add
imul
add
mov
fildl
add
in
lock
lea
push
push
push
push
lea
push
call
scas
cltd
in
movl
fwait
pop
mov
add
data16
cmpsb
fistps
mov
add
rolb
jnp
test
in
in
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
test
add
out
scas
add
arpl
add
lods
insb
test
scas
add
scas
shl
add
mov
pop
add
mov
add
in
add
sub
pop
pushl
pushl
push
push
push
lea
push
push
call
mov
pop
pop
cli
add
jae
mov
xchg
shr
flds
popa
add
add
add
pop
xchg
add
add
jecxz
icebp
mov
add
lret
lcall
pop
jno
filds
add
add
out
jae
test
mov
imul
pushl
push
push
push
push
push
push
call
lods
mov
cwtl
mov
add
ficomps
cli
addl
xchg
xchg
add
add
add
add
rcrl
push
sub
pop
pushl
push
push
call
pop
mov
add
add
call
add
xchg
jle
cmpsl
imul
scas
pop
rcr
add
add
add
ljmp
jmp
add
cmc
imul
cwtl
jnp
fwait
push
add
int
mov
add
in
pushf
mov
pop
call
push
push
sub
push
or
inc
add
lea
sub
xor
shr
ror
pop
ror
inc
pop
push
push
call
add
add
add
mov
xlat
je
mov
jae
add
cwtl
pop
cli
add
xchg
add
add
std
js
mov
add
push
add
xchg
add
add
popl
jne
mov
lahf
mov
add
imul
add
add
add
lods
mov
jns
add
sub
pop
pushl
push
push
push
push
call
in
roll
push
jne
xchg
testl
xchg
add
mov
mov
mov
subb
add
arpl
add
add
in
lock
call
push
lea
push
push
call
fucomip
add
push
add
lahf
add
mov
in
loopne
ljmp
cmc
testl
test
movsb
shl
fistpll
mov
add
add
sti
fprem
add
add
andl
lcall
inc
push
push
sub
lea
push
sub
add
sub
add
xor
sub
sub
shr
add
pop
shr
dec
inc
pop
push
push
call
rol
mov
mov
jbe
add
aam
aad
lea
jnp
add
jmp
in
outsl
aad
add
add
push
add
sub
pop
push
push
push
push
push
push
lea
push
call
ja
push
mov
xchg
jmp
scas
add
lea
xchg
jae
pop
add
add
add
add
add
mov
pop
jno
pusha
insb
cmp
add
sbb
out
add
add
add
add
pop
test
jge
hlt
add
jecxz
pop
add
add
in
add
lcall
add
push
push
call
add
mov
add
roll
ret
int
incb
add
lahf
movl
add
jae
sub
pop
call
push
push
push
push
push
lea
push
push
push
push
push
call
stos
roll
mov
pop
add
hlt
in
mov
nop
test
into
mov
mov
jns
sti
cli
mov
add
in
fdivr
lcall
clc
push
push
push
push
push
push
push
push
call
push
enter
lret
imulb
pop
lret
fsubl
jp
add
cld
xchg
stos
add
add
add
push
in
loopne
lcall
push
push
lea
push
push
call
add
add
cwtl
scas
jl
aam
add
jle
test
push
mov
mov
xchg
ret
fldl
out
add
add
mov
lret
mov
fadds
cmpsb
mov
mov
pop
scas
jecxz
test
add
clc
add
aam
jbe
add
aad
add
sub
pop
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
push
add
scas
loope
jle
flds
add
push
fiaddl
push
add
add
addl
add
stos
jb
add
rolb
xlat
add
add
mov
add
addb
aam
add
xchg
add
std
add
add
in
in
lcall
pop
hlt
add
push
lea
push
lea
push
call
add
loopne
add
mov
out
test
out
pop
lret
add
add
add
orb
jle
add
add
add
add
add
add
add
add
mov
add
stc
je
imul
shrb
hlt
pop
add
push
lea
push
call
add
mov
loop
pop
jb
jle
ficompl
push
aad
in
mov
add
ficoms
aam
fsubrs
ljmp
sarb
movl
lcall
ret
or
add
iret
iret
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
mov
mov
cld
mov
lea
add
add
jo
cmc
mov
loop
add
hlt
in
add
addl
and
push
lea
push
call
xchg
fadds
mov
in
add
mov
xchg
add
in
add
add
mov
mov
add
add
add
mov
push
add
add
movsl
in
roll
aad
xchg
push
mov
jns
add
add
add
add
movsl
add
hlt
pop
add
push
push
lea
push
push
call
arpl
add
xlat
pop
jne
mov
add
in
mov
xchg
add
add
movl
add
leave
imul
std
add
je
add
mov
mov
add
jnp
cld
xchg
jo
add
add
aam
jl
add
lcall
jne
push
push
push
call
mov
mov
xchg
rolb
add
movsl
mov
movb
rolb
fwait
int3
add
int3
mov
add
notb
add
out
xchg
jne
add
mov
lcall
push
lea
push
push
push
push
push
call
and
push
xchg
cmc
mov
lcall
add
data16
scas
xchg
test
mov
push
add
lahf
mov
iret
int3
cli
popf
mov
cld
add
add
add
inc
or
iret
push
lea
push
push
call
mov
mov
mov
test
std
add
push
popl
add
ror
xchg
add
aam
add
add
mov
add
mov
add
sahf
lea
hlt
pop
add
push
push
push
push
lea
push
push
push
push
call
pop
mov
add
lods
nop
add
mov
push
add
fldl
add
add
mov
fiadds
xlat
cwtl
add
fstps
mov
add
pushf
add
ret
add
mov
lcall
push
lea
push
push
push
push
push
push
push
push
call
add
mov
rolb
push
add
testl
add
mov
add
data16
add
add
ror
sub
pop
mov
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
add
lcall
mov
int
aam
imul
adc
incb
jge
imul
fdivs
add
add
add
mov
add
in
fcomps
or
push
push
lea
push
push
push
call
jecxz
out
ret
add
jo
sarl
add
mov
add
mov
pop
add
in
pop
add
push
push
push
push
push
push
push
lea
push
lea
push
call
call
add
arpl
testl
xchg
aad
lods
xchg
xchg
add
add
mov
add
lods
popl
in
addr16
movl
mov
add
xchg
xchg
loop
imul
movl
mov
add
jbe
mov
add
add
mov
arpl
pop
push
push
lea
push
push
push
push
push
call
pop
add
jb
out
add
ret
add
add
xchg
out
add
in
out
nop
sahf
add
add
xlat
stc
fldl2t
push
add
add
mov
lcall
inc
or
iret
push
push
push
lea
push
push
push
push
call
add
push
add
aad
jmp
mov
add
pop
mov
pop
ror
pop
pop
loope
jle
aam
add
int
lods
add
xchg
fs
rorb
out
add
fisttps
add
movsl
add
fwait
add
loope
mov
mov
int3
xchg
sub
pop
sub
pop
push
lea
push
push
lea
push
push
call
outsl
jne
add
add
add
push
mov
add
add
add
add
add
add
add
add
add
add
jecxz
pop
mov
cmpsb
add
add
push
in
add
sub
pop
rep
push
lea
push
push
lea
push
push
call
add
ja
add
mov
fiadds
add
int
pop
add
test
add
orb
jle
add
stos
add
jl
in
in
pop
pop
push
push
call
test
mov
int
test
shr
pop
cmc
rolb
addb
movsb
add
mov
mov
imul
pop
jne
hlt
add
mov
xchg
add
int3
test
stc
mov
add
jecxz
stos
pop
jbe
sub
pop
mov
push
lea
push
push
push
push
push
call
mov
add
mov
jmp
faddl
add
add
add
test
out
mov
add
mov
movl
add
add
lods
add
sahf
pusha
roll
lcall
add
mov
add
xchg
add
add
stos
add
cmpsb
aad
jae
add
sub
pop
add
push
push
push
push
push
lea
push
call
pop
imul
add
add
jno
imul
cwtl
add
add
mov
sahf
add
jae
add
mov
mov
shll
lret
loope
mov
jb
mov
add
jno
add
add
xchg
je
add
add
mov
add
mov
add
call
adc
add
add
push
call
scas
gs
add
mov
add
add
fucompp
in
mov
js
add
add
arpl
xchg
add
add
add
negb
add
xchg
add
test
add
jb
test
add
mov
shll
testb
pop
mov
push
push
push
call
lcall
shll
outsl
insb
xchg
mov
sahf
mov
add
add
add
add
add
push
mov
add
add
add
sub
pop
xor
push
lea
push
push
push
call
add
jp
add
mov
jnp
addl
add
add
in
xchg
mov
lds
pushf
shrb
pop
movsl
mov
add
add
lds
addr16
mov
cwtl
mov
add
sub
pop
add
push
push
push
push
lea
push
push
push
call
add
stos
jecxz
testl
add
jo
add
add
test
stos
mov
out
xlat
mov
push
bound
adcb
pop
mov
push
push
lea
push
lea
push
push
push
push
push
call
ljmp
jno
push
call
add
add
add
xchg
fadd
mov
add
xchg
add
add
bound
popf
add
scas
add
add
xchg
add
add
add
loope
add
add
popf
test
pop
addl
push
push
push
push
call
add
add
mov
add
roll
push
push
add
add
aam
add
jne
lock
out
ljmp
add
add
fs
push
out
sti
xchg
pop
cli
pop
mov
popf
add
xchg
in
sub
pop
add
push
push
push
push
call
jl
add
fcomps
scas
stos
add
add
add
in
add
jb
xchg
lods
cmpsl
push
rorl
ficoml
scas
fcompl
mov
cwtl
add
loop
hlt
add
push
pop
movsl
int
add
add
add
in
lock
lcall
dec
sub
int3
iret
iret
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
lret
pop
insb
test
add
add
outsl
pop
add
add
cwtl
pop
push
add
popf
pop
add
arpl
stc
lea
pop
enter
jge
mov
sub
pop
xor
push
push
push
push
push
call
jnp
sahf
idiv
stc
add
rcl
fadd
mov
jns
jp
add
shr
in
mov
pushf
incb
add
mov
mov
add
add
enter
cmc
jl
sub
pop
add
push
push
push
push
push
push
lea
push
call
rcll
xchg
cld
stos
add
add
rolb
out
ficomps
fwait
shll
mov
add
xchg
xchg
test
popf
aam
outsl
push
push
pop
add
adcl
adcb
mov
cmc
add
ret
lret
lea
push
push
push
push
push
call
push
mov
jne
push
add
add
insb
int3
add
in
mov
jle
hlt
xorl
add
in
in
lcall
rorl
stos
push
inc
shl
shr
sub
push
or
not
add
sub
lea
sub
sub
sub
pop
lea
pop
push
push
push
push
call
add
arpl
add
sahf
lea
add
mov
push
add
add
jne
leave
leave
jecxz
les
add
jmp
xchg
sahf
add
mov
jns
xchg
mov
icebp
popl
add
cwtl
rolb
in
lock
lcall
jne
push
push
push
push
push
push
push
push
lea
push
call
add
roll
jmp
test
out
pusha
add
in
popf
movsl
add
add
lods
add
add
fcmovbe
add
faddp
lcall
ret
add
push
cld
add
sub
pop
call
push
push
push
inc
push
or
inc
add
dec
shl
sub
pop
not
pop
push
lea
push
lea
push
lea
push
call
add
add
mov
js
mov
jne
jbe
add
add
loop
xchg
jo
xchg
cmpsl
cld
enter
in
fwait
add
rcrb
mov
pop
xchg
add
movsb
clc
fmull
add
add
mov
les
sub
pop
push
push
push
push
push
push
call
jb
push
jnp
mov
mov
out
add
add
mov
gs
addl
rol
jecxz
scas
add
jae
out
add
scas
data16
lds
hlt
add
cli
add
call
lock
lcall
rclb
insb
pop
mov
push
push
not
pop
push
mov
push
push
lea
push
push
push
push
push
push
call
fisubs
add
add
push
add
add
add
xchg
mov
mov
add
les
faddl
vlddqu
add
add
jle
jp
add
xchg
stos
test
add
add
sti
fstp
add
add
sub
pop
add
push
sub
add
pop
add
push
rol
add
pop
add
push
lea
push
push
lea
push
push
push
call
cli
add
add
add
add
fiadds
mov
mov
iret
add
jae
in
int
in
lock
add
add
add
movsl
add
jp
scas
add
jae
xor
push
not
pop
add
push
push
push
push
push
push
push
push
lea
push
call
add
enter
add
add
add
pop
mov
popf
pop
add
cwtl
xchg
add
mov
popf
iret
add
mov
add
add
add
add
pushf
add
add
mov
jl
xchg
iret
lock
mov
in
loopne
lcall
inc
adc
out
int3
iret
iret
push
push
call
scas
add
jae
add
shr
lock
add
testb
mov
jmp
lea
push
in
add
add
mov
pushf
jne
jmp
add
outsl
add
icebp
hlt
clc
add
mov
add
in
add
push
movsl
xchg
incb
pushf
out
push
add
add
add
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
add
pop
add
shl
int
loope
outsl
add
add
popl
mov
xchg
add
add
xchg
out
mov
shl
add
pop
mov
mov
lahf
cmc
add
leave
add
fbstp
lcall
les
add
push
add
ror
shr
pop
add
push
shr
add
shl
pop
pop
mov
xor
push
push
lea
push
push
lea
push
push
push
call
mov
add
incb
add
fs
test
add
test
enter
in
add
stos
mov
xlat
xchg
add
lcall
movsb
mov
push
push
push
push
push
lea
push
call
mov
add
add
rolb
add
add
pop
test
jge
mov
add
add
add
xchg
add
bound
jnp
push
xchg
popa
add
push
jae
outsl
add
out
icebp
add
in
in
pop
xor
push
lea
push
call
mov
add
add
std
mov
mov
mov
adcb
outsl
add
sbb
add
add
in
push
fistpll
add
ret
add
loopne
icebp
icebp
push
shlb
add
in
add
add
test
in
clc
lcall
les
add
push
pop
or
je
mov
xor
push
push
push
push
lea
push
push
lea
push
push
push
call
loope
pusha
xchg
int3
add
add
aad
rolb
add
add
movsl
add
mov
mov
scas
add
jle
iret
add
clc
push
add
add
add
sub
pop
mov
xor
push
lea
push
push
push
push
lea
push
push
push
call
int3
cmc
lods
aad
mov
aam
arpl
xchg
adc
aam
clc
loop
jae
push
insb
add
add
testl
testl
sub
pop
add
push
sub
rol
pop
add
push
push
push
call
add
std
add
xchg
add
fildl
add
fcoml
mov
stos
push
enter
aam
add
testl
sub
pop
push
push
rol
inc
pop
mov
push
push
push
push
push
push
push
push
push
call
lods
xchg
add
bound
not
test
ljmp
cmpsb
mov
xchg
mov
xchg
add
in
add
test
add
stc
push
mov
imulb
out
add
push
in
loopne
xor
push
lea
push
push
lea
push
call
mov
data16
clc
push
test
mov
add
jnp
pop
push
xlat
fldl
xchg
add
add
fcoml
push
call
in
out
sub
pop
add
push
lea
push
call
add
add
aam
lcall
cwtl
add
fdivrp
add
mov
add
mov
clc
pop
add
push
push
push
push
push
push
call
lcall
add
add
pop
xchg
in
push
out
add
clc
xchg
leave
mov
add
icebp
mov
cmc
xchg
add
clc
add
add
fiadds
int3
mov
cltd
cli
clc
add
mov
add
hlt
clc
add
add
add
lcall
rep
push
push
lea
push
lea
push
call
sbbb
pop
pop
add
sub
add
add
add
aam
out
sahf
add
mov
push
fs
mov
lock
lcall
dec
sub
int3
iret
iret
push
push
call
add
out
test
push
add
pop
pushf
scas
add
push
jno
lock
add
xchg
mov
imul
popl
rcrb
add
fwait
cmpsl
sub
pop
xor
push
lea
push
call
add
add
mov
push
add
add
add
pop
add
mov
lds
add
xchg
add
push
sub
pop
add
push
add
pop
or
je
mov
push
add
rol
shl
pop
add
push
sub
rol
pop
add
push
lea
sub
not
pop
rep
pop
push
push
sub
sub
lea
add
push
xor
add
add
sub
shr
pop
lea
xor
sub
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
std
add
out
out
and
add
addb
fwait
add
cld
add
add
mov
out
test
lcall
push
push
push
push
push
push
lea
push
push
push
call
imul
add
add
add
pop
pop
test
mov
test
pushf
mov
add
hlt
add
jae
in
fdivr
lcall
jne
push
shr
pop
mov
push
push
push
push
push
push
call
add
cld
lods
ret
mov
add
cld
in
addb
shrl
popa
add
scas
add
in
loop
fdivl
sub
pop
mov
push
not
pop
jmp
push
sub
not
pop
push
mov
push
push
lea
push
push
lea
push
push
push
call
cmc
lret
add
add
add
add
push
sti
rolb
mov
add
jp
add
add
repnz
scas
mov
push
out
loop
xchg
mov
jo
jno
mov
add
scas
test
mov
add
add
ficoms
lcall
cld
push
add
pop
push
push
sub
pop
push
push
push
push
push
push
lea
push
push
call
arpl
add
scas
xchg
fwait
call
xchg
sahf
add
loope
mov
pop
add
xchg
mov
scas
add
sub
pop
push
push
push
push
push
push
push
lea
push
push
call
roll
aam
add
mov
push
add
out
cmpsb
jl
nop
add
add
fdivp
lods
call
loopne
push
mov
push
add
lea
add
shl
pop
pop
push
add
shr
inc
pop
pop
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
cmpsb
add
fiadds
jns
scas
clc
add
add
mov
push
add
add
fstps
lock
add
push
add
jecxz
sub
pop
pop
pop
push
rol
pop
leave
push
push
push
push
push
lea
push
push
push
push
push
call
addr16
add
mov
add
add
lcall
stos
mov
jae
mov
add
fwait
xchg
mov
data16
jns
add
add
in
ljmp
ret
push
push
lea
push
push
push
call
push
out
jecxz
xchg
call
add
repnz
add
add
sahf
jae
jbe
add
arpl
jne
testb
sti
mov
mov
lods
pop
pop
add
mov
subb
pop
aad
mov
mov
test
push
add
add
jmp
add
add
iret
lods
loopne
jne
mov
pop
mov
add
push
push
push
push
push
push
lea
push
push
push
call
add
cmpl
add
add
xchg
stos
aam
arpl
jbe
xchg
add
stos
pop
add
add
testb
add
addb
push
mov
loop
std
addr16
iret
mov
call
add
add
push
add
ror
add
xchg
mov
xchg
clc
add
in
add
mov
loope
add
lcall
push
shl
pop
push
push
sub
shl
pop
push
push
push
lea
push
call
add
les
add
test
add
add
int3
mov
add
add
popf
add
mov
addr16
mov
arpl
popa
add
mov
sub
pop
movl
push
push
push
push
push
lea
push
push
call
stc
test
add
lods
push
mov
push
add
lods
pop
rolb
shlb
add
out
je
add
flds
mov
mov
add
enter
lock
add
outsl
add
add
aad
enter
push
add
mov
pop
mov
add
in
addl
test
je
push
push
push
push
push
push
lea
push
push
call
nop
add
movb
add
add
add
add
xlat
xlat
aam
mov
add
in
add
add
jno
push
mov
mov
loopne
mov
push
push
push
push
push
push
lea
push
push
lea
push
push
call
clc
movsb
add
jmp
add
lods
add
js
push
lret
add
les
add
lcall
mov
pop
xchg
add
add
fcmovnb
fildl
push
mov
add
leave
loop
nop
jo
push
pop
add
mov
lcall
push
sub
add
sub
dec
pop
pop
push
shr
pop
pop
push
push
push
push
push
push
lea
push
push
call
jmp
arpl
add
add
jne
add
lahf
les
rolb
cmpsl
int
add
add
mov
rcrb
add
cmpsl
lods
mov
add
shrb
lea
push
mov
popf
xchg
mov
jnp
in
data16
add
add
mov
push
add
shll
loopne
pop
push
not
pop
leave
push
push
push
lea
push
push
call
add
add
jge
stc
movsb
add
cmc
pop
mov
or
cmc
shll
aad
idivl
push
scas
add
movl
add
add
add
mov
mov
sub
pop
ret
push
ror
pop
push
push
ror
pop
mov
add
push
push
push
lea
push
call
popf
add
mov
in
add
push
add
imul
jnp
add
pusha
lds
pusha
push
test
xchg
add
add
outsl
add
lcall
push
push
shl
pop
push
push
add
shl
pop
push
testl
push
xor
rol
inc
pop
addl
push
push
push
call
add
mov
pop
add
filds
add
add
pop
js
add
fcomps
mov
decb
xchg
add
lcall
xchg
call
fisubrl
push
lea
push
push
push
push
push
lea
push
call
icebp
lret
add
add
addb
add
mov
popl
add
add
jl
add
add
scas
xlat
add
les
mov
out
add
fisubl
mov
lcall
inc
cld
push
shr
pop
pushl
push
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
rorb
mov
movsb
lods
mov
lds
mov
fs
add
ljmp
out
gs
add
je
add
add
add
jns
xchg
pop
mov
call
add
fs
add
add
in
imul
jne
sub
pop
push
call
push
inc
pop
cmpl
jne
pop
push
push
call
add
add
add
loopne
nop
test
add
test
jmp
insb
stos
arpl
cmpsl
add
add
in
mov
in
clc
lcall
push
add
sub
pop
pop
pop
push
push
push
push
push
call
fwait
mov
pushf
add
repnz
mov
out
add
out
add
add
hlt
xchg
add
ja
imul
xchg
jnp
loope
add
add
mov
xchg
cmpsl
lods
add
fsubs
leave
jns
out
mov
add
js
mov
add
lcall
ret
push
ror
not
pop
push
push
rol
pop
mov
push
lea
push
push
push
push
push
lea
push
push
push
call
add
add
mov
cmc
add
add
imul
pusha
out
add
add
pop
cwtl
add
add
lcall
jbe
add
add
jmp
xchg
add
xchg
jno
cmpsb
mov
in
add
outsl
add
add
pop
leave
sub
pop
add
push
push
push
push
push
call
add
pop
mov
neg
add
add
mov
xchg
pop
add
add
fwait
add
lret
je
add
icebp
add
add
aad
leave
mov
popa
add
add
bnd
add
add
into
mov
add
push
xor
add
lea
sub
pop
push
push
sub
inc
pop
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
stc
add
imul
cwtl
add
add
add
add
leave
les
add
add
cltd
into
lret
test
cltd
arpl
fcoms
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
clc
jmp
cmpsb
leave
push
mov
xchg
loopne
add
test
add
jle
pop
add
add
roll
iret
push
add
mov
add
fidivrs
mov
add
rol
jb
mov
sub
pop
movl
push
push
push
push
push
lea
push
push
call
incb
add
adc
out
add
lock
add
add
mov
out
add
add
mov
mov
in
in
lcall
add
add
sub
pop
call
push
push
lea
push
push
push
push
push
push
push
push
call
add
xchg
leave
add
add
ljmp
add
in
rclb
add
add
mov
cwtl
xlat
lock
add
pop
xchg
call
subl
push
pop
cmpl
jne
pop
push
push
push
push
lea
push
push
push
push
call
ja
add
int
pop
add
call
pushf
cwtl
mov
lods
mov
addb
add
add
xchg
add
les
out
hlt
sarb
add
in
jb
mov
mov
add
add
cmp
pushf
add
mov
in
loopne
pop
pop
push
xor
shl
add
pop
pop
push
push
push
push
call
je
xchg
movsb
add
add
call
add
loop
imul
add
je
add
jmp
rcl
mov
mov
add
add
pop
fwait
iret
cltd
jmp
add
lock
lock
leave
ret
push
push
lea
push
push
push
call
jmp
fsts
scas
mov
add
xchg
mov
jecxz
add
cltd
pop
ret
test
add
cld
mov
jno
sahf
addl
mov
pop
jno
addl
add
jp
roll
mov
outsl
add
stos
mov
jne
nop
add
lcall
push
shr
pop
mov
add
push
add
add
pop
push
push
push
push
push
push
push
call
mov
hlt
add
add
aad
cli
test
lea
add
add
add
int
add
add
cld
fidivl
add
xchg
mov
mov
movsl
test
add
jle
int3
xchg
add
rorb
in
call
add
push
call
add
mov
add
add
mov
add
pop
mov
lcall
sub
pop
push
push
push
push
push
push
call
nop
test
mov
lcall
movsb
pop
cltd
shlb
std
lods
ljmp
mov
fwait
cwtl
cld
je
add
add
add
push
push
shr
push
or
not
add
inc
sub
sub
lea
not
pop
sub
inc
rol
pop
push
push
call
out
push
add
add
call
xchg
push
add
arpl
add
pop
ljmp
pop
mov
add
cmpsb
mov
int3
scas
add
popa
popl
jne
add
xchg
add
add
add
add
scas
add
add
sub
pop
pushl
push
push
lea
push
call
rolb
test
add
add
cltd
std
pop
add
mov
add
add
push
add
add
add
mov
pop
xchg
lods
add
add
outsl
addr16
cltd
add
xchg
add
les
pusha
in
xchg
add
testl
add
xchg
add
add
push
sub
pop
call
push
push
push
lea
push
lea
push
lea
push
call
mov
add
add
add
jae
add
add
shll
add
int
mov
xor
add
add
add
add
add
add
in
cli
fdivrs
clc
mov
jp
aam
add
jns
shl
sub
pop
call
push
push
push
push
pop
add
xor
sub
sub
pop
shr
xor
pop
push
add
add
sub
ror
pop
pushl
push
sub
sub
pop
call
push
shr
inc
pop
call
push
push
ror
add
push
or
inc
add
add
sub
shl
ror
pop
pop
push
ror
add
lea
pop
pushl
push
add
ror
ror
pop
call
push
shl
sub
shr
pop
call
mov
push
lea
pop
lea
sub
push
sub
pop
mov
push
lea
push
push
lea
push
push
lea
push
push
push
call
lcall
jb
mov
add
test
add
popf
add
cmpsb
mov
data16
data16
add
bound
push
test
mov
add
add
add
cld
andl
add
sub
pop
shr
push
push
push
push
push
push
call
fcmovu
mov
iret
iret
aam
mov
rolb
roll
add
cmpsl
nop
add
add
stos
add
add
add
roll
lods
add
sub
pop
add
mov
push
lea
push
push
push
push
push
call
aam
add
imul
movsl
mov
andl
cltd
add
js
mov
add
pushf
add
test
enter
sub
pop
mov
add
push
add
dec
pop
add
mov
push
push
push
lea
push
push
call
xchg
mov
add
hlt
add
mov
add
repnz
mov
shl
add
andl
xchg
add
movsb
notl
add
pop
mov
push
inc
shr
pop
cmp
jne
push
lea
push
lea
push
call
add
loope
add
popl
add
fsub
mov
pop
mov
add
lds
mov
mov
imul
imul
add
add
add
add
frstor
add
popf
xchg
mov
xchg
loope
in
mov
pop
pop
add
mov
sub
pop
cmp
jne
push
push
push
push
push
push
lea
push
call
mov
insb
xchg
add
sti
stos
in
add
cld
add
add
add
mov
push
popl
add
add
lret
add
add
iret
arpl
pop
mov
push
push
lea
push
push
call
rolb
rolb
add
mov
fs
pop
repnz
in
add
std
add
jge
stos
add
fiadds
add
add
data16
imul
add
outsl
jns
jbe
mov
mov
jp
add
add
mov
add
add
int3
pop
jo
add
add
lcall
add
add
add
enter
push
or
add
shrb
pop
imul
cld
mov
push
lea
pop
sub
jne
push
push
push
lea
push
push
push
push
push
call
lret
mov
loope
add
add
int3
xchg
add
add
sti
lds
not
add
rolb
xchg
add
xchg
add
je
xchg
leave
jae
add
sarb
rolb
sahf
add
in
movsb
in
add
push
add
lcall
inc
adc
push
ja
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
fstp
mov
gs
add
in
cmc
add
int3
add
add
mov
mov
add
mov
add
ljmp
iret
add
add
mov
add
add
arpl
add
push
add
lcall
add
add
jmp
push
push
push
lea
push
call
jns
stos
fs
in
jns
add
aad
lahf
mov
enter
jecxz
cmc
add
add
add
add
popf
add
add
add
nop
iret
add
add
add
add
movsl
add
xchg
add
add
scas
rol
jmp
loop
add
jge
in
lock
lcall
inc
cld
mov
push
push
push
push
lea
push
push
call
add
pop
xchg
hlt
bound
into
add
mov
stos
xchg
gs
shr
roll
xchg
les
sti
add
add
add
add
add
add
into
mov
add
mov
incb
std
add
cmpsb
add
add
add
push
add
mov
add
cli
add
test
add
push
lea
pop
mov
push
pop
movl
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
xchg
xor
mov
add
xchg
add
add
add
ljmp
add
movb
pop
out
sub
pop
jmp
push
rol
lea
dec
not
pop
mov
push
add
add
shl
pop
cmpw
jne
push
ror
add
not
lea
pop
mov
push
ror
add
pop
movl
jmp
push
shl
ror
add
xor
pop
pushl
push
inc
pop
pop
push
inc
lea
pop
mov
push
rol
pop
mov
push
xor
pop
mov
push
push
inc
push
and
add
shr
inc
sub
pop
dec
ror
pop
push
add
pop
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
in
hlt
add
pop
les
movsl
xchg
add
pop
mov
lods
add
jl
add
adcl
sub
pop
call
push
lea
inc
sub
pop
cmpl
je
push
push
inc
lea
dec
push
xor
add
add
sub
sub
rol
add
shr
shr
pop
shr
inc
pop
push
rol
pop
push
push
inc
pop
call
cmpl
je
push
push
lea
add
sub
push
and
add
add
lea
sub
pop
shl
dec
pop
push
lea
push
lea
push
lea
push
push
push
push
call
xchg
add
in
add
out
mov
jb
add
add
cwtl
stos
add
mov
mov
loope
out
pop
add
fs
rolb
add
fnstcw
add
add
jnp
cmpb
jns
lea
mov
outsl
mov
push
sub
pop
push
push
push
push
lea
push
push
lea
push
call
add
mov
mov
fs
cltd
into
test
add
cmc
movsl
add
test
int
add
add
in
clc
add
add
add
bound
add
mov
lret
xchg
add
add
in
call
add
push
push
push
lea
push
lea
push
push
push
call
jmp
push
add
pusha
add
mov
lock
push
mov
add
notb
add
add
add
add
add
add
fsubl
leave
add
fiadds
push
int
add
mov
scas
pop
add
jmp
fadds
movsl
fwait
add
xchg
add
int3
pop
sub
pop
cmpl
je
push
push
dec
sub
push
or
inc
add
shl
add
add
sub
inc
pop
sub
ror
add
pop
push
push
push
push
push
lea
push
push
call
add
add
add
add
movsb
lcall
add
mov
add
add
int3
std
scas
add
add
add
add
jno
sub
pop
push
push
push
lea
push
push
lea
push
push
lea
push
call
movsl
arpl
lahf
add
pop
add
shrb
add
add
xchg
add
lahf
mov
push
mov
in
call
push
push
push
push
lea
push
push
push
push
lea
push
push
call
jge
add
add
scas
mov
fbstp
add
add
mov
cli
add
mov
subl
insb
add
cltd
jge
jge
add
add
nop
add
add
fldt
sub
pop
cmpl
je
push
push
rol
push
or
not
add
sub
add
shr
lea
rol
pop
shr
add
lea
pop
push
push
push
lea
push
push
call
data16
add
jnp
ret
add
add
add
mov
add
fiadds
add
sub
xchg
add
rolb
div
add
add
add
xchg
fstl
out
sub
pop
push
push
push
push
lea
push
call
add
add
scas
jo
add
add
fucomp
add
stos
je
xchg
add
jmp
xchg
xlat
push
add
sub
pop
call
push
lea
add
pop
cmpl
je
push
push
lea
push
xor
add
dec
sub
sub
xor
sub
add
add
shl
pop
shl
pop
push
add
pop
push
push
add
sub
dec
lea
pop
call
cmpl
je
push
push
sub
sub
push
xor
add
sub
sub
rol
xor
pop
inc
pop
push
rol
pop
push
push
dec
sub
pop
call
push
lea
push
call
add
mov
add
add
int
push
in
lcall
add
mov
add
jle
add
movsb
add
xchg
mov
jno
in
clc
pop
cmpl
jne
push
push
call
add
mov
sahf
enter
add
insb
push
ja
mov
push
add
mov
testl
mov
mov
add
in
repnz
mov
rcrl
jecxz
int
add
sti
add
pushf
mov
add
fs
add
lcall
inc
adc
add
not
shl
pop
movl
push
add
inc
pop
jmp
push
pop
xor
push
push
lea
push
call
mov
add
xchg
mov
add
push
in
jmp
jp
add
rolb
add
add
push
lret
add
pop
add
lret
add
in
hlt
pop
pop
push
sub
lea
xor
add
pop
pop
push
ror
inc
pop
pop
push
pop
pop
push
push
push
push
push
push
push
call
push
jne
nop
addl
add
mov
sbb
xchg
cltd
mov
push
add
stc
add
add
mov
add
mov
push
lods
cmc
xchg
xor
fwait
add
xchg
add
jne
xchg
add
mov
pop
shll
roll
sub
pop
leave
push
push
push
lea
push
push
push
push
lea
push
push
call
push
add
bound
add
add
add
add
sbb
pop
mov
repnz
add
add
je
mov
or
push
rol
pop
push
push
lea
push
push
push
push
push
call
notl
add
pop
test
cli
push
stos
ja
mov
idiv
mov
xchg
cwtl
mov
into
add
shrl
mov
mov
js
lret
xchg
add
add
mov
jbe
loop
add
std
add
push
add
add
in
push
push
call
in
out
gs
in
jl
jbe
clc
add
pop
add
pop
out
lret
add
rcrb
sti
add
test
out
test
add
loopne
aam
mov
add
add
add
mov
add
xchg
test
aam
push
pusha
jle
sub
pop
add
push
ror
pop
cmpl
jne
push
push
lea
add
push
or
inc
add
sub
add
sub
shr
sub
rol
sub
shr
pop
inc
ror
pop
push
push
lea
push
push
lea
push
call
add
mov
mov
enter
add
jl
add
add
add
jbe
in
in
pop
pushl
push
push
push
push
push
push
push
push
call
rol
data16
add
shl
add
add
test
add
mov
lcall
add
add
mov
add
add
in
loopne
call
push
push
call
jmp
add
ljmp
push
test
xchg
mov
add
jecxz
add
add
cmc
movsb
push
add
ja
ja
cwtl
add
add
add
fndisi(8087
add
mov
icebp
les
outsl
add
scas
int3
xchg
scas
add
stos
popf
sub
pop
push
call
push
push
lea
push
push
call
add
add
add
jnp
fdivrp
pop
add
mov
ret
icebp
push
add
push
add
add
mov
sub
pop
jmp
cmpl
jne
push
push
push
lea
push
push
call
add
mov
add
add
cwtl
rcrl
add
mov
add
je
cmpsb
sar
iret
gs
push
imul
add
in
fnstenv
aam
scas
mov
js
ret
sub
pop
mov
push
add
inc
sub
pop
call
push
add
sub
shr
pop
ret
push
push
call
iret
cli
in
add
lods
mov
arpl
mov
jl
xchg
mov
fsubl
les
add
add
enter
mov
jo
je
aad
mov
add
fstpt
test
flds
iret
movsb
xchg
push
add
test
popf
xlat
add
push
filds
lcall
xor
add
cmpl
jne
push
push
shr
sub
push
or
inc
add
ror
sub
shr
rol
sub
sub
add
pop
shr
rol
not
not
pop
push
push
push
push
push
push
push
push
push
push
call
add
test
xchg
add
add
fnsave
xchg
popl
mov
add
xchg
add
add
popa
flds
shlb
jbe
call
fdivr
lcall
jne
call
push
push
push
push
push
push
call
leave
flds
roll
popl
add
add
je
pop
pop
add
mov
std
add
rolb
xchg
add
iret
push
pop
lea
add
mov
mov
pop
mov
lcall
add
gs
imull
push
push
push
lea
push
call
add
imul
cwtl
add
bound
scas
add
add
add
xchg
shr
lea
add
clc
clc
push
lret
pushf
stos
cld
mov
pusha
add
sub
pop
call
push
push
push
call
pop
test
jmp
cmpsb
roll
add
add
add
add
add
cmc
lea
add
add
sub
pop
jmp
push
add
add
not
pop
cmpl
je
cmpl
jne
push
lea
pop
mov
push
pop
mov
push
push
push
sub
rol
push
push
pop
add
xor
xor
not
sub
sub
shr
pop
dec
pop
push
push
call
lods
hlt
in
add
mov
movsb
mov
clc
ja
add
cmpsb
jae
add
add
add
cwtl
add
add
add
into
add
loopne
add
lds
insb
popf
mov
fs
stos
mov
arpl
xchg
add
jbe
out
add
jne
call
push
pop
call
push
push
lea
rol
lea
shl
push
sub
add
sub
sub
add
shr
pop
shr
lea
inc
pop
push
push
push
push
call
sahf
add
add
add
pop
add
int
add
loope
out
add
mov
jb
add
add
add
add
cmpsb
jmp
add
add
sub
pop
pushl
call
push
rol
pop
call
push
push
dec
push
xor
add
dec
sub
ror
pop
sub
sub
ror
shr
pop
push
not
add
pop
pushl
call
push
push
push
push
push
push
push
push
push
call
add
iret
fisubl
add
cmc
add
mov
add
test
test
add
jl
mov
add
add
add
jecxz
in
push
push
cwtl
mov
add
lcall
shrb
adcb
rolb
push
push
pop
add
sub
xor
sub
lea
xor
pop
ror
pop
push
push
push
call
add
shll
push
mov
add
add
add
fsub
out
std
add
aam
stos
aam
add
int
divl
add
ljmp
add
xchg
out
into
pop
test
push
mov
add
pop
stos
add
add
cli
cld
add
add
pop
sub
pop
pushl
call
push
push
push
call
addl
jl
mov
xchg
add
add
ljmp
add
add
add
movsb
mov
mov
hlt
lcall
shrb
sbb
rolb
xor
add
not
ror
xor
sub
shl
pop
add
pop
push
push
lea
push
push
push
push
push
call
or
loopne
add
add
push
add
cwtl
je
cwtl
add
jecxz
add
stos
cwtl
add
jle
mov
add
add
add
push
add
add
add
add
outsl
data16
add
mov
push
sub
pop
pushl
push
rol
pop
call
push
rol
xor
ror
pop
call
push
push
add
push
sub
add
add
shl
sub
xor
pop
not
add
pop
push
push
call
mov
lock
add
neg
add
sarl
clc
add
add
fcmovnb
pop
xchg
push
lret
push
add
pop
add
add
jb
lcall
add
add
jno
mov
cli
add
sub
pop
pushl
push
add
ror
xor
sub
pop
call
push
push
push
push
push
push
push
push
call
add
out
add
add
stos
lret
push
jp
add
add
add
mov
xchg
add
lea
and
xchg
add
scas
xchg
mov
add
sub
pop
call
push
push
add
push
xor
add
rol
sub
rol
inc
sub
shr
pop
inc
pop
push
add
pop
pushl
push
push
lea
push
push
push
push
push
call
outsl
flds
add
rclb
add
lods
push
addb
mov
add
xorb
test
add
ljmp
stos
add
add
add
sub
pop
call
push
push
push
lea
push
push
push
push
call
ljmp
add
popl
add
mov
mov
add
call
aad
add
xlat
add
add
jecxz
pop
push
loope
icebp
aam
fstpl
stos
add
loopne
add
add
add
xchg
addl
add
xchg
mov
pop
call
push
push
not
inc
sub
shl
push
sub
add
xor
rol
sub
lea
pop
pop
push
push
push
lea
push
call
add
cmc
mov
push
jns
pop
outsl
sahf
stc
neg
add
add
push
test
insb
add
rolb
scas
jne
bound
stos
ret
fdivl
stos
add
mov
test
add
xchg
add
xchg
test
sub
pop
pushl
push
sub
xor
shr
pop
call
call
push
push
add
xor
add
sub
push
and
add
dec
not
shr
not
sub
inc
pop
dec
xor
pop
push
add
xor
xor
inc
pop
pushl
push
push
push
push
call
add
ja
push
add
push
jbe
mov
idivl
sarl
add
je
mov
add
lret
pusha
add
out
loop
add
add
add
xchg
insb
mov
add
jbe
push
bnd
jmp
test
mov
pop
xchg
fldl
add
add
sub
pop
call
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
jmp
add
jecxz
add
add
out
int3
xchg
mov
in
rorl
lcall
fcom
add
add
mov
je
jecxz
add
add
lods
add
call
push
push
lea
sub
push
push
pop
add
ror
dec
sub
add
pop
lea
xor
pop
push
push
push
lea
push
push
call
bound
lcall
nop
add
xchg
jl
jle
mov
jge
out
jecxz
add
mov
add
mov
add
nop
lret
mov
add
nop
mov
xchg
add
test
jae
leave
sarb
data16
les
fs
pop
pushl
push
add
pop
call
lea
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
mov
mov
add
mov
push
mov
fbstp
iret
movb
add
lret
mov
mov
push
push
push
call
lods
jl
mov
push
add
xchg
add
add
add
xchg
push
out
add
enter
mov
mov
fadds
cmpsl
pushf
sahf
add
xchg
jbe
leave
lret
mov
shrb
fiadds
das
ror
dec
push
and
add
dec
sub
sub
inc
sub
pop
not
pop
push
push
lea
push
lea
push
call
rcr
add
add
cwtl
add
lret
filds
add
imul
pop
add
arpl
add
pop
in
fdivrs
idivl
in
lock
lcall
jne
push
lea
push
call
lcall
test
mov
add
pop
bnd
std
hlt
jo
lcall
imul
push
add
fiaddl
xchg
add
movl
pop
add
call
push
push
sub
push
or
not
add
sub
not
rol
sub
add
add
dec
pop
xor
not
pop
push
lea
push
push
push
lea
push
push
push
push
call
push
push
add
mov
mov
jecxz
call
mov
jne
push
add
movsl
add
aam
jo
stc
arpl
jne
call
push
push
lea
push
push
lea
push
lea
push
call
fstps
je
jno
add
jae
pop
jp
cli
push
push
mov
add
add
add
popa
add
je
movb
push
out
rol
push
sub
pop
call
push
push
lea
add
add
push
xor
add
shl
add
sub
sub
ror
xor
pop
dec
sub
sub
pop
push
lea
push
lea
push
push
push
push
push
push
call
loop
add
pop
rorl
mov
add
leave
add
add
mov
add
xchg
int3
add
add
mov
imul
stc
add
jb
lea
enter
out
pop
add
test
add
add
push
jne
mov
fiaddl
shll
gs
pop
pushl
call
push
pop
call
push
push
lea
lea
dec
sub
push
or
not
add
xor
shr
sub
shl
not
inc
pop
add
not
pop
push
push
push
push
push
push
push
call
add
push
ja
pop
lret
add
add
mov
lret
mov
mov
pop
jne
lret
testb
jb
adcl
in
add
add
add
xchg
movsl
sarb
pushf
add
add
jb
shr
add
jmp
add
add
loop
in
in
lcall
jne
call
push
push
push
sub
add
shl
sub
sub
add
dec
pop
xor
shr
dec
shr
pop
push
push
sub
dec
add
push
and
add
lea
lea
sub
inc
xor
pop
dec
shl
add
pop
push
add
not
sub
pop
call
pop
push
push
push
push
push
lea
push
push
push
call
out
in
add
lea
push
add
add
cltd
leave
pop
pop
pop
add
loopne
movl
out
add
cmc
mov
push
imul
add
xchg
call
add
ljmp
jo
sbb
cld
ja
js
add
nop
cmc
add
lcall
add
jne
push
push
dec
ror
add
push
xor
add
dec
sub
pop
ror
pop
push
push
call
mov
add
aam
pop
add
mov
lret
add
xchg
add
jp
mov
jno
mov
add
jle
sub
pop
pushl
push
xor
pop
call
push
add
pop
mov
push
lea
xor
pop
lea
push
push
sub
push
push
pop
add
inc
add
not
sub
shl
shr
pop
xor
shl
inc
dec
pop
push
xor
sub
pop
pushl
call
push
lea
add
pop
lea
push
push
push
lea
push
call
add
xchg
sahf
popa
add
mov
add
add
add
lea
pop
test
mov
add
add
ficompl
add
add
xchg
sub
pop
push
push
lea
push
call
icebp
add
jo
add
push
movsl
add
add
fiadds
add
lahf
mov
aad
add
jle
scas
mull
je
jne
mov
add
popa
add
add
xchg
pusha
add
sub
pop
push
push
xor
pop
pushl
push
push
xor
push
sub
add
dec
sub
shr
pop
add
pop
push
push
push
push
push
lea
push
push
push
call
shlb
add
cltd
mov
jge
mov
int3
mov
add
mov
add
push
add
pop
add
lds
in
mov
mov
xchg
push
data16
popa
add
push
push
add
xchg
add
xchg
add
xchg
sub
pop
push
call
push
add
add
dec
pop
call
mov
push
sub
inc
ror
pop
int3
push
add
sub
shl
pop
lea
push
push
shl
not
push
and
add
sub
shr
add
sub
add
rol
pop
shr
pop
push
push
push
lea
push
push
call
add
roll
mov
aam
ljmp
mov
mov
mov
add
add
js
jae
add
add
loopne
xchg
stos
je
add
roll
js
add
add
addr16
add
add
mov
hlt
mov
cmc
fadds
lcall
jne
call
push
push
push
call
add
int
arpl
lcall
mov
add
add
test
jecxz
push
jnp
add
nop
add
rolb
push
push
lea
push
call
movb
pop
mov
test
ror
test
filds
add
add
ja
add
add
mov
addb
jns
add
add
cmpsl
add
mov
mov
add
roll
fwait
mov
mov
mov
xlat
add
jae
jo
fcompl
lock
lcall
shrb
mov
shlb
push
xor
add
inc
sub
add
rol
pop
sub
inc
ror
pop
push
not
inc
inc
pop
pushl
call
push
inc
pop
call
push
dec
dec
pop
mov
lea
push
push
not
lea
push
sub
add
shl
lea
shl
xor
sub
rol
shl
shl
pop
not
dec
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
push
lea
add
add
pop
enter
xchg
push
pop
mov
shrl
add
test
add
xchg
idivb
mov
mov
push
add
push
add
add
fildll
jp
adcb
in
fdivr
lcall
jne
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
pop
mov
mov
add
push
lock
mov
sub
pop
call
push
push
lea
push
push
push
push
push
push
call
mov
add
mov
shrb
ljmp
fcmovnb
pop
cwtl
add
int
clc
pop
out
cmpsb
add
rolb
int
mov
rcrl
jl
add
iret
imull
int3
lcall
pop
lea
push
not
pop
push
push
sub
lea
sub
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
push
call
fildl
pusha
jle
add
add
mov
pop
jno
jns
add
push
in
pop
out
jl
mul
mov
scas
jo
loopne
lea
mov
xchg
mov
add
add
stc
fs
pop
push
pushl
push
push
not
push
or
not
add
inc
sub
shl
add
lea
pop
not
not
pop
push
sub
pop
push
push
push
push
call
test
add
in
sarl
add
test
add
pop
add
mov
mov
jnp
clc
popa
add
jne
add
add
lcall
shrb
xchg
out
push
add
shr
not
push
or
not
add
xor
shl
dec
rol
sub
sub
lea
pop
xor
pop
push
lea
pop
pushl
call
push
not
pop
push
push
pop
call
push
push
add
shl
push
sub
add
sub
add
add
sub
xor
pop
rol
sub
pop
push
shr
sub
inc
pop
pushl
call
push
ror
not
shr
dec
pop
call
pushl
push
not
pop
mov
jmp
push
push
shl
not
push
xor
add
dec
sub
sub
sub
shr
pop
ror
inc
ror
pop
push
pop
pushl
push
sub
pop
call
push
push
push
push
push
call
add
pop
add
mov
add
les
add
jle
push
add
aam
jbe
addb
add
add
mov
add
loopne
xchg
add
lcall
add
add
add
scas
jnp
in
lock
lcall
shrb
fmul
xlat
push
shl
rol
push
xor
add
shl
add
sub
xor
ror
pop
sub
pop
push
shl
pop
pushl
push
shr
pop
call
push
push
lea
push
push
push
push
lea
push
push
push
call
fcmovbe
fadds
add
jbe
add
add
ja
add
fadd
mov
add
cmp
fcmovnbe
add
arpl
lods
mov
add
mov
mov
add
add
push
stos
in
add
add
add
add
call
mov
add
push
shll
in
fdivr
lcall
push
push
push
push
call
incb
xchg
mov
pop
jp
stc
fs
fwait
shrb
pop
subb
std
mov
add
add
add
fldl
add
add
add
bound
add
mov
aam
add
add
push
sub
pop
call
leave
push
add
sub
sub
pop
add
push
push
push
push
push
push
push
push
push
call
add
mov
scas
addr16
aad
add
add
mov
add
add
jae
push
int3
add
pop
add
cmpsb
add
mov
cltd
imul
pop
pop
pop
push
shl
lea
pop
pop
push
sub
pop
xor
inc
push
lea
push
push
call
fisubs
jmp
push
add
add
sahf
add
add
addl
test
pop
add
popa
add
add
jnp
push
add
mov
add
push
in
hlt
pop
ret
push
push
push
push
lea
push
push
push
push
push
push
call
jbe
push
push
add
add
scas
stc
add
add
jne
add
mov
out
clc
add
jbe
loope
push
movsl
iret
sahf
mov
adcb
lret
in
fdivr
lcall
push
sub
inc
pop
ret
push
push
lea
push
push
push
push
lea
push
call
push
testb
add
add
stc
std
add
int3
push
addl
pop
jbe
movsb
in
xchg
add
add
pusha
add
addb
add
mov
jle
add
add
pushf
std
fisttpl
fstps
add
push
mov
push
push
push
call
cwtl
fdivl
add
add
test
add
fmull
test
pusha
mov
jge
fildl
in
add
add
push
lods
sahf
jmp
idiv
add
hlt
lcall
jge
add
test
add
mov
push
shl
sub
shl
sub
pop
jmp
push
shl
sub
pop
mov
push
ror
pop
and
push
rol
dec
sub
pop
xor
push
lea
push
lea
push
call
add
add
fiaddl
pop
lret
std
clc
jl
add
add
stos
add
in
cmpsb
mov
add
pop
add
add
add
mov
cmpsl
add
add
push
add
add
call
mov
add
hlt
pop
xor
add
push
pop
xor
dec
push
not
xor
pop
sub
push
push
push
push
call
call
insb
mov
jb
loope
jp
popa
add
add
add
sti
add
add
jae
std
clc
icebp
movsb
addr16
add
mov
mov
add
sub
pop
jmp
push
inc
pop
sub
push
lea
push
lea
push
lea
push
push
call
xchg
add
add
add
mov
movsl
add
je
loop
add
pop
popf
xchg
sub
pop
pushl
push
lea
pop
pop
push
push
push
push
push
push
push
push
push
push
call
add
test
scas
add
test
add
add
push
add
pop
mov
add
outsl
pop
in
mov
add
leave
fwait
xchg
push
add
add
lret
mov
add
lcall
jmp
push
pop
cmp
jne
mov
push
add
sub
pop
lea
push
sub
pop
sub
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
push
jnp
lret
add
add
out
add
insb
xor
shl
orl
pop
mov
add
add
add
test
pop
mov
shr
push
push
push
call
cmc
mov
lret
fldl
add
xchg
mov
lret
rorl
movsl
divl
add
mov
ror
add
jecxz
add
out
add
xchg
scas
gs
add
loope
mov
add
rorb
hlt
pop
add
push
lea
push
push
push
push
push
lea
push
push
call
xchg
add
add
sti
mov
mov
add
add
add
xchg
into
add
fsubrs
mov
loopne
lcall
jmp
add
add
add
sub
pop
pop
push
not
add
pop
shr
and
push
sub
pop
sub
push
add
pop
cmp
jne
push
inc
not
add
pop
leave
ret
push
push
push
push
lea
push
push
push
lea
push
push
push
call
test
xchg
fiaddl
add
add
add
add
xorl
add
loop
jl
add
mov
cwtl
mov
mov
add
icebp
bound
out
roll
add
pop
push
push
inc
rol
lea
sub
pop
mov
push
push
push
push
lea
push
call
add
mov
xlat
jcxz
add
add
add
imul
add
add
pop
add
sub
pop
add
push
add
sub
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
call
xchg
lret
add
imul
mov
add
add
add
mov
add
add
add
add
fnstenv
mov
add
nop
push
fwait
add
sti
pop
fldt
in
loopne
lcall
push
pop
push
push
pop
push
mov
push
sub
shr
pop
lea
push
not
shr
pop
sub
push
rol
not
pop
mov
push
sub
rol
pop
shr
add
push
push
push
push
push
push
call
insb
cmpsb
add
add
mov
jbe
scas
add
mov
mov
imul
mov
mov
sahf
pop
fwait
add
lret
add
add
xchg
add
in
call
add
add
pop
or
hlt
pop
mov
add
push
inc
not
pop
xor
push
sub
sub
pop
mov
push
inc
pop
and
rol
push
add
add
pop
rol
push
push
push
push
push
call
mov
ja
jl
pop
mov
stos
add
add
mov
out
add
pop
xchg
jl
sahf
add
out
push
push
add
outsl
sahf
add
arpl
add
mov
cli
fst
add
add
mov
bound
loope
add
xchg
ja
add
loope
imul
mov
in
in
lcall
add
add
inc
mov
lea
push
push
push
call
add
add
roll
test
add
mov
mov
push
stc
add
pop
mov
xchg
jbe
ljmp
mov
cmc
cwtl
add
push
pop
push
stc
add
mov
addl
leave
bound
pop
clc
fs
in
add
add
push
push
call
test
add
mov
movsl
add
add
add
jp
mov
add
add
sub
mov
xchg
pop
add
add
add
xlat
add
in
jo
lahf
test
lret
mov
shr
add
pop
test
add
scas
loope
sub
pop
cmpb
jne
add
push
rol
xor
inc
pop
cmp
je
push
ror
pop
add
push
push
push
push
push
call
faddl
add
js
xchg
jns
add
aam
ljmp
nop
insb
jmp
js
add
pusha
add
add
add
mov
pushf
popl
mov
add
in
in
lcall
jnp
add
test
pushl
rclb
xor
pop
push
lea
sub
pop
pop
pop
push
ror
pop
pop
push
lea
push
call
add
pop
stc
mov
lcall
mull
cwtl
fstp
add
leave
out
mov
add
add
sub
pop
pop
push
add
add
lea
add
pop
leave
ret
push
pop
mov
push
add
pop
add
push
push
push
push
push
push
push
push
push
lea
push
call
jbe
ljmp
arpl
add
add
add
mov
add
mov
add
add
fildl
add
add
addl
out
push
jne
adcw
pop
add
add
ret
add
add
add
add
xchg
sub
pop
mov
push
dec
sub
rol
pop
pushl
push
push
push
push
push
push
push
push
push
lea
push
call
add
rolb
nop
pop
int
pushf
add
pop
mov
mulb
data16
add
pop
in
icebp
add
mov
in
fcomps
les
push
shr
pop
call
xor
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
pop
add
add
xlat
mov
ret
in
mov
rolb
hlt
pop
fstl
xchg
xchg
add
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
sahf
jecxz
testb
xchg
out
into
imul
cmc
icebp
in
rolb
add
xlat
xchg
add
push
insb
pop
jb
scas
int3
mov
xchg
add
mov
jo
mov
imul
hlt
scas
add
and
add
add
lcall
push
add
inc
inc
sub
pop
pop
push
inc
pop
pop
pop
push
inc
pop
leave
push
push
push
push
call
arpl
cmpsl
jns
add
jns
add
add
pop
add
pop
add
add
xchg
add
add
add
ror
in
add
sahf
add
add
add
lret
stos
add
lds
add
add
clc
fnstcw
ret
push
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
in
add
pushf
rcll
xchg
push
ret
add
xchg
add
stos
add
pusha
int3
add
mov
fdivrl
rolb
data16
add
mov
mov
add
add
aad
lea
loopne
mov
push
inc
add
inc
pop
add
push
push
not
not
shr
pop
push
push
push
push
push
push
push
push
push
call
js
add
cwtl
mov
add
add
add
loopne
test
fsubs
add
rolb
push
lds
shll
add
lock
add
iret
add
lock
jp
add
in
jmp
xchg
imul
add
add
test
in
lcall
mov
push
push
push
push
push
push
push
call
add
add
mov
repnz
mov
add
add
jle
cli
mov
mov
popa
cwtl
add
bound
in
ror
add
add
add
imul
popf
fwait
add
push
mov
imul
sub
pop
push
pop
push
inc
pop
lea
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
test
add
mov
add
add
out
mov
add
sti
add
hlt
add
mov
pusha
add
nop
add
imul
in
negl
add
mov
add
add
sar
add
ljmp
mov
xchg
jns
push
lea
push
push
call
cmpsl
shl
jne
pop
popl
cmpsl
lret
add
add
add
add
fmuls
add
jecxz
add
ljmp
fcom
fiadds
mov
add
out
pop
mov
fildl
fwait
test
add
jns
sub
pop
mov
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
filds
mov
div
jno
add
pop
cltd
add
in
pop
add
add
mov
mov
add
jns
popl
add
add
rcll
mov
add
lock
add
add
hlt
out
ffree
arpl
add
cld
mov
test
cltd
push
add
rcll
int
add
fildl
lock
sub
pop
shr
add
push
lea
push
push
push
call
sti
jne
les
fistpl
sti
add
addr16
lahf
cmpsb
lock
js
test
bound
stos
add
jmp
add
ljmp
shr
add
xchg
rolb
add
push
add
jmp
jb
ret
popa
sti
xchg
add
pop
js
fsts
call
add
out
mov
in
jecxz
add
mov
jl
loopne
jmp
add
lret
hlt
mov
mov
hlt
mov
push
fisttpll
pushf
add
fadds
loopne
in
clc
pop
pushl
popl
push
push
push
push
push
push
push
push
push
call
jnp
in
in
cmc
add
ret
jno
fdivl
xchg
ret
add
ljmp
cld
add
out
add
jp
jl
mov
add
add
test
mov
in
fdivr
lcall
jnp
push
lea
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
jo
push
add
mov
pop
stos
loop
mov
mov
add
fcompl
stc
mov
add
scas
add
add
add
sub
pop
add
xor
push
sub
inc
inc
sub
pop
lea
push
dec
lea
pop
mov
add
push
pop
xor
push
sub
pop
rol
nop
push
ror
pop
nop
push
ror
rol
pop
xor
nop
push
push
call
add
mov
mov
ljmp
add
add
je
in
imul
sahf
test
add
add
sahf
push
lods
js
lret
push
insb
add
test
sahf
add
jle
cmpsb
add
mov
into
add
add
add
mov
add
sub
pop
nop
push
dec
shr
ror
pop
inc
push
push
call
mov
add
add
add
add
add
pop
stos
in
nop
mov
push
add
cmpb
mov
outsl
push
mov
addl
jno
add
add
add
aam
xlat
je
add
sahf
jle
jo
add
scas
rcll
add
add
add
mov
enter
pop
nop
push
pop
nop
cmpb
jne
push
push
push
push
push
push
call
xchg
add
aam
les
push
fcmovbe
add
jecxz
add
shll
add
lock
jmp
mov
add
aad
mov
add
call
ss
push
xor
pop
nop
nop
push
shr
add
shl
pop
cmp
je
push
sub
pop
nop
push
shr
shl
pop
nop
push
push
call
cmpsb
add
roll
add
add
add
add
insb
mov
test
popa
add
add
add
add
xchg
add
fidivl
fsubp
int
ret
ljmp
add
pop
ret
ljmp
lcall
push
lea
push
push
push
push
push
push
push
lea
push
call
cmpsl
rolb
add
mulb
add
lds
add
mov
add
add
cltd
push
add
in
fdivr
lcall
nop
push
push
lea
push
push
push
push
lea
push
lea
push
call
repnz
xchg
add
add
negl
icebp
fistpl
mov
push
push
std
mov
scas
mov
aam
add
fdivrp
in
mov
addb
sub
pop
cmp
jb
push
push
lea
push
push
push
push
push
push
push
push
call
lds
lods
pop
fstpt
add
add
add
add
pop
loope
lea
mov
pop
fwait
pop
add
add
addl
add
lahf
ja
add
add
push
add
repnz
rclb
and
add
add
pop
jmp
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
add
nop
aam
push
stc
mov
push
add
add
add
pop
in
mov
add
test
fcompl
push
and
lea
push
push
push
lea
push
call
mov
add
jp
lods
and
add
mov
insb
adcl
loopne
test
xchg
add
add
jge
mov
mov
mov
pop
add
movzwl
push
push
lea
push
lea
push
push
call
add
lods
pop
in
xchg
add
scas
movb
add
jo
mov
enter
addb
imul
lock
lock
add
pop
add
rcll
lcall
add
add
pop
test
mov
sub
pop
mov
push
push
lea
push
lea
push
push
push
push
call
into
add
lods
add
add
add
add
stos
test
xchg
pop
add
addb
lods
pushf
add
xchg
pop
add
out
mov
add
xlat
add
lcall
rorl
scas
call
add
mov
fucom
loope
add
cld
jae
mov
jl
les
in
pop
add
xlat
sahf
jmp
lds
loope
jp
lods
add
mov
cmpb
lods
fildl
add
add
add
add
mov
xchg
sub
pop
xor
xor
push
lea
push
push
call
out
pop
movsl
mov
add
add
add
add
enter
add
mov
push
scas
push
flds
fstps
bound
add
add
lods
neg
add
lcall
loope
push
push
push
lea
push
lea
push
push
call
add
out
cmc
pop
xchg
add
add
add
and
mov
je
jecxz
mov
mov
add
push
add
mov
mov
cmpb
add
int
add
add
add
in
call
add
mov
xchg
sub
dec
mov
scas
dec
loopne
mov
call
push
add
add
add
add
add
add
jle
add
add
add
push
mov
add
int3
add
xchg
mov
xchg
add
add
xchg
cltd
add
mov
lods
add
ljmp
cli
stc
add
test
push
mov
scas
add
loope
push
pop
xor
push
push
call
outsl
add
add
enter
stc
enter
add
xchg
add
add
add
add
leave
mov
jmp
push
rcrl
call
add
in
clc
lcall
loope
push
lea
add
shr
sub
pop
xor
mov
push
push
push
push
push
call
mov
mov
fildl
xlat
loop
jbe
mov
jmp
mov
add
nop
testb
movsl
push
add
shl
mov
add
add
mov
sub
pop
add
pop
push
dec
pop
pop
pop
push
sub
pop
pop
push
lea
pop
leave
ret
push
rol
sub
pop
push
push
add
ror
pop
mov
push
push
lea
push
push
push
push
push
call
out
cwtl
add
shr
mov
add
mov
loop
mov
fldl
fwait
add
pop
add
add
jecxz
cld
mov
test
lcall
in
in
push
push
push
push
call
add
add
add
xchg
in
fcoml
in
add
add
xchg
loop
mov
push
imul
hlt
push
jae
add
lds
add
add
add
add
xchg
lcall
movsb
je
push
add
jne
add
push
push
push
push
lea
push
call
add
jae
add
mov
add
scas
add
pop
add
add
add
mov
jae
test
loopne
lahf
lahf
add
fsubs
jne
add
pop
mov
add
into
mov
add
add
je
add
movsl
mov
add
cmpsl
add
pushf
shrb
in
lock
mov
push
push
lea
push
push
call
lret
push
add
add
add
add
jno
cld
lds
loop
cld
fcomp
add
int3
add
push
add
out
aad
add
popa
add
add
sub
pop
mov
push
pop
mov
test
je
push
push
push
lea
push
push
push
push
lea
push
push
push
call
jmp
imul
pop
add
into
add
mov
cmpsb
mov
xchg
mov
mov
mov
jge
push
pop
add
mov
mov
cltd
fidivl
add
mov
push
push
push
add
add
lcall
add
lcall
jno
push
push
push
push
push
lea
push
call
push
add
in
repnz
add
push
mov
add
add
push
push
add
mov
add
lock
add
xchg
mov
int3
xorl
out
add
add
add
ret
push
xchg
mov
sarb
lcall
testb
add
add
mov
push
sub
pop
mov
push
add
pop
mov
inc
push
push
push
push
lea
push
push
push
call
popa
fwait
mov
gs
pushf
roll
int
mov
push
iret
rcrl
rolb
out
into
mov
mov
ja
add
add
push
pop
bound
add
add
cltd
stos
add
movsl
add
add
add
add
sub
pop
cmp
je
test
je
push
push
call
add
add
rolb
fwait
imul
aad
add
data16
add
aad
lahf
loopne
fildl
mov
lret
shlb
test
lcall
push
push
add
sub
not
pop
inc
cmp
je
push
ror
dec
shl
lea
pop
test
jne
push
push
push
push
push
call
push
add
mov
mov
mov
pop
in
out
jle
mov
xorb
jnp
add
hlt
les
lahf
pushf
in
mov
test
ja
add
stc
sub
pop
xor
push
lea
push
push
push
push
push
lea
push
push
push
push
call
test
add
loopne
add
rolb
cld
call
pop
xchg
mov
push
mov
test
cld
mov
push
out
add
jnp
mov
mov
fnstsw
add
loopne
add
leave
cltd
mov
in
fcomps
push
push
push
push
lea
push
push
push
push
push
lea
push
call
lret
add
mov
mov
mov
add
mov
mov
add
ja
add
fcomps
push
add
pop
pop
push
shl
shl
sub
pop
pop
leave
push
sub
sub
pop
ret
push
lea
push
push
push
push
lea
push
push
push
call
mov
lock
test
jbe
in
add
add
jnp
add
mov
ljmp
outsl
adc
add
add
neg
in
push
loopne
lcall
push
push
push
push
push
call
mov
std
mov
rolb
add
jmp
int
in
add
cld
add
add
add
jne
xchg
add
add
out
mov
add
push
stc
out
mov
add
add
lahf
andl
add
in
arpl
push
xor
pop
cmp
jne
push
not
shr
pop
lea
push
push
push
call
mov
jmp
sbbb
into
mov
lret
mov
mov
add
test
testb
add
imul
aad
xchg
add
add
add
bnd
xchg
add
mov
add
leave
stos
imul
jo
add
add
sub
pop
mov
push
shl
sub
pop
test
je
push
dec
dec
pop
mov
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
add
data16
add
add
fidivl
mov
add
leave
cltd
add
fdivl
in
fcomps
movb
shl
ror
ror
pop
cmp
jne
push
push
push
push
call
mov
add
xchg
add
xchg
sar
add
loop
fldl
add
add
fimull
aam
add
popa
add
scas
jmp
in
push
repnz
mov
add
add
cwtl
fcom
add
add
sahf
add
jle
rolb
add
mov
jae
push
lea
push
push
push
lea
push
push
lea
push
push
call
icebp
add
stc
add
add
jge
hlt
cmpsb
add
jecxz
popf
add
add
add
nop
add
xchg
add
jno
add
add
int3
add
cwtl
add
rorb
insb
add
add
pop
push
push
push
push
push
push
push
lea
push
push
call
aad
add
add
lcall
out
push
mov
cli
pop
out
test
add
xchg
jge
add
add
push
add
push
add
add
cmpsl
add
add
xchg
sahf
add
scas
cmc
mov
mov
add
mov
add
add
loope
dec
aam
in
fdivr
lcall
callw
loop
sub
push
aaa
push
push
push
push
push
call
add
add
loopne
add
outsl
mov
xchg
pop
iret
add
add
push
mov
add
out
repnz
scas
in
push
add
flds
test
popl
add
lahf
imul
add
xchg
std
lea
add
ret
xchg
clc
add
imul
fdivr
lcall
roll
loopne
test
xor
pop
jmp
push
not
shl
pop
xor
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
mov
std
add
int
add
shlb
fiaddl
test
lcall
add
add
add
js
add
add
mov
add
xchg
xchg
vpsubq
mov
pop
pop
push
push
push
push
call
add
add
faddl
incb
faddl
mov
arpl
mov
stos
add
lret
jl
mov
ja
add
add
add
sarl
mov
pop
lods
add
pop
add
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
mov
add
mov
movsl
mov
stc
fsubs
sbbb
add
add
pop
add
mov
out
iret
add
push
rol
not
add
pop
leave
push
sub
rol
add
pop
ret
push
xor
add
add
pop
lea
push
push
push
push
push
call
add
fwait
mov
sbb
out
mov
jo
mov
add
cmpsb
add
roll
add
mov
arpl
fstp
xlat
add
add
ja
jb
scas
addb
add
push
add
cmpsl
pop
fdiv
sub
pop
pop
push
inc
pop
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
pop
popf
pop
jp
add
testb
add
je
jmp
add
lahf
ja
fmuls
jecxz
add
lret
pop
movsb
add
xchg
add
add
add
cwtl
xchg
frstor
in
int
add
jl
add
lcall
leave
push
push
push
call
add
add
in
add
mov
test
add
add
jno
add
mov
add
xchg
stos
add
mov
add
cli
xlat
add
aad
add
add
xchg
cld
mov
mov
push
add
add
in
hlt
pop
ret
push
push
push
push
push
lea
push
call
jl
add
add
mov
pusha
test
lahf
add
lods
pop
int
add
insb
les
bound
jnp
xchg
xchg
push
xchg
in
add
std
add
add
xchg
out
ja
add
add
jnp
add
pushf
sub
pop
mov
push
inc
lea
rol
pop
pop
push
lea
push
call
mov
add
test
xchg
fiaddl
push
mov
jmp
insb
lds
add
xchg
add
add
mov
popf
imul
fildl
xchg
cli
xchg
arpl
add
add
add
pop
lea
add
add
in
clc
lcall
push
not
shl
rol
pop
pop
push
add
dec
pop
pop
leave
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
out
jne
add
mov
add
ljmp
subl
sub
pop
ret
out
jl
iret
out
jl
iret
das
hlt
iret
iret
out
lods
lret
iret
out
pushf
iret
iret
sbb
iret
iret
mov
mov
iret
out
fmul
iret
out
iret
iret
iret
data16
iret
pop
jnp
or
cmp
and
popl
js
pop
lret
or
in
movsb
pop
aas
sbb
aaa
jl
mov
pop
icebp
add
lds
lods
xor
pop
jmp
sbb
sbb
push
pop
xchg
fnsave
ficoms
out
mov
cmp
pop
and
pop
dec
cmc
sbb
mov
push
mov
adc
sbb
jae
mov
clc
insb
out
push
push
jb
test
cmp
jge
fidivrl
outsb
adc
ret
jp
in
mov
fcomps
cs
fidivrl
je
lods
sbb
add
pop
mov
mov
push
mov
ljmp
mov
in
xchg
sbb
sti
adc
cli
leave
cmc
sahf
pop
daa
adc
adc
loope
sbb
cli
hlt
xchg
sbb
xorb
arpl
and
mov
or
and
adc
xor
jecxz
and
cmc
lahf
xor
or
sub
xchg
sub
fadd
push
dec
fmull
pop
mov
xor
adc
lcall
pop
shl
add
jo
mov
es
sarl
sub
sub
repz
mov
into
leave
movhps
shl
adc
movsb
xor
and
pusha
sbb
add
inc
mov
in
xchg
fcmovnbe
dec
mov
jne
dec
xchg
sbb
ds
int
mov
or
loop
cmp
ficompl
pop
sub
enter
clc
mov
lahf
sbb
jne
repnz
lea
imulb
jl
mov
inc
cmp
stos
ret
sub
pushf
add
cwtl
mov
adc
cmp
mov
sbb
and
aad
mov
jp
xchg
ljmp
idivl
xlat
mov
dec
nop
test
cmp
mov
lds
cmp
sub
arpl
xor
cmp
push
add
sbb
push
enter
pop
shll
adc
or
inc
fldl
in
mov
or
push
fwait
jne
outsb
test
arpl
movsl
bound
imul
dec
sbb
rol
jl
cmpsl
and
mov
hlt
test
add
inc
sub
and
dec
pop
cmp
push
add
ret
jb
xlat
mov
xchg
dec
mov
out
jo
stc
mov
mov
pop
sbb
pop
jl
push
mov
fcompl
mov
jp
sbbl
ret
shll
pop
sub
les
repz
imul
js
out
or
pop
dec
xchg
lods
cmp
pusha
pop
xchg
loopne
outsl
sti
ds
cmp
sbb
cltd
mov
jp
adc
adc
repz
jmp
fbstp
pop
sbb
mov
icebp
or
daa
iret
inc
mov
shlb
int3
addb
jl
sti
ja
xchg
xor
sti
adc
mov
and
loopne
scas
jbe
jle
sahf
cmpsl
decb
insb
inc
test
out
iret
add
sub
sub
dec
xchg
push
imul
mov
jae
xchg
push
push
stos
dec
sbb
sbb
mov
lahf
cmp
pop
insb
dec
sti
fsub
stc
sbb
fimull
int
dec
jae
loope
add
in
xor
inc
inc
jge
popa
or
xor
into
fwait
js
inc
aaa
sub
add
in
sub
cli
test
jbe
inc
and
clc
imul
dec
ret
add
xchg
xlat
pop
fisubrl
pop
mov
xor
icebp
add
add
push
xchg
fbstp
roll
xchg
loopne
cmp
inc
pop
dec
pop
test
insb
pop
sbb
pop
and
lock
pushl
adc
mov
outsb
dec
in
jl
xchg
or
mov
test
ss
sahf
ret
dec
mov
mov
push
jmp
mov
out
push
push
aam
cmp
ret
pop
in
mov
fwait
aam
loop
je
inc
sbb
mov
cmp
inc
xchg
cmp
pop
mov
enter
out
addr16
insb
aas
pushf
mov
add
xchg
scas
cwtl
out
or
aam
sbb
repz
pusha
std
mov
cmp
in
lock
fcoml
test
jne
jl
mov
jmp
push
and
fbstp
mov
xor
rorb
ja
sbb
rolb
or
test
adc
insl
adc
fnsave
fwait
addl
adc
jecxz
ljmp
sbb
jbe
aad
sahf
orl
or
scas
cmp
rclb
mov
fldcw
dec
stos
mov
insl
push
lret
adc
push
loopne
dec
in
mov
add
insl
out
and
idivb
cmpsl
dec
stos
mov
add
mov
out
jne
les
ret
xor
push
sbb
into
xorb
shrl
leave
pop
push
repz
test
andb
sbb
xor
int3
and
pop
dec
lds
insb
adc
mov
das
dec
sub
sti
push
dec
adc
cmp
loope
adc
fldenv
rorb
pop
testl
repz
cltd
and
stos
mov
mov
push
adc
out
adc
cltd
cmpsb
inc
push
subl
xchg
call
aas
cltd
pop
aaa
push
mov
cmp
sbb
xchg
xor
dec
lock
outsb
or
mov
mov
lea
and
in
xchg
jge
pushf
sahf
sub
mov
pop
rorb
in
je
push
lods
sbb
les
jns
dec
cmpb
int
xchg
sbb
cmp
or
repz
psubq
adc
out
cmp
add
push
icebp
clc
sub
movb
fwait
imul
push
pusha
cld
lods
je
pop
or
inc
addb
xchg
xchg
jae
dec
int3
jb
out
and
pop
push
jp
sti
jmp
scas
add
imul
shll
leave
scas
subb
xor
cli
xor
and
adcl
mov
cmp
sbb
fldcw
sub
cmpsl
mov
cmpsl
push
xor
xchg
mov
iret
dec
and
and
adc
fdivs
in
cmp
mov
push
jmp
xchg
loop
fwait
xor
xchg
pop
dec
stc
mov
add
subl
pushf
xor
jg
pop
jns
push
add
push
mov
sbb
sub
test
mov
jmp
pop
mov
dec
mov
push
clc
cld
mov
and
mulb
inc
xchg
lret
jb
leave
pmulhw
jp
jbe
or
pop
call
fnstsw
mov
sub
or
mov
add
pusha
addr16
fsubs
cmc
sbb
push
ficoms
jno
subb
and
sub
sbb
leave
clc
addl
fs
insl
pushf
dec
dec
das
sar
jl
xchg
ljmp
jmp
xor
adc
sbb
and
popf
mov
fnstsw
dec
mov
aam
and
es
stc
hlt
inc
or
mov
fwait
lret
xchg
and
cltd
xchg
outsl
cwtl
jbe
mov
push
xchg
push
inc
jecxz
sub
stos
sub
inc
and
orb
ds
in
xchg
ss
outsb
ja
or
pop
lock
mov
in
shll
dec
ret
xor
stos
push
imul
test
outsl
in
mov
jne
enter
xlat
out
lods
and
add
sbb
repz
dec
out
outsl
aam
pop
push
push
inc
xlat
inc
imul
sbb
pop
fucomip
sti
and
and
lcall
or
cld
adc
movl
out
and
dec
add
or
cmpsb
in
pop
fldcw
testb
sbb
test
popa
jmp
stos
sub
jecxz
sub
push
pop
arpl
enter
popf
mov
jb
loopne
in
adc
hlt
nop
inc
jne
aam
addr16
scas
je,pt
or
sbb
out
pop
inc
js
push
dec
gs
fisttpl
sbb
xlat
push
xor
aam
pop
inc
or
dec
sbb
jns
dec
or
and
jmp
int3
popf
add
fldenv
sahf
xor
jmp
xor
mov
cltd
pop
push
pop
fiadds
or
rcr
jne
outsl
fs
jp
jns
cmp
xchg
push
out
frstor
mov
dec
adc
rclb
mov
repnz
dec
xchg
lea
sub
out
sbb
or
aas
sub
sub
lea
pop
xor
and
repz
pushf
mov
in
or
ror
push
fbstp
adc
or
clc
mov
or
fsubrs
popf
clc
imul
push
push
and
dec
sub
mov
test
pop
pop
sub
fistl
xorl
jle
xor
lods
popf
andl
rcl
push
cli
adc
jbe
rclb
ja
adc
repz
mov
jns
repz
mov
cmpsb
in
mov
xor
adc
mov
cld
and
repz
stos
push
dec
les
out
mov
inc
mov
add
testb
outsl
lods
loopne
lret
inc
xor
mov
notb
adc
push
dec
or
jo
mov
bswap
pop
sub
dec
push
les
inc
mov
cwtl
jb
popl
sti
enter
nop
leave
in
mov
push
push
testl
andl
and
es
aad
fcoms
outsb
dec
and
pop
subb
jl
jmp
fs
pop
push
cmp
dec
in
cld
or
cmpsl
inc
push
out
sar
int3
add
into
mov
adc
repz
jbe
pop
mov
test
aam
outsl
gs
faddl
xchg
or
xor
jmp
sbb
outsl
es
xchg
inc
stos
leave
adc
jae
push
nop
cmp
add
ret
and
sub
cld
js
shlb
out
test
repnz
inc
je
adc
xchg
pushf
add
push
clc
sub
int
pop
and
mov
push
xchg
add
jge
and
lods
or
cmp
push
addr16
scas
aas
xorl
mov
leave
cld
addr16
mov
inc
inc
jns
outsb
in
or
lret
sub
mov
fbstp
and
out
push
adc
push
mov
stos
dec
jns
movsl
test
sbb
les
out
lods
and
ss
lea
lea
push
movsb
cmp
add
adc
mov
jne
cmp
jns
clc
jae
pop
push
sub
int3
fldt
mov
int3
push
lea
push
mov
mov
test
sarb
pop
sbb
jecxz
stc
cmc
cmp
addr16
push
aas
pop
lods
outsl
jecxz
pop
fwait
dec
xor
xchg
out
dec
sbb
xchg
iret
enter
inc
fimull
aam
fcoms
int3
dec
scas
inc
iret
xor
subl
addr16
xchg
jecxz
data16
enter
fwait
inc
xor
mov
mov
mov
loopne
into
popf
inc
pop
cmp
mov
orl
add
mov
mov
mov
adc
mov
int
xchg
xchg
fmul
xor
int
jb
loop
fildll
test
pop
cs
cmp
pushf
in
aaa
xor
sub
filds
sbb
popa
orb
xchg
dec
testb
mov
out
mov
cmpsl
movsl
push
dec
push
or
sub
xor
stos
cwtl
xor
cmp
sbb
lods
xchg
outsb
pop
jb
stos
pop
jmp
in
adc
dec
xchg
or
dec
xor
clc
pop
pop
popa
arpl
cld
mov
fmuls
cltd
jb
mov
and
testb
fdivr
mov
imul
cltd
popf
stc
push
push
lods
push
or
jne
pop
or
daa
and
mov
dec
scas
repz
mov
add
in
lods
add
shll
adc
movsb
movsl
imul
lcall
jg
pushf
push
addr16
push
loop
jge
inc
xor
out
gs
push
mov
lock
push
and
pop
sub
xchg
subb
push
sti
repnz
inc
les
sub
push
popa
call
sbb
xchg
cmp
xchg
rol
ja
vaddps
mov
imul
sub
xchg
stos
cmpsb
sub
mov
daa
imul
jne
in
jbe
jmp
jp
insl
int
hlt
out
cs
push
mov
fs
mov
pushf
rclb
loope
daa
aas
inc
add
add
ret
mov
mov
cmp
loopne
sarl
loopne
loope
mov
ja
cltd
push
repz
push
bound
and
test
inc
lock
or
or
or
sbb
lods
sub
jae
mov
jmp
mov
inc
lock
mov
jecxz
out
cmp
in
pop
jmp
ja
dec
jbe
js
xor
lods
mov
cmp
adc
jmp
adc
cltd
jl
add
dec
rcll
sbb
mov
mov
push
clc
pushf
data16
in
push
test
cmp
pushf
nop
out
pop
mov
add
fmul
mov
pop
dec
or
lock
add
mov
jb
aaa
mov
enter
imul
popa
or
adc
cmc
nopl
inc
add
pop
xchg
sbb
push
cmpsl
dec
rcrb
aad
push
or
test
sbb
adc
jge
ds
sub
add
fdivs
mov
movsb
push
orb
in
push
sub
inc
subl
mov
mov
je
pop
outsb
sbbl
push
inc
icebp
scas
mov
out
inc
xor
jo
cmp
sub
ret
pusha
test
out
fsubl
push
and
cmpsl
jmp
fimuls
jb
movsb
cmp
out
pushf
push
and
mov
ret
mov
popa
push
lods
xor
rcrl
pop
cmc
shlb
cmp
xchg
pop
bound
adc
mov
faddl
and
rcrl
in
mov
inc
jo
scas
mov
pop
adc
adc
and
pusha
sub
cmp
out
fwait
sbb
cltd
std
dec
inc
cmp
push
sub
imul
lea
sbb
mov
testl
repnz
push
sub
jnp
push
in
cli
cld
or
pop
mov
and
test
enter
ss
mov
idivl
addl
in
cmc
sub
inc
xor
adc
cwtl
loopne
test
shlb
lods
or
and
dec
aas
sbb
ret
fidivrl
dec
inc
cwtl
xchg
inc
pushf
push
mov
sti
push
sub
jo
add
into
push
call
fcomip
or
out
xor
lcall
mov
push
loop
pop
dec
push
pop
xadd
aas
in
sub
sti
cmp
shl
ret
adc
sarb
adc
loope
inc
push
lock
sub
pop
shrb
dec
pop
and
jmp
std
inc
loop
stos
not
push
mov
jae
out
fmuls
sub
sub
push
push
push
insl
and
inc
add
fadds
inc
adc
add
aam
std
nop
aad
setnp
jecxz
dec
outsb
or
fisttpll
fucomi
fiadds
pusha
push
idiv
dec
sarb
lahf
or
mov
xchg
mov
mov
push
jge
xor
sbb
push
mov
int3
enter
mov
rcll
scas
mov
adc
int
mov
popf
jecxz
ret
xorb
pop
test
mov
inc
and
fisubs
incl
mov
ret
test
push
sub
mov
les
dec
pop
sub
push
call
daa
adc
push
pop
mov
mov
dec
inc
or
mov
xchg
sbb
sti
mov
pop
out
leave
mov
cmp
sbb
add
dec
sub
fstpt
and
inc
sahf
test
mov
inc
mov
sti
lret
adc
aam
mov
lods
mov
fimuls
xchg
in
jle
mov
inc
stc
sahf
or
call
sbb
outsb
out
push
negb
cmp
aas
push
mov
dec
gs
ret
nop
and
and
les
cmpsl
fisubrl
mov
orb
loop
test
dec
ss
jo,pn
add
or
je
push
imul
jl
pop
xor
jnp
pop
pop
addb
jnp
out
mov
arpl
sub
cmpsb
dec
sahf
lret
icebp
fwait
mov
icebp
and
sbb
cmpsb
push
decb
inc
push
mov
mov
cmp
jle
push
sub
push
xchg
in
cli
leave
mov
or
pushf
adc
lods
lds
hlt
cmp
and
inc
pop
mov
xchg
cmp
es
mov
ret
push
outsl
mov
pop
andl
mov
mov
xlat
and
scas
xor
outsb
dec
sub
adc
aad
rcrb
and
dec
ja
mov
mov
das
jecxz
and
fwait
fs
fnstenv
bound
scas
sub
ret
cmp
rcll
dec
mov
ret
add
cmp
pop
sarl
js
sbb
je
ss
mov
mov
andb
push
imulb
mov
lret
out
data16
neg
or
rcl
idivl
push
mov
jb
sub
test
shl
mov
xchg
cmp
mov
cmp
xlat
pusha
or
jge
sbb
mov
lds
ds
pop
adc
pusha
dec
ds
aaa
sub
lods
mov
imul
stos
jb
pop
sbb
dec
inc
jbe
push
push
or
mov
jbe
xor
cmp
cli
adc
or
jmp
ja
cmpsb
lret
or
mov
in
pop
inc
ds
push
push
xchg
or
scas
and
clc
jae
mov
add
cmpsl
jns
adc
leave
div
lods
pushf
dec
and
mov
or
and
lret
in
sbb
cmp
xchg
and
cmc
or
mov
xchg
jl
sbb
movsl
inc
imul
daa
fsubl
jge
xor
clc
cmp
pop
ljmp
cltd
inc
in
push
mov
sbbl
jae
loope
cmp
call
pusha
push
mov
and
pop
dec
lret
fdivp
test
jl
pop
js
adc
ret
mov
into
popl
addr16
aaa
jnp
outsb
shll
test
test
fildll
xchg
fstl
popf
inc
pop
lahf
cmp
sub
mov
jmp
mov
popa
out
xor
inc
push
orb
jg
cmp
dec
pop
bound
or
ja
mov
scas
enter
pushf
or
lret
cmp
pop
xchg
push
mov
es
cmp
mov
pop
fwait
push
daa
mov
ss
popa
adc
fldcw
repnz
bound
icebp
or
mov
xor
and
cltd
mov
and
jge
into
das
ss
add
jp
insl
gs
or
jge
push
repz
les
xchg
mov
outsb
clc
xor
repnz
or
and
inc
popf
xlat
sbb
jo
cmp
pop
repnz
les
icebp
fsubl
sti
cmp
cli
sub
ss
scas
xchg
cmp
bound
lret
mov
stos
call
je
lods
in
xchg
inc
push
add
xor
sahf
out
pusha
and
insb
cmp
xchg
mov
cvtps2pd
sub
xchg
add
lds
cmp
pop
mov
jns
add
xchg
or
lahf
dec
das
jmp
dec
cwtl
arpl
shr
stos
enter
sarb
sub
pop
lcall
cmp
inc
lock
xchg
rcll
testb
push
mov
jno
pop
aaa
popa
push
out
push
ret
push
jmp
inc
pushf
mov
cs
testb
cltd
loop
push
mov
mov
xchg
icebp
xchg
sarb
xchg
shrb
stc
les
sbb
jecxz
lods
xchg
push
and
pop
enter
jp
pop
mov
lret
je
imul
addr16
cwtl
dec
in
inc
rolb
test
sahf
fcmovnb
sbb
mov
and
cmp
lea
pop
push
std
cmp
pop
aaa
ljmp
pop
das
add
fwait
xchg
insb
stos
out
xchg
mov
aam
out
jle
inc
sbb
out
ret
xchg
adc
idivl
mov
fwait
sbb
pop
adc
das
cwtl
cmp
xor
inc
clc
cmpl
dec
movb
pushf
push
jae
sbb
ret
jmp
imul
imull
sbb
dec
int3
mov
test
pushf
jmp
mov
outsb
sub
test
out
pushf
and
xor
mov
bound
push
and
sub
pop
sahf
push
fildl
add
sub
stos
adc
dec
cmp
inc
and
add
ljmp
sbb
idivl
in
push
ds
pop
pusha
imul
daa
js
jle
pop
mov
xchg
sub
jmp
repz
xor
cs
scas
push
add
dec
scas
jbe
mov
lcall
cmp
add
flds
pop
jo
inc
scas
pop
sbb
push
bound
ljmp
call
incb
sbb
fwait
xchg
mov
div
cmp
popf
adc
rcr
cld
sarl
inc
nop
movsb
and
cmpsb
xlat
ret
fldl
daa
jae
xor
lret
add
mov
and
sahf
fcompl
test
rep
mov
std
adc
icebp
mov
dec
movsl
mov
shlb
incb
test
sub
fwait
stos
sbb
push
inc
repz
in
sub
inc
xor
mov
movsl
aaa
adc
andb
mov
ficompl
rorl
sub
cmpsb
adc
or
mov
int
dec
xlat
ljmp
push
in
movsl
mov
mov
mov
dec
daa
cs
jb
pop
jge
or
in
nop
jge
inc
sahf
push
push
xor
and
pop
cmp
xor
ss
cmp
pop
push
std
fcoms
jge
mov
jne
aas
and
outsl
adc
adc
or
ss
push
dec
add
sbb
mov
xchg
push
pusha
and
push
dec
pop
test
inc
js
pop
rcrl
sub
lock
ret
dec
cmp
cld
xor
or
pop
mov
test
lret
xor
fists
fcomps
mov
inc
xchg
pop
push
xor
popa
jmp
ficomps
in
adc
xlat
into
add
jnp
jle
cwtl
rclb
aaa
push
jg
outsl
cli
bound
fiaddl
adc
pop
ret
jne
push
mov
pop
sbb
std
les
cmp
lock
fistps
mov
sbb
fmuls
jge
xchg
mov
dec
xchg
sbb
call
push
cmpsb
cmpb
xchg
not
lock
std
pop
and
fisubrs
imul
mov
stc
or
loope
jge
mov
cld
jmp
cmpsb
pop
push
push
js
pop
jmp
clc
insb
ret
adc
stos
scas
iret
cmpsb
adc
pusha
idiv
loope
inc
insb
pop
lret
or
cmp
xlat
jle
jae
outsb
cmp
fs
stos
lods
je
mov
cmpsl
mov
push
or
mov
add
int3
xorl
inc
sbb
dec
cmp
in
pushf
lret
xor
cs
sbb
jge
cli
aas
iret
sbb
lds
lods
hlt
xchg
fimull
mov
idivl
mov
sub
push
cs
adc
hlt
mov
out
sub
xchg
push
loop
mov
test
lock
shl
gs
rol
loop
cmpsb
movsl
xchg
into
flds
leave
cmp
in
mov
pop
loop
sbb
mov
xor
and
jo
adc
add
sbb
xor
pop
ja
test
pushl
aaa
shl
sub
shrl
mov
loop
push
in
lea
or
adc
test
xlat
aad
pop
push
and
lahf
test
pop
pop
lods
movsb
ss
negl
inc
lahf
mov
sbb
add
cmp
push
out
mov
dec
filds
add
inc
fcompl
push
test
fwait
push
mov
ficompl
or
jmp
in
xlat
or
sti
sbb
data16
out
stos
add
xor
hlt
clc
cmc
arpl
mov
cmc
jnp
in
pop
pop
or
lds
pusha
jge
xchg
dec
iret
mov
inc
fbstp
out
mov
or
sbbl
xchg
xchg
je
scas
cmpsb
insl
push
xchg
dec
mov
sbb
addr16
mov
hlt
decb
or
jae
sahf
cltd
lahf
dec
fwait
mov
push
push
mov
out
shlb
fistl
push
xchg
xor
pop
and
lahf
push
ds
dec
jmp
imul
imul
push
in
pop
repz
aas
and
das
and
sub
aad
mov
dec
leave
mov
int
and
push
cmc
push
rorl
lods
ret
sub
lret
shr
and
sbb
mov
lcall
repnz
insb
sbb
sbb
adc
stos
pop
lods
lahf
andb
mov
cmp
test
cmpsl
arpl
inc
pop
inc
mov
inc
sti
pop
insb
jle
ss
fisubrs
sub
cli
push
adc
pop
sub
lcall
adc
cmpsl
insl
pusha
pop
or
add
test
movb
imul
pop
sub
hlt
pop
pop
xchg
mov
sub
leave
outsl
cwtl
sub
loope
jb
mov
rolb
scas
push
jo
xchg
add
test
sub
and
repnz
pop
in
rcrl
cmc
cmp
pop
xchg
or
lods
les
adc
pop
mov
cli
adc
cmc
mov
imul
dec
sti
mov
mov
test
mov
pop
pop
lcall
fwait
mov
lods
push
movsb
icebp
mov
xchg
test
cli
shr
fs
fs
sub
push
inc
mov
xchg
mov
sbb
popw
add
mov
clc
inc
jle
cmp
negb
inc
sub
mov
cmc
mov
xchg
fwait
insl
out
clc
in
loopne
and
xchg
inc
in
mov
pusha
pop
xchg
inc
lds
jp
xchg
addb
xchg
cmp
jle
xchg
sti
std
cld
es
push
cmp
dec
test
jl
cs
sti
cmpsl
daa
ds
jge
push
stos
in
add
insb
cmp
jns
push
mov
jge
rolb
dec
setne
movsb
xor
shl
movsb
mov
add
push
pushf
das
out
xor
divl
pop
imulb
jg
repz
scas
add
ja
lods
loopne
pop
lret
fsubs
add
jae
repnz
add
push
jg
xor
add
cli
jecxz
lods
and
and
dec
xlat
je
cmpb
std
sub
mov
flds
push
jecxz
je
or
cmp
xor
mov
test
out
lods
rorl
xor
dec
sub
dec
pusha
scas
mov
mov
xchg
push
push
push
adc
js
push
shlb
or
les
inc
or
scas
inc
dec
and
scas
adc
push
enter
lret
cs
xchg
inc
or
lret
loopne
pop
and
jnp
sub
data16
cld
xchg
and
testb
jle
scas
mov
jns
add
and
cmp
sbb
push
jge
push
test
xchg
add
mov
sti
out
jg
pop
ficompl
lods
popa
pusha
gs
mov
jge
ljmp
out
mov
lahf
jp
xlat
dec
out
cs
adc
or
pop
negb
test
rcll
sti
push
jmp
pushf
mov
repz
xchg
fstl
test
das
imul
pop
jl
mov
inc
loope
xchg
incl
cmp
mov
in
loopne
add
outsw
push
sub
bound
xor
orb
cld
pop
ret
mov
xchg
xor
clc
xor
leave
lods
jmp
cmp
cmpl
push
cmpsb
test
sbb
push
adc
cmpl
daa
sbb
mov
inc
pop
repz
xchg
hlt
into
sbb
andl
jo
sbbl
jecxz
es
ret
or
mov
insl
pop
imul
and
mov
jne
stc
sub
cmp
cs
mov
pop
inc
cmpsb
xchg
ficoms
out
adc
roll
cmp
xor
pop
lods
mov
fs
arpl
and
jmp
lods
out
sbb
call
xchg
push
hlt
out
imul
mov
add
add
rcl
add
mov
pop
mov
pop
mov
inc
adc
fld
imul
jo
pusha
sahf
xor
push
scas
fists
les
sbbb
out
pushw
jno
cmp
xor
dec
icebp
prefetchw
pop
fidivs
test
pop
es
rcrl
addr16
fidivrl
mov
clc
fxch
and
jno
mov
or
rcll
adc
dec
pop
loopne
insb
mov
insb
push
pop
mov
jb
ss
lds
mov
stos
xor
repz
fdiv
add
mov
adc
mov
icebp
xor
ss
mov
je
test
hlt
cwtl
pusha
pop
xor
in
pop
mov
andb
push
mov
sti
push
sub
fucomi
xchg
mov
pushf
dec
push
add
push
pusha
lds
loopne
jno
int
dec
movsb
add
adc
pop
lret
jo
push
dec
adc
xchg
fidivrl
push
cmp
sub
sar
sbb
fbld
add
insb
cmp
subb
sbb
jno
fcom
shl
montmul
cmpsb
push
int3
cli
mov
or
orb
adc
pushf
jbe
add
and
int
xor
decb
nop
xchg
mov
mov
and
and
mov
lds
cli
in
adc
in
mov
cwtl
fcoms
shl
dec
jp
es
shlb
cmp
aaa
stc
push
test
or
test
sbb
inc
sbb
push
fnstcw
lods
jmp
ret
pop
popf
pop
test
add
jg
mov
adc
fdivs
xor
pmuludq
into
call
push
dec
push
mov
xor
jmp
xchg
insl
outsl
and
cmp
loop
lahf
in
sahf
sub
push
lea
push
bound
outsb
sbb
sub
adcl
jb
add
mov
pop
iret
std
mov
popa
pusha
les
jns
lret
pop
fcom
mov
cmc
addr16
xchg
or
rcll
lds
incl
xor
cmp
sub
sbb
inc
sbb
imulb
cmp
pop
cmp
and
ljmp
xchg
pop
or
xchg
jg
or
push
pop
shlb
mov
jge
pop
cmpsl
push
aaa
jno
cli
sub
inc
jne
cmp
outsb
mov
mov
dec
xchg
or
mov
shrl
icebp
adc
movsl
cld
nop
xchg
xor
idivb
push
add
mov
push
mov
cld
scas
std
les
fwait
std
mov
mov
pusha
or
dec
enter
shrb
std
push
lahf
pop
push
loope
sub
in
jmp
mov
jno
xchg
or
subb
pop
stos
or
jns
push
mov
push
xor
cmpsl
inc
scas
das
inc
mov
in
bsr
cmpsl
decw
adc
mov
jp
xchg
xchg
xchg
mov
pop
jne
mov
fwait
inc
inc
cmp
xor
jbe
in
sbb
push
std
or
stos
loop
sahf
mov
insb
cs
orl
adc
lcall
push
ss
movb
or
lds
sbb
xor
shlb
addr16
jo
push
xchg
mov
adc
fdivrs
jp
xchg
fchs
inc
add
push
lea
mov
jae
adcb
aaa
jne
shll
push
and
lock
jl
stc
mov
daa
shll
pusha
bound
jle
call
push
je
mov
push
xor
add
or
sub
jmp
pop
ljmp
inc
inc
movsb
adc
les
js
arpl
ljmp
inc
and
stos
cwtl
or
adc
mov
mov
push
outsb
je
imul
xchg
dec
add
xchg
xchg
or
test
leave
outsb
mov
outsl
hlt
js
fnstcw
mov
inc
pop
sub
test
scas
jb
scas
push
adc
inc
pop
xchg
cli
gs
imul
pusha
jmp
or
sub
aam
push
lcall
shll
sbb
sti
pop
mov
xchg
sbb
sar
aaa
jnp
pop
xchg
push
mov
out
xor
push
cmc
and
ret
sti
or
or
dec
stos
leave
dec
rcr
sti
inc
inc
mov
jo
popf
mov
xchg
loope
mov
xor
pusha
divl
adc
mov
test
mov
push
ret
push
test
xorl
rcrb
inc
xchg
or
sbb
mov
push
iret
rolb
mov
subl
imul
jo
add
push
jmp
clc
cmc
sbbb
arpl
loope
cli
arpl
fbstp
xor
sbb
adc
ficoml
add
clc
lcall
or
jmp
outsb
rcl
mov
inc
xchg
das
std
adc
shll
addr16
and
jp
cmpsb
mov
int
xchg
xchg
dec
and
adc
inc
sbb
xchg
dec
icebp
fstpt
shlb
or
sbb
sbb
xchg
xchg
sbb
leave
xchg
jle
dec
add
add
pushf
dec
clc
push
add
xchg
cs
jns
mov
adc
push
rclb
andl
push
mov
imul
push
ljmp
clc
jmp
scas
loope
jecxz
or
imul
xchg
testb
push
dec
rorl
dec
xchg
dec
les
insb
lock
pop
and
in
pop
shll
fcmovnbe
and
out
push
mov
insl
mov
cmc
rclb
mov
or
mov
xchg
daa
push
mov
icebp
ja
cmp
adcl
movsl
cmp
and
xchg
stc
andb
sbb
jp
cmc
in
lock
mov
sti
push
sbb
mov
movsl
xchg
pop
rcll
in
dec
adc
movsb
lahf
mov
fmuls
dec
out
cltd
testl
cld
cltd
repz
mov
divl
xchg
daa
std
fcmovnbe
movsl
cld
mov
pop
mov
sarb
jns
sbb
dec
sti
fiaddl
push
movsb
lods
outsb
cmp
xchg
testb
jo
sbb
pop
pusha
jle
lret
push
cmp
sbb
xor
lahf
ds
pop
cwtl
adc
leave
cmova
jge
mov
xchg
sub
je
jle
addr16
lds
dec
testl
add
fwait
cmc
stos
leave
or
test
add
xchg
inc
and
mov
xchg
jmp
push
adc
cli
xor
es
sub
sbb
add
sbb
jmp
test
decb
ds
xchg
xor
stos
out
sub
sbb
sti
and
in
les
pushf
test
enter
and
scas
gs
ret
popa
push
sub
sbb
lahf
xchg
and
sbb
imul
push
in
xlat
add
rcl
repz
in
cltd
cmp
jge
rep
jb
mov
int3
push
mov
or
sbb
sbb
pop
cld
aaa
sub
popa
pop
test
push
jns
xlat
dec
arpl
stos
pop
mov
cmp
ss
fisubl
aam
mov
lds
cld
adc
cwtl
mov
inc
mov
test
inc
decb
shrl
nop
inc
ds
andl
mov
add
mov
and
int3
daa
pop
mov
or
mov
mov
loope
addr16
adc
pop
or
xchg
pop
insb
adcl
and
mov
add
scas
pop
js
mov
sub
sti
jnp
xor
push
fstl
pop
aam
outsl
test
ret
out
dec
xor
mov
into
mov
and
xchg
aas
mov
outsb
pop
adcb
ficompl
and
ljmp
xor
enter
out
lds
mov
pusha
test
cmp
lds
inc
dec
cmp
dec
test
outsl
mov
je
sarb
in
ficoml
mov
cli
xor
cmp
adc
icebp
fs
jnp
jnp
lock
cmc
in
stc
jecxz
aam
stc
pop
cmp
lods
pop
dec
inc
cmp
in
popa
lcall
jne
andl
stos
and
ret
fistl
movsl
ror
scas
jecxz
sub
mov
pop
cmp
inc
loope
push
mov
mull
cmpsb
and
add
data16
mov
iret
or
sub
loope
pop
dec
pop
mov
cmp
hlt
and
imul
xchg
mov
int
jge
jecxz
ret
out
movsb
out
mov
lcall
in
mov
push
daa
rcll
sti
inc
sub
into
sbb
jecxz
mov
add
pop
inc
mov
rcrb
mov
adc
loopne
pop
inc
repnz
inc
adc
cmc
fmull
jns
mov
xchg
mov
jle
popa
movsl
lock
inc
or
notl
xchg
fnstcw
mov
test
out
cwtl
imul
dec
cmp
sub
ds
cs
pop
lods
scas
out
pop
xchg
jns
iret
out
hlt
fldl
xchg
dec
xchg
daa
pop
xchg
dec
or
jmp
mov
xchg
ret
shrl
imul
mov
mov
rcrb
jmp
out
pop
xchg
pop
fstl
jne
jne
inc
and
test
popa
add
mov
into
jne
sub
mov
inc
cwtl
fcoml
bound
call
ja
int3
rorb
push
push
pusha
dec
push
pop
adc
aad
push
add
leave
inc
inc
dec
add
xchg
imul
push
stos
mov
mov
stc
cmp
adc
adc
dec
adc
adc
fs
fs
sbb
ret
imul
jns
and
fs
mov
dec
mov
cltd
mov
and
sti
repz
data16
je
rcl
dec
cmpsb
shll
and
xchg
add
cmovnp
push
ds
xor
inc
dec
mov
ret
xor
pop
sarb
fnstsw
jb
or
loope
es
jne
sub
add
and
das
fsts
push
xchg
lods
out
ss
cmp
insl
shrl
dec
inc
push
lret
std
lock
es
adcl
int3
sub
mov
cmpsl
mov
cmpsb
jecxz
mov
cli
addb
stc
push
ss
fwait
mov
psrad
movsb
in
imul
push
adc
or
jne
int
or
push
sbb
mov
rorl
pop
add
in
and
or
lds
fistps
in
sbb
pusha
push
push
xchg
idivb
js
stos
dec
push
xor
lods
jmp
cmp
rcl
and
mov
mov
mov
test
add
fnstenv
in
shl
mov
pop
jmp
sub
pusha
outsb
ret
mov
inc
testl
inc
or
pop
xor
adc
int
pop
mov
adc
mov
sbb
mov
fdivr
sbb
sub
cmp
sub
mov
loopne
mov
adc
loopne
into
dec
fwait
cmp
xchg
fmul
inc
add
ds
repnz
pop
xor
mov
and
sbb
dec
insl
push
push
inc
jo
push
lds
xchg
ja
xchg
push
leave
add
inc
pop
or
loope
xchg
xor
jbe
repz
sarl
movsb
mov
push
sbb
lret
insb
and
mov
push
inc
jp
add
std
nop
sub
mov
sub
xor
mov
adc
and
arpl
pop
add
stos
add
mov
jnp
dec
in
jle
adc
lcall
sbb
inc
mov
int3
idivl
fnstsw
idiv
call
lret
and
add
cmpsb
insl
pushf
pcmpeqw
in
les
bsr
pushf
jns
and
gs
into
or
and
enter
movsb
lds
stos
divb
mov
mov
or
sbb
pop
insl
stc
sub
sub
je
inc
mov
outsl
and
mov
btr
add
push
fwait
inc
jne
ss
dec
imul
mov
aaa
adc
loope
lahf
add
jmp
cmpsl
or
and
fwait
xchg
add
mov
mov
lods
xor
lods
movsl
mov
sbb
ja
fbld
pop
outsl
and
pop
stos
loopne
cmc
sub
lahf
mov
loop
jecxz
push
in
in
lea
add
jmp
mov
mov
fidivrs
jb
mov
push
push
lds
mov
add
andl
lea
lret
sbbb
in
mov
js
or
je
mov
push
add
sub
cli
xchg
push
mov
test
ror
push
push
gs
int3
xchg
cmp
lcall
mov
jmp
fnstcw
arpl
xor
xchg
push
sbb
test
ficomps
jb
les
clc
repnz
xor
jno
mov
pushf
jae
fisttpll
mov
jno
rorb
jo
push
or
push
mov
or
lea
in
daa
jno
add
pop
xchg
mov
jmp
loopne
mov
sti
stos
out
jb
fxch
push
adc
mov
pop
scas
xchg
cmpl
mov
inc
inc
sbb
into
xchg
dec
nop
xchg
repz
repz
xchg
push
icebp
cmp
les
js
cmp
pop
fninit
es
pop
sub
or
sbbb
sti
das
fadds
xchg
incb
and
cmp
inc
pop
jne
fwait
adc
mov
and
mov
xor
mov
sub
inc
fsts
shll
adc
pusha
cmpsb
jo
movsl
inc
lods
or
push
cmp
and
icebp
dec
inc
push
cmp
imul
das
fistpll
arpl
and
out
pusha
mov
or
adc
aam
loopne
or
push
repnz
cmp
cmc
dec
push
cmc
push
push
xorb
out
arpl
xchg
mov
jmp
mov
jp
outsl
xchg
mov
enter
cld
and
and
ljmp
loopne
popf
mov
xchg
push
ret
fnstsw
sbb
imul
ss
leave
adc
out
test
cmp
jl
adc
mov
cld
sahf
add
cmp
fnstenv
mov
mov
xchg
lret
or
lds
adc
xlat
notb
in
dec
jnp
push
push
inc
push
int
xchg
jbe
into
jle
mov
inc
ficoms
mov
mov
cmpsb
and
arpl
dec
xchg
outsl
jne
adc
mov
loopne
lods
ss
je
cmp
pop
movb
aaa
push
mov
mov
mov
flds
das
fs
add
insl
mov
jnp
punpckldq
jmp
pop
inc
inc
add
fs
loopne
fstp
push
mov
ds
mov
into
sbb
sub
ds
push
gs
aam
push
nop
jb
jo
pusha
and
mov
mov
mov
mov
sarl
in
enter
add
cmp
imul
push
cmpsb
ss
test
in
mov
popa
cmp
aad
es
jnp
add
xchg
aas
push
inc
fucomi
mov
dec
test
lcall
test
lods
jp
adc
xchg
adc
mov
inc
aaa
dec
mov
mov
loopne
mov
fsubr
sub
cwtl
test
mov
xor
loop
jg
es
cmpsl
outsl
ret
and
push
jo
sbb
cmpsb
push
pushf
add
dec
xchg
ss
push
xlat
ss
rolb
add
jno
inc
fbld
sub
pop
adc
mov
int
js
fs
ficomps
mov
lock
addr16
lock
ret
xor
dec
cltd
push
fmul
aad
andb
mov
icebp
movsl
mov
adc
in
sub
cli
pop
in
and
movsb
icebp
std
std
xchg
imul
scas
dec
lret
es
cmp
mov
incl
insl
sbb
adc
shll
fstpl
mov
mov
mov
push
int
adc
lcall
leave
mov
push
icebp
cwtl
test
orl
jp
loopne
mov
push
dec
push
shrl
in
dec
mov
mov
test
sahf
sti
pop
in
bound
shrb
jle
adc
mov
xor
sub
xchg
lret
jle
repnz
push
mov
jnp
cwtl
or
loop
or
stos
add
xchg
xchg
cltd
stc
or
mov
sub
or
sbb
cmp
sub
sub
test
orb
pop
inc
lods
ficompl
rcrl
pop
fsubs
or
adc
into
and
notl
sahf
lahf
pusha
jmp
insl
lahf
arpl
jne
rclb
push
popf
std
loop
mov
or
in
cmpsb
dec
push
mov
mov
ret
dec
fwait
sub
out
sahf
cwtl
rorb
stos
jne
lds
jmp
sbb
stos
xchg
flds
xor
leave
in
pop
inc
sub
jb
sub
jns
cmp
lods
jo
outsb
test
insb
inc
cs
sub
jecxz
jno
pop
sub
adc
leave
stos
int
mov
cmp
xchg
fmull
xchg
fstps
das
sub
insb
test
jns
pop
inc
imul
sbb
xlat
dec
out
and
addr16
sbb
dec
mov
xchg
fstpl
mov
jb
mov
adc
push
mov
lret
fstpl
add
cmp
and
mov
je
repz
adc
sub
movsb
fldcw
push
fs
or
das
mov
outsl
jae
cld
sarb
adc
stos
or
ja
cltd
dec
pop
out
ret
push
repz
mov
outsl
fs
popa
add
push
sbb
xchg
push
jo
cmp
xor
inc
jg
push
in
sub
mov
iret
pop
add
dec
dec
push
pop
push
addr16
ljmp
bound
repnz
cmp
iret
dec
fsts
inc
dec
scas
fisubrl
rclb
inc
out
mov
rcrl
mov
test
mov
into
iret
pop
xchg
lock
pop
inc
xchg
imul
add
shll
push
inc
filds
in
popf
js
in
push
cwtl
ja
mov
xchg
xor
and
insb
cmp
test
cmp
pop
cwtl
sbb
sbb
cli
inc
popa
xor
cmp
sub
movsl
adc
pusha
lea
add
inc
aad
jbe
daa
pop
adcl
dec
and
cmpsl
and
shl
add
clc
cwtl
pop
out
pop
enter
inc
jb
rcl
cltd
adc
sub
or
mov
mov
cld
es
and
pop
pop
dec
stc
lahf
in
icebp
das
shll
mov
imul
rclb
dec
or
ss
test
mov
xcrypt-ecb
cmpsl
or
sar
pop
mov
xchg
int3
fprem1
mov
cmp
ds
aas
mov
cmpsb
out
add
add
lods
rcr
jo
repz
shl
pop
adc
jl
add
and
jae
cmpsl
les
xchg
jg
cmpsl
xchg
mov
jnp
in
sbb
loope
dec
sub
push
fstpl
ss
adc
pop
lods
inc
jnp
mov
in
fldt
fnstcw
outsb
pushf
pop
xor
inc
ret
in
pop
ss
pop
push
imul
insb
imul
roll
sbb
ficompl
test
mov
lods
push
lret
inc
cmp
jne
loopne
mov
mov
les
adc
xor
push
inc
mov
cld
cmp
and
pusha
mov
dec
cltd
dec
sbb
push
in
pop
jl
add
fcoml
cmp
lods
cmp
sbb
xor
cli
jp
nop
sub
std
push
test
inc
stos
push
fidivrs
hlt
fisttpl
loop
lods
push
jmp
jnp
mov
jnp
xorl
adc
mov
adc
popl
inc
xchg
icebp
ljmp
xchg
push
scas
fildl
and
scas
stc
mov
jg
lret
faddl
das
iret
js
sbb
repnz
and
dec
and
fwait
inc
lock
sahf
in
xchg
add
jo
mov
loop
mov
cs
push
cmpsl
push
fsubrs
repz
adc
ds
or
cmp
or
stos
pop
jb
xchg
or
push
es
cld
rclb
shr
hlt
xorb
in
stos
lahf
in
lock
pop
adc
inc
or
dec
jns
adc
mov
mov
adc
enter
jno
jne
mov
daa
pop
or
xchg
les
xor
adc
pop
mov
mov
sub
adc
lcall
xor
rcl
leave
push
cmp
fiaddl
js
mov
gs
ljmp
fdiv
mov
shlb
xor
divb
lahf
fsubrl
lret
cwtl
ss
and
inc
ds
xchg
pop
mov
or
xor
mov
xor
ljmp
inc
aaa
dec
sbb
dec
and
test
push
pop
mov
scas
pop
je
out
pop
rol
jl
sarl
inc
jge
lcall
cmpsl
xor
ffreep
cmpsb
push
popl
cs
pusha
mov
stc
out
test
mov
cs
aaa
cs
out
test
loope
pop
lock
xor
dec
mov
sub
out
xchg
sti
push
jle
sub
pushf
jg
xlat
mov
insl
jp
in
dec
and
fnstsw
imul
xor
dec
or
push
test
loop
pop
frstor
xchg
push
icebp
movsb
loopne
int3
dec
or
fadds
sbb
push
in
mov
sbb
insb
inc
decb
hlt
test
ds
mov
and
xchg
stos
aam
addr16
scas
inc
lahf
mull
aam
xlat
jecxz
pop
xchg
xchg
iret
pusha
clc
or
decb
cmc
jmp
loope
fs
rcr
or
lcall
jns
js
cmc
imul
pop
lahf
imul
andl
arpl
jno
or
fbstp
sub
push
push
push
movsl
gs
sub
lret
pop
popa
bound
jnp
loopne
subb
adc
loop
arpl
imul
insl
ja
mov
xchg
mov
mov
dec
leave
push
jmp
adc
aad
jb
dec
lret
clc
sub
jecxz
mov
mov
les
jge
pop
scas
sarb
int
mov
inc
sub
test
or
add
cli
push
pop
fadds
fidivrs
arpl
fistl
push
cmp
push
cmp
inc
insb
xchg
test
loope
outsl
push
cmp
lahf
add
ret
xchg
clc
xchg
xchg
inc
jle
mov
adc
dec
add
push
lcall
cmp
aas
cld
xchg
pop
sahf
ja
lea
add
xchg
sbb
cltd
leave
leave
adc
mov
out
shr
gs
cld
mov
push
pop
sarb
fsubs
sbb
pop
adc
xor
fisubrl
or
inc
add
xor
cmp
shl
mov
aas
daa
out
ss
xlat
adc
popf
scas
jbe
jecxz
fdivrl
or
jnp
mov
jb
inc
les
sub
out
jns
mov
push
jle
push
lret
jg
xor
mov
stos
and
adc
in
sbb
and
push
ja
fcomps
push
repnz
stos
xlat
xchg
push
sub
shll
fs
fsub
push
neg
mov
es
arpl
mov
fisubs
sbb
jno
stos
adc
pop
xchg
pop
popf
mov
mov
mov
inc
mov
sub
jb
lea
and
out
cmp
fildl
jo
cmpl
mov
bound
xor
cwtl
add
jmp
and
shrb
mov
lea
fistpl
out
call
sbb
lret
mov
repz
inc
pop
movsl
out
popf
lahf
mov
scas
mov
mov
add
mov
pusha
push
mov
outsl
movsl
dec
and
psubusb
jne
cmc
leave
mov
mov
jmp
in
stc
lds
pop
cmp
xchg
xor
and
shrl
inc
dec
nop
cmp
adc
les
inc
add
loopne
fmull
jge
mov
rorl
dec
aam
std
push
cs
sub
add
mov
sub
or
data16
sbb
stos
mov
outsb
insb
pop
jb
jle
mov
nop
ficoms
icebp
cmp
mov
xor
mov
mov
cwtl
ficoml
jnp
or
xor
shl
xor
test
aaa
mov
jo
arpl
or
sub
cmp
stos
mov
push
jbe
out
movsl
pusha
xor
mov
movsb
jbe
jne
ss
dec
decb
enter
cltd
jae
sbbb
inc
inc
jae
ror
cltd
in
sub
pop
lcall
call
and
cmpsb
xchg
adc
scas
xor
gs
mov
pop
add
dec
nop
iret
mov
mov
dec
jno
sub
lahf
rorl
icebp
mov
dec
mov
adcb
cltd
or
inc
add
cld
xchg
sub
mov
jns
ja
dec
fstpl
test
pusha
fidivrs
scas
test
pop
int3
aad
xlat
daa
sub
mov
lock
xchg
dec
mov
or
mov
sbb
lret
sub
shll
daa
push
mov
or
pshufw
nop
pop
in
xchg
das
pop
loope
mov
inc
jae
or
push
sti
push
push
xchg
arpl
push
jbe
add
dec
loop
xor
test
push
sbb
and
addr16
outsb
push
sub
jle
cmpsb
mov
sbb
mov
ja
lret
aaa
xchg
dec
adc
leave
leave
jl
sub
stc
pushf
lock
mov
adc
and
mov
mov
dec
inc
iret
add
pop
add
or
imul
push
repz
int
push
jo
add
sti
pop
or
jecxz
sbb
mov
add
lea
adc
and
pop
cmp
pop
xorb
cmp
pop
mov
int
stos
sub
jbe
movl
jbe
test
push
out
repnz
mov
add
filds
fdivl
adc
test
loope
adc
test
xor
inc
lcall
scas
es
fisttpl
cmc
cmp
das
sti
jl
and
jbe
xor
dec
cmp
into
out
or
insl
hlt
filds
das
test
icebp
inc
push
dec
gs
lret
add
push
aam
leave
add
push
inc
cmp
outsb
pop
sahf
dec
daa
pushf
sbb
xchg
push
insl
xchg
and
sub
cli
push
lcall
pusha
ja
jb
call
sbb
clc
sbb
sbb
fwait
sub
out
sbb
sahf
inc
test
dec
or
adc
pop
cmp
test
xlat
push
scas
adc
imul
adc
pop
adc
jecxz
and
pop
add
adc
data16
inc
inc
jno
insb
sbb
sbb
adc
paddsb
std
sti
testb
hlt
popf
movsb
mov
in
jb
enter
cmp
sbb
cmpsl
mov
or
das
aaa
jns
xchg
dec
pop
push
add
push
and
jno
arpl
stc
shrb
test
js
and
xor
jb
inc
lahf
inc
cmp
out
notl
in
sahf
jo
jl
push
xor
jb
mov
dec
aas
out
ret
cmpb
test
cmp
dec
insl
fadds
bnd
jo
pop
addl
xchg
jl
decl
or
mull
dec
repz
outsl
movsb
sbbb
out
cmp
mov
sbb
jp
test
ficomps
lret
xabort
cmp
jno
repnz
mov
rolb
xchg
or
arpl
pushf
rolb
dec
adc
xchg
hlt
leave
add
test
dec
and
in
test
mov
xlat
or
jo
cwtl
pop
sbb
mov
divb
sub
pop
jmp
leave
jnp
xchg
nop
sub
and
jle
rorl
xchg
jnp
cmc
inc
clc
out
pusha
movsl
int3
mov
jmp
add
dec
mov
mov
pop
sub
aad
fwait
test
inc
sbb
int
xchg
pushf
andl
jl
es
lret
sar
sbb
mov
daa
mov
lret
bound
add
or
mov
aam
dec
data16
stos
test
adc
das
notb
dec
mov
inc
out
shlb
add
pop
ljmp
leave
sub
inc
arpl
pop
xchg
cmp
dec
pop
mov
sbb
xchg
jecxz
pop
mov
punpcklbw
add
scas
sub
sub
movsl
mov
call
inc
inc
pop
xchg
dec
cmp
jno
jbe
push
add
pop
mov
loope
dec
filds
rorl
outsb
cmc
je
in
dec
enter
stc
daa
mov
jns
jle
xor
rol
dec
in
shrb
and
stos
daa
push
test
sbb
in
mov
jno
dec
pmaxub
lock
xor
in
xorl
pushf
push
ret
adc
mov
pop
xor
test
daa
inc
and
mov
pop
sub
in
rclb
inc
cltd
nop
mov
popa
hlt
pop
popa
adc
dec
icebp
fdivl
lds
lock
movsb
xchg
xor
cmpsb
push
sbb
push
dec
les
adc
data16
mov
fidivrs
mov
jecxz
data16
in
ds
jbe
test
fwait
outsl
xlat
lock
movsb
shr
cltd
sub
jl
inc
inc
or
ss
fldl2t
leave
push
pop
mov
mull
mov
pop
xor
xchg
movaps
inc
push
nop
add
jp
xchg
sbb
and
mov
cmp
aam
or
adc
gs
inc
mov
mov
pop
mov
out
jbe
stc
push
div
in
mov
jno
xchg
jle
cmpsb
movsb
sti
popf
stc
fistl
std
into
sti
lods
xchg
aas
or
or
mov
cs
sub
popf
pusha
ds
cmp
scas
mov
clc
jp
gs
cwtl
push
mov
jo
dec
push
test
stos
adc
inc
push
stc
outsb
out
pop
xchg
adc
and
sbb
or
jns
dec
loopne
push
jnp
shrb
psadbw
jno
xor
aad
push
nop
insl
lock
dec
push
test
push
inc
out
jmp
mov
jp
mov
cmp
mov
xchg
xchg
cmpsl
sti
cwtl
lret
mov
mov
mov
or
rcll
xchg
loope
fs
outsb
push
jmp
xchg
sbb
inc
inc
ss
in
cli
std
cs
mov
rcl
outsl
das
adc
call
dec
fs
jge
dec
loope
dec
push
fdivr
es
inc
inc
sub
pop
iret
inc
mov
xor
dec
fwait
sbb
scas
test
or
or
sbb
push
adc
cwtl
rcl
sub
outsl
sub
push
notl
sbb
xor
pop
and
mov
enter
pop
cmpsb
ret
add
aam
adc
xlat
fdivl
pop
pop
dec
stos
push
jle
insl
cmp
jbe
mov
out
and
out
loope
movsl
mov
jns
aam
or
movsb
mov
negl
mov
mov
cmp
xor
insl
pop
imul
addb
add
mov
mov
mov
jo
push
pop
pop
les
push
test
push
jnp
push
int3
adc
leave
mov
repnz
test
push
jle
push
fdiv
push
and
nop
xor
loope
pop
push
aad
inc
mov
in
popl
into
sbb
orl
inc
sbbb
test
subl
test
outsb
lret
and
scas
dec
mov
xlat
fimull
add
lahf
jp
xor
and
insb
mov
sbb
inc
mov
imul
pop
dec
adc
pop
mov
int
xchg
cmp
mov
xchg
loop
pop
sbb
push
inc
divl
fs
push
push
pushf
xchg
push
xchg
loop
sarl
repnz
or
out
pop
insl
fwait
adc
fs
repz
push
bound
cmp
aam
adc
leave
xor
sub
cld
xchg
add
pop
and
sbb
pop
loop
stos
pop
push
pop
or
iret
scas
dec
cwtl
stc
aaa
push
jae
jmp
fs
push
and
shll
ja
mov
shll
sbb
lcall
movsl
inc
aas
faddl
scas
lock
sahf
in
imul
aaa
ds
jg
mov
cmp
xchg
pop
sti
lods
cmp
mov
arpl
mov
lcall
shrd
or
nop
push
jp
or
out
test
ja
cmpsl
adc
nop
das
jge
ss
lret
lock
movsb
pop
js
or
pop
xchg
cmp
clc
cmp
xor
popf
adc
adc
sbb
scas
cmp
ja
call
aam
cmp
push
push
dec
mov
mov
movsb
hlt
pusha
outsl
imul
fistpll
add
sub
push
and
and
maskmovq
imull
ja
jae
sub
out
mov
add
sbb
jo
inc
es
jo
and
mov
addr16
ds
lods
xor
sti
jno
dec
dec
insl
cmpb
cwtl
ja
test
add
aad
xor
mov
popl
andb
adc
daa
inc
sbbb
mov
aad
jno
flds
jmp
jo
lahf
aaa
adc
add
loopne
sbb
or
shll
jmp
push
mov
inc
add
jmp
pop
xor
int
dec
rcll
insl
cmp
mov
mov
inc
pop
adc
cs
mov
xchg
repnz
ja
mov
stos
out
inc
test
cwtl
fildll
arpl
mov
mov
push
inc
stc
add
out
jecxz
test
outsl
add
movsl
jl
mov
jns
insl
xchg
fsts
and
pop
push
out
cmpsl
mov
mov
xor
mov
xchg
cmpsl
or
cmp
adc
xchg
mov
or
test
sub
or
cmpsl
mov
adc
cmp
jne
xor
sub
pop
notl
mov
aad
pop
inc
hlt
arpl
arpl
mov
or
jbe
lea
inc
push
gs
cmp
push
lea
cwtl
mov
push
cmpsl
pusha
jnp
out
sub
and
sbb
iret
addr16
js
inc
cmp
rcrb
jno
xchg
jo
and
sbb
jg
sub
push
loop
ljmp
jmp
cmpsb
orl
inc
pushf
pop
lret
mov
push
dec
dec
add
mov
and
mov
data16
and
mov
mov
mov
ret
stos
dec
repnz
sahf
inc
scas
je
cld
repz
out
xchg
divb
sbb
sbb
and
frstor
cli
mov
movsl
sbb
cmp
mov
pop
inc
inc
fs
or
push
sbb
push
pop
scas
seta
sbb
push
test
sub
inc
mov
out
inc
push
inc
and
aas
dec
adc
dec
pop
sub
adc
jbe
aaa
sbb
movsb
stos
int
mov
push
ret
sub
add
xchg
jae
xchg
data16
sub
push
and
sbb
sahf
sbb
dec
movsb
pop
aam
ja
sahf
rcrb
dec
adc
adc
test
xchg
pop
enter
pop
cwtl
cld
sbb
jne
nop
ds
pop
add
repnz
adc
xchg
test
mov
mov
adc
and
jae
mov
fwait
sbb
ljmp
pusha
cmc
mov
jne
loop
or
and
mov
insl
ret
mov
or
or
dec
adc
lock
sahf
inc
movsl
xor
fisubs
jecxz
fsts
jge
pop
cmc
mov
xor
fists
xchg
sbb
mov
and
call
ret
jecxz
aas
loop,pt
in
sbb
ja
xlat
mov
mov
or
and
xor
sbb
xchg
aam
mov
daa
mov
jns
arpl
jmp
incb
inc
push
sub
ror
loope
or
aaa
std
mov
push
or
stos
pop
mov
add
decl
dec
and
xor
jb
dec
testl
ss
cs
mov
lods
dec
pop
xchg
frstor
popa
jge
in
fs
jp
xchg
jbe
mov
bnd
fsubs
xor
mov
inc
xor
out
sti
or
aas
dec
add
xor
nop
scas
add
adcb
xor
addr16
int
repz
mov
sub
sbb
aas
pop
sahf
or
lcall
fnstsw
outsl
pop
dec
push
xlat
dec
mov
ret
pop
or
ret
lret
aas
xlat
add
push
call
or
xor
cmpsl
nop
mov
pop
mov
bnd
fsubs
mov
outsb
mov
inc
inc
mov
cmp
pop
das
enter
mov
pop
and
sahf
xor
mov
cmpsl
inc
jbe
enter
stos
aaa
mov
lods
xchg
dec
adc
out
push
push
sub
pop
ljmp
or
push
xor
popa
loop
lods
sti
xchg
leave
jl
cmp
xor
into
push
add
pop
fcmovbe
or
pop
outsl
jnp
jl
xchg
mov
test
xor
mov
lahf
int3
icebp
fwait
adc
dec
iret
add
mov
loope
sub
or
inc
xor
fwait
mov
adc
fwait
and
pop
stos
bound
inc
xchg
lea
mov
in
push
test
in
push
jl
cld
inc
or
push
or
sbb
push
jecxz
inc
mov
inc
jl
and
mov
lret
sub
inc
inc
push
inc
clc
mov
pop
sub
arpl
pop
sub
cmp
gs
xchg
push
pop
nop
shlb
cmp
out
dec
lcall
mov
adc
xchg
cmp
add
pop
in
pop
lahf
xchg
adc
mov
pop
cmpsl
leave
test
cmp
xlat
xchg
add
outsl
mov
add
pushl
mov
fstpt
das
aad
insl
lahf
mov
pushf
sar
shll
hlt
cwtl
xor
ret
int
into
cmp
jne
mov
cmp
pop
aaa
sub
mov
lds
pop
cmp
inc
xor
inc
sbb
xchg
pop
pop
push
pop
or
mov
add
dec
mov
int3
cmp
inc
mov
jmp
sarb
xchg
jp
push
mov
daa
inc
or
adc
test
add
adc
sahf
sbb
adc
cmp
ljmp
out
adc
in
lcall
mov
mov
mov
or
orl
jne
jp
cmp
push
or
popf
mov
movsb
scas
lahf
scas
dec
inc
int3
cli
push
xchg
push
mov
mov
mov
adc
repz
lcall
pop
fs
sbb
xchg
fsub
movsl
inc
mov
ret
xlat
insb
xchg
jns
mov
adc
pushf
pop
and
neg
popa
cmpsb
out
in
jecxz
lods
add
fildll
ljmp
lcall
test
mov
lret
push
push
dec
mov
and
das
sub
loope
iret
scas
and
clc
mov
jns
mov
pop
scas
je
fwait
scas
scas
pop
les
outsb
es
les
jnp
pop
and
mov
add
js
enter
lock
xchg
push
ljmp
ljmp
ljmp
xor
dec
shll
jl
repnz
repnz
jge
inc
push
movsl
stc
adc
xchg
cmp
fiadds
aaa
sub
dec
inc
icebp
xor
mull
imul
xchg
mov
iret
in
cmp
lret
adc
xchg
lock
ficomps
and
in
lcall
xor
jb
mov
sub
mov
push
in
nop
in
out
repnz
ljmp
mov
dec
inc
push
push
imul
dec
adc
dec
push
ja
cli
pop
or
mov
xlat
mov
fadd
mov
sti
xor
mov
push
jae
dec
dec
sbb
fbld
push
shlb
fst
js
packsswb
push
jmp
das
sahf
fcoml
pop
push
mov
insl
aaa
bound
and
int
xor
cmp
arpl
imul
xchg
adc
dec
sub
aas
mov
push
pushf
je
mov
fiaddl
jnp
scas
and
cmp
popf
movsl
data16
cmc
adc
xchg
outsb
dec
dec
pushl
mov
push
or
and
pop
sarl
sbb
int3
mov
ja
push
and
pop
leave
push
in
ficoml
and
mov
and
clc
cmp
or
fs
les
adc
xchg
imul
clc
push
inc
cs
in
pop
popf
mov
cwtl
pusha
mov
inc
ja
jnp
addr16
ja
out
lret
fimull
and
bndstx
cmp
lea
mov
mov
pop
xchg
lock
lret
ret
push
ret
in
mov
mov
fdivrl
stos
adc
shlb
into
inc
icebp
jl
rolb
lret
dec
push
lret
jge
call
sub
outsl
fwait
push
push
jns
mov
shll
lahf
repnz
mov
int3
testl
push
movsl
jp
decl
in
xor
push
call
out
fs
pop
popf
adc
or
pop
scas
int
adc
cltd
jle
shrb
add
add
iret
mov
add
sahf
shlb
ret
jp
loop
aaa
je
pushf
fsubrl
pop
dec
jp
push
push
imul
push
fmul
or
pop
js
inc
stc
dec
fisttpl
jmp
dec
in
push
mov
pop
pop
lahf
push
mov
mov
aad
sbbw
divl
lods
or
fwait
adc
je
or
mov
arpl
je
jo
xor
fwait
imul
bswap
out
aam
out
rorl
fdiv
bound
into
pop
push
lret
pushf
push
xchg
icebp
sub
xchg
outsb
aas
and
adc
lock
xor
movsl
pusha
imul
repnz
in
inc
xchg
pop
mov
mov
push
jle
xor
punpcklwd
cmp
xchg
scas
mov
scas
ja
lret
xchg
rcrb
cmpsl
scas
out
jns
lcall
fisttpl
aaa
lock
xor
mov
and
hlt
xchg
fistps
ss
xlat
sub
xchg
sbb
mov
icebp
repz
pop
das
dec
mov
dec
inc
movsb
mov
test
clc
mov
ret
mov
ja
xchg
popa
pushf
out
xor
xor
sub
cltd
lods
adc
sbb
push
or
mov
jae
inc
mov
push
or
add
scas
rcll
sahf
xor
movsl
inc
xchg
aas
ret
cmp
fstpl
or
nop
pushf
sub
iret
repz
and
jmp
mov
inc
mov
mov
lods
lcall
and
pop
loope
adc
mov
xor
popf
gs
sbb
call
in
repnz
xchg
mov
mov
js
pcmpeqb
cmc
pop
add
nop
add
inc
and
and
jbe
js
inc
sahf
insl
das
dec
into
fildl
and
jno
les
cltd
xchg
cmp
jae
cmp
dec
dec
pop
sub
and
int
cmpsl
inc
mov
fldlg2
xchg
push
fnstenv
loop
aam
das
inc
sub
mov
rcrb
jp
icebp
mov
mov
fcoms
and
add
loopne
stos
mov
stc
iret
adc
mov
xchg
fldl
cmpsl
cmp
in
call
int
jne
sub
mov
mov
xchg
insl
insb
mov
data16
jecxz
fiadds
and
je
sub
adc
scas
test
or
mov
cmp
dec
jne
outsb
gs
mov
pop
sub
inc
stc
xchg
popa
hlt
adc
adc
js
jl
mov
sub
in
jne
pop
sar
sbb
aas
stc
mov
sti
cmp
scas
insb
dec
je
fisttpl
test
insb
movsl
push
aaa
push
or
js
xor
adc
push
fdivs
test
jb
lret
or
xchg
leave
aas
aas
bound
mov
jnp
shlb
jmp
out
testb
daa
cwtl
test
gs
fisubrs
push
or
pop
jo
sti
dec
subb
test
outsb
pop
add
sarl
in
xor
push
xchg
cwtl
dec
stc
scas
int3
adc
ficomps
sbb
mov
mov
xor
sbb
aas
dec
in
mov
call
push
or
sti
push
cmp
or
imulb
sbb
in
adc
lahf
cmp
and
xchg
test
insb
adc
aam
or
jmp
xchg
fistpl
popf
push
xchg
lock
push
es
int3
mov
pop
inc
js
add
mov
icebp
pop
xchg
mov
or
std
sbb
js
pushf
push
sub
leave
mov
cmpsb
int
ljmp
xchg
xchg
mov
es
mov
cmp
push
aam
leave
cmpl
sub
shrb
xchg
jle
adc
mov
cmp
mov
inc
jae
in
lret
mov
xor
stos
push
das
cld
xchg
fcmovnb
fildll
sbbb
mov
pop
sub
or
fiadds
dec
dec
xor
mov
or
flds
outsl
jl
or
pop
dec
icebp
mov
dec
xor
sahf
pop
lods
sbb
sbb
cmp
mov
notb
gs
lcall
dec
sub
arpl
sub
jmp
adc
fistl
dec
jbe
adc
loope
prefetchwt1
xor
sub
adc
and
xchg
daa
mov
mov
adcl
jge
inc
test
push
jl
sti
jg
xchg
adc
mov
inc
jg
cmp
adc
pop
jle
mov
add
dec
dec
jp
mov
popa
dec
imul
ss
push
test
and
dec
pop
lds
push
sbb
push
je
inc
and
dec
cld
xor
mov
push
inc
cmp
jbe
dec
xchg
sub
push
stos
push
push
inc
cmp
fbstp
aas
sahf
int
mov
push
and
into
sbb
mov
mov
lods
dec
jecxz
xchg
push
jp
adc
aam
inc
ret
jge
jmp
pop
push
cltd
pop
inc
addr16
movsb
sub
int
fs
lcall
in
mov
rcll
xor
xchg
mov
mov
idivb
inc
push
dec
sahf
les
sub
jbe
pop
data16
jb
pop
push
icebp
ficomps
mov
into
loopne
sub
fistpl
jnp
mov
jecxz
push
loope
fmuls
fcomps
mov
jns
sub
mull
ret
or
mov
mov
mov
in
jnp
ret
jb
fisubs
push
stos
xor
fcomps
in
mov
loop
rcl
or
adc
pushf
xchg
or
jge
out
xchg
daa
fcoms
jns
push
fwait
push
mov
adc
outsb
adc
decb
cmp
mov
lods
es
out
add
or
fidivs
push
adc
xor
sub
mov
cmpsl
push
test
push
jne
inc
scas
push
mov
pushf
lcall
icebp
je
push
imul
inc
clc
lods
lret
bound
cmovno
pop
inc
sub
test
test
mov
xor
sbb
pop
lea
add
lds
out
aam
mov
cltd
aad
mov
fdiv
sarl
jmp
ja
pop
and
cmp
mov
lahf
pop
adc
shl
inc
mov
fistl
test
inc
or
xor
dec
pusha
lock
cmp
add
hlt
jg
sbb
call
mov
jnp
movsb
fisttpll
ret
inc
push
aaa
dec
xor
incl
lea
pop
and
fadds
jmp
sub
cld
mov
loop
fcoml
test
or
xor
inc
call
in
ss
dec
sub
sbb
or
popf
das
outsb
add
sub
cmpsb
inc
pop
rcll
mov
lcall
sub
and
pop
lods
lret
out
dec
dec
jmp
sbb
push
sti
in
jp
in
in
add
dec
mov
mov
mov
inc
inc
out
dec
ficoms
adc
push
xor
je
insl
push
aas
stos
lea
pop
cmpsl
push
cltd
hlt
mov
adc
and
pop
loop
dec
ret
dec
or
cmp
ret
push
push
pop
push
inc
sub
sbb
inc
mov
repz
lods
sbb
xor
ret
and
call
cmp
mov
fadd
leave
jae
loope
and
movsb
mov
and
pop
xchg
loopne
js
inc
mov
repz
lds
fnstcw
ret
push
inc
std
lods
in
clc
roll
popf
dec
sbb
cmp
xchg
xlat
inc
popf
stos
mov
addr16
mov
sbb
dec
hlt
xchg
arpl
mov
push
mov
jle
xchg
rol
inc
mov
jnp
sub
mov
test
xchg
movsb
push
push
mov
iret
sub
xchg
lods
iret
mov
mov
shll
rcrl
lock
ror
dec
jnp
pop
popf
lock
and
inc
lret
lret
popa
aam
mov
sbb
out
inc
aad
xchg
push
mov
fdivl
or
js
in
out
hlt
fwait
jp
pop
icebp
sbb
icebp
or
in
ljmp
stos
cs
jno
andl
fildl
pop
pop
jb
imul
or
pop
stos
jl
jnp
mov
mov
stos
dec
xor
fmull
cmc
outsb
jg
repz
mov
dec
cmp
adc
inc
out
call
out
push
mov
aas
movsl
fnstenv
insl
out
mov
lds
sbb
mov
mov
stc
dec
cltd
js
jl
pop
sub
sbb
add
lods
add
hlt
aaa
mov
test
jle
cmp
pop
sub
push
mov
fdivrs
fsubr
imul
xchg
and
ss
sub
out
inc
icebp
sbb
cmpsl
push
dec
sub
movl
mov
out
cmp
ret
test
jecxz
arpl
mov
pusha
adc
imul
add
in
lods
pop
push
clc
add
or
testb
cmpsb
mov
push
and
bound
notl
punpcklwd
ja
test
cwtl
subb
decl
push
and
cmpsb
ds
cwtl
bound
negb
lods
sub
inc
inc
in
ja
or
inc
iret
hlt
cmp
sub
cs
pop
outsb
xor
inc
clc
cli
or
xor
cwtl
inc
mov
lret
es
xchg
xchg
push
xor
sbb
test
mov
es
ljmp
sbbb
push
outsb
mov
sahf
loope
movsb
sti
iret
lcall
mov
mov
jno
clc
lds
xchg
cli
push
sarl
mov
xor
xor
push
repz
movsb
jae
mov
cltd
movsl
mov
inc
xor
pop
lods
xchg
mov
adc
ja
mov
pop
scas
orl
push
in
jl
cmpsb
outsb
mov
lds
outsl
ss
or
jmp
call
cmp
in
jle
inc
loopne
xor
lret
push
push
jnp
daa
dec
test
jmp
pop
push
mov
push
sbb
or
jae
fisubl
mov
les
mov
xor
repz
inc
dec
sub
lcall
inc
inc
pop
js
imul
aad
popa
mov
jne
jo
daa
cs
xchg
pop
stos
lods
and
mov
lods
mov
add
mov
dec
jns
adc
das
mov
pop
jp
dec
sub
sti
ret
xor
adcl
xchg
cmpsb
divl
mov
testl
std
das
psubusw
mov
inc
sahf
jle
ds
cmpsl
mov
inc
pushf
loopne
and
adcl
mov
in
lods
jns
sub
fimull
inc
es
fwait
sub
mov
xor
mov
insb
and
push
mov
ja
adc
xor
xor
int3
dec
sub
pushl
in
in
jns
adc
xchg
imul
out
sub
jmp
shl
orb
jno
inc
adc
push
push
or
xor
push
mov
test
sub
mov
movsl
add
pop
sub
jb
loope
std
pusha
sub
mov
jnp
stos
aad
push
mov
pop
pop
mov
adcl
dec
repz
mov
les
ljmp
mov
hlt
push
ljmp
roll
mov
rorl
and
and
xchg
call
imul
add
bound
jb
and
inc
stos
icebp
xchg
sbb
fs
sahf
cmp
add
push
fadd
push
inc
shlb
sub
andb
test
jno
dec
and
xchg
xor
aas
es
add
xchg
out
test
push
shl
sbb
mulb
cmp
iret
out
std
mov
imul
out
jne
movsl
and
test
adc
movsl
sbb
in
mov
std
pushf
inc
mov
xchg
outsl
enter
mov
inc
inc
xor
mov
pop
cmc
xchg
adc
call
pop
outsl
ljmp
mov
inc
call
xor
out
and
stos
sub
enter
sbb
jo
into
pop
icebp
repnz
out
js
and
sbb
add
push
loopne
scas
repz
movsl
sbb
arpl
stos
push
ret
inc
cmc
popa
sti
pop
lods
fs
xchg
ficomps
lahf
arpl
lds
dec
cld
test
inc
pushf
cmp
jl
xchg
jle
xchg
sar
ljmp
ret
push
jae
ja
fldenv
cmc
push
popa
mov
sbb
lock
aad
data16
adc
inc
out
or
or
xor
dec
xor
out
pop
dec
icebp
into
mov
lods
add
or
or
and
fxch
pop
sub
addb
addr16
fistpl
inc
jbe
in
jb
dec
lods
add
xchg
xor
and
push
xlat
sub
xchg
inc
or
aaa
mov
test
mov
xchg
test
sbb
je
pop
jno
inc
pop
aad
inc
jbe
out
imull
or
gs
fiadds
dec
xor
dec
xor
xchg
sbb
addr16
movsb
enter
add
ljmp
pusha
dec
lock
mov
bound
push
mov
mov
cmp
sub
in
aam
imul
jecxz
pushf
cmp
xor
mov
sub
sarb
mov
fwait
cmp
xlat
xchg
shrb
mov
mov
aaa
test
cmc
fsts
dec
stos
subb
fldl
enter
pop
jae
pop
mov
fsubrp
mov
bound
mov
adc
adc
dec
decb
aam
or
fcomi
pop
dec
into
popl
fnsave
out
das
cs
sarl
adc
cmp
jmp
cmpsb
add
or
bound
cwtl
mov
jb
mov
mov
push
pop
popa
sub
mov
sarb
xor
mov
push
sbb
std
stos
mov
sbb
push
xchg
adcl
xchg
push
out
rcll
adc
push
or
aam
in
fwait
sub
insb
jae
push
inc
xchg
mov
outsl
jge
dec
test
insb
jne
les
int3
lea
and
xor
dec
fildll
sbb
or
sub
add
stos
loop
imul
xchg
dec
fcompl
mov
push
imul
cmpsl
push
mov
jmp
rcl
aaa
scas
jp
sbb
test
or
xor
mov
cmc
and
xor
jmp
sbb
popa
push
imul
mov
cmp
testb
outsb
fsubrs
mov
mov
xchg
pop
jg
xchg
sbb
cmp
dec
inc
pushf
add
daa
pop
pushf
lea
ret
jl
mov
int
push
pop
lods
pusha
sbb
paddb
jnp
add
adc
sbb
insl
outsb
xchg
and
or
lods
aaa
addr16
and
test
arpl
mov
xor
dec
insb
dec
jae
or
arpl
xor
out
int
sarl
jbe
sbb
shll
incl
out
test
mov
pop
fwait
or
aas
sub
xchg
fdivrs
xchg
cmpl
mov
sub
jno
pop
mov
fiaddl
cmc
ds
stos
mov
push
mov
loope
mov
les
xchg
fistpll
test
pop
lods
ds
pop
popf
inc
jne
sbb
mov
addb
cmpsb
adc
mov
xor
popf
jecxz
xchg
cld
fidivrl
in
mov
inc
out
les
pop
mov
mov
or
aam
dec
ljmp
mov
mov
shl
xchg
stos
mov
xor
js
in
xchg
gs
test
pushf
xchg
dec
les
xchg
pop
dec
cmp
jno
pop
repz
aas
icebp
inc
cs
add
test
mov
or
mov
adc
jb
pushf
xchg
mov
cmp
scas
pop
lods
insl
icebp
mov
sub
dec
xor
xor
daa
push
dec
std
lahf
jno
mov
jne
mov
sub
push
push
push
push
fistps
add
mov
ret
test
arpl
jle
pop
push
or
push
xchg
sub
aaa
sti
ds
sti
insb
or
sbb
rolb
or
xorb
pop
stos
shll
pop
or
push
cmp
inc
lods
xor
hlt
call
int
jecxz
daa
push
mov
ss
sub
mov
das
js
pusha
mov
cmp
dec
jae
mov
loopne
aas
sbb
es
mov
jo
jae
movsl
sub
outsl
les
dec
inc
int
inc
fisttpl
pop
mov
sub
dec
ss
cmp
or
xchg
mov
testl
inc
aas
jo
xchg
inc
mov
lods
dec
imulb
dec
xor
mov
fsubs
test
push
jne
add
mov
mov
xorl
js
scas
dec
aas
inc
mov
in
in
mov
mov
dec
push
rcr
adc
stos
push
andb
and
rcrl
push
cltd
divb
iret
cmc
inc
adc
daa
fildl
cs
jg
scas
cmpsl
xchg
inc
mov
insl
mov
jae
outsb
cltd
enter
sbb
jo
sbb
pusha
aam
inc
sarb
repz
lret
sub
sub
test
adc
sbb
out
fs
mov
cltd
mov
cmp
int3
jmp
xchg
xor
pop
and
mov
add
mov
sub
movsl
pop
insl
or
stos
xchg
fcoms
adc
mov
jae
mov
int3
out
jno
mov
or
pop
ret
in
negl
fs
clc
sbb
jmp
sbb
pusha
mov
rcrb
lret
cmpsl
jns
leave
push
xor
pushf
mov
fistpl
push
loope
test
dec
repnz
adc
jbe
fdivrl
adc
mov
lcall
test
mov
jmp
xchg
andl
inc
adc
xor
insb
add
jns
cmp
outsb
loopne
fwait
call
xchg
xchg
or
iret
xor
aam
and
xchg
push
loope
stos
push
enter
mov
jecxz
pop
outsl
fisubs
jl
fsincos
iret
ret
out
mov
xor
push
sbb
push
lods
fstps
shl
out
cwtl
jp
dec
fildll
sbb
outsl
enter
and
scas
mov
inc
sbb
adc
push
std
pusha
sub
outsb
test
outsl
cmp
rcl
jns
fisubs
aas
call
pop
js
mov
hlt
sbb
ficompl
call
test
xchg
mov
adc
stos
ds
mov
test
cs
sbb
mov
adc
and
push
inc
ffreep
iret
cwtl
ss
rep
mov
dec
loope
add
lods
pop
outsl
xchg
jb
xor
and
test
pop
xor
lods
xchg
dec
mov
repz
clc
sub
dec
and
loopne
scas
int
mov
cmpsb
jl
jno
into
mov
es
mov
movsl
mov
xchg
or
mov
fcoms
lret
or
jae
sub
mov
and
es
or
leave
dec
or
adc
dec
xchg
iret
cmp
mov
add
or
mov
aas
ja
out
mov
repnz
pop
int
xchg
xchg
or
ret
xor
jmp
lret
or
in
sub
jmp
loop
aam
dec
mov
push
ss
popf
sub
inc
clc
mov
out
adc
ljmp
es
stos
mov
mov
pop
call
pop
movsl
fisubrl
int3
lock
pop
addr16
pop
cmc
mov
enter
mov
jle
bound
jbe
adc
push
dec
je
dec
shll
aaa
int
mov
popf
fsubrl
inc
push
sub
nop
cmp
fs
inc
pop
pop
push
mov
cmc
xor
inc
aad
icebp
xchg
add
and
push
fstpl
dec
mov
mov
pushf
les
jle
dec
inc
stc
add
fisttps
dec
jl
insb
cmp
push
inc
dec
cmp
sbb
scas
subb
mov
and
or
jno
iret
int
inc
adc
cli
rcll
sbb
add
lcall
in
push
push
aas
out
xor
sbb
sub
mov
jmp
in
push
shrl
bound
cmp
cwtl
mov
jge
xchg
mov
es
mov
cs
mov
imul
imul
push
popa
push
dec
sbb
cmp
pop
sbb
jle
adc
dec
lods
nop
repz
gs
cmp
inc
push
pop
xchg
or
mov
mov
and
pop
daa
xor
inc
and
cld
sbb
and
rol
xor
and
mov
insl
mov
outsb
shll
mull
stos
or
sub
test
popa
stos
lret
icebp
and
cwtl
sub
xor
dec
mov
xchg
and
inc
mov
and
sub
ja
pop
push
cltd
lcall
mov
push
adc
les
shr
rorb
and
push
and
jecxz
imul
in
nop
jb
mov
add
and
push
insb
mov
sarl
inc
xlat
jno
es
push
mov
jg
out
push
shlb
inc
in
cs
jne
ljmp
lret
lods
inc
push
popf
dec
cmp
push
repz
adc
sbb
mov
mov
iret
lret
fnstenv
jno
sbb
popa
stos
call
test
sbb
subl
cmp
pop
sub
leave
add
out
mull
in
in
cmp
scas
iret
pop
sahf
in
cwtl
jo
mov
loop
scas
dec
and
sub
pop
xor
mov
cmpsl
dec
aas
imul
inc
xor
xlat
mov
into
fadd
sbb
dec
fidivrs
xchg
xor
loop
mov
cmp
scas
pop
mov
sti
dec
or
push
scas
or
sahf
shrl
ljmp
popf
popf
mov
les
data16
cmp
pop
enter
lcall
mov
mov
add
lods
jb
pop
inc
sti
rclb
sub
test
outsb
mov
and
aad
jge
sahf
cmp
jns
fistpll
xchg
mov
dec
out
aaa
or
scas
push
addb
pop
scas
push
je
mov
pop
dec
loopne
inc
xor
push
cmpsl
push
push
cmp
add
or
test
jae
lods
shll
lods
je
inc
cmpsb
and
test
inc
daa
or
or
add
sbb
into
pop
inc
lods
push
test
inc
test
lret
nop
inc
pop
push
shrb
mov
iret
adc
int3
pop
jg
or
xor
pop
scas
mov
vpackuswb
leave
add
dec
xor
pop
das
cmp
adc
ret
ss
test
mov
push
pop
idivb
mov
xor
push
stc
mov
xchg
inc
jo
in
mov
push
push
and
adc
sbb
addr16
loopne
fnop
fmull
hlt
cs
js
test
cltd
mov
int
push
scas
mov
pop
shrl
ja
test
js
adcl
rcll
inc
fildll
inc
pop
out
ljmp
and
sti
or
xor
jle
and
loope
push
mov
pushf
ds
push
xchg
icebp
sub
in
pop
jmp
sti
adc
cltd
adc
push
mov
fnsave
sub
dec
or
repnz
mov
adc
and
inc
add
and
lds
adc
daa
xor
cmpb
in
and
push
xchg
push
lret
inc
hlt
jl
dec
dec
fldcw
push
out
loop
outsb
mov
mov
cmp
ds
in
or
fcoms
dec
or
add
add
ss
push
xchg
add
insb
mov
cmp
pusha
test
into
popf
test
sub
sbb
jg
fisubrl
das
mov
jae
clc
ret
out
dec
sub
ss
ret
outsb
adc
fnsave
int3
push
pop
addl
or
jmp
stc
repnz
xchg
sub
aas
fcmovu
test
cld
push
adc
push
mov
inc
in
add
jns
and
movsb
xor
xchg
mov
xor
adc
mov
inc
test
std
jnp
inc
imul
divl
in
fidivrl
mov
adc
scas
cltd
jle
insl
xchg
xchg
ret
jns
push
sbb
or
sahf
inc
push
jno
lcall
fcmovnbe
pop
subl
pop
nop
repnz
mov
loopne
pop
fiadds
xor
rcrb
push
jne
jg
incl
adc
hlt
and
sti
mov
jnp
imul
jmp
xchg
push
jl
jg
push
sub
dec
xor
in
movsl
lea
mov
test
cltd
mov
pop
fsts
js
arpl
lahf
inc
outsl
or
dec
mov
outsl
lods
ss
pushf
dec
add
insb
xchg
inc
sbb
loope
sbb
xchg
cmp
movsb
lahf
ret
mov
lea
aam
or
inc
mov
fisttpll
cli
pop
pop
testl
pusha
mull
pop
clc
mov
cmp
push
dec
lahf
cli
mov
bound
mov
lea
int
push
xchg
mov
cmp
xchg
insb
sub
jecxz
repz
cwtl
mov
fdivrs
out
or
mov
mov
sub
cwtl
iret
push
cmpsl
aaa
push
mov
pushf
pop
add
enter
leave
xor
pop
ret
adc
or
stos
jne
pushl
gs
outsl
or
je
mov
out
add
jle
pop
mov
mov
sub
adc
imul
sbb
jo
sahf
cs
cwtl
mov
inc
and
add
leave
inc
imul
fst
jmp
mov
sub
jecxz
jnp
add
jl
xchg
or
sti
into
push
dec
pushf
xor
push
sbb
les
outsl
mov
pop
pop
xor
jae
add
in
test
inc
adc
iret
loope
test
pop
xor
mov
jp
cmp
cwtl
stc
insl
mov
test
pop
sbb
shlb
and
stc
and
loop
mov
pop
fs
or
or
or
jo
inc
sbb
insl
mov
imul
mov
insl
stos
mov
dec
pop
mov
cmp
sub
pop
fs
pop
xchg
in
mov
jns
aad
mov
jae
loop
xor
stc
fstpt
shll
out
shlb
cmp
cmpsl
jmp
lret
xchg
inc
rorl
jns
xor
ret
insl
push
sub
repnz
shll
or
lds
testl
jecxz
sub
pop
bound
or
jmp
mov
mov
adc
pop
addb
dec
and
jle
pop
sub
call
lcall
insb
test
sub
insb
lret
in
daa
push
push
and
pop
std
inc
fisubs
xchg
pusha
cltd
cmp
insl
sub
push
stos
mov
mov
data16
fsub
dec
xor
out
lret
aam
sub
add
ret
lea
add
pushf
stos
jecxz
pop
nop
pop
out
call
int3
ja
and
pop
push
cmp
js
sbb
setg
push
jae
mov
jl
sub
test
inc
and
add
push
scas
aaa
cmp
in
es
push
lea
mov
push
ret
inc
clc
add
mov
outsb
push
addr16
aas
gs
mov
mov
inc
out
or
jb
jne
daa
int3
psubw
sub
xchg
sub
pop
aas
ficoml
cmpsl
movsb
xchg
push
rol
adc
jmp
rorl
and
fcmovbe
add
inc
rcll
imul
ss
push
iret
mov
gs
sub
xor
and
push
andb
mov
clc
in
js
and
mov
jl
out
add
pusha
test
xchg
push
adc
jo
sub
push
lods
sbb
rolb
push
cwtl
sbb
sbb
jnp
or
mov
fwait
pop
pop
jb
nop
subl
xchg
fcomp
adc
lret
enter
lock
mov
inc
jmp
les
add
es
jecxz
ds
lods
cmpsl
sub
jle
test
scas
or
adc
and
test
shll
push
shr
inc
ds
cwtl
repnz
inc
add
push
push
pushf
jp
fnstsw
push
mov
cmp
repnz
jl
imul
or
xor
adc
ret
jne
and
push
xor
add
loope
lret
ljmp
sub
xchg
inc
xchg
ds
out
cmp
mov
fildll
inc
dec
xchg
shrb
cwtl
pusha
ja
arpl
orb
cli
cld
lods
push
mov
or
out
std
scas
push
jno
scas
ss
and
cmp
nop
add
add
mov
loop
add
dec
scas
imul
xor
negl
sbb
dec
negl
mov
int3
jnp
mov
enter
lahf
cmc
pop
push
stc
dec
mov
mov
or
pop
inc
xchg
mov
sbb
xchg
and
jmp
lret
ja
xchg
std
sbb
rolb
add
and
jns
scas
xchg
mov
repnz
fstpt
bound
stc
cmp
sbb
mov
pop
xchg
loope
inc
push
adc
leave
mov
add
mulb
sub
pushl
inc
repz
ret
sub
or
ja
sar
fcomps
bnd
test
add
or
jns
out
cmp
shll
cmpsl
xor
xor
mov
ret
jmpw
fwait
stc
in
inc
adc
jle
mov
xchg
jl
xor
lods
mov
aad
xchg
insb
cmc
mov
fsubp
roll
sub
jl
jl
ss
xor
notb
incb
shlb
inc
lret
jmp
cli
add
cmp
lods
or
mov
mov
add
pusha
out
jge
pop
mov
push
push
repz
adc
cvttps2pi
pop
and
or
or
in
mov
jmp
call
repnz
sub
test
lds
jecxz
loope
flds
movsb
out
mov
sti
and
dec
ror
decw
ret
test
or
push
movsb
sbb
push
add
cmpxchg
sub
and
std
rorb
cmc
and
enter
out
es
add
mov
and
loope
mov
aam
cmp
mov
lods
popf
dec
mov
int3
rcrb
jecxz
lods
fstps
add
cmp
push
dec
add
lock
popf
rorb
out
xor
cmp
push
xchg
pop
push
jb
dec
movsb
xor
repnz
mov
subl
add
fwait
popa
push
mov
or
mov
je
ljmp
add
aam
shr
and
jo
in
lods
leave
adcb
ret
testl
ficomps
push
int3
scas
cmp
testl
arpl
inc
push
fisttpl
push
lea
push
xchg
push
fldcw
push
scas
pop
das
mov
push
add
jno
lret
jae
sti
cmc
mov
enter
push
xor
dec
aam
out
lods
adc
fisttps
imul
push
pop
repnz
jmp
inc
xor
push
jne
xchg
pop
pushf
inc
and
gs
adc
lea
jle
push
enter
lds
cmp
push
sub
xchg
rclb
pop
sar
xchg
dec
jno
push
adc
ficomps
aad
rol
xor
test
cmc
jae
xchg
cmp
and
jae
pop
sbb
cmp
into
dec
xorb
int
mov
mov
mov
add
ds
ficompl
push
lcall
xor
stos
jo
or
jp
push
mov
jne
or
adc
and
popf
xor
fwait
and
jnp
imul
out
loop
mul
pop
movsl
lret
call
fsubl
movsb
inc
dec
dec
nop
nop
and
sti
shrl
dec
xor
lea
xchg
int3
mov
dec
inc
sbb
icebp
iret
popf
add
cwtl
shrl
lds
pop
imul
xor
pop
xchg
rcll
and
push
push
xor
mov
pop
push
pop
jl
mov
sub
sub
cmpsl
pop
and
test
ret
and
mov
fldenv
ds
leave
mov
xchg
test
mov
mov
inc
xchg
jno
add
shl
mov
mov
xor
jp
cmp
dec
test
mov
out
scas
pusha
addr16
fiadds
sub
cmp
sahf
push
inc
add
xchg
adc
scas
sbb
in
rcll
mov
ljmp
cld
mov
jno
inc
xchg
mov
jnp
xchg
mov
cli
fs
sbb
out
icebp
dec
or
test
mov
jg
xor
in
fwait
clc
add
ss
xor
in
rolb
jo
stos
push
in
and
das
xchg
lods
ds
and
movsb
arpl
sti
imul
int3
fimull
xchg
xorb
add
jp
and
and
dec
subb
ret
mov
xor
pusha
xlat
aad
xor
pop
imul
pcmpeqd
or
push
inc
pop
mov
ljmp
sub
jo
movsb
ja
imulb
dec
xchg
mov
sahf
add
outsb
mov
adc
nop
and
jmp
push
mov
add
popf
das
jbe
js
cmc
sub
mov
cmp
scas
push
int3
fidivrs
das
add
dec
pop
andl
shll
mov
push
pop
lds
out
or
in
jge
nop
xor
dec
movsl
cmp
sahf
jge
daa
sbb
inc
mov
dec
jmp
push
xor
scas
sahf
neg
mov
sub
mov
loope
jno
outsl
or
sbb
sbb
cwtl
or
cmp
lods
or
std
inc
in
xor
or
adc
mov
and
bound
sbb
and
xchg
in
les
jg
stos
in
adc
jp
pop
inc
cmp
cmp
mov
sub
xor
sti
lcall
jp
push
test
mov
insb
jb
stos
repz
xchg
sub
push
dec
push
mov
jp
loope
shll
jae
repnz
and
mov
sub
adc
lcall
dec
stc
ret
movl
in
jne
adc
std
jp
lea
xor
lret
nop
sub
call
nop
in
cmp
jae
jmp
call
ret
mov
test
cmpsb
loop
jmp
int
lea
pop
push
pop
and
xor
jbe
and
mov
xor
daa
sbb
mov
mov
lock
xchg
and
incb
sbb
sbb
ret
push
popa
pop
lock
sub
sbb
jge
and
dec
pop
adc
push
xchg
movsl
popa
aaa
mov
push
inc
inc
mov
inc
cmp
ja
ss
aam
ss
addr16
cmp
jbe
cmpsl
test
lcall
je
mov
add
pop
popa
jecxz
fidivl
inc
xchg
in
cmp
push
adc
cmp
mov
ret
pop
jge
dec
sti
fdivs
outsl
mov
testl
mov
push
mov
xor
jb
out
out
sbb
cli
scas
xor
outsl
and
pop
fwait
inc
data16
aam
adc
sub
stc
sbb
sub
hlt
sub
cld
sub
divps
lahf
sbb
icebp
iret
popa
lock
iret
cmpsb
addr16
test
aaa
mov
pop
xchg
push
into
das
add
xchg
xchg
pop
jno
add
fdivrs
dec
inc
pop
mov
outsb
lahf
in
scas
call
pushf
sbb
mov
push
jnp
mov
sub
lcall
adc
into
in
and
mov
addr16
sbb
mov
fiadds
push
adc
dec
mov
mov
arpl
cmp
lcall
cmp
add
pop
rolb
scas
add
sbb
out
jb
mov
cmp
in
outsb
push
sbb
aam
mov
mov
push
xchg
call
arpl
das
add
adcl
in
in
popf
inc
std
aaa
jle
je
scas
incb
ret
pop
inc
js
pop
ffree
sub
int3
and
popa
cmc
mov
fidivrl
xchg
sbb
addb
iret
xchg
scas
jb
std
push
jge,pt
or
dec
jge
inc
insl
test
lods
pop
dec
sub
mov
or
popa
inc
and
dec
xchg
cmpsb
and
loope
cmc
cwtl
in
mov
sub
jecxz
test
xchg
ljmp
sub
ficompl
hlt
insb
ret
movsl
into
and
jne
mov
sbb
inc
into
in
adc
mov
inc
lahf
test
xor
xchg
cmp
ja
in
leave
jmp
outsb
cli
cmp
out
sahf
lahf
jge
rcrl
fimuls
jae
mov
add
les
mov
or
leave
icebp
das
xchg
jne
cmp
adc
fdivs
ja
sbb
mov
jecxz
dec
lahf
rol
xchg
sbb
dec
inc
mov
xor
test
cli
or
adc
jb
sbb
sub
push
fcmovbe
push
and
cld
clc
in
iret
dec
cmpsl
or
iret
aas
dec
cmp
ss
jge
ss
mov
adc
shlb
jle
add
frstor
dec
inc
cmp
inc
push
push
scas
addr16
in
test
rcrb
je
xchg
sub
ja
and
les
jp
push
sub
xchg
adc
in
push
pop
out
lret
mov
sbb
xchg
lcall
and
xchg
adc
stos
out
jno
or
jae
add
or
adc
adc
inc
enter
mov
mov
pop
and
jmp
out
adc
adc
iret
out
fdivp
lcall
inc
cmpsb
cmc
sbb
sub
sbb
cs
mov
scas
mov
dec
push
leave
repnz
test
test
and
aas
push
mov
push
repz
jae
sub
sbb
stc
outsl
fucom
addr16
mov
jbe
xor
sbb
aam
out
out
iret
mov
lcall
ds
jle
jg
add
or
push
sub
testl
sbb
popf
fildll
xor
cmpsl
or
xlat
hlt
lods
imul
push
cmc
or
leave
cmp
pushf
sub
sub
mov
int3
mov
and
pop
adc
push
inc
cli
cmp
repz
out
lods
insl
leave
mov
pop
adc
loopne
cmp
fstl
push
lock
inc
mov
ret
loopne
push
mov
lret
sub
dec
repnz
and
mov
xor
push
xchg
adc
insl
cli
jmp
jae
call
data16
shr
pushf
adc
dec
loopne
out
inc
xchg
ss
fwait
orb
cmp
mov
cltd
cld
cmpsb
pop
xchg
xlat
out
and
add
adc
cmp
rcrb
loopne
mov
sub
fwait
aaa
stos
jne
lcall
add
sub
xchg
xlat
and
sbb
ss
ret
mov
or
cmp
std
push
in
fimull
inc
push
imul
stos
ja
or
mov
das
push
ja
jne
pusha
fs
jp
jg
fs
adc
push
push
cld
jb
push
mov
sub
xchg
sub
push
dec
push
mov
xchg
cmp
movb
jmp
adc
push
inc
mov
push
xor
xor
mov
cs
sbb
cmp
test
mov
aam
push
out
sbb
dec
pushf
sub
fnstcw
fcoms
push
jge
cmpsb
cs
mov
inc
jae
mov
push
dec
movsl
cmp
fwait
dec
fs
mov
fwait
cmp
sbb
ss
or
cmpsl
xchg
push
aaa
jo
fwait
loopne
scas
jnp
xor
out
test
ss
and
fsubrl
jns
int
cmpsb
lods
fbstp
pop
mov
cmc
hlt
iret
enter
push
jmp
sbb
iret
and
aad
pop
ret
adc
and
sub
and
adc
ljmp
mov
fidivrs
stos
stc
xchg
adc
sbb
out
cmp
out
jnp
cmpsb
vpsubsw
in
imul
mov
xlat
mov
out
pop
cmpsb
add
in
or
enter
xor
xor
xchg
or
push
push
adc
rorl
inc
loopne
dec
xchg
fdivp
mov
es
into
mov
xor
sbb
xchg
mov
sub
rcll
mov
das
pop
pop
pop
jne
les
and
pop
mov
frstor
lret
adc
in
push
sahf
add
pusha
test
jae
pop
mov
mov
push
iret
or
mov
shr
xorb
js
lret
mov
insb
and
leave
lret
mov
xchg
repz
mov
inc
xchg
icebp
push
lods
scas
xor
pop
jo
lds
lret
dec
fmuls
mov
lret
mov
and
inc
cmpsl
lret
mov
fcmovnbe
daa
jge
pop
stos
or
inc
xchg
add
inc
aam
dec
mov
sub
pop
add
inc
sub
jnp
inc
sbb
dec
stos
xchg
pop
aas
jae
mov
stos
les
sti
mov
push
stc
test
call
je
sub
imul
test
or
ret
stc
jbe
xchg
mov
fwait
adc
sti
out
cmpsb
int3
jb
sahf
xchg
xchg
xchg
in
cmp
jae
js
stos
stc
in
cmp
xor
fnstenv
or
jmp
xor
dec
call
mov
ret
sbb
out
mov
pop
sbbl
inc
mov
jmp
clc
push
mov
push
jecxz
shlb
ja
jl
dec
pushf
sub
rsm
adc
mov
add
cld
fidivrl
dec
popf
iret
or
adc
xchg
mov
add
out
mov
xor
jbe
push
aaa
ljmp
push
push
nop
pop
xor
jbe
jns
pop
and
leave
xor
xchg
loop
mov
push
in
jb
outsb
cmp
or
cmpsl
leave
aam
lcall
jo
sbb
mov
test
jl
daa
rcll
sahf
daa
ret
cld
or
mov
push
cmpsb
or
lahf
rcll
pusha
xor
xchg
out
loopne
adc
fwait
mov
cli
inc
add
mov
out
rol
push
call
scas
shr
call
cmpsb
inc
xlat
insb
mov
pop
pop
in
stos
mov
and
lods
daa
div
mov
jge
add
iret
pop
ficompl
jl
fisttpl
mov
xchg
adc
std
aas
inc
rorl
sbb
loopne
mov
sub
outsb
jne
cmp
fidivs
sub
xor
sbb
leave
push
pop
call
mov
or
popf
push
push
mov
les
pop
test
pop
popf
jecxz
inc
dec
dec
aaa
mov
jge
pop
and
inc
inc
inc
jl
mov
imul
lret
data16
pop
dec
cld
fdivrs
jbe,pt
lds
xchg
adc
cmp
xchg
mov
xor
mov
aaa
xor
sub
movsl
scas
push
fsts
lods
pusha
jmp
es
or
add
hlt
adc
cmp
mov
lret
dec
jmp
subl
mov
push
int
subb
mov
xchg
push
shrb
jp
in
insl
iret
ret
enter
mov
adc
push
push
in
and
jmp
imul
add
pop
insb
lret
dec
add
xchg
cmp
add
xchg
je
mov
mov
outsl
mov
int3
inc
sub
stos
xor
dec
jl
mov
lods
ret
scas
inc
cmpsb
aad
mov
mov
or
mov
cwtl
out
shrl
pop
pop
lock
sbb
xchg
dec
inc
sbb
sub
fisubrs
arpl
push
in
sub
adc
xor
jg
cs
cmp
out
scas
insl
lret
sub
mov
mov
jb
sarl
mov
sub
movsl
cmpsb
dec
stos
push
adc
xchg
adc
and
in
sub
sub
clc
ficoms
jecxz
mov
mov
enter
outsl
inc
out
sub
push
out
mov
cmc
add
mov
inc
pop
dec
mov
and
dec
incl
push
andl
adc
jne
incl
mov
cmpsl
movsl
cmp
sti
aaa
aam
xor
lock
push
mov
jmp
mov
inc
push
lock
mov
jne
test
insl
xchg
movsb
aam
add
test
dec
or
cs
int3
mov
mov
and
into
push
and
xchg
jne
and
popl
and
and
int
xor
or
in
je
ljmp
cmp
push
cmp
lods
jmp
push
out
sbb
sbb
add
xor
jmp
sbb
push
ja
sarb
push
mov
repnz
fmull
outsb
xor
jne
lret
inc
aam
mov
pop
or
mov
pop
and
pop
fisubrs
or
ss
into
loopne
dec
sub
dec
sbb
add
in
mov
aas
jg
sbb
adc
fdivr
mov
insl
xchg
andb
jg
pop
mov
sti
ret
mov
dec
adc
jnp
xchg
mov
scas
mov
loop
and
iret
mov
cwtl
loopne
imul
sub
stc
test
sbb
sahf
and
push
ljmp
mov
and
push
jl
shlb
popa
sub
mov
xor
in
mov
add
cwtl
fistpl
cpuid
mov
push
sub
inc
js
xchg
pusha
xlat
xor
cli
pop
xchg
jnp
ret
paddq
repz
or
dec
and
jle
decl
lcall
adc
pop
xchg
lret
pushl
push
or
aas
adc
inc
addr16
lret
jmp
fdivrs
cmpsl
mov
mov
shlb
push
mov
call
jno
lds
lock
add
pop
xchg
out
sub
ror
and
mov
jl
jne
xor
fbld
sbb
xor
out
push
mov
cmp
and
cmp
loope
js
inc
ljmp
dec
insb
adc
loope
sbb
dec
fs
add
out
push
xorb
xorl
dec
rcll
cmp
pop
add
stc
mov
cmp
push
aam
fwait
dec
rcll
out
pusha
test
cmpsl
aam
dec
sbb
mov
cs
push
shlb
cmp
pop
outsl
test
and
xor
push
add
push
cmp
es
out
xchg
lods
mov
push
orl
mov
cmp
or
or
mov
push
shll
fsubr
out
movsl
insl
test
mov
xor
aam
sbb
ds
sar
dec
and
sub
push
ljmp
icebp
ja
push
cmp
sub
sub
mov
sbb
mov
stos
aam
mov
shlb
xchg
push
xchg
inc
add
jmp
mov
push
cmpsl
jl
fdivrl
cs
dec
ret
or
push
mov
sbb
mov
fildl
sbb
sti
dec
jb
inc
lcall
in
subb
rclb
and
lock
push
jp
fisttps
mov
jge
pop
decb
jle
push
jns
call
ficomps
fstp
inc
push
mov
test
sti
push
jb
mov
pop
std
jmp
add
jbe
push
xchg
adc
adc
lret
cmp
in
jbe
jp
inc
inc
inc
push
xchg
insb
sbb
sbb
adc
pop
lret
add
sbb
faddl
xor
jl
lods
mov
add
sub
mov
lock
push
lahf
sub
outsb
mov
test
cmp
sti
pushf
xchg
popf
xchg
pop
outsl
or
and
pusha
sub
jle
and
mov
in
or
iret
lret
test
sbb
sbb
cmc
leave
ljmp
or
test
les
or
add
xor
mov
mov
addr16
stc
bound
js
jge
stc
cltd
lret
test
push
pushf
add
jecxz
insb
roll
adc
shrl
cmpsl
cs
cmp
xor
cli
in
push
mov
test
js
repz
dec
into
cld
push
mov
in
mov
push
fsubl
dec
jmp
xlat
cmp
repnz
sub
sbb
push
pop
notl
push
add
nop
lods
and
cmp
out
sbb
in
pop
adc
rolb
sbb
cwtl
test
dec
pop
jmp
and
mov
das
xchg
adc
test
xchg
xchg
scas
je
or
inc
fucomp
or
cmp
mov
repz
lret
cli
insl
sbb
push
js
push
fists
push
add
push
mov
xchg
cld
sub
mov
rcl
jbe
mov
lock
call
flds
dec
out
or
daa
fidivs
xchg
ja
push
adc
daa
je
dec
aam
mov
stos
std
push
sub
adc
dec
insl
or
fwait
insb
lret
aaa
mov
lret
sbb
adc
fdivrs
rcrb
std
test
mov
pop
sarl
popf
and
cmp
xor
lret
mov
sub
pop
sbb
mov
out
ds
jl
into
rcrb
fiaddl
jne
jo
dec
mov
mov
stos
adc
jne
inc
pop
sbb
inc
mov
ret
aam
fsub
fdivrs
jmp
in
inc
adc
arpl
inc
out
dec
mov
clc
xchg
sbb
mov
xor
pop
fs
xlat
les
out
std
rcr
xchg
add
jl
loop
fscale
sbb
imul
xor
hlt
je
dec
dec
sbb
cld
sbb
test
clc
repnz
popf
adcb
xor
shll
mov
xor
adc
outsb
mov
mov
ret
sahf
xchg
mov
or
icebp
lcall
adc
pop
out
hlt
addr16
in
sub
insb
cmp
xchg
test
popa
dec
sub
faddl
das
iret
in
and
adc
and
cld
cmpsb
mov
mov
inc
lods
push
sahf
shrb
jmp
or
aaa
push
imul
outsl
adc
cmp
aas
dec
or
pop
loop
inc
mov
push
loop
fsubrs
sbb
loope
push
or
and
pop
lahf
and
cmp
mov
and
jle
out
fld
mov
cwtl
mov
faddl
adcb
stc
icebp
xchg
negl
cmp
mov
xchg
mov
aaa
test
xor
jmp
lods
notl
imul
lcall
and
daa
lea
sub
sarl
movb
repz
dec
and
cld
je
cmp
mov
and
mov
inc
pusha
sub
lods
rcrl
lods
mov
jae
xchg
push
frstor
cmp
cmc
and
in
pop
jne
movsb
push
daa
test
andb
fwait
jp
js
push
push
popf
xor
outsl
mov
add
aas
pop
push
dec
fdivr
loop
out
sbb
or
mov
cmp
jl
pusha
push
push
popf
jp
mov
sbbl
in
imul
mov
pslld
stos
sub
cmp
scas
push
lea
hlt
leave
int
dec
jge
nop
cmp
jmp
push
xlat
xchg
xlat
popa
nop
movsb
inc
xchg
pushf
ret
out
pop
push
xchg
cmc
mov
movsl
mov
push
mov
mov
dec
dec
outsl
xchg
enter
leave
adcl
and
ja
pushl
sub
jge
aaa
lret
out
pop
call
pop
rcrl
arpl
or
xchg
call
and
ret
popf
mov
rclb
loopne,pn
jp
sub
dec
ret
xchg
fcoms
fdivl
adc
adc
jecxz
or
pop
test
mov
jne
arpl
sbb
int3
mov
push
in
je
push
push
rcl
jb
inc
aad
or
jns
pop
into
aad
fsubp
or
popf
in
loope
pop
push
jns
insl
sub
bound
movsb
xchg
jne
xchg
jb
sub
shr
aas
cmpl
out
xchg
sti
testl
xchg
daa
dec
nop
push
sbbb
xlat
repz
enter
test
dec
push
add
mov
add
outsl
xchg
inc
divb
into
lods
mov
xchg
adc
xchg
test
xchg
popf
or
dec
sbb
jge
or
pusha
jle
mov
or
xor
pop
fdivrl
jbe
into
data16
mov
dec
inc
jns
jp
aaa
shlb
mov
mov
andl
popa
jne
xchg
add
stos
or
dec
xchg
insl
mov
lods
push
dec
cmpb
dec
lock
dec
xor
pop
pop
aam
mov
mov
push
sarb
shll
add
ret
mov
mov
dec
hlt
mov
ja
sbb
add
mov
adc
mov
and
gs
jo
loop
popa
adc
cmp
inc
daa
cmp
aaa
push
pop
inc
mov
dec
in
jne
lods
cld
or
pop
flds
push
js
std
loope
ja
data16
mov
repnz
insb
repnz
scas
sub
incl
fwait
js
and
mov
stc
jge
js
jg
movsb
mov
lock
push
mov
jbe
push
jmp
add
xchg
lods
sti
mov
fldenv
andb
pop
sub
dec
mov
inc
bound
mov
es
mov
pop
stos
inc
xchg
addr16
scas
inc
dec
mov
and
mov
cmpsl
pop
lock
inc
lcall
adc
jg
sbb
inc
call
pop
or
mov
jg
imul
sbb
loopne
rolb
shlb
cmp
daa
stos
loopne
jmp
cmp
cmp
push
out
or
pop
lock
test
fdivrp
add
iret
mov
dec
add
or
xor
mov
jl
adc
sbb
in
sbb
mov
sbb
jg
arpl
cmp
ffree
lock
cmp
jg
and
loop
pop
sub
pop
and
je
and
xor
jmp
int3
inc
dec
idiv
pop
je
lds
out
sbb
int3
pop
sub
lahf
mov
into
jle
ret
jp
out
sbb
push
xor
dec
jne
sub
imul
add
sbb
outsb
shrb
idivl
sub
pop
mov
fists
push
inc
inc
cmp
gs
flds
sub
in
jnp
sbb
sbb
and
adc
dec
inc
adc
push
mov
lods
pop
lds
mov
jmp
sub
mov
aad
adc
ljmp
stos
shlb
es
addr16
ds
jnp
pop
rol
rolb
xlat
in
out
lcall
into
push
add
shlb
push
insl
dec
add
cs
sbb
repnz
aad
dec
out
iret
sub
fisubl
and
jbe
mov
les
cmp
je
push
nop
sbb
ja
pop
aad
fisubrl
adc
rcrb
dec
mov
bound
jno
mov
int3
jno
std
mov
jbe
mov
and
popf
sarl
sbb
pusha
lods
jnp
sahf
outsl
dec
or
insl
add
mov
jge
cmp
lahf
mov
cmp
jb
sbbb
sbb
sahf
push
je
cmpsl
ficoml
push
jb
int
lret
stc
ret
insb
repz
xor
mov
xchg
pop
shll
jmp
and
mov
mov
aam
push
dec
mov
sbb
or
jo
sub
sub
mov
jne
enter
sub
pushf
push
loopne
testl
dec
cmpsl
test
clc
movsl
rcl
push
mov
push
test
test
addr16
sbbl
sbb
cs
pusha
lds
aaa
push
shll
movb
xchg
cmp
imul
js
mov
jne
int3
xchg
in
fwait
clc
sub
jne
fwait
pop
icebp
std
adc
rcl
add
push
lods
pop
rorl
movhps
xchg
jb
jp
mov
iret
stos
xchg
popf
xor
int
stos
repnz
jge
mov
mov
xchg
jp
xchg
mov
xchg
movsb
jnp
adc
inc
inc
sti
movsb
sbb
arpl
sub
data16
int
roll
adc
addr16
cld
cmpl
out
rcll
sbb
lock
into
outsl
orl
ja
pop
jne
aad
sbb
lcall
mov
mov
mov
movsl
out
pop
push
ds
icebp
xor
lcall
sub
daa
outsl
leave
mov
out
shll
cmpsl
scas
jecxz
int
sub
mov
mov
jg
mov
xchg
adc
scas
mov
lods
or
in
dec
mov
ret
adc
ret
and
dec
mov
jae
mov
mov
jnp
pop
daa
nop
mov
arpl
subl
fidivs
in
jmp
movsl
out
inc
insb
push
cmpb
push
pop
jmp
pop
jp
sub
test
pop
push
pop
pop
or
insl
xor
sbbb
lret
jns
push
dec
jle
lcall
sbb
subl
cmc
mov
jns
push
jnp
xchg
mov
in
push
mov
js
jo
jb
imul
mov
push
popa
fistpl
and
dec
rorb
mov
dec
hlt
hlt
scas
jbe
rclb
mov
int3
add
add
rcr
push
jg
movsl
lock
les
lds
fdivl
dec
fdivr
and
sahf
and
add
xchg
test
out
fcompl
icebp
xor
jb
roll
arpl
mov
bound
repz
cltd
shrl
adc
mov
jg
cld
lds
pop
fadds
jmp
jge
mov
mov
inc
inc
sbb
std
jno
cli
out
mov
adcl
push
cmp
inc
pop
in
subb
ret
xor
jno
lret
pop
pop
leave
mov
and
test
lahf
pusha
jp
andb
mov
fadds
or
cld
movsl
scas
fs
sub
cmp
sbb
pushf
sbb
repnz
in
ja
dec
xor
aaa
movsb
push
and
dec
ficomps
jle
enter
adc
xchg
cmpsb
mov
jnp
xchg
in
add
nop
mov
inc
jbe,pt
rcll
lods
inc
dec
fcoms
xor
xchg
cltd
dec
push
mov
sbb
add
pop
jle
pop
or
pop
adc
mov
sbb
mov
pop
jbe
sar
jmp
pop
mov
jb
out
xchg
add
les
ds
fs
fisubs
jmp
push
inc
xchg
push
dec
cmpsb
aas
or
xchg
shld
test
dec
shlb
cs
and
gs
add
out
mov
repz
fidivrs
xor
mov
pushl
leave
into
scas
push
cmpsl
sub
daa
out
add
outsl
test
pop
ret
sbbb
insb
add
sbbb
dec
and
xor
repz
jl
lret
cmp
xchg
sbb
clc
loope
pushfw
arpl
imul
lods
inc
aaa
out
das
mov
std
pushl
or
cs
sub
into
cwtl
add
pop
test
cli
in
lods
fucomp
out
mov
cmpsl
adc
popf
cmp
xor
sahf
cmc
jmp
sub
xlat
or
idivl
sub
mov
mov
mov
and
mov
aam
dec
mov
mov
fwait
push
pop
cs
adc
jnp
fimull
pop
push
fisttps
mov
icebp
leave
lds
xor
mov
std
test
xchg
or
jl
lock
enter
push
pop
xor
inc
outsl
jl
daa
iret
gs
stc
pop
mov
mov
add
and
ficoml
and
mov
lcall
cmpsl
inc
xor
int3
lahf
test
fildl
mov
mov
xchg
lea
lret
dec
xchg
cli
xor
mov
lock
mov
clc
cmc
add
les
xor
or
bound
insb
scas
in
scas
sub
add
mov
cli
push
ljmp
dec
outsb
xor
add
mov
mov
push
mov
shr
aam
mov
loop
xchg
inc
imul
dec
pop
jbe
dec
inc
xchg
dec
rorl
ljmp
cmp
data16
inc
add
les
icebp
loop
aam
cmpsl
pop
xor
hlt
stc
outsb
xchg
insb
jbe
jo
cmp
dec
xor
shl
adc
pop
and
nop
mov
pop
cmp
movsl
in
mov
pushf
outsb
jg
loop
popf
jno
cmp
or
fwait
dec
dec
mov
mov
xor
aaa
xchg
int3
inc
pusha
xchg
adc
dec
xor
xor
mov
pop
adc
jb
cmp
jecxz
inc
out
push
clc
ds
loop
push
jmp
cli
test
out
push
mov
and
cltd
xchg
pop
xor
inc
sub
ds
test
or
imul
lcall
sub
mov
and
or
lock
mov
dec
jae
xor
in
jno
sbb
cmp
lret
mov
adc
and
lods
daa
outsl
mov
outsl
cltd
or
sarb
adc
sub
xor
movsb
icebp
js
mov
mov
xchg
dec
adc
repnz
mov
into
dec
cmpsb
cmp
lods
imul
lds
cmpsl
inc
les
inc
inc
mov
sub
icebp
fildll
stc
iret
pusha
sub
add
int
mov
rclb
xchg
mov
sbb
xchg
mov
int3
push
faddl
iret
sub
xchg
out
scas
add
movsb
ficoml
movsl
mov
xor
pushf
xchg
arpl
cmp
push
mov
ficoms
fcmovnu
adc
cmp
pushf
xchg
mov
cmp
inc
sub
std
sbb
add
lods
sub
jb
fimull
fadd
adc
lods
add
sbb
cmpb
dec
mov
in
scas
mov
je
mov
into
clc
in
mov
mov
stos
sbb
push
sub
jo
je
test
mov
pop
rclb
negb
adc
sbb
popf
call
sub
orl
sub
or
push
push
jne
and
int
hlt
or
mov
pmulhuw
xchg
pop
fwait
xor
adc
pop
add
mov
jae
cmp
and
jg
lock
push
dec
xor
push
ficoml
cmpsl
cli
das
arpl
jnp
popf
repz
icebp
cltd
dec
cmp
mov
imul
jp
pusha
stc
and
das
les
aad
inc
or
cmp
push
add
notb
mov
pop
pop
mov
sarl
push
aaa
or
movsl
mov
daa
jg
iret
mov
add
cmpsl
xor
sub
add
scas
pop
or
inc
fs
inc
adc
in
repnz
rol
jp
cld
cmp
std
inc
les
jne
stc
mov
mov
out
stos
aaa
and
cmc
jp
loopne
cmp
in
testl
jl
ret
mov
add
mov
add
jg
pop
cmp
subl
js
xor
int3
jmp
fwait
shrb
push
pop
cld
andl
lcall
sub
mov
ja
std
orb
cltd
dec
das
ds
xchg
test
in
jo
icebp
push
int
mov
sub
lea
cmp
imul
cmc
add
cmp
adc
lock
lcall
mov
test
jb
push
pop
pop
test
movsb
inc
xor
loop
xchg
pushf
xchg
stc
sbb
faddl
xchg
pop
xor
loopne
mov
fisubrs
test
iret
and
mov
pop
movsl
push
inc
jg
jecxz
jp
dec
sbb
das
addl
sar
shrl
jl
aam
int
push
mov
add
xor
push
jno
loop
dec
sti
lds
pusha
mov
mov
cld
pop
lret
push
aad
push
xchg
dec
test
fbstp
sbb
pop
pushf
sub
push
pop
int3
jle
jns
add
fwait
push
dec
es
fistpll
out
negb
xor
inc
push
dec
dec
adc
sub
dec
and
clc
xor
es
mov
fwait
mov
fs
mov
xchg
adc
insl
insl
fdivr
push
and
or
xor
adc
leave
pop
fs
es
test
jns
lcall
ficomps
ljmp
loope
sub
mov
add
push
push
xor
loope
jno
orl
js
paddb
jnp
xchg
popa
sbb
cltd
popa
mov
xor
ret
lods
int3
xchg
mov
shlb
out
icebp
and
lock
lcall
dec
cs
jge
cld
scas
sbbb
test
call
mov
loope
nop
insb
mov
es
fnstenv
idiv
cmp
roll
pop
sbb
into
sbb
negb
aam
fmul
inc
jo
mov
fdivp
test
pop
and
aas
lea
mov
jle
and
enter
imul
mov
outsl
add
pop
mov
icebp
mov
iret
decb
mov
dec
js
test
arpl
sbb
mov
outsl
clc
fisubrl
addr16
stc
in
inc
fsubrs
fimuls
inc
inc
ss
sub
jmp
cmp
xor
into
lock
es
lea
pop
fdivrl
shll
xchg
movsb
dec
cmp
xor
dec
stos
insb
aad
sbbl
sti
nop
je
sbb
push
lret
dec
arpl
mov
mov
loop
sbbb
sub
xlat
adc
mov
xor
je
jo,pn
xor
mov
test
jecxz
adc
fsubrp
fld
pop
push
jecxz
lcall
jle
mov
lods
fidivs
pusha
js
shlb
lds
adc
jmp
shll
testb
outsb
add
decb
insb
cmp
cmpsl
sbb
int
je
push
popf
daa
ret
ljmp
jl
dec
xlat
mov
ja
std
gs
arpl
test
inc
mov
mov
ds
mov
inc
and
fdivrp
mov
mov
inc
stc
in
dec
push
push
test
lds
ficomps
or
mov
std
cmp
sub
dec
cltd
add
sbb
loop
and
xor
icebp
sub
push
dec
add
mov
popa
scas
xor
loope
daa
or
or
ds
xlat
cwtl
or
movsb
or
jecxz
jmp
popf
repnz
outsl
or
xchg
shll
mov
inc
jns
and
out
xor
jo
leave
out
lcall
rcll
jge
cwtl
out
inc
movsb
or
js
jb
enter
jecxz
pop
mov
outsb
into
pop
adc
arpl
cmp
mov
lret
xchg
push
add
clc
sbb
and
movsl
out
arpl
add
dec
enter
pop
sub
shll
out
adc
mov
push
mov
call
jmp
stos
cmp
ret
jmp
rol
fists
lods
imul
shll
aam
jecxz
and
jne
std
mov
adc
xchg
fdivr
xor
sbb
mov
push
gs
into
inc
subb
or
lret
cmp
pop
lods
mov
out
imul
and
dec
les
inc
pop
jg
xlat
pop
mov
xor
push
test
popa
bnd
mov
or
subb
mov
mov
xchg
mov
jp
mov
in
mov
fstps
std
outsb
loop
test
sahf
adc
adc
lret
mov
xor
sbb
fldcw
adc
add
cmpsl
lds
imul
dec
mov
roll
push
aam
adc
sbb
fs
and
dec
out
hlt
and
sbb
int
fadd
icebp
std
fdivl
cmpb
inc
call
xchg
out
fidivrs
out
mov
mov
negb
sbb
mov
or
mov
push
mov
jmp
ja
mov
sub
xchg
mov
addl
rorb
out
sub
lds
push
pop
orl
lds
add
xor
and
push
aas
xchg
mov
popf
adc
pusha
hlt
imul
sub
mov
leave
sub
sbb
loopne
push
jae
popa
loop
fdivr
sub
aaa
or
inc
mov
lds
adc
test
mov
rcr
outsl
pop
cmp
lcall
mov
xchg
jno
sahf
bound
popa
mov
add
fnstenv
or
push
dec
push
aad
or
sbbb
ljmp
stos
jge
inc
aaa
sbb
mov
pushl
and
out
fiaddl
pop
cmc
das
mov
mov
ljmp
push
clc
jmp
roll
mov
cvttps2pi
push
xchg
xor
pavgw
fnstsw
test
stos
hlt
dec
arpl
cmp
pop
into
out
push
je
xor
outsl
add
dec
sbb
add
sub
aam
push
test
mov
popf
js
int3
add
inc
mov
sub
sub
cltd
jb
stos
inc
data16
jns
push
rolb
bound
rcl
aaa
sahf
xchg
aam
outsl
push
pop
insb
test
mov
aad
shlb
clc
inc
push
pop
cmpsb
push
add
push
into
cmpsl
loopne
pushf
jnp
push
test
mov
adc
inc
mov
fucomp
sahf
and
insl
pop
sbb
mov
into
mov
in
jbe
std
lock
jo
xchg
repz
inc
mov
movaps
aad
int
push
dec
cmp
xchg
cmpsl
mov
xor
stos
adcl
nop
outsl
sub
pop
in
jmp
and
shrl
pushf
in
ret
sub
push
out
arpl
xlat
loop
sub
or
lea
int3
or
outsb
add
sar
cmp
sbb
cmpsb
mov
enter
or
loop
out
inc
and
add
imul
sti
rep
test
pop
test
pop
ret
xchg
mov
cli
call
dec
fdivs
push
outsl
cmp
cltd
sbb
daa
xchg
mul
or
test
cmp
or
xor
clc
int
sbb
sbb
or
lea
mov
insl
mov
lea
int
push
mov
xlat
xchg
sbb
out
xchg
fwait
daa
fs
stc
cmp
xchg
pop
inc
sbb
pop
stos
inc
add
sub
xor
dec
mov
dec
aaa
jl
lods
pop
cmc
aam
xor
pop
jg
fisubl
popf
push
gs
fcoml
les
icebp
inc
in
outsb
popa
inc
or
dec
adc
add
movq
lods
xor
loop
insl
cmp
sbb
in
xchg
sbb
mov
mov
xchg
addr16
call
pop
push
xchg
movsl
leave
mov
dec
sarb
jo
xchg
xchg
shlb
mov
fldt
clc
inc
push
push
mov
ror
cmpsb
std
jne
divb
and
mov
insl
push
sbb
xchg
cmp
sbbl
jmp
sbb
icebp
fchs
divl
stos
sbb
mov
cld
xchg
outsb
and
xlat
or
ret
in
dec
insl
daa
popl
sub
outsl
aam
mov
insl
gs
lret
and
mov
mov
imul
jb
addl
mov
cmp
jo
pop
cmp
mov
movsb
and
rolb
xor
js
lret
call
test
sbb
sbbb
mov
add
xchg
pop
dec
ljmp
cmp
das
std
mov
mov
loope
in
dec
inc
in
mov
add
test
xlat
fcompl
cmp
adc
dec
lods
pop
mov
and
add
xor
or
inc
add
mov
pop
icebp
pop
repnz
mov
imul
repnz
sub
sub
mov
adc
mov
jb
cwtl
test
xchg
iret
fcoms
dec
sbb
arpl
xor
pusha
cltd
popl
dec
pop
ret
dec
xchg
fcoms
mov
and
inc
xor
mov
push
mov
xor
jns
insb
aad
mov
inc
nop
mov
mov
popf
les
adc
mov
cmpsl
push
mov
outsb
jnp
test
xchg
mov
popf
add
inc
inc
pop
inc
pop
inc
xlat
into
pop
adc
sub
scas
stos
mov
and
xor
stos
push
mov
clc
pop
xchg
or
or
jmp
jge
out
enter
out
xchg
inc
dec
adc
jg
sub
enter
lea
aas
mov
jp
sahf
pop
add
xchg
sarl
pop
mov
adcb
sti
jbe
sbb
add
xor
dec
fsts
cmp
cltd
sub
jmp
imul
push
sbb
rcll
dec
push
icebp
aas
adc
cmpsb
dec
pop
aad
mov
pop
imul
add
xor
daa
arpl
and
or
rclb
jl
jle
mov
sbb
rcr
cmp
mov
addr16
jge
dec
stc
adc
adc
out
push
stos
sbb
pusha
or
adc
pop
into
jg
and
xor
sub
data16
loop
sub
xchg
cmp
cltd
lret
pop
jns
or
and
or
push
cmp
rorb
dec
sbb
arpl
inc
clc
sbb
in
sub
dec
aaa
in
and
lea
xlat
add
push
mov
mov
aaa
or
sbb
cmc
sti
push
pop
jo
hlt
mov
sbb
movsl
xor
mov
les
inc
add
dec
je
fsub
test
mov
and
cli
add
pop
pusha
sub
stc
cmp
ret
pop
mov
shll
clc
ja
scas
push
mov
push
jmp
pop
call
jno
sub
cwtl
movsb
test
insl
aaa
cmc
ret
std
sti
iret
sub
addr16
cmp
xor
or
pop
dec
or
push
sarl
cwtl
mov
das
mov
or
jae
inc
inc
sbb
ror
out
jecxz
jae
enter
jp
inc
add
repz
outsl
repz
push
adc
enter
andb
inc
loope
and
mov
or
imul
and
cmp
int3
pusha
sbb
push
int3
gs
jno
jmp
xor
sbb
loop
push
fcmovnu
mov
orl
mov
add
mov
sub
sub
cli
push
in
sahf
je
xchg
mov
lahf
cmp
and
popf
mov
mov
jb
sbb
inc
cmp
add
aad
orl
nop
push
pop
sub
popa
jmp
mov
xor
mov
mov
xchg
pop
cmpsb
dec
or
sub
insl
sub
push
mov
and
fisttps
inc
or
cli
loop
lds
xor
mov
ljmp
mov
aaa
sbb
push
call
adc
ficompl
jnp
pop
adc
sbb
pushf
xor
lds
dec
or
in
mov
es
mov
repnz
rclb
std
outsl
xchg
sti
dec
sbb
aas
insl
test
lods
pop
das
cmp
push
shr
pop
dec
lods
mov
in
cmp
popa
fstpt
xchg
xor
sbb
cltd
mov
sub
mov
fdivrl
repnz
mov
lds
xchg
ret
out
mov
add
stc
xchg
lds
dec
sub
les
cmp
sarb
out
lods
stc
les
addr16
insb
xorb
nop
or
adc
and
mov
jo
mov
repz
adc
int3
dec
jg
in
lea
pop
sbb
mov
jle
push
inc
lret
pop
clc
fisttps
out
sub
mov
sti
jge
adc
jae
pop
xor
test
xchg
pusha
scas
in
repz
mov
add
addb
push
or
hlt
push
js
add
out
inc
cwtl
imul
mov
aas
mov
push
andb
jecxz
fildll
pop
andl
xchg
fldln2
xor
test
pop
js
rclb
mov
gs
xlat
or
ud2
cmc
xchg
jne
mov
movsb
jg
ds
dec
mov
lret
out
sbb
inc
mov
push
push
mov
dec
mov
add
fiaddl
test
ja
out
ss
add
stc
pushf
sbb
mov
xchg
and
dec
jecxz
test
inc
sbb
mov
pop
push
push
es
push
loope
adc
es
mov
xlat
adc
pop
dec
aas
in
mov
dec
daa
out
es
xor
xchg
cmc
push
mulb
repz
sub
inc
adc
xor
push
and
lock
stos
out
sar
lret
adc
add
mov
inc
int
sbb
in
not
pop
arpl
lods
cmp
sub
in
divl
daa
out
xchg
xchg
jmp
lret
sbb
push
add
cmp
and
cmpsb
pop
jecxz
in
pop
xchg
not
test
sbb
inc
mov
gs
mov
in
mov
pop
pushf
mov
popa
sbb
sar
inc
in
fisttps
xchg
cmp
sti
aas
mov
dec
inc
andb
test
push
arpl
ds
mov
rolb
shrl
mov
repnz
sbb
jbe
daa
dec
ja
mov
adc
sbb
sub
stos
pop
enter
pop
cmp
pop
push
addr16
sub
mov
ljmp
popf
pop
insb
pushf
iret
insl
notb
mov
shl
dec
call
negb
sti
dec
mov
imulb
add
mov
inc
jnp
daa
and
mov
inc
add
call
cmp
add
jno
out
jle
mov
out
ret
mov
filds
dec
rolw
sub
in
movsl
mov
in
pushl
int3
mov
cltd
std
stc
dec
xchg
jg
or
lods
cmp
movsb
pop
insb
pusha
adc
rcrb
xlat
jg
push
push
lods
outsl
jae
addr16
cmc
inc
iret
repnz
inc
and
pop
mov
add
pop
roll
test
test
fld
cwtl
jmp
push
out
mov
xorb
mov
mov
lods
push
or
pop
add
stos
sub
jbe
jb
push
lahf
adc
push
push
and
xor
jo
dec
aaa
lret
repz
jp
mov
sbb
push
cmp
mov
push
and
insl
sahf
pop
and
je
arpl
mov
pop
jp
in
rolb
jecxz
rcrb
xchg
jb
ret
pop
dec
data16
add
push
out
cmp
mov
push
incl
ret
inc
enter
jno
out
cs
mov
pop
seto
and
lret
add
in
movb
pop
mov
shll
inc
jg
outsl
sbb
fwait
fwait
sub
or
pop
add
mov
push
and
inc
lret
cmp
pop
mov
rcr
jbe
cli
rorb
lods
cmc
mov
sbb
ficoms
ja
mov
mov
hlt
adc
cwtl
out
lods
pop
gs
imul
fs
sbb
lods
adc
fstp
pop
sub
ret
inc
jae
enter
xlat
dec
jns
mov
cmp
jle
sub
pop
jp
sbb
mov
stc
imul
and
popf
jl
leave
jmp
dec
sbb
sub
insl
iret
mov
imul
arpl
push
dec
xchg
mov
movsl
lret
in
push
mov
adc
popa
insb
lods
jae
pop
xlat
mov
int3
jno
fwait
int
and
push
daa
test
pushf
jae
enter
push
sub
adc
sbb
push
mov
push
int3
mov
dec
jp
sub
xor
mov
je
lds
int
push
aaa
cmp
cld
mov
dec
into
push
fwait
xlat
rolb
push
outsl
mov
lds
shl
mov
cs
sbb
cmpsl
jle
mov
xlat
cmp
cmpsb
ds
dec
fidivl
out
scas
aas
imul
and
movsl
movl
sbb
and
fistl
push
mov
pop
xor
icebp
mov
sub
sbb
sbb
sub
mov
ss
inc
repnz
push
mov
push
movsl
sbb
xchg
fdivrl
xor
rcr
std
into
imulb
addr16
push
xor
das
imul
cmc
push
ret
inc
mov
popf
lahf
add
jne
pop
scas
xchg
cli
xor
aaa
jbe
mov
je
fs
sbb
pop
sub
clc
les
jg
ja
push
dec
rcll
lret
jg
sub
lods
adc
sub
sub
xchg
pop
test
mov
test
xchg
add
je
xchg
out
mull
cld
insb
mov
and
add
lahf
push
sub
in
or
testb
daa
daa
lods
into
xor
and
iret
mov
sbb
pop
and
xchg
mov
push
xchg
aad
jp
cmp
out
mov
dec
cld
xchg
ljmp
and
test
dec
loop
shrb
ds
mov
pop
dec
push
scas
lcall
pop
dec
add
loop
sarb
test
rcll
xor
imul
adc
pusha
popf
pop
shl
mov
outsb
mov
addb
fwait
pop
pusha
mov
lock
aaa
push
loop
xor
mov
xor
out
push
inc
mov
mov
add
int
aad
jne
movsb
in
jo
cld
fwait
pop
mov
fdiv
aam
les
popa
mov
adc
sub
push
imul
cmc
fidivl
push
jae
scas
test
jne
pushf
rol
xchg
cmp
mov
mov
mov
daa
xadd
cmp
loopne
jmp
add
pop
sbb
jecxz
push
call
or
mov
in
xor
scas
cmp
out
add
or
xchg
jl
mov
test
sub
jecxz
int
jnp
hlt
add
xor
repnz
and
fidivrl
cltd
testl
xchg
lret
imul
xor
hlt
sbb
xchg
adc
sbb
jecxz
out
mov
push
inc
dec
je
call
jmp
dec
ret
lret
pop
and
fwait
negl
xor
jbe
mov
push
decb
jno
mov
xor
test
int3
xchg
cmpsl
push
shl
mov
ljmp
ss
xchg
or
ficomps
sub
push
or
xor
cmp
sahf
arpl
jo
xor
and
adc
push
push
fstpt
addb
enter
divb
ret
imul
out
sub
shrl
into
pop
push
push
call
dec
ja
xchg
lcall
insl
or
push
mov
cmp
push
pop
rolb
adcl
das
adc
in
sub
inc
lds
xchg
fs
and
scas
andb
iret
int
inc
loope
lret
jb
mov
das
xchg
enter
inc
cmp
dec
adc
mov
in
imull
aad
push
stos
test
or
sbb
mov
iret
add
mov
rorb
je
daa
notb
orl
cmp
ja
jae
mov
inc
sub
xchg
lcall
jne
aas
cltd
push
fisubl
jl
andb
dec
imul
and
fcomip
nop
xchg
pushf
mov
or
int3
xor
jp
call
mov
cli
cli
jmp
and
pop
mov
cmp
test
into
sbb
cmp
out
mov
and
popf
insb
arpl
xchg
push
dec
mov
nop
mov
mov
dec
sbb
cwtl
dec
push
add
jl
add
or
add
mov
add
das
dec
sti
dec
jmp
outsl
push
push
and
dec
iret
add
leave
test
aaa
sub
fbld
or
popa
nop
mov
mov
shll
pop
inc
cwtl
loopne
popa
xchg
fwait
out
jmp
push
ds
nop
hlt
popf
dec
sbb
adc
adc
lahf
stos
je
or
adc
sbb
insb
das
dec
mov
push
mov
mov
lea
call
mov
popf
mov
jge
sbb
cs
loopne
fldt
mov
cs
cmp
faddp
adcl
jae
rolb
cmp
rolb
imul
xchg
jge
lods
fistpll
ret
sub
jg
and
negl
xchg
jg
std
pop
pop
mov
scas
nop
nop
int3
pop
roll
adc
shr
mov
les
jbe
lods
in
sbb
or
movsl
imul
mov
stc
xchg
inc
shrb
pop
adc
push
pop
push
sub
jmp
in
jnp
inc
xlat
arpl
adc
mov
jne
pop
stos
jl
dec
pop
call
rol
enter
mov
aam
add
repz
call
and
testl
mov
dec
adc
mov
inc
xchg
sub
jge
cwtl
push
aam
test
sarb
pushf
insb
fidivs
popa
fildll
out
in
lea
test
and
pop
cld
push
imul
mov
xchg
movsb
outsl
ret
outsb
pop
fisttpll
or
andl
dec
leave
pop
push
xchg
push
ret
pop
adc
and
xchg
sti
adc
ljmp
mov
xor
or
hlt
and
fidivl
xor
and
test
cmc
rcrb
mov
shll
mov
je
add
lods
or
lock
jbe
ret
pop
imul
out
inc
xor
and
popa
push
and
jle
lds
pusha
jbe
sub
jecxz
in
mov
ds
jbe
sbb
mov
loope
pop
or
mov
ret
cmp
jle
arpl
xor
lret
jbe
movsb
in
jo
in
lcall
mov
lea
push
cmp
fstpl
sbb
hlt
fldt
filds
inc
rorl
sub
jmp
xchg
lret
ret
loope
add
push
cld
xchg
pop
fcompl
out
sbb
mov
cwtl
outsb
mov
minps
subb
lahf
rcrb
ret
push
ret
lods
xchg
hlt
push
sti
int
insb
std
and
xchg
aam
jmp
insl
and
fisubrs
xchg
or
pop
cs
repnz
mov
mov
iret
sbb
nop
out
inc
or
loope
std
push
loop
xchg
add
data16
jno
inc
out
jbe
shl
stos
lds
imul
ret
pop
inc
pusha
iret
dec
mov
in
dec
xor
add
push
stos
insl
fs
cmp
lahf
cmp
es
and
sub
lods
insb
bound
sbb
dec
cmp
pop
sarl
in
in
or
hlt
flds
ljmp
adc
push
mov
dec
shll
loop
push
add
outsb
pushf
bound
add
push
push
xor
movsl
fsubr
stos
push
mov
call
pop
inc
ss
aam
mov
adc
outsl
lahf
clc
sbb
std
add
fwait
les
push
sub
mov
outsl
in
mov
fnsave
imul
lea
stc
clc
push
out
ja
faddl
sbb
and
mov
fbld
and
xchg
stos
fstl
jge
gs
imul
sbbl
adc
add
inc
sbb
cmp
xchg
btc
push
ds
je
mov
mov
outsb
ja
ljmp
add
cmp
sub
sub
push
add
insl
xor
mul
popl
aad
push
stc
jb
sub
sub
mov
xor
std
imul
jo
xor
or
mov
jecxz
mov
ret
dec
insl
or
jno
sar
push
out
and
push
mov
push
dec
mov
sarl
lea
fists
les
sbb
push
dec
push
imul
lds
add
cwtl
jmp
fldcw
lds
pop
mov
out
jp
xchg
jp
push
push
jne
fisubrs
lods
xchg
flds
repz
pusha
shrl
fdivl
push
jae
shr
outsb
adc
cltd
mov
dec
and
es
adc
push
inc
or
xchg
jp
adc
daa
out
leave
insl
inc
outsl
cmp
outsl
push
mov
fistpl
fists
das
xchg
pop
mov
pop
pop
inc
dec
mov
arpl
cld
lret
mov
or
cltd
jg
in
pop
and
rcll
push
sbb
repz
xchg
cli
inc
jae
cmp
sbb
daa
aam
push
push
jl
scas
je
cmpsl
gs
cltd
cmp
test
dec
stc
stos
adcl
fwait
jne
or
mov
add
fistps
fwait
sub
ret
pop
xchg
or
mov
dec
adc
ss
cltd
add
jp
loope
ret
push
pusha
cld
in
or
xchg
inc
out
lods
popa
mov
std
push
mov
out
jb
and
mov
cli
jl
int3
dec
mov
add
mov
popf
in
dec
inc
mov
jne
dec
leave
popf
adc
test
pushf
mov
mov
xor
pop
push
lods
push
popa
jnp
push
push
mov
fildl
mov
popa
push
call
call
adc
sete
clc
out
rolb
into
push
mov
fcos
pop
pop
sub
inc
push
cmc
data16
pop
les
sub
loope
add
mov
loop
daa
cltd
xor
cmp
mov
stc
aad
push
pop
jmp
and
cmp
out
fsubl
stos
push
enter
push
ss
out
inc
insl
lahf
inc
icebp
push
sahf
jbe
mov
in
push
les
pop
sbb
and
inc
and
sub
out
mov
mov
jae
push
cld
ficompl
inc
xchg
ss
xchg
out
jp
imul
inc
and
mov
and
loope
insl
inc
iret
aas
sub
inc
mov
adc
loop
test
push
fcmove
or
jo
es
in
inc
stos
push
inc
movsb
mov
and
cmp
jae,pt
add
mov
sub
mov
cs
xlat
ds
lds
inc
divl
fs
pushf
fcoml
sahf
sbb
sbb
jae
imul
decl
out
lds
arpl
or
stos
pop
movsb
jne
cltd
int
xchg
mov
pop
in
jge
xchg
xchg
hlt
leave
fisttpl
cmc
movsb
testl
out
and
sbb
cmp
jle
push
pop
push
loope
sbb
das
adc
jae
lret
test
addb
mov
jmp
jne
or
stos
dec
push
lret
imul
repz
xor
dec
mov
imulb
out
rcll
cmp
inc
jb
pop
leave
ss
sub
inc
outsb
cmp
sbb
mov
fwait
ljmp
push
xor
test
and
jnp
sbb
mov
pop
mov
mov
addr16
xchg
icebp
push
fcoml
push
add
mov
and
cli
inc
fs
dec
stc
in
pop
inc
stos
into
arpl
or
ja
sbb
push
fidivs
xor
es
stos
jns
or
inc
call
cmp
pop
xor
adc
sub
stos
sub
mov
push
cltd
xor
fstl
xchg
cli
into
jne
decl
rcrb
js
add
mov
mov
and
insb
nop
ja
jl
pop
mov
mov
gs
inc
jo
movsl
xchg
je
outsl
cmp
int
sbb
andl
std
jns
xor
loopne
mov
lds
sub
loopne
mov
pop
xor
push
xchg
out
aad
les
aas
cld
stc
out
cmp
mov
lock
or
dec
fimull
pop
or
aad
mov
testl
mov
sub
es
push
sbb
cmpsb
xor
jl
push
jmp
mov
pop
pop
movsl
xor
arpl
mov
inc
and
insb
xor
lahf
sbb
rcl
lods
jmp
hlt
addr16
inc
and
int
and
jecxz
fstpt
mov
outsb
and
cmpl
dec
iret
int3
ja
sub
mov
push
inc
mov
movsb
dec
leave
ss
jb
out
jp
push
mov
mov
fwait
mov
mov
cmp
test
aam
shll
int3
or
pop
jg
lea
dec
adc
adc
leave
pop
mov
xchg
enter
push
push
sbb
mov
stos
and
test
dec
and
sti
outsb
cmc
dec
add
insl
cwtl
jb
sbb
adc
jae
in
and
push
push
popf
dec
leave
enter
dec
les
mov
or
or
pop
cmp
test
xchg
dec
dec
pop
push
test
and
xor
inc
push
loope
enter
dec
fcomps
jns
push
lock
loopne
in
add
hlt
out
std
fwait
ret
mov
and
xor
lds
cmp
rol
xchg
imul
out
movzwl
sub
cmp
push
xlat
mov
popa
sbb
cmp
push
fidivrs
hlt
adc
xchg
mov
test
lock
insl
gs
push
mov
cli
xlat
mov
cmp
outsl
cmpb
push
jp
cmp
jecxz
inc
jmp
lock
cli
push
jp
cmp
or
lret
push
push
loopne
adc
xor
inc
mov
clc
scas
mov
inc
loopne
lods
adc
imul
xchg
cmp
dec
xchg
sub
sahf
inc
add
iret
sub
xchg
add
or
or
aam
mov
add
or
push
cltd
push
dec
mov
sbbl
out
sbb
pushf
pop
dec
int3
inc
mov
push
lods
hlt
stos
dec
mov
clc
add
and
xor
push
xlat
sbb
xor
arpl
stos
xchg
sarl
int
xlat
xor
or
xor
sti
fucompp
cs
aas
add
inc
jb
int3
sahf
push
adc
sub
test
adc
imul
and
sbb
jnp
mov
dec
sub
mov
mov
mov
lea
push
aad
cmp
push
pop
ljmp
cmpsl
scas
insl
lds
addr16
push
adc
je
cld
lods
xchg
xchg
push
sbb
xor
push
pop
popf
mov
push
dec
mov
loop
mov
xor
xchg
je
shlb
pop
mov
test
clc
jmp
je
jno
loope
ret
jecxz
inc
setl
inc
arpl
push
sub
add
jo
dec
std
push
mov
hlt
jne
outsb
pop
mov
jnp
or
sahf
xchg
repz
mov
je
fwait
sti
jne
mov
inc
pop
in
popw
lods
adc
leave
sub
mov
fldl
and
int3
pop
or
sbb
xchg
sbb
bound
xchg
dec
sub
mov
aad
mov
add
adc
mov
pushf
xor
adc
lret
cs
and
dec
pop
and
add
xchg
sti
or
imul
les
mov
push
mov
repnz
mov
scas
push
clc
iret
cs
mov
iret
mov
rorl
jae
jb
and
mov
imul
sbb
je
iret
cmc
scas
xchg
sbb
xchg
repz
inc
inc
mov
or
xchg
xchg
mov
aam
scas
repz
popf
testb
bound
loopne
adc
xor
and
cmp
scas
adc
push
cmp
xchg
mov
mov
testl
in
fistps
xlat
push
and
mov
leave
cmc
xchg
fadd
cmc
xchg
pop
icebp
push
xchg
ljmp
push
lret
cmp
pop
xchg
xlat
mov
daa
mov
dec
push
mov
into
inc
arpl
ret
jmp
jne
sub
mov
hlt
or
push
mov
sahf
icebp
mov
mov
xor
add
mov
sbb
pop
or
je
lods
ffree
aad
pop
test
pop
adc
cltd
pop
enter
ficomps
repz
dec
inc
out
mov
outsl
xchg
dec
nop
xor
cmp
rcrl
inc
shr
jle
or
out
test
or
sub
sbb
popa
cmpsl
cmc
mov
add
add
je
or
cmp
pop
push
test
addr16
adc
pop
adc
mov
mov
xor
pop
dec
test
jg
push
mov
fsts
pop
das
or
or
lods
hlt
cmp
or
xorb
push
fisubl
mulb
jmp
lea
hlt
adc
testb
dec
dec
cmc
add
insb
adc
movsl
in
mov
sbb
sahf
or
and
mov
in
popa
add
dec
add
pop
ja
sbb
push
rolb
stos
xchg
shll
std
mov
ja
ret
insl
ficoms
xchg
mov
jl
mov
or
jb
sti
sbb
ljmp
lret
sbb
int3
mov
cmp
lds
insb
enter
aad
outsl
adc
adc
cmp
push
fdivrs
fnstenv
inc
inc
sarb
xor
cmp
test
mov
add
xor
or
cmp
sbb
fildl
xor
xor
mov
out
or
aas
mov
fiaddl
lods
shll
inc
cmp
mov
sti
lea
mov
into
movsb
test
xor
cmp
and
mov
inc
add
and
call
push
mov
shr
movsb
xchg
xor
scas
cmp
cmp
xlat
sub
stos
add
mov
cmp
or
pusha
les
add
xor
push
cli
je
dec
mov
test
xchg
fisubs
mov
pushf
mov
jae
or
imulb
inc
push
ja
imul
fadds
cmp
xchg
stc
call
xchg
rcrl
decl
aad
xchg
adc
jge
rolb
in
stos
aad
push
push
dec
fxch
inc
not
repz
shrb
jecxz
cmpsl
lahf
das
les
inc
loope
push
sub
outsl
dec
push
jg
fucom
xchg
out
inc
pop
mov
dec
aad
into
or
loope
imul
adc
xor
sahf
ret
ss
sahf
clc
sbb
dec
adc
add
mov
lcall
hlt
mov
xchg
movsl
sti
test
xchg
lcall
inc
cmp
popa
pop
dec
inc
xorb
std
mov
bnd
xor
dec
in
mov
or
xlat
call
mov
add
lock
or
loopne,pn
jp
ret
fdivrs
pop
pusha
pop
into
addr16
lods
js
cltd
or
call
cmpl
inc
mov
cmpsl
xchg
fstps
cs
dec
dec
cli
jmp
rorb
into
jp
mulb
daa
sub
fnsave
test
mov
imul
dec
imulb
mov
out
test
cmpsl
inc
add
hlt
pop
push
push
cld
lahf
sbb
outsl
xor
nop
mov
outsl
sub
sub
xlat
mov
xor
into
jo
in
or
xor
hlt
cld
aas
lods
push
push
test
fs
add
cmp
nop
ljmp
loopne
ret
pop
test
fnstcw
insb
ror
push
sbb
xor
push
inc
xor
push
and
add
jnp
mov
movsl
mov
xchg
sub
mov
xchg
pushf
mov
fcmovb
sub
leave
sbb
adc
xchg
pop
dec
add
ret
inc
lods
cmpsl
js
jecxz
push
icebp
mov
ss
sahf
or
xlat
add
int3
mov
jno
notb
outsl
aad
sbb
and
mov
outsl
sbb
add
inc
xchg
pop
add
dec
aaa
sub
scas
mov
out
cmc
je
sbb
ja
or
in
mov
cmp
pop
das
les
out
inc
outsl
les
imul
mov
imul
xchg
sbb
jne
and
test
aad
pop
sbb
inc
push
bound
xor
jl
xchg
lcall
popa
mov
xor
sti
mov
xchg
aaa
repnz
les
push
frstpm(287
sbb
sbb
inc
dec
pop
lret
imul
dec
mov
arpl
incl
xor
cmpsb
pop
pusha
xchg
push
jmp
sahf
sarl
jmp
jne
into
sub
add
leave
fiadds
inc
or
cwtl
roll
fisubs
mov
jne
sub
out
xchg
aad
inc
jne
dec
pop
pop
cmp
xchg
iret
test
fwait
lcall
add
out
mov
cmpl
dec
sub
lock
jecxz
insb
add
mov
and
jp
xchg
aaa
jg
shll
xor
mov
dec
or
jp
cmp
jge
outsb
jl
and
cmpsb
xor
enter
sbbl
call
push
daa
xor
insb
or
mov
insl
mov
push
test
xor
pusha
mov
xor
pop
adc
dec
es
xor
inc
fistpll
aaa
aas
movsb
fcomp
inc
xchg
outsb
adc
es
cmp
daa
lret
mov
jle
sbb
ljmp
mov
xchg
icebp
int3
jne
fildll
mov
pop
sti
in
test
testb
andb
nop
sbb
popf
or
mov
idivb
push
push
out
sub
mov
in
stc
mov
mov
pop
lods
stc
fs
inc
mov
aad
imul
fstpl
lods
mov
and
mov
paddsw
out
xchg
mov
outsb
xchg
call
hlt
cmp
xor
pop
or
xor
xlat
in
mov
mov
in
aam
dec
jne
mov
in
inc
mov
sub
add
lcall
or
mov
sarl
lock
ret
dec
out
mov
pop
arpl
lret
mov
cwtl
cmpsl
pop
adc
cmc
xor
fnstcw
sbb
jnp
mov
faddl
repnz
dec
or
push
fwait
xchg
out
arpl
adc
cmp
ret
imul
push
xor
jmp
ja
cli
or
cmp
rclb
bound
xchg
or
sub
add
ss
daa
add
inc
outsb
sahf
mov
stc
jmp
sbb
jns
dec
cmc
je
inc
push
in
cs
sub
jae
mov
push
push
inc
nop
and
jnp
or
cmpsl
pop
scas
ret
inc
mov
std
mov
scas
xor
mov
mov
pop
shrb
lea
movsb
pop
pop
xchg
testb
jno
xorb
leave
popa
and
clc
mov
push
jp
sub
mov
andl
aaa
xor
mov
pop
scas
push
fnstenv
sbb
pop
subb
mov
add
mov
jmp
out
cmp
fsubrs
push
mov
imul
lahf
xchg
aas
sbb
aaa
sub
and
outsb
mov
xchg
int
fistpl
jmp
out
pop
pop
jecxz
jp
inc
and
mov
dec
leave
cmp
xchg
inc
loope
loopne
pushf
lret
adc
cmc
push
outsb
rcrl
add
jp
pop
sub
inc
cmp
fs
push
shl
mov
adc
xchg
dec
xchg
cmp
clc
add
stos
adc
push
pop
xchg
data16
mov
jmp
push
inc
cmp
xor
mov
xchg
andb
enter
jle
dec
mov
lret
dec
ret
in
dec
and
mov
js
test
in
setne
lods
jbe
aaa
and
pop
outsb
pop
dec
mov
orb
xor
mov
shrb
lods
dec
cmp
loop
xor
sbb
cwtl
or
or
and
loopne
imul
icebp
xchg
xchg
lcall
shr
cmp
outsl
sbb
and
jmp
and
insl
inc
ds
inc
mov
fstpt
pop
paddusb
into
cmp
or
dec
fwait
pop
add
insl
add
jae
mov
push
inc
sub
xchg
xor
adc
and
ficoms
or
jno
shlb
sbb
cmc
jbe
xchg
pop
lea
addb
aam
fdivs
stos
lods
dec
shll
dec
add
sub
push
dec
sbbl
pop
lds
in
dec
aam
loopne
mov
mov
cltd
mov
lahf
pop
in
aad
push
jmp
lcall
dec
jns
fs
dec
insb
pop
std
fsubrl
cmp
jmp
sbb
pop
punpcklwd
leave
pop
cmp
daa
push
ja
jbe
leave
in
mov
orb
or
add
adc
rorb
cmp
mov
xlat
lcall
xchg
adc
jl
rorl
or
scas
popf
in
aas
mov
into
aam
xor
add
shlb
or
mov
jecxz
cmpsl
lahf
enter
outsb
jmp
xor
jp
lret
out
and
clc
adc
xchg
jecxz
xchg
gs
mov
aaa
sysenter
aad
repz
fsqrt
mov
push
inc
add
into
ljmp
cmp
adc
xchg
inc
mov
ficoms
add
in
xchg
xchg
mov
pushf
dec
cmp
fwait
mov
push
cmp
jl
cs
dec
nop
mov
inc
fs
push
ret
push
fsubl
scas
fisttpll
inc
xchg
jmp
ds
cmp
pusha
xchg
enter
in
dec
shl
bound
int
xchg
insl
loopne
sub
lock
repnz
in
scas
mov
insl
lock
lret
aas
mov
or
gs
dec
mov
push
jno
gs
pusha
sbb
or
shlb
gs
out
mov
pop
inc
fadds
xchg
push
sahf
push
sbb
inc
push
xlat
jno
ljmp
push
pop
xchg
mov
jb
push
outsb
lea
arpl
push
loopne
jecxz
addl
dec
cld
cmp
and
sub
or
repz
cmpsl
push
mov
push
decb
inc
ror
adc
mov
faddl
cmpsl
mov
xchg
pop
pop
add
daa
outsl
pop
inc
cmpsb
cmc
or
out
jmp
std
sbb
cs
scas
iret
int3
adc
aas
mov
mov
mov
lods
movsb
lods
dec
push
xchg
lods
pop
test
insb
insb
pusha
xor
ss
shl
ss
mov
sbb
add
inc
shlb
mov
test
sub
dec
pslld
cmc
dec
mov
fs
pop
pushf
mov
das
or
icebp
ret
daa
jb
in
stc
sub
adc
aam
adc
int3
mov
jmp
cmp
test
ret
mov
dec
daa
movsb
pop
mov
sbb
fsub
sub
cmp
mov
insb
add
push
movsl
add
fnstcw
lahf
lahf
jno
in
adc
imul
cmp
test
jnp
lahf
sbb
divb
movsb
lea
sub
jl
cmc
daa
lods
shlb
stos
imul
xor
sub
add
sbb
jnp
hlt
dec
loopne
fnstenv
outsl
inc
dec
adc
hlt
or
mov
dec
data16
fstps
sub
call
mov
xchg
mov
pop
push
pop
mov
pop
and
fidivs
jg
mov
push
nop
shll
add
push
inc
jl
xchg
adc
push
test
push
popa
out
xchg
xor
pusha
add
stos
push
cli
xchg
cltd
inc
jle
bound
jns
lods
jae
ss
stc
sbb
mov
js
add
sub
outsl
or
jmp
xchg
aaa
dec
loope
pusha
inc
adc
dec
xorb
cld
subb
adc
in
inc
fmull
inc
ljmp
sbb
cs
ds
xor
pushl
cmp
xor
imul
pushf
mov
fstps
pop
or
sub
push
jmp
jne
int3
sub
pop
jb
adc
sbb
mov
xlat
lret
sub
dec
lds
int3
mov
mov
lock
xchg
movups
add
insb
fistl
xor
dec
xchg
jb
mov
sub
sbb
movsb
lock
std
add
in
cmp
sti
sbb
nop
out
pop
mov
daa
xchg
pop
out
inc
cmp
and
jne
sbb
fsubr
jns
push
dec
ljmp
xchg
loope
sbb
les
or
gs
add
dec
push
in
push
lcall
inc
xor
cmp
mov
outsl
push
xchg
sub
mov
or
lods
mov
mov
ljmp
push
orb
adc
mov
cli
lods
insb
gs
out
test
lods
fisubl
stos
movsl
push
fstl
inc
out
dec
xor
mov
jbe
sahf
jae
xchg
mov
cmp
incl
loopne
scas
and
shll
aam
repz
sbb
push
sbb
nop
mov
movsl
pop
push
sub
or
push
in
xor
jl
repnz
leave
pop
aam
cmp
dec
or
lret
mov
dec
subl
mov
loopne
sub
dec
cmp
js
bound
add
jmp
xor
imul
push
dec
xor
pop
shrl
fldt
pop
sbb
push
mov
sbb
xor
loopne
and
jns
pushf
pusha
in
or
out
cmp
mov
cwtl
mov
enter
fimull
arpl
and
pop
xor
mov
clc
lret
xor
adc
nop
repnz
jmp
jo
or
jge
test
into
mov
int
inc
lds
jp
xchg
sbb
dec
sub
or
mov
rcrl
xorl
enter
inc
leave
or
or
jecxz
pop
add
adc
adc
das
fstpt
mov
lret
ficomps
add
loopne
ffree
mov
pushf
stc
inc
outsb
push
mov
add
subl
add
fwait
adc
in
mov
or
mov
rcrl
std
jp
xchg
lods
repz
jp
sbb
mov
into
lahf
in
leave
decb
jo
mov
stos
adc
test
xor
dec
arpl
sub
fiadds
divb
rorl
movsl
lods
stos
mov
outsb
inc
sahf
mov
inc
mov
fnstenv
in
xor
sub
out
mov
pop
sbb
stc
mov
cmp
loop
cmpsl
mov
popf
push
adc
xor
xor
out
gs
adc
mov
xchg
mov
add
sub
test
jg
jnp
pop
adc
into
inc
movsl
inc
jmp
mov
add
fsubrs
push
jns
rclb
xchg
lret
out
jnp
xor
mov
sarb
bound
push
lock
test
rcrl
sub
dec
das
outsl
fists
sub
sub
push
inc
jb
lret
scas
in
push
addr16
and
loope
pop
mov
and
push
pusha
lock
bound
insb
scas
ret
mov
sub
test
fs
dec
push
sub
adc
xor
out
mov
loope
jmp
dec
addb
std
jecxz
jge
ljmp
lret
sarl
jg
jge
push
mov
fs
int3
xchg
lcall
into
mov
mov
and
out
jns
inc
movsl
sbb
cmp
jg
jl
or
mov
in
or
aaa
or
jne
test
pop
cmp
inc
jno
xchg
in
lahf
test
xor
xor
push
sbb
addr16
jmp
mov
test
std
pop
aaa
scas
inc
xlat
stos
leave
push
or
xchg
pop
test
xorb
out
jecxz
add
rol
and
fists
and
dec
mov
mov
jnp
push
cmpsl
xchg
mov
dec
jle
mov
roll
loop
adc
push
pop
xor
jns
fstpl
fisubrl
daa
inc
inc
fisttpll
leave
sbb
dec
pop
pop
ljmp
xchg
add
ljmp
pop
pop
xlat
aas
mov
mov
push
and
inc
out
or
sbb
dec
fnsave
pop
rorb
sub
xchg
daa
cmp
inc
out
add
out
popa
mov
cs
test
pop
cmp
sub
push
mov
adc
push
cltd
jmp
adc
leave
repz
imul
push
inc
mul
and
sbb
mov
out
lahf
bound
push
pop
enter
repz
mov
cmp
dec
xor
ljmp
mov
fistl
out
mov
jg
enter
jmp
test
sbb
push
sarb
hlt
mov
pop
std
xor
jmp
cmp
out
push
mov
and
andl
sub
lahf
sub
push
sbb
push
fs
mov
add
pop
xor
out
xchg
sub
popa
cmc
aam
mov
jp
int
sbb
xchg
inc
or
movsl
inc
mov
or
jbe
mov
shll
inc
adc
cs
sbb
xchg
pop
mov
and
stos
cltd
jne
mov
pusha
popa
imul
dec
arpl
xor
lds
icebp
aas
pop
rcl
xchg
das
mov
cltd
jbe
pop
rcrl
pushf
cmp
sti
shlb
mov
idivl
rclb
push
das
adc
fs
fidivl
sub
dec
out
mov
scas
sub
cs
sub
gs
dec
mov
xlat
jb
clc
sbb
push
hlt
push
jo
xor
shlb
in
dec
add
sbb
movsb
mov
scas
jecxz
jb
jmp
pushl
movsb
std
insl
xchg
psrlw
cltd
out
jno,pn
mov
mov
mov
add
mov
or
push
rorl
fsubrl
ds
out
addb
jo
jmp
nop
jb
push
sti
xchg
outsl
addr16
inc
jns
cltd
push
lods
sbb
cltd
add
insb
push
inc
movsl
dec
loop
xor
imul
into
std
out
jp
pop
pop
or
mov
scas
in
pusha
xchg
fisubrl
pop
or
mov
cmp
rclb
scas
and
add
iret
lahf
cmp
or
mov
push
cmp
jns
mov
cpuid
daa
in
ret
mov
sbb
mov
int3
pop
or
andl
mov
popf
popa
jl
fsubrp
push
fstl
ret
ljmp
js
out
data16
loop
lret
loopne,pt
add
cs
mov
mov
mov
inc
repnz
cmp
fildl
testl
ret
fcomi
pop
leave
jnp
xchg
push
je
mov
mov
add
and
lahf
sub
cmp
cmp
aas
xchg
repz
aad
push
aaa
adc
mov
daa
ds
sbb
pop
push
std
sbb
adc
jmp
dec
in
fs
cmc
daa
out
mov
aaa
lcall
iret
push
shll
test
jno
or
mov
push
mov
scas
movsl
sub
add
mov
jge
in
imul
data16
outsl
jmp
pop
xchg
dec
or
lret
int3
lock
daa
gs
lods
mov
das
dec
mov
jecxz
push
adc
in
pop
adc
add
mov
jne
fstp
movsl
out
jecxz
mov
jbe
push
inc
cld
pop
fwait
cmp
lret
xor
insl
hlt
or
add
add
mov
or
pusha
xor
sub
out
inc
xchg
mov
arpl
ds
clc
inc
mov
mov
lcall
loope
push
push
lahf
fsubrs
mov
add
decl
ljmp
push
fidivs
fstpt
data16
dec
das
sbb
loope
or
imul
in
dec
dec
aam
sarb
jmp
clc
mov
int3
fistpll
std
loopne
out
lea
ficoml
jb
mov
fdivrs
shrb
sbb
add
sub
jmp
imul
loope
push
les
icebp
xor
push
sbb
movsl
mov
popa
dec
mov
mov
cmp
mov
or
shrl
mov
jmp
fs
movsl
icebp
push
or
mov
jne
push
cmp
imul
pop
das
and
enter
out
das
test
sti
shlb
and
and
shlb
insb
ja
or
cmp
ss
jmp
cmc
adc
test
lcall
lods
sub
jne
push
pop
sub
popa
int
shl
push
pop
push
mov
pop
sbb
cmp
imul
xchg
adc
inc
inc
cwtl
mov
sub
mov
or
jne
out
pop
popf
sbb
xchg
add
rcrl
fisttpl
push
mov
int3
sub
movsl
or
insl
jae
cltd
and
mov
sbb
pop
jbe
das
lods
andb
repnz
jmp
push
cmp
add
mov
movsb
push
mov
cmpsl
loop,pt
stos
cmpb
cmp
das
pop
xor
jae
sub
and
mov
movsl
movsb
shlb
sbb
lock
lcall
or
or
xor
movsb
xor
es
and
mov
data16
test
lahf
subl
mov
shlb
mov
jne
xchg
mov
adc
dec
ja
je
add
cmp
lds
jle
mov
mov
insl
mov
cmpsl
test
inc
mov
mov
out
out
xchg
in
addr16
es
fs
je
mov
dec
adc
ret
stc
xlat
js
xor
cltd
add
or
pop
or
repnz
mov
mov
sbb
mov
or
jbe
pop
inc
popa
das
mov
add
inc
outsb
shrb
xchg
fs
divb
orl
lods
insl
testl
daa
cmpsb
sarl
cwtl
cltd
ror
cmpl
mov
add
push
xor
inc
mov
xor
gs
repnz
jno
pop
pop
lcall
imul
clc
mov
je
test
pop
cmp
out
xchg
inc
jnp
je
inc
sbb
pusha
push
mov
clc
xchg
das
jl
inc
pop
push
icebp
sbb
or
mov
xorb
push
fildll
in
sub
rcrl
lcall
pop
std
jbe
aam
lcall
ss
enter
mov
mov
outsl
or
fistps
idivl
push
xor
out
fwait
enter
call
cmp
in
mov
mov
ret
gs
xlat
lods
cmp
xchg
jge
sub
push
dec
mov
and
pop
and
or
mov
jne
in
mov
lea
jle
xchg
sub
aad
dec
testl
mov
in
cmp
adc
jb
leave
push
mov
adc
sahf
fdivr
and
shll
pop
lods
push
cmpsb
mov
mov
jle
notb
cli
filds
cmpl
aas
sub
js
xor
mov
add
jmp
les
mov
xchg
push
daa
mov
inc
push
inc
iret
fwait
lock
enter
bound
push
pop
mov
imul
cmp
lcall
mov
or
add
repnz
xchg
push
or
mov
ffreep
pop
dec
mov
in
repz
adc
push
insb
std
in
cmp
in
cltd
jbe
dec
jl
sub
aam
pusha
mov
cmp
cmp
jbe
pushf
mov
xchg
imul
pusha
lock
ja,pn
sbb
xor
mov
mov
iret
fsub
pusha
pushf
xor
jp
sub
aas
lock
aad
iret
jecxz
xlat
jmp
sahf
cmp
jmp
adc
xor
pop
shlb
pop
out
push
xchg
push
pop
add
loope
aam
mov
pop
in
push
rorl
sbb
cltd
mov
and
andnps
sbb
cmc
cmc
add
loope,pt
push
lods
and
ret
pop
sub
inc
or
pop
arpl
and
ror
stc
mov
shlb
sub
jno
jns
lret
mov
divb
lcall
scas
popa
loop
cltd
shlb
xor
sub
outsl
std
mov
dec
pop
jg
div
cmpsl
xchg
adcl
jnp
and
mov
outsb
scas
mul
in
popa
popf
popf
pusha
arpl
lret
sbb
paddusw
ljmp
inc
and
add
push
testl
and
aaa
stos
adc
lods
adc
jl
pop
push
dec
imulb
cs
ljmp
lods
lcall
inc
orl
shl
out
mov
add
jl
sbb
xchg
xchg
loope
lock
fildll
popf
mov
xchg
loop
leave
inc
in
ret
repnz
stos
test
sub
dec
mov
rolb
xlat
fldt
pop
pop
nop
push
addr16
lcall
clc
fcomps
outsl
daa
sub
and
ret
inc
inc
cmp
and
insl
mov
cmp
cmc
and
movsl
jle
push
or
rolb
out
cmpl
int3
or
xchg
or
sub
jo
push
fucomi
stos
insl
cltd
mov
cs
movsl
push
add
popa
or
aas
or
jae
mov
mov
lret
ljmp
pusha
fbstp
imul
inc
ja
cmpsl
inc
inc
repnz
and
sar
lods
lds
sub
push
jecxz
add
inc
cmp
or
pop
pop
fwait
pop
jnp
xchg
push
inc
and
pop
inc
jge
or
sub
fldcw
fpatan
xchg
pop
rcrl
or
test
pop
sub
jnp
clc
fwait
stc
adc
pop
out
pop
mov
lods
shlb
jne
jno
adc
cli
sbb
push
filds
pop
push
ret
adc
or
xchg
cmpsl
cmp
cmp
or
sub
sub
rorl
aaa
mov
pushf
scas
std
push
push
xor
jo
pcmpeqb
push
push
outsl
jmp
aaa
inc
inc
sahf
movsb
es
cwtl
cmc
in
inc
call
sahf
daa
repnz
mov
pop
xchg
add
or
clc
mov
js
jmp
jge
push
decb
lods
xchg
jg
jae
or
insb
jl
or
fs
js
stos
jae
add
lret
test
and
int3
lret
not
cltd
cmp
mov
insb
inc
jl
outsb
pusha
inc
pop
hlt
int3
insl
jg
jnp
jmp
ja
pop
ret
push
pop
push
fldenv
jecxz
out
mov
mov
and
push
mov
mov
jmp
pop
jle
and
push
scas
popa
lds
fsubp
dec
inc
jae
in
enter
test
loope
cs
xchg
push
clc
jb
in
sbb
pop
arpl
jae
jns
lret
push
movsb
xchg
imul
inc
pop
adc
xchg
aaa
mov
pop
jno
mov
cmp
scas
xchg
mov
and
push
mov
lahf
mov
loopne
aaa
mov
bound
in
cmc
outsb
mov
movsb
inc
into
lcall
movsl
push
popa
iret
cs
cs
pop
inc
pop
xchg
bound
cmpsb
sahf
dec
insb
call
sbbl
loop
popa
xor
mov
sbb
stc
testb
xchg
sub
pop
nop
xor
inc
jo
mov
sbb
cmp
mov
int3
ds
movsl
xchg
repz
outsl
mov
push
iret
rorl
sarl
rcrb
mov
mov
or
enter
ds
pop
das
sub
dec
jne
mov
inc
sbb
mov
das
mov
push
mov
int
and
lret
xor
xchg
ffreep
into
pop
and
rolb
xchg
cmp
dec
mov
in
sub
icebp
inc
mov
push
dec
xor
mov
or
xor
jecxz
push
jbe
gs
mov
hlt
sub
js
push
mov
sar
inc
cli
insl
es
mov
idivb
das
ljmpw
adc
dec
sub
iret
test
and
je
fistpl
outsb
push
xchg
in
faddl
or
mov
cmp
or
fstps
jne
push
scas
or
stc
pop
or
jl
into
dec
and
adc
inc
push
xchg
stos
in
inc
pop
shll
and
push
fidivrl
dec
add
lds
sub
cwtl
std
lock
cmp
jne
jmp
push
shr
clc
push
adc
and
fwait
adc
jp
push
scas
jno
pusha
fs
orl
in
dec
syscall
or
jno
sbb
cmp
xor
add
pop
push
adc
cmp
sbb
fwait
pushf
inc
mov
cmpsl
cmpsb
rol
mov
imul
pop
out
pop
icebp
jl
cwtl
dec
push
push
int
cmp
fistl
inc
pop
inc
inc
aas
pop
or
mov
das
push
xchg
in
push
sbb
push
push
cmpsb
fdivr
dec
insl
jne
call
lock
out
add
fisubrs
mov
stos
mov
adc
nop
adcl
imul
xchg
je
add
imul
xor
pop
mov
js
xchg
lcall
movsb
lds
rcll
adc
int3
ret
mov
ja
movb
test
repnz
pop
push
inc
pop
shll
or
sub
lcall
outsl
outsl
xor
test
xor
lret
jno
dec
mov
dec
dec
sbb
cmp
shrl
mov
leave
jmp
cltd
in
sti
rcrb
fiaddl
push
cmp
dec
and
jnp
mov
addr16
push
lds
adc
aas
fdivr
gs
nop
pop
iret
mov
aaa
pop
inc
mov
nop
or
or
jne
pop
daa
lret
shlb
cs
aam
xchg
cmp
icebp
rolb
in
aam
push
cs
cmp
xor
mov
add
mov
xchg
test
aas
ds
xchg
cld
jg
nop
scas
popa
jo
jmp
lahf
enter
shlb
jns
ret
adc
and
push
push
xor
sbbl
mov
dec
push
jae
jp
shrb
cltd
inc
push
loopne
fdivrs
mov
and
push
jecxz
pushf
int3
mov
pushf
xchg
aaa
dec
outsl
jo
lcall
dec
int3
cmp
gs
inc
xor
hlt
scas
iret
mov
add
pop
dec
in
push
pop
cmp
movsb
jo
lds
xorb
rorb
in
pop
mov
pop
fsub
cmpsl
cltd
inc
adc
cli
jecxz
mull
ja
and
mov
push
lods
adc
icebp
imul
pop
jo
fisttpl
sub
jecxz
push
lcall
andb
push
jle
decb
jno
pushf
std
test
adc
subb
stc
inc
mov
pop
clc
or
out
popa
mov
aaa
pop
inc
hlt
ror
orb
or
inc
sbb
pop
fs
ret
xchg
ret
int
lret
inc
lods
paddd
push
daa
call
aaa
cltd
mov
and
addb
not
cwtl
int3
inc
or
std
jne
scas
dec
in
fwait
gs
xchg
fidivs
sub
xchg
inc
push
inc
inc
sub
jnp
mov
push
std
jne
lret
arpl
dec
insl
push
rorb
add
jnp
pop
cld
mov
stos
lds
jecxz
mov
fisubs
mov
push
push
aas
mov
rcll
mov
into
inc
ficoml
mov
or
mov
cs
js
idiv
adc
aas
cmc
mov
cmp
addb
mov
inc
lret
xchg
sahf
lods
dec
loopne
push
mov
cmpb
outsb
adc
xor
inc
jle,pn
and
cmc
mov
div
and
scas
mov
lahf
push
inc
cmp
dec
sub
rcrl
mov
popf
add
out
and
js
inc
jo
das
push
push
imul
mov
jb
sbb
mov
imul
dec
mov
add
cmp
jb
psubsw
andb
push
push
xchg
xlat
or
in
add
lods
into
mov
popl
ret
pop
xchg
mov
repnz
repz
push
stc
jmp
sbb
rcr
test
push
addr16
dec
sarb
pop
mov
xor
dec
arpl
leave
fisttpl
loop
sbb
mov
test
sub
push
pop
cltd
pop
aas
jno
hlt
lock
imul
mov
xor
jge
inc
mov
addps
push
addr16
push
adc
push
testb
mov
adc
scas
shrb
and
xchg
mov
pop
ljmp
insl
andl
lods
idivb
sbb
aam
clc
sbb
and
scas
pop
mov
aas
out
push
jo
es
cmp
add
xchg
and
or
movsl
mul
sub
add
stos
adc
addb
mov
test
rolb
cmpsb
pop
inc
inc
and
clc
movsb
sbb
or
xor
pop
das
mov
dec
push
mov
addl
add
sbb
pop
ret
sti
cmp
arpl
ds
lods
and
mov
fstpt
nop
cmp
xchg
divb
outsb
ret
pop
je
jp
mov
cmp
adc
or
sub
cltd
inc
and
iret
push
adc
idivb
jno
cmp
sti
lods
jb
mov
cmpsb
pushf
movsb
ret
sbb
adc
mov
addr16
and
xchg
push
mov
outsl
das
cmp
cmp
lret
mov
fidivl
imul
fs
and
outsl
mov
cmc
or
dec
xchg
mov
dec
test
int3
push
push
xchg
pop
hlt
and
nop
inc
xchg
jne
xor
aaa
les
cltd
jae
lcall
and
arpl
test
pop
mov
aam
ret
test
std
popa
test
jnp
adc
pop
in
fdivrp
cli
cmc
imul
leave
push
push
mov
fdivs
jmp
and
mov
inc
sbb
insl
xor
cwtl
sbb
jae
lcall
pop
mov
rorb
sbbl
pop
add
inc
xchg
mov
jbe
sahf
fdivs
pop
xchg
jo
pop
cmp
push
lods
inc
sahf
pop
rorb
adc
add
lret
shll
mov
cs
pop
dec
cmp
push
movl
std
ficompl
inc
pop
ret
xor
dec
daa
pop
push
jb
and
dec
movsb
shrb
sbb
movsb
lods
lds
xor
sarb
xor
nop
fwait
mov
hlt
negb
pop
dec
loop
stos
add
xchg
xchg
jne
ja
jbe
repz
xorl
xchg
sbb
stos
lret
xor
xchg
xor
xor
mov
adc
std
xchg
fildl
xchg
add
fsubs
mov
arpl
jns
jmp
sbb
jecxz
mov
xchg
cmp
and
loop
enter
and
xor
aaa
pop
fbld
pop
sahf
pop
fisttpll
adc
jmp
inc
and
sbbb
and
jns
pushf
push
cmpsl
jmp
or
mov
cltd
sub
ds
jg
fdivr
xor
loopne
add
sbb
dec
mov
dec
aam
leave
aam
add
das
addl
push
xchg
xchg
add
arpl
jmp
mov
xchg
jmp
push
sub
popa
lahf
and
xor
jge
or
aad
xlat
push
popa
sar
mul
cli
sub
mov
sbb
dec
fidivrs
lret
fwait
pop
jo
cwtl
adc
xor
fisubs
lods
int3
mov
xchg
fldt
jge
test
arpl
pop
sti
add
and
jge
push
xor
sub
dec
inc
mulb
jecxz
push
or
scas
mov
mov
push
pushf
inc
xlat
pop
addb
xchg
dec
dec
lds
push
or
push
dec
lea
rcll
jbe
inc
bound
dec
mov
data16
inc
mov
add
hlt
push
cmpb
jns
push
mov
cmp
aad
outsb
or
stc
inc
out
inc
mov
data16
jl
mov
ljmp
jno
insl
mov
pop
lcall
pop
mov
out
push
in
cmp
int3
les
mov
jmp
sub
pop
adc
pop
adc
fisttps
adc
pop
dec
mov
lods
xchg
mov
or
popa
adc
and
lock
lahf
dec
mov
movsl
sub
dec
jae
stos
push
insb
mov
mov
sub
outsl
pop
mov
leave
or
in
add
cmpsl
popf
jmp
mov
aas
sbb
insb
or
xor
push
adc
cld
arpl
add
add
aad
loopne
xor
imul
outsb
sub
dec
dec
xorl
adc
arpl
mov
mov
pop
xchg
idivl
cmc
pop
loopne
mov
mov
jne
lret
push
ljmp
fldt
loop
stc
push
xchg
repz
mov
jle
orl
shrl
xor
push
dec
adc
das
test
out
cmp
mov
add
jmp
add
push
fadds
adc
les
jne
dec
mov
imul
aaa
jb
iret
sub
movsl
fisubrl
xor
sbbb
pop
cwtl
aas
lock
jbe
in
in
mov
fwait
jb
pop
xor
in
aam
jl
adc
call
jmp
pop
cltd
pop
popf
test
clc
push
int
sub
mov
push
imul
mov
mov
xor
dec
fisttps
xor
mov
add
mov
or
test
in
push
outsb
fs
stos
pusha
push
mov
or
pop
dec
je
cmc
dec
xor
and
jae
in
ret
dec
pop
push
mov
fcomp
shll
shl
sub
inc
or
loopne
test
outsb
fisttps
gs
xchg
fcmovnbe
mov
fimuls
lret
sbb
add
das
out
cmp
mov
in
sbb
xor
dec
lock
lds
in
inc
pushf
add
adc
adc
out
idivl
cmpb
jp
pop
shrl
inc
mov
jl
enter
arpl
add
leave
clc
sbb
outsl
mov
cmpb
jb
jae
aaa
rcll
mov
lcall
mov
cmpsl
adc
dec
mov
insl
mov
or
mov
pop
mov
pop
lds
arpl
push
out
dec
les
imul
mov
and
jmp
push
mov
adc
xor
pushf
cmp
mov
and
push
enter
xchg
xchg
dec
sub
les
aam
inc
lea
push
sbb
sub
jb
shlb
cmp
ja
mov
add
and
dec
aam
xchg
fmull
mov
stos
ljmp
outsb
push
cmpsb
imul
mov
adc
inc
stc
xchg
das
and
into
scas
loop
adc
jns
push
jg
xchg
mov
adc
jbe
xchg
fld
xor
xchg
shlb
into
popf
aaa
cmp
inc
xchg
jo
cmp
rol
cmp
js
cmc
repnz
push
xchg
je
cmpsb
outsl
in
stos
scas
mov
js
imul
repz
add
push
xor
and
mov
or
inc
jns
push
sbb
sub
xchg
out
jmp
fs
repnz
dec
movsl
sub
shlb
pop
fstps
std
notb
add
cmc
inc
movsb
fdivs
cmc
loop
imul
sbb
mov
mov
mov
push
ret
dec
mov
cmp
fwait
xchg
xchg
xorb
xor
data16
cltd
movsb
insl
in
jl
inc
dec
xor
jmp
iret
cmp
ret
push
cmp
dec
rcrl
pop
jmp
test
sti
or
daa
and
outsl
outsb
imul
insl
dec
mov
shrl
sbb
mov
jle
sbb
roll
in
dec
lds
mov
pop
jmp
sbb
not
mov
push
imul
repz
xchg
push
jge
in
add
addr16
push
add
mov
inc
stos
jp
out
xchg
gs
and
pop
bound
scas
and
repnz
mov
ss
mov
and
leave
lret
sub
cmp
cli
nop
cli
cmp
and
xchg
int
xor
test
clc
mov
and
out
sub
mov
jbe
ret
movsb
push
sub
cwtl
call
lcall
mov
inc
cmp
daa
sahf
fistpl
ja
sub
cwtl
fwait
adc
mov
subb
add
xor
xchg
lods
subl
incl
adc
loop
call
dec
insl
or
test
arpl
ja
pop
or
and
push
or
xchg
pop
movsl
pop
add
cmpl
jp
ljmp
js
aam
xchg
push
fwait
adc
shlb
idivb
mov
inc
jne
movsl
mov
xor
sbb
pop
orl
and
rcrl
push
loope
mov
das
aas
in
imulb
popf
mov
sub
cmp
test
loopne
xor
mov
and
xor
cs
mov
push
or
xchg
hlt
cltd
jne
mov
call
ret
push
repz
fwait
jge
push
les
push
mov
in
data16
popf
mov
mov
xor
add
jo
xchg
popa
decl
aas
inc
test
movsb
rcr
cmp
jmp
jp
xchg
adc
push
fs
ss
push
ret
es
xchg
ret
push
mov
jmp
push
lock
cmp
dec
mov
xlat
in
push
adc
pop
jg
mov
ret
xor
xchg
cmp
test
ret
lret
jae
cmc
cmp
dec
cli
cmp
cmp
cld
mov
outsb
aam
out
bound
jge
ljmp
jnp
push
jg
adc
pop
inc
mov
pop
lods
test
adc
and
mov
in
adc
sti
pop
push
lret
test
inc
call
fimull
add
jns
pop
cmp
or
xor
xchg
xchg
mov
repnz
mov
fwait
mov
cld
mov
mov
push
vmread
out
jnp
adc
das
hlt
push
or
daa
sub
out
fs
xor
testb
lods
pop
andb
jge
push
jge
ficoms
mov
mov
pop
push
fwait
scas
les
push
inc
dec
inc
sub
pop
shl
stc
push
fisttps
sub
mov
xchg
and
mov
jb
sbb
sub
neg
pop
or
xchg
adc
adc
push
inc
or
jg
mov
addb
hlt
mov
inc
loope
mull
gs
inc
mov
jge
push
aas
push
ss
mov
or
push
mov
rcll
or
dec
xchg
jnp
test
pop
jge
out
xor
xchg
in
aaa
out
dec
add
push
lds
outsl
shrl
push
cmp
out
insl
arpl
pop
and
int
xorb
add
in
stc
insl
stc
add
sub
les
and
insl
imul
push
shrl
sub
mov
and
shrl
aam
jp
mov
enter
pop
divl
test
repnz
lret
fists
outsl
adc
xchg
scas
lahf
sub
dec
and
mov
mulb
cmp
lret
cli
mov
pop
or
push
mov
gs
clc
cli
enter
xor
add
push
aad
fcoms
test
mov
and
mov
ljmp
inc
mov
jmp
imul
bnd
adc
in
pop
adc
xchg
mov
fidivs
mov
xor
sbb
aas
lahf
rcll
sbb
test
mov
insl
aad
fcmovnb
xchg
in
in
and
xor
movsl
pop
jg
sub
and
xor
push
fisubs
imul
push
inc
in
nop
mov
hlt
jecxz
add
push
lcall
fadds
mov
mov
pop
push
fwait
add
push
outsb
xor
and
push
dec
and
jge
mull
sti
xchg
movsl
push
cs
lea
mov
mov
pusha
sar
popa
enter
cmp
pop
push
pusha
dec
fistpll
lods
or
mov
stos
add
adc
add
jl
inc
out
pop
dec
cli
add
orb
push
daa
test
push
inc
cmp
or
repz
scas
out
roll
mov
ds
das
test
jae
cmpsb
sub
pop
out
mov
sbb
pop
mov
jle
xor
mov
inc
das
das
cwtl
rclb
mov
cld
gs
shll
lods
lods
orl
mov
jle
test
nop
into
std
scas
repnz
sub
test
icebp
dec
push
vcomisd
outsb
jns
push
push
scas
sbb
pop
outsb
pop
mov
repz
pop
jno
mov
call
or
test
movsl
ret
inc
push
push
mov
clc
xor
gs
pushf
mov
pop
cmp
aad
je
sub
dec
iret
mov
fistpll
cld
cmp
pop
lea
cmpsb
clc
jmp
andb
mull
xlat
popf
jecxz
shlb
jbe
cmp
rcll
sbb
cld
cld
inc
sbb
xchg
pusha
scas
movsb
sbbl
jge
ljmp
test
or
out
mov
adc
je
mov
out
cmp
mov
mov
add
xor
stos
addb
cltd
fists
add
xchg
mov
or
lods
and
sbb
mov
jno
call
stos
bndstx
das
ss
xchg
push
imul
pop
iret
push
xchg
in
mov
int3
std
rclb
xchg
shlb
mov
mov
inc
aaa
fdivr
cmp
pop
mov
jl
add
cmp
or
inc
vmovaps
xchg
imul
adc
add
mov
cmp
inc
idivb
push
stc
out
pop
and
sarb
mov
aam
mov
adcl
nop
call
jo
adcl
cmpb
pop
sub
std
stos
mov
pushf
and
pop
rorl
mov
add
jbe
mov
bound
and
mov
mov
inc
push
and
pop
add
test
add
inc
sahf
in
and
shr
add
push
pop
add
xchg
mov
xchg
sbb
pop
and
xchg
push
iret
cmc
pop
add
xchg
mov
loope
je
sbb
clc
push
sub
jae
in
adc
das
loop
sahf
js
enter
pop
mov
arpl
sar
cmp
lea
sbb
and
xchg
mov
mov
dec
cmpsl
mov
shr
outsl
dec
lahf
sub
je
xlat
sub
cmp
lock
int
mov
pusha
int3
test
mov
cmp
and
xor
xchg
xchg
jle
mov
jbe
inc
pop
into
testl
cmp
add
ffreep
stc
cwtl
vmovlpd
jmp
ret
mov
pop
jecxz
movsl
shrb
stos
inc
pushf
push
adc
outsl
jecxz
sub
jmp
scas
addr16
imul
orl
xor
push
movsb
das
mov
popa
or
in
in
and
bound
xor
or
xchg
or
clc
lea
cmp
test
push
cmp
popa
push
xchg
cmp
daa
insb
cmp
loop
xlat
aam
sub
cwtl
inc
xorb
cli
mov
mov
mov
push
out
cmp
pusha
out
mov
push
push
sub
mov
clc
lea
es
mov
into
test
les
add
dec
jb
and
mov
mov
stos
jno
and
outsb
lods
or
ret
adc
mov
push
or
mov
aaa
mov
dec
loopne
adc
pop
or
mov
lcall
insl
mov
sbb
pop
add
cltd
xchg
and
and
pop
fdivs
aad
pop
hlt
lret
cld
std
fsts
cmp
sar
mov
jg
pop
and
ja
or
push
push
adc
cmp
out
pop
jo
and
adcb
add
push
lock
push
sbb
fldl
mov
fisubrl
inc
add
enter
xchg
push
mov
adc
sub
mov
mov
xor
loopne
adc
jns
xchg
xchg
cs
scas
cmp
sbb
adc
inc
lods
call
adcl
es
insl
stos
cwtl
adc
movsl
jle
or
movsb
pop
cs
mov
mov
push
mov
adc
and
mov
cld
gs
jo
pavgb
je
dec
xor
push
mov
pop
fimull
inc
fnsetpm(287
push
ljmp
push
mov
subb
imul
pop
pop
push
inc
andl
mov
loopne
push
and
and
pextrw
lods
push
dec
cmp
jb
and
push
enter
clc
out
mov
lods
mov
aas
lea
imul
xor
rcr
outsb
insb
shll
je
call
sbbb
mov
scas
subl
scas
sbbl
sub
sbb
mov
push
jp
test
in
inc
jbe
jg
push
aas
xchg
cli
aaa
mov
enter
or
fs
in
mov
xchg
in
fwait
repz
mov
in
stos
cmp
and
mulb
aas
and
jb
adc
fidivs
mov
add
icebp
test
or
pop
or
jnp
sbb
push
mov
pusha
scas
add
push
jnp
mov
jle
cmp
std
inc
xchg
inc
adc
dec
mov
out
outsl
mov
repnz
mov
je
adc
or
jle
fxch
sub
add
movswl
test
popa
dec
xchg
daa
shrl
mov
outsb
dec
pusha
and
outsb
mov
xchg
sahf
mov
xor
outsb
daa
inc
test
jge
les
insl
mul
test
test
fmull
jns
sub
movsl
shrb
mov
ljmp
add
mov
repnz
fsubrl
daa
mov
faddl
push
sti
das
iret
adc
or
andps
or
call
or
adc
or
inc
cmp
inc
fisubrs
pushf
or
jmp
das
mov
int3
or
pop
or
fisttpl
fsub
sbb
xchg
jg
mov
lea
loop
inc
into
adc
mov
adc
scas
push
mov
mov
fcomp
add
lcall
jle
and
inc
sbb
in
or
cmpsb
cmpsb
sbb
mov
aas
ja
dec
add
lods
lods
imul
inc
pushfw
jns
and
mov
cmp
inc
sbb
test
aas
push
adc
test
lret
xor
int3
adcb
fsubs
jns
sub
adc
xchg
mov
pop
lds
inc
pop
fnstsw
mov
lcall
decl
gs
pop
ljmp
ds
mov
ss
add
into
adc
je
inc
jae
xchg
xchg
xor
bound
jge
mov
lea
xchg
js
lods
jnp
ret
xor
gs
fistps
lea
mov
push
fdivs
cmp
xor
shrl
data16
mov
imul
push
notl
mov
gs
mov
stos
mov
sbb
mov
push
addr16
sbb
mov
insb
xchg
sbb
xchg
ljmp
mov
loopne
xlat
xchg
cmp
fdiv
mov
mov
mov
sub
dec
in
inc
add
lods
add
push
mov
fildl
enter
sub
and
addr16
sub
aad
movsb
addr16
xor
or
or
inc
or
jnp
rclb
cmp
push
sahf
lcall
pusha
fstpl
shl
ret
enter
ret
sarb
cmp
insl
lods
repz
cmp
push
xchg
movsl
lret
fdivl
movsl
pusha
mov
adc
outsl
ljmp
pushf
push
cmp
ljmp
fcoml
cmpsl
pop
mov
ds
adc
shll
adc
xchg
lahf
jb
js
sbb
mov
mov
cwtl
and
cmpsb
cmp
loopne
cmp
cwtl
dec
xchg
test
jl
mov
mov
xor
mov
sbbb
jle
mov
fstpt
xchg
in
out
jg
ret
or
mov
mov
fsubs
not
out
enter
inc
mov
arpl
je
adc
scas
test
sarb
mov
jb
mov
mov
lds
fdivl
inc
xlat
sarl
cs
xor
das
xlat
add
or
repz
stc
push
popf
pop
mov
incl
into
sbbb
mov
stos
xchg
icebp
mov
js
repz
mov
insb
sarb
jo
jnp
sbb
inc
xchg
mov
cmc
loopne
push
test
and
push
fcoms
mov
xor
aam
cli
xchg
mov
repnz
addr16
dec
pop
jmp
mov
add
test
and
out
jnp
in
mov
xorl
test
inc
les
daa
divl
sub
xor
loop
out
and
imul
js
es
fstl
pop
xchg
push
jg
jl
je
fisubl
sub
mov
and
cs
pop
and
xchg
sub
outsb
cwtl
and
mov
or
mov
out
cmp
out
test
pop
dec
xchg
in
sti
movsb
in
jbe
es
mov
dec
jbe
or
cmp
lret
cmp
test
out
mov
mov
xchg
test
push
bound
mov
shl
pop
outsl
push
mov
outsl
jle
pop
add
aaa
and
loop
rolb
mov
inc
lret
jbe
lret
jl
out
shll
sarl
imul
out
ja
mov
daa
or
push
push
pusha
dec
jle
fucom
std
gs
aam
sbb
sbb
adc
inc
sub
mov
ret
popf
mov
and
jb
pop
lock
into
daa
ret
bound
lcall
dec
mov
jmp
cmp
lods
testb
inc
std
fistps
or
adc
cmp
and
das
outsl
scas
jge
xchg
cmp
aam
andl
or
icebp
test
mov
jae
lcall
push
mov
sti
adc
push
in
cmp
es
pop
popf
mov
inc
cld
cmp
mov
shlb
fistps
mov
out
mov
fwait
ret
xlat
xchg
in
das
lahf
or
push
test
dec
cmp
arpl
mov
inc
inc
jns
dec
pop
icebp
hlt
xchg
aas
xchg
or
in
das
test
dec
aam
jb
push
stc
cmpl
and
in
sbb
inc
jb
outsb
roll
call
fidivrl
movsb
pop
cmp
pop
fstl
xchg
inc
jo
cmp
add
inc
push
aas
mov
lea
dec
rclb
lds
mov
and
dec
add
aaa
cmp
fiaddl
push
dec
xor
jl
dec
in
std
xor
push
inc
xchg
jo
repz
dec
sbb
enter
or
movsb
sti
sub
aam
nop
leave
mov
pop
int3
pusha
or
sub
xor
fisubrl
jge
enter
int
push
les
push
fnsave
rcrb
addb
ds
fbstp
movsb
adc
mov
dec
addr16
aad
jecxz
data16
pop
xchg
repnz
mov
sbb
ret
push
push
sub
imul
lock
xchg
mov
scas
mov
sbb
mov
fisubs
outsb
adc
xchg
aam
leave
push
mov
mov
or
rcll
pop
subb
sbb
sub
mov
in
xor
adc
add
jg
jns
push
xchg
lods
push
movsb
jp
test
roll
push
inc
push
pushf
repnz
mov
cmp
jo
inc
mov
stc
jbe
sbb
mov
sub
movsl
aad
daa
addr16
movsl
jp
addr16
mov
dec
test
gs
sub
fdivs
mov
into
or
push
push
sub
push
xchg
mov
push
dec
lods
mov
xor
mov
rcll
mov
xor
mov
sub
insb
shr
shll
xchg
inc
xchg
xchg
repnz
push
add
pop
xchg
fsubrp
dec
lret
loopne
pop
hlt
add
je
xor
xor
cmpsb
inc
push
aas
push
mov
in
and
sarb
sub
cmp
fcomps
jnp
js
dec
add
aaa
push
test
testb
push
sbb
sub
iret
jmp
cltd
shl
mov
orb
jmp
movsb
mov
push
rorl
xchg
es
in
cmpsl
push
cmp
lahf
pop
stc
adc
or
inc
mov
sub
jnp
inc
dec
daa
bound
scas
add
jae
hlt
dec
lock
imul
cmpsl
lret
or
sarb
ret
push
sub
mov
cmp
mov
jbe
data16
lea
cmp
dec
cmp
push
adc
shll
ja
fstl
in
dec
imul
cmpsb
mov
test
out
adc
cmp
cmp
stos
or
lods
dec
push
cmp
sbb
rcll
fwait
add
xor
ja
test
into
pop
xchg
mov
sub
arpl
fs
cli
add
mov
adc
out
dec
pushf
fs
jnp
sarb
es
push
dec
inc
cmpl
cmp
scas
test
adc
adc
rcrb
jae
rcl
cmp
xor
jns
xchg
shr
mov
out
mov
loop
pusha
fsub
xor
insb
fcomi
xchg
sbb
testl
notl
inc
stos
jecxz
ret
push
inc
add
popa
inc
lods
push
inc
shl
mov
or
dec
pop
in
loopne
sbb
pusha
lea
mov
fstpl
inc
dec
sti
xor
scas
fidivl
xchg
into
sub
pop
gs
loop
into
inc
adc
sub
divb
xlat
cs
or
add
cwtl
movsl
mov
test
subl
mov
dec
adc
or
in
dec
fwait
pop
inc
xchg
les
xor
ss
dec
data16
cwtl
out
push
mov
mov
fists
loop
loope
fwait
js
test
add
lea
ljmp
lret
movsb
adc
hlt
push
pop
out
mov
add
adc
jns
xchg
inc
mov
push
rcr
jmp
push
pop
fwait
dec
in
cmp
or
push
int
or
push
aas
cmp
sub
xor
pop
mov
loopne
and
jns
jmp
daa
scas
mov
add
ss
mov
aas
sbb
clc
mov
cmpsb
rcr
inc
loopne
aaa
pop
pop
push
mov
lods
dec
pop
mov
dec
pop
icebp
xchg
jo
in
lahf
xchg
sub
fbstp
adc
adc
mov
in
hlt
lea
dec
mov
loop
lock
lods
jge
scas
mov
mov
mov
adc
sub
jne
dec
dec
xlat
enter
inc
push
in
mov
cwtl
sbb
mov
xchg
push
call
jo
dec
shr
add
pop
jmp
jle
jecxz
loope
jo
iret
push
ficoml
and
jl
lahf
and
mov
add
add
imul
or
or
popf
loop
stos
lahf
notb
dec
cld
or
mov
repz
stos
pop
xchg
icebp
mov
xor
and
mov
inc
test
addr16
lret
mov
fmuls
lock
hlt
push
xchg
dec
mov
push
or
jecxz
jp
push
mov
xchg
add
cmpb
mov
stos
sbb
pop
xchg
jmp
mov
push
mov
and
xchg
cmp
repz
sbb
int3
xlat
and
dec
mov
out
leave
negb
daa
mov
pop
mov
push
mov
and
std
xchg
ja
stos
daa
and
mov
out
leave
nop
fidivl
pop
add
mov
leave
lcall
ja
arpl
inc
pop
lahf
lods
mov
pushf
loop
addr16
cmp
cld
je
add
test
add
int
or
jle
sbb
mov
aad
jbe
dec
push
adc
jnp
int
jp
lret
test
inc
dec
outsb
out
push
dec
testb
arpl
insl
pusha
lret
xchg
add
cmp
call
cli
dec
pop
push
addr16
xor
pop
jae
and
adc
shr
sub
dec
fimull
sar
out
cmpsb
in
in
dec
lret
xchg
les
ss
dec
icebp
jo
jnp
cmp
dec
mov
nop
jmp
test
xchg
cmpsb
and
mov
mov
or
xchg
int3
pop
mov
sti
cmpsl
imul
test
sbb
js
mov
mov
pop
cs
pop
sub
xchg
ficompl
jg
adc
sub
mov
ljmp
mov
mov
adc
push
std
jae
mov
mov
sbb
bound
push
xor
ljmp
cmp
add
sbb
movsl
rorl
jo
shr
insl
cmpsl
inc
push
cmp
fcomip
xlat
mov
lret
clc
lods
cmpsb
push
cs
pop
adc
pusha
stos
mov
mov
or
pushf
stos
sbb
sbb
in
cmp
sbb
push
adc
scas
js
cwtl
sbb
jnp
out
mov
sub
cli
out
lea
orl
mov
dec
sbb
and
and
cltd
dec
icebp
jbe
xchg
and
pop
cmp
push
or
imul
test
lods
inc
or
mov
ja
je
lods
mov
cmp
adc
or
push
mov
xor
push
insb
add
imul
test
push
xchg
xor
sub
mov
add
lcall
fmull
and
icebp
xor
shlb
imul
icebp
or
push
sbb
in
fisttps
sub
arpl
mov
jmp
cmc
divl
lods
pop
rorb
jno
repz
push
imul
cmp
outsb
xor
jbe
add
aad
pop
cmpsl
adc
test
sub
les
popa
mov
das
idivl
pop
outsl
cld
shl
in
jns
mov
jecxz
inc
cmp
push
push
enter
add
std
mov
lret
mov
inc
stos
pop
cmpsl
mov
pop
push
pop
cmp
ljmp
lea
sub
popl
mov
inc
add
fs
push
jae
push
jecxz
mov
adc
sub
or
out
shrb
insb
mov
pop
imul
les
jp
mov
js
test
lret
adc
mov
mov
dec
sub
out
sbb
jecxz
call
daa
jmp
mov
inc
and
pop
fs
pushf
xchg
shll
pop
push
std
push
cs
jns
lea
inc
mov
push
outsb
sbbl
xchg
sub
lahf
push
aad
sub
xchg
or
out
stc
inc
les
inc
xchg
rolb
hlt
pop
inc
jmp
cwtl
inc
idivb
cmp
jmp
dec
adc
mov
mov
imul
jle
sbb
jno
push
adc
add
lret
dec
mov
mov
pusha
repnz
inc
ficomps
faddl
jge
and
mov
xchg
jge
xor
mov
cmp
jp
mov
jno
push
xchg
loop
out
pop
hlt
sub
inc
xor
push
pop
push
xchg
cld
xchg
adc
xchg
jbe
rcl
inc
xchg
jae
xchg
inc
stos
add
out
jno
addr16
scas
pusha
xor
xor
in
sub
in
enter
jae
and
gs
sub
pop
sbb
mov
out
push
nop
or
adc
cmp
or
cmc
enter
pop
inc
gs
rcrb
negl
shlb
sub
adc
xor
inc
cmpsb
lock
xor
nop
mov
adc
or
arpl
mov
movsb
sbb
inc
pop
enter
pop
or
fcos
or
cmp
fsubl
xor
stos
mov
push
hlt
imul
testb
cmpxchg
jge
aad
les
mov
push
mov
add
mov
iret
xchg
cmp
loop
jb
mov
leave
mov
test
push
lods
fs
xlat
add
rcrl
in
dec
jno
mov
push
mov
jecxz
iret
cmp
jae
sub
cmp
xlat
jg
mov
pop
xchg
ret
inc
jg
ret
ljmp
test
pop
xor
and
adc
cmp
and
ljmp
outsl
push
aaa
shr
adc
fimull
mov
dec
adc
xor
mov
cmp
ret
fcoml
xchg
stos
jp
je
mov
rclb
dec
sbb
lock
rol
pop
hlt
in
idivl
in
int3
sbb
int3
xor
cltd
imul
adc
repnz
xor
fiadds
test
int
rorb
xchg
mov
sahf
mov
sub
mov
jo
sti
cld
sub
push
sub
mov
jns
jnp
or
push
ret
into
sub
fmulp
cmp
mov
lock
or
jg
mov
xchg
std
ret
jb
shlb
lcall
xchg
dec
cli
out
mov
cmpsb
or
mov
push
pop
pusha
loop
mov
adc
jle
insl
sbb
pop
add
xchg
dec
es
push
push
je
jle
pop
cmp
mov
das
cli
scas
cmpsb
in
ds
lods
gs
mov
repz
push
pushf
cmpsb
xor
js
mov
mov
pop
xchg
and
div
pusha
loopne
or
mov
addl
and
into
ficoms
mov
pop
or
jnp
sbb
jbe
push
and
pop
xchg
in
loope
mov
cmp
mov
adc
mov
int
push
pop
mov
sti
enter
adc
ss
int
add
sbb
repz
ret
es
pop
iret
and
out
jle
lds
ret
dec
movsb
sub
cmpsb
xchg
scas
mov
mov
repnz
pop
inc
lods
idivb
call
inc
lahf
loopne
dec
popl
dec
pop
pop
xor
inc
imul
roll
xchg
fbld
shrl
int
lea
jno
mov
icebp
mov
xchg
das
push
sub
mov
xchg
adc
inc
jbe,pt
jne
roll
xor
xchg
js
pop
push
pop
inc
scas
cmpsb
data16
cmp
shll
and
aam
or
adc
sbb
mov
fisttpl
mov
jmp
sbb
add
divl
mov
pop
lret
stos
es
fwait
push
sbbb
push
or
fsubs
jp
gs
out
fbld
sub
fldcw
int3
cmp
stos
jp
pop
lock
fsubrp
jmp
aas
add
bound
call
shll
lcallw
cmp
jl
lahf
scas
dec
out
mov
jecxz
mov
les
test
ds
insl
add
negl
test
fnstsw
inc
pop
pop
sub
add
mov
xchg
pop
jmp
fs
fwait
inc
loopne
icebp
xchg
outsl
pcmpgtb
adc
das
push
enter
dec
insb
pop
daa
loopne
push
jge
jnp
cmp
and
lods
dec
and
mov
xchg
icebp
stc
xchg
mov
and
mov
aad
mov
fidivrl
or
adc
pop
jne
pop
add
insb
shll
out
mov
ja
fisttpl
movsl
or
adc
mov
mov
rorl
ret
or
fildl
xchg
mov
adc
or
insb
gs
popl
lcall
out
les
icebp
stos
push
pop
test
mov
aas
stos
xchg
cmp
and
dec
cli
cmpsl
sahf
bound
fldt
mov
aam
mov
push
sub
stos
mov
mov
test
xchg
sbb
gs
or
and
stc
in
push
int3
push
mul
fiadds
push
lea
pushl
in
pop
pop
dec
mov
shrl
jnp
clc
dec
insl
add
movsl
ja
push
cmp
cmp
xchg
pop
test
in
mov
adc
mov
fwait
adc
jbe
dec
ds
and
mov
xor
add
mov
fbld
mov
adc
push
xchg
add
repnz
test
fsub
out
dec
and
andb
stos
rcr
and
cmpsb
inc
mov
les
cmpsl
mov
sahf
popa
mov
mov
jbe
dec
loopne
ret
popa
stc
sub
lock
js
jno
jle
pop
shll
pop
aad
arpl
xor
loope
in
movsl
cli
das
mov
fsubrs
out
or
or
xchg
sub
pop
and
push
mov
push
stos
pop
add
leave
jae
inc
dec
mov
jno
cmp
xchg
sbb
xchg
stc
xchg
int
push
cmpsl
std
int3
stos
sbb
xchg
fnstenv
adcl
add
mov
ja
adc
mov
shll
sarl
inc
daa
cmp
iret
jbe
imul
push
rol
cmp
sbb
pop
mov
es
data16
or
push
jno
sub
je
sbb
inc
mov
mov
fsubs
roll
daa
lret
push
pop
pushf
push
jns
sbb
and
sbb
fsubl
mov
bound
mov
loopne
arpl
pop
xor
subb
sbb
mov
icebp
dec
mov
cmp
movsb
mov
lds
mov
clc
adc
dec
cmp
dec
xor
xchg
leave
das
jno
pop
iret
mov
dec
xorl
push
mov
scas
cmp
lcall
jecxz
aaa
mov
sbb
xchg
adc
jge
push
sub
jns
pop
movl
jg
push
and
icebp
add
lods
add
push
xchg
or
mov
cmp
sti
roll
cmp
jmp
popf
pop
cmp
push
outsb
xchg
adc
movsb
mov
sub
adc
xlat
jae
mov
daa
jecxz,pn
sub
nop
icebp
cwtl
add
push
adc
mov
add
mov
adc
inc
loopne
xor
pop
lcall
xlat
or
popa
adc
push
dec
data16
movsb
cmp
add
in
inc
ss
in
xor
mov
inc
mov
mov
or
pop
les
icebp
pop
pop
in
mov
ss
ljmp
or
shll
or
mov
mov
fs
and
mov
jnp
mov
push
in
fimull
sub
jp
aaa
mov
cmc
aaa
shlb
jmp
fmulp
cs
pushf
mov
inc
jge
fwait
add
mov
cmp
ret
paddusw
mov
jecxz
das
xor
xor
ja
or
lcall
inc
mov
mov
daa
sub
sbb
jl
lods
fstpt
popa
in
sbb
pmulhuw
lahf
push
test
cmp
adcl
mov
mov
addl
adc
cmc
adc
push
xchg
das
lock
inc
mov
or
or
addr16
xchg
lds
or
popa
loop
mov
dec
sub
xor
inc
daa
in
xchg
xor
in
mov
push
decl
xchg
in
in
out
lret
jg
loop
lods
add
xchg
sbb
sub
push
bswap
call
lret
loopne
in
icebp
in
mov
out
loopne
sbb
push
push
mov
add
mov
xor
idivb
sbb
adc
scas
imul
mov
pop
cmp
mov
push
inc
sub
pop
cmc
xchg
psllw
mov
lods
sahf
in
lock
pop
repz
pop
imul
in
push
push
int3
and
jl
dec
rcrl
std
push
xchg
andps
bound
out
stos
imul
shll
inc
bound
mov
faddl
out
push
cmpsl
mov
aam
xchg
inc
lret
loopne
jne
fistpl
mov
out
in
pop
test
jge
stos
inc
js
mov
push
mov
xchg
ret
insl
and
cld
stos
sub
icebp
cs
cmc
je
jns
lea
adc
cmp
mov
in
push
cld
xor
fdivrl
and
shlb
daa
pop
popa
xor
mov
mov
popa
stc
push
data16
mov
pop
in
aam
mov
fmuls
loopne
ljmp
adcb
imul
or
pop
and
dec
dec
xchg
push
pop
or
gs
push
nopl
sti
cmpsl
push
push
push
movsl
fisttpll
and
cmp
xor
mov
dec
and
jecxz
daa
std
cmp
loop
push
clc
bound
aad
dec
mov
shrl
sub
ja
imul
push
mov
pop
bound
gs
push
or
les
and
inc
pop
or
cmc
cmp
add
add
lcall
mov
scas
add
je
ss
hlt
sbb
xchg
pop
sub
ss
inc
ss
loop
movsb
loopne
rorl
push
pushf
dec
sub
rorb
into
sarb
test
or
jmp
stos
mov
fwait
stc
mov
mov
sub
xchg
movd
pop
cld
push
jecxz
adcl
inc
cmp
stos
mov
pushf
jae
test
adc
dec
or
sbb
fcoml
in
faddl
out
pop
sub
lods
add
dec
in
sbb
mov
jl
scas
scas
sahf
into
rcrb
rcll
shlb
or
bound
in
adc
imul
mov
fcom
fcmove
pushf
push
xchg
fisttpll
ja
mov
aaa
dec
icebp
xor
daa
aas
mov
cmp
mov
test
mov
adc
ja
sbb
js
arpl
push
imul
adc
cmp
ja
out
pop
lock
in
push
push
and
fsts
out
jnp,pt
fs
iret
cs
fcmovnbe
in
mov
xor
enter
inc
je
lret
stos
or
xchg
xor
out
add
add
es
insl
aaa
sbb
bound
leave
pushf
stc
xor
into
cmp
cmpsb
mov
fldl
jl
addb
push
xchg
lods
add
sub
mov
adc
sub
rorl
sub
adc
jb
jb
xorl
insl
pop
fdiv
aam
mov
xor
push
or
jp
div
in
repz
dec
aas
cmpsl
data16
dec
in
hlt
outsb
jle
pop
sbb
or
sbb
fistpl
push
mov
scas
pusha
fsub
je
icebp
nop
je
in
lea
lcall
mov
xchg
cld
or
dec
mov
add
scas
push
or
cwtl
push
push
les
mov
xchg
sub
xchg
cmp
inc
push
push
jbe
enter
icebp
outsl
dec
mov
xor
leave
add
inc
shrl
aad
out
pop
movsb
in
mov
sub
stos
sbb
mov
int3
test
mov
xchg
addl
pop
das
pop
addr16
sbb
sub
hlt
xor
pop
dec
test
mov
sbb
pop
dec
xor
fmul
and
popf
push
jmp
mov
or
mov
test
loope
cmc
rep
insl
loopne
mov
ds
test
xor
pop
sbb
mov
xor
ljmp
or
pop
and
vcomiss
popf
jl
or
ds
aam
fwait
out
sub
mov
popf
ljmp
mov
or
daa
ja
loopne
mov
std
jno
push
or
pop
lods
xchg
pop
adc
enter
xchg
or
fldcw
xchg
jp
add
test
inc
jmp
fst
mov
rol
jbe
jmp
add
pop
xor
sub
ret
mov
adc
in
xor
xchg
bound
setge
fwait
mov
adc
push
mov
dec
jmp
test
aaa
insb
ljmp
xchg
and
or
xorl
popa
fs
pop
jl
pop
pop
dec
jae
mov
mov
adc
xlat
xchg
dec
adc
data16
sbb
dec
xchg
and
in
in
jnp
jno
mov
inc
adcb
pushf
ret
xchg
pop
or
pop
mov
pop
xchg
mov
aaa
mov
js
push
cmp
es
lahf
insl
xor
xor
or
repnz
xchg
ret
adc
fs
or
repnz
call
sahf
sub
cmpsb
dec
and
sub
add
mov
adc
adc
ja
or
inc
mov
xor
cmp
cmp
fcmovnu
mov
pop
in
popa
dec
cli
push
clc
mov
mov
sti
es
sahf
int3
rcrl
adc
inc
lea
testl
imul
sarl
mov
jg
or
push
outsl
fistpll
loop
in
mov
fcomip
clc
fists
xchg
lret
lds
fmul
test
dec
or
mov
in
adc
inc
mov
mov
add
arpl
inc
or
insb
adc
sub
loopne
fidivrs
jo
jmp
pop
repz
int3
sti
sbb
les
in
dec
dec
fwait
stc
adc
movsb
push
xor
mov
flds
cmp
iret
pop
inc
pushf
or
xlat
mov
xchg
in
and
dec
adc
cmp
pop
into
inc
fiadds
aam
mov
mov
aad
inc
or
and
ret
adc
add
pop
sub
xchg
cmpsl
gs
add
outsb
xor
push
fcom
jle
outsb
and
cmpsl
push
mov
cmp
or
mov
lret
stc
and
mov
ss
xchg
dec
mov
and
aas
ret
mov
push
xchg
add
ja
pop
out
mov
pop
cmp
lods
pusha
roll
push
add
mov
xchg
xorb
addr16
daa
fstps
sbb
mov
fsubr
push
lods
add
jne
inc
leave
pushf
jg
lea
xchg
repnz
daa
cli
mov
lret
add
or
test
or
subl
adc
jmp
and
jle
xor
xchg
popa
mov
test
jl
pop
mov
mov
into
inc
push
std
xor
jbe
push
jl
cmp
xor
xchg
sti
adc
mov
xchg
push
jo
inc
loope
jno
xchg
xor
fldl
cld
cmp
dec
dec
pop
stos
test
and
mov
enter
mov
aad
jg
mov
inc
out
add
les
cmovl
lahf
inc
xor
out
xor
cmp
js
sub
sub
sbb
shrb
adc
outsb
loop
int3
jle
ja
or
imul
mov
or
jp
aaa
dec
sub
sbb
ret
into
pop
repnz
jns
mov
inc
pushf
push
orl
dec
daa
push
lods
xchg
sub
lock
adc
out
lret
test
imul
lock
mov
push
push
cmp
or
push
fcom
addb
shll
mov
bound
add
aam
testb
cmp
test
cld
jge
push
xchg
test
fcoms
xor
inc
add
sahf
jecxz
sub
pop
insl
pop
test
jae
xlat
addr16
mov
fnstenv
xlat
movsb
test
xor
popf
mov
xlat
mov
inc
aaa
repz
sub
adcl
adc
fs
dec
lock
push
sar
iret
jmp
loope
mov
into
cmc
and
in
push
xor
cmpsb
enter
fldenv
in
mov
jnp
mov
enter
enter
in
mov
dec
lds
addb
outsb
je
cmpsl
push
sbb
dec
sub
inc
shll
cmp
int
lret
sbb
xor
adc
lods
adc
es
or
repnz
adc
pop
sub
test
testb
push
pop
inc
jmp
dec
idivb
inc
lds
sub
or
mov
pusha
les
sub
sbb
jns
aaa
pop
xchg
mov
outsl
cmp
sub
push
mov
jo
outsb
mov
cmpsl
xchg
and
inc
enter
jno
jbe
cltd
pop
hlt
cltd
mov
repz
xchg
fistpll
or
out
js
pop
jb
arpl
ret
add
aas
out
dec
loop
pop
or
push
and
stc
jns
in
lret
imul
loop
iret
sbb
imul
test
push
lds
sub
test
inc
pop
dec
mov
aaa
sahf
ljmp
fwait
push
pushf
outsb
mov
and
jmp
outsl
pop
rcrl
xor
sub
aam
jo
loop
stos
inc
mov
inc
inc
adc
insl
pop
arpl
jnp
test
add
add
dec
mov
ja
addr16
js
add
das
pop
adc
push
pop
xor
adc
aas
and
mov
sub
hlt
jl
rcrb
insl
lret
je
outsb
mov
jmp
fs
pop
fmull
jle
ja
test
push
cmp
push
pop
out
lea
or
int3
pop
fidivrs
movsl
pop
dec
aad
mov
push
int
jge
pop
mov
cltd
popa
cltd
mov
or
mov
mov
data16
mov
bound
jb
divl
ret
and
faddp
sbb
subl
pop
pushf
mov
loope
inc
add
or
ds
or
repnz
loope
cmp
imul
jnp
xorl
jecxz
enter
jg,pn
sahf
test
push
movb
push
jp
or
ljmp
ret
lea
lret
xchg
idivl
adc
enter
lcall
cmp
adc
pop
scas
mov
test
and
adc
sbb
jae
fidivs
cmp
xchg
mov
add
mov
mov
outsb
sub
popf
not
or
adc
sub
mov
add
ss
imul
mov
jle
pop
cmp
mov
push
scas
stos
addl
add
inc
icebp
in
push
adc
cmc
sbb
outsl
push
xchg
loop
add
std
adc
pusha
aad
adc
popa
ror
push
data16
pop
mov
cwtl
stos
sbb
inc
notb
scas
outsb
scas
lcall
push
in
cli
xor
mov
sub
fwait
lock
sub
dec
scas
rcr
and
cmp
shrl
call
pop
cmp
movsl
xchg
pop
add
mov
xchg
jp
lock
add
mov
jo
movq
push
fsubrs
jo
inc
sub
testl
and
clc
stos
popa
test
in
mov
repnz
dec
inc
mov
dec
pop
popf
sub
xor
aad
sti
fistps
jg
adcl
jp
add
ret
cld
ss
ret
popa
mov
int
iret
icebp
cltd
pop
mov
xlat
outsl
add
sbb
xchg
mov
jg
test
inc
test
fdivl
loope
jb
inc
pop
fcoml
cmp
ss
lods
int
xchg
popa
std
jae
pop
into
mov
fucom
push
int
pop
stc
mov
lods
std
call
cmpsb
cmpsl
fcompl
inc
xchg
mov
fmuls
xchg
or
iret
or
dec
mov
and
js
iret
cmp
push
jle
mov
dec
lock
adc
pusha
cmp
out
mov
int3
fcmovne
test
xchg
add
shrl
das
aaa
push
test
les
xchg
sbb
or
aas
inc
adc
mov
rolb
sbb
jbe
inc
mov
gs
shrb
mov
cld
int3
ffree
movsl
daa
test
add
push
ja
and
lds
or
cld
repnz
and
iret
movsb
add
shrb
add
jnp
or
std
xchg
pop
pop
cs
imul
cmpsl
aam
or
xchg
cmpsl
sbb
xchg
imul
inc
and
xor
xchg
jae
xor
adc
lcall
jbe
inc
test
xor
mov
movsl
push
stc
sbb
push
xor
out
inc
cmpsl
xor
subb
les
aam
sahf
add
stos
mov
ds
test
and
shrb
and
xlat
push
rcrl
mov
mov
cmp
pop
and
loope
push
in
or
and
adc
sub
loopne
rorb
idivb
sub
push
mov
ret
sub
clc
cmp
mov
hlt
mov
xchg
add
push
add
sbb
or
mov
push
popf
add
xor
jge
inc
test
jp
sti
clc
adc
dec
xchg
mov
ds
pop
call
sbb
push
pop
repz
das
push
mov
jp
inc
imul
jns
push
scas
rcrl
fs
pop
inc
enter
add
in
pop
push
or
jg
test
inc
cmp
daa
mov
aam
pop
jp
sub
sbb
lods
stos
daa
mov
sbb
xchg
or
fstpl
cmp
mov
or
or
and
and
data16
and
adc
out
dec
sbb
orb
shlb
popa
cmc
jp
and
adc
cli
mov
push
cmp
fnsetpm(287
adc
dec
sahf
fcmovnb
push
add
out
cmpsb
stc
fisttpll
bound
out
cmpsb
fcmovnu
rcrl
xor
inc
mov
pop
inc
sbb
clc
sarl
rol
mov
call
sub
inc
mov
sbb
fwait
lret
xor
add
sbb
sub
mov
sub
mov
add
into
lds
inc
in
dec
mov
cmp
out
stos
stos
out
in
mov
xchg
jae
pop
je
jae
xor
pop
inc
sahf
cmp
lea
jge
mov
insb
das
fsubr
sub
enter
push
xor
dec
sub
jg
push
in
imul
sahf
in
xor
cmp
pop
scas
sbb
and
jl
pop
dec
and
mov
mov
ljmp
mov
pusha
mov
sti
add
xchg
cwtl
movsl
jle
add
sbb
sarl
aad
add
cmp
ret
ret
xchg
lock
mov
adc
hlt
mov
inc
and
jbe
sahf
test
push
push
jecxz
jmp
pop
sub
sarb
sarb
mov
mov
loopne
xor
sahf
sbb
sub
imul
pop
test
test
dec
mov
scas
sarb
out
rol
or
add
add
mov
push
pop
out
push
inc
inc
add
andb
insl
test
push
cmpb
ret
dec
cmp
mov
xchg
fstpl
iret
push
pop
jmp
and
jne
es
int3
mov
mov
mov
sub
adc
lds
jo
mov
jne
mov
adc
xlat
hlt
fidivrl
adc
push
inc
jb
repz
inc
addr16
inc
inc
fnstenv
aaa
test
xor
mov
xchg
int
jb
int
cwtl
sub
iret
in
push
inc
and
xor
and
or
jmp
jns
jbe
push
scas
adc
ret
scas
xchg
xchg
mov
test
dec
mov
imul
cmp
leave
dec
test
mov
push
repz
cltd
das
mov
sbb
jg
sub
repz
inc
sbb
push
test
xor
pop
xor
cmc
mov
popf
inc
add
push
jbe
xor
mov
sbb
stos
mov
and
mov
xchg
dec
pop
lret
int3
cwtl
imul
xor
pop
mov
sub
mov
lret
int3
dec
pop
rcrb
inc
and
pop
mov
adc
mov
mov
mov
pop
ret
mov
pop
test
popl
adc
clc
xchg
inc
jp
cld
dec
or
sahf
push
in
dec
push
pop
dec
add
push
xchg
push
stos
lret
pop
loop
jge
and
lods
mov
mov
xchg
pop
fdivp
add
scas
lds
out
mov
jb
add
repnz
icebp
add
xor
sub
dec
pop
inc
fwait
jmp
shl
jae
dec
leave
jo
sbb
leave
fsubs
sub
cli
adc
cmp
jbe
sti
add
in
lods
adc
push
mov
ret
lods
mov
fld
jnp
jae
and
aaa
cmp
jecxz
jp
or
adc
pop
jmp
cld
dec
cmp
aaa
or
test
fsubr
xchg
push
repz
pop
push
push
hlt
jmp
xchg
mov
out
gs
sub
sbb
fs
inc
cli
arpl
jl
xor
fcom
mov
xchg
je
cmp
and
cmp
ds
cmpsb
cmp
mov
scas
rorl
mov
add
inc
stos
inc
mov
lods
sti
adc
dec
rcll
pop
int3
mov
std
mov
push
push
fcmovne
mov
aad
sti
jge
scas
fwait
movsl
fmuls
mov
pop
repnz
jecxz
fucomi
pop
lds
dec
je
out
or
inc
or
test
lcall
cs
and
les
jne
xor
dec
scas
mov
sub
lea
and
mov
or
nop
pop
mov
pop
mov
add
int
mov
jg
mov
mov
sub
dec
sbb
mov
push
xor
out
pop
cmpsb
sub
in
push
mov
mov
push
scas
cld
ret
int
jnp
sarb
jecxz
clc
scas
sub
inc
pop
out
sub
mov
aad
les
pop
imul
int
dec
sbb
stos
sbb
je
movl
call
dec
mov
cwtl
or
pop
push
sub
push
pop
popa
xchg
es
xchg
das
mul
mov
test
push
ret
ss
js
mov
jmp
sarl
movsl
mov
cltd
aas
iret
add
mov
clc
xor
aaa
hlt
scas
sbb
sti
push
iret
xchg
popa
arpl
inc
dec
xor
dec
in
adc
jg
pop
xor
push
or
jno
sbb
jo
int
sub
std
ss
sub
inc
or
popf
pop
mov
loop
into
movsb
imul
hlt
jp
inc
orl
das
mov
pop
push
fisubl
std
cmp
jecxz
adc
pop
inc
push
dec
je
scas
jns
imul
mov
shll
mov
sub
lret
fs
dec
ljmp
and
mov
fwait
lods
outsl
cmc
pop
incl
clc
iret
fmull
lds
xor
sub
into
icebp
cmp
mov
js
lea
adc
stos
sub
mov
mov
fwait
rorl
mov
test
pushf
or
rorl
dec
ficoms
xchg
and
mov
or
cmp
push
and
jle
sti
scas
push
rcll
cs
mov
adc
lahf
xor
in
xchg
ja
ret
adc
int3
mov
pop
mov
sub
les
stos
xorb
sti
xor
or
pop
mov
cld
jae
imul
pop
rolb
pop
cmp
mov
aaa
and
adc
das
data16
in
sub
ss
add
push
lds
jbe
lahf
mov
xchg
aaa
jge
mov
push
jno
dec
popf
lods
ret
dec
xchg
or
cmp
shl
lret
out
in
sbb
lea
subl
jo
in
aad
adc
cmp
dec
inc
loop
or
ljmp
cli
mov
loop
inc
push
cltd
adc
dec
movsl
shrl
leave
lret
xor
fwait
jb
rolb
mov
repz
pusha
ds
clc
cmp
out
cmp
out
and
popa
dec
cmpsb
mov
das
clc
popf
inc
decb
lock
ss
add
adc
scas
cmpsb
jns
aaa
cli
or
idivb
add
push
cltd
test
mov
add
fildl
psubb
sbb
shrb
adc
push
mov
sbb
leave
xor
dec
lods
gs
insb
inc
int
push
icebp
les
and
xor
mov
in
std
jne
sbb
jo
push
ret
shl
fs
sarb
shll
dec
xchg
lods
imul
stos
notb
xor
cld
sbb
xchg
add
cmp
fsubrp
in
and
or
inc
mov
mov
push
dec
xor
loop
cmp
pop
sbb
fisubrs
add
xchg
int3
ss
es
test
jg
xchg
jp
pop
inc
out
mov
mov
jo
sarb
out
stc
daa
add
test
xor
hlt
xchg
scas
push
add
lcall
cmp
xor
loop
shl
add
dec
or
test
mov
test
mov
mov
lds
cltd
jb
sbb
or
hlt
adc
push
popf
adc
mov
daa
add
mov
xor
jg
adc
orb
jne
dec
push
inc
push
sbb
outsb
lods
mov
pop
mov
pop
lock
clc
out
and
and
lock
in
movsl
adc
mov
dec
mov
repz
mov
cmpsb
mov
gs
or
scas
mov
adc
jo
sti
mov
je
push
jo
imul
arpl
push
repz
jle
pop
pop
cli
lds
daa
insb
es
add
stos
ljmp
mov
pop
scas
dec
sub
cld
jge
ss
movsl
iret
out
int3
or
sub
sub
mov
sbb
ret
mov
sub
enter
pop
xchg
sub
jmp
inc
push
push
adc
pop
pop
and
sub
imul
and
test
mov
xchg
adc
ja
addb
sbb
cmp
and
daa
and
mov
ss
xor
ret
dec
std
mov
push
sub
adc
aaa
in
jle
cmpsb
insb
mov
nop
mov
sbb
insl
dec
jge
adc
xor
xor
push
pop
add
test
mov
pop
pop
cmc
pop
jb
pop
mov
fs
sub
shrb
addr16
sub
or
iret
jbe,pn
lcall
popf
pop
mov
out
cmpsb
leave
and
lds
sub
adc
xor
ret
cltd
inc
aad
or
push
and
out
xor
or
mov
push
mov
add
jg
jp
clc
mov
rorl
mov
shrl
jbe
mov
pusha
jg
xchg
mov
push
ja
push
add
push
ss
and
outsb
test
push
fwait
xchg
out
arpl
and
or
xor
push
pop
cwtl
xchg
fldl
cmc
insl
sbb
sbb
lds
mov
jl
xchg
or
inc
popa
push
mov
cld
std
les
popa
push
mov
ret
dec
ret
mov
lods
inc
cmp
ja
jb
push
jb
pop
inc
dec
rcrb
xchg
in
mov
mov
jnp
adc
push
jo
xor
cmc
sub
ss
imul
ret
adc
stos
sbb
jp
ss
jns
and
jno
push
les
jae
sbb
or
addl
rolb
mov
inc
push
xchg
lods
cmp
mov
repnz
fwait
mov
cli
fsubs
mov
jb
sub
mov
cmp
out
imul
daa
ja
ljmp
js
lds
fimuls
rcrb
clc
jo
arpl
adc
jb
jnp
mov
xor
mov
xor
repnz
and
daa
push
clc
cmp
negb
pop
jmp
bound
jno
jg
insl
add
pop
jns
push
mov
repnz
xchg
and
fs
aam
enter
mov
sbbb
add
das
mulb
cmp
lods
dec
jl
rcll
ljmp
outsb
imul
pop
add
es
mov
sub
into
aaa
fidivl
add
xchg
push
fisubs
mov
mov
push
call
mov
mov
xchg
stos
data16
addr16
in
xor
movsb
add
into
jae
sbb
mov
jae
jl
jge
cli
mov
mov
pop
fsub
xor
sub
mov
fwait
mov
cltd
and
push
cmp
hlt
mov
xchg
addr16
xchg
jo
lea
xor
or
sub
cmpsl
pop
jl
mov
frstor
pop
pop
dec
pop
inc
pop
jne
fs
and
cmp
xchg
add
cwtl
int3
mov
mov
int
ja
inc
jno
ret
imul
out
mov
jmp
sub
sbb
xor
fldcw
stos
or
add
jmp
test
testl
xchg
jle
or
mov
mov
dec
test
rcll
out
and
rol
sbb
cmp
add
push
xlat
sbb
cld
scas
stc
mov
xchg
xchg
adc
cmpsl
jge
jne
fstps
pop
lock
sub
pop
inc
mov
fwait
out
cmpl
aaa
xor
stc
stos
jmp
aam
sbb
movsl
xchg
or
mov
mov
pop
iret
bound
mov
hlt
xchg
aad
or
mov
lret
aam
ficoms
ja
mov
pusha
fidivrs
sbb
lret
std
xchg
pop
lahf
lea
ficompl
xor
out
push
js
cwtl
stos
push
popf
test
mov
inc
lret
sahf
cli
movb
jnp
int3
lret
in
add
mov
cli
sbb
xchg
movsl
pop
arpl
hlt
loopne
in
shr
xchg
enter
cmc
icebp
arpl
repz
sahf
add
push
hlt
int3
push
jge
lahf
lahf
xchg
movsb
sbb
xchg
sbb
mov
pop
mov
adc
sub
sub
dec
aas
mov
sbbb
outsb
seto
adc
dec
mov
fildl
push
mov
add
xchg
inc
jnp
mov
addl
jmp
enter
arpl
xorb
fisubrl
shll
test
aam
jg
cmp
sbb
sbb
dec
fdiv
orl
add
push
xlat
std
adc
or
mov
loope
loope,pn
lret
cmpsl
jle
adcb
call
dec
mov
xchg
xor
ret
rolb
inc
inc
and
scas
enter
sub
add
push
sub
stos
push
xchg
sbb
lods
mov
push
mov
int
addr16
adc
dec
dec
add
or
ljmp
push
dec
pop
test
add
out
repz
mov
aas
dec
and
mov
sti
les
jmp
mov
pop
int3
in
testl
rcrl
xchg
fstl
mov
arpl
sub
and
xor
aas
dec
rorb
sarb
ret
push
movsl
lret
add
sbb
shrl
sub
cmp
push
xchg
and
cs
ret
fisttps
shrb
popf
push
xchg
div
jnp
cmpsb
adc
lahf
bound
pop
sub
inc
aad
pop
or
or
dec
lcall
imul
stos
jg
aad
push
dec
jb
outsb
out
clc
or
movsl
sub
cwtl
or
xor
adc
mov
adc
sti
push
jns
push
cmp
out
sbb
push
xor
mov
mov
incl
fnstsw
cmp
gs
cwtl
movsl
sahf
adc
push
insb
out
jne
cmpsb
add
fdiv
add
rorb
sqrtps
or
out
rclb
and
ljmp
loopne
movl
loopne,pt
in
dec
inc
into
les
sbb
dec
or
test
repnz
jns
aas
xchg
and
adc
fwait
shrl
and
sbb
inc
test
sub
std
hlt
pushf
jno
mov
pop
sub
addr16
pop
dec
pop
rorl
or
pop
stos
jmp
xorl
mov
push
mov
and
mov
dec
shlb
xor
dec
cmpb
ss
jno
fidivrs
push
adc
std
sbb
sbb
push
aas
pop
push
fwait
nop
daa
imul
cmpsb
insl
push
adc
movsb
scas
add
es
add
imul
jnp
cmpsl
and
vfrczps
adc
sbb
shlb
aaa
incb
adc
mov
les
in
movsb
inc
outsl
sub
jecxz
out
int
cmpsb
pop
and
aam
fdivs
pushf
sti
loope
push
shl
imul
mov
mov
shlb
call
fcoms
dec
mov
jae
or
add
sub
fcomi
in
sub
dec
jne
stc
add
stc
rorb
or
cmpb
push
mov
pop
dec
fldcw
xchg
adc
pop
pop
mov
popa
scas
iret
push
add
push
mov
lea
mov
dec
out
fistpll
dec
pop
ret
cmp
xchg
dec
fdiv
xor
sti
xchg
add
pusha
in
mov
idiv
lret
test
xchg
push
cmp
pop
cwtl
dec
test
push
pushl
jns
cmpsb
movsl
jbe
rcrb
push
aad
cld
mov
addr16
sbb
cmpsl
push
jns
push
testb
sahf
lea
in
mov
mov
lds
in
xchg
pop
dec
loope
pop
adc
push
sbb
iret
in
faddp
leave
xchg
jae
xchg
nop
ds
inc
jbe
stos
pop
aaa
pusha
pop
testl
movsb
daa
mov
scas
jns
sub
sbb
jno
sub
or
cmpsb
imul
cmc
jg
out
ffree
jne
inc
and
and
pop
dec
out
mov
ljmp
ljmp
in
shlb
cmp
lret
or
xor
mov
das
clc
and
xchg
mov
cmp
lods
add
mov
push
stos
je
in
call
xor
xchg
or
jl
sbb
addr16
fistpll
inc
xlat
or
flds
cltd
jns
ffreep
xor
adc
fnstsw
call
mov
add
icebp
mov
add
xchg
nop
pop
fisttpll
jle
shll
dec
cmpsl
sbb
mov
mov
pop
mov
outsb
mov
jl
push
aas
lret
xchg
leave
jmp
fnstcw
fidivrs
sbb
aas
mov
inc
ret
sub
lret
cmpsb
int
rcrl
xchg
push
stos
pop
sbbb
jb
sbb
aam
push
sbb
int3
push
movsb
and
and
stos
fcomi
pusha
andb
test
cli
pushl
sub
mov
out
std
lret
mov
dec
rcll
push
or
out
std
shlb
xor
mov
inc
sub
into
xor
roll
mov
or
mov
fsub
pop
or
pushf
dec
and
xor
or
inc
add
popf
or
stos
add
lock
fs
pop
shlb
jmp
adc
ret
adc
xchg
mov
lds
push
xor
outsb
rcl
aam
jns
pusha
cmp
xchg
mov
lods
lods
cmpsl
clc
cmp
or
push
pop
xor
push
cld
lahf
in
lret
test
mov
call
cwtl
fstl
outsb
lret
mov
fmul
sti
inc
inc
fisttpl
fsubrs
mov
addb
cwtl
jb
outsb
sbb
cmp
ljmp
ror
sub
test
loopne
dec
stos
dec
test
mov
fbstp
shlb
adc
pop
and
testb
pop
scas
mov
ficoms
cmc
push
movsl
xchg
outsl
lods
fwait
mov
jle
shll
cmp
sbb
fcomp
xchg
out
xchg
popf
inc
sbb
mov
cltd
push
and
pop
test
dec
jnp
jle
or
bound
dec
push
push
rcrb
push
push
jge
inc
out
add
push
mov
and
popa
loopne
xchg
dec
jne
push
mov
sbb
pop
dec
fst
dec
cs
and
mul
xor
push
sbb
mov
or
sub
aad
int
and
sti
out
mov
test
and
mov
mov
pop
into
jno
loop
out
xor
dec
int3
push
test
jl
fstps
scas
divl
jl,pt
mov
ret
out
or
jg
mov
inc
dec
lds
dec
add
rcr
lcall
jmp
popf
push
push
js
push
movsb
sti
inc
push
xor
adc
inc
testl
inc
mov
pop
mov
dec
ds
mov
xlat
mov
sub
pop
cmp
or
lods
and
pop
shll
cmpsl
xchg
inc
roll
test
test
aad
push
sbb
pop
lock
push
pop
cli
ret
jno
aaa
mov
cmp
dec
lret
mov
xlat
testl
lods
pop
iret
push
scas
adc
into
imul
mov
sbb
sub
xor
nop
stos
repz
mov
mov
sbb
xchg
push
js
xchg
add
push
cmp
pop
pop
fiaddl
stc
mov
std
inc
insb
in
inc
loope
mov
into
mov
mov
jae
xor
cmp
cli
push
add
fimuls
nop
dec
popf
movsb
sbb
mov
and
orb
neg
dec
mov
je
cmc
mov
lock
mov
or
mov
or
subb
dec
enter
jnp
or
push
sub
ss
punpckhwd
add
sbb
ret
adc
pusha
push
xor
cltd
mov
sbb
pop
xchg
les
push
sbb
pop
loop
xchg
stos
test
sub
push
cmpsb
les
push
pop
pushf
adc
repz
mov
jle
clc
repnz
mov
movsl
add
dec
sarb
inc
popl
dec
pop
mov
aas
push
fcoms
cmp
xor
xchg
and
std
imul
xchg
add
adc
pop
bndldx
lock
push
ds
fldt
sarb
fistpll
inc
adc
shll
or
nop
in
rcl
mov
sbb
mov
ret
xor
push
pop
fisubrl
or
inc
lods
ror
ja
mov
stc
leave
xchg
dec
sbb
or
in
fwait
incb
rcl
out
mov
push
ret
sbb
in
sub
loope
jle
in
sahf
test
int
pop
sbb
xor
fs
or
sub
ljmp
imul
repz
jno
mov
roll
popf
fcoml
jg
in
jae
pop
repz
sbbl
add
gs
mov
in
dec
push
test
xchg
and
sub
mov
add
popa
insb
xchg
addr16
jae
cs
les
inc
dec
dec
mov
inc
popa
xchg
mov
test
mov
jne
shll
and
xor
dec
hlt
mov
inc
test
iret
mov
xor
cmp
xor
push
popf
xchg
jmp
mov
dec
repnz
popf
loope
mov
xor
pop
idivl
jo
out
lahf
into
pop
cltd
cwtl
test
push
imull
cli
dec
fxch
ret
push
sbb
dec
jle
cmp
mov
sbb
xor
sub
sub
in
mov
inc
cmp
xor
add
sarb
and
sbb
sar
xchg
push
out
out
fcomps
rcl
xchg
pop
loopne
es
stos
testb
mov
push
sub
jl
mov
outsb
xor
mov
cmpsb
mov
mov
cli
pop
aaa
lahf
sbb
in
fsubrl
rclb
adc
sbb
inc
jb
pop
inc
or
pop
pop
cmp
enter
add
lods
pushf
icebp
and
add
aad
push
sti
aad
imull
ljmp
fidivrl
adc
mov
push
in
inc
sub
or
imul
fisttps
aad
jmp
aam
mov
add
mov
xchg
cmp
mov
loopne
sbb
adc
scas
insl
adc
jge
push
xor
out
in
scas
psrad
and
es
add
repnz
cmpsl
pop
push
mov
in
dec
pop
xchg
fisubrs
fnstenv
and
pop
stos
loope
mov
inc
lods
outsl
jg
sub
mov
xchg
dec
and
dec
pop
xchg
outsb
cmove
dec
pop
rorl
mov
pop
loop
inc
loop
rorl
jo
dec
push
test
sub
add
push
add
add
sbb
or
aas
mov
mov
push
fcmovb
cmp
push
jg
in
jno
fs
repnz
pop
lret
push
inc
cltd
lret
arpl
inc
push
or
dec
and
sar
adc
mov
ret
mov
out
popf
and
pushf
jne
xchg
mov
fisubl
or
push
xchg
xor
stos
aam
fsubrl
xor
dec
dec
faddl
lea
fildll
push
movsl
ret
mov
cmpsl
dec
in
clc
pop
cmpsb
push
cli
pop
stos
mov
rcrl
js
and
jns
loop
pop
push
mov
jp
fdivl
lret
sub
leave
jne
fwait
sub
ss
cld
ret
and
shr
hlt
pop
adc
dec
inc
mov
cmc
or
jmp
jp
leave
mov
outsb
pop
or
out
les
repz
stos
popl
pop
xor
daa
and
rclb
daa
xor
jmp
adc
call
imul
fdivrs
jo
cltd
mov
pop
mov
repz
fildll
mov
movb
pop
xchg
mov
call
test
lret
sti
mov
push
pop
xchg
mov
loope
mov
or
mov
pop
cmp
ficoms
negb
mov
popf
xor
mov
xchg
inc
subb
rcl
mov
jo
les
int3
scas
dec
cli
sbb
mov
pop
xor
mov
jae
xchg
cmpsb
push
and
aad
and
cmpsl
pop
jp
ss
adc
mov
test
sub
rol
or
sbb
cmpsl
pushf
testb
std
dec
mov
or
fidivl
movsb
enter
dec
add
test
sbb
pcmpgtd
out
aad
dec
insl
test
hlt
test
xchg
out
dec
ret
add
repnz
xor
orl
pop
insl
mov
mov
outsb
jge
jne
scas
push
jnp
in
cwtl
shll
inc
ret
add
push
in
idivb
stos
inc
in
inc
dec
fcoms
daa
jnp
scas
insb
pusha
iret
gs
in
lcall
dec
jmp
jnp
dec
sbb
fwait
push
int3
mov
mov
mov
dec
mov
xlat
test
xor
scas
add
dec
addb
pop
push
in
mov
mov
jg
cmp
cmp
or
add
and
and
ffree
and
js
mov
inc
and
dec
mov
add
or
or
cwtl
mov
nopl
adc
addl
adc
or
xlat
adc
movsb
insl
and
inc
insb
push
popa
repnz
andb
mov
or
push
std
fisttps
adc
push
jecxz
mov
les
sbb
mov
leave
pop
sbb
test
jl
imulb
pusha
cmp
sarb
out
js
jge
lock
jg
testl
outsl
mov
and
aam
inc
adc
mov
add
cltd
mov
jnp
test
add
mov
or
mov
sub
xor
test
add
ds
add
push
xchg
sbb
cmc
cld
jnp
clc
xor
shl
shrl
stc
mov
sub
xor
int
mov
shll
cmp
jns
mov
xchg
cmc
mov
push
lcall
mov
mov
rclb
repz
repnz
dec
xlat
imul
inc
test
stos
adc
xchg
push
aad
fisubrl
inc
or
cmc
push
inc
sahf
and
lret
xchg
cwtl
daa
xor
dec
mov
loop
and
fsub
adc
test
imul
jb
cli
fcmovnbe
and
cwtl
nop
nop
inc
add
es
sbbl
pusha
jnp
mov
sbb
jnp
add
jmp
imul
mov
leave
dec
push
insb
iret
lds
sbb
ret
je
xor
pop
cmp
cli
scas
add
inc
xor
insl
or
jnp
ss
addr16
popa
in
mov
mov
jge
out
xor
inc
ret
bound
lahf
cmp
leave
mov
stc
outsl
rcl
lods
cmp
mov
aas
adc
push
mov
ja
inc
jae
out
mov
lds
addr16
push
call
ss
mov
xor
inc
stos
xchg
mov
fmull
leave
movsl
xchg
testl
jns
inc
ret
repnz
pop
jp
fidivrs
clc
adc
adc
imul
gs
inc
add
aam
cmp
stos
jnp
dec
jns
xor
aam
in
jae
ret
or
cmp
mov
pop
jmp
aas
push
and
movsb
cld
fdivr
adc
mov
sbb
mov
movl
in
sub
adc
and
lea
jnp
inc
mov
mov
pop
xchg
lods
loope
aam
jnp
sub
push
sti
stos
xlat
xor
jns
insb
sbb
movzwl
mov
xchg
fmuls
cld
cmpsl
mov
jno
int
pop
stos
hlt
jo
les
das
cmpsb
pop
cld
test
add
es
outsl
mov
push
adc
push
imul
jae
xchg
sbb
outsl
dec
xor
xchg
lret
mov
adc
mov
lods
or
mov
ds
movsl
adc
mov
push
inc
gs
call
cmp
xchg
adc
or
pop
jns
add
leave
stos
es
dec
inc
mov
shrl
and
mov
mov
or
mov
pop
loope
leave
pop
repz
cld
mov
push
cmp
push
jno
stos
inc
fbld
sub
jp
sahf
xor
adcl
xor
push
cmc
mov
aas
cld
test
add
mov
decl
pusha
cmpsl
push
fildll
jae
in
jp
fcomps
sbb
inc
pop
fisttpll
jno
jne
xchg
push
sahf
xor
test
arpl
add
xchg
add
jo
inc
int3
enter
shrb
inc
or
mov
ja
add
fiaddl
insl
lea
cmpsl
sub
add
mov
ret
or
jno
mov
sbb
addr16
pop
xchg
adc
imul
jb
int3
sbb
dec
sbb
addl
mov
pop
add
mov
xorl
mov
outsl
sub
out
stc
lret
ljmp
movsl
xchg
imull
in
fisubl
sbb
test
into
fucomi
sub
pop
mov
rcll
or
mov
cli
jno
sahf
dec
data16
or
inc
mov
cltd
stos
push
inc
es
outsl
and
out
mov
push
push
jbe
or
pusha
jl
cs
dec
les
in
mov
cmp
mov
dec
ljmp
sti
scas
mov
pop
aaa
cmp
popa
addl
pop
inc
enter
rcrl
sub
inc
rcll
sbbb
out
mov
jp
sbb
sbb
lods
cwtl
sbb
cltd
pop
cmpsl
xchg
mov
pushf
pop
negl
and
add
sbb
rorl
cmp
push
mov
sbb
dec
int
mov
push
mov
lock
loopne
and
xchg
mov
pop
and
add
inc
jnp
fildll
out
pop
int3
loopne
repz
loop
lods
je
clc
imul
sub
test
jmp
pop
loope
xchg
jo
aad
clc
add
adc
addl
js
inc
movsb
jnp
test
idiv
push
xor
popa
pop
ja
mov
clc
add
xlat
arpl
lahf
mov
clc
push
and
arpl
add
cmpsb
push
sub
adc
xchg
mov
xor
int
addl
push
jecxz
lock
and
mov
popa
jp
pop
test
popa
mov
xchg
cld
test
ret
dec
popa
jne
adc
sbb
test
insl
cli
mov
mov
adc
dec
dec
aaa
add
shlb
adc
mov
std
ja
inc
imul
add
sub
and
test
adc
mov
jnp
mov
js
arpl
scas
xor
mov
jns
dec
dec
or
sbb
pop
mov
push
push
or
or
out
or
cmp
ds
cmp
js
cwtl
sahf
bound
adc
mov
cltd
jge
xlat
inc
fisttpll
inc
loopne
mov
imul
dec
loop
imul
cltd
jl
bound
adc
das
adcl
add
cld
xchg
int
jp
lods
imulb
mov
sahf
clc
dec
inc
pop
movsb
sbb
mov
mov
mov
xchg
mov
lcall
mov
inc
xchg
in
inc
cmpsl
inc
adc
pop
gs
dec
arpl
mov
add
ret
sub
repz
xor
nop
xchg
jp
aas
mov
xchg
dec
into
mov
nop
inc
mov
mov
imul
mov
in
incb
mov
iret
add
in
or
inc
or
add
fimuls
clc
insl
ja
test
aad
mov
cmp
pop
loopne
push
and
jl
pop
xchg
call
stos
and
pop
fdivrl
mov
and
dec
mov
loope
inc
mov
inc
xchg
dec
pop
mov
aas
je
adc
jae
daa
mov
pop
lcall
cmp
mov
mov
cmc
mov
or
push
sbb
adc
cmp
cmpsl
in
jmp
add
pop
mov
add
jns
loopne
dec
mov
incl
mov
push
sahf
stc
jl
pop
jae
es
inc
and
jns
xchg
lods
cmpsl
bound
daa
faddl
loop
mov
jg
xor
pop
imul
mov
mov
add
and
loop
dec
xlat
enter
sub
das
mov
cmc
mov
fwait
mov
popf
mov
decb
fcmovnb
in
jl
cwtl
loope
outsb
dec
mov
xchg
jae
daa
mov
pop
jecxz
cmpl
jbe
mov
dec
mov
aaa
inc
mov
push
push
cmp
push
nop
or
mov
fsubrs
in
jl
sti
data16
sub
orl
stos
lods
dec
dec
in
subb
lret
xor
ficoml
sub
inc
dec
cmpb
fcoms
aad
sbb
nop
sub
xorb
sbb
js
hlt
cltd
repnz
js
cmp
fbstp
jns
loopne
mov
mov
sbbl
dec
mov
iret
in
mov
inc
jmp
bound
aam
xor
ss
push
call
pop
sub
mov
mov
fisttpl
lcall
pusha
cmpsb
jb
clc
shll
roll
add
jmp
xlat
mov
dec
xchg
jns
stc
xchg
stos
lret
popl
xor
xadd
or
aaa
pop
rcr
fmulp
pusha
addl
or
lds
dec
xchg
sbb
out
xchg
jle
sub
cwtl
sbb
adc
sub
mov
in
mov
push
pop
fwait
roll
mov
jb
enter
xor
enter
xchg
clc
ret
jno
or
mov
dec
jl
lock
lahf
inc
add
lret
pop
arpl
stc
cmp
fcom
icebp
jge
rcrl
xlat
data16
pop
mov
pop
xchg
loopne
sbb
js
aaa
call
clc
test
inc
movb
mov
faddp
jno
outsl
push
nop
pop
adc
lock
psrad
out
or
jne
inc
jl
xor
dec
adc
mov
jno
mov
out
jmp
pop
cld
ret
jge
fidivl
sub
add
cltd
mov
cmp
jbe
xlat
jbe
out
sub
orl
outsb
dec
idivl
xor
test
out
dec
cld
mov
pop
mov
lds
add
sbb
pusha
daa
xchg
adc
fidivl
dec
mov
int3
push
and
js
pop
cli
add
test
pop
pop
nop
pushf
rclb
xor
rcr
or
ja
xlat
pop
stos
jmp
into
daa
data16
lcall
mov
stc
inc
dec
shlb
mov
xor
mov
xchg
mov
push
sbb
fisttps
cs
push
cmp
sbb
sub
inc
pushf
sub
repnz
imul
lret
es
lret
pop
ret
lods
sbb
test
jmp
dec
test
sub
jns
inc
jle
dec
adc
sti
lods
outsl
mov
pusha
loopne
movsl
outsb
or
adc
popa
and
fstl
xor
jns
cmp
xchg
sub
pop
int3
inc
dec
in
mov
sub
sbb
xor
fiaddl
data16
pop
xor
or
push
and
mov
mov
in
dec
pop
mulb
pop
mov
and
lock
mov
xor
jp
sbb
dec
lods
fs
orb
lahf
jne
pop
push
int
sub
insl
shlb
cmp
mov
pop
jno
mov
mov
out
and
test
icebp
ret
fistpll
xchg
or
xchg
arpl
fisubrs
repz
xchg
mov
and
inc
cmc
xor
inc
adc
pop
dec
sbb
inc
das
scas
sbb
jne
aaa
push
pop
stos
jp
arpl
sub
xor
xchg
dec
sub
adcb
aas
imul
adc
pop
push
sub
pop
dec
push
loope
sbb
les
into
cmp
pop
ja
cmc
push
aam
out
into
or
aas
pusha
mov
outsb
bound
cmpsb
dec
sbb
or
scas
xor
mov
jmp
imul
sbb
mov
insb
mov
sub
push
cmp
sub
and
jmp
jne
stc
sbb
add
idivb
mov
jg
xlat
xchg
ds
fmuls
pop
cmpsl
sbb
xchg
out
test
orl
jecxz
arpl
enter
fidivs
sti
pushf
aaa
data16
test
mov
dec
stos
push
adc
data16
dec
iret
push
cwtl
mov
rclb
sub
je
mov
add
jmp
out
ss
mov
fmull
mov
xlat
out
stos
mov
sbb
adc
mov
iret
outsb
sub
shl
and
cmp
sbb
fadd
pusha
lcall
xor
cwtl
rcll
adc
cwtl
scas
pop
dec
addr16
jg
inc
push
mov
out
sti
int3
add
pop
mov
ljmp
shrl
les
imul
andl
mov
mov
decl
cmc
lock
mov
test
lret
jle
or
pop
push
aad
ret
dec
xchg
stc
or
xchg
pusha
andb
cwtl
push
or
lds
bound
pop
add
add
outsb
lret
pop
int
xchg
or
imul
mov
inc
out
or
bound
lcall
xor
fildll
hlt
adc
jne
jns
rcrb
arpl
push
lret
decb
call
ljmp
fisttps
sahf
loop
sbb
lock
push
push
jmp
mov
aas
rcll
jp
shlb
jne
popf
or
jo
fmul
push
or
push
ja
xorps
push
fidivrl
xchg
xchg
daa
std
dec
das
daa
mov
jecxz
rcll
mov
cld
sbb
mov
or
cmc
movsl
pop
mov
lds
mov
adc
lret
inc
jae
fidivrs
sahf
neg
add
mov
aam
inc
fisubl
repz
mov
les
shr
lds
ss
sarb
xor
loop
fdivrs
sub
sbb
jne
inc
jg
cwtl
sub
test
mov
xchg
loopne
cmp
ja
dec
push
push
lods
dec
jmp
jb
mov
adc
push
mov
hlt
or
jle
pop
inc
xor
add
pop
cmp
and
test
and
add
cwtl
out
xorb
cmpsb
sub
jne
ds
gs
adc
adcl
cltd
and
ds
out
sbbb
cltd
xchg
aad
dec
and
mov
xchg
popf
xchg
fs
sub
in
xor
adc
enter
sbb
push
mov
popf
loop
imul
inc
or
sti
out
jne
xchg
and
push
pushf
mov
pop
pushf
popl
mov
icebp
addr16
imul
pop
and
int
addl
mov
ds
in
dec
sbb
add
or
in
sbb
jns
fstpt
clc
mov
aad
jmp
fadds
push
adcl
jge
int
inc
cmp
mov
daa
ds
dec
inc
clc
cld
imul
jns
xor
push
adc
nop
dec
sub
pusha
clc
push
and
cmp
xor
mov
sbb
sub
cli
popl
ret
push
pusha
out
out
add
pop
out
xchg
lock
and
sahf
test
jle
out
mov
dec
xor
cwtl
ljmp
scas
in
ja
mov
lea
xchg
xor
stc
push
cmp
or
imul
mov
ljmp
push
pop
jb
std
nop
push
inc
or
pop
jo
mov
and
mov
aad
call
fwait
mov
sbb
sbb
ja
jge
cmp
faddl
mov
inc
test
jl
jmp
stc
inc
sbb
push
jg
in
mov
jp
sub
mov
inc
sub
mov
scas
jl
add
jne
mov
pop
xor
adc
aas
iret
push
jle
pop
sub
in
inc
cld
arpl
daa
add
or
fcmovne
cmp
sub
movsl
or
push
xchg
sub
scas
pop
inc
and
dec
sub
sbb
scas
ljmp
hlt
jno
cltd
pop
xchg
adc
lahf
adc
into
std
pusha
pushf
mov
mov
mov
cmp
sub
lret
scas
fcompl
fdivrs
sbb
sub
cmp
les
xchg
jo
daa
inc
push
aad
xchg
jns
aam
adc
arpl
push
insb
dec
and
xor
scas
nop
mov
arpl
icebp
fists
add
lret
movaps
mov
push
xchg
arpl
int
lods
and
dec
mov
loop
xor
mov
jne
mov
lret
sub
insl
pop
sub
into
sbb
jmp
cld
lcall
mov
js
int
test
dec
sbb
push
lcall
and
xor
xchg
cwtl
stc
xchg
lods
rorb
inc
subl
xor
popa
test
mov
pop
sbb
fistpll
dec
mov
sbb
test
fisubl
pop
fildl
popf
scas
inc
inc
lret
nop
jl
or
test
dec
add
arpl
test
mov
push
ficoml
pop
cmpsl
test
insl
out
lock
xor
fsubs
outsb
pop
fiaddl
out
mov
pop
sub
mov
xchg
push
jp
fs
cltd
cwtl
inc
jmp
stos
shlb
pop
arpl
popf
mov
movsl
fildll
dec
push
fisttpll
ja
adc
jmp
adc
cmpsl
push
dec
into
rorl
and
icebp
dec
rcrl
pop
mov
dec
pop
mov
call
lods
loop
mov
mov
push
dec
and
xchg
add
pop
das
jmp
push
bound
roll
icebp
cwtl
or
insb
xlat
stos
mov
cmp
test
and
test
fcompl
xchg
push
pop
cs
jnp
xor
inc
pop
lret
lcall
mov
push
fsubrs
ret
mov
icebp
enter
push
pop
aad
jns
dec
sbb
inc
into
adc
cmp
add
mov
and
and
gs
pop
lret
inc
mov
addb
mov
jp
scas
jnp
add
adc
and
nop
xchg
or
fnstsw
int3
fidivs
pop
pop
je
sahf
icebp
fisubs
xchg
and
inc
adc
cmp
push
loopne
fists
fwait
pop
cmp
add
jbe
pop
sub
mov
shll
xor
das
loope
leave
lret
fwait
lods
mov
adc
and
ljmp
gs
dec
loop
inc
es
fsts
imul
nop
test
dec
sbb
dec
mov
ljmp
mov
in
out
sub
jbe
mov
movl
das
pop
mov
jmp
pop
cmp
cmpsl
sub
cmp
sbb
add
orb
sbb
aas
test
jge
adc
fwait
into
push
ret
pop
popa
mov
xchg
xor
xor
clc
dec
int
jmp
push
mov
int
jbe
mov
push
cmp
pop
shll
push
pop
jmp
mov
mov
inc
pop
insl
sbb
mov
mov
or
in
lods
mov
test
and
daa
dec
pusha
scas
mov
loop
daa
xor
xchg
cltd
xchg
dec
outsl
mov
lahf
pop
xchg
pop
jle
fnstsw
ret
sbb
xor
lods
lods
fldt
dec
or
mov
out
xchg
mov
leave
orl
test
daa
int
jnp
dec
loopne
and
out
xor
pusha
mov
xchg
subl
jp
mov
add
rcrl
test
in
bound
leave
fsubrs
stos
lds
jmp
dec
jbe
rolb
loopne
test
les
sub
push
ss
xchg
mov
int
popf
add
xor
in
mov
into
movsl
jmp
mov
fmull
mov
push
repz
push
and
rcr
repnz
negb
or
gs
pusha
aad
icebp
dec
push
in
mov
dec
xchg
insl
push
fstpl
call
dec
int3
roll
xchg
mov
shrb
jns
or
xchg
fldl
stc
pop
mov
pop
int3
setp
jmp
test
mov
sar
and
test
cmp
mov
ja
xchg
mov
and
add
mov
xorb
aaa
dec
sub
inc
pop
xor
movsb
ret
pop
stc
cmpl
pop
dec
das
push
iret
divb
xchg
add
dec
shll
jns
mov
addl
sbb
sbb
and
dec
add
rclb
gs
mov
cs
in
cmp
aam
sbb
mov
jg
and
sti
pop
cmc
sbb
cmp
ror
add
jp
hlt
out
rcr
fs
mov
ss
lret
out
int
icebp
aam
pop
les
push
or
aam
and
mov
pop
daa
add
add
lcall
add
xor
mov
xchg
test
jb
fsubrs
hlt
loopne
das
rcrl
cli
mov
dec
rol
mov
andb
push
inc
imul
adc
arpl
lret
cmp
rorl
lahf
fdivr
pop
dec
dec
cmp
hlt
nop
pop
push
pop
out
cs
pop
scas
inc
add
ja
dec
inc
jno
das
rolb
adc
mov
sti
push
ss
inc
ds
xor
or
dec
jmp
ret
and
inc
jne
cmp
lds
sbb
std
out
xchg
test
jns
mov
and
fucomi
lods
cltd
xlat
call
xchg
inc
mov
icebp
dec
push
jbe
sub
das
lret
scas
aas
xchg
mov
xchg
fidivs
sti
mov
push
test
repnz
xchg
inc
sbb
lods
in
push
adcb
cmpsb
mov
adc
push
add
sub
cltd
sar
pop
sbb
and
mov
push
mov
or
push
xchg
bound
push
cmp
xor
jne
and
xchg
aad
and
in
jno
sbb
loop
aad
movsb
jle
jne
pusha
repnz
inc
dec
or
test
pop
pshufw
cwtl
mov
movsl
xchg
sahf
rorb
cmc
add
and
cmpsb
cwtl
fidivs
jbe
fadd
clc
adc
loope
inc
add
js
push
mov
mov
sbb
jle
xor
addr16
sub
or
rcrl
leave
outsb
sbb
fists
sysenter
mov
mov
push
lret
and
pop
push
sarl
add
jno
icebp
xchg
js
stos
adc
enter
mov
xor
scas
mov
ficoml
aam
ret
icebp
adc
xor
sub
dec
in
inc
mov
cmpsl
mov
test
and
adc
push
inc
fsubrs
pop
inc
adc
jns
jbe
out
fisttpl
loop
jp
out
sbb
loope
out
mov
jp
xchg
mov
jmp
jae
dec
lods
jge,pt
mov
repz
add
xchg
sub
nop
ret
arpl
sbb
sub
jg
dec
push
mov
call
xor
sub
mov
orl
into
push
xor
daa
lods
adc
sub
mov
sub
insl
mov
gs
jae
xchg
mov
mov
adc
in
into
pop
jl
cmp
mulb
and
imul
mov
jl
dec
inc
cmp
jle
mov
out
aad
or
stc
jge
loop
loop
ret
mov
ja
mov
xchg
and
pushf
add
ret
in
fwait
lods
int
adc
xchg
addl
sbb
push
inc
xlat
dec
push
mov
pop
into
into
and
int3
sub
jmp
cli
dec
inc
xchg
mov
addr16
cld
stc
or
xchg
jbe
hlt
test
add
cwtl
cmp
dec
ljmp
dec
fbstp
jbe
cs
cmp
ds
add
jo
push
cmpsl
pop
sbb
mov
shrb
ja
and
iret
out
push
or
or
in
add
outsb
mov
or
pop
dec
and
inc
sub
pop
outsl
loop
xor
push
js
ljmp
push
lret
sub
dec
fidivrs
jp
mov
jnp
sub
or
mov
inc
add
shlb
lret
jo
mov
nop
dec
sti
cmc
ds
xor
popf
xchg
xor
fxch
add
cld
jle
dec
cmp
int
cmp
lea
dec
outsb
pop
popf
and
pop
movsb
jle
mov
fidivrl
dec
scas
pop
fidivl
pop
dec
cmp
push
add
out
ror
jl
sub
movsl
xor
out
sbb
push
or
cmp
jle,pt
or
or
into
repz
js
xchg
icebp
daa
insl
shlb
cmp
cmp
imul
cmp
imull
aad
add
inc
cmc
mov
add
cmp
mov
xchg
fs
lret
push
jbe
stos
xor
cmpsl
and
xor
lock
scas
lock
repnz
fisubl
insl
cmp
xchg
xchg
pop
mov
fs
push
sub
mov
mov
pop
aas
mov
xchg
lahf
sbb
faddp
fildl
insl
and
test
sbb
dec
push
lea
sbb
in
dec
mov
push
add
cmp
addb
out
fwait
cmp
dec
mov
mov
pop
inc
push
inc
mov
push
push
xor
aam
add
push
shlb
dec
cld
fscale
mov
sahf
jb
repnz
out
mov
mov
shr
push
cmpsb
xchg
sbb
cwtl
scas
add
mov
rcrb
add
xchg
sti
ss
cltd
insb
jae
mov
pop
pop
jne
bound
push
out
pop
cmp
mov
popf
or
iret
andb
inc
xlat
test
insl
and
repnz
xorl
int3
loop
andl
xlat
or
shlb
pop
mov
mov
insl
cmc
addr16
leave
fisubs
xchg
test
rcrb
into
mov
inc
xchg
jge
ds
int
lret
jno
and
or
loop
mov
rorb
push
scas
ja
addr16
daa
add
cmp
arpl
adc
sbb
xchg
cmp
sbb
cmp
sbb
call
xchg
mov
rcr
lcall
xchg
inc
sub
xlat
cmc
mov
mov
adc
sub
xchg
inc
fs
push
mov
outsb
add
int
cmp
insl
jae
pop
pop
xchg
outsb
push
sub
and
jge
loopne
repnz
pop
add
jns
ret
push
mov
adc
daa
adc
ret
dec
jg
xor
mov
call
ja
pop
push
into
xchg
stos
js
dec
stos
outsl
test
inc
imul
or
lret
pop
rcrb
pop
push
ja
lods
dec
xchg
sub
psraw
fcmovne
repnz
ret
sub
lods
push
sbb
jp
jecxz
nop
lea
mov
cmp
xchg
aaa
sub
sarl
aam
fldln2
mov
imul
enter
push
insl
dec
sub
mov
pop
and
fldt
out
dec
test
mov
inc
push
rorb
sbb
lahf
adc
test
xchg
push
mov
mov
pop
mov
ja
sbb
dec
add
push
bound
ret
fs
stos
pop
getsec
jg
push
mov
inc
fisubrl
cmc
imul
dec
and
mov
data16
jecxz
stc
in
sub
sub
or
arpl
push
clc
xchg
xchg
push
and
rolb
test
fstps
aas
add
sbb
ss
inc
lahf
andb
mov
test
xor
sahf
dec
jo
bound
leave
mov
pop
xchg
jge
cmp
pop
mov
jb
mov
in
mov
enter
xor
es
xchg
lods
mov
push
in
int
outsb
and
push
hlt
jbe
sbb
lock
mov
xchg
or
fwait
jbe
cmp
fcmovne
and
mov
je
mov
xchg
sarb
or
test
fstp
mov
popa
dec
sub
mov
cmp
mov
pop
pmulhuw
loop
movsl
inc
bound
push
addr16
adc
mov
mov
mov
lahf
and
mov
mov
sub
jbe
int3
jnp
fimuls
out
pop
fidivs
fwait
mov
es
or
pop
outsb
mov
lret
push
push
pop
cli
in
repnz
xor
imul
mov
push
inc
jnp
addl
adc
shl
mov
cmp
lock
or
clc
sub
jmp
divb
movsb
xchg
mov
test
mov
out
int3
in
add
stc
fdivrp
rol
scas
sahf
mov
pop
add
rorb
mov
pop
fildll
push
push
mov
pop
jmp
xchg
pop
cmpsb
fmulp
sub
repz
pop
call
or
mov
cmpb
aad
shl
mov
or
push
mov
add
dec
fdivrs
inc
push
push
jns
sbb
pop
sti
jns
mov
mov
add
add
movsl
cmp
adc
mov
jb
sub
inc
test
sahf
adc
add
daa
xor
sub
js
sub
jae
xor
lea
popf
and
ret
mov
flds
xchg
negl
call
push
mov
enter
lock
loop
or
push
and
shrb
pop
and
call
cmpsl
stc
mov
insl
jmp
sbb
xor
rorb
mov
roll
sub
xchg
in
xor
push
fsubrs
dec
insb
mov
mov
repz
xor
mov
stos
fcompl
das
fistl
lods
pop
add
xor
fs
jns
pusha
mov
xor
shrl
int
loope
jne
xlat
je
loopne
mov
imul
cmp
mov
lret
mov
in
out
inc
lods
popf
ja
in
dec
cmp
es
jb
push
int3
xchg
mov
and
push
and
test
sub
dec
ja
cmp
jmp
mov
dec
mov
lret
jb
jecxz
out
into
out
add
in
dec
andl
adc
in
xchg
or
movsl
cmp
ss
xchg
push
addr16
inc
push
mov
inc
mov
push
imul
test
fcompl
popa
mov
fsts
mov
dec
adc
test
sbb
leave
xor
sub
mov
add
call
jno
cli
mov
inc
and
loope
sarb
movsb
cltd
inc
popf
daa
add
adc
lods
les
repz
and
cltd
push
out
sbb
inc
loopne
lret
pop
out
sbb
icebp
xchg
sub
cltd
jb
and
gs
jmp
push
ja
lods
or
lods
xchg
enter
lret
pop
push
movd
lds
fistpl
jnp
mov
insl
or
dec
repnz
insl
mov
mov
adc
insb
loope
pushf
mov
add
aas
fmulp
jne
inc
and
imul
imul
mov
jmp
jnp
add
mov
and
pop
popa
push
insl
add
scas
movsb
rcrb
mov
out
std
out
sub
pop
push
call
mov
cld
ja
dec
sbb
cmp
cli
shlb
pop
jp
inc
cmp
packsswb
pop
jecxz
ror
jno
add
repnz
lcall
test
cmpsl
fistl
jle
xchg
xchg
insb
add
je
lds
mov
sub
addb
ret
loopne
jnp
ljmp
jns
pop
sub
popf
sti
mov
and
pop
fsubl
and
add
out
or
ret
inc
call
mov
loope
sub
test
adc
leave
add
sbb
mov
out
mull
into
jge
ret
cmpb
push
orb
scas
scas
aad
je
call
xchg
xchg
xchg
outsb
mov
cmp
das
out
lods
lret
pop
or
adc
outsl
sti
insb
ja
ja
jg
fcmovbe
dec
jne
sub
leave
mov
sbb
jg
dec
fs
jmp
jb
lea
popf
cmp
jno
dec
mov
inc
mov
cld
pop
or
sti
insl
jg
sbbb
dec
mov
mov
or
enter
fsub
jb
dec
mov
inc
xorl
fwait
ja
xor
mov
jno
popf
push
and
fldt
lods
imul
shll
sub
pop
mov
loopne
into
sub
push
andl
inc
or
fwait
inc
cwtl
addb
sub
push
sub
and
xor
jg
aad
cmpsl
cwtl
xchg
adc
inc
int3
out
jns
jl
and
mov
movsl
in
adc
or
ja
icebp
fisubrs
xor
ljmp
dec
dec
add
xchg
fxch
clc
push
pop
or
jg
out
lret
xchg
mov
pop
fcmovb
stc
or
and
incl
adc
dec
stos
pop
sahf
repnz
adc
adc
mov
addr16
jge
cbtw
and
jl
in
leave
into
mov
aad
mov
repnz
cmc
sbb
jne
out
out
into
pop
pop
rcl
out
cli
add
xor
out
pop
bound
aaa
hlt
pushf
push
pop
rclb
push
or
sub
imul
popa
push
adc
inc
and
xchg
mov
xchg
fildl
dec
xchg
in
aaa
xchg
loope
pop
jns
pop
insb
and
ja
mov
cmc
push
je
cmc
push
dec
push
scas
adc
cli
icebp
and
sbb
fimuls
aad
jb
adc
mov
pushf
jne
sbb
cli
cmp
out
xchg
ret
inc
mov
jne
mov
xlat
fldl
loop
ret
mov
lcall
int3
int
sub
rolb
inc
mov
lods
add
leave
inc
jo
int
jl
pop
sarl
mov
iret
fwait
mov
ja
popf
lret
push
dec
ja
xor
inc
ror
in
sub
enter
or
movsb
fimull
cmp
clc
push
cmp
out
fwait
testl
xchg
cld
mov
cmpb
lods
dec
sub
add
loopne
adc
jge
int
vmwrite
pop
je
mov
fsubl
lds
fidivrs
add
pop
repz
jno
shlb
add
addl
jmp
mov
cmc
xchg
and
xor
dec
inc
int
cmpsb
insl
or
push
test
and
pop
pop
call
imul
scas
popf
jno
aas
xorl
in
or
sarl
jno
sub
jmp
sub
loopne
mov
in
dec
lea
aaa
mov
scas
addl
pop
fistps
int
aam
setae
sbb
dec
subb
jne
lret
iret
inc
jno
das
int
xlat
sbb
mov
xor
ss
dec
lock
xchg
mov
mov
jge
fisubs
addr16
outsb
movsl
pop
jg
push
aaa
fiaddl
sti
daa
mov
mov
out
dec
mov
jae
fcoms
loopne
gs
adc
sbb
mov
call
pop
es
insl
push
dec
ret
ss
push
fsts
xor
mov
insl
fmulp
or
pop
mov
pusha
xor
pushf
shlb
jmp
mov
outsl
sbb
lret
jo
xchg
push
inc
mov
cli
dec
sbb
scas
pusha
xor
pop
fnstenv
inc
cld
pop
adc
mov
mov
cmpsl
outsl
add
jno
jb
outsb
cmp
xlat
scas
cld
xor
sub
pop
and
or
jge
repz
cmp
jno
inc
inc
push
push
jnp
test
mov
jl
mov
push
xchg
and
sbb
fs
dec
es
lcall
sbb
xlat
insl
cli
sbb
add
push
das
pop
add
popa
hlt
mov
lods
pop
xor
shll
ret
sub
or
add
jmp
jl
add
push
andb
cmp
jle
or
ljmp
ds
mov
sbb
mov
jne
lret
test
daa
lahf
cld
jbe
rcrl
insl
jl
iret
loope
stos
leave
mov
and
mov
pop
sbbl
js
inc
jo
lea
and
mov
xor
push
mulb
xchg
scas
dec
test
int3
inc
and
int3
xchg
negb
iret
lret
cmc
and
inc
mov
std
cs
ljmp
into
pop
int3
das
add
mov
repz
or
xchg
cmp
cmp
out
jnp
pop
sahf
pushf
adc
das
lahf
cmp
hlt
cmp
xor
mov
pop
add
jmp
insl
test
add
rcrb
lea
repz
shlb
into
in
shll
xor
jl
sti
cltd
push
push
data16
pop
lea
dec
stc
andl
or
daa
bound
sub
insb
jp
cs
sub
mov
inc
cmp
sub
mov
mov
jb
pop
mov
loop
cmp
scas
idiv
cs
lods
fists
jl
xchg
xchg
cmpsl
test
arpl
cltd
fdivrl
fsubs
xchg
icebp
into
xor
push
inc
pop
jno
sti
sbb
sub
pop
mov
rolb
gs
decb
push
hlt
std
pop
adc
xlat
call
xor
jno
sahf
js
inc
imul
pushf
xor
mov
int3
lahf
int
subl
std
fdivrs
mov
imul
andb
mov
cltd
adc
pop
into
add
add
arpl
mov
adc
xchg
stos
incl
fidivs
jle
lea
pop
jg
stos
push
xor
ds
scas
push
or
movsl
out
push
dec
arpl
xor
cmc
sbb
sti
aam
insl
push
aam
stos
cmp
mov
xchg
out
add
imul
lahf
pop
jae
xor
xor
pop
out
fisubrl
sbb
or
lahf
pop
in
pushf
add
lods
inc
pop
xor
xchg
pop
adc
xchg
push
nop
loope
mov
sub
cli
xor
addr16
cs
into
cmp
xor
inc
cmpl
dec
int3
or
lret
adc
add
gs
dec
shrl
out
mov
mov
xchg
xchg
out
repnz
divl
cs
sub
lods
cmp
pop
fidivs
cs
push
aas
shr
out
adc
imul
ss
dec
or
pop
xor
push
movsl
push
loopne
lret
mov
repnz
out
daa
xor
mov
dec
sti
mov
mov
sarb
ljmp
pop
mov
rcll
fidivl
mov
bound
lds
xor
daa
and
pop
add
cmpb
je
leave
add
jb
and
xchg
fwait
test
mov
dec
inc
mov
std
xchg
out
int
pop
lds
divb
mov
cwtl
inc
mov
xchg
and
lret
dec
insb
jns
cmpsb
inc
dec
adc
lret
cmp
mov
pusha
mov
movsl
cmpsb
jmp
push
inc
xchg
bound
jne
sti
sbb
cwtl
lcall
ss
decb
jnp
js
stc
lea
mov
test
out
leave
dec
mov
ficompl
ds
mov
jns
loopne
gs
pop
adc
mov
fldt
mov
fwait
xchg
es
out
sub
push
adc
fwait
lods
in
mov
push
dec
xor
sub
push
lods
sub
push
xor
ret
into
mov
sbb
mov
cld
mov
scas
pop
loop
or
mov
fstpl
sub
mov
xchg
ret
add
jmp
sahf
sbb
dec
out
ljmp
and
dec
ret
out
add
leave
out
mov
aad
add
insl
iret
mov
fsubl
sbb
push
rorl
ret
mov
aad
sub
repz
push
out
in
jg
push
bound
push
add
dec
scas
loop
xchg
out
cltd
divb
pop
filds
testl
pop
scas
dec
mov
mov
in
mov
icebp
fsubrl
pusha
clc
xor
inc
push
sub
sbb
test
xchg
rcl
dec
daa
std
mov
les
cmpb
popf
shrb
dec
lock
scas
in
inc
pop
mov
mov
in
push
xor
xchg
inc
pop
jnp
lret
push
xlat
push
pop
movsb
sbb
int3
push
dec
stos
ret
mov
jns
push
call
xchg
int
sbb
mov
mov
sbb
fists
dec
jg
imulb
pop
adc
call
pop
cmp
inc
repnz
and
arpl
lds
and
pushf
pop
stc
mov
mov
jle
dec
cmp
push
mov
inc
insb
out
daa
std
jne
mov
ljmp
loop
pop
push
jbe,pt
es
or
mov
inc
adc
ja
sbb
call
sbb
mov
pusha
pop
repnz
test
mov
inc
add
push
xor
dec
mov
dec
iret
nop
mov
outsb
imul
mov
out
sbb
mov
push
scas
mov
in
ljmp
dec
shl
sahf
out
test
xchg
xor
repz
leave
xchg
mov
imul
jae
ja
cmp
mov
or
xlat
fstpl
xlat
sub
mov
mov
iret
xlat
mov
cmp
aaa
in
xchg
iret
sbb
cmc
inc
cld
ret
lods
jecxz
outsb
add
jb
fdivrp
scas
push
inc
adc
xor
pop
dec
mov
sub
sbb
dec
push
ja
sbb
xchg
daa
repnz
dec
ret
iret
add
push
sub
out
mov
iret
shrl
enter
jp
jns
aas
mov
sbb
out
adc
fisubs
sub
rorb
cmpsl
xchg
xor
mov
insl
movsb
push
sbb
in
jle
iret
mov
add
inc
mov
xchg
cwtl
inc
outsl
idivb
push
mov
mov
aaa
nop
dec
inc
out
out
int
out
jmp
cli
lds
mov
fisubrl
push
imul
sbb
movsb
das
stc
out
or
sbb
repz
mov
in
rep
cli
fs
mov
jne
rclw
andl
lock
or
sub
jecxz
add
mov
jne
mov
dec
stc
add
hlt
add
push
jnp
iret
adc
sub
inc
out
push
dec
in
pop
pushf
jle
mov
mov
pop
rcr
ja
xor
addr16
push
mov
out
fldcw
dec
mov
adc
scas
push
or
mov
mov
jl
lret
leave
dec
mov
cld
incb
xchg
movsl
mov
xor
jl
pop
lds
gs
dec
das
mov
fisubrl
in
test
xchg
cmp
mov
ret
xorb
aas
scas
or
sbb
pop
mov
shlb
mov
and
adc
adc
shr
mov
pop
xchg
push
jbe
xor
push
jbe
ss
sahf
ljmp
pop
push
inc
jp,pn
inc
cli
cmpsl
cmpsl
call
cmp
leave
outsb
xchg
lock
fcomip
push
sub
push
std
and
loop
iret
xchg
and
xor
jg
dec
or
shrl
lods
xchg
adc
js
fldcw
out
pop
jno
jge
rclb
inc
adc
stc
aam
rcrb
fsubs
shll
lret
loopne
insb
sbb
ret
push
mov
add
data16
xchg
das
fadds
push
pop
insl
jne
mov
inc
mov
pushf
dec
push
push
xor
cmpsb
xchg
and
push
mov
cmpsb
cmp
leave
nop
shl
cltd
push
mov
lret
inc
or
aas
sbb
stos
add
mov
adc
jno
insl
mov
mov
pop
imul
jnp
lods
or
pushl
imul
stos
xor
nop
jg
and
lahf
nop
xchg
xchg
mov
xor
js
mov
frstor
add
or
repnz
aad
out
fwait
lea
enter
lret
sub
aaa
adc
push
xchg
cmp
jp
push
fimuls
ret
dec
jle
mov
ds
and
pusha
sub
push
mov
xchg
dec
pop
arpl
addb
js
lcall
aas
insl
cli
xor
rcrl
pushf
daa
lods
mov
bound
sti
lcall
pop
lret
push
or
mulb
mov
mov
shlb
scas
or
out
shr
pop
dec
mull
inc
jno
aad
xlat
mov
jb
and
rcrl
stos
jo
test
xor
mov
cmpl
iret
addr16
mov
adc
mov
push
mov
loopne
je
lahf
xchg
or
clc
cmp
cmp
sub
shrl
je
push
lock
mov
cwtl
out
outsl
dec
cmpsl
loopne
and
sarb
sbb
push
mov
scas
xor
mov
add
shlb
mov
adc
push
das
mov
ss
fidivl
gs
and
aad
aad
sahf
mov
sub
mov
imul
lds
repnz
das
cmp
push
cmp
loope
les
rorb
adc
pop
pushf
mov
cmp
cmp
jns
or
outsb
jl
xor
or
or
mov
cmp
lret
jns
jle
sub
add
mov
mov
adc
or
imul
inc
daa
mov
sbb
ss
out
xchg
mov
pop
or
cli
inc
divb
dec
das
aam
sbb
je
cmp
fists
imul
or
jb
insl
lcall
push
or
adc
jbe
xor
test
fcompl
push
mov
mov
cmp
sbb
lahf
pop
inc
fstps
jl
push
push
or
mov
dec
cmp
xchg
mov
nop
insb
repz
mov
push
and
cmp
stc
popf
xchg
mov
out
pop
stc
xchg
xchg
movsl
cs
mov
dec
lods
push
xchg
sbb
push
push
xchg
add
icebp
hlt
fisubl
pop
popa
lds
inc
mov
pop
or
aaa
clc
inc
mov
pop
xchg
mov
movsl
movsl
xchg
or
and
popa
lea
jl
imul
outsl
jmp
sub
aam
sbb
pop
sub
or
mov
pop
dec
insl
dec
xor
mov
adc
mov
clc
xchg
and
dec
push
imul
dec
mov
fdivl
dec
add
shlb
lods
cli
sbb
pusha
fxch
or
mov
inc
imul
das
push
sbb
neg
jge
arpl
mov
and
out
sub
into
mov
cmp
imull
inc
loop
add
stos
out
inc
mov
aad
xchg
das
jmp
or
mov
iret
cld
jmp
sahf
xchg
shl
push
push
pop
push
cmc
test
lock
popa
mov
dec
add
lods
sbb
sarl
jae
push
lret
imul
fmuls
mov
les
leave
ds
arpl
jae
mov
movsb
fiaddl
cmp
in
adc
vpaddq
enter
sarb
adc
jns
mov
jle
add
push
xchg
dec
pop
mov
dec
dec
xchg
repz
push
xor
sub
roll
hlt
inc
jecxz
xchg
imul
ss
ss
cmpsb
fisubrl
add
xchg
arpl
cltd
inc
scas
or
pop
pop
rcrb
push
pop
andb
test
sti
push
ret
lcall
dec
jae
repnz
xor
fsubl
and
ja
inc
stos
iret
nop
shl
in
mov
inc
pop
stc
adc
dec
test
push
repnz
xchg
xchg
mov
lds
cli
inc
sub
aaa
add
jmp
scas
lret
int3
leave
test
jae
cmc
xchg
mulb
orb
in
mov
or
adc
fiaddl
sub
jmp
rep
aad
and
jecxz
jmp
sub
jb
or
adc
call
subl
mov
popf
jg
xor
jle
mov
cmpsl
in
jb
push
jo
ja
ret
sarl
js
stos
push
movsb
mov
in
inc
cltd
cld
cwtl
pop
dec
mov
or
xor
ret
mov
loop
jb
ficoms
and
sbb
jle
out
xchg
icebp
sahf
adc
aad
leave
push
mov
aam
xor
dec
addb
xchg
pop
and
mov
jns
lret
sbb
into
pop
lock
cs
mov
add
es
mov
imul
mov
xchg
shl
repnz
movsl
mov
scas
popa
mov
push
or
jnp
cmp
mov
das
cwtl
and
mov
mov
roll
push
lret
sahf
push
shrb
test
push
inc
mov
mov
divb
out
arpl
push
cs
push
gs
inc
in
jbe
adc
aad
fdivrp
data16
dec
pushf
jecxz
scas
sbb
outsl
push
movsb
add
inc
sub
jl
pop
push
pop
mov
loopne
xor
push
xor
es
mov
movsl
rolb
rorl
fldt
and
in
sub
jns
xchg
cmp
popf
cmc
divl
in
shl
lcall
adc
icebp
pop
stc
repnz
stos
pop
inc
jbe
add
lret
faddl
jge
push
in
jl
add
and
outsl
jge
lret
xor
daa
sub
push
mov
push
ss
sub
cld
std
sub
dec
enter
fwait
in
stc
fwait
cmp
xchg
loope
sub
mov
inc
sub
push
jnp
sub
xchg
stc
sbb
ret
mov
sbb
xchg
scas
add
mov
call
out
push
adc
and
and
mov
jo
inc
pop
mov
pop
cli
sbb
inc
aad
push
mov
loopne
push
jnp
inc
out
scas
push
arpl
pop
out
outsl
sub
pusha
lahf
mov
push
cmp
cmp
fsubp
stos
iret
mov
jp
cmpsb
mov
into
mov
nop
jp
je
sbb
mov
into
add
sub
test
std
mov
push
push
inc
push
lahf
cmpsb
aam
in
call
xchg
clc
fstpl
jnp
daa
push
xchg
in
mov
test
dec
sbb
xorb
add
pusha
and
ret
mov
cmp
das
jns
test
enter
xchg
daa
iret
lea
xchg
dec
mov
imul
in
adc
pop
pop
cld
cmp
fsubl
fbld
loope
ret
cmp
push
sbb
push
sub
inc
movsb
push
stc
pop
dec
dec
adc
cmp
sbb
mov
lret
mov
daa
mov
stos
sbb
js
imul
xchg
push
fildll
and
into
cmc
xchg
inc
and
or
sub
shl
xor
mov
daa
pop
imul
lcall
jo
inc
shll
add
xchg
stc
jno
pop
cli
inc
daa
mov
sti
add
mov
add
in
insb
lret
daa
ljmp
mov
pop
pop
jmp
add
push
into
sbb
add
test
adcl
or
pop
mov
fcomps
scas
fildl
mov
aaa
ja
xor
scas
gs
jbe
ret
sbb
mov
das
mov
pop
mov
push
in
fcomip
mov
ljmp
sub
cmp
addl
sub
out
sbb
push
push
stc
loop
bound
cmp
and
cltd
sub
fisttps
adc
fildll
cltd
xchg
inc
gs
mov
jle
adc
jae
jge
test
jmp
mov
aas
jae
gs
mov
pushf
and
cmp
ljmp
or
lds
testb
push
hlt
push
fldenv
outsb
fcmovne
fstps
and
imul
jne
inc
insl
jne
cli
and
jo
and
add
mull
mov
or
sbb
iret
or
loopne
test
fxch
sbbl
fidivrl
lea
out
ret
cmp
push
xor
push
sbbb
nop
pop
mov
push
push
sbb
fstpt
sahf
push
fs
push
jbe
pushf
das
test
push
divl
repnz
jmp
sub
scas
jle
aad
jmp
add
leave
iret
stos
xor
daa
cmc
cmpsb
push
mov
cmp
add
push
push
sbb
xchg
xor
cmpsl
or
or
rcll
xor
aam
stos
data16
cmp
xchg
stc
pop
dec
and
jae
sbb
push
dec
mov
inc
testl
mov
sbb
sub
jae
lods
jp
pushf
int
cmp
pop
aas
mov
cs
loop
mov
iret
mov
stos
jp
fbld
push
dec
das
mov
pop
cmpsb
and
cli
xchg
sti
mov
push
and
mov
sub
mov
and
cmpsl
pusha
mov
in
repnz
fisubrl
dec
and
out
dec
insb
jns
and
adc
shll
jnp
and
jecxz
lock
je
hlt
pop
sub
cltd
cli
jno
mov
xchg
mov
lds
mov
mov
sbb
sub
mov
jne
sbb
dec
mov
mov
inc
ss
shll
arpl
call
lods
out
pop
fst
mov
mov
popf
mov
push
lock
out
xchg
jg
jge
test
mov
jge
jno
or
out
push
push
cmp
jle
cwtl
icebp
push
mov
jae
adc
pop
insb
push
or
xor
lds
push
movb
jae
add
cmp
mov
fsubr
adc
das
fdivs
mov
push
xor
in
outsb
rcrb
lahf
xchg
push
into
ljmp
mov
pop
push
xor
popf
cli
mov
outsb
test
ds
mov
push
cmpsb
in
lock
cmp
bound
sub
repz
sbb
sub
fsubrs
inc
rol
adc
ja
push
aaa
cmp
sar
int
inc
enter
and
jnp
xchg
fildl
xchg
sbb
pop
push
inc
xchg
repz
shll
xchg
push
filds
call
aas
jge
aad
add
lret
iret
mov
popl
outsb
push
xor
sbb
add
fwait
adc
popa
push
xchg
jb
and
stos
xchg
aam
in
daa
mov
jecxz
ficomps
dec
xor
ss
mov
bound
stos
leave
mov
aaa
imulb
mov
sbb
call
dec
sbb
aam
cmp
stc
andl
xchg
int3
dec
mov
popf
dec
lods
or
out
jmp
jno
imull
jmp
ss
cmc
dec
test
lcall
stos
ja
faddl
jbe
loopne
sbb
add
leave
xor
cmpsb
ja
dec
lahf
mov
cmc
xchg
mov
jecxz
adc
jmp
or
inc
pop
pop
out
push
popf
xchg
adc
sub
mov
push
lods
sbb
imul
mov
jg
mov
inc
lahf
into
stc
fwait
mov
outsl
xor
add
rcrb
lods
sbb
xchg
add
mov
out
cli
imul
cmp
adc
pushf
adc
and
rolb
push
adc
js
dec
or
add
lods
dec
xor
push
xchg
out
ret
mov
xchg
adc
push
pop
stc
fsubrs
mov
sbb
cli
fistpll
fsubs
jo
mov
sbb
xchg
adc
les
ror
fwait
sub
cmp
pop
pop
fwait
pop
inc
push
add
pop
or
cmp
out
sub
adc
sbb
or
pop
lea
push
imul
out
jno
shrl
aas
mov
push
loopne
stos
xchg
ljmp
stos
pop
pop
insl
ret
mov
dec
mov
movsb
cmp
cmpsb
aaa
pusha
add
jp
push
jnp
int
mov
push
mov
sbb
ret
inc
stc
popa
push
dec
and
mov
fs
fsub
stc
sbb
push
sbb
xchg
pop
fisttpll
or
jae
popa
sub
cmp
xchg
gs
cld
inc
xor
adc
mov
dec
lret
fists
sbb
pop
sub
rorb
fildll
decb
inc
pop
adc
adc
mov
and
lcall
addl
jecxz
ljmp
pop
lds
cmp
das
movsl
rorb
leave
roll
pop
push
imul
mov
xor
push
pop
jl
xchg
adc
sub
add
subl
nop
movsb
xor
sub
outsl
add
jg
mov
mov
and
in
mov
mov
push
push
shll
pop
loopne
aas
inc
dec
xchg
dec
aam
mov
rclb
sub
lret
lret
repnz
sahf
aas
je
js
mov
or
roll
and
sbb
out
pop
add
sti
insl
les
add
movsb
ret
stos
nop
ret
aas
bound
add
mov
inc
scas
mov
lahf
inc
mov
pop
fwait
jecxz
cmp
stos
sahf
movsl
inc
push
inc
adc
mov
cmp
cmp
add
int
cmp
xor
ljmp
in
and
lds
mov
gs
mov
cli
sbb
lods
sbb
sbb
fidivrs
pop
pop
cmc
add
xchg
mov
fisubs
cmpsl
repz
add
pop
pop
inc
out
in
jo
cs
pop
shl
or
jnp
xchg
rcl
pop
xchg
cmp
pop
div
pop
dec
sbb
mov
mov
xchg
mov
insl
pop
push
push
cmpsl
int
clc
es
mov
adc
dec
mov
pop
add
jo
sarl
insb
gs
mov
fcomp
dec
dec
pop
enter
pop
lock
cld
bound
adc
cmp
pop
ret
bound
iret
scas
mov
out
icebp
xor
fstps
pushf
pop
outsb
aas
and
dec
pop
dec
data16
cmpsb
mov
test
sbb
xor
out
jae
rolb
dec
sbb
fildll
sahf
push
stc
in
jmp
shll
das
cmpsl
movsb
in
pop
push
shl
js
ljmp
jae
or
add
mov
inc
xchg
push
fidivs
mov
repnz
mov
mov
shll
pop
loopne
repnz
ret
cmp
adc
mov
int3
jecxz
in
mov
pop
fidivl
pushf
push
sbb
in
repz
adc
daa
out
or
xor
loopne
insb
jmp
imul
fbstp
rcl
shrl
test
andl
fwait
mov
sub
test
xchg
pop
fiadds
xchg
js
sbb
roll
add
insl
cmp
cmp
inc
sub
lods
shr
lahf
pusha
sbb
xchg
mov
pop
jl
lea
mulb
decb
jbe
movsl
pop
cmp
imul
inc
sbb
int
xchg
mov
mov
jnp
in
push
dec
cmc
imulb
cmp
pop
jo
jne
mov
push
mov
or
int
dec
out
jge
mov
adc
icebp
sbb
pop
lds
stc
mov
inc
jle
lods
ds
xor
popf
out
mov
stos
test
cmp
mov
repnz
lea
mov
jno
mov
adc
cltd
sub
lds
inc
jns
sbb
jne
maxps
cmp
pushf
add
dec
inc
out
daa
lods
mov
cmpsb
aas
cltd
push
fisubs
jl
mov
ror
xchg
lds
sub
and
dec
mov
fdivrs
fcomi
clc
add
mov
aad
les
and
xor
addl
inc
dec
lret
popf
push
out
xor
add
add
pop
repz
jecxz
mov
imul
arpl
imul
push
jnp
jne
jnp
push
sti
mov
cmp
aaa
and
in
es
movsb
pop
push
push
in
push
xor
pop
iret
pop
xchg
in
cmp
xchg
push
lea
arpl
adc
cmpsb
xchg
roll
ja
jae
add
lahf
xchg
addl
push
jne
into
addb
fsubrs
das
push
mov
jecxz
movsb
inc
mov
xchg
push
mov
in
cld
outsb
mov
xchg
aas
cmp
lea
loop
jp
xor
xor
jmp
outsb
std
push
jns
sub
fcoms
push
ror
inc
fwait
mov
mov
mov
or
jle
add
cmp
dec
arpl
adc
mov
cmp
or
sarl
out
test
aad
int
adc
jbe
jmp
movsl
sbb
lret
into
loope
push
jp
sub
jmp
out
mov
lahf
push
mov
outsb
shrl
icebp
lods
fsubl
aaa
add
lods
nop
push
dec
xchg
push
add
fisttpl
xchg
lahf
or
mov
fldt
dec
in
lods
jecxz
xor
les
mov
rcrb
adc
xchg
lods
sbb
in
push
fisubs
imull
insb
xchg
std
jle
mov
stos
inc
pop
cmc
sub
push
adc
or
imul
lea
xorl
or
jns
jge
pushf
sub
fidivrl
loopne
xchg
ss
jns
fidivl
jnp
xor
in
add
mov
scas
pop
cmp
mov
cmp
enter
ss
bound
loop
mov
mov
xchg
ds
adc
aaa
xor
xchg
push
inc
dec
in
jp
sarl
dec
outsl
jg
es
shlb
cld
je
sahf
aam
xchg
test
rcr
add
call
scas
jbe
cmpsl
scas
fnstenv
sbb
jge
aaa
sub
fidivs
inc
push
adc
mov
mov
fsubrp
pop
outsb
mov
jae
push
fadd
sub
fisttps
mov
xchg
jae
push
jle
enter
loopne
xor
into
addr16
inc
shr
xor
mov
popa
mov
xchg
inc
sub
repnz
fwait
pop
pop
jge
pop
lds
dec
fcoms
mov
icebp
fdivrp
inc
xchg
pop
adc
push
push
jo
sti
pop
xchg
pop
add
mov
cli
imul
ret
jno
icebp
addr16
add
inc
pop
jnp
ret
dec
ffree
call
sti
adc
or
pop
push
mov
je
mov
fnstcw
adc
test
rorl
and
push
add
mov
inc
stos
cmp
inc
push
outsb
lock
out
inc
js
aam
fldl
std
adc
sti
into
fistpl
inc
insl
or
jmp
mov
daa
xlat
cmp
inc
je
out
xchg
sbb
sar
cmp
push
scas
aaa
sbb
ds
or
fildll
push
mov
leave
imul
push
movsl
jbe
cld
push
test
lret
dec
push
adc
xor
jmp
test
imul
mov
xor
jl
dec
xchg
in
cmp
icebp
test
adc
push
es
mov
loop
lods
aaa
add
int
and
lcall
shll
add
stos
std
addl
insl
adcb
insl
mov
notl
xor
repnz
fs
dec
jecxz
push
pop
xor
push
enter
shrl
add
mov
xorl
ss
aaa
xor
dec
andb
or
mov
xor
daa
xor
test
sbb
lret
and
aam
jmp
xchg
xchg
cmp
loopne
mov
sbb
add
std
dec
out
aam
push
imul
hlt
adc
loope
lods
xor
push
out
mov
xlat
xchg
add
push
lahf
sub
and
lret
sar
sbb
fsubrp
adc
test
aam
xchg
lds
sarb
push
mov
push
dec
jge
stos
aam
xor
mov
shll
mov
sahf
pushf
jmp
outsl
pop
inc
xor
js
fimuls
mov
lret
inc
dec
popa
sti
in
arpl
test
aam
pusha
mov
cmp
subl
repnz
inc
adc
je
ds
inc
in
lea
and
push
mov
rclb
inc
cmp
push
jg
sub
inc
and
and
inc
andl
icebp
movsb
push
pop
scas
and
aaa
daa
pop
lock
pop
sbb
aad
stos
jnp
stos
jl
fcmovnbe
or
push
icebp
add
aad
bound
jb
loopne
sbb
adc
push
cmp
sub
shrb
imul
xchg
adc
jb
sbb
repnz
test
pushf
cmp
in
jmp
push
lcall
xchg
xor
fidivrl
les
arpl
inc
in
orl
jle
jnp
mov
cmpl
mov
ljmp
jns
sbb
ror
xor
xor
fiaddl
int3
sub
js
add
sub
or
pushf
xor
data16
testb
mov
mov
mov
out
sbb
cmp
test
leave
out
popa
lcall
push
mov
sub
dec
cmpsl
ja
dec
add
stos
hlt
jl
aam
cmpsl
stos
scas
inc
leave
inc
xor
push
cmp
scas
and
test
xor
lret
mov
inc
xchg
cltd
sbb
jl
jae
jp
jne
push
cmp
and
push
arpl
or
mov
dec
mov
xor
xchg
out
daa
stos
inc
sbb
test
ss
add
push
push
push
fwait
mov
out
aad
mov
mov
dec
loop
daa
xchg
lret
popf
push
daa
inc
pop
ret
shrb
jle
xchg
stos
mov
cltd
dec
mov
jne
test
inc
add
sub
in
mov
xchg
int3
shr
fcomi
mov
jg
push
std
sub
divl
outsl
xchg
add
insb
popa
jne
jecxz
outsb
jl
mov
push
dec
sbb
dec
dec
jnp
into
out
data16
mov
dec
jb
jo
rorb
mov
iret
xor
ljmp
push
lea
and
mov
clc
or
fld
xor
jbe
add
xchg
arpl
dec
aam
cli
xchg
inc
inc
cmpsl
jge
ljmp
aam
repnz
dec
pusha
mov
mov
adc
jnp
pop
idivb
inc
mov
sub
lds
xor
leave
push
ret
sbb
jno
call
bound
xchg
xchg
out
jno
pop
pop
or
dec
lahf
fucomi
push
pop
jmp
jle
insb
or
xor
push
mov
mov
cli
std
inc
bound
js
fldcw
int3
dec
mov
inc
add
decl
xchg
jmp
hlt
aad
fmul
fnstenv
mov
fmull
sbb
cmpsb
push
lods
arpl
std
and
loopne
adc
fwait
lret
addr16
or
aas
push
adc
mov
icebp
adc
xchg
jbe
sub
or
fbld
and
and
mov
or
lds
dec
aaa
pop
test
lods
jle
push
push
and
mov
xchg
sbb
ja
mov
or
pop
out
fdivrl
imul
cmpsl
cmpsl
mov
pop
fnsave
loop
psrld
out
and
or
xor
mov
mov
rcrl
and
xchg
xchg
jecxz
adc
push
push
gs
icebp
inc
sbb
dec
outsb
ret
sbb
adc
sub
fidivrl
in
sub
ds
pop
mov
sbbl
mov
mov
shll
aas
push
clc
cmp
fcompl
int3
hlt
test
cmc
xor
pushf
mov
xor
pop
rolb
les
pop
and
test
hlt
add
imul
pop
sbb
sub
lcall
loop
loop
adc
jae
cmp
leave
dec
jle
dec
cwtl
arpl
shlb
loopne
leave
add
aam
pop
out
cli
inc
mov
lret
push
cli
or
popa
fiaddl
out
inc
imul
int
shll
xor
sbb
mov
mov
jno
add
stos
out
push
add
mov
shrl
lcall
shrl
les
int
adc
pop
lret
add
loop
adcl
sti
sbb
ds
cld
mov
adc
repnz
sbb
mov
ds
mov
pop
nop
arpl
scas
addr16
sarb
pop
pop
jo
xchg
xchg
mov
aas
cmp
test
push
mov
insb
loop
jnp
je
inc
lret
rcll
xchg
repnz
mov
fs
jne
es
and
xor
cmpsb
lahf
mov
and
inc
mov
mov
pop
call
mov
inc
aam
cld
mov
add
ds
mov
popf
jge
xchg
sbb
push
mov
pushf
leave
xor
mov
arpl
mov
jmp
and
bound
jnp
push
inc
push
pop
movsl
movsb
inc
ret
cmp
push
clc
lcall
scas
cmp
ficompl
sub
xchg
lret
aas
out
cmc
pop
lret
aam
enter
xor
mov
mov
les
int
movsb
inc
cmp
dec
loope
adc
jnp
notb
rolb
sub
add
or
ret
hlt
shrl
stos
xchg
mov
pop
mov
pop
pop
popa
jp
cmp
or
pop
mov
nop
sbb
pop
lret
and
or
xchg
dec
jno
je
pop
mov
mov
mov
shl
aam
sub
out
xor
lret
sub
js
and
lods
fisubs
sub
outsl
cli
push
xor
cmpsl
imul
sarb
or
xchg
cmp
mov
sub
out
inc
pop
xor
lods
mov
pop
fnstenv
or
or
movsl
sbb
xchg
cmp
sbb
sub
xor
inc
mov
or
daa
outsb
ficompl
sub
add
cmp
movsb
call
mov
out
pop
pop
dec
dec
mov
dec
xchg
sub
xor
scas
cmpsb
push
popf
push
lea
cltd
jb
lahf
or
lcall
push
add
mov
mov
sub
inc
push
cs
pop
movsl
fnsave
stc
pop
inc
es
pop
aam
mov
mov
mov
pop
jo
movsl
mov
lods
sbb
mov
dec
lahf
das
repnz
pop
stc
jns
ljmp
inc
addb
scas
pop
or
out
mov
notl
testl
inc
inc
xchg
je
push
adc
addr16
outsl
and
pop
js
cmp
fwait
mov
in
sub
sbb
xchg
cli
sahf
dec
mov
lock
pop
out
mov
fbstp
sti
jbe
mov
xchg
daa
inc
inc
loop
xchg
jecxz
jg
jl
rolb
jle
popa
xchg
inc
and
repnz
mov
out
adc
mov
outsb
xchg
inc
mov
popa
mov
aas
rcll
hlt
popa
xchg
jb
fwait
jge
mov
pop
inc
leave
test
adc
add
cmpsl
int
paddusw
mov
frstor
into
sbb
ds
enter
add
int
push
ds
jns
sbb
push
mov
push
in
adc
xchg
jecxz
mull
push
xor
stc
inc
or
add
shlb
cmp
pop
les
inc
je
push
test
sbb
or
sbb
rcll
iret
inc
ljmp
mov
lret
fnstsw
movl
or
pop
mov
add
out
push
das
lea
icebp
jae
fcmovb
or
sub
dec
lods
cmp
icebp
pop
fcoml
out
dec
pop
mov
adc
divps
sti
repnz
sahf
and
xchg
stc
mov
orl
fcmovu
xchg
das
mov
fidivrl
inc
loop
mov
pop
jne
push
cltd
mov
or
mov
cld
sub
divb
and
xor
add
pop
cld
mov
inc
aaa
xlat
idivb
sub
push
jmp
lock
insb
push
stc
jl
test
push
jne
inc
stos
or
mov
arpl
cs
pop
mov
test
mov
pop
bound
pop
mov
std
add
call
lret
jmp
push
insb
lds
sbb
fwait
js
mov
repz
ja
pop
es
sub
stc
or
aam
push
mov
lock
dec
mov
out
in
test
xor
sub
xor
cwtl
test
test
jmp
xor
xchg
mov
mov
jecxz
movsl
pushf
and
jl
sti
jb
sub
adc
xchg
stos
mov
push
fcmovne
xchg
push
push
cmp
int3
insb
ljmp
rol
jae
sbb
out
outsl
pop
and
lock
adc
clc
out
inc
or
ret
jns
imul
mov
jns
add
out
es
push
add
inc
push
dec
cltd
lods
pop
inc
sbbb
test
dec
shl
mov
cltd
mov
aad
lret
in
inc
ja
js
mov
loope
xor
repnz
dec
arpl
mov
pop
cld
adc
adcb
adc
into
hlt
enter
dec
pop
xchg
shll
pushf
add
and
shrl
sbb
jne
sbb
lahf
mov
fnstsw
dec
pop
jns
sbb
pushl
and
dec
push
jbe
jns
out
ret
mov
rorb
push
inc
sbb
mov
jecxz
cmpsl
push
push
sbb
idiv
daa
pusha
icebp
gs
add
mov
sarl
mov
push
bound
jne
cmpsl
shlb
cmp
and
cld
rorl
out
stc
cmp
or
jp
lea
jns
inc
mov
adc
pushf
gs
aam
loope
lods
xorl
adcl
gs
cmp
out
sub
xchg
push
cmp
mov
mov
stos
aas
mov
push
ror
mov
jnp
insb
xchg
add
sti
cmp
arpl
ss
lret
inc
sub
lret
mov
movsb
add
add
std
js
dec
test
fwait
nop
ss
fsubr
mov
loop
sbb
in
stos
mov
ja
fnstcw
testb
loopne
in
int3
pop
pop
adc
adc
xor
mov
push
mov
fadd
mov
adc
enter
outsb
cmp
push
xor
arpl
sub
pop
mov
out
xchg
mov
adc
pop
roll
xor
loope
loope
mov
cmp
cmc
cmp
bound
sbb
fucomip
mov
mov
fistl
and
xchg
sub
jle
adc
and
mov
pop
ds
jns
outsl
sub
inc
mov
cmc
xchg
sbb
clc
fldl
movsl
fdivr
push
sub
nop
adc
aas
filds
xchg
cli
or
sbb
and
cmp
jg
dec
pop
jnp
std
xor
mov
mov
jle
mov
xchg
jb
mov
pop
and
in
push
pop
adc
mov
outsb
or
lea
cs
aam
fiaddl
cmpl
push
jo
xchg
pushf
add
jmp
pushf
xor
fsubrp
or
push
xor
xchg
sub
lods
adc
jae
mov
jbe
lods
dec
orb
push
andl
daa
pop
jae
pop
mov
jbe
sti
lods
xchg
insb
fcoms
push
pop
adc
lods
lock
int
cmc
inc
pushf
popf
mov
fiaddl
insl
mov
jp
rcrb
notl
xchg
push
jno
inc
xchg
fwait
movsb
adc
ljmp
xchg
jge
jge
negb
fisubs
mov
ds
rorb
loope
jp
fs
fwait
or
add
sahf
sub
or
ss
cmp
sbb
fsubrp
add
or
enter
in
aas
dec
lret
ret
mov
insl
xor
cmp
and
aas
mov
pop
xchg
sub
imul
call
mov
dec
xor
jne
movsb
xchg
jo
pop
xlat
movsb
jb
push
std
or
rcrl
insb
test
inc
stos
loopne
xchg
mov
gs
mov
or
mov
lahf
enter
pop
mov
xor
xchg
or
sub
int3
push
sbb
jl
or
adc
in
mov
dec
js
add
sti
or
jecxz
sbb
cltd
clc
push
jg
xor
and
push
jg
pop
js
in
adc
cwtl
push
loop
int
in
mov
cmpl
bswap
jno
stos
shl
pop
inc
les
ds
fmuls
ja
ret
cmp
pusha
cltd
sahf
mov
ret
mov
sub
shrl
jge
xlat
mov
push
add
in
push
or
pop
pop
pop
jecxz
dec
inc
add
divb
dec
fldl
cmp
aam
in
mov
fistps
xchg
pop
sub
sub
sub
sub
cld
dec
subl
shlb
les
lret
loopne
xchg
clc
pushf
sti
test
xor
ret
loopne
xchg
add
mov
or
mov
sbb
out
and
push
or
jo
nop
dec
push
out
lock
dec
pusha
rorl
or
xchg
lods
and
pop
repnz
mov
push
xor
mov
mov
push
pop
sbb
into
push
loope
out
lds
sbb
or
repz
inc
jb
adc
mov
mov
lea
jge
in
es
sbb
jp
incl
fwait
dec
jmp
gs
pusha
into
xchg
in
iret
mov
orb
in
jns
jns
addl
adc
cli
cwtl
test
dec
adc
sbb
sub
fisttps
fcomps
popa
stc
mov
adc
scas
das
call
pop
and
subl
inc
jmp
sub
sahf
or
xor
sbb
add
aam
insl
dec
insb
and
adc
movsl
mov
aaa
jnp
inc
inc
out
outsl
pusha
movsl
pop
push
cmp
or
fbld
or
hlt
push
shlb
shlb
mov
andl
shrl
add
sti
xchg
negb
in
cli
fldl
dec
iret
sbb
je
xor
mov
pop
jo
outsb
bound
js
cmp
sahf
imul
mov
stos
add
out
lock
imul
test
ja
jns
mov
mov
sub
or
push
sub
add
aam
lret
adc
fs
xlat
fsts
in
out
out
popa
nop
cli
pop
pusha
mov
or
mov
mov
sub
sub
xor
mov
lods
jecxz
in
adc
adcb
pop
push
pop
js
std
jmp
pop
jo
push
in
lea
cmp
pop
and
or
dec
jo
fcompl
pop
lcall
cmp
pop
and
adc
push
fwait
dec
push
or
popa
jecxz
int3
cld
push
adc
inc
jb
repnz
pop
sub
push
cmp
mov
inc
push
mov
decl
push
lret
std
sbb
in
push
mov
xchg
es
and
in
mov
cwtl
cmp
lods
jp
lods
dec
in
js
inc
mov
in
push
mov
adc
bound
push
mov
push
mov
push
hlt
lds
sbb
loop
push
inc
lcall
cwtl
push
in
inc
leave
sbb
ljmp
shl
frstor
or
in
dec
push
pop
xor
subb
dec
inc
fildl
mov
dec
xchg
rcrb
jg
jg
cltd
lds
fwait
add
call
cwtl
out
inc
shrb
pop
and
or
dec
push
sbb
clc
ds
or
lahf
and
ret
and
xchg
mov
pop
jo
lods
sbb
dec
pop
sbb
repz
int3
roll
pop
int
mov
mov
mov
data16
repnz
mov
adc
loop
aam
dec
pop
or
push
jne
push
hlt
mov
shlb
or
mov
gs
scas
lock
lea
test
aad
rcll
incl
adc
push
inc
jb
and
out
cmpsl
fwait
ror
clc
sbbb
outsl
mov
push
orl
jg
xchg
movsl
aam
movsb
adc
gs
dec
movsb
fucomi
jg
adc
cmpsl
cmpsl
add
aam
inc
mov
sub
and
add
or
and
stos
mov
call
stc
push
movsb
repz
mov
mov
push
fisubl
inc
push
dec
ds
int
call
sbb
ja
pop
pop
cmpsb
sahf
mov
push
jle
xchg
xor
add
xchg
cmp
mov
sub
nop
mov
push
imul
test
rorb
jnp
std
jp
cmc
xchg
pop
xchg
add
cld
std
cmpsb
mov
inc
pop
in
mov
repnz
imul
xor
mov
push
xchg
cld
into
adc
subl
jl
ficoml
cmp
ficoms
das
aas
jmp
dec
cmpsb
xchg
jecxz
mov
test
insl
inc
rol
jge
movsb
jecxz
cmpsl
jae
xchg
aas
ret
mov
mov
scas
adc
xlat
shrl
jle
addr16
les
add
dec
push
pop
insl
xlat
and
push
leave
or
pop
out
cmp
xor
jno
and
pop
sub
mov
int3
sub
shr
iret
gs
leave
push
and
movsb
xor
cmpsl
popf
adc
enter
rorl
cmp
inc
jmp
mov
jge
sbb
xchg
ljmp
push
push
outsb
mov
xchg
xchg
out
bound
bound
mov
out
dec
std
mov
and
out
jmp
pop
ss
rolb
pop
ds
mov
in
mov
aam
sbb
push
mov
ljmp
fmuls
sub
fidivrs
mov
cli
mov
test
sbb
cmpb
nop
outsl
clc
ss
icebp
mov
enter
or
in
insl
xor
jg
fisttpll
mov
sbb
xchg
push
sub
ss
fnstsw
add
in
add
xchg
jmp
adc
testb
sub
mov
mov
xor
xchg
imulb
into
test
mov
sbb
les
mov
mov
aad
mov
cmc
xor
add
push
xor
mov
adc
mov
push
out
rcrl
jb
push
jecxz
or
bound
aad
push
addr16
aaa
jne
cli
sub
js
imul
dec
xor
and
incl
mov
fcomps
loope
lahf
mov
js
xchg
leave
sbb
popf
shrl
adc
pop
push
lahf
imul
lods
mov
jne
mov
mov
push
inc
jne
imul
pop
xor
mov
jge
je
aam
inc
cltd
push
mov
enter
pop
inc
xor
pop
stc
notl
clc
imul
cld
insb
sbb
imul
xor
aas
sub
popa
jbe
jns
dec
xchg
pop
lret
lods
sbbl
int
adc
ljmp
call
inc
push
or
in
das
out
rol
mov
idiv
sub
xor
xchg
xor
inc
add
insl
mov
xchg
jmp
pushf
xchg
jnp
cltd
gs
int3
add
pop
lret
xor
sub
sub
shr
call
fistps
mov
fisubrl
jnp
jge
inc
icebp
cmp
xchg
shl
jle
adc
push
rolb
inc
mov
pop
mov
aam
lret
xchg
shlb
sub
outsb
aaa
fcom
test
and
inc
je
jecxz
pop
xor
dec
xlat
xchg
idivl
pop
pusha
lret
push
mov
jg
push
sbb
js
push
cmpsl
xor
or
mov
outsl
inc
pusha
adc
jmp
adcb
push
bound
int
sar
icebp
sub
stos
sbb
push
clc
aad
push
lea
cmp
sub
fwait
fs
fs
or
hlt
popa
sub
in
insl
in
loopne
or
push
addb
xor
das
dec
mov
inc
pushf
clc
xchg
pop
jne
mov
out
mov
xchg
mov
xor
movsb
add
sub
das
pushf
lock
in
push
jg
and
fwait
inc
inc
sbb
repz
int3
repnz
dec
sbb
outsl
loope
out
test
push
sbb
cmp
adc
xor
mov
ret
mov
movl
repz
sbbl
popf
dec
mov
push
in
iret
push
or
cmp
jmp
pusha
push
mov
pusha
jg
outsl
je
mov
inc
pop
jmp
movsb
je
insl
adc
jno
sub
inc
jnp
adc
ret
fildl
jo
cmp
and
push
sub
inc
test
inc
clc
push
mov
aas
mov
rorb
jb
ret
movsb
dec
pop
leave
push
push
cwtl
loop
movsb
call
sbb
ja
dec
ror
in
mov
jno
jb
scas
dec
ljmp
fs
jnp
mov
sbb
push
lret
std
mov
pop
pop
inc
push
cli
fmull
sbb
test
clc
pusha
push
dec
mov
sub
enter
cs
fsubrs
pushf
pop
adcl
mov
insb
mov
or
xlat
push
test
pop
lea
dec
insl
adcl
out
add
pushf
sbbl
stos
fsts
pop
cmp
inc
cltd
std
movsl
push
fnstenv
lds
jns
je
stos
adc
mov
ret
fiadds
fwait
mov
inc
sub
xchg
or
dec
fistpl
int
orl
mov
ja
imul
in
jge
loopne
mov
mov
cmpb
enter
repnz
jno
adc
pop
hlt
out
add
jb
out
test
mov
add
mov
dec
enter
or
jmp
push
mov
test
jle
mov
cltd
jmp
add
push
sub
outsb
sbb
insb
push
xchg
adc
sbb
lock
jecxz
mov
dec
pop
loopne
scas
test
or
jecxz
popf
cs
lahf
out
aad
sarb
mov
js
ret
dec
decl
dec
insl
dec
jns
pop
inc
mov
pushf
xor
adc
mov
pusha
xor
cmpsb
mov
jge
mov
cmc
rorb
cmc
jo
pop
add
pop
cmp
hlt
sub
pop
mov
xchg
add
inc
insl
outsb
clts
fsubs
jnp
ret
push
insl
and
jmp
flds
sbb
mov
ja
dec
fisubrl
push
inc
jne
mov
adc
hlt
dec
addr16
pop
xchg
ret
push
fldenv
hlt
popf
outsl
mov
divl
imul
icebp
push
and
mov
jge
insb
adc
ficoms
pop
pop
cmp
outsb
rorb
loop
and
iret
sub
lahf
fwait
dec
xor
mov
std
jne
xor
jns
sti
xor
dec
ficomps
cmp
xor
mov
insb
loope
pop
imul
jnp
or
cmpsb
leave
push
or
outsl
call
ljmp
jecxz
mov
jl
push
fwait
into
xchg
sbb
pop
out
push
rclb
in
lds
and
fs
mov
mov
mov
mov
mov
sub
aad
loopne
jmp
imul
mov
xchg
lcall
clc
mov
xor
ret
push
aam
pop
jecxz
jge
xor
push
aas
sarl
pop
out
dec
xchg
mov
sahf
or
jg
faddp
js
push
sub
je
lahf
pop
adc
out
lahf
pop
or
xor
add
mov
shll
push
icebp
mov
cmp
sub
cltd
xor
inc
aam
cmp
enter
loop
call
jbe
jb
inc
mulb
into
or
lods
mov
lsl
mov
sbb
and
xor
test
ficompl
pusha
addr16
xlat
cmp
cmp
inc
inc
in
lods
mov
ret
sahf
dec
pop
sbb
jb
inc
imul
imul
xor
frstor
mov
nop
adc
shrl
dec
jo
add
cmp
add
inc
sub
mov
cmp
shr
xchg
push
pop
inc
data16
push
xchg
push
rol
cmpsb
mov
les
loopne
rcrl
clc
jmp
andl
ljmp
aad
inc
add
mov
xchg
in
adc
lods
loop
add
ret
push
sbb
and
pushf
iret
mov
jbe
std
repz
dec
xorb
xor
js
cmpsb
sub
and
xchg
int3
stc
sub
dec
xor
mov
sbb
test
ftst
xor
xchg
dec
sbb
jle
pop
fstpl
cltd
unpckhps
dec
pushf
mov
popf
push
mov
pop
lock
in
imul
daa
sbb
into
or
sarb
adc
cmp
les
jp
in
mov
pop
pushf
ret
cmp
ja
je
sahf
or
xor
jmp
mov
into
aad
ret
les
cmp
js
ret
stc
mov
fwait
rolb
ja
dec
mov
sub
sbb
movsb
add
ds
mov
pop
push
dec
in
gs
or
fsubr
cld
call
jns
mov
lahf
pop
adcl
inc
test
mov
adc
shlb
sbb
cli
dec
inc
stos
ss
cltd
ret
dec
sbb
and
cmp
les
xchg
jo
popl
adc
lahf
jge
icebp
mov
xchg
inc
mov
mov
fdivrp
std
mov
insl
pushf
jb
and
sub
lahf
sti
pop
loop
ret
pop
pop
mov
test
mov
push
cmp
mov
ret
std
data16
test
xchg
sbb
mov
outsb
repz
jns
mov
loope
cmp
shll
movsb
sbb
and
sub
adc
mov
inc
int
push
out
lods
adc
scas
ja
gs
lods
lea
mov
rolb
dec
lds
outsb
jae
mov
pushf
popf
lds
movsb
sub
cli
stos
sbb
xchg
aaa
dec
movsl
ret
ret
dec
adc
pop
mov
dec
dec
ljmp
fwait
les
adc
daa
push
dec
sub
std
and
jmp
rcr
cmp
xchg
aad
outsb
popf
and
add
je
fsubrs
call
xor
mov
mov
pop
adc
iret
jne
jne
xor
and
cmp
fstps
sbb
shlb
fcoms
icebp
rol
lods
adc
or
sub
mov
call
push
dec
rcrb
aaa
add
ret
daa
cmp
mov
cmpsb
jge
scas
cmp
dec
aaa
sbb
imul
fsubp
mov
sbbl
cltd
pop
bound
pop
mov
inc
subb
pop
hlt
and
xchg
out
fnstsw
lahf
enter
mov
ljmp
xchg
adc
mov
out
cli
jle
sub
jp
push
lcall
cmpsb
bound
dec
and
scas
popa
test
xchg
jmp
jp
lods
mov
out
fs
adc
jno
jmp
dec
adc
ljmp
or
enter
outsl
add
add
lods
pop
pusha
jle
cmp
sti
jae
cmp
aad
iret
pop
mov
push
and
cmpsb
test
inc
faddl
enter
or
in
jb
xor
jecxz
or
movsb
dec
push
cmc
pop
repnz
xor
mov
in
or
movsb
push
lods
mov
xor
fwait
sub
cmp
xchg
cmp
in
push
lcall
loope
rolb
andb
loope
subb
mov
orb
mov
lcall
mov
push
or
test
xlat
enter
adc
push
jbe
arpl
inc
xchg
cmp
sbb
xor
leave
fdivl
clc
mov
push
lcall
arpl
pop
ss
mov
xor
xchg
stos
cmp
out
xchg
test
xchg
lods
setge
xor
dec
mov
and
in
aas
sahf
pop
or
fadd
dec
cmpsl
cwtl
sbb
cs
xchg
mov
fisubrl
pop
imul
ret
stos
fwait
dec
test
es
or
int
fdiv
xchg
out
adc
inc
leave
add
loopne
out
dec
mov
cmpsb
sbb
es
adc
movsb
jbe
in
xchg
sbb
mov
dec
cmp
loopne
mov
mov
dec
inc
aas
or
ja
mov
in
adc
sbb
mov
jns
and
fwait
pop
into
mov
push
scas
mov
cmpsl
movsb
test
dec
js
movsl
xchg
add
popa
shl
pop
mov
mov
dec
and
movsb
inc
add
repnz
mov
adc
clc
popf
mov
jb
adc
mov
lds
sti
sub
sub
adc
stos
pop
test
call
mov
leave
push
and
sub
jp
adc
dec
add
jne
mov
daa
in
imul
jl
test
bound
push
jmp
ds
cli
fsubs
pop
mov
push
data16
jmp
xchg
data16
jbe
and
push
jae
in
or
rolb
or
int3
pop
push
adc
fisubrl
dec
mov
leave
iret
push
pushf
mov
aam
and
rolb
lock
paddq
sbb
mov
je
cmp
jle
loopne
jne
sub
jne
stc
movsb
aad
stos
dec
aam
sbb
test
scas
out
sub
mov
pusha
push
mov
pop
mov
push
scas
cmpsb
jne
jne
sbb
lcall
cmpl
inc
fnsave
out
cwtl
dec
outsl
das
addr16
inc
sti
aad
mov
std
movsb
xor
mov
and
or
pusha
shlb
repnz
popf
pop
dec
aaa
lods
sbb
inc
daa
int3
aam
pop
inc
pop
inc
stos
out
sarl
push
sbb
mov
sub
xchg
mov
mov
cmp
test
cmp
ljmp
das
and
int
pushf
int3
dec
mov
call
inc
jo
xchg
adc
enter
scas
cmp
jmp
pop
lret
inc
sbb
sub
repnz
xchg
scas
xchg
push
ret
cmp
loop
dec
pop
or
sbb
or
out
push
pusha
das
mov
pop
icebp
lret
lret
add
inc
clc
mov
xchg
xor
mov
vpcmpeqw
xchg
mov
int3
add
nop
sti
jecxz
lahf
fildll
fiadds
mov
dec
lock
clc
pop
aam
outsb
popa
adc
or
shr
cmp
jp
cmp
jns
cmpsl
sub
je
or
sbb
push
loope
add
sub
jl
fucomp
sbb
cld
gs
adc
or
int
clc
mov
pop
dec
les
inc
mov
inc
movlps
and
ret
dec
and
or
jo
sub
movsb
sahf
imul
xchg
pop
enter
mov
enter
daa
cmp
out
ret
xchg
pop
repnz
repnz
xchg
add
mov
push
cltd
push
lock
pop
ja
mov
mov
adc
sbb
inc
in
mov
iret
mov
sub
cmp
lret
gs
cld
mov
mov
lahf
sti
adc
insb
pop
push
lods
shl
cmpsb
pop
hlt
data16
push
mov
icebp
push
sbb
xor
dec
or
xor
or
push
inc
push
mov
fwait
mov
sub
jmp
insb
mov
pop
pop
outsb
mov
call
jmp
sbb
scas
fisttps
mov
adc
icebp
mov
jecxz
ss
test
pop
lcall
jp
test
cmpsl
insb
dec
xchg
test
js
add
xor
inc
xchg
inc
jno
test
mov
jl
or
dec
stc
push
lds
mov
xchg
addl
xor
or
mov
lods
fstpl
in
push
loop
push
je
sbb
shl
ja
icebp
cmp
lcall
jnp
adc
mov
aad
pop
outsl
fsubl
adc
adc
dec
jnp
addr16
jo
mov
inc
rorb
dec
cmpl
jg
ljmp
ja
dec
fstpt
jnp
dec
pop
stc
dec
fst
jge
pop
cmp
fsubr
jecxz
jno
add
icebp
rcll
inc
push
dec
jae
mov
xor
jecxz
notl
sub
inc
arpl
mov
popa
xchg
sahf
mov
in
fwait
push
pop
push
insb
cmp
mov
gs
shlb
push
scas
sti
aas
enter
xor
out
ret
jg
jp
xchg
mov
cmpsb
les
aaa
adc
scas
lock
pop
add
or
pop
mov
lahf
mov
jo
inc
ret
jg
push
mov
sub
hlt
out
faddl
lcall
xorl
and
scas
movb
mov
sbb
jecxz
mov
sub
push
subl
int
fidivrs
sub
inc
test
add
loopne
jae
add
xchg
fdivrl
je
xor
mov
sbb
xor
loop
mov
xchg
imul
mov
push
fidivrs
and
pusha
adc
add
lock
insl
sti
xchg
jae
scas
dec
test
cmp
nop
xchg
ljmp
cwtl
sbb
stos
clc
loop
mov
adc
adc
aas
push
inc
xor
in
popf
inc
cmc
int
xor
scas
pop
fisubrs
sub
mov
xchg
sbb
adc
push
shll
and
arpl
or
dec
push
or
add
adc
lock
xor
and
cmpsb
jo
and
pop
pop
push
jb
cmp
mov
jle
addr16
and
testb
je
pop
sbb
xlat
test
dec
pop
or
adcb
mov
dec
subb
xchg
dec
leave
mov
inc
mov
mov
push
leave
shll
push
es
lea
les
cwtl
add
pop
les
push
popa
add
addr16
or
popa
push
inc
cmp
repnz
cwtl
sbbl
in
out
mov
cs
movsb
push
fisubl
or
cmp
iret
push
rcr
nop
mov
cld
lock
ja
xor
pop
movsb
daa
lahf
xchg
scas
cmpsb
int
mov
mov
popf
push
mov
adc
fisttps
call
xor
push
pop
fcomps
push
push
jg
pop
pop
fs
xor
jmp
lahf
sub
rcrl
test
fbld
mov
inc
ffree
mov
clc
lds
mov
test
enter
mov
mulb
scas
clc
push
sahf
xchg
cmp
inc
lds
xchg
jl
jg
inc
pop
mov
lds
aaa
dec
adc
xor
loope
adc
addr16
or
fwait
and
cmp
xor
mov
cmp
pop
add
or
call
outsb
xchg
pop
ret
in
lods
xor
inc
pusha
push
cmp
mov
xor
cmc
jl
testb
mov
pop
xchg
bound
sahf
xchg
mov
pop
xchg
inc
jmp
jo
in
or
jp
pop
pop
mov
sarl
out
dec
or
jmp
cmp
into
lret
mov
into
mov
xchg
stos
add
cwtl
sub
pusha
xchg
dec
inc
mov
lea
dec
sbb
ret
rcrb
lret
lret
mov
insl
sub
pushf
xor
icebp
lea
fistpll
inc
and
sti
arpl
jns
jnp
jg
sub
test
pop
daa
mov
cld
push
lock
loopne
xor
jmp
and
jle
mov
or
mov
arpl
xlat
sbb
shrb
jmp
cmc
es
dec
imul
fimull
dec
dec
jmp
mull
xor
push
mov
or
iret
add
popf
pop
lret
sbb
out
jns
inc
inc
es
outsb
push
jge
fs
mov
test
or
xor
sti
mov
imul
cmc
and
or
fwait
stos
int
xchg
test
cmp
xchg
pop
movsb
jbe
cmp
xor
jp
scas
into
push
push
add
xchg
aad
xor
jle
lret
xchg
dec
int
mov
add
jae
inc
in
cwtl
add
mov
inc
rol
cmpsl
jbe
mov
jb
xor
leave
and
pop
lahf
stc
divb
push
imul
rcrb
movsbl
nop
in
enter
in
iret
inc
xor
cmp
ret
cmp
fstl
push
test
enter
jmp
mov
mov
nop
lock
inc
std
mov
fistps
fnstenv
mov
cmpsl
and
cs
into
sbb
pop
push
mov
mov
test
movsbl
mov
xchg
push
push
inc
jmp
je
add
xchg
dec
dec
int3
imul
add
jl
fsts
sbb
mov
in
cld
cltd
cmp
andl
jmp
mul
xchg
lahf
daa
insl
fcmovne
ljmp
movsb
imul
cmp
or
popf
inc
cmp
ja
sbb
sarl
cmc
pop
inc
and
xchg
inc
and
push
leave
inc
mov
xchg
add
jecxz
push
xchg
add
jnp
out
mov
cwtl
dec
cmp
jbe
xchg
cld
addb
push
mov
jb
test
aaa
add
and
mov
test
ret
cmp
sub
addr16
mov
in
ljmp
push
dec
jecxz
xor
fcmove
push
aas
xor
daa
mov
adc
gs
add
iret
xchg
fidivl
pop
lea
leave
mov
sbb
subl
call
fstps
int
fistpll
pop
push
lds
fdivrl
sub
mov
ret
xchg
inc
pusha
push
jb
inc
jbe
and
sbb
xorb
popa
popl
dec
xchg
subb
mov
cmp
lcall
and
push
fimuls
xlat
inc
lds
lock
inc
js
push
dec
loopne
outsl
mov
mov
movb
daa
push
shl
xchg
js
insl
add
in
lock
inc
jp
jmp
dec
mov
cltd
js
lock
scas
jle
inc
pop
mov
and
pop
scas
rol
dec
add
stos
in
in
pop
shrl
loope
das
xor
xchg
ljmp
popa
call
gs
setns
inc
dec
jne
sbb
xchg
mov
repz
cmpsb
loope
mov
ret
call
pop
je
cs
pop
popa
inc
icebp
out
fldcw
les
cmpsl
push
mov
cwtl
in
fmull
jbe
cmp
adc
loope
icebp
subl
shlb
fsts
mov
lock
or
and
and
repz
shrl
xchg
xor
or
test
cwtl
notb
ja
aas
add
sbb
pop
xchg
sub
shll
dec
mov
pop
sbb
andl
mov
sub
mov
push
push
inc
xlat
push
or
mov
mov
cld
repnz
or
pop
xchg
pop
xchg
dec
movups
inc
pop
inc
jle
test
add
push
imul
test
leave
adc
call
pop
add
cld
push
sub
lods
jbe
push
pop
inc
mov
push
popf
imul
aad
jg
repnz
sbb
and
negb
sbb
scas
push
mov
push
and
lds
aaa
push
shrl
js
sbb
mov
je
gs
test
sbb
mov
in
push
pop
lds
and
sub
sub
pop
mov
stc
int
dec
jg,pt
pop
pop
cmpsb
and
mov
push
test
sub
jecxz
dec
jne
fstpl
and
jl
and
add
lcall
mov
pop
cmpsb
jmp
dec
bound
andb
mov
popf
fadds
inc
xlat
fnstcw
mov
xchg
lret
dec
sbb
data16
sti
sahf
mov
pop
ljmp
jae
jno
inc
outsl
testl
push
dec
loop
or
sbb
push
dec
repz
aad
hlt
xchg
inc
mov
dec
add
loopne
cs
shrl
test
adc
dec
jmp
hlt
fucom
mov
dec
out
fsts
inc
mov
jae
jg
ret
loope
jne
xchg
popf
mov
mov
and
iret
sbb
add
pushf
push
mov
insb
movsl
mov
in
sub
push
mov
daa
ds
mov
imul
sub
pop
mov
jae
movsb
mov
dec
mov
scas
out
fcomps
aaa
sub
xor
dec
sub
xchg
repz
add
clc
stos
push
sub
dec
pop
inc
ret
data16
cli
xor
mov
es
lods
scas
jmp
xor
movsl
mov
imul
ds
daa
cs
lret
rorl
dec
add
pop
mov
popf
jmp
out
lock
lcall
fnstsw
mov
sub
inc
arpl
shlb
mov
rolb
in
dec
and
push
inc
fwait
pop
das
call
dec
lcall
imul
cmpsb
insl
dec
mov
call
call
aam
lahf
adc
pop
xchg
push
insb
jae
cwtl
out
pusha
jp
lds
push
sbb
xchg
pop
inc
xlat
dec
mov
sbb
adc
ja
jle
fldl
dec
dec
cmp
xor
sub
movsb
addr16
pop
jae
fbstp
sti
dec
push
mov
inc
adc
lods
inc
cmp
shlb
and
pop
xchg
mov
sub
adc
jecxz
fmull
jge
cmp
pop
mov
aas
scas
cwtl
shrl
mov
add
lea
mov
js
popf
push
mov
mov
lods
or
push
sbbl
fwait
pop
mov
sbb
lds
jmp
mov
xor
pop
cmp
add
movsb
inc
dec
sbb
jae
shl
push
std
and
dec
mov
test
out
add
jmp
dec
push
bswap
add
jge
in
inc
pop
data16
mov
sbb
mov
or
outsl
inc
mov
push
adc
dec
in
loope
sti
mov
lea
lods
mov
fldt
sub
sbb
cld
cmp
jmp
sar
push
add
popa
adc
cltd
jbe
in
hlt
fimull
movsl
pusha
pushw
mov
stos
mov
int3
pop
add
mov
fadds
fidivrl
push
lods
jge
out
xchg
leave
cwtl
cmp
gs
repz
xor
loopne
jns
mov
or
test
push
inc
push
es
sbb
lods
std
cwtl
dec
adc
push
sbbl
stos
xor
inc
and
cwtl
jnp
fimuls
or
xor
iret
dec
xor
mov
mov
outsb
dec
sarl
pop
lods
rcrb
int3
xor
and
sbb
dec
inc
andl
test
daa
add
bound
dec
xchg
orl
xchg
sbb
bound
dec
cmp
xchg
and
stc
pop
sbb
jecxz
mov
pushf
fwait
lods
stos
sub
lods
mov
lret
flds
hlt
cltd
int3
sub
sbb
lock
pop
iret
stos
or
dec
gs
mov
or
int
cmp
testb
lods
pushf
and
les
inc
push
in
dec
fdivrp
faddl
jns
movsl
pop
sub
push
fcmovnu
xchg
or
cli
xchg
or
leave
mov
daa
sbb
out
or
cld
adc
mov
aas
push
mov
sbb
es
sti
sbb
das
and
fs
mov
xchg
mov
and
loopne
leave
add
lods
xchg
ficoms
sahf
add
push
rorl
mov
nop
into
insl
dec
ss
pop
add
sub
gs
or
cmpsl
test
sbb
pop
xchg
call
inc
out
jg
cmp
stc
divb
push
pop
sub
jnp
push
add
out
or
paddusw
fadds
mov
mov
adc
stos
or
faddl
and
mov
loope
ret
cli
out
cmp
paddw
xchg
mov
sub
or
mov
push
enter
xor
cmp
mov
out
and
into
inc
mov
fiadds
fs
adc
dec
pop
xorl
cmp
mov
lods
xchg
or
into
xchg
xor
scas
fstps
mov
pop
ds
and
cmpsl
mov
jmp
sub
xchg
lahf
mov
ss
test
xchg
pop
scas
ret
out
fdivr
push
adc
test
ds
pop
mov
cmp
popa
pop
xchg
pop
push
fs
xchg
sub
push
jmp
jae
xor
mov
push
scas
jge
add
cld
aad
push
mov
out
inc
test
cmp
pop
addb
push
push
scas
mov
xchg
fistpl
inc
fidivrs
xlat
mov
fwait
mov
and
mov
aas
test
add
insl
mov
mov
addr16
or
js
pop
jmp
xlat
push
hlt
into
or
sub
or
mov
fidivs
and
sub
or
es
dec
add
loopne
jae
pop
je
addl
mov
jb
push
dec
cmpsl
fnstenv
cmp
sub
dec
xchg
or
lret
sub
fsts
imul
loop
xor
inc
aad
imul
jp
cli
in
add
out
in
mov
fwait
imul
pop
dec
fiaddl
or
push
sub
incb
lret
pushf
sbb
rorl
lret
or
dec
jecxz
push
mov
in
push
fbld
mov
jl
pop
mov
inc
mov
cmp
dec
int3
arpl
mov
dec
pop
scas
mov
jbe
mov
lods
dec
call
jmp
dec
pop
mov
scas
push
aad
mov
add
outsb
fisttpl
insl
les
cmp
lret
stc
pop
mov
je
cmpl
std
fisubl
inc
out
xchg
roll
or
xchg
dec
mov
cltd
push
loop
mov
das
dec
sbb
pop
mulb
out
outsb
push
cmp
repnz
sti
daa
sub
fimuls
cmpb
add
test
xchg
or
lcall
sbb
or
shlb
sahf
in
ret
cwtl
test
fwait
adc
jecxz
cwtl
in
stc
inc
out
and
clc
shrb
daa
das
and
test
dec
insb
fs
ja
gs
subl
or
cmpsb
vmovd
ret
movsb
das
xor
lods
scas
jno
test
jae
xchg
xchg
jnp
lods
push
push
aas
sbb
add
dec
popf
and
enter
movsb
jge
or
addr16
test
sbb
shll
jno
jne
ds
push
shrl
pop
sarb
cmp
and
dec
dec
cmp
sbb
cmp
daa
lret
or
inc
xchg
inc
push
subb
adc
divb
push
cwtl
jne
les
mov
sbb
jl
aam
pop
pop
push
jbe
insb
mov
xchg
xor
inc
jno
pusha
pop
cmc
bound
jb
sbb
insl
push
cmp
lahf
xor
inc
aam
cmpsb
mov
out
push
jle
or
stos
cwtl
mov
outsb
es
mov
adc
es
push
sarl
imul
test
inc
cmpsl
push
push
bound
xor
push
data16
mov
or
hlt
add
sarb
sarb
xor
ret
mov
aad
leave
sub
sarl
loop
sub
dec
out
jp
pop
xor
push
roll
shlb
loope
sbb
jge
hlt
ltr
jl
push
or
cli
orl
dec
cmpsb
jns
dec
arpl
jns
jg
and
sbb
push
push
dec
rcrl
test
cmp
mov
hlt
add
add
push
bound
hlt
popl
out
add
add
mov
push
sub
adc
test
jecxz
sub
in
xor
hlt
jo
push
or
adc
bound
jns
mov
loope
jle
push
push
shlb
adc
inc
dec
xchg
cmp
repz
push
pop
ret
mov
insl
aaa
rorl
cltd
lahf
jg
jecxz
pop
jg
push
sbb
xchg
sub
or
hlt
imul
lods
clc
fistpll
in
mov
mov
fwait
scas
pop
and
sti
insl
cmpsb
out
testb
adcb
mov
fcoml
add
jno
push
mov
cmp
mov
cmpsl
mov
mov
cmp
loope
mov
and
mov
inc
cmp
push
jb
jmp
incb
in
or
into
inc
fnstcw
mov
div
sbb
xchg
nop
in
sub
sti
lock
int3
jnp
jo
js
xchg
mov
stos
dec
jnp
sahf
mov
and
or
pusha
sbb
stos
mov
cmp
pop
sbb
cmp
ja
repnz
daa
pop
aas
in
sub
xchg
stos
sub
mov
sub
xor
sub
rep
push
repz
push
lret
testb
add
mov
int
hlt
jge
ret
loop
pushf
repnz
dec
mov
cmp
jg
sbb
daa
inc
pushf
int
cmp
pop
addl
or
aad
ret
pushf
push
aad
cmc
insl
repz
pop
cltd
cmpsl
xchg
cmpsl
mov
sbb
jmp
loope
std
out
jmp
fisttpl
scas
dec
pop
shlb
dec
adc
int
fistl
scas
scas
out
jle
out
xchg
aas
and
and
mov
lods
mov
sbb
mov
icebp
cmpsl
leave
ja
or
stos
mov
cmpsl
dec
mov
test
leave
les
mov
test
popf
aas
push
dec
mov
and
adc
pusha
mov
out
movb
mov
divl
out
je
xchg
fimull
adc
push
pop
xor
pop
jae
mov
add
loop
lods
sbb
xchg
shlb
jl
fnstenv
arpl
ja
ja
pop
aas
jb
ret
pop
out
das
jb
and
insb
push
xchg
fdivr
cmp
push
fmul
xor
mov
push
lcall
aas
mov
xor
pop
pop
push
jb
push
fmuls
and
sahf
add
add
in
or
test
and
add
jo
mov
adc
dec
shll
data16
fsubs
arpl
xchg
jbe
and
ja
xor
fsubrl
cltd
add
loop
jns
push
fdivl
mov
mov
mov
cs
insl
mov
sarb
pop
daa
jle
inc
jnp
subl
ja
sbbl
push
pop
or
call
bound
adc
sub
jg
xchg
inc
xrelease
mov
cltd
enter
xchg
roll
je
les
sub
pop
and
sbb
loopne
sti
add
sbb
psubusb
ljmp
cli
fisttps
or
xor
mov
jbe
fldt
mov
cmp
imulb
push
les
lds
data16
xchg
and
and
aam
fildl
test
pop
test
iret
stos
mov
imul
inc
aaa
cwtl
movsl
enter
xchg
cmpl
mov
loopne
sub
xchg
leave
push
icebp
addr16
outsl
xchg
cwtl
jns
icebp
mov
add
sub
sub
gs
js
lods
jmp
dec
dec
outsl
pushf
psubsw
pop
movsb
pop
adc
xchg
ret
mov
or
rclb
fists
adc
popf
gs
in
jecxz
sahf
js
ret
cmp
cmp
mov
inc
xor
movsb
pop
insb
mov
andb
out
inc
jl
dec
lret
inc
sub
rorl
sbb
rcrb
arpl
dec
adc
xchg
std
push
jo
aaa
sub
pop
sbb
or
pop
xchg
shll
dec
inc
lds
mov
mov
xchg
lret
cmp
sti
stos
lock
addr16
sahf
cld
orb
aam
pop
xchg
daa
ret
cmpsb
scas
test
mov
sub
repnz
mov
adc
jae
sbb
or
xchg
dec
push
stc
jl
mov
mov
sub
addb
lods
pop
jb
cmpsl
repnz
jb
mov
fwait
or
mov
mov
cltd
mov
jg
push
fistpll
lret
jnp
insb
jecxz
and
adc
rcl
and
pop
out
push
repnz
movsl
add
push
and
xor
arpl
rcl
cmp
sub
lahf
mov
testl
jo
xor
fwait
ljmp
leave
and
jp
repz
int3
das
xor
push
adc
test
mov
push
pop
jg
xor
jb
dec
cmp
add
aad
andb
icebp
mov
call
push
rcr
xor
jne,pn
fcoml
loope
dec
or
pop
shlb
add
adc
sahf
pusha
jge
lods
in
pop
xchg
negl
dec
add
xor
fmuls
add
mov
inc
popa
gs
xchg
push
mov
aaa
inc
movsl
mov
sti
cmpsb
mov
repnz
in
sbb
mov
mov
je
mov
scas
xor
lret
jge
cli
fcmovnbe
imul
clc
clc
and
insl
ljmp
adc
in
sub
cmp
push
sbb
jo
jge
mov
ss
xchg
xor
push
sti
arpl
xor
mov
insl
test
rcrl
sbb
jle
sub
ja
dec
xor
inc
xlat
xor
mull
ret
in
xchg
loop
es
lods
shrb
dec
dec
stc
add
fwait
push
mov
test
loop
out
adc
add
dec
jl
mov
xchg
je
mov
mov
pop
flds
mov
and
or
sub
dec
jae
aas
outsb
movsl
cmp
jle
into
fsubrs
xchg
aas
xor
es
pop
and
aaa
setae
mov
push
out
into
lret
mov
jo
mov
mov
mov
dec
dec
pop
pop
and
sub
arpl
adc
test
fidivs
pop
add
aad
pushf
mov
pop
rcl
jmp
cmp
cmpsl
push
xor
push
ss
jge
pop
inc
int3
lahf
mov
mov
ss
mov
pop
mov
inc
sub
sub
mov
adc
aaa
insb
sbb
or
sbb
push
mov
pminsw
call
dec
mov
les
rcrl
mov
mov
lret
into
lahf
lods
pop
mov
test
pop
push
hlt
push
adc
and
mov
clc
cld
add
jl
push
sbb
xchg
cmp
adc
iret
test
inc
mov
arpl
cs
daa
out
push
mov
arpl
mov
insl
or
divl
and
and
imul
hlt
mov
xorl
xor
xor
and
outsb
sti
and
pop
and
out
ss
push
in
sub
sar
lds
int
repz
cmp
dec
pop
mov
es
cmp
adc
mov
or
setno
or
sbb
mov
daa
and
mov
pop
gs
add
push
lgs
mov
mov
nop
cmp
out
nop
call
mov
leave
pop
in
in
inc
sbb
ja
test
data16
pusha
fstpl
nop
push
lds
mov
mov
mov
and
outsb
stc
loop
fwait
push
lds
mov
add
insb
adc
push
dec
out
cld
rorl
jae
cmc
pop
sti
les
jge
sbb
jns
std
ja
out
fwait
mov
clc
imul
adc
pop
jecxz
cmp
pop
and
call
in
push
out
mov
or
cmpsb
mov
or
mov
dec
mov
scas
fmul
or
cmpsb
adc
jp
xchg
lods
cmpsb
cltd
rolb
mov
mov
sub
rolb
mov
loope
lea
inc
pop
filds
cli
pop
mov
add
daa
add
sti
xor
jle
jns
cmp
pop
rol
inc
pop
roll
roll
mov
mov
pop
rcrl
and
mov
out
test
push
pop
jmp
jecxz
popf
xchg
mov
aas
push
push
movsl
push
pop
and
mov
les
fdivrs
ret
add
jg
mov
pop
jg
lds
lock
or
sbb
add
test
cmpb
cwtl
pop
jecxz
call
inc
insb
clc
xor
in
xchg
repnz
out
add
mov
shl
insl
jnp
pop
jle
sti
sbb
jp
sbb
cs
daa
dec
stos
xchg
and
cwtl
outsb
xlat
sbb
fwait
out
xchg
inc
pop
lret
cwtl
adc
push
lahf
xor
jbe
shl
lds
cmp
add
popa
cmp
imull
insl
out
push
inc
aaa
arpl
mov
jp
lahf
dec
sub
inc
inc
adcb
dec
push
icebp
shll
ret
popa
sbb
jae
cmp
call
cmpsb
sub
inc
int
loope
or
mov
mov
nop
pop
repnz
idivb
jecxz
mov
outsb
shlb
fnstsw
xor
mov
iret
aad
xchg
sbb
adc
push
fnstenv
outsb
lods
jne
pop
and
fcompl
and
jbe
add
fiaddl
jg
sub
out
mov
call
in
push
lods
loopne
mov
test
jmp
lods
cmp
and
loop
stos
out
xlat
push
sets
outsb
sahf
ret
imul
aaa
sub
dec
lods
decl
push
push
inc
xchg
and
and
push
rcr
cmp
xchg
outsb
push
aaa
addl
stc
pop
pop
hlt
cmpsb
cmp
xor
daa
inc
push
out
xor
cwtl
cmc
inc
sub
cltd
fwait
insb
push
pop
jae
cli
push
fisttpll
gs
outsb
stos
cmp
fbstp
lock
sub
out
fdivrl
in
xchg
call
pop
cwtl
mov
repnz
stos
jb
gs
call
fwait
mov
push
cltd
mov
decl
outsl
cli
popa
cmc
sub
das
mov
mov
pop
lret
sbb
push
or
test
sbb
je
jb
andl
scas
jnp
sarl
shl
cltd
ljmp
insl
insl
test
cmp
sahf
sbb
jne
add
jp
sar
lahf
bound
xchg
dec
mov
and
jl
sbb
or
or
insl
and
in
sahf
fistl
jno
repz
rorb
push
fxam
out
jbe
push
cltd
sbb
and
push
add
inc
in
out
cwtl
push
inc
push
xchg
sub
mov
pop
ja
mov
pop
push
and
cmpsl
stos
sbb
pop
and
notb
stc
xor
adc
xchg
popf
inc
or
inc
mov
or
sarb
push
fwait
jg
jecxz
xchg
ss
dec
inc
mov
xchg
cwtl
push
mov
add
idivl
sbb
addr16
mov
mov
or
or
insl
lret
aas
addr16
cmpl
and
inc
mov
pop
mov
adc
mov
and
cltd
pusha
scas
psrad
cmp
sub
lock
mov
mov
dec
loop
mov
std
imul
cmp
jge
or
xor
mov
add
mulb
xlat
jnp
push
mov
jae
ljmp
les
add
jbe
mov
insb
ljmp
mov
mov
dec
cltd
les
dec
dec
dec
dec
jge
cmp
popl
testl
pop
repnz
adc
cmp
es
dec
sbb
mov
pushf
lret
mov
xchg
mov
rclb
dec
push
popf
mov
out
in
pop
push
gs
adc
je
jecxz
jnp
into
dec
mov
rolb
cmpsl
sbb
ljmp
mov
jp
jno
clc
and
mov
mov
push
out
faddl
dec
jecxz
pushf
adc
es
aas
pop
jae
and
mov
and
push
add
scas
adc
sub
mov
add
push
mov
pop
mov
mov
dec
pop
pop
add
pop
dec
sub
int
out
push
ss
add
ljmp
or
ds
inc
je
outsb
ret
inc
jecxz
dec
and
cs
fadd
and
out
mov
xor
push
jge
push
sub
fcmovnbe
inc
and
pop
out
sbbl
gs
adc
pop
and
jecxz
aas
sub
out
daa
clc
jbe
xlat
xor
mov
mov
js
movsb
aad
lcall
pushf
andl
and
scas
movsb
fptan
sub
lea
sbb
jae
dec
pop
mov
pop
stc
ljmp
imul
jle
inc
cli
mov
fs
rorb
insb
pusha
pop
jge
lahf
lret
pop
mov
data16
jne
outsb
cmp
adc
mov
cmp
cmc
lahf
add
arpl
dec
out
adc
inc
lcall
out
lods
dec
sbb
cmp
cmp
xchg
hlt
outsl
mov
in
out
in
in
insb
fstpl
add
fisttpl
inc
dec
and
stos
lcall
jne
aam
mov
xchg
mov
cmpsb
js
xchg
adc
push
add
lahf
jbe
je
ss
lds
orl
test
xchg
les
xor
pop
or
push
mov
fsts
scas
test
out
cltd
cmp
mov
cmp
push
shrb
mov
lret
std
test
mov
mov
pop
fdivl
arpl
enter
iret
jo
ja
mov
or
lods
jg
sub
lods
adc
adc
mov
sbb
cmpsb
lds
js
adc
popf
inc
test
lods
sub
out
and
or
cs
jl
xlat
icebp
push
loope
dec
xchg
leave
xchg
xchg
sbb
sbb
jns
push
adc
adcb
loope
out
fwait
ds
data16
addr16
test
iret
stc
ss
mov
mov
insb
lret
sub
dec
push
mov
pop
xlat
rcrb
mov
scas
lcallw
nop
out
clc
jl
mov
aam
push
xor
push
mov
mov
ja
test
xchg
cli
frstor
lahf
pop
out
dec
lcall
sbb
or
push
push
ljmp
dec
out
jge
jae
aaa
inc
out
lahf
fisubl
mov
popa
in
decb
out
shl
daa
cmp
outsl
and
fmull
dec
lahf
stc
cmp
mov
lods
enter
add
sbb
sub
idivl
pop
dec
push
into
jns
xchg
fcmovu
cwtl
mov
ljmp
jbe
sbb
mov
loope
or
cltd
lea
mov
mov
mov
out
testb
sub
xorl
cmp
fidivrs
adc
fsubr
scas
pop
test
pusha
xchg
dec
jge
add
es
add
cmp
push
cmc
dec
lods
jnp
insb
sbb
add
shrl
inc
js
jmp
push
add
add
enter
jb
inc
and
mov
movsl
push
pop
test
ljmp
out
sub
mov
gs
mov
fisttpl
daa
adc
rcll
sub
cmp
fwait
xchg
sti
sub
sti
jmp
and
aad
push
insb
insl
loopne
loopne
mov
lret
inc
lods
cmp
cmp
inc
mov
cmc
mov
test
push
lock
mov
xlat
gs
ret
push
pop
sbb
ret
je
imul
sub
rcrl
lea
sub
sahf
scas
dec
jns
push
sub
push
jns
xchg
ficoms
inc
mov
cmp
cmpsl
ret
jmp
lods
jo
in
mov
pop
fadd
clc
cs
push
fwait
push
cmpsl
scas
mov
jg
inc
scas
negl
ja
fisubrs
test
sub
xchg
in
or
pop
or
rorl
dec
jb
push
xchg
int
inc
xchg
or
test
fildll
pusha
add
and
into
cmp
pop
dec
ja
test
jle
ss
jecxz
mov
mov
popl
out
or
fisubs
mov
icebp
mov
adc
or
sbb
loop
test
mov
popf
ret
mov
repz
xor
dec
out
jnp
and
jb
clc
icebp
push
arpl
pop
xchg
xchg
push
shll
lock
xchg
in
xor
int3
arpl
mov
mov
and
push
fcmovne
and
jns
push
in
push
add
inc
jnp
shlb
xchg
stc
cltd
cmp
arpl
outsb
dec
daa
out
jmp
inc
ss
rcl
test
push
inc
ja
push
push
aad
and
mov
lcall
cmp
add
lea
movsb
mov
or
into
mov
pusha
jno
pusha
out
das
adc
xchg
hlt
xor
ret
pop
test
iret
pop
out
add
loope
pop
jp
fcmovnb
and
inc
lods
in
push
sbb
sub
es
push
popf
ret
mov
jno
cmp
dec
mov
incl
inc
sti
fs
stc
sahf
test
adc
arpl
or
aad
faddl
fimuls
outsl
insb
and
ljmp
sub
repnz
rol
jo
imul
xchg
and
jns
fwait
fsubl
repz
loop
xchg
setno
movsb
mov
adcl
cmc
jnp
jmp
push
ljmp
xor
out
les
xor
fidivrs
rcr
std
cmpsb
loop
repz
sbb
mov
mov
lret
ja
or
bound
imul
clc
pop
movsl
pop
sti
fs
les
fildll
mov
or
mov
pop
mov
xchg
xchg
iret
sub
fcoms
adc
leave
sub
div
adc
and
inc
mov
fiaddl
inc
mov
and
sbb
pop
sbb
jecxz
xchg
and
push
jge
mov
sub
rcrl
outsb
insl
loope
jmp
xor
mov
and
subb
out
xorb
movsl
fistpl
popa
cmpsl
adc
xor
inc
je
daa
icebp
adc
pop
adc
aas
sbbb
push
pop
aas
mov
sbb
hlt
cwtl
std
iret
adc
pop
mov
or
mov
scas
in
mov
cs
imul
stos
push
adc
or
addr16
mov
mov
jne,pt
mov
dec
xchg
ja
lea
pop
or
test
inc
pop
inc
gs
mov
insb
popa
push
pop
dec
test
lea
stc
js
les
shlb
sub
repnz
mov
lea
imul
inc
xchg
ljmp
in
jb
and
push
push
dec
lahf
lea
stc
add
int
cmp
das
in
loopne
jecxz
fcmovb
push
pop
aad
xchg
adc
mov
mov
xchg
loop
adc
incl
xchg
arpl
jge
jp
sub
test
push
in
jae
fdivrl
scas
out
mov
in
cltd
ret
sub
aaa
stos
aad
shl
enter
and
jnp
add
adc
xor
pop
iret
lods
into
pop
js
or
push
mov
cmc
mov
and
mov
push
jge
sarl
cmp
sti
jle
xchg
mov
ret
or
cmp
push
lret
xchg
mov
sub
cwtl
sub
data16
xlat
jne
inc
inc
stos
pop
push
aad
adc
daa
lds
jl
sbb
int3
ror
push
loopne
xchg
fwait
scas
int3
hlt
and
imul
fbstp
push
and
ficompl
pop
arpl
mov
fimuls
mov
lods
add
xor
aam
mov
sbb
stos
loopne
lods
cmpsb
aad
mov
scas
or
sub
sub
xor
dec
xor
jnp
jno
notl
inc
sub
negb
fiaddl
sub
mov
scas
adc
shlb
ffree
jb
fcomps
gs
jbe
scas
movsl
scas
add
jo
and
insb
cmc
xlat
mov
pop
lock
lods
int3
add
xchg
arpl
les
cltd
mov
movsl
add
sbb
mov
ficomps
in
enter
or
or
xor
push
push
add
les
sbb
loop
sub
lods
outsb
push
ficomps
outsb
repz
jl
xchg
and
ja
in
pop
xor
loop
inc
xchg
movl
pop
dec
out
cmpsb
lods
xchg
or
addl
jae
imul
lcall
inc
gs
jns
add
inc
cmp
xor
cmp
sub
inc
and
insb
inc
mov
push
loope
andw
mov
inc
and
jg
cmp
lahf
test
jbe
xchg
test
jo
xchg
xchg
xor
pop
inc
xchg
test
jae
ss
jp
cmp
mov
sbb
jb
xchg
dec
jno
xchg
dec
ret
scas
push
push
cmp
sub
test
jp
test
or
jnp
out
xchg
addr16
outsb
mov
and
cmpsb
mov
mov
addr16
or
mov
sbb
fistps
scas
bnd
xchg
lahf
shrb
adc
xchg
ljmp
push
decl
leave
add
loop
xchg
add
xchg
cmp
stc
dec
sbb
dec
dec
sbb
imul
pop
pop
aad
inc
lahf
je
testb
imul
ss
jo
push
test
mov
mov
jb
lret
pop
push
xchg
loope
sub
scas
les
jb
push
stc
mov
fdivrs
or
pop
xor
jge
sub
sbb
jbe
or
lods
xor
mov
movsb
adc
rcrb
xor
add
cmp
fcmovu
enter
push
inc
sub
in
cmp
or
mov
mov
adc
jp
jecxz
mov
sti
sub
popa
or
push
lcall
dec
icebp
ret
add
jmp
dec
lock
fisubl
call
je
dec
sub
addr16
std
adc
sbb
lods
push
loop
testl
aad
mov
mov
in
mov
dec
sbb
js
inc
xchg
mov
jecxz
xchg
mov
leave
faddp
cmpsl
sub
fcmovnbe
movsl
adc
xor
fsubs
and
into
add
adc
test
sahf
pop
sbb
and
xlat
sbb
xor
stos
dec
cli
iret
jno
sub
leave
stos
mov
das
or
sti
xchg
lcall
out
fucom
jnp
ja
int3
pop
shlb
cld
jl
leave
sbb
jb
roll
cli
out
mov
xchg
mov
mov
std
loope
jns
mov
sbb
push
rcr
and
sub
or
mov
adc
pop
dec
dec
cmp
pop
xchg
ror
add
or
scas
inc
jecxz
or
lea
adc
shlb
lea
mov
xor
jg
jno
ljmp
inc
ret
out
leave
adc
loopne
fisubs
jmp
inc
sub
inc
add
pop
and
push
jmp
cmpsb
std
test
push
aad
popa
fstpt
imul
jl
mov
cld
aam
bswap
outsb
arpl
add
sbbl
mov
shlb
jle
mov
and
cmc
pop
dec
fistpl
dec
adc
or
sbb
jge
push
sub
push
bound
mov
jl
testb
push
loopne
insl
xor
adc
adc
push
ret
mov
dec
pop
adc
cmc
insl
xlat
leave
cmp
cmc
test
dec
icebp
subb
mov
bound
in
sub
jg
fs
jmp
jge
out
sub
outsl
js
mov
pop
pop
cli
cmp
mov
adc
jb
insl
outsl
pusha
sub
insl
mov
push
jge
jnp
mov
dec
xchg
mov
hlt
xchg
clc
sub
out
push
inc
je
mov
aad
inc
std
ljmp
lcall
lret
dec
shrl
adc
push
inc
inc
adc
push
loopne
sarb
xlat
push
stos
mov
add
and
jl
xor
xchg
mov
xor
repnz
push
or
out
mov
dec
add
daa
mov
fildll
leave
sbb
fimuls
inc
mov
and
push
fstl
cltd
dec
aas
stos
je
cmc
add
jle
mov
fdivrl
in
add
push
mov
std
aaa
test
sub
mov
dec
adc
and
mov
cli
or
xor
ss
aad
rcl
nop
andb
sub
dec
pop
les
pop
lahf
cmp
or
cmp
add
fdivrl
push
mov
lret
dec
popa
insb
mov
and
push
mov
es
mov
and
gs
add
mov
xor
rcll
jno
outsb
fsubs
cwtl
mov
jne
mov
mov
cli
mov
jno
js
mov
cmp
shrl
xchg
add
xchg
sub
call
push
or
mov
cltd
cmpsb
inc
ret
call
jl
add
int3
lret
cli
shl
jge
push
xchg
add
pop
movsb
xor
lret
in
sbb
data16
test
lret
add
mov
inc
cltd
sbb
mov
xchg
push
rolb
enter
xchg
imull
fldcw
jp
out
daa
push
outsl
sub
adc
leave
inc
fisubrs
aaa
ret
and
push
cmpsl
push
lahf
mov
mov
pop
aaa
jbe
dec
and
xchg
das
icebp
pop
jle
xchg
and
add
movsb
inc
popa
add
es
mov
push
scas
adc
xchg
dec
shrb
lods
cld
cld
jbe
xchg
sub
cmp
aad
fucomip
sbb
sub
jbe
adc
xor
sahf
inc
add
icebp
movsb
ds
inc
sub
lock
jno
push
inc
mov
ss
pushf
or
xchg
and
add
cmp
cli
mov
in
stos
nop
cmp
pop
or
push
in
mov
cld
ljmp
sub
lret
nop
and
mov
sbb
mov
or
ret
push
or
push
ja
das
mov
xchg
stc
sub
cmpsl
sub
mov
or
scas
add
cmpl
imul
cmpsl
stos
dec
dec
lret
mov
ss
sub
faddl
fsubrs
mov
negl
fmul
jmp
pop
xchg
mov
clc
dec
popf
ror
mov
mov
mov
ja
sbb
les
adc
and
cmp
bound
add
fnsave
test
out
loop
fdivrp
mov
push
scas
in
and
addb
adc
pop
enter
insb
dec
or
aam
mov
inc
lea
repz
xchg
sbb
sbb
jo
xlat
push
dec
stos
ret
add
mov
mov
icebp
add
adc
inc
cmpsb
and
push
mov
pop
ja
or
xchg
mov
les
ficoms
iret
enter
mov
push
inc
add
aam
add
pop
mov
jp
cmc
fadds
fistl
pop
inc
pop
ret
popa
fwait
cs
sub
add
stc
adc
cmpsl
lahf
dec
push
daa
and
fnsave
int3
push
mov
ljmp
rcrb
cwtl
stos
dec
xor
subb
roll
sahf
push
and
js
repnz
int
xchg
hlt
jge
sub
rorl
inc
mov
jge
cmp
enter
lcall
cwtl
mov
push
pop
mov
xchg
cltd
mov
jb
and
xchg
xchg
jmp
mov
dec
insb
pushf
and
pop
js
ror
adc
mov
sbb
imul
inc
add
cmpsb
mov
jg
jo
les
stos
mov
imul
lods
mov
jnp
test
mov
adc
cmp
jae
xchg
sbb
addb
and
dec
imul
push
popa
cmpsl
repz
jecxz
in
imull
test
add
aas
xchg
loope
dec
out
and
jmp
es
mov
cmc
mov
or
test
dec
xor
iret
cmp
mov
js
sub
shrl
rol
loopne
mov
mov
bound
cltd
repz
sub
mov
jp
orb
xchg
adc
repz
adc
stos
test
dec
rorl
leave
pop
inc
cmp
jbe
cli
ja
dec
imul
sarb
cmpsb
ja
adc
sub
pop
outsb
out
mov
shlb
xchg
push
aaa
mov
add
mov
add
rcll
stos
xchg
repnz
bound
and
ficomps
and
pop
jbe
jge
jno
push
shrb
mov
mov
dec
lods
lods
or
ss
dec
cmp
sub
push
ret
fisttpl
ret
std
adc
cmp
dec
xor
std
cli
sahf
mov
cmp
lcall
jns
fldl
cmpsb
xor
dec
pop
pop
repnz
jle
adc
outsl
loop
xor
push
mov
rcr
lods
ja
or
cwtl
dec
cmpsb
rolb
mov
loope
dec
jmpw
int3
enter
push
addr16
mov
adc
dec
in
sub
icebp
popf
add
dec
or
pop
sbb
loop
jb
jo
fucomi
xor
add
dec
xor
and
test
out
or
je
sti
mov
ret
xchg
xchg
imul
xor
inc
inc
push
mov
mov
push
mov
mov
mov
cmpsl
cmp
decl
pop
out
test
push
insl
jp
jecxz
es
jmp
data16
sbb
cmc
xchg
repnz
dec
push
mov
fsubrs
mov
mov
sub
pop
fsubs
pop
pop
add
aam
add
shll
lret
jecxz
sbb
mov
loop
call
or
pop
sbb
test
push
movsl
cmp
push
mov
mov
jns
push
pop
sub
dec
insb
int3
jge
xchg
pop
push
xor
adc
jecxz
dec
lret
and
and
ss
repnz
aad
in
shr
inc
gs
sub
mov
cltd
add
mov
xorl
sub
push
stos
shl
pop
aam
movsl
jle
rcrl
dec
arpl
and
add
add
into
push
adc
pop
js
jp
push
push
dec
jmp
addb
mov
jnp
xor
popf
shr
push
jge
jg
pop
or
mov
in
jge
or
jno
xchg
cmpsb
adc
cmp
faddl
xor
popf
ret
adc
scas
cmpsl
test
mov
fadds
fistps
mov
sub
or
repz
mov
repnz
ja
pop
stos
mov
add
mov
fnstsw
mov
or
cmp
and
push
inc
xor
and
rolb
aas
push
bswap
cltd
in
sub
sbb
lahf
fnstsw
nop
mov
lret
cmp
pop
or
xor
outsl
test
xor
sbb
dec
jne
push
flds
call
aaa
jbe
aam
mov
mov
inc
cmp
adc
out
adc
push
icebp
test
jmp
xor
jns
js
fs
mov
imul
jnp
lret
out
mov
dec
push
xchg
xlat
or
push
add
mov
sar
push
or
int
push
nop
inc
jbe
pop
outsl
xchg
mov
pop
mov
imul
imul
push
xchg
xchg
mov
insb
cli
xchg
jbe
stos
daa
cmp
fs
repz
mov
dec
cmp
push
adc
neg
mov
mov
or
and
adc
sbb
lea
lea
int
inc
icebp
scas
in
popa
inc
mov
mov
dec
push
mov
xor
idivb
sbb
jbe
out
je
lret
xchg
xchg
leave
mov
pop
dec
sarl
mov
pusha
push
inc
lock
dec
jle
xor
outsl
jmp
mov
fisubs
sub
mov
cmp
into
addr16
imul
xor
insb
cld
pop
cli
loopne
aad
push
imul
or
nop
mov
aaa
cmpsl
mov
add
mov
nop
sti
fwait
in
decb
fwait
dec
xor
dec
pop
test
dec
sbb
jnp
lods
repnz
sub
dec
movsl
push
shrb
test
sbb
mov
in
nop
pop
push
cmp
stc
rcll
mov
push
mov
imul
lds
sahf
or
fldz
fimull
jle
xor
cli
push
test
mov
das
jns
mov
jns
test
fwait
in
jo
xlat
cmp
mov
in
adc
dec
test
jl
or
fcompl
cmc
in
test
sbb
jl
lods
adc
jmp
pop
das
inc
sub
mov
testl
imul
clc
test
lret
xchg
out
ret
popa
insl
mov
cmpb
jp
nop
fs
pop
xchg
mov
cmp
stc
aaa
rcll
out
dec
xlat
inc
addb
add
sbb
xor
shll
pushf
pop
repnz
fcomps
lea
rcl
call
movsb
mov
loope
mov
mov
rorl
ds
push
xor
xchg
dec
inc
into
bound
loope
cmpb
int
call
jnp
aas
dec
push
xor
cltd
in
push
scas
cmp
push
xchg
test
pop
cwtl
stc
mov
adc
nop
mov
cltd
jbe
push
fstl
push
and
std
mov
int
jo
mov
fstps
sbb
test
fsubs
bound
shrb
icebp
faddl
jae
stos
sbb
dec
xor
ss
cmpl
inc
jbe
mov
xor
mov
push
inc
or
fcoml
imul
jp
add
cmp
xchg
stos
xchg
jmp
in
int3
dec
loopne
mov
pop
xlat
cld
ja,pt
scas
push
mov
enter
sbb
jecxz
das
ss
jl
mov
jbe
pop
decb
sti
in
push
cmpsb
test
pop
in
faddl
fnstenv
fcoml
icebp
mov
add
mov
dec
flds
push
cmpsl
mov
aas
jo
mov
and
inc
outsb
pop
fwait
or
mov
mov
jno
mov
xchg
cmp
test
sbbb
jmp
mov
jns
xchg
hlt
and
xchg
inc
add
mov
and
pop
imul
vpmacssdql
jns
sbb
adc
mulb
pop
aad
shl
dec
and
iret
sub
cmpb
movsb
lods
lock
mov
and
xchg
cltd
mov
or
testl
sbb
cwtl
xchg
push
jnp
add
pop
mov
stos
fs
xor
pop
stos
xor
lods
xchg
or
enter
js
xchg
ret
in
sub
rcl
pushf
push
or
fs
stos
stos
outsb
xchg
daa
bnd
daa
or
pop
jae
in
enter
lahf
sbbb
lods
sub
test
ret
movsl
fucom
adc
add
lds
cld
jecxz
popf
aaa
mov
fmuls
xchg
ret
ljmp
pusha
ja
adc
insl
aad
repz
insl
imul
cmp
push
out
outsl
out
imul
cmp
jg
xchg
push
dec
mov
push
stc
ret
or
mov
jecxz
scas
idivl
aad
and
lret
xchg
adc
in
call
into
cwtl
push
push
lahf
inc
sbb
mov
and
dec
xor
adc
xor
adc
std
rcrb
shrl
mov
cmovae
push
mov
test
dec
sbb
xchg
sub
pusha
out
lret
and
iret
leave
sbb
pop
out
jg
pop
pushf
sahf
xchg
stos
mov
sbbb
rorb
insb
fcmovnbe
jl
ljmp
cs
pusha
xchg
pusha
aam
mov
jno
and
jnp
imul
icebp
cwtl
aam
push
in
aaa
sbb
cwtl
sbb
cmp
fdivl
push
in
jmp
gs
jno
es
rcrl
mov
push
and
jge
push
inc
pop
jnp
mov
push
pop
or
sub
in
add
mov
dec
add
call
jne,pt
in
insb
sbb
jo
push
movsl
lahf
cmc
pop
test
js
ret
test
les
out
jae
sub
push
int3
mov
insl
addb
xor
add
or
imul
adc
push
push
add
enter
pop
jnp
push
jb
or
outsl
loope
test
mov
lods
pop
lcall
jge
imul
cwtl
add
pop
outsl
movb
dec
add
inc
ljmp
je
lahf
push
jno
les
and
pop
into
mov
addr16
shrl
sub
pop
mov
mov
xchg
cmpb
test
leave
movsl
mov
mov
sub
jno
dec
in
xchg
cmp
je
sbb
mov
pop
jnp
add
std
daa
scas
mov
sbb
or
mov
fistl
test
mov
mov
xchg
mov
and
and
ret
frstor
push
call
sbb
adc
push
and
jl
add
lea
sbb
mov
test
push
push
popa
mov
ret
sub
cmpsl
mov
sub
fiadds
mov
or
or
sbbl
pop
les
mov
pop
push
ss
inc
icebp
imul
aad
vpsubd
dec
inc
sbb
mov
leave
lcall
lods
mov
frstor
lcall
lods
push
push
mov
imul
stc
mov
inc
mov
imul
mov
xchg
in
loop
dec
lahf
dec
mov
mov
inc
jmp
mov
inc
inc
data16
jl
shrb
or
pop
pop
adc
je
ret
xor
xchg
pop
pop
xor
dec
xor
xchg
inc
add
fisttpll
out
dec
add
test
pop
mov
ficoml
mov
jge
inc
pop
fstpl
cmp
xchg
sub
into
aad
jp
adc
stc
pop
push
dec
divl
sbb
imul
mov
push
cmpsl
loope
jg
and
aam
cmpsb
lcall
loope
jae
mov
pop
pushf
test
test
xchg
outsl
add
add
scas
jnp
inc
jle
jg
xor
ucomiss
mov
mov
mov
icebp
inc
dec
pop
dec
jnp
out
cltd
ljmp
test
in
sbb
sti
cs
gs
test
xchg
push
lock
jg
cld
and
dec
aam
ds
jmp
test
pusha
shlb
mull
adc
aam
call
shlb
inc
mov
idiv
mov
imul
mov
and
jle
les
adc
sbb
mov
mov
cmp
cs
pop
movsb
mov
jnp
ret
imul
pop
xchg
rcrl
cmp
jmp
sbb
push
jecxz
out
push
sub
push
push
loope
pop
xchg
xor
dec
jnp
repz
mov
mov
test
es
mov
loop
add
jle
sbb
jno
leave
cmp
jmp
adc
testb
pop
xchg
xchg
jmp
pop
jg
and
aas
ds
push
sahf
bound
repnz
xchg
inc
or
and
icebp
pop
nop
push
sbb
ficomps
icebp
lods
fsubrl
pop
enter
rclb
fs
imul
and
out
pop
adc
adc
mov
inc
fidivl
movsb
xor
repz
imul
push
dec
into
iret
lcall
test
xlat
stos
xchg
ffree
stc
jl
and
cmc
push
fs
test
or
mov
mov
xor
mov
jg
in
cmp
xchg
lods
pop
pop
icebp
andb
out
data16
loopew
movsb
sahf
out
add
fnstsw
cmp
fstl
hlt
sbb
jns
hlt
jne
push
mov
lret
xchg
mov
fbstp
or
lds
cmp
gs
pop
mov
add
push
rcr
cmp
jno
js
setae
imul
int3
mov
addr16
jecxz
jge
test
fisubrl
pop
lret
lret
pop
aad
jle
repz
sbb
sti
pop
loope
pop
pushf
dec
or
cltd
sbb
xchg
dec
in
cmpsl
addr16
cmpsl
sub
adc
cmp
insb
push
enter
mov
mov
lods
inc
mov
pop
sbb
add
mov
sbb
mov
lea
iret
cmc
xchg
mov
out
or
xchg
jbe
sbb
std
jnp
xor
pop
pop
into
scas
ss
pop
lock
mov
icebp
xor
mov
dec
repz
es
xor
mov
fwait
fs
inc
jp
cli
push
cli
xor
es
add
mov
movsl
push
mov
dec
mov
add
cwtl
ror
cltd
pop
push
stos
aas
std
jmp
xchg
inc
mov
jg
xchg
into
cmp
push
and
leave
jl
inc
mov
cmp
inc
fadd
ljmp
sub
insl
cmpb
sarb
jae
dec
loopne
hlt
xchg
adcb
leave
es
cld
pop
das
mov
out
dec
mov
pop
pop
push
pop
jp
daa
sub
push
imul
push
push
sub
cld
adc
mul
jnp
push
xor
jecxz
loope
cli
mov
ljmp
mov
jno
pusha
fdivs
imul
imul
cwtl
insl
cmpsl
xor
mov
pop
lahf
aas
movsb
add
pop
xchg
fucomip
push
nop
inc
test
cmp
dec
xlat
es
sub
das
fwait
popf
xor
and
xlat
add
loopne
push
mov
lahf
ucomiss
cwtl
mov
sbb
or
push
jo
jb
push
pop
loop
je
dec
cmpsl
cmp
lds
aas
and
loope
mov
xchg
js
push
ficoml
mov
add
scas
inc
sbb
adc
das
mov
scas
rcrl
imul
push
cmc
lods
xchg
lds
adc
outsb
jbe
dec
ficomps
pop
rcr
out
scas
add
pop
cmp
xor
pop
and
fucomi
mov
pushf
mov
sub
push
in
mov
in
mov
jle
bound
xor
imul
loopne
mov
sbb
xchg
dec
pop
lds
leave
fnstsw
repnz
lods
popf
or
icebp
ja
inc
xor
inc
fiaddl
jge
xchg
lahf
mov
mov
push
jmp
cmc
aas
fisubrl
xor
cld
or
movsl
sahf
pusha
mov
xchg
repz
mov
leave
pop
out
insl
test
jno
cmp
pop
call
repnz
lcall
inc
xchg
stc
adc
inc
imul
pushl
or
push
repz
mov
imul
lcall
pop
fwait
dec
mov
pop
in
push
jmp
jno
arpl
xchg
and
jno
or
in
andl
xchg
repz
in
fnclex
es
addr16
add
mov
inc
jno
rclb
std
mov
xor
inc
or
faddl
inc
aam
fnstcw
xchg
and
gs
aam
mov
test
pop
cmp
mov
mov
push
push
frstor
neg
or
jnp
mov
push
fdivr
test
mov
cmovb
sbb
mov
jg
out
inc
pop
mov
sub
dec
cmp
mov
mov
sub
dec
imul
xchg
cmc
pop
push
rcrb
sbb
sahf
mov
gs
test
icebp
xor
inc
push
ss
ljmp
and
ret
fwait
xlat
out
mov
mov
jg
mov
inc
pushf
aaa
mov
inc
sub
push
dec
inc
stc
mov
mov
mov
ljmp
in
cwtl
jns
fs
or
dec
ja
js
sbb
mov
inc
lret
xchg
push
add
out
lret
adc
jmp
dec
test
dec
add
cmp
jmp
dec
leave
jb
add
push
ljmp
fsts
lret
push
or
mov
jge
cli
push
push
pop
jge
aad
mov
pop
xor
test
addr16
cli
sbb
js
add
out
mov
add
aam
sub
push
lcall
leave
cmp
scas
insb
sub
int
and
data16
sbb
pushf
das
jbe
dec
jb
addl
das
xchg
fmul
test
popa
fstpt
cmpsb
push
subl
fwait
subb
ret
je
ja
and
gs
jns
test
or
mov
arpl
jae
pop
lret
inc
inc
jecxz
xor
imul
cmp
fwait
xchg
mov
negl
sub
push
hlt
lcall
test
jb
lret
mov
xor
imul
push
inc
bnd
in
mov
jae
pop
out
fs
mov
adc
gs
ret
adc
sub
mov
xchg
icebp
mov
dec
daa
out
dec
pushf
iret
sti
push
cmpb
ljmp
push
bound
shr
enter
das
cltd
add
aam
push
es
es
push
lahf
cmp
fs
bound
or
orl
daa
insl
fimuls
sub
cltd
push
clc
iret
mov
insl
insl
fidivrl
notl
in
paddusb
xor
jl
xlat
jg
scas
test
negl
shlb
cmp
jp
shlb
ret
sub
lods
rolb
arpl
es
sub
enter
and
subl
jo
mov
dec
xchg
push
cmp
xor
mov
adc
test
jb
or
add
xor
add
lock
lcall
xor
ret
cltd
divb
mov
dec
test
insb
xchg
jge
inc
enter
imul
sub
outsb
jecxz
sarb
orl
add
mov
mov
shlb
jbe
fnop
push
lods
jae
repnz
mov
dec
fsubrs
sbb
or
mov
fidivl
sbb
push
insb
push
add
add
cld
xor
pandn
mov
das
les
ret
lock
sub
das
leave
in
mov
jmp
sti
dec
fcomi
jns
loope
in
scas
out
xchg
fmul
inc
mov
scas
sub
add
or
cmc
rcrb
lret
ret
enter
pop
and
mov
jle
jno
cmpsl
push
arpl
pop
lret
out
add
sub
popf
sarl
or
int
dec
add
dec
or
stos
lret
pop
sbb
sbb
mov
push
out
mov
dec
ret
fdiv
mov
clc
ret
mov
xchg
xor
decb
dec
cli
loope
daa
or
cmp
jle
inc
pop
sub
scas
rcll
loopne
push
sarl
push
jo
inc
push
and
xchg
push
enter
fmuls
movsl
ret
xor
xor
pop
stos
push
pop
jge
dec
test
js
cmp
mov
fsubrl
data16
lcall
arpl
pop
or
mov
push
nop
xrelease
bound
int3
rclb
sbb
lcall
stos
pop
test
orb
xchg
pop
jg
mov
sarb
aam
fisttps
flds
xor
xchg
addr16
clc
pushl
and
nop
xchg
sahf
sbb
and
rcr
shll
jecxz
mov
je
shl
mov
in
mov
adc
out
mov
push
pop
xor
arpl
jae
add
jnp,pt
std
cmpsb
mov
movl
sub
fcmovnb
inc
mov
xor
sbb
lods
repz
ds
ljmp
jle
sub
and
mov
pop
mov
add
xor
and
bound
test
push
cmpsb
jg
daa
rcrb
mov
adc
and
out
pusha
loopne
sbb
out
fwait
stos
ja
cmc
roll
pop
test
push
int
mov
push
cmp
outsb
mov
sahf
lock
ret
dec
divps
int3
push
stos
adc
popa
add
iret
repz
and
sbb
mov
aam
lahf
sahf
fxch
or
shrl
mov
jge
insb
lcall
popa
stc
imul
cmpsb
and
mov
jns
in
icebp
adc
push
mov
mov
call
fsts
scas
or
lret
mov
or
dec
fcmove
pop
sbb
lcall
push
insl
sahf
cmp
mov
inc
push
xchg
mov
pushf
mov
push
jno
cmpsl
imul
mov
fcoms
clc
outsb
fidivrl
shlb
jnp
jle
mov
jne,pn
push
add
sub
push
adc
adc
test
pop
or
xchg
out
mov
jno
data16
not
sti
pop
inc
dec
aam
adc
fucomp
mov
jp
lret
inc
hlt
mov
or
sub
sti
imul
daa
cld
add
push
xchg
andl
mov
xchg
or
ja
mov
push
and
sbb
shlb
xor
inc
lret
outsb
repz
nop
scas
and
inc
mov
imul
movsl
in
imul
sbb
jno
push
add
inc
jae
rolb
xor
jo
xchg
jne
and
test
and
inc
fsubp
loope
fmull
push
jb
jne
cli
adc
cmpsl
add
and
fsubrs
lret
sbb
or
pop
pop
adc
push
testb
clc
ret
adcb
lret
repnz
mov
mov
mov
dec
pop
stos
xlat
imul
and
int
xchg
fildl
test
add
mov
clc
imul
jbe
popf
mov
cmp
pusha
shrl
mov
mov
add
cmpsl
mov
loop
inc
test
dec
out
dec
adc
es
mov
rcl
leave
gs
es
fstps
sbb
push
adc
mov
adc
notb
cmp
pop
fisubl
dec
mov
push
in
xor
aam
std
ljmp
push
int3
inc
sub
leave
xor
imul
add
lahf
push
js
int
mov
push
cmp
add
int
test
jno
jle
test
sbb
test
daa
stc
out
inc
lret
pop
loope
mov
mov
push
xor
mov
adc
mov
xchg
mov
and
mov
adc
jl
gs
xchg
cmp
and
pusha
push
cmovne
and
out
pop
or
fbld
dec
push
addl
add
sbb
or
fsubl
lret
cmp
lods
xor
cmpsb
aas
push
mov
mov
cmp
addb
mov
jl
leave
rorb
fdivrs
adc
add
pop
xor
xchg
gs
aam
vminsd
cmp
push
imul
arpl
add
xchg
push
sbb
movsl
or
jg
addr16
lahf
cli
fcomp
jg
loop
push
xchg
push
fimuls
shrl
popw
es
mov
push
jb
jg
adc
or
cmp
insl
lods
fsubr
inc
sahf
in
mov
hlt
push
inc
jae
jno
jae,pt
in
out
sub
fsub
lea
mov
je
xchg
mov
adc
mov
jmp
arpl
or
scas
xor
push
and
pop
jae
cmc
popf
jnp
js
adc
ret
ficompl
ss
push
lods
pop
fimuls
adc
add
call
cmp
push
lock
add
bound
inc
mov
outsb
lock
and
jno
loop
sub
mov
inc
adc
sub
mul
push
sbb
test
jno
inc
pop
mov
fstpt
nop
lcall
popa
sbb
and
cli
jle
inc
add
loope
mov
adc
je
cli
out
cwtl
jg
idivl
sub
adc
ret
aad
lret
clc
or
enter
mov
push
stos
jo
and
idivb
inc
push
jnp
inc
adc
test
cwtl
push
jp
adc
out
or
mov
imull
in
es
push
cltd
scas
push
mov
cwtl
repnz
xchg
xor
jne
push
movsl
xchg
pop
cmp
out
mov
pop
cli
test
daa
inc
push
gs
sub
pop
sub
pop
stos
shrb
std
fildl
js
xchg
fs
fidivrs
shl
jb
sub
mov
int3
in
xorb
pop
xor
add
sbb
cwtl
xchg
pop
adc
fwait
test
and
lds
mov
jbe
cmc
adc
aad
out
subb
rorl
adc
jnp
sub
mov
xor
push
pop
fsubrl
outsb
stos
pop
scas
pop
add
lods
movsl
inc
in
mov
cmpsb
inc
neg
mov
stc
jmp
or
cs
and
sbb
jne
mov
dec
lods
mov
xor
roll
je
xchg
jae
mov
mov
xor
call
add
xchg
jns
and
or
and
jno
mov
xchg
arpl
push
inc
xlat
pop
xlat
sbb
xchg
sahf
lcall
popa
stos
mov
shrl
stc
mov
repz
and
or
cmp
push
ror
xor
lret
repnz
mov
mov
les
pop
repz
jb
jp
cltd
testl
xor
cli
and
add
push
pop
add
sbb
popf
cmpsb
xlat
add
pop
cmp
adc
jmp
and
mov
stos
add
dec
mov
xor
leave
shl
sbb
iret
bound
and
xor
mov
pop
ds
inc
mov
jmp
addr16
ljmp
mov
and
cmp
or
pop
iret
mov
or
cmp
outsl
jnp
mov
jmp
stc
inc
mov
popa
jl
lahf
lahf
pop
repnz
mov
adc
sahf
dec
inc
mov
mov
push
push
cltd
mov
in
aad
test
mov
xchg
dec
pusha
jge
imul
xor
nop
pusha
pushf
out
mov
push
daa
xor
aam
sub
add
sub
enter
arpl
sbb
jno
add
test
nop
mov
testl
pushf
push
jecxz
out
aam
push
in
arpl
test
sahf
inc
pop
sub
lcall
test
insb
cli
in
loope
or
or
lock
std
enter
xchg
mov
dec
xchg
add
and
push
cmp
cmp
int3
je
inc
sti
jp
xchg
mov
push
inc
movsb
lods
cmp
xchg
mov
push
icebp
movsb
test
push
push
into
mov
dec
fisubrl
clc
jae
or
push
xor
or
jle
pop
dec
lods
cmp
cmp
push
rorb
outsl
js
aam
orl
imul
mov
cld
sahf
dec
fisubl
popa
pop
repz
xchg
loope
sub
clc
jnp
sahf
jb
push
fsub
aad
jp
shrl
popf
repz
aaa
das
and
insl
aad
mov
lret
cmc
or
and
inc
xorl
mov
cvtpi2ps
sbb
or
xor
adc
idivb
or
mov
outsl
xchg
push
and
icebp
add
inc
lret
push
hlt
outsl
ja
xchg
push
pop
lret
or
mov
inc
imul
xlat
sub
daa
inc
pop
lock
xchg
mov
fmul
xchg
imul
fcoms
xlat
pop
sub
or
test
std
leave
adc
xor
mov
mov
mov
cmpsb
mov
test
push
sub
in
jae
ja
dec
roll
repz
lcall
int
sub
hlt
xor
cmp
add
adc
sbb
mov
sbb
lods
dec
mov
xchg
mov
mov
xchg
dec
add
popf
repz
sbb
push
and
xchg
cmp
data16
mov
xchg
jns
cs
stos
daa
jae
sbb
leave
leave
cmp
cwtl
dec
rorl
in
int3
out
mov
dec
inc
cld
mov
rcrl
push
pop
push
ljmp
popf
ja
adc
inc
dec
push
push
stos
std
push
mov
jmp
inc
jb
cmc
out
inc
jmp
iret
pop
pop
ss
xor
ret
lcall
jecxz
lcall
lcall
pop
mov
rcrl
roll
push
mov
call
stos
add
out
imul
dec
mov
sbb
ss
leave
adc
stos
orl
out
push
mov
and
jbe
adc
pop
and
stc
sub
ds
jp
fs
add
imul
adc
cli
xor
pop
les
mov
adc
bound
inc
leave
outsb
testb
in
jnp
and
lods
cwtl
pop
push
xlat
sbb
mov
pop
pop
imul
hlt
iret
xor
test
xchg
sarb
int
mov
inc
call
jno
iret
add
notb
clc
dec
adc
orb
or
clc
xor
add
sbb
sbb
cltd
cmp
lret
loop
mov
dec
sbb
frstor
and
add
inc
cmp
pop
pcmpgtw
dec
mov
pop
jmp
ror
push
inc
pop
lahf
fcmovnbe
loop
icebp
xor
mov
inc
cmp
sarb
frstor
xchg
ret
xor
addr16
cmp
shll
cmp
repnz
pusha
push
cwtl
rcr
scas
push
shl
jbe
ret
dec
roll
outsb
out
fnstsw
daa
ds
mov
xlat
push
jle
insl
fdivrs
ret
lcall
xchg
jnp
inc
aaa
and
push
test
adc
xlat
imull
push
pop
mov
mov
lret
in
sub
cmp
jns
in
insl
pop
mov
or
rorl
and
ja
aad
int
aam
inc
xchg
insb
adc
mov
lahf
inc
rol
jb
ficomps
stos
sub
add
inc
xchg
jbe
leave
repnz
test
bound
xlat
and
adc
cld
outsl
push
pop
in
aas
cmp
leave
bound
push
clc
add
pop
jp
aas
icebp
clc
dec
or
fdivrs
aad
jb
stos
adcl
insb
xchg
cmpl
out
stc
cmpsb
outsb
sbb
into
shl
jnp
mov
shl
test
sbb
pop
mov
ljmp
push
cmp
mov
jg
adc
shlb
push
cmpsl
mov
imul
dec
pop
test
gs
jecxz
pop
int3
mov
xchg
jmp
fdivs
mov
icebp
pop
imul
and
js
imul
das
mov
adc
ljmp
in
push
add
pushf
mov
js
stc
ret
lea
js
sub
idivl
nop
or
imul
mov
ret
lock
cmc
jns
mov
inc
push
push
ret
push
mov
inc
mov
lret
cli
mov
ja
mov
jno
mov
dec
sbb
stos
rorb
and
push
stos
mov
pushf
dec
addr16
or
push
and
add
jo
pusha
cmpsb
mov
cld
pop
add
ljmp
xchg
mov
push
jo
xor
lahf
mov
in
cmc
xchg
mov
shl
in
cmpsb
adc
mov
cmp
ljmp
out
cmp
mov
sbb
scas
jecxz
mov
js
pop
and
bound
fs
popf
outsl
pusha
sub
fsubl
jp
fxch
test
stc
dec
mov
push
add
shlb
xchg
sbb
or
push
frstor
stos
and
out
je
xorb
pop
mov
in
leave
sbb
insb
adc
mov
inc
out
loope
cwtl
push
fisubs
or
sbb
xchg
push
jge
call
out
xlat
pop
repz
ja
aas
test
pop
data16
and
pop
push
daa
iret
dec
adc
pop
imul
shl
sti
inc
call
inc
loop
mov
add
in
pop
or
mov
nop
or
into
and
push
or
and
cmp
es
scas
pop
cmpsb
xor
jp
pop
test
mov
mov
and
test
push
inc
mov
into
jp
clc
nop
movb
xor
insl
mov
jnp
push
loope
repz
mov
fbld
inc
movsb
or
movsl
jae
insb
xor
aaa
pop
rolb
in
jae
stos
je
xor
lahf
test
mov
dec
out
scas
lds
sbb
cmp
push
cmc
mov
sbb
insl
stc
mov
xor
adc
ja
sbb
mov
jb
mov
push
sahf
loop
xlat
xor
cmpsl
cmp
cmp
pusha
popf
push
sbb
or
xor
push
inc
cwtl
pushf
pop
xchg
push
cmpxchg8b
inc
movsb
arpl
dec
movsb
sub
aas
and
rol
cmp
popf
in
jb
call
dec
add
aaa
push
xchg
addr16
jmp
dec
movsb
xchg
fistps
mov
sbb
stos
jmp
sbb
jp
push
and
js
push
sub
popa
ljmp
fs
cmc
mov
test
addr16
gs
jnp
lcall
sub
push
cs
xchg
pop
and
pop
in
inc
addr16
int3
mov
into
mov
adc
movsb
imull
sub
add
sub
xchg
nop
pop
pop
scas
mov
les
lret
or
rcrl
push
lds
adc
sbb
xchg
mov
ror
jb
jmp
cld
mov
imul
push
inc
push
inc
cmp
jg
push
sub
mov
jae
in
xor
push
fcoml
jge
xchg
jl
cmpsb
push
xchg
adc
sub
mov
mov
or
xchg
and
mov
xchg
cs
test
lock
pop
adc
lock
sbb
imul
clc
fldenv
insb
mov
cmc
lret
rclb
jne
lea
add
xchg
pop
lret
sti
std
and
stos
fcom
sub
cmc
out
cmp
jno
roll
pop
mov
notb
cmp
test
sub
xor
iret
fnstsw
mov
ficoms
aam
push
cld
push
sub
xchg
push
cs
ret
in
ljmp
pushf
outsb
or
xor
insb
mov
adc
js
sbb
ljmp
dec
dec
pop
adc
hlt
adc
mov
fwait
sbb
cmp
cmp
xor
push
cmp
jg
mov
jmp
out
into
inc
data16
add
mov
xor
and
sub
scas
xchg
cmpb
push
ds
mov
hlt
mov
outsb
ja
stc
add
xchg
ret
stos
dec
mov
aam
neg
in
pop
push
mov
pusha
pop
or
pusha
dec
jae
lods
testb
jnp
xor
xchg
mov
mov
mov
jnp
in
jl
fisttpl
cli
ficoml
push
iret
in
jle
xor
out
int3
add
cld
jge
cld
push
sbb
clc
cmp
xadd
jnp
shr
movsl
insl
not
adc
out
ja
cmp
int3
xchg
xlat
aas
outsb
into
xor
sub
arpl
dec
scas
sub
xchg
stos
mov
aas
or
adc
sub
inc
mov
inc
shll
divl
ja
andb
aas
jb
ljmp
sbb
adc
sbb
je
lods
sub
movsl
pop
sub
aas
jne
xchg
sub
pusha
lods
xchg
sahf
dec
xchg
mov
jmp
cltd
and
push
dec
call
fneni(8087
or
scas
adc
sbb
adc
popf
dec
pop
pop
adcl
pop
mov
inc
sub
repnz
dec
dec
push
mov
or
mov
test
adc
dec
in
cmp
dec
mov
testl
mov
jmp
call
mov
movsl
jecxz
mov
xchg
movsb
lret
push
xchg
into
push
push
pop
mov
lret
sbb
jbe
inc
or
add
add
mov
sub
in
ret
ret
adc
push
or
shrb
fdivrl
repz
nop
aad
mov
mov
fwait
aam
inc
test
cmp
mov
pushl
mov
mov
dec
add
sbb
int3
je
test
daa
shl
mov
mov
loope
jne
insl
pop
add
xor
adc
gs
jb
sbb
cmpsl
call
lods
or
add
fiaddl
loopne
cmp
pop
dec
pop
sub
sub
out
in
push
lock
pop
mov
into
cmp
fidivrs
push
fcoms
xor
fldln2
push
pop
adc
or
add
jle
sub
sbb
test
dec
jg
mov
mov
add
dec
sub
sub
cmp
sbb
test
clc
test
and
xchg
dec
movsl
fwait
iret
movsl
mov
ss
pop
ficompl
int3
mov
and
pop
mov
mov
mov
out
les
stos
and
or
adc
push
adc
out
fbstp
jne
push
sub
add
fsubrs
in
pop
sbb
pop
pop
lcall
xor
ss
jno
push
inc
aad
cmp
movsl
lods
fimull
xchg
xchg
pop
cmp
dec
fnstsw
xchg
dec
fisttpl
je
movsw
or
movsl
push
stos
pop
jp
dec
mov
jp
adc
jecxz
int
fidivl
andl
mov
dec
iret
lret
cmp
sahf
jnp
jmp
in
mov
std
dec
sbb
pop
andb
rorb
fs
test
lock
lcall
stc
adc
mov
mov
into
roll
xor
int
sbb
out
out
xor
cmp
mov
ds
jno
xor
addr16
push
xchg
ds
sub
sbb
mov
ror
icebp
sub
loopne
inc
std
lahf
out
das
xor
add
and
iret
dec
and
ljmp
push
testl
inc
inc
loope
push
jns
xor
adc
out
xchg
test
dec
dec
stos
leave
in
pusha
insl
fs
jp
ja
out
and
testb
enter
insb
lret
push
dec
fsubl
jmp
jge
mov
add
cltd
rsm
sub
xor
gs
pop
mov
js
scas
shl
xchg
and
int3
jb
ret
sahf
icebp
pop
leave
pop
dec
pop
jle
jge
scas
push
pusha
adc
mov
cli
ret
mov
adc
or
mov
mov
out
outsb
popa
inc
bound
lea
pusha
leave
lock
jne
test
pop
rcr
jle
scas
xchg
fisubrs
and
andl
jp
lea
xchg
test
mov
cmp
xor
orb
and
dec
jl
mull
clc
inc
lret
pop
scas
and
fs
pushf
decl
hlt
mov
out
ljmp
and
or
cmp
mov
aas
pop
xchg
sub
cmp
add
xchg
cmp
std
btsl
mov
loop
movsl
daa
mov
jl
and
xor
test
inc
mov
push
mov
stos
jmp
sub
xor
lock
mov
mov
in
ja
adc
into
add
std
cld
cmpsl
rorb
sub
popf
sub
inc
call
cmp
shlb
mov
loope
js
pop
int
scas
pusha
lahf
sub
sbb
xor
jb
mov
sbb
cmp
cmp
mov
adc
addr16
dec
movb
js
imul
mov
pop
push
mov
cmc
dec
mov
imul
aas
pop
sbb
vpsubsw
stos
mov
gs
test
inc
popf
cmp
fwait
rclb
sahf
mov
fs
iret
popa
pop
pusha
mov
aad
adc
mov
pushf
mov
pusha
or
ljmp
rorb
push
pop
aaa
movsl
mov
adc
add
test
popa
cmp
fbstp
les
repnz
movsb
mov
shrb
bound
sbb
adc
inc
lcall
movsl
iret
pusha
outsb
cltd
dec
lahf
lcall
movsl
jg
xor
dec
or
cmpsl
fldenv
sbb
push
xlat
push
rorl
fiadds
scas
dec
jecxz
mov
out
xchg
xchg
fisttps
fwait
lea
inc
xor
adc
pop
sub
pop
pusha
or
push
cli
and
ljmp
ja
fwait
jbe
jl
push
inc
xchg
dec
outsb
imul
mov
gs
in
xchg
dec
sub
lock
mov
xor
fistpl
pop
scas
imul
in
movsl
xor
adc
loopne
icebp
in
aaa
hlt
lret
jno
cmpsb
dec
pop
or
in
push
jp
sub
pop
mov
jl
pop
mov
daa
in
pop
pop
xor
xchg
call
xchg
ret
cmpsl
pop
ss
div
ljmp
insl
sbb
jl
jmp
push
mov
das
gs
cmp
add
sahf
jmp
clc
inc
aas
jp
pusha
mov
scas
adc
hlt
daa
shll
arpl
inc
mov
push
lret
xor
mov
insl
movsl
push
and
xchg
lcall
inc
jo
inc
in
jbe
lods
leave
and
in
lahf
stc
lcall
cmp
dec
mov
call
jo
mov
xchg
cmp
icebp
adc
jecxz
repnz
push
jae
inc
dec
into
inc
repnz
insl
sahf
xchg
add
jae
xor
out
xorl
sbb
pop
and
sub
imul
outsl
xchg
setno
push
out
xchg
loope
je
aad
arpl
pop
and
jb
in
push
scas
data16
call
jge
mov
daa
ja
xchg
daa
dec
push
and
adc
insl
test
dec
push
stos
adcb
sbb
dec
cmpb
pop
add
jne
xor
adc
dec
daa
add
test
pop
sub
mov
or
sahf
pop
xor
enter
xchg
scas
enter
ja
jbe
mov
movb
rcl
cwtl
sbb
pop
test
les
test
xor
adc
push
loopne
fisubs
imul
aad
mov
insl
fs
pop
popf
divb
fistpl
ret
out
jne
cli
inc
xchg
iret
xor
push
mov
cli
mov
mov
push
lret
rcl
xchg
add
lock
testl
shl
push
xchg
xor
or
dec
cmp
sbb
push
aas
pop
das
xchg
out
out
cwtl
mov
cmp
add
mov
jmp
outsl
jae
cmp
sbb
test
xorl
shl
xchg
lods
dec
in
clc
dec
sub
jne
imul
movsb
fldcw
pop
ror
orl
mov
scas
scas
cwtl
fcoms
sahf
pop
dec
cltd
adc
rclb
aam
daa
fidivrs
xor
shl
js
mov
sbb
mov
mov
push
jno
mov
inc
add
adc
pop
icebp
xchg
jecxz
out
int
dec
jl
xchg
mov
xor
ss
ja
xchg
mov
sbb
inc
imul
mov
mov
imul
scas
adc
adc
pop
xchg
repz
pop
int3
fisubrl
pop
mov
xor
cwtl
xor
in
cmp
movsb
push
sbb
into
mov
and
cltd
stc
xchg
rcll
cmpsl
sbb
xchg
cld
xchg
pop
icebp
mov
jb
inc
or
push
mov
insl
dec
je
mov
imul
insb
aas
xchg
mov
push
rclb
mov
addr16
pop
out
scas
jns
clc
dec
shl
xor
adc
pop
fldenv
adc
mov
inc
inc
xchg
dec
inc
dec
les
mov
outsb
xor
sbb
repz
sahf
xchg
sub
call
rclb
sbb
cmpsl
and
push
and
inc
xor
add
mov
dec
dec
add
pop
data16
xor
orl
ss
add
cli
adc
popa
jl
mov
mov
sub
add
lret
in
or
xor
push
jle
and
enter
jle
inc
lret
pop
je
out
pop
sbb
inc
test
fsubs
mov
in
jb
mov
or
cwtl
dec
ret
rol
aas
rcll
mov
enter
dec
insl
mov
push
incb
mov
stos
mov
push
jb
rorl
addr16
arpl
mov
aam
test
lahf
std
fnstenv
nop
inc
mov
or
xchg
dec
push
mov
pop
push
mov
dec
jb
push
in
fsubrs
stos
or
test
ss
pop
adc
subb
aas
pop
outsl
xchg
push
lret
and
push
pop
loopne
fs
or
or
cs
fs
movsl
sbbb
mov
sbb
adc
mov
xchg
xchg
aad
scas
int
sub
push
sti
xchg
call
outsb
addr16
ss
clc
orb
data16
and
xchg
and
and
and
ljmp
out
inc
cwtl
rol
pop
xchg
or
pop
dec
sbb
data16
xchg
cli
or
pop
cmp
push
sti
xor
push
stos
mov
lret
xchg
sbb
iret
push
pop
outsb
shlb
pushf
push
cmc
in
jns
inc
aas
fbld
mov
mov
imul
repz
inc
aaa
jle
and
js
aam
and
loope
xchg
insb
fst
mov
jmp
cmp
pushf
pop
mov
sbb
sbbb
and
sbb
add
mov
mov
push
cld
or
fs
dec
popf
mov
push
nop
hlt
cmp
pushf
insb
fildl
mov
push
ljmp
dec
cmp
jnp
shlb
sub
xor
push
loope
loop
xchg
movsl
arpl
jge
movsl
stc
in
pop
sub
pop
aad
fcomps
cmp
pusha
push
jb
les
arpl
movsb
aad
dec
adc
cltd
popa
lret
lahf
xchg
xchg
lcall
popf
dec
in
xchg
daa
ljmp
into
out
mov
cmc
sub
xor
popf
inc
or
sub
or
ds
leave
hlt
pop
pop
ljmp
popa
jbe
sub
cld
lret
fwait
lods
in
inc
repz
sbb
shl
xor
cmp
sahf
cmpsl
jne
xor
js
jecxz
filds
shl
and
punpcklbw
rorb
pop
repz
std
xchg
cmp
sbb
adc
add
test
jmp
jmp
push
and
repnz
loop
push
inc
rcll
repnz
mov
push
cmpsl
pushf
jecxz
jmp
or
add
movsb
testl
cli
out
add
xchg
pop
jns
inc
sub
sub
negl
sbb
or
shl
in
mov
dec
add
jmp
pop
adc
add
sbb
cmc
out
or
sub
gs
mov
push
sbb
adc
stos
mov
xchg
bound
loope
jne
pusha
push
aaa
insl
pop
aad
pop
out
jns
and
cltd
aaa
int3
insl
cwtl
pop
pop
fmuls
and
mov
daa
push
mov
sub
adc
movsb
xor
mov
fnstcw
mov
xchg
cmp
adcl
pushf
mov
mov
vmulsd
inc
cwtl
push
cmp
adc
add
mov
mov
cs
mov
xor
lods
inc
xchg
outsl
or
inc
lcall
inc
out
xlat
adc
sub
rcl
jecxz,pt
stc
pop
jno
sarb
mov
popa
inc
fidivs
sarb
xchg
insl
hlt
cmp
mov
std
push
cmp
cmpsl
cwtl
scas
mov
add
cmpsl
and
xchg
cs
aas
mov
lret
fcompl
mov
lods
test
pushf
adc
adc
ficoml
push
pop
dec
pushf
dec
pop
fidivl
cli
fcmovne
mov
add
sti
subb
cmc
jae
repz
jmp
add
rolb
mov
lds
fs
push
adc
ds
or
stc
pop
aaa
aaa
add
jo
loope
sbb
push
mov
add
sysret
jl
sub
push
movsb
fsqrt
daa
pop
sub
ret
push
not
les
xchg
and
xchg
jl
push
mov
pop
dec
fiadds
jge
int3
fisubs
mov
std
inc
and
push
pusha
repnz
ljmp
xchg
sub
test
mov
xchg
cmp
push
jb
mov
pop
les
fbstp
push
outsl
pop
sbb
mov
stc
lock
lods
mov
out
mov
mov
in
lods
daa
mov
jbe
lea
dec
imul
mov
cwtl
movb
xchg
dec
mov
cmpsl
sub
imul
pop
or
out
xor
cmp
fldl
xorb
roll
icebp
pushf
push
push
lods
mov
xchg
jmp
repnz
cmp
lret
pop
and
and
pop
scas
mov
jg
pusha
in
or
adc
fists
xor
pop
pusha
inc
pop
mov
daa
xchg
xchg
sub
push
push
icebp
fiadds
stos
mov
mov
adc
fs
fisttpll
add
dec
pop
imul
mov
inc
out
lods
cmpsb
popf
sbb
cmpsb
insb
adc
movsb
pop
std
shlb
leave
pop
test
ljmp
inc
mov
jae
add
loop
cmpl
add
and
fcoms
jmp
jecxz
mov
hlt
stc
sbbb
sub
dec
mov
test
jbe
out
arpl
fwait
cs
mov
inc
adc
lret
add
jbe
mull
popa
ljmp
cltd
xor
jge
cwtl
loop
leave
adc
aad
add
icebp
add
fimuls
int3
scas
mov
xchg
outsb
pop
test
add
mov
out
dec
inc
cmp
mov
mov
mov
jl
cltd
dec
lock
dec
and
mov
test
aam
mov
ret
leave
pop
sub
inc
jmp
sbb
int
pop
push
inc
and
and
fsubl
push
mov
iret
insb
mov
into
jo
pop
shrl
fisubl
cmpb
and
ss
inc
std
push
mov
cmpsl
xchg
lahf
mov
lock
out
stos
out
adc
sbb
scas
inc
mov
push
jae
cli
test
clc
xchg
pop
mov
inc
add
movsl
aad
add
and
xchg
enter
jmp
stos
scas
dec
or
cmpsl
aad
jle
mov
push
dec
pusha
cmp
bound
fldenv
test
add
scas
lcall
ljmp
push
stos
movsb
dec
push
vrsqrtss
movsb
inc
push
movsb
loop
repnz
jb
std
push
mov
dec
fcmovnu
jmp
in
adcl
clc
cwtl
dec
add
es
mov
xor
or
jecxz
and
out
icebp
test
xor
or
dec
cld
shrb
mov
repz
adc
jmp
mov
pop
sbb
add
int
jge
inc
sahf
ds
xchg
and
stc
xchg
xlat
sub
pop
or
rolb
mov
jbe,pn
bound
inc
mov
les
popf
call
test
ja
push
cmpsl
insb
es
shll
push
imul
jecxz
nop
cmpsl
sub
loop
and
push
cmp
fidivs
and
lcall
mov
dec
sbb
mov
clc
sub
dec
mov
roll
mov
movsl
mov
xchg
and
fisubrl
pop
jecxz
xchg
ret
mov
dec
insl
add
dec
das
aaa
lret
lea
pop
ds
jg
popf
add
cmp
xchg
inc
sub
stc
rol
rcll
sbb
xchg
mov
int3
sub
aas
stc
mov
mov
icebp
call
ret
push
in
pop
ss
in
fwait
pushf
inc
push
pop
adc
ja
xchg
xor
fcomp
jae
xchg
push
push
jle
jbe
stos
inc
fildll
iret
add
cli
out
mov
push
test
imul
lea
cli
test
xchg
and
mov
mov
xor
fcomip
outsb
nop
add
les
ja
fisttpll
fimuls
fbld
xchg
mov
scas
mov
jg
lret
loop
popf
imul
mov
test
and
add
jae
sbb
jmp
xor
mov
stos
adcl
shrl
out
call
fmul
jmp
ljmp
mov
mov
push
and
stos
adc
mov
push
mov
sub
sbb
das
pop
movsb
in
jge
imul
fstl
stos
push
arpl
mov
or
fcoml
cltd
scas
inc
push
clc
ret
sahf
stos
push
push
mov
adc
mov
pop
xor
shl
pop
jno
lret
int
les
sbb
push
xor
pop
fcompl
dec
mov
sub
aas
sbb
mov
les
gs
pop
aas
dec
inc
jl
adc
movsb
sbb
lock
test
or
mov
maskmovq
movsl
sub
arpl
pop
mov
adc
xchg
rcrb
jb
mov
mov
and
hlt
cmp
pop
stc
cmp
lea
inc
add
sub
xchg
push
jnp
cli
xchg
push
ss
popa
pop
mov
popa
ficompl
ficoml
shll
insl
mov
pushf
mov
lcall
jnp
xchg
inc
mov
and
lock
shrl
or
nop
subl
daa
call
cwtl
aam
push
das
ret
insl
daa
mov
in
push
es
push
jmp
xor
and
lock
push
out
ja
cmc
mov
dec
lret
mov
rcrl
mov
aad
sahf
pop
jmp
stc
push
insb
stos
sub
das
jmp
into
lods
ficoml
pop
loop
mov
pop
iret
xchg
jno
jnp
and
cmp
pop
sti
idivb
aaa
xor
mov
in
xor
jbe
mov
pop
movsb
repnz
ljmp
pop
push
fimuls
int3
es
sarl
stos
hlt
int3
adc
xchg
fcomp
mov
hlt
das
jge
mov
mov
shlb
leave
mov
push
xchg
sub
pop
add
insw
cltd
dec
rorl
cmpb
fwait
mov
jno
scas
dec
add
xor
sbb
jmp
or
lock
push
xor
mov
jge,pn
setge
mov
dec
jle
xchg
fimuls
icebp
xchg
or
mov
cmp
push
sahf
in
adc
sub
push
jne
dec
and
loop
adc
mov
in
push
pop
jnp
insl
xchg
xor
pop
jg
and
pop
call
push
lahf
loopne
icebp
pop
jne
inc
mov
jle
outsl
jbe
test
das
push
mov
xchg
sbb
inc
add
pop
cmpsb
mov
sub
xchg
or
mov
mov
mov
and
js
fsub
imul
mov
inc
test
push
sub
xchg
cmp
mov
ljmp
sub
mov
out
adc
fisubs
fsubl
dec
mov
pop
lret
mov
push
add
fcmovnb
or
fistpl
add
xchg
pop
add
pushl
xor
icebp
and
pop
jns
stc
sbb
call
das
cmpsb
sbb
sbb
lods
aaa
sbb
xchg
or
gs
aaa
in
stos
mov
in
cmpsl
add
adc
push
int3
lret
test
add
test
aam
sbb
jg
fsub
cmpsl
dec
nop
mov
xchg
jbe
xchg
cmc
into
int
sub
ds
pop
nop
int
jae
and
iret
adc
notl
xchg
sti
lods
ja
leave
pop
push
push
dec
and
stos
add
rorl
subb
pop
mov
scas
mov
hlt
sub
push
shrb
jbe
js
andb
jecxz
cmp
push
cmpsb
insl
cltd
loopne
jo
shrl
cmpb
popf
cmp
xor
mov
out
push
pop
sbb
push
mov
inc
mov
aas
adc
pop
aad
rorl
pop
scas
xor
loope
mov
adc
outsb
mov
loopne
add
call
adc
mov
std
sahf
aam
xchg
mov
out
xchg
std
xchg
sbb
dec
addr16
testl
lds
shlb
xchg
loopne
sahf
fcmovne
popa
sub
dec
mov
cmp
push
out
mov
mov
in
aam
mov
inc
vdivps
push
ljmp
mov
dec
dec
xchg
adcl
xchg
mov
mov
loop
outsl
pop
lods
daa
sub
jg
and
mov
xchg
xchg
out
aad
rcl
cmp
inc
or
inc
ds
mov
ficoml
sub
xchg
insl
repnz
or
push
xchg
nop
imul
fbstp
lock
ljmp
add
enter
mov
repnz
mov
clc
int3
jns
jecxz
xchg
dec
ds
lods
sarl
pop
iret
in
outsb
test
testl
mov
inc
sbb
subb
push
enter
es
cmp
mov
fcomp
mov
pushl
mov
fisubl
pop
cmp
cmp
jle
movsl
dec
cltd
jecxz
sub
ds
shll
pop
push
cmp
jmp
popf
mov
push
jecxz
xchg
lods
test
cmp
adc
lods
pop
jl
testl
ja
inc
test
les
pop
test
movl
gs
scas
sbb
and
cwtl
push
sbb
cmp
shl
mov
iret
std
jb
test
scas
jmp
pop
adc
out
push
mov
ret
out
faddp
jns
leave
lret
movsl
push
cmp
adc
jb
stos
xchg
sti
repz
inc
sub
mov
jle
pop
loopne
sbb
dec
icebp
cmp
xchg
insl
push
ljmp
in
inc
cmpb
push
inc
sub
aam
xor
mov
rolb
in
mov
test
or
mov
mov
int3
jl
dec
lods
xor
mov
dec
xor
ficoms
or
sub
scas
sub
sub
cli
lahf
xchg
rcll
lods
pop
pop
add
aas
cmp
icebp
or
loop
cld
pusha
pop
xlat
mov
sarb
jns
pop
icebp
or
or
aaa
push
out
and
adc
ficoms
pop
rclb
loope
in
jge
imul
push
sub
add
call
cld
inc
xchg
aaa
or
dec
ljmp
fsubrs
inc
aam
fstps
jg
mov
mov
mov
cmpb
int3
xchg
not
mov
jo
andl
mov
add
lods
out
inc
ret
ss
outsl
fimull
push
popf
fprem
xor
mov
in
shrb
and
dec
push
loop
jl
adc
or
jb
adc
cmp
sub
mov
jp
push
lea
push
popf
cmc
inc
push
mov
jae
vdivss
jo
pop
mov
fsubl
jg
testb
adc
add
ret
mov
or
cmp
and
cmp
sub
lock
fidivs
inc
arpl
jl
xchg
cmp
push
xor
mov
jnp
add
mov
adc
pop
add
push
leave
mov
stos
adc
dec
es
aad
ss
js
test
mov
aaa
add
xor
add
js
sbb
sbb
bound
adc
dec
inc
lock
mov
sub
mov
call
stc
sub
outsb
xor
push
mov
mov
xor
cmp
scas
in
cmp
lcall
lods
cmp
lea
lcall
popa
in
ror
pop
jae
repnz
and
push
adc
movsl
sbbb
cmp
lahf
sub
push
sub
scas
jecxz
mov
push
add
pop
rcll
decb
xchg
std
sbb
stc
mov
movsb
loopne
les
loop
insl
sbb
mov
sub
or
adcb
xor
jns
and
je
and
mov
adc
inc
lahf
or
dec
imull
loopne
idivl
das
cmp
and
sbb
push
out
aad
daa
lods
sbb
dec
pusha
outsl
sbb
or
mov
mov
popa
jno,pn
jno
xchg
mov
stos
insb
jle
pusha
and
mov
or
jnp
xor
adc
mov
in
into
mov
sbb
xchg
or
enter
aas
push
jge
fcmovnbe
sbb
mov
xchg
imul
ljmp
in
outsb
loopne
inc
test
icebp
inc
pop
jp
imul
fidivs
fists
pop
lcall
sbb
adc
shlb
dec
mov
jmp
push
jne
add
inc
cmp
js
add
add
dec
push
and
jg
ljmp
xchg
sub
mov
and
pop
pop
shll
sub
lds
push
mov
mov
jmp
mov
in
les
jecxz
xchg
mov
xor
lret
adc
xchg
jmp
std
ret
lcall
lret
cli
popa
jmp
sub
pop
push
and
nop
int3
rorb
imul
jecxz
fs
mov
push
mov
stos
sbb
mov
insb
loope
and
and
mov
out
or
loop
mov
fst
fcmovnbe
punpcklwd
cmp
popa
loope
push
shrl
pop
inc
sub
mov
jg
push
xchg
pop
fucomp
mov
sub
mov
cmp
adc
into
incb
pop
push
jne
or
call
popf
xlat
movsl
jmp
repnz
xor
iret
jecxz
fisubl
mov
add
lahf
das
testl
mov
iret
nop
xor
mov
mov
jae
aad
out
sbb
mov
test
movsb
bound
pusha
push
lret
lret
pop
adc
and
in
ret
and
inc
ret
aas
cmpsb
stos
test
stos
jae
mov
push
in
movsb
shl
aaa
out
movsb
add
jne
jbe
int3
add
das
xlat
sarb
pop
jbe
xchg
pop
dec
sbb
mov
bound
clc
loop
sub
mov
jmp
mov
xchg
inc
push
mov
push
mov
lock
ja
aaa
pop
es
and
jo
jle
and
lods
and
push
adc
hlt
cs
mov
cmp
inc
fucomi
jb
out
cwtl
je
sbb
cwtl
mov
imul
or
sub
nop
jnp
pop
pop
mov
and
mov
fdivr
stc
pop
ret
cmc
mov
jo
outsl
jle
push
pop
xchg
adc
cli
add
ror
inc
int3
aam
cmp
adc
mov
dec
lods
adc
repnz
or
inc
sbb
in
push
mov
jnp
xor
incl
cmp
fnstcw
ds
popa
dec
mov
inc
cld
xlat
pop
lods
mov
imul
cmp
arpl
sub
sahf
pop
push
shrb
fistps
and
loopne
in
sbb
out
sahf
cwtl
out
rep
lods
loope
xlat
dec
aad
lea
add
fisubl
pop
adcb
xlat
data16
loope
cmpsb
test
adc
sub
sahf
sbb
mov
and
jmp
repnz
into
pop
mov
lods
ficompl
pop
cltd
push
addb
xchg
neg
test
int3
scas
xchg
jo
shlb
sbb
inc
mov
leave
xor
hlt
ds
fmull
sbb
mov
sub
daa
lds
iret
and
ret
add
test
std
sub
push
out
xor
xchg
rolb
cmp
mov
popf
test
in
pop
and
mov
daa
pop
dec
scas
outsb
mov
mov
mov
loope
cmpsl
loop
push
adc
lahf
xor
sarb
and
je
imul
add
mov
inc
lods
add
icebp
push
divb
jnp
mov
xor
test
pop
dec
clc
lret
jge
xor
inc
sti
sbb
jge
xchg
test
mov
adc
sub
mov
adc
in
jge
scas
lcall
scas
imulb
push
filds
lea
aam
imull
jl
addl
aaa
loope
aas
cmp
es
and
sub
sub
sub
popf
pop
fiaddl
mov
fdivs
mov
dec
scas
movlps
inc
es
int
jge
out
addl
mov
lods
cmp
adcl
sub
mov
inc
xlat
rcr
pusha
inc
bound
fsubrl
mov
jno
xchg
adc
jmp
ret
inc
stos
cmc
xchg
lcall
push
outsb
cmc
dec
test
mov
outsb
and
scas
fs
pop
test
scas
and
jl
ljmp
mov
mov
daa
bound
jbe
mov
loopne
lods
sar
or
fwait
leave
lret
jle
pop
pop
dec
jo
add
lods
xlat
cli
lods
push
cmp
mov
mov
dec
aad
pusha
in
cmp
fmuls
xlat
arpl
sarb
addr16
pushf
cltd
mov
xchg
out
sbb
mov
add
mov
inc
xchg
pop
push
pop
lods
mov
mov
lret
stos
fbld
shlb
mov
xor
dec
cli
mov
call
addr16
or
ss
push
in
xchg
jmp
cs
or
add
or
in
adc
das
adc
sbb
and
daa
test
inc
and
loopne
or
js
or
mov
lods
sbb
mov
ss
jmp
pusha
popf
pop
lret
mov
jmp
adc
insb
sbb
adc
xchg
ja
mov
push
cli
orl
aas
in
notb
jg
jns
mov
outsb
aas
push
adc
sbb
test
fwait
loope
pop
push
cmp
int3
cs
lahf
cmp
mov
dec
jbe
pop
mov
outsl
test
mov
stos
sub
cmp
jno
dec
ja
int
out
popa
push
mov
fbld
inc
cmp
in
fcompl
outsb
push
xchg
js
jno
xchg
cmc
arpl
add
aam
std
ljmp
jns
lret
insb
rclb
xchg
sub
fadds
sbb
mov
cltd
scas
sub
bswap
add
cld
mov
or
or
ja
add
enter
es
fisttpll
pop
ljmp
push
in
mov
mov
dec
icebp
mov
mov
xlat
ret
push
clc
fidivl
stc
js
mov
mov
mov
xor
adc
fdiv
mov
xchg
ret
jne
es
mov
shll
xchg
inc
xchg
cmp
push
movsl
push
mov
sbb
ljmp
rolb
out
orl
push
adc
jns
xor
add
cmp
xchg
sbb
popa
pop
and
addb
in
js
outsb
or
cwtl
bound
push
cmp
repnz
xor
jecxz
or
xor
test
jno
enter
mov
pop
mov
pop
rol
mov
andl
mov
mov
mov
push
sbb
jo
in
adc
push
mov
mov
ret
mov
sti
outsb
add
ja
sub
fmull
call
hlt
push
popa
gs
mov
mov
xchg
push
pop
push
jae
dec
xchg
inc
dec
orl
popa
imul
in
add
mov
pop
filds
leave
sub
push
shrl
adc
xor
fucomi
cmp
pop
xchg
and
dec
mov
pusha
inc
fsubl
popf
mov
add
push
jnp
out
sbb
repz
fcoms
mov
add
and
xlat
gs
pop
fs
int
inc
dec
pushf
and
pop
mov
in
icebp
stos
sbb
pop
sbb
jl
out
sbb
xchg
pop
es
cld
fcoms
mov
inc
cmp
mov
es
hlt
mov
sbb
mov
loope
inc
out
and
fisubs
pushf
lcall
lcall
pop
and
jbe
sbb
adc
xchg
mov
xor
jns
push
and
inc
or
add
sbb
out
pop
mov
pop
sbb
cmpsb
sbb
outsb
int3
idivb
clc
test
xor
sahf
call
push
add
and
cld
inc
andl
jae
iret
aam
pusha
and
fists
jp
sub
frstor
dec
pop
aad
sub
cmp
clc
rorb
push
aaa
fcomip
fnstsw
xchg
xor
fidivrl
roll
inc
mov
cmp
push
add
nop
ljmp
repz
and
lcall
mov
xchg
pop
lahf
xlat
insb
out
and
js
push
ljmp
jecxz
pusha
sbb
imul
mov
fsubrs
popa
jns
push
andl
daa
inc
mov
lock
sbb
push
das
insb
and
jl
movsl
shl
andb
mov
xor
lahf
or
lods
cmpsb
ret
int
pop
jo
frstor
pop
fimull
rclb
gs
leave
pusha
mov
add
in
jge
shlb
faddl
stos
mov
scas
mov
push
pop
aam
outsl
cmc
popa
xor
pop
or
cmp
push
fnsave
mov
push
cmpsb
aas
and
cli
push
mov
inc
mov
or
pop
xchg
mov
lock
xor
or
mov
xchg
shlb
mov
push
xchg
mov
das
xlat
adc
mov
cmpl
xchg
xor
aam
xor
in
jb
mov
fildl
push
mov
push
dec
xchg
add
push
sbb
lods
mov
int
or
shll
mov
enter
jae
mov
pusha
or
lahf
popa
pop
xchg
lahf
lds
sarb
mov
inc
inc
movsl
push
dec
and
push
insb
jne
cwtl
sub
push
cmc
inc
jecxz
inc
insl
jle
mov
inc
out
inc
adcl
fmuls
mov
arpl
push
loop
mov
ja
cmp
rcrl
out
xor
cltd
cmpsb
rol
and
aaa
sub
in
add
test
jbe
cltd
add
cli
mov
adc
nop
cld
mov
std
pop
jmp
or
sub
cmp
xor
sub
and
jns
inc
adc
push
dec
fnstsw
mov
iret
aaa
push
sbb
mov
cmp
jnp
in
gs
jnp
pop
jae
test
sti
ret
jle
ja
dec
clc
sub
jbe
cli
xchg
dec
jnp
sbb
decl
outsl
pushl
add
mov
popa
cmpsl
push
lods
mov
push
sbb
lea
fs
sbb
cltd
insb
sti
cmp
jl
mov
sbb
inc
add
rorl
movsl
fsubs
sub
mov
mov
sbb
fs
pop
add
mov
pop
jp
or
dec
repnz
xchg
add
shll
cmc
stos
sbb
adc
dec
inc
cmp
fsts
fistpll
scas
cmpsl
gs
and
jb
das
push
dec
shlb
jb
or
add
xchg
roll
in
sub
stc
fisttpll
pop
fcoml
pop
fdivl
jns
lods
cmp
mov
test
push
repnz
pop
daa
ss
mov
xchg
pop
xchg
cs
ficomps
divb
mov
jne
inc
jp
and
add
xchg
repz
repnz
push
pushf
cli
add
loopne
in
fnstsw
les
sub
stc
sub
arpl
adc
adc
mov
push
mov
push
ljmp
shr
pop
sbb
aam
testl
sbbl
cmp
shrl
lret
inc
daa
xor
test
fstl
xor
outsb
cmp
out
add
mov
mov
cmpsl
mov
outsl
mov
mov
imul
cld
insl
popf
lods
ret
call
fldl
stos
xchg
outsl
movsb
imul
inc
mov
pop
std
pop
push
int3
jge
jne
std
xchg
inc
xor
mov
add
imul
xchg
xlat
inc
scas
out
movzbl
mov
sahf
and
insl
cmp
sbb
out
pop
and
mov
scas
xchg
lcall
subl
out
cmp
cmp
pushf
cli
inc
cld
flds
lods
mov
xor
pop
inc
call
loopne
xchg
mov
int3
fadd
fisubl
pop
stos
push
jmp
cmpsb
iret
aam
subl
add
pushf
xchg
mov
mov
test
out
mov
cli
ret
cmpsb
and
cli
xchg
scas
icebp
jmp
inc
test
sarb
jb
scas
mov
stos
js
shl
mov
mov
mov
jl
pop
sub
mov
scas
rcrl
cmp
mov
data16
ds
dec
inc
cmc
in
hlt
popf
aad
xlat
ja
xor
jg
dec
ja
call
mov
mov
repnz
cmp
adc
mov
cwtl
stc
outsb
arpl
dec
add
insb
sub
adc
mov
and
sub
lret
xchg
jp
out
sub
cmp
fs
in
push
cs
je
add
es
int3
das
ret
ret
mov
popf
sbbb
sbb
cmpsl
mov
jb
test
imulb
scas
cwtl
xor
mov
and
repnz
shll
or
addb
mov
mov
test
lret
sar
test
push
stos
lods
sbb
inc
out
xchg
fbstp
or
cmc
sub
cmpsb
push
test
out
jae
in
and
nop
mov
loopne
fnsave
xor
cmp
mov
sub
xchg
cmp
mov
out
jb
or
xor
inc
push
icebp
out
cltd
sbb
int
xchg
mov
adc
aad
iret
inc
stos
push
mov
xor
cwtl
ffreep
lock
das
loop
mov
sub
and
jbe,pt
push
lcall
test
loope
in
ss
shlb
cmp
xchg
test
xchg
mov
and
cmp
mov
adc
sbb
mov
xor
pop
in
pushf
push
lret
push
mov
dec
nop
movsb
xor
xchg
adc
ret
into
mov
repz
popf
and
aaa
adc
dec
pop
adc
imul
outsl
lea
cmp
js
xor
jmp
stc
and
mov
dec
add
js
cmc
cmp
cmp
cli
inc
ret
fstl
scas
cmp
std
jnp
and
mov
ror
pop
xchg
sub
jl
test
inc
inc
sbbb
fisttpll
inc
mov
dec
sub
pop
addr16
xchg
xchg
ss
rorl
push
and
sub
popf
jae
inc
aaa
cmp
mov
shll
xchg
and
repnz
lahf
and
lock
xchg
hlt
lahf
sub
pop
or
pop
add
jae
in
mov
lret
imul
xlat
out
push
inc
add
test
dec
push
imull
stc
adcl
jo
jno
inc
jns
xor
or
xchg
das
outsl
pop
inc
sahf
sbb
cmp
out
mov
add
test
outsb
repnz
hlt
adc
sub
leave
scas
mov
inc
icebp
push
out
ja
out
test
rcr
push
pop
cmp
or
cmpb
sub
jb
pop
add
sub
jae
and
mov
fadd
out
push
mov
inc
mov
hlt
in
sbb
test
rcrb
mov
sarb
jle
out
inc
dec
and
insl
jge
xchg
fdivr
push
mov
pop
fsubrl
mov
mov
mov
invd
in
and
ljmp
sahf
test
mov
lretw
sub
xchg
stos
popa
xor
adc
stc
mov
inc
push
mov
repnz
incb
mov
lret
mov
mov
xor
fmulp
fcoml
popa
xchg
pop
push
jle
shll
cmp
dec
insb
xchg
push
insb
jg
jno
or
imul
sahf
add
xchg
inc
and
movb
mov
pop
sbb
ret
inc
lcall
into
scas
fisttps
mov
and
ss
pop
pop
adc
mov
jmp
sbb
or
mov
push
jle
xor
aad
xchg
movl
and
mov
loop
mov
data16
repz
or
pop
inc
cmp
out
and
mov
popf
imul
test
push
and
push
fldcw
les
add
lods
scas
mov
sub
inc
jle
mov
cmc
xor
enter
mov
mov
sub
add
or
pusha
push
std
lcall
dec
outsl
pusha
or
movsl
dec
sub
lret
push
mov
and
inc
loope
mov
loop
lahf
add
xchg
jmp
je
jno
inc
cs
es
repnz
test
push
inc
adc
add
in
sub
test
xor
inc
mov
das
and
imul
mov
ds
je
cs
lahf
outsb
pop
adc
mov
int
xor
adc
mov
mov
mov
pop
adcl
popa
adc
mov
cmp
test
xchg
shr
addb
jo
int
xchg
imul
dec
mov
ret
mov
addr16
jg
push
jp
inc
les
jg
sub
and
aaa
cs
aam
and
xor
mov
jmp
inc
and
arpl
mov
adc
cmp
mov
popf
and
mov
mov
push
mov
lahf
testl
add
ret
stc
popf
scas
roll
push
sahf
sbb
dec
cwtl
jecxz
mov
inc
xor
inc
push
mov
addb
lcall
jns
stos
pop
scas
or
inc
adc
jg
xor
ret
into
push
adc
data16
jl
cmp
mov
jp
inc
mov
addl
into
pushf
lds
ss
scas
adcl
das
sbb
pop
jb
das
sbb
shlb
icebp
clc
inc
test
sbb
test
dec
fdivl
or
jecxz
subl
xchg
shll
sub
mov
cltd
test
add
nop
sti
dec
fldt
inc
dec
je
sub
out
sahf
insl
xor
mov
aaa
adc
mov
mov
sahf
dec
nop
pusha
into
lods
rolb
or
cmp
fnstsw
jecxz
out
xchg
scas
testl
mov
pop
ret
or
rol
call
push
inc
int3
orl
scas
nop
outsl
iret
into
dec
cli
leave
fwait
lcall
inc
sub
and
rcll
jns
xchg
sbbb
inc
push
sahf
les
pcmpgtd
jne
mov
mov
and
enter
xor
pop
rolb
icebp
sbb
fwait
shlb
lret
sbb
jp
push
movsl
inc
add
popa
xchg
enter
cmp
addr16
jge
loop
popa
cmp
hlt
scas
nop
cmp
btc
ficomps
and
ds
pop
rol
mov
mov
out
mov
mov
push
push
jno
push
lods
fdivrl
cmp
in
jns
scas
pop
inc
shlb
xchg
mov
jo
stos
dec
mov
xor
jl
jl
inc
roll
out
in
int3
push
aas
cli
jecxz
sub
lods
push
jbe
iret
push
mov
scas
jne
xor
leave
lods
fincstp
cmp
push
push
mov
test
lret
jo
ss
cmpsb
push
repz
mov
movsb
inc
sbb
mov
sbb
push
inc
les
jp
jle
inc
adc
icebp
outsb
lret
roll
adc
call
imul
hlt
jbe
insb
out
xor
dec
xor
cmp
jno
mov
lcall
push
and
pop
nop
mov
out
das
inc
add
hlt
and
or
push
mov
lahf
inc
btr
sub
movsb
cld
fstpt
dec
mov
xchg
cmpsb
mov
insl
cld
outsb
arpl
mov
xchg
xor
xchg
sbb
fld
mov
push
pop
cmp
outsb
mov
jae
setno
lock
aas
cmpl
mov
xor
insl
push
mov
or
shll
hlt
sbb
dec
in
in
lea
outsb
das
ret
or
ret
or
jae
cmp
stos
add
dec
mov
out
mov
xor
pop
xchg
dec
xchg
inc
xchg
mov
fwait
lods
cltd
scas
insl
fdiv
dec
jmp
jle
pop
fnstsw
adc
cmp
xchg
stos
xor
cwtl
mov
fadds
aam
addr16
aas
dec
call
adc
aad
shr
adc
mov
into
dec
mov
test
pop
nop
popf
sbb
out
sarl
jg
sti
mov
add
sbb
inc
in
pusha
data16
in
and
mov
and
out
mov
and
and
outsl
addr16
rcl
inc
dec
daa
inc
mov
test
xchg
scas
or
mov
out
cmp
sub
mov
dec
push
cmp
pop
int
pop
sbb
mov
outsb
movsl
xchg
pusha
push
pushf
mov
rcrb
xchg
or
out
xchg
ds
filds
mov
push
cwtl
lds
inc
test
pop
push
cltd
push
cli
mov
push
leave
pop
cmp
xchg
jmp
mov
jae
out
xchg
ljmp
or
pushf
lods
pop
mov
mov
push
in
lock
cmp
xor
std
and
inc
js
mov
jae
or
subb
das
into
add
insb
mov
jne
dec
xchg
enter
xchg
and
cs
jecxz
pop
dec
xchg
mov
pop
rcrl
inc
and
cmp
xchg
lock
sbb
pop
fnclex
dec
repz
stc
arpl
inc
adc
jo,pn
inc
dec
cmp
mov
and
insb
mov
jb
mov
jne
mov
and
outsl
cmpsl
inc
inc
mov
pop
cmc
cmp
jnp
push
or
bsr
cli
push
setb
jns
jb
jmp
xchg
pop
ja
or
push
cwtl
xor
mov
sbb
testl
inc
imul
fmull
pop
jge
mov
mov
outsb
stos
and
fdiv
stos
sbb
dec
push
adc
out
mov
lret
insl
dec
xchg
int
iret
jb
std
pop
sbbb
movl
sbb
mulb
rorl
sbb
int
or
test
stc
iret
xlat
loopne
mov
mov
test
nop
outsl
testb
jnp
xchg
mov
decl
stc
push
mov
lret
stos
outsb
mov
addr16
inc
push
lret
jmp
sub
sub
pop
and
jp
mov
mov
aaa
cmp
mov
mov
adc
test
je
xor
flds
xor
mov
xchg
jle
mov
pop
imul
xor
mov
xacquire
mov
push
xchg
mov
lods
sub
add
clc
jl
jmp
jl
gs
xchg
out
xlat
push
sbb
dec
ljmp
push
mov
call
loopne
scas
sub
imul
and
mov
mov
pop
shl
pop
adc
and
scas
xor
mov
sbb
mov
in
inc
push
mov
xchg
fwait
das
or
mov
push
mov
neg
dec
push
jmp
mov
les
xchg
jb
je
subl
push
aad
sbb
add
incb
inc
adc
sub
jo
xchg
pop
jmp
push
cwtl
pop
mov
pop
fisttpll
out
cmp
push
adc
sti
push
inc
dec
mov
inc
xchg
mov
jno
pop
fdivp
sbb
fimuls
lahf
cltd
scas
lcall
test
js
xchg
mov
push
arpl
sub
xchg
fwait
in
lods
or
xor
mov
dec
int3
dec
cmp
call
into
or
movsb
ret
pushl
push
cmp
dec
pushf
movsl
mov
rorl
fsub
iret
xchg
faddl
mov
xchg
outsl
aas
xor
fcmovnbe
sti
xor
popaw
shlb
add
pop
pop
test
iret
xchg
mov
mov
push
pop
lds
push
xchg
aam
mov
mov
xor
rcr
inc
xchg
mov
call
imul
xchg
js
sub
mov
gs
stos
push
adc
or
sub
jge
push
xor
pop
rcrb
sub
inc
incb
lods
sub
idivl
sub
pop
repz
sahf
xlat
dec
sbb
movsl
popf
and
lret
inc
xchg
or
add
cmp
dec
xor
aaa
cmp
into
push
in
aaa
cwtl
mov
cmp
cltd
mov
push
add
cmp
mov
mov
sub
inc
cmp
lret
xchg
mov
inc
lret
lods
stos
pushf
clc
stos
pop
dec
fldl
fistpl
cmp
out
and
stos
addr16
addr16
mov
and
andb
stos
cmp
inc
pop
bound
push
rcrl
mov
push
jl
cmp
into
stos
mov
cwtl
inc
jb
mov
adc
mov
add
pop
mov
xchg
add
rcr
movsl
ret
bound
jns
xor
jns
jmp
inc
movsb
cmp
cmpsb
adc
ret
mov
dec
jl
and
pop
add
pop
adc
roll
mov
loopne
cs
lock
inc
inc
or
sahf
inc
fnstcw
aam
stos
mov
sbb
or
pop
mov
std
iret
pop
lods
mov
mov
xor
sub
jnp
push
dec
imul
adc
xchg
inc
and
add
jle
inc
push
loopne
mov
aam
xchg
insb
sahf
and
pushf
sar
pop
sbb
lea
ja
sbb
mov
loop
mov
leave
xchg
cmpsl
ret
rolb
mov
xchg
jl
mov
xor
fs
cltd
push
test
jo
jo
call
and
pop
mov
lock
out
xor
jg
in
nop
xor
xlat
mov
in
push
sbb
xlat
jecxz
mov
adc
in
xchg
das
mov
mov
sbb
or
pop
je
cmp
stos
daa
sbb
test
jge
sbb
lahf
sub
lahf
mov
inc
insl
and
outsl
jp
scas
lret
push
repnz
cli
mov
and
aam
jno
cli
iret
insl
inc
ret
arpl
mov
dec
jno
fsubrl
std
loope
mov
lods
sbb
movsl
push
xchg
out
in
add
sub
and
add
dec
clc
adc
rorl
mov
add
mov
and
fnsetpm(287
and
push
pop
popa
and
mov
out
stos
imul
sbb
push
outsl
xchg
sti
test
into
in
mov
jb
jb
pop
sbbl
and
jno
rcr
fidivs
icebp
outsb
adc
cmp
inc
fiaddl
mov
jnp
in
xchg
fucomip
sub
loopne
fsts
jl
mov
or
dec
or
in
ss
xor
inc
dec
ret
cmp
inc
rcrb
xor
scas
jg
jo
outsl
inc
gs
test
fisubrs
xchg
pop
xor
and
push
daa
pop
fstl
push
popa
sti
add
or
xor
ss
shlb
mov
sub
add
sbb
and
lock
scas
aaa
addb
pop
pop
hlt
and
test
sub
lods
or
inc
jl
int
dec
stos
push
pop
dec
enter
inc
dec
mov
inc
jle
sbb
xor
or
dec
rcr
outsb
push
sub
aaa
pop
push
std
mov
mov
cltd
push
push
addl
cmp
fistps
mov
pop
ss
adc
mov
cmp
hlt
ljmp
mov
mov
sub
or
scas
or
out
pushf
lcall
jmp
jle
xchg
or
aam
and
leave
sarb
push
aam
xchg
hlt
imul
and
je
cmp
stc
scas
mov
push
pop
mov
dec
mov
data16
or
and
mov
adc
aad
adc
mov
lds
mov
in
mov
ret
outsl
repnz
mov
cs
lea
push
push
lea
shlb
push
js
lds
aam
pop
cs
cwtl
aad
loopne
daa
gs
ss
negb
jge
adc
je
mov
dec
test
sub
jmp
rolb
jno
xor
cmp
xchg
add
jg
push
dec
pop
std
sub
xchg
sbb
loop
inc
xchg
cmc
test
dec
pop
pop
cwtl
rorl
push
sahf
mov
and
cld
pop
xchg
fs
xor
iret
nop
jecxz
lods
sub
mov
xor
jns
iret
push
test
cmpsl
cmpsb
jnp
inc
or
dec
xchg
xchg
mov
int
dec
pop
sub
cmp
lds
xor
inc
pop
insb
cmp
inc
insb
mov
mov
stc
dec
fcoms
add
mov
mov
js
mull
mov
jg
dec
cmpb
cmp
cltd
push
xor
jae
lahf
js
sub
dec
cmp
mov
into
cli
test
dec
mov
out
jae
ret
add
inc
or
fdivrp
lcall
adc
cmp
cmpl
nop
test
mov
aad
fs
push
add
mov
xchg
gs
outsb
fiaddl
xchg
mov
jnp
out
add
fsqrt
jns
mov
mov
in
cmp
fsubrs
push
xchg
cwtl
and
add
je
push
rol
push
jb,pn
jno
dec
mov
mov
sbb
imul
mov
je
push
nop
lcall
stc
cli
cmpsl
fildll
cmp
mov
mov
js
mov
shl
movsl
gs
jg
outsb
scas
jp
in
jecxz
je
outsb
or
push
scas
gs
push
jno
stos
xchg
rcrl
jge
dec
pop
xor
sub
push
lret
jle
es
cmp
sub
out
ret
in
sbb
hlt
int
inc
push
or
roll
or
jns
add
lret
rclb
cmp
loopne
mov
out
xchg
inc
jecxz
pop
aam
adc
std
inc
jae
imul
sub
push
dec
push
mov
push
hlt
jmp
test
mov
testb
cmpsl
mov
cld
testb
push
cmp
jbe
lcall
lods
cld
pop
outsb
negl
push
fisttpll
rcll
lea
mov
pop
outsb
lods
shlb
clc
xchg
stos
jmp
push
xor
loope
dec
cmpsl
loope
rorl
sub
xor
aam
cmpsb
ds
pop
and
xchg
mov
pop
repz
push
adc
push
cmp
and
push
or
fcoml
movsl
lea
push
xchg
sti
lods
adc
xchg
sub
mov
dec
add
mov
test
aaa
sub
mov
mov
jmp
mov
testb
stc
lret
and
pop
daa
inc
pop
and
and
mov
inc
ret
pusha
inc
mov
xchg
push
xor
mov
in
in
mov
out
out
test
push
shlb
lods
jbe
cs
test
mov
out
sahf
arpl
les
dec
sub
iret
cmp
push
out
rclb
cmp
imul
dec
das
and
out
fsubrs
ja
dec
or
add
dec
push
inc
pop
lods
push
js
sbb
ja
jmp
xlat
rolb
stos
mov
xor
push
adc
mov
inc
mov
jns
mulb
mov
int3
jge,pn
sub
mov
sbbb
mov
sub
es
negl
jmp
jl
aam
out
sti
mov
push
pop
dec
sti
cmp
movsl
pushf
daa
lcall
fadds
and
add
mov
inc
sbb
xchg
inc
imul
out
mov
sub
popa
test
inc
sbb
push
pusha
mov
and
and
aas
pop
test
sub
fcom
sbb
pop
mov
jmp
xchg
lret
bound
scas
andl
mov
cmpsl
jp
test
fdivl
repnz
lock
sub
les
loopne
jp
inc
jecxz
dec
xor
scas
push
out
sub
jmp
pop
inc
lcall
outsl
test
sbb
scas
jno
loop
pop
repnz
loop
adc
cmp
mov
cmp
pop
add
idivb
mov
push
adc
stos
sahf
pop
add
or
repnz
push
nop
fadds
mov
lds
aaa
or
jns
jb
or
pop
cs
sbb
icebp
adc
imul
or
leave
dec
jne
jecxz,pt
pop
adc
mov
dec
add
inc
and
add
inc
jne
movsb
scas
inc
mov
sub
cmc
cs
xchg
hlt
inc
test
dec
rcrb
mov
push
test
or
cltd
mov
data16
and
js
sub
fistl
mov
dec
mov
xchg
dec
movsb
cmp
icebp
call
cmp
stc
fiadds
inc
xchg
mov
inc
pop
loopne
int3
mov
arpl
or
lock
cmpl
sbb
aam
pusha
dec
sbb
mov
cltd
addr16
and
push
pushf
orl
shl
ss
in
lea
mov
out
gs
lods
das
mov
pusha
push
mov
decl
inc
cmc
int
pop
out
fsubp
cmp
movsb
stc
lea
scas
lret
mov
nop
out
add
sub
fdivrp
add
jle
adc
xchg
mov
jb
xor
jne
or
xchg
jecxz
test
inc
je
lahf
xchg
aam
push
or
and
mov
scas
xor
xor
fwait
xor
aaa
enter
xchg
enter
xchg
mov
das
clc
aad
push
xlat
inc
jmp
out
add
and
cld
int3
xchg
cmpsb
lahf
stc
xor
inc
aam
lods
xor
roll
jl
clc
test
cwtl
xor
rcll
adc
pop
movsb
or
or
and
into
sub
fnstcw
gs
adc
outsb
push
sarl
jbe
or
xor
shl
pop
outsb
sbb
mov
mov
dec
jge
imul
mov
add
fwait
pop
stos
mov
dec
aaa
or
push
push
negb
sub
sbb
das
dec
cmp
sub
mov
sub
jne
sub
int3
pop
enter
sbb
stc
jecxz
rorl
cmp
enter
push
sahf
je
jae
repz
mov
imul
lret
adc
hlt
stos
sub
es
shlb
cmp
fistl
cli
pop
push
push
add
mov
out
nop
fwait
sbb
push
add
leave
fbstp
outsb
dec
cmp
pop
jnp
mov
clc
roll
div
mov
repz
pop
inc
pop
adc
dec
inc
arpl
enter
test
es
lds
mov
mov
fldenv
outsl
mov
ds
cmp
cmp
sub
add
dec
push
push
mov
dec
lea
or
cmpsb
nop
xor
mov
loop
sub
mov
popa
xchg
xchg
cld
xor
sub
lods
ja
push
xchg
inc
aaa
popf
mov
orb
jno
pop
add
pop
jl
push
mov
bnd
xchg
hlt
sub
rorl
xchg
add
cs
add
lods
push
xchg
sbb
cwtl
cmpsl
test
leave
dec
stc
rorb
loop
or
outsl
jg
push
imul
repz
movsb
hlt
xchg
insl
mov
lahf
js
jecxz
sti
inc
jbe
inc
adc
dec
mov
push
mov
mov
in
inc
push
repz
out
shll
fwait
popf
hlt
lock
subb
xchg
fwait
sti
sbb
aas
add
mov
cmp
lods
rcrl
cs
xor
adc
sub
pop
or
dec
jb
mov
lds
push
xchg
fmuls
rcll
std
sub
jb
dec
adc
mov
ret
jns
push
sub
js
pusha
jle
cmp
jl
rorb
and
jmp
stos
js
cmovns
es
mov
adc
jnp
outsl
xchg
fdivrl
bound
rcr
pop
xor
xor
jnp
xchg
dec
aaa
jnp
cmp
dec
je
push
cmpsb
push
xor
mov
sub
jbe
or
add
cmpsl
sub
sbb
mov
unpcklps
sub
cs
fucomp
fsubrs
inc
insb
iret
pop
pop
out
jp
jns
mov
or
mov
ss
jle
sub
enter
cmp
lret
xlat
and
ficoms
sahf
cmp
in
stc
cs
add
or
out
push
in
dec
jle
sti
stos
gs
inc
inc
or
fdivrs
notb
cmpsb
push
jp
push
cltd
jnp
or
mov
repz
repnz
fnstcw
das
xor
lcall
sbb
xor
and
ficoml
push
int
xor
dec
xlat
test
imul
out
in
int
xor
into
fcoms
or
call
sti
dec
addb
mov
pop
push
cltd
cmpsb
push
push
pop
cltd
mov
sbb
sbb
or
ret
shll
or
add
jo
sarl
sbb
shlw
xchg
mov
ret
add
pusha
cmp
jbe
and
or
icebp
sbb
iret
sbb
or
scas
sahf
clc
mov
inc
loope
aad
cmpb
aaa
rcll
push
xlat
out
daa
mov
jmp
dec
js
mov
jnp
cs
lret
jns
mov
pop
cmc
and
mov
add
add
mov
push
inc
mov
xor
mov
cmpl
jg
xchg
das
xor
ja
jae
imul
inc
cld
mov
cmp
mov
xchg
call
fmul
mov
push
and
stos
inc
cli
jl
jno
push
sub
xchg
jne
stos
outsb
lea
ja
mov
add
outsb
push
loop
jbe
sahf
cltd
ss
pop
aad
dec
movsl
sub
orl
xchg
js
jmp
jp
add
enter
imul
mov
ror
mov
xorb
push
pop
js
out
fldt
and
xchg
leave
and
lretw
cli
xlat
push
in
fistpll
add
addl
bound
jo
aaa
shlb
cmpsl
jno
je
lods
push
inc
scas
cmp
hlt
jecxz
and
test
stc
cmp
lea
push
fimuls
pop
ljmp
jno,pt
push
xor
leave
rorb
sub
and
fldt
idivl
shrl
cwtl
sbb
addr16
push
or
xor
movsb
out
add
movsl
or
in
push
mov
stos
cs
nop
mov
stc
lahf
jb
jle
mov
sbbl
notb
jecxz
outsl
loopne
dec
in
mov
loopne,pt
or
stos
xchg
in
jne
js
ss
movsl
ss
lea
ret
push
sbb
push
fsts
mov
int
inc
imul
mov
xchg
or
vandnpd
stc
fcomip
pop
in
fwait
pusha
outsl
push
sahf
enter
ret
jg
js
sarl
push
cmp
mov
jmp
rcll
enter
cmp
movsl
repz
add
mov
les
movsl
inc
stos
xor
cli
test
dec
sub
aad
fsubl
lahf
clc
inc
mov
cmc
jp
and
cld
cmp
repnz
out
jle
mov
xchg
xchg
daa
dec
ret
movsl
filds
loopne
pop
cs
adc
jne
inc
inc
pop
inc
cwtl
dec
test
loop
ret
pop
mov
fwait
jg
cmpl
pop
test
cltd
pop
movsb
jmp
mov
mov
mov
in
inc
xchg
inc
shrl
cmp
push
inc
mov
in
aad
mov
rcr
sbb
push
mov
xor
shrl
lock
push
push
sti
jmp
addr16
mov
push
and
xchg
sub
pop
leave
jo
push
add
lds
inc
dec
out
call
movsl
cmc
mov
dec
mov
pusha
out
fstpl
sub
loope
mulb
cmp
or
cltd
cmpsb
push
imull
and
arpl
rcrb
xor
mov
sub
icebp
jg
inc
mov
clc
inc
shll
mov
test
dec
push
int3
push
arpl
jae
sbb
leave
sahf
mov
jmp
sub
std
fldcw
pop
inc
inc
dec
cmp
mov
xchg
fwait
outsl
push
xor
jge
add
pop
mov
pop
and
pop
xchg
mov
inc
jns
mov
sub
add
in
cltd
icebp
jmp
mov
inc
int3
cmpsb
sbb
or
iret
cld
inc
jbe
shll
xor
add
stos
add
or
sub
cmp
xchg
and
loop
adc
clc
mov
jmp
adc
adc
ret
xchg
ljmp
and
pop
dec
push
mov
xchg
and
and
sbb
jnp
insb
inc
insb
xchg
inc
push
les
insb
sub
mov
xlat
sbb
cs
fwait
mov
sub
scas
loopne
pop
add
add
inc
movsl
pop
lea
inc
mov
hlt
mov
xchg
dec
sbb
outsl
fsubrs
push
sbb
shrb
aas
add
nop
fisubl
or
scas
aaa
mov
bound
lea
subb
push
es
inc
fmuls
inc
push
push
idivb
adc
jne
fstpt
aaa
pop
xor
movsb
mov
sub
fsubs
in
arpl
in
and
out
xchg
push
or
adc
test
sti
push
jno
push
insl
add
ret
jae
lahf
pop
mov
je
mov
pop
lods
mov
mov
dec
and
or
popf
adc
out
jmp
mov
lret
pop
mov
shl
xorl
cld
mov
fmul
pop
paddusw
adc
std
jmp
mov
xchg
xchg
mov
sub
mov
daa
and
pushf
imul
fistpll
pop
repnz
cmp
sbb
pushf
push
cmp
adc
inc
mov
bound
add
inc
inc
jae
sub
das
testl
xchg
dec
je
xor
sbb
or
dec
xchg
push
ss
dec
scas
push
mov
or
les
aaa
mov
pop
out
add
jbe
or
sub
xchg
nop
pop
ds
sbb
in
lock
lahf
icebp
and
sub
sbb
into
notb
add
or
xchg
jge
outsb
test
jnp
add
mov
or
or
or
nop
fs
test
out
mov
mov
inc
lahf
testb
jns
lret
and
sub
repnz
push
cmp
fs
repnz
mov
jecxz
push
cmp
inc
rcll
lods
mov
jecxz
mov
pop
cmp
lahf
sbbl
into
pop
pop
inc
fcompl
daa
inc
push
hlt
adc
sahf
dec
cmp
or
lcall
mov
cmc
mov
inc
adc
out
xchg
insl
fdivs
leave
aad
and
cmp
repnz
imul
sarb
out
and
ds
clc
and
ds
mov
push
xchg
fbld
xchg
push
in
test
into
fimull
jl
insb
xor
enter
mov
cmc
stos
or
arpl
or
imul
mov
mov
ss
cmp
pop
cmp
int3
leave
aam
ja
push
inc
test
dec
jmp
stc
mov
xor
dec
int
les
aas
pop
fcomps
sub
aad
inc
fsts
into
data16
lods
dec
xor
faddp
call
movsl
cltd
movsb
stc
and
lods
jnp
push
mov
insl
addr16
fldl
int3
scas
mov
push
mov
add
mov
pop
or
dec
imul
fldl
cmp
sbb
cwtl
adc
pushf
mov
add
test
dec
aad
pop
mov
mov
cmpsb
aad
aad
fs
loopne
push
mov
mov
out
mov
push
pop
add
pushf
and
imul
icebp
lret
faddl
mov
xor
popf
dec
jns
xchg
gs
test
lret
mov
stc
xchg
cld
out
xor
nop
cmp
mov
mov
out
movl
adcb
std
ret
lods
cmpsl
fsqrt
es
dec
xor
sub
pop
out
shrl
mov
push
div
mov
imull
mov
jb
mov
push
fbld
xchg
mov
xor
sarb
xor
xchg
jg
pop
insb
out
push
adc
sub
mov
loop
icebp
outsb
imul
xor
push
jb
cmpsl
aam
dec
setg
add
cmp
cwtl
sti
dec
xchg
push
lahf
repnz
insl
sub
cli
cld
pusha
popa
iret
ss
jg
test
fldenv
in
push
and
cmc
pop
add
inc
leave
fldt
or
pop
push
aaa
out
push
mov
int3
mov
test
add
xchg
sub
idivl
inc
add
pop
lds
and
lea
popa
xchg
jle
ss
xor
cs
scas
and
std
adcb
dec
cmpsb
loopne
dec
lods
aas
mov
bound
or
enter
sbb
test
es
jnp
xchg
and
push
mov
adc
inc
mov
lcall
add
pushf
mov
mov
xchg
mov
int3
adc
in
test
mov
xor
imul
push
adc
pop
mov
cmp
fsts
les
sub
mov
std
dec
jnp
je
sbb
stc
cmp
xchg
sub
cmc
dec
push
push
and
jp
cmpsb
xchg
adc
out
gs
cmp
sbb
sub
mov
in
jmp
or
cs
xchg
mov
dec
pop
mov
xor
adc
adcb
into
sar
push
jo
xchg
fdivrl
mov
mov
pop
adc
flds
mov
xchg
sbb
inc
jge
cmpsl
sub
and
ljmp
dec
and
es
mov
adc
pop
cli
stos
mov
into
scas
xchg
xor
cltd
mov
inc
sahf
mov
movsb
scas
adc
push
ljmp
pushf
and
loopne
xchg
push
cmpsl
je
js
jg
jmp
jmp
mov
in
mov
cltd
lods
sbb
add
push
call
jns
mov
call
mov
jl
mov
cmp
lret
lcall
mov
mov
fdivs
pop
pop
imul
shll
fbstp
push
sti
mov
sahf
popl
mov
push
lret
add
add
fcomps
ret
pushf
or
mov
in
dec
push
call
aaa
in
adc
push
nop
je
inc
out
or
sti
dec
sub
and
loop
xchg
and
inc
mov
pop
enter
sbb
or
lcall
addr16
mov
and
mov
xor
std
das
mov
mov
adc
lods
xchg
push
ja
sub
es
sub
scas
cmpl
cmp
push
lods
mov
pop
pop
add
cmpsb
je
push
push
loope
std
sbb
ret
lds
imul
mov
cli
mov
push
loop
add
cmp
arpl
cmp
arpl
lret
and
pop
adc
stc
xchg
pusha
push
mov
cwtl
test
rcl
inc
outsl
loop
mov
sbb
negl
addb
xchg
push
outsb
and
out
mov
imul
ret
scas
das
bound
pop
popl
addr16
ficoms
and
aad
jl
sbb
sbb
data16
das
dec
mov
add
fistl
enter
xor
and
jecxz
mov
aas
fstl
imul
pop
cmp
jne
mov
shlb
dec
int3
jns
fisubrs
pushf
cmp
cmpxchg
or
lret
push
fnsave
jns
stc
insb
add
mov
insl
sub
les
loopne
stc
pop
in
dec
push
lock
js
push
ret
sbb
fcoms
lret
or
lahf
xchg
jae
jno
jnp
iret
sbb
xor
push
stos
xor
pop
xor
mov
lods
xchg
mov
loope
in
call
fcoms
inc
or
int
add
dec
mov
lret
loopne
popf
dec
into
shll
xor
and
icebp
cli
xor
cmp
push
mov
sbb
push
shl
jne
frstor
loop
ficoml
enterw
ret
mov
andb
mov
jg
mov
lea
mov
lret
inc
jb
add
sbb
mov
sub
loope
mov
das
aaa
nop
lea
xchg
cmp
inc
insl
push
jp
lds
xchg
fsubrl
cmp
test
std
jge
xchg
mov
aaa
aas
mov
test
dec
in
xor
pop
fisttpll
jg
xchg
cmp
fadds
cltd
xor
xor
xchg
gs
xlat
xchg
adc
push
cli
call
jae
ret
or
or
popf
inc
mov
ljmp
cmpsb
add
push
xchg
das
hlt
fs
push
jbe
lret
test
sti
dec
clc
les
adc
lahf
ss
inc
sub
int
outsl
aad
or
push
mov
sbb
sbb
test
leave
fsubr
xor
data16
pop
jne
push
cmp
cltd
sti
add
or
aaa
add
xor
dec
add
jbe
mov
shl
push
inc
adc
lods
add
push
in
jns
mov
sbb
jb
scas
mov
in
les
out
sti
pop
rorl
pop
adc
sub
ret
or
out
in
fidivl
xchg
js
shl
cmp
test
sub
jnp
fmul
or
dec
jl
stos
push
out
and
inc
or
and
daa
movsb
push
hlt
and
or
push
mov
push
negb
subb
shll
daa
adc
and
mov
aad
ja
inc
dec
lahf
cwtl
sarb
out
iret
mov
push
fcompl
or
xchg
adc
stos
mov
mov
out
push
into
push
and
test
jecxz
push
add
or
push
repnz
push
xchg
test
shll
pop
scas
xor
roll
xchg
xchg
cs
and
negl
test
nop
mov
ljmp
mov
adc
arpl
xchg
popa
pop
in
outsb
dec
test
jg
aas
mov
sti
test
cli
jbe
jmp
test
dec
lds
repnz
jmp
lods
movsl
or
sub
imul
imul
pop
fwait
les
adc
stos
jmp
idiv
scas
out
sub
mov
dec
lret
xor
test
pop
cli
ljmp
bound
fdivl
lds
call
add
push
adc
shll
lret
pop
in
mov
imulb
je
dec
dec
xor
in
inc
adc
adcl
pop
push
mov
xchg
popf
and
pop
push
fsubs
gs
pop
pop
lods
push
daa
xor
sti
or
sti
mov
push
shll
sahf
push
sub
movsb
xchg
ret
and
adc
jg
nop
push
sbb
sar
push
les
inc
xchg
jo
and
lods
mov
pop
mov
mov
mov
in
outsl
in
mov
js
or
jmp
pop
dec
imul
xchg
cmp
push
push
aas
ds
cmp
cmp
aaa
cmp
iret
out
push
mov
inc
add
sub
cwtl
enter
lret
cld
mov
lret
dec
icebp
scas
or
lret
imul
pop
pop
adc
loopne
cmpsl
int3
es
lret
cs
subl
xor
ss
mov
rorb
loop
mov
cmpsl
mov
cmpsl
cmp
jno
aaa
into
outsb
lods
int
popa
fnstenv
mov
loope
adc
aas
inc
or
xchg
dec
or
scas
inc
out
int
adc
push
inc
test
dec
cli
movsl
push
and
xbegin
sbb
cs
inc
mov
mov
or
inc
add
mov
in
pop
pop
dec
jbe
dec
pop
lods
mov
jp
daa
and
dec
jne
mov
cmp
jb
and
cs
mov
mov
sahf
push
mov
lcall
mov
das
data16
adc
in
outsb
mull
push
mov
out
enter
jge
jge
in
pop
scas
enter
jns
insb
fdivl
fwait
xlat
mov
mov
jmp
sub
addl
and
inc
scas
rol
mov
loope
fldenv
rcrb
es
mov
sbb
mov
add
out
daa
push
dec
cmp
dec
fldt
aam
aad
fsubrs
adc
jb
ss
jp
lahf
movsl
xchg
push
out
xor
je
arpl
fbstp
lea
inc
xchg
inc
dec
and
pop
stc
xor
lcall
shl
cmp
jne
mov
xlat
adc
adc
adc
popa
sub
sahf
mov
enter
lahf
sub
push
sbb
test
pop
icebp
out
xor
mov
cmp
adc
loope
mov
or
cmp
add
push
cmp
push
lea
clc
int
push
cmpsl
pusha
cmp
add
roll
push
and
leave
push
adc
cmp
inc
into
subl
stos
data16
into
stos
xchg
pop
mov
adc
cs
lret
mov
dec
xchg
or
jmp
and
gs
iret
cmp
outsb
jmp
sbb
std
rcrl
sbb
or
bound
out
add
cmpsb
adc
mov
inc
std
dec
cltd
inc
cwtl
mov
add
data16
sti
ret
andb
cltd
pop
xchg
add
dec
movsb
and
rcl
test
xor
xor
lods
loope
jb
mov
lock
dec
aaa
not
xchg
je
mov
adc
stos
aam
xor
adc
sub
xor
in
jge
jo
cmp
jl
loope
jl
insl
fneni(8087
dec
mov
cltd
in
dec
xor
subl
pop
cwtl
adc
adcl
push
lods
loop
xor
in
add
sub
mov
pusha
sub
test
lds
loopne
lock
dec
in
or
adc
mov
mov
pop
mov
jmp
push
pop
jae
pusha
imul
fbld
rcll
adc
dec
incl
adc
int
cwtl
jl
subb
jge
loop
inc
dec
aaa
push
hlt
pop
lea
movsl
xor
ret
pop
add
imul
sbbl
insb
adc
add
jmp
rolb
nop
adc
add
test
or
sbb
fstps
ror
jbe
sti
xacquire
xchg
cli
and
fiadds
lea
push
orl
add
push
or
mov
mov
out
les
aad
cmp
aaa
aaa
pop
es
int3
push
insb
fcoms
dec
es
sub
lret
add
pop
int3
cltd
popf
dec
sub
sub
mov
push
aad
sbb
push
bound
clc
mov
pop
lea
je
pusha
mull
adc
mov
lret
push
add
xchg
lods
inc
mov
push
test
sub
xor
xchg
cwtl
cli
stc
mov
nop
xchg
mov
xor
inc
push
add
stos
ja
dec
nop
fildll
imul
iret
sub
push
xchg
lds
call
push
cmc
cli
mov
out
in
lds
pop
jo
xor
inc
iret
and
xor
enter
fmulp
mov
cld
jecxz
aam
pop
xchg
cmp
in
mov
dec
repnz
fucomip
sbb
cmp
insl
or
jge
adc
cmp
adc
inc
aas
add
sub
sub
loop
or
cmp
push
icebp
call
or
push
std
inc
xchg
mov
adc
inc
repnz
mov
fmuls
nop
lret
pusha
pop
cmp
testl
out
pop
adcl
lret
jmp
fadd
pop
or
orl
movsb
mov
xor
sti
aam
roll
jp
int3
push
shll
scas
scas
je
inc
cwtl
in
enter
das
fisubs
icebp
jmp
mov
ftst
cltd
mov
xor
or
xchg
aad
inc
out
inc
fldt
int
sub
sar
push
or
cmp
sub
mov
clc
cltd
pop
jmp
fsubs
jl
inc
pop
loop
or
xchg
insl
int
ret
aas
jnp
inc
push
popf
test
jno
sbb
lods
push
sub
std
les
dec
and
cmpsb
pop
jb
mov
pop
xor
loopne
mov
lcall
pusha
mov
daa
popf
test
pop
cmp
shll
sbb
pcmpeqw
push
stc
inc
adc
sbb
jno
jbe
ret
adc
jmp
dec
sub
es
gs
inc
lret
mov
sub
addr16
pop
jno
dec
fmul
in
in
jnp
aad
cmp
dec
repz
cwtl
test
std
dec
jno
xor
fisubrs
jnp
popa
push
cli
les
insb
movsl
repnz
enter
lds
fcmovbe
push
jle
adc
popf
jp
xor
data16
subl
push
mov
test
das
and
les
jmp
jecxz
loopne
rcll
mov
pop
xchg
popa
outsl
jle
mov
jmp
addr16
cmpsb
adc
insl
dec
inc
insl
mov
fisubrl
aam
cltd
jp
xor
pop
xor
pop
mov
xchg
mov
out
mov
dec
mov
rorl
mov
notb
and
inc
shl
es
add
inc
shlb
sbb
xchg
in
inc
cmp
jb
stc
mov
mov
inc
pop
loope
dec
jmp
jo
jno
das
sbb
add
and
lcall
sti
cwtl
and
inc
leave
or
inc
fstpt
les
add
push
add
xor
mov
add
fmull
mov
inc
xor
push
imul
in
mov
or
cmpsl
xchg
xchg
jl
std
fnsave
jnp
add
scas
shr
shrb
faddl
xchg
mov
pop
add
adc
rorb
adc
mov
xlat
arpl
daa
cwtl
shlb
insb
jmp
pusha
test
xchg
mov
clc
sub
push
dec
sti
test
and
iret
sub
mov
fptan
fcoml
scas
mov
cmp
fwait
mov
scas
mov
mov
dec
mov
xor
dec
mov
add
jp
mov
pop
adc
mov
loope
jl
loopne
and
push
cmp
icebp
iret
cwtl
outsl
loope
ss
push
pushf
mov
je
outsb
jmp
cmp
dec
xchg
int3
adc
std
std
outsl
mov
shrb
add
xchg
cmc
push
pop
xchg
jl
test
aam
sti
adc
in
pop
mov
jae
pushf
cltd
sbb
test
jo
inc
pop
test
inc
jle
adc
push
imul
aad
inc
cmp
xchg
stc
adc
jb
sub
aad
pop
mov
mov
inc
sbb
cld
mov
jne
cli
xchg
mulb
fistpl
pop
popa
lods
pop
jecxz
jp
fistpl
mov
mov
jg
add
nop
xor
inc
std
jnp
int3
mov
pop
icebp
dec
adc
gs
cmp
lock
jp
mov
jmp
cmp
and
roll
jg
jg
mov
inc
int3
test
cwtl
mov
out
adc
fisubl
repz
ret
ror
xchg
popf
jecxz
add
push
push
sar
sarl
stos
pop
or
xlat
pop
in
jge
repnz
mov
adc
push
cld
lock
add
xor
sub
aaa
push
fiadds
cwtl
adc
add
jmp
jbe
cmp
jae
test
sahf
push
inc
add
and
ret
sti
and
jnp
imul
int3
stos
push
pop
iret
cmp
mov
xchg
push
jmp
mov
sbb
xchg
mov
rorb
push
dec
cli
fsubs
or
fldl
and
mov
cld
mov
gs
stos
ljmp
push
xor
jno,pt
movsl
mov
adcl
pop
aam
mov
push
test
es
fmuls
xor
mov
pop
inc
cmp
pop
hlt
mov
in
movsl
negl
or
and
pop
and
jl
cmp
add
cmpsl
pop
jge
bswap
push
in
push
jle
mov
xor
lahf
adc
cmp
addr16
scas
push
mov
stos
jb
jo
gs
mov
fisubs
push
mov
inc
mov
ret
push
sahf
fsts
fidivs
enter
mov
pop
and
add
lret
xchg
adc
fidivl
out
in
idivb
jle
mov
shll
test
fildl
lods
xchg
mov
xchg
fistl
aad
xor
mov
cmp
fimull
enter
xorl
push
inc
and
cwtl
mov
and
ss
das
inc
push
mulb
push
mov
jbe
shlb
out
and
test
sbb
push
fsubrs
out
aas
lods
es
fwait
cmc
mov
or
xor
ljmp
loop
mov
dec
fcmovnb
adc
repnz
cmp
cmc
sub
mov
mov
stc
add
out
or
xchg
aaa
xchg
sarl
inc
cmp
add
xor
loope
pop
sbb
lods
jno
rcll
imul
add
mov
lods
inc
pop
subb
or
dec
loop
lahf
xor
xchg
stos
xchg
lcall
cmp
pop
sbb
mull
lea
imul
adc
mov
test
cmpsl
cmp
fsubs
inc
inc
lahf
xchg
js
test
or
mov
rolb
add
movsl
mov
test
mov
push
mov
add
sbb
mull
sub
sbb
cmp
jge
xorb
sar
xchg
xchg
mov
cmpsl
stos
xchg
stos
in
imull
mov
adc
dec
sti
pop
outsl
rcll
cltd
call
add
movsl
test
jp
add
sub
aam
mov
jno
xchg
pop
push
andl
jo
nop
jno
dec
mov
mov
sub
mov
decl
insw
sub
in
imul
xchg
sub
pop
add
test
pop
fs
out
jge
cmpsb
xlat
jp
aas
sub
add
pop
sbb
xchg
gs
mov
stc
hlt
push
push
int3
cwtl
lret
push
lret
xchg
push
out
mov
out
lcall
cmp
outsb
mov
test
adc
imul
les
loop
cs
adc
cmp
ret
dec
scas
scas
push
jecxz
mov
jmp
mov
pop
je
push
push
or
inc
in
xchg
or
aas
mov
es
dec
dec
or
int
rcll
cmc
sbb
inc
pop
data16
fwait
dec
shlb
mov
aad
pushl
add
add
adc
scas
mov
lock
pushl
adc
not
loope
movsb
inc
sti
mov
or
es
xchg
xchg
mov
sbb
sub
lock
hlt
cmpsb
mov
scas
test
ss
mov
adc
xchg
sbb
or
cmp
setg
xor
jl
out
cld
fnsetpm(287
mov
imul
and
repz
cmpsl
lds
jl
in
pushf
xchg
fidivs
mov
repnz
mov
mov
xchg
cmpsb
js
xchg
das
inc
add
mov
or
push
xor
mov
mov
divl
xchg
shlb
arpl
lea
mov
fneni(8087
ret
test
shrb
nop
repnz
pushw
mov
jge
xor
pop
fwait
clc
test
xor
jns
cmp
sub
sarb
das
call
into
jg
lahf
xor
xor
pop
seta
inc
xchg
add
inc
aaa
dec
dec
mov
mov
lods
push
pushf
insb
test
in
adc
js
leave
ret
add
test
jb
int3
push
mov
in
ds
rcrb
pop
push
roll
filds
inc
out
inc
mov
mov
mov
mov
nop
fwait
jecxz
inc
daa
sbb
xchg
add
xor
cmp
sbb
jns
dec
cmp
and
dec
pop
mov
popl
daa
lret
sub
das
fnstcw
scas
mov
jmp
roll
xor
mov
sbb
fisubrl
cmpsl
inc
mov
out
movsl
inc
fld
push
adc
add
adc
adc
pop
cmpl
scas
lods
ljmp
aad
mov
cmc
jp
add
inc
arpl
sub
xor
xchg
mov
pushw
int3
mov
push
sbb
xchg
imul
insl
aam
inc
testb
cmp
xchg
popf
ret
pop
lret
int3
dec
mov
sti
dec
adc
pop
aas
pandn
mov
jnp
adc
adc
fdivl
call
or
imul
pop
adc
jnp
or
test
test
filds
sub
popf
outsb
jecxz
lods
push
sub
daa
insl
loop
sub
sbb
mov
cli
pop
jg
gs
pop
xor
popa
mov
mov
aam
cs
lcall
sbb
popa
cwtl
add
mov
jge
aaa
repnz
imulb
repz
sub
jg
stc
sahf
dec
enter
and
add
jmp
bnd
add
lret
xchg
mov
ss
nop
adc
jmp
ret
and
idivl
sbb
test
std
fsubs
fbld
in
mov
pop
xlat
pmuludq
sahf
cmpsb
jecxz
jg
jecxz
sub
xchg
fistps
xchg
and
mulb
jp
sub
in
pop
out
scas
mov
lea
add
in
mov
imul
pop
push
bound
sar
rolb
mull
pop
scas
stos
in
jbe
ror
jne
test
xor
and
and
pop
pop
sbb
pop
mov
in
add
push
je
cmp
mov
daa
loopne
inc
dec
out
daa
push
pop
das
int
adc
mov
jle
pop
lahf
cltd
fcompl
add
fsubrs
fs
pop
jmp
push
sub
lret
daa
repz
jns
xchg
shll
imul
xor
adc
and
jbe
stos
jmp
adc
fwait
mov
push
jg
sub
lret
mov
jo
lds
dec
sahf
stc
xor
pop
or
call
das
int3
std
inc
mov
push
inc
insl
popa
inc
bound
fstpl
sbb
jno
andl
pusha
add
rolb
adc
jecxz
mov
and
mov
jbe
in
push
int3
cmp
aas
dec
orl
pushl
setl
arpl
cmpsl
popa
pushf
into
pop
in
test
loope
outsb
repnz
jmp
stc
lret
out
sub
lret
outsb
stos
and
xlat
faddl
aad
mov
sub
adc
add
push
imul
add
sahf
push
out
pop
push
test
movb
push
or
lods
xor
orb
repz
or
jae
mov
xor
cmpl
push
and
inc
sbb
inc
dec
in
mov
aas
mov
cmp
sbb
add
int
inc
cmc
cmp
decl
ds
pop
imul
pop
loopne
mov
leave
xor
xchg
mov
add
dec
or
lret
test
pushf
mov
leave
push
js
out
xchg
and
fsubrl
mov
dec
test
dec
mov
inc
adc
inc
xor
cmp
out
pop
xor
sbb
stos
mov
mov
outsb
roll
scas
jnp
jno
mov
cs
jle
test
adc
out
add
mov
xchg
sti
shlb
sbb
pop
dec
or
mov
js
xorl
lods
scas
out
fists
hlt
push
dec
inc
das
das
push
dec
out
enter
adc
shrb
dec
cmp
sub
rol
cmp
faddl
xchg
lea
pop
push
xlat
nop
pop
inc
mov
js
dec
fsubrl
pop
gs
sbb
push
sub
mov
pop
ret
outsb
daa
lcall
neg
sbbl
outsb
and
ss
call
daa
push
sub
punpckhbw
inc
jge
inc
jmp
imul
mov
jo
dec
call
popa
pop
lret
mov
add
fyl2xp1
mov
imul
jns
xorb
ds
pop
mov
lret
cmp
lcall
jo,pt
lds
je
xorb
dec
cs
jns
iret
or
lahf
sub
loop
xor
test
inc
sarb
inc
ret
lcall
es
dec
adc
adc
mov
arpl
pop
frstor
lods
bound
fdivrp
sti
mov
stos
sbb
push
pop
movsb
dec
sub
rorl
test
ds
dec
xor
adc
and
xor
adc
jmp
cmp
push
mov
aad
add
pop
test
fwait
and
inc
call
inc
sbb
inc
dec
sub
inc
or
cwtl
pusha
icebp
push
add
add
cmp
or
sbb
and
mov
xchg
cmc
sbb
dec
dec
fwait
pop
insl
fucomp
jns
divl
or
xchg
movsl
mov
push
ljmp
sub
sub
addb
imul
dec
jp
imul
jnp
xor
ret
mov
inc
jnp
inc
les
out
jns
insl
nop
sbb
out
imul
mov
mov
out
and
push
stc
js
fisubrl
pop
out
leave
int
loopne
push
and
lock
inc
xchg
and
cmpsb
cmp
jg
mov
jno
in
xchg
and
xchg
or
sarb
shl
mov
mov
movsb
jmp
pop
lods
in
sbb
and
jbe
or
pop
loop
sub
popa
cmp
push
mov
xlat
fstp
ret
xchg
pop
shl
mov
fwait
xchg
and
xchg
add
out
gs
push
and
shrb
shrd
xchg
ja
les
adcl
leave
cmpb
les
mov
arpl
loopne
push
cmp
lcall
dec
and
mov
arpl
stos
xor
out
sub
cmpb
int
jo
or
sub
enter
jmp
subb
cmpsl
and
fs
mov
call
das
cmp
jne
out
fs
push
pop
aas
cld
iret
aam
cmp
mov
mov
or
addb
fisubrl
loopne
pop
pop
jmp
lret
xor
mov
outsl
test
outsb
std
push
pusha
cli
lret
sub
pushf
repz
or
int3
andl
popf
fs
and
jb
lods
xor
sub
mov
mov
push
mov
div
lcall
mov
mov
mov
pop
lret
mov
in
mov
cmp
dec
xchg
add
jmp
pop
dec
jmp
pop
mov
jo
into
rorl
add
loope
xor
inc
xchg
je
xor
adc
mov
cmc
pop
lcall
aaa
ljmp
sar
daa
pop
hlt
inc
mov
loop
stc
pop
push
sbb
or
movsb
aaa
pushf
cmp
sahf
xor
rorb
add
out
or
cmc
mov
add
fnop
xchg
jmp
js
add
out
clc
mov
adc
out
pop
enter
out
cmc
add
sarb
imul
and
dec
mov
sub
jno
sub
hlt
inc
outsb
stos
js
pop
inc
mov
push
adc
lock
inc
test
cmpsb
inc
or
or
rorb
pop
mov
cmp
dec
negl
cmp
ret
outsl
call
rol
js
pop
cmp
push
inc
mov
ret
popf
push
mov
outsl
arpl
push
out
test
repnz
daa
negb
in
data16
mov
das
push
cmp
jmp
addr16
cmp
in
cmp
sarl
pop
sub
popf
fidivs
mov
sbb
sub
lea
test
dec
jns
daa
cltd
scas
jmp
addr16
insl
lahf
out
dec
and
sbb
adc
test
sub
test
mov
js
dec
pop
clc
add
xchg
dec
sbb
pop
add
dec
inc
imul
cwtl
pop
pop
mov
into
dec
or
jl
jbe
shr
popa
jg
or
sbb
dec
pop
fmull
aaa
inc
jno
add
lds
aad
repnz
sbb
adc
in
and
fildl
insl
scas
xor
dec
inc
cmp
push
data16
rorb
push
std
jmp
cmpsb
xchg
nop
scas
jmp
gs
jmp
sub
repnz
adc
sbb
sub
dec
cmp
aam
leave
mov
pcmpgtw
sbb
xor
jae
jl
or
rcpps
sbbl
dec
pop
jge
sub
dec
xor
dec
push
sti
jecxz
orb
ret
add
arpl
bound
adcb
push
fsub
adc
cmc
or
xchg
xchg
test
iret
mov
popfw
out
dec
pusha
jno
jmp
aam
loope
out
sahf
xchg
out
add
loopne
jbe
sbb
add
shlb
popf
xor
xchg
jnp
leave
pop
fcomi
add
lret
pushf
push
mov
fwait
push
cmp
dec
rorb
les
clc
and
leave
mov
mov
aam
mull
sub
inc
filds
ss
sub
lret
popf
mov
jmp
pop
jne
sub
push
bound
cltd
pop
pop
xor
sub
sbb
mov
ja
aas
call
push
push
jg
imulb
pop
lods
inc
add
add
sbb
cmp
sub
bound
insb
daa
imul
stos
shl
adc
pop
clc
lcall
sbb
into
mov
scas
mov
imul
inc
loop
pop
inc
dec
dec
icebp
adc
inc
popa
add
test
inc
nop
cmp
das
jae
mov
adc
push
insl
rorb
shrb
sbbl
mov
les
dec
dec
xor
mov
mov
add
fcmovbe
push
lcall
jge
xor
es
mov
adc
out
mov
andb
stc
jmp
jecxz
dec
sub
sbb
out
xchg
mov
pop
rcl
pop
cli
jge
int
xor
lods
jmp
mov
rcr
dec
mov
frstor
cwtl
and
adc
call
and
je
cwtl
shll
out
dec
add
dec
scas
lea
sub
fwait
sti
adc
xor
ret
inc
pop
adc
push
inc
shlb
push
xchg
pusha
sbb
subl
add
rolb
mov
xchg
incb
lret
mov
movsl
in
pop
sbb
pop
mov
and
push
xchg
fwait
jae
or
sbb
std
shr
push
testb
adc
adc
lret
cmc
dec
jmp
mov
cmp
sub
inc
roll
mov
lcall
jns
xchg
aaa
cwtl
fildll
cmpsb
sub
push
popf
or
xchg
mov
pop
sbb
push
in
sbb
fstps
jge
out
data16
cli
push
rcll
out
insl
mov
sbb
mov
js
aas
pop
lds
xchg
xchg
jne
jl
xchg
inc
stos
cli
push
mov
or
notb
pop
xor
inc
mov
jp
cmp
in
fildl
fcmovu
adc
xor
mov
xchg
cmovno
outsb
test
xchg
popf
mov
add
inc
adc
enter
and
pop
push
mov
add
pop
jno
mov
sahf
addr16
mov
cmp
insl
popf
jmp
pop
jg
cmpsl
sbb
out
sti
mov
loopne
icebp
jmp
shll
pushf
push
fistps
pop
sub
push
decb
push
ret
aaa
inc
movb
ret
gs
pop
and
sub
adcb
sbb
shll
xchg
cmpsl
test
jge
lods
jg
lods
dec
ficompl
xchg
mov
insb
enter
fildl
dec
or
mov
aam
pop
sub
lods
push
leave
fcoms
xchg
test
lret
push
out
insb
cmp
mov
jge
jbe
add
push
cmp
dec
repz
xchg
jmp
pop
add
cs
sub
xchg
test
shl
call
aad
ljmp
pop
mov
gs
xorb
lods
aam
fwait
xchg
mov
jbe
mov
push
testl
cld
orb
out
cmpsb
loop
inc
out
lret
inc
adc
xor
addr16
and
pop
lds
add
sahf
adc
and
add
add
push
and
sbb
cmp
xor
stc
sub
mov
sbb
mov
mov
clc
xor
fs
in
dec
mov
push
and
iret
sbb
imul
push
out
xor
in
adc
insb
fisttpl
lret
daa
ret
cs
nop
scas
dec
je
stos
add
push
repnz
push
push
lret
ss
add
ret
das
mov
sbb
imul
inc
add
mov
xor
arpl
in
xchg
inc
pop
and
push
cmovl
movsl
jnp
imul
cli
push
hlt
xor
enter
lods
mov
or
daa
cmp
into
repz
jmp
popa
xchg
push
int
outsb
ljmp
shlb
insb
push
out
sbb
popf
outsl
jo,pt
mov
pop
adc
pop
aaa
lea
fsubl
loop
fs
adc
push
ret
cmp
push
lods
sti
push
roll
lret
jp
jns
repz
fdivl
xor
mov
xor
xor
ja
adc
fiaddl
and
in
and
pop
pop
loopne
mov
cmp
popl
jge
loop
pop
sbb
sub
jmp
sub
and
jnp
sbb
addr16
cmc
mov
aaa
cmc
adc
push
pop
fstl
sbb
add
adc
in
dec
fdivl
addr16
call
add
stos
mov
mov
pop
pop
dec
pop
or
cli
jbe
daa
sbb
shlb
cmpsb
jge
mov
iret
dec
mov
lea
dec
xchg
fwait
dec
popf
aas
orl
loopne
mov
data16
mov
testl
mov
jno
stc
in
std
fistpll
and
aaa
mov
sbb
push
jp
push
insb
cltd
pop
adc
insb
mov
rcrl
test
outsl
into
inc
lea
add
xchg
jmp
popf
mov
lcall
in
xchg
xor
push
mov
jg
cmp
mov
jle
jns
or
sbb
add
outsb
iret
push
jb
call
adc
mov
sti
dec
fwait
int3
sahf
outsl
pop
sub
leave
jmp
xchg
dec
lock
rclb
cmp
mov
je
adc
mov
outsb
pop
xchg
popa
rcll
add
les
cmp
pusha
push
fistpl
add
or
das
xchg
std
loopne
aaa
sar
or
mov
into
pop
jnp
sbb
sbb
add
jae
pusha
mov
sub
daa
lret
leave
ja
cmp
mov
mov
sbb
movsl
xlat
inc
add
cmp
loope
adc
aas
stos
pop
fimull
cmp
or
dec
cmp
inc
xchg
xchg
js
push
out
and
pop
in
outsl
sub
xor
or
into
sbb
in
repnz
outsb
adc
cltd
mov
push
lret
js
cmp
es
cmp
dec
cli
sub
movsl
aaa
jmp
sub
pop
and
add
lahf
xchg
jbe
dec
xchg
aaa
and
inc
icebp
pop
out
sub
pop
mov
in
popa
popa
jmp
lods
and
ds
out
sbb
push
fbstp
pop
std
fstpt
cmc
icebp
sub
in
fistps
loop
mov
pop
jno
xor
dec
pop
inc
cmpsl
sbb
mov
sbb
inc
test
imul
push
xor
repnz
mov
popa
xchg
repz
xor
xor
int
frstor
dec
movsl
mov
cli
inc
enter
mov
adc
xorl
sbb
insl
add
push
popa
jp
pminsw
cmp
pushf
stos
lcall
push
shlb
ss
adc
cmc
pop
cwtl
movsl
mov
and
push
loopne
in
enter
call
sbb
xlat
std
push
loope
sub
mov
dec
sbb
shl
fadd
jge
aam
roll
je
fwait
lcall
push
in
mov
jp
inc
popa
jecxz
push
daa
dec
inc
adc
outsl
mov
mov
cmp
mov
sarl
imul
data16
jno
xor
xor
fmulp
in
and
xchg
fcom
cld
fistps
or
mov
test
jl
mov
mov
sub
push
adcl
movsb
jb
lock
in
out
enter
xchg
fmull
test
repz
or
mov
sub
inc
je
sbb
hlt
pop
roll
fimull
pop
sub
nop
jno
movsb
and
adc
les
cs
inc
push
sub
push
inc
test
or
je
or
imul
xlat
movsb
jmp
mov
loope
inc
push
dec
aad
xor
mov
nop
dec
scas
js
mov
adc
in
test
out
push
xchg
enter
and
cwtl
cmpsl
sub
and
push
frstor
test
insl
call
sbb
stc
aad
negb
loopne
mov
mov
pop
inc
xor
mov
js
push
fsts
pop
lcall
push
or
fmuls
push
and
xchg
xlat
outsl
mov
jno
cmpsb
xor
jbe
out
jo
mov
cmpsb
andl
pop
mov
aas
ljmp
xorb
les
or
fs
mul
cmp
mov
in
and
mov
data16
cmpsl
add
pop
ret
or
out
xor
mov
aaa
sti
pop
push
push
loopne
push
and
sti
test
lahf
pop
add
lret
shr
cmpsl
or
jae
sar
sub
fs
ljmp
inc
mov
cmp
inc
int3
jne
int
push
sub
jbe
xchg
shl
cmp
dec
push
xchg
jns
push
add
dec
lcall
xlat
jg
scas
repz
pusha
fsub
mov
xchg
cltd
mov
aas
or
stc
outsb
call
xor
cmpsb
rorl
leave
fs
rorl
rclb
scas
adcb
mov
mov
out
stos
jl
je
xor
jge
xchg
imul
clc
sarl
imul
push
xor
fbld
sbb
jmp
inc
push
lds
push
orps
cwtl
cmpsl
add
stos
bound
sub
jp
repz
repz
adc
out
and
iret
xchg
push
popa
cwtl
inc
bound
popa
loopne
aam
dec
movsl
stc
xchg
push
push
lea
push
cltd
popf
dec
push
stos
inc
outsl
movsb
mov
or
js
xchg
and
ja
cmp
test
cmc
stos
lcall
icebp
cmp
sub
fmuls
sbb
mov
adc
add
clc
in
cld
insl
hlt
aad
outsb
jmp
jb
rorl
shl
adc
xor
mov
pop
push
pandn
daa
xchg
dec
sub
inc
lret
ss
xchg
mov
xchg
adc
mov
shll
xlat
out
mov
dec
cli
push
inc
test
push
sub
push
bound
mov
cltd
pop
repnz
push
fisubrl
scas
push
adc
lahf
dec
cltd
ret
lods
mul
mov
cmp
mov
push
xor
mov
bound
and
push
addl
jns
mov
cmpsb
adc
sahf
int3
jmp
xchg
sub
fisubl
dec
out
test
mov
cmp
and
repz
dec
jns
addr16
shll
mov
lock
mov
cmpsl
cwtl
push
push
jg
and
test
rcll
fimull
add
in
test
mov
or
lods
xor
stos
lcall
inc
clc
jg
ljmp
inc
inc
gs
xchg
hlt
sbbb
xchg
rolb
add
pop
jbe
mov
scas
add
push
xchg
adc
jmp
mov
loopne
mov
push
add
imul
out
in
outsl
fldt
into
and
pop
mov
jns
mov
push
sbb
int
ds
and
jecxz
gs
mov
jge
pop
imul
shrl
in
push
adc
jmp
cld
pop
dec
xchg
xor
mov
add
pusha
mov
idivb
sbb
dec
inc
mov
cmp
stos
xor
into
ret
adc
les
dec
bound
push
pop
fidivl
jo,pn
andb
ss
dec
dec
jo
in
dec
dec
xchg
cmp
daa
jg
test
dec
movsl
repnz
dec
xor
sub
pop
cld
or
cmpsl
pop
fmuls
jns
mov
jp
rclb
pushf
xor
testb
scas
lcall
sbb
loope
push
in
dec
mov
jg
mov
cwtl
mov
sbb
mov
mov
js
xchg
adcl
pop
int
or
mov
mov
xor
fwait
xlat
and
sbb
push
mov
push
and
xor
adc
and
mov
jbe
icebp
fsubrs
lods
lret
bound
pop
add
ret
fisubrs
and
mov
loope
mov
lcall
cmp
inc
sbb
lahf
cmp
out
mov
repnz
mov
punpcklwd
popf
mov
dec
or
pop
inc
rol
inc
jl
xor
lock
mov
xchg
push
mov
dec
xchg
hlt
data16
dec
loopne
xchg
js
inc
ret
inc
cs
inc
xchg
into
fsubrl
fwait
cmp
adc
imulb
xchg
arpl
mov
aaa
mov
jg
mov
mov
jge
or
pop
in
leave
sbb
xor
sbb
mov
jns
sbb
repz
xchg
shll
rolb
imul
and
stos
mov
sbb
addr16
sbb
std
dec
sub
je
mov
inc
mov
shll
clc
fnsave
in
fstp
jecxz
jge
jl
stos
sub
or
xor
xor
mov
or
mov
addl
add
dec
cmp
adc
push
cmp
jo
shrl
test
and
out
inc
loop
lret
fisubl
fst
shrl
jae
jo
enter
stc
pushf
fs
outsl
jbe
test
out
pop
sbbb
xchg
into
insb
shrb
push
jg
push
psubw
aaa
push
bound
ja
ficompl
adc
dec
jp
pop
sub
call
inc
mov
xor
lods
scas
ficoms
or
decl
ficoml
lret
lret
add
jecxz
insb
sbb
push
or
push
clc
sub
aaa
cmp
push
mov
xor
daa
mov
xchg
ret
lods
loope
and
daa
pop
loope
mov
ds
sbb
push
fadds
pop
mov
mov
pop
sbb
adc
cmp
aas
inc
jg
jmp
cmpl
dec
mov
mov
cmp
stos
sub
pop
and
xchg
divl
lods
adc
lds
cmp
fisubrl
sarl
or
push
or
or
arpl
mov
stos
sbb
mov
lret
xchg
out
aam
rorb
sub
dec
mov
out
jno
rcll
mov
add
ljmp
xor
xor
push
int3
ss
pop
mov
icebp
or
xor
inc
ljmp
mov
repz
pop
int
cmp
stc
cmp
and
pushf
inc
inc
leave
adc
adc
pusha
xchg
insb
jno
dec
out
bound
test
shlb
in
std
negl
push
mov
push
fidivrl
aad
repz
and
mov
in
ja
outsl
mov
xchg
lods
cmp
inc
sub
loopne
and
cmpb
aad
mov
loop
lods
jns
call
push
jg
call
xor
dec
jb
bnd
pmaxsw
clc
adc
add
rcrl
loope
ds
notb
pop
adc
ds
mov
jmp
xchg
xor
xor
sub
mov
mov
push
inc
out
cmp
mov
inc
test
xchg
call
xor
cmp
fsubl
pusha
repnz
dec
xorb
rorl
cs
daa
subl
mov
in
fwait
cs
dec
stos
adc
scas
or
cmpsb
out
mov
or
xor
mov
lock
fs
lods
jnp
xor
push
mov
pop
mov
aad
cmc
cmc
cmc
arpl
icebp
jno
cmp
imul
sbb
push
mov
push
sub
ja
push
add
lea
mov
mov
xchg
test
sub
mov
es
out
jne
cmp
or
rcr
imul
xchg
fmuls
xchg
mov
xor
lret
popf
xor
js
adc
xor
jge
enter
clc
jno
lcall
mov
das
and
push
xor
incl
mov
cmp
insb
dec
mov
mov
daa
inc
push
gs
mov
xor
fdivrl
dec
insl
adc
adc
ret
inc
pop
lock
jge
and
aad
arpl
add
popa
es
ljmp
sti
pop
push
add
cmp
icebp
xor
into
dec
push
sbb
cld
cmc
pusha
test
repnz
sti
adc
call
push
addr16
sarl
xchg
lahf
xor
sarb
sbb
push
pop
and
loope
xchg
fcomps
add
mov
daa
cld
fs
adc
jno
inc
add
pop
enter
mov
pop
push
mov
call
pop
repz
xchg
mov
lods
test
xor
jbe
add
adc
mov
sub
cltd
daa
adc
push
or
shrl
adc
clc
jnp
fsubrs
xor
xchg
mov
xor
mov
out
pop
xchg
shr
test
pushf
into
outsl
add
enter
stc
pop
arpl
into
lds
mov
dec
or
or
out
call
jle
push
ret
out
pop
jns
out
pop
push
and
inc
jbe
dec
addr16
aam
sbb
dec
imul
jle
das
fidivrs
in
mov
jp
and
mov
enter
dec
repnz
and
pop
xor
test
and
ret
jae
push
int3
aad
or
jmp
in
loopne
js
inc
hlt
add
dec
std
sahf
fstpt
lods
ret
test
inc
sysexit
jno
outsb
cmp
xchg
cmp
or
or
cmp
int
loope
loop,pn
fisttpl
or
push
shl
or
dec
fwait
adc
xor
fxam
xlat
sub
sbb
push
lock
xchg
push
sbb
into
outsl
push
adc
jno
ret
jns
xchg
inc
mov
lcall
push
movsl
shrb
mov
jp
stos
xchg
out
ss
sarl
dec
test
pop
ja
out
adc
fcompl
lea
mov
mov
test
mov
jbe
mov
xor
sbb
jge
fcoml
fcoml
adc
dec
or
aad
aam
lret
or
js
xchg
or
cmpsl
adcb
dec
pop
ret
sub
push
hlt
flds
mov
jg
lahf
mov
cmp
pop
xchg
out
enter
pop
inc
and
mov
cmp
fisubl
cmp
leave
mov
movsb
repz
movsb
fstpl
lock
pop
shl
stc
xchg
data16
mov
int3
sub
jo
lds
dec
daa
mov
jmp
repz
cli
mov
xchg
sahf
rcll
mov
ja
and
sbb
popf
cmpsb
cmpsl
add
fcomip
pop
stos
or
jnp
popf
mov
add
mov
mov
mov
fcomps
add
ja
je
icebp
and
cmp
mov
jne
cltd
sbb
mov
insl
inc
test
pop
cmpsb
inc
rorb
das
dec
sbb
xor
shlb
ds
loope
aas
xlat
pushf
sbb
sub
jno
pop
inc
adc
xchg
pop
rorl
mov
jecxz
out
mov
lfs
mov
adc
inc
dec
fabs
mov
je
add
push
xchg
sub
popl
xchg
fnstsw
jns
mov
ss
jge
in
dec
jp
lea
mov
pop
aaa
mov
cli
call
push
cs
adc
hlt
pop
repz
sbb
xchg
sbb
pop
adc
outsb
mov
cld
loop
xchg
fdivrl
inc
push
or
inc
lret
adc
mov
jbe
cmpsl
xchg
mov
adc
add
mov
cmpsb
stos
pop
xchg
pop
inc
sbb
jge
cmc
dec
pop
pop
dec
outsb
and
ror
mov
dec
sbb
int
in
lods
or
or
cmp
pop
sub
mov
inc
push
mov
dec
dec
setbe
pop
fildll
fs
stc
or
movsl
sub
pop
lcall
in
sarb
ss
bswap
aam
outsb
ret
push
mov
mov
cmc
gs
or
jge
jne
test
dec
jecxz
cmp
and
inc
inc
pop
test
jbe
push
cmp
and
push
jmp
testl
push
je
hlt
or
mov
mov
lret
hlt
xchg
sub
in
je
dec
inc
pop
jecxz
xchg
std
xchg
int3
pop
push
xor
repz
inc
xor
out
ficoms
inc
fdivrl
cmp
sbb
mov
cli
add
arpl
xchg
gs
add
or
leave
fwait
in
jne
xchg
aam
out
dec
mov
or
mov
loope
mov
mov
lods
lock
dec
xchg
mov
xor
rorl
sub
mov
xlat
mov
movsl
and
pop
cmp
movsl
pop
cli
cmc
sbb
add
arpl
test
movb
push
sahf
pop
orb
add
adc
xchg
std
inc
rclb
and
lea
and
and
andb
xchg
xor
sub
jl
lds
out
or
push
pop
sub
and
in
rorl
jl
pusha
movsb
scas
jg
addl
jge
xor
insl
cmc
xor
xchg
mov
add
mov
lods
stc
pop
sbb
adc
outsl
cmc
push
cmp
and
andl
pusha
lahf
mov
cmpsl
xor
push
enter
mov
jne
mov
jmp
aam
testb
lahf
arpl
stc
xor
xchg
pop
and
imul
push
cld
cmp
ds
xchg
scas
add
outsl
jl
pop
pop
fs
push
cmpsl
out
jl
daa
nop
xorb
sub
in
cmpsl
push
jnp
inc
push
out
in
pop
stos
cmc
inc
or
jb
mov
lret
xchg
test
repnz
pop
mov
iret
cli
int3
es
arpl
pop
xchg
jns
mov
scas
mov
jmp
imul
mov
cmp
mov
gs
inc
stc
push
imull
fwait
mov
fstl
pop
shll
cs
lock
loope
and
pop
fistpl
push
pop
ret
ja
cmp
cld
mov
inc
xchg
out
in
and
fldcw
or
clc
outsb
popf
test
sarb
push
xchg
inc
pop
adc
xchg
pusha
pop
mov
lds
repz
ds
les
mov
cmp
jl
repz
adc
repz
ss
jb
fwait
or
adc
icebp
in
pop
mov
test
bound
movsl
popa
repz
es
jl
pushl
sbb
js
or
out
xor
in
fcoml
pusha
sbb
rcrl
ret
adc
dec
pop
pop
cmpsl
mov
pop
add
stc
push
jb
add
repnz
inc
jle
push
clc
repz
movsl
cs
popa
and
enter
fcmovbe
xor
mov
lds
cwtl
xchg
filds
lods
pop
shrl
cmp
mov
cltd
add
popf
and
shrb
jne
out
inc
test
out
and
das
xchg
inc
xchg
push
pop
sbb
insb
movsb
sti
sub
add
push
mov
xchg
xor
outsb
xor
shl
cmp
loop
aas
sbb
jl
dec
cmp
aaa
mov
outsb
add
aam
insl
sbb
repz
ja
out
loopne
pop
pop
gs
popa
shll
cmp
push
and
ljmp
push
cmp
dec
mov
sub
subl
xchg
rorl
adc
pop
pop
pusha
xor
imul
mov
sub
ret
xor
xor
inc
imul
mov
xchg
dec
xchg
adc
dec
lods
ret
vmwrite
dec
adc
inc
mov
mov
xor
add
sbb
xlat
incl
pusha
mov
test
fs
mov
mov
test
les
push
test
dec
rorb
fucomp
rcrb
pop
inc
loope
mov
sub
aaa
cld
rcrb
dec
jb
mov
mov
mov
insb
or
stc
xchg
les
mov
sbb
adc
jp
movsb
dec
inc
cmp
or
rol
outsl
lret
dec
and
andb
mov
movsb
jmp
pop
pop
push
add
jge
sub
inc
jmp
outsl
push
adc
jne
xor
jg
pusha
jns
jg
cmc
sub
add
lret
cmp
pusha
outsl
outsl
pop
in
inc
fdivrp
faddl
loopne
lcall
or
xchg
in
and
or
out
ds
in
dec
cmp
cld
out
sub
xchg
rcrl
dec
sub
mov
or
lock
pusha
je
loopne
jb
addr16
or
or
insb
mov
into
aas
inc
xchg
jle
jge
adc
les
fisubrl
sub
xor
repz
sbb
std
fisubs
push
out
dec
xor
pop
call
call
sbb
ljmp
and
sbb
mov
sub
cli
out
fldenv
neg
adc
or
mov
mov
push
mov
imul
jns
insb
rorl
cmp
bound
pop
std
fisttps
fs
imul
cmc
scas
and
testl
mov
cs
movsl
pop
pop
repz
scas
test
rolb
adc
std
fisttpl
xchg
out
cwtl
or
sub
mov
js
adc
mov
xlat
add
sbb
mov
sub
xchg
and
shl
fucomip
in
decb
jae
loope
cmpsb
or
mov
sub
cltd
mov
pop
iretw
and
adc
lods
cmp
pop
sarb
cmp
ret
sbb
mov
add
rclb
fsubl
dec
add
or
sbb
imul
mov
mov
push
push
sahf
cs
test
scas
pop
sbb
mov
rcll
and
ret
adc
movsl
dec
popf
rcll
and
fcomps
dec
sbb
dec
call
sbbb
cmc
pusha
xchg
inc
inc
fisttpll
adcb
pop
xor
sar
inc
xchg
shrl
pop
sbb
pop
adcl
cmpsb
xchg
lock
fwait
or
push
jg
lea
lds
ret
dec
sarb
pop
pop
cmp
cmp
bound
into
leave
xchg
push
out
or
mov
mov
shl
cmovae
xchg
or
mov
test
sub
fisubs
mov
add
sub
popf
loope
push
dec
pop
dec
xor
or
std
movsb
cmpsb
mov
fwait
cltd
push
add
fildll
xor
scas
insb
adc
push
dec
and
cs
data16
fisttps
jb
mov
xadd
mov
je
dec
inc
and
es
add
and
pop
nop
les
aad
data16
pop
mov
mov
fsubs
jecxz
mov
xchg
lea
cmp
insl
inc
dec
cmp
out
scas
adc
jae
test
pop
jecxz
ds
or
adc
je
xor
mov
add
xchg
add
test
lock
sub
inc
scas
das
lods
xchg
mov
xchg
xor
ja
add
and
ret
scas
out
divl
aaa
xlat
clc
push
lcall
mov
shlb
sbb
pop
scas
push
dec
fimull
cmp
mov
mov
scas
fsts
or
aaa
in
addr16
add
fbld
lret
lret
in
jne
sbb
insl
pusha
rcrb
add
inc
stos
stos
and
inc
adc
dec
dec
mov
xor
xor
mov
dec
sbbl
lea
dec
clc
mov
adc
cmpsl
pop
int
and
mov
fidivs
sbb
and
inc
jo
cmpsb
mov
push
pop
sbb
jno
xlat
cwtl
stos
lock
mov
mov
cmp
sub
inc
xchg
call
lret
xor
pop
inc
dec
outsb
ret
mov
add
add
repnz
sbb
js
cmp
es
dec
xor
dec
mov
jno
jl
cltd
mov
mov
mov
mov
test
add
loope
lea
xchg
pop
mov
clc
cmc
xchg
js
mov
test
adc
clc
cltd
xchg
jl
enter
pop
sub
and
mov
and
mov
jge
out
call
jge
cltd
push
jne
push
es
in
lock
arpl
test
or
sub
xchg
cmp
jmp
js
mov
divb
add
shl
cmp
sub
xor
lcall
loope
jmp
or
sub
jl
dec
pop
cmp
lahf
push
jns
in
mov
scas
xchg
sub
inc
lds
push
mov
sbb
nop
sbb
in
pop
mov
test
adc
rcr
jl
popa
pop
int
fs
std
out
pop
aaa
outsl
push
adc
pop
iret
divl
das
sub
sbb
popa
lcall
sbb
test
add
xchg
mov
sbb
jg
jmp
jmp
cmp
cmp
push
arpl
xchg
sub
and
adc
mov
push
mov
ret
ds
jle
jge
cltd
fmuls
ds
scas
cld
adc
fdiv
sbb
cwtl
pusha
dec
inc
je
aad
cmp
inc
das
lds
push
mov
cmp
mov
loope
sbb
daa
imul
cld
push
push
or
jns
and
mov
dec
popa
jae
pop
dec
mov
nop
stc
bound
call
mov
sub
mov
insl
sub
add
add
push
dec
ljmp
inc
xor
push
mov
test
xchg
clc
pushf
push
sub
out
popa
and
pop
std
js
pop
cltd
and
aaa
movb
aaa
out
sahf
push
ljmp
cld
fsts
xchg
fnstcw
imul
adc
cltd
push
jnp
insb
cmp
js
mov
and
push
mov
jmp
test
loop
iret
dec
insl
pop
cmpsb
add
gs
push
jnp
testb
adc
cmp
pop
cmp
ret
cmp
mov
mov
pop
mov
jecxz
stos
enter
out
sbb
pop
lods
add
divb
shlb
pop
jg
mov
push
sub
fsubs
mov
scas
rclb
and
scas
jecxz
sub
mov
ucomiss
cs
jae
add
and
aas
push
push
subl
dec
testb
pop
idiv
xchg
out
push
mov
lahf
jle
jp
push
or
and
imul
stos
pop
and
lock
add
pop
jo
dec
and
pop
xchg
pushf
ret
outsl
daa
push
fidivs
jmp
bound
test
mov
pusha
mov
adc
out
call
adc
enter
xchg
mov
and
xor
cwtl
aad
mov
push
test
sub
in
rcrb
or
outsb
inc
rcrl
pop
ljmp
and
or
mov
inc
movsl
xor
ret
push
push
jno
jns
mov
sti
pop
repz
add
mov
xor
mov
xlat
rorb
sub
lahf
jns
pushf
rorl
int
clc
cmp
lds
mov
mov
push
push
cmp
lods
adc
in
in
dec
out
xor
xchg
ja
pusha
rorl
ret
sbb
out
bound
movsb
add
ret
jecxz
imul
xchg
fwait
jno
mov
push
cmp
xor
jge
adc
push
into
stos
mov
cmova
ror
push
jmp
inc
dec
jns
fdivl
xor
dec
imul
jns
in
push
adc
lcall
in
pop
mov
int3
popl
sbbl
cmp
push
in
sbb
mov
cmpsl
out
lret
sbb
inc
cs
mov
xchg
loopne
adc
fcmove
sbb
loope
mov
orl
out
inc
loopne
es
ret
adc
mov
jbe
mulb
leave
adc
dec
xor
outsb
lods
add
or
out
jecxz
sbb
ja
in
lds
add
and
sbb
hlt
xchg
loope
popf
popa
je
push
pop
xlat
jo
fsts
mov
push
aam
test
sbb
cmpl
hlt
stc
aas
rep
or
jne
adc
ficoms
push
aam
daa
or
adc
jp
je
pop
adc
jp
lret
int3
fbstp
push
inc
cmp
std
jg
jo
fs
mov
dec
or
add
dec
rcl
lcall
mov
push
sub
cmp
movsl
mov
andb
inc
adc
loope
cltd
ja
les
pop
sub
mull
dec
xchg
fisubs
popa
mov
arpl
mov
fmulp
or
jns
and
je
sbb
clc
ss
pop
loope
adcl
cmc
loop
fstl
dec
movsb
xor
xchg
mov
popf
add
enter
jecxz
clc
lcall
cmp
jg
cltd
outsl
sar
rcll
jle
negl
cmpsl
pop
lods
cs
cmp
sub
push
inc
enter
lcall
mov
push
stos
jo
cmc
mov
sbb
inc
push
les
mov
pop
stos
arpl
adc
movsb
sub
data16
mov
mov
and
mov
das
mov
or
adc
fidivrl
lods
jnp
insl
inc
push
add
mov
pop
jl
scas
add
outsl
lahf
add
mov
outsl
ret
jge
test
sti
lcall
inc
pop
loope
popf
mov
add
add
adc
outsl
movsb
pop
adc
loop
xchg
stc
sub
cli
rorb
rolb
outsl
pusha
out
xor
push
mov
inc
and
dec
enter
jg
mov
int
pop
cltd
lret
test
dec
fstps
movsl
cmpsb
dec
or
shl
ss
int3
dec
sub
std
push
aad
andb
pop
dec
lcall
dec
cmp
sbbl
sbb
rorl
or
pop
inc
mov
sbb
mov
pop
lods
fadd
fiadds
stos
push
lahf
test
inc
imull
sbb
pop
leave
lds
pop
mov
into
rorl
aaa
test
xchg
call
in
pop
xchg
or
dec
arpl
cld
add
nop
fimuls
xchg
das
out
pop
roll
or
inc
test
pop
mov
roll
lcall
adc
inc
xchg
out
sub
mov
add
clc
inc
aam
inc
iret
or
jl
ret
in
and
inc
pop
dec
leave
mov
sbb
adc
dec
and
mov
xor
in
mov
dec
jae
cmp
dec
div
push
loop
in
pop
or
xlat
fucom
mov
daa
stos
push
iret
inc
out
and
test
fmull
and
dec
sbb
mulb
and
stc
dec
pop
out
icebp
mov
psubsw
xchg
mov
clc
nop
sbb
sub
insb
sub
vfrczss
std
fcoms
push
std
mov
loope
xorl
popf
call
xchg
pop
or
cmp
subb
outsb
sub
jp
stos
jl
or
jb
lcall
imul
jp
mov
mov
xchg
sub
sbb
inc
adc
out
es
push
fcoml
pop
adc
popa
or
dec
test
cmp
sbb
xor
dec
hlt
arpl
xchg
mov
sbb
cmp
fwait
ret
fdivrl
and
cmp
sub
loope
push
stos
nop
mov
test
sbb
je
popa
scas
xchg
jge
lahf
push
pop
adc
std
jl
ljmp
sbb
jns
je
movl
aam
cmp
inc
push
fcompl
dec
sub
pop
cmpsl
imul
cmp
mov
imul
cld
and
inc
cwtl
push
pop
dec
mov
xor
scas
fdivr
es
enter
and
dec
std
jmp
cmp
scas
add
je
cwtl
mov
jo
hlt
or
inc
ss
push
das
lcall
lea
orl
daa
push
sbb
and
mull
int3
push
jae
jbe
leave
mov
jecxz
and
or
mov
sti
gs
xchg
rolb
movsl
push
sub
stos
or
data16
inc
xor
mov
inc
or
sbb
sub
or
xor
xchg
lods
roll
inc
leave
data16
pop
test
faddp
popa
ss
mov
iret
addb
push
mov
sub
pop
movsl
or
xchg
mov
push
or
outsl
lahf
or
mov
test
mov
xchg
push
cmpb
xor
or
push
outsb
scas
pushw
ret
je
filds
xor
mov
jl
decl
into
xor
testb
jecxz
mov
cmp
loope
ret
bound
mov
fimull
jb
mov
mov
fcomp
push
sbb
leave
mov
xor
sbb
sub
dec
adc
arpl
pop
sti
loope
xor
lahf
aas
mov
and
pop
fdivl
inc
dec
pushl
movsb
inc
fsubrs
xchg
fwait
mov
aam
bound
pushf
insl
insl
add
and
fisttpll
scas
sub
mov
mov
jne
jne
jl
sbb
add
pop
xlat
push
mov
mov
adc
push
jne
daa
or
sub
xchg
mov
subb
int
loopne
pop
inc
push
xchg
sub
xchg
cmpsb
sub
mov
mov
fisttpll
int3
ret
fstpl
mov
mov
pop
push
dec
rolb
outsl
jge
sub
shlb
inc
ljmp
mov
mov
push
lods
gs
jo
in
sub
cmpsb
orb
cmpsb
ss
mov
js
jbe
pop
sbb
pop
mov
and
fistpl
lods
mov
jle
lahf
fnstcw
xor
mov
cmpl
xor
pop
add
es
dec
xchg
sar
imulb
mov
int
imulb
xchg
aaa
rclb
in
das
rol
fldl
popf
mov
stos
cmpl
into
lods
mov
into
stc
add
ret
outsb
jmp
bound
movsb
fcmove
ss
mov
add
xor
jne
mov
push
sbb
shlb
js
mov
adc
cmp
adc
xchg
sbb
cmp
shrl
call
dec
dec
out
pop
stos
pop
xchg
mov
aaa
xchg
xchg
lahf
loopne
xchg
dec
lock
xlat
movsb
jns
dec
mov
fwait
ljmp
sti
xchg
push
lds
ljmp
jbe
push
and
pop
mov
push
mov
push
scas
mov
pop
hlt
xchg
inc
roll
fstp
pop
push
mov
loopne
inc
xchg
mov
cmpsl
jbe
pop
cwtl
pop
call
ret
push
push
jge
loop
add
std
mov
mov
mov
add
or
ret
jmp
and
mov
mov
mov
inc
pop
lock
sub
data16
das
mov
push
push
xchg
repz
inc
jl
addl
iret
fwait
adc
jg
adc
mov
mov
cli
es
ja
shll
or
hlt
ss
xlat
cmp
mov
inc
pop
adc
stos
fidivrl
push
mov
push
inc
test
ljmp
push
repnz
popf
mov
shlb
clc
xchg
sub
fmuls
mov
mov
rclb
adc
or
ds
lret
pop
cmpsb
or
push
je
cmp
orb
inc
jno
bound
dec
or
inc
mov
test
sub
loope
rol
mov
and
xchg
fidivrs
sub
mov
jnp
push
xchg
subb
push
fwait
int
popa
pop
mov
test
xor
dec
out
jns
xchg
ja
or
aam
enter
js
out
mov
push
sbbb
insl
cmc
inc
adc
fildll
sbbb
dec
pop
pop
mov
push
sbb
xchg
in
ds
mov
bound
push
add
fildl
ds
divb
cwtl
leave
mov
inc
pop
repz
inc
jge
mov
icebp
inc
outsb
notl
sahf
cltd
call
xchg
push
sti
jmp
cmpb
or
mov
add
sub
push
or
pop
jmp
xor
xchg
pop
iret
dec
add
jecxz
fists
outsb
loop
in
jle
out
pop
inc
imul
or
adc
arpl
mov
pop
mulb
mov
mov
pop
daa
fs
clc
mov
xor
mov
lcall
repz
lret
test
stc
mov
insb
jge
psubsb
pop
jg
push
push
push
or
mov
mov
inc
popl
in
mov
cs
sbb
ret
dec
fwait
scas
iret
sar
insl
sub
sahf
xor
push
inc
into
xchg
add
test
push
mov
or
push
pop
orb
lock
sbb
sub
ss
mov
ds
mov
cmpsb
jns
xor
addr16
jo
mov
push
lea
adc
ljmp
cmc
cli
xchg
push
lret
pop
adc
das
sub
or
ss
pop
add
inc
enter
cld
sbb
lret
inc
push
arpl
dec
enter
pop
out
daa
ds
in
fucomi
adc
stos
std
hlt
push
sub
mov
mov
sarl
pop
sbb
aad
jns
out
or
dec
cmp
jbe
mov
mov
add
divb
shl
ja
dec
mov
xchg
push
pop
adc
rcrl
cltd
movsb
jns
test
movsb
pop
jno
mov
mov
outsb
ss
inc
xor
mov
outsl
xchg
mov
xchg
aam
fcoml
mov
gs
pop
pusha
movsb
cmc
cwtl
nop
mov
fcoml
dec
es
and
sub
sub
push
xor
jnp
loop
dec
xor
xor
jmp
mov
mov
fidivrl
inc
es
jnp
je
dec
int3
jns
or
aaa
push
nop
stc
imul
test
cmpsb
mov
or
testl
rep
mov
inc
repnz
loopne
daa
fmulp
or
push
std
mov
daa
xchg
mov
xchg
ljmp
pop
mov
sbb
cwtl
popf
pop
xchg
cli
cmpsb
jb
sub
test
jb
nop
xchg
pusha
inc
int3
sub
push
xor
fdivl
push
add
ja
mov
sarl
dec
mov
mov
shl
xor
stc
inc
adc
cwtl
xchg
jmp
xchg
push
ljmp
in
adc
and
jle
negl
adc
pusha
cltd
push
in
popf
fidivl
xor
fisubrs
loope
fs
adc
push
cltd
lret
cli
inc
or
mov
es
adc
enter
push
ret
inc
ret
mov
pop
push
mov
xor
xor
jle
and
adc
adc
pop
xchg
xchg
sbb
jecxz
mov
or
add
addb
and
pusha
loopne
cs
inc
mov
xor
mov
or
mov
xor
ss
in
cs
jmp
testl
loop
pop
cltd
mov
xor
mov
sub
lods
les
adc
jo
add
in
stos
jge
mov
jb
push
mov
inc
jl
movl
shrb
shll
xchg
mov
addr16
pop
or
jge
mov
sti
arpl
out
shrb
mov
adc
test
bound
or
jbe
dec
dec
push
jno
pusha
or
ss
mov
mov
cmp
mov
into
daa
dec
ds
in
das
jne
mov
ja
idivb
lods
push
ficoml
lret
fisttps
mov
ds
imul
lret
sub
repnz
cmpsb
int
cli
rolb
pop
or
je
jp
cmp
fs
stos
dec
xor
scas
pusha
stos
jmp
fisttpll
outsb
sbb
pushf
jns,pt
loope
jmp
push
out
pushf
pop
cmp
mov
jno
cltd
lods
pop
insl
mov
aas
cmp
les
sbb
jo
push
inc
call
add
xor
dec
jae
lea
push
popf
jns
add
and
repz
sbb
jb
iret
or
cmpsb
cmpl
insl
addl
mov
lret
mov
sbb
out
in
adc
aam
and
popa
jge
jge
in
sbb
add
dec
into
arpl
lods
aaa
jbe
adc
cmp
mov
pop
jecxz
mov
push
fdiv
movsb
mov
insb
add
aad
xchg
xchg
inc
mov
lret
push
rcrl
mov
lcall
xor
data16
pop
mov
je
or
cmp
sbb
cmp
jmp
cmp
movd
idivb
sbb
cmpsl
es
pop
inc
jecxz
sar
add
jle
nop
sbbb
dec
mov
test
in
mov
in
daa
loopne
mov
addl
fdivrs
movsb
out
lahf
pusha
lock
add
out
xchg
ret
icebp
in
adc
test
lea
int3
ret
nop
jl
lret
and
arpl
jns
jb
sbb
lock
pop
bound
jno
shlb
sahf
adcl
cmp
cmp
push
adc
mov
pop
rclb
jmp
lods
data16
mov
nop
xor
push
cmp
sub
mov
scas
sub
test
cmp
mov
ret
lahf
mov
adc
sbb
movsb
adc
mov
sbb
xor
arpl
js
fistl
rcrb
test
or
mov
mov
sbb
mov
sti
jl
sub
sub
and
mov
or
movsl
inc
idivb
add
scas
mov
addr16
lahf
es
ljmp
pushf
push
push
mov
andl
popf
inc
lods
jae
into
mov
aad
xchg
sub
cwtl
xor
nop
popa
lea
xchg
mov
rcrb
decb
hlt
outsl
ss
pop
adc
jae
mov
pusha
xchg
js
in
jne
ret
sti
sub
jmp
jle
mov
cmpsb
int
repz
movl
adc
repz
dec
shll
jne
jp
lea
psubq
lds
jne
popfw
jbe
loope
adc
out
or
jne
or
add
mov
push
xor
aaa
jo
std
jnp
pushf
lcall
lret
lock
rcrl
cmp
fists
testl
push
daa
sub
daa
xor
stos
or
out
mov
jg
ja
fiaddl
shlb
push
adc
xchg
repnz
xor
push
sbb
and
mov
mov
mov
jae
test
dec
nop
sub
cmp
cld
nop
scas
lock
icebp
in
xlat
mov
popf
leave
mov
inc
and
xor
pusha
xor
sbb
xchg
mov
push
not
sahf
jne
ja
leave
cmp
scas
pop
jg
sub
cli
xor
mov
pop
mov
loop
or
les
cmp
lds
xor
mov
cmp
icebp
std
das
mov
loopne
adc
dec
fisubrl
jle
mov
sahf
sbb
ffree
sub
xchg
into
fdivr
adc
jecxz
imul
or
popa
mov
sbb
in
or
test
mov
add
dec
dec
xchg
movsb
xor
push
std
stos
inc
cld
dec
push
aad
jnp
xlat
add
mov
fadd
test
jb
mov
cmpsb
jno
inc
jo
inc
bound
rcrl
out
dec
cmp
mov
aad
push
icebp
cld
add
ss
ret
push
sub
mov
add
cmp
adc
mov
push
popf
push
cltd
nop
push
adc
cld
jo
or
enter
lcall
fdivrl
mull
loope
cmpsb
pushf
mov
movsl
out
lock
adc
cmpb
xchg
inc
fisubrl
jp
jge
dec
push
inc
iret
cltd
aam
arpl
aam
les
push
icebp
loop
and
sub
mov
pop
add
fisttpll
movsl
or
lods
fisubl
lret
mov
daa
cmp
in
xchg
pop
sbb
push
inc
add
lea
test
mov
xchg
fisttps
pop
pop
iret
jno
jecxz
and
adc
jmp
add
dec
sub
popf
ljmp
mov
cs
stc
movsb
xchg
mov
fwait
mov
push
sub
ss
sub
imul
pop
popf
push
pop
push
adc
scas
jb
sbb
dec
or
mov
pop
adc
rcrb
cli
int3
and
loope
or
fs
js
mov
xchg
cmp
add
mov
sub
mov
shll
add
fwait
sbb
pop
mov
mov
stos
ljmp
xor
add
pop
pop
popf
fsubrs
popf
and
and
lahf
or
test
pop
dec
inc
daa
das
ds
test
jp
mov
ficoml
cwtl
push
dec
mov
das
int3
popa
data16
outsl
out
inc
inc
les
je
fnstcw
lahf
hlt
sbb
mov
sub
sub
fiaddl
aas
out
mov
stc
jbe
xor
sbb
lods
lock
add
xchg
cmp
push
js
in
leave
jb
pusha
or
cmp
jae
xchg
dec
adc
jg
jns
ja
cltd
jecxz
inc
cmpsl
movsl
or
mov
stos
mov
jge
mov
jmp
fadds
lret
mov
add
out
mov
mov
mov
ffreep
xchg
stos
fistpl
shl
xchg
pop
sbb
mov
or
loop
xchg
sbb
fcmovne
dec
test
dec
jge
nop
push
jmp
pop
mov
inc
imul
in
pop
inc
lret
inc
ss
aaa
pop
push
jecxz
pop
in
add
fildll
mov
je
cmpsl
xor
xchg
mov
inc
int3
sarb
xchg
mov
mov
loope
int3
mov
inc
xchg
jo
sbb
shrb
bound
mov
clc
test
je
pushl
int
sti
add
pusha
and
incb
cld
mov
xchg
pop
arpl
sahf
loop
lahf
jne
jmp
scas
pop
xchg
jbe
mov
mov
sbb
push
imul
push
add
rorb
imul
popf
data16
das
jg
out
inc
sti
cld
sub
repz
jb
mov
loopne
jle
lret
or
aam
loopne
or
stc
add
jmp
jb
cli
cmp
xchg
lahf
stos
insb
sbb
or
ljmp
stos
add
jae
cmpsl
push
or
icebp
pop
test
pop
mov
cmp
popf
es
sbb
add
inc
fstl
or
insl
adc
popf
cltd
mov
jbe
mov
fisubrs
ja
push
mov
loop
xor
negb
or
aaa
imul
add
hlt
test
pusha
mull
mov
aad
pavgb
inc
xlat
rcrb
push
test
inc
cmp
adc
inc
add
mov
sti
adc
sbb
adc
jp
fwait
test
lds
xor
sub
xchg
sbb
xchg
testb
add
std
or
xchg
cmc
in
pop
inc
clc
mov
addb
mov
lods
mov
popa
sub
out
out
in
das
cs
fimull
pop
mov
es
sbb
push
mov
push
lods
addr16
mov
fistl
push
and
add
inc
out
push
ficompl
fists
ret
aas
cltd
loopne
sub
in
rolb
in
sbb
dec
daa
sbb
mov
and
cmp
jb
pusha
jbe
clc
arpl
add
or
mov
call
cmpsb
cmp
xchg
xor
xchg
xorb
jecxz
outsb
mov
in
mov
loope
xchg
pop
call
xchg
xchg
pop
loopne
int3
cltd
pop
jbe
inc
test
lods
pop
lods
xchg
insl
aas
addr16
daa
popa
stc
test
and
test
dec
ret
pop
jbe
prefetchwt1
jno
jne
push
nop
fwait
lods
dec
in
jle
and
in
popf
sub
adc
fimull
cmovns
mov
outsl
or
mov
repz
movsb
mov
popa
outsl
sbb
rorl
push
and
pop
dec
aam
dec
mov
outsb
and
imul
pop
jle
and
cmpsl
ret
es
movsl
sub
scas
inc
mov
int3
and
rclb
cmp
aas
mov
cmp
or
test
insl
rcl
mov
xor
lcall
xor
in
or
push
jae
andb
cmp
imul
xchg
cmp
in
clc
and
movsb
sbb
mov
ret
gs
in
out
ret
or
gs
es
pop
jle
test
fsubrs
xchg
cmp
inc
fwait
xor
popf
cli
sbb
pop
cmpsl
mov
rcrl
sti
frstpm(287
out
pop
sti
popf
jp
jb
je
pop
inc
movsl
push
add
xor
push
mov
mov
fnstenv
mov
inc
push
lret
fdivrl
mov
test
inc
or
int3
add
iret
jne
dec
inc
sub
mov
xchg
pop
jp
add
pop
sbb
mov
push
ret
push
cwtl
lock
repnz
test
cmc
shlb
push
mov
sub
insl
cmp
inc
mov
test
jge
test
scas
dec
mov
jno
push
outsb
aad
rcpps
aas
mov
dec
rorb
mov
inc
mov
es
ds
dec
in
sbb
mov
jp
cmp
inc
jge
xchg
push
and
adc
or
repnz
or
jne
dec
leave
xlat
or
xchg
lret
pop
imul
pop
cmp
cmp
xorb
or
lods
psubusw
je
jle
or
inc
xor
mov
ja
aaa
push
mov
sbb
test
data16
cmp
cld
cmp
rcrb
popa
sub
lock
fisubs
push
push
push
sbb
aam
add
cwtl
clc
sub
inc
fsubl
add
outsb
mov
mov
cmp
mov
adc
out
sub
sbb
out
adc
adc
add
add
push
gs
cmp
jmp
sbb
ror
stos
out
enter
push
or
loop
sub
nop
sbb
stc
fucompp
icebp
arpl
add
movsl
test
push
xchg
pop
add
cmp
ret
sbb
jle
dec
or
xor
pop
loop
sbb
or
je
xchg
nop
push
mov
sbb
lods
scas
lcall
push
jge
test
addb
xor
xor
sahf
cli
shlb
js
fists
stc
xor
push
pusha
out
push
into
and
mov
xchg
push
mov
push
mov
cmpsl
or
jle
xchg
mov
jnp
sub
jnp
dec
loop
int
push
inc
imul
add
xor
pop
xchg
or
addb
int3
lods
daa
adc
pop
subb
push
push
add
cmp
or
push
xchg
nop
push
shrb
dec
lods
adc
xchg
sub
jge
shll
rorl
mov
push
xor
push
xor
hlt
loop
cmpsb
sbb
add
ret
pop
ljmp
sbb
gs
aam
cmc
std
clc
stos
outsl
je
jns
sbb
fsubrs
fstp
push
pop
add
imul
mov
shl
lds
sbb
inc
push
std
test
add
outsb
add
cwtl
cltd
xor
in
loope
cmp
mov
jns
dec
cmp
fisttpl
jbe
call
jno
repz
popw
or
mov
fwait
mov
mov
xor
insb
xchg
jl
sub
mov
str
mov
dec
pop
push
pop
xor
stos
xchg
and
mov
push
decl
dec
mov
cwtl
sbb
ja
mov
inc
or
vmovaps
punpckhbw
in
xchg
and
loop
std
or
jp
jg
enter
mov
or
pushf
pop
jge
mov
pop
jle
nop
inc
lcall
dec
cmpl
mull
add
out
mov
add
mov
ljmp
pusha
shrl
mov
mov
sub
in
bound
push
xor
pusha
sbb
loop
pop
imul
cltd
jl
adc
sub
dec
xor
aam
sub
das
lcall
daa
and
add
jmp
pop
add
in
std
scas
pop
jle
inc
pop
cmpl
icebp
pusha
push
mov
testb
lods
jo
jmp
mov
mov
cmp
ljmp
xor
or
mov
movsl
mov
fs
push
jg
arpl
add
rorl
int3
shrb
enter
sti
sub
add
daa
mov
lret
mov
dec
mov
xchg
mov
xchg
inc
jle
jl
jle
bound
cmp
pop
scas
lods
and
insl
xchg
cwtl
lret
sbb
push
popf
pop
mov
lret
cmpb
mov
cmp
lods
out
cmp
add
xlat
hlt
or
dec
or
push
int
jnp
xchg
mov
les
enter
