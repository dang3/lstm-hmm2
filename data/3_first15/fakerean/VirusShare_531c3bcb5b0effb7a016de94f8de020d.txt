add
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
add
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
test
jne
mov
test
jne
push
mov
movl
call
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
movl
lea
movb
mov
call
push
mov
movb
movl
call
mov
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
jne
mov
mov
push
push
push
push
call
mov
test
je
lea
lea
add
add
add
push
call
mov
lea
lea
push
push
mov
lea
push
push
call
mov
lea
lea
push
push
mov
lea
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
lea
add
push
push
mov
add
push
push
call
mov
lea
lea
add
push
push
mov
push
push
call
mov
lea
lea
add
push
push
mov
push
push
call
add
pop
ret
nop
nop
mov
mov
ret
nop
nop
nop
lea
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
call
mov
lea
push
push
call
mov
mov
sub
push
push
push
push
push
lea
call
mov
mov
push
push
push
push
call
mov
or
push
push
push
push
call
mov
call
mov
call
pop
mov
pop
add
ret
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
call
mov
mov
xor
push
test
push
push
setne
push
mov
call
push
push
mov
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
test
je
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
jne
push
lea
call
push
push
mov
call
mov
call
push
push
jmp
push
lea
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
xor
push
push
mov
push
push
call
test
jle
push
lea
push
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
mov
push
push
push
push
call
mov
push
push
push
push
lea
push
push
push
mov
call
push
push
push
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
mov
call
xor
lea
mov
call
mov
mov
push
push
push
push
movb
call
lea
cmp
je
mov
lea
push
push
push
push
call
push
lea
push
push
lea
lea
call
mov
lea
push
push
lea
movb
call
lea
movb
call
test
jne
xor
mov
push
call
lea
push
mov
mov
call
push
mov
mov
call
mov
mov
push
push
push
push
call
mov
lea
push
lea
push
push
mov
push
push
lea
push
push
mov
add
push
push
mov
lea
push
push
lea
push
push
mov
mov
call
mov
mov
add
mov
mov
mov
push
call
mov
movl
test
jle
mov
push
lea
call
lea
mov
mov
push
push
push
push
call
cmp
je
push
push
push
mov
call
mov
inc
cmp
jl
lea
push
push
push
mov
call
mov
mov
sub
mov
imul
push
mov
push
push
push
call
mov
test
je
push
call
mov
call
mov
call
lea
movb
call
movl
call
mov
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
push
call
mov
push
test
jne
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
mov
jne
test
push
je
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
test
je
lea
push
lea
push
push
push
call
add
mov
call
pop
ret
lea
lea
push
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
push
call
mov
add
add
add
jb
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
push
lea
call
lea
movl
call
cmp
je
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
lea
push
push
lea
call
mov
movb
test
jne
lea
push
lea
push
mov
push
lea
push
push
lea
push
push
call
add
jmp
mov
push
push
call
add
test
je
mov
lea
push
lea
push
push
push
call
add
push
mov
call
mov
mov
xor
push
push
push
push
call
test
jle
push
lea
push
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
push
lea
movl
call
lea
mov
mov
push
push
push
push
call
mov
cmp
je
mov
push
push
push
push
call
push
push
push
lea
call
mov
call
lea
movb
call
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
push
push
push
mov
push
call
lea
test
je
push
mov
lea
push
push
push
push
call
push
lea
push
push
lea
lea
call
mov
movl
test
jne
lea
push
lea
push
lea
add
xchg
lea
push
push
call
add
jmp
mov
lea
lea
push
push
push
call
add
lea
movl
call
test
jne
pop
mov
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
push
lea
mov
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
cmp
jne
mov
mov
add
mov
call
mov
call
lea
mov
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
xor
pop
mov
add
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
jmp
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
movl
mov
movl
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
je
push
push
lea
call
push
lea
mov
call
mov
mov
push
push
push
push
call
or
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
cmpl
je
lea
call
mov
push
push
lea
push
push
movb
call
test
je
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
cmp
je
cmpl
jne
mov
mov
lea
movb
call
mov
mov
inc
add
cmp
mov
mov
jb
mov
cmp
je
mov
push
mov
mov
push
push
push
call
mov
call
lea
movl
call
pop
pop
mov
pop
pop
mov
add
ret
nop
mov
test
je
jmp
ret
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
xor
test
sete
mov
mov
push
push
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
cmp
je
mov
lea
push
mov
lea
mov
testb
je
movl
test
je
movl
mov
mov
test
je
mov
testb
mov
je
mov
push
mov
out
inc
add
jmp
xchg
movsb
add
add
add
pop
je
movl
test
je
mov
testb
je
movl
mov
push
shr
and
mov
mov
call
mov
call
pop
pop
ret
push
mov
cmpl
je
push
push
call
mov
mov
cmp
mov
ja
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
mov
jmp
mov
mov
lea
mov
mov
mov
lea
lea
mov
neg
sbb
and
or
mov
sub
pop
je
dec
je
dec
mov
lea
je
mov
mov
jmp
mov
movl
jmp
mov
mov
lea
movl
jmp
mov
lea
mov
mov
mov
mov
lea
lea
mov
neg
mov
sbb
and
or
mov
pop
ret
lea
ret
cmp
and
fdivrl
and
push
and
push
mov
mov
test
je
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
xor
inc
add
add
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
addr16
inc
add
ret
add
xchg
add
call
add
push
push
push
call
pop
pop
ret
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
xor
test
setne
mov
and
inc
add
test
setne
add
lea
push
mov
call
push
mov
call
mov
call
pop
ret
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
xor
mov
mov
iret
roll
rorb
rorl
mov
xor
test
setne
mov
mov
mov
add
push
push
call
add
pop
ret
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
call
mov
test
je
mov
test
jne
mov
test
je
mov
jmp
xor
test
je
mov
test
je
mov
jmp
xor
test
je
mov
mov
pushl
inc
insb
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
or
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
aaa
out
add
add
inc
jp
add
sbb
inc
add
fidivrl
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
cmp
jbe
mov
push
lea
add
mov
mov
js
add
inc
add
mov
test
jne
movl
push
mov
call
add
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
mov
mov
mov
and
inc
add
add
insb
add
push
push
call
mov
add
cmpl
jne
cmpw
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
and
inc
add
cmp
sete
mov
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
mov
jo
inc
add
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
add
or
inc
add
push
ja
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
mov
mov
mov
cmp
jbe
mov
mov
mov
push
mov
mov
and
inc
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
push
call
mov
mov
mov
mov
cmp
jg
test
jge
xor
jmp
cmp
jle
mov
mov
mov
mov
mov
mov
inc
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
push
mov
call
mov
mov
xor
mov
push
push
push
push
call
lea
call
push
lea
mov
call
lea
call
movb
mov
push
push
lea
push
push
call
mov
mov
test
je
push
mov
push
push
push
call
inc
cmp
jle
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
call
mov
mov
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
push
push
call
test
jl
mov
lea
push
push
call
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
call
test
jl
mov
test
je
mov
mov
push
push
call
mov
push
mov
call
pop
pop
add
ret
push
push
push
push
call
mov
lea
test
push
push
setne
push
push
mov
mov
call
add
test
je
xor
call
mov
pop
pop
ret
mov
push
push
push
call
add
test
jne
xor
mov
push
call
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
call
push
lea
movl
call
lea
xor
mov
movl
movl
mov
mov
mov
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
mov
movl
lea
movl
mov
lea
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
add
lea
movb
call
lea
movb
call
mov
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movb
call
mov
movl
call
mov
pop
pop
pop
mov
add
ret
nop
push
push
push
push
mov
lea
push
call
push
push
push
push
push
call
mov
mov
add
test
je
push
push
call
add
push
call
lea
mov
xor
mov
push
push
rep
push
call
push
push
push
push
push
call
mov
add
test
je
push
push
push
push
call
add
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
mov
push
call
mov
mov
add
test
je
lea
push
push
push
call
add
push
call
mov
push
push
push
inc
push
push
mov
call
mov
add
test
je
push
add
push
push
push
call
add
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
call
add
test
jne
mov
mov
push
push
push
call
mov
add
push
call
pop
add
ret
nop
push
push
mov
push
mov
sub
push
push
push
push
push
push
mov
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
push
push
call
add
mov
mov
push
call
test
pop
je
mov
mov
cmp
je
lea
push
call
add
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
mov
call
mov
test
je
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
mov
call
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
call
mov
test
jne
movl
jmp
movl
add
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
mov
jne
lea
mov
push
push
push
push
push
push
push
push
push
call
test
jne
mov
test
je
mov
push
mov
call
xor
pop
ret
cmp
jne
mov
mov
push
push
push
lea
push
push
mov
push
push
mov
push
push
mov
movl
call
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
call
mov
push
push
push
test
push
mov
jne
lea
test
je
mov
test
je
mov
push
call
xor
jmp
mov
call
lea
lea
push
push
mov
call
mov
call
mov
lea
push
lea
push
push
push
push
push
movl
call
push
call
push
mov
call
test
jne
cmpl
jne
mov
mov
mov
lea
mov
jmp
movl
mov
mov
call
cmp
jne
mov
call
push
push
push
push
push
push
call
add
push
push
push
push
push
push
call
push
call
push
mov
call
xor
jmp
cmp
jne
lea
call
mov
movl
test
jne
mov
push
push
call
or
test
je
push
push
lea
call
push
mov
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
jmp
push
push
lea
call
mov
push
mov
push
push
call
or
lea
push
call
mov
push
push
push
push
push
call
add
cmp
jne
mov
push
push
call
test
je
push
push
lea
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
call
mov
call
lea
mov
call
xor
jmp
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
movl
movl
movl
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
inc
add
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
push
mov
push
call
mov
pop
test
setne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
and
push
mov
call
inc
add
xchg
add
add
call
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
inc
add
add
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
call
mov
call
add
push
push
push
push
call
mov
call
mov
pop
ret
push
mov
call
test
jne
pop
ret
mov
call
mov
push
call
add
test
jne
mov
test
jne
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
call
inc
add
add
add
rolb
repnz
add
stos
add
mov
call
inc
add
call
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
neg
sbb
neg
cmp
je
mov
mov
call
pop
ret
nop
push
mov
call
mov
call
inc
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
add
lea
call
neg
sbb
push
neg
mov
mov
mov
lea
push
push
push
push
call
push
call
add
pop
pop
pop
add
ret
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
setne
push
lea
call
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
mov
and
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
sbb
and
xchg
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
xchg
and
pop
and
fcompl
and
pop
and
jmp
pop
and
jbe
and
sbbl
xchg
pop
and
enter
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
push
jne
mov
pop
mov
pop
ret
mov
test
movw
movw
jbe
push
mov
push
mov
push
push
push
call
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
xor
test
jbe
mov
mov
test
jle
mov
push
push
push
call
add
test
je
jmp
cmpw
je
inc
add
cmp
jb
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
push
push
push
mov
push
cmpw
jne
add
cmpw
je
mov
mov
push
push
call
mov
add
test
mov
jne
push
push
call
add
mov
mov
mov
sub
sar
cmp
jbe
mov
mov
mov
push
push
push
push
call
add
test
jne
mov
lea
lea
lea
mov
lea
mov
shr
rep
mov
and
rep
mov
add
lea
mov
lea
movw
mov
inc
mov
mov
cmp
jae
mov
cmpw
mov
jne
lea
cmpw
jne
pop
pop
pop
pop
ret
nop
mov
push
mov
xor
mov
push
push
push
rep
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
mov
push
mov
and
push
push
push
push
push
call
mov
add
and
test
je
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
add
push
push
call
push
lea
push
push
push
call
add
and
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
mov
push
push
push
push
push
call
mov
push
lea
push
push
and
call
push
lea
push
push
push
call
lea
lea
push
lea
movl
lea
lea
push
push
movl
movl
call
lea
push
lea
push
push
call
add
add
lea
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
call
mov
inc
lea
push
call
mov
add
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
mov
add
lea
mov
mov
push
mov
push
push
lea
push
mov
mov
push
push
push
push
push
mov
mov
call
test
je
mov
push
call
mov
add
pop
pop
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
lea
shr
rep
mov
and
rep
pop
pop
mov
lea
push
mov
lea
add
push
push
mov
lea
push
push
push
push
push
push
call
test
je
xor
pop
add
ret
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
push
call
mov
aad
mov
add
add
jp
cli
push
repnz
add
mov
add
mov
push
shrl
xchg
add
mov
loope
lahf
icebp
add
fisubrs
jbe
test
cli
mov
out
out
add
add
roll
imul
push
mov
add
push
push
push
call
add
add
add
add
fcompl
movsl
add
add
xchg
out
add
repnz
movsl
stc
jge
out
add
imul
movsb
lods
aad
push
pop
jno
insb
cwtl
test
clc
fiaddl
add
sahf
jle
add
xchg
add
add
add
jno
mov
add
sub
pop
popl
push
push
call
add
add
lea
add
loopne
add
add
jb
rcl
jp
lret
repnz
outsl
mov
add
stc
add
scas
add
pop
cmc
add
in
stc
aad
testb
imul
add
loopne
js
mov
in
clc
lcall
push
push
push
push
push
push
push
push
call
add
in
test
add
pop
add
add
data16
loope
out
add
pushf
add
mov
add
roll
leave
add
add
cltd
mov
add
mov
call
lcall
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
in
add
loope
loopne
add
push
mov
add
mov
fwait
mov
lods
add
test
lcall
int3
sub
dec
mov
es
push
push
push
call
dec
cmpsb
jno
add
in
add
out
add
xlat
stc
push
cmpsl
add
popa
jl
push
push
pop
add
jp
xchg
enter
frstor
add
add
rolb
add
imul
test
in
add
xchg
jbe
mov
call
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
xlat
add
add
out
roll
cmc
mov
jo
add
add
add
aam
add
mov
mov
clc
pop
aam
rcr
jo
repnz
mov
mov
stos
mov
movsb
movsl
push
add
jno
test
jl
jle
int3
add
fcomps
fsubs
push
lea
push
push
push
call
add
fmull
add
xchg
mov
faddl
mov
add
icebp
mov
incb
ret
pop
fldenv
jo
fucomip
sarl
mov
scas
mov
add
rcl
add
add
add
add
cmpsb
mov
rolb
lret
add
pusha
lea
push
lea
push
lea
push
push
call
xchg
iret
add
bound
add
mov
add
mull
gs
xchg
add
mov
push
stos
mov
popf
pop
fldl
jmp
mov
add
roll
movb
add
stos
push
add
fimull
add
filds
retw
in
call
mov
push
call
lds
push
add
scas
icebp
mov
call
pusha
add
nop
lods
ret
add
lds
add
add
add
lret
add
add
jb
add
mov
cmpsl
push
add
add
inc
hlt
push
push
call
push
add
lcall
fcmovnb
iret
xchg
add
add
leave
add
add
fadds
add
in
xchg
gs
push
mov
mov
aam
jle
outsl
icebp
add
mov
lcall
data16
addl
sub
pop
mov
add
push
lea
push
push
push
push
push
call
int3
stc
cltd
add
add
test
lock
nop
fldenv
xchg
add
add
pop
lock
add
shrl
cld
lcall
pop
add
push
push
push
push
push
lea
push
push
push
push
lea
push
call
scas
popl
add
cwtl
pop
jl
add
loopne
addl
add
add
bound
mov
imul
aad
add
pop
add
ja
in
add
shlb
sti
push
add
add
add
lods
cmpsb
popa
push
xchg
xchg
rolb
lock
sub
pop
add
mov
push
push
push
push
push
push
lea
push
call
rolb
add
les
movsl
insb
aam
mov
roll
add
pusha
out
out
push
add
scas
jecxz
pop
frstor
add
add
lods
add
jnp
call
add
pusha
add
jecxz
add
mov
fildl
jl
fildll
out
imul
add
jbe
sub
pop
xor
push
push
push
push
lea
push
push
call
subl
enter
add
mov
mov
mov
jbe
add
cwtl
add
mov
scas
popl
shr
popf
add
add
mov
imul
in
cmpsb
xchg
add
push
mov
add
lcall
les
add
push
push
rol
push
sub
add
shr
inc
dec
sub
add
dec
lea
pop
xor
pop
push
lea
push
lea
push
push
push
call
add
push
pop
add
add
add
cli
pop
cwtl
add
add
in
pop
pop
in
out
mov
mov
mov
sti
pop
stos
rcrl
jae
push
add
add
movsb
add
jae
mov
mov
lcall
mov
mov
iret
mov
sub
pop
pushl
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
addl
push
iret
add
add
pusha
mov
test
ret
call
les
pop
add
sti
jno
pop
clc
add
sub
pop
mov
push
push
push
lea
push
call
idiv
jo
mov
add
aam
add
push
je
add
add
loope
xchg
xchg
scas
add
stos
js
xchg
add
inc
call
lea
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
jae
mov
add
xor
mov
pop
xchg
add
add
fabs
add
nop
add
pop
add
rol
add
add
repnz
mov
lcall
add
stc
add
add
add
pop
bound
mov
sub
pop
push
push
push
push
call
mov
add
test
lea
jecxz
outsl
add
add
add
in
mov
jne
jae
loope
popa
faddl
leave
lret
cltd
add
xchg
jae
add
in
mov
jo
add
add
mov
add
jmp
int
add
repnz
hlt
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
cld
add
lea
pop
ljmp
add
add
fistpll
addr16
mov
pop
xchg
into
stos
fadd
mov
stos
mov
add
push
aad
add
pop
add
roll
add
add
into
add
test
outsl
out
in
lret
mov
mov
add
jno
cmpsb
add
add
lret
in
ret
in
fdivr
lcall
test
add
pushl
push
push
call
hlt
enter
xchg
pusha
mov
loopne
add
add
mov
mov
out
jl
add
add
out
mov
push
mov
in
clc
lcall
jne
push
lea
push
lea
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
push
jns
add
push
push
lods
jl
push
pusha
add
add
add
mov
mov
cwtl
add
mov
fbld
std
pop
add
into
stos
mov
add
add
sahf
cwtl
or
iret
fldl
add
out
ret
add
std
sub
pop
call
push
push
add
add
dec
push
push
pop
add
rol
dec
sub
ror
lea
pop
sub
inc
dec
pop
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
call
stos
lret
stos
sti
add
mov
add
jp
test
in
add
add
mov
cltd
movsl
mov
jbe
add
push
fldl
mov
add
rolb
scas
shrb
mul
add
mov
popa
movsl
push
add
in
fcomps
jne
push
push
push
push
push
lea
push
push
call
add
jmp
je
mov
idivb
int
pop
add
add
xchg
fwait
add
add
push
aam
xchg
add
add
sub
pop
call
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
add
sarl
add
xchg
push
in
into
js
ljmp
shrl
push
mov
add
fsubl
add
add
incb
inc
push
push
inc
xor
dec
rol
push
xor
add
ror
lea
rol
sub
sub
dec
sub
pop
dec
lea
lea
pop
push
push
push
push
call
add
pop
bound
mov
mov
add
add
lock
add
nop
in
jne
push
xchg
add
pop
push
push
lea
push
lea
push
lea
push
call
push
pusha
add
cltd
addr16
fiadds
pop
cld
xchg
test
add
les
add
add
into
push
add
cld
jl
add
mov
add
add
imul
pop
cli
fbstp
add
loope
outsl
add
aad
add
sub
pop
push
push
push
push
push
lea
push
push
push
push
call
add
xchg
mov
cwtl
add
add
lret
mov
test
add
pop
mov
add
add
loopne
lcall
rclb
lea
push
push
push
call
pop
add
add
add
pop
add
add
fxch
pusha
push
push
mov
movsl
pop
lret
add
add
add
add
fs
add
jae
add
js
imul
lea
push
lea
push
lea
push
push
push
call
roll
cmpsb
shlb
ja
popa
scas
mov
les
movsl
fcmovnu
add
jne
mov
in
pop
add
add
in
xchg
addl
bound
rolb
pop
stos
add
fwait
test
xchg
add
popa
cmpsb
add
push
push
lea
push
lea
push
push
call
cltd
mov
pop
add
add
pop
add
cld
leave
mov
add
into
rcr
js
lock
lret
imul
out
out
add
add
test
add
pop
in
imul
push
sub
pop
push
push
push
push
push
call
insb
mov
push
xchg
add
add
jae
add
arpl
mov
fdivrs
rolb
xchg
push
ja
cmc
xchg
add
xchg
hlt
xchg
in
add
in
mov
adcb
roll
out
testb
fcomp
add
push
mov
mov
popa
add
rcl
add
mov
mulb
lock
mov
push
push
push
push
lea
push
push
lea
push
push
push
call
out
add
mov
out
jle
add
add
mov
add
xchg
add
lods
add
lods
shll
mov
add
sub
pop
add
add
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
out
push
test
add
push
mov
mov
add
les
fisubrl
gs
pusha
shll
iret
add
add
sub
pop
add
push
lea
push
call
jge
in
add
jns
xchg
add
cmp
jge
mov
mov
lea
pop
mov
add
add
add
push
mov
add
add
add
add
add
imul
stc
add
loopne
flds
les
push
add
loopne
sub
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
cwtl
mov
nop
loop
mov
add
lods
jb
mov
iret
mov
lods
add
push
add
movsl
sti
add
mov
movsb
test
add
into
add
fs
pop
xor
push
push
push
call
push
add
add
add
popl
jl
add
insb
pop
insb
xchg
out
add
add
add
flds
add
cld
repnz
aam
add
add
push
add
add
add
add
cmpsb
add
add
les
push
push
push
lea
push
call
add
lahf
add
stos
int3
fcoml
mov
mov
loope
pop
push
add
insb
add
add
jp
add
mov
lcall
cwtl
add
in
in
lcall
jne
push
push
push
lea
push
push
lea
push
push
push
push
call
stc
add
rcrl
ret
hlt
out
rcll
ljmp
push
imul
add
les
ret
cld
fldl
add
add
add
nop
sub
pop
push
push
lea
push
call
addr16
roll
movsl
mov
xchg
add
faddl
aam
xchg
arpl
fadds
add
jl
add
in
clc
lcall
inc
or
adc
push
push
push
push
push
push
call
add
mov
test
in
testb
mov
add
add
loopne
out
add
scas
add
xchg
add
out
into
ljmp
jne
mov
add
ljmp
jno
mov
jb
stos
add
rolb
add
add
add
sahf
add
sub
pop
add
push
push
push
lea
push
call
mov
add
lea
add
movb
fldl
add
out
cmpb
add
push
in
imul
add
add
mov
pop
push
in
add
test
push
add
add
ljmp
mov
add
loope
sub
pop
pop
mov
push
push
lea
push
push
call
std
les
add
ljmp
add
mov
mov
jne
js
add
jne
push
popf
clc
std
add
shl
pop
test
add
add
jae
pop
flds
in
add
stc
sub
pop
xor
push
push
lea
push
lea
push
push
push
push
call
push
add
hlt
imul
add
add
add
data16
jecxz
imul
add
mov
ficoml
add
push
pop
add
add
in
in
add
push
push
call
push
add
add
mov
loope
xchg
fwait
in
mov
mov
add
add
cmpsb
ffreep
fadd
jmp
add
fisubs
push
push
add
in
add
add
add
sub
pop
push
push
lea
push
push
push
push
call
push
rcr
mov
push
ljmp
add
scas
mov
arpl
in
add
add
out
add
add
mov
add
pusha
repnz
mov
cmpsl
loop
cltd
scas
add
insb
stc
add
cltd
xlat
add
in
in
pop
mov
push
push
push
push
call
out
mov
lret
stos
xchg
out
jo
add
add
lahf
mov
stc
lock
xchg
into
testl
jge
add
lahf
add
lods
pop
jns
add
add
add
add
lcall
xor
push
push
push
lea
push
lea
push
push
lea
push
call
loope
mov
int3
imul
mov
jnp
add
jnp
pop
cwtl
bound
pop
jl
add
mov
adc
loopne
cld
add
sahf
push
aam
notb
add
fildl
add
add
mov
add
loope
push
lds
les
push
lea
push
push
push
push
call
add
xchg
add
aam
add
ja
cwtl
mov
add
sarl
cld
add
xchg
mov
add
mul
add
arpl
add
push
leave
mov
mov
add
addl
push
push
push
push
push
push
lea
push
call
movb
addb
add
add
shl
lcall
pop
aad
out
mov
imul
add
outsl
js
mov
add
pop
pop
test
mov
sub
pop
pop
rep
push
push
push
push
push
lea
push
lea
push
call
fcmove
xchg
in
cmpsl
add
add
xchg
ja
add
add
add
add
je
mov
mov
push
popa
add
add
leave
mov
aad
lret
je
lods
add
add
add
jne
add
xchg
mov
add
int3
sahf
out
lahf
std
add
sub
pop
pop
push
lea
push
lea
push
push
push
call
loope
imul
add
int
notl
jno
lods
add
mov
imul
arpl
js
add
shll
add
lret
xlat
add
pop
hlt
add
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
fcom
add
mov
xchg
jo
lahf
pop
add
cmc
xchg
cld
cltd
add
lods
mov
add
leave
jle
add
xchg
add
add
add
loop
pop
add
std
loope
add
add
mov
popf
mov
add
push
mov
mov
fdivr
lcall
ret
add
add
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
add
mov
addb
movl
addl
nop
mov
fistps
sahf
xchg
testb
scas
mov
movsb
jns
scas
pop
int3
xchg
jmp
mov
clc
add
add
stos
fadds
jecxz
enter
in
add
cld
leave
aam
movsb
in
sub
pop
add
push
push
push
push
push
call
cmpsb
rolb
add
add
add
lret
rcrl
push
loope
mov
cmpsl
add
sahf
pop
add
leave
loope
in
movl
in
lcall
inc
and
jno
adc
sub
adc
xor
bound
push
push
push
push
call
add
xchg
lea
fiaddl
mov
cmpb
addl
testl
add
add
fistpll
in
push
iret
add
lea
lcall
add
push
push
push
push
push
call
scas
xchg
jnp
add
in
add
mov
shl
add
ficoml
cwtl
movsb
sbbb
push
add
mov
push
add
push
in
in
pushf
add
add
push
jecxz
jns
push
add
movsb
test
lds
lcall
les
push
call
mov
sarb
add
negb
lahf
jmp
add
jle
add
arpl
add
add
jb
ret
rolb
pop
jbe
add
imul
and
xor
adc
push
push
push
push
lea
push
push
push
push
call
lds
jmp
jmp
add
push
fstp
cmpsl
out
leave
stos
mov
mov
add
add
push
add
add
add
xchg
lods
add
push
in
aad
add
add
xchg
aad
add
sahf
mov
push
add
adcl
adc
push
push
call
cltd
jl
xchg
int3
clc
into
add
add
addr16
add
jl
xlat
add
add
add
add
addl
add
add
js
in
bound
shrb
lcall
les
lea
push
push
push
lea
push
call
add
in
add
mov
add
mov
xchg
add
add
cmc
mov
aad
add
loope
add
add
fwait
add
add
fldl
test
testl
add
lea
jo
add
lcall
dec
sub
adc
rol
ljmp
fcomps
rorl
stos
push
add
sub
not
lea
push
and
add
not
sub
shr
ror
sub
add
rol
add
pop
add
pop
push
shl
pop
pushl
call
push
push
push
call
add
jo
add
xorb
movsl
mov
mov
mov
divb
add
bound
hlt
lcall
add
push
or
inc
out
shr
inc
push
and
add
ror
inc
sub
xor
sub
shr
pop
ror
pop
push
add
xor
pop
push
push
push
push
push
call
lods
cmpsl
sbb
add
add
mov
add
add
pop
int3
add
rcll
add
add
add
add
in
ja
jmp
add
fucomp
add
mov
add
jl
fildl
add
add
pop
mov
add
sub
pop
push
push
push
lea
push
push
push
push
push
call
mov
in
mov
add
popa
loopne
jb
shl
xchg
add
cmc
cltd
mov
add
hlt
test
jo
pop
add
nop
fsubrl
add
in
pop
add
add
mov
xlat
cmc
add
pop
add
into
push
bound
add
cltd
add
pop
call
mov
push
add
pop
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
out
mov
in
call
jno
mov
add
add
roll
test
scas
mov
std
mov
jae
hlt
push
cmpsb
shll
mov
test
push
insb
into
add
iret
loop
pop
jae
add
add
jp
add
cmc
cltd
xchg
lcall
push
push
push
push
lea
push
lea
push
push
push
push
call
popl
add
sti
add
popa
add
xchg
add
scas
jno
mov
cld
jp
lock
gs
jp
add
filds
fmul
lret
add
mov
loopne
mov
jmp
add
add
sahf
add
add
add
pop
pop
test
add
add
lock
scas
push
fisttpl
sub
pop
mov
add
push
lea
push
lea
push
push
push
push
push
push
push
push
call
faddl
add
add
add
out
add
add
in
add
add
mov
jbe
roll
push
push
lret
sahf
jmp
add
add
add
iret
push
xchg
add
add
clc
data16
in
fdivr
lcall
ret
add
add
push
push
push
call
clc
add
jo
add
aad
add
mov
mov
add
mov
mov
mov
add
mov
lea
add
add
arpl
lcall
ret
mov
add
mov
push
push
lea
push
call
call
push
add
push
test
xchg
jne
in
xchg
add
mov
add
iret
xchg
add
pop
add
mov
add
out
add
pop
mov
jae
in
clc
pop
xor
push
lea
push
push
call
in
mov
arpl
add
gs
lods
push
mov
add
loop
fiaddl
bound
add
xchg
mov
mov
mov
hlt
js
test
add
xchg
add
add
test
out
pop
jnp
xchg
cld
sub
pop
add
push
push
push
push
call
mov
add
jo
aam
mov
addl
add
add
clc
pop
add
mov
pop
sarb
xchg
call
xlat
add
jl
add
add
add
call
fmul
add
lcall
jne
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
add
addr16
add
fldl
add
add
add
push
out
ljmp
nop
movb
add
mov
jl
popf
add
pop
rolb
jb
add
roll
fcoms
in
popf
mov
lods
imul
xchg
out
add
outsl
sub
pop
push
push
inc
pop
mov
xor
push
push
call
add
les
add
add
add
add
fldenv
repnz
push
xchg
stos
mov
jne
add
lods
pop
add
cltd
xchg
sub
pop
add
push
push
call
test
add
mov
jge
add
pusha
xchg
add
lret
pop
imul
jnp
add
add
xchg
roll
movsl
in
add
jge
test
add
cwtl
add
add
push
scas
add
push
add
aad
jo
jae
add
addb
add
add
jmp
sub
pop
pop
push
inc
sub
pop
mov
xor
push
pop
rep
push
ror
inc
shr
pop
mov
push
push
push
lea
push
push
push
call
fnstenv
lock
fsts
add
add
jmp
mov
movsb
add
mov
ja
add
jp
mov
jmp
aam
insb
jecxz
add
mov
ret
faddl
fcmovbe
jmp
orl
mov
add
sub
pop
xor
push
push
lea
push
lea
push
push
push
push
call
add
cmpsl
add
add
movsl
jns
add
mov
jp
out
mov
add
mov
mov
add
mov
lret
add
add
add
add
lea
add
filds
mov
popf
add
out
push
add
push
lahf
movb
add
add
cli
cmc
add
jmp
lcall
les
not
pop
or
je
push
push
push
call
in
add
add
loop
mov
jmp
imul
add
push
xchg
mov
loop
ret
int3
lahf
jno
test
out
add
add
add
push
mov
mov
add
lock
pop
mov
xor
push
push
push
push
push
push
call
int3
add
add
mov
loop
jp
push
ljmp
cmpsl
add
sti
xchg
cmpsl
arpl
push
sbb
jno
adc
inc
repz
lcall
add
add
out
imul
mov
mov
add
add
add
add
xchg
scas
stc
add
pop
add
testb
add
jle
push
add
add
fsubrl
add
movb
jle
jle
mov
addl
lret
iret
cmp
push
push
push
push
push
push
push
lea
push
call
add
jmp
rcrb
xchg
pop
in
add
jo
cmc
push
call
push
add
in
add
mov
xchg
fadds
rolb
jno
aad
outsl
jl
mov
add
add
add
add
movsl
sub
pop
add
push
push
push
push
push
lea
push
push
lea
push
call
push
fbstp
add
push
add
rolb
sti
out
imulb
add
movb
push
push
add
into
add
add
mov
in
in
je
add
in
mov
add
pushw
mov
add
jl
add
insb
add
add
add
call
lcall
repnz
push
pop
push
mov
xor
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
rclb
mov
push
add
loope
aad
add
add
insb
add
test
add
pop
jb
add
jp
add
add
sti
lds
call
lods
xchg
add
add
iret
mov
loopne
lcall
lock
push
push
push
lea
push
push
lea
push
call
add
add
add
add
fmul
add
lods
cld
mov
loopne
add
out
mov
cwtl
cli
xchg
add
add
mov
call
rep
push
add
pop
mov
xor
push
push
push
call
add
filds
jno
scas
add
jge
test
lock
addb
push
add
nop
jno
js
mov
push
add
shlb
mov
in
hlt
lcall
leave
je
mov
push
push
push
call
xchg
fildl
push
jle
add
add
add
mov
fdivrp
imul
add
lds
testb
mov
add
add
aad
mov
mov
in
hlt
lcall
sub
push
call
add
add
add
mov
sar
out
ja
add
xchg
xchg
add
popf
pop
out
sahf
add
push
add
add
add
popl
xchg
add
out
push
movsb
scas
jae
add
jp
in
clc
pop
add
push
dec
pop
rep
push
lea
push
push
push
push
call
pop
add
add
push
xchg
cwtl
jae
add
add
add
add
movsl
add
add
mov
outsl
into
xchg
add
cmpsl
pop
pop
icebp
add
add
add
add
add
int
add
in
in
lcall
push
push
add
add
push
push
pop
add
add
sub
lea
sub
xor
inc
ror
pop
add
pop
push
push
lea
push
push
push
call
push
addb
mov
jo
add
popa
add
sti
add
add
arpl
xchg
mov
clc
add
test
cld
std
addb
addb
add
add
fxch
add
loop
sub
pop
pop
push
ror
add
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
push
mov
add
imul
fs
add
addl
add
xchg
mov
push
push
call
add
jle
fiaddl
add
add
bound
jns
mov
add
shl
add
add
add
xchg
fldl
mov
sti
jnp
add
test
add
add
mov
push
mov
add
add
popa
sub
pop
mov
jmp
push
lea
push
push
push
push
push
push
push
push
call
add
mov
add
mov
push
xor
mov
mov
mov
mov
aam
pop
lret
jmp
icebp
add
insb
loopne
add
add
and
mov
mov
add
add
add
test
out
add
add
lcall
lcall
push
lea
pop
mov
push
push
push
call
add
ja
add
sahf
pop
lcall
add
mov
mov
push
cmp
jns
out
add
loopne
sub
lods
in
mov
push
ror
add
add
lods
xchg
add
popa
jge
icebp
jno
clc
mov
hlt
pop
add
push
push
push
push
lea
push
call
add
shr
roll
add
push
add
jmp
arpl
add
cld
push
add
mov
rolb
jl
fisubrl
stos
nop
sub
pop
push
push
push
lea
push
push
call
mov
add
add
fdivrp
jns
add
add
xchg
cmpsl
jp
add
jmp
clc
movsb
jmp
mov
add
ljmp
data16
add
add
add
xchg
sub
pop
push
mov
push
lea
push
push
push
push
push
push
push
push
push
call
add
cwtl
cmpsb
xchg
add
movsl
xchg
fisubs
jne
filds
add
popa
jp
jle
add
lods
pop
add
fwait
in
add
xchg
cmpsl
lret
sti
mov
add
add
pop
add
push
add
shr
add
pop
pop
push
dec
pop
pop
push
push
push
push
push
push
call
rclb
lret
add
add
add
mov
add
ljmp
mov
cmc
add
call
out
mov
jns
jmp
add
add
add
add
test
pop
stos
rol
mov
sub
pop
pop
push
push
lea
push
push
call
sti
je
add
rcll
into
add
cli
clc
hlt
pop
mov
add
mov
mov
mov
popf
cmc
add
ret
push
push
lea
push
push
push
push
push
push
push
lea
push
call
aad
add
mov
add
mov
add
add
pop
add
add
push
mov
mov
std
pop
add
pop
lods
hlt
add
bound
negb
addb
cmpsl
add
cmpsb
pop
in
add
lret
roll
add
add
lret
out
int
faddl
add
lcall
push
rol
add
pop
mov
push
dec
sub
shr
pop
add
push
push
push
push
lea
push
push
push
push
push
call
jne
nop
add
jle
add
aam
loop
add
pop
pushf
mov
add
std
roll
fsubs
push
movb
int3
popa
add
ljmp
repnz
add
fwait
out
add
add
add
add
add
aad
out
stc
add
add
in
fcompl
push
not
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
fcmovnbe
pop
add
iret
add
loop
add
fiaddl
mov
add
rolb
add
mov
sti
add
imull
add
add
scas
rcl
imul
in
fdivr
lcall
push
push
push
lea
push
push
push
push
push
call
pop
iret
add
idivb
add
add
ja
mov
mov
loop
add
pop
add
add
add
add
mov
add
movsl
lock
sub
pop
movl
push
push
push
push
lea
push
push
push
call
mov
fldl
lds
arpl
jp
js
jae
data16
xlat
clc
add
lods
add
add
add
jl
add
mov
int
add
lahf
add
add
std
mov
add
pop
mov
lcall
inc
clc
incl
add
add
repnz
mov
pop
push
push
lea
push
push
push
lea
push
push
call
pop
pop
ret
xchg
add
roll
arpl
sahf
add
add
ljmp
pop
add
mov
sub
pop
pop
push
push
lea
push
push
push
call
sti
out
add
in
xchg
add
xchg
add
add
add
fwait
loopne
xlat
in
addl
fdivl
add
push
add
lcall
push
xor
lea
pop
pop
leave
push
push
call
add
add
sti
mov
add
mov
fbld
add
scas
add
ret
push
addl
lcall
add
push
push
lea
push
push
call
cli
fsubr
add
nop
sahf
enter
repnz
add
out
mov
jmp
lods
add
jns
shr
stos
add
mov
add
add
cltd
add
les
mov
les
cli
add
sub
pop
push
push
add
dec
pop
mov
push
sub
lea
not
ror
pop
add
push
ror
shr
xor
pop
push
push
push
lea
pop
push
push
lea
push
push
push
call
jl
pop
mov
jge
add
cmc
call
add
push
add
stc
int
add
add
aam
mov
addb
popl
add
xlat
add
add
add
jge
in
lock
lcall
testl
push
push
call
mov
add
mov
stos
leave
cltd
aam
icebp
andb
aad
cld
add
add
add
in
xchg
enter
stc
add
add
add
sahf
add
in
clc
lcall
inc
or
push
lea
push
call
icebp
fnstcw
clc
add
add
clc
add
add
add
mov
rcrl
jae
xchg
mov
xchg
add
mov
lds
cltd
add
jmp
sub
pop
push
call
push
push
push
lea
push
lea
push
push
push
push
call
add
icebp
clc
loop
out
add
pop
xorl
add
lods
add
add
mov
add
flds
inc
cld
push
add
shr
pop
pushl
push
push
add
pop
push
push
lea
push
lea
push
push
push
push
call
pop
addb
arpl
in
add
lret
int3
mov
xchg
add
add
mov
or
add
add
mov
data16
add
xchg
sti
addl
mov
add
add
add
add
fs
movl
pop
call
push
xor
dec
pop
cmpl
jne
pop
push
push
call
add
enter
jae
in
int
add
add
jp
add
pop
jmp
add
mov
add
xchg
add
jae
filds
add
mov
sub
pop
pop
push
lea
pop
pop
push
push
call
jmp
mov
stos
add
xchg
add
aam
jne
add
iret
stos
add
test
int
pop
add
mov
add
add
test
add
test
add
rolb
stc
add
add
add
add
aam
enter
fildl
add
out
ja
cld
aad
mov
mov
lcall
push
shr
ror
pop
leave
push
ror
pop
ret
push
push
inc
sub
shl
pop
mov
push
rol
sub
pop
add
push
push
push
lea
push
push
push
lea
push
call
ljmp
add
imul
pop
add
stc
add
add
add
add
add
clc
mov
jne
in
leave
test
lret
add
add
xchg
add
out
fists
clc
add
testb
add
add
add
add
in
add
in
in
push
push
push
lea
push
push
push
call
add
add
mov
add
clc
add
mov
add
gs
xlat
ljmp
fldcw
add
add
add
ja
nop
add
test
int
push
lcall
push
push
push
push
push
lea
push
push
push
call
add
add
pop
je
add
jmp
add
gs
mov
pop
add
add
mov
add
repnz
sahf
xchg
testb
add
add
mov
push
add
mov
in
add
in
in
lcall
inc
cld
add
add
cmc
dec
not
dec
pop
call
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
lahf
add
fisubs
add
jge
jle
add
add
add
add
jne
pop
xchg
stos
push
cmpl
add
push
enter
popf
out
add
rcrl
add
add
aad
mov
sub
pop
push
push
inc
pop
call
push
lea
pop
subl
push
push
push
push
call
mov
fcoms
add
jl
jae
mov
jb
out
add
add
xchg
scas
cmc
int
mov
lcall
jge
add
test
call
xchg
push
push
push
push
push
lea
push
call
stc
add
insb
cmpsl
add
add
shl
add
adcb
mov
add
jecxz
mov
mov
in
rcrb
out
ljmp
add
add
add
test
add
cld
add
ljmp
add
ljmp
in
loopne
pop
pop
push
push
push
call
add
imul
add
add
jge
faddl
push
add
push
aad
add
in
add
jne
xchg
mov
xchg
add
add
pop
add
in
scas
aad
mov
movsl
stos
add
cwtl
popf
add
add
test
sub
pop
pop
push
push
call
loopne
xchg
xchg
leave
jmp
add
mov
pusha
jo
add
popa
andb
pop
add
add
add
lcall
leave
push
push
push
push
push
push
lea
push
push
call
mov
push
add
outsl
jns
stos
mov
add
ljmp
jne
in
mov
roll
push
jle
add
add
mov
rclb
jl
add
scas
add
add
push
gs
pop
ret
push
push
push
push
push
lea
push
call
pusha
push
jmp
cli
mov
add
pop
add
jge
mov
pop
add
stc
mov
test
std
test
aam
jp
leave
add
add
cmpsl
ret
mov
add
add
add
loope
add
push
add
pop
xchg
ret
sub
pop
push
push
push
push
push
push
call
add
stos
add
mov
mov
pop
add
xchg
hlt
out
in
scas
std
stos
outsl
add
add
mov
add
push
push
push
lea
push
push
call
add
pop
add
add
mov
xchg
fwait
add
add
data16
mov
imul
sti
icebp
mov
add
add
add
test
mov
popa
add
add
jl
add
add
add
mov
lcall
push
push
call
jae
add
mov
add
add
add
mov
xchg
je
cwtl
nop
add
pusha
negb
mov
add
xlat
pop
mov
mov
mov
in
clc
pop
push
push
pop
push
push
push
push
push
push
push
call
push
mov
xchg
scas
ja
add
add
stos
ja
test
add
add
mov
lock
lret
mov
mov
add
imul
add
cld
test
jp
pop
push
jo
xchg
sub
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
pop
mov
xchg
add
add
mov
cwtl
xlat
add
nop
add
lcall
scas
mov
hlt
add
pop
lcall
lods
xchg
je
add
add
sti
mov
xlat
mov
out
roll
add
ror
add
data16
scas
roll
popf
mov
loopne
lcall
inc
or
xor
ror
xor
inc
pop
lea
sub
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
test
jb
add
add
fistps
add
js
add
aad
out
jle
fnstenv
cmpsb
jo
jl
add
cmpsb
add
xchg
add
sahf
xchg
arpl
js
pop
int3
test
mov
add
add
lcall
add
push
push
push
lea
push
push
push
push
push
call
jo
push
mov
add
add
roll
pushf
icebp
jns
add
outsl
add
movsb
add
in
fcomps
call
jo
movl
inc
cld
push
push
push
push
push
push
push
push
push
call
js
shl
mov
roll
add
jnp
shll
jl
std
ror
out
add
jmp
add
add
fiadds
jl
lea
mov
popf
pop
fisubl
add
xchg
mov
add
add
add
cld
add
xchg
add
sub
pop
mov
add
push
sub
add
shr
xor
pop
add
push
push
push
push
push
push
lea
push
call
js
mov
add
add
add
jmp
stos
add
add
add
movb
cmc
ja
les
add
divl
xlat
popf
cli
jle
add
add
fiadds
stos
mov
frstor
add
jp
add
add
stos
mov
jno
add
sub
pop
mov
mov
push
shr
lea
pop
cmp
jne
push
push
push
lea
push
call
mov
add
lret
enter
add
add
push
shrb
sti
lret
mov
mov
mov
add
add
add
xlat
scas
mov
mov
call
in
lock
cmp
jne
push
push
push
lea
push
push
push
push
lea
push
push
push
call
in
add
add
loopne
mov
stos
add
add
out
jnp
add
fwait
loopne
clc
in
insb
push
add
inc
adc
ret
mov
dec
adc
dec
rol
pop
movl
push
push
push
push
call
push
arpl
add
mov
mov
xchg
loopne
jno
mov
fwait
push
add
add
cwtl
add
loop
rolb
mov
test
ffreep
add
out
add
xlat
addl
lea
lcall
sbb
add
mov
push
push
push
push
push
call
jne
leave
jo
fstpt
mov
add
add
leave
lret
add
bound
lret
icebp
insb
pop
clc
scas
int
cmpsl
pop
add
scas
add
add
test
add
push
shrb
lret
add
roll
add
mov
add
add
clc
ficomps
in
lcall
push
or
push
push
lea
push
push
push
push
push
lea
push
call
add
test
lret
add
add
mov
xchg
add
add
call
mov
cwtl
sti
add
mov
push
mov
fucomi
add
jae
mov
mov
add
ret
hlt
lock
pop
sub
jne
mov
push
lea
push
lea
push
lea
push
call
add
add
push
lock
clc
add
faddl
add
jo
push
add
add
add
pop
lahf
add
add
pop
movl
push
push
push
push
push
lea
push
push
call
pop
jno
add
add
add
add
xchg
add
add
add
clc
pushf
mov
repnz
add
in
faddl
stos
xchg
test
loopne
jmp
add
test
xchg
cltd
out
add
testb
add
in
lds
fiaddl
movsl
test
mov
out
aad
lahf
xchg
mov
mov
fcoms
lcall
pop
or
add
in
adc
scas
ret
push
rol
subb
inc
iret
lea
push
push
lea
push
call
scas
mov
pop
add
test
lret
stos
mov
stos
add
std
mov
rolb
pusha
lret
add
add
ficoml
add
ljmp
out
sti
add
mov
add
ficoml
cld
shrb
in
iret
jle
add
lcall
inc
cld
push
push
push
push
push
push
lea
push
call
add
stos
add
cltd
add
add
pop
test
add
add
mov
add
into
loopne
add
push
add
add
add
call
sub
pop
mov
push
pop
cmp
jne
push
push
push
push
call
fdivr
add
add
jae
movsl
mov
add
add
add
add
out
bound
xchg
mov
aad
out
add
stos
xchg
fwait
mov
test
jge
jns
scas
std
mov
leave
add
rclb
add
inc
adc
add
add
add
sbb
lahf
push
pop
push
add
push
call
xchg
mov
add
std
add
ljmp
push
sahf
out
loopne
jo
lea
jne
add
out
sub
pop
jmp
mov
push
inc
lea
pop
cmpw
jne
push
push
lea
push
call
add
add
jmp
add
iret
jbe
notb
add
mov
add
idiv
test
add
add
add
in
mov
sub
pop
mov
movl
push
rol
add
pop
jmp
pushl
push
ror
pop
pop
push
push
push
call
add
xchg
nop
mov
in
out
stos
flds
pop
lcall
je
add
add
add
out
fildll
add
mov
add
mov
xchg
add
jbe
flds
add
inc
or
shl
xor
pop
mov
mov
push
push
xor
ror
push
sub
add
sub
add
sub
sub
rol
xor
inc
pop
shr
shr
shr
pop
push
push
push
lea
push
push
call
add
add
add
addl
pop
pop
test
add
popf
add
add
test
popa
loope
pop
add
add
push
push
lret
fucomi
add
mov
add
add
sub
pop
push
push
lea
pop
call
cmpl
je
push
push
dec
lea
xor
push
or
inc
add
xor
add
not
sub
rol
pop
xor
pop
push
xor
not
inc
pop
push
push
shr
lea
pop
call
push
add
pop
cmpl
je
push
push
dec
push
push
pop
add
add
xor
sub
rol
pop
pop
push
sub
pop
push
push
not
pop
call
push
push
push
push
lea
push
lea
push
push
call
in
mov
mov
xchg
fiaddl
stos
jmp
roll
mov
add
add
mov
add
add
jnp
test
mov
enter
mov
fisubs
mov
add
add
mov
add
cmp
add
int3
je
push
push
add
rol
push
or
not
add
add
ror
sub
add
pop
inc
pop
push
push
push
push
call
add
mov
xchg
add
mov
mov
add
ljmp
pusha
pop
add
mov
xchg
add
iret
add
add
jge
outsl
add
add
push
add
add
je
add
jmp
ja
push
jl
out
pop
cmpsb
je
mov
pusha
fisubrs
lcall
call
push
push
push
push
push
push
push
call
movsl
je
add
adc
add
mov
add
fiaddl
scas
js
push
pop
add
add
in
lds
add
add
insb
push
add
add
js
add
mov
add
mov
mov
add
mov
add
movsb
sub
pop
cmpl
je
push
push
add
push
or
not
add
add
sub
rol
sub
pop
add
add
pop
push
push
push
push
lea
push
push
push
lea
push
call
into
sarb
leave
mov
add
icebp
ror
add
pop
add
je
xchg
mov
add
add
add
push
xchg
les
mov
push
push
filds
movsb
jmp
jo
xchg
add
add
add
mov
pop
add
mov
mov
pop
push
call
push
lea
add
pop
cmpl
je
push
push
sub
push
xor
add
shr
shr
sub
ror
pop
pop
push
dec
add
add
pop
push
push
xor
sub
shr
pop
call
push
lea
sub
add
pop
cmpl
je
push
push
xor
not
sub
inc
push
or
inc
add
shr
sub
sub
ror
pop
shl
shr
rol
pop
push
push
push
call
add
mov
add
pop
lcall
add
add
andb
add
xchg
pop
lret
jmp
fsqrt
test
in
add
divb
cmc
add
out
outsl
add
pop
flds
mov
sub
pop
push
push
sub
dec
pop
call
push
pop
cmpl
je
push
push
inc
push
xor
add
rol
sub
dec
shl
xor
pop
sub
not
pop
push
push
call
rclb
add
fiaddl
add
mov
jge
add
add
loope
add
add
pop
add
push
sub
pop
push
push
pop
call
push
sub
xor
not
pop
cmpl
je
push
push
not
push
push
pop
add
add
xor
add
shr
sub
inc
pop
inc
lea
shr
pop
push
rol
xor
pop
push
push
sub
pop
call
push
rol
shr
dec
pop
cmpl
je
push
push
inc
push
and
add
dec
add
shr
sub
sub
ror
pop
not
xor
pop
push
lea
push
push
lea
push
lea
push
call
pop
rcrb
icebp
icebp
imul
loope
pop
repnz
mov
add
add
xchg
rol
rcr
shl
add
fiadds
fists
out
add
add
add
stos
icebp
add
jp
add
mov
mov
add
fwait
add
add
roll
add
addr16
lret
sub
pop
push
push
not
pop
call
push
lea
push
push
push
push
push
call
add
pop
in
add
pop
add
add
stos
add
xchg
movb
xchg
pop
cmpsl
add
xchg
icebp
enter
xor
push
xchg
out
add
lods
add
lcall
cmp
test
add
add
sub
mov
sub
push
and
add
sub
shr
sub
xor
pop
inc
xor
xor
pop
push
lea
pop
push
push
inc
rol
rol
pop
call
push
ror
shl
pop
cmpl
je
push
push
add
lea
push
xor
add
xor
inc
shr
sub
sub
dec
pop
not
pop
push
push
push
push
push
push
push
push
call
mov
mov
add
push
aam
fdivl
add
je
jbe
jo
add
add
pusha
jno
mov
add
jnp
call
mov
lcall
call
push
xor
pop
cmpl
je
push
push
add
push
sub
add
xor
sub
ror
pop
inc
not
sub
shl
pop
push
shl
ror
pop
push
push
sub
add
pop
call
push
add
not
pop
cmpl
jne
push
inc
pop
mov
push
pop
movl
push
push
lea
push
lea
push
push
push
call
cmpsl
imul
andl
add
ret
add
xchg
negl
clc
in
add
cld
add
add
ret
add
add
gs
jns
mov
in
mov
add
add
sub
pop
jmp
push
shl
add
not
inc
pop
xor
pop
push
rol
pop
pop
push
pop
pop
push
lea
push
call
add
in
lods
pop
mov
mov
mov
out
add
les
cmpsb
lahf
fcomps
add
xchg
fcmovu
rolb
add
xchg
add
imul
cmc
in
jae
sub
pop
pop
push
push
push
push
lea
push
call
insb
mov
push
add
mov
mov
add
add
jmp
xchg
mov
call
mov
add
add
lcall
push
lea
shl
pop
ret
push
add
pop
push
mov
push
not
inc
pop
add
cmpl
jne
push
push
sub
push
or
not
add
sub
sub
dec
xor
pop
sub
sub
pop
push
shr
not
ror
pop
pushl
push
inc
pop
call
push
push
push
lea
push
push
push
push
push
push
call
mov
in
add
fcomps
fstpl
add
imul
leave
add
add
js
pop
add
js
xchg
cwtl
add
mov
add
cmc
add
lods
pop
add
add
loop
add
jne
cmp
out
lcall
add
add
lds
enter
in
fcompl
call
push
shr
not
pop
jmp
push
add
pop
cmpl
je
cmpl
jne
push
push
call
add
add
pop
mov
stc
add
add
scas
mov
icebp
in
add
add
push
popf
sub
pop
leave
push
lea
shl
pop
add
push
dec
shl
pop
pop
push
push
lea
push
push
push
push
call
xlat
ror
imul
add
mov
lea
scas
ljmp
lret
imul
mov
test
lcall
pop
push
lea
xor
add
pop
pop
push
inc
add
pop
leave
push
rol
pop
add
push
push
push
push
call
lcall
in
je
add
ljmp
pop
add
incb
add
add
add
hlt
jl
mov
pop
loop
ret
push
pop
push
sti
les
push
sub
pop
ret
push
inc
ror
sub
pop
jmp
push
shr
dec
pop
cmpl
jne
push
push
shl
shr
sub
push
xor
add
shl
dec
sub
sub
sub
shr
pop
pop
push
push
push
push
push
push
push
push
push
push
call
je
stos
mov
scas
jae
xchg
les
pop
hlt
mov
les
add
jno
add
add
add
cmpsl
add
fdivr
lcall
jne
push
push
push
push
call
add
add
int3
out
filds
add
add
iret
push
mov
add
rolb
leave
pop
add
mov
push
add
add
cmpsl
mov
ljmp
pusha
pusha
jecxz
add
push
insb
out
push
push
jbe
mov
fnsave
in
lock
call
push
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
jmp
add
mov
jo
xchg
lods
add
mov
xchg
add
jnp
pop
mov
jecxz
pusha
jecxz
stos
cmpb
fadds
mov
fldl
int3
in
mov
lcall
rclb
adc
push
lea
push
push
push
push
push
call
add
add
mov
add
data16
fiadds
mov
loop
push
mov
add
mov
cmpsb
add
add
jne
add
mov
add
arpl
movsl
add
push
in
loopne
lcall
pop
sbb
int
int
cmpl
jne
push
push
push
push
push
call
nop
test
add
mov
in
add
add
loope
mov
stos
fs
add
fadds
add
lahf
fisubrl
add
fdivrs
ror
add
mov
out
mov
add
add
pop
pop
pop
add
ret
jmp
add
stos
add
jp
add
cmpsb
xchg
repnz
pop
mov
mov
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
add
loopne
test
mov
in
add
mov
stos
addb
aad
jle
imul
cwtl
ja
lock
fisubl
mov
jmp
add
xlat
roll
lret
add
popf
lea
mov
imul
fcomps
push
push
add
ror
push
and
add
ror
lea
sub
shl
add
shr
pop
inc
pop
push
push
push
push
push
lea
push
push
push
push
call
cltd
popa
add
add
add
add
std
imul
xchg
nop
add
add
imul
movsb
add
jl
add
add
jbe
cwtl
mov
outsl
push
leave
mov
add
lcall
jne
push
push
lea
push
push
push
push
push
push
push
call
add
push
add
push
add
sti
ja
mov
push
add
fadd
pop
add
loope
into
jb
mov
in
fdivr
lcall
cwtl
daa
add
call
push
push
shl
lea
inc
push
push
pop
add
add
rol
xor
add
sub
lea
pop
dec
sub
lea
pop
push
rol
inc
pop
pushl
push
push
push
push
lea
push
push
push
push
push
push
call
add
clc
insb
loope
cld
in
jl
addr16
int3
xchg
leave
fiaddl
shl
add
add
add
push
imul
stos
jno
rolb
rcrb
add
mov
std
add
into
add
pop
pop
int3
out
bound
xchg
push
add
mov
in
fdivr
lcall
into
add
call
push
push
xor
add
shr
push
sub
add
dec
rol
shr
sub
pop
not
pop
push
not
sub
inc
pop
pushl
push
sub
sub
pop
call
push
lea
push
push
push
call
jae
add
push
mov
add
add
add
add
add
add
out
in
add
mov
add
movb
add
lock
call
push
push
add
lea
not
push
or
not
add
sub
add
sub
not
pop
rol
sub
sub
pop
push
push
lea
push
lea
push
push
call
add
add
scas
lahf
kmovw
add
pop
scas
int3
jb
add
add
fcomps
add
test
data16
scas
mov
lcall
jne
call
push
push
push
push
push
lea
push
push
push
call
add
add
aam
xchg
add
std
lcall
lods
pop
nop
jno
addb
rolb
add
add
push
add
into
add
add
out
movb
mov
cwtl
add
jns
jmp
imul
fsubrp
add
add
call
js
cmpl
add
add
call
push
push
shl
push
xor
add
sub
sub
not
not
pop
xor
lea
rol
shr
pop
push
lea
shl
dec
pop
pushl
push
rol
rol
shl
rol
pop
call
push
push
push
push
push
push
lea
push
push
push
call
mov
add
jo
cmpsb
jl
add
push
jno
mov
jns
ljmp
roll
jecxz
add
jp
cli
jecxz
add
mov
fdivr
lcall
shrb
rcrl
and
add
dec
sub
dec
pop
sub
pop
push
push
push
push
lea
push
push
push
push
call
push
popl
movsl
add
jo
stc
int3
pop
bound
mov
roll
testb
jge
mov
add
in
mov
frstor
in
loopne
lcall
jne
push
push
push
push
push
push
call
add
cmpb
mov
pop
subl
scas
add
xlat
add
add
aad
add
in
add
lock
lods
cmpsl
add
roll
mov
add
call
push
push
not
push
xor
add
ror
sub
pop
ror
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
xchg
jmp
add
roll
xchg
aad
mov
jo
mov
add
mov
outsl
add
xchg
stos
mov
mov
add
jno
add
add
add
sub
pop
pushl
push
rol
pop
call
push
push
lea
push
push
lea
push
push
lea
push
call
fistpll
movsl
jle
mov
stos
add
push
add
sbbb
fstpt
lret
popf
call
add
add
test
add
mov
mov
add
pop
out
lods
add
add
jge
add
mov
fildl
shrb
filds
push
or
not
add
dec
ror
add
dec
sub
rol
sub
pop
shl
sub
pop
push
dec
pop
pushl
push
push
push
push
push
lea
push
call
repnz
add
insb
add
jle
mov
aam
pushf
je
test
mov
cld
add
push
add
add
add
push
add
xchg
add
lret
add
cltd
add
mov
sub
pop
call
push
add
rol
pop
call
push
push
shr
rol
push
xor
add
dec
rol
ror
sub
add
pop
dec
pop
push
xor
sub
pop
pushl
call
push
lea
push
call
lods
add
xlat
loop
xchg
add
fiaddl
outsl
add
pop
loop
jmp
add
mov
mov
mov
pop
test
add
add
shrb
mull
mov
shl
dec
push
sub
add
xor
dec
sub
pop
add
pop
push
rol
lea
pop
pushl
call
push
push
lea
push
push
push
push
push
lea
push
push
push
call
roll
xchg
add
ja
jl
test
hlt
add
add
add
lea
in
xchg
jb
imul
pop
jle
add
push
add
cmc
add
lods
mov
add
add
jne
fldt
js
loopne
flds
lcall
pushf
and
call
ja
ficoml
lea
push
push
push
push
call
add
in
push
pop
fidivrl
cmpsl
mov
jmp
push
xchg
pop
call
test
lods
xchg
xlat
movb
stos
movl
add
fstl
add
cwtl
add
lcall
push
lea
push
push
lea
push
push
lea
push
push
call
lds
lret
int
add
lds
add
aad
add
pop
add
movsb
shlb
add
pop
mov
arpl
add
push
add
add
jno
add
jne
jns
iret
in
ljmp
lahf
add
mov
pusha
test
push
out
scas
fs
xchg
shrb
cmp
rclb
enter
incl
sarb
lea
sub
pop
sub
pop
push
lea
pop
pushl
call
push
lea
push
push
push
push
push
call
in
jecxz
je
add
outsl
add
jnp
movsb
popf
add
jmp
stos
hlt
push
mov
icebp
in
add
fiadds
icebp
add
sahf
sub
pop
call
push
push
sub
sub
add
push
sub
add
add
rol
sub
rol
pop
dec
pop
push
lea
push
push
lea
push
lea
push
lea
push
push
call
pop
fldl
add
mov
shlb
mov
add
add
jecxz
into
js
int
jne
mov
mov
add
mov
sub
pop
pushl
push
push
lea
push
lea
push
call
jb
mov
push
add
into
test
out
add
add
add
andb
add
in
add
add
add
fiadds
mov
cwtl
add
add
add
add
ja
add
add
sub
pop
call
call
push
push
xor
rol
push
or
not
add
dec
xor
dec
sub
pop
inc
dec
sub
pop
push
pop
pushl
push
rol
dec
dec
pop
call
push
not
pop
call
push
push
lea
push
call
repnz
test
push
rolb
icebp
mov
ret
ljmp
add
rolb
lret
push
add
pop
nop
add
out
pop
add
sub
pop
lea
push
push
inc
add
sub
add
push
xor
add
inc
not
add
sub
not
sub
lea
pop
sub
shl
pop
push
push
push
lea
push
push
push
call
add
add
add
movsl
ljmp
add
jo
lahf
push
jmp
mov
mov
jle
add
add
add
mov
mov
add
cltd
cld
faddl
stos
mov
cld
add
sub
pop
pushl
push
xor
ror
pop
call
push
lea
pop
push
push
push
push
call
jno
cmpsb
pop
add
mov
jae
rolb
mov
add
add
nop
popa
data16
add
add
out
add
roll
add
mov
ja
fldl
add
mov
stc
add
add
jle
add
cli
add
sub
pop
call
push
push
add
sub
push
push
pop
add
sub
not
sub
inc
add
pop
add
dec
add
pop
push
ror
inc
pop
pushl
call
push
inc
not
pop
call
push
push
push
lea
push
call
add
andb
xchg
aad
scas
add
int
add
add
mov
mov
add
add
add
push
add
neg
lret
add
add
mov
add
jne
ljmp
cmc
mov
in
lock
lcall
inc
cld
push
push
ror
rol
push
xor
add
not
dec
sub
sub
not
pop
not
shr
pop
push
rol
sub
pop
pushl
push
sub
pop
call
push
push
lea
push
call
jge
push
add
fistpll
add
pop
jnp
mov
xchg
add
mov
push
cmc
add
jecxz
jb
push
fistpl
incb
add
out
lret
add
hlt
add
lcall
add
xchg
cld
xchg
mov
call
push
push
add
shr
push
sub
add
add
sub
inc
rol
lea
xor
pop
add
rol
shl
sub
pop
push
sub
pop
pushl
push
add
ror
pop
call
push
push
sub
add
rol
push
or
inc
add
rol
ror
sub
add
pop
not
ror
pop
push
push
not
ror
dec
push
xor
add
rol
shr
dec
add
sub
ror
sub
dec
pop
sub
pop
push
push
push
push
push
lea
push
call
nop
mov
jge
cwtl
lds
add
jecxz
push
push
test
add
add
lock
mov
xchg
les
add
add
xchg
shrb
and
push
ror
push
xor
add
xor
add
sub
add
pop
rol
lea
shr
pop
push
sub
inc
pop
pushl
push
dec
add
pop
call
push
shl
pop
mov
push
push
push
lea
push
call
add
pop
add
add
mov
lods
repnz
movsl
add
xchg
xchg
add
add
add
rclb
add
pop
jbe
ljmp
add
nop
add
xchg
add
add
jnp
add
add
add
subl
pop
lea
lea
push
ror
ror
add
not
pop
push
push
push
push
lea
push
push
push
push
push
call
je
pop
popa
pop
imul
mov
add
cmpl
mov
add
imul
jp
add
aam
add
rcll
popf
add
lcall
lds
add
add
clc
mov
add
nop
data16
mov
stc
add
add
push
push
push
call
add
add
js
mov
add
out
jl
push
mov
fisubs
add
jmp
pop
js
aam
jo
fadds
mov
addl
popl
add
int3
notb
add
aad
add
lahf
fcmovu
fucomp
add
faddl
hlt
jmp
popl
roll
mov
add
sub
pop
push
push
xor
ror
inc
shr
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
adcl
mov
pop
sarl
cmpl
out
add
add
nop
in
lahf
add
cmpsl
add
add
jo
aam
add
loopne
icebp
add
mov
out
add
add
add
pushf
iret
mov
jnp
fsubs
loopne
lcall
add
push
shl
dec
pop
push
push
inc
pop
pushl
push
shr
sub
pop
push
push
not
pop
call
push
push
lea
push
or
not
add
sub
xor
sub
xor
pop
not
lea
pop
push
xor
ror
dec
pop
pushl
push
pop
call
call
push
sub
pop
mov
push
add
sub
add
not
pop
pop
push
ror
pop
dec
jne
push
ror
add
inc
pop
jmp
push
rol
inc
pop
call
push
push
xor
push
or
not
add
sub
shl
xor
sub
sub
pop
add
pop
push
sub
pop
pushl
push
lea
push
push
push
push
lea
push
push
call
insb
add
cwtl
loope
cld
add
pop
add
add
movsl
jnp
add
fs
fs
pop
roll
xchg
cltd
xlat
fildl
push
add
mov
mov
add
rclb
add
pop
mov
xchg
addl
xchg
xchg
xchg
shlb
xchg
add
add
lcall
cmp
add
push
push
lea
push
push
push
push
push
call
add
add
add
push
imull
mov
arpl
jb
ficomps
add
cli
aam
into
in
pusha
add
ret
add
aam
bound
into
scas
add
add
popf
in
aad
push
mov
add
fldl
lcall
rclb
inc
bound
fsts
push
push
call
add
mov
subb
aad
add
add
add
add
add
add
add
out
rcll
mov
xchg
int
pushf
add
test
shrb
add
push
cmc
addb
mov
int3
push
pop
xchg
mov
add
mov
in
add
pop
mov
in
in
mov
push
push
lea
push
call
lea
movl
add
add
add
ret
movsb
loope
gs
cwtl
add
add
cwtl
filds
add
add
icebp
enter
addr16
add
xorb
jae
lahf
jno
lcall
add
mov
sarb
push
sti
add
pop
add
add
lcall
pushf
and
ljmp
bound
and
xor
out
push
push
pop
add
sub
add
ror
lea
sub
not
dec
pop
rol
lea
sub
shr
pop
push
push
call
aad
add
stos
add
add
jl
mov
jp
add
mov
push
mov
bound
xchg
add
mov
pop
xchg
push
add
add
add
scas
iret
add
add
mov
add
sub
pop
pushl
push
push
push
push
lea
push
push
call
add
add
add
add
hlt
mov
add
add
shll
into
add
lds
stos
stos
add
add
lock
stos
xchg
into
add
loope
add
gs
jae
cwtl
addr16
je
scas
mov
sub
pop
call
push
push
push
push
push
call
add
stc
add
idiv
push
add
cltd
icebp
shrb
mov
add
add
push
test
pop
add
add
jbe
insb
jno
add
fmul
push
shlb
iret
add
add
sub
pop
push
call
push
push
add
push
or
not
add
dec
lea
shl
inc
sub
sub
sub
pop
not
sub
rol
rol
pop
push
shl
pop
pushl
push
dec
pop
call
call
push
push
push
push
call
add
stos
add
add
js
mov
lea
lret
mov
jp
add
pop
fucomp
loopne
xchg
add
jecxz
add
movsb
add
add
loope
cmpsb
lret
add
jecxz
std
ficoms
mov
xchg
js
cld
je
add
pop
mov
push
push
call
mov
ljmp
add
pop
add
iret
jne
jmp
add
pop
fdivrl
add
add
popf
in
xchg
add
cmpsb
out
add
lcall
pushf
and
ljmp
idiv
mov
add
push
or
inc
add
rol
sub
add
pop
ror
not
pop
push
sub
pop
pushl
push
lea
push
push
call
add
push
scas
add
add
add
add
sbbl
add
test
fwait
add
fsubrl
add
cwtl
add
icebp
sub
pop
call
lea
push
push
call
out
rolb
add
xchg
add
je
cmpsl
add
ja
repnz
mov
add
add
fwait
xchg
ja
add
testb
aad
add
add
add
mov
add
sub
pop
push
push
push
push
push
push
call
iret
mov
add
mov
add
pusha
icebp
add
add
add
mov
mov
aam
enter
lock
lcall
add
adc
pushl
cld
pop
pushl
push
push
inc
not
push
sub
add
lea
sub
shl
add
sub
pop
add
pop
push
push
call
add
and
mov
mov
fiaddl
mov
int3
popf
pop
add
pushf
movsb
add
mov
add
sub
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
fisubl
lret
sti
lret
add
faddl
xlat
mov
add
cltd
testb
jno
imul
add
lahf
sub
pop
call
push
push
xor
not
not
dec
push
sub
add
not
rol
sub
sub
sub
inc
shl
rol
add
pop
add
xor
dec
inc
pop
push
push
push
push
call
add
add
push
mov
pop
cwtl
testb
add
add
rolb
add
add
add
hlt
mov
aad
mov
add
in
add
pop
test
aad
loope
divb
rorb
iret
shlb
in
lock
lcall
jne
call
push
inc
add
pop
push
push
push
lea
push
push
lea
push
push
push
call
mov
pop
gs
jb
enter
mov
add
add
add
fstl
push
add
add
pop
mov
add
add
jne
add
push
add
enter
add
test
flds
out
add
add
add
mov
add
mov
sub
pop
call
push
push
not
sub
xor
push
or
inc
add
sub
not
sub
add
pop
shl
inc
xor
sub
pop
push
push
push
push
call
push
add
add
mov
test
in
cltd
addb
add
out
fiaddl
in
xchg
jmp
xchg
mov
int
int
shll
add
in
add
add
add
xchg
addr16
add
pop
std
ljmp
pop
mov
add
lcall
jne
push
ror
xor
lea
ror
pop
call
push
add
add
sub
pop
call
push
add
xor
pop
jmp
push
push
push
push
lea
push
call
test
add
jmp
je
cmpsl
icebp
incb
stos
aam
add
in
addr16
sahf
mov
cld
mov
mov
add
sahf
add
cmc
cli
testb
stc
add
sub
pop
pushl
mov
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
mov
pop
push
add
cmpsl
pop
hlt
add
add
add
add
roll
xchg
push
mov
icebp
mov
add
subb
scas
add
add
sub
pop
jmp
push
push
add
xor
push
push
pop
add
sub
shl
shl
lea
pop
shr
shl
sub
pop
push
sub
pop
pushl
call
push
inc
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
mov
push
push
lock
add
add
add
mov
arpl
add
nop
add
scas
mov
add
add
lods
add
in
arpl
jno
out
out
add
push
imulb
xlat
pop
add
add
lcall
shrb
add
xlat
push
lea
shl
not
push
sub
add
rol
sub
sub
add
shl
add
pop
inc
lea
not
not
pop
push
dec
rol
dec
pop
pushl
call
push
rol
rol
sub
pop
push
push
push
push
push
lea
push
call
push
jne
call
xchg
add
mov
jge
mov
pop
ja
add
fildll
in
add
cld
add
xchg
stc
out
add
add
add
add
add
mov
ljmp
jns
push
sub
pop
call
leave
push
push
push
call
pusha
rcrb
add
add
add
movsb
lods
jbe
add
int
test
jmp
add
mov
push
jno
add
add
lcall
add
lahf
sub
pop
add
push
sub
dec
rol
pop
pop
push
dec
pop
pop
pop
push
rol
xor
ror
pop
pop
push
push
lea
push
push
lea
push
push
push
call
add
mov
add
add
negl
add
jge
add
cmpsb
add
fcompl
test
out
in
in
leave
add
push
push
push
lea
push
push
push
push
call
jl
pop
mov
push
add
mov
movl
add
fildl
lret
push
add
add
aam
pushf
loope
hlt
push
mov
pop
imul
add
xchg
fucomi
xlat
add
xlat
add
nop
imul
pop
jmp
sub
pop
ret
push
shr
shl
shr
add
pop
leave
push
push
lea
push
call
jae
add
jb
leave
sti
cwtl
imul
xchg
scas
mov
xchg
xchg
in
add
out
loope
add
lds
mov
sub
pop
ret
push
lea
push
lea
push
push
call
add
add
in
into
add
sbb
add
add
mov
add
add
push
add
add
stos
pushf
mov
mov
add
add
mov
xchg
add
add
enter
in
lock
push
push
sub
sub
pop
mov
push
add
sub
sub
shr
pop
cmpl
jne
mov
push
lea
push
lea
push
lea
push
call
lds
fwait
add
add
add
push
je
add
mov
add
pop
aam
mov
call
add
lds
add
add
loope
in
cmp
add
add
js
add
int
jecxz
sahf
fs
add
add
pop
iret
add
iret
test
add
push
int
loop
add
fs
add
add
loopne
mov
add
cld
mov
add
add
add
add
inc
or
loopne
push
push
push
call
fcom
fidivrl
add
add
fcomi
lods
add
add
jmp
add
add
jecxz
call
mov
loope
test
mov
sahf
add
scas
add
scas
sub
pop
xor
xor
push
rol
add
pop
add
xor
push
lea
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
mov
mov
mov
add
xchg
int
test
add
ljmp
add
jo
lods
add
add
jne
xchg
add
mov
fwait
jb
add
iret
add
add
cmc
pop
add
in
fcomps
push
push
push
push
lea
push
call
stos
add
lds
add
in
xchg
add
add
pushf
add
sti
add
add
pop
jp
rcrb
clc
pop
sarb
pop
sub
jmp
push
shl
pop
sub
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
cli
add
add
add
mov
cmc
pop
movsb
add
jge
mov
js
in
mov
xchg
in
xchg
fldl
ljmp
fmull
loopne
pushl
push
rol
add
add
pop
pop
push
dec
pop
sub
push
sub
not
ror
pop
cmp
jne
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
xchg
add
xchg
mov
ja
jae
mov
add
jp
orl
mov
nop
fsub
xlat
add
xchg
loope
add
add
push
xchg
add
int
push
fcompl
push
add
add
in
fdivr
lcall
dec
cmp
inc
shl
pop
sub
push
lea
push
call
pushf
mov
xchg
add
mov
add
outsl
add
jae
add
mov
jecxz
add
popa
xchg
mov
mov
in
clc
pop
mov
push
rol
add
pop
shr
add
push
sub
pop
sub
push
lea
pop
pushl
push
push
push
push
call
movsb
in
push
mov
add
lret
add
mov
add
add
mov
add
roll
sub
pop
pop
push
push
lea
push
push
call
lock
mov
add
cmpsb
push
out
push
in
mov
add
add
add
fisttps
rolb
jge
in
lock
shr
and
push
sub
shr
pop
sub
push
rol
pop
cmp
jne
leave
push
xor
dec
pop
ret
push
add
pop
push
push
dec
pop
mov
add
push
add
xor
inc
pop
push
push
lea
xor
not
pop
push
push
push
push
call
add
popa
enter
add
add
add
add
pusha
hlt
movsl
push
add
pop
add
add
push
add
add
lock
add
add
cmpsb
sub
pop
push
push
push
push
call
xchg
mov
add
test
mov
add
iret
lcall
enter
xchg
jbe
add
popf
cmpsb
add
in
iret
add
add
jmp
mov
hlt
lcall
push
ror
ror
xor
pop
mov
push
ror
sub
pop
lea
push
push
push
push
push
push
push
push
push
push
call
add
add
jns
add
add
add
jnp
test
add
hlt
je
jbe
add
add
xchg
pop
call
pop
xchg
add
loopne
icebp
xchg
iret
add
jmp
push
add
fcmovnb
jp
add
fldl
jns
mov
in
fcomps
ljmp
ljmp
add
push
inc
rol
sub
pop
mov
push
lea
push
push
push
push
lea
push
call
add
jnp
jne
add
ret
addr16
movsb
cltd
cltd
fdivs
jmp
add
add
stos
add
add
add
lcall
pop
or
push
push
lea
push
push
push
push
push
push
push
call
mov
in
add
push
add
fldl
add
rolb
add
add
imul
push
add
mov
mov
add
add
lret
jae
in
add
jnp
add
out
xchg
add
jp
in
fcomps
jge
push
add
ror
add
dec
pop
xor
mov
push
lea
push
push
push
push
push
push
call
add
add
bound
mov
rcrl
loop
test
loopne
outsl
les
fdivrl
in
in
lcall
loopne
rol
push
not
lea
add
pop
rol
xor
push
dec
add
inc
pop
inc
cmpb
jne
push
lea
push
push
call
add
mov
lods
rcll
xchg
stos
leave
add
fiaddl
fstps
ja
fadds
add
add
mov
add
jne
mov
add
out
in
push
ja
mov
jno
cld
add
fs
add
pop
add
push
dec
pop
cmp
je
add
push
add
add
sub
add
pop
cmpl
jne
push
push
push
push
call
add
add
ret
add
pop
lods
jb
fucompp
mov
arpl
push
add
add
outsl
int
add
cli
sub
pop
xor
push
lea
add
shl
pop
pop
pop
push
add
shl
pop
pop
pop
push
add
add
add
shr
pop
pop
leave
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
out
jae
pop
add
lods
xchg
movb
add
in
add
add
add
add
sub
pop
ret
push
xor
shl
pop
mov
push
push
push
call
pop
fimuls
cmc
fistpll
add
add
iret
add
add
icebp
lcall
add
add
xchg
add
add
pusha
incb
mov
mov
hlt
clc
mov
ret
jmp
cli
add
add
hlt
lcall
push
or
lea
push
push
lea
push
push
lea
push
push
push
push
call
cmc
rolb
push
add
mov
pop
jge
cwtl
in
xchg
aam
mov
mov
aam
xchg
add
aad
push
mov
fildl
push
add
jl
add
addr16
ja
xlat
bound
add
divb
out
fiaddl
add
push
push
push
push
push
call
js
fidivrl
arpl
add
jne
add
xchg
imul
ror
mov
add
mov
cli
add
std
std
pop
add
add
in
test
add
idivl
add
add
add
xchg
add
shlb
int
mov
push
xchg
mov
sub
pop
mov
push
lea
push
push
lea
push
call
add
add
fs
add
add
addb
clc
popa
cmpsb
mov
sti
addl
add
add
lea
add
mov
lea
mov
xchg
mov
add
add
arpl
jo
in
lock
testw
push
push
push
lea
push
push
push
call
pop
add
addb
add
cmpb
std
xchg
add
xchg
mov
test
out
add
leave
add
push
rcr
add
add
add
add
add
pop
pop
push
shr
inc
pop
pop
mov
push
pop
push
push
push
push
push
push
call
pop
enter
add
add
add
add
je
add
jp
pop
js
add
mov
add
add
mov
test
into
xchg
jbe
mov
add
cmpsl
fidivs
divb
fidivs
in
in
pop
call
push
ror
pop
xor
push
shr
add
dec
not
pop
pop
pop
push
push
call
sti
mov
loop
add
mov
popf
add
add
aam
roll
mov
jno
add
add
fistps
add
add
sub
pop
pop
push
ror
pop
pop
pop
push
pop
leave
push
push
push
push
lea
push
push
push
push
call
incb
add
pop
add
jae
add
out
cmpsb
add
add
add
js
push
add
data16
lds
in
loopne
ret
push
lea
push
push
push
push
call
popa
bound
add
in
lods
add
pop
fcompl
mov
pop
add
add
cmpsb
fildl
add
add
int
mov
in
in
lcall
mov
push
push
push
push
lea
push
call
add
movsb
mulb
testl
add
cltd
add
lods
shll
fstpt
add
add
jl
icebp
mov
mov
mov
movsb
add
outsl
mov
add
in
ret
in
in
lcall
hlt
push
lea
push
push
push
lea
push
call
add
lods
jecxz
add
add
pop
aam
scas
add
lock
repnz
add
jae
andl
add
jo
add
roll
js
push
add
out
add
in
lcall
push
push
lea
push
lea
push
push
push
push
lea
push
call
popf
js
mov
add
imul
push
add
imul
add
mov
fsub
xchg
loop
add
mov
add
push
icebp
cmc
pop
push
add
movl
mov
add
add
sub
pop
push
push
shr
sub
pop
push
mov
push
inc
pop
push
push
push
lea
push
push
call
movsb
add
jl
filds
add
xchg
add
lcall
out
lea
outsl
cwtl
leave
add
mov
mov
push
movsl
mov
fwait
rol
mov
in
lock
pop
lea
push
push
push
lea
push
push
push
call
fildl
mov
mov
neg
arpl
add
add
insb
add
add
add
jne
out
mov
add
int3
js
mov
mov
add
pusha
add
jno
mov
mov
mov
add
movsb
add
add
jge
jo
jne
scas
push
cmpsl
in
add
lcall
ljmp
xor
pop
shr
push
lea
push
push
lea
push
push
push
lea
push
call
stos
xchg
js
add
add
add
add
add
add
xchg
add
in
add
add
out
push
ljmp
push
push
add
add
hlt
add
pop
add
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
pushf
ljmp
sti
add
add
ficompl
mov
cltd
add
cmpsl
fldl
lcall
call
scas
notb
lock
add
sbbb
in
popf
mov
add
lods
jmp
gs
pop
add
pushl
push
shr
ror
pop
popl
push
push
push
push
push
call
ljmp
mov
sbb
lret
mov
outsl
add
testl
add
mov
aam
sahf
jle
ja
jle
add
rcl
add
sub
pop
mov
add
push
xor
add
shr
pop
xor
push
lea
push
lea
push
push
lea
push
push
call
insb
call
mov
enter
add
popa
jmp
jp
jge
in
mov
add
add
lock
roll
call
lea
mov
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
jnp
fcmovnu
jnp
into
hlt
add
pop
mov
call
fcomp
add
xchg
sti
into
roll
add
add
cmpsl
add
add
in
pop
loop
add
les
adcl
in
fcompl
rcll
enter
push
push
lea
push
push
push
push
push
push
push
push
call
lods
mov
aam
in
add
push
fwait
mov
add
icebp
add
lock
add
cli
push
add
jae
iret
add
filds
add
int
add
add
mov
add
addb
lea
addb
add
push
sub
pop
rol
nop
push
push
push
push
lea
push
lea
push
lea
push
push
call
adc
mov
mov
add
add
jne
out
add
call
add
mov
fadd
filds
xchg
in
add
add
sub
pop
nop
push
push
push
call
ja
add
mov
jmp
add
rclb
pushf
lret
add
sahf
mov
test
cwtl
add
add
add
lcall
add
ljmp
aad
nop
push
push
lea
push
push
push
call
test
out
add
jno
mov
std
out
add
add
add
pop
roll
add
cmpsb
int3
jae
add
add
add
push
sahf
cmpb
add
add
xchg
add
push
movb
push
add
loop
int3
jb
test
add
add
rolb
sub
pop
nop
push
lea
not
rol
pop
inc
push
ror
rol
pop
nop
push
lea
push
push
push
push
call
ja
fiadds
clc
cld
jmp
mov
out
xchg
add
jne
add
add
addr16
add
scas
out
add
fiadds
addl
test
movb
xchg
std
add
add
icebp
ror
lret
out
pop
xchg
addr16
aad
add
arpl
cmpsb
add
cmc
lahf
fs
mov
mov
cmc
sub
pop
nop
push
push
call
push
cld
shll
xchg
mov
subb
add
add
add
fwait
add
add
jl
mov
add
mov
gs
add
add
add
leave
insb
push
test
roll
jno
jb
idivb
add
add
push
push
add
stos
icebp
aad
add
sub
pop
cmpb
jne
add
push
push
push
push
push
push
call
add
pop
popl
add
pop
lahf
flds
pop
outsl
add
nop
fldl
add
mov
in
lret
add
clc
add
add
xorb
in
call
nop
push
pop
nop
cmp
je
push
push
lea
push
push
push
lea
push
call
add
test
fiaddl
mov
cmpsb
in
repnz
xchg
test
jne
add
jmp
les
out
jns
scas
in
repnz
lock
mov
jno
add
add
lea
mov
add
fcmovne
sahf
add
add
add
fildl
add
sub
pop
nop
push
lea
push
push
push
push
push
lea
push
push
push
push
call
sar
out
test
xchg
add
mov
insb
add
cli
add
mov
add
push
add
add
add
add
add
mov
mov
add
add
addb
lcall
fiaddl
add
jecxz
int3
cli
scas
add
mov
add
cltd
shrb
roll
push
add
nop
push
add
dec
not
pop
inc
push
shr
rol
pop
nop
push
add
add
pop
nop
push
push
push
call
add
ret
add
add
test
push
add
add
add
mov
les
mov
movsb
add
rolb
int
jo
add
fucom
js
add
filds
sub
pop
cmp
jb
push
not
shl
shl
lea
pop
xor
push
push
call
add
add
add
flds
add
add
cwtl
cli
pop
jns
pop
xchg
add
icebp
xlat
jmp
add
add
iret
test
mov
imul
add
add
ret
inc
pop
mov
add
push
sub
pop
movzwl
push
rol
dec
pop
mov
add
push
inc
rol
pop
mov
xor
push
inc
dec
xor
add
pop
xor
push
push
push
lea
push
push
push
call
add
jne
pushf
pop
movb
sbbl
add
mov
mov
cld
cmpsb
in
add
add
add
cmc
jp
add
add
nop
pop
mov
roll
mov
add
push
lods
out
add
pop
jo
xchg
mov
add
call
xor
push
sub
ror
rol
pop
shl
xor
push
sub
sub
pop
shl
xor
push
push
push
push
push
push
call
add
add
pusha
scas
call
flds
mov
faddl
cli
popl
xchg
jle
pop
jb
add
xchg
add
repnz
repnz
mov
add
add
add
lcall
rcll
jno
das
sahf
pop
add
push
pop
pop
pop
push
push
push
push
call
cli
int
add
mov
add
test
fiaddl
add
mov
add
add
xchg
fst
fwait
push
add
xchg
pop
jle
in
add
add
aam
scas
mov
popl
into
lea
add
scas
test
add
mov
add
jmp
in
lock
pop
push
not
pop
pop
push
push
call
add
iret
movl
cmpsb
jbe
pusha
ret
add
add
add
add
fiaddl
mov
add
imull
fiaddl
push
add
scas
mov
movsl
mov
add
mov
in
clc
pop
leave
push
lea
shr
shl
pop
ret
push
push
push
push
push
lea
push
push
push
call
add
leave
pop
add
add
xchg
cmc
movsb
add
out
add
add
add
add
add
iret
add
add
add
loopne
add
shlb
add
push
add
add
add
jae
pop
add
fcomi
add
lret
call
push
jmp
loopne
lcall
push
inc
pop
mov
push
shl
xor
pop
push
push
push
push
push
push
push
lea
push
push
push
push
push
call
lock
fisubrs
rcrl
outsl
add
add
add
in
add
add
add
lahf
cmpsl
shl
add
fildll
fadds
test
add
add
xchg
add
aad
mov
movsb
add
add
lea
add
out
sub
pop
push
push
lea
push
push
lea
push
push
call
mov
add
jbe
pop
cli
xchg
add
add
scas
add
ficompl
add
push
mov
push
xchg
cld
cmpb
sub
pop
push
push
add
shl
shl
pop
mov
push
push
push
push
lea
push
lea
push
call
addl
cmc
call
cld
bound
add
cmc
lahf
jl
in
adcb
mov
xchg
add
mov
add
mov
add
add
shl
add
add
fbstp
add
add
aad
pop
movl
call
pop
mov
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
lahf
imul
pop
mov
pusha
push
leave
mov
je
mov
cwtl
sahf
cld
aad
push
push
cmc
fwait
add
add
stc
cmc
jp
mov
cwtl
mov
mov
mov
shll
add
rorb
test
or
add
dec
mov
lea
push
push
call
test
add
add
add
add
jge
movsl
std
out
add
out
add
push
stos
movsl
add
add
pusha
pop
fldl
mov
scas
lahf
jp
nop
push
test
jmp
add
lcall
in
lock
test
je
push
inc
ror
pop
mov
push
lea
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
sti
add
fcomps
cld
add
gs
js
add
mov
pop
filds
jecxz
jecxz
in
add
add
pop
bound
lds
in
fcomps
dec
or
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
add
stos
jmp
jbe
mov
xorb
cmpsb
pop
mov
add
push
xchg
xchg
movl
stc
aad
pop
mov
xchg
jb
rcll
mov
movsl
add
add
jp
add
mov
add
sub
pop
inc
cmp
je
push
push
push
push
call
rolb
lock
repnz
add
add
add
lcall
add
mov
fs
mov
xchg
andb
add
add
addb
loopne
loop
add
mov
add
lcall
rorb
jbe
add
push
push
push
push
call
jo
mov
ljmp
pop
shrl
clc
add
mov
add
mov
jge
lret
lock
add
add
add
mov
lcall
push
inc
push
push
lea
push
push
push
push
push
call
add
in
add
mov
xchg
mov
add
data16
add
int3
mov
cmpsb
push
test
in
cmp
je
push
push
push
push
push
push
push
push
call
les
add
xchg
mov
pop
cli
cmpsl
cmpsl
mov
mov
fnstsw
add
add
pop
fs
xchg
stos
pop
cmpsb
call
cli
push
leave
add
test
sti
mov
add
pop
ret
stc
jnp
out
add
cmc
mov
lret
sub
pop
test
jne
push
push
push
push
lea
push
push
push
push
push
push
call
add
mov
add
fs
popl
cmc
mov
in
mov
enter
add
flds
push
push
pop
jge
add
fildl
stos
sub
pop
xor
pop
push
lea
shl
dec
pop
pop
push
lea
push
push
call
xchg
roll
add
mov
add
mov
add
mov
add
shll
pushf
add
sarb
add
jl
in
hlt
lcall
push
sub
rol
pop
pop
push
push
push
push
lea
push
push
push
push
push
push
call
addl
add
add
mov
pop
in
add
mov
stos
insb
add
mov
mov
add
add
sub
pop
leave
ret
push
lea
push
push
push
lea
push
call
cli
add
push
js
test
iret
jmp
add
rolb
test
xchg
add
int
add
add
jp
add
mov
jo
add
shlb
testl
icebp
mov
jns
test
shl
add
add
rolb
mov
jle
add
sub
pop
mov
inc
push
push
push
lea
push
push
push
push
push
call
jp
sahf
clc
aad
push
loop
add
add
push
fdiv
add
add
out
add
iret
sti
sti
add
add
mulb
push
xchg
add
push
xchg
add
add
int
xchg
xorb
into
arpl
add
aad
add
ja
add
mov
mov
sub
pop
cmp
jne
push
rol
shl
rol
pop
lea
push
push
lea
push
push
push
call
add
push
mov
je
mov
add
mov
test
xchg
add
xlat
fsqrt
add
data16
ljmp
cmc
enter
pop
mov
add
loope
pop
movsl
sub
pop
mov
push
lea
push
push
push
push
push
call
insb
out
xchg
add
fstpl
add
mov
add
add
enter
add
pop
push
jl
mov
add
mov
mov
lea
lcall
in
test
add
add
pop
add
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
pop
sub
add
jp
add
jbe
mov
lods
xchg
jbe
std
add
add
pop
scas
add
jmp
add
pop
jb
add
add
fiadds
gs
sub
pop
cmp
jne
push
push
push
push
push
push
lea
push
push
push
push
call
mov
jo
mov
add
mov
add
xchg
add
lock
push
add
push
fwait
pop
lods
add
sub
pop
mov
test
je
push
push
call
add
fdivs
repnz
jl
jnp
add
ret
incb
imul
add
add
add
in
add
mov
add
add
add
add
loopne
subb
add
mov
roll
lcall
incw
jmp
rol
rol
pop
cmp
je
push
push
push
push
call
add
leave
add
xchg
cmc
outsl
add
add
loopne
addb
cltd
jb
popa
mov
add
mov
add
or
mov
in
clc
add
fadds
xchg
add
add
sub
pop
jmp
push
pop
xor
push
push
push
push
lea
push
call
add
xchg
jno
ljmp
xchg
pop
push
popl
add
data16
push
lcall
lea
mov
add
mov
add
fstpl
add
icebp
push
xchg
jb
add
mov
mov
addl
lcall
pop
push
xor
not
dec
pop
pop
pop
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
add
movsl
lea
mov
xchg
shr
jnp
bound
mov
pushf
push
call
fldt
add
add
mov
cmpsb
imul
les
leave
push
lea
push
push
call
imul
xlat
add
mov
add
sarb
add
add
pop
add
add
stc
mov
mov
pop
add
push
in
add
jns
movsl
add
ficoml
cmpl
mov
repnz
pop
add
in
hlt
pop
ret
lea
push
push
push
push
push
push
lea
push
push
call
mov
add
loopne
add
add
lret
mov
add
add
add
add
push
fucomi
add
jno
add
mov
sub
pop
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
pushf
sarb
mov
add
jmp
mov
push
xchg
push
push
add
shr
ret
mov
add
add
add
lcall
mov
add
add
mov
add
xchg
idiv
xlat
push
iret
mov
movsl
data16
addl
pop
pop
pop
push
push
push
push
lea
push
push
push
call
add
xchg
int
ljmp
add
fildl
je
flds
mov
jae
test
add
test
in
in
pop
push
inc
pop
leave
ret
push
inc
dec
pop
mov
pop
push
xor
pop
pop
push
push
push
push
lea
push
push
push
push
call
add
pushf
add
add
add
cli
pop
outsl
add
add
add
add
jae
add
loopne
lcall
push
push
lea
push
lea
push
push
push
push
push
push
call
pop
add
lds
mov
add
out
pop
add
pop
jle
add
jae
add
std
xchg
jbe
pop
add
rcrl
add
jno
lret
mov
lea
add
call
add
lret
mov
cmp
sub
pop
pop
push
push
push
push
push
push
push
call
addb
add
mov
add
add
fildl
add
popa
fildl
addl
cwtl
pop
add
jl
add
shrl
clc
mov
in
jle
popa
loope
jge
add
push
leave
loopne
push
mov
lcall
push
sub
sub
rol
pop
ret
xor
cmp
fiadds
adc
icebp
adc
and
adc
add
adc
cmp
xor
adc
jb
adc
cmp
imull
mov
inc
jno
outsb
mov
or
jne
mov
sbb
push
cmp
jo
adc
popf
or
inc
xor
jg
pop
xlat
mov
movsl
mov
mov
call
sahf
mov
lods
fwait
data16
dec
sbb
outsb
push
jl
lahf
jno
mov
call
ja
mov
aas
loopne
cmp
sbb
cmc
pop
or
inc
mov
inc
repnz
or
or
lock
lahf
adc
pop
sahf
ljmp
cli
das
inc
mov
hlt
jg
leave
in
loopne
and
test
mov
stos
ficoml
movsl
call
loope
xorl
imul
sub
imul
mov
inc
pushf
and
xchg
xor
lea
jmp
mov
and
jle
lret
jp
sbb
cmpb
push
xchg
mov
loope
jg
jg
idivb
lret
fists
cli
test
or
adcb
nop
dec
mov
mov
dec
add
jbe
push
out
stc
scas
popa
xor
sbb
push
lret
dec
adc
scas
test
int3
push
or
add
xor
jno
and
cltd
adc
in
sarl
aas
imul
lahf
es
bound
jae
cmpsb
or
stos
fldl
outsl
pop
ficoms
out
test
pushf
or
dec
push
sbb
push
lahf
enter
jge
push
add
sbb
mov
mov
std
jbe
pushf
pop
aad
sti
popa
fwait
jbe
push
fwait
test
jle
dec
adc
jb
lods
clc
mov
lock
mov
daa
xor
les
aam
push
jp
test
mov
test
xchg
in
lods
jb
out
lea
jb
add
andb
and
aaa
sub
clc
int
jg
std
pop
jne
push
sti
xchg
add
out
xchg
inc
aad
jae
insb
jmp
add
xchg
inc
push
dec
sbb
popf
dec
subb
inc
shl
outsb
and
dec
mov
xchg
pop
sbb
mov
fcoml
dec
fisubl
loopne
mov
dec
popf
out
sbb
push
stos
daa
jnp
ljmp
loop
lods
das
orl
dec
loop
add
hlt
mov
xor
bound
enter
fwait
sbb
sar
nop
pop
mov
and
je
xor
ds
lret
cmpsl
sbb
aam
pop
jp
sahf
aaa
lods
xor
cli
aam
pop
lret
sub
dec
or
cmpsb
inc
ljmp
xchg
in
addr16
repz
test
adc
pop
dec
sub
js
xchg
ret
inc
add
mov
adc
dec
jl
jne
std
and
sar
repnz
out
imul
fdivr
and
mov
test
cmp
fnstsw
jne
mov
repz
mov
xchg
stc
faddl
push
xor
repnz
xchg
stos
bound
lods
mov
xchg
or
jno
jecxz
and
cmpsl
and
fisubrs
sub
ficoms
ret
mov
aad
mov
popa
cmp
adc
lret
gs
cmc
ja
into
xor
inc
dec
repz
test
mov
push
push
jb
push
leave
dec
mov
or
push
lock
popf
pop
pop
jge
in
test
cwtl
xlat
cmp
pop
jl
add
pop
outsl
hlt
dec
jbe
adc
xchg
push
dec
test
push
or
fistps
and
ret
lcall
std
jb
sub
sbb
data16
stos
jecxz
bnd
adc
aas
mov
inc
fisubs
ficoms
fistpl
inc
push
push
addr16
popa
inc
sahf
or
mov
sbb
lods
pop
jmp
fldt
pop
pushf
cwtl
out
dec
stos
imul
jmp
sarb
push
sub
jle
inc
xor
sbb
push
jmp
cwtl
jae
inc
movsb
call
lcall
daa
xlat
jnp
and
push
lret
outsb
cmp
xor
les
sbb
dec
aam
inc
lcall
leave
xchg
push
xchg
jecxz
lcall
stc
cli
outsl
mov
jnp
loopne
jge
push
lea
sbb
pop
pop
and
js
adc
fimull
or
testb
pop
cmpsb
in
xchg
shrb
cli
inc
sarb
jns
or
gs
loope
outsb
test
nop
ficompl
dec
sbb
cmp
fs
mov
call
mov
lret
rcll
mov
jge
cmpl
pop
xor
sbb
jne
imul
dec
imul
adc
cwtl
and
xchg
insb
adc
daa
das
lahf
add
test
std
test
xchg
aad
test
subl
out
mov
pop
clc
rcrb
push
aad
jno
movsb
mov
mov
jg
clc
cltd
mov
inc
xor
add
sbb
xchg
lahf
ljmp
ret
aas
das
push
and
push
into
sbbb
femms
movsb
adc
ds
mov
xchg
mov
push
sbb
outsl
xor
push
dec
lcall
jnp
push
ret
lods
dec
inc
jb
xchg
test
jp
rcrb
xchg
orl
dec
adc
sahf
cld
pusha
rorl
cmp
sbb
or
add
testb
sbb
es
dec
cmp
ret
mov
mov
repz
mov
jge
inc
mov
pop
cwtl
fmulp
jbe
mov
push
lcall
adc
and
mov
xchg
jge
adc
jecxz
or
mov
jmp
shll
dec
cld
ja
loop
pop
pop
sbb
mov
lock
out
xchg
in
je
loope
xchg
loope
cs
fldpi
and
sbb
sbb
out
pop
xor
xor
notl
adc
iret
inc
ds
xlat
andl
sbb
fsubrl
shll
jmp
inc
sbb
cmp
jno
adc
fwait
js
subl
or
int3
push
lea
lds
ljmp
js
add
fdivp
xor
inc
inc
ret
push
jo
push
pop
and
xor
inc
jae
dec
scas
or
inc
int
and
imul
daa
cmp
lret
jae
in
add
shlb
inc
cmp
sub
jnp
inc
test
outsb
sbb
fcmovne
add
dec
pop
inc
sahf
and
mov
in
insb
cwtl
into
mov
jnp
int3
and
movsl
sub
xor
iret
push
xchg
xchg
popa
push
cmc
sbb
adc
jno
xor
in
mov
jo
ja
fidivl
jl
pop
inc
stc
shrb
pusha
loope
insl
mov
popa
dec
jbe
sub
mov
js
or
mov
jp
sbbl
movsl
xor
mov
add
cmpsb
movsl
pop
lea
pop
repz
adc
xchg
in
imul
dec
xchg
jle
inc
test
bound
xchg
jns
push
es
in
repz
lcall
sti
sub
or
mov
pop
dec
scas
rorb
imul
pushf
push
out
test
jge
sbb
jmp
data16
jecxz
pushf
jae
jle
jo
addr16
loopne
sahf
pop
stos
xchg
mulb
lods
jb
gs
aad
test
sbb
shl
xchg
aas
ret
pusha
dec
pop
scas
jns
das
and
xchg
enter
dec
call
daa
dec
cmc
mov
fs
and
ljmp
lret
fdivr
dec
jl
dec
aam
inc
cmp
mov
add
jle
mov
sub
sti
mov
sbb
push
xchg
ja
mov
jl
dec
mov
test
movsl
jge
and
shll
cmp
xor
movb
inc
imul
mov
dec
in
loope
or
pop
lock
mov
aad
sub
int
mov
jp
mov
mov
bound
cmp
pop
test
aad
pushl
and
sub
bound
test
stos
pop
xor
rcrl
and
mov
movsb
dec
xor
and
cmp
bound
mov
adc
mov
sarb
jb
and
dec
ja
sub
xchg
lret
icebp
icebp
dec
and
repnz
and
and
test
push
aas
arpl
add
or
inc
mov
mov
xlat
ret
pop
clc
leave
jbe
add
jne
cmp
or
insb
push
dec
cltd
sbb
aaa
push
mov
mov
and
in
sarl
add
inc
hlt
fcoms
inc
ret
pushf
mov
movsl
mov
pusha
jmp
int3
xlat
cmp
push
sarb
lret
mov
out
out
pop
stc
xchg
sub
cmpsb
adcl
movaps
push
jle
int
add
add
notl
mull
negl
inc
pop
jns
mov
or
push
repz
outsb
jae
sub
jl
rclb
fwait
mov
add
fs
push
jno
daa
repnz
aam
xchg
out
jg
dec
or
add
sbbl
mov
pushf
cld
adc
dec
cmpsb
inc
pop
repnz
cs
inc
pop
arpl
or
outsb
cmpsb
das
mov
jle
lret
into
and
add
or
jl
jle
push
int
xor
dec
inc
xlat
jg
icebp
mov
pop
xchg
mov
jbe
jne
lret
idivl
adc
adc
push
adc
and
in
notb
jecxz
insl
subb
xchg
xchg
pop
mov
fdivs
push
out
sub
ret
and
sub
and
mov
pop
cmp
cmp
pusha
dec
push
sub
cmp
jl
mov
cmp
sbb
mov
or
dec
pop
jg
mov
call
jbe
adc
out
push
lds
insl
jo
jae
pop
das
sub
iret
daa
mov
dec
test
rcll
or
sbb
push
lock
jns
xlat
imul
dec
push
adc
fstpt
lods
add
pop
mov
jecxz
fstp
xchg
xchg
jg
and
pop
js
sub
pop
inc
mov
in
mov
or
outsl
dec
dec
xlat
or
jp
outsl
mov
inc
or
sub
or
sub
mov
stc
in
mov
scas
mov
mov
int
push
jl
lods
scas
cmp
pop
scas
dec
jge
mov
imul
loope
std
mov
je
addr16
rorb
ja
mov
pop
ret
sub
hlt
data16
dec
jbe,pt
sti
mov
xchg
mov
ficoms
or
xchg
pushl
xor
data16
out
sbb
data16
aaa
gs
sub
jmp
divb
gs
fadd
add
lahf
xchg
popa
cld
dec
setns
rorb
insb
push
out
ret
fnstcw
scas
push
mov
pop
and
les
pop
jl
bound
fnstenv
cwtl
notb
aas
add
test
jae
outsl
jne
cmc
and
xchg
push
pop
pop
mov
sub
cmp
xor
in
mov
push
adc
aas
push
push
outsb
push
cmp
bsf
jmp
adc
lods
hlt
adc
movsb
mov
nop
int3
or
js
mul
fiaddl
sbb
xor
dec
sub
in
cmpsb
push
cwtl
xchg
dec
adcl
mov
mov
jmp
jge
aad
pop
xchg
pop
aad
mov
sub
pop
push
addr16
pushf
lcall
mov
pop
inc
in
inc
jp
clc
rolb
cli
bswap
jae
outsb
ds
mov
insl
jmp
inc
jmp
push
loop
xlat
xor
jg
mov
cli
sar
pop
cmp
adc
jmp
punpckhbw
rcrb
mov
jmp
out
pop
sahf
test
es
lods
pop
fimull
and
xor
pusha
adc
es
inc
ret
push
je
jbe
sub
pop
cwtl
pop
mov
hlt
xchg
sbb
popa
fimull
xor
jo
std
js
jbe
jl
mov
push
pop
cmpsb
and
stos
leave
lock
mov
lcall
loope
mov
pop
mov
pop
lods
mov
dec
stc
and
xor
js
adc
push
imul
orb
pop
jae
push
lods
lock
adc
cmp
das
cmpb
and
lds
adcl
xchg
add
mov
daa
xchg
insl
add
clc
xchg
jns
jae
sub
push
test
xchg
xor
insb
ds
insb
cmpsl
ret
cmc
out
out
roll
int
test
pop
ds
ljmp
xlat
xchg
data16
popa
jae,pn
mov
push
cmc
jge
xor
cmpsl
cli
ds
jp
mov
dec
leave
inc
call
fsts
pop
xchg
push
bound
stos
orb
or
inc
cmp
into
mov
mov
mov
subb
decb
xchg
or
pop
enter
addr16
fsubs
ficoml
cld
mov
sub
scas
out
pop
jno
ret
outsb
daa
test
xchg
mov
add
out
xorb
das
push
sbb
sbb
inc
icebp
scas
dec
out
mov
mov
test
enter
jmp
cmp
xor
and
push
cmp
fwait
sarl
jmp
sbb
push
dec
mov
cwtl
mov
outsl
push
lods
out
repz
popf
jge
popf
cmpsb
rclb
gs
mov
mov
adc
lods
bound
xor
in
xor
cmp
adc
aaa
mov
jle
pop
push
mov
cmp
add
pushf
cmp
call
or
stc
cmp
lret
mov
int
mov
adc
mov
jmp
inc
cmp
xchg
xchg
sbbl
repnz
inc
sahf
cwtl
imul
ja
and
fistl
add
xchg
sub
aam
stos
rcll
and
test
jge
lods
dec
or
jmp
or
xor
jg
fstl
das
cmp
rorl
and
sub
xor
pop
sbb
or
mov
pop
xor
dec
dec
pushf
push
in
lea
mov
sbb
inc
mov
lret
rorb
dec
daa
sub
mov
addb
psllq
push
jle
inc
fimull
jno
sbb
outsb
mov
roll
out
imul
inc
xchg
lahf
ret
adc
aam
mov
movsl
js
add
sti
jnp
xor
js
testb
subl
mov
cmp
out
adc
into
outsl
lock
call
mov
jmp
jb
jne
fmuls
adc
fs
mov
fcomps
sub
inc
mov
pop
push
inc
fidivs
popf
xor
xchg
aaa
xchg
stos
sub
insb
mov
inc
cmp
je
or
jnp
test
stos
and
adc
push
sti
icebp
pushf
push
pop
loope
stc
das
push
dec
mov
sub
pop
cmpl
jne
ret
repnz
sti
dec
imul
adc
jecxz
mov
ret
ret
add
dec
xchg
enter
inc
inc
lret
int
mov
iret
or
xchg
xchg
mov
shl
mov
fdivl
xor
mov
shr
xchg
jae
fdivrl
ja
cmp
out
cwtl
fsubs
jns
hlt
jmp
sbb
sbb
mov
mov
test
jp
out
jp
mov
movsb
mov
js
push
cmp
cmp
ret
loop
in
dec
rorb
scas
out
jge
int3
add
sarl
jge
or
ficomps
ret
mov
lock
push
lret
pop
lods
clc
shr
dec
int
xchg
jmp
pop
nop
pop
inc
testb
enter
int
lcall
add
lret
dec
xchg
pop
xor
push
lcall
loopne
jbe
or
sbb
sahf
lds
sbb
cltd
xchg
je
push
popl
insb
fucomp
and
pop
pop
dec
imul
xabort
std
sti
inc
fs
or
push
mov
out
add
inc
std
mov
arpl
enter
shlb
shl
rorb
sbb
mov
sbb
imul
cmpl
push
xchg
pop
test
insl
mov
push
lcall
daa
add
data16
sbb
and
imulb
pop
adc
mov
cli
mov
jno
push
loop
xchg
in
into
int3
out
jb
dec
shlb
pop
leave
scas
leave
lods
push
clc
leave
sbb
out
popf
shll
inc
adc
push
adc
and
sbb
ret
cmp
pop
push
mov
inc
mov
jns
cmp
inc
push
push
jo
mov
fsub
mov
pushf
push
add
loop
ds
push
cmc
je
aad
jae
popa
mov
addr16
push
bnd
addb
inc
adc
push
repz
xor
lds
dec
lret
mov
mov
sbb
push
jmp
data16
inc
jl
pushf
sbb
jbe
call
int3
lds
pop
lret
dec
push
fwait
ret
or
push
cs
stc
jbe
jle
jo
add
into
mov
or
ja
stos
mov
jl
std
pop
rcll
sbb
adc
rcl
sarl
cmp
push
orb
stos
mov
dec
dec
jbe
mov
pusha
mov
jecxz
mov
push
orb
ja
dec
imul
in
mov
jne
jecxz
call
ret
in
movb
shll
mov
push
ret
call
popf
rcl
out
adc
cltd
pop
or
pop
stc
or
in
inc
xchg
cmp
rcrb
push
in
out
mov
cld
add
cmpsb
lds
jecxz
cmp
and
stc
popa
xchg
xchg
cwtl
loope
repz
jb
fs
pop
hlt
mov
push
dec
sub
aaa
shll
fcmove
pushf
mov
iret
sti
cmp
ret
xchg
pop
push
mov
int
push
stos
test
lods
jne
or
and
xor
mov
push
push
sub
cmpsl
fwait
sub
enter
test
mov
aam
popf
gs
push
mov
sub
loopne
mov
sahf
inc
dec
inc
add
repnz
les
or
outsb
pop
xor
pop
lods
sbb
pop
inc
rcrb
sbb
fldl
push
test
call
push
fisttps
fs
scas
out
sarb
pop
adc
jbe
and
adc
xchg
pop
movsl
das
pop
loopne
xchg
shl
dec
push
mov
xlat
aam
push
xchg
out
cmp
sti
rcrl
add
xor
subl
ror
or
enter
in
xchg
jecxz
out
movsl
dec
decl
jmp
fsubl
pop
add
push
in
pop
hlt
sti
sub
push
xchg
add
mov
sbb
dec
mov
jp
pushf
loope
lret
add
and
sbb
adc
xchg
dec
lcall
cmp
pop
aas
fs
cmpsb
jns
jp
popf
imul
add
out
mov
add
test
inc
or
pop
orb
dec
mov
xor
imul
cld
repz
add
in
cmp
jne
sarb
mov
insl
into
jp
cltd
test
je
xor
xchg
test
add
addr16
adc
lea
faddl
insb
cmpsb
adc
lcall
cs
in
sbb
cmp
dec
or
push
mov
cwtl
movb
xor
cli
test
adc
mov
jno
xor
sti
or
lret
inc
sub
xchg
es
pop
popf
dec
jl
fcoml
push
mov
pop
or
stos
lock
in
adc
fwait
fs
mov
mov
aaa
sbb
icebp
jge
loop
cmp
cwtl
inc
mov
sbb
test
jne
cmpsb
ficoml
frstor
stc
rorl
in
cli
iret
dec
push
jmp
jge
das
adc
fwait
pop
mov
dec
shll
lods
xchg
out
shlb
outsb
jle
flds
rclb
push
sbb
xor
out
aaa
arpl
int
add
ss
push
mov
lock
lea
mov
sti
xchg
ja
decl
lret
xor
aaa
aad
pop
leave
lds
pop
shl
push
test
push
das
push
out
test
mov
fstps
jl
mov
cmpsl
push
in
int3
in
movb
cltd
out
adcl
jnp
cmc
jb
sbb
cltd
mov
pop
adc
stc
push
mov
clc
adc
lret
inc
ficoms
xor
outsb
mov
int3
lret
cwtl
in
add
fsts
pop
pop
and
and
xor
xchg
jae
insb
int
imul
push
jo
xor
mov
call
lret
mov
mov
out
jmp
xor
xchg
fucomi
xchg
sub
lock
inc
and
popa
adc
cmp
adc
call
push
fmuls
sub
mov
pusha
sbb
and
lods
push
push
out
in
jle
lods
jbe
scas
adc
inc
mov
cmp
push
inc
jp
pop
shl
call
mov
js
int3
inc
das
jl
pop
xor
sbb
sub
stos
jl
aad
and
vmaxsd
faddl
jg
fwait
mov
push
add
push
lods
mov
mov
in
or
leave
hlt
leave
adc
jnp
pop
add
pop
mov
fidivl
push
jno
imul
jo
in
xor
stos
pop
stos
pop
test
inc
cmp
lock
cmpsl
mov
scas
sub
dec
mov
cmc
cwtl
pop
iret
out
or
sti
lods
xchg
das
pop
sbb
leave
mov
addr16
scas
adcb
or
lods
insl
sarb
jecxz
outsl
jne
shll
out
add
hlt
adc
leave
inc
das
insb
lcall
shr
or
or
out
push
pusha
js
repnz
pop
mov
cmc
test
mov
cltd
cmp
loope
ds
pusha
roll
out
out
mov
icebp
push
xchg
dec
std
pusha
in
iret
scas
rolb
shll
insb
bound
lea
xor
in
inc
mov
jmp
and
xchg
dec
adc
pop
dec
mov
jmp
hlt
ja
out
pop
mov
jnp
mov
cmp
push
or
inc
bnd
sbb
rclb
test
and
sub
mov
jmp
lahf
jg
mov
sbb
lcall
dec
inc
out
sbb
push
push
mov
push
adc
mov
enter
fcomp
lret
jl
pushf
jnp
movl
mov
push
cmc
mov
flds
call
fcos
popf
ret
add
loope
xchg
mov
jg
in
sub
mov
lahf
pop
rolb
rcrl
jp
out
mov
out
jb
pop
and
mov
stos
sbb
dec
les
std
outsb
fildll
push
test
and
dec
dec
mov
or
es
jle
cmp
or
test
xchg
mov
lcall
sbb
mov
adc
xchg
xor
or
and
push
test
and
mov
mov
cmp
sub
dec
mov
fdivrs
xor
in
mov
in
pop
bound
stc
sub
scas
lahf
in
jmp
lcall
or
pop
loope
or
pop
aaa
mov
dec
jbe
ret
or
adc
xchg
dec
inc
rcl
xor
shl
jl
sub
or
aas
out
out
sbb
stos
dec
ret
or
cltd
in
mov
fmull
mov
cmp
rolb
in
jo
mov
scas
add
xchg
insb
adc
dec
mov
aaa
fldcw
lea
pop
cmc
mov
sbb
pop
ja
jl
rol
mov
inc
repz
mov
mov
jp
into
loope
cmpsb
pop
xchg
jmp
mov
sbb
popa
xor
enter
sub
aas
das
add
movl
cld
xor
es
fsubs
xchg
sbb
cld
lcall
les
dec
iret
lea
add
pop
jae
mov
cwtl
mov
xor
loope
sti
lods
inc
outsb
lret
xor
dec
xor
mov
loope
ds
dec
and
pop
xchg
pop
std
inc
cmp
push
repnz
add
adc
mov
fmuls
sbbb
inc
cli
push
pushf
in
pop
push
inc
xchg
xchg
sbb
sahf
dec
lods
testl
sub
cmp
movsl
push
or
sbb
aas
adc
mov
or
sbb
fs
mov
mov
jle
cld
or
test
fnstenv
or
inc
mov
insl
gs
sbb
mov
mov
arpl
sbb
add
mov
mov
mov
jp
adc
pop
push
xchg
jge
and
sub
test
mov
lds
les
dec
cmp
sbb
jle
mov
fwait
cmc
adc
andb
pushf
cmp
pop
loop
es
or
xchg
aad
lcall
xchg
xor
shrl
in
add
adc
xor
bound
fcoml
addr16
stc
jge
mov
sub
loope
add
cmp
adc
pop
sbb
xchg
rolb
add
shrl
into
sbb
cli
fildl
adc
scas
outsb
cli
roll
fidivrl
je
fcomps
adc
movsb
adc
add
sbb
cmp
xchg
movsw
jecxz
es
scas
loop
sti
palignr
out
rol
test
adc
or
lods
lds
or
inc
scas
lcall
sbb
fisubl
icebp
movsb
cmp
aas
mov
ds
sbb
imull
and
jb
sub
mov
cmp
pop
int3
or
filds
ds
mov
mov
xor
fwait
sarl
enter
addr16
popa
dec
and
mov
imul
and
or
sarb
sbb
movb
push
into
imul
or
cs
and
test
mov
jno
in
gs
pop
jae
sbb
iret
sbb
sub
pop
fiadds
xchg
jp
adc
pop
notl
sahf
pop
jmp
mov
mov
mov
mov
daa
xor
sbbb
adc
xor
data16
pop
stos
clc
jg
les
enter
cli
scas
fs
mov
clc
adc
pop
pop
ss
push
daa
jecxz
popf
inc
mov
pusha
mov
cwtl
xchg
mov
xor
test
mov
jp
aas
xchg
adc
iret
pop
or
movsl
mov
loop
into
sbb
andb
js
in
dec
jmp
cli
enter
rcr
adc
push
in
hlt
andl
loop
jns
sbbl
insb
sbb
lahf
xchg
inc
mov
jge
mov
lea
lods
xchg
adc
into
insl
jo
mov
push
sbb
mov
pusha
or
jecxz
push
call
jle
ror
cmp
cmp
and
lock
mov
xlat
xor
add
das
cwtl
popf
mov
inc
adc
mov
cmp
in
sti
cmpsb
sub
inc
pop
imul
repz
aaa
insb
sti
pushf
or
cwtl
je
in
fwait
int
pushf
mov
fs
mov
in
mov
mov
cmpl
bnd
cmp
mov
cmp
jne
jp
add
out
js
push
push
cmp
std
add
call
dec
orb
inc
je
add
sub
sti
addb
stos
loope
add
cld
sbb
mov
jl
out
push
mov
inc
out
je
outsb
pop
out
sub
imul
lea
mov
mov
xlat
inc
xlat
fdivp
pop
cli
push
mov
arpl
pop
cmpsl
inc
xchg
sarl
xor
xor
adc
mov
enter
jg
lock
ret
push
test
aaa
loop
push
pop
aaa
add
pop
push
mov
test
lret
lahf
in
jno
sbb
sub
xor
inc
pop
xchg
es
loope
pop
sbb
mov
dec
out
in
xchg
dec
jno
sub
fmul
pop
repz
pop
imul
mov
insl
sub
fwait
das
mov
andb
dec
ljmp
xchg
lret
inc
loop
std
mov
int
lock
data16
add
adc
mov
xchg
fsubrl
dec
jo
cmpsl
mov
mov
and
das
pop
xchg
je
jno
mov
sub
pop
andb
xchg
sub
mov
dec
cmc
insb
cmp
mov
stos
ljmp
imul
push
pop
xchg
xor
mov
sbb
inc
adc
push
in
mov
int3
xchg
lret
push
and
std
testl
sbb
ret
mov
mov
or
mov
shll
pushf
addr16
inc
shlb
push
in
mov
fmull
insb
nop
cmpsb
jecxz
ja
stos
mov
jmp
or
pop
and
add
jp
jle
popf
lret
pop
lds
and
push
in
xchg
jnp
push
imull
insl
inc
mov
push
xchg
fwait
sub
jge
lret
sbb
pop
mov
and
pop
dec
and
xor
push
in
pusha
dec
push
mov
mov
scas
lods
mov
cmpsl
in
rcrl
cmp
push
out
inc
dec
pop
push
push
inc
add
test
ss
lahf
sub
adc
popf
lods
mov
popa
aad
adc
mov
mov
movsl
push
inc
mov
fisubrl
pop
out
in
lcall
sbb
aam
andb
pop
stc
and
xchg
and
and
arpl
lahf
insl
aad
addr16
scas
aam
adc
sub
pushf
ss
into
into
sbb
cltd
xchg
in
sub
nop
cmp
inc
mov
mov
aad
cld
mov
scas
test
cmp
inc
cmpsb
testl
stos
cmpsl
push
or
les
mov
lret
aaa
mov
mov
pop
out
push
add
mov
inc
xor
jl
mov
push
push
test
push
mov
lcall
push
add
scas
outsl
mov
push
mov
mov
cmp
jns
jo
push
in
ja
das
nop
movsl
jle
xchg
mov
imul
and
call
cmp
sub
lea
ja
repnz
push
xchg
inc
lret
stos
dec
lea
aad
enter
inc
push
sub
imul
icebp
mov
mov
sbb
lock
inc
pop
fadds
in
mov
sub
xchg
mov
rcrb
mov
stos
mov
call
pop
adcb
pop
mov
nop
shll
sub
mov
icebp
mov
jb
mov
mov
mov
jp
or
aaa
add
stc
fcom
sbb
xorb
or
sub
ljmp
lahf
inc
lret
lcall
aam
movsb
sbb
fsubrl
stos
ljmp
add
jns
cltd
loopne
std
cmp
mov
movsb
cmp
outsb
out
ds
fldl
out
add
push
in
in
cmc
cli
pusha
mov
pop
or
adc
push
or
mov
and
andl
leave
dec
push
jb
adc
xlat
idivl
mov
les
hlt
push
cwtl
push
movsb
out
scas
rolb
xor
fistpll
add
xor
sbbl
loope
adc
mov
gs
popl
cmp
push
movl
shlb
in
inc
sub
xor
cli
test
outsb
mov
mov
push
into
add
pushl
sbb
call
decb
test
mov
fwait
arpl
lret
adc
fildll
and
mov
cmp
cmpb
adc
lock
lret
jae
sub
lods
addr16
pusha
int
xor
les
cmp
push
es
jne
dec
mov
rorl
jnp
dec
mov
dec
aas
cmp
jns
jmp
mov
lods
cmpl
test
leave
loope
sub
stc
jnp
in
insb
aad
icebp
adc
gs
mov
fcompl
jp
or
xchg
xor
js
repz
fiaddl
in
cmp
adc
mov
mov
fsubs
leave
ds
mov
ja
lods
dec
addr16
sar
or
push
js
ret
sub
ljmp
mul
int3
dec
pusha
push
subb
cmp
in
call
test
ja
jb
in
adc
sub
or
sub
in
mov
ja
mov
sarb
popf
mov
lcall
and
stos
cmp
loopne
add
aam
mov
pop
sub
pusha
push
add
fs
insb
loopne
insl
shrl
lods
mov
cmp
not
mov
mov
js
inc
fs
cs
mov
xchg
add
xchg
inc
sbb
andb
out
mov
insl
ja
mov
mov
outsb
test
xchg
repz
in
in
arpl
imul
addr16
fwait
push
push
movsl
jmp
jno
int
sub
and
sub
pop
arpl
outsb
fwait
mov
pushf
call
xor
fwait
stos
aad
ror
mov
add
sub
pop
sbb
ds
icebp
pop
fdivs
mov
or
fidivs
push
sbb
and
adc
mov
out
pop
fisttps
in
add
dec
jg
lods
or
mov
cmpsb
sbb
jne
xchg
and
sub
pop
or
mov
and
sarb
cmp
fidivrl
or
mov
cmpsl
cmp
imul
mov
jle
in
pushf
and
mov
outsb
loope
add
cmpsl
rcrl
mov
push
shll
dec
fistps
add
mov
lret
mov
mov
mov
cs
nop
fldenv
add
pop
pop
adc
add
add
ret
xor
ret
pushf
les
test
sub
stos
fadds
push
add
mov
mov
pop
ret
cmp
cwtl
xchg
or
je
jo
adc
pop
adc
fs
enter
lret
idivl
add
add
dec
inc
mov
call
fbstp
enter
mov
push
fbstp
fnstcw
mov
les
cmpsb
das
adc
or
testl
stos
sub
pop
lock
push
cmc
int3
sub
addr16
jmp
dec
sbb
add
mov
jns
xchg
nop
or
add
pushf
fnclex
push
jge
nop
std
mov
mov
stc
push
ss
nop
fcompl
outsb
sbb
add
int3
pop
adc
leave
mov
or
call
out
js
xchg
aas
loope
rcll
add
dec
or
test
movsl
scas
lret
fadd
leave
ret
cltd
xchg
inc
push
bound
pop
push
push
cmp
stos
or
push
add
cwtl
jne
pop
pusha
addr16
inc
jmp
push
lcall
ljmp
adc
pushl
cwtl
add
xor
fists
jg
ftst
sub
fldcw
int3
cmp
inc
lahf
enter
mov
int3
xor
das
xchg
pop
mov
lahf
lahf
shrb
lds
mov
test
movsl
out
into
cld
and
ror
xchg
iret
sub
adc
mov
mov
and
xchg
fdivrs
push
mov
mov
scas
jae
fistl
pop
sbb
sbb
icebp
xchg
cld
sub
fwait
hlt
xchg
push
cld
xchg
pop
in
ret
test
add
sbb
sti
insl
pop
add
pusha
jmp
mov
imul
sbb
dec
fcmovbe
fimuls
mov
repnz
in
push
mov
push
xchg
push
xchg
ds
pop
test
sbb
lea
jmp
pop
shrb
and
inc
das
lahf
xchg
movsb
fsub
sti
pop
xor
mov
sub
sub
fisttpll
cmp
sub
jmp
lods
push
pop
out
pushf
call
xor
pusha
dec
jo
aam
xchg
add
int
sub
aad
xchg
cmp
stos
mov
fisubrs
xlat
add
jnp
inc
push
pop
pop
jno
xor
push
insb
gs
pop
test
pushf
cmp
sbb
xlat
sub
leave
rclb
loope
and
xchg
xor
nop
and
cli
add
or
pusha
test
fsubrs
pop
mov
sbb
imul
nop
add
daa
subl
pop
fsubs
leave
aaa
test
jae
jnp
fwait
clc
cltd
sub
cmp
rorl
dec
or
xlat
popf
scas
cs
xor
outsb
in
cmp
fidivrs
xchg
jo
xor
or
jbe
jp
inc
add
jle
hlt
sbb
rorb
rcrb
sbb
popf
pop
fldl
loopne
psubw
call
outsl
es
popf
mov
lret
out
jno
sub
test
or
dec
dec
lcall
pop
test
fs
popa
out
sbb
and
xor
mov
mov
fmull
mov
xchg
jnp
xchg
xor
pop
outsb
lods
pop
mov
inc
movsl
pop
push
fcmovnbe
dec
out
sahf
or
or
jg
cld
xchg
imul
pop
push
dec
dec
je
pushf
jo
mov
ror
mov
cmp
hlt
mov
mov
push
jb
push
ja
insb
sti
xchg
jo
push
or
sti
mov
nop
dec
in
mov
cmp
xor
mov
lds
lods
fwait
mov
ja
imul
jbe
test
mov
into
mov
adc
add
shr
jl
loope
bound
rorb
pop
cld
mov
lock
call
push
or
fwait
je
pop
scas
cmp
lds
movsb
bound
xchg
test
fdiv
lahf
in
add
mov
xchg
pop
push
jmp
int
leave
xchg
sub
movsl
jbe
ficoms
ret
pushf
lea
cs
sub
push
stc
mov
sub
mov
ret
clc
cwtl
shll
pusha
xchg
loopne
enter
cmpsl
xor
ljmp
bound
std
sarb
push
insl
inc
cmpb
pop
pop
std
ljmp
mul
das
pop
ret
xor
sbb
push
adcb
sar
sub
cmc
addr16
loope
aam
xchg
cmc
jno
lcall
mov
pop
hlt
add
les
lret
mov
ss
jns
add
mov
mov
xchg
pop
data16
movsb
aad
pop
pop
aam
push
cmp
ffree
cmp
sbb
xchg
repnz
dec
rcrb
test
dec
sub
mov
lods
clc
sti
jg
dec
nop
mov
xor
loope
subb
aam
pusha
push
sar
shr
push
dec
cltd
jecxz
dec
movsb
mov
adc
fwait
je
scas
negl
cmc
je
mov
fisubrs
stos
pop
shll
int
jb
mov
pop
mov
lret
and
jg
xor
daa
pop
call
mov
loopne
xor
lods
outsb
cmp
cwtl
dec
outsl
sbb
or
fdivrl
sbb
jmp
xchg
lock
in
mov
repz
aas
ret
shr
iret
inc
push
clc
mov
dec
or
loope
outsb
adc
ss
ficompl
push
fisttps
dec
mov
mov
cmp
frstor
add
lock
fdivrp
and
fwait
mov
leave
push
inc
push
or
cli
imul
es
test
fsubrs
cmp
push
jl
cmp
fdivr
imul
push
jg
push
mov
pop
cli
push
mov
lods
fcoml
loope
push
clc
inc
push
mov
adc
fsts
in
lods
dec
cwtl
daa
sbb
iret
mov
push
push
or
xchg
testb
xlat
push
std
jbe
jae
rol
lea
xchg
xchg
movsb
jo
push
aad
add
lret
fisttps
stos
test
jne
mov
push
shll
repnz
xchg
imul
out
push
jg
push
or
push
sahf
xchg
into
push
repnz
sub
xchg
cld
mov
ljmp
xlat
mov
xor
mov
inc
call
inc
out
pop
insl
jmp
sbb
or
enter
ficoms
idivb
aaa
daa
ljmp
adc
js
sub
nop
ss
outsb
mov
arpl
add
push
xchg
and
xor
cli
imul
jmp
das
cld
rol
mov
out
sub
xlat
cmp
ret
push
push
mov
in
cmc
jns
popl
test
mov
sbb
sub
js
cmp
sbb
pusha
call
icebp
push
in
push
bound
xchg
push
std
cmpsl
mov
xlat
outsb
or
cmp
pop
sub
test
adc
test
adc
or
sbb
or
inc
push
cmp
out
frstor
popa
testl
cmp
fldcw
mov
lea
mov
xchg
lahf
out
cmp
mov
sbb
je
add
and
jne
dec
dec
mov
cli
aas
loopne
mov
hlt
mov
fbld
mov
sub
push
inc
repz
scas
xor
out
stos
and
nop
ss
pop
sbb
xlat
sbb
test
push
jno
jp
orl
add
rolb
cltd
inc
mov
mov
adc
jecxz
dec
jno
inc
jle
inc
lods
jl
dec
popa
scas
or
ret
addr16
lock
testl
mov
mov
push
jno
inc
push
pop
loope
xchg
ss
test
fcompl
adc
mov
in
add
xchg
sub
adc
add
out
lahf
nop
in
xchg
jmp
jb
jg
lock
ljmp
iret
stos
fisttps
insl
jo
addl
or
add
lods
add
sbb
jne
hlt
or
in
xchg
jp
jb
sahf
imul
dec
es
aam
pop
aad
inc
repz
pop
sahf
sub
cmp
std
xor
and
loopnew
push
lods
cmp
jle
ret
pop
xor
cmpsl
push
mov
inc
cli
adc
jno
cmp
or
and
mov
arpl
fildl
or
jl
in
mov
cwtl
fnsave
dec
jbe
enter
mov
fstps
dec
jo
rcrb
pop
push
ret
popf
push
push
test
cmp
les
sbb
dec
rorl
inc
data16
and
in
cmp
cltd
pop
imul
mov
xchg
adc
dec
pop
sbb
push
sbb
push
enter
pop
out
lods
xchg
or
shlb
xor
xor
lahf
cmc
in
pusha
or
les
popf
ljmp
inc
iret
cmpsl
inc
lret
adc
stos
push
xchg
lods
outsl
popf
mov
pusha
xorb
add
jg
lods
add
jne
loop
dec
mov
ljmp
inc
and
dec
jo
in
in
enter
cli
lods
mov
scas
addb
xchg
call
push
inc
stos
les
call
jecxz
mov
jecxz
lcall
std
clc
sbb
cmp
je
out
push
mov
mov
pop
imul
xor
mov
dec
mov
sub
je
test
imul
and
push
fldenv
add
in
out
push
js
cmp
inc
jno
adc
clc
push
mov
jl
ja
xor
imul
incl
inc
push
aaa
xchg
stc
adc
testb
xor
push
and
out
lcall
ficompl
enter
xor
nop
sbb
or
std
dec
mov
loop
xorb
sbb
aam
aas
pop
scas
popf
sbbb
lret
sub
dec
inc
dec
inc
cmp
mov
xlat
testb
and
stc
xor
mov
les
jbe
jle
sahf
cmp
mov
and
jg
mov
cli
jmp
stos
sti
xchg
ret
je
mov
mov
ds
divb
adc
inc
je
pop
repnz
adc
repz
cmpsl
sbb
mov
sbb
mov
mov
xchg
popf
rcrb
mov
lcall
pop
and
arpl
lret
sub
xchg
cmovle
add
dec
icebp
dec
jae
adc
dec
cmp
jl
mov
mov
int3
mov
int
mov
test
jge
dec
int3
insb
adc
jne
jae
mov
out
out
and
xor
jbe
lock
mov
push
or
push
or
add
pop
pusha
add
xchg
es
push
xor
xor
lret
push
adc
fdivrl
dec
std
or
icebp
mov
ficompl
pop
mov
ljmp
inc
xor
jbe
addr16
pop
and
fcompl
loop
nop
add
jne
mov
or
in
fs
mov
int
mov
arpl
cli
mov
mov
dec
ja
test
insl
sbb
mov
adc
mov
and
push
or
lret
or
fcomps
icebp
inc
dec
or
cmpsl
inc
imul
or
lcall
pushf
test
enter
in
test
mov
cmpsb
hlt
sbb
dec
mov
mov
fwait
std
cli
repnz
int3
setnp
xchg
dec
cmp
addr16
sbb
xor
jne
int3
ss
test
shl
dec
sub
xlat
clc
js
xor
inc
ljmp
insb
rcrl
pop
js
loop
xchg
enter
test
or
mov
push
out
adc
sub
rorl
addr16
div
pop
fcmovbe
imul
ficoms
test
sbb
adc
cmovge
mov
add
ds
ja
js
mov
push
cmpsb
inc
stc
push
stos
pop
pusha
mov
stos
and
pop
insb
aam
inc
mov
push
sbb
fidivl
jmp
mov
sar
imul
andb
sbb
cld
pop
mov
pop
pop
mov
add
mov
xchg
int
or
cmpsb
xchg
xor
jp
push
cltd
js
jb
sbb
popa
stc
js
inc
mov
movsl
dec
testb
sbb
cmpsl
cmp
pushf
inc
jle
sbb
cs
test
add
in
jo
inc
push
push
pop
mov
xchg
aas
pop
mov
les
cli
das
inc
jae
popa
mov
and
cld
xchg
icebp
mov
jne
fsubl
jae
mov
push
das
fldcw
xchg
je
les
jge
sub
mov
cwtl
jns
jecxz
cwtl
mov
lahf
f2xm1
movsl
push
lods
cmpsl
mov
xor
popa
inc
inc
inc
scas
inc
loope
rcll
lods
xchg
ja
cli
adc
out
out
dec
aad
int3
stos
add
pop
cmc
pushf
dec
mov
mov
jns
scas
add
lcall
xor
mov
ret
movq
adc
mov
mov
aad
jg
and
and
cmp
sub
lret
out
and
scas
jle
lret
mov
testl
call
sbb
mov
pop
test
adc
jns
call
ds
nop
js
add
loope
scas
mov
push
mov
cmp
xchg
cmp
pop
sbb
subb
repnz
or
and
in
mov
fdivl
loope
add
stc
setae
add
hlt
cld
xor
mov
in
or
movsb
and
pop
and
pushf
xor
mov
add
in
xchg
std
or
repnz
popf
popa
push
or
je
or
stos
lcall
adc
lahf
movsl
outsb
mov
fistps
popf
sub
sbb
int3
push
fisttps
pop
or
lods
add
arpl
push
pop
fistpll
mov
nop
ficompl
sbb
sahf
jbe
push
cmp
pusha
out
push
je
and
cmp
inc
int
gs
push
jne,pn
jg
inc
dec
jl
sti
push
bound
pop
inc
xor
sub
inc
stc
cmpsl
jg
insb
fimuls
outsl
scas
jnp
aaa
inc
sub
dec
push
push
fwait
mov
pop
inc
lods
fstpt
mov
push
and
ret
inc
notb
xor
out
push
repz
hlt
aam
jno
xchg
push
imul
or
mov
push
outsb
shrb
clc
imul
sub
dec
lret
xchg
adc
cmp
sahf
movsl
mov
mov
mov
xor
mov
inc
stos
sub
ss
vmwrite
popa
stos
cmp
mov
sbb
les
push
and
adc
mov
rclb
movsl
add
jbe
cs
into
sub
and
inc
xorl
shr
sarb
push
mov
or
mov
enter
ss
scas
out
enter
out
leave
data16
bound
and
popf
stos
stos
or
inc
xchg
cmpsl
js
clc
outsl
lds
fnstcw
roll
lods
cmp
or
out
xchg
push
sub
insl
shl
mulb
push
push
add
icebp
js
inc
adc
imul
mov
lods
xchg
addl
mov
inc
inc
mov
je
pop
rclb
and
aaa
sbb
xchg
and
shl
pop
add
xchg
shrl
in
and
add
lds
dec
push
pop
and
popl
call
mov
imul
cmc
push
adc
scas
dec
enter
repz
scas
jl
mov
pusha
decl
ret
xchg
fistpl
pop
ret
loope
pop
adc
lock
lods
jbe
arpl
bound
dec
loope
rolb
or
dec
pop
xor
jle
lds
lock
sbb
lahf
xchg
in
js
mov
mul
leave
cmp
out
add
and
mov
ja
inc
loope
aam
and
in
aas
sbb
cmp
mov
cmc
cmp
in
mov
cmpsb
loop
and
jle
jns
inc
pop
dec
stos
push
inc
push
ficomps
jbe
loop
addr16
idivl
jae
adc
pop
out
int
cmc
stos
add
int
mov
push
cli
or
cmpsl
adc
lcall
push
sbb
sub
cwtl
adc
shr
xor
sti
inc
out
or
inc
rcl
push
mov
jne
lahf
push
push
insl
sub
daa
push
mov
arpl
mov
es
dec
cmp
in
adc
sbb
sbb
loopne
fwait
int3
mov
insl
stc
jnp
aas
xchg
cli
and
mov
imul
das
adcb
jg
add
jl
push
dec
lods
mov
dec
fsubr
std
mov
fstl
dec
xor
pushf
inc
test
sub
mov
add
dec
mov
shrb
inc
cltd
sub
jne
hlt
push
addr16
aas
loop
adc
mov
xchg
adc
insl
outsb
pop
fisttps
repz
xchg
movsb
cmp
cltd
in
ret
xor
sti
mov
inc
sbb
cmp
xchg
add
cmp
add
ret
cmp
jno
push
dec
lcall
mov
cmp
movsl
jbe
cmp
xorl
jmp
mov
mov
fs
fs
jno
popa
in
and
adc
adc
xchg
xchg
push
jecxz
jecxz
cmp
fwait
roll
lods
lret
imul
mul
clc
jecxz
xor
dec
jbe
stos
pop
jmp
or
arpl
scas
sub
add
int3
aam
xchg
jo
add
cmpb
fwait
sub
pushaw
sub
jno
jmp
and
and
jb
insl
push
call
jb
mov
fcompl
insl
negb
cmpl
pop
pop
inc
mov
filds
fcmovnu
xlat
movsb
pop
push
inc
xchg
les
pop
lea
xchg
idivb
mov
xchg
or
mov
or
and
cmp
mov
int3
flds
cwtl
aam
push
lcall
jns
push
arpl
lret
ret
mov
and
cli
xchg
jp
popw
aaa
mov
mov
es
adc
adcl
add
sbb
adc
add
sub
pop
test
andl
inc
fisubrl
int3
xchg
add
daa
ss
das
jecxz
push
jae
fiadds
insl
test
pusha
sub
lods
int
movsl
xlat
or
dec
shlb
popf
adc
adc
cmp
add
in
and
jns
enter
and
adc
adc
mov
inc
jne
pop
push
cmp
in
jb
and
jno
int
imul
mov
test
cmpsb
scas
cmp
int
pop
pusha
test
adc
dec
dec
and
cmp
popa
add
xchg
add
rorb
in
inc
xchg
rclb
mov
mov
xchg
cmp
lea
push
and
out
cmp
call
pop
ja
mov
test
push
cmp
push
sbb
int
mov
in
sti
pop
push
add
mov
inc
xor
jg
in
dec
xor
pop
rol
pop
xchg
dec
push
xchg
je
and
iret
or
jge
test
sarl
sub
or
sti
xchg
ret
sbb
inc
dec
xlat
mov
lcall
xchg
mov
ds
push
pop
add
cmp
sub
bound
inc
sub
int3
xor
aas
lahf
mov
cmp
insb
popf
xor
dec
arpl
inc
rcll
mov
jnp
dec
pop
pop
nop
push
sbb
cmc
xor
or
mov
inc
mov
addl
xchg
sbb
leave
cmc
mov
jge
out
pop
mov
jp
add
ljmp
pusha
test
lds
inc
jge
fcmovb
jb
nop
data16
hlt
mov
mov
cwtl
jb
cli
test
add
add
cmpsl
jl
sti
adc
jb
clc
adc
dec
pushf
mov
scas
cld
push
jmp
xor
inc
orl
pop
fistpll
adc
adc
pop
repz
sahf
popa
aaa
in
mov
push
lahf
lods
pop
jne
push
lea
pop
imul
sub
xchg
cmpsb
shll
aaa
jne
xchg
aaa
sahf
cmpsl
repz
in
dec
jg
lcall
ror
fbstp
xor
sub
in
mov
ss
int
mov
adc
sub
addr16
cmp
xchg
sub
cmp
roll
mov
lods
adc
sbb
sahf
cmp
push
test
mov
pop
loopne
clc
push
pop
movsl
and
mov
pop
sbb
pop
sbb
or
fdivr
fcmovnb
es
mov
int3
mov
cmp
stos
mov
dec
in
mov
gs
shrl
dec
es
jg
scas
js
mov
std
loope
es
push
mov
dec
sbb
xor
popf
cmpsl
pop
mov
xchg
inc
xchg
jmp
out
movsb
add
mov
bound
dec
and
loopne
stc
mov
call
mov
adc
cmc
int
sbb
dec
and
shrb
imul
sti
xchg
js
flds
imul
fucom
leave
stc
add
adc
xchg
cmc
and
sbb
les
push
aaa
add
cmp
das
xchg
xorl
mov
cld
ja
rorl
xchg
mov
mov
cwtl
lret
lea
std
imul
ret
pop
jp
inc
sbb
cwtl
test
inc
dec
cs
pop
das
inc
les
jl
sbb
jmp
rorb
cmp
inc
mov
sbb
rcl
mov
out
push
stos
loopne
out
mov
aad
push
inc
jle
inc
mov
adc
ror
les
pop
or
cmp
pop
outsb
add
gs
ds
mov
jcxz
push
jmp
scas
sub
fisubrs
and
xlat
dec
sbb
rclb
das
mov
jbe
loope
cli
enter
xor
mov
xchg
popf
pop
test
out
cmp
sub
lret
xchg
bswap
push
adc
addr16
push
sti
sbb
push
in
mov
mov
sbb
mov
mov
add
xor
aam
sbb
lahf
bound
jbe
ss
inc
and
xchg
dec
push
adc
mov
sbb
fwait
or
cwtl
mov
inc
popa
ljmp
mov
jbe
mov
cmp
ja
and
inc
imul
test
push
roll
mov
cld
or
push
pop
shlb
mov
addl
lea
pop
cmpb
test
inc
xorl
in
mov
pop
sbb
pop
or
xchg
mov
xor
sbb
ret
lea
inc
push
fstpl
out
pop
out
pop
ss
mov
jae
add
and
push
adc
push
enter
cmp
xchg
jge
jae
mov
jp
pop
xor
stos
aaa
ljmp
sarb
in
negb
mulb
push
fidivrl
and
addl
shlb
xchg
mov
inc
jno
sbb
sbb
sbb
xor
add
xor
fiaddl
aad
mov
andb
ds
and
xor
pop
xchg
pop
out
insb
rcll
pop
jge
ja
mov
aad
lret
fisttpll
cltd
adc
mov
hlt
or
rorl
dec
adc
repnz
mov
sub
std
pop
xlat
xlat
mov
sbb
sbb
pop
add
ds
cltd
shl
jnp
test
mov
in
rorl
inc
fwait
jl
lods
imull
jne
xor
fistpll
daa
jecxz
fdivl
mov
sbb
adcb
ljmp
cmc
aas
add
mov
inc
icebp
lock
pusha
sbb
je
lret
js
cmp
call
add
mov
test
test
jmp
into
aas
dec
insl
clc
jnp
cmp
mov
incl
movsl
inc
movsl
jg
xor
and
pop
roll
push
fcompl
scas
orb
xor
adc
mov
fcmovnb
shr
pop
xchg
out
mov
push
repz
mov
jb
aad
pop
popf
ds
in
mov
xorb
or
cli
sbb
adc
movsl
add
call
mov
in
stos
lods
mov
cmp
mov
xchg
mov
and
pop
add
mov
or
mov
cld
dec
dec
xor
nop
mov
daa
cmp
ss
test
and
scas
call
lods
mov
sbb
cmp
inc
xor
pop
dec
mov
add
add
sub
lea
jmp
sarb
fsubrs
repnz
stc
push
movsl
jne
scas
daa
mov
fcompl
sbb
pop
push
dec
xchg
mov
jne
jmp
dec
or
sbb
out
addr16
or
les
insl
loop
or
je
push
cmp
call
push
inc
sub
cmp
push
jecxz
mov
push
pop
sbb
in
fwait
dec
int
pusha
mov
aam
fildl
das
xchg
pop
sbb
repnz
and
push
mov
pop
insb
mov
inc
xchg
cld
add
cmp
insb
push
out
sti
out
test
xchg
xor
sub
mov
sbb
push
push
iret
sbb
mov
and
mov
gs
cmp
inc
jmp
xchg
jb
in
pop
sub
popa
in
push
adc
xchg
pop
jno
add
and
mov
sub
jbe
into
sbb
fldt
xchg
fwait
cli
adc
pop
insl
push
out
push
pop
fnstsw
mov
test
sahf
mov
xchg
mov
lcall
mov
in
popw
sub
jmp
stos
cli
aaa
mov
jmp
into
cltd
push
repnz
xorb
insb
div
pop
into
or
movsb
aam
add
lret
cli
es
dec
xchg
data16
xor
cli
jge
and
call
call
dec
lds
cmp
sub
cmp
and
stos
in
xor
fistpll
pop
movsb
rcrb
cmpsb
xchg
mov
jno
insl
je
inc
pop
cltd
aaa
scas
enter
or
mov
rorl
lahf
mov
scas
mov
dec
fldt
adc
cmp
mov
movb
dec
mov
cltd
fstl
in
cmp
add
mov
and
clc
orl
and
mov
shrb
mov
and
mov
gs
test
jnp
inc
dec
sahf
adc
pop
cmp
pop
adc
sub
mov
aam
cld
stos
std
and
out
ss
ljmp
repnz
test
popa
arpl
aam
mov
data16
pop
jno
clc
das
mov
out
push
filds
dec
add
and
sbb
and
push
cmp
xchg
ljmp
cmp
ds
xor
xchg
fadd
iret
mov
mulb
enter
shrl
clc
xor
mov
cmp
or
jns
sbb
jle
push
scas
push
or
fcomps
je
jae
es
jmp
faddl
push
inc
outsb
js
imul
adc
bnd
push
mov
mov
xchg
mov
imul
dec
jge
mov
jne
mov
sbb
leave
scas
cltd
fbld
jl
inc
fldcw
mov
mov
add
bound
call
lea
xcrypt-ctr
cmpsl
pop
push
std
pop
and
mov
loope
xlat
jmp
scas
dec
and
pop
jno
repnz
les
js
push
cs
or
iret
imul
daa
les
xchg
mov
pushl
rcl
xchg
loopne
inc
and
sbb
mulb
aaa
push
iret
inc
enter
push
sub
adc
and
iret
cmpsb
mov
dec
aad
test
mov
inc
mov
mov
lret
loope
adc
jno
fstpt
idivl
jp
adc
push
repz
push
test
daa
lret
jo
xchg
orb
dec
cmp
jmp
sbb
testl
js
jmp
lret
jbe
and
fwait
xchg
es
mov
shlb
fistpll
pushf
jge
push
sbb
push
push
push
roll
adcb
imul
movsl
cmc
xchg
decl
das
cld
dec
add
daa
daa
cld
jg
jae
adc
adc
pop
lods
adc
mov
bound
ljmp
das
pop
int
mov
sub
mov
lret
mov
fisubrs
jbe
jb
data16
out
dec
out
mov
fwait
outsl
int
stos
cmp
adc
inc
test
xor
daa
lods
shlb
mov
stos
pop
clc
push
mov
inc
push
outsb
dec
xchg
push
mov
aad
mov
dec
jp
xchg
fs
xchg
daa
sahf
or
lods
xchg
leave
data16
mov
sub
cmp
in
rcl
sbb
pushf
push
insl
push
aas
je
pop
aas
fstpt
stos
subw
jmp
xor
push
push
insl
fcoml
dec
cmp
lods
pop
mov
imul
sarb
loope
subb
or
adc
and
pop
mov
sbb
lret
sbb
pop
push
stc
stc
xor
cmp
cli
popf
ds
lahf
popf
ljmp
in
cmpsl
xchg
insl
popf
mov
push
int
xor
and
mov
or
xchg
inc
dec
inc
pushf
jnp
xchg
out
push
add
repnz
insb
dec
mov
fsts
stc
dec
push
xchg
mov
sub
iret
js
cmc
adc
stos
dec
test
jno
iret
cli
sub
mov
mov
lret
xchg
rcrb
sub
dec
mov
scas
xor
out
outsl
dec
nop
rorl
sbb
push
adc
adcl
shlb
inc
push
dec
fwait
sub
adc
pop
fistps
adc
inc
push
hlt
stc
imul
inc
outsl
loopne
or
cmp
out
aad
fisubrs
xor
push
mov
adc
adc
lods
dec
jmp
jno
ss
or
pop
push
movsl
xchg
decb
mov
stc
mov
js
or
lods
cli
pop
mov
clc
jecxz
push
adc
jp
xchg
jmp
popf
aad
mov
cmc
push
fwait
mov
lods
cmp
cmpsb
out
test
mov
add
mov
add
ja
cmp
or
mov
lds
movsl
mov
and
iret
ret
xor
incl
mov
je
mov
call
out
or
les
adc
stc
mov
stc
mov
cmc
sub
fbld
xor
popa
ret
sbb
test
loope
xchg
mov
addb
fimuls
rcll
int
fs
int
push
xchg
mov
jb
cmpsb
mov
xchg
call
adc
or
jne
jl
sar
scas
xor
xor
sti
and
das
ljmp
imul
push
xchg
jnp
outsb
inc
int3
add
jecxz
adc
in
jo
mov
in
ja
cmp
movsl
mov
mov
mov
dec
cmpsb
sub
pop
adc
adc
cmp
lods
xlat
lcall
cmp
cli
cmc
ret
dec
movsb
popa
xor
hlt
daa
jnp
cmpsl
cwtl
mov
or
mulb
mov
push
xchg
lcall
inc
lret
xor
xchg
cs
cwtl
into
or
inc
push
cmp
dec
inc
and
cli
incb
jg
xor
add
ffree
ljmp
imul
lahf
outsb
dec
repz
xchg
pop
or
cmpsb
mov
mov
out
add
xchg
mov
add
test
cmpsl
frstor
aam
pop
xchg
sbb
mov
xchg
jb
sbb
inc
int3
sub
or
dec
adc
or
add
pop
xor
dec
stc
cmpsl
pop
dec
cltd
jne
rcrb
into
ja
mov
inc
test
cmp
xchg
cmpb
mov
fimuls
fildl
std
sbb
or
mov
adc
enter
fwait
movsl
stos
xchg
mov
adc
pop
mov
data16
loop
mov
lea
insl
lds
fwait
xor
xchg
xchg
jbe
mov
stos
cs
jno
jp
out
fistpll
mov
cli
aas
inc
aaa
fcomps
xor
loope
jo
dec
out
shrl
jae
out
pop
and
add
lods
data16
daa
mov
shl
push
rcrb
or
sti
jl
add
je
data16
xchg
shrl
sub
aas
and
clc
cltd
fstpl
and
pop
jecxz
jle
xor
in
dec
aas
xchg
sbb
or
je
jl
pop
in
outsb
jno
push
jo
lret
push
adc
push
out
sub
pop
dec
and
insb
push
inc
cmc
jge
sahf
in
aad
xchg
repnz
out
sub
cmp
pop
jae
popf
mov
cwtl
pop
outsl
or
insl
sti
jne
rorl
scas
cs
push
cld
into
fiaddl
xchg
or
jns
jecxz
push
out
sbb
mov
in
xchg
push
insl
aas
lock
pop
adc
mov
loope
cmp
cli
scas
or
jge
notb
cmc
fsubr
jb
repnz
inc
sub
inc
sbb
sub
pop
lahf
or
ret
mov
movsb
inc
sbbl
pop
or
mov
loopne
mov
sub
cmp
push
jp
vfmaddsub231ps
sub
add
jno
call
mov
add
xchg
inc
pusha
ljmp
adc
int
push
xchg
fdivl
mov
hlt
inc
or
and
fiadds
test
xchg
icebp
test
bnd
stos
lret
shlb
loop
test
ds
std
insb
jle
pop
or
lods
mov
add
inc
test
pushf
lret
rcrb
xchg
jbe
ja
lods
std
jge
cmp
leave
ljmp
xor
popa
cltd
xlat
into
mov
xchg
and
sahf
je
push
in
push
testl
or
adc
sbb
dec
sub
pop
dec
test
ja
incb
aad
adc
imul
pop
hlt
jecxz
pop
push
ds
or
out
loopne
mov
xor
repz
push
hlt
out
shrb
push
ljmp
repnz
negl
out
mov
repz
xchg
insb
sbb
mov
cwtl
imul
mov
fdivrl
popf
inc
es
call
sbb
xchg
mov
enter
test
mov
out
gs
mov
pop
ret
or
pop
dec
dec
inc
jp
hlt
adc
jmp
in
xchg
mov
mov
or
sub
dec
movsb
enter
test
test
lds
daa
add
les
mov
gs
xchg
stos
fwait
sbb
test
stos
sbb
stos
sub
jne
sub
nop
xchg
je
cwtl
cmp
push
cltd
xorl
orl
gs
push
xor
xlat
jns
add
xorl
sbb
out
add
lock
sub
mov
fimuls
cld
push
mov
cmpsb
xor
hlt
dec
nop
fucomp
rorb
inc
pextrw
sbb
or
iret
insl
mov
push
xchg
icebp
mov
cmp
and
sub
and
movsl
shll
mov
mov
or
daa
mov
adc
dec
sub
andb
mov
add
stc
push
lret
pop
inc
cli
jle
inc
mov
lea
or
pop
sub
and
jno
jae
inc
subb
jns
lahf
dec
and
test
inc
es
idivl
mov
adc
or
and
iret
mov
outsl
sub
sub
scas
jmp
out
aam
pop
and
push
stc
jle
or
data16
sub
bound
test
mov
mov
divl
lea
aam
xchg
fimuls
out
sbb
loop
jb
sbb
pusha
movsb
mov
in
in
lods
xchg
loopne
fiaddl
cmp
mov
adc
jo
push
mov
test
adc
add
sub
icebp
sub
notb
out
sbb
addb
ja
dec
loope
ss
stos
cmc
std
mov
ror
ret
or
pusha
cmp
and
outsb
jo
sbb
add
iret
inc
adc
mov
or
xor
sub
lds
add
push
movaps
sbb
jecxz
lods
sub
xchg
dec
jecxz
lea
fucom
jo
aam
fnstcw
add
out
call
mov
addr16
adc
int3
arpl
out
cmp
adc
and
jbe
sbb
fs
push
mov
movsb
jb
cli
fmul
jecxz
pop
inc
dec
sub
jmp
dec
int3
and
test
mov
fidivrs
popf
aas
push
mov
inc
adc
sarl
push
xchg
xchg
push
decl
mov
pop
fs
add
fsts
inc
cmc
ficompl
jmp
cmpsl
loope
mov
mov
mov
add
and
out
push
adc
in
sbb
push
add
scas
lret
jmp
pop
sub
imul
sbb
mov
loopne
mov
cwtl
insb
sbb
inc
pop
outsb
das
fadds
xchg
and
pop
cmp
xchg
add
lcall
lods
mov
jo
fsubrl
imul
sbb
popf
and
jae
loope
dec
test
enter
imul
cmpsb
inc
mov
es
add
and
add
sub
or
out
pop
cmp
sti
push
popf
arpl
cmp
adc
mov
out
loope
dec
clc
daa
dec
std
lock
ret
rolb
push
test
insl
mov
jae
andl
mov
cmp
fsubl
fstps
cmp
or
cmp
rcrl
popf
sub
std
push
cmp
in
lret
push
jns
cvtpi2ps
pop
jno
sub
pop
mov
mov
clc
call
lods
dec
mov
test
cli
lcall
and
xchg
lods
cmp
pop
es
cmp
or
les
ret
pop
adc
fstps
sub
push
and
stos
popf
push
mov
dec
adc
lods
inc
sti
dec
pop
sbb
push
mov
imulb
fcmovb
push
add
pop
aaa
push
pusha
jle
mov
fcomps
push
sbb
inc
mov
arpl
dec
int
dec
imul
add
cmp
nop
pop
mov
or
push
mov
cmpsb
xor
dec
and
push
lea
mov
shlb
test
xor
mov
ret
fidivrl
notb
mov
adc
lret
xlat
aaa
sub
arpl
dec
xor
pop
add
ret
cld
sar
dec
lahf
cmp
or
jl
dec
stc
stos
push
es
hlt
notl
out
test
out
xchg
mov
jb
test
mov
mov
cs
fs
fidivl
xor
shlb
xor
scas
push
sbb
jae
call
incl
xor
mov
lods
adc
daa
int
add
cmp
sbb
dec
gs
mov
leave
sub
dec
or
icebp
and
sbb
or
icebp
push
inc
bound
inc
inc
pop
fsubrs
stos
inc
sbb
mul
mov
pmuludq
cmp
and
push
movsb
bound
jl
subb
repz
movsb
xlat
add
dec
pusha
lds
outsl
jne
jp
scas
mov
int3
adc
scas
cvtps2pd
xchg
clc
adc
xchg
pop
xchg
loope
dec
pop
xchg
mov
ret
filds
jmp
or
bound
or
shr
std
cmpsb
mov
movsl
pop
push
pop
loope
jbe
add
out
repnz
cltd
xchg
sub
mov
arpl
mov
lock
cwtl
or
das
dec
adc
daa
js
and
loope
enter
cmp
nop
push
punpckhbw
jnp
add
int3
lods
xorb
loop
xchg
into
and
cmc
inc
xchg
add
pop
out
aas
inc
es
in
cwtl
push
in
mov
mov
out
insl
fstl
xchg
push
inc
jge
mov
and
icebp
shlb
dec
test
adc
outsb
jne
pop
cld
popf
cmp
xor
int
clc
leave
jbe
adc
add
aad
push
ljmp
sbb
int
push
movsb
out
out
mov
rcll
push
jg
add
incb
pusha
stc
fldenv
pop
jne
lahf
mov
dec
pop
or
cmc
adc
jno
pop
clc
aam
cmc
jne
dec
dec
dec
xchg
adcb
pop
mov
aam
jb
xchg
fistps
and
add
loop
xor
jl
mov
sub
lret
pop
push
inc
subb
popa
fstpt
sub
movsb
push
cmp
popa
and
out
in
sbb
mov
rclb
mov
lods
daa
sub
xor
or
fdivl
or
roll
mov
dec
fstl
test
cli
jne
les
xchg
push
ficomps
in
mov
pop
int
arpl
xchg
notb
adc
fcom
mov
daa
notb
mov
lcall
push
into
jg
adcb
popa
jb
lcall
push
jl
orl
outsb
xor
pop
xchg
ljmp
loopne
push
sub
xor
loopne
pusha
mov
cmpsl
enter
jg
ja
jl
pop
and
mov
adcl
out
cld
mov
into
xorb
push
mov
add
add
lods
mov
jg
sahf
or
add
pop
xchg
clc
lahf
call
ljmp
xor
call
rcl
and
loop
cltd
sub
rorl
inc
cmp
jle
push
cmp
popf
mov
cld
insb
fisttpll
jcxz
or
sbb
cmpsb
mov
les
mov
daa
xchg
add
imulb
mov
push
cmovl
in
sarl
out
mov
imul
fnsave
jne
iret
adc
es
mov
insb
ss
sarb
je
aad
fstl
cmp
xor
lcall
mov
sbb
fstps
icebp
cmc
shrb
mov
push
push
pop
cltd
xchg
xchg
jnp
mov
mov
enter
aam
jne
mov
je
out
inc
mov
or
jmp
test
cld
ret
pop
xor
lods
push
fisttpll
lea
add
jl
mov
daa
cld
int3
in
add
ds
aas
lods
dec
inc
xor
dec
xor
mov
mov
gs
ljmp
xor
sbb
and
test
sbb
mov
xlat
cmp
out
push
addb
push
push
imul
in
add
out
ss
cwtl
pop
pop
jp
adc
fcmovnu
ljmp
nop
lds
jl
jl
imulb
xor
cmp
jno
xor
addr16
mov
push
mov
addr16
jns,pt
mov
fwait
rorb
ds
aaa
jne
pop
sti
fiadds
sahf
mov
les
xchg
cli
jo
das
xchg
pop
adc
out
adc
xchg
inc
mov
mov
push
nop
jne
or
shl
out
push
xchg
or
add
add
inc
sbb
lds
pop
xchg
pushf
dec
in
adc
push
sbbb
xor
sbb
cmpsl
cmc
pop
loop
fsts
aad
gs
cmp
adc
dec
cld
jecxz
mov
jle
icebp
push
xlat
call
cmp
and
mov
and
xor
push
push
lcall
sub
ret
sub
cs
ret
mov
mov
out
pop
shll
addr16
mov
adc
fbstp
inc
add
mov
mov
cmp
aaa
or
popf
sub
and
movsb
or
and
pop
rorb
mov
or
repz
sbb
js
dec
repnz
loop
addl
push
imul
neg
or
push
cmpsl
imul
inc
andl
fsubs
fiaddl
lods
adc
mov
lods
lds
dec
and
inc
pop
xchg
dec
nop
cli
subb
push
test
std
js
loope
hlt
lock
push
xchg
out
mov
jbe
xchg
cmp
push
xlat
xor
mov
gs
mov
or
add
push
loop
pop
dec
loop
sbb
dec
popl
fnstcw
je
das
push
jns
outsl
and
sbb
popa
in
adc
dec
iret
xor
push
fs
aas
jle
adc
dec
mov
sub
andl
inc
inc
cmpb
test
stos
jl
fcoms
cmp
subl
add
sub
or
xchg
icebp
xchg
push
mov
cmc
and
push
lods
int
insb
jge
pop
mov
lods
jge
jmp
sbb
lret
inc
inc
sbb
bound
and
cmp
aad
nop
jecxz
sbb
and
insl
cwtl
xor
sti
mov
testl
imul
rcrl
std
mov
js
enter
arpl
dec
or
cmp
push
xor
shll
sar
jbe
int3
push
cmp
dec
hlt
mov
inc
jle
cmpsb
lret
xchg
fcmovbe
mov
cli
lock
xchg
sbb
insb
push
jb
outsb
xstore-rng
cmpsl
push
das
jae
xchg
clc
inc
cmp
jecxz
xchg
cmpsb
mov
fimull
roll
sti
push
mov
jg
dec
mov
push
das
adc
nop
int3
movq
lret
js
pop
popf
pop
fsub
test
stos
pop
push
xor
xchg
xorb
pop
cmp
and
out
push
mov
into
inc
jge
sbb
adc
add
test
push
mov
imull
sub
mov
js
mov
adc
jmp
lods
jne
dec
in
add
frstor
jl
sti
push
lret
stos
inc
add
subl
mov
jno
aad
ds
enter
popa
ret
mov
and
mov
ret
cmp
es
jbe
shl
scas
int
fwait
lea
repz
push
xchg
lock
jae
int
cltd
lahf
fwait
push
incl
jb
cmpb
sbb
push
jl
cmpsl
test
rclb
scas
push
inc
cmpsb
lret
out
lods
into
push
fisubs
arpl
aas
cld
sahf
int3
inc
jae
lret
cmp
lods
add
lret
fists
imul
adc
jns
or
dec
arpl
pop
jo
jne
shrl
insl
outsb
icebp
in
loopne
sub
sub
sbb
dec
add
fwait
lock
mov
jmp
mov
add
sub
popf
sbb
es
lret
cmp
sub
andb
cli
lahf
int3
add
shr
or
sub
scas
mov
add
ret
xchg
push
dec
lcall
mov
mov
or
sub
adc
add
in
jg
in
cli
sbb
aaa
sub
add
fwait
rcll
add
mov
sahf
clc
mov
mov
out
jmp
inc
lds
push
dec
mov
in
xor
pop
dec
insb
mov
adc
movsl
add
mov
popa
push
inc
xchg
rclb
xchg
adc
icebp
inc
repz
sbb
adc
xor
xlat
fsubl
mov
jle
jecxz
scas
into
scas
or
sub
data16
out
in
push
aad
les
in
jae
mov
xor
lods
adc
adc
cmp
mov
push
push
clc
loop
popa
loope
stc
add
or
mul
or
mov
mov
mov
clc
cmpsb
fistpll
gs
adc
xor
fildl
and
loope
jb
insl
mov
push
push
push
mov
rol
int
mov
insl
and
popf
mov
mov
xor
aaa
in
adc
dec
aad
dec
aam
jl
lock
add
mov
push
filds
fwait
mov
push
mov
out
xor
outsl
sahf
jmp
jg
and
xchg
mov
cmc
sbb
adc
xchg
sbb
std
xchg
jo
lock
daa
cmp
scas
xchg
repnz
pop
cmp
cmp
xchg
and
testb
aam
stos
dec
call
xchg
ja
or
ret
pop
sbb
mov
dec
cmpl
fistps
mov
inc
mov
fisubl
mov
sub
sbb
pop
out
repnz
mov
cmp
mov
inc
cld
iret
or
jae
lret
sti
out
out
and
in
cmp
imulb
icebp
cwtl
movsb
popf
test
out
aaa
aas
push
cmc
mov
div
mov
sbb
adc
subl
inc
aas
and
sub
mov
jg
jb
jb
cld
ja
insl
lods
fsubrl
add
cmpsl
push
dec
xor
outsl
xchg
daa
adc
sub
divl
jo
dec
out
out
notb
push
js
bound
xor
add
fidivs
movsl
adc
test
daa
pop
pop
in
addr16
aaa
or
cs
andl
shlb
mov
adc
sub
sub
filds
fwait
int
pop
dec
ror
inc
mov
subl
sbb
add
fs
std
inc
and
in
in
sub
pusha
fwait
scas
aaa
cmp
jnp
lret
jmp
insb
push
jp
add
xchg
inc
pushf
call
push
push
ret
push
ljmp
xor
xor
lods
mov
jle
or
cmc
cwtl
pop
pushf
jge
mov
add
dec
cmpsb
shll
push
push
add
outsl
or
cmpsl
ret
and
jecxz
mov
movb
adc
mov
cmp
dec
cmp
xor
cmp
pop
movsl
pop
adc
jnp
iret
scas
dec
dec
pop
pop
xchg
dec
inc
cmpl
push
arpl
dec
xchg
fdivl
pop
fadds
and
pop
mov
iret
in
pop
out
repnz
scas
sub
mov
test
orl
cltd
mov
or
ficoms
inc
ljmp
hlt
sahf
adc
cmp
aaa
cmp
cld
push
sbb
cmp
pushf
sub
pop
push
cld
pop
cmp
sahf
outsb
pop
add
movsl
pop
fldt
in
int
bound
arpl
and
xchg
xor
push
js
pop
adc
ljmp
inc
sahf
jecxz
sub
dec
dec
sbb
xchg
mov
push
and
mov
outsl
addr16
ljmp
mov
outsb
subb
sub
jns
or
inc
adc
mov
inc
sbb
or
imul
loop
add
fidivrs
aas
mov
je
mov
loopne
xchg
daa
rorb
jmp
imul
ds
pop
fucom
jle
push
mov
aad
cli
hlt
jecxz
outsb
test
jae
or
jns
fcompl
mov
aaa
xor
imul
js
scas
cli
stc
enter
inc
movsb
pusha
sbb
sarl
mov
adc
fnstenv
jo
pop
jge
outsl
cmpb
test
mov
xchg
cmpsl
xchg
push
popa
inc
push
jmp
xor
dec
xchg
out
and
les
andl
xchg
ds
xor
or
add
dec
inc
shlb
das
inc
mov
outsb
jne
out
ds
ret
cmc
or
movsl
movsl
xor
lret
jno
imul
loop
xor
xchg
rclb
jmp
enter
mov
mov
outsl
inc
xchg
je
jbe
iret
fistpll
int3
mov
rcrl
mov
pop
or
out
out
rorl
loop
lods
xchg
stos
fcomip
push
lods
pop
add
lahf
push
fiaddl
fwait
outsl
outsb
lods
js
xor
jmp
inc
inc
sbb
jae
jmp
adc
push
mov
ret
push
xor
pop
fnstsw
pop
xor
daa
dec
int3
aas
scas
in
jno
lea
outsl
movsb
cmp
cmc
outsb
mov
inc
in
scas
ljmp
add
jae
lret
and
pop
push
icebp
fcoml
mov
sub
push
enter
ljmp
sbb
or
mov
cmpsb
or
shlb
dec
data16
fildll
cmp
sub
sbb
adc
sbbl
mov
and
add
or
or
icebp
jb
fcmovnb
adc
jmp
fsubrs
push
mov
int
mov
stos
iret
repz
push
loope
test
pop
mov
test
fisttps
or
int3
repnz
mov
sbb
inc
lret
push
cmp
xchg
mov
or
imul
mov
test
hlt
mov
shlb
rorl
ljmp
daa
repnz
lock
in
cmp
loope
sbbb
loope
mov
cmp
loope
mov
imul
dec
scas
rcrb
mov
hlt
xchg
push
push
out
xor
xchg
dec
mov
xchg
mov
adc
pop
adc
ret
mov
lahf
mov
out
das
push
stc
mov
jg
jno
pop
into
je
xor
outsb
jmp
and
lods
ljmp
movsb
or
clc
push
xchg
es
aad
loope
jecxz
mov
data16
out
adc
scas
insb
sbb
lret
cmp
cmc
mov
ds
push
mov
sbb
enter
xchg
fnstsw
sub
pop
xchg
xor
fiadds
aad
pushf
pop
cmp
js
mov
inc
fiaddl
ret
inc
cwtl
sbb
shrl
int3
xchg
lods
testb
adcb
jecxz
cmp
mov
cmp
in
testb
inc
xchg
ds
cld
xor
or
insb
mov
mov
mov
cs
outsl
mov
cmp
cmp
roll
les
ret
mov
nop
hlt
jb
mov
pop
ret
push
imulb
aad
syscall
imul
stc
es
dec
jnp
jl
jae
cmp
mov
xlat
jmp
add
xor
mov
inc
aad
xchg
dec
xor
jns
cmp
js
jo
jo
iret
imul
call
xor
xchg
es
jae
stc
stos
in
mov
xor
lds
lock
cmpsl
je
bound
daa
or
ja
call
andb
pushf
stos
lret
mov
repz
ud2
out
xlat
mov
jmp
dec
dec
aam
mov
cmp
movsl
jns
stos
push
jp
fadd
rcll
stc
add
pop
inc
adc
clc
xor
inc
fmuls
sub
adc
mov
jae
test
mov
dec
jl
test
sbb
cmp
cs
mov
push
mov
mov
add
shl
pushf
and
mov
mov
mov
and
lret
jge
movsb
movsb
jbe
scas
jnp
jle
jl
push
mov
add
mov
cs
adc
fstps
xor
mov
push
imul
push
dec
shl
movsl
add
add
repnz
mov
mov
fbld
vpaddusw
aas
stc
sbb
insb
cltd
cmp
and
addr16
stos
pop
shl
icebp
jle
push
loope
xor
ja
push
stc
out
pop
dec
into
xchg
xor
ljmp
jae
sbb
cmp
adc
ss
stc
icebp
push
lret
mov
dec
pushl
sbb
cmc
cmp
movsl
movsb
and
pop
or
jb
push
popl
jo
or
mov
ret
popa
icebp
shl
mov
hlt
sbbl
insl
xchg
mov
idivl
inc
ds
cli
fildll
ret
cmp
mov
les
fcmovnbe
mov
test
aas
fidivl
cmp
mov
adc
clc
cs
sub
jae
mov
jg
inc
loop
sbb
call
and
xchg
jne
cmp
fwait
xchg
les
adc
mov
inc
cmp
aaa
xor
pop
je
xchg
pop
popa
mov
out
adcl
jp
add
shrb
mov
mov
mov
push
dec
inc
xor
sbb
mov
mov
imul
cli
mov
fimuls
stos
xchg
xor
mov
cmp
dec
jge
daa
sahf
stc
jle
repnz
roll
push
sub
or
sbb
inc
mov
adc
push
cmp
arpl
sti
lock
lea
mov
pop
mov
ja
decb
imul
mov
pop
and
dec
dec
dec
cmp
push
imul
dec
movl
out
jb
cmpb
mov
mov
dec
or
popa
jecxz
sub
pusha
lcall
dec
mov
repz
rorb
ss
jp
sub
repnz
sub
or
jmp
mov
aas
fadds
inc
inc
inc
jl
push
sarl
mov
jmp
ljmp
bound
mov
lods
sub
pop
jne
scas
or
pop
jns
xor
jne
xchg
xchg
movsl
mov
inc
xlat
int3
push
xchg
adc
call
or
cltd
out
cs
sbb
fsubr
pop
jecxz
call
nop
inc
ficoms
dec
or
psubsw
out
cs
shll
outsb
sbb
sub
fstpl
mov
push
subl
pushf
jns
dec
mov
adc
fisubs
insl
mov
fadd
dec
cmp
lds
pushf
inc
adcb
js
mov
inc
outsl
dec
lahf
in
push
fcompl
inc
mov
cmp
inc
repnz
outsl
pop
sbb
das
jae
mov
push
or
cld
xchg
jne
push
and
roll
out
mov
shrl
mull
jmp
jg
cmp
mov
dec
out
add
lock
lock
inc
rorl
in
inc
adc
in
adc
sbb
push
pop
lcall
adc
ds
mov
jnp
gs
les
mov
gs
push
icebp
stc
dec
scas
jp
out
mov
out
lods
dec
dec
aaa
in
xchg
mov
mov
pop
std
sbb
mov
repnz
mov
fcoml
pop
dec
out
xor
adc
pop
inc
push
cltd
cmpsl
int
scas
or
into
lret
cmp
cmp
jne
adc
pop
or
dec
dec
pop
jg
jno
aas
mov
sbb
iret
dec
sub
sti
mov
and
or
add
jno
cmc
cwtl
dec
gs
in
push
icebp
ljmp
adc
daa
movsl
sub
push
pop
jae
mov
es
mov
scas
mov
inc
push
adc
into
push
sbbb
inc
xchg
jae
lea
lods
push
push
inc
pop
mov
xor
xor
sbb
add
or
cld
mov
pushw
mov
dec
pop
outsb
or
jae
cmp
inc
mov
cmpsb
idiv
sti
cmpsb
pop
and
pusha
in
jl
fdiv
and
imul
mov
dec
ja
jno
inc
in
add
push
pop
popf
jle
fnstsw
xchg
stos
stos
or
rcrb
nop
ret
xchg
or
nop
pop
and
xchg
lret
leave
lret
jnp
push
push
in
es
cwtl
pop
fstl
inc
inc
stc
ljmp
aaa
jecxz
inc
out
pusha
pop
dec
mov
mov
xchg
shll
mov
add
pop
fisttpll
aad
push
das
int3
jae
enter
sti
ret
add
adc
pop
dec
lret
daa
xchg
cmc
stos
mov
addr16
pop
outsl
std
lret
mov
or
fimull
popa
out
scas
mov
mov
andl
xor
jecxz
inc
mov
xor
sbb
jp
and
clc
inc
pop
or
sti
mov
jb
mov
loopne
js
mov
cmpsb
out
enter
out
push
push
lock
imul
sbb
call
addl
in
daa
es
push
test
inc
jecxz
fs
nop
push
pop
xrelease
dec
adc
mov
sub
or
neg
sbb
jae
out
stc
jne
outsb
push
adc
xchg
aad
mov
ljmp
push
insb
aaa
ds
stos
push
ljmp
insl
mov
push
pop
xorl
iret
push
mov
and
inc
test
mov
dec
sarb
mov
mov
mov
gs
push
jg
movsb
mov
inc
test
and
pop
pop
imul
and
dec
mov
xchg
sbb
pop
call
dec
adc
sub
sbb
xchg
and
data16
outsb
adc
imul
dec
xchg
dec
add
lds
movsb
sub
jg
subl
add
sub
push
mov
cmp
dec
xchg
cmp
mov
scas
adc
push
adc
daa
inc
shrl
mov
icebp
rorb
sbb
lods
push
into
cmp
fs
mov
cmp
insl
ret
add
out
jle
push
xchg
cli
mov
ljmp
jnp
or
pop
dec
popa
dec
xlat
cmp
cmp
movsb
pop
sti
push
and
xor
mov
mov
sub
bound
mov
es
xchg
xchg
jbe
clc
int
or
test
pop
and
mov
sbb
pushf
fdivrl
bswap
pop
sub
das
lods
and
and
xchg
mov
pushf
fwait
rorb
aad
stos
adc
mov
pop
push
inc
icebp
fisttpll
xchg
out
sub
jle
movl
push
mov
icebp
mov
sti
leave
push
test
loopne
xor
cld
jmp
push
add
pop
mov
notl
clc
inc
fldt
in
or
add
cmpb
jne
sub
int3
jp
adc
inc
sti
inc
lea
push
dec
add
cmc
jno
mov
cmp
mov
mov
rorl
stos
das
dec
out
daa
sahf
mov
imul
xchg
aad
std
fimuls
test
xchg
outsb
xchg
or
iret
cmp
negb
cld
out
dec
pop
sbb
sbb
stos
adc
rcrl
inc
mov
sbb
dec
inc
and
mov
aas
roll
mov
jecxz
das
in
jno
es
push
jns
add
loopne
cmpsb
push
mov
mov
out
aam
sub
lahf
stos
add
inc
stos
mov
fldcw
rorl
outsl
pop
inc
adc
adc
cmp
in
mov
cld
dec
xchg
sahf
xchg
mov
loop
sbb
loope
jge
dec
dec
jg
ds
and
loopne
ja
ss
cmp
fstpt
vmwrite
movsl
sub
ja
roll
cmpsb
stc
sub
int3
stos
std
imul
jnp
push
out
mov
add
inc
adc
aaa
adc
mov
clc
repnz
clc
out
add
inc
or
iret
daa
mov
in
sbb
cmp
enter
ret
mov
xchg
lcall
data16
add
jb
inc
sbb
sub
sti
pop
cmp
mov
push
mov
dec
in
lock
iret
mov
out
cmpsb
ss
lock
xchg
mov
jl
push
or
in
add
xor
pop
pop
cmp
sub
lock
ljmp
daa
mov
jb
cld
gs
cld
add
int3
in
lahf
dec
das
mov
sar
dec
imul
mov
fs
xchg
dec
sti
gs
adc
lcall
test
add
xor
dec
addr16
leave
mov
repz
imul
enter
xchg
mov
int
insl
pop
push
in
test
inc
pop
xchg
push
dec
fcomp
lret
jmp
fisttpll
add
mov
xchg
into
stos
ret
cltd
leave
sub
jnp
aad
mov
push
push
cmc
lds
push
les
adc
add
pop
or
add
divb
and
xchg
iret
ljmp
mov
movsl
aaa
mov
xor
loopne
lahf
pop
mov
sub
push
sahf
pop
or
cmp
dec
mov
push
dec
movl
xchg
xchg
jns
outsl
or
je
adc
add
mov
stos
mov
icebp
test
xor
jns
and
addr16
pop
lds
mov
fiaddl
insb
test
lret
push
in
pop
lods
clc
out
out
pop
jl
lods
fstl
jb
hlt
mov
cmpsl
sbbl
lcall
cmp
in
sahf
add
insb
stos
mov
fcomps
nop
push
sbb
mov
dec
rcll
aaa
loope
repnz
xchg
xchg
in
sti
and
popf
add
add
mov
fldt
add
or
cmc
or
mov
pushf
sbb
push
mov
int3
mov
mov
das
add
dec
rcll
cltd
sub
sub
lea
mov
addr16
sbb
mov
je
mov
lods
popf
into
out
clc
rcll
addr16
idiv
je
mov
jae
mov
adc
adc
sbb
jbe
pop
mov
sbb
bound
jmp
jmp
jecxz
xor
fwait
out
mov
pushf
add
std
cli
sub
loope
inc
mov
icebp
fsub
pop
pop
arpl
movsl
dec
xor
and
mov
les
mov
cmc
cmp
cmp
dec
mov
mov
push
stc
xor
and
fnsave
jg
push
inc
or
fists
scas
movsb
push
sbb
xorl
lock
mov
in
or
or
gs
jns
mov
mov
sti
int3
jecxz
mov
sti
cld
lret
mov
mov
das
sbb
lea
sub
fadd
subl
lock
push
shrb
xchg
rclb
push
jne
push
push
dec
notb
fcmovu
repz
xchg
std
fs
arpl
lock
rorb
ds
pop
lahf
push
push
sub
jne
push
jne
mov
adc
add
push
pop
jb
adc
inc
loopne
mov
ss
orb
lret
xchg
dec
dec
mov
mov
aaa
jmp
cmp
lret
and
lea
jp
add
and
nop
into
mov
jmp
mov
ds
xlat
or
cwtl
jno
lods
inc
push
sbb
sbb
test
jge
loopne
das
faddl
std
adc
enter
push
lods
pop
cli
cmc
xchg
sarl
test
mov
fcomps
jp
adc
je
push
sbb
aad
out
xchg
pop
fwait
int
cs
fisubl
mov
add
in
aam
fxtract
into
fbld
or
lds
push
es
adc
xlat
mov
sahf
lods
addr16
xchg
insb
sub
in
stos
cmpsb
ret
mov
cmpsb
cmp
jl
jmp
fsubr
test
fmull
fwait
imul
jecxz
dec
iret
lods
inc
enter
jge
pop
push
sub
inc
in
lahf
test
dec
sub
dec
push
gs
out
imul
sbb
rcl
call
test
pop
aas
roll
push
negb
xchg
jle
xchg
mov
or
or
jbe
cmpsl
pushf
fsubl
arpl
sahf
prefetcht2
gs
test
bound
scas
xor
aam
dec
push
or
push
push
sub
insb
mov
xchg
mov
test
int
xchg
push
out
mov
sbb
mov
xor
mov
mov
mov
mov
pop
cmp
adc
xchg
mov
adc
lahf
jb
test
inc
jp
mov
pop
push
push
pop
mov
cli
dec
movb
je
lods
movsl
sti
cmpsl
cmpsl
notb
add
mov
adc
les
dec
les
dec
and
sub
loop
xchg
cltd
pop
add
in
sub
and
outsl
dec
loop
xchg
rorb
pushf
pop
sub
mov
push
dec
xchg
rolb
rclb
push
mov
add
push
sub
test
cmp
pop
xchg
pop
pop
sub
xor
mov
loope
scas
repnz
mov
sub
repnz
sahf
fldcw
outsl
sub
stos
popf
jns
jg
fmuls
iret
loopne
adc
adc
xor
adc
in
fsubrp
inc
xor
mov
pop
icebp
adc
pop
dec
jl
lods
cmp
cmp
test
cwtl
dec
rorl
loopne
and
pushf
add
es
ret
mov
mov
xlat
jo
fcomps
rcrl
and
pop
dec
sub
xor
xchg
fnsave
ret
movsl
add
cmp
cli
push
sub
push
add
shlb
push
clc
xchg
and
imul
sub
adc
pop
dec
push
pop
pop
jo
data16
xchg
popa
cld
and
adc
xchg
imul
push
adc
aaa
test
cltd
xchg
lea
je
jne
aaa
and
mov
mov
es
mov
pop
sub
dec
mov
test
inc
mov
aad
push
pop
pushf
aas
dec
jmp
movsl
inc
mov
popa
imul
data16
mov
mov
mov
arpl
dec
jecxz
jg
dec
cmp
jnp
xchg
dec
and
pop
xchg
rol
cmp
mov
xchg
cmp
fsubs
push
or
adc
orl
jg
adc
fs
loop
leave
test
roll
dec
aad
push
cmpsb
mov
add
icebp
scas
mov
iret
call
ret
push
out
jno
sub
jl
pop
push
popf
shlw
inc
shl
js
dec
ret
outsl
addr16
jne
inc
scas
push
or
and
dec
popf
lock
xor
inc
addr16
lcall
aaa
mov
int
and
or
and
clc
or
std
popa
xor
jle
out
lods
or
imul
test
and
test
scas
loopne
pop
xchg
cmpsl
cli
pop
push
mov
out
nop
cmp
adc
push
mov
mov
repz
aad
lcall
add
pop
cmp
and
enter
sahf
cltd
lods
outsl
jne
xchg
pop
pop
dec
push
test
push
add
aad
lods
rolb
mov
daa
xchg
inc
mov
cmp
push
into
fwait
decb
cmp
mov
mov
mov
dec
movsb
push
xor
outsl
push
scas
push
fs
icebp
push
lock
ror
xor
mov
adc
push
insl
mov
out
out
push
popf
xor
repz
outsl
pop
nop
fcomps
es
inc
loope
cmp
adc
sbb
loope
and
cmpsb
xchg
dec
pop
push
lods
sti
pmaddwd
mov
int
pop
movsb
jb
or
mov
lods
xor
out
cmp
out
lcall
cltd
aaa
cmpsl
iret
and
jno
daa
loopne,pt
sbbb
ds
lds
inc
mov
and
insl
jp
push
idivb
push
lea
sahf
lds
repz
cltd
cmp
outsb
aas
cli
add
jp
fucomip
fsubrs
mov
xchg
maxps
jne
push
and
push
in
frstor
sub
lods
fdivs
lods
movsb
jb
mov
movsl
js
cmpb
adc
push
ss
aam
fadds
dec
popa
or
les
in
mov
fistl
inc
push
pop
or
add
add
and
cltd
data16
popa
outsb
jmp
jae
jmp
dec
push
fistps
mov
xchg
js
jecxz
jle
adc
sub
sbb
mov
stos
pop
xor
bound
fimuls
adc
push
jns
fs
xor
xor
arpl
mov
cmp
sub
add
dec
pop
inc
mov
xchg
iret
cmp
inc
mov
adc
fcos
lret
push
xchg
arpl
or
enter
outsb
cmc
loope
iret
cmp
std
out
push
mov
xchg
inc
or
mov
je
addr16
ss
inc
ret
pusha
loopne
mov
fwait
sbb
or
push
scas
dec
fsubs
out
pop
bound
rolb
fstl
dec
stos
leave
dec
repnz
sub
lret
les
xchg
adc
add
inc
int3
dec
adc
sbb
in
loop
cmp
fistps
fdivrs
mov
data16
ljmp
adc
push
pop
pusha
sub
mov
add
loopne
push
in
int
inc
imul
and
test
adc
jmp
fildll
call
popf
push
movsl
or
aam
popf
in
sub
mov
inc
jmp
and
das
rol
sub
ja
sbb
xchg
sub
push
jge
lea
dec
fcoml
leave
xchg
or
jns
push
hlt
sub
sbb
bound
leave
pop
shr
mov
and
push
int
mov
add
adc
or
mov
cmpsl
loope
out
inc
clc
out
push
add
aas
test
mov
jbe
ror
jno
sub
neg
add
add
cmp
or
fmull
insl
ljmp
andl
mov
pop
hlt
call
mov
mov
nop
nop
and
insb
mov
clc
xor
dec
and
lods
leave
repnz
adc
stc
mov
push
jecxz
inc
add
decb
push
jg
ljmp
outsl
sbb
sbb
cmp
loop
adc
mov
sub
and
jl
dec
outsl
cmp
mov
jno
ret
fnsave
sbb
sub
sti
rolb
clc
mov
sub
mov
call
enter
pop
sbb
ss
jmp
sbb
xchg
mov
mov
gs
sub
pop
and
repz
jne
inc
adc
inc
xchg
loopne
movsb
jno
sub
out
sbbl
ret
ret
test
andl
pop
mov
loopne
inc
and
cli
jns
inc
and
inc
sbb
push
push
push
jo
cli
sub
adc
mov
lea
cmp
popa
out
aas
and
pop
xchg
xchg
cmp
mov
xlat
xor
dec
xor
jo
int3
pop
xchg
fistpl
jp
fldl
addr16
sub
mov
mov
cmp
mov
mov
ror
sub
xchg
jo
aaa
sub
inc
outsl
sub
pop
or
pop
fs
nop
or
aas
push
lds
push
add
pop
push
and
lods
idivb
cmp
pop
and
or
lret
inc
out
jb
sbb
loopne
movsb
jle
cmpsb
jne
bound
fnstenv
lock
push
and
test
push
fwait
jne
mov
dec
mov
div
stos
fcomip
pop
test
inc
xor
shl
stos
sti
cmp
ja
lds
sarl
adc
shrb
add
inc
hlt
hlt
or
in
rcrl
jle
clc
repz
mov
fcomip
or
fwait
xlat
scas
push
mov
popf
or
int
into
mov
xchg
addr16
pop
cs
cli
gs
stos
add
fldt
xlat
notb
clc
pop
or
shl
inc
js
dec
pop
jg
mov
pop
xchg
mov
mov
cmc
xchg
push
adc
mov
leave
xchg
push
mov
mov
repz
inc
jmp
popa
sub
daa
data16
jae
add
shlb
imul
or
cmc
dec
mov
stc
add
pop
push
cmp
pop
ret
sbb
loopne
mov
fwait
cmp
mov
stc
mov
subb
or
arpl
xor
int
push
insl
in
mov
add
addr16
push
mov
adc
push
or
enter
or
add
sbb
push
push
sub
aaa
aad
inc
dec
repz
mov
clc
mov
aad
mov
ds
lods
sti
cmpsb
or
fldenv
std
sub
out
cwtl
in
xchg
pushf
popf
int3
loope
test
ret
fimull
cmp
sbb
or
cmp
call
cmp
movb
hlt
xchg
lods
mov
addr16
movsl
inc
cmp
cld
and
and
dec
addr16
dec
fdivrl
stc
lcall
imul
jmp
ds
int3
mov
mov
pminsw
mov
mov
aad
add
inc
jnp
push
xchg
push
xor
sbb
mov
aad
mov
xchg
adc
pop
test
mov
mov
call
or
repz
lds
movsb
inc
les
or
lods
test
lods
aam
inc
cmp
sbbl
test
fistpll
pop
adc
push
hlt
fldenv
xchg
mov
cmp
push
jb
subb
xchg
inc
add
mov
jecxz
or
adc
sub
or
push
faddp
sbb
adc
mov
subb
and
mov
mov
stos
pop
in
stos
mov
aaa
xchg
pop
leave
out
fwait
gs
int3
popf
sti
nop
aad
inc
and
or
lcall
dec
scas
push
in
mov
scas
das
cmc
mov
xchg
mov
pop
hlt
pushf
sbb
jecxz
mov
and
sbb
hlt
and
xlat
push
aaa
in
cwtl
sbb
subb
dec
mov
xchg
add
mov
xchg
mov
sbbl
or
mov
inc
sbb
jae
cmp
ss
cmc
adc
aas
jle
and
imul
push
or
movups
mov
leave
fdivr
jp
add
fistpl
out
sbb
jle
and
jg
mov
pop
ss
push
jmp
dec
out
lret
loop
sti
cmpl
sub
pushf
out
mov
sahf
je
add
jbe
movsb
aam
bound
push
sti
or
pop
mov
aaa
fcoml
sbb
cwtl
insl
gs
loope
jo
pop
add
pop
adc
cmpb
mov
jmp
jp
sbbl
data16
lret
out
push
or
cmp
mov
push
cltd
jp
jns
sbb
lahf
push
sbb
mov
adc
jmp
xlat
xchg
movsb
in
mov
lods
ret
xchg
mov
dec
inc
imul
shll
jecxz
inc
push
inc
out
popf
add
orb
push
je
jmp
mov
fs
leave
adc
push
xchg
hlt
imul
pop
icebp
pop
mov
mov
test
cmp
cmc
clc
and
or
mov
mov
ret
push
mov
adc
mov
dec
xchg
mov
jp
out
dec
stc
aam
int3
orb
or
jno
mov
or
mov
sub
fistps
insl
or
pop
fsts
inc
mov
sbb
out
mov
mov
jo
cmp
js
mov
arpl
inc
in
mov
dec
xchg
mov
and
xchg
jle
jecxz
lret
push
fbld
lret
mov
mov
loope
jns
cmp
out
cmp
pop
xor
cmc
add
nop
dec
xchg
int3
mull
clc
mov
and
ret
mov
enter
rorl
mov
ds
sbb
jno
lret
pushf
out
ret
jl
jl
popf
repnz
cmp
xor
xchg
ret
push
loope
xor
and
in
or
sbb
sub
xchg
push
cli
je
xchg
in
or
inc
xor
in
cmpsl
lahf
into
pop
jle
pop
add
into
dec
or
push
inc
adc
and
mov
add
xchg
sbb
cltd
cwtl
cmc
aaa
pop
fcom
cwtl
dec
test
int
mov
test
sti
fimuls
and
mov
stc
push
jg
lahf
add
lret
push
push
jg
inc
shll
cmp
mov
jo
lahf
cmp
mov
lret
cwtl
fildll
add
xchg
in
rorb
imulb
jbe
xor
jg
stos
sub
test
in
cs
inc
loopne
dec
push
push
lahf
mov
xchg
pop
pop
cli
mov
push
dec
lods
outsl
sub
mov
ljmp
adc
mov
filds
push
cmp
push
or
lods
add
dec
xor
mov
insl
outsl
jl
mov
adc
or
cld
dec
sbbb
sbb
das
pop
movb
loope
ret
fxch
jae
mov
xlat
jg
mov
mov
and
stos
scas
sarb
dec
imul
outsl
dec
pop
das
mov
mov
ret
mov
cmp
push
xor
or
cmp
sbb
test
mov
loope
xchg
cld
arpl
nop
ret
daa
lods
movsb
les
loope
sub
bound
fistpll
stos
movsl
and
mov
pop
aam
loop
shrb
and
fiaddl
cmc
test
and
pop
loopne
xchg
mov
repz
pop
mulb
mov
xor
mov
mov
mov
sub
sub
push
jmp
and
repz
arpl
dec
push
xor
sbb
sbb
loope
or
push
dec
pop
pop
xchg
pop
pop
std
shr
push
ljmp
rcl
fdivl
je
clc
fldl
mov
or
dec
notl
mulb
cmp
pop
out
test
sub
lret
in
jns
mov
daa
cs
test
adc
inc
cmp
sbb
sbb
pop
mov
xorl
mov
push
dec
mov
dec
cmpl
xlat
insw
pop
jo
scas
mov
pop
sbb
jg
push
sub
ds
adc
mov
ja
stos
jnp
pop
xor
setae
loopne
mov
sbb
shlb
jb
rcrl
mov
xor
mov
jmp
xor
ret
cmp
and
out
test
push
sbb
lcall
or
sub
out
mov
scas
fstpl
std
leave
jae
decl
push
dec
lret
push
pushf
push
sahf
arpl
xor
mov
and
std
sbb
mov
mov
ja
jae
push
mov
dec
cwtl
test
fsubs
xor
fcompl
popf
push
and
es
mov
clc
cmp
es
rolb
jmp
cltd
adc
inc
or
shlb
ja
pop
xchg
jl
sbb
push
aas
out
sub
and
lret
xchg
fimuls
iret
sub
mov
push
pop
int
insl
sbb
sti
das
movb
imul
add
jge
mov
mov
pop
sbb
or
aaa
in
lea
sbb
sub
and
and
mov
jo
push
outsl
mov
ret
push
ja
fxam
jno
insl
outsl
nop
stc
fstpt
jno
adcb
sahf
outsl
shl
dec
add
lcall
sub
fimull
insl
ds
imul
lcall
or
xorl
dec
jmp
test
xchg
and
mov
fsubrl
xchg
xchg
and
out
std
andl
das
ss
loop
inc
mov
lea
mov
into
mov
ja
jne
flds
mov
out
enter
push
cmovns
loop
sub
and
pop
addb
jne
push
and
leave
dec
adc
test
daa
leave
leave
stos
mov
sti
push
in
mov
xchg
mov
cmpsl
rolb
mov
add
jnp
es
fldcw
out
sub
nop
xor
jae
fldcw
jle
dec
std
xchg
mov
push
pop
push
push
aam
dec
and
jmp
fstl
sbb
addb
lds
dec
call
mov
mov
mov
or
jp
pop
sbb
dec
sti
iret
mov
cmp
and
fwait
negb
push
test
and
add
sbb
lret
cmp
inc
xchg
inc
imul
int3
push
mov
adc
bound
xor
jmp
and
or
dec
into
pop
cwtl
imul
nop
pop
jb
xchg
push
fists
popf
out
and
xchg
repnz
push
stos
scas
pushf
idivb
fstps
cltd
cmp
adc
sub
pusha
jns
xchg
data16
stos
cli
jb
fisubrl
jp
xor
das
mov
imull
push
dec
jge
cmpsb
int
push
out
in
dec
jmp
int
gs
dec
xor
sarb
rcll
sbb
adc
sub
in
loopne
fdivl
mov
mov
int3
nop
adc
xor
ror
in
pop
sbb
incb
mov
sarb
xchg
push
or
cli
add
inc
sub
clc
mov
sbb
in
adc
pushf
jns
mov
add
mov
ret
data16
ljmp
adc
mov
loopne
nop
std
or
ss
xchg
push
addb
movl
orb
cmpsb
jo
popa
repnz
hlt
fmull
ret
ds
rol
mov
lods
adc
jae
dec
mov
cmpsl
mov
sub
and
rcrb
inc
test
sbb
rcl
or
xchg
aaa
jns
push
jg
out
stos
cwtl
rol
movsl
aad
adc
leave
push
arpl
xchg
leave
lret
les
adc
cmp
inc
dec
fsubp
inc
sub
inc
xlat
xchg
sub
aas
ja
loopne
ds
jno
cmp
jno
fcmovnbe
aaa
sti
xor
push
and
lret
xor
stos
add
mov
cmpsl
cld
xor
push
adcb
xchg
sahf
pop
lcall
or
roll
sbb
pop
dec
in
mov
jno
jno
pop
xchg
dec
lcall
leave
scas
js
ret
push
mov
scas
xchg
xchg
ja
mov
lcall
arpl
xchg
mov
adc
dec
cmpsb
sbb
int3
es
jmp
sub
hlt
sub
sub
cmpb
mov
inc
and
mov
sub
dec
out
or
add
scas
sub
mov
push
cmp
add
sbb
imul
cmp
loope
into
test
cmc
add
sbb
push
dec
cmpsl
or
movsb
imul
loop
cmpsl
cmpsl
mov
xor
cmpsl
adc
sarb
test
sub
stos
mov
push
bswap
pop
ja
stc
cmp
mov
jo
andb
push
jbe
pop
lods
mov
cmp
add
in
adc
stc
mov
shrl
or
clc
pop
gs
xchg
jl
cmpsb
cli
mov
rclb
jbe
dec
inc
dec
push
xlat
inc
stos
jb
push
sub
incb
mov
ljmp
sbb
sbb
repz
ds
lds
cmp
cmpb
xchg
loope
jbe
ffree
int3
stos
gs
mov
shl
or
stc
mov
arpl
jo
xor
stos
rcr
ljmp
int3
sti
test
cltd
sub
add
aaa
cld
and
xor
bound
mov
add
xor
mov
les
and
sahf
mov
xchg
ljmp
adc
cld
sub
shr
dec
push
dec
lds
outsl
push
pop
popa
lahf
jle
fs
xlat
jns
sub
stos
xchg
andb
outsb
adc
adc
sahf
add
mov
or
lea
jae
mov
outsl
mov
pop
test
rcrl
push
dec
addr16
dec
in
inc
or
imul
inc
ja
mov
pop
or
jmp
pop
xchg
jp
add
shll
ds
andl
mov
dec
movsb
add
movsl
aam
dec
inc
inc
push
cmp
lock
ljmp
sahf
xor
test
mov
idivb
insl
lods
pusha
add
outsb
out
mov
mov
es
iret
cmp
fwait
xor
sti
imul
lea
out
jge
lcall
and
sbb
daa
add
pusha
dec
movsb
xchg
push
cmpsb
outsl
mov
pop
stos
xchg
iret
in
push
out
dec
dec
pushf
lahf
push
pop
stc
inc
dec
pop
es
scas
dec
aam
test
adc
and
ficompl
iret
mov
sti
rcrb
loope
scas
loope
nop
push
push
mov
lods
lret
pusha
mov
in
sub
lods
aad
js
fldcw
ficoms
inc
scas
xlat
sub
call
repnz
or
movsb
sub
sbb
test
adc
testb
mov
jns
jns
test
adc
aaa
sbb
inc
mov
sub
xchg
stos
adc
mov
scas
bound
cltd
nop
adc
rolb
std
insl
shll
push
imul
xchg
js
push
mov
mov
mov
pop
in
js
jle
jecxz
mov
add
dec
rcr
jbe
jns
or
insl
jecxz
loope
nop
xchg
test
ljmp
sub
es
outsb
inc
mov
les
mov
pop
mov
stos
inc
ret
imul
jg
mov
lret
inc
dec
xor
adc
rcrb
xchg
int
jecxz
jl
cmp
dec
sub
in
aad
in
sets
hlt
out
and
pop
lods
push
cmp
xor
inc
cmpsl
jns
cmpsl
mov
mov
jge
and
pop
mov
lcall
pop
int
inc
or
fimuls
pop
inc
imul
lret
jp
es
xchg
xor
mov
call
sub
hlt
out
fwait
int
inc
sahf
movsl
imul
sub
test
stc
jge
inc
jo
mov
loop
add
pop
adc
arpl
rcl
sti
sbb
pop
lds
out
lret
adc
jae
shll
fisttpll
hlt
popf
jmp
or
clc
sbb
jns
ljmp
adc
mov
xchg
push
f2xm1
sbb
add
xchg
inc
and
adc
mov
inc
push
fcomps
icebp
test
in
dec
or
xchg
add
push
cmpb
test
sbb
jo
sub
mov
lds
aaa
icebp
and
hlt
xchg
and
pop
inc
popf
or
jg
mov
xor
icebp
pop
xchg
iret
adc
push
lret
cltd
repz
ss
push
add
mov
imul
xor
xor
xor
inc
dec
xor
or
xchg
mov
adc
mov
mov
xor
addr16
or
xchg
fisubs
into
mov
rcrb
jl
jmp
pop
scas
xchg
and
inc
mov
fwait
adc
push
mov
mov
outsl
and
loopne
pmuludq
cld
xor
cmp
jmp
lcall
fwait
xchg
lret
or
repnz
not
jo
adc
ds
pop
jge
push
jle
jle
test
jl
shl
cltd
adc
jo
fstl
out
push
scas
xchg
sub
cmpsb
jo
in
out
jmp
inc
aas
sbbl
popl
inc
cwtl
hlt
ret
adc
hlt
cmp
push
sub
dec
into
mov
inc
lret
pop
add
jnp
rorb
sub
inc
int
mov
dec
sbb
insl
and
inc
cmp
xor
aas
fwait
push
icebp
mov
sub
dec
dec
or
sub
in
and
mov
pop
mov
push
imul
jbe
jne
xor
push
pusha
ret
jb
sahf
aas
xchg
ret
inc
lret
jmp
sahf
jmp
cmp
xchg
add
push
pop
je
gs
add
jae
int
dec
out
movsl
test
pop
pop
rcr
lea
add
fistpll
hlt
xchg
mov
push
or
loopne
rclb
icebp
cmp
sbb
imulb
lcall
ja
jns
dec
lods
pop
loope
dec
int3
adc
xlat
push
and
sbb
bound
pop
or
loope
les
es
push
push
mov
xchg
jle
mov
aam
insb
pop
in
cmpsb
and
daa
lar
mov
add
test
mov
pop
scas
add
popf
and
repz
lret
js
xchg
cmc
inc
dec
lcall
jp
xor
pop
shl
and
cmpsl
xchg
push
addl
loope
xchg
pop
sub
sub
sahf
xorb
jp
ret
aad
or
mov
lcall
scas
mov
cmpsl
imul
adc
xchg
or
jmp
pop
shlb
jecxz
lea
call
push
subb
cmpsb
inc
xor
and
das
inc
adc
movsl
fstpl
imul
add
lcallw
xor
xlat
cmp
leave
cmc
dec
mov
mov
pop
inc
test
stos
sahf
nop
push
mov
cmp
push
pusha
stos
enter
cmp
mov
pop
and
pop
pop
outsl
cmp
cltd
inc
xor
pop
mov
inc
shll
addl
cltd
jbe
push
dec
push
mov
mov
xchg
sti
mov
hlt
push
and
and
dec
mov
xchg
popf
inc
lea
jmp
icebp
imul
add
mov
rcrb
cmc
int3
inc
jbe
adc
cmc
pop
push
mov
in
hlt
in
ss
add
sbb
lea
int3
mov
lret
icebp
fdivrl
jns
cmp
sbbb
and
sbb
adc
mov
mov
fdivl
add
fs
mov
cmp
into
ljmp
fwait
flds
fnstsw
adc
mov
jge
adc
xchg
pop
dec
and
js
mov
sar
xor
jnp
or
andb
stc
imul
xor
aam
adc
insb
filds
je
aaa
loop
add
cmp
xchg
leave
xor
addr16
adc
das
pop
push
inc
out
loop
mov
mov
add
ret
inc
cmp
popa
adc
lret
dec
mov
sbb
loope
pop
add
pop
mov
imul
pop
out
fwait
mov
dec
ficompl
sbb
pop
stos
or
aas
cmp
xchg
push
push
dec
adc
push
mov
push
add
addr16
and
enter
or
or
jns
adcb
push
in
ret
sbb
fdivr
fwait
inc
pop
adc
cltd
movsl
mov
push
push
scas
pop
popf
cmp
test
int
cld
aas
xchg
cmpsb
imul
inc
xor
enter
mov
xor
push
lcall
mov
and
movsb
stos
or
xchg
jmp
jno
sbb
and
add
testl
ffree
xchg
xchg
imul
popa
push
xor
lods
mov
pop
out
xchg
stos
xchg
jb
daa
xlat
lcall
mov
sub
xor
fistpll
xor
pop
les
or
cmp
push
sahf
xchg
pop
nop
xchg
add
mov
lret
fisttps
pop
and
fcoms
jnp
xchg
stos
call
xor
int3
xor
aam
rcrb
sub
movsb
sub
dec
insb
mov
and
adcl
xor
sub
push
test
fmuls
push
sub
enter
test
adc
push
in
pop
fwait
or
cmp
sub
cs
popf
push
adc
imul
stc
cmp
cmc
cmp
cmp
dec
out
adc
push
xor
jle
push
inc
test
std
ret
adc
popf
lods
test
push
notb
adc
push
loop
hlt
pop
mov
out
stc
data16
aas
inc
cmp
xchg
jmp
sub
loopne
mov
dec
and
gs
daa
test
addr16
pop
aad
mov
dec
inc
arpl
shrb
test
adc
mov
sahf
subb
or
dec
test
ja
hlt
faddl
sarb
jnp
lods
lret
lds
aaa
push
je
xor
test
pop
mov
int3
xchg
pushl
sahf
mov
cwtl
pop
push
xchg
fsubr
and
movsl
lods
dec
repz
mov
mov
xchg
cmp
lea
xchg
ljmp
ffreep
inc
mov
sub
dec
push
jns
inc
ljmp
dec
xor
rcll
inc
ds
jbe
popa
cmpsb
loopne
into
gs
mov
mov
movb
xor
in
leave
cmp
fnstenv
sub
rcll
jg
in
sub
cmp
dec
mov
lret
push
popa
push
pop
insl
sbbb
add
adc
loope
cwtl
decl
jg
push
leave
cwtl
mov
sti
inc
lods
mov
jecxz
leave
cmp
mov
stos
sbb
loope
lea
leave
sti
cli
aas
cmpsb
cmpsl
dec
mov
insb
movsl
sbb
inc
cmp
jno
mov
mov
in
ficoml
psubq
or
or
xor
sbb
dec
mov
add
xchg
adc
loopne
int
jg
mov
rolb
rol
inc
rcr
push
cltd
testb
xchg
jmp
mov
and
jg
jne
mov
leave
xchg
or
add
call
into
dec
daa
in
mov
mov
stos
or
pop
out
pushw
sti
push
cwtl
std
cld
push
push
mov
pushf
push
aaa
fcomi
clc
mov
insb
sbb
dec
mov
adc
sub
and
sub
daa
das
add
fucomp
xchg
jb
mov
fs
adc
mov
movsb
and
mov
adc
mov
push
jo
xchg
sub
mov
clc
sbb
scas
pop
notl
pop
pop
pusha
mov
test
inc
mov
push
lods
mov
movsb
sahf
push
mov
ja
cld
outsb
stos
sub
ficompl
mov
push
in
and
das
popf
divl
out
fcomp
xchg
pusha
dec
lahf
lcall
sarb
mov
adc
scas
or
mov
jne
mov
xor
jmp
lahf
ds
xor
dec
xor
inc
arpl
dec
imul
rcrb
jbe
sbb
xor
or
stos
xor
and
xor
ficoms
pop
movb
xor
dec
fdiv
jecxz
and
cmp
ljmp
mov
xchg
popw
lahf
and
add
adc
dec
push
das
jns
daa
into
push
sbb
xor
push
inc
push
call
mov
in
test
sub
out
lahf
or
repz
lods
mov
inc
test
mov
icebp
jno
sbb
dec
xor
push
cmp
sahf
ffreep
orl
insb
inc
dec
cltd
adc
mov
and
pop
popf
or
push
sbbb
call
fistpll
cmp
xor
jmp
test
shlb
mov
subl
shl
xchg
outsb
lret
push
mov
mov
pop
adcb
lahf
call
mov
mov
pop
out
pop
aas
lret
add
mov
cmpsb
test
cmp
push
out
mov
movsl
scas
fdiv
aam
adc
ljmp
cld
negl
jns
in
stos
xchg
stc
nop
mov
arpl
clc
rclb
rolb
mov
xchg
sarl
xor
add
xchg
dec
pop
xor
out
pop
adc
xchg
and
popf
pop
mov
loope
iret
sysret
out
sbb
adc
stc
and
pop
scas
sbb
aam
or
dec
jp
xlat
mov
mov
mov
mov
xchg
stos
push
loop
dec
mov
jmp
jle
fwait
loope
lock
cmp
mov
lds
cmpsl
add
lret
dec
adc
mov
mov
lock
and
sarl
xor
dec
xor
lods
xchg
jno
push
stc
xor
inc
lret
ror
xchg
imul
jnp
int
sbb
mov
movsb
push
xchg
and
mov
jmp
jo
adc
or
jne
fsubl
push
les
iret
repz
push
mov
dec
fwait
adc
mov
inc
sub
ja
sbb
add
and
xchg
sbb
rcrb
dec
les
mov
adc
jnp
ss
xor
popa
sarl
lods
mov
cmp
push
bound
cmc
lock
mov
push
jmp
pop
jecxz
push
mov
gs
dec
mov
xchg
nop
pop
cmp
incb
mov
out
pop
and
adc
adc
cmc
dec
xor
pop
outsl
aad
inc
loop
ret
jg
lret
push
test
jecxz
cld
cli
mov
mov
adc
dec
xchg
dec
push
cmpsl
jmp
ret
adc
mov
push
jl
ret
stos
cmp
jg
test
pop
data16
es
lods
pop
mov
hlt
pop
pop
pop
sbb
and
inc
ja
push
push
mov
add
and
mov
xchg
rorl
loop
scas
popa
dec
in
insb
jne
fistps
dec
adc
pop
shlb
lret
pop
cwtl
xchg
and
call
clc
in
lret
cmp
jne
sbb
cmp
push
addl
push
xor
daa
fcomps
fmuls
sub
out
addl
xchg
and
ret
jl
stos
les
dec
jg
mov
sbb
enter
cwtl
lcall
xor
cmp
mov
adc
lahf
les
arpl
in
mov
fnop
dec
adc
and
xchg
or
bound
pop
orb
insl
jno
adc
outsb
mov
rclb
inc
rolb
fisubl
cmp
out
jno
or
jp
or
scas
lcall
mov
psrlw
sbb
push
out
ret
lods
xor
jg
mov
jle
test
xor
xchg
nop
std
scas
push
dec
push
push
testb
repnz
fwait
sub
aam
push
rcl
xchg
les
jne
mov
xor
sbb
aaa
std
pop
inc
sbb
addr16
mov
insl
insb
dec
dec
push
rcr
fisubrs
jae
lahf
jle
cmp
mov
sbb
addr16
movl
jmp
clc
pop
dec
xchg
lock
stc
and
add
add
jecxz
and
int3
popl
push
sbb
daa
out
sub
in
dec
rolb
gs
sub
or
cmp
sub
repz
mov
mov
dec
jecxz
jp
or
fists
into
and
imul
or
jo
imul
fs
shlb
in
adc
sub
xchg
int3
mov
out
push
sbb
movsl
sub
mov
into
out
mov
mul
in
outsl
sub
in
sbb
jbe
jl
test
xchg
int
out
dec
xor
loop
push
insb
xchg
test
dec
vmwrite
int3
jmp
adc
les
push
push
clc
ds
lahf
dec
rep
add
and
lcall
jecxz
cwtl
adc
scas
inc
out
sub
inc
aas
sbb
out
add
cmc
frndint
outsl
fs
stos
adc
xchg
fcmove
lods
mov
mov
inc
mov
es
movsb
adc
or
fadds
cmp
jmp
cwtl
mov
dec
lods
sub
inc
in
push
rolb
pop
popf
popa
test
roll
or
divl
fmuls
iret
dec
adc
dec
jecxz
movsl
pushf
mov
rcrb
push
test
into
xchg
pop
jae
scas
jge
nop
orb
mov
out
pop
lock
cli
add
nop
int
xchg
inc
leave
in
loop
jnp
into
int3
sbb
jae
pop
xor
cmp
imulb
or
mov
lcall
jle
lahf
lea
jecxz
bsf
jae
mov
in
dec
inc
pushf
aaa
or
or
lea
dec
cmc
xor
mov
cmpsb
or
inc
jge
test
jg
or
rcrb
push
flds
push
dec
fcomps
jae
xchg
inc
daa
sbbl
adc
mov
mov
jmp
mov
mov
movsb
push
addr16
stc
mov
xchg
cmp
push
jb
cmp
push
mov
jne
outsb
ja
mov
jcxz
dec
sbb
pop
lods
and
xchg
inc
mov
bnd
stc
call
enter
adc
jnp
icebp
test
adc
icebp
js
insl
lock
aas
pop
xchg
sbb
mov
add
adc
pop
repz
aas
mov
iret
mov
push
cmc
pop
xor
adc
pop
and
js
mov
sti
jge
xchg
cld
cmp
mov
jns
in
cmp
cs
lret
cli
fstp
ja
mov
into
jp
push
pushf
out
shll
test
adc
push
rclb
xor
rclb
push
je
in
ret
jmp
pop
clc
fisttpl
mov
mov
movsl
cmpsl
jmp
jmp
jp
xor
roll
stos
mov
push
fcmovnbe
inc
scas
into
xor
stos
das
in
fsts
aaa
xchg
xor
add
dec
aam
aad
fwait
jecxz
lea
jg
mov
dec
xor
je
jo
dec
xchg
fmull
push
test
lret
fisttpll
jo
imul
xor
cwtl
push
or
pop
fcompl
ss
sahf
je
pusha
cmp
mov
inc
aad
and
adc
sbb
fwait
inc
adc
mov
sub
sbb
gs
lea
enter
cmp
into
arpl
std
sbb
inc
inc
sbb
sahf
inc
repnz
xor
jne
push
inc
inc
lahf
dec
adc
mov
add
fwait
loopne
cmp
dec
push
cmpsb
pop
mov
add
ret
mov
out
out
ja
adc
sub
inc
in
shll
jne
cmp
outsb
imul
pop
enter
inc
pop
add
sub
push
es
test
in
push
or
fucomip
arpl
adc
inc
shlb
lcall
mov
push
ja
inc
aaa
pop
lods
or
aam
mov
fsubl
push
or
sbb
cs
dec
mov
out
xor
push
movsl
leave
xchg
push
or
mov
sbb
loope
pusha
adc
sub
push
test
ljmp
test
lea
adc
iret
xorb
pusha
or
mov
movsb
mov
cmp
pop
fiadds
loopne
push
dec
decb
xchg
out
lock
pop
out
test
xchg
xor
je
jl
push
cltd
ret
js
jg
aaa
push
mov
xor
stos
aaa
lret
repnz
mov
iret
or
shl
mov
dec
inc
mov
pusha
pop
test
scas
fstl
or
xchg
xchg
mov
das
push
add
or
and
xchg
xchg
aaa
xchg
loop
jbe
and
xor
movsl
sub
ljmp
adc
mov
sub
and
out
dec
mov
mov
dec
sub
push
fwait
mov
sub
aas
clc
aam
stc
pop
xor
inc
push
xchg
jge
and
mov
push
jg
lahf
hlt
int3
or
push
adc
mov
shlb
xor
jo
lret
imul
jg
and
mov
test
jmp
pop
push
xchg
addr16
gs
sub
xchg
add
sti
aas
jp,pn
mov
pop
sub
pop
fimuls
xor
call
xchg
push
pop
js
push
rclb
andl
dec
push
jge
movsb
adc
icebp
ds
mov
mov
mov
lret
jmp
dec
mov
xchg
inc
aam
xor
pop
insl
test
pop
adc
loope
fcomps
pop
add
jae
push
xchg
sub
jmp
insl
popa
push
mov
mov
insl
clc
cmp
push
std
sub
or
mov
fcomps
rorb
leave
test
jae
sub
lret
cmpsl
iret
cmpsl
mov
cwtl
add
andl
push
or
and
fldcw
xor
lods
push
add
cmp
sti
int3
xor
ds
push
jge
scas
inc
mov
outsb
fldcw
and
and
test
cli
and
loop
mov
or
lods
lret
mov
jnp
mov
fwait
pop
leave
shlb
mov
sbb
sub
inc
stos
xchg
sbb
aaa
aaa
mov
mov
cmp
mov
and
cmp
in
leave
cmp
cmp
sti
sbb
mov
mov
mov
xchg
loopne
pop
inc
mov
jmp
and
or
xor
mov
xchg
pop
movl
cltd
addb
add
adc
jmp
ficoms
pop
movsb
fadd
push
out
push
out
movsl
xchg
inc
pusha
jge
sbb
adc
stos
cmpsl
lods
or
mov
std
mov
hlt
push
pusha
mov
cld
pop
jno
lcall
popa
sti
js
lds
inc
fucomp
mov
por
movsl
sbb
jb
jns
scas
cmpsb
out
cmc
lock
sbb
std
mov
jnp
mov
cmp
clc
or
cmpsb
cli
aas
aad
sahf
xchg
jae
mov
in
call
push
xor
adc
sbbb
xchg
sub
and
add
mov
mov
cwtl
enter
add
push
cmp
xorb
in
push
pop
int
out
mov
sub
add
add
jp,pn
test
add
sbb
popf
or
pop
xchg
stc
incl
addl
pushf
les
in
call
fmull
stc
cs
fidivrs
mov
adc
ss
std
adc
jp
fs
or
dec
push
add
into
divb
lret
lret
pop
scas
xor
xor
movsb
pop
mov
mov
mov
in
test
cmp
ds
xchg
adc
and
clc
aad
repnz
sbb
cli
push
inc
sarb
in
test
dec
inc
int
xorl
jae
ss
mov
xor
out
and
lock
out
jb
cltd
inc
xchg
pop
into
pop
adc
rcrb
pop
mov
inc
inc
scas
add
cmp
das
loop
mov
inc
shlb
jne
pop
sub
addr16
sbb
in
loop
push
push
inc
std
std
loop
cli
sbb
sub
and
cwtl
add
mov
icebp
mov
mov
mov
int3
mov
arpl
movsl
dec
cmc
or
shl
ret
imul
inc
jecxz
push
sahf
cwtl
sbb
dec
dec
adc
clc
icebp
dec
inc
push
imul
lods
cmp
test
and
inc
das
pop
mov
add
xor
mov
adcb
fstl
cmp
xor
push
dec
jno
cmp
ret
sar
sbb
ja
adc
push
dec
mov
sub
les
inc
sbb
cs
std
in
into
dec
loop
imul
daa
mov
jle
push
rclb
rorb
push
pop
push
je
shll
lods
mov
int
jae
xchg
add
xchg
lahf
jecxz
les
testb
cmp
fiadds
push
mov
insl
nop
and
push
push
lds
lcall
out
adc
add
mov
jp
mov
adc
jl
icebp
rcl
add
dec
loope
mov
imul
scas
mov
xchg
mov
xor
push
cld
imul
or
popf
mov
jo
lods
and
pop
sub
or
stos
jp
stos
adc
dec
mov
je
fbstp
or
push
shl
push
les
loopne
adc
dec
ficompl
outsl
fldcw
inc
sarl
pop
adc
push
pop
shlb
jge
inc
pop
in
clc
idivl
and
adc
loopne
fistps
xchg
lea
xor
adc
jae
xchg
pushf
sbb
test
add
inc
and
popa
cmp
inc
fisubrl
es
aaa
xchg
lea
xchg
lret
adc
cmpsb
xchg
or
popa
sbb
cmp
jno
gs
lock
sbb
cmp
in
pop
mov
stos
cld
sarl
movb
ss
pop
jae
jnp
mov
lds
je
inc
xor
mov
int
jl
jae
adc
stos
nop
out
imul
xchg
push
testl
mov
lods
outsl
repz
pop
xorb
xchg
fists
fstpt
dec
xor
or
sbb
loop
or
mov
mov
jmp
dec
push
test
movsl
xchg
loopne
and
sbb
mov
ret
cmp
xor
adc
push
out
aaa
int
sbb
inc
iret
pop
and
cmpb
adcb
sbb
fs
aaa
cmpsl
dec
push
inc
stos
xor
jae
fimuls
ret
mov
jecxz
or
push
dec
in
jle
or
clc
aad
xor
outsb
cld
or
push
or
mov
out
add
mov
inc
in
out
xchg
dec
add
push
inc
adc
mov
xchg
jbe
cld
cmp
or
jo
pop
add
mov
call
jl
push
jne
xor
fadds
popa
data16
cs
mov
or
fisubrl
adc
fs
stos
movsl
xor
mov
nop
das
repz
push
add
sbb
push
xchg
ljmp
call
fsubl
das
fiadds
sub
sbb
xchg
lcall
jnp
jne
movsb
and
mov
imul
movsb
inc
lea
roll
jns
push
jecxz
ret
cmp
iret
data16
iret
mov
lock
movsb
mov
and
or
xchg
mov
mov
push
xor
dec
ss
out
fnstsw
push
jae
sbb
loopne
scas
jl
hlt
add
pusha
inc
stc
or
mov
int3
cld
xor
lods
ret
mov
test
aad
arpl
call
dec
add
jbe
jg
sbb
xchg
sbb
or
or
fdivrp
or
insl
sahf
pop
sbb
jne
mov
cmpsb
pop
imul
data16
scas
stos
and
in
cli
nop
gs
int3
stos
cmpsl
out
mov
hlt
adc
stos
and
aas
popa
shl
mov
ljmp
sbb
cwtl
lods
fxch
mov
and
pop
and
decl
xor
inc
and
mov
pop
aad
xchg
cmp
mov
pop
sahf
sbb
push
icebp
mov
and
jne
test
shll
add
push
xchg
repz
adc
std
popf
enter
cmp
pop
cmp
data16
imul
lret
adc
cmp
ds
pop
in
cmp
or
push
xor
bound
adc
cmp
sub
sbb
cli
xchg
cwtl
aas
jge
int3
mov
xor
inc
das
adc
hlt
pop
jl
das
stos
lods
call
push
sub
xchg
sub
inc
sahf
popw
bound
adc
sbb
pushl
int3
adc
es
aas
and
sbb
lret
or
cld
enter
dec
or
pop
mov
in
les
int3
pop
rcrb
loope
rclb
adcb
shlb
pop
push
nop
cmpsl
int3
leave
stos
jae
and
fs
loop
in
in
test
fistl
jnp
sbb
cld
clc
sbb
jno
popf
mov
dec
jp
add
movsb
add
push
cwtl
inc
movl
pop
lret
fs
ss
xchg
or
xor
inc
js
rorb
insl
mull
das
dec
sub
gs
lret
call
xor
xchg
xchg
pop
movsl
lahf
inc
or
ja
sub
and
cmc
mov
mov
nop
loope
xor
nop
inc
test
mov
mov
fists
std
ret
push
pop
cmc
je
cmc
scas
cmp
xor
lret
sbb
adc
cmpsb
pop
insb
fldenv
pop
mov
jmp
sub
push
adcb
movsb
jmp
out
xchg
dec
jae
adc
push
mov
addr16
mov
mov
int
xchg
int
nop
lret
or
test
rcrl
popa
xchg
test
dec
clc
xor
xchg
repz
aas
lods
push
bound
dec
dec
push
aam
out
arpl
mov
mov
js
aaa
mov
mov
push
mov
add
shll
movsb
fmuls
cltd
adcl
mov
repnz
rorl
sub
inc
and
mov
mov
jnp
mov
mov
jmp
faddl
jecxz
stc
rep
nop
out
sbb
add
sti
jl
cmp
scas
insl
loop
imul
lahf
pop
mov
push
add
xchg
jge
inc
jge
xchg
lds
inc
dec
pop
insl
mov
movsb
int3
sbb
or
stos
into
mov
movsb
nop
addr16
xchg
test
loopne
mov
jecxz
push
out
mov
xlat
jo
std
test
and
xchg
std
mov
fstl
mov
movb
cmp
dec
jns
stc
mov
sub
out
ds
ljmp
jge
out
sub
jg
shlb
insl
iret
add
sub
cmp
das
fistps
push
aam
add
push
xorb
das
ret
ror
nop
push
sbb
lds
ds
jne
sarb
ljmp
movb
shll
pop
dec
xchg
lea
rol
push
jmp
mov
sub
cmpsb
or
pop
out
lret
cmp
imul
adc
ror
add
push
lock
pushf
into
jp
dec
dec
sahf
cmp
push
xor
jne
pop
cmpsl
jbe
cltd
frstor
in
pop
push
sahf
dec
frstor
cmpsb
hlt
pop
dec
push
mov
and
adc
test
mov
daa
ret
out
mov
xor
iret
pop
icebp
mov
or
dec
inc
aaa
adc
nop
or
dec
cld
sub
lods
or
arpl
push
test
popa
push
fsubs
adc
lea
into
adc
pop
es
insb
sahf
aam
ljmp
mov
xlat
pop
mov
das
xor
mov
xchg
hlt
jo
ljmp
loope
xor
pop
jl
bnd
pop
nop
aas
push
mov
cs
movsl
out
into
xor
scas
dec
aam
push
push
xor
cmp
in
je
je
dec
mov
push
mov
mov
cmpsl
mov
lods
cmp
fwait
pop
add
pushf
nop
cmp
daa
mov
mov
test
mov
push
fucomip
push
call
aaa
ljmp
pop
cmp
add
inc
insb
and
push
mov
inc
inc
sti
and
ljmp
jecxz
mov
adc
xchg
pushfw
imulb
push
xor
adc
leave
repz
inc
repnz
clc
push
push
mov
jl
into
syscall
fistps
jl
jp
ret
pop
loopne
cmp
mov
sarb
mov
xchg
fisttpll
jp
push
sub
movsl
rol
inc
inc
mov
mov
mov
clc
inc
popa
ficoml
sysenter
push
add
cmpl
repnz
sub
out
lret
out
mov
ljmp
pop
mov
xor
nop
push
jge
test
movsb
sbb
sub
sub
movsb
push
and
test
test
or
lahf
in
stos
call
push
shl
add
aad
or
push
sahf
fisttps
and
test
iret
adc
push
and
xorb
adc
sbb
xchg
mov
xchg
aas
int3
inc
jb
lcall
sahf
mov
ficoms
jns
mov
test
adcl
ss
push
enter
in
xchg
sbb
xor
fprem
mov
ret
mov
or
push
mov
scas
inc
xor
push
js
mov
or
cmp
mov
fwait
mov
push
int3
repnz
das
mov
or
xor
mov
xlat
xchg
stc
dec
adc
xlat
jne
or
cmpsl
sar
mov
call
gs
nop
popa
inc
mov
pop
or
dec
lea
xlat
clc
jp
adc
iret
jle
jl
xchg
test
adc
pop
xchg
pushf
push
arpl
fdiv
xchg
dec
daa
inc
push
push
push
mov
sub
icebp
add
cmp
jne
jne
xchg
in
out
fsubrl
dec
dec
adc
stos
adc
fwait
out
or
push
cmp
sbb
and
aaa
ljmp
jbe
shlb
mov
mov
jle
and
push
movsl
int3
inc
push
rorl
repz
loop
sbb
xor
jnp
repz
jle
sbb
test
jno
sbb
pop
lret
xor
loope
aas
pusha
and
enter
mov
insl
int
rorl
and
push
jns
cltd
fst
jo
jnp
add
repnz
lret
pop
orl
shr
jecxz
pusha
sahf
ljmp
dec
inc
push
cmp
test
js
mov
lock
and
jns
jns
mov
les
pop
cmp
push
jns
shld
cli
loope
xchg
adc
in
fildl
dec
aas
add
lds
aas
imul
adc
mov
imul
sets
sub
dec
hlt
jge
les
fistpl
sub
mov
int
pop
lret
inc
cli
lahf
push
cs
in
xchg
adc
movsl
and
mul
adc
add
ds
daa
es
mov
lods
rorb
js
mov
pop
aad
std
and
lods
pusha
mov
push
jle
pushf
sub
loope
mov
and
mov
or
daa
pusha
cmp
sub
cld
lret
int3
inc
mov
aas
xchg
jl
dec
bound
and
jnp
mov
jno
mov
fmulp
out
sbb
adc
iret
sbb
inc
in
into
addr16
test
mov
test
notl
mov
enter
push
mov
insl
mov
lods
mov
dec
pop
imul
mov
mov
jns
mov
clc
and
dec
mov
mov
mov
repnz
xor
push
std
leave
call
jmp
cltd
ret
inc
cli
test
pop
cmp
stc
fs
add
jge
add
push
cmp
pushf
adc
testb
dec
sub
clc
js
push
pop
movsb
mov
sar
in
call
pushf
lea
pop
call
js
imul
or
clc
fcmovnb
into
or
movsb
push
int
jle
in
xlat
cmp
mov
cmpsl
push
xacquire
in
pop
cwtl
js
dec
mov
add
cmpsb
and
outsl
inc
outsb
mov
xchg
testb
rcrl
pop
adc
pop
sub
test
ror
adc
outsl
xchg
sbb
mov
mov
inc
arpl
fldl
leave
jecxz
jmp
mov
jno
push
mov
imul
loop
inc
jns
insl
imul
and
and
push
push
subb
in
adc
or
mov
ljmp
mov
fs
xor
xor
inc
in
dec
pop
xchg
and
lret
xchg
or
out
inc
push
ror
mov
popl
sub
stc
cltd
xchg
lods
ret
mov
jecxz
addl
cmp
pop
std
fldt
push
in
lods
jmp
add
arpl
pop
test
movsb
stc
loop
jns
inc
fdivrp
dec
bnd
mov
and
jne
xchg
jb
mov
movsb
icebp
jne
jo
sarl
icebp
mov
fs
add
fisubs
ret
cld
sub
imul
pusha
jbe
push
and
cmpsl
or
mov
addr16
inc
mov
addr16
leave
and
cwtl
or
cltd
mov
sub
dec
jmp
lock
test
orb
lods
xchg
xchg
push
jo
dec
pop
loop
xor
out
jecxz
lret
jne
inc
pop
cmpsb
test
stc
cmp
cmp
jnp,pn
lea
gs
jne
movl
xchg
pushf
mov
mov
mov
or
sbb
jecxz
dec
into
mov
or
mov
mov
push
push
xor
rcll
mov
call
int
ds
fisubl
popf
shlb
xor
cmp
loope
mov
xor
pop
dec
dec
xor
mov
xlat
cs
push
dec
mov
outsl
or
mov
dec
cmp
test
cs
push
divb
mov
out
mov
mov
cmp
mov
loopne
into
fdivs
and
cmpl
lods
mov
lds
les
nop
arpl
xchg
insb
rorb
imulb
push
sub
shrl
nop
into
mov
mov
add
xor
jge
mov
or
je
sbb
xor
and
lea
or
jns
movups
in
add
xchg
mov
xor
shrb
sub
jae
xor
xor
push
je
addr16
push
xor
push
fnsave
aaa
lret
aas
sub
jo
in
rclb
add
fidivs
push
and
insl
mov
and
fimuls
inc
into
cmp
gs
pop
lock
jb,pn
popf
mov
mov
stos
jg
popf
cwtl
icebp
pop
movl
xchg
fstps
mov
mov
cmp
mov
push
jae
int3
jecxz
inc
pop
and
mov
movsl
enter
sarb
mov
push
aad
fbld
cmp
jne
insl
int
cmpsb
idivb
xor
repnz
icebp
push
data16
clc
lock
sbb
mov
imul
pushf
mov
insb
pcmpeqd
adc
divl
loope
xchg
fwait
call
or
lock
outsb
mov
jecxz
idivb
arpl
and
cli
test
cmpsl
xchg
es
add
add
pop
xor
pop
mov
xchg
mov
sbb
push
xlat
lock
mov
add
stos
sbb
xchg
imul
xlat
int
push
and
dec
shll
jg
sbb
pushf
and
iret
daa
int
cwtl
cmp
mov
fsubl
lods
add
mov
pop
sub
cltd
out
xchg
loope
adc
call
mov
dec
mov
pop
fwait
std
jae
movsb
xor
mov
repz
std
mov
cmpsb
subl
sbb
insl
xchg
lret
mulb
ret
je
mov
addr16
mov
sbb
cmpsl
fdivr
inc
orl
cmp
and
dec
jp
mov
mov
lock
cmp
push
cmpb
push
fwait
icebp
in
hlt
push
sti
jecxz
pop
mov
enter
out
daa
out
mov
sbb
cmp
stos
dec
or
lea
aas
add
in
icebp
pop
sbb
or
jmp
cmc
mov
or
sarl
cmp
adc
mov
loope
pop
into
mov
jae
fcoms
int
push
lods
jno
cmpsb
inc
fstps
cmp
cmp
jbe
mov
shlb
mov
xor
addr16
xchg
mov
xor
xchg
shlb
jl
ds
stc
push
or
testb
stc
xor
pop
ds
in
lahf
push
push
or
outsl
cmp
pop
ds
insl
adc
iret
adc
jns
mov
pop
insl
out
sbb
imul
or
jns
dec
push
push
inc
mov
dec
iret
mov
add
out
xchg
jg
cmp
test
repz
mov
sbb
jnp
push
outsb
lret
xchg
daa
cmp
sub
push
push
loopne
cmovne
sub
stc
movsl
xchg
xchg
pop
mov
dec
fistl
mov
xor
xor
pop
mov
pop
pop
mov
xor
mov
mov
das
xchg
ret
mov
lret
aas
popf
jecxz
mov
jne
push
daa
adc
leave
popa
xchg
jle
jnp
pop
or
shlb
clc
cltd
ljmp
jno
lock
or
sbb
dec
shl
sub
sbb
dec
mov
hlt
jno
sub
mov
in
and
jo
add
lcall
xor
stc
sbb
repz
fsubs
mov
or
nop
loopne
mov
jno
dec
mov
adc
and
xor
jo
xlat
adc
call
jmp
lret
or
cmp
mov
fidivs
sbbb
xchg
cmpb
xlat
add
inc
mov
xor
or
and
mov
cli
std
out
imul
cli
inc
popf
cmc
xchg
or
sbb
xchg
sarl
jl
popf
daa
das
leave
adc
add
das
out
addl
sbb
loop
mov
cmp
cs
mov
sti
mov
and
cmpsl
jo
out
xchg
in
add
push
lods
mov
pop
sub
and
icebp
sub
mov
ret
jb
or
gs
ljmp
xor
int
mov
mov
dec
andb
inc
pop
cltd
shrl
cld
and
rcr
sbb
and
out
mov
scas
in
loopne
push
sub
dec
icebp
pushl
jmp
add
addr16
push
nop
add
dec
jb
sub
aam
mov
adc
cltd
hlt
stos
inc
push
push
and
lcall
push
das
outsl
pop
imul
mov
dec
push
jnp
jns
lds
and
cltd
in
dec
jge
inc
mov
bound
xor
push
push
int
mov
xchg
cmp
rclb
enter
mov
xor
mov
dec
inc
adc
fadds
cmpsb
add
insb
addr16
or
aam
imul
pop
int3
mov
mov
sub
cli
fdiv
xor
rclb
ffreep
clc
aam
sarl
jl
mov
not
das
stos
pop
es
sub
mov
test
xor
ret
adc
roll
cmp
pop
cld
add
faddl
adc
fstpt
sub
xor
dec
add
sub
fisubs
and
mov
leave
pop
adc
mov
aad
pop
dec
repnz
outsb
adc
sbb
jo
mov
scas
add
outsl
sub
jne
lret
addb
dec
cmp
jp
daa
imul
mov
insl
in
and
clc
andb
clc
out
cmp
rcrb
out
mov
aaa
mov
aaa
xchg
fxch
std
test
push
xchg
ret
push
out
inc
push
push
add
xor
popf
xchg
out
xchg
mov
cmp
test
out
lret
pop
sti
adc
mov
push
inc
stos
lods
insl
cmp
lea
inc
sub
sti
jl
daa
fmuls
push
pop
lea
sbb
cmp
cmc
sub
sbb
stos
pop
cld
aas
jmp
andl
pop
lret
adc
mov
mov
or
mov
mov
addl
scas
sub
dec
repnz
or
mov
cltd
imul
out
dec
shlb
jecxz
daa
adc
jmp
mov
lahf
divb
and
shlb
jmp
inc
mov
fidivs
or
push
inc
cmp
push
data16
dec
mov
xchg
aas
cwtl
and
mov
in
jmp
pop
mov
sarl
arpl
inc
cwtl
jb
scas
push
repnz
sbb
lret
add
push
push
jnp
fists
xchg
or
adc
repnz
jp
xor
sub
ret
mov
pop
insl
mov
and
jae
fidivrl
lock
mov
push
or
add
fcompl
or
sbb
add
decl
jno
ror
prefetcht0
cmp
int3
add
stos
jecxz
ja
fwait
push
scas
cld
test
pop
bnd
adc
lock
xchg
test
xor
mov
dec
xlat
scas
insb
sub
mov
or
lret
mov
push
sar
xor
outsb
enter
movsl
imul
mov
add
push
sub
or
jo
mov
mov
jo
aam
pop
jnp
test
add
jmp
out
xlat
xlat
jg
movsb
aas
aad
lock
and
inc
or
sub
pushf
add
mov
add
mov
add
cli
out
daa
and
xor
push
dec
adc
mov
mov
loope
jne
adc
lods
in
dec
cmpsl
bnd
or
divl
xlat
loop
fiaddl
fdivrl
adc
repz
adc
mov
call
hlt
adc
mov
mov
call
ss
dec
loop
jae
xchg
into
call
test
xchg
popf
adc
cmp
jecxz
sbb
sahf
out
fdivl
ret
arpl
call
ss
sbb
and
ficoml
inc
addr16
pop
repnz
sub
push
mov
mov
push
clc
xchg
std
psllq
fs
push
in
cmp
xlat
mov
xor
dec
add
pop
lock
mov
repnz
lock
inc
sub
jmp
ja
dec
inc
xor
and
and
arpl
lret
mov
inc
ljmp
jmp
mov
orl
loope
xchg
adc
mov
mov
xor
fwait
cmpsb
sub
or
movsl
adc
add
popf
leave
adc
leave
mov
push
mov
push
dec
cmp
dec
repz
sub
leave
int
add
scas
mov
outsb
push
out
jae
arpl
add
xor
push
imul
mov
sbb
jg
aaa
ret
lods
movsl
cmp
inc
xor
sbb
inc
pop
daa
aad
lods
and
cli
dec
cmc
mov
or
sbbl
push
cmp
mov
fdivp
push
es
push
pushf
inc
inc
or
mov
sbb
dec
les
mov
pusha
jae
or
push
rcl
ljmp
xchg
not
mov
dec
or
fstps
pop
pop
fs
data16
sbb
jno
sbb
inc
inc
xchg
js
enter
mov
clc
mov
adc
stos
mov
adc
sub
mov
xchg
lock
add
loop
push
or
lods
sbb
das
jo
push
les
mov
xchg
push
es
and
pop
and
pop
out
in
icebp
jns
js
pop
test
jns
jbe
and
add
mov
mov
imul
push
fnstcw
insl
imul
add
xor
jae
cwtl
insb
add
dec
addr16
out
inc
push
das
mov
mov
rcrb
cli
inc
jbe
dec
stc
icebp
ljmp
fldenv
sbb
cld
add
out
inc
les
mov
mov
mov
sbb
es
push
pusha
mov
ffree
and
mov
inc
inc
cmpsb
aas
inc
sub
xchg
add
out
fidivrs
sti
shlb
sbbl
lock
inc
pop
orl
imul
insb
mov
gs
pusha
lcall
roll
xor
mov
cmp
cltd
lret
andb
ret
sub
outsl
inc
ja
insb
orb
and
mov
movsl
repz
mov
repnz
int3
es
daa
push
adc
adc
ljmp
lret
ret
pushf
lret
dec
sbb
repz
inc
xchg
aaa
ss
add
adc
mov
shl
aam
or
pop
cwtl
inc
mov
outsl
loop
mov
into
push
push
dec
inc
popa
inc
loop
mov
loope
subl
notl
mov
cmp
ds
loope
inc
loopne
push
xlat
xchg
sub
mov
adc
jnp
dec
dec
loope
mov
sub
sbb
push
leave
orl
imul
or
data16
jnp
daa
int3
add
push
mov
imul
ss
imul
loopne
icebp
push
fmull
shrb
mov
ficoms
mov
mov
aad
roll
out
cmc
add
xchg
lret
in
aad
mov
and
mov
nop
sub
sbb
je
sbb
adc
test
ljmp
out
push
in
call
fldt
test
xchg
or
loope
or
adc
pop
inc
lods
xor
insb
mov
or
push
mov
pop
and
fidivs
inc
or
mov
out
mov
jbe
je
xchg
inc
insb
aad
enter
mov
xlat
mov
lret
mov
ret
xor
add
push
andw
mov
inc
add
scas
rclb
repz
nop
iret
pop
jae
cmp
lahf
jb
fdivl
push
aaa
pop
mov
inc
adc
cmpsb
filds
and
leave
sbb
scas
xor
fwait
mov
inc
nop
xlat
cmpsl
les
pop
mov
cmp
dec
in
dec
mov
lret
je
and
clc
jecxz
or
mov
mov
loopne
fisubl
xchg
xor
lret
ja
test
mov
cwtl
cmp
mov
ficomps
fs
fcmovnu
mov
mov
mov
imul
push
cwtl
insb
int
jl
xor
fwait
dec
jae
sti
pop
mov
xchg
inc
in
mov
adc
push
push
fmuls
add
xor
adc
mov
nop
sbb
cmp
and
inc
popf
out
std
push
test
lea
adcl
cmp
xchg
push
popf
hlt
outsl
mov
adc
and
mov
cmc
adc
adc
inc
pop
xor
loope
sbb
mov
adc
jae
pop
packssdw
xchg
adc
subl
loop
cmp
and
xor
dec
call
mov
push
out
rorb
nop
inc
push
shll
test
mov
out
xchg
lods
movsw
xchg
inc
and
into
adc
sbb
push
add
js
pop
enter
sti
outsb
inc
arpl
push
jno
and
enter
cmp
jnp
jg
std
aas
out
rorl
cmpsb
test
fimuls
out
sub
ljmp
cs
imul
lods
and
jmp
mov
cmpsb
fistpl
pushf
ret
jae
and
clc
outsl
push
mov
mov
cltd
pop
out
cmp
rclb
sub
jmp
jmp
dec
in
mov
sahf
cmc
std
dec
pop
push
ja
cmc
xchg
and
adc
call
sbb
cmc
imul
jmp
in
ss
lret
dec
int3
mov
shll
mov
ds
mov
pop
sahf
ret
mov
adc
xchg
inc
xor
dec
out
jns
cmp
sbb
push
ljmp
outsb
in
dec
movsl
in
mov
imul
scas
orb
test
into
popa
into
jbe
jnp
pop
and
jb
mov
lret
add
rcr
jecxz
jae
cmpsl
mov
mov
int
mulb
or
pop
insb
xchg
mov
pop
xchg
aam
adc
jecxz
pop
dec
push
sub
call
movsl
xchg
test
push
mov
inc
fstpl
jp
jb
sbb
test
into
jns
sbb
outsl
insl
adc
cmpsb
pop
xchg
lahf
mov
movsl
sbb
push
push
ret
sub
rol
mov
sbb
les
fs
in
mov
inc
add
xor
xchg
mov
cmp
and
mov
xlat
fwait
stos
cmp
mov
inc
es
jmp
lods
jo
mov
lret
pop
xor
fcomps
mov
movsb
dec
pop
push
jbe
imul
ja
mulb
push
decb
xlat
int
xchg
add
xor
push
cltd
in
insb
push
or
jmp
push
or
int
push
inc
dec
mov
jb
jge
scas
push
repz
outsl
dec
add
cmp
int3
sahf
push
push
test
cwtl
xor
sbb
or
inc
negb
cmp
repz
add
sbb
mov
add
xor
and
sbb
leave
scas
jmp
je
adc
dec
mov
mov
add
mov
jae
pushf
cmc
cmp
pop
adc
sub
sti
sti
sbb
mov
movsl
fwait
and
insb
xor
loopne
insb
ljmp
sbb
jecxz
andl
xacquire
outsb
xchg
mov
jae
lret
mov
insl
pushf
cld
lds
jp
test
mov
xor
inc
xor
jne
leave
aad
lds
cwtl
mov
sub
sbb
sti
or
mov
out
ss
xchg
sub
enter
sub
jg
push
dec
insl
fwait
movsb
pop
cmc
rolb
inc
ja
mov
fldt
inc
shrl
push
inc
or
push
popf
ret
dec
push
add
shll
or
mov
in
cmp
push
xchg
mov
dec
insl
inc
xor
add
and
adc
fcoml
sbb
cmp
daa
mov
movsb
mov
fimull
cmp
mov
jns
lret
pop
fistl
cmp
inc
or
popa
cld
dec
fwait
mov
inc
in
sbb
cmp
dec
lods
dec
cmp
scas
pop
dec
adc
mov
pop
xchg
xlat
push
fbld
dec
xchg
adc
push
loopne
js
mov
mov
aas
sbb
out
aad
push
dec
loop
mov
add
mov
test
xor
jnp
out
inc
testb
or
push
setg
dec
sub
std
add
stos
xor
movsl
in
stos
jle
xor
sub
pop
in
dec
leave
mov
out
add
sub
cmp
sub
xchg
jmp
in
jne
in
and
sahf
cmc
mov
sbb
pop
aad
xchg
out
in
ds
push
hlt
imul
pushf
mov
jnp
mov
cmp
mov
push
shll
xor
popf
in
call
out
test
xor
std
fsubrs
in
jg
xchg
ret
rcr
fbstp
sbb
sub
mov
push
enter
mov
xor
mov
and
inc
lock
ljmp
ja
dec
in
sbb
addr16
sarb
repz
sub
cs
daa
and
inc
loope
xchg
push
cltd
orb
jb
and
and
adc
add
sub
push
xor
fidivs
lahf
movsb
enter
mov
aam
mov
loop
rcr
repz
stos
push
in
in
mov
bound
push
iret
dec
lret
dec
push
insb
out
sarb
out
xchg
jo
cmc
or
add
fmuls
push
lods
cmpsl
fidivs
dec
stc
aad
push
pop
fisttps
sub
push
stos
jle
ret
mov
outsb
or
mov
cmpl
mov
test
test
fdiv
cmpl
ret
js
andb
sbb
in
pushf
pop
aad
pusha
mov
gs
mov
dec
push
pop
int
aad
enter
xchg
lds
inc
xor
xor
or
xor
test
mov
fidivl
push
push
mov
mov
outsl
fisttps
insb
or
and
mov
push
and
icebp
adc
leave
scas
sti
lea
insl
nop
out
mov
test
mov
or
fs
xlat
xchg
lret
sub
andb
xor
and
adc
iret
mov
sub
mov
inc
mov
shll
adc
xchg
or
leave
xchg
push
in
sbb
pop
ss
fists
call
mov
and
push
push
sbb
or
xchg
scas
movsb
ja
sbb
test
xchg
cltd
add
dec
insb
dec
cmpl
jp
loopne
call
repz
xchg
sbb
xchg
lds
lds
fnstcw
xchg
iret
and
scas
movsb
movl
add
push
out
push
cmp
bound
scas
and
call
ljmp
xlat
adc
shl
mov
sti
negl
mov
cli
lret
dec
cmp
aad
ret
popf
fnstenv
or
idivb
jns
sbb
aam
mov
xchg
idivb
inc
inc
adc
sbb
xchg
xchg
lahf
bound
imul
fsubl
imul
gs
out
dec
mov
jg
adcb
add
sbb
xchg
xchg
pop
sub
and
jmp
xchg
test
fistpll
daa
cmp
mov
cmp
lods
hlt
add
mov
cli
dec
cmpl
fnstcw
movsl
stc
pusha
pop
push
fmulp
ret
mov
jge
cwtl
jg
adc
testl
and
fucomi
sub
and
nop
sbb
push
cmp
jnp
inc
mov
fcoms
pop
inc
insl
mov
add
push
add
add
adc
into
stos
or
cmp
xchg
sub
dec
jmp
cs
fnsave
xchg
adc
jg
dec
int3
lds
lret
jno
leave
and
into
divl
cmp
in
outsl
dec
add
sbb
pop
idiv
js
mov
shll
stos
sub
dec
pop
xchg
stc
iret
popf
sar
test
pop
jno
sub
inc
add
xor
out
nop
js
push
shlb
xchg
xor
inc
daa
sbb
clc
xor
pushf
loope
adc
call
xor
and
cwtl
cmp
in
pop
loope
push
dec
movsb
cmpsl
mov
push
in
mov
pushf
testl
xchg
inc
pop
sub
jp
mov
adc
mov
mov
cmpsl
data16
icebp
test
out
dec
js
out
cmpsb
and
aaa
inc
gs
idivb
test
inc
sbb
push
push
cli
push
sub
cmp
mov
popf
in
dec
push
data16
movsl
orl
pop
or
fwait
cmp
movsl
inc
dec
adcl
out
mov
sub
test
fimull
sahf
dec
decb
in
jp
stos
mov
lahf
lret
iret
cs
xchg
in
hlt
jns
retw
ljmp
sub
test
cmpsb
and
pop
sti
js
lods
sbb
add
imul
fmull
call
sbb
pusha
outsl
jo
xor
xor
and
mov
inc
in
add
dec
popa
ret
sbb
insb
int
bound
dec
pop
insb
lock
push
mov
and
call
mov
pusha
push
pop
xor
shlb
and
inc
jns
int3
test
jle
fildl
shr
jl
pusha
orps
sbb
pop
out
orl
movsb
mov
or
add
addb
sub
pop
lods
cmpsb
inc
mov
inc
int
cwtl
outsl
lahf
and
out
out
lock
outsl
andb
pop
repnz
lds
pusha
ficoms
ljmp
mov
pop
repz
leave
dec
in
mov
repz
mov
inc
mov
adc
mov
adc
das
xchg
mov
mov
sub
movsbl
dec
dec
cmc
xor
std
ret
lea
movsl
sbb
mov
je
lret
sbb
scas
mov
pop
mov
or
jb
add
testb
adc
mov
inc
sbb
or
andb
adc
rclb
mov
imul
scas
cmp
sub
jno
out
cmpb
push
mov
sub
adc
shll
jl
sub
sub
mov
or
loopne
shrb
inc
lock
fstpt
xor
inc
pop
xor
and
rolb
js
or
aaa
fnstenv
rcrb
fdivr
mov
andb
cwtl
es
leave
lret
push
popf
inc
cmp
xor
jno
pop
aad
sbb
fcoms
and
push
xor
jae
jmp
mov
pop
jge
inc
scas
add
jmp
lods
jbe
lods
jp
or
rclb
and
xor
aaa
push
or
adc
jecxz
aad
push
jmp
out
addr16
push
push
insb
mov
mov
je
pop
mov
mov
stos
in
in
mov
movsb
mov
or
and
jmp
data16
imul
jns
inc
xchg
stc
nop
cmpsl
and
dec
dec
enter
jbe
scas
mov
jmp
out
orb
popf
xlat
mov
cli
imul
lea
inc
mov
je
xchg
xrelease
aaa
push
rcll
mov
push
mov
sub
test
pop
dec
subl
insl
dec
popa
pop
xchg
jmp
fwait
stos
aaa
push
jbe
call
pop
jge
dec
test
jne
sbb
push
sbb
xchg
fwait
sbb
outsl
jo
loope
and
inc
sub
and
movsb
inc
xchg
faddp
ds
add
mov
mov
mov
mov
mov
or
jnp
push
les
cwtl
pusha
aas
mov
cmpsb
movsl
inc
mov
orb
jb
pop
popf
pop
dec
mov
xchg
pop
aad
lcall
push
push
test
xor
inc
push
mov
lock
jmp
push
ljmp
pop
or
out
movsb
inc
in
inc
xorl
cs
out
in
dec
jo
mov
imul
mov
test
test
pop
test
mov
das
push
cmpsl
and
jae
out
aaa
jnp
and
fwait
or
shl
adc
cmc
or
sub
adc
jg
jbe
mov
jmp
cmp
shlb
ljmp
adc
jp
lret
aaa
lds
sub
jno
aas
cld
fdivp
lahf
cs
daa
push
xchg
sti
clc
ret
scas
pop
jg
mov
pusha
and
xchg
iret
sbb
in
in
ds
push
inc
push
aad
add
movsl
jmp
push
pop
add
es
cmp
fdivl
loop
int
push
sar
jno
lods
pop
mov
in
es
dec
lds
divl
test
xchg
add
enter
mov
fcomps
movsl
out
push
insl
jp
cmp
adc
add
dec
in
aad
xchg
mov
jo
ja
ficoms
or
scas
pop
lea
int
insl
inc
nop
ret
cmpsb
movsb
imul
in
rcrb
mov
dec
mov
scas
fiaddl
adc
sahf
lret
pusha
lret
cmp
lods
jae
cs
sbb
loopne
lds
sbb
xchg
and
andb
mull
imul
sarl
mov
inc
sub
xor
loop
or
js
filds
cmpsl
inc
dec
leave
xorb
lcall
mov
imulb
sub
gs
push
int
ret
mov
fldcw
xchg
xchg
add
push
mov
xchg
std
xchg
cltd
popf
ljmp
movsl
jmp
mov
inc
xor
sti
fwait
lds
jecxz
xlat
or
psubsw
and
or
movsl
call
lret
jmp
adc
in
push
sub
testl
shrl
xor
pushf
inc
push
xor
jne
ss
dec
ljmp
mov
pop
imul
or
arpl
insb
sub
mov
xor
mov
dec
fistpll
cwtl
aas
xor
ds
mov
jg
mov
repz
lds
outsl
sti
clc
data16
rorb
or
pusha
lcall
ret
sarb
leave
inc
mov
sub
sub
jnp
lds
and
ljmp
inc
pop
add
jecxz
mov
mov
imul
mov
sbb
test
and
sbb
test
adc
mov
push
mulb
icebp
clc
xchg
aam
insl
adc
test
mov
pop
dec
nop
dec
mov
cmp
stos
mov
icebp
and
cmp
enter
cmpsb
cmpl
lods
mov
xor
mov
mov
rorb
cmpsl
and
sub
movsb
outsb
xor
movsl
cmpsb
scas
adc
ret
movl
xor
dec
fyl2xp1
or
push
mov
test
ds
dec
push
test
jbe
add
in
and
pcmpeqb
pop
xchg
inc
xchg
sub
int3
or
or
add
xchg
or
push
inc
xchg
dec
adc
sub
mov
xor
test
or
repnz
call
movsl
aaa
cld
dec
jns
push
and
stos
insl
and
pop
jge
test
hlt
les
fsubrl
mov
sbb
pop
dec
cmp
test
push
neg
xchg
or
pop
loop
or
je
cmp
xor
aad
pop
popf
lret
loop
or
inc
out
mov
fildl
insb
add
and
xor
xor
gs
rcll
int
sbb
negl
pop
loopne
pop
idivb
jns
push
adc
pop
push
dec
and
outsb
xchg
lahf
int
jno
sbb
pop
rclb
cli
lds
int3
sti
movsb
lret
js
arpl
cmc
and
inc
fs
stos
loop
jl
mov
imul
scas
inc
aas
sub
mov
paddsb
repz
mov
jle
cmc
jns
lods
fisttps
cmc
daa
mov
and
int
mov
lods
jp
hlt
fs
sbb
enter
xchg
shl
movsl
jl
dec
jns
stos
and
mov
pop
fwait
jmp
ficoml
mov
ja
cli
mov
push
sub
test
inc
inc
mov
in
cltd
xor
mov
pop
js
pop
repnz
mov
stos
dec
xchg
imul
sbb
icebp
add
test
inc
mov
add
add
and
sahf
lods
mov
pop
xchg
in
stc
aam
test
push
int
push
jge
sbb
add
jne
pop
lds
loopne
es
dec
sbb
subl
jge
sar
dec
inc
out
xlat
scas
mov
sbb
pop
test
mov
insl
std
cwtl
es
dec
mov
mov
js
jle
xor
fiaddl
dec
mov
cmp
xchg
sub
int3
test
jl
call
addr16
cmp
push
roll
xchg
cmp
ja
movsb
xor
push
pop
das
mov
out
fisubl
xor
lret
push
xchg
inc
test
cmp
cwtl
sar
out
insb
pop
dec
les
jb
xor
sti
xchg
or
add
mov
fucomi
xor
sbb
loopne
dec
neg
lret
les
pop
push
imul
mull
mov
add
daa
rcrl
mov
pop
es
jno
stos
in
jp
and
test
in
popf
in
inc
mov
neg
pop
jns
xchg
sbb
out
mov
repnz
push
xor
dec
push
push
add
into
fs
movsl
push
jg
xlat
jns
xor
or
cmp
jo
push
test
js
roll
bound
stc
lods
cmp
push
loopne
cltd
xchg
mov
fwait
outsl
js
pushf
jg
dec
jp
stc
bound
or
dec
adcl
mov
scas
iret
mov
mov
pop
mov
and
pushf
xor
mull
and
daa
nop
fidivrl
inc
inc
jbe
dec
dec
sti
jmp
cmp
mov
shll
mov
lcall
and
jmp
push
and
lods
cld
daa
cld
pop
adc
push
adc
mov
lods
pop
jle
pop
rorl
loopne
xor
stc
inc
lret
call
std
adc
mov
in
push
lret
xlat
sti
push
jo
xchg
dec
mov
mov
daa
test
adc
divb
xchg
jg
pop
xchg
ficoms
and
sub
arpl
orb
arpl
pop
bndldx
call
shl
mov
cmp
icebp
int3
icebp
adc
arpl
imul
adc
sub
fstp
or
lcall
cmp
jp
lods
js
add
sbb
lods
push
sti
pop
paddusw
sub
and
mov
cmp
scas
mov
addb
and
ja,pn
sbb
xor
xchg
push
sub
pusha
insl
pop
or
lret
add
jmp
mov
dec
sub
mov
lods
xchg
jl
movsb
cmp
mov
add
cmc
adc
lahf
les
pop
js
lock
sbb
cmp
inc
rcrl
inc
pushw
cmp
in
sub
les
loope
mov
nop
popf
movsb
cmp
es
ret
rcrb
dec
mov
movsb
inc
push
sub
mov
popa
in
jp
jae
cltd
stos
into
fs
push
jns
addr16
mov
cli
adc
test
inc
xchg
enter
add
je
pop
xchg
cmpb
mov
outsl
in
sub
cltd
arpl
add
in
mov
push
hlt
out
out
je
push
adc
flds
jecxz
and
and
out
mov
lods
or
jmp
fidivs
arpl
and
cld
inc
push
popf
das
stos
pop
xor
fcomps
aaa
movsl
xor
cmc
or
aam
call
outsb
lock
push
sub
sti
sahf
mov
mov
sub
add
add
imull
push
jecxz
dec
push
mov
sub
int3
mov
mov
sub
sbb
xchg
sbb
push
stc
cmp
movsb
loop
push
mov
ret
inc
in
mov
fadd
pushf
in
push
cmp
aad
das
dec
jle
pop
cmp
adc
idiv
fisubrl
stos
mov
lea
jecxz
dec
repnz
mov
pop
xor
push
insb
jle
mov
mov
and
or
mov
mov
pop
imul
pop
dec
sarl
adc
fwait
sub
les
in
leave
mov
sub
rcll
negl
cmp
add
push
mov
inc
roll
aaa
push
and
xor
or
lahf
aaa
sbb
mov
ljmp
mov
stos
sbb
fmul
jp
sbb
add
mov
dec
aaa
addl
sbb
xchg
mov
xchg
mov
mov
cs
mov
fdivrl
cmp
shll
pop
and
aad
mov
dec
and
xlat
pop
pop
fbld
dec
mov
fsubs
testb
pushl
ja
pusha
int3
mov
sub
imul
enterw
ljmp
sbbb
imul
inc
movsb
dec
es
lret
cld
mov
sbb
mov
lock
ret
lret
adc
lea
sub
sbbl
lods
jnp
jge
insb
jl
dec
sbb
mov
cmp
jns
vmovshdup
pop
cmpsb
or
divps
imul
int
cli
push
mov
and
clc
and
inc
lcall
les
add
sub
ljmp
pop
test
std
fs
pusha
rclb
test
adc
mov
adc
fstps
call
jg
insb
stc
mov
movsb
and
xor
pushf
fidivl
movq
xchg
imul
aam
arpl
arpl
fcomip
and
mov
adc
in
faddl
hlt
sti
sbb
into
fwait
push
movsb
idivb
pop
fiadds
adc
ficompl
adc
lods
mov
sysret
lret
shrl
jmp
out
push
inc
dec
imul
notl
jp
adc
cwtl
shr
ret
jl
xor
add
sub
sub
loopne
jae
call
add
pop
xchg
jo
aad
arpl
mov
gs
inc
shrb
nop
push
pop
in
xchg
xchg
jmp
test
jge
xchg
pop
sbb
push
cmc
dec
push
inc
lret
movsb
mov
cmp
cmp
adc
fwait
mov
jne
and
jno
test
sbb
sbb
and
and
clc
or
insb
push
outsl
out
loop
ret
sub
cli
mov
push
sub
and
cmp
cmpl
cmp
cmp
rolb
and
mov
fcompl
call
mov
or
mov
mov
mov
mov
es
mov
mov
add
rorl
out
jb
gs
sbb
lea
je
push
dec
xchg
andl
rcl
sub
jnp
mov
stos
fsubs
or
jb
fadds
in
mov
icebp
data16
mov
in
sub
add
in
pop
inc
adc
dec
fstp
jp
mov
sbb
xor
loopne
xchg
pop
and
stos
nop
iret
fs
mov
shrb
dec
add
adc
mov
add
fiadds
in
flds
sbb
cmpb
pcmpeqb
inc
flds
jns
dec
stos
in
nop
lds
movsb
pop
xchg
push
test
sbb
jge
mov
xor
bswap
movsb
jb
fwait
mov
sub
fxch
inc
cltd
mov
inc
push
mov
jle
jns
mov
cwtl
pop
dec
gs
pop
jmp
mov
or
xor
mov
xchg
daa
push
iret
xchg
cltd
xchg
xor
les
pop
xchg
leave
and
push
ja
cs
mov
sub
insb
arpl
sbb
dec
mov
mov
xlat
inc
out
or
xchg
jl
inc
or
popa
arpl
imul
mov
setne
push
adc
sub
pusha
add
pop
xchg
stos
pop
mov
dec
jbe
cmpsb
ret
dec
outsb
lods
outsb
int3
test
pop
or
sub
test
jecxz
jle
xor
pusha
cli
push
rorl
adc
mov
in
fnstsw
or
aaa
rorb
cld
ljmp
inc
and
pop
call
js
cwtl
jg
mov
lods
xchg
cmp
add
push
xchg
jl
jecxz
in
or
rclb
pusha
arpl
or
movsb
cltd
mov
fidivl
mov
imul
pop
bsr
jecxz
dec
mov
mov
jnp
jmp
iret
xlat
in
pop
add
xchg
mov
pop
cwtl
push
loope
aad
and
xor
test
push
stos
pusha
scas
addl
cs
sbb
std
dec
movsl
cltd
test
adc
notb
shr
inc
stos
or
or
pop
inc
test
jge
out
or
jge
mov
nop
push
pop
xchg
scas
sti
mov
pop
outsb
cmp
xchg
mov
fmuls
sbb
add
dec
pop
fcmovu
das
pop
call
inc
or
push
enter
fcoms
shr
repnz
or
dec
xchg
shll
pop
test
in
and
cmp
sub
mov
sbb
jbe
hlt
pop
or
out
jne
daa
pop
dec
ja
into
cmp
mov
out
dec
inc
cmp
push
mov
pusha
loopnew
lcall
test
and
jns
jle
adc
and
push
and
mov
js
mov
xchg
push
popf
push
dec
ss
mov
cmc
sub
stos
adc
out
loope
dec
mov
mov
cltd
pop
pop
pop
jg
jecxz
mov
dec
cwtl
ja
sar
pop
sbb
mov
pop
or
fdivs
mov
jne
shrl
sub
sti
jns
cmp
or
cmovg
cli
ds
lret
or
cmp
pop
arpl
sarl
mov
out
dec
out
out
pop
cmp
dec
comiss
jbe
or
sub
jne
dec
mov
in
loopne
or
idiv
jl
mov
lea
sti
imul
add
xor
shrl
div
xchg
cmp
rcrl
push
sti
aas
jge
in
fdivrl
rcr
pop
dec
cmp
fs
sub
rclb
add
jnp
lds
push
fs
inc
inc
xchg
int
adc
pop
adc
aas
pop
mov
ds
in
shlb
enter
es
pop
pop
push
sarb
dec
or
add
rcrl
ret
fistpll
add
rcl
repnz
es
in
pop
adc
repz
loop
or
ds
outsl
xchg
pushf
jbe,pt
add
test
xchg
daa
pushf
adc
xchg
ss
cmp
and
test
mov
flds
jb
xchg
xor
mov
and
sub
cmp
xchg
xchg
xchg
mov
sbb
push
bound
inc
sbbl
and
mov
lds
lahf
xchg
add
add
and
dec
dec
sbb
mov
decb
cmp
sbb
out
lcall
pusha
xchg
xor
fisubrs
push
rorb
sub
pop
stos
pop
mov
fcmovnu
mov
loop
in
push
sbb
icebp
ds
xchg
lcall
jae
adc
sub
pop
in
pop
push
xchg
cwtl
jl
fldcw
jo
sbb
pushf
cmp
lea
mov
inc
sub
fsts
cmovs
fsubrl
adc
aad
mov
mov
insl
test
xor
andl
int3
sbb
xor
mov
clc
in
fistpl
stos
or
mov
inc
aas
fwait
mov
mov
loope
sbb
and
scas
js
clc
ret
ret
sub
fnsave
mov
fnstcw
cmp
inc
jae
pushf
inc
dec
adcl
test
insb
movsl
ja
xor
addr16
push
lret
sbbb
or
sub
fdivl
mov
lds
mov
dec
movsl
push
fdivp
add
ss
push
mov
inc
jle
cmp
mov
imul
negl
int3
andb
xchg
fcmovnb
xor
addr16
jmp
cwtl
test
adc
mov
cmpsl
lahf
stos
fisttpll
mull
inc
lock
lahf
sahf
popf
outsl
jae
repnz
aaa
or
or
push
jg
bound
mov
out
ret
mov
add
adc
jb
xor
repnz
inc
mov
cmpsl
jne
bound
sbb
jecxz
jmp
xchg
les
lret
popf
ds
scas
mov
pop
fnstsw
inc
test
in
fidivrl
add
cs
jl
mov
push
push
jne
cli
mov
ss
sbb
sub
in
dec
or
xchg
jle
push
jl
test
movb
repz
jb
xchg
jp
add
packuswb
das
push
add
fs
or
lock
insl
fs
sub
jle
popf
shrl
and
addr16
jb
aas
inc
pop
testl
stos
push
cmp
fiadds
icebp
data16
mov
or
jmp
insl
arpl
jae
jb
lds
aam
sbb
sbb
push
inc
data16
fcmovu
add
repz
int
or
cmp
rclb
xchg
dec
mov
xor
push
ljmp
pop
add
dec
pop
aas
jmp
dec
out
in
push
and
pop
rorl
pop
push
rolb
xlat
dec
xor
mov
inc
pop
inc
push
in
push
jne
repz
sub
call
scas
test
jmp
mov
jno
out
cmpb
mov
jmp
cmpsb
add
mov
mov
out
sub
int
xchg
sbb
daa
mov
pop
xor
cmp
outsb
jb
shrb
and
xchg
lods
ljmp
fildl
jno
cli
pusha
adc
xchg
popa
mov
and
fstl
es
cmp
pushf
xchg
xchg
rorl
pop
push
inc
jne
aaa
mov
xchg
test
mov
add
dec
mov
jecxz
test
cmp
xchg
pop
pop
mov
lods
ja
int3
xchg
push
pop
lret
je
xchg
add
emms
push
test
xchg
inc
adc
add
ret
mov
mov
out
fiaddl
jl
xchg
xchg
lock
xchg
dec
cmpsb
xchg
lahf
lock
incb
push
add
stos
and
enter
test
dec
xor
pop
mov
xchg
jnp
mov
sub
stos
in
cmpsb
outsb
dec
or
repnz
push
push
adc
jmp
dec
jnp
mov
out
mov
mov
bound
adc
out
loopne
mov
jae
and
lcall
or
xor
adc
popa
andl
push
popa
jo
lret
jp
cmc
mov
repz
lods
std
mov
sti
arpl
cli
fisttpl
dec
outsl
jo
jmp
repnz
je
sbb
in
lcall
mov
movsl
xor
add
cmp
dec
sub
loopne
aad
movsb
fisubs
popf
lds
mov
clc
jmp
rcll
adc
imul
inc
stc
adc
xor
lss
cmp
jno
fs
in
call
cmp
pop
les
jmp
loop
ss
or
mov
adc
popf
push
add
repnz
out
rol
add
cmp
std
push
sbb
mov
outsb
test
fisubl
add
rorl
dec
and
je
cmp
pop
pop
outsl
and
mov
push
inc
lods
stc
jle
pop
jnp
xchg
cmc
outsl
aas
add
mov
add
lret
sbb
dec
pop
fldenv
bound
dec
sbbl
ds
mov
pop
and
pop
dec
movsb
dec
or
dec
enter
rcl
popa
xor
ja
mov
jle
subb
inc
ret
lcall
sub
es
movsl
mov
push
scas
mov
cmp
xor
inc
add
das
xor
sbb
jo
jge
push
rcl
shll
mov
fisubl
sbb
std
xchg
inc
adc
jl
cmp
sbb
lea
adc
dec
cmc
pop
out
and
fwait
push
test
movsl
cmpsb
inc
lods
fisttpl
or
pop
mov
xchg
mov
in
xchg
jns
mov
je
and
pop
inc
fisubrs
jne
je
out
sub
push
mov
mov
shrb
add
test
dec
pop
fisubrs
mov
add
pop
imul
cli
repz
loop
ficoms
add
test
inc
aaa
fwait
aad
jno
popa
mov
cmp
xor
add
mov
xchg
mov
cli
jge
jbe
dec
xchg
je
xchg
sub
adc
sub
xlat
adc
pop
xor
js
jno
pop
ret
stos
mov
pop
cltd
mov
repz
ds
sub
mov
mov
lea
mov
sub
xchg
pop
int3
lahf
lret
cmpsb
pop
xor
xor
sbb
mov
sahf
ljmp
leave
test
test
sbb
gs
lods
mov
mov
xchg
lcall
and
call
or
or
test
xlat
les
lock
cld
cs
scas
shl
movsl
out
mull
pop
adc
je
ljmp
xor
mov
loop
sub
xchg
sub
test
repnz
xor
iret
add
lock
pop
scas
inc
scas
sahf
mov
push
cs
mov
test
xchg
in
test
xor
push
mov
lea
es
outsb
push
imul
push
pop
stos
inc
scas
leave
sub
pop
test
loopne
sbb
mov
shll
sbb
push
and
jae
mov
enter
or
fcmovbe
sub
and
xchg
xchg
cld
aas
lret
lahf
pop
int
movsb
xchg
ret
mov
sbb
rcll
push
add
in
pop
shrl
ss
aaa
mov
cmpsl
scas
outsb
aam
cmp
arpl
in
xchg
lds
add
clc
mov
or
mov
dec
out
divb
mov
pop
repz
mov
pop
dec
call
jmp
adc
leave
enter
inc
xchg
adcb
adc
lcall
test
repnz
sub
inc
mov
int
push
push
fistps
in
adc
lret
jp,pt
clc
out
jb
repnz
push
sbb
fadds
mov
or
jecxz
adc
jmp
sub
ds
push
ja
jg
push
fidivl
les
scas
out
mov
sub
in
je
into
mov
aaa
lock
pop
xchg
jbe
outsl
push
ljmp
fnstsw
clc
iret
and
jle
add
xchg
aad
jg
pop
xor
insb
sub
xor
or
xchg
cmp
mov
cmp
call
jo
jne
lret
xor
shr
mov
pushf
pushf
repnz
sbb
mov
inc
xor
sti
pop
movsb
xor
push
xchg
sahf
inc
scas
cmp
pop
ss
lahf
in
cwtl
fstps
sbb
enter
cmp
outsb
outsb
xchg
jmp
insl
rcr
jne
inc
pop
enter
aas
fwait
add
lahf
mov
mov
jno
iret
sbb
sbb
aad
cmpsl
test
xchg
xor
nop
rcr
test
or
xor
movl
aad
rol
pushl
enter
inc
cli
js
dec
or
xchg
jmp
mov
scas
xorb
cmc
insl
mul
pop
out
insl
push
int3
clc
pop
jb
xor
xchg
inc
mov
adc
outsl
cltd
dec
in
push
mov
shrl
in
pusha
xchg
xor
into
scas
sbb
xor
stc
or
push
mov
lods
testb
test
fwait
adc
ret
sub
dec
and
jo
mov
mov
push
pop
shll
fcompl
lods
jnp
xchg
jg
xchg
dec
mov
mov
jle
stos
into
sub
sbb
pop
cmp
or
lret
and
lods
sub
rol
adc
cwtl
icebp
sbb
push
pusha
push
sbb
cmpsl
inc
notb
sbbl
pop
jmp
test
stc
push
out
dec
sbb
lods
mov
popa
and
in
ds
and
or
stos
pop
pop
inc
out
xor
jp
out
fisttpll
push
sbb
pop
mov
add
ret
mov
dec
clc
lret
popl
call
mov
cmp
adc
cmp
jae
test
fisttpl
scas
push
sti
mov
push
lea
mov
aad
aas
cmp
addr16
mov
push
xchg
and
cmp
mov
imull
mov
adc
frstor
cld
fstpl
sub
jecxz
bound
dec
mov
test
and
repnz
cmpsb
push
adc
add
sbb
jmp
push
mov
fisttps
or
ss
lret
push
push
adc
and
cmp
in
xor
push
not
es
adc
out
daa
ds
inc
xchg
jae
sub
mov
dec
adc
es
in
sbb
mov
jg
movsb
out
inc
repnz
jl
aam
mov
call
je
add
stos
icebp
and
mov
jb
fcmovne
imul
cltd
cmp
test
sti
outsl
add
cmp
inc
int3
iret
cli
push
pop
cmp
rorb
mov
or
data16
and
and
jmp
clc
xor
cld
incl
popf
mov
les
adc
push
xchg
sub
sub
icebp
pusha
inc
in
adc
pop
fidivrl
push
into
inc
mov
aam
inc
aaa
cmp
jae
sub
fsubrl
xchg
xor
sarb
mov
inc
mov
decl
xchg
xchg
ffree
jae
sub
jno
inc
xor
push
ja
cmp
adc
lret
stos
adcl
sub
cmp
bound
sbb
adc
ret
or
data16
dec
pop
test
sti
or
int3
lcall
cmp
push
test
or
ror
lods
add
xchg
int3
cmpsl
jno
xor
repnz
push
mov
lods
push
add
jb
mov
mov
gs
out
stc
shll
out
test
sub
mov
sbb
mov
jne
push
xor
cmp
outsb
lods
inc
xchg
aam
mov
enter
lods
cli
mov
fiadds
sub
mov
test
pop
push
or
ljmp
dec
sub
lahf
shrb
jg
mov
pop
mov
inc
icebp
dec
sbbl
xchg
pushf
repz
inc
and
sub
sub
cmp
test
ficomps
mov
leave
add
or
out
hlt
jbe
push
mov
inc
fnsave
push
decb
mov
out
xchg
pop
insb
adc
bound
pop
ret
add
push
mov
pop
jle
mov
fs
cmp
mov
jns
bnd
ret
movsb
stc
sbbb
shl
sti
and
lret
xor
push
scas
mov
enter
xchg
shrl
push
mov
out
sbb
pop
hlt
mov
mov
ss
push
push
mov
cwtl
outsb
xor
outsl
aaa
jl
sahf
mov
mov
cs
mov
or
imul
mov
das
xor
pusha
dec
mov
pop
cmpb
xor
ljmp
mov
int3
ror
ds
or
in
insb
mov
addr16
fdivp
das
pusha
je
mov
dec
jnp
cmpsb
mov
jbe
rsm
shll
shlb
js
adc
pop
pop
push
shll
ret
xchg
repnz
adc
mov
lock
jbe
adc
inc
jo
insl
fstps
nop
dec
test
pop
mov
mov
movsl
adc
cmp
or
iret
fsubl
mov
or
dec
loopne
jecxz
add
inc
jno
in
inc
inc
sahf
incl
add
pop
lock
adc
leave
xor
lea
enter
mov
push
mov
push
inc
and
pusha
mov
inc
icebp
mov
ret
jo
repz
ds
mov
hlt
ret
jmp
je
aas
cli
mov
insl
mov
pop
ss
or
add
dec
inc
cmpsl
add
mov
es
out
fstp
mov
das
mov
jp
push
cmp
push
loopne
ljmp
mov
cmp
pop
into
stos
mov
and
dec
cld
adc
ja
cmp
cmpsb
loope
xchg
or
pusha
push
scas
cs
fimuls
nop
push
fldt
inc
inc
and
stos
xchg
ret
and
xchg
jnp
call
pop
mov
mov
jnp
or
popf
fnstcw
daa
xor
mov
push
test
xchg
shlb
xchg
lods
gs
mov
cld
or
shll
mov
xchg
cmpsb
and
in
es
adc
mov
push
stos
and
cli
adc
adc
lahf
xor
jl
imul
imul
mov
out
aad
sbb
filds
test
out
mov
jge
daa
test
inc
adc
imul
xchg
adc
inc
inc
jae
daa
push
dec
pop
jne
cmp
out
out
push
or
pop
pop
in
mov
cld
call
pop
mov
loop
inc
jb
adc
mov
push
sbb
aad
leave
or
dec
xor
inc
or
lcall
jbe
sub
cmpsb
stos
mov
xchg
les
hlt
gs
imul
jne
frstor
lock
xor
mov
mov
and
out
es
jne
loope
and
aam
pushf
jae
push
mov
pop
cmc
xor
xlat
pop
jecxz
ret
xchg
sub
push
jo
mov
popf
ljmp
stos
cmc
xor
push
jns
shll
jns
in
lret
ss
call
ja
das
xor
out
in
test
sub
xlat
sub
icebp
sub
fsts
or
in
les
xor
push
in
repnz
ja
dec
aam
sub
insb
pop
std
bound
and
push
lock
inc
aad
adc
dec
sub
fnstcw
adc
xorb
sbb
das
add
cmp
pusha
fildl
int3
fldcw
fadds
movsb
rcrb
hlt
jg
mov
mul
mov
out
mov
roll
mov
xor
imul
outsb
lods
imul
push
push
arpl
adc
fs
and
cwtl
popa
cmp
fcmovu
push
clc
adc
mull
flds
clc
frstor
sbb
and
cld
fistpl
adc
ds
cld
sbb
or
movsb
push
std
xor
pushf
leave
inc
add
lcall
loop
cld
adc
adc
mov
sub
pusha
and
mov
xchg
pop
jge
notb
pop
push
mov
sbb
fs
clc
mov
or
call
call
insl
pusha
add
cmp
push
rorl
and
cmp
hlt
repz
xchg
mov
ljmp
in
int3
aam
add
insb
inc
pop
mov
loop
repz
call
xor
fcomps
lods
mov
xchg
and
test
or
cmp
inc
leave
push
insb
cmpsb
jns
insl
std
in
fdiv
ret
ds
jno
inc
push
adc
push
pop
iret
mov
repnz
pop
dec
push
jl
push
pop
data16
scas
lea
jno
std
pop
hlt
adc
fadds
xchg
pop
addb
iret
mov
leave
addb
push
ds
inc
inc
jmp
cmpsb
mov
push
or
push
add
jne
xchg
mov
es
in
out
aaa
imul
fiaddl
aas
add
xchg
inc
mov
mov
fsubrl
and
cmp
std
mov
push
inc
mov
push
xchg
pop
mov
jp
and
decl
sub
mov
test
mov
or
sahf
mov
jl
lahf
inc
out
outsl
ljmp
inc
cld
push
or
add
je
or
push
xor
mov
lods
or
xor
xor
in
and
and
popa
int3
popf
pop
cs
enter
loope
dec
insl
pop
pop
lret
xlat
xor
sarl
jne
mov
xlat
loopne
jno
je
mov
jge
jmp
adc
xlat
aad
ficoml
cmc
enter
les
mov
push
ret
js
sbb
jns
repz
lock
negb
mov
mov
fwait
adc
orl
ror
inc
jl
pop
repz
xchg
mov
ret
add
out
push
enter
adc
xchg
in
addb
dec
push
scas
pop
test
jnp
jns
mov
add
sbb
call
or
insb
adc
push
sarb
lea
sbb
pop
lods
add
cmp
jmp
jns
in
hlt
mov
scas
out
mov
cwtl
nop
adc
mov
dec
dec
jg
xor
rcl
out
hlt
xchg
lea
std
ss
fidivs
mov
mov
mov
sbb
sbb
call
inc
out
fidivrl
push
sbb
shrb
adc
cmp
out
lods
loopne
cmp
hlt
jns
imul
das
push
sti
fadd
xor
int
js
aam
clc
bound
xor
pop
inc
xor
pop
pushf
xchg
or
jg
jns
rcrb
mov
push
mov
add
cmp
stos
sbb
sub
push
jge
ret
sahf
xchg
mov
mov
dec
leave
scas
ljmp
push
js
push
in
mov
and
xor
cs
mov
cmp
std
jp
mov
test
add
int
loope
mov
fwait
roll
xor
hlt
fmull
adc
loope
fsubrs
bound
arpl
gs
pop
inc
cmp
xchg
movsb
jecxz
cmpsb
sub
dec
loop
mov
arpl
clc
mov
cli
sahf
ljmp
jb
jl
xchg
add
cmp
xchg
xor
pushf
and
push
xchg
pop
aam
add
fisubrs
pushf
jne,pt
jae
fnstcw
add
pop
or
mov
sahf
sbb
scas
mov
in
imul
dec
mov
jnp
mov
pop
sti
mov
or
outsb
flds
imul
pop
sti
imull
loope
sbb
cs
adc
sub
shld
or
movsl
lret
loop
lods
call
lock
andb
into
mov
and
push
fdiv
cmp
jae
sub
cmp
lods
jne
pop
sbb
pop
push
fildl
fists
aas
pop
push
insl
ficoms
dec
dec
mov
getsec
dec
sub
rcr
lock
inc
push
dec
adc
nop
icebp
fmuls
mov
test
stos
adcb
daa
xchg
dec
leave
or
aaa
in
lahf
pop
enter
out
cmp
sub
jb
pop
cmp
lds
and
lahf
mov
das
push
stos
stc
pop
into
cmc
lock
mov
fidivl
xor
adc
dec
repz
xchg
and
jb
inc
mov
xor
sub
je
dec
mov
shll
inc
insb
jae
out
pop
cmp
stos
xchg
jo
decl
sbb
push
notb
daa
inc
imul
mov
mov
test
sar
lret
loop
pop
fidivrl
outsl
dec
lods
rcll
jo
icebp
adc
mov
jbe
sub
sub
jbe
jo
dec
outsb
cmpsl
les
inc
fildll
addr16
and
or
fcomps
pop
int3
test
inc
js
or
cmpsb
mov
push
repz
mov
or
mov
mov
xlat
js
xor
adc
add
outsb
in
xor
or
cmp
push
iret
sub
int3
jae
push
flds
andb
fdivp
mov
push
mov
and
sub
stos
push
xchg
iret
sub
jp
mov
out
js
xchg
fisttpl
and
push
leave
daa
push
or
push
jge
mov
outsl
push
inc
pop
sub
test
dec
insl
inc
inc
scas
adcb
stc
add
movsb
mulb
je
fs
xchg
cmp
cmpsb
movsb
push
dec
cltd
lods
jl
cmpsl
data16
mov
adc
fldt
iret
cld
inc
add
xor
in
fdivrl
ss
aas
mov
out
dec
jo
fdiv
or
pop
les
popf
imul
xchg
mov
fcmovne
dec
icebp
je
pop
mov
or
pushf
jp
sbb
lods
dec
cld
popa
scas
sbb
xor
lahf
xor
cmp
sbb
dec
sahf
inc
mov
and
and
daa
xor
mov
or
mov
push
dec
cmp
ss
ds
andb
sbb
fs
pop
cmp
push
push
icebp
mov
cmp
or
pop
mov
and
ljmp
xor
sti
cltd
rcll
add
jmp
aaa
mov
jmp
int
jl
js
adc
jnp
xchg
pop
inc
jp
sub
mov
add
push
incl
mov
push
jl
xor
lods
inc
mov
push
faddl
pusha
xor
repnz
jmp
and
scas
or
pop
hlt
repnz
mov
out
adc
dec
jecxz
lret
mov
inc
aam
movsb
mov
adc
cmp
xchg
mov
and
fildll
pop
stos
enter
mov
sbb
dec
mov
test
xchg
movsb
sbb
jno
bound
mov
xlat
out
mov
sbb
outsl
loop
jae
xor
mov
les
sarb
push
adc
adc
sub
cmp
push
mov
mov
inc
hlt
mov
mov
sub
int3
test
cli
or
cs
inc
mov
out
jne
mov
int
movsl
lcall
gs
outsl
pop
ret
sub
iret
and
jmp
xlat
fadds
add
xchg
cwtl
push
jmp
xor
es
xor
or
sub
shrl
dec
rorb
loope
dec
adc
sbb
pop
or
aad
xor
push
mov
ljmp
pusha
sub
add
outsb
xchg
pop
cs
sub
mov
mov
cli
outsb
push
cwtl
xor
mov
arpl
js
ss
sti
cmc
ja
stos
shlb
sub
cwtl
out
xchg
sub
mov
mov
out
fisubrs
and
mov
int3
fnstsw
outsl
push
lret
inc
idivb
dec
out
movl
dec
lea
mov
lahf
xchg
or
pop
mov
cmpsb
xchg
push
mov
push
iret
xchg
addb
js
jb
andb
sbb
lcall
test
cmpsb
push
cmpsb
arpl
ja
pop
cmp
inc
sarb
mov
adcl
adc
loopne
lret
test
xchg
out
xchg
outsl
cmp
jecxz
fcmovnbe
shl
mov
leave
test
sbbl
or
jae
and
out
mov
xchg
or
xor
popa
test
mov
mov
das
pop
mov
addl
mov
out
xchg
cmpsl
insl
jnp
dec
add
out
rep
rcrl
push
ret
jns
pop
sbb
sbb
sub
dec
ret
xchg
stc
repz
and
push
sub
popf
xor
sbb
jge
push
jle
mov
pop
sbb
mov
pop
pop
ret
stos
repz
or
sub
or
mov
xchg
mov
xchg
lods
mov
cmp
adc
sahf
xchg
fcoml
in
mov
push
pop
das
mov
mov
int
mov
outsb
fistl
popa
and
inc
push
inc
rorb
test
or
cs
ret
mov
cmp
rclb
sti
test
pop
cmp
push
in
dec
pop
scas
popf
xor
inc
hlt
pop
adc
stos
fsub
lcall
shll
and
int
push
pushf
into
mov
mov
ss
cltd
int3
sbb
cmp
pushf
das
mov
in
mov
mov
lea
cmp
outsl
lods
dec
pop
and
and
jg
cmpsb
xor
shll
adc
fneni(8087
fcmovbe
xlat
inc
cli
jnp
dec
loopne
push
jl
xor
lret
negl
push
add
pop
jae
imull
jge
jnp
push
inc
push
add
push
pop
inc
or
test
push
fsubr
sub
add
xor
mov
das
cmp
pop
xchg
in
xlat
andl
jo
mov
mov
test
imul
mov
mov
xor
stc
rclb
add
hlt
xor
sub
iret
dec
lret
fisubl
mov
jnp
enter
hlt
mov
fmuls
mov
jne
test
sub
pop
mov
pop
das
aad
adc
dec
mov
imul
loopne
mov
mov
pop
hlt
xchg
sets
aaa
fistpl
cmp
stc
leave
bnd
in
sub
mov
nop
test
push
int3
mov
xorl
lods
in
cli
push
jae
mov
or
jae
adc
sub
shll
lods
sarb
stos
ficoms
pop
jmp
mov
fistpll
cwtl
sub
insl
jno
rclb
mov
roll
or
push
les
sbb
xlat
js
adc
push
popa
mov
xchg
stos
sbb
jg
rcrb
lea
xchg
push
xor
repnz
sar
mov
bound
repz
jnp
pop
jmp
or
sbb
xchg
xchg
in
mov
or
mov
dec
cltd
pop
add
xchg
and
test
cs
inc
test
jecxz
pop
mov
add
cmpsb
clc
dec
pop
mov
mov
dec
pusha
xlat
aas
mov
sbb
outsl
xor
cwtl
ljmp
ss
rcrb
call
ss
data16
rcrl
call
jp
xchg
fistpl
mov
jbe
es
cld
adcl
shrb
repz
push
lods
sub
mov
repz
out
mov
mov
jne
inc
mov
fidivl
xchg
repz
scas
out
stc
testl
ja
call
push
pop
sarl
test
sbb
or
jbe
dec
push
pop
test
cmp
inc
adc
pop
clc
cmpsl
lret
int
in
les
add
ds
add
or
repz
ss
pop
fwait
insl
pop
push
cmpsl
sbb
xchg
or
std
lock
repz
dec
rcr
cmp
push
mov
shll
addr16
and
mov
ljmp
out
pop
ficomps
mov
jle
sarb
ret
sub
mov
loop
mov
stc
pop
mov
or
sar
push
std
add
mov
mov
std
jl
mov
xchg
loope
mov
sbb
cld
sub
sbb
xchg
push
popf
sub
addr16
dec
lret
mov
ss
cli
jle
popf
pop
movsl
les
dec
push
test
pop
mov
cmp
sbb
mov
lds
push
xor
mov
dec
push
push
addr16
movsl
sbb
cli
jle
insl
pop
mov
call
pop
test
push
rcrb
rcrb
sbbl
es
lods
ds
movsb
add
xor
mov
icebp
mov
mov
push
imul
jecxz
fmull
pop
xor
cmp
sbb
push
movsb
sbb
or
outsl
test
in
mov
les
pop
nop
sub
test
packssdw
stc
ret
xchg
jmp
or
xor
xor
jno
xchg
jp
xchg
mov
xor
cwtl
stos
mov
scas
repnz
ljmp
push
test
xor
out
mov
mov
jp
add
not
negl
pop
xrelease
outsb
or
mov
mov
add
movsb
and
stc
inc
cmp
add
or
adc
sub
insl
sub
into
push
mov
or
add
stc
clc
pop
cwtl
add
in
call
mov
pop
test
mov
jle
movsl
mov
leave
mov
jae
xor
xchg
push
xchg
add
sti
out
add
dec
out
sub
xor
hlt
jl
pop
mov
imul
dec
fcmovnu
fcoms
loop
popa
adc
je
ret
in
mov
andb
cmp
dec
adc
jmp
pop
idivl
idivl
xor
cmp
cmp
std
lret
xor
add
pop
aad
mov
dec
dec
add
cmpsb
enter
cld
or
call
inc
mov
xlat
mov
std
adc
and
pop
cli
push
and
icebp
mov
inc
je
cmp
icebp
mov
jnp
sbb
repz
mov
mov
fs
and
inc
call
mov
push
and
fiadds
pop
repnz
sbb
clc
je
aad
out
sbb
jmp
fisttpll
adc
sti
inc
pop
imul
aas
in
inc
aas
movsl
addr16
fistl
xor
and
int3
pop
or
mov
sarb
repnz
mov
mov
mov
jge
adc
in
sbb
cmp
jg
minps
into
dec
jno
aam
mov
xchg
mov
cmp
xlat
xchg
cld
mov
dec
xchg
inc
enter
inc
fadds
pop
xchg
js
cmp
pop
rorl
mov
jns
mov
or
mov
into
xchg
mov
notb
je
jno
fisttps
je
pop
loop
pop
repnz
or
adc
loope
les
xchg
adc
inc
inc
fidivrs
mov
or
bound
test
imul
pop
xchg
mov
loopne
jl
pushl
push
stos
mov
push
fs
in
nop
pop
inc
xchg
mov
shr
pop
test
stos
ret
cmp
fildll
mov
insl
std
clc
jnp
fdivp
and
fcmovnu
or
push
inc
jae
inc
push
or
or
je
xchg
dec
xchg
sahf
mov
pushaw
je
movsl
xchg
ss
test
lret
inc
dec
push
xlat
pusha
cmp
shlb
or
adc
and
les
jp
enter
test
add
ss
lods
mov
push
call
sti
insl
leave
in
mov
push
loop
mov
jo
sbb
xor
mov
push
cmp
aas
cmp
adc
and
imul
test
shlb
sbb
mov
jl
fistps
loopne
push
xor
and
or
inc
xor
stc
and
cltd
cmp
cmc
dec
add
lock
push
and
adc
mov
stc
adcb
out
dec
dec
sub
xor
dec
jmp
loop
or
lahf
leave
cwtl
test
popa
push
mov
popf
lret
decl
mov
out
pop
push
js
bound
lods
es
xchg
pop
xor
sbb
jae
iret
fisttpl
shlb
into
jae
ret
js
xor
sahf
cmpsb
ror
push
adc
aam
ret
xorb
enter
inc
jno
insl
sbb
insb
sbb
outsl
xchg
addr16
inc
je
dec
inc
xchg
inc
push
fiadds
aas
xlat
sub
sub
mov
mov
and
or
mov
push
adc
cmp
sahf
sbb
xchg
push
les
push
mov
lea
push
andb
or
cmp
in
gs
lds
pop
stos
stos
cmpsl
and
mov
cmc
push
push
scas
dec
dec
add
fdivs
mov
sahf
data16
pusha
sbb
or
inc
or
cmp
pop
fistps
aaa
fiadds
xchg
adc
add
xor
pop
outsb
pop
leave
adc
and
orb
movsb
fldl
scas
push
and
sub
pushl
aas
inc
dec
sbb
fs
das
daa
loope
nop
sub
xchg
jecxz
inc
ret
movsl
and
shlb
ds
in
shl
inc
roll
gs
pop
push
std
adc
mov
or
mov
sub
pop
inc
in
fildll
lock
xchg
outsl
xorl
inc
js
cmp
cltd
and
fwait
add
mov
out
sahf
aaa
stc
mov
addr16
sbbb
jp
enter
movsl
and
sbb
adc
into
iret
sbb
fistl
or
gs
xchg
jmp
pop
movsb
repnz
sti
xchg
jmp
xor
int
push
pop
dec
in
hlt
dec
add
inc
out
push
mov
jne
mov
pop
add
mov
inc
pop
lock
jmp
fbstp
mov
imul
das
mov
into
push
rclb
scas
push
jl
inc
mov
adc
inc
outsb
andb
mov
mov
push
sbb
test
loopne
inc
bound
xchg
nop
stc
xchg
jne
sbb
sbb
xchg
pop
jp
dec
xor
leave
insl
pop
test
gs
out
loop
mov
aas
jb
mov
std
add
inc
fimull
jne
int
cld
nop
xchg
lcall
mov
aam
pop
and
test
cmp
movb
cmp
popa
loop
pop
jns
mov
jo
sbb
ja
out
je
or
and
rcrl
xchg
fdivs
enter
mov
mov
dec
inc
imul
jmp
cmp
pop
cmp
test
jg
inc
pop
mov
add
push
out
inc
jbe
inc
pop
push
dec
idivb
test
push
scas
dec
popa
mul
dec
push
std
sbb
adc
cltd
mov
ds
sub
mov
xchg
adc
lods
mov
xchg
inc
mov
lods
mov
pop
xchg
sub
sub
xchg
jg
adc
nop
pop
das
and
aaa
jnp
fsubs
and
inc
test
dec
fildll
inc
cmp
lret
enter
mov
fcoms
fstpl
xlat
orb
adc
cld
scas
dec
fbld
pop
rcrl
das
pop
popa
pop
in
fimuls
enter
call
jp
mov
jmp
jg
aam
pop
aam
in
jb
or
mov
jo
inc
sbb
cmc
lahf
adcb
std
add
xor
shll
cmp
sbb
or
xor
and
mov
inc
inc
mov
test
scas
das
mov
jl
push
pop
xchg
mov
or
mov
into
arpl
fistpl
bound
xchg
insl
dec
pop
lcallw
lods
add
inc
xor
mov
je
hlt
adc
ret
nop
out
xchg
pushl
jno
ss
dec
mov
mov
test
add
lret
cmp
lea
pop
and
jae
das
outsl
push
push
and
jmp
add
dec
dec
xlat
clc
movsl
and
in
stos
loop
icebp
pop
add
xchg
ret
fistpll
add
lds
adcl
dec
pop
mov
loopne
xchg
dec
xor
movntps
les
sbbl
or
enter
cmp
scas
push
cmp
outsl
sbb
mov
mov
mov
je
add
repnz
mov
roll
cmp
aas
jns
or
scas
orl
mov
push
ret
mov
js
xorl
inc
stos
push
or
idiv
rcr
xchg
in
cmp
repnz
pop
or
lock
jl
shl
cltd
mov
xchg
jbe
xchg
test
mov
mov
cmp
movsl
xor
cmpsl
fstps
test
push
out
push
fcmove
adc
sbb
push
divb
add
in
jp
inc
cli
lret
in
xchg
lahf
pop
popf
pop
or
shrl
mov
clc
inc
push
cli
insb
ss
or
mov
xor
lods
pusha
gs
mov
cwtl
and
sub
add
imul
or
pop
cmp
and
es
cmpsb
add
mov
scas
enter
xchg
pop
mov
and
pop
hlt
test
and
or
mov
icebp
mov
jb
pop
nop
lret
pop
pusha
lcall
jp
push
leave
cli
orl
and
movsb
push
pop
ss
or
push
xchg
add
mov
mov
inc
scas
ficomps
inc
decb
mov
std
push
test
mov
mov
jp
mov
shrb
movzwl
popf
push
sbb
fadds
je
in
nop
les
fisttpl
push
adc
in
data16
add
cltd
push
outsb
pushf
xor
sbb
scas
ss
add
sub
mov
sbbl
adc
dec
and
in
fwait
cld
sbb
sub
sub
xor
add
addr16
xchg
jg
sub
cmpsb
fwait
xor
das
push
repz
dec
lret
xchg
adc
outsl
popa
pusha
mov
pop
push
andl
pop
cmpsl
mov
fistps
pop
ljmp
lock
mov
pop
scas
xor
mov
fsubrl
fistl
xchg
fdiv
clc
dec
ds
subl
jmp
mov
scas
dec
fdivrl
fucomi
adc
sub
adc
push
aas
test
jns
pop
pop
add
lods
inc
xor
inc
inc
call
lret
es
fsubp
cli
pusha
xor
or
sbb
xchg
xor
fiadds
rcrl
adc
rorl
jp
data16
jg
inc
fwait
push
popf
repz
imul
in
jg
dec
cld
rolb
out
hlt
cmp
stos
bound
mov
mov
rcl
mov
dec
movsl
aas
pop
jmp
sbbb
in
pop
movsb
loopne
aas
cs
mov
pusha
ficoms
dec
push
or
xor
xchg
jecxz
mov
sub
jns
push
rolb
mov
jae
cltd
mov
jne
pop
mov
xchg
cmp
aaa
add
sub
inc
repz
adcb
div
cld
in
push
popf
xlat
ret
and
imul
jp
loopne
push
aas
mov
mov
push
clc
lods
add
popa
add
dec
repnz
scas
adc
ss
leave
mov
jecxz
cmp
mov
inc
pop
inc
mov
call
in
adc
sub
imul
insl
imul
aam
arpl
adc
dec
call
dec
mov
sbb
mov
dec
call
pop
ja
sbb
in
testl
dec
fs
sti
push
sbb
ljmp
push
lea
dec
stos
mov
sbb
test
shlb
outsl
jmp
jo
xor
pop
stos
mov
ds
cmpb
test
mov
fisttps
data16
mov
sub
jg
dec
or
dec
jge
shrb
cld
aaa
jmp
dec
in
into
mov
cmc
fsub
xor
ss
cmpsb
adc
add
cltd
or
test
xor
stos
clc
je
fdivp
lds
js
or
or
or
add
cmp
popf
hlt
or
xchg
cmp
xchg
inc
pop
dec
pop
in
loop,pn
outsb
ds
pop
mov
rcrl
fwait
push
test
push
add
mov
in
hlt
xchg
jp
lret
pop
dec
mov
sbb
mov
cs
rcl
cmp
stos
test
add
inc
in
popf
ficoms
cwtl
call
ret
ret
dec
xchg
int3
int
or
and
or
xchg
mov
sbb
das
push
repz
enter
pop
test
mov
divl
outsb
int3
popf
inc
les
and
sbb
cmp
dec
xchg
and
push
aad
dec
ret
arpl
add
push
pop
adc
cld
xor
adc
sub
pusha
cmp
and
mov
mov
dec
ficompl
loope
and
xor
xchg
xor
add
std
lret
popa
shll
add
xchg
mov
jnp
bound
cmp
lods
sbb
and
loopne
jle
aam
iret
jns
lock
or
push
jl
pop
ret
dec
hlt
outsl
push
movsl
jmp
das
gs
mov
mov
sar
mov
add
daa
xor
stos
and
lods
sbb
adc
sbb
in
inc
pop
roll
mov
pop
add
mov
mov
out
lea
sbb
mov
std
in
or
cwtl
push
inc
mov
movsb
int
jl
fidivl
mov
insb
shrb
cs
movsl
popa
inc
jb
call
cs
cli
dec
adc
push
and
push
mov
aas
add
pop
movsb
dec
mov
adc
xorl
xchg
sub
and
push
mov
fwait
inc
and
adc
or
sti
outsb
push
push
inc
sbb
inc
sub
pusha
sbbb
cmp
adc
jmp
pushf
aas
pop
hlt
add
jle
push
dec
push
and
sbb
push
xor
lds
and
lods
sbb
or
cmp
popa
out
adc
inc
add
add
lock
mov
push
test
pop
mov
sub
mov
hlt
add
dec
in
iret
loopne
lds
ljmp
gs
cmp
stc
das
dec
mov
cmp
bound
stos
fcompl
inc
enter
inc
xor
aas
lock
add
push
test
int
hlt
in
fmuls
sbb
fs
or
push
jb
into
test
cltd
mov
xchg
bound
sub
stos
mov
cmpsl
add
cmpsb
push
scas
idivl
fs
in
pop
enter
inc
mov
loop
mov
clc
decb
cltd
orb
aad
xor
test
imul
les
popa
sbb
sub
fdivl
add
in
xlat
pop
pushf
xchg
test
fsub
jmp
das
mov
mov
imul
xchg
cltd
push
and
sbb
pop
xchg
clc
mov
in
lds
cs
test
pop
sti
ja
pop
xor
gs
in
or
imul
pusha
in
mov
and
xchg
aaa
imul
sbb
jmp
sahf
fstps
lock
add
imul
pop
adc
sbb
dec
jb
dec
cmpsl
pop
outsb
pop
xchg
scas
je
cmpsb
rorb
mov
jo
hlt
push
inc
adc
push
les
xor
fisttpll
and
inc
fisubrl
xchg
mov
mov
mov
and
aas
mov
pop
std
adc
xchg
xchg
pop
mov
ret
outsb
and
sub
stc
pop
int3
adcb
sbb
jg
jmp
xor
popf
pop
xchg
sahf
inc
inc
test
idivl
xchg
dec
not
into
in
gs
mov
gs
fmuls
jp
lret
push
ret
mov
jb
les
ret
jae
jp
push
sbb
lahf
int3
jle
ds
sub
push
ljmp
mov
pop
sub
sub
cmpsl
mov
pop
std
pop
cmp
subl
jge
aam
xchg
test
xchg
push
cs
mov
ret
mov
fstp
pop
mov
push
inc
pop
scas
inc
lock
cmova
adc
aam
pushfw
pop
popa
pop
mov
out
xchg
sub
stos
aaa
mov
inc
dec
pusha
dec
stos
mov
mov
jmp
into
lea
add
push
shll
mov
inc
or
outsb
dec
sti
in
push
andb
out
int3
ja
dec
loopne
sub
push
pop
inc
pop
xor
and
mov
mov
xor
int3
scas
fnstsw
repz
push
and
dec
scas
icebp
mov
mov
in
or
stos
outsb
loopne
mov
ret
jnp
adc
shrb
mov
jmp
jne
outsl
pusha
mov
fcompl
xor
dec
daa
jae
lea
mov
push
shll
or
mov
cwtl
xor
cmp
jne
pusha
push
or
jae
pop
xchg
aam
call
or
mov
aam
push
mov
xchg
es
mov
test
adc
cmp
sbb
icebp
sub
pushf
jle
push
out
fadds
inc
int
test
lods
mov
mov
imul
out
loopne
mov
cld
rcll
fs
ja
inc
pop
jp
mov
pop
sub
and
xlat
xor
insb
fdivr
jecxz
sbb
adcb
mov
mov
push
adc
fistps
pop
sub
lods
jmp
adc
dec
das
enter
sar
sbb
inc
inc
lcall
mov
sbb
loopne
loop
push
jmp
rolb
dec
stos
xor
dec
insl
mov
iret
iret
aam
das
dec
leave
mov
js
out
scas
xchg
popa
insb
movsb
add
je
loope
in
leave
push
add
icebp
clc
mov
pop
dec
and
pop
das
sub
sbb
sub
cld
fsubp
mov
mov
xchg
push
enter
cwtl
fsubrl
adc
enter
pop
dec
jg
ljmp
mov
xchg
and
call
wbinvd
sbb
shrb
push
push
lds
inc
or
adc
sti
mul
jp
sbb
iret
jo
push
pop
xchg
xchg
es
aaa
xchg
and
sbb
lahf
inc
imul
out
insb
cmp
fiadds
fnstenv
mov
pop
inc
mov
in
inc
jle
bound
or
scas
ds
pop
in
jbe
inc
mov
daa
mov
pop
mov
jo
push
or
fs
cwtl
repnz
jns
repnz
or
les
xor
cmp
mov
xor
or
mov
mov
or
fisttps
aam
mov
pop
adc
or
inc
leave
test
jno
mov
mov
popf
outsb
pop
xchg
jne
gs
jns
test
pop
mov
or
mov
mov
leave
fiadds
imul
sbb
xor
mov
sbb
fmulp
jecxz
loopne
push
rol
jo
or
test
sbb
jl
jno
push
addr16
lahf
mov
and
lret
add
out
inc
sbb
out
sbb
adc
loope
lret
jbe
mov
call
mov
imul
imul
ret
push
aam
loope
pop
inc
jge
das
popa
dec
mov
imul
push
loope
stos
iret
mov
scas
xorb
test
movsl
cltd
cmpsb
mov
mov
sub
test
pop
pushf
jnp
test
data16
shrl
aad
push
cmpsb
popf
push
push
cmc
mov
rcll
xchg
mov
mov
xorb
jge
cwtl
lea
leave
add
mov
aad
mov
adc
rcrb
sbb
insb
iret
adc
jecxz
in
or
iret
imul
nop
pop
arpl
out
push
out
sbb
push
mov
pop
lcall
fstpl
imul
fwait
cs
sahf
xor
fisubrl
dec
jge
adc
orl
sti
ds
adc
mov
mov
dec
adc
fiadds
push
sbb
icebp
out
shrb
je
push
or
ljmp
xadd
or
inc
mov
and
xor
xchg
add
push
push
cmp
inc
sbb
pusha
pop
cmp
jo
icebp
push
shlb
pusha
inc
xchg
or
jp
push
inc
lock
aaa
hlt
sahf
inc
and
add
xchg
jb
add
lock
lods
pop
xchg
inc
sahf
cli
pop
rcrl
js
add
shll
stos
test
adc
push
ljmp
je
fsubrl
aad
mov
aad
push
repz
pop
sbb
mov
inc
stc
lds
and
push
mov
aad
jno
mov
ret
pop
xor
inc
add
orl
and
sub
iret
daa
dec
or
fnstcw
inc
xor
les
and
aad
dec
mov
push
pop
out
or
mov
loop
movq
pop
hlt
push
and
sub
xchg
xchg
int3
cmp
in
dec
push
mov
mov
inc
cmpsb
sub
mov
ljmp
sub
arpl
sub
out
inc
add
and
sub
into
lcall
cli
out
inc
aam
fwait
xchg
lcall
cmp
sarl
outsb
out
adc
mov
cltd
jg
data16
sub
cwtl
cmpb
xor
pop
mov
cmp
repnz
or
push
int3
cli
int3
inc
loopne
aaa
lods
out
in
jecxz
xor
daa
dec
daa
movd
xor
and
pop
push
pop
adc
std
in
xchg
xor
repnz
ds
cmp
out
call
mov
mov
pop
sub
jne
movsl
pushf
mov
adc
ret
xchg
es
or
inc
pop
cmc
ds
and
sub
inc
add
push
repz
ds
test
jecxz
xchg
sub
inc
insb
jnp
out
xchg
add
sbb
out
shrb
jns
xchg
push
push
test
jb
and
jle
mov
ret
lret
lock
cwtl
and
test
sar
push
fnstsw
jne
push
leave
stos
cmp
push
sbb
or
fmuls
mov
mov
sbb
lock
les
pop
push
inc
and
pop
cmpsl
lea
fisubl
mov
lahf
je
adc
or
cmp
jae
imul
addl
adc
inc
rcrb
aas
nop
sbbb
jg
adc
sarb
sbb
lock
cmp
mov
jmp
push
int3
dec
faddp
sub
pop
jmp
mull
inc
add
sahf
fadds
lret
call
shll
in
push
cltd
outsb
adcb
arpl
xchg
ljmp
outsl
xchg
push
sbb
rorl
and
sbb
scas
int
cmp
jp
push
movsb
inc
jno
call
ss
pop
ds
out
cmp
ret
hlt
dec
pushf
test
out
shll
pop
clc
jmp
pop
mov
rolb
imul
stc
je
out
scas
fcmovnb
shlb
cmp
mov
lcall
xlat
push
divb
mov
pop
test
inc
sbb
push
movsl
and
ja
sub
andb
scas
js
das
push
jne
jmp
negb
mov
jnp
je
and
lret
jge
mov
ds
lods
leave
mov
sub
inc
and
fsubl
dec
dec
or
cmp
cmp
xchg
adc
ss
jecxz
push
sbb
cltd
jbe
enter
pop
or
sub
jbe
shrl
mov
pop
pop
or
aad
jmp
cltd
cld
xchg
mov
mov
or
loopne
dec
push
or
adc
stc
mov
fcompl
pusha
jns
or
sbb
aad
popf
xor
in
aas
scas
push
stc
jnp
push
jl
fsubr
fcomps
call
sub
imul
add
mov
fists
fdivr
fs
sub
mov
lock
push
popf
adc
mov
out
mov
shr
lea
push
mov
inc
and
inc
inc
and
jg
aas
aaa
in
sub
imul
movsb
out
adc
sbb
inc
ret
or
cltd
outsl
into
lods
out
cld
test
sbb
add
or
adc
xchg
fsubrl
insl
sub
in
lock
rcrl
xchg
mov
push
push
in
jmp
sahf
pop
jo
into
or
add
mov
outsl
pop
mov
adc
fbstp
jg
out
test
inc
and
push
mov
insl
mov
push
xor
imul
rorl
in
dec
mov
aas
or
cltd
gs
inc
mov
jbe
and
ljmp
mov
stc
add
lods
lcall
je
cmpsb
ja
xchg
cmp
xor
idiv
mov
aam
lret
lods
popl
jge
or
dec
lock
cmp
adcl
jmp
or
int
int
jbe
ljmp
push
aas
jae
jb
dec
mov
or
movsl
ja
sarl
pop
jl
addl
dec
into
imul
and
dec
and
nop
rcll
sbb
stos
jecxz
in
pop
scas
lods
jl
dec
int3
es
dec
iret
pop
xor
xor
testb
sub
loopne
sahf
push
mov
ret
dec
and
in
pop
ja
ja
xchg
inc
jge
imulb
aaa
negb
pop
push
adc
adc
push
std
dec
orb
jno
sbb
fadds
call
push
stc
mov
push
mov
outsl
jns
xor
push
xor
mov
push
xor
mov
xchg
aad
insb
pop
jmp
xchg
in
sub
sahf
es
sahf
pop
scas
xchg
movsl
mov
fisttps
mov
adc
repz
in
jne
push
adc
stos
jmp
in
loop,pt
int3
daa
push
push
adc
push
pop
aam
mov
mov
test
push
jecxz
pop
xchg
movsb
negl
out
lods
fisubrs
jae
scas
xchg
sub
mov
jmp
es
shl
rcrl
add
sti
loop
fcoml
insl
test
out
or
test
and
xchg
test
bound
xlat
sub
inc
pusha
data16
int3
sub
js
les
and
dec
mov
popa
lret
jbe
imul
mov
pop
sbb
jae
push
call
sub
xor
dec
js
mov
flds
std
into
int
popa
add
addr16
insb
arpl
dec
ljmp
mov
iret
jl
jl
push
clc
jp
inc
outsl
mov
scas
test
into
sub
lods
sub
data16
cmpsb
cs
jb
out
dec
xchg
inc
or
ljmp
cmpsb
add
jle
in
hlt
mov
cmp
stc
gs
cmpsl
jns
mov
push
cld
pop
push
fbld
mov
lcall
cmpl
lcall
mov
mov
sbb
insl
mov
or
daa
xchg
add
ja
orl
dec
fwait
adc
pop
lock
and
dec
inc
jns
push
or
or
cmp
push
sti
popa
pop
or
mov
sar
pop
fdivrs
or
inc
out
mov
push
jo
loop
adc
mov
mov
dec
fsubr
pop
sbb
aad
aad
cmp
or
shll
mov
lods
call
popf
push
or
xchg
cmp
mov
lods
mov
in
stos
or
imul
dec
xchg
add
sbb
outsb
pop
in
xor
mov
cwtl
pop
mov
mov
fnsave
std
les
fiadds
or
loop
inc
adc
cmp
jae
cmp
sbb
test
pop
cltd
add
lods
enter
mov
jle
xor
sub
hlt
aad
push
aad
xchg
daa
xchg
imul
mov
sbb
jg
notb
mov
xchg
mov
imul
jno
and
aaa
push
dec
mov
aas
mov
std
paddusw
cld
pop
in
test
and
shll
add
add
jmp
fcmovnu
cmp
movsb
cmp
jp
pushl
mov
popf
pusha
leave
jg
stos
aam
stos
lret
insb
mov
addl
into
std
pop
out
insb
addr16
iret
rclb
fistl
mov
pop
fdivp
stos
aaa
jnp
adc
mov
movntq
mov
mov
and
aaa
push
ljmp
imulb
or
dec
aaa
jo
lret
scas
call
out
outsl
lret
call
mov
cmp
jge
jo
inc
repnz
or
imul
rcrb
aad
in
mov
inc
mov
mov
xor
shrl
jb
lret
rcr
test
and
outsb
cmpsl
je
in
out
push
sbb
sbb
mov
lods
sbb
out
pushf
xchg
cld
outsl
lods
shll
ds
jns
push
rcrb
xor
push
adc
push
mull
dec
sub
jno
ja
aaa
lret
cltd
jmp
icebp
jmp
adc
sub
jbe
movsb
jne
imull
insl
cwtl
pop
insb
insl
call
push
std
and
jns
leave
sub
cmp
fwait
mov
jmp
hlt
outsl
adc
inc
xchg
push
ds
xchg
xor
and
jae
icebp
fbld
out
jle
push
les
loopne
adc
movsl
xor
xor
xchg
fisttpll
sub
and
fidivrs
jmp
in
sbb
xor
mov
mov
popa
mov
insl
inc
pop
mov
fmuls
sbb
loope
fisttpll
xor
aam
cmc
fdivs
push
or
jo
out
rcr
cmc
pop
sbb
scas
imul
adc
pop
out
addr16
pop
cmp
inc
mov
mov
cmpsb
leave
fstps
in
ret
jle
sbb
bound
add
in
repz
fs
dec
pop
mov
pop
or
js
ret
leave
jbe
mov
pop
inc
xorl
sti
popf
clc
push
fucomp
mov
pop
adc
clc
je
aaa
pusha
pop
cmp
hlt
jae
cmp
or
jno
inc
mov
stc
mov
jns
add
mov
icebp
push
je
inc
pop
fistl
cwtl
rclb
fldt
jb
mov
cmp
jae
outsl
popa
imul
dec
leave
cwtl
push
push
test
add
sub
cwtl
fldcw
add
pop
xchg
sub
mov
pminsw
xor
mov
out
jle
cwtl
dec
cmp
cs
aaa
mov
aaa
cltd
or
dec
mov
outsb
lret
mov
inc
lds
mov
jb
rcl
into
or
push
in
adc
cmc
flds
inc
roll
inc
scas
dec
jnp
sub
or
fwait
sub
clc
mov
out
inc
xchg
fnstenv
xor
push
cmp
xchg
cmp
lods
or
mov
adc
nop
scas
xor
mov
andl
mov
inc
dec
lret
inc
stos
cmpsb
xor
pop
es
flds
stos
xor
lea
sub
int3
pop
or
mov
je
sti
cmp
inc
sub
out
cs
mov
das
es
rcr
xchg
insb
movsl
clc
out
or
lcall
add
shrl
test
mov
imul
lods
pusha
jecxz
mov
cli
cmp
pop
lock
add
cmpsb
mov
ds
inc
xor
add
xchg
outsb
xor
sbb
lock
push
mov
testl
mov
mov
jge,pt
mov
sub
test
out
pop
lods
ds
push
mov
jmp
imul
mov
xchg
stos
cs
lds
or
sub
fcompl
and
pop
adcb
push
scas
mov
out
xor
cmpsl
or
sti
mov
imull
push
pop
out
out
bound
mov
aaa
jg
popa
std
and
adc
leave
pop
out
mov
fdivrl
inc
stos
pop
mov
pop
fcmovnbe
push
sub
out
xor
jecxz
adc
int
cld
xlat
test
pop
pop
jbe
mov
lcall
cmp
loop
loopne
decl
mov
ds
fidivl
and
cmc
ret
jbe
pop
fisttpl
test
or
sub
dec
and
ret
pop
adc
push
jbe
push
mov
sbb
loop
jo
punpcklwd
cmpsb
mov
sbb
divl
lret
and
lock
stos
cmp
testb
ljmp
cmpsl
mov
cwtl
out
bound
lahf
push
and
fucomip
loope
lea
adcb
adc
cmp
jle
cwtl
jmp
repz
lods
dec
lcall
add
fdivs
push
sbb
lock
xchg
int3
push
adc
adc
je
xchg
imul
sti
xor
mov
mov
xor
adc
mov
hlt
pop
or
rcrl
cmp
icebp
inc
mov
mov
sbb
xorb
jp
jle
test
cmp
and
mov
xchg
sbb
lahf
cmp
cmp
jno
or
js
shlb
in
jnp
popf
mov
sub
pop
test
mov
out
push
push
outsl
call
add
jns
sub
xor
push
je
xor
jo
stc
sbb
mov
xchg
ror
or
sbb
gs
xchg
push
insl
ja
and
push
stos
cwtl
mov
das
xchg
cli
mov
xor
out
mov
out
arpl
or
pop
ficompl
int3
xor
push
inc
fcomi
mov
xchg
aaa
imul
dec
jnp
pop
push
hlt
fdivrl
repz
pop
popa
in
sbb
fldl
sub
outsb
into
adc
pop
push
pop
and
int
cmp
jnp
add
cs
push
sarb
stos
ret
mov
inc
imul
add
xchg
sbb
cmp
xchg
xchg
dec
mov
clc
cmpsl
je
addr16
mov
scas
in
sahf
loop
in
sbb
outsl
lahf
xchg
or
sbb
iret
add
popl
mov
popa
sbb
xchg
popa
pushf
outsb
or
popf
imul
dec
cmp
cltd
and
hlt
cmp
pop
xchg
inc
outsl
dec
inc
test
nop
and
push
pop
push
push
adcb
pop
adc
popa
cli
divb
mov
mov
push
mov
imul
cltd
jnp
add
hlt
ror
cmp
mov
dec
call
es
cmp
mov
fs
scas
mov
push
mov
adc
insb
orl
dec
cmp
in
fisubs
and
jo
adc
test
sbbb
out
shlb
enter
call
pop
mov
add
push
adc
shl
jo
dec
push
dec
rcrb
negb
aas
pop
sub
negl
fbstp
sahf
ret
mov
xchg
enter
movsb
adc
rcrl
fadds
jp
dec
jl
arpl
mov
icebp
sub
aad
shr
pushf
push
pop
jns
jecxz
mov
jp
loopne
and
push
jle
mov
cmp
mov
xchg
xor
push
mov
jmp
adcb
mov
lods
rclb
loop
fisttpl
mov
cmp
adc
sbb
and
jle
lcall
mov
jne
push
push
sbb
in
das
xchg
cmp
sti
fidivs
inc
sarl
push
leave
cmp
xor
or
mov
aaa
jmp
mov
lods
bound
pushf
pop
ret
dec
and
subb
push
notl
mov
pop
int
lea
shl
ss
aam
sub
scas
shlb
and
jne
cmpsb
js
ret
sbb
sbb
popf
push
int3
sub
dec
js
mov
sbb
outsl
js
and
loop
imul
adc
sub
dec
jp
sub
sti
lods
push
inc
lahf
add
aam
cli
fwait
hlt
push
jae
aad
cs
shll
dec
dec
mov
inc
mov
mov
jb
outsb
mov
mov
out
outsl
push
dec
push
xorl
sbb
es
mov
lock
shr
sarb
xchg
movsb
out
fdivr
lods
lods
and
push
scas
insl
jnp
cmp
and
jo
insb
fwait
mov
scas
hlt
out
jg
xchg
cltd
ss
xor
das
loopne
bound
cmp
lock
out
aad
in
insl
pop
and
test
ficompl
jl
inc
sub
test
and
lret
push
testl
mov
cwtl
inc
adc
dec
dec
push
sub
gs
outsl
pushf
jecxz
sbb
inc
loope
sbb
sub
mov
in
repz
mov
xlat
xor
insb
dec
imul
cmpsb
and
ficoms
dec
inc
lds
scas
icebp
jp
sahf
or
fs
inc
test
pushf
or
int
add
add
stos
fwait
icebp
sti
test
jl
mov
fistps
cmp
inc
cmp
adc
sahf
or
lret
into
sub
push
sub
adc
or
dec
mov
out
mov
ljmp
lret
inc
out
or
shlb
sbbb
imul
mov
add
inc
je
outsl
cmp
push
xchg
sbb
adc
push
inc
push
mov
nop
sub
test
push
sbb
jb
or
movsl
adc
or
dec
jecxz
cs
jae
inc
inc
mov
aad
xor
sub
and
ds
lret
sbb
mov
jle
cmp
mov
jnp
fmull
inc
pop
push
cmpsb
pop
mov
xor
xchg
daa
push
gs
sahf
jle
test
cmpsl
adc
stos
jp
outsb
push
push
shr
jne
mov
pop
icebp
scas
ficomps
loopne
repz
push
imul
or
mov
xchg
shlb
arpl
push
fstps
adc
and
xchg
jl
loopne
cmp
push
jg
jno
mov
pop
sub
int3
data16
cmp
aas
insl
movups
cmpsb
pop
lods
fistpll
adc
cmpsb
jae
pop
pop
or
adc
add
dec
lcall
sub
pushf
aam
lds
inc
movsl
jecxz
pop
insl
and
and
sub
pop
xlat
stos
ljmp
stc
inc
aas
cli
vfmsub213ss
bnd
stos
aas
adc
outsl
repz
xchg
jnp
out
shll
sahf
addr16
cli
cmp
mov
xchg
or
dec
fidivs
cmp
cltd
sbb
addr16
sarb
int
imul
push
ljmp
ljmp
mov
outsl
imul
lods
stos
xorb
popa
and
ljmp
inc
sbb
adc
pop
iret
nop
cmpb
test
mov
int3
in
xor
jecxz
or
scas
dec
pop
adc
pusha
xchg
out
test
adc
jecxz
out
dec
add
mov
add
add
adc
mov
or
pop
mov
jmp
cwtl
adc
jb
mov
aas
xchg
add
mov
subb
mov
inc
pop
jp
adc
cmp
ja
mov
xchg
mov
mov
mov
or
mov
sbbb
das
enter
int3
pop
sub
bound
ds
add
gs
bound
cld
push
mov
dec
mov
inc
add
mov
cmp
das
insl
stos
imul
vphsubbw
jle
pop
jns
cmp
outsl
inc
cld
dec
push
stos
pop
mov
neg
ret
and
adc
repnz
lods
jno
jnp
xor
or
fadd
fstpt
sbb
jbe
fsubs
decl
sbb
in
dec
sbb
or
arpl
cli
mov
outsl
insl
mov
mov
daa
sub
inc
dec
arpl
test
inc
mov
fmull
fwait
sbb
lods
rolb
sbb
cmp
outsb
cwtl
stos
pusha
cltd
sbb
imul
dec
push
outsl
lcall
adc
in
jg
adc
data16
adc
clc
cmp
xchg
imul
inc
cltd
pop
leave
lods
aaa
cmp
pop
mov
insl
xchg
mov
cwtl
and
cli
in
aaa
popf
inc
movsl
and
ljmp
sub
push
stos
adc
push
out
push
js
sub
lret
sbb
xchg
jmp
add
mov
sub
xchg
mov
idiv
push
sub
and
xchg
push
or
fcoms
and
pop
mov
aam
cmpsl
and
ret
pushf
cmp
sub
lcall
sub
fldl
mov
cmp
mov
mov
add
cltd
in
mov
and
mov
mov
sub
xorb
iret
pop
mov
mov
inc
mov
out
mov
insl
data16
xor
jnp
lods
push
push
shll
aaa
shrb
sub
insl
dec
insb
pop
xchg
popf
jecxz
push
mov
or
ds
lea
pop
jecxz
shl
adc
das
sub
mov
push
popa
and
cld
and
stos
bound
pop
pop
cmpsl
movsl
xor
das
mov
adc
popf
push
sbb
pop
and
lret
daa
add
mov
fldl
sub
data16
call
test
inc
fisttpll
test
sub
push
pop
cmp
lock
xchg
shrl
dec
or
adc
or
pop
inc
dec
decb
pop
aad
jecxz
in
pop
je
es
xor
sub
fwait
sbb
inc
out
hlt
push
in
js
outsl
fidivs
push
loop
fisttpll
inc
fistpl
mov
iret
stc
dec
pushf
add
dec
cmp
sub
and
xor
cmpsb
sub
popf
mov
dec
jo
push
add
loop
push
inc
popa
rcr
inc
mov
push
aas
gs
movsb
mov
add
scas
fisttpl
mov
mov
clc
cmp
inc
sub
xchg
dec
mov
lret
add
movsb
lcall
imul
les
cs
scas
incl
adc
xchg
lret
fdivl
pop
mov
and
mov
mov
imul
add
xor
and
lods
cmp
push
in
mov
jecxz
bound
loopne
inc
outsl
out
jne
in
subl
es
pop
or
add
or
lea
ficompl
mov
xchg
ljmp
dec
mov
test
push
mov
imul
loope
sbb
mov
mov
fnstsw
bound
pop
in
andl
roll
add
xlat
repz
inc
xor
sbb
fdivrs
leave
add
and
ss
fisubs
mov
push
adc
std
stos
xor
cmc
pop
push
lock
ja
rclb
jmp
outsb
repz
pusha
dec
fs
mov
addl
jle
daa
inc
shrb
push
mov
enter
into
jg
jg
loop
test
xor
out
mov
jg
ljmp
sti
adcb
jae
xchg
call
loope
push
pop
push
sbb
test
shlb
cs
xchg
pusha
cmp
rolb
push
or
dec
ss
xchg
xor
xchg
aad
mov
mov
push
call
push
les
ds
xor
mov
fiaddl
sub
clc
add
popl
shrb
inc
out
pop
bound
dec
adc
shlb
lea
cmpsb
ds
dec
ja
movsl
in
sbb
test
addr16
nop
int3
xchg
dec
cmp
cmpsb
cltd
adc
lods
idivb
pop
jecxz
arpl
mov
insb
inc
inc
jle
mov
push
icebp
cmp
mov
into
adc
xlat
repz
rclb
rcl
stc
xor
into
and
mov
sub
out
jl
subb
lea
cmp
fwait
sub
and
push
pop
pusha
cmp
sub
jmp
arpl
push
inc
jns
rcrb
push
dec
popf
pushf
loop
mov
lods
or
cmp
gs
out
lods
icebp
add
xchg
aad
mov
sarb
mov
mov
xor
imul
fnstenv
nop
mov
sbb
fucomi
ljmp
inc
insl
or
inc
xchg
loope
outsb
sub
gs
dec
mov
push
add
sarl
and
lds
movsb
xchg
mov
xor
dec
jbe
add
mov
sub
jp
inc
loop
jge
loopne
xchg
leave
and
mov
aaa
mov
pusha
pop
jl
rolb
repnz
push
dec
lret
push
pop
xchg
mov
xchg
mov
mov
mov
je
xor
mov
sbbb
insl
sbb
fstps
dec
scas
popa
lret
iret
les
jo
mov
sbb
sub
push
xchg
dec
mov
jg
or
fwait
test
insl
dec
test
dec
lods
xor
loop
jbe
mov
or
ret
push
loopne
jmp
add
pop
cltd
pop
or
pop
ja
pop
lret
add
aas
stc
mov
dec
xor
outsb
add
ja
fldl
dec
sub
jne
push
xor
jb
dec
sbb
arpl
cmpsb
cmp
jne
jnp
mov
insl
test
sub
sbb
in
sbb
xchg
not
insl
cmp
mov
or
sbb
inc
aaa
ds
pushf
stc
mov
mov
jle,pt
bound
sbb
push
iret
mov
or
cli
in
push
insb
imul
call
ja
xchg
xchg
scas
inc
fistps
mov
imul
mov
fmull
mull
imul
mov
xlat
inc
mov
int3
sub
lret
xchg
lahf
push
ljmp
andb
push
aam
or
push
shll
enter
sbb
aas
pop
call
cmc
pushf
lds
jns
inc
xchg
mov
testl
std
ljmp
inc
icebp
gs
mov
adc
aam
lret
inc
push
fistpll
dec
lods
enter
loopne
inc
xchg
add
daa
cmp
les
lea
cmp
push
dec
iret
pushf
dec
mov
mov
outsb
lahf
insb
add
mov
leave
enter
add
add
inc
push
cmpb
icebp
jmp
dec
jne
pop
push
mov
dec
cwtl
pop
fstl
sub
repnz
xor
and
sub
sub
aad
data16
mov
insl
test
xchg
jo
clc
jnp
jp
mov
or
sbb
cltd
cwtl
inc
test
repz
call
push
lahf
repz
and
adc
mov
jne
das
pop
jne
sub
pop
movsl
loopne
cwtl
adcl
stos
sbb
inc
fs
jge
jge
inc
sbb
pop
out
divb
and
lret
jbe
nop
jb
adc
jl
pop
ds
pusha
sub
fs
lret
sbb
repz
cmp
jmp
add
pop
filds
dec
fsubrl
mov
xor
hlt
sbb
mov
mov
inc
xchg
mov
jne
add
or
imul
ljmp
xor
insb
rcpps
add
sbb
in
bound
addr16
add
stos
add
daa
int3
cmp
mov
out
cmp
mov
mov
scas
or
out
push
aam
fldl
jp
mov
pop
sub
paddd
push
data16
lcall
mov
fcoml
mov
adc
mov
and
push
movsl
fcoms
add
mov
sbb
xor
cmpsb
dec
into
scas
mov
ss
js
push
push
mov
push
xchg
aad
mov
testl
push
jmp
icebp
lods
loope
and
and
sbb
sub
inc
xchg
loopne
mov
call
test
stc
aam
jge
and
insl
jle
scas
in
dec
add
inc
mov
mov
ret
fidivl
scas
adc
mov
mov
out
outsl
mov
lret
sbb
jno
xor
cli
mov
mov
out
and
jbe
mov
insb
mov
rcrb
adcl
pop
ret
adc
mov
mov
js
push
out
test
test
jb
jmp
push
pop
add
sbb
lea
lret
xor
and
fsub
adc
cld
lods
push
test
insb
cld
outsb
scas
aas
int3
out
mov
or
xchg
shrl
daa
aad
out
into
addl
mov
pop
insb
insb
stos
loope
pusha
repnz
cmp
push
fcomp
cmp
inc
addl
scas
dec
dec
or
add
jbe
sub
jnp
mov
out
jmp
hlt
push
inc
roll
push
mov
icebp
inc
mov
xchg
movsb
and
leave
stos
dec
jg
mov
and
pop
aas
cld
in
cmp
fsubrs
scas
inc
xor
das
inc
add
aas
and
sub
push
pop
cmpsl
mov
fisubrl
pop
dec
mov
sbb
push
imul
pop
loop
xor
sub
test
xor
push
add
cmp
adc
sub
fistps
insb
outsl
test
insb
cld
enter
cmp
adc
ret
jg
daa
sub
sar
push
in
in
dec
cmp
dec
test
push
lahf
jbe
cmpsb
outsl
fucomi
fwait
mov
xlat
lea
adc
and
data16
pop
adc
sbb
test
insl
insl
test
mov
cmp
mov
subb
sti
or
mov
jl
and
iret
sub
jp
in
mov
jb
jmp
dec
arpl
lea
add
mov
mov
mov
mov
push
imul
lret
push
sub
mov
and
jecxz
xchg
xor
popf
push
jno
xor
icebp
xchg
ror
psrlq
cmp
dec
xor
cmp
mov
jne
and
das
in
test
insb
setge
xchg
sub
shll
in
xchg
cmp
icebp
cmpsl
or
out
out
mov
pop
in
sub
cld
mov
int3
mov
jge
sbb
fucomp
or
loop
pop
push
sahf
imul
pop
test
jb
inc
cpuid
jno
into
sbb
rcrl
cltd
gs
aas
sub
out
in
pusha
inc
setbe
jmp
movsb
jae
pop
out
scas
push
out
push
inc
test
ret
jge
rclb
subl
popa
add
pop
pusha
mov
dec
pop
shlb
and
jns
push
dec
mov
mov
jns
ret
je
dec
jne
das
je
bound
lods
int3
pop
test
pop
push
imul
loop
test
ja
mov
xor
pushf
jmp
mov
or
mov
ss
lock
loope
sub
shll
rcrl
jmp
sti
in
push
ret
test
pop
mov
sub
cmpb
into
dec
dec
cmc
std
loop
scas
add
loope
ljmp
lds
cld
inc
sti
mov
lds
rclb
add
sub
and
sub
sbb
or
pop
cld
fldpi
gs
cmp
push
or
enter
es
xchg
pop
xor
bound
jg
and
popa
movsb
and
negb
xor
ret
add
call
popa
or
test
cmp
inc
mov
cmpsb
sti
mov
fisubrl
xchg
xchg
fnstcw
cmp
push
push
popa
cmp
add
sub
cltd
bound
fincstp
mov
jo
scas
sbb
push
lods
push
aam
punpckhdq
in
mov
outsb
shl
es
and
lahf
lock
filds
inc
cmpsb
jp
pop
mov
mov
iret
test
mov
xchg
mov
mov
je
mov
cmp
incb
pop
jmp
push
clc
pop
jle
push
imul
int3
filds
mov
mov
fistpl
adc
aad
nop
cli
cmpsb
movsl
mov
cmp
outsl
adc
outsl
outsl
push
fsub
jmp
iret
shrb
in
jp
cmp
popf
sbb
xor
and
repnz
cmp
lea
int3
call
inc
or
in
pusha
sub
sti
xor
inc
clc
scas
bound
or
and
cli
cmpsb
std
xor
cwtl
aad
outsb
out
mov
mov
jns
or
inc
icebp
xor
pop
leave
faddl
lahf
fcomps
idiv
mov
inc
adc
andb
stc
fdivs
add
sub
sbb
pop
xor
ret
fnsave
sarb
inc
decb
int3
int
xchg
cld
pop
aaa
clc
adc
out
repz
add
xchg
jp
sbb
imull
and
adc
mov
cmp
pop
jmp
adc
jb
decb
subb
loop
xchg
movsl
cmp
popf
sbb
in
mov
ret
mov
xor
add
jl
fildl
lahf
ret
dec
fisubl
sahf
inc
jnp
ret
in
sbb
mov
ror
xchg
fst
sbb
movsl
shll
and
push
out
or
jmp
xlat
rol
push
mov
fisubl
pop
call
cmp
jp
scas
js
das
subl
icebp
add
inc
cmpsl
push
dec
roll
scas
xchg
fistps
mov
jl
sbb
lret
sbb
mov
jg
or
addl
clc
negb
dec
jecxz
xorl
add
cmpsb
mov
or
lock
mov
sbb
les
sbbl
jp
imul
sbb
or
nop
sahf
mov
cmp
test
mov
cmpsb
cwtl
and
lds
cmp
mov
sub
loop
mov
xchg
in
pop
aad
inc
out
pop
mov
popa
jae
inc
jge
fs
cld
xchg
test
and
jbe
jmp
cmc
mov
sub
inc
push
enter
cltd
push
scas
insl
stos
out
or
jae
xlat
push
cmp
jecxz
pop
cld
push
ret
jne
icebp
mov
test
xchg
sbb
shl
or
stos
roll
popl
arpl
aas
inc
es
inc
aam
inc
cmp
std
mov
sbb
pop
mov
jle
gs
jecxz
sbb
inc
data16
stos
pop
dec
dec
sahf
lods
mov
sbb
stos
xchg
adc
popf
fstp
addr16
pop
inc
fwait
les
lock
xchg
inc
arpl
add
daa
call
mov
ret
daa
addb
std
pop
das
cmp
out
add
cmp
std
cmp
push
push
int
inc
cmpb
mov
pop
or
add
arpl
int
cmp
push
push
lret
int
sti
inc
and
push
int3
repnz
cmp
fwait
xor
movsb
jne
call
dec
incl
adc
xchg
imul
jns
int
stos
jmp
popf
cwtl
enter
and
popf
imul
fmulp
push
pop
fcmovnb
ret
pop
cmp
cmp
and
jne
mov
lcall
fwait
adc
movsb
loop
decb
int
cmp
cmp
out
int3
mov
and
lods
sub
sub
jg
xchg
dec
test
fs
push
xchg
add
pushf
clc
push
xor
sarl
jns
das
mov
pushf
icebp
push
mov
test
rclb
cmp
or
rclb
add
aas
xchg
sub
out
cmp
call
cwtl
xor
push
mov
or
jp
sahf
dec
loope
int3
or
dec
iret
adc
dec
cwtl
test
push
push
add
jge
push
push
push
shll
push
xor
jb
roll
sbb
mov
mov
imul
and
outsb
xchg
cmp
lods
xchg
and
jp
aam
loopne
mov
shll
dec
sub
mov
rcrb
jg
pop
or
and
add
mov
mov
notb
fildl
xchg
mov
pop
pop
and
add
sti
mov
xchg
int3
pushf
inc
divb
mov
dec
xchg
mov
dec
jo
daa
xchg
mov
in
lods
dec
cmp
cwtl
push
mov
and
push
mov
in
fnsave
or
fdivl
fbstp
jge
dec
mov
loop
or
jae
add
arpl
sub
add
clc
stos
stc
cmpsl
dec
xchg
cltd
insl
jo
push
push
adc
stos
mov
mov
cmpsl
sbb
mov
cwtl
outsl
sub
nop
xchg
dec
mov
push
stos
stos
sub
pop
mov
shll
push
js
out
adc
into
push
negl
mov
pop
xchg
dec
xlat
add
mulb
ds
jbe
jbe
jns
cli
cmp
add
aad
test
sbb
sub
loope
cmpsb
mov
addr16
mov
imul
jl
sbb
imull
push
lahf
fcom
fidivs
lods
adc
dec
je
adc
icebp
mov
mov
inc
addr16
xorl
es
add
jo
dec
dec
nop
xchg
loopne
or
repnz
adc
sbb
pop
js
xor
or
outsl
adc
pop
mov
shr
inc
inc
xor
daa
bound
or
inc
insb
push
dec
fwait
cmp
arpl
mov
aad
scas
or
inc
ror
addr16
adc
jb
into
push
fidivs
imul
shlb
cmp
cmp
aas
jecxz
cltd
psrlq
aaa
enter
dec
push
push
mov
ret
test
cld
cmpsl
ret
dec
adc
out
sub
shl
jge
sub
dec
je
clc
inc
xchg
test
loop
mov
jmp
push
pop
sub
js
int3
shr
ret
loope
jo
sbb
pop
sbb
cmp
pop
and
push
push
lret
outsl
cmp
pop
rorb
xchg
adc
inc
cs
xor
or
mov
sbb
cld
repnz
ja
movsl
repz
xor
inc
int3
out
popa
insb
sbb
xchg
or
pop
jbe
icebp
sub
cmpsl
icebp
mov
mov
scas
pop
cs
cs
mov
adc
lret
inc
jmp
push
push
pop
dec
mov
adc
imul
loope
mov
dec
jbe
jnp
adc
scas
inc
sbb
lahf
cmp
pop
test
mov
adc
lods
out
cmp
mov
and
repnz
movsb
in
push
je
xchg
js,pn
pop
ret
jle
xchg
fwait
dec
iret
xchg
mov
xchg
jl
adc
fisubrs
xchg
sbb
xchg
sbb
cltd
js
jmp
mov
mov
add
lahf
mov
lds
loopne
jmp
fmulp
les
or
movb
xlat
popf
push
add
cmp
ds
inc
mov
push
mov
mov
sahf
cs
ss
aad
lret
leave
xlat
or
push
push
dec
testb
dec
adc
pop
pop
ss
jns
pop
pop
test
fsubs
frstor
mov
push
test
xchg
or
push
ss
mov
push
mov
cmp
cwtl
cs
fsubs
lcall
adc
ds
fs
xchg
dec
repz
add
adcb
shll
pop
or
jae
das
xor
mov
lock
sbb
and
sub
sub
add
mov
int3
mov
mov
or
or
pop
mov
fwait
add
aaa
enter
and
rolb
popf
pop
or
out
ds
dec
mov
push
and
mov
or
loop
xor
push
xor
sub
inc
xor
clc
ljmp
add
xor
sbb
and
jp
adc
jmp
jge
jbe
ret
dec
in
jno
cmp
or
fisttpl
jmp
mov
pop
xlat
gs
pushf
jge
pop
sub
mov
mov
jo
daa
adc
aaa
or
xchg
dec
and
jbe
rcll
jle
jecxz
aam
aam
daa
out
es
jbe
add
xchg
cmpsb
sub
push
icebp
je
add
xor
dec
push
cli
in
cld
or
mov
ror
cmp
sti
jns
dec
push
idiv
mov
jnp
jmp
rcrb
add
inc
bound
int
sub
sbb
cmpsl
into
sahf
lods
rolb
pop
sbb
sub
sbb
rcrl
pop
fwait
sbb
test
dec
out
mov
inc
xchg
and
clc
adc
loop
jb
push
pop
pop
sub
cmpsb
hlt
push
shl
mov
out
sub
sub
xchg
ja
orb
pusha
adc
test
test
mov
test
leave
movsl
out
mov
xor
inc
push
and
xlat
adc
outsl
addl
and
push
dec
xor
daa
scas
sub
insb
xor
divb
jns
xchg
dec
pop
or
and
xchg
jle
push
stc
mov
xchg
stos
in
cmp
pop
add
add
push
adc
dec
or
sarb
cli
jno
mov
cs
sbb
js
mov
cmp
mov
daa
leave
jbe
sub
bound
push
mov
dec
jl
inc
jle
scas
mov
push
lcall
cmp
fdivl
or
roll
pop
mov
add
jge
sbb
das
fnstenv
sub
testb
and
je
push
rcll
or
jae
xchg
pop
or
sbb
dec
mov
fwait
mov
jl
loop
push
roll
and
in
sub
movsl
in
fisubs
mov
pop
jae
lods
icebp
call
and
jno
sbb
int3
cmp
inc
pushf
in
add
xor
sbb
or
fcmovnu
into
xchg
pop
adcl
orb
movsb
xor
jns
jbe
out
jbe
ja
mov
rorb
xlat
int
aaa
pop
out
adc
add
pop
lret
add
insb
or
xor
add
cmp
mov
fidivs
mov
cmpsb
andb
outsl
mov
sub
in
mov
mov
negl
push
addl
cmp
add
sbb
adc
xor
fs
sarb
inc
je
mov
pushf
in
iret
sahf
int
mov
stos
popf
sahf
jge
test
into
cs
adc
aad
mov
cmp
fisubrs
mov
inc
dec
inc
pop
inc
cld
cmpsb
nop
mov
mov
push
pop
sbb
imul
ja
out
loop
cmp
call
test
pop
test
decl
pop
fcomp
jb
fnstcw
sub
inc
xchg
cmp
adc
movsb
dec
xor
jl
xor
punpckhdq
cld
dec
sub
mov
jmp
cmp
dec
mov
xor
outsl
fadds
stos
idivb
in
arpl
rcr
and
inc
mov
sub
cmp
jp
out
decb
jo
outsb
pop
lods
movsl
and
cmp
sub
push
lods
rol
shlb
push
arpl
push
roll
mov
jne
pop
rcrl
sbb
adc
call
push
xchg
or
push
cmp
test
mov
xchg
rcl
inc
cld
inc
ficomps
popa
cmc
push
cmp
clc
mov
jge
pop
fdivr
or
xchg
test
fistpl
int
fists
fistpll
mov
xchg
mov
data16
xor
lock
adc
sub
stos
test
push
in
insb
sbb
push
test
lods
jecxz
cmp
cmp
pop
hlt
pop
mov
inc
das
daa
pusha
pop
loopne
fdivl
cmp
cmp
ret
or
xchg
icebp
xor
xchg
sbb
lock
orl
sub
xor
stos
imul
dec
push
push
nop
lods
or
xchg
pop
in
push
xor
fsubrs
xadd
and
mov
stc
pushf
loope
push
dec
lock
lea
sub
cmpsl
lods
and
dec
push
fiadds
or
test
xchg
addr16
mov
fisubs
or
push
sbbl
xchg
inc
sbb
mov
xor
jl
pop
xchg
pusha
cltd
fidivrl
data16
inc
jl
xchg
ret
push
add
sbb
xchg
fldcw
push
lret
sub
popa
and
jle
xor
cltd
xchg
pop
or
push
xorl
and
push
aaa
push
sub
mov
rcll
inc
mov
into
or
sbb
jmp
aad
rcrb
xor
cmp
sahf
mov
sub
xor
and
inc
fadd
and
mov
ja
inc
out
adcl
cmp
push
loop
pop
jo
mov
mov
pop
or
pop
mov
add
and
iret
jp
xor
gs
mov
in
mov
test
and
fcmovbe
insb
enter
lahf
and
pop
mov
in
cmpb
ret
or
loop
mov
not
add
aad
and
ds
enter
mov
dec
daa
popf
out
adc
push
lret
mov
rolb
in
inc
fsubr
lret
test
sbb
or
sbb
dec
mov
pop
or
nop
ficompl
xchg
jno
jle
adc
ds
xchg
scas
push
jmp
shrb
xor
push
or
jp
jle
fwait
int3
les
jecxz
inc
push
sub
jns
mov
mov
dec
popl
aam
sub
mov
mov
xchg
leave
in
sbb
stc
cwtl
enter
lock
sub
xchg
mov
in
jbe
jg
rcll
xchg
mov
add
mov
push
test
mov
adc
dec
mov
rcll
lds
stos
xor
xor
jne
into
xchg
dec
rolb
jb
and
ja
sahf
ja
add
repnz
push
mov
testb
jge
std
sbb
inc
popf
inc
cli
dec
add
subb
fwait
movsb
fisttpll
jo
mov
xor
mov
inc
sbbl
xchg
sub
or
lods
rolb
rcrb
gs
lods
stos
sub
shlb
dec
ret
scas
mov
loope
lahf
xor
mov
pop
lds
in
pop
cmpsl
out
call
aad
rolb
jecxz
mov
pop
adc
mov
in
hlt
pop
sub
int
adc
mov
decb
pop
in
out
call
xchg
loopne
or
push
sub
icebp
gs
icebp
enter
cmp
push
sbb
mov
mov
popa
lods
cli
addr16
fisubrl
in
ja
sahf
subb
sbb
fnstsw
pop
adcb
xor
inc
sub
mov
mov
sub
lods
lahf
cltd
es
dec
aam
push
cld
dec
add
shlb
add
pop
das
adc
jae
shlb
mov
mov
lcall
int3
push
xlat
or
add
cmp
cmp
jmp
sub
adc
lods
xchg
inc
mov
and
pop
adc
dec
pop
call
pusha
dec
test
mov
push
cs
aas
xchg
fwait
and
addb
es
lahf
push
adc
movsb
dec
push
test
imul
lds
popf
fidivrl
push
movsl
xor
ss
mov
bound
adc
xchg
mov
inc
jmp
andb
mov
in
or
xlat
popf
scas
pop
jo
repz
xchg
mov
mov
lahf
inc
ret
jle
imul
push
aad
lahf
push
or
pop
cmc
hlt
aad
arpl
sbb
push
and
insb
mov
push
sti
fnstcw
pop
dec
divb
sahf
cs
mov
jl
jecxz
into
or
mov
out
dec
dec
pop
cwtl
push
adc
push
lea
or
xor
test
sub
inc
or
lea
jmp
in
lods
mov
sarb
jno
enter
sarl
into
mov
xchg
pusha
push
fwait
mov
rcll
push
mov
fists
sbbl
in
outsb
lds
movsl
mov
jmp
bound
jo
clc
pushf
insl
mull
shrb
pushf
pop
pop
add
or
and
adc
push
sbb
scas
sbb
outsl
scas
add
aad
and
and
sub
shll
push
jg
lret
cld
pushf
outsb
jns
cmp
and
push
push
mov
inc
fdivs
mov
ja
xchg
ljmp
mov
fldl
addr16
pop
fsubrp
xchg
push
add
int3
aad
aad
sbb
cmp
sub
cmp
imul
mov
pop
pop
push
mov
into
dec
adc
adcb
push
mov
pop
out
out
push
fisubl
add
in
lods
aad
fwait
rorb
sub
andl
sbb
in
jb
lret
movsl
and
shl
mov
push
adc
mov
xchg
xor
pop
incb
pop
shll
sub
push
packsswb
mov
or
push
test
int3
mov
lods
mov
inc
enter
jae
cmp
daa
inc
sahf
je
push
push
lods
sub
rcrl
outsl
cmp
pop
xlat
pop
dec
fistpl
cmp
in
inc
add
dec
and
outsl
push
mov
pop
sub
inc
pop
testb
add
sarl
inc
and
xchg
add
sarb
xchg
loope
sahf
xor
jecxz
adc
inc
popf
add
mov
xlat
movb
fistpll
into
out
rclb
cli
notl
jb
dec
pop
cmp
sub
xchg
sbb
sti
rcl
int3
adc
lds
scas
outsl
dec
imul
sbb
stc
aad
popa
std
mov
subl
add
sub
rcll
dec
fs
bound
sbb
inc
xlat
rolb
call
inc
shl
pop
mov
cmp
or
xor
cmp
aaa
icebp
movsl
jb
pop
je
adc
jg
jns
jge
shl
ret
stc
and
mov
aam
inc
push
jg
add
dec
mov
mov
cli
jbe
imul
shl
pop
push
fildll
shrb
adc
push
enter
mov
ss
int3
sub
mov
jge
push
mov
pushf
adc
mov
out
cs
cs
aam
mov
cmp
xlat
mov
mov
sarb
imul
cld
xchg
jo
dec
cli
dec
js
rcrb
mull
cltd
push
scas
jg
adc
mov
push
add
xor
dec
add
jge
jle
push
stos
roll
adc
or
push
ja
xorl
adc
inc
inc
add
push
lret
iret
mov
dec
xor
into
inc
adc
jp
push
mov
iret
inc
jg
lret
pop
mov
mov
pop
add
xor
test
cwtl
jge
fidivl
and
push
data16
mov
mov
xlat
dec
add
and
lret
out
inc
lret
stos
icebp
aaa
in
bswap
inc
ja
mov
dec
ja
mov
je
cmc
mov
jl
pop
dec
cmpsl
jns
or
fwait
imul
and
jmp
loopne
pushf
adc
mov
cwtl
es
repz
aam
mov
jne
jp
mov
sarl
mov
add
jno
cmp
mov
mov
fdivs
pop
imul
jno
pop
dec
test
pop
mov
jne
push
std
jno
fwait
xchg
mov
popa
pop
shll
mov
cmp
adc
pop
pushf
out
mov
cmp
jmp
push
out
frstor
mov
pushf
jle
in
cmp
dec
or
lret
test
fmulp
pop
pop
call
es
orl
mov
dec
lcall
cld
mov
cmp
scas
les
sub
jle
push
inc
popa
mov
mov
enter
cwtl
adc
or
or
lods
and
cli
aad
lock
sbbb
cmpsl
stc
inc
mov
push
jmp
cmc
sub
cmp
cmp
out
push
test
add
xchg
out
dec
leave
nop
fadd
fistl
cs
adc
and
es
xchg
mov
push
push
repnz
lret
dec
ds
mov
in
es
push
cmp
fisttpll
mov
inc
and
and
or
fisubrs
inc
and
push
or
pop
stos
imul
sarb
push
pop
jns
divw
shlb
insl
sbb
jmp
sub
inc
or
icebp
ret
push
call
jbe
mov
repz
f2xm1
arpl
jb
push
add
and
cmpb
sbbl
jecxz
add
cmp
iret
out
mov
in
or
dec
push
sub
cltd
les
jno
xor
sar
push
pop
or
or
fnstenv
cmpb
mov
mov
xor
lret
pop
mov
and
sub
shrl
fwait
mov
adc
jg
je
lea
popa
ret
movsl
sbb
sub
test
sbb
pop
sbb
je
arpl
mov
rorb
dec
push
stos
mov
scas
mov
push
gs
fstpl
mov
dec
adc
pop
mov
jge
add
cmpsb
rcr
insb
sub
pop
push
xchg
mov
push
adc
adc
adc
add
imul
adc
xlat
push
data16
inc
xchg
mov
stos
int3
mov
mov
add
repnz
aas
in
in
add
mov
inc
hlt
or
pop
dec
test
jl
in
scas
out
addl
or
jecxz
mov
es
das
das
jp
jae
or
mov
sbb
xlat
cs
jg
imul
sub
mov
fdivr
js
and
or
dec
xchg
lods
adcb
adc
insl
mov
mov
fcmovnu
push
jne
call
mov
xchg
push
test
bound
punpckhbw
xchg
inc
aad
addb
dec
das
je
sti
jae
sbb
sbb
push
pushf
sub
scas
mov
push
fldcw
into
inc
or
out
xchg
mov
sub
iret
int
scas
and
or
test
dec
inc
popf
rorb
loop
out
fstps
adcl
inc
movsb
add
scas
popf
xor
mov
nop
std
std
sbb
push
jns
ljmpw
cmp
call
andl
pop
inc
push
pop
dec
pop
data16
rolb
mov
sti
std
jb
ss
push
add
scas
icebp
popf
lods
dec
mov
fwait
mov
sbb
cmp
xchg
enter
test
dec
out
imul
sbb
push
push
sti
adcb
push
add
add
fabs
push
into
mov
lret
mov
fdivrp
shll
dec
and
mov
mov
xchg
xor
xlat
and
test
lds
mov
cmp
popa
je
push
add
into
loope
popf
adc
sub
mov
inc
addb
mov
add
bound
push
sub
pop
pop
and
adc
loope
mov
cmp
cmp
aad
and
xchg
fcoms
pop
enter
inc
jbe
jae
test
push
repnz
stc
out
lods
pop
mov
add
dec
cltd
mov
ficompl
test
cwtl
shrb
movsl
add
mov
ja
cs
test
mov
mov
xor
jecxz
jmp
stos
jge
js
dec
stos
nop
jno
jns
and
pop
xchg
scas
imul
xor
mov
lret
movsb
xchg
add
fiaddl
jp
fmul
lret
js
jne
jl
sbb
stc
movsb
roll
push
enter
test
rep
xor
pop
push
testb
adc
sub
test
mov
lds
xor
sti
sbb
jmp
mov
gs
pop
sahf
arpl
lea
aam
jns
inc
pop
lds
movhps
lcall
sbb
jp
jb
mov
adc
sarl
or
inc
ljmp
mov
pop
lods
xor
push
idivl
into
cmp
cmpsl
aam
lcall
sarl
les
xlat
xchg
and
pop
hlt
fsts
xchg
aas
stos
dec
pop
jmp
jns
pusha
insl
mov
lret
cmovo
mov
jnp
push
jmp
push
pop
xor
out
or
hlt
xlat
adc
mov
add
loop
lret
xor
inc
push
lods
jb
enter
sbb
jp
in
les
cltd
sbb
lcall
and
andl
sbb
mov
mov
adc
imul
inc
mov
or
rclb
xchg
add
dec
and
imul
cmp
pop
sub
sub
jl
ret
sbb
mov
sbb
adc
bound
lods
xor
xchg
push
xchg
std
jnp
xchg
fwait
pop
pop
mov
js
test
enter
mov
repz
flds
ss
in
fldl
inc
fnstenv
jp
fwait
adc
or
sub
cmpsl
push
adc
xor
sbb
mov
sbb
add
fstpl
cmp
lea
scas
dec
inc
cwtl
mov
sbb
mov
lods
inc
pop
push
cmp
mov
stos
or
sub
syscall
fsubs
mov
hlt
cwtl
inc
sub
dec
popf
ret
and
repnz
lods
fldcw
gs
fwait
jnp
push
jne
pusha
xlat
cltd
add
inc
and
daa
lcall
or
dec
dec
mov
iret
pushf
mull
mov
or
push
sahf
and
push
dec
rorl
dec
pop
ljmp
paddd
mov
sahf
fistl
adc
mov
insl
jecxz
cltd
pop
jmp
sbb
dec
sub
sub
dec
data16
movsl
or
xchg
push
adc
push
out
in
mov
pop
or
test
push
dec
cltd
loope
jmp
and
mov
mov
cmc
je
fdivrl
xchg
add
or
test
add
adc
xor
out
stos
xchg
test
jmp
mov
inc
jns
imul
add
pop
push
mov
cmp
outsb
jnp
andb
xor
push
das
or
push
or
mov
adc
adc
push
xchg
rorb
add
cmpsl
cmp
pop
inc
test
push
outsl
lcall
movsb
dec
loope
fdivrs
sbb
dec
mov
xchg
rolb
out
dec
push
xchg
bound
xchg
cmpsb
dec
test
jmp
lods
jb
sub
add
pop
mov
sub
sbb
insb
jno
pop
js
mulb
ficompl
inc
jno
push
jno
outsb
sbb
mov
stos
mov
sahf
loope
scas
push
lds
push
jbe
mov
fidivl
mov
nop
cmp
test
insb
cmpsb
sub
dec
sbb
nop
or
pop
pop
stos
push
orb
sub
test
mov
sbb
jns
push
jb
dec
test
pop
sbb
or
inc
mov
ret
or
push
imul
sbb
dec
or
aad
lock
or
scas
mov
xchg
or
into
fcomi
pop
adc
mov
mov
pop
cmpb
inc
mov
mov
mov
pop
lcall
notb
mov
push
enter
pop
mov
imul
mov
sub
and
cmpsl
jb
mov
cld
out
mov
nop
fcoml
sbb
pusha
adc
out
cmp
in
mov
outsb
mov
push
cmpsl
cmp
cwtl
mov
dec
inc
jge
test
and
hlt
push
stos
std
ffreep
and
test
pop
mov
repnz
scas
xlat
lcall
adc
call
daa
xor
iret
scas
jb
push
add
testl
jmp
icebp
pop
pop
lcall
push
enter
or
mov
stos
fucom
dec
cmpsb
mov
aad
aas
push
inc
jb
sbb
pop
mov
sub
rcrb
inc
add
es
shl
sbb
test
push
xchg
inc
jecxz
in
dec
lret
icebp
cmpsb
mov
std
jns
mov
iret
out
cmp
pop
mov
inc
mov
or
mov
data16
jl
mov
pop
lods
js
repnz
pop
aad
mov
leave
movsb
imul
lcall
dec
rolb
jno
dec
add
lret
xchg
inc
dec
sub
jl
inc
adc
xor
iret
loope
jle
cwtl
dec
and
hlt
int
ret
cwtl
daa
icebp
jge
xlat
xchg
sub
inc
iret
cmpsb
pop
and
pop
scas
mov
mov
js
mov
mov
cmc
sub
push
ret
ds
dec
dec
inc
inc
lcall
mov
out
xchg
add
rorl
test
inc
inc
outsb
pusha
test
fstpl
sbb
bound
scas
mov
and
mov
call
mov
mov
xchg
fs
jge
pop
aad
js
push
ret
lcall
jmp
adc
mov
push
inc
bound
fwait
shll
pop
inc
notb
mov
jno
filds
mov
adc
decl
xor
inc
roll
jo
xor
xchg
insb
xchg
jecxz
mov
inc
movsb
xchg
outsl
or
and
jne
or
aam
jnp
inc
pop
frstor
out
adc
push
jg
sub
loope
bound
xchg
insb
mov
add
aam
add
gs
cmc
movsl
pushf
loop
test
mov
mov
lcall
out
inc
inc
and
xor
and
add
adc
lods
outsb
mov
mov
scas
insl
mov
sub
lret
test
push
dec
and
ret
fsubrs
and
mov
sbb
fldcw
mov
inc
lret
andb
sbb
jbe
pop
inc
xchg
aaa
negb
je
out
cmp
mov
aas
clc
mov
in
gs
in
lock
sbb
pop
pop
or
and
into
and
incl
xchg
jnp
insb
adc
pop
xor
test
sub
mov
xor
inc
dec
pop
pop
ror
in
sbb
adc
mov
test
sbb
cmp
inc
inc
pop
jge
fbld
dec
das
mov
mov
sahf
scas
repnz
pop
lret
cld
and
mov
add
mov
repnz
int3
mov
cmp
add
xchg
pop
or
xchg
and
mov
rorb
add
adc
sbb
jo
aaa
mov
inc
imul
sbb
cmp
imul
repz
add
fistpll
pop
and
loope
cmc
pop
loope
push
jle
jmp
stos
mov
cltd
int
aad
cltd
dec
cwtl
jae
xchg
fldcw
dec
xorb
dec
in
lods
notl
repz
cmp
es
push
cli
movsl
or
insl
sbb
inc
sti
xchg
dec
es
cmp
xor
push
cmp
popa
or
sbb
lods
pop
shlb
and
sbbb
add
xorb
sbb
cmp
inc
into
mov
pop
iret
mov
pop
dec
xchg
movsb
dec
jp
inc
jae
loope
inc
inc
test
or
mov
insl
and
int
and
shr
pop
and
iret
test
push
aad
aam
adc
frstor
inc
movsb
mov
adc
pusha
fistpll
ljmp
out
stos
pop
lret
ds
fdivr
mov
push
dec
cmp
cwtl
mov
pop
mov
and
xchg
stc
pop
mov
das
pop
insb
fdivl
push
hlt
push
add
push
aaa
mov
mov
das
pushf
shll
jecxz
mov
sub
mov
xchg
mov
pop
cmp
lahf
push
and
stc
mov
jae
push
daa
cwtl
pusha
mov
xchg
add
cmp
xchg
fdivl
insb
idivb
mov
jb
pop
test
add
mov
mov
lret
and
repnz
fcoms
or
cld
or
leave
pop
push
mul
jbe
push
test
cmp
xor
fdivl
pop
xchg
pop
ficompl
scas
movsl
nop
cmp
ss
fdivl
pop
mov
test
lds
add
inc
movsb
or
insl
and
push
popf
addl
mov
push
in
push
sbb
cmp
mov
js
jp
cs
in
not
addl
xlat
in
mov
or
rcrb
ret
std
ds
in
xor
mov
outsl
or
fsts
enter
sbb
sbb
mov
movsb
mov
inc
rorl
pop
mov
leave
jl
adc
mov
mov
rorb
rorl
sbb
cs
aas
push
inc
mov
xor
loop
push
jnp
js
out
lret
ja
push
movsl
movsl
ja
dec
movsl
adcl
in
cmc
rorb
mov
mov
and
int
ljmp
pop
cmp
inc
es
or
dec
mov
arpl
push
aad
movsb
mov
xlat
pushf
int3
sbb
fsubr
aam
jmp
mov
rcrl
lret
jl
sarb
in
dec
dec
cmp
push
aaa
lret
add
mov
and
fwait
das
mov
clc
dec
xor
jg
ljmp
sub
jle
cld
rcll
push
pusha
sub
std
jg
pushf
pop
xchg
jg
mov
std
scas
jns
psrlq
and
out
fldl
push
xchg
xchg
inc
shll
jbe
test
or
push
push
jmp
ret
or
pop
movsb
push
adc
pop
sbb
imul
mov
in
jmp
les
push
adc
popa
add
xor
orb
sti
out
addr16
pop
icebp
xchg
ret
dec
je
shl
sbb
mov
pop
cmp
lock
inc
ja
test
cmc
push
sub
jmp
adc
stos
enter
call
inc
dec
adc
mov
fsubrs
add
xorl
inc
imul
std
cwtl
mov
dec
pop
fwait
push
xor
pop
mov
cmp
pushf
mov
adc
jb
cmp
push
sub
inc
lret
out
dec
jle
mov
ret
pusha
outsl
cwtl
inc
ja
add
xor
xchg
xchg
xchg
add
xorps
rolb
mov
fdivrs
push
stc
aad
mov
fisttpl
int
subb
inc
loop
sti
or
adc
and
sahf
add
leave
test
jecxz
pop
int
lret
pushf
sub
fdivr
clc
and
mov
xor
or
movsl
fadds
pop
adc
es
into
outsl
sbb
jb
repz
xchg
dec
mov
fldenv
das
push
xor
jb
add
push
push
hlt
sub
adc
out
mov
cmc
xchg
mov
in
in
movsl
iret
jge
int
adc
ja
icebp
inc
int3
or
add
pop
repz
cmpsb
in
mov
into
or
and
rorb
or
repnz
jb
push
adc
fwait
xlat
out
ja
adc
pop
jecxz
add
das
bound
sahf
iret
push
and
lds
dec
lahf
cld
in
push
in
clc
outsl
pushf
jmp
inc
mov
incb
fdivr
nop
bound
testl
and
mov
int
cmp
mov
mov
mov
loop
out
xor
pop
and
cli
lods
xor
es
push
mov
mov
stos
je
mul
cmp
dec
loopne
fcomp
inc
lods
dec
cmpb
pop
dec
cmc
mov
jp
sub
cmp
mov
aam
mov
cmp
stos
mov
aam
lret
lea
xchg
xor
mul
mov
leave
shll
adc
das
push
add
sub
inc
pop
imulb
arpl
fwait
sub
pop
or
and
outsl
stos
mov
shll
outsb
loope
popl
rorl
inc
cmp
add
lock
xchg
adc
pop
lock
dec
cli
mov
and
mov
mov
int
mov
push
xlat
xor
and
mov
clc
cli
xchg
push
inc
pop
sbb
lock
addb
fucom
or
in
jp
xor
mov
cmpsb
xor
mov
pop
scas
int3
aam
rol
jne
lods
mov
mov
mov
jmp
xchg
rorb
sub
dec
lock
mov
inc
xchg
xchg
cwtl
sub
dec
int3
insb
xchg
test
es
lahf
or
stc
mov
cwtl
adc
andl
movl
adc
gs
xchg
test
adc
sar
mov
lods
or
cs
jecxz
test
jge
scas
cmp
ljmp
mov
mov
in
icebp
les
cmp
xor
xchg
aas
and
sti
lock
hlt
sub
lods
clc
and
out
cld
pop
sub
and
inc
stos
cli
into
int
jns
popa
ret
lret
and
jno
ret
repz
sarb
repz
sbb
lahf
pop
ror
push
push
es
pop
ret
xor
add
repz
test
sub
ficoms
fcom
scas
mov
cmp
jmp
xor
or
and
popa
jae
mov
js
pop
sbb
ja
push
and
icebp
add
mov
pop
and
push
pop
lods
stc
xor
mov
sbb
xchg
inc
cmp
fsubrp
movsb
f2xm1
shlb
push
roll
fstl
mulb
pop
cmpsl
inc
jle
push
ficoms
arpl
xchg
adc
xchg
or
xchg
std
inc
gs
jno
sbb
cmp
push
xor
gs
sbb
in
ds
aaa
inc
mov
push
inc
out
pop
push
aad
jl
minps
push
and
loope
out
fmull
sbb
or
cwtl
rcr
bound
sub
mov
mov
dec
lcall
loope
cwtl
outsb
cmp
mov
add
mov
dec
ds
nop
xor
div
adcb
cmpsb
pop
mov
fimuls
ficoml
lahf
inc
jge
out
xchg
sbb
adc
pop
push
mov
aam
mov
std
xor
rorb
stos
addr16
imul
andb
adc
clc
cmp
bnd
shll
add
rorl
pop
sub
push
out
test
aam
std
xor
add
stc
fwait
pop
mov
orl
sbb
aam
xchg
aam
mov
mov
cmp
std
mov
call
or
inc
lret
push
popa
hlt
push
and
inc
mov
add
xlat
xchg
in
jo
xchg
into
jmp
pop
cmpsl
sub
sub
rcll
xor
clc
xor
pop
pop
xchg
fcoml
test
ja
mov
ss
xchg
mov
cwtl
dec
int3
push
fsubrl
fisubs
cmp
mov
mov
pop
jns
sarl
mov
pop
mov
cld
mov
sbb
pop
rolb
mov
adc
mov
ret
repz
lods
repnz
mov
add
aam
ss
fidivl
xor
fwait
jo
push
mov
mov
out
pop
addr16
push
orb
xor
icebp
push
enter
sbb
xor
xor
xchg
cmp
cli
adc
mov
sub
imul
sbb
test
jne
dec
stos
scas
leave
int3
dec
mov
cli
jle
or
aas
icebp
scas
out
lret
and
cmc
les
les
cld
sbb
orl
add
repnz
jbe
fcmovne
sub
jle
mov
aaa
nop
outsl
and
nop
int3
adc
out
aas
je
pushf
pop
iret
sub
inc
pop
mov
sub
insl
xchg
ljmp
sbb
push
daa
es
scas
out
pop
sbb
or
ja
push
and
and
mov
xchg
inc
mov
testl
cmp
mov
int
jns
or
data16
std
fidivrs
out
pop
lahf
jge
fdivrp
add
pop
mov
cmpl
cmp
imul
jne
mov
add
sub
fs
in
add
mov
dec
mov
movsb
daa
insl
pusha
mov
addr16
js
push
mov
push
in
inc
pop
cs
mov
popf
test
std
fucomp
sarl
ss
loop
js
mov
arpl
addr16
jl
push
jnp
iret
and
imul
jge
push
aad
insl
mov
icebp
rorl
add
test
outsb
lods
in
stos
int
xor
insb
adc
push
cmp
in
xchg
mov
mov
mov
jp
cmpsb
lds
sub
arpl
leave
xchg
add
push
jne
pop
jge
inc
int
or
jp
dec
inc
add
pop
sbb
lods
or
fs
fs
dec
mov
xchg
leave
push
stc
inc
xor
sub
adc
test
cmpsl
adc
inc
lods
or
inc
fcmovu
add
jle
outsb
lcall
jg
push
inc
mov
dec
xchg
loopne
mov
and
popa
dec
data16
bnd
bound
xor
fmul
ss
push
imul
and
dec
xor
push
sbb
insl
jbe
sub
lea
lcall
jo
fsubrs
out
sti
getsec
in
ja
rol
lock
ds
int3
pop
clc
daa
inc
add
or
xchg
movsb
test
or
ret
push
sbb
jo
aam
fimull
leave
inc
mov
mov
shlb
dec
push
sub
xor
es
mov
and
lock
jmp
cmp
adcb
inc
mov
cmpb
stos
les
mov
xor
imul
and
inc
or
sub
dec
mov
outsb
sbb
nop
iret
popa
cmp
jle
sbb
fdivl
adc
push
fsubs
das
lods
in
loope
ret
inc
and
mov
adc
loop
jno
stos
call
loop
lcall
stc
jns
jnp
int
push
xchg
aaa
xchg
leave
pop
cld
jge
fcmovb
xor
test
xor
push
stos
mov
mov
cmpsb
stos
adcl
mov
ret
int
fisubrl
or
jo
lcall
mov
dec
lds
jge
cmpb
fcmovne
scas
mov
push
enter
fchs
rorb
add
push
fimull
cld
repz
out
popa
push
and
sbb
adc
repnz
pop
mov
mov
jg
pop
adc
dec
jnp
pop
cmc
icebp
pop
adc
lret
sub
dec
aad
jo
xchg
lahf
push
into
mov
loope
xor
fsubrp
adc
loope
jo
aad
sbb
or
int
sbb
mov
sub
fwait
data16
add
outsl
or
jae,pn
dec
jbe
aaa
dec
es
or
js
sbb
test
pusha
aad
outsl
fwait
stos
sub
fisubrl
cld
int
dec
push
test
mov
pop
mov
dec
sbb
ud0
xchg
xchg
or
shll
jne
fstpt
cmc
in
add
and
out
test
lret
mov
jmp
mov
sub
sbb
sbbb
mov
sbb
cmp
fisubrs
mov
pop
loopne
clc
mov
xchg
test
push
push
lds
clts
mov
jp
stc
cmc
jmp
lret
pop
clc
xchg
scas
bound
call
push
mov
lods
sbb
rorl
jmp
cmp
rcll
fs
outsl
adc
mov
jge
inc
loope
push
mov
loope
cltd
or
cmp
or
arpl
bound
cltd
bound
test
int
dec
data16
pop
lcall
fld
adc
loope
or
pop
std
ret
push
pusha
scas
pop
frstor
shr
add
mov
lret
pop
pop
jmp
pop
push
jns
andl
sub
jg
scas
lock
enter
inc
adc
imul
testl
sbb
pop
fisubrs
sub
notb
inc
push
and
fsubs
inc
ljmp
insb
dec
hlt
or
sub
inc
in
xchg
push
ficomps
xchg
cmpsl
nop
dec
shll
sbb
cltd
mov
iret
xchg
sub
fisubrs
mov
shrl
data16
or
add
lods
pop
fwait
popf
xchg
xchg
leave
xor
mov
xchg
fsts
scas
loope
xchg
sbb
sbb
shl
cmpl
cmpsb
ret
cmc
xchg
push
xchg
pop
jl
push
push
incl
mov
push
in
push
sbb
pop
enter
mov
xchg
sub
iret
mov
and
sbb
inc
mov
cwtl
pop
xor
in
out
jp
cmp
sbb
sbb
cmpsb
cli
cmp
jns
jmp
xchg
scas
das
stos
jnp
enter
cmp
mov
sahf
xor
rcll
popf
fstpl
and
sub
cmp
loop
or
out
mov
ror
sub
popa
sbb
scas
or
fsubr
loopne
ret
rcl
xchg
dec
out
loop
aam
xchg
daa
mov
dec
jle
mov
sbb
fabs
scas
test
push
xor
addr16
clc
mov
pushf
inc
adc
cmp
and
mov
sub
xor
imul
aaa
loopne
inc
loope
fcoms
xchg
or
fisubrl
fists
mov
cmpsl
sub
sub
jo
xor
push
or
mov
icebp
mov
xchg
out
jae
cmpsl
mov
negl
lcall
test
push
inc
rclb
cmp
jne
xor
push
lret
popa
cwtl
lea
and
insl
push
xchg
jg
outsb
fidivs
xchg
loop
loopne
aas
mov
shl
xchg
sbb
sbb
cmp
cli
repnz
cmp
jg
inc
cmp
cmp
pop
dec
mov
nop
xchg
mov
adc
lods
push
xor
jo
repnz
lock
dec
cmp
jae
js
data16
lock
sub
das
flds
xor
cmp
jp
sub
mov
jbe
test
xchg
pop
lcall
sbb
negl
movb
mov
add
gs
jecxz
push
add
add
mov
or
cmp
js
stos
jo
imul
sub
mov
pop
icebp
into
stos
data16
xor
aad
hlt
test
jge
loop
cmpsl
movsl
push
out
mov
add
mov
lock
mov
in
adc
push
aad
push
mov
dec
mov
data16
pushf
cld
pop
xchg
mov
xor
adc
xor
cmp
dec
and
arpl
cli
adc
xor
data16
addr16
ja
push
and
gs
pop
mov
icebp
and
icebp
xorb
mov
lret
gs
add
lret
xor
cmpsl
mov
dec
lods
or
jnp
ja
fildll
mov
pusha
scas
jno
pop
add
ja
xchg
sbb
ret
add
mov
clc
or
fldenv
mov
popf
je
pop
ror
adc
and
sub
imul
fwait
lds
fdivl
lahf
cmp
hlt
int3
in
mov
sbb
sbb
jnp
inc
jmp
sub
mov
xor
jbe
enter
mov
aas
pushf
and
jo
xlat
fldcw
stc
rorl
or
gs
dec
lock
iret
dec
insl
add
mov
sti
aam
repz
fiadds
std
mov
ja
jecxz
and
outsb
outsb
dec
fucomip
cmp
push
test
shrl
add
sbb
pop
pop
int
mov
jl
fwait
arpl
and
mov
push
sbb
in
pop
enter
mov
mov
push
loop
dec
xor
insb
popa
xchg
mov
adc
cmp
enter
jle
add
push
into
mov
add
rcr
pop
and
add
test
push
jns
mov
xchg
sbb
sub
je
and
inc
sarb
lods
ljmp
dec
enter
cmpsb
sub
popa
xor
inc
adc
pop
fwait
call
adcb
xorl
bound
dec
mov
xor
dec
xor
xor
mov
sarb
xor
add
movsl
jne
sbbl
xchg
lret
push
mov
sub
rorl
aaa
out
mov
xlat
arpl
aad
mov
es
add
mov
adc
mov
outsl
ficoml
mov
mov
or
jmp
test
cmp
mov
pop
mov
repnz
inc
test
push
ficoms
xor
inc
insb
pop
adc
push
inc
mov
jb
mov
or
pop
mov
lods
add
mov
jl
inc
add
hlt
scas
enter
xchg
add
insb
jns
push
lret
rol
js
lret
dec
adc
sub
lea
inc
mov
in
mov
or
inc
add
and
lcall
xchg
faddl
cmp
mov
mov
fs
into
ds
jp
xchg
loope
int
pop
in
xchg
xlat
lcall
mov
mov
push
or
inc
mov
inc
js
jae
mov
mov
push
test
jns
mov
sahf
rcr
mov
call
outsl
je
cwtl
xorb
ja
out
jae
lcall
and
jne
and
fnsave
xor
enter
xchg
int
cld
or
jp
test
and
mov
gs
pop
mov
das
jmp
dec
mov
pop
gs
lahf
pop
leave
arpl
cmpsb
mov
fstpl
in
jne
sbb
hlt
dec
in
inc
pop
outsb
dec
ffree
imul
fistl
mov
inc
test
sub
mov
adc
and
mov
dec
test
sbb
daa
push
ficoml
aad
pop
jp
jg
fs
addr16
xor
aas
push
jno
int
adc
mov
imul
cmpsb
lea
mov
test
in
xchg
cmp
mov
xchg
add
fdecstp
dec
cli
in
mov
lret
std
mov
push
lahf
pop
mov
stos
cmc
setbe
ss
push
arpl
jle
xchg
dec
add
aaa
out
jmp
xchg
mov
jno
xchg
aas
and
xor
in
sub
dec
cmc
movsb
or
cmpsb
jbe
sahf
iret
iret
pop
jo
stc
in
mov
mov
jb
adc
rol
mov
ljmp
pushf
inc
sub
fsubs
stc
or
daa
xchg
aas
imul
dec
cmp
pusha
mov
dec
repz
shl
rol
loope
negb
cwtl
shr
push
pop
dec
scas
movsl
sarl
inc
scas
cmpsl
dec
xchg
inc
fisubrl
rorl
jnp
xchg
repnz
xchg
push
imul
jge
sub
push
inc
dec
scas
mov
outsl
pop
push
scas
pop
mov
push
sbb
sub
pop
jmp
daa
cmp
idivl
sub
xchg
fldl
cmpb
bound
lods
popf
xor
or
hlt
cld
push
lcall
icebp
fimuls
mov
out
ficoml
jo
mov
daa
inc
bndstx
nop
sarb
std
mov
stc
dec
fwait
sti
rcrb
imul
lret
iret
outsb
nop
xchg
mov
add
push
cltd
outsb
js
adc
adc
cmp
mov
icebp
xchg
lcall
sbb
inc
add
jne
add
jge
pushf
rorb
mov
aas
dec
mov
js
mov
mov
push
push
xchg
add
leave
mov
inc
test
cmp
mov
or
sub
and
enter
mov
inc
xchg
dec
loopne
fs
add
insb
xchg
push
xchg
out
scas
or
jge
mov
incl
fsubs
cmpsl
pushf
addl
xchg
xchg
mov
push
xor
xchg
add
stos
xlat
icebp
inc
out
or
push
data16
xor
sub
mov
jne
cmpsl
jecxz
sbbl
enter
mov
andl
sbbl
xor
inc
pop
mov
adc
leave
push
xchg
into
sub
icebp
int
sbb
insb
fsubrp
in
cltd
cmp
push
enter
push
mov
cmpsb
jne
dec
mov
std
or
mov
xor
mov
or
repz
and
dec
push
jno
jp
cld
fstpl
fildl
jecxz
imul
xor
ret
out
popl
xchg
in
iret
pop
aaa
push
mov
mov
ret
adc
cli
out
mov
xor
adc
xor
mov
cmp
push
movsl
cmp
xchg
push
cmc
cwtl
lods
sub
sub
mov
fsubl
sbb
inc
sbb
push
sbb
mov
sbb
jo
idivl
jne
cs
cld
mov
aad
push
push
shl
test
sti
cmp
push
and
pushf
rorb
cmp
aam
xor
loope
dec
sub
cmp
mov
sub
lock
xchg
inc
ja
setns
fs
jo
inc
inc
add
mov
cmp
xor
jno
popa
cmp
sub
push
push
dec
idivl
sbb
and
jnp
cmp
fcomps
sahf
lods
enter
lea
fildll
lea
xchg
lods
sub
or
int3
xchg
imull
arpl
jecxz
sbb
inc
mov
jbe
cmp
test
dec
add
insl
je
dec
mov
nop
jns
sar
jo
lahf
pop
scas
cli
cwtl
enter
rcrb
push
pop
scas
dec
ja
movsbl
xchg
mov
shll
cld
sbb
rcr
subb
pop
std
pop
adc
pusha
fdiv
fmuls
loope
inc
leave
add
add
cmp
fs
adcl
inc
cli
xor
mov
add
roll
adc
xchg
fimull
fnsave
fdivr
mov
test
adc
mov
mov
adc
inc
icebp
ja
sub
dec
jg
jne
lret
mov
lods
dec
inc
pop
jb
hlt
xchg
push
jmp
jae
fdivrl
sahf
push
sar
call
xor
pop
sub
lret
lret
mov
bound
add
out
inc
cmpsl
xorb
push
pop
adc
jl
adc
inc
roll
adc
iret
sbb
jmp
xor
mov
pop
xchg
aaa
sti
and
scas
sbb
push
ss
or
mov
dec
orl
ret
adc
fldl
fwait
xor
inc
out
or
faddl
out
loopne
scas
sar
or
pop
inc
scas
jnp
mov
sbb
jge
ror
xor
sti
test
or
mov
sbb
mov
mov
sub
mov
pop
jle
add
adc
pop
adc
xor
pop
push
pop
in
pop
lods
push
and
and
imul
js
out
mov
insl
mov
mov
test
mov
mov
into
pop
iret
adc
popf
jmp
out
imul
icebp
loope
cmpsb
mov
jge
inc
lcall
cs
jle
fstl
ret
mov
pop
xor
addr16
fwait
cmp
jle
jnp
orb
jg
dec
call
sahf
xor
mov
imull
push
adc
imul
or
fucomp
adc
cwtl
mov
mov
out
ljmp
test
test
incl
jmp
push
scas
popf
mov
pop
daa
jnp
inc
xorl
call
popf
mov
jle
ja
scas
cltd
xor
jp
sbb
test
outsb
sbb
mov
gs
gs
repz
lods
dec
lock
cmpsl
insl
mov
push
movsl
insb
mov
orl
popf
popf
cld
mov
jbe
and
sbb
pop
push
mov
andb
xchg
xlat
sbb
push
sub
lret
push
xchg
sub
add
or
cmpsl
or
push
cli
push
psllw
mov
mov
sarb
sti
outsb
out
hlt
test
mov
ljmp
pop
stos
xor
jmp
popa
fsubl
push
mov
fisttps
dec
cli
out
cmc
shl
test
fcom
mov
daa
andl
cmp
sbb
filds
push
pop
pop
xlat
push
in
inc
mov
mov
mov
pop
push
xor
mov
aaa
mov
dec
pop
or
ja
call
add
iret
out
addr16
mov
xchg
pop
leave
sub
mov
inc
push
bound
out
xor
xchg
inc
inc
mov
adc
or
pop
add
arpl
or
fistps
test
sahf
subb
and
fdivr
pop
xchg
dec
jmp
pop
frstpm(287
mov
mov
out
lret
push
out
pop
sbb
pushf
movsl
test
push
jae
cmpl
xor
fistpll
push
scas
push
mov
adc
sub
dec
xchg
pop
loop
aad
in
mov
sub
sbb
pushf
faddl
lods
pop
not
mov
fscale
test
xor
shlb
add
sub
or
or
insb
push
sbb
sahf
lods
daa
jb
lea
pop
jnp
pop
xor
jl
test
arpl
sub
cmp
imul
or
dec
mov
push
adc
mov
mov
lret
add
fcmovnu
hlt
push
iret
and
xor
push
pusha
sub
cmpsb
negb
jge
fistps
scas
rcrb
js
data16
bound
jae
or
scas
nop
ret
mov
jecxz
rorb
push
aam
jp
out
addr16
jmp
fs
push
cli
cmpsl
pusha
cmp
shrb
push
xor
fmuls
out
inc
lods
lods
cmp
jle
push
adc
test
cli
and
out
mov
inc
sbb
divb
clc
inc
mov
fwait
cmp
out
gs
or
bound
mov
push
adc
daa
xchg
aaa
int
test
call
mov
ret
mov
inc
xor
sub
add
fldl
xchg
push
dec
outsl
cmp
aas
addr16
ja
out
fldcw
pop
pop
lea
and
lods
insl
sbb
pop
mov
jmp
pop
xor
mov
ljmp
add
pop
fdivrp
insb
mov
stc
push
pop
adc
mov
and
mov
jns
int3
xchg
sbb
jp
pop
and
fistpl
sub
addr16
sbb
mov
and
jnp
sti
int
push
shlb
push
xor
rolb
push
push
jns
push
mov
cs
das
mov
cld
call
adc
adc
or
cmp
and
aam
sbb
xor
test
outsl
jnp
lods
and
loope
add
cmp
jg
mov
pop
jecxz
iret
sub
mov
lods
je
loope
faddl
mov
or
lret
movsl
or
and
mov
lods
or
stc
or
ret
hlt
out
push
mov
cld
cli
sub
jns
ljmp
cmp
fistpll
into
dec
mov
xor
daa
xor
std
mov
jp
dec
push
jle
and
fs
test
movl
jns
jecxz
add
insl
leave
dec
shr
sub
sbb
push
inc
xchg
push
js
mov
adc
loopne
dec
cmp
push
jbe
lret
lret
dec
cmpsb
filds
ret
add
and
dec
insl
fs
push
mov
clc
insl
into
push
inc
xor
loope
cli
out
shll
mov
dec
jl
mov
push
add
in
lds
push
add
inc
dec
ds
mov
call
xchg
add
push
and
pushf
xchg
pop
leave
fmull
mov
and
fiaddl
adc
popf
mov
xor
add
push
nop
test
int
mov
jbe
dec
jne
stc
lods
ror
push
insl
sbb
push
xchg
rclb
sub
enter
mov
adc
dec
cmp
push
sub
bnd
xor
lock
ljmp
leave
sbb
mov
insl
jecxz
iret
je
mov
push
pop
in
fadds
js
dec
or
mov
sbb
bound
movsb
sub
pop
mov
jg
sub
adc
xchg
imul
cmp
adc
push
sbb
nop
jo
pop
mov
push
jle
jle
xchg
pop
adc
aam
movsb
scas
mov
insl
xchg
or
xor
cmp
lcall
push
out
cmp
push
insb
xchg
cs
cmpsl
movsb
xchg
sub
or
and
scas
movsl
mov
or
loope
xor
or
int3
adc
cmp
push
ss
sbb
jp
movsl
dec
jecxz
xchg
fldcw
rcrb
ret
sbb
push
xor
mov
cs
das
xor
mov
xor
js
xchg
xchg
mov
imul
in
std
jl
fld
insb
pop
or
ds
dec
cmpsb
xor
sub
cwtl
dec
mov
lret
and
aas
out
pop
dec
mov
mov
movntq
ret
in
loopne
frstor
aad
mov
jb
xchg
xchg
outsb
jl
movsl
xchg
out
shll
out
out
or
sub
mov
scas
in
ss
mov
xchg
mov
aaa
push
and
aas
lods
cltd
sub
fcmove
sti
push
fimuls
sti
xor
and
roll
fs
pop
dec
mov
notb
jle
fs
cmpsl
push
inc
in
aam
push
rcll
sub
nopl
addr16
xor
dec
mov
pop
imul
fimull
push
sub
mov
in
pop
ljmp
add
cmc
outsl
xchg
lods
repnz
stc
test
push
scas
and
pop
push
push
rcll
rcrb
cmp
pop
mov
imul
pop
repz
sbbl
dec
sbb
or
lret
mov
arpl
push
jmp
xchg
shrl
sahf
lret
loopne
shrl
mov
lret
pop
lea
adc
or
dec
push
rcrb
cmp
in
out
and
es
pop
aad
cmp
daa
and
cmp
cmp
test
xor
cmp
loope
inc
inc
fwait
bound
pushf
jp
cmp
outsb
mov
icebp
cmp
pop
movsl
out
test
inc
mov
fxch
add
sub
sub
movsl
sbb
scas
jns
out
mov
add
jbe
jl
pop
pop
push
adc
imul
jle
out
mov
scas
xchg
push
mov
push
fmul
sti
push
sub
mov
ljmp
clc
pop
mov
mov
hlt
push
or
inc
jp
addb
pop
aaa
dec
in
imul
cmp
or
je
nop
mov
adc
mov
dec
arpl
mov
mov
icebp
outsl
ss
pop
xor
push
outsl
pusha
xlat
jecxz
push
rclb
or
dec
lahf
ja
out
pop
shrb
cwtl
cmpl
pop
cmp
testb
sub
popw
jp
and
mov
mov
notl
or
sub
mov
out
sahf
push
rcll
sub
in
ljmp
rclb
xchg
dec
mov
outsl
idivw
stc
adc
jne
xor
inc
mov
inc
xchg
rcr
lds
sub
fmull
push
out
mov
jnp
fwait
inc
mov
fwait
push
inc
in
mov
out
sahf
cmpw
mov
push
imul
pop
inc
shrb
nop
fdivl
fisubl
int3
inc
in
inc
mov
jl
mov
hlt
lods
inc
out
xor
daa
repnz
fstpl
fwait
push
mov
cltd
testb
inc
cmp
push
clc
movsl
lahf
sbb
test
dec
adc
inc
cs
rcrl
out
sub
testb
int3
or
and
test
cmpsb
push
lcall
cmpb
adc
sbb
jns
sbbb
jo
stos
xor
pop
loopne
inc
scas
dec
hlt
in
test
bnd
rorb
nop
sbb
mov
mov
dec
pop
iret
cmc
pop
ficomps
cmc
sub
inc
loope
pop
mov
mov
shrl
cmpsb
or
xchg
xchg
xchg
jl
test
pop
mov
lods
insl
popf
jns
mov
cmpl
xchg
int
cltd
ss
mov
testb
cmpsb
nop
jecxz
push
aam
fistpl
inc
adc
fisubrl
and
jb
fcmovbe
lods
mov
ja
mov
and
scas
xor
or
cmc
mov
imul
inc
dec
add
xchg
in
out
lret
mov
into
dec
insl
mov
outsb
push
jno
insl
and
adc
sub
pop
jge
fwait
mov
out
xor
outsb
mov
lock
adc
xchg
xchg
push
data16
adc
fcoml
cmpsb
int3
call
rcll
dec
lock
out
mulb
stc
outsb
push
ret
dec
adc
sub
inc
in
push
jnp
std
inc
mov
clc
and
xorb
movsl
xchg
adc
repnz
and
out
aad
sahf
dec
pop
or
sahf
sbb
or
pop
cmp
call
sahf
scas
incb
popa
arpl
shrb
clc
les
push
or
xor
jp
jno
mov
mov
xor
push
mov
vfmsubaddpd
loop
pop
adc
inc
push
dec
sub
sub
mov
orl
test
loop
sub
pop
pop
repnz
icebp
cmp
imul
pop
inc
adc
imul
leave
cmp
push
lea
lods
jnp
jnp
push
je
stc
inc
push
mov
int
int
inc
gs
and
mov
xchg
adc
cmc
pop
sub
lahf
aaa
daa
sub
std
out
ja
push
cwtl
mov
sub
fildl
jg
mov
inc
inc
pop
and
outsb
pop
mov
sub
push
mov
or
iret
inc
lock
xor
xchg
int
pop
pop
mov
scas
adc
ja
roll
xchg
hlt
cli
jae
lds
nop
cwtl
push
imul
addr16
or
pusha
inc
es
sub
daa
and
xchg
and
pop
iret
punpckhdq
scas
lret
push
lret
filds
test
rcl
push
or
fisubrs
dec
hlt
or
dec
aas
pushf
mov
repz
aam
add
jp
js
jmp
aam
je
add
inc
adcl
push
repnz
push
xchg
xchg
std
addb
repnz
popa
out
lock
cmp
mov
fsts
xchg
arpl
or
dec
fisubrl
mov
int3
shrb
ficoms
jns
shll
push
jp
adc
jmp
jp
or
sbbb
adc
xor
cmp
out
mov
out
pop
ret
out
insb
sub
rolb
js
xor
adc
and
aaa
mov
mov
subb
shlb
mov
mov
scas
sub
add
sub
out
test
and
or
aaa
push
aas
and
jmp
push
es
js
pop
cwtl
mov
jge
pop
cmp
jnp
push
add
inc
sub
sti
fwait
leavew
or
outsb
popa
inc
cltd
xor
xor
sub
ss
pop
ljmp
sbb
imul
fdiv
dec
mov
mov
fsub
sbb
sahf
mov
or
cmp
call
push
sahf
sahf
aas
fisttpl
push
out
popf
lret
pop
pushf
ljmp
xchg
mov
mov
add
cmp
add
mov
loope
dec
sbb
mov
ds
ret
loop
not
mov
sbbb
cmc
jl
mov
loopne
jmp
popa
popa
jecxz
jno
aaa
push
pushf
lahf
adc
adc
add
es
nop
adc
xchg
testl
xor
pop
nop
ret
js
push
test
lcall
sbb
xor
das
or
mov
insb
test
nop
dec
or
sbb
jecxz
add
push
arpl
xchg
aas
sub
daa
iret
in
insb
out
outsb
push
scas
xor
and
jo
adcl
mov
jge
adc
dec
adc
arpl
dec
xchg
mov
outsl
in
jae
cs
xchg
pop
xor
pop
mov
scas
jne
add
rcr
dec
imul
ljmp
addb
xchg
outsb
mov
dec
push
xchg
cld
aas
enter
in
sub
cmp
ret
xchg
inc
in
aaa
shlb
shlb
jl
inc
out
divb
push
ss
inc
sbb
jns
shlb
mov
cmp
mov
lock
cli
mov
mov
sub
inc
adc
lods
pop
inc
mov
mov
sub
cld
cwtl
ret
cmp
call
rcrl
stos
insl
cwtl
and
int
inc
pop
or
lock
mov
sbb
cwtl
mov
adc
test
ljmp
adc
lea
aas
mov
arpl
or
add
mov
pop
das
push
test
inc
add
bound
notb
insb
mov
and
pop
and
lcall
cs
sbb
cwtl
inc
and
cli
cmpb
jo
cmc
xchg
pop
test
test
lock
notb
lret
push
sbb
dec
cmp
mov
int
jp
xchg
arpl
mov
jbe
fcmovne
cmc
xchg
ret
movsb
mov
and
push
sub
test
aaa
jge
mov
add
imul
subl
push
fadds
fsubrl
data16
mov
loopne
les
mov
mov
and
push
xor
mov
movsb
jo
subb
test
xchg
hlt
fwait
cli
hlt
leave
adc
fwait
mov
jo
lods
dec
jmp
mov
ret
loope
push
testb
cmp
add
xchg
pushf
daa
jl
lods
and
mov
xor
subl
adc
push
push
jo
lods
sbb
hlt
mov
cmc
repz
mov
out
test
nop
mov
mov
idivl
jge
insl
out
mov
sbb
mov
inc
outsb
mov
fidivrs
outsl
loopne
rclb
cltd
inc
cli
ja
js
or
movsb
mov
push
cmp
ret
out
jecxz
mov
or
mov
xchg
adc
inc
out
cld
sub
pop
fwait
and
mov
hlt
push
xchg
sub
lret
es
gs
push
mov
dec
xor
pop
and
in
jns
ret
fidivl
mov
popf
cmovl
outsl
aaa
and
fistl
daa
mov
mov
addr16
mov
decl
scas
leave
jne
lock
jae
adc
mov
mov
ret
jg
int3
add
out
push
fcmove
inc
hlt
mov
das
fidivl
aam
inc
add
shlb
pop
ss
jle
add
xor
cmp
or
cwtl
lret
mov
cmp
cmpsb
jecxz
xor
mov
xor
jmp
pop
out
imul
jbe
sar
gs
sbb
in
sub
cmc
insl
add
mov
mov
cmp
lock
outsb
clc
xor
push
push
and
test
and
clc
xor
dec
xchg
mov
xorl
je
lock
xor
push
mov
inc
faddl
inc
xchg
xor
fsts
mov
es
stos
iret
leave
ja
mov
sub
inc
jb
aaa
orb
jne
adc
sub
pop
popa
sub
in
add
ffree
cmp
negl
int
vpsrld
and
mov
xor
and
or
cmpsl
mov
push
pop
jno
add
mov
stc
adc
test
mov
jbe
cs
mov
outsl
and
and
jns
pop
stos
data16
cmpsb
xchg
lret
imul
add
jo
mov
cmp
jp
test
and
cwtl
mov
popa
lock
cmpsb
pusha
inc
pushf
aam
lods
je
mov
and
lock
fs
cli
cltd
push
jl
sub
cmp
jno
lret
cmp
or
mov
fcoms
push
pop
pop
push
out
pop
lcall
stos
adc
jl
inc
lods
pushf
jle
jae
push
int
push
lret
and
cli
outsl
sub
mov
loopne
int
ja
addr16
mov
sbb
into
cmpsl
es
fs
dec
pop
out
pop
cmc
ret
mov
icebp
lcall
jnp
and
rcll
inc
add
js
repnz
jp
dec
or
mov
xlat
inc
jno
das
dec
jmp
jo
loopne
adcb
xor
adc
jle
mov
sub
add
jle
mov
fwait
pop
jnp
ficoms
ficomps
repz
aaa
xchg
inc
cmp
pop
push
push
jl
mov
lods
fisttps
sbbl
inc
outsl
mov
test
gs
mov
xor
xchg
arpl
mov
int
imul
gs
mov
cwtl
mov
jg
jb
sbb
sub
adc
mov
mov
aaa
int
sbb
pop
add
dec
rcl
test
and
test
bound
and
fiadds
xchg
mov
cmp
in
movsl
movsl
push
enter
pop
aas
arpl
shl
push
shlb
lret
xor
mov
nop
movsb
add
addb
pop
mov
or
in
mov
sbb
pop
pusha
xchg
icebp
jne
pop
fisttpl
scas
mov
adc
outsb
lods
push
and
xchg
pop
ret
imul
sbb
sti
mov
cltd
and
pop
test
add
hlt
aam
sbb
cmp
cmp
ret
dec
lcall
out
int3
jmp
cmp
or
inc
in
adcb
jno
xchg
and
xchg
rep
lock
notb
jg
xchg
cmp
fsts
addl
aad
jae
insb
push
popf
mov
mov
inc
cli
mov
enter
pop
sar
push
cmc
sbb
dec
pusha
jb
out
loope
jnp
cmc
mov
shrl
mov
fimull
mov
in
push
push
add
out
insl
push
inc
adc
xchg
and
fsubrs
jecxz
test
fcmovne
add
ljmp
dec
inc
push
pop
sub
cld
imul
data16
mov
imul
jne
mov
cmp
sbb
pop
push
adcb
mov
movsb
jmp
aas
sbb
mov
sbb
jl
mov
dec
addr16
mov
and
jnp
ljmp
mov
pop
lahf
add
movl
push
cld
dec
in
dec
ss
cltd
mov
imul
xlat
inc
and
mov
insl
cmp
and
jge
and
dec
jg
dec
inc
inc
jnp
sbb
inc
xor
xchg
add
xchg
lods
insb
ss
sbb
push
loopne
jecxz
pusha
sub
xlat
ljmp
sbb
lods
cmp
dec
dec
and
pusha
arpl
mov
mov
out
push
add
cmp
dec
pop
ret
les
sbb
rorl
cmpl
mov
mov
call
dec
out
test
adc
dec
and
loope
push
scas
or
jl
mov
cli
xchg
aas
adc
testl
outsb
sub
adc
push
jnp
sbb
iret
adc
scas
lods
scas
and
mov
push
sbb
daa
xor
sub
pop
xor
fimuls
xchg
mov
xchg
pop
shlb
outsb
nop
inc
lcall
mov
hlt
push
call
fnstsw
pop
mov
jge
push
lahf
cmpsl
mov
xchg
jmp
adc
xchg
cwtl
mov
std
dec
mov
add
fstp
push
imul
je
jp
stos
xor
pop
sahf
in
cmp
shl
push
nop
jp
mov
aam
sbb
sbb
inc
mov
inc
movsl
dec
adc
xor
inc
pmaxsw
inc
daa
push
sbb
pop
in
pop
shlb
shll
xor
outsl
data16
mov
mov
push
mov
movnti
or
dec
aaa
das
cmp
pushf
adc
dec
mov
leave
mov
ss
aas
push
das
add
adc
jbe
mov
mov
rol
out
or
out
repnz
in
inc
and
imul
call
or
xchg
sti
ret
pop
jge
fwait
fs
scas
ljmp
inc
xchg
fidivrl
cmp
sub
xlat
das
adcb
mov
mov
adcb
mov
jo
loope
into
jmp
in
xchg
add
cwtl
jle
xor
lock
xchg
push
mov
ret
and
mov
mov
xor
xor
lahf
and
popa
jmp
mov
out
daa
pusha
cmp
mov
jnp
mov
ret
fidivs
imul
pop
lcall
fiadds
sbb
jg
push
test
shrb
sub
outsb
imul
lods
jecxz
jp
dec
in
insl
pop
mov
xor
mov
xlat
ja
pop
ds
inc
pop
mov
loope,pt
lldt
jle
inc
into
cmp
pop
icebp
jle
mov
pusha
push
loop
test
fdivs
les
popa
sub
mov
pop
jns
scas
mov
movb
movsb
inc
aam
cmp
pushf
xor
sub
and
mov
jbe
imul
dec
mov
push
add
imull
mov
popa
aas
xor
ljmp
dec
das
adc
mov
sub
sub
test
jno
pop
adc
jo
sbb
xchg
xchg
cld
mov
orl
pusha
cmp
push
movsb
cmp
and
or
push
pop
mov
popf
sbb
fnstsw
cmp
sahf
in
fbld
mov
mov
adc
call
xor
sub
stc
sub
je
mov
bound
push
xor
out
mov
sbb
mov
xchg
jl
daa
jmp
jo
pop
jle
sahf
sahf
mov
cld
insb
int
decl
pop
sub
cli
mov
das
sbb
pop
inc
mov
popf
and
fwait
inc
mov
es
in
repz
rol
cwtl
pop
mov
iret
ja
out
pop
out
aas
sahf
aas
jno
jmp
or
adc
out
jno
dec
and
cmc
pop
pop
inc
xlat
sub
xlat
inc
pop
xchg
sbb
movsb
inc
call
int3
pop
xchg
nop
xchg
dec
or
push
sbb
shl
adc
sarb
shll
shll
mov
dec
mov
jg
fcmovb
sbbb
in
jmp
loopne
mov
shl
xor
div
scas
xchg
mov
scas
pop
cmp
mov
xor
inc
sti
les
cmp
cmpsb
xorl
sti
fdivrl
xchg
inc
jo
pop
imul
les
into
mov
cmp
sti
js
cld
out
push
adc
scas
mov
ja
and
icebp
add
cmp
cli
out
or
pop
sbb
xor
test
add
in
xor
repz
xor
popa
clc
pop
xor
mov
dec
cmpsl
lahf
xchg
fiaddl
lcall
fldenv
fdivs
jno
test
jecxz
xor
or
fidivrl
mov
xchg
mov
pop
mov
push
insb
or
push
jno
pop
std
mov
adc
push
and
pop
adc
jne
inc
negl
jge
lds
dec
or
xchg
push
call
test
outsb
cmp
inc
mov
setae
stos
xchg
xor
dec
pushf
push
orl
repz
mov
int
mov
enter
lods
fmuls
pop
sbb
mov
add
add
cmpsl
dec
fadds
and
dec
jae
mov
in
cltd
in
sbb
lret
insb
hlt
inc
clc
fwait
add
call
repz
test
mov
in
push
rcr
setns
add
rcrl
jne
sbb
aas
add
movsl
mov
push
or
icebp
insl
xor
into
in
shll
cltd
inc
xchg
fucomp
jnp
mov
or
or
push
pop
dec
out
xor
cs
mov
loope
adc
inc
xor
add
add
loop
add
inc
mov
clc
and
sbb
and
add
rol
std
pop
mov
test
sbbb
aaa
and
push
and
push
mov
lahf
out
outsl
out
dec
cld
iret
scas
fnsave
add
xor
or
mov
sbb
xchg
xor
sbb
add
push
adc
and
push
jae
xchg
inc
pushf
dec
push
outsl
rolb
mov
jns
lock
add
jb
adc
mov
sbb
dec
mov
lods
sbb
and
movsl
in
lods
lock
xor
pop
add
and
leave
fwait
mov
std
push
loopne
push
cmp
push
leave
ljmp
cmpsb
int
repz
push
stos
push
rcll
fsubr
add
cmpsb
repz
xchg
dec
sbb
adc
out
pop
inc
cwtd
and
call
mov
into
out
aas
mov
mov
aam
mov
pop
pop
out
xorl
dec
data16
xchg
ftst
sbb
push
inc
shll
js
aam
jbe
mov
jae
jo
das
ja
push
sub
leave
pop
enter
xor
lock
pop
pop
out
xchg
shll
icebp
mov
inc
xor
aaa
out
in
mov
popf
aas
xchg
dec
addb
aas
xchg
pop
push
cs
or
add
jno
sbb
aad
inc
adc
aas
fsubp
outsb
xlat
icebp
jl
cmp
lret
or
mov
mov
fistpll
std
notl
in
jle
cmpsl
lock
push
flds
shl
mov
xlat
or
lea
rcr
xchg
das
stos
xchg
rclb
adc
std
les
jo
sbb
ret
jecxz
pop
cmp
cmp
dec
movsl
fwait
in
cmp
addb
pop
fdivrl
mov
out
push
in
inc
sub
mov
inc
cmp
punpcklbw
push
inc
push
ljmp
and
lds
das
jmp
add
add
adc
mov
xlat
rdpmc
xchg
pop
add
jl
das
int
in
xchg
ret
mov
mov
push
sti
int3
push
mov
mov
push
test
mov
inc
jbe
dec
sub
sbb
iret
xchg
mov
add
xchg
jo
inc
mov
pop
fidivrl
mov
inc
rorl
xchg
adc
mov
pop
fstps
pop
cmp
mov
inc
pop
call
and
mov
decb
lahf
insb
and
push
daa
test
loop
jmp
aas
and
lea
daa
lahf
push
pushf
sub
fs
lds
pop
jge
jo
mov
jmp
shlb
fbld
fimuls
shll
daa
fisubl
cmp
mov
mov
inc
xor
push
jl
cmp
in
add
cwtl
fs
idivl
sahf
mov
loopne
mov
jo
xchg
sidtl
xor
push
js
shll
les
sub
clc
loopne
pop
dec
ret
fwait
out
xchg
lahf
pop
cmpsb
repnz
cmp
and
cmp
push
cmp
shrl
ret
xor
daa
pop
sarl
push
int3
jnp
cmp
cmc
cmp
pushf
cmp
mov
ret
inc
xchg
clc
xor
lds
push
fdivrl
loope
push
adcl
in
xchg
push
jae
pcmpeqw
inc
mov
into
pop
mov
cmp
xor
leave
jmp
lret
mov
mov
xchg
pop
imul
pop
xchg
sbb
push
dec
loopne
inc
stos
sub
inc
pop
insb
pop
insl
adc
mov
into
popf
and
inc
mov
xor
ss
or
sbb
jns
sub
shrb
icebp
sbb
dec
rol
leave
add
or
jbe
jp
mov
inc
inc
in
sbb
leave
xchg
jne
and
sbb
inc
fmulp
pop
lcall
push
imul
adc
pop
std
mov
cmp
jmp
arpl
gs
sbb
ss
call
lods
cmc
out
imul
inc
fcomi
js
gs
sub
outsl
dec
ds
inc
ret
jmp
sbb
movsb
gs
mov
lahf
mov
cmp
xchg
dec
cmp
lds
notl
leave
imul
dec
ficomps
outsb
std
inc
stc
mov
aad
loope
icebp
jnp
cli
pop
xor
jo
js
fst
iret
cmp
loope
test
adc
test
mov
dec
fstps
dec
bound
testl
or
xchg
bound
xchg
sbb
add
add
test
shrb
int3
mov
mov
mov
dec
xchg
xor
or
in
inc
lcall
mov
sbb
mov
xor
sti
xor
in
xchg
rclb
dec
mov
inc
jg
jns
push
mov
fs
or
mov
icebp
cltd
fisubl
fadds
test
addb
push
or
inc
rol
cltd
ret
pop
mov
push
in
out
cmp
xor
or
ret
repz
xor
imul
mov
fwait
scas
adc
xor
imulb
push
lahf
mov
pop
and
inc
sub
arpl
test
popa
cwtl
cmpsb
pop
cmp
sbb
dec
xor
aad
jl
sahf
adc
and
mov
aad
push
test
dec
xchg
xbegin
leave
jb
ficompl
mov
leave
aam
xchg
and
iret
out
push
pop
aaa
bound
stos
sbb
add
lock
bound
mov
xor
sbb
movsl
js
sbb
mov
outsb
fldcw
repnz
inc
pusha
sub
lea
xor
or
hlt
in
or
aas
jmp
and
pop
mov
inc
jecxz
insl
xchg
rcr
and
push
pop
jns
cwtl
repnz
int
and
fs
fldcw
out
ret
mov
sti
sbb
mov
repnz
loop
cli
ficoms
xor
imul
aad
mov
and
enter
icebp
sbb
cmc
mov
repnz
add
inc
bound
adc
divb
mov
jle
jo
ds
scas
nop
out
xchg
ror
cli
test
pop
xchg
jae,pn
add
dec
cmp
adc
and
sbb
pop
fidivrl
loope
je
cmp
pop
xchg
xchg
push
imul
cmp
add
pop
fs
push
mov
jge
shll
pusha
bound
mov
xchg
int
fs
fisubl
cmp
mov
xor
fcomps
iret
mul
push
pop
adc
mov
pop
push
jecxz
scas
inc
rcll
jo
lods
jmp
sbb
lock
lahf
sbb
sbb
sub
pusha
mov
push
mov
pop
sub
enter
jge
aam
call
inc
and
rol
lods
cs
loopne
cmc
jo
mov
mov
jo
xor
ja
stos
inc
push
jp
cmp
mov
jp
ja
or
incb
test
or
ljmp
xchg
fmulp
xchg
ss
sub
dec
sub
jp
stos
in
push
or
daa
out
or
packsswb
mov
pusha
mov
xchg
icebp
data16
in
fdivrl
xchg
pop
adc
cmc
lcall
mov
in
aaa
sub
xchg
mov
incb
mov
inc
rclb
xchg
mov
push
lahf
jne
scas
lds
pop
icebp
fwait
cmp
lds
hlt
pop
in
mov
sub
cli
lahf
out
xor
imul
lods
add
xchg
aam
push
cmpsb
xchg
add
sbb
mov
lret
push
lret
and
xchg
enter
fldenv
jb
adc
push
mov
add
mov
cmp
xor
iret
rcrb
or
sbb
dec
mov
cmp
add
push
dec
out
jle
jae
xor
adc
mov
xchg
icebp
dec
add
mov
cltd
das
or
mov
sti
cltd
pushf
xlat
lret
sub
aas
sbb
in
arpl
xor
and
mov
xor
mov
dec
push
adc
and
mov
stc
mov
sbb
push
mov
jns
mov
xchg
fnstenv
in
push
add
sbb
inc
imul
out
adc
je
inc
mov
lds
pop
int3
jg
mov
pop
ror
push
push
mov
in
and
push
cmpsl
int3
cmp
or
mov
push
sub
pushf
in
push
mov
cmc
sar
dec
pushf
test
xor
push
pop
lea
jecxz
in
xor
jb
pop
leave
pusha
repz
or
leave
dec
cmp
repz
xchg
repz
loopne
cmpl
loop
rcrb
pop
mov
test
call
jb
movsl
call
std
jo
and
xchg
mov
jno
es
cwtl
mov
rcll
push
movsl
mov
cwtl
out
jo
cmp
cmp
cmc
call
add
sbb
in
out
lock
xchg
inc
adc
scas
or
adc
push
add
inc
sbb
lahf
jmp
in
push
pusha
rorl
push
orb
push
dec
jns
adc
mov
out
sub
push
mov
test
pop
fdivp
inc
lcall
cmp
outsl
in
mov
mov
stos
sub
popa
mov
dec
xchg
call
add
adc
mov
test
or
or
pushf
lock
sbb
out
pushf
in
test
xor
dec
jb
push
sbb
mov
xchg
push
sub
pop
cmp
lods
das
sub
mov
jnp
xchg
imul
mov
lock
cmp
add
lcall
dec
cmpb
nop
lods
cmp
jbe
jp
jne
xchg
scas
cmc
dec
xor
insl
bound
dec
loopne
cmp
outsb
pop
lret
fcomps
sbb
out
shrl
ja
out
lahf
daa
push
test
loopne
lods
dec
pop
test
mov
ljmp
xchg
into
pop
sbb
imul
inc
adc
lcall
cmp
mov
popf
shld
imul
inc
test
push
iret
out
mov
stc
pop
xchg
pop
pop
iret
lods
popa
mov
adc
jmp
jmp
loopne
data16
cmp
lret
fistl
jmp
mov
fwait
mov
nop
lret
push
into
int3
loopne
imulb
les
xchg
outsl
fists
ljmp
jg
lahf
lcall
cld
sub
movsl
jle
mov
std
filds
cltd
out
jnp
loop
icebp
mov
out
xor
out
lods
xor
es
repnz
dec
adc
imul
jmp
jge
loop
movsl
jns
and
and
out
pop
cmpsl
clc
or
inc
xor
cmovo
pop
xchg
jae
aaa
fnsave
mov
mov
jecxz
or
sbb
sahf
inc
inc
rcrl
jl
cmp
fdivl
mov
sub
jbe
je
insb
push
call
fisttps
push
cmp
in
push
stos
xchg
idivb
adc
mov
xor
xchg
mov
pop
rcrl
pop
mov
mov
lods
orl
adc
jl
les
mov
lahf
cli
and
adc
or
mov
jle
cmp
aaa
pop
adc
xchg
mov
push
lods
push
ret
jo
cmpsb
add
or
mov
sub
test
rdpmc
out
cmpsb
jns
jle
fbstp
inc
stc
cmp
jne
js
mov
sbb
lahf
pusha
xchg
gs
push
pusha
mov
dec
jecxz
adc
idiv
shll
xor
lcall
in
cmp
test
jg
push
cmp
and
push
push
and
das
vmwrite
adc
inc
das
dec
lret
pop
arpl
push
push
fadds
cmc
lock
aad
loopne
inc
cs
idiv
push
stos
outsl
pop
mov
adc
leave
scas
or
xchg
fildll
cmp
aad
pop
rcrl
push
mov
push
mov
out
inc
testl
inc
lcall
mov
insb
es
rclb
push
std
daa
adc
mov
push
and
sbb
dec
jl
cmp
xchg
push
mov
push
xchg
sub
mov
sbb
mov
dec
imul
test
out
sbb
test
xchg
adc
cmp
dec
leave
add
cmpsb
push
jnp
or
and
mov
out
xchg
scas
add
sub
rcll
or
pop
xlat
popa
hlt
insl
pop
lods
push
xor
test
jb
mov
test
sub
inc
pop
push
xlat
arpl
pop
mov
mov
mov
dec
popf
shll
mov
fdivp
adc
inc
mov
jb
mov
pop
dec
outsl
movsb
test
fistpl
outsl
je
dec
xor
js
cltd
and
lods
mov
mov
in
sbb
cld
sbb
std
sub
jbe
popa
mov
adc
jb
popa
add
inc
and
es
inc
ss
dec
int3
test
pop
mov
and
in
xchg
jmp
cmpsb
fmulp
pop
mov
dec
and
mov
cmp
movaps
aaa
ds
scas
adc
or
stc
pop
ss
popf
inc
cmp
dec
xchg
int
das
arpl
mov
or
xchg
stos
xor
rorb
push
outsb
push
cltd
imul
mov
add
test
imul
inc
int
loopne
movsl
js
push
xor
out
std
out
scas
hlt
pop
mov
xchg
hlt
pop
pop
les
mov
imul
sub
jne
aad
add
sbb
fdiv
mulb
mov
pop
andb
push
and
aad
mov
mov
jno
sti
xchg
cmp
pusha
mov
subb
add
movsl
rcr
cmp
mov
and
fldenv
gs
sbb
sbb
xchg
cmp
lods
cmp
cld
loopne
add
add
fsubrs
push
out
inc
add
dec
scas
test
shrl
lahf
push
clc
test
ljmp
or
mov
or
inc
leave
stos
pop
pop
jp
inc
and
repnz
rcll
push
cmpsb
xlat
sbb
pop
scas
lock
mov
pop
das
and
test
cmp
sbb
popf
push
rcrl
es
xor
and
clc
aaa
push
pop
jecxz
movsl
or
jbe
or
sarb
fcmovnbe
or
mov
jae
popf
insl
fwait
sub
outsl
mov
mov
inc
jp
xchg
sbb
dec
ss
repz
bound
mov
or
sbb
or
push
mov
dec
jl
pop
ret
jecxz
mov
sub
mov
or
mov
jle
lds
test
adc
popf
cmp
inc
dec
or
mov
cltd
add
and
mov
orl
jecxz
pop
rep
ss
daa
in
jmp
mov
mov
loop
jbe
xchg
mov
pop
out
mov
mov
adc
cmp
or
pop
outsl
stos
sub
pop
inc
cmpb
popf
rcll
adc
jne
dec
mov
cmp
inc
push
or
scas
sbb
sub
fwait
xor
arpl
add
cmp
push
call
dec
mov
out
inc
adc
test
cmpsl
and
lea
pop
push
sbb
lds
push
fdivp
ror
adc
hlt
jb
lds
fldt
sbb
icebp
xor
fbstp
jb
add
jg
xchg
or
test
sub
add
stc
cmp
test
sahf
dec
lods
inc
loopne
jle
cmp
enter
in
push
pop
pusha
sub
fs
xor
sbb
sbb
xchg
aas
ficoml
mov
hlt
mov
arpl
pop
ja
xor
adc
fwait
cmp
movsl
add
mov
ficompl
mov
mov
ja
cmpsl
aaa
mov
imul
mov
fstpt
adc
cmp
pushf
mov
divl
int
sub
sbb
cs
fs
xor
ss
xor
jns
pop
jae
inc
pop
sbb
cld
addl
mov
inc
call
add
and
addr16
insb
scas
sub
dec
imul
cmpsb
scas
cmp
cmpsl
and
es
push
fidivl
jge
jb,pn
jnp
dec
pop
mov
push
sub
mov
in
inc
hlt
xchg
leave
fs
push
cmp
xor
dec
sbb
mov
inc
inc
in
adc
les
push
clc
inc
xchg
stos
scas
sbb
cmp
dec
lods
mov
sub
pusha
lahf
pop
sbb
iret
xchg
lock
bound
negb
sti
mov
xchg
js
adc
loop
dec
pop
popf
mov
shll
xchg
int3
sbb
subb
inc
cmp
out
xchg
mov
sbb
aad
xchg
push
scas
mov
fisttps
jb
push
jae
jo
sahf
lods
or
xor
cwtl
dec
test
dec
xchg
mov
sahf
mov
or
imul
cmp
pop
mov
les
sbb
pop
rcrb
or
je,pn
and
push
or
mov
dec
pop
and
je
fbld
pushf
lods
in
les
mov
imul
push
ss
push
ljmp
lods
rclb
mov
inc
mov
or
push
cmpsb
popa
lret
and
insb
mov
sbb
ficompl
push
push
jb
push
das
push
data16
clc
es
xchg
pop
andb
jl
arpl
add
imul
ds
hlt
pop
fcomps
jecxz
insb
out
xor
out
lahf
mov
test
insb
mov
test
xor
and
jmp
jecxz
mov
pop
push
xor
mov
repz
inc
sbb
xor
hlt
sub
int3
nop
sbbl
inc
es
mov
fwait
and
xor
cmp
push
fildll
pop
add
pop
out
mov
dec
sahf
andl
xor
cmp
sbb
dec
movsb
jl
and
inc
iret
fcoms
scas
jo
filds
mov
je
cltd
out
push
pop
roll
xchg
sub
mov
push
shrb
psrlq
jnp
inc
dec
iret
sbb
popf
iret
add
cmpsl
jmp
inc
mov
mov
in
cmp
stos
xchg
cmp
mov
jne
or
nop
pop
sub
stc
adc
pop
inc
and
call
shl
mov
adc
int
jecxz
sub
lcall
sahf
and
stos
pop
mov
push
jl
mov
dec
adc
mov
adc
sahf
mov
pop
mov
push
dec
js
xor
mov
inc
fldl
ficoml
sub
repnz
mov
fildl
ljmp
jp
jae
add
mov
sub
sbb
rcrb
push
xchg
mov
mov
jle
inc
mov
pop
int
test
add
lret
test
or
arpl
fbstp
xor
inc
mov
jo
pusha
inc
in
fwait
dec
pop
fcmovu
in
imul
movsb
pop
and
pop
sbb
mov
xor
mov
cmp
cli
inc
in
jg
sahf
idivb
call
mov
pop
jae
mov
test
lret
adc
inc
out
push
stos
les
mov
xchg
jg
loope
ljmp
adc
int3
movl
ret
push
add
mov
in
andb
cmpsb
add
scas
rcll
push
mov
add
mov
adc
mov
test
sti
test
lcall
xchg
mov
inc
inc
cli
into
xchg
in
es
or
negb
mov
mov
lea
cmp
and
and
adc
sub
in
frstor
xlat
sub
popa
mov
jle
ljmp
insb
pop
repz
subl
cli
imul
mov
notb
dec
or
rolb
mov
fldcw
push
and
xchg
adc
pop
int3
xor
inc
rorb
imul
dec
fwait
mov
cmpsl
sbb
add
xor
mov
mov
fstpt
repz
sub
lods
mov
pop
stos
sbb
mov
sbb
push
xor
push
into
mov
and
insl
aaa
jmp
push
out
in
std
in
outsb
js
mov
xchg
cwtl
mov
xchg
push
push
jle
std
jl
cmc
addr16
lret
sbb
mov
fisubrl
xchg
cli
ljmp
pop
arpl
rcr
enter
or
movsl
fists
hlt
cmp
jp
xchg
lea
int
adc
xor
icebp
mov
fwait
in
jmp
dec
xchg
hlt
xor
inc
loope
push
es
xorl
rcrb
ljmp
dec
js
adc
int3
scas
clc
pshufw
mov
sub
or
shrl
jne
mov
int
sbb
and
inc
add
repnz
pop
shlb
scas
xchg
or
fs
sbb
dec
insb
mov
stc
dec
sbb
mov
in
test
or
add
jb
testl
into
fnstcw
clc
inc
fucompp
xor
pop
jle
sbb
rolb
push
jno
int3
dec
add
xor
sub
jmp
pop
push
push
in
jbe
mov
xchg
mov
jge
mov
xchg
push
sbb
mov
xorb
movsl
stos
adc
lret
jl
je
mov
mov
mov
mov
cmpsl
sbbl
movsl
push
pop
mov
rcr
and
loop
cwtl
mov
or
iret
loope
jmp
aam
idivb
cmp
adc
fistpl
dec
and
push
lcall
and
inc
pop
rorb
lret
fcmovne
mov
dec
add
cmp
rorb
int3
call
call
push
mov
add
mov
pusha
sub
or
cmp
dec
mulb
stos
xchg
ficoml
ljmp
pop
fs
pop
adc
fisubs
jb
sbb
xchg
sahf
outsb
dec
jo
lahf
imull
xor
dec
adc
movb
popl
movsl
adc
hlt
icebp
stos
and
hlt
mov
dec
sbb
or
loope
pop
sarl
cwtl
ljmp
orb
loope
mov
push
fldcw
cmp
mov
mov
or
outsl
mov
mov
pop
add
sbb
iretw
jmp
mov
stc
stos
mov
and
jmp
imul
push
mov
xchg
add
or
dec
adc
push
imul
sub
imul
lcall
jmp
mov
mov
cmp
xchg
jb
lret
ss
shl
add
inc
in
add
divb
push
xchg
mov
data16
jo
clc
and
loop
push
dec
sub
in
clc
mov
pop
add
mov
push
xchg
insl
hlt
outsb
cmp
in
add
inc
in
inc
mov
push
dec
push
lock
ret
shll
fstpt
outsb
stos
insb
and
imul
xchg
bound
pop
mov
mov
enter
imul
out
dec
and
fnstenv
and
cmpsb
adc
adcl
jbe
test
outsl
nop
cmp
nop
into
inc
aam
mov
ret
sub
sahf
dec
add
fistl
add
push
out
xor
jge
push
pop
pushf
out
fs
xor
call
pop
cmc
lcall
je
ret
jo
cmpsb
adc
xor
push
jge
or
mov
dec
testb
inc
add
or
jmp
sbb
stc
leave
es
or
sub
insb
movsl
or
mov
mov
and
or
xor
fisubs
adc
mov
or
fists
and
push
push
sbb
add
dec
add
movsb
out
sub
bound
sbb
daa
lret
xor
mov
inc
push
scas
pop
jo
jp
rol
into
pushf
repnz
inc
push
jo
or
in
sbb
xchg
pop
push
push
dec
sbb
inc
repz
sub
or
addr16
inc
inc
add
jecxz
cmp
ficoml
andl
adc
out
ljmp
mov
sub
pop
bound
ffree
hlt
shlb
add
xor
sbb
cmp
mov
xchg
adc
pushf
call
sbb
cmpsl
sbb
xor
mov
cmp
jne
sbb
iret
sbb
inc
xor
mov
repz
ret
push
subb
add
mov
xor
call
ja
cs
or
stos
mov
jb
sbb
or
mov
sub
scas
sub
or
push
sub
mov
jo
lret
jle
sarb
or
stc
sbb
jbe
lcall
add
fsts
in
pop
shll
cmpsl
cmc
sub
int3
pop
sbb
jb
push
in
and
xor
jp
int3
out
mov
mov
pop
ss
xor
jge
adc
xorb
xorl
leave
test
das
dec
inc
push
adc
scas
daa
xchg
imul
icebp
xor
inc
lret
out
arpl
pop
inc
cwtl
inc
adc
xchg
out
jmp
repnz
stc
insl
shll
mov
faddl
inc
cmpsl
sarl
jecxz
jle
repnz
push
mov
xchg
jmp
shll
lods
test
call
in
fsubs
add
test
popf
xlat
test
mov
cmp
add
mov
sbb
adc
adc
or
jae
inc
xor
in
sub
jmp
fdivs
flds
jo
ljmp
fbld
inc
movsl
ja
and
fldl
das
cld
fs
or
ret
pushl
jo
push
xchg
fs
fcoms
push
sub
xor
lcall
mov
pop
dec
add
popf
cmp
cmp
xor
pop
pop
push
or
rcll
sbb
or
sbb
sarb
in
sub
lret
sub
pusha
push
push
pusha
jg
sti
std
inc
add
cmc
and
imul
push
or
add
ret
mov
dec
add
popf
adc
lea
imul
xchg
mov
cmpb
jb
in
inc
bound
xlat
mov
loopne
cmp
xorb
mov
fadds
fs
shlb
out
fists
bound
inc
mov
movsb
insb
add
jno
ljmp
pop
inc
sbb
in
scas
dec
jbe
lahf
xlat
jmp
adc
jg
imul
jle
push
adc
ret
mov
ja
jns
popf
sbb
imul
pop
loope
fimull
add
xchg
movsl
push
aad
arpl
adc
fld
or
psubd
xor
les
mov
jns
adc
cltd
xchg
fcmove
sub
fxch
pop
push
outsb
adc
int
inc
adc
je
loopne
popa
sub
and
mov
dec
movsb
scas
cmp
imul
xchg
sub
shrl
jb
shll
add
std
sar
or
jns
pop
repz
mov
push
dec
andb
icebp
imul
xor
xor
jbe
fxtract
pop
mov
pop
inc
mov
add
cmp
sbb
shrl
pop
xor
lret
addl
dec
mov
mov
add
sub
mov
sbb
mov
pop
js
mov
addr16
dec
xchg
sbb
inc
pop
and
add
fimuls
xlat
sbb
out
mov
pop
sbb
pop
divb
jmp
mov
or
into
adc
stc
cmpsb
mov
ds
push
push
lods
aad
lahf
inc
xchg
sub
pusha
mov
pusha
aaa
out
pop
inc
ljmp
add
mov
scas
mov
inc
or
mov
test
dec
pop
add
out
inc
jnp
repz
jecxz
mov
dec
jmp
adc
pop
pop
jmp
and
cmc
jo
mov
sbbl
shll
outsl
data16
pusha
xor
hlt
inc
cmp
mov
fbstp
ss
or
xchg
xor
clc
scas
xchg
loope
xor
pop
fdiv
xchg
cmc
mov
aam
xor
test
jl
cli
mov
inc
enter
cs
mov
or
add
push
cmp
fwait
mov
pop
xchg
xor
push
or
outsb
psrlw
cmp
sub
call
enter
push
mov
sub
push
lret
xchg
ret
cmp
lods
push
je
es
jmp
in
pop
mov
jno
mov
pop
xor
sub
ret
fwait
in
mov
mov
jno
insl
mov
movsl
and
aaa
pop
lret
mov
or
mov
sbb
aad
push
and
or
repnz
mov
test
stos
xchg
inc
shll
mov
push
xor
or
lret
leave
add
cmpsl
movsl
cmc
ret
dec
add
mov
imul
adc
add
gs
fmuls
push
xlat
data16
ljmp
insl
fwait
sub
jbe
inc
out
std
clc
popf
lret
cmp
fcompl
into
inc
das
test
test
push
xor
xchg
jg
xor
and
cmpb
xchg
dec
cltd
xlat
jmp
ret
adc
dec
daa
xor
ja
clc
aaa
ljmp
in
sbb
jne
sbb
leave
mov
jg
aas
sbb
pop
mov
push
cli
mov
imull
aad
cli
xchg
paddq
mov
mov
imul
dec
fst
push
mov
int3
xchg
jle
and
stc
xchg
cwtl
xor
fsubl
xchg
adc
cmp
xchg
push
hlt
xor
xor
push
lods
xchg
cltd
jecxz
jae
lret
rclb
push
cld
repnz
repnz
inc
add
mov
mov
xchg
sti
mov
cs
jmp
pop
sahf
push
adc
xchg
and
daa
push
cmp
aam
jmp
inc
inc
sub
jle
sbb
sub
pop
mov
ss
fistpl
adc
adc
mov
add
fs
xchg
cwtl
jge
repz
addps
push
pop
mov
lea
popf
cmpl
bswap
nop
xor
lahf
out
cmp
leave
mov
cltd
loope
push
stos
hlt
or
jae
or
fwait
fs
es
int3
imul
rcrl
out
pop
iret
aaa
ja
shrb
inc
fcompl
jl
xchg
push
jbe
sbbb
fisubrl
imul
inc
insb
sti
jle
ds
and
push
jae
pop
cmp
pand
or
cmpsb
dec
push
je
decb
push
xor
fucomi
jo,pt
movsl
les
jne
cmpsb
or
rcll
enter
cmp
sbb
add
mov
lds
negb
pop
std
jmp
idiv
outsb
ljmp
xchg
and
shrb
mov
push
push
sbb
jecxz
cmp
sbb
push
sarb
imul
mov
xor
mov
call
shlb
or
iret
outsb
inc
lods
imul
clc
adc
fmull
xor
out
decl
adc
xor
xor
jmp
std
cwtl
xor
insb
es
xchg
cmc
jl
cmc
jb
mov
int3
xchg
xor
scas
inc
or
jno
es
popf
stos
jmp
cmpsl
and
sbb
xor
fsubl
pop
mov
and
popa
push
jg
es
loop
cmc
dec
arpl
cmp
xlat
pop
jno
pop
xor
or
sbb
dec
xchg
or
stos
cltd
mov
fimull
mov
and
jecxz
push
add
sub
jl
add
mov
mov
sbb
mov
add
mov
ficomps
daa
fcomps
adc
cmp
dec
lcall
xchg
inc
hlt
sub
cs
sbb
mov
dec
cmpsl
aas
notl
cltd
fdivs
pop
adc
cmp
out
add
jbe
pop
bound
or
sbb
das
in
je
jns
cmp
jo
fsubp
fldz
jo
sbb
aas
push
call
push
dec
adc
out
sbb
dec
fcomi
sub
scas
lods
sbb
pop
shrl
jo
or
shrl
insl
popf
rolb
pop
rol
cmp
xor
imulb
fwait
adc
clc
push
scas
mov
dec
jge
iret
mov
add
and
adc
xchg
lock
notl
int
inc
add
xchg
sub
inc
jp
add
pop
mov
and
aad
ficomps
add
mov
pop
pop
and
outsl
sahf
fldt
lods
fs
daa
lods
mov
jge
adc
cmpsl
xchg
cs
stos
inc
sub
dec
mov
xchg
or
fxam
movsl
jecxz
lods
fsubrl
enter
add
mov
rcrb
imul
repnz
shl
call
lahf
inc
sbb
or
mov
jp
jp
stc
xchg
rcrb
test
int3
sbb
into
fiadds
xor
lcall
mov
insl
lcall
out
aaa
xchg
mov
mov
mov
pusha
sbbl
inc
and
ret
xchg
sub
push
js
mov
or
orb
cmp
adc
xchg
xor
dec
scas
addl
cmp
jno
or
addb
mov
pop
mov
outsl
cmp
popf
dec
jbe
jne
xchg
or
or
cmp
faddl
xor
push
rcr
inc
cmp
jmp
jnp
dec
jg
push
dec
or
inc
cwtl
icebp
adc
pause
cli
pusha
xchg
pop
push
jno
push
pop
adc
push
xchg
ret
jle
clc
mov
scas
int3
das
lcall
cwtl
stos
es
cld
cltd
lds
fsubrl
push
adc
jl
mov
in
mov
ds
stos
xor
dec
jo
in
insb
ss
and
add
cmp
ds
xchg
add
je
mov
scas
mov
arpl
das
out
pop
negb
dec
insl
orl
mov
push
sbb
mov
ror
lret
int
clc
xchg
jg
sbb
std
lds
testl
outsl
mov
cmp
dec
fnstsw
pop
jg
fmull
jle
lea
data16
xrelease
sbb
and
pop
iret
jns
sub
push
sti
adc
jns
pop
fsubrl
xor
addr16
incb
xor
ret
lods
out
lret
shlb
popa
rcrb
xor
jl
add
imul
jns
out
icebp
pop
popf
fsubl
xchg
clc
adc
inc
pop
lret
mov
in
push
push
inc
mov
fcoms
loope
cwtl
xchg
negb
sub
stos
mov
movsb
test
dec
lods
or
mov
fsubl
or
stc
icebp
imulb
push
inc
scas
pop
mov
adc
leave
test
jge
ret
leave
xor
mov
xor
sub
aam
outsl
sub
cmpsl
or
jae
in
lock
mov
mov
mov
and
sbb
jno
lret
notl
xchg
mov
into
lods
loopne
and
cld
mov
mov
dec
push
hlt
push
ja
mov
adc
sbb
jns
push
cs
xor
mov
xchg
lock
popf
cld
xchg
dec
inc
jmp
into
mov
jecxz
movsl
sbb
inc
cmp
imul
mov
clc
pop
cmpsb
and
dec
shlb
fwait
xlat
push
cmpsb
bound
ret
jmp
sbb
push
ds
lods
or
and
dec
orb
mov
fnsave
add
leave
setge
or
xor
inc
ljmp
movsl
arpl
cmp
sub
jbe
inc
cmp
mov
inc
icebp
lods
sti
mov
xor
movsb
in
movsl
in
mov
pop
lea
das
mov
xchg
js
and
inc
mov
sub
je
dec
ss
cmc
dec
mov
cltd
cmp
divb
fwait
loope
in
out
iret
adc
inc
xor
xor
aas
or
mov
ja
gs
lds
aad
sti
lret
pop
bound
dec
lcall
mov
push
mov
and
lret
mov
cwtl
test
jb
push
inc
dec
notb
inc
push
lea
mov
cmc
pop
add
adcl
psraw
xor
sbb
daa
pop
fcoml
mov
es
xchg
imul
outsl
jno
cmc
ljmp
sbb
aad
hlt
pop
jmp
int3
adc
and
je
aaa
insl
mov
jne
loop
xor
sbb
push
leave
mov
in
fdivr
lret
sarb
pop
aad
jb
jne
std
xchg
xchg
or
mov
mov
lret
into
call
nop
cmp
push
jle
jno
in
aad
xchg
nop
mov
call
sub
jmp
outsb
xor
pop
jp
cltd
cmp
jg
stos
mov
fsubrp
pop
jno
pop
repnz
mov
sub
mov
test
or
push
aad
xchg
or
adc
push
lcall
and
xchg
cltd
jecxz
das
sarl
cmp
ror
adc
mov
mov
scas
hlt
adc
in
cmp
fnstenv
rorb
push
sbb
jnp
mov
int3
sbb
test
push
mov
mov
push
xor
test
mov
xor
mov
cmpsb
add
cmp
enter
aam
or
add
xor
dec
insb
fdivl
imul
sbb
dec
dec
or
out
jbe
pop
pop
test
mov
stos
mov
mov
gs
jmp
jo
loope
les
rcll
mov
rcll
popf
xor
js
jo
jno
xchg
aam
nop
test
pop
ljmp
jno
jg
push
loope
jne
ljmp
aas
cmp
and
push
idivb
outsl
inc
out
clc
imul
push
int3
mov
sub
jae
mov
mov
adc
sub
aaa
mov
jmp
jl
jno
inc
inc
xor
xlat
inc
mov
dec
dec
movsb
pop
pop
cmpl
dec
xor
or
adc
into
dec
rclb
rcrl
and
push
mov
fprem1
dec
xor
cmc
push
and
or
mov
faddl
and
icebp
iret
maskmovq
idivl
mov
ret
mov
aad
scas
daa
mov
adc
repnz
pop
out
pop
lcall
test
subb
mov
int3
inc
lret
and
and
sub
stos
sub
testl
mov
inc
push
sub
sub
mov
mov
pusha
add
movsl
push
and
xchg
mov
arpl
mov
mov
inc
in
daa
add
jo
iret
jmp
push
cmpsb
adc
add
dec
imul
dec
adc
xor
movsb
mov
imull
out
jmp
js
divb
xor
adc
and
repnz
fsqrt
fwait
cmp
jge
fucom
fsubrs
leave
jae
or
cmpsl
in
shll
dec
bound
insl
outsl
movsb
xchg
inc
dec
lcall
movsb
and
sub
or
push
rcrb
jo
adc
pop
mov
aam
es
dec
in
mov
sti
or
repnz
loop
out
jl
nop
rcl
movsl
cli
lods
cmp
in
xchg
enter
push
pop
hlt
jmp
add
jno
cmpb
xchg
call
aam
sbb
cmpsb
sbb
stos
cmp
xchg
ja
xorl
sub
imul
or
pop
push
icebp
adc
dec
gs
sub
je
and
pop
sub
into
adc
adc
dec
mov
adc
repnz
pushw
nop
lock
pop
inc
movsb
or
pop
mov
or
pop
xchg
int3
inc
inc
sbb
xor
add
add
icebp
stos
xor
clc
and
inc
ffree
popa
push
jns
adc
mov
jbe
inc
loop
jl
cltd
pop
sub
sbb
mov
sub
mov
inc
push
cmpsl
ret
scas
xchg
mov
call
mov
in
mov
add
dec
jae
in
inc
jo
movsb
pop
int3
imul
movsl
jle
lret
repnz
ljmp
out
jno
xchg
adc
lds
pop
dec
jecxz
cmp
lahf
xor
xchg
xchg
xlat
insb
cwtl
int3
lcall
in
or
cmp
in
lods
sbb
sbb
jns
or
and
mov
pop
insl
cli
mov
shll
and
xchg
and
mov
mov
mov
fisubrl
js
int
jp
push
and
mov
push
pusha
dec
jo
push
inc
mov
outsl
leave
sub
inc
jg
xchg
dec
and
xor
jmp
imul
sub
inc
data16
add
loop
xor
mov
icebp
loope
mov
stc
adc
add
int
sbb
or
pop
push
out
xchg
jb
mov
dec
aad
pop
ret
ds
lock
sarl
nop
lods
dec
and
adc
or
lret
pop
jb
lret
and
add
ss
aam
push
mov
mov
push
js
push
les
push
push
imul
sub
push
cmpsl
aaa
mov
or
mov
adc
add
cli
outsl
xor
cmpsb
mov
rorl
mov
push
xchg
lret
push
sbb
cmp
sbb
lods
jmp
mov
and
push
or
pop
add
into
pusha
xchg
cwtl
push
rorl
mov
and
xor
mov
leave
lds
lock
inc
pop
loope
in
jbe
imul
adc
mov
ljmp
movsl
pop
dec
xchg
add
rcll
test
xor
subl
out
mov
inc
push
pusha
adc
out
mov
imul
enter
pop
negb
jo
mov
sbb
mov
lods
push
sub
ja
sub
mov
int
loopne
or
add
push
or
ss
adc
gs
aam
stc
scas
lock
lock
sub
sub
stos
add
push
in
inc
imul
pusha
mov
pushl
mov
mov
inc
roll
mov
mov
jmp
jl
or
scas
sbb
mov
pop
mov
stc
lcall
out
add
addr16
or
lds
lock
gs
out
or
ficoms
push
dec
and
imul
repz
push
test
or
sarb
jb
lret
pop
fs
sti
inc
adc
inc
cmc
mov
cmpsl
sbb
inc
gs
je
enter
fs
arpl
push
adc
mov
sub
and
stc
cltd
inc
nop
jmp
mov
repnz
sahf
xchg
inc
enter
xchg
in
daa
lcall
push
test
in
mov
xchg
ljmp
push
cmpsb
bndstx
cmpsl
test
or
sbb
xchg
sub
push
mov
les
mov
sbb
rorl
test
jl
fidivl
mov
mov
nop
push
and
mov
std
lahf
xchg
sub
mov
cld
pop
inc
push
pop
mov
jp
dec
insb
xor
in
or
xchg
mov
out
cmp
shll
mov
call
jno
push
ljmp
jae
xchg
stos
pop
in
dec
icebp
pusha
imul
subl
or
mov
xlat
inc
adcb
repz
pop
inc
test
dec
or
pop
adc
xor
dec
sbb
int3
push
outsl
pop
xchg
rorb
movsl
inc
clc
out
hlt
stos
shl
xchg
mov
mov
mov
jae
xor
in
cmp
jecxz
pop
ja
inc
cmp
push
pop
stc
out
xchg
jne
mov
cmp
subl
jnp
lahf
je
or
push
add
test
add
sbb
int3
xchg
dec
adc
xchg
jle
push
push
dec
mov
sub
insb
sbb
ret
jl
adc
gs
inc
lods
push
fs
into
push
add
out
test
mov
mov
mov
cmp
mov
in
repz
mov
in
or
sbb
jl
adc
mov
inc
push
rclb
xchg
adc
cmpsb
and
scas
cmc
iret
pop
push
cmc
ret
sbb
inc
mov
pop
inc
jbe
dec
sbb
rorl
in
movsl
cs
enter
ds
inc
icebp
xor
mov
inc
iret
xchg
or
push
jge
shll
enter
pop
call
test
scas
mov
inc
in
xchg
jne
jbe
loop
mov
imul
sti
sbb
inc
xor
aas
xor
nop
repnz
cmc
adc
mov
add
mov
xchg
adc
mov
mov
mov
push
test
add
mov
addr16
dec
push
pop
jno
push
pushf
leave
mov
int
aad
and
xor
mov
fidivrs
sti
adc
adc
and
pop
and
xor
jne
pop
sub
mov
insl
dec
loopne
and
aam
pop
pop
fsubrl
add
jmp
add
push
hlt
cmp
sbb
fidivrs
cmp
dec
mov
sbb
xchg
mov
jns
add
dec
jne
sbb
pop
xor
xchg
bound
cmpsl
fists
add
mov
das
xor
cmp
jbe
jo
aam
mov
cli
pusha
inc
sub
ret
arpl
and
mov
adc
mov
lcall
fsubp
cltd
dec
dec
jns
mov
out
jge
test
xlat
xor
pop
pop
in
pop
sti
sbb
jl
loope
shlb
or
jbe
in
pop
lock
mov
test
jne
cli
jl
hlt
shl
pop
dec
aaa
loope
xchg
xlat
mov
shl
and
sub
pushf
data16
pop
jmp
cmpsb
jb
outsl
jecxz
inc
jecxz
repz
dec
jo
xchg
jg
inc
lods
dec
mov
lock
incl
stos
dec
mov
ja
gs
jecxz
jmp
popf
test
testl
jo
and
and
xor
mov
inc
mov
push
mov
gs
bound
stos
inc
jmp
pop
pop
mov
or
aaa
clc
cmc
dec
inc
dec
pop
pop
or
mov
xor
outsl
fistps
xchg
sbb
inc
jl
les
into
jbe
mov
dec
into
stc
xor
or
mov
jne
xor
cld
xor
sbb
cmp
xorl
nop
movsl
inc
mov
jns
repz
mov
icebp
jns
scas
sub
les
jo
sbb
dec
scas
push
dec
cmpl
xchg
xchg
stc
fsubs
ja
int3
pop
mov
mov
dec
or
sub
and
or
ss
test
push
dec
adcb
outsb
subb
lret
push
push
movb
std
mov
mov
cmp
aas
jns
cmp
into
sti
mov
inc
pop
jb
fwait
sarb
jno
pop
out
bound
adc
arpl
pushf
movsb
test
jne
lea
xlat
test
mov
je
adc
mov
mov
and
sub
in
scas
mov
sub
and
push
cmp
movsb
movsl
lds
sub
mov
mov
and
or
lods
push
cmp
jecxz
mov
jl
mov
dec
out
js
pusha
fcomi
or
stc
sbb
cltd
inc
fbld
rorb
xor
mov
outsl
test
outsl
xchg
aam
mov
lods
mov
cltd
mov
xlat
mov
mov
fwait
mov
push
inc
ffreep
mov
aad
mov
fs
stos
or
sub
je
mov
mov
and
adc
add
mov
pop
inc
push
js
xchg
push
aam
fdivs
add
movsb
shrl
outsl
xchg
in
mov
rorl
cmc
push
cmp
mov
mov
enter
cli
rcl
fdivr
add
data16
leave
mov
pop
adc
cmc
adc
mov
mov
push
xchg
jb
addl
dec
cmp
in
pop
lret
out
lcall
fcoms
nop
loope
push
jl
dec
fwait
push
mov
add
or
mov
sbb
and
cli
mov
outsl
pop
ss
xchg
push
fiaddl
in
fadds
mov
dec
call
incb
lcall
and
adc
ja
movb
mov
int
pop
out
inc
enter
pop
mov
mov
xchg
out
popa
sbb
mov
pop
pusha
mov
pop
enter
imul
out
xchg
ret
ds
adc
jbe
add
jb
pop
cwtl
fcmovb
jmp
xor
sbb
test
hlt
ss
push
pop
lcall
das
xor
mov
xor
jnp
ret
push
mov
dec
xchg
addr16
lret
push
sarb
outsl
mov
cwtl
sub
push
mov
add
add
std
lcall
sbb
cmp
sbb
xor
cmp
pop
pop
testl
xchg
jnp
filds
cmpl
pop
test
repz
push
jno
cmpl
pop
mov
aad
fistpl
lods
out
pop
ret
faddl
es
xchg
mov
add
fucom
sbb
out
ss
add
mov
mov
shll
dec
aam
es
mov
jmp
inc
into
sub
insb
xchg
icebp
adc
add
lahf
sbb
fwait
ret
pop
cmp
sbb
pop
inc
mov
pusha
js
mov
negl
data16
or
out
xchg
test
pop
addl
test
test
repz
outsl
mov
out
or
imul
sub
pop
xchg
push
sub
xchg
pushf
jo
aam
push
mov
xorl
jge
ret
inc
dec
lods
mul
push
cmp
stos
out
sbb
mov
add
cmpb
or
bound
sub
fcoms
sub
add
adc
xor
adc
or
pop
scas
or
fwait
ljmp
push
cmpsl
lock
mov
and
sbb
mov
jo
lcall
inc
cmp
shrb
sbb
xor
rcr
mov
mov
add
shrb
mov
dec
pop
aad
mov
or
pop
inc
cmpsb
popf
mov
push
ja
add
add
sti
imul
or
cmp
adc
ret
xlat
test
cli
push
inc
dec
arpl
push
adc
lock
ljmp
mov
jge
fiadds
sub
fsubrs
stc
adc
or
inc
add
push
std
ljmp
add
cmpsb
repz
mov
idivb
test
ds
shrl
add
mov
mov
mov
lods
adc
rol
sub
mov
fdivr
enter
jno
push
or
cmp
sahf
mov
dec
pop
call
cmp
jl
roll
sbb
sub
mov
daa
lret
or
mull
clc
ds
jno
xlat
test
movsl
mov
jge
push
lock
out
and
jg
ret
pop
cmp
sub
pop
mov
out
push
icebp
mov
xor
mov
iret
lods
mov
inc
lahf
aaa
popa
xor
shll
sbb
movsl
push
aas
call
fsubrs
lods
mov
iret
xchg
lcall
jl
mov
pushf
push
cld
pop
ja
das
xlat
inc
bound
dec
aam
mov
subl
xor
arpl
loope
sub
aaa
imul
cwtl
jmp
jnp
push
cmp
sbb
int
cld
nop
lret
pop
icebp
sbb
repnz
fucomp
sbb
pusha
and
sub
call
jo
pop
mov
testl
push
or
clc
hlt
mov
inc
enter
adc
bound
insb
push
loope
rcrl
mov
push
jno
scas
pop
push
push
insl
andl
cmp
sub
lret
pop
int
hlt
sub
sbb
sub
pusha
cli
cmp
incl
mov
sbbb
adc
jb
dec
imul
or
fidivl
js
ret
push
shlb
add
ss
mov
test
and
jbe
outsl
lret
stos
xchg
mov
popa
inc
add
xchg
jnp
xor
mov
lret
jb
pop
insl
add
fiaddl
inc
inc
scas
adc
inc
push
pop
jo
dec
cmp
jo
imul
out
adc
push
movl
xchg
fwait
mov
ja
cmp
mov
imul
addl
mov
sti
shrb
sub
add
mov
adc
fs
cwtl
dec
fsub
pop
popl
movsl
negl
fmull
inc
mov
sahf
jmp
pop
or
imul
and
cmpsl
aad
cmp
sarb
int3
in
mov
add
scas
xchg
mov
jmp
js
jge
aaa
mov
addr16
jp
iret
sti
lds
lret
push
push
pop
mov
outsb
enter
mov
dec
sub
add
out
lods
aas
and
pop
sub
cmc
xchg
add
dec
cmp
cmp
jbe
and
add
cltd
das
xor
nop
add
movsb
ret
lea
fbstp
mov
addr16
and
ja
jne
lock
les
ljmp
adc
dec
jle
jno
movsb
stos
mov
push
imul
sub
stos
enter
cltd
push
xchg
mov
jp
dec
and
mov
das
and
dec
adc
aam
enter
repz
addr16
mov
popf
mov
movsb
mov
xor
sub
mov
in
inc
jge
aaa
xchg
jp
movsb
adc
stc
pop
aas
leave
mov
mov
jb
adc
repnz
dec
or
dec
cltd
pusha
pusha
shrl
les
andl
lods
xchg
sti
arpl
into
pop
add
fwait
sti
cmp
imul
jnp
stos
sub
fistpll
popf
cld
mov
iret
pop
fdivrs
cmp
out
push
loop
bound
jle
andb
push
inc
pushf
xor
jb
sbb
push
out
pop
jle
sbb
rol
nop
decb
inc
fdivl
dec
xchg
iret
shrb
daa
test
std
les
daa
or
push
pop
add
push
int
jo
testb
ds
dec
sbb
es
xor
mov
push
jb
popf
lahf
cmp
lret
in
and
cwtl
mov
lret
xor
cmp
or
ss
mov
pusha
pop
inc
imul
xchg
add
aas
cmpsb
or
fnstsw
out
js
scas
cmpsb
pop
xchg
aad
xor
fcomi
stos
clc
or
scas
sbb
or
push
mov
mov
aam
bound
xchg
movsb
xlat
or
jb
mov
testl
stos
push
xchg
push
gs
and
push
iret
jg
xchg
insb
mov
lret
mov
mov
out
adc
das
push
or
inc
ss
in
dec
out
jmp
and
or
jp
jmp
or
in
mov
add
das
dec
repnz
into
push
dec
cmp
outsb
adc
and
sti
fdivs
in
inc
or
sbb
push
dec
push
add
sarb
cmpsb
inc
mov
mov
dec
xlat
dec
mov
bound
push
mov
test
ds
push
sarb
add
lahf
pop
add
add
sub
mov
scas
cmp
dec
cli
inc
cltd
xchg
incl
inc
insl
popa
pop
xchg
cmp
xchg
decb
imul
insl
ret
in
hlt
and
mov
xor
lahf
hlt
shrb
scas
mov
out
fs
jg
insl
inc
adc
sub
gs
push
js
inc
enter
ljmp
stc
lea
xor
xchg
push
cmp
dec
sub
add
jg
arpl
js
or
dec
pop
sbb
sub
inc
mov
sbbl
pop
sub
leave
std
outsb
and
fucom
mov
mov
enter
mov
push
int3
or
sti
cmp
dec
xchg
inc
mov
mov
jmp
and
insl
test
popf
inc
xor
cmpsl
cmc
dec
int
dec
repnz
rclb
andl
and
push
lea
adc
xchg
cmp
inc
push
adc
mov
insl
push
movsl
push
adc
pop
clc
xchg
out
xlat
loopne
les
sub
pop
cmp
je
aas
ja
subl
sub
mov
stos
sti
cli
xchg
adc
sub
addr16
jne
mov
scas
je
popa
ljmp
popf
leave
add
imull
inc
add
stos
mov
push
repz
test
lds
mov
cmp
xor
fcmovnu
pusha
jb
xor
dec
loope
dec
in
and
xchg
notl
std
roll
popa
xchg
fisttpll
inc
mov
aad
jl
pop
iret
mov
add
dec
scas
sub
mov
pop
cs
xlat
pusha
xor
cld
aaa
pop
in
dec
out
inc
jb
jmp
sub
jb
or
mov
ja
fsubr
mov
pop
out
lcall
adcl
jmp
add
jle
inc
adc
cmc
mov
xchg
push
push
mov
int
or
jne
pop
lret
fiaddl
ret
ljmp
or
repnz
outsb
bound
movsl
andps
push
mov
sub
adc
lcall
stc
mov
outsl
lret
inc
adc
sub
xchg
out
add
icebp
xchg
repnz
mov
xchg
mov
shlb
stos
pop
adc
mov
xor
mov
cmp
fisubrs
adc
in
and
cmpsl
lahf
call
xor
dec
fstpt
loop
mov
push
cwtl
mov
scas
insl
out
dec
fistl
pusha
loope
std
sub
mov
adc
fs
scas
adc
bnd
std
in
in
data16
loopne
jb
sub
aad
jp
inc
loop
into
or
out
adc
dec
cmp
nop
test
sbb
idivl
cmp
xchg
add
or
das
jecxz
faddp
arpl
pop
test
xchg
push
mov
lds
jo
inc
push
push
pop
jecxz
xchg
push
test
cmp
lret
dec
adc
ret
push
cmpsb
cwtl
rolb
insl
push
pushf
pop
negl
sbb
mov
arpl
ja
xchg
test
sub
ret
sbb
xchg
loope
lock
pop
pop
push
jnp
sbb
push
sahf
adcl
dec
xor
iret
lock
inc
jle
xchg
movl
xor
cmp
fstpt
cmp
inc
orb
movsl
adc
push
xlat
outsb
inc
scas
and
orb
push
mov
jns
sbb
cmc
int
inc
mov
mov
dec
fidivrs
or
dec
aad
out
scas
pop
mov
popf
push
int3
dec
xor
mov
pop
aas
adc
repnz
cmpsl
lock
pop
pushf
cmpsb
xor
lret
dec
imul
adc
push
mov
iret
fadds
ljmp
fs
mov
mov
jbe
xchg
imul
cmp
xor
imul
adc
std
fsts
xchg
mov
clc
xchg
dec
cmp
enter
aad
sbb
add
mov
stos
inc
fldenv
lods
xor
adc
popf
xor
scas
call
test
sarb
jne
int3
and
mov
iret
jp
js
xchg
pop
aam
mov
adcl
sbb
es
scas
adc
dec
mov
hlt
xlat
push
xchg
testb
pushf
xchg
xlat
loop
and
imul
lret
adc
add
push
lds
dec
xchg
repnz
in
stos
dec
test
stos
rorb
or
jp
ja
cwtl
popf
imul
jns
mov
push
and
fidivl
cmpsb
sub
jnp,pt
fwait
inc
gs
adc
pop
aaa
mov
pop
leave
out
push
repz
lock
jp
fs
lods
sti
cmp
push
push
sti
leave
cmpsl
ret
push
sub
sbb
daa
mov
dec
shll
test
and
out
pop
fwait
push
cmp
js
and
jnp
sar
adc
iret
or
inc
ret
adc
push
pop
push
ret
sub
dec
ljmp
sti
adc
mov
mov
and
orb
dec
int
xor
xchg
call
push
mov
fisubrl
xor
pop
add
fmull
es
push
adc
and
fcmovb
aas
out
jno
aad
or
adc
les
jecxz
call
sub
mov
pusha
pop
cs
aas
pop
dec
mov
mov
inc
fs
imul
pop
cmp
sbb
mov
xor
cmp
sub
gs
mov
dec
cmp
mov
and
sub
adc
add
sbb
mov
pusha
sbb
loop
ret
mov
push
js
pop
push
mov
xlat
cmpsb
mov
repnz
mov
fimull
add
push
adc
movsl
push
mov
rolb
insl
adcl
scas
mov
lret
cli
mov
fnstenv
jae
mov
mov
dec
outsb
sahf
mov
dec
push
add
repnz
loopnew
dec
xor
aas
mov
subb
mov
push
inc
stos
sub
xchg
cmp
addr16
sbb
add
jo
cwtl
jbe
imul
pop
jg
inc
cmp
arpl
sbb
lock
mov
sub
jecxz
nop
dec
les
ljmp
hlt
out
xchg
dec
repz
mov
pop
push
std
leave
int
popa
lcall
lret
lock
out
push
aad
out
lahf
jmp
in
in
imul
pop
mov
xchg
cs
mov
loop
jle
xor
repnz
cwtl
or
xor
in
lcall
inc
jge
push
lock
push
sub
mov
clc
add
mov
mov
pop
push
lods
pop
add
dec
mov
sub
test
jle
pop
out
pop
mov
inc
add
jle
fucom
cmc
xor
pop
xlat
loopne
repz
into
popf
sub
out
insl
mov
ss
leave
lcall
push
mov
lret
sbb
mov
add
and
cmp
inc
movsb
out
fnstcw
adc
dec
into
add
mov
into
insb
fucomip
bound
push
push
sbb
cmp
aas
sub
dec
xlat
pop
cwtl
fcoml
inc
ficoms
insl
mov
outsb
xchg
xchg
push
xor
insl
lods
push
and
inc
leave
sub
pop
sarl
cmpsb
jnp
ss
bound
push
mov
sub
stos
pop
push
mov
jbe
or
and
adc
xchg
adc
push
push
xchg
and
push
mov
sbb
pop
mov
lods
and
mov
clc
mov
sbb
lahf
mov
dec
lods
cmp
pop
mov
or
jne
mov
lods
inc
mov
sub
repnz
xchg
add
push
add
mov
fsubrs
jmp
push
mov
flds
in
out
mov
and
sarl
mov
sub
mov
pusha
jecxz
adc
xchg
jmp
arpl
xor
jb
push
xorl
jnp
cmp
inc
jg
lret
fimull
sbb
jge
stos
mov
stos
out
dec
les
into
icebp
and
mov
outsb
cmpsl
add
mov
xor
fs
arpl
cmp
pop
les
or
das
sub
loopne
cltd
pop
adc
aaa
fadd
sarb
jno
sbb
cmp
lods
pop
and
cs
popa
dec
test
mov
pop
xchg
loop
jmp
adc
mov
sti
pop
into
or
ret
push
mov
call
xchg
sub
adc
lea
fs
jmp
inc
mov
push
js
das
in
xchg
push
mov
dec
test
pop
movb
ss
test
mov
jge
mov
push
loopne
ret
loopne
jne
push
lds
fcmove
fiaddl
cmpsb
repz
pushf
mov
fmulp
jno
fwait
mov
fidivs
aam
xchg
xor
xor
push
loop
outsl
mov
sub
hlt
and
and
pop
sarl
dec
xchg
cld
stos
pop
jg
ret
pusha
xchg
mov
aad
bound
out
sub
push
adc
push
iret
mov
pop
pop
cmp
clc
sbb
jne
pop
int
jne
addr16
inc
scas
test
mov
adc
in
fsub
scas
movsl
mov
pop
cmp
adc
mov
sbb
adc
dec
sub
movsb
fstps
add
xchg
push
mov
xor
cwtl
pop
sbb
std
scas
out
xchg
out
and
fnstcw
popf
out
and
gs
mov
cmp
add
lcall
imull
adc
sbb
mov
pushf
mov
jmp
lahf
ret
add
out
xor
call
out
jne
pop
jecxz
popf
mov
xchg
cmp
dec
lods
mov
mov
and
cmpsl
mov
aad
movsl
pop
inc
jecxz
and
jo
jns
xchg
or
inc
dec
push
xchg
mov
leave
xor
inc
mov
imul
sbb
cmp
scas
or
aas
jle
jmp
inc
fists
adc
mov
insl
jge
iret
dec
mov
push
enter
sbb
or
sbb
or
pop
pop
lcall
leave
adcl
dec
rcr
into
mov
xor
and
dec
movsl
push
bound
push
je
pop
cmpsb
and
nop
push
pop
jbe
jo
fisttpl
cmp
pop
loopne
pop
mov
movsb
test
mov
or
push
out
sahf
mov
or
iret
data16
adc
test
or
movsb
mov
mov
aam
loop
jl
fsts
push
lock
or
fcoml
test
out
cmpsl
xchg
mov
stc
pop
int3
add
mov
shrb
les
mov
jmp
insb
xor
and
mov
lods
mov
ret
xor
shlb
or
add
mov
mov
pusha
push
xlat
in
xor
jnp
inc
or
mov
inc
rorl
test
repz
outsl
cltd
xchg
inc
sub
fadd
xor
jl
out
mov
rol
scas
jbe
push
mov
mov
mov
ss
mov
in
shrl
jo
movsl
mov
add
ret
jbe
xor
pushf
or
outsb
fcmovnb
cmp
add
and
addr16
outsl
enter
rclb
cmp
insl
xchg
mov
rorl
xchg
xor
lcall
repz
jmp
idiv
ret
loope
xcrypt-cbc
cmpsl
push
popa
sub
pop
sbb
push
pop
pusha
and
les
inc
das
std
inc
sbb
cli
or
lret
es
mov
adc
mov
mov
scas
daa
inc
sub
aas
mov
frstor
roll
loope
mov
fcompl
xchg
pushf
push
inc
arpl
ret
and
adc
fdivrs
in
mov
repnz
pop
cwtl
cld
call
loope
mov
cmp
pop
shrb
aas
popf
fiadds
test
pop
push
divl
add
xchg
mov
jnp
rorl
mov
push
or
adc
scas
pushf
mov
xchg
xchg
stos
jne
adc
sbb
fcmovne
jmp
and
cmp
mov
popf
aam
movsl
adc
ret
in
and
jbe
mov
test
daa
jae
jae
jecxz
shll
push
ljmp
lcallw
sbb
xor
adc
movd
incb
movl
lods
mov
pop
mov
sti
mov
icebp
lods
scas
mov
jno
lret
xor
setno
js
push
movsl
leave
gs
fstpt
loop
call
das
or
mov
xchg
push
aad
add
sbb
jl
mov
movsl
adc
cmp
jmp
xchg
fldl
add
jge
int3
jbe
pusha
test
fidivrs
incl
cmpsl
sahf
aam
stos
les
sbb
xchg
mov
adc
into
out
outsb
xor
lret
sbbl
rcr
imul
mov
jl
inc
fisubl
int
xchg
xor
cwtl
or
hlt
sub
sub
pop
mov
or
mov
fsubrl
xchg
dec
rolb
insl
jnp
icebp
int
in
insl
out
mov
add
xchg
xchg
sar
or
add
lds
insl
sub
sarb
fs
cmp
mov
sub
or
ror
in
mov
fldt
std
mov
push
cmp
mov
pop
test
pop
insl
sbb
mov
mov
jns,pn
lods
mov
xor
cmp
xor
lret
adc
ror
and
scas
push
gs
or
subb
jp
ja
jmp
aam
iret
inc
movsl
das
lcall
out
sbb
das
cmp
int3
dec
js
sbb
xlat
mov
or
mov
adcb
push
sahf
adc
push
ss
mov
aam
add
pop
sub
xor
push
loopne
and
loope
add
cltd
call
xchg
ja
add
pop
sub
add
push
adc
pushf
lds
cwtl
dec
adc
pop
outsl
sub
push
sub
xlat
adcb
pop
mov
push
ret
xchg
mov
fisubl
movsb
xchg
ds
dec
movsl
pop
fwait
push
addr16
imul
in
pop
loope
lahf
cmc
mov
ds
test
unpcklps
subl
jb
sbb
fwait
es
nop
aas
dec
cmp
imul
fcmove
push
sbb
jmp
mov
popa
leave
pop
cmp
aad
cmp
popf
push
adcl
jns
jmp
xor
mov
cltd
es
fcomps
jno
add
push
cmp
rorb
int3
cli
add
sub
scas
pop
mov
test
dec
jp,pn
jmp
inc
lods
data16
shl
clc
lret
enter
ficoml
cld
ds
push
inc
cld
cld
mov
mov
icebp
mov
mov
or
mov
lds
loopne
xchg
sub
fidivrs
mov
xchg
mov
push
lods
adc
cli
lret
inc
push
lcall
add
mov
scas
cmp
jge
lea
xchg
cmp
sti
stos
movaps
jecxz
adc
sahf
mov
cmp
cmpsb
call
xor
or
push
mov
in
int3
enter
ss
push
sub
enter
pop
sub
add
mov
xchg
je
mov
jp
mov
jp
and
cmp
xchg
jo
jl
sti
jnp
cld
jge
adc
push
add
test
outsl
jo
shl
aad
shlb
xlat
outsl
mov
gs
xor
sbb
jmp
movsb
idivl
pop
test
xchg
sbb
sbb
mov
insb
in
pop
test
or
imul
dec
dec
insl
addr16
movsb
mov
das
es
test
sbb
inc
pop
aad
outsl
cltd
fwait
clc
dec
fs
repz
mov
and
in
cmp
adc
inc
sub
vmwrite
aam
test
les
pop
frstor
inc
std
insb
fsubrs
int
xchg
mov
cli
roll
repnz
into
outsb
mov
sub
sbb
les
dec
sarl
xor
sub
fldenv
jmp
out
in
mov
cmp
inc
or
fiadds
lret
xchg
faddl
sahf
lods
add
pushf
dec
sbb
add
gs
xor
pop
movsl
mov
mov
bound
cwtl
sub
out
sarl
sub
mov
stos
jmp
jne
cli
xchg
mov
mov
out
mov
ljmp
js
cltd
lcall
push
out
sbb
xchg
icebp
push
mov
sub
ljmp
in
sahf
std
adc
insb
loop
cmp
push
push
dec
mov
add
js
repnz
jecxz
push
pop
push
int3
push
inc
movsl
rcrb
movsl
inc
ja
xchg
xchg
jmp
mov
cmc
pop
flds
fsub
popl
cmp
add
sti
xor
sub
sti
mov
mov
shlb
aaa
arpl
out
add
sub
dec
lds
cmp
filds
es
lcall
pushf
loopne
jbe
and
mov
icebp
in
shr
scas
outsb
sub
cmc
adc
pop
inc
jg
mov
jno
sbb
les
mov
movsl
fwait
jo
or
jg
dec
jnp
rcrl
cmpsb
js
and
or
inc
push
or
das
loop
pop
divl
dec
xchg
fcoml
push
loope
pop
push
js
push
adc
cmc
push
xchg
lahf
arpl
push
pop
jno
out
icebp
jecxz
mov
cmpsb
jo
and
mov
inc
shl
dec
push
mov
mov
fwait
or
pop
repz
mov
cmpsl
mov
sbb
es
cld
sub
aas
hlt
in
push
aaa
int3
mov
rolb
loope
inc
mov
push
stc
cli
jnp
dec
xor
push
lcall
sti
sub
test
ja
test
pop
sbb
adc
ss
pop
xor
jo
mov
jns
inc
daa
orb
adc
stos
jmp
sahf
aam
ds
jle
stc
shrb
rol
test
lahf
cwtl
jo
insb
out
mov
lods
sub
es
or
xchg
imul
insb
xor
jnp,pt
outsb
mov
fistl
xchg
jnp
aaa
xchg
aad
call
inc
call
sbbl
insb
ret
cs
dec
or
test
jecxz
insb
and
imul
fwait
ror
ja
rcr
mov
pop
pop
sbb
cmpsb
test
subb
mov
out
xchg
dec
or
loope
sbb
es
arpl
adc
movsb
pushf
dec
add
xchg
cmp
faddp
adc
sub
inc
mov
xor
xor
mov
xchg
sbb
not
push
outsb
mov
fsubr
push
sub
ret
jl
xchg
jle
mov
sbb
or
push
movsl
dec
lret
and
inc
divl
fstpl
in
jp
xorl
mov
lods
lcall
push
mov
mov
xorl
cld
push
push
aam
cmp
sub
xchg
mov
in
mov
fadds
cmpl
test
add
bound
rcrl
cmpsl
test
cmp
jb
dec
pop
inc
add
lahf
out
pop
xchg
or
mov
jnp
je
inc
and
inc
mov
fidivrs
cld
orl
ja
cmpsl
aas
xor
test
jg
sub
imul
scas
xor
in
out
add
push
xor
data16
mov
cmp
rcrl
dec
ds
mov
dec
cld
movsl
jno
sbb
push
test
cli
add
data16
notb
les
lcall
ss
aaa
sahf
mov
jae,pt
mov
xchg
jmp
test
cld
add
adc
std
popa
inc
pop
jae
std
call
stc
and
sarb
xlat
mov
and
push
jl
fwait
mov
cmp
les
inc
xchg
outsl
cwtl
jl
pop
movb
lret
fs
mov
xor
pop
add
and
outsl
and
addb
jle
mov
or
mov
jmp
outsl
in
or
jne,pn
push
dec
mov
cwtl
mov
sbb
jp
ret
mov
inc
xchg
lret
mov
divl
nop
cmpsl
ljmp
je
fsts
and
xor
arpl
sub
mov
push
mov
push
add
jo
sbb
push
fisubrl
cld
jns
fisttps
dec
clc
xchg
scas
cmpsl
jle
ja
lock
mov
inc
and
sti
push
lea
fstpt
sub
popf
cmp
test
loop
and
int
jbe
sbb
or
mov
rcrl
das
addr16
scas
filds
pushf
and
rorl
xor
test
divl
in
and
push
pop
js
or
sub
jl
arpl
mov
xchg
push
pushf
lea
mov
mov
inc
movsl
cmp
ret
add
das
mov
mul
cmp
jmp
pop
outsb
in
sbb
sub
mov
add
movsl
or
frstor
pop
out
int
and
repnz
cmp
xchg
jne
mov
push
in
ja
inc
test
jg
adcl
lcall
xchg
push
mov
push
mov
les
popf
lahf
sbb
call
dec
xor
mov
addr16
lods
adc
and
in
cli
mov
mov
xorb
ljmp
push
outsb
les
jmp
pop
cmp
sub
sbb
mov
leave
out
inc
push
addr16
int
and
pop
sarl
mov
popa
insl
mov
sti
shll
xor
adc
mov
fcomi
cmp
pop
add
xor
sub
cwtl
cwtl
lea
pop
dec
lods
add
push
lahf
pop
cmpsb
filds
mov
cld
aaa
inc
mov
cmp
adc
adc
and
lock
cmp
rclb
imul
out
or
hlt
les
sarl
faddl
call
xchg
inc
inc
pop
cmp
lds
jle
loop
jb
orl
or
outsb
mov
xor
dec
fstpl
imul
repnz
xor
mov
fwait
ret
adc
pushf
rcll
mov
inc
nop
shll
test
and
sub
cld
mov
andb
stc
aas
inc
test
push
jno
andb
ficompl
inc
xchg
pop
mov
sub
cmp
mov
cmp
stos
push
mov
or
cmp
insb
add
xor
cwtl
hlt
fstpl
sti
addb
dec
mov
mov
bswap
pop
push
daa
fnstcw
lcall
lahf
xchg
in
inc
dec
add
push
pop
subb
test
add
out
xchg
jg,pt
cmpb
in
je
or
pop
xchg
push
fnstsw
cmpsl
call
lds
loope
inc
pop
push
out
jne
or
and
jb
xchg
dec
in
inc
sahf
push
pusha
ret
mov
inc
dec
in
pop
cmpl
jne
add
repz
dec
repz
sub
add
sbb
pop
fnstenv
out
sbb
movsl
jae
ljmp
stos
xchg
leave
adc
imul
dec
cmp
mov
adc
lahf
mov
push
scas
out
loopne
idivl
inc
imul
pop
mov
cmp
pop
fucomip
scas
and
call
imulb
lods
addr16
jle
shll
dec
imul
jmp
lods
loopne
movsb
dec
xor
jo
sub
insl
outsl
call
test
sbb
pop
jecxz
sub
xor
xchg
sub
unpcklps
cmp
jge
push
mov
mov
inc
loopne
or
cmc
enter
fidivl
lahf
iret
pusha
popa
xchg
addr16
mov
js
pop
fsts
mov
inc
sub
hlt
fstpt
outsb
in
aaa
lahf
ret
cwtl
dec
lea
pop
lods
sahf
push
jnp
pop
xorb
jae
mov
xchg
or
rcpps
xor
xor
mov
js
and
push
rcrb
sbb
adc
mov
insl
sub
mov
cmp
adc
outsb
adc
loope
sbb
inc
mov
xor
les
cltd
jae
repnz
mov
push
cmp
cmp
lret
shrw
iret
pop
mov
cmp
cltd
arpl
push
add
cmpsl
out
sti
aaa
imul
inc
push
add
rolb
outsl
popa
add
xchg
dec
jg
jns
in
ret
xor
mov
mov
jno
pop
inc
cmp
imul
lods
xchg
sahf
nop
cmp
pextrw
imul
in
jbe
jg
into
lods
mov
stc
pop
cwtl
loope
es
ficoms
jmp
outsl
push
xchg
lea
xchg
pop
mov
xor
pop
aam
mov
jmp
daa
jle
add
cli
mov
push
jmp
cwtl
popa
test
dec
mov
popa
adc
mov
imul
clc
xchg
enter
lcall
sbb
and
mulb
adcl
mov
cmp
cmp
or
inc
inc
stos
ss
scas
ja
ljmp
call
sub
jg
pop
jl
inc
lds
mov
xor
sub
inc
and
lgs
mov
arpl
jl
jo
adc
add
fwait
xor
clc
dec
test
xor
jbe
ljmp
jp
and
push
push
mov
cmp
xchg
mov
lret
adc
ret
hlt
adc
adc
jecxz
rorl
cmp
pop
mov
xchg
stos
mov
out
addr16
mov
cmp
mov
xor
cld
mov
xor
test
jl
iret
sbb
inc
out
push
imul
push
bound
ret
fildl
add
adc
xor
xchg
inc
xor
jecxz
gs
fsub
lea
and
fs
stos
add
mov
or
inc
iret
subl
pop
shll
out
dec
xor
ja
aam
inc
dec
xorl
sub
jo
push
stc
xchg
fs
add
setns
mov
insl
mov
cmpsb
shr
push
sbb
in
lea
nop
pop
fnsave
test
in
fidivrl
testb
sbb
mov
rcrl
mov
ss
mov
repz
dec
xor
inc
xchg
js
stos
hlt
repz
pop
pop
add
adc
jmp
popa
or
xchg
scas
stos
daa
aas
clc
mov
out
js
xor
jae
sbb
popf
fisubrs
loopne
mov
adcl
add
xor
lret
inc
cmp
inc
inc
fadds
push
jnp
pop
cmpsb
pusha
jno
aas
sbb
and
mov
dec
out
xor
leave
jp
xchg
xchg
cmp
jae
sub
add
mov
stos
pop
movsl
test
pop
outsl
jno
iret
enter
add
loopne
fiaddl
xor
ljmp
repnz
pop
stos
cmp
lea
sbb
mov
xchg
pop
sarb
push
std
push
idivb
sub
fistpl
mov
in
loopne
sbb
add
sub
enter
xchg
xchg
lods
mov
and
mov
inc
or
clc
data16
pushf
sarl
stos
roll
call
inc
jne
mov
xchg
lahf
stos
test
loop
sarb
rorl
fmull
in
inc
xor
cmp
jp
jmp
xchg
jno
xor
adc
xlat
xor
std
jl
sbb
in
push
cmp
int
pop
xchg
test
outsb
mov
and
mov
and
jne
icebp
movl
sub
or
adc
fbld
cwtl
cmp
cmc
seta
shll
mov
test
mov
js
cwtl
stos
call
push
mov
rcr
pop
fisubs
add
mov
jae
orl
mov
mov
xchg
daa
adc
data16
test
and
inc
inc
dec
mov
and
mov
jle
scas
adc
fdivrs
movsl
jno
aaa
imulb
call
mov
stos
dec
sbb
xchg
mov
mov
stc
lret
lea
imul
sub
push
repz
lods
inc
sbb
jp
or
sub
fidivrl
lds
out
adc
add
xchg
cmp
inc
lret
int
adcl
pushf
cmpsb
sbb
jne
cs
shll
lret
cmp
mov
ret
call
adc
sub
adcb
sbb
mov
nop
subl
push
xchg
add
xor
imul
js
icebp
and
in
or
xor
fs
pop
push
mov
jle
ficompl
add
pop
mov
int3
lar
adc
pop
push
and
mov
jge
cmp
cmp
stc
and
push
pop
fstpt
rcll
cmpsl
lods
imul
mov
into
push
mov
adc
pop
sbb
das
xchg
fs
xlat
ficomps
insb
mov
stc
rcl
cs
cli
mov
nop
or
jecxz
int
add
int
inc
cmpsl
mov
aad
imul
push
test
je
int3
dec
lea
dec
fbstp
arpl
and
pop
sbb
int
or
xlat
aas
arpl
xchg
jnp
lea
mov
hlt
inc
pushf
xlat
ds
subb
push
and
fisttpl
mov
add
mov
std
dec
or
hlt
xor
jl
aam
jbe
add
inc
data16
jns
sub
inc
repz
stos
cmc
dec
gs
je
fstpl
mov
in
pushf
call
mov
or
mov
rcrl
imul
adc
push
hlt
pushf
push
mov
push
inc
mov
and
pop
lcall
sarb
loope
adc
xchg
mov
dec
mov
sub
jg
inc
adc
lahf
cmp
pop
xor
pushf
jnp
ds
pop
sub
mov
enter
xchg
insl
movsb
icebp
mov
xor
scas
mov
pushf
call
test
lcall
shrl
push
rorl
xchg
cmc
adc
fs
mov
cmc
aas
movsl
xor
cmpsb
idiv
sbb
xor
jp
adc
mov
iret
sub
je
in
lods
xchg
mov
sbb
jb
iret
xchg
pextrw
popf
aaa
xor
cwtl
jns
fisubl
scas
sbb
xor
sbb
add
dec
and
xor
or
sub
mov
or
nop
inc
out
xchg
imul
test
cmp
js
mov
mov
lods
jp
push
push
lds
ror
into
in
push
mov
lret
mov
cwtl
adc
adc
jb
pop
push
orb
xchg
cmp
adc
imul
addl
inc
stos
fsubrl
ret
or
mov
loope
inc
out
adc
icebp
scas
pop
mov
pop
daa
pop
jp
push
fwait
cld
cmc
mov
dec
aas
mov
es
movb
fnsave
ljmp
jle
mov
add
or
xor
lret
mov
sub
inc
repz
cmp
and
fwait
dec
in
jle
stos
mov
pop
ret
lea
int
js
pop
add
mov
push
or
pop
dec
mov
push
ja
scas
sub
movsb
out
cmpl
jo
fs
mov
scas
pop
iret
mov
cli
cwtl
adcl
roll
aas
mov
mov
mov
fstps
mov
adc
xor
movsb
jae
push
cmpsb
jne
shll
popa
bound
out
insl
and
mov
add
mov
das
jne
mov
pop
ds
inc
in
cmp
dec
ds
sete
cli
cmp
mull
sub
inc
nop
push
ljmp
adc
pop
daa
sbb
sbb
mov
cmc
sbb
sub
xchg
jl
inc
push
lret
pushf
inc
pop
stos
xorb
adc
xchg
add
pop
mov
xchg
jbe
jle
mov
testb
or
insl
das
xor
sub
outsb
dec
sbb
in
pop
call
cmp
mov
adc
in
dec
ja
push
xchg
xchg
sub
cmp
icebp
fstpt
xor
lods
pop
fs
mov
lcall
jae
stos
mov
mov
bound
rcr
add
sbb
jecxz
sub
dec
js
mov
cmp
push
mov
lods
mov
mov
fistpl
call
int3
inc
das
push
jge
xchg
jns
pop
and
in
fcompl
dec
ja
push
into
mov
aad
pop
sbb
fisttps
xor
xlat
mov
pop
pop
and
mov
in
pusha
dec
adc
sbb
fbld
push
out
pusha
das
loop
mov
js
inc
dec
ljmp
loop
sbb
call
dec
fldcw
jmp
fstp
in
mov
sub
insb
fcmove
sub
cmp
cs
pop
push
mov
aaa
sbb
fwait
dec
ror
test
cmp
pushf
push
nop
cltd
push
loopne
or
or
lret
cmpsl
xor
pop
and
lret
sahf
loopne
add
sbb
pushf
mov
fldl
sahf
ljmp
arpl
shll
jb
sub
out
adc
push
in
sbb
sub
jb
fistpl
push
pop
push
inc
jmp
dec
movsb
and
repz
mov
shr
ja
es
mov
jne
mov
jg
mov
fiadds
mov
gs
jg
mov
repz
mov
pop
jnp
push
xchg
into
bswap
or
out
inc
jmp
lahf
mov
sub
cmp
outsb
daa
push
pop
sub
aas
cmp
pop
jno
dec
loope
mov
stc
shl
xor
es
repnz
pop
xor
mov
add
xlat
add
mov
shlb
or
fstpt
frstor
xchg
imul
gs
lds
imul
stos
test
add
test
orl
dec
mov
outsl
lahf
arpl
pop
pop
cmpsl
adc
pop
mov
dec
cmp
iret
bound
xor
lea
testb
ret
pop
or
jg
lret
mov
call
inc
pop
hlt
adc
adc
pop
addr16
insl
psubsw
lock
xchg
pop
mov
test
xor
or
stos
dec
push
fldt
or
cmpsb
push
das
jne
out
jne
add
nop
roll
push
lods
cltd
nop
das
sbb
inc
repz
jb
iret
dec
in
stc
insb
mov
and
push
popf
jl
push
loope
lods
insb
cmp
sbb
loop
xor
mov
cmp
pop
cld
jmp
test
jo
testl
sbb
sbb
mov
add
pop
xchg
addl
xor
mov
xor
in
movsl
cmp
mov
lods
shll
mov
cmc
xor
pop
cmpsb
xlat
clc
xorl
mov
orl
inc
test
fwait
cld
pop
inc
bound
xlat
pop
mov
sub
cwtl
aas
enter
scas
mov
and
aam
cmpsb
sbb
fsubrs
push
inc
dec
jnp
clc
pop
or
mov
imul
mov
iret
xor
int3
ret
xchg
ret
or
arpl
inc
lea
out
fsubp
stos
and
aas
or
add
inc
and
in
loope
les
int
inc
and
sub
sbb
fs
iret
aam
push
sarb
xchg
inc
add
push
loopne
inc
xchg
or
out
jne
xchg
jle
dec
call
mov
icebp
cli
inc
mov
imul
push
mov
enter
mov
xor
js
adc
xchg
sub
mov
xchg
push
mov
mov
sbb
sbb
xchg
fucom
mov
cs
add
adc
decb
sub
mov
in
cltd
das
pop
fmull
push
fmull
xor
inc
paddsb
test
rorl
pop
adc
fnsave
xchg
shrb
jl
push
das
fst
dec
je
out
dec
push
arpl
lcall
pop
test
cmp
sub
scas
cmpsb
mov
push
inc
leave
pop
outsb
jne
daa
push
cltd
lret
cmpsb
lods
xor
xchg
loope
out
or
ss
cmp
scas
lcall
jno
out
jg
cld
sub
lods
mov
mov
dec
cmp
cmp
push
push
test
sub
sbb
mov
mov
repnz
sub
push
lock
mov
out
push
mov
ds
aad
cmp
in
sbb
sub
push
dec
pop
enter
ret
lods
cld
jmp
pop
pushf
out
push
aam
dec
mov
loopne
and
out
lods
ret
cs
pushf
pop
push
test
sub
dec
or
repnz
pop
jno
loope
mov
xchg
or
lods
adc
dec
sub
loope
hlt
inc
fbld
data16
movsb
jno
outsl
mov
mov
and
fstl
push
in
data16
mov
cltd
cmp
repnz
pop
outsb
jbe
or
mull
lcall
mov
xchg
ljmp
xchg
mov
das
sbb
jb
push
jbe
insl
out
rolb
in
iret
shl
loope
int3
and
mov
shll
and
in
imul
jno
in
fnstsw
adc
ss
or
repz
shll
xchg
loope
inc
pop
push
insb
stc
sarl
add
aaa
mov
hlt
mov
fisubrs
xchg
cs
sub
mov
jno
test
pusha
icebp
xor
sahf
mov
mov
mov
in
and
mov
adc
cmp
pop
mov
or
xchg
ljmp
adcl
add
fcmovnb
jbe
fbstp
fmull
int3
lahf
and
xchg
xor
sub
rcrb
aas
xor
insb
xor
push
mov
aaa
mov
cmpsl
lcall
mov
and
call
ret
pop
pop
pop
add
xchg
int3
les
pop
mov
incl
mov
xchg
test
pushf
ja
xor
addr16
push
mov
addl
cmp
test
xchg
or
xchg
and
notb
es
ja
cmp
arpl
sub
pop
pop
cmpps
push
fimull
jb
clc
movsl
test
sbb
shr
add
pop
adc
arpl
mov
les
arpl
ds
or
cmpsl
loopne
cmpsb
xchg
insl
jge
and
decl
into
ret
mov
jge
or
xchg
pusha
xor
mov
xor
add
testb
aaa
cs
cmp
cmp
fisttps
cmp
movsl
sti
mov
sub
insl
push
jg
hlt
fndisi(8087
push
sar
ja
ficoms
jle
arpl
aam
cwtl
adc
lods
mov
add
inc
or
sbb
adc
test
mov
sbb
and
into
push
mov
push
scas
clc
shrb
mov
rolb
fisubl
mov
xchg
xchg
ljmp
mov
test
int
sbb
notb
pop
dec
shll
cli
lock
xor
xchg
xor
sti
inc
push
sub
dec
push
push
out
iret
int3
popf
jg
pop
sahf
add
inc
push
inc
mov
sahf
inc
push
add
out
fstl
inc
add
and
push
or
lock
daa
add
std
or
mov
mov
lods
sub
scas
xchg
inc
shlb
dec
stos
mov
adc
pop
ret
or
fs
repz
jo
mov
dec
outsl
pop
mov
movsb
mov
sti
sti
loope
add
std
popf
mov
adc
scas
inc
loopne
out
cwtl
push
inc
xchg
inc
sbb
mov
jmp
sbb
js
dec
inc
adc
mov
add
test
lcall
nop
in
inc
cwtl
add
adc
fwait
mov
sub
sub
cmpsl
jmp
cmc
pop
and
xchg
mov
adc
ljmp
sub
and
sub
stc
adc
shll
xchg
push
xor
adcl
jle
adc
pop
pop
sbb
dec
push
or
dec
rcrl
shrl
aas
cmp
mov
lret
sahf
and
push
out
movsb
inc
dec
and
test
arpl
add
pop
and
fidivrs
pop
add
jp
sub
push
xor
scas
ss
outsl
xchg
mov
or
clc
and
or
insl
inc
sbb
addr16
sbb
xchg
sbb
add
std
leave
jns
jp
push
mov
and
push
inc
sbb
push
jmp
shll
xchg
orl
inc
adc
inc
xor
movsb
pop
popl
insb
mov
inc
or
ja
mov
inc
push
ja
sub
insb
into
in
mov
push
daa
repnz
and
sbb
into
lret
mov
ficoml
adc
sbb
mov
cmp
mov
nop
mov
mov
and
mov
add
or
int3
ret
or
jecxz
inc
into
or
and
xor
sbb
sub
lods
inc
outsb
addb
or
test
pushf
sub
daa
lds
push
fld
inc
iret
in
and
popa
repnz
rcll
push
rcl
pop
xor
lock
shrb
outsb
xor
xchg
jle
les
mov
sub
lock
fistpll
or
daa
sbb
sbb
mov
and
jo
fcompl
loopne
inc
addr16
adc
insl
sub
shll
pop
dec
or
out
dec
sti
xchg
inc
push
js
cmp
mov
xchg
and
into
popf
notl
mov
rolb
roll
push
call
dec
xlat
mov
sub
loope
mov
mov
movsl
xchg
lret
inc
mov
loop
cmp
xorb
pusha
pusha
enter
test
cli
push
inc
popa
inc
adc
gs
repz
aam
lcall
lods
outsl
lret
fs
loop
push
lods
andb
pop
int
fildll
out
jp
es
xchg
xchg
cmp
and
jl
je
push
arpl
cmp
jmp
in
sub
dec
aaa
popf
jae
mov
int3
adc
ds
adc
sbb
aaa
cmpl
inc
subb
clc
insb
gs
ljmp
lock
jl
imul
xor
cwtl
ljmp
sbb
scas
mov
int
push
dec
fistl
iret
inc
fpatan
inc
pop
sub
push
bound
dec
cmp
dec
xor
popa
rcll
or
add
xchg
pushf
outsl
in
add
shl
int3
pcmpeqb
jne
and
xor
push
enter
inc
and
mov
ss
fwait
sub
stos
pop
dec
jecxz
or
push
icebp
mov
xor
std
sahf
xlat
inc
sbb
ret
adc
pop
mov
popa
rclb
cmp
xor
cmp
cmp
pop
and
mov
jnp
cltd
aas
lret
in
mov
int
push
pop
pop
pop
imul
mov
sub
repz
and
int3
push
in
rorb
les
loope
fsts
sbb
pop
mov
stos
cmp
aas
adc
mov
push
dec
in
mov
rol
mov
or
inc
ficompl
jb
out
test
xchg
mov
repz
addr16
fcoms
es
outsl
insb
scas
rep
punpcklwd
nop
fs
pushf
fwait
push
or
inc
lods
mov
scas
dec
imul
mov
pop
push
aam
cltd
push
inc
push
enter
movsb
addr16
pop
insl
xchg
and
mov
scas
aad
xchg
inc
push
push
nop
sub
stos
std
adc
xchg
jns
cltd
mov
sbb
lock
sbb
adc
outsl
mov
lret
mov
cmp
outsl
ss
mov
pop
push
lret
imul
add
jno
mov
adcb
sub
sbb
pop
aad
mov
out
addr16
cmp
cmp
xchg
fcomps
push
xchg
inc
push
jae
mov
mov
or
scas
mov
jnp
and
inc
pop
aaa
and
cmp
daa
xchg
movl
xchg
adc
arpl
xchg
inc
dec
dec
in
imul
sub
imul
outsl
push
mov
xor
test
call
test
repnz
pushf
leave
jb
pop
mov
jae
int3
sub
out
mov
jecxz
jno
divl
add
jmp
dec
or
mov
ret
dec
mov
xor
mov
loopne
divl
mov
add
sbb
in
jl
scas
jp
sub
mov
and
cmp
mov
imul
or
push
cmp
shlb
mov
push
xchg
adc
and
dec
add
lahf
ja
xchg
adc
jmp
div
sbb
jns
add
xchg
push
mov
sbb
in
rcrl
scas
push
out
mov
cwtl
fsub
movsb
adc
scas
js
jo
out
xchg
cmp
ds
cltd
jge
and
hlt
adc
gs
cmpsl
sbb
fmuls
push
lret
out
lret
xlat
ds
or
xorl
push
mov
xchg
mov
or
xchg
push
jmp
jge
jmp
ret
mov
shl
xchg
adc
mov
mov
sbb
inc
divb
adcb
sarl
jle
pop
in
push
push
and
dec
imul
mov
adc
test
ror
or
popf
icebp
ds
lret
pop
xor
xor
xchg
lods
fimuls
cs
mov
notl
dec
sbb
inc
scas
sar
rolb
lds
add
cmp
les
cltd
push
xor
ret
lret
repz
adc
jne
jg
sub
mov
ret
daa
dec
fstps
and
xchg
orb
shlb
sbb
mov
roll
jle
dec
adc
push
add
jno
insl
orl
rorl
sub
pop
inc
fwait
inc
pop
fcmovnu
aas
xchg
lret
sti
push
popf
xor
jle
sub
leave
lods
pushf
movl
cltd
push
loop
loopne
push
je
sub
xchg
mov
dec
out
pop
cmc
push
add
cmp
cmp
and
movsl
add
fucomip
subl
outsl
and
int
ret
cmp
mov
imul
xchg
loopne
or
sbb
cltd
xchg
pop
or
dec
ljmp
test
lahf
pop
push
ds
movsl
mov
lods
pop
arpl
xor
mov
clc
jno
scas
mov
js
mov
subb
jmp
mov
clc
pop
mov
mov
mov
pop
lods
mov
popa
dec
sarb
mov
js
xor
fwait
adc
cmp
xchg
cmp
push
dec
jg
das
push
scas
dec
js
or
notl
inc
testl
pop
int
dec
mov
push
jle
fiaddl
gs
repnz
test
mov
cltd
jnp
jbe
pop
or
pusha
push
adc
sub
pop
js
mov
adc
adc
push
rorb
pusha
leave
mov
add
push
xchg
xor
std
dec
mov
sbb
je
jp
sub
push
mov
and
or
adc
mov
out
xchg
repnz
test
jle
sub
cmp
insl
cmpsb
sar
jbe
scas
jnp
add
test
mov
or
aas
ret
jne
pop
movsl
dec
jo
xor
jo
xchg
andb
jb
jp
jb
mov
out
dec
int
inc
cmp
jo
mov
jnp
mov
dec
test
loopne
movsb
test
xchg
in
cltd
js
subl
in
jmp
insb
mov
daa
scas
mov
xlat
adc
ret
jbe
scas
mov
mov
lds
sub
mov
pushf
xchg
cmp
lahf
in
mov
dec
cmpsb
adc
adc
dec
push
je
cmp
aam
xor
imul
push
mov
ja
clc
xor
les
lcall
fdivs
xor
pop
leave
js
fcmovu
jl
cmpsb
and
sub
mov
mov
cs
insl
mov
filds
pop
push
or
outsb
sbbl
movsl
incl
jge
xor
pop
sub
idivl
clc
mov
fs
out
jg
cld
mov
es
xorl
call
pop
test
aas
add
xor
xchg
sbb
fnstenv
lods
mov
aas
jno
lds
iret
dec
js
popf
sub
inc
mov
adc
mov
xchg
leave
push
xlat
icebp
out
stc
cmp
stos
in
xchg
xchg
or
fldl
or
pop
fisubrs
shll
scas
sbb
shrl
push
sub
or
lods
pop
xchg
jne
dec
fs
mov
add
or
inc
lret
iret
movsl
cwtl
out
xchg
fwait
mov
dec
daa
pop
pop
or
ret
sub
std
xor
pop
int
es
and
mov
add
jle
jae
mov
out
rclb
inc
push
std
cs
sub
lcall
mov
xchg
sbb
jno
push
loope
mov
inc
sub
push
adc
sub
out
mov
stos
in
xor
mov
sub
pop
mov
sub
iret
dec
pop
sbb
stos
push
aas
cmp
mov
sub
fwait
xchg
push
iret
gs
adc
jo
aad
shl
push
pop
lds
sbb
cwtl
cmpsl
pop
xchg
mov
jns
push
push
dec
imul
lcall
add
in
push
jbe
xor
push
movsl
push
andb
ja
sbb
cmovne
jne
push
inc
cmp
push
lock
cmp
sub
pop
es
test
mov
bound
loope
scas
pop
addr16
jecxz
cwtl
mov
xor
jb
fidivrl
cmp
clc
rolb
lds
xchg
sbb
cmpsl
mov
push
push
pop
push
movsb
je
leave
add
inc
fwait
inc
in
ror
xor
stos
clc
dec
and
sbb
sbb
nop
je
inc
cmpb
outsl
inc
or
repz
mov
xor
mov
iret
or
outsl
fnsave
jle
xchg
mov
test
adcb
popa
lret
mov
scas
adc
or
loop
aas
jp
pop
add
mov
and
sub
es
inc
push
or
lahf
add
add
ret
sub
xor
fsubs
ret
xor
pop
xchg
out
mov
clc
sub
fidivl
pop
scas
cwtl
jecxz
popf
mov
inc
jp
jge
loop
jmp
push
jae
and
fsubl
leave
jecxz
mov
mov
mov
add
xchg
jmp
jle
fdivrl
push
and
dec
cmp
loop
adc
dec
xchg
jp
aad
adc
sbb
jae
cli
xor
insl
lret
aas
xchg
xor
mov
cli
jne
loopne
sbb
movsb
je
dec
push
xchg
or
or
push
jbe
jbe
ja
sbb
test
cmpsl
sbb
mov
idivb
and
add
jmp
jne
frstor
jbe
lahf
mov
jmp
arpl
adc
push
push
add
dec
lds
dec
dec
mov
daa
sbb
cltd
pop
jp
cmp
dec
mov
xor
dec
gs
mov
and
lods
mov
and
aad
mov
sahf
pop
arpl
imul
cmp
lret
jns
popf
jge
cmpsl
test
mov
pop
out
push
dec
and
xlat
test
shl
sti
cmpsl
push
push
sbb
cld
adc
ret
rcll
sbb
mov
popa
pop
adc
lahf
imulb
adc
add
pop
cmp
xchg
cmc
imul
mov
sbb
shll
decl
rol
sti
movsl
les
jp
ret
aas
pusha
mov
inc
pop
mulb
adc
inc
push
jge
pop
or
jecxz
dec
cmp
xchg
xchg
aas
and
jge
cmp
call
jle
fildl
pop
sbb
movq
add
insb
lret
pop
xor
add
cli
push
scas
cmp
in
xchg
add
mov
adc
push
sub
dec
aad
leave
xor
jmp
pusha
cmp
std
mov
cli
in
cmc
or
mov
stos
je
xchg
in
push
inc
cmp
cmc
mov
fyl2x
gs
sbb
push
ret
push
push
nop
inc
jl
xchg
clc
fbld
sub
pop
mov
aas
mov
xor
rcrl
fwait
adc
jp
cwtl
stos
pop
adc
inc
test
cmp
js
shlb
inc
fisttpll
std
add
push
pusha
aaa
push
fstl
jae
lds
ret
lcall
pop
std
or
sarl
pop
sbb
lock
std
pop
sbb
xchg
mov
aam
jecxz
out
push
das
cs
push
iret
lret
iret
out
repnz
dec
jl
imul
rorb
shlb
cmp
loopne
add
and
into
xorl
test
into
cmp
ljmp
mov
aas
repnz
sbb
rorl
push
jno
and
jl
pop
fidivrs
and
or
mov
inc
push
popf
and
scas
mov
push
pusha
ljmp
mov
fiadds
pop
or
xor
push
mov
fidivs
ds
pop
dec
in
test
hlt
xchg
xor
sahf
cmpl
push
dec
jl
ljmp
mov
movsb
xor
insl
daa
fwait
rcll
mov
test
outsb
jo
dec
in
faddl
cmp
mov
pop
mov
mov
les
add
adc
shl
push
xchg
jl
cld
dec
mov
or
sahf
mov
sub
mov
jne
sbb
inc
adc
push
rolb
call
popa
cmpb
adc
or
push
add
inc
or
xchg
jge
aaa
and
push
mov
sbb
std
xor
add
xor
scas
ja
jns
cltd
mov
repz
lret
fcompl
lods
lock
inc
fs
add
fucomip
xor
pusha
jge
loope
daa
add
sub
jge
out
jge
cmc
cmc
lsl
dec
add
pop
fcmovnb
adc
repnz
mov
lds
mov
cmp
cltd
jo
test
fcmovnbe
cmp
mov
fsubp
inc
dec
aam
jl
and
adc
call
inc
pop
xchg
test
movsl
or
add
xchg
inc
popf
push
idivl
fcomps
leave
ja
hlt
cltd
daa
sub
lock
push
int
dec
add
add
inc
aad
xchg
int3
hlt
loope
mov
sbb
adc
scas
mov
jecxz
and
mov
mov
loop
inc
cmc
push
add
aad
cld
insl
pop
jne
sub
pop
sbb
sti
dec
mov
outsl
or
inc
stc
mov
aaa
and
mov
cld
sarb
cmp
loop
sub
das
and
sub
jp
push
aad
adcl
sub
adc
adcl
push
mov
leave
mov
adc
xor
inc
sbb
mov
movsl
push
outsb
scas
sbb
cmpl
int3
xor
lahf
lret
loope
std
mov
cmp
push
and
das
mov
in
xlat
flds
jne
insl
sub
lock
mov
std
fs
repnz
xor
push
rorb
scas
dec
aam
ja
cmpb
push
push
repnz
addr16
cmp
shlb
out
push
inc
mov
inc
pop
addl
and
mov
movsb
xor
call
pop
mov
inc
pop
fs
outsb
pop
jle
es
aas
dec
rclb
pop
cltd
insl
jno
mov
xor
mov
mov
pop
loop
mov
mov
jge
pop
arpl
push
popa
das
sbb
cltd
outsb
sub
sbb
mov
repz
popf
shlb
pop
push
shrl
push
or
shll
pop
pop
xor
movb
or
lret
test
aas
jmp
inc
add
xchg
cmp
aam
jne
mov
sub
jnp
sbb
repnz
mov
sbb
sbb
sarb
test
push
out
sbb
add
sbb
imul
jns
or
push
movsl
add
push
xorb
pop
popa
mov
sbb
cli
pop
lahf
mov
pop
ds
xchg
jb
xchg
sub
push
mov
rolb
pusha
pop
add
sub
fimull
shr
insb
pop
cmpsl
jbe
cld
mov
inc
push
mov
xchg
xor
mov
mov
sti
cmp
mov
jne
xor
ret
mov
adc
lea
fiadds
outsl
mov
fdivrs
test
scas
cmp
and
pop
sbb
lods
dec
xchg
inc
sub
or
or
xor
adc
decb
stc
fsubrs
cmp
jo
insl
jns
mov
ss
mov
ja
test
adc
xlat
stos
test
test
and
test
mov
adc
xchg
pop
mov
inc
push
cmp
and
divb
pop
xor
pop
les
je
push
mov
rcrl
xchg
mov
stc
pop
adc
pop
jle
xchg
dec
adc
cli
clc
mov
stos
mov
cmp
js
xacquire
lahf
add
mov
rcrb
rcl
out
pop
and
bnd
idivl
jle
add
aaa
shll
and
mov
or
adc
popf
ficoms
jno
sbbb
in
inc
push
fs
cltd
or
add
cmc
and
xchg
lods
jl
dec
sahf
xor
and
pop
xchg
leave
and
mov
mov
mov
inc
jg
dec
jo
imul
popa
xor
mov
movsl
cmc
sub
dec
popa
hlt
lock
add
imul
and
bound
movsb
xchg
push
arpl
pop
push
xchg
sub
sub
movsb
xchg
push
xor
lock
cmp
mov
movl
imul
pop
or
out
inc
lcall
mov
mov
out
jge
lcall
arpl
or
mov
mov
arpl
add
or
xchg
in
xor
test
iret
clc
insb
mov
jmp
out
fbstp
cmpsl
cltd
hlt
jne
cmp
mov
cmp
negl
loop
test
lcall
and
aas
into
imul
adc
fscale
cmp
jecxz
jmp
fs
bound
cmpsb
inc
sub
icebp
aaa
ret
cmpsb
gs
cmp
sbbb
cmpsb
mov
mov
adcb
cs
jp
outsl
xor
xor
insb
les
cmp
sbbb
jnp
imul
insl
cmc
ljmp
lea
add
pop
aam
dec
or
sbb
xchg
cli
call
js
movsl
dec
xchg
sbb
add
cli
scas
lahf
jae
cwtl
sbb
paddsw
inc
call
daa
push
push
repnz
in
push
sub
mov
xbegin
ret
in
mov
jp
scas
in
inc
inc
mov
out
mov
add
mov
dec
sbb
sarb
out
call
pop
pop
pop
imul
sub
subl
fwait
int
fs
sub
mov
imul
inc
add
pop
sub
dec
cs
jg
inc
dec
pop
lcall
inc
and
inc
mov
lods
xchg
test
cwtl
out
in
jb
add
jmp
outsb
xor
pop
inc
movsb
shlb
mov
inc
inc
js
mov
add
mov
js
push
jne
inc
pop
or
dec
cmp
mov
popf
sahf
fs
cmp
stos
sub
std
add
or
sub
sbb
push
lea
pop
mov
sti
and
jle
inc
jecxz
add
orb
xor
in
mov
xchg
aam
lds
cwtl
xlat
mov
subl
push
movsb
sub
adcl
dec
scas
and
stos
movsb
push
mov
add
cmp
popa
pop
inc
mov
jp
ja
cmpsb
add
out
cli
scas
jno
bound
and
lods
mov
sbb
inc
sub
and
ljmp
orl
push
clc
mov
dec
adc
lock
mov
jle
xchg
adc
cmp
fistpl
je
lea
pop
scas
jl
es
fcoms
loop
push
cwtl
jl
ljmp
jle
outsb
and
xlat
sbb
stc
mov
repz
cmc
es
nop
out
push
push
js
fldl
mov
inc
inc
in
cmp
add
and
or
scas
push
das
sub
aas
lret
push
push
pop
insb
call
cmc
and
add
pop
jo
in
dec
jno
test
mov
lods
adc
leave
popf
out
in
fmull
jp
insl
push
and
sahf
js
xchg
into
popa
jp
into
call
mov
leave
mov
or
mov
clc
xor
jp
pop
test
inc
sub
mov
in
inc
aad
psubb
rclb
fisubrl
sub
mov
pop
fwait
inc
in
xchg
in
pop
sarl
test
jg
in
and
in
dec
in
jo
push
adc
dec
pop
in
movl
mov
cmpsb
push
fcmovnu
jp
mov
incl
ret
mov
jle
fadd
mov
sub
xor
popl
mov
sbbb
xchg
cmc
lret
ja
test
jle
xchg
xor
mov
into
shrl
push
add
push
int
sbb
cld
xchg
scas
test
mov
cmc
and
in
push
mov
pop
cmp
mov
inc
and
sub
xchg
and
les
or
push
movsb
es
and
mov
sub
mov
mov
lds
and
into
lret
adc
hlt
sbb
setb
pop
mov
lods
out
loopne
leave
inc
pushfw
outsl
scas
out
lcall
adc
or
imul
movsb
sub
inc
stos
outsb
and
lods
inc
test
icebp
int3
push
sbb
rorl
loopne
push
faddp
adc
fidivs
mov
cmp
jae
push
lcall
fmull
pop
les
movsb
jecxz
sahf
cmpb
pop
std
scas
dec
int
jae
iret
clc
sti
shll
insl
insl
xchg
div
mov
sbbl
mov
pop
mov
or
cwtl
sbb
aad
psubb
jae,pt
sub
sbb
cmp
xor
inc
int3
out
lahf
pop
in
xorl
xor
popl
inc
aad
adc
lret
aaa
mov
add
dec
repz
adc
negl
mov
fadds
fcompl
sbb
fimuls
jne
pop
loop
aam
xor
cwtl
add
cmpsl
stmxcsr
mov
std
pop
imul
jg
daa
rolb
lcall
cmp
mov
mov
cs
cs
aam
mov
mov
scas
pcmpeqw
jnp
xchg
imul
cs
test
jmp
aas
sbb
sbbl
cmp
les
test
xchg
mov
fstps
daa
out
bnd
sbb
inc
mov
adc
lds
inc
mov
fidivrl
inc
leave
pop
xor
jne
test
pop
addr16
loop
xchg
fistl
mov
mov
bound
pop
insl
roll
aad
push
out
pop
clc
xlat
ret
pop
xchg
lret
and
mov
es
inc
pop
aas
pushf
or
fistpl
lcall
scas
out
pop
dec
inc
pop
mov
jnp
pop
in
ss
xor
inc
movsb
sub
out
pushl
or
xchg
mov
in
inc
or
fimuls
bound
add
in
ret
roll
cli
stc
jnp
mov
stos
sub
fistpl
pop
cs
xchg
out
pop
mov
les
ret
loope
inc
dec
iret
push
test
cwtl
mov
xor
fsubrl
adc
shll
pop
mov
cs
push
add
ja
mov
fs
xor
idivb
mov
cmpsb
ret
pusha
leave
icebp
jno
jmp
and
das
scas
pop
inc
and
lods
sbb
cmp
out
inc
data16
pop
popa
ja
ja
popa
push
sbb
into
push
dec
pop
lods
mov
xlat
dec
adc
add
outsb
sub
push
sbb
lahf
int
or
mov
pop
fistl
lahf
test
mov
push
sub
leave
test
shll
fdivl
mov
push
int
andb
sar
aaa
cmc
pop
inc
cmp
jno
cld
stos
arpl
fiadds
push
clc
pop
mov
xor
pop
inc
sub
adc
push
mov
arpl
mov
push
je
gs
incb
xor
mov
push
in
aam
push
movsl
ds
movsl
out
mov
dec
mov
and
mov
mov
and
inc
sbbl
xchg
inc
out
adc
dec
cmpsb
int
mov
push
addr16
jp
jg
fwait
cmp
loope
orb
cmc
cs
andl
mov
sub
mov
insl
int3
hlt
movsl
mov
out
pop
movsl
inc
push
sbb
sbb
pop
push
sahf
mov
cld
notl
icebp
orl
dec
cli
inc
cmpl
fildl
repnz
pop
push
mov
ror
mov
test
pop
push
jg
pop
mov
mov
and
push
inc
nop
stc
lret
sub
xor
fs
hlt
je
jmp
mov
scas
lret
adc
imul
jnp
adc
out
mov
hlt
call
cmp
fimuls
adc
xchg
sub
scas
jge
pop
add
push
mov
in
pop
divb
mov
and
jg
inc
int3
xor
or
out
cltd
loop
sub
loopne
insl
std
stc
pop
das
xor
and
dec
fadds
sbb
icebp
insl
inc
add
rorl
pop
aad
mov
andl
jmp
xchg
pop
sahf
push
cld
enter
sbb
push
adcl
in
jg
and
negb
out
jle
dec
insb
test
mov
xor
mov
push
adc
dec
ja
push
in
movsb
xchg
in
js
aam
and
lds
sbb
adc
nop
pushf
stos
sbb
xlat
je
lret
xchg
in
push
mov
mov
sbb
pop
popa
xchg
adc
sete
sub
jnp
test
xor
lea
dec
ja
imul
push
jmp
cmp
jns
mov
and
mov
xchg
dec
mov
call
repnz
xchg
push
ja
inc
add
jo
fwait
js
jmp
cltd
rclb
cmc
cmc
mov
mov
mov
fmuls
in
cmpsb
sti
lods
cmc
pop
jp
shrl
push
mov
stc
cld
sahf
push
outsb
into
inc
adc
add
add
scas
and
out
inc
shl
sub
add
or
dec
cld
leave
or
faddl
popa
shll
fsubp
test
jle
mov
cmp
test
int3
in
xchg
xor
arpl
lds
mov
testl
cmp
mov
int
mov
cli
sub
sub
xchg
incb
ret
in
xchg
jl
jmp
sub
mov
icebp
cmp
mov
in
imul
and
and
xchg
out
mov
iret
push
sar
scas
mov
ret
or
push
aam
orb
in
cmpsb
gs
sbb
dec
or
and
popa
data16
inc
popa
add
mov
adc
loopne
push
les
popa
sbb
movhps
push
out
insb
dec
jo
mov
dec
dec
sahf
inc
repnz
mov
addl
sub
push
mov
pushf
mov
dec
jecxz
inc
cmp
je
fiadds
imul
push
dec
push
pushf
iret
pop
loope
dec
repnz
repnz
ret
xchg
push
adc
jb
dec
cli
and
fnsave
stc
bound
jle
jb
adc
insb
sbb
xor
lock
cmp
adc
jo
in
xchg
orb
cmp
pop
mov
in
mov
cmpsl
pushf
in
sub
sahf
jnp
push
adc
jno
dec
mov
fcmovu
int
push
es
mov
jns
and
xchg
cmpsb
xor
adc
mov
push
xor
mov
lret
xchg
dec
in
or
pushl
mov
mov
adcb
add
sahf
loope
incb
idiv
cmp
push
subb
or
mov
test
jl
arpl
pusha
ja
adc
adc
fdivrs
out
iret
xor
iret
sbb
xor
add
mov
clc
sahf
inc
push
or
sub
es
mov
int
iret
mov
xchg
sub
insb
adc
inc
sub
xor
dec
loope
sub
out
in
push
fcomi
cmp
inc
pop
sub
push
cmp
aam
xlat
movsl
mov
stos
add
push
nop
inc
insl
jmp
lret
jp
cmp
xchg
adc
pop
mov
in
jbe
pop
xor
adc
cmp
test
cmpb
push
push
lds
mov
xchg
enter
jne
adc
enter
sbb
cmpsl
inc
cmpsb
push
movsl
sub
in
arpl
push
sub
mov
mov
sarb
inc
inc
test
pushl
mov
hlt
inc
push
pop
lcall
push
cmp
mov
icebp
pop
fwait
sub
xor
ljmp
jg
rorb
mov
and
dec
pop
jecxz
add
or
dec
inc
pusha
mov
adc
rcrl
jmp
inc
push
pop
jb
or
sub
icebp
and
outsl
cld
icebp
inc
bound
inc
sub
adc
pop
sub
push
cmpsb
and
test
pusha
or
jmp
add
mov
cli
add
stos
sub
xchg
mov
adc
loope
mov
push
out
jae
rolb
jge
lret
sub
mov
mov
jl
hlt
push
ja
in
dec
js
insb
bnd
or
test
xchg
enter
mov
jmp
xor
fadd
pop
repz
sbb
jl
sbb
cli
push
push
adc
cmp
enter
push
fnstcw
scas
xor
iret
pop
test
xor
ja
mov
scas
das
enter
xor
xor
lea
iret
dec
cmp
pop
jmp
dec
pop
repz
out
inc
sete
int
in
rorb
cmc
add
es
jg
jg
fstl
lcall
inc
push
mov
call
out
popa
pop
jp
add
test
mov
sti
xor
into
xchg
mov
xchg
out
dec
push
mov
xor
inc
push
mov
mov
in
sub
ljmp
daa
out
repnz
imul
xor
in
xorb
pop
sub
push
xor
push
xchg
sahf
leave
aam
out
pop
in
inc
loop
sahf
aaa
push
add
rol
fists
iret
dec
sbb
cli
mov
mov
push
pop
xor
leave
and
cmp
pop
xor
mov
and
mov
mov
in
jle
lds
fstl
and
mov
in
dec
cmp
mov
shrb
cmpsl
xor
leave
mov
cli
shr
or
mov
pop
push
notb
fstpl
loopne
out
subb
leave
lea
std
addr16
and
add
push
sub
lahf
pop
ret
push
popf
fistl
mov
cmovo
mov
and
jae
push
std
test
enter
ret
shlb
jae
or
outsb
addr16
lahf
cwtl
sbb
or
sub
push
pushf
imul
nop
sub
pop
ja
mov
inc
iret
inc
shrl
sub
mov
mov
cmp
xchg
sub
int3
out
or
mov
call
pop
mov
lds
inc
dec
hlt
mov
addl
pop
pop
sbb
adc
add
adc
jnp
push
mov
mov
xor
pop
jno
inc
js
dec
jns
push
les
lahf
lret
dec
cmp
daa
mov
nop
movsl
ret
xchg
add
mov
out
cwtl
and
adc
fsubs
in
repnz
cmpsl
mov
lock
mov
push
push
push
xor
sbb
push
dec
test
dec
and
lahf
add
cld
inc
ret
into
adc
das
incl
or
test
push
adc
cmp
xchg
out
enter
mov
inc
inc
pop
gs
shrl
pop
xchg
add
mov
inc
sbb
mov
frstor
repz
mov
sbb
mov
shlb
in
add
mov
pop
dec
cmp
aaa
lret
clc
aam
pop
insl
xor
icebp
not
sub
shll
inc
xor
enter
mull
cmpb
adc
mov
cmp
pop
scas
xlat
mov
jo
add
fcmovb
adc
cmp
not
push
mov
cmpsl
add
mov
test
orl
mov
mov
inc
or
out
jns
sarb
inc
or
pop
adc
addr16
dec
ret
cmpb
xchg
inc
ret
inc
push
jge
pop
jo
mov
adc
bound
pusha
lea
or
inc
adc
jns
dec
ffree
add
cmp
insl
mov
and
adc
or
vpshufhw
xchg
mov
fnstsw
mov
mov
sub
xchg
mov
cmp
push
aam
sbb
or
cmp
mov
add
aad
shll
frstor
ret
xchg
and
daa
test
xchg
sub
inc
or
dec
shll
ds
sahf
mov
inc
pushf
cli
dec
data16
mov
adc
mov
cld
jns
mov
popa
lods
je
mov
repz
adc
sbb
call
lcall
pop
mov
in
pop
jl
cmp
scas
cmp
xor
outsb
fildll
gs
cmp
mov
into
aas
or
ret
imul
mov
repz
fisttpll
test
add
cwtl
adc
mov
mov
mov
mov
test
outsb
lahf
pop
mov
clc
inc
in
add
xor
mov
mov
mov
inc
iret
sub
cs
cmc
in
sbb
dec
mull
in
lret
sahf
stos
cli
mov
pusha
dec
nop
ret
mov
add
mov
insb
out
jo
roll
cli
imul
mov
shlb
imul
repnz
mov
ljmp
int
jnp
loop
pop
or
test
nop
scas
orb
into
mov
mov
cmp
out
xchg
or
or
lcall
ss
cmp
jge
jb
pop
mov
out
fwait
cmp
popf
out
pop
gs
or
je
push
xlat
test
adc
icebp
daa
mov
adc
mov
mov
inc
scas
data16
lret
aas
das
mov
shrl
clc
sub
scas
jecxz
dec
ficompl
pushf
inc
or
fs
dec
adc
je
mov
sbb
rcrb
cld
xchg
dec
sbb
fistl
das
cwtl
push
dec
ds
sbb
inc
ret
clc
lea
mov
mov
cmp
test
sbb
fiaddl
cmp
add
repnz
out
ja
iret
and
adc
fcoml
sahf
imul
adc
lret
mov
or
jnp
imul
mov
push
fsubrs
mov
xor
shll
jmp
fwait
pop
or
push
mov
mov
cli
imul
mov
sbb
out
mov
fsts
icebp
adc
jne
lcall
lds
stos
xchg
popf
xchg
stos
pop
test
jge
xchg
jae
ret
mov
jle
cmp
loope
andb
or
aam
push
test
ds
pop
xor
lods
jns
mov
adc
int
dec
jp
shll
imul
rcrb
inc
and
inc
ret
sub
dec
mov
xor
ds
or
push
dec
xor
sbb
sbb
aas
cs
stos
movups
pop
fidivs
imul
fstl
les
bound
adc
dec
pop
mov
insb
scas
mov
scas
sbb
das
ss
out
pop
sbb
jno
aaa
mov
mov
inc
inc
add
or
push
int3
mov
lret
push
sbb
sbb
mov
ljmp
shll
clc
push
jbe
pop
shl
lahf
sbb
xchg
sub
cmc
sbb
out
arpl
dec
mov
incl
xor
sbb
dec
in
test
mov
jnp
mov
mov
mov
cld
add
mov
jno
rolb
cltd
mov
mov
mov
add
into
pop
repnz
xchg
push
inc
cmc
jo
mov
sub
aam
add
ja
sbb
push
dec
xor
in
movsl
negb
cmp
std
push
icebp
lret
lret
and
and
in
push
cmpsb
shlb
ffree
add
jbe,pn
cmp
fninit
jne
push
mov
in
adc
das
pop
mov
mov
xchg
mov
movsl
repnz
mov
fnstsw
mov
data16
dec
jae
sbb
sub
push
fstl
adc
mov
out
mov
push
dec
hlt
hlt
push
mov
xchg
pop
lret
mov
cmpsb
and
fnsave
mov
popl
inc
add
jge
xchg
stc
aam
cmp
mov
aas
jmp
call
rcrb
pop
pop
incl
jg
jne
test
outsb
push
in
in
imul
or
add
jb
out
insl
pop
xor
imul
sub
aas
sbb
cmp
jbe
inc
test
mov
and
test
push
push
push
mov
icebp
cmp
sbb
inc
pop
push
in
sub
cmp
jno
inc
cmc
pop
stos
lock
arpl
popf
add
and
add
cwtl
dec
ret
inc
xchg
add
jg
std
aam
ss
xchg
test
mov
pop
shrb
out
iret
outsb
imul
out
mov
mov
arpl
ja
jge
mov
mov
sub
mov
les
in
mov
rolb
mov
mov
ss
adc
mov
push
jns
jmp
xorb
shr
int
or
pushf
mov
fdivr
insb
sbb
adc
dec
cmp
ffree
fs
add
inc
xor
pop
out
addb
adc
xor
hlt
xor
xor
shrb
add
jno
fistpll
cltd
add
aaa
push
jl
outsl
notb
addr16
testb
dec
bound
dec
call
mov
addb
in
or
jbe
ljmp
xlat
sub
movsl
jmp
xor
xor
push
push
push
mov
rcrl
xchg
test
or
or
repnz
jge
into
loope
negb
ret
movsb
in
cmp
bound
aam
imul
jb
cmpsl
push
push
mov
or
add
push
cmp
sbb
or
addl
push
cmpsb
repnz
imul
lods
or
out
frstor
enter
xor
imul
andb
pop
inc
orb
add
lods
xor
stc
imul
inc
sbb
jo
xor
or
ficompl
fwait
inc
cmpl
cmp
mov
push
fistps
inc
das
push
and
push
push
fs
add
repz
test
pop
in
xchg
sub
xor
add
fcompl
sub
cmp
xor
in
xchg
arpl
out
ds
sarb
fst
aas
stc
les
les
cmp
les
shll
dec
xor
mov
jmp
adc
pushf
pop
mov
shl
scas
into
cmp
jnp
inc
and
inc
imul
push
push
data16
xor
jno
loope
cmp
push
fwait
cld
incl
data16
xor
mov
xor
sahf
insl
out
and
and
iret
jne
jg
xor
and
inc
sbb
sub
jnp
mov
and
push
mov
dec
cmp
sub
xchg
rorb
dec
xor
xlat
imul
inc
popa
push
pop
add
cli
cmp
rcl
and
les
ficoml
mov
jmp
aad
cld
popa
push
pop
pusha
cmp
jge
and
mov
push
mov
dec
mov
and
popa
test
fstpt
or
inc
leave
jb
or
cwtl
mov
data16
hlt
mov
scas
pop
js
push
mov
imul
outsb
outsl
je
sbb
addl
mov
ljmp
out
out
je
xchg
out
aaa
iret
xchg
xchg
or
sub
jne
cmp
fs
popl
xchg
ja
sbb
mov
test
xor
xchg
add
out
sub
push
dec
xchg
orl
test
orb
sbb
sbb
addr16
pop
sbb
das
mov
mov
loope
fdivl
or
jno
pop
jb
mov
pop
notb
xchg
adc
adc
dec
mov
or
nop
adc
or
push
bnd
out
imul
and
cmp
jb
out
int3
out
rcll
iret
mov
sbb
lods
outsl
pop
and
push
and
aas
mov
addl
mov
add
jle
or
mov
lods
fnstsw
inc
aam
fdiv
fistl
pushf
out
jae
aad
xchg
push
mov
and
fistps
rclb
loope
stos
arpl
xor
test
icebp
loope
stos
aad
mov
fdivp
inc
pusha
divb
sbb
syscall
adc
sbb
sub
shrb
fwait
mov
int
mov
add
mov
add
jo
pushf
cmpsb
xor
or
cltd
ss
inc
xchg
inc
jae
mov
sub
out
mov
or
fcmovnu
jb
or
sbb
or
mov
pop
andb
test
mov
push
pushf
jle
repnz
call
lcall
leave
pop
dec
inc
gs
or
inc
test
in
xchg
dec
lea
cwtl
sahf
and
mov
cli
cmp
cmp
dec
repz
js
shll
push
ss
xchg
addr16
xchg
inc
and
repnz
lret
pop
dec
pop
dec
or
or
addr16
idiv
and
jp
and
mov
jl
cmp
push
stos
scas
inc
inc
rcrb
stc
ljmp
mov
mov
jo
shlb
mov
ret
or
dec
fmuls
fmull
fcmove
push
xchg
mov
mov
mov
or
push
or
fcomps
and
aad
xor
data16
adc
push
pop
or
jle
xor
fstl
repnz
xchg
inc
sbb
sbb
cmp
hlt
xchg
enter
add
aad
scas
je
push
fildl
mov
gs
pop
clc
pop
fsubrl
enter
iret
mov
fdiv
lret
andl
nop
loop
das
fwait
in
daa
push
aam
adc
mov
dec
add
mov
cs
repnz
xchg
leave
enter
in
xor
sbb
inc
pop
faddl
pop
popf
adc
sub
movsl
xorl
mov
imul
ja
imul
int
cmpsl
xchg
int
into
xchg
and
sub
mull
mov
or
std
out
or
jne
lea
daa
jo
or
fdivl
push
and
add
cmp
je
ljmp
inc
pop
pop
adc
mov
in
subl
in
jl
lahf
dec
or
ljmp
ret
insl
hlt
or
inc
add
js
enter
push
push
mov
inc
repnz
adc
add
lcall
insb
sub
fs
sub
out
and
sub
mov
or
out
pop
dec
mov
inc
or
fistps
out
orb
in
pop
aas
cmc
pop
inc
mov
incl
jmp
out
aam
stos
subb
cmpsb
jg
mov
xor
pop
cmp
jmp
add
sbb
cmp
int
jne
mov
loopne
pop
fs
and
cmp
cmp
mov
mov
mov
pushfw
or
and
les
out
push
mov
sub
or
ret
add
loopw
mov
imul
dec
stos
add
push
and
and
enter
sahf
and
mov
adc
sbb
int3
jge
adc
pop
pop
fs
push
inc
mov
std
and
push
into
ljmp
outsb
dec
push
push
in
inc
loopne
lock
sahf
mov
cwtl
test
insb
out
hlt
mov
je
outsb
cli
pop
jge
daa
dec
jnp
int
push
dec
repnz
push
mov
repnz
ficompl
pop
jb
inc
inc
cltd
dec
insl
imul
jecxz
stos
ficompl
xor
xor
lds
jp
loop
fnstsw
cmp
dec
movsl
imul
inc
sbb
xor
lahf
add
and
dec
je
leave
dec
test
push
fcomip
and
inc
arpl
sahf
ret
xchg
sub
xor
sub
add
pop
sahf
std
sbb
cwtl
xor
add
mov
mov
pop
ja
xchg
xchg
sti
adc
or
out
pop
cmpsl
gs
adc
iret
sbb
cmp
mov
add
xor
xchg
shll
dec
inc
inc
push
pop
jmp
or
pop
mov
jecxz
mov
jge
lock
mov
in
jg
lea
cmc
cld
sub
lods
mov
ja
xchg
fdivp
dec
mov
scas
and
and
sbb
hlt
outsl
das
int
stos
and
aaa
ja
ficompl
pusha
ljmp
xchg
push
popf
mov
cs
xor
sub
push
enter
cmp
jmp
jo
in
push
jle
inc
push
cwtl
xor
fisubrl
xchg
jecxz
mov
test
mov
int3
mov
inc
into
adcl
push
xchg
pop
cld
xlat
popa
or
lret
out
push
test
mov
pusha
jg
mov
mov
sub
daa
lock
lods
mov
or
cmpsl
lds
adc
roll
cwtl
xchg
lcall
jmp
inc
lret
rcr
in
sarb
sbb
imul
mov
inc
cs
fiaddl
pop
sbb
or
pop
push
sti
ret
mov
je
dec
lea
cmp
or
fdivrs
mov
and
pop
aad
and
mov
dec
mov
xor
sti
sub
fwait
push
mov
stc
sbb
stos
mov
jae
inc
mov
sub
jo
xor
jp
mov
pop
fs
sub
jle
sarl
mov
fstl
scas
mov
std
iret
adc
popa
mov
sbb
int
and
mov
loopne
rorl
repz
out
sub
fsubr
stc
sub
adc
sbb
je
lcall
mov
sbb
ja
daa
ret
push
fst
gs
insl
dec
cld
xchg
sub
push
jl
add
jbe
push
out
jecxz
sbb
das
jle
mov
jle
xor
fldenv
iret
dec
cwtl
xchg
xchg
in
or
fiaddl
inc
push
aad
push
cmp
lret
pop
shlb
div
xchg
data16
cmpsl
les
inc
outsl
sbb
cmc
mov
fnstcw
daa
call
icebp
dec
pop
sbb
push
jl
xchg
sbb
stc
sub
add
fdivrl
mov
data16
sbb
or
pop
xor
pushf
pop
scas
jb
jns
movsl
xor
cld
into
adcl
cwtl
sbb
lret
sub
adc
xchg
mov
fildl
xchg
and
cmpl
shl
push
lock
xchg
in
adc
or
push
fwait
push
mov
pop
jae
les
pop
jp
mov
and
pop
enter
cs
mov
inc
out
push
xor
notb
std
ret
outsl
cmpl
add
pop
in
call
loopne
push
sbb
les
jecxz
push
mov
cmpsb
inc
dec
push
popa
sub
xchg
insb
cmp
xor
cli
xchg
jae
subb
mov
adc
add
lret
xchg
push
push
pushf
popa
jbe
jo
sbbl
dec
mov
test
push
int
cltd
or
mov
and
mulb
push
adc
je
popa
stos
xor
dec
fcmovne
cwtl
mov
lods
cwtl
cmpsb
ss
scas
dec
jp
popa
mov
and
lds
dec
push
mov
popf
dec
pop
cmc
repz
call
inc
fs
adc
cmp
aad
push
cli
xor
and
mov
adc
icebp
ror
sbb
cmp
lret
inc
lods
xor
mov
inc
repnz
pop
and
ja
ja
in
loope
sub
pop
inc
lock
lds
add
es
iret
inc
xchg
clc
jmp
mov
push
dec
adc
add
sub
sbb
mov
xchg
int
pop
mov
test
in
sub
sbb
movsl
imull
rolb
pushf
adc
fsubs
out
fmul
dec
and
rcrb
mov
cmp
int3
bound
mov
fwait
icebp
in
jg
arpl
push
and
add
loopne
popf
jg
pop
jg
add
popa
mov
xor
pop
jl
stos
and
inc
movl
fwait
cmp
inc
sub
bound
jns
xchg
lea
cld
sbb
pusha
sar
adc
movsl
pop
mov
les
jnp
movsl
jge
jne
notb
adc
pop
adc
test
sub
ja
mov
clc
inc
and
stos
adc
xor
sahf
mov
mov
es
or
mov
push
int3
fisttpl
mov
jmp
cmp
adc
mov
xlat
mov
std
push
sbb
jp
xor
pop
push
test
addr16
jno
xchg
in
xor
outsl
and
xchg
pop
xor
rorl
fxtract
pop
ss
pop
sub
jmp
das
shrl
push
clc
xchg
hlt
in
add
or
dec
inc
movsl
jbe
sbb
xor
shrb
push
dec
rolb
pop
data16
and
dec
stos
sbb
mov
call
fbstp
adc
pop
mov
pop
fs
xor
cmpl
hlt
add
xchg
insb
dec
dec
jne
jne
leave
lret
xor
arpl
or
js,pt
movsb
leave
push
lds
enter
mov
inc
cs
xor
mov
lods
xchg
push
xchg
xor
rol
mov
ds
and
roll
xor
jmp
fadds
ja
lods
sarl
mov
imul
sub
repz
mov
sbb
jge
test
jno
adc
sbb
stc
xchg
lock
arpl
addr16
nop
mov
jae,pt
push
ja
gs
mov
insl
or
js
lea
rcrl
mov
inc
sub
push
lret
lret
xchg
push
dec
pop
mov
mov
lret
ret
adc
rorl
jns
adc
out
aaa
jo
lret
xchg
mov
into
xchg
add
out
ljmp
cwtl
lods
test
lock
push
ja
pop
sub
lahf
fcoms
arpl
mov
fcoml
movsl
fcompl
inc
dec
pop
add
pop
add
ja
push
sub
mov
into
jg
repnz
sbb
les
pop
dec
jmp
adc
sub
xchg
push
cmp
scas
popa
jge
jp
das
cmp
xchg
mov
call
test
pop
push
mov
inc
xchg
ds
ja
pop
jae
jnp
jnp
cmp
dec
xchg
insl
push
inc
inc
aam
cld
rcrl
aas
cmp
sbb
jo
movsl
adc
aas
xor
testb
adc
sub
adc
testb
repnz
jmp
dec
add
mov
jmp
sub
jns
pop
xchg
cmpsl
icebp
outsb
adc
out
pop
iret
in
mov
orb
je
js
lret
inc
mov
dec
jmp
inc
in
mov
out
push
subb
sbb
sbb
mov
not
cs
fidivrl
notb
ret
xchg
sub
scas
hlt
jmp
loopne
adc
jl
pop
push
inc
dec
loope
out
les
aad
lods
jbe
movsb
inc
out
cmp
push
xchg
pop
sbb
pop
pop
imul
cs
mov
lods
sub
test
aad
xor
in
push
pop
lods
add
cmp
push
imul
std
lret
mov
pop
imul
xchg
sarb
mov
xchg
inc
movsl
mov
out
mov
mov
push
imul
psadbw
pop
orb
add
cmp
les
cmc
inc
icebp
jo
ret
cs
in
push
scas
cmp
cwtl
adc
pop
push
xorl
out
jns
or
jmp
arpl
lods
dec
or
das
push
fsts
jbe
movsl
divl
mov
sub
jo
mov
andl
int3
add
xchg
jge
test
cmp
mov
scas
aad
loopne
out
push
push
repz
mov
and
lods
push
js
dec
sbb
rclb
lret
jge
popf
aas
pop
push
jbe
xor
les
sarb
int3
daa
aam
lock
sbb
xchg
jno
xchg
dec
and
loopne
push
lds
pop
or
in
inc
push
sbb
leave
jo
dec
jmp
loop
or
pop
cld
imul
out
pop
imul
xlat
scas
ss
arpl
popa
jae
ja
mov
flds
pushf
ljmp
fwait
cmpsl
dec
dec
pop
mov
popl
dec
sti
rclb
pop
adc
jle
and
jl
test
insb
and
jp
inc
jp
add
pop
imul
filds
cmp
lea
mov
and
cld
and
cmp
and
cmp
ljmp
inc
jp
xchg
mov
pop
xor
pop
push
mov
xchg
fisttpl
inc
mov
xchg
xchg
jno
cmc
mov
push
movsl
sbb
cld
push
iret
pop
imul
adc
mov
mov
repnz
hlt
inc
pop
ret
das
fiaddl
jno
push
aam
fwait
lods
mov
movsb
xchg
ret
pop
pop
testb
add
mov
adc
enter
mov
scas
ljmp
jns
les
mov
sub
sarb
lcall
push
scas
push
pusha
mov
loopne
repz
xchg
ds
sbb
js
les
data16
push
lods
cs
ds
out
stos
movl
sbb
xchg
jbe
sarl
cmpsb
jmp
mov
dec
jmp
push
pushf
hlt
movsb
ljmp
or
mov
ror
adc
jecxz
decb
and
sub
aad
xchg
push
push
pop
orb
mov
les
into
sub
outsb
jae
inc
mov
ret
mov
vminps
push
lock
stos
loope
sub
and
xorl
sub
inc
sti
enter
push
stos
int
out
push
sbb
clc
es
push
ret
inc
loope
loopne
stc
adc
sub
pop
out
stos
popf
mov
bound
ret
inc
adc
add
mov
jns
outsb
inc
cmp
push
cwtl
lods
iret
push
mov
mov
aam
in
or
sbb
ret
xor
xchg
push
mov
test
add
pop
divl
xchg
sbb
popa
lcall
mov
mov
clc
stc
jns
sub
addl
sub
cld
fstpl
mov
cmovbe
subb
xchg
push
roll
sub
inc
cmpsl
insb
outsl
or
lret
xrelease
sub
pop
lock
test
mov
mov
mov
xchg
aas
arpl
push
test
outsl
jecxz
xor
mov
xor
loopne
pop
mov
rcrb
popf
or
aas
outsb
call
scas
fstpl
lods
lods
int3
hlt
mov
lods
xchg
clc
xchg
xor
xor
push
hlt
push
test
xchg
sbb
jg
lds
mov
xor
aad
cmc
fstpt
add
jns
and
xor
fs
clc
and
orl
pop
mov
popf
jg
lahf
loope
push
cmpsb
add
adc
jp
in
es
lock
divb
shrb
sbb
add
sub
cmpsb
push
scas
sub
in
mov
cwtl
dec
pop
cltd
fdivrl
int
mov
fstpl
cmp
stos
insb
or
rolb
xchg
cld
popa
pop
push
mull
jno
mov
push
cltd
pop
pop
lahf
jmp
aaa
stc
sbb
mov
pop
pop
pop
mov
imul
mov
push
das
lock
push
scas
cmc
add
adc
inc
mov
push
and
cld
push
cmp
push
lahf
jne
or
les
jl
arpl
js
aam
or
outsl
mov
and
mov
dec
movsb
hlt
dec
dec
and
sbb
xchg
jbe
add
mov
icebp
cld
arpl
mov
notb
push
xor
sbb
insl
stos
sub
and
and
shrl
enter
fwait
stos
dec
lret
or
icebp
dec
sbb
cwtl
sub
daa
push
add
and
push
mov
shlb
iret
imul
inc
lret
inc
lea
movsl
mov
loop
fsts
jbe
add
movsl
mov
push
adc
test
aas
and
push
les
ljmp
adcl
or
jge
jnp
sub
fldpi
ret
mov
or
gs
icebp
cmp
push
push
cmp
cmp
ss
cltd
add
inc
scas
cmpsb
scas
addr16
pop
xchg
push
imul
push
rcrl
mov
out
cmp
in
loopne
faddl
arpl
add
mov
xor
popa
mov
xor
mov
ss
js
es
insb
mov
adc
shrd
ljmp
outsb
adc
std
push
cmp
or
into
test
add
jmp
dec
scas
leave
and
xchg
pop
adc
in
mov
push
ret
add
adc
movsb
jne
pushf
sub
jae
mov
jle
std
cmp
or
sub
aaa
xor
jae
xchg
aaa
fdivrs
pop
lret
jle
aaa
cmpl
and
std
jb
gs
lcall
push
pusha
inc
idivl
inc
out
jecxz
push
cmp
pusha
je
test
lods
pop
mov
test
sub
nop
js
leave
rcll
mov
stos
idivl
sbb
js
inc
cli
addl
or
push
stc
push
cmp
mov
mov
pusha
xor
daa
outsl
push
aas
movsb
iret
inc
or
xchg
sub
dec
in
cmc
mov
inc
or
shlb
test
dec
hlt
sub
mov
pop
cwtl
test
int3
add
mov
insl
ss
add
dec
scas
pop
xchg
or
test
mov
sti
rcll
hlt
xor
movsb
jl
jg
pop
add
xchg
xor
cmpsb
subl
jne
out
mov
pop
sbb
push
adc
sub
push
fidivs
push
push
daa
pop
push
aas
imul
dec
leave
aaa
sub
xchg
iret
mov
xchg
fadd
xor
push
xchg
out
mov
sbb
sub
xor
and
xor
mov
jae
insl
ret
adc
dec
and
fsts
daa
or
stc
xchg
push
mov
jnp
xchg
mov
jle
mov
xor
fadds
add
pop
sti
add
jo
or
in
add
out
lahf
inc
popf
popa
inc
jb
sub
sub
sub
mov
in
into
das
stos
insb
aas
ljmp
or
stos
in
dec
adc
mov
jb
iret
pop
out
jp
scas
mov
adcb
inc
loope
jns
and
cmp
frstor
mov
aas
aas
mov
test
mov
pop
dec
xor
pop
sub
xor
or
add
daa
mov
lods
insb
sub
bound
repz
add
cmc
outsb
out
aas
xor
negb
dec
add
cld
jl
sub
xchg
fiaddl
cmp
jo
fcomps
sub
shrb
add
or
add
je
push
addl
std
pop
adc
cld
pop
repz
mov
add
stc
push
or
sbbb
cli
cmp
dec
das
mov
int
scas
shll
jge
add
sbb
test
fnstcw
dec
bound
dec
loope
pop
mov
les
push
test
pop
adc
test
mov
daa
ficomps
lea
sbb
jmp
and
icebp
xor
iret
mov
adc
and
std
fisubrl
stos
pop
mov
xor
movsb
rorl
lret
fstl
mov
mov
mov
jmp
lock
bound
aad
sbb
xor
pop
les
jg
mov
shr
jnp
adc
add
sbb
sbb
mov
inc
fdivr
mov
cmp
jp
mov
addr16
fnstcw
mov
jmp
pop
add
out
insl
cs
out
mov
push
sti
pushf
sbbb
and
push
jnp
jo
mov
mov
mov
or
imul
lds
sbbl
xchg
loope
and
movsb
scas
mov
test
cs
loop
jnp
icebp
mov
jecxz
lods
inc
inc
mov
outsl
andb
out
cmp
xchg
ret
jnp
push
das
push
sti
cmp
lcall
mov
movsb
push
sar
add
loop
xchg
pop
adc
repz
and
mov
shll
xchg
out
les
push
andl
jns
jp
inc
dec
jb
inc
sub
inc
movsl
popf
jne
icebp
or
popa
cmpsl
or
push
int
lahf
push
iret
lcall
pop
fdiv
jno
push
mov
sbb
add
push
mov
mov
cmp
xchg
push
sbb
cld
sub
aas
shlb
jp
aaa
jns
les
popa
stos
sub
sub
mov
mov
shrb
mov
xorb
leave
imul
ljmp
mov
shrb
mov
fadd
push
cmp
add
add
pop
and
js
sub
mov
mov
adc
adc
pushf
mov
xchg
xchg
popa
test
addr16
add
or
inc
pop
pop
pop
dec
adc
loope
mov
and
fildll
insl
lret
movsl
shrb
daa
cmc
bound
mov
push
dec
in
lret
mov
or
out
push
cmpsb
int3
fcmovnb
lahf
int3
rcrl
into
popa
jecxz
dec
pop
lret
mov
inc
in
sub
nop
jge
push
repnz
mov
push
hlt
cli
dec
sub
and
mov
pop
push
xchg
dec
dec
push
cmp
test
and
and
imul
add
sti
mov
mov
and
xchg
cmp
mov
test
subl
je
popf
jae
jmp
sub
sub
jns
std
dec
cmpsl
insl
in
dec
dec
sub
loop
mov
stc
jae
xor
xchg
adc
movsl
mov
movsb
fwait
and
or
or
xchg
pop
shr
and
into
cmp
bound
dec
pop
iret
and
pop
xor
fadds
jmp
push
loope
xchg
jns
push
jmp
add
pop
pop
mov
dec
jecxz
push
jns
mov
cmp
inc
ret
iret
xor
clc
mov
cltd
fdivs
mov
jecxz
mov
dec
bound
loope
mov
pop
repnz
xor
int
jbe
xor
jb
pop
mov
xor
mov
add
pop
pop
sub
orl
sub
cmp
lea
add
sarl
sbb
out
lcall
push
pusha
cld
dec
dec
orb
pop
push
and
in
ja
inc
lods
or
sti
loope
int3
cld
xchg
dec
jecxz
dec
and
pop
fimull
add
sbb
icebp
in
lret
mov
mov
add
or
leave
mov
out
outsb
in
sarl
addr16
lds
pop
gs
mov
jg
sbb
cmpsl
push
sub
filds
or
dec
add
mov
xchg
outsl
cmp
insb
cmp
fidivs
mov
pop
mov
xor
test
xor
or
mov
scas
mov
mov
lds
sub
rclb
inc
adc
jecxz
repnz
enter
dec
lock
inc
pop
mov
sub
jle
and
jle
push
sub
or
leave
shll
cld
lods
push
out
xchg
jbe
push
and
push
cmpsb
mov
jg
aaa
inc
sub
mov
daa
mov
lock
dec
add
mov
rol
jo
mov
dec
dec
nop
mov
pop
incl
mov
sti
pop
je
out
subb
stos
loopne
or
jne
sbb
aad
push
add
jecxz
loope
lret
loopne
fnstsw
jnp
jge
shlb
push
mov
shrl
arpl
nop
cld
loop
mov
mull
call
stos
sbb
lcall
dec
fists
cld
adc
dec
cmp
pop
test
es
mov
sub
push
cmp
sbb
xchg
data16
mov
sub
inc
mov
jmp
inc
inc
fmull
sub
pop
xor
repz
ffreep
rclb
ljmp
or
insb
cmpsb
sub
arpl
cwtl
sub
out
in
leave
in
gs
jb
fcmovu
insb
imul
jmp
mov
repz
enter
stos
mov
loop
xchg
aad
jo
rep
sbb
dec
adc
ss
inc
and
js
jl
xchg
jle
rep
mov
loope
mov
xchg
data16
loop
test
jnp
mov
aas
testl
adc
mov
sub
les
movsb
insb
and
lret
scas
push
rol
popa
and
rolb
xchg
icebp
jmp
dec
pop
xor
sbb
mov
jae
push
cmp
mov
fnstcw
and
in
cmp
dec
jmp
jb
fldcw
inc
test
xor
or
cld
jle
add
xchg
dec
test
movsb
cmp
add
lcall
ljmp
int
sub
xor
push
and
inc
je
outsl
inc
xor
sbb
sbb
sbb
mov
pop
sub
mov
pop
xchg
and
mov
mov
xchg
push
fbstp
add
inc
in
xor
lock
sarl
popa
push
clc
in
lea
xchg
or
ss
push
xchg
hlt
ret
and
sub
sub
test
pop
or
ret
pop
loope
push
xchg
or
xor
shr
cli
fwait
aas
xor
ret
cmp
inc
loop
push
cltd
jg
stc
cmc
push
pop
jae
lds
cmp
loope
jecxz
xchg
push
jne
mov
cltd
repnz
xchg
cli
sub
dec
mov
ja
pusha
or
sbb
push
jae
in
add
push
test
or
push
sbb
pop
stos
vmread
mov
or
cmpb
imul
lret
adc
jmp
dec
xor
push
push
gs
in
loope
inc
push
sti
sub
pusha
scas
insl
xchg
mov
pop
jmp
int3
jp
imul
ret
loope
into
push
cmp
daa
or
flds
inc
mov
js
xchg
xor
mov
call
inc
ss
pop
jno
daa
mov
mov
cmp
lods
pop
sbbl
mov
clc
xlat
notl
mov
fisubs
pushf
shlb
adc
insl
lods
cmp
std
pop
lods
jo
xor
mov
movsl
ljmp
adc
mov
mov
arpl
shll
xchg
pop
js
sub
mov
cli
sahf
mov
in
mov
test
dec
outsl
mov
out
loop
pop
inc
cmp
mov
aam
adc
out
xchg
fwait
sub
pop
xchg
adc
push
aas
push
insb
and
jmp
adc
stos
out
cli
aad
popf
arpl
push
adc
xor
pop
lret
adc
inc
push
inc
cmp
shlb
in
pop
or
sti
mov
addr16
pop
stos
sub
bound
imul
cmp
dec
clc
xchg
test
es
enter
mov
cld
pop
adc
jnp
lcall
ja
cmp
aam
jae
stos
xchg
mov
popf
jns
int
and
push
sub
mov
fadd
sahf
pop
es
xchg
insl
push
mov
mov
rcl
movsl
sbb
mov
roll
mov
das
and
add
mov
xor
in
cmp
into
pop
xor
mov
leave
fdivl
add
cli
test
cmp
inc
clc
and
jns
xchg
add
jmp
sbb
sbb
add
arpl
ret
fucomp
inc
and
cmpb
loop
xor
int
xchg
negl
xchg
icebp
xchg
xlat
movsl
fs
les
inc
ret
xchg
outsl
mov
mov
cmpsb
xchg
dec
pop
sbb
cmp
jae
dec
or
jne
cmp
sub
addl
pop
loop
push
andb
sti
addb
adc
mov
ljmp
pop
mov
sbb
icebp
imul
insl
movsb
and
and
sarb
mov
ljmp
cmp
adc
xchg
pop
insl
lcall
adc
mov
xor
cld
into
and
mov
push
add
out
mov
fsubr
sbb
scas
popa
inc
or
jbe
jae
push
and
inc
mov
push
test
xor
scas
mov
fnstsw
fists
inc
inc
pop
arpl
outsl
sub
push
mov
mov
cmp
add
xchg
mov
rorb
mov
xor
outsb
lcall
mov
push
pusha
or
cmp
jge
int3
mov
inc
xchg
mov
fcompl
test
jo
xor
adc
repnz
mov
outsl
fs
jp
xchg
xor
lret
repz
out
mov
add
jge
mov
test
push
out
or
adc
and
or
ret
pushf
hlt
pusha
pop
aam
mov
js
xor
in
lods
ffreep
lea
inc
fs
fucomi
mov
push
rolb
pop
jmp
aaa
adc
or
ljmp
jb
stos
mul
sbb
or
push
push
push
sub
lods
sarb
jg
add
sub
xchg
movsb
push
push
sub
dec
js
enter
push
in
iret
cmp
lods
lcall
mov
mov
testl
jo
mov
mov
or
das
in
jae
lods
insl
push
dec
loop
lods
loop
idivb
dec
shlb
out
xor
dec
nop
out
jbe
dec
inc
repz
cmpsl
loopne
fnstsw
push
mov
mov
pop
or
add
fcomi
pop
inc
outsb
xor
insb
orb
enter
add
mov
cmpl
adc
add
fwait
call
push
iret
mov
fucomip
pop
popa
int
pushf
mov
fisubrl
out
pop
jge,pt
push
fadd
sbb
push
mov
icebp
insl
mov
inc
push
data16
pop
sub
inc
jecxz
push
dec
push
pop
and
mov
jge
mov
cmp
jl
xchg
jmp
leave
sbb
in
push
sahf
mov
mov
xchg
xor
je
jle
test
jmp
in
rorb
jmp
in
loope
sar
sahf
mov
in
mov
inc
repz
push
sti
jp
sbb
adc
and
ret
test
fnstsw
sub
cmp
dec
adc
inc
and
add
push
fdivrp
out
cmp
sbb
xchg
lods
out
test
xor
lcall
cmpsb
adc
adc
daa
push
das
mov
insl
mov
neg
je
inc
jmp
push
xlat
pop
mov
movsb
cs
notb
inc
dec
sub
mov
mov
out
xchg
sti
testb
add
dec
xchg
sbb
adc
pop
jl
mov
dec
xchg
dec
mov
xchg
jg
repnz
push
int3
mov
fildll
push
xchg
pusha
inc
in
push
cmpsb
pop
movsb
jne
pusha
or
mov
es
cmp
sti
das
lock
and
push
dec
pop
ss
jp
sub
pop
mov
xchg
sub
mov
pop
repz
fldl
dec
clc
fcompl
or
in
repz
fdivrs
cmp
popa
ficomps
jno
and
dec
jbe
insl
insl
push
cmc
jae
fiaddl
cmp
xchg
daa
pop
cmp
sub
jmp
sub
jae
pop
jno
andl
cmp
jb
addl
and
mov
fadd
fcomi
movsb
enter
scas
cmp
xchg
add
fwait
clc
popa
push
out
push
ljmp
push
divl
jg
aaa
scas
in
add
and
ss
fsubrp
dec
les
lret
into
pop
stos
sbbl
mov
repz
push
pop
sbb
sbb
rcrb
add
fsubs
dec
lcall
xor
loopne
mov
or
mov
ljmp
adc
fcmovb
lods
subb
jnp
pop
mov
daa
test
cmp
jns
dec
sbb
sub
pop
or
sbb
jnp
fldl
loopne
xor
push
es
cmc
inc
mov
push
mov
push
mov
cmc
mov
clc
mov
dec
pop
fnstsw
mov
pushf
push
push
inc
cmpsl
lods
into
cmp
and
and
fimull
inc
mov
aad
pop
add
jp
push
lods
mov
and
in
push
sti
add
dec
mov
mov
fcoml
mov
xchg
sbb
cs
cmp
pop
leave
clc
dec
xchg
xchg
ret
movsb
xchg
mov
and
lea
iret
nop
sbb
enter
cld
sub
inc
lods
lds
xor
iret
push
mov
icebp
xchg
jle
xor
push
imul
xchg
pop
into
leave
push
jle
iret
cmp
inc
test
mov
mov
fisttps
push
addr16
shl
int3
mov
jge
shrb
pop
xor
jbe
outsb
int3
cli
dec
pop
or
dec
jle
shlb
xlat
dec
jae
push
outsl
outsb
rcll
jmp
mov
mov
inc
push
dec
in
jmp
xor
push
pop
mov
mov
push
push
adc
or
ds
pusha
cmpsl
cmp
lcall
data16
pop
xchg
cli
dec
cli
jae
pop
imul
push
mov
sbb
sbb
cmp
repz
or
lods
sahf
mov
fidivl
insb
adc
mov
xlat
jp
push
mov
or
push
cwtl
jo
mov
sbb
xchg
lahf
ret
add
xchg
hlt
xchg
inc
insb
cmpsb
adc
pop
inc
sbb
iret
mov
cmpsb
leave
xchg
nop
cmp
add
and
clc
and
ds
shr
mov
orl
sbb
pushf
mov
insl
xor
push
loopne
inc
loope
or
in
xor
jne
ror
bound
aas
addb
mov
scas
popa
pusha
mov
aaa
pop
xchg
movsb
not
cli
fisttps
jnp
cmc
and
insl
mov
pop
dec
or
push
jae
ljmp
test
roll
loope
xor
and
and
or
and
lods
sub
popl
out
sbb
aas
pop
xchg
push
pop
cmpb
sub
divl
jns
sub
inc
dec
mov
mov
shr
pop
jne
xchg
mov
push
cmc
jle
andb
mov
cmp
pusha
or
adc
cltd
pop
int3
addb
imul
sub
jecxz
hlt
adc
xlat
ds
dec
push
idivb
mov
mov
ror
aad
cmpsl
in
pop
sbb
pop
mov
pop
xchg
icebp
xor
cwtl
iret
mov
aaa
rol
dec
fwait
in
aas
cmpsb
and
aas
adc
aaa
mov
fisttps
lahf
inc
push
mov
rcll
push
sahf
bound
mov
cmpsb
rcrb
ja
mov
sbb
adc
adc
movsb
pushf
mov
add
dec
int
inc
add
movsl
daa
dec
ret
cmovbe
sub
loop
jmp
mov
in
xor
cmp
lock
hlt
xor
or
cmp
decl
lcall
cmp
or
addr16
sub
xor
inc
and
and
or
or
sub
pushf
adc
xor
jmp
jecxz
jno
in
mov
cmp
pop
test
cmp
jb
ret
cmp
or
stos
ds
or
sarl
pop
xchg
cwtl
pop
mov
cmp
icebp
pop
data16
mov
loop
cmp
rol
pop
dec
in
mov
ja
into
cmp
test
les
outsb
addr16
lds
repnz
loope
adc
jl,pn
cmpsb
stos
je
pop
repnz
ljmp
mov
stos
jne
mov
xor
imul
inc
cmpsb
frstor
loopne
pop
or
mov
xchg
jbe
test
bound
lret
sub
in
push
mov
add
dec
push
ret
inc
pop
test
cld
adc
mov
adc
xchg
cltd
adc
loope
jp
and
cmpsb
sub
adc
scas
mov
pusha
sbb
cli
cltd
or
das
mov
lret
push
imul
mov
mov
xchg
sub
pop
aam
push
sbb
or
adc
aad
push
pop
mov
ja
lcall
mov
xchg
sbbl
push
mov
dec
pushf
or
cld
mov
sahf
push
dec
scas
mov
clc
and
sub
pop
movsl
clc
sbb
dec
cmp
test
enter
cwtl
dec
push
insb
jb
lret
outsb
fmull
leave
fs
lahf
into
rol
in
push
sti
rorb
in
xor
data16
daa
inc
rcrl
push
lods
ja
mov
hlt
pop
lea
movsb
cwtl
arpl
inc
dec
shlb
cwtl
xchg
pop
xchg
jecxz
add
jb
inc
sbb
arpl
ret
in
or
stos
mov
pop
inc
daa
rolb
cmc
jb
ds
scas
mov
orl
mov
cmp
jl
mov
xchg
sub
mov
xchg
mov
cmpl
lock
mov
cmp
adc
jecxz
shll
add
iret
stos
inc
jg
and
popa
icebp
sbb
ja
and
fcmovbe
inc
lret
mov
pop
imul
cs
sub
sub
imul
repnz
cltd
cmc
or
push
dec
push
cmp
dec
iret
jge
scas
pop
in
iret
lods
add
mov
fildll
out
mov
cmp
lret
inc
inc
popa
in
insl
mov
lods
fmulp
pop
push
dec
ja
jmp
into
test
in
cmp
fstpl
fbld
sub
pushf
call
push
mov
adc
jecxz
and
bound
pop
out
out
js
iret
xor
dec
inc
sub
cli
ret
push
imul
clc
bound
xor
js
imul
fwait
ror
adc
lea
aas
and
mov
push
mov
into
lods
inc
pop
icebp
add
pop
push
imul
mov
lahf
in
faddl
clc
xchg
leave
xlat
xchg
mov
jl
das
pop
lock
nop
push
outsb
cmc
push
loopne
mov
xor
fwait
mov
mov
push
push
xor
push
sahf
pusha
rolb
jle
xor
cmp
dec
sub
add
rcll
test
rorb
imul
cmc
ror
cmp
jns
pop
popf
rcll
out
push
sbb
sub
imul
stos
and
test
push
add
out
bound
pop
loope
jnp
loop
imul
xchg
mov
mov
cld
les
cmp
dec
push
cmp
mov
cld
mov
loope
push
fstps
iret
fistpll
cmp
aaa
js
stc
imul
mov
orb
or
pushf
loopne
inc
mov
sbb
movsl
cmp
hlt
pushf
rcrb
fstpt
sbb
xorb
adc
ja
cmp
fstpl
dec
call
push
loopne
out
dec
mov
sarb
popa
xchg
loop
mov
xchg
scas
or
cmp
jno
xlat
stc
or
les
mov
jle
sub
dec
es
stos
mov
repz
jne
in
mov
pop
inc
insl
aaa
aaa
mov
push
scas
push
cwtl
loop
cmpsl
lea
xor
mov
lods
pop
sahf
mov
add
mov
cmc
imull
xchg
xor
sub
xor
pop
and
xchg
lds
mov
mov
push
cmp
pop
setne
in
or
ss
xchg
dec
push
dec
jo
insl
adc
lcall
pop
inc
les
fscale
dec
lock
aaa
mov
aas
cmpsb
xchg
movsl
xchg
cmp
push
xchg
mov
lret
xor
sub
mov
in
and
sub
xchg
inc
cltd
jo
div
and
or
fmuls
push
in
inc
mov
and
push
pop
push
xor
jge
fs
fucom
inc
or
pop
gs
lcall
jns
adc
dec
loop
lock
add
fstps
xchg
sub
mov
mov
or
mov
mov
cwtl
and
js
adc
adc
fsubs
jmp
lahf
mov
xchg
lock
dec
outsb
add
or
popf
mov
sub
push
ficoms
stos
push
aas
dec
sahf
das
ror
and
pop
iret
pop
jae
or
out
jle
ret
cmp
ret
adc
repnz
xchg
leave
stos
mov
outsl
div
popa
mov
add
jle
clc
les
push
push
push
pop
jle
sub
xchg
mov
push
mov
or
push
mov
jae
push
xor
outsl
mov
ljmp
sub
dec
cmp
arpl
in
fnstcw
fwait
sbb
pusha
dec
sub
cwtl
test
mov
and
fmul
jno
test
loop
test
int
xor
sub
stos
dec
push
clc
jno
jp
mov
adc
dec
test
mov
and
hlt
sahf
xor
test
cmpsl
pop
popf
fists
xor
push
mov
sahf
mov
call
fidivrs
scas
addr16
pop
es
in
sahf
cmc
out
and
adcb
fwait
mov
inc
push
loop
jne
and
pop
call
inc
ja
xor
xor
jb
or
or
jp
dec
lea
mov
jecxz,pt
sub
jne
push
sbb
sub
inc
imul
fidivs
jb
mov
push
rorb
ret
fdivrs
xchg
mov
stc
test
xchg
iret
push
jl
movsl
std
daa
mov
push
lahf
pop
mov
sbb
mov
fstpl
fiadds
daa
pusha
mov
ljmp
mov
push
iret
jb
outsb
jno
aad
xor
inc
push
or
orb
add
daa
or
test
loope
aam
subb
ljmp
inc
loop
aaa
mov
cwtl
adc
aaa
test
jns
or
insb
or
ja
sub
and
and
push
push
ds
push
aam
xchg
mov
mov
pop
test
fwait
call
pushf
pushf
jae
jne
int
inc
daa
cmpsb
push
scas
popf
pop
int3
cmp
repnz
xor
cmp
inc
ss
addr16
icebp
out
repnz
push
push
mov
jg
push
or
adc
dec
xchg
pop
mov
ja
stos
test
stos
pop
les
rorl
arpl
repz
and
xchg
inc
adc
jne
mov
adc
pop
test
xor
adc
mov
dec
inc
mov
adc
repnz
popf
popf
push
cli
push
ljmp
and
filds
cmpb
mov
je
pop
loopne
mov
push
inc
arpl
mov
insb
xchg
scas
rol
sbb
pop
out
add
sub
imul
jnp
or
adcl
pop
push
or
call
cli
xchg
aaa
jmp
pop
xor
stc
cmc
ss
dec
dec
fdivs
push
dec
in
mov
outsl
xor
xchg
ret
mov
jle
or
cmp
int
push
outsb
cmpsl
jno
push
icebp
xchg
dec
fistpll
cmp
cmpsb
fsubrs
jle
ret
and
es
jmp
xchg
shlb
jbe
imul
lds
pop
cmp
add
mov
std
nop
xstore-rng
cmpsl
inc
pop
push
ret
aaa
addr16
cmpsb
jmp
lret
gs
test
sarl
jge
call
add
adc
ret
jno
mov
and
out
aam
xor
cmc
int3
ret
leave
inc
pop
pop
inc
loope
sub
test
cmp
aas
pop
sahf
jbe
mov
mov
xchg
cwtl
jo
inc
xchg
jnp
cmp
dec
mov
das
and
add
mov
push
cmp
addl
cmp
pop
repz
and
lods
mov
xchg
add
push
mov
mov
nop
push
test
stos
shrb
mov
sarb
lods
lret
aad
addl
es
add
adc
and
inc
out
pushf
sub
dec
xlat
dec
add
mov
pop
push
hlt
out
and
bound
mov
mov
daa
movsb
hlt
rcl
pop
jmp
js
out
mov
inc
inc
sub
xchg
xchg
or
sub
jno
push
push
std
xchg
push
outsl
fwait
mov
push
push
shll
and
loopne
scas
ljmp
push
mov
insl
dec
jecxz
sub
in
jne
lock
cs
call
test
jge
out
ret
mov
jle
aad
cmc
jno
sub
adc
mov
or
mov
adc
mov
jnp
mov
std
push
int3
mov
sub
gs
mov
adc
cmp
and
add
out
shll
out
mov
adc
popa
mov
dec
scas
sub
xchg
add
call
mov
adc
clc
pop
mov
inc
bt
mov
fbstp
rcll
add
ja
rcll
pop
ss
mov
mov
stc
mov
lahf
fwait
mov
gs
or
push
sbb
jae
iret
mov
push
push
or
sbb
mov
nop
lret
add
incb
jmp
or
clc
mov
inc
jb
xchg
ss
add
fstps
mov
out
sub
es
mov
cmpsl
fildl
push
adc
sub
and
addb
das
in
pop
lret
pusha
mov
rcl
dec
cli
jae
pushf
jmp
int
mov
sbb
or
cmpsl
xorl
inc
outsl
jno
push
sub
lods
cltd
nop
jp
push
sbb
hlt
loopne
in
push
inc
sbb
push
aas
push
cmp
int3
out
jbe
stc
pop
sbb
mov
lret
dec
mov
scas
cmp
sbb
iret
push
sbb
test
pop
xchg
daa
fbstp
inc
fnstsw
out
jmp
ret
es
jns
push
rcr
std
mov
fstpl
dec
movsb
pop
and
mov
mov
mov
in
int
sbb
out
std
shrl
rol
cmp
adc
cmp
fwait
push
pop
or
sub
in
rolb
popa
xor
xor
shrb
imul
out
mov
pop
jmp
inc
sub
sbb
or
xor
sbb
fs
test
sti
cli
test
jge
das
pop
sbb
outsb
ds
and
ljmp
iret
inc
cltd
jnp
fidivs
icebp
ds
out
ljmp
aam
push
adc
rclb
sarl
sub
jne
loope
dec
push
add
inc
adc
and
loop
aad
cmp
daa
lea
gs
pop
adc
mov
cmp
cmp
inc
or
mov
rclb
call
xchg
divsd
xlat
nop
and
cmp
xchg
popa
outsl
pop
scas
inc
stos
jne
cmp
jecxz
loopne
jp
and
jo
test
push
cmp
ret
hlt
fcos
sub
xor
mov
push
fs
push
xor
fisttpll
ds
fidivl
enter
cmpsl
es
adc
inc
pop
xchg
addr16
fcmove
mov
pushf
adc
lods
scas
mov
pop
loope
pop
loopne
repz
scas
jge
insl
stos
jae
sub
lret
divl
pop
loop
ljmp
into
repnz
in
mov
hlt
fwait
mov
and
jns
int
es
xor
popf
enter
sahf
jecxz
dec
mov
arpl
xchg
jo
ret
xchg
xor
fdivs
mov
neg
push
lret
pop
cli
fldl
movsb
sahf
xchg
and
xchg
mov
sub
data16
xchg
xchg
mov
sbb
add
jnp
mov
fisubrl
stos
lock
out
in
pop
and
add
mov
pushf
dec
nop
shlb
xchg
jge
out
outsb
nop
mov
je
jg
sbb
into
jns
jae
rcrb
sub
add
ja
std
mov
push
mov
and
xor
or
cmpl
ror
dec
scas
cmp
fadd
out
lea
jne
lock
mov
std
mov
xchg
xchg
ror
mov
movsl
icebp
xchg
out
or
mov
popa
adc
sbb
and
mov
int3
pop
daa
xchg
adc
outsl
lret
xchg
mov
and
enter
push
push
sahf
mov
jle
test
fucomi
popf
ficoms
nop
add
xchg
mov
push
pop
jg
out
mov
and
jb
icebp
in
jns
and
inc
js
or
and
cmp
cmp
xchg
xor
mov
pushl
dec
test
cltd
inc
pop
cmpsl
pop
push
dec
cmp
sarl
push
xlat
ljmp
lds
in
jno
stc
orb
data16
vpackssdw
lods
call
mov
insb
pushf
push
imul
push
movsl
in
inc
cmp
mov
sub
in
xor
stos
inc
xor
addl
sub
cmpsl
test
xlat
lods
cld
inc
mov
sbb
lahf
cmpsb
les
sbb
cmp
fsubrl
stc
out
ret
adcb
aam
orb
mov
or
xchg
mov
fcoml
adc
stc
mov
mov
add
xor
cmp
mov
mov
pop
lea
sub
fs
idiv
cmp
adc
lret
sbb
testl
in
and
mov
ret
pop
jle
test
sbb
jne
adc
fs
in
add
pop
ss
aad
sub
mov
sti
lcall
add
dec
add
out
iret
and
pop
icebp
imul
aas
int3
inc
lods
scas
arpl
jno
mov
out
ss
jne
rorl
movsl
mov
pop
lea
jecxz
movsl
insb
sub
test
sbb
pop
fdivs
outsb
xchg
dec
pop
ret
mov
outsl
outsl
mov
jnp
push
dec
pop
push
mov
ret
and
scas
mov
sahf
lods
addb
arpl
arpl
add
pop
nop
pop
jae
fsts
sub
in
adc
add
pop
xor
addb
jecxz
loop
cmp
ss
inc
mov
inc
jecxz
add
mov
sbbl
mov
mov
test
mov
adc
test
cwtl
scas
add
sub
dec
hlt
cwtl
std
pop
lock
cmp
loope
mov
outsl
adc
mov
lret
inc
pop
jae
lea
and
ljmp
imul
mov
jae
cwtl
out
or
jnp
or
roll
push
test
xor
fwait
and
fdivrs
cld
insb
xlat
icebp
push
data16
lcall
add
push
push
sbb
cld
pop
adc
bound
pushf
fnstenv
ficomps
pop
cltd
sahf
repz
inc
dec
mov
in
pop
push
cltd
adc
jp
adc
sbb
dec
jb
cmpl
loopne
negl
cmpsb
push
clc
and
xchg
sbb
loop
aaa
stc
add
jge
adc
daa
push
mov
inc
mov
ret
or
dec
lods
loopne
adc
lahf
lds
dec
xor
data16
xor
shl
xchg
mov
cmp
shrb
adc
dec
push
jne
jnp
fwait
icebp
mov
int
out
xchg
or
mov
popf
fisubrl
movsb
and
or
xor
pushf
xchg
and
sub
jp
cmp
popa
add
sbb
dec
mov
sbb
xchg
aam
jp
daa
stc
lods
cmc
xorl
pop
mov
int3
add
je
jge
pop
loope
xchg
iret
sbb
sbb
xchg
in
dec
jbe
das
dec
cmpb
loop
sub
pusha
jnp
popf
cwtl
mov
xor
cmpsb
into
ret
mov
fadd
incb
mov
aad
push
mov
iret
push
mov
sub
push
xor
repnz
cmpsl
xor
dec
fcmovu
mov
arpl
test
das
ret
xchg
cmc
add
mov
arpl
dec
adc
add
jb
loope
inc
cmpsb
imulb
push
xor
jecxz
dec
mov
cmp
aas
push
fwait
mov
mov
mov
inc
or
and
lds
inc
sti
imul
flds
xchg
ret
jbe
push
hlt
int
ret
loopne
jnp
loope
rolb
filds
jno
fwait
cmp
jg
push
xchg
push
scas
scas
ds
pop
mov
sarl
leave
add
mov
dec
ja
lods
int3
movb
xchg
xor
mov
pop
pop
jp
xor
push
jecxz
adc
stos
pop
iret
hlt
sbb
lods
push
sahf
stos
mov
and
xchg
in
sbb
adc
adc
xchg
xor
out
cli
into
mov
and
js
ficompl
sti
out
leave
inc
cwtl
adcb
mov
in
xchg
test
out
add
push
lret
lock
adc
pop
bound
cwtl
in
inc
inc
mov
dec
dec
jmp
mov
dec
xorb
call
add
xor
loopne
mov
push
xchg
mov
lods
lret
outsb
enter
test
adc
push
xor
mov
imul
test
scas
aas
data16
sarl
inc
test
insl
mov
xor
mov
add
outsl
mov
cmpl
lods
cmp
clc
fisubl
add
sbb
insb
dec
cmpsb
jne
push
add
mov
outsl
cvttps2pi
push
inc
xchg
dec
enter
cmp
push
lock
sahf
cmp
sbb
fisubrl
imul
sbb
pop
lret
divl
scas
inc
or
xor
sub
out
xchg
fisttpl
rol
movsl
inc
sbb
shlb
lret
cmc
and
fdivl
dec
xlat
sub
push
dec
call
jmp
or
loop
sub
mov
mov
mov
xor
jge
and
ss
dec
and
lahf
test
das
push
in
xchg
push
dec
ss
stc
in
xchg
or
xor
mov
dec
pusha
mov
pusha
mov
stos
sbb
arpl
rcr
in
xchg
pusha
pop
insl
loopne
inc
popf
cmp
pop
idivb
pop
fsts
jecxz
scas
mov
popf
fimull
int
jns
adc
and
in
mov
sbb
je
cmp
cmpsb
stc
shlb
inc
inc
jnp
jb
jno
loopne
pop
adc
and
call
bound
idiv
faddp
mov
loopne
add
notb
bound
xchg
cmp
xchg
test
mov
adc
mov
inc
mov
loopne
xor
push
add
pop
negl
jmp
fstp
lock
dec
movsb
pusha
dec
cli
das
mov
lods
xor
outsl
je
fldt
push
nop
pusha
xchg
iret
sub
mov
jg
mov
push
inc
pushf
or
jnp
in
in
sub
push
inc
popf
add
gs
pop
rorb
jecxz
jnp
xchg
and
dec
loope
xchg
pop
pop
cmpsl
jno
sub
cltd
lret
fwait
push
popf
sbb
popa
out
movsb
imul
or
je
mov
enter
dec
in
in
pushl
into
dec
xchg
ss
add
and
leave
arpl
jg
mov
push
rcrb
mov
xchg
vpmulhw
or
cmpsb
test
xchg
loop
jmp
sub
cmp
xchg
sbb
xchg
das
out
jle
add
out
cmp
push
inc
mov
inc
call
inc
aam
dec
lds
mov
inc
insl
into
and
pop
sti
xor
ja
jl
dec
aas
jmp
aam
add
cld
into
scas
test
fwait
xchg
xor
addr16
shl
sbbl
call
adc
shrl
ficoms
cld
ss
push
inc
push
and
inc
jg
test
imul
push
xor
popa
int3
insb
in
xchg
push
fldcw
or
or
sbb
push
js
jno
xchg
inc
inc
and
out
lods
push
fs
jbe
sahf
push
fstpl
or
mov
sbbl
int
dec
repnz
push
xlat
push
cwtl
sbbl
in
xorb
orb
pop
adc
andb
rolb
test
fstps
push
sub
mov
shr
loopne
jge
inc
movsl
outsl
test
sbb
mov
and
or
cmc
int3
pop
pop
pop
aas
xchg
das
add
out
cmp
int
mov
int
mov
pop
cwtl
jecxz
dec
out
adc
les
sbb
add
nop
pop
outsl
and
test
inc
xor
shrb
jne
mov
loope
fsubrl
sub
incl
fstps
push
pusha
push
cmp
sub
out
stos
ss
shr
les
pop
cmpsb
push
dec
sub
popf
orb
dec
xchg
jo
int
dec
lock
cmc
add
or
mov
jbe
shlb
jg
dec
sub
insl
jp
push
lds
cmp
lcall
out
repz
push
add
pop
sahf
aam
mov
jl
out
or
or
mov
cmp
in
dec
inc
xchg
mov
dec
data16
gs
inc
es
repnz
xchg
push
int
fwait
inc
mul
fisubs
mov
cmpsl
rcr
inc
xor
jge
and
loop
mov
cmp
loop
push
push
inc
pusha
hlt
in
loopne
sbb
cmp
enter
test
push
jnp
pop
push
mov
imul
add
ret
inc
rorl
icebp
in
fistps
hlt
mov
or
dec
xchg
mov
fstpl
xchg
aam
popf
int3
xchg
push
sbb
lcall
dec
mov
mov
dec
xor
out
cltd
mov
adc
push
push
xchg
call
push
fwait
mov
aas
push
pop
mov
aam
stos
out
cmp
push
cltd
or
xor
push
movsl
iret
rcrb
repz
hlt
sbb
cmp
jns
ds
push
pushf
cli
push
cmp
out
lock
inc
push
sub
add
iret
push
inc
xchg
les
push
sbbl
mov
and
adc
movl
push
inc
or
hlt
sbb
call
inc
jl
add
or
cmc
mov
add
shrl
outsb
mov
icebp
lds
mov
fcmovnb
sarb
mov
jbe
adc
xor
in
xlat
mov
jb
call
aam
sbb
dec
repz
imul
jnp
xor
int
clc
cmp
cmpsb
imul
xor
pop
iret
out
shl
gs
mov
rorl
xlat
nop
cwtl
jle
lret
push
test
in
push
or
nop
sti
pop
mov
mov
les
ret
pop
sbbb
imul
mov
out
fsubl
mov
cmc
jecxz
js
test
pop
sbb
or
jg
lods
adc
xchg
push
xchg
and
idivb
cltd
mull
sub
or
sub
sbb
xchg
cltd
sahf
icebp
stos
bound
xchg
xchg
rorl
sub
jne
xchg
stos
sbb
stos
mov
test
add
lock
jo
es
sbb
daa
sbb
pop
js
cmc
jns
inc
mov
and
lods
divb
rcrl
mov
ficompl
push
jno
mov
sub
nop
movsb
les
daa
xchg
insl
pop
sti
ret
cmp
stc
sbb
notb
xchg
roll
mov
hlt
and
stc
shr
pusha
cli
pusha
cmc
daa
mov
sbb
repnz
dec
pop
call
dec
sub
mov
xchg
add
rcrl
dec
daa
jb
arpl
jnp
mov
pandn
cmpsl
xor
mov
push
fdivs
fldenv
push
mov
dec
scas
cmp
ret
xchg
xor
mov
cmpb
js,pt
fsubl
sbb
mov
mov
inc
int
fwait
mov
mov
mov
sub
mov
push
push
pop
xor
mov
xor
adc
sbb
mov
insl
adc
and
mov
imul
adc
cmp
mov
inc
cmp
mov
push
test
inc
cs
mov
aaa
aad
movsb
out
pop
cmp
ficoms
mov
cmc
scas
cvtps2pd
pop
ja
sahf
lret
fwait
push
fiaddl
and
dec
outsb
jl
stos
jle
outsl
inc
in
jo
pushf
icebp
inc
cmp
ja
lea
adc
and
aaa
lods
and
fidivs
insl
lahf
adc
inc
popa
xchg
mov
sub
pop
orl
sub
dec
les
cs
fnstcw
mov
xchg
push
in
push
xor
test
stc
cmp
insb
flds
push
adc
lcall
jg
inc
inc
pop
mov
lret
or
movsl
icebp
aas
cld
push
je
rol
lods
fcomps
jp
cmp
jmp
mov
sbb
jb
ret
cmp
mov
cmp
cld
mov
clc
jbe
divb
and
out
adc
lds
ljmp
js
bound
test
inc
stc
str
cli
ss
jno
pop
pop
es
lock
lods
rcrb
inc
fidivrl
leave
repz
adcb
push
imul
mov
and
push
fldl
out
mov
jbe
dec
mov
movsb
fisubrl
jmp
sub
pop
mov
cmp
mov
sti
add
add
ret
mov
mov
fdivrs
inc
inc
and
les
xchg
icebp
mov
mov
or
sbb
inc
out
push
into
dec
adc
in
mov
test
sarb
dec
inc
mov
adc
data16
adc
push
out
jmp
das
adc
inc
dec
iret
add
aad
mov
pop
cltd
mov
jne
in
fucomi
movsl
in
shlb
test
xor
adc
jmp
add
or
xchg
add
das
jp
jne
in
movsb
xor
mov
push
mov
lret
aas
roll
lret
loop
xor
xchg
clc
pushf
jb
xchg
or
sbb
dec
stc
fisttps
push
inc
sbb
mov
pop
into
jbe
stos
sub
jnp
mov
int3
mov
dec
ss
adc
test
into
pusha
cmpsl
fistl
xchg
scas
mov
fwait
dec
push
jnp
aaa
call
js
pop
mov
jl
xor
les
rolb
mov
mov
mov
sbb
sbb
mov
xor
dec
shrb
jl
sbb
les
xorb
and
cmp
lret
fbld
inc
aas
icebp
sarb
xchg
add
push
in
and
mov
vmovntpd
cmpl
cmp
aas
jecxz
ret
clc
adc
add
int3
sub
aad
pop
lahf
addr16
leave
sub
sbb
mov
insl
jae
dec
lret
pop
jge
push
andb
pop
dec
push
pop
push
daa
mov
adc
cmp
jnp
int
inc
and
pushf
in
xchg
pop
push
add
sub
lcall
and
pop
int
cmc
jmp
fwait
sub
loope
push
sbb
push
mov
and
cmp
leave
in
scas
sbb
sbbl
lret
inc
pop
xchg
ljmp
add
mov
mov
adc
repz
fisubrl
xor
lret
pop
jnp
push
ret
stos
add
lods
mov
imul
mov
mov
and
fildl
push
pextrw
sub
aas
sbb
aam
leave
mov
jg
std
pop
shlb
or
xlat
xchg
outsb
mov
pop
jo
mov
rcl
jo
je
mov
mov
jb
iret
fstl
das
in
int3
ss
mov
xor
adc
insl
shlb
imul
pop
pushf
into
mov
pop
lcall
jmp
jg
sbb
or
xchg
jnp
mov
mov
scas
or
mov
jb
jns
dec
xchg
and
sub
sub
xchg
sbb
leave
xchg
nop
test
in
test
inc
pop
stc
push
pop
bound
mov
mov
aam
mov
push
sub
loopne
out
jae
ss
xchg
or
add
loopne
push
mov
mov
rorl
jmp
cmp
sbb
lock
arpl
cmpsb
test
adc
fs
add
jle
xlat
in
pusha
inc
xor
mov
jecxz
lret
xor
loopne
or
shrb
jne
shlb
cmp
add
cmpl
fistpll
mov
add
and
icebp
sbb
loop
out
xor
xor
or
jne
jno
jno
clc
outsb
sub
add
scas
cld
repz
pop
fimuls
or
or
adc
rol
icebp
mov
xchg
stos
sahf
xor
jne
jne
pop
inc
mov
mov
mov
imul
mov
call
scas
in
mov
cmp
jne
int
test
fisubs
xchg
cld
or
test
and
push
and
cmp
cmpsl
pop
xchg
shlb
jl
mov
jns
mov
sub
mov
mov
cld
mov
and
ds
jnp
int
outsb
mov
jo
in
sub
pop
adc
and
test
and
scas
scas
push
int3
add
adc
mov
clc
push
mov
xchg
arpl
movl
adc
adc
popa
scas
and
mov
mov
sub
sub
dec
cmp
std
add
jno
mov
lcall
pop
popf
mov
jb
inc
jp
test
jno
out
push
sbb
sbb
add
xchg
and
or
adc
dec
jge
in
scas
outsb
jmp
call
daa
mov
outsb
jne
add
and
xor
movsb
inc
mov
sbb
xor
dec
and
adc
das
gs
sub
jecxz
nop
test
pushl
stos
repz
or
scas
imul
or
or
cltd
push
rcrl
push
fst
jmp
cmp
ret
loopne
push
sbb
push
pop
mov
shll
adc
inc
cmpsl
mov
aas
inc
stc
cmc
mov
xor
push
push
loopne
pop
lret
sarb
mov
xor
lahf
rorb
pop
and
cwtl
stos
xchg
lods
fs
pop
aas
mov
mov
test
loope
neg
clc
mov
fcoml
pop
pop
pop
flds
pop
xchg
les
push
add
pop
iret
adc
loopne
jmp
mov
out
mov
mov
insl
cld
cmp
inc
lcall
ljmp
xchg
sub
push
adc
mov
and
adc
test
xchg
or
mov
cs
add
add
add
addl
add
inc
jp
das
lea
incb
scas
sub
subb
sbb
clc
ret
xor
outsb
xchg
push
jbe
adc
xlat
dec
jp
sti
ret
sbb
sub
add
pop
imul
or
cmp
inc
movsb
imul
jecxz
mov
add
cmp
jecxz
out
pushl
ret
aaa
mov
jb
loope
jecxz
das
ja
adc
lods
jnp
js
push
adc
out
lds
mov
stos
pop
cs
leave
mov
sbb
stc
inc
push
jg
hlt
add
or
inc
lahf
gs
loop
fsubr
movb
in
stc
jl
jg
or
fadd
sbb
push
dec
xor
xchg
fsubs
out
insl
xchg
xor
mov
jl
js
push
loopne
out
movsl
mov
inc
dec
cmp
in
add
xor
loope
rorb
lret
inc
dec
dec
test
pusha
pop
inc
sub
mov
lahf
dec
xor
cmp
ja
cltd
mov
or
push
jb
mov
testl
cmp
stos
lcall
xor
lcall
adc
int
inc
andl
aaa
push
cld
sbb
pop
sbb
imul
xchg
aaa
push
test
subb
dec
mov
hlt
ret
mov
adc
push
dec
cltd
inc
scas
cmpl
cmc
mov
jbe
jo
stos
xor
push
in
jge
mov
or
push
cmpsb
movsb
hlt
xchg
ficoms
fnstsw
cmp
nop
dec
imul
xchg
sub
mov
mov
jae
sub
inc
dec
mov
mull
je
or
pushf
dec
lret
sarl
mov
dec
dec
mov
popf
stos
lock
sub
push
dec
adc
sub
mov
xchg
in
int
cli
sub
stos
xchg
mov
xor
xchg
pop
xor
jp
insb
add
jne
test
xor
xor
dec
and
mov
mov
pop
mov
adc
test
sbb
or
push
sub
stc
leave
in
dec
jecxz
subb
sub
cmp
xchg
push
push
cwtl
inc
mov
push
out
sub
scas
add
test
inc
addr16
pop
out
mov
jne
loopne
xor
push
clc
add
into
add
pop
aad
jae
popf
int
sbb
inc
mov
xor
in
lods
jo
mov
orb
into
std
ret
jb
scas
stc
add
in
cs
cmpsb
int
ret
mov
cmpsb
xor
or
sar
gs
sahf
adc
arpl
repz
pop
inc
inc
jb
ja
or
push
xchg
pusha
cwtl
loope
pop
ja
pop
pusha
pop
xchg
and
into
outsl
addr16
jnp
jbe
mov
mov
or
push
imul
rorl
sub
jo
mov
insl
enter
je
sub
adc
pop
movsb
clc
jle
ds
sar
add
mov
test
mov
data16
push
aas
scas
leave
push
arpl
inc
mov
lock
into
outsl
and
sub
jb
fmull
pop
jae
cmpb
mov
mov
rcrb
xor
sbb
push
add
inc
mov
cwtl
sahf
mov
push
test
test
addr16
icebp
fstl
dec
sub
push
loope
push
or
and
js
mov
mov
insl
xchg
repz
fsubl
rorl
push
pusha
xchg
pop
les
and
ljmp
shrl
cmc
int
or
xor
outsb
aam
xor
push
jecxz
xchg
inc
lret
sub
test
pop
pusha
pop
ret
pop
movb
mov
arpl
stc
lods
addr16
adc
test
sbb
add
mov
arpl
ret
ss
es
mov
scas
lret
add
cmpsl
dec
pop
pusha
test
test
inc
jle
push
xchg
test
pop
aam
fistpll
pop
lods
and
mov
sbb
jne
cltd
ss
xchg
aam
pop
aam
adc
xor
psllw
pop
stos
ljmp
mov
and
mov
fdivrl
aas
and
pop
aam
ljmp
and
dec
sbb
in
cmpsb
addb
add
nop
ljmp
loope
orl
loope
jno
cli
sbb
sub
pop
cld
orl
mov
or
push
sub
ds
scas
add
xchg
shl
clc
outsl
jge
pop
add
es
cmp
push
pop
into
xor
ret
adc
pop
cmp
and
cmp
add
int
mov
loope
sub
test
int3
in
movsl
loop
je
iret
and
xchg
bound
mov
cmp
out
sub
scas
popa
cmp
pop
inc
add
dec
popf
mov
sarb
mov
sarb
fcompl
pop
aaa
andl
jp
sbb
adc
push
movsl
aam
cs
filds
in
stos
rep
pop
pop
push
xor
add
subb
mov
add
jge
scas
xchg
mov
jbe
lods
sub
lds
push
leave
sub
or
and
xlat
int3
mov
cwtl
xchg
cmc
repnz
outsl
xchg
or
das
inc
xchg
sub
stos
push
xchg
jle
or
sub
adc
jp
sahf
rol
scas
and
inc
cmpsl
inc
imul
divb
das
sub
in
ds
pushf
inc
ret
inc
leave
and
arpl
addr16
shl
movsb
insl
loop
mov
mov
mov
sub
dec
jl
adc
mov
sub
pop
movsl
out
mov
cltd
in
jnp
cltd
pop
cmp
pushf
cwtl
and
cld
dec
jp
or
push
bnd
fdivr
lods
nop
jnp
adc
andb
jmp
ljmp
bts
push
push
jne
sbb
mov
dec
vfrczsd
clc
ret
in
sti
sahf
push
insl
inc
shl
lods
loop
dec
cltd
adc
inc
pusha
mov
stos
mov
mov
lret
mov
mov
xchg
test
out
adc
dec
arpl
rol
jge
mov
xchg
xchg
repnz
lds
adc
cmp
cmc
das
pop
adc
dec
inc
mov
nop
jmp
jo
not
push
pop
out
rep
sti
cmp
negl
pop
scas
das
idivb
stos
cmpsb
inc
popf
fcoml
jp
pop
mov
push
js
xor
inc
out
mov
inc
enter
mov
pop
mov
sub
jns
mov
jae
loopne
jno
ret
sar
mov
or
aad
cli
inc
sarb
fs
or
arpl
xor
sahf
fisubrl
xchg
ja
inc
mov
jne
xchg
inc
jle
adc
jecxz
nop
push
aas
mov
dec
int
aam
loop
cmp
sbb
stos
mov
cmc
les
dec
cmovb
shlb
mov
call
mov
inc
pop
nop
mov
loopne
ljmp
cld
ror
xchg
inc
adc
dec
adc
mov
xchg
fldt
rcl
ret
sbb
out
std
cmp
jmp
cli
arpl
popa
data16
add
insb
xlat
and
movd
aaa
or
mov
subb
mov
ss
mov
sub
mov
repnz
and
inc
aam
ja
shll
addl
movsb
mov
xchg
inc
sbb
mov
mov
pop
shr
mov
aam
xchg
mov
and
sub
jl
or
jmp
fadds
stos
push
jg
ret
mov
pop
ret
dec
mov
push
inc
and
scas
mov
xor
inc
xor
cs
or
sbb
mov
mov
add
pusha
rorl
push
xlat
jl
outsb
fdivr
aad
ret
jle
pop
push
out
mov
jle
loop
ret
xchg
sub
lret
ss
out
cmp
icebp
loop
or
pop
je
gs
mov
push
shl
test
rcl
push
pop
dec
push
out
lods
sub
shlb
jp
stos
rol
fs
mov
pop
rcl
divb
add
lret
mov
es
dec
add
pop
cmpsl
inc
jb
std
sub
popf
sub
nop
test
in
pop
jg
dec
rcl
jns
push
enter
shrl
push
mov
inc
test
cltd
movsb
out
fcoms
adc
outsb
push
iret
cmp
cmp
in
jmp
lret
nop
or
fcom
xor
fstpl
mov
call
dec
pusha
adc
pop
xorb
icebp
mov
je
push
jge
or
into
pop
cmp
ret
push
int3
pop
jecxz
shlb
jp
adcl
ret
movsl
ret
xchg
inc
mov
jge
push
or
aam
dec
push
push
adcl
lret
shll
repnz
cmpsl
out
sub
or
xor
adc
pop
lods
ja
mov
push
dec
xchg
jae
into
jp
rorl
xchg
push
lret
or
hlt
negl
xchg
push
loop
mov
push
ficomps
mov
sbb
pushf
fdivs
icebp
fdivl
ret
lahf
fdivrl
out
stos
ds
out
cmpb
out
mov
loopne
or
dec
pushl
pop
stos
sbb
ss
mov
ljmp
lods
or
sti
mov
imul
shrb
roll
inc
lahf
mov
jecxz
dec
lret
test
in
clc
add
and
scas
fdivrs
push
notb
push
loopne
jno
dec
xchg
les
push
enter
das
repz
adc
inc
adc
sub
jmp
out
pusha
add
int3
adc
ret
pop
pop
mov
xchg
popl
pop
test
mov
adcb
dec
sahf
aad
ljmp
imul
push
inc
fs
add
and
fldenv
mov
es
pop
imul
lret
lea
imul
inc
dec
fiaddl
push
cmpsb
sub
xchg
or
adc
jnp
push
icebp
scas
mov
inc
push
add
adc
out
shll
sub
sub
dec
jns
cmp
hlt
std
and
mov
iret
xor
xor
test
mov
pop
aaa
mov
mov
jmp
ret
mov
add
add
out
arpl
inc
mov
jmp
outsl
mov
pusha
ss
das
and
cmpl
bsr
hlt
sbb
jbe
aas
test
arpl
daa
sub
push
add
inc
aas
add
jp
jne
mov
cs
shlb
jne
loopne
or
xchg
test
cmpsb
stos
bound
and
cs
ret
xor
xchg
push
cmpsl
call
pop
cmp
std
in
xor
mov
push
ja
push
jp
push
pop
ret
jns
cmp
scas
loop
jnp
dec
data16
pop
inc
cmp
loopne
bound
jge
mov
jo
mov
xlat
aaa
or
fisttpll
inc
mov
xor
cmp
or
scas
subl
daa
sbb
xor
adc
jl
mov
push
dec
sbb
pop
iret
aaa
cltd
inc
outsl
add
into
loope
adc
cwtl
icebp
mov
sub
mov
arpl
testl
cmp
jmp
push
hlt
add
cli
or
imul
cs
ret
int
and
lods
inc
xor
cmp
lahf
inc
iret
pop
mov
inc
mov
in
xchg
popa
loop
das
mov
das
sub
cs
rclb
addr16
rolb
sub
sub
cmp
xor
nop
mov
xchg
leave
loop
iret
pop
test
nop
sbb
and
int
fimuls
add
rolb
cmpsl
les
aam
cmp
ret
or
lret
test
mov
sbb
lcall
lock
xor
or
sub
cs
pushf
andb
fwait
dec
insl
popa
push
mov
repnz
xchg
cmp
xchg
jns
dec
inc
int
scas
loopne
pop
mov
xchg
imul
xor
push
daa
rorb
js
jnp
xor
daa
notb
es
add
ss
nop
jb
int
test
xor
adc
cmpb
mov
xlat
sub
shrl
shlb
cmp
add
test
mov
jns
mov
scas
push
jo
lcall
pop
and
shll
cmp
jb
and
and
adc
and
or
mov
sub
xchg
sbb
sarl
movsb
fistps
jmp
mul
sub
cmp
out
jns
fists
sbbb
sahf
inc
addr16
pop
pusha
rclb
xchg
cmpsb
lcall
mov
es
mov
inc
or
cmp
add
jge
xor
xchg
sarb
mov
stc
xor
jmp
jle
xor
inc
ja
add
leave
mov
sub
out
mov
add
iret
push
aam
jp
sbb
in
fiadds
repz
sub
clc
xor
dec
mov
jl
jecxz
mov
adc
xchg
fisubl
dec
dec
add
dec
repz
add
movsl
adc
jns
movl
push
and
or
lret
test
in
cli
sub
les
nop
adc
mov
xchg
pop
mov
xchg
xor
xchg
mov
sahf
lret
rcrb
inc
rcr
dec
adc
insl
in
pop
cmp
mov
cwtl
into
inc
add
divb
iret
aas
iret
mov
add
ret
rcrb
int
sbb
and
call
mov
xchg
add
fisubl
testb
outsl
mov
stos
xor
cmp
mov
jnp
dec
dec
adc
push
leave
mov
xor
jecxz
push
mov
stos
add
mov
jbe
pop
or
mov
add
dec
loop
fs
das
andl
mov
test
nop
int3
mov
mov
iret
lahf
fdivl
add
sbb
stc
aaa
in
out
rclb
cmp
lods
push
hlt
in
sbb
pop
push
lret
sbb
fdivs
cmp
jg
movsl
add
dec
push
dec
arpl
pop
rorb
jge
je
les
fs
addr16
sbb
popf
fsubl
push
roll
in
dec
imul
fisubrs
inc
pop
jne
fwait
cmp
jne
mov
adc
divps
mov
addl
sub
push
push
sbb
jb
movsl
xor
ret
testl
insb
lahf
mov
adc
movsb
adc
outsl
xor
sub
mov
iret
push
jp
arpl
inc
movsb
ja
fsubl
xchg
sub
mov
in
fidivl
jmp
test
pop
ret
in
mov
or
xchg
out
push
les
int3
dec
add
lret
rorl
mov
xchg
push
inc
jnp
pop
add
stos
scas
adc
cmp
jmp
je
cmp
fsubrl
std
pop
and
lret
dec
sub
loope
call
cltd
insl
testl
cmc
mov
mov
push
int3
aas
pop
dec
incb
cmpsb
dec
or
jecxz
sbb
sbb
repnz
iret
sub
jge
pop
aas
inc
pop
mov
cmp
push
scas
sti
mov
dec
xchg
out
push
ret
movsb
pop
cli
repnz
xchg
pop
xchg
mov
leave
push
pushf
cltd
dec
cltd
cmp
mov
lock
add
xchg
arpl
aaa
xor
cltd
icebp
pushf
repnz
xchg
adc
int
out
leave
adc
ljmp
cmp
repz
fiadds
adc
sbb
adc
sbb
rcrl
fdivl
mov
popf
jmpw
cmp
xchg
xor
dec
cmp
out
jmp
stc
xchg
icebp
nop
stc
sbb
mov
dec
ret
xchg
jge
pusha
in
scas
pusha
pop
mov
mov
filds
pushf
sub
leave
push
mov
loopne
std
ret
and
pop
insl
mov
out
enter
adc
int3
lods
stos
mov
mov
adc
rorb
movsl
sub
movsl
aad
sub
mov
dec
icebp
popa
mov
and
mov
int3
sub
cs
jecxz
pop
ret
add
lahf
in
cmpsb
fmuls
test
ja
sub
or
subb
mov
ja
outsb
sbb
cmp
sahf
cmpsb
loope
lock
mov
jmp
mov
xchg
movsb
fs
outsl
jae
inc
mov
dec
mov
scas
mov
jmp
sahf
dec
popf
add
add
aad
mov
dec
jg
std
loopne
adc
lret
mov
fninit
mov
fsubr
popa
push
jne
fisubs
push
divb
sti
je
and
and
and
daa
test
ja
or
es
push
insb
loop
or
dec
sub
rclb
xor
push
xchg
and
xlat
mov
mov
jl
das
mov
or
loop
pop
mov
popf
mov
sub
movsb
push
outsb
xchg
lea
rclb
jae
pop
shl
aaa
push
idiv
push
lea
subb
or
xchg
push
out
jno
xchg
stos
mov
pop
outsb
and
icebp
xchg
adc
lds
test
fsubrs
sub
mov
xor
xlat
mov
jo
mov
mov
test
out
int3
and
jb
xor
mov
push
add
stc
mov
adc
cmc
test
test
jae
add
repz
xor
and
js
mov
setl
movsl
rcll
sbb
adc
aas
sub
subl
sbb
lods
mov
lock
iret
out
xchg
pop
and
push
adcl
push
mov
xlat
callw
sahf
mov
or
fnstenv
jp
fwait
notl
aam
rolb
mov
in
hlt
jle
sbb
addr16
out
js
popf
add
pusha
pop
mov
fstp
fwait
sahf
js
mov
shlb
or
and
jne
fs
adc
push
mov
out
sub
and
pop
lcall
jmp
lods
jnp
mov
jno
mov
fstps
sub
mov
xor
pop
hlt
jb
dec
addl
or
scas
pushf
add
cmpsl
cwtl
loop
push
lcall
sahf
or
jo
mov
test
data16
insl
mov
jl
jle
mov
jns
loopne
dec
dec
sub
inc
and
or
stos
and
dec
jl
lea
inc
faddp
inc
aad
jnp
or
push
xchg
add
push
or
jl
add
push
mov
cmp
loop
std
dec
fwait
mov
in
sub
stos
shlb
pop
sbb
cld
cmc
and
add
sub
pop
jg
pop
ret
add
dec
xchg
mov
push
aad
fstps
insb
cmc
mov
jge
test
dec
cmc
inc
jecxz
cmpsb
mov
loop
inc
mov
jnp
call
jmp
fisubrl
je
shlb
jp
sub
das
test
dec
sbb
pop
cld
and
in
es
sbb
push
filds
or
mov
mov
je
mov
in
insl
pop
jp
xchg
iret
adc
add
mov
cli
stos
cmpsb
or
push
push
xchg
das
jns
mov
and
sub
aad
jnp
rcll
or
cltd
stos
mov
xchg
or
dec
jns
adc
sub
push
pop
or
pop
outsl
orl
cmp
jae
mov
stos
mul
xchg
jmp
sub
cmp
dec
leave
adc
lods
mov
dec
mov
or
dec
data16
adcb
out
cmp
fadds
std
xor
popf
mov
jmp
dec
arpl
sub
sbb
rcll
adc
mov
add
pop
inc
jns
inc
mov
mov
inc
adc
jns
or
xor
in
sub
mov
mov
js
cmpsl
pop
decl
nop
fimull
sub
add
into
lret
aaa
push
push
jg
arpl
mov
fmul
movups
outsl
sbb
rorb
stos
push
sbb
outsb
aas
inc
rcll
pushf
dec
mov
pushf
push
mov
fs
ret
sti
in
jbe
popf
mov
xor
jecxz
jno
add
adc
sbb
movsl
aaa
and
call
rorb
shll
pushf
mov
aaa
inc
jl
xor
loope
insb
out
rol
add
fstpl
dec
insb
pop
mov
ret
out
popl
roll
mov
cltd
ror
loop
cmc
lcall
cmc
jmp
cmp
test
mov
sarb
push
push
pop
fwait
popa
insb
inc
in
push
andb
test
sub
sbb
lcall
lea
xchg
xchg
mov
cmp
inc
push
cwtl
sti
outsl
add
dec
ss
hlt
xor
cs
sbb
pop
or
dec
inc
daa
pushf
out
jecxz
add
inc
leave
lret
test
sbb
mov
sub
xorl
aaa
cmp
stos
jmp
aad
ljmp
aas
mov
pop
xchg
mov
pop
test
jb
add
cmp
push
adc
shlb
aaa
ficoml
outsl
icebp
pop
mov
fistpll
les
or
cli
clc
mov
decb
cld
psubw
and
lock
jl,pn
in
sarl
cltd
leave
jl
mov
loope
xor
shl
and
lahf
sbb
inc
mov
flds
bnd
cli
aad
lods
not
dec
jp
xlat
iret
daa
cmp
aas
xchg
mov
lahf
push
xchg
sub
lods
mov
lea
push
pushf
mov
imul
rcll
pop
xchg
xchg
int
inc
repz
fidivrs
lock
test
xchg
cld
push
jg
into
pop
and
ja
xchg
sti
push
mov
mov
clc
mov
jo
inc
add
sqrtps
scas
sub
xor
xchg
mov
adc
pop
mov
or
pushf
movsl
in
inc
dec
sub
stc
push
and
jp
sete
testl
xchg
sbb
filds
adc
jl
das
adc
pop
adc
js
fidivs
xor
lret
lahf
and
insl
repnz
rcll
sbb
test
cld
addr16
xor
fsubrs
inc
inc
sub
lahf
ds
mov
fdivp
popf
jg
imul
push
addr16
fcmovbe
cmpb
and
aas
data16
mov
or
jno
push
push
mov
xor
jbe
and
ja
mov
push
adc
mul
or
pusha
mov
ja
aaa
jae
pop
cs
xor
in
inc
xor
scas
mov
scas
inc
fdivl
dec
or
aam
mov
cwtl
sbb
stc
enter
rorl
adc
fnstcw
add
adc
fprem
stos
adc
insl
or
dec
lods
std
lahf
inc
je
xor
clc
mov
lds
xorl
int3
insl
into
xor
dec
dec
cmpsb
repz
lret
jne
fiaddl
bound
test
push
lea
leave
push
jb
rol
xor
jbe
addr16
pop
push
sub
push
dec
sarl
or
and
add
mov
mov
pusha
push
push
lahf
fstpl
loopne
mov
lods
jo
dec
nop
or
xchg
cmp
mov
mov
out
cld
testl
cld
and
vmwrite
and
frstor
pusha
icebp
jb
add
push
or
mov
or
in
ds
and
arpl
iret
mov
lret
push
jns
mov
cmp
loopne
scas
out
fmuls
repz
xchg
mull
insb
stos
mov
add
es
cwtl
xor
aas
fildll
cli
scas
incb
xor
adc
or
mov
xchg
push
ret
sub
int
mov
je
inc
lret
insl
or
rcrb
js
imul
stos
bound
aad
or
sub
mov
jae
sbb
and
push
mov
or
pop
cmp
dec
push
xchg
aad
jg
push
or
movb
fs
jmp
cmpsb
shrl
loopne
sti
or
dec
pushfw
shlb
xchg
aam
jmp
pop
pop
mov
pop
xchg
and
orl
fdivl
int
mov
adc
aaa
movsb
jmp
xchg
push
mov
push
dec
je
xlat
ss
cmp
jnp
xchg
popf
xor
outsb
mov
mov
andl
xchg
lret
mov
vxorps
clc
cwtl
hlt
jbe
mov
addr16
repnz
sarb
daa
or
push
jb
xchg
rcr
jmp
jno
jne
dec
stos
lcall
push
daa
cmp
dec
add
int
add
dec
jg
jecxz
mov
cwtl
ds
leave
ljmp
inc
js
or
xacquire
jne
pop
dec
icebp
jbe
xchg
out
lcall
out
pop
adc
scas
fmuls
jmp
outsl
div
jno
icebp
iret
cmp
adc
and
adc
in
push
pop
scas
dec
rol
test
dec
lcall
shll
dec
and
adc
dec
cmp
fnstcw
or
cld
jge
in
clc
xchg
ret
sbb
clc
dec
pop
xchg
or
imul
popf
sub
lods
push
pop
out
xchg
out
add
lds
lea
imul
push
or
orb
adc
xchg
cmp
movsb
xor
xchg
sbb
shr
cmp
mov
repnz
add
inc
jl
nop
xchg
sub
mov
or
jbe
cmp
dec
dec
push
dec
push
int
xchg
pushf
dec
stc
xchg
cmpl
inc
xor
clc
sar
lret
dec
inc
jns
mov
dec
ficomps
lods
and
dec
cmp
push
mov
lock
popa
jge
jb
int
xor
mov
add
hlt
ficomps
test
lds
ss
jl
test
mov
mov
insb
ret
fsubl
int3
movsb
and
out
cmp
inc
mov
sbb
fdivl
les
loope
push
mov
xor
fcmovnb
pop
inc
fbld
iret
iret
icebp
call
sbb
xor
xchg
ja
dec
or
xchg
mov
add
push
xchg
insb
jbe
lock
lds
cmp
push
pop
mov
mov
insb
xchg
and
lock
xor
dec
sub
clc
aam
pop
scas
sub
stc
lret
xor
lret
lods
jns
fwait
enter
imul
mov
adc
test
je
sbb
sub
jl
lods
cmp
sbb
xorl
aad
int
outsl
out
in
mov
mov
insb
inc
out
and
add
in
cmp
test
pusha
jp
arpl
testb
cmp
es
fnsave
hlt
cli
addb
cwtl
dec
xor
movsb
fistps
stc
fstpt
dec
data16
push
loope
ljmp
imul
sbb
or
mov
mov
gs
push
cmc
add
idiv
cmp
cwtl
shrb
pop
out
int3
sbb
ss
push
js
mov
pop
insb
pop
lods
mov
addb
out
push
enter
fsubl
lock
cmpl
xchg
jb
mov
dec
adc
pushf
pop
push
adc
das
jg
xchg
aam
in
jns
or
mov
enter
xchg
cld
icebp
roll
mov
cmp
out
fstpl
data16
cmpsl
mov
ror
xor
inc
cmc
fsubrp
cmp
sub
fsubrp
jne
divb
xchg
leave
pop
sub
and
push
and
jg
lods
and
push
fwait
jp
popa
jle
cmc
lret
sbbl
xor
movswl
mov
mov
dec
dec
shrl
and
mov
xchg
repz
mov
dec
into
push
mov
push
jne
jge
xchg
xor
dec
mov
imull
fucompp
dec
adc
loopnew
mov
por
mov
dec
dec
sub
pop
jle
push
dec
enter
repz
push
out
inc
ja
xchg
xchg
fdiv
sti
pop
mov
mov
xor
jns
jl
sbb
pop
push
int
popl
mov
rcl
aad
fdivl
xor
xchg
enter
sbb
adc
xchg
sbb
ja
insl
lock
or
cs
mov
mov
push
dec
push
enter
es
pop
int
push
leave
cld
add
push
sub
in
xchg
aad
shufps
xchg
jo
adc
stc
adc
sub
pop
adc
or
xor
repnz
jle
mov
add
xor
scas
ss
fwait
jb
flds
push
pop
cmp
dec
and
mov
int3
mov
or
add
mov
stc
loopne
fldt
sub
mov
inc
sbb
loop
inc
fsubrl
jne
lcall
sbb
sbb
push
ret
adc
std
neg
scas
fadds
and
dec
aas
popa
fmuls
inc
scas
push
xchg
mov
stos
enter
jno
inc
popa
mov
lret
clc
loop
fcmove
divl
test
add
mov
sub
sahf
sub
mov
dec
mov
rcr
les
jg
sbbb
ljmp
fcmove
test
dec
xchg
cmp
and
xor
mov
aad
adc
les
mov
mov
xchg
lods
aad
or
fisubs
jmp
xor
sub
push
arpl
mov
or
mov
inc
add
faddp
fidivrs
pop
xor
or
dec
adc
repz
sub
and
xchg
adc
mov
mov
outsb
mov
and
pop
xchg
nop
pop
push
test
cld
jns
xchg
dec
push
mov
push
fcmovne
popa
inc
cmp
push
jb
stc
add
sub
daa
jecxz,pn
jle
loope
xchg
inc
fstpl
test
xchg
std
inc
push
imul
xor
add
sahf
aaa
outsl
out
or
stos
add
inc
stos
jecxz
fistl
pop
repz
lea
in
das
push
push
sbb
and
popa
in
imul
and
dec
imul
push
popf
rol
adcb
les
stos
mov
test
cltd
stos
cmp
fcomps
sub
jno
add
xor
js
adc
mov
xor
nop
mov
dec
push
or
sbb
sub
xchg
fcoml
pop
xchg
inc
or
and
sub
jnp
ret
mov
jnp
jb
add
clc
and
jl
pop
clc
pop
sbb
mov
divl
cs
nop
test
stc
jae
jmp
mov
divb
jno
xchg
in
xor
stc
les
or
push
and
inc
sbbl
scas
fdivl
and
sbb
daa
mov
icebp
out
push
xchg
sub
sbb
mov
or
inc
push
dec
pop
push
add
mov
push
sub
ds
jg
movsl
cmp
push
shrl
frstor
jle
scas
xor
sub
mov
int
xchg
fdiv
mov
sub
repz
loopne
sub
inc
add
test
cmp
pop
mov
xchg
or
pop
add
cmpsb
push
mov
sbb
cld
sub
sub
push
adc
mov
xor
test
incl
jo
repnz
out
mov
movsl
in
icebp
and
insb
aaa
cmp
dec
lea
push
lcall
pop
pop
mov
add
sarb
sti
dec
jmp
pop
or
lods
or
jbe
test
insb
lds
test
lea
cld
jmp
mov
sub
push
adc
push
scas
xchg
xor
je
xchg
adc
imul
xchg
minss
fbld
and
stos
cmp
add
pop
rcll
cld
jb
xchg
add
out
fists
arpl
insl
test
hlt
mov
icebp
pushf
repz
pop
out
popf
xchg
scas
clc
clc
out
lcall
push
xor
arpl
in
nop
cmp
push
mov
mov
xchg
cltd
xchg
jb
ja
and
mov
movsl
jmp
or
push
ficoms
loope
je
mov
ds
pop
mov
mov
bound
xchg
popw
xchg
mov
push
mov
dec
aam
decb
adc
fs
std
fadd
pop
sbb
loope
adc
pop
cld
jmp
push
adc
andl
push
pop
in
das
aaa
mul
sub
add
lods
xchg
pop
sbb
sub
scas
sbb
cmp
xchg
dec
orb
pusha
mov
xchg
dec
nop
or
scas
xchg
aaa
popa
fdivrl
pushf
push
lret
xchg
jb
or
lods
sub
push
adc
adc
ljmp
ret
pop
and
xor
jmp
pop
and
andb
xor
pop
in
lcall
cltd
adc
mov
cmp
jecxz
cld
jl
hlt
inc
mov
adc
or
fcom
sbb
sub
in
dec
and
cli
out
dec
ficompl
andl
push
andb
adc
mov
sbb
push
bnd
sysexit
outsb
xchg
fdiv
xor
sbb
push
cltd
aaa
inc
mov
cmp
std
push
scas
adc
iret
pop
add
push
inc
pop
addr16
cltd
std
cmpsb
mov
cmpsb
cmp
xor
out
movsl
mov
repnz
push
and
pusha
loopne
lock
lahf
divl
or
addl
cwtl
insb
mov
scas
and
add
movsb
xchg
mov
mov
sbb
or
xchg
sub
pop
inc
sbb
clc
inc
and
sbb
jge
in
stos
jg
insb
sub
and
aad
iret
dec
xor
mov
mov
repz
pop
out
inc
push
or
pop
ss
fwait
daa
stos
sbb
test
jl
sbb
xchg
test
lods
or
cvtps2pi
dec
pop
or
and
push
fadds
dec
mov
lret
decb
and
sbb
fnsetpm(287
or
insl
subb
bound
lea
out
je
cwtl
jge
call
subb
jecxz
pop
add
pop
and
fiaddl
ret
addb
cmp
mov
fldcw
cmpsl
dec
sbb
xchg
scas
loop
arpl
push
xchg
pop
outsl
xor
push
xchg
xor
mov
addr16
jnp
or
sub
xchg
daa
daa
rorb
mov
pusha
insl
out
sub
fs
xchg
shrb
lock
inc
xlat
into
test
gs
sub
xchg
loopne
xchg
push
pop
xlat
xchg
cmp
stos
leave
mov
sbb
test
call
mov
jp
test
bound
mov
mov
sub
cmp
dec
sub
sti
out
ljmp
xor
sub
xor
sub
ds
mov
sub
fidivrl
mov
shlb
mov
mov
push
adc
js
jns
loop
cmpsl
xor
ffree
mov
aaa
lods
xchg
pop
push
in
loopne
push
imul
xor
bound
mov
out
xchg
lret
mov
add
fnstsw
add
test
mov
pop
or
es
adcb
dec
bound
bound
lock
dec
cli
or
lret
push
sbb
xorl
cmc
and
and
lret
adc
out
sbb
jecxz
pop
std
add
mov
and
movsb
leave
scas
into
icebp
cmp
and
jb
popa
inc
sti
loope
std
addr16
cmp
pop
xchg
jbe
xchg
iret
adc
movsl
notl
mov
add
ret
jne
sbb
cmp
mov
add
imul
cltd
or
push
lea
test
push
movsl
dec
sbb
sub
dec
dec
mov
scas
jge
cwtl
pop
orl
xlat
jae
add
cmp
add
and
mov
imul
or
add
lods
fs
and
movsb
or
push
cmc
cmp
loop
and
mull
and
lods
xchg
cmp
into
pop
out
xor
out
inc
or
out
cmc
mov
mov
inc
cld
popa
enter
jo
rorl
xchg
pop
scas
sbb
incl
dec
push
sbb
cs
cli
push
je
push
out
push
mov
les
or
cltd
dec
dec
fdivrs
sub
jae
repnz
pushf
loope
popa
fmul
inc
or
out
jecxz
es
or
jns
cltd
pop
add
out
xchg
cmp
cmp
decl
les
enter
sub
inc
adc
enter
stc
dec
xchg
jo
aas
and
adc
mov
movsb
cwtl
adc
out
xchg
testb
nop
mov
mov
addr16
xchg
out
sti
orl
fsubrl
test
cmpsl
neg
incl
repz
push
dec
js
fsubr
fdivs
lret
push
mov
inc
ljmp
fists
ja
ss
rorl
in
mov
nop
mov
cmp
mov
jno
aas
mov
jno
pop
cmpsb
div
jae
or
jns
xchg
test
pushl
movsl
sbb
sbb
into
jl
pop
push
sti
testb
jmp
outsb
and
out
aad
or
loope
outsl
ret
inc
sbb
sbb
or
stc
or
push
rcrb
xor
fidivl
sbbl
les
cmpb
sahf
sub
and
stos
jb
pusha
push
jb
add
inc
pop
jp
inc
jp
movsl
sti
sbb
nop
sbbl
in
ljmp
sub
shll
lahf
lods
mov
xor
jbe
mov
jl
mov
mov
out
sub
jo
outsl
insl
je
or
inc
xchg
jmp
xchg
xor
inc
jns
roll
les
lret
fidivs
sub
icebp
push
add
inc
pop
inc
push
sbb
pop
push
cmp
sub
jmp
or
outsl
lds
mov
push
xchg
jle
adc
sub
adc
pop
adc
jl
sub
and
or
add
adc
leave
push
lcall
dec
int
jo
xchg
fcompl
imul
and
sub
dec
sbb
add
xor
mov
or
jl
shlb
fmuls
jno
fnstcw
or
jecxz
dec
fmul
cmp
mov
sub
lahf
dec
sahf
mov
push
pop
sti
pushw
lods
pop
xchg
fisttpl
xchg
dec
adc
daa
shl
in
inc
or
push
fs
xchg
idiv
or
scas
sbb
es
mov
popf
and
inc
xor
stc
push
jge
lcall
outsb
ljmp
adc
loope
jge
adc
cwtl
fdivs
pmullw
repz
pop
mov
pop
test
aad
dec
pop
scas
xchg
push
sti
jl
mov
xchg
xor
es
and
and
and
cmp
push
movb
add
enter
lock
movsb
enter
rcrb
andl
inc
mov
push
std
or
xchg
rorb
jae
lahf
int3
dec
or
mov
jno
mov
fbstp
xor
add
xchg
sub
loope
aas
mov
xchg
cmp
imul
lods
mov
sbb
ret
adc
push
or
repz
or
cmp
cmp
stc
mov
cmpsl
pop
icebp
mov
sub
arpl
rcrb
clc
aam
aaa
into
ficoms
call
cwtl
and
loope
aad
gs
mov
in
cwtl
push
push
or
push
outsl
mov
xchg
lahf
hlt
sub
fiadds
dec
mov
lods
not
lods
sbb
shll
out
push
jle
mov
iret
cmp
push
inc
nop
jecxz
sub
inc
repnz
jns
imul
das
sar
push
cmp
inc
xchg
inc
jg
sub
xor
dec
insl
sbb
inc
inc
in
fisttpll
mov
dec
and
ret
out
mov
or
cmova
and
mov
aas
inc
mov
jmp
cmp
pushf
jl
and
imul
mov
jle
adc
and
lds
push
mov
jge
lods
pop
mov
test
ds
insl
jb
faddl
add
iret
aaa
jl
insl
push
mov
mov
aas
inc
jbe
ljmp
test
pop
sub
call
fadds
mov
bound
test
push
mov
addr16
cmp
ljmp
or
je
or
enter
lcall
and
lahf
jmp
jg
outsl
mov
adc
pop
insl
xchg
sub
lods
pusha
inc
clc
faddl
roll
push
into
or
or
call
cmp
sub
ret
clc
fsts
fisttpl
mov
cld
cmp
push
dec
or
xlat
pop
adc
pop
dec
xchg
sub
mov
ja
dec
cli
dec
insl
iret
xchg
ss
fists
fdivrl
mov
sub
stos
add
push
inc
or
push
cmpsl
xchg
xchg
and
xor
cmpsl
cmpsl
and
jg
add
mov
aaa
adc
aaa
faddl
jb
or
lcall
dec
out
mov
lret
movlps
inc
xor
stc
cmp
xchg
mov
lcall
mov
lcall
imul
movl
jo
das
push
idivb
xor
push
and
add
dec
das
shl
std
inc
sbb
add
mov
pop
out
sbb
fidivrl
shlb
pop
cwtl
out
aad
fs
arpl
lods
not
push
pop
add
ljmp
out
mov
mov
es
mov
push
inc
cmp
mov
sbb
adc
inc
sti
push
mov
mov
mov
dec
cmp
in
mov
jnp
les
call
imul
push
ss
dec
mov
sbb
faddl
sub
sub
mov
ljmp
adc
fdiv
sub
and
or
mul
ja
pop
ja
or
xor
pop
mov
xor
push
fmulp
jne
push
inc
movsl
stos
mov
push
pop
lea
mov
addr16
ds
cmp
xchg
cmpsw
addr16
loope
sub
pop
scas
out
add
mov
jecxz
ret
mov
pop
cli
sbb
jle
adc
xchg
mov
push
pop
cmc
fcmove
mov
jl
xor
jg
inc
xor
lret
mov
jg
xchg
push
and
jb
shlb
addr16
cmp
jb
jl
and
xchg
cs
sub
and
scas
xchg
dec
jge
dec
cmp
mov
mov
lods
fs
std
push
pop
loope
popa
outsl
push
pop
xor
into
test
xor
adcl
xchg
pop
testl
cmpsl
movsl
sub
scas
pop
in
mov
dec
jle
dec
push
arpl
jp
inc
and
cmp
arpl
orb
gs
nop
cmpsl
jo
cmpsb
and
sbb
jmp
sbb
fistl
adc
cld
popf
popa
mov
mov
insl
mov
stc
fwait
imul
inc
inc
and
fidivl
add
fs
cli
mov
stos
pushf
call
mov
xchg
or
sarl
sar
mov
cmp
mov
add
pop
nop
aad
mov
pop
mov
xor
in
mov
add
jecxz
aad
aam
xchg
add
push
lock
inc
dec
mov
into
pop
push
cmp
inc
ljmp
mov
jns
cmpsb
rorb
sbb
dec
int3
and
xchg
mov
incb
cmp
jbe
hlt
xchg
mov
mov
inc
inc
mov
xor
repnz
pushf
or
lcall
or
and
addl
inc
xchg
and
scas
lods
xor
lea
mov
add
cmp
xor
and
adc
and
lds
mov
in
enter
imul
fstpl
pusha
xchg
inc
add
ret
stos
sub
or
dec
sub
mov
out
dec
ret
cmp
repz
lcall
les
mov
lcall
jmp
rorb
xchg
and
fcompl
imull
fisttpl
xor
sti
sbb
dec
push
hlt
mov
pop
inc
xchg
out
jmp
and
lds
jp
xchg
fmull
orl
mov
lahf
adc
mov
inc
das
sbb
push
xor
cmp
aas
jl
add
and
mov
cmp
xor
and
mov
xor
ss
lods
jbe
aad
xchg
out
cld
fld
adc
pop
xchg
or
dec
mov
jmp
arpl
daa
out
insl
push
and
bound
and
test
push
xchg
jnp
out
jecxz
cli
loopne
cmp
test
popa
sarb
mov
je
pop
imul
dec
xlat
cltd
sub
xchg
jl
push
div
lock
xchg
pop
stos
pop
xchg
cmpsb
push
addr16
sbb
mov
nop
ret
push
pop
int
and
inc
pop
xor
sub
fcoml
je
icebp
xchg
lcall
add
xchg
inc
and
subb
sahf
mov
sub
dec
movsl
pop
mov
enter
outsb
push
mov
xchg
scas
push
and
bound
mov
popa
xor
mov
pop
mov
fcomps
and
jle
adc
movl
mov
mov
inc
fidivrs
mov
aaa
int
xchg
jns
faddl
decb
sbb
insb
and
cwtl
dec
dec
xor
push
sti
rcrb
inc
pop
cmpsl
xor
and
scas
stos
cmc
sbb
subl
jb
das
lret
jl
insb
imul
push
mov
arpl
adc
push
sbb
movsl
cwtl
loope
sbb
xchg
loopne
mov
jg
sub
rcr
mov
jns
push
xor
mov
out
xor
mov
adcb
mov
mov
push
mov
mov
fucomip
fildl
fnstenv
mov
inc
loop
aad
repz
xchg
inc
shll
jne
inc
cmp
ja
lret
push
int
lock
and
pop
int
or
mov
faddl
mov
out
mov
cmpsb
arpl
xchg
and
sbb
fcomi
push
jnp
mov
xchg
hlt
jge
mov
pop
pushf
cmp
sbbb
lock
mov
mov
setp
push
add
or
rorl
pop
xchg
scas
out
in
sbb
fstpl
jns
jmp
lret
cs
movsl
xchg
inc
jecxz
movsl
enter
out
adcb
cmp
mov
js
push
mov
push
and
fistpll
jbe
adc
loop
sbb
adc
pop
ja
sub
in
aaa
adc
mov
in
xor
jnp
mov
sbb
sub
js
or
mov
xor
je
ljmp
cmpsl
and
repz
mov
and
test
push
cmp
scas
lret
fidivs
fs
test
sbb
mov
loope
je
out
test
jo
test
and
aam
imul
cmp
ds
cmp
addb
push
test
sub
mov
call
push
add
lds
jl
push
jbe
daa
sbb
mov
call
enter
cmp
xor
adc
call
loop
xchg
sti
adc
lahf
xchg
test
sbb
cmp
ja
popf
scas
jl
fidivl
repnz
xchg
fisttpl
daa
xlat
je
jg
cmp
cwtl
push
ss
sub
lods
inc
cli
test
movsb
mov
adc
lcall
jg
in
sub
inc
mov
dec
xchg
lods
lods
mov
stos
cmpsl
es
enter
js
jb
ja
icebp
xchg
mov
mov
push
dec
pop
jbe
fadds
xor
into
into
cwtl
andb
idiv
inc
dec
cmc
xor
jp
push
repnz
pop
rcrb
pop
out
mov
dec
cld
xchg
inc
ds
cmp
xchg
dec
clc
inc
inc
jl
fstp
divl
pop
sbb
outsl
data16
mov
popa
and
add
addr16
jge
push
add
stos
test
sub
cld
or
cmpsb
adc
pop
or
add
rcrb
hlt
insl
lcall
push
mov
test
pop
fwait
cmp
xchg
mov
dec
mov
nop
ja
push
fcoms
mov
lock
inc
out
add
out
pusha
and
push
lds
jmp
jnp
icebp
mov
or
rol
clc
add
mov
aad
call
stc
mov
cld
lods
cmp
sahf
cmp
fst
xchg
fucomip
insb
aas
jae
cmpsb
sti
into
out
loop
sarb
insl
sbb
pusha
cmp
and
jecxz
ss
sub
aas
sub
pop
jae
lret
cmpsb
add
dec
inc
sbb
stc
inc
loope
pop
jae
inc
push
push
or
xchg
and
pop
sbb
mov
daa
out
rcrb
inc
add
cltd
xchg
or
iret
in
push
popf
pop
sbbb
push
enter
shrl
adc
mov
jne
rcrl
xor
and
dec
inc
xchg
add
mov
cltd
or
mov
rcl
inc
sbb
stos
fldl
inc
pop
xor
xlat
shll
test
vpaddw
fidivs
out
fdiv
inc
or
fisubl
or
mov
inc
bnd
jnp
cmp
sbb
pop
ret
jno
out
pop
insl
cmp
ret
sub
pop
push
xor
xchg
push
push
fadds
loopne
cmp
and
sub
xchg
ja
fisubrl
xor
js
scas
sub
pusha
flds
outsl
scas
test
jns
push
popf
sbbb
push
xchg
dec
js
cmp
sbb
sar
mov
ja
cmp
adc
cmp
arpl
or
fsubrl
jbe
xor
js
shll
leave
sub
mov
