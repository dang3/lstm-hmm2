jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
mov
adc
sahf
pop
adc
xor
inc
add
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
mov
std
leave
adc
add
nop
add
dec
std
leave
adc
mov
std
leave
adc
add
cwtl
add
jo
leave
adc
mov
std
leave
adc
add
mov
add
cmp
mov
add
test
int3
adc
add
add
std
leave
adc
add
mov
int3
adc
add
int3
pop
mov
std
leave
adc
add
rolb
dec
adc
cmp
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
inc
add
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
mov
cmp
movsb
inc
add
cmp
mov
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
fnstcw
jmp
push
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
inc
add
or
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
ret
mov
add
add
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
in
mov
add
decl
dec
and
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
inc
add
add
add
out
cmp
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
inc
add
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
jg
mov
jl
cmp
jbe
jmp
lea
call
mov
mov
push
push
call
add
lea
call
lea
call
lea
call
jmp
push
mov
lea
call
jmp
push
mov
lea
call
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andb
insb
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
mov
mov
mov
cmp
jne
movzbl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
xor
mov
mov
jmp
lea
mov
movzbl
movzbl
lea
push
lea
call
mov
call
push
lea
mov
push
lea
push
call
mov
add
add
cmp
jl
pop
pop
mov
pop
pop
add
ret
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
jne
mov
call
lea
call
add
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
je
testl
je
push
call
add
mov
pop
pop
xor
call
add
ret
push
call
add
jmp
push
mov
mov
mov
push
call
add
jmp
push
mov
sub
cmpl
je
leave
ret
cmpb
jne
cmpl
je
push
push
lea
call
lea
mov
mov
call
mov
mov
mov
andl
andl
push
lea
mov
mov
movl
movl
call
mov
test
je
mov
test
mov
je
mov
lea
push
push
push
call
test
js
mov
xor
cmp
setne
inc
push
movzbl
push
call
pop
push
push
push
call
test
js
pop
pop
leave
ret
andl
jmp
push
mov
push
mov
push
xor
inc
cmpl
jne
testb
jne
xor
testb
je
pop
leave
ret
test
jne
mov
mov
mov
push
push
mov
lea
push
lea
mov
call
add
mov
neg
sbb
neg
call
mov
shl
xor
pop
and
xor
pop
jmp
mov
jmp
mov
andl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
add
push
je
mov
mov
mov
push
xor
call
mov
cmp
jne
xor
cmp
mov
jne
mov
mov
push
mov
lea
mov
mov
call
mov
cmp
je
mov
mov
push
push
mov
call
mov
mov
cmp
je
movl
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
cmp
je
cmp
je
cmp
je
add
xchg
adc
mov
dec
and
push
lea
push
lea
push
mov
movl
movl
mov
mov
mov
movl
mov
mov
sbb
inc
add
jl
je
jl
js
mov
mov
mov
push
push
call
mov
test
js
cmp
jne
cmp
jne
mov
mov
mov
push
push
call
cmp
mov
jne
mov
add
mov
push
lea
push
mov
push
push
call
mov
lea
movl
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
cmp
jne
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
xor
push
lea
mov
call
mov
mov
mov
lea
push
push
call
test
js
push
lea
mov
mov
mov
mov
call
mov
cmp
mov
jne
mov
mov
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
push
mov
lea
mov
mov
call
test
js
mov
mov
cmp
je
movl
cmp
lea
jne
xor
lea
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
mov
mov
mov
push
push
call
cmp
mov
mov
jne
jmp
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
andl
andl
test
mov
mov
lea
mov
mov
je
mov
push
call
push
push
pop
mov
andl
push
lea
pop
mov
mov
call
push
push
pop
push
lea
pop
mov
call
test
pop
pop
mov
jne
mov
push
push
pop
push
lea
pop
call
push
lea
push
push
call
push
push
pop
push
lea
pop
mov
call
add
pop
pop
pop
mov
pop
ret
mov
pushl
mov
push
call
ret
push
mov
decl
mov
je
pop
ret
lea
movl
call
lea
call
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
jne
push
push
push
mov
movzbl
mov
xor
cmp
jne
push
call
add
test
je
push
mov
call
mov
test
je
test
jne
add
mov
lea
call
mov
mov
lea
call
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
test
movl
je
mov
mov
push
call
movb
movb
xor
pop
pop
pop
pop
ret
sub
cmp
ja
jmp
push
call
add
test
je
flds
push
push
fstps
mov
mov
call
lea
add
push
push
movl
movl
movl
call
flds
fstps
mov
jmp
push
call
add
test
je
push
push
mov
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
leave
inc
add
test
je
mov
shl
sar
push
push
mov
push
push
xor
mov
call
inc
add
test
lock
mov
mov
mov
movzbl
xor
lea
and
xor
mov
mov
call
inc
add
mov
flds
fstps
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
arpl
cmp
xchg
cmp
shll
adc
and
mov
cmp
and
imul
cmp
cmpsb
daa
or
mov
cmp
push
cmp
popf
and
adc
and
adc
and
adc
daa
or
pop
and
cmp
enter
call
es
dec
es
sbb
or
test
cmp
mov
cmp
mov
cmp
lods
es
fldenv
cmp
or
cmp
mov
cmp
mov
cmp
out
and
mov
cmp
cmp
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
jge
cmp
int3
int3
int3
int3
int3
int3
int3
int3
movzbl
and
cmp
je
cmp
je
mov
movzwl
test
push
je
mov
lea
call
test
je
mov
mov
call
test
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
and
or
mov
pop
mov
ret
xor
ret
orb
xor
pop
ret
mov
and
cmp
jne
xor
inc
ret
push
mov
call
pop
ret
push
mov
sub
mov
push
push
push
mov
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
push
lea
lea
movl
mov
mov
mov
call
mov
lea
call
cmp
je
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
call
lea
mov
call
lea
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
mov
mov
test
mov
je
mov
push
call
mov
test
je
mov
push
call
lea
call
mov
mov
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
mov
mov
xor
push
mov
lea
mov
call
mov
mov
call
cmp
mov
mov
ja
lea
call
mov
pop
pop
xor
xor
pop
call
leave
ret
mov
pushl
mov
call
mov
mov
mov
cmp
add
cmpl
jne
lea
push
pushl
lea
mov
mov
mov
mov
movl
mov
mov
mov
push
mov
call
mov
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
mov
call
lea
lea
call
test
je
lea
push
pushl
lea
mov
mov
mov
movl
mov
mov
mov
push
mov
call
lea
push
mov
call
test
je
add
mov
lea
call
mov
call
lea
call
mov
cmp
je
mov
cmp
mov
je
mov
push
call
mov
push
push
lea
push
push
lea
push
push
push
mov
call
add
lea
call
lea
call
lea
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
add
incl
mov
cmp
jae
jmp
push
mov
sub
push
push
mov
push
lea
xor
cmp
je
cmp
jne
mov
lea
push
mov
call
pushl
lea
call
cmp
je
mov
xor
cmp
je
lea
push
push
mov
mov
push
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
lea
call
mov
mov
call
cmp
je
lea
xor
call
lea
xor
movb
call
mov
xor
call
push
lea
call
cmpb
je
mov
and
and
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
mov
mov
lea
call
xor
mov
push
mov
lea
mov
call
mov
lea
mov
call
pop
pop
pop
leave
ret
mov
push
mov
call
test
jne
push
xor
cmp
jne
push
mov
push
mov
call
test
jne
pop
pop
ret
mov
mov
push
mov
call
test
je
pushl
mov
mov
call
inc
jmp
pushl
push
call
pop
pop
pop
ret
sub
mov
xor
mov
mov
test
je
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
mov
xor
call
add
ret
lea
mov
mov
lea
push
mov
mov
mov
movl
movl
movl
movw
mov
mov
push
push
call
cmpl
jne
mov
test
jne
test
je
jmp
mov
mov
add
adc
inc
add
xor
ret
push
push
mov
call
mov
push
push
call
pushl
mov
call
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
mov
test
jne
mov
push
push
call
mov
mov
mov
call
test
jne
lea
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
lea
push
lea
call
mov
call
cmp
je
call
test
je
mov
push
call
mov
add
add
push
icebp
add
add
jns
add
mov
jno
xchg
fsubr
mov
jae
aam
stos
add
mov
pop
movb
push
xchg
lds
add
add
add
fwait
add
add
test
fcomi
add
jmp
fisubl
add
jae
fwait
rcll
lods
stos
in
add
fucomp
ja
add
mov
out
push
mov
mov
sahf
lret
mov
add
out
imul
add
aad
mov
add
add
add
fiadds
push
mov
test
stos
cli
cltd
add
xchg
push
ret
fildl
push
imul
lret
add
add
add
add
ja
mov
add
in
add
push
push
lea
push
push
push
call
add
mov
add
mov
arpl
add
nop
add
scas
add
add
fs
add
add
xchg
rolb
dec
add
add
idivb
add
push
pop
pop
je
add
add
add
jns
add
lods
add
add
icebp
addr16
mov
testl
adc
inc
cld
add
add
push
push
push
call
ljmp
xchg
bound
xchg
add
lcall
jae
push
mov
add
add
xchg
aad
movsl
add
stos
xchg
lods
iret
popa
push
add
ljmp
int
lock
xchg
mov
add
add
xlat
add
add
add
nop
xchg
add
hlt
lea
pop
popl
push
push
push
lea
push
push
push
push
push
push
call
jno
add
add
add
js
xorl
add
shll
out
push
jo
push
add
loop
jne
out
test
test
add
add
add
add
add
add
add
add
sbbb
mov
mov
in
sahf
lahf
fwait
xchg
add
mov
into
js
movsb
popf
enter
hlt
lea
pop
push
push
push
push
push
push
push
push
push
push
lea
push
lea
push
call
shl
xchg
add
add
mov
pop
add
bound
nop
add
stos
push
add
push
addl
stos
sti
mov
push
jle
pusha
add
mov
add
xchg
faddl
jno
sti
in
sti
add
fmull
mov
add
add
pop
add
add
mov
mov
jb
fsubl
lret
roll
popa
mov
lea
pop
push
push
push
push
push
push
push
lea
push
call
test
mov
add
push
push
in
add
jp
xchg
add
xchg
mov
mov
mov
add
add
add
add
add
test
add
mov
add
add
fcmovne
int3
fildl
stc
jo
add
pop
add
push
pop
add
pusha
jae
xchg
pop
mov
cmc
jo
jne
push
add
addr16
ja
in
test
fmull
icebp
das
add
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
movsb
add
xchg
data16
addl
add
addb
add
iret
rcrl
repnz
xlat
movsl
ret
fdivrl
push
popa
mov
add
jecxz
add
addr16
fnsave
jne
repnz
outsl
add
add
lds
andl
jl
mov
jge
out
mov
mov
into
mov
lea
pop
call
push
push
call
divb
add
cwtl
add
mov
add
add
add
push
add
clc
bound
pop
add
add
add
ret
add
add
add
add
pop
int
std
add
add
loopne
add
data16
add
cmpsl
xchg
jns
mov
cmc
add
mov
jp
pop
add
add
mov
mov
movsl
mov
xlat
mov
lea
pop
push
call
push
push
push
push
push
push
push
push
call
mov
jb
call
pop
push
add
push
add
xorb
jecxz
insb
add
std
call
pop
test
arpl
shrl
add
jl
add
sahf
jecxz
add
in
pusha
push
in
fildl
pop
add
addr16
cwtl
in
jl
add
jl
addr16
sahf
xchg
test
mov
pop
mov
sahf
add
add
and
push
add
add
push
push
push
call
add
cltd
add
push
add
add
mov
out
add
add
jno
add
out
int3
add
shr
jmp
xchg
push
add
pop
add
fistpll
add
add
add
test
cltd
sahf
pushf
add
fcoms
imul
add
add
cmpsl
push
fstp
jbe
in
add
add
cltd
xchg
mov
lea
pop
ret
push
push
push
push
push
push
push
lea
push
push
call
imul
mov
ret
xchg
push
test
add
testl
add
clc
rcrb
mov
add
mov
leave
add
loope
add
aam
jp
mov
std
add
xchg
mov
enter
cltd
push
add
fyl2x
lea
clc
popf
iret
add
lea
pop
mov
push
lea
push
call
add
mov
mov
push
xlat
imul
add
clc
xchg
out
js
outsl
add
mov
js
pop
jl
sbbl
jae
loopne
xchg
lret
out
mov
stc
pop
pop
add
add
call
scas
add
add
add
cmpsl
xchg
add
shl
push
jmp
mov
xlat
cld
gs
lcall
int3
lea
pop
mov
add
push
push
push
push
call
mov
add
out
ljmpw
add
add
pop
mov
add
add
mov
fists
hlt
add
xchg
add
pop
add
filds
push
cmc
jae
fildl
add
rorl
add
imul
add
add
add
add
fwait
mov
jp
add
xchg
sbbl
insb
mov
in
cmpsb
mov
lea
pop
add
add
mov
xor
push
push
lea
push
push
push
push
push
call
fistpll
push
fidivs
add
repnz
add
push
clc
stos
push
hlt
jo
add
xchg
jge
insb
mov
in
add
in
add
cmc
add
fbld
mov
pop
mov
movsb
mov
sti
adc
add
add
lahf
sahf
pop
mov
mov
lea
pop
add
call
mov
push
push
push
call
add
pop
add
arpl
add
add
jnp
add
ret
rolb
sahf
add
jge
add
add
sti
loopne
jnp
test
add
cmc
add
hlt
cmpsl
scas
push
repnz
enter
add
shr
lods
pop
add
mov
add
cwtl
push
mov
stos
mov
jno
add
pop
add
push
enter
add
add
bound
pop
xor
push
push
lea
push
lea
push
push
lea
push
call
je
add
add
xchg
add
test
jno
ret
mov
add
loopne
push
icebp
add
xchg
out
pop
add
cwtl
jecxz
add
cmpb
popa
mov
cld
cld
sbbl
clc
push
data16
call
lret
add
mov
fwait
xchg
mulb
add
rcrb
pop
mov
cmpsl
lds
shll
add
mov
lea
pop
add
push
push
push
sub
add
not
rol
xor
sub
shl
add
sub
pop
lea
pop
push
push
push
push
push
push
lea
push
call
fsin
add
rcr
lods
clc
aam
les
add
jle
mov
add
fisubs
fcoms
add
pop
ljmp
add
lcall
add
popa
push
mov
fisttps
loop
mov
mov
pop
add
jns
add
add
int3
popf
add
je
in
negb
mov
mov
lea
pop
pushl
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
push
add
push
popl
ja
addr16
add
cltd
pop
add
insb
add
add
iret
cwtl
jp
pop
add
jo
add
add
pop
cld
mov
stos
imulb
fdivs
jmp
add
add
add
lcall
repnz
add
loopne
xlat
add
jge
add
mov
add
pop
call
mov
movl
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
into
lock
cmpsl
add
add
add
cld
cli
clc
in
jo
cwtl
cwtl
mov
fcompl
cmpsl
add
add
add
stos
lret
les
test
add
mov
xchg
jle
add
add
ret
mov
jne
add
test
add
fsubrs
mov
add
mov
add
loope
push
add
pushf
add
pop
lea
push
push
lea
push
lea
push
call
jp
hlt
add
cltd
mov
mov
lods
roll
stos
add
add
mov
test
rorb
mov
add
mov
shll
shll
jle
add
fistpl
pop
add
add
clc
pop
xorb
flds
jno
ret
les
add
mov
jmp
in
mov
or
pushl
pushl
push
lea
push
lea
push
lea
push
push
call
add
sahf
popf
add
push
ror
add
add
push
cltd
pop
push
mov
add
lret
jae
mov
jne
rolb
out
movsb
add
pop
roll
pop
mov
add
push
imul
cmc
je
add
icebp
lcall
mov
jno
gs
scas
mov
mov
add
jbe
jmp
mov
lea
pop
call
pushl
pushl
push
push
push
push
call
add
add
pusha
enter
add
add
aam
push
add
js
mov
jns
add
add
xchg
add
push
add
lock
add
jns
push
add
iret
nop
addl
add
jns
roll
ret
out
clc
lea
rolb
add
jno
add
xchg
add
pop
cli
xchg
add
xchg
add
add
adcl
add
xchg
add
mov
lea
pop
call
push
push
shr
dec
add
add
push
xor
add
xor
sub
sub
add
rol
pop
shl
dec
pop
push
push
push
push
push
lea
push
push
call
bound
mov
adc
add
add
stc
hlt
add
mov
add
icebp
ljmp
add
rcrl
imul
add
lcall
mov
flds
add
add
add
fiadds
add
pop
into
add
fcoml
sti
mov
cld
mov
add
add
int
popl
scas
mulb
jo
test
add
pop
lcall
sbb
pushl
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
ja
push
hlt
jno
add
add
mov
add
lock
add
jl
arpl
add
in
xchg
add
movsb
faddp
add
flds
in
mov
add
add
testl
add
add
add
add
jle
push
mov
mov
lock
push
mov
lea
pop
call
push
push
push
shr
sub
sub
push
or
not
add
sub
add
sub
dec
pop
pop
push
lea
push
lea
push
call
add
add
add
jnp
add
jbe
pushf
add
in
add
jnp
mov
add
add
add
add
stos
xchg
lods
cmpsl
shr
mov
fstl
add
add
add
add
lods
xchg
pop
fdivrp
sti
mov
sahf
mov
add
add
add
mov
add
shrl
add
lcall
add
add
mov
lea
pop
push
push
push
call
add
add
add
in
enter
loopne
jne
add
add
pop
add
mulb
mov
xchg
push
test
xchg
cmpsl
fdiv
cltd
jb
jbe
xchg
add
xchg
add
fiaddl
bnd
in
add
push
add
add
test
add
mov
jne
add
lock
mov
lea
pop
push
call
mov
push
push
push
call
add
mov
out
add
add
push
pop
gs
push
data16
call
add
push
add
enter
add
add
xchg
add
pop
stos
out
add
add
add
add
push
add
add
lods
jbe
mov
add
mov
ret
xchg
add
mov
hlt
lea
pop
push
push
mov
push
push
push
push
lea
push
push
lea
push
call
jbe
mov
add
add
out
mov
mov
lcall
add
add
add
jmp
jnp
rcl
add
add
cmpsb
add
rcrl
add
in
cmpsl
add
std
mov
je
mov
clc
ja
iret
cltd
je
test
fmuls
fwait
mov
xchg
mov
lea
pop
add
add
add
push
push
push
call
add
add
iret
add
mov
xchg
jne
leave
mov
add
mov
add
movsl
push
add
rolb
add
add
mov
add
cmpsl
repnz
add
lock
or
xchg
nop
xchg
pop
pop
bound
fnclex
add
test
jb
add
add
rcl
cli
add
add
add
pop
add
imul
jae
jl
les
jae
push
push
push
lea
push
push
call
fmull
in
rolb
add
pop
je
add
jo
add
jno
pop
jnp
mov
loope
mov
add
add
add
xchg
xchg
jmp
add
test
out
sub
jl
imul
add
add
pop
add
add
jl
lea
idiv
fadds
add
add
add
movsb
mov
lea
pop
xor
push
lea
push
push
push
lea
push
push
call
shl
imul
xchg
rorl
ljmp
add
add
add
push
lock
pop
nop
addb
call
mov
add
pop
test
add
roll
aam
mov
add
jl
fstpl
cmpsb
test
aad
add
xchg
icebp
lcall
mov
sbb
les
push
push
push
lea
push
push
lea
push
push
call
movsb
arpl
add
add
add
add
add
jno
popa
jle
add
mov
lcall
test
aam
lea
fs
xchg
jb
add
xchg
lahf
je
out
add
imull
add
mov
mov
fldl
pop
pop
add
pop
add
xchg
push
ret
push
add
into
add
ljmp
add
lea
pop
add
push
push
push
push
push
push
push
push
lea
push
call
int
fwait
movsb
cmpsb
push
mov
add
roll
add
stos
mov
out
mov
out
mov
sahf
imul
in
add
repnz
jno
stos
roll
cltd
in
xor
pop
jbe
mov
add
mov
add
add
add
xchg
icebp
mov
aad
icebp
mov
ljmp
roll
mov
add
push
jbe
mov
popl
add
mov
lea
pop
push
push
push
push
call
add
add
movb
add
add
test
mov
adc
cmc
xchg
jo
in
pop
test
js
jge
add
int
xchg
add
add
add
pushf
add
sarb
lock
iret
add
add
xchg
jmp
jns
push
divl
pop
cli
lcall
movsb
jbe
ja
flds
pop
add
clc
mov
lea
pop
mov
xor
push
lea
push
lea
push
call
mov
neg
add
add
xchg
add
js
jmp
subl
jl
add
rcrl
mov
arpl
add
add
push
add
push
add
add
add
add
pop
add
add
add
loopne
add
mov
cmc
into
push
roll
test
and
les
lock
mov
xor
push
push
push
call
add
add
mov
add
mov
jbe
sbbl
mov
add
mov
les
add
xchg
imul
out
pusha
pop
mulb
add
pop
mov
out
mov
cwtl
mov
push
mov
pop
loopne
cmc
mov
aam
bound
push
push
push
call
add
mov
add
data16
ljmp
jo
add
cmp
add
fisubs
mov
jle
add
jae
add
xchg
icebp
mov
test
out
mov
xchg
add
add
add
in
add
popa
jcxz
xchg
shrb
loopne
cmc
out
add
std
arpl
leave
mov
mov
lea
pop
mov
xor
sub
push
push
push
lea
push
push
push
call
add
add
jge
loope
gs
xchg
add
in
jb
add
add
add
xchg
add
add
lds
pop
add
mov
add
add
call
movsl
faddl
scas
bound
add
add
add
add
xchg
xchg
pop
xchg
mov
mov
add
movsl
add
push
movsl
mov
lea
pop
pop
push
push
push
push
push
push
call
add
add
int
lods
hlt
add
jl
shll
in
lock
add
jb
pop
mov
scas
jnp
pop
add
add
sti
fs
add
add
aad
add
add
add
movsl
add
add
add
clc
aad
stos
imul
divb
jl
add
pusha
add
shll
add
add
add
fwait
jnp
jle
mov
lea
pop
rep
pop
push
push
push
push
lea
push
call
scas
cld
add
xchg
add
fcmovnb
out
loope
add
bound
cli
jge
add
leave
add
loope
in
icebp
mov
pop
add
test
mov
add
add
jle
jbe
rcl
add
add
popa
lea
add
lea
push
iret
jne
add
add
jns
ret
movsl
add
faddp
add
cltd
mov
xchg
jne
outsl
mov
lea
pop
mov
add
push
push
push
push
call
add
add
add
lods
mov
out
jmp
rcrl
add
arpl
add
add
popl
pop
add
mov
mov
add
add
add
add
rcr
add
cmpsl
add
neg
add
push
outsl
add
pop
add
movsl
xchg
in
add
add
add
roll
outsl
cld
add
in
add
fmull
ret
add
add
add
push
push
push
push
push
push
push
call
addr16
add
shrb
add
add
jno
push
in
clc
add
repnz
add
sahf
xchg
add
add
mov
add
fld
mov
xchg
shll
add
addb
xchg
jbe
in
mov
js
mov
add
xchg
xchg
add
rcrl
mov
hlt
pushf
jne
add
aam
bound
mov
push
push
lea
push
lea
push
push
lea
push
call
add
add
test
iret
jge
xchg
imul
loopne
add
leave
mov
add
js
add
add
fiaddl
mov
call
enter
out
lds
add
pop
add
popf
add
scas
xchg
pop
add
push
addl
add
add
mov
cmpsl
add
add
mov
add
in
mov
cld
lea
pop
xor
push
push
push
push
push
call
mov
in
add
mull
int
clc
cmpsl
sti
jnp
add
mov
fucom
clc
pop
scas
add
mov
aam
push
nop
add
jno
add
add
repnz
jne
add
add
roll
fbld
mov
loope
add
movsb
jp
imul
lret
cmpsb
movsb
out
int
movsl
jo
fs
stos
mov
arpl
add
add
out
hlt
in
add
add
pop
add
push
push
lea
push
push
push
call
ljmp
add
jae
jb
cltd
xchg
add
add
add
mov
cmpsb
test
mov
xchg
add
in
xchg
add
pop
add
repnz
xchg
lcall
les
hlt
ja
mov
add
add
mov
les
leave
hlt
mov
fisubrs
add
lea
pop
mov
push
push
push
push
push
push
call
add
add
add
add
into
cwtl
add
lahf
aad
lods
add
mov
std
add
shr
xchg
mov
jne
add
leave
lret
jp
loopne
outsl
add
add
movsl
add
add
add
cwtl
shlb
mov
test
add
add
push
mov
add
add
xchg
jno
js
add
mov
lea
pop
xor
push
push
push
push
call
add
leave
add
add
add
sub
xchg
push
mov
lret
int
add
pusha
loopne
add
les
mov
push
mov
in
mov
fnstenv
pop
add
arpl
in
add
mov
add
jbe
add
add
mov
fiaddl
mov
bound
insb
add
mov
lea
pop
add
push
lea
push
push
push
push
push
lea
push
push
call
test
pop
push
in
add
add
data16
add
mov
call
flds
mov
mov
add
stc
icebp
icebp
add
test
fiadds
aam
add
jbe
xchg
lret
add
jae
xchg
in
test
add
ret
mov
add
test
ror
shl
std
jl
add
cld
mov
int3
lea
pop
mov
xor
add
push
lea
push
call
mov
int
add
add
cmc
xchg
ja
lret
add
lods
enter
std
add
sahf
add
mov
add
lods
add
jnp
add
cmc
push
add
pop
add
add
popa
jnp
fwait
popa
add
add
push
test
mov
add
loope
add
test
mov
add
lock
test
les
push
std
add
shrb
popl
mov
lea
pop
add
mov
push
push
xor
sub
push
or
inc
add
sub
inc
add
shr
sub
not
add
pop
lea
pop
push
lea
push
push
push
call
add
mov
sahf
add
shr
add
stc
add
mov
stc
add
add
notl
jae
pop
xchg
out
insb
add
add
mov
gs
mov
addb
add
fsubl
into
add
rolb
cltd
pop
add
out
pop
stc
push
mov
mov
lea
pop
pushl
call
push
push
push
shl
push
or
not
add
inc
sub
sub
sub
rol
pop
rol
sub
dec
pop
push
push
push
push
push
push
lea
push
push
push
call
add
mov
xchg
add
mov
filds
add
movsl
xchg
lds
bound
add
xlat
add
popf
push
add
push
test
add
mov
cwtl
sti
add
mov
add
test
mov
movb
pop
push
fsts
mov
add
mov
mov
cld
mov
pop
add
push
lahf
test
lea
pop
push
push
push
call
div
enter
add
mov
push
push
pushf
popf
mov
dec
jle
cltd
add
mov
add
nop
sti
add
aad
add
mov
mov
push
stos
add
add
xchg
add
faddl
in
add
add
add
add
add
jmp
ret
add
lea
pop
push
push
push
push
push
lea
push
push
push
push
call
add
jno
add
add
sti
add
iret
mov
mov
mov
cmpsb
add
xchg
sahf
push
push
add
js
add
lds
mov
flds
add
lahf
mov
test
add
mov
mov
icebp
add
lahf
arpl
movl
mov
pop
add
scas
add
xchg
movl
addb
add
push
add
test
hlt
lea
pop
call
push
lea
push
push
push
push
push
push
push
lea
push
call
roll
add
xchg
int3
loope
add
jbe
add
mov
data16
add
add
movsb
lea
fisubrs
popf
lods
add
jae
nop
add
pop
test
stos
add
add
add
out
push
fidivrl
fcompl
mov
std
pop
add
push
mov
push
outsl
test
lock
mov
add
add
jae
aad
nop
mov
lea
pop
mov
push
push
push
push
push
push
push
lea
push
call
add
movsb
add
add
jp
hlt
pop
into
testb
data16
leave
add
add
test
add
push
lock
jmp
add
pushf
mov
add
add
add
add
icebp
scas
mov
lahf
add
nop
add
add
jl
add
mov
mov
add
int3
lea
pop
mov
add
push
push
lea
push
lea
push
push
push
push
call
add
push
add
xchg
lahf
lea
out
jbe
add
push
jmp
push
aad
imul
add
add
popa
xchg
add
xlat
je
xchg
push
cld
mov
add
pusha
add
add
add
mov
lea
pop
add
add
mov
xor
push
push
push
push
lea
push
push
push
call
sarl
shl
add
mov
add
mov
jae
xchg
test
push
add
add
push
rcrb
add
jae
jae
add
fidivs
int3
out
add
add
add
lods
add
ret
out
add
add
jnp
add
rcrb
hlt
fiadds
jne
add
add
lret
je
data16
mov
xchg
test
pop
add
loopne
hlt
lea
pop
add
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
in
cld
arpl
mov
add
add
fwait
mov
pop
arpl
imul
pop
add
xchg
add
popf
mov
out
iret
add
add
add
into
add
push
add
fidivl
pop
add
les
add
add
mov
outsl
lds
add
mov
jl
icebp
cld
push
mov
lea
pop
push
push
push
call
jp
loopne
lret
add
test
mov
lcall
testl
xchg
lcall
add
stos
nop
icebp
nop
pop
mov
push
fiaddl
add
int
rol
jns
mov
jbe
add
cwtl
xchg
out
icebp
add
add
mov
cmpsl
add
cmpsl
add
repnz
shrl
mov
lea
pop
mov
xor
push
push
push
push
push
push
push
call
push
xchg
add
outsl
jge
out
push
add
push
pop
fwait
add
lcall
mov
xchg
add
rcr
rol
add
pop
add
fbstp
add
clc
pop
lahf
add
pop
push
add
mov
pop
jge
testb
sahf
roll
ljmp
sbb
add
pop
push
push
lea
push
push
push
push
call
fs
push
mov
add
add
add
int3
scas
pop
xorl
add
add
add
lea
jns
add
add
add
add
add
push
add
idivb
pop
hlt
xchg
add
add
scas
add
cmpsb
scas
rcr
pusha
in
loop
call
int3
lea
pop
mov
xor
push
push
push
lea
push
push
push
push
call
scas
mov
jp
add
add
imul
testl
loope
add
lret
subl
mov
add
add
add
jmp
add
mov
mov
add
jb
xchg
iret
add
push
fcmovnu
out
add
add
out
movsb
mov
lea
pop
rep
mov
xor
push
lea
push
call
add
mov
add
fstl
aam
je
mov
push
add
int3
add
mov
add
sahf
enter
std
out
pop
fwait
pop
add
scas
in
add
push
mov
jmp
xchg
mov
lock
add
add
mov
pop
add
pushf
pusha
push
out
jo
mov
lock
cmpsl
add
addr16
mov
lea
pop
or
je
mov
xor
push
push
push
lea
push
call
popf
add
test
jge
cmc
addr16
movsb
bound
mov
jnp
or
push
add
mov
test
addl
ja
add
push
add
leave
push
push
add
mov
add
xchg
mov
add
int
add
add
cld
xchg
mov
aam
bound
pop
mov
push
push
lea
push
push
push
lea
push
lea
push
call
loopne
jl
xchg
arpl
call
add
rolb
add
jbe
mov
add
out
shrl
add
incb
add
xchg
xchg
jae
jl
mov
popa
pop
xchg
pop
mov
outsw
xchg
add
mov
add
add
add
add
addb
enter
mov
lea
pop
xor
push
lea
push
lea
push
push
push
push
push
lea
push
call
fldl
add
add
cwtl
lahf
leave
add
mov
fwait
nop
jae
jbe
xchg
fmull
push
fiaddl
mov
xchg
mov
add
add
mov
jae
add
xchg
add
add
add
add
fiaddl
faddl
cli
add
add
fildl
lret
lea
pop
add
add
push
push
push
push
call
mov
scas
popf
add
loope
icebp
mov
add
testl
add
mov
add
ret
add
test
jnp
test
add
mov
int
add
add
loop
pop
add
fwait
add
fwait
push
pushf
in
add
mov
add
aad
mov
mov
jmp
int3
lea
pop
add
push
mov
push
push
push
push
lea
push
push
lea
push
push
push
call
xchg
add
int
scas
add
cmc
cmc
add
add
add
push
fs
cmpsl
test
out
mov
push
aam
add
mov
add
cmpb
fiaddl
mov
add
jo
lods
add
push
popl
pushf
add
lds
add
rcrb
add
pusha
cmpsb
mov
test
add
add
mov
push
notb
data16
add
push
lea
push
push
push
push
push
push
lea
push
push
lea
push
call
push
push
xchg
in
mov
add
mov
ret
add
mov
out
call
mul
mov
add
add
rolb
add
roll
add
add
jb
popf
addb
cli
in
test
lcall
add
lds
add
rcll
add
loopne
add
pop
cld
icebp
nop
mov
lea
pop
add
push
push
lea
push
push
push
push
push
call
pop
add
add
adc
add
mov
sahf
add
add
rolb
add
add
add
add
add
jnp
in
add
enter
add
add
stos
jne
pop
addr16
add
push
stos
add
cltd
push
imul
int
add
mov
test
mov
add
hlt
lahf
cwtl
icebp
mov
add
rorb
add
pop
rep
push
push
push
lea
push
lea
push
push
push
push
push
call
loop
add
add
add
add
jp
add
add
flds
lret
std
pusha
add
add
mov
jae
iret
add
out
loop
std
roll
add
add
add
ljmp
push
cmpb
xchg
fdivs
jp
add
mov
mov
lea
pop
mov
xor
push
push
push
push
push
call
push
stos
add
ja
add
cmpsl
aad
add
mov
add
icebp
test
cld
int3
lret
xchg
add
into
icebp
add
add
rolb
loop
shl
add
les
mov
loope
scas
cli
lods
mov
mov
xorl
add
add
icebp
add
popf
nop
popa
sti
fcomps
popf
add
xchg
mov
mov
lea
pop
or
je
mov
push
push
lea
push
lea
push
push
push
call
add
mov
add
pop
shlb
add
add
add
addl
add
stos
add
add
mov
add
hlt
jl
add
testl
test
add
push
stos
mov
aam
test
add
std
add
push
xorb
add
xchg
lea
pop
add
push
ror
dec
pop
add
rep
pop
push
push
ror
add
ror
push
xor
add
ror
sub
shr
rol
sub
pop
add
lea
sub
pop
push
inc
not
xor
lea
pop
pop
push
push
push
push
lea
push
lea
push
call
add
rol
add
call
into
push
jmp
add
add
add
mov
add
jecxz
out
imul
mov
mov
xchg
push
add
popl
add
xchg
mov
mov
mov
jns
nop
incb
repnz
add
add
rolb
mov
add
jle
rcrl
add
jne
mov
lea
pop
mov
push
pop
mov
mov
push
sub
shl
not
pop
jmp
push
rol
sub
sub
pop
push
mov
add
push
add
sub
shr
pop
push
push
xor
dec
not
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
mov
add
add
jmp
xchg
in
add
add
mov
rolb
xor
out
mov
add
add
add
ret
add
mov
mov
add
repnz
xlat
jns
gs
add
add
out
add
jne
push
fmuls
enter
rorl
mov
lea
pop
push
push
lea
push
push
push
call
mov
test
in
les
leave
loopne
jmp
shr
mov
mov
cld
push
loopne
aad
js
add
jge
data16
cmc
add
add
add
out
bound
loope
add
mov
add
add
add
add
cli
jmp
pop
add
add
les
mov
mov
fsubs
popa
add
cmpsl
mov
add
mov
lea
pop
push
mov
pop
push
push
call
add
add
lods
add
fisubrl
add
add
add
push
loop
add
ret
jb
lods
subl
negl
mov
add
test
add
rcrb
aam
xchg
lret
add
mov
enter
add
add
add
jge
jnp
add
je
into
mov
lea
pop
pop
push
push
push
push
push
push
push
call
mov
testl
mov
add
fisubl
rcll
push
jl
movl
fldl
add
mov
lods
pop
add
mov
add
add
scas
mov
cli
rolb
add
jnp
ficoms
idivl
add
cli
mov
fcoms
mov
push
addl
loope
push
mov
lea
pop
pop
push
push
push
push
push
push
call
leave
mov
xchg
add
aam
loop
add
add
lock
cli
add
add
scas
icebp
mov
xchg
add
stc
sti
push
mov
add
jns
leave
js
int3
mov
fcoml
call
iret
mov
outsl
mov
add
clc
jbe
lcall
mov
add
loope
mov
mov
lret
add
add
in
cld
mov
lea
pop
pop
leave
ret
push
add
lea
pop
push
mov
push
rol
pop
add
push
push
add
inc
ror
pop
push
push
push
pop
push
movl
push
inc
shr
add
pop
addl
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
fwait
lahf
add
pop
ret
add
add
mov
mov
ljmp
ror
lock
jne
add
add
lds
mov
xchg
into
add
pop
lods
add
add
push
data16
add
stos
mov
jmp
test
je
std
add
add
add
mov
and
test
je
push
push
push
push
push
lea
push
push
call
je
add
add
faddl
out
popa
jl
add
movb
roll
add
add
mov
add
cli
push
add
popf
mov
add
jl
add
pop
out
mov
add
fs
add
mov
flds
addl
add
imul
xchg
add
xchg
add
xorb
aam
bound
mov
pop
pop
push
push
lea
push
push
lea
push
push
call
int
add
std
mov
add
fcmove
add
add
addl
sti
sahf
add
insb
push
call
in
add
fsin
add
roll
mov
xchg
add
int3
neg
mov
add
mov
into
lea
mov
mov
add
jecxz
xchg
xchg
push
add
push
fistpl
arpl
mov
mov
lea
pop
pop
push
shr
pop
pop
leave
ret
push
sub
pop
push
mov
add
push
lea
sub
pop
push
push
push
push
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
jmp
push
add
mov
add
xchg
push
xchg
mov
add
test
pushf
add
add
jne
add
pop
xchg
jecxz
fidivs
jns
add
popw
push
stc
cld
add
add
loop
add
gs
xchg
enter
outsl
add
fadd
ljmp
mov
lea
pop
testl
push
shr
dec
not
not
pop
addl
push
push
push
push
lea
push
lea
push
push
push
call
mov
lahf
loop
add
test
add
add
lods
mov
fildl
mov
arpl
shr
push
add
add
add
popf
addb
scas
cmc
hlt
pop
mov
push
mov
add
jne
add
arpl
shrl
add
add
cli
mov
add
mov
add
nop
xchg
js
add
push
add
xchg
add
add
fmull
add
sar
call
icebp
pop
mov
push
push
call
add
popa
add
add
add
pop
jecxz
in
mov
jl
add
add
add
fdivs
je
leave
mov
add
pusha
sahf
cmpsb
add
movsl
pop
add
scas
fmuls
xlat
add
add
pop
push
into
add
insb
add
cld
add
rcrb
add
lds
call
shrl
add
xchg
negl
mov
lea
pop
pushl
push
push
lea
push
lea
push
call
add
mov
mov
fxch
add
mov
outsl
bound
add
push
add
fldcw
mov
fucomip
mov
add
jbe
aad
add
mov
pop
jmp
into
add
add
push
jmp
pop
arpl
popa
xchg
pusha
lea
test
add
add
addr16
ljmp
fdivrs
lea
pop
push
push
push
add
lea
add
pop
call
cmpl
jne
push
shl
shr
add
pop
pop
push
push
push
lea
push
lea
push
push
call
hlt
in
push
pop
arpl
cltd
mov
iret
sar
add
pop
test
shr
add
filds
add
pop
fnop
cltd
test
imul
add
add
add
add
add
add
push
and
hlt
add
mov
add
add
pop
roll
add
jmp
add
add
add
pop
pop
pop
push
add
shl
rol
pop
pop
push
ror
pop
leave
ret
push
lea
dec
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
imull
lea
pop
xchg
add
add
jmp
add
add
cld
hlt
fcmovne
loopne
xchg
add
hlt
lock
xchg
mov
add
lret
loop
pusha
std
std
movsl
add
add
add
mov
add
loope
ja
out
jmp
push
bound
filds
add
add
hlt
int
mov
add
xchg
fwait
add
orb
mov
add
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
in
cmc
in
pop
push
jno
fists
mov
mov
add
fcmovnb
add
add
add
rolb
add
mov
add
stos
add
jne
lcall
js
ljmp
push
lods
add
add
fdivrp
pop
insb
js
add
push
add
add
mov
cmpsb
add
out
add
pusha
pop
loopne
add
out
add
jge
jne
fmull
push
push
push
add
shr
inc
shl
pop
movl
push
call
push
ror
ror
ror
pop
push
push
lea
push
lea
push
lea
push
push
push
call
push
test
add
xlat
add
pop
add
test
int
add
arpl
test
push
in
add
adc
jge
mov
loop
lock
add
in
add
add
xchg
leave
roll
data16
mov
rcll
loopne
add
xchg
add
add
mov
lea
pop
call
push
rol
inc
sub
pop
subl
push
lea
push
call
push
movsl
add
add
sarb
add
movsl
imul
arpl
xlat
add
cwtl
add
insb
in
loop
add
lods
ret
pop
fwait
add
enter
ljmp
movsl
add
testl
add
jge
lahf
add
add
add
add
add
jp
add
jne
lahf
ljmp
rclb
mov
add
add
int
jo
add
add
pusha
or
jge
add
test
call
ja
dec
rorb
push
push
push
call
bound
cmpsb
aad
shl
jb
aad
mov
add
clc
jne
add
add
add
mov
add
jp
sarl
mov
clc
add
scas
mov
add
addl
fwait
cmpsl
push
add
mov
ret
int3
add
int3
jnp
add
lahf
add
test
add
gs
push
mov
add
add
fmull
push
lea
push
push
push
push
push
lea
push
call
cli
add
add
jns
add
cld
cwtl
stc
pusha
fs
xchg
push
jb
mov
push
leave
test
add
add
add
out
add
xabort
add
insb
add
add
loop
jl
movb
xchg
add
add
test
add
mov
add
add
jge
lock
fmull
push
add
pop
pop
pop
push
xor
dec
inc
shr
pop
leave
push
lea
push
push
push
push
push
call
pop
jo
xchg
jge
xlat
jnp
add
stos
mov
mov
int
xchg
add
add
mov
add
out
shl
push
in
add
rolb
fdivrs
push
test
in
scas
imul
add
cld
push
je
mov
subb
add
lahf
push
stc
add
mov
sbb
push
push
lea
push
lea
push
lea
push
call
mov
int
adcl
add
pushf
mov
out
add
int3
add
stos
lods
xchg
add
in
jmp
add
xlat
pusha
loop
xchg
in
mov
add
add
mov
add
xchg
add
lret
mov
loop
movsl
mov
cmc
cmc
add
rolb
add
popa
add
jns
hlt
imul
pop
add
lret
mov
add
add
mov
lea
pop
mov
add
push
shl
shr
pop
push
push
push
push
lea
push
push
push
call
bound
add
add
xchg
mov
add
add
push
add
pop
clc
mov
jbe
cld
add
add
add
pop
hlt
test
add
add
xchg
add
jbe
cmc
fwait
lods
add
lods
lcall
subb
push
add
push
add
arpl
jmp
add
cwtl
add
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
push
nop
pop
add
out
push
push
fdivr
mov
add
mov
pop
add
fildl
fldl
mov
push
stos
movl
sti
add
idivl
pop
add
data16
out
add
add
add
pop
fsubs
jns
add
jno
cld
add
rolb
mov
jge
add
add
mov
push
mov
pusha
and
mov
push
inc
pop
lea
sub
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
mov
mov
xchg
add
lcall
add
cmpsb
add
sti
add
push
test
jnp
test
jmp
in
add
jmp
add
addl
ljmp
popl
enter
jnp
add
jp
cmc
add
add
add
addb
nop
xchg
mov
lea
pop
shr
push
sub
pop
add
push
ror
sub
pop
mov
mov
push
push
push
push
lea
push
push
call
call
jl
mov
iret
nop
jae
mov
bound
lcall
les
jno
lret
mov
cli
jb
add
jb
add
add
lret
mov
mov
cwtl
mov
push
add
outsl
add
fimuls
add
add
aad
imul
add
std
popa
leave
cmc
out
add
mov
pusha
sbb
inc
or
push
push
call
in
pop
xchg
flds
mov
fs
aam
subl
add
add
add
shl
sahf
mov
add
add
jge
add
fcom
xchg
add
je
ljmp
add
movl
fistps
addr16
stc
push
add
js
add
jl
add
fwait
stos
out
xchg
in
add
add
add
add
xchg
rcr
add
mov
lea
pop
add
push
sub
sub
lea
add
pop
mov
mov
cmp
jne
push
dec
pop
cmp
jne
push
push
push
lea
push
push
lea
push
push
push
push
call
lods
mov
into
jl
ja
xchg
ljmp
add
pop
add
add
out
fadds
xchg
jge
add
add
add
add
add
cmpsl
add
push
out
add
mov
jecxz
add
add
jae
outsl
subl
loope
add
add
int3
lea
pop
mov
push
ror
sub
ror
pop
movl
push
shr
shl
pop
jmp
push
lea
push
push
lea
push
push
call
add
pop
add
add
add
sti
rcll
add
xchg
insb
add
mov
add
xchg
add
data16
fdivrl
lock
fisttpll
mov
add
xchg
add
add
add
into
jbe
xchg
add
add
add
jno
add
lods
into
notb
lahf
mov
lea
pop
mov
mov
sub
jne
push
push
call
pop
stc
add
add
addb
test
jb
arpl
xchg
add
int3
add
mov
test
in
add
add
lret
add
push
addb
add
mov
loopne
add
add
add
mov
add
push
cmpsb
jb
ret
add
mov
add
faddl
add
stos
jno
movb
mov
lea
pop
mov
push
push
push
call
in
add
add
test
cli
add
add
push
add
hlt
stos
add
mov
test
add
xchg
add
movsl
cltd
pop
add
test
add
rolb
add
push
cmpsl
pop
mov
add
cld
xchg
add
xchg
add
popl
fiadds
add
push
pop
add
clc
fwait
add
pop
movl
jmp
mov
push
push
push
push
push
call
mov
add
stc
add
add
add
xchg
stos
jl
call
in
into
cmc
add
incb
mov
add
aam
jae
ret
mov
sarl
iret
pop
sarb
ret
les
jne
push
add
add
push
loopne
pop
add
push
add
add
rorb
arpl
mov
cmp
jne
mov
push
not
dec
ror
sub
pop
movl
push
sub
add
pop
jmp
mov
cmpw
jne
push
dec
rol
pop
mov
push
push
push
push
call
xchg
ja
jl
mov
int3
les
je
fldl
add
rcll
jl
lock
popf
bound
fsts
enter
add
lea
int3
arpl
xchg
add
mov
mov
add
cwtl
sahf
add
jle
add
cli
fnstsw
out
lds
add
add
xchg
push
mov
in
cld
lea
pop
movl
jmp
pushl
push
lea
push
lea
push
push
push
push
call
pop
jns
mov
add
fidivs
xchg
cwtl
stc
addr16
lret
add
add
mov
add
push
cmc
add
jl
test
popf
add
test
int3
movb
add
into
add
mov
mov
mov
mov
pop
xchg
enter
xchg
bound
add
add
arpl
add
jge
push
push
cli
push
test
add
les
mov
mov
push
add
lea
pop
mov
push
push
rol
push
xor
add
lea
sub
sub
ror
add
ror
shl
pop
not
pop
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
add
flds
addl
jo
jnp
add
add
add
fcoms
addl
mov
mov
pop
into
out
fidivrs
add
add
add
loopne
lods
pop
mov
mov
pop
jmp
add
xchg
mov
add
mov
add
cmpsl
fildll
push
add
lea
add
add
icebp
add
add
mov
lea
pop
push
push
xor
add
dec
sub
pop
call
cmpl
je
push
push
inc
dec
push
or
not
add
rol
inc
sub
ror
add
pop
shl
lea
not
shr
pop
push
push
push
push
push
push
lea
push
push
push
push
call
mov
bound
mov
mov
aad
mov
add
add
add
fildl
push
popa
fsub
add
add
add
into
je
addl
in
mov
cli
in
scas
add
add
cld
xchg
mov
mul
lret
add
icebp
add
fiaddl
add
addl
cmpl
js
add
jmp
add
fmulp
test
arpl
add
mov
pop
mov
add
pop
push
call
cmpl
je
push
push
dec
push
or
not
add
sub
dec
xor
sub
lea
not
lea
add
pop
add
shl
pop
push
sub
lea
pop
push
call
cmpl
je
push
push
sub
inc
dec
inc
push
or
inc
add
dec
sub
inc
pop
ror
dec
rol
pop
push
push
call
add
idivb
test
add
add
test
bound
push
pop
add
add
add
stc
add
mov
pop
add
add
std
add
rolb
in
add
add
ljmp
stc
pop
test
mov
add
mov
sahf
movsl
stos
clc
ljmp
mov
bound
ja
add
push
arpl
rorl
pop
push
push
not
inc
pop
call
push
rol
ror
not
dec
pop
cmpl
je
push
push
dec
push
xor
add
inc
sub
inc
pop
not
dec
pop
push
push
dec
xor
add
pop
call
push
push
push
lea
push
push
push
lea
push
push
call
movb
cltd
data16
add
add
movsb
mov
lret
add
pop
lret
repnz
add
add
pop
aam
add
mov
mov
add
add
data16
rclb
cwtl
ret
add
lret
lret
test
xchg
add
push
lds
add
cli
into
add
add
jle
jle
lods
add
cld
rolb
test
add
mov
lea
pop
cmpl
je
push
push
dec
push
sub
add
dec
rol
dec
sub
shl
xor
not
pop
add
lea
pop
push
lea
push
lea
push
push
call
add
pusha
add
mov
add
xchg
arpl
add
mov
in
repnz
mov
add
cmpl
mov
add
leave
add
mov
add
lret
test
or
int3
xlat
into
popa
gs
mov
in
mov
subb
pop
jge
add
clc
add
add
fldcw
mov
call
adc
call
push
lea
push
lea
push
push
call
shr
xchg
fcomps
add
add
push
add
add
push
add
add
outsl
add
add
add
add
test
push
test
mov
mov
aad
jb
popf
add
jecxz
add
mov
add
sarb
mov
je
add
add
add
add
jns
add
mov
stos
gs
lea
pop
cmpl
je
push
push
add
inc
push
or
inc
add
dec
ror
sub
sub
lea
pop
rol
xor
pop
push
push
lea
push
push
push
lea
push
call
mov
ljmp
mov
lods
jle
lock
lock
fmull
add
pop
jbe
jns
add
cmpsl
mov
jl
add
add
pusha
xchg
mov
lds
imul
loop
ljmp
add
add
xchg
incb
movl
add
jl
addr16
xchg
add
notl
jge
mov
mov
lea
pop
push
call
cmpl
je
push
push
not
push
sub
add
ror
sub
xor
dec
pop
sub
not
not
pop
push
lea
push
push
lea
push
push
push
push
call
out
xchg
in
push
mov
mov
add
add
fcoml
loopne
add
push
add
lods
add
add
add
add
mov
movsb
add
mov
mov
movsl
add
add
aam
add
ja
add
jle
push
fsubl
loope
nop
xchg
add
add
mov
add
pop
push
push
push
push
lea
push
push
push
push
call
add
test
add
jle
add
jle
rclb
imul
mov
add
sti
cli
pop
add
addr16
add
mov
mov
into
js
add
std
add
imul
mov
iret
add
mov
add
in
add
add
mov
loopne
mov
popa
lds
movsl
add
xlat
aam
loop
cld
lea
pop
call
cmpl
je
push
push
add
sub
xor
push
and
add
sub
not
not
sub
shr
pop
ror
pop
push
push
lea
push
push
push
push
call
roll
add
in
add
aam
jmp
into
add
ror
add
stc
xchg
add
add
clc
stos
push
push
mov
add
add
add
jmp
xchg
popf
add
mov
add
jge
mov
lods
pop
mov
add
mov
add
mov
add
int
add
add
xchg
push
mov
lea
pop
push
call
cmpl
je
push
push
add
push
push
pop
add
shr
sub
ror
pop
xor
pop
push
push
lea
push
push
push
call
jmp
add
add
cmpsl
add
mov
mov
icebp
sarl
shlb
idivb
add
bound
cltd
xchg
xchg
add
push
add
insb
add
repnz
ret
pop
test
stos
add
add
xchg
add
fadds
test
add
shrb
push
int3
sahf
rolb
stc
add
mov
lea
pop
push
call
cmpl
je
push
push
sub
not
sub
xor
push
or
inc
add
rol
sub
add
lea
lea
xor
pop
xor
dec
shl
dec
pop
push
push
lea
push
push
push
lea
push
push
push
call
add
add
push
jecxz
icebp
sahf
add
add
add
sahf
imul
in
add
scas
rcrl
scas
popa
add
add
roll
add
mov
add
add
add
add
add
pop
push
mov
add
fwait
pop
arpl
sarb
add
popa
add
scas
fnstenv
add
add
jnp
movsl
push
and
call
cmpl
je
push
push
shl
lea
push
xor
add
ror
sub
dec
sub
shl
pop
sub
add
xor
pop
push
sub
rol
pop
push
call
cmpl
je
push
push
lea
sub
push
or
not
add
shr
xor
sub
xor
shl
sub
pop
pop
push
lea
push
call
mov
out
push
add
jnp
add
rolb
push
popa
add
jbe
out
add
add
int3
out
add
loope
add
movsl
pop
icebp
add
rolb
add
mov
add
cli
movsb
add
add
add
add
push
fmulp
into
fs
add
add
cltd
add
add
or
push
xor
pop
call
push
push
push
call
push
add
add
add
test
add
add
push
add
add
add
mov
loop
pop
fwait
add
int3
clc
cmpsl
repnz
rolb
add
add
add
add
add
movsb
mov
popa
sarb
add
nop
fadd
mov
or
cmpl
jne
mov
push
dec
xor
sub
pop
movl
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
cltd
int3
add
out
in
outsl
push
add
add
rolb
jge
idivb
add
add
mov
xchg
mov
jmp
jmp
lcall
cmpsl
stos
add
sti
iret
negb
pop
stos
add
pusha
add
aam
lret
repnz
lods
push
mov
add
xchg
add
aad
stos
add
add
add
add
pusha
add
add
sahf
mov
lea
pop
jmp
push
add
ror
shr
pop
xor
pop
pop
push
push
push
push
push
call
insb
in
add
add
xchg
mov
add
add
pop
mov
rolb
repnz
push
push
in
shrl
add
mov
sahf
add
sbbl
lds
cmc
add
add
nop
call
xchg
cwtl
fst
lods
scas
add
cld
add
lea
jb
mov
lea
pop
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
mov
int3
mov
jp
in
add
pop
add
xchg
add
add
push
aad
insb
cld
add
add
addl
jnp
mov
in
add
jp
mov
add
cld
pop
add
pop
add
add
addb
add
add
jl
add
add
movl
xlat
add
mov
lea
pop
pop
leave
ret
push
push
push
call
add
pusha
filds
add
add
add
add
imul
jmp
out
ja
add
movsl
lahf
ljmp
fiadds
call
push
add
push
xchg
add
fwait
add
imul
add
ljmp
mulb
hlt
lea
pop
push
mov
push
push
push
push
push
push
push
push
push
call
fists
pop
add
movsl
add
lahf
jmp
hlt
je
add
std
data16
push
add
out
add
fistpl
mov
add
movsl
add
test
add
add
popf
scas
xchg
add
add
mov
add
xchg
loop
mov
mov
test
add
add
xchg
cmpsb
cmc
fs
fsubs
cltd
mov
lea
pop
add
push
add
pop
cmpl
jne
push
push
shr
ror
push
push
pop
add
shr
xor
add
rol
sub
not
pop
inc
shr
rol
pop
push
lea
push
call
icebp
bound
lret
in
add
add
add
add
imul
out
mov
lret
loope
add
mov
mov
call
mov
mov
xchg
movb
roll
icebp
mov
jbe
int
mov
scas
lret
nop
shl
je
add
mov
add
mov
add
pushf
add
shlb
int3
fs
add
out
push
add
lods
push
add
mov
lea
pop
pushl
push
lea
shl
shl
lea
pop
call
push
call
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
leave
add
push
add
mov
add
cld
add
mov
cmc
add
xchg
add
add
mov
add
nop
cwtl
add
movsl
add
xchg
in
add
mov
jl
add
mov
int3
rolb
xchg
hlt
add
mov
add
mov
jbe
add
mov
fmull
inc
sldt
cmpl
je
push
push
push
lea
push
push
lea
push
push
call
xchg
add
mull
addr16
stc
call
xlat
test
test
fbld
push
loope
push
repnz
add
add
addl
loop
les
aam
add
jno
lret
add
pop
add
scas
fwait
insb
stos
arpl
add
add
test
outsl
out
add
add
mov
scas
fadds
xchg
mov
mov
lea
pop
cmpl
jne
leave
push
push
lea
push
push
call
jl
aam
mov
int
les
mov
into
mov
add
add
pop
mov
stos
scas
fiaddl
add
rolb
mov
add
add
icebp
sti
rcll
faddl
pop
mov
ja
add
out
add
repnz
mov
cld
imul
add
add
mov
aad
add
jl
mov
push
std
mov
stos
push
mov
xchg
pop
add
pop
pop
push
add
pop
pop
pop
push
not
add
add
pop
leave
push
push
push
lea
push
push
push
call
test
add
add
add
xchg
mov
scas
mov
mov
add
lock
popa
in
mov
addb
out
mov
add
jnp
ja
mov
stos
mov
xchg
mov
pusha
add
stos
add
add
add
add
add
xchg
jecxz
jge
jne
bound
popa
mov
lea
pop
add
push
lea
lea
sub
pop
ret
push
push
push
push
call
imul
jmp
add
rol
addb
add
add
xchg
add
xchg
gs
add
data16
add
movsl
xchg
test
lcall
add
test
add
jae
xorl
add
xchg
xchg
sti
add
in
sti
jnp
add
iret
add
push
push
add
add
test
pop
jmp
push
sub
add
pop
cmpl
jne
push
push
add
sub
push
xor
add
lea
shl
shl
not
sub
add
pop
ror
add
pop
push
push
call
add
cld
mov
add
add
xchg
je
mov
sahf
xchg
cltd
add
cmpsb
test
lods
xchg
into
data16
xchg
add
lea
jle
sti
fldl
add
add
add
push
add
mov
pop
add
add
push
add
filds
mov
add
movsb
repnz
lods
mov
add
in
cmpsb
ret
mov
add
pop
pushl
push
push
push
push
push
push
push
push
call
jmp
add
add
add
pop
stc
arpl
add
fs
push
add
negb
loope
add
mov
add
add
add
cltd
add
scas
repnz
mov
mov
xchg
add
scas
add
jle
jo
pop
add
lds
pop
sarl
mov
cmc
jnp
imul
jae
add
add
mov
mov
lea
pop
call
push
push
call
add
mov
in
add
mov
add
add
add
int3
addb
xchg
lahf
xchg
add
add
test
fdivl
add
insb
mov
add
mov
fwait
aad
mov
push
mov
add
add
push
mov
leave
imul
or
add
rclb
loopne
shr
shr
pop
jmp
cmpl
jne
mov
push
shr
sub
lea
pop
mov
jmp
push
push
push
lea
push
push
call
add
mov
xchg
xchg
mov
mov
int3
push
add
mov
add
add
add
jns
add
sarl
add
mov
add
push
mov
les
pop
add
in
add
rol
push
add
mov
add
add
add
push
std
test
add
pop
push
push
xor
ror
not
rol
pop
pop
push
dec
ror
pop
dec
jne
call
jmp
push
push
push
call
rolb
js
push
add
cwtl
faddl
into
add
add
testl
add
add
in
popf
shlb
mov
into
ret
add
add
jno
cld
add
loope
fnstsw
popf
andb
roll
pop
hlt
push
icebp
pop
jp
add
add
out
add
roll
mov
xchg
icebp
jne
sar
mov
cld
lea
pop
call
push
push
shr
sub
push
and
add
add
sub
not
shr
lea
pop
dec
lea
shr
pop
push
not
sub
shr
pop
pushl
push
push
call
loopne
mov
mov
add
cwtl
xchg
add
fs
add
fadds
mov
fisttps
int
iret
pop
mov
mov
add
add
std
cmpsb
add
add
mov
int
jl
rol
add
roll
enter
lods
mov
jbe
jb
frstor
push
je
cmpsl
add
add
add
pop
push
data16
mov
xchg
add
push
mov
les
xor
add
push
xor
inc
inc
lea
pop
push
push
add
ror
dec
pop
call
mov
push
push
push
push
push
lea
push
push
call
add
add
add
mov
jo
orl
pusha
add
add
lret
scas
push
cmpsl
jnp
add
jp
mov
test
add
add
add
add
lds
add
add
test
hlt
fnsave
add
add
hlt
pop
lret
lods
add
lds
add
cld
lea
pop
lea
push
push
rol
push
and
add
sub
not
sub
dec
pop
inc
ror
shr
shr
pop
push
pop
pushl
push
ror
not
rol
pop
call
push
push
push
push
push
push
call
pusha
add
add
pop
loop
stos
stos
add
aad
lock
incb
xchg
shr
loope
mov
into
mov
in
jo
push
cmc
add
add
add
adcb
add
add
add
icebp
shll
push
aad
add
popf
add
add
out
add
mov
lea
pop
call
push
push
not
sub
sub
push
or
inc
add
shr
add
rol
sub
lea
inc
pop
add
rol
shr
rol
pop
push
push
call
cwtl
add
add
add
mov
push
mov
add
enter
in
les
mov
add
add
les
add
add
add
std
add
add
subl
xchg
add
jl
add
add
add
add
out
jl
fcoms
cmpsb
popf
addb
in
add
cltd
orl
pushl
push
lea
sub
shr
pop
call
call
push
push
lea
push
lea
push
push
call
mov
loope
scas
ja
mov
add
mov
add
add
pop
xchg
add
xchg
roll
movsb
add
add
data16
jo
jle
add
add
add
addb
je
sarl
jno
pop
pop
mov
add
repnz
mov
add
push
enter
arpl
mov
lea
push
push
xor
shl
xor
push
or
not
add
sub
dec
sub
add
pop
ror
dec
pop
push
ror
pop
pushl
call
lea
push
push
push
call
stc
add
add
jb
cld
mov
add
jbe
stos
sti
jb
fcomps
add
add
roll
ljmp
fiadds
std
lea
add
add
xchg
pop
in
add
out
insb
add
jne
out
imul
cld
gs
int
les
cli
std
test
add
fisubrl
enter
in
add
push
jb
lret
add
bound
push
push
push
push
ror
sub
pop
pushl
push
push
shr
inc
shr
push
sub
add
dec
xor
ror
sub
pop
pop
push
rol
pop
push
push
not
shl
pop
call
push
push
not
lea
ror
push
push
pop
add
not
sub
sub
shr
pop
add
lea
add
pop
push
add
sub
shr
lea
pop
pushl
push
push
push
call
mov
lret
fbstp
add
add
mov
lret
jp
nop
clc
in
andb
xchg
add
stos
add
loop
loopne
enter
mov
push
jl
lea
add
add
add
rolb
cmpsl
lods
cwtl
xlat
add
arpl
mov
jno
add
cld
out
cmpb
lock
icebp
sarl
add
not
add
sti
mov
lea
pop
call
push
call
push
push
ror
push
sub
add
add
dec
sub
not
sub
dec
not
lea
pop
pop
push
add
sub
sub
pop
pushl
push
rol
xor
add
pop
call
call
jmp
push
push
call
add
mov
loope
pop
addl
add
add
add
data16
fwait
add
test
mov
add
push
jne
add
scas
add
andl
xchg
clc
add
mov
int
out
testl
roll
testl
fwait
add
pop
aam
xchg
out
int3
lea
pop
pushl
push
lea
pop
mov
push
lea
pop
jmp
push
push
shl
lea
xor
push
or
inc
add
lea
sub
ror
sub
pop
add
add
shl
pop
pushl
push
dec
pop
call
push
call
push
push
not
push
or
inc
add
rol
dec
sub
lea
sub
pop
shr
lea
pop
push
add
inc
pop
pushl
push
push
push
call
add
jno
xlat
call
add
push
add
fsub
mov
add
clc
fstpt
add
add
pop
stos
lds
mov
mov
scas
add
mov
add
xor
pop
add
cmpsb
xchg
stos
jae
mov
movsb
xchg
add
add
jns
in
mov
lea
pop
call
push
push
push
push
push
push
push
call
cmpsl
addb
les
jbe
into
xchg
add
add
add
addl
ror
push
mov
add
bnd
mov
add
rorb
add
add
add
add
addr16
add
loopne
jmp
std
fstp
add
popa
rolb
add
loope
call
pop
loopne
add
add
add
mov
arpl
add
lock
cltd
add
pop
push
call
leave
push
ror
dec
ror
pop
add
pop
pop
push
push
call
xchg
add
add
add
mov
add
add
cmpsl
add
add
pop
addl
add
popf
test
nop
imul
add
ret
xchg
imul
jp
add
mov
movsl
pop
mov
push
stos
add
jmp
int
cltd
call
arpl
add
add
ficomps
add
fsubrl
or
pop
leave
push
dec
pop
add
push
push
push
push
push
push
push
push
call
add
repnz
add
push
push
scas
sahf
lock
arpl
add
mov
js
add
push
add
mov
scas
add
divl
pop
int
std
cmc
les
add
lahf
iret
pop
aad
add
movsl
out
fildll
lds
fistpll
add
jne
add
mov
mov
lea
pop
ret
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
ret
popa
add
add
out
cmc
add
fistpll
test
je
add
in
jae
pop
call
add
int3
call
ja
add
loop
add
xlat
fcmovb
fwait
outsl
mov
xchg
mov
pop
add
into
rolb
mov
cld
stc
add
sahf
add
cmc
enter
add
in
roll
add
xlat
xchg
mov
and
leave
ret
push
push
lea
push
lea
push
push
push
push
call
xchg
fildl
add
cmc
mov
mulb
mov
jmp
add
jnp
add
add
push
add
add
stos
jb
pop
add
addl
mov
lods
add
std
mov
add
jge
scas
bound
add
movsb
mov
jle
add
add
fiaddl
pop
push
add
fisttpl
lret
lods
ljmp
add
mov
xchg
mov
lea
pop
push
mov
push
ror
not
pop
cmpl
jne
mov
push
ror
ror
pop
jmp
mov
push
shr
pop
and
push
push
push
call
stc
add
push
aam
add
add
add
add
xchg
jge
add
lock
movsl
shrl
stos
add
jae
fsubs
add
add
add
add
test
add
add
mov
loop
jecxz
mov
cld
add
xchg
mov
lret
js
out
iret
mov
lea
pop
xor
push
shl
add
pop
xor
add
xor
push
push
push
push
lea
push
lea
push
push
call
ret
mov
add
add
jle
mov
mov
add
add
jl
push
xchg
in
mov
mov
outsl
jge
mov
add
cmpsl
jl
mov
mov
loopne
cltd
pop
push
add
add
add
add
add
cld
test
lea
add
pushf
out
incb
clc
pop
jnp
add
lret
xchg
add
add
mov
lea
pop
dec
sub
jmp
push
push
push
push
lea
push
push
call
imul
add
add
mov
std
scas
orl
add
push
rcr
add
cmpsl
pop
add
pop
add
push
add
add
add
lret
add
mov
jle
add
faddl
mov
mov
in
add
add
ror
mov
add
clc
imul
pop
sub
pushl
push
dec
pop
pop
sub
cmp
jne
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
call
out
les
add
add
idiv
stos
shrb
add
clc
je
add
mov
jmp
add
jp
imul
vminpd
movsl
mov
mov
testb
cld
pop
jnp
inc
scas
add
movb
add
xchg
add
add
rclb
addb
add
add
in
add
jp
add
mov
mov
add
add
mov
mov
lea
pop
mov
lea
push
xor
pop
sub
push
push
push
push
push
push
push
call
ljmp
mov
out
push
lea
mov
sar
add
lcall
mov
pusha
add
jnp
movsl
mov
add
xchg
shlb
test
jno
add
add
add
add
add
mov
add
mov
jo
add
mov
lea
pop
mov
push
add
inc
pop
shr
add
sub
push
push
lea
push
push
push
push
push
push
push
call
cmpsb
add
cmpsl
xchg
add
mov
std
mov
add
bound
imul
movl
nop
add
mov
rcl
faddp
add
xchg
push
pop
arpl
push
fucom
lcall
stos
out
xchg
mov
add
mov
add
mov
add
add
in
lds
add
pop
pushl
pop
shr
push
shl
pop
and
push
push
push
lea
push
push
push
push
push
call
jns
add
add
test
add
ret
lods
enter
lock
scas
add
jle
fldcw
mov
mov
add
add
hlt
jns
add
add
loop
push
lret
addl
add
add
push
pop
push
add
mov
add
add
push
add
pusha
mulb
cld
lea
pop
sub
cmp
jne
leave
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
jns
aad
cmpsb
sarl
pop
je
add
fisubrl
jle
imul
add
out
test
jo
add
mov
add
insb
hlt
push
add
mov
xchg
add
mov
rcl
lods
pop
std
add
aad
cmpb
ret
add
out
add
sahf
add
add
xchg
add
mov
jb
out
sahf
add
jno
ror
push
popl
ret
lea
pop
ret
push
push
push
call
add
xchg
pushf
lret
test
jp
add
jp
mov
push
mov
icebp
add
add
add
add
add
repnz
add
imul
in
negl
int
add
jns
sahf
enter
fs
add
xchg
out
jle
fchs
movsl
out
mov
lea
pop
push
push
lea
push
push
lea
push
call
imul
add
cmc
push
mov
add
add
pop
add
xchg
lods
and
add
addb
shl
out
add
add
add
in
push
bound
mov
add
mov
popf
add
arpl
add
add
add
mov
add
mov
imul
js
add
adc
in
add
push
push
push
push
lea
push
push
push
push
push
push
call
mov
in
add
add
ljmp
mov
push
mov
mov
add
add
scas
iret
pushf
aam
clc
movl
add
xchg
stos
add
add
into
jp
mov
push
call
in
add
add
add
popf
lahf
stos
add
add
add
lea
add
mov
lea
pop
push
push
sub
lea
xor
pop
push
push
xor
pop
push
push
mov
push
not
shr
add
inc
pop
lea
sub
push
push
push
push
push
lea
push
call
add
mov
into
jnp
fwait
add
xchg
add
fadds
gs
add
add
lea
add
cwtl
lea
add
add
add
mov
add
add
add
add
add
jbe
pop
add
addl
xlat
pop
add
jge
movb
enter
mov
lea
pop
mov
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
out
add
add
add
mov
mov
add
std
add
js
je
ror
jp
add
add
jb
pop
add
shll
add
add
cli
cwtl
sar
in
fcmovnbe
jae
roll
add
add
add
add
add
call
data16
insb
leave
add
mov
stos
add
push
int
mov
add
add
cwtl
mov
lea
pop
shr
push
push
push
push
push
push
push
call
add
pop
add
add
push
mov
pop
bound
subb
add
iret
fimull
lret
test
lret
add
gs
add
pop
mov
sahf
xchg
mov
iret
add
aam
mov
std
mov
add
add
pop
lods
pop
test
pop
add
add
add
mov
outsl
cmpsb
xchg
add
add
add
pop
mov
lea
pop
add
push
push
call
idivl
add
int
add
add
add
lods
add
hlt
lds
popf
scas
lahf
xlat
int3
scas
into
sarb
data16
out
addb
add
mov
call
out
out
mov
add
pop
out
add
add
in
xchg
add
add
rclb
mov
mov
repnz
mov
lea
pop
mov
push
add
add
pop
add
push
lea
pop
mov
push
lea
push
push
push
lea
push
push
lea
push
push
call
rolb
jl
pop
add
add
clc
add
add
in
fdiv
add
notb
mov
add
add
push
add
mov
ljmp
incb
fldl
mov
add
andb
fcmovu
add
leave
lods
add
jns
fistl
mov
data16
jge
push
push
lea
push
push
push
call
mov
add
add
pop
xchg
add
mov
add
mov
add
insb
add
lea
push
add
add
lret
add
fdivrl
add
rolb
add
jmp
pop
cmpsb
add
mov
add
arpl
add
jne
loop
add
mov
lea
pop
xor
push
push
push
push
push
lea
push
call
test
test
fldl
addl
xchg
testl
movsb
scas
mov
shl
les
push
mov
shl
push
add
scas
ja
int
push
add
hlt
jmp
pop
add
popf
movsl
pusha
mov
icebp
into
add
pop
into
into
push
xchg
cwtl
xchg
pusha
add
lods
mov
add
addl
sahf
xchg
out
add
add
add
data16
lea
pop
mov
and
push
push
call
nop
add
pop
cwtl
cmpsl
jle
add
add
mov
mov
add
add
iret
push
popf
mov
add
jns
add
add
mov
xchg
add
push
imul
pop
std
mov
jle
add
gs
add
shll
fisttpl
jp
add
into
add
outsl
fisubrs
ffree
out
add
pop
call
add
cmp
je
push
rol
xor
rol
pop
add
cmpl
jne
push
add
add
ror
pop
xor
push
inc
pop
pop
push
shl
xor
add
pop
pop
push
push
push
lea
push
lea
push
push
push
call
mov
add
mov
xlat
add
insb
pop
mov
add
add
fwait
add
add
jle
jnp
movl
add
add
mov
bound
sahf
loopne
xorb
mov
pop
xchg
mov
add
in
insb
xchg
xorb
les
pop
push
push
lea
push
call
pop
xchg
add
add
add
add
add
popl
lahf
mov
call
out
test
add
mov
cld
push
add
add
add
add
add
int
add
cmc
iret
add
aam
cmpsb
add
clc
lahf
fwait
sti
mov
xchg
std
add
add
mov
scas
movsb
nop
icebp
lahf
in
pop
icebp
data16
add
push
push
add
pop
pop
push
add
sub
pop
leave
ret
push
inc
shr
sub
shr
pop
mov
push
push
push
push
push
push
push
push
push
call
clc
add
lock
push
bound
test
test
add
xlat
add
jmp
add
mov
mov
stos
test
jmp
in
push
stos
add
mov
add
xchg
in
fwait
fwait
add
mov
add
add
subb
push
add
add
pop
add
push
push
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
add
add
aad
outsl
add
add
out
call
add
pop
cmp
fisubrl
bound
add
add
jmp
mov
sbb
add
in
std
add
add
add
mov
add
int3
mov
xlat
lret
push
pusha
add
andl
add
movsb
add
push
jns
out
add
jns
mov
lea
pop
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
call
sahf
add
repnz
mov
add
shr
mov
lret
repnz
lock
add
cld
in
add
cmpsl
jae
add
aam
aam
pusha
mov
icebp
int
fwait
aad
cld
test
add
lcall
add
in
movl
mov
add
decb
pop
pop
push
lea
shr
rol
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
test
add
arpl
add
popa
push
add
repnz
fdivr
add
loope
into
add
std
test
add
add
add
add
add
roll
add
rorl
add
popl
je
add
xchg
in
addl
gs
lea
pop
call
xor
pop
push
push
push
push
push
push
push
push
push
push
call
fldl
push
roll
lahf
addl
fiaddl
jne
add
in
add
aam
jmp
in
lret
jns
test
sarb
mov
loopne
in
stos
add
lret
add
add
add
int3
out
push
scas
xchg
mov
fcmovne
out
xchg
add
add
lds
push
add
movl
scas
add
pop
pop
pop
pop
push
add
pop
pop
push
sub
lea
pop
leave
ret
push
push
push
push
push
push
call
xorb
jo
out
out
pushf
mov
add
fsubs
out
fnsave
call
xchg
shll
mov
add
add
cmc
lods
mov
mov
mov
fs
push
add
mov
pushf
pop
add
jnp
add
in
xchg
xchg
mov
add
int3
lea
pop
mov
push
sub
sub
pop
add
push
push
push
not
sub
pop
push
push
push
lea
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
mov
test
add
add
add
xchg
arpl
mov
movb
add
cld
js
lock
xchg
nop
push
cli
mov
add
add
mov
leave
jbe
mov
add
push
add
jno
lcall
add
add
imul
or
cld
lea
pop
push
push
push
push
lea
push
call
roll
xchg
mov
add
repnz
add
add
sahf
add
push
test
add
xchg
add
add
add
add
jns
add
fiadds
add
outsl
add
add
mov
roll
add
loop
data16
add
fwait
mov
jnp
add
adc
lea
push
push
lea
push
call
jl
mov
jns
add
add
add
push
xlat
add
rolb
roll
add
add
icebp
pop
js
xchg
xlat
shll
jb
add
add
int3
add
filds
sar
add
in
movb
add
add
add
add
arpl
fstpl
mov
mov
add
loop
add
pop
sub
push
sub
sub
ror
pop
mov
shr
push
xor
lea
rol
pop
add
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
add
jecxz
mov
lret
add
add
cltd
cli
fidivrs
add
std
add
std
jbe
insb
int
ret
hlt
outsl
mov
arpl
mov
icebp
pop
arpl
movsb
push
in
cmpsl
and
jmp
fisubrl
jb
pushf
add
mov
mov
add
add
jmp
add
mov
out
mov
popl
mov
loope
out
add
lea
pop
mov
push
push
push
lea
push
lea
push
push
call
add
add
lds
loop
aad
add
jmp
add
add
test
xchg
loopne
mov
mov
cwtl
mov
imul
in
add
add
push
ljmp
add
scas
add
int
jle
add
mov
rolb
cli
add
pop
add
push
add
pop
pushl
push
rol
pop
popl
push
xor
pop
mov
add
push
ror
sub
pop
xor
push
lea
push
call
in
faddl
push
out
pushf
add
add
leave
cmpsb
in
add
add
add
add
ljmp
in
sahf
add
add
addb
add
pushf
popf
add
add
ret
mov
add
add
cmc
add
enter
add
int3
mov
lea
pop
lea
push
push
push
push
push
push
push
call
push
int
add
add
in
jo
add
popa
add
test
add
rolb
add
je
add
add
add
add
xchg
add
xchg
std
add
roll
fildl
flds
int3
pushf
jo
add
test
lahf
loop
aad
rol
mov
out
mov
out
fiaddl
mov
lea
pop
mov
add
push
push
push
push
call
addr16
out
imul
add
fs
roll
xchg
bound
lods
jo
add
mov
add
insb
test
fs
add
clc
pusha
jb
jae
add
clc
add
roll
popa
aad
testl
stos
movsl
repnz
out
sahf
add
add
add
pushf
add
add
lret
stc
mov
mov
stc
push
add
add
mov
shlb
mov
pushf
popf
mov
lea
pop
xor
call
push
add
not
pop
add
nop
nop
push
pop
cmp
je
nop
push
lea
push
push
push
push
push
push
push
lea
push
call
add
add
loopne
mov
add
fnsave
push
lret
negb
add
fidivl
add
add
add
cwtl
imul
push
mov
lea
pop
add
roll
mov
int3
add
out
mov
lods
addb
add
popf
loop
mov
add
add
negl
in
push
add
add
mov
lea
pop
nop
inc
nop
push
push
push
push
push
lea
push
push
push
push
call
data16
mov
imul
hlt
push
cmp
stos
add
add
add
push
add
jecxz
shll
loope
push
mov
pop
rcr
add
js
jno
add
mov
sahf
mov
add
lcall
add
mov
mov
test
add
add
std
lcall
fadds
mov
and
nop
push
push
push
push
push
push
push
push
push
push
call
mov
add
xchg
imulb
mov
add
jo
leave
pop
add
popf
test
push
out
popa
add
testl
add
hlt
incb
xchg
pop
hlt
add
add
add
xchg
test
loop
add
push
jbe
hlt
addb
add
mov
add
add
fwait
nop
add
add
add
add
ljmp
jns
mov
lea
pop
cmp
jb
xor
jmp
push
lea
shr
dec
pop
mov
add
movzwl
push
push
push
call
add
push
in
int3
test
jmp
add
add
add
add
mov
scas
add
lock
pushf
mov
add
add
add
add
add
mov
add
add
out
pop
pop
mov
add
int
out
xchg
jo
add
add
mov
testb
clc
rolb
aad
popa
mov
xchg
popl
mov
add
nop
popa
lock
add
add
mov
lea
pop
mov
push
lea
sub
rol
not
pop
add
push
push
push
push
push
push
push
call
in
sti
lock
pop
mov
add
add
jo
add
test
aam
imul
mov
jae
jb
add
add
mov
out
mov
add
mov
addr16
add
push
add
push
add
add
addb
mov
xlat
add
add
add
push
jmp
out
cmc
add
sahf
add
lds
cmpsl
add
bound
add
pop
mov
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
xchg
enter
xchg
lahf
xchg
ret
add
mov
add
add
add
lret
add
mov
xchg
jae
pop
fcomps
je
fwait
add
add
add
jle
add
popa
cltd
in
add
aad
push
add
push
fiadds
add
add
push
add
add
test
pop
xor
push
shr
lea
pop
xor
shl
xor
push
add
shl
pop
shl
push
pop
xor
push
shr
shl
pop
shl
xor
mov
push
push
push
push
call
add
add
mov
stos
les
add
add
add
add
movsb
push
xchg
les
nop
add
popf
mov
jmp
mov
les
push
cmc
add
add
jmp
fcompl
add
pop
mov
ljmp
pushf
lret
rol
add
insb
add
mov
out
add
aad
jnp
iret
nop
add
add
fwait
movsb
lods
mov
add
xchg
mov
lea
pop
add
pop
push
push
push
lea
push
push
push
push
push
call
loop
into
incb
add
add
imul
rclb
xchg
mov
rol
mulb
lds
add
faddl
add
add
mov
rolb
hlt
mov
jecxz
mov
add
mov
add
add
add
add
fildl
add
pop
pushf
jmp
add
cmpb
fwait
mov
mov
add
jp
mov
lea
pop
pop
pop
pop
push
sub
pop
leave
push
add
add
pop
ret
push
push
lea
push
call
pop
mov
mov
shl
sti
fildl
rcrl
add
addl
add
jp
js
adc
je
add
add
add
add
jp
mov
add
jmp
stos
add
pusha
pop
out
add
pusha
add
movsl
push
pop
cli
add
mov
stos
cld
cmc
add
xchg
mov
ret
mov
lea
pop
mov
push
sub
pop
push
push
sub
shl
shr
ror
pop
push
push
push
lea
push
push
call
neg
mov
add
pop
add
add
mov
test
add
leave
xchg
lcall
add
jns
add
add
add
xchg
scas
mov
call
add
add
stos
mov
mov
add
mov
add
xchg
fwait
add
xchg
add
adc
push
shr
inc
pop
push
mov
push
push
lea
push
push
push
push
push
lea
push
call
mov
lds
add
clc
jne
testb
add
add
add
rolb
add
add
gs
std
roll
jp
nop
popa
xchg
add
add
leave
mov
fadds
orl
in
testb
xchg
add
in
addb
xchg
push
add
nop
add
gs
flds
mov
add
insb
add
cmpsb
rolb
add
add
add
xchg
out
add
jb
testb
add
mov
lea
pop
mov
push
add
pop
mov
test
je
push
add
inc
pop
mov
push
push
lea
push
push
lea
push
push
push
push
push
push
call
pop
lods
mov
jmp
pop
mov
add
popf
ret
add
add
xchg
in
add
add
add
in
mov
add
add
add
mov
add
add
push
add
pushf
fldenv
add
xlat
mov
mov
clc
jno
add
push
in
clc
add
add
pop
pop
add
enter
add
add
sub
testb
mov
add
push
shr
xor
lea
lea
pop
mov
push
add
lea
pop
mov
push
shl
shl
pop
mov
push
push
push
push
push
lea
push
call
add
out
jae
stos
stc
xchg
pushf
les
add
add
xorl
loop
bound
mov
roll
popf
add
out
add
lahf
fsubs
add
roll
test
in
add
mov
cltd
mov
sahf
std
nop
cwtl
xchg
addr16
js
add
jecxz
fidivl
subl
lea
pop
inc
push
xor
add
add
pop
cmp
je
test
je
push
push
push
lea
push
push
call
add
pop
add
jne
stos
jb
add
add
add
subl
scas
mov
test
add
lahf
jbe
xchg
or
jno
pop
mov
lods
cmpsl
mov
in
add
loope
add
pop
add
add
pop
out
out
add
mov
mov
jbe
add
mov
mov
stc
add
add
mov
je
fmull
push
inc
push
add
pop
cmp
je
test
jne
push
push
push
push
call
mov
leave
add
add
push
fmul
push
js
mov
add
mov
icebp
add
xchg
rolb
add
add
add
add
add
fwait
nop
addl
add
repnz
loop
shl
arpl
add
push
in
add
add
jmp
fsubs
mov
ret
pusha
scas
jl
cltd
add
addb
add
xchg
jecxz
mov
outsl
push
mov
mov
lea
pop
xor
pop
push
sub
pop
pop
pop
pop
push
push
push
lea
push
push
push
push
call
xchg
test
lock
add
mov
leave
jmp
add
fistpll
add
add
mov
scas
xchg
mov
mov
jmp
xorb
add
arpl
add
mov
add
push
roll
add
add
jle
mov
pop
add
add
mov
lea
pop
leave
ret
push
push
push
push
lea
push
push
push
lea
push
call
pop
mov
out
add
add
add
movsl
ret
add
jge
std
mov
jnp
ljmp
stos
data16
add
add
add
lahf
add
addr16
cwtl
rcr
add
add
mov
testl
add
add
stos
fdivrl
addl
leave
add
mov
mov
add
repnz
int3
mov
arpl
pop
mov
inc
cmp
jne
push
push
push
push
call
push
push
jmp
pop
sti
rcrl
ja
add
push
push
into
aam
jno
fiadds
pop
test
add
add
mov
fildll
pop
add
clc
xchg
mov
lds
add
in
add
xchg
in
stos
mov
add
pop
sahf
movl
xchg
jbe
add
call
add
pop
lea
push
push
call
movsl
in
push
subl
fbld
stc
push
stos
ljmp
pop
pop
lock
pop
rclb
jno
gs
add
bound
add
xchg
xchg
push
aam
pusha
mov
push
sar
clc
add
pusha
test
add
mov
sarl
outsl
aad
fst
add
addr16
add
add
add
cmp
mov
add
xlat
mov
lea
pop
mov
test
je
mov
push
inc
pop
add
cmp
jne
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
popfw
add
std
fldenv
pushf
add
pop
add
lock
jbe
add
add
mov
mov
fcomp
lahf
lahf
fcoml
add
cmpsl
scas
aam
add
mov
pop
pop
add
cli
xchg
loope
push
xchg
xchg
negb
add
pop
rcll
add
add
sti
add
jb
jae
add
mov
mov
lea
pop
mov
test
je
push
lea
push
push
call
mov
add
add
dec
nop
pop
add
add
int
bound
cmc
fwait
pop
add
cld
add
xchg
add
cmpsl
add
pop
cmpsb
jge
add
add
add
add
nop
arpl
imul
add
mov
out
lods
jmp
add
pop
mov
push
lea
push
push
push
call
mov
add
xchg
bound
push
filds
ja
mov
mov
fucom
push
cmpsl
jae
cmpsl
add
add
mov
mov
mov
pop
cmpsl
add
mov
add
add
sti
roll
pushf
push
add
xchg
ja
scas
scas
add
push
fidivs
push
iret
mov
jge
js
adcb
in
mov
lea
pop
add
cmp
je
jmp
push
push
lea
push
push
push
push
lea
push
lea
push
call
jle
add
fidivrs
push
mov
mov
xchg
ljmp
add
add
scas
cmc
push
addl
sahf
mov
jae
pop
jns
pop
test
mov
add
mov
add
leave
rorl
lods
mov
lods
lods
add
add
test
insb
in
add
jne
decb
pop
xor
push
add
pop
pop
push
push
push
lea
push
lea
push
call
roll
cltd
hlt
faddl
sarb
jmp
add
add
stc
aam
mov
add
mov
push
add
lds
leave
add
out
in
add
add
mov
push
add
std
add
in
rolb
add
mov
add
flds
add
mov
add
popa
mov
lea
pop
pop
push
lea
push
push
push
push
push
push
call
add
fisttps
add
sti
test
add
adcb
pop
jp
add
aam
add
out
add
xchg
jmp
add
add
pop
jge
jne
add
add
outsl
jo
fiadds
add
jp
add
fiaddl
bound
add
add
cld
data16
fldt
fs
mov
rolb
pop
data16
mov
add
push
add
add
lea
pop
pop
pop
leave
push
lea
pop
ret
lea
pop
push
push
lea
push
push
push
call
add
jns
lret
add
add
add
add
filds
shlb
stos
jmp
iret
add
push
xchg
cld
cli
mov
outsl
add
xchg
je
les
add
add
add
add
jno
lahf
icebp
push
mov
add
add
cltd
negl
shl
add
pop
jb
add
jp
test
mov
lea
pop
pop
pop
push
lea
push
push
push
push
call
ja
jmp
jl
add
pop
add
add
jp
mov
fldl
pop
push
mov
add
nop
add
add
stc
mov
add
shll
jge
fs
jge
mov
add
add
in
ficoml
mov
pop
scas
jp
int3
add
add
push
add
sub
mov
lea
pop
pop
push
not
pop
leave
ret
mov
push
lea
rol
add
pop
pop
pop
pop
push
add
shl
not
pop
pop
push
shr
xor
add
pop
leave
ret
push
push
call
xchg
mov
std
push
loope
add
imul
jb
mov
pop
mov
add
mov
fldt
mov
fstpl
add
xchg
xchg
jne
add
mov
jns
add
push
fmul
push
add
insb
cltd
int3
add
mov
xchg
add
push
mov
add
add
je
jnp
cld
lea
pop
rol
push
lea
push
call
outsl
in
out
add
add
xchg
sbb
add
add
cmc
imul
lds
popf
add
lea
add
add
xchg
push
test
fiaddl
out
add
add
add
testl
add
fwait
add
add
pusha
insb
add
pop
add
mov
out
fwait
test
xchg
notb
add
mov
lea
pop
rol
push
push
lea
push
lea
push
lea
push
push
push
call
leave
data16
cli
mov
add
nop
add
add
ja
in
xchg
stc
add
add
test
mov
add
fadds
stos
aad
jmp
add
xchg
mov
leave
add
pusha
mov
mov
add
mov
rolb
xchg
add
mov
lea
pop
xor
inc
cmpb
jne
push
push
lea
push
push
push
lea
push
push
lea
push
call
test
push
nop
fiaddl
add
cmpsb
mov
add
sahf
test
add
add
hlt
jae
cmc
jmp
je
nop
mov
stos
movsl
add
add
test
hlt
fcoms
subl
add
pop
push
push
loopne
cmpsl
push
push
add
add
in
je
xchg
mov
add
ja
mov
lea
pop
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
jno
sti
movsb
adc
sti
movsb
mov
sti
movsb
xchg
mov
sti
dec
lods
mov
sti
movsb
sub
sti
cld
push
mov
add
jle
nop
push
jbe
jno
mov
xor
arpl
xor
xor
dec
repz
push
dec
rcl
push
mov
mov
jbe
popa
add
mov
loopne
sahf
aas
inc
or
xchg
push
aam
inc
call
call
mov
test
cmc
repz
fsubs
xor
jne
lret
mov
iret
out
pop
mov
std
popf
inc
addr16
pop
std
mov
mov
iret
pop
loop
mov
repnz
jno
sahf
mov
cli
xchg
fs
jb
lcall
sub
mov
mov
push
out
int3
incl
add
pop
fwait
and
lods
pop
adc
inc
outsl
imul
and
and
sarl
ljmp
out
inc
mov
pop
mov
lcall
movsb
lret
adc
jb
xchg
ja
scas
lods
xchg
add
pop
and
mov
xchg
aas
pushf
dec
mov
push
or
insb
ss
in
or
notb
insb
rsm
shrb
loope
fidivl
inc
sub
scas
or
jns
sub
das
ds
loop
popl
dec
jb
aaa
or
int
fwait
les
data16
mov
cmp
adc
jmp
pop
adc
std
cld
in
xor
push
xor
sahf
xchg
sbb
cmpsl
xor
lret
cmp
leave
jns
inc
jne
movsl
dec
adc
sbb
jl
add
mov
jb
nop
pop
mov
jg
pop
cmp
gs
and
xchg
adc
sub
aad
lods
jns
rcll
dec
sbb
add
jns
mov
sub
jne
mov
ret
inc
cs
push
push
cmp
pop
mov
jl
fsubrl
xchg
xchg
adc
or
xchg
or
ss
xor
inc
jge
jae
push
pop
test
loopne
mov
out
mov
insb
testb
popf
imulb
jecxz
outsl
push
inc
leave
xchg
jo
sbb
sub
popa
scas
mov
imul
stos
mov
imul
call
or
mov
popf
test
test
rcll
mov
pop
push
or
out
into
fbld
mov
andb
stc
std
movsl
push
xchg
inc
outsl
mov
cmp
push
andb
fwait
adc
div
cmp
xor
seta
sub
out
test
kmovw
jp
into
mov
fwait
pop
loop
lahf
push
bound
pop
rorl
adc
mov
aam
mov
jge
push
das
stos
sbb
and
push
sti
inc
addr16
add
ds
sahf
loopne
adc
cs
stos
in
mov
dec
daa
scas
lock
stos
shl
idivb
insb
rolb
adc
dec
pop
sbb
pop
pop
mov
mov
jmp
add
sbb
and
arpl
mov
loopne
rcrb
push
mov
cli
cwtl
adc
mov
fwait
xchg
xchg
add
and
jns
imulb
adc
mov
mov
sbb
inc
inc
daa
mov
arpl
xor
es
arpl
xlat
xchg
cltd
mov
and
pop
push
adc
mov
dec
lea
roll
mov
mov
push
jns
xor
out
enter
inc
leave
ffree
cs
jge
js
daa
sub
seta
icebp
mov
cmp
loope
mov
adc
loopne
sub
or
repnz
jmp
shll
mov
inc
xchg
mov
data16
ss
jmp
jo
add
cltd
inc
loope
test
pop
dec
clc
xchg
je
mov
or
xchg
pop
xchg
leave
jnp
pusha
mov
das
or
xor
jmp
ficomps
push
jne
mov
or
sub
mov
jae
jnp
rorl
cld
mov
into
cmc
fcmovne
pop
cld
ja
scas
std
and
xor
adc
inc
push
leave
out
ljmp
and
cmp
lahf
out
inc
pop
mov
xor
arpl
daa
clc
mov
rcrl
mov
sub
rcl
cmp
mov
pop
push
call
add
push
jns
adcl
dec
repz
dec
lods
dec
scas
or
mov
inc
cmp
test
outsl
jge
aas
mov
adc
adc
fmul
rcll
xchg
push
popf
cli
jl
out
out
outsl
add
inc
pop
sub
pop
jns
jg
bound
cld
cmp
jns
nop
xlat
xchg
mov
inc
or
xlat
push
hlt
in
lret
cmp
test
gs
stos
xchg
push
push
ficompl
or
pop
sarl
push
pop
addr16
inc
mov
fwait
sub
rcll
dec
int3
ret
adc
testb
jnp
sti
mov
sbb
pop
mov
xlat
mov
inc
in
sahf
mov
sti
dec
stc
mov
pusha
push
push
scas
mov
mov
shll
mov
xchg
xchg
and
iret
cwtl
lods
cmpsb
mov
enter
dec
xor
dec
and
testl
mov
cmp
aaa
es
shl
pop
xchg
int3
sbb
leave
mov
dec
mov
jmp
jnp
es
into
jne
xchg
lds
push
jb
movsb
mov
scas
adcb
into
cmp
addr16
ja
outsb
sbb
and
jo
nop
lahf
sbb
pop
sub
jns
fildl
outsb
repz
outsb
fs
in
mov
mov
loope
pusha
fs
rcrb
call
lds
fucomp
mov
je
iret
aas
xlat
ljmp
pop
mov
pop
mov
xchg
inc
pop
add
pop
push
outsl
lds
mov
mov
mov
add
sub
push
cmp
das
xor
or
ss
mov
sbb
or
xchg
movsl
mov
lods
test
test
mov
lcall
pop
enter
jns
lret
pop
sub
fwait
jne
dec
mov
jle
call
lret
imul
mov
sbb
icebp
adc
sbb
popa
sbb
sti
cwtl
adc
adc
data16
and
int
xor
shlb
pop
cmp
mov
inc
daa
lret
movsb
adc
pop
movsb
ja,pn
aad
sub
mov
ds
mull
sub
addr16
loope
push
insb
inc
call
push
xor
sahf
adc
cmpl
rcr
sub
mov
dec
popf
xchg
stc
cmc
in
call
enter
iret
mov
test
jl
mov
xor
jle
cmp
ss
mov
mov
movsl
push
pop
fstps
xor
jmp
popfw
add
pop
add
jmp
sbb
movsb
push
aam
xor
push
int3
jg
cmpsl
pop
sbb
push
xlat
inc
popa
adc
lods
loope
jno
cwtl
mov
or
inc
shll
movsb
inc
cmp
mov
dec
je
jno
rcl
cwtl
outsl
pop
push
das
pop
jg
lods
fldl
call
arpl
sbb
fwait
popf
mov
sbb
icebp
or
fwait
rcr
cwtl
xchg
mov
stos
ret
fdivp
mov
aaa
mov
mov
mov
pop
dec
push
xchg
cmc
out
cli
push
jno
mov
insl
lds
int3
test
call
ja
adc
dec
xor
mov
ret
lea
idivl
rcll
inc
sbb
call
fwait
insl
leave
pop
lret
out
lock
jo
jmp
cmpb
and
repnz
mov
jne
call
mov
daa
es
jl
or
and
push
sbb
shlb
movsb
sbb
sbb
add
popa
mov
jmp
aam
rcl
sbb
sahf
and
mov
jg
push
jmp
xor
test
inc
in
sbb
pop
stos
push
push
mov
jae
fcomp
addr16
int
add
out
aas
push
mov
dec
filds
mov
pop
jge
loope
adc
gs
pop
sub
mov
sub
sahf
stos
sti
mov
fwait
call
dec
mov
shlb
cmovb
ljmp
sub
sahf
lcall
cmp
xchg
push
and
pop
stos
mov
ljmp
lahf
adcl
mov
sub
cmpsl
or
add
dec
insb
shrl
das
dec
push
mov
jg
mov
daa
adc
mov
std
arpl
into
push
inc
pop
xor
enter
jecxz
sub
xchg
inc
das
and
lret
inc
repnz
ds
sbb
insl
adc
xor
pop
test
sub
xor
fsts
jb
pop
shlb
xchg
lret
xor
xchg
bound
test
push
aaa
or
dec
and
int3
cld
imull
sbb
mov
mov
sti
pop
or
out
jmp
or
inc
imul
out
add
push
push
xor
into
sbb
sbb
adc
cmp
hlt
movsl
xchg
sub
sub
ficompl
mov
out
inc
ljmp
push
out
and
test
out
es
add
iret
add
cld
xchg
xchg
rorl
and
je
ds
adc
lret
hlt
in
xlat
aad
fsubl
enter
cmpsb
clc
dec
sub
lcall
je
leave
in
inc
mov
ret
pop
sbb
pusha
insb
sbb
les
add
insb
mov
inc
xchg
mov
push
cmp
mov
mov
sbb
jl
addr16
sbb
cmp
fsub
int
add
or
out
and
je
arpl
ljmp
jne
jne
and
adc
in
push
cmpsb
subb
fisubrs
out
fwait
into
push
repz
inc
out
lahf
mov
or
xchg
fdivl
mov
adc
push
fdivrl
leave
dec
repz
jno
sub
scas
xor
sahf
lods
stos
pop
shll
addr16
mov
cmp
jbe
int3
fdivrl
xor
jne
pop
push
cmp
pusha
mov
cmpsb
dec
jecxz
fsubl
dec
push
mov
xchg
in
test
test
inc
mov
scas
js
pop
pop
adc
aam
dec
sti
push
dec
mov
test
mov
xor
sub
sbb
sub
fmuls
in
mov
mov
fisubs
fdivl
test
lea
lods
adc
das
out
adc
push
or
and
outsb
jo
pop
lcall
jecxz
hlt
dec
pop
inc
push
repnz
adc
sti
xchg
fiadds
fs
pop
ja
cmp
push
arpl
jne
jns
pusha
pop
push
push
mov
in
dec
sbb
int
test
sub
mov
mov
leave
shlb
fidivrl
sub
ljmp
leave
cmc
push
roll
aas
xchg
jnp
lock
sub
daa
inc
and
xchg
adc
outsl
push
mov
rclb
dec
lret
push
fisttpll
cli
les
jb
add
xchg
add
in
lods
and
stos
sub
out
aam
xor
xchg
outsl
cmpsl
testb
push
jns
gs
test
mov
mov
dec
and
mov
dec
cmp
jbe
sub
test
mov
arpl
js
pop
mov
cmpb
jbe
jmp
pop
out
sub
push
dec
inc
add
cmc
fsub
stc
stos
mov
clc
loop
dec
cmp
and
mov
ljmp
push
jnp
mov
adc
imul
jmp
xchg
aas
mov
cmp
mov
out
fsubrp
ret
pop
test
jl
shll
and
mov
jb
mov
lods
shll
leave
lcall
push
or
and
data16
push
ljmp
pop
sub
or
pusha
lret
lea
or
or
inc
add
pop
jmp
push
lds
in
std
fists
inc
aaa
outsl
jno
xchg
adc
sbb
mov
push
inc
sti
lahf
movsl
jp
sarw
in
push
dec
js
dec
push
out
ljmp
lret
and
xchg
imul
xchg
addl
push
fs
cld
push
cmp
jle
xor
mov
jae
sub
sbb
imul
xchg
inc
mov
or
mov
xchg
xor
adc
jl
dec
cmpsb
push
xchg
xchg
push
add
test
test
dec
sahf
push
fcmovnb
xchg
dec
shl
and
xchg
jmp
les
mov
shrb
sub
xlat
fwait
push
ja
mov
cmc
mov
data16
lods
sub
xlat
iret
add
sub
mov
add
icebp
push
inc
pop
shr
adc
insb
xchg
stos
lock
mov
mov
adc
jecxz
or
dec
dec
push
mov
ret
aam
out
shll
jmp
xlat
mov
out
pop
ficomps
add
clc
mov
jno
sti
ds
gs
pop
push
ret
mov
call
or
int
pop
and
nop
lods
xchg
scas
mov
sbbl
aad
and
push
test
je
dec
mov
sarb
mov
jo
pusha
jl,pn
iret
loopne
xchg
xchg
push
jecxz
out
push
push
cmp
pop
cli
xchg
cmp
adc
dec
adc
test
faddl
mov
pusha
jnp
inc
scas
or
push
inc
in
ror
and
jo
stc
sub
mov
dec
push
lahf
sti
xchg
aad
imul
pop
lea
nop
daa
and
dec
xchg
mov
hlt
test
ret
fisubs
pop
sub
adc
ljmp
mov
mov
adc
pop
test
rclb
sbb
test
rcll
dec
in
cltd
dec
out
xor
les
inc
and
fs
loopne
cmpsl
sub
stc
cld
data16
mov
push
outsb
and
js
mov
out
add
aad
nop
in
stos
aad
cs
outsl
rep
xchg
out
sub
xor
dec
imul
lds
test
subl
inc
lret
out
nop
push
push
xor
sub
pop
and
out
shrd
sbb
mov
inc
addr16
or
fs
jle
mov
xor
fcom
jecxz
xor
mov
mov
pop
int3
cmp
xchg
xchg
idivl
mov
mov
into
outsb
mov
jo
mov
aad
cmc
xlat
push
jb
push
imul
push
cli
sbb
jo
inc
es
test
imul
insb
inc
pop
push
rorl
mov
lea
push
xor
inc
and
sbb
cltd
imulb
aas
and
xchg
xchg
push
nop
pop
push
decb
call
fisubs
mov
mov
dec
jno
lock
and
and
addr16
add
and
data16
inc
outsb
das
mov
imul
stos
jbe
test
jle
dec
icebp
scas
push
dec
leave
jbe
or
leave
in
repnz
adc
aaa
setbe
push
xchg
movsl
mov
leave
push
or
xorl
lret
loope
into
imul
test
or
dec
sub
and
and
lret
xchg
push
pop
or
aas
pop
mov
push
popa
xchg
mov
fidivl
aam
mov
mov
mov
nop
leave
lods
aas
sti
ds
hlt
je
sbb
or
andb
lods
mov
sub
int
and
sbb
mov
pop
test
or
out
sbb
xor
ss
dec
in
faddl
je
imul
ja
adc
out
shrb
dec
test
rorl
xchg
mov
cwtl
cmp
cmp
pop
and
mov
aas
ret
loope
adc
clc
mov
loop
loopne
sub
xchg
cmp
xchg
ret
shll
lods
push
ret
jmp
jbe
cmp
stos
loope
mov
imul
xchg
jbe
arpl
cmpsl
push
shr
lds
cmp
test
rorb
or
and
inc
mov
cmp
push
ret
or
dec
and
inc
add
popf
mov
enter
jne
lret
adc
loop
or
add
popa
ljmp
or
inc
fstps
jge
sbb
jbe
mov
das
ss
or
jne
adc
aas
scas
in
fisttps
jnp
pushf
xorb
mov
mov
jb
jecxz
mov
out
nop
movsb
fwait
mov
imul
push
sbb
sub
sbb
mov
mov
fldl
push
push
push
xlat
xchg
lret
nop
dec
pop
xor
cmp
lock
jecxz
cld
adc
int3
xchg
mov
dec
adc
pop
mov
xor
dec
sub
pop
lret
int
mov
xor
outsl
dec
cmp
add
aam
rcrl
dec
fimuls
adc
inc
pop
cli
dec
cmp
aas
roll
pop
movsl
inc
sar
jo
sbb
or
fildll
lret
out
push
jne
hlt
shll
es
les
adc
push
movd
enter
adc
daa
movsl
outsb
fimull
fistl
enter
pop
cmc
push
push
pop
pop
notl
cmp
pop
outsb
fwait
xchg
mov
push
or
pop
push
adc
sti
out
dec
sarb
ljmp
xchg
push
je
and
mov
jp
xchg
aas
dec
movsb
je
fidivrs
insl
jb
xchg
dec
sarl
cmpsl
clc
sahf
outsb
mov
xchg
fdivs
add
out
lret
mov
aad
xchg
xchg
xchg
push
sti
pop
adc
mov
loope
aas
push
pop
push
mov
ret
pop
cwtl
pushf
psrld
imul
je
data16
dec
es
mov
mov
test
mov
das
mov
xor
dec
mov
ljmp
adc
es
jmp
fldt
call
aas
mov
jo
js
pop
sbb
outsl
cli
out
fwait
jle
shll
sub
pop
notb
mov
loop
pushf
clc
das
push
mov
cmpsl
and
enter
icebp
xchg
mov
add
jns
leave
insl
mov
mov
adc
mov
sbb
call
cmp
adc
or
loope
ds
bound
xor
sub
rcll
insl
fwait
lea
mov
in
jecxz
nop
ljmp
rol
sahf
mov
lock
jae
out
pop
sbb
adc
mov
or
inc
pushf
int3
jp
movsl
jg
fistps
push
and
mov
add
shll
xchg
add
mov
sub
cld
push
sub
fstps
inc
pop
mov
jmp
bnd
add
mov
mov
stos
les
or
and
sbb
lods
movsl
jp
cmp
dec
fidivrl
xchg
rcrl
and
xchg
pop
xchg
jmp
fs
repz
out
mov
ret
ss
popf
cmp
xor
rcll
pop
aas
jmp
in
rcl
popa
xchg
mov
data16
stos
and
mov
shl
aas
clc
or
stc
ret
pop
idiv
xor
xor
bound
insl
cli
ja
pushf
jmp
call
push
jne
push
lret
jg
into
insb
dec
and
fldcw
jb
lret
cmpsl
xchg
mov
loope
push
jl
pusha
jbe
xchg
jle
filds
mov
enter
je
lcall
ret
add
mov
loope
cmp
rclb
xchg
mov
mov
push
xchg
cmpsb
or
repnz
loop
inc
xor
jno
jle
orl
mov
pop
adc
or
xor
mov
inc
jnp
lods
dec
stos
fisttpl
dec
repz
xchg
int3
jb
enter
jo
cmp
pop
and
pop
pop
jg
jle
cmp
sarb
bound
push
rcrl
push
inc
push
or
add
adc
xchg
ljmp
pop
adc
call
stc
push
jp
jecxz
loop
mov
push
jl
dec
ror
inc
clc
mov
pop
in
pop
and
in
icebp
ljmp
adc
add
inc
lock
rcrl
pop
outsb
lds
adc
jae
mov
test
add
push
push
loope
and
cld
xor
xchg
hlt
mov
outsb
mov
jl
out
data16
clc
lcall
repnz
jmp
icebp
pop
xchg
lret
cmp
aam
jecxz
roll
fimuls
add
inc
aas
jmp
idiv
iret
test
jge
int3
sti
and
jmp
add
xchg
mov
xchg
aaa
xor
sbb
jb
dec
add
inc
push
cmp
push
mov
xor
jnp
inc
pusha
lret
pop
jae
add
or
stos
inc
scas
test
xor
stos
in
jno
and
iret
bswap
stc
or
ret
xor
jbe
cmp
ret
rcl
dec
xchg
jb
loopne
pop
cwtl
je
fnsave
movb
jge
mov
outsb
dec
pop
stos
jp
inc
sti
dec
fs
les
outsl
jne
push
sbb
mov
lea
jl
shlb
mov
add
into
lahf
xchg
sahf
dec
cmpsl
out
test
pop
fcomps
cs
xchg
ret
mov
jne
or
cmp
or
dec
lcall
in
shll
jnp
stos
cmp
and
loope
int
jnp
cs
int3
addl
sbb
push
outsb
adc
fdiv
inc
push
sarb
cmpsl
sbb
lds
push
stc
inc
out
or
clc
mov
pop
fs
xchg
imul
or
pop
ret
lods
and
das
cwtl
mov
xor
and
xlat
adc
pop
fdivrs
pop
push
out
sbb
cmp
add
movhps
push
stos
or
cmpsl
xchg
dec
jecxz
ss
lcall
xlat
dec
inc
cwtl
cld
push
and
aad
push
cmc
push
or
rorb
and
mov
sbb
aad
cld
repnz
imul
call
inc
dec
adc
testb
mov
xchg
movsb
mov
add
pop
or
fiaddl
lret
xchg
mulb
inc
sarl
std
push
test
daa
cmp
cs
mov
dec
adc
or
xchg
fisttpll
push
mov
and
popf
jbe
scas
sub
das
dec
mov
daa
in
lret
sub
xchg
std
and
sub
insb
jmp
fbstp
push
push
mov
dec
xlat
addr16
adc
dec
mov
lods
ss
cmp
dec
fsubp
out
dec
sbb
and
sub
cmp
cmp
or
push
ljmp
jnp
sub
jae
ret
dec
out
push
adc
add
test
and
mov
mov
lods
mov
mov
xchg
sub
in
fisttps
xor
cmpsb
cmp
cmp
mov
and
scas
sarl
adc
mov
es
xorl
push
and
mov
aas
sbb
movsl
out
aam
test
sbb
adc
mov
int3
xor
and
pop
out
sbb
std
dec
pop
cmp
cltd
divl
mov
adc
pop
aaa
push
lods
mov
mov
mov
clc
jg
jo
fs
or
cs
iret
dec
cmpsl
bound
dec
inc
adc
enter
out
and
aaa
notb
rorb
imul
ret
xor
sbb
sahf
jbe
mov
pop
xor
ds
xchg
jg
add
sbb
mov
cs
leave
ret
push
enter
stos
ret
xor
pop
enter
call
decl
js
adc
jo
fistps
push
mov
add
mov
add
stc
pop
push
lcall
lret
test
mov
mov
test
cwtl
shlb
mov
push
ficoms
push
inc
or
xchg
push
rolb
movsl
jbe
push
inc
xchg
das
sbb
cld
das
jo
sub
hlt
pusha
outsb
aaa
dec
jae
sub
stc
push
xor
push
or
push
in
and
cld
pop
sarb
lods
and
sbb
ret
pop
mov
outsl
xchg
mov
mov
mov
mov
movsl
in
cmp
jle
fsubrs
loop
dec
and
test
aaa
int3
or
bound
sbb
stos
adc
xor
push
sub
cmpb
insb
add
lods
sbb
inc
cmp
test
arpl
sbb
out
and
jne
ret
add
pop
leave
int
sti
cmp
stos
xchg
out
pop
pop
mov
and
cwtl
push
ljmp
outsb
icebp
mov
xchg
xor
loop
jb
sbb
mov
and
add
xor
mul
in
push
pop
notb
sbb
or
xchg
das
imul
cli
cmpsb
push
and
xorl
int
or
loopne
ja
push
icebp
movb
mov
lea
daa
loop
mov
push
scas
punpcklwd
xchg
test
repz
ret
mov
fadds
jl
lcall
dec
sub
xchg
cltd
daa
test
stos
xchg
xor
xchg
mov
mov
lret
adc
add
jecxz
mov
pop
pop
iret
cltd
inc
cli
sub
js
mov
inc
push
pushf
or
outsb
pop
pop
fsts
out
inc
inc
daa
sbb
xor
insb
mov
cwtl
sbb
incl
testb
mov
fistpll
js
mov
rcr
psadbw
ljmp
dec
inc
pop
cld
std
lret
inc
sub
fadds
insl
sub
push
and
popf
or
fdiv
addb
shlb
ss
repnz
push
add
xor
leave
movsl
fs
mov
mov
xor
in
test
and
movsl
xchg
popa
int
imul
divb
or
out
jbe
jmp
sarb
repz
jns,pt
sub
lret
push
das
xor
mov
dec
dec
out
lcall
dec
cmp
add
fists
shll
sbb
mov
dec
into
insb
sbb
movsl
push
mov
xchg
ret
pushf
pop
addr16
mov
rcll
stc
push
loop
dec
mov
or
cmp
loopne
or
shlb
xchg
jmp
pop
loop
es
cld
and
mov
xor
cwtl
add
ret
mov
mov
imul
ss
ret
or
ror
and
mov
addr16
mov
pop
jp
xor
je
xchg
mov
dec
loopne
xchg
shrb
shlb
mov
add
add
ja,pt
movsb
push
mov
inc
mov
rcrl
sbb
mov
int3
jae
mov
xorl
test
sub
cmc
lcall
jns
int3
inc
loope
or
lcall
mov
shlb
add
call
mov
jne
pop
xlat
push
mov
mov
dec
pop
mov
and
dec
mov
or
rorb
pop
sbb
stos
dec
or
push
mov
fcomps
push
dec
sbb
test
inc
nop
insl
addl
insl
sti
mov
jmp
in
xchg
popf
in
push
rorb
clc
mov
or
sbb
mov
xchg
mov
mov
xor
push
inc
jb
std
push
sub
xchg
div
mov
cmp
outsl
push
sbb
mov
sbbl
sbb
mov
xor
fdivrp
out
adc
adc
outsb
test
popf
cmp
cmpsl
insb
mov
inc
pop
loope
leave
call
scas
outsl
imul
sbb
xchg
jle
mov
push
push
mov
test
std
out
adc
add
lods
pop
out
sub
mov
mov
shrb
jl
sarb
scas
or
mov
push
mov
sub
lock
scas
subb
pop
sub
faddl
scas
in
or
push
inc
jp
add
inc
out
jae
push
fwait
mov
mov
mov
push
inc
adc
adc
sbbl
fsts
sub
testb
and
adc
insl
in
inc
jns
sub
sub
rcl
adc
outsl
and
push
leave
filds
adc
xor
cmp
adc
and
adc
test
fwait
pusha
outsb
cwtl
sbb
adc
mov
inc
insb
mov
filds
ficoms
sarb
mov
cmp
repz
fucom
adc
repz
sbb
rcll
pop
int3
jmp
daa
mov
hlt
cmc
cmp
push
jb
mov
or
push
xlat
inc
mov
xchg
js
push
and
lods
test
stos
mull
cmpsl
mov
insl
cwtl
mov
lret
or
sub
jo
daa
jae
sbb
imul
mov
es
xchg
test
xor
das
iret
inc
inc
cmc
iret
xor
pop
mov
xchg
ds
movb
sbb
mov
gs
cwtl
mov
fidivl
ja
jl
dec
push
xchg
inc
imul
cmpsl
or
in
jge
imul
fs
sti
sarb
iret
call
mov
in
or
lock
pop
test
icebp
mov
ss
sbb
and
test
sub
push
mov
and
shll
mov
jne
jp
rorl
push
and
ret
testb
das
call
mov
add
cmp
add
cmpsb
test
xor
pop
pop
add
std
int
pop
inc
sub
fwait
dec
sub
rol
add
sbb
outsb
xlat
loop
fnstsw
out
arpl
bound
cmpb
aam
xchg
pop
mov
mov
fstl
xchg
jl
cltd
popa
iret
mov
dec
xchg
mov
push
xchg
out
mov
jo
jo
inc
aad
mov
inc
push
jle
add
pop
loop
pop
adcl
dec
repz
xlat
mov
subl
sahf
movsl
pop
pop
jmp
xchg
mov
dec
cmp
mov
ss
jg
enter
mov
xchg
sub
mov
jb
inc
popf
add
pop
dec
in
pop
jg
sub
jae
jl
fstpt
push
xchg
pop
xchg
mov
dec
sub
lcall
rcpps
or
stc
lea
mov
cld
and
xor
mov
jmp
and
popf
sbb
pop
push
push
sub
ret
clc
jle
push
mov
mov
out
lock
xchg
je
or
pop
mov
jbe
mov
aam
je
sahf
testb
xchg
sahf
push
mov
add
or
enter
lea
xchg
test
rolb
mov
rcr
xchg
adc
dec
or
in
inc
es
xchg
lock
mov
sub
xor
out
pop
ja
ret
xchg
jbe,pt
vxorps
mov
stos
cmp
jmp
mov
repz
ret
bound
aaa
popa
mov
mov
adc
jge
xlat
mov
xchg
sub
movsl
dec
pop
add
icebp
mov
les
adc
int3
pop
push
fiadds
enter
push
cmp
mov
stos
adc
or
lods
mov
scas
adc
in
aad
pop
adc
push
iret
push
cmpsb
aad
std
fimull
stos
lds
cmp
outsb
divl
push
iret
cltd
adc
sub
ret
fnstenv
push
push
push
imul
mov
cmp
ret
rcrl
pop
scas
or
out
scas
mov
sbb
movsb
pusha
out
ret
mov
mov
mov
fsubrs
cmp
and
leave
inc
push
push
mov
push
pop
pushf
bnd
mov
js
enter
mov
cmp
test
cli
xor
push
mov
mov
repnz
stos
mov
push
jge
aad
pop
imul
inc
pop
leave
mov
xchg
sbb
iret
xorl
push
cmpsb
and
push
sub
bound
inc
xor
call
pop
fnstcw
shlb
jmp
cld
movsl
mov
in
fiaddl
sbb
test
mov
adc
aad
sti
jae
mov
aam
stos
sub
adc
fdivrs
aaa
xor
ja
add
add
mov
test
shll
and
popf
mov
mull
sub
mov
cmpsl
repz
lret
xchg
mov
pop
cltd
pushf
pop
add
jne,pt
push
out
scas
stc
mov
add
hlt
push
outsb
mov
cli
call
fs
push
add
popf
fnsave
aaa
dec
sbb
add
mov
roll
imul
mov
mov
adc
sbb
adc
or
fisttps
xchg
out
mov
cmpsl
mov
stos
jo
push
xorl
lret
paddsw
dec
insb
das
mov
push
mov
pop
xchg
lret
xchg
fcomps
jae
xchg
sbb
fsubrp
push
clc
add
or
mov
lret
fnstcw
sub
lods
inc
cmpsl
or
push
stc
push
sbb
push
inc
mov
or
add
sub
jg
jmp
push
xlat
stos
shlb
lcall
cmpsl
lock
or
lcall
sbb
outsl
iret
inc
mov
rorb
sub
aas
dec
fistpll
nop
push
inc
inc
pop
push
mov
mov
xor
imul
jae
lock
loopne
and
rolb
mov
jl
pushf
push
xchg
lods
insb
cmp
mov
add
dec
pop
mov
sbb
pop
cmp
clc
es
xchg
dec
xchg
jl
inc
mov
pushf
and
fcomip
and
xchg
repnz
sub
dec
icebp
fstpt
pop
iret
repz
stos
push
xlat
test
cli
jge
mov
sarb
addb
adc
es
cmp
pushf
mov
sub
aad
roll
and
or
stc
mov
adc
notl
mov
mov
arpl
push
or
sti
mov
pop
test
adc
adc
ss
cmp
dec
pop
je
pushf
psrlw
push
mov
mov
daa
stos
ja,pn
jg
cmc
aas
pusha
xlat
mov
cmpsl
lds
ret
add
fdivl
hlt
in
adc
mov
xchg
inc
test
test
imul
ficomps
jmp
cmp
sbb
loopne
rcrb
fdivrs
xchg
mov
les
pushf
shl
mov
mov
push
push
jl,pt
sub
pop
or
aam
xor
add
daa
inc
jle
lds
xor
pop
xor
add
inc
pop
ja
scas
mov
add
ja
movsb
sti
test
sbb
lds
pop
or
fwait
decb
lea
in
push
ds
insb
mov
inc
test
gs
push
mov
mov
data16
cmpxchg
in
cmp
pop
ss
mov
xor
sbb
icebp
mov
icebp
mov
inc
test
sub
out
pushf
mull
cmp
shrl
les
je
fnclex
mov
lock
bnd
bound
decb
test
ficoms
jmp
dec
mov
mov
inc
rcr
aaa
xchg
cli
adc
xor
shl
xorb
dec
or
fidivrl
push
jl
mov
inc
jl
fmuls
bound
int
inc
xor
jne
sub
in
pushf
in
or
push
and
pop
fsubrs
inc
ficoms
out
mov
jg
sub
adc
cmpsb
out
insb
pop
mov
jo
jge
pop
sbb
inc
xchg
out
aas
push
or
xchg
in
mov
sub
idiv
movsw
xchg
xchg
and
in
jb
test
push
ljmp
dec
addl
mov
jns
sub
fdivs
mov
repz
cmp
addr16
cmpsb
aad
incb
cltd
jmp
sahf
sub
or
and
stos
mov
add
jmp
inc
aaa
hlt
in
mov
and
fwait
jge
aas
enter
cmp
in
rdtsc
cli
xchg
jge
inc
xor
push
push
mov
pop
ret
js
rcrb
and
fcoms
loope
sti
loopne
lock
jbe
cwtl
cmp
push
into
mov
dec
sbb
add
lcall
mov
stos
in
sbb
enter
mov
sbb
fistpl
aaa
into
nop
cwtl
cmpb
popa
or
dec
into
or
mov
sahf
mov
pop
leave
cs
fidivrl
daa
or
ret
pop
jp
imulb
out
daa
scas
inc
xchg
in
pop
stos
mov
movsb
pop
fs
pop
hlt
mov
ret
pusha
jne
push
mov
sarb
sub
rcrb
mov
repnz
mov
xor
out
add
lret
negb
sbb
sbb
scas
and
aad
inc
pushf
repnz
pop
pop
test
mov
rorb
xor
mov
lret
ljmp
stos
ret
mov
movsl
xor
sahf
lahf
mov
fldenv
ss
inc
popa
loop
sahf
das
jg
cmp
add
xchg
pop
call
mov
dec
imul
xchg
rol
imul
xchg
shrl
mov
fnstsw
int3
jo
mov
or
cmp
add
lods
sub
in
leave
pop
test
mov
pop
dec
bound
hlt
mov
pop
imul
pop
adc
popf
mov
jno
sbb
jno
js
lods
sub
xchg
shrl
add
lret
mov
lods
or
or
pop
out
adc
das
sub
sbb
cmp
cwtl
inc
push
dec
mov
push
int
dec
arpl
sub
sbb
adc
arpl
pop
or
dec
sbb
inc
jmp
cli
mov
xlat
jnp
sub
rol
sahf
aaa
xchg
xor
testl
sub
or
aaa
andl
test
mov
mov
int
and
fstpt
mov
pop
mov
mov
push
shl
jp
daa
mov
and
dec
out
pop
push
mov
push
xchg
sbb
jge
and
mov
xchg
pop
adc
cmp
mov
sub
lock
push
sub
mov
sub
mov
and
xor
cwtl
xchg
stc
int
jne
sub
insl
insb
sub
test
popf
pop
aam
out
es
mov
popa
cli
repnz
fucomip
out
push
stos
add
jmp
sub
nop
inc
fwait
jne
mov
sbb
in
inc
dec
push
mov
lock
or
stos
inc
es
fcoml
imul
sub
and
sbb
cmpb
pusha
xchg
adc
cld
addr16
sarb
push
bound
imul
popa
inc
dec
in
cs
inc
xor
mov
and
leave
pop
rcr
shl
out
ljmp
xchg
or
pop
mov
add
cmpsl
jns
jae
cmc
fidivrs
add
jp
ficompl
adc
dec
cmp
and
movsl
jmp
int
test
jnp
aas
xchg
inc
dec
sbb
and
and
cmp
test
pop
test
inc
fstpt
bound
xor
es
sahf
jecxz
xchg
inc
js
mov
adc
les
xor
push
jp
sbb
lods
fwait
ja
adc
shl
mov
cld
adc
loope
xor
or
jae
in
testl
or
loop
inc
jbe
mov
push
stc
jg
push
sub
out
mov
push
pop
insb
stc
or
lret
sti
out
pop
in
testb
or
push
nop
sahf
xchg
mov
xor
ds
popa
cli
mov
cmp
mov
mov
int3
sbb
push
jb
sbb
int3
pusha
jmp
mov
and
adcb
dec
aas
stos
adc
movsl
pop
cwtl
test
jl
rcrl
cmc
dec
add
insb
vmaxpd
insb
std
stos
inc
dec
and
or
repz
icebp
mov
mov
xor
inc
mov
xchg
js
push
add
adc
add
faddl
push
mov
inc
imul
test
mov
mov
add
insl
jge
jb
aam
sti
sub
cmp
out
xchg
or
fcmovnbe
add
shll
lret
adc
mov
add
loopne
or
sub
iret
bound
mov
mov
cmp
adc
and
imul
jmp
mov
mov
cmpsb
and
mov
xchg
repnz
lock
lcall
adc
jg
movsb
jno
scas
jge
mov
xor
or
rorb
sub
pop
shll
sbb
mov
inc
dec
outsl
inc
mov
nop
pop
push
lret
insl
out
test
clc
rclb
mov
jmp
mov
leave
inc
dec
add
sbb
sbb
mov
nop
in
leave
jne
imul
xor
jmp
lea
in
sub
and
dec
or
xchg
cmp
pop
pop
xchg
push
mov
and
sbb
sti
das
push
xor
mov
sub
and
mov
cmp
jmp
jae
fistl
lret
adc
cmp
cmc
out
fstpl
mov
cmp
lcall
in
inc
or
jnp
movsb
jb
ret
mov
dec
insb
mov
in
scas
lret
out
testb
rcll
lret
pop
out
xchg
cmp
dec
sub
cmp
sub
sub
jo
or
cmp
sub
push
lock
or
sbb
inc
aad
int3
inc
outsl
mov
adc
sbb
push
push
xor
jae
jmp
pop
data16
push
push
or
ja
jae
cltd
cmpsl
data16
jae
pop
arpl
add
fisttps
xor
xchg
mov
jne
push
jmp
ja
sub
xchg
aaa
xor
xlat
leave
movd
jno
fcompl
dec
add
incl
lock
pop
dec
in
lock
xlat
adcl
ja
jg
jmp
stc
loop
lret
push
ljmp
jns
push
inc
or
aaa
testb
pop
out
mov
int3
adc
xchg
sub
adcb
push
loope
jp
int3
arpl
dec
jns
outsl
test
arpl
mov
into
sub
mov
insb
insl
mov
es
xchg
outsl
xchg
insb
mov
out
fwait
add
adc
pop
scas
mov
xor
mov
or
cmp
daa
leave
ret
xor
mov
pop
sbb
in
lods
aas
mov
mov
adc
cmp
xor
dec
sub
aam
loop
movsb
test
lret
in
jne
shrl
outsl
jge
mov
jp
mov
sbb
outsl
sbb
or
fcomp
test
repnz
cmp
sub
sub
loope
fldcw
xrelease
gs
push
adc
mov
mov
push
inc
inc
and
hlt
xchg
sar
pop
not
mov
pop
jmp
jge
inc
and
add
push
xlat
insb
inc
in
scas
sbb
aas
xor
sub
iret
std
add
and
icebp
sbb
aad
inc
lds
sbb
mov
in
jl
adc
lea
lds
test
aas
inc
push
mov
loopne
and
mov
cmp
mov
cld
fildll
decl
rcl
out
dec
mov
jmp
mov
push
adc
or
mov
cmpsb
mov
lea
jg
fs
jns
iret
in
loop
fistps
and
sub
or
pop
adc
or
push
mov
in
push
cmp
push
mov
int3
test
sub
adc
cwtl
jmp
repnz
cmp
or
cmp
decb
dec
pop
pop
sub
push
mov
mov
out
sub
pop
inc
cmc
mov
adc
divl
lcall
cmc
dec
in
sbb
cmp
call
scas
jl
add
mov
aam
test
and
repz
fadds
mov
inc
bound
adc
stos
lock
pop
mov
inc
sahf
jbe
mov
nop
jb
pop
push
pop
cmc
into
mov
ret
dec
aas
lahf
sub
dec
addl
jmp
mov
sahf
jmp
inc
pop
sbbb
dec
mov
mov
adc
mov
les
and
stos
pop
sub
leave
lret
negl
mov
jmp
stc
popfw
pop
test
and
movsl
xchg
aas
add
xor
aad
xor
movsl
ss
pop
add
or
jo
push
bound
stc
mov
jns
push
and
into
xchg
int
dec
cwtl
mov
push
push
stos
adc
cmp
loope
out
mov
outsb
mov
push
adc
hlt
fildl
sub
pop
sbb
sbb
or
mov
jnp
pushf
inc
bound
adc
popa
jbe
dec
mov
xor
mov
pop
gs
pop
cs
and
jno
add
pusha
sbb
mov
cmc
add
xchg
repz
loop
mov
cwtl
cmpsl
clc
dec
jecxz
xchg
shl
popa
test
jno
cltd
jmp
mov
jmp
inc
jecxz
push
mov
or
in
repnz
xchg
aaa
in
movb
clc
stos
pop
call
int3
inc
push
mov
cmpl
adc
push
sbb
icebp
es
fcmovnb
pop
or
xchg
dec
push
cmc
inc
push
add
fildll
sbb
and
fs
add
idivl
mov
ficomps
lds
xor
push
lock
adc
aam
cltd
lods
and
cvttps2pi
rolb
sub
cmp
add
ret
mov
jp
xor
adc
cmp
cmc
scas
scas
mov
test
jbe
out
dec
xchg
mov
push
dec
int
aad
and
in
adc
jmp
cmpsl
jo
lds
and
mov
xor
inc
arpl
pop
insl
xor
push
neg
xor
mov
dec
test
idiv
mov
push
and
movsl
fs
bound
jmp
pop
add
xchg
test
adc
xor
sti
xor
in
sub
ja
insl
xor
mov
sub
insl
aad
in
mov
fistpl
push
imul
shl
dec
inc
add
cmp
sub
adc
loopne
es
ret
jne
mov
scas
int
in
aaa
hlt
scas
and
adc
repz
ss
andb
cmc
int3
mov
pop
stos
xor
lock
test
jno
cmp
mov
aam
adc
cltd
xor
or
add
into
push
mov
mov
decb
stos
jge
push
push
xor
dec
sub
loopne
inc
mov
popa
jg
sbb
mov
imul
or
gs
pop
push
xor
test
in
mov
add
mov
insb
add
pusha
add
dec
ljmp
cltd
loopne
rorl
mov
or
pop
fnsave
out
sub
shll
ret
je
adcb
daa
movsb
and
imul
push
repz
imul
xchg
nop
shrl
hlt
lcall
lcall
or
scas
cmpsl
jmp
push
imulb
in
xor
in
daa
jg
sbb
dec
in
jae
cwtl
cmp
dec
movl
jp
enter
add
add
jae
aas
popa
cmp
lock
es
leave
frstor
std
loope
mov
call
cld
cmpsl
sbb
add
adc
cmp
and
movsb
xchg
leave
insl
mov
popa
je
sbb
lcall
outsl
je
outsb
sbb
roll
jp
and
inc
inc
pop
jne
sbb
scas
lds
xchg
int
push
mov
test
or
test
xchg
and
movsb
mov
repz
adc
lret
mov
sub
test
addr16
fsubrs
push
dec
jmp
adc
dec
popa
mov
push
mov
loope
add
mov
testb
int3
int
lahf
dec
daa
push
add
jp
clc
data16
imul
loop
loop
adc
sbb
xchg
lods
xor
dec
aaa
pop
movsl
pop
add
sbb
cmpsb
pop
out
stos
lahf
xchg
das
pop
jmp
xchg
pusha
pop
insl
lods
sahf
pop
push
fsubr
pop
push
repnz
push
add
loope
dec
pop
and
dec
fs
push
aaa
into
inc
lods
add
sub
adc
dec
sbb
hlt
lea
pop
jmp
mov
out
jp
loope
jmp
add
iret
std
repnz
pushf
divb
bound
inc
jo
sbb
rcrb
mov
repnz
imull
adc
test
lahf
loopne
xlat
scas
clc
jne
inc
push
dec
push
xorl
add
inc
inc
sbb
nop
cld
add
or
push
inc
and
lods
xchg
sub
xor
push
xchg
sub
jge
push
lods
mov
xchg
or
pop
clc
push
push
int
mov
mov
xchg
pop
mov
sarl
outsl
cli
jecxz
fisubrs
fadds
arpl
repnz
scas
jne
push
decb
xchg
push
stc
jg
xor
sti
mov
shrl
mov
xor
and
pop
xor
nop
sarl
inc
insl
in
jne
dec
pop
test
movsb
push
xor
adc
add
push
cmpsb
lret
push
sti
std
jge
in
or
mov
in
ds
jl
insb
xor
mov
lock
xchg
clc
mov
xorl
pop
lods
pushf
lds
dec
xchg
adc
aad
lds
fcmovb
inc
test
sub
fdivl
xor
sarb
mov
les
jne
xor
adc
mov
and
fdivl
cmc
add
and
cmp
fsubrl
cmp
call
add
mov
mov
enter
into
sbb
pusha
hlt
sahf
fisttps
sbb
push
inc
xor
ljmp
cmpl
xchg
ficompl
js
mov
sbb
in
scas
mov
mov
sahf
or
jg
dec
sbb
lret
scas
sub
push
js
sbb
clc
dec
int
cli
adc
xchg
data16
push
cmpsb
pop
imul
sbb
mov
movsl
inc
push
adcb
sub
jecxz
dec
popf
adcl
xchg
and
gs
cwtl
movsb
jns
ja
mov
dec
dec
adc
mov
scas
jno
ret
mov
sti
pusha
mov
sbb
mov
mov
pop
cmp
pop
sbb
cmp
mov
xchg
lock
rorl
stos
fimull
repz
and
shll
pop
sub
lret
enter
cmp
jo
fmulp
adc
jge
pop
mov
dec
mov
sti
imulb
negb
rorl
addr16
xchg
stos
inc
cld
icebp
loop
mov
pop
mov
fnstcw
repnz
pop
cmp
out
push
xchg
test
cmp
rolb
stc
inc
adc
lahf
sarb
mov
sub
shl
loopne
jl
cmc
pop
add
xor
mov
test
cmpsl
sbb
ret
cmc
sub
rcrl
shlb
and
cmc
pop
aas
dec
sbb
mov
adc
inc
call
sub
mov
adc
xor
jne
daa
or
jbe
jmp
fidivl
addr16
pop
xchg
pop
mov
jmp
push
and
cmpsb
xor
mov
mov
popf
adc
insb
aaa
xorb
in
shr
out
jne
push
test
test
inc
mov
fdivrl
ud0
loop
addr16
je
insb
and
orb
cmpsb
jb
movsl
aam
add
aas
scas
cmpsb
cld
mov
les
dec
inc
xchg
call
faddp
or
push
mov
clc
lcall
mov
inc
jo
pop
xchg
das
bound
sub
add
fwait
adc
add
ds
shlb
push
dec
iret
in
je
and
jb
adc
cmovle
das
dec
pop
ss
fimuls
iret
bound
cmp
mov
repz
push
lock
sub
or
movb
lcall
repnz
mov
add
popa
test
or
sbb
enter
jbe
mov
in
stc
jns
imul
inc
inc
lahf
dec
imul
xor
jecxz
xor
cmpsl
sbb
xorl
mov
test
push
cltd
xchg
test
xchg
pop
mov
add
jae
ss
and
movsl
das
jge
jmp
ret
ficoml
xchg
daa
push
push
div
mov
inc
int3
data16
pop
insl
sub
fisubs
clc
push
cmp
sub
mov
mov
sbb
mov
lcall
stc
jo
push
jp
ljmp
mov
icebp
pop
lods
scas
or
or
addr16
into
jg
adc
dec
mov
lcall
or
ss
fisttpl
inc
fisubrs
xchg
cli
adc
data16
push
pop
and
enter
popa
out
and
pop
jp
mov
bnd
mov
inc
xor
je
cltd
xchg
sarl
sarl
or
test
std
sub
xor
or
mov
loope
pop
adc
aaa
sbb
in
sbb
adc
bound
mov
and
getsec
leave
test
mov
sub
dec
insl
jmp
pusha
jnp
sbb
jle
sub
cmp
cmc
cld
cmpsl
mov
add
push
cmp
sbb
arpl
clc
dec
sbb
daa
add
sti
stos
fistpll
repz
mov
jnp
xchg
push
dec
mov
sub
cld
fidivs
sbb
fisttps
inc
and
and
add
and
jl
add
call
shll
jnp
jl
cmp
out
lret
subl
stos
gs
dec
mov
cs
imul
ret
outsl
fbld
mov
outsb
lcall
add
incb
aas
cmpsl
pop
js
pop
jne
repz
scas
ret
jmp
shlb
repnz
inc
add
pushf
out
repnz
outsb
sub
cmp
in
out
lahf
or
dec
dec
lock
out
insb
and
xchg
fnstcw
lahf
push
shrl
mov
test
pop
das
in
repz
js
jno
dec
jo
int
and
call
fistpll
imul
test
lcall
leave
fdivs
negb
or
stos
testb
lods
jne
xchg
xor
dec
mov
repz
ret
push
jmp
sarl
stos
lds
mov
repz
ds
jle
push
aad
inc
and
in
pop
ljmp
lahf
outsl
or
xchg
add
jb
xor
in
aam
adc
xchg
xchg
clc
nop
mov
or
aaa
add
int
push
cmc
mov
nop
push
lods
sahf
adc
cmp
and
js
into
iret
jne
push
movsb
inc
mov
loope
inc
movsl
stc
pop
mov
pop
dec
mov
xchg
das
fstpl
push
xorb
pushf
mov
xchg
lods
sub
push
outsl
pushf
lds
mov
aad
cmp
fistps
clc
ret
mov
add
sub
testl
insl
filds
orb
mov
jle
lods
adc
clc
cmp
lea
mov
lahf
sbb
mov
push
dec
cli
mov
mov
mov
push
lahf
test
aas
mov
repz
movsb
shrb
scas
gs
in
pushf
mov
mov
inc
add
mov
call
fwait
sarb
push
jnp
lcall
testl
mov
popa
jecxz
xor
in
add
pop
xchg
rcrl
pusha
out
xor
ss
sbb
aam
test
xchg
jbe
pop
inc
pop
mov
movsl
and
clc
mov
sub
jge
mov
fcom
icebp
jle
mov
ja
mov
sub
mov
enter
mov
push
inc
loopne
jnp
xchg
je
nop
ss
inc
movsb
inc
mov
dec
outsb
aaa
repz
mov
pop
sbb
xorb
xchg
lret
jl
inc
loop
push
and
mov
and
sbb
xchg
outsb
cli
mov
mov
push
adc
sbbl
mov
icebp
mov
popa
shll
je
icebp
cmc
popa
ljmp
imul
push
imul
imull
and
push
mov
pop
xor
lods
test
push
shrb
js
js
mov
out
cmp
stc
push
mov
sub
jecxz
fmull
mov
sbb
testb
mov
jle
test
cli
mov
push
shll
fwait
adc
mov
ja
in
test
fldl
pop
sub
dec
xlat
and
xor
nop
jbe
pop
cmpsb
cmpsb
fbstp
lds
dec
adc
push
outsb
jne
es
fstpl
mov
mov
pop
push
mov
fiadds
jbe
stos
int
jle
pop
shl
fbstp
push
mov
xor
mov
cmp
imul
lcall
sbbb
ljmp
repz
sarl
push
stos
enter
jne
jns
cmp
and
movsl
and
adc
and
mov
mov
pop
aaa
test
divb
sbb
xlat
mov
sub
movsb
shlb
aad
pop
push
test
lret
or
mov
insl
inc
ret
je
cmp
add
cli
push
push
push
xchg
ret
lret
jbe
or
shll
add
in
xor
sub
xchg
stc
aas
cmp
fwait
lahf
sarb
fdiv
faddl
sbb
sahf
xchg
es
lret
out
lcall
test
movsb
mov
jne
dec
fstpt
cwtl
xchg
jb
push
test
dec
mov
dec
nop
cmp
mov
test
call
sbb
push
xchg
repz
ljmp
dec
insb
cwtl
into
cmp
mov
mov
cmpsb
rclb
fisubs
jo
add
in
and
push
mov
adc
pop
std
es
adc
push
jns
dec
jecxz
stos
scas
dec
adc
mov
dec
xor
push
cmp
push
pop
sbb
dec
stos
fisttps
cmpl
pop
push
test
lds
fmulp
dec
mov
add
fcomps
mov
mov
xchg
hlt
cmpsb
and
addl
insb
add
pop
daa
scas
sub
add
stos
push
jg
insl
inc
cmp
das
cmp
dec
adc
lcall
adc
push
std
pushf
add
mov
xor
outsl
xacquire
mov
sbb
push
outsl
and
bnd
rolb
dec
test
dec
and
dec
fistpll
vmovlps
cld
addl
xchg
push
leave
cmp
or
mov
insb
push
push
out
sbb
mov
lret
adc
or
xor
popf
stos
test
push
inc
repnz
adc
gs
subb
jo
and
rcrl
ja
fbstp
pop
sahf
add
push
gs
subb
loopne
mov
dec
out
dec
lods
dec
jmp
test
add
sub
pop
jno
fs
imul
mov
dec
sti
in
imul
sbb
rolb
jp
mov
mov
mov
xchg
dec
orl
cmpsl
inc
shrb
nop
push
js
jo
add
repnz
xor
xchg
push
pop
outsl
in
test
inc
popf
outsl
int
popf
std
pushf
cltd
dec
pop
out
andl
or
sahf
and
inc
xlat
and
lods
aaa
movsl
es
lahf
and
pop
lea
mov
fldpi
dec
and
ret
sub
insb
sbb
push
nop
frstor
xchg
lds
xor
inc
sbb
js
popf
das
leave
in
rcl
inc
adc
in
std
repz
xchg
sti
mov
decl
pusha
call
jo
ds
loop
push
es
fs
pop
xor
punpckhwd
jp
xor
push
push
inc
adc
jno
cwtl
or
jge
pop
popf
out
cli
rcrl
pop
out
pop
mov
loopne
ret
stos
mov
sub
andb
and
adc
push
mov
loopne
mov
subl
xor
sub
outsl
repnz
hlt
in
jae
movsb
xlat
sub
lea
xchg
sbb
psubsb
negl
inc
into
sub
mov
push
xor
mov
pop
mov
mov
enter
sub
aam
pop
jae
aaa
rolb
lret
outsl
push
xchg
loope
imul
xor
adc
leave
orl
icebp
inc
sbb
inc
dec
icebp
popa
sbbb
movsl
call
push
pop
mov
adc
cmpsl
cwtl
push
jmp
push
mov
pop
subb
popf
push
mov
push
lds
mov
nop
clc
js
out
xor
jbe
lahf
loopne
mov
inc
mov
or
sub
jbe
pop
lea
orl
in
push
pop
mov
adc
loopne
std
sbb
dec
icebp
dec
ja
sub
cld
sbb
pusha
jmp
mov
andl
pop
push
or
jp
mov
pop
pop
lea
mov
insb
push
sarl
lods
or
pmullw
scas
jns
mov
xchg
pop
inc
jno
pop
stos
xchg
aas
xchg
jae
mov
pop
and
cld
sub
mov
pop
xchg
mov
inc
xchg
inc
jne
loop
shrl
push
mov
push
dec
push
sub
lcall
xchg
sbb
stos
push
sbb
stc
cmp
rorl
scas
negb
clc
mov
cltd
add
subl
inc
xchg
inc
or
test
dec
pop
lcall
mov
addl
mov
cmp
outsl
push
jo
dec
mov
scas
sarw
jb
xchg
jo
mov
in
lea
mov
dec
sub
fisubl
repz
jp
in
mov
lods
or
iret
cwtl
jp
mov
mov
nop
or
movl
or
inc
or
jne
xchg
sbb
nop
pop
xchg
cmp
sbb
js
bound
lds
ror
mov
cwtl
test
mov
fcmovbe
inc
sub
pop
and
sub
mov
push
adc
xor
pop
mov
mov
lods
mov
mov
xor
fcmovne
stos
xlat
cltd
cmp
std
xchg
pop
lods
jl
xchg
xchg
inc
sbb
rorb
leave
or
in
xor
ds
cwtl
jae
mov
and
inc
lcall
cmpsb
call
fwait
jp
test
mov
sub
sbb
adc
sarb
xor
daa
sbb
push
mov
add
mov
icebp
xor
leave
cmp
mov
mov
adc
jecxz
sub
outsl
xchg
out
cmpsl
dec
inc
out
jecxz
pop
add
adc
popf
mov
jg
out
sarb
scas
in
dec
sub
das
scas
add
add
arpl
pop
inc
test
outsb
or
inc
out
adc
inc
xor
sbbl
jg
mov
cltd
xchg
sets
pop
or
sbb
pop
shlb
or
fs
inc
jl
jae
pop
scas
dec
mov
imul
and
sbbb
sbbl
in
mov
mov
fildl
leave
adc
arpl
or
loope
xchg
imul
mov
inc
in
push
insl
jge
fnstenv
jno
jp
dec
dec
arpl
jbe
inc
outsl
cs
push
add
dec
outsb
mov
cmpb
dec
clc
sahf
pop
hlt
ret
cmp
mov
fildll
and
mov
mov
cltd
and
loopne
or
adc
pop
ss
jne
push
mov
andl
ret
push
hlt
mov
push
lahf
lret
fstl
aam
sub
lret
stos
hlt
mov
lret
roll
mov
and
sub
inc
popf
adc
jbe
or
mov
mov
shll
ja
adc
sub
dec
dec
es
icebp
hlt
lods
outsb
inc
call
cmc
lcall
push
xor
inc
sbb
mov
stos
push
aam
fimull
or
cmp
dec
jmp
movsb
repz
lahf
fsubs
adc
mov
sub
outsl
inc
push
fcomps
in
sub
bound
xor
mov
push
mov
movsl
shll
or
sti
mov
mov
cwtl
mov
jge
movsb
jle
or
cmc
push
cmpsl
dec
fnstcw
std
mull
push
cmp
or
scas
mov
mov
mov
sub
in
cmp
pop
jne
sub
cmpsb
cmp
xor
ror
arpl
add
jp
cmc
pop
mov
xlat
jg
test
and
ret
cmpb
lock
cs
fs
scas
in
sbb
sub
call
pop
push
int3
out
lods
inc
fstps
cmc
or
lds
addr16
aad
adc
xchg
xchg
or
in
not
jp
pop
cmp
lods
push
or
and
push
in
sub
xchg
aad
in
ficoms
lea
test
loop
push
pop
stc
ss
dec
or
int3
je
sbb
cltd
leave
loopne
dec
loop
insb
gs
sub
xchg
mov
popl
sbb
movsb
orb
cmp
stos
add
ljmp
loopne
aam
lock
push
mov
dec
call
nop
repnz
mov
lcall
pop
push
xchg
das
imul
add
mov
push
ja
or
in
sub
in
in
mov
mov
loope
mov
xchg
pop
fldcw
jp
bound
pushl
cmc
lds
xchg
lret
xchg
mov
and
mov
out
cltd
pop
roll
adc
pusha
jge
lods
cmp
ja
out
das
sub
scas
xor
push
inc
xchg
dec
aad
insb
sub
shlb
cmp
pusha
cli
test
add
rclb
shrb
add
and
sti
ret
movsb
inc
leave
mov
xor
not
dec
push
js
push
pop
and
filds
inc
add
add
in
push
pop
mov
cmp
pop
mov
sub
ficoml
cmp
push
pop
or
pop
xor
shll
or
push
xor
cmc
xchg
pop
push
ret
imul
sbb
and
mov
adc
lcall
loop
out
je
cmp
les
fs
insl
adc
repnz
sarb
inc
mov
fwait
out
add
dec
dec
or
stos
lea
pushf
jae
pop
xor
fwait
pop
in
dec
sbb
adc
xor
pop
add
push
leave
fisubrl
mov
mov
out
and
in
dec
addr16
stos
test
andl
push
or
enter
cltd
in
xor
pop
mov
lcall
loopne
xchg
in
or
mov
cmpsl
imul
mov
add
pushf
sub
and
cmpsb
xchg
adc
inc
hlt
pop
push
pop
push
inc
repnz
hlt
sub
add
fs
dec
rcrl
inc
or
lcall
mov
cs
dec
or
cwtl
divb
aas
loopne
cmpsl
jb
stos
mov
inc
add
in
jmp
in
repz
dec
add
scas
imul
xor
dec
lcall
lret
fidivrs
clc
dec
fistpl
cld
lock
adcb
clc
fiaddl
add
cmp
jo
inc
jge
nop
arpl
cwtl
adc
mov
or
pusha
outsb
push
in
clc
jmp
mov
test
pop
fcmovne
rolb
scas
xchg
mov
lock
fnsetpm(287
mov
lret
out
iret
adc
sbb
mov
ficoml
or
push
lock
in
in
ljmp
clc
insl
movsb
jle
sub
jbe
shl
inc
es
enter
testb
je
xchg
xchg
lret
jbe
sbb
mov
test
xor
fistpl
sub
addl
xchg
aaa
lods
scas
jo
cmp
sbb
push
rcrb
icebp
sub
cltd
aas
lret
data16
mov
sbbl
mov
pop
jmp
addr16
movsb
mov
fcoml
test
cmpl
jge
cld
mov
xchg
pop
aam
stos
mov
cld
pusha
mov
sar
jmp
inc
cmp
cmpsb
add
stos
xor
push
rcl
ljmp
movsl
cmp
push
out
lock
cmp
mov
push
cmc
lahf
jmp
pop
or
in
jge
adc
push
adc
push
and
sub
pop
jmp
stos
cmp
xchg
xlat
mov
mov
mov
mov
cmc
or
into
push
mov
inc
jp
dec
mov
mov
or
jecxz
repz
dec
scas
adc
bound
mov
aas
in
test
mov
xor
ds
imul
xchg
lea
in
inc
shll
push
jae
adc
sbb
add
xor
addr16
or
dec
adc
sbb
cmp
in
cmp
stc
pushf
dec
testb
shlb
lock
mov
cmp
and
loopne
push
std
mov
pushf
lds
push
pop
loopne
jmp
jne
insb
mov
das
or
repnz
mov
loopne
fisubrl
cmp
pop
cmp
sub
push
rcrb
xor
inc
sbb
sub
pop
or
filds
mov
xchg
fmuls
insl
pop
ljmp
push
push
jmp
mov
dec
out
imul
outsl
int
xchg
mov
test
xor
imul
or
std
jmp
lcall
cmp
mov
add
dec
gs
roll
cwtl
fnsave
sbb
add
outsl
and
out
dec
or
addb
and
push
sbb
pop
push
rcr
rcrl
xchg
les
test
sub
ds
ror
jno
adc
scas
xchg
pop
pop
xchg
lret
test
mov
dec
lods
mov
pop
leave
aad
test
sbb
add
mov
xor
out
cmp
sub
sbb
xlat
mov
adc
lret
push
enter
and
outsl
subb
jp
adcl
dec
mov
aad
and
push
pop
sub
and
in
out
mov
bound
dec
addr16
out
sarb
in
movsb
jmp
mov
lahf
or
xchg
pop
insb
shll
cli
je
mov
jge
pop
jne
add
cmp
jl
test
jl
sub
cmpsl
ret
xchg
jne
or
cmp
mov
mov
dec
add
lock
addl
mov
push
lea
stc
mov
lea
dec
leave
lret
clc
mov
cmp
dec
add
jnp
inc
fistl
sub
jmp
push
std
jne
inc
pop
cltd
xor
jg
aaa
adc
and
xorb
mov
les
testl
fsubl
cmpsb
sbb
push
adc
das
pop
cwtl
shrl
add
in
mov
add
js
adc
scas
inc
std
std
or
outsl
mov
lods
push
iret
or
jg
movl
movsb
cli
sahf
push
cltd
loop
clc
aad
out
add
add
xchg
mov
int
shl
jnp
out
xor
gs
ret
inc
icebp
jnp
test
in
jns
jo
cld
aad
out
xchg
mov
cmp
sub
loope
pop
mov
inc
out
shll
xchg
ss
xchg
mov
sbb
icebp
push
scas
sarb
jbe
repz
or
pop
pop
push
vpaddusw
dec
fisubl
cmp
xor
adcb
stos
dec
insb
lods
mov
ret
sbb
fistl
push
push
pop
das
les
pop
jns
pop
pop
pop
fs
fidivs
xor
pop
shll
adc
adc
std
loopne
rcrl
mov
add
faddl
daa
loopne
xchg
daa
jnp
cmp
pop
mov
xor
add
adc
push
data16
in
enter
sbb
in
xor
jne
lods
xor
lock
jl
mov
cmp
pop
inc
fmul
sub
sub
iret
and
jl
fidivl
xchg
and
fsubrp
out
jo
mov
and
fisttps
mulb
push
mov
ss
inc
xorb
in
fwait
sub
imul
outsb
rorl
pushf
mov
mov
xlat
aas
stos
adc
sbb
mov
xlat
rclb
mov
push
fsubl
sub
imul
test
shl
insb
lds
in
mov
mov
mov
and
bnd
cmp
sti
cmpb
pop
or
pop
push
pop
cltd
inc
xlat
in
mov
push
ret
sbb
cmpsb
fldenv
mov
dec
cmp
xchg
push
sub
testb
mov
jae
daa
sub
sahf
sub
or
fistl
xchg
imul
xor
xorl
mov
mov
test
das
mov
loop
lcall
lock
pop
adc
and
in
lcall
or
cld
dec
mov
mov
pop
and
fmuls
push
cld
add
call
dec
cmp
or
jp
push
clc
and
movsl
pop
ja
fildll
movsb
stos
out
fimull
and
xchg
icebp
cs
shlb
cmc
cmp
and
mov
push
ret
cmp
int
jge
xchg
idivb
std
add
mov
add
add
ja
sub
mov
cmp
test
mov
xlat
xlat
xchg
push
clc
push
inc
dec
lods
jl
shlb
jne
pop
loopne
lahf
sbb
sub
adc
xor
call
xlat
iret
sub
loope
into
pop
ja
pop
jmp
xor
mov
mov
pop
push
sbb
mov
push
mov
mov
test
out
sub
mov
outsl
inc
xorl
xchg
aam
mov
adc
idivl
mov
cmp
imul
pusha
fisubs
pop
es
or
gs
out
sub
sub
adc
scas
lret
and
xor
push
jnp
push
mov
xchg
jnp
cld
fwait
test
mov
sbb
fwait
mov
cmp
mov
fstps
push
inc
daa
aas
xor
out
pop
adc
mov
push
sbb
stos
mov
idiv
push
f2xm1
rcrb
loop
leave
sbb
lcall
sub
dec
jns
fyl2x
fcoml
pop
nop
inc
insb
pop
les
out
or
inc
push
or
repz
xchg
popa
sarb
fld1
xor
out
lds
test
pop
fst
dec
mov
sahf
es
sub
pop
pop
in
sarb
xlat
jmp
ljmp
sbb
and
mov
mov
fiaddl
jns
inc
dec
push
stos
pop
lods
push
cmp
bound
sub
test
mov
mov
imul
jb
cmp
mov
sub
cmpsl
dec
or
std
push
mov
enter
pop
ljmp
pop
cmp
scas
and
or
push
jns
popa
out
xor
leave
pop
sbb
test
mov
xchg
fstl
push
out
xor
sbb
mov
addl
mov
jbe
fldcw
mov
jns
sub
lock
add
out
mov
push
push
adc
sub
jge
mov
sbb
mov
lcall
push
aas
lods
pop
fs
loop
adc
push
mov
add
mov
inc
and
dec
or
or
adc
push
aad
lret
aad
adc
pop
pop
mov
push
push
stos
rclb
fcmovbe
pop
sbb
sub
addr16
loop
push
adc
cmp
ficomps
mov
inc
push
dec
jmp
ja
inc
aad
addr16
pop
sbb
cmp
mov
sbb
or
push
dec
xlat
push
and
repnz
cltd
fadd
cmp
add
subb
mov
sub
push
arpl
adc
cmp
inc
jl
push
sbb
fistl
out
sub
add
or
iret
ss
mov
inc
in
dec
push
mov
aaa
icebp
aas
pop
insb
sub
hlt
pop
fnsave
pusha
stc
int
scas
pop
aam
loope
mov
xchg
call
leave
push
fdivrl
pop
dec
roll
cmp
icebp
mov
xor
std
sti
pop
dec
adc
inc
push
xchg
xchg
lea
pop
adc
pushf
sbb
in
inc
push
add
push
dec
xchg
mov
imul
jne
push
mov
nop
sub
mov
add
cmp
aaa
fst
lret
mov
pop
adc
or
out
xchg
xchg
mov
xor
jmp
inc
pop
cmp
pop
xchg
add
xlat
in
pop
js
add
rcrb
pop
jl
outsl
arpl
or
add
mov
in
shlb
flds
data16
and
push
xor
adc
fcomip
lret
push
out
scas
xchg
cmp
and
jl
stos
push
rclb
mov
rclb
add
push
mov
std
out
push
arpl
cmp
ljmp
push
xor
incb
repz
rcrl
adc
dec
lret
addb
data16
test
sti
and
jno
xor
inc
outsl
sahf
jno
sub
in
lea
fistpll
mov
jmp
pop
adc
push
dec
mov
dec
cmp
lahf
std
daa
mov
push
dec
movsl
xchg
xchg
dec
mov
inc
insb
add
inc
jp
arpl
rorl
push
push
mov
movsl
dec
xchg
das
mov
loop,pn
cmp
jp
aas
test
clc
and
stc
jl
fcompl
cs
add
jp
add
repnz
push
lea
jle
xor
call
clc
es
leave
jns
adc
shr
xor
orb
cmc
into
sub
fs
cmp
push
hlt
dec
add
push
cli
add
inc
stc
or
int
bnd
jg
fcomip
pushf
js
jnp
mov
jle
xchg
mov
popf
cmc
fcmovnbe
mov
xchg
movsb
jnp
adc
mov
hlt
cli
roll
cli
or
pop
xor
mov
push
adc
mov
mov
pop
pop
jl
jno
movsb
loopne
clc
pop
shlb
dec
mov
jns
jae
icebp
out
ret
sti
stc
jecxz
mov
inc
shlb
pop
and
fs
mov
dec
inc
sbb
mov
clc
and
jnp
cmpsl
add
adc
daa
pop
mov
lods
adc
shrb
add
push
test
mov
in
adc
push
cmp
jmp
push
dec
ret
jbe
bound
dec
mov
ja
jecxz
neg
dec
pop
outsl
inc
mov
sub
dec
xchg
and
push
push
rclb
mov
aas
test
lock
leave
lea
sub
inc
add
inc
jmp
lods
insb
cmp
aaa
or
mov
ja
ss
int3
push
dec
fldcw
cmp
or
xchg
add
cmpl
js
das
dec
popf
mov
lods
push
push
push
sub
mov
loope
dec
repnz
inc
jge
sub
clc
and
mov
imul
rcrl
and
bound
mov
fiadds
jb
nop
and
sub
pop
notb
mov
ret
or
hlt
popf
cmp
cmpl
int
std
jbe
mov
test
pop
js
sbb
push
or
push
cmpb
cmpsb
mov
ret
insb
dec
ds
movsb
movsb
inc
add
jne
lods
fs
or
cld
fiadds
sub
pop
js
or
mov
test
ficomps
mov
test
ret
lods
iret
movsb
stos
in
mov
xchg
ret
ds
movsb
adc
lds
jle
sarb
cwtl
mov
loopne
push
pop
jbe
ret
sbb
push
mov
and
add
lds
jbe
jle
cmp
push
or
mov
add
ret
mov
out
mov
shl
inc
or
and
push
sbb
xchg
adc
cmp
repz
mov
testb
test
jecxz
dec
orl
das
cmpsl
sub
int3
lret
push
test
jo
adc
or
mov
or
inc
sbb
xor
sub
mov
lret
adc
pushf
pushf
push
jbe
in
jle
gs
mov
mov
jbe
jle
daa
inc
push
int
mov
sub
cmpsb
dec
mov
mov
mov
cmp
push
dec
gs
push
sbb
mov
cmp
mov
cli
stos
sub
mov
sub
fcmovb
mov
shl
test
xchg
xor
pop
inc
mov
sti
jmp
pop
les
adc
jl
push
mov
lea
imul
adc
int3
jl
daa
std
mov
dec
ljmp
inc
out
into
push
iret
movsb
inc
test
sbb
dec
cld
stos
push
imul
leave
lcall
cwtl
xchg
and
pop
xor
jg
push
call
stc
fdivrs
outsl
std
mov
mov
pop
inc
fldl2e
pusha
aam
mov
pop
outsb
outsl
mov
call
in
stc
mov
mov
roll
cmp
jl
add
pop
clc
mov
add
xchg
dec
dec
jbe
inc
jmp
add
mov
dec
outsb
push
mov
je
mov
stos
mov
inc
mov
dec
pop
pop
cmpsl
stc
mov
mov
push
fsubs
stos
into
in
sbb
iret
cltd
cmp
call
adcb
outsl
out
mov
js
sub
stc
mov
jmp
adc
jl
mov
and
or
arpl
and
fwait
mov
nop
sbb
mov
shrb
mov
lock
sub
mov
imul
fisubrl
clc
dec
flds
pop
pop
cmpsl
stos
inc
scas
call
inc
jo
fdivrl
pushf
or
mov
fcomps
mov
xchg
daa
mov
mov
push
inc
add
movsl
aam
popf
into
aad
jb
shrb
push
or
out
or
sub
shrl
popl
cmc
aaa
jbe
jg
les
call
ss
push
fstl
sub
imul
mov
mov
fidivrs
dec
inc
nop
pop
jns
adc
iret
inc
jne
stc
imulb
mov
push
cmpsb
icebp
inc
into
hlt
shrb
mov
sbb
mov
lock
push
into
in
cld
mov
data16
daa
addr16
arpl
data16
aad
or
mov
xlat
dec
cmp
pop
stos
repnz
mov
cmp
cmp
cmpsl
jne
lcall
sahf
out
xorb
adc
sbb
push
mov
mov
cmc
cmp
ficomps
push
call
pop
mov
testb
loopne
push
jmp
das
adc
sub
mov
add
push
xchg
dec
sbb
sub
mov
fcomps
popf
and
movsb
or
scas
les
xchg
mov
jbe
mov
jle
insl
scas
jecxz
loope
in
sbb
ret
ss
decl
inc
mov
stos
and
sarb
and
bound
sub
pusha
ljmp
decb
pop
out
mov
inc
pop
aam
xchg
inc
xlat
push
outsb
pop
imul
xchg
jbe
daa
cld
insl
cmpsb
je
rcl
gs
sbb
mov
mov
pop
aaa
popf
aad
jb
sub
bnd
lret
pop
jle
movsb
inc
nop
imul
loope
test
jle
sub
mov
aaa
icebp
out
sti
or
jne
cmp
mov
mov
mov
jp
and
mov
sub
push
sbb
push
pop
push
out
jno
pushf
jp
sbb
mov
daa
sub
xchg
push
repz
enter
or
test
jmp
xchg
cbtw
push
cmpsb
test
jge
jp
outsl
xchg
adc
mov
jmp
push
sbbb
xor
jle
outsl
mov
cli
fistpl
fists
cli
aas
subl
or
adc
and
adc
aaa
push
push
outsb
enter
sbb
cmp
push
mov
pop
jnp
fdivl
adc
pusha
jne
xchg
push
sti
iret
divb
mov
xor
test
addr16
ja
xor
call
out
repnz
js
push
sbb
gs
jp
pusha
call
jae
sub
in
scas
aad
mulb
je
mov
jae
repz
push
cld
divl
cmpsl
add
arpl
shll
adc
push
cli
xor
stos
pushl
push
hlt
idiv
add
mov
inc
inc
lret
and
data16
int3
or
cmc
addb
inc
pop
stos
pop
push
lods
mov
xchg
negb
pop
loopne
dec
scas
aad
test
popf
jge
jo
repnz
add
insb
dec
push
or
fsub
sub
jp
push
insl
call
push
or
fmulp
iret
jle
add
jmp
inc
xchg
mov
fnstenv
loope
jae
lea
sub
or
jo
dec
fs
fdivl
jo
jl
out
cmp
pop
pop
dec
xchg
sti
xor
mov
jbe
and
push
aad
pop
xchg
cld
sbb
lea
data16
add
mov
leave
cmpsl
in
fs
mov
out
xchg
xchg
adcb
inc
cmpsl
xchg
and
repnz
nop
adc
leave
ja
cmc
jle
insl
push
push
cmpsb
bound
jno
in
testl
jns
dec
hlt
adc
jnp
stos
nop
repz
and
outsb
inc
sarl
insb
hlt
cmc
inc
popa
mov
cmp
jbe
aas
and
sub
xor
mov
mov
bound
mov
inc
or
iret
es
loope
jmp
cmp
add
iret
mov
cli
nop
push
fnsave
add
mov
cs
push
mov
sbb
insb
pop
in
sub
xchg
nop
xchg
fs
repnz
cli
scas
je
push
jbe
cld
push
xorb
mov
add
add
dec
std
sub
lcall
cltd
test
mov
sub
out
mov
cmpsl
stos
pop
sub
cld
cmp
xchg
xchg
outsl
decl
and
sub
xchg
jne
xor
scas
mov
fldl
das
fcmovbe
cltd
cmc
icebp
mov
cmpsl
ficompl
jnp
mov
xor
fdivrl
pop
lea
mov
and
cmp
in
dec
pop
arpl
mov
sbb
dec
stos
fcomps
movsl
push
mov
int3
addl
cmp
es
sbb
mov
jle
test
cmpsl
or
and
lahf
ret
xorl
sub
outsb
decb
sbb
dec
ss
cmpsl
into
aam
nop
lock
jb
lea
cs
and
outsb
aad
fiaddl
pop
add
push
fdiv
xor
mov
jae
xor
pop
movsb
push
dec
inc
adc
inc
imul
mov
pop
dec
aaa
adc
pop
xchg
push
pop
dec
xchg
sahf
loop
lcall
movl
or
xlat
dec
or
lods
mov
mov
jns
aas
das
fwait
in
dec
mov
or
sub
inc
mov
ljmp
aaa
push
jnp
cld
int3
or
outsl
outsl
into
ja
mov
mov
cmpsl
popa
outsb
fisubrs
bound
cmp
mov
int3
or
loopne
imul
in
xchg
rcrb
cmpb
xchg
sub
sub
mov
fcomps
jl
bound
cmp
mov
arpl
outsb
xor
xlat
jae
stos
lods
sub
cmc
insb
inc
add
xchg
dec
push
or
out
mov
mov
into
aam
xchg
into
push
mov
adc
jnp
dec
push
ds
xchg
push
sbb
shrb
fs
arpl
mov
addb
insl
std
sub
subb
xor
jge
inc
adc
push
cmpsl
aaa
mov
lahf
or
jle
insb
adc
vcvtsd2si
pop
add
popf
ror
daa
cld
repnz
scas
push
xchg
push
push
je
inc
mov
aas
ret
jbe
lea
or
mov
xlat
icebp
imul
ss
cmp
jnp
and
loope
pop
dec
pop
stos
cmp
shll
fbstp
sub
add
mov
ret
jecxz
push
adc
xor
lret
xchg
sub
lods
or
pusha
insb
lock
pop
aas
nop
jmp
add
movsl
sbb
xchg
xchg
aad
jne
jp
aas
pop
jnp
pop
aad
xchg
sub
push
pop
fldcw
jo,pn
dec
movsl
pop
xchg
cmpb
fs
push
push
out
lcall
shll
mov
loopne
fimuls
js
mov
ud2
dec
and
cmp
mov
dec
aas
push
xor
mov
pop
shll
jg
mov
jb
mov
push
pop
in
stos
add
ss
sbb
cmp
enter
nop
and
jle
out
rcll
push
xor
rclb
imul
mov
js
addr16
cmpsb
sbb
add
setne
or
adc
outsb
je
rcrb
ss
mov
aad
cwtl
insb
mov
inc
mov
jge
out
sahf
jns
int3
push
push
js
fidivrs
sbb
jnp
test
shlb
or
adc
xorb
repnz
pop
mov
cmpsl
adc
jl
and
rclb
mov
jle
push
jno
mov
ret
add
cwtl
jnp
inc
push
push
rcrl
or
mulb
ja
ret
mov
add
pop
mov
mov
sahf
jge
ss
or
pop
and
push
xchg
jg
xchg
push
xchg
cmp
test
fs
es
sbb
sub
pop
mov
add
ljmp
mov
cmp
nop
int
lods
cmpb
adc
cmpsb
cmc
and
push
addl
sti
sti
shr
add
push
insb
mov
xor
nop
jl
push
xor
test
lock
push
in
cmp
push
add
insl
in
inc
addb
mov
jb
je
mov
push
flds
pop
cmc
lret
dec
std
cmpsb
shlb
jecxz
cmpsl
pop
adc
jg
jae
jp
scas
mov
or
aaa
or
and
mov
test
jmp
inc
sub
sbb
fadds
dec
mov
mov
adc
aaa
mov
outsb
scas
jns
ret
jno
adc
push
decb
and
aam
sub
cmp
icebp
test
mov
xchg
cmpsb
lea
jno
jmp
inc
sub
aad
out
jge
fisubs
pop
mov
or
push
stos
sub
pop
xchg
insb
xchg
inc
dec
pusha
xchg
aam
push
sub
sbb
push
cs
fcomps
dec
test
clc
repnz
mov
mov
xlat
mov
jno
add
out
sbb
out
ljmp
sub
sub
fildl
sti
testb
adc
ret
mov
push
aam
xor
scas
cld
jnp
add
inc
test
js
pusha
dec
jmp
fs
adc
or
ss
lea
dec
inc
nop
lcall
std
add
bound
fucomp
mov
push
add
in
pop
pop
xor
pop
repz
fnsave
adc
movsb
push
xor
mov
jg
data16
jp
inc
add
in
js
xchg
sti
pop
cmp
lahf
xchg
in
fdivp
in
inc
sub
pop
sti
mov
xor
jne
dec
shll
aad
add
repnz
push
or
pop
outsb
hlt
call
add
xor
and
dec
out
sbb
and
cmp
jae
data16
movb
push
shlb
imul
daa
andl
sub
xor
sub
inc
xchg
jno
cmp
and
scas
jb
in
pop
xchg
int3
aaa
cmp
add
push
es
gs
push
sub
jmp
fdiv
mov
pop
cmp
lret
jge
add
push
int
adc
outsb
push
jb
in
fdivr
lret
lcall
and
lahf
pushf
rcrl
inc
jl
dec
xchg
mov
and
pop
out
aaa
xor
or
cmp
xchg
add
mov
les
ss
mov
sti
xor
mov
mov
xlat
pop
sbb
inc
inc
lods
ljmp
push
call
cmp
out
loop
sbb
xchg
aas
scas
mov
loop
andl
test
fdivrs
js
push
inc
pop
in
sahf
fs
sbb
xchg
jg
sbb
ja
ljmp
push
add
xchg
pop
lods
jl
js
sub
mov
shrl
pop
jg
pop
dec
shll
adc
cmc
dec
outsb
push
dec
lret
inc
push
aaa
or
xchg
or
jp
and
add
mov
call
idiv
pop
and
sarb
cmp
pop
in
sbb
jg
dec
int3
push
jno
inc
or
adcl
popa
mov
push
dec
inc
pop
movsb
adc
loope
and
sub
push
push
push
jo
or
jo
mov
fidivrl
aas
sbb
fdivrs
dec
popa
push
push
popf
push
lahf
adc
jnp
lds
dec
outsb
out
xlat
jl
sbb
xor
sbb
test
adc
shlb
les
sbb
jg
sub
inc
in
or
xor
stc
in
push
jp
es
adc
xchg
push
repz
pusha
dec
js
push
lcall
jle
lock
mov
adc
lcall
xchg
add
cmp
fimuls
movsl
loope
sti
pop
outsl
adcl
test
sbb
xchg
dec
push
inc
das
add
jmp
jle
sub
clc
adc
xor
xchg
lock
mov
jg
lret
mov
imul
push
shl
movsb
lret
xor
imull
cmp
push
aam
imul
test
leave
mov
xor
aad
clc
into
xor
push
jb
dec
lret
jecxz
stos
stos
sbb
dec
insb
sti
jle
push
jnp
daa
mov
cld
pushf
pushf
mov
in
fmul
mov
std
lret
xor
mov
arpl
lods
mov
xchg
or
fcompl
push
fsubs
dec
ret
lret
fs
mov
lods
gs
cmc
imul
loopne
std
bswap
xchg
push
imul
jo
pop
in
aam
and
sbb
push
mov
dec
xchg
jmp
aaa
mov
jmp
in
divl
fsubl
pop
mov
xor
and
lods
into
push
loop
adc
add
lahf
mov
ljmp
hlt
and
push
andl
mov
lds
ds
jns
cwtl
jmp
mov
insl
push
sbb
mov
jg
and
lods
xor
insl
inc
mov
xchg
test
mov
mov
dec
dec
cmp
out
outsb
xchg
iret
sub
in
in
aad
test
imul
mov
pop
inc
mov
repnz
lcall
mov
inc
jg
cwtl
xchg
lods
xchg
sub
xor
cmp
mulb
dec
in
fwait
mov
mov
fisubrs
sbb
enter
adc
mov
cmp
scas
test
jmp
into
add
aaa
dec
inc
add
mov
bswap
and
jmp
cld
decb
adc
mov
mov
rcl
push
incb
mov
xchg
xor
or
inc
jnp
sbb
xor
mov
ret
std
stc
ret
cs
pushf
or
sahf
adc
and
insl
stc
out
bound
iret
test
mov
xor
roll
loope
das
adc
nop
dec
cmp
xchg
push
ds
dec
push
mov
js
dec
lret
test
mov
cmp
or
lods
aam
in
cmp
push
sbbl
mov
js
test
jno
add
cwtl
mov
sbbl
dec
loop
or
xchg
loope
sbb
movsb
ja
gs
jp
xor
adc
sbb
xchg
push
mov
mov
jmp
xchg
mov
or
push
push
adc
lahf
rcrl
shl
aas
sti
adc
popf
cmp
mov
push
dec
rol
mov
jbe
mov
sbb
scas
cmp
enter
aam
int3
sub
imul
add
inc
sti
mov
pusha
jp
push
dec
shll
jne
daa
lea
adc
sbb
jbe
cmp
lea
inc
mov
mov
ret
das
xchg
pop
mov
adc
mov
fwait
leave
or
inc
mov
pop
les
sahf
add
and
inc
lods
mov
or
gs
jb
push
mov
xlat
out
sub
orb
mov
outsb
jle
jno
jo
adc
xchg
dec
pop
xor
adc
push
out
fnsave
jle
aam
es
or
je
xor
imul
and
dec
or
mov
test
pop
lcall
sbb
fucomi
adc
sbb
sub
outsb
fwait
and
das
jle
pop
and
sbb
outsb
sbb
lea
stos
neg
adc
xchg
lods
mov
stc
and
jae
fstps
cmpsb
lret
add
mov
and
dec
movsl
dec
das
ja
imul
bound
xchg
pop
and
shl
inc
and
mov
sbb
ret
jmp
push
and
ljmp
pop
in
scas
or
pop
pop
xor
sub
in
nop
adc
hlt
andb
mov
mov
and
jbe
mov
movsb
mov
js
ss
mov
es
cmp
cmp
cmpsl
mov
jbe
xchg
jne
and
inc
pop
mov
lods
cmpb
or
or
xchg
out
test
jno
mov
fdivs
push
sub
aam
xor
in
popf
mov
shrb
pop
test
pop
dec
ret
push
inc
adcl
sub
sub
inc
jne
mov
ret
sahf
test
int3
in
ss
test
jbe
fwait
popf
stos
loope
ja
xor
sbb
mov
insb
lahf
push
xor
aas
push
mov
shll
add
call
dec
xchg
jne
xchg
add
adc
add
or
leave
mov
and
mov
nop
mov
mov
cld
dec
es
pop
dec
vmaskmovdqu
shl
or
clc
xacquire
lods
out
push
push
inc
jmp
adc
inc
js
insb
pop
pop
fsubrs
dec
sub
pop
push
cltd
push
ret
or
cwtl
add
pop
aas
sub
fistpll
xchg
imul
stos
idivl
or
pop
test
xchg
mov
add
nop
add
dec
mul
scas
jge
movsb
mov
jmp
and
bound
or
loop
lahf
imul
in
pop
arpl
dec
adc
sbb
xchg
pushf
jle
add
shrb
and
mov
in
mov
ds
out
repnz
adc
pop
sub
mov
cmpsl
adc
mov
popl
bound
jle
or
gs
cmpsb
ss
ret
mov
adc
cli
dec
enter
push
fsubl
cmp
ljmp
adc
das
mov
les
cmpb
sub
dec
lods
test
dec
push
movsl
call
push
or
loope
push
enter
mov
dec
ss
add
les
push
cmpsb
in
xor
mov
xor
sub
inc
ffree
insb
call
es
nop
mov
data16
shrb
or
cmp
jmp
aam
daa
sub
dec
push
popa
xchg
sub
xor
mov
jle
adc
imul
fmulp
ss
jle
dec
nop
xchg
or
test
ret
popa
mov
mov
sub
fldenv
iret
aad
imul
ret
inc
scas
fsubrs
mov
push
xor
imul
rorl
dec
rol
mov
xchg
lock
pusha
sub
rcll
hlt
xlat
fdivs
roll
pop
int
push
push
jne
dec
jge
mov
push
sbb
pop
pop
mov
pusha
clc
lods
lods
ficomps
faddl
cmp
shl
fadd
jo
adc
jp
scas
loopne
mov
inc
push
xor
mov
push
test
lock
pop
push
pushf
push
mov
ret
sbb
mov
inc
call
pop
dec
jp
xor
rol
in
jg
mov
mov
sub
cmp
mov
sub
fdivl
cmp
rorl
push
cmc
pop
mov
imul
test
push
jbe
lea
pop
fs
xchg
enter
jp
stc
and
scas
push
push
rcr
and
testl
int
pop
pop
mov
in
add
lcall
icebp
std
dec
jmp
lret
lret
xor
dec
pushf
testl
fisttpl
mov
imul
mov
pop
enter
pop
cmp
pop
dec
pop
pop
add
xchg
testl
insb
add
add
and
fstpt
fistpll
pusha
and
sbb
push
nop
shrl
pop
adc
pop
incb
std
jnp
xchg
es
add
ds
int
cli
repnz
dec
pop
cmp
fucom
dec
call
ret
out
jge
data16
les
sub
mov
adc
push
fcompp
mulb
jns
mov
bound
mov
inc
int3
cmpsb
test
es
sti
fnstcw
dec
jo
enter
lcall
xchg
ds
js
shlb
and
push
push
cmpsb
jg
gs
repnz
enter
push
hlt
popf
outsb
inc
add
inc
push
pop
stos
aam
arpl
test
pop
add
faddp
adc
std
in
adc
xor
cld
dec
stc
jge
jno
add
push
sub
andl
test
out
or
lahf
sub
push
arpl
inc
lods
jae
sbb
inc
jp
cmp
enter
pop
movl
cwtl
repnz
pop
mov
bound
and
xchg
push
sub
out
lds
mov
leave
jb
jne
in
rclb
aam
aas
xchg
cmp
movsb
lahf
roll
push
dec
dec
popa
and
pop
xchg
xchg
iret
mov
push
cmp
push
jmp
arpl
loope
adc
ja
xchg
mov
inc
out
shll
mov
das
fistl
xchg
pop
sbb
xor
clc
idivb
addr16
adc
rol
dec
hlt
ljmp
lods
dec
mov
xlat
into
imul
fidivrl
fstpl
xor
pushf
jle
test
inc
int
decl
jecxz
lahf
clc
mov
popa
movsb
aaa
inc
lods
lcall
lods
aaa
rclb
es
adc
cli
vpsraw
pop
jae
dec
push
cmp
stos
stos
ret
ret
add
mov
push
outsl
sarb
jecxz
outsl
sbb
das
push
xor
inc
and
and
imul
push
inc
cmpsl
leave
sub
jb
nop
mov
add
mov
loop
aam
jmp
dec
into
xor
push
sete
sbb
imul
test
popf
rolb
out
sarb
add
sbb
xor
add
sub
les
test
or
shrl
mov
jo
outsl
daa
insb
lds
icebp
pop
stos
or
fcmovu
jb
jmp
or
mov
fldt
shl
jb
outsl
jp
mov
and
stos
pop
cli
pop
adc
xor
xor
mov
jae
out
inc
sbb
jbe
out
imul
jne
in
pop
mov
incl
shll
cld
xchg
fdivrp
push
push
and
in
loop
jp
add
imul
dec
and
and
shlb
mov
lret
pop
call
dec
mov
faddl
sbb
pop
xor
ja
push
fsts
adc
inc
rclb
inc
mov
ret
sbb
xor
mov
add
in
decb
adc
mov
repnz
data16
jg
or
test
push
push
jp
mov
in
fmull
cmovs
es
push
mov
cmc
jecxz
call
out
inc
lcall
loop
data16
jle
gs
stos
pop
xchg
ret
or
in
stos
dec
pop
test
pop
lcall
mov
sbb
das
push
je
xor
ja
mov
inc
mov
insl
add
int3
mov
add
push
stos
divb
cmp
mov
loopne
push
lahf
out
mov
loope
mov
pop
mov
mov
xor
lods
xor
repz
mov
ds
pop
test
jb
mov
jl
mov
stc
into
jb
dec
adc
mov
mov
cmp
ss
out
out
orb
cmp
jecxz
lods
mov
or
lds
imul
mov
in
push
mov
icebp
stos
imulb
push
jae
sti
add
out
jl
dec
aad
push
test
arpl
ret
xor
lods
into
roll
ja
cmp
xchg
push
sbb
jp
pushf
rcll
ljmp
xchg
push
test
push
mov
int3
xchg
ficompl
mov
rcrb
fsubr
mov
fld
add
push
sbb
cltd
or
mov
ret
push
pop
imul
in
test
add
pushf
pop
mov
shll
dec
jge,pn
and
data16
pushf
jns
push
pushf
pop
cwtl
xchg
dec
cmp
mov
inc
movsb
andl
mov
xorb
or
xor
pop
inc
scas
xchg
jge
roll
out
aaa
push
in
jne
fs
mov
cmpsl
icebp
in
add
rcr
insl
loop
or
or
jo
adc
jle
add
pop
aaa
sbb
js
lock
fwait
stos
test
xchg
or
jno
jne
or
enter
add
scas
adc
push
ret
pop
out
shr
inc
mov
push
daa
mov
push
jg
js
dec
js
sub
jg
lahf
jns
push
insb
xor
jg
adc
test
frstor
jg
scas
adc
cmp
cwtl
sub
mov
mov
dec
push
xlat
inc
in
xor
addb
mov
add
in
xchg
push
fimuls
ds
cmp
icebp
jmp
xorl
cmp
pusha
in
adc
jo
or
inc
pop
xchg
inc
sbb
xor
mov
xchg
cmp
push
inc
imulb
mov
mov
pop
xchg
dec
rorl
pop
cmpsb
sub
cwtl
repz
pop
scas
push
xchg
bound
mov
or
adc
ljmp
mov
mov
int
push
pushf
std
lods
jge
xchg
repz
and
mov
sub
inc
loope
test
andb
cmp
jnp
xchg
add
push
mov
sbb
cli
pop
lock
add
int
mov
mov
out
push
roll
xor
jl
sbb
adc
sbb
and
push
mov
mov
ljmp
fstps
ret
jnp
scas
jl
xchg
daa
or
ljmp
dec
pushf
sbb
icebp
mov
repnz
fdiv
in
lcall
in
fcomps
pop
shrb
pop
xor
push
sbb
xor
push
fdiv
push
insl
aad
lcall
in
add
in
xchg
cs
jo
shrl
lahf
and
jo
shl
repnz
adc
stos
in
mov
mov
insw
popf
or
push
scas
xchg
test
fidivl
addr16
sbb
fistl
leave
roll
inc
fistl
stc
int
loope
fwait
popa
xchg
pop
pop
or
adc
cmc
xor
aaa
addl
dec
sbb
cld
inc
ljmp
push
adc
fisttps
push
icebp
gs
insb
fwait
into
or
mov
inc
sbb
pop
fs
push
sarl
stos
pop
add
mov
push
into
std
fnstcw
push
outsl
pop
mov
mov
and
dec
shrl
xor
push
sbb
shrb
push
lods
cmp
repnz
scas
adc
scas
sbb
dec
gs
sti
add
ljmp
inc
aad
pop
je
imul
aaa
data16
push
into
xor
adc
fiaddl
xor
adc
cmc
jmp
fisubrs
mov
xor
push
lcall
fisttpll
out
adc
pop
sti
pop
push
dec
inc
jg
adc
scas
pop
mov
iret
sbb
or
icebp
sahf
shll
jl
shl
adc
lods
dec
pop
pop
inc
rcpps
lds
push
xor
push
lret
loopne
and
fimuls
lcall
sahf
cwtl
push
mov
fs
jp
sahf
jne
popf
mov
dec
dec
out
mov
enter
and
rcrl
cmp
xbegin
xchg
call
cmp
dec
sbbb
adc
dec
cltd
arpl
nop
icebp
cmc
push
add
jns
mov
jmp
lahf
mov
loop
ret
loope
adc
add
xchg
jo
cmpsb
adc
dec
xor
repz
pop
aaa
jecxz
jb
adc
xchg
test
add
aam
stos
dec
out
push
xchg
xchg
jno
mov
mov
mov
out
mov
ror
rcrl
aas
xchg
mov
in
adc
push
movsb
xchg
mov
andb
repz
imul
push
mov
sub
subb
lock
dec
mov
call
lea
mov
outsl
and
call
jmp
lret
test
inc
adc
jle
inc
jnp
xor
ds
cmpsb
mov
fmuls
dec
stc
push
outsl
mov
or
lods
in
mov
or
rorb
inc
mov
xchg
jbe
arpl
add
out
pop
cmc
adc
mov
dec
decb
icebp
lods
gs
jmp
mov
mov
jno
dec
jp
push
fwait
add
popf
imulb
sbb
add
jbe
jae
mov
outsb
and
xor
pop
jbe
lea
mov
lods
outsl
mov
mov
inc
dec
push
or
pushf
jl
stos
xor
stc
push
mov
hlt
adc
pop
add
lods
mov
sub
shll
adc
test
add
sti
xor
xchg
mov
add
aaa
or
mov
lahf
mov
repz
popa
call
scas
out
idivl
mov
iret
push
mov
fildl
mov
or
int
mov
xchg
cltd
or
xchg
data16
sbb
push
inc
xor
scas
xor
scas
mov
inc
adc
mov
rclb
orb
mov
ffreep
mov
push
dec
lea
daa
negl
faddl
jl
sbb
push
sub
xor
and
icebp
in
sub
inc
push
je
cmpsb
mov
xchg
fldcw
mov
scas
mov
or
pop
stos
or
movsl
cwtl
push
sbb
cmp
jge
inc
loop
sbb
pop
fiadds
sub
xchg
cli
test
and
and
insl
test
into
imull
xor
push
mov
push
orl
ficomps
insb
cli
stos
cwtl
sub
addb
pop
sbb
icebp
mov
push
out
push
addr16
push
insl
sarl
lods
incl
ja
iret
cltd
sub
mov
dec
xchg
xor
jae
ss
sbb
dec
aad
and
notb
xchg
inc
das
inc
sbb
or
adc
les
cs
inc
rcrb
and
dec
mov
inc
loop
into
xor
repnz
popa
push
or
inc
mov
add
lahf
mov
dec
pop
jno
and
jmp
icebp
xlat
outsl
mov
xchg
addb
roll
clc
cmpsb
stos
ljmp
ljmp
in
cmp
pop
out
sar
insb
cs
mov
add
mov
sbb
or
jo
jnp
mov
push
dec
mov
movhps
std
or
stc
popa
mov
adc
sub
push
lcall
pop
lret
sbb
sub
hlt
fcmovu
das
mov
ja
lods
aas
jle
punpckhbw
push
shrl
dec
rcr
mov
sti
fnsave
aaa
cmp
insl
mov
mov
aam
or
mov
or
xchg
sahf
jb
arpl
cli
lods
leave
out
test
jge
fcomps
cmpsl
adc
mov
sub
icebp
xor
movsb
inc
jl
jo
inc
test
bound
in
mov
rcrl
rolb
icebp
movsb
jl
or
lds
add
add
cwtl
sti
jmp
jb
scas
sti
mov
mov
inc
fistpll
cmpsb
mov
loopne
rcrb
stos
lret
mov
adc
xchg
into
inc
stos
cmp
xor
scas
fstl
jnp
lods
in
repnz
mov
jae
sub
in
enter
fisttpl
imul
and
mov
scas
jno
xchg
jecxz
lods
mov
loopne
add
xchg
jne
sub
or
xchg
into
inc
or
int3
jmp
lods
pop
pop
push
or
mov
adc
ret
dec
frstor
or
stc
sbb
cmp
gs
fdivl
enter
rcrb
sub
dec
shlb
lret
add
xchg
int3
pop
and
add
ds
cmp
add
pop
hlt
push
sub
js
xor
sbb
xor
push
mov
out
and
aam
js
inc
shll
imul
sub
inc
repnz
pop
push
nopl
enter
xchg
out
js
mov
mov
mov
xchg
cmp
push
jnp
jp
push
lods
adc
cld
lock
add
int3
and
sub
leave
insb
mov
les
dec
sub
fldl
push
test
push
lds
arpl
fisubrl
pushf
jnp
pop
testb
jbe
mov
gs
leave
dec
push
je
scas
lret
xorb
loop
cmc
mov
inc
adc
dec
or
push
sbb
push
xchg
andb
adc
push
gs
or
cld
adc
xor
xchg
shlb
pop
add
sbb
and
ss
hlt
jge
xchg
or
sub
jbe
cmp
rcrb
repz
lahf
out
xchg
push
idivb
sbb
or
dec
add
sub
fcoml
rorb
lret
pop
xor
sbb
pop
in
mov
addr16
popf
mov
out
dec
fidivrl
inc
add
dec
dec
pop
int3
jg
inc
out
cmpsl
cld
int3
pop
and
test
cmpsb
jmp
cmp
das
or
dec
jo
clc
imul
and
sub
cmp
fdivs
push
adc
push
lods
or
mov
jo
pop
add
mov
out
gs
dec
push
dec
adc
jmp
sbb
cmp
adc
push
add
fsubrp
sub
add
pop
je
add
movsb
mov
fstl
xchg
dec
mov
dec
sahf
push
mov
add
popa
lods
jg
pop
bound
arpl
inc
xor
inc
pop
rcll
sbb
mov
pop
lahf
jmp
data16
dec
imul
dec
pop
test
aaa
js
adc
int3
adc
clc
and
mov
fmuls
pop
aad
sbb
cmc
add
sti
sahf
scas
data16
mov
popa
movsb
stc
mov
jno
mov
sub
dec
cmp
sbb
mov
negb
bound
rcl
pop
mov
push
aad
aam
adc
jge
adc
lock
fcoml
outsb
sub
fidivl
lds
xchg
push
aaa
inc
ljmp
stos
rorb
mov
scas
dec
jp
hlt
arpl
fidivrs
jno
in
xchg
pop
js
outsb
mov
ljmp
jecxz
mov
ret
dec
lahf
xor
mov
out
or
push
pop
lahf
out
aam
mov
int
pushf
sub
cs
adc
cmp
mov
insb
sbb
push
push
fstps
adc
pop
pop
xchg
jno
aas
out
lahf
xor
and
jnp
ret
andb
movsb
mov
inc
mov
and
mov
sahf
push
pop
sbb
mov
stos
repz
insb
das
adc
mov
push
cld
pushf
lcall
mov
mov
or
xor
daa
sbb
add
pusha
js
aas
sbb
scas
sub
mov
out
gs
out
dec
dec
andl
jge
dec
jmp
sahf
and
test
cmp
inc
out
sbb
rorb
rcrb
pop
cmp
int3
int
mov
mov
js
cmp
movsl
movsb
add
push
test
mov
fwait
out
and
mov
stc
or
ret
mov
xlat
out
popa
xlat
inc
je
mov
loopne
mov
dec
lods
pushf
in
popl
lods
loopne
pop
and
ljmp
gs
pusha
mov
test
xchg
push
jbe
in
lds
inc
xchg
and
rcl
outsb
xor
sbb
sti
inc
sbb
lods
xchg
fisubrl
into
jecxz
shl
cli
outsb
or
adc
loope
adc
or
sub
push
mov
cmpsb
xchg
ds
jp
cmp
adc
testl
les
ror
mov
or
adc
dec
and
pop
mov
pop
and
mov
xchg
jg
or
adc
out
js
hlt
scas
testb
inc
mov
sbb
jno
bound
popa
shlb
movsl
push
pop
sub
xlat
sub
mov
cmc
add
cmpsb
leave
xchg
outsb
mov
aaa
rolb
fs
push
push
rorb
imul
ljmp
or
test
int3
xor
sub
mov
jns
inc
xor
dec
out
cmp
inc
mov
and
push
rcrl
mov
pop
in
or
outsb
je
mov
arpl
mov
xor
ss
cmp
sub
xor
mov
int
mov
jmp
out
filds
std
ret
icebp
in
sbb
pop
cmp
sub
push
out
fwait
jge
repnz
loop
xorb
lret
pusha
test
dec
imul
in
imull
lea
ret
in
fdivrs
jle
mov
lods
pop
and
das
cmc
pushf
int3
pop
ret
jmp
ljmp
cmp
pop
pop
lret
in
js
push
or
imul
ret
pushf
push
sbb
aam
mov
mov
xchg
rcll
and
ljmp
dec
into
out
sti
pusha
jo
mov
movsl
dec
cmp
adc
lea
push
inc
pop
mov
fwait
adc
imul
cmp
mov
inc
dec
popf
stos
mov
jge
mov
lahf
pop
and
loope
test
lahf
imul
insb
gs
in
out
frstor
add
inc
mov
cltd
cmp
cmp
test
int3
out
mov
loope
xor
sbb
aaa
or
fs
loop
sbb
adc
dec
mov
sahf
sbb
shl
pusha
sbb
cli
in
nop
addr16
cli
in
jmp
mov
int
int3
push
jne
and
xchg
bnd
rclb
mov
fbstp
repz
mov
test
popf
mov
int3
pop
and
addr16
xor
inc
sub
push
mov
cmp
stos
cmp
or
jg
add
orl
jb
pushf
mov
test
mov
je
gs
rcll
test
in
pop
xchg
cmpsb
repz
sub
xorb
fidivl
test
xor
or
and
push
test
repz
loopne
push
mov
repz
int3
out
pop
jge
and
fnsetpm(287
inc
sahf
pop
push
test
xchg
cmp
push
pop
pop
and
lock
jb
cwtl
xorl
sbb
outsb
aam
dec
aad
hlt
add
ljmp
cmc
inc
in
cmp
loope
xchg
pushf
rol
orl
mov
jp
add
mov
mov
cmp
dec
pusha
inc
ss
jmp
fwait
xor
movsb
cltd
test
add
mov
adc
fadds
pop
cmp
adc
pushf
addr16
push
jnp
mov
outsb
and
es
lcall
scas
jg
fs
mov
jns
mov
adc
xchg
cmp
in
cltd
imul
hlt
inc
loopne
hlt
xchg
stos
lcall
aad
lea
std
aas
mov
notb
cld
daa
shl
fadd
inc
push
jae
xchg
pop
std
mov
adcl
sti
xchg
cld
outsb
sub
sub
jmpw
lods
pop
push
jb
push
lahf
mov
xor
out
sbb
sahf
pop
or
inc
sub
or
mov
push
enter
adc
sbbb
dec
loop
inc
pushf
jge
stc
imul
lods
jb
pop
or
clc
nop
jl
int
dec
in
test
imul
jo
adc
mov
xor
les
xchg
lcall
mov
mov
inc
les
lahf
dec
cmc
push
rolb
pop
add
test
bound
inc
mov
je
jmp
inc
and
cli
push
imul
sbb
loope
cld
push
shlb
aas
pop
std
cwtl
data16
insl
cmpsb
out
jle
push
adc
sub
and
popl
out
arpl
test
push
in
gs
pop
in
aaa
jg
lea
dec
mov
fstps
dec
cmp
inc
addr16
fwait
das
bound
mov
push
popf
in
out
cmp
jp
test
lahf
adc
xor
adc
loop
push
fimuls
mov
ud0
pop
sbb
div
cli
jecxz
inc
stos
inc
stos
mov
leave
ds
sub
mov
outsl
mov
test
cmp
dec
dec
pop
jg
sti
pop
arpl
inc
in
pop
jg
sub
aas
xor
xchg
aad
fimull
in
mov
and
jle
sbb
sub
fcomps
sbb
inc
out
mov
shl
and
adc
gs
dec
movsl
test
jo
or
pop
mov
jb
call
outsl
dec
imul
inc
sbb
mov
adc
mov
dec
inc
inc
test
cmp
mov
stos
mov
mov
iret
sbb
jo
js
rcr
and
mov
sbb
ljmp
std
es
adc
xchg
xchg
mov
add
cmc
pop
push
mov
adcb
and
mov
call
and
push
cmc
jo
sbb
das
lcall
dec
lds
in
dec
sbb
pop
bound
xchg
je
lcall
mov
cmp
cli
in
jecxz
add
scas
jno
xor
shlb
out
cwtl
lret
pop
bound
lock
cmp
pusha
sti
sbb
inc
js
clc
ljmp
mov
daa
xor
rolb
xchg
in
add
adcl
mov
push
ljmp
mov
jno,pn
cmp
sbb
syscall
jns
sahf
outsb
fwait
in
add
fidivs
insb
sub
stos
xchg
mov
ljmp
push
xlat
jmp
sub
hlt
inc
addb
pop
inc
mov
mov
cmp
jns
stos
jns
cmp
cmp
popf
mov
add
jl
imul
cmp
aas
or
xchg
in
mov
push
enter
dec
stos
push
mov
insl
test
and
adc
mov
add
push
es
in
fdivr
push
addr16
fildll
sbb
mov
inc
mov
cli
ficoms
jg
sub
mov
push
loop
xchg
loope
cmp
fucom
aad
cmpsb
dec
sub
push
mov
dec
xlat
sbb
mov
pop
loop
fwait
push
lods
mov
adc
stos
xor
cmp
sbb
fs
cmp
jmp
jl
iret
ss
sub
xchg
pop
mov
mov
aam
xchg
xor
push
dec
sub
daa
push
xchg
into
add
sbb
push
mov
push
xchg
filds
mov
pop
and
sbb
dec
xchg
jnp
in
mov
jmp
push
sbb
fstpt
mov
pop
mov
jb
ja
push
xorl
movsl
mov
mov
adc
xchg
leave
movb
sbb
out
add
add
into
mov
jnp
push
xor
test
nop
mov
imul
icebp
add
lcall
sti
jl
jb
pop
sahf
cmp
jno
orl
cli
add
or
mov
icebp
dec
mov
loopne
dec
shlb
sarb
scas
and
ret
mov
add
jnp
call
imul
je
shl
jns
je
dec
push
inc
sub
xchg
inc
push
iret
mov
dec
inc
pop
test
dec
cmpsb
dec
jmp
or
inc
jmp
inc
int3
es
inc
mov
lods
sbb
sbb
xor
shlb
subb
mov
mov
test
repz
mov
enter
repnz
xrelease
lcall
xchg
cmpsl
cltd
pop
jae
out
jbe
mov
dec
dec
das
cwtl
mov
pushf
fs
scas
push
cmpsb
cmp
lock
rcrl
pusha
ret
lods
xchg
imul
shrb
mov
es
sub
mov
push
rep
add
aad
mov
mov
and
insb
cmp
std
icebp
mov
dec
pop
mov
andb
xor
jae
mov
testb
push
out
xchg
xor
lods
adc
pop
adc
je
xchg
in
call
loop
loopne
pop
aaa
push
jbe
inc
outsl
adc
adc
inc
sub
mov
mov
pop
sti
sbb
enter
arpl
fwait
or
mov
or
sbb
sahf
jno
jne
sub
ja
test
dec
mov
sbb
inc
xor
xor
iret
subl
mov
dec
imulb
shl
in
int3
mov
loop
sar
in
clc
das
imul
sahf
inc
lea
pushf
in
inc
and
rcrb
js
sbb
xchg
xchg
ljmp
and
sbb
pop
in
xor
xchg
xor
sti
sub
stos
leave
mov
pop
in
xchg
xor
mov
jmp
xor
pushf
cmp
jle
push
dec
ret
das
and
push
push
int3
enter
mov
mov
lret
dec
aam
imul
and
rorl
cmp
pop
xor
scas
sbb
mov
cwtl
sbb
push
push
sub
in
nop
pusha
push
cltd
xor
mov
sbbl
or
push
mov
mov
sbb
jns
xor
xchg
pop
out
sbb
jnp
out
ds
mov
pop
inc
sbb
mov
and
movsl
les
cmp
dec
pop
adc
push
lcall
loopne
es
aad
int3
push
pop
adc
sub
cltd
add
xchg
or
pop
push
or
test
jle
aad
and
inc
sahf
jp
cmp
dec
jl
dec
dec
imul
dec
mov
fdivr
push
stos
sub
sub
lret
jle
add
xchg
mov
mov
lods
adc
imul
out
lods
dec
inc
push
arpl
mov
sbb
push
sub
or
sub
mov
jb
mov
dec
cwtl
cmc
jle
add
std
fwait
mov
aam
adc
mov
xor
orl
mov
jo
jecxz
data16
fidivs
cmp
loope
cltd
lods
fisttpl
pop
mov
dec
aaa
and
call
adc
adc
dec
cmp
testb
xchg
cmp
add
adc
push
mov
mov
mov
sub
repz
mov
iret
pop
push
cmp
sarl
fsubl
shlb
and
sahf
push
xchg
mov
mov
je
jo
les
cli
gs
mov
test
xor
mov
shl
add
dec
mov
jno
or
or
sub
inc
sub
fstpt
fucomip
dec
loop
aam
add
fsubr
mov
in
scas
cmp
dec
les
mov
sub
ds
dec
jge
int
mov
shll
pop
mov
cmpb
mov
insb
add
ret
inc
lcall
push
insl
inc
xchg
in
mov
jecxz
sub
loop
xchg
sub
rcr
scas
mov
scas
aas
aam
popf
popa
fidivrs
sbbb
fidivrs
and
mov
cmpsl
push
daa
aaa
cmpsb
pushf
cmpsb
out
lea
mov
push
or
jne
xchg
mov
jge
inc
inc
or
push
dec
and
icebp
fdivs
pop
push
sbb
pop
mov
cmp
jg
cltd
test
les
cltd
jle
sbb
iret
mov
fiaddl
shrl
cmp
test
inc
mov
pushf
aad
ret
push
adc
or
sub
push
adc
outsl
fwait
je
xchg
ror
xchg
mov
xor
sbb
loope
sbb
rol
xor
loope
xchg
mov
rclb
jnp
out
jl
mov
cmp
pusha
xchg
loop
mov
mov
lahf
sbb
xor
lret
sbb
mov
outsl
adc
mov
and
enter
cmp
cmc
rcll
das
popa
jp
add
test
lret
jmp
xchg
call
push
lcall
cs
xchg
int
pushf
pop
dec
rorl
pop
ret
out
cmc
ja,pn
sbb
sbb
pop
jne
test
jo
push
lret
mov
outsb
or
mov
stos
cltd
cmp
push
enter
mov
fdivr
adc
mov
es
leave
sub
pop
jmp
mov
loopne
adc
jns
cmp
jne
mov
cli
cmpsb
stos
pop
mov
lods
xor
into
test
repnz
dec
mov
cwtl
in
scas
aam
mov
aam
test
jae
mov
scas
push
jl
cmp
cmp
lret
mov
or
inc
dec
cmp
push
clc
adc
jbe
sub
shl
mov
repnz
fisubrl
outsl
xor
sbb
push
lods
push
lret
clc
ret
cwtl
aam
jo
orl
mov
ds
pop
mov
pushf
stos
rcll
fdivr
inc
popf
push
mov
push
cltd
iret
mov
add
add
push
pop
imul
xor
pop
sub
push
sbb
jp
pop
mov
ss
inc
loopne
dec
lcall
mov
repz
mov
rcll
loop
inc
in
inc
idivl
js
shll
std
std
xchg
hlt
and
cmp
pop
popa
jg
mov
mov
adc
imul
add
insl
arpl
cmp
das
jno
sub
mov
push
jmp
lods
popf
jmp
pop
and
outsl
fwait
push
or
mov
sub
gs
pop
mov
jmp
je
inc
xchg
lods
lea
test
cmp
xchg
imul
aam
lods
cmp
scas
sbb
gs
mov
mov
mov
std
push
mov
mov
xor
jg
shl
pop
pop
sbb
in
adc
shlb
and
lock
das
out
dec
subb
xchg
repz
test
dec
mov
add
jb
in
add
shr
xchg
dec
xchg
cltd
dec
pop
inc
xchg
dec
and
test
fwait
int
repnz
lahf
cmp
sbb
in
jg
cli
inc
pop
jle
loop
movsb
bound
sbb
shll
sbb
xchg
jg
push
jnp
or
sub
jge
fidivrl
jmp
and
dec
sti
inc
ds
mov
bound
pop
jp
adc
jmp
scas
pop
pusha
adc
sbb
test
push
mov
xor
stc
ret
in
sarl
arpl
sub
cmp
xor
clc
xor
add
mov
jno
inc
divl
cmp
fwait
int3
dec
jns
js
loop
orl
std
mov
aaa
lcall
mov
inc
ljmp
pop
test
fxch
cmpsl
adc
movsb
mov
mov
dec
ret
xchg
jmp
stos
in
inc
loop
imul
mov
int
pop
push
pop
subl
cmp
movsb
mov
fwait
add
xlat
inc
or
paddw
ret
test
cwtl
test
outsb
pusha
insl
or
push
push
popf
call
sahf
jne
xchg
leave
xorb
dec
fimuls
gs
fcmovnu
clc
and
pop
rcll
mov
test
pop
and
lods
clc
lret
adc
ljmp
or
arpl
icebp
stos
jns
xchg
test
cmp
outsl
popa
xor
and
xor
cmp
xchg
mov
jecxz
pop
insb
and
mov
xchg
loope
jle
mov
shrd
int
outsb
mov
mov
cmp
mov
push
mov
xchg
ret
sub
mov
pop
out
adc
es
cmp
adc
jbe
inc
mov
cmp
ret
loop
sahf
pushf
mov
les
mov
data16
cld
sbb
mov
mov
mov
fimuls
imul
mov
push
mov
push
popf
push
nop
ljmp
addr16
rcrb
mov
mov
and
imul
xchg
iret
and
mov
loop
jl
push
inc
aaa
aas
mov
inc
pop
add
xchg
dec
stos
sub
lods
dec
sub
push
mov
gs
insb
dec
mov
mov
imul
aas
mov
mov
ss
cmc
test
adc
jb
test
pop
mov
out
lods
clc
mov
jae
jl
jnp
jo
out
test
sbb
and
jl
cmp
lock
lahf
arpl
icebp
cmp
inc
adc
xlat
lahf
or
out
sub
sbb
in
subb
repnz
dec
and
push
jns
popf
sbb
in
inc
aaa
sub
adc
shr
sti
aaa
mov
xchg
or
gs
push
fnstenv
push
xchg
or
mov
jl
mov
push
lret
mov
jle
sub
dec
xor
pop
addr16
int
pop
push
lcall
add
cmpb
mov
pop
lret
push
cwtl
sar
mov
clc
dec
inc
sub
mov
imul
movsl
pop
orl
in
imul
test
js
adc
sbb
and
add
mov
rorl
movsb
stos
mov
dec
in
push
test
dec
push
imul
cmp
xor
cs
leave
inc
mov
data16
xor
lods
aad
iret
mov
in
sub
and
loope
and
sub
mov
imul
es
dec
pop
lods
loope
cmc
arpl
push
jecxz
imul
inc
jb
push
pop
push
push
inc
mov
push
push
dec
add
xor
xchg
repnz
out
stos
lret
jmp
cmp
mov
lcall
dec
movsl
jno
push
leave
mov
stc
ret
adc
fisttpll
pop
push
or
push
cmc
xchg
jmp
in
repz
and
mov
enter
mov
xor
xchg
mov
cmp
ss
mov
loop
inc
jbe
jb
stc
pop
sti
pop
test
aam
mov
dec
and
xchg
or
push
das
xchg
push
daa
scas
jne
jae
outsl
jge
lods
das
adc
lcall
cmp
jno
mov
mov
jecxz
orb
xor
xchg
mov
call
adc
outsb
insl
das
loopne
clc
cmp
pop
in
inc
sbb
cld
insl
jae
lret
pop
inc
sbb
pop
jnp
jge
and
sbb
js
das
or
jne
incl
inc
sub
or
dec
or
sbb
xlat
bnd
sahf
xor
inc
mov
ljmp
imul
out
pop
push
push
and
adc
or
push
inc
das
sbbl
mov
push
das
hlt
jo
pusha
neg
mov
adc
adc
and
pop
das
inc
inc
orb
dec
push
xor
push
jecxz
das
inc
cmpsl
sub
out
dec
in
mov
xchg
data16
sub
repz
sbb
xchg
add
loopne
inc
scas
mov
push
jecxz
das
adc
push
xor
cmp
pop
mov
mov
fs
mov
fistl
sarl
sub
adc
in
fs
or
stc
jb
into
fstpt
sbb
sbb
and
nop
dec
out
sarl
loope
fwait
int3
dec
mov
cvtps2pd
sti
repnz
hlt
pop
jbe
clc
lahf
arpl
or
nop
test
loop
rolb
mov
rclb
aad
call
mov
mov
test
stc
repnz
add
fsubp
mov
sub
inc
inc
rorb
dec
jmp
insl
rclb
repnz
repnz
ja
add
call
pop
mov
sahf
mov
fisubl
and
test
push
test
xor
movsl
inc
inc
and
call
push
mov
inc
add
arpl
pushf
jle
and
stc
push
mov
jno
add
dec
xor
jnp
jns
push
inc
xchg
hlt
repz
or
test
push
int3
leave
pushf
cmp
xchg
cmp
repnz
lods
or
test
fnstsw
jb
fimuls
xchg
ret
enter
loopne
cmp
lret
aad
mov
icebp
ret
stos
pop
jle
rclb
clc
mov
test
mov
push
cmp
daa
sbb
into
clc
popf
rcl
mov
lock
rcr
jp
rolb
imul
pop
enter
xchg
cmpsl
or
aaa
inc
mov
add
test
add
xor
fidivrl
mov
js
ds
daa
nop
mov
and
lods
jbe
stos
mov
mov
mov
inc
sub
cmp
enter
jns
sub
repz
stos
pxor
fistl
popf
les
add
cs
pop
xchg
je
cmp
sbb
push
mov
mov
dec
jae
lahf
xchg
mov
fwait
adc
shll
cwtl
rorl
iret
leave
dec
dec
sti
mov
aas
sub
jne
addr16
pop
pop
or
cld
icebp
xchg
push
mov
pusha
pop
jge
jbe
inc
es
sbb
subb
test
mov
test
cmc
repnz
popf
jp
fstpl
push
and
arpl
push
fwait
pushf
arpl
cmpsl
imul
push
pop
inc
fldenv
xchg
sti
movsb
jp
test
mov
cmpsb
add
inc
and
lock
xchg
xor
loope
cli
pop
mov
adc
mov
aas
cmp
add
sbb
or
and
pop
flds
ljmp
outsl
out
adc
incb
mov
cmp
jecxz
lret
xchg
mov
inc
mov
ret
dec
mov
js
mov
stos
test
negl
or
mov
js
jmp
pop
hlt
or
into
btc
adcb
sub
mov
jmp
add
xchg
sub
in
xor
xchg
sti
push
cs
cmpsb
or
inc
pusha
lea
les
xor
mov
ja
mov
in
lock
lret
movsb
jns
and
xor
cs
or
sarb
incb
insb
xchg
sti
lods
and
sbbb
mov
ds
loopne
sbb
xchg
outsb
gs
jle
hlt
pusha
mov
xchg
sub
mov
sbb
pop
mov
mov
jno
dec
or
push
je
jbe
scas
in
inc
jl
movsl
ljmp
pop
lcall
loope
insb
pop
std
loope
fcompl
cli
sub
add
or
mov
inc
loope
hlt
aaa
enter
les
jno
in
out
cltd
pop
int
jle
stos
pop
mov
dec
xchg
pop
aam
xorl
pop
gs
pop
pushf
sbb
pop
fdivl
mov
rorl
in
add
add
fsubrs
cmp
ds
out
mov
pop
test
in
lret
repnz
push
out
push
sbb
adcb
and
mov
pop
jo
rcll
xor
mov
adc
push
jmp
movsb
das
mov
lret
push
outsl
repnz
fmulp
mov
idivb
or
popf
in
aad
shl
inc
rcrb
adc
bound
push
xor
shrl
push
and
sub
cs
pmullw
ljmp
pop
mov
add
push
daa
fmull
int3
cli
mov
pusha
call
out
xor
mov
bound
into
sub
push
sbb
mov
sahf
xchg
icebp
imul
sbb
and
push
push
jg
lods
xchg
lret
into
imul
jae
rep
ret
jl
dec
in
nop
jbe
ficompl
or
in
push
test
jne
and
lea
in
dec
int
pop
add
sbb
cmp
cmpsl
mov
xchg
xchg
popa
sub
dec
xchg
jl
cmpsb
lret
xor
scas
dec
mov
pop
xor
shrb
or
dec
mov
cmc
or
hlt
das
mov
test
fadds
or
add
in
xchg
fst
mov
adc
sarl
shlb
add
sbb
pop
outsb
or
xchg
or
push
push
xor
stos
shl
dec
ljmp
call
int3
aaa
or
pop
in
push
stc
cmpsb
sahf
xor
push
push
and
outsb
pop
imul
xchg
sbb
imul
jo
push
dec
xchg
mov
test
aaa
dec
rcll
dec
mov
data16
loope
xchg
pop
enter
mov
xchg
in
and
add
in
push
push
insl
pop
mov
or
sub
inc
fwait
xor
loope
pop
fisttpl
repnz
xor
into
insl
or
adc
sub
int3
int3
cmp
mov
dec
jae
popf
lahf
jb
lea
fsub
mov
pop
xchg
aaa
mov
push
pop
aam
pop
cmp
or
loopne
fcomps
push
lcall
xlat
pusha
xor
loopnew
inc
das
dec
and
push
arpl
cmpsb
sbb
pop
inc
cmp
jmp
jb
call
je
dec
adc
dec
lcall
aaa
ret
mov
aad
aaa
jno,pt
mov
xchg
js
adc
inc
mov
nop
push
mov
test
pop
mov
jl
ds
pop
mov
divb
pop
dec
and
in
jmp
les
ss
jl
lcall
cmc
sbb
mov
clc
fdivr
bound
push
mov
neg
nop
std
daa
adc
lock
jmp
inc
bound
jbe
lea
popa
xchg
in
sbb
sbb
mov
and
push
push
cmp
mov
mov
pop
and
xchg
vcvttpd2dqy
mov
mov
add
fidivrs
cwtl
pop
jl
jne
popf
dec
es
push
add
xchg
pop
shlb
insl
sarl
add
inc
and
loop
mov
enter
inc
mov
and
lods
or
add
loopne
js
sub
add
jbe
imul
imul
pushf
shrb
imul
aaa
out
sti
loope
or
push
jb
cmovge
jp
push
ret
adc
inc
add
sbb
xor
leave
cli
cmp
jp
inc
ss
sub
daa
pop
mov
jae
pop
shl
in
inc
cmp
rcrb
fdiv
call
rolb
stos
push
cmp
lds
adc
xchg
fbld
mov
out
sub
pusha
out
push
pop
jbe
nop
inc
test
insb
jo
pop
loopne
jnp
lret
dec
sahf
mov
mov
pop
and
mov
sbb
and
xchg
popa
push
jae
jp
js
clc
add
add
xor
inc
das
sub
mov
xchg
add
push
outsl
or
repnz
sub
lcall
xor
adc
sarl
arpl
mov
mov
mov
mov
xchg
jge
fmull
nopl
ret
pop
mov
adc
push
add
mov
ss
js
sub
xchg
hlt
or
loope
mov
mov
push
fcmovbe
addr16
outsb
xchg
mov
cmp
jo
xchg
adc
cmp
xor
dec
xorl
lds
out
ret
push
cmp
shl
mov
mov
stos
sahf
mov
dec
cmp
push
call
mov
mov
mov
and
sbb
add
and
mov
aam
add
jno
in
adc
std
xor
push
call
or
sbb
push
mov
push
mov
mov
sbb
lock
cltd
mov
push
aaa
xor
or
cmp
fstpt
dec
int3
xchg
fs
aas
aam
loope
out
stos
addr16
or
mov
in
sub
stc
call
aad
clc
pop
xchg
push
loope
xor
loop
fdivrl
jp
jmp
mov
mov
repnz
leave
call
inc
mov
jmp
mov
or
adc
sub
stc
mov
cli
mov
cmpsl
adc
add
mov
dec
and
scas
jnp
popf
sbb
imul
xor
pop
repnz
adc
clc
mov
pop
pop
mov
enter
ljmp
xchg
pop
jg
push
int3
aam
rclb
adc
out
fsubrl
xchg
mov
insl
push
jne
jecxz
mov
pop
xchg
and
mov
outsl
add
scas
mov
adc
fs
outsl
and
push
jbe
pop
out
ljmp
test
xchg
pop
call
mov
adc
sarl
neg
ljmp
push
mov
out
daa
shrl
imul
jmp
pusha
adcb
push
ja
test
mov
cmp
outsl
jno
xchg
inc
dec
push
sub
add
loopne
aam
aaa
dec
pusha
push
xchg
mov
xchg
dec
jns
sbb
inc
sub
push
and
ljmp
loop
bound
mov
add
movsl
fldcw
jp
cmpsl
add
fsts
adc
ljmp
into
popl
stos
lea
xchg
mov
inc
hlt
lods
inc
pop
mov
sub
jbe
xchg
dec
icebp
je
sbb
xchg
or
mov
mov
and
ja
jnp
addr16
les
sbbb
xchg
pusha
mov
cmp
add
jmp
in
sti
or
roll
out
mov
sub
test
orl
lods
mov
jmp
pop
divb
or
mov
test
adc
jge
pushf
sahf
clc
in
sub
out
data16
and
jb
xor
mov
jbe
imul
arpl
dec
or
mov
ljmp
btr
jecxz
gs
sub
insb
mov
dec
xchg
mulb
sahf
into
xor
aas
dec
mov
add
scas
mov
dec
mov
mov
dec
push
insb
sti
sub
orl
dec
mov
addl
adcb
stc
jno
mov
xchg
lcall
pushf
pop
xchg
cmc
fldl2e
es
in
xor
in
or
xchg
mov
out
push
into
lahf
stos
test
in
lcall
loop
insb
mov
push
sub
push
jmp
incl
push
or
aad
mov
fbld
dec
mov
add
xchg
push
add
clc
push
lcall
or
pop
xor
pop
or
aam
int3
leave
push
inc
mov
and
push
loopne
fbstp
mov
pop
cld
inc
mov
dec
fnsave
daa
ja
into
scas
lret
dec
jp
add
test
mov
and
push
addr16
and
test
imul
or
pop
es
out
ss
mov
rclb
or
add
call
xlat
je
js
mov
sbbl
xor
jbe
insb
lcall
fidivrl
fldenv
cwtl
rcrl
xchg
xchg
push
insl
cs
mov
hlt
shlb
fcoms
shll
sbb
mov
push
dec
movsl
xchg
push
add
mov
xchg
mov
pop
pop
enter
xor
cmp
aam
data16
imul
and
outsl
cmp
mov
jbe
jmp
jno
add
xchg
enter
negl
fbld
ss
xor
in
push
sarb
jmp
clc
inc
gs
testl
andb
int3
cmpsb
je
es
or
cmpsb
mov
sub
xlat
pop
les
stc
fwait
aas
cmc
mov
mov
dec
aam
push
dec
cs
add
pop
loop
insl
gs
inc
clc
and
pop
jns
scas
lcall
mov
outsb
sbb
cmc
test
adcb
dec
pop
jo
subl
pop
dec
fwait
out
and
cmp
mov
iret
mov
hlt
shll
hlt
dec
xchg
adc
enter
lds
push
dec
push
int
sarb
rcr
repz
xchg
mov
enter
je
sbb
cltd
jmp
cmpb
pcmpgtd
rcrb
repz
lods
dec
cwtl
rol
push
aaa
movsb
mov
fcomp
push
sti
nopl
mov
cwtl
dec
lods
pop
mov
dec
jno
jl
push
inc
jp
mov
and
dec
cmp
mov
aam
pop
jp
or
pushf
xchg
inc
repz
stos
jae
out
sbb
add
inc
pmulhw
fdiv
pop
lret
lahf
or
lock
push
shlb
mov
sbb
xor
or
into
aad
jmp
jno
pop
push
push
insb
xchg
jbe
lret
mulb
stos
outsb
pop
pop
mov
fstps
dec
push
shll
push
bound
cwtl
movsl
mov
adc
or
jmp
pop
and
je
mov
jp
jo
add
push
or
inc
mov
jmp
mov
movsb
mov
test
cs
lods
cmp
mov
movsl
fcomip
mov
push
das
jle
push
es
inc
lret
dec
pop
push
les
cld
ljmp
out
push
mov
dec
int3
lretw
loop
mov
mov
xchg
adc
rcr
ret
aad
sub
mov
and
imul
cmc
filds
in
sbb
or
adc
out
adc
mov
scas
sbb
sub
mov
add
outsl
cld
scas
test
inc
mov
and
cli
rcll
lods
pop
jne
xlat
pop
push
testb
call
push
jecxz
sub
in
push
shl
scas
rorb
inc
das
xlat
into
dec
divb
inc
pop
mov
aaa
xchg
call
pop
leave
inc
mov
andb
in
add
sub
sbb
pusha
aas
aaa
pop
pusha
push
ficoms
idivl
and
je
mov
cs
xor
cmpsl
xor
cmp
cmpsb
movsl
sbb
sahf
xorl
pop
fldl
and
jns
aad
out
push
ljmp
into
sub
cli
ror
fdivs
xchg
notl
lahf
inc
hlt
xor
cmp
arpl
dec
push
mov
hlt
aad
imull
pop
popaw
dec
lock
in
fisubrl
negb
mov
inc
push
imul
mov
cmp
das
and
inc
orb
lods
dec
ds
sub
xor
jb
mov
fimull
scas
xor
mov
jecxz
mov
mov
scas
mulb
scas
icebp
pop
dec
shlb
or
bound
fisubs
ds
jp
in
test
xor
add
cltd
mov
mov
dec
xchg
loope
scas
imul
and
repz
push
cmp
inc
dec
jp
in
out
mov
and
pop
mov
roll
xor
nop
je
pop
xor
sub
js
jb
lret
xchg
inc
or
pop
in
jg
add
xor
out
lcall
xchg
ror
add
mov
xchg
cmpsb
daa
cli
movl
fs
dec
jmp
cmpb
inc
push
popa
lods
shl
dec
xchg
cmp
lahf
pop
lods
sub
fildll
shlb
inc
sub
lock
xchg
enter
movsl
push
cmp
adc
loop
cld
push
dec
cmp
mov
pusha
pop
xorl
add
std
ljmp
mov
inc
mov
xor
mov
mov
dec
loope
xchg
inc
fldt
or
and
andb
mov
lret
gs
cmp
cmpsb
gs
push
dec
xchg
sub
fldenv
test
fadd
iret
test
int
mov
lcall
xchg
call
gs
jo
divl
fsts
enter
pop
dec
or
clc
ds
insb
int3
fldt
jge
int
push
pop
dec
das
add
jne
add
imul
jecxz
out
fsub
icebp
jbe
fsubl
jl
add
jo
pop
or
cmp
cmp
mov
inc
push
adc
ffree
push
ret
jnp
mov
pop
shl
or
add
fistpll
cld
popa
push
push
push
lcall
fcmovnb
loop
mov
sub
aaa
push
pop
ss
and
push
mov
jle
lds
xlat
mov
ret
les
fwait
sarb
sub
jne
push
mov
jne
ds
adc
pop
sub
adc
cmp
in
shrb
push
xchg
pop
fwait
sbb
pop
addl
icebp
add
sbb
fcmovbe
or
xchg
push
mov
cmpsb
lea
insb
mov
mov
lods
xchg
push
dec
push
mov
lods
fwait
cld
jno
xlat
inc
add
mov
fdivl
cwtl
gs
shrl
xor
mov
inc
stos
xor
out
mov
or
mov
pop
cwtl
dec
xchg
sahf
sbb
dec
in
xchg
aaa
mov
test
pop
movsb
sbb
jmp
xchg
push
xchg
ds
aaa
mov
bound
xchg
mov
rcrb
jae
es
sbb
pop
cmpsb
mov
popf
push
js
pop
lods
push
pop
add
push
mov
jno
cwtl
jns
and
test
add
stos
xchg
jbe
mov
jle
stos
add
insl
jl
dec
or
and
jmp
jg
je
in
gs
test
mov
inc
cmc
test
mov
pop
mov
cmpsb
ss
outsl
mov
pop
xor
mov
and
shl
test
dec
add
ja
push
xchg
popf
rdpmc
in
test
or
hlt
stos
cmpsl
jno
lret
jmp
sub
fwait
mov
mov
xchg
add
cmp
into
push
or
ror
push
push
inc
jb
xchg
scas
xchg
scas
push
ljmp
cmp
adc
adc
icebp
scas
pop
popa
sub
mov
fcmovnbe
xor
push
sub
jmp
adc
jbe
or
mov
cmc
cmpb
cmp
adc
xchg
pop
fldl
mov
or
xchg
or
shlb
rolb
repz
test
jnp
dec
adc
test
ljmp
mov
repz
ds
outsb
xchg
daa
push
cltd
pop
jns
sbb
sub
lret
andl
xchg
std
sub
push
push
push
repnz
or
fidivrl
in
jns
cmpl
js
push
or
mov
popa
jo
aaa
or
fadd
fwait
xor
out
bound
lcall
ja,pt
out
ljmp
add
sbb
xchg
fwait
ret
je
pop
push
movsb
aad
dec
mov
adc
mov
daa
mov
mov
imul
inc
in
xchg
dec
xchg
mov
inc
xor
popa
push
sbb
notb
jb
add
lock
pushf
outsb
ret
rcrl
fisubs
cli
adc
and
imulb
sub
int
scas
xchg
sbb
adc
mov
jmp
xchg
push
adc
xor
mov
insl
xchg
into
xchg
shrl
lret
xchg
push
jo
movsl
sbb
add
mov
js
aaa
adc
push
sub
jbe
in
pop
cmp
cld
jge
cmp
mov
fwait
or
bnd
mov
iret
int3
dec
addr16
mov
in
xchg
adc
daa
aam
loope
jle
jmp
xchg
cmpsl
sbbb
enter
dec
loop
xchg
pop
and
lea
mov
push
xchg
lods
xchg
adc
xchg
or
inc
or
inc
mov
and
nop
mov
and
sahf
pushl
movsb
add
ss
fsub
xlat
mov
xchg
pop
ret
loop
stc
out
int
dec
and
divl
sub
test
cmpsl
mov
jb
inc
jmp
frstor
mov
sub
inc
ljmp
inc
add
test
lsl
push
daa
jae
xchg
fsubrp
adc
stos
pop
loope
in
pop
jl
add
out
in
add
popa
and
cmp
xchg
cld
test
xchg
lret
iret
inc
push
adc
cmpsl
je
mov
mov
xchg
loop
mov
daa
pop
in
lahf
ret
or
xchg
aas
call
xchg
nop
sbb
jne
jl
dec
shlb
int3
mov
mov
pop
pop
repz
test
aas
xor
pop
arpl
mov
clc
sbb
and
vpmacsswd
sarl
inc
pusha
push
fisttpl
dec
divb
loope
or
mov
dec
jle
dec
adc
lahf
ds
stc
aam
mov
xor
shlb
xchg
in
outsl
daa
sub
push
fs
or
push
sub
loope
clc
xor
push
cltd
adcl
jns
sub
sarb
call
movl
lahf
mov
dec
ds
in
xor
mov
fnstcw
into
lcall
jge
jle
xor
lods
repnz
es
into
test
add
loope
push
pusha
fisubrs
cmpl
cltd
and
call
xor
loopne
pusha
dec
test
fdivs
jmp
sbb
mov
add
insl
pop
jno
rcll
jl
inc
sub
inc
mov
dec
jne
cs
ja
shrb
ret
dec
cs
scas
sub
in
inc
pop
xchg
lods
shrb
scas
pushf
sub
aas
or
jno
mov
dec
fnstenv
sbb
leave
cmpsl
pop
inc
sti
ret
mov
pop
sbb
sbb
jb
cwtl
pop
jge
pop
scas
sbbb
out
or
push
mov
dec
jb
aaa
dec
fs
mov
inc
lods
mov
incl
adc
adc
cld
inc
inc
pusha
mov
jno
xchg
push
fwait
mov
int3
jge
sub
adc
fstl
push
cmp
std
aad
or
ret
push
add
jp
xor
in
add
cwtl
and
or
xor
mov
in
mov
pop
rcll
clc
push
cmc
cmpsl
add
lret
mov
adc
or
int3
or
out
jb
mov
jmp
cmpsb
sysret
out
jns
add
mov
xchg
stc
dec
jne
push
jno
fcompl
je
xor
out
mov
clc
fcoml
sahf
adcb
xchg
mov
mov
std
push
sub
dec
out
lahf
pop
jmp
push
pop
adc
in
pop
mov
mov
cld
ljmp
cmpsl
aam
inc
jg
test
or
mov
pop
mov
ja
xor
or
and
adc
push
add
push
jl
adc
push
sub
das
aam
out
xor
mov
ljmp
cmp
jo
and
inc
cmc
cmpsl
push
push
jge
std
enter
lea
xchg
out
mov
adc
jmp
imul
pop
add
xorl
imul
lea
pop
xchg
dec
jp
adc
enter
inc
jo,pt
mov
insb
jl
shll
fisttpll
xorb
lcall
fbstp
fisubrl
add
mov
xchg
inc
xor
xchg
push
push
fidivl
inc
lea
pop
insb
dec
arpl
shrb
sbb
mov
pop
rcrb
jno
in
sbb
fldt
imul
xchg
xor
jb
cmp
rolb
cmp
lret
fs
add
fwait
mov
sti
adc
jecxz
and
xor
mov
cmpsl
rcrl
inc
cmp
lds
jl
sbb
fwait
cmpb
pop
int3
mov
lret
or
mov
gs
js
les
adc
test
mov
cmp
pop
loop
mov
pop
push
test
adc
pop
repz
jge
fs
test
leave
stc
cmc
push
cmp
sbb
push
addl
into
ljmp
stc
sbb
data16
lret
sbb
dec
mov
mov
lret
xchg
inc
mov
fwait
ja
mov
or
stos
stos
fistps
std
dec
xchg
adc
data16
sbbb
push
es
adc
ljmp
dec
lea
pop
scas
and
hlt
xor
inc
shrb
cmp
mov
movsl
add
mov
pop
out
or
fmull
fwait
and
sti
in
dec
pop
sti
movsb
push
int
mov
repz
push
fdivl
mov
lods
cmp
lds
push
dec
xchg
xchg
cwtl
imul
pop
cmp
push
xor
ficompl
roll
loope
icebp
mov
and
fbstp
aaa
arpl
jmp
lret
jae
call
push
hlt
xor
or
in
dec
push
xlat
inc
cmpsl
xchg
pop
mov
lea
in
lret
jbe
scas
in
adc
mov
xor
popa
push
fcmovnbe
xor
xchg
push
xor
insb
mov
into
mov
sub
inc
mov
mov
test
push
or
dec
stos
push
ja,pn
cltd
scas
aad
leave
dec
pop
mov
pop
dec
inc
lods
inc
jb
lds
xchg
sbb
sub
lahf
mov
sub
ja
neg
jle
stos
mov
in
mov
int
pop
cmp
test
mov
pop
jle
or
data16
fmull
mov
xor
sahf
inc
out
dec
pop
shll
fisttps
lea
sub
and
mov
or
popf
adc
daa
fdivr
xchg
cli
xor
dec
jle
push
xlat
rol
adc
pop
sbb
out
movsb
test
sub
xchg
movsb
movsl
in
add
frstor
in
imul
movsb
sbb
lds
out
stos
mov
jne
mov
movsl
cwtl
fbld
mov
cld
pop
pop
js
pop
or
push
ret
sub
add
dec
xchg
adc
insl
in
cmp
in
xchg
int
inc
cmpsl
adc
in
xchg
daa
sbb
jnp
xor
mov
ds
testl
ljmp
pop
and
add
int
push
fildl
cmp
pop
imul
sbbb
pop
sbb
dec
push
out
xor
or
xorb
mov
cltd
shll
xchg
bound
loope
mov
jle
stos
mov
or
addr16
adc
add
aaa
ret
cmpsl
inc
mov
push
push
loope
fsubrp
lret
pop
jne
push
repnz
push
dec
mov
cld
rorb
push
lret
inc
mov
pushf
loopne
cli
or
pop
aad
xlat
bound
popa
dec
mov
mov
sub
pop
mov
dec
pop
cmp
repz
outsl
stc
lods
stos
mov
push
dec
dec
dec
pop
out
adc
idivl
addb
push
xchg
push
lods
out
mov
test
es
lds
lahf
shll
imul
fisubrl
ljmp
adc
call
mov
add
inc
jl
sub
mov
data16
mov
xor
pop
stc
sub
jmp
mov
jns
add
jge
pop
lret
inc
sbb
sub
out
pop
iret
xor
cs
and
push
fildl
les
xchg
mov
icebp
fidivs
or
jmp
add
mov
push
mov
out
fwait
xorl
pop
or
insb
push
xor
fisubl
cmp
lret
inc
mov
push
and
or
push
nop
daa
mov
jle
push
rclb
pushf
loopne
shll
rolb
movb
pop
in
xor
or
test
mov
mov
pop
cmp
mov
lods
paddb
adc
and
ficoms
jnp
mov
clc
das
loope
cwtl
jbe
cmp
inc
jno,pt
add
mov
mov
dec
dec
inc
popf
pop
dec
aad
jmp
mov
shll
sub
adc
jp
gs
imul
aas
cmp
data16
cmpsl
adc
loopne
cltd
lahf
test
add
js
push
jle
mov
and
roll
inc
xor
dec
cwtl
fmull
notl
or
add
sbb
imul
sub
js
or
cltd
pop
hlt
cmp
push
inc
pop
rcrb
pop
xorl
fisttpll
xlat
dec
in
test
jg
inc
es
adc
cwtl
orb
pop
arpl
in
movl
popa
cmp
sub
adc
addr16
aaa
ds
fildl
push
jne
orl
jecxz
out
adc
pusha
or
sbb
bound
movsb
push
es
dec
or
repnz
pop
data16
movsb
dec
cmpsb
jae
imul
or
push
inc
jmp
data16
xchg
scas
daa
push
xchg
adc
rol
sub
notl
data16
imul
outsb
leave
dec
jno
enter
jbe
add
dec
scas
inc
or
jae
aad
js
pushaw
arpl
mov
and
mov
adc
pusha
push
mov
xor
ss
dec
clc
sbb
mov
jge
mov
jb
gs
inc
shl
push
into
idivl
jge
push
inc
jb
mov
scas
dec
out
xorb
loopne
scas
lods
xchg
push
jne
or
or
test
cmp
push
jbe
pop
ret
push
or
out
outsb
jp
stos
movsl
xor
jb
nop
test
aas
mov
mov
mov
fidivs
sub
push
mov
push
lds
cmp
ficoml
cwtl
and
cli
cmpsl
js
sbb
adc
mov
mov
les
out
loopne
and
jbe
pop
bound
in
mov
out
test
je
push
loopne
mov
cmp
pusha
xor
lods
and
bound
mov
ret
push
cmpsb
aam
inc
push
dec
jmp
popf
aaa
pop
pop
fisttpll
movsb
stc
push
movl
or
jge
dec
sub
clc
push
imul
mov
xchg
xor
mull
xchg
pop
cmp
xor
stos
sub
add
scas
mov
addr16
data16
sub
jmp
outsl
mov
add
add
sti
out
loop
shlb
in
xchg
andl
sub
mov
outsb
stos
idivl
push
lods
and
sbb
cwtl
cmove
es
sub
inc
mov
mov
push
cmp
fists
or
arpl
add
sub
lods
imulb
pop
cmpb
push
das
and
shrb
scas
cld
and
jmp
in
xlat
or
fcomps
jb
ja
test
mov
jno
dec
test
sub
cltd
cwtl
js
push
ret
out
pop
out
sub
movsl
add
mov
fcoms
in
sub
mov
or
mov
ret
in
addr16
push
int
inc
inc
popf
push
sub
cmp
orb
inc
addr16
cmp
das
mov
nop
mov
fldcw
push
mov
or
cmp
movsb
inc
push
or
mov
or
push
sub
and
inc
xchg
mov
ror
out
push
test
push
inc
fnstcw
shlb
popa
subl
jle
push
sub
sbb
inc
out
xchg
vpaddusb
jbe
mov
das
and
mov
push
jg
pop
mov
pop
ret
sbb
out
inc
push
dec
sbb
cltd
mull
and
out
xor
push
fs
push
pop
dec
inc
dec
adc
mov
mov
mov
sbb
mov
xchg
xor
rolb
int3
mov
mov
mov
add
adc
sbb
cmpsl
in
cmpsl
fst
jne
loopne
lods
ficoms
imul
mov
movsb
mov
cmp
ss
shrb
add
addr16
push
ljmp
inc
stos
pop
sahf
cmc
or
xchg
filds
lds
mov
and
ds
negb
xchg
ds
mov
mov
xchg
push
inc
ret
jle
xor
sub
ja
fsubl
outsl
jns
mov
cmpb
pop
out
fsub
sub
mov
push
sub
mov
mov
xor
add
jge
adc
fdivrp
mov
out
sub
and
jl
inc
inc
inc
mov
xor
adc
adc
rcrl
xchg
int3
xor
add
rorl
cmp
inc
orl
daa
cld
mov
mov
cmp
sub
loop
insl
push
test
jb
mov
iret
mov
in
cmp
mov
sbb
xlat
mov
sti
pusha
mov
inc
ss
jecxz
adc
sub
xor
int3
mov
loope
lods
sahf
fadd
xor
xlat
xor
out
insb
push
push
mov
mov
add
and
jmp
cmp
shrl
xor
jo
fwait
xchg
xchg
mov
mov
mov
pop
int3
loop
fbstp
lret
rorl
out
mov
cmp
pop
ret
jnp
push
xor
cmpsl
leave
adc
jge
sahf
xchg
lret
jne
mov
movsb
in
and
movsb
push
inc
out
jo
xchg
mov
inc
mov
inc
fldl
mov
int
sub
popa
add
or
lahf
test
scas
pushf
inc
or
add
flds
mov
and
push
xchg
out
inc
xor
loopne
test
inc
push
lahf
fcompl
rorl
sbbl
int3
lods
mov
loope
xchg
js
test
jno
jp
pop
clc
cmp
push
leave
jb
cmp
xor
into
popf
loopne
sahf
cmpsb
pop
in
lahf
mov
lock
je
add
sbb
lods
and
jmp
mov
je
sub
dec
test
imulb
sbb
mov
lods
fisttps
stos
cmp
je
rcrb
mov
or
icebp
adc
and
lods
sub
mov
test
loop
jne
pop
cli
inc
sarb
fucomip
js
cmp
aas
pushf
and
jo
xor
push
inc
movsb
out
nop
cmpsl
jo
and
sub
lock
add
testl
fcmovnb
jno
push
adc
mov
je
movsl
sahf
push
xor
mov
imul
dec
jecxz
cmc
stc
sti
xchg
and
dec
insb
ror
hlt
pop
lods
in
xchg
sub
jmp
ljmp
cmp
neg
jns
pusha
rorl
pop
cmp
dec
femms
jmp
pushl
lret
or
sub
cmp
xor
ficomps
and
pop
ds
jg
out
into
sbb
and
jae
pop
and
fidivs
mov
jg
or
arpl
push
out
xor
aaa
fists
mov
inc
adc
and
mull
js
adc
pusha
addl
sub
cld
out
sbb
inc
ja
shrb
or
mov
fistl
mov
sbb
xchg
pop
xchg
jnp
xor
mov
aad
jno
loopne,pt
outsb
pop
jne
mov
pop
cs
stc
rolb
pusha
mov
push
insl
addr16
adc
pop
cld
rorl
cld
dec
out
rcr
fs
orl
adc
out
pusha
mov
mov
lahf
jno
push
adc
arpl
xchg
addr16
enter
les
gs
mov
popa
loope
es
mov
aad
push
ja
aaa
aad
sub
das
jmp
dec
pop
andl
push
mov
ljmp
gs
xchg
testl
into
add
insb
imul
cmp
or
lret
insl
and
inc
xchg
insl
stc
xor
pop
push
repz
mov
addr16
std
pop
in
mov
cmpsb
je
jns
scas
hlt
fdivs
jge
cld
test
push
push
lods
leave
xchg
push
gs
pop
je
xor
mov
inc
imul
jg
mov
scas
sub
cltd
cmp
je
leave
xchg
add
adc
mov
mov
push
jecxz
pop
xor
xor
inc
movsb
xchg
pop
test
sub
cli
cmp
xchg
adc
cmp
add
inc
stos
jmp
cmc
mov
adc
stos
sbb
add
cmc
scas
and
adc
cli
and
jns
pop
imul
inc
inc
lret
adc
inc
or
je
test
imul
sti
mov
sub
xchg
cmpb
les
dec
stos
shll
mov
out
xor
lock
mov
cmp
and
negb
mov
cltd
jne
je
sub
xchg
mov
outsl
pop
and
aaa
xor
sub
andb
cmp
jne
out
shrb
js
xchg
push
in
sub
jnp
push
jl
ret
sbbb
mov
ret
leave
mov
jmp
or
aad
ds
adc
xlat
int
lcall
lret
test
test
adcb
popf
mov
test
ret
lods
and
xor
or
adc
mov
xor
shlb
scas
inc
scas
xchg
addl
cmp
mov
ror
mov
int
mov
shl
movsb
xor
adc
sbb
jne
out
dec
nop
pop
and
add
sbb
jmp
loop
sbb
fwait
shlb
or
in
push
out
ror
jmp
stos
mov
xlat
or
pop
xor
push
xor
add
lods
hlt
sub
xchg
push
arpl
sub
shrb
mov
mov
jp
das
das
imul
jne
stc
sbb
enter
and
xorl
jl
and
cmp
into
adc
xlat
insl
pushf
ss
outsb
or
out
fimull
dec
and
jmp
add
push
sub
icebp
cltd
cmp
mov
loop
sbb
xchg
sbb
jb
mov
aas
arpl
mov
fs
dec
jecxz
fistl
in
sub
test
hlt
ficoms
mov
int
cmp
sbb
push
push
outsl
rclb
loopne
or
or
xchg
stos
xchg
loope
lret
and
out
fwait
pusha
cld
in
adc
pushf
into
sub
stos
mov
jp
and
pop
mov
and
adc
lods
insb
dec
pop
iret
outsl
inc
lods
sbb
jle
outsb
jle
hlt
xchg
sbb
or
xchg
cwtl
in
out
bnd
dec
imul
aaa
sub
cmp
push
out
ss
push
aad
adc
xor
adc
cli
pop
pop
jne
jbe
cli
cwtl
pop
or
aas
shrb
ljmp
or
cld
cmp
lret
insl
aaa
fnstcw
inc
nop
cs
xchg
cmp
and
push
mov
xor
imul
pop
stos
movsl
jg
add
leave
push
loop
inc
popf
and
inc
push
shll
fcmovb
rol
idivl
pop
xorl
xor
and
xchg
adc
data16
mov
mov
setnp
pop
out
into
sub
test
std
adc
mov
movsl
and
mov
int3
xchg
rorb
in
xchg
insl
into
xor
add
rcll
xor
xor
rclb
mov
xor
inc
popf
pop
mov
fnsave
jbe
sub
dec
inc
cmp
mov
int
jl
dec
add
xlat
mov
insl
and
addb
cmp
fs
rorl
mov
xchg
fcoml
add
in
out
aaa
call
xor
cli
jae
dec
jg
or
jle
xchg
test
xlat
push
xchg
mov
add
pop
push
dec
mov
fisttpll
dec
testb
jo
inc
repnz
and
test
mov
popa
nop
sub
leave
ficompl
xor
push
cmc
not
scas
xchg
adc
xor
cmp
nop
popa
mov
adc
adc
xchg
ror
mov
add
jp
pop
sahf
int
xchg
bound
stos
in
scas
stos
loope
out
ss
cwtl
test
jne
daa
inc
sbb
out
adc
xor
cld
sub
mov
aad
push
jae
popf
pusha
enter
xchg
scas
pop
mov
sub
xor
sub
add
ss
xchg
pop
add
rcrl
cmp
push
xchg
cmpsb
xor
cwtl
cmp
push
shll
iret
xor
cmp
ds
cli
outsb
cmpl
mov
sub
pop
inc
in
test
mov
push
outsb
andb
out
out
mov
fdivl
cld
pushf
cmp
add
jnp
in
sbb
lea
pusha
daa
add
jp
ss
or
push
call
inc
std
icebp
xorl
rorb
jo
stos
inc
xor
cmpsl
stc
out
popf
and
mov
divps
push
xchg
mov
ror
mov
jno
lret
mov
out
es
mov
cmpsl
jmp
mov
test
lret
xor
push
orl
aad
xchg
mov
sti
rolb
sti
aam
dec
jb
hlt
cld
aas
rcr
out
cmp
sub
insl
mov
sub
mov
lret
adc
jne
ljmp
sbb
es
and
arpl
add
aam
mov
cmp
fs
rcrl
inc
clc
mov
in
jbe
sbb
cmp
mov
sbb
add
xor
pop
sbb
xchg
mov
and
out
pop
xchg
and
xor
xchg
test
movb
repnz
insl
insl
nop
repz
mov
jno
ffree
sub
adc
pop
inc
inc
mov
out
dec
iret
aas
jp
js
movsl
repnz
adc
js
pop
lods
scas
pop
xchg
pop
pop
mov
xchg
in
or
ror
cmpsl
cmp
push
mov
cmc
repz
sbb
mov
pop
enter
sbb
adc
push
loopne
test
push
inc
popa
add
jbe
adc
or
inc
scas
push
arpl
pop
and
lret
call
jg
jne
jne
jno
std
or
mov
jne
std
and
outsb
rcr
mov
inc
pop
mov
fs
xchg
xchg
dec
sahf
sbb
push
gs
in
test
out
fs
std
int3
jns
pop
ss
lret
cmp
arpl
mov
aad
jle
inc
or
dec
sub
mov
or
cli
data16
les
dec
cli
sub
pop
sbb
mov
mov
inc
dec
xchg
cli
jo
jno
mov
inc
cld
add
cmp
sbb
cmp
std
mov
lods
dec
pop
dec
mov
sub
ja
push
lds
adc
icebp
dec
outsb
lcall
pop
push
data16
sahf
imul
add
jecxz
xchg
jb
lods
cmpsl
or
mov
nop
sbb
test
aaa
lahf
pop
cmpsl
sarl
sbb
and
dec
rol
adc
fs
cmp
out
pop
mov
mov
loope
lods
add
push
push
js
jbe
jns
fmuls
jle
xchg
outsl
fdivl
adc
loop
adc
into
icebp
adc
mov
cs
dec
shll
and
sub
dec
and
jns
inc
adc
sahf
mov
iret
jns
adc
pushf
pop
cs
dec
mov
push
ds
pop
adc
push
add
sahf
cmp
mov
pop
or
bound
lods
cmp
jne
mov
push
push
sub
push
lret
dec
out
cmp
aad
xor
mov
outsl
pop
jge
out
pusha
mov
jns
jmp
jns
scas
jmp
mov
movsl
push
lcall
int
loope
adc
sub
rorb
push
ds
ljmp
inc
sarb
ljmp
dec
and
insl
cmpsl
scas
cmp
mov
pand
jb
pop
stos
rcll
js
dec
in
out
cwtl
cs
cmp
inc
loop
and
pushf
jne
sub
pop
adc
mov
out
jp
daa
jbe
arpl
xor
adc
push
pop
clc
pop
or
lret
js
jns
mov
mov
icebp
inc
adc
ret
adc
mov
repnz
cmp
fs
cltd
add
adc
dec
xor
int3
dec
mov
bound
rcll
ret
adc
xchg
pushf
xchg
iret
xor
inc
inc
mov
out
adc
inc
into
testl
in
popa
test
mov
pop
je
inc
dec
aad
jns
inc
mov
sahf
test
push
stos
dec
xor
testb
fsubs
lahf
mov
addr16
inc
fimull
test
nop
cwtl
je
arpl
pop
cwtl
adc
xchg
mov
jl
or
xchg
xchg
xchg
push
dec
and
xor
push
mov
adc
cmpsl
sub
mov
data16
je
inc
imul
dec
sub
jo
subb
lret
aaa
mov
cmp
rcll
add
std
test
fcmovnbe
rcll
dec
in
popa
jb
or
sbb
pop
xchg
pop
or
test
dec
cld
push
lret
fisttpll
notb
xlat
pop
test
mov
scas
or
xchg
cmp
sbb
mov
pop
dec
mov
int3
sbb
cmp
push
add
mov
popa
insb
out
imul
rsm
mov
cmp
cmp
jne
lock
xchg
xchg
dec
stc
or
into
mov
sub
mov
pop
test
or
int3
fidivrs
in
cltd
fmulp
les
sub
addr16
pop
push
xor
sti
insb
mov
aad
push
xor
out
mov
divb
loopne
jecxz
dec
xor
jmp
outsb
cmpsl
rorl
adc
adcl
testb
inc
je
loop
mov
fists
fwait
stos
loop
mov
add
je
sbb
xor
add
insb
adc
push
clc
into
lds
jbe
xchg
shrl
adc
push
cld
lret
add
sub
mov
sahf
cmpsb
cmp
mov
lret
ljmp
sbb
es
insl
mov
sbb
fldl
adc
sbb
fmull
pushl
scas
mov
repz
or
mov
mov
push
aaa
fidivl
loopne
enter
jp
daa
les
sub
adc
jmp
dec
sub
push
popf
pop
jb
jne
lcall
jl
xchg
xor
dec
jne
mov
add
mov
arpl
dec
out
movsb
add
mov
lock
lds
gs
andb
stos
inc
pop
and
bnd
outsb
push
xchg
cmp
lods
xchg
or
dec
fnstsw
jp
and
xor
insl
push
jno
loopne
push
gs
mov
or
rcl
dec
push
subl
enter
hlt
lods
jns
push
imull
loop
push
lods
sbb
mov
xor
das
fdiv
fidivrl
enter
sub
xor
je
inc
mov
and
in
mov
xchg
movsb
aaa
jbe
dec
pushf
add
cmp
xchg
ret
mov
push
in
rcl
ljmp
div
xchg
flds
jns
inc
xlat
inc
and
cld
xchg
jne
in
addr16
push
gs
out
dec
jns
pushf
mov
add
mov
sbb
call
sbb
push
dec
iret
mov
pop
and
mov
ja
movsl
cmp
call
iret
mov
cmp
pop
jne
mov
push
and
or
dec
repz
lret
das
gs
pop
mov
or
rcl
out
push
filds
add
int
fwait
cli
dec
lcall
push
mov
sbb
adc
ds
ljmp
push
out
and
loop
hlt
push
jo
je
dec
mov
rorb
inc
out
icebp
cmc
push
bound
out
xor
push
add
inc
inc
fnsave
imul
xorb
nop
loop
inc
cwtl
xchg
add
sub
dec
adc
pop
mov
or
fnsave
testb
out
clc
push
xor
fbstp
mov
xor
adc
cmp
xchg
fidivrs
pop
fcomp
inc
mov
lea
lods
orb
jg
daa
pop
test
movsb
fnstsw
add
sahf
movsl
cmp
mov
pop
shlb
sbb
cmp
sbb
push
xchg
repz
in
js
xor
inc
and
pop
mov
lods
sub
loopne
mov
jb
rcl
hlt
mulb
mov
cmp
pop
sub
sbb
mov
cli
mov
cmp
pop
call
mov
xchg
loop
iret
nop
mov
es
leave
mov
pop
sub
mov
rcll
daa
mov
fs
and
notl
xlat
mov
ret
pushf
jb
add
stos
mov
mov
repz
in
dec
addl
push
push
shld
cmp
daa
mull
cmp
mov
mov
sub
pop
call
call
cmp
pop
mov
cmp
push
sub
cmp
fwait
int3
pop
xor
cmp
int3
jge
xchg
push
sbb
jno
dec
xor
mov
cltd
mov
dec
mov
mov
xchg
js
pusha
movsl
dec
jno
and
test
sbb
add
or
add
sub
adc
inc
push
mov
push
mov
out
pop
aas
sarb
cmp
stos
jmp
jae
ljmp
stos
cli
lahf
mov
sbb
pusha
mov
and
stc
push
nop
gs
lods
insl
inc
subl
cmp
js
out
xlat
lahf
mov
dec
mov
push
imul
push
mov
push
orb
dec
mov
dec
fucomip
dec
inc
push
movsl
cltd
int3
movsb
sub
pop
cmp
rorb
pop
pushf
lods
ret
lret
push
ds
out
ljmp
xchg
xchg
out
mov
and
inc
dec
jne,pt
rol
scas
movsl
stc
pop
jecxz
popf
scas
mov
inc
xchg
es
mov
dec
outsl
cmp
mov
lret
outsl
cltd
test
dec
pushf
hlt
inc
scas
fisttpll
jbe
xchg
cmp
loope
int3
jp
cmp
jg
test
xlat
cmp
mov
iret
inc
into
cmp
pop
addr16
popa
in
pop
mov
cwtl
xchg
pop
fs
push
int
std
adc
xlat
jae
shrl
jge
in
orl
inc
mov
sub
sbb
adc
int3
add
loope
int3
je
xlat
push
sbb
push
loop
xchg
push
scas
jb
es
push
leave
fs
cmpsl
sbb
imul
mov
and
pusha
adc
fists
lcall
out
cmp
ret
cmp
cmp
in
ficoms
sub
xchg
test
and
test
movl
shlb
aad
xor
lds
xor
and
lods
ficoms
nop
aaa
mov
nop
lcall
or
int
roll
jg
xor
subl
or
sarl
cmp
enter
cltd
lret
add
scas
mov
stos
jp
inc
pop
imull
aad
sahf
std
dec
jb
bound
mov
sbb
mov
in
pop
les
aam
repnz
sub
dec
test
push
pop
int
cmpsb
aam
lea
out
outsl
outsl
push
dec
fdivl
mov
je
pop
push
and
mov
repnz
insl
mov
lea
into
jecxz
aaa
rorb
xchg
jmp
inc
sbb
inc
or
mov
pusha
mov
mov
ljmp
mov
lds
clc
aad
sti
andl
std
sub
xor
icebp
jns
popa
ret
mov
mov
push
cwtl
jle
push
popf
push
xchg
icebp
sti
popa
and
dec
das
or
ljmp
sub
fld
inc
mov
dec
adc
add
arpl
adc
push
push
pusha
pop
mov
cmpsb
xchg
mov
push
sub
repz
mov
imul
icebp
adc
dec
adc
lret
fdivl
sub
imulb
rcrb
mov
pop
xorb
jo
mov
mov
inc
out
aam
mov
lret
cmp
fwait
lret
or
hlt
arpl
mov
bnd
fldenv
sbb
or
jne
xchg
add
xchg
mov
dec
out
test
fwait
lret
push
xor
xor
pop
addl
dec
or
and
xchg
ret
pop
scas
xchg
lods
mov
pop
dec
es
mov
xor
mov
arpl
or
nop
fs
shr
std
decl
cmp
jb
movl
jmp
mov
inc
mov
sbb
loop
es
imul
outsl
daa
xchg
sbb
lods
inc
mov
xchg
rclb
popa
movsb
les
std
push
leave
dec
xor
xor
sbb
arpl
stos
sbb
inc
leave
inc
sbb
push
cld
xchg
dec
bound
jbe
sbb
cmp
pop
daa
xor
jp
inc
test
shlb
mov
jns
jbe
int3
pminub
xchg
fcoml
jb
inc
cmp
sbb
fisttpl
cmp
or
lods
sub
jp
cmp
and
push
jge
xlat
jl
inc
loop
cmp
pop
imul
cwtl
xor
outsl
add
xor
mov
xor
ja
push
jns
ret
mov
add
adc
gs
ljmp
or
pop
pop
out
jecxz
push
xchg
and
out
mov
dec
in
xor
inc
aaa
cmp
aam
mov
mov
mov
bts
push
push
imul
dec
popf
insb
mov
stc
mov
xor
xchg
lds
xor
test
xor
lds
cmpb
xchg
jb
loop
iret
xor
push
stos
out
test
sti
rcll
inc
and
sbb
mov
pop
xor
sbb
push
bsr
fdivs
leave
pop
iret
std
jbe
mov
popa
adc
pushf
mov
cwtl
sub
sbb
inc
push
sbb
push
pop
push
cmp
ss
add
fnstsw
ret
xchg
das
and
decl
cli
nop
sub
xchg
pushl
adc
fwait
inc
lock
sbb
sbb
add
push
cmpsb
icebp
sbb
aad
fs
fiadds
push
push
dec
adc
sbb
aam
imul
repnz
jno
jae
jg
dec
pusha
lret
jge
in
sbb
sub
sti
shl
push
sti
xor
testb
cmp
mov
sti
movsb
out
fiaddl
ffree
movsl
add
push
aam
dec
mov
rorb
sbb
mov
xlat
lods
adc
arpl
mov
loop
pop
jg
scas
pushf
pop
mov
push
out
inc
scas
ret
jno
cmp
gs
inc
cmpsl
sub
inc
mov
xchg
cmp
sbb
xor
cmp
pusha
cs
lods
push
lcall
xchg
dec
ds
push
iret
addr16
dec
pop
lods
dec
adc
cwtl
pop
testb
sub
fxtract
mov
cmpsb
dec
cmp
aaa
mov
movaps
ds
cmp
cmp
pop
jge
int3
xchg
test
loop
or
dec
push
mov
js
cltd
sarb
shlb
and
push
pop
hlt
xor
cmp
ret
filds
jae
lock
jae
xchg
dec
ljmp
push
jae
mov
stos
ljmp
rolb
adc
lock
xchg
inc
adc
scas
aad
leave
push
pop
or
jns
jge
jo
imul
cmc
arpl
pop
insl
jns
inc
clc
xor
rcll
outsb
hlt
aam
jg
int
sbb
pop
mov
xor
js
dec
rolb
jbe
or
clc
push
mov
fstp
ljmp
pop
inc
mov
jns
sti
jle
or
rcll
loop
pop
add
daa
xchg
xchg
fldt
mov
lea
bswap
scas
outsl
test
ja
or
orl
cltd
xchg
ja
int
pop
add
hlt
lods
test
jle
push
cmp
mov
hlt
fisubrs
push
out
push
sbb
loope
mov
push
xchg
gs
push
dec
mov
or
outsl
test
test
scas
rclb
aad
je
mov
mov
leave
push
fidivrl
sbb
dec
dec
ds
push
xchg
and
push
pusha
jno
insl
mov
jno
xor
test
xor
adc
rorb
nop
adc
xor
adc
aas
and
dec
and
mov
xor
arpl
dec
addr16
sub
mov
int3
je
rcr
push
mov
add
adc
stos
xchg
test
lret
jmp
mov
out
shrb
jns
jns
and
cmc
lcall
stos
cmp
into
sub
test
adc
and
inc
std
test
cmpsb
add
push
cld
push
mov
or
adc
sti
pop
cmc
scas
jne
sar
aaa
test
sarb
sbb
sbb
adc
jp
dec
sub
popf
idivl
push
push
jge
iret
inc
push
pop
inc
scas
fincstp
icebp
loope
les
jbe
out
inc
dec
jns
push
cli
shll
push
loop
push
or
adc
sbb
xchg
mov
mov
add
les
scas
jae
jb
mov
sarb
xchg
outsl
ret
sbbl
cwtl
jns
add
pop
js
scas
or
cld
mov
and
es
test
fcompl
js
andb
ljmp
pop
out
lock
pusha
test
lods
push
cmp
aad
imul
sbb
cmp
inc
push
das
aad
lret
dec
jbe
imul
adc
imul
jbe
orl
dec
lcall
lahf
inc
and
sbb
mov
xlat
inc
in
cwtl
adc
cs
dec
ss
int3
jg
xchg
mov
lods
lret
pushf
or
outsb
dec
jns
pop
lret
xor
mov
adc
and
xchg
ds
sub
mov
loope
dec
adc
inc
cld
push
mov
insl
lea
dec
push
fidivrl
test
sbb
shlb
push
sub
out
in
ss
cs
test
pushf
dec
out
sbb
mulb
cmp
aam
inc
dec
sbbl
or
sahf
jp
pop
push
xor
push
ljmp
sarl
xor
add
xor
in
push
xor
push
xchg
jle
cltd
jecxz
notl
fdivrs
cltd
adc
add
inc
ret
mov
pop
imul
xchg
jmp
into
loope
inc
jne
dec
test
push
sbb
aad
arpl
bnd
pop
std
jae
das
sbb
arpl
mov
andl
add
loope
ljmp
xchg
daa
and
mov
or
mov
push
inc
adc
rolb
mov
rclb
sbb
int
xor
loopne
lcall
cmpsb
scas
xlat
lock
mov
adc
data16
pop
packssdw
mov
es
xchg
lock
jmp
cmp
dec
inc
mov
push
cmp
jmp
aam
push
pop
add
adc
in
xor
cld
inc
push
jno
inc
mov
sub
ss
inc
lods
cli
cmpsb
lret
cmpb
cld
adc
hlt
pop
dec
into
sarb
push
and
daa
cmp
pop
sub
out
sbb
xor
and
lds
clc
push
pop
lcall
mov
xchg
sub
sbb
shl
sbbb
dec
sub
sti
lret
jle
dec
rorb
inc
subb
mov
lods
mov
nop
sbb
pushf
add
sbbb
jge
mov
je
cs
shl
scas
or
stc
aaa
popf
mov
mov
in
popa
xchg
mov
in
nop
das
and
das
mov
dec
gs
push
out
clc
dec
add
bound
add
test
fisubrs
or
cmp
push
fcmovu
or
mov
iret
shll
pop
gs
mov
and
sar
push
sub
mov
mov
lahf
cmp
lock
pop
in
jno
stos
push
repz
std
mov
scas
push
mov
mov
mov
out
jne
mov
add
pop
dec
xchg
outsl
push
cmpsl
dec
iret
dec
int
xchg
testb
mov
push
mov
leave
and
xor
and
inc
call
dec
sub
adc
scas
inc
test
leave
push
add
cli
test
xchg
jnp
xor
rcrb
ds
testb
mov
movsl
xorb
xor
inc
xchg
mov
rorb
mov
or
adc
and
ljmp
push
outsl
push
movsl
and
lcall
cmc
mov
mov
addr16
insl
lods
push
test
test
add
rol
inc
out
pop
aas
mov
mov
dec
jmp
xchg
push
sbb
inc
out
cld
mov
das
or
cmp
push
xchg
push
mov
or
shl
cmp
dec
push
adc
adc
cmp
adc
or
in
jne
mov
jbe
imul
gs
ret
pop
mov
call
cld
xor
adc
dec
movsl
pop
push
aam
jnp
mov
cs
push
and
clc
push
scas
pop
adc
ret
adc
fisubrs
pop
lock
shll
sub
hlt
das
xor
xchg
pop
jg
xchg
leave
insl
test
push
sbb
pop
imull
push
push
mov
pop
mov
mov
cmp
pop
es
cmp
mov
int3
sbb
and
shlb
sahf
xchg
cmpl
and
cli
je
test
xor
cmp
sbb
mov
outsb
filds
dec
cltd
in
sub
adc
sti
or
push
sbb
mov
scas
sbb
push
out
cwtl
stc
cmp
je
icebp
and
pushf
dec
scas
loopne
fs
shll
cmp
xchg
adcb
xor
pushf
ja
jg
dec
push
pop
pop
aam
mov
rcrl
lds
push
xchg
ds
loopne
imul
jmp
dec
je
dec
dec
lret
cmp
jge
lahf
imul
aaa
add
pop
in
and
bound
adc
in
xor
jnp
inc
mov
push
and
popa
jo
sbb
or
movsb
fists
mov
fs
stos
mov
in
push
and
lock
dec
cmp
notl
scas
repnz
cmp
insl
insl
iret
rorb
and
cwtl
imul
and
xor
push
jae
js
push
mov
or
mov
pop
cmp
pop
push
fld
adc
ljmp
ja
and
add
jbe
cs
add
mov
mov
mov
dec
dec
test
bnd
inc
and
xor
sub
test
inc
inc
or
shrl
adc
popf
lcall
mov
aas
ret
xchg
or
lcall
repz
inc
xchg
sub
mov
xor
xor
lea
inc
subb
jae
dec
push
xchg
pusha
sti
adc
dec
ja
and
in
ret
inc
pop
loop
and
jae
push
jne
inc
mov
fs
mov
mov
inc
jnp
sahf
sub
pushf
jl
repnz
sub
cmp
pushf
pop
dec
jns
lcall
cmp
cmp
push
lcall
leave
jbe
sbb
cmc
aaa
mov
sub
dec
jo
loop
es
xor
jg
adc
daa
jnp
cmc
jecxz
jns
cli
push
rorl
push
jl
stc
mov
jle
inc
add
push
cmp
lock
ja
mov
in
cmp
jmp
testl
pop
sti
je
test
jl
mov
clc
inc
stc
outsl
sarb
mov
cmp
inc
lret
lock
inc
int
loopne
pop
adc
iret
mov
cli
andb
pop
mov
jge
pop
nopl
sub
adc
scas
xor
hlt
cmpsb
mov
jp
daa
xlat
push
dec
pop
add
sub
mov
cmp
pop
push
pop
fcomi
pop
cmp
bound
sub
jg
jne
mov
loope
inc
pop
push
aad
fidivrl
gs
xor
mov
int
shlb
sbb
orl
or
adc
dec
sub
mov
mov
sbb
lret
xchg
notb
mov
push
fs
cwtl
dec
or
push
inc
fisttpl
nopl
push
sub
cs
movsl
fstpt
sbb
jge
xor
shl
out
mov
sbb
ljmp
in
adc
pop
pusha
adc
pop
lret
jle
and
mov
mov
push
mov
ss
mov
roll
loop
jp
stc
push
stc
pusha
imul
jl
dec
aas
mov
inc
adc
or
jb
stos
or
dec
shlb
fdivl
lods
xchg
hlt
test
rcl
in
ret
into
cltd
mov
mov
sub
inc
add
mov
incl
and
push
out
out
or
mov
shll
sub
mov
loop
insl
push
stos
call
cmpsl
lret
hlt
xchg
pop
shll
jo
jmp
mov
xchg
cmp
jl
rorl
pop
jbe
fcoml
jb
incl
xor
or
and
and
sti
mov
pop
xor
icebp
into
inc
insl
push
frstor
xor
lds
dec
jl
pop
adc
push
mov
adc
inc
cli
imul
aam
inc
aad
mov
outsb
pop
sub
dec
add
lods
jnp
adc
push
ja
inc
dec
gs
pop
sbb
mov
shll
jl
jbe
leave
rcrl
loop
xchg
fst
test
cmp
fildll
test
je
add
and
pop
inc
mov
or
push
mov
mov
inc
js
mov
mov
inc
push
lret
popa
add
or
dec
mov
xlat
mov
imul
movsb
ret
aad
mov
pushf
fists
arpl
test
ror
mov
ror
fnstcw
stos
sub
adc
or
aam
inc
in
and
push
fstpt
repnz
xchg
sbb
pop
outsb
xchg
lods
cltd
adc
fbstp
cwtl
and
pop
iret
lds
shll
scas
and
xor
add
mov
mov
dec
pushl
ss
lret
out
outsb
daa
ds
dec
pusha
addl
and
jbe
imul
out
adc
push
push
into
clc
push
and
jnp
and
and
sub
jg
mov
sbb
mov
out
ficoms
sub
and
push
adc
jne
xor
xlat
add
jg
sarb
sahf
cmpsb
loope
xchg
push
mov
or
jge
push
imul
cmpsl
xor
lcall
aaa
jbe
fstp
and
loope
int
sub
test
outsl
int3
push
je
cmp
mov
cmpsb
shrb
xor
mov
inc
pop
popa
je
dec
fs
pop
pop
mov
cmp
dec
lret
pop
rclb
mov
aas
inc
shlb
dec
xor
xor
mov
cmpsb
loop
jae
lret
jno
insl
fistl
arpl
dec
rcrb
in
pop
sub
push
adc
movsb
pop
mov
rcll
mov
out
in
iret
and
push
rolb
add
out
in
iret
hlt
and
std
mov
insl
push
cmp
fidivrl
fdivrl
pop
inc
or
mov
test
or
add
and
dec
pop
shl
jae
aaa
jnp
out
cmp
out
in
std
sub
je
enter
xorb
mov
sti
dec
lds
xor
inc
enter
push
jns
sbb
add
inc
movsl
shll
mov
sbb
fimuls
and
cltd
bound
ja
push
test
jns
mov
fsts
xchg
mov
out
lahf
sbb
sbb
bound
std
push
push
fistpll
adcl
pop
leave
fimull
out
sbb
ret
adc
xlat
mov
stos
xchg
jecxz
enter
mov
lods
repnz
fldcw
sbb
sub
mov
xor
or
mov
pop
or
mov
lods
sbb
adc
arpl
lcall
dec
push
sub
je
add
add
sti
addr16
divb
sub
jnp
cmp
aas
mov
xchg
hlt
leave
cmpsl
push
inc
outsl
xlat
out
jnp
jge
dec
jmp
lcall
ja
test
sbb
roll
mov
outsb
out
push
add
icebp
mov
mov
shrl
pop
xchg
xor
shll
inc
mov
adc
test
push
jp
test
xchg
xchg
or
scas
xchg
adc
sub
sub
stos
or
imul
fisubs
ret
dec
jns
ret
xor
movl
in
loope
jae
dec
hlt
scas
ds
int
scas
ret
lds
call
or
jnp
inc
popw
enter
arpl
sbb
pop
or
subl
fsubrs
sub
pop
sub
rol
or
gs
add
test
lcall
dec
mov
jb
mov
add
mov
mov
in
cli
push
mov
and
inc
and
add
mov
imul
pop
push
sbb
push
xchg
jp
pop
push
fsubr
test
jno
mov
sub
add
lret
cld
inc
xchg
movsl
clc
repnz
sub
mov
rorl
dec
push
test
sarl
jmp
data16
mov
dec
cmpl
jns
mov
mov
lods
xor
test
mov
mov
inc
lret
mov
add
icebp
sub
dec
shll
repnz
cmp
out
ja
inc
mov
pop
mov
fadds
push
jle
cltd
in
sbb
cmp
or
sub
sbb
pushf
ret
mov
addr16
dec
addr16
out
xchg
inc
dec
lods
mov
mov
jp
fwait
stos
hlt
pop
lods
loop
ds
jmp
xor
mov
loopne
loopne
cmp
sbb
cmp
xchg
sbb
hlt
push
das
test
pushf
rolb
jl
fwait
push
fmuls
inc
cmpsl
mov
fstl
pop
bound
cwtl
scas
pop
jb
cs
inc
xor
je
jo
out
cli
addr16
out
mov
jle
dec
cmpsl
scas
and
mov
in
scas
xchg
adc
cmp
mov
movl
loop
repnz
rcrb
iret
mov
xor
push
aad
bound
addr16
pop
pusha
cmp
enter
sub
fcom
shlb
xor
push
or
hlt
push
push
stos
dec
fiadds
negb
lret
add
fiaddl
lds
outsl
sub
push
sub
shlb
stos
mov
stos
mov
out
xor
ja
mov
jae
pop
pop
pop
addl
pop
stos
ror
inc
jg
dec
inc
xchg
push
outsl
les
and
lods
mov
sub
cltd
mov
cmp
mov
in
or
orb
push
sub
xlat
cmpsl
jbe
ljmp
and
loopne
pusha
mov
xor
mov
mov
add
sub
fcmovnb
push
fwait
or
sub
lods
int
xlat
mov
insl
pop
lahf
and
cmp
cmc
xchg
rcl
hlt
mov
enter
pop
ljmp
cmp
inc
push
jo
or
push
in
dec
int3
cwtl
loopne
sbb
aad
cmc
push
push
roll
iret
lcall
out
xchg
push
mov
ss
mov
pop
outsl
out
repz
lods
into
std
inc
call
addb
or
add
cmc
xor
mov
cmp
inc
and
push
push
jp
into
mov
in
loopne
jge
xchg
fsts
inc
xchg
shll
cld
push
movsl
adc
sbb
outsb
dec
xchg
es
lock
mov
sti
imul
iret
jl
add
andl
test
in
adc
push
std
lahf
pusha
adc
into
pop
and
pushf
cmp
stos
orl
ss
loopne
jecxz
shlb
mov
loopne
aaa
add
enter
mov
adc
scas
add
cmpsb
mov
jecxz
push
pushl
arpl
in
int3
out
mov
popf
adc
push
sub
xchg
js
sahf
and
pop
cwtl
jp
int
pop
jne
loope
add
mov
pop
jno
and
mov
push
inc
adc
scas
out
or
push
repz
js
sahf
mov
and
or
out
popa
adc
cmpsb
hlt
repz
push
dec
sarl
loopne
dec
in
out
cmpsl
orb
repz
jecxz
add
push
push
push
out
jae
int
jg
fisubrs
ret
add
push
fnstenv
btr
jmp
into
xor
pop
aam
test
and
mov
pushl
jle
and
xchg
das
xchg
notb
and
add
xor
pop
and
inc
xor
jno
clc
test
rcrb
dec
mov
xor
or
movsl
shrl
stos
popf
pusha
testb
shll
pop
xchg
push
test
inc
push
mov
add
ret
cwtd
xor
push
fcompp
and
and
fwait
push
frstpm(287
jbe
mov
push
add
rol
incl
orl
je
xor
pop
cld
add
and
xchg
mov
dec
cltd
rclb
out
jnp
cmp
cs
mov
ficomps
enter
push
jbe
sbb
jns
mov
imul
add
dec
cwtl
add
sbb
je
sbb
add
mov
jae
xor
xchg
xchg
test
loope
scas
lods
adc
sbb
fcomps
cmp
icebp
not
pop
inc
xor
pop
xor
jns
bound
push
leave
inc
jp
xor
mov
mov
into
scas
lods
sub
mov
push
dec
fiaddl
or
and
push
jae
cmp
mov
xor
push
mov
and
rorb
or
lret
pop
shll
ljmp
mov
lahf
mov
imull
dec
out
jecxz
sub
mov
ljmp
pop
ficoml
mov
jecxz,pt
jp
sbb
jmp
add
insl
jne
outsl
cmp
cmp
dec
or
sub
xchg
xor
push
jnp
cmp
jbe
scas
shl
sbbl
nop
mov
nop
in
jbe
cmpsb
xchg
icebp
je
cmp
dec
inc
mov
mov
jle
jbe
bound
mov
sbb
and
adc
dec
aam
sub
pusha
push
insb
sti
sbb
xchg
mov
out
dec
ljmp
ss
add
mov
jns
test
inc
lods
adc
aas
xor
repnz
xor
repz
lods
shrl
in
xchg
je
add
push
xchg
sbb
gs
lcall
lahf
xchg
adc
jmp
pop
outsl
rcrb
mov
mov
sub
mov
fbstp
leave
nop
mov
add
jno
xor
or
ds
fisubl
out
jl
push
jle
insl
bound
sub
addr16
lods
std
cmpsb
inc
jl
cmpsb
sahf
aaa
sarb
shrl
cwtl
in
or
xchg
sub
aad
lcall
insb
or
daa
sbb
and
xabort
bound
or
and
inc
sahf
jns
fstl
add
pop
sbb
imul
push
jle
sbb
mov
dec
imul
adc
jnp
adc
jg
or
sub
inc
sti
outsb
jg
pop
inc
cltd
lret
sbb
dec
pusha
movhps
push
lahf
inc
inc
int3
push
nop
jb
in
mov
sub
push
ja
test
and
loopne
inc
add
stc
fidivrl
fstl
clc
push
icebp
adc
orb
sub
in
fsubl
loop
pop
or
mov
mull
outsl
ret
movsb
push
daa
iret
push
mov
inc
aam
pop
and
lret
insb
xchg
push
cltd
fs
stos
iret
jae
cld
in
test
aas
outsb
and
fs
xchg
gs
push
fsubs
mov
add
test
add
repz
ret
hlt
xchg
stos
xor
jg
mov
xchg
inc
sbb
pop
dec
pop
pop
imul
mov
push
pop
sub
or
cwtl
inc
ja
cmp
mov
mov
daa
jmp
adc
pop
jns
test
or
ja
xchg
or
sbb
inc
dec
lock
cld
push
add
fsubrp
daa
push
enter
int3
push
movsb
pop
xchg
sbb
das
addl
pop
xchg
push
in
pop
and
sbb
popf
mov
inc
xchg
jnp
jb
shll
call
cwtl
inc
scas
add
int3
in
test
dec
aam
rcl
mov
sub
dec
adc
pop
or
ret
fidivrl
sar
xor
in
out
inc
and
xor
or
pop
push
push
and
push
movsb
cmp
mov
sbb
stc
xor
jb
or
mov
pop
lea
insb
cltd
mov
stos
int3
in
xchg
sub
mov
jb
dec
jp
test
pop
jg
scas
lock
xor
pop
fstp
nop
sub
sub
popa
adc
idivb
stos
xchg
dec
repnz
push
test
loope
stos
push
sub
dec
sbb
orb
or
jl
cli
call
arpl
pop
or
cmp
xor
mov
or
jle
loopne
daa
pop
push
adc
adc
dec
leave
jo
outsl
and
lock
lahf
pop
and
loope
pop
mov
loop
mov
cmp
cwtl
out
inc
and
jae
les
pop
dec
xchg
jl
and
push
nop
adc
out
sbb
push
int
inc
mov
sub
and
add
mov
and
lret
add
mov
mov
aad
jb
jae
or
push
mov
es
mov
and
xchg
js
out
iret
lcall
aaa
cmp
enter
imul
stos
out
call
cmpsb
cmp
mov
arpl
and
shrb
inc
nop
jnp
sbb
daa
cmp
pop
outsl
decl
cmpsl
sbb
sbb
daa
test
je
or
aas
lods
jns
adc
mov
outsb
and
pop
adc
push
movsb
sub
aaa
xchg
pop
cmpl
adc
inc
popf
push
mov
push
std
xor
push
mov
mov
in
test
cltd
hlt
lret
mov
test
lods
lods
sahf
mov
inc
pop
pop
repz
add
push
outsb
xchg
mov
add
cwtl
lea
outsl
call
comiss
jl
movsb
popa
divb
xchg
out
push
sub
cmp
enter
gs
jae
push
add
pop
add
subl
divl
ficompl
fcomps
loopne
mov
cmp
dec
pop
arpl
mov
add
sbb
ret
and
inc
cld
cld
add
or
cltd
out
inc
subb
lret
adc
in
push
loope
sbb
lods
dec
int3
mov
pusha
or
push
pop
mov
push
sub
mov
stc
fcompl
aam
pop
pusha
push
ds
add
mov
or
repz
adc
cmp
sbb
cltd
into
or
add
add
push
inc
xor
xchg
popf
mov
and
cltd
scas
push
int
cmp
outsb
lock
mov
mov
mov
negb
js
or
mov
cld
lds
test
lods
sbb
adc
or
int3
inc
in
jbe
paddb
iret
adc
dec
ljmp
add
mov
std
or
stos
loopne
lahf
cmp
popa
adc
shrl
adc
dec
shll
inc
mov
lahf
in
test
gs
jmp
int3
jge
popf
or
leave
push
xor
les
hlt
cli
out
lock
lret
shl
inc
inc
int
inc
lahf
stos
aad
xlat
mov
sub
into
and
jecxz
mov
inc
xor
sub
roll
sub
mov
std
imul
hlt
and
cwtl
insl
ds
leave
outsl
pop
jnp
pop
push
pop
xchg
mov
lds
aam
mov
dec
bound
sub
sbb
int
pushf
bound
nop
push
aaa
jmp
or
sub
jmp
cmp
or
or
or
fdivrl
lret
repnz
cmp
out
das
cmp
or
shl
popa
add
sub
cmpl
mov
pop
cltd
xchg
cmpsl
pop
mov
iret
and
xor
dec
pop
in
xchg
popf
imul
xor
jle
pusha
out
mov
into
arpl
push
sub
icebp
mov
out
adc
and
repz
add
jl
push
dec
pop
pushf
insb
lea
mov
inc
idivl
lret
jns
mov
adcb
mov
lret
xchg
mov
shl
adc
mov
sbb
call
scas
mov
or
cld
cli
cs
imul
cltd
lcall
cmpsb
roll
iret
cmpsl
pop
mov
divl
pop
add
cmp
xchg
lock
dec
jp
es
gs
les
loop
xchg
lret
xor
imul
lcall
iret
pop
mov
pop
mov
cmpsw
xchg
les
lea
testb
test
dec
in
add
inc
lret
fscale
les
add
mov
aaa
pop
data16
inc
test
mov
ret
pusha
adc
jns
imul
stos
loopne
dec
je
add
or
add
mov
add
sarl
sub
xchg
movsb
jl
shl
pusha
popa
or
lods
test
adc
bound
js
xchg
gs
iret
dec
inc
mov
push
cmp
adc
push
ss
lret
lahf
outsb
cli
das
mov
mov
lret
movsb
jl
in
sub
and
push
cmc
cltd
lds
xchg
clc
xchg
and
fcompl
popf
mov
out
addr16
jae
enter
add
push
mov
push
mov
sbb
addr16
fisubrs
rolb
and
lcall
mov
andl
pop
dec
pop
xchg
out
mov
in
mul
rol
lock
push
adcb
loope
movsb
adc
mov
push
out
pop
fadds
imul
outsl
xacquire
xor
and
enter
xchg
xor
sbbb
and
aas
sahf
loop
leave
cmp
popf
sbb
mov
sbb
outsb
movsb
sbb
js
cmpsl
pop
pop
test
pusha
imul
cli
test
xor
popa
inc
xchg
xchg
fs
jmp
xor
mov
jb
leave
add
inc
notb
out
inc
call
test
jae
lret
dec
ja
push
push
add
inc
sbb
jle
stos
fimull
mov
pop
rcll
mov
push
or
push
leave
or
mov
lods
outsl
mov
negb
xor
jg
xor
pushf
mov
sub
sub
dec
jmp
cmpsb
jecxz
inc
loope
jb
outsl
xor
jl
test
ss
and
and
ljmp
mov
push
outsl
ja
popl
inc
adc
pop
pushf
in
dec
mov
outsb
test
hlt
cmp
rorl
clc
pop
cltd
jb
loopne
hlt
jnp
gs
push
adc
inc
jecxz
scas
add
lea
fmull
mov
add
aad
jno
lock
push
in
mov
xor
dec
das
jnp
xchg
filds
pop
xchg
xor
negb
sbb
into
fs
adc
pop
xor
notl
loope
mov
adc
jno
jge
inc
rolb
leave
ja
fnstcw
push
or
out
adc
pusha
or
cmp
popl
es
or
test
xor
sub
outsl
aam
xor
sbb
xlat
inc
aam
loope
test
int3
shll
orl
gs
pop
and
pop
sti
cmc
and
clc
jne
mov
pop
xchg
pop
inc
insl
sub
daa
sarb
add
imul
mov
pushf
rclb
fsubs
daa
mov
iret
push
pop
xchg
jo
out
out
cmp
cmpsl
mov
and
sbb
jl
mov
push
or
jge
mov
mov
imul
xor
sbb
insb
lahf
aam
rcrl
call
bound
pop
shll
inc
inc
pop
dec
jmp
test
hlt
mov
test
loop
jp
sahf
andl
pop
jns
jo
ljmp
mov
stc
inc
call
cmp
and
push
xor
jnp
xor
aaa
inc
mov
cwtl
push
and
dec
fs
pop
xor
pop
add
ss
mov
push
adc
in
fxch
or
out
push
jbe
cltd
clc
imull
test
sahf
lret
mov
push
pop
arpl
adc
clc
sbb
in
outsl
or
or
lret
test
xchg
xor
leave
lock
or
xchg
cmp
cli
rclb
ja
dec
loope
int
push
jns
push
cltd
sahf
jmp
sbb
lods
jmp
arpl
cwtl
fisubl
cwtl
pop
adc
and
rcr
dec
js
das
mov
arpl
clc
adc
pop
push
inc
fildll
lods
jmp
cmp
mov
pop
adc
packsswb
mov
xor
ret
icebp
mov
in
mov
pop
in
and
adc
mov
mov
inc
rorl
inc
popa
stos
mov
dec
push
frstor
sub
cmp
mov
sub
fcompp
inc
enter
rorb
push
fistps
fstp
inc
jne
cs
sub
push
gs
outsl
cltd
mov
mov
mov
push
sbb
nop
sub
push
daa
cmpsb
sbb
loop
inc
out
xchg
aas
test
stos
dec
cmpsl
mov
shlb
xor
lea
ret
icebp
dec
ds
xor
cmp
rcll
pop
sub
add
je
add
push
xor
sub
addb
mov
lock
cld
rcrb
adc
dec
enter
add
ds
test
dec
dec
bound
cwtl
int
frstor
lret
cmp
fcompl
pop
add
sahf
jp
or
jno
iret
insb
mov
xlat
jo
test
sbbl
add
outsb
cmp
lret
frstors
lock
or
mov
clc
imulb
mov
xor
mov
cmp
push
mov
inc
pusha
xor
add
pop
out
pop
xlat
pop
jns
push
xorl
push
mov
or
std
lcall
in
int
jb
lds
shll
lahf
das
sub
cltd
push
cmp
jecxz
cmp
xchg
into
loop
jle
push
inc
rorb
mov
roll
and
sbb
and
cmp
mov
dec
loop
ljmp
or
test
pop
loop
dec
add
call
ljmp
rorb
dec
sub
mov
scas
mov
xchg
jp
sbb
pop
enter
imul
loop
negl
mov
push
lock
not
inc
insb
jae
inc
push
sbb
lret
add
add
rcrl
adcl
add
jns
test
test
xor
je
scas
add
int
jmp
cmp
jbe
je
lcall
into
mov
loopne
fmul
fwait
or
cmc
mov
mov
fisubs
cmpsl
mov
ret
loope
push
sbb
shll
inc
sbb
jecxz
jg
outsl
lea
in
pop
lahf
xchg
into
mov
out
push
add
int3
out
adc
gs
jl
loopne
std
ja
into
bound
mov
inc
cmp
cli
or
les
and
push
xor
pop
jne
iret
push
dec
lret
sub
cli
jg
jbe
xor
pusha
and
imul
repz
das
and
outsb
xchg
push
scas
dec
ret
addb
mov
push
cmp
fisttpll
lea
adcl
inc
movsb
cmp
fnstenv
lock
and
jno
mov
repz
into
mov
xchg
stc
pusha
shrl
movsb
cmp
std
jmp
xcrypt-ecb
testb
aam
arpl
mov
les
pop
sbb
rclb
xchg
cmp
iret
jne
fcomps
cmp
outsl
hlt
lods
pop
and
test
imul
adc
cmp
mov
jb
cmp
int
cmp
lds
jo
mov
sbb
pushf
test
cwtl
xor
js
adc
imul
jg
inc
nop
jecxz
arpl
std
mov
adc
pop
shll
push
sub
jp
and
adc
xchg
xor
and
filds
sbb
pop
sahf
or
mov
and
stos
dec
mov
lret
and
mov
jne
or
sbb
aad
mov
outsb
popa
cmp
pop
push
daa
inc
sbb
arpl
lea
jne
cmp
les
cmpsb
jl
sbb
popf
lea
and
inc
push
dec
imul
sbb
rcr
ret
xor
and
pop
pop
es
xchg
and
bswap
pop
or
add
inc
jne
lret
cmpsl
and
int3
inc
pop
mov
pushf
xor
fwait
rclb
repz
mov
imul
sub
push
mov
js
add
cmp
jle
lret
mov
inc
and
iret
lea
fnstcw
fs
mov
mov
jge
jl
mov
push
xchg
stc
cmp
mov
xor
iret
mov
push
mov
add
aaa
mov
mov
imul
lock
xor
jns
ss
xchg
faddl
test
or
xchg
rcl
jp
daa
push
imul
dec
jo
call
cmpsb
pop
push
add
fmuls
rclb
mov
xlat
dec
cli
xchg
repz
cmp
jge
lods
jb
mov
test
xor
js
jb
mov
push
jo
popf
dec
ss
xor
xor
and
lods
outsl
or
sbb
dec
bound
push
xor
sub
lret
js
rorl
xor
jmp
sub
jb
xchg
sbb
sub
in
xchg
ficoms
cmc
push
add
push
sbb
push
mov
cmc
pop
scas
test
stos
sarb
push
push
adc
shll
push
out
fucom
jno
pushf
popa
jp
icebp
cmp
push
jae
sub
popaw
xchg
daa
fldl
and
movsl
scas
mov
ljmp
outsl
adc
adc
lods
jno
sub
das
add
cmp
or
int3
jle
aas
movsl
hlt
xor
ss
pop
adc
aad
xor
xor
mov
es
inc
nop
hlt
iret
dec
jl
arpl
push
imul
rorl
divb
xchg
call
dec
fs
cmpsb
and
sbb
flds
xchg
cs
icebp
mov
dec
fmuls
dec
jb
fsubp
mov
je
adc
mov
loopne
lcall
jge
push
sub
mov
xor
mov
adc
jl
ret
cwtl
out
sbb
outsl
leave
cli
xchg
jb
push
fisubrl
sub
daa
inc
stos
push
shlb
jmp
xchg
fldt
mov
nop
mov
jnp
repz
in
sbb
push
sub
pop
dec
out
pop
push
push
push
lret
ficomps
inc
lock
cmp
inc
mov
leave
xlat
xchg
nop
sbb
mov
shl
fsubrs
mov
rolb
sti
pop
cmp
adc
xchg
ljmp
cmpsb
push
pop
jo
xchg
dec
adc
add
xor
stc
xchg
fdiv
movsb
stc
sti
jae,pt
cli
xchg
and
loop
inc
jno
in
test
aaa
test
aad
inc
pusha
enter
sbb
daa
and
dec
pop
jle
add
rorl
addr16
mov
inc
outsb
or
adcl
dec
arpl
pop
ret
jge
out
pop
gs
dec
nop
std
in
xchg
rorb
out
mov
pop
sub
gs
notl
push
pop
cmp
icebp
fisttpll
inc
push
cmpsb
inc
cltd
imul
cmpsl
lret
daa
inc
fcompl
or
icebp
pop
cltd
int
jb
fwait
mov
das
sar
cmc
mov
or
loop
cmp
xchg
std
sub
ret
jp
sub
fidivl
dec
add
cmpsb
push
imul
mov
cmp
aad
test
sbb
adc
mov
add
hlt
jbe
icebp
cmp
mov
and
mov
mov
mov
mov
inc
popf
dec
xor
inc
jns
leave
mov
iret
outsl
arpl
pop
xlat
imul
aas
mov
addr16
dec
or
xor
stos
jno
mov
loop
cmpsb
jb
movsl
pop
cs
test
mov
mov
cwtl
sbb
aas
adc
in
aas
mov
icebp
es
mov
mov
js
rcr
in
inc
filds
arpl
adc
loop
lods
jno
stc
inc
repz
mov
das
rclb
dec
and
mov
mov
add
jp
ja
mov
pop
cmp
or
ret
mov
data16
pop
sbb
lods
xor
movl
cmp
mov
jp
push
mov
imul
das
out
and
in
adc
in
stos
js
xchg
iret
push
and
or
out
mov
xchg
imul
dec
push
dec
rclb
arpl
addr16
fisubrl
subl
jg
sub
xchg
push
add
gs
jecxz
loopne
pop
or
cmc
push
rcrl
xlat
push
xchg
out
lods
and
test
sub
shll
inc
cwtl
dec
pop
or
xor
xor
notl
jbe
movsb
test
popl
iret
xchg
cmp
in
ljmp
mov
xchg
int3
pop
jmp
pop
inc
lods
push
sub
adc
cmp
imull
push
pushl
lods
ds
mov
mov
push
xlat
xchg
xor
push
test
adc
fmull
call
sbb
mov
ss
pop
hlt
add
sub
push
daa
hlt
shlb
or
addr16
xchg
rorb
std
fnsave
fcoml
and
negl
imul
icebp
inc
cwtl
add
sbb
aas
cmp
xor
cmp
add
lock
aas
je
xor
and
scas
mov
jmp
cmp
sub
mov
lahf
dec
aad
sbb
pop
arpl
divl
and
cmp
add
hlt
out
push
cmp
add
inc
sahf
pop
adc
pop
mov
and
icebp
jbe
dec
scas
mov
test
push
dec
sbb
jbe
fstps
les
mov
sti
nop
xchg
inc
mov
pop
fisttpll
cltd
test
jns,pn
push
mov
or
adc
scas
in
inc
jnp
inc
pop
jno
repz
push
popa
sahf
ss
cmpsl
mov
inc
das
lret
ss
test
popf
insb
mov
lcall
sbb
notb
push
popa
pop
in
mov
in
aaa
sbb
jge
and
sbb
sbb
mov
and
or
int3
mov
into
xchg
push
scas
cmpsb
loopne
ds
fisttps
cmpsb
sbb
std
stos
mov
es
pop
mov
jns
mov
data16
mov
lods
fs
xor
dec
insb
data16
cwtl
mov
out
call
out
jle
stos
in
popf
jg
rclb
sbb
sbb
mov
sbb
jno
mov
sbbb
add
fs
xchg
lods
ret
repnz
xchg
repnz
sahf
xchg
mov
push
aam
pop
ja
xor
mov
setge
cwtl
popa
movsl
mov
fcoml
and
rcrl
push
jmp
int
cli
cmpsl
ds
cltd
ds
mov
pop
and
and
inc
hlt
addr16
cmpsl
add
dec
add
push
add
lahf
jnp
popa
outsb
jno
pusha
lahf
pusha
push
mov
fwait
mov
ljmp
jg
rcrb
cld
pop
cmp
les
xchg
in
mov
mov
sbb
enter
fidivrs
shll
stos
sahf
aas
mov
jg
mov
stc
gs
pop
rclb
jnp
test
hlt
add
add
cli
pop
push
adc
ficoms
fildl
sbb
inc
sub
xchg
xchg
pop
out
js
shll
aas
and
push
xor
sbb
inc
fldcw
xor
enter
out
test
jp
rcll
ds
outsl
xchg
int
lret
test
ss
test
pop
pop
fsts
xchg
out
mov
in
aam
lds
sar
outsl
ja
ja
shll
rcrl
mov
out
inc
outsl
fwait
mov
dec
loop
jne
pop
dec
jnp
xchg
aam
aas
call
add
or
fidivrs
popa
shrb
and
das
push
mov
pushf
nop
stc
sub
and
gs
js
xchg
jne
xlat
mov
xchg
add
test
mov
mov
jmp
popf
add
cmp
mov
fistpl
fstpl
or
mov
jle
jge
in
xor
int
pop
xor
scas
int
gs
stos
pop
push
sub
aam
repz
jbe
mov
out
add
test
std
shll
inc
shl
ja
xor
ficomps
push
sti
jg
aad
fcompl
xchg
xchg
sbb
xor
cs
push
jle
push
xor
jp
xchg
fsts
outsb
lcall
push
jl
add
dec
xor
mov
leave
cmpsl
and
sarl
xchg
int
pusha
cmp
fldt
mov
inc
add
mov
arpl
sarl
dec
or
sar
stos
mov
dec
int3
push
xor
loopne
call
call
aas
stc
cmp
ja
jmp
outsl
jb
mov
popf
add
lods
inc
aam
movsb
xor
pop
gs
xor
popa
inc
cmp
xor
iret
jo
inc
imul
sub
adc
orb
sub
movsb
add
jle
mov
cli
mov
xor
dec
sysret
subl
clc
pop
and
or
xchg
pop
mov
es
es
sbb
icebp
sbb
mov
mov
xchg
inc
mov
or
mov
subl
test
clc
sub
mov
xlat
jl
aam
loope
scas
jb
rorb
into
mov
es
or
xchg
ja
insl
sub
in
icebp
mov
out
mov
loop
xor
inc
xchg
sub
fs
leave
push
xlat
loop
push
xor
ljmp
sbb
jno
sub
xchg
stos
cmp
xor
aam
mov
movswl
sub
jmp
mov
jl
xchg
or
add
cmp
dec
mov
sub
insb
mov
ljmp
sub
add
insl
pop
jo
insb
jmp
pop
xchg
mov
int3
push
std
ja
insb
fcmovnbe
mov
ret
sub
ss
lret
cmp
cmpsl
and
dec
sub
xor
or
mov
sub
xchg
mov
cmp
xchg
test
aam
ss
jbe
cltd
push
and
push
bound
adc
cld
cmpsl
movsl
repz
dec
sysret
test
fidivrs
iret
inc
mov
les
inc
push
mov
dec
push
jg
mov
adc
aas
xchg
sti
push
jmp
or
xchg
mov
push
jg
push
cltd
ljmp
sub
cmp
sbb
out
leave
mov
push
ret
pop
pop
test
sub
shll
test
sti
dec
push
clc
mov
outsl
repnz
push
cmp
daa
jl
fdivs
jecxz
inc
pop
pop
xor
mov
cld
mov
pop
push
push
push
lea
xor
add
outsb
push
inc
mov
mov
pop
cmp
stos
insb
outsl
and
mov
or
cmp
and
add
xor
test
push
pop
lock
loop
pop
shll
push
in
test
add
imul
stc
push
addr16
add
cld
fsts
pop
sub
cmpsl
aas
push
adc
enter
sbb
or
fiadds
dec
lock
into
xchg
or
mov
push
push
lds
mov
mov
lret
push
jecxz
std
dec
mov
push
sbb
dec
sub
mov
fs
push
add
imul
push
sub
xor
fisttps
cli
push
cli
pop
sub
mov
adc
in
das
mov
pop
and
or
into
dec
rolb
jmp
mov
je
push
inc
adc
xor
cmp
enter
rorb
fnstenv
andb
dec
enter
subl
pop
dec
push
push
inc
cmp
xchg
in
roll
sbb
mov
shrl
xchg
adc
ja
push
cmp
mov
cmpsb
add
cli
xchg
lahf
cmpsb
add
add
scas
outsb
xchg
sbb
cmpsb
sbb
dec
aad
sbb
shrl
stc
das
dec
lea
andl
mov
push
dec
or
jbe
xor
negb
or
sub
mov
out
push
pop
sti
iret
jle
mov
jl
mov
pop
pop
jg
ds
cmc
push
push
iret
cwtl
movsl
and
jl
jle
dec
mov
mov
inc
out
dec
mov
psrad
or
jo
push
jmp
ret
mov
or
sub
movsl
cmp
ret
adc
pushf
add
mov
outsb
inc
ljmp
inc
inc
adc
pop
dec
iret
mov
mov
mov
ror
push
outsb
fldcw
aam
fmuls
movb
rorb
xlat
cmc
xchg
int3
dec
aaa
je
adc
rclb
mov
movsl
aam
dec
out
mov
out
xchg
into
loope
test
aam
sbb
fwait
adc
cltd
pop
pop
pop
sbb
cmp
sahf
cmp
aas
les
roll
inc
in
sub
xor
mov
and
out
std
out
sub
dec
add
call
mov
call
xchg
outsb
sbb
or
out
mov
jnp
sub
popf
aaa
lahf
and
movsl
xor
xor
add
pop
jmp
mov
sti
sub
jno,pn
dec
mov
jnp
not
mov
sub
pop
jmp
or
cmp
adc
lahf
push
outsb
push
adc
mov
out
dec
popf
sar
cmp
aam
movsb
adc
mov
jae
addr16
stc
sub
dec
xchg
bound
movsb
mov
rcr
and
mov
addb
aam
pop
stc
shrb
mov
scas
cmp
iret
inc
sub
leave
cmp
xchg
in
nop
aam
cmpsb
and
or
jmp
adc
xor
cmp
dec
xor
js
inc
in
sbb
das
repz
jns
test
mov
fisttps
testb
xchg
xor
mov
lret
jbe
inc
test
out
xchg
int3
test
add
or
aaa
dec
outsl
daa
insb
out
mov
push
sub
fwait
mov
cmpsl
scas
add
cmpsl
aam
mov
int
in
push
xor
in
imul
bound
add
push
jnp
mov
add
scas
jo
lea
imul
push
push
cs
mov
push
and
iret
iret
lea
pop
loopne
mov
cmp
mov
xor
daa
ss
testb
xchg
cmp
adc
mov
pop
sub
xlat
sub
xchg
inc
icebp
push
pop
mov
and
adc
inc
mov
and
idivl
jnp
or
jb
dec
cmp
and
xor
repz
mov
pop
andl
mov
mov
aad
sbb
fucom
cmp
pop
outsl
lcall
mov
pop
and
rol
pop
sub
inc
inc
mov
sub
adc
adc
xchg
idivl
lea
adc
pop
in
out
js
push
pop
cmc
mov
cmp
push
jmp
test
sub
cmp
divl
popf
push
ja
fdivrp
push
aad
jg
push
jbe
cmpsb
inc
loope
test
out
stos
cs
nop
pop
adc
cmp
jbe
inc
or
pop
inc
rcll
andl
or
fsts
push
sahf
pop
xor
jg
pop
dec
outsb
cmpsb
popf
pushf
mov
pop
sahf
push
daa
push
inc
inc
jecxz
pusha
fcmovnb
mov
cs
ret
ret
pop
or
in
mov
nop
sub
cmp
pop
add
int
xor
mov
mov
fcoml
mov
pushf
test
dec
ja
repnz
or
movsb
cld
fcmovnu
scas
sti
lcall
stc
mov
sbb
push
lcall
adcl
aaa
inc
jle
jae
jnp
mov
dec
out
cli
cmpsl
xchg
xor
imul
xor
jnp
in
inc
fwait
mov
inc
and
adc
stos
imul
icebp
mov
mov
pop
icebp
cmp
push
mov
mov
dec
mov
out
jo
in
enter
pop
pop
push
adc
popa
in
push
jmp
dec
cli
mov
fcmovne
out
sbb
mov
jl
lea
xor
push
xor
mov
or
xor
stc
inc
clc
dec
mov
ss
inc
inc
in
push
sbb
cmp
movsl
mov
loop
push
call
es
add
or
cltd
sub
hlt
inc
xchg
push
enter
inc
dec
or
or
lret
aaa
push
movsl
ret
push
imul
dec
stos
in
push
rcll
push
push
leave
lret
cld
in
push
enter
push
push
sub
mov
ljmp
mov
out
fildll
push
add
xor
rcll
les
dec
jl
dec
or
mov
push
and
push
sub
cmpsb
xchg
lds
lock
loope
test
imul
add
cld
jge
fisubs
in
jg
mov
daa
std
lret
sbb
dec
ficompl
aam
arpl
mov
push
adcl
dec
icebp
xor
pop
jo
sub
push
xchg
inc
pop
icebp
roll
das
lds
mov
lahf
xchg
xchg
sub
sbb
repz
insl
adc
std
nop
push
pop
ss
add
xchg
call
daa
mov
xchg
lods
and
pop
lods
arpl
cmp
sub
mov
jecxz
filds
cmpl
shl
or
imul
xlat
mov
inc
ret
adc
mov
mov
add
sbb
lods
mov
mov
and
nop
test
and
push
xchg
divb
xchg
mov
pop
and
adc
push
test
jb
dec
or
dec
movsb
adc
scas
call
jmp
lds
ret
cmp
mov
insb
adc
inc
xor
fsubr
les
test
inc
mov
mov
pop
aas
push
inc
sub
test
jno
lcall
dec
cmp
push
insl
jbe
in
fbld
fsubrs
jmp
and
lret
pop
cmp
mov
jae
inc
xchg
out
mov
addr16
pop
pop
cld
enter
sbb
mov
jne
lds
andl
inc
lock
out
sub
mov
cmp
test
add
or
dec
pop
dec
les
inc
push
push
add
add
popf
mov
add
push
rolb
add
fwait
insl
out
inc
into
lods
push
pusha
fs
xor
cmpsb
in
es
incl
jae
out
mov
mov
xor
fsts
clc
adc
add
mov
in
jo
lahf
in
std
repnz
jns
lods
and
pop
outsl
stos
cmp
insl
jl
inc
lods
jne
stos
sub
out
inc
dec
cli
sbb
pop
addr16
pop
pop
or
fldl
mov
sub
je
test
jmp
movsl
subl
data16
cmp
ficompl
cmp
mov
xchg
dec
mov
imul
sub
sahf
add
mov
cmpl
arpl
cmp
lods
test
dec
cmp
lods
enter
mov
cli
push
mov
adc
add
fdivrp
rcr
movsl
stos
xor
stos
mov
pushf
testb
xor
loop
imul
mov
addr16
insl
cmp
movsb
pop
popf
dec
stos
out
into
sbb
inc
inc
leave
and
pop
leave
sub
dec
xchg
sub
lahf
je
addr16
xor
dec
inc
ss
popf
jge
fwait
pusha
add
in
into
push
adc
test
js
in
jmp
pop
enter
std
aam
iret
sarb
dec
cmp
mov
jo
cmp
jb
sub
into
call
dec
sbb
xor
jne
and
les
lods
mov
movsb
incl
imul
add
pop
movsl
push
test
lret
jno
addr16
mov
enter
xchg
loop
xchg
dec
and
dec
mov
sub
ret
jb
sarl
lcall
in
sub
loope
in
mov
xor
scas
sbb
subb
inc
int
add
sub
iret
mov
mov
cli
mov
mov
unpcklps
nop
add
das
dec
mov
xor
add
loope
xor
iret
outsb
in
cli
insb
cwtl
outsb
or
int
imul
push
jno
or
xchg
sbb
in
lahf
lret
popf
pop
adc
xchg
lcall
cwtl
push
sahf
out
lods
mov
or
inc
push
out
dec
inc
mov
inc
sbb
add
or
adc
pop
sub
xor
lods
cmp
test
popf
cmpsl
dec
push
psrlw
adc
xorl
mov
cld
jb
ret
dec
inc
sub
out
lahf
cs
lea
aaa
and
xor
scas
inc
insb
cmp
sbb
popf
movsl
into
or
or
xchg
and
adc
mov
dec
fnstsw
or
addr16
mov
and
ja
sbbb
add
sub
push
insl
hlt
cmp
sbb
fimull
jbe
xor
pop
lea
jl
jecxz
orb
jp
or
jmp
xchg
outsl
push
push
mov
sub
sub
repnz
lcall
inc
enter
cmp
cmpsb
xchg
add
sub
inc
test
xchg
call
mov
mov
or
or
adcb
lcall
push
dec
cmp
in
stos
cli
fwait
outsb
test
cmp
mov
adc
jno
fists
les
cli
fcoms
lods
mov
in
sub
dec
mov
jg
adc
aas
scas
imul
in
jmp
sub
xor
ror
and
je
sbb
lret
in
pop
mov
call
lahf
fistpl
jne
mov
rcrl
adc
stos
push
data16
repnz
push
lock
leave
adc
cmpsl
sbb
jg
stos
call
jl,pn
xor
sbb
aas
hlt
sbb
inc
push
inc
sbb
or
xor
sti
cmp
inc
dec
or
ss
mov
outsl
jle
fs
js
pushf
js
test
push
mov
add
cltd
jecxz
lea
cmp
pop
in
std
orl
mov
add
and
and
mov
push
xor
mov
scas
shl
adc
push
sub
or
push
inc
out
fidivs
lcall
push
fsubs
dec
cld
mov
popf
sub
mov
xchg
mov
js
push
mov
rcrb
int3
add
lcall
fistps
ss
bound
pop
cwtl
out
arpl
in
iret
jle
jge
popa
jp
jp
out
dec
mov
jmp
push
push
aas
out
and
imul
jl
adc
nop
je
pusha
out
inc
lret
loop
adc
daa
push
push
and
push
loop
js
pop
popf
mov
mov
pusha
pop
adc
fadds
push
ljmp
cmpsl
lcall
push
scas
es
mov
or
mov
shll
ljmp
outsb
icebp
and
mov
aaa
inc
xlat
jecxz
notl
repnz
data16
push
pop
pop
dec
sbb
arpl
sti
out
and
popf
cmp
push
test
adc
add
andb
xor
sub
out
int
ss
call
xchg
push
push
cmp
adc
andb
sarb
pop
mov
inc
xor
es
into
mov
cli
add
pop
adc
das
incl
ljmp
and
sahf
dec
fdivs
enter
jmp
inc
xor
and
rcl
sbb
ret
lret
jmp
mov
mov
pushf
mov
pop
push
cmp
mov
icebp
vcmppd
and
sub
and
sub
int
sub
inc
push
mov
aas
popf
mov
dec
mov
je,pt
test
decl
jl
sbb
loop
in
movsb
xchg
test
and
scas
iret
lea
pop
je
or
sub
add
jns
add
mov
lods
push
xlat
push
add
daa
cmc
or
fisttpll
mov
cmp
sti
call
xchg
test
inc
fwait
xchg
sub
aaa
cmp
fwait
cmp
mov
mov
rol
mov
fildll
rorb
cmpsb
lods
aaa
test
lret
or
int
cmp
jge
sahf
out
pushf
imul
mov
ret
outsb
or
mov
xchg
push
lods
dec
outsb
fs
mov
jae
xor
testl
jne
into
mov
jge
xor
mov
inc
add
adc
inc
popa
and
scas
orb
enter
sbb
lret
stc
xchg
fidivrl
inc
dec
out
out
scas
je
js
mov
jl
mov
cmc
test
jg
xor
out
jmp
inc
ud1
lahf
fs
cmp
icebp
rcl
or
bound
push
out
outsl
jg
adc
int
in
xchg
dec
mov
mov
clc
shll
push
sub
sbb
lods
mov
mov
pop
push
fidivs
mov
repnz
inc
out
xlat
loopne
movsb
push
jl
test
pop
dec
mov
lcall
vpsubusw
jae
call
and
test
pop
movsb
pop
cmp
test
dec
xchg
hlt
xor
mov
cmpsb
add
xor
or
lahf
nop
fldenv
jl
lea
xchg
loope
popa
pusha
fucomi
fimuls
mov
inc
jnp
hlt
data16
repnz
dec
daa
push
repnz
cmc
mov
dec
jnp
fcmovnb
adc
fistps
in
xor
xchg
jmp
mov
shll
movsb
out
shll
xchg
adc
dec
pop
pop
insb
fld
sub
mov
movsl
inc
cmp
fiadds
ret
call
and
push
test
shlb
sub
lret
mov
mov
sub
fwait
jo
jg
loopne,pt
sarl
insb
xchg
push
mov
push
push
les
bound
sbb
mov
insl
or
notb
addr16
in
cmp
imul
test
iret
sbb
ja
sbb
out
adc
jb
es
add
in
sarl
and
dec
ljmp
cwtl
sbb
cmp
jbe
cli
mov
aaa
imul
je
hlt
push
jge
repnz
pop
aam
adc
jmp
repnz
jmp
addr16
and
dec
rolb
or
es
ja
push
test
or
adcb
sub
push
stos
and
mov
es
add
imulb
adc
repnz
repz
mov
into
inc
ja
call
lods
das
insl
push
add
clc
or
mov
pop
iret
xor
sub
lock
push
cmp
fsub
or
movsl
clc
sub
pop
sti
cmpsb
shlb
xor
add
lock
repz
data16
add
push
imul
repz
arpl
jnp
lds
pop
nop
xlat
imul
aad
enter
mov
lds
jb
pop
sub
pop
dec
pop
mov
push
fwait
xor
lahf
push
push
aas
add
xor
push
dec
cltd
push
mov
lods
in
std
and
mov
jns
rolb
popa
jne
mov
sbb
scas
inc
mov
mov
jo
data16
mov
push
hlt
pop
cld
mov
repnz
ret
adc
lcall
push
repnz
mov
arpl
jae
lock
jmp
push
repz
push
sahf
ja
fs
gs
xor
add
testb
testl
mov
push
jbe
or
jno
out
add
sahf
test
pop
inc
pop
call
stos
cmpsb
fbstp
in
imul
jbe
lahf
jbe
inc
mov
cmp
xor
fidivl
push
jmp
dec
ljmp
and
fimull
or
adc
inc
or
xchg
cltd
fiaddl
push
mov
data16
rcr
inc
fsubrl
sarl
addr16
ret
test
push
jp
adc
mov
in
push
imul
std
jmp
stos
xchg
cmc
mov
nop
pop
ja
xor
pop
arpl
jmp
add
jne
outsl
adc
mov
adc
movd
in
dec
fwait
add
cmpsb
pop
xchg
and
inc
push
movsb
pop
xchg
int
aad
int
shr
imul
xchg
jle
sbb
jge
fs
jne
not
sbb
mov
lret
sti
aad
pusha
mov
in
repnz
movb
jb
mov
ficoml
test
inc
push
hlt
ljmp
in
fadds
mov
mov
stos
inc
insl
aam
pop
dec
and
mov
jns
lret
mov
sarl
cwtl
test
push
ljmp
lods
int3
sub
add
push
mov
push
xchg
lds
xor
shrb
call
mov
push
vpsubq
fisubs
inc
xchg
inc
cmc
inc
push
scas
nop
inc
movzbl
xor
cmp
mov
arpl
jnp
mov
push
mov
jo
rcrl
inc
test
xor
outsl
lock
in
gs
mov
pop
roll
mov
ja
lret
sarb
mov
mov
inc
jp
cs
bnd
sbb
adc
mov
repz
hlt
sub
cmp
aam
inc
nop
push
cwtl
sbb
pop
xor
repnz
add
stos
test
push
or
ret
push
sbb
push
fldl
push
adc
bound
push
insb
cmpsb
jbe
cmpb
cmp
dec
icebp
push
xchg
out
sbb
fisubrl
test
daa
les
and
mov
mov
inc
inc
push
cmp
fcomi
fists
test
je
int3
test
je
es
shl
cmp
sbb
adc
movsb
xor
fdiv
xor
pop
mov
mov
mov
push
adcb
aas
jg
shl
pushf
arpl
mov
scas
andl
scas
push
popa
add
or
enter
outsl
mov
je
add
outsl
jae
outsb
cmpsb
stos
jg
dec
inc
dec
int
add
inc
flds
push
sti
imul
mov
mov
in
fucomp
adc
pop
inc
inc
insb
dec
xchg
sbb
lahf
scas
mov
adc
fst
in
sbb
and
mov
inc
nop
pop
pop
fadd
push
fmuls
lods
insl
or
dec
or
xchg
and
mov
addl
adc
push
enter
mov
cwtl
sahf
pop
in
aam
rclb
push
mov
testb
movl
into
jmp
pop
cltd
inc
and
cmpsb
js
sub
add
lcall
sahf
call
loop
stc
iret
leave
xor
mov
imul
push
mov
push
dec
aam
rcl
mov
pop
pop
jnp
in
and
push
testl
orl
das
push
dec
js
cmp
push
xor
ret
outsb
mov
int3
mov
push
push
mov
pop
fdivr
mov
out
out
fsubrl
fbstp
add
or
daa
mov
das
xor
aam
insl
push
mov
xchg
jmp
mov
movsl
in
mov
xchg
xorl
shr
aad
xadd
fstps
fisubl
subl
fistpll
mov
lds
sub
dec
aam
subb
mov
sub
int3
cmp
push
lret
xchg
jbe
jae
lret
jno,pn
cmp
arpl
fisubs
in
mov
jl
and
mov
mov
clc
jns
xchg
jo
jo
xor
xor
outsl
push
lock
push
cmp
imul
lahf
mov
js
out
stos
pop
inc
ja
add
int
aad
int3
and
shl
and
pop
or
push
and
popa
pop
mov
das
inc
sbb
daa
call
lahf
stos
mov
sbb
stc
xchg
movsb
jmp
addl
jnp
test
sahf
dec
xchg
mov
or
xchg
add
iret
or
cmpsb
shll
and
bound
push
shrb
in
stos
mov
div
add
addl
or
stc
add
idivl
push
fcoml
pop
jle
xor
mov
push
add
or
add
mov
ds
lods
push
mov
loop
push
js
scas
cltd
lahf
mov
lods
sub
adc
or
sahf
stc
ret
mov
adc
or
fwait
jne
jp,pt
scas
jmp
mov
inc
sbb
out
or
fisttps
lea
in
mov
pop
ficompl
test
cmp
add
pop
add
inc
imul
cli
testb
push
cmp
xchg
mov
lds
clc
push
and
lret
fsts
xor
ret
aad
movsl
or
dec
inc
movsb
jg
jnp
mov
jmp
imul
or
jmp
and
and
jb
or
mov
pop
add
pop
out
loopne
inc
ja
sbb
mov
and
pop
push
sub
aam
cs
cmp
loopne
jno
push
pop
mov
test
popl
inc
bnd
es
jo
mov
pop
aas
xor
xchg
ds
sub
clc
cmc
arpl
jle
xchg
loopne,pn
mov
iret
lahf
add
in
shr
sub
loop
inc
jae
test
mov
popa
add
xlat
lret
out
sub
lcall
mov
pop
mov
into
lret
inc
scas
xchg
iret
in
leave
push
and
pop
lods
sbb
pop
push
imull
ret
jle
les
fimuls
and
add
pop
hlt
xor
add
xchg
cmp
mov
adc
movsl
or
inc
push
aas
shlb
jl
sbb
sub
pop
in
mov
fisubrl
pop
and
mov
and
insl
outsb
jmp
in
sub
pop
std
addb
cmp
push
dec
lret
xchg
arpl
pusha
pop
shrl
sbb
pusha
in
sbb
xchg
stos
mov
pop
ss
int
aaa
sbbl
lea
or
xchg
jno
sti
daa
add
arpl
xchg
jecxz
fisubrl
test
mov
mov
jl
mov
xor
leave
sbb
or
jmp
or
pop
fs
das
pop
rcll
aam
or
pop
jnp
cs
sbb
adc
xor
push
cwtl
pop
mov
popa
lods
sbb
inc
sub
mov
mov
lods
ja
dec
add
or
std
dec
and
lcall
les
stos
mov
mov
push
jnp
pop
jno
insb
mov
imul
xchg
pop
ds
push
test
stos
out
shl
pop
enter
cltd
int
push
dec
loopne
mov
stc
popf
popa
mov
push
in
mov
dec
cmp
rorl
and
jmp
push
lahf
push
sarb
insb
fwait
cmp
lea
pusha
or
jbe
jge
dec
xor
jno
fs
pop
leave
xorl
push
push
movsl
and
subl
arpl
sub
mov
scas
or
rorl
scas
stc
mov
hlt
adc
dec
inc
andl
cli
js
rcrb
loop
mov
sbb
popa
mov
xchg
outsb
notb
ljmp
mov
fs
jns
cli
push
mov
mull
cwtl
dec
insl
xchg
mov
jge
sub
ljmp
xchg
loop
daa
pop
xor
icebp
dec
outsb
dec
add
inc
aad
xchg
pop
or
sbb
movb
out
xchg
pop
es
jnp
jle
mov
sub
ret
and
and
orb
mov
leave
icebp
jmp
sarb
bound
inc
and
lahf
jle
movsb
or
sti
enter
imul
movsl
dec
jle
add
inc
sub
mov
and
leave
push
jnp
outsb
fcomi
inc
xchg
xchg
or
xlat
sbb
add
mov
adc
jecxz
enter
cmpsb
js
dec
pop
push
inc
pop
push
nop
kandw
mov
pusha
xchg
popa
jb
sub
loopne
fcomi
mov
jae
in
push
mov
mov
and
pop
ja
or
dec
cs
pushf
ljmp
faddl
clc
add
out
push
cmpl
jge
shrl
dec
and
cmp
jns
rcl
jmp
inc
out
leave
ljmp
cmc
add
push
sbb
std
mov
cld
sti
test
xchg
push
pop
cmp
int
stos
xchg
fisubs
addr16
sti
sbb
aaa
pop
sbb
cmpsl
jle
or
mov
cmp
insb
push
je
mov
daa
adc
xchg
adc
ss
dec
or
aam
lcall
ss
xchg
adc
hlt
inc
das
out
cwtl
mov
ljmp
xchg
mov
bound
jnp
dec
mov
aas
rcrl
and
inc
ljmp
fwait
mov
pop
push
lods
push
stc
sub
stos
loop
mov
xchg
jns
inc
dec
cmc
loope
fcoms
stos
pop
jne
rol
test
int3
add
pop
xor
lods
es
push
cmc
xor
pop
movsb
mov
pop
mov
fsubs
cltd
cmp
cld
xor
jmp
xchg
pop
hlt
fadds
ljmp
mov
ficomps
inc
add
add
mulb
push
movsb
ss
lret
push
fs
mov
pop
test
outsl
das
aad
jmp
dec
push
push
jl
test
rcl
andb
mov
repnz
or
inc
lret
adc
decb
cmp
fcompl
push
lret
sbb
cli
add
aam
loopne
push
add
jle
adc
mov
jae
lea
push
xor
jb
cmp
in
mov
dec
adc
pusha
aaa
fwait
imul
or
decb
js
jle,pt
push
mov
lcall
dec
into
jb
pop
xlat
cmp
mov
add
jmp
cmp
outsb
pop
push
int3
fisubrs
dec
jne
repz
cmp
adc
cmp
mov
inc
testl
mov
es
rcrl
sub
sbb
sbb
sbb
in
lock
mov
repz
push
sbb
lahf
ja
mov
xor
jne
loopne
pop
sub
arpl
cmp
in
js
test
repnz
xlat
pop
ja
lea
insb
ss
icebp
or
dec
rcr
in
out
xchg
sarb
arpl
push
inc
push
hlt
cmp
mov
pop
jmp
pop
jae
cli
lahf
lret
sbb
lcall
shll
stos
inc
push
loopne
rorl
xchg
xchg
push
push
adc
xor
out
xor
fnstenv
adc
mov
shrb
insl
mov
add
mov
cmp
mul
sbb
sbb
mov
shlb
fdiv
push
or
dec
test
cmc
cmpsl
call
pusha
orl
les
movq
adc
mov
push
jbe
shl
fistpll
mov
aaa
inc
cmp
movsb
inc
loopne
cs
mov
or
cmp
mov
into
push
iret
mov
movsb
into
outsl
fmuls
mov
jnp
add
and
adc
std
mov
stos
int3
xor
mov
xchg
cmp
fwait
ss
lock
sbb
das
add
insb
test
xor
loop
sti
inc
mov
cli
andl
xchg
into
xor
cmp
out
push
sub
movsb
and
dec
sbb
lock
loop
stc
jg
mov
sarb
movl
cmp
push
cmp
jb
fnstcw
or
repz
std
bound
testb
inc
mov
mov
popf
sti
or
test
xorb
sarb
xchg
loop
xor
add
jnp
or
shll
movsl
push
loope
cmp
lret
stc
loope
int
sub
jp
loop
inc
xor
std
cmp
cmc
adc
mov
xchg
cmp
je
mov
popa
jo
enter
mov
shlb
xor
push
pop
xlat
sbb
pop
arpl
dec
push
adc
mov
fmull
and
dec
dec
mov
sbb
cmp
mov
mov
pop
in
stc
test
jae
cmp
sti
fnsave
mov
shlb
aaa
sbb
mov
inc
mov
mov
cmp
fists
pusha
out
daa
jl
adc
test
or
addl
mov
sbb
xchg
popf
sahf
jg
inc
adc
addr16
in
stc
pop
fldl
adc
push
dec
fcomps
test
fdivr
imul
and
cld
xor
sbb
sbb
aas
subl
test
mov
mov
hlt
iret
jle
in
aas
jl
inc
inc
push
jbe
int
jecxz
sarl
rcrl
dec
xor
aaa
js
dec
dec
cmpsl
aas
loop
cli
mov
adc
shl
push
fwait
subb
iret
lahf
push
imul
lock
bound
in
inc
mov
in
dec
stos
bound
mov
mov
vphadduwd
push
adc
and
test
pop
in
jle
or
outsl
test
fwait
and
addps
clc
xchg
push
jnp
shlb
jp
mov
fs
push
push
icebp
loopne
sub
sub
mov
xor
hlt
push
lahf
pop
push
sub
aad
mov
mov
mov
rcl
fsubs
sbb
sub
dec
incl
loope,pn
jp
cmpb
xchg
jg
popa
and
xchg
jo
sub
outsb
fiaddl
inc
test
outsl
mov
pop
add
xchg
cmpsb
icebp
xchg
mov
mov
mov
mov
arpl
loope
inc
jnp
push
gs
jle
fcoms
fsubr
add
repnz
mov
ja
lds
or
ja
sbb
mov
into
daa
push
cmpsl
fldt
xor
enter
arpl
push
lea
xchg
push
or
inc
enter
xor
jecxz
pop
pop
push
xor
popa
and
popf
mov
cmpsl
insl
push
mov
inc
push
clc
hlt
jnp
in
push
std
aas
lods
xchg
mov
mov
in
mov
pop
lret
ret
or
inc
shrb
inc
push
mov
imull
daa
push
push
stos
arpl
je
stos
out
loope
sbb
pop
cld
sbb
imul
sub
cmp
faddp
loopne
inc
nop
add
roll
sub
or
aad
dec
mov
pop
adc
pop
jmp
lret
lea
cmpsl
jno
dec
popf
movsb
mulb
push
movsl
frstor
scas
xor
mov
arpl
nop
hlt
in
loope
mov
adc
mov
push
mov
inc
xchg
fdivs
fwait
jecxz
push
add
push
jae
xchg
xor
setp
roll
insb
inc
push
inc
movsb
xchg
loopne
andl
sub
out
in
nop
jp
insl
adc
gs
cld
arpl
pop
jge
daa
ret
sbb
xchg
mov
dec
cmc
stc
hlt
sbb
sbb
bound
mov
push
cmpsb
xchg
dec
adc
mov
orl
outsb
call
mov
mov
xchg
fsincos
pop
or
cmpsb
jno
add
pushf
jne
inc
or
hlt
fldl
ffree
xor
es
sahf
stos
mov
sbb
sbb
int
sti
je
icebp
adc
jns
xor
pop
and
jmp
iret
mov
outsb
add
adc
pop
push
and
subl
icebp
jbe
adc
jg
insl
cwtl
jnp
lea
mov
add
jl
jp
push
out
lock
xor
add
mov
xchg
mov
fstpt
rcl
or
inc
push
mov
or
imul
lea
or
clc
pushf
jmp
mov
mov
sbb
fs
cmc
mov
cli
shl
loope
xchg
les
mov
sahf
sub
jnp
ss
and
stos
inc
dec
dec
inc
std
or
std
pop
in
fcmovbe
cmp
and
dec
pusha
add
add
push
and
leave
lahf
cli
out
fwait
mov
cmp
sbb
xor
xchg
aad
push
sbb
adc
pop
cs
add
mov
mov
daa
pop
and
outsb
lock
jno
ret
out
jl
fcoms
sub
jmp
pop
jl
dec
xor
addr16
add
das
dec
cmp
pushaw
movsl
push
loope
push
or
xchg
ret
call
aad
fs
pop
mov
in
xor
js
loope
lret
sbb
or
int3
in
jl
daa
sqrtps
pop
iret
shll
in
xor
jg
xchg
inc
jns
xchg
xlat
sahf
aaa
mov
test
popf
ljmp
jo
xchg
pop
and
repz
lret
aad
outsb
add
in
sbb
ret
sbb
push
rcll
leave
and
dec
inc
jns
lock
cli
aaa
add
jmp
xlat
insl
es
lods
mov
mov
mov
jmp
add
out
mov
and
test
xor
repnz
cmp
mov
cs
pop
inc
in
mulb
jnp
jo
test
data16
int3
fld
mov
decb
movsl
mov
mov
int3
mov
cli
push
stos
gs
daa
out
inc
in
ror
push
or
lahf
cmpsl
jp
dec
movl
sbb
push
shlb
xor
lret
mov
jae
ds
jp
dec
int3
mov
ret
jg
data16
outsl
ds
or
iret
mov
push
lods
dec
or
sub
test
shlb
bound
mov
inc
rcl
cmpsl
mov
in
nop
ss
sbb
cld
xchg
sub
ljmp
fwait
notb
test
inc
xorl
leave
sbbb
push
sub
arpl
push
push
lcall
sbb
das
fimuls
xchg
hlt
mov
xchg
out
test
adc
ret
add
leave
ljmp
jmp
outsb
aad
mov
mov
rep
or
ds
in
xor
cltd
push
and
ret
jg
call
mov
insb
inc
out
mov
mov
xorb
sti
mov
push
jmp
mov
je
fs
inc
cmc
daa
mov
dec
add
stc
int3
mov
push
ret
adc
cmp
cli
and
inc
std
jge
popf
cmp
xchg
mov
lods
stc
les
or
mov
adc
arpl
mov
fistpll
xchg
sbb
inc
dec
mov
lods
lock
aaa
mov
xor
out
fwait
push
stc
dec
cltd
out
pop
push
roll
daa
dec
pushf
cmp
scas
sbb
fdiv
adc
aam
into
iret
push
sbb
xor
jmp
fdivrs
fsubrl
cmpsl
inc
out
hlt
push
les
addr16
or
movsl
xchg
dec
mov
rolb
notb
xchg
sbb
insl
inc
lret
mov
jae
push
int3
je
mov
and
sbb
leave
jbe
fsts
and
jae
mov
in
int3
mov
or
dec
rcrl
pop
and
adc
dec
push
daa
call
mov
mov
mov
imul
sub
pop
fildll
shlb
lret
ja
pusha
pop
push
in
or
sbb
arpl
clc
aam
adc
mov
and
mov
hlt
jge
xor
push
pop
pop
neg
aad
scas
ret
cmp
pushf
or
cmp
fstp
and
jmp
daa
lods
adc
mov
lahf
mov
sbb
jp
cwtl
repnz
gs
test
mov
jge
loop
lcall
ret
stos
pop
jae
mov
fistl
lret
test
or
lods
add
insl
mov
js
or
and
gs
xor
jle
das
aas
das
mov
sbb
hlt
imul
adc
inc
sbb
lods
ret
mov
ljmp
mov
dec
add
xorb
aad
sbb
pop
mov
pop
addr16
lahf
pusha
sbb
stos
dec
popa
jmp
lods
nop
mov
xchg
push
inc
sbb
movsb
pushl
jle
mov
test
int
jae
add
leave
adc
push
das
js
cld
mov
stos
mov
cld
lock
sti
mov
push
xchg
idivb
xchg
out
pushf
imul
loopne
dec
imul
enter
shll
out
sbb
sub
and
mov
or
outsl
pop
push
int
lods
cld
loopne
mov
aas
and
mov
out
mov
pop
push
int
test
shrb
xlat
sbb
clc
add
jmp
shlb
push
cmp
cmpl
out
imul
popf
cmc
lods
dec
sub
xor
dec
jb
jb
imul
out
mov
enter
mov
dec
cmpsl
xchg
dec
push
stos
mov
iret
imul
xchg
dec
dec
push
inc
sahf
dec
sub
mov
add
mov
shlb
adc
push
lret
cmp
scas
inc
xchg
mov
add
test
or
jb
mov
imul
out
subl
mov
cmp
adc
xchg
scas
scas
inc
clc
jmp
adc
lods
pop
jns
insb
inc
addb
pop
into
push
out
loopne
push
xor
pop
mov
ds
xchg
and
pushf
and
je
mov
mov
je
or
outsb
loop
nop
stc
push
xchg
test
jp
jne
lcall
mov
cmpsb
sub
jg
ret
shll
xchg
xor
lds
movsb
cltd
cmp
cld
and
xor
inc
dec
mov
imull
jl
pop
add
sub
xchg
loop
stc
dec
push
mov
or
ss
mov
cmp
mov
sub
sub
mov
and
inc
notb
add
mov
mov
js
sub
pop
rdpmc
pop
aas
mov
fisubs
mov
mov
loopne
es
insb
pop
pop
mov
inc
mov
xor
stos
sti
lahf
aas
push
out
popl
ret
shlb
sar
inc
out
inc
inc
shll
jg
xchg
test
dec
lret
xlat
aaa
mov
lods
mov
stos
jecxz
mov
stc
sub
mov
std
mov
ficompl
sar
mov
xchg
aas
rclb
inc
pop
ret
lahf
daa
dec
add
jmp
cmp
add
stos
mov
imul
clc
inc
dec
dec
les
inc
dec
push
pop
dec
push
enter
in
out
pop
das
xor
fdivp
pop
popa
add
dec
sub
rolb
hlt
cld
inc
pop
fidivl
jne
cmp
imul
test
mov
sub
loop
cmpsb
adc
push
mov
js
mov
das
popa
sbb
stos
outsl
pop
ret
cmp
scas
mov
bound
rcrl
pop
xchg
mov
stos
or
arpl
add
shl
sub
neg
push
mov
popa
jmp
rorb
mov
and
incl
mov
mov
out
mov
gs
lret
test
add
shld
cmp
insb
push
xchg
test
out
xor
mov
loope
xchg
add
test
or
and
fistps
call
fdivl
adc
add
fdivrl
pusha
xor
lock
dec
cmpsb
lock
dec
std
jl
out
sbb
xchg
or
popa
adc
nop
xor
hlt
mov
pop
and
aam
cmp
out
nop
into
mov
test
mov
add
int3
lods
mov
jnp
mov
jge
xchg
je
loopne
cmp
jnp
or
inc
insb
mov
jmp
ss
mov
std
add
sub
arpl
je
addl
mov
inc
push
mov
pop
dec
lods
jg
mov
pop
dec
js
stos
or
clc
cmpsb
sahf
adc
push
xchg
jp
add
mov
xchg
adcb
es
pop
pop
push
in
loopne
mov
pop
cmp
cmp
sbb
and
loope
popa
push
scas
das
mov
adcl
aas
clc
sub
out
adc
sbb
mov
jbe
jne
es
fisubs
repz
setg
xchg
sahf
push
push
push
and
jmp
andb
push
test
lods
lret
jno
push
sub
or
mov
mull
xor
jmp
sbb
xlat
lock
pop
sbb
fdivrs
cld
push
cmp
mov
outsl
insb
aaa
repnz
xor
inc
insb
cmp
jbe
pop
pushl
adc
mov
adc
adc
inc
into
cmp
xorl
loopne
add
aad
xchg
or
dec
ss
lock
mov
xor
sub
repnz
xchg
pop
imul
js
es
out
cmp
pop
push
xchg
mov
mov
sub
sbb
jp
dec
repnz
gs
leave
loope
dec
dec
int
lock
movsb
or
mov
cmp
xor
sub
add
xchg
notl
xor
jle
js
rolb
cld
int3
adc
fcmovb
jb
xchg
lds
lods
inc
adc
enter
mov
sti
inc
sub
insb
pop
pop
add
je
insl
push
xchg
leave
cmp
mov
and
adc
popf
rol
nop
call
mov
cltd
mov
lahf
push
pop
insl
mov
fldcw
jbe
xor
adc
and
sub
mov
ret
mov
jno
test
sub
mov
pop
sub
jmp
adc
out
inc
movsl
mov
test
lods
movsb
dec
cmp
xor
jmp
adc
sbb
xor
and
lea
sub
cmp
sub
fmull
movb
insl
stos
mov
ljmp
adc
push
je
fcmovnb
or
push
notl
iret
jl
loope
test
adc
mov
pop
iret
sub
addr16
out
cmpsl
sbb
aad
inc
idiv
jmp
in
in
fsts
iret
dec
jns
inc
insl
or
mov
fndisi(8087
mov
lret
test
aas
orb
adc
iret
xor
add
js
mov
fiadds
mov
js
push
and
and
pop
insb
push
cwtl
test
test
mov
jo
xchg
push
or
in
bound
mov
push
lods
outsl
fisubrl
xor
insl
mov
jno
jo
adc
aam
xor
jle
pop
arpl
das
pop
push
into
lcall
xchg
add
popa
outsb
lahf
outsl
leave
les
mov
fdivrl
or
mov
xor
fnstenv
mov
sbbl
mov
data16
xorl
jmp
insl
and
dec
in
add
jno
add
jo
jo
sbb
sub
lcall
mov
testl
inc
lds
xor
mov
mov
adc
les
loop
mov
push
sub
mov
in
adc
mov
les
daa
or
fwait
cmp
data16
sub
mov
sub
mov
shlb
js
hlt
insl
jmp
nop
xor
xor
push
jecxz
adc
shrb
mov
cmpl
pop
mov
add
in
pop
inc
add
fcomps
cmp
jecxz
or
push
loopne
pop
add
jns
negl
iret
inc
cmpsb
mov
stos
mov
lret
jae
and
fsubrl
ret
pop
mov
std
stos
xchg
add
pop
nop
push
test
divb
insl
sbb
mov
xchg
test
movsl
ja
mov
test
inc
mov
dec
jp
push
sarb
int
aad
push
jle
adc
out
push
insb
or
pop
ljmp
xor
or
adc
sbb
xchg
fdivrl
or
es
lds
inc
testb
stos
mov
lret
mov
popf
pop
cmpl
lcall
pop
insb
and
inc
repnz
mov
mov
cmp
push
mov
call
sarl
jnp
jg
jl
sarl
xor
push
sbb
sub
push
mov
imul
int3
adc
or
dec
sub
adcl
cli
adc
xor
mov
pop
push
or
mov
fisttpll
xchg
xor
pushf
cli
iret
mov
or
fisubs
jns
adc
lret
push
pop
lock
mov
xorb
fwait
xor
mov
and
sub
fwait
and
js
les
aad
test
imul
sbb
xchg
sbb
mov
jmp
arpl
mov
pop
shrb
lods
rcrl
adc
loope
mov
sbb
cmp
add
aas
cmp
mov
shrl
xchg
in
push
adc
add
shrl
mov
xchg
mov
addr16
ljmp
lahf
cli
sbb
fiaddl
pushf
push
rcll
fldt
jle
push
loop
addr16
cwtl
mov
jno
add
pop
mov
cmp
xchg
insl
or
cmc
loopne
jmp
pusha
movsb
mov
ds
in
cmp
in
fisttps
mov
shrb
js
push
cs
aas
xchg
std
scas
mov
jmp
sti
fstl
ja
clc
std
xchg
loope
test
sbb
mov
push
je
stos
int
xorl
addps
repz
mov
add
fwait
pop
lods
inc
mov
stc
xor
out
push
aas
dec
adcb
sbb
xchg
add
lret
dec
lcall
mov
aaa
das
jp
jmp
gs
push
sub
loope
mov
ljmp
pop
shl
sbb
orl
out
jno
lcall
inc
inc
push
adc
push
adc
clc
mov
sub
das
loope
xchg
mov
ds
nop
mov
push
sbb
adc
or
ret
gs
jmp
movsb
cmp
add
les
scas
sub
cmc
int
int3
lock
filds
sbb
arpl
sub
popa
and
jmp
aas
push
dec
aad
mov
cmp
and
fdiv
jno
dec
or
cmp
aam
insb
or
fs
jbe
in
adc
mov
iret
out
or
push
hlt
and
dec
mov
jne
pop
pop
adc
xor
js
and
hlt
jecxz
scas
es
push
and
in
negl
insb
movsb
jecxz
push
loope
push
jo
pop
cmpsl
xchg
push
adc
mov
add
mov
xor
adc
xchg
aad
add
jecxz
jae
out
inc
cmp
fisubl
add
sbb
rolb
adc
stc
adc
cli
xchg
mov
data16
rorb
xor
imul
divl
pushf
xchg
cmc
mov
movsl
inc
add
mov
cmp
pop
cmp
je
adc
lcall
ja
and
sub
fs
inc
ss
imul
cmc
and
xchg
ljmp
push
out
add
sti
cmp
ss
jo
scas
mov
repz
mov
ss
dec
sbb
mov
dec
cmpsl
sbb
test
mov
pop
mov
push
dec
xor
insl
xchg
jo
jl
jno
insb
inc
ficompl
sbb
and
ret
icebp
sub
subl
je
mov
dec
lret
push
divl
jns
mov
cltd
and
out
bound
int3
movl
hlt
sbb
pop
adc
test
fistps
sub
xchg
inc
neg
cld
ljmp
jmp
push
movsb
outsb
in
jbe
pop
stos
adc
negb
or
pusha
ja
rcl
and
jge
pop
clc
enter
sbb
and
jp
popl
xor
inc
and
xlat
dec
in
sbb
and
fldl
inc
cmp
jne
mov
xchg
push
lcall
fld
lods
jle
cmp
cmp
loop
loope
xchg
out
xchg
loopne
xchg
mov
or
cmpsb
imul
repz
xchg
loope
fadd
push
mov
leave
scas
loopne
add
cmovle
loopne
ljmp
adc
pop
dec
das
mov
xchg
push
test
cld
mov
and
xchg
xor
mov
into
sub
out
aad
shlb
pop
aam
xchg
and
lcall
xchg
add
xchg
shrb
ljmp
xlat
jmp
mov
inc
outsb
rcl
mov
loopne
imul
push
dec
andb
test
mov
aas
dec
xor
scas
add
and
xchg
sar
int
add
loopne
mov
push
mov
or
xor
and
lds
gs
mov
mov
insb
mov
mov
fs
adc
or
mov
lret
je
pop
sub
inc
mov
stos
stc
fcmovu
mov
insb
pop
push
cmp
or
inc
xchg
pop
xchg
xchg
jns
or
test
cmc
lahf
into
cmp
xchg
loop
inc
push
mov
das
push
rcrl
pop
and
jns
jno
movsb
or
iret
cmp
xchg
pop
dec
push
shlb
add
mov
imull
sbb
push
and
insl
sub
lret
mov
js
pop
or
out
push
and
xor
loop
and
push
inc
fbstp
dec
jp
call
andl
lods
xor
lcall
int
push
jno
xchg
push
mov
imul
lret
sbb
sbb
sbb
ret
and
cmp
pushf
mov
ret
cmc
push
shrb
xchg
pusha
ret
dec
xchg
inc
fwait
adc
xlat
cs
or
jns
dec
mov
in
nop
adc
inc
lea
mov
stos
xchg
add
adc
mov
adc
dec
push
mov
lret
sub
sub
jmp
sbb
sbb
or
or
xchg
arpl
cmp
out
sahf
jle
fiaddl
cli
cmp
push
js
ret
sub
mov
sahf
scas
push
inc
push
lcall
add
mov
push
pushf
and
popa
lahf
dec
xlat
add
lret
sub
mov
push
or
xchg
shr
inc
xchg
gs
movsb
repnz
push
mov
daa
mov
js
add
out
pop
test
mov
insl
stos
out
cltd
mov
into
cmp
mov
jnp
cli
lret
xor
fildl
call
dec
xchg
les
subb
shlb
cltd
loopne
loop
dec
bound
push
push
add
mov
mov
or
out
xchg
imul
xor
outsl
sub
lea
dec
daa
and
xchg
call
dec
and
inc
mov
xor
xchg
pop
pminub
imul
lret
jmp
negb
out
int
jp
stos
mov
jo
xchg
push
lret
lods
inc
mov
dec
nop
dec
sub
xor
loope
hlt
lahf
pushf
orl
loope
dec
test
or
insb
pop
imul
subl
jae
xchg
cltd
dec
pop
cs
inc
lds
jo
aam
out
adc
and
aaa
cltd
pop
rclb
mov
ljmp
lds
and
sbb
jns
imul
adc
lret
inc
mov
scas
sub
and
pop
popf
jmp
sub
sbb
mov
bound
std
scas
mov
cs
pusha
jno
lret
sahf
add
push
fnstcw
lock
repnz
rcl
pop
mov
aad
xchg
or
jbe
mov
imul
ds
push
loope
inc
and
jbe
or
stos
lods
lods
stc
iret
and
pop
and
es
data16
dec
cmp
mov
ss
jnp
scas
pop
pop
out
out
sub
pop
adc
loop
adc
test
push
xchg
push
lds
sub
cwtl
in
fcomps
jno
mov
push
mov
xor
add
dec
rorl
push
gs
sahf
sub
adc
lock
jo
cmc
loopne
mov
popf
pop
mov
cmp
fmulp
clc
cmpsb
lret
cmp
ss
jg
pop
or
or
add
outsb
addr16
jb
subl
dec
scas
jno
sub
cmc
pusha
sbb
clc
xchg
movsl
sbb
ljmp
repz
jo
pop
mov
das
xchg
cmpsl
jno
and
repnz
stc
xchg
adc
addr16
inc
psubd
push
xor
sbb
stos
outsl
adc
icebp
notl
mov
mov
cmpsb
je
cmp
add
fistl
jg
fisubrl
mov
mov
xchg
jne
int3
outsl
and
dec
stos
flds
pop
in
lods
xchg
add
enter
xchg
pop
and
mov
mov
daa
mov
bound
or
mov
mov
dec
cwtl
shlb
xchg
in
mov
jp
es
icebp
jecxz
add
int3
ffreep
inc
gs
lock
and
fs
loop
jg
add
xchg
pop
dec
sahf
out
decb
pusha
xor
or
push
pusha
movl
divl
sbb
xor
mov
test
or
mov
inc
jle
add
pop
aad
fldcw
int
mov
lods
cwtl
cmpsl
popf
inc
out
inc
add
adc
faddp
adc
or
test
std
jecxz
movsl
rcll
fdivs
daa
outsb
xchg
mov
adc
xor
cmp
push
das
daa
ficompl
lock
mov
ljmp
ljmp
dec
xchg
outsb
divb
sbbl
lahf
repz
lret
sbb
xor
movsl
repz
adc
mov
xor
adc
hlt
out
dec
pop
fsubl
xor
or
sbb
push
jae
call
mov
les
in
add
stos
jl
adc
sti
jne
cmp
test
in
adc
pop
mov
mov
mov
adc
mov
cmp
or
mov
test
inc
repz
jmp
xor
pusha
pop
mov
scas
jne
sbb
xchg
cld
push
jl
pop
jge
aaa
cmc
push
iret
jno
lret
cmp
fs
xchg
aas
push
jle
pop
das
mov
jle,pt
ja
arpl
lret
icebp
cmpsl
sbb
mov
pusha
cli
mov
push
mov
cld
sbb
push
arpl
mov
mov
sub
add
test
push
dec
xorl
push
mov
call
out
pop
cmp
loope
jae
sbb
cltd
jb
dec
mov
fisubs
in
in
mov
mov
test
or
xor
into
mov
inc
dec
inc
movl
xchg
insl
insb
ja
fwait
adc
add
dec
lods
xchg
pop
jp
dec
adc
das
pop
and
cltd
insl
xchg
add
sbb
xor
xor
xchg
in
push
arpl
add
xchg
cmp
jecxz
int
xor
fidivs
int3
daa
sub
fisubs
mov
push
xor
push
pushf
jmp
or
mov
xor
add
lods
fbld
jns
shl
fiadds
out
sub
repz
aam
fsubrl
popa
push
cmp
sub
xchg
mov
scas
std
ret
mov
out
pop
cltd
in
xchg
sbb
xchg
iret
shlb
sti
ljmp
test
scas
jns
das
mov
dec
xchg
test
subl
jne
and
das
aas
loopne
cmp
xchg
or
enter
call
jns
inc
push
mov
lret
push
or
sub
xor
pop
call
adc
mov
dec
mov
or
inc
in
xchg
rcll
mov
xchg
imul
pusha
sbb
outsl
sahf
sbb
lcall
xchg
mov
cmc
les
out
sti
xchg
mov
pop
rorb
in
xor
adc
in
loopne
xor
xchg
xchg
popa
pop
shll
decb
cmp
inc
sahf
fadds
fdivr
pop
push
pop
inc
cmpsl
and
jae
imul
movsb
add
lods
stos
loopne
cmp
dec
or
sbb
test
mov
enter
inc
mov
testb
or
sbbl
cwtl
movsb
mov
adc
xchg
mov
mov
mov
inc
jmp
xchg
xchg
scas
or
imulb
push
enter
cmpsl
inc
mov
cwtl
cld
adc
dec
imul
jle
negl
xchg
mov
out
movsb
xchg
nop
fstps
cmp
xchg
dec
es
lods
into
push
mov
jge
inc
jo
imul
test
pop
push
popf
test
sub
ss
out
or
push
cli
cld
pop
push
and
es
jns
divb
movsb
jae
push
das
pop
mov
mov
fdivs
iret
xchg
aam
out
leave
sub
sbbb
lret
insl
scas
lock
or
lock
mov
ja
mov
pop
push
xlat
sub
add
push
nop
push
popa
mov
add
push
pop
popa
jmpw
pop
xor
push
mov
dec
scas
mov
cmp
out
push
push
dec
mov
repnz
xchg
sbb
inc
test
mov
jne,pn
or
push
and
es
adc
testb
stos
sbb
nop
pusha
fs
rcl
test
jmp
cmp
mov
mov
cli
push
imul
jl
loop
and
rcrb
pop
sbb
cwtl
add
enter
stos
repz
cmpsb
sub
pop
inc
jp
leave
loopne
out
push
and
repz
clc
pushf
repnz
sahf
mov
in
mov
mov
or
loop
jmp
lock
sub
add
xchg
sbb
add
aam
outsl
cmp
mov
out
inc
rcrb
jg
cli
in
pop
insl
push
sub
lret
movups
mov
inc
jns
mov
mov
lcall
sbbb
add
fwait
jp
adc
inc
mov
jnp
ss
jl
aad
jns
xchg
sub
sub
test
pop
mov
jne
aas
mov
or
jmp
mov
mov
adc
mov
fcoml
daa
sub
aaa
shr
xchg
fsubl
mov
add
xor
scas
sbb
push
jle
pop
lcall
inc
cmp
or
cli
and
pop
mov
xor
xor
aas
outsb
cmp
dec
dec
pop
jae
mov
pop
gs
dec
dec
ss
mov
popf
rorb
rolb
mov
mov
fistpl
pop
sub
ret
mov
pop
add
test
add
inc
scas
imulb
jecxz
sub
sub
fdivrl
sarb
je
fcomp
test
cltd
and
pushf
sahf
add
or
mov
test
repnz
mov
xor
dec
lds
xchg
fs
int3
cld
pusha
add
cmp
pop
mov
mov
in
lods
les
lcall
test
fisubs
mov
clc
cmp
inc
push
hlt
in
std
imul
in
lods
add
pop
ficompl
scas
push
into
fchs
test
adc
sti
mov
jae
push
clc
mov
fdivrs
leave
shrb
mov
xchg
pushf
sbb
sub
aas
push
lea
dec
bound
insl
adc
add
cld
pop
mov
scas
int3
and
jle
add
sub
jmp
and
pushf
push
lret
fwait
adc
mov
pushf
fmuls
mov
xchg
inc
mov
pop
sub
inc
cli
pop
stc
mov
cli
jns
movb
arpl
jge
jns
and
jg
arpl
lcall
arpl
dec
sti
xchg
in
pop
pop
mov
and
sub
fstl
or
mov
cli
cltd
cwtl
jp
cmp
inc
push
repz
sub
sub
dec
xchg
dec
popa
jg
test
xchg
loope
shll
inc
mov
outsl
sbb
push
jge
std
add
pop
rcll
dec
mov
iret
ret
icebp
mov
test
enter
jb
push
push
gs
xchg
out
dec
xchg
push
test
test
fbstp
jl
inc
jecxz
jae
and
call
or
lcall
and
sub
mov
pop
leave
out
add
push
push
sbb
inc
xor
or
and
mov
loope
mov
insl
fstpl
call
push
add
add
xchg
mov
roll
imul
push
and
mov
jo
cmpsb
mov
jl
cs
int3
cmpl
and
jmp
mov
lods
pop
sbb
hlt
rorb
xchg
jbe
and
push
fmull
mov
ljmp
cwtl
shll
mov
jb
les
mov
xor
inc
lds
inc
cwtl
out
imul
movsl
ds
ja
jmp
js
sub
mov
xor
jns
ja
push
pop
sarb
jae
or
mov
fs
inc
sbb
or
sub
inc
je
lods
and
ss
orb
repnz
lcall
add
add
and
ret
sarb
adc
cmp
mov
addb
inc
adc
mov
pop
int3
mov
iret
dec
mov
or
mov
clc
pop
sub
js
movsb
ret
push
mov
xchg
dec
adc
stc
mov
cli
shlb
sbb
sbbb
or
adc
sti
dec
jnp
jmp
adc
dec
testb
sbb
inc
sti
stos
pop
js
test
dec
mov
sbbl
filds
jae
jbe
mov
mov
or
int
push
aad
in
clc
imull
or
and
mov
shrl
inc
jge
push
fnstenv
add
and
cmp
divb
xchg
cmp
les
mov
mov
cmp
cmpsl
push
fldcw
mov
movsb
add
gs
jne
cli
shrl
push
popa
push
fcomps
lds
jns
mov
push
jne
sti
jo
inc
push
dec
subb
mov
popl
fistpl
xor
mov
cmpsb
fistpll
pop
scas
mov
repnz
sbb
sub
and
mov
push
movl
fs
arpl
push
or
xor
repnz
mov
addb
dec
add
popf
xchg
outsl
push
xlat
ret
stos
cmpsb
add
mov
cmp
push
bound
incl
imul
inc
xchg
and
xchg
lahf
sbb
and
es
push
aas
sbb
xchg
cs
into
mov
lret
inc
pop
jl
jnp
ds
mov
arpl
adc
mov
sbb
ficoms
idivb
scas
push
repz
sbb
add
adc
movsb
negb
pop
dec
mov
jns
mov
adc
notl
push
popa
pop
fidivrl
int3
filds
dec
lods
stos
pop
test
ret
add
repnz
scas
xor
fdivl
pop
pop
sbb
pop
add
cmpl
movsl
and
call
cwtl
clc
xchg
pusha
pop
pop
cmpb
jne
aam
adc
aaa
jo
ret
adc
out
es
adc
ja
test
lcall
adc
push
loope
push
je
rcll
sbb
outsl
cmp
js
push
dec
or
pop
adc
das
pop
out
or
popa
popf
xor
mov
adc
in
pop
gs
int3
pushf
cmpsl
push
les
push
add
push
xchg
mov
add
gs
xchg
and
sub
pop
outsl
fwait
out
fidivrl
adc
fcmove
dec
lds
roll
pop
lods
btc
imul
out
cli
mov
sahf
sbb
gs
or
into
xor
sub
sub
xor
adc
int3
add
ds
aaa
jecxz
out
mov
rorl
iret
shlb
adc
push
test
mov
xchg
daa
add
pop
dec
lret
testl
mov
pusha
lret
es
aad
fiadds
sbb
mov
movsb
adc
sub
xchg
xor
dec
scas
sub
lret
jbe
fists
shlb
mov
out
dec
lea
pop
inc
and
aaa
jne
lcall
cwtl
enter
pop
push
outsl
lea
add
pop
jmp
or
inc
mov
mov
mov
loopne
shl
push
xor
mov
fnsave
push
fdivl
sarl
sub
xchg
push
push
pop
dec
cmpsl
fsubrs
mov
jne
mov
sub
stos
xor
gs
fstpt
dec
into
imul
mov
dec
mov
xchg
imul
sub
stos
xchg
or
sub
mov
xchg
ss
movsl
push
lods
insl
xchg
scas
jl
sbb
dec
sbb
mov
pop
and
stos
popf
pop
into
adc
es
lret
cmp
xchg
in
hlt
sbbl
pop
fs
outsl
inc
fisubl
adc
hlt
mov
ret
ret
nop
pop
inc
cmp
fwait
xor
and
sub
dec
rcrl
dec
fldcw
jnp
jmp
sti
in
inc
rclb
imul
mov
mov
inc
add
repz
or
bound
xchg
sbb
cld
imul
mov
adc
scas
mov
xlat
xlat
xchg
inc
pop
repz
and
loopne
pop
jo
int3
in
or
rcll
cli
out
cli
lret
pop
adc
inc
dec
leave
insb
push
lods
pushf
push
xlat
inc
cmpl
shll
dec
and
dec
cwtl
add
das
dec
cmp
adc
fisubs
hlt
sub
push
sub
lock
add
pusha
rcl
push
bound
and
ja
xor
imul
push
sahf
sbb
enter
addl
insb
push
xor
jge
pop
rolb
xor
js
xchg
push
inc
cli
andl
sub
jno
sub
movsb
add
adc
out
sarb
sub
xchg
dec
cmp
push
loopne
neg
loope
dec
xor
mov
test
cmpl
stos
rcrl
cmp
xchg
jnp
add
push
push
cmp
pop
adc
incl
shrl
inc
mov
js
lds
test
mov
out
push
sbb
push
cs
icebp
faddl
pusha
jo
inc
jecxz
mov
push
dec
xor
bound
les
push
cmp
jp
loop
cmp
ret
mov
loope
in
in
addr16
in
push
fldenv
lds
xchg
sub
into
lret
mov
lock
incl
sub
pop
inc
push
mov
mov
sbb
idivl
jmp
int
xchg
dec
push
test
mov
push
cmp
sarb
push
jmp
ljmp
cmc
addr16
push
gs
les
in
adc
repnz
jmp
xor
outsb
testb
scas
and
std
mov
movsb
loope
push
push
inc
mulb
shl
sbb
add
insb
cltd
cmp
int
mov
iret
xchg
rorl
sbb
pop
das
test
dec
jno
dec
cwtl
jbe
cmpsb
sbb
movq
and
neg
push
loopne
imul
imul
scas
fsts
lcall
sbb
lock
push
dec
in
mov
insb
push
inc
jb
jecxz
and
lcall
dec
into
sbb
jge
adc
dec
out
add
les
xchg
and
dec
cmp
jne
inc
pusha
cmpsl
stos
test
pop
loope
cwtl
ret
mov
loop
and
sbb
sub
bound
movsb
xchg
into
add
mov
jecxz
aam
or
xor
or
and
inc
push
push
addr16
or
push
dec
es
and
bnd
push
clc
clc
sub
mov
push
sub
lret
rorl
dec
out
or
cli
enter
jle
lret
sbb
push
out
ss
add
fnsave
pop
mov
popf
jg
xchg
add
mov
mov
cmc
cmpsb
jle
lret
fwait
mov
loop
jb
mov
aaa
cmpsl
mov
cld
mov
sub
xchg
scas
and
push
xlat
fists
lods
test
mov
insl
sub
mov
xchg
mov
mov
out
lcall
inc
pop
mov
in
push
outsl
arpl
mov
jmp
push
mov
insl
push
jo
jp
lahf
pop
jne
aas
cmp
clc
jae
xchg
push
xchg
mov
and
pop
aaa
inc
lock
push
dec
push
rorl
loop
xor
pop
out
xlat
cwtl
std
mov
in
fs
pop
mov
dec
pop
cli
push
lods
push
inc
fisttps
and
push
and
filds
cli
mov
subb
hlt
sahf
mov
sbb
xor
mov
pop
xchg
jle
lods
in
pop
mov
fsubl
js
lahf
cli
push
pop
mov
xor
hlt
mov
cs
mov
je
cmp
loopne
test
add
add
pop
sub
outsl
and
imul
jno
lds
jne
loop
cwtl
test
insl
sbb
pusha
jmp
add
mov
add
rorb
lcall
xchg
push
mov
lcall
cs
pop
lods
pop
jp
cmp
in
jbe
mov
iret
ss
add
ja
cmp
or
lea
in
sub
test
fildll
loope
aas
lret
pop
ret
fdivl
and
dec
in
fdivr
pop
mov
push
xchg
sbb
out
cmp
in
jbe
add
dec
leave
sbb
sahf
pop
les
shll
mov
fwait
sub
sbb
arpl
push
ficoms
hlt
xlat
pop
mov
inc
mov
dec
cmp
imul
cld
int3
pop
jb
sbb
mov
mov
leave
popl
xor
jo
sub
and
jl
jno
arpl
mov
sub
dec
push
adc
xchg
in
sub
lods
pop
fisubrl
aaa
adc
lcall
sbb
imul
out
mov
adc
bnd
leave
fwait
insb
inc
repz
adc
add
arpl
jae
call
push
mov
dec
and
push
rcr
stos
and
pop
adc
shll
loope
mov
in
fdivrp
mov
push
push
mov
loope
xchg
mov
fmuls
mov
cs
push
mov
or
clc
test
ljmp
test
ds
xchg
mov
lock
sub
aas
fcmove
mov
adc
jno
pop
notl
test
aas
out
mov
mov
lahf
adc
daa
mov
adc
xchg
arpl
cltd
movsl
bound
add
into
dec
mov
push
sarb
into
movsl
xor
scas
sti
dec
rorb
push
jno
orb
fwait
movsb
stos
icebp
xor
mov
les
add
inc
mov
in
mov
std
sub
xchg
ret
cmpl
dec
gs
adc
mov
iret
popf
in
lcall
into
xchg
mov
jge
scas
add
scas
hlt
dec
push
mov
fs
outsb
push
add
in
push
xor
cmpsb
lea
loope
flds
aad
add
or
xchg
mov
stos
cmp
int3
fwait
out
scas
lret
xchg
lds
pop
sub
pop
cld
mov
sub
dec
in
out
pop
pop
sub
cmp
jbe
lahf
test
inc
pop
jge
sub
push
adcl
add
jo
sbb
xchg
xchg
xchg
fadds
jp
lods
daa
sti
call
iret
push
dec
mov
and
jle
mov
dec
fcoms
adc
push
popa
inc
popf
or
sub
ret
cmpsb
jmp
adc
shl
mov
sbbl
iret
mov
mov
rcrl
mov
or
insb
daa
sbb
sub
inc
fidivl
xchg
jp
push
mov
xor
push
xor
outsl
or
std
or
adc
push
jne
out
sub
mov
orl
push
or
dec
xchg
pop
xor
mov
inc
jge
push
jne
mov
sbb
stc
mov
out
rorb
push
dec
sub
mov
sbb
call
stos
loop
cmp
dec
nop
xor
sbbl
mov
icebp
bound
mov
xor
mov
cmp
imul
fwait
cs
add
into
xor
das
mov
xor
out
sbb
scas
mov
sub
int
cmp
xacquire
and
jbe
mov
repz
cmpsb
icebp
addr16
xlat
sbb
dec
xchg
push
push
pushf
es
fistl
pop
test
cltd
in
nop
fsubr
jo
adc
push
sbb
lret
notb
in
pop
enter
out
mov
scas
pushf
jns
xchg
pop
jmp
push
lea
stos
in
sbb
in
inc
loop
out
and
stc
or
insl
jnp
bound
lds
std
mov
mov
mov
jne
sub
lea
in
lods
push
mov
push
xchg
cmp
data16
shlb
daa
cltd
cmpsl
xorb
nopl
pusha
mov
orl
dec
stos
sti
sahf
push
mov
mov
jle
pop
and
mov
ja
and
cmp
ja
dec
push
rclb
pop
push
ret
inc
cltd
mov
push
je
fistl
xor
inc
xor
jnp
sbb
loopne
dec
stc
pushf
iret
lret
mov
cmpsb
aad
rolb
lock
sti
fisubs
mov
jp
enter
gs
or
adc
and
cmp
hlt
push
and
xchg
call
pushf
inc
jp
pusha
lret
or
lock
les
pop
dec
fidivs
mov
adc
adc
dec
cmp
loope
pop
cmc
adc
fs
ret
push
pop
mov
mov
jle
pop
add
pop
xchg
or
mov
aam
fisttpll
jmp
cmp
pusha
dec
pop
lds
sbb
cwtl
jl
cmp
ficompl
lahf
stos
pop
dec
sbb
lock
call
push
lods
mov
test
pushf
cwtl
gs
inc
xchg
adcb
mov
mov
fsubrs
jg
push
pop
lret
inc
jg
jae
xchg
ljmp
adcb
xor
or
inc
out
loope
sbb
jl
popa
sub
orb
fldl
aam
inc
das
or
iret
xchg
imul
stos
inc
cmp
pop
imulb
push
inc
dec
out
xor
scas
enter
and
fldcw
mov
loop
scas
in
mov
and
mov
adcb
das
mov
fstl
jb
add
dec
enter
cli
and
shlb
add
or
repnz
mov
or
mov
bound
push
jbe
sub
loopne
cmpsl
sahf
call
mov
sar
pushf
aad
xor
jae
xchg
mov
mov
mov
jnp
cwtl
pop
aam
sub
or
daa
sahf
popa
or
jno
cmpb
pop
jg
andb
or
cmp
pop
inc
mov
rcrl
jnp
and
sbb
pop
cmp
xor
mov
pusha
pop
in
or
push
dec
das
aaa
inc
lahf
shll
mov
pop
pop
and
mov
mov
dec
mov
imul
and
xchg
sbb
popf
xchg
pop
mov
les
ret
inc
mov
je
cmp
out
loop
test
pop
or
ret
aas
ja
movsl
pop
xchg
dec
inc
pop
aas
movsl
mov
lahf
ds
addl
fdivl
add
xor
rcr
add
pop
jbe
dec
mov
mov
test
rcll
adc
arpl
repnz
push
jmp
xchg
es
cmp
ljmp
faddl
mov
outsb
cmovp
xor
xchg
cs
dec
dec
adc
push
mov
jg
add
mov
or
scas
inc
push
stos
cwtl
pop
mov
add
dec
jp
mov
push
or
or
lcall
pop
mov
mov
mov
mov
fimuls
pop
bound
out
adc
mov
les
dec
popa
mov
mov
sub
pop
push
jge
jbe
data16
cld
jnp
pavgw
adc
shll
push
fxch
les
cmp
push
cld
sbb
mov
sub
enter
and
daa
xchg
hlt
ret
in
sub
xlat
or
or
jecxz
mov
aaa
adc
imul
cmp
leave
scas
mov
lods
stos
addl
loopne
mull
cwtl
insl
gs
mov
test
xor
pop
dec
out
cltd
mov
inc
pop
shll
mov
movsl
sub
sbb
sbb
pop
xlat
xchg
ds
or
div
mov
into
pop
mov
lahf
sbb
cmpsb
mov
je
ljmp
lock
jmp
dec
sub
je
pop
inc
lret
iret
lret
jbe
push
xchg
dec
pop
aaa
into
aam
xor
sahf
inc
mov
cmp
xchg
in
or
xchg
fisubrl
pusha
ja
and
popf
cs
or
adc
cmp
pop
cmp
mov
xor
les
in
xchg
sbb
sub
sarl
dec
inc
imul
fs
push
loop
call
mov
rolb
inc
inc
add
bound
jne
push
scas
lods
add
in
dec
mov
sub
shl
push
bnd
js
int
int3
sahf
adc
xchg
test
ss
sbb
mov
loope
xor
fisttpll
push
clc
into
std
sub
adc
stos
inc
dec
xor
and
sub
test
hlt
out
sarb
sub
add
lods
mov
pusha
leave
jnp
int3
mov
push
insl
cmpsl
icebp
inc
inc
std
loope
mov
in
lock
mov
inc
cltd
movsb
es
cs
pushf
aad
jge
jne
hlt
fs
int3
add
xchg
dec
pop
push
jge
lret
jne
sub
roll
sbb
cmp
dec
mov
decl
fildll
push
movsb
insb
push
cmp
movsl
xchg
shll
cmpsl
std
clc
lods
fimuls
sbb
filds
inc
loope
or
xor
add
fiadds
mov
cltd
mov
sub
std
inc
sub
pop
mov
lock
xor
pop
add
cwtl
inc
push
insl
jne
repz
xchg
sbb
push
or
mov
sub
cmpsb
lahf
fisubl
fistpll
leave
mov
mov
sahf
or
adcb
cwtl
push
roll
cmc
jecxz
mov
push
rcrb
in
cmp
ret
nop
mov
sbb
mov
std
push
jno
xchg
fmuls
arpl
mulb
push
dec
movsl
aaa
jae
loopne
xor
iret
into
cltd
or
iret
cs
jmp
pop
repz
jle
mov
fsubrp
sub
pop
pusha
cmp
repnz
loopne
test
lcall
and
sbb
or
cli
iret
adcl
xchg
test
inc
add
popf
or
cmpsl
ret
push
jl
dec
push
lea
lret
or
cmp
inc
hlt
dec
mov
or
stos
lea
aad
add
xor
and
insl
pop
mov
decl
mov
add
cmpsb
orb
dec
inc
mov
and
lea
dec
jb
cmpsb
jne
and
xor
popf
lahf
mov
fimull
push
push
sub
mov
in
push
jle
es
sbbb
or
scas
mov
dec
xor
cmc
mov
fildll
dec
out
mov
adc
and
ljmp
inc
icebp
ss
cwtl
aas
ret
add
dec
imul
push
jne
gs
push
mov
insl
mov
movsl
xchg
sub
mov
stos
jae
sahf
das
fnsave
dec
mov
cmp
andb
and
and
jno
pop
cmp
ss
push
mov
outsl
test
jl
repnz
lcall
test
imull
jmp
sbb
push
insb
mov
enter
mov
and
sub
add
xchg
in
and
push
cmpsb
lret
jg
adc
outsb
add
jmp
cmpsb
dec
rcl
divb
test
ja
jno
push
ret
mov
ljmp
pop
xchg
icebp
jmp
call
jl
div
out
jg
shlb
je
rcl
sbb
test
ret
nop
xor
outsl
outsb
cmp
adc
aaa
jp
xor
loopne
enter
push
jmp
movsl
fidivs
incb
inc
pop
cmp
xor
lahf
or
sub
ss
xchg
xchg
inc
stc
and
fbstp
repz
hlt
xor
push
jns
xchg
pusha
mov
sbb
lret
repz
into
sbb
fcompl
ja
xor
cli
pop
loope
sub
mov
xchg
lods
loopne
xchg
xor
xor
loope
sub
lea
xchg
inc
imul
dec
dec
stos
sbb
in
jg
push
adc
clc
mov
pusha
sahf
insb
mov
paddw
jmp
test
push
test
js
jns
or
lahf
data16
pop
cwtl
jp
adc
leave
lea
imul
fidivrs
sbbl
add
daa
cmp
mov
jl
lahf
fbstp
mov
mov
call
lods
and
js
roll
cmp
lea
adc
jl
fstpt
adc
insb
inc
xchg
pusha
mov
xor
outsb
pop
cld
jb
xor
cmc
lahf
xor
adc
shrl
ljmp
popf
test
add
lret
dec
push
mov
cmp
scas
jecxz
and
adc
dec
pop
fsts
mov
jg
jmp
out
add
inc
sbb
nop
daa
cltd
ss
subb
mov
mov
adc
incl
xor
ret
jg
les
mov
ss
pusha
in
adc
mov
and
jp
pusha
stos
fisubs
push
and
les
jae
mov
arpl
enter
or
dec
scas
mov
mov
add
and
xchg
out
pop
pop
clc
mov
push
jo
pop
xchg
cwtl
out
cltd
negb
mov
add
push
std
push
test
into
dec
insb
mov
cmp
sub
add
imul
and
inc
out
js
pushf
adc
outsl
adc
push
ljmp
jmp
cld
leave
in
mov
int3
mov
or
cs
sub
xor
sahf
ret
dec
mov
call
cmpsb
xor
adc
out
scas
insl
adc
sarl
push
or
sub
nop
dec
enter
inc
pop
cmp
xchg
insb
les
xor
lahf
std
out
xchg
inc
mov
sub
mov
xor
sarb
inc
cmp
mov
cwtl
repz
xorb
inc
leave
xor
out
jg
mov
mov
mov
out
jae
adc
sbb
and
hlt
dec
addr16
es
jo
jno
stc
rolb
push
inc
push
mov
aaa
pop
ds
add
inc
mov
loopnew
pusha
dec
cmp
pop
adc
mov
add
test
fwait
test
pop
fcompl
stc
fildll
cmpb
cmpsl
js
push
push
jg
cmp
xor
sbb
test
sub
mov
lahf
rol
and
jmp
ret
hlt
movsb
icebp
xlat
loop
sbb
dec
lods
test
mov
imul
pop
xchg
test
shlb
cwtl
out
add
pop
clc
int
out
xchg
cmp
neg
lahf
xchg
mov
cmpsl
jl
sbb
xchg
xor
lea
xchg
gs
fcoml
fdiv
cmc
scas
xor
mov
xchg
jle
insl
xchg
loope
cmp
adc
sbb
shlb
pop
lods
mov
movsl
pop
xchg
cltd
xchg
sar
movsl
xchg
jp
inc
scas
mov
pop
pop
not
dec
clc
xchg
stc
mov
aam
mov
cmp
lahf
pop
and
dec
inc
push
xlat
push
fs
loopne
xchg
inc
mov
push
pop
mov
dec
aad
out
mov
in
out
sub
scas
inc
jb
cmp
pop
ret
push
fstl
push
fnsave
pop
cmp
addl
cmpsl
jnp
mov
xor
push
pop
cli
fs
int3
sub
inc
push
fsubp
push
rcrl
out
sar
jns
outsl
jge
adc
mov
out
mov
int3
mov
mov
popf
or
xchg
jl
cmp
push
cmpsl
xor
push
jns
mov
cmp
mov
movsb
rorb
rcrl
pop
add
cmp
gs
shrl
mov
and
adc
pusha
addb
rcll
jmp
cmp
nop
sub
test
xchg
fwait
mov
jmp
ja
aam
pusha
push
xor
clc
jns
xor
mov
dec
ret
notl
fadds
imull
enter
divb
fmuls
outsb
xor
xor
sbb
sahf
pop
lea
and
jl
mov
xchg
inc
jmp
jmp
int
lods
jl
xchg
lock
aad
cs
enter
push
mov
or
pop
jb
mov
add
shlb
and
push
cltd
nop
loop
imul
sub
xor
stos
rcrb
xchg
mov
int3
jp
loopne
xchg
push
jno
and
push
mov
pop
adc
nop
adc
xchg
loop
mov
push
mov
add
rcrb
jo
enter
dec
imul
lcall
dec
jb
in
cmp
pop
push
clc
inc
push
add
mov
or
or
inc
insl
loop
lds
das
call
add
and
jle
out
sbb
xchg
pop
pushl
sub
pusha
pop
imul
ds
movsb
mov
adc
pop
pop
orb
cmp
mov
cltd
pop
xchg
insb
push
jp
lret
jle
jae
mov
push
jnp
sub
mov
jnp
jae
xchg
or
adc
add
mov
out
mov
mov
add
call
ret
insl
cmp
pushf
aas
push
clc
lods
dec
lods
xchg
in
inc
inc
out
dec
jl
pop
mov
xchg
aas
or
sub
mov
sbb
aas
adc
and
sbb
dec
sbb
das
or
cmp
xchg
add
dec
aaa
hlt
test
lret
xor
cld
pop
add
in
push
adc
data16
movsb
ret
into
sbb
call
push
out
lods
fiaddl
insl
dec
out
iret
jnp
add
movsl
or
test
xor
pop
jle
inc
adc
pop
fmuls
cs
out
int
rcrb
vmulsd
int3
shlb
adcb
xchg
je
shll
and
xchg
fldt
xchg
mov
addr16
xor
sub
ss
pop
cmpsl
lock
outsl
divl
gs
fbld
data16
sbb
insb
daa
adc
mov
fadds
aad
or
mov
leave
mov
iret
out
and
inc
push
mov
sahf
mov
hlt
aam
scas
cwtl
sbb
out
mov
movsb
inc
test
mov
mov
shrl
lods
notl
arpl
jecxz
jae
decb
stos
jae
sub
xlat
and
cmp
sub
mov
sub
sbb
dec
push
pop
in
or
and
cmpsl
loop
push
push
pop
mov
pop
aas
xchg
sbb
mov
push
pop
dec
cmp
mov
not
shlb
lods
sbb
fdivr
mov
cmp
bound
cmc
sub
daa
aaa
sbbb
xchg
mov
push
repz
mov
xchg
ljmp
push
imul
les
xchg
push
push
fimull
sarb
xor
fcomi
out
mov
push
xchg
bound
push
xchg
mov
sbb
xchg
add
bsr
out
push
sub
ja
push
push
cmp
mov
jecxz
jb
mov
xlat
dec
stos
mov
das
inc
imul
sbb
add
push
adc
dec
mov
leave
push
or
out
fcoml
mov
stos
jl
cmpb
les
into
dec
and
mov
sub
iret
je
nop
in
cwtl
jl
push
mov
movsl
loopne
in
nop
mov
test
lahf
mov
loopne
dec
inc
sub
arpl
inc
push
adc
or
dec
test
out
sahf
and
sub
adc
lods
fs
jbe
popa
mov
fucomp
mov
xor
pop
mov
sahf
lods
push
repnz
push
pop
and
xor
loop
lds
push
or
loop
hlt
cmp
and
out
jo
pop
sub
sub
xchg
and
in
insl
hlt
xchg
xchg
and
lods
int
mov
ficomps
mov
mov
out
jne
pop
or
fcmovu
xchg
xlat
mov
out
fucomi
aam
sbb
xor
push
sub
repz
sbb
sbb
mov
lds
cld
cmc
das
mov
out
mov
mov
push
xor
rcrb
roll
shlb
mov
mov
jo
fucomi
jno
push
mov
jbe
cmpsl
xor
hlt
lcall
aaa
rcl
pop
sbb
xor
jns
scas
sbb
rorb
not
cmp
cltd
inc
mov
nop
js
push
mov
adc
sbb
sub
pop
mov
or
or
or
stos
cmpsb
add
daa
flds
cmp
mov
cmp
jno
add
or
or
test
sti
xchg
adc
mov
add
mov
push
cmpsb
mov
adc
shr
insb
mov
xchg
push
dec
int
adc
dec
cmp
daa
inc
insl
push
xchg
inc
in
lods
sbb
rorl
mov
rcrl
sbb
into
push
sub
xor
daa
hlt
lods
scas
cmc
lret
cwtl
adc
mov
pop
jle
and
adc
mov
pusha
add
out
dec
int
lahf
lods
rcrb
std
push
js
xor
pop
sbb
or
cmp
pop
pop
jecxz
cmpsl
dec
aam
rcrl
dec
add
data16
in
jbe
xchg
jae
stos
sub
xchg
xchg
lret
aam
mov
arpl
and
aad
pop
je
push
icebp
dec
push
daa
insb
popa
pop
icebp
ficompl
or
sahf
push
outsl
test
insl
push
xchg
pop
lret
or
push
aaa
mov
movswl
sahf
jno
outsb
fisubs
dec
cmp
cmpsb
pushf
sbb
je
mov
adc
std
fs
push
nop
and
sti
xlat
or
xchg
testb
arpl
call
sbb
xchg
and
je
lods
push
ja
cs
sbb
ds
outsb
sbb
das
pop
mov
push
or
bswap
scas
mov
sbb
mov
push
out
mov
gs
cmp
jmp
ljmp
repz
fisubrs
xor
out
outsl
sti
sbb
push
sub
lds
iret
inc
sbb
lods
mov
push
pop
out
xchg
ss
cmpsl
inc
inc
add
adc
test
sbb
jo
sbb
std
push
mov
in
adc
mov
ret
mov
loope
push
sub
mov
clc
pop
lods
