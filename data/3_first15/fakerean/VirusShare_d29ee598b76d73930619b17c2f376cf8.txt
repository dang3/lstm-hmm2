sbb
add
mov
mov
xor
pop
xchg
or
shlb
sub
pop
sbb
adc
lea
mov
shr
in
insb
pushl
xor
inc
jl
mov
xchg
xchg
dec
or
stc
push
iret
mov
sbb
jg
mov
or
test
lock
jnp
repz
ret
xchg
xchg
xchg
fldcw
testl
mov
mov
or
aaa
imul
sub
movsl
scas
ds
clc
out
mov
pushf
daa
mov
mov
mov
jns
mov
orl
orl
rolb
jno
xor
add
pop
jl
jnp
add
sbb
ror
into
cmp
pop
sub
sub
pop
sub
inc
sbb
xchg
movsbl
xlat
movsl
mov
add
dec
mov
jbe
mov
mov
arpl
cmp
jp
and
sub
dec
mov
shlb
sahf
in
icebp
lds
lods
popf
mov
test
xchg
pop
inc
shll
sbb
fldenv
repz
outsl
sub
mov
stos
inc
xor
in
mov
popf
dec
jmp
js
xchg
pop
mov
xchg
sub
push
cmp
xor
loope
leave
mov
daa
daa
sub
into
into
out
sub
jne
lretw
fisttpl
xor
mov
pop
les
mov
test
leave
push
imul
cmc
aaa
fidivl
fsubp
adc
inc
jge
jb
movsb
and
in
orb
jl
mov
xor
cld
dec
iret
cmpsb
dec
cmpl
mov
xchg
dec
std
adcl
pop
stc
cli
arpl
leave
cltd
jp
mov
pop
cld
leave
lods
std
jmp
icebp
add
lahf
fs
add
push
inc
into
xor
cmp
jns
pusha
in
mov
or
lods
inc
lret
out
enter
add
push
mov
push
or
xlat
jbe
add
jb
incb
pop
movsl
sub
mov
cltd
pop
movsl
xchg
jg
inc
dec
psubusb
mov
push
jmp
jno
test
faddl
adc
jne
adc
push
sar
inc
loopne
cmpsb
mov
xor
mov
mov
add
cmp
jbe
fisubrs
mov
mov
and
out
mov
jg
inc
cmpsb
jp
fwait
fadd
rolb
mov
sub
pop
or
inc
aaa
insb
icebp
push
lods
addb
movaps
inc
orl
fwait
std
pop
neg
repnz
cltd
push
in
aas
sub
mov
jnp
aas
lret
call
mov
loop
stos
pop
ljmp
aad
in
or
jne
xlat
sbb
jb
xchg
or
mov
cmp
out
sub
scas
mov
rcl
sbb
shrl
js
outsl
dec
cld
lret
push
push
add
sub
iret
cmc
test
stos
and
mov
jne
add
jb
das
je
xor
xor
dec
js
das
incl
daa
mov
mov
dec
mov
nop
nop
sub
popa
clc
jae
arpl
jae
ljmp
dec
adc
lahf
jmp
mov
orb
cmp
mov
xor
mov
into
lret
jge
clc
jmp
or
mov
dec
jge
mov
xor
loope
aas
fwait
adc
pop
jno
mov
cmpsl
or
sub
xchg
mov
out
imul
lds
xchg
pop
xchg
in
insl
push
add
adc
xchg
daa
mov
jo
xlat
xor
rep
lods
jae
ret
popf
in
push
cmp
mov
cs
icebp
data16
lods
out
xchg
call
in
xchg
repnz
add
jns
insl
fstpt
insb
enter
xchg
fisubs
lret
and
cmp
adc
cwtl
sbb
cmp
sub
adc
popa
lea
push
push
sbb
jmp
lods
sahf
inc
lahf
dec
mov
xor
sub
arpl
mov
xlat
lods
dec
inc
out
sbb
les
out
add
sub
sbb
aam
mov
inc
fcompl
xor
loope
jae
xor
cmp
lock
cmp
repnz
in
xchg
and
sbb
sti
jb
mov
inc
or
ficomps
inc
out
jmp
mov
sub
bound
out
lock
mov
lcall
cmp
adc
pop
addr16
mov
inc
and
cmpsb
dec
xor
testl
dec
test
clc
jmp
outsb
sbb
mov
inc
or
mov
fs
push
pop
adc
mov
xchg
sub
jg
adc
mov
inc
into
push
jge
notl
popa
adc
imul
ljmp
inc
out
push
add
fadds
cld
das
mov
shll
sahf
push
loopew
cmp
xchg
outsl
fdivl
mov
outsb
subb
lcall
pop
pop
fildll
mov
std
lods
loop
xchg
sahf
ja
mov
sbb
andb
fnstcw
jge
and
pop
inc
sar
imul
cmp
mov
punpckhwd
clc
sub
cld
and
sti
daa
inc
fstpt
shlb
jbe
jnp
imul
test
jle
aas
movsl
and
outsl
jle
xchg
dec
or
mov
ret
jl
dec
mov
aaa
loopne
insl
cmp
mov
cmp
test
push
outsb
jae
sbb
into
and
test
mov
es
push
ret
ret
int3
insl
pop
lock
jbe
cltd
dec
ds
sub
cmp
jmp
popa
sub
aas
faddl
mov
test
mov
insl
rcr
popf
jge
xchg
pop
sub
shrb
dec
jns
mov
jae
stos
bound
ja
roll
inc
mov
std
repnz
mov
xorl
stos
adc
push
repnz
jb
movsl
add
shlb
roll
sub
mov
cmp
pop
andb
loopne
cmp
add
dec
inc
mov
inc
dec
insb
push
testb
xchg
js
jge
cs
hlt
push
daa
xor
push
stc
fisubrl
push
xchg
stos
jno
shrl
and
mov
ljmp
lret
fnstsw
mov
mov
inc
inc
into
aad
push
loope
xorl
cltd
or
lds
movsl
enter
int
cmp
fimuls
jb
sub
lret
mov
not
shr
pop
arpl
mov
lret
jecxz
sbb
mov
adc
xchg
jns
in
push
jae
hlt
mov
jge
pop
pusha
ss
jp
mov
cmp
pop
mov
push
ljmp
xor
mov
out
adc
lcall
mov
mov
leave
lock
cli
jne
stos
cmp
in
pop
clc
jge
insb
mov
or
js
mov
mov
fwait
adc
fptan
hlt
jb
arpl
xchg
dec
sahf
cwtl
or
repnz
sahf
ss
scas
repnz
cmp
fidivrs
addr16
fstpt
jmp
push
mov
xor
or
divps
insl
sbb
xor
adc
push
and
pop
jmp
test
mov
cmpsb
mov
ret
daa
stc
xchg
pop
push
pop
mov
stos
in
inc
jge
leave
dec
dec
iret
test
cs
mov
out
addr16
push
fldenv
out
mov
cmp
sbb
js
fld
out
lods
push
popf
fs
dec
dec
lret
cmp
xchg
nop
pop
push
cmp
mov
in
out
jne
mov
mov
jne
xchg
addl
push
out
popf
std
scas
ror
mov
mov
and
mov
pop
adc
push
lds
out
fs
or
cmp
sbb
repz
dec
nop
mov
cmpsb
push
int
testl
push
jbe
aas
cmp
dec
xor
sub
sub
int3
and
jnp
sub
dec
mov
es
xchg
out
daa
ficomps
out
test
popa
pop
in
pop
in
push
iret
insb
inc
pushf
mov
or
int
pop
scas
cmp
cmc
testl
out
inc
repnz
jecxz
push
dec
in
cmc
lock
loopne
jae
pop
inc
xchg
sub
cmpsl
and
push
sub
hlt
and
pop
inc
mov
loopne
lods
cmpsl
icebp
icebp
xchg
fisubl
loopne
xchg
ret
imul
add
mov
xchg
lds
add
xchg
sub
sub
sbb
test
jns
jbe
xchg
push
ret
and
push
outsl
repnz
idivb
movsb
mov
rcrb
push
jp
mov
mov
xor
in
xchg
mov
popf
sub
xchg
stc
xlat
sbb
lahf
imul
jmp
and
ja
insl
scas
xchg
mov
sbb
lcall
jecxz
pop
mov
pop
mov
in
aam
movsb
cwtl
into
jmp
decl
std
ret
jno
xchg
aam
repnz
inc
jmp
xchg
in
adc
mov
jmp
mov
jl
mov
cmpsb
repz
popf
push
fcoml
in
les
hlt
dec
mov
aaa
and
cltd
cld
jo
sbb
stc
les
sub
out
in
mov
add
inc
out
leave
test
sub
pop
test
lds
cmpl
jl
fwait
dec
inc
out
sbb
pushf
cmpl
repz
ret
dec
lret
adc
jnp
mov
adc
xor
jo
into
daa
aam
jmp
push
int3
decl
cmp
lahf
ret
jae
xchg
mov
xorl
divb
add
or
xchg
scas
lds
daa
movb
lret
mov
das
xor
ret
push
idiv
out
sub
les
test
xor
dec
inc
jle
pop
outsb
imul
addr16
sub
sbb
push
enter
adc
cld
push
xor
cmp
push
and
lods
cli
adc
pushf
pop
add
sub
adc
lea
ret
aam
mov
cmp
cs
jge
adc
loope
leave
rcrb
data16
popa
xlat
and
push
das
shrb
roll
dec
call
pop
cmp
repnz
gs
or
ret
add
fstl
sbb
ffree
jae
push
fdivs
mov
push
sti
mov
sub
adc
push
and
adc
jmp
rorb
rcr
mov
jb
xor
in
js
lret
or
lods
add
popf
addr16
jmp
sub
mov
enter
inc
lcall
dec
out
mov
xchg
fcmove
roll
adc
push
adc
ret
pop
clc
movsl
adc
aad
fiadds
sarb
cld
xchg
dec
add
fmuls
sbb
cmp
dec
mov
rorl
xchg
lea
xchg
fdivrl
add
jmp
pop
push
inc
mov
aad
dec
xchg
xor
push
faddp
cmp
pop
cmp
sub
xchg
addl
jnp
add
push
shrb
sbb
ret
repnz
aam
filds
adc
sar
sub
jl
xor
xchg
and
jl
ret
fdivp
cwtl
push
stos
mov
mov
sub
fdivl
test
lahf
fdivrs
shrl
test
mov
lea
dec
out
cli
addl
and
xlat
mov
mov
push
and
adc
mov
loop
xchg
imul
dec
fidivs
popf
repnz
cmp
sub
repz
jbe
jge
dec
je
xchg
lock
jecxz
stc
inc
movsl
pusha
ret
fildl
sbb
rorb
lcall
push
sbb
sahf
mov
hlt
xor
in
xchg
inc
adc
mov
mov
push
adc
pop
jb
test
outsb
or
mov
repz
and
xor
lea
push
je
push
sub
iret
fstps
sub
stos
push
inc
sbb
pop
test
int
mov
add
hlt
call
xchg
icebp
adc
leave
icebp
sahf
push
stos
mov
and
push
xor
dec
jge
inc
int3
out
outsb
pop
rclb
push
pop
test
push
lret
lea
in
dec
loope
lahf
ljmp
xor
add
daa
push
nop
push
ja
sahf
je
pop
jmp
push
or
clc
or
aad
pop
les
rorl
aad
adc
shlb
pop
add
cld
loop
jns
aaa
mov
cwtl
push
out
outsl
nop
pminub
fsubrs
or
jnp
xchg
data16
insb
idivb
dec
jecxz
aas
or
mov
push
fxch
mov
and
iret
mov
adc
dec
jp
mov
xor
rolb
jo
arpl
push
shrl
sbb
ficoml
adc
push
inc
popa
movsb
or
arpl
cmpsl
xor
pusha
fildl
mov
shll
je
jno
imul
in
fs
leave
inc
or
aad
mov
cwtl
xor
xchg
dec
push
repz
lds
mov
dec
pop
xchg
jecxz
xchg
mov
cmpsb
imul
idivl
idivl
popf
sub
nop
lea
cmp
and
stos
mov
roll
cmp
ret
mov
shlb
test
mov
push
lea
in
and
out
insl
fcoml
movsl
xchg
mov
add
fistpl
adc
js
mov
or
adc
loop
sahf
repz
in
pop
fdivs
out
rcr
stos
daa
mov
outsl
cmp
subl
xchg
xlat
pop
andl
xchg
jge
and
call
arpl
dec
or
mov
mov
imul
inc
push
push
xchg
dec
enter
sub
sub
and
rolb
orl
pop
and
cmp
xor
add
add
xor
popa
xchg
jmp
sub
pop
dec
arpl
xchg
sar
fdivrl
cmc
push
mov
pop
cmpsb
push
jecxz
lcall
ss
adc
dec
push
fisttps
mov
loopne
daa
pause
in
mov
sbb
rclb
data16
mov
pop
fbstp
nop
bound
out
adc
mov
add
fidivrl
imul
cs
xlat
mov
jne
adc
cltd
sub
inc
stos
pop
mov
filds
push
cmp
fnstenv
daa
jnp
cmp
nop
pop
mov
mov
push
int
and
aad
sarl
or
test
add
ss
adc
in
and
decl
clc
xor
aaa
inc
or
repz
inc
cli
lods
pop
data16
push
and
adc
jecxz
loopne
jg
lds
inc
scas
insl
dec
xchg
shrl
gs
ja,pn
mov
lock
insl
fimuls
sahf
fptan
cwtl
rcl
jmp
ret
adc
daa
jne
mov
std
pushf
fisttpll
or
movsl
pop
jp
rol
pop
das
and
rorb
fwait
mov
dec
stos
fdivs
in
int
mov
xchg
int3
es
js
lcall
scas
out
repz
ss
mov
mov
sub
aam
mov
insb
shll
and
mov
cmpsl
and
adc
xor
daa
add
push
pop
sbb
cltd
dec
add
cld
mov
xchg
inc
not
xchg
cmp
repz
mov
arpl
cmpsl
xchg
frstor
rcll
es
or
jg
jno,pn
sub
dec
adc
test
fstps
push
adc
imul
jno
into
iret
mov
sbb
pushf
je
popa
push
mov
loopne
shr
mov
hlt
ret
mov
int
mov
pop
mov
loope
cmp
sub
mov
and
xchg
cmp
fldt
or
sub
int3
ss
testb
arpl
repz
and
mov
push
jbe
push
add
mov
or
out
mov
push
dec
mov
xor
mov
lea
ffree
test
xchg
cld
cs
enter
rorl
imul
in
ljmp
mov
mov
imul
out
xor
mov
dec
or
inc
lret
notb
cltd
and
mov
ret
mov
outsl
mov
add
pop
je
out
mov
dec
inc
xchg
lods
cltd
imul
cmp
xchg
inc
and
pop
jb
inc
sub
in
sbb
inc
sbb
sti
push
mov
das
push
int3
and
xchg
pop
std
mov
cld
push
cld
pop
cmp
mov
cmp
mov
mov
ss
test
iret
jge
jg
arpl
test
xchg
xchg
aad
or
dec
inc
xchg
loop
mov
mov
and
add
icebp
cltd
and
add
fwait
mov
das
cld
xchg
mov
hlt
add
pop
lods
ljmp
jns
mov
xor
roll
inc
mov
fisttps
mov
inc
std
sbb
out
xchg
jg
push
jmp
jecxz
or
jmp
adc
cmp
mov
sbb
jl
ja
scas
lret
arpl
pop
int
pop
insl
xor
mov
jae
stos
fs
cmc
scas
les
call
mov
mov
repnz
jno
lea
je
imul
mov
out
flds
clc
lds
jnp
lret
daa
pushf
lock
decb
mov
test
lret
insl
repz
scas
jo
cmp
mov
shll
inc
stos
mov
loope
iret
jno
jnp
inc
jmp
push
aas
popf
dec
popf
out
fistpll
js
roll
aas
shll
ljmp
inc
mov
call
js
imul
sub
loop
sub
xchg
insb
mov
pop
adc
mov
jmp
and
loope
movsl
sbb
xor
sbb
pop
or
pushf
jmp
jns
pop
push
mov
movl
xor
sbb
adc
and
repnz
or
sbb
xor
inc
repnz
es
mov
jno
jns
or
jmp
mov
mov
push
iret
jmp
adc
fldcw
cmc
jge
add
ja
ds
loopne
jae
aam
xchg
adc
and
and
nop
sbb
shl
iret
push
push
gs
call
jne
dec
or
out
ljmp
fsubl
aas
push
shrl
aaa
sbb
repnz
inc
outsl
add
push
and
cmp
in
sub
push
xor
je
adc
xchg
mov
adc
mov
and
mov
fwait
sbb
and
mov
sub
jno
push
lcall
and
nop
fcmovnu
xchg
sahf
xchg
mov
pop
sub
test
cltd
push
popf
jnp
mov
loopne
mov
filds
shll
jne
cmp
mov
insb
test
sti
imul
cmp
imul
popf
ficompl
adc
rcll
jmp
dec
loop
mov
arpl
fisttps
hlt
dec
icebp
insl
mov
inc
cltd
bound
cmp
push
outsl
fs
mov
pinsrw
inc
mov
pop
and
iret
mov
inc
and
or
repnz
sahf
in
xchg
cmp
aas
ss
test
daa
mov
xchg
lods
je
inc
int
cld
daa
mov
shlb
dec
sub
testb
pop
aaa
add
xchg
mov
dec
leave
add
testl
repnz
shll
mov
cmp
fimuls
and
pop
mov
push
inc
push
push
les
inc
test
dec
mov
xor
ret
xchg
mov
shlb
mov
jecxz
stos
arpl
adc
rcl
cmp
fcompl
packuswb
inc
pop
add
lret
nop
inc
sbb
testb
sbb
scas
adc
xchg
popa
popf
sbb
ja
push
mov
pop
pop
mov
sub
repz
les
sub
rorb
adc
cld
mov
add
pop
fdivrs
sub
jp
mov
dec
adc
mov
sub
lds
jmp
mov
adc
xchg
dec
push
lods
pusha
inc
and
or
xchg
pop
lods
test
divl
or
data16
dec
cs
dec
std
test
mov
jnp
mov
mov
jo
mov
add
or
jl
sti
inc
push
das
js
jge
dec
mov
mov
push
jne
jae
pop
or
fstps
int
sub
ss
pop
popf
cmp
push
cmp
test
pushf
adc
pusha
adc
out
sbb
push
stc
pop
ficoml
inc
movsl
sbb
dec
add
fiaddl
lds
icebp
adc
addl
mov
pop
subl
mov
xchg
and
adc
or
loopne
xchg
pop
add
js
inc
stos
inc
ljmp
sti
mull
push
xor
icebp
popf
inc
add
popf
subb
into
xchg
sbb
fldcw
inc
inc
pop
adc
scas
xchg
outsl
outsb
pextrw
pop
push
inc
lds
cwtl
aam
inc
sbbb
mov
inc
adc
jg
xor
lods
pop
push
mov
push
lock
mov
xchg
pop
arpl
cld
xchg
sar
fstps
aad
rorl
mov
out
xor
inc
lcall
lcall
test
test
jl
cmpps
sub
sahf
imul
aaa
aaa
pusha
pop
repnz
add
aaa
mov
rcrl
mov
arpl
xorl
push
lea
arpl
fldl2t
pushf
mov
icebp
xor
stos
mov
cld
jp
clc
pop
fidivrs
movsb
imulb
cmp
mov
sar
push
in
test
fdivl
rep
int
fld
push
scas
xchg
pop
icebp
leave
sbb
ja
and
jmp
xchg
movsl
jno
mov
cmp
out
loopne
inc
or
sub
add
int
loop
xchg
ret
cmp
pop
push
outsb
inc
loope
mov
mov
push
mov
and
in
dec
cmp
dec
jnp
add
ss
dec
add
sbb
push
push
popa
jbe
cmp
inc
xchg
imul
xchg
pusha
xchg
nop
movsl
and
cwtl
rcrl
push
rcrb
call
divl
add
lcall
test
inc
mov
in
mov
fistpll
cli
cmp
add
jbe
pop
jge
push
pop
dec
leave
leave
popa
push
xchg
pop
test
outsl
xchg
movsb
fnsave
nop
ret
pop
jg
adc
imul
cwtl
pushf
sbb
pop
iret
inc
insl
xchg
dec
pop
xor
dec
lcall
bound
add
push
movsl
cmc
pop
in
push
shrb
and
xchg
sbb
mov
mov
pop
popa
pop
cmpsb
sub
stos
mov
in
mov
sub
lea
sbb
std
das
mov
loop
sub
push
dec
adc
sti
clc
dec
outsb
gs
in
push
jb
cmp
mov
mov
cwtl
sbb
mov
fxch
push
sbb
fsub
mov
push
mov
lea
mov
decl
popa
data16
fnsave
or
push
mov
xchg
push
push
int3
dec
add
lods
and
adc
xor
ror
sbb
out
mov
dec
cmp
test
and
mov
fdivrs
flds
xchg
ret
int3
sub
mov
ds
sub
addl
shlb
push
inc
stos
add
inc
es
jp
dec
into
out
dec
push
xlat
xlat
add
dec
outsl
pop
sub
inc
pop
out
scas
fimuls
popf
test
cmpsb
xchg
negb
es
cmp
sahf
loope
lea
sub
cmp
nop
add
mov
mov
je
pushf
lret
dec
pop
mov
loop
imul
mov
mov
xlat
arpl
xchg
mov
push
in
push
das
js
xchg
mov
sti
xor
xor
pushf
insl
loope
icebp
mov
or
mov
repz
inc
cmpsb
jp
sbb
cmp
pop
movsl
pop
xchg
dec
js
cs
rcll
push
cmp
push
dec
or
addb
sub
negb
xchg
les
sbb
repnz
fimull
push
movsl
test
mov
stc
aas
fstpl
pop
or
movb
xchg
cwtl
mov
push
movsl
cmp
sub
adc
pop
mov
adc
sbb
xchg
jb
xlat
test
loope
nop
xchg
out
jg
fistl
mov
scas
xchg
adcb
xchg
dec
adc
sub
sbb
jmp
cltd
xor
in
or
loop
pop
jb
test
push
and
insb
nop
mov
jno
mov
in
inc
out
dec
hlt
push
vmovdqu
pop
push
daa
add
adc
xchg
das
mov
push
nop
xchg
pop
dec
push
lret
pop
cs
xor
inc
les
das
dec
push
imul
xchg
and
outsl
or
or
adc
jle
loopne
aaa
or
fs
xchg
or
sbb
bound
xor
out
into
frstor
inc
dec
add
in
mov
mov
sbb
in
jge
or
out
ficompl
cmp
sub
rorl
adc
icebp
fstpl
xor
and
pop
jmp
sti
fldl
push
mov
xor
mov
push
sbb
testl
dec
faddl
pop
sbb
ret
jae
or
mov
and
push
out
sbb
js
pop
test
lret
rolb
aad
leave
movsl
xchg
cmc
jmp
mov
xchg
inc
xor
movsl
fcomps
mov
and
mov
shrl
lock
push
add
push
jb
jne
sbb
cmp
sub
inc
les
insl
stos
stos
jecxz
jno
mov
sbb
xor
mov
mov
push
flds
pusha
mov
xchg
push
lret
jle
dec
sarb
mov
jecxz
sbb
aad
cwtl
lods
jmp
inc
mov
ja
sarl
adc
xor
ljmp
js
fnsave
dec
mov
sub
and
fbstp
mov
cmp
xchg
sub
fnsave
pop
mov
data16
inc
subb
pop
ds
insb
divb
jno
mov
lahf
push
cld
cmp
mov
out
in
push
cmp
nop
imul
cmpsl
jmp
sbb
ficoml
mov
adc
fnsave
inc
push
mov
inc
in
sbb
in
stos
in
int
or
xor
mov
popa
inc
enter
lret
popf
aad
pop
iret
push
in
push
bound
call
and
arpl
es
pop
fwait
mov
cli
repz
loopne
inc
adc
test
sahf
int3
out
dec
mov
xchg
mov
cltd
cmp
popa
movsl
push
sub
subl
icebp
sub
push
loope
fwait
ret
add
outsl
ljmp
std
aas
mov
sbb
mov
mov
sbb
lahf
pop
adc
in
lds
add
cmp
pop
or
icebp
sub
repnz
nop
mov
sbb
dec
int
jnp
pop
popa
push
mov
lds
mov
inc
dec
jnp
aad
dec
xlat
aas
push
jge
loope
sub
or
fsubrs
add
test
pop
adc
dec
xchg
xchg
push
fs
lcall
popa
and
imul
cltd
insb
ss
xchg
addr16
cmp
outsb
dec
mov
sub
ja
iret
xchg
jns
sub
xchg
mov
fcoml
int3
jno
and
xor
in
in
mov
or
mov
sub
jb
dec
inc
mov
out
push
iret
and
scas
sbb
sti
insl
js
test
in
cld
sub
iret
cmp
je
mov
les
mov
fcmovu
repz
add
or
insl
pop
fwait
push
ja
dec
mov
cs
je
sub
in
icebp
leave
hlt
jg
rorl
mov
out
scas
pop
adc
mov
mov
std
arpl
or
inc
fs
fwait
movsl
mov
mov
daa
addl
cmp
xchg
inc
test
dec
dec
mov
aam
test
or
pop
xchg
jnp
cmp
jae
mov
push
add
cmp
inc
inc
addr16
lds
or
gs
lret
push
lahf
jmp
xor
dec
dec
pop
scas
or
cmpb
adc
push
inc
outsl
sbb
loope
out
lds
push
je
out
ljmp
pop
mov
out
push
mov
loope
arpl
into
jmp
sbb
loopne
rcll
into
out
fmull
lcall
addb
hlt
sar
scas
sti
or
sub
or
cmp
and
mov
iret
mov
or
data16
xor
dec
push
testl
pushf
out
or
pop
shll
mov
fstpt
adcb
repnz
aad
lods
mov
lret
push
outsl
and
cmpsl
decl
pop
mov
xor
mov
test
add
pop
mov
or
or
subb
add
pop
adc
call
push
jno
inc
inc
lret
out
jge
js
mov
adcb
xlat
mov
xchg
jl
cmp
and
or
inc
call
sbb
pop
scas
repnz
dec
aaa
dec
aam
push
ret
stos
xchg
ja
dec
and
jle
repnz
in
mov
lock
scas
pop
cmpb
imul
sub
mov
and
aad
pop
push
out
es
adc
and
cld
in
xchg
sbb
sub
push
dec
fwait
sbb
xor
je
cld
test
idivb
dec
int3
es
pushf
and
idiv
dec
xchg
pop
test
es
xor
dec
hlt
sbb
lock
sub
and
xchg
push
cmc
add
and
hlt
lret
imul
mov
getsec
enter
xchg
dec
inc
clc
hlt
data16
lds
test
imul
andb
pop
pop
arpl
sbb
pop
ss
gs
mov
mov
icebp
fs
xor
mov
inc
adc
push
and
je
sbb
popa
jecxz
out
xchg
cwtl
cmc
xchg
add
lret
inc
nop
lahf
sub
int3
dec
mov
inc
mov
int
std
sbb
xlat
insl
jg
add
das
push
fdivr
cmpsb
sahf
inc
insb
bnd
mov
into
xchg
mov
sahf
xchg
es
and
insb
cmpsl
pop
mov
mov
jecxz
cmpsl
mov
nop
push
mov
mov
ja
sarl
movsb
push
repnz
cmp
out
pop
movsb
xor
test
sub
mov
jmp
pusha
adc
dec
enter
imul
decb
pop
xchg
xchg
jo
inc
pop
adc
or
mov
repnz
in
sbb
pop
xlat
inc
int3
sub
icebp
cmpsb
mov
movsb
mov
dec
ss
cmp
mov
jp
cmp
jo
sbb
or
push
addb
mov
mov
mov
push
xchg
inc
movsb
dec
gs
and
push
repz
jnp
push
xorl
xor
mov
js
jp
out
adc
lods
lcall
inc
cmp
jmp
mov
pop
inc
aaa
xchg
xchg
inc
inc
loopne
int
fnstenv
fcmovb
sub
adc
repz
aam
in
fldenv
test
gs
add
mov
sub
pop
mov
or
jle
rorb
icebp
jge
std
test
pushf
pop
fdivs
jmp
fs
ja
sub
sbb
int3
insb
sbb
dec
or
mov
xchg
ds
stos
adc
push
jge
cmp
xchg
jl
icebp
pop
xchg
xor
loope
movsb
xor
cs
dec
jle
add
push
mov
adc
inc
lea
mov
lret
test
and
push
sbb
add
ja
xchg
push
stos
ss
or
and
xor
aam
popa
std
stc
jne
mov
and
jae
mov
dec
lret
inc
fwait
mov
add
mov
add
push
test
cld
jno
push
or
test
movsl
js
lahf
test
mov
mov
pop
mov
bound
sbb
or
sbb
adc
pop
lret
imul
dec
mov
sbb
test
mov
xor
pop
rcrl
or
out
and
es
pop
negb
cmp
pop
jge
add
pop
pop
daa
mov
push
mov
push
out
cli
xor
sub
mov
rol
shrl
pop
inc
xchg
outsl
sarl
into
lcall
mov
insb
iret
sbb
sub
rcr
mov
outsb
lds
sub
mov
outsl
xchg
pushf
std
cmp
ss
out
mov
loop
incb
out
ljmp
sub
or
or
push
lods
testl
cld
ret
in
andb
push
add
roll
mov
hlt
sbb
jmp
sbb
inc
fnstenv
fldcw
cld
out
and
rcrl
inc
cli
xchg
and
pop
push
fstpl
dec
sti
add
add
pop
dec
sub
cld
lds
fisubrs
stos
imul
icebp
inc
movsl
orb
scas
es
je
in
xchg
and
addr16
shlb
aad
ds
cmp
dec
xor
mov
xchg
add
mov
stc
pop
mov
ret
gs
push
mov
jg
dec
dec
nop
cmp
rdpmc
push
mov
dec
out
in
mov
pop
xchg
push
jmp
popf
push
adc
fsubrp
or
push
jmp
nop
ret
lea
mov
in
mov
add
test
sub
cmpl
hlt
insl
sbb
xchg
adc
je
dec
xor
pop
scas
and
loopne
pop
testl
mov
and
xor
inc
mov
rclb
outsl
lret
push
pop
les
push
adc
xlat
sub
cmp
cld
gs
push
insb
xchg
cs
push
ret
lcall
mov
mov
jmp
mov
aam
mov
ja
xchg
outsl
sbb
movb
leave
fxch
mov
push
push
cmp
fsubs
cli
ret
jb
rdmsr
jmp
pop
xchg
sub
dec
or
gs
mov
cmp
pop
aas
insb
adc
or
cmovnp
or
xor
ret
sub
and
sbb
dec
das
add
or
adc
pop
icebp
scas
fiaddl
dec
adc
sbb
xchg
pop
push
shl
scas
icebp
test
fdivp
jns
push
pop
sub
cmp
add
add
mov
inc
leave
push
js
fwait
mov
xchg
mov
jmp
fsubl
out
mov
jnp
test
shlb
xchg
fcmovne
mov
mov
mov
and
idivl
rolb
cwtl
fisttps
jmp
bound
orl
push
sub
mov
shr
xorl
aad
mov
icebp
sub
or
dec
xchg
test
into
in
ds
add
cmp
mov
fisttpl
stc
mov
orl
aaa
mov
cmpsb
and
shl
fadds
repz
loop
xchg
inc
inc
pop
adcl
inc
xchg
mov
lock
fucomip
xchg
mov
test
loope
dec
hlt
testl
add
push
sub
xchg
into
ja
sarb
sbbb
in
fadd
pop
xchg
cmpb
dec
in
dec
test
add
cmpl
pushf
notb
sub
mov
push
cmc
mov
insb
fucomip
jne
mov
bound
and
add
fisubrl
popf
movsl
pop
sbb
add
cld
mov
lret
or
lret
jmp
cltd
cmp
xor
cmpsl
pop
pop
adc
jp
sbb
and
iret
scas
jae
and
or
outsb
int
shrl
cmp
pmulhw
adcl
pusha
xchg
or
sbb
cmc
mov
ljmp
clc
pushw
xor
stos
sbb
pusha
das
lock
push
stos
js
movsb
push
stos
mov
ja
pop
jb
test
hlt
xchg
shl
loope
mov
js
and
jns
push
or
outsl
xor
ss
or
adc
and
loope
xchg
clc
les
adc
gs
add
pop
push
std
jbe
dec
and
inc
xor
xor
adc
insl
fdivl
lret
push
pushl
pop
cltd
aaa
jo
xor
mov
fstpl
mov
adc
lock
jb
mov
jmp
movsb
inc
frstor
not
dec
push
out
fsubrl
call
push
out
bound
inc
inc
mov
mov
gs
mov
cld
dec
mov
repnz
sub
test
jecxz
inc
push
add
pop
cmp
insb
cmpsl
mov
mov
mov
cli
cmpsl
fwait
xor
sub
pop
push
pop
gs
lret
in
das
repnz
jno
js
leave
push
add
dec
popa
repnz
xor
mov
mov
mov
enter
call
jge
push
pop
xor
pushf
fnstenv
cmpsl
popf
jae
aaa
insl
jp
push
and
jns
dec
inc
jl
jl
insb
pusha
jecxz
gs
int3
mov
mov
enter
inc
dec
pop
push
adc
mov
push
in
push
nop
out
into
fstpt
xchg
sbb
jae
xchg
jb
mov
xor
lea
push
xchg
mov
mov
mov
mov
movsl
adc
jle
ret
sub
mov
or
dec
mov
mov
mov
cli
hlt
loopne
jb
loopne
jae
in
rcrb
popf
sbb
xchg
pop
pop
and
and
sbb
lods
test
shrb
ret
test
aad
and
jle
or
xchg
outsl
aad
subl
jecxz
js
inc
xor
dec
push
imul
shlb
jb
clc
xchg
ds
push
leave
fwait
xchg
mov
cmp
aaa
enter
cmp
fld
stc
or
sbb
aad
scas
aam
cmp
inc
mov
rclb
dec
inc
dec
lods
das
jle
cmpsb
mov
out
or
cmpsb
idivl
fmuls
ljmp
sub
lods
mov
inc
popa
mov
inc
cmp
mov
add
pop
dec
test
in
cmc
dec
and
ljmp
andl
xchg
cmp
shrb
jno
dec
sarl
loop
pusha
jae
and
jmp
adc
dec
inc
add
imul
mov
mov
icebp
dec
in
ret
pop
adc
push
ja
scas
or
lods
sbb
fisubl
mov
aaa
pop
fwait
std
rolb
rolb
and
ret
pop
lahf
mov
xlat
fwait
inc
cmc
mov
cmc
mul
fidivs
pusha
xchg
gs
cmp
test
mov
cmp
xor
mov
xchg
push
mov
enter
jg
sub
popa
mov
push
mov
mov
mov
jo
push
or
sub
mov
mov
add
xchg
add
dec
mov
xchg
xor
cs
decb
loop
inc
fld
popf
mov
push
inc
xor
cmp
test
push
sbbb
and
sub
mov
dec
ljmp
xor
jae
scas
xor
sub
or
adc
xor
sub
pop
sbb
loopne
cmpsb
and
xchg
fidivl
cmc
jmp
jmp
sub
mov
cltd
inc
pop
inc
add
cmp
ret
inc
es
sarb
fmull
sbb
leave
outsl
jp
and
xor
enter
pop
sub
sbb
or
dec
dec
jno
into
jle
ljmp
ret
xchg
adc
mov
sub
lods
mov
inc
imul
mov
cmpsb
sbb
adcl
jb
pushf
cwtl
jo
xchg
xlat
test
in
mov
testb
dec
arpl
repz
gs
inc
and
insb
or
paddb
xchg
or
stc
data16
divl
sub
in
mov
pop
pop
outsb
push
dec
add
mov
and
sub
int3
or
mov
aas
mov
sbb
pop
dec
out
pop
xchg
push
cmp
repnz
dec
mov
sub
loopne
jo
xchg
rol
sub
inc
fdivrs
ud1
ficompl
and
jge
pop
fsubrl
scas
inc
outsb
and
sub
cwtl
pop
mov
add
orb
insb
xor
xchg
lret
lea
jge
mov
xor
das
shrb
out
in
pop
popa
push
iret
xor
push
mov
pop
jbe
mov
mov
and
aaa
leave
insb
mov
in
ret
and
mov
insl
cltd
js
rol
stos
jne
add
jnp
in
push
pop
pop
inc
sbb
push
in
pop
outsl
stos
push
lds
and
data16
test
xlat
insl
mov
pushl
pop
rorb
adcb
xor
mov
ss
cmpsb
int3
and
sub
daa
lret
pop
mov
enter
pop
add
xor
shll
jo
clc
add
inc
add
add
stc
enter
imul
push
jp
loopne
pop
xchg
sbb
fsubrp
hlt
aas
movsb
in
push
mov
and
negb
cmp
mov
adcl
pop
out
xchg
sbb
add
rcll
dec
mov
dec
ltr
lret
mull
mov
fmuls
insl
sbb
in
xor
movsl
cltd
lret
cs
push
cli
adc
add
lcall
imulb
lds
xchg
xchg
mov
xor
fucomi
sti
jae
outsl
in
push
out
cli
test
es
scas
rorb
cmp
cmpsb
push
test
pusha
xchg
nop
pushf
das
adc
or
dec
push
mov
fimull
inc
pop
dec
ret
xchg
xchg
leave
shll
out
ret
cltd
sbb
ss
xchg
and
mov
dec
jb
iret
push
xchg
push
fildll
and
jg
push
out
aas
and
add
sbb
sub
add
jns
sub
jg
xchg
mov
sub
in
popa
mov
pop
dec
mov
or
mov
sbb
bound
movsl
ret
jne
out
fdiv
xor
sub
sbbl
adc
loop
lret
decl
jg
pop
sub
mov
push
or
stos
jecxz
movsb
xchg
or
repnz
jecxz
push
shll
stos
insl
shrb
add
mov
push
dec
pop
inc
daa
lock
jmp
jbe
push
es
lock
mov
int
gs
pop
fistps
mov
push
cwtl
push
call
and
aam
jo
jecxz
les
jp
out
push
fdivrl
mov
mov
loopne
cwtl
xchg
cs
bound
movsl
or
iret
cld
scas
repnz
inc
repz
in
data16
data16
mov
sub
inc
cmc
jnp
jne
out
cmp
loope
sbb
movsl
test
jl
push
push
and
das
cltd
mov
pop
jle
add
lds
lea
loope
jae
in
mov
cmc
add
or
fs
test
inc
jbe
xchg
jno
iret
xor
lock
out
sti
sub
aam
mov
inc
inc
mov
xor
stc
mov
outsl
aam
lds
leave
testb
rcll
int
cmp
push
lcall
sub
scas
std
shrb
out
pop
mov
or
sub
dec
adc
mov
jnp
in
sub
subb
mov
scas
sbb
push
loopne
pop
out
out
dec
sbb
inc
repnz
sarl
push
cmp
daa
fistps
lock
xlat
stc
inc
push
mov
pop
lea
jle
shll
pop
inc
nop
test
jnp,pn
xchg
jae
sarb
lods
cmp
loop
bound
jae
ds
cmpsb
in
popf
clc
cmp
jnp
xor
push
inc
sub
data16
cli
pop
jle
aaa
pusha
sbb
je
aam
ljmp
pop
fstpl
push
pop
jge
aam
inc
mov
and
xor
jno
mov
dec
fdivrs
push
test
cmpsl
loope
mov
mov
jae
loope
les
pop
rcrl
adcl
rclb
outsl
sbb
mov
jo
outsb
or
fistpl
mov
dec
test
pop
lock
inc
roll
or
push
enter
cltd
inc
mov
lret
and
das
xchg
aas
push
push
cmc
pop
mov
jno
dec
gs
jae
push
std
dec
mov
daa
or
adc
neg
cmp
add
and
aas
pop
lret
mov
or
dec
add
adc
xchg
imulb
shlb
sub
clc
mov
xchg
fildl
inc
jp
xchg
dec
int
push
lcall
cmpsb
dec
iret
lods
mov
cmpsl
aad
movsl
xorb
and
sbb
mov
bound
jae
xlat
out
add
ss
mov
pcmpeqw
pop
adc
lods
test
das
pushf
push
jnp
inc
loopne
bound
cmpsb
pop
adc
xchg
cmpb
jle
scas
jl
mov
or
cmpsb
inc
roll
add
aad
daa
cli
emms
flds
std
lods
test
inc
shrb
mov
fdivrl
ja
mov
sbb
jl
hlt
orps
mov
cmp
pushf
loopne
fcoml
jae
cltd
leave
ficoml
fsts
hlt
jmp
mov
add
adc
les
pop
rcrl
lods
mov
lds
mov
xlat
call
mov
icebp
ret
dec
aaa
push
inc
adc
mov
pop
and
and
push
shlb
xchg
xor
mov
push
dec
mov
jmp
or
dec
jmp
xchg
in
push
lock
adc
xchg
pushf
shlb
push
and
mov
sub
test
inc
in
adc
sbb
fucomip
into
test
ror
loope
mov
jne
jbe
in
or
inc
adc
orb
add
mov
std
sbb
scas
jo
mov
jmp
std
push
insb
and
aam
xchg
cmp
xchg
clc
roll
cmp
sbb
inc
pop
mov
arpl
mov
pop
cmp
lods
push
mov
pop
or
popf
pop
in
popa
xchg
xchg
xor
pop
in
lock
pop
into
and
in
scas
inc
call
out
jmp
pop
or
inc
xchg
out
sti
lock
dec
inc
add
push
sub
outsl
lret
mov
mov
jne
faddl
xchg
xor
mov
mov
scas
test
lret
mov
xlat
cli
jg
and
ret
xchg
fldenv
mull
in
xchg
imul
lods
icebp
mov
out
movl
push
cmpsb
out
inc
mov
push
mov
ljmp
out
sub
ja
std
dec
xchg
mov
in
iret
nop
adc
jecxz
addr16
faddl
mov
test
adc
adc
jnp
cmp
mov
je
cmc
stc
imul
jb
jbe
cmp
dec
pushf
in
push
jmp
data16
aad
xor
sub
repnz
add
jge
cmpsb
add
jmp
popa
enter
and
jns
push
aam
cmpsl
pop
xor
sbbb
fists
enter
int
cmp
shrl
in
xchg
and
enter
jecxz
mov
dec
outsb
mov
pop
jg
bound
xor
and
or
xor
repnz
pop
pop
loopne
mov
hlt
cmp
bound
stc
add
insb
jecxz
outsb
dec
cmp
out
inc
add
rcrb
lods
les
cmpsl
int
out
lret
setns
and
pop
sub
jp
std
inc
mov
mov
stos
dec
je
shlb
arpl
push
shll
cmp
cmp
outsb
outsl
adc
pop
push
imul
and
dec
dec
mov
adc
xor
jp
out
add
mov
ret
mov
xchg
repnz
cld
sbb
xchg
fildl
hlt
lea
gs
push
sub
std
into
dec
xchg
mov
mov
repz
cld
dec
xchg
xor
mul
stc
jecxz
sub
fstps
mov
popa
lea
jno
xchg
xor
dec
sahf
inc
mov
cmp
lret
and
mov
or
ret
cmpsl
outsl
push
popa
cmpsb
mov
jmp
lods
push
lea
cmp
pop
callw
psubb
sub
enter
popl
movsb
mov
inc
cmp
and
shlb
fdivl
rorb
shlb
stc
outsl
xchg
cmpsl
or
push
add
cltd
lret
cwtl
sbb
sub
fidivs
jae
inc
push
add
ret
inc
cmp
xchg
add
das
enter
lret
aam
mov
pop
aas
nop
jmp
cltd
jmp
xchg
jecxz
icebp
outsl
sub
push
fsubrs
mov
adc
outsl
sbb
pop
out
scas
or
ljmp
xor
aam
mov
sub
jb
aam
xchg
push
sub
cmp
fdivs
mov
xor
push
mov
add
add
fstp
pop
subl
inc
shll
lods
and
jno
call
jp
incl
pushf
cmpsl
mov
cli
jo
es
in
mov
push
xchg
repz
or
enter
and
inc
mov
adc
loopne
repz
sub
pop
push
test
rcr
mov
mov
or
std
or
jne
jae
icebp
inc
mov
dec
inc
out
aaa
pop
fisubrl
shr
ds
dec
push
popa
xor
cmp
cmpsl
pop
fwait
bound
adc
popa
leave
sbb
lcall
ja
dec
int3
jmp
jg
imul
notl
push
fsub
push
fprem1
arpl
movsl
test
lret
testl
sub
dec
inc
jl
jmp
inc
ror
scas
pop
xor
es
loope
lods
add
hlt
lods
divl
jge
fistpl
xchg
pop
sbb
adcb
lock
dec
push
stc
aad
into
call
inc
jae
lcall
arpl
sbb
cli
mov
stc
scas
add
add
dec
icebp
mov
inc
out
push
lea
jne
xor
dec
test
mov
ret
sti
add
lcall
lock
ss
testl
xlat
jle
or
xchg
or
loop
sbb
aaa
xchg
out
mov
icebp
cs
sbb
add
jmp
push
fwait
mov
fwait
or
add
ljmp
jp
ja
fidivs
xchg
lahf
push
loopne
mov
mov
out
in
imul
lea
mov
lret
fwait
mov
mov
pop
push
sub
fwait
in
sbb
jmp
mov
insl
add
xor
popa
sbb
sbb
sbb
xchg
out
rcrb
cmp
or
cwtl
sub
push
leave
movsb
call
addr16
pop
push
sbb
and
mov
sbb
stos
cmp
adc
push
jg
pop
cmpsl
ss
cmp
pop
leave
decl
outsb
mov
xchg
shrl
outsl
insb
cmp
push
push
mov
inc
xchg
cs
cmp
lods
lret
mov
imul
sbb
mov
cwtl
clc
xchg
jle
popa
sub
enter
cmp
or
iret
fisubrl
cs
sti
cltd
or
cmpb
insb
jmp
je
adc
int
imul
loop
cli
mov
jp
and
je
aaa
and
es
sti
mov
pop
pop
outsl
roll
xor
xchg
fisttps
or
outsl
xchg
mov
stos
mov
inc
fdivl
push
int3
ss
hlt
lcall
fisttpll
push
int3
xor
mov
fdivrs
jne
outsb
in
xchg
xor
dec
repz
xchg
jb
loop
test
mov
cmp
pop
pop
jnp
fsub
ljmp
mov
pop
pusha
sub
lahf
mov
mov
jnp
jmp
push
xchg
ds
aaa
xor
imul
gs
in
ljmp
out
aas
pop
xchg
rolb
sahf
push
push
xor
enter
aas
out
icebp
xchg
xchg
jno
mov
lods
push
inc
out
cmp
test
mov
cld
outsb
jo
mov
jne
cmp
scas
in
mov
test
aam
cmp
scas
inc
std
and
sbb
mov
mov
daa
and
adc
jge
sub
xchg
stos
sub
imul
mov
and
iret
iret
gs
push
inc
push
imul
popa
daa
and
inc
insl
push
mov
cltd
out
repnz
out
sbb
or
iret
add
sub
in
jns
cltd
add
mov
shr
or
sbb
push
test
cmp
hlt
xor
cltd
pop
nop
in
nop
mov
inc
pop
xor
push
imul
xchg
mov
fadd
bound
cmp
scas
or
les
repnz
push
adc
inc
mov
stos
adc
mov
xchg
dec
in
aad
movsl
add
leave
sbb
cmp
push
jmp
xlat
das
pop
jge
ja
or
ret
mov
jb
outsb
sbbl
inc
lds
mov
xor
mov
cltd
cmc
lods
addr16
jbe
lock
roll
ret
loopne
gs
cmp
pop
lcall
mov
andl
imul
push
sbb
mov
push
enter
loop
andl
movsb
add
jo
lock
imul
movsl
outsb
or
jp
xchg
jnp
xor
loopne
fwait
hlt
inc
out
push
int
enter
xor
sub
stos
stos
std
mov
cmp
ret
decb
jle
rclb
add
xchg
mov
cltd
jg
mov
stc
in
imul
inc
rorb
mov
into
int3
aas
jl
xchg
jne
sbb
cmpl
inc
flds
cmpsl
mov
add
cmp
popa
mov
incl
jno
test
mov
jge
mov
mov
add
and
mov
jno
push
lods
loop
scas
imul
cmc
add
cmp
les
push
lea
lds
movsl
nop
mov
xor
sub
mov
push
mov
push
mov
loope
lock
push
test
xor
in
mov
mov
xchg
nop
stos
in
imul
and
into
xor
into
and
sbb
gs
cli
cmp
flds
add
rcr
pusha
pop
jae
mov
call
frstor
pop
ss
in
jmp
lret
xchg
mov
cmp
int3
mov
sub
ret
jb
adc
dec
jg
mov
push
adc
and
lods
pop
stc
or
xchg
or
xchg
inc
mov
push
stc
imul
enter
or
push
mov
in
and
jmp
test
mov
mov
cmc
xor
jae
mov
inc
adc
mov
sub
aaa
mov
orb
dec
mov
jmp
in
shll
inc
scas
test
stos
in
out
xchg
into
call
mov
xor
jb
xor
push
mov
subb
and
out
xor
out
outsl
fcompl
add
xchg
pop
cmpsl
cmp
push
xchg
ret
out
sti
or
ret
adc
in
repz
push
push
inc
fs
inc
and
rorb
sub
pushf
aas
repz
mov
das
xchg
dec
stc
inc
add
pop
test
sbb
jbe
mov
addl
xchg
and
mov
scas
in
xchg
cmp
and
dec
out
mov
hlt
lahf
imul
mov
inc
mov
mov
xchg
out
mov
cmp
or
sub
mov
pushf
aas
xchg
idivl
je
fstpt
jmp
sbb
sti
add
je
mov
ret
sbb
sub
add
add
scas
inc
adc
inc
add
arpl
jge
pop
aam
popf
in
out
int3
cld
jge
sbb
mov
pusha
push
outsb
push
mov
mov
pop
popl
ja
fsts
add
and
mov
mov
and
outsb
js
movsbl
inc
ret
fsubs
mov
cmp
scas
jge
inc
mov
jno
xchg
push
loope
jnp
and
mov
sti
xchg
stc
arpl
jp
mov
jmp
aas
fcomip
rcrb
stc
pop
fs
je
test
loop
adc
add
test
sahf
repz
xchg
and
jecxz
lea
roll
notb
xchg
inc
pop
les
mov
pop
pop
add
inc
pop
add
and
mov
jb
nop
xchg
fcomps
or
stc
lods
mov
testb
push
jbe
or
cmp
add
cmp
lock
adc
dec
inc
or
loope
pop
lea
fsubs
js
jle
mov
sbb
inc
lea
push
js
int3
lcall
ljmp
xor
xchg
xchg
xchg
sbb
mov
sbb
or
xchg
into
or
jl
inc
mov
xlat
push
mov
pop
dec
mov
sub
arpl
push
incb
push
out
dec
add
jae
lahf
mov
and
loop
adc
inc
ja
or
add
sbb
xor
bound
mov
xlat
mov
les
orb
pop
in
lea
in
pop
cli
add
outsl
aaa
sbb
cli
outsb
repnz
int3
aas
add
xchg
lods
pop
clc
push
add
out
lods
ss
push
xor
sbb
mov
imul
inc
addr16
push
mov
ds
adc
xchg
mov
xchg
inc
loopne
pop
or
mov
call
push
cld
out
in
jg
imul
sub
jno
nop
xchg
sub
mov
cmp
scas
and
repz
aas
mov
nop
insl
filds
push
fs
adc
leave
cmpl
in
sub
and
pop
push
xchg
call
jne
dec
pushf
sbb
xlat
stos
clc
loope
negb
xchg
mov
add
call
test
mov
out
lahf
or
hlt
pop
inc
or
lcall
sbb
insb
push
fdivrl
ja
sbb
cmp
cltd
scas
push
xlat
mov
mov
scas
adc
lods
jno
or
outsl
mov
scas
mov
repnz
xor
cmp
mov
cmp
pop
into
cs
cmp
or
movb
jo
shlb
cmp
jnp
stc
idiv
or
mov
in
lret
fwait
pop
subb
mov
xor
fstpt
lcall
cmp
pop
jle
inc
scas
insl
jo
jbe
xor
clc
hlt
stos
clc
stos
mov
cmp
cmp
lret
xchg
in
and
int3
mov
xor
push
pop
imul
addl
hlt
add
xor
lret
inc
sbb
mov
sub
and
push
jb
test
xchg
mov
lock
push
sub
cmp
js
mov
or
mov
stos
cmp
mov
pop
gs
les
lea
pop
lret
adc
mov
jge
es
ds
dec
add
mov
int
cld
sbb
mov
xchg
mov
loope
lea
add
adc
das
cmc
into
jmp
xchg
dec
cmp
jmp
push
and
in
fdivl
ss
fadds
jns
sub
outsb
sub
lea
push
sub
adc
fwait
js
sbb
mov
xchg
fnstcw
jge
and
ja
aad
dec
push
xchg
lods
cs
xor
out
cmp
into
push
ds
jg
add
mov
fcmove
xchg
inc
or
xlat
ret
jne
jg
outsb
push
imul
sbb
jbe
inc
int3
inc
push
std
cltd
mov
or
jno
jg
in
xchg
sbb
stos
inc
xchg
mov
xchg
lds
popl
adc
mov
inc
ret
ss
movsl
mov
pop
int3
inc
push
nop
xchg
enter
push
mov
mov
mov
and
outsb
in
and
dec
mov
or
shrl
inc
mov
and
daa
out
inc
fdivs
dec
cmp
cltd
ljmp
rolb
aad
add
stos
pop
xchg
sahf
fs
inc
daa
push
out
into
loop
neg
pop
sbb
in
push
cli
push
mov
hlt
lds
adc
sbb
stc
push
out
imul
jle
stc
leave
jns
or
adc
incl
into
insl
cmc
ret
cltd
hlt
push
movsl
pop
in
in
and
mov
mov
fldenv
into
mov
cwtl
sbb
jno
mov
adc
sub
xor
cmpsb
mov
sub
pop
jp
mov
loop
jae
adc
push
mov
jb
addb
loop
xor
add
mov
dec
out
ficoml
mov
shrl
mov
add
sti
cli
fsubr
or
loop
mov
and
or
in
xchg
jb
or
dec
pop
inc
enter
inc
dec
dec
movsl
push
lods
mov
iret
mov
xor
out
xchg
and
in
jnp
ror
fiaddl
xchg
movsl
ljmp
inc
cmpsb
mov
mov
sbb
imul
ret
insl
mov
sub
cmp
push
lock
cmpsb
out
push
fdivs
jo
mov
or
inc
in
xor
shll
and
js
aad
popf
lock
sbb
jno
push
shl
cmp
jmp
aad
inc
leave
popf
test
xor
push
movsb
jne
loope
push
push
pop
subl
pushf
ds
or
adc
sub
cwtl
iret
repnz
inc
mov
xor
mov
loop
ljmp
or
push
sbb
lea
xchg
test
adc
inc
fbstp
test
adc
sbb
adc
xorb
andb
cli
ret
xchg
pop
repnz
std
adc
and
pop
stc
fistps
pop
sub
xlat
dec
dec
xchg
fiaddl
mov
loope
mov
jmp
outsl
gs
mov
jno
push
pop
inc
aam
lret
int3
int
inc
orb
adc
and
shlw
ret
ret
sti
ja
test
xchg
lods
or
std
lahf
insl
or
pushf
orl
mov
push
adc
adc
pusha
cmp
dec
das
sub
dec
mov
mov
sbb
jae
aam
jns
pusha
stc
insl
jae
mov
inc
cmp
lret
loope
jns
int3
shll
inc
rclb
push
out
mov
mov
in
scas
inc
jp
getsec
xchg
sahf
sahf
loopne
in
pop
into
jae
test
jp
in
sub
sarb
sbb
dec
adc
jmp
popa
sbb
push
notl
push
cmc
mov
mov
scas
je
lahf
pop
stc
xor
inc
insl
jecxz
cmp
adc
hlt
xchg
ja
test
mov
ffree
test
jecxz
mov
xchg
orb
mov
mov
push
xor
roll
mov
lods
call
icebp
lret
nop
sarb
fs
jb
lret
repnz
or
cmp
dec
rol
test
es
sub
in
in
fs
test
or
movsl
pop
imul
cmc
add
mov
test
sbb
fnstsw
pop
fisttpl
fistpl
loopne
push
adc
jecxz
daa
js
push
inc
jl
sub
lock
cmp
mov
adc
push
push
jmp
jo
add
xchg
add
adc
push
out
inc
mov
dec
cmp
inc
fidivl
jle
sub
in
sarb
or
dec
adc
add
lods
cmp
xlat
mov
insb
or
movsl
jp
mov
or
call
ss
cli
add
cmp
sbb
mov
dec
rolb
pop
add
inc
ret
imul
and
cs
mov
jl
lret
jle
mov
lret
sub
sti
nop
testl
dec
loopne
or
xchg
cmp
jmp
lock
jmp
or
push
dec
inc
inc
mov
mov
loopne
xlat
mov
cs
jmp
cmpsl
push
jle
push
cmp
test
lock
scas
and
lcall
add
ret
jb
dec
fwait
or
sbb
push
int3
or
jmp
cmp
icebp
loope
stos
push
aaa
mov
mov
jge
mov
push
mov
pop
cld
mov
add
in
repnz
push
cs
mov
push
enter
pop
lea
mov
jno
les
mov
push
inc
fcoml
imul
imul
stos
aam
daa
xlat
hlt
inc
bound
sbb
jbe
leave
xlat
loope
ja
inc
jp
imul
jle
sub
lods
push
lcall
test
test
pop
mov
cmovle
enter
or
out
test
bound
sbb
jecxz
mov
lock
mov
cmpsl
inc
mov
test
xchg
pop
in
push
sbb
scas
lods
lahf
sbb
es
pop
mov
jnp
mov
out
pop
xchg
xor
push
pop
lret
sahf
popw
or
lods
xchg
push
push
sbb
cmp
sahf
mov
in
lret
mov
cwtl
std
jnp
fs
fcompl
enter
xchg
mov
arpl
rolb
int
sbb
mov
das
push
jns
movsb
adc
xor
mov
daa
jg
das
cmp
push
xor
mov
inc
pop
insl
clc
icebp
outsl
bswap
push
pop
dec
pop
and
sbb
cmp
add
repnz
push
dec
shl
jmp
stc
inc
push
out
sbb
xchg
nop
fwait
or
cmp
popa
push
inc
fadd
mov
std
push
inc
xor
in
mov
jne
imul
lods
fists
enter
les
cmp
and
mov
cld
mov
scas
inc
pop
insb
xchg
mov
xchg
lds
dec
std
and
hlt
aaa
sbb
jnp
xor
push
sti
pop
cmp
movsl
pop
pop
and
nop
add
xor
fsub
mov
dec
push
inc
cmp
shll
cmp
cmp
lods
mov
aad
notb
dec
daa
xchg
push
popf
push
cmp
and
dec
lret
mov
sbb
sahf
incl
int3
leave
xchg
inc
inc
lcall
push
std
je
popa
jb
mov
sbb
je
rorl
rorl
dec
sbb
push
xchg
push
outsl
les
push
inc
stos
roll
sub
pop
add
xchg
jp
mov
mov
xchg
sbb
repz
sub
inc
fldt
gs
jp
adc
inc
mov
cmp
gs
lahf
xor
arpl
xor
adc
mov
cmp
xor
inc
lea
fsubs
sbb
fnstenv
dec
imul
jbe
out
push
add
jg
jle
cmc
imul
mov
outsb
cmp
out
mov
mov
add
mov
out
add
xchg
aad
int3
mov
insl
insl
enter
xor
jge
push
pop
xchg
aad
mov
in
mov
sbb
ror
test
sbb
mov
cmp
jbe
outsb
pop
gs
fwait
mov
fdivs
and
or
das
movsb
jns
cmpsl
add
mov
aam
sbb
fs
bound
out
repnz
loope
push
enter
mov
xlat
or
aaa
pop
add
fsubrp
inc
push
push
xchg
push
xor
cwtl
pop
add
xchg
jbe
sub
push
dec
pop
and
idivl
shlb
inc
out
imul
xor
sbb
adc
sbb
data16
add
sub
ja
insl
jae
cwtl
stos
push
cmp
xlat
sub
stos
push
je
xchg
in
adc
mov
cmp
into
cmpsb
add
in
push
push
popf
push
loopne
push
ret
arpl
dec
lahf
inc
sub
and
das
loopne
mov
sar
sbb
ljmp
jbe
imul
addr16
push
inc
push
sub
mov
mov
cmc
xchg
out
mov
and
inc
rcl
in
inc
sub
cmp
mov
mov
mov
xorb
sar
xchg
lods
imul
dec
jae
pushf
fnstcw
mov
loopne
js
mov
aad
sub
xor
push
mov
fucomip
mov
incl
dec
xchg
sbb
or
xchg
push
out
loope
xchg
add
jns
repnz
xchg
mov
aad
xchg
imulb
cmp
in
sub
inc
rclb
sbb
cs
test
add
jae
lea
scas
add
fwait
jb
mov
dec
sub
iret
push
sti
mov
fcoml
push
mov
aad
clc
dec
xor
push
mov
cltd
loope
scas
mov
movsb
or
cmp
or
nop
jl
lret
arpl
jecxz
adc
push
enter
jg
int3
dec
rolb
sbb
cmp
or
xlat
into
mov
pushf
clc
das
ja
ja
dec
je
or
sub
mov
into
cmc
les
mov
or
cmpsb
outsl
aas
shrb
xor
test
std
loop
outsb
push
repz
movsb
mov
add
mov
xor
leave
push
push
out
push
in
hlt
loope
stc
push
daa
xchg
push
and
cwtl
sti
or
pop
ds
outsb
daa
aas
inc
cltd
sub
inc
daa
fdivrs
scas
and
addr16
fs
leave
dec
pop
fidivrl
sub
xor
sbb
push
stos
push
lret
in
mov
into
cs
lods
pop
std
sar
in
mov
aas
movsb
xchg
inc
push
add
cmc
sbb
pop
popf
mov
dec
mov
or
fcomip
and
add
sahf
rcll
and
testb
push
lcall
out
popa
and
xchg
xlat
out
mov
stos
mov
push
dec
fs
xor
xchg
test
dec
dec
push
mov
sbb
lock
jns
push
sahf
sbb
sbbl
icebp
fwait
pop
push
mulb
sub
scas
adc
jmp
arpl
loop
popl
shlb
or
adc
mov
insl
mov
push
repnz
mov
mov
xor
insb
push
int
mov
xchg
iret
mov
sbb
ror
aam
mov
xor
lea
mov
test
xor
stos
es
xchg
pop
push
aam
outsb
sub
jns
mov
lods
mov
clc
outsl
sar
push
xchg
sahf
or
testl
ret
cli
xchg
ficoms
sbb
mov
push
push
pop
mulb
inc
cs
mov
mov
cmpsl
nop
and
popa
inc
pushl
rorl
fwait
xchg
popf
les
push
out
mov
std
cwtl
and
mov
arpl
mov
pop
dec
test
pop
mov
sbb
dec
cmp
sub
repnz
jbe
insl
sub
jl
and
sbb
jmp
aad
psrlw
test
movb
inc
add
xor
push
pop
imul
xchg
loope
and
xchg
loope
mov
testl
xchg
mov
sbb
dec
call
stc
or
std
push
mov
xlat
leave
mov
out
push
shrl
add
shlb
std
aad
dec
xor
lds
loopne
sbb
loop
sub
imul
pusha
jl
mov
negb
push
popa
les
cmc
shrb
cmpsl
addl
jg
test
in
out
inc
mov
xchg
and
mov
cmc
mov
fcmove
pop
dec
jo
xchg
push
mov
sahf
xchg
mov
or
iret
dec
rclb
rolb
dec
outsl
test
aam
xor
hlt
fisttpl
mov
out
lds
jp
leave
add
lock
mov
loopne
aas
lea
dec
hlt
std
aaa
add
add
cmp
fstl
out
pop
mov
dec
mov
dec
enter
push
mov
inc
iret
ja
sub
push
xor
sub
daa
pop
in
push
pop
xchg
fistps
shl
mov
cmp
insl
icebp
jo
test
iret
sbb
sahf
lret
fld
subb
out
xchg
fsubrp
nop
inc
or
mov
imul
imul
and
ficoml
ja
test
adc
mov
lea
int3
sahf
add
push
enter
inc
sub
call
fbld
xor
ljmp
cs
xlat
fldt
xchg
push
int3
sbb
cmp
cmc
fwait
cmp
and
pushf
mov
mov
gs
and
rclb
imulb
xchg
stos
adc
sub
enter
das
mov
mov
cmp
and
push
leave
and
loopne
xor
test
shll
cmp
sub
cmp
fstps
push
and
adc
dec
rcl
jno
adcl
dec
xor
mov
lods
out
push
push
movb
ret
imul
lea
sbbl
xchg
push
mov
stos
out
sub
lcall
pushf
repz
dec
pop
pop
jle
and
dec
lods
lea
push
lahf
outsl
faddl
xor
fdivrs
sbb
pop
sti
dec
fmulp
pop
bound
lods
dec
fwait
adc
mov
mov
popf
xor
fstps
adc
stos
xchg
lock
int
ljmp
jge
outsl
lahf
jnp
mov
andl
cld
and
ljmp
enter
adc
pushf
lret
jl
lods
mov
and
jp
repnz
fwait
das
xor
jo
inc
sbb
xor
inc
push
insb
loope
adc
cmp
mov
cli
and
fdivrs
sbb
dec
popa
mov
hlt
or
fidivl
clc
sub
in
ret
xor
adc
clc
lds
mov
shlb
xchg
subb
cmpsb
push
shl
repnz
sbb
mov
lds
or
lds
add
in
push
lods
pusha
xchg
loope
xchg
mov
test
dec
pop
sbbb
es
jae
mov
sti
dec
xorb
popl
outsl
fimull
gs
test
cli
lahf
push
sbb
arpl
outsb
popf
push
add
jne
push
or
cli
and
orb
mov
mov
lea
out
repz
cmp
outsl
int3
insb
push
adc
scas
pop
sub
mov
mov
sub
ret
adc
sub
pusha
pop
call
mov
stos
xor
push
adc
pop
stos
stos
add
sbb
jg
fsubrl
jge
mov
xor
mov
cli
cmp
fimull
sbb
push
mov
mov
sbb
int
mov
int
mov
std
jnp
push
xor
popa
out
pop
add
push
mov
scas
imull
and
mov
jl
push
pop
popa
xchg
and
inc
in
jmp
rorl
jo
xor
mov
add
sarb
mov
sbb
jmp
in
jnp
mov
push
mov
inc
and
mov
loop
add
adc
adc
stos
int3
stc
imul
mov
lods
scas
repz
pop
adc
pushf
jno
adc
jp
mov
in
push
xor
sub
inc
in
nop
cmp
mov
loop
nop
mov
xor
or
xchg
add
sbb
or
xchg
lock
addr16
or
xchg
adc
out
and
jmp
decb
pop
jmp
sub
insl
add
or
loopne
lret
das
out
cmp
xor
and
loope
mov
lret
insb
push
cmp
pop
adc
push
dec
popf
je
out
shrb
ss
ds
popa
cs
cmp
pusha
mov
xlat
mov
lret
jmp
adc
fwait
push
xchg
mov
sub
shlb
dec
sub
pop
out
sub
fnstsw
popf
out
mov
adc
repz
insb
loope
or
push
push
cmp
cmpsb
cwtl
int
loope
cmpsb
decb
push
test
out
pop
and
pop
leave
push
sti
cmp
jmp
scas
inc
iret
pop
testl
add
mov
testb
sub
mov
bound
subb
xchg
xchg
dec
dec
mov
jae
cld
std
pop
jl
aas
pop
jg
cmp
in
pop
test
dec
pop
cmp
roll
mov
mov
lods
nop
sub
jns
xchg
insl
cwtl
lods
inc
scas
sbbb
stos
dec
cs
ror
inc
sub
mov
or
ljmp
lods
and
pop
cmpsl
ret
mov
dec
push
test
cmp
mov
dec
sbb
mov
mov
fists
rol
or
xor
sar
adc
adc
mov
xchg
mov
cltd
mov
xchg
or
cltd
xchg
push
js
pop
xchg
and
pusha
fcmovbe
repz
xor
lock
repnz
cmpsb
sti
mov
cmpsb
std
loop
mov
out
mov
iret
push
fistl
test
mov
out
inc
sbb
jne
into
push
leave
imul
out
mov
sbb
aaa
sub
mov
jb
cmp
xchg
sbb
push
mov
rol
in
lods
rol
dec
movsb
xchg
adc
pop
add
pop
push
es
xor
inc
ljmp
out
mov
pop
dec
cmp
pop
loop
xchg
and
orl
pop
xor
iret
int3
pop
pushf
dec
ljmp
adc
jbe
bnd
jnp
data16
andb
mov
pop
adc
lock
pop
addr16
mov
pop
scas
pop
cmpsl
add
pop
pop
imul
jo
cmp
pop
jno
jge
shlb
cmp
xchg
jo
mov
mov
pop
lret
dec
lahf
mov
les
inc
pop
pop
cmp
jmp
sbb
dec
andb
or
ja
push
push
aaa
scas
xor
xchg
mov
inc
push
xchg
imul
out
mov
add
shlb
rcrb
sti
cmpsb
pop
mov
loope
mov
mov
int
dec
mov
mov
push
in
mov
scas
push
loopne
or
and
jno
test
jg
xchg
imul
add
test
jnp
xchg
popa
aad
aad
add
xor
dec
iret
lahf
mov
xchg
je
sbb
and
jle
and
jle
loope
stos
std
add
pushf
sub
faddl
sub
shrb
mov
aam
push
pushf
xchg
lds
jno
cs
add
cld
mov
jo
cmp
out
mov
adcl
data16
std
sub
mov
loope
cmpsb
xchg
cmp
jb
mov
std
jp
setns
in
jl
sbb
aam
subl
push
popf
adc
ret
pop
ds
stc
arpl
std
adc
test
cld
aam
pushf
dec
cld
inc
and
push
fwait
mov
sbb
subl
jbe
inc
or
andl
mov
ret
xlat
lea
shrb
ret
push
push
push
inc
jecxz
add
cmp
ror
inc
xchg
cmp
icebp
sahf
sub
scas
es
add
mov
push
inc
xorb
push
mov
and
repnz
fs
in
pop
and
cld
sti
sbb
inc
pushf
popa
add
mov
dec
add
push
testb
inc
mov
iret
pushf
or
pop
mov
xlat
daa
sub
sub
mov
adc
or
pop
cmp
push
ret
lcall
jno
inc
std
pop
call
sahf
or
sub
test
out
cs
fwait
enter
cmp
popa
add
out
mov
push
shrb
enterw
loopne
push
cs
icebp
push
or
hlt
das
pop
adc
xor
push
cs
test
inc
inc
or
and
andl
mov
inc
push
icebp
ja
loop
mov
or
pop
dec
daa
sbb
es
ds
dec
push
mov
jne
sub
dec
out
sub
fcmovnbe
mov
push
test
pop
idivl
mov
or
aas
cmc
mull
inc
lret
jle
out
test
add
adc
and
push
inc
sbb
mov
push
push
fsubrl
lods
das
mov
lods
lea
mov
adc
xor
push
sub
test
jg
out
inc
aam
jmp
adc
xor
mov
shrb
lods
lcall
mov
push
xchg
repz
mov
aam
sbb
in
shlb
stos
in
sbb
aam
push
lods
lret
mov
sbb
jmp
mov
jg
scas
cmpsb
or
adc
mov
fldcw
xchg
cmp
xchg
sbb
insb
lods
pop
testb
cmp
int3
sbb
or
inc
lds
push
xlat
xor
adc
cmp
arpl
dec
xchg
mov
cmpsl
arpl
jo
out
add
cmpl
cmp
dec
mov
out
pop
loope
sbb
add
jo
cmpsb
outsl
cmpsb
pop
lahf
mov
test
or
xchg
xchg
mov
inc
stos
jbe
push
sbb
inc
xchg
push
and
movsl
fcomip
mov
aas
into
loop
jle
fiaddl
jg
mov
and
aas
pop
out
push
gs
out
dec
in
int3
out
repz
into
stc
neg
inc
inc
dec
add
sarl
lods
push
mov
xor
or
push
loope
out
lock
mov
sahf
ret
aam
nop
add
and
data16
sbb
es
loope
fcompl
cwtl
sarb
insl
push
cmc
sub
xchg
mov
stos
xchg
sub
inc
ds
ret
push
fstl
mov
lock
lock
test
ret
sub
out
enter
jmp
in
cltd
or
adc
mov
xor
mov
pusha
sub
pushl
push
and
add
mov
jmp
inc
stos
lahf
sbb
mov
pop
fs
pop
rorl
or
inc
cmp
jp
lret
daa
sub
in
shll
lcall
pop
xor
mov
rol
aas
pop
mov
pop
pop
xchg
test
insl
or
mov
pop
sbb
daa
xor
adc
mov
aas
cltd
and
stos
jae
test
and
outsb
outsb
out
imul
push
fildll
push
test
mov
lods
ss
and
sbb
out
xchg
pop
fwait
ret
dec
cwtl
cld
scas
jmp
roll
es
jo
jnp,pn
test
mov
pop
xchg
enter
fisttpl
aam
js
lods
dec
ret
stos
push
cs
mov
sbb
xor
mov
lret
lock
cmc
mov
lcall
test
pushf
add
ror
cld
dec
inc
int3
pop
xchg
push
sub
mov
sub
jge
sarl
xor
push
adc
fistps
pop
subb
jle
shl
lds
fistl
push
in
loop
inc
add
and
push
mov
mov
jge
mov
nop
xchg
pusha
mov
xchg
scas
mov
add
add
out
daa
hlt
push
jl
jmp
scas
add
sub
jl
or
movsb
xor
je
push
xchg
and
pop
and
adc
mov
inc
cli
or
mov
sub
xor
lds
in
test
lea
dec
and
ficompl
push
dec
mov
std
movsb
or
push
push
in
xchg
mov
or
cmp
nop
notb
das
mov
and
mov
out
lds
xor
push
mov
in
mov
int3
sub
push
add
xchg
shll
loope
and
and
mov
mov
or
pop
xchg
lahf
ss
push
add
outsb
ja
stc
adc
sti
inc
popa
fwait
std
std
pushf
xor
bound
mov
sbb
inc
and
xchg
mov
imul
xor
cmp
mov
jo
les
mov
sub
ja
xchg
in
jp
aam
xor
xchg
test
mov
loope
push
adc
lds
loopne
sbb
icebp
mov
or
iret
pop
mov
pusha
push
insb
out
addr16
popf
cmpsl
leave
push
inc
in
pop
bts
mov
ja
mov
mov
test
mov
in
mov
pop
les
sub
mov
out
pop
xlat
mov
sti
ds
test
mov
clc
mov
sub
cmp
sub
sub
dec
out
ror
lods
push
into
xor
lds
je
or
rorl
out
test
sbb
fbld
and
add
imul
je
mov
ja
cmp
add
das
loope
inc
mov
fcomi
mov
ror
loop
sbb
addr16
push
and
stc
pop
dec
data16
adc
outsb
rorl
mov
aaa
ficoms
lods
gs
jecxz
cmp
adc
lcall
movsb
aad
xor
xchg
test
dec
ret
or
or
dec
xor
int
jns
rep
sbb
sub
adc
add
xlat
das
xchg
mov
movsb
xchg
adc
dec
sbb
lret
cmp
ljmp
xchg
lds
xchg
leave
cmp
sbb
xor
insb
lea
xchg
push
adcb
sbb
icebp
xchg
mov
adc
movsl
loopne
pop
ret
cmp
and
push
adc
aam
inc
aam
sar
arpl
ffree
push
push
out
imul
fnstcw
fwait
loop
insl
xorb
clc
push
fnstcw
arpl
sub
or
pop
sbb
mov
pop
test
push
mov
lret
int
fldl
mov
loopne
mov
inc
lods
dec
fdivrs
idiv
outsb
repz
sbb
add
adc
arpl
aam
scas
scas
xor
les
xor
test
push
mov
and
pop
imull
xchg
push
enter
lock
pop
jbe
pusha
jmp
pop
jg
mov
jge
sahf
orl
xchg
fdivrs
inc
rol
lds
jmp
jmp
xchg
add
and
imul
iret
ret
aas
sbb
outsb
sbb
out
inc
mov
dec
enter
jecxz
pop
or
mov
mov
in
mov
inc
mov
sbb
sub
or
pop
adc
mov
popf
mov
out
sbb
leavew
push
xlat
popf
scas
jae
or
es
xchg
jo
cld
stos
cmc
pushf
add
sub
xchg
lds
mov
in
test
cmp
in
jns
mov
sbb
cltd
lods
and
shlb
hlt
call
jnp
or
lret
aad
mov
xchg
pop
jb
fldenv
repz
jmp
adc
sbb
cmpsl
idivb
ds
cmp
lds
pop
neg
test
frstor
push
clc
add
push
inc
pop
xor
push
jo
popa
gs
insl
test
lret
ja
push
aas
and
and
test
dec
sub
ss
scas
adc
cli
scas
cmp
and
sbb
clc
gs
push
nop
or
xlat
data16
xchg
movsl
loope
lods
arpl
int3
mov
in
push
sub
fldl
rcll
xor
inc
es
ljmp
bound
imul
lods
inc
popf
or
xor
lret
ss
mov
dec
inc
sbb
pop
mov
xchg
push
adc
out
mov
jl
les
cmp
sbb
cmp
xchg
or
sbb
jnp
lret
insb
mov
mov
stos
jb
lret
and
repz
add
or
aad
data16
dec
dec
mov
inc
pop
jae
mov
iret
cmc
mov
push
addr16
mov
jle
enter
leave
xorl
lea
xor
and
sub
je
call
adc
inc
into
or
js
lea
ja
out
fcmovnbe
xor
jg
add
or
sbb
adc
inc
jns
fisttpl
pop
jecxz
and
mov
and
out
xchg
das
movsl
pop
fnsave
mov
ss
dec
dec
push
add
fisttpll
aam
pop
outsb
sbb
popw
sahf
adc
mov
sahf
fstp
mov
mov
mov
cld
dec
leave
and
xor
pop
push
leave
int3
mov
clc
and
std
dec
mov
std
lcall
jo
xor
or
and
ret
popa
mov
or
or
and
push
insl
testl
aad
inc
fwait
push
push
stc
and
push
and
cmp
mov
lods
jp
inc
stc
xor
xchg
mov
mov
lods
jns
repnz
sub
and
pop
cld
jnp
loope
pop
push
xchg
adc
jo
pop
les
adc
aam
jnp
enter
lods
test
cltd
mov
enter
popa
mov
inc
cwtl
cmp
xorl
out
adc
cs
scas
cmp
jp
inc
mov
ja
inc
mov
cltd
dec
ss
xchg
add
testb
ljmp
rorb
pop
cltd
jl
ficompl
stc
repz
loop
in
mov
push
pop
loopne
adc
testl
test
jp
fisubs
sbb
mov
mov
jp
add
push
or
hlt
enter
push
leave
movl
cmp
jg
push
pop
mov
iret
iret
jp
xchg
and
test
ss
rcll
stos
cmpsl
sbb
inc
sbb
in
stos
jle
sub
or
dec
test
pop
out
jno
in
xor
cmp
fwait
outsl
inc
out
xchg
jne
mov
jle,pt
mov
sbb
cmc
push
xchg
push
pop
jo
icebp
cwtl
hlt
dec
add
lret
aad
movsl
mov
or
jnp
movsb
ljmp
jo
or
std
push
mov
mov
fnstsw
or
call
push
iret
movsl
loop
outsl
mov
dec
inc
mov
pop
les
sub
fadd
loop
xchg
add
jne
repnz
mov
clc
and
insb
cmp
xchg
jge
data16
loope
mov
nop
and
aad
xor
push
sub
ret
sbb
out
add
movsl
pushf
pop
mov
sbb
jecxz
gs
jnp
cmpsb
test
adc
addr16
dec
mov
adc
je
aas
add
iret
out
mov
mov
inc
shlb
jns
lods
xor
add
icebp
lret
lods
jne
nop
add
cmp
sub
ljmp
mov
lds
stos
popa
inc
or
inc
shrl
clc
les
sub
movsl
cwtl
shll
std
mov
mov
sub
jbe
pushf
xor
push
mov
fnstsw
push
insl
sbb
mov
dec
mov
cmp
mov
addb
in
ret
push
add
test
pop
pop
dec
jp
fdivrs
int
sub
jb
inc
daa
adc
xchg
mov
daa
push
cmp
mov
ret
sub
fwait
adc
out
outsb
adc
sbb
loope
dec
jnp
jmp
pop
or
adc
mov
mov
test
imul
rcl
lahf
jae
in
sti
push
aaa
jbe,pn
fcompl
jb
cmp
and
push
lea
xor
inc
inc
js
sbb
cmp
cmp
jmp
into
sbbb
fisttpl
repnz
aam
in
ja
mov
out
dec
mov
or
xchg
pop
dec
pop
rep
loop
pop
test
inc
test
test
mov
add
ljmp
mov
pop
movsb
sub
xchg
jg
mov
jecxz
inc
outsl
test
daa
pop
lock
dec
lods
je
cmp
lret
xchg
mov
and
and
mov
add
fsubs
pop
or
arpl
enter
ljmp
inc
jae
cs
dec
imul
aas
iret
cmpsl
aaa
imul
push
es
inc
outsl
aam
jmp
dec
inc
cmp
and
and
shlb
lods
inc
sub
push
mov
xor
and
repz
or
jl
cwtl
arpl
or
scas
pop
jns
aas
mov
add
movsl
pop
pop
adc
xchg
cltd
fcmovu
dec
mov
push
add
cmpsl
sub
or
mov
push
adc
popa
add
xchg
incl
fidivrl
mov
mov
jns
shl
and
xor
adc
jb
incb
xor
lods
aam
ret
cmp
sub
sbb
xchg
push
ss
sub
jnp
lcall
xchg
testb
dec
push
cmp
adc
fcmovbe
adc
jne
lahf
dec
sbb
pop
sub
fdivs
loop
hlt
es
nop
movsb
fsubp
icebp
pusha
inc
mov
aad
sub
int
jnp
cli
mov
mov
mov
data16
mov
popf
and
movsl
fidivrs
pop
fwait
pusha
insb
into
testb
cmp
or
gs
jl
push
lcall
adc
gs
into
push
sbb
push
mov
imul
pushf
jmp
scas
lock
push
sbb
dec
leave
std
adc
cltd
std
xchg
out
pop
jle
fisttpll
cmp
or
in
loop
sub
add
dec
jg
je
sbb
jmp
js
push
stc
into
adc
enter
adc
add
fs
push
int3
jno
pop
repz
add
or
and
mov
sbb
pop
jp
iret
mov
cltd
pusha
mov
sub
inc
jno
scas
into
pop
or
cmovp
pop
das
dec
dec
mov
mov
test
dec
clc
jg
jge
cli
pusha
cmpsl
in
adc
xor
sub
xchg
dec
lock
out
pop
cmc
adc
fldl
jbe
mov
xor
inc
add
adc
and
int3
push
add
movsl
sbb
xchg
cmpsl
clc
lods
jecxz
loopne
scas
push
callw
xor
push
sbb
inc
mov
imul
out
mov
shrl
ret
jnp
cmp
jae
movsb
loop
xchg
jns
sub
or
mov
mul
ljmp
mov
xor
jle
std
outsl
xor
sub
hlt
int
stos
xlat
pop
andl
in
and
xchg
cltd
mov
fiadds
dec
jp
adc
test
mov
inc
add
test
push
sub
sbb
xor
outsb
insl
enter
ds
dec
mov
aaa
xchg
adc
jbe
mov
adc
in
jmp
cmp
mov
aad
scas
push
loope
movb
sbb
inc
and
inc
inc
jg
cmp
xchg
aaa
stc
mov
in
outsb
imul
decb
sti
arpl
stc
xchg
rcrl
out
popf
or
mov
pop
inc
pop
fisttpl
pop
cli
mov
mov
dec
jb
insb
xchg
jl
or
test
fwait
push
lahf
test
test
xchg
jecxz
lret
outsb
inc
mov
and
sti
add
jae
push
mov
loope
adc
jo
iret
cs
sbb
or
stos
fists
das
mov
fnsave
sarb
int3
xlat
sar
or
xchg
dec
shlb
sub
int
push
dec
les
push
pop
and
jp
decl
xor
pop
dec
lahf
outsb
int3
sub
lds
pop
icebp
pop
jno
in
and
popa
pop
hlt
mov
cmp
sbb
xorl
cli
dec
lahf
popf
lcall
insl
cwtl
cmp
stc
jae
jbe
add
fdiv
int
mov
jbe
sub
jno
sbb
push
iret
push
adc
and
testl
int
push
loop
icebp
or
pop
pop
fdiv
call
out
fiaddl
imul
cltd
fucompp
ds
in
into
lods
adc
rcr
test
lock
mov
adcb
fcompl
cmp
sbb
ljmp
add
imul
and
andb
or
dec
push
mov
jae
fcoms
dec
sub
push
xchg
cmpsb
pop
cmpsb
divb
cs
and
mov
sahf
mov
jmp
test
mov
jnp
std
repnz
sub
insl
mov
aas
inc
ss
pop
addb
pushf
sbb
sbb
jmp
orb
add
std
lahf
adcl
orl
jbe
cmp
cmp
and
add
rcrl
andl
cmp
dec
and
mov
hlt
bound
jb
adc
and
insl
xchg
mov
sar
insb
scas
jl
add
sub
sub
stos
jo
mov
mov
push
outsb
popf
xor
inc
xor
xor
mov
out
loop
and
sub
ljmp
jl
lahf
daa
test
inc
test
mov
dec
flds
jae
out
fidivrs
pop
xchg
ret
lods
int3
adc
add
or
int3
cmp
adc
lea
out
cmc
cwtl
js
in
pop
cltd
pop
aas
adcb
mov
adc
repnz
ret
outsb
mov
jp
jl
xchg
jbe
add
out
xor
aas
or
stos
mov
add
cltd
loopne
push
inc
mov
xchg
adc
lahf
dec
inc
movsb
and
test
addr16
aaa
enter
ret
es
out
mov
sub
aad
push
adc
lret
movsl
adc
test
add
pop
mulb
lds
enter
inc
test
nop
lods
fstpl
jno
stos
push
mov
jp
pop
lock
in
cltd
dec
cmp
in
ret
cmpl
out
mov
jecxz
cmp
fnstenv
cmp
shlb
test
call
loope
add
repz
leave
pop
imul
dec
xorb
sahf
nop
lock
xor
cmc
lea
mov
xchg
sub
xor
jne
pop
push
sbb
sub
popf
xchg
jg
insl
nop
ret
out
add
push
idivb
xlat
lea
cli
inc
icebp
cmpsb
dec
mov
lock
bound
hlt
fbstp
movsb
inc
ret
or
outsb
jb
cmp
xor
scas
jecxz
fisttpll
movsl
cmpsb
mov
ja
scas
jp
sub
sbb
jge
jp
and
mov
jbe
lcall
jno
mov
stos
int3
lods
shl
inc
mov
cwtl
sarl
rcl
subb
adc
bound
loope
cmpsl
xchg
push
mov
arpl
or
sbb
add
cwtl
fdivrl
push
push
xchg
gs
test
pusha
sub
sub
mov
jl
pushf
xor
out
cpuid
jne
mov
lahf
jmp
int
insl
pop
xchg
inc
imull
pop
or
adc
pop
dec
xchg
and
das
aas
ja
sub
jns
in
aaa
cli
adc
adc
and
xchg
out
sub
movsl
cwtl
bound
loope
mov
popa
shrl
cwtl
mov
filds
fimull
imul
loope
movsb
orl
mov
mov
add
mov
cwtl
inc
clc
xchg
push
push
rorb
cmp
mov
ficoms
cld
std
mov
jg
xlat
rcrb
dec
push
rcll
pop
sbbb
movsl
mov
ja
dec
imul
jmp
push
enter
into
sti
mov
xchg
insb
xorb
lret
sbb
mov
mov
fwait
or
jge
add
call
adc
lahf
sbb
decl
pop
ret
mov
xor
and
xor
cld
push
jnp
mov
out
push
push
pusha
iret
test
push
mov
subb
mov
adcl
shl
cmc
scas
add
mov
and
mov
in
inc
mov
and
jle
push
popa
adc
mov
stos
dec
ret
or
sub
xchg
loopne
sub
je
in
nop
jl
clc
cmpsl
or
cmp
subl
push
lods
mov
fld
ja
ret
mov
dec
bound
fsubrs
and
out
or
pop
sti
and
pop
mov
mov
xlat
dec
pop
add
adc
imul
sbb
pop
ss
in
mov
pop
int
jle
popf
dec
or
mov
or
adc
lds
mov
cmp
adc
jae
cmc
cltd
mov
subb
dec
ja
cmpl
das
lret
clc
cmpl
sbb
imul
ljmp
cmp
hlt
cmpsl
int
cmp
mov
push
adc
or
fdivs
jp
aam
jmp
adc
and
movsb
movsl
ret
xchg
fnstcw
leave
push
dec
pop
xchg
ja
mov
stos
xlat
je
push
or
test
sub
inc
std
push
mov
and
xorb
lret
jns
cmp
scas
sbb
mov
ret
xchg
mov
outsb
sbb
outsl
or
mov
orb
inc
gs
pushf
out
lea
lock
mov
adc
push
xchg
mov
pop
and
xchg
andb
test
test
aaa
js
fldenv
cwtl
jae
add
mov
add
add
sbb
addb
lods
dec
dec
es
fsubr
js
xor
fsts
pop
fld
lods
imul
dec
mov
mov
sub
cmpl
inc
push
mov
add
push
xchg
and
mov
add
push
push
jb
test
leave
xor
cmp
xchg
sbbb
cmp
pop
mov
insb
sub
cmp
adc
pop
pop
pop
mov
push
or
jg
and
pop
xchg
xor
inc
daa
aas
fistl
sub
loop
shll
ds
rcrl
fnstenv
and
jb
jle
push
mov
dec
mov
test
jnp
push
mov
fistpll
out
cmc
jbe
lret
xchg
push
inc
out
jp
imul
pop
xchg
and
repnz
ljmp
gs
xor
cmpsb
jmp
or
stos
bound
jge
iret
mov
decb
jmp
std
lret
or
push
push
sbb
shll
mov
popf
inc
and
aam
xchg
push
mov
test
push
dec
sbbl
xchg
mov
jecxz
shr
jnp
adc
mov
arpl
add
out
mov
xchg
pop
mov
pop
lods
cmc
xor
cs
lods
sbb
dec
push
xor
inc
into
lcall
push
or
clc
flds
xor
dec
test
sub
scas
adc
or
or
jno
dec
mov
je
in
or
jle
push
scas
mov
xor
fnstcw
ror
cltd
dec
dec
test
mov
lret
movsb
adc
sahf
mov
ret
fsubs
lcall
and
jae
and
add
movsl
mov
inc
in
cmp
arpl
into
inc
fcomps
cmc
cmp
jg
cmp
sub
out
ficompl
add
insb
pop
jecxz
xorb
xchg
push
sbb
out
fstpt
sti
out
xchg
mov
mov
inc
dec
push
cwtl
mov
add
and
ud0
rcl
jo
aas
lds
cmpsb
mov
dec
pop
adc
adc
subps
push
in
inc
imul
push
inc
lahf
jno
xor
popf
cmp
pop
mov
lret
inc
mov
adc
sub
cmpsl
mov
dec
and
pop
adc
test
sub
daa
dec
xchg
xor
notl
test
dec
and
xor
outsb
adc
fs
ja
jbe
mov
xor
sub
cmp
adc
pop
pop
mov
shlb
stos
or
pop
cmpsb
cmp
loopne,pt
mov
push
aas
out
sub
cwtl
add
enter
adc
or
mov
in
dec
sbb
adc
lods
pop
or
popf
xor
sub
adc
push
ljmp
push
outsl
lret
pop
testl
sbb
xchg
bound
clc
imul
pop
add
mov
fldl
addl
pop
xor
sbb
pusha
and
popa
std
lds
lahf
sahf
mov
cli
out
push
push
ficompl
mov
mov
xchg
lcall
cmc
pushf
in
aad
dec
pop
jecxz
cli
mov
fnstcw
inc
lea
pop
ss
or
adc
fisubl
push
mov
aam
jne
enter
inc
xlat
pop
jecxz
jge
into
and
pop
jae
lret
leave
arpl
sbb
scas
fmull
cli
fwait
add
les
pusha
pop
popa
jb
or
dec
rolb
lcall
mov
adc
lahf
jno
mov
jecxz
sbb
sub
out
insb
sub
imul
add
clc
sbb
adcl
push
gs
or
stos
sub
jmp
ja
inc
jno
add
insb
push
call
dec
add
fdivs
pop
push
and
push
int
push
test
pop
mov
add
mov
mov
mov
xlat
mov
iret
cmp
aas
mov
mov
lret
or
popa
pop
sarb
and
call
inc
mov
inc
xchg
xor
sub
mov
pop
xchg
mov
adc
imul
add
aad
cmp
jns
stc
aam
xor
clc
push
sbb
and
jle
imul
mov
gs
ret
aad
stos
xor
fwait
inc
mov
pop
data16
cwtl
sbb
or
roll
push
sahf
pushf
or
mov
sbb
bound
jbe
cli
divb
mov
mov
jno
lods
imul
dec
jle
orb
pop
lcall
cmp
pop
push
cmp
andl
pop
call
sarl
add
push
ds
imul
sub
or
inc
ds
shll
mov
std
cmp
sub
fwait
ret
pop
jne
pop
daa
sahf
js
test
sub
cld
lret
hlt
jae
pop
inc
pop
cmpb
ret
push
fs
pop
es
out
xchg
iret
bndstx
pop
xor
dec
inc
rcrl
call
and
rcrl
jb
xchg
jmp
adc
nop
add
xor
inc
adc
je
jns
adc
dec
push
dec
ds
sub
rorl
and
mov
inc
inc
out
or
jmp
lcall
or
mov
es
add
loop
rol
aam
pop
inc
stos
ret
pop
mov
pop
scas
stos
adc
adc
addr16
leave
imul
fcomps
sub
addb
sub
cmpsb
add
std
aam
fcmovnu
push
int
add
enter
ret
and
aaa
cmpsl
sbb
test
adc
rcrl
loopne
jae
mov
or
inc
mov
ja
xor
pop
out
jno
ljmp
pop
or
out
mov
hlt
pop
cmp
mov
adc
lods
insb
repnz
test
push
and
and
js
adc
insb
mov
mov
orl
jae
pop
or
adc
in
popf
ret
mov
fnstsw
push
xchg
jne
test
scas
inc
push
or
loop
imul
fcmovnb
dec
mov
xor
sub
pandn
stc
repnz
or
pop
add
pop
lcall
cmpsb
pop
xorl
dec
dec
les
pop
cmpsb
negl
ret
test
out
aaa
jge
adc
adc
sub
add
and
sbb
shlb
mov
xsha1
cmpsb
dec
popf
push
mov
sub
subl
jns
aaa
mov
push
enter
mov
inc
out
inc
add
in
dec
xor
sahf
dec
fstl
aad
pop
mov
pusha
nop
push
jnp
sbb
mov
in
push
stc
aam
fstp
jp
cmpsl
js
cmp
out
inc
sub
add
push
popf
mov
fs
cli
mov
test
jmp
xor
xor
and
in
andb
gs
adc
cld
adc
in
inc
shr
cld
les
add
call
dec
enter
jb
enter
add
pop
repnz
movsl
or
jb
xor
mov
lods
cltd
adc
outsb
sub
outsb
mov
out
mov
jp
push
mov
mov
cmp
loope
stos
imul
mov
int3
jno
jge
gs
repz
mov
jecxz
jne
out
ss
push
std
ficompl
faddp
inc
sbb
or
sub
outsl
jecxz
lea
adc
or
setb
xor
mov
pop
cmpsl
adc
les
push
xor
mov
add
rolb
iret
arpl
ljmp
lds
je
xorb
jmp
aad
insl
ja
frstor
sub
fdiv
adc
add
mov
fisubs
mov
sbb
es
sbb
lds
pop
gs
lret
jge
jno
adc
push
ret
or
sbb
dec
sbb
int
stc
adc
inc
xor
bound
add
cmp
cmp
mov
call
aam
push
fstl
dec
push
xor
aam
mov
mull
jns
and
mov
push
or
nop
insb
mov
xor
mov
xchg
adc
pop
sarl
cmp
dec
xor
inc
dec
jb
mov
and
or
jne
xchg
adc
pop
mov
sub
addl
add
mov
and
adc
testb
clc
mov
fadds
lret
inc
cmp
xor
cli
and
out
mov
loopne
push
addr16
sub
jae
lods
xchg
out
call
inc
push
inc
xchg
cmp
xor
stos
push
jns
decb
aas
and
add
and
ret
jg
adc
out
xor
push
mov
pop
pop
es
bound
fistpll
push
insl
std
jne
xchg
js
fcompl
sub
sbb
xchg
addr16
mov
adc
popa
daa
dec
stos
mov
ficomps
rcrl
mov
mov
inc
lahf
icebp
inc
cmp
cmp
and
test
lea
insb
push
jb
ret
mov
cltd
out
and
cmp
out
dec
bound
pop
rolb
push
mov
push
ljmp
loop
push
dec
mov
sub
inc
mov
xchg
rcrl
add
adcb
dec
into
flds
xlat
mov
adc
in
cmpsl
jnp
orl
mov
jl
jo
in
pop
or
sahf
add
aam
jg
shl
ret
rorl
pop
sbb
sbb
cmp
mov
out
loop,pt
popf
xor
imul
insb
cmp
mov
imul
ja
xor
mov
mov
fimull
int
pop
rcll
adc
outsl
and
outsl
pop
and
xchg
aad
push
sbb
jns
shrl
mov
das
es
fwait
aam
jns
mov
cld
lods
xchg
push
mov
cld
pop
int
push
mov
js
mov
jo
cmpb
loopne
mov
jl
into
stc
std
repnz
sbb
jae
outsb
addr16
pop
fists
pushf
sub
inc
out
xor
loope
jae
push
cmp
test
cli
xor
shlb
mov
insl
pop
push
ret
in
stos
or
je
not
dec
jns
es
test
pop
arpl
ret
popa
add
inc
ret
fbld
stos
xchg
xchg
test
cmp
loop
pop
push
cmp
lahf
push
pop
sub
jnp
jp
adc
jge
daa
int3
add
mov
xor
aaa
lods
roll
icebp
dec
lret
jbe
call
and
ret
pop
cmp
movsb
out
mov
aaa
into
daa
lods
cmp
loopne
mov
jo
in
sbb
dec
jnp
test
adc
push
vmovapd
xchg
testl
leave
pusha
into
pop
sahf
movsb
jp
stos
add
decl
fsubs
out
leave
sbb
divb
in
mov
push
jno
dec
sub
stos
mov
sbb
adc
push
fsub
fwait
push
out
das
push
test
xor
mov
sbbb
inc
push
les
ret
enter
out
xchg
mov
mov
outsl
arpl
cmpsl
jno
pop
test
or
sbbl
pop
shll
and
adc
mov
mov
xor
jo
or
dec
mov
cmp
aad
and
bnd
pop
aam
jmp
lds
dec
test
fdivs
jp
imul
pop
stos
ret
mov
mov
jmp
lods
test
xchg
push
pop
cmc
mov
iret
mov
movsl
jle
fdivrs
ret
mov
mov
sbb
push
les
push
and
icebp
jle
sbb
js
incl
sub
pop
jo
and
test
push
xchg
and
iret
aaa
sbb
scas
fwait
icebp
xchg
repz
pop
mov
xor
lret
mov
leave
lret
jl
loope
xchg
popf
ficomps
in
movsl
xchg
add
cli
sbbb
jp
sub
mov
push
sbb
nop
ret
bound
sbb
ljmp
jb
or
jg
mov
loop
pop
cmpsb
repz
sub
lock
movntq
jg
sahf
ds
xor
pop
imul
pusha
lea
shr
cmp
cwtl
mov
dec
push
xor
fs
arpl
pop
imul
cmpsl
popf
or
cmc
adc
jb
xor
jbe
ds
out
or
sub
push
lock
adc
mov
aas
xor
xor
lret
push
ds
cli
js
hlt
mov
xlat
pushf
icebp
dec
push
arpl
lods
mov
stos
gs
push
inc
ret
and
push
ret
push
gs
pop
mov
pop
ret
cli
aam
pop
cmc
adc
in
xor
je
enter
movsl
shr
in
adc
inc
push
cmp
in
movsl
hlt
cmp
mov
sbb
test
add
inc
dec
xchg
cli
sbb
xor
xchg
fildll
sbb
lret
inc
ds
xchg
les
dec
outsb
cmp
arpl
jecxz
jmp
sub
sbb
hlt
xchg
mov
adc
sbb
les
stc
dec
scas
test
in
xchg
mov
ret
jp
sub
adc
nop
lods
jmp
data16
sub
data16
hlt
jae
movsl
dec
pop
xlat
sub
insb
mov
lret
pop
adc
jge
push
mov
xchg
or
sbb
pop
sahf
in
bound
push
test
inc
pop
into
pop
sbb
mov
aaa
sti
mov
stos
dec
cmp
shr
mov
ds
imull
insl
sub
jns
and
pushf
and
test
mov
sub
jmp
icebp
pop
stos
bnd
xchg
adc
push
and
out
nop
xchg
pop
or
sti
in
mov
imul
xor
jbe
inc
cmp
xchg
jp
mov
std
jle
pop
sub
push
fistl
sub
mov
aaa
fimuls
incb
imul
movsb
cmpsb
push
and
sub
daa
loope
xor
sbb
fs
sub
mov
bnd
test
add
pusha
mull
in
ret
test
mov
dec
add
jnp
call
sub
imul
sahf
cmp
sub
loop
dec
cld
jmp
sub
sub
inc
int
icebp
iret
test
adc
and
xchg
imul
dec
mov
xor
adcb
stc
testb
aaa
xchg
push
out
dec
sub
inc
inc
andl
movsb
dec
xchg
dec
outsb
popa
xorb
mov
ljmp
cmp
mov
push
mov
inc
aam
imul
pop
sti
call
imul
jmp
dec
daa
test
mov
dec
cmc
xchg
rcrb
jmp
adc
mov
xchg
cmp
xchg
jg
add
xor
outsl
pop
add
sbb
jle
test
hlt
xchg
sbb
aam
mov
nop
out
loope
out
sbb
dec
mov
jle
mov
or
mov
test
ret
mov
lods
push
hlt
mov
or
jg
lods
jo
inc
adc
lea
push
or
lea
adc
mov
fcompl
sbb
and
lret
divl
pop
inc
into
nop
xchg
loop
inc
fcom
lds
add
cmp
or
mov
andb
push
addb
adc
in
movsb
push
and
fidivrs
call
push
js
mov
cmp
rcll
xchg
ss
xchg
mov
adc
push
add
int
rcrl
mov
adc
mov
in
pushf
fisttpll
loop
dec
push
lock
or
scas
sbb
mov
mov
and
pop
lds
push
jo
sti
pop
lcall
data16
jecxz
mov
and
cmc
fadd
leave
dec
inc
movsb
shl
push
in
dec
and
and
cmp
lds
arpl
xlat
dec
jl
sub
jmp
adc
fldl
push
push
js
pusha
pop
call
inc
stos
lds
sar
stos
jns
cmpsb
or
fwait
adc
sti
cli
jge
add
stos
dec
pushf
mov
xor
or
popf
pop
push
lret
in
cmpsb
jmp
shrb
inc
cs
cmpsl
sub
dec
xlat
xchg
xor
inc
in
pop
cmpsl
loop
add
testl
ja
mov
lcall
ret
sbb
adc
xchg
mov
inc
cmp
scas
shll
int3
mov
push
ljmp
repz
ljmp
sbb
in
mov
xlat
dec
dec
mov
pop
movsl
or
sub
jnp
push
dec
ljmp
pop
add
pop
ljmp
arpl
pop
and
ja
fisubs
and
mov
cmp
in
xchg
push
inc
sub
add
xor
xchg
in
add
rolb
or
popa
add
outsb
lret
rol
js
dec
cmp
sbb
fwait
cld
xchg
mov
aaa
add
sbbb
aam
rclb
sub
popf
out
cmp
popa
ss
sub
push
cmp
or
nop
stos
mov
pop
mull
test
fimuls
cmpsb
mov
rcrl
sbb
mov
mov
stos
mov
or
popa
xor
mov
push
mov
sbb
sub
mov
shlb
mov
mov
mov
mov
call
scas
addr16
movsb
rorl
das
loopne
test
cmp
in
push
popf
adc
cmpsb
dec
pop
jo
adcb
shll
test
mov
lods
fistpl
js
ja
daa
push
scas
or
popa
xorb
sti
out
pop
mov
pop
sbb
or
andb
mov
shlb
and
jl
inc
aad
mov
in
inc
inc
neg
dec
sbb
push
mov
mov
xchg
test
loope
in
out
inc
outsb
mov
cs
sarb
jg
bound
adc
scas
mov
outsl
add
fidivrs
fidivrs
adc
push
inc
pop
add
icebp
out
subl
add
in
push
addb
dec
lea
les
pop
push
lds
jmp
add
xor
popf
push
inc
mov
cmpsl
and
cmp
test
mov
shl
lcall
fildll
mov
push
subl
in
rorl
dec
sub
dec
ljmp
pop
xlat
jecxz
popl
subl
shl
sbb
xchg
mov
in
add
int
fcomip
jl
xchg
mov
fstpl
jle
test
xor
out
pop
stc
insl
cmpb
inc
add
addl
and
mull
js
push
pop
cmp
sub
test
sti
sub
out
cwtl
lods
out
stc
push
and
aaa
pop
push
dec
mov
sub
mov
fs
mov
test
and
jg
aas
mov
dec
jmp
ds
ficoms
popf
imul
mov
or
push
nop
or
dec
xchg
ljmp
loopne
fst
pop
cmp
rol
jle
push
xor
cmp
fstpt
cli
pop
filds
sti
jp
jl
iret
clc
push
push
fcomps
add
push
leave
mov
sbb
data16
lock
js
sub
sbb
jo
sbb
push
gs
pop
fstps
sub
scas
loope
lcall
lahf
cs
sub
mov
jnp
dec
add
stc
inc
data16
sbb
jmp
jns
cwtl
dec
adc
cli
mov
js
mov
xor
bound
loope
mov
sub
rorl
push
lods
pop
fcoml
ljmp
movsl
cli
sbb
fsts
aas
imul
cmp
sub
dec
jae
mov
dec
xor
lods
pop
pop
add
sub
adcb
add
jp
and
mov
xor
movsb
pop
mov
dec
test
pop
sbb
mov
int3
cltd
enter
pop
lahf
or
mov
loope
add
jmp
movsb
test
subb
push
pop
xor
imul
dec
sub
dec
jae
enter
xchg
popa
gs
jbe
leave
mov
data16
sbb
jg
mov
mov
repz
repz
jp
stc
insl
fs
sar
je
insb
mov
repnz
mov
std
loopne
add
fcmovnu
ret
ljmp
push
sbb
mov
lods
test
jecxz
jp,pn
cmp
add
mov
lahf
gs
inc
cmp
nop
sbbb
mov
lcall
mov
sub
sahf
mov
in
pusha
jecxz
mov
push
out
test
in
pop
cmc
inc
jge
cmc
mov
rorb
loope
arpl
incb
imul
jmp
mov
shlb
sbb
je
and
cwtl
push
out
fstl
loop
mov
push
or
pop
test
jge
movb
fbld
movsl
pop
inc
sti
pop
add
dec
pop
stc
add
cmp
ficompl
pusha
inc
es
and
xor
movsl
xlat
nop
call
test
mov
xor
dec
xor
and
inc
loope
add
inc
push
mov
pop
xorb
cmc
loope
dec
decl
fisubs
lret
mov
imul
fistps
push
mov
in
imul
cwtl
mov
cmc
xor
sbb
xchg
push
sub
sbb
adc
call
sub
je
lea
popf
fwait
mov
bound
outsl
xchg
inc
xor
xor
mov
sbb
in
ds
repnz
mov
jmp
or
rcll
add
add
cld
je
pop
xor
fld
add
xor
mov
fptan
fmull
incl
dec
xchg
lds
or
pop
lret
mov
and
out
aaa
call
sub
mov
cmp
repnz
jnp
nop
das
stc
cmpsl
cmpb
movsb
sti
xchg
incb
int3
inc
pop
cmpsb
mov
movsb
sbb
insl
rep
out
inc
and
sbb
jnp
mov
out
push
mov
pop
imul
rcll
addr16
stc
popf
pop
stos
fnstenv
or
sbb
cmp
lock
stos
mov
xor
iret
adc
jmp
test
test
push
jmp
leave
mov
es
icebp
jg
add
mov
xorl
fs
shrl
out
not
or
xchg
adc
push
mov
movsb
cmc
popa
lods
jmp
mov
test
sbb
pop
pop
dec
pop
xchg
mov
sbb
adc
repnz
out
leave
mov
adc
jns
add
pop
sarl
cwtl
push
or
pop
out
pusha
lods
dec
push
pop
mov
mov
or
mov
and
adc
cld
andb
fmuls
inc
jo
sbb
and
mov
mov
push
in
push
inc
movsb
or
sub
jmp
cwtl
push
icebp
xor
or
sbb
std
pop
adc
push
lcall
test
icebp
icebp
out
xlat
or
sub
cmp
mov
xchg
mov
and
mov
pop
fmuls
jl
lret
xor
fistps
lods
xor
cmc
jno
adc
test
movsb
pushf
lock
iret
xchg
adc
test
pushl
fldt
mov
test
test
mov
iret
stos
lods
mov
iret
cwtl
dec
leave
xchg
test
dec
out
mov
xor
sti
loope
push
arpl
dec
ja
outsb
sub
nop
adc
sti
xchg
push
outsb
push
sahf
lahf
pop
cmc
pop
loopw
jno
mov
movl
mov
in
push
test
popf
movsb
gs
cmp
aam
int
je
xorb
out
mov
fwait
add
test
int
sub
decb
inc
aam
push
stc
jecxz
sbb
mov
out
and
sarl
nop
jmp
and
test
xor
push
mov
jbe
jecxz
loopne
push
mov
into
and
pop
pusha
push
xor
and
fistps
lahf
or
and
push
push
sbb
sbb
and
mov
cld
mov
xor
cltd
add
repz
xorl
mov
adcl
push
adc
loop
jno
mov
data16
popa
fimull
add
push
lea
subb
stos
fdiv
add
jp
mov
inc
xchg
insl
xor
pop
pop
jae
inc
or
xor
xor
dec
pop
push
mov
add
outsb
lods
xchg
out
xchg
cmp
mov
cli
data16
sti
and
out
jle
stos
dec
jno
shr
xchg
lea
sub
cmpsl
xchg
stos
xor
mov
mov
push
jno
jns
push
pop
adcl
jo
jb
mov
mov
movb
xchg
addr16
pop
mov
movsb
or
lea
xchg
mov
cld
add
lds
sub
aad
cwtl
fbstp
add
into
xor
cmpsb
test
mov
ss
cmp
lods
in
lcall
movsl
sbb
std
aad
jmp
scas
pop
adc
les
mov
test
pop
pop
lret
mov
out
lock
ja
mov
mov
shlb
xchg
add
test
push
or
add
fwait
cs
mov
mov
pusha
mov
loopne
bound
jmp
jb
push
jnp
test
mov
push
out
pushf
les
pusha
iret
les
test
xlat
filds
out
add
push
mov
stos
cli
sbb
setbe
lahf
inc
xor
inc
adc
lods
inc
mov
xor
and
stc
jb
mov
mov
mov
cmc
xlat
test
or
ja
es
insl
hlt
mov
inc
sub
ja
test
dec
clc
or
cmpl
push
inc
clc
lahf
aaa
mov
mov
mov
repnz
inc
sub
xchg
rcrl
icebp
push
sub
sbb
rcl
push
je
lahf
int3
cmp
jge
cltd
fisttps
sbbl
adc
push
pop
xchg
out
out
adc
cmp
mov
jae
mov
jp
cli
lea
jmp
push
jae
adc
lret
dec
mov
sbb
enter
sti
iret
mov
lcall
and
dec
std
scas
inc
xchg
adc
gs
ss
or
fnstcw
add
mov
pop
enter
subl
push
div
je
push
movsb
and
outsl
sahf
push
cmc
pop
ds
mov
call
ror
ja
sbb
mov
aaa
fucomi
inc
jo
dec
add
jo
push
ljmp
cs
jae,pt
leave
xchg
push
pop
lock
imul
cmpsl
sub
add
xchg
push
cltd
repnz
sub
fidivrl
testb
gs
pop
in
dec
in
jecxz
insl
imul
dec
mov
lcall
repnz
nop
hlt
clc
jp
jnp
or
pop
dec
xor
add
aas
sub
test
pop
pop
rcrl
insl
cs
cmp
push
jge
aaa
dec
cmpsl
cmp
stos
xchg
adc
outsb
aas
jno
xor
and
rclb
push
xchg
test
sub
add
mov
xor
xchg
inc
je
aaa
xchg
jbe
out
rorb
daa
lret
jmp
mov
add
jno
stos
push
jecxz
jns
inc
push
movsl
jl
jg
outsb
xor
mov
enter
mov
and
or
push
add
sarb
add
cmpsl
inc
add
or
ss
mov
call
xor
mov
testl
pop
mov
push
aad
daa
in
jmp
scas
call
dec
out
sub
and
js
adc
jae
scas
sub
pop
stc
xchg
or
mul
cld
js
test
or
xchg
jle
xor
xor
mov
mov
push
pop
scas
iret
adc
fwait
ret
cmp
mov
xchg
fidivs
jne
cmc
mov
outsl
push
push
push
pusha
jb
mov
lea
repz
js
lods
incb
xor
adc
lds
mov
cmp
mov
ret
hlt
sbb
mov
enter
decl
imul
stos
jp
repnz
fists
push
lock
js
insb
rcrb
and
pop
xchg
mov
mov
and
nop
pushf
xchg
sub
mov
stos
in
in
mov
mov
and
push
adc
xchg
cli
pop
jns
xlat
lds
jae
scas
cld
mov
xchg
cmp
push
push
and
xor
scas
sbb
int3
movsl
mov
push
dec
cmp
gs
pop
ret
movsb
out
mov
jne
stos
bound
popf
rcll
sahf
jo
aam
dec
out
cmpl
cmpsb
pop
mov
xchg
xchg
pop
lds
sub
adc
jns
push
jnp
mov
out
loop
mov
sub
insl
pop
push
jecxz
fidivrs
hlt
ja
leave
mov
dec
xchg
sub
add
sub
xchg
xchg
ljmp
jl
lret
inc
in
es
jns
ss
roll
mov
and
mov
in
out
mov
mull
js
xchg
xor
jp
out
sahf
jae
dec
pop
mov
stos
dec
push
idiv
mov
movsl
test
outsl
jmp
cmovg
sub
or
dec
ret
xchg
mul
adc
pop
imul
xor
jl
add
loop
bound
mov
sahf
pop
dec
imul
outsl
push
mov
sbb
outsl
into
sub
movsb
jl
hlt
pop
lds
rorb
repz
daa
push
mov
pop
repz
leave
jne
mov
xchg
cmpl
aad
dec
aam
push
scas
mov
xchg
addb
mov
push
mov
int
lods
adc
push
ret
rorl
dec
mov
inc
in
in
addr16
mov
fstl
add
test
mov
test
je
mov
mov
lods
iret
negl
add
repnz
inc
inc
sti
xchg
rcll
inc
ficomps
push
or
lret
mov
push
in
and
pop
lock
gs
pop
xchg
dec
js
imul
popa
cltd
shlb
imul
push
xor
adc
mov
push
repz
push
bound
sti
jecxz
adc
shrl
add
scas
dec
sbb
push
sub
mov
mov
pop
sbbb
mov
les
cli
int
sbb
push
mov
aam
or
out
out
mov
aas
add
ret
xor
cmc
inc
dec
repnz
jecxz
scas
int3
add
pop
lret
aam
cli
mov
insb
insb
xlat
or
pop
inc
test
sahf
aas
pushf
xor
sbb
sbbl
fwait
ds
ret
xchg
iret
call
or
rorl
addr16
pop
sbb
repz
insb
mov
insl
sbb
stos
loope
popa
call
lds
pushf
cwtl
int
ret
mov
ljmp
xor
adc
sbbl
repnz
std
or
jp
neg
out
mov
pop
mov
xchg
daa
sbb
cmp
popa
cmc
cltd
movsl
inc
stc
mov
out
shrl
arpl
inc
aam
test
testl
cmp
es
dec
les
or
inc
pop
jecxz
xchg
mov
sub
jge
shll
iret
push
in
cli
addl
test
adc
push
adc
lahf
ret
sbb
mov
aad
pop
push
fsubrs
adc
jno
js
aas
xchg
ret
sub
test
clc
call
adc
je
mov
ss
test
pop
out
sahf
adc
or
daa
divb
rcrl
inc
lret
xchg
xchg
ret
mov
jg
test
adcb
cli
mov
call
pushf
dec
popf
cmp
xchg
sbb
jo
out
or
shrb
dec
daa
loope
jno
fmull
jbe
insl
mov
pop
dec
in
cmp
andb
xorl
inc
dec
pop
scas
repz
pushf
out
jmp
pop
movsl
add
scas
mov
add
inc
pop
sarl
psubusb
cmp
pop
cltd
xor
mov
mov
nop
je
ret
test
outsb
ret
mov
add
aam
je
sub
mov
push
dec
dec
mov
leave
mov
xor
mov
dec
aas
or
ret
xchg
insb
out
xchg
pop
mov
sbb
sub
movsb
rcr
xor
daa
das
adc
push
pushf
mov
xorl
push
and
aam
pop
mov
add
jae
xor
ja
mov
pop
push
imul
lret
pop
sti
inc
jecxz
pop
es
or
fs
test
fildl
ror
xchg
mov
xchg
inc
lods
push
cli
mov
adc
imul
xlat
bound
cmp
mov
xchg
push
test
int
cmpsl
sub
scas
out
cmpb
jp
pop
pop
jo
push
pop
loope
pop
mov
nop
ljmp
sub
loopne
pop
loopne
in
and
cmp
add
or
add
and
loopne
push
lods
int3
push
sbb
imul
shl
cmpsl
jg
push
cmp
xor
out
and
mov
lcall
ret
lahf
fsts
cmpsb
jns
mov
ret
push
xchg
shlb
sub
jbe
pop
pop
nopl
jecxz
jno
ret
mov
pop
stc
and
cmp
lcall
dec
jae
loope
vhsubps
mov
inc
scas
in
and
mov
or
or
inc
jno
push
in
add
or
test
insl
inc
jmp
repnz
dec
add
push
cmp
xchg
jbe
cmp
sbb
fisubl
cld
inc
xor
add
add
and
test
jno
loop
pusha
pop
inc
rorb
add
jmp
cmp
fidivrl
push
test
push
cwtl
cltd
dec
jno
leave
dec
outsb
pushf
addr16
add
stc
inc
fdivr
xlat
jne
ds
out
dec
mov
fsubrl
loopne
imul
test
imul
rcrb
cmp
call
push
or
negb
sbb
push
xchg
adc
mov
push
insb
jl
arpl
insl
inc
pop
out
cmpsb
push
pop
daa
push
xchg
pop
dec
insb
xchg
outsb
das
sub
xlat
mov
dec
adc
or
sti
sbb
insb
into
enter
sub
push
adc
mov
inc
scas
sub
mov
movsb
stc
hlt
mov
sbb
cmc
jl
mov
push
ret
mov
ret
in
bound
icebp
pop
iret
lahf
out
out
sub
dec
cmp
inc
cmp
loopne
enter
inc
sub
cwtl
rorl
loope
outsl
fcoms
in
icebp
into
mov
xor
enter
adcb
mov
out
lcall
mov
jge
movsl
mov
mov
bound
sbb
adc
dec
movl
cld
cld
mov
js
adc
adc
lret
xor
xchg
fwait
mov
in
sub
fs
sub
ljmp
xchg
add
ja
or
cwtl
jg
enter
out
in
scas
xchg
stc
repnz
ss
stc
cmp
jb
jp
into
or
adc
mov
popf
add
scas
cmpsl
fwait
aaa
cmp
lahf
es
das
mov
inc
add
jg
mov
jge
mov
mov
cmp
jmp
inc
in
ljmp
mov
jne
lret
cld
push
ret
js
fadds
and
pushf
xchg
and
cli
aas
push
dec
push
mov
push
dec
cmp
mov
hlt
je
loopne
adc
adc
inc
or
push
pop
loopne
pop
sbb
xchg
call
sbb
testl
es
mov
cld
jae
or
add
repnz
mov
sub
push
fs
sub
or
lret
push
or
xchg
pop
lods
aas
in
inc
insl
pop
lret
xchg
in
push
cltd
inc
jge
in
jg
fstl
mov
notb
add
pop
add
or
mov
cld
cld
push
into
push
rolb
popf
inc
inc
sub
dec
inc
int3
or
cs
cmp
leave
dec
xor
dec
inc
lods
cmpl
sarb
cmp
pop
inc
fdivrl
ja
mov
in
int
lret
mov
sbb
lahf
test
sti
cli
pop
inc
or
xchg
imul
fprem
mov
icebp
add
hlt
adcl
out
cmp
push
inc
insb
or
fistpll
jo
sub
sub
ds
fdivs
cltd
lods
jb
sub
and
rorb
in
fsubl
into
pop
scas
mov
mov
or
jecxz
ja
and
pop
cmp
xor
in
mov
int3
mov
push
mov
in
dec
jne
pop
xlat
xchg
icebp
ret
xor
mov
adc
data16
fwait
sbb
xlat
incb
and
std
movsb
js
test
cwtl
pop
add
or
adc
or
cmp
sub
jmp
xchg
dec
xchg
stc
stos
leave
jne
sub
nop
or
jne
mov
adc
daa
cmpsl
add
fdivrs
fistpll
inc
mov
rcrl
outsl
ja
push
fwait
mov
xchg
out
sub
aam
cmc
push
jecxz
xor
sbb
aaa
cmp
mov
subl
in
mov
pop
xchg
hlt
xor
popa
lahf
xchg
mov
inc
lret
int3
test
or
pop
push
fnstsw
xor
dec
cltd
mull
and
dec
add
adc
xchg
imul
in
imul
mov
faddl
hlt
in
lret
sbb
leave
in
test
test
inc
push
cmp
mov
stc
inc
stos
lcall
mov
cmp
leave
sbb
push
hlt
pusha
dec
scas
ss
pop
es
insb
jge
mulb
aas
sbb
fists
pop
fnstcw
popf
sub
shll
xchg
sbb
scas
jae
ss
outsl
gs
lock
mov
xor
je
mov
dec
mov
xchg
sbbb
jp
out
mov
inc
dec
adc
and
ret
add
ja
xchg
stos
jnp
push
adc
ljmp
cmpsl
mov
iret
fsubs
adc
mov
addb
or
mov
xlat
imul
cmp
imul
filds
xor
rcl
nop
xchg
xchg
xor
ds
mov
and
mov
inc
pushf
mov
test
or
push
lcall
in
or
das
mov
mov
bound
dec
xchg
sti
int
dec
fimull
dec
cmc
cmp
int3
outsb
adc
xchg
inc
push
test
bound
fisubrl
fs
push
sub
int3
js
lods
sti
mov
das
loop
add
iret
add
xchg
and
data16
and
sbb
mov
mov
arpl
dec
jns
cltd
addr16
xchg
stos
inc
mov
cmp
adc
out
aas
scas
xchg
push
push
int3
scas
shr
push
push
jo
ljmp
arpl
mov
into
repnz
dec
in
shr
or
mov
clc
jl
cwtl
ja,pn
xchg
out
inc
pop
jns
dec
cmc
mov
inc
les
cli
aad
lea
mov
movb
xor
add
and
or
jmp
xchg
in
arpl
fs
dec
dec
xchg
xchg
dec
pop
inc
aas
inc
mulb
ljmp
mov
inc
mov
or
inc
ficoml
insl
cmc
test
cmp
movsl
fsubrl
inc
push
and
ficoml
mull
jl
ret
mov
lea
dec
xlat
lea
and
or
cwtl
push
or
in
add
fistpl
in
mov
ret
sbbl
jae
fiadds
xor
inc
mov
aad
lods
push
fcoml
stc
sbb
test
jns
mov
mov
rol
cmpsl
fisubs
int
pop
daa
lods
cltd
mov
cli
sahf
out
jae
imul
rclb
sbb
dec
add
lea
popf
xlat
xor
adc
call
xlat
mov
mov
sbbb
mov
js
pop
xor
sub
pop
call
es
or
lods
mov
push
mov
gs
insb
loop
add
xchg
loope
leave
cld
dec
lea
popf
push
nop
jl
inc
push
fmuls
cltd
ljmp
in
mov
ds
add
mov
jl
jbe
add
jg
xchg
xchg
out
sahf
cmp
fs
mov
or
fisttpl
test
insl
push
aaa
sub
fmul
mov
xor
xchg
in
add
ja
pop
xchg
mov
scas
fs
pop
or
adc
adc
push
movsl
aam
and
add
pop
icebp
cmpl
ljmp
outsl
adc
cmp
fstps
cltd
repnz
call
das
jae
mov
or
and
mov
push
mov
inc
loope
inc
leave
sub
sub
cmp
xchg
outsb
mov
dec
sbb
sbb
popa
int3
jge
ljmp
xchg
es
rcr
js
cmc
inc
cmc
push
pop
outsb
je
leave
dec
das
iret
int
out
lods
cmp
inc
xlat
ret
pop
pop
mov
popf
out
inc
out
jp
inc
mov
jle
jecxz
mov
movsb
cmp
lds
mov
mov
enter
inc
ss
fstl
shrl
ret
into
xchg
and
stos
jmp
bound
int
inc
lds
mov
rcrb
add
cmp
mov
or
dec
sbb
xlat
imull
test
adc
into
cmpsb
xchg
push
lret
in
xor
in
loopne
dec
xchg
jnp
aas
cs
inc
fstpl
jmp
imul
xchg
mulb
daa
jns
mov
imul
and
ljmp
mov
shlb
or
mov
dec
mov
sti
cmp
clc
mov
nop
pop
lret
adc
scas
push
inc
subl
addr16
sbb
inc
cld
cmp
cmpsl
std
ja
decb
es
cmp
mov
cmpsl
out
sub
aaa
popf
mov
ds
in
mov
aaa
add
or
sbb
push
pop
or
lock
xlat
lea
ficomps
das
cs
add
mov
mov
or
in
subl
test
popf
or
and
in
add
aas
add
xor
mov
pop
sub
enter
xchg
inc
add
xor
gs
jp
fcmovnb
jecxz
addr16
mov
lock
push
mov
cs
ret
ficomps
ret
jns
stc
dec
out
cmpsb
pop
cmc
sbb
lea
lret
test
sub
lcall
mov
rorb
xor
jl
fnstenv
ja
clc
nop
or
lcall
insb
pop
lret
pop
pop
mov
xchg
lcall
loope
lret
or
ret
fistl
sbb
in
cli
pop
push
outsl
nop
cmp
jb
cmp
and
ficomps
stos
and
cmp
repnz
dec
test
in
addl
mov
pushf
or
fcom
in
stos
push
xchg
push
cltd
jg
push
clc
jns
jns
pop
xchg
sub
lds
push
jae
mov
xchg
aam
push
inc
data16
rcll
mov
cmp
jecxz
loop
add
xor
add
stos
sbb
and
xor
inc
stc
dec
pop
subb
sub
xchg
scas
jl
xor
aad
pusha
xchg
lea
test
rol
frstor
mov
inc
aas
mov
fadd
add
push
cmpsl
cwtl
std
mov
rcr
leave
cmp
inc
pushf
jae
loopne
adc
add
and
ja
adc
or
xchg
xor
cmp
shll
adc
popf
imul
clc
xchg
mov
dec
inc
ret
jge
repnz
mov
push
push
outsb
push
outsb
mov
mov
cvtps2pd
sbb
mov
mov
pushw
and
ficoml
sub
test
lret
jl
lea
fwait
daa
dec
xchg
or
lahf
jb
push
cwtl
sub
das
das
push
dec
lods
test
or
dec
cmp
in
in
arpl
fwait
push
adc
movsl
icebp
outsl
jg
ss
xor
mov
pop
aas
mov
and
adc
push
push
pop
fisubs
push
add
or
lahf
test
fsubrs
insl
mov
push
cmpxchg
cmp
std
adc
js
cld
fnstsw
or
mov
mov
inc
inc
inc
cwtl
sub
subb
add
push
in
dec
sub
cmp
dec
inc
out
xchg
dec
aas
aam
mov
and
js
icebp
xor
cmp
add
and
sbb
bound
lea
push
sub
pop
and
inc
movsb
cmpsb
pop
push
inc
xchg
sbb
gs
inc
push
shl
pop
call
fadds
scas
or
lds
cmp
xlat
in
lea
ja
add
sbbl
push
xor
pop
push
sub
enter
imul
add
fwait
mov
mov
xchg
mov
std
insb
sub
scas
and
push
repnz
or
ljmp
imul
rol
inc
pop
xlat
daa
jnp
dec
xchg
aaa
ds
sbb
insb
jae
iret
sbb
jne
popf
xchg
ds
cli
fucomp
cmp
mov
subb
xchg
rol
xor
mov
idivl
mov
inc
xchg
shl
mov
cli
mov
std
pop
sbb
jecxz
fldcw
xor
scas
stc
xchg
add
movsb
movsl
cwtl
mov
push
lods
pop
les
das
xor
mov
or
cmp
loope
cld
dec
les
ret
incb
add
sarb
cmp
nop
push
dec
ret
sub
push
mov
pop
into
dec
cmp
cmpsl
icebp
or
xchg
ret
adc
movsl
jle
nop
jg
push
push
incb
test
lock
jg
xchg
fcmovb
fmul
sub
adc
pop
push
mov
fwait
and
or
or
sbb
cmp
fnsave
stos
in
int3
bound
pop
test
aas
inc
or
adc
add
loop
repnz
pop
or
fwait
dec
mov
enter
roll
add
adc
push
pushf
xor
jmp
shlb
cmpsb
add
mov
push
sbb
aam
stos
cmpsl
sbb
adc
adc
jnp
stos
fisubs
add
ret
aad
mov
xchg
sbb
daa
and
add
lods
sub
pop
int
ret
mov
call
mov
dec
repnz
shl
insl
ret
lds
es
mov
imul
lods
pushf
popf
pop
fwait
test
xchg
push
mov
icebp
jns
popf
je
ljmp
lahf
mov
insl
xor
sti
sub
push
adc
mov
xor
jge
mov
mov
mov
push
push
xor
or
out
clc
mov
mov
inc
loope
cmc
je
test
xor
iret
add
jae
movsb
movsb
mov
jns
lods
and
sub
inc
mov
xchg
xlat
xor
lret
cmp
xor
stos
xchg
pop
lock
cmp
dec
aad
cwtl
out
push
stos
sbb
or
mov
ja
fsubl
mov
sbbb
xor
cmp
inc
loop
dec
gs
inc
pop
std
cmp
dec
cli
mov
lcall
or
mov
sbb
cmp
inc
leave
and
mov
inc
arpl
icebp
cmp
ds
push
mov
pushl
push
arpl
jbe
outsb
les
or
adc
mov
je
cmp
in
fimuls
cwtl
sti
mov
ret
inc
aad
push
ret
das
xor
les
fisubrs
or
xchg
fmull
std
test
mov
loopne
cmp
dec
stos
mov
fs
aas
stc
lods
decl
mov
shrl
mov
stos
andb
test
pop
sbb
stos
xlat
xchg
jecxz
aam
mov
xlat
js
sub
mov
xor
lcall
call
mov
mov
mov
push
cmp
lahf
mov
loope
inc
stos
pop
test
or
jbe
add
inc
jb
sbb
imul
inc
int
add
mov
cmp
xchg
lods
shl
cmp
mov
fwait
ret
mov
add
push
sub
push
adc
inc
insl
aas
lahf
inc
mov
mov
mov
cmp
ja
arpl
jg
push
or
jmp
mov
arpl
mov
add
out
jmp
add
sub
psubusw
sbbb
mov
lahf
cmp
pop
dec
pop
arpl
sbb
push
mov
sub
and
cmc
aad
adc
add
cwtl
pop
jecxz
popf
loopne
loope
xchg
loopne
cmp
insl
xchg
into
pop
pop
gs
test
adc
daa
lods
loop
repnz
addr16
sti
jge
adc
pop
stos
pop
lahf
jle
pop
scas
jnp
and
mov
mov
lds
mov
dec
adcb
mov
push
test
xchg
pusha
aam
xchg
or
and
lret
pop
mov
push
mov
loope
loop
pushf
mov
inc
pop
test
aaa
cmpsb
sub
sarl
mov
ret
xchg
lahf
notl
pop
dec
inc
sub
popa
add
leave
ds
lock
cmpsl
fildll
mov
sbb
xchg
xchg
cmp
int
fistpl
mov
cltd
hlt
sub
inc
insb
mov
movsl
movsl
push
loope
or
jge
pop
sahf
cmp
mov
stos
sub
outsb
mov
pop
lds
and
cmp
push
enter
mov
loope
fwait
jns
leave
inc
adc
pop
cmp
shll
cmp
adc
cmp
mov
les
loope
ret
je
ret
dec
outsl
test
dec
pushf
das
loope,pt
xor
lds
adc
push
inc
in
jbe
pushf
sbb
mov
dec
lods
pop
add
push
ret
ljmp
jns
lret
add
dec
shl
out
push
stos
test
jne
push
push
loop
fstl
jmp
ret
sub
mov
gs
sub
divl
fdivl
outsb
pop
dec
push
dec
jmp
push
lea
std
int3
sbb
lret
addr16
lock
shll
loopne
xchg
mov
xchg
imull
push
inc
xor
mov
mov
or
ja
adc
test
push
xlat
xor
or
pop
mov
mov
lods
mov
push
cmpb
aam
insb
pop
cli
mov
cmp
xor
ja
xchg
incl
addl
sti
inc
lods
out
jno
cmp
lods
sub
push
popa
ja
rolb
lret
xor
gs
pop
dec
movb
dec
xchg
mov
repz
push
rcll
xchg
sub
pop
inc
pop
dec
scas
sbb
gs
in
addr16
cmc
mov
cli
xchg
inc
stos
fistps
rorl
push
aas
xchg
lods
lods
aas
les
sbb
shlb
xor
xor
pop
sbb
sub
sbb
adcl
popf
roll
flds
rorl
mov
pop
mov
sbb
mov
ja
sbb
arpl
xchg
ret
add
mov
mov
lods
mov
stc
sbb
cli
aaa
add
cmp
cs
and
bound
or
pop
sahf
pop
sbb
scas
or
or
mov
adc
jb
outsb
push
jg
into
scas
add
sbb
mov
lods
cmp
jg
dec
mov
enter
shl
loope
jno
mov
icebp
xor
orb
cvttps2pi
or
add
adc
inc
scas
mov
in
inc
jp
push
sahf
jmp
adc
dec
cmp
cmpsl
sti
sbb
sbb
pusha
mov
ret
push
sti
dec
repz
mov
jle
imul
jae
cmpsb
inc
mov
rcrb
orb
xor
push
xor
sbb
pusha
add
test
stc
stos
popa
fneni(8087
inc
leave
mov
aad
cli
or
repz
inc
jecxz
pop
fcmovnbe
xor
popf
mov
lea
sub
loopne
xchg
outsl
lods
push
repnz
pushl
push
mov
mov
lahf
clc
sbbl
xchg
int
jmp
pushf
movsl
sbb
mov
mov
daa
test
mov
cmp
lahf
mov
and
lods
cltd
mov
sahf
mov
mov
or
sbb
sbb
push
ss
mov
test
cwtd
jbe
sbb
xchg
jns
mov
das
mov
or
sub
fldcw
imul
cmp
call
xor
stos
out
in
scas
sub
fcmove
das
cs
outsb
and
orb
pusha
jecxz
iret
hlt
jno
addb
jp
xchg
in
mov
jb
jb
xchg
loope
inc
pusha
jnp
out
out
cmp
roll
pop
inc
scas
adc
cmc
idivl
cmp
jnp
loopne
sbb
pushf
and
xor
sbb
mov
add
cmp
adc
mov
add
aam
rol
add
lods
xorl
cmpsl
daa
push
xlat
movsb
test
mov
ljmp
ljmp
jns
push
sbb
xchg
addb
rcr
fistpl
jb
push
add
scas
cmp
mov
cmp
or
dec
nop
and
cmp
in
movsl
pop
sbb
mov
aaa
mov
xchg
xor
add
es
jp
sub
jb
cld
mov
mov
fistl
jl
xor
rolb
mov
scas
add
push
mov
pop
aad
dec
sti
das
dec
jo
dec
lret
clc
imul
inc
orb
inc
inc
lahf
cltd
xor
sbb
repnz
popa
mov
fcompl
cmc
dec
insb
sbb
ficompl
mov
out
and
pop
xchg
dec
mov
adc
mov
inc
cmp
scas
mov
bound
sbb
mov
jo
dec
add
mov
sub
adc
pop
dec
sub
mov
sbb
ss
mov
mov
stos
daa
ljmp
mov
das
ret
out
jmp
and
es
ret
fbld
mov
mov
xlat
leave
mov
mov
xor
jns
aad
xor
jmp
sub
sti
clc
xor
pop
push
mov
cs
xchg
es
sub
orb
dec
cld
cld
mov
jnp
test
dec
fisubrl
in
cmp
and
xchg
mov
or
adc
cmpsb
xor
das
adc
dec
adc
adc
rcrb
ret
push
lea
clc
mov
or
in
cmp
push
aam
sbb
out
sub
pushf
out
movsb
xchg
inc
popf
xchg
dec
insl
clc
sbb
mov
xchg
and
stos
push
notl
shlb
outsl
rcr
sub
mov
imul
ret
adc
push
out
adc
push
in
js
into
mov
int3
fwait
ss
jmp
pop
aas
seta
cmp
and
pop
push
popf
pop
push
push
cvtps2pi
sbb
mov
out
push
pop
jns
sbb
xchg
dec
rolb
jne
ljmp
sub
cmp
iret
or
mov
rcrl
sub
adc
or
cmp
adc
dec
sbb
xor
xchg
mov
pop
cld
cmp
jns
inc
sti
jg
shlb
sahf
xchg
mov
xchg
mov
pmaxub
jns
int
stos
cld
jge
das
lods
xchg
rcr
jne
inc
pusha
xchg
pop
jno,pn
and
pop
adc
sahf
mov
lret
sbb
clc
dec
mov
sbb
or
mov
mov
mov
int
jno
push
int3
divb
lods
mov
cmp
out
cs
sbb
iret
dec
icebp
inc
push
lock
rol
pop
pusha
inc
sub
mov
dec
mov
inc
dec
push
push
shl
ss
push
cmpsb
xor
xchg
fimull
pusha
inc
mov
ss
xchg
popf
cmpsb
sbb
je
xchg
xlat
int
call
jb
mov
fsub
lahf
insl
insb
or
or
leave
jmp
add
mov
xchg
mov
int
and
ljmp
push
outsb
fstpl
cmc
xlat
icebp
push
clc
jb
push
sub
call
mov
ficoml
call
pop
push
mov
movsb
push
mov
adc
idivb
adc
jo
fimuls
fmulp
in
data16
mov
pusha
inc
jmp
cli
icebp
fwait
in
mov
jns
int
adc
mov
cld
adc
orb
pop
cmpb
cmp
into
sbb
and
sti
mov
xorl
mov
js
jmp
xchg
repz
in
adc
fidivrs
bound
or
daa
cwtl
enter
aas
mov
shlb
and
iret
push
xchg
push
push
test
sbb
iret
cltd
adc
push
scas
add
aas
adc
or
pop
int3
push
cs
xchg
sbb
add
scas
es
pop
fdiv
repnz
out
pop
movsl
popf
sbb
dec
aam
sbb
or
add
and
lds
loopne
leave
pshufw
push
lcall
dec
dec
xor
cmpl
lahf
cmp
dec
push
cli
jns
or
pushf
out
imul
mov
mov
daa
int3
addr16
inc
or
ret
push
mov
cld
ljmp
jne
repz
ss
mov
test
ljmp
imul
data16
jbe
mov
cmp
arpl
or
into
pop
pop
xor
dec
lock
push
lcall
jecxz
xchg
jle
and
and
mov
cmp
fxch
insb
mov
xchg
xchg
sub
daa
mov
xor
dec
cmp
test
adc
nop
sbb
mov
lret
jl
sub
ljmp
pop
inc
sub
fwait
lret
sbb
cmp
adc
fadds
je
ja
decb
jge
xchg
mul
imul
xchg
leave
ret
sti
push
inc
je
jnp
dec
scas
xor
es
lahf
xor
mov
jne
add
lcall
sahf
ljmp
and
test
xchg
cmovle
dec
leave
fdiv
sbb
cwtl
pop
lock
mov
dec
pop
lret
stos
xchg
stc
sahf
xlat
scas
and
addr16
mov
push
shrl
js
test
mov
aaa
cltd
ss
pop
stos
mov
push
jmp
dec
push
imul
sub
push
push
xchg
inc
xor
sbb
lcall
dec
cmp
in
xchg
jmp
push
adcb
push
rcl
jle
shll
movsb
fdivl
push
out
leave
jo
add
lea
pop
cmc
dec
adc
inc
lahf
pop
fistpl
test
push
sub
xchg
addl
in
testb
testb
add
xchg
mov
add
jmp
ficompl
cmp
push
pop
movsl
xchg
cld
popa
dec
cmp
lahf
test
lret
cmp
dec
mov
xchg
int3
sahf
aam
push
gs
jbe
test
dec
ja
sub
or
push
pop
ljmp
lcall
in
mov
cld
cmp
xor
adc
mov
xor
adc
int
sub
mov
shlb
pop
pop
adc
dec
fisubrs
insb
sub
jno
mov
popf
popw
das
ja
outsl
leave
popa
sbb
out
xor
insb
xor
fidivl
faddp
push
jns
stos
pop
and
push
js
enter
sbbb
cwtl
mov
lahf
sub
xchg
push
push
mov
stc
imul
ds
xchg
mov
ja,pn
test
sbb
lcall
out
es
insb
fwait
dec
into
pusha
inc
xchg
and
sub
or
push
dec
inc
xor
mov
jp
ljmp
test
sub
aas
mov
insb
aad
orl
rol
movsl
movsl
push
add
aas
lods
or
lahf
jo
ret
mov
jecxz
faddl
mov
aad
ror
rclb
js
xchg
je
ljmp
mov
mov
push
es
outsb
in
adc
lods
bound
xchg
scas
pop
imul
cltd
aaa
idivb
lock
adc
sub
or
jae
mov
sub
pop
add
push
add
adc
mov
add
pop
push
mov
and
xor
sbb
jl
inc
outsb
sub
mov
fdivrs
jne
adc
xchg
xor
mov
dec
sbb
or
sub
fcmove
push
lods
int3
fxch
setne
xor
mov
insb
add
add
cmc
lods
inc
pop
insl
mov
int3
loop,pt
leave
mov
sub
or
push
and
fadds
enter
mov
inc
add
add
mov
lods
insb
adc
lcall
mov
jp
cmp
jmp
xchg
sbb
movntq
out
adc
in
adcb
fcoms
divb
sbb
movsb
shrb
xchg
dec
in
dec
and
das
mov
cmp
cltd
pusha
inc
repnz
xchg
push
into
xchg
mov
xchg
stc
es
mov
movsl
xchg
cmp
out
inc
ret
cmp
lret
js
out
aam
jno
xchg
mov
mov
adcl
divl
test
xor
aam
mov
jmp
std
xor
cmpl
pop
xor
fadds
pop
jo
cli
hlt
sub
pop
imul
jmp
outsl
sbb
push
mov
mov
adc
cmpsl
mov
mov
jle
cmp
and
push
cmp
add
sar
cwtl
leave
sbb
lahf
mov
int3
adcb
or
sub
adc
aas
bound
gs
mov
call
mov
cmp
sub
sbb
adc
lea
xchg
cmp
jo
in
aad
ljmp
add
mov
pop
push
mov
push
dec
roll
and
cmp
ljmp
pop
sbb
out
hlt
fsts
shrl
pushf
nop
inc
sub
fists
in
ret
popa
mov
enter
or
jecxz
mov
test
sbb
jb
cmp
inc
movsl
push
ds
add
fistpll
pop
or
jne
negb
and
shll
push
in
js
fildll
mov
hlt
mov
ja
outsl
mov
dec
jbe
jnp,pn
lahf
sbb
cmp
sub
inc
lods
sti
daa
aad
jbe
xor
dec
adc
call
ret
int3
xchg
add
fimull
mov
mov
aad
arpl
push
lods
cmp
sub
sub
sbb
pop
add
ljmp
add
mov
xchg
aas
or
repz
inc
and
cltd
lret
aas
mov
out
call
mov
mov
sub
in
outsl
push
popa
cmp
psubb
rclb
iret
loope
mov
jo
adcb
sub
cmovl
sub
xchg
testl
and
sbb
insl
adc
jle
pusha
stos
loope
jle
mov
fs
sbb
xchg
sbb
adc
jl
pushf
dec
test
mov
xor
xchg
lods
jae
mov
inc
pop
mov
loopne
xchg
in
dec
or
cmp
sbb
jbe
out
push
sbb
dec
sahf
int3
and
lea
roll
in
sub
mov
lret
or
stos
ficoms
sti
sbbl
inc
sbb
ds
push
mov
and
sbb
scas
inc
add
mov
mov
lahf
add
or
mov
xor
in
inc
rorl
jge
inc
dec
out
xchg
lds
jns
pop
jb
dec
mov
jns
xor
push
daa
adc
es
sub
test
ljmp
xchg
inc
scas
in
mov
sbb
jnp
mov
sti
inc
xor
jb
pop
les
imul
lahf
adc
jmp
pop
call
xor
data16
mov
or
jmp
push
mov
movsl
mov
adc
sbb
and
fsts
cmp
bound
xchg
daa
sbb
inc
adc
jecxz
adc
inc
xchg
cmp
xchg
test
mov
mov
cmp
cmpl
out
push
mov
jg
das
in
jb
cmp
xchg
sbb
outsl
xor
or
movsb
test
loop
daa
aaa
lods
inc
cltd
pop
and
xor
pop
dec
dec
ret
hlt
outsb
mov
xor
frstor
xor
test
je
adc
dec
popf
xchg
aaa
test
push
mov
flds
aas
add
mov
aas
sbb
addr16
cwtl
dec
test
lret
cmpb
stos
and
adcb
sbb
xchg
ja
pusha
mov
jbe
jmp
sbb
fbstp
push
mov
push
mov
popf
loop
inc
adc
fsubs
iret
in
cmp
mov
es
fstl
fidivs
sbb
std
mov
hlt
xor
scas
inc
imul
sarb
lcall
pushl
cmp
add
dec
lret
adc
xor
rorl
outsl
int
sub
xchg
idivl
sbb
shlb
repnz
lahf
and
add
inc
or
je
lods
scas
xor
std
sub
mov
cmpsb
aas
out
dec
pop
outsl
test
nop
or
pusha
adc
iret
loopne
jge
je
push
mov
jg
mov
cli
cmp
inc
dec
jl
pop
enter
mov
ja
mov
push
addb
jp
xchg
rcl
mov
in
loop
mov
jns
xor
adc
pop
dec
xchg
sbb
stos
mov
lock
inc
mov
rcrl
in
test
cwtl
mov
pop
cmp
fmuls
push
cmp
adc
lds
mov
es
cwtl
hlt
mov
xchg
out
lock
jb
mov
pop
or
pop
dec
nop
jo
inc
jns
repnz
nop
cwtl
push
lds
hlt
in
shlb
test
and
roll
xor
push
jne
scas
enter
push
xchg
inc
mov
jg
je
push
loope
add
xor
cli
mov
inc
das
mov
scas
insb
sub
lods
mov
add
push
push
pop
clc
mov
dec
sub
adc
mov
inc
sti
push
js
xchg
test
mov
les
mov
bound
xlat
mov
clc
fwait
orb
pusha
sub
dec
popf
loop
push
sub
mov
pop
sbb
inc
adc
add
rorl
and
xchg
xlat
lcall
sub
xchg
pusha
xchg
fimull
inc
pop
subl
or
movsb
xor
mov
inc
scas
mov
jno
incl
out
lods
xchg
icebp
mov
mov
dec
aam
mov
cld
daa
push
inc
outsl
cmp
xorb
cld
cld
scas
lahf
adc
aam
int
and
cs
outsl
jae
ret
xor
rol
pop
push
xchg
dec
shll
out
iret
iret
out
xorl
inc
sub
test
dec
push
popa
push
rclb
pop
test
loop
xchg
adc
xchg
stos
dec
inc
sub
jnp
into
incl
sbb
insl
stos
vphaddudq
lods
pusha
roll
adc
push
outsb
decl
std
lods
push
into
je
mov
xor
xor
shrl
mov
push
adc
fnsave
mov
fcmovne
dec
inc
ja
fdivrs
fs
inc
mov
js
xchg
push
stos
ret
repnz
ds
insl
stc
jle
popf
mov
mov
adc
mov
data16
rcll
pop
xor
inc
imull
int
mov
int
jge,pn
rcl
and
out
lds
push
sub
xchg
fisttpll
arpl
mov
xor
mov
shl
jno
ret
xorb
inc
pop
or
ret
testl
mov
imul
lods
pop
fadds
jns
lret
sub
test
test
sbb
cmpsb
and
sbb
adc
imul
movsl
inc
outsl
dec
popf
mov
dec
imull
adc
lcall
call
jmp
push
ss
pop
mov
add
aaa
rorl
popa
push
jo
jecxz
add
push
add
in
or
out
pop
xor
push
inc
mov
mov
mov
out
pushf
sub
mov
inc
outsb
add
cmp
push
ds
mov
cmp
jns
insb
loop
push
sbb
jne
imul
inc
movsl
lods
in
clc
pop
lock
xchg
aaa
cmpsb
enter
mov
sub
test
mov
fdivp
lods
ds
lret
jp
add
add
mov
js
insl
roll
push
sbb
mov
sub
pushf
mov
and
jecxz
cmpsl
add
out
cmp
push
mov
in
enter
mov
sbb
xchg
xchg
cmp
in
sahf
hlt
ds
repnz
sbb
cli
rolb
std
cmp
sti
sub
mov
loop
mov
setge
test
dec
les
and
call
jmp
adc
lds
loope
push
loope
fmuls
mov
jb
fldl
xlat
mov
inc
jo
mov
xchg
int
aaa
cltd
pushf
sbb
adc
fs
cmpsb
cmpsb
pop
pop
pop
adc
popf
or
cwtl
fiaddl
inc
inc
and
inc
loope
icebp
mov
je
sbbl
lods
leave
shl
icebp
or
and
xorl
mov
pop
jl
aad
xchg
adc
insb
faddl
ret
jmp
leave
lret
popf
arpl
xchg
mov
xor
mov
ret
daa
jge
cmp
sti
ljmp
movsb
clc
adc
stos
movsl
pop
push
jmp
popf
dec
cs
xor
mov
insb
sbb
adc
inc
mov
mov
pop
jge
and
sbb
mov
jmp
repz
das
sbb
fsubrp
fists
add
cmpb
pop
testl
lods
loop
xlat
movsl
jl
aas
lods
orl
std
or
mov
scas
icebp
sbb
cmp
cmpsb
add
jecxz
mov
xchg
imul
rorb
test
xchg
ficompl
xor
fcompl
aaa
pop
movsl
mov
mov
in
pop
xchg
out
mov
cmp
enter
mov
lods
mov
addb
movsb
jle
dec
out
pop
sub
shlb
pop
nop
xchg
das
jp
and
test
mov
mov
or
mov
cmp
mov
into
movsb
sbb
and
lcall
arpl
sub
orb
fistpl
adc
fisttps
xlat
adc
add
or
pushf
cmc
mov
jo
mov
or
and
or
dec
mov
mov
xor
popf
push
cmpsb
mov
and
inc
scas
fdivl
and
pop
push
popa
push
out
lret
popf
xchg
dec
das
stos
inc
in
pushf
cmp
add
mov
mov
cmp
rcl
shrb
gs
dec
movsl
pop
movl
lock
lea
jg
ret
rorb
ret
nop
push
or
inc
mov
push
push
lods
aam
imul
and
xchg
add
xor
arpl
lahf
mov
lret
imul
outsb
ret
push
pop
fbld
or
stos
out
jmp
rorl
fildll
xlat
insl
ja
clc
dec
cltd
sub
dec
pusha
jns
lock
push
ret
bound
pop
insb
ss
pushf
arpl
push
push
scas
cli
roll
ja
outsl
jo
or
pop
xor
mov
push
and
pushf
stc
pushl
mov
inc
int
stos
cmc
movsb
pop
dec
mov
adc
ret
pop
loopne
gs
mov
jb
imul
push
icebp
add
lahf
mov
add
dec
dec
test
movsl
cli
push
sub
xchg
adc
fnstsw
dec
xor
out
dec
dec
sbb
pusha
sbb
xchg
dec
cmp
sub
aas
xor
imul
nop
add
pop
incl
out
cmpsb
cld
sti
jle
push
lret
inc
sbb
es
pop
dec
xchg
sub
push
mov
aad
fsubrs
xchg
push
xorl
sub
and
mov
fcomps
iret
bound
cmp
out
jge
inc
fisubl
jo
mov
iret
pusha
sub
inc
mull
add
out
in
push
out
imul
jmp
or
pop
sbb
pop
fidivs
mov
daa
mov
inc
inc
mov
pop
sti
lock
pop
mov
bound
inc
adc
sub
scas
lea
mov
arpl
push
cmp
and
pusha
inc
mov
adc
lret
bound
adc
mov
icebp
or
or
int3
xor
cs
cli
or
aas
mov
das
popf
xor
jnp
mov
and
cmp
imul
adcl
mov
push
std
xchg
into
in
cmc
je
jns
pushf
or
mov
arpl
xorl
pop
out
mov
pushf
in
adcl
pop
out
jl
pop
sahf
lds
popa
or
xor
clc
jne
cmpsl
and
push
mov
rclb
divl
cwtl
cmp
add
xchg
mov
cmp
push
jl
repnz
out
cmp
or
xor
adc
in
out
repz
xchg
aad
clc
jns
pushf
adc
decb
mov
sub
and
fcomp
adc
repz
mov
mov
adc
add
jg
inc
fsubl
or
shrb
lock
aam
xchg
insb
loopne
es
mov
xchg
ljmp
in
cmpsb
shlb
xchg
pop
loop
push
loopne
adc
or
iret
push
mov
inc
int3
add
repnz
sbb
in
call
push
mov
push
aaa
and
mov
enter
xchg
aaa
push
aam
sub
add
roll
cli
xor
in
jmp
pop
xlat
add
mov
cld
inc
push
fisubs
xor
fmulp
cmpsl
pop
xor
pop
call
sbb
mov
loopne
lahf
dec
or
outsb
push
rorb
inc
and
fnstcw
shr
lret
mov
test
mov
mov
or
jno
adc
dec
outsb
add
sub
mov
cmp
cwtl
pop
aas
xorl
lret
inc
lods
add
aas
sub
mov
dec
and
pop
mov
les
adc
sar
sbb
push
notb
mov
in
pop
mov
into
xor
pop
lods
aad
imul
push
loopne
mov
ret
jp
into
fwait
cmp
pop
cmp
inc
lea
cltd
and
hlt
fwait
pusha
dec
mov
add
outsl
insb
push
cmp
xor
adc
fmuls
mov
dec
mov
mov
jmp
pusha
add
das
fbstp
adc
mov
push
xor
into
gs
cld
cmp
mov
adc
bound
sbb
fcmovu
div
divb
aas
xor
cmc
xchg
test
out
mov
lret
jnp
movsb
or
mov
pop
shl
pop
sbb
fwait
xor
imul
shlb
add
bound
mov
add
lds
inc
decl
push
fistl
or
aas
std
bound
fldenv
loope
adc
mov
dec
adc
mov
push
mov
addr16
loop
mov
repz
sub
lds
add
pop
jns
inc
mov
sub
sub
inc
loopne
xchg
pop
icebp
fistl
and
insl
out
inc
fdiv
xchg
movl
fistps
call
inc
fildll
jbe
and
mov
imul
jo
mov
jnp
les
sub
bound
les
addl
pop
xor
loopne
je
or
repz
jmp
inc
jne
and
sahf
fistpll
sbb
xor
adc
dec
cmp
shlb
sbb
mov
cmpsl
stos
bound
xchg
out
and
dec
xor
sbb
jecxz
mov
ret
mov
negl
sahf
sub
mov
add
dec
stos
xor
je
xor
mov
or
popa
gs
in
fwait
test
stos
pop
inc
lods
insb
mov
pop
sbb
lret
mov
push
aaa
sbb
in
dec
ja
mov
adc
jg
dec
mov
mov
fcmove
test
mov
aad
insb
call
popf
hlt
inc
ds
daa
jle
andb
loope
mov
pop
dec
lds
imul
gs
jmp
lods
jne
int
pusha
adc
jns
je
popf
push
cld
repz
popfw
stc
ffree
mov
or
jb
int3
adc
popa
je
je
pop
push
cwtl
cmpsl
mov
mov
in
sub
scas
xor
mov
sbb
es
and
int
in
adc
movsl
mov
xchg
cli
lods
jge
in
mov
push
lock
pushf
fld
lcall
cs
inc
sbb
push
mov
jl
ret
mov
and
in
and
fsubrl
lea
add
std
fiaddl
mov
imul
loope
je
xorb
jae
cli
lods
xor
jno
sbb
sbb
jnp
xor
lods
ftst
lods
mov
adc
cwtl
in
sub
mov
or
sbb
or
imul
fmuls
inc
clc
mov
mov
repz
fwait
push
xchg
lods
clc
xchg
lock
ss
xchg
xchg
jmp
xor
hlt
fcomps
test
jle
push
pop
inc
popf
jp
mov
hlt
rorb
fwait
and
movhps
lds
jb
pop
or
roll
out
dec
stc
insl
cmp
sti
sbb
outsl
dec
xor
mov
sbb
das
dec
pop
in
shlb
sbb
mov
mov
inc
push
rcrb
lds
pop
mov
rorl
push
outsb
inc
pop
cmp
ds
out
dec
xchg
stos
es
test
push
adc
xor
cmp
lahf
or
lret
xchg
cli
adc
scas
jmp
scas
add
xchg
dec
roll
ja
loop
jp
clc
into
and
lea
jle
ja
sahf
and
out
adc
movsb
shl
inc
xchg
lahf
cmp
sub
sbb
lcall
gs
aaa
pop
push
sbb
frstor
aam
push
lcall
pop
dec
or
insb
fiaddl
outsb
sahf
sbb
mov
aaa
hlt
mov
cmp
xchg
clc
insl
lock
scas
int
inc
ret
fsubs
lods
jbe
inc
mov
lret
push
jns
lahf
neg
jo
ds
pop
xchg
rcll
icebp
sbb
negl
mov
inc
cwtl
ret
sub
inc
mov
xor
arpl
or
fwait
add
pop
inc
scas
mov
jo
adc
rorl
sbb
mov
jg
lods
dec
mov
movsl
scas
rcr
cs
push
push
js
adc
shll
xorl
xor
popa
dec
cmpsb
rolb
lret
dec
jmp
push
jb
fmulp
stos
jl
inc
dec
mov
cmp
movsb
dec
out
mov
test
aam
jns
mov
adc
jle
xor
sbb
test
cld
pusha
mov
or
add
and
mov
push
or
testl
mov
hlt
call
scas
push
lcall
call
hlt
add
jae
push
pusha
out
jecxz
push
aam
nop
je
inc
imul
xchg
adc
mov
outsl
aam
ret
loope
adc
test
adc
sub
int
jge
add
mov
and
es
push
loop
sub
emms
imul
test
popf
pop
add
out
cmp
rorl
add
data16
push
xor
add
sahf
int
js
cmp
insb
ds
pop
fwait
push
xchg
mov
jb
jmp
push
push
inc
mov
xchg
loop
lods
push
jbe
ret
cmp
addl
jnp
cmp
and
pushl
sub
scas
cmpsl
nop
outsb
das
cmp
add
and
mov
bnd
sbb
les
es
fidivs
push
sti
pop
push
nop
out
loop
or
mov
ljmp
clc
daa
jg
std
inc
mov
mov
stc
or
mov
cli
pop
rcrb
jmp
sub
cwtl
pop
xchg
cmp
les
push
fimull
mov
into
cld
jl
mov
loopne
sbb
aad
movsl
andl
inc
lock
push
cmpsl
xor
cwtl
xor
popa
arpl
push
enter
xlat
push
fstps
xor
push
lods
cmp
repz
in
jns
stos
cmpsl
aas
cmp
jmp
sub
lods
add
jmp
cwtl
and
ljmp
xchg
jle
fisttpll
mov
jnp
sbb
sub
sub
cmp
bound
dec
push
fistps
shll
inc
repnz
jp
mov
ja
add
sbbl
mov
mulb
in
mov
loop
cmp
push
rorl
cli
jl
xorl
mov
sbb
popf
pop
das
in
xor
cmc
and
or
xchg
xchg
fisubs
jecxz
xor
out
js
nop
mov
mov
jle
mov
aam
xor
movsb
fcmovnbe
mov
loopne
bound
jno
adc
sbb
aaa
sahf
fs
inc
out
in
mov
adc
test
jae
mov
lret
cltd
negb
arpl
inc
dec
and
jl
mov
mov
out
xor
mov
sub
loope
test
pop
nop
clc
lock
out
sti
mov
xchg
mov
out
cwtl
or
fadds
je
cmp
xchg
dec
jbe
dec
sar
jl
cmpb
pop
adcl
mov
dec
add
fmul
stc
dec
and
and
jno
icebp
cmpsl
test
arpl
into
bound
jno
cmp
mov
fiadds
fsubs
lock
mov
lods
shlb
mov
repnz
mov
cmp
out
cmp
enter
sahf
fcos
pop
bound
or
in
push
add
sbb
lcall
mov
xchg
mov
pop
pop
jmp
ss
pop
loopne
in
sub
sbb
push
cmp
negb
inc
movb
std
ja
stos
push
xorb
xchg
std
push
repz
aaa
les
aas
sbb
test
cli
cmp
jecxz
fldt
pop
xchg
xchg
and
imul
out
out
jg
scas
ror
shrb
pop
stos
pusha
dec
pushl
push
push
push
dec
aas
cmpsb
and
inc
fsubrp
xor
lahf
int3
mov
push
lods
jno
adc
pop
push
mov
sbb
push
mov
imul
faddp
popf
xchg
popl
dec
pop
mov
jno
lock
rorl
add
int
shll
leave
cli
gs
mov
inc
out
fimuls
arpl
sbb
pop
push
popf
jge
adc
or
mov
dec
outsb
xchg
sub
js
stos
pop
decb
inc
mov
loope
push
jns
sti
lods
or
inc
lret
or
enter
or
push
in
scas
cwtl
cmpsl
cli
gs
adc
cld
pushw
cld
ret
cmp
cmp
aas
mov
sub
lret
adc
cmp
fwait
push
pop
sbb
push
out
inc
add
xlat
scas
push
xor
sub
dec
sahf
test
xchg
mov
cmp
fsub
mov
sbb
aaa
in
push
and
cs
bound
pop
jbe
mov
nop
scas
xchg
inc
add
inc
mov
or
cs
sub
orb
and
stos
mov
fwait
or
add
jmp
in
negb
les
stos
xchg
mov
dec
push
sbb
in
adc
movsl
cltd
int3
jp
xchg
xchg
and
dec
inc
ret
mov
push
sub
popf
xchg
and
inc
lods
xchg
pop
inc
jp
std
jp
cmp
dec
inc
subb
mov
mov
es
push
sti
mov
scas
jb
jmp
lret
adc
push
mov
repnz
fisttpll
fnstcw
int3
cmp
xorb
cmpsl
ds
arpl
push
dec
mov
loop
adc
pop
ja
xlat
cli
movsb
adc
es
sbb
xchg
aad
sbb
icebp
push
or
int
pusha
lcall
pop
fidivrl
das
or
push
jae
movsb
mov
hlt
ja
mov
xchg
xchg
fsubrl
push
pop
cmp
pop
ljmp
scas
mov
and
loope
push
pop
mov
xchg
jmp
aam
icebp
testl
xor
mov
out
loop
outsl
cwtl
aas
adc
cmp
add
roll
mov
arpl
loopne
bound
sub
mov
aad
popa
jo
xor
imul
xchg
dec
cmpsb
dec
and
xchg
mov
pop
ficompl
mov
push
out
jb
cmp
loopne
mov
cwtl
icebp
loop
sub
push
pop
push
insl
mov
lods
rorb
stc
push
xchg
cmp
inc
xor
push
mov
jo
jp
scas
jecxz
jp
xor
aas
in
xchg
sub
jns
sub
pop
ss
daa
add
stos
mov
add
addr16
mul
jb
xchg
rcll
dec
push
ret
lods
test
sbb
cmp
jecxz
cmpsb
mov
adc
dec
lods
or
dec
inc
xchg
mov
pop
insb
dec
jb
jecxz
pop
adc
xor
js
sbb
mov
leave
cmp
movsb
pop
sbb
ret
pop
inc
mov
stc
dec
xchg
mov
sbb
test
xchg
sahf
and
adc
lds
inc
movsb
test
loope
enter
adc
cmp
int
arpl
xchg
lret
hlt
outsb
mov
pop
push
push
int
ds
insl
or
inc
cld
inc
incb
iret
ret
ret
sub
adc
push
imul
jmp
inc
pop
add
mov
sub
dec
rclb
lock
lret
pusha
fsubl
mov
pop
or
in
push
add
inc
xlat
adc
sub
or
call
mov
push
out
sub
push
xor
xchg
push
inc
sub
or
xor
insb
mov
pop
call
inc
std
ja
mov
push
xor
popa
mov
fstl
mov
dec
inc
loope
movsb
loop
cmpsl
push
out
addl
pop
xor
add
jge
xor
pop
inc
push
jo
shrb
lock
cmpsb
sbb
mov
cld
sub
inc
mov
add
sar
test
lahf
and
push
push
adc
inc
add
test
pushf
insb
jle
fwait
xchg
push
cltd
sub
in
sbb
xchg
sub
stos
dec
mov
pop
and
xchg
aaa
mov
or
add
out
inc
push
jae
filds
js
call
loop
push
pusha
ljmp
push
jnp
and
xlat
rol
stos
in
cmpsb
jo
dec
jns
and
sti
cmp
push
push
jno
mov
std
mov
clc
cmp
or
or
mov
adc
rcrl
adc
fs
ror
pop
std
push
loop
add
xor
in
rcrb
test
ror
out
clc
mov
bound
push
xlat
test
push
pop
cs
pop
fadd
inc
cli
cltd
std
outsb
mov
dec
xor
ja
out
push
pop
and
in
push
mov
jle
movsl
scas
lds
popf
xor
fcomi
pop
cmp
aam
xor
xor
push
and
mov
pop
sti
out
push
pop
mov
cs
iret
lcall
push
sbb
rorb
scas
sbb
cmp
cs
pop
or
adc
mov
dec
es
mov
popa
movsl
ja
cmp
xchg
push
jp
lret
push
and
test
and
lock
imul
sbb
repnz
bound
xor
roll
orb
lea
shll
xor
test
mov
fnsave
mov
loope
cld
popa
jno
clc
mov
shll
adc
fcmovbe
nop
in
sarb
stos
out
jge
mov
test
mov
sub
xorl
mov
and
repnz
cmp
cmp
loop
add
push
pop
sti
sub
sub
pop
fnstenv
xchg
fbstp
fistps
pop
adc
cwtl
popw
ds
xchg
push
and
add
jnp
and
fs
movsb
xchg
cmp
fmuls
lods
das
add
hlt
or
addl
ljmp
sub
jbe
and
jecxz
sar
pop
outsl
adc
orb
mov
cmpsl
pop
xor
ljmp
out
xchg
mov
mov
or
or
loope
in
adc
mov
clc
push
and
outsb
mov
mov
lds
and
mov
mov
push
mov
gs
pushf
pop
mov
outsb
or
sbb
sbb
xchg
jecxz
xor
dec
push
sbb
sbb
jle
mov
scas
xchg
sbb
idiv
das
stc
jg
mov
dec
out
xchg
fsubs
add
or
mov
push
xchg
sbbb
or
imul
dec
or
lret
imul
or
fnstenv
clc
in
pop
das
sahf
insb
cmpsl
outsl
sbb
inc
add
insl
out
scas
std
sahf
lods
dec
add
mov
lahf
call
and
js
and
adc
inc
testl
jb
test
fiaddl
or
clc
jns
mov
jp
cmp
inc
sbbl
loop
fisubl
clc
mov
out
adc
adc
jnp
mov
and
iret
cmc
xor
lcall
test
pushf
mov
nop
inc
or
cmp
adc
jle
xchg
mov
cmp
aam
daa
inc
ljmp
fldt
lods
je
cmp
or
mov
xor
out
insl
fs
mov
xchg
rorb
sub
jne
testb
cli
pop
lahf
inc
mov
xorl
cmp
stos
popa
mov
ret
mov
or
outsl
les
nop
or
jge
pusha
test
xlat
sub
or
aad
cmpsl
lea
push
fbstp
pop
and
scas
inc
ss
rcrb
cmp
in
test
xor
cmp
jbe
cmp
mov
inc
ss
push
pop
and
xchg
cmp
cltd
loopne
xchg
mov
jge
jb
jl
cs
or
xchg
popa
adc
fsubrl
mov
cmp
lods
jne
inc
push
fisttps
sub
mov
subl
in
lcall
inc
ds
mov
cmp
stos
outsb
push
jge
push
jg
inc
push
adc
dec
scas
mov
push
jl
ret
mov
and
stc
dec
pop
and
mov
mov
pusha
mov
jno
lret
rolb
movsl
dec
ja
xchg
movsl
ja
int3
push
add
pop
and
daa
xchg
rorl
fwait
ss
ja
aam
xlat
imul
das
into
sub
inc
pusha
cmpsb
cmpsb
mov
enter
jle
sbb
test
jae
cmp
xor
shl
fmull
aaa
sub
push
and
push
dec
mov
mov
add
sub
push
jmp
dec
in
sbb
mov
jecxz
call
adc
jp
test
jge
iret
ds
int3
outsl
adc
add
mov
sbb
or
fbstp
dec
and
and
aad
sahf
mov
inc
pop
mov
mov
dec
push
jle
imul
pop
gs
sbb
jb
out
push
in
std
or
push
cld
jecxz
sbb
decl
addr16
or
lahf
fsubs
cltd
xchg
js
pop
cmpsl
fsts
popf
or
popf
add
filds
clc
in
aad
fdivrp
inc
fisttps
cmp
bound
fwait
and
into
and
and
inc
mov
pop
iret
mov
dec
push
dec
lea
xchg
imul
push
pusha
dec
jae
aam
or
ret
xchg
nop
cmpsl
repz
sub
outsb
push
js
lods
xchg
icebp
sub
dec
std
js
jmp
negl
jbe
nop
jb
fadd
jmp
mov
cmp
daa
fidivl
dec
mov
and
mov
mov
lock
sahf
frstor
mov
repz
and
xor
jbe
mov
sbb
stos
test
cmp
mov
and
into
mov
pop
dec
jle
dec
mov
lock
rcrb
xchg
nop
in
pop
xor
inc
fmuls
inc
rolb
pop
jae
cli
mov
push
xor
lods
es
pop
pop
gs
mov
cmp
and
je
mov
push
inc
mov
lods
sbb
lock
insl
out
and
notl
shl
and
xor
movsb
push
adc
or
jge
loopne
xor
mov
testb
push
shrl
shrb
fbld
aad
pop
sbb
add
dec
pop
dec
inc
sbb
mov
mov
mov
xor
cmp
xlat
loop
lods
mov
out
adc
pusha
dec
inc
arpl
outsl
scas
int3
cmpsl
or
scas
inc
dec
insb
lea
dec
mov
inc
xlat
sbb
sbb
data16
daa
stc
and
dec
xlat
mov
push
mov
clc
sub
xlat
push
out
enter
pop
or
xadd
add
add
mov
into
rorl
cmc
dec
stos
push
sahf
out
jae
mov
mov
push
push
je
ljmp
sub
lods
dec
dec
inc
out
cs
jne
call
push
pop
or
adc
lods
gs
xchg
xchg
cltd
fcomip
mov
lock
rclb
pop
shll
push
xchg
xchg
es
ss
aas
imul
mov
ss
int
cld
jns
push
sbb
jle
cli
xchg
addr16
jbe
sub
cmpsl
xor
add
and
sbbb
mov
cmpsl
or
ret
js
xor
bound
in
fnsave
test
stos
outsb
mov
sahf
mov
and
adc
leave
int3
mov
pop
push
aam
or
inc
ljmp
iret
push
push
sub
cmpsb
xlat
jg
call
cld
jae
mov
mov
ret
dec
dec
sub
and
mov
mov
lret
sub
sbb
ds
sbb
jo
fwait
repnz
dec
or
mov
test
jb
jb
iret
test
pop
outsb
call
lods
push
ficoml
inc
mov
jno
and
xchg
or
sahf
dec
rcll
push
fsubl
mov
sahf
sbb
das
jle
add
fldenv
aaa
out
pop
lahf
sub
adc
mov
aam
mov
ret
push
pop
inc
xchg
jo
sbb
aam
dec
lahf
xchg
add
push
sub
dec
sub
sahf
pop
dec
lahf
les
sbb
mov
and
jbe
mov
popf
sbb
vmwrite
pop
test
fistps
movsb
mov
rorb
das
lods
cmp
xorb
push
clc
jmp
sub
dec
fdivrl
test
in
out
scas
add
inc
xchg
dec
push
xor
scas
cmp
pushf
test
rcr
cmp
mov
add
sbb
jb
or
pop
ficoms
mov
bound
cli
les
out
aad
jo
xor
sarl
sub
lock
push
mov
or
lea
inc
int3
pushf
push
jge
mov
cmpsl
cmp
xchg
sub
pop
mul
inc
out
pop
push
dec
ja
insl
inc
outsb
sbb
push
fs
cmp
insb
cltd
rcl
push
repnz
cmpsl
sbb
leave
scas
sub
sub
fstpl
xchg
repz
push
mov
xor
sbb
aam
ret
enter
push
push
sub
outsl
shll
incl
imulb
sub
xor
xchg
mov
repnz
je
pop
adc
rorb
sbb
int
cmp
sbb
iret
cmp
jno
cld
jmp
int3
je
cwtl
cmp
sub
mov
ljmp
in
rcr
sbb
xchg
pop
push
mov
cmpsl
mov
ret
dec
ljmp
mov
push
jb
adcb
fcmovnbe
aas
adc
dec
cmp
adc
testb
pop
es
sti
add
xchg
inc
insb
xchg
adc
inc
aam
aaa
lods
enter
aam
jnp
rolb
out
push
scas
aad
loope
mov
push
lret
pop
out
and
stc
jb
cmp
mov
dec
xchg
inc
outsl
jne
xor
jge
mov
lds
repz
jns
inc
jb
gs
add
inc
lret
popa
and
pop
test
inc
xchg
mov
hlt
mov
jo
pop
fwait
pop
js
jp
cmc
sahf
pop
cmp
aaa
sbb
daa
loopne
or
shl
mov
lods
push
sahf
dec
out
mov
push
cmp
mov
cmp
jne
in
fcomps
pop
adc
ret
dec
rorb
dec
sbb
fwait
stos
cmpb
mov
push
add
outsb
jp
or
adc
rcrb
push
adc
pusha
and
clc
loop
loope
lahf
lock
lret
mov
inc
sub
bound
movsl
lret
stc
daa
lret
loopne
add
mov
pop
outsl
jle
cmp
cltd
and
pop
ljmp
sahf
mov
lds
xchg
out
xor
in
fnstcw
cltd
jns
jae
ds
push
jle
pop
or
fistpl
test
sbb
inc
into
lea
sbb
cmp
iret
jae
repnz
mov
xor
jmp
xorl
mov
les
xchg
movl
add
cs
divl
stc
adc
icebp
imul
lods
pop
inc
imul
in
mov
test
cmpsl
insl
dec
mov
jp
add
out
mov
mov
jns
jnp
xor
bound
sub
dec
sub
movsb
je
negl
add
and
cmp
mov
mov
inc
rorb
shlb
adc
mov
mov
movsb
cmp
jle
jg
rcrb
pop
push
nop
cs
sbb
sub
xchg
sub
mov
push
rcrb
lods
gs
loopne
aas
sub
inc
or
in
divb
es
inc
pop
jge
popf
push
xchg
xchg
mov
adc
mov
scas
add
mov
push
imul
xchg
lods
inc
mov
xchg
lds
xor
dec
adcl
popf
stos
stc
cs
pop
and
mov
aaa
nop
daa
lods
pop
leave
mov
sub
or
loopne
jne
sbb
adc
pop
lret
sbb
stc
lock
xchg
les
jne
and
or
jg
push
sahf
jmp
xchg
dec
outsl
imul
jmp
pop
pop
lea
loope
sbb
fs
push
adc
out
jecxz
stc
repz
jb
xchg
dec
dec
sbb
divb
imul
nop
or
push
in
repnz
cmpsl
ret
mov
dec
jge
stos
inc
dec
loope
ficomps
es
jb
jb
clc
lea
loop
stc
shrb
je
hlt
mov
aam
and
dec
dec
rorl
and
loope
xor
pop
iret
gs
ds
sub
scas
rorl
cli
les
dec
icebp
push
xor
push
inc
mov
subl
movsl
push
jle
loop
inc
cmp
cmpsb
daa
pop
pop
ds
jo
push
pop
push
in
xor
xchg
mov
xchg
mov
imul
cmp
mov
sub
dec
mov
inc
jecxz
loop
mov
ljmp
imul
mov
leave
subb
add
pop
outsl
das
jmp
gs
push
mov
sbb
dec
sbb
inc
mov
sahf
cld
xor
movsl
jbe
jae
pop
push
fnstenv
testb
cli
loope
int
xor
out
jnp
inc
or
negb
pushf
add
sti
or
stos
rolb
jle
mov
mov
sub
jne
out
mov
mov
aam
add
xchg
outsb
loope
dec
scas
fiaddl
pusha
cltd
sub
ret
sub
cmp
dec
std
sub
ljmp
cmp
add
sub
mov
inc
xchg
idivl
imul
pop
cmpsl
and
push
cld
lds
jnp
into
xchg
add
sbb
insl
dec
pop
movsl
jmp
push
enter
test
mov
pop
enter
mov
cmpsb
inc
lea
mov
lret
and
mov
ficompl
fwait
aam
int
pop
aam
pop
repz
mov
js
fistpll
mov
push
incl
cmc
in
mov
out
sbb
pusha
jge
adc
ljmp
loopne
and
adc
push
in
mov
cwtl
sub
adc
mov
mov
hlt
push
addr16
test
push
xchg
xchg
scas
pop
push
mov
inc
jno
inc
sbb
mov
js
push
or
adc
loope
out
lods
add
out
and
lahf
insl
loop
pusha
inc
shrb
in
sub
mov
xor
add
fwait
pop
cmpsb
fdivl
mov
push
es
jp
dec
mov
insl
mov
mov
pop
add
icebp
orl
sbbl
nop
insl
push
lcall
js
push
mov
dec
cmpsl
int
dec
xor
jp
clc
xchg
pop
and
test
popf
inc
scas
dec
dec
adc
cmpsl
mov
mov
sarl
jg
xchg
xchg
jb
xor
ror
mov
jle
aam
xchg
das
sub
mov
jecxz
cmpsl
xchg
in
shlb
repz
addr16
jle
aaa
jb
fists
dec
scas
shrb
sbb
xchg
rcll
cmpl
shlb
lret
pusha
or
scas
mov
adc
leave
cmpsl
fisubl
jle
sub
sbb
jns
adc
cmp
aam
mov
mov
or
xchg
push
pusha
fwait
js
jb
sub
out
xorl
out
sbb
sub
cltd
mov
incb
pop
or
push
pop
out
push
fs
popa
in
test
xor
inc
clc
sub
inc
sbb
andl
pop
negb
outsl
push
add
pusha
ds
and
jnp
add
addr16
imul
in
sub
in
nop
pop
jnp
or
insl
or
sbb
sub
push
fimuls
inc
cmp
inc
ljmp
notb
stc
mov
idivl
roll
pop
ficoms
mov
pop
or
out
adc
dec
xchg
cmp
ret
sti
xor
sub
aam
int3
aas
inc
push
push
xchg
sub
xchg
lea
test
test
repnz
jno
cs
movsl
pop
jmp
ljmp
and
fimuls
dec
mov
xchg
ret
insb
fnstenv
pop
dec
mov
jae
and
cmp
xor
xchg
rcrl
lahf
sub
mov
and
inc
mov
clc
ret
adc
jb
mov
sub
push
filds
adc
rcl
or
push
call
test
test
sub
ficoms
cmp
jb
test
dec
dec
mov
stos
push
fs
xchg
out
hlt
cmc
into
outsb
lret
inc
ror
out
in
push
adc
mov
test
insl
xchg
sarb
push
cmp
mov
add
xor
ret
lret
add
inc
cmp
pop
fsubs
or
sbb
cmp
fisubrs
adc
movb
xor
jl
pop
lea
lcall
aas
cmpsb
add
cmpsb
in
jnp
lods
pusha
insl
cmp
test
dec
xchg
ret
add
aas
cli
mov
cmpl
pop
push
shlb
call
jg
test
sbb
cld
ja
mov
icebp
dec
lcall
bound
cs
cmp
xchg
pop
fbstp
imul
pop
push
sub
testb
xor
dec
mov
loope
fdivl
subb
ss
dec
dec
mov
cwtl
lock
mov
inc
ljmp
mov
insl
es
ret
imul
in
sarb
sbb
lcall
lret
and
es
daa
and
je
ja
add
ret
cli
cmp
adc
subl
mov
or
push
jge
std
fstps
pop
pusha
sbb
dec
stos
lahf
aad
popa
push
sti
ds
mov
daa
aam
push
and
dec
xchg
testl
pushf
nop
or
cmpsb
push
adc
jle
ljmp
pop
and
popl
sbb
cwtl
popa
mov
add
ja
lret
shrb
push
cmp
stos
jmp
loope
mov
ficompl
mov
scas
jmp
fnstcw
push
inc
dec
mov
shll
mov
lods
add
mov
push
shll
push
adc
inc
mov
stc
pop
orb
inc
mov
shll
in
mov
insl
outsl
and
ret
mov
lock
xchg
call
jae
iret
adc
addr16
nop
xchg
push
or
adc
insb
jo
adc
lret
xor
adc
insb
xor
add
and
xchg
aad
xchg
cmpsb
lret
lahf
in
and
fwait
jbe
pushf
push
adc
jne
sbb
fildl
push
xor
call
dec
out
inc
popf
mov
sbb
fs
repnz
loopne
jo
out
in
cmpsl
dec
push
or
pop
sub
je
or
rcll
dec
lock
fistps
or
dec
cmp
sahf
cmpsb
loopew
mov
mov
sbb
test
fisubl
cmpsl
mov
and
nop
cli
aad
pop
mov
mov
pop
mov
sub
lods
adc
jne
adc
mov
push
and
push
cmpsb
cmpb
enter
and
icebp
inc
fbstp
add
insb
fwait
sub
cli
outsl
pop
in
mov
cmpsb
andb
cmp
cmp
xchg
loop
mov
mov
xchg
jno
adc
adc
push
jne
es
add
xor
mov
inc
add
fmul
in
cmpsl
fmull
pop
jae
adc
sub
mov
pop
popa
lahf
inc
mov
repnz
shlb
mov
xchg
push
jecxz
add
mov
lcall
outsb
sub
mov
xchg
inc
add
outsl
push
inc
cwtl
sub
add
mov
mov
lock
lea
push
push
aam
adc
loopne
stos
push
shrb
push
ret
jle
idiv
ret
sub
hlt
in
or
fildll
push
aas
xchg
icebp
lcall
sarb
fisubs
cmp
loope
jo
stos
xor
stos
jg
xor
ret
test
inc
push
mov
outsb
lods
movl
ficompl
mov
pop
je
dec
mov
xor
das
sub
dec
leave
mov
jmp
dec
push
mov
cmp
mov
lcall
pushf
cmp
test
mov
mov
mov
dec
inc
push
jne
push
jmp
pop
test
fldcw
bound
xadd
imul
shl
bnd
cmpsb
or
cmp
xchg
mov
in
daa
jb
lcall
nop
mov
xor
sbb
lcall
mov
loope
frstor
int
aad
or
push
and
les
test
pushf
mov
jmp
sub
sbb
sahf
sub
jmp
lds
inc
inc
scas
xor
and
adc
adc
js
inc
adc
adc
data16
cmp
ret
add
ret
jae
mov
mov
ja
jp
xor
cmp
sbb
lods
jae
mov
pusha
gs
adc
fwait
scas
add
mov
pop
xor
cmc
dec
aaa
mov
xlat
push
adc
test
fldcw
jge
aad
cmp
lods
push
sbb
scas
cwtl
lods
dec
daa
xchg
push
rcrb
repz
adc
and
push
push
loop
cmp
jge
daa
adcb
cwtl
cmpsb
cs
or
in
outsb
lods
jnp
pop
stos
or
mov
push
push
cmp
in
stos
inc
xchg
repnz
push
fcompl
mov
mov
sbb
push
xor
xchg
lret
sbb
push
lcall
mov
sbb
adc
inc
test
rcrl
xorb
addr16
inc
mov
in
inc
mov
pop
in
movl
and
out
sub
and
mov
rcrb
push
jle
shll
and
mov
dec
nop
adc
ret
cmp
mov
imulb
test
shll
cmp
dec
or
ljmp
cmp
mov
aad
cmp
mov
shlb
bound
cmp
xor
mov
jae
mov
inc
mov
movsl
push
dec
inc
int
add
mov
andb
fst
inc
test
jle
popf
pop
xorb
adc
dec
adc
inc
cs
fdivs
sbb
jmp
std
mov
lret
push
fiaddl
inc
push
jmp
jge
call
pop
and
push
sbb
insb
arpl
pop
push
ljmp
lret
and
filds
lcall
mov
ret
lahf
inc
pop
clc
dec
ret
mov
or
cmp
dec
popf
nop
aaa
mov
dec
subps
into
inc
dec
adc
aad
sbb
push
mulb
movl
cmpsl
mov
repz
jmp
inc
outsl
sub
xor
sub
daa
pop
mov
inc
cmp
mov
outsl
dec
outsl
lea
mov
xor
mov
rcr
stos
and
fists
xchg
pop
mov
inc
cmp
push
inc
mov
pop
adc
rclb
fiaddl
loope
adc
adc
in
jmp
inc
push
and
or
sbb
je
mov
icebp
mov
loop
aaa
lret
ffree
xchg
and
arpl
sahf
xlat
push
pop
cmc
inc
nop
fidivl
jle
outsb
xchg
inc
xor
notb
insb
inc
nop
mov
in
jns
or
mov
xlat
lahf
stos
cmp
aad
in
dec
icebp
cmc
inc
stc
dec
fcoms
inc
add
sub
ja
ds
xor
outsl
out
popf
pop
shll
and
popa
gs
xchg
lret
clc
sahf
add
pop
or
cmp
test
clc
jle
cmp
pop
xor
push
cltd
int3
pop
stos
fcmovbe
jne
lcall
enter
mov
mov
mov
push
rcll
stos
lret
je
push
jecxz
jae
inc
call
arpl
dec
fnstsw
or
loop
out
std
sahf
imul
cli
xchg
test
xchg
shrb
cmpl
lcall
test
stos
adc
cmp
jmp
mov
mov
adc
add
push
adc
ja
and
mov
xchg
cli
int
cwtl
inc
inc
insl
pop
loopne
lds
ret
icebp
clc
push
outsl
je
out
cmc
inc
inc
and
dec
movsl
out
cmp
add
rcrb
jnp
dec
sub
and
lods
cmp
movsb
pop
repz
or
mov
push
int
idivl
mov
ljmp
jmp
int3
mov
fisttps
mov
ret
fistpl
int3
xchg
mov
mov
cmpsl
pop
or
push
xor
xorb
mov
or
sbb
adc
mov
fisttpl
mov
sub
addr16
movsl
stc
pop
mov
dec
push
push
xor
sbb
in
clc
sbb
jbe
add
sub
stc
xchg
fbstp
cli
push
adc
inc
cmp
lret
add
je
and
jge
ds
jge
adc
mov
sti
jo
test
leave
mov
hlt
pop
push
sub
fldt
arpl
lret
jmp
outsl
mov
push
adcb
cld
xchg
xor
add
stos
in
into
fwait
sahf
xor
lahf
sbb
push
cli
lahf
fstps
lds
cmc
cmpsb
nop
loope
nop
pop
jg
cli
jp
scas
add
lret
mov
pusha
add
nop
enter
ljmp
push
out
stc
ficoml
fsubl
jg
xchg
test
scas
push
lcall
shl
sbb
sbb
stos
push
cltd
in
sub
or
adc
xlat
sub
cwtl
xchg
popa
add
test
insl
push
add
and
call
les
movsl
movsb
dec
sarb
push
out
test
ljmp
dec
xchg
pop
mov
mov
dec
shll
mov
pushf
dec
fldl
int
xchg
test
mov
mov
out
fdivs
add
xchg
leave
lret
xchg
push
pop
lods
dec
sti
leave
es
ja
add
push
dec
lret
arpl
lret
movsb
xchg
pop
loope
ret
jecxz
es
pop
popf
xchg
repnz
dec
adc
pop
fnstenv
pop
adc
das
xchg
aas
push
jl
ror
mov
or
cmp
fidivrs
mov
cmc
and
stc
fadds
sub
fcmovb
adc
test
jb
notb
xor
movl
lods
dec
pop
popf
insl
cmp
push
jno
jmp
das
daa
or
pop
repz
mov
cmp
adc
testb
cmp
jge
push
int3
mov
fildll
xchg
xchg
dec
pusha
aas
jge
fstp
mov
lcall
mov
or
rcr
shrl
mov
pop
mov
cmpsb
cmp
mov
push
iret
or
cmp
lds
aaa
and
push
mov
aad
sbb
dec
mov
ficomps
push
outsl
mov
mov
xchg
popa
imul
dec
mov
fs
outsb
fldcw
push
movsb
dec
cli
and
cmc
pushf
test
pusha
sub
mov
xchg
adc
or
cmp
shll
push
ljmp
test
and
mov
cmp
stos
sahf
sbb
sahf
hlt
mov
pusha
jbe
clc
push
xor
in
and
test
daa
sbb
push
dec
rcrl
mov
stos
test
out
pusha
sbb
cmp
stos
js
test
jns
xchg
scas
in
jecxz
xchg
lret
nop
xlat
leave
int
addr16
and
jb
jl
hlt
enter
pop
push
mov
xor
sbb
sbb
cltd
insl
xchg
and
cs
jmp
pop
es
clc
lods
incl
jecxz
jnp
jle
push
add
xchg
daa
xchg
dec
xor
in
mov
sbb
jo
ret
mov
xchg
or
push
jae
ljmp
or
sub
dec
bound
adc
idivb
into
inc
jmp
inc
test
sub
ficoml
mov
sub
test
in
loopne
hlt
xchg
out
mov
xchg
stc
mov
clc
push
ja
ret
inc
stos
in
icebp
xchg
jno
push
cmpsl
inc
mov
repnz
inc
jl
mov
dec
pop
sbb
pusha
fs
xchg
ss
add
fidivrl
mov
int3
add
add
xchg
lock
lret
jae
shll
imul
xor
mov
popa
lret
inc
js
jne
pop
aam
adc
jo
xor
dec
ljmp
lods
jns
lods
jno
mov
xor
pushf
loop
mov
stos
or
f2xm1
mov
sub
and
dec
and
popf
pushf
into
lods
inc
xchg
imul
test
xor
mov
loopne
out
pop
pop
out
or
adc
sbb
xchg
mov
out
out
inc
imul
inc
push
sub
sub
mov
pop
sub
imul
push
sub
idiv
bound
stos
push
stos
mov
lds
fisubs
pop
and
push
or
pop
cld
push
jns
mov
cwtl
or
or
leave
mov
lret
in
aam
xor
and
xchg
es
imul
cli
or
mov
sbb
jae
mov
pop
sbb
test
lret
insl
add
or
js
dec
adc
jae
xchg
out
andb
push
rcrl
mov
aas
inc
fists
in
mov
pushf
das
subb
jbe
ret
push
mov
mov
iret
ljmp
lock
lds
lods
test
scas
rclb
mov
test
mov
pop
lock
push
fcoms
mov
jge
mov
faddl
negb
aad
loop
add
out
aad
pushf
xchg
push
mov
sbb
popa
sbb
mov
xor
mov
add
cmpl
dec
rorb
fistps
pop
inc
xor
addr16
outsb
jg
stos
cltd
push
jnp
jae
ss
xchg
jp
enter
and
test
call
cmp
xchg
addr16
mov
xchg
fiaddl
mov
mov
icebp
rclb
lea
cmp
dec
es
mov
insb
pop
push
xchg
cltd
push
jmp
sbb
test
sbb
inc
arpl
int
mov
add
negl
int
pop
sub
xor
insb
cld
add
sbb
sti
in
sbb
lods
sarb
loop
into
rclb
aam
fs
inc
add
stc
jns
cli
repz
pop
inc
jecxz
loope
sub
dec
nop
inc
sub
scas
cld
sub
mov
mov
xor
call
insb
push
add
cmp
test
out
test
dec
and
pop
xor
int
jmp
lcall
pop
inc
mov
rcl
out
das
pop
fiadds
inc
daa
fs
cltd
jns
mov
cmp
testl
xchg
test
out
push
dec
xor
lahf
sahf
add
pop
mov
xchg
fistl
mov
xchg
fidivrs
push
daa
movsl
jl
outsb
fdivrl
stos
or
ss
pushf
jne
hlt
add
jnp
sbb
addl
adc
cmpsb
xor
sub
je
dec
jo
dec
and
inc
mov
loop
lods
xchg
cmp
pop
orl
add
fisttps
iret
clc
loopne
clc
out
sub
add
lahf
mov
fistpll
sahf
sarl
mov
jp
repz
cmpl
sub
test
les
repz
lods
iret
in
and
dec
adc
jo
pop
out
add
push
mov
shlb
or
jns
sbbl
mov
sbb
fdivrl
push
pop
lock
or
lods
fwait
lea
call
cmpsl
sbb
cmpsb
outsb
push
ret
imul
iret
sar
call
das
pop
add
stos
lods
push
and
ljmp
add
and
cltd
or
cwtl
jns
mov
and
pusha
nop
xor
jb
mov
and
iret
adc
fisubrs
lret
imul
dec
hlt
inc
xchg
or
fucomi
cmc
dec
push
insb
scas
add
adc
out
sub
xchg
add
pop
xchg
jl
data16
xchg
and
sbb
add
stc
rorb
out
and
lea
sub
push
mul
lds
test
ds
lods
das
ljmp
adc
stos
imul
stc
insl
or
call
sub
int3
popa
dec
andb
repnz
and
test
loop
movsl
rep
add
scas
rolb
notb
ret
dec
mov
xchg
sub
sbb
dec
push
jmp
cmp
dec
nop
in
or
or
jle
mov
lahf
fistpll
fadds
repnz
jbe
cmpsl
mov
push
lods
dec
fstpt
jns
aaa
ret
aaa
add
jo
filds
lock
jae
and
lret
and
iret
fcoml
mov
mov
lret
imul
sub
mov
pop
inc
xor
aad
jne
lods
push
rcrl
pop
cli
cmpsl
cld
in
add
dec
je
inc
cli
aas
aad
pop
pop
jnp
es
adc
aad
mov
leave
xchg
cmpsl
loop
sub
mov
cmp
js
lret
xchg
cmp
pop
push
std
push
and
pop
ljmp
add
loope
rcll
cld
dec
adc
sarb
cwtl
lds
mov
test
push
shl
adc
shrb
ret
cmpsb
addr16
mov
push
push
push
push
cs
ljmp
imul
adc
pop
sbbb
xchg
push
inc
and
push
adc
or
or
cmp
mov
aas
in
dec
dec
or
std
aam
add
pop
mov
and
fldenv
jmp
pop
cmp
adc
jb
out
push
lret
sub
cmp
loop
xchg
pop
sub
mov
cltd
lods
cmp
cmp
in
mov
mov
sub
mov
mov
jp
adc
lock
and
sarb
sbb
pop
add
imul
lcall
insb
mov
int3
jmp
pop
xchg
ficoml
ficoml
lock
andl
daa
iret
inc
xlat
push
adc
cld
pop
mov
std
jle
call
dec
jne
mov
fsubs
add
psubw
mov
push
xchg
decl
mov
lea
mov
pop
stc
fistpll
mov
and
mov
pextrw
arpl
lock
fwait
cld
inc
cli
and
pop
mov
adcb
nop
jl
in
sti
call
lods
cmp
enter
test
xlat
sbb
push
mov
sub
fsubp
mov
add
pop
pop
inc
inc
nop
jbe
jae
out
lods
jg
xor
lods
jbe
mov
cmc
adc
pop
nop
mov
lret
loopne
mov
dec
adc
daa
xchg
mov
aad
adc
rcrl
xchg
xchg
repnz
pop
leave
mov
jp,pn
adc
ds
adc
divw
sbb
into
ljmp
add
and
add
sbb
clc
fmulp
fstpt
or
push
popa
ss
push
or
pop
dec
cld
int3
cmpsb
shrl
pushl
fwait
xchg
and
sahf
cmp
addl
xchg
dec
push
jecxz
pop
sub
cmp
clc
cmp
cmpsl
cmc
cs
bnd
jno
inc
sbb
jb
sbb
add
popa
sti
popa
aam
mov
mov
das
std
cmp
and
pop
inc
mov
iret
and
test
pop
adc
cs
cmp
js
test
lock
cmp
movl
mov
add
inc
adc
or
lret
sub
add
pop
pop
movsb
inc
sub
sbb
jp
test
pop
lea
lcall
sub
in
jge
push
adc
addr16
jge
sub
or
in
fcoml
cld
in
out
std
pusha
movsb
dec
jae
aad
stos
cltd
std
jns
mov
xor
or
repz
mov
mov
lds
push
mov
inc
mov
sub
or
mov
or
cmp
shr
and
xor
pop
aaa
out
lds
add
cmp
pushf
xchg
lahf
sub
pop
in
inc
mov
test
stos
fcompl
adc
sbb
pushf
push
lock
fwait
xchg
mov
mov
or
adc
std
or
add
int3
fstpl
mov
push
cwtl
mov
insb
jecxz
jae
xchg
stos
mov
lds
sbb
pop
negl
repnz
test
jl
sub
and
fisubrl
xor
fisttpll
sub
cwtd
xchg
mov
sbb
les
rcl
aas
or
sbb
inc
pop
out
xchg
imul
das
mov
lods
imul
test
jb
fs
shll
cld
push
cmp
sbbb
test
xor
jl
and
dec
loopne
xchg
push
inc
mov
and
mov
xor
shlb
mov
push
push
or
push
mov
scas
addr16
inc
aad
shlb
mov
lret
fsts
mov
fst
jno
rcrl
fdivrs
sahf
mov
pop
cmpl
cmp
ret
push
idivl
popf
lods
add
sbb
call
dec
mov
jne
xor
mov
fscale
fiaddl
sub
cmp
int
scas
xchg
pop
sbb
dec
rol
xchg
cmp
mov
pop
lret
adcb
es
addl
subb
fsubs
or
inc
bound
pop
mov
push
cli
inc
fdivrl
dec
mov
jns
ficomps
dec
loope
loopne
out
push
subb
pop
xor
jl
out
mov
out
push
lret
fnstsw
sar
popf
and
into
pop
xchg
jnp
jno
rcrl
push
dec
push
adc
ljmp
lea
iret
jbe
dec
mov
mov
inc
or
pop
xchg
pusha
stos
ja
imul
sbb
mov
cmp
mov
inc
sbb
enter
mov
mov
add
inc
shrl
jp
pop
push
in
pop
lods
mov
adc
jl
in
xchg
cmp
mov
push
sbb
mov
insb
push
jns
push
lock
rcr
pop
jo
ret
jmp
cmp
cmp
add
scas
sahf
dec
loop
popa
std
jnp
negb
push
test
cmp
sbb
push
add
leave
mov
imul
daa
jae
cmp
push
loope
mov
bound
testl
pop
lret
scas
mov
loop
loope
les
and
arpl
sub
xchg
add
movsb
mov
xchg
insb
cli
aaa
sarb
inc
movsb
rclb
cmp
sub
nop
xor
push
sbb
or
imul
xor
adc
jbe
test
push
mov
push
add
or
stc
icebp
mov
aam
and
pop
aad
int3
lods
push
rclb
xchg
ljmp
cmp
outsb
psubw
lcall
sub
dec
xor
iret
in
icebp
pop
inc
xchg
ret
xor
dec
push
inc
popa
aam
jl
dec
cmp
jmp
lock
lcall
insb
jl
aad
push
jno
rclb
sahf
fcmovu
mov
testb
inc
bound
std
negb
and
stc
pop
mov
lods
aam
jae
lea
inc
and
xchg
adc
or
cwtl
add
pop
dec
popa
into
popa
xchg
dec
pop
push
dec
lds
sahf
int3
fs
mov
and
insl
divl
dec
push
xchg
ss
scas
into
sub
xchg
xchg
into
in
sub
or
mov
push
cwtl
mov
insl
sbb
add
mov
cltd
mov
insl
mov
out
push
mov
iret
xor
xchg
fsin
stos
cld
arpl
lcall
xor
iret
xor
sub
cmp
movsl
mov
jmp
pop
aad
mov
lret
push
pop
adc
stos
pusha
fiadds
cmp
test
cmp
idivl
test
and
test
imul
and
and
pop
out
je
mov
mov
dec
pop
jl
jo
adc
test
repz
ljmp
out
leave
sti
mov
adc
sbbb
jne
mov
popa
adc
mov
mov
and
fisubl
call
call
cmp
movsl
cmp
sbb
sbb
sbb
fisttpl
rcrb
int3
sub
mov
xchg
add
int3
cmp
hlt
sbb
xchg
out
xor
mov
out
push
loopne
loop
test
sbb
sbb
mov
inc
aaa
ss
pusha
mov
xor
xchg
xchg
jns
push
ret
fucomip
xchg
xor
aad
aaa
push
int3
add
adc
hlt
mov
inc
seto
mov
pop
or
jecxz
xchg
sbb
sbb
sub
aaa
movsl
cmp
addr16
pop
add
flds
ja
inc
xor
dec
out
inc
mov
call
pusha
dec
js
addr16
adc
jmp
lcall
sbb
mulb
dec
mov
adc
lahf
jno
xchg
dec
insl
out
cmp
inc
iret
fs
arpl
push
mov
aas
dec
jo
cmp
xor
je
icebp
push
xchg
cld
or
sbb
push
sbb
add
test
cmp
ret
in
cmp
test
pop
imul
mov
push
jg
shlb
add
sub
cld
inc
sub
imul
jg
pop
mov
out
push
fdivrs
push
sub
bound
push
inc
pop
js
sbb
inc
jnp
bound
in
mov
notb
addb
inc
pop
out
in
adc
add
xor
push
rclb
xchg
movsb
mov
sarb
xchg
sbb
pop
mov
idiv
push
jns
cmc
pop
daa
inc
ss
imull
rcl
fstpl
lahf
push
pop
add
jp
pop
ljmp
add
xchg
loopne,pt
fistpll
mov
mov
jb
mov
std
xadd
pop
ret
adc
dec
inc
dec
cld
loope
jo
sbbb
and
shlb
test
mov
sub
push
cmp
cmpsb
stos
icebp
subb
push
add
bound
movsb
int
and
fcomps
rcll
stos
das
shrb
adc
outsl
and
mov
mov
xchg
mov
lea
je
add
into
jo
jae
lods
jl
pop
inc
arpl
and
cmp
add
dec
aam
dec
mov
or
jb
imul
lods
mov
mov
movb
push
cmp
dec
sbb
cltd
inc
nop
mov
push
inc
fxch
imul
adc
jae
lret
add
movsl
pop
sub
or
jbe
xorl
faddl
jl
jecxz
mov
jne
jbe
sti
data16
xchg
jmp
add
jb
lret
lea
mov
in
add
push
lds
repnz
push
and
int3
cmp
ds
jge
hlt
xchg
sbb
xlat
ret
outsb
add
or
jae
or
shll
jnp
xlat
pop
insl
fldenv
push
aaa
scas
cwtl
test
jb
sbb
shll
lcall
push
xor
mov
jo
and
js
insb
cmpsb
sbb
ja
test
mov
pop
loop
mov
lret
push
paddsb
add
icebp
loopne
xchg
mov
bound
xchg
push
pusha
test
dec
nop
lahf
sbb
rcr
ret
jb
mov
dec
mov
sbb
xor
dec
iret
xchg
push
mov
sub
mov
cmpsl
jnp
push
aas
xor
xorl
xor
add
jo
cwtl
xor
or
xor
jge
jge
xchg
or
sahf
sub
pop
pop
es
adc
je
outsb
cwtl
pop
inc
lahf
cmp
test
pushf
xor
subl
inc
and
ds
pop
pop
add
push
xlat
mov
cmc
sbb
sbb
and
insl
push
enter
mov
in
sbb
xor
outsb
out
push
lea
and
in
nop
jge
or
enter
jg
jne
xor
mov
add
pushf
sbb
test
pop
cmp
fs
inc
adc
push
jae
daa
mov
negb
loop
pop
sub
adc
push
dec
inc
push
mov
xchg
sbb
mul
cltd
xor
dec
enter
cs
xchg
or
into
inc
add
ljmp
sub
and
or
mov
shrl
outsb
call
pop
inc
int3
dec
nop
testl
cmp
in
fsubrs
sarl
movsl
lock
jo
hlt
arpl
popa
dec
add
lock
js
test
dec
lahf
rclb
mov
dec
add
movsb
shl
idivl
std
mov
aam
stos
in
jle
push
sbb
mov
cmpsb
sahf
mov
lea
ljmp
push
inc
fs
mov
mov
stc
pop
enter
adc
int
xchg
xor
push
push
daa
insl
mov
sub
cltd
out
adc
lret
xchg
inc
mov
mov
add
aaa
xor
daa
adc
jbe
and
je
xor
jge
test
jns
push
adc
cld
aad
cmpsl
hlt
das
shll
mov
mov
inc
insb
pop
cmc
fmul
data16
stos
inc
imul
inc
mov
loope
test
pop
aas
addb
xchg
mov
sbb
cmpsb
lea
ficoms
repz
pop
scas
mov
dec
sti
lds
xor
sbb
mov
sbb
fwait
clc
xor
push
xchg
and
clc
lcall
dec
xor
jnp
movsb
or
add
test
js
mov
gs
pop
ja
subb
aad
mov
shlb
stos
cmp
mov
sub
mov
jno
sbb
lret
out
mov
lods
sbb
jecxz
lahf
lods
mov
push
popf
sbb
mov
and
sbb
cs
cmp
dec
incb
push
scas
xchg
fstps
push
inc
add
adc
mov
stos
jae
or
pop
mov
sbb
push
rcrl
testl
enter
or
or
notl
in
sti
sbb
push
leave
lret
jle
cmp
xor
push
rcrl
mov
mov
leave
ficomps
add
je
dec
jg
add
jp
sbb
pop
hlt
lret
or
pop
data16
mov
xor
lock
test
cmc
mov
push
push
negb
xorl
pop
xchg
pop
std
or
and
or
pop
aam
adc
lods
pop
popf
or
adc
xor
mov
lret
lret
in
push
es
mov
shl
mov
int
stc
add
sub
je
lea
push
adc
imul
movsb
jle
jecxz
mov
xor
xor
stos
add
mov
mov
das
lock
jg
jmp
dec
out
cmc
mov
adc
in
inc
xchg
popa
cltd
pop
iret
push
cmp
adc
lahf
jl
pop
into
jns
pop
lahf
clc
push
xlat
inc
pop
sti
jno
push
mov
fwait
mov
call
jecxz
mov
stos
or
jl
inc
dec
out
xchg
daa
mov
add
loope
sub
gs
push
or
add
into
cmc
pop
sbb
divl
fsin
cmpsb
mov
inc
js
jmp
cmp
leave
arpl
xchg
ljmp
clc
dec
ljmp
jo
xchg
jmp
cmp
out
adc
xorb
xchg
add
pop
lods
and
cmpsb
aad
push
mov
inc
rorl
add
lods
mov
pop
add
ljmp
stc
add
mov
bound
sub
test
or
shl
shr
lahf
loope
push
and
push
cmc
repnz
push
or
mov
nop
sbb
jne
push
pop
iret
lock
push
jnp
inc
inc
pop
dec
inc
jne
xchg
rcr
sbb
lahf
jge
jg
xor
adc
in
pop
sbb
pop
and
push
jp
cmp
pop
cmp
inc
nop
xor
das
imul
ficoms
push
ljmp
rcr
sbb
clc
lods
test
cmp
push
push
push
dec
mov
loop
adc
sahf
lret
mov
push
cmpsb
or
xor
push
push
cmp
cli
sub
mov
cmp
inc
test
aam
push
jbe
xchg
xchg
or
jge
jl
add
jle
ljmp
cmp
sbb
pop
push
shll
lret
xorb
add
xor
les
enterw
int
arpl
add
or
icebp
add
mov
jge
lock
shll
mov
sbb
sub
push
cmpsb
mov
insl
mov
sbb
push
push
cltd
or
ret
xor
daa
add
sub
cld
cs
xchg
ret
lahf
pop
sbb
arpl
mov
lret
jg
fistpll
mov
fnsave
sar
ljmp
inc
lock
in
jno
subl
mov
mov
push
stos
stos
mov
mov
jl
and
fisubs
xorl
outsb
push
pushf
jbe
adc
xor
push
push
jg
imul
out
out
sbb
call
and
lea
orl
popf
das
sbb
sbb
loopne,pt
roll
mov
out
xor
dec
xchg
inc
ja
mov
push
repz
pusha
andl
into
scas
add
and
and
shl
fisttps
xor
cmp
test
inc
xor
xchg
iretw
pop
inc
jle
aad
dec
icebp
lods
sub
je
xchg
pop
mov
cmc
xchg
push
pop
mov
out
xchg
loope
cmp
in
jp
mov
mov
mov
sub
fcoml
jmp
xchg
and
jae
jmp
test
aad
lods
inc
loope
jns
mov
sub
xchg
sub
je
lods
xchg
mov
jge
jae
xorb
mov
sahf
push
clc
cmp
sbb
xchg
insl
push
addr16
addr16
xchg
aam
sub
inc
test
dec
scas
adc
dec
les
or
je
sub
in
jae
imul
mov
push
push
mov
push
jmp
outsb
notb
repnz
and
fs
sbb
sbb
or
insb
mov
enter
cmc
pusha
xorl
push
dec
and
aaa
or
cmp
stc
shll
push
adc
lahf
pop
cmp
xor
xchg
sub
loop
or
or
cmp
cmp
adc
xchg
mov
in
divl
lea
sbb
dec
add
inc
mov
pop
clc
adc
xchg
in
sbb
enter
movsl
dec
fidivrl
mov
mov
pusha
popa
ficomps
jle
mov
add
xchg
push
lahf
sub
aad
jbe
cmpsb
mov
shrb
fidivrl
sbb
push
cltd
mov
in
push
cmp
lds
or
mov
lea
loopne
cltd
xchg
jne
leave
push
inc
leave
mov
shl
test
sti
pop
cld
dec
lods
rolb
jl
fildl
xchg
mov
adc
lret
notb
sub
pop
popa
cmp
push
adc
out
fstl
jbe
imul
xchg
jb
xor
xchg
mov
les
push
push
ds
inc
pop
lret
cmpsl
int3
lds
sbb
fcompl
mov
dec
and
dec
ficomps
repnz
scas
sbb
rclb
jno
ret
pop
or
jecxz
jo
jne
adc
push
fisubrl
pop
clc
jo
mov
dec
jbe
adc
push
outsl
jb
jne
dec
cmp
iret
mov
pop
mov
stc
hlt
test
sbb
dec
out
dec
adc
mov
dec
jge
pop
pop
loop
insb
leave
inc
cmpsl
add
push
sbb
jb
push
mov
aam
subl
sub
sarl
fisubrl
adc
clc
int
daa
mull
int3
std
pop
push
icebp
js
pop
push
cmp
cmp
clc
movsb
jne
and
add
xchg
shl
dec
filds
ffree
in
shlb
sbb
mov
dec
mov
ss
jno
mov
sub
sub
jbe
fdivs
pusha
cmp
mov
jecxz
ja
leave
cmp
sarb
scas
add
pop
mov
jg
inc
loopne
mul
ret
mov
jg
lods
cmp
or
in
das
jns
int3
movsl
les
jmp
cmp
mov
movsl
lea
sub
stc
cmp
dec
jne
add
add
mov
cmpsl
je
xchg
ljmp
icebp
mov
xor
mov
fbld
out
add
js
inc
rolb
lret
repnz
inc
je
cli
std
out
and
pushf
orb
dec
mov
jl
jp
fbld
fisttps
or
sti
dec
mov
fucompp
testl
dec
mov
out
sub
or
mov
fcoml
filds
rorb
leave
xorl
aad
sbb
les
mov
push
nop
jge
frstor
fwait
mov
xor
mov
dec
and
xchg
mov
inc
cmp
mov
sbb
xlat
mov
jo
stos
arpl
gs
jp
or
or
xor
les
loopne
cmp
mov
inc
icebp
or
imul
sbb
adc
fmull
sti
insb
fwait
xchg
jns
cld
divb
pop
cmp
pop
mov
jno
addr16
pop
adc
enter
pop
cs
sub
mov
in
cmc
repnz
fcompl
fmuls
xchg
mov
push
fs
xor
mov
andb
add
test
pop
stos
or
in
sbb
xchg
leave
cmp
das
or
ja
cmp
adc
jno
adc
ja
mov
cmpsb
push
shlb
xchg
movl
dec
push
lret
mov
pop
sbb
out
add
jecxz
hlt
mov
add
repnz
nop
popl
jge
mov
stos
shll
scas
outsb
cmp
ljmp
loopne
or
push
xor
lea
lods
sub
pop
mov
leave
pop
pop
cmpsb
add
inc
sti
dec
jae
push
mov
sbbl
lcall
ljmp
dec
jae
shll
ja
inc
dec
mov
inc
ljmp
add
add
add
sbb
pop
mov
mov
sub
jne
jae
xchg
lret
jne
in
cmpb
pop
leave
mov
cmpsl
mov
adc
mov
dec
stc
cmp
pop
ret
lods
fdivp
and
mov
ret
adc
jnp
jne
test
adcb
mov
fidivrs
push
rcrb
and
dec
fidivl
mov
test
sub
mov
xlat
in
add
cli
adcb
mov
inc
xor
ljmp
adc
and
pop
call
ss
outsl
movsl
lret
mov
cmp
arpl
fmuls
dec
inc
adc
test
bswap
xchg
or
sub
je
add
notl
push
or
ljmp
aaa
mov
push
sbb
pop
ljmp
dec
ret
jle
ds
mov
filds
fimuls
std
adc
xchg
lahf
xchg
xor
pop
add
cmpsl
pop
call
fbstp
mov
sbb
pop
fs
repz
cmpsb
jo
mov
call
jmp
jecxz
sbb
xor
std
lods
movsl
scas
sbb
mov
mov
sub
or
mov
and
pop
add
fwait
jbe
mov
sbb
mov
in
cmp
push
cmp
mov
lds
jg
ret
aaa
and
lret
mov
jl
adc
cmp
lods
sahf
push
mov
daa
push
sbb
lea
mov
xchg
dec
or
jge
fldenv
jmp
repnz
sti
xor
test
mov
adc
cld
lods
adc
sahf
pop
mov
in
jae
sahf
xor
jecxz
bswap
or
push
dec
mov
sub
imulb
aad
dec
xchg
mov
pop
xor
pop
ja
rcrl
xrelease
outsb
aam
mov
push
or
ret
cmpsb
xchg
and
cmp
fwait
cltd
inc
sbb
dec
test
call
or
lea
inc
sub
aad
les
fadds
int
push
or
xchg
dec
inc
dec
aam
aaa
lret
lret
inc
test
mov
loopne
sbb
cmp
mov
sub
mov
sbb
lock
xchg
dec
int3
cmp
cmp
dec
je
mov
xor
sbb
imul
shll
mov
dec
cld
stc
or
cs
test
call
pop
mov
in
xor
int3
std
push
xor
mov
loop
insb
psadbw
mov
insb
mov
push
xchg
insl
mov
enter
push
pop
sub
xchg
mov
int
sub
mov
or
mov
andl
sahf
das
fmul
movsb
pop
int
aas
fcmovnu
pop
dec
sub
ret
add
and
xchg
jbe
sbb
fs
mov
hlt
shl
stc
ret
lahf
cmpsb
jbe
or
pop
pop
jmp
sbb
insb
insl
jns
adc
and
jge
int
fildl
add
outsl
push
jae
iret
or
rcr
filds
mov
inc
fnstenv
into
jns
mov
push
not
ret
mov
cmp
es
sbb
sbb
inc
xor
mov
xchg
push
test
mov
ret
dec
das
stc
lret
xor
mov
dec
bound
dec
add
imul
xchg
sub
iret
arpl
jp
lcall
add
mov
inc
inc
pushf
adc
jg
pop
or
jnp
xor
fsubs
js
pop
test
aas
or
and
add
lock
in
push
leave
inc
jecxz
xor
sti
fimuls
int
inc
ret
cmc
adc
test
popa
popf
test
inc
jg
in
lods
and
inc
dec
mov
xchg
adc
pusha
imul
lods
push
cli
ret
mov
pushf
loope
dec
outsb
mov
mul
bound
popa
and
pushl
aaa
pop
dec
mov
add
js
xchg
push
push
cli
push
xor
test
xor
jmp
adc
pop
mov
mov
sub
arpl
cmp
lahf
lret
cmc
xor
jb
xor
ss
in
or
or
fisubl
xor
jmp
adc
push
jnp
inc
jmp
add
mov
in
ja
fidivs
ds
jo
in
fcmovnbe
pushf
lods
mov
sbb
lret
daa
repnz
outsl
test
popf
xchg
test
inc
insl
ret
mov
fwait
cmc
jecxz
xor
ret
rorl
mov
or
out
orl
and
dec
jl
jp
sub
mov
std
gs
das
add
aam
cs
and
js
ret
inc
xlat
pushf
movsb
xor
dec
je
mov
jns
pop
shrl
lock
jl
out
cmpsl
or
mov
shl
jmp
sbb
cmp
xor
cmc
jb
jbe
or
enter
lcall
pop
imulb
sbb
iret
bound
daa
sub
popf
test
and
mov
out
sbbl
and
mov
movsl
add
subb
movsl
mov
pop
gs
cmpsb
fisubrs
sbb
dec
lods
test
xor
into
push
mov
lods
imul
jnp
outsb
push
sub
out
and
add
xchg
inc
dec
cmc
aad
cmp
dec
add
jecxz
and
pop
dec
pop
andb
cmp
push
jmp
repnz
mov
pop
dec
jno
aad
xor
mov
in
mov
xchg
icebp
sti
ret
jp
mov
adc
jnp
or
adc
sub
adc
mov
dec
jl
cmp
pop
std
aam
or
mov
pushf
mov
insl
sbb
fnstcw
sbb
jp
adc
movsb
mov
mov
std
mov
faddl
add
aad
mov
je
jle
lds
mov
or
cwtl
ljmp
xchg
ljmp
lcall
ljmp
jle
xor
test
mov
scas
repz
xchg
pop
imul
fstpl
mov
enter
movsl
add
sub
fwait
xchg
push
sub
shll
or
jg
cli
lds
sub
rcr
rcll
mov
jae
jae
jne
in
mov
cmp
pop
and
adc
cmp
jl
mov
adc
dec
push
push
out
inc
mov
inc
add
lret
add
pop
mov
jb
repz
pop
jae
adc
jge
cs
pop
jo
jmp
sbb
dec
pusha
sub
cmp
mov
mov
xchg
and
fdivrs
cmp
sahf
cmp
ja
mov
stos
or
movl
insl
push
push
shl
push
and
sub
sub
imul
add
xchg
mov
jnp
or
insb
xchg
test
aad
cmp
dec
test
xor
cwtl
cmpsl
mov
adc
push
je
popf
rol
sahf
xchg
xchg
sub
mov
fmuls
add
jns
inc
add
mov
sbb
insb
and
adc
and
and
nop
aad
jne
ss
dec
dec
push
mov
mov
frstor
or
rorb
aaa
mov
sbb
mov
cmp
xor
or
addr16
je
ljmp
pop
jo
push
push
jnp
leave
pop
jl
add
dec
push
and
and
xor
pop
cli
and
push
in
pushl
daa
inc
or
inc
xchg
mov
or
dec
outsl
clc
jne
sub
lea
cmc
cmpsb
ret
cltd
dec
ja
sbb
mov
loope
int
inc
adcl
aas
call
int3
push
mov
mov
lods
adc
into
cmpsb
push
testb
push
xchg
shll
push
mov
inc
mov
outsl
sub
push
push
nop
fnstenv
pop
jecxz
mov
popf
mov
adc
pop
out
scas
and
mov
mov
xchg
cmp
inc
mov
nop
mov
das
enter
adc
xchg
sbb
cwtl
xlat
cltd
lea
orb
outsb
or
jmp
leave
adc
and
or
movsb
scas
jnp
push
cmp
js
jmp
ja
xchg
ficoms
sub
outsl
adc
lock
lret
les
in
out
cmp
pop
stos
mov
push
in
ss
jbe
adc
inc
jbe
xor
cmp
lock
jmp
icebp
lahf
and
adc
divl
std
cmc
clc
pop
jbe
loope
test
outsl
cmp
push
push
std
out
jne
fs
out
out
pop
add
jecxz
shrb
sti
or
mov
cmp
mov
mov
testl
dec
mov
jns
test
mov
and
sahf
stos
pop
sbb
mov
pop
out
les
jb
or
xchg
and
scas
popa
cltd
test
adc
scas
xor
scas
addr16
inc
jns
mov
int
or
imul
pop
jo
jle
inc
fs
arpl
imul
in
arpl
jnp
xor
es
xchg
add
or
jbe
adc
add
sbb
sbb
jbe
rclb
and
jb
or
xchg
or
loopne
ljmp
stos
lds
mov
ds
jne
push
and
adc
sub
xchg
xchg
sbb
loope
jl
je
sbb
into
mov
test
mov
add
fstl
jo
xchg
and
jmp
movsl
arpl
es
sbb
inc
hlt
dec
fnsave
lods
push
pop
testl
and
mov
testb
movsl
test
push
dec
es
int
add
jge
jno
sbb
in
cmp
inc
loop
push
push
adc
mov
mov
xor
outsb
fwait
arpl
dec
push
pop
push
out
scas
mov
and
mov
cld
leave
into
push
imul
stc
movsb
nop
loopne
aad
or
add
add
xchg
ljmp
aad
add
pusha
and
popa
xor
mov
sbb
rep
dec
in
adc
das
xchg
push
xchg
dec
xor
cmc
aam
fdivrp
xor
push
lods
repnz
cli
fdivrs
rclb
add
ds
fisttpll
sbb
inc
adc
shll
push
and
or
mov
mov
dec
stc
ss
loope
icebp
cmp
jg
iret
mov
mov
push
out
fidivs
push
fnstenv
add
std
jnp
xchg
push
popf
lret
shlb
fisttps
pop
pop
ljmp
out
pop
cld
ror
or
push
dec
std
movsl
push
sbb
mov
negb
nop
sarl
fcoms
ljmp
pusha
orb
add
xor
push
aaa
dec
sarl
push
dec
xchg
arpl
and
fwait
pop
jle
push
jmp
scas
rcl
lods
push
outsl
add
popf
sarl
mov
pop
clc
push
mov
sbb
filds
mov
arpl
shll
gs
cmp
pop
xor
enter
out
les
pop
push
jo
imul
or
inc
mov
dec
mov
mov
cmp
pop
or
fdivrs
fbstp
inc
stos
sahf
pop
or
mov
jne
mov
shlb
xchg
aad
jne
pop
aas
and
add
push
cld
nop
sub
mov
into
and
xchg
leave
push
outsb
jb
jbe
movsb
fimuls
xchg
sub
sub
mov
add
and
dec
xchg
lret
in
cmp
dec
arpl
mov
and
xor
push
fnstcw
arpl
jmp
mov
pop
sarb
lea
ret
inc
in
sub
sub
stos
aad
bound
mov
xchg
inc
cmpsl
and
pop
data16
fimull
inc
cmpsb
xchg
rdtsc
repnz
ficompl
negl
or
mov
std
mov
cmc
xor
sub
xor
xor
enter
sbb
lods
dec
cmp
test
addr16
js
push
mov
or
mov
ja
lcall
jmp
and
addr16
mov
cltd
xor
mov
adc
es
dec
sahf
xchg
pushw
int
aas
pop
push
push
sti
ror
sahf
and
inc
frstor
sbb
ficoms
call
lock
jo
xchg
sbb
rolb
mov
pop
in
js
xchg
cld
push
int
mov
cld
dec
lea
sub
pop
push
ja
lcall
cmpsb
ss
lcall
add
mov
shll
pop
sbb
loope
ret
cmc
in
sti
aad
scas
jmp
push
clc
dec
cmpsl
pop
orb
out
ds
or
stc
jbe
xchg
pop
jle
pop
dec
sarb
mov
cmp
repnz
cli
and
adc
addl
push
aad
mov
mov
dec
sbb
icebp
mov
mov
jno
adc
dec
or
sti
inc
cmpsl
pop
mov
or
repz
scas
out
in
fldenv
push
repnz
add
shlb
movsl
dec
orl
fstl
scas
sub
sbb
cs
inc
or
ja
sbb
lods
outsl
dec
mov
and
cwtl
pop
adc
into
lcall
in
shrl
jmp
dec
jbe
jo
test
jl
jno
daa
fdivrs
mov
test
daa
icebp
mov
mov
imul
mov
dec
cmpsl
loopne
in
push
pop
andl
dec
jns
lcall
pop
and
mov
fiadds
push
lock
push
xchg
in
inc
enter
shll
mov
int3
arpl
shrb
xor
enter
stc
lret
sbb
pusha
in
mov
add
xor
pop
add
icebp
jmp
orb
into
add
ret
fs
add
lcall
mov
sarb
inc
std
adc
push
test
xchg
sub
ja
test
insb
jnp
clc
pop
push
pop
pop
popf
or
dec
adc
ficoml
sbb
mov
sahf
mov
das
jl
inc
loope
push
popf
mov
outsb
pop
flds
pop
jo
add
push
fdiv
add
adc
int
adc
shll
in
cmp
test
jecxz
sub
insb
in
fistpll
outsb
loopne
lods
inc
stos
mov
mov
xor
aad
ror
pop
sbb
lret
mov
shld
imul
jns
out
adc
ljmp
mov
out
ret
lods
mov
inc
sbb
ljmp
aaa
enter
pop
xchg
pop
inc
sbb
out
pop
in
out
adc
cli
popa
mov
call
ds
jg
je
popa
insb
xchg
incl
push
repz
test
shlb
imul
int3
and
sahf
out
fnstenv
sbb
shlb
stos
adc
pop
push
sbb
loop
jb
jbe
mov
ljmp
jb
jns
and
add
xchg
mov
pop
lret
dec
dec
push
or
fisubrl
jb
div
push
frstor
incl
xlat
imul
data16
mov
fcomps
mov
cmpsl
shll
pusha
jno
ficompl
xchg
js
icebp
cmp
jno
mov
xlat
xor
icebp
ljmp
sub
fwait
push
and
aad
sbb
dec
add
jmp
mov
call
push
mov
jge
pop
cwtl
inc
ljmp
pop
adc
jg
xor
dec
ljmp
cmp
pop
push
in
jno
adc
mov
lock
loope
nop
push
test
ds
out
sbb
xchg
mov
in
ljmp
pushf
ds
jo
std
int3
mov
adc
ret
xlat
jmp
sub
ss
aam
stos
lock
sbb
xlat
insl
jmp
add
mov
xchg
call
lahf
daa
fs
and
sub
sbb
iret
fistpl
imul
inc
add
addr16
jno
jmp
mov
sbb
sbb
stos
add
insb
int3
in
mov
jp
scas
cmpsl
cmpsb
xlat
cmc
pop
or
push
push
push
push
gs
inc
lret
xor
mov
mulb
fsts
sahf
fildll
bound
cmp
fsubl
push
fwait
sub
pop
mov
bound
jo
test
inc
push
push
aam
das
loope
push
mov
push
aaa
popa
jno
fbld
lret
mov
lret
add
gs
dec
adc
call
sub
sbb
test
pop
leave
add
int3
jno
aad
xor
adc
inc
xor
sti
ds
mov
imul
cmp
push
sbb
xor
loope
mov
call
loopne
imul
jnp
sahf
add
sub
pop
xlat
mov
icebp
sub
cmp
mov
add
sub
mov
cmpsb
pop
xchg
outsb
xchg
dec
mov
in
jge
mov
out
push
add
cmp
push
bound
jp
fsubl
popa
push
and
cmp
pop
mov
pop
pop
pusha
and
sahf
fiaddl
add
outsb
or
pop
mov
cwtl
scas
nop
mov
jns
rclb
mov
add
push
std
push
mov
loope
push
sbb
push
into
mov
xchg
outsl
stos
call
inc
cld
aas
fnstsw
mov
jne
cld
and
xchg
dec
pop
daa
ja
cli
sbb
sbb
push
movsl
xchg
movsb
test
ret
inc
pop
xor
shr
xchg
lock
mull
sub
sti
test
lcall
xor
xor
outsb
lods
mov
or
std
mov
mov
adc
jl
loopne
xor
leave
pop
mov
jecxz
outsl
cld
dec
jae
xchg
imul
lock
div
mov
jb
push
mov
mov
inc
pop
jle
testl
mov
xor
jecxz
cmp
stc
nop
jo
out
dec
jbe
dec
divb
add
or
mov
clc
push
lods
sbb
lahf
aas
mov
les
add
fldenv
fs
je
sub
inc
outsl
imul
mov
xchg
aam
negb
jecxz
js
xor
sub
xchg
scas
popa
jae
mov
jo
adcl
or
xchg
cs
sti
mov
pop
push
mov
int3
pushf
and
sub
shll
or
pop
adc
mov
cmp
scas
mov
shlb
repnz
int3
dec
push
rcrl
mov
and
shll
and
mov
inc
incb
mov
fmull
push
jp
mov
and
jecxz
jge
jo
add
test
cmp
fxch
ljmp
sti
xchg
pop
dec
cmpsl
mov
inc
insl
lret
pop
loopne
scas
dec
int
rcrb
mov
dec
data16
and
fisubs
mov
popa
mov
xchg
and
scas
movsl
pop
push
shlb
mov
cs
dec
xorl
push
adc
push
mov
adc
mov
adc
fs
jo
pop
xchg
incl
xor
dec
das
test
or
add
loope
mov
outsb
xor
lea
xor
mov
popf
adc
mov
jne
inc
jnp
pop
jb
pop
enter
mov
imulb
jo
mov
inc
xor
push
mov
adc
jle
mov
xlat
outsl
imul
lods
stos
and
out
imul
sahf
ret
in
mov
loope
ss
mov
cmp
repnz
scas
mov
mov
out
lcall
movsl
xchg
push
incb
inc
inc
sub
adc
sbb
negl
data16
xchg
and
rcrb
sub
and
pop
mov
jbe
stc
push
insb
mov
aas
repnz
cli
inc
jecxz
aad
stos
adc
in
sbb
je
cli
ja
mov
int3
xor
lock
xchg
in
subl
xor
push
xor
stc
mov
xorl
pop
dec
adc
cmpsb
xor
adc
inc
xchg
cmc
arpl
xor
jnp
dec
add
xor
mov
test
adc
test
sub
pop
std
in
lret
cmpb
ret
sbb
adc
and
cmp
lods
mov
add
sbb
adc
outsl
adc
in
stc
popf
xchg
gs
fnstenv
push
ljmp
inc
leave
pop
xchg
adc
ret
scas
and
into
or
popa
gs
adc
dec
shlb
lcall
xor
mov
loope
loop
repnz
mov
pop
xlat
mov
loop
lret
test
loope
xchg
or
jno
out
pop
mov
shlb
cmp
mov
lea
iret
mov
mov
mov
ret
adc
ljmp
sub
mov
lods
lea
cs
adc
add
sbb
outsl
fdivp
iret
dec
js
les
mov
loop
sbb
mov
int3
roll
pop
mov
push
and
and
iret
or
imul
inc
mov
inc
add
sahf
xor
push
aad
mov
mov
sub
call
mov
rep
scas
xchg
cmc
int
add
jl
cltd
dec
leave
enter
pop
in
jl
push
test
sahf
add
outsl
pusha
mov
je
out
jecxz
pusha
aas
fisttps
fidivrs
icebp
mov
mov
or
out
sbb
divb
movsb
test
sbb
adc
mov
and
into
aam
hlt
insb
ret
out
sbb
into
dec
notl
hlt
mov
xchg
imul
aad
jg
stos
ds
add
cmp
inc
mov
xor
popf
ljmp
out
or
xchg
jecxz
dec
xor
adc
sub
push
cwtl
push
dec
daa
cmc
inc
scas
jns
adc
sub
fimuls
pop
push
jbe
popf
shrl
shll
inc
cmp
stos
pushf
dec
lret
add
in
dec
das
pop
sbb
mov
arpl
sbb
push
mov
push
sub
loop
ljmp
cwtl
inc
in
jo
add
test
inc
movsb
test
cmpsl
mov
xchg
mov
inc
insb
repz
add
xor
clc
jae
dec
popa
fwait
nop
push
and
cwtl
cmp
jne
jnp
aad
dec
enter
testl
mov
jecxz
jo
popa
cs
xor
sub
cmp
mov
movsb
cmpsb
mov
outsb
sbb
or
cwtl
mov
mov
ljmp
rcll
ficoms
inc
xor
sahf
sub
out
dec
jge
arpl
sub
mov
xor
mov
lahf
mov
aad
and
sahf
loop
out
pop
rcrl
lret
jp
dec
dec
xchg
adc
mov
inc
cli
into
sbb
add
jmp
xchg
push
xchg
push
mov
outsl
fnstsw
pushf
int3
mov
push
imul
stc
and
fsubr
into
popa
ficompl
loopne
adc
mov
jecxz
mov
test
or
sbbb
dec
push
push
pop
cwtl
rolb
inc
icebp
mov
imul
pop
lret
mov
out
pop
enter
sahf
fs
sub
xorb
push
cmpsb
mov
lods
push
mov
pop
push
test
jmp
xchg
lret
inc
cmp
loopne
cmp
mov
roll
xor
loope
sti
sub
orb
addb
sahf
mov
stc
cmpsl
das
dec
pop
and
test
inc
pushf
inc
lds
push
out
test
out
loop
xchg
sub
pop
cmc
es
fnstsw
jl
inc
jns
outsb
add
dec
sub
xor
jns
dec
rcll
mov
hlt
sti
fsts
mov
dec
cmp
insl
ds
fcomps
inc
pop
pop
adc
cmpsb
imul
insl
mov
popa
inc
mov
mov
inc
nop
push
les
lret
icebp
loopne
stc
add
daa
movsl
xchg
xor
shll
dec
dec
sub
fsubrs
popf
cli
addl
inc
xchg
sahf
fdivp
push
dec
xchg
dec
out
adc
dec
out
int
inc
mov
and
mov
mov
lock
negb
cmpsl
outsb
mov
shll
inc
loop
xlat
and
arpl
call
dec
xchg
bound
repz
inc
adc
mov
sbb
sub
cli
push
std
pop
iret
sti
lea
movsb
fsubrs
sub
imul
dec
mov
shlb
ret
hlt
lock
jge,pt
dec
mov
lock
rorl
push
lds
xor
rcl
lock
dec
out
shlb
pusha
cmp
in
and
lret
cmp
sbb
sbb
mov
cmp
jbe
pop
shlb
xlat
in
mov
std
mov
imul
pushf
sbb
dec
int3
cmp
inc
aas
psraw
bound
sarb
pop
mov
scas
das
loop
ds
movsl
xchg
sbb
pop
pop
mov
or
insl
call
sbb
mov
jecxz
int3
dec
inc
loopne
adcl
cmp
or
pop
sbb
dec
inc
push
xor
in
pushf
icebp
setge
mov
sbb
out
adc
pop
dec
fwait
pop
inc
fcomip
dec
aam
sub
xchg
jle
andb
lods
jo
pop
and
fnsave
add
pop
lds
pop
jae
iret
sub
mov
js
lret
xchg
push
cld
ficomps
movsb
push
cli
insl
jo
add
push
lea
lods
test
jge
ljmp
jns
jl
icebp
cwtl
or
and
lea
adc
lret
mov
inc
fisubrs
fs
or
dec
mov
dec
outsb
push
rolb
outsl
sbb
cli
aas
cmpsb
jecxz
int
std
mov
hlt
xor
xor
mov
dec
out
mov
fisubrs
pop
idivb
or
sub
xor
jnp
cli
xor
jns
mov
and
pushf
fdivrp
adc
mov
subl
pop
scas
mov
mov
clc
fisttpl
ret
enter
aas
xorl
add
cli
fdiv
dec
mov
mov
outsb
out
fsubrl
in
repz
lea
mov
push
push
or
ja
inc
xor
pushf
push
loope
sbb
jbe
negl
pushf
xchg
leave
pusha
or
pop
jns
movsb
xor
push
push
mov
bound
mov
jmp
loopne
and
lahf
int3
xchg
lcall
insb
stos
stos
jmp
add
in
mov
pop
in
shll
testb
pop
xlat
mov
jmp
ficompl
ss
adc
sub
push
loope
lret
cmp
fdivrp
mov
sbbl
in
push
test
mov
aam
cli
add
in
lock
push
adc
lcall
lret
dec
loope
leave
mov
pop
xchg
add
sub
icebp
mov
sahf
adc
pop
lcall
inc
dec
mov
sub
pop
lret
mov
mov
addr16
mov
jle
inc
inc
jg
iret
mov
mov
lea
cmp
mov
push
jnp
mov
xor
and
movsl
add
shll
sub
lds
std
out
enter
mov
cli
jecxz
mov
popa
insb
sti
cmp
sbb
out
mov
pop
ss
xchg
addr16
jo
mov
insl
cld
outsl
mov
sub
mov
adc
jb
xchg
and
add
mov
jecxz
add
jle
cmp
mov
jmp
ficoml
lahf
jmp
test
sub
int3
push
cs
mov
push
dec
add
or
loop
cmc
and
dec
clc
or
shll
xchg
outsb
test
movsl
std
popf
sub
test
imul
movl
bound
pop
lea
loopne
mov
push
jmp
fsubs
aaa
adc
xchg
adcl
mov
data16
outsl
sahf
pop
jge
push
or
xchg
xor
movsb
sbb
das
sbb
or
mov
rcr
mov
push
push
adc
out
cmpsl
or
test
imul
cmc
inc
ret
gs
arpl
mov
sbb
test
and
push
xlat
adc
inc
add
stc
lds
push
ds
xchg
test
cld
insl
sub
clc
add
xchg
in
out
flds
sarl
dec
andb
and
aam
mov
cli
or
outsl
jecxz
sti
fdivl
or
out
adc
loopne
nop
int3
enter
pusha
int
cmp
mov
movsb
in
test
adc
xor
sub
mov
inc
sub
and
loope
js
inc
lret
and
push
dec
loope
mov
mov
adc
dec
mov
pop
dec
test
lds
scas
jecxz
shl
cmpsb
push
scas
sub
hlt
xorb
into
imul
xor
ljmp
inc
push
test
pop
fidivs
pop
lds
loope
mov
test
sahf
in
xchg
push
sbb
test
jns
pop
addb
jae
or
sti
push
jo
mov
and
test
stos
pop
cmp
repz
fldl
pop
outsb
hlt
mov
and
cmp
mov
push
cltd
push
pop
xchg
push
mov
cmpsl
rcr
xor
sti
outsb
lahf
push
les
and
cmp
xor
xchg
fstps
aas
cmpb
xor
pop
mov
push
xor
xor
dec
lret
mov
mov
inc
lahf
adc
mov
lea
sbb
cs
adc
xchg
data16
clc
ljmp
jns
aam
cmpb
arpl
xor
outsb
mov
cwtl
pop
adc
jbe
fisubl
sbb
fstpt
xor
call
xor
or
xchg
cmp
cli
jo
lahf
jo
mov
sub
fistps
adc
sbb
or
inc
push
lret
sub
add
sbb
push
mov
cs
xchg
js
sub
push
mov
sub
sti
jns
cwtl
xor
adc
and
add
ror
loope
adc
cmc
into
out
mov
out
sub
dec
adc
cmp
mov
lahf
pop
cmp
shl
lods
sbbl
bound
dec
fsubrs
pop
in
dec
mov
and
cs
enter
jae
daa
adc
movsl
fnstsw
fnstsw
add
loop
lret
loop
shr
bnd
jo
popa
out
mov
push
dec
out
icebp
sbb
hlt
xor
leave
nop
jno
scas
jmp
ljmp
incb
pop
mov
mov
or
out
fcmovb
gs
daa
inc
pop
mov
dec
pop
clc
inc
ror
mov
jmp
xchg
mov
adc
movsb
push
lock
rcrl
jmp
loope
cli
pop
sbb
call
js
in
scas
addr16
aaa
cmp
xorl
cmp
push
xchg
mov
jae
jo
mov
test
out
lods
out
imul
dec
fmul
jo
adc
lret
fdivr
push
lods
imul
xor
icebp
push
andb
lea
inc
and
cld
shld
push
sub
fists
xchg
adc
mov
popf
mov
popf
jmp
cmp
out
inc
inc
rcrl
sti
das
xchg
adc
sbb
sub
push
xor
cmpb
push
das
dec
cmpl
xlat
jp
pop
jno
shll
sbb
lret
int3
fists
iret
cmpl
xchg
sbb
stos
decb
push
sub
je
sbb
pop
ds
inc
clc
cmp
push
std
jbe
push
inc
mov
push
in
mov
aam
cs
test
or
add
popa
lahf
mov
call
outsl
push
lcall
push
or
lahf
loope
push
loopne
and
je
arpl
shrb
jecxz
rolb
mov
mov
add
int
loop
shl
and
imul
lret
inc
xlat
or
outsb
insb
or
shlb
inc
xor
in
xor
pop
popf
daa
out
rolb
sahf
outsl
xchg
idivb
popl
pop
and
stos
add
xchg
fwait
jbe
or
push
mov
jnp
lcall
pop
sub
jae
punpcklbw
push
sub
xchg
push
std
out
dec
rorl
push
stos
fcom
xchg
addr16
xor
mov
mov
jg
sbb
data16
sub
xor
push
mov
xor
gs
jns
fdiv
dec
xor
dec
or
call
inc
sbb
dec
and
mov
jecxz
jnp
das
or
adc
xor
dec
mov
rcl
pop
cmp
mov
cld
push
sub
fadds
mov
fs
rcll
xchg
lcall
in
stos
and
pusha
repz
cmpsb
jnp
aaa
ds
push
andb
pop
sbb
inc
adc
ja
cmpsl
insl
aas
rclb
inc
sbb
xor
mov
ds
jmp
push
inc
lahf
or
sub
roll
adc
lock
call
divb
push
xor
loopne
stc
dec
cmp
add
mov
dec
jns
imul
and
xor
dec
xor
fcoms
or
push
repz
js
out
lods
out
and
mul
and
nop
lcall
test
cmc
mov
into
push
dec
fcomi
push
test
and
push
push
xlat
dec
cwtl
xchg
in
and
mov
jecxz
dec
in
jbe
push
into
scas
sub
int3
cmpsb
mov
inc
cmp
js
mov
push
jg
and
dec
jmp
add
cmp
iret
inc
or
mov
jecxz
cmp
mov
aam
idivl
cwtl
dec
popa
inc
xchg
cmp
adc
iret
push
mov
push
xor
in
insb
xor
or
jl
fnstsw
mov
mov
mov
pop
mov
jmp
inc
pop
lods
adc
leave
stos
inc
repz
out
xchg
jno
in
xchg
test
stos
lock
out
fs
pop
or
cmp
orl
lret
les
or
les
xor
or
lds
jno
sub
sbb
lods
add
jge
push
mov
pop
xor
adc
and
cld
adc
xor
add
into
adc
sub
pop
clc
dec
sub
xchg
repz
and
xlat
cli
inc
sbb
mov
sbb
out
aad
cwtl
lea
imul
enter
xchg
sbb
push
out
push
in
jl
ds
movsb
nop
dec
xor
mov
popf
cmp
out
out
pop
or
ljmp
sahf
pushf
fistl
mov
jae
xor
outsb
cld
int3
jnp
xor
js
lahf
sti
ds
cmp
dec
inc
sbb
loope
mov
adc
sub
cltd
shl
cmc
pop
xchg
jg
sbb
scas
test
sub
cmp
pop
add
xor
pop
mov
pop
sbb
adc
sbb
dec
cmp
jge
xchg
dec
dec
xor
add
push
scas
inc
mov
sbb
std
scas
rcrb
push
cld
sbb
lahf
imul
in
mov
dec
mov
xchg
push
out
xlat
in
test
cli
repz
push
stos
mov
mov
push
adc
xor
aas
push
daa
in
xor
cmp
mov
xchg
enter
sub
aam
stos
or
shll
sahf
jns
dec
sub
loope
test
jbe
mov
xchg
cmp
mov
call
xor
push
sti
sahf
cmp
shlb
cltd
adc
lret
mov
sbb
or
iret
aaa
xlat
mov
aam
xchg
xor
lea
jp
xor
mov
cld
xchg
ss
mov
arpl
jne
push
insl
xchg
enter
xor
cmp
mov
or
add
lods
lcall
push
mov
jno
les
adc
pop
out
mov
wrmsr
dec
mov
xor
mov
ljmp
sbb
jae
dec
dec
loopne
push
mov
mov
stos
sub
push
daa
pop
xor
mov
mov
push
xchg
adc
test
les
dec
mov
jb
pop
adc
dec
mov
sub
fcompl
addr16
sbb
xchg
popf
mov
test
aad
add
push
js
xchg
fiadds
outsl
testb
push
jb
xchg
sub
push
mov
jmp
out
shl
pushf
lds
inc
mov
pop
andnps
idivl
mov
es
cmp
cmc
sub
jbe
dec
mov
fisttpll
pop
pop
sti
cmp
xor
cmp
xchg
or
call
aam
leave
mov
pop
cmp
out
repnz
ss
rcll
scas
xor
push
cmp
sub
std
pop
dec
and
push
or
std
push
hlt
inc
mov
inc
pusha
inc
cmpsb
adc
loopne
sub
dec
and
xchg
sbb
addr16
and
adc
push
and
add
fistl
orl
add
pop
cmpsb
pop
sub
or
ficompl
call
inc
add
mov
je
test
ds
mov
ret
xchg
out
mov
fisttps
push
sar
mov
rorb
push
ret
cmp
out
sarl
inc
test
out
dec
and
and
mov
pop
dec
or
jg
sbb
lods
sub
or
stc
inc
push
rcr
addr16
push
dec
adc
mov
push
sbbb
not
mov
push
mov
cmp
mov
and
movsb
or
lock
sarl
sti
fmull
insl
cmpsb
fidivrl
mov
mov
sub
testb
popa
jg
xchg
cmp
cltd
xor
push
cwtl
cmpsb
lret
inc
fstl
or
aas
stc
aaa
mov
aaa
clc
cmp
outsb
add
cwtl
xchg
adc
imul
stos
push
pop
cmpsb
subb
add
xchg
sub
outsl
mov
cmp
pop
repz
bt
mov
and
push
lea
pop
dec
ficompl
cli
loope
sub
cmpsb
flds
jmp
push
aaa
sub
mov
cmp
cmpsb
xchg
std
es
xor
mov
mov
fs
inc
jae
mov
push
cmp
insl
movl
dec
mov
scas
mov
scas
sub
cmp
es
pop
and
inc
pop
push
or
sahf
and
push
cs
int3
jnp
push
lret
pop
ljmp
add
ffree
dec
dec
roll
addl
stos
jecxz
rcl
out
ja
les
sti
xor
pop
push
add
std
es
add
out
mov
loopne
cmc
out
out
jno
fldl
sahf
repz
jge
sbb
add
repz
loopne
idivl
shrl
bound
call
mov
push
call
mov
mov
packuswb
sti
sti
std
dec
sub
test
cmp
mov
sub
sub
add
movsb
lcall
cmpsb
sbb
fsts
cmc
scas
dec
imul
jp
nop
and
fadds
jg
test
pop
in
lods
repz
inc
xor
hlt
ret
outsl
popa
cmp
adc
shlb
std
enter
lret
mov
push
rcrb
ds
inc
sub
into
jnp
xor
arpl
push
test
adc
xchg
and
xchg
push
push
jecxz
inc
pop
xchg
push
jnp
xchg
xchg
xor
push
and
inc
or
out
pavgw
mov
push
and
mov
pop
stos
dec
xchg
ret
test
arpl
push
fnsave
and
inc
sti
ror
xor
sub
jl
and
jbe
std
bound
ficoms
ds
test
xor
mov
andb
nop
adc
shlb
inc
outsl
mov
fwait
in
and
ret
cmp
pusha
xchg
aad
and
or
mov
push
cmp
test
pop
push
add
add
sub
hlt
mov
cld
pushf
aad
mov
xchg
inc
sub
mov
jmp
inc
or
cmc
dec
cmp
fstps
pop
mov
cwtl
stc
xchg
cmp
call
push
fsts
rcrb
ficomps
push
fmul
jl
pop
les
pop
lock
fcom
pop
inc
sbb
fwait
sub
call
repnz
push
inc
in
jno
aas
pop
mov
xchg
icebp
lods
shl
movsb
sub
push
pop
div
mov
flds
push
fldl
xchg
mov
fwait
aaa
rcr
mov
xchg
adc
scas
in
enter
shl
push
or
xor
mov
mov
ds
scas
sarl
outsl
xchg
mov
inc
into
push
mov
sbb
pop
or
popa
pop
lret
or
bnd
push
or
stos
int
ret
mov
movsl
mov
repz
cmp
jecxz
lret
push
out
and
xchg
or
aam
pop
and
clc
out
icebp
mov
lea
int
arpl
jmp
xchg
xchg
loope
ret
imul
jbe
push
popw
test
stc
xor
mov
sahf
into
iret
sahf
fdivr
lea
push
orb
jmp
movsl
stos
mov
js
je
rol
enter
adc
enter
movsb
rcr
ret
pusha
out
sub
int3
iret
push
push
jae
inc
add
cmp
cs
xchg
fcmovnbe
lock
cmpsl
rclb
fnstenv
xor
enter
stc
insl
pop
shll
lahf
movsb
jno
lahf
or
xchg
jnp
nop
gs
mov
pushf
jge
rclb
xchg
sbb
push
bound
in
xchg
lea
inc
jbe
dec
addr16
push
dec
mov
inc
xor
sbb
add
xlat
xor
fnstsw
loope
stos
insl
push
loope
sbb
je
mov
xlat
xchg
push
lods
push
mov
lret
lods
bound
add
jo
lcall
cli
inc
int3
mov
cmp
pop
test
enter
add
call
movsb
push
adc
rcrl
lods
xchg
or
sub
sub
or
mov
mov
pop
in
out
mov
jnp
cmpsl
pop
lea
sbb
pop
sub
adc
adc
fistpll
pop
sbb
aam
das
aaa
push
jmp
pop
dec
es
stos
shll
adc
outsb
scas
test
jbe
cmp
int3
ljmp
rorb
cmpl
jle
mov
cltd
mov
std
inc
xor
out
dec
inc
mov
add
jecxz
std
rcr
test
cmp
mov
xchg
add
sub
cli
sub
adc
mov
enter
dec
lcall
mov
inc
sub
sti
out
xor
push
add
std
out
xor
mov
aad
mov
test
or
jae
push
sbb
mov
insb
mov
subb
stos
in
jl
dec
sub
sti
daa
fistps
fucomp
test
and
lods
sbb
mov
adc
inc
cmp
or
mov
sbb
push
stos
mov
dec
outsb
stos
mov
xor
pop
cwtl
imul
jns
jb
scas
push
add
dec
mov
mov
dec
decl
cld
lret
dec
xor
dec
dec
or
out
mov
push
data16
fwait
roll
fmuls
ds
fsincos
je
fwait
mov
mov
and
data16
push
mov
std
movsb
flds
push
cmp
xchg
roll
aas
les
mov
pusha
hlt
dec
xchg
ljmp
ss
jae
xchg
jecxz
adc
and
out
xor
out
fdivr
clc
add
mov
inc
inc
push
adc
and
or
loopne
inc
cmpsb
inc
push
loop,pn
sbb
xchg
ror
or
test
xchg
bound
add
cltd
mov
into
push
pop
mov
int3
or
mov
xchg
fwait
adc
and
dec
push
add
cmp
cmc
subl
xor
mov
daa
pop
jno
inc
aas
orl
movb
and
push
sub
div
mov
lea
cmpsl
sti
test
xor
xchg
mov
mov
into
pop
je
lret
pop
test
mov
mov
mov
iretw
stos
fwait
shlb
mov
adc
adc
mov
arpl
dec
fmuls
sbb
divl
push
xchg
fs
cmc
mov
sahf
fidivl
lods
fs
les
jmp
inc
push
fwait
loop
push
add
stc
jae
addr16
stos
xor
add
jecxz
mov
outsl
fucomp
stos
daa
mov
das
pop
leave
sti
incl
in
stc
mov
sbb
or
sub
imul
jmpw
inc
clc
aas
and
jae
pop
sar
xlat
jne
xchg
push
add
sbb
adc
int3
repz
or
dec
ja
mov
mov
cmc
rorl
push
fisttpll
inc
cmpsb
xlat
xchg
cs
gs
add
pop
and
xor
mov
adc
ss
les
movb
dec
clc
mov
sub
cmpsl
dec
int3
out
sbb
cmp
xor
add
mov
inc
mov
fiaddl
dec
dec
loope
stos
sbb
rorb
sub
xchg
xlat
mov
fidivrl
stc
aas
ljmp
fcom
movsl
out
jns
ljmp
arpl
and
push
or
mov
leave
dec
xor
sahf
mov
inc
push
aaa
in
and
jp
sub
jnp
cwtl
sub
ret
sub
lock
inc
push
and
and
std
cmp
mov
and
xchg
daa
leave
add
mov
xchg
sbb
mov
aam
inc
xor
sub
ss
and
sbb
shl
sub
sbb
mov
cmpsb
rolb
jg
mov
lds
and
lods
lock
add
ret
xor
push
jne
pop
jle
fimuls
mov
jno
push
mov
test
loop
mov
cs
dec
aam
imul
jecxz
push
out
or
jbe
jno
fdivs
into
mov
mov
sub
push
cmp
jmp
fnstcw
mov
push
ss
dec
push
mov
into
inc
xchg
rclb
mov
sbb
rcll
divb
les
fistps
out
xchg
mov
push
sbb
aad
lods
lea
aad
stos
inc
cmp
and
sbb
lock
jne
adc
rolb
pop
andb
jmp
xchg
xor
and
push
stos
xchg
push
cmp
dec
rorb
push
cmpsl
cmp
test
cs
out
cmp
lds
lret
into
je
arpl
dec
adc
scas
pop
sbb
cmp
xchg
ret
cmp
ret
cmc
cmc
aas
cmp
pop
dec
push
jnp
and
dec
mov
jbe
cmp
mov
movsl
in
shll
and
scas
adc
stc
cmp
stos
adc
cmp
scas
add
jbe
test
fimull
cltd
aad
xor
mov
imul
mov
mov
push
mov
jmp
test
cmp
int
mov
out
pop
pop
push
cmp
das
sahf
neg
push
and
out
lcall
cmpsb
leave
jno
test
jl
pop
std
or
loop
lahf
pop
push
std
test
sarb
mov
mov
fcompl
jo
adc
mov
inc
xor
add
add
sbb
movsb
ret
pop
xlat
dec
scas
pop
lds
sarb
jecxz
test
pop
fldenv
lds
ja
int3
push
mov
sti
sbb
push
dec
inc
and
fdivs
inc
sarb
mov
pop
imulb
add
repnz
pop
inc
add
mov
fwait
pop
lret
lahf
out
ja
jno
or
in
sbb
jb
sub
fiadds
out
sub
push
sub
add
cmp
enter
ficompl
mov
sub
adc
push
cmp
lea
jno
outsl
or
clc
jle
push
xchg
sub
dec
sbb
adc
push
mov
lds
and
movsl
add
jp
or
je
scas
arpl
and
jns
push
xor
sahf
jle
mov
iret
enter
mov
sbb
inc
divl
imul
test
cli
cwtl
jb
mov
pop
mov
adc
fwait
jp
test
outsl
cmpsl
or
sbb
scas
adc
push
js
jnp
mov
pop
dec
lcall
xlat
dec
add
lods
in
pand
idivl
nop
aaa
outsl
adc
pop
outsl
in
mov
adc
loope
xchg
or
cltd
dec
xchg
jg
ror
mov
testl
cmpsb
outsb
cmp
fisubrl
sbb
mov
sub
cmpsb
rol
arpl
xchg
cld
fisubrs
stc
mov
inc
scas
iret
sbb
clc
push
shrl
push
mov
sbb
jmp
lods
push
push
pushl
dec
icebp
test
pop
xchg
and
xchg
outsb
add
pop
sbb
lcall
dec
xlat
lret
fisubrs
fmull
int
sbb
mov
fs
test
les
pusha
pop
mov
enter
repz
push
inc
in
and
sti
adcl
or
fcompl
scas
fcomp
lock
pause
fidivrl
stos
outsb
jb
cwtl
mov
mov
ret
push
popa
fimuls
and
pop
shr
cli
scas
mov
aad
lea
sti
inc
mov
in
add
cmpsb
jl
or
sti
add
push
lcall
cli
fcmovnu
insb
xchg
out
pop
jns
mov
sub
mov
jae
adc
xchg
out
mov
inc
sbb
mov
add
das
test
dec
das
jmp
inc
test
and
in
pop
icebp
xchg
test
sbb
mov
xor
aam
daa
les
out
lcall
pmaxsw
movsl
pop
mov
sbb
jmp
xor
push
pop
movsl
pop
outsl
repz
jbe
mov
pop
int
add
mov
imul
insl
xchg
and
mov
and
mov
dec
test
push
or
push
in
and
sub
sahf
popf
in
pusha
push
adc
cmp
sarl
je
mov
push
inc
and
movsl
dec
push
imul
inc
or
jnp
push
pop
stc
scas
jo
ret
inc
lret
in
aad
lods
popf
test
cs
test
xlat
fcoms
insl
enter
jno
outsl
lcall
not
cmp
cmpsl
lds
push
add
leave
mov
mov
pop
inc
sub
push
dec
jp
scas
fcompl
out
xor
sbb
pop
in
std
push
shlb
pop
xchg
iret
dec
int
xlat
dec
lahf
repnz
scas
push
jne
rolb
sbb
xchg
aaa
insb
addl
pop
jg
mov
das
mov
jo
scas
popl
out
xchg
xchg
push
into
popf
mov
and
xor
pop
sarb
sbb
insl
cmpsl
int
loope
flds
iret
sub
mov
pop
das
or
ja
xchg
mov
or
push
leave
leave
imul
pop
cmp
int3
or
mov
lock
pop
movsb
hlt
push
jmp
cmp
mov
cltd
jecxz
mov
pop
or
fdivrs
sub
mov
imul
sar
icebp
insb
rorb
pushl
adc
in
jge
jno
xor
adc
loop
mov
les
mov
push
mov
hlt
sbb
mov
inc
hlt
sub
loop
lcall
out
addr16
aas
mov
push
andb
subb
lock
dec
pop
inc
jge
xor
xchg
mov
xlat
daa
cmpsl
fs
cmp
aaa
testl
sub
cmpsb
es
iret
lods
outsb
jno
sbb
xor
cmp
out
push
rorb
je
test
stos
xor
dec
idivb
mov
sub
std
shrb
loopne
loop
inc
aas
into
repnz
mov
push
js
insl
add
insb
adc
inc
or
cwtl
jge
and
subl
int
dec
fcomp
popf
idivl
in
hlt
repnz
mov
xchg
pop
in
pop
xor
shrb
add
or
cwtl
scas
sti
lods
loop
adc
ss
push
xchg
push
push
arpl
ss
xchg
mov
lcall
popa
sub
icebp
jl
mov
mov
pushf
lea
mov
je
xchg
ret
lock
sub
repnz
push
mov
jl
sub
movsb
xchg
shll
xor
push
rol
ret
and
je
test
lods
cmp
and
lods
cmp
jge
mov
outsb
adc
sbb
push
sub
aam
fisttpll
fists
aad
loop
pop
mov
aam
mov
ja
ror
xchg
mov
xchg
sub
dec
fidivrs
in
pop
and
jno
cmp
repnz
sub
inc
push
lret
pop
call
sarb
inc
rorl
fwait
cmp
cli
cmp
and
pop
rcrl
idiv
jne
aad
repz
dec
jae
hlt
sub
pop
movsb
adcl
ret
sarl
inc
movsb
cmp
xchg
js
sbb
inc
test
js
lret
test
aaa
iret
or
mov
aas
inc
add
arpl
call
jbe
add
ficoml
inc
stos
pop
icebp
xchg
pop
jge
sbbb
mov
aam
cmpsb
sbb
dec
aam
popa
mov
je
fnstcw
test
and
pop
repnz
xchg
sub
ljmp
les
mov
enter
aam
push
insl
pop
sbb
sbb
stos
xchg
or
les
jecxz
push
sub
rcrb
stos
insb
pop
les
call
fwait
xor
or
shll
ja
mov
add
xchg
mov
xchg
mov
xor
pop
arpl
sub
arpl
push
aas
xor
in
inc
adc
pop
push
aad
mov
jg
sub
imul
mov
ret
stos
popa
leave
les
clc
jge
xchg
jp
test
aam
fmul
jb
cs
adc
shll
rcrl
lret
and
sub
mov
or
mov
daa
inc
mov
jge
mov
jg
out
test
icebp
mov
mov
mov
fs
nop
test
sbb
jbe
cltd
pop
cmp
push
cmp
xchg
jge
or
lds
lcall
addb
push
in
test
les
jb
les
push
sbb
vucomisd
jnp
ss
mov
lods
inc
fcompp
outsl
ja
in
cmp
in
cli
fs
jne
or
repz
ret
xchg
ret
and
jnp
jge
push
das
out
adc
sbb
sub
and
mov
add
jb
inc
in
jecxz
mov
xchg
mov
stos
pop
cld
lcall
jp
pop
and
add
sbb
icebp
pop
dec
inc
jp
pop
pop
in
jge
sbb
add
jp
lret
xor
xor
movsl
push
mov
int
pop
cmpsl
mov
ret
scas
sub
pop
or
popf
jne
xchg
fistps
adc
add
loopne
jno
pop
icebp
push
test
jle
jb
mull
sub
cmpsl
or
addl
add
inc
aad
cmp
mov
in
sarb
push
cmp
mov
pop
out
and
repnz
cmp
or
xchg
fisttps
fsubrs
sbbl
xor
fistl
hlt
adc
pusha
subl
pushf
cmp
add
cmc
pop
sbb
xor
dec
pop
fcoml
mov
movsb
xor
add
mov
inc
sarb
pop
lods
or
jg
cmp
ret
mov
mov
jle
lds
sub
lret
fistl
xor
pop
push
subb
lcall
pusha
fxch
mov
push
aad
loopne
mov
in
mov
cmpsl
mov
jno
sbb
mov
pusha
or
into
lret
push
cmp
inc
or
inc
xchg
or
cs
inc
or
fdivl
inc
mov
mov
pop
sbb
or
sbb
jne
mov
stos
mov
es
mov
sub
and
out
shr
push
daa
jnp
push
nop
adc
mov
sbb
inc
mov
iret
and
clc
jmp
out
mov
insb
pop
add
pop
inc
mov
sub
orb
repnz
mov
pop
mov
insb
mov
addr16
mov
mov
mov
call
sbb
jmp
sbb
ret
add
add
fstl
sbb
sub
fildll
fimull
xchg
xchg
inc
lods
das
mov
shrb
jne
push
outsl
aaa
mov
inc
mov
mov
adc
int3
add
inc
mov
lock
xor
clc
fs
xchg
jg
jecxz
jle
out
fcoms
jp,pt
add
aad
leave
out
cltd
aaa
in
int
cltd
adc
mov
adcl
push
ret
jo
rclb
lds
fisubs
clc
mov
push
outsb
sub
das
popa
inc
add
mov
ds
sub
xchg
push
mov
bound
lret
sub
jae
sbb
or
add
push
and
std
push
lret
jne
xchg
aas
ret
jb
movsl
cli
xor
inc
cltd
mov
aas
ljmp
jecxz
adc
and
mov
push
push
cltd
popa
int
adc
movsl
ror
mov
jbe
icebp
mov
scas
fldlg2
push
testl
enter
call
mov
cmpsl
push
adc
add
xor
mov
jnp
pusha
daa
inc
jbe
arpl
addr16
aam
sub
inc
lds
push
fwait
inc
cli
out
lock
xchg
dec
inc
xchg
ljmp
jae
push
cmpsb
lahf
xor
stos
in
adc
mov
push
or
daa
fisttpl
sbb
push
jb
dec
ja
scas
loope
xchg
cmp
sub
movsb
insb
pop
push
inc
popf
pop
add
cwtl
pop
rorl
mov
dec
push
in
imul
sub
xchg
xchg
loop
shl
out
mov
mov
and
sub
les
mov
mov
hlt
mull
lret
sub
push
push
jnp
imulb
or
or
addb
outsl
xlat
mov
bound
stc
and
cld
outsb
mov
xor
pusha
das
sbb
addb
cld
sbb
test
jno
inc
and
cmp
xor
shll
sub
ret
pop
movsl
shr
xor
aad
mov
mov
jp
jnp
pop
xor
jl
fldcw
dec
cmp
movsb
iret
add
das
clc
cs
push
dec
inc
pop
mov
xchg
movsl
inc
ja
sub
jno
pop
dec
ret
outsl
fisttpll
jnp
stos
negb
push
mov
stos
outsl
jbe
inc
mov
cmp
es
loopne
mov
push
stc
sbb
fsubs
mov
jg
jle
repnz
mov
mov
mov
pop
mov
xor
and
mov
or
enter
and
mov
shrl
fisttpl
pusha
xor
jmp
out
push
les
xor
add
cmpsl
sbb
fucomip
ret
xor
pop
inc
addl
xchg
pop
shll
add
fucomi
xchg
sub
inc
mov
jl
xchg
xor
cmp
add
pop
lds
push
or
dec
jne
test
or
mov
cmpb
enter
shrl
sti
sbb
sub
push
shrb
iret
jle
sti
and
sub
add
adc
leave
adc
fwait
add
add
fucomp
inc
hlt
mov
test
mov
sbbb
adc
inc
sub
mov
xchg
cmp
scas
rclb
in
pop
cmp
mov
mov
addr16
nop
inc
icebp
imul
jb
sub
cmp
sub
dec
push
arpl
add
add
xchg
sub
sub
inc
ljmp
mov
pop
arpl
cltd
mov
adc
icebp
mov
lret
in
cmp
sbb
or
cld
mov
dec
ss
inc
fneni(8087
xchg
ret
jne
mov
inc
fs
adc
add
out
outsl
repz
inc
push
xchg
dec
lods
add
out
push
jl
aaa
lods
fdivl
add
cmp
addr16
and
push
mov
jmp
sbb
cs
imul
shrb
inc
je
ja
mov
jno
fildll
xchg
pop
mov
and
rclb
pushl
popa
jge
adcl
int3
bound
shrl
or
ret
faddl
dec
sbb
add
movsl
cs
ja
gs
adc
dec
pop
repnz
sbb
bound
mov
inc
or
nop
in
jae
scas
cmpsb
cmpb
xchg
ljmp
inc
pop
and
mov
adc
or
outsl
push
data16
insl
pop
and
ret
mov
push
nop
repz
sahf
push
call
pop
pop
es
cmp
fdivl
jge
cli
xchg
xlat
sahf
adc
and
clc
mov
xchg
jmp
pop
mov
xchg
pop
or
mov
xchg
mov
mov
xchg
inc
xchg
add
pusha
jne
mov
repz
or
xchg
and
aaa
jbe
sub
sbb
jmp
int
sub
pusha
leave
jo
idivb
dec
and
xor
inc
stos
xchg
cwtl
test
inc
ret
jae
mov
insb
sahf
stos
stos
dec
xor
cmp
nop
jecxz
das
ret
or
jecxz
mov
inc
cli
jge
nop
push
sub
cmp
movsb
and
out
outsl
fnstsw
pusha
inc
xlat
sbb
stc
movsb
movzwl
lock
sbb
nop
sub
mov
std
jo
sbb
mov
lret
cmp
mov
f2xm1
xchg
jge
lea
sbb
sbb
push
mov
stos
shlb
cld
mov
mov
or
out
and
or
add
inc
pop
dec
pop
out
fcomip
aas
imul
rclb
push
mov
jp
lahf
adc
out
out
pusha
cmc
orb
mov
jne
lock
push
jge
pop
adc
dec
cli
cmpsb
addr16
xchg
jl
jle
pop
into
xchg
pop
js
cmp
or
clc
mov
push
push
imul
lcall
mov
insl
clc
or
cmpsl
push
adc
int3
mov
jl
ss
sbb
loope
jmp
and
aad
mov
fidivrs
out
mov
test
fists
fwait
cwtl
pop
xor
pop
inc
rcll
sub
loop
rcll
push
enter
ljmp
pop
mov
mulb
scas
or
xchg
ds
xor
sbb
mov
sub
cmp
lds
mov
cld
fsubr
xor
mov
ss
mov
or
cmp
test
xchg
cmp
cmp
and
xchg
inc
sbb
cmp
dec
fdivs
cli
fsubl
or
cmp
sub
movsl
or
in
out
adc
out
pop
ficoms
out
mov
or
int3
aas
and
cmp
mov
std
icebp
testl
dec
notl
xor
pop
xchg
or
stos
sub
xorb
enter
sbb
aas
loop
ljmp
mov
addb
push
adc
xchg
icebp
roll
mov
in
mov
pop
das
jo
pop
cli
cli
dec
insb
jg
flds
outsb
adc
fstpl
cmpsb
dec
bswap
sub
sub
negl
lret
out
dec
lock
mov
lds
ja
and
leave
pusha
mov
push
lahf
push
js
jg
test
dec
or
pusha
es
neg
dec
push
aad
or
xor
jne
aas
push
add
mov
push
fs
mov
cmc
sub
and
sbb
or
sub
or
jecxz
push
sub
ret
out
push
jb
and
pusha
fs
jno
sbb
dec
sub
in
push
in
or
fmull
lea
jmp
mov
cmp
mov
in
cltd
insb
dec
jae
stc
jne
jg
pop
xor
int3
xchg
ss
mov
popa
pop
js
int3
mov
xchg
inc
mov
ret
jg
jp
push
mov
ret
roll
jnp
adc
push
sbb
loopne
out
mov
in
adc
testb
je
mov
mov
aad
jmp
enter
inc
push
mov
cmp
and
hlt
or
in
lds
int
iret
mov
mov
sub
imul
sub
daa
or
push
push
setle
repz
je
shl
shrl
add
sbb
in
insb
push
xchg
and
mov
mov
loop
push
sbb
js
adc
cmc
push
pop
test
push
out
xlat
adcl
rol
xor
movsl
add
xlat
ret
cmc
test
jecxz
pushf
pushf
fs
stos
pop
test
jecxz
mov
sub
pop
add
out
orb
jae
loopne
adc
push
dec
test
ret
hlt
lods
idivb
dec
xchg
or
mov
orb
fisttpl
test
popf
std
insl
mov
xchg
inc
ds
jmp
test
mov
addr16
sbb
in
mov
xchg
adc
lods
cmp
jl
sub
xor
in
loopne
push
mov
jno
jno
add
xchg
jg
daa
arpl
icebp
test
test
int3
jo
sub
add
lock
nop
lret
mov
dec
sub
std
dec
icebp
lods
and
push
es
push
mov
xchg
pop
mov
insb
sbb
xchg
subb
cmpsl
outsb
cld
mov
ja
sbb
sub
loopne
loopne
mov
pop
push
or
lds
inc
inc
pop
decl
pop
xchg
dec
and
popf
cmp
incl
jno
inc
dec
in
jae
hlt
cmp
lock
adc
ffree
and
mov
aaa
outsb
inc
out
xor
cmp
cmp
rorb
cmp
nop
aad
cli
sbb
shrl
stc
mov
int3
jbe
das
lret
push
mov
mov
xchg
sub
lods
pop
add
mov
in
sbb
sbb
shll
fs
enter
push
sub
mov
clc
popa
into
in
aam
outsb
bound
jnp
int3
pop
loopne
stc
test
outsl
push
fiaddl
imull
pop
cmpl
int
jge
jmp
in
stos
jnp
ja
ss
jns
mov
std
movsl
adc
xchg
pop
sub
hlt
aad
in
cs
lret
popf
mov
mov
pop
fisttps
pop
mov
pop
insb
mov
shrl
fwait
mov
lods
pop
mov
in
shlb
jg
mov
adc
mov
js
fsubr
sub
hlt
mov
stos
mov
xchg
xor
in
inc
shll
cld
incb
xchg
inc
and
cwtl
ret
xchg
addb
push
xor
push
ds
push
lahf
mov
sbb
stos
mov
mov
mov
imul
mov
jge
xchg
pop
mov
aam
shl
dec
sbb
aam
dec
cli
pop
nop
stc
push
aaa
fistps
int3
adc
stos
jne
clc
mov
xor
daa
jmp
mov
lahf
in
add
cmp
sub
test
pslld
iret
xchg
or
outsb
outsl
or
mov
int
push
test
pop
mov
pop
es
xchg
sti
into
loope
mov
out
clc
jmp
int
inc
call
jne
lods
aam
inc
movb
scas
mov
cmp
test
imulb
cmp
bound
mov
pop
cli
addl
mov
jp
push
addr16
scas
adc
in
lret
pushf
inc
js
lods
popl
and
mov
fiaddl
inc
repz
lcall
pop
push
jns
pop
lret
mov
dec
inc
xchg
jno
andb
pop
cltd
jmp
and
mulb
dec
pop
add
scas
push
pushl
ret
pop
rcll
or
lods
mov
fidivl
std
push
push
mov
jno
mov
add
fstpt
mov
std
push
lods
mov
xchg
mov
jecxz
xchg
movsb
ss
enter
xor
jmp
in
dec
cmpsb
xchg
inc
daa
xchg
xchg
jae
rcrb
mov
push
cmc
cwtl
loope
mov
int
in
ret
or
sbb
push
jge
lock
sbb
lahf
jno
cmpsl
mov
out
sbb
rorb
mov
inc
xor
push
fnstcw
xchg
frstor
or
adc
js
xorl
jae
dec
lods
jge
mov
repnz
or
inc
dec
jg
mov
mov
cmp
dec
or
push
cli
test
adcl
ficoms
push
lock
aam
fstl
js
mov
push
mov
fs
xchg
mov
xchg
stos
xchg
inc
jne
push
dec
mov
js
loope
and
jbe
cltd
xchg
xor
rcrl
ret
notb
sub
jmp
cmp
data16
cwtl
fstl
ret
or
inc
stos
lods
lcall
sub
inc
test
shlb
loopne
jnp
lret
fimull
mov
inc
and
dec
cmp
mov
mov
movsb
in
inc
stc
mov
arpl
mov
push
xor
pop
xor
jo
fcmovu
add
cld
mov
pop
or
xor
lea
dec
dec
pop
testl
add
mov
xlat
lock
and
inc
clc
ljmp
mov
xchg
push
hlt
inc
add
adc
pushf
dec
push
add
cmpsw
pusha
in
mov
ficoms
cwtl
jecxz
insb
mov
push
mov
jle
out
ja
in
jg
push
testb
push
add
out
jae
stos
jno
mov
mov
rcrb
sarb
mov
mov
lcall
in
xchg
pop
nop
lcall
pop
inc
sahf
into
lret
push
fcompl
aaa
add
push
sbb
outsl
rcrb
fcomps
cltd
mov
pop
loope
pop
pop
subb
pop
lods
push
roll
fildll
sbb
std
repnz
and
xchg
mov
mov
cld
in
xchg
outsb
popf
pop
ror
aaa
sub
pop
dec
push
cmp
arpl
mov
xor
pop
pop
add
cmc
jns
cli
ret
xlat
and
in
sub
xor
or
fldpi
lods
shl
test
loopne
or
add
add
gs
jnp
pop
adcl
stc
fistpl
sbb
lock
jo
and
lahf
pop
lret
xor
dec
and
jecxz
enter
sbb
fsin
inc
fildll
xor
loop
bswap
js
sub
jecxz
ja
mov
inc
xor
or
or
push
subl
adc
rcr
pop
mov
jnp
xlat
loop
int
jno
cwtl
cmp
pop
shrb
jg
es
push
adc
psllw
dec
mov
or
cmc
adc
push
ret
sarl
inc
aaa
dec
repz
mov
mov
ret
adc
xchg
divb
popa
add
inc
fistpl
sub
push
or
loopne
aam
mov
inc
mov
ret
push
push
call
cld
pop
ret
jns
outsb
or
jnp
cwtl
mov
pushf
aad
ljmp
shl
mov
clc
xchg
mov
orb
cmpsl
pop
aas
mov
insl
push
jns
inc
lea
je
test
jns
mov
call
dec
lods
jge
jae
pusha
jp
bound
and
inc
adc
push
insl
push
fistps
xchg
imul
loop
into
mov
cmp
adc
ret
or
dec
repz
push
and
js
divl
jo
mov
mov
aaa
fwait
stos
lcall
xor
test
fucomi
sub
inc
push
dec
and
rorb
sbb
aas
bts
popf
mov
lret
jns
hlt
loope
cmp
ja
insb
js
gs
out
dec
icebp
movsb
int
sbb
xchg
ret
add
inc
fwait
jb
loop
push
add
fdiv
in
loop
adc
leave
dec
pop
das
xor
in
dec
mov
push
loope
pop
sub
lret
push
dec
sbb
and
daa
ffree
xor
add
and
daa
push
ja
mov
adc
out
arpl
and
add
xchg
mov
add
cmc
sbb
push
xor
mov
sub
sahf
mov
mov
outsl
push
pop
jg
and
pop
rcrl
jecxz
mov
jle
loope
xor
cmc
sbb
test
loopne
mov
test
dec
lret
xchg
in
popf
push
hlt
jns
mov
pop
sub
pop
loopne
shr
pushf
not
jecxz
xchg
and
aam
test
cmpsb
xchg
xchg
adc
jnp
push
mov
mov
xchg
je
xor
jne
and
test
xchg
xchg
in
ss
cli
add
and
mov
lods
shlb
push
jmp
outsb
sbb
imul
adc
inc
jo
addr16
in
and
pushf
push
mov
arpl
ss
je
es
mov
sarb
test
inc
in
cld
or
imulb
loopne
cmc
and
in
mov
test
mov
push
arpl
pop
or
es
pop
sbb
or
imul
mov
lahf
ds
push
push
imul
rcrl
out
js
cli
test
push
sbb
in
insl
inc
call
shll
pop
xor
and
sbb
jle
fdivrs
nop
adc
mov
push
push
add
jmp
or
fiadds
pushfw
into
xchg
dec
mov
cs
mov
jnp
lea
mov
shll
out
sbb
adc
inc
sarl
shll
dec
sbb
ret
into
call
jne
or
loope
out
arpl
inc
xchg
stos
xor
cld
xor
push
mov
clc
dec
dec
mov
cs
and
lds
ss
add
enter
jae
loopne
fmuls
jmp
js
in
shrl
sub
add
fsubl
mov
nop
pop
in
sti
ljmp
cmp
or
jmp
and
xlat
loopne
test
loop
out
mov
or
mov
insl
push
mov
icebp
jl
dec
stos
out
out
and
xchg
xchg
in
aas
loopne
pop
lods
fcomi
enter
inc
mov
outsl
lret
xor
outsw
lret
push
adc
hlt
shll
test
call
addb
cmpl
cmp
idivb
lcall
out
adc
out
lcall
bound
xor
xchg
xor
pop
aam
and
lea
es
mov
lock
ds
cli
pop
add
xchg
fstl
repz
inc
or
pop
bound
pop
xchg
cmp
mov
sub
decb
pop
sbb
shl
insl
cmp
loopne
cwtl
add
jge
xchg
push
add
mov
lcall
mov
pop
std
xor
jns
test
lock
or
out
xchg
push
call
push
sub
pop
std
fsubp
sbb
pop
push
movsb
push
pop
ljmp
aas
loope
fidivrs
fcmovu
pop
scas
pop
jnp
pop
sub
ret
xor
or
push
shl
dec
fadds
in
dec
sbb
loope
or
enter
ds
cmp
mov
xchg
jne
adc
sub
fistl
jmp
js
cld
and
xorb
inc
sbb
loop
fmuls
stc
bswap
jne
xchg
mov
gs
push
xchg
jb
jl
out
sahf
sbb
arpl
pop
fnstenv
dec
jno
fcoml
add
stos
mov
lock
push
daa
push
cmp
xchg
inc
inc
fdivr
loopne
test
inc
xchg
mov
sub
int
fld
mov
mov
jmp
push
adcb
decb
das
xor
mov
repnz
sub
daa
pop
cmc
inc
xchg
cmpsb
jo
or
fstpl
lods
out
adc
into
mov
out
jl
ljmp
mov
int3
vhaddps
mov
dec
jnp
jl
push
fs
push
and
xchg
enter
add
std
fbstp
pop
inc
out
aam
sub
pop
in
hlt
fwait
repz
jmp
sub
ss
nop
mov
jle
mov
lahf
lds
subb
cmp
adc
out
mov
mov
push
pop
inc
leave
fcoml
scas
loope
jb
ja
mov
sub
inc
dec
jg
nop
xor
out
pop
and
jb
je
dec
mov
pop
fdivs
mov
out
mov
sbb
xchg
xchg
shll
and
mov
lock
mov
xchg
outsb
xchg
mov
clc
mov
fbld
test
inc
pop
inc
subl
gs
push
adc
adc
sbb
cwtl
mov
or
xchg
out
add
les
push
pop
nop
push
dec
sub
ret
ret
xchg
test
popa
xor
gs
sbb
out
mov
and
sub
dec
sub
and
aaa
mov
pushf
or
mov
and
mov
movsb
add
lret
cltd
frstor
mov
aas
sarl
xchg
fs
insb
imul
das
xchg
or
test
or
xchg
mov
in
pop
or
inc
popf
dec
jp
dec
jge
gs
aas
ret
js
dec
adc
xlat
das
repnz
add
and
adc
sub
cmp
xor
fadds
jg
jb
pop
std
mov
dec
dec
dec
ljmp
leave
xor
sbb
pop
adc
js
roll
sbb
jl
pop
hlt
fistl
mov
dec
adc
arpl
fldl
pop
icebp
push
fucomp
je
lret
cld
cmp
imul
push
pusha
dec
dec
sbb
rol
pop
loope
mov
leave
add
push
or
out
test
inc
out
xor
leave
mov
dec
mov
or
xor
sbb
mov
mov
mov
adc
mov
pop
ficomps
subl
outsb
mov
aaa
push
adcb
add
sbb
mov
sub
adc
add
push
stc
cmc
mov
sbb
jo
mov
and
adc
addb
jl
rclb
popf
mov
xchg
add
dec
or
cwtl
cmp
push
subl
mov
xchg
dec
call
pop
imul
imul
inc
dec
cmp
xor
add
xchg
mov
pop
xchg
call
int
xchg
jb
and
xor
adc
stc
rclb
mov
xorb
inc
nop
push
pop
pop
lea
xchg
mov
dec
xor
xchg
lock
ffree
inc
xchg
jge
iret
xor
push
std
imul
das
push
adc
jo
inc
push
sahf
or
jne
rcll
insb
mov
jg
mov
mov
fdivrl
jne
sarb
imul
and
test
rcll
out
jge
mov
xor
fwait
idiv
push
dec
and
mov
mov
or
shlb
sbb
cmpsl
stos
push
shlb
movsb
insl
repz
jle
xor
popa
xchg
fmull
or
xor
loopne
pop
repz
testl
cmp
sub
cmp
stc
rorb
mov
outsb
sub
popa
daa
mov
cli
mov
mov
cmp
cltd
mov
leave
pop
pop
xchg
inc
cmc
sub
sub
jne
out
inc
push
push
add
dec
adc
mov
push
inc
pandn
sbb
in
add
mov
daa
popf
pop
jnp
jge
es
lcall
inc
inc
std
pop
lea
sbb
jb
inc
popf
imul
sbbl
rclb
dec
das
loopne
jmp
fsqrt
dec
push
aaa
fisttpll
insb
sbb
jle
push
fs
out
pop
outsl
jbe
shll
mov
repnz
repz
cwtl
lret
das
jp
pop
aaa
sub
iret
popf
fcmovne
dec
jmp
dec
jle
imul
mov
nop
cmp
dec
inc
dec
jae
orb
push
jbe
insb
pop
test
lock
roll
pop
outsl
mov
aam
fwait
sbb
in
mov
pop
or
fidivrl
sarl
aaa
addr16
loop
jb
rol
shll
arpl
inc
enter
int
add
xor
inc
xchg
and
mov
insb
mov
xchg
push
roll
cmpsl
out
sbb
and
jg
imul
clc
cs
push
dec
fsts
jl
push
pop
xchg
push
mov
dec
mov
adc
pop
mov
rolb
test
jno
nop
push
ror
add
addr16
or
lret
and
int
xchg
sbb
jno
fwait
sarb
jecxz
ja
clc
loop
push
push
repz
scas
mov
roll
cmc
sub
loop
xchg
in
xchg
cmp
and
pop
popf
aas
loopne
rclb
cs
sbb
shrb
jge
loop
fwait
xchg
enterw
cmpsb
imul
cmp
jbe
push
loope
rcrl
hlt
out
into
or
psrad
in
sbb
pop
adc
mov
push
sbb
lds
pop
pushf
dec
repz
pop
imul
mov
sahf
test
cli
dec
add
pop
pop
aad
push
sar
cli
cmpsl
fsubrs
aam
mov
in
push
mov
test
mov
push
inc
jge
adc
nop
cmp
loop
enter
mov
mov
test
jl
inc
call
mov
or
sbb
jp
mov
xchg
mov
cmp
adc
insb
rolb
in
sahf
add
adc
xchg
aam
adc
inc
pop
sar
mov
mov
jg
sbb
xor
xor
sbb
test
lds
rcrb
loop
fcoms
and
xchg
icebp
test
lahf
add
dec
pop
dec
nop
test
jnp
mov
xchg
or
dec
inc
lret
dec
or
inc
arpl
push
pop
inc
mov
cs
pop
jge
xor
std
cmp
or
sbb
ds
dec
iret
insl
pop
inc
inc
inc
repz
mov
sbb
inc
mov
sub
xor
xchg
mov
ret
lret
lret
pushf
mov
xor
fs
fdivl
push
adc
movsl
sub
inc
sub
sub
inc
test
or
xor
cwtl
shr
jo
aad
jne
mov
sub
scas
pusha
lret
jp
imul
pop
lahf
cmp
movsb
aas
pop
movsl
or
pop
pop
ja
sbb
jp
out
nop
mov
cld
or
pushf
loopnew
fs
mov
inc
lock
mov
add
add
xchg
mov
pop
or
lea
jle
out
das
push
imul
lret
and
mov
jbe
lds
cmp
sbb
jae
adc
xchg
dec
cwtl
insb
pop
dec
pushf
sar
cld
mov
or
sub
daa
and
cmp
daa
xchg
inc
mov
pop
bound
lods
sarl
adc
jns
icebp
fmuls
gs
jo
mov
hlt
daa
pushf
mov
jge
les
cmp
cmpsb
sub
push
sbb
cmp
out
stc
sub
js
cmp
mov
xchg
and
cmpsl
dec
cmc
hlt
adc
dec
lock
fidivrl
jge
push
jmp
mov
dec
test
mov
jb
gs
mov
insb
dec
xchg
mov
mov
pop
sbb
xchg
dec
mov
mov
cmp
fildl
pop
jo,pt
sti
leave
mov
sbb
shrb
neg
ds
sub
inc
int
xor
iret
or
xchg
push
icebp
fimuls
cmp
cmpsl
inc
xor
mov
mov
jns
cmp
fnstenv
add
mov
sub
shlb
xor
fbld
and
pop
aaa
mov
lods
pop
add
mov
xchg
fnsave
and
fcomps
dec
repz
push
fsubrs
ja
sbb
xor
xchg
scas
jl
jne
mov
jae
sbb
sbb
adc
rcrl
dec
push
clc
inc
fcmove
pop
rcll
mov
inc
nop
mov
mov
mov
adcb
les
pop
xchg
pop
push
push
movsb
insb
into
mov
test
or
or
repz
fbld
jp
dec
sub
and
stc
movsb
or
lods
jp
pop
stc
notb
pop
daa
xchg
fistl
inc
cmp
and
and
nop
pop
pop
inc
lret
xchg
mov
out
or
and
repz
gs
xor
jmp
mov
jl
enter
pop
leave
mov
addb
int
mov
adc
in
xchg
jno
aas
out
jecxz
jno
sub
rcl
fs
inc
icebp
scas
push
jae
xchg
int3
dec
stos
mov
int
fdivl
movsl
les
push
fisubrs
xchg
sub
xchg
loopne
popf
add
mov
and
aaa
lods
sub
rolb
jle
and
inc
int
data16
xchg
mov
jbe
ret
mov
mov
js
or
jmp
je
jnp
popf
jmp
mov
fisttpll
lret
pop
test
sub
sbb
xchg
cs
pop
dec
mov
add
mov
jl
adc
dec
add
sti
inc
iret
jo
mov
sarl
fstpl
and
xchg
stos
loopne
mov
ljmp
push
dec
jle
dec
mov
lds
pushf
loope
xor
pop
mov
movsb
and
pop
jno
das
xor
mov
rclb
sbb
nop
rcrl
and
mov
jle
test
loopne
adcl
pmullw
insb
dec
adc
je
mov
xlat
inc
cmp
lods
jl
rclb
mov
call
push
push
xchg
dec
jne
mov
int
mov
fisubs
mov
lret
cltd
mov
mov
dec
xlat
out
sarb
inc
repz
inc
and
ss
sub
outsl
lods
jl
push
push
dec
jb
or
aam
mov
xchg
or
cmp
rcll
out
jne
outsb
addl
iret
adc
dec
out
mov
inc
gs
or
std
mov
xor
pusha
xchg
fsts
jno
jmp
dec
insl
xchg
jne
sbb
xchg
inc
sti
hlt
ja
icebp
cmpsl
stos
fnstsw
xchg
fnsave
pop
ret
aas
outsl
push
mov
dec
ficoml
and
xchg
mov
adc
push
insb
dec
jmp
xor
push
dec
lock
sub
or
xchg
pop
lcall
mov
mov
mov
lcall
sahf
lcall
jae
mov
xor
adc
sub
lods
call
cmp
or
leave
xchg
cmp
aas
sub
jle
mov
loopne
jmp
jbe
leave
pop
xchg
xchg
lret
adc
push
mov
inc
movsl
es
repz
nop
sbb
pop
dec
inc
add
cmpl
repnz
lret
jo
dec
pop
bound
sbb
mov
mov
mov
cmc
mov
mov
imul
push
notb
push
jge
shrb
jmp
dec
in
xor
mov
dec
cmp
enter
or
xchg
scas
add
pop
out
xor
ljmp
int3
add
mov
mov
fwait
jbe
dec
cmp
cli
cmp
mov
xchg
lock
mov
test
mov
cld
adc
lret
push
outsb
addr16
and
and
xor
popa
bound
in
mov
lock
aad
cmp
push
xor
and
push
fwait
sbb
iret
and
pop
mov
movsb
ror
lods
push
aaa
gs
out
fs
jg
imul
and
xor
sub
sub
xor
add
nop
jmp
into
pop
shlb
lods
out
dec
cmp
sbb
insl
xchg
mov
fbld
ror
ret
jle
cltd
insb
out
shlb
push
mov
pop
or
dec
lods
mov
imul
inc
dec
aas
mov
mov
mov
call
enter
les
cmpsb
fstps
in
ja
mov
mov
mov
leave
dec
insb
jp
adc
cmp
mov
mov
jo
pushf
imul
lods
pop
fdivrl
mov
int3
cmp
mov
into
bound
je
das
push
cmp
movsl
push
sarb
arpl
jns
fbld
les
mov
inc
cwtl
and
inc
cmp
stos
rcll
push
pop
mov
push
std
lock
xor
aad
ljmp
ja
or
fildl
lea
and
pop
lods
xchg
adc
imul
jnp
mov
mov
lea
dec
loopne
jecxz
xchg
pop
and
push
insl
sarl
xchg
ret
push
push
add
sahf
stc
jne
sub
xor
push
push
jo
aam
inc
push
lods
leave
mov
sbb
xchg
hlt
in
cwtl
scas
imul
push
lss
lahf
cmpsb
xchg
orb
jecxz
xor
je
xor
out
sbb
push
cmp
push
addb
sbbb
nop
cmp
xchg
mov
hlt
es
stc
out
lds
jmp
pop
and
mov
inc
enter
cmp
ss
xchg
or
mov
or
dec
test
add
jecxz
jmp
xchg
cmp
lcall
ret
scas
adcb
adc
and
mov
xchg
into
fisttpl
sbb
mov
sarb
aaa
sbb
pop
out
jae
scas
fdivs
mov
sub
out
rorb
sub
pop
aam
lret
int
inc
xchg
std
rorb
dec
jmp
add
icebp
ds
adc
jle
idivb
inc
cmc
pop
mov
sbb
pop
mov
aam
jge
sub
dec
iret
pop
and
arpl
push
out
mov
xor
pop
add
pop
and
leave
stos
push
shll
push
push
or
mov
or
mov
shlb
addb
cld
clc
out
jbe
int
mov
dec
mov
test
movsb
mov
pop
push
aad
icebp
or
add
aas
int
xchg
push
xchg
in
mov
or
addb
aaa
mov
dec
jae
sbb
int
jo
rol
or
rcr
or
inc
test
pop
mov
jno
jo
pop
jo
fisubrs
cwtl
ja
lret
test
add
into
push
push
lea
jno
and
cmp
mov
lret
push
jne
push
out
neg
dec
cltd
mov
icebp
je
int
pop
sub
sub
mov
push
mov
faddl
sbb
icebp
incl
leave
cmp
pusha
sbb
or
mov
xchg
cli
mov
add
shr
gs
cld
cwtl
call
in
ficoml
mov
push
xlat
xor
mov
add
cmp
iret
enter
sbb
jne
mov
sub
into
popf
mov
sub
sbb
ds
fistpll
jl
jl
push
ss
add
push
cmpsb
push
bound
add
rolb
jns
fcmovnbe
jne
mov
xorb
push
out
fst
iret
jno
sbb
fisttps
or
pop
outsb
mov
xor
popf
pop
cld
xchg
es
lcall
sbb
in
adc
cmp
inc
pop
in
ror
cs
test
cmp
repz
inc
jmp
pop
mov
int3
pop
ror
xchg
scas
popa
push
mov
test
test
repnz
lret
lock
jmp
add
shlb
xor
push
stos
lret
pusha
mov
push
in
push
push
xor
pushf
cmp
push
jp
push
xor
mov
adc
lret
xchg
enter
mov
and
incl
push
sahf
stos
push
ss
mov
mov
add
mov
jno
cld
sbb
jae
lret
mov
arpl
xchg
or
rol
jb
test
sbb
imul
aaa
testb
lcall
xor
dec
ret
push
fidivrs
mov
and
mov
ljmp
das
xchg
xorb
push
fstps
cmp
sub
enter
sub
inc
sub
into
cmp
and
sub
loopne
sbb
outsb
mov
inc
call
scas
and
mov
int3
lods
ljmp
dec
and
loope
nop
inc
sbb
pop
xor
push
push
cmp
add
leave
cmp
cwtl
sub
insl
pop
fidivs
daa
pushf
pop
in
insb
cmp
inc
ss
outsl
nop
mov
aam
mov
inc
fwait
pushf
insb
outsl
mov
mov
in
mov
inc
in
insb
cwtl
dec
or
add
pop
mov
into
out
leave
mov
xchg
mov
aam
mov
xchg
pusha
orl
cmp
mov
inc
push
test
xor
scas
arpl
pop
push
dec
add
xchg
ss
out
sti
dec
jo
xchg
call
push
daa
stos
inc
cwtl
cmpsl
cmpsb
aam
cmpsb
cmpsl
roll
adc
jmp
pop
std
jmp
lds
mov
xchg
repnz
mov
and
pop
cmp
fnstcw
into
xchg
and
cmp
push
push
notb
cli
cmp
xorl
or
sbb
jg
das
ljmp
sbb
in
pop
push
and
outsb
and
sbb
mov
test
jne
and
push
in
sub
dec
pop
adc
and
int3
push
jae
pop
dec
outsb
cmp
add
out
stos
adc
xchg
mov
hlt
cmp
inc
out
outsl
mov
stc
jae
out
adc
movsb
dec
pop
xchg
lods
and
cmp
fdivl
and
dec
bound
mov
pushl
sub
int
data16
lods
pop
jne
mov
fucom
aad
leave
adc
shlb
adc
leave
les
cmp
jne
add
sub
pop
sub
bound
sbb
ret
dec
ja
je
cwtl
shl
sub
jecxz
aaa
cmc
xor
es
outsl
mov
xor
mov
mov
leave
decb
cmpsl
pop
mov
mov
mov
movsb
hlt
dec
push
push
js
xor
ljmp
call
pop
stc
jne
lahf
inc
icebp
idivb
ficomps
cmp
fsubr
int3
lret
imul
addr16
dec
test
push
pusha
mov
mov
sbb
push
popa
xchg
fimuls
push
ret
xchg
mov
insl
sti
mov
lds
dec
sahf
nop
pop
cmp
fnstenv
rclb
gs
pop
in
cmp
adc
outsb
jb
outsl
cmpsb
ds
frstor
push
fadds
dec
jl
jae,pt
int3
pusha
push
sti
shrl
movsb
add
stc
push
cmp
js
adc
aam
mov
dec
mov
add
cmpsl
jae
ds
int3
xchg
rcl
lock
inc
pop
in
ret
daa
stos
inc
test
insb
lret
loopne
push
inc
rolb
sarl
and
jecxz
cmp
pop
xor
mov
into
nop
daa
les
pop
cld
mov
push
push
sbb
cld
sbb
addr16
pop
push
mov
pop
fcomps
sub
jmp
es
test
loope
xchg
into
jp
sbb
loopne
lcall
mov
or
mov
and
xchg
dec
jmp
hlt
pop
cmp
popa
add
xor
aaa
xlat
stc
aas
or
add
push
push
aaa
dec
nop
sub
int3
faddp
movb
push
sbb
jge
and
cvtps2pi
in
je
fisubl
pop
shl
mov
das
sar
pushf
add
push
xor
xor
inc
cwtl
in
push
mov
jle
sti
sub
jge
mov
in
lahf
dec
xchg
mov
cmp
dec
fnstenv
dec
rcrb
fisubrl
fdiv
dec
test
xchg
testl
sbb
subb
in
lcall
or
aam
daa
fisubl
cmc
dec
out
mov
inc
jecxz
cli
out
xchg
mov
xchg
and
out
cmovns
or
push
mov
lret
push
out
xlat
call
adc
scas
inc
jns
xor
sub
cmpb
adc
ss
bound
lock
jp
push
add
shl
mov
mov
or
push
es
cmp
sti
popf
shll
cmp
arpl
icebp
xchg
stc
lods
mov
es
inc
add
daa
movsb
mov
pop
jno
int3
lds
xlat
nop
insl
xor
mov
rorb
push
test
or
shlb
mov
add
and
pushf
pop
add
or
pop
enter
or
adc
xchg
xor
pop
jle
aas
jo
xor
dec
mov
icebp
mov
sub
xlat
aas
aas
stc
data16
xor
ljmp
shlb
add
or
jge
jl
and
mov
outsl
or
adc
lods
aad
dec
mov
stos
sub
ss
push
cltd
mov
xor
adc
mov
lock
adc
jnp
mov
pop
jo
adc
cmp
jo
mov
or
cld
mov
lahf
sar
pop
jge
pop
or
sarl
int3
xchg
add
dec
mov
int
cmp
mov
jle
add
mov
or
add
push
das
dec
lock
mov
xchg
dec
popf
inc
popa
sub
ja
les
add
rorl
int3
inc
sub
mov
bound
hlt
mov
push
ud0
jmp
ficoml
adc
push
fcomps
stos
fnstsw
xor
and
leave
mov
or
iret
stos
jmp
int
cmp
add
mov
cli
sahf
leave
daa
sbb
mov
push
sbb
testb
repnz
jg
outsb
sbb
dec
inc
bound
iret
andl
stos
cmp
movsb
mov
jmp
sub
call
xchg
add
mov
jmp
cli
mov
cmpl
repnz
and
sub
in
stos
mov
sarl
push
insl
adc
mov
out
mov
lahf
push
into
out
mov
xorb
xchg
loopne
push
out
sti
shl
out
mov
sti
xchg
push
adc
xor
or
pop
movsb
enter
push
xor
adc
fdivs
inc
xlat
xor
or
test
in
out
addr16
lcall
nop
loope
push
xor
fsubl
lds
mov
and
test
test
pop
jne
in
std
push
cmpsl
mov
sub
inc
cld
add
cld
sub
dec
sahf
dec
hlt
push
hlt
rorb
or
cmp
movsl
xorb
jbe
jne,pt
int
jbe
dec
jecxz
sbb
cld
outsl
cmp
aam
stos
mov
gs
xchg
cmp
or
sub
jmp
lods
xchg
mov
and
mov
cli
lahf
hlt
addl
leave
mov
aad
mov
sbb
addr16
sbb
dec
push
pop
xchg
neg
out
xchg
outsb
mov
pop
and
jg
jne
gs
in
test
cmp
or
aas
fdiv
or
popa
fistl
hlt
sbb
jbe
jmp
dec
bound
es
jo
mov
lea
inc
js
add
ljmp
pop
mov
mov
test
sbb
out
stos
adc
lds
out
pop
add
sbb
mov
inc
mov
testl
xor
aam
or
in
fcompl
aad
jg
movsl
shlb
add
roll
and
stos
sbb
andl
ljmp
push
mov
pop
sbb
test
sub
and
pop
jl
repz
push
cld
loop
sbb
adc
and
jb
push
pushf
jmp
and
fimuls
pop
in
movsb
enter
add
add
pop
leave
test
sbb
jecxz
dec
out
sahf
movsl
test
lret
sbb
cs
sahf
mov
fisubrs
pop
mov
sub
jbe
test
lods
add
idivl
mov
pop
cmp
or
push
out
mov
dec
daa
aam
mov
jp
test
pop
push
repz
inc
les
stos
xchg
bound
pusha
fsubr
inc
imul
or
in
xor
adc
test
mov
inc
addr16
inc
xlat
mov
mov
and
add
dec
mov
mov
jnp
in
push
lahf
subl
push
stos
push
cltd
loop
sbb
mov
push
inc
fidivrs
inc
add
cmc
mov
frstor
mov
cld
fimull
in
imul
jl
xchg
jnp
test
lods
mov
adc
mov
push
sub
mov
cltd
fdivrs
xchg
sahf
movsb
push
mov
js
test
and
add
cmp
and
sbb
fbstp
dec
gs
inc
test
jbe
cmp
shll
and
fisttps
stc
push
loope
and
sub
insl
or
sti
inc
gs
fldt
es
sub
push
cmp
sub
icebp
imul
add
sar
in
lds
pop
loopne
mov
or
xorb
xchg
push
mov
int3
dec
int3
je
and
sub
push
stc
dec
mov
ror
bound
mov
adc
in
mov
xor
xor
push
jmp
ret
mov
or
sub
or
outsl
enter
mov
gs
out
rol
mov
jmp
pop
adc
sub
jnp
adc
fwait
ljmp
jge
ss
add
dec
mov
xor
je
xor
pop
lock
rorb
jno
clc
and
mov
pop
push
nop
subl
pushf
add
add
pop
jl
jne
push
push
outsb
dec
lea
in
pop
mov
push
jg
cmc
int3
xchg
xchg
mov
pop
test
out
repnz
fs
or
movsl
sbb
pop
mov
add
shlb
inc
sti
fstl
mov
mov
out
adc
mov
xchg
les
xor
jecxz
lods
fisubs
je
jge
out
mov
lcall
jae
and
inc
xchg
movsl
enter
pop
push
push
pop
outsb
mov
stc
cmp
stos
mov
mov
pop
aam
jmp
add
jecxz
xor
mov
sbb
stos
mov
bound
xchg
pop
arpl
sbb
jmp
mov
call
call
xor
lock
outsb
rcll
xlat
dec
lock
push
daa
sub
out
shl
xchg
cwtl
fildll
xchg
loop
mov
add
sarb
mov
cld
addr16
jmp
ljmp
cmp
fdiv
mov
and
movsb
bound
push
pushf
mov
mov
cmp
pop
stos
rcr
ljmp
mov
sti
push
jno
cltd
add
loope
jp
ret
cmp
movsb
and
xor
bound
orl
test
out
lods
push
stos
jmp
aas
jp
and
sub
push
cmp
sarb
ja
jb
jns
cmpl
sti
stos
adc
push
rorl
dec
or
and
pop
mov
subl
xorl
popa
and
int3
jge
sbb
sbb
cmp
add
adc
inc
dec
xchg
mov
sbb
add
pop
and
mov
sbb
movsl
cmp
mov
ds
xor
and
stc
scas
les
lret
jecxz
jle
sub
repnz
xlat
scas
mov
adc
dec
or
lock
leave
mov
and
fdivl
or
hlt
cmp
popl
push
cwtl
fcmovne
stos
int
lret
jmp
hlt
mov
and
data16
or
outsb
inc
or
xchg
clc
nop
mov
dec
or
imul
mov
add
jl
cs
or
push
outsl
push
xchg
sbb
pop
xor
loope
or
aam
ret
dec
mov
aam
in
mov
jg
cmp
mov
or
ret
loopne
cmp
cmpsl
adc
faddl
sbb
jo
xor
out
mov
ljmp
add
xchg
arpl
cld
lods
cmpsl
push
cltd
arpl
dec
stc
xor
pusha
fwait
xchg
jge
mov
dec
int3
dec
jmp
std
mov
lahf
out
cltd
cmp
fbstp
fdivr
mov
mov
dec
cmc
and
xchg
add
lea
cmp
xchg
mov
or
adc
je
mov
inc
inc
ja
out
das
imul
jns
mov
dec
sub
data16
dec
loop
sahf
addl
cmp
test
mov
push
pop
mov
cli
cmp
sbb
lret
inc
jo
sbb
sub
sub
in
mov
shll
add
push
cmp
push
mov
pop
inc
das
xlat
fistpl
in
dec
or
xchg
or
cmp
xchg
andl
psrlw
fildl
or
dec
inc
cltd
mov
int
mov
cli
push
inc
int
addr16
das
scas
leave
mov
lock
stc
mov
loope
popf
loopne
inc
cmp
fistps
sbb
sub
addr16
shlb
clc
cwtl
mov
aas
dec
pusha
mov
xchg
inc
mov
ficoms
imul
adc
lods
pop
cltd
mov
scas
jbe
pop
add
xor
or
sub
mov
rorl
add
addr16
idiv
movsl
push
pop
jne
movsl
icebp
iret
xor
fidivl
and
push
or
and
pop
rcrl
jmp
xchg
fistps
push
xor
xor
mov
loop
loop
rcrb
ret
xchg
add
sbb
pop
rolb
xlat
mov
ficoml
mov
jecxz
std
push
fst
mov
movsl
movsb
out
push
cmp
push
inc
aas
pop
mov
push
test
sti
jne
pop
and
loop
pop
cmp
xor
add
sahf
pop
lret
lcall
test
imul
fwait
ret
add
jo
leave
aas
mov
cmp
repnz
cmp
push
mov
pop
leave
inc
sub
test
dec
lret
lret
jl
ja
rcrb
push
jl
aad
sbb
dec
sbb
cltd
cmc
popf
cmp
or
addr16
xor
push
ss
push
lea
pop
mov
xlat
add
insb
sub
mov
xchg
cmp
movsl
adc
call
rolb
xlat
xchg
xchg
jb
jp
rolb
lods
sub
sbb
scas
fsubr
int
pop
mov
xchg
pushf
stos
jg
fildll
and
enter
xchg
xchg
imul
hlt
sub
cli
mov
push
add
pop
jecxz
fs
adc
xchg
cs
mov
mov
mov
inc
adc
jmp
add
je
xchg
cs
cmp
jge
out
mov
push
jecxz
inc
mov
sub
aas
les
push
mov
push
bound
jnp
inc
test
push
mov
add
ficomps
add
adc
lods
call
sbb
mov
int3
fisubl
insb
cmpsl
lcall
xchg
lods
out
sub
jo
lods
adc
leave
sub
and
leave
sub
xchg
push
mov
push
mov
mov
sahf
xchg
scas
inc
and
lahf
cltd
jae
aam
in
push
loop
pop
clc
jno
mov
lock
aas
hlt
insb
mov
mov
fdiv
xlat
mov
mov
adc
mov
ret
gs
push
bswap
cmp
push
in
insl
lea
inc
jbe
pop
jae
aaa
movsb
pushf
sbbb
inc
ljmp
push
pusha
jns
es
pop
lea
dec
adc
testl
jne
mov
or
mov
lods
inc
addr16
cmp
ret
xchg
dec
cmp
dec
insb
mov
sbb
dec
jne
pushf
inc
sub
lahf
in
stos
shlb
mov
push
stos
dec
inc
push
xor
jge
push
dec
rorb
sub
jmp
adc
mov
cmp
ljmp
push
enter
xor
sahf
ret
test
daa
int
pop
in
in
andb
out
and
movsb
cld
aas
notl
xor
mov
xchg
mov
cmp
rolb
paddusb
fcmovnbe
std
cmp
pop
xor
andb
mov
loopne
xchg
rorb
subl
decl
popf
sbb
mov
mov
icebp
pop
mov
dec
inc
pop
mov
add
mov
mov
jg
mov
xchg
call
test
fbld
jecxz
daa
inc
lahf
imull
mov
xor
data16
dec
fcompl
les
cmc
pause
cmpsb
push
pushf
push
popa
loopne
pop
aad
pop
add
repz
popl
cmc
mov
pop
pop
test
mov
mov
out
pop
sbb
mov
fildll
push
mov
sub
aam
shr
icebp
or
pop
aas
in
push
and
ret
dec
push
scas
or
lret
arpl
sub
mov
mov
in
jno,pn
fstps
add
inc
stos
or
fistl
dec
dec
jb
jp
xor
aas
loopne
sub
inc
popf
add
push
call
in
fwait
mov
in
ret
dec
fwait
jnp
mov
aam
or
dec
shll
sbb
mov
xor
enter
loopne
outsl
or
addr16
or
sti
cmp
dec
push
mov
std
aad
push
xchg
push
cwtl
movsb
push
and
pop
aas
mov
dec
mov
dec
dec
out
les
test
mov
leave
jne
stos
sub
addb
pop
sub
ss
inc
cmp
addb
mov
xor
xor
xchg
hlt
addr16
aad
or
jge
rclb
or
add
outsl
lret
jl
out
mov
jns
xchg
xor
cmp
aad
int3
adc
clc
mov
inc
jp
mov
and
and
subb
les
les
mov
lret
mov
sub
repnz
pushf
lods
fxsave
jnp
inc
sbb
sti
adc
sahf
inc
movsb
aad
jne
fstpl
cld
mov
cmp
ret
shrb
xor
addr16
je
mov
mov
jae
mov
arpl
cmc
aaa
out
sahf
and
repnz
push
fisttpl
mov
out
rcl
sbb
xor
fldt
in
add
imul
fmull
mov
and
cmp
sbb
addr16
and
bound
and
imul
dec
insb
mov
jo
enter
outsl
test
retw
cmp
nop
rolb
pop
and
cli
cmpb
fsubrl
sub
loop
out
test
inc
mov
insl
sti
push
inc
sub
jmp
pushf
loope
mov
jle
xor
or
pop
sub
dec
dec
movsb
call
cld
or
or
adc
pushl
rcr
xchg
fwait
out
fs
les
mov
add
fmulp
pusha
scas
push
imul
push
push
and
jecxz
mov
xor
push
inc
test
mov
fsubrs
shlb
cli
lahf
mov
mov
sub
add
incl
add
lock
mov
add
ds
add
cmp
xchg
cmpsb
out
sbbl
out
mov
lret
push
enter
stos
add
inc
cmp
sbb
pusha
xor
mov
es
decb
cmpsb
or
ds
jl
mov
jge
pop
ljmp
push
mov
xchg
daa
sti
clc
push
dec
popf
repnz
xchg
insb
add
test
xchg
or
xchg
jmp
insb
int
and
arpl
xchg
jmp
mov
mov
sub
in
mov
ret
in
xchg
inc
adc
push
movsb
mov
mov
mov
push
or
mov
or
xor
pop
fmuls
inc
pop
lret
gs
mov
push
ret
dec
out
stc
cmp
ret
frstor
xchg
xor
sbb
aad
loope
cmpl
loopne
and
mov
and
jge
add
inc
outsl
out
pusha
inc
push
xchg
push
xchg
and
inc
or
movsb
push
cld
sahf
push
sbb
in
sarl
imul
mov
or
mov
add
mov
mov
push
jle
xchg
les
in
mov
push
cwtl
call
test
das
cmp
rclb
mov
mov
lods
fdivl
and
pushf
mov
jns
sbb
fadds
mov
push
xorl
or
lods
pop
sbb
incb
adc
push
daa
xor
dec
or
mov
xchg
fsubrp
adc
ja
jns
pop
jbe
mov
rclb
movsb
icebp
jno
in
fimuls
sahf
nop
and
pop
xor
mov
mov
outsl
sbb
fidivrs
xchg
stos
arpl
rcr
fnstsw
inc
xor
popa
add
push
insl
jp
adc
mov
xor
inc
xorl
rcr
mov
nop
push
cmc
imul
or
cmp
inc
ljmp
and
inc
mov
cltd
adc
outsb
aas
sub
mov
cmp
loop
repnz
pushf
test
add
dec
cmp
push
ret
sbb
adc
pop
and
arpl
rcrb
lods
dec
push
and
or
fidivrl
mov
adc
add
sbb
pop
xor
clc
jbe
scas
add
shl
push
sub
xor
sbb
mov
insb
push
cmp
sti
cmpb
mov
scas
pop
ficoml
enter
jg
mov
sbb
imul
mov
lea
cmpsb
fdiv
pop
lahf
enter
xchg
outsl
sub
ret
dec
es
insl
pusha
incb
mov
pop
lods
inc
ljmp
or
daa
jp
test
jl
cmp
adc
mov
mov
scas
mov
lea
mov
lock
or
or
push
and
jp
jg
cltd
mov
es
jg
mov
loope
sti
mov
jns
pushf
daa
int3
push
sbb
mov
and
xor
xchg
and
jno
mov
pop
mov
fsubrl
lcall
rorl
jb
out
fistpl
mov
jle
xor
xchg
lahf
inc
mov
mov
or
movsl
out
stos
inc
inc
sti
mov
divl
push
mov
repnz
jbe
repz
xchg
dec
test
loopne
dec
mov
xchg
ja
jle
push
mov
lret
xorl
inc
pop
and
icebp
pop
cmp
ljmp
mov
xchg
cmpsb
jl
inc
hlt
mov
movl
sub
pop
cmp
sub
fcoms
sahf
cld
cmp
aam
ja
sub
int3
jno,pn
mov
xchg
les
ljmp
in
sub
test
scas
sahf
outsl
pop
sub
cmpsl
jns
call
pop
pop
leave
lret
and
push
fdivs
dec
sti
xor
scas
xchg
mov
repz
or
xlat
pop
sub
cltd
or
jle
shll
jmp
clc
cltd
cmp
mov
sub
and
mov
mov
inc
dec
pop
push
shrl
popf
xchg
adc
xorl
xor
ficompl
dec
movsl
shll
loopne
fiadds
pop
or
pop
cmp
std
enter
scas
and
jp
or
pop
into
adc
xchg
or
push
ja
or
xor
add
cmpsb
add
or
shrl
and
or
lds
mov
and
imul
inc
xor
popa
mov
pushf
pop
js
sbbl
xor
out
or
lcall
notl
popf
lret
push
divb
xor
inc
push
ss
div
test
sub
addb
repnz
fimull
repz
pushf
lea
scas
adc
xor
mov
sbb
mov
aad
out
insl
xchg
es
inc
pop
sbb
lretw
or
sbbl
mov
hlt
adc
popa
pop
pop
ret
jno
push
mov
cli
les
xchg
aas
lret
xchg
xor
ret
pop
clc
lcall
outsb
mov
iret
lahf
sub
lods
cmpl
dec
imul
add
dec
xchg
xchg
std
and
inc
jb
shlb
sbb
lret
loop
xor
pushf
cmp
or
movsb
mov
cmc
dec
loope
mov
pop
push
loope,pn
mov
push
xchg
add
pop
add
lret
jecxz
sbb
add
xor
inc
out
mov
clc
cmp
cmp
jg
add
stos
cmpsb
push
addr16
addr16
cmpsb
mov
and
stc
shlb
xlat
aas
lea
pop
ss
test
test
push
and
pop
sub
fdivp
lea
xchg
mov
movsb
push
add
jl
or
outsl
popa
sbb
xchg
jg
add
sbb
clc
inc
xchg
jns
out
mov
lods
add
aaa
pop
mov
hlt
mov
mov
fisubrs
and
jl
call
jb
scas
clc
sub
adc
cld
mov
and
aaa
xchg
push
mov
mov
sub
dec
fdivrs
mov
shll
mov
shll
out
or
mov
push
stc
sub
or
or
push
popf
jl
pusha
xor
and
stc
dec
lret
fcoms
jp
out
cmp
cli
sub
repz
imul
or
ljmp
add
subb
int
jge
jmp
dec
pop
cmpsl
adc
scas
inc
icebp
inc
lcall
imul
push
xchg
cmp
adc
xlat
repz
xlat
jne
enter
dec
popf
in
rcr
mov
mov
pop
jmp
inc
mov
negl
rdtsc
hlt
sub
insl
and
lret
scas
push
movsb
ret
rolb
mov
pop
je
cwtl
popa
mov
sbb
mov
push
add
cmp
outsb
cmp
sub
push
shlb
ja
mov
in
sbb
pushf
enter
std
jbe
cmp
ja
push
mov
fldt
pop
hlt
and
out
popa
inc
les
jp
into
xchg
adc
cltd
add
jns
sub
in
mov
mov
pop
cmp
imull
add
icebp
cli
jecxz
xchg
add
dec
ss
jg
es
test
lret
aaa
inc
and
sbb
aad
mov
iret
imul
push
jp
icebp
mov
insl
out
stc
in
dec
iret
inc
subb
jne
aam
mov
cmpsb
ja
adc
mov
sbb
jl
xor
add
and
subb
rorb
sahf
xchg
dec
pop
std
mov
mov
loope
push
xor
stc
pop
pop
sub
adc
ss
mov
and
mov
bound
mov
repnz
adc
sbb
jae
sbb
call
in
xchg
leave
add
out
xchg
push
mov
pop
cmp
push
fwait
jle
add
xchg
jne
mov
adc
in
sub
sbb
dec
mov
sub
std
das
sub
imul
outsb
sub
cltd
in
inc
dec
movsb
lods
xchg
cli
sub
ljmp
dec
outsb
pop
mov
jne
cwtl
dec
dec
mov
cmpsb
adc
sub
jmpw
movsl
cltd
out
stos
mov
insb
aad
xchg
sahf
test
loope
insb
repnz
mov
dec
push
out
loopne
out
jb
cli
sti
bound
xor
jns
jb
lods
mov
ret
jmp
push
nop
xchg
pop
mov
xor
mov
rcll
roll
jp
scas
xchg
cli
sbb
cmp
int3
mov
or
js
cmpl
xlat
xchg
pop
repz
cmp
mov
mov
cltd
sub
jp
repz
imul
sahf
mov
jmp
or
cltd
cwtl
fistpl
js
out
ja
fstpl
xchg
add
ror
dec
aas
pop
scas
jo
cmp
pop
stos
ds
mov
push
aas
sahf
and
mov
dec
scas
sti
nop
dec
sbb
mov
lds
jl
hlt
fimuls
xchg
mov
popa
lret
push
xchg
inc
sub
mov
jb
cs
fildll
out
push
fistps
sahf
imul
jne
mov
and
call
bound
in
mov
cs
and
gs
jp
xor
mov
outsl
sahf
nop
pop
fbld
cmp
fbld
addr16
pop
xor
xor
into
roll
loop
xchg
std
mov
inc
mov
cli
test
mov
add
dec
shrb
ljmp
repnz
xor
fwait
dec
in
repz
mov
mov
mov
push
cld
sub
ret
fstp
sbb
sub
xchg
mov
mov
mov
bound
lcall
xchg
pop
dec
aaa
jmp
int
lret
hlt
jno
adc
mov
dec
repnz
and
sbb
adc
rorl
dec
or
jne
xor
fisttpll
pop
or
mov
ret
stos
pushf
dec
dec
sub
cli
hlt
adc
icebp
add
jmp
jge
ret
jb
mov
lret
mov
push
and
rorl
dec
dec
rorb
xchg
or
mov
fsubrl
push
xchg
stc
test
je
sahf
shlb
shrb
fmulp
lcall
or
mov
stc
xchg
ficoml
sti
xor
xchg
lcall
out
into
and
out
movsl
js
jno
adc
pop
imul
mov
lods
rcrb
ret
push
lcall
adc
and
arpl
loop
push
mov
subl
int
in
mov
pop
sbb
fdiv
push
xchg
sub
or
in
sbbl
mov
pop
test
imul
shrl
sahf
shr
add
dec
je
mulb
dec
out
daa
leave
insb
mov
xchg
int
sbb
cltd
arpl
mov
dec
push
mov
sub
les
push
xchg
ret
fistps
push
add
cmc
push
ret
cmp
sahf
jp
xor
jbe
push
mov
and
jbe
inc
imul
cmp
mov
mov
inc
imul
sbb
mov
pusha
lods
push
and
orl
dec
mov
mov
jae
jns
mov
push
push
and
mov
rcll
cli
xchg
out
mov
push
aaa
push
mov
ss
xchg
add
sub
aaa
adc
xchg
dec
pusha
mov
repnz
icebp
adc
dec
mov
ljmp
scas
in
rorl
pusha
test
and
sbb
inc
icebp
jle
xchg
stc
xchg
adc
xor
imul
xchg
lock
outsb
inc
cld
pop
aaa
out
jl
xchg
jp
mov
ljmp
movsl
cli
dec
push
push
jnp
or
and
sbbl
into
xchg
stc
dec
mov
cmc
adc
aam
insb
shrb
es
jecxz
dec
adc
adc
imul
loop
mov
cmpsb
sub
xor
out
push
pop
and
jp
mov
dec
rclb
inc
cltd
push
push
and
push
dec
stc
or
lods
pop
jge
adc
dec
jbe
push
mov
imull
adc
sbbb
out
jg
xorb
pop
fnstenv
mov
pop
in
mov
test
in
pop
stos
lea
inc
fsts
mov
nop
in
in
notl
cmpsl
into
test
cmp
pushf
and
jl
dec
outsl
je
daa
mov
inc
dec
push
aam
iret
rorb
lods
sub
cmp
mov
add
mov
dec
aam
push
cli
inc
push
icebp
lea
jge
push
ss
test
mov
les
xchg
pop
mov
xor
cwtl
xor
mov
test
add
jle
jae
pop
add
pop
jmp
push
bound
ss
add
mov
and
lock
in
pop
lcall
cmp
jae
xchg
sub
push
mov
sub
pop
stc
ficoml
sbb
aaa
mov
cmp
push
sub
fld
lahf
add
cmp
cmpsb
xor
mov
or
sbb
lret
jae
cmp
or
clc
and
inc
lods
mov
push
enter
jbe
push
fwait
mov
xchg
dec
pop
shll
cltd
mov
push
pop
das
in
jg
push
mov
dec
pop
push
jnp
gs
push
test
xchg
out
xor
add
jl
jg
adc
cmc
mov
pushf
popf
mov
jae
or
mov
adc
arpl
repz
mov
pushf
repz
gs
jno
mov
and
cmp
and
push
sarl
stc
fnstenv
sbb
add
out
xchg
jmp
div
dec
mov
out
adc
cmp
rcll
mov
shrb
loopne
xchg
cwtl
nop
sub
add
push
pop
inc
sub
jo
js
dec
jne
aaa
jnp
cmp
ror
mov
adc
fld1
xor
mov
stos
cwtl
jns
mov
pop
push
scas
mov
jle
leave
mov
pop
clc
lahf
mov
scas
sbb
ret
fdivr
popf
aas
mov
stos
fsubs
jp
or
inc
out
cmp
out
pop
mov
lea
gs
imul
cmp
sti
stos
icebp
in
xor
jmp
inc
mov
inc
dec
dec
adc
in
cwtl
imulb
inc
mov
std
out
cmc
imul
mov
push
xchg
insl
test
sahf
sub
jle
adc
cmpb
pop
jne
push
pop
cmpl
iret
lock
dec
add
mov
xor
stc
leave
shll
or
xor
fisubrs
iret
adc
repnz
lods
ja
sbb
mov
nop
repz
int3
inc
inc
sbb
cld
or
movsb
inc
jns
push
cmp
out
sti
icebp
xchg
jo
andb
outsb
mov
jns
push
mov
lret
sub
std
pop
adc
mov
jl
stos
mov
xchg
mov
and
cwtl
inc
dec
push
out
lahf
mov
pop
jae
imul
cmp
push
mov
jbe
inc
popa
push
negl
addr16
je
int3
enter
dec
or
adc
aaa
sbb
test
in
xchg
cmp
lret
mov
je
insl
into
mov
mov
inc
xchg
dec
and
pop
ss
mov
xlat
loope
mov
ficoml
pop
imul
loope
in
jle
mov
out
sub
xor
imul
ret
xchg
ficompl
mov
insb
imul
es
testl
jg
push
arpl
sti
lds
shll
lods
add
mov
mov
sbb
push
sub
jb
inc
or
testb
jg
je
out
imul
cmpsl
push
adc
xor
test
cmp
je
dec
adc
fstps
outsb
and
or
bound
cmc
or
into
nop
push
into
pop
sub
aas
sub
insb
inc
aam
pop
js
xor
mov
mov
xchg
mov
ret
scas
jbe
pusha
mov
jl
mov
push
dec
dec
or
push
dec
in
xchg
sbb
rorb
dec
fimull
out
jns
push
sbb
into
push
popa
push
imul
subl
lods
xor
mov
stos
mov
in
mov
dec
cmp
inc
mov
sub
pop
sub
test
push
rcll
in
xchg
in
mov
mov
adc
aaa
inc
cmp
aaa
enter
rclb
dec
ret
pop
int3
sbb
dec
xor
imul
jne
iret
ja
add
sub
inc
imulb
das
or
in
test
mov
das
pop
adc
scas
jnp
int
rcll
aaa
popa
test
or
sbb
push
pop
pop
push
mov
mov
mov
es
or
inc
pusha
dec
sbb
aad
mov
test
clc
lahf
aaa
mov
mov
pop
movsb
xchg
ror
inc
fucomip
adc
aaa
incl
xchg
dec
mov
mov
loopne
mov
ficoms
sbbl
jge
fisttps
std
lea
mov
or
push
loope
lods
out
out
insb
and
mov
and
popa
call
addr16
push
shll
aas
icebp
push
pop
call
lock
jmp
mov
xchg
cmc
jne
cmc
pop
imul
cmpsl
data16
pushf
adc
or
outsl
popa
sbb
cmp
dec
imul
push
shll
cmp
mov
test
fstpt
cwtl
xchg
mov
sub
out
sarl
mov
fwait
mov
cmp
cmpsl
out
sbb
mov
inc
sbb
lock
subl
sub
cmpsb
jne
pop
adc
inc
dec
leave
xor
repz
scas
push
mov
stc
sbb
addr16
sub
cli
inc
xchg
jne
jne
clc
pop
sahf
outsb
mov
stos
out
out
xchg
sbb
pushf
fldl
mov
out
lcall
cmpsb
cmc
jo
adc
std
iret
gs
ja
fidivrs
ror
cmp
inc
xor
fwait
imul
insl
sub
xor
xor
jb
mov
addb
inc
pop
andl
lock
push
sbbb
mov
lret
pop
dec
and
jb
inc
cmp
xor
and
negl
mov
pushf
scas
ror
pop
cs
jnp
or
mov
sbb
jns
rolb
sub
xlat
inc
out
xlat
clc
jp
shll
andl
movsb
xor
xchg
and
das
sub
dec
stos
mov
cli
lcall
and
xor
xchg
lret
adc
mov
scas
dec
loope
insl
jo
add
inc
repnz
lret
jmp
ss
int
data16
arpl
cwtl
sbb
jle
cmp
popa
mov
aaa
mov
rcll
test
negl
adc
sub
lcall
loop
jbe
push
test
pop
dec
cmpsb
xacquire
sbb
ss
inc
dec
dec
xor
dec
xor
stos
inc
push
addb
cs
sub
dec
ficoml
bound
cmc
jns
mov
stos
cmp
lods
sbb
orl
inc
outsb
fidivs
imul
scas
sbb
cmp
cltd
or
hlt
xor
pusha
mov
push
fwait
decl
in
aad
cmp
or
mov
mov
dec
in
js
les
stos
cmp
aad
mov
cmp
aad
xchg
mov
std
add
loop
scas
lock
enter
or
jb
ss
inc
xlat
mov
add
cmpb
frstor
sub
xchg
push
lret
stos
xchg
inc
insl
jbe
into
cmp
mov
aad
cmpsb
jae
mov
or
fcom
adc
lods
lods
push
outsl
aaa
push
js
je
mov
insl
out
xor
orb
int
mov
cmp
movsb
or
nop
xchg
push
add
ftst
shl
js
mov
xchg
mov
mov
xchg
xchg
mov
rcrl
loop
cmc
aas
mov
loope
sti
xor
loope
jo
mov
divl
dec
test
pop
int3
fnstcw
sbb
mov
push
fcomps
or
mov
push
test
push
cmc
adc
imul
shll
mov
movsb
xor
xor
mov
imul
test
and
xchg
loopne
mov
lods
and
jg
or
inc
dec
rcl
pop
or
xor
mov
push
xchg
hlt
inc
jecxz
mov
adc
leave
dec
stos
sub
fstpt
mov
fwait
jg
pop
mov
jbe
xchg
in
adc
je
cmp
xchg
inc
pop
and
adc
loope
dec
sub
pop
xor
mov
cmp
loop
mov
loope
adc
dec
add
lahf
aad
adc
push
clc
sub
vaddsd
enter
xlat
dec
jmp
mov
fsin
sub
shrl
pop
int
pop
in
int
dec
cmp
fucom
dec
mov
adc
and
dec
clc
push
sbb
int3
inc
cwtl
fs
subb
lods
sub
mov
outsb
imul
lahf
popf
xlat
cmc
dec
ljmp
xor
cmp
sub
lods
mov
pop
psubb
and
adc
ljmp
das
push
jp
mov
inc
ss
push
cmp
out
cmp
jl
test
stos
add
rcrl
les
lods
pop
mov
and
xchg
popf
mov
sbb
sub
cmpsb
pop
or
in
or
daa
insl
sub
cwtl
inc
imul
or
mov
dec
out
leave
aas
faddl
push
mov
jne
lods
lret
gs
or
adc
test
dec
cmp
adc
pop
cmpsb
mov
icebp
nop
jge
iret
mov
js
je
lcall
cmp
push
das
or
imul
inc
aaa
xor
ret
push
push
mov
cs
out
shrl
repz
adc
rorb
stc
fmull
sub
xor
mov
cmpb
push
mov
xlat
or
lock
push
pop
in
repnz
jg
and
shl
frstor
xor
and
mov
push
repz
sub
jne
push
push
mov
pop
in
jl
shll
call
pop
lea
jnp
cmp
sub
cmp
stos
outsb
push
dec
push
test
scas
push
lods
test
ffree
push
sti
pop
repz
cmpsb
cwtd
add
xlat
loope
or
dec
sbb
adcl
mulb
sbb
clc
and
clc
xor
mov
mov
mov
add
xchg
sti
xor
lock
cmp
sbb
gs
or
adc
push
cmp
in
cmc
add
pop
pop
jg
push
icebp
and
adc
push
jge
fwait
loop
repz
stc
jae
fs
shl
in
out
dec
ret
pop
mov
imul
mov
imul
sbbb
fldl
imul
fiaddl
and
es
adc
cmp
mov
or
push
jnp
mov
ljmp
lock
and
cmc
lea
jle
test
dec
and
pusha
movsb
xor
out
xor
or
mov
or
xor
mov
inc
mov
stc
cmpsl
sahf
int
sbb
push
mov
mov
mov
cmpsl
dec
jmp
jns
mov
imul
lret
addl
lods
adc
adc
jg
mov
call
or
xor
bound
xchg
test
push
push
push
mov
scas
lcall
fcmovbe
daa
dec
cmpb
sub
sahf
mov
mov
mov
mov
inc
mov
lret
jo
cmp
daa
push
mov
sub
lock
pop
cmpsb
mov
pusha
adc
hlt
cltd
mov
and
je
mov
push
sub
sub
mov
adc
jbe
cmp
xchg
icebp
shr
subb
sahf
push
shlb
cmc
fcmovu
push
testb
movsl
daa
sbb
in
mov
sub
cmp
test
insb
push
xor
aaa
cmp
sub
je
add
ret
sbb
mov
add
xchg
mov
sbb
push
lea
push
ja
xchg
or
xor
out
pop
mov
popf
pop
fs
dec
sub
pop
pop
push
sub
xor
add
lcall
cltd
test
rcr
imul
or
push
lahf
outsb
xor
je
mov
or
inc
jbe
or
add
sub
inc
adc
cmp
pop
lods
ret
ret
and
mov
ss
loope
or
aas
outsb
mov
mulb
nop
add
dec
sbb
lcall
cwtl
rep
add
jmp
daa
sarl
push
call
pop
push
movb
lods
dec
dec
mov
lods
fs
lods
out
cmc
outsb
xor
and
sbb
xor
mov
scas
or
lock
xchg
dec
pop
push
lret
es
pop
aad
pop
test
cmp
pop
mov
jo
xorb
imul
pushf
add
loope
lret
lret
jne
jbe
jge
sbb
scas
jecxz
sbb
pop
ret
cmc
inc
jmp
or
mov
test
pushf
test
ret
stos
int
cli
push
cs
das
call
xchg
dec
and
jns
repz
cmp
bound
add
leave
popf
jle
pusha
push
mov
and
mov
mov
es
and
push
pop
lods
dec
jp
fstps
sub
stc
ret
mov
movsb
mov
and
pop
jecxz
xor
add
or
orl
inc
push
ljmp
mov
cli
add
inc
mov
cmc
movsl
loope
orb
cmpb
fcom
xor
cmpsb
popa
stc
loope
lahf
ret
xchg
xor
mov
leave
dec
cwtl
gs
add
fcomi
arpl
xchg
lret
xchg
jbe
dec
jmp
or
lahf
cs
call
jmp
adcl
call
and
sbb
cmp
xchg
adc
xor
shll
adcb
jmp
ljmp
mov
mov
into
and
loop
arpl
and
mov
push
cs
ficompl
jmp
movsb
sbb
sbb
dec
pop
push
push
adc
and
add
jno
xor
cmp
data16
jae
test
xchg
mov
inc
dec
ret
add
inc
aas
test
mov
repnz
sti
mov
mov
std
popa
xchg
jnp
add
iret
dec
lret
test
fldcw
adc
enter
add
inc
ficoms
and
add
cld
adc
call
or
mov
dec
pop
addr16
call
xor
ret
data16
je
insl
pop
mov
out
scas
inc
loope
sbb
mov
inc
out
jl
sbb
test
test
pop
add
lcall
aas
jge
es
mov
xchg
sub
in
and
flds
test
or
mov
jecxz
cltd
mov
mov
fwait
movsb
mov
jo
popf
pop
shrb
add
es
aam
mov
mov
mov
test
into
scas
mov
mov
sbb
sbb
shll
push
outsb
sbb
test
push
cmp
push
mov
cmp
mov
mov
push
mov
pusha
in
pop
and
xchg
xchg
stos
mov
push
adc
lock
cmp
in
call
mov
pop
jae
sahf
icebp
and
push
pop
insb
inc
xchg
xor
add
out
int
cmp
jae
mov
xchg
push
push
jne
ror
sbb
lea
adc
adc
mov
dec
adc
mov
mov
xchg
cmp
sub
fsubs
fnsave
fscale
inc
jo
dec
mov
dec
dec
inc
push
push
out
xchg
xorl
lods
xor
pusha
rcl
shl
lock
das
add
loop
mov
lret
mov
outsl
pusha
into
hlt
es
and
sbb
sbb
pop
pop
icebp
push
mov
dec
or
jns
daa
ds
xor
or
jmp
pop
jno
stos
and
fldcw
fwait
push
jns
cltd
fidivrs
inc
mov
add
xor
insl
cli
fstpl
push
inc
sbb
push
nop
es
sti
xchg
scas
jecxz
xor
cmp
jnp
in
psrlw
mov
and
test
xchg
sub
pop
inc
mov
rorb
in
mov
je
cmp
dec
cmpsl
pop
push
xchg
iret
xor
cmp
mov
jo
ljmp
lcall
inc
mov
mov
mull
vpunpckldq
adc
xchg
lret
out
aas
mov
inc
mov
adc
mov
call
pop
cmp
push
or
rcrl
das
xchg
add
xor
cmpsb
xor
sub
inc
add
cltd
outsb
fildl
lcall
fsubrs
jno
shll
icebp
mov
lret
pop
lock
jb
mov
sub
icebp
push
mov
je
xorl
cmp
aas
jmp
push
out
xchg
and
sti
pop
aad
mov
fcomi
xchg
out
leave
pop
inc
ret
lcall
out
push
nop
les
fldenv
das
mov
cmc
out
inc
sub
lret
dec
and
mov
push
vcvtsd2si
push
jae
pushf
mov
fs
sahf
sbb
mov
jae
or
addb
clc
push
in
pop
xlat
mov
loopne
jae
or
mov
cmp
jle
rorb
mov
dec
roll
push
jle
pop
xlat
xor
mov
shll
sub
adc
sahf
bound
sbb
inc
mov
sbb
mov
adc
cltd
mov
ret
or
xchg
pushf
pop
mov
add
icebp
jp
js
les
out
and
lcall
es
cmp
sub
out
lret
or
in
cli
mov
daa
test
sbb
dec
mov
or
js
in
sbb
cmp
aas
mov
cmp
imul
sub
sub
mov
mov
dec
adcb
das
aam
dec
cmp
jecxz
and
or
in
call
cmpb
shr
gs
push
movsb
cli
jmp
xchg
mulb
out
pop
cmp
mov
lods
scas
dec
inc
fdivr
sbb
adc
movsb
xchg
push
imul
lretw
icebp
xchg
add
adc
mov
sbb
ret
sahf
mov
arpl
fildll
pusha
outsb
iret
inc
arpl
movsl
pop
aas
out
test
imul
cmp
les
add
mov
test
sub
dec
aaa
adc
rorl
inc
ss
fsubl
int3
add
add
jecxz
scas
stc
ja
xor
xor
dec
push
push
cmp
adc
ret
jecxz
icebp
icebp
dec
inc
xchg
and
and
decl
and
nop
inc
xchg
cli
sub
movsl
insl
push
cmp
xchg
sbb
std
out
cli
incb
sub
std
out
insb
xchg
lods
ja
leave
sub
jg
out
divb
repnz
push
fsubrs
or
push
ret
dec
gs
adc
sbb
jmp
popa
sub
outsb
ljmp
mov
mov
ja
mov
cmp
inc
xor
inc
aad
imul
mov
jae
jge
mov
popf
daa
sarl
cmpsb
aaa
rorl
dec
xchg
shr
lock
sbbl
stos
inc
mov
push
push
sarl
aam
xchg
rcrl
add
or
mov
ret
cmp
fiaddl
and
sub
xchg
xor
xchg
iret
enter
lcall
pop
hlt
push
ss
add
jmp
sti
je
jg
test
xchg
jp
mov
shlb
mov
pop
xor
sahf
adc
push
sbb
jns
sub
stos
std
clc
clc
arpl
inc
pop
std
jp
ret
push
cltd
xor
mov
adc
outsb
xchg
jo
add
or
bnd
pop
push
dec
push
fcmovnu
xor
xor
mov
dec
inc
mov
sbb
mov
insl
addl
and
inc
das
leave
enter
adc
push
adcl
adc
add
cltd
lods
stc
push
outsl
repz
fiaddl
xor
out
movsl
sbb
inc
loope
jl
loope
lahf
xchg
cld
std
mov
gs
std
and
les
in
jle
cmc
shlb
arpl
out
or
lods
fimull
lret
lret
or
xchg
in
jle
fidivl
xchg
or
aam
ds
pop
jns
test
mov
pop
push
hlt
xor
jmp
cmp
lea
imul
mov
mov
int
js
mov
mov
sar
imul
or
pop
jl
and
adc
sub
or
cltd
fwait
pop
iret
push
flds
fcmovnb
fmul
and
bound
pushf
scas
mov
jge
imul
push
shlb
fbstp
mov
xchg
pop
xor
je
pop
stos
jg
aad
into
popa
mov
and
dec
inc
out
inc
loope
inc
icebp
rol
out
mov
mov
inc
jne
inc
sbb
mov
int
xchg
mov
repz
loop
push
ret
adc
int3
insl
or
inc
mov
cmpsl
data16
repnz
js
loop
mov
cmpsl
mov
xor
cmp
cmpsl
jns
adc
pop
pusha
jnp
inc
mov
movsl
lret
repz
aam
repz
pop
sahf
fwait
sbb
adcb
mov
cli
nop
fists
mov
arpl
lods
adc
xchg
aaa
popa
pop
clc
jl
ss
xchg
mov
repnz
mov
sub
out
xor
jg
mov
movsl
or
pop
lock
out
xchg
xor
stos
std
in
jno
adcb
add
jg
sbb
mov
int
fnstcw
sbb
ja
push
and
cmp
mov
insb
xchg
shlb
xor
pop
fs
popa
int
sub
sbb
xor
ljmp
and
jmp
sbb
xchg
test
int
mov
inc
xor
popf
mov
push
pop
pop
mov
in
ret
mov
cmp
pop
inc
ljmp
push
or
daa
imul
mov
xor
mov
dec
adc
es
jno
pop
in
xor
ret
mov
lea
popf
and
mov
shl
lods
addr16
in
shrb
push
add
je
mov
mov
add
mov
cltd
pop
mov
aam
jmp
pop
mov
pusha
mov
iret
ljmp
mov
outsb
sti
jmp
mov
add
lea
jno
shl
xor
cmp
aas
xchg
aas
pop
call
daa
imul
sub
push
insl
es
sub
sbb
or
repz
call
clc
and
jnp
dec
out
fisubl
into
leave
xchg
xchg
out
loope
insl
mov
popf
stos
xchg
jns
aas
scas
das
push
cmp
in
test
lea
aaa
adc
sub
popa
push
or
js
fsub
and
popa
sahf
jae
and
js
mov
inc
lods
fimull
jbe
aad
dec
jg
jle
jecxz
pop
adc
scas
popf
repnz
dec
arpl
lods
das
or
xchg
pop
sub
cli
sarb
mov
je
dec
mov
push
inc
ficoml
loopne
dec
scas
cmpsl
ds
mov
xchg
pop
add
cmp
mov
mulb
mov
fstpt
jne
xchg
aad
inc
mov
cltd
pop
addr16
and
in
sbb
in
fcmovnbe
sbb
adc
outsb
jb
mov
sub
scas
adc
inc
pop
mov
out
or
push
leave
cmpsl
neg
cmpl
subb
fisubrs
xchg
and
xchg
or
fcoms
gs
mov
pusha
jns
je
mov
push
lds
imulb
mov
jne
push
mov
xchg
dec
jno
scas
sti
notb
fstps
fldenv
test
outsl
jmp
mov
jno
repz
sbb
lcall
mov
mov
mov
cwtl
mov
inc
cmp
mov
addr16
clc
rcrb
cltd
in
sbb
cmp
sbb
dec
roll
sbbl
add
fcompl
mov
and
push
stc
cmpsl
add
jns
insb
jo
ja
inc
mov
adc
mov
add
cli
movb
in
dec
and
rolb
mov
sbb
dec
push
add
dec
imul
cmp
pop
fcoml
cmpsb
ds
mov
lret
jecxz
gs
dec
jnp
dec
pushf
inc
inc
ss
pop
call
cmc
cmp
lret
test
dec
push
inc
divb
das
pop
lock
or
daa
cld
add
mov
sbb
add
jmp
inc
jg
inc
ss
iret
and
xchg
pop
jle
addr16
daa
dec
nopl
filds
mov
xchg
fists
mov
daa
shlb
pop
aad
in
imul
pop
test
dec
lahf
mov
xor
fisttpll
rorb
and
push
jno
sub
xor
pop
popf
popf
neg
jg
push
mov
test
das
push
iret
enter
icebp
lret
jl
dec
lods
sub
lds
dec
push
jg
push
rorl
push
mov
clc
xchg
push
arpl
sbb
je
push
or
add
shlb
scas
js
xchg
sahf
mov
mov
pop
push
movsl
sarb
dec
stos
mov
mov
dec
ret
mov
mov
sbb
cmp
ret
mov
pop
cmp
lahf
out
ljmp
scas
outsl
roll
std
push
pop
fimull
ss
inc
test
pushf
lret
sti
out
add
shll
jbe
iret
adc
pop
mov
cmp
push
mov
bound
in
scas
add
popa
mov
sbb
and
jg
inc
cmp
iret
mov
sbb
jecxz
rcll
dec
subl
dec
out
divb
mov
push
test
lsl
int
mov
inc
nop
cli
call
subb
and
sub
shll
xchg
ljmp
notl
aad
lahf
push
scas
jl
hlt
jns
into
pop
lret
add
mov
sub
into
in
xchg
lahf
dec
sbb
cs
mov
and
dec
insl
and
mov
daa
dec
or
pop
add
aaa
sub
lods
es
mov
or
mov
dec
mov
stos
mov
in
sarl
repz
fidivrl
pop
lods
cmp
add
lahf
adc
mull
add
add
sarl
mov
pushf
xchg
cmp
ret
mov
adc
and
pop
mov
lahf
nop
stos
stc
jne
fcomps
adc
jno
cld
arpl
test
or
or
dec
test
sbb
decl
stos
rolb
push
push
jne
dec
xchg
dec
mov
cltd
fs
mov
xor
movsb
insb
add
cltd
inc
mov
leave
xchg
xchg
cmp
outsb
pop
js
out
mul
xchg
test
fbld
enter
out
adc
call
jg
push
cmpsl
or
hlt
mov
mov
fists
mov
mov
pop
pop
xlat
adc
fstpt
mov
gs
pop
add
jns
xor
pop
dec
imul
cli
enter
jl
mov
loopne
sbb
push
fidivl
pushf
lret
mov
jmp
mov
cld
push
mov
pop
add
mov
aas
and
lcall
loop
fistps
push
lahf
cmp
push
inc
pusha
jmp
pop
mov
xchg
leave
pop
ret
pop
xor
add
adc
jg
inc
push
mov
mov
xor
shrl
aam
mov
jnp
test
jge
push
jae
stos
lods
push
outsb
dec
cs
mov
xor
mov
pushf
xchg
cmp
repnz
cwtl
pop
jmp
test
lods
dec
push
out
jno
das
daa
repz
scas
push
cltd
lcall
andl
lods
push
mov
popa
or
mov
push
je
push
push
mov
jne
dec
sbb
movsl
leave
cmp
mov
sub
adc
push
cld
fs
add
icebp
push
adc
cmp
popa
scas
inc
stc
push
pop
push
push
dec
mov
fisubrs
xlat
fwait
test
xor
push
xchg
aad
nop
stos
enter
or
jns
rcl
add
cmp
or
or
lcall
fisubs
pop
arpl
in
add
popa
addr16
fisttps
dec
enter
mov
mov
je
mov
mov
or
out
mov
es
push
outsl
xchg
mov
xchg
and
flds
or
xchg
xchg
roll
dec
jecxz
out
push
xor
aam
jno
mov
in
or
addb
jo
int
mov
xchg
sbb
mov
jp
or
stc
mov
sub
dec
sbb
pop
movsl
outsb
dec
push
std
jo
sahf
cli
out
lret
test
push
into
pop
shr
out
push
lods
xchg
bound
movsb
lock
fwait
xchg
leave
fs
xor
adc
pop
xchg
jae
jge
call
sub
movsb
out
ret
adc
mov
sbb
arpl
mov
add
jp
adc
xor
xor
dec
lods
lahf
or
adc
dec
jg
clc
and
sub
push
add
scas
fldenv
xor
insl
ds
aad
cmp
xchg
mov
repnz
in
mov
dec
aaa
mov
test
push
mov
mov
mov
adc
ficomps
push
gs
push
xchg
negl
push
rolb
sub
rolb
mov
shl
scas
push
mov
out
pop
mov
dec
fisttps
push
enter
add
sbbb
cmp
pop
sub
adc
mov
mov
sbb
cmp
rcrl
pop
cmpsb
xor
in
nop
ljmp
cld
shll
push
push
jge
mov
pop
ror
add
mov
push
jp
das
cwtl
jno
out
dec
mov
dec
or
mov
lods
jbe
incb
xor
pop
or
mov
pop
cld
ror
xchg
add
and
push
inc
add
mov
aam
add
movsb
dec
push
shlb
push
fildl
popf
dec
popf
sub
insl
nop
xchg
int3
xor
inc
jne
gs
fcomp
pop
push
jl
mov
mov
test
scas
jg
das
je
inc
test
adc
sub
inc
ret
in
mull
sbb
xchg
push
pop
fdivp
jae
mov
sbb
jae
ljmp
push
xchg
cwtl
cltd
leave
push
outsb
lahf
sbb
dec
inc
enter
mov
pop
dec
iret
sub
pusha
dec
jne
xor
pusha
cmp
xlat
push
fs
fucomi
mov
lock
jns
sbb
xchg
cmp
dec
add
or
mov
pop
cmp
stc
push
mov
adc
pop
mov
jle
int
mov
sbb
fcoms
mov
ja
ljmp
dec
mov
and
js
lret
xlat
flds
stos
push
mov
dec
leave
xchg
movsb
test
push
cli
jl
push
inc
enter
out
andb
sub
in
pop
xor
inc
into
sahf
imul
pop
fldenv
pop
sbb
adc
arpl
scas
inc
ljmp
jnp
sub
xor
push
xchg
add
or
jg
fwait
mov
flds
outsl
imul
jnp
mov
xchg
es
outsl
mov
xor
in
lea
mov
push
outsl
jl
or
dec
jecxz
push
test
scas
lahf
sahf
push
js
js
jne
test
jecxz
sub
xor
push
js
jl
jp
cmp
rcl
jbe
push
cmpsb
mov
int
or
iret
push
cld
cmp
stc
jg
mov
push
dec
inc
mov
push
mov
lods
jge
mov
int
or
jnp
rcll
addr16
inc
shlb
clc
adc
inc
pop
mov
jnp
adc
std
test
push
sbb
xchg
mov
mov
out
test
out
xchg
jno
js
jns
xchg
jns
mov
in
loopne
and
xchg
popf
repnz
and
sahf
xor
cmp
mov
cmp
mov
outsl
scas
xchg
fdivl
stos
pop
call
fst
shll
mov
pop
aam
pop
and
popf
fs
sbbl
cmp
gs
sarb
mov
das
mov
cs
aas
jg
xchg
fcompl
or
loop
adc
xchg
loop
fnstenv
cli
mov
pop
xchg
push
scas
inc
jnp
test
je
stos
jno
mov
mov
sub
fsub
daa
int3
dec
arpl
inc
mov
mov
xchg
iret
out
ret
inc
andb
dec
repnz
lea
xor
ja
iret
pop
inc
inc
sti
pop
stos
mov
xchg
stos
xor
clc
pushf
sub
iret
adc
out
ss
sbb
mov
cmp
dec
mov
fsubr
xchg
lds
mov
push
lcall
nop
sbb
push
dec
clc
sbb
cmp
rcrb
mov
js
imul
cltd
xor
icebp
adc
xor
jbe
fs
sbb
sub
xchg
mov
cmp
dec
sbb
imul
pop
mov
into
lods
xchg
sbb
pop
test
repnz
pushf
mov
mov
xchg
push
add
cli
mul
jnp
jmp
mov
push
or
xor
pop
out
mov
and
jge
into
aas
in
mov
lret
and
ljmp
cld
rolb
rcrb
jo
mov
cmc
mov
in
pop
out
clc
lahf
and
jo
lea
mov
pop
arpl
fisubs
into
mov
cmp
or
lea
mov
stos
adc
add
aaa
dec
inc
out
enter
sti
rclb
stos
das
pop
add
pop
sbb
imul
call
scas
lret
adc
addr16
fmull
cli
or
lods
and
outsb
inc
cmp
cmp
pop
aas
fwait
push
cltd
fists
imul
jno
in
cmp
pop
dec
adc
jmp
jg
push
and
rcll
jns
add
adc
sbb
test
or
sub
jns
inc
push
andb
ds
aad
sahf
fmul
arpl
jb
icebp
lret
mov
in
aas
or
fdivrl
sub
enter
aas
push
pop
xor
xor
std
dec
sbb
or
gs
setbe
jmpw
jo
mov
popa
and
jmp
jp
dec
mov
add
lods
adc
jno
loop
arpl
push
shrl
pop
xor
movsl
jae
mov
sbb
int3
jecxz
mov
out
mov
outsl
cmpb
push
jno
add
mov
sahf
ficompl
dec
pop
mov
mov
in
insb
dec
movsl
bound
loop
aaa
sbb
and
sbb
popa
test
pop
inc
sub
test
cmc
aas
mov
gs
xor
push
mov
adc
cwtl
shlb
pop
cmp
dec
lcall
pop
rol
mov
or
cmp
and
sub
outsl
mov
add
push
nop
push
out
scas
ss
in
rcrb
and
mov
pop
pop
jge
fcomi
mov
mov
sti
or
mov
leave
xor
add
int3
xlat
cmp
out
icebp
es
adc
pop
mov
scas
push
incl
ja
dec
dec
leave
jae
jmp
xor
in
sbb
popa
push
xor
faddp
pop
imul
addr16
xor
jecxz
jl
shlb
fadds
mov
loope
in
dec
lock
in
dec
out
jo
pop
sub
aaa
sbb
mov
push
sbbl
repnz
int3
outsl
mov
sti
clc
pop
cmp
inc
dec
jge
movsb
aad
int
lods
cmp
mov
xor
mov
loope
and
inc
jbe
and
dec
out
arpl
arpl
xchg
inc
aaa
ret
mov
jb
imul
imul
jno
and
fsubs
mov
ret
mov
movsl
cmp
outsl
into
js
ljmp
in
inc
les
pop
cmp
call
add
dec
test
lods
mov
mov
popf
sbbb
ds
repz
loopne
pushf
test
push
in
rolb
dec
ficomps
ds
add
push
out
addr16
mov
adc
adc
gs
lcall
lcall
mov
outsb
pop
das
sbb
fcmovne
fcomps
adc
je
dec
test
clc
push
sub
adc
js
in
mov
mov
mov
jecxz
lahf
ds
movl
xor
mov
stos
test
sbb
push
jecxz
mov
rcll
cs
in
cmpsl
ja
or
shlb
mov
iret
test
or
xchg
icebp
xchg
test
xor
pop
xor
mov
pop
pop
pop
mov
arpl
ds
in
jnp
inc
pop
or
xchg
dec
fwait
adc
loop
je
ljmp
repz
test
push
sub
add
sbb
inc
fistpll
mov
cli
mov
push
es
xchg
jge
or
data16
mov
push
add
in
rorl
cmpsb
adc
sbb
xor
cmc
mov
push
mov
icebp
xor
or
sbb
aad
sbbl
sub
jo
adc
mov
lcall
insl
movsb
popa
adc
adc
arpl
or
jne
sbb
mov
out
push
and
insl
inc
lock
sahf
sahf
mov
jo
out
pop
and
mov
mov
sbb
xchg
mov
inc
andl
jecxz
inc
cmp
sbb
inc
and
mov
cmp
lods
dec
or
mov
mov
jge
jno
fnsave
movsb
stos
sbb
cmp
inc
jns
cmp
cmpsb
test
xchg
xlat
aaa
mov
pop
clc
call
xchg
addb
ss
pop
add
xor
adc
lret
push
sahf
adc
dec
adc
cltd
pop
jns
jmp
xor
and
lods
sub
shl
pop
test
jnp
cmp
std
aaa
test
mov
dec
pusha
mov
push
sbb
in
inc
cmpsl
xchg
cli
outsb
xlat
mov
popf
or
lcall
dec
ss
dec
insb
push
jbe
jbe
in
push
int3
stc
lock
fimull
fnsave
popa
xchg
adc
ljmp
mov
dec
popf
dec
call
jmp
mov
and
loope
pop
gs
jmp
stos
jno
inc
in
sbb
popf
rclb
jo
sbb
mov
cmp
inc
or
ss
into
push
fcmovnbe
pop
rcll
frstor
cmp
mov
pop
out
sub
nop
fidivs
mov
jecxz
push
mov
lcall
ja
in
pop
push
dec
jg
sbb
mov
and
pop
sbb
or
xchg
add
cmp
imul
sub
iret
ret
xchg
adc
mov
inc
adc
adcl
in
insb
icebp
es
fdivl
fsubrl
or
push
cmp
in
test
outsl
xor
pop
mov
rclb
scas
hlt
mov
movsb
mov
loope
mov
pop
stos
leave
or
mov
xor
xor
int3
test
xchg
jl
dec
out
rcpps
push
idivl
rol
movsl
aam
xlat
loope
stos
repnz
jno
dec
adc
sub
test
ret
jns
pusha
mov
jmp
orb
cmp
lahf
shrl
sbb
in
or
mov
sti
sbb
sbb
cwtl
es
inc
cmp
dec
test
test
pushf
push
sbb
jb
fwait
xchg
mov
or
into
or
into
sbb
adc
data16
cmc
mov
rolb
add
inc
call
mov
sbb
les
mov
push
sbb
cmp
fistpl
loopne
xchg
pusha
iret
xchg
stos
push
stos
jl
jecxz
sahf
fisubs
inc
push
push
mov
jp
inc
shrb
jae
adc
xor
push
jbe
aad
jno
cmp
aaa
and
loop
mov
int3
mov
mov
cld
imul
pop
mov
outsb
sarb
adc
inc
jae
mov
imul
pusha
push
adc
cmpsl
stos
pop
adc
sub
sub
sub
inc
jbe
cmp
and
push
or
jae
insb
xor
clc
arpl
sti
je
sub
stos
fwait
cmc
and
sahf
ficoml
shlb
jae
mov
imull
out
out
mov
xor
popa
xchg
fs
cmpsl
movsl
jl
inc
pusha
inc
cwtl
lea
push
adc
or
pop
les
pop
xorb
scas
mov
pushf
addr16
push
ja
jo
and
pop
inc
lock
in
sub
mov
jge
sub
mov
pop
out
add
push
mov
sti
lds
addr16
rsm
inc
mov
es
inc
xchg
fisttpll
shll
rorl
inc
loopne
jo
cmpsl
clc
sub
mov
fdivrl
mov
lds
repz
sub
xchg
loop
mov
mov
xchg
sbbb
jmp
sbb
xchg
cwtl
jl
orl
dec
xchg
lods
les
and
push
rclb
mov
mov
mov
iret
push
repz
cmp
inc
lds
sub
popa
inc
jae
inc
js
leave
and
pop
rep
insl
push
lods
jg
add
call
push
rcl
hlt
movsb
pop
mov
jg
dec
xor
cwtl
std
push
les
daa
inc
xchg
loopne
pop
mov
lcall
mov
pop
jns
scas
jb
subb
dec
inc
imul
mov
hlt
push
out
cmpsl
jno
scas
add
cs
mov
jge
cmp
arpl
xor
in
jmp
add
fs
mov
and
sub
mov
ds
inc
sub
test
adc
les
mov
xchg
and
sub
cmp
in
dec
pop
mov
cld
lret
pop
popa
jmp
cwtl
arpl
cmp
and
sub
lcall
shrb
sar
inc
xor
dec
inc
or
inc
ret
testl
cli
push
in
iret
xchg
mov
add
mov
jge
arpl
lods
sbb
jne
mov
sbb
es
bound
sub
out
lea
ds
dec
jne
shlb
xor
lea
adc
sub
inc
jp
addr16
xchg
fimuls
ss
xor
dec
dec
stos
shll
dec
mov
cwtl
dec
pop
into
pop
mov
jnp
roll
fcmovnu
adc
xor
data16
push
test
xchg
in
int3
mov
addl
ljmp
inc
popf
icebp
and
and
jae
cmc
inc
and
icebp
imulb
or
addr16
fcmovb
dec
sbb
jns
adc
ja
adc
and
pop
es
fstl
arpl
sbb
push
test
sub
sbbl
loope
jecxz
push
push
fstpl
shll
mov
test
jnp
fs
mov
or
dec
inc
arpl
negl
ljmp
push
scas
addr16
clc
xchg
popf
test
push
shlb
jp
mov
jbe
test
int
and
loope
jl
pop
xchg
mov
cli
je
pop
nop
scas
arpl
mov
and
imul
out
scas
push
xchg
aad
xor
xchg
fiadds
pop
inc
push
fcoms
mov
inc
sub
and
add
push
arpl
and
out
out
adc
mov
icebp
mov
into
inc
pop
cli
stos
lea
sbb
push
sub
les
adc
adc
dec
fwait
pop
and
loop
cmp
stc
xor
jbe
push
xlat
fiaddl
lds
sub
pop
inc
push
xor
outsl
push
daa
jge
mov
popf
or
mov
clc
loop
idiv
mov
popa
dec
xor
cmp
and
inc
scas
les
mov
and
and
ds
inc
lret
xor
xchg
add
xchg
and
mov
mov
test
cmp
sarl
mov
in
adc
or
rcl
or
mov
std
lds
jae
jno
push
lcall
add
scas
mov
out
adc
sub
mov
mov
ficoml
aam
jge
inc
jmp
dec
jmp
addl
lahf
pushf
fsts
out
loope
lret
push
mov
lret
shll
and
adc
in
lods
pusha
ljmp
and
ss
push
fsubs
pop
fiadds
add
mov
mov
fcmovu
ret
push
or
push
mov
adc
inc
adc
xor
rorb
push
aam
lret
and
sti
xor
popf
ret
mov
jl
cmp
popa
movsb
out
addb
xchg
ja
pop
mov
cmp
cli
mov
xchg
xor
mov
das
mov
fmul
ds
movsl
filds
cwtl
cmpsl
or
fimuls
add
aaa
out
dec
dec
int3
cmp
push
les
pop
or
cmp
mov
jbe
and
fbld
std
int
mov
aaa
inc
push
lds
fnsave
ss
xor
in
leave
cmp
jne
cmp
data16
pop
mov
or
cmc
popa
pusha
push
mov
mov
iret
test
push
mov
test
inc
cmpsb
pop
aas
xor
sbb
cmp
inc
and
movsb
xor
pop
scas
jnp
or
leave
mov
ds
sub
fbstp
jg
push
pop
pop
es
repz
push
mov
rorb
push
push
cmc
mov
sub
in
out
add
aad
loop
lods
push
mov
jb
xor
jne
mov
ds
jmp
andb
ficomps
stos
cmp
mov
clc
incl
ja
or
std
ret
adc
push
push
inc
repz
cmp
xor
outsb
jecxz
loop
mov
icebp
xchg
bound
sti
lahf
xlat
dec
dec
xlat
xchg
adc
je
in
or
cltd
sarl
fwait
jne
mov
jmp
ljmp
movaps
xchg
jmp
ja
sub
cs
cmc
testb
andb
loopne
rol
sub
jl
and
movsb
repnz
imul
inc
pop
ljmp
jns
xor
or
jbe
movsl
jecxz
pop
adc
movsb
xor
lahf
add
cmp
int3
inc
rorl
cmpsl
sub
push
out
mov
popf
cmc
mov
pop
or
jae
jmp
mov
inc
sub
pop
insl
mov
xchg
test
adcl
mov
add
fisubrl
inc
jecxz
aas
sub
pop
dec
jno
or
and
mov
js
push
xchg
pop
ret
mov
int
mov
or
or
pop
cmove
fsubrl
out
mov
dec
dec
mov
int
xchg
lods
in
add
mov
mov
xchg
dec
cmp
mov
mov
cmp
ss
mov
push
pop
mov
inc
inc
lea
out
imul
pop
add
sbb
outsb
fdivr
lea
push
out
push
scas
jmp
cmp
in
movsl
push
popa
lret
xchg
ficoml
aas
outsl
push
outsb
stos
stos
rol
hlt
add
hlt
cmp
ss
sti
loop
fisubs
test
in
push
xor
pop
jbe
push
cltd
mov
ret
dec
clc
lds
xor
bound
mov
sar
mov
push
das
mov
pop
xor
mov
xor
sub
test
push
mov
add
lock
xor
mov
mov
leave
push
popf
jbe
mov
fmulp
aaa
rcr
in
xchg
fdivs
incb
lahf
xor
and
ss
jge
jne
dec
sbb
cmpsl
lret
test
xor
insb
pop
push
shlb
xor
addr16
xor
xchg
add
lcall
push
icebp
jg
fs
mov
push
sub
leave
sbb
mov
lds
lds
sti
xor
jecxz
xchg
mov
cmp
fimull
insl
das
fidivs
jae
jge
popl
test
iret
adc
pop
mov
xchg
sbb
cmp
mov
xchg
xchg
sub
mov
fnstsw
andb
xor
imul
into
dec
loopne
push
mov
test
or
out
movsl
idivb
leave
dec
rcll
cli
pop
stc
push
push
adc
xchg
cmpsl
scas
and
and
leave
nop
mov
inc
out
sti
enter
fucomip
lcall
cmp
inc
mov
fimuls
stc
les
shlb
mov
inc
add
xor
mov
outsb
push
or
std
out
rolb
dec
es
in
gs
mov
outsb
xor
jle
pop
jb
adc
sbb
add
push
test
push
and
lds
outsb
iret
pop
mov
stc
movsb
test
and
icebp
push
in
loope
rcrb
mov
scas
lock
inc
dec
aas
aad
cmp
inc
xchg
sbb
jne
aaa
push
and
jae
mov
dec
lods
mov
repz
and
lahf
in
ror
add
sbb
cmpsb
test
xchg
pop
imul
mov
push
and
fisubrs
test
and
mov
cmp
fsubrl
pusha
mov
mov
and
arpl
or
inc
pop
rorl
adc
push
push
push
jmp
pop
jl
ss
es
test
xchg
lea
add
pop
test
cmp
push
ljmp
pop
nop
out
mov
out
repnz
inc
sbb
clc
in
into
cli
pop
scas
pop
mov
movsb
inc
add
mov
roll
xchg
andl
mov
jge
call
aaa
xchg
mov
aad
pop
pushf
cmc
aas
movzwl
lds
pop
xchg
mov
xchg
add
stc
fdivrl
imul
scas
jno
sub
push
scas
add
push
sti
imul
es
stc
mov
add
stos
inc
dec
in
fsubl
push
js
push
repz
aad
jns,pn
sub
sub
push
in
mov
mov
pop
inc
and
mov
roll
fisttpll
popa
jge
cltd
pusha
and
stos
cmpl
cmpsl
mov
pusha
les
inc
sbbl
orl
imul
xchg
or
sbb
imul
lcall
jmp
jl
fisubrl
sbb
test
lods
fisubl
adc
rclb
jmp
jge
cmp
inc
adc
add
movsb
movsb
add
js
mov
mov
xor
aam
test
cmpsl
scas
inc
insb
pop
lcall
in
mov
mov
rcr
fidivl
adc
aaa
dec
ficoml
ljmp
fucomip
and
out
fdivl
inc
mov
and
push
lock
add
dec
dec
rcll
ret
mov
aaa
arpl
ljmp
adc
sarb
mov
ja
push
pop
movsb
or
dec
mov
lret
xchg
push
xlat
test
test
jg
xor
inc
and
mov
sti
dec
cli
lods
inc
ja
jge
es
loopne
gs
int
or
test
cwtl
out
mov
jno
lods
mov
add
popf
fcmovbe
test
pop
add
mov
xchg
jnp
add
push
mov
ljmp
jnp
sub
bound
adc
loopne
pop
fwait
or
movsb
fs
sbb
xchg
dec
enter
push
mov
mov
mov
movsl
dec
lods
popf
mov
outsl
mov
sub
and
test
mov
add
and
push
mov
popa
scas
jo
aam
inc
inc
mov
fadd
or
js
andb
in
mov
inc
dec
fsubrs
outsb
lds
mov
jns
and
orl
jge
sub
roll
or
shlb
jge
movsl
sub
sub
cmp
mov
mov
sub
arpl
out
in
out
ja
in
cwtl
push
mov
xor
imul
xlat
xchg
movsb
adc
xchg
lcall
dec
pop
clc
push
mov
fs
dec
in
push
pop
and
in
mov
dec
add
fs
pushf
shl
and
mov
pop
push
mov
cmp
in
es
xchg
flds
sahf
inc
stos
pop
cmpsl
scas
fs
xor
test
jbe
cmp
or
mov
js
mov
cmpsb
int3
pop
push
jbe
cli
movl
addr16
movsl
das
scas
mov
std
add
xchg
mov
pop
dec
testb
addb
pusha
adc
and
xor
pop
xor
push
pop
jae
adc
aam
jle
cld
pop
addb
or
sbb
jns
add
call
sbb
scas
fwait
cld
sarl
fnstenv
in
or
lock
cs
inc
ret
or
jge
jnp
pushf
and
shrb
mov
xor
sbb
jns
mov
pop
clc
pushf
stos
inc
jge
dec
insl
cmp
popa
push
loopne
and
jno
insl
cmpsl
mov
std
dec
ss
dec
mov
mov
push
shlb
imul
aad
dec
shrb
pop
ret
sub
xchg
and
pop
lods
xor
pop
ud0
rclb
aam
jae,pt
sbb
xor
fisubs
lret
leave
xchg
imul
into
cmp
orb
popf
adc
testl
cmp
and
ds
fidivrl
mov
cmp
mov
xor
ret
imul
xchg
inc
mov
stos
dec
or
out
and
shlb
je
sub
inc
mov
ljmp
imul
xchg
repnz
mov
mov
adc
cltd
push
pop
ss
sar
sbb
mov
outsl
mov
aas
jl
adcl
add
xchg
dec
add
jne
rcl
sub
mul
adc
daa
adc
mov
mov
dec
mov
and
mov
mov
inc
aaa
daa
and
lods
call
mov
scas
sbb
adc
popa
call
xor
adc
adc
imul
mov
outsl
ja
nop
mov
cmp
outsb
mov
scas
lock
adc
pop
mov
cmp
in
and
hlt
add
lds
scas
cltd
pop
fsts
sahf
push
mov
repz
push
test
mov
bound
lods
pusha
call
dec
test
inc
rol
mov
fistps
mov
stos
pusha
cltd
mov
fwait
sub
bound
push
xor
push
testl
hlt
nop
jle
mov
mov
jl
hlt
in
cwtl
adc
stc
push
dec
inc
dec
popf
mov
in
jae
std
iret
pop
mov
mov
jl
mov
xorl
sbb
into
pop
lcall
mov
cmp
addr16
dec
pop
xchg
jno
xchg
cmp
inc
adc
jae
sub
lods
mov
cs
xchg
and
mov
mov
xchg
sti
xchg
mov
mov
push
mov
push
xchg
in
pop
jbe
out
add
scas
aaa
cltd
jp
fistl
mov
mov
fistps
daa
xor
xchg
inc
cmp
std
cmp
sahf
push
xor
sahf
js
insb
mov
test
popa
mov
loop
call
mov
in
popa
outsl
xor
lret
pop
mov
cmc
xor
push
jp
xor
jnp
cmp
scas
push
inc
das
inc
loop
pop
je
sahf
lret
ret
cmp
cmc
push
jg
imul
inc
sbbl
movsb
jl
pusha
rorl
mov
stc
imul
or
cmpb
pushf
cmp
mov
bound
xchg
rcrl
fidivrl
insl
sub
stos
push
add
popa
ffree
add
orl
dec
push
push
fadd
out
jnp
rclb
and
cld
and
push
in
mov
mov
jp
outsl
lcall
hlt
or
inc
mov
fnstsw
mov
xchg
repz
movsb
sub
and
inc
lret
push
stc
scas
repz
mov
sub
lahf
mov
test
into
lret
xchg
mov
cli
sub
loopne
cmp
fs
push
mov
and
sub
pusha
fiadds
lret
les
adc
dec
js
add
and
iret
xchg
mov
add
int3
in
mov
jae
leave
clc
call
std
lret
mov
lahf
cmp
pop
call
xor
aam
pop
cltd
lcall
sub
dec
mov
adc
mov
push
call
arpl
jecxz
subb
dec
daa
and
or
sbb
cmp
cmp
inc
pop
sub
jl
mov
jnp
jae
lret
out
and
pop
sbb
cld
inc
lret
cmp
mov
mov
ljmp
jmp
mov
ljmp
xor
adc
add
out
mov
xchg
aad
cmp
hlt
push
dec
cld
fsubr
dec
push
push
push
cmp
or
jbe
insb
mov
in
mov
pop
jbe
lods
rolb
cmp
imul
cmp
xchg
xor
test
mov
jnp
push
ss
cmpsb
jo
orl
lahf
hlt
sarl
add
jo
inc
pop
add
jo
aaa
mov
xor
inc
mov
scas
inc
dec
cmp
std
shlb
push
and
aas
jb
test
sub
neg
dec
jl
pusha
xchg
pushf
neg
test
inc
roll
dec
negb
xchg
pop
rolb
in
lds
adc
aaa
adc
push
xor
loopne
mov
aam
movsl
test
mov
in
lea
aaa
sub
xchg
sub
xchg
push
mov
rol
or
jmp
cmpsl
dec
scas
pushf
mov
pop
in
out
inc
push
cmp
rcr
aad
dec
push
cmp
jmp
mov
mov
fsts
dec
xor
inc
or
jle
sub
add
or
jge
jge
pop
adc
fcmovne
aaa
test
hlt
mov
test
inc
pop
mov
movsl
fdivr
sub
out
sar
rcrb
mov
gs
fs
cmpsb
test
mul
jmp
movsb
bound
sbb
xor
sub
in
cmpl
jg
mov
and
sub
xlat
loope
mov
popa
aad
jecxz
loop
test
or
adc
sar
mov
jno
sbb
mulb
adc
in
mov
mov
int
and
dec
lock
test
lcall
jp
mov
dec
pop
mov
popl
sbb
adc
jmp
add
enter
cs
push
xor
mov
mov
bound
mov
xorl
jmp
inc
mov
sub
into
fwait
xchg
popa
dec
imul
mov
movsl
jns
lods
shll
scas
lods
cmpsb
or
adc
push
out
cmp
cwtl
iret
dec
imul
test
cltd
mov
mov
pusha
lret
add
out
sub
sbb
fs
leave
shrb
dec
ret
repnz
fidivl
out
les
fstl
ficoms
xorl
sar
in
xchg
and
mov
bound
in
cmp
aaa
and
jge
std
out
jne
mov
xchg
push
xchg
sysret
jmp
dec
mov
and
ret
in
ja
xchg
addl
fsts
gs
mov
adc
mov
cmp
loope
push
movsl
mov
icebp
and
mov
mov
add
lock
out
inc
jmp
ja
mov
push
ret
imul
dec
into
out
mov
test
mov
fcomps
pop
hlt
lcall
mov
pop
cwtl
inc
cmpsl
out
xor
sbb
xchg
mov
xlat
mov
inc
sbbb
test
dec
push
paddusw
pop
cmp
xchg
shll
adc
xchg
cmp
iret
rcl
movsb
adcb
dec
cmp
cmp
jbe
mov
ffreep
add
jo
in
xchg
mov
int
inc
mov
test
sub
jne
fimull
xlat
xchg
in
mov
outsb
imul
mov
dec
cmp
rcll
std
mov
aad
call
jge
cmp
adc
push
lods
push
mov
xchg
and
shl
test
mov
bound
mov
xchg
mov
jle
and
mov
push
mov
movsb
push
ljmp
pushf
and
lea
xlat
pop
pushf
loopne
fwait
lret
aam
inc
jg
out
add
sbb
rcll
adcl
add
insb
and
movsl
mov
call
mul
xchg
cli
inc
cmp
popa
sub
mov
push
and
xchg
in
adc
enter
sbb
movsl
mov
ret
jg
ret
loop
pop
cmp
dec
xchg
lods
stos
sub
pusha
into
pop
inc
sahf
cld
es
mov
push
jg
fidivl
icebp
adc
imul
inc
divb
jmp
test
or
fnstenv
pushf
add
test
mul
mov
icebp
push
jp
jl
dec
scas
cmp
sbb
xchg
mov
cmp
daa
mov
push
add
add
repz
sub
arpl
mov
and
stos
xor
insb
sbb
and
sub
shll
pop
icebp
adc
scas
sub
adc
and
sbb
insb
fsubs
out
adc
ljmp
shl
sub
mov
mov
mov
xchg
in
cmovb
sbb
in
repz
fiadds
leave
mov
into
jno
push
dec
xchg
dec
adc
push
dec
fmull
enter
cmp
inc
cmp
pushf
push
insb
movsb
mov
lds
fwait
xor
stos
jns
sbb
jnp
pusha
not
in
addr16
lret
sbb
adc
xor
mov
loope
sub
shlb
mov
xor
pusha
mov
dec
sbb
jl
sbbl
jne
cwtl
les
ss
loop
rcll
or
mov
dec
dec
mov
sbbb
adc
ja
sbb
xor
mov
or
fisttpll
les
jmp
loopne
xchg
fnstsw
aas
xor
mov
jecxz
pushf
push
ret
sbb
mov
push
mov
cmp
clc
mov
aaa
jle
jg
pop
repz
xor
inc
icebp
fidivrl
lahf
jno
pcmpgtw
push
mov
lods
loopne
push
cwtl
adc
cmp
or
or
out
enter
lret
out
add
fisubl
inc
or
and
rcr
dec
cmc
or
adc
incl
imul
pop
bound
jns
out
jbe
stos
sbb
dec
leave
dec
or
dec
cmpb
popa
jb
ds
icebp
scas
or
add
test
push
sub
jb
lahf
test
imul
mov
out
outsb
jnp
lods
test
mov
fistpll
mov
cmpb
cmpsl
and
jg
sbb
push
dec
pop
inc
pop
aaa
push
adc
xchg
rep
xchg
or
adcb
jb
dec
push
push
mov
mov
mov
into
inc
push
sub
jecxz
mov
stc
pop
lock
sub
aaa
cmc
lret
mov
cld
sbb
push
mov
pop
xorb
jno
enter
cwtl
mov
pusha
fst
arpl
mov
jg
cwtl
cmp
add
or
fimuls
stc
ja
insl
push
mov
and
cs
mov
pop
adc
fcmovb
repnz
xlat
sbb
pop
int
repz
jp
or
dec
addr16
js
jle
ja
cmpsb
cmp
xchg
mov
push
test
or
pop
cmp
orb
and
pop
xor
jle
rorl
out
icebp
inc
js
fidivs
jne
mov
pop
lods
inc
test
adc
adc
movsb
stc
xlat
xchg
jle
lods
mov
inc
cmpsb
std
outsl
mov
mov
lds
pushl
imul
loope
clc
addr16
rorb
or
fsubrl
dec
ljmp
fcomip
outsl
inc
pusha
addl
adcb
mov
xor
mov
sarb
cmp
cmpsb
pop
mov
or
movsl
test
lahf
xchg
adc
pop
lods
out
dec
sbb
add
jo
fwait
cmpsb
xor
mov
fsubrs
stc
pop
xchg
or
lock
pop
outsb
jecxz
sbbl
test
repnz
pusha
fldl
movsb
inc
inc
lea
divl
popa
int3
pop
mov
aad
in
addb
inc
test
sti
push
bound
inc
cmp
jo
lock
out
nop
ret
enter
mov
inc
jo
sub
rcrl
movl
pop
cmp
insb
movsb
xor
aam
jecxz
test
and
mov
es
insb
adc
push
jl
in
cmp
and
sub
cld
pop
js
push
inc
inc
js
and
jle
jbe
push
fistpl
mov
sti
push
leave
sbb
aas
jecxz
mov
push
fcoms
fldt
or
mov
test
jo
imulb
pop
mov
xor
in
popf
into
jge
mov
leave
insb
inc
pop
imul
dec
jl
adc
pop
inc
mov
sbb
leave
inc
cmp
fcmovu
stos
imul
iret
iret
fcoml
push
adc
push
mov
mov
insl
jp
inc
and
dec
mov
inc
mov
jb
outsb
fnstcw
push
mov
mov
push
pop
add
in
shrl
and
outsb
fs
mov
cmpsl
adc
inc
cmp
sub
iret
je
clc
and
mov
test
shlb
das
fwait
mov
aaa
push
cmp
and
sbb
lahf
inc
mov
push
push
lret
jne
cmpsl
lret
xor
jae
dec
cmp
mov
ret
jp
mov
nop
add
pop
andb
dec
and
pop
add
pop
dec
push
pop
dec
lods
xchg
jae
in
add
xchg
or
push
dec
mov
jmp
lea
js
lahf
vdivsd
sub
xchg
xor
ds
xchg
mov
data16
sarb
xchg
scas
sbb
jmp
jae
inc
add
inc
sbb
dec
jp
push
loop
rcrb
ds
in
call
aad
in
add
movb
popf
std
popf
lock
aas
aaa
or
cmpsl
jb
pop
mov
sbb
iret
rcrl
push
cmpsb
dec
rolb
pusha
xlat
mov
repz
adc
sbb
sbb
sbb
lret
das
adc
mov
mov
sti
sti
aad
push
sub
sbb
jo
jg
negl
cmp
cmpsl
pop
dec
jnp
sahf
add
test
fstp
or
and
or
fwait
xor
xor
or
xor
or
adc
push
mov
pop
mov
int
dec
mov
inc
outsb
sarl
out
jle
sbb
and
orb
inc
dec
out
push
mov
lock
xor
mov
inc
nop
add
or
mov
push
enter
add
inc
loope
and
imul
inc
sub
or
mov
clc
pop
and
leave
dec
mov
and
lcall
jne
jmp
cmp
sub
repnz
cmp
mov
shlb
pop
add
icebp
les
shl
mov
adc
push
call
ret
xlat
mov
js
and
mov
mov
add
mov
psubsb
testb
sub
jecxz
adc
adc
leave
repz
aad
pop
out
int
stc
cmp
add
and
lds
repz
cmp
xchg
xchg
sub
sub
adc
mov
fwait
out
xor
push
add
fwait
stos
decl
scas
inc
xchg
test
stc
push
mov
hlt
inc
fmul
ret
dec
add
stos
mov
dec
aad
nop
movsl
movsb
in
push
add
adc
in
push
int3
add
dec
add
inc
jns
mov
loope
in
pop
sbb
xchg
movsb
lods
pop
ficompl
xchg
repnz
mov
int3
push
inc
jns
pop
sub
lods
sub
jns
aam
xchg
jecxz
sti
pop
jae
jnp
in
or
adc
shll
int3
adc
push
imul
ret
in
sbb
xchg
push
xlat
xor
lcall
stos
cmc
test
pop
inc
fcmovne
notb
dec
rcll
pusha
fs
xchg
xor
inc
cmpsl
std
shll
pushf
add
inc
out
popf
xchg
lock
sub
out
lock
jmp
jne
repnz
xchg
rolb
test
dec
mov
cltd
das
xor
imul
pop
das
imulb
sub
ljmp
or
notb
jle
jmp
arpl
or
popa
scas
cmp
jge
jae
cli
mov
push
sbb
es
dec
daa
or
inc
cmc
mov
pop
sub
div
sub
loop
jl
push
std
add
ss
ret
xchg
femms
fdivrl
xor
mov
mov
loop
or
stos
jge
sahf
mov
arpl
adc
add
sahf
jne
dec
pop
es
and
in
push
stos
jae
mov
mov
add
stc
mov
imul
xchg
into
adc
push
adc
loopne
lock
push
lahf
push
scas
rcrl
pop
xor
jbe
sbb
mov
push
sahf
lods
inc
je
xchg
mov
sub
mov
push
jecxz
xchg
out
add
sub
icebp
pop
stos
pop
jmp
pop
jg
ret
cwtl
cmpl
pop
mov
add
stos
pop
sahf
rcrb
pop
ss
inc
insl
push
jmp
or
icebp
xchg
cmp
dec
xchg
loope
and
cmp
test
push
adc
cs
cltd
std
orb
xor
loopne
inc
fwait
push
dec
cli
scas
arpl
enter
loopne
rcl
or
mov
dec
adc
and
test
mov
fcmovnb
xor
pop
cmpsl
cmpsl
iret
xor
int3
sbb
sub
pop
mov
xrelease
inc
add
dec
pop
cltd
arpl
jbe
in
daa
inc
mov
orl
insl
and
and
pop
in
js
lods
mov
mov
cmpb
lcall
inc
gs
xchg
pop
subl
call
rorb
or
jge
fwait
inc
jbe
jle
neg
sbb
cwtl
mov
push
inc
add
fmulp
orl
add
or
jne
aas
push
pop
inc
pusha
fstl
sti
add
test
and
scas
lock
mov
cli
dec
xor
lds
and
stos
cmp
mov
dec
pop
sub
andl
shll
push
in
dec
or
mov
int3
xchg
data16
mov
inc
push
sub
pusha
jno
aam
icebp
cltd
pop
pop
mov
daa
xchg
pop
mov
mov
outsb
aas
jl
in
mov
push
cld
out
mov
add
std
nop
pop
xchg
enter
push
movlps
mov
jns
fdiv
push
add
xor
hlt
int3
sub
test
and
das
jbe
dec
bound
leave
pop
loop
and
addr16
repz
push
dec
mov
inc
insb
fsts
mov
push
dec
push
xchg
pop
pop
mov
cmpsl
pusha
lock
jnp
jecxz
aaa
fidivl
adc
frstor
cmp
cwtl
mov
ljmp
xor
and
fcmovu
pop
loopne
sub
jl
add
in
scas
add
mov
inc
xchg
mov
xchg
outsb
lds
movaps
sub
mov
loope
aaa
push
lock
push
addb
mov
lods
mov
sub
lret
xor
jle
xor
pop
sbb
jmp
lea
xchg
int
jl
ds
ret
or
call
aam
in
scas
sbbl
or
pop
xor
enter
aam
mov
fnsave
mov
mov
rol
pop
dec
and
leave
adc
out
imul
sarl
inc
push
cs
adc
into
sub
hlt
icebp
roll
mov
inc
lods
cs
clc
sbb
dec
gs
es
pop
or
stos
push
mov
call
jecxz
rorl
out
mov
stc
inc
push
push
iret
fdivl
jecxz
mov
sub
mov
adc
hlt
jb
jae
jg
out
mov
cmp
ss
mov
mov
ret
xchg
leave
ljmp
mov
push
jno
mulb
adc
cs
and
fists
clc
jb
aas
popa
push
dec
push
in
mov
scas
cmpsl
pop
mov
data16
andl
clc
mov
cmpsl
sbbl
fs
xor
sub
cmp
mov
pop
push
scas
jp
xor
mov
push
imul
push
pop
out
insb
int3
aad
rclb
add
scas
lahf
out
lods
adc
cmp
ret
xor
adc
mov
sub
sub
mov
sbb
push
fadds
dec
jnp
fwait
repnz
dec
mov
movd
cli
jns
fwait
inc
insl
sub
jle
es
rdrand
inc
pop
lret
daa
mov
sbb
pop
fdivrp
in
pushf
add
sbb
pop
orb
lds
repz
iret
pop
mov
push
ret
sbb
inc
stos
push
add
cmpsl
loopne
jg
adc
cmpsb
jecxz
aaa
jmp
imul
lds
sbb
out
adc
dec
pop
repnz
xor
and
fstpt
iret
lret
ret
jno
jg
std
popf
xor
jo
cmp
shr
enter
sub
cmp
xor
push
mov
gs
aaa
jg
jae
adc
jns
lds
xlat
out
xlat
cmp
add
into
cs
mov
ja
dec
xor
cli
sbb
inc
and
sbb
inc
add
shll
dec
sub
daa
and
jb
push
repnz
shlb
pop
je
scas
xchg
decw
sti
sbbl
inc
mov
fisubs
in
add
movsb
jno
loope
imul
int3
dec
mov
mov
movsb
push
cmpsl
add
and
insl
sbb
jne
loopne
mov
lcall
xchg
into
test
adc
dec
cmp
sub
sub
stos
orl
sti
shlb
or
add
sbb
jb
xchg
jo
cmp
out
fcomps
clc
insl
outsb
mov
or
ss
ja
test
in
inc
mov
mov
dec
hlt
lods
imul
jp
fwait
inc
lods
add
inc
rcrl
lock
add
scas
out
jbe
iret
sti
loop
lcall
fwait
or
cmpsl
ss
out
inc
mov
mov
inc
ficoms
add
xchg
out
daa
hlt
jmp
ss
or
add
in
or
jecxz
pop
cmp
mov
arpl
dec
sbb
fnsave
in
mov
xchg
and
test
push
ja
or
adc
js
outsl
insl
ror
iret
jns
push
xchg
lods
mov
stc
xchg
cltd
push
mull
imul
adc
cmp
lret
je
mov
push
std
push
sbb
jp
outsl
sbb
jo
mov
in
push
mov
sub
test
push
jg
mov
cmp
pusha
out
mov
pop
cmp
push
aam
das
lock
xchg
push
pop
pushf
pop
sbb
lret
in
jg
shl
cmpsl
sbb
push
outsb
cmp
sbb
ret
int3
shrl
in
jg
mov
pusha
iret
pop
loop
pop
mov
add
movsb
adc
adc
fs
push
jae
pop
adc
mov
push
inc
pop
mov
mov
xlat
and
sbb
xor
sub
dec
push
sar
jo
mov
lret
std
push
fldenv
push
mov
jmp
cmpsb
pop
xchg
add
adc
pop
inc
fbstp
cmp
lahf
push
mov
shl
test
addr16
int3
adc
in
call
fmul
hlt
xchg
fcoms
add
jns
and
xor
pop
sti
pushf
ret
mov
mov
popf
in
mov
rorl
emms
sbb
ret
cmc
push
xor
inc
and
pop
fistl
outsl
adcb
nop
gs
les
jmp
movsl
mov
outsl
movsb
fwait
scas
addr16
cmpsl
lret
aaa
dec
mov
sub
push
and
fisttpll
jae
dec
xor
jae
das
divb
repnz
sti
pop
hlt
insb
cmp
stos
push
cmp
sbb
cld
pop
adc
cmpb
roll
movsl
lock
jnp
xor
nop
ss
jle
mov
mov
loop
loope
enter
and
push
shrl
xor
mov
jb
push
pushf
gs
pop
int3
xlat
dec
cmp
add
movsl
sbb
jg
movsb
xchg
sbb
repnz
ds
cmc
insb
fcmovnbe
inc
aad
shl
fadds
fisttpl
lahf
jp
stc
mov
stc
xchg
xor
add
mov
push
vpshlw
xchg
fdivr
insl
into
push
xchg
dec
mov
jg
cmp
push
bound
leave
nop
loopne
daa
or
xor
jp
jb
mov
jbe
or
jmp
enter
repz
in
in
jmp
dec
xor
repnz
xlat
in
out
mov
mov
adc
clc
dec
sbb
sti
aad
dec
std
adc
xor
push
nop
bound
outsb
push
jnp
or
jbe
adc
fnstcw
repnz
mov
mov
push
mov
fs
andl
jge
int
and
loope
cmpsb
scas
divb
push
aas
daa
negl
sbb
jnp
jmp
popf
push
mov
cs
lret
jmp
pop
push
pusha
imul
rcll
sahf
push
jmp
or
sbb
sti
xchg
dec
push
pop
test
icebp
sbb
icebp
cmpsb
fsts
xchg
cmp
aas
adc
in
sti
inc
fwait
sbb
sbb
adc
push
test
inc
add
cmp
inc
fisubrs
xchg
sub
xchg
je
xor
and
jecxz,pn
ret
je
mov
add
or
sbbb
fldcw
mov
dec
jge
xor
jecxz
sub
mov
xorl
push
and
sbb
jae
testl
iret
lods
cltd
push
aas
jmp
or
pop
and
mov
lret
pop
aad
jo
add
and
test
xchg
jbe
fwait
andl
loopne
sbb
sub
jno
pop
jl
hlt
fidivrs
cmp
popa
out
xor
int3
jnp
xor
mov
pop
scas
inc
mov
ret
mov
dec
pusha
arpl
addb
fisubl
mov
add
pop
sbbl
stos
mov
adc
jbe
mov
loopne
inc
cmpsl
sub
je
adc
mov
iret
leave
jns
xchg
int3
jge
mov
mov
mov
pop
jle
cltd
loopne
shl
mov
shl
pushf
test
addb
pop
or
jl
fisubs
loope
or
imul
ss
lea
sub
stos
loop
pop
cmp
xchg
and
mov
dec
je
sbb
sub
pop
loopne
and
pop
dec
sbb
stc
cwtl
stc
inc
add
adc
xchg
push
xchg
add
mov
int3
or
cwtl
sub
dec
pop
ja
sbb
pop
push
add
aad
xor
xchg
repnz
loopne
and
arpl
fisttps
insl
inc
sbb
fisubl
xchg
mov
or
inc
push
rorb
mov
and
cmp
and
mov
push
push
jno
or
mov
call
scas
out
ret
shlb
or
cld
popa
adc
jl
ja
sahf
imul
pop
mov
pop
or
lods
jnp
lret
test
pop
cmp
and
ss
inc
add
cltd
push
aad
ss
push
call
and
mov
fidivs
clc
into
addr16
dec
pop
jg
pop
adc
inc
dec
mov
xorb
dec
sarl
or
je
sbb
ss
ret
outsb
fisubrs
cmp
cltd
es
xchg
xchg
jb
xchg
popa
mov
jo
push
sbb
mov
dec
push
bound
shlb
inc
cs
push
mov
daa
lcall
cmc
pop
call
pop
mov
and
xchg
cli
sti
das
add
in
mov
les
adc
imul
add
xor
lods
inc
ret
ret
cmp
push
and
push
cmp
and
mov
xor
fwait
in
cmp
fmuls
and
mov
adc
lahf
push
mov
dec
jo
mov
lret
inc
mov
push
add
lea
shl
mov
pop
lds
cltd
popa
dec
xor
mov
fst
and
add
sub
cltd
fsubrl
ss
xchg
es
xor
dec
jl
out
sub
addr16
pusha
rolb
or
fcom
bound
push
fldcw
sti
push
lock
mov
lods
loope
data16
ffree
leave
jb
jl
or
mov
cs
jl
add
pop
lods
out
outsb
pop
mov
pop
insb
dec
rorl
outsb
xchg
dec
jmp
add
test
out
mov
hlt
push
pop
in
sub
movq
pop
sahf
jp
fwait
sarb
movd
push
push
fcompl
mov
xchg
out
pop
sahf
jns
pop
int
fnstsw
inc
sbb
cli
pop
sbb
inc
sub
out
fsubrl
push
xor
xchg
leave
jno
faddp
cmp
inc
pop
aad
adc
jae
mov
lods
ds
mov
xchg
push
cmpsb
cmpsl
test
mov
jmp
ljmp
rcl
jo
dec
add
mov
enter
or
sbb
lret
mov
adc
repz
sub
mov
xor
xchg
cmp
lods
out
inc
repz
mov
loopne
inc
dec
je
aaa
aaa
sub
movsl
lret
and
pop
pop
adc
push
sbbb
outsb
mov
jg
xlat
or
mov
pushf
pop
into
and
dec
cwtl
mov
jns
mov
jae
test
or
setno
lea
jbe
and
mov
pop
shlb
arpl
shl
aad
mov
test
inc
out
and
xchg
cmp
dec
das
out
sub
adc
jmp
mov
xor
mov
sbb
and
mov
xchg
jmp
mov
scas
mov
es
inc
test
repz
nop
pop
pop
fldcw
xchg
test
pop
mov
adc
push
xchg
call
and
jb
ljmp
cltd
mov
jecxz
shlb
filds
sbb
loopne
pushf
pop
mov
dec
pushf
mov
jecxz
out
mov
inc
sbb
push
sbb
lcall
sub
pop
push
mov
cmpsl
pusha
xor
push
jp
mov
pop
xchg
add
cwtl
lret
cmp
jae
pop
xchg
popa
std
pop
sar
in
arpl
icebp
or
test
imul
adc
cmpsl
mov
adc
das
mov
mov
and
mov
jecxz
sbb
mov
dec
cmp
jne
cli
sbb
imul
out
sub
sbb
add
dec
in
test
into
adc
adcl
mov
lret
push
loopne
insl
push
xchg
inc
xchg
cmp
sbb
inc
or
adc
iret
testb
pop
test
imul
mov
popf
push
dec
xchg
test
mov
iret
push
adc
lret
push
outsb
test
in
sbb
rcr
xchg
adc
mov
movsl
and
push
out
xchg
pop
lea
leave
fidivs
mov
scas
inc
sub
imul
pop
mov
int
push
xor
test
add
jae
jns
fdivl
shll
cltd
jge
pushf
xchg
je
xor
lods
xchg
adc
shlb
cmp
pop
stos
fnstcw
neg
stc
mov
or
xor
mov
or
xchg
imul
insb
xor
idivb
fisubrl
cmp
and
mov
insb
xlat
xchg
push
sbb
add
negb
rol
stc
cmp
sub
jnp
lods
stos
lock
pop
shrb
jo
push
cmp
mov
mov
jecxz
inc
orw
mov
jae
scas
mov
mov
daa
jae
mov
mov
mov
subl
pop
mov
mov
jbe
inc
pop
sbb
pop
jbe
test
aas
repz
dec
testb
cltd
push
or
xchg
stc
sbb
movsl
inc
jns
aam
aad
aaa
inc
clc
cli
inc
cmp
mov
les
lods
pop
cmp
xchg
xchg
and
cmp
pop
jno
and
push
adc
popf
xchg
outsb
push
pop
cmpsb
ja
add
std
mov
sbb
insb
sub
hlt
insb
popa
inc
xor
loope
pushf
outsb
xchg
or
bound
das
in
and
sub
xor
jne
add
dec
scas
lods
stos
in
int
pop
ror
in
and
jae
or
sti
loopne
mov
fnstcw
daa
cmp
inc
sbb
nop
or
inc
neg
rcr
adc
xorb
insl
xchg
dec
test
pushf
popa
mov
mov
ja
pop
adc
push
push
xor
push
out
adc
mov
xor
adc
fwait
cli
jge
sbb
ret
rol
jp
pop
mov
loop
scas
and
int
cmc
add
je
fstpt
or
xchg
jp
in
jb
cs
xchg
xchg
pop
xlat
stos
push
out
cmpb
push
mov
xchg
lret
push
xor
jecxz
aas
dec
xchg
out
add
fiaddl
mov
or
jbe
adcb
sub
pusha
mov
shlb
lods
ret
dec
add
mov
cmp
jnp
fcmovne
pop
mov
les
inc
loop
insb
xchg
mov
dec
pop
sub
cmpsb
jmp
push
pop
and
outsb
push
aas
int3
jb
jl
adc
in
push
jnp
adc
mov
pushf
ss
scas
sub
pusha
push
test
sub
leave
inc
pop
setbe
cltd
shrb
pushf
cmp
pop
into
das
repnz
mov
inc
popf
and
fsubs
iret
fwait
lds
cmp
xor
pushf
gs
out
jle
xchg
push
mov
sub
nop
jg
mov
xchg
sbb
negb
orb
inc
nop
sbb
aam
jne
adc
out
or
xchg
jb
push
adc
mov
cli
cmp
clc
mov
sti
cmp
jmp
dec
loope
mov
clc
or
push
stos
pushf
sbb
dec
mov
imul
sbb
pop
test
test
arpl
pushf
pop
js
xchg
jnp
in
gs
fdivrs
dec
adc
imul
ret
adc
shll
dec
add
sub
mov
push
mov
xchg
push
aaa
lock
cmp
in
sub
pop
cmc
lods
push
lret
jbe
popa
xchg
test
sub
invd
fidivrs
test
shlb
sahf
pop
dec
addb
pop
fisttps
shrl
fdivrl
int3
enter
lds
sub
pop
xor
adc
sub
call
push
cmp
int
xor
dec
xor
je
or
pop
dec
in
sub
xchg
cmp
mov
push
xchg
mov
arpl
ficomps
scas
cmp
cmc
jl
loop
and
or
fsubs
js
nop
shl
ret
in
dec
loopne
mov
popf
inc
jl
mov
mov
out
repnz
add
icebp
test
mov
xchg
mov
outsl
or
adc
or
movsb
imul
sub
mov
test
and
dec
iret
lods
mov
dec
cld
adc
ljmp
mov
or
inc
jae
pusha
dec
sti
mov
cli
ss
ret
jp
mov
mov
inc
or
dec
push
popa
out
test
pop
add
push
mov
cld
popa
push
jecxz
jecxz,pt
loope
arpl
rorb
or
les
sbb
fimuls
sub
mov
inc
scas
push
jmp
sbb
sub
testl
subb
hlt
out
pop
jb
inc
repz
sub
sub
mov
aaa
add
mov
fnstcw
adc
xchg
and
jnp
dec
inc
jp
ds
jb
jne
insl
adc
mov
dec
and
stos
adc
and
je
loope
or
mov
call
mov
fistl
js
and
lret
fwait
out
loope
pop
adcl
stos
or
or
pop
xor
ds
mov
fdivs
lods
hlt
call
popa
or
into
in
mov
sbb
inc
pop
in
test
xor
cmp
dec
mov
fdivl
lcall
pop
lds
popa
leave
lahf
lcall
sbb
stc
inc
xchg
mov
adc
adc
pop
jmp
or
pop
daa
stc
inc
aad
aas
pop
popf
stc
mov
dec
pop
add
adc
in
add
out
or
sub
and
decl
mov
push
cmp
sarl
mov
sub
sti
out
test
out
or
sbb
adc
dec
insb
add
insl
jg
cmpsb
ds
lcall
push
and
pop
dec
mov
lods
jmp
iret
push
je,pt
jb
xor
stos
or
arpl
in
pop
adc
jne
jecxz
insb
push
daa
add
add
push
and
pop
push
test
jmp
lods
jno
xchg
call
insb
add
xchg
cmp
xchg
loope
aad
mov
cmp
in
add
lock
ss
pusha
add
sbb
stos
push
rolb
cmpsb
shlb
or
adc
ror
testb
inc
aad
fwait
cmp
repz
sarl
jo
in
or
xchg
dec
mov
cmpsl
ds
sti
in
je
dec
lret
or
incb
rol
test
and
insb
stc
popa
sbb
add
sarb
bound
into
das
stos
sbb
or
and
cmpb
clc
adc
pop
push
stc
rorl
inc
rcrl
add
lcall
push
pop
adc
jbe
pop
mov
das
push
cmpsb
repz
or
test
out
repnz
dec
jecxz
call
mov
bound
pop
sbb
repnz
test
or
lock
cmp
dec
rcrb
xchg
and
mov
arpl
adc
push
gs
loop
loopne
dec
jne
imull
and
xchg
scas
es
decl
pusha
shlb
jge
orl
fadds
out
sti
pop
dec
cmp
int3
stos
jle
pop
adc
mov
les
cmp
cld
stos
or
sub
cld
inc
add
add
out
push
stc
in
mov
fildl
fwait
adc
lret
stos
sahf
dec
inc
or
or
sbb
lret
or
inc
cmc
int
outsl
lods
ljmp
adc
jo
xchg
xchg
xor
sbb
xchg
rclb
xchg
add
jo
rcrl
pop
adc
xchg
lcall
fistpll
loop
adc
lods
cmp
aad
xchg
sbb
adc
icebp
dec
arpl
mov
xchg
ljmp
mov
and
lea
add
int
push
dec
outsl
mov
dec
bound
add
sarb
jbe
aas
xchg
dec
pusha
add
lahf
sbb
outsb
cld
mov
mov
adc
or
fwait
xchg
and
mov
cmc
fdivs
xchg
xor
xor
mov
je
adc
sub
pop
push
stos
cmp
je
pop
call
xlat
idivb
add
lods
enter
out
cmp
dec
inc
push
sub
inc
idiv
push
lock
sub
stc
leave
xchg
jo
mov
cmpsl
push
xorl
outsb
jle
lods
jg
test
push
xchg
or
in
shlb
aad
ss
or
dec
cld
insl
bound
push
adc
sti
xor
add
fs
jnp
shr
xorb
int3
test
outsb
mov
and
in
mov
andb
sbb
xor
push
or
push
mov
leave
outsb
hlt
imul
xchg
test
addr16
outsb
mov
sbb
pop
loopne
je
dec
pop
xor
jmp
ficompl
ret
int
push
test
stos
lret
mov
inc
leave
cmp
clc
aaa
xchg
dec
xor
arpl
test
out
jmp
xor
or
loopne
sub
push
loopne
pop
adc
and
add
outsl
mov
adc
xchg
ss
jbe
mov
clc
gs
and
adc
insl
dec
xor
sbb
dec
lcall
push
outsl
inc
cli
jp
test
push
out
or
xor
cmpsb
add
sbb
mov
es
cs
pop
lcall
mov
xchg
adc
gs
cmc
ss
cmp
enter
cmpsl
or
inc
bound
mov
dec
add
jp
push
xor
cmp
lcall
test
test
sbb
mov
lods
push
cmp
or
mov
pand
sti
sub
add
adc
lahf
repz
test
xchg
jecxz
pop
ljmp
shll
aaa
mov
adc
xor
push
inc
inc
add
addr16
mov
inc
adc
sahf
xor
push
jne
add
jae
in
mov
cmp
cmp
lahf
add
sub
ret
fstl
pop
mov
orb
dec
lahf
fists
add
std
or
mov
sub
mov
jb
or
shr
cmp
fwait
dec
and
pop
loopne
scas
jg
cwtl
jbe
inc
xor
repz
sysret
lret
leave
sub
jecxz
sbbl
aas
mov
sub
mov
add
pop
ljmp
pop
int3
stos
jecxz
sub
cmp
cs
ficoml
xchg
popa
adc
ss
mov
cwtl
lcall
and
add
lods
nop
cmp
int
sub
in
mov
addr16
test
pop
push
jl
imul
hlt
and
inc
idiv
in
and
mov
je
ret
pop
pop
sbb
xchg
ljmp
mov
dec
mov
or
xchg
sub
cli
jne
jnp
popf
mov
push
push
add
dec
jp
mov
xlat
dec
push
stc
call
dec
xor
xor
out
sub
lret
aaa
xchg
adc
push
xchg
jp
or
jno
jg
sub
rolb
arpl
sub
lock
stos
imul
leave
jne
sbb
mov
sbb
pop
in
insl
sbb
add
jae
fidivl
mov
icebp
push
leave
test
add
mov
add
in
xor
lods
jno
leave
leave
xchg
outsl
int3
mov
out
fstps
pop
imul
in
jle
pop
sbb
xchg
test
jle
mov
add
loope
mov
out
add
jo
xchg
cmpsb
int3
stos
out
lods
jnp
mov
scas
mov
and
iret
xor
sarl
inc
dec
push
inc
not
sbb
lcall
pop
iret
test
xor
push
sbb
es
or
ret
mov
shlb
or
pop
jne
shll
push
ret
xor
push
lds
popa
jae
lahf
fisttpl
add
mov
adc
sub
pop
mov
movsb
imul
movsl
jb
sub
sub
test
inc
and
shll
pop
xor
push
xchg
loopne
mov
out
pop
dec
jle
cmp
cmpsb
jb
pop
cmp
clc
lret
pop
pop
decb
mov
push
xor
outsl
jmp
xor
dec
mov
pop
out
clc
arpl
insb
nop
jbe
data16
mov
lret
decb
or
mov
mov
xchg
mov
cmp
icebp
dec
push
jmp
pop
adc
in
jmp
iret
or
and
imul
jae
xchg
mov
daa
fucomp
ds
aam
test
pop
in
adc
jmp
cmp
xor
jecxz
mov
pop
jecxz
dec
pop
add
cmp
dec
add
rcrb
inc
add
xor
iret
cmp
out
and
jecxz
fistps
rclb
mov
outsl
fiaddl
pop
jle
jno
sbb
pop
mov
push
add
adc
fsubs
ret
mov
js
jno
xor
dec
dec
int
mov
int3
mov
adc
aad
sbb
sarl
rclb
pop
shll
sbb
mov
sbb
adc
addl
jbe
fwait
sbb
fwait
mov
int
mov
add
mov
data16
and
sub
xchg
and
pushf
enter
push
ss
in
cli
jge
fistpl
clc
bound
cwtl
cmc
pop
push
jno
lret
mov
push
aas
pop
lret
mov
push
addl
jg
ret
sbb
or
mov
cmc
add
ljmp
imul
inc
iret
scas
lds
mov
int
sbb
mov
jnp
pop
enter
lea
ss
nop
scas
outsl
arpl
test
pusha
mov
sbb
pop
fsubl
xchg
inc
test
ja
xchg
dec
mov
popf
fwait
jmp
mov
push
lods
filds
mov
subl
jns
add
in
fwait
and
jmp
adc
jne
aaa
adc
notl
mov
lahf
icebp
or
int
ds
xor
cmp
jmp
rorl
je
ljmp
pop
in
ja
dec
push
add
xor
enter
adc
out
insb
mov
int3
xor
jmp
jle
test
fs
xchg
jp
xor
inc
test
into
xchg
pop
into
push
dec
mov
mov
testl
lahf
mov
pop
popf
pop
lock
jmp
js
mov
in
adc
or
fwait
or
push
test
cmc
loopne
xor
data16
bound
adc
or
ret
test
jg
push
dec
outsl
add
jo
pop
jg
mov
dec
stos
stos
and
push
jbe
cmp
popa
aad
push
sbb
enter
lahf
pop
sub
xchg
ljmp
or
sbb
push
add
lret
cwtl
mov
sahf
pushw
rol
mov
jge
cs
iret
push
and
and
jno
out
icebp
mov
push
xchg
shrl
xchg
pop
fisubrs
lahf
mov
data16
in
jmp
jno
cmp
imul
test
dec
jbe
out
and
jno
jnp
cwtl
fstp
dec
and
xchg
fs
outsb
add
mov
loope
sbb
arpl
mov
in
sub
push
and
pop
xor
jae
addl
inc
adc
xor
loop
xchg
jbe
dec
jne
repnz
mov
shl
es
add
xchg
or
cmp
sub
rol
pop
pop
mov
ret
cs
out
testb
push
in
verr
cld
sahf
pop
push
lock
loope
shll
mov
add
pop
mov
add
jle
mov
dec
jno
cmpsl
push
mov
icebp
mov
cltd
leave
lea
xchg
jns
mov
push
sub
rclb
push
add
inc
rcll
movsl
push
sub
clc
div
leave
adc
push
pop
outsb
and
lret
add
adc
in
add
das
cmc
cmpsb
jle
clc
fisttpll
sub
push
scas
pusha
mov
pop
insb
in
sbb
jl
pop
and
movsl
inc
mov
imul
pushf
mov
jp
sbb
cmp
sar
call
testl
mov
dec
mov
mov
push
popa
mov
sub
dec
add
cmpsb
inc
out
test
xchg
ja
adc
xor
jecxz
sarl
icebp
orl
mov
mov
jbe
dec
int3
cmp
pop
leave
fsubs
push
std
mov
test
push
nop
xor
test
mov
jns
rolb
fsts
push
sahf
pop
xchg
das
roll
adc
mov
push
add
int3
push
loopne
aad
cmp
mov
cmp
adc
jl
mov
sbb
inc
adcl
jb
jmp
lods
dec
dec
fwait
jle
stc
dec
mov
cmc
subb
inc
push
cld
fdivs
jl
mov
in
add
test
cmp
out
ret
gs
dec
call
jl
lock
std
fcompl
roll
push
pop
dec
daa
mov
imul
mov
xchg
sbb
jae
cmp
mov
nop
pop
iret
pop
dec
sub
jae
mov
fsts
mov
or
data16
insl
in
push
mov
and
movsb
mov
mov
ret
out
inc
enter
subl
and
test
xchg
pop
sti
cmpsb
out
pop
jle
push
scas
rol
jo
mov
fbstp
imul
fcoms
into
add
stos
pop
dec
push
aad
aad
sbb
in
out
or
imul
or
sub
mov
cmpsb
dec
ljmp
adc
fdivs
frstor
xor
pushf
out
mov
andb
mov
clc
outsb
setle
mov
or
sbb
or
imull
mov
inc
jnp
push
ret
sub
jb
in
lahf
sub
mov
nop
jge
mov
ret
inc
pop
cmpsl
pop
xchg
sbb
nop
push
dec
dec
mov
inc
mov
out
test
test
mov
inc
add
mov
aaa
inc
cmpb
scas
mov
mov
lret
mov
es
aaa
jb
dec
sub
iret
add
fs
and
jg
aad
inc
stc
lds
icebp
insl
sub
test
enter
fildl
cld
xchg
sarb
js
shll
loop
adc
adc
push
clc
push
pop
adc
inc
dec
sub
push
pop
adc
sub
mov
or
mov
ljmp
adc
xchg
adc
js
dec
pop
pop
mov
lds
lahf
repnz
push
adc
add
test
dec
mov
xchg
sub
in
dec
mov
ljmp
lods
adcl
int3
sarb
addr16
stos
pop
shll
mov
dec
hlt
mov
movsb
sub
es
jl
lea
stos
sbb
inc
mov
adc
mov
out
xchg
sbb
loope
icebp
push
dec
and
adc
fdivs
push
mov
or
aaa
adc
add
idivl
addr16
icebp
outsb
jae
lahf
gs
mov
out
fwait
adc
inc
cmpsl
ja
out
xlat
ja
add
push
aas
scas
cmpsb
rcrl
mov
call
mov
insl
call
pop
pop
cltd
mov
xor
jne
xchg
je
xchg
cltd
xor
pop
popa
cli
and
jle
js
pop
mov
pop
ja
mov
fistps
repnz
xchg
lods
push
sti
daa
jne
inc
rcrl
pop
fcoms
fcoml
frstor
inc
sbb
xchg
pop
inc
and
jo
pop
add
xor
stc
jecxz
pop
ss
jo
or
inc
mov
pop
xchg
push
je
and
pushf
mov
int
je
jmp
xor
imul
or
pop
or
pop
ret
fists
mov
adc
jno
lcall
or
mov
rclb
and
fdivl
dec
xor
push
pop
fidivl
mov
pop
popf
push
pushw
push
pop
int
into
ficoms
movsl
negb
or
lock
inc
xor
xor
iret
mov
pop
push
mov
addl
test
mov
std
das
xchg
and
mov
cs
test
mov
xchg
mov
pop
lea
push
or
jle
mov
sti
adc
popa
sbb
les
jg
adc
add
xchg
dec
inc
push
adc
mov
mov
inc
les
iret
or
adc
jg
ja
inc
mov
dec
sbb
xorl
mov
pop
jns
sub
cmp
fcoml
jnp
xor
leave
or
mov
sahf
in
xlat
fsubs
jnp
jae
sbb
das
cltd
repz
sbb
mov
popa
sub
ss
icebp
ds
out
jl
mov
mov
jmp
je
mov
lahf
push
scas
jae
jno
and
les
dec
xor
and
lods
rcrb
xchg
cld
sti
subb
inc
sbb
enter
out
out
or
pop
inc
aaa
add
scas
cmpl
xchg
mov
test
or
repz
push
bound
repnz
adc
repz
sti
cmovg
into
movsb
lcall
sub
cld
push
aad
jmp
int
sbb
arpl
fildl
ret
xchg
or
lods
mov
pop
lock
cmp
addr16
sub
xor
jp
mov
mov
inc
push
push
jne
jno
aam
jo
or
unpcklps
das
test
cmp
push
in
and
js
sub
xchg
sbb
pop
sbb
fs
jmp
pop
inc
hlt
orb
cmp
push
add
in
push
test
inc
pop
jp
outsl
insl
mov
xchg
int3
or
mov
fs
loop
xchg
shrl
pop
icebp
sbb
sub
enter
ficoms
inc
jo
push
push
popf
push
adc
mov
aad
lods
push
jp
dec
dec
repnz
jp
add
nop
pop
cmp
aad
lcall
icebp
and
dec
popa
adc
add
ja
clc
pop
bound
lea
xor
add
cmc
addr16
xor
cwtl
cmp
dec
test
and
cmp
sbb
or
out
jbe
lret
jne
ret
mov
icebp
ljmp
scas
pushf
je
imul
out
pushf
xor
enter
fidivrs
sub
and
icebp
cmc
add
xchg
or
insl
call
jb
pop
sub
sub
icebp
push
shll
js
daa
xchg
enter
jne
cmp
mov
and
cs
scas
inc
aam
pop
cmpsb
jmp
scas
and
into
pop
xor
ds
adc
pop
mov
dec
or
cmc
push
xchg
dec
push
inc
clc
mov
add
adc
gs
and
xchg
bound
hlt
and
rorb
loope
push
cmp
mov
je
insb
push
push
nop
orl
loop
mov
and
data16
popa
inc
mov
sub
and
es
loope
in
push
adc
sub
sbbl
sti
jbe
mov
les
smsw
inc
add
js
outsb
nop
xchg
sub
add
lahf
lea
pop
repnz
fimull
mov
enter
push
dec
imul
call
pop
imul
mov
sub
les
ret
test
and
mov
fidivs
sub
cmc
dec
sbb
push
call
adc
test
bound
push
mov
outsl
fmull
inc
adcl
in
les
pop
pop
mov
js
push
lcall
sub
mov
adc
into
pop
jnp
lds
dec
sub
adc
das
clc
jg
sub
xlat
add
adc
sub
in
xlat
outsl
fdivs
xor
das
jnp
cmp
xor
xchg
mov
dec
cltd
test
cli
xchg
movsb
mov
inc
repnz
or
imul
aam
sub
cmpsl
or
mov
push
push
loop
loope
lret
xor
and
sbb
aam
data16
add
cld
rol
cld
adc
sub
test
sbb
les
or
add
shr
and
arpl
cmp
xor
jmp
jns
mov
push
rorl
sbb
or
loop
lret
sarb
bound
popl
or
xlat
repnz
loope
dec
mov
fdivr
imul
mov
xchg
fistl
popaw
test
imul
sbb
sbb
mov
mov
ret
test
mov
pop
inc
rcrl
lcall
xchg
sti
jo
push
icebp
shrb
imul
push
add
ret
adc
mov
mov
aaa
sbb
cmp
or
aam
and
push
mov
mov
xlat
idiv
mov
mov
jp
out
pop
fdivr
subl
out
xchg
adc
cmp
lahf
addr16
xor
pop
mov
lock
mov
aam
cli
pushf
push
jp
xchg
fstpt
mov
insb
jmp
dec
sti
push
imul
or
dec
iret
adc
xchg
clc
jge
mov
cltd
imul
aad
push
insl
das
dec
icebp
sbb
sbb
insb
fcmove
lahf
xchg
jne
mov
divl
lock
xchg
cmpsl
and
call
push
inc
pop
push
test
push
push
mov
cmpl
mov
sbb
push
sub
movsl
fldcw
cmp
pop
ja
cmpsl
mov
mov
test
mov
xchg
sub
fstl
xor
inc
cmp
not
in
inc
loope
lods
ret
lcall
ljmp
pop
mov
and
adc
mov
cmp
inc
add
loope
mov
mov
fistl
std
popa
dec
mov
xchg
adc
inc
add
call
rclb
or
mov
xchg
test
jbe
xchg
in
mov
out
push
std
adc
out
push
add
jb
add
jmp
ret
pushf
repz
mov
gs
sbb
jbe
mov
pop
cmp
pop
movsl
ljmp
add
mov
aas
dec
or
sub
fcomps
fstpt
or
xor
jmp
flds
in
push
popf
pop
xor
and
adc
imull
jmp
and
ret
cmp
mov
push
jb
push
lret
push
loope
inc
inc
hlt
push
jnp
sbb
loopne
sbb
adc
movsb
add
inc
loope
int3
cli
addl
cld
dec
lods
mov
imulb
je
adc
pop
push
in
mov
jp
adc
xchg
test
test
sub
dec
sub
ljmp
dec
scas
push
stos
push
outsl
push
adc
lods
fsubrl
and
mov
pushf
bound
or
mov
call
ss
push
arpl
mov
cmp
fwait
push
mov
xchg
jb
xchg
pusha
fmuls
xor
negl
repnz
xor
stos
mov
arpl
or
or
or
cmovle
insb
push
pop
sti
or
dec
sub
xlat
enter
mov
sub
orb
lahf
aam
pushf
in
popa
jecxz
xor
enter
loope
insb
xor
mov
cmpsb
adc
inc
mov
push
or
lcall
mov
xor
mov
outsl
mov
in
jl
add
clc
cmp
xchg
jp
adc
adc
mov
clc
daa
loopne
scas
pop
stos
inc
sahf
mov
jp
adc
outsb
mov
pop
adc
mov
jnp
mov
arpl
push
mov
add
repnz
mov
jne
adc
push
mov
out
jns
adc
out
cmp
pushf
scas
ljmp
cld
pop
mov
dec
push
cmpsl
xchg
xor
test
test
push
cmp
sub
mov
sbbb
fnsave
mov
and
cltd
out
add
jg
cmpsb
cmp
mov
aaa
enter
or
jbe
inc
and
push
xchg
xchg
pop
bound
scas
enter
pop
pop
sbb
popa
xor
add
pop
hlt
shll
mov
hlt
loopne
jle
repz
enter
inc
add
int3
xchg
les
sub
outsb
repnz
inc
fsubl
repz
sbb
rclb
mov
in
cli
add
repz
sub
sbb
out
mov
cmp
std
inc
fmuls
loop
jnp
jle
push
cld
lods
sbbb
fsubrl
mov
jbe
dec
jo
inc
and
popa
mov
test
int
stos
push
cmc
jb
js
lods
dec
adc
mov
jg
xchg
inc
ret
sub
lret
xchg
cwtl
sub
xor
mov
sbb
inc
icebp
test
push
fsts
sub
data16
arpl
ret
mov
pop
and
lret
mov
icebp
lcall
or
jae
mov
sub
add
mov
sbb
xchg
int3
movsb
ret
mov
insb
jg
adc
scas
outsl
xor
xchg
dec
into
cmp
inc
xchg
and
push
xchg
test
rcrl
and
insb
adc
mov
addl
add
ds
mov
mov
cmpb
jbe
loope
pop
lcall
push
mov
xchg
lcall
sub
pop
mov
mov
pop
push
rolb
and
loope
mov
jl
out
push
adc
mov
sbb
loopne
divb
cmp
push
lret
cmp
ret
jge
mov
xor
sarb
mov
sbb
xchg
insb
push
mov
sub
cmpsb
inc
push
in
test
loopne
fdivrs
sbb
mov
aaa
xor
dec
pop
sub
add
push
cwtl
xchg
cltd
dec
cmc
andl
cmp
dec
push
imul
cmp
arpl
xchg
and
out
inc
cmp
insb
mov
iret
pop
mov
fldcw
repnz
adc
aam
outsl
add
xchg
mov
sub
xor
dec
gs
push
popa
rclb
or
jg
aad
outsl
stc
sbb
or
insb
cmp
or
dec
aas
dec
sahf
push
testl
psubw
loope
enter
mov
test
paddsw
lahf
sbb
hlt
xor
mov
pop
add
cwtl
mov
lret
cwtl
fcompl
push
mov
xor
xor
xchg
mov
je
push
dec
loope
test
cmp
inc
dec
insl
scas
nop
add
xchg
dec
pop
push
ja
mov
adc
or
mov
bound
or
sub
ffreep
xchg
scas
pop
loopne
sahf
mov
frstor
data16
xor
inc
fs
push
popa
jecxz
xchg
inc
mul
sbb
push
cwtl
loopne
cltd
cmp
xchg
fstps
in
iret
orb
or
pop
sbb
roll
fsubrs
push
add
std
dec
imul
pop
enter
fstps
loope
sub
int
adc
add
gs
xor
fnstcw
push
and
xlat
sar
xor
in
add
les
jle
jmp
aam
mov
and
xchg
xor
pop
inc
nop
leave
sub
fsubl
mov
fldcw
cmp
mov
adc
push
xchg
xchg
imul
jg
gs
sti
mov
pop
subl
sub
xchg
sbb
mov
pop
cmp
lret
and
and
outsb
ret
pop
dec
out
xchg
pop
fwait
roll
shlb
nop
das
mov
fbld
xchg
scas
xchg
pop
enter
cltd
es
cmp
fwait
mov
pop
lret
movsl
fsubrs
lock
out
fistpl
adc
pop
cmp
mov
mulb
mov
inc
jg
repnz
dec
jp
int
jge
push
push
mov
sbb
add
out
ret
dec
leave
cmpsb
sahf
pop
movsl
lret
adc
cmpsl
pushf
hlt
push
add
push
cmp
das
cld
or
je
lret
dec
popa
mov
or
mov
aas
and
pop
insb
nop
into
xchg
mov
mov
pop
push
xchg
push
adc
sahf
stos
rorl
cmp
or
ret
orb
lods
sub
stos
mov
or
mov
dec
mov
or
out
pop
shlb
cli
cmp
add
fwait
mov
aaa
inc
adc
imul
js
dec
js
es
out
int
sub
lds
in
lret
dec
fnsave
pop
rol
fs
lods
outsb
push
stos
stos
test
push
call
iret
nop
mov
lahf
and
and
pop
icebp
push
cmp
or
xlat
lahf
mov
xchg
mov
sarb
and
dec
push
shll
push
stc
decb
add
adc
or
rorb
xchg
xchg
mov
push
add
and
test
out
nop
push
add
repz
jg
insb
enter
jle
sbb
adc
pop
das
mov
jbe
out
fisttps
ljmp
icebp
pushf
sub
dec
fsts
xlat
inc
js
sub
sub
je
xchg
pop
push
clc
add
or
push
add
jo
mov
std
shr
shlb
out
mov
iret
pop
mov
sbb
out
in
leave
loop
jecxz
pop
xchg
outsb
enter
insl
lret
xor
mov
mov
jp
int3
adcb
mov
ret
loop
xor
jnp
mov
xor
imul
gs
test
in
cmp
and
movsb
adc
insb
daa
mov
and
mov
notl
pop
stc
shlb
xor
lods
cmp
push
and
push
pop
fldenv
fistpll
fs
pop
sub
stos
shr
mov
in
mov
or
mov
int3
pushl
movsl
jmp
adc
rclb
sub
push
adc
ljmp
mov
mov
mov
gs
pop
or
roll
enter
push
insl
add
mov
mov
mov
inc
mov
out
inc
das
dec
mov
adc
scas
jmp
in
cmpsb
sub
hlt
jnp
push
and
lods
jno
cmp
mov
aas
flds
jl
xor
icebp
sub
shlb
mov
lods
adc
int3
bnd
fistps
push
in
sub
push
popl
cmp
arpl
iret
loopne
call
lret
and
sbb
xor
pop
cmp
fsubrs
cmp
aaa
inc
pushf
sbb
push
ret
notw
aas
repz
test
inc
ss
bound
or
mov
jmp
lahf
in
mov
cmp
mov
sbb
pushf
push
push
mov
fimull
sub
nop
in
icebp
xchg
mov
sbb
xchg
insl
add
inc
sub
into
les
je
scas
jle
inc
jmp
loopne
and
add
cmp
scas
fbld
mov
fistl
jae
out
mov
mov
pop
std
movsb
rol
loop
add
xchg
out
xchg
cmp
iret
outsl
jge
cmp
cltd
sub
mov
and
push
fdivl
in
inc
mov
inc
sahf
push
jl
or
mov
sti
adc
or
sti
mov
shrb
xchg
das
dec
and
mov
repnz
dec
les
adc
push
jae
xchg
add
cmp
mov
or
jle
cmp
cmp
xor
inc
xchg
pop
sahf
jns
mov
test
in
sbb
and
cmc
mov
popa
testb
loopne
lods
jmp
cld
movsl
loopne
outsl
shll
dec
bound
in
bound
shll
jg
sbb
aam
jae
mov
stos
lahf
in
and
sbb
adc
dec
push
outsb
testb
insb
fidivrs
das
dec
push
inc
push
push
cmpsl
cmp
mov
cld
cmp
or
mov
and
xchg
daa
shl
cwtl
or
mov
sbb
adc
cld
ret
pop
pop
and
mov
lret
bound
std
or
es
pop
and
in
cli
and
mov
aam
pop
in
sbb
pusha
mov
outsb
ret
rorb
fs
test
push
in
out
into
lea
xchg
xchg
and
xchg
fildl
repnz
add
test
daa
loope
add
mov
ss
mov
push
lret
stc
repnz
loopne
icebp
mov
jnp
xchg
loope
xchg
jle
adc
xchg
stos
dec
mov
xor
in
adc
clc
andl
push
js,pn
and
cmc
xchg
cmc
pop
dec
shr
popf
cmp
add
repz
in
push
fwait
or
ljmp
aad
mov
fst
inc
loope
pop
stos
repnz
mov
push
js
mov
sbb
jmp
ss
sti
popf
fwait
mov
xor
sbb
stos
popa
loopne
jne
or
push
enter
mov
out
mov
inc
stos
push
shlb
push
mov
ljmp
sbb
lods
and
jmp
adc
loopne
in
add
test
add
mov
jmp
jmp
mov
adc
sub
jecxz
mov
aas
or
pop
lret
xlat
cmpsb
and
adc
pusha
imul
mov
push
xchg
in
add
inc
repz
jae
pop
add
test
add
xchg
add
and
les
sub
xor
inc
pop
enter
repnz
ljmp
lcall
sbb
jle
pop
pop
and
mov
jl
lcall
scas
mov
jb
dec
cwtl
arpl
inc
cmpl
or
loope
cmp
andl
loope
jnp
inc
movsb
cmp
push
or
fildl
arpl
cmpl
arpl
or
sahf
movb
add
insb
repnz
repnz
jmp
je
iret
mull
fwait
lret
jae
lahf
sbbb
jmp
jo
mov
pushf
lret
test
pop
rolb
dec
ss
cmp
mov
imul
in
jp
es
xor
push
incl
jne
adc
pop
enter
xor
jns
pop
jne
lock
orb
mov
sub
outsl
rcll
and
pop
mov
dec
cltd
dec
and
xchg
scas
call
pop
jb
push
shll
jge
push
cli
push
sub
out
mov
out
mov
sbb
ror
sbb
mov
push
cltd
jl
ret
adc
mov
fsts
jge
mov
xlat
jne
cld
lcall
add
or
sbb
pop
comiss
dec
jne
mov
mov
or
fsubr
sbb
jbe
jb
dec
xlat
movsb
call
add
imul
fldcw
push
pop
aaa
mov
mov
lahf
sbb
sub
scas
daa
dec
mov
cmp
nop
mov
cmp
scas
adc
aaa
pop
movsl
aad
inc
add
jo
pop
cld
ret
sbb
enter
add
pop
bound
jge
shll
mov
out
adc
das
mov
test
jg
stos
popa
fwait
adc
leave
call
dec
es
mov
pop
test
inc
push
lock
fsubrs
dec
or
mov
adc
cmp
push
ss
mov
and
int
fldl
stc
iret
jle
add
fistl
xor
and
fstl
jle
iret
pop
filds
mov
mov
push
or
mov
and
mov
mov
mov
into
cs
out
xor
cld
jno
adc
push
jmp
in
lock
std
stos
fwait
stos
jnp
jns
ret
mov
jns
xor
pop
xchg
arpl
ficoms
cmpsb
jns
jbe
test
shll
arpl
pop
push
sub
mov
notl
xchg
push
or
fs
and
cmpsb
dec
sbb
mov
mov
hlt
lret
xchg
aad
xchg
andl
fs
jge
mov
dec
fidivs
or
add
leave
jno
jae
push
dec
out
cwtl
fwait
adc
dec
cwtl
jp
jg
xchg
ds
fcomps
cmp
in
sub
lcall
mov
inc
xchg
test
pop
push
popf
loop
xchg
and
aam
out
pop
push
lret
cs
mov
push
inc
xchg
test
fdivrp
mov
clc
notl
jmp
aas
push
or
cmp
arpl
fs
repnz
dec
imul
ljmp
sub
lods
adc
pop
mov
mov
inc
lds
out
ret
adc
test
inc
dec
jmp
in
mov
jle
lods
sub
cmpb
arpl
mov
rorl
xchg
movb
test
daa
aam
pop
xor
mov
push
push
ljmp
loopne
sbb
fstl
aas
mov
dec
fst
mov
add
lahf
mov
cmp
xchg
push
fidivs
aad
iret
add
push
test
es
dec
mov
out
jnp
xchg
cmp
dec
clc
mov
inc
mov
jae
mov
inc
out
lahf
sub
pop
repz
push
pop
mov
cmp
aad
inc
cmp
in
nop
mov
jns
inc
das
int
lods
jmp
in
sub
clc
stos
daa
add
in
dec
xor
fs
inc
pushl
jae
pushf
scas
aam
call
in
divb
stc
ret
xor
cmp
fs
aaa
test
mov
inc
scas
mov
mov
fldl
mov
xor
jne
sub
cld
idiv
push
cld
jo
ret
arpl
cmp
inc
dec
inc
adc
jne
aas
shr
movsb
mov
xor
cltd
popa
lods
dec
sub
outsl
fdivl
adcl
inc
stos
inc
inc
cmp
cmp
or
lea
xchg
iret
lret
ret
repnz
daa
jmp
ret
scas
je
out
push
iret
stc
lock
adc
sahf
pop
imul
xchg
sahf
sub
xor
movsl
lret
int3
and
sbb
lcall
mov
mov
xor
addb
mov
lahf
lods
aaa
gs
inc
fists
cmp
addb
mov
ret
adc
cmp
adc
fistpl
push
pop
test
std
adc
lret
dec
shr
adc
inc
push
js
dec
and
and
icebp
fimuls
int3
shrb
stc
lds
inc
inc
mov
xchg
or
push
jp
xchg
push
rorb
dec
pop
gs
adc
pop
outsb
lds
test
cmp
pusha
push
and
jp
repz
pop
cmpsb
push
ss
push
mov
and
cmp
daa
pop
add
or
out
imul
xor
add
and
and
loopew
jae
dec
mov
push
push
push
jge
iret
add
sub
imulb
xchg
fadds
inc
mov
mov
lea
fisttpll
and
lods
and
xor
xchg
loopw
sbbl
mov
inc
cli
fldl
flds
sbb
and
int3
shrb
in
or
dec
jne
mov
jmp
rolb
xor
negb
scas
scas
mov
push
int3
mov
popa
sub
mov
enter
pop
cltd
lods
xchg
and
sub
push
push
rcrl
cmp
inc
sbb
cmpsb
rorl
pop
cmpsb
aaa
lock
in
mov
int
mov
mov
xchg
cmc
cmpb
lcall
stos
adc
push
pop
xacquire
pop
gs
adc
cwtl
sbb
mov
loopne
dec
std
adc
cmp
cli
xchg
push
jmp
ds
rcr
jle
sub
xchg
repz
xor
loop
push
xchg
jne
imul
lock
mov
pushf
cmpsb
or
imul
movsb
jg
and
movsb
fbld
mov
ds
rorb
int3
movsl
std
sbb
xchg
aas
pop
lods
daa
stc
sbb
sub
into
xchg
adc
adc
stc
pusha
mov
lock
cmp
or
lods
mov
movsb
addr16
sub
xor
divl
xchg
les
daa
sarb
mov
mov
lock
hlt
leave
xchg
sbb
and
xor
call
pop
adc
xchg
xchg
insl
in
push
stc
add
mov
push
pushf
setp
hlt
mov
ljmp
xor
or
into
in
pop
adc
sbb
aaa
adc
jno
aas
shl
cmp
lock
ja
sub
or
dec
mov
push
pop
mov
cmpsl
int
stos
cmp
mov
cmp
pop
clc
xchg
push
pop
mov
imul
inc
xlat
aam
das
jp
iret
scas
and
dec
sbbb
fistpl
call
and
imul
cmp
fnstsw
dec
xor
ficompl
es
movsb
mov
mov
imul
sub
rcrb
push
cmc
jg
mov
and
and
scas
lods
sub
mov
inc
ret
addl
aaa
loop
jo
sbb
movsl
addr16
scas
sbb
neg
hlt
jmp
adc
rolb
mov
xchg
xor
daa
sahf
inc
push
jae
sbb
sbb
sub
push
test
sbb
movsb
out
inc
inc
sbb
push
lock
clc
mov
das
int
sbbb
mov
mov
jbe
sbb
cmp
stos
and
cmp
dec
adc
push
into
lcall
cs
pushf
call
cs
sqrtps
mov
sub
out
xchg
cmpsl
inc
sbb
jmp
fidivl
stos
dec
mov
bound
jne
aaa
das
mov
inc
jnp
mov
pop
negb
stos
xchg
ja
jb
mov
gs
fnstcw
jb
es
cmp
sbb
cmpsb
adc
les
push
xchg
pop
dec
sbb
fnsave
dec
mov
jno
jno
addl
adc
aam
inc
addb
shrb
pop
push
cwtl
push
add
mov
lahf
xor
dec
push
or
lahf
sbb
and
jge
push
out
push
icebp
out
cwtl
lds
imul
inc
ja
pop
movsb
scas
pop
mov
sbb
leave
mov
jge
repnz
inc
fisttps
aas
jbe
mov
mov
subb
pusha
outsb
aas
aas
sbb
or
js
mov
shll
pop
fmulp
daa
mov
movsl
mov
mov
cltd
cld
gs
and
es
inc
orb
int
push
dec
ret
and
mov
push
and
cmp
cmp
scas
push
fscale
xor
mov
movsb
fcmovnbe
push
loopne
push
pop
imul
aam
and
push
xor
xchg
pop
cmp
mov
nop
mov
imul
and
cmp
je
push
adc
fnsave
lea
ljmp
rorb
das
xchg
cmp
mov
sub
dec
mov
call
or
jg
lds
lret
in
jno
jecxz
push
cld
jmp
sar
mov
jo
cwtl
and
lea
jne
or
fmulp
mov
fucomip
xchg
std
pop
push
loop
inc
cmp
hlt
cmpsb
mov
mov
cmp
push
es
loopne
sbb
cli
icebp
xchg
pop
add
jnp
clc
xlat
or
add
fwait
cmp
xor
inc
in
cltd
jbe
adc
rclb
out
sub
adc
in
sbbl
sub
jp
loope
push
add
movsb
inc
push
pop
mov
mov
mov
test
mov
pop
insb
lret
scas
out
stos
int
mov
xchg
in
jno
sub
addr16
adc
mov
std
ja
inc
bnd
mov
mov
jecxz
cmp
cli
iret
inc
imulb
mov
in
aaa
daa
xlat
adc
mov
divb
out
mov
daa
add
xchg
add
jp
add
das
cmc
lock
data16
push
mov
jb
repnz
in
mov
fsubr
js
push
mov
cmp
pop
lock
fs
shrb
cmp
jo
sbb
jp
daa
mov
call
mov
mov
lods
leave
xor
dec
aam
js
in
insl
lea
rorl
jp
push
gs
pop
jno
test
jecxz
clc
cmp
bound
mov
or
into
inc
adc
sub
sbb
ss
cwtl
scas
pop
sub
cmp
stos
jbe
lret
notl
aam
or
sub
cltd
insw
push
test
sbb
rcr
nop
call
in
mov
or
scas
pop
jmp
sub
inc
mov
ret
out
cmp
aam
push
je
insb
dec
dec
push
int
bound
xchg
es
arpl
into
sbb
cmp
test
icebp
push
xchg
push
fnstenv
jno
mov
cmc
pop
dec
and
and
imul
aad
jmp
inc
lret
pop
sbb
test
jge
and
and
fsub
lods
outsl
xchg
and
mov
sub
imul
shlb
in
movsl
mov
add
xchg
rorb
test
add
outsl
ret
or
fs
sub
popa
pop
adc
stos
stos
xor
pop
add
lret
subb
pop
addb
js
add
sbb
xchg
shrl
hlt
mov
std
ret
out
loope
xor
int
lcall
int
mov
push
mov
inc
sub
das
icebp
int3
and
cmp
add
mov
mov
or
leave
adc
dec
int3
add
pop
cmc
in
pop
mov
fisttpll
push
add
sbb
inc
add
xchg
sbb
cmp
test
mov
push
shlb
sahf
movups
add
mov
mov
mov
ret
nop
mov
outsl
cmpsb
mov
shll
bnd
xor
inc
fstl
xchg
push
rorl
shrl
loope
add
push
xorl
lock
push
xchg
mov
das
inc
cmpsb
and
inc
rclb
mov
stos
and
xchg
mov
sub
pop
repnz
idiv
cmp
scas
psrld
dec
inc
das
xor
inc
and
lahf
imul
mov
adc
inc
jo
dec
inc
mov
in
movsl
xor
xor
jo
clc
cltd
in
sub
mov
fisubrl
jb
sbb
in
push
xchg
loopne
dec
aad
cmpsl
jnp
insb
ficoms
inc
adcb
cmp
pushf
out
mov
shlb
clc
inc
imul
fbld
lcall
or
mov
cli
ss
cmp
lret
incl
and
push
mov
mov
jns
pop
push
push
and
test
adc
movsb
mov
mov
adc
mov
cmp
inc
lcall
lea
jg
or
ja
rol
pop
sarb
mov
in
mov
mov
and
imul
cmc
in
xchg
cmp
push
push
shl
pop
xor
push
ud1
dec
mov
jae
jbe
imul
orl
cmp
push
gs
fnsave
shlb
jmp
xor
ljmp
xor
sub
out
jp
repz
jecxz
ljmp
jnp
push
imul
xchg
add
sub
jmp
enter
popf
mov
add
sub
push
das
inc
mov
dec
dec
ret
dec
add
xchg
jae
pop
inc
xor
cmp
mull
xor
aad
mov
inc
nop
xchg
xor
or
repnz
mov
pop
loope
out
mov
pop
inc
pop
pusha
popf
lret
jmp
add
subl
jb
cmp
nop
sub
push
xor
add
in
out
mov
je
aam
and
nop
orb
dec
xchg
add
push
jbe
outsb
inc
pop
pop
cmpsb
jno
add
cmp
adc
stc
cmp
lcall
and
push
pop
jnp
sbb
loopne
cmp
dec
lds
adc
adc
inc
out
int3
loopne
jg
xchg
icebp
daa
pusha
out
dec
dec
aaa
mov
mov
out
cli
jp
sbbl
xor
pop
pop
mov
aad
cmp
push
js
sbb
pushf
or
dec
out
mov
cmp
mov
icebp
ret
inc
loop
out
roll
xor
jb
push
xchg
dec
xchg
dec
push
cmp
loope
sub
cmc
add
push
xchg
jb
loope
inc
out
testb
xor
test
adc
xorl
inc
in
add
mov
xlat
lea
xor
push
repz
dec
sahf
push
fprem
pop
fstpl
mov
or
inc
sahf
and
mov
test
jno
push
leave
call
stc
mov
aam
lsl
mov
test
iret
xor
test
mov
cltd
lods
lahf
add
hlt
repnz
cmpsb
jmp
fistpl
pop
dec
fs
or
mov
into
ds
aad
adc
imul
ds
pop
shrb
mov
imulb
mov
int
andl
pop
pop
xchg
ds
ljmp
movsl
push
out
xchg
mov
popa
clc
and
ljmp
daa
jmp
das
in
xor
sub
or
pop
mov
mov
mov
mov
push
in
xor
xchg
inc
pop
or
lahf
add
aad
xchg
repnz
cmpb
daa
pop
push
mov
dec
jns
das
xchg
cwtl
rcll
in
gs
in
test
sti
push
leave
jmp
es
enter
in
xor
hlt
nop
into
sbb
mov
inc
outsl
jb
std
cmpsl
shrl
xchg
mov
shl
mov
scas
or
aas
push
fwait
ds
icebp
sbbl
loopne
push
add
push
scas
pop
push
cmpsl
inc
fiaddl
add
icebp
ss
and
mov
pop
inc
imul
in
adc
jge
add
pop
std
fbld
xchg
outsb
cmc
pop
sub
enter
jmp
inc
dec
add
icebp
loop
aas
outsb
and
fcomps
fcompl
push
mov
pop
cmp
cltd
inc
das
inc
movsl
inc
je
mov
icebp
into
add
adc
arpl
or
inc
cmpl
mulb
lds
mov
pop
call
xchg
xchg
je
jnp
shlb
cli
stos
insl
dec
mov
rcll
lods
mov
sti
and
scas
add
lods
fists
cs
pusha
or
das
ja
fidivrl
push
cmp
mov
mov
inc
dec
test
or
or
xchg
data16
pop
adc
xchg
xchg
adc
fstpt
mov
lret
jbe
movsl
mov
push
cwtl
cli
loop
xor
add
mov
arpl
lods
pop
int3
jno
cli
xor
sub
inc
xlat
jp
js
das
stos
call
sbb
icebp
sub
mov
xor
adc
and
loop
jnp
repz
and
xlat
shlb
jbe
cmc
adc
aas
fiadds
add
mov
insb
push
cmpsb
jmp
mov
pop
mov
mov
push
mov
in
inc
sahf
or
cs
stc
repnz
xchg
xor
xor
push
fmull
outsl
js
jb
cmpb
scas
xchg
movsl
mov
dec
and
aam
jecxz
dec
mov
and
inc
gs
lods
ret
and
addr16
mov
fcomp
and
out
or
push
cmp
jecxz
adc
adc
jge
outsl
xor
mov
mov
or
mov
sub
add
sbb
dec
jns
mov
aam
loop
loop
xor
jmp
mov
mov
jmp
mov
xchg
inc
orl
leave
push
loop
aaa
leave
fists
in
jl
sub
jns
cmpsl
xchg
cmp
jg
outsl
adc
dec
repz
iret
xor
vpmadcswd
pushf
inc
leave
jmp
mov
sbb
jno
pushf
xchg
cmpl
xchg
repz
xor
or
pop
cmp
stos
sbb
int
pop
fldt
rcll
jge
mov
jbe
stos
filds
arpl
mov
les
mov
pop
cmp
inc
mov
cli
clc
push
mov
fst
xor
aam
repnz
in
int3
pop
dec
mov
mov
cmp
int
in
jle
pop
xchg
imul
sarb
xor
nop
shlb
cmp
movsb
cmpsb
cmpsl
fwait
test
push
pop
mov
rcr
add
jb
sub
loop
xchg
xchg
sub
dec
push
movsl
in
rol
mov
xchg
sbb
outsl
dec
cmpl
fidivrs
fmull
add
inc
js
sbb
sbb
out
sbb
std
cli
add
cs
pop
sub
rcll
cmp
push
mov
jp
insl
rcrl
idivl
sbb
pop
sub
mov
loopne
mull
or
repnz
int
icebp
stos
jmp
loope
or
pop
cltd
pop
in
mov
nop
or
aas
fisttpl
mov
mov
adc
cmp
iret
pop
mov
ret
fisttpll
adc
inc
icebp
lret
in
jge
mov
sbb
xchg
xor
movsb
mov
gs
sbb
and
leave
div
loopne
notb
pop
out
jl
loop
fsubl
jns
add
sub
xorl
stc
or
out
xchg
pop
mov
outsb
out
cmpsb
adc
andb
inc
and
sub
pop
inc
mov
aaa
out
outsl
or
xchg
cli
leave
imul
cmpsb
fildll
pop
cltd
mov
aaa
pushf
jl
decl
inc
cmpsl
mov
sbb
mov
popa
cmp
and
sbb
xchg
shll
and
ss
aas
lods
cmp
lahf
xor
push
movsb
rclb
add
cli
shl
outsb
das
repz
dec
inc
jg
fdivl
push
js
jmp
out
inc
jae
jns
stos
pop
cmpb
lods
mov
aas
fdiv
inc
lahf
xchg
leave
sbb
movsl
push
jmp
lret
popf
outsl
pop
repnz
ret
hlt
dec
pop
inc
inc
mov
sbb
jno
test
sbb
or
movsl
cmp
stc
pop
out
pop
add
pop
fcos
imul
jl
mov
mov
adc
sbb
movsl
repnz
inc
push
push
fstps
out
cmpsl
pop
and
cmp
test
aas
dec
mov
mov
mov
daa
jecxz
orb
mov
dec
outsl
mov
add
xchg
loope
fimull
fmull
ds
sbb
sub
mov
pushf
std
mov
fimull
push
das
lock
imul
lods
mov
or
lret
jl
add
xchg
jns
push
mov
icebp
push
test
add
mov
xchg
pop
cmp
inc
adc
xlat
inc
test
lahf
fnstcw
in
sub
cwtl
push
mov
dec
jecxz
mov
hlt
ljmp
rcr
cmp
push
pop
xchg
mov
lret
dec
xor
jnp
mov
cld
or
sub
mov
mov
sbb
andb
cmp
mov
jno
mov
scas
fadds
xchg
push
mov
push
sbb
lods
push
push
sub
pop
sbb
push
imul
cwtl
mov
push
test
push
mov
daa
lcall
test
je
fldcw
lods
stos
sbb
leave
inc
jge
mov
ds
lods
xor
sbb
dec
fdivr
ss
jl
xor
jp
outsb
xor
lds
int
cmp
adc
xchg
cmpsl
xchg
mov
andl
jmp
sub
movsl
xchg
dec
inc
int3
stos
push
adc
rcrl
pop
outsb
icebp
xor
scas
sub
fldenv
mov
dec
inc
pop
xchg
jae
fistpll
outsb
pop
sbb
insl
xlat
sbb
cmc
mov
xor
gs
push
mov
or
daa
mov
push
sar
sbb
gs
mov
jbe
scas
inc
addr16
fsubrl
out
mov
or
mov
dec
mov
cmpsb
gs
push
jle
cmp
cmp
pop
mov
es
mov
jmp
jge
call
outsl
dec
pop
sub
push
lods
je
sbb
adc
xor
sbb
mov
push
mul
das
icebp
cltd
mov
mov
sub
mov
shr
add
in
test
lret
or
ds
dec
daa
lret
cmp
pop
mov
addr16
mov
fstp
pop
cmpb
mov
mov
pop
stos
arpl
inc
mov
stos
fnstenv
cmpsl
jecxz
gs
jecxz
xor
add
fbld
shrl
negl
cli
mov
aas
sub
or
rcll
cmc
cli
and
mov
cmp
out
mov
sbb
dec
cwtl
jmp
adc
es
jl
push
hlt
adcl
mov
cmp
stos
loop
lea
stc
mov
mov
cli
fwait
cmp
hlt
lock
fwait
or
lret
rclb
or
out
push
or
psubusw
clc
or
loope,pn
push
mov
inc
pop
xor
clc
insb
std
es
leave
test
mov
cmpsl
push
ds
mov
aad
cmp
push
divl
inc
mov
shrl
aas
std
mov
xchg
add
fs
and
fnstcw
popf
repz
int
repnz
rcrl
movsb
add
jno
aam
push
js
je
adc
cltd
cmc
out
pand
outsl
mov
aas
add
push
aas
cwtl
popf
fs
push
outsb
inc
mov
mov
inc
outsl
sub
mov
popf
pop
push
sbbl
sbb
sub
out
and
pop
in
pop
call
cmp
xor
cmp
or
jo
stc
pop
test
adc
jl
cmp
jo
fcmovnbe
pop
inc
adc
icebp
fbstp
pop
test
jg
ja
je
xchg
leave
hlt
lods
push
and
js
in
xor
in
enter
dec
xchg
add
mov
and
test
scas
gs
adc
addr16
leave
cwtl
adcb
add
xchg
adc
aad
ljmp
push
repnz
add
sti
xor
shlb
cmc
in
addb
repz
xor
xor
push
movsb
into
pop
xchg
push
leave
cmp
sub
xorb
sbb
pop
sbb
lret
or
xchg
into
rorb
and
stc
lcall
shr
and
xor
add
push
frstor
and
ret
dec
push
gs
xchg
sbb
mov
or
mov
xchg
jmp
popf
dec
sbb
pop
xor
lret
scas
stc
stc
daa
loop
inc
cli
dec
xchg
push
pop
jb
je
mov
sahf
add
mov
movsb
dec
fimull
imul
jnp
jbe
in
sub
insl
dec
or
aad
cmp
and
out
imul
cmpsl
js
aam
xor
mov
push
adc
pop
leave
mov
inc
sub
push
inc
mov
mov
aas
xchg
mov
add
mov
movsb
insl
lcall
jmp
mov
inc
pop
adc
adc
shlb
mov
mov
mov
pop
pop
into
inc
decb
xor
hlt
out
rcll
push
test
jae
es
adc
mov
adc
mov
sarb
cltd
movsb
gs
popf
shl
test
popf
mov
push
das
sub
pop
jno
push
xchg
mov
sbb
dec
mov
mov
sbbl
sbb
outsl
cwtl
jp
fdiv
push
cmpsl
insl
xchg
push
sub
cmp
cmp
imul
les
lods
ds
dec
push
fwait
in
daa
jnp
xchg
stc
lret
aad
loopne
stc
bound
adc
mov
faddl
scas
ljmp
mov
fisubrs
cli
aad
xor
add
cmp
xchg
pop
push
pop
cmp
push
sub
in
adc
adc
add
js
arpl
mov
add
lds
jg
movsb
pop
sub
mov
jl
test
mov
jno
pop
xchg
sbb
iret
insb
mov
jo
inc
sbb
decb
test
sub
push
lret
sub
dec
loop
cmc
cmpsb
mov
adc
pop
pop
push
in
lds
icebp
popa
inc
pop
fldt
sub
iret
cmp
adc
mov
xchg
push
dec
mov
insb
aam
sub
jb
pop
jecxz
cmc
or
push
xchg
cmc
mov
ds
call
xchg
lea
dec
dec
jmp
adcl
stos
xlat
xor
test
fucomi
xchg
movsb
or
je
jge
xchg
sbb
fcomps
sbb
mov
jp
icebp
mov
and
mov
sbb
push
iret
xor
shrb
clc
or
mov
mov
jbe
sahf
cmp
push
cmc
ret
xor
sub
jne
hlt
js
or
jl
pop
add
andl
jmp
fistps
xchg
push
addl
or
and
imul
jns
cmovge
adc
fadd
jge
aaa
in
mov
fsubrp
push
xchg
dec
dec
stc
adc
push
test
fdivp
loop
sbb
sbb
inc
jle
mov
ss
or
movsb
mov
jne
jp
dec
fistpl
push
xchg
gs
stc
or
sbbb
in
xchg
rorl
pop
popa
xor
xchg
mov
out
push
mov
les
insb
push
xor
icebp
lds
mov
jo
movsb
adc
lahf
dec
mov
loope
cmpsl
add
fldenv
gs
insb
inc
repnz
add
dec
jns
vmovd
notl
movsl
scas
stc
and
mov
pop
fistpl
cmp
mov
ffree
jmp
jnp
dec
sub
cmpsb
xor
pop
inc
sbb
or
aas
sbb
mov
mov
jno
adc
cmp
pop
sbb
and
jb
xrelease
ja
fisubs
bound
push
sub
mov
outsl
or
sbb
ret
lock
mov
pop
xchg
insl
fcomi
sar
in
xor
jbe
mov
cltd
push
enter
mov
into
mov
sub
push
mov
jno
mov
xor
sahf
cli
rolb
cld
sbb
or
shlb
inc
sub
inc
in
sub
mov
repnz
les
or
int
movsl
movsb
jnp
xor
fs
mov
sti
pusha
fidivs
mov
inc
lea
aam
sbb
int3
lods
jl
mov
sub
cli
xor
sub
or
test
bnd
adc
mov
push
dec
mov
mov
mov
push
xor
imull
clc
es
lret
arpl
xor
mov
popa
pop
scas
dec
xor
add
push
xor
loopne
lcall
ficompl
scas
ffreep
xchg
stc
adc
push
in
push
inc
icebp
xchg
notb
imul
lret
inc
xchg
or
cmpsb
dec
and
inc
test
push
jne
xchg
sahf
std
xchg
sti
xor
add
shll
xchg
shlb
imul
cli
xor
inc
add
pop
jl
push
mov
ljmp
aam
add
rcrb
xchg
jbe
loop
lock
sub
aaa
or
pushf
pushf
fdivrl
out
into
dec
mov
loopne
cmp
clc
xchg
movsb
jno
lret
scas
into
lret
mov
and
cmc
xor
bound
dec
aaa
outsl
mov
popf
ret
sbbb
dec
cmpsl
jb
int3
inc
add
icebp
inc
dec
and
ds
cmp
orl
sbb
insb
jns
call
push
cmp
stos
pop
loope
enter
mov
push
lcall
mov
jno
mov
repnz
sbb
mov
jmp
out
nop
sub
jmp
sub
insb
imul
imul
fcmovu
xor
insb
sub
mov
and
out
loopne
aad
pop
sub
jns
pusha
xchg
inc
xchg
and
or
or
ret
fiadds
cmp
inc
jnp
cwtl
into
clc
xchg
or
xchg
mov
xchg
pop
cmp
out
inc
sub
fcoms
or
pusha
sbb
fstl
inc
add
orl
push
or
outsl
cmp
sbb
pushf
jmp
std
jmp
dec
adc
cmp
mov
aam
shll
add
fdivl
sbb
jl
nop
ljmp
call
pop
aas
je
jne
push
lods
pusha
adc
push
push
sub
cltd
js
aaa
jp
fmuls
mov
out
add
cmpsb
jns
cmp
xchg
daa
cltd
enter
movsb
in
ja
push
inc
pushf
mov
cmpsb
inc
das
sub
mov
or
xor
add
jmp
testl
dec
cmpsl
mov
mov
decb
dec
lcall
inc
cld
dec
mov
enter
ds
dec
push
mov
lahf
dec
adc
xor
stos
mov
imul
cmp
pop
mov
movsl
and
test
xchg
mov
jnp
cmp
pop
jmp
sbb
mov
sub
push
jnp
lret
dec
mov
sbb
push
xorl
pop
imul
mov
add
dec
inc
out
adc
mov
lds
lea
pop
dec
adc
aam
jmp
sub
aam
xchg
outsb
adc
out
cmp
add
cltd
mov
mov
push
fisubs
cmp
arpl
xchg
push
adc
or
jl
xor
xchg
fsubl
sbb
in
inc
xchg
cmp
adc
push
stc
fbstp
cmpsl
rcrb
call
scas
cmp
gs
mov
pushf
aaa
pop
test
icebp
mov
bound
or
sub
and
sahf
xor
pushf
jecxz
ficoml
dec
jnp
cli
jne
das
iret
rcll
jl
or
dec
inc
test
fdivrp
enter
push
fdivs
pusha
in
or
cld
pop
pop
inc
hlt
icebp
lea
or
mov
out
mov
nop
pusha
cli
mov
clc
sarb
xor
rcrb
out
cmp
rolb
adc
fsubl
sbb
or
inc
mov
jg
stc
rolb
cmp
sub
hlt
push
stc
add
insl
scas
mov
test
jle
inc
jl
mov
sbb
int3
fildl
pop
ja
push
je
mov
adc
jecxz
out
rcll
push
sbb
inc
xchg
push
pop
inc
xor
inc
out
cld
es
or
inc
out
leave
movsl
sbb
jne
loopne
movsl
dec
movsb
lret
bound
loop
movsb
push
jg
mul
and
mov
loop
and
pop
adc
mov
test
aad
pop
dec
dec
les
mov
push
mov
repnz
int
pop
fcomip
enter
xor
jns
fs
lcall
stos
ljmp
orb
jp
dec
ss
sarb
icebp
stos
idivb
sbb
cli
jl
xlat
iret
mov
int
push
add
mov
dec
sbb
mov
xor
pushf
in
repnz
rclb
pop
add
cmc
iret
cmp
in
xlat
shlb
jne
pop
js
mov
int
loop
les
mov
stos
and
add
push
inc
in
mov
jae
daa
xchg
xchg
rcll
jle
jmp
in
test
and
pop
inc
stos
imul
cmp
repnz
in
sub
mov
add
je
lret
clc
ret
in
popa
imul
cld
mov
out
sbb
lcall
out
sub
push
orl
and
bound
xlat
pop
inc
jbe
pusha
sbb
icebp
and
cmp
pop
in
jo
or
scas
pop
int3
or
mulb
imul
add
and
jge
xchg
jne
inc
adc
add
pop
inc
movsb
dec
sbb
sub
hlt
sarb
and
mov
jb
add
imul
and
mov
sub
jmp
cmp
inc
push
addr16
clc
mov
fbld
aam
adc
mov
jo
hlt
xchg
fldl2t
rclb
loop
jb
xchg
jo
pushf
xchg
pop
les
popf
jmp
or
sbb
inc
dec
imul
adc
out
sub
cmp
cltd
xchg
shl
and
xlat
sbb
ljmp
ffreep
cmpsl
fldl
mov
es
inc
dec
mov
fwait
ljmp
mov
mov
ficoml
inc
push
adc
test
jg
sub
fidivl
xchg
enter
or
pop
fnstsw
cmp
mov
xor
cs
mov
out
cmpsl
or
jge
loope
xchg
dec
inc
jb
mov
inc
dec
cmp
jg
cmp
pop
add
les
arpl
jg
or
shl
xor
in
rcrl
sbb
orb
jne
aad
cwtl
cwtl
movb
mov
push
shll
ds
stc
mov
jbe
push
jl
mov
nop
mov
cmp
pop
mov
fucom
jno
outsb
les
adc
in
push
pop
or
cmc
xor
and
mov
mov
mov
idivb
imul
loope
nop
xchg
stos
ja
in
repz
cmp
call
push
sbb
out
sbb
repz
pop
cmpsb
mov
cltd
inc
push
mov
mov
test
outsl
lds
addr16
push
fadds
push
jp
xchg
add
sbb
scas
push
into
push
mov
jbe
ss
fildll
mov
in
rcl
fbstp
stos
stos
sub
xchg
out
push
out
in
sub
mov
lcall
mov
sbbb
inc
xchg
aam
ficompl
mov
mov
lock
test
jl
jnp
sub
mov
ljmp
pop
ds
inc
push
mov
mov
xor
lcall
xchg
mov
aaa
sub
push
popa
sbb
lret
inc
popa
dec
repnz
nop
popf
pop
in
dec
push
mov
mov
jne
pop
adc
lock
mov
push
mov
loope
jmp
add
sub
adc
and
jp
test
out
sub
xchg
test
sbb
fdiv
lds
mov
out
sub
jl
jb
jp
push
xchg
out
insb
xchg
fucomi
push
imul
ja
xor
jb
jecxz
push
adc
pop
pop
inc
ljmp
pop
mov
xchg
inc
add
nop
rol
pop
bound
sbb
addl
jae
insb
shl
adc
cli
mov
jge
roll
mov
jl
aaa
add
repz
fcos
inc
or
push
rol
cmpsb
int
and
popa
inc
aam
repnz
xchg
xor
jl
int
inc
movsb
je
fcmovb
sbb
ret
xchg
xchg
pop
div
arpl
inc
mov
mov
pop
scas
sub
pop
lret
out
and
negl
dec
cli
fidivrs
out
push
inc
add
int3
into
xor
imul
pop
shrb
aad
mov
les
push
ds
jge
sub
test
cmc
sarb
xor
popa
jmp
push
int3
stos
sub
jl
dec
je
loopne
add
cltd
inc
push
inc
imul
adc
dec
cli
xor
mov
into
xor
lahf
icebp
xchg
mov
sub
dec
adc
fcompl
mov
shrb
enter
jle
xor
jle
ret
push
cmp
push
aaa
lods
dec
mov
push
xchg
daa
aad
scas
notb
mov
nop
sbb
add
call
sub
ljmp
out
pop
mov
fdiv
es
push
xor
adc
std
sub
jp
sahf
pushf
ja
scas
das
repnz
ret
inc
in
pop
mov
pusha
arpl
gs
inc
mov
dec
inc
bound
lahf
lock
stc
jb
icebp
jne
in
in
xchg
push
jecxz
jne
or
push
or
jp
scas
pusha
pop
push
dec
adc
sub
test
in
sbb
test
movsb
mov
sub
mov
cwtl
sbb
ja
xor
out
or
ja
ficoml
mov
mull
jecxz
mov
add
clc
js
cmp
adc
movl
or
jae
push
enter
rcr
inc
sarb
lahf
loop
sti
adcb
outsb
int3
divb
notl
mov
pop
cld
jo
or
rcrl
sub
adc
push
outsl
push
pop
sub
fs
or
mov
cmp
push
hlt
roll
pavgb
xchg
and
push
ficoms
sbb
mov
jg
fdivl
loop
jmp
mov
movsb
xchg
mov
cli
or
fdiv
push
ret
rcll
mov
int3
inc
lds
and
mov
dec
in
subb
sbb
jmp
lahf
inc
pop
sarl
sti
jmp
js
xchg
out
xchg
int3
fimuls
push
out
and
sbb
dec
pop
pop
sbb
jg
jnp
insb
aad
inc
dec
and
cmp
clc
adc
clc
in
inc
cmp
jmp
mov
jg
into
out
xor
mov
lret
rclb
movsl
outsb
js
orb
or
cmp
bound
add
aad
stos
dec
out
xor
pop
addr16
sub
push
jecxz
popf
dec
push
out
xchg
mov
adc
xchg
or
push
pop
ss
lret
and
ljmp
iret
jo
inc
push
gs
mov
pop
gs
add
inc
sub
pop
mov
insb
jno
or
popa
xor
fs
jo
inc
fnstcw
movsb
mov
xorl
insl
fadd
pop
stc
mov
cmpsl
daa
pop
popf
cmp
sbb
es
es
outsl
imul
push
pop
pop
je
in
or
sub
mov
cmp
stos
jbe
repnz
mov
push
or
xchg
loop
stos
shl
dec
in
sub
loope
xchg
push
shlb
adc
subl
cmp
fnstsw
xor
push
adc
xor
test
xchg
sub
int3
pop
out
and
in
jno
mov
pop
cwtl
or
add
addb
sbb
xchg
sub
or
out
and
leave
add
in
mov
stos
js
mov
test
outsb
pop
cmp
cmova
xchg
fisubs
and
xor
subb
loope
xor
pop
movsb
in
and
mov
push
adc
lds
mov
cs
pop
imul
mull
sbb
arpl
lcall
or
enter
cmp
call
mov
adc
in
mov
jmp
pop
adc
cltd
mov
mov
lods
mov
aas
push
lods
int
hlt
aaa
add
cld
gs
ret
inc
icebp
jnp
shl
loope
js
xor
movsb
ds
sbb
or
jo
inc
lock
sbbb
pop
cmp
mov
dec
adc
fbstp
jno
or
mov
int3
push
sbb
push
mov
imul
xor
mov
push
mov
sbb
inc
and
fs
es
mov
xchg
or
cmp
mov
dec
aad
mov
xchg
fcomip
inc
inc
call
xchg
cs
mov
addb
fldcw
aam
or
inc
xchg
je
or
sub
sub
aas
insl
data16
pop
ret
test
mov
mov
lock
into
jge
shlb
push
rcl
dec
mov
enter
cltd
or
jbe
jo
pop
shlb
cld
push
sahf
mov
testl
xor
aam
bound
lcall
jnp
into
repnz
icebp
outsl
cmpsb
test
arpl
imul
shlb
aas
mov
xor
mov
rcrb
std
int3
gs
mov
inc
xchg
xorl
or
mov
icebp
int3
nopl
popf
inc
mov
mov
add
jmp
cmc
out
inc
aas
sbb
jbe
into
sub
movsb
vmovdqu
mov
cmp
gs
fcmovne
std
imul
xchg
jbe
push
adc
gs
jl
stc
in
push
mov
add
xchg
in
mov
stc
xchg
dec
popa
push
xchg
sbb
sbb
js
int3
sub
rcrl
mov
shr
cmp
mov
jge,pn
push
mov
fwait
jg
mov
fidivrs
sub
gs
mov
sbb
mov
enter
vmovupd
mov
stos
jb
sti
ficomps
mov
dec
ja
lods
and
outsl
or
mov
mov
adc
jns
mov
adc
and
ds
fs
out
jp
fs
jecxz
push
ret
push
adc
and
sbbl
xor
mov
push
mov
cwtl
stos
xor
pop
sub
and
int3
xchg
aad
fwait
add
enter
cld
stos
rcl
stos
mov
inc
jae
lds
add
fsubr
xchg
sbb
nop
and
pop
dec
push
in
idivb
inc
addr16
mov
or
das
fs
movsb
sbb
in
pop
in
adc
enter
ss
adc
or
pop
repnz
aas
xchg
cmp
xorl
mov
mov
movsb
cli
fxch
hlt
and
cmp
add
jnp
jae
loope
adc
in
dec
fsubrs
pop
cmc
popf
ror
popf
pop
shlb
insl
jae
sub
stos
sbb
enter
inc
inc
in
pop
pop
dec
into
push
ret
aad
or
and
fs
nop
pop
insl
insb
jb
jg
out
and
in
ss
inc
ss
mov
ret
xor
leave
jmp
or
and
addr16
hlt
cld
mov
cmpsb
add
lds
xlat
push
mov
and
cwtl
sub
mov
arpl
out
and
rcl
je
add
mov
lea
jno
idivb
in
add
or
in
cmp
repz
pop
cwtl
out
push
pop
fcmovbe
and
add
dec
mov
mov
mov
icebp
outsb
enter
sub
sbb
lret
fistl
in
dec
xchg
or
ret
sti
scas
cmp
cmp
mov
add
in
pop
or
adc
stos
or
and
popf
inc
lods
dec
orl
jle
std
scas
fistpll
jbe
in
inc
pop
mov
or
mov
sub
xorl
or
mov
sbb
dec
ljmp
cmp
hlt
pop
scas
aas
sbb
adc
mov
xchg
cs
call
into
push
pop
ret
rolb
mov
sub
push
mov
dec
or
in
and
push
arpl
push
in
adc
orl
int
mov
mov
dec
dec
cmp
ret
sub
pop
mov
adc
or
jae
out
jb
je
push
cli
mov
mov
pop
sahf
mov
jl
fsubrl
jle
fst
sbb
nop
test
jmp
jae
sub
jmp
stos
xor
adc
cmp
nop
inc
push
xchg
test
mov
push
cwtl
jbe
and
mov
icebp
fmuls
insl
xchg
sub
loopne
mov
pop
jmp
xchg
decl
in
xor
add
mov
ds
imulb
cwtl
or
push
ret
xor
lret
lock
push
dec
push
mov
jb
es
mov
insb
mov
das
pop
pusha
int3
mov
cmp
sbb
add
in
jl
xor
push
push
test
mov
push
fsubr
ds
ljmp
fidivrl
and
insb
enter
sar
test
jle
cmp
push
xlat
cmp
shlb
dec
add
lret
loopne
add
in
pop
rolb
adc
jno
or
cmp
mov
mov
out
sbb
push
sahf
aam
dec
je
lods
and
mov
pop
mov
mov
shl
addl
or
ss
mov
mov
push
mov
bound
je
push
dec
pop
add
cli
jle
shl
stos
fildll
mov
fimuls
push
inc
popfw
mov
icebp
mov
xor
add
mov
mov
add
into
cmpsl
pop
in
mov
cmpsb
shlb
xchg
fsubs
fisubl
scas
cmp
out
inc
cmp
dec
lods
lock
pusha
add
mov
and
or
lds
xor
les
cmpsl
mov
movsb
shl
xor
jns
test
aaa
adc
ret
mov
inc
je
test
sub
aas
lock
sbb
xchg
push
xor
push
lock
and
pop
dec
stos
jno
adc
scas
xor
ret
inc
aam
inc
test
mov
pop
mov
jo
dec
orl
add
pop
and
adc
xchg
push
aam
cwtl
or
and
cmpsb
pop
mov
cmp
add
loope
mov
lods
mov
xchg
shrb
mov
sti
popa
mov
sub
sub
out
adc
lcall
pop
cmp
enter
popa
cmp
xchg
jp
sub
shl
bound
add
int3
push
xor
dec
xlat
cmp
pop
stc
scas
or
aad
mov
sbb
jno
dec
sti
or
inc
dec
xchg
movsb
sub
and
cmc
xchg
adc
sub
pop
sub
int
xchg
adc
push
aad
imul
xchg
mov
sbb
insl
adc
mov
mov
jmp
xchg
test
lea
cltd
fmul
jmp
jae
xchg
ljmp
call
mov
addr16
pop
jle
cmp
cs
lock
xchg
enterw
adc
mov
imul
push
xor
roll
lret
xor
xor
sbb
in
xor
jg
in
push
adc
scas
xchg
pop
loope
adc
fs
mov
push
xor
repz
adc
sub
inc
mov
push
push
fstpl
loope
mov
mov
inc
lahf
dec
iret
add
pop
rcl
pop
lock
mov
fcoml
in
push
xchg
inc
push
lock
xchg
pop
mov
mov
in
lret
arpl
pop
mov
inc
jg
fcmovnb
push
sbb
mov
push
xchg
data16
jae
jmp
jnp
int
hlt
ret
test
dec
out
push
cmp
test
push
clc
xor
bound
andb
popa
inc
daa
rcl
testb
fidivs
xchg
ret
xchg
je
jle
jnp
dec
sub
jb
jns
mov
mov
jns
std
add
rcrb
pop
mov
lods
aas
shll
xchg
jnp
push
mov
addr16
or
enter
adc
mov
lahf
pop
xchg
cs
push
push
push
cmp
add
test
sbb
cmp
and
pop
sahf
adc
sahf
hlt
inc
mov
inc
pop
popa
and
fmul
ret
mov
arpl
lret
stc
test
aas
mov
flds
fcompl
inc
cmp
mov
xor
cmc
jns
mov
push
loopne
sar
or
jg
hlt
jb
cmp
pop
cmp
and
jge
push
inc
jbe
mov
cmp
push
or
test
jb
ret
enter
mov
push
lahf
fwait
adc
jb
scas
sbb
aam
ror
jo
je
or
repnz
std
pop
ds
or
or
mov
aaa
std
dec
test
outsl
sbb
mov
jl
jb
cmpsb
dec
and
jp
addr16
in
enter
mov
aam
out
loop
fs
push
sbb
add
add
out
mov
pop
push
lret
ljmp
mov
pop
or
iret
ss
add
inc
ret
dec
cmc
shrl
xchg
mov
jnp
xchg
stos
inc
jecxz
fistl
xchg
jl
ja
je
dec
daa
inc
push
xchg
mov
in
xchg
divb
add
neg
in
notl
lods
pop
pop
inc
mov
xlat
mov
xor
mov
imul
cmp
jge
in
jge
mov
mov
jne
mov
das
or
ja
xor
fstpl
xor
adc
jbe
fwait
add
sub
rcr
xchg
lods
es
or
pop
pop
mov
inc
adc
add
pop
or
fcmove
cmp
lock
repnz
mov
jmp
lret
bound
xor
movsl
dec
test
clc
add
mov
xchg
loop
insb
add
iret
sub
adc
cmpsb
cmp
divb
add
lret
mov
popa
xchg
xchg
cmpsl
fisubrs
mov
xchg
das
or
sbb
pop
fcompl
mov
adc
cmp
rcrb
add
push
lahf
lods
cwtl
mov
and
cwtl
adc
mov
aam
popf
aam
in
mov
mov
and
add
cmpsb
fnstenv
push
inc
add
mov
pop
test
cwtl
xor
fdivrl
sahf
dec
and
xchg
insb
insl
sbb
mov
pop
sbb
push
mov
test
shr
fcomi
cmp
push
mov
dec
or
hlt
loope
xchg
cmp
dec
shl
test
or
jbe
pop
gs
popf
mov
and
sbbb
pop
pop
ftst
push
pop
mov
lahf
or
pop
inc
rorb
in
push
inc
jge
add
outsl
jb
popf
out
insl
inc
dec
adc
add
leave
div
lahf
mov
js
or
sarl
xchg
cmp
mov
gs
sti
lea
inc
gs
pop
pop
lock
dec
aam
imul
mov
mov
loop
aad
imul
dec
flds
out
jno
jmp
subl
cs
jo
imulb
ret
ret
fisubs
push
adc
and
js
rcrl
rorl
inc
fsub
mov
xchg
or
mov
mov
cmp
or
mulps
out
test
es
lret
and
mov
jg
fs
mov
fstpt
inc
inc
les
add
pusha
inc
pop
sbb
iret
cmpsb
xor
gs
sahf
scas
out
mov
push
inc
outsl
jl
inc
test
cmc
xor
sub
imul
adc
mov
mov
sbb
inc
jne
imul
sbb
and
xchg
lret
xchg
stos
cmp
xchg
call
jmp
popf
stos
ficompl
mov
es
sub
lahf
push
sbb
and
std
bound
adc
das
lcall
bound
and
test
and
push
mov
pop
scas
adc
clc
jle
std
scas
jmp
ret
aam
sub
adc
adcb
mov
or
js
sub
jbe
push
in
pushl
leave
nop
fmul
es
and
pop
test
js
jne
testb
jno
jnp
cmc
jmp
pop
jl
loope
inc
loop
pop
pop
add
dec
jge
mov
movsl
ret
and
pop
pop
lea
dec
clc
imul
xor
bound
jle
mov
xlat
lret
push
push
mov
lods
sbb
adc
insb
jp
xchg
inc
or
or
das
lret
push
push
pop
push
in
pop
nop
add
mov
dec
jmp
in
jns
movsl
inc
loope
jnp
xor
xor
out
cltd
pop
dec
fidivl
pushf
es
pop
xchg
je
dec
add
in
jne
loope
std
mov
adc
imul
inc
xchg
pop
xchg
popa
mov
push
and
adc
sub
mov
mov
jg
xor
cmp
cmc
mov
cltd
xor
cmc
jno
adc
fs
nop
arpl
fstpl
stos
jo
lret
mov
movsl
mov
pop
test
dec
jo
xor
adc
xchg
ds
mov
push
cmp
inc
inc
pop
adc
dec
fs
add
mov
cmp
insb
lret
push
repz
adc
inc
cmp
ret
lret
mov
cmpsl
mov
mov
or
adc
adc
inc
xchg
ds
adc
imul
into
mov
aam
popf
dec
shll
dec
push
test
rorl
das
xor
dec
arpl
inc
imulb
pop
adc
xor
ss
mov
call
adc
repz
popf
cwtl
data16
mov
cmp
xor
addr16
xor
fisttps
jmp
hlt
rorb
ret
lock
push
cmp
lea
sbb
adc
adcb
icebp
pop
sbb
es
jle
cld
or
insl
lcall
out
es
fwait
xor
mov
in
inc
sahf
xor
pop
and
cs
in
fiadds
aad
sbb
arpl
cmp
xchg
cmp
rolb
sbb
dec
arpl
mov
int
jae
mov
push
adc
imul
outsl
mov
outsb
sub
add
push
jmp
mov
repz
aam
pushf
mov
mov
int3
fldl
rol
mov
sbb
fs
rolb
mov
lcall
mov
xor
outsb
inc
aas
push
int
lds
jp
or
add
bound
inc
mov
or
push
lock
sahf
rclb
jae
sbb
in
ja
lret
insb
cmp
or
mov
ficompl
movsb
mov
sbb
lods
loop
sbb
jmp
sti
in
cwtl
fildll
pop
sub
gs
cwtl
in
jp
lret
scas
ret
dec
ljmp
lea
fwait
xchg
sub
lock
cwtl
stos
push
ss
jecxz
sti
lcall
pop
mul
jae
sub
outsb
adc
xchg
out
mov
pushl
fsubl
xorb
pop
loope
clc
std
mov
sbb
mov
sbb
dec
pushf
add
jae,pt
addr16
subb
and
cmpsl
imul
lcall
jno
dec
jecxz
das
and
das
loop
cmp
lret
aas
push
les
dec
ss
push
dec
repnz
xchg
fimull
cmp
push
stos
call
loope
dec
mov
mov
jae
gs
ljmp
aad
push
xchg
ds
or
jb
xor
cld
sbb
mov
dec
lods
pop
mov
or
sahf
jmp
test
inc
jns
gs
push
adc
sub
or
mov
in
mov
lahf
cmp
or
mov
sahf
lea
fdivl
sbb
je
or
add
mov
shr
out
shlb
outsl
sub
push
das
lret
push
lods
stos
cmp
dec
sbb
xchg
stos
push
or
jbe
push
or
inc
xor
sub
popa
mov
ret
jecxz
sub
stos
push
push
icebp
cmp
lcall
and
iret
mov
push
movsl
test
std
jmp
imull
lcall
push
adc
xchg
and
rcrl
lea
inc
aam
subb
out
repnz
sbb
jb
lds
repz
aas
xchg
push
test
imul
cmp
dec
cmp
jmp
mov
es
call
add
inc
int3
sub
dec
push
enter
sbb
dec
mov
mov
test
pop
insb
mov
mov
inc
mov
adc
push
idivb
jmp
lds
or
and
mov
int3
mov
adc
mov
in
lcall
and
cmp
jae
ja
adc
mov
dec
cmp
test
cwtl
sbb
out
mov
mov
jl
adc
mov
insb
push
push
mov
and
pop
insl
and
lods
arpl
mov
test
mov
jbe
push
xchg
push
mov
aad
push
mov
js
shrl
iret
mov
pop
xor
fwait
orb
mov
dec
xor
mov
aaa
ret
jecxz
pop
mov
add
cmpsl
jmp
pop
popa
imul
loopne
fs
mov
dec
cmpsb
xchg
std
mov
push
cmp
es
xor
add
add
call
dec
dec
mov
test
mov
arpl
jp
subl
ljmp
pop
cwtl
out
sub
repnz
mov
jl
jo
int
cld
and
cli
insb
push
movsb
incb
pop
int3
xchg
mov
adc
subb
lds
into
jle
int3
data16
mov
dec
out
fidivs
out
xor
push
mov
icebp
sbb
adc
sbbl
icebp
push
shrb
rcr
xor
pop
cmpsb
ljmp
enter
sbb
out
inc
mov
js
pusha
ds
or
arpl
hlt
mov
pop
jno
hlt
push
jnp
xor
add
psllw
cmc
movl
sub
out
xor
pop
test
call
sub
xchg
push
sbb
jne
sbb
mov
mov
dec
dec
pop
icebp
enter
test
mov
jle
add
test
dec
or
cltd
ja
jl
test
push
dec
pushf
xchg
fmull
mov
aas
pop
push
js
inc
sbb
lods
jne
sahf
and
mov
xchg
sub
ret
sub
jle
mov
or
cmc
cmpsb
xchg
dec
ret
ja
ud1
jbe
jo
xor
sub
mov
data16
jmp
pop
mov
sub
pop
aad
adcb
or
mov
loopne
mov
adcl
clc
mov
loopne
jbe
lretw
test
rolb
add
mov
or
sub
movsb
in
and
into
cmp
lods
jne
mov
cmc
icebp
jl
dec
inc
fsubrp
sub
push
jg
out
mov
nop
xlat
push
sarb
mov
fdivs
sub
adc
add
ss
sub
or
sbb
xchg
cmp
push
in
mov
adc
add
loope
cmp
leave
mov
xlat
jbe
test
or
pop
outsl
movsl
sahf
bound
or
aaa
test
mov
cltd
arpl
cs
popf
lods
pop
sub
inc
lcall
jge
fs
cli
or
cmp
sub
loop
shr
aas
push
ret
fiadds
jns
or
ret
fstps
stos
sti
iret
lret
jp
movsl
and
xchg
das
push
hlt
sahf
or
or
in
out
cmp
and
sub
mov
aam
sub
jnp
jo
mov
mov
jge
dec
adc
daa
dec
mov
inc
fcmove
or
dec
dec
divl
repnz
aaa
popa
lods
out
mov
in
cmpsl
mov
mov
mov
jbe
mov
fwait
jo
add
int
adc
out
push
jae
in
mov
addps
ds
add
push
das
push
sub
les
ss
movsb
dec
push
pop
std
xchg
cwtl
mov
ljmp
out
cwtl
push
ja
aaa
addr16
adc
ss
sahf
add
out
mov
addr16
int
xchg
lea
fnstsw
xchg
mov
sub
xchg
xchg
jne
cld
test
aaa
push
sub
adc
inc
repnz
mov
lahf
jo
inc
repz
sub
in
lods
jne
lock
sub
pop
sbb
cmp
paddsb
rolb
mov
mov
ljmp
fldl
xchg
add
test
xchg
dec
in
scas
test
fsubs
mov
test
push
in
cmp
inc
je
loope
adc
jae
movsl
inc
pop
outsb
pop
lods
jp
jp
movl
aam
daa
insb
xlat
mov
or
push
out
mov
mov
mov
cmpsb
add
dec
pop
ret
inc
cmc
cwtl
mov
mov
jo
cmp
mov
insb
pushf
mov
push
mov
lods
cmp
add
mov
cmp
imul
pop
push
xor
sti
in
lcall
nop
test
pushf
rcr
jp
cli
cltd
ret
xchg
sub
filds
inc
popf
in
xor
jl
sarl
inc
movsb
outsl
push
cmp
arpl
cmp
ljmp
jecxz
imul
mov
jo
mov
sbb
daa
shll
mov
mov
xchg
ret
jmp
sti
xor
add
mov
rorl
inc
aas
lcall
les
iret
push
inc
adc
sbb
jno
repz
sub
sub
jp
out
fdivrl
inc
fcoms
pop
xchg
imul
jb
dec
sbb
pop
dec
cmp
sti
cmp
sub
inc
mov
mov
cmc
rol
das
xchg
mov
lcall
loop
cmp
xchg
in
int
int
sub
xor
out
pusha
adc
add
add
or
inc
imul
mov
mov
idivl
push
ficoms
xor
stc
pop
inc
out
mov
insl
lods
lret
test
rclb
and
lods
or
out
je
arpl
test
push
dec
xor
adc
xor
jns
adcl
cmpsl
inc
inc
push
rcl
mov
das
in
push
imul
or
or
in
dec
pop
repnz
mov
add
in
test
repz
pop
jb
fbld
push
adc
and
dec
xlat
into
dec
pop
testb
ljmp
cmp
das
ret
mov
sbb
jno
div
call
fisubs
cmp
or
and
data16
cmp
cmpsb
popf
or
jg
mov
lret
daa
pop
std
and
jbe
out
dec
xor
fdivp
sub
inc
cs
ja
push
lods
aas
leave
out
fstps
fwait
xchg
add
and
jno
mov
mov
out
dec
cmp
mov
lcall
mov
adc
sub
or
jg
jae
mov
cli
jb
decb
movl
sub
mov
jb
inc
lds
repnz
inc
fadds
xchg
add
jb
dec
mov
xorb
dec
mov
mov
add
movsb
mov
jecxz
cltd
lcall
popf
or
je
cld
dec
sub
mov
idiv
mov
movsl
jl
in
repnz
andb
add
xor
xor
ljmp
call
add
cli
inc
lds
or
leave
ret
cmpsb
jo
mov
sub
xor
movsb
mov
das
cmp
call
in
mov
jecxz
xorb
insb
inc
xor
push
popf
scas
fldenv
sub
xchg
mov
adc
test
incl
fstp
inc
scas
lods
adc
dec
push
mov
out
call
cmp
rol
hlt
mov
cld
jns
mov
lds
add
insb
push
xchg
cmp
stos
and
or
lret
xchg
and
mov
xor
mov
pop
pop
push
cmpsb
fisubs
pop
mov
into
mov
outsb
les
mov
push
aam
or
mov
iret
dec
idiv
mov
test
mov
mov
sub
mov
arpl
adc
cmp
xchg
dec
mov
jb
inc
mov
ret
xchg
idivl
mov
xchg
jnp
mov
push
inc
call
dec
repz
std
mov
jb
int3
inc
int
insb
sub
and
cmpsb
fs
sub
cltd
mov
out
mov
adc
dec
dec
or
repz
shlb
cmpsl
insb
adc
lret
cli
sub
fs
es
and
and
mov
sahf
push
lods
jo
mov
cmpsb
inc
sbb
stos
mov
inc
push
negl
sub
dec
jb
push
or
out
sbbl
push
mov
sti
mov
popa
push
xchg
in
mov
cmc
ljmp
xchg
shl
bound
inc
mov
inc
or
daa
lds
shll
jae
loopne
cmp
mov
cmc
pop
mov
xchg
mov
mov
or
push
lods
push
divl
xor
mov
movsl
hlt
lock
int
adc
test
sbb
sub
cli
push
loopne
lret
jg
jge
roll
sbb
add
xor
data16
push
or
imul
push
stc
adc
pop
jne
add
or
lods
jbe
sbb
and
inc
data16
mov
shl
inc
aas
sub
test
xchg
stc
add
xchg
and
notb
jns
out
push
sbb
inc
adc
outsb
add
es
fsubrl
into
or
mov
jle
mov
std
ja
stos
push
fmull
pop
insl
pop
scas
cmp
xor
jl
lea
inc
clc
inc
nop
xchg
je
test
ljmp
rolb
stc
and
push
movsb
dec
mov
mov
pop
scas
cmp
push
int3
mov
fwait
adc
stos
dec
mov
xchg
and
and
sbb
fs
cwtl
sub
jge
cmpsl
dec
jge
repnz
iret
mov
nop
stc
xchg
aaa
xchg
pop
mov
fwait
sar
or
mov
xor
push
or
repnz
fwait
sub
pop
pop
jecxz
setge
mov
push
sub
xchg
jno
int3
fldl
adc
sbb
mov
js
xor
lahf
jecxz
and
dec
imul
cld
fstl
les
push
jbe
daa
xchg
fisubs
sub
aam
addl
loop
inc
xchg
cmp
aam
mov
roll
test
and
jno
fmul
movsl
mov
lods
stos
cld
mov
or
mov
mov
movsb
mov
push
sbb
js
ss
mov
std
in
push
add
xchg
std
jne
mov
cmp
sbb
dec
ss
movsl
push
jno
stos
add
push
xor
aas
mov
jnp
mov
jge
inc
xchg
inc
bound
add
mov
sub
xchg
adc
popf
xor
or
repz
cmpsb
scas
outsl
jb
and
in
daa
and
insl
xorl
fwait
push
aad
jmp
aaa
out
push
jecxz
mov
data16
pop
dec
or
xchg
and
fdivp
call
push
add
xlat
lret
jecxz
mov
xchg
jl
push
push
xchg
dec
inc
jp
and
in
cli
jae,pn
clc
out
lods
jl
addr16
xchg
adc
mov
mov
mov
jge
jg
std
inc
int3
push
test
mov
pop
pusha
pusha
xchg
cmp
test
or
mov
push
sbb
daa
jmp
loopne
out
outsb
mov
cld
xchg
lss
scas
push
enter
inc
and
cmp
stc
pop
cwtl
lock
push
sbb
je
ret
scas
loop
addr16
xchg
xchg
sbb
jge
xor
stc
out
arpl
in
jp
popa
and
nop
out
outsb
adc
dec
loope
xchg
mov
cli
mov
test
in
repnz
lock
ret
cmp
pop
pusha
scas
enter
mov
movsl
adc
les
sbb
xor
sub
inc
lods
pop
setbe
or
je
xchg
shll
aas
adc
xchg
out
hlt
sti
mov
fnstsw
mov
pusha
mov
add
sbb
jl
jmp
jle
add
out
cltd
fists
adc
imul
in
int
cmp
add
and
movsb
mov
pop
xchg
imul
or
adc
add
jnp
add
mov
fwait
cmp
and
or
and
in
add
fsts
inc
sbbb
test
push
and
push
mov
dec
in
and
inc
pop
mov
cmp
imul
nop
call
ja
mov
jmp
sbb
aaa
push
cltd
pop
mov
sti
aad
sti
stc
jo
push
adc
jge
test
or
add
adc
and
mov
cmp
mov
mov
push
sahf
lcall
je
xchg
pop
out
test
mov
cwtl
in
insb
ds
xchg
popa
cli
scas
sub
inc
xchg
loopne
lods
imul
out
fbstp
hlt
pushf
mov
je
cmpl
cmpsl
mov
sahf
mov
sbb
das
hlt
adcb
in
inc
int3
inc
out
add
cmc
in
xchg
pop
mov
ret
add
fstpl
pop
vcvttss2si
inc
add
scas
int
mov
je
jl
ret
icebp
test
test
dec
xor
movsb
jge
rclb
jnp
cli
lret
add
inc
in
cmp
pushf
or
shrb
dec
dec
cmpsb
inc
or
daa
cmp
sbbl
pusha
mov
mov
push
mov
mov
mov
insl
mov
xor
sbb
cld
cmp
in
or
ror
sbb
mov
sub
in
test
cmpsl
push
push
cmp
jp
push
xchg
inc
jbe
aas
ret
inc
jl
cltd
stos
sub
out
inc
and
pop
mov
xor
jecxz
loope
add
repnz
cmp
ds
int
dec
cmpsl
jbe
sbb
hlt
outsb
sbb
mov
add
jb
cmpsl
push
cmpsb
ret
inc
and
mov
cmp
insb
jae
insb
or
cmpsb
jecxz
scas
sbb
inc
jle
dec
pop
lock
adc
sbb
jns
pop
pop
mov
adcl
sahf
mov
mov
arpl
mov
pop
inc
jnp
push
ret
and
mov
or
inc
sub
das
sahf
sub
push
inc
pop
inc
cmp
rcr
pop
lcall
cli
pop
mov
int
cwtl
xor
popf
sub
ret
add
or
cltd
and
test
dec
mov
dec
imul
or
imul
cmp
int3
into
outsb
mov
xchg
push
imul
test
or
jge
cmc
add
sbb
inc
mov
jg
addr16
lahf
sub
inc
sarb
inc
movsl
iret
adc
inc
push
cmp
dec
sahf
and
jnp
stc
je
adc
sub
xchg
and
inc
pushf
es
xchg
or
mov
adcb
loopne
out
insb
outsl
scas
out
add
pop
cltd
dec
lret
sub
aad
shlb
cmp
push
inc
arpl
push
sbb
notb
and
and
gs
not
lea
repz
and
shll
xor
fadds
ret
mov
arpl
sbb
push
adc
or
push
xchg
je
imul
loopne
cmp
cmpsl
mov
xchg
cmp
cli
das
push
imul
loope
dec
mov
sbb
xchg
ljmp
loope
testb
sbb
mov
xchg
cmp
add
mov
out
test
jle
cmc
outsb
add
sbb
and
add
aad
call
push
imull
jns
sahf
xor
bound
lea
cmp
and
inc
movsl
aad
shrb
sub
repnz
adc
cmpsb
adc
or
mov
push
sub
inc
xchg
shlb
loope
cld
rcl
into
push
add
lea
or
ss
jo
lret
cmp
leave
mov
lods
cwtl
or
fsub
iret
outsb
mov
push
orb
mov
ret
test
mov
mov
les
cmp
adc
je
mov
jo
ret
sbb
or
gs
test
ret
rcrb
lock
in
adc
jnp
sbb
test
rorl
ds
sub
pop
lahf
aas
mov
dec
push
movsl
jmp
test
xlat
mov
mov
adc
lods
cmp
mov
mov
push
mov
dec
jecxz
imul
push
movsl
ret
int
out
and
xor
mov
cmpb
mov
add
xor
pushf
scas
jecxz
popa
sub
jmp
or
cld
and
loope
ljmp
push
int3
add
xor
pusha
xor
sub
inc
cwtl
xchg
cmpsb
inc
sub
sbb
gs
mov
stc
sbb
setae
jnp
inc
sti
mov
pop
lret
push
pop
in
inc
jle
enter
popa
pop
adc
push
and
fs
stos
pusha
pop
dec
sbb
mov
frstor
xor
loopne
movsl
fs
jg
adc
cltd
fwait
jnp
mov
add
fiadds
sbb
pop
inc
popa
mov
cli
lods
outsb
scas
jp
into
mov
sub
xor
inc
aam
std
pop
push
push
test
inc
insb
push
push
mov
dec
xchg
bound
popl
fisubrl
inc
cmp
and
ljmp
pop
aad
shll
add
in
int
jne
push
lret
cmp
les
xchg
ljmp
mov
mov
sbb
and
jo
inc
outsl
hlt
cmc
sbb
into
dec
in
sbb
sbb
jbe
repnz
adc
mov
adc
mov
mov
idiv
mov
jecxz
mov
aad
inc
sub
js
lock
in
pop
and
push
out
repz
lea
lahf
adc
in
dec
ja
xor
push
push
mov
pop
outsb
or
pop
xchg
and
popa
jno
sub
into
mov
popa
adcl
mov
flds
jns
ljmp
repnz
imul
dec
repz
cmp
mov
jg
outsb
sub
out
jmp
or
jp
pop
cmp
mov
fldt
lds
notb
cmc
stc
repnz
pop
mov
loop
int
pop
sbb
push
xor
xlat
mov
lods
xchg
outsl
daa
jp
das
fwait
dec
mov
xor
pop
cmp
pop
xchg
or
and
or
enter
rclb
seta
cld
out
sub
cmp
mov
addr16
mul
dec
repz
pop
insb
push
sbb
shrd
mov
cmp
imul
arpl
mov
dec
mov
dec
add
sbb
dec
mov
inc
and
jl
insl
xorb
call
out
scas
in
cli
xchg
pusha
out
sub
movsl
pop
jl
mov
popa
mov
xor
and
or
cmpsb
pop
or
or
cmp
pusha
mov
test
das
dec
push
loop
jae
sub
mov
sbb
imul
xchg
pop
sbb
mov
mov
outsl
aaa
or
push
insb
cld
mov
and
imul
dec
loop
imul
cmp
fsubl
push
sbb
fs
pop
xchg
out
pop
out
cltd
jbe
push
inc
pop
in
mov
inc
mov
mov
out
movsl
add
mov
mov
sub
mov
bound
cmp
push
ficoml
jae
loopne
xorb
cltd
mov
jo
mov
add
inc
in
mov
lea
dec
jne
ret
mov
lods
stc
mulb
pushf
xorl
rcll
inc
mov
sub
cwtl
and
mov
cwtl
shll
sbb
push
js
scas
mov
addr16
gs
adc
insl
jl
adc
int
push
xchg
in
or
stc
pop
mov
xor
sbb
mov
xor
jmp
ljmp
fs
in
add
insb
aas
inc
icebp
mov
mov
cmp
mov
jge
fimuls
cltd
dec
in
sub
mov
sbbb
bound
xchg
cwtl
push
or
mov
hlt
pop
push
adcl
and
inc
sahf
xchg
out
sub
jne
sub
call
cli
and
call
adc
push
je
cmp
lds
mov
negb
or
int
or
lret
mov
fs
jge
xor
fs
jp
gs
fimull
xchg
xchg
xchg
insb
ficompl
or
rorb
shrb
mov
imul
aam
dec
rcl
into
fdivs
push
mov
adc
mov
fsubr
or
xor
test
xchg
mov
ja
sbb
mov
xor
add
xorb
arpl
add
inc
rorb
test
and
inc
stos
xor
adc
cltd
jne
jge
fidivs
xchg
jae
cmp
push
pushf
fldcw
inc
jns
xchg
fisttpl
jge
cmp
dec
and
jo
dec
cmp
popa
out
fmuls
xchg
push
or
movsb
aad
sbb
daa
add
rclb
pop
js
mov
xor
sar
into
shr
push
stos
lcall
jno
sub
xor
push
rcl
jmp
cld
js
dec
and
stc
xlat
add
ror
cmp
push
fldt
mul
jle
cs
mov
dec
jnp
xchg
push
inc
and
in
jne
jno
dec
ds
negl
jge
mov
and
shll
pop
or
jb
aam
insb
sarl
mov
mov
pushf
hlt
shlb
enter
inc
push
sub
repnz
mov
mov
sbb
daa
loope
cmp
movsl
test
sub
insb
repnz
mov
mov
jns
into
xchg
xor
pop
test
mov
je
orb
rcrl
xchg
cmc
nop
xchg
cs
lds
xor
or
hlt
stc
pop
or
cld
mov
and
out
pop
out
mov
adc
test
cmpsl
fidivs
jbe
jge
mov
sti
jle
xchg
add
cmp
stos
jle
mov
es
clc
fisubrl
sbb
and
aad
addr16
fwait
jns
push
kmovw
rorl
jae
outsb
js
shrl
mov
mov
add
cli
sub
fidivrl
push
xor
dec
jo
mov
xor
push
add
mov
ljmp
pop
push
pop
pop
ja
int
pop
mov
dec
sbb
dec
or
pop
sbb
in
mov
mov
pop
or
bound
out
stos
adc
popa
out
inc
push
inc
loop
scas
mov
dec
add
cltd
adc
imul
gs
mov
and
data16
mull
lods
test
cmp
cld
pop
hlt
loopne
lods
out
inc
ljmp
mov
aas
jecxz
stc
jp
je
jl
mov
btc
das
add
lcall
popa
sbb
jle
in
push
scas
js
cmpsb
push
jne
cmp
pop
repnz
adc
add
loop
mov
mov
mov
lahf
sub
and
push
adc
test
out
add
fnstsw
imul
hlt
shll
mov
fnsave
jbe
jb
sbb
insb
mov
pop
outsb
lea
repz
jo
popf
je
jge
popf
cld
sub
ret
mov
jge
add
in
inc
add
or
cmp
fldenv
push
data16
mov
scas
cld
sub
mov
cmp
in
nop
cmpsl
rolb
pop
sbb
sbb
cld
ret
adc
test
fbstp
test
mov
mov
cwtl
shrl
add
orb
dec
and
loop
xchg
sub
sub
mov
pop
icebp
dec
dec
xchg
and
sbb
dec
push
repz
mov
pop
jle
bound
and
fdivp
cmpl
add
movl
pop
mov
pop
in
mov
sub
daa
insb
add
outsl
dec
inc
cld
cmp
pop
shrl
shl
or
and
aad
shll
sbbl
jne
popa
sti
xchg
orl
push
movsl
mov
or
ja
jl
repz
pop
in
fucomp
push
into
dec
pop
into
icebp
inc
push
nop
cmpsb
repnz
daa
and
and
imul
fistpll
pop
shrl
adc
addr16
jbe
leave
adc
jae
push
mov
pop
in
jmp
loopne
scas
roll
dec
ss
and
inc
push
je
popa
and
int
outsb
or
jmp
push
daa
or
cwtl
dec
mov
bound
xchg
pushf
cmp
mov
ljmp
xor
in
test
xor
cmp
imul
inc
shr
xchg
push
mov
adc
fisubrl
fldcw
fwait
cmp
push
ljmp
push
lret
bound
mov
in
mov
cmovg
loopne
js
nop
jb
push
xchg
jb
imul
ret
rclb
push
insl
iret
sub
cmp
push
outsl
sbb
jl
cmp
dec
in
xor
push
cmp
cmc
insl
push
test
cltd
jne
dec
jb
divl
in
aad
sbb
outsl
and
adc
xchg
mov
inc
test
out
insl
ffree
enter
push
out
inc
icebp
mov
pop
leave
push
xor
insb
push
jge
nop
cmp
cmc
and
aam
cwtl
sahf
fidivs
hlt
add
iret
sbbl
cmp
add
dec
mov
mov
mov
fcompl
push
and
or
leave
pusha
inc
dec
push
lods
cli
jne
shll
rol
gs
int3
loope
xor
mov
out
lret
mov
or
inc
jb
ret
adc
jb
outsb
mov
lahf
adcl
mov
inc
sub
test
jne
pop
sbb
std
addl
sahf
xchg
and
dec
in
inc
add
sub
inc
add
stos
pop
mov
div
adc
fnstenv
jbe
and
jo
inc
mov
ret
xor
inc
dec
jo
je
mov
les
iret
cmp
push
pop
mov
iret
movsl
into
xor
lret
lcall
sub
sbb
loope
aam
jg
push
pop
xor
gs
adc
mov
pop
and
sbb
pushf
pop
or
lahf
bnd
push
adc
into
imul
jnp
or
mov
out
lods
in
and
sbb
stc
mov
into
and
dec
test
push
shl
mov
outsl
jle
popf
ret
mov
rolb
cmc
inc
xor
andl
test
fimuls
je
cmp
orl
xor
sub
lcall
pop
mov
mov
inc
inc
pushf
loopne
mov
xor
jg
push
mov
add
aas
in
outsl
adcb
cmpsl
add
imul
int3
xor
fabs
lcall
cld
mov
sbb
icebp
jne
adc
sbb
pusha
adc
push
or
aam
cmp
or
lahf
scas
int
shll
jno
mov
orb
pop
or
push
mov
movsb
cli
push
push
popf
mov
push
ja
rorl
jecxz
fildl
sub
cltd
xor
adc
repz
test
and
mov
dec
rolb
cmp
mov
incb
adc
or
pushf
and
push
pop
les
sahf
cmpsl
imul
imul
mov
jmp
into
mov
mov
jmp
xchg
mov
mov
jno
mov
dec
in
jmp
mov
in
lods
sub
or
out
mov
xor
je
mov
inc
inc
lahf
hlt
cli
jb
out
ja
jbe
inc
jmp
add
ds
pop
out
movsb
dec
scas
ret
nopl
fstpt
and
xchg
fldl
sbb
mov
sbb
push
inc
cmp
jb
add
stos
cmp
loop
push
fucompp
xchg
test
mov
dec
or
sub
sbb
rcrb
and
xor
or
pop
sub
dec
push
mov
adc
cmp
gs
daa
jo
mov
cmpsl
mov
incl
arpl
fldl
sbb
fnstcw
cmpsl
stc
js
mov
or
xor
test
sbb
pop
push
add
lea
fs
lret
or
ror
cmpsl
sub
mov
xchg
in
ret
dec
mov
in
and
aad
and
int
out
in
mov
sarl
test
push
enter
add
mov
pop
mov
test
cmpb
int
adc
inc
pusha
lock
xchg
idivb
shlb
push
and
addr16
lret
xchg
xchg
icebp
lock
mov
pop
movsb
cmp
mov
adc
xchg
cmp
and
aaa
icebp
sbb
daa
adc
jl
imul
das
pop
push
push
pop
pop
aam
jae
add
push
and
add
data16
or
jb
cmp
lret
out
mov
outsb
sub
push
jae
and
mov
push
call
int3
movsl
cld
xchg
mov
cmp
sbb
fucom
clc
jb
cmp
push
out
out
lock
lahf
mov
adc
popf
imul
mov
mov
pop
inc
push
insb
cmp
fsubs
sub
loope
test
cmpsl
bound
enter
adc
icebp
dec
sub
pop
jbe
jg
dec
cmc
sti
repnz
rcr
mov
push
aad
dec
shrl
adc
inc
mov
adc
aad
jmp
push
out
lea
lret
in
dec
or
nop
movsl
or
in
push
xchg
cmpsl
sahf
push
add
fsubrs
imul
mov
sti
cmpsl
loopne
sub
push
adc
cmp
lds
mov
xor
xchg
enter
jnp
test
sbb
pop
lahf
jns
adc
jmp
test
inc
inc
std
les
call
in
in
pop
jae
mov
sbb
jne
mov
mov
fbstp
jl
mov
jmp
popa
shll
xchg
mov
mov
push
mov
aas
xchg
push
test
lods
repz
cmp
mov
cmp
arpl
test
mov
adc
shrl
repnz
pusha
cmpsb
enter
into
jnp
xlat
bound
xchg
hlt
std
outsl
mov
test
xchg
lahf
jns
sti
jbe
in
xor
xchg
test
sub
jmp
push
mov
adc
mov
fimull
push
adc
adc
cmp
xor
ffreep
add
daa
dec
lods
stos
repz
dec
mov
aaa
fldcw
cltd
test
into
cld
out
jno
mov
std
movsb
lret
clc
dec
add
jg
int3
repz
enter
push
add
jmp
mov
or
lea
cmp
mov
add
xor
int3
add
ret
pushf
cmp
push
jno
dec
mov
mov
jle
or
jno
fiaddl
add
xor
add
push
and
mov
ds
mov
jecxz
pop
hlt
icebp
mov
xor
sub
xchg
adc
sub
pop
arpl
popa
mov
jbe
or
mov
out
in
ret
filds
clc
iret
ret
cmc
popf
idiv
rorb
sub
xchg
sbb
fs
cmp
sbb
add
mov
cmp
rclb
cmc
movl
roll
and
mov
test
movsb
test
xor
inc
xchg
xchg
xor
or
mov
xlat
sbb
or
add
jnp
fs
or
aad
dec
pop
inc
or
iret
inc
icebp
in
push
fstpl
sahf
int3
arpl
shrb
cli
mov
jmp
pop
jge
and
mov
cwtl
or
orl
pop
test
sbb
or
out
daa
mov
xlat
lahf
push
pop
push
sbb
jo
or
mov
push
sub
inc
or
mov
jb
and
vprotb
insl
shrl
sub
xchg
jmp
mov
mov
inc
mul
mov
out
leave
in
xor
fcoml
std
add
xor
ret
ret
push
scas
iret
xor
dec
aam
push
pop
mov
xor
imul
xor
xchg
ss
push
fldcw
jne
cs
scas
adcb
inc
jecxz
cs
lahf
xchg
dec
sbb
aam
rclb
rcrl
cmpsb
outsl
xor
jg
jns
aam
or
mov
sbb
fs
leave
popf
andb
xor
sti
bound
addr16
out
in
cmp
add
inc
inc
xor
popa
sbbb
bound
in
fstpl
mov
jmp
mov
test
stos
xchg
and
xchg
fwait
les
mov
lods
fcmovu
clc
push
in
mov
outsb
cmpsb
pop
xchg
adc
jge
shlb
mov
push
int3
jns
nop
test
loopne
xlat
dec
out
dec
es
mov
das
push
shrb
and
out
sbb
mull
out
fmul
rcrl
neg
out
inc
bound
pusha
cli
ret
adc
fstps
test
dec
mov
sub
movsl
add
mov
and
test
jge
pop
jp
jae
cmpb
shrb
insl
mov
mov
shlb
ret
popf
mov
or
xchg
mov
loopne
xor
or
int3
jmp
sub
mov
mov
fs
xchg
xlat
dec
pop
push
mov
fnsave
dec
xchg
lahf
pushf
add
adc
mov
pop
in
pop
mov
inc
push
dec
jb
out
fisubs
lahf
adc
shlb
ljmp
iret
ret
rolb
xchg
sub
cwtl
and
xchg
lods
xor
in
inc
jecxz
jecxz
or
int
mov
test
dec
addr16
aaa
push
repnz
and
adc
gs
inc
lret
imul
pusha
cwtl
jbe
scas
xchg
out
rcrl
js
push
cmp
es
lret
sub
sub
out
push
xchg
std
scas
dec
leave
jmp
dec
scas
imul
pusha
pop
jno
repz
mov
out
push
pop
mov
pop
mov
mov
fidivl
pop
iret
mov
lods
fiaddl
mov
bound
scas
dec
xchg
jmp
jno
xor
jno
lods
mov
lret
mov
das
enter
cmp
mov
adc
sub
sarl
cmpb
adc
das
sbb
add
rorb
leave
pop
ja
dec
ljmp
dec
fisubs
mov
fidivs
jmp
iret
xor
and
mov
dec
mov
out
bound
decl
push
into
fwait
out
ret
mov
popl
mov
leave
xadd
push
mov
and
sub
je
sub
hlt
clc
ja
aam
push
lods
adc
fs
pop
mov
cs
cmp
test
fmull
mov
sub
fisttpll
push
sbbl
cmp
jp
out
inc
mov
sub
dec
pop
cmp
stc
xor
inc
pop
mov
mov
mov
out
lahf
les
push
cltd
ja
stc
fld
push
popa
push
adc
push
out
push
in
outsl
dec
stc
and
xchg
ds
push
mov
lahf
push
insb
or
jecxz
sbb
lcall
and
ss
lcall
inc
adc
mov
push
add
je
sti
jmp
fisubl
test
mov
mov
subl
cmc
out
je
hlt
iret
pushf
mov
cmp
lock
hlt
and
cmp
outsb
out
mov
lcall
lods
loopne
in
inc
lods
out
add
gs
or
inc
sub
clc
inc
xchg
jb
mov
sahf
test
into
push
jno
out
into
mov
repz
pop
mov
inc
push
test
mov
nop
dec
lret
outsl
xchg
call
fstps
mov
loopne,pt
pavgb
lret
fnstenv
sahf
test
in
mov
addl
js
dec
mov
inc
and
out
loope
adc
or
inc
dec
enter
repz
or
cmp
and
out
sub
xorl
outsl
js
out
xchg
inc
and
and
cmp
outsl
rcl
lfs
and
jno
mov
repnz
loopne
jns
pop
fistl
test
or
mov
movsl
adc
inc
sub
jg
sub
pop
mov
inc
int3
jg
push
xchg
hlt
cmp
lea
mov
data16
or
xor
and
mov
ds
je
outsb
lcall
pushf
cwtl
lods
hlt
outsb
xchg
mov
fldz
out
test
jno
sub
stc
sub
mov
and
sub
aas
dec
xor
add
fucomi
adc
or
mov
cmp
mov
jbe
cmpsl
mov
jae
shlb
xor
call
fs
int3
cs
cmpb
push
sub
sahf
jnp
add
fld
mov
out
unpcklps
pop
xchg
repnz
pop
sub
cmp
clc
movsl
mov
push
cs
dec
inc
sar
in
xor
mov
adc
mov
and
ljmp
add
fmuls
or
roll
adc
jmp
pop
jnp
mov
mov
mov
cmpsb
andb
add
jno
push
or
inc
mov
sub
dec
mov
adc
outsb
mov
shufps
sbb
outsb
mov
lods
xchg
xchg
es
pop
hlt
cmp
jl
mov
adc
and
daa
push
jecxz
sahf
inc
arpl
loop
cwtl
lds
inc
mov
enter
inc
xchg
inc
pop
ret
test
out
and
mov
jl
popa
test
jecxz
test
aas
cwtl
push
push
xchg
mov
imul
mov
shlb
push
lds
movsl
js
sbb
mov
sbb
mov
cmp
mov
sarb
clc
jb
iret
push
xorb
jo
int
movsb
je
add
jg
cmp
shrl
cltd
mov
loope
xor
fwait
pusha
adc
xchg
subl
in
faddl
inc
xchg
loop
inc
addr16
mov
inc
add
call
call
daa
push
mov
push
insb
inc
pop
mov
pop
jmp
xchg
xchg
sbb
je
outsb
fxch
stos
cmpsb
and
xchg
stos
and
ja
outsl
clc
cmpsb
bound
shlb
ret
jns
jmp
or
cltd
rcrl
jmp
imul
outsb
insb
cltd
push
push
shll
xor
clc
cmpsl
push
sbb
adc
aas
sti
das
xchg
sbb
mov
dec
mov
or
test
shrb
xor
les
sahf
mov
fnsave
adc
call
or
lods
push
out
repz
mov
or
jp
lods
sbb
jle
xchg
pop
add
clc
loop
push
subb
sahf
push
int3
clc
cmpsl
push
add
ret
xlat
lods
lret
mov
mov
adc
xchg
cmp
inc
iret
cmc
sbbl
cwtl
jbe
cmp
sub
cmp
cltd
fcoms
mov
nop
int3
shrb
inc
icebp
mov
xor
sahf
or
imul
mov
or
lods
in
lods
icebp
push
aaa
scas
stc
adc
fsubrl
push
cltd
xchg
cmp
cmp
jbe
stc
stos
push
or
insl
add
out
xchg
push
jae
filds
fldcw
push
or
lods
scas
movsl
das
pop
fstl
ror
fildll
jne
mov
xor
lods
jmp
adc
dec
shll
sub
mov
orl
cli
pop
cmc
xchg
mov
inc
repz
ret
mov
and
jg
pop
rcrl
sti
hlt
fidivrs
dec
insb
and
cwtl
xor
nop
bnd
inc
inc
sub
push
mov
in
sbb
sbb
inc
mov
or
test
das
jge
lea
xchg
fstpl
lock
mov
rclb
pop
test
and
cwtl
in
lea
mov
sbb
cmpsb
jmp
fisttpll
sbb
movsb
int
dec
nop
push
iret
lea
fildll
sub
pop
jno
mov
sahf
and
jle
ss
push
or
cmpsl
stos
dec
std
out
movsb
and
loope
test
jo
sub
mov
push
push
push
push
in
aas
jns
jl
insl
xor
mov
aad
jb
jecxz
xchg
fidivs
jb
outsb
sbb
dec
pop
addl
xor
sahf
inc
movl
mov
dec
aas
repz
xchg
pop
call
sub
xor
adc
testb
xor
je
jo
add
scas
jne
and
sub
iret
pop
xchg
lahf
scas
lahf
cltd
and
mov
sahf
xchg
std
icebp
push
test
andb
adc
ljmp
push
test
xchg
cmp
sbb
cmc
push
mov
jle
mov
std
jo
push
adc
js
fsts
out
xor
pop
stc
into
cld
push
fistpl
mov
insb
jp
pop
push
xchg
mov
rorl
cld
sbb
addr16
pop
or
mov
dec
int
and
je
test
scas
fisttpll
add
mov
ret
cmpsb
jno
mov
fstpl
popf
mov
das
mov
adc
repz
adc
iret
xchg
and
pop
push
popa
into
test
jge
add
push
mov
pop
push
popf
mov
pop
jo
adc
lahf
or
lahf
xchg
xor
jno
mov
insl
fimuls
ljmp
jp
jp
test
insb
imul
add
add
jg
ss
mov
xchg
and
test
mulb
and
mov
ljmp
sar
loope
mov
mov
push
icebp
push
insb
aaa
arpl
bound
xlat
les
lds
icebp
addr16
fnstsw
mov
xchg
jmp
outsb
xchg
jg
jns
cmp
ret
cmc
arpl
push
and
cli
int
negl
or
movsl
dec
mov
push
mov
mov
sub
mov
xchg
jo
lods
cmp
and
jae
add
xchg
mov
xor
pop
add
jl
push
adc
testl
loop
dec
mov
jg
int
loope
repnz
jle
std
test
mov
mov
pop
es
cltd
cmp
cmp
mov
fdivl
pop
int3
pop
scas
mov
mov
shrl
ret
std
push
mov
lds
sub
mov
xchg
leave
fldenv
xchg
push
mov
push
sub
das
xor
cmp
int3
sbb
bound
ss
fwait
insl
mov
scas
sub
mov
outsb
sub
push
cmpsb
xchg
es
jb
hlt
insl
fstl
bnd
add
aam
addr16
loop
adc
int
and
cltd
xlat
sub
mov
inc
pop
out
inc
call
mov
jp
repz
shlb
addr16
mov
shll
inc
jl
jnp
inc
movsl
sub
test
ljmp
inc
push
add
add
add
loopne
popf
and
dec
iret
cmp
inc
dec
fdivrp
insb
jnp
lods
insb
push
fisubrl
mov
cmp
mov
popa
inc
sahf
jae
lock
push
iret
pop
call
jbe
xor
lods
aad
add
jnp
lods
cs
ret
test
in
cmc
mov
repz
mov
sub
mov
nopl
popf
cmp
or
inc
xchg
clc
shl
mov
sti
loope
or
adc
jmp
add
jb
iret
add
std
xchg
js
js
loop
adc
js
mov
mov
and
lret
mov
lock
mov
insb
mov
mov
mov
loop
lcall
xchg
mov
sub
test
push
adc
and
xchg
lahf
je
movsb
imul
shr
bswap
push
negl
fdivl
xchg
jg
aas
and
cmpsb
adc
or
push
out
cmpsl
inc
lock
jle
jl
sbb
adc
test
mov
jno
popf
lret
adc
add
xchg
pop
mov
in
mov
add
xchg
add
or
mov
xor
push
inc
pushf
ficomps
mov
pop
imul
call
inc
mov
rorl
jle
pop
addr16
sar
movsl
aaa
add
fwait
scas
mov
in
jbe
sbb
jbe
pop
popf
mov
negb
mov
push
cltd
push
pop
ret
add
popa
and
dec
adc
loop
mov
and
xchg
xor
into
and
scas
xchg
xchg
mov
inc
add
sti
jb
pop
call
test
mov
les
sbb
mov
cmpsb
fwait
sbb
stos
int3
mov
and
xchg
adc
and
sub
icebp
cmp
dec
pop
pop
cmp
adc
jno
xchg
sarb
jp
scas
int3
add
jecxz
idivb
fldl
pusha
icebp
icebp
scas
adc
push
inc
dec
test
leave
shr
inc
cmp
mov
xor
sahf
cmc
nop
mov
push
je
int
notl
jmp
sub
nop
inc
sub
and
movsl
cmp
mov
mov
ss
jp
lods
rorl
sub
push
pop
mov
cmp
out
xor
jecxz
push
xor
dec
jo
shlb
ljmp
scas
aad
mov
das
mov
aad
jmp
in
xchg
stos
inc
pushf
negl
mov
addr16
subb
inc
ret
scas
int
mov
daa
inc
mov
inc
mov
lock
mov
jne
jne
je
cmc
and
xlat
ljmp
mov
and
sub
jae
mov
push
mov
xor
add
mov
adc
and
xchg
pushf
pop
hlt
call
pop
sub
mov
sub
jne
in
add
cltd
mov
xchg
insl
and
cmp
aaa
in
pop
xchg
pop
mov
adc
pop
lock
fnsetpm(287
push
or
ret
fcoml
inc
and
rcr
mov
ds
idivb
popa
jg
loopne
push
outsl
popa
loope
mov
adc
rcr
dec
shr
add
leave
push
mov
gs
clc
jmp
xchg
mov
xchg
aad
jnp
mov
push
mov
mov
movsb
push
mov
xor
xor
push
jno
cmp
les
or
sbb
jmp
push
ret
into
adc
adc
hlt
movsb
stos
imul
sbbl
xchg
dec
or
jl
sub
pusha
aam
fwait
int3
in
xchg
out
mov
lcall
pusha
sbbb
fwait
lods
into
sbb
aam
dec
xchg
sub
dec
pushf
push
or
in
js
ss
adc
cli
stos
dec
mov
inc
out
jb
jle
dec
xchg
push
outsb
jnp
pop
push
and
jg
shll
dec
sub
sbb
push
cmp
xchg
test
adc
mov
cmp
jo
mov
xchg
cmp
inc
dec
call
jae
mov
xchg
bound
xor
push
into
int3
xchg
int
push
mov
pop
jnp
dec
lods
shll
dec
or
jo
adc
mov
fisubl
sbb
inc
adc
ljmp
fwait
mov
lahf
stc
push
icebp
jmp
mov
push
pop
outsb
inc
out
pushf
pop
in
les
pop
push
and
rcll
vcvtsd2ss
mov
add
and
imul
clc
lret
rolb
inc
adc
adc
test
outsl
iret
sbb
push
xor
cwtl
mov
jge
scas
jp
adc
mov
ja
negb
fyl2x
cmp
daa
arpl
call
xor
sbb
aas
jp
push
ret
cmc
mov
pop
jl
imul
cmpsl
or
add
sub
jp
sbb
cli
cmp
and
pop
push
fdivrs
push
sub
add
inc
pop
adc
scas
mov
nop
loop
icebp
mov
fsubrs
cli
mov
pop
sub
jns
imul
xchg
mov
or
enter
andb
popa
mov
add
push
pop
insb
scas
inc
jb
mov
push
push
cwtl
repz
inc
jecxz
adc
es
push
scas
lret
movsl
scas
stos
ja
loopne
movsl
inc
movsb
in
mov
inc
fstpl
or
in
push
arpl
cmp
dec
cmp
adc
xchg
cld
jae
push
roll
push
mov
mov
sahf
fistpl
loope
jge
xchg
inc
add
mov
cs
cld
dec
jg
fisubs
mov
dec
je
pop
xor
in
test
mov
adc
repz
fdivrl
inc
mov
aas
add
gs
lock
xchg
mov
push
cld
dec
fbld
xor
aaa
or
sbb
or
cmc
jg
adc
dec
jno
mov
test
mov
mov
adc
or
inc
aas
mov
mov
or
jmp
push
sahf
dec
mov
stc
mov
sbb
pop
and
and
mov
not
dec
xorb
leave
cmpsl
mov
mov
pop
imull
in
dec
xchg
leave
or
mov
push
test
xchg
lcall
in
pop
lret
cmp
pop
cmp
nop
xchg
fldl
push
xor
push
ret
mov
jns
mov
mov
flds
ficompl
mov
in
push
lcall
lret
mov
fildll
outsb
jo
lds
arpl
in
adc
inc
sbb
sub
out
cmp
insb
push
fnstenv
push
outsl
call
rorb
movsb
loope
ret
xchg
ftst
fs
lock
mov
xlat
in
fidivrl
fs
je
push
inc
lahf
pop
dec
shll
push
test
push
cmpsb
lret
out
dec
push
or
push
ret
inc
xor
inc
leave
loop
popf
mov
mov
xor
cmp
rclb
outsb
testb
insl
push
sarb
addr16
popa
lods
mov
js
and
cmp
push
mov
fnsave
outsb
enter
inc
scas
out
pop
loope
filds
test
stos
je
cmp
lods
sub
cmp
push
add
stc
dec
movl
mov
aaa
or
in
adc
pop
push
out
rolb
inc
adc
dec
jo
xchg
mov
in
pop
mov
or
inc
out
lahf
push
movsb
cld
push
xchg
shl
push
add
jne
testb
sub
ficompl
sub
xor
lcall
test
and
insl
mov
and
std
out
or
lret
push
testl
ds
in
sbb
jne
and
pop
push
out
sbb
test
push
loope
mov
sbb
add
daa
sbb
mov
shlb
fsubrl
push
pop
icebp
mov
xlat
mov
inc
jle
in
stos
fsubl
leave
sbb
and
popf
das
sbbb
test
and
cmp
inc
xor
enter
enter
repz
insl
inc
pop
iret
aas
aaa
jecxz
pushf
pusha
cmp
les
add
movsb
inc
in
pop
sbb
jns
mov
lock
ret
add
lods
push
mov
inc
in
xlat
inc
cld
lea
or
or
cmpsb
pushf
mov
popa
cmp
add
or
insl
pop
sbbb
or
xor
xchg
xor
pop
jl
divl
lret
sub
mov
xor
pop
mov
out
inc
or
mov
sbb
mov
and
shr
xor
test
adc
push
push
push
push
dec
lcall
mov
test
shrb
jecxz
jbe
sub
adc
adc
cmp
aad
sbb
sub
popf
sub
xor
dec
in
in
mov
push
repnz
fimull
push
jo
mov
dec
push
js
int
hlt
bound
imull
sub
adc
push
sbb
enter
and
leave
mov
push
cli
push
push
hlt
fisubl
andl
pop
ja
adc
arpl
out
fsubl
mov
sbb
stc
cmp
fwait
dec
cs
sbb
dec
je,pn
xor
pop
addr16
shlb
pop
lret
push
push
jl
insl
test
loope
xor
ljmp
sbb
mov
xor
push
iret
movsl
jp
push
movsb
pop
mov
and
and
sahf
push
addr16
sbbl
adc
sub
aam
lds
push
xchg
in
call
add
in
shlb
pop
dec
and
test
call
mov
sub
ljmp
or
and
sbb
addl
inc
pop
jnp
inc
neg
mov
dec
imul
add
push
inc
ljmp
xchg
sahf
scas
imul
outsl
sahf
xchg
test
pop
jbe
inc
rolb
add
pop
ret
or
cmpsl
xbegin
mov
mov
mov
adc
mov
and
ret
es
jo
xchg
and
fmull
mov
in
les
les
or
inc
data16
fnstsw
rcrb
pop
adc
cwtl
pop
iret
cmpl
lcall
out
mov
lock
mov
out
shl
mov
fbstp
ret
cmp
push
or
int
mov
inc
xor
sti
jae
mov
inc
nop
mov
inc
xchg
lods
ljmp
std
lret
push
les
mov
rolb
cmp
into
mov
cmp
jmp
mov
jno
ljmp
jle
dec
ds
add
push
dec
xor
dec
mov
rorl
cmp
loopne
mov
xchg
int
cmp
xor
ret
rdmsr
pusha
ret
movsb
mov
cwtl
push
std
insb
push
sbbb
mov
jns
push
jp
shlb
gs
icebp
dec
jns
adc
mov
aas
push
ror
icebp
call
imul
test
movsl
sub
loope
cmc
rcrl
rcll
fwait
xor
pop
push
pop
xchg
cmp
cmp
jb
repz
les
nop
lcall
dec
clc
mov
stos
clc
leave
popa
jge
pop
push
fs
fs
iret
movsb
mov
cmpsb
cli
cs
leave
iret
inc
fs
cmc
xchg
push
xchg
xor
pusha
int
ja
lods
mov
loop
adc
subl
mov
mov
dec
mov
mov
push
mov
xchg
sti
add
stos
cltd
xor
add
or
pusha
cltd
and
mov
sbb
fsubl
testb
in
mov
rorb
mov
pop
shll
mov
testb
cld
mov
leave
decb
out
mov
lods
scas
int3
xor
mov
xor
and
and
lret
push
mov
test
pop
xor
orb
imul
push
stos
aam
mov
pop
xor
mov
mov
inc
adc
jmp
outsb
rcrl
pop
test
pop
cmpsb
test
or
or
aad
inc
cmpsl
inc
xchg
test
insl
arpl
xchg
ss
shrb
inc
cs
imul
sub
inc
jae
pusha
mov
cs
jl
add
sub
mov
dec
adc
dec
inc
sbb
push
and
sub
or
or
jp
add
testb
adc
inc
movsl
jle
add
clc
repz
jge
mov
cmp
popf
insl
cmpsb
jbe
test
das
adc
stos
mov
mov
js
mov
xor
call
ds
je
pop
sub
cs
out
mov
or
insl
bound
stos
adc
mov
mov
jle
xchg
dec
mov
dec
jne
and
push
movsb
fstl
daa
aas
push
repz
cli
clc
roll
cmp
into
pop
adc
test
lods
shrb
mov
rclb
popa
lret
mov
or
mov
sbb
sub
aas
pop
stos
inc
scas
dec
jle
push
jg
repz
add
sub
stc
arpl
push
fcoml
gs
add
ret
mov
int
popf
icebp
sub
mov
sbb
push
mov
sub
sbb
pop
pop
mov
cmpl
fildll
aas
imulb
and
pop
bound
jo
xchg
pop
divb
or
in
xchg
xchg
ret
aaa
xor
jo
in
dec
es
hlt
pop
jge
add
icebp
and
or
js
decb
lcall
add
adc
adc
sbb
lea
loopne
mov
pop
fs
lret
xor
push
sbb
int3
ds
mov
nop
test
aam
pop
sahf
bound
in
out
out
cmp
test
scas
mov
rcr
inc
adcl
stos
out
mov
mov
mov
jbe
cmp
push
pusha
ja
addr16
xchg
pop
xlat
js
sbb
inc
inc
mov
popf
lods
into
and
aad
outsb
pop
fcoms
lods
and
aaa
mov
clc
jbe
aam
mov
icebp
ret
mov
pop
or
nop
icebp
cmp
repz
insb
lret
mov
mov
sub
mov
push
les
sbb
pop
cld
mov
pop
test
jmp
mov
ret
xchg
lds
stos
add
and
and
sbb
cmpsb
sub
dec
mov
jno
mov
cmp
lds
mov
repnz
inc
sar
bound
js
mull
inc
shrb
daa
icebp
cli
xor
pusha
es
ja
xchg
rorl
pop
ret
das
push
scas
jne
cli
xchg
fists
test
pop
cmp
xchg
inc
test
arpl
sbb
inc
test
movsb
adc
jbe
cmp
sub
push
inc
int
mov
and
cmp
and
pushf
xorl
mov
mov
dec
cmp
xor
push
aad
inc
inc
cltd
cs
push
push
push
mov
jge
aaa
or
jl
adc
cmpsl
and
jmp
dec
shll
ljmp
rcll
inc
xor
jge
mov
jo
mov
pop
cltd
adc
xchg
mov
mov
bound
dec
mov
push
mov
iret
add
outsl
add
in
and
jns
mov
fistl
ja
jno
pop
ret
pop
dec
fstpt
testb
jl
push
inc
push
dec
dec
jge
ret
sub
add
sbb
dec
fst
add
sbbb
loope
cmovs
add
lret
pop
sti
arpl
mov
into
add
push
mov
pop
mov
cmpsb
mov
sub
xchg
xlat
sbb
jbe
sub
pop
lcall
dec
jecxz
cld
mov
push
cmp
arpl
push
adc
mov
inc
add
push
out
sbb
paddusb
jmp
push
negl
jne
push
or
das
dec
enter
mulb
inc
mov
mov
mov
sbb
pusha
ljmp
jl
test
mov
mov
arpl
lcall
or
in
lahf
mov
cmc
mov
sub
dec
imul
arpl
test
pop
push
sub
push
rclb
cli
hlt
nop
gs
imul
dec
xchg
rcrl
sub
cmp
data16
jmp
add
mov
loope
adc
std
fimull
scas
adc
je
fsubrl
xchg
and
test
pop
mov
dec
js
push
icebp
sub
cld
add
push
test
cld
in
movsb
clc
stos
lcall
push
test
pop
mov
ljmp
mov
sub
adc
jns
dec
jnp
stos
jl
adc
sub
push
add
jp
lods
shlb
add
mov
dec
iret
out
and
jl
test
enter
mov
pop
cmc
jecxz
jne
mov
xor
fisubs
mov
fisttpll
popf
aas
and
xchg
ss
xchg
push
inc
in
pop
cli
mov
mov
xchg
adc
sbb
data16
test
in
insb
scas
jg
dec
mov
pop
sub
and
std
outsl
xchg
cmp
shld
add
mov
loop
repz
insb
lcall
pop
and
pop
fld
mov
outsl
cmpsb
sbb
dec
aad
add
into
pop
mov
jge
call
mov
repnz
push
mov
cmpsb
and
and
pcmpgtb
daa
lret
imul
loop
jne
das
hlt
insl
pop
sub
dec
adc
xor
int3
mov
or
sbb
pop
and
jo
lcall
cmpl
lock
xchg
cmp
fisubrl
imul
es
cmp
aaa
xor
pusha
nop
xchg
orl
andb
loope
sbbl
repz
pusha
loop
repz
mov
sbb
shlb
mov
sub
cmpxchg
inc
mov
aad
mov
not
jmp
popa
sub
mov
adc
lret
add
sub
and
jg
popa
jno
repz
test
shrl
dec
dec
rclb
push
cmp
jmp
mov
ret
enter
xor
int3
popa
cmp
cmpsl
scas
lahf
mov
inc
cltd
iret
mov
fidivs
ss
or
pop
xor
das
cs
fbstp
xchg
in
sbb
pop
ljmp
xchg
or
pop
adc
lds
dec
xchg
vpcomuw
movsl
jne
xchg
repz
xchg
bsf
sbb
movlhps
icebp
pop
add
adc
fistps
xor
loope
insl
xchg
ret
mov
fiaddl
adc
pop
std
stos
mov
push
loope
stos
roll
cs
and
sub
jg
imul
fisubrl
pop
fisttps
push
push
stos
out
mov
cwtl
int3
rcrl
pop
int3
jnp
mov
ja
push
unpcklps
pushf
cmp
push
mov
or
mov
mov
xchg
mov
adc
movsl
cmp
cld
xor
xor
out
and
dec
pusha
mov
stc
stos
scas
inc
inc
addl
jbe
mov
push
imul
ja
shlb
cmc
jno
jb
fwait
ljmp
testb
repz
jecxz
pop
inc
adc
es
dec
cmp
xchg
cmp
mov
movsl
out
and
inc
out
aam
pop
lds
push
lahf
push
js
xchg
and
pop
pop
xchg
jg
mov
insl
fcmovnbe
xor
pop
dec
jne
mov
xor
negl
loop,pt
and
arpl
sub
dec
into
fsubrl
repz
cs
mov
jb
out
test
sub
cmpsb
cltd
decl
stos
mov
or
mov
daa
stc
outsb
int
rclb
aad
scas
and
imul
inc
xlat
call
lret
pop
mov
cld
sbb
pop
cmpsl
dec
mov
out
sbb
arpl
push
stc
lahf
js
sub
roll
aad
sahf
cli
daa
outsb
icebp
nop
nop
addr16
jl
es
xlat
stos
mov
in
aas
fwait
cwtl
push
fistpl
stos
ret
adc
das
or
repnz
daa
flds
push
push
lcall
inc
jg
in
xchg
pushf
lods
ret
aas
inc
pusha
mov
jb
shll
adc
out
hlt
pushf
fistpl
sbb
lahf
inc
into
scas
mov
xor
addr16
in
inc
xchg
pop
stc
lds
lea
pusha
into
div
jmp
jns
outsl
gs
dec
lcall
lret
sarl
jno
xor
xor
and
aam
mov
mov
std
mov
daa
mov
push
loop
sahf
jae
xchg
mov
xchg
mov
sbb
sbb
adc
mov
dec
adc
or
test
jns
and
or
lods
cs
popf
out
mov
test
cmp
inc
dec
pop
aas
movsb
and
std
mov
lahf
and
mov
adc
in
mov
and
ja
push
imul
cmp
sub
inc
clc
dec
test
rolb
dec
fisubl
push
cmpsb
out
cmp
sub
fcmovnb
jnp
mov
and
shlb
xor
inc
pusha
xor
pop
out
jmp
mov
dec
pop
inc
dec
pushf
cld
icebp
mov
out
dec
mov
sti
mov
inc
sahf
fucom
xchg
push
jns
ret
nop
hlt
testl
shl
mov
test
test
inc
fs
stc
xorl
mov
loope
jo
clc
mov
ret
adc
xchg
sbb
cmp
xor
mov
aam
adc
adc
xor
dec
in
mov
cmp
hlt
xor
sbb
add
cltd
out
sub
jp
movb
movsw
push
or
lea
adc
add
ret
ds
jae
cwtl
or
fadd
daa
shl
mov
adc
dec
inc
push
dec
xor
loop
mov
sarb
xor
dec
pop
arpl
icebp
je
jmp
mov
daa
lds
std
xchg
neg
and
leave
test
inc
push
inc
push
je
dec
jbe
pop
jg
lods
adc
loopne,pt
arpl
pop
lahf
lret
sbbl
loop
xor
popa
repnz
lret
xchg
xchg
push
add
shld
imul
push
loop
or
pop
in
out
pop
movsl
shlb
es
inc
or
adc
mov
and
sbb
sarb
xchg
push
adc
and
stos
clc
jle
sub
inc
adc
xlat
push
mov
jns
pop
les
stos
jge
push
test
dec
cwtl
mov
dec
push
mov
outsl
jmp
sbb
out
mov
and
xchg
sub
push
sti
jmp
xchg
lret
lea
mov
cmovne
mov
or
test
sarb
and
pusha
daa
and
cmp
add
js
insl
subb
cli
arpl
and
pop
in
mov
cltd
and
inc
adc
fstpt
push
cmp
dec
pop
adc
test
sub
xchg
xchg
or
jnp
hlt
cmp
add
jl
mov
lret
outsl
jg
ret
mov
insb
inc
sub
ffree
jle
ret
out
jle
icebp
cwtl
adc
cmpsl
push
and
ss
push
es
and
or
dec
out
insb
into
xchg
in
inc
fucomi
imul
icebp
fldcw
add
stc
mov
out
pushf
fldl
lock
es
mov
incl
imul
lcall
stos
int
pusha
aas
jmp
roll
adc
push
dec
mov
cld
popa
mov
popa
inc
popl
inc
sti
and
arpl
inc
out
adc
jmp
cmpl
pop
pop
inc
loopne
pusha
ds
xchg
mov
cmp
jmp
iret
xchg
dec
mov
stos
xlat
into
and
mov
jl
outsl
imul
dec
rcrb
pop
hlt
mov
out
mov
sub
push
ret
and
sub
add
inc
jb
push
and
inc
xchg
mov
in
cmp
xor
inc
sahf
popa
pmuludq
xchg
add
outsb
mov
clc
jmp
sub
mov
int3
cmp
lock
lock
arpl
lcall
xor
mov
push
xor
enter
push
mov
push
inc
dec
cmpsb
cmpsb
in
repz
mov
bound
push
jge
pop
in
lret
shrb
jb
aad
test
ja
ds
mov
push
lcall
test
and
mov
sub
or
xchg
movsb
jl
xchg
stc
loop
mov
push
int
add
push
movsb
mov
movsb
push
xor
andl
jg
outsb
les
out
test
jge
xchg
test
inc
cmp
cmc
lcall
loop
mulb
jns
lcall
ret
pop
jl
dec
in
jp
jge
int
nop
mov
in
pop
push
js
pop
jne
sbb
jns
outsl
or
cmp
xlat
sahf
or
fs
jmp
sub
sub
dec
push
sar
fnstsw
pop
jp
movsb
sbb
mov
mov
pop
sub
jbe
add
popf
cmp
jp
repnz
hlt
and
dec
shrl
mov
faddl
mov
mov
push
loop
add
pop
rcl
sbbb
data16
imul
rol
es
test
sti
and
sti
mov
mov
cmp
push
push
jb
and
testb
fisttps
add
pop
pop
mov
jl
push
ds
xor
xchg
sbb
fstps
loop
test
push
cmp
mov
dec
mov
add
inc
leave
pop
dec
std
jb
and
dec
adc
fwait
pop
in
xchg
ret
push
sahf
sub
xchg
inc
mov
sub
xchg
movsl
call
mov
sub
cs
jae
popf
sbb
nop
hlt
xor
dec
jge
lea
pop
inc
clc
sbb
cmp
loope
cmp
ja
jge
sub
cmp
dec
imul
cwtl
in
xorb
test
lcall
into
and
xchg
andb
mov
sbb
pop
cli
addb
sub
nop
leave
outsl
rcrb
sbb
and
or
cmp
mov
lds
jbe
sbb
inc
mov
mov
pop
in
rep
mov
loope
xor
pop
out
in
mov
fistps
jb
mov
inc
cli
mull
out
cmpsl
std
insl
das
and
xchg
pushf
out
push
mov
out
pop
stos
mov
aad
filds
out
mov
add
call
pushf
imul
add
lock
insl
add
and
sarl
dec
push
rol
ret
push
insl
emms
mov
fdivrs
cmp
fsubp
pusha
ja
pop
sbb
xchg
and
push
dec
icebp
or
or
adc
pop
mov
mov
les
mov
and
mov
outsl
fwait
mov
aad
jp
int
outsl
push
xor
adc
cmp
add
fistps
xchg
inc
push
sub
jp
cmpl
lret
or
ret
std
cmp
es
xor
jb
fiaddl
pop
pop
std
xlat
sti
mov
sarl
xor
in
push
lret
stos
add
pushf
sub
sub
fdiv
push
dec
adc
inc
sti
lret
test
imul
call
sbb
and
loop
fstl
dec
cmp
insl
dec
insl
sub
mov
leave
inc
mov
cmpsl
adc
cmp
or
lock
jg
sarl
jae
movsb
fwait
stos
icebp
lea
lds
ss
xchg
into
xor
jg
adc
icebp
daa
popa
cmp
repnz
jne
out
adcb
jg
mov
movsb
ret
aam
mov
pop
xor
pop
rcrb
shrl
fldcw
xchg
into
mov
shll
xor
dec
int3
out
sub
and
cmpsb
loopne
roll
lods
les
jne
xchg
add
mov
lods
mov
in
inc
sbb
mov
enter
jg
rorl
pop
es
pop
stc
pop
icebp
or
sub
movsb
stc
fwait
pop
es
cld
cli
sbb
dec
pop
cmc
dec
sub
les
push
add
push
or
sbb
push
or
jecxz
dec
sbb
loope
or
in
pop
cld
sarb
mov
rorl
loope
add
mov
xchg
jecxz
negb
mov
outsl
pop
add
jns
addr16
adcb
shrl
pop
inc
mov
mov
mov
cmpsl
out
cmp
xor
adc
push
scas
pop
sub
mov
push
imul
scas
movsl
xor
stc
imul
inc
bound
cmp
fadds
mov
mov
in
add
add
fwait
push
fdivs
or
inc
cmpsb
std
pop
mov
push
dec
in
inc
adc
cwtl
cmp
sbb
xor
xchg
cmp
jae
pop
lods
jge
xor
repz
or
vmovhpd
push
jns
andl
loope
xor
fadd
movsl
mov
int
icebp
int3
js
imul
jl
fisubl
sub
jo
sbb
ftst
sbb
lds
xor
das
sub
in
mov
cli
stc
and
add
out
xlat
mov
rclb
movsb
stc
into
addb
std
scas
sub
cmovl
std
sahf
bound
shll
adc
mov
in
mov
or
dec
dec
xor
jle
insb
or
lea
lock
addr16
jl
pop
imul
xor
dec
stc
and
ss
cmp
jg
cmp
popa
fcompp
sbb
imul
rcl
add
inc
pop
movsl
mov
fs
outsb
mov
push
pop
addr16
fldl
xchg
in
pop
inc
dec
scas
sub
push
out
aas
xor
mov
fsubs
rol
negb
in
push
push
push
jnp
add
adc
dec
mov
arpl
and
cmp
ljmp
mov
test
dec
and
or
sub
enter
leave
cmp
int
or
cmp
jge
sub
aaa
sbb
fnstsw
fmuls
call
dec
std
cmpsb
cs
xor
lods
fstpl
pushf
jns
inc
mov
push
mov
xchg
test
and
cmp
sub
sub
pop
or
rorl
jg
imul
and
pusha
xchg
dec
mov
cmp
jnp
mov
movsl
xor
test
clc
push
or
mov
adc
add
mov
cs
popf
push
pusha
and
popf
add
pop
mov
test
daa
mov
pop
sahf
into
cmovbe
mov
mov
push
and
in
bound
mov
lret
pop
js
cmpsb
cs
mov
lcall
sub
insl
packsswb
fcmovu
out
sti
test
jecxz
bswap
sbb
test
daa
in
add
pop
enter
jge
sub
lods
jb
pop
test
pop
xchg
jl
cmpsb
ret
cmpsl
and
shrl
aad
lods
and
das
adc
mov
fmuls
aas
mov
push
push
jb
loopne
pop
mov
push
cmpsl
mov
push
xor
mov
pop
int
jl
imul
sbb
add
ljmp
mov
sub
jns
jmp
fmuls
lods
adc
push
popa
stc
dec
cmp
lret
jnp
pop
push
sbb
sbb
xor
leave
call
cmp
fstl
pusha
jno
cli
mov
push
push
adc
inc
xor
dec
adc
adc
loope
orl
data16
mov
fldenv
or
pop
movl
aaa
aaa
outsb
xchg
out
fnsave
mov
pop
sbb
pop
mov
fistl
nop
mov
fnsave
mov
jb
out
jbe
dec
jo
dec
rcll
lds
enter
sahf
loop
xchg
dec
xchg
jbe
jmp
jecxz
loope
mov
push
inc
in
inc
mov
test
mov
sbb
nop
xchg
je
jo
mov
sbb
jg
and
lea
ret
notl
push
mov
fwait
mov
test
iret
nop
popf
cmpsb
mov
dec
pop
lock
mov
or
mov
mov
sbb
repnz
xchg
mov
lds
dec
xchg
shl
xor
sub
ret
push
dec
mov
insl
imul
push
dec
jmp
or
mov
push
add
pop
xchg
push
push
mov
icebp
jle
cmp
cmp
out
push
inc
pop
std
mov
pop
or
movsb
mov
movsb
mov
cmp
and
sbb
xchg
cmp
adc
dec
rcl
jno,pt
jmp
and
pusha
in
mov
sbb
xor
push
pop
cmp
mov
pushf
cli
pop
xor
push
arpl
arpl
xchg
mov
lret
push
lcall
lcall
jmp
insl
mov
hlt
pop
xchg
jo
dec
ja
adc
pop
push
xor
mov
lods
xchg
sti
push
lods
mov
add
push
int3
sub
sub
push
stc
xlat
jns
in
xor
xor
sub
mov
push
push
inc
cmpsl
fildll
jno
mov
sub
pop
jle
cmp
ja
enter
lret
sbb
js
mov
pop
mov
adcb
dec
lea
int3
cmpsl
pop
push
sbb
shll
cmpsl
jge
imul
stos
mov
int3
je
push
cmpb
mov
int3
push
sbb
mov
push
push
sbb
mov
scas
pop
aaa
repz
cmp
jmp
mov
xchg
ret
sbb
lods
movsl
mov
add
pop
ja
sarb
fwait
je
adc
cmp
pop
lods
inc
adc
sub
call
mov
pushf
sahf
addb
test
inc
add
lock
rorb
xchg
stos
pop
dec
cmpsl
sti
xchg
ret
xor
push
or
insb
jl
and
xor
repz
hlt
roll
sub
sti
xchg
leave
dec
mov
fcmovbe
shll
ljmp
mov
inc
js
cmp
xchg
dec
mov
iret
test
ja
adc
enter
and
fldenv
sar
cmp
fidivl
stc
cld
js
and
stc
orb
sub
add
jbe
jmp
ss
rcrl
push
adc
fisubl
xchg
nop
mov
into
call
ret
sbb
xchg
mov
dec
movsl
jae
enter
jbe
imul
jmp
lds
mov
les
sub
test
jbe
out
jmp
das
or
sub
pop
sti
mov
inc
or
test
mov
mov
lods
mov
fwait
or
xor
dec
repnz
fwait
add
in
push
cmpsl
nop
xchg
jo
in
sub
jl
or
popf
mov
scas
lds
rorl
notl
daa
aad
roll
push
test
jnp
mov
jl
mov
ja
xchg
sub
fdivr
jae
cmp
sub
mov
sbbb
inc
jmp
adc
add
movsb
call
sarl
jg
pop
and
or
pmuludq
call
push
repnz
inc
iret
add
out
add
pop
mov
std
adc
inc
mov
push
in
ss
mov
adc
cmpsl
jns
ss
push
jnp
dec
xchg
loopne
push
clc
push
jns
in
scas
mov
pushf
push
adc
xchg
lcall
add
stos
aaa
xchg
push
stos
jns
mov
cltd
lcall
enter
sysenter
mov
inc
push
fcomps
mov
jno
ret
add
ljmp
pop
mov
add
mov
jl
xchg
jne
jp
pop
clc
sub
hlt
fsubrp
mov
pop
popf
push
fdivs
adcb
xchg
add
ret
call
mov
pop
sahf
cmp
jb
or
push
out
in
out
rolb
and
repnz
cmp
fmull
mov
pop
outsb
mov
push
shrl
xchg
xor
inc
cmpsb
test
lcall
rcr
imul
xor
push
pop
lcall
or
stos
or
pop
ret
into
cmp
aas
lods
pushf
fucomip
cmpsl
test
push
xor
ss
sub
and
fadds
dec
push
dec
mov
cltd
int3
orb
or
shr
jbe
push
dec
shll
into
iret
mov
icebp
popf
loope
dec
outsl
pop
mov
sti
and
mov
clc
pop
bound
int3
xchg
test
loop
adc
mov
nop
movsb
addb
mov
cs
sub
xchg
cld
adc
or
inc
ds
stos
push
mov
out
add
pop
cltd
lret
mov
mov
push
sbb
mov
daa
push
icebp
jbe
stc
xor
mov
mov
push
mov
in
divb
adc
inc
xor
sarl
cmpsb
adc
stos
clc
sbb
xchg
addl
fbld
push
leave
les
jns
lahf
push
mov
dec
mov
xchg
call
aas
mov
mov
arpl
pushf
mov
inc
sbb
cmp
sub
dec
mov
mov
inc
in
hlt
jl
adc
test
shrl
push
push
xor
stos
add
mov
fmuls
repz
cmpl
and
divb
insb
inc
or
insl
adc
fidivl
add
pushf
das
out
push
xchg
and
montmul
cmpsb
inc
pop
loope
popw
adc
movsl
mov
lcall
cmp
mov
pusha
dec
mov
stos
dec
push
imul
xchg
bound
loopne
pop
fs
mov
orps
rorl
cmpsb
mov
inc
inc
push
stos
jg
sbb
scas
ja
repnz
jno
lret
sbb
sub
adc
jge
xchg
xlat
test
xchg
or
pop
daa
mov
cli
and
push
mov
jns
lds
jns
je
lods
or
iret
xor
jno
call
mov
scas
push
fldenv
into
or
xor
cmp
scas
fsubp
lds
lret
and
imul
sbb
movsl
fwait
mov
pop
gs
andl
and
jae
push
push
push
jo
daa
and
je
add
repz
pop
cmpsb
jae
out
push
inc
push
jmp
pop
add
xchg
out
mov
xor
cmp
mov
mov
adc
jnp
pop
and
pushf
sbb
xor
mov
aam
adc
mov
fsubrl
push
sub
rcll
adc
push
xchg
into
xor
pop
adc
mov
push
out
cs
loop
icebp
and
inc
andl
xchg
f2xm1
dec
push
cmpsl
inc
pop
sbb
and
sahf
in
repz
scas
mov
cwtl
push
lock
jns
loop
adc
hlt
dec
sahf
fstpt
cmp
lret
scas
ja
int3
aas
lret
outsb
aas
fdivs
or
fstpt
fdivl
or
mov
mov
clc
push
mov
insw
movb
pop
rorb
mov
pushf
mov
adc
aaa
js
data16
cltd
xlat
inc
je
sti
mov
jnp
cmc
test
movsb
add
pop
or
mov
mov
adc
int
ja
mov
pop
mov
mov
jge
ds
push
int
out
ret
sub
pop
movsb
ds
ror
sbb
sti
or
lods
sub
pop
mov
subb
insb
push
and
inc
imul
mov
popf
addr16
ja
jecxz
mov
add
push
lock
pop
idiv
ja
xor
and
fldenv
loope
aaa
and
push
repnz
sbb
aad
insb
cmp
arpl
and
inc
pop
adc
push
pop
add
rol
inc
push
add
push
mov
jl
data16
scas
andl
jl
arpl
sbb
enter
insb
jb
rcll
sub
lods
popf
out
lea
rcrl
mov
cmpsl
gs
xchg
and
dec
pusha
dec
pop
sub
mov
cwtl
and
and
movsb
cmp
rcr
inc
and
xchg
sbb
mov
fmull
pop
jmp
jecxz
out
xor
xchg
or
aam
lock
or
fucompp
inc
sbb
mov
test
aaa
hlt
pop
and
gs
jb
scas
pop
jl
mov
sbb
call
cmpsb
ss
mov
leave
push
ret
pop
ljmp
inc
ret
cmc
ret
mov
fwait
jno
mov
daa
inc
jg
xor
and
jbe
mov
outsb
aas
sub
loope
test
jns
shll
leave
push
imul
ss
inc
int
dec
xlat
loope
lods
mov
sti
dec
dec
xchg
pop
loop
mov
lcall
cltd
pop
dec
icebp
ja
test
xchg
jbe
in
test
pop
xor
inc
or
or
mov
lock
push
fdivrl
dec
xor
pop
pop
inc
add
shl
cmpsl
cmp
imul
sbb
insl
mov
cmpsl
lock
rorl
incb
lock
cmpsl
ljmp
cmc
inc
sub
pusha
lock
xchg
cld
js
fwait
xor
pop
mov
cmp
or
sub
pop
sti
pop
and
mov
lret
xchg
outsb
lods
mov
sbb
add
scas
mull
mov
aam
sarb
movsl
insl
pop
mov
loope
mov
icebp
ret
iret
or
stos
and
lahf
in
cmpl
xor
les
in
test
xorl
xchg
ret
adc
inc
repnz
and
pusha
xchg
fadd
ss
movsb
lret
lds
xchg
insl
jb
test
or
adc
lock
aas
dec
out
fstpl
cmp
sbb
push
pop
and
mov
or
outsl
fiadds
xchg
imul
imul
sbb
stos
andl
test
push
cmc
daa
incl
into
adc
push
and
pop
std
pop
mov
xchg
xchg
test
pop
jmp
add
ds
pop
das
pushf
cld
mov
lods
sub
cmc
push
mov
sub
out
shlb
and
adc
or
insb
jno
ljmp
popf
mov
or
test
lahf
cld
mov
arpl
testl
inc
std
out
imul
and
xor
xor
inc
push
add
fsubrl
insb
fldcw
sti
mov
pop
pop
or
xlat
pop
pushf
call
cmpsb
fcmovnu
ljmp
push
jge,pn
push
jne
xor
js
mov
repnz
pop
mov
mov
cwtl
std
sar
test
adc
bound
mov
mov
ret
adc
jecxz
lcall
fdivr
jl
pushf
and
mov
iret
inc
stc
push
cli
pop
jnp
aaa
fistpl
popf
mov
push
sub
stos
jmp
rorb
inc
add
inc
inc
shll
insl
fisubs
stos
jne
shll
outsb
into
and
push
mov
addb
add
push
lcall
call
cmpsl
push
mov
mov
pop
adc
add
add
xor
xchg
loope
xchg
jne
push
leave
sbb
lods
pop
std
pop
cli
js
cmpsl
lret
adc
lcall
mov
stc
mov
clc
fdivl
jecxz
cmpsb
inc
add
cmp
sbb
repz
ss
push
out
jg
mov
sub
imul
gs
sub
push
test
test
or
sub
lret
aas
and
mov
push
mov
push
cmpsb
xchg
mov
cli
mov
push
xchg
loope
jnp
xor
sahf
xchg
sub
fs
clc
lea
mov
push
mov
cli
jne
ja
xor
lods
mov
mov
xchg
int3
in
jae
xlat
leave
fnstsw
push
scas
fidivrs
in
sbb
lods
test
push
fdiv
or
jnp
scas
sahf
xlat
pop
xor
xchg
cmpsb
jp
dec
mov
shrl
push
sbb
xchg
stc
imul
sub
mov
or
xchg
adc
jg
xor
push
loopne
arpl
test
sbb
das
pop
ss
jle
push
aaa
mov
dec
scas
ret
dec
dec
sbb
out
pop
mov
fstl
pop
movsl
ss
sbb
push
jae
mov
sub
movb
pop
pop
and
outsb
cwtl
push
mov
and
cmpl
sbb
test
fyl2xp1
in
cli
aam
stc
mov
int3
cmpl
divb
fisubl
orl
mov
and
sti
ret
dec
pop
cmp
jp
inc
pop
pop
nop
inc
or
cmp
adc
add
xchg
sbb
mov
and
dec
adc
insb
mov
out
lret
aam
mov
inc
out
les
mov
lods
mov
movsl
shlb
sub
and
nop
inc
test
mov
cltd
jne
pusha
inc
daa
mov
jnp
jle
dec
add
pushf
lret
mov
inc
mov
fsts
enter
xchg
jnp
dec
sti
mov
mov
lcall
and
jne
mov
inc
jp
sbb
test
je
adc
push
test
mov
push
shl
jg
dec
pop
inc
mov
jecxz
push
ret
push
cmp
repz
cmp
cmpsl
das
ret
jne
add
cmp
clc
leave
or
aam
les
stc
ret
or
xor
mov
jns
and
test
bound
lds
mov
pop
insb
mov
add
sbb
push
dec
mov
js
adc
fnstsw
add
jnp
push
aas
int
in
rcrl
mov
mov
loopne
fdivrl
inc
in
jb
pop
xchg
lock
xchg
int
les
cmpsb
jne
or
fcoms
cwtl
or
loope
xor
fnstsw
fldl
insl
pop
es
sbbb
push
insb
sarl
lret
fs
enter
push
jmp
mov
jge
push
cmpsb
pop
out
inc
mov
xchg
sahf
imul
pop
andl
movsl
sbb
fnstenv
mov
jecxz
jae
mov
sti
nop
pop
mov
mov
inc
mov
sti
cs
sub
add
mov
lret
jle
outsl
jge
push
js
addr16
sub
xor
sbbb
xor
add
lods
pop
ljmp
push
test
dec
pushf
aaa
jae
out
sub
cwtl
clc
rcr
inc
nop
ljmp
push
into
mov
jmp
pop
sbbb
jae
push
testb
popa
jge
outsb
out
out
push
mov
aaa
or
pop
mov
jg
repz
pushf
lret
insb
lods
popf
mov
in
adc
fnstenv
or
xchg
add
mov
lret
push
in
imul
mov
push
pop
shrl
shll
sbbl
aas
push
stos
or
push
adc
push
fs
inc
sbb
adc
mov
fs
lret
leave
in
mov
xor
test
and
and
xchg
divl
adc
movb
popf
movsl
test
shll
dec
pop
mov
mov
dec
xchg
test
jns
addr16
push
mov
fcomps
mov
shlb
push
xchg
repnz
xchg
in
add
pop
std
sbb
cmpsb
cmp
daa
sbb
test
add
mov
repnz
mov
imul
mov
and
scas
lret
hlt
dec
mov
testb
inc
das
imul
cwtl
pushf
jmp
sarl
je
sub
mov
adc
push
cmp
mov
bound
and
push
dec
add
ror
push
sbb
xchg
jg
rcl
xor
push
pop
push
idivl
sub
ljmp
out
add
add
cmp
xchg
enter
movsb
fdivrl
sub
cs
adcl
sbb
inc
lods
push
shll
pop
push
int
stc
mov
iret
cmp
add
fldenv
dec
aas
stc
pop
dec
inc
adc
loop
loope
aaa
cmp
xorb
out
sub
cmp
pop
test
clc
sub
pop
sbb
xchg
daa
in
mov
mov
mov
push
dec
xchg
push
test
pop
push
dec
insl
jmp
out
push
lret
or
leave
inc
and
cmp
xorl
or
mov
xor
imul
ds
fildl
mov
add
rcll
rolb
pop
mov
mov
cmp
enter
stc
gs
jecxz
testl
and
sub
sbb
push
and
mov
add
fs
jbe
imul
cltd
cld
aam
adc
cmp
lahf
push
sub
pop
rolb
pop
data16
jmp
ss
mov
dec
jnp
lret
lahf
jle
popa
push
push
sub
push
jecxz
outsb
insb
jmp
insb
orl
mov
adc
jp
shlb
lods
mov
in
out
and
or
mov
int3
mov
pop
not
test
cli
xor
stos
pop
dec
repz
inc
mov
sub
subl
pop
push
test
cmp
outsl
aam
ret
std
mov
lcall
xchg
pop
adc
cmpsl
rolb
lret
fistpll
sbb
mov
jnp
inc
scas
cmp
lret
movsb
push
lahf
out
sub
xor
ret
jle
in
cmpl
arpl
dec
xor
inc
sbb
orl
dec
push
das
ret
mov
lods
mov
sbb
sbb
xchg
outsl
sbb
sub
push
sahf
outsb
mov
push
daa
add
add
push
mov
inc
stos
cmp
mov
in
add
push
testl
nop
and
pop
outsb
dec
xlat
es
fnstenv
aad
xchg
jg
sub
decb
pop
mov
mov
ficoml
icebp
testb
mov
movsl
loop
xor
push
ret
mov
and
imul
addb
pop
jne
testb
sbb
pop
mov
xlat
pop
sub
mov
push
roll
sbbb
es
xchg
mov
fsubs
out
in
cld
mov
and
xchg
cwtl
rolb
mov
pop
dec
ja
js
outsl
jle
jle
incb
rcrb
or
mov
xor
cltd
cmc
lret
pcmpeqw
mov
xchg
jle
imul
fsubrl
cmp
or
xor
mov
in
cmpsl
xchg
xchg
xlat
loopne
movsl
push
cmp
jmp
sbb
or
pop
int
aad
jbe
mov
mov
jb
jmp
cmc
dec
mov
xchg
retw
mov
jecxz
stos
test
push
testl
cmpsl
leave
push
adc
stc
fidivl
push
dec
inc
leave
jno
and
mov
push
or
fsubs
sub
pop
out
cmc
in
push
pop
sub
pop
jle
test
andl
hlt
xchg
and
adc
and
loop
jnp
mov
cmp
aad
push
sub
dec
addr16
movsl
insb
pop
xchg
test
pop
outsb
push
jb
pop
dec
push
push
adc
jb
jle
call
sbb
int3
mov
lds
jnp
lds
mov
movsl
in
dec
dec
std
fstpt
push
ret
popf
add
sbbl
push
cmp
enter
xlat
sbb
xchg
ret
fidivs
mov
mov
xchg
fs
and
ja
daa
xchg
and
cmpsl
mov
add
popa
mov
mov
mov
push
fwait
and
mov
jecxz,pn
adcb
push
inc
push
in
sbb
test
push
das
ja
dec
je
enter
xor
aad
les
sbb
iret
sub
pusha
or
or
jle
insl
insb
outsl
mov
xchg
scas
or
call
sub
or
xor
mov
leave
mov
and
sub
lods
clc
mov
lahf
or
jns
jecxz
dec
cwtl
loopne
test
aad
sti
sahf
sahf
subb
xor
out
pop
or
or
jb
out
loop
sahf
outsl
rclb
adcl
divl
cmc
push
cmp
xor
mov
sub
cmpsb
ds
sar
out
outsb
push
scas
xor
aad
mov
out
jbe
mov
mov
dec
cmp
scas
mov
outsb
movsb
test
in
into
call
fstl
xchg
dec
test
pop
or
or
xor
xor
cmp
iret
jle
es
scas
stos
cmp
out
xchg
out
int3
fdivrs
jno
mov
fld
inc
push
scas
lret
inc
jp
mov
jae
cltd
dec
loopne
or
add
icebp
rcl
sub
pop
into
jno
in
pop
adcb
jp
xorl
call
mov
pushf
pop
mov
incl
imul
adc
push
ret
pop
in
xchg
lahf
cmp
dec
fs
shr
fisubrl
adc
into
lret
sti
mov
call
and
sub
xor
iret
cmp
in
ja
popa
insl
xor
xchg
jle
rol
adc
ds
das
mov
je
jbe
loope
jb
add
mov
aaa
xor
add
arpl
jnp
dec
subb
insl
jecxz
outsl
mov
fdivs
ds
cltd
jp
dec
cli
nop
ficompl
and
ss
imul
sub
sbb
mov
rorb
fcoml
mov
cli
js
fsubrl
pop
stc
dec
aas
enter
in
sub
enter
cltd
es
ret
sub
push
mov
jecxz
mov
jnp
repz
xchg
and
cmp
arpl
add
sub
jo
push
imul
push
mov
mov
fstpl
arpl
xor
rcll
inc
xchg
push
and
repz
push
loope
mov
clc
ds
lods
sub
test
gs
sbb
loopne
test
mov
fistl
ret
pusha
jge
add
aaa
lods
jl
adc
cmp
ja
daa
sub
inc
outsl
shll
test
jnp
mov
or
mov
dec
daa
into
repz
in
xchg
xchg
xlat
icebp
xlat
push
das
adcl
rorl
aaa
jecxz
jmp
inc
sti
push
hlt
jne
test
lahf
inc
and
jnp
lcall
cmpsb
das
xchg
leave
pushf
mov
adcl
int
sahf
shlb
sti
les
mov
popa
ret
in
jl
test
mov
add
dec
push
daa
pushf
xor
fistl
pop
jl
addr16
xor
roll
and
xor
jecxz
dec
arpl
iret
and
jecxz
mov
or
xor
xor
and
jbe
fdivl
jb
inc
sub
add
xor
mov
and
or
push
lret
push
rcrb
insl
mov
in
sub
add
push
mov
daa
adc
in
shll
adc
sbbl
xchg
arpl
sahf
jno
cwtl
cli
push
rclb
sti
popf
popa
sub
fidivrs
and
sbb
in
dec
cmp
add
popf
jp
inc
pop
add
in
lods
push
enter
cs
sub
push
mov
lods
adc
jge
inc
and
aam
das
mov
adc
push
ds
add
add
test
aad
stos
scas
sub
mov
sub
sub
jmp
xor
in
lret
cld
jmp
shll
xor
cmpsl
gs
ljmp
pop
cmp
dec
mov
dec
out
sbb
mov
xchg
pop
mov
push
or
cmp
sbb
mov
jl
jns
xor
mov
pop
xchg
jp
add
pop
dec
and
std
out
arpl
add
int
test
push
push
jmp
imul
jno
cmpb
jg
mov
xor
jle
js
jno
push
inc
mov
js
pop
nop
inc
adc
loope
fsubrs
ret
ja
das
imul
movsl
sahf
cwtl
cld
pop
cli
int3
cmp
adc
lea
sti
push
dec
std
cld
dec
adc
pop
xchg
add
push
out
sti
clc
std
cltd
sbb
xchg
cmp
or
cmp
mov
repnz
movsl
roll
xchg
test
add
xor
jno
sub
push
or
mov
mov
and
xchg
lea
inc
pop
adc
inc
fidivs
lahf
fistps
nop
push
hlt
or
sub
push
js
mov
les
subb
repnz
sbbb
cld
lods
and
or
xor
push
inc
or
jo
xor
sbb
repz
mov
not
inc
test
and
cmpsl
xor
ret
jo,pt
loope
jne
add
pushf
dec
aas
shrb
xchg
test
cmpsl
sbb
jge
cmp
xchg
xchg
ds
in
xchg
jne
enter
shrl
movsl
daa
xor
cmpl
pop
jmp
jmp
jb
repnz
jge
jno,pt
arpl
mov
and
divl
dec
xorl
arpl
ss
xor
or
add
xchg
or
fisttpl
shll
gs
scas
jmp
pop
adc
xchg
or
push
or
push
pop
push
lcall
cmpsb
dec
aad
xor
mov
call
xchg
xchg
test
in
loop
pop
pop
jge
lret
pop
jb
insb
or
xchg
add
xchg
pop
push
mov
xor
daa
or
int3
aas
jge
jmp
insb
in
mov
cmp
cwtl
movb
fcmovnb
adc
sub
fwait
lods
xchg
push
cld
shll
push
into
push
lret
inc
dec
addr16
cmp
aam
inc
dec
rcrl
pop
sahf
pop
cmp
repnz
sahf
push
mov
sub
sahf
mov
fst
push
and
jg
cmpsl
xchg
popf
sbb
cwtl
call
mov
jle
sbb
sbb
shrl
cmpsb
xchg
push
adc
ret
sub
test
fisttps
aaa
rorl
movsb
inc
rclb
mov
inc
fnstsw
lret
mov
dec
fwait
mov
ljmp
int
loopne
xchg
xchg
filds
repnz
das
xchg
mov
out
cld
dec
dec
mov
ljmp
gs
ss
inc
pop
mov
inc
test
mov
mov
mov
jmp
fldcw
rcl
pop
aam
loop
test
hlt
adc
sbb
mov
js
adc
dec
outsl
lds
inc
xor
divb
push
xchg
decl
jae
adc
sahf
mov
add
data16
mov
jb
jg
cmp
cmc
lock
enter
addr16
lods
add
leave
fildl
sub
push
sub
dec
aad
in
shl
popf
mov
mov
cmp
jnp
xor
inc
xchg
aas
cmp
div
xchg
and
add
xor
dec
mov
push
hlt
and
cld
into
shll
mov
cmpl
mov
sbb
add
in
xor
idivl
out
fmull
adc
cmc
push
or
cmp
aas
or
sbb
xchg
add
and
jnp
inc
cmc
in
sarb
daa
pop
icebp
daa
adc
roll
push
cwtl
outsb
mov
xchg
or
out
inc
inc
mov
loopne
mov
sarb
sbb
inc
mov
jg
xchg
jle
sti
push
loopne
in
and
sbb
fsubr
dec
sbb
xor
push
int
daa
jb
iret
dec
mov
mov
mov
stos
mov
dec
inc
les
aad
cmc
sub
pop
mov
fwait
loope
sub
adc
cmp
push
jge
arpl
mov
jle
jl
push
das
or
scas
mov
dec
xor
jge
aam
sbb
sub
sub
push
lea
lcall
mov
icebp
dec
inc
mov
mov
les
jge
mov
outsb
dec
ficomps
mov
push
fld
bound
inc
pop
shufps
xor
mov
pop
cli
push
mov
pop
insl
push
ds
xor
dec
cmpsb
lret
int3
in
test
jo
aas
cwtl
sub
fs
in
add
push
or
or
iret
xchg
outsb
lret
or
mov
arpl
inc
mov
movsb
out
or
into
dec
test
pop
pop
ficoml
int
inc
adc
mov
sub
stc
shlb
aad
inc
test
mov
xchg
loope
add
jle
jl
popf
ljmp
fnsave
loopne
xlat
push
test
loope
js
add
mov
or
out
andl
lds
pop
inc
in
jbe
xchg
add
enter
ds
pop
ljmp
nop
clc
sti
test
sti
push
mov
sub
jecxz
pop
jge
xchg
je
jns
test
jb
sub
pop
xchg
mov
push
into
mov
cmp
adc
or
das
sbb
les
mov
sbb
mov
sbbb
cmp
test
xchg
cltd
cld
sub
mov
mov
lock
pop
es
aas
in
jecxz
jae
outsl
cmp
push
loop
mov
in
icebp
std
push
enter
addr16
ss
icebp
xor
jnp
jl
jne
aad
out
mov
inc
pop
cltd
push
adc
mov
sbb
mov
mov
loopne
lcall
push
or
js
sahf
sbb
int
dec
and
push
inc
mov
stos
int3
or
mov
push
cmp
lret
lahf
call
pop
bound
mov
pop
mov
mov
cli
dec
hlt
in
xor
push
dec
in
mov
sbb
int3
mov
cmp
lods
xor
adc
lahf
mov
xor
mov
pop
sub
cmpb
arpl
int
test
mov
test
dec
mov
fldenv
mov
xchg
xchg
lret
mov
cmp
fisubrs
test
fwait
xchg
mov
cmp
pushl
stos
bound
adc
rcll
les
icebp
fcoms
and
jge
addr16
gs
sbb
lock
jb
inc
inc
mov
xchg
rcll
out
in
pop
push
cmp
rorl
cmp
ja
divb
xchg
dec
mov
int
pusha
push
les
outsb
iret
dec
push
out
fwait
in
adc
test
xchg
es
inc
sbb
cs
xchg
jno
lea
hlt
pop
stos
sbb
shlb
mov
std
or
mov
stos
cmp
les
inc
push
ja
adc
ja
popf
dec
xchg
push
jnp
js
icebp
push
fisubrl
or
sbb
sbb
test
stos
add
scas
icebp
mov
push
dec
lods
or
or
sbb
ja
lahf
dec
push
test
and
push
sub
sbb
jecxz
or
jmp
fwait
xor
cld
decb
jle
mov
xor
dec
pop
repnz
mov
dec
es
dec
push
dec
push
ljmp
xchg
mov
pop
fstl
jmp
loop
pop
ret
addb
ret
addl
test
xor
test
bound
and
xor
sbb
and
push
push
inc
pusha
mov
sbb
fadds
push
xchg
or
aad
fsubp
and
pop
test
mov
mov
mov
fnstsw
sub
dec
outsl
call
xchg
aad
sti
mov
fs
ss
xchg
es
mov
mov
fstps
clc
inc
repnz
lock
adc
sub
stos
cmp
sbb
sahf
add
leave
pop
jne
fdiv
je
les
adc
add
mov
mov
ja
mov
push
or
aaa
out
mov
movb
pop
mov
jb
and
pushf
xchg
inc
lret
sbb
add
cmpsl
and
or
push
fcoms
add
aam
mov
push
ret
clc
loop
test
repz
mov
enter
jle
in
xor
lahf
icebp
addr16
mov
inc
jp
ds
adc
fnsave
mov
lds
jno
dec
jne
pop
push
movsl
inc
pop
push
jo
xchg
dec
enter
daa
push
adc
ret
and
dec
sbb
imul
dec
shrl
lret
inc
ds
and
addr16
lods
sub
mov
sbb
enter
xchg
sbb
lahf
or
fwait
jge
sti
add
enter
add
lea
std
cltd
addr16
outsl
xchg
fsts
and
jnp
arpl
icebp
sbb
sub
xor
fwait
push
cltd
mov
pop
fiaddl
leave
jmp
rorb
scas
popf
push
testb
cmc
jo
mov
adc
stos
cwtl
or
stc
ljmp
sub
inc
cmpsl
dec
xchg
jp
cmp
stc
push
jns
cmp
je
loopne
sub
push
out
loope
inc
xor
pop
sub
fcomps
push
xor
gs
loopne
stc
push
in
roll
hlt
mov
into
push
and
add
imul
or
and
cwtl
jo
dec
int
rorl
hlt
imul
imul
test
daa
mov
fsub
in
adc
mov
pop
popf
cltd
stos
jne
inc
rorb
or
push
es
jmp
test
xchg
jmp
cld
outsb
push
iret
pop
pop
cmp
nop
mov
and
ljmp
and
gs
popa
daa
push
jo
repnz
mov
in
and
or
xlat
add
add
and
stos
xor
repz
outsl
pop
jnp
inc
dec
inc
mov
sti
cwtl
mov
cmc
jnp
hlt
test
or
inc
das
cli
outsl
pop
xchg
push
inc
jmp
cmp
xchg
fstp
lret
and
movsl
loopne
imul
insb
sub
daa
test
in
adc
jp
inc
adc
aam
pop
pusha
push
leave
mov
leave
xor
out
out
cmp
push
dec
jb
inc
and
icebp
sbb
ds
ret
or
mov
hlt
bound
jecxz
rclb
xor
sar
pop
push
adc
addl
movsl
or
shll
adc
sub
sub
sbb
sub
cmp
bound
jne
lods
mov
cltd
ss
push
insl
xlat
mov
fcomip
adc
jl
loopne
movsb
ficompl
jns
cmpsl
cmpsl
imul
cs
sbb
or
jp
xchg
ds
test
cmp
dec
lods
shlb
mov
and
dec
clc
mov
jmp
test
cld
scas
int3
jb
cmp
cmp
adc
loopne
and
lds
in
mov
bswap
aam
sbb
orl
jmp
push
jns
fstpl
inc
push
fs
adc
jbe
or
jno
inc
lcall
cwtl
jmp
cmc
cmp
sub
mov
push
mov
pop
or
xchg
in
cmp
lret
aaa
jmp
jb
imul
rorb
cltd
call
filds
sub
pop
stc
aaa
sahf
dec
ljmp
adc
push
adc
clc
fwait
mov
add
movsl
test
cmp
aas
xor
in
lods
ss
cwtl
jnp
shlb
and
insl
mov
and
pop
or
popa
xchg
loopne
nop
repnz
push
xchg
and
xor
repnz
gs
mov
repnz
dec
pusha
mov
pop
inc
int3
xchg
sahf
pusha
aas
fs
mov
dec
add
mov
icebp
arpl
sbb
pop
mov
xchg
mov
in
jg
fists
add
sbbb
push
xchg
divl
cmp
or
adc
jecxz
sub
pop
fisubl
xchg
es
fiaddl
xchg
fwait
mov
leave
test
mov
adc
repz
adc
mov
xor
xorl
movsb
mov
sti
ja
add
js
pop
jmp
inc
push
popa
jbe
jne
push
dec
xorb
lea
out
sbb
lahf
and
hlt
pop
sbb
enter
lret
ss
and
daa
ljmp
lods
scas
or
mov
pusha
daa
mov
xchg
aam
xor
test
test
lock
mov
push
jo
cmp
shrb
movsl
mov
rcrl
jl
lret
out
addr16
mov
ja
cmp
inc
mov
aam
cmp
pop
ja
mov
push
cmp
or
fwait
arpl
mov
adc
push
and
cmpsb
push
and
sbbl
lods
rcrb
sub
sub
xor
xlat
lcall
jl
cli
filds
mov
mov
fwait
lret
cltd
cli
scas
adc
cmc
dec
in
and
mov
and
das
jo
icebp
je
pop
or
ds
push
xor
outsl
push
fs
push
xchg
xchg
test
fisubs
inc
mov
movsb
lods
and
icebp
add
or
jle
test
add
iret
adc
xchg
rclb
adc
mov
bound
dec
mov
mov
xor
rorb
mov
arpl
fdivrp
test
rcll
in
shlb
mov
inc
daa
rcll
notl
jae
sub
and
jecxz
pop
mov
xlat
movsl
es
xchg
or
inc
std
sub
in
sbb
sub
ds
popl
jns
stos
aad
adc
and
sub
adc
stc
adc
out
inc
data16
inc
xchg
mov
in
insl
push
iret
pop
add
cmc
in
out
aad
fnstsw
shlb
enter
xchg
sub
lret
or
sti
pop
test
std
dec
rcll
daa
xlat
mov
mov
mov
add
inc
push
jbe
popa
mov
mov
sbb
pop
mov
aas
test
fsubr
inc
push
outsb
sbb
and
jbe
mov
in
test
xchg
mov
xchg
mov
xchg
sub
test
or
mov
das
dec
rol
and
pop
leave
and
mov
adc
dec
rcll
jecxz
jmp
sahf
xchg
lock
mov
mov
pop
pushf
hlt
jne
out
or
scas
cmp
adc
cli
xor
xchg
repnz
insb
add
lock
fcompl
push
dec
mov
mov
xor
repz
sbb
adc
andl
jno
ljmp
test
mov
mov
dec
adc
orb
pop
lahf
hlt
jl
or
inc
fnstenv
ds
jbe
mov
cmp
stos
mov
cmp
xchg
mov
xchg
mov
jl
mov
fwait
xor
sbb
loopne
out
popa
cwtl
repz
dec
adc
jmp
push
imul
fcoml
dec
xorl
lahf
lret
mov
and
xor
xchg
adc
cmpsl
lock
fists
pop
xchg
and
iret
push
adc
movsb
lret
dec
mov
mov
ret
stos
wrmsr
add
jbe
ss
fimuls
cmc
pop
dec
imul
lds
inc
cld
pop
adcl
fwait
popa
pop
testb
fisubl
in
push
out
jmp
testl
test
jl
inc
movsb
xchg
push
cmp
fprem1
mov
pusha
adc
lahf
and
pop
push
add
into
inc
lds
ja
mov
dec
xor
fcmovu
nop
insl
incb
inc
sbb
and
testb
or
add
aaa
loopne
cmp
in
repnz
icebp
fists
jb
aas
leave
dec
lods
sbb
xchg
pop
mov
and
popa
ja
cltd
mov
mov
outsb
fs
fcoms
call
and
xor
cmp
fisubs
faddl
in
sbb
into
push
lods
aas
aam
add
add
jge
rcll
mov
jge
cmpsl
leave
jae
andb
lods
mov
daa
dec
ds
inc
pushf
push
mov
jb
and
jne
jge
dec
scas
cmp
lret
test
fidivs
adc
add
inc
out
lret
cs
jl
aaa
shll
mov
repnz
fldenv
add
popf
subb
les
movsb
sub
add
push
pop
test
sti
mov
sbb
shll
ret
test
movl
xchg
pop
inc
sete
jge
push
pop
add
mov
les
or
leave
cld
mov
sbb
shl
mov
jle
shll
jbe
or
dec
jp
cmp
sub
inc
xorl
pushf
push
cmc
inc
dec
push
inc
test
pop
push
fs
cmc
add
ret
jns
inc
or
repnz
lds
mov
jl
out
sub
hlt
in
mov
cmp
mov
push
xchg
ret
jge
in
jecxz
fs
js
or
pop
nop
mov
cwtl
std
scas
movsb
shlb
mov
push
adc
fwait
push
mov
aaa
push
jp
rol
test
lods
mov
std
push
arpl
imul
sbb
sarl
jnp
xor
xchg
std
icebp
nop
outsb
aam
sub
orb
push
das
fsubp
aam
ljmp
xchg
mov
mov
scas
mov
pop
jmp
cmc
or
jge
mov
cmpsb
cmpb
jge
movsb
testl
pop
rclb
outsl
push
adc
sbb
movsb
mov
addr16
adc
mov
lret
pop
int
in
pop
loope
and
sbb
pop
imul
rcl
jmp
movsb
jecxz
cmpsl
cmp
mov
jo
enter
subl
ja
cmpsl
lods
je
popa
sbb
movsb
dec
sbb
jb
mov
movsb
fcmovb
push
subl
inc
xchg
adc
icebp
outsb
nop
iret
inc
stc
dec
push
inc
dec
jecxz
jp
popa
lcall
and
sbb
jle
lds
dec
lods
sbb
popf
popf
push
xchg
xchg
inc
xchg
push
xor
das
add
mov
pop
sub
pop
cmpsl
jb
shl
sub
mov
test
lea
cmp
stos
and
pop
es
add
leave
out
je
in
mov
jbe
insb
lcall
enter
xchg
scas
divl
pop
shl
dec
cmpsb
dec
jne
adc
out
push
fistps
scas
mov
add
xchg
pop
jl
sub
nop
cld
fiadds
scas
adc
xchg
adc
fidivrs
imul
addb
jecxz
bound
jge
les
dec
add
inc
mov
ljmp
jmp
sahf
xor
adc
test
xor
pushf
out
or
push
fistps
pushl
insb
pop
fwait
test
xchg
inc
jbe
adc
inc
or
test
mov
insl
test
push
fadd
roll
std
test
arpl
test
popl
cmp
ret
or
mov
scas
pop
cmp
add
jle
jmp
jge
pop
sbb
cmp
inc
mov
lahf
enter
adc
pusha
cmp
fimull
dec
fnsave
add
jno
or
add
and
fists
pusha
push
mov
mov
nop
subl
add
arpl
pusha
pushf
jg
mov
cmp
xchg
aaa
or
pusha
lods
sbb
and
leave
mov
xor
xor
imul
lds
sub
shlb
nop
ja
insb
test
repz
mov
jae
aam
add
out
call
dec
add
pop
rcrl
sbb
in
xchg
dec
sub
dec
imul
cmp
ficoml
mov
mov
and
insb
dec
lea
loope
xor
js
pop
addr16
lods
adc
iret
adc
xlat
sub
stos
jmp
cmp
xlat
loopne
in
dec
cmp
add
jl
jge
add
or
subb
daa
or
movsl
in
jo
cmp
lea
lods
les
jns
dec
iret
rcll
mov
inc
and
xchg
aam
cld
outsb
cmpsb
icebp
push
dec
adc
je
pusha
adcb
push
cmpsb
int
pop
mov
mov
sub
push
pop
xor
notl
mov
nop
pop
mov
adc
enter
int
xchg
mov
sbbb
mov
mov
rcrb
out
mov
mov
aaa
dec
cld
stos
sub
shrl
cmpsl
add
sbb
inc
fdivl
dec
jb
push
icebp
cwtl
push
sbb
mov
sbb
pop
test
int3
lds
out
lods
cli
push
jecxz
imul
sbb
jg
bound
push
test
push
imul
dec
pop
inc
mov
mov
jae
add
adc
nop
sub
call
push
sbb
inc
dec
mov
lret
or
fldt
and
fnstcw
jb
lcall
add
push
icebp
ret
popf
stc
xchg
clc
out
push
scas
adc
inc
jmp
push
fcompl
push
mov
ja
mov
or
inc
pushf
sbb
sbb
loope
test
addr16
push
cmp
les
mov
call
in
out
mov
add
lods
push
sub
xor
movsl
push
jmp
mov
adc
cli
sub
hlt
in
sub
push
mov
jge
and
out
jbe
push
leave
push
and
stos
aam
jne
subl
sbb
and
push
pop
cld
xor
fiaddl
xchg
or
xchg
test
pop
mov
mov
cwtl
pushf
jg
push
cwtl
or
pusha
inc
nop
rolb
adc
push
loop
jo
sbb
sub
test
scas
adc
or
cmp
and
and
lods
xchg
and
outsb
jo
push
jl
daa
xchg
pusha
mov
mov
xor
fdivrl
pop
sub
lea
sbb
imul
shl
pop
loop
add
dec
pop
or
ss
cli
in
lahf
cltd
movsb
cli
mov
inc
mov
jae
das
stos
popf
xchg
xor
ljmp
mov
sub
dec
js
sub
dec
lods
mov
dec
vmaxpd
int
sbb
scas
inc
bound
mov
into
sbbl
in
lods
lods
ja
pushf
and
xchg
int
cmc
mov
pop
daa
out
repz
push
into
push
adc
pop
test
sub
xor
sahf
and
int3
insb
loope
or
pop
popf
imul
xor
cli
jnp
push
xlat
nop
aad
daa
mov
xchg
mov
in
clc
jmp
xor
add
jmp
cwtl
sub
jb
dec
add
sub
push
repz
jbe
loopne
mov
lahf
pop
dec
imul
cli
mov
fsub
or
mov
sarb
mov
mov
ret
sbb
push
mov
in
inc
mov
call
and
mov
mov
mov
hlt
adc
jg
mov
dec
dec
aaa
out
imul
pop
inc
ret
cmp
pop
out
cld
orl
pop
fldenv
mov
cmp
repz
loope
mov
xchg
mov
sub
pop
scas
movsl
jl
cmpsl
add
mov
repz
push
lds
mov
adc
shufps
scas
sub
inc
aam
mov
push
popf
mov
fwait
outsl
fdivrl
dec
mov
fidivl
push
out
lods
add
outsb
test
cmp
xor
shlb
lahf
mov
adc
inc
cmp
mov
jno
pop
sbb
fs
je
and
std
and
shrl
xchg
mov
icebp
adc
les
imul
mov
insl
enter
daa
test
pop
push
cwtl
insb
pop
arpl
inc
into
push
nop
inc
mov
and
mov
mov
popa
xor
adc
sahf
jge
lea
push
adc
lods
rolb
imul
lds
pop
ds
jno
call
enter
lea
test
sbb
sbb
adc
adc
pop
and
inc
jp
push
mov
aas
imull
xor
mov
sahf
sbb
iret
xchg
cmp
aam
mov
adc
mov
into
lret
fbld
jmp
frstor
and
inc
mov
cmp
pmaxsw
cs
cwtl
aad
sub
fs
cmp
adc
out
push
shlb
js
adc
popf
sub
fcmovu
adc
xchg
inc
lods
xchg
or
cwtl
pop
int3
icebp
cmpl
cli
push
xor
jbe
test
xchg
rorb
sahf
cmp
sbb
pop
movsb
stos
stos
movsl
stos
adc
lret
mov
sarb
stos
in
push
mov
sub
lret
pop
jg
dec
cmpsl
cmpsb
lahf
jno
adc
mov
jnp
fldcw
mov
lret
sub
repz
negb
sbb
fs
cli
and
addr16
ljmp
scas
push
loope
daa
xchg
cwtl
sbb
add
scas
imul
cmp
mov
mov
xchg
adc
and
mov
fcmovne
lock
xchg
push
fwait
outsl
mov
out
adc
movsl
js
out
jb
clc
das
dec
out
clc
insl
and
dec
test
jmp
cmp
xor
iret
mov
aas
in
mov
pushf
inc
push
incb
shll
fwait
lahf
mov
rol
or
add
jp
dec
pop
aad
push
dec
mov
idivb
add
push
bound
or
mov
in
repnz
movsb
test
xchg
jnp
fistpl
arpl
mov
and
cmpsl
cmpsb
pop
mov
pop
dec
mov
cmp
subl
jns
pop
jo
lea
and
adc
cmc
mov
das
icebp
xchg
pop
mov
or
jae
lret
addb
adc
aaa
ja
mov
dec
push
pop
pushf
sbb
jle
jo
jb
divl
or
rorl
jge
adc
stos
fimull
mov
xor
and
stos
push
outsb
cmp
dec
ret
pop
push
iret
pop
out
xor
aam
lret
lahf
xchg
rol
add
sbb
or
adc
out
lcall
cld
xchg
popa
cmc
sub
mov
dec
ret
add
push
out
rcll
dec
fisubl
fwait
jo
nop
scas
dec
mov
fs
in
push
mov
shll
sbb
mov
push
push
out
imul
nop
or
shl
sbb
and
fildl
push
mov
xchg
dec
rcl
adc
mov
ja
cmp
jmp
dec
mov
stos
push
sub
inc
or
add
mov
sbb
xchg
daa
dec
stos
out
or
stos
mov
mov
or
mov
add
inc
repz
lods
or
sub
mov
sbb
xor
out
xchg
cli
repnz
rcrb
gs
xor
pop
movsl
sbb
pop
ja
sbb
test
mov
sbb
sbb
inc
ja
loope
xchg
lods
mov
adcb
add
arpl
mov
out
jne
inc
mov
dec
add
sbb
pop
stos
sbb
incl
push
lods
divl
lods
pusha
push
aad
mov
subl
jb
or
shlb
inc
pop
imul
and
xor
cs
test
sub
test
call
sahf
ret
orb
in
push
mov
cld
push
xchg
scas
push
pop
dec
add
lahf
popa
jbe
and
mov
and
inc
ds
call
fldenv
repnz
shll
jmp
xchg
lods
mov
xchg
das
pop
mov
pop
je
hlt
imul
sbb
or
xchg
sub
mov
rol
clc
xor
inc
sub
shrb
repnz
cwtl
pop
add
xchg
mov
into
mov
adc
dec
lea
jo
jecxz
mov
stos
cmpl
xorl
repnz
mov
jb
adc
dec
cld
cmpsb
inc
sahf
iret
lcall
or
xchg
frstor
js
fsubr
mov
jb
fs
mov
roll
xchg
les
mov
pop
push
sbb
daa
int
cmp
sbb
fmull
pop
xor
and
repz
jg
fcmovu
mov
jge
pushf
or
push
and
mov
or
pop
sub
loopne
imul
ret
in
push
jnp
aad
popa
push
fwait
jle
inc
dec
rorl
pop
out
shrb
imul
cli
push
pop
loop
je
pop
dec
neg
cmp
outsl
adc
push
sti
push
mov
xor
cld
dec
je
loope
mov
sahf
movsl
and
xor
and
xor
mov
mov
dec
imul
adc
ja
cwtl
daa
rcrl
shl
mov
jnp
cmp
inc
inc
nop
daa
dec
mov
pop
aam
xchg
and
sub
into
inc
jg
sub
imul
popa
pop
dec
xor
outsl
xor
lock
leave
movb
mov
je
mov
es
insl
movsl
in
ror
jle
movsb
xchg
lods
leave
loopne
lea
xor
iret
es
cwtl
jmp
jl
repz
ret
mov
rcrb
xor
mov
ljmp
call
cmp
out
loop
test
test
icebp
pop
mov
xlat
push
mov
and
shll
add
jl
pop
dec
lret
insl
xor
pop
add
mov
inc
outsl
shll
fcom
xor
lret
iret
sti
mov
movsb
and
add
lret
mov
cmp
sbb
outsb
inc
jae
jge
movsb
sbb
jne
jbe
mov
jmp
and
lods
shrl
stc
fwait
lret
cli
add
jmp
out
inc
iret
movsb
int
add
imul
popa
pop
mov
mov
and
rclb
out
ret
jecxz
mov
mov
and
insb
add
and
jmp
jecxz
sub
jae
dec
int3
xchg
mov
add
xchg
insb
xchg
xlat
and
dec
testb
jg
shrb
adcl
adc
push
and
inc
pop
jge
into
and
mov
push
dec
jl
out
aas
xchg
lea
inc
lcall
add
es
inc
xchg
push
xchg
aas
xchg
sbb
ret
xchg
gs
add
leave
rorl
enter
cwtl
pop
clc
dec
push
xchg
stos
push
jl
repz
push
fisubrs
pop
adcl
adc
or
outsb
and
or
xchg
xlat
jo
outsb
repnz
sbb
je
push
mov
jp
sub
push
fsubp
in
cmp
stos
dec
fwait
aam
cmp
loop
fistps
mov
pop
pop
call
sub
adc
outsb
stos
and
push
pop
or
cmp
dec
clc
fadds
xchg
fimull
sub
fwait
mov
scas
and
inc
sub
and
and
xchg
enter
jmp
fidivl
sbb
xchg
xchg
repz
xlat
sbb
mov
push
sbb
mov
inc
adc
lahf
jb
adc
hlt
jle
cwtl
outsl
leave
mov
test
push
adc
das
loopne
inc
mov
clc
sahf
jg
mov
into
orl
lahf
jl
push
repnz
xchg
mov
dec
pop
lret
cmp
push
jge
pop
or
fwait
mov
jp
dec
mov
cmpsb
shrl
js
sub
mov
out
xchg
mov
pop
mov
push
sbb
sbb
xor
loope
cmp
xor
mov
cmp
fldt
and
xchg
arpl
inc
mov
cwtl
push
out
loopne
seto
aam
xchg
and
adc
jp
mov
or
scas
cmc
push
and
mov
arpl
jmp
pushf
add
mov
stos
mov
outsl
out
jl
aas
mov
jmp
mov
cmpsl
push
aaa
enter
lahf
mov
push
cmp
jne
xchg
xchg
xchg
call
or
cmp
dec
rcrb
jge
cld
push
addr16
adc
mov
sbb
clc
xor
test
test
out
mov
mov
jmp
testl
mov
mov
inc
sub
scas
cmpsb
pop
and
repz
mov
ds
jbe
pop
mov
insl
sbb
stos
out
mov
xor
add
xor
in
add
push
aas
jmp
test
push
mov
daa
mov
adc
test
sbb
pop
scas
inc
mov
jb
adc
std
pop
cmp
fistpll
sbb
pop
add
lea
xchg
imul
mov
fstl
and
pop
into
iret
in
outsl
int3
sbb
daa
shlb
push
dec
mov
xor
stc
push
aaa
idivb
fimuls
add
leave
fsubr
lock
pop
mov
data16
mov
cld
sub
pop
arpl
lds
mov
jge
pop
mov
out
dec
and
pusha
loope
adc
les
sub
push
test
and
pop
pop
and
cld
mov
cmc
repnz
fcmovbe
jnp
mov
push
pop
inc
aam
adc
push
dec
insb
add
jmp
sahf
jo
or
arpl
clc
cmp
lcall
cmp
pop
push
add
mov
and
dec
jns
sbb
jb
out
sub
popl
out
cmp
mov
inc
add
out
and
outsb
xor
push
sbb
pop
jb
inc
adc
push
jbe
mov
das
stc
pop
mov
push
test
imul
inc
xor
jnp
inc
lods
adc
jp
jmp
dec
mov
js
lea
gs
sub
popa
nop
dec
jl
xor
mov
jns
jns
imul
lret
scas
fst
fwait
lcall
cltd
xor
aam
mov
inc
add
ss
jnp
sub
mov
lds
out
cli
xchg
add
mov
mov
and
enter
fst
call
int
xchg
bound
mov
sub
adc
mov
int3
push
orb
test
push
xor
and
jmp
outsb
xor
ret
mov
clc
lods
cli
das
lock
pop
push
out
dec
jo
test
mov
popa
aam
dec
xor
adc
or
mov
push
fistpl
mov
pop
aas
enter
mov
add
inc
xchg
test
ret
pop
xor
cmp
add
adcb
mov
push
shll
int
mov
xor
mov
out
test
xchg
dec
inc
int3
mov
in
pop
and
fdivrs
fldl
loop
or
inc
xor
cmp
mov
xchg
sbb
andb
dec
add
jns
and
xor
daa
imul
pop
dec
leave
xor
test
jmp
cmc
into
inc
int3
jle
shlb
sub
iret
mov
inc
xchg
daa
hlt
cmp
inc
jge
push
into
subl
dec
aam
movsb
add
dec
dec
xor
xchg
add
ret
jmp
jns
cs
cmp
aad
stc
adc
repnz
mov
lret
add
out
insl
outsl
inc
fisubrl
test
mov
push
les
es
into
stos
push
sbb
push
mov
push
dec
mov
je
dec
xchg
and
xor
mov
dec
xor
sub
lods
clc
fists
mov
inc
loop
out
sbb
push
nop
xchg
xchg
inc
movsl
or
pop
add
mov
xorl
lods
jbe
out
and
int
loopne
fwait
xor
push
push
or
loopne
outsb
cwtl
lcall
mov
pop
aam
add
xor
gs
xor
dec
mov
mov
addl
mov
cmpl
or
enter
dec
lahf
push
fwait
dec
sbb
and
lahf
cmovnp
aam
in
jbe
dec
jp
or
mov
mov
sahf
adc
adc
cli
mov
pop
push
aas
fwait
iret
jns
mov
test
rcll
mov
stos
mov
ja
sub
in
push
stc
rorb
and
cli
sbbl
adc
pop
push
mov
ret
rclb
jp
inc
add
cwtl
mov
jp
test
and
cs
cmpsb
adc
inc
pop
add
inc
jae
xchg
or
jge
add
sbb
inc
pop
push
lds
leave
testl
cmp
test
loop
sbb
dec
push
sbb
push
cmp
in
ljmp
cld
loope
shll
sub
xchg
popf
lods
nop
scas
mov
loop
enter
out
add
daa
divl
cmpsb
add
jo
and
shlb
leave
push
sbb
scas
dec
out
or
inc
dec
aas
fadds
xchg
jb
repnz
fnstenv
inc
fnstcw
push
push
jne
notb
lcall
jmp
addb
push
orl
inc
mov
sahf
xor
xlat
imul
sahf
in
jp
lret
pusha
sub
loop
movsb
scas
and
shrb
dec
inc
cmpsl
dec
ljmp
pop
or
xor
sbb
cmpsl
pusha
data16
and
dec
jb
arpl
jecxz
ret
cmp
lret
in
xorl
sub
fs
pop
fisttps
xor
test
out
mov
cli
xor
xor
jge
mov
lcall
push
cmp
dec
mov
rcll
inc
inc
adc
repnz
mov
push
and
push
inc
xchg
push
rcll
mov
aas
movsl
adc
inc
push
or
sahf
gs
pop
cmpsl
lea
cmp
int3
push
xor
lret
cmc
push
jae
cmpsl
dec
divb
xor
dec
adc
test
pop
fs
xor
pop
jmp
fisttpl
jns
in
sbb
loope
pop
iret
mov
jae
fmull
mov
out
int3
shrl
add
inc
or
leave
popf
cmp
or
inc
add
pushf
aaa
push
push
inc
push
fwait
push
icebp
mov
xchg
sub
loopne
mov
mov
xor
mov
jge
pop
roll
sub
ds
mov
sbb
add
shrl
popf
rcrb
scas
pop
sub
jp
sbb
gs
iret
out
push
lock
xor
repz
stc
addb
bound
shr
out
mov
or
mov
jmp
mov
es
pop
mov
mov
mov
mov
and
jno
pop
or
sub
jbe
sbb
ss
and
cmpsl
fcompl
bsr
or
sub
mov
jecxz
leave
insl
imul
js
adc
les
clc
clc
out
fldenv
mov
icebp
xor
mov
adc
push
cmp
fdivs
mov
lahf
xlat
adc
jecxz
pop
ja
sub
out
mov
repnz
ret
push
outsb
lahf
cmp
sti
test
in
aad
sbb
adc
cld
shlb
push
push
xchg
push
shll
pop
cmp
enter
jae
jp
scas
sub
decb
notb
lds
sub
push
jl
jnp
inc
fstpt
shll
cmpsl
hlt
jbe
sub
xor
ss
pop
testl
mov
ja
lcall
scas
icebp
mov
test
or
stos
fstpt
shlb
inc
add
xor
int
cs
xchg
sbb
jb
in
mov
dec
cmpsb
jbe
gs
out
push
jge
jge
hlt
pop
xchg
sub
popa
mov
sub
clc
and
xchg
leave
mov
sub
xor
adc
adc
mov
out
jbe
pop
jp
loop
call
nop
aam
mov
dec
cli
and
std
insb
sti
or
push
mov
fidivs
sbb
scas
repz
mov
nop
pop
call
mov
xchg
cmp
add
enter
neg
mov
ss
in
dec
inc
fucomi
mov
cmp
in
nop
adc
xchg
flds
pop
addr16
bnd
scas
aas
mov
scas
add
shll
mov
ret
pop
adc
xchg
cli
cli
and
jle
in
insl
mov
jecxz
faddp
repz
jle
ret
clc
hlt
mov
sbb
mov
lahf
nop
jecxz
sub
movsl
adc
jp
push
push
outsl
mov
push
int3
add
addb
sbb
and
xor
cmpsl
das
cmpsb
lea
mov
stc
mov
sub
or
xchg
push
add
xor
and
arpl
push
adc
push
shrb
push
out
loopne
push
xlat
mov
add
sarl
jb
arpl
sbb
outsl
fcomps
rclb
push
andb
addb
inc
shl
or
lret
outsb
inc
ja
push
pop
xchg
and
out
ja
in
push
aaa
and
pushf
in
xchg
xchg
cmp
inc
pop
fcom
testb
pop
mov
pop
stc
rcr
dec
pop
mov
stos
movsb
das
arpl
push
fucom
and
sahf
fisttpll
xchg
dec
out
adc
pop
mov
shrl
rcrl
je
lcall
shlb
dec
aam
pop
xchg
ret
jns
xor
cmpsb
xor
out
add
mov
ret
pop
scas
fisttpl
mov
clc
imul
sbb
sahf
movsb
or
lret
in
push
out
mov
lcall
pop
lahf
mov
push
test
jl
lds
mov
int3
push
mov
int
or
add
ficomps
cmp
xor
lret
sbb
and
aam
and
xchg
test
adc
clc
addr16
in
push
jge
lea
add
mov
mov
test
insl
sbb
jle
dec
lahf
adc
xchg
mov
fwait
scas
mov
or
ja
stos
adc
cmp
lds
mov
sti
mov
push
sahf
push
out
cwtl
push
out
or
ss
and
sbb
inc
sahf
or
jne
mov
movsl
mov
push
pop
lret
jnp
movsl
stc
into
pop
and
in
push
std
pop
pop
adc
xlat
dec
xchg
pop
movsl
jle
xchg
imul
push
xor
sbb
mov
pushf
push
cmpsb
mov
mov
outsl
pop
pushf
inc
cltd
shll
jge
cli
lods
hlt
cmpsl
in
xchg
les
aas
pop
sub
mov
fiadds
mov
stos
aam
pop
push
cmp
shl
aam
push
jl
mov
sbb
ret
inc
loope
das
jne
bound
je
es
fistpl
or
lret
sub
xchg
add
mov
sar
negb
dec
lods
adcb
push
pop
xor
and
lahf
sbb
hlt
shl
push
and
dec
fadd
mov
mov
lret
ljmp
mov
mov
sbb
pop
mov
lret
loop
inc
mov
ds
nop
mov
out
jmp
daa
add
push
pop
out
push
add
stos
pop
mov
addr16
adc
in
scas
ljmp
lcall
cmp
lods
out
lahf
fdivrl
es
cmp
int
fldenv
pusha
test
jb
stos
fwait
mov
dec
mov
stc
in
pop
xchg
pop
or
mov
insl
mov
out
or
out
jge
dec
sbb
scas
ja
pop
cmp
sbb
cmpsl
sub
movsl
jne
xlat
sub
repz
xor
cmp
xchg
pusha
fadds
fldt
jbe,pn
js
cmpsl
daa
mov
cmp
push
jno
jecxz
cmp
jo
fbstp
xchg
stc
int3
pusha
mulb
pop
lret
sbb
sahf
in
inc
repnz
mull
ds
dec
push
cmp
lods
mov
mov
dec
movsb
adc
mov
mov
shrl
arpl
mov
dec
popf
insb
push
mov
aaa
rorl
xor
add
sbb
pop
xor
addr16
jmp
jae
clc
fstpl
sbbl
data16
lods
leave
lahf
mov
sub
cmp
mov
imul
cli
les
sbb
hlt
lea
bnd
and
lret
aad
daa
xor
fiaddl
psrlq
adc
fcom
cltd
rolb
icebp
mov
lods
aad
lods
xor
mov
add
cmp
xchg
pop
mov
jo
cmp
xchg
push
clc
call
mov
xchg
shlb
cmpsl
js
dec
cmp
aas
arpl
pop
mov
pushf
jl
add
aas
sahf
test
push
imul
das
ret
push
jno
push
xor
jae
jg
add
pop
jecxz
aam
xchg
fwait
scas
mov
mov
xor
rol
pop
shlb
or
shl
dec
mov
sub
ret
iret
push
insl
data16
popa
pop
and
aas
pop
pop
mov
pop
mov
push
das
out
xchg
mov
arpl
push
mov
or
lret
sbb
aam
adc
mov
mull
pop
int
and
and
aad
push
sti
adc
cld
movsb
pop
and
jecxz
adc
clc
test
cltd
fstpl
test
nop
dec
insb
push
mov
ja
pop
sub
hlt
inc
orl
popf
and
cmpsl
dec
lret
std
push
jb
mov
mov
push
add
stos
sbb
rcrb
mov
lds
push
ljmp
cmp
sarb
cwtl
or
pop
pop
inc
data16
or
aad
cmp
stos
cld
pushf
nop
loope
lea
lods
pop
fcomps
mov
je
jne
mov
fs
or
inc
lret
push
xor
mov
faddl
jns
jge
sub
ror
addl
sub
sbb
pop
cli
arpl
mov
xchg
cmp
das
xchg
out
int
jl
lret
jb
fs
mov
scas
push
cltd
mov
jae
in
sbb
sub
dec
stc
mov
int3
int3
js
xchg
out
inc
add
mov
sub
das
or
fcmovb
xchg
push
repz
aam
lods
and
inc
scas
mov
push
lods
lfs
out
leave
dec
int3
jb
ljmp
pop
divl
je
dec
or
ljmp
int3
mov
mov
push
je
fsts
push
mov
call
out
pushf
cmc
lea
gs
fs
inc
cli
push
insl
fs
test
aaa
lret
mov
mov
arpl
dec
out
mov
leave
fs
sbbl
cmp
pop
add
xor
inc
or
call
xor
loopne
sub
mov
lods
lock
je
stos
jo
jle
or
sbb
mov
test
retw
sarb
mov
sub
xor
es
repnz
mov
xor
add
or
or
mov
inc
iret
sbb
test
mov
cltd
andb
pop
mov
jmp
gs
aaa
xor
xor
xor
push
jg
repnz
scas
fcomps
movsl
inc
or
xchg
push
stos
iret
push
stos
xchg
hlt
adc
mov
faddp
dec
cmpsb
sub
adc
push
lret
cmpsb
filds
mov
mov
aam
jae
add
jnp,pn
and
addb
scas
xor
dec
mov
push
push
or
cwtl
add
sbb
iret
jecxz
out
adc
xorb
repnz
xorl
mov
inc
mov
mov
popa
push
dec
pop
dec
lcall
stc
push
sub
mov
divb
dec
inc
jg
jno
xorb
add
mov
jecxz
add
jbe
leave
inc
je
mov
cli
pop
xor
or
mov
enter
inc
pop
mov
fs
sbb
bound
int3
loop
cmp
das
sub
pop
cmp
pshufw
std
add
arpl
dec
dec
jo
sub
loop
iret
fdivr
jb
jno
mov
int
into
adc
and
leave
sbb
or
xor
cli
xor
push
orl
fstpt
or
out
cmp
fadds
xchg
mov
call
mov
ret
jp
inc
jge
inc
cwtl
dec
cmp
add
xor
sbb
mov
mov
adc
pop
sbb
push
arpl
pop
push
fcompl
jnp
mov
xor
sti
mov
mov
popa
rcrl
in
xchg
cli
or
mov
stc
jnp
xor
push
xchg
dec
cmc
loopne
cmp
stos
xor
mov
dec
mov
dec
int3
call
mov
and
jl
cltd
jae
xor
add
ss
outsl
inc
cmp
sahf
mov
test
jp
xchg
cmc
test
sbb
adc
push
or
cwtl
and
out
xchg
cmp
mov
dec
or
and
out
shrl
aas
lods
mov
aad
rcrl
xchg
inc
fwait
loope
jp
repz
pop
jne
mov
gs
iret
call
xchg
rcrl
jp
sub
cltd
jg
push
cwtl
push
std
mov
enter
dec
adc
ss
mov
mov
cmc
dec
or
es
inc
sahf
mov
jl
adc
sbb
dec
fs
inc
cltd
imul
push
dec
mov
adc
lods
mov
push
and
cld
add
fdivrs
dec
cmpsl
jne
movhps
xor
rcll
cmp
arpl
in
in
mov
out
jecxz
test
inc
imul
adc
jnp
jge
inc
dec
in
inc
shlb
in
scas
sub
mov
mov
xor
add
xchg
jb
push
decb
out
pop
pusha
sbb
mov
cmpsl
and
or
inc
dec
fists
shll
sbb
aam
push
into
imul
idiv
pop
cli
int
adc
stos
in
movsb
sub
mov
nop
xchg
add
mov
pop
jns
mov
push
js
repnz
out
xor
mov
fldt
das
mov
data16
scas
add
push
nopl
shlb
popa
xchg
push
mov
jo
insl
dec
inc
aam
xchg
xor
fmull
sub
out
pusha
push
jge
ljmp
leave
add
mov
cmc
cmp
xchg
sub
sbbl
dec
or
sarb
cmp
fsubrp
jb
ret
jns
push
data16
xchg
rorb
or
jge
mov
jmp
xchg
add
movsl
mov
mov
mov
bound
sub
pop
xor
jne
cmp
jl
mov
insl
in
inc
cmp
add
xchg
pop
mov
push
jle
cmp
jmp
out
sbb
pop
scas
and
cmp
or
in
xor
lcall
cmpsb
pusha
cli
push
icebp
sbb
push
fsub
xchg
ffreep
sbb
shr
ret
push
bound
fs
sbb
leave
push
jp
mov
ret
ds
in
leave
jcxz
cmpb
and
fwait
in
iret
mov
inc
mov
test
repnz
mov
mov
les
sahf
fsub
push
inc
mov
dec
ja
dec
sbb
or
xor
mov
fs
or
test
ds
cld
cmp
pushf
jne
js
fidivrs
and
mov
dec
add
sub
lods
cltd
push
sbb
idiv
cmpsb
and
out
push
daa
stos
ret
mov
or
jecxz
psadbw
hlt
add
stos
out
or
test
repnz
push
xchg
push
dec
xchg
shll
mov
fimull
mov
shl
mov
sub
pop
cli
fildll
movsb
lret
movb
xchg
push
add
dec
or
pushf
ret
in
push
inc
push
das
rorb
fistps
clc
mov
pusha
aad
fs
add
adc
je
push
sbb
repnz
inc
inc
xor
aas
adc
mov
mov
in
jb
jae
or
sbb
fsubs
aas
js
xor
aad
leave
inc
cld
dec
repz
pop
pop
sub
cmp
xlat
ljmp
andl
mov
and
lods
mov
jbe
and
into
jp
div
or
mov
or
xor
loop
int3
dec
fwait
sbb
sahf
pop
and
or
rcr
xor
test
and
lcall
inc
cmpl
cmpsb
jno
or
mov
aas
lock
leave
cmp
or
xchg
outsl
jb
lods
repnz
push
enter
bound
push
mov
xor
clc
loopne
leave
daa
xor
test
jg
sar
test
mov
mov
scas
push
cmpsl
push
and
sub
push
jg
and
cmp
movsl
sub
test
into
add
mov
out
mov
ljmp
cmc
loopne
shlb
fs
xor
jbe
jne
aaa
lret
mov
or
stos
pushf
cmp
and
stos
subb
add
push
xchg
lods
lods
int
sbb
shrb
sbb
ret
inc
fnsave
lret
rcr
xor
and
cli
rolb
js
icebp
sub
lcall
inc
pusha
sar
add
stos
in
dec
arpl
aam
cli
dec
test
mov
fstpl
adc
in
std
mov
mov
xchg
jno
cmp
dec
out
testl
fildl
and
jb
sbb
xchg
sbb
fisttpll
pop
or
add
mov
shll
xlat
sahf
add
dec
and
lds
lahf
lret
das
data16
or
popf
loope
jno
enter
mov
cmpl
mov
out
push
shr
jb
pusha
in
push
push
lcall
and
push
mov
mov
mov
xchg
jl
fwait
movsl
in
cld
jle
ljmp
add
mov
ret
pushf
std
mov
ja
sbb
daa
sub
push
sbb
test
cmc
sub
mov
and
jns
push
sbb
inc
mov
push
dec
js
lret
jecxz
push
push
shrb
inc
dec
clc
pop
xchg
xor
dec
dec
inc
pusha
clc
call
loopne
mov
mov
rol
ret
pop
mov
mov
js
jp
mov
int
mov
cs
cmp
imul
jmp
cmpsl
je
out
addr16
fldenv
add
jno
sub
sbb
xor
dec
push
jle
cmp
outsb
pop
arpl
ret
pop
arpl
sbb
cmpsb
dec
ja
pop
ret
mov
stos
stos
and
aad
in
jns
aas
pop
mov
js
pusha
or
sub
or
xchg
dec
inc
xor
xchg
lods
cmp
or
xchg
fistps
add
cmp
dec
mov
dec
fstl
mov
fldl
mov
mov
clc
test
daa
cs
sarl
ds
cmp
adc
jae
and
aad
fwait
mov
mov
dec
loope
push
cmc
outsl
rclb
lock
mov
and
popf
dec
pop
xor
sti
jge
data16
pop
xchg
rcll
mov
dec
push
in
cltd
in
dec
push
xchg
into
test
sbb
xor
in
pop
xor
mov
and
push
icebp
rcrl
mov
outsb
aad
sbb
cmp
leave
sub
dec
fdivl
jge
xchg
xor
mov
cmp
inc
jmp
lret
mov
pop
lods
jnp
xor
xchg
packsswb
xor
clc
test
fucomp
mov
fucomip
add
ljmp
out
outsb
test
ficoms
movsb
dec
inc
cltd
insl
jge
xchg
adcb
stos
leave
and
call
add
or
sub
jo
xor
push
sbb
andl
cmp
sub
adc
ljmp
mov
iret
pop
out
les
and
jne
inc
bound
mov
adc
mov
test
lods
and
jl
fnstenv
ja
pop
add
mov
fistps
loope
and
xchg
in
fwait
push
arpl
pusha
in
pop
lret
mov
pop
sar
std
push
stos
ret
popa
aad
dec
cltd
cli
movsb
into
sub
daa
into
xchg
cmp
sahf
jp
dec
cli
push
lahf
pop
shr
dec
inc
mov
scas
std
iret
out
adc
dec
mov
dec
cmp
pushf
shrb
neg
in
or
mov
or
das
pop
ljmp
mov
insb
mov
pop
pop
int
jl
cltd
jo
in
push
or
jo
pop
xchg
dec
inc
ret
shll
jo
pop
sub
jmp
cmpsl
or
imul
push
out
inc
push
mov
adc
cmpsl
and
dec
jo
pop
lock
aad
cmp
mov
sarb
jo
sahf
scas
dec
clc
xchg
jns
jb
call
lret
adc
leave
add
sbb
xchg
popa
cmp
sbb
aam
enter
mov
pop
push
xchg
xor
aam
jns
test
insb
inc
lret
mov
sbb
mov
or
push
dec
add
mov
and
cmpsb
add
arpl
push
in
jmp
mov
mov
pop
pop
xor
rol
sbb
sbbl
aad
in
sti
xchg
jecxz
adc
jo
ja
fiadds
or
popl
ret
cmp
add
pop
jmp
test
das
cmp
out
push
fimuls
push
fwait
mov
sub
push
cmpsl
mov
xchg
lods
jl
in
mov
adc
outsl
dec
and
lahf
mov
adc
sub
push
loopne
and
pop
daa
and
add
inc
xor
movsl
dec
hlt
push
cli
loope
clc
int3
xchg
iret
sub
push
ss
add
pop
call
pop
fmuls
sbb
sbb
jns
push
mov
sub
shll
outsb
mov
mov
imul
jmp
jb
inc
dec
out
add
mov
fisubrl
lds
scas
lret
pop
cld
mov
sti
mov
xlat
ds
leave
divb
and
notb
push
jno
repnz
push
mov
fimull
call
out
out
xchg
sbb
cmp
stos
cltd
es
js
insb
xor
xchg
repz
mov
daa
dec
imul
out
xor
insl
fistps
dec
in
pop
psllq
dec
imul
aaa
mov
mov
in
arpl
leave
and
xchg
and
fsubrs
pop
xchg
jl
xor
push
jnp
dec
push
xrelease
sbb
nop
rol
and
stos
inc
in
add
lahf
sbb
out
popf
loop
je
pusha
push
xor
and
lahf
xor
cmp
pop
fwait
pop
sbbb
addb
cmp
fs
pop
jne
push
mov
push
xchg
and
cmp
xor
imul
dec
sub
jnp
lret
popa
andb
dec
sub
pushf
fs
repz
outsl
adc
inc
sub
mov
pop
je
inc
cld
hlt
jnp
rcl
mov
mov
sub
pop
int3
jbe
mov
sub
icebp
xchg
jmp
stos
pop
inc
xchg
push
lods
mov
rorl
xchg
xchg
adc
xor
cmpl
sub
mov
mov
mov
sti
mov
stos
jg
pushf
xchg
mov
pop
icebp
lock
pushf
hlt
xchg
pusha
dec
xor
mov
out
cmp
lret
sbb
mov
imul
testb
in
push
inc
mov
inc
or
cmp
xor
dec
mov
push
mov
push
or
cmpsb
jg
xchg
movsl
push
push
fs
inc
cwtl
mov
mov
repnz
xlat
movsb
cld
fcomps
ja
sub
sub
sahf
adc
sahf
lods
out
stos
pop
inc
daa
bound
shlb
jp
jmp
sbb
insb
xor
test
and
or
out
jns
test
aad
movb
pushf
popl
jmp
lret
push
andb
fstps
dec
and
outsl
lds
xchg
out
jl
pop
sub
iret
jae
sbbl
rorl
lock
jo
xchg
jl
lods
mov
adc
inc
repnz
push
cmp
add
add
out
or
ss
sahf
int3
xor
stc
es
mov
rcrb
sub
retw
aaa
jg
mov
dec
jno
mov
jno
push
dec
pushf
sbb
mov
mov
out
icebp
out
sub
mov
or
sub
cmp
mov
mov
cwtl
jbe
lcall
cli
push
add
ja
add
scas
aas
mov
mov
int
cmp
into
xchg
xchg
dec
jns
cmc
lret
xor
mov
jecxz
mov
pop
movsl
inc
popf
xchg
movb
inc
dec
in
jnp
jo
aaa
pop
and
lods
jne
jne
lahf
xor
cmp
mov
mov
subl
push
fstpt
xchg
popa
aaa
movsb
add
pop
lea
jmp
or
xchg
ljmp
ja
mov
aas
lods
push
mov
jmp
ret
adc
lcall
ljmp
add
sbb
mov
xchg
sarl
xchg
pop
mov
insb
decb
jecxz
mov
xchg
jno
sub
movsl
pop
int3
pushf
aas
repnz
or
push
sbb
iret
subl
sub
nop
cmp
push
test
mov
test
lahf
pop
and
fs
sub
daa
dec
pop
push
pop
enter
loop
xor
mov
mov
in
rorb
int
dec
pushf
inc
pop
push
dec
and
push
sbb
mov
aad
jmp
mov
push
cld
pop
outsb
cmp
incl
mov
lret
sbb
jb
jg
xchg
clc
lea
mov
add
ds
xchg
or
ror
andl
int
nop
test
adc
sub
mov
dec
fbld
movsl
ds
adc
xchg
sbb
mov
leave
fwait
or
jl
adc
into
or
adc
xlat
adc
inc
mov
lods
mov
dec
jg
bound
xchg
xchg
andl
aad
std
xor
mov
cld
flds
xchg
pop
cld
rclb
mov
or
jns
pop
mov
rclb
aas
add
repz
dec
andl
mov
sub
push
and
pop
push
subl
and
and
test
xchg
mov
adc
imul
dec
imul
sub
xchg
add
ljmp
sub
sahf
fcmovnb
and
outsb
inc
xchg
shll
inc
mov
pusha
ljmp
fadd
addr16
out
js
xor
cs
inc
arpl
jecxz
subl
xor
scas
adc
mov
insl
and
rorl
jnp
lret
cld
push
lret
popa
out
cmp
or
sti
cs
xor
and
popa
out
ja
xor
adc
jp
or
dec
xchg
sub
sub
gs
stos
lods
cmp
sbb
pop
dec
jle
icebp
push
rcrl
jmp
out
out
test
sub
les
lahf
fstpl
xchg
es
aad
push
push
ja
gs
jno
or
adc
pop
aaa
dec
xchg
sti
jg
jae
into
xchg
mov
in
lea
lea
dec
aaa
jle
or
aas
push
mov
shll
mov
test
lea
rorb
fcoml
aas
and
enter
xor
mov
and
sbb
push
mov
adc
fs
out
jae
fbstp
xchg
mov
pop
cmpsl
push
loopne
add
xor
test
bound
cmpsb
shrb
jnp
int
repz
mov
pop
push
and
mov
pop
insl
shr
mov
xchg
jne
pop
cltd
sahf
cmp
add
test
insb
pop
or
cmpsl
mov
pop
cmp
xor
sub
in
dec
mov
xchg
xor
pop
sbbb
lret
shll
mov
pop
int3
xor
js
test
fwait
jo
mov
xchg
int3
jge
sub
sub
dec
out
xchg
lahf
inc
je
push
inc
mov
jo
jge
push
and
or
or
cmpsb
dec
scas
lret
mov
cmp
ret
mov
xor
xchg
ljmp
rorb
aas
sub
sbb
cmp
int3
jb
xchg
ja
add
inc
sub
movsl
in
lret
rorb
lods
cmp
push
adc
mov
jnp
and
adc
pop
xchg
jne
out
inc
shrb
fsubs
mov
sbb
add
cmp
roll
mov
insl
std
outsb
loopne
pusha
lods
mov
xor
push
and
sub
add
cmpsb
inc
push
ret
rorl
xor
jnp
iret
dec
cmpsl
into
sbb
fisttps
adc
pop
ret
jbe
imul
imul
aam
adc
and
xchg
mov
pop
adc
jnp
xchg
mov
cmpb
xchg
pop
idivl
or
lods
rolb
adc
xor
mov
xchg
mov
mov
xlat
push
pop
ja
int3
push
or
and
and
xchg
rolb
es
jbe
cmp
jg
subl
jp
mov
mov
mov
sub
rolb
jo
mov
lds
xchg
xchg
sub
cmp
or
push
outsb
js
mov
inc
les
xchg
xor
inc
push
xchg
cmp
xor
js
fnstsw
sub
pop
daa
inc
test
rcl
fwait
in
jae
dec
add
mov
mov
mov
loop
stc
or
and
sti
sbb
cmp
and
sbb
xchg
loop
in
rclb
addr16
ljmp
shrl
fcomp
stos
mov
ja
cltd
cmp
pop
sbb
and
popa
imul
push
mov
or
jl
ja
outsl
mov
mov
xor
fldt
arpl
dec
test
push
pop
cmp
sbb
xor
jge
sbb
aad
sbb
inc
popa
cmpsl
je
push
shll
push
test
mov
scas
idivl
call
test
shr
cwtl
mov
pop
enter
test
mov
xchg
and
std
ds
hlt
push
int3
lcall
stos
mov
push
push
ss
mov
or
xchg
push
fldcw
jge
arpl
mov
inc
daa
ret
flds
lcall
bound
jg
push
jno
arpl
addl
and
sbb
js
pop
bound
push
pop
test
mov
xchg
loope
ja
or
adc
loopne
popf
dec
mov
addb
popl
adc
bound
enter
or
adc
rorl
addb
adc
mov
sub
rclb
pop
addr16
shll
mov
into
movsl
mov
je
fst
sub
out
das
inc
add
fadds
fdivrs
les
push
stc
add
dec
jge
fucomi
sub
xchg
aam
les
stos
lock
lods
and
and
out
and
mov
sti
pop
push
bound
jg
or
stos
loope
pushf
icebp
and
fdivl
cmc
dec
push
xor
add
movl
aam
cli
xor
int
mov
inc
dec
mov
cmpsl
lcall
mov
push
cmpsb
repnz
shlb
cs
fmul
lods
xchg
lock
mov
dec
fs
sub
rorb
aaa
ret
lods
sbb
cmp
in
movl
adc
popf
mov
rcl
test
cmp
cmp
lods
out
dec
insb
xor
fldt
pusha
in
vpsubq
pusha
xchg
xor
mov
xchg
sub
sbb
inc
decb
lods
pop
jmp
xchg
dec
in
dec
nop
in
call
aam
div
ljmp
cmpsb
and
in
ret
mov
sahf
dec
or
inc
cmp
push
test
jg
in
xchg
in
jp
lock
rcrl
int3
xchg
aaa
out
shl
stos
adc
xchg
int
push
fidivl
popf
jmp
mov
adc
scas
out
rcll
push
andb
stc
stos
insb
in
fildll
stos
pop
jno
add
dec
add
lcall
fists
dec
imul
repz
imul
pop
lret
lds
xchg
pusha
fnstsw
insl
addr16
ret
cli
xor
orb
ja
mov
sub
pop
xor
movl
jmp
fsubrp
xlat
aas
cs
sbb
push
inc
push
insb
mov
and
pop
or
outsb
rcll
mov
sti
jb
mov
sub
inc
jns
jo
pop
loopne
pop
jo
xor
aaa
mov
mov
jo
cld
xchg
fistl
add
adc
lcall
lret
pop
loopne
icebp
jmp
fwait
add
mov
pusha
movsl
shlb
stc
repnz
xor
mov
repz
movl
adc
sahf
jbe
lret
sbb
push
pop
lcall
out
cwtl
mov
or
rclb
andb
push
or
imul
fcomp
cmc
leave
adc
jo
pop
daa
loopne
fs
or
fnstcw
into
sub
pushf
imul
es
cmp
shlb
repz
push
or
mov
xchg
mov
add
clc
ret
jp
icebp
mov
cmpsb
call
jecxz
cmp
lods
idivl
push
mov
cmp
cmp
mov
push
xor
cs
ret
insl
push
sbb
dec
out
scas
gs
and
ret
pop
cltd
mov
ficoms
pop
repnz
clc
cmp
test
jmp
jle
add
push
push
jp
push
sub
into
jecxz
fldenv
sbb
jmp
xchg
pop
and
or
or
test
aad
clc
mov
sarb
sub
jmp
mov
aad
push
cmp
xchg
sahf
sbb
mov
cmp
dec
mov
cmp
incl
and
push
xchg
or
flds
stc
lods
and
or
xor
cmpb
out
cmpsl
mov
mov
push
jl
stos
stos
outsl
leave
into
push
push
mov
lret
adc
outsb
lea
insl
notb
dec
stos
daa
cltd
xchg
loope
outsb
mov
hlt
inc
inc
gs
push
aad
pop
lret
in
jg
cmpb
sbb
outsb
inc
push
lret
xchg
add
xor
mov
ror
lods
mov
pop
aad
sbb
rcl
add
imul
inc
lahf
inc
push
jge
xor
push
xchg
mov
jmp
xor
adc
xor
cld
shl
xor
push
xor
sbb
mov
cs
rsm
ja
mov
add
mov
decl
sub
add
cs
outsl
cmc
pop
sub
rep
push
pop
imul
add
cs
adc
cs
dec
cmp
mov
jmp
pusha
cmc
or
pop
and
jmp
xor
repnz
inc
dec
pop
dec
stc
in
mov
fwait
popa
dec
xchg
rcl
dec
addr16
mov
jp
mov
mov
frstor
jecxz
int3
cs
into
cwtl
mov
cli
sub
cld
pop
icebp
mov
sti
sbb
in
popa
in
mov
test
jns
push
pop
mov
repnz
pop
arpl
sub
icebp
imul
sti
outsb
lods
jne
out
mov
das
cmp
hlt
jecxz
xlat
movntq
pop
mov
push
ja
cmc
arpl
cmp
cmpsb
xor
cmpsl
push
lock
mov
jecxz
inc
outsl
iret
outsl
test
sti
push
or
add
cmp
inc
mov
ficoml
enter
dec
sbb
incl
cmp
cli
scas
test
dec
xor
outsl
cmpsb
stc
mov
or
jbe
orb
mov
adc
push
mov
aas
ljmp
jae
jno
and
pop
fwait
jmp
or
push
jnp
sti
push
pop
add
jge
decl
fistl
dec
and
sbb
test
lret
sbb
inc
hlt
mov
mov
mov
lods
cmp
stos
push
out
push
aas
xchg
mov
pop
push
dec
mov
jge
xor
lock
repz
mov
sub
sbb
add
mov
or
mov
daa
adc
ljmp
fsts
fs
or
stos
and
ljmp
enter
shlb
test
mov
subb
ds
cmp
sbb
adc
and
pop
mov
outsl
addr16
xor
sub
daa
jae
mov
dec
movsb
inc
jo
repz
dec
xor
mov
mov
jo
ud1
adc
out
clc
sub
jl
push
in
aad
stos
enter
add
arpl
fmuls
ret
dec
arpl
outsb
push
fnsetpm(287
xchg
cmpsl
mov
fidivrs
cli
inc
add
mov
dec
mov
aaa
mov
shrb
shrb
mov
mov
sbb
insl
test
test
cmc
daa
mov
and
in
cmp
lret
jns
mov
andl
xchg
cwtl
pop
subl
sub
pushf
imul
xor
jg
outsl
push
xorb
insl
mov
mov
sarb
inc
push
and
data16
push
test
fidivs
mov
xor
pop
sbb
jb
mov
pop
fldz
push
or
gs
cltd
in
or
sub
push
pop
enter
mov
int
mov
push
repnz
push
inc
xor
movsl
adc
inc
rcll
or
into
movl
dec
popf
inc
inc
add
push
adc
sbb
aad
adc
js
imul
out
xorb
cwtl
roll
gs
test
mov
sbb
or
dec
js
push
lahf
jae
or
jmp
rol
lcall
sub
mov
lods
jle
std
adc
call
mov
dec
sub
mov
je
pushf
movsb
adc
add
mov
inc
push
icebp
xchg
std
ljmp
aas
mov
iret
lret
fcoms
push
data16
dec
sbb
push
push
add
outsl
call
pop
push
sahf
fstpt
mov
adcl
mov
push
mov
push
sub
jne
popa
inc
mov
mov
and
inc
std
and
push
cmp
push
fisubs
lods
pushf
shl
jp
arpl
repnz
stc
insl
inc
outsl
mov
scas
movsl
popa
in
sbb
jae
rclb
jae
push
jb
xchg
xor
mov
rcl
and
xchg
cmp
adc
pop
xor
push
jmp
pop
cmp
ljmpw
inc
int
jns
add
lea
push
iret
push
call
fstpl
loope
in
jg
pushf
ds
pushf
push
adc
dec
ret
sub
adcb
leave
and
out
fsts
ljmp
incl
inc
data16
lret
cmp
mov
xchg
pop
fistpl
cmp
push
test
or
shll
pop
push
inc
cs
fsubl
mov
lret
cs
mov
mov
mov
sbb
rolb
jmp
lea
jnp
adc
sub
or
jge
cmp
mov
add
aad
loop
daa
pop
repnz
enter
xor
cs
icebp
inc
jne
sbb
mov
jo
push
test
add
faddp
in
cli
jmp
xchg
loope
sbb
sub
fcmovnbe
inc
ljmp
mov
mov
inc
pop
aaa
outsb
inc
jg
jle
cltd
mov
pop
adc
popa
loop
loope
out
mov
stc
mov
and
fcoms
cmp
popf
leave
ljmp
fcoms
sub
inc
xor
in
dec
and
inc
pop
fisubs
pop
or
rolb
lahf
mov
and
dec
rcll
loope
dec
mov
push
cmp
movsl
test
std
mov
bound
sbb
cmpsb
adc
cmp
pop
popf
fs
out
out
fsubrp
push
stos
test
pop
in
mov
push
aad
mov
movsl
lds
mov
adcb
cli
and
xchg
mov
dec
push
add
insb
test
pop
mov
jg
gs
adc
jns
aas
scas
sbb
lods
xchg
dec
cmp
add
mov
pop
cwtl
stos
pop
mov
sar
sub
inc
xchg
sbb
mov
out
imul
push
inc
mov
icebp
push
mov
arpl
jle
pusha
cmp
jb
fiaddl
pop
cmpsb
sub
mov
push
pusha
and
pop
xchg
movsl
je
rcr
popf
rol
test
fcompl
adc
push
sub
roll
clc
and
push
daa
aad
pop
mov
mov
repnz
inc
pop
outsb
scas
insb
pop
out
sub
xchg
lret
xor
mov
dec
movsl
jns
std
mov
pop
and
lods
outsl
xchg
cmp
or
cmpl
add
rsm
test
aaa
pcmpgtb
xor
jecxz
daa
ds
pushf
jne
pop
pop
push
movsb
adc
push
add
sub
push
push
adc
fcoml
cltd
decb
aaa
movsl
push
bound
ja
mov
pop
in
jns
leave
out
inc
pop
push
and
ljmp
mov
add
jmp
pop
fists
or
clc
dec
inc
idivb
jae
mov
test
adc
jge
pop
lock
ja
das
addr16
sbb
adc
fnstcw
fisttpl
das
aad
mov
clc
mov
out
and
fwait
mov
xchg
xchg
mov
dec
push
push
pop
mov
pop
psllw
adc
fs
jp
fwait
aaa
mov
cmp
mov
jle
test
mov
mov
cltd
jae
xlat
rol
sub
les
leave
cltd
outsl
mov
mov
loope
pop
fidivl
xchg
stc
movsl
push
bound
aad
fisttpll
jl
cmpsb
lock
xchg
in
arpl
outsl
daa
jne
enter
fimull
adc
jnp
cmpsb
fwait
out
dec
push
mov
je
lds
adc
flds
lods
and
push
es
pusha
sbb
or
cltd
aam
in
leave
xor
loopne
repnz
sarl
fisubl
pop
les
and
mov
gs
sub
jnp
lods
rorl
sbb
add
je
add
cmp
cmp
cmp
xor
mov
jbe
mov
adc
daa
mov
xchg
mov
cltd
sbb
fs
lret
jnp
arpl
inc
add
xor
int
inc
ret
cmp
lahf
sub
loope
lret
add
mov
pop
sub
jae
mov
mov
fdivrl
cmp
dec
es
imul
popa
ljmp
and
inc
dec
cmc
lock
lret
cmpsb
jae
pop
scas
fs
stos
sbb
cmpsl
pop
sbb
add
les
dec
add
in
pop
cmc
push
push
outsl
sub
mov
aad
clc
adc
loopne
add
push
xor
jge
cmpsl
shlb
loop
pop
aas
leave
dec
lock
inc
lcall
out
aad
cmpsb
jl
xchg
sub
dec
lret
aad
dec
adc
pop
mov
subl
movsb
ret
ret
bound
mov
imul
fs
shlb
int
xchg
add
cli
enter
jg,pt
es
jbe
mov
mov
mov
sbb
mov
jnp
aam
push
adc
xchg
xor
xchg
mov
pop
pop
rorb
add
out
push
sub
lods
pop
xchg
xchg
icebp
jecxz
mov
pop
shrl
or
cmp
mov
sub
loopne
or
test
loopne
add
jmp
mov
clc
rcrl
mov
shlb
xchg
popf
mov
rcll
push
dec
sub
cmpsl
std
clc
sbb
add
in
mov
jo
out
sub
jmp
jecxz
andb
sbb
imul
jne
or
stos
lods
test
fidivl
arpl
scas
lods
inc
lods
push
xchg
or
stc
loopne
mov
push
imul
cmp
in
test
mov
nop
insb
adc
popf
clc
push
pop
mov
cltd
loopne
pop
mov
int
and
pop
cltd
cmc
push
sbb
or
mov
cmpsb
or
pop
sbb
cltd
hlt
mov
adc
xchg
xchg
in
pop
pcmpeqw
adc
ret
and
sarl
idivb
js
dec
mov
adc
add
mov
stos
cmp
pop
int3
sbb
mov
xchg
rcl
push
orl
cltd
andl
out
daa
stos
xchg
dec
pop
int3
or
pop
sub
xchg
sbb
sub
cmc
xchg
dec
stc
hlt
push
or
dec
mov
push
adc
xchg
and
mov
mov
cltd
xor
sti
movsb
sarb
inc
ret
popf
ret
ja
xchg
repz
xchg
ja
push
mov
adcl
enter
inc
cmp
lahf
sub
daa
outsl
fs
aad
fwait
cld
test
or
aaa
shll
test
mov
pop
adc
or
add
xchg
xor
sub
sub
hlt
mov
mov
inc
jle
stc
and
and
push
test
cltd
adc
ds
pop
adc
dec
mov
mov
call
adc
in
lcall
xchg
lea
sub
mov
lret
pusha
xor
dec
lret
dec
xchg
mov
in
iret
cmc
loope
outsl
test
popa
scas
imul
push
xchg
cmp
mov
mov
adc
push
popf
insl
scas
xchg
pop
je
inc
mov
mov
push
subl
loopne
xlat
shlb
aaa
adc
mov
mov
mov
add
das
xchg
xchg
xchg
xchg
aam
mov
adc
mov
imul
pop
mov
repz
es
sub
cmp
add
cmp
or
sub
int
xor
filds
insl
in
mov
ja
test
pusha
testb
aaa
mov
and
cld
and
push
push
mov
add
lcall
mov
push
in
push
in
inc
inc
out
push
gs
or
lahf
out
and
jae
ds
dec
cltd
sub
inc
js
sarb
sahf
mov
sbb
loop
out
cld
cmpsb
xchg
test
and
cs
call
lret
dec
loop
sbb
enter
lret
jae
fidivrs
adc
sbb
daa
push
cmpb
sub
cmp
dec
push
nop
mov
cmp
jne
stc
xchg
fnsave
dec
sbb
sub
cmc
xchg
mov
mov
inc
popf
leave
dec
rcll
gs
aad
mov
or
pushf
mov
dec
scas
rorb
pop
mov
pop
shlb
mov
mov
adc
cmp
sbb
lret
stos
adcl
mov
daa
andb
dec
das
mov
push
sti
dec
in
stos
jbe
lds
hlt
inc
into
pop
and
or
dec
in
and
cmpsb
fwait
pop
pop
mov
out
sub
out
out
mov
sbb
js
je
lahf
sub
fwait
jecxz
push
cmpsb
fdivrs
movsb
mov
lods
fiaddl
push
cs
fdivs
data16
xchg
std
add
mov
aam
pop
mov
pushf
pop
push
cmc
push
loopne
sbb
loope
inc
insl
mov
or
sahf
rolb
xor
loop
rcrl
ss
int3
ret
push
xor
mov
xor
push
test
mov
gs
pmuludq
in
xchg
pop
shl
jmp
popf
pop
int
jmp
sbb
cmpsb
pop
leave
xabort
sbb
xchg
lods
pop
out
ret
mov
ds
pop
and
sbb
ffree
int
mov
push
fs
mov
clc
xchg
or
sbb
dec
mov
push
push
movsb
or
and
popa
into
subl
icebp
cmp
shrl
sub
inc
lods
cmp
test
xchg
shl
jo
stos
mov
testl
mov
push
das
and
imul
test
inc
mov
in
inc
sti
arpl
mov
icebp
ds
push
xchg
stc
adc
loope
sbb
imul
arpl
sbb
ja
mov
cmpb
sarl
sbb
inc
dec
out
iret
pop
aam
cwtl
inc
jbe
and
jge
cli
lods
jmp
add
sahf
loop
push
mov
shlb
mov
sahf
add
ds
push
jnp
repnz
fmul
xchg
add
pop
arpl
or
or
shll
decb
int3
sub
das
lret
inc
lock
ss
mov
and
inc
pop
ds
pop
dec
jb
xchg
jmp
fcoml
inc
subl
rcr
fnstenv
out
push
dec
int
sub
dec
data16
mov
out
addb
mov
xor
and
je
lahf
cmc
or
cmp
mov
cmp
and
dec
fsubl
ja
loope
aas
leave
icebp
mov
movl
xchg
rol
call
dec
mov
mov
es
sbb
rorb
and
jbe
fcoml
mov
fnsave
fistpl
xchg
cli
rorb
add
add
ss
adc
mov
push
xchg
call
lret
mov
lods
xchg
popa
push
fdivrl
daa
into
mov
popf
fsubrl
dec
pop
mov
into
pusha
jecxz
mov
fdivrl
repz
arpl
lahf
xlat
fwait
pop
iret
js
add
dec
sti
outsb
les
mov
or
sbb
dec
insl
les
jne
cmpl
lret
and
add
jb
jmp
xlat
sub
addr16
cwtl
je
dec
jno
in
push
test
cmp
lods
jl
fs
add
imul
fisubl
xchg
jge
fmuls
and
push
push
and
add
cmc
dec
pushf
aam
lock
fisubs
testb
mov
mov
inc
call
pop
push
inc
hlt
sbb
mov
int3
out
insb
dec
lock
arpl
cltd
sbb
or
in
hlt
cmp
add
sub
cmp
cmpsb
test
inc
mov
loop
inc
fisubrs
outsl
int3
iret
xchg
jl
push
shrb
mov
in
test
inc
popf
push
ret
mov
lahf
jge
ror
mov
mov
sti
mov
addr16
adc
dec
aad
int
gs
out
enter
xchg
cmp
mov
scas
out
cmpsb
jle
dec
sub
jae
xor
fdivs
inc
divl
lahf
inc
icebp
mov
movups
add
and
mov
or
adc
mov
pop
jo
ljmp
push
shl
add
cli
pushw
imul
sbb
outsb
jb
popa
pop
ficoml
iret
ret
xchg
cli
idivb
loopne
xor
dec
out
mov
sub
mov
sub
mov
xorl
dec
mov
xchg
jmp
xlat
jnp
or
mov
jl
push
push
push
in
mov
pop
mov
fdivrp
xchg
cmp
and
out
sahf
pop
test
jns
mov
inc
ds
addb
mov
icebp
popa
test
cltd
stc
lods
pop
addr16
xchg
jle
fcoms
xchg
push
sbb
add
mov
inc
mov
test
mov
es
loop
dec
repnz
fldpi
push
ror
arpl
outsl
mov
loope
movl
adcb
repz
sbb
cmc
daa
add
into
or
jl
push
pop
jb
push
mov
push
out
push
loope
cmp
ret
fwait
ja
icebp
movd
xor
cmpsl
adc
push
sbb
subb
into
fnstenv
cmc
movsl
mov
dec
lcall
nop
scas
outsb
pop
outsb
fsubrl
fdivrl
fcmovnb
test
pop
out
sub
and
sbb
daa
jmp
leave
mov
xor
add
xor
mov
stc
dec
push
int3
lahf
jnp
push
out
enter
out
movsb
cmc
mov
xchg
std
mov
push
daa
pop
jp
data16
jmp
or
ljmp
lock
movsb
shll
lcall
idivb
mov
gs
lds
andl
repz
dec
in
and
mov
inc
xchg
lret
add
mov
fwait
test
xor
push
jge
loop
hlt
xor
or
add
sahf
jno
xchg
pop
fdiv
sub
outsl
jp
lret
dec
scas
add
jl
cld
inc
xchg
sbb
mov
pop
std
xchg
lret
nop
negl
ljmp
mov
and
xor
ret
sub
ret
mov
push
in
inc
adc
jl
push
lcall
inc
xchg
cmc
push
fstl
or
mov
lods
push
mov
push
lds
xor
testl
mov
pop
push
dec
and
outsl
add
fiadds
mov
xor
cmpsb
cs
xor
fstps
stos
sub
fnsave
mov
enter
popf
dec
lea
scas
mov
ret
scas
pop
push
mov
jecxz
mov
rorb
inc
ja
and
bound
xor
xchg
xor
adc
fldl
pusha
mov
inc
std
dec
push
daa
push
or
jmp
dec
imul
push
pushf
hlt
mov
pop
int
test
movsl
jge
loop
add
leave
push
arpl
adc
xchg
adc
out
int
sub
jo
dec
adc
push
xor
mov
repnz
int3
subb
inc
or
stos
sbb
popf
xor
mov
xchg
mov
fldl
or
test
inc
xchg
inc
cmc
fdivr
sbb
jnp
xchg
leave
dec
add
xor
fistpl
cmc
jbe
pop
dec
ficoms
pop
sbb
jne
sbb
mov
mov
out
dec
shrl
push
pusha
pushf
mov
adc
mov
rcll
mov
pop
pop
je
adc
sti
sbb
mov
cs
push
xor
xchg
add
lret
add
bound
inc
nop
and
rcrl
push
lods
frstor
jl
rcrl
lods
mov
sbb
xor
shll
mov
cmpsb
mov
fcoml
cs
pushf
lret
hlt
mov
add
scas
clc
cmp
cmpsl
cmpsb
aas
movsl
inc
mov
sub
movsb
xlat
push
xchg
cmpsl
or
xor
sbb
adc
push
roll
cmc
jnp
sub
fcmovnu
sub
popa
jnp
push
add
daa
sbb
dec
outsb
cmpsl
sbbb
adc
xlat
sbbl
push
inc
mov
cmp
mov
sbb
nop
dec
mov
or
sbb
jge
jg
xchg
cmpsl
dec
pop
inc
mov
mov
jp
pop
sbbb
mov
aad
stos
js
inc
inc
xlat
cmp
mov
pop
jmp
loop
push
xor
or
in
lock
cwtl
in
jp
mov
shrl
aas
mov
cmp
inc
dec
bound
movsl
or
dec
iret
in
adc
xchg
or
lea
insl
pop
lods
push
cwtl
cmovne
adc
sub
ret
jmp
int3
dec
ficoms
inc
movsb
fnstcw
xor
adc
out
sbb
cmpsb
or
or
push
out
stc
jg
fidivrl
dec
inc
test
ds
in
mov
pop
je
out
xor
xor
sbb
mov
bound
cltd
inc
ja
cmp
and
test
movsb
es
mov
leave
mov
fisttpl
pop
jne
out
sub
xchg
js
mov
push
sti
mov
xchg
rcll
pop
push
shl
pop
and
mov
and
xchg
jp
bnd
mov
sbb
loope
cltd
lahf
xor
aas
jns
ja
jne
adc
and
mov
rcll
inc
leave
scas
and
fcoms
push
dec
lea
cmp
mov
data16
mov
in
rclb
sub
mov
sbb
or
inc
mov
push
ljmp
outsl
ss
imul
add
pop
add
imull
outsl
pop
fisubl
ja
dec
or
scas
in
add
push
xor
dec
xor
test
or
test
ds
call
std
incb
mov
xor
lcall
xlat
push
clc
dec
faddl
ret
lcall
pop
lahf
xor
mov
data16
jnp
sahf
jge
jb
lcall
push
or
sbb
repnz
je
mov
xchg
jne
cmp
xor
push
les
dec
cmpsl
sbb
popf
pop
xor
dec
jl
or
mov
xor
push
push
mov
pushf
xchg
mov
sub
insb
mov
aam
fimuls
adc
stos
sahf
sbb
mov
aad
call
sar
xor
mov
adc
jl
push
pop
nop
fwait
loopne
mov
jns
push
dec
arpl
sbb
je
jg
push
cld
xchg
mov
sub
jno
pop
inc
dec
jns
xor
shll
hlt
pusha
xor
sub
decl
shrb
rolb
es
insl
and
test
jl
mov
jnp
push
repz
ja
imull
mov
cs
cwtl
mov
cmp
and
fwait
das
dec
cltd
arpl
or
iret
imul
dec
test
dec
dec
mov
or
jl
ficoms
cmp
call
fs
xlat
mov
sarb
loope
inc
in
loop
add
outsb
ds
jmp
mov
icebp
shl
jmp
jmp
fs
lcall
jbe
inc
pushf
push
loopne
mov
jae
sub
outsb
sbb
push
scas
adc
or
scas
mov
sub
imul
mov
push
push
ret
shlb
outsl
adc
pop
mov
jnp
lock
dec
cmc
and
xchg
push
xchg
iret
dec
popa
shlb
xor
jmp
scas
daa
mov
cmp
mov
push
add
sbb
inc
mov
pushf
insb
mov
and
xchg
dec
les
lock
inc
test
jmp
je
jl
add
and
das
and
testl
popa
repz
nop
pop
jo
mov
hlt
and
sbb
push
xor
jge
out
push
dec
sub
loop
push
or
dec
sahf
in
sub
pop
and
jbe
les
mov
cld
divb
lret
jl
mov
xlat
mov
adc
adc
and
sub
sub
aad
inc
and
in
dec
int
jnp
or
dec
mov
inc
outsb
hlt
in
idivb
pop
fidivrl
inc
mov
test
in
mov
clc
push
inc
jge
mov
sbb
pop
loop
add
sub
je
loop
push
xchg
js
not
movsl
int
stc
clc
sbb
iret
jno
push
xchg
loope
cmp
andl
and
lret
jno
push
cmp
jnp
pop
mov
shlb
mov
mov
outsb
and
jbe
mov
movsl
jno
push
xchg
sbb
pop
lret
sbb
movsb
and
mov
aas
insl
pusha
iret
popf
xchg
pop
addb
push
jmp
add
pop
adc
and
data16
push
stc
mov
xchg
loop
pop
out
mov
clc
lcall
xchg
push
cmp
dec
jns
xchg
pop
and
ret
xor
add
ja
bound
ret
cli
in
push
sbb
std
rep
mov
jnp
push
inc
in
mov
les
pop
cmp
outsl
adcb
ja
sbb
push
mov
sahf
adc
xchg
std
out
or
push
push
cmp
lret
ljmp
inc
gs
mov
les
xchg
mov
adc
pop
adc
push
lcall
adc
addr16
or
xor
add
or
sbb
mov
sbb
jo
or
mov
pop
divb
push
sti
jp
push
add
test
cltd
jp
arpl
mov
add
in
insb
jmp
mov
fbld
test
xor
add
xor
outsb
call
push
mov
pop
or
shl
test
ficomps
cwtl
cmp
cmp
sti
std
jge
out
mov
xor
mov
jne
pop
mov
cmpsl
icebp
inc
pop
pop
les
in
xchg
aam
rclb
fwait
testl
sub
mov
out
push
push
dec
out
pop
dec
mov
xorl
mov
adc
xor
inc
cmpsb
jno
rcrl
fldt
mov
adc
fidivrl
int3
dec
lea
shl
adc
mov
lret
lock
cmp
xor
ret
xor
fs
out
adc
cmp
xchg
mov
xor
add
cmp
out
fists
repz
shrb
mov
mov
in
popa
dec
dec
xor
lret
and
inc
fsubs
push
inc
shll
push
cmpb
cmpsb
mov
in
mov
dec
xor
mov
mov
and
xor
inc
out
ret
fs
daa
dec
imul
cmpsb
mov
fnstenv
inc
inc
sub
jmp
mov
inc
das
lret
fcomp
inc
cmp
jb
pop
daa
ss
jno
jae
jo
fldcw
into
sahf
sub
cld
xor
sbb
cs
shlb
adc
call
movsb
sbb
js
test
mov
xchg
gs
cmp
orb
loopne
out
xorl
shlb
andl
insl
outsl
and
pop
insb
inc
pop
daa
xorl
xchg
js
xchg
ljmp
mov
aas
lret
mov
ja
dec
mov
adc
xor
inc
pop
imul
pop
or
mov
inc
xor
sti
in
movsb
test
mov
loope
cmp
aad
repz
ret
divb
sti
ss
ja
add
enter
or
int3
sub
add
jp
mov
fs
xchg
stos
cwtl
push
jle
mov
xchg
in
ficompl
faddl
push
push
data16
cmp
iret
dec
lret
iret
dec
jle
sbb
gs
push
or
pop
jno
push
jo
stos
mov
std
sbb
enter
fsubl
mov
adc
or
lds
sub
out
test
dec
cmp
bound
frstor
movsl
leave
pushl
and
aam
cld
lea
ret
addl
enter
jns
mov
repz
and
lods
fnstenv
add
sub
adc
in
roll
add
mov
xchg
lods
mov
mov
clc
fwait
out
shlb
cmp
cs
outsl
xor
inc
outsb
fwait
rolb
add
jge
or
nop
pushf
sbbl
test
addr16
mov
inc
popf
ret
cmp
inc
lds
push
add
out
inc
dec
fbld
bound
clc
sbb
loop
sbb
xor
clc
stos
scas
out
je
out
enter
repnz
jno
mov
jnp
xor
mov
push
add
fcmovbe
into
adc
cmp
les
gs
pop
push
loopne
pop
jmp
movsb
inc
mov
xchg
ja
xchg
mov
mov
inc
pushf
daa
add
pop
dec
mov
xorl
call
popf
std
in
je
lahf
adc
ffree
mov
push
in
adc
inc
jg
mov
xchg
addr16
xor
shr
lahf
adc
ss
xchg
jle
fmul
sbb
cld
mov
adc
adc
repz
or
scas
daa
xor
jmp
jb
jns
xchg
ret
mov
sub
and
inc
lds
cltd
out
lea
push
jno
xchg
inc
lods
and
sub
add
mov
test
lret
jno
ficompl
jo
loop
jo
push
stos
das
jo
jl
xchg
dec
sub
xor
jecxz
add
fsubp
hlt
cltd
lods
adc
mov
adc
cmp
out
rcl
sub
sbb
fdivrp
mov
inc
in
mov
xchg
popf
hlt
lods
mov
fs
push
inc
insb
fisubrl
pushf
sbb
push
ret
popa
mov
xchg
imul
sub
sub
add
aam
mov
ret
push
lahf
sub
repz
ret
pushf
add
lods
outsb
xor
xor
xchg
nop
dec
idivb
jae
nop
mov
inc
aas
sub
sub
sti
ljmp
in
mov
adc
in
es
insl
mov
jnp
out
dec
lock
mov
sub
inc
cltd
call
jmp
es
xor
and
xlat
xor
jno
ljmp
sti
std
push
inc
out
mov
fstp
and
pop
shl
lret
stos
jbe
shll
jl
mov
dec
jl
pop
ret
inc
mov
mov
aaa
test
or
adcl
dec
icebp
dec
jge
push
rclb
xchg
sbb
call
aam
mov
xchg
mov
mov
lock
sbb
and
in
dec
dec
call
dec
mov
mov
out
add
ds
out
out
pop
inc
adc
mov
les
fcom
mov
and
cmpsb
sbb
xchg
and
pop
mov
ds
aam
std
cld
sbb
lret
inc
mov
pop
sbb
fstl
adc
das
fcomi
dec
xorl
xor
xorl
xchg
inc
mov
adc
and
arpl
outsb
add
add
lcall
jmp
cmpsb
push
aam
jb
push
les
xor
sbb
or
add
orb
frstor
add
sahf
into
add
mov
orl
xchg
mov
gs
mov
push
xchg
dec
cmp
popf
jg
jno
push
mov
xchg
sti
popa
add
sub
jae
in
xchg
daa
push
push
push
dec
adc
xor
shll
push
jmp
stc
popa
sbb
aas
mov
sarb
jge
mov
ljmp
enter
xor
adc
xor
add
jns
stos
jb
xor
cli
enter
push
sub
dec
nop
xchg
pop
pushf
test
and
subb
dec
pop
lock
pop
out
gs
inc
inc
sub
xchg
jb
dec
and
add
std
pop
add
movsl
sbb
xchg
addb
push
add
movsb
lds
push
lahf
jle
add
leave
push
js
dec
add
inc
out
cltd
sub
inc
xlat
dec
popa
jae
movb
fiaddl
jbe
jnp
call
sub
cmc
test
out
aaa
testl
ds
and
adc
cmp
sub
ja
test
sbb
inc
sub
leave
pop
add
mov
pop
xor
ficomps
dec
dec
dec
pop
lds
sub
and
jp
mov
mov
pop
out
out
fmull
mov
lds
les
or
dec
pop
pop
aas
jmp
xchg
fstps
lock
into
ds
shr
rolb
xor
jno
fisubrl
pop
sbb
inc
sbb
bsr
cmp
fiadds
sub
adc
adc
xchg
sub
mov
stos
jle
fcomp
cmp
push
sub
dec
mov
xchg
inc
out
insb
and
addr16
scas
stos
hlt
xor
mov
js
xor
mov
andl
cmpsl
push
js
cli
mov
insl
loop
mov
insb
cs
lcall
insb
fwait
loope
rcrl
mov
push
mov
jl
xor
sub
mov
mull
ljmp
jne
insl
lea
shl
add
in
dec
mov
es
out
shr
outsb
fldt
dec
adc
shll
cmpsl
shlb
lret
mov
adc
jb
ret
mov
shll
sbb
mov
lcall
push
cmpsl
mov
pop
xor
jmp
cmpsb
addr16
mov
inc
and
jl
out
repnz
incb
inc
divl
jae
je
mov
xadd
mov
mov
xchg
xchg
add
clc
jmp
cmpsl
mov
leave
dec
mov
cltd
mov
dec
mov
and
add
sbb
sbb
push
xor
arpl
xchg
je
dec
jl
cmp
imul
mov
sub
sti
popl
mov
inc
divl
xchg
cmp
data16
and
lods
test
je
ficompl
and
sahf
mov
cmp
je
jb
lds
mov
or
aad
inc
dec
and
inc
and
lds
sub
inc
fdivs
mov
jge
sub
icebp
test
popa
pop
or
arpl
int
sbb
sub
cmp
testl
outsl
pop
pop
mov
nop
mov
out
fdivl
cmpsl
gs
xchg
cmp
cmc
loop
xchg
sbb
in
mov
jg
adc
repnz
cmpb
xchg
inc
notl
dec
sub
dec
xorb
std
mov
les
xlat
push
sub
push
mov
ja
pushf
xchg
repz
sbb
in
cmp
inc
in
or
sbb
and
xchg
arpl
ss
leave
sbb
mov
loop
in
aad
cmp
cmpl
jge
fisttps
cs
jmp
sub
lock
outsl
test
dec
or
mov
icebp
out
movsl
add
aad
rcrl
shl
pushf
shrl
xor
scas
mov
iret
cmpsb
push
sub
adcb
mov
sbb
in
cmp
pop
dec
fisubrl
movsl
sub
data16
push
mov
aad
mov
pop
add
jmp
fs
cmp
aam
adc
mov
imul
sub
sbb
pop
xor
inc
fidivrs
xchg
xchg
lcall
or
sahf
in
dec
xchg
aam
jo
inc
push
imul
test
jle
xlat
or
inc
inc
add
aad
cmp
push
cli
push
and
xchg
out
cmpsb
jp
cmp
adc
add
in
outsb
aaa
adc
fcmove
jae
adc
inc
movsb
mov
insl
inc
addr16
adc
es
push
mov
gs
je
sbb
pop
inc
inc
mov
sub
jle
dec
inc
and
sub
pop
addr16
jecxz
and
loopne
imul
or
xor
and
call
cmp
hlt
insb
pcmpeqw
out
xorl
or
dec
insb
mov
push
pop
or
hlt
and
dec
shl
daa
jb
sarb
fs
jns
jecxz
cmc
hlt
adc
cli
dec
pop
mov
pop
jo
mov
scas
out
xor
push
test
inc
ja
call
push
stos
loop
mov
movl
addr16
out
or
stos
ljmp
icebp
loopne
out
adc
inc
push
jl
or
adc
mov
aad
jge
xor
nop
mov
sbbl
in
push
mov
jge
je,pt
bound
shll
movsb
xorl
in
jle
aam
pop
pop
pop
test
andb
call
sti
push
cld
ja
add
jbe
xor
clc
pop
xlat
or
inc
jp
cmpsb
mov
ret
pop
mov
jbe
sbb
inc
or
rcrb
ret
jns
ret
mov
xchg
cld
xor
mov
in
or
sbb
arpl
xor
add
hlt
push
dec
xchg
movsb
lcall
lahf
test
inc
xor
lcall
jne
inc
sti
imul
mov
loope
shlb
aad
sbb
ss
inc
add
jno
dec
jns
cmpsb
rclb
jb
movsl
mov
lods
in
jmp
hlt
push
mov
test
pop
fistpll
das
inc
and
dec
jle
inc
xorl
lret
and
add
and
dec
push
call
lahf
hlt
adc
ds
jecxz
test
xor
sub
xchg
imul
mov
cmc
push
cmp
jecxz
mov
sbbl
loop
push
loopne
sbb
test
mov
and
ja
add
sub
leave
lods
out
fadds
aaa
popf
sub
mov
lods
mov
jp
mov
pop
and
cwtl
sub
clc
jbe
jmp
cmpsl
push
orl
mov
nop
test
test
add
mulb
push
int3
adc
and
dec
ret
scas
inc
push
roll
hlt
jne
sti
or
scas
dec
cmp
xor
lahf
sbb
cmp
mov
mov
pop
sub
sub
out
popa
pop
fdivp
aas
scas
pushf
je
or
inc
sub
lret
or
popf
jbe
mov
pop
mov
lcall
sbb
xchg
inc
lret
test
in
xchg
clc
mov
faddp
jg
in
imul
int
insl
jbe
inc
and
mov
dec
xchg
and
inc
or
popf
cwtl
gs
adc
pop
fimuls
scas
cmpsl
xor
mov
scas
aas
aad
out
cmpsl
gs
add
ss
cmpsb
and
cs
sub
pop
cmpsb
mov
mov
clc
aas
pushf
or
dec
inc
push
dec
jle
pop
inc
les
adc
push
pop
pop
sbb
pop
adc
and
inc
jmp
inc
jmp
adc
cmp
and
push
repz
andb
stos
inc
and
test
pop
cs
test
pop
sbb
and
test
mov
jne
xlat
xor
in
inc
inc
arpl
push
hlt
push
push
sbb
jmp
jo
add
and
les
sarb
and
sub
cmp
movsl
pushf
imul
bound
je
std
leave
lahf
imulb
add
pop
jle
or
sub
das
push
test
negb
call
mov
sbb
mov
loopne
popa
sbb
je
in
cwtl
icebp
push
mov
out
ja
push
les
mov
fstl
clc
add
mov
lock
jae
xor
mov
adc
inc
dec
mov
sub
insb
inc
out
daa
sbb
mov
hlt
and
pop
ja
pushf
jnp
gs
lds
xor
push
push
and
pop
cmpl
shrb
mov
add
sbb
and
mov
cmp
mov
idivb
iret
fildll
hlt
mov
pop
adc
jle
jl
ret
lret
pop
icebp
xchg
jge
push
pop
add
popf
loop
repnz
imul
adc
jno
pushf
enter
dec
leave
pop
dec
movsl
mov
dec
insl
pop
divb
int3
ret
mov
fcmovnbe
jecxz
pop
mov
in
and
mov
push
outsl
cmpsb
xor
mov
xchg
out
mov
test
scas
jbe
mov
push
iret
push
or
sub
cmp
jecxz
ljmp
push
xchg
mov
xchg
xorb
lcall
sbbb
cltd
scas
xchg
test
stc
inc
xchg
imul
std
addl
mov
pop
mov
fldcw
filds
cmp
pop
fnstsw
cmpsb
or
inc
add
int3
outsl
in
sti
jg
das
jne
test
sbb
cmc
scas
inc
popf
push
lods
outsb
imul
iret
pop
push
jg
loop
xlat
fists
iret
arpl
bound
sti
outsl
mov
pop
sbb
outsl
rcrb
mov
jmp
nop
xchg
xchg
xor
insl
cmc
mov
addl
ret
lret
insl
mov
mov
cs
lahf
xor
gs
into
inc
hlt
stc
mov
pop
insb
jp
mov
insb
movsl
popf
xor
movsb
dec
dec
clc
jl
pop
std
dec
fcmovnbe
roll
loopne
fnstsw
dec
dec
sbb
les
mov
movsl
jb
jne
imul
cld
in
mov
cmpsl
aad
cmc
bound
repnz
mov
push
jbe
jg
sarb
nop
sbb
jne
pop
mov
cwtl
xchg
ja
flds
cli
fcmove
int
daa
mov
rcrb
test
subb
or
cli
imul
sarb
testb
cmpsb
xchg
pusha
leave
and
lods
mov
out
cmp
insl
fmuls
pop
fistpll
inc
cmc
sub
push
pusha
inc
out
inc
aam
xor
xor
dec
jl
or
xchg
in
call
scas
and
scas
mov
scas
mov
and
add
incl
add
push
lret
loopne
jae
pushf
or
daa
pop
mov
xchg
push
mov
aaa
into
push
inc
les
sbb
push
jne
pop
hlt
mov
sub
mov
int3
jnp
dec
fimuls
std
fdivl
es
mov
push
mov
dec
cmp
rclb
stos
pop
fxch
hlt
outsb
dec
xor
testl
scas
loop
outsb
scas
jnp
in
xchg
test
or
mov
outsl
rep
inc
mov
jmp
in
ljmp
lcall
or
movb
imul
mov
cmp
clc
in
xorb
out
iret
adc
pop
addl
es
push
xor
pop
mov
push
jnp
addr16
xchg
xchg
call
dec
cmc
in
jg
jle
mov
jecxz
aas
sahf
es
dec
dec
cmp
subb
lds
aad
mov
lock
pop
xchg
popf
fwait
inc
lcall
jle
and
out
sbb
popf
pop
xchg
fs
cmp
ja
adcb
add
es
int
pop
sub
adc
inc
sub
sub
gs
mov
mull
xchg
aad
repnz
dec
lcall
iret
inc
dec
test
jne
daa
rcr
ja
scas
loope
lcall
jmp
add
mov
xchg
adc
add
mov
in
dec
and
loop
ret
jns
xchg
cwtl
xchg
shll
mov
pop
sub
xor
mov
ror
mov
stc
sahf
pop
sub
pop
aaa
test
filds
jae
mov
stos
int3
mov
test
cltd
dec
scas
sahf
imul
ret
call
mov
fisttpll
xor
mov
sub
sub
mov
pop
scas
dec
xor
stos
xchg
pop
subl
out
push
insb
leave
mov
leave
inc
jecxz
out
aas
lret
jge
repz
jecxz
ss
sbbb
pop
cmp
add
scas
cmp
repnz
xchg
xor
divl
or
jb
out
mov
add
jbe
adc
sub
ss
mov
jbe
cmpsl
fwait
mov
cmpb
out
xchg
loop
ret
push
jbe
mov
into
mov
out
push
lock
add
movsl
mov
out
jecxz
dec
pop
jp
push
mov
subb
push
popa
mov
xor
je
or
stos
mov
mov
movsb
test
sub
nop
decl
divl
mov
pusha
xor
stc
adc
sbb
xor
jbe
mov
xchg
lret
fdivrs
add
jg
push
dec
jnp
pop
mov
sub
add
jns
scas
in
mov
jmp
push
adc
jmp
cmpl
xor
hlt
inc
jne
mov
cs
gs
arpl
bnd
pop
loop
xchg
int
dec
test
pop
xorps
mov
jl
mov
lods
jl
sub
xor
push
iret
pop
arpl
xchg
add
push
mov
sarl
es
insl
lods
loop
lahf
or
movsb
push
popa
and
or
mov
movsl
pushf
jbe
roll
adc
and
adc
fstpt
test
mov
sbb
mov
sub
sbb
mov
pushf
test
daa
pusha
ja
les
hlt
and
leave
fcoms
lahf
ljmp
cmp
arpl
and
pusha
pop
scas
daa
and
jmp
push
adc
or
cmpb
push
or
out
xchg
testl
push
fnsave
sub
cmc
push
mov
fwait
hlt
and
cmpsb
jne
adc
and
std
ljmp
jg
sbb
xchg
cmp
mov
scas
inc
xorl
push
orl
movsb
pusha
test
leave
push
or
icebp
add
mov
arpl
pop
jne
xchg
or
sbb
mov
gs
icebp
cmp
pusha
sbb
pop
mov
push
cli
out
pop
mov
jmp
scas
imul
dec
xchg
daa
mov
jge
xchg
out
push
mov
or
mov
cld
jbe
test
sub
stc
cli
btl
xchg
pop
and
test
xchg
adc
sbb
fdiv
push
bound
cmp
cmp
ss
stos
in
add
xor
sti
xor
fiaddl
ret
adc
int3
add
and
call
ret
lahf
mov
push
loop
jge
fsubl
icebp
stos
jmp
loope
cmc
xor
imul
ja
xor
mov
adc
adc
push
dec
adc
lds
fisubl
daa
outsb
xchg
es
adc
sub
mov
push
stc
cld
shll
mov
push
add
js
loop
or
fists
inc
jp
repz
fidivl
adc
ret
sub
xchg
mov
bound
cmc
mov
mov
fsts
inc
mov
scas
inc
insl
mov
sahf
out
std
mov
and
mov
mov
cmp
in
test
adc
push
inc
adc
add
pop
adc
test
sbb
dec
aad
stos
lret
mov
sarl
xchg
mov
pop
ret
xor
bound
sti
into
cmc
insl
cmpb
loope
lcall
adc
cmp
inc
cmp
outsb
scas
je
mov
xlat
mov
inc
sbb
ret
test
fcmovb
pop
in
jle
push
fimuls
mov
insl
lods
sub
xor
movsb
aad
andl
ss
or
in
aam
mov
inc
jae
sti
es
sti
ljmp
inc
fsubrs
adc
inc
push
ffreep
fisttpl
cmp
xchg
aad
stos
add
test
subl
lcall
aaa
dec
mov
dec
dec
push
adcb
stos
mov
mov
adc
mov
dec
xchg
jp
sub
test
mov
xchg
jnp
es
addr16
imul
test
xchg
adc
shrb
jmp
add
sarb
or
mov
loop
das
adc
sbb
fisubrs
push
mov
mov
mov
inc
push
lock
fadds
int
ss
ljmp
pusha
push
fsubs
mov
and
add
movsl
js
jns
sub
inc
pusha
pop
stc
pop
cmpsb
jbe
pop
pop
sbb
mov
mov
xchg
out
and
enter
scas
jbe
xchg
pushl
aam
popa
enter
sub
adc
int
jnp
push
push
xchg
pop
inc
scas
mov
push
inc
in
fildl
push
xorb
mov
nop
sub
mov
adc
inc
in
aam
xchg
jmp
push
pop
call
mov
push
mov
xor
loopne
ds
jecxz
cmp
xor
pop
mov
sub
out
xlat
xlat
jb
mul
leave
mov
xchg
sbb
xor
into
mov
nop
ret
push
lret
inc
dec
jg
mov
jno
xlat
inc
sbbb
cld
gs
xor
fwait
mov
jge
mov
loope
adc
pop
das
fwait
or
ret
mov
pop
and
add
repz
outsl
xor
outsb
sbb
push
les
popa
insb
or
daa
pop
movsb
xchg
xor
xor
je
mov
enter
int
xlat
xchg
lahf
daa
lds
and
add
insb
sbb
jbe
movsb
jb
ret
pop
decl
pop
das
cmpsl
decl
add
stc
test
aas
push
jbe
sub
xor
push
sub
bound
in
in
ret
push
xor
jbe
push
mov
add
out
es
cwtl
mov
mov
mov
mov
cmp
mov
pop
xor
add
cltd
jp
cmp
ljmp
out
xchg
pusha
push
push
je
push
lds
lock
jl
adc
cmp
jge
jp
mov
xchg
mov
outsl
shll
and
mov
push
hlt
adc
xchg
and
dec
loope
add
inc
scas
inc
test
mov
jns
cmp
sub
test
repz
mov
popa
test
pop
or
jecxz
mov
dec
pusha
cld
stos
or
sbb
dec
push
in
push
xchg
jg
mov
sbb
fcmovnb
ja
es
imul
fisubrs
in
inc
mov
jp
clc
out
jnp
xlat
mov
enter
and
addr16
sbb
dec
or
add
xchg
jl
testb
in
cwtl
bnd
and
sbb
add
cmp
pushf
xchg
inc
mov
movsl
push
test
jmp
orl
or
push
pop
xchg
icebp
pushf
out
jne
xchg
lea
xor
daa
scas
fwait
add
sbb
test
push
mov
adc
lods
mov
xor
push
int
pop
cmp
and
sub
add
cmp
xchg
and
daa
sti
mov
sub
mov
push
inc
ret
pop
cmc
xor
jle
fnstcw
jge
bound
test
jns
push
xchg
ljmp
clc
ret
xchg
aam
in
sub
add
jmp
add
mov
xlat
clc
mov
or
mulb
inc
inc
test
lds
jmp
jl
fldenv
jnp
aam
lea
sub
lcall
ss
pop
aaa
pop
fsubs
push
shll
cmp
mov
mov
shl
out
fsts
lods
xorl
imul
cld
cwtl
mov
dec
std
jae
or
out
jmp
cmp
cwtl
scas
repz
mov
mov
inc
in
xor
push
lock
dec
pusha
add
sbb
scas
aad
add
lahf
in
dec
xchg
sub
pusha
xor
stos
add
mov
and
aaa
inc
orb
xchg
in
mov
mov
repnz
call
ja
dec
mov
ror
or
mov
les
movsb
ljmp
test
mov
ds
adc
scas
fcoml
xchg
inc
mov
icebp
cmp
adcl
jge
or
pop
leave
movsl
dec
xor
inc
jb
movsb
dec
ss
cmpsl
fcomps
xchg
adc
sub
int
dec
pop
xchg
rcll
sbb
and
pop
jb
lea
leave
pop
xchg
inc
mov
adcb
cmpsl
jo
add
xor
scas
add
or
pop
xor
clc
sbb
jno
bound
lds
and
xor
lock
into
in
lock
sbb
mov
lock
shlb
xor
pushl
scas
mov
push
inc
into
mov
ja
jnp
shrl
sub
lods
scas
sub
outsb
xchg
clc
call
loope
push
fisttpll
xor
lahf
or
test
test
cmpsl
mov
jae
mov
rolb
cmp
push
aaa
mov
xchg
mov
push
xchg
mov
or
ljmp
xchg
sbb
cmp
add
out
mov
in
popf
jno
xchg
insb
xor
pop
in
inc
pop
pop
inc
sub
jne
fwait
jns
ret
jno
sub
pop
scas
pop
imul
sbb
mov
in
or
cwtl
aam
popf
pop
jae
sub
dec
rcrl
dec
dec
data16
or
cmpsb
xchg
xlat
push
push
mov
dec
inc
mov
fwait
jns
xchg
int
push
sbb
xchg
shl
mov
cmp
movsl
pop
mov
testl
jmp
pop
jae
in
enter
and
pop
xchg
xlat
xor
jp
shrb
dec
cwtl
pop
fwait
pop
in
sti
jne
cmpsb
sbb
ljmp
mov
out
or
inc
mov
stos
test
xchg
es
add
pusha
mov
aam
or
icebp
pop
adc
inc
lahf
dec
icebp
mov
cmpsb
mov
jne
cltd
out
dec
xchg
aam
pop
sub
cmpsl
pop
dec
mov
std
cs
inc
das
jno
orl
lret
test
cs
xchg
es
negb
sub
push
jnp
mov
out
sub
inc
add
test
addr16
ja
dec
out
adc
sub
call
adc
xchg
pop
inc
jne
push
xor
cmp
jecxz
std
aaa
add
scas
movsb
mov
pop
out
insb
inc
sbb
inc
idiv
int
sub
lcall
sbb
je
cmp
sti
rorl
dec
or
push
loopne
dec
mov
pop
jb
bound
ret
pop
divl
and
outsl
stc
bound
add
loopne
dec
push
or
ror
fldl
dec
xchg
mov
dec
xlat
mov
int
scas
jge
inc
or
pop
sub
dec
xchg
push
mov
pop
jl
dec
fildll
ss
sub
fstpt
inc
mov
xchg
stc
out
negb
add
outsl
cmp
cmpsl
xor
test
aas
jmp
rcrb
mov
aaa
fadds
pop
mov
outsb
ljmp
add
out
mov
outsl
xor
push
sbb
sub
xchg
scas
mov
add
cwtl
xchg
or
mov
cmp
cmpsl
xchg
adc
out
pop
int
jne
jae
mov
cmp
icebp
push
push
xlat
xor
shlb
repz
xchg
pop
mov
lcall
divl
xchg
jo
cs
mov
ret
fwait
ret
mov
das
sub
jo
mov
jl
pop
ret
dec
sti
std
in
in
subb
jo
clc
std
sub
add
pop
push
inc
fistl
adc
cmp
arpl
lea
ds
xchg
daa
add
mov
push
sub
mov
mov
rcrb
daa
add
mov
scas
insb
rorl
xchg
push
sti
int3
popa
imul
stc
cmp
sbb
dec
ret
xchg
out
push
and
ss
cmp
out
pop
test
scas
mov
out
jne
into
sarl
mov
mov
pop
ds
in
or
int3
es
int3
out
pop
jle
sub
mov
xor
mov
popa
imul
daa
aaa
fcomps
out
jo
nop
loop
mov
add
xchg
loopne
dec
mov
pop
push
std
adc
fwait
jecxz
add
xchg
fistps
push
xor
lahf
das
cmpsb
mov
aaa
fwait
adc
adc
scas
lret
pop
adc
lea
inc
push
push
mov
xchg
inc
cmp
addr16
push
cmc
pushf
cmp
jnp
mov
or
mov
mov
push
and
xchg
loope
jns
adc
inc
mov
push
out
sbb
nop
fidivrl
dec
mov
fwait
xchg
loop
hlt
push
leave
mov
rcrb
addr16
mov
push
mov
cwtl
jb
xchg
das
xchg
inc
cmp
push
pop
push
mov
jmp
push
mov
js
pusha
and
stos
add
lret
pop
push
mov
push
jne
fucom
stos
mov
jae
inc
ljmp
insl
sbb
lods
jl
cmpsl
popa
sub
int3
popf
fidivrs
lds
xchg
inc
xor
push
scas
les
jl
outsb
jae
fcomi
xlat
or
dec
insl
pop
mov
cmp
adc
out
push
adc
mov
push
enter
mov
dec
in
inc
nop
lds
cmc
sub
xor
shrl
addr16
cld
dec
push
pmuludq
rcr
pop
and
jge
shlb
pop
jge
in
dec
dec
test
push
lods
orl
stos
adc
pop
sbb
popf
and
push
push
pop
pop
fwait
rolb
andb
mov
push
ja
dec
pop
cmp
mov
cld
scas
and
xor
lret
ja
and
or
inc
push
stos
mov
or
pop
cli
data16
xor
adc
sub
jae
add
and
incl
or
and
cwtl
leave
jmp
dec
add
aam
outsb
pop
dec
inc
pushf
mov
xchg
adc
sti
adc
mov
enter
popa
negl
test
nop
scas
add
xchg
push
lcall
lock
mov
mov
xchg
cltd
fisubs
mov
adc
jl
add
cld
enter
push
jecxz
xor
inc
sub
inc
loopne
repz
mov
in
je
mov
push
std
dec
jmp
sbb
js
pop
leave
ljmp
mov
mov
ret
jp
or
dec
xchg
cwtl
int3
aaa
daa
push
jecxz
pop
adcb
lret
mov
cmpsl
int
jecxz
or
int
scas
cmc
ror
inc
movsl
sub
popf
outsb
in
fldenv
mov
out
jbe
jg
rorb
dec
popa
mov
jns
pushf
mov
ret
jg
imul
pop
and
les
sbb
cmpsl
pop
cli
leave
test
loop
mov
inc
mov
or
outsl
ss
fstps
push
lret
inc
in
clc
dec
sub
test
adc
aad
cmp
and
out
fnstcw
pop
xorl
xor
xor
mov
in
mov
mov
xor
add
cmp
and
int
fistpl
lds
std
pop
cli
mov
mov
or
jbe
and
pop
or
ret
stc
jmp
and
mov
jb
xchg
rolb
jno
lret
pop
repz
test
push
fcoml
xor
xchg
into
ficomps
push
out
fisttpl
jb
mov
mov
xchg
sbb
mov
lea
jns
pop
in
leave
pop
and
inc
rcrl
dec
sub
sbb
rorl
mov
and
fmull
lret
in
outsb
xlat
test
pop
int3
sub
cmp
and
push
jl
adc
push
and
push
arpl
jge
sub
adc
or
dec
and
cmpsb
mov
push
cmp
mov
addr16
sbb
and
mov
cmp
cmp
insb
pushf
mov
push
xlat
push
jnp
or
and
push
xchg
dec
popa
sar
adc
cli
imul
add
xchg
jb
and
aas
xchg
inc
out
sub
cmpsl
cmp
push
popa
pop
lds
cmp
dec
inc
add
sbb
fistpll
lret
inc
lds
fisttpl
xor
stc
ds
adc
dec
leave
std
pop
cmp
and
fst
mov
leave
dec
lds
stos
cmp
inc
mov
jle
inc
les
mov
jge
inc
cltd
scas
add
lret
add
mov
mov
mov
xor
shlb
cmpsl
add
pop
xchg
push
mov
add
shl
jne
mov
popa
mov
mov
test
xchg
fisttpll
mov
shrb
pop
out
and
push
dec
sub
sbb
dec
test
fnstcw
jb
and
pop
inc
movl
popf
jb
mov
test
sub
aas
adc
outsl
into
add
aas
jb
mov
pop
aas
test
jecxz
in
flds
pop
fwait
mov
sti
xor
mov
xlat
cmpsl
sahf
js
sub
or
add
dec
pop
lcall
sub
and
aas
cmp
mov
rolb
xchg
xor
std
xor
add
adc
jecxz
cmp
cmpsb
aam
cmp
mov
data16
sbb
xlat
sub
push
pop
andl
not
add
sub
add
add
shlb
stos
xchg
shll
pop
pop
call
pop
mov
push
lahf
sbbb
push
lea
cmp
dec
and
imul
mov
xorb
add
xchg
into
lods
lahf
xchg
or
daa
mov
lock
fwait
inc
adc
psllq
divb
jmp
lret
xchg
arpl
lock
mov
xor
xchg
sbb
inc
add
add
stc
mov
jmp
hlt
cmc
imul
adc
xor
aas
dec
mov
cli
inc
xchg
mov
push
cmpsl
stos
xchg
cwtl
lock
xlat
test
fists
jmp
out
outsb
cmp
lahf
pusha
inc
cmp
xor
dec
movsl
inc
mov
and
xchg
jge
lods
cwtl
and
push
call
cmp
sti
fsubrp
decb
xchg
ljmp
in
fcoms
inc
dec
pop
adc
mov
mov
lods
clc
mov
lds
pop
add
adc
fwait
mov
add
or
pcmpeqw
adc
mov
mov
add
scas
je
mov
xchg
ret
pop
inc
dec
dec
jmp
or
sbbb
sub
xchg
popa
cmc
hlt
and
addr16
dec
push
push
les
imul
jbe
xor
imull
shlb
cld
daa
arpl
inc
icebp
dec
cmp
dec
jns
outsb
iret
sti
or
popf
aad
jns
fstps
xchg
xchg
mov
cmpb
aaa
and
adcl
push
mov
xchg
bnd
push
mov
outsb
sahf
pushf
sub
and
mov
or
or
lcall
dec
xor
xchg
mov
dec
shrl
inc
inc
push
int
cmp
rcl
mov
or
push
pop
aam
cld
mov
jl
nop
dec
repz
pop
stos
pop
movsl
repnz
adc
out
cmp
insl
popf
outsl
loope
dec
mov
test
sub
dec
cli
xorl
pushl
push
add
or
sub
mov
push
push
push
pushf
mov
mov
jnp
std
stc
dec
test
mov
sbb
fsubrs
inc
xchg
jmp
fwait
or
cmp
mov
pushf
mov
jmp
out
and
les
push
push
xchg
aam
push
aas
cmp
in
sub
jno
and
rorb
adc
or
pop
int3
jmp
out
mov
lods
cli
insb
or
xchg
sub
and
sbb
in
cld
call
cmpsl
mov
stos
scas
sub
mov
push
mov
addr16
xchg
sarl
dec
iret
mov
cmp
in
out
adc
ljmp
xchg
inc
pop
and
inc
inc
roll
sahf
jmp
sbb
pop
data16
insl
call
jae
mov
add
sub
sbbl
imul
push
les
dec
inc
dec
aam
push
xlat
sub
mov
jo
imul
leave
pop
dec
gs
sbb
dec
popa
out
iret
xchg
pushf
adc
mov
dec
fs
seta
das
xor
or
dec
cmp
xchg
bound
inc
mov
xor
loope
test
enter
das
mov
fcom
cmp
push
cmc
repz
popf
mov
mov
out
mov
adc
iret
mov
xchg
push
jo
fnstsw
xchg
inc
data16
call
mov
inc
lret
jno
ja
xor
call
mov
rclb
jne
inc
sbb
out
mov
xor
adc
cwtl
add
cmpl
iret
xchg
imul
arpl
mov
xchg
sub
fsubs
adc
mov
out
sbb
push
adc
xor
xchg
push
sub
sbb
and
imul
xchg
push
movsl
rcl
ja
shlb
push
call
lds
loopne
jno
repz
or
sub
popa
leave
mov
out
push
lahf
jbe
mov
dec
xchg
inc
pop
mov
push
push
data16
jmp
aam
cltd
in
adc
scas
aad
jbe
icebp
test
fstp
jnp
mov
aam
pop
add
stc
insl
popa
mov
or
sbb
and
ror
addr16
repnz
push
add
jb
mov
mov
xchg
pop
jnp
mov
push
cmp
aas
xchg
xchg
mov
jb
ljmp
cmp
push
rcr
inc
xchg
xlat
mov
adc
repz
punpckhwd
mov
cmp
sbb
sti
xchg
mov
jbe
cvtps2pi
icebp
in
iret
jne
jno
fdiv
xor
mov
dec
imul
sub
jae
push
xrelease
sbb
push
int3
call
xchg
ret
push
gs
cmp
repz
pop
std
push
jne
push
stc
or
push
add
lea
inc
testl
jmp
mov
hlt
dec
cs
pop
mov
sti
arpl
addr16
fidivrs
xchg
aad
nop
loop
xlat
imul
dec
loop
ret
sub
leave
xchg
adc
sub
sub
std
or
ret
out
daa
aas
test
hlt
test
ret
lock
cmpsl
ja
pop
dec
sub
insb
in
lahf
mov
sarb
lahf
inc
pusha
sub
cld
jns
ljmp
pop
or
add
gs
ljmp
adc
sbb
nop
push
mov
int
cmp
cwtl
inc
sub
dec
call
mov
push
insb
adc
xchg
sub
xor
lcall
push
lds
sbb
ds
in
xor
mov
testb
xchg
or
jl
cld
pop
mov
add
out
lahf
xor
sub
push
lahf
jb
xchg
rcrl
xor
cmp
and
jns
jns
jg
je
shlb
rcrl
mov
xchg
lea
lock
dec
orl
movl
sbb
add
lds
fwait
jnp
sbb
add
loop
jle
int
mov
sub
iret
js
inc
iret
pop
dec
sub
repz
adc
cmp
repz
stos
push
dec
in
pop
pop
adc
outsl
mov
adc
push
pop
call
push
fisubs
ret
cmp
or
addl
push
out
stc
and
push
adc
in
sub
inc
xchg
cltd
dec
fmulp
cmp
push
movsl
xchg
and
orb
fiaddl
rorl
add
ljmp
or
and
mov
and
sub
jbe
sbb
stos
popl
mov
or
arpl
outsb
pop
mov
fsubrp
out
xchg
mov
int
fdivl
outsl
test
xchg
push
mov
xchg
inc
aam
getsec
mov
and
sbb
rclb
mov
lds
fcoms
sub
test
cmp
mov
pop
mov
out
jg
stos
xor
push
or
inc
dec
jle
jmp
mov
test
outsb
inc
leave
sub
leave
imul
xchg
repz
and
aad
fwait
xor
iret
fistps
jecxz
sbb
ss
rcll
and
sbb
daa
or
out
jne
dec
mov
ss
or
xor
ja
inc
mov
lock
std
xchg
in
lahf
push
icebp
cmp
cmp
adc
out
xchg
mov
cwtl
mov
and
icebp
stos
aaa
fucomip
pop
outsl
in
pop
jl
nopl
mov
jg
scas
stos
xorb
add
xchg
jmp
jae
cmp
xchg
test
push
pusha
push
push
mov
sbb
mov
cmc
daa
mov
cli
test
pop
lds
test
sarb
jne
lods
sbb
sahf
pop
jp
mov
in
pop
insl
mov
and
imul
rorb
dec
mov
sar
adc
outsl
insb
ljmp
fs
lea
enter
aaa
ret
mov
and
ret
sbb
inc
cwtl
mov
stc
rorb
push
aaa
stos
add
xchg
mov
fnstcw
add
mov
dec
je
push
arpl
popf
dec
sbb
je
out
loope
push
mov
stc
push
ss
xchg
sub
fdivs
loopne
and
pop
pop
insb
sub
mov
and
pop
test
push
js
mov
call
jns
or
and
cmpsl
dec
in
dec
repnz
adc
dec
pop
mov
jecxz
cmpsl
dec
lret
add
insl
movl
inc
push
ror
shl
or
dec
mov
mov
mov
mov
pop
adc
data16
ror
xor
cmp
sbb
out
movnti
add
sbb
aas
mov
andl
cltd
imul
popa
push
xchg
xchg
fisubl
cmp
andl
mov
out
ja
in
stc
xor
es
add
sub
push
dec
fsincos
push
push
xor
cmpsb
mov
add
dec
out
inc
popa
adc
sub
dec
sub
cmp
mov
or
jb
repz
mov
dec
scas
fwait
jbe
dec
in
dec
sahf
cmp
dec
out
out
leave
or
bswap
leave
pop
int3
adc
test
jl
sbb
add
imul
cmc
sub
addl
js
sbb
or
jbe
inc
push
leave
gs
cmp
lods
aas
out
lods
lahf
fwait
int
xchg
loopne
shlb
cmpl
xchg
sub
inc
test
adc
scas
repnz
dec
xchg
cmp
lock
mov
jg
xchg
jno
out
mov
mov
stos
xor
jb
movsb
adc
aam
jecxz
ss
mov
sahf
std
icebp
sbb
mov
lret
mov
rcll
add
xor
dec
and
or
lcall
fs
xchg
jmp
dec
leave
ss
jb
mov
mov
inc
jbe
mov
pop
xchg
std
mov
sbb
adcl
push
enter
rolb
sbb
xlat
pop
das
popl
insl
pop
repz
push
xchg
or
inc
cmpb
push
loopne
push
xor
ljmp
adc
dec
sub
xchg
push
aaa
add
stos
adc
aas
jge
ficomps
cmpsl
xor
cmp
shrb
and
stos
jns
xchg
or
ret
shrb
pop
ret
test
inc
lea
lock
cmp
sti
add
or
cmp
es
movsl
test
imul
cli
popa
jmp
fistpl
lds
ds
or
or
add
insb
test
cmpsb
cli
cld
cmpb
adc
dec
push
cmp
cmpsb
outsl
and
push
cld
les
push
add
dec
sbb
push
push
pop
jge
adc
dec
cmp
repnz
clc
stos
cmpsl
cmp
inc
outsb
les
daa
in
xchg
stc
loopne
pop
inc
or
and
clc
push
inc
push
scas
inc
in
pop
push
mov
cld
inc
xor
cmp
lods
jl
test
mov
adc
shll
js
or
out
lods
fcompl
rorb
jae
aam
jl
mov
add
ja
clc
lret
jge
sarb
cmpsb
mov
mov
pop
inc
cmpsb
jecxz
lods
orb
icebp
add
pop
fidivl
pop
xor
jnp
sub
imul
aaa
lods
push
cmc
lock
rclb
imul
int3
into
movsb
in
mov
in
stc
inc
nop
scas
and
mov
sub
mov
repz
dec
sbb
sub
sar
push
dec
and
or
aaa
cltd
mov
sub
mov
pop
and
pop
aam
out
add
cmp
pushf
dec
int3
repnz
lret
frstor
hlt
or
push
jge
idivl
leave
jne
adc
push
jbe
das
jge
push
or
inc
xchg
popa
je
stc
adc
cmp
cmp
lock
mov
xorl
jne
jle
dec
repz
aas
cmp
cmpsl
dec
push
inc
scas
lods
cmp
popf
jmp
xchg
cwtl
jecxz
xchg
hlt
std
iret
lock
mov
test
cmpsb
or
xor
or
push
sbb
inc
fdivrp
xchg
insl
ss
enter
mov
in
xchg
jmp
mov
mov
xchg
hlt
test
mov
pop
fimuls
daa
mov
jo
hlt
add
rorl
mov
daa
dec
insb
push
pop
mov
jo
test
or
out
pop
cmp
jo
popa
lock
sub
in
and
pop
popf
pop
mov
inc
int3
xchg
cs
es
test
sbb
mov
jno
jns
cmp
addr16
jnp
aas
dec
in
sub
fistps
cmpsl
pmaddwd
add
mov
pop
mov
in
or
sahf
cmp
aaa
out
push
aas
nop
sbb
mov
cmp
std
push
int
shl
adc
jg
into
push
daa
sub
adc
inc
orl
repnz
xor
mov
mov
in
fsubrl
in
into
in
push
das
bswap
outsl
movb
shll
push
sbb
aaa
sub
adc
mov
jo
mov
cmp
mov
jb
mov
mov
in
sbb
xchg
aas
jnp
cmp
in
ja
pop
addr16
scas
pop
push
std
or
arpl
pop
loope
clc
stos
dec
inc
aad
xchg
push
xor
cmp
cmp
dec
lock
imul
lar
add
in
sti
int
add
test
stos
xchg
jae
push
test
lods
stos
mov
or
and
pop
adcl
mov
dec
cld
lods
in
aas
mov
cmp
aad
push
out
xchg
sbb
fstl
cs
jecxz
jge
push
push
iret
cmp
push
add
xor
mov
jmp
cmp
int3
imul
aad
push
arpl
sahf
push
scas
pop
outsl
cmpsb
psubusb
ja
cltd
adc
inc
loope
popf
repnz
pop
xor
mov
dec
mov
mov
cmp
jmp
adc
mov
dec
mov
mov
pop
iret
out
test
insl
jne
pusha
pop
imul
dec
movsb
mov
mov
call
decb
sub
sub
mov
and
and
popa
inc
dec
jp
mov
test
pop
add
inc
jns
in
xchg
ja
ds
push
sbb
pop
lcall
rcrb
ja
mov
push
in
xchg
arpl
cmp
cmc
insl
sbb
pop
inc
jno,pn
shrb
mov
pop
outsb
sbb
jne
push
adc
mov
xor
jg
sbb
push
frstor
pop
xchg
test
add
repz
mov
cld
cmpsb
push
mov
pop
inc
xchg
jne
jo
and
cmp
adc
hlt
jae
push
aas
shlb
and
inc
nop
inc
add
fwait
push
and
xchg
pushf
ret
jp
adc
jecxz
xchg
insl
in
cwtl
mov
jnp
sbb
pop
cmpsl
xchg
loop
in
mov
clc
es
addr16
dec
mov
cld
pop
repnz
adc
sbbb
add
sub
add
lods
pop
and
push
dec
xor
adc
dec
pop
icebp
outsb
cld
dec
cmp
pop
and
push
lea
icebp
pop
xchg
stos
inc
aam
movsl
cltd
mov
jl
out
faddl
imul
shlb
movsb
sbb
mov
dec
inc
pop
cmpsl
cmp
sbb
fsts
cmc
inc
out
and
int3
mov
testl
jge
negb
xchg
fwait
push
dec
leave
inc
push
jp
mov
pop
lret
mov
outsl
pop
sbb
sahf
or
cmp
mov
aaa
mov
leave
idivb
pop
in
or
sbb
icebp
lcall
and
pop
xchg
sbb
iret
ds
add
xor
adc
cli
lahf
out
mov
fsubrp
dec
adc
mov
adc
and
add
jns
lret
inc
mov
inc
popf
lock
push
pop
bnd
es
mov
stos
mov
push
rcll
das
insl
mov
pop
test
mov
test
cmp
lret
rol
push
sbb
ljmp
jo
popf
and
ficoms
movsl
adc
cwtl
jmp
int3
push
fstps
or
inc
and
ja
pop
ss
in
mov
repz
je
addr16
ja
scas
jmp
cltd
cmc
insl
jl
pop
outsb
push
pusha
dec
movl
hlt
jne
xor
fwait
adc
xchg
test
mov
pop
cmp
lods
add
sarl
jnp
dec
sub
jo
push
mov
repnz
shlb
popf
fcmovnb
inc
iret
fsincos
out
mov
sub
inc
sbb
cli
dec
mov
fucomip
imul
push
mov
scas
in
sbb
rorl
sar
cld
das
xchg
shlb
stc
xchg
cmp
or
adc
sbb
mov
cs
jbe
int3
push
sbb
xor
rcrl
xchg
ds
push
ljmp
cmp
cltd
stc
push
pop
fwait
int
mov
es
int
shrl
mov
cmc
dec
cmp
ficoml
xchg
dec
in
iret
and
call
ljmp
push
push
cmp
cs
and
jbe
leave
or
sub
pop
iret
insl
aas
jg
add
pop
push
cli
sbb
cmpsl
adc
test
mov
cmp
mov
ret
mov
sbb
lcall
mov
mov
cmp
fnstcw
cs
fisttpll
pop
aas
clc
lret
fstpl
inc
fistl
cld
sub
icebp
pop
and
sub
mov
es
xor
enter
xchg
outsb
jo
fwait
xchg
xchg
test
es
xchg
inc
inc
mov
hlt
xchg
mov
push
insb
jbe
pop
jecxz
jp
or
inc
cmp
cmp
insb
movsl
sbb
cwtl
push
jbe
adc
pop
mov
add
lock
pop
mov
mov
cmpxchg
inc
add
add
push
xchg
std
xor
pop
mov
lea
lret
add
xor
in
cmpsl
jge
cmp
out
xor
lods
inc
popa
mov
ret
sbb
mov
adcb
inc
jo
bound
xor
in
sti
jns
jp
out
aaa
cmpsb
pop
ficomps
popf
pop
es
cltd
xor
inc
pop
pushf
icebp
and
mov
js
pop
lea
js
and
jae
int
aas
mov
dec
shr
mov
rcrb
outsl
pop
decb
or
leave
fcompl
xor
mov
stos
clc
in
cmpsb
add
mov
and
outsb
mov
mov
loop
hlt
push
xor
add
adc
mov
push
sbb
repnz
cmpb
je
into
mov
out
pop
jmp
mov
sahf
sbb
fidivrs
adc
and
lds
inc
and
dec
stos
inc
sbb
xor
dec
mov
mov
adc
pop
mov
in
xchg
mov
and
jmp
push
in
or
jecxz
cmp
ss
ljmp
xor
fnstenv
cmp
decb
dec
or
leave
pushf
outsl
pop
shrl
shld
mov
lret
lcall
adc
push
push
dec
or
pop
iret
xor
je
dec
pushf
dec
inc
pop
negb
stc
divb
xchg
outsb
ja
dec
insb
pop
sub
cld
std
inc
xor
inc
scas
shl
xor
or
call
shrb
sbb
push
sbb
cs
les
mov
pop
jle
xor
push
fiaddl
sub
or
subl
mov
mov
sarl
dec
mov
jae
jle
push
cmpsb
push
xlat
test
jae
cld
sarl
jnp
daa
cld
inc
jae
nop
push
mov
pop
negb
cmp
cmp
into
mov
inc
xchg
aad
jg
lock
rorl
repnz
test
leave
jp
xchg
jmp
jp
repz
stos
mov
cmp
or
push
sbb
adc
insl
and
push
lahf
lret
call
ret
cs
cmp
mov
or
lods
je
pushf
std
aad
xchg
lret
and
ss
shlb
adc
push
in
mov
push
ljmp
stos
mov
add
jmp
fwait
loop
cmp
lret
shll
out
xor
xchg
xchg
stc
scas
movsb
ret
cmp
mov
in
pusha
lds
rclb
rorl
fsubrs
inc
mov
jg
jl
push
sbb
dec
push
dec
xchg
aam
jb
xor
xchg
dec
inc
lahf
mov
push
roll
not
or
add
shl
mov
mov
xchg
sbb
adc
xor
sbb
sti
movsl
jae
dec
dec
pop
arpl
in
mov
lret
sbb
sub
out
xchg
cmpsb
xlat
adc
dec
cs
push
xor
add
popf
mov
push
sbb
or
jb
lret
sub
inc
js
push
add
ror
test
dec
insl
add
arpl
repnz
cmp
mov
push
add
sti
inc
xchg
cmp
hlt
or
sub
iret
bound
cltd
js
pop
mov
clc
into
into
add
add
cwtl
cltd
popa
cmpsl
repz
mov
lods
neg
out
cli
or
push
sbb
push
fisubs
outsl
es
cltd
rcl
mov
insb
addl
daa
push
out
pushf
ds
jnp
pop
push
jnp
int
push
mov
cld
adc
cmp
int
loopne
fsubrs
aad
pop
popa
mov
add
push
cmp
lock
sbb
movsb
cmpsb
jb
push
and
sbb
and
shr
mov
adc
pop
xor
inc
fildll
dec
and
or
mov
gs
outsb
call
xchg
push
iret
or
lock
ficompl
lods
in
inc
jl
xchg
ljmp
lods
roll
jo
nop
sbb
enter
jns
movsb
mov
sub
mov
jg
popa
jno
sbbl
fbstp
push
xchg
test
cmpl
int
mov
xor
pop
or
hlt
rorl
xchg
adcb
or
adc
and
mov
repz
jecxz
loope
jg
std
jl
outsb
test
add
pop
rcrb
lods
jecxz
jo
cmp
pusha
dec
mov
out
int
mov
jbe
xchg
mov
ljmp
xor
aas
and
cmp
adc
and
dec
xlat
out
mov
xchg
dec
lods
out
shlb
push
xlat
mov
inc
cmpl
loop
leave
loopne
dec
sti
adc
and
jno
outsb
testb
mov
mov
and
pop
push
data16
test
enter
push
imul
jne
cwtl
lcall
pmuludq
fwait
add
mulb
out
fxch
sbb
imul
jbe
js
stos
jl
sbb
addr16
dec
push
daa
popa
leave
add
out
sets
jo
ud0
std
or
and
jae
cs
sbb
shll
and
fs
adc
jl
push
adc
jl
clc
fxch
mov
pop
js
int3
inc
jle
push
in
or
scas
pop
enter
and
add
dec
push
icebp
leave
adc
push
push
leave
push
and
cmp
pop
cmpsl
iret
adc
je
fistl
pop
xchg
pushf
cmp
out
rcll
ljmp
pop
std
ljmp
insl
fistl
pop
sbb
xchg
xor
insl
jle
xchg
or
rorl
cmp
out
xor
ljmp
mov
leave
repnz
mov
cmp
lods
test
test
mov
jne
aas
add
mov
ficomps
cmp
cmp
cmpsb
int3
fucomip
or
or
popa
lock
add
out
icebp
loope
stc
mov
xchg
inc
pop
scas
in
jns
mov
js
and
sbbl
ljmp
loop
clc
push
sub
mov
pop
xchg
mov
jmp
xchg
in
icebp
push
dec
fmuls
jns
ret
roll
inc
mov
push
dec
cmp
dec
fwait
cwtl
xchg
cmpsl
jg
cli
test
cmp
push
aaa
add
mov
xor
repnz
push
xor
in
stos
sbb
arpl
pop
gs
fisubrl
xor
aas
or
and
inc
in
repnz
cmc
leave
lea
test
xor
push
and
pop
stos
rorl
xchg
mov
das
ret
stos
push
inc
icebp
jmp
jge
cld
push
lret
lods
jecxz
jg
or
fcoml
movsl
subb
pushfw
cwtl
push
imull
in
loope
test
in
xor
adc
repnz
pop
testl
les
leave
mov
xchg
sub
jnp
mov
mov
add
adcl
xor
jne
int
call
sub
in
test
cmp
adc
cmpsl
jmp
sub
adc
cmc
adc
test
cwtl
das
jne
pusha
fnsave
shlb
ds
or
sub
add
pusha
pop
xlat
pop
mov
gs
push
ror
stc
adc
mov
adc
push
and
cmovo
movsl
and
out
mov
cmp
mov
outsb
jge
lret
ret
sbb
mov
lock
sbb
fs
fwait
push
mov
call
mov
and
das
sub
add
sub
ficoms
dec
scas
mov
icebp
fiadds
loope
jg
pop
mov
fisubs
ja
imul
bound
in
stos
cld
lods
xchg
sub
enter
push
rcrb
rcrl
repz
jns
aad
repnz
mov
cmp
outsb
out
rcr
adc
xlat
cmp
jle
ret
dec
inc
add
mov
enter
mov
or
mov
and
enter
sub
or
lods
outsl
je
in
stos
scas
and
mov
negb
sub
flds
and
dec
adc
leave
add
adc
loope
das
mov
bound
out
repz
pop
int3
push
jecxz
sbb
sbb
outsl
mov
dec
scas
fildl
sub
popa
jmp
push
add
mov
loopne
out
lds
jbe
mov
lret
pop
mov
mov
mov
dec
jle
ja
imul
test
inc
bound
add
mov
std
imul
pop
inc
aam
je
jmp
loope
jno
dec
pop
dec
push
dec
in
stc
lock
sbb
mov
cld
jbe
lret
mov
test
push
adc
out
push
lea
xchg
pop
rcrb
or
ja
icebp
lods
xchg
xor
fstps
pop
pop
pusha
and
lock
pop
mov
jecxz
xchg
mov
leave
notb
mov
mull
in
mov
sub
mov
jnp
pop
out
lods
cmpsl
inc
adc
inc
es
mov
push
mov
rcrb
push
imul
xor
pushf
icebp
jge
lcall
xor
adc
mov
into
sahf
ret
xor
mov
sub
insb
mov
xor
cs
dec
push
sbb
adc
movl
sub
fiaddl
and
aaa
cmp
or
fdivl
mov
xchg
aad
mov
fwait
in
lahf
imul
cltd
outsb
jmp
adc
stc
movsl
or
cli
or
pop
xchg
jecxz
cmpsb
mov
cmpsb
jae
jecxz
xchg
mov
jecxz
out
xor
push
andl
repz
int3
mov
shrb
repnz
jge
jo
out
dec
push
out
into
xchg
inc
sbb
mov
jmp
ja
fistl
popa
sub
out
add
and
sbb
mov
sub
jae
jb
outsl
sub
jp
xlat
mov
das
mov
jno
sbb
repz
test
pop
out
popf
aad
fnstsw
and
sbb
mov
loopne
fistps
sbb
mov
fstpt
inc
pop
xchg
into
in
mov
cmp
or
push
test
push
and
pop
dec
dec
imul
shll
jne
adc
push
insb
adc
sub
mov
mov
sbb
lcall
inc
xchg
fisubrs
mov
add
jb
fwait
pop
sub
movsl
ficoms
shrl
pop
mov
enter
push
mov
jl
pop
and
mov
cs
dec
enter
lea
pop
aas
sahf
mov
jl
outsl
jo
out
pop
adc
inc
inc
jnp
adc
mov
icebp
mov
aas
xchg
mov
jbe
xchg
sub
adc
ret
dec
cmp
push
imul
lods
insl
sub
in
fistpll
jp
and
ja
mov
call
sbb
js
jmp
outsb
fiaddl
insb
dec
test
stos
jle
aam
mov
pop
jno
pop
adc
loope
mov
jle
and
cmp
scas
ret
cltd
xchg
pop
cs
mov
inc
nop
inc
out
push
bound
pop
dec
xor
sbb
pop
lret
div
push
stos
add
sti
adc
iret
and
inc
ds
sub
pop
jl
jmp
test
lods
xor
cmp
mov
mov
xor
sahf
pop
or
push
scas
jmp
int
lods
pop
dec
push
out
and
dec
push
sti
cmp
jmp
clc
sub
xchg
mov
jecxz
movsb
push
and
pushf
add
popf
add
cmp
jno
js
pop
mov
cmpsl
cmpsb
orl
cmpsl
jg
scas
mov
push
mov
fsub
pop
scas
jge
xchg
jno
int
jo
fwait
mov
ret
push
ret
out
and
lock
inc
pusha
xchg
cltd
pop
sub
xor
add
inc
lahf
add
mov
mov
fs
push
jae
push
cltd
dec
and
sub
pop
pop
mov
insl
pop
and
adc
inc
xchg
daa
mov
adc
sysexit
in
adc
adc
xor
xchg
lds
insb
insl
in
sub
pop
mov
xor
lea
push
dec
pop
mov
cmc
sbb
insl
pop
out
rcl
mov
push
xchg
stos
push
cmp
sub
ja
sbb
fisttps
mov
dec
hlt
xchg
rcll
sbb
cwtl
and
in
mov
imulb
call
jns
cmc
aas
inc
xor
push
sbb
clc
movsl
adc
cmpsl
repnz
call
xor
hlt
lods
popa
mov
out
jnp
test
jmp
push
and
popf
out
aaa
les
cld
fs
lret
in
addr16
xorl
test
test
adc
dec
xor
push
and
js
jp
movsb
sbb
pop
fists
mov
loopne
dec
push
or
adc
mov
int
aam
mov
fimull
jg
sub
xchg
jae
mov
pop
push
mov
inc
jbe
push
inc
mov
push
add
daa
inc
dec
adc
ja
in
mov
je
cmp
lret
fistpll
filds
aad
mov
inc
popf
icebp
add
pop
das
xchg
or
mov
jno
cpuid
add
out
pop
adc
aaa
mov
pop
repz
sbb
andl
dec
ja
mov
imul
sub
sti
dec
mov
ja
xlat
in
fadd
loop
mov
leave
pop
cmp
xor
dec
repnz
mov
or
mov
sti
xor
scas
mov
dec
cld
push
ja
out
adc
xor
pop
lahf
lret
ja
jge
les
js
jecxz
popa
sbb
idivl
addr16
pushf
mov
dec
lds
loopne
fwait
push
xchg
test
mov
dec
jp
jp
mov
and
sbb
arpl
mov
pop
fcomip
ljmp
and
xor
mov
loopne
inc
shll
sbb
icebp
xchg
repz
in
rcr
ficoms
loopw
movsb
imul
and
and
std
decb
mov
xlat
and
mov
dec
sub
subl
pusha
adc
add
xor
outsl
inc
in
mov
lahf
cs
adc
and
dec
subb
fwait
push
mov
pop
xchg
sub
fistpll
inc
jl
fcmovb
xchg
or
jns
jae
std
lret
push
mov
data16
pushf
negl
jl
xchg
stos
mov
fnstenv
xchg
xchg
lret
dec
mov
cs
or
loop
aad
adc
mov
and
lea
add
mov
fidivrl
dec
adc
ljmp
mov
push
sbbb
sub
dec
enter
jl
mov
push
and
pop
sub
inc
mov
movsb
loopne
add
fnstenv
pop
negl
mov
cmpsb
aaa
andl
xchg
sub
icebp
dec
dec
mov
lods
add
fstpt
xorl
mov
cmp
popa
call
daa
inc
test
pusha
mov
in
sub
lods
mov
sub
enter
stc
lock
inc
push
scas
mov
out
std
cmp
mov
cwtl
lcall
sub
loopne
pop
notl
lds
ljmp
lods
into
daa
push
xchg
jb
dec
sub
or
enter
xchg
pop
sarl
mov
fnstsw
mov
sahf
xor
repnz
fsubp
sbb
push
push
imul
loope
cmp
pop
push
pop
sbb
cmp
sbbb
fbstp
push
call
lods
jo
push
movsb
lcall
fbstp
jbe
les
push
jb
jno
xchg
loop
xchg
xchg
fstpl
adc
xor
repnz
lret
sbb
cltd
inc
mov
test
adc
sub
cwtl
outsb
movb
aaa
cmpsb
xor
mov
rcll
xchg
and
adc
gs
adc
sbb
xor
fistpll
adc
aas
sub
mull
pushf
aaa
lds
jp
sbb
daa
cwtl
adc
insb
mov
out
mov
or
mov
in
sbb
dec
pop
imul
mov
xchg
je
dec
ficomps
sbb
xchg
push
jl
mov
addb
jnp
ja
subl
mov
ds
fstpt
and
jp
mov
xchg
outsl
out
cmp
mov
imul
xchg
inc
dec
xor
lahf
cmpsb
push
stos
arpl
mov
inc
inc
inc
push
push
int3
mov
xor
xor
dec
jb
and
sbb
cmp
imul
pushf
or
xchg
packsswb
fld
imulb
add
daa
hlt
mov
pop
xchg
xchg
lret
mov
mov
and
adcb
shrl
arpl
nop
por
sbb
inc
pop
dec
lock
fldenv
or
mov
pop
inc
imul
ret
insb
stc
cld
rcll
xacquire
mov
or
xchg
in
xor
dec
jb
stos
aas
test
mov
int
addl
mov
repz
std
movsl
jne
in
mov
pop
shrl
repnz
xchg
push
movsl
xor
fstpl
aad
mov
repz
mov
xlat
out
or
popl
enter
xor
xor
mov
push
aaa
xor
repnz
and
rcrb
negb
out
mov
mov
cmp
inc
leave
push
repnz
cs
lock
and
addb
mov
outsl
ficompl
lds
cmp
ds
and
mov
pop
or
push
dec
outsl
mov
dec
js
mov
xchg
int3
adc
jl
add
aam
cmp
cwtl
sbb
inc
fwait
daa
movl
fsubrl
cmpsb
roll
popa
or
adc
sub
popa
cmp
xchg
cs
fs
mov
cmp
leave
mov
in
popa
mov
sbb
dec
jne
cld
icebp
shlb
aam
pop
out
or
dec
cwtl
push
or
sti
roll
push
push
mov
add
add
mov
sti
push
xorb
scas
ja
fistpl
pop
loop
pop
mov
fimuls
push
divl
imul
push
pop
mov
and
call
je
test
xor
lcall
mov
mov
xchg
sarb
ret
or
add
inc
mov
js
push
ss
pop
packssdw
sub
mov
jae
imul
mov
xchg
testl
scas
sbb
adc
push
lahf
movsb
fldl
stos
mov
mov
je
popf
fbstp
mov
das
push
push
cmpsl
test
sub
out
mov
pop
lret
movb
mov
sarl
insb
jne
fcomps
leave
mov
fidivrs
fwait
rolb
stos
es
daa
stc
daa
test
jns
shlb
ret
out
cmp
insb
loopne
pop
add
hlt
push
or
mov
or
test
mov
lea
xorb
pusha
sbb
repnz
cmp
mov
in
push
push
jno
mov
jmp
xchg
jle
and
fisttpl
xchg
pop
xchg
jle
daa
inc
dec
std
cmp
in
mov
data16
push
inc
jae
into
fsts
lcall
and
lahf
gs
out
insl
sarl
cmc
add
lods
xlat
add
dec
cmc
pop
xchg
push
rorl
orb
cmp
push
xchg
or
add
repz
mov
lahf
add
push
adc
and
lcall
std
nop
adcb
xchg
test
push
ja
icebp
rcl
ret
push
cmp
call
aam
dec
xorb
rol
pop
xlat
and
cli
sub
shll
test
popl
repnz
jmp
pop
lret
sbb
pusha
xchg
lods
xor
repz
or
clc
dec
lea
test
sbb
rol
mov
xchg
fdivp
lds
movsl
lods
mov
bound
mov
ror
arpl
in
and
push
xor
inc
mov
jnp
sub
cmpsb
xchg
and
pop
lods
clc
adc
sahf
xor
rclb
sub
int
shrl
dec
hlt
push
jg
inc
mov
test
mov
addr16
mov
sbb
pop
rolb
sub
mov
sbb
cltd
arpl
ret
out
add
jge
fidivl
aaa
in
jg
sti
jno
xchg
cwtl
iret
lds
inc
sub
inc
call
add
subl
jbe
loopne
or
scas
xchg
and
cli
mov
mov
aaa
push
pushf
in
sub
into
dec
inc
bound
in
dec
call
inc
call
pop
mov
aam
pushf
add
sub
pop
sub
push
ljmp
xchg
mov
mov
mov
in
popa
test
std
ret
out
push
add
jne
inc
or
or
fs
add
and
enter
xchg
outsl
inc
outsb
and
int3
mov
shlb
sbb
sub
push
mov
stos
sbb
ror
testb
add
stos
scas
adc
and
dec
jmp
jno
xchg
dec
mov
cmp
jne
sub
scas
mov
dec
repz
xlat
fimull
and
rorl
inc
and
dec
int3
shlb
push
daa
add
fwait
sahf
pop
or
push
xor
adc
out
call
loop
pop
cs
fs
popa
das
int
dec
loopne
faddl
add
cmp
pop
clc
adc
stos
or
inc
popa
fs
add
in
fstpl
clc
movsb
pop
sbb
lret
push
push
imul
ret
xchg
arpl
ljmp
sbb
pop
movsb
jmp
lods
jb
xor
mov
push
lret
inc
shlb
cmp
mov
jg
dec
sbb
loopne
xor
stos
xchg
icebp
es
pop
aaa
aas
push
adc
pop
outsb
push
xchg
jl
push
cmp
mov
adc
into
dec
fsubs
or
and
sahf
lret
jmp
shlb
xchg
or
and
jecxz
outsl
cmpsl
adc
and
les
jb
mov
or
fcom
out
cmp
clc
shrl
dec
sbb
lret
mov
push
adc
sub
hlt
enter
and
cmp
jge
add
daa
iret
cli
lock
repz
or
sub
les
jmp
mov
jl
ror
es
lods
pop
clc
xchg
pop
fldz
test
push
pop
lahf
sub
cmp
dec
adc
stc
fnsave
and
cmp
into
pop
or
dec
mov
jecxz
mov
jne
inc
test
mov
sub
imul
adc
stos
mov
xchg
icebp
shll
fdiv
jl
mov
fisttpll
test
shll
orb
adc
jmp
pop
lods
mov
pop
nop
outsl
pushl
and
sub
aaa
cmp
call
aam
xorb
dec
push
outsl
dec
insb
out
insl
mov
push
xor
leave
or
dec
iret
pop
dec
jnp
xchg
mov
inc
inc
cmp
imul
push
popf
jne
aaa
addr16
mov
jnp
shrl
pushf
xor
repz
and
repz
dec
inc
jns
push
xlat
pop
es
xchg
mov
or
push
jb
dec
adc
push
stos
push
or
inc
xor
pop
pop
mov
jecxz
dec
add
inc
je
cwtl
xlat
inc
cmp
lods
aas
mov
cmp
cmp
push
cli
hlt
lods
lods
lea
data16
dec
fistpl
sub
imul
pop
xor
push
or
dec
xchg
out
mov
and
nop
fdivl
pop
xorl
cmp
push
or
aaa
dec
out
sahf
jecxz
sub
mov
imul
into
dec
movsl
inc
sahf
in
fwait
add
gs
pop
pop
push
sub
mov
or
imul
dec
out
cs
inc
pop
das
jp
je
lret
inc
jg
loopne
jo
fwait
test
pop
cli
push
test
sbbb
pop
dec
mov
sub
out
pop
call
lcall
adc
in
sub
pop
fstpl
mov
das
enter
out
fisubrl
sete
mov
jno
cld
mov
ret
push
inc
mov
push
insb
rcl
popf
iret
or
mov
mov
sbb
sahf
imul
fisttps
push
mov
jmp
hlt
jmp
enter
aam
or
mov
dec
adc
jmp
mov
cltd
out
inc
jmp
and
pop
push
arpl
cmp
pop
add
and
pop
pop
out
pushf
or
lock
pop
mov
jno
push
mov
dec
filds
add
je
imul
xchg
in
loope
inc
and
enter
lret
and
das
xlat
cmp
stc
les
inc
out
ret
int3
push
into
icebp
clc
xorb
int
add
and
sbb
mov
scas
outsl
add
outsl
repz
aas
lahf
and
push
jl
andb
jnp
push
test
cmpsb
jmp
lcall
filds
es
add
inc
jle
mov
or
das
lods
jg
data16
aad
push
push
loop
lret
fisubrs
cld
pushf
imul
out
movsl
clc
insb
push
aaa
das
je
xor
aam
andl
fldl
movsl
sub
adc
lods
jns
into
icebp
gs
jmp
lcall
inc
xor
cs
addr16
push
xor
ret
lods
push
adc
cld
sti
lcall
sahf
out
rcll
adc
xor
xor
sub
fwait
test
daa
xchg
fiaddl
jle
loope
mov
xchg
hlt
jle
fdivrl
push
jecxz
leave
sub
xchg
add
jb
movsl
popa
sub
adc
in
xor
inc
iret
outsl
jo
es
lock
rclb
les
dec
cmc
insl
cs
ret
mov
mov
pop
cwtl
adc
cltd
sbb
or
fcmovnbe
adc
aas
dec
mov
insl
je
xchg
test
dec
test
or
add
lods
mov
je
or
rcrl
roll
lcall
stc
sbb
aam
lods
sbb
fwait
lods
add
mov
pop
cltd
mov
icebp
iret
aam
iret
lcall
imul
sub
andl
ljmp
cmc
lahf
pushf
dec
push
xchg
mov
and
sbb
pop
adc
hlt
sub
repnz
push
pop
cmpsb
ja
jl
pop
test
daa
sbb
cli
ret
fcmovnb
sub
ret
sbb
cmp
mov
inc
call
sahf
adc
push
xor
movsl
pop
mov
andl
jle
inc
ja
leave
inc
aad
decb
mov
jns
popf
dec
lcall
sbb
xchg
mov
sbb
or
aas
nop
mov
xchg
fmull
inc
aad
sub
leave
or
sbb
dec
call
mov
push
sub
sbb
fdivp
cmp
aaa
pop
xchg
bnd
in
xchg
mov
je
xor
je
hlt
test
ss
loope
cwtl
xchg
inc
icebp
mov
jg
and
mov
and
push
sub
faddl
imul
mov
adc
ret
jg
stos
push
lret
mov
mov
cmpsl
pop
stos
mov
pop
cli
fcoms
jl
shrb
sub
cltd
shlb
mov
stos
jns
daa
adc
js
xor
lds
pop
pop
mov
cmp
iret
xor
setae
cmp
imul
jne
test
les
pop
into
ret
jge
fsubrs
mov
outsb
jmp
shll
mov
lret
jae
and
lahf
mov
ret
xchg
push
mov
jge
mov
mov
cwtl
pop
movsl
clc
adc
mov
adc
jmp
xchg
divb
cmp
push
fnstsw
sub
xchg
scas
mov
mov
lret
outsb
mov
icebp
sti
jnp
stc
lcall
push
nop
shl
aad
outsb
inc
loopne
inc
jge
jge
mov
sub
jb
mov
push
pop
sbb
out
dec
lret
ret
and
pop
jo
popf
adc
rcrb
pop
hlt
hlt
sahf
and
and
cmpsl
stos
push
lds
sti
cmp
movsl
sbb
jae
sbb
fs
stc
push
dec
shlb
mov
adc
push
or
and
add
sbb
scas
addr16
dec
inc
sbb
imul
jge
inc
sbb
jne
sub
subl
stc
lods
popf
pop
mov
dec
and
xor
loop
hlt
and
push
mov
je
dec
jns
push
sbb
ret
cmpsl
inc
inc
fmull
arpl
xchg
lods
aaa
xchg
jmp
xlat
jecxz
mov
pushf
pop
shrb
and
rorl
and
leave
push
adc
pushf
lcall
inc
rcrl
or
popa
inc
or
std
add
or
sub
leave
push
dec
mov
scas
int3
outsb
or
stos
mov
mov
ror
js
adc
mov
cmp
cmp
aam
fwait
mov
dec
push
jo
cmp
and
sbb
inc
sbb
je
int3
add
adc
lds
movsb
jo
scas
or
jnp
cli
pusha
push
mov
mov
cmpsl
scas
mov
xchg
add
lock
call
mov
jo
add
addb
mov
repnz
or
lds
pop
subl
outsl
push
aam
pop
addr16
in
pop
xchg
rcrb
mov
mov
shll
push
or
xor
pop
loopne
sub
ss
test
andb
mov
ljmp
sub
loopne
imul
test
and
outsl
and
stc
push
push
mov
cmp
fimuls
xchg
lods
or
add
cmp
xor
inc
imul
lea
test
push
in
aam
dec
and
mov
xchg
add
cmc
mov
inc
dec
dec
sbb
mov
hlt
and
stos
popa
int
dec
mov
adc
mov
xlat
dec
push
push
push
mov
sahf
jbe
mov
mov
xchg
ret
cmc
add
pop
adc
daa
jns
daa
add
xchg
add
jnp
arpl
jecxz
cld
in
mov
push
cmp
mov
jl
xor
add
fidivrs
les
out
enter
arpl
out
bound
gs
and
fcmovb
push
dec
outsl
clc
cmpsl
xor
testl
pushf
dec
xor
mov
dec
test
jae
push
adc
mov
aad
xchg
sbb
and
jbe
shrb
adc
js
cltd
pop
push
pop
loop
mov
mov
mov
or
mov
sbb
push
mov
push
pop
pop
loope
test
xor
cmp
add
add
mov
sbb
sbb
es
add
cmp
add
add
xorb
xchg
add
mov
scas
lcall
push
push
sbb
and
add
xor
cmp
shl
nop
mov
dec
in
daa
inc
sbb
lods
test
push
adc
in
fnsave
loop
orl
scas
mov
andb
xor
mov
cld
xchg
sbb
cli
hlt
imul
test
push
mov
sbb
adc
xchg
push
pushf
mov
or
scas
jmp
cmpl
clc
mov
cld
jno
mov
fnstcw
orl
adc
jecxz
iret
xor
in
lret
jmp
in
pushf
arpl
jecxz
dec
jno
xchg
ds
pop
add
xchg
xor
mov
mov
sarl
mov
js
test
popa
and
xchg
cmp
test
cmpl
jo
adc
xchg
inc
sbb
pop
push
insl
iret
aad
aad
push
add
out
push
mov
mov
jg
repnz
lds
imul
and
cmc
xchg
pop
jecxz
push
pop
cli
xchg
hlt
test
sub
inc
ds
inc
in
ffree
mov
jecxz
sti
or
cmp
stos
cli
push
sarl
sub
pop
jae
mov
sub
jmp
scas
dec
add
inc
sub
imul
int
add
fistpl
or
dec
cmp
lds
repnz
call
inc
add
add
push
sbb
inc
adc
xor
add
stos
test
cmp
sub
inc
insb
pop
test
ds
mov
scas
mov
adc
adc
sub
mov
je
out
mov
mov
leave
pop
mov
mov
daa
ret
aaa
cmp
adc
int
pop
jle
out
xchg
xchg
je
imul
sahf
faddl
fiadds
mov
dec
xor
inc
ret
xorl
mov
mov
sbb
or
jmp
add
push
sub
cmp
xor
jecxz
inc
mov
mov
addr16
cmp
xlat
push
or
int
leave
out
push
cmp
inc
sbbl
cmp
mov
dec
adc
iret
pop
dec
dec
pop
out
jge
jbe
jl
jbe
pop
push
or
scas
sbb
aas
lcall
pop
push
sbbb
ja
add
inc
xchg
rclb
xchg
and
lock
loope
lahf
adc
sbb
pop
sbb
or
mov
insl
test
test
jp
dec
sbb
repz
mov
hlt
mov
outsb
icebp
lcall
sbb
sub
inc
loopne
ret
pusha
lret
into
inc
mov
imul
adc
adc
jl
or
inc
or
xor
mov
hlt
addr16
jge
rolb
gs
add
outsl
xchg
inc
mov
aas
xchg
pop
xor
and
push
xchg
sub
test
int
jg
movsb
mov
add
fldt
adc
dec
lcall
mov
les
lret
fsubrp
clc
push
in
inc
inc
jle
mov
sub
xchg
push
dec
sbb
pop
jno
sbb
cwtl
and
lods
mov
aas
idivl
roll
push
xor
adc
mov
and
or
pop
mov
int3
js
inc
cmpsb
test
inc
jle
stc
or
ficoms
adc
sub
fnstcw
dec
mov
xchg
in
mov
dec
mov
jecxz
add
inc
jbe
fbstp
enter
jg
pop
mov
dec
pop
sbb
ss
and
sub
mov
dec
mov
fwait
cmp
cmp
push
xor
fiaddl
push
sub
lea
jl
xor
int
in
bnd
notb
test
pop
lods
lea
inc
and
std
xchg
nop
outsb
into
das
dec
sbb
cmp
popf
ss
sbb
add
cmp
insl
mov
insb
mov
jmp
insl
inc
cli
mov
xor
cmp
pop
push
add
xor
shlb
pop
or
loope
push
outsb
pop
jg
rcrl
xor
sub
mov
or
pop
pop
fiaddl
pop
sarb
hlt
jns
fcmove
cmc
jl
and
mov
adc
jge
mov
bound
pop
xor
mov
arpl
cmp
dec
push
push
sub
insl
int3
nop
rcll
xchg
pop
xchg
daa
pop
push
cs
pop
es
push
icebp
and
sub
dec
dec
and
mov
mov
jns
in
pop
shll
cmp
jbe
sub
int3
dec
pop
sbb
out
clc
pop
xor
mov
sar
adc
xor
jb
sub
ret
lret
sub
aas
mov
movsb
nop
mov
hlt
fcomps
cmp
push
add
lcall
sub
pop
mov
add
jmp
push
sbb
xor
mov
pop
xchg
idivl
mov
es
push
in
int3
adc
push
adc
or
push
ja
pop
mov
iret
roll
jg
mov
jnp
in
xchg
push
mov
arpl
jmp
cmpsb
pop
xchg
pop
mov
mov
inc
das
adc
hlt
js
gs
mov
mov
movl
mov
enter
adc
mov
push
push
push
sub
shll
divb
dec
mov
mov
sti
lret
out
test
stos
popa
in
mov
inc
insl
lea
xchg
adc
sub
xor
outsb
xchg
mov
hlt
test
mov
sbb
pushf
jmp
stc
and
add
popa
fcoms
test
cmp
mov
dec
xor
cmpl
repnz
lods
je
movsl
scas
lods
xorb
inc
fs
push
sub
xor
mov
mov
int
xchg
popf
rcrl
mov
push
arpl
lock
movsb
imul
push
fimull
test
mov
cmc
les
call
out
push
inc
adc
mov
lret
jle
xlat
rcrl
mov
push
dec
jno
fldl
sti
inc
inc
add
daa
and
pushf
dec
push
xchg
pop
pop
fldl
cmp
stc
cwtl
jae
jbe
sbb
int3
fdivs
dec
mov
clc
sbb
int
test
or
stos
dec
pushf
push
dec
xchg
sbb
lahf
push
je
xchg
jle
cwtl
pop
jmp
and
nop
or
add
push
inc
jge
popf
clc
int
inc
movsb
js
gs
fnstsw
mov
loop
aas
stos
stc
aam
pop
in
lods
cwtl
add
mov
or
ret
das
subl
sub
data16
cmpsl
cwtl
sahf
psrlq
or
in
sbb
and
cmp
lds
and
fcmovne
lods
in
xchg
xor
lds
lds
in
xchg
xchg
or
dec
and
xor
jle
cmp
loope
incl
xchg
and
add
jp
inc
mov
xchg
mov
mov
add
xchg
jmp
cli
mov
or
cld
lods
jb
cmpsl
sub
sahf
mov
mov
sbb
pop
sbb
xor
insl
or
out
iret
dec
and
mov
mov
sahf
fistpll
shl
inc
popa
lret
jne
mov
xor
std
xor
dec
adc
adc
cwtl
xchg
dec
pusha
das
das
sbb
or
jbe
xchg
xchg
repnz
call
out
cs
fistl
push
jae
repz
sub
xchg
cmp
pop
add
push
out
dec
js
jnp
faddl
cmp
cmp
xor
mov
jbe
mov
enter
mov
subl
or
mov
jno
mov
arpl
add
push
push
or
inc
mov
xor
cld
fisubs
ret
pop
or
xchg
push
mov
mov
das
or
dec
insb
xchg
repnz
push
lret
insb
or
dec
xchg
lret
cmpsb
jge
movl
pop
or
mov
dec
cwtl
pop
mul
daa
aas
dec
ret
jmp
in
out
pop
out
and
jno
and
pop
sub
jmp
push
inc
aam
jmp
and
addl
stos
sbb
mov
adc
mov
sub
shll
push
or
gs
or
ljmp
mov
sar
insl
lcall
rep
mov
shrb
jecxz
imul
cmc
jne
xor
jnp
shrl
cmpsl
dec
mov
loope
test
mov
xlat
test
cmc
sbb
fadds
ffree
mov
or
adc
lds
clc
cwtl
out
call
add
shrb
adc
adc
pushf
jnp
fistps
mov
adc
dec
adc
sub
xchg
test
sub
inc
lahf
ljmp
arpl
movsb
andb
leave
cmpsl
or
in
gs
ss
pusha
push
enter
sbb
adc
in
xchg
test
out
push
xchg
and
adc
rorl
inc
inc
fcomip
popa
shlb
or
add
adc
pop
add
cmp
jns
sub
dec
fimull
fisubs
mov
stos
std
out
sti
fsubp
scas
mov
enter
scas
mov
push
or
test
mov
pusha
mov
mov
clc
lods
and
leave
push
sti
sub
into
test
mov
int
adc
pop
ds
aad
popa
les
inc
push
mov
ja
imul
xchg
add
sub
leave
sub
and
sahf
push
mov
push
mov
mov
and
and
mov
fs
mov
push
ret
inc
pop
popa
inc
lret
or
sub
call
ficomps
mov
mov
sub
fwait
adc
call
pop
pop
in
fadds
test
adc
push
fsubrs
clc
cmp
in
dec
mov
cmp
xchg
mov
xchg
addr16
cmp
lret
pop
cmpsb
lock
mov
and
cmp
add
fwait
mov
xchg
divl
push
cmp
lret
cmp
jle
inc
xchg
cli
push
mov
xchg
cwtl
adc
and
test
out
sub
fimuls
loope
or
cltd
pushf
add
inc
rcrb
int
xlat
ror
sub
shll
mov
jno
nop
sbb
jle
cltd
and
ffreep
out
in
arpl
sub
mov
inc
int
leave
shlb
adc
mov
je
out
js
add
mov
out
jno
inc
lret
mov
aas
push
xchg
mov
xchg
mov
pop
popa
or
add
in
cltd
dec
arpl
sub
pop
mov
sbb
mov
cs
mov
mov
xor
cmp
popf
dec
lret
push
sub
mov
sub
sbb
push
cmp
lret
pop
iret
sub
bound
ja
mov
fwait
jg
fisubs
cmp
cmp
repz
fidivs
lds
cwtl
loope
cmp
out
xchg
push
aas
sbb
data16
xchg
and
scas
lds
cld
sti
add
pushl
in
sti
xchg
mulb
cmp
or
xor
ljmp
cmp
mov
jb
ljmp
push
xlat
jne
insl
push
ret
loopne
repnz
jb
mov
mov
subl
cli
out
xor
orl
xor
cmpsb
andl
pop
adc
mov
sbb
xchg
xchg
and
test
in
sub
add
or
and
je
in
fsub
sti
push
jecxz
mov
out
and
push
mov
add
lods
icebp
push
loop
inc
xlat
fnsave
xchg
push
xchg
mov
sub
out
inc
inc
movsb
stos
pop
mov
inc
lret
lods
fidivl
or
and
cltd
lret
fidivl
dec
push
in
std
jns
insb
inc
loopne
aaa
adc
push
ret
mov
jl
ss
mov
inc
mov
jne
mov
sbb
sub
sub
aaa
mov
aaa
mov
enter
icebp
mov
add
xchg
mov
pop
adc
addr16
ja
ds
xchg
aad
xchg
add
int
mov
pop
cli
inc
add
dec
inc
ljmp
fidivl
adc
xor
not
loopne
add
lret
lret
sarl
popf
out
cmp
pop
jle
fisubrs
jge
cmpl
stos
mov
icebp
andl
mov
movsb
xor
and
and
dec
mov
mov
lock
xlat
lds
jmp
das
jp
jecxz
mov
cmc
into
ljmp
xor
imul
rcll
rolb
lds
push
aam
mov
cmc
movsb
cwtl
sti
sub
leave
popf
bound
cmp
or
sbb
mov
cld
dec
clc
out
mov
xchg
cmpsb
mov
repnz
bound
mov
rcrb
mov
in
ss
imul
jbe
and
dec
outsl
call
iret
dec
in
mov
cltd
push
sbb
bound
cmp
sti
and
push
sub
movsl
inc
add
mov
bt
iret
sub
rorb
in
jecxz
mov
pusha
or
mov
adc
out
sub
xlat
icebp
or
adc
push
xchg
push
dec
fcoml
mov
adc
mov
lods
fdivs
js
jno
cmp
mov
cld
icebp
or
adc
lcall
loopne
sbb
push
iret
jno
ror
dec
pop
xchg
add
fcoms
jnp
fsubl
aaa
dec
cmpsb
jp
test
outsb
ss
mov
or
fsubrs
je
je
mov
movsl
ret
repnz
mov
mov
jp
jns
loope
xor
jb
mov
scas
push
scas
into
cmp
mov
inc
in
inc
adc
adc
xchg
stos
pop
add
scas
movups
shrl
cmpsb
stos
aaa
sar
leave
push
dec
je
adc
add
cmp
dec
xchg
out
fisubrl
sub
mov
xor
lods
push
xchg
out
test
aaa
push
mov
inc
xor
pop
testl
xor
pushf
xor
xor
sbb
xor
jmp
std
xor
movsb
cmp
test
pop
rorb
inc
pop
and
bound
cmp
rcl
ret
out
test
bound
popa
ja
mov
rclb
jmp
mov
outsl
push
ret
fisubrs
adc
cltd
lock
lods
cld
push
int
fwait
ss
cltd
mov
fs
popa
imul
in
cmp
sbb
mov
add
jo
int3
xchg
jge
adc
es
jns
pop
cwtl
inc
cmp
sub
or
mov
or
aam
stos
xlat
push
enter
scas
cmp
stc
rcrl
or
adc
dec
cmpsl
mov
test
rclb
add
mov
aam
sbbb
cltd
popa
and
mov
mov
inc
gs
cmpsb
jg
sahf
leave
xlat
rcll
pusha
jne
inc
push
clc
in
clc
cmp
stos
idiv
pop
lea
cmp
cwtl
insb
push
arpl
adc
jmp
shrl
loopne
in
popa
lahf
ret
shr
mov
fists
mov
popa
push
dec
shll
mov
sub
sti
jmp
xor
jb
mov
or
andb
mov
das
jmp
mov
xchg
xor
push
fbstp
gs
mov
pop
mov
mov
xchg
jmp
mov
mov
movsb
pop
jg
pop
test
add
cmp
push
fcomip
fnstcw
pop
cmp
sub
or
js
xor
imul
pusha
mov
mov
xchg
bound
int
popa
pop
mov
dec
leave
mov
fldt
push
jb
test
pop
mov
clc
lds
jp
enter
insl
dec
pushf
and
xchg
fucomi
lds
push
lahf
inc
test
jo
mov
sub
adc
or
bound
fs
push
and
ficoms
ss
pushf
pop
push
daa
and
pop
decb
add
sbb
adc
scas
stos
sbb
repz
mov
pop
sar
inc
out
idiv
cmpsl
ficoml
lret
and
jo,pn
hlt
cmp
cltd
push
push
ss
rorb
iret
xchg
inc
jns
add
out
xchg
pushf
ja
call
hlt
or
pop
gs
mov
nop
ret
arpl
dec
and
outsb
int
lcall
push
fistpl
sbb
sbb
jmp
dec
sbb
mov
int3
sbb
aaa
lods
dec
out
mov
xchg
cmpl
pop
pusha
push
outsl
std
pusha
jl
add
xchg
push
js
xlat
push
mov
sbb
dec
aas
and
jno
ja
cld
xchg
mov
mov
fs
xchg
pop
ja
mov
adc
add
movsl
mov
movd
mov
mov
xchg
sbb
sbb
leave
movsl
and
rol
cmp
or
mov
mov
movsl
xchg
mov
mul
cmp
adc
pop
mov
test
sub
pop
jp
loop
and
jo
je
mov
mov
dec
clc
test
clc
xor
jecxz
out
lea
push
dec
fs
shlb
sarl
mov
daa
cltd
add
test
loop
movsl
jbe
clc
adc
push
cwtl
call
push
push
or
subb
cmpl
inc
mov
xchg
sub
mov
insl
movsl
sbb
jns
sbb
mov
mov
adc
jecxz
lods
pop
iret
pop
mov
cmp
jb
lock
enter
lds
scas
shl
dec
imul
push
scas
add
aaa
scas
push
popa
xchg
or
xor
xor
js
push
add
and
dec
xchg
push
pop
fxam
out
outsb
sub
les
cli
sub
jno
jmp
imul
fisttps
addr16
lods
jl
xchg
mov
jp
and
pop
sbb
jb
jnp
and
mov
js
inc
push
scas
jle
mov
mov
adcb
pop
xchg
ja
inc
js
icebp
sub
jne
jecxz
inc
xchg
loope
fcoms
push
fdivrl
adc
or
iret
cmp
mov
and
lods
fs
dec
outsl
aas
cmp
mov
push
call
mov
loope
stos
push
jg
into
or
les
es
xchg
idivb
loope,pn
cwtl
mov
movl
inc
mov
pop
sbb
lods
jb
mov
mov
xchg
cltd
cmp
dec
mov
hlt
adc
pop
lods
jne
push
push
fdivrl
inc
int3
in
arpl
adc
stos
test
or
jle
cld
inc
stc
sub
inc
pop
mov
imul
dec
rcrl
xor
les
lret
es
push
dec
mov
stos
sbb
inc
xchg
insl
inc
add
dec
xor
mov
mov
into
adc
push
pop
jns
push
stos
inc
ljmp
push
pop
cld
lock
pop
fcomi
mov
xchg
dec
loope
mov
xchg
lahf
jns
dec
jl
stos
lods
test
xchg
mov
mov
call
push
jo
and
and
mov
push
pusha
jno
sub
scas
pop
mov
js
add
ljmp
clc
fldt
xor
sbbb
dec
sbb
jns
mov
int3
std
pusha
sub
pop
sahf
jmp
aaa
sti
xchg
or
xor
pcmpgtb
push
mov
and
mov
repz
xor
lcall
dec
jnp
fistps
add
loopne
xor
inc
push
cmp
stos
cs
adc
fistpl
nop
outsl
jae
test
mov
lcall
loope
adc
or
aam
sbb
fwait
je
mov
je
iret
lock
lret
and
les
pop
xor
xchg
sub
mov
jbe
xchg
lea
ss
inc
sbb
int
push
add
test
xor
sub
pop
jl
in
shll
cmp
or
pop
push
pmuludq
test
dec
test
and
or
cld
cs
add
jle
js
cld
dec
jecxz
push
add
mov
xchg
xchg
inc
iret
imul
in
out
cmp
mov
add
push
xlat
sbb
dec
or
in
cwtl
lods
andb
stos
fnstsw
mov
test
cmp
sti
das
iret
mov
faddl
aad
cli
call
cmp
ss
pop
pusha
sbb
cld
push
shrb
stos
mov
dec
imul
adc
fsubrs
das
sbb
mov
data16
insl
xchg
mov
xor
repnz
in
movsb
mov
fldl
sbb
cltd
aam
xorb
push
test
lods
sub
adc
movsb
lret
outsb
lds
push
movsb
insb
add
das
jns
in
and
xchg
jae
sbbl
dec
and
xchg
inc
addr16
xchg
xchg
std
cmpsb
sub
sti
mov
bsf
dec
sub
popa
add
cmp
fs
adc
inc
push
fildl
dec
adc
cwtl
dec
mov
and
and
out
inc
pop
stos
jae
aam
mul
sbb
cld
jbe
mov
jge
cwtl
iret
nop
ja
sbb
aaa
add
dec
xor
popa
cmp
aas
mov
fisttpll
imul
mov
pushf
ret
pop
inc
loopne
dec
call
jmp
inc
jg
movsb
pop
dec
cltd
ds
and
push
add
std
push
jg
inc
cli
push
push
fldcw
mov
sti
cmpsb
sarb
jnp
sbb
mov
movsl
mov
add
inc
add
mov
sbb
dec
dec
mov
imul
int3
jns
std
sbbl
enter
icebp
aas
dec
or
dec
je
and
leave
cmp
mov
dec
je
adc
jl
mov
jne
mov
sub
lcall
nop
lods
ds
and
inc
outsb
mov
jo
or
mov
out
testb
and
sbb
push
mov
dec
aad
fists
inc
xor
push
mov
and
sbb
push
in
ret
idivb
jle
mov
fidivrs
adc
in
mov
and
xorb
icebp
cmp
imul
jg
std
aam
jecxz
push
sarb
and
xchg
add
fldcw
jb
inc
clc
clc
in
ret
bound
pop
enter
mov
jmp
arpl
int
loope
ja
into
inc
outsb
out
clc
jge
dec
adc
cwtl
out
fimull
cmpsl
cli
dec
lods
sbb
rcr
aad
arpl
dec
enter
xchg
stc
jecxz
xlat
xor
rorb
cmpsl
outsb
lods
sbb
lods
lret
add
mov
jl
mov
mov
ret
adc
add
lds
sub
shrb
or
and
jae
shrl
in
aad
addr16
cmc
idivl
push
cmp
shrl
movsb
sbb
arpl
insb
push
cli
aas
cmp
mov
dec
ja
jno
xchg
cmp
add
in
popf
or
jbe
mov
adcb
push
adc
rcrl
push
mov
mov
and
push
testl
lds
adc
shlb
ret
mov
jecxz
clc
cs
cld
in
loopne
fsubrp
rcrb
leave
xchg
push
or
and
xchg
or
arpl
rcll
sarb
xor
je
dec
loopne
xchg
mov
mov
add
push
rol
lock
movsb
ret
in
aaa
add
rcl
pop
lods
bound
and
mov
xchg
lcall
lret
or
push
and
pop
xchg
test
jne
push
and
loop
jns
scas
and
inc
and
roll
cld
es
mov
xor
push
xlat
adc
sub
dec
leave
dec
inc
sbb
xlat
popf
mov
mov
faddp
mov
mov
cmc
and
fimuls
mov
enter
loop
mov
adc
mov
mov
mov
mov
lock
sub
rcl
loope
fimull
pop
mov
adc
pop
push
lret
cmpsb
cmpsb
xor
pop
push
test
mov
xcrypt-cfb
cmpsl
jecxz
sbbb
aas
or
es
mov
in
mov
call
or
xchg
test
jge
push
out
movsl
adc
mov
das
iret
sbb
add
imul
xchg
test
or
mov
sbb
xchg
cld
sub
fbstp
pop
addl
test
sub
push
mov
or
out
add
inc
cmp
push
pop
and
adc
ret
out
ficoms
loop
js
arpl
pop
cmc
push
xchg
dec
mov
inc
xorb
sub
push
popa
dec
mov
shll
arpl
lret
out
test
cmp
dec
xor
out
xchg
clc
sarl
sti
imul
or
cmpsb
pop
imul
hlt
adc
xchg
lods
or
ljmp
or
in
xor
js
test
fucomi
inc
push
ds
cmp
cltd
push
fstpl
xchg
enter
add
push
enter
or
mov
jb
bound
xchg
clc
and
mov
jp
aas
daa
push
and
dec
jmp
pop
pop
or
adc
jne
mov
arpl
jmp
je
jb
mov
xor
out
push
test
in
dec
add
sbb
inc
ja
cmp
jle
jnp
out
mov
add
pop
js
les
and
pop
fistpll
jp
int3
aaa
or
adc
mov
cmpsl
mov
into
push
sbb
movups
xor
jmp
adcb
push
adc
xchg
stos
je
push
rclb
sbb
lcall
xor
inc
lcall
hlt
test
dec
dec
divb
or
jl
add
jns
cmp
roll
xchg
pop
fs
sub
xor
cwtl
xchg
dec
js
outsl
mov
xor
or
and
pop
xor
mov
jg
mov
imul
movsl
sahf
shll
clc
ret
push
pop
mov
inc
cwtl
addl
mov
xchg
loop
or
repnz
push
ds
repnz
sbb
jns
rcl
cmpsb
data16
cli
xchg
scas
cmpsb
jp
pop
nop
ret
dec
mov
pop
or
add
inc
jp
adc
pop
sbb
outsl
pop
data16
jae
or
test
gs
repnz
mov
lahf
repz
xchg
roll
push
push
popf
ss
roll
je
arpl
cmpsl
jb
out
mov
loopne
mov
mov
add
and
sbb
push
arpl
call
inc
push
aaa
setno
scas
lea
fdivs
mov
adc
cmc
adc
push
negl
pop
icebp
mov
push
sahf
stc
xlat
sbb
icebp
and
shll
pop
ret
adc
or
repnz
ds
push
xchg
mov
cld
xor
push
cmpsl
push
imul
cmp
pop
aad
mov
xor
inc
arpl
ret
and
pop
xor
loopne
cmp
ss
pop
movsb
jle
xchg
push
shrl
add
in
fildl
jo
sbb
adc
push
out
xlat
xchg
or
sub
sahf
pop
fs
inc
add
cmpsb
loop
add
push
mov
incb
inc
pop
push
rcr
sbb
mov
push
inc
shr
add
dec
clc
scas
or
mov
jno
out
xor
sub
inc
adc
mov
insb
sti
repz
jb
imul
and
or
dec
or
repz
scas
xchg
pushf
inc
mov
hlt
add
shl
iret
dec
inc
dec
std
gs
test
pop
lahf
xchg
fmuls
insb
addr16
loopne
push
cmc
dec
mov
sbb
mov
pop
and
sarl
pop
sub
cmc
loope
mov
inc
test
inc
in
inc
jno
lods
popf
push
jl
xchg
rolb
inc
sub
outsb
insb
inc
cs
jl
xor
push
inc
jb
jg
or
les
fwait
imul
mov
mov
inc
rol
adc
or
inc
mov
inc
adc
sub
lahf
xchg
pop
loopne
pop
cs
out
mov
xor
aaa
and
jne
xlat
out
mov
sub
xchg
jp
mov
and
sub
xor
inc
and
cmp
shl
xchg
push
push
inc
fsubl
and
jns
mov
enter
in
leave
push
out
dec
mov
outsb
fdivrs
sbb
xor
xchg
test
cmc
lahf
aaa
lock
xor
mov
sub
and
sbb
add
int3
mov
or
insb
mov
mov
adc
ljmp
mov
push
test
ja
lods
xor
jbe
repnz
inc
outsb
mov
out
cmp
lret
jp
mov
mulb
jbe
and
clc
mov
mov
pop
add
jae
bound
fistl
stos
outsl
jo
out
movsb
mov
jo
stos
test
cmp
fs
xor
mov
fucom
dec
or
push
pop
push
cli
in
pop
jae
movhps
inc
jecxz
insl
ds
enter
mov
adc
imul
imul
jge
inc
push
and
leave
movsb
push
xchg
mov
pop
call
out
lcall
test
mov
fsubrl
cmc
imul
adc
fs
pop
inc
out
imull
pop
insl
sbb
push
call
shlb
mull
jns
sbb
dec
in
xorb
mov
inc
mov
cmc
xchg
addr16
cmp
popf
popf
dec
outsb
test
aas
add
pop
je
mov
and
pop
inc
push
pop
fsubrl
iret
cmp
test
push
inc
aam
dec
aaa
mov
and
aas
or
hlt
daa
jo
cmp
dec
add
cwtl
jg
aaa
cwtl
cmp
xchg
gs
xor
xchg
es
loope
pushf
jecxz
cmp
imul
popf
addb
jmp
push
mov
fstpl
xchg
mov
cmp
imulb
or
pop
mov
lcall
and
mov
sub
xor
scas
or
loopne
loope
dec
fcmovb
xlat
jg
ret
stos
imul
stc
jbe
aad
sbb
xchg
mov
mov
mov
bound
xchg
pop
dec
hlt
mov
stc
in
push
test
sub
lock
clc
inc
sbbl
mov
hlt
aaa
dec
mov
cmpb
jge
roll
jbe
jl
mov
push
je
and
or
cmovne
bound
and
or
test
push
stos
inc
in
sub
or
nop
sahf
int
rorb
leave
lds
popa
add
cmp
mov
xchg
lock
jge
mov
cmp
add
cmp
lahf
mov
xchg
ret
das
scas
and
popf
add
sarb
outsb
push
dec
mov
pop
sbb
stc
cmp
fiadds
cwtl
mov
sahf
dec
sub
cmp
incl
or
test
aam
xchg
cmp
cmp
in
sbb
and
xor
or
jnp
dec
in
imul
and
cmp
ss
xor
imul
xorb
jbe
push
inc
js
jnp
xchg
in
and
or
jae
fs
cld
xorl
or
sbb
jp
pushl
pop
add
push
fstpl
jne
call
pusha
insb
pop
push
in
ret
sub
or
push
xor
pop
cmp
stos
cmp
add
inc
push
in
sub
mov
sub
push
in
mov
or
ljmp
mov
mov
bound
into
mov
je
fwait
or
mov
and
ret
lcall
xor
lds
and
add
hlt
jge
dec
jb
imul
std
mov
jmp
mov
mov
xor
fucomp
pushl
and
add
and
js
adc
lods
mov
inc
inc
das
andl
rcll
std
xchg
in
sarl
js
adc
inc
out
jecxz
mov
xchg
mov
nop
inc
loopne
push
pop
push
lret
dec
fs
sub
dec
adc
cwtl
test
icebp
cmp
sarl
or
sbb
div
push
ds
loopne
push
daa
inc
xchg
mul
sub
or
cli
adcb
add
enter
outsl
fdivrs
or
aad
jmp
mov
xchg
popa
cmp
daa
mov
dec
sbb
xchg
and
sbb
sub
sbb
daa
popa
adc
sbbl
xchg
sbbb
stos
jns
popf
out
push
stos
pop
test
mov
dec
arpl
gs
jl
adcb
out
cmpsl
es
mov
adc
cli
jns
mov
mov
das
xchg
dec
imul
mov
out
mov
push
cmp
xchg
mov
lods
adc
fmull
xor
add
lcall
add
lods
jle
xor
lcall
enter
loop
mov
jg
inc
sbb
mov
and
xchg
dec
mov
les
lods
push
push
pop
jb
jb
adc
sub
movsb
adc
es
sahf
sti
sub
rol
or
xchg
leave
scas
pop
mov
sahf
mov
cltd
popa
outsl
ljmp
cs
xchg
bound
push
sbb
push
testl
mov
rorb
cltd
ficoms
mov
or
cmpsl
lahf
and
test
cmp
cmp
pop
iret
les
insb
sar
push
inc
andb
sarb
adc
sbb
dec
cmp
test
mov
cmp
lock
xor
push
fucom
and
xor
leave
pop
mov
mov
sub
fidivrl
and
and
in
dec
icebp
daa
jl
lods
pop
mov
scas
and
and
inc
adc
aad
inc
push
pop
mov
push
aam
xor
subl
iret
jbe
sti
lods
push
fidivs
jg
mov
cmpsl
add
push
push
incl
xchg
repz
clc
mov
mov
xlat
dec
add
adc
dec
icebp
jle
xlat
dec
adc
subl
mov
call
mov
test
push
stos
dec
test
nop
cmp
sub
xchg
or
gs
inc
mov
jecxz
mov
cmpsb
sub
mov
cmc
push
mov
scas
nop
testl
les
gs
xchg
push
int
stos
mov
cltd
sti
ljmp
das
lahf
in
xchg
and
adc
fimuls
daa
arpl
sub
movq
xlat
imul
dec
dec
xchg
sbb
data16
dec
ljmp
inc
ret
call
add
jbe
inc
clc
fiaddl
sti
loopne
les
mov
push
pop
in
leave
pop
xor
les
mov
fnstcw
adc
dec
fs
xor
push
or
pop
mov
add
pop
push
pushf
test
and
jmp
hlt
add
add
loop
and
fucomp
in
xor
lock
lahf
mov
test
incb
inc
and
outsb
and
rcll
mov
lcall
loop
ljmp
inc
sti
pop
inc
jecxz
test
push
repnz
inc
jmp
lret
ss
mov
pop
ja
pop
adcl
ss
int
lods
in
jo,pt
mov
or
mov
and
cmp
bound
cmpsl
test
repnz
mov
dec
mov
cmp
mov
push
mov
test
sarb
mov
cld
lods
inc
pop
leave
dec
scas
adc
fprem
inc
lahf
sahf
sbb
push
dec
jle
dec
mov
mov
jbe
pop
inc
mov
pop
add
stos
roll
data16
pop
xchg
add
inc
adc
loop
addr16
psubq
sbb
in
cmp
loopne
in
or
xor
xor
add
cmp
lock
cli
or
int
push
in
out
adcl
and
pop
cld
jle
add
paddw
movsl
ss
mov
push
dec
or
loop
into
sti
dec
mov
out
jno
insb
push
cmp
add
mov
add
mov
mov
rolb
movl
xor
mov
jp
jg
jp
cld
push
pop
pop
clc
inc
bound
push
lretw
xor
pusha
xchg
aad
adc
arpl
mov
clc
ret
test
jecxz
jbe
subb
sbb
push
sbb
mov
xor
fcomip
inc
push
gs
jmp
dec
or
mov
out
adc
mov
icebp
add
lock
loop
dec
cmc
fs
insl
mov
popa
movsl
xchg
xor
push
xchg
lcall
fcmovne
lea
std
bnd
inc
fisttpl
xchg
push
nop
mov
inc
xor
push
loop
cs
pop
in
mov
cmp
inc
sti
dec
or
sub
sub
in
inc
mov
idivl
repnz
cmpsl
ret
adc
ret
roll
mov
sahf
lods
daa
dec
xlat
outsl
push
daa
mov
and
test
int
and
push
cmp
inc
arpl
cmp
sarl
push
or
pop
push
enter
dec
sbb
rcl
jmp
fiaddl
fistl
bound
mov
jne,pt
or
pushf
imul
ret
scas
jae
fldt
fdivrl
icebp
sti
adc
sahf
in
xor
jno
mov
arpl
nop
or
xchg
je
aaa
outsb
arpl
dec
test
cmp
iret
sub
cmp
jmp
arpl
xchg
push
xor
mov
push
cwtl
xlat
push
loopne
jg
ret
add
and
not
adc
pop
mov
lea
stos
inc
rcrl
popa
call
es
xchg
stc
aaa
loope
xor
jp
mov
scas
pop
movsl
jns
jp
mov
icebp
fs
and
jle
daa
lcall
mov
fisubl
outsl
divl
das
xchg
repz
lods
lcall
jb
jnp
insl
fwait
push
in
xchg
mov
icebp
repnz
mov
aam
add
int3
fists
bound
xchg
mov
pop
cmp
push
dec
jge
cmp
fwait
cli
or
push
mov
cmp
ljmp
inc
fsubr
movsl
jl
jbe
loope
rcll
gs
pop
and
scas
sti
fisubrs
mov
call
push
test
lcall
mov
test
cld
pop
cli
cmp
in
push
cltd
sub
out
mov
or
pop
and
or
loopne
lahf
jns
pop
andb
xchg
adc
daa
mov
add
in
mov
cmp
shll
loope
cmpsb
cld
add
and
imul
jmp
fistps
fstpl
dec
scas
imul
inc
nop
inc
xorl
dec
ds
pop
inc
and
jge
out
push
imul
pop
cmp
fdivr
xchg
adc
mov
or
and
or
call
dec
and
cli
ja
rorb
je
call
dec
popf
jne
addr16
mov
jmp
insl
in
cmp
arpl
in
ja
icebp
inc
fwait
popa
or
clc
push
mov
lahf
in
mov
pushf
add
cmp
and
adc
xchg
into
cmp
sub
push
js
bound
jl
jl
sbb
lock
push
push
or
in
aas
cmp
imul
mov
icebp
les
and
dec
inc
add
loopne
shll
xor
test
xor
sub
mov
xchg
jmp
cs
pop
jge
inc
das
in
lret
push
sub
adc
fdiv
mov
mov
js
sbb
stc
test
scas
lret
inc
imul
xor
ss
and
sbb
repnz
xchg
arpl
cld
or
loop
arpl
testb
pop
jle
repnz
jecxz
jge
cmpsl
negl
mov
mov
push
dec
add
mov
lret
repnz
lods
pop
fistps
into
cmpsl
mov
xchg
mov
push
cmpsb
dec
sub
add
cmpsb
stc
sahf
pop
cwtl
loopne
mov
cs
cmp
sahf
and
popf
mov
fcmovu
dec
mov
in
out
sub
fwait
dec
lcall
jg
sub
xor
xchg
stos
into
and
push
fdivl
and
push
cmpsl
push
mov
jg
mov
pop
add
add
and
in
sub
add
movups
jl
push
mov
pop
test
push
lret
out
sub
enter
adc
sbb
addr16
lret
mov
sub
lret
fcomi
lcall
iret
mov
dec
add
xchg
lods
fnsave
jmp
idivb
addr16
sahf
rcrl
pop
push
pop
out
push
mov
push
push
mov
jbe
mov
push
cmp
fcomps
adc
jmp
adc
push
mov
shl
into
inc
out
pop
mov
test
cmp
push
sbb
cmp
or
shr
nop
and
sub
mov
jns
dec
stos
lret
adc
daa
icebp
mov
sub
popa
shlb
or
cmp
icebp
mov
out
out
sub
clc
fsts
jno
xlat
xor
cwtl
xor
fwait
mov
push
pusha
dec
ja
mov
arpl
dec
sub
xor
xchg
mov
call
repz
lret
dec
jbe
hlt
movsl
mov
add
pop
sbb
and
insl
cmc
cmpsb
stc
jae
add
daa
and
clc
inc
jne
and
call
ret
out
jno
dec
dec
das
lret
adc
dec
das
call
call
mov
test
jl
and
arpl
outsl
push
inc
movsb
or
mov
out
dec
mov
push
in
pop
loope
xchg
inc
pop
cld
rclb
notl
js
shll
jns
lods
ret
adc
filds
rorb
xchg
dec
popf
stos
sub
mov
in
mov
jmp
loopne
loop
and
insb
lcall
bswap
jb
out
rcl
sub
push
arpl
dec
and
gs
in
lods
pusha
cmp
gs
mov
pop
and
out
push
and
sub
adc
dec
mov
je
jae
ret
sbb
shlb
lea
out
cwtl
ret
imul
mov
xor
lahf
test
xorl
fadds
scas
scas
push
cmp
fsubs
pop
test
cmpsl
fnstenv
adc
jns
or
xchg
jns
popf
sub
sub
adc
rorb
fidivrl
push
lahf
add
in
insl
lea
lds
aad
xchg
cmpl
mov
out
nop
insb
and
sahf
lahf
xchg
stos
test
movsl
scas
push
mov
cli
test
mov
and
push
fidivl
fmull
push
jecxz
sub
jne
sahf
dec
in
lock
outsb
add
adc
pop
and
movsl
test
mov
lcall
xor
push
inc
popa
and
rol
popa
mov
test
xor
lea
sbb
xor
jo
push
adc
lahf
mov
out
cld
lea
divl
aad
sub
test
cmp
negb
pop
push
cltd
mov
jb
sbb
dec
mov
lret
xlat
push
and
adcl
lods
xor
cmp
xchg
fiadds
sbb
cmp
arpl
cmp
push
loop
mov
std
pop
push
mov
mov
repnz
in
mov
mov
scas
cltd
fdivs
fisubrs
pop
cwtl
jmp
inc
jne
pushf
pusha
movsb
pop
jmp
inc
imul
stc
and
inc
cmp
push
xor
lret
fbstp
mov
inc
je
add
je
xchg
mov
xlat
js
push
sbb
pop
jb
xchg
add
xlat
mov
hlt
jmp
mov
jmp
ljmp
mov
pop
repnz
adc
lock
and
leave
sub
mov
hlt
add
push
loope
push
push
xor
cmp
add
sahf
push
jp
adc
jae
lret
mov
fisubrs
aad
fwait
mov
inc
jg
add
jne
xlat
adc
movsb
pop
stos
les
inc
movsb
repnz
cmp
loop
mov
js
inc
shrl
lahf
shlb
add
leave
xchg
inc
rep
into
mov
push
ljmp
insl
mov
cmpsb
repz
dec
pushf
aam
cmc
stos
or
inc
sbb
out
jnp
imul
or
cltd
mov
mov
dec
xor
add
iret
add
mov
test
sbb
adc
mov
push
push
jns
pop
in
gs
fildll
fsubs
jmp
xor
les
shr
pop
cmp
xor
sub
fiaddl
mov
stos
js
and
gs
fisttpll
add
lods
fisubl
popf
pop
lea
vpmaxub
adc
data16
or
adc
outsl
js
mov
sahf
mov
dec
popf
aas
gs
jb
test
or
xorb
call
stos
xchg
arpl
xchg
sub
push
dec
loope
or
add
test
adc
imul
cltd
sahf
xor
cwtl
stos
test
dec
cs
jecxz
sbb
test
add
clc
jne
inc
and
sbb
ljmp
or
mov
into
out
mov
gs
test
dec
pop
xchg
jne
push
aam
fdivs
cmp
fsubrl
cs
out
lahf
add
or
push
ds
xchg
push
rcrb
adc
dec
mov
xchg
loope
xchg
ss
mov
gs
jae
int
fisubs
stc
fdivrs
mov
xor
mov
pop
adc
push
rcl
mov
int3
scas
out
xchg
and
nop
nop
sbb
cmp
dec
sub
inc
push
cmc
aaa
lret
xchg
push
mov
fdivrl
xor
add
aad
push
sarb
es
xor
jae
xchg
mov
and
fs
fs
lea
sub
and
dec
sbb
outsb
rorb
aad
subb
jge
mov
adc
shrb
fimuls
les
dec
insl
add
pop
out
inc
out
aas
jbe
push
bound
mov
rcr
cmpsb
ds
imul
out
jae
inc
dec
mov
out
shl
or
inc
push
movsl
cs
xor
dec
and
aad
or
ljmp
mov
xor
add
setp
lds
lods
lods
sub
jne
xlat
add
movsl
or
and
xchg
xor
xlat
add
mov
adc
movsb
xor
push
mov
inc
mov
fisubs
fs
sbb
sar
inc
aam
inc
imul
ja
inc
mov
pop
jle
fucom
dec
jg
ja
fildl
jg
mov
popf
cmpsb
lods
ret
dec
pop
jnp
inc
jle
cmp
call
rcl
hlt
mov
rcl
mov
push
andb
jp
shrl
add
pushf
or
pop
jne
inc
nop
pop
jge
imulb
and
lret
mov
outsl
or
cmp
or
jmp
test
xchg
mov
int
vmulsd
sarl
test
stc
lcall
fimuls
jno
dec
lret
dec
mov
pop
mov
mov
jne
outsb
pop
in
inc
cld
pop
repnz
cmp
sub
pop
and
ret
addl
xlat
jge
in
cltd
in
pushw
fmull
shrl
std
fisttpll
or
adc
sbbl
pop
cwtl
ret
fcmovu
pop
jmp
cli
out
pushf
and
xchg
js
inc
mov
mov
pop
add
dec
cld
scas
shr
fisttps
in
sub
into
ljmp
scas
enter
stos
and
xlat
repnz
in
aam
rcll
ret
shrb
lahf
and
jne
jle
ljmp
jno
mov
pop
cmpsl
test
movsl
sub
xchg
in
outsl
jl
jbe
pop
repnz
call
test
mov
mov
inc
clc
add
push
arpl
imul
scas
cld
test
fisubs
fldcw
pushf
push
lcall
jae
test
out
cmpsl
add
or
or
lods
jns
mov
cmp
jl
jmp
xchg
push
mov
mov
jne
cmp
pop
pop
sahf
pop
std
jno
je
dec
fistps
lods
imul
adc
cwtl
rorb
ror
mov
xlat
xor
repz
mov
pop
scas
xchg
inc
sbb
jbe
repz
fmuls
jl
jg
imul
insl
xchg
cmpsl
shll
push
jo
or
sub
sbb
movsb
jle
dec
mov
out
mov
jne
fidivrs
mov
fstps
ja
inc
adc
je
and
daa
push
mov
add
mov
or
or
push
data16
or
pop
pop
pop
stc
or
sti
mov
mov
sub
ss
scas
mov
call
jg
ret
daa
mov
cmp
pop
adcb
lea
add
popf
in
ljmp
scas
test
xor
cmp
jle
mov
sub
mov
push
push
int
mov
or
mov
jg
lds
test
adcl
or
rclb
lret
in
bound
add
jb
inc
adc
jl
jle
repnz
lds
add
lcall
adc
lcall
nop
push
adc
push
repz
push
mov
mov
or
fs
call
test
ss
dec
in
sbb
adc
shrb
jg
ja
sub
xchg
arpl
fisubrl
mov
push
or
and
jns
mov
sti
orb
xchg
pushf
stos
inc
fists
outsb
mov
insl
lock
arpl
xchg
adc
imul
cmpb
jmp
fs
mov
pop
push
and
dec
and
xor
mov
sub
pop
fldcw
stc
subl
sbb
mov
or
cmp
mov
mov
daa
imul
pop
fldpi
jno
push
aad
or
push
lahf
cmp
clc
pop
xor
lods
mov
filds
mov
xchg
std
pop
int
mov
insb
inc
in
pop
fstpt
fstl
inc
and
push
push
fstps
das
xchg
mov
push
popa
mov
aaa
leave
sbb
pop
fs
mov
cmp
push
inc
loop
idivl
inc
popl
subb
push
insb
fs
loope
jmp
inc
push
cwtl
inc
pop
push
fwait
std
jbe
adc
adc
clc
loop
out
sbb
adc
adc
xor
mov
sbb
ljmp
jle
movsl
inc
lahf
mov
and
out
jne
hlt
jne
mov
push
out
mov
mov
pusha
adc
mov
pop
pop
in
pop
jo
inc
and
adc
mov
cmp
in
or
pop
mov
xchg
dec
cmp
into
sub
mov
jg
jb
movsl
jp
inc
fsqrt
mov
dec
cmc
xchg
test
loope
rclb
adc
sub
pushf
and
cmp
sub
mov
addr16
imul
lods
in
and
je
adc
out
cmp
cmp
mov
pop
and
aad
xchg
xor
mov
cmp
cli
fwait
sbb
lods
jno
sub
jb
push
jbe
jo
lahf
ss
inc
mov
xor
loope
add
xchg
in
push
jl
rcr
lds
mov
push
ret
leave
or
stos
addr16
xlat
mov
dec
add
ljmp
inc
pop
clc
add
jbe
sbb
mov
jne
test
mov
jecxz
sarl
sbb
mov
test
push
imul
test
or
xchg
dec
lods
jnp
inc
cmp
out
flds
dec
sarb
repnz
jg
and
push
xchg
lods
push
shlb
push
test
inc
in
cmp
pop
imul
sbbb
add
mov
push
sbb
cmpsl
jge
cmp
sbb
lahf
aad
mov
stos
or
enter
imul
mov
sub
dec
repnz
bound
mov
pop
movsb
test
mov
sti
xor
mov
lea
testb
stc
add
sbb
mov
out
jle
orb
aaa
inc
push
xchg
bound
and
mov
mov
xchg
push
jle
xchg
repnz
pop
scas
or
add
cmp
sub
ret
add
jg
imul
out
xor
xchg
popa
push
and
jl
orl
or
stos
sub
cmp
fsubl
jle
movsl
mov
out
xor
xchg
test
sarb
or
xchg
push
std
push
xchg
addb
inc
mov
cli
pusha
xor
icebp
int
mov
mov
hlt
std
xchg
lret
inc
xor
or
add
jns
imul
cmp
pop
sub
fldenv
inc
and
stos
xor
mov
or
pop
gs
ss
adc
popa
pusha
xchg
test
shl
js
ret
mov
sbb
mov
adc
jmp
xchg
stc
std
push
mov
dec
mov
ret
adc
fsubrl
sarl
in
sbbl
push
test
cmp
dec
add
stos
add
lret
push
bound
aaa
adc
xorl
in
sub
addl
scas
xlat
shrl
fldcw
ljmp
fs
xchg
mov
adc
inc
cmp
lea
or
xor
xchg
insb
dec
mov
fstp
adc
cmp
mov
into
sub
inc
sbb
roll
jmp
div
ss
jp
fbld
int
sarl
int
pusha
lock
and
sub
xchg
jno
notl
int
mov
enter
push
jo
xor
jl
dec
mov
and
stos
loop
xor
push
pop
andl
xor
jne
mov
jo
cmp
mov
mov
dec
and
xlat
mov
inc
mov
addb
jb
mov
imul
jo
pop
in
mov
enter
ds
mov
push
sbbb
cmpsb
addl
inc
stc
mov
push
cld
pushf
ja
dec
out
cmpl
xchg
jb
push
push
clc
fimuls
inc
bound
add
je
dec
test
ret
mov
out
es
fistpll
rcl
loopne
pop
add
ret
popa
jg
pusha
or
test
out
mov
xor
idivb
addr16
mov
in
inc
cmp
sub
scas
in
dec
outsl
pop
cmp
out
leave
mov
and
push
pop
imul
fdiv
adc
lea
sbb
sti
dec
into
inc
nop
jns
xchg
sbb
dec
rcrb
enter
cld
imul
je
out
adc
xor
pop
jg
inc
mov
push
mov
cwtl
fisttpl
mov
dec
imul
leave
mov
dec
das
add
sahf
notl
in
and
cs
pop
xor
mov
mov
jne
or
frstor
test
repz
das
inc
mov
mov
outsl
xchg
test
and
and
mov
mov
pop
mov
repnz
push
in
xchg
leave
cmp
lods
add
dec
inc
imull
sbb
and
popf
sarl
and
jecxz
ljmp
dec
sbb
jmp
jmp
adc
push
adc
mov
mov
movsb
jno
mov
sbb
cmpsb
enter
cmpsb
cmpsb
insb
loop
mov
or
cmp
xchg
shll
out
mov
movsl
xor
mov
mov
pop
pop
outsl
pop
add
adc
fnsave
cmp
enter
out
fcompl
stos
aaa
mov
std
mov
ret
arpl
test
push
and
inc
cli
scas
es
pusha
sbbl
mov
mov
pusha
xchg
mov
sbb
in
xchg
orb
dec
cmp
xor
push
jl
sub
jb
pop
pop
lcall
mov
in
sub
mov
dec
inc
bound
loope
mov
mov
add
loopne
xchg
adc
jecxz
dec
push
ds
jb
pusha
lds
sub
sub
sub
loopne
mov
xchg
xchg
cmc
cmp
dec
fcmovnb
push
loopne
cmp
push
loop
and
jmp
add
aam
push
adc
mov
xchg
add
les
or
pop
push
dec
xchg
jg
stc
stos
shll
jo
adc
fcompp
enter
hlt
loop
add
jae
mov
mov
cmp
imul
push
add
fldt
cmp
sbbb
rsqrtps
dec
add
adc
sbb
lock
into
repz
mov
mov
scas
mov
cmp
inc
add
pop
xor
call
xchg
mov
lock
sbb
sbb
addl
mov
xchg
aad
mov
push
mov
fdivl
cltd
orb
rclb
testl
stos
mov
ret
imul
jno
bnd
add
addr16
test
arpl
dec
push
sbb
sahf
adc
lock
cmp
insb
mov
enter
jl
clc
rcrb
les
pop
xchg
gs
pop
aad
add
sub
ds
clc
dec
dec
xor
test
cmp
add
xor
repz
dec
test
js
jne
or
push
inc
cld
ret
dec
mov
cltd
add
paddsw
sahf
mov
or
jle
inc
popf
cmp
mov
fucom
cmpsb
mov
movsl
sbb
int3
and
mov
adc
xchg
sub
push
stos
les
lret
sbb
adc
ljmp
pop
sub
adc
pop
pop
mov
ret
jl
incb
shr
movsl
jmp
or
dec
aam
pop
xor
cmp
test
add
mov
shlb
aas
or
mov
add
out
fcmovnbe
xchg
mov
out
movsb
push
lea
mov
mov
cmp
lea
sbb
mov
inc
mov
jmp
loop
push
mov
jmp
arpl
sub
lgs
pop
testb
repnz
sub
or
add
sub
adc
movsb
add
xor
mov
push
imul
pop
insb
mov
adc
pop
outsb
mov
cmp
mov
je
mov
jne
imul
xorl
inc
sub
shl
pop
mov
pop
sbb
push
xchg
jl
mov
mov
and
cmp
push
mov
pop
xor
add
mov
out
push
fldpi
iret
sbb
sbb
sbb
push
fistps
adc
dec
pop
test
mov
lahf
jb
imul
lods
add
dec
cmp
mov
xor
jmp
sub
and
mov
in
sub
inc
hlt
jg
shrb
sub
repz
cld
hlt
mov
jae
inc
dec
movsl
adc
xor
negl
pop
sub
mov
out
stos
punpcklwd
pop
int3
mov
mov
sbb
lret
nopl
sbb
sbb
mov
ret
dec
enter
enter
or
mov
pop
mov
cmpsl
adc
loope
scas
lcall
fimull
push
inc
pop
rolb
xor
and
xchg
les
mov
sbbb
inc
mov
jbe
jnp
push
ds
and
data16
fisubl
mov
sub
iret
lret
in
jo
xchg
les
mov
inc
fistpl
inc
fdivrs
test
pop
mov
xor
and
sti
scas
pop
arpl
and
xchg
xchg
jb
inc
into
mov
das
jp
sub
or
xor
andb
fs
stc
enter
les
xor
sbb
cmp
gs
mov
dec
cmpsb
ss
pop
sbb
call
rorb
sbb
enter
inc
loopne
and
js
mov
jmp
test
pop
add
bnd
add
pusha
les
cld
lret
xor
push
mov
repnz
mov
shl
push
push
les
mov
stc
dec
add
lahf
xchg
push
mov
lea
fwait
arpl
movsl
test
ret
xchg
xchg
sbb
aam
sahf
sub
insl
sahf
out
ljmp
push
outsb
cmp
push
or
mov
mov
sub
and
push
xor
js
pop
pop
daa
pop
jg
mov
cmp
movsl
mov
repnz
repz
xchg
and
fcomps
lahf
bound
ja
iret
sbb
loope
adc
sbb
cwtl
mov
fcompl
fld
popa
cmp
repz
in
sbb
ljmp
shrd
jecxz
daa
add
sbb
mov
aad
mov
sbb
jae
cltd
pop
jmp
or
or
xorl
add
adc
push
mov
fisttpll
pop
ret
arpl
cld
pop
in
sbb
dec
push
aas
enter
xchg
imul
movsl
insb
in
movsb
jecxz
mov
pop
adc
loopne
xchg
das
mov
inc
mov
fnstsw
cmpsl
add
ja
push
pop
fadd
fistpll
stc
mov
jnp
dec
inc
mov
jnp
sahf
andb
sub
bound
lods
addr16
dec
insb
mov
leave
mov
pop
ror
adc
ficoms
inc
xlat
adc
mov
push
and
xchg
mov
xor
mov
pop
jecxz
shrb
aam
test
cs
mov
out
ss
mov
mov
or
sub
arpl
or
mov
sbb
test
pushf
push
push
rcr
cld
mov
or
jnp
and
dec
out
jmp
cmp
sub
mov
cltd
add
popl
mov
jns
push
test
push
fwait
adc
jmp
or
lea
mov
stos
mov
aam
mov
push
sbb
xor
movl
fidivs
aam
sbb
outsl
imul
xchg
fisubrl
push
xchg
jb
lea
sub
pop
xchg
test
stc
das
add
pop
adc
adc
and
adcb
test
fildll
mov
xchg
fs
mov
inc
notb
data16
sbb
push
inc
addr16
inc
sahf
cmpsl
inc
push
stos
shll
pusha
add
jl
mov
push
addr16
addl
mov
push
add
sbb
fistps
stc
pop
out
add
decb
jbe
scas
and
dec
push
imul
pushf
xchg
jo
sub
inc
fcomps
fcom
inc
adc
fldcw
xchg
cltd
shl
jl
xchg
nop
pop
js
dec
das
pop
test
loop
int3
out
scas
lods
mov
mov
jecxz
mov
push
ja
cmp
mov
adc
stos
or
pop
mov
sub
arpl
pop
stc
mov
mov
stos
lock
test
pop
stos
cwtl
lahf
and
sub
xchg
mov
arpl
pushf
mov
in
in
ret
mov
aam
iret
push
pusha
clc
out
cmpsl
mov
add
and
mov
xchg
fcmovbe
jge
mov
jbe
sub
data16
sbb
lods
mov
insb
cs
into
iret
cwtl
xchg
dec
fwait
sub
inc
sbb
jbe
jae,pt
dec
repnz
out
movsb
mov
hlt
sbb
fstpl
pop
insb
push
scas
mov
pushf
adc
fcompl
and
mov
orb
ss
mov
adc
jle
add
and
in
arpl
pop
hlt
dec
cmp
cmp
or
add
in
daa
inc
mov
add
dec
das
mov
pop
ljmp
ret
dec
jmp
movsb
aam
or
imul
je
dec
int
shll
cltd
mov
mov
mov
pop
cmp
lods
cwtl
mov
insb
sub
xchg
inc
sti
adc
lods
je
inc
ret
aam
cld
fisubrl
call
test
mov
ja
cmp
mov
fiadds
xor
mov
movsb
out
jb
movsl
mov
xor
push
popa
dec
mov
sbb
push
xchg
movsl
lods
inc
lret
add
out
xchg
jge
cmc
lea
lea
fsts
cli
fwait
shlb
addr16
jle
popa
test
neg
pop
das
sub
mov
adc
and
dec
cltd
cmp
xchg
je
mov
lret
cmp
fistpll
or
jne
or
or
cwtl
repz
push
or
iret
fwait
sbb
xchg
icebp
sub
mov
push
push
dec
xchg
add
adc
xor
cmpsl
sbb
imul
sahf
jge
cmp
imul
pop
aas
lahf
das
test
and
xchg
inc
sbb
xchg
test
pushf
stos
lods
cmpsb
cli
ja
cmpsl
and
sahf
push
xor
shl
adc
arpl
fwait
ret
dec
mov
inc
in
out
in
jno
or
mov
push
hlt
ja
xor
sub
xor
xchg
mov
adc
cld
cwtl
mov
mov
mov
loop
inc
outsb
sti
sti
mov
push
test
stc
movsb
into
dec
xchg
push
pop
push
add
cltd
aad
out
push
mov
nop
call
adc
sbb
stos
and
mov
add
lret
lret
les
lea
std
fwait
imul
fdiv
and
ret
inc
inc
and
fcmovne
push
iret
orl
sbb
addr16
enter
mov
push
and
mov
fdivrs
enter
shll
xlat
and
fs
rorb
pop
mov
jb
std
aam
sub
mov
ja
aam
mov
addr16
jle
addr16
sbb
subl
lret
dec
faddl
ljmp
cmpsl
add
in
cmpsl
fsub
lods
inc
arpl
insl
mov
andb
cmp
xor
movsb
sbbl
mov
add
into
leave
subl
repz
jecxz
sub
mov
xor
test
and
loope
idivl
xor
add
sti
jb
fdivrs
scas
int3
imul
xchg
add
dec
pop
mov
xor
cmp
mov
inc
jl
fwait
inc
inc
cld
xchg
rcl
mov
xor
lock
inc
jns
loopne
cmp
inc
lods
imull
fistpl
ja
and
jmp
jo
mov
loopne
loopne
jecxz
testb
loopne
mov
incl
inc
int3
push
fwait
push
xchg
mov
fistpl
push
addr16
add
pop
in
imul
and
lcall
mov
sub
cli
insl
mov
jl
and
in
jmp
inc
test
int
mov
inc
mov
in
and
rcrl
ja
mov
jns
pop
out
inc
inc
sub
es
ficoms
pop
movsl
orb
xchg
sti
cli
cmp
jl
inc
movsb
rcrb
jg
cmp
es
cmp
xor
mov
mov
cli
in
mov
xchg
dec
xchg
outsl
push
cmp
stos
dec
inc
push
push
stos
xchg
dec
sbb
sub
in
xor
cs
call
or
scas
mov
or
and
cltd
cmpb
pusha
repnz
and
and
mov
aaa
push
repz
adc
or
sub
out
sti
in
lahf
or
insb
or
mov
mov
cltd
add
sbb
xchg
das
jno
fisubl
iret
lds
lret
inc
or
inc
lds
lahf
pop
jle
les
lcall
adc
xor
cmp
pop
sahf
sub
jmp
cmc
loopne
and
pop
cmpb
mov
inc
xchg
cmc
test
movsl
mov
cmp
scas
mov
cmc
xor
std
js
jno
inc
push
psubb
and
ljmp
mov
nop
jbe
and
mov
jecxz
sti
push
xchg
test
mov
mov
cmpb
cwtl
into
sbb
loop
push
mov
std
shll
out
mov
fs
mov
cmp
sarl
lret
clc
jle
fstp
in
dec
sub
mov
out
cmp
je
stos
cmp
sub
icebp
inc
fiadds
femms
sub
push
xor
inc
cwtl
fidivl
inc
bnd
cmpsl
push
nop
pop
cmp
push
fcmovne
shrl
ret
push
push
dec
jb
cmp
lock
sub
into
cmc
imul
sub
stos
jbe
out
scas
add
inc
xor
add
into
push
or
pop
jo
xor
popa
add
dec
jmp
xchg
inc
shll
or
ja
pusha
ss
inc
adc
rcrl
aam
imul
lret
call
jb
xlat
lock
sbb
lods
popf
add
and
int
frstor
movsb
or
inc
dec
cmp
scas
cs
shrb
orb
pop
mov
and
imul
add
xor
jne
inc
fwait
jge
or
in
adc
xchg
lahf
xor
add
cs
lret
bound
enter
faddp
das
lret
in
cmp
xor
negb
ss
in
cmpsb
andb
mov
fwait
jb
mov
add
rclb
pop
adc
roll
mov
xor
in
into
lcall
or
int3
sub
adcl
dec
sti
or
loopne
xchg
shlb
sub
jmp
or
pop
pop
cltd
jo
leave
push
bound
enter
xchg
filds
fdivrl
stos
test
or
enter
repnz
add
loop
sbb
shrl
add
inc
mov
push
jbe
and
lock
addr16
fldcw
loopne
incl
rclb
xor
insb
inc
cli
mov
xchg
push
aam
and
loope
loopne
ret
push
bound
outsl
and
adc
test
subb
test
dec
sub
scas
jecxz
fprem
mov
sbb
inc
mov
in
lea
addr16
pop
sarb
jle
pop
loope
notb
and
dec
in
jnp
pop
jbe
rorl
stos
lcall
add
jmp
xor
jo
jmp
orb
adc
push
add
repnz
aam
ss
push
push
dec
inc
sub
test
mov
add
popf
testb
sahf
ret
lahf
outsl
and
jns
fisubl
add
fs
into
and
bound
adc
cmp
popf
aas
pop
ret
or
xor
sti
xor
mov
iret
and
mov
shl
mov
mov
xlat
rol
fiaddl
insl
lea
xor
aas
popf
xor
gs
mov
xchg
xchg
lods
stos
into
push
mov
jp
pop
int
pop
sub
icebp
and
enter
xchg
jl
jmp
ljmp
int3
cmp
imul
lea
cmp
enter
cmp
rcrb
addb
sti
insb
jl
lods
jmp
xor
or
daa
aad
movsb
mov
xchg
mov
xor
mov
loope
imul
add
iret
lret
test
sub
fnsave
mov
cmpsl
scas
movsb
out
or
xor
test
sbbb
jmp
push
stc
cmpsb
fcom
out
mov
test
dec
xor
ret
jno
xchg
jle
xor
movsb
data16
test
mov
sub
cmp
adc
jne
cmp
sti
jle
cld
xchg
lret
divl
call
mov
mov
lret
sub
mov
cmpsl
mov
popf
inc
pop
rol
mov
and
das
pop
and
mov
inc
jecxz
jb
push
cli
movsl
cmp
push
and
sub
in
mov
sbb
cltd
cmc
fs
mov
push
push
xor
movsb
stos
fcmovnb
inc
dec
fs
pop
out
pop
push
idivb
test
ja
jmp
test
outsl
mov
and
add
clc
pop
inc
dec
mov
dec
add
inc
loopne
data16
sub
aas
int3
dec
or
loop
xchg
xor
dec
movsb
cmp
pushf
imull
cs
loope
mov
fidivl
pushl
dec
dec
mov
or
and
into
pop
push
cmp
jns
cwtl
pop
jo
clc
xchg
add
daa
lahf
loop
aas
push
cmp
jnp
pushf
mov
xchg
jb
in
scas
adcb
jmp
test
xlat
cmpb
popf
mov
lret
jo
pop
mov
dec
imul
inc
xor
aaa
push
cmc
fcoms
loop
popa
xchg
gs
arpl
cmp
pop
js
jno
bound
inc
push
mov
push
scas
mov
inc
and
cmc
and
addr16
int
sbb
stc
pop
pop
mov
dec
xlat
jge
xchg
mov
adc
xor
ret
ds
in
sub
fs
mov
mov
int
adc
jl
loop
sahf
inc
cmp
jp
scas
lcall
or
clc
xchg
sahf
arpl
scas
pop
test
and
push
dec
sbb
jno
pushf
mov
fsubrl
popf
in
je
les
dec
hlt
out
out
inc
idivl
adc
push
test
aaa
sub
sahf
adc
push
lods
out
imul
mov
adcl
mov
das
sub
mov
push
xchg
push
movsb
pop
pop
insl
test
or
xchg
adc
sub
and
sub
sarb
aad
jns
mov
in
inc
je
add
inc
xchg
loop
mov
sbb
movl
pop
arpl
int
or
cs
push
mov
and
popf
push
xchg
es
fidivrl
dec
mov
mov
aaa
push
cmp
insl
icebp
mov
pop
shll
push
ljmp
fsubrp
clc
notl
js
mov
repz
push
rcrb
jp
ja
or
add
lds
or
mov
inc
mov
xor
lds
loope
mov
cmp
lods
pop
sahf
mov
push
test
mov
in
cmp
jle
stc
fmull
mov
jle
ret
icebp
jne
mov
mulb
ljmp
xor
or
jbe
lods
mov
in
jg
jle
fidivrl
xchg
outsb
cs
dec
faddl
add
fcom
fstpl
es
scas
and
insl
inc
test
je
xor
test
adc
sti
jmp
xor
testb
inc
mov
shll
pop
enter
subl
inc
sbb
lret
push
xchg
inc
stos
push
sahf
lret
pop
dec
cmpb
cmp
negl
push
xor
add
and
sbb
pop
mov
or
xor
mov
sub
pop
outsl
or
outsb
push
mov
lret
xchg
out
test
adc
or
insb
dec
jnp
sub
mov
xchg
push
or
add
sub
sbb
data16
ds
imul
push
mov
pop
daa
ret
inc
jle
jne
jae
xchg
mov
fmull
scas
pop
inc
xor
jl
or
mov
out
popa
bound
das
sub
mov
popf
je
mov
cmp
cmp
inc
sti
cli
clc
cmp
xor
out
dec
mov
addl
mov
ret
test
dec
sti
xor
xchg
lahf
cmc
cmpsb
repnz
xorl
and
adc
adc
scas
jle
push
repz
lret
lret
leave
or
sub
mov
ss
jecxz
out
in
cwtl
mov
adc
imul
lret
cmp
or
inc
scas
in
mov
inc
push
cld
inc
icebp
outsb
xor
xlat
imul
mov
fistps
hlt
rclb
cmp
and
ficoms
outsl
xor
sbb
inc
movsl
inc
cmp
stos
jae
push
mov
aam
jnp
shll
scas
inc
and
mov
sub
or
das
or
push
mov
mov
rcrl
inc
push
lahf
aad
mov
dec
sarl
das
dec
sar
adc
fdecstp
xchg
aas
mov
sub
pop
inc
movsl
popf
jns
pop
ret
test
jne
inc
lds
fnstsw
cmc
xchg
outsb
jne
in
cmpb
ja
pop
cmp
mov
jge
shll
jne
sahf
lcall
insb
arpl
dec
or
xor
cld
cmp
sti
notb
sbb
dec
lock
jp
mov
sbb
push
push
enter
cmpsb
rcll
mov
add
in
mov
inc
orb
jno
and
or
adc
sahf
sbb
outsl
lds
lret
test
loop
jne
in
and
mov
scas
add
test
dec
inc
cld
push
mov
setno
and
dec
add
sbb
pop
imul
xor
push
sub
inc
cmp
js
mov
shlb
push
gs
rorl
xor
fidivl
adc
xor
in
jecxz
jg
test
push
and
out
int
popf
sbb
out
inc
les
mov
in
adc
xchg
dec
repnz
xor
rcll
aad
cmp
mov
jg
movsb
sub
jecxz
adc
loopne
imul
gs
and
stos
loope
repnz
add
repnz
sbb
in
pop
outsb
imul
cmpsl
jmp
lret
mov
mov
fdivl
dec
lcall
icebp
inc
ficoml
and
jle
test
sti
repnz
cltd
mov
cmp
into
xor
std
inc
outsl
inc
jg
cmp
clc
sbb
repnz
or
arpl
cld
enter
outsl
loop
add
adc
iret
decb
das
mov
mov
mov
add
mov
in
nop
push
push
insl
sarl
sbb
xchg
mov
sbb
outsb
insb
negb
test
sbb
cwtl
sub
and
or
adc
das
test
scas
sub
jb
jmp
or
subb
sti
je
and
xchg
lcall
adc
testb
shll
and
inc
adc
cli
popa
mov
mov
pop
sahf
out
pop
cmp
xor
js
add
jp
loop
data16
mov
push
imul
jns
jne
out
add
scas
mov
scas
test
push
push
inc
ja
and
sub
xchg
sub
ljmp
imul
sub
lock
cmc
cmp
jg
mov
jp
iret
aaa
daa
jp
cmp
dec
jg
cltd
stos
xlat
aas
mov
xor
clc
lods
push
jle
and
imul
xor
rcl
and
inc
jno
sub
xor
test
pop
or
pop
mov
hlt
cmp
pop
mov
push
xchg
sbb
aam
jle
and
pop
repz
out
mov
xchg
stos
jbe
add
icebp
loopne
out
xchg
cmp
cmp
scas
cwtl
in
pop
cwtl
sbb
or
cmp
and
nop
mov
mov
stos
xchg
sbb
dec
sub
pmaddwd
movsb
xor
jg
and
sub
ret
outsl
insb
gs
mov
xchg
mov
jb
jbe
jnp
jmp
pop
or
jecxz
pop
xor
imul
mov
in
sbb
enter
in
pop
aaa
inc
push
or
icebp
pop
jp
sbb
pop
subb
repz
test
adc
inc
imull
inc
mov
scas
sub
in
cmp
nop
lahf
xor
push
adc
mov
mov
not
mov
sbbb
dec
punpckldq
xor
mov
add
sub
mov
mov
mov
dec
xlat
mov
cmp
test
cmp
push
imul
sub
adc
jb
lret
fdivr
aad
mov
sbb
xor
push
insb
aam
pushf
inc
adc
stos
push
or
xchg
jp
pop
xchg
sub
lcall
dec
mov
cmp
sbb
mov
dec
das
add
add
aas
mov
das
in
mov
xchg
mov
inc
les
inc
rep
int3
xor
dec
mov
dec
sbb
xchg
pop
and
xchg
imul
scas
dec
adc
jnp
int
out
push
int3
daa
ret
rorb
pushf
xchg
and
or
ret
clc
cwtl
addr16
test
stc
inc
inc
add
shrb
xor
push
or
cmp
cmp
xor
mov
pop
pop
jmp
cmpsl
test
xchg
and
lret
xor
loope
dec
push
inc
gs
test
adc
pushf
or
mov
jae
pop
jo
jg
movsb
adc
xor
sahf
xchg
pop
xor
inc
popf
mov
mov
test
dec
rcr
dec
out
xorl
mov
mov
imul
inc
cmpsb
das
pop
xor
fildl
addl
inc
or
push
bound
mov
leave
cmc
mov
push
mov
data16
cmpsb
in
addl
mov
jp
cmp
mov
pop
mov
pop
adc
jge
stos
imulb
add
jbe
popa
mov
and
cmpb
pop
fildll
jne
mov
xor
lods
ret
add
cmc
xchg
xor
pop
mov
push
data16
adc
jmp
adc
sbb
xor
xlat
cmc
or
sub
rcll
orl
repnz
jecxz
jg
jne
push
into
sub
mov
fmull
push
in
or
xorb
in
stos
push
es
test
xor
lahf
aam
push
xchg
es
add
jecxz
data16
movsb
cmp
mov
dec
dec
dec
sahf
pusha
pop
jle
aad
stos
iret
sub
push
cmp
ds
xchg
jno
lock
inc
es
hlt
jo
incl
mov
lds
sarb
adc
mov
lret
lret
inc
xor
mov
scas
ja
mov
cli
sbb
adc
or
scas
dec
xor
nop
and
and
ds
mov
nop
shll
mov
dec
test
jg
imul
pop
adc
lock
repz
push
pop
sbb
popf
xor
mov
lods
nop
rorl
dec
mulb
xor
push
jmp
cmc
lcall
stos
mov
stos
push
mov
gs
pop
xchg
add
push
nop
xchg
add
int
test
mov
dec
sbbb
pop
stos
mov
jb
push
repz
movsl
sbb
adc
pop
fcom
push
das
add
jp
jg,pt
cmp
jp
mov
ja
cmp
sbb
je
sub
xor
add
sahf
or
xchg
testb
push
roll
xchg
hlt
xor
daa
fstps
inc
movl
loope
inc
mov
pop
dec
dec
sub
jb
sbb
xor
dec
jne
mov
test
call
rorb
js
loop
pop
xchg
xchg
jmp
fnstsw
push
pop
les
or
enter
aaa
ret
lds
add
in
mov
pop
lea
rorl
add
mov
and
or
inc
int3
outsb
add
testb
mov
enter
in
shrb
test
jo
inc
out
iret
jl
dec
js
jle
pop
repz
adc
pop
mov
ljmp
call
cld
jno
into
mov
jecxz
mov
xchg
adc
mov
mov
out
xor
imul
inc
jp
push
insl
ret
rol
mov
sbb
data16
out
push
xchg
mov
cmp
mov
jbe
testl
xchg
push
sbb
inc
popf
mov
push
mov
pop
rcr
jmp
inc
add
clc
or
lret
pop
inc
or
clc
lods
stos
cs
pop
ret
sbb
repnz
add
xchg
fwait
cmp
jge
out
cmp
icebp
push
mov
mov
jne
fadds
mov
bsf
dec
fisubs
int3
mov
or
clc
fadd
inc
add
pop
int
insb
cmpsl
fiadds
or
sub
push
add
inc
maxps
xchg
sub
hlt
or
outsl
push
loopne
popf
ja
mov
and
mov
or
xor
jecxz
gs
fistps
inc
jge
or
mov
mov
int3
jo
push
pop
dec
test
sub
push
mov
aam
xchg
cmpsb
mov
ss
inc
into
push
mov
loope
jae
faddl
xchg
mov
xor
stc
cmc
mov
pop
pushl
mov
test
loop
fimuls
pop
xor
stos
cmp
inc
jo
icebp
jge
mov
add
pop
cltd
or
mov
dec
js
mov
mov
or
loop
sbb
sub
push
xlat
xchg
mov
scas
push
push
pop
push
pusha
sub
mov
in
adc
or
leave
dec
sub
inc
cmp
mov
or
outsl
ljmp
repz
jle
enter
xchg
or
stos
pop
fsubrl
lods
repz
gs
jbe
mov
in
sbb
imul
jg
sub
cmpl
repz
mov
outsl
mov
mov
aaa
inc
testl
cli
mov
aas
mov
aas
push
clc
movsl
pop
sbb
or
imul
mov
dec
orl
dec
and
pop
adc
movsl
mov
gs
pop
ss
sar
ret
or
push
packsswb
xchg
stos
std
roll
xor
mov
mov
scas
adc
mov
mov
loope
enter
add
add
ret
in
xchg
mov
and
ss
shll
out
ret
lods
sbb
fsubrs
lods
pop
xchg
xchg
push
int
hlt
les
pop
and
jp
xchg
inc
les
pop
add
lock
clc
addr16
dec
mov
and
mov
cmp
xchg
mov
jl
dec
jp
daa
out
cmc
sub
outsb
jne
sub
je
pop
in
sbb
into
shll
sti
xorb
jb
lock
loope
mov
data16
cmp
in
push
mov
pop
fs
aas
or
add
lahf
push
pop
jecxz
sti
mov
jmp
rorb
cs
fstpt
cmc
shrb
and
sbb
ds
fsubs
xor
aaa
loopne
mov
pop
in
daa
ljmp
dec
jg
popa
mov
inc
cmp
leave
xchg
imul
mov
adc
xlat
imul
ret
paddw
mov
mov
jbe
mov
xor
fucomip
or
loopne
xchg
into
push
adc
push
es
scas
out
fldenv
rorl
push
push
add
dec
sub
enter
fwait
dec
xchg
cltd
repz
inc
mov
leave
dec
inc
add
lds
xor
mov
nop
lds
mov
subl
push
xchg
movsb
data16
int
les
sarl
pop
rcrl
inc
or
or
imul
dec
lcall
les
loop
or
push
push
push
dec
pop
data16
aam
dec
hlt
dec
dec
jo
lods
incb
cmp
mov
dec
and
enter
sarb
inc
xchg
das
xor
invd
outsb
xor
mov
inc
shll
orl
or
dec
dec
adc
adc
push
xor
mov
push
out
sarl
enter
dec
jge
andl
in
movsl
ss
mov
les
push
and
ds
std
pop
sub
int
cmpsb
decb
stos
sarl
stos
imul
inc
repnz
or
adc
jb
jg
pusha
outsl
dec
dec
adc
in
popa
dec
jns
mov
xor
jl
add
negl
sub
cmp
xchg
jne
dec
jnp
lret
pop
test
xchg
xor
mov
lea
outsl
pushf
inc
cmp
clc
je
push
sbb
pop
cld
pop
mov
pop
push
sbb
push
cmp
fdivs
adc
outsb
mov
test
add
push
cmp
fdivrl
adc
lods
shlb
fcmovb
push
imul
test
push
pop
movsl
mov
push
cmp
and
sbb
xchg
and
push
bound
xor
push
inc
ret
mov
add
iret
inc
das
test
dec
aam
ss
scas
cli
imul
ljmp
or
test
inc
adc
popf
mov
xchg
xchg
js
lret
data16
pushf
sub
jl
xor
push
jbe
jmp
dec
scas
loope
adc
pop
cli
mov
xchg
dec
xchg
adc
in
rclb
push
testl
dec
cltd
out
inc
insl
adc
push
imul
and
test
lcall
mov
fsts
testl
mov
sahf
shl
test
sub
test
movsb
dec
lcall
mov
mov
lds
test
jb
dec
push
je
mov
frstor
jae
jl
mov
movsl
jne
fwait
or
sub
shr
cmp
fstps
scas
filds
or
mov
fstps
arpl
adc
or
adc
lea
and
je
flds
pop
add
enter
das
insb
div
outsb
mov
pop
popf
sahf
enter
mov
lret
je
in
jmp
inc
add
in
jb
add
mov
jmp
ret
pushl
sub
popa
inc
pop
mov
pop
push
ja
enter
push
jnp
or
mov
add
sbb
pop
push
inc
int3
nop
pop
and
ret
loop
outsb
in
gs
mov
popa
imul
jo
dec
mov
inc
dec
les
lea
cli
mov
dec
pop
or
jnp
rcl
stos
push
or
mov
mov
out
lret
and
fwait
inc
dec
and
daa
nop
or
cmpsb
jbe
lock
jmp
popa
movsb
push
mov
push
sub
enter
adc
push
mov
movsb
add
enter
jnp
js
xchg
icebp
ja
adc
pop
pop
iret
push
xchg
mov
push
adc
fstps
adc
cmp
les
imul
lock
push
add
loop
cmp
jae
mov
ljmp
sub
stos
rolb
xor
or
fcmovbe
mov
dec
cs
xor
or
add
testl
mov
popf
enter
mov
popf
in
and
popa
hlt
fisttpll
xor
jae
cwtl
sbb
xchg
stos
repz
sub
adc
int3
clc
rcrb
sub
sti
int3
sahf
fildl
out
push
jecxz
fcoml
mov
ftst
dec
fneni(8087
jnp
xor
mov
mov
idiv
scas
dec
fdivs
add
mov
and
cli
mov
fisubrl
ss
mov
xor
adc
push
sbb
std
scas
outsl
and
aam
jp
mov
scas
sbb
les
xor
mov
xchg
std
sbb
cwtl
cli
cmpl
sub
pop
mov
in
stos
xchg
and
sbb
scas
mov
sub
push
inc
push
sub
jecxz
xchg
push
rolb
insl
jle
sbbb
cmp
push
stc
ds
stos
js
dec
outsb
jle
sub
xchg
nop
sbb
adc
sbb
pop
cmc
cmp
icebp
out
mov
add
dec
into
out
ljmp
or
cwtl
mov
rolb
insl
hlt
into
orl
pop
mov
lahf
add
enter
inc
mov
sbb
ja
push
test
fistpl
ds
xor
aad
xchg
clc
sti
mov
mov
pop
cmc
mov
lock
or
mov
add
inc
fwait
or
leave
fsubs
sbb
jg
and
sbbb
mov
pop
fwait
ja
mov
inc
pop
fstps
loop
jne
push
fdivr
or
into
or
inc
out
xor
stos
in
sub
fdiv
iret
daa
bound
stc
dec
into
sahf
mov
loope
push
mov
test
sbb
shll
jns
mov
cmp
shrl
test
stos
xchg
fsubs
sbb
push
jmp
rcl
dec
inc
and
out
loopne
jle
bound
dec
mov
sbb
addl
cmpsl
push
test
aad
add
movsl
jbe
mov
out
lods
iret
mov
xchg
xor
and
mov
and
mov
lods
pusha
mov
add
lea
pop
sub
dec
lea
dec
mov
and
add
sbb
nop
add
pushf
imul
aam
cmp
icebp
cmp
cmc
test
dec
pop
bound
stos
mov
jmp
xchg
out
inc
rcl
cltd
and
mov
mov
fbld
cmp
in
into
test
sti
push
push
push
jl
sub
inc
insb
add
rcrb
cmp
inc
xchg
repz
out
inc
mov
fldlg2
jnp
and
sti
stc
loopne
push
decl
cmpsb
push
sahf
fcoms
repz
prefetch
or
mov
or
lcall
jb
mov
dec
and
test
add
jecxz
fwait
add
sbb
shrb
xchg
mov
loop
bound
push
stc
jnp
bound
out
in
mov
mov
adc
leave
sbb
mov
sbb
psrlw
cmp
testb
mov
int3
xabort
dec
jl
adc
sarb
enter
sub
gs
inc
ret
ja
add
mov
xchg
jmp
fnstcw
fcomps
mov
sbb
outsb
sub
push
sahf
pusha
div
jp
jbe
in
adc
lods
sub
test
stos
xor
lock
imull
sub
jmp
pop
ljmp
mov
jg
nop
stc
and
add
cwtl
adc
push
cmpsl
das
adc
out
ja
inc
movsb
jle
adc
js
jne
scas
push
jmp
pop
push
imul
in
cmp
ds
inc
mov
jmp
test
lret
std
xor
cld
adc
or
sub
jl
add
mov
sub
sbb
xorb
jg
fwait
scas
sbb
fwait
mov
clc
mov
cmp
mov
pop
xlat
es
in
in
sbb
fcomps
je
in
mov
mov
xchg
mov
mov
ret
adc
out
jae
aaa
xor
mov
cmpsl
push
stc
pop
dec
mov
push
or
inc
jecxz
jmp
hlt
sub
jns
xchg
bound
repz
dec
mov
sub
ss
test
je
lahf
cs
loope
jne
push
loop
stc
mov
mov
or
push
jbe
jp
test
ds
dec
incl
sub
fimuls
pop
cmp
push
das
adc
push
adc
sbb
in
add
mov
cmpsb
mov
sbbl
jmp
cmpsb
lods
aad
xor
push
jbe
and
pop
xchg
lcall
add
mov
pop
cmp
lods
or
or
pop
pop
mov
idivl
mov
daa
das
jmp
ret
or
outsb
pop
ret
cs
xor
dec
leave
mov
lods
vprotq
lret
cmp
js
out
dec
push
outsl
add
jae
mov
mov
rcr
into
movsb
xchg
push
addl
and
int3
js
jno
xor
pop
push
jo
lods
xchg
ret
lea
xor
adc
cmp
push
cmpsb
js
push
sub
es
pop
jne
icebp
gs
xchg
pop
push
out
dec
inc
sbb
pop
xor
mov
inc
lock
das
mov
fstl
sub
int3
leave
fdiv
outsl
arpl
outsb
sahf
push
mov
jno
xlat
xchg
arpl
clc
stos
test
pop
pop
mov
mov
cmpsb
sub
lods
jle
lret
enter
adc
inc
in
dec
cmp
pop
outsb
int3
data16
into
xlat
sub
nop
inc
pop
ret
call
xchg
pop
xorl
lahf
or
call
in
xlat
mov
lds
lods
add
and
cmc
mov
imul
lea
push
aas
test
popf
test
and
xchg
lock
sbb
mov
mov
ret
pop
sbb
nop
adc
mov
icebp
aad
test
inc
xchg
ja
push
mov
outsb
pop
sbb
aaa
lret
lret
lock
arpl
cmpsb
idivl
sbb
mov
shl
and
push
add
aad
xchg
sbb
hlt
mov
xlat
sbb
or
mov
push
icebp
push
mov
xchg
scas
mov
and
pusha
xchg
je
cmp
sbb
mov
pushf
aaa
inc
mov
xchg
mov
lods
rcrb
leave
push
out
pop
stos
jmp
push
insl
xor
sbb
jl
ret
test
adc
push
xlat
fmul
cld
iret
fidivrl
gs
adc
inc
test
sub
inc
sbb
and
mulb
push
testb
jecxz
xchg
mov
jmp
mov
mov
leave
mov
js
jle
outsb
inc
das
shll
popa
add
cmp
insl
sub
mov
jle
push
push
cmpsb
sub
xchg
dec
inc
push
cmp
add
pop
imul
int
stc
push
ds
or
aaa
addr16
mov
stc
sub
jno
in
or
push
mov
jge
imul
jge
mov
out
push
fldl
ficomps
outsb
pop
dec
fcmovbe
pop
mov
ret
dec
fstps
cltd
pusha
add
xchg
ljmp
pop
dec
leave
cmp
lock
pop
dec
push
mull
and
jns
ljmp
xchg
and
pop
imull
pop
add
lods
adc
std
dec
fs
mov
fcmovu
jle
movsb
xlat
sahf
jae
mov
ret
mov
mov
cltd
dec
or
jp
inc
pop
inc
test
sbb
add
fstp
jmp
cmc
add
fdivs
mov
and
xor
hlt
push
mov
std
or
popa
lret
insb
ret
mov
js
pop
dec
popa
lret
pusha
divl
or
mov
in
add
nop
push
lret
imul
mov
xchg
adc
sbbb
jg
fnstsw
push
loop
lods
adcb
push
pop
cmp
inc
adc
mov
sub
or
pop
inc
repz
ja
push
and
shrb
mov
es
jle
into
pop
mov
clc
popf
popa
ret
jb
cmp
loopne
mov
in
out
rorb
jne
sub
adc
repnz
jnp
cmpsl
pop
in
cmpsb
jno
outsb
xor
push
rcrl
inc
mov
daa
call
pop
jbe
adc
cmpxchg
lret
cmp
clc
fiaddl
gs
pop
push
stos
jo
clc
outsl
xchg
mov
call
adc
js
mov
or
pop
add
mov
jmp
xchg
pop
push
aam
jne
xchg
cmp
sub
arpl
push
xor
jne
je
loope
dec
adc
or
add
sub
insb
jmp
mov
shll
inc
xlat
adc
push
jb
les
les
pop
orl
addr16
push
or
jnp
xchg
insl
pop
sub
nop
xchg
arpl
mov
ds
and
inc
addr16
cltd
repnz
pop
pop
xchg
dec
mov
and
xor
pop
mov
aaa
mov
and
insl
icebp
fs
fyl2x
dec
add
mov
and
out
rcll
fnstcw
pop
mov
cli
xchg
fwait
cmp
cmc
loope,pt
inc
cmpsb
lock
lea
repz
pop
rolb
lock
mov
rolb
aam
imul
test
sbb
dec
int3
and
push
jmp
fstpt
out
adc
fwait
push
sbb
mov
les
push
jmp
fildll
mov
and
mov
adc
push
sbb
in
shl
cmp
sbb
out
sbb
gs
repnz
adc
rol
test
les
test
or
adc
push
pop
bound
pop
fwait
hlt
adc
movsb
push
and
cmpsb
and
outsb
mov
dec
xchg
inc
jb
lret
inc
pop
inc
fcmovnu
inc
push
dec
xchg
dec
pop
add
xchg
insl
sbb
push
mov
clc
push
dec
pop
inc
and
or
popa
or
add
int
mov
cli
clc
push
cmp
jecxz
outsl
adc
xchg
in
mov
pop
int3
xor
gs
ret
jl
xchg
rclb
sti
js
pusha
in
cwtl
mov
jmp
outsl
ss
stos
push
nop
movsl
pop
outsl
inc
mov
cmc
in
or
enter
inc
mov
or
sub
xchg
call
sahf
sub
pop
push
pop
and
push
bound
jmp
cmpsb
repnz
je
pop
adc
outsb
xchg
push
ja
or
test
stos
enter
nop
pop
sub
repnz
movsb
das
add
mov
rcrb
ret
add
and
leave
les
jnp
sub
out
jg
xor
adc
mov
nop
cmp
and
mov
pop
push
mov
sbb
lock
in
imul
xor
fsts
cmp
inc
xchg
push
stos
imulb
xchg
and
sahf
psllq
xor
pop
adcl
jns
scas
aas
sub
es
mov
fnstenv
xor
sub
adc
dec
adc
sub
inc
sub
jg
xor
enter
mov
push
inc
or
mull
add
mov
or
add
adcb
std
sbb
and
cmp
scas
repnz
cld
shll
ja
add
dec
rcl
in
sbb
sbb
loope
push
es
leave
in
mov
stc
leave
negb
test
clc
lcall
cmpsb
dec
cmpsb
sbb
lock
mov
mov
dec
negl
pop
adc
inc
mov
imul
sahf
mov
pushf
fcompl
jae
push
jnp
pop
insl
cmp
in
mov
adc
mov
ret
fwait
xchg
ficoml
imull
xchg
scas
xchg
pop
adc
mov
sbb
popa
iret
orb
dec
fldcw
es
xor
sub
ja
adc
inc
ret
cmp
or
sbb
mov
and
xor
sarl
cld
cmpsl
pop
xchg
and
jno
xor
andl
int3
dec
pop
lret
ss
out
jne
inc
sub
sti
or
shlb
mov
inc
jge
aaa
cltd
push
aas
movsl
in
dec
lahf
xchg
arpl
or
push
pop
sbb
icebp
rolb
pop
cli
adc
shrl
push
fs
and
fwait
jp
fwait
dec
mov
mov
fadd
inc
adc
orl
movsb
das
mov
pop
sub
cli
inc
pop
arpl
mov
push
frstor
outsb
popa
dec
jnp
std
orb
sub
test
lret
inc
mov
scas
push
cmp
and
loope
adc
das
fdivs
jp
xor
es
cld
dec
mov
adc
out
mov
rcrl
cs
sarl
bound
xchg
outsl
insl
dec
sub
pop
xchg
sub
jmp
pop
xor
outsb
dec
xchg
minps
jo
enter
xor
arpl
hlt
dec
pushf
call
or
adc
push
in
pop
jb
mov
and
call
xchg
xor
jo
dec
inc
mov
sub
cmc
mov
adc
insl
cld
add
jae
sbb
jecxz
add
add
inc
mull
push
xchg
mov
cmp
call
fisttpll
add
repz
mov
add
scas
adc
aad
mov
mov
xchg
dec
ss
fsubrl
lds
xchg
add
jge
xchg
jl
es
xchg
push
cli
sub
push
jmp
std
mov
jl,pn
jae
lret
jne
insb
out
inc
les
and
out
pop
xchg
sbb
insl
xor
and
pushf
data16
cmp
int3
stos
es
inc
aaa
dec
shlb
scas
mov
add
inc
je
mov
imul
mov
divb
and
cmpsb
nop
dec
js
xchg
sbb
out
push
inc
insl
sbb
mov
inc
xchg
cmc
xor
xchg
pop
jmp
mulb
adc
fiaddl
fisttpl
mov
push
push
pop
adc
xor
std
icebp
lods
imul
jno
jne
packuswb
js
lcall
pop
mov
rcll
jmp
jmp
loop
clc
rcrb
cltd
cmp
xchg
ret
adc
dec
loope
test
add
lret
jae
in
xor
adc
pop
pop
test
push
cwtl
enter
jns
and
mov
mov
add
aad
xor
sahf
stc
lock
mov
in
pop
xchg
lcall
pop
jne
mov
les
dec
sub
sub
sarl
sub
inc
mov
lahf
add
lock
pop
int
scas
jge
sub
shrl
or
xor
mov
psubq
mov
mov
mov
mov
adc
pop
mov
xchg
dec
add
mov
sbb
mov
loop
pop
aaa
jg
pop
xchg
std
lcall
fdivrs
jnp
xor
jl
out
xor
dec
shl
xchg
subl
cmp
or
scas
mov
hlt
lahf
sbb
fstpt
shlb
add
scas
jno
js
cmc
cltd
das
xor
sbb
out
rolb
nop
scas
out
add
add
xchg
imul
adc
data16
xor
sbb
xchg
adc
enter
xchg
push
fwait
sub
das
dec
icebp
fs
test
int3
inc
ds
lret
icebp
les
adc
cmpsl
lcall
mov
lods
adc
xor
sbb
mov
mov
sbb
iret
push
subb
push
mov
push
fildl
and
mov
mov
cltd
xchg
sbb
sarl
push
mov
imul
mov
ret
cmp
add
adc
rcrb
pop
loop
add
cwtl
iret
aaa
pop
pop
mov
push
insb
push
test
pop
insl
mov
mov
fwait
movsb
sar
jg
push
jne
cld
es
cmpsl
incl
pushf
xor
mov
popa
test
inc
pop
insb
jmp
repz
in
mov
mov
nop
out
lcall
repnz
inc
mov
rol
shl
xchg
cld
shl
int
mov
jl
sbb
xor
cmp
rcrl
mov
xchg
push
jbe
das
ja
push
paddd
movsl
add
sbb
xor
sbb
fcompl
outsb
ret
paddd
daa
sbb
stos
jg
stc
in
add
add
pop
adc
pop
or
inc
inc
push
dec
adc
mov
fwait
cld
out
into
fldcw
mov
aam
orl
mov
jecxz
iret
sub
sbb
lods
dec
out
cmpsb
mov
addl
bound
jo
pop
and
loope
das
mov
mov
mov
jo
sti
in
into
sbb
inc
sub
sub
in
fwait
shrb
out
pop
inc
xchg
nop
bound
mov
dec
mov
pop
sub
scas
xor
push
or
sub
test
inc
sbb
pop
int
add
xchg
pop
jno
arpl
out
loop
jne
lods
sub
popa
mov
pop
xor
inc
mov
imul
push
in
jb
jns
mov
movsb
imul
xor
ds
iret
cmp
mov
cltd
imul
sarl
cli
inc
mov
dec
xchg
fwait
ljmp
mov
sub
pop
add
shlb
sbb
popa
rolb
xor
neg
push
xor
pop
add
in
stc
lds
xor
pop
fidivl
scas
push
mov
pop
fmull
xor
pop
dec
or
fistpll
mov
pop
xchg
dec
iret
les
mov
or
and
mov
push
das
xchg
aas
mov
das
lods
push
jns
pop
push
pop
pop
test
xchg
outsl
mov
loop
cmp
adc
push
jl
mov
sbb
push
and
mov
in
in
sub
jp
mov
shlb
sub
mov
inc
fmul
xor
and
out
push
lea
pop
xchg
mov
cmpsl
pop
xor
mov
cmc
mov
idivb
jge
or
stos
push
mov
lret
jo
test
cwtl
imul
jle
cwtl
icebp
mov
sub
shlb
push
test
jp
push
xchg
add
inc
movsl
ss
lret
mov
call
hlt
arpl
cld
push
jmp
in
imul
pop
shll
ffree
cmp
cmp
insl
ret
test
aas
sub
cmp
add
addr16
xor
ret
add
cmp
fmul
out
add
dec
in
adc
push
mov
or
out
xchg
aad
xor
jl
neg
out
pop
inc
cmpl
aaa
adc
sub
xchg
daa
mov
inc
mov
and
loope
inc
cmp
loope
mov
or
and
pop
pop
pop
jecxz
or
enter
ficompl
cmpsl
xlat
loopne
arpl
dec
sarl
shrb
sti
imul
xchg
push
loope
mov
popf
bound
cmp
mov
mov
xchg
adc
push
out
roll
jo
pop
mov
sub
hlt
lcall
jae
inc
test
js
jg
push
popl
aaa
inc
daa
jg
push
xchg
aad
cli
sbb
pop
push
repnz
aas
ror
lcall
push
adc
mov
mov
push
dec
popf
or
inc
sti
lods
push
push
lods
inc
lahf
push
push
xor
or
push
lahf
cmp
loopnew
fiaddl
iret
jecxz
stos
imul
jl
div
inc
inc
mov
mov
aaa
add
pop
xchg
push
xchg
jecxz
mov
pop
fcoml
xor
pop
call
add
adc
int3
cwtl
loop
cli
shlb
xor
iret
cmp
mov
out
clc
pop
insb
cmp
push
pop
gs
mov
out
and
das
inc
decl
jae
lret
pop
lahf
pushf
sbb
call
cs
xchg
sbb
sbb
loop
out
mov
or
dec
lock
mov
dec
and
sub
xchg
movsb
sbb
div
pop
subb
mov
sub
jecxz
push
adc
add
or
flds
mov
test
lahf
sub
arpl
cmp
sub
and
pop
movsl
gs
sub
sub
std
dec
add
loop
shlb
ja
jb
cwtl
jle
cmp
int3
mov
jmp
push
xor
mov
xor
cmpsb
icebp
sub
xor
mov
mov
xchg
cmp
pop
cmp
bound
pop
jb
inc
jo
mov
leave
add
add
imul
mov
lret
push
cmp
addl
sub
pop
mov
mov
je
mov
clc
jl
in
mov
or
rolb
scas
jecxz
pop
dec
testb
aas
iret
mov
stc
pop
sub
icebp
and
pushf
hlt
sti
les
nop
jle
jae
inc
loop
mov
or
mov
cmp
fidivl
xchg
cmp
xchg
addr16
lock
sbb
fcomps
push
mov
popf
mov
jne
inc
pop
lods
inc
ja
pop
or
xlat
daa
lods
leave
sbb
pop
or
jecxz
mov
pop
cmp
cmp
mov
test
or
inc
mov
mull
fcomp
gs
test
in
xor
add
sub
std
sbb
out
dec
pop
mov
popa
ret
fxch
pop
sahf
int
xor
adc
sub
xchg
loope
out
push
outsb
cmp
adc
pop
mov
xchg
add
xchg
out
cmp
cmpsl
fstl
stos
je
pop
add
push
adc
ret
fstl
in
inc
sub
pop
data16
in
loope
ljmp
les
bound
and
lods
shrb
lret
jo
icebp
das
arpl
xchg
pop
mov
jle
xchg
jp
pusha
repz
shrl
arpl
push
in
and
aas
imul
daa
mov
mov
or
jae
pusha
jo
jno
fldl
cmpsl
sub
xor
or
subl
mov
cmpsl
or
sti
aas
fsubrl
jno
cmp
cmpsb
add
sar
mov
insb
mov
je
and
sahf
xor
jl
aas
out
sub
jne
daa
jp
jmp
inc
sbb
sub
mov
mov
sub
je
jle
jle
xchg
mov
leave
nop
mov
cmovo
out
mov
shrl
dec
lds
sub
cmp
mov
fidivrl
xor
arpl
cvtps2pd
push
repnz
push
or
inc
mov
addr16
icebp
arpl
pop
jle
mov
dec
or
sarb
fcoms
sbb
jg
xor
in
mov
ja
scas
int
mov
mov
mov
mov
fsts
push
jmp
jmp
int3
sbb
pop
push
cmp
lahf
jp
sbb
or
cmp
leave
outsl
inc
sarb
fildll
jmp
pop
loopne
jns
cmp
lods
inc
or
mov
aad
hlt
icebp
fistpl
int3
lods
push
mov
mov
dec
jnp
aam
pop
fsub
mov
sbb
xor
cmp
test
pop
ja
jns
add
xchg
out
dec
xchg
jecxz
lcall
xchg
lcall
sbb
or
sub
dec
xchg
imul
jge
imul
jne
push
and
cmp
fdivs
push
popa
imul
dec
mov
sbb
aad
addr16
repz
das
inc
out
mov
mov
bound
stos
sub
outsb
negl
cmpsl
cmp
sbb
insb
fwait
andb
ljmp
pusha
and
fcom
xor
mov
sub
divl
xchg
in
jg
out
leave
mov
repz
imul
inc
jbe
pop
mov
push
and
lret
dec
or
pop
outsl
repz
jbe
mov
push
mov
jmp
lcall
jns
sbb
test
sub
or
xchg
insb
addl
add
sub
ljmp
ljmp
xchg
or
pop
push
or
cs
add
mov
mov
clc
adc
inc
jmp
adcl
ja
movsl
cmp
loope
xor
dec
test
scas
leave
and
jae
ret
mov
popf
mov
int
xor
movb
jo
jmp
add
arpl
and
jl
adc
hlt
xor
push
xlat
gs
push
lds
inc
jge
jbe
mov
aad
std
nop
add
jbe
clc
or
mov
pop
lret
gs
or
das
mov
xor
add
pushf
dec
cld
out
sbb
xlat
sbbl
pop
pslld
mov
shll
add
shrl
push
sbb
xor
into
dec
adc
lods
inc
adc
jecxz
sbbb
mov
sub
mov
loope
call
mov
inc
lcall
jne
sub
mov
mov
adc
mov
add
xor
sbb
adc
xchg
mov
rclb
ljmp
call
cmpsb
adc
popf
mov
mov
push
fistpll
sbb
ret
mov
mov
ss
call
inc
lock
gs
lret
pop
fs
lock
out
out
inc
cmp
mov
jno
iret
push
pop
mov
jb
scas
pop
jmp
shl
jne
jge
fstps
dec
cmp
imul
mov
jecxz
loope
test
rorl
iret
mov
add
push
add
add
repz
adc
or
fwait
adc
jae
lods
or
cmp
and
mov
shl
lcall
jno
push
dec
sahf
subl
call
loop
call
shrb
das
gs
cmp
sti
adc
xor
aas
pushf
push
dec
push
xchg
adc
mov
xor
jp
xchg
sub
lea
sbb
cli
jle
cltd
mulb
jno
in
push
mov
out
xchg
xchg
jb
pop
shlb
cld
sub
decl
and
and
js
fidivrl
dec
xlat
push
jmp
inc
js
xchg
stos
enter
popa
sub
loop
sbb
xchg
mul
popf
push
loope
in
in
loopne
jp
adc
mov
pop
dec
insb
lret
xor
cmpsl
cli
pop
dec
out
pushf
push
loop
ljmp
push
dec
fisubrs
inc
ret
mov
mov
xchg
add
enter
std
arpl
dec
add
cmp
mov
leave
hlt
push
pop
mov
push
push
mov
inc
push
out
andb
cltd
data16
jb
pop
std
gs
test
mov
lahf
popf
jnp
and
mov
ret
mov
es
cmp
sbb
inc
flds
fadd
push
mov
xchg
out
push
aad
mov
push
adc
jecxz
fs
test
add
iret
dec
mov
jge
icebp
daa
jo
push
inc
test
scas
push
xchg
dec
in
cli
lock
xchg
dec
out
jge
fidivl
and
mov
es
loopne
fistpll
jmp
cwtl
sbb
dec
mov
add
loop
cmp
xchg
fsub
and
out
scas
xor
leave
and
popa
je
mov
jmp
lods
lea
and
in
test
xor
push
jl
mulb
iret
push
mov
and
dec
push
ds
insl
ss
loop
and
inc
push
and
ret
mov
in
adc
inc
mov
sub
pop
lret
sarb
adc
lahf
in
jne
aas
pop
test
jo
inc
idivb
mov
fbld
push
jb
imul
imul
push
loope
adcb
nop
sub
lods
push
rolb
movsb
imul
clc
mov
mov
pop
push
push
and
mov
out
xchg
cmc
jmp
insb
out
stc
add
push
xchg
lret
fs
pop
xchg
fdivrs
and
arpl
and
or
cmpsl
xor
sub
dec
mov
and
mov
xchg
repz
into
fisubrs
mov
aad
popa
out
inc
lcall
ret
or
and
mov
xchg
jge
add
xchg
add
fiadds
inc
jns
mov
or
push
outsb
cmpsl
dec
hlt
gs
jg
sbb
repnz
sbb
outsb
shlb
out
inc
addr16
fwait
outsb
ret
xor
aam
neg
dec
jp
insl
adc
and
mov
test
push
into
and
adc
iret
bswap
jl
pushf
mov
cwtl
fdivrs
inc
mov
mov
mov
test
shll
jnp
out
jmp
push
xchg
lds
mov
mov
push
shrb
jo
mov
xor
popf
jb
xchg
into
jge
shll
xor
test
pop
dec
mov
push
lea
xchg
mov
add
and
cmp
lret
cmp
repnz
jl
test
jecxz
in
pop
sbb
shr
stos
stos
jno
addr16
orb
roll
into
cmp
xor
fimuls
xchg
lahf
cmc
lods
push
int3
into
jne
sbb
and
push
inc
mov
ret
adc
fildll
add
mov
in
mov
bound
mov
mov
add
sub
xchg
ret
mov
ret
int3
mov
je
dec
jecxz
dec
mov
cmc
or
idiv
push
cmc
dec
icebp
js
out
mov
cltd
repz
test
adc
pusha
clc
inc
xchg
subb
outsb
stos
mov
popf
cmp
inc
aad
xchg
iret
adcl
push
js
clc
dec
and
fs
mov
pop
inc
icebp
das
pop
xor
or
adc
das
andps
pop
jg
mov
pushf
mov
mov
adc
cmp
shll
jg
aam
sbb
pop
insb
pop
ljmp
push
and
imul
movsb
or
cmp
mov
cmc
cmp
fbstp
scas
mov
ds
xchg
std
mov
gs
test
popl
push
jmp
test
int
loopne
mov
jle
mov
xchg
push
adcl
pop
pop
mov
lock
push
mov
sub
fidivrs
repz
sbbl
cmp
outsl
inc
addr16
pop
out
mov
aad
mov
or
mov
outsl
das
push
cs
push
xor
pop
xor
cmp
movsl
xchg
stos
ljmp
push
dec
mov
ds
pop
lds
xor
or
sti
push
cmp
push
fnsetpm(287
stc
lahf
push
xor
and
pop
outsl
push
sub
repnz
inc
jae
push
adc
stos
loop
pusha
xchg
mov
imul
addr16
xor
mov
pop
adc
or
outsb
int
jno
xor
xor
mov
shr
cmp
das
lcall
pop
xchg
dec
cli
mov
mov
adc
out
mov
pop
pop
sub
add
movsb
stos
insl
je
and
lcall
push
addr16
xor
call
xor
mov
jmp
jno
pusha
dec
fwait
pusha
ret
mull
decb
rolb
sbb
inc
xchg
push
mov
insl
push
push
sub
lods
lds
sub
xchg
cmpl
inc
xor
cmp
insb
mov
xchg
dec
jno
insb
xor
jae
push
add
mov
sbb
icebp
push
mov
mov
test
ds
loop
push
xor
add
lahf
mov
jnp
daa
xchg
mov
dec
imulb
cmp
sbb
mov
aam
je
and
cmp
mov
jno
in
or
push
dec
sahf
mov
xor
daa
adc
gs
pusha
mov
aad
cwtl
in
mov
in
sti
sbb
jmp
aad
add
mov
sub
dec
fs
scas
xchg
sbb
fwait
pop
in
out
jp
loope
lcall
and
xor
push
pop
fldcw
dec
push
int
adc
push
sbb
dec
xchg
mov
lahf
push
cmp
ljmp
scas
mov
pop
es
aad
mov
test
mov
sub
lcall
icebp
fiadds
lods
lret
jl
xor
inc
pop
in
mov
in
push
rol
mov
jg
in
push
loop
sbb
sbb
jmp
or
sbb
sub
imul
nop
es
jecxz
lcall
dec
and
ret
xchg
negl
js
inc
aam
mov
lods
rcrb
sbb
nop
mov
test
mov
push
xchg
in
sti
mov
faddl
sub
xor
int3
aaa
and
adcl
imul
in
jmp
dec
xchg
insl
dec
pop
in
movsb
inc
rcrl
pop
and
jmp
inc
rcll
dec
jmp
mov
fwait
outsl
add
xor
inc
sbbb
adc
cmp
movsb
dec
mov
or
loop
out
ror
adc
loopne
out
mov
sbb
jo
subb
adc
roll
push
daa
jbe
or
xor
lock
sbb
pop
inc
aad
cld
fldl
scas
sub
inc
aas
add
nop
pop
arpl
sbb
dec
stos
in
jmp
jae
ss
adc
sbb
xchg
mov
mov
incl
dec
mov
lcall
sbb
mov
inc
cmpsb
push
dec
ret
push
mov
jno
xor
cltd
cmc
sbbb
push
subb
das
orb
leave
inc
jge
decl
push
in
ret
mov
test
aaa
cmp
pop
rcl
sarb
xor
xlat
xor
fwait
js
inc
ds
and
enter
mov
out
xor
pop
hlt
xor
jnp
jecxz
push
jns
xchg
fdivrp
popa
pop
pop
lcall
in
pop
sub
in
mov
jbe
popf
jnp
mov
in
ja
adc
stos
push
adcb
push
outsl
mov
aad
xor
movsb
sbb
inc
mov
and
outsl
pop
jae
idivb
in
fistl
xor
xchg
outsb
aas
inc
cmp
fsubs
jo
ret
pop
popa
add
lsl
xor
or
or
adc
mov
xchg
fldcw
mov
int3
push
pop
jae
mov
test
or
pop
dec
adc
and
mov
stc
pop
dec
mov
daa
stos
xor
or
or
clc
pop
and
xor
jae
cmp
add
test
sbb
insl
sub
insb
adc
adc
xor
mov
pop
ja
inc
or
or
daa
aaa
sbb
mov
xor
lods
shl
int3
sub
sub
xchg
inc
xor
sarb
and
xchg
loop
shrl
mov
mov
test
sbb
inc
mov
fisubrs
js
int
scas
pop
rcll
sub
jmp
test
int
clc
in
dec
push
scas
xchg
out
pop
inc
bndldx
xor
mov
decl
std
lea
pop
mov
pop
jo
xor
or
cmp
jp
icebp
push
out
xchg
das
into
xchg
cmp
clc
loope
or
call
push
cltd
mov
loopne
insb
dec
mov
sti
add
and
mov
mov
or
dec
pushf
cmpsl
ds
mov
mov
cmp
sbb
add
sub
fwait
push
jg
sub
jmp
loope
fcmovnbe
mov
outsb
sbb
orl
mov
and
popa
bound
cmpsb
xor
fnstsw
loop
inc
and
cld
push
cltd
dec
es
add
aam
adc
movsb
mov
jmp
loope
push
push
sub
mov
cwtl
mov
push
fstps
inc
xlat
jp
mov
aas
enter
fs
and
ret
mov
pop
shll
jb
lods
mov
fs
out
jp
pop
jbe
insl
dec
mov
loopne
pop
jae
and
cwtl
movsb
pusha
add
mov
dec
push
movb
subb
repnz
lds
or
js
sbbb
and
mov
lret
hlt
mov
dec
nop
nop
push
cmp
out
add
cmp
push
loope
or
movsl
je
mov
lret
mov
and
push
inc
cmp
xor
cld
jo
jmp
bound
jp
pushf
mov
sbb
popf
fcmovnu
jp
cmc
lods
jl
dec
mov
push
xor
jp
gs
mov
movsl
mov
dec
mov
popf
std
xchg
jmp
bound
mov
insb
mov
dec
cld
jp
lds
cs
inc
mov
mov
pop
xor
sbb
cwtl
jmp
out
imul
ljmp
cmpsl
sub
js
pop
xchg
lahf
hlt
insl
pop
sbb
sub
push
aad
mov
xor
cmp
cmp
in
pushf
ret
sbb
outsl
pushf
inc
adc
pop
mov
xchg
jle
decl
mov
mov
sub
xor
jnp
inc
jl
adc
jge
testb
inc
stc
dec
dec
das
xor
call
fwait
xchg
arpl
xor
shlb
fldl
mov
inc
stos
xchg
push
mov
xchg
shlb
or
insb
test
lret
scas
sti
iret
fs
jmp
mov
into
outsb
add
pop
jmp
push
lret
mov
sbb
ja
in
pop
sub
mov
and
mov
out
add
js
mov
inc
ljmp
jecxz
fwait
cmp
ss
es
mov
lcall
xchg
add
xchg
in
repnz
mov
jle
arpl
push
jge
sbb
test
sbb
jbe
ljmp
out
jecxz
je
jne
inc
nop
sti
sub
movsl
rolb
sub
ret
das
ret
add
aaa
mov
cmp
cmp
pusha
in
dec
nop
subl
pop
jl
xor
cmp
ret
aas
or
mov
mov
inc
inc
or
fwait
adc
inc
hlt
adcl
iret
jae
mov
and
dec
lret
sahf
cmc
out
push
cmp
jns
shrb
repnz
dec
inc
outsl
test
addl
xchg
ss
push
jp
or
in
in
inc
adc
mov
mov
push
adc
leave
push
int3
push
mov
fcmovbe
orl
loope
gs
cmp
imul
xchg
mov
xchg
xor
xor
lret
pop
aas
dec
pop
cmp
and
repz
movsb
push
lea
mov
dec
leave
dec
add
mov
mov
jl
dec
loop
mov
lods
fsubrs
loope
push
icebp
mov
mov
scas
add
inc
xor
cli
mov
mov
sub
lds
sbb
jnp
xchg
mov
inc
dec
jno
out
icebp
add
push
pop
cmp
nop
arpl
stc
sub
enter
out
cltd
inc
mov
pop
orl
jo
iret
inc
aas
aas
dec
in
sub
add
pop
aaa
sub
and
dec
adc
push
lock
adc
decb
lods
les
mov
mov
out
pop
insb
insl
aaa
data16
lods
jo
mov
sub
xchg
mov
cmp
out
shll
mov
loop
push
pushf
cwtl
ficoms
xor
daa
mov
dec
pop
adc
push
add
inc
scas
out
arpl
aas
inc
movsl
repz
xor
jns
call
dec
aad
lret
ret
cmp
dec
mov
insb
push
sbb
lret
shlb
lcall
mov
cmp
into
les
xchg
cmp
xlat
lea
inc
hlt
jmp
cmp
lcall
mov
in
jo
iret
push
test
fcomps
lods
mov
cmpsl
stos
sbb
sti
xchg
push
adc
lock
pop
add
icebp
sub
mulb
bound
cmp
jbe
adc
jg
fists
xlat
icebp
xchg
cwtl
pushf
xor
jg
lcall
arpl
mov
sbbb
insb
push
mov
lret
cmp
adc
xchg
fadd
jb
in
jg
jge
fldl
mov
mov
jo
push
std
sbbl
or
out
insl
arpl
add
scas
sbb
mov
sub
dec
imul
jecxz
mov
add
push
add
aaa
dec
cmp
and
cli
in
cmpsb
sbbl
lock
fidivrs
adc
cmc
sub
bound
lcall
and
mov
xchg
fs
push
dec
mov
leave
jecxz
pop
shlb
stc
lods
cld
push
or
pop
mov
pop
cmc
and
push
shl
imul
cmp
and
clc
nop
fistpl
jns
pop
stos
outsb
and
ret
xlat
jns
pushf
jb
adc
push
fmull
jg
jb
mov
push
cmpsb
shrl
cltd
je
xor
out
and
push
sbb
sub
xor
mov
ret
inc
gs
dec
jp
sbb
in
into
imul
jl
and
cmp
mov
sbb
mov
je
fmuls
adc
sbb
imul
filds
subb
lret
lea
fidivrl
mov
push
pop
stos
aad
mov
xchg
cmpsl
push
cmp
inc
push
shlb
call
cmp
fstps
out
jbe
push
pop
lret
push
xchg
push
jg
pop
push
ljmp
inc
adc
jb
inc
mov
jns
sbb
mov
gs
divl
xorb
mov
inc
ss
test
xchg
sbb
fisttpll
add
shrb
cltd
icebp
leave
mov
sahf
push
andb
dec
inc
ror
dec
shrb
das
aaa
loope
fs
xchg
jno
in
insb
cmp
and
cwtl
insb
mov
xchg
jecxz
or
add
xchg
std
int
into
mov
loop
scas
popa
mov
mov
lcall
ds
add
mov
cmp
out
popa
mov
inc
aaa
jnp
cmp
jg
or
xchg
mov
or
mov
inc
das
into
daa
mov
lret
sbb
enter
xor
cmp
inc
xchg
lahf
mov
adc
sub
ja
push
mov
push
dec
or
adc
pop
iret
mov
in
or
pop
in
in
fnstenv
sub
dec
out
sub
xor
jbe
dec
mov
push
leave
sub
in
pop
jo
dec
ljmp
jecxz
xchg
in
andb
sub
test
xor
in
loop
testb
mov
fcmovb
std
icebp
mov
push
cld
rolb
fisubs
in
jnp
insl
fdivl
jno
sbb
xor
add
xor
xor
add
std
pop
loop
je,pt
sbb
dec
shlb
hlt
push
lods
testb
lret
inc
push
inc
sub
adc
roll
adc
int3
mov
pop
cltd
push
push
jecxz
cmp
inc
out
adc
sbb
mov
cmp
test
stos
mov
inc
dec
addr16
sbb
int
adc
jae
aad
add
adc
fcoml
fnstsw
pop
jecxz
xchg
in
inc
adc
test
xchg
pushl
inc
jae
daa
out
call
mov
insl
pop
mov
pushf
push
test
push
pop
dec
into
dec
shrl
pop
aam
mov
sub
popa
sbb
test
negb
out
dec
adc
jg
fmul
cmp
dec
xchg
cmp
hlt
mov
and
test
inc
stc
mov
js
jnp
ja
sub
incl
outsl
mov
dec
icebp
jle
or
stc
popf
stc
or
lds
in
sub
xchg
xchg
xor
sub
xlat
push
rorl
ds
jp
or
fwait
inc
sbb
and
lods
mov
jmp
repz
rclb
addr16
cmpsb
es
and
aad
lret
mov
insl
idivb
pop
jae
and
push
pop
int3
cs
mov
mov
ss
dec
pop
and
iret
dec
int
push
fsub
out
add
repz
stos
jecxz
clc
fidivrl
jmp
std
es
mov
pushf
or
sub
mov
push
add
or
or
fiadds
inc
jmp
divl
xorl
lahf
dec
test
js
dec
and
leave
loope
ret
ja
jno
enter
jle
sub
xor
xchg
push
mov
repz
jbe
adc
push
mov
lret
pop
aas
pushf
jg
ss
xor
in
insl
aam
add
pop
icebp
xor
and
std
cmp
orb
pop
setae
test
sbb
fists
divl
pop
push
xor
xchg
test
call
pop
pop
dec
repz
aaa
push
mov
adc
pop
movsb
lds
sub
cld
mov
mov
incb
pop
popf
stos
mov
out
add
mov
in
cmpsb
pop
and
les
pop
ljmp
xlat
mov
repz
adcl
mov
test
pop
sub
iret
call
sbb
dec
lcall
and
push
jge
incl
bound
jae
sbb
mov
push
mov
out
testl
or
fidivrs
insb
in
mov
shl
ficompl
ret
cmpsl
add
push
insb
sahf
mov
clc
push
imul
ja
imul
dec
sbb
and
cmc
fbstp
pop
fistpl
lcall
add
mov
jne
scas
add
scas
sbb
add
in
push
push
aaa
in
testb
cli
fdivrp
or
rcrb
data16
cwtl
mov
fucomip
mov
jmp
push
dec
inc
push
ret
xlat
inc
popf
dec
xchg
insb
push
mov
mov
nop
mov
adc
xor
adc
je
inc
push
nop
sahf
jo
jecxz
xchg
push
xchg
loopne
sbb
jl
xchg
arpl
repnz
pop
in
push
loopne
int
lret
jg
stos
in
sti
pusha
pop
das
rcrl
imul
sti
inc
in
cmp
hlt
out
dec
push
xchg
cmc
hlt
lcall
xor
jle
push
xchg
mov
add
dec
sub
bound
push
pop
or
out
sbb
fbld
in
xor
add
push
icebp
pop
fs
push
fimuls
lret
ja
mov
fsts
push
adc
cli
push
insb
inc
jb
and
lcall
or
xchg
jle
mov
adc
out
or
test
inc
inc
xlat
ret
jmp
mov
cmpsl
xchg
jne
jle
mov
mov
xchg
jnp
out
push
fsubrs
sub
jmp
mov
jecxz
add
xor
or
mov
and
add
rorl
stos
xor
mov
cli
in
mov
sub
std
movsb
gs
xchg
and
fcoml
cmpsb
loop
pop
mov
inc
push
pop
cmp
ljmp
es
pop
push
lds
popf
or
ret
add
dec
divb
mov
in
mov
fucomp
and
fistpll
cmp
mov
jl
test
push
add
mov
xor
add
hlt
mov
test
xor
jbe
pop
xor
mov
mov
dec
mov
fs
dec
movsl
cld
jbe
adc
or
cld
rcl
mov
dec
xchg
inc
stc
ljmp
jno
movsb
lods
dec
subl
adc
add
add
jo
xchg
ljmp
push
daa
leave
cli
lods
iret
sarl
inc
inc
jae
xor
xor
test
push
fldcw
scas
dec
orl
xlat
rorb
mov
mov
cmpb
int3
jnp
dec
ss
cmp
pop
cmp
push
inc
cld
add
fcomps
jb
test
lds
pop
arpl
roll
adc
mov
fadds
xorl
addr16
das
ja
xor
pop
xor
lods
xchg
sub
imul
imul
pop
inc
xchg
and
dec
movsb
sbb
mov
daa
or
loop
outsb
aam
aam
out
out
call
cs
sub
out
inc
sub
mov
in
xchg
add
jbe
xchg
fcomps
xor
stos
mov
mov
jge
xchg
push
lret
test
cs
xchg
adc
jo
daa
or
cmp
push
gs
clc
add
test
xchg
mov
mov
xchg
sbb
cwtl
sub
mov
loopne
insb
mov
pop
rorl
xor
xor
xchg
mov
xchg
and
pushf
xchg
or
push
bound
dec
imul
mov
lods
iret
cmpsl
mov
imul
sub
mov
xchg
and
imul
dec
hlt
cmpsb
andb
mov
pop
pushf
inc
idivb
cmp
add
outsb
out
test
push
push
xchg
dec
inc
jno
fs
xchg
or
bound
sub
shll
or
mov
jg
mov
lea
and
sub
xor
cmpsb
xchg
mov
cmp
jbe
pop
dec
add
jno,pn
push
into
lods
add
xor
stos
mov
rorl
cmp
ljmp
push
jle
stos
cld
mov
mov
push
scas
in
adc
push
add
add
inc
xor
idivb
pop
cld
sets
add
outsb
insl
lret
or
pushf
in
mov
fs
xchg
and
xor
ds
in
outsl
loope
std
dec
daa
movq
mov
loope
insb
jl
ret
adc
push
pop
arpl
nop
jo
addb
mov
jg
jbe
lahf
dec
xor
loope
fidivl
adc
jge
out
sub
mov
mov
pop
lock
lds
ds
rcrb
mov
lea
int3
cmpsl
fdiv
fwait
aam
das
daa
sub
bound
pop
int3
xchg
enter
clc
sbb
xchg
and
fisubrs
jl
jb
inc
lock
aas
sbbb
xchg
imulb
repnz
add
xorb
or
lahf
or
mov
clc
mov
jnp
mov
jg
add
jge
mov
call
in
and
cmpsl
jo
cld
xchg
jb
or
mov
shlb
mov
sbb
punpckldq
dec
lahf
or
cld
inc
shll
pop
hlt
enter
mov
gs
cwtl
jbe
mov
cmp
je
fbld
test
mov
jl
pop
dec
outsb
stos
inc
dec
jmp
push
fdivs
in
jnp
mov
cli
enter
cli
push
fisttpl
or
cmp
inc
and
arpl
and
add
imul
out
jb
mov
ficoms
ljmp
push
pop
or
test
inc
out
fdiv
mov
push
ss
pop
mov
xor
mov
leave
mov
pop
inc
push
ja
dec
aad
scas
inc
movsl
imulb
mov
mov
movsb
xor
push
vsubps
adc
xchg
incb
jae
ror
xchg
add
fs
sub
hlt
and
xor
outsl
jo
sub
mov
push
in
xor
sahf
mov
mov
add
or
lret
jo
popa
popf
stos
or
adc
stc
inc
mov
jecxz
popw
push
xchg
cli
push
loopne
push
sbb
and
jae
int
mov
push
pop
jo
push
loopne
cld
outsb
adc
stos
cmp
repnz
adc
push
call
jle
mov
addb
mov
aad
dec
dec
xor
push
addr16
out
lock
jmp
ror
cltd
or
rorb
popl
insb
jno
enter
test
test
push
ret
test
repz
cld
xchg
mov
nop
outsl
jmp
or
add
js
mov
lea
pop
test
test
lea
nop
push
cmpl
clc
cmp
inc
pop
pop
or
and
mov
and
or
xor
jecxz
in
out
sub
push
xchg
inc
loop
xchg
push
scas
out
adc
jbe
aam
aad
test
mov
push
mov
and
pop
mov
cli
jge
dec
fdivr
dec
test
fstl
scas
pop
jne
repz
arpl
stos
jns
fwait
popa
divl
xor
add
out
sbb
pop
fsubl
sbb
enter
ror
data16
xor
fidivrl
or
das
and
pop
push
lret
cmp
fstpl
pusha
or
movsl
imul
and
mov
or
aaa
sbb
xor
loopne
into
mov
cs
fdivrs
mov
scas
and
add
inc
sarb
push
cmpsl
mov
cld
test
lret
and
or
push
xchg
fisttpl
out
sub
test
scas
andl
cmpsb
xchg
fsubr
mov
out
cmp
shlb
int
xor
pushf
out
dec
cmpsl
pop
xchg
dec
mov
in
mov
sti
pop
xor
adc
into
rorb
push
insb
pop
sarb
xchg
sbb
lock
xor
test
cmpl
cs
lods
jecxz
repz
and
nop
icebp
addr16
xchg
fisubrl
cmc
sbb
dec
aaa
rclb
or
adcl
les
mulb
mov
loopne
push
fwait
out
into
sbb
push
out
and
xlat
hlt
aas
popf
idivl
sbb
inc
fnstenv
in
xor
adc
jp
jp
pop
jnp
push
push
je
leave
adc
jmp
js
mov
cmpsb
jns
push
xchg
clc
test
les
xor
mov
stos
add
mov
addr16
push
je
push
bound
xchg
xchg
mov
push
xor
sbb
fiadds
xchg
jae
popa
push
push
sub
das
inc
xor
xchg
jle
dec
xchg
xchg
in
cld
stc
lcall
sub
mov
out
test
adc
aam
scas
xor
sbb
and
and
mov
jb
sub
lret
loop
push
cltd
nop
lds
adc
dec
mov
std
in
sub
int3
pop
inc
sti
lds
lcall
jb
xchg
out
xlat
call
pop
fwait
call
imul
sahf
or
jns
stos
popf
inc
push
outsb
or
iret
dec
jmp
bound
cmp
and
or
push
ja
shrl
pop
aam
insb
loop
mov
and
ljmp
mov
mov
sub
mov
sub
jmp
aam
pop
inc
cmpsb
pop
xchg
push
cmp
pusha
iret
push
xchg
inc
sahf
int3
push
xchg
lret
jp
dec
push
jno
pop
sub
jno
or
mov
or
push
popf
or
dec
jnp
rcrb
cld
testb
jne
cmc
data16
or
xchg
mov
add
push
mov
fs
push
fildl
cmp
int3
and
out
jns
ja
cld
cmp
dec
and
jno
imul
fdivrs
outsl
mov
in
inc
aaa
sbb
xchg
xchg
data16
rorl
shr
std
mov
out
insb
mov
jecxz
out
mov
js
adc
push
sub
data16
push
out
pop
inc
sti
sub
push
ljmp
addps
add
cwtl
adc
inc
cmp
mov
and
popf
loopne
std
je
pop
sbbl
mov
and
pushf
add
jo
mov
push
add
cmp
pusha
fdivrs
xor
rorb
enter
xor
cli
mov
movb
in
js
loope
sub
lods
sbb
sbb
popa
loopne
jo
mov
out
popa
in
mov
sbb
adc
stc
shl
push
jae
dec
jae
into
jg
dec
ljmp
outsb
es
sub
repz
cmp
std
js
out
add
push
int3
and
test
mov
mov
xchg
hlt
pop
loopne
mov
imul
xor
xchg
movsl
push
lahf
mov
push
movsl
inc
imul
mov
arpl
mov
mov
jcxz
idivb
xchg
jg
sub
lock
push
gs
fdivrs
sahf
cli
faddl
lock
insl
daa
adc
test
xlat
xor
mov
loopne
pusha
sub
mov
pop
push
jnp
adc
dec
mov
pop
xor
lcall
sarl
in
or
test
fists
sub
ret
rcll
xor
es
ljmp
xorl
in
sbb
cmp
pop
jo
shl
pop
into
setns
divl
jns
mov
test
lahf
push
es
pop
pop
xchg
jae
mov
aas
sbb
dec
add
xchg
rol
or
mov
in
jecxz
sbb
jg
imul
testl
cld
adc
hlt
jo
test
pop
mov
mov
loop
dec
out
dec
sbb
mov
xchg
sub
iret
loop
mov
mov
mov
jmp
shlb
jns
adc
jo
xchg
fdivs
push
xchg
in
push
test
push
xchg
inc
or
cmpsl
cmc
enter
pushf
mov
or
lahf
ret
push
les
icebp
imul
nop
inc
xlat
decl
jno
pop
xlat
mov
xchg
inc
xchg
aam
outsl
fs
aas
pusha
jae
in
fcoml
xchg
les
fistpl
add
scas
mov
test
das
shll
inc
add
fistps
add
addr16
ljmp
mov
mov
xor
cwtl
ljmp
mov
mov
mov
leave
out
movsl
js
jnp
and
mov
jo
mov
test
sub
xor
jo
mov
dec
mov
repz
int3
es
lcall
mov
pusha
inc
int
xor
outsl
or
push
cmp
jg,pt
icebp
pop
movsl
dec
mov
sti
sub
and
inc
insb
and
ret
sbb
sbb
cmp
jge
xchg
cmp
mov
movsl
jbe
scas
sub
in
andnps
add
fisttpl
lahf
mov
leave
and
dec
push
scas
lea
mov
cltd
jbe
push
dec
rorl
ret
out
mov
filds
jns
insl
dec
and
clc
jmp
scas
adc
imull
push
or
or
lret
lock
dec
clc
mov
jge
andb
push
aas
pop
mov
xchg
mov
adc
mov
lcall
lods
cmp
test
fistps
pusha
push
lea
addr16
lahf
movsl
mov
ds
leave
addr16
mov
insb
add
loope
mov
adc
cmp
adc
nop
fidivs
mov
mov
divl
fdivrl
or
sub
rorb
clc
shll
mov
ja
inc
aas
mov
mov
mov
add
lcall
sbb
test
jmp
cmp
outsb
leave
scas
jle
jno
cmp
pop
sbb
mov
mov
repz
aad
rcl
xor
and
sarl
lds
mov
jmp
mov
stos
inc
scas
stos
adc
pusha
xchg
jp
dec
xchg
add
sub
push
out
popa
or
pop
out
out
sbb
out
cmpsl
jnp
das
test
int3
pop
push
lods
mov
inc
pop
popa
sbb
sub
push
sub
mov
sbb
jns
push
neg
mov
and
lods
in
loop
xor
into
cmp
pop
jle
ss
xchg
inc
sub
shl
scas
popa
in
psubw
or
movsl
aad
in
std
sub
nopl
cmpsw
jns
inc
xchg
xlat
je
shrl
leave
adc
push
fisttpl
pop
adc
incb
xlat
jge
pop
xchg
mov
hlt
jo
out
push
lcall
xor
or
push
cmc
adc
jecxz
into
lret
lock
lds
or
add
and
jl
mov
int3
lahf
xchg
mov
decl
pop
mov
add
lock
fprem
fisubs
fs
lret
clc
aad
jmp
sub
movsb
pop
mov
and
dec
xor
dec
sarb
lods
mov
fs
jns
jno
int
or
cmp
incb
arpl
leave
sbb
dec
andb
addb
loope
cwtl
imul
fisubs
fwait
jmp
ret
scas
pop
sbb
popa
jmp
mov
bound
lcall
pop
xchg
jle
int3
jo
mov
mov
ss
mov
lock
ss
icebp
in
sub
mov
mov
imul
lds
dec
pop
fildll
sbb
or
sub
push
jmp
cli
xchg
sti
and
out
mov
cs
push
add
sub
fcom
xchg
adcl
xchg
dec
stos
sti
add
xchg
mov
sub
cli
sahf
fcoms
ret
outsl
cmpb
scas
ljmp
xor
mov
shrb
mov
mov
lret
movsb
subb
mov
sbb
sub
sub
inc
jnp
push
push
cli
mov
push
das
add
push
mov
and
mov
pop
out
in
out
lcall
mov
ret
sub
ds
mov
fs
call
dec
scas
mov
movsb
jno
enter
lcall
jb
mov
cli
sarl
in
mov
into
cmp
je
adc
inc
and
shll
jl
push
sub
inc
shlb
dec
in
pop
pop
sub
ja
daa
xor
adc
push
push
and
insb
xor
movsl
les
clc
repz
push
fldt
cwtl
xor
ret
icebp
pop
popf
nop
popf
insl
ss
insl
fstps
mov
inc
dec
stos
mov
in
mov
adc
mov
add
ljmp
mov
sbb
mov
imul
or
movsl
mov
xor
test
xlat
notb
push
loop
shrl
xchg
adc
jmp
cmp
out
pusha
and
and
mov
dec
adc
jle
hlt
adc
pop
aaa
aaa
cwtl
sub
rcr
sub
adc
cmp
push
repz
aad
push
in
out
cmp
mov
mov
imul
pop
push
mov
imul
mov
leave
stos
bound
mov
aad
and
fisttpl
dec
inc
scas
xchg
dec
sub
jl
cmp
xchg
loopne
stos
pop
into
xor
push
mov
rol
mov
ja
aam
dec
outsb
clc
xchg
dec
insl
mov
xor
ret
jno
lcall
mov
nop
stc
push
pop
add
ljmp
outsb
dec
repnz
adc
jg
jae
fwait
sbb
xchg
int
mov
ds
daa
sbb
in
cld
ficomps
jge
add
adc
lock
jae
pop
add
test
xchg
cltd
add
cmp
mov
dec
inc
push
outsb
or
push
mov
pop
inc
or
push
rorl
mov
pop
push
mov
jns
xchg
and
and
and
mov
xor
pusha
dec
sbb
jg
pusha
adc
xchg
dec
pop
pop
dec
mov
sti
aam
sbb
sub
pop
mov
fcoms
shll
test
or
mov
in
jnp
leave
lret
jnp
or
es
xchg
mov
outsb
movsb
outsl
jecxz
rcrb
cmpsb
out
adc
aam
int
inc
mov
xor
dec
adc
push
mov
sarl
jge
push
mov
mov
sbbl
jne
sar
and
push
lret
lahf
pusha
mov
shl
lock
je
or
fldt
hlt
mov
jg
add
sti
xchg
stos
inc
pop
mov
subl
push
lahf
test
cmpsb
mov
sti
mov
outsl
shr
adc
fs
inc
push
jge
dec
movsb
and
sub
jge
fisttpl
xchg
push
andl
or
in
adc
jnp
mov
mov
cmp
addb
dec
popf
jae
jno
pop
fidivrs
cmp
sbb
cmp
in
inc
or
scas
mov
fistpl
jo
gs
and
test
insb
xor
and
inc
jl
leave
or
push
or
int3
xor
jb
sub
xchg
lcall
mov
in
outsl
add
push
pop
sbb
fstl
jnp
inc
lahf
and
pop
cwtl
test
push
scas
aaa
insb
mov
push
lcall
mov
inc
sub
into
sub
popa
cs
mov
aas
inc
ja
xchg
int
imul
add
inc
out
push
jmp
mov
xlat
mov
int3
pop
jae
pop
sahf
dec
xor
ja
dec
pushl
outsb
jge
sub
pop
rcrb
mov
lret
pmullw
add
out
sbbl
les
test
sbb
xor
or
sbb
sbb
xor
pop
rcr
pop
add
pop
pushf
adc
mov
pop
dec
mov
fisubrl
aaa
fdivrp
dec
in
adc
xor
enter
mov
jae
mov
stos
scas
rol
shrb
subb
repz
pop
hlt
rcll
add
mov
add
inc
stos
or
adc
fimull
push
scas
sbb
clc
or
movsl
outsl
push
ljmp
clc
arpl
dec
pop
pop
call
sti
mov
test
pushf
loope
push
dec
push
rol
add
push
jne
push
aam
jmp
jno
xchg
sbb
cmp
inc
xchg
xchg
jnp
out
inc
inc
sub
or
xor
dec
xchg
loopne
and
or
das
jno
test
outsb
sbb
cmp
xor
jno
rcl
jge
idivl
les
pop
adc
mov
loop
out
push
cmp
lea
outsl
add
jbe
ret
mov
lret
pop
outsb
cmp
fistl
mov
xor
sub
out
and
fs
sbb
inc
push
mov
or
cmp
dec
movsl
dec
mov
je
outsl
or
into
divb
push
xchg
rorl
test
xor
cmp
fisubrl
scas
and
cmpsl
or
inc
mov
xchg
lcall
pop
pop
das
and
aas
daa
mov
push
xchg
imul
daa
add
mov
xchg
scas
call
dec
jp
xor
pop
mov
push
cmp
push
mov
in
jnp
and
jne
inc
dec
add
mov
aaa
jecxz
loope
roll
iret
xor
jno
repz
sbb
in
cli
out
daa
sbb
ljmp
sbb
dec
lret
stos
inc
dec
es
out
jbe
mov
lea
mulb
cmp
movsb
idivl
cmc
lret
rcl
mov
pop
and
jg
mov
adc
pusha
sub
add
gs
mov
js
fbld
cwtl
mov
pusha
rcrl
inc
jbe
imul
in
in
or
jnp
sbb
outsl
dec
addl
jbe
mov
lret
jmp
mov
cmp
mov
popf
nop
mov
imul
cli
push
cltd
mov
inc
jb
cmpsl
int
mov
inc
adc
stc
sti
cltd
scas
inc
cltd
pushf
dec
loopne
mov
sbb
lods
stos
jmp
xlat
fiadds
jb
xor
in
add
cs
inc
xchg
mov
cmp
mov
jle
in
jne
xchg
popa
insb
inc
cmp
movsl
adc
and
insb
adc
cmp
add
inc
mov
shll
data16
xorb
dec
psllw
inc
daa
shll
in
arpl
je
jmp
int3
shlb
mulb
cltd
jne
aaa
loop
inc
push
popf
xchg
sub
lea
cld
adc
out
mov
fisubs
cli
sub
stos
mov
in
shll
inc
adc
dec
sbb
js
add
xor
lahf
xor
inc
mov
jmp
dec
repnz
adc
rcll
push
cmovo
ja
xor
sbb
or
or
ret
xchg
pop
imul
cmp
ds
cmp
pop
xchg
pushl
mov
jae
jecxz
mov
je
fyl2x
movzwl
cmpsb
pop
insl
jne
fs
divb
or
bound
xchg
push
nop
and
in
adc
cmc
jp
xlat
mov
push
insb
imul
xchg
popa
gs
mov
sahf
jg
add
xchg
inc
fdivp
jmp
pop
sub
lret
jge
dec
rolb
push
fwait
jp
add
repz
popf
sub
imul
dec
add
sbb
lds
mov
lret
shlb
fbld
pop
mov
ds
inc
fbstp
adc
out
lcall
dec
adc
sub
std
inc
popf
mov
dec
ficomps
push
pop
push
outsb
pop
mov
mov
inc
adc
cld
cmp
cwtl
pop
aam
cmp
push
imul
and
push
and
sti
or
or
pop
push
aaa
out
cli
sbb
pop
pop
mov
movsb
mov
lea
in
jb
pop
or
adc
loopne
cmp
or
pop
andl
pop
scas
cmpsl
rorl
inc
mov
jo
xchg
arpl
ja
fcoml
push
les
in
mov
jge
jbe
in
jecxz
stc
pop
fwait
pop
add
sbb
cs
scas
stos
jmp
cld
mov
adc
and
adc
jle
lea
ja
fs
mov
mov
jbe
xchg
xchg
push
lds
out
inc
lods
inc
jle
mov
ret
insb
xchg
iret
dec
jl
rorl
xor
pop
adc
pop
adc
imul
mov
dec
mov
sub
dec
mov
xor
inc
into
enter
mov
mov
ret
mov
aad
in
aam
add
or
and
and
inc
mov
sub
loopne
mov
xchg
call
loop
mov
xchg
jmp
adc
fildl
pop
in
bnd
mov
mov
xchg
push
ret
push
out
push
push
push
data16
push
sbb
shrb
fmuls
sahf
adcb
jmp
mov
sbb
ret
lcall
leave
enter
jmp
fstps
sbb
daa
mov
pop
mov
lahf
jmp
aaa
push
push
je
pop
sbb
into
fisubrs
ret
cmp
and
outsb
sbb
mov
fwait
push
fisttpl
mov
mov
mov
sbb
pop
and
outsb
ficoms
mov
pop
dec
test
adc
gs
cmp
and
imul
mov
xor
js
xor
inc
adc
into
push
iret
add
notl
mov
or
mov
ret
scas
sbb
sbb
ret
lcall
jae
pop
push
pop
jg
xorb
daa
hlt
or
fldcw
clc
inc
adc
js
xchg
push
mov
in
push
adc
les
or
in
mov
sarb
rcrl
loop
rclb
or
aam
arpl
std
inc
hlt
jle
call
jb
outsl
push
adc
dec
fnstcw
cmp
mov
add
mov
cltd
pop
shlb
jl
into
sbb
inc
mov
dec
jno
add
sub
xchg
arpl
xchg
lretw
mov
stos
cmc
std
add
int3
push
mov
pop
dec
and
arpl
pushf
pop
and
inc
insl
add
jbe
lahf
add
mov
add
loop
incb
inc
jno
fstpl
xlat
push
inc
shlb
jle
dec
and
mov
out
cmp
insb
lds
jno
inc
jecxz
jns
cmc
out
test
xchg
mov
push
sbb
push
adc
or
movsl
sub
xor
sti
cs
sbb
sub
cmp
jbe
addr16
bound
jmp
mov
and
jmp
movsl
xor
add
cmpsl
inc
bound
jle
add
inc
repnz
cmp
cmovg
xlat
lods
pop
popa
mov
loop
aas
inc
insl
sbb
shll
cmp
dec
xchg
push
add
test
gs
outsl
hlt
repz
cmp
push
out
in
test
jnp
inc
adcl
sbbl
push
out
ret
and
jb
mov
mov
daa
lcall
out
xor
push
stc
cs
adc
aaa
xor
xchg
bndstx
inc
lds
pop
hlt
test
mulb
hlt
mov
pop
icebp
ret
sub
pop
mov
and
sti
xchg
aam
lea
mov
fxch
daa
int
add
adc
cmpsb
mov
inc
jno
lds
or
add
das
mov
fsubrl
mov
xor
and
inc
xchg
cmpsb
mov
dec
movsb
adc
adc
xchg
jae
push
add
or
lret
popf
pop
std
push
mov
jns
add
adc
xor
loope
in
or
movsl
adc
ds
sbb
inc
clc
push
lock
loop,pn
iret
jecxz
out
mov
mov
mov
data16
or
dec
mov
or
dec
cmpsl
mov
jge
cltd
hlt
mov
gs
push
xor
push
popf
sbb
arpl
stos
in
add
push
dec
stos
adc
fisttpl
mov
add
lea
mov
inc
jne
xchg
mov
adc
ret
scas
iret
mov
pop
pop
insb
mov
fnsave
fisubrs
mov
xchg
adc
pushf
dec
mov
out
enter
sub
sahf
or
faddp
sbb
in
xor
lods
cmp
test
sub
ret
rclb
es
aad
dec
sub
ss
out
add
push
xchg
push
sbb
repz
insl
push
in
mov
faddp
imul
mov
jo
aaa
ret
jle
xor
decl
in
pop
je
pop
imul
push
shll
clc
pop
push
mov
sbb
dec
adc
test
dec
cmp
add
push
cmp
stos
clc
push
imul
ror
je
xchg
sub
adc
fimull
call
xchg
aaa
push
xor
and
sub
jecxz
mov
and
popa
inc
jg
cmp
in
sub
inc
scas
dec
push
pop
dec
mov
in
cmp
mov
and
adc
and
mov
mov
outsb
push
inc
rorl
jnp
add
add
dec
inc
sbb
lods
mov
mov
lret
mov
jle
outsl
cmp
out
and
jae
mov
stos
dec
dec
pop
xchg
dec
jmp
jb
scas
mov
aas
in
enter
jb
mov
shl
js
mov
mov
mov
stc
mov
push
movsl
shr
scas
nop
jnp
cmp
fsubrl
test
test
jne
out
in
mov
add
or
add
icebp
or
cmp
stos
mov
ss
and
mov
icebp
inc
mov
push
xbegin
stos
into
xchg
outsl
mov
stos
pop
inc
cmpb
dec
out
shrb
push
and
push
stos
mov
cli
imul
sbb
sbb
fisubrl
xchg
mov
mov
shl
out
repnz
sbb
jmp
dec
lret
pop
jmp
jecxz
repz
arpl
enter
js
pushf
cmp
fcmovnbe
lods
dec
xor
out
xor
xchg
push
int
std
clc
adc
add
add
pop
loope
addr16
out
push
lea
ss
ja
pop
xchg
mov
rolb
push
mov
jne
pop
and
cmpsl
xchg
ret
push
fcomp
and
jnp
mov
mov
js
mov
cs
ja
push
sbb
cltd
lret
mov
shl
pop
call
divb
push
das
mov
fstps
inc
inc
adc
xor
aaa
imul
dec
pushf
in
or
inc
cmp
mov
jb
fildll
scas
cmp
xor
xor
enter
cmp
inc
xchg
hlt
loope
stos
mov
push
rcrl
jg
aaa
add
or
and
mov
xor
stos
cld
cld
pop
fcoms
loope
cmp
aas
mov
jecxz
popf
cltd
xchg
inc
lock
lods
cltd
jl
lahf
fcomps
mov
out
mov
xchg
hlt
push
mov
fiaddl
mov
add
stos
into
add
fwait
int3
and
dec
mov
mov
rclb
xchg
adc
sti
lret
fisubrl
repnz
mov
scas
fadd
aad
out
shl
dec
inc
cmc
add
inc
inc
sbb
pop
and
mov
insb
idivl
negl
subl
rclb
ss
adc
push
fcoml
enter
xor
or
imul
pop
repz
enter
dec
in
subl
pop
decb
mulb
push
add
mov
ljmp
adc
pop
xor
dec
pop
mul
mov
pop
gs
fdivs
test
mov
lcall
dec
or
mov
repnz
inc
dec
fildll
test
xor
int
pop
sub
call
lock
add
dec
sarb
pop
sub
jle
pop
dec
leave
out
in
xchg
sub
fcmovnbe
fidivrs
mov
dec
cmp
test
jmp
loop
adc
pop
dec
inc
in
mov
shll
jb
mov
repnz
jge
sbb
int
int3
cltd
pushf
cld
pop
nop
xchg
popf
pop
sub
adc
sub
in
call
das
push
dec
inc
sbb
sbb
and
idivl
lahf
mov
das
dec
adc
out
and
sub
gs
ja
pop
and
xchg
xchg
popa
in
sub
cmp
xchg
xlat
sahf
ret
mov
jb
ss
mov
or
popa
mov
inc
shlb
aaa
or
in
insb
add
sub
pusha
adc
imul
sub
pop
jno
aam
cmp
out
push
mov
imul
mov
xor
test
gs
std
mov
insl
or
lret
sub
push
cmp
sub
movsb
pop
sub
xchg
mov
dec
pop
arpl
ja
cld
push
in
scas
iret
leave
sub
leave
orb
adc
and
lds
mov
xor
cmpb
aaa
jmp
xchg
and
out
adc
push
pop
es
hlt
mov
adc
sbb
ds
adc
push
mov
cmp
dec
or
insb
xlat
inc
xor
mov
mov
inc
mov
sub
ja
and
pop
mov
pop
leave
or
in
cmp
mov
dec
and
push
inc
fnstcw
fstpl
cmp
pusha
fbstp
pop
gs
int3
or
lods
cwtl
ss
add
and
pusha
notl
dec
lcall
cltd
aad
cmp
cmp
stos
imul
mov
int3
ds
cmpsb
add
std
fwait
outsl
and
mov
or
mov
add
pop
pop
sub
sbb
push
dec
cmpl
cmc
mov
push
lock
rcrb
orl
sub
push
out
xor
or
cmp
pop
cmp
outsb
negl
repnz
stc
add
push
loop
mov
mov
jo
inc
pushf
incb
xchg
clc
enter
push
jns
daa
sub
xchg
sbb
cltd
decb
dec
and
mov
xor
pop
xchg
outsl
andb
mov
xchg
add
stos
jg
clc
sub
fldt
aam
fmulp
xor
out
lret
cmp
aas
xchg
sarb
in
add
sbb
aam
incl
fs
mov
and
sub
jns
cmp
loop
cli
adc
imul
repnz
mov
es
mov
and
xchg
daa
add
ret
dec
loop
mov
ret
inc
mov
mov
and
mov
xchg
pop
adc
add
jae
xchg
je
cs
cmc
mov
fcomps
cmp
fs
sti
inc
jae
iret
test
mov
xor
cmp
mov
add
mov
add
je
mov
shl
sub
mov
lea
movsb
sub
jbe
push
pop
mov
adc
xor
push
jnp
cmpb
inc
push
aas
or
mov
jne
adc
fisttps
push
sbb
lods
add
rol
cmp
lahf
hlt
push
lea
enter
jmp
scas
ret
pop
jp
int
jp
fdivrl
pop
cmp
xor
ljmp
into
out
scas
pop
mov
sti
xlat
xor
test
inc
inc
adcl
in
outsb
sub
mov
push
imul
popw
jl
scas
les
inc
enter
std
push
adc
push
or
enter
xchg
lods
repnz
cmc
aad
push
jo
pop
or
sahf
pop
jmp
insb
enter
sahf
pop
es
divl
xchg
insl
add
pop
loopne
cmp
iret
sbb
mov
aaa
loop
mov
mov
cmpsb
dec
jmp
inc
out
mov
test
in
aam
push
mov
and
push
push
dec
mov
rclb
mov
and
dec
in
scas
rcl
xchg
in
mov
inc
inc
bound
mov
gs
mov
lods
lods
pop
sbb
ss
inc
mov
nop
faddl
js
sub
mov
jg
jl
daa
jns
adc
ss
out
or
out
push
daa
and
push
mov
push
jns
test
out
pop
cli
ret
lods
and
dec
outsb
jmp
mov
das
adc
data16
xor
xchg
mov
outsl
push
mov
data16
mov
scas
push
ss
cmpsl
xor
insb
stc
mov
xor
loope
mov
xchg
mov
mov
into
dec
cmp
daa
mov
stos
outsb
jl
xchg
dec
daa
pop
fwait
pusha
ja
xor
jecxz
icebp
subl
int
cwtl
sbb
ret
mov
repz
lods
out
cs
jle
cltd
mov
add
das
decb
test
aam
pop
jecxz
push
xchg
inc
push
in
fists
lret
in
cmpsb
dec
jp
and
sar
pop
add
cmp
sub
loopne
fdivp
push
jo
add
lods
adc
xchg
call
movsb
xchg
loopne
sub
rcl
xor
and
popa
jle
inc
and
shll
pop
cmpsb
xchg
jecxz,pt
mov
xor
mov
fsubrs
cli
dec
aaa
lods
push
xchg
xchg
push
movsl
mov
hlt
xor
mov
push
inc
out
jno
and
and
jg
jns
int3
mov
jo
pop
roll
insb
in
push
pop
jb
inc
aam
mov
pusha
jns
mov
arpl
in
out
push
les
mov
aam
sbb
xchg
pop
daa
pop
mov
sub
mov
cmp
stos
mov
sbb
or
or
mov
int3
dec
dec
subb
xor
add
xlat
dec
dec
add
addl
push
push
in
add
xchg
ret
inc
pop
add
pop
cmp
sbb
xor
pop
push
jmp
inc
adc
mov
scas
gs
in
jmp
negb
inc
sub
mov
push
lods
sub
mov
or
jbe
jns
pop
setle
in
mov
mov
pop
mov
adc
mov
cs
fisttpll
pusha
push
inc
pop
sbb
xor
and
jge
lods
sti
in
adc
icebp
mov
imul
cmp
es
rcll
jl
mov
pop
lods
add
dec
adc
loopne
in
or
sub
pop
jbe
int3
mov
xchg
xor
cmp
push
pop
inc
pop
jbe
fwait
call
jmp
jo
arpl
mov
jno
or
xor
jno
push
insb
adc
outsb
xor
adc
xchg
sbb
lret
rorl
dec
ss
mov
arpl
inc
addr16
arpl
xor
mov
pop
push
push
imul
adc
popf
fistl
into
inc
orl
and
loopne
and
mov
test
stos
jp
xchg
fmul
xchg
stos
cmp
inc
mov
test
mov
xor
popf
mov
ret
jo
mov
cmp
add
inc
shl
es
xchg
lret
into
sub
push
cmp
xchg
xchg
seto
pop
arpl
inc
mov
aaa
cmp
dec
jbe
push
or
push
push
inc
pop
fdivrp
nop
dec
inc
dec
pop
mov
loop
xchg
jae
fbld
dec
sub
movsl
cmc
and
push
push
cltd
or
les
push
js
lods
insl
add
or
cmpsl
push
jp
in
fucomi
out
fidivrl
fldl2e
je
mov
lret
in
jns
aaa
jl
mov
inc
sub
sub
jl
cmp
daa
mov
fsts
iret
shll
pop
nop
push
js
movsl
adc
sbb
js
les
jnp
mov
lret
mov
cmpsb
roll
jb
mov
testb
lcall
mov
cmc
ret
dec
xchg
push
xor
js
mov
dec
repz
pop
jle
xor
jne
pop
xor
hlt
aas
in
xor
je
clc
xor
push
das
imul
dec
ds
jp
mov
lds
fdivl
popa
test
mov
mov
stos
mov
out
inc
ds
dec
or
mov
loop
sub
fmull
fsubr
fucomi
into
pop
cs
das
jl
subb
and
jp
jb
jecxz
push
cmp
mov
lods
stos
fldenv
ret
push
lahf
xor
test
jecxz
mov
pop
add
lret
aas
xor
iret
lds
mov
cmc
xchg
xchg
scas
push
add
sbbl
sub
insl
mov
icebp
cmc
inc
cmp
mov
jg
lods
mov
sub
insb
fmulp
test
xlat
sbb
shl
insl
out
fs
ljmp
cltd
pop
pop
or
cmp
xor
push
dec
and
sbb
inc
push
jl
dec
dec
test
add
sub
dec
scas
push
movsb
mov
adc
add
adc
int
rcrl
push
rolb
pop
inc
cmpsl
jb
push
mov
sbb
inc
in
mov
lods
sub
daa
cltd
insl
jae
pop
or
cmpsb
and
mov
cmp
and
mov
mov
dec
add
int3
pop
inc
xchg
sbb
das
mov
cmc
adc
cmc
inc
idivl
iret
add
in
test
ss
mov
push
sbb
dec
repnz
bound
xor
ret
and
mov
inc
mov
mov
imul
clc
jp
add
icebp
or
push
dec
dec
aaa
scas
mov
fsubs
sbb
pop
inc
popf
and
ret
hlt
mov
cltd
xchg
fs
aad
out
movsb
mov
movlps
sub
mov
icebp
add
sub
xlat
pop
pop
divb
push
jp
xchg
stos
or
insb
sbb
and
mov
es
sbb
rorl
and
shl
stos
iret
fwait
add
bound
jo
test
repz
gs
cmpsl
stc
adc
fbstp
push
fbstp
jmp
mov
pop
ret
cmp
cmp
dec
sub
aaa
xorb
pusha
sarb
dec
xor
psrld
sbb
imul
pop
lea
and
ret
jnp
push
xchg
out
dec
inc
push
add
push
xor
test
jns
cmp
sub
mov
xchg
leave
into
mov
ret
mov
xchg
je
add
lahf
jbe
pop
fidivrl
and
fimull
pop
dec
pop
jp
or
mov
jecxz
sbb
jmp
mov
sub
jmp
mov
daa
xor
inc
out
jns
call
popl
adc
cwtl
or
or
mov
sti
xchg
ja
pop
mov
gs
in
mov
jl
push
lea
out
lea
sub
iret
fucomp
add
fidivrl
roll
and
or
pop
sbb
bound
ss
sbb
mov
sub
add
push
xlat
ret
aas
outsb
das
jmp
test
inc
aad
xor
rcl
lods
add
dec
add
mov
adc
pop
jle
insb
out
fnsave
mov
jae
xchg
mov
jmp
add
call
cmpsb
shr
inc
cmp
push
lods
call
jle
loop
fmull
adc
mov
cmpsb
les
adc
jp
jg
push
xchg
arpl
adc
jo
push
stc
ret
jbe
sahf
insl
lea
test
cmc
jmp
pop
pop
mov
lds
fisubl
jae
or
sti
lea
sub
mov
cmp
jbe
ds
sbb
add
or
fucomp
add
cmp
outsl
adc
push
ja
mov
enter
inc
dec
int3
and
push
mov
xchg
imul
daa
lds
subb
push
leave
clc
or
pop
and
or
lock
ret
rclb
jl
sub
mov
cmp
in
dec
mov
lret
lock
mov
bound
pop
aam
shl
movsb
sub
push
push
pop
repnz
bound
mov
stos
outsb
jb
add
in
sub
sbb
mov
mov
mov
lock
lods
jno
daa
lcall
adc
pusha
mov
daa
test
mov
jnp
aad
enter
adc
icebp
sarl
mov
mov
clc
fisubrl
sub
lret
fmuls
ficompl
mov
rolb
cmp
bound
sbb
xor
or
lret
mov
cwtl
mov
repz
jnp
rcll
and
jmp
jecxz
imul
cld
out
push
adc
in
repnz
or
in
jle
movsl
int3
sbb
mov
xor
jno
fcmovu
js
cmp
jns
rclb
outsb
xchg
fisttpl
pop
jns
adc
and
test
jne
push
push
mov
inc
push
insb
ss
inc
sti
cmpb
imull
inc
mov
mov
mov
rcr
add
dec
adc
cmpsb
int
cmp
addr16
shll
sub
iret
dec
inc
and
sbb
repnz
push
mov
cmovg
and
xchg
add
sbb
les
mov
or
jns
std
dec
xor
pusha
jns
std
scas
daa
inc
and
and
mov
dec
mov
dec
sub
std
jl
shll
fwait
ss
aaa
pop
cmpsl
in
cmp
and
add
test
mov
loopne
orl
push
loope
pop
and
push
test
jne
cmp
mov
pop
pop
pop
cmpsb
fwait
insl
add
aad
outsl
push
sub
and
arpl
adc
mov
xchg
cmp
loop
add
add
mov
into
es
inc
leave
into
inc
add
xchg
lret
bound
mov
cld
aam
and
or
lods
js
out
xor
xchg
sub
jmp
inc
test
sbb
loope
lock
cmpsl
loope
outsb
xchg
jg
shlb
jne
inc
loop
ja
jb
in
xchg
cmp
movsb
push
xor
scas
clc
fidivrs
scas
es
movsb
cmp
mov
dec
enter
shll
mov
jmp
xor
push
jecxz
push
jp
testl
popf
aad
mov
add
and
mov
in
and
xchg
jns
pop
xchg
testl
add
xchg
ja,pt
xchg
adc
and
lds
mov
jno
add
sub
lods
mov
xchg
sub
xor
cmpl
sub
out
into
das
mov
fisubrs
cmp
aaa
mov
pop
mov
mov
out
rclb
adc
in
pop
pop
shrl
call
int3
jmp
xchg
xor
and
insl
mov
imul
pop
pusha
in
xchg
push
mov
lahf
int
mov
out
ret
dec
sti
testl
fstpl
push
fistpl
sbb
icebp
mov
dec
stos
jnp
stc
pop
push
sbb
out
inc
cmp
cmp
or
movsl
stc
jnp
jbe
jecxz,pt
xchg
push
push
or
xor
out
ret
push
lds
dec
cltd
or
cmp
ljmp
rcrb
popl
mov
mov
repz
mov
adc
dec
mov
sub
in
ss
mov
sahf
pusha
sbb
mov
jno
cmp
outsl
loopne
jmp
bound
push
movl
aam
and
mov
addl
inc
jecxz
pop
fstpt
jg
test
jecxz
in
and
xor
xor
xor
mov
push
adc
pop
jp
adc
mov
and
shl
mov
pop
jle
les
adc
sub
ret
dec
jae
and
push
mov
aad
jno
out
mov
add
inc
mov
scas
pop
pusha
ret
sti
xlat
jge
cmp
mov
mov
call
inc
push
xor
sahf
mov
cmp
mov
movsb
mov
lods
iret
inc
sarb
icebp
dec
call
add
out
stos
gs
push
dec
jbe
jns
lds
pop
out
or
lret
insb
push
xlat
xchg
out
dec
push
xor
sbb
mov
mov
mov
aaa
mov
pop
xchg
leave
out
dec
cld
cmpsb
xor
push
jbe
mov
mov
sub
arpl
jb
repnz
fs
sub
aas
arpl
xor
fistpll
test
fwait
push
das
push
cld
adc
lods
mov
dec
rcl
sbb
jmp
sbb
pusha
mov
outsl
sub
int3
xchg
mov
lock
imul
jg
ja
and
pop
cltd
pop
pop
sub
lret
std
push
mov
in
cwtl
outsb
fbstp
in
pop
stos
inc
sti
push
dec
sbb
xchg
cld
xchg
mov
lret
push
out
shlb
lret
call
xor
pop
push
stc
stc
push
push
scas
aaa
pop
xchg
cmp
xor
dec
cltd
pop
loope
pop
fwait
cmpsl
jmp
rorb
sbbl
mov
ljmp
jno
xchg
mov
shlb
inc
or
push
imul
sbb
cmp
xor
cld
push
xor
in
mov
and
pop
shlb
pop
push
sub
fpatan
or
shrl
mov
addl
int
sub
push
pop
xchg
mov
sbb
push
mov
outsl
sarl
pop
daa
lods
aad
dec
scas
shlb
xchg
xor
xlat
xchg
xor
sbb
add
inc
adc
out
pop
inc
std
fucomp
cmp
push
lock
xchg
jmp
popf
aaa
pop
outsb
mov
sub
cmp
cli
mov
adc
test
fwait
cmp
bound
add
xchg
sub
sarb
neg
mov
and
mov
frstor
jae
mov
addl
hlt
lods
loope
std
cmp
clc
pop
dec
rolb
mov
and
fstps
jnp
rcr
mov
shrl
gs
and
push
mov
repz
test
mov
push
int3
jo
xor
push
xor
xchg
lcall
and
jo
fcom
dec
insb
mov
jge
dec
out
pop
iret
push
push
add
lret
into
fcoms
sahf
popa
mov
mov
xchg
popf
cmpsl
ljmp
mov
fcompl
pop
mov
jmp
aas
or
jge
xor
mov
jg
bnd
aad
push
imul
outsb
cmp
gs
test
test
ds
fsubl
and
test
jp
cltd
sub
add
or
jae
mov
lock
sbb
sub
lret
mov
lods
mov
mov
ret
rorb
leave
fs
jmp
xor
das
repz
addr16
frstor
sbb
dec
cmp
repnz
lcall
cli
call
or
outsl
or
cmpsb
sub
and
mov
mov
jecxz
bound
inc
addb
and
stc
sub
add
cmp
and
call
imul
out
aaa
loope,pn
addr16
in
push
cmpsb
mov
in
out
aaa
dec
add
lock
call
stc
scas
test
push
lret
test
mov
into
jge
clc
lcall
fs
test
pop
aaa
scas
ficoml
inc
pop
and
stc
pop
cmp
sub
xchg
mov
mov
push
rcrb
sbb
sbb
xchg
sbb
push
or
mov
je
fbstp
jo
bnd
pop
pushf
and
xchg
add
mov
sbb
sahf
inc
sarb
cmpsb
dec
dec
in
rcrl
xor
scas
and
sbb
push
adcl
cmpl
jae
int
or
hlt
in
adc
cli
mov
or
pusha
or
insl
ret
test
imul
mov
sbb
loop
scas
les
push
mov
aam
push
insl
or
in
inc
adc
lock
inc
mov
push
mov
xchg
popa
mov
push
push
pop
pop
xchg
cmp
cltd
dec
dec
pop
sub
add
icebp
lahf
cmp
jp
jnp
xor
add
icebp
mov
or
std
loop
adc
dec
dec
insb
lds
adc
js
aaa
add
xor
out
pop
sahf
and
repz
mov
pop
incb
lods
out
and
push
push
outsl
and
pop
test
out
push
jp
mov
movl
lcall
fsubrl
pusha
cli
dec
xor
inc
jno
sbb
add
jle
push
cli
sbb
jns
clc
dec
mov
out
push
cltd
or
adc
xor
test
add
subb
faddl
repz
popf
pop
ss
cmp
stos
sbb
in
negl
adc
pop
test
dec
pusha
mov
repnz
clc
jp
insb
adc
jo
mov
xor
dec
outsb
leave
pop
out
sbb
lahf
mul
push
add
mov
mov
mov
xor
pop
cmpsb
dec
shll
pop
sbb
and
lahf
repnz
jb
call
or
pop
pop
gs
push
push
enter
je
pop
xor
pushf
lods
jge
cltd
lods
or
arpl
mov
ljmp
cld
add
sti
jnp
aaa
xchg
inc
stc
cltd
in
je
push
sahf
leave
add
xlat
push
sahf
mov
pop
pop
push
pop
pop
dec
jp
dec
mov
out
or
jmp
sbb
out
cmp
sub
pop
js
xchg
jbe
mov
addr16
jns
or
inc
mov
arpl
imul
xchg
test
adc
mov
push
xor
push
fwait
les
fisubrl
adc
and
inc
cmpsb
inc
jl
jl
sbb
push
mov
pop
outsl
cmp
addr16
filds
idivl
or
insb
sub
incb
lods
sbb
adc
jmp
sahf
add
or
xchg
cmpsb
loop
inc
and
xor
cltd
adc
cmp
sti
xor
pop
mov
pop
mov
pushf
cmp
xchg
sub
cmp
adc
aaa
xor
pushf
fistpll
out
aaa
sub
sub
lock
je
xchg
sub
ret
fisubrs
and
sub
push
pop
lds
mov
inc
pop
in
aad
cmpsl
lahf
std
push
pop
jmp
jmp
sahf
dec
cmp
je
loope
test
js
jecxz
daa
add
cs
inc
adc
push
mov
into
iret
push
sbb
loop
fisttpll
aad
out
sub
daa
aas
les
push
aam
mulb
jl
cmp
dec
sbb
stos
lcall
fistpl
dec
inc
cmp
add
sub
repnz
inc
lret
cmc
pop
cmp
adc
pop
mov
cltd
mov
adc
inc
push
adc
jb
xchg
aad
fstpl
cs
repz
adc
inc
adc
movsb
aas
pop
pop
call
adc
sbbl
hlt
lods
int3
xchg
pusha
fwait
push
pop
test
mov
and
dec
adc
not
xor
xchg
incb
fnsave
adc
add
xlat
and
push
mov
outsb
fs
dec
sbb
dec
push
out
repz
mov
fisubrl
hlt
scas
xor
rclb
aaa
gs
cmp
push
leave
mov
xorps
pop
icebp
lea
mov
sbb
lock
adc
mov
fs
scas
push
xor
popa
dec
pushf
mov
mov
aaa
roll
sbb
add
mov
inc
imul
add
cmc
nop
mov
and
sbb
lcall
sbb
jns
push
fisttpl
mov
bound
adc
subl
pop
aad
lods
out
ffree
lock
cmp
subl
out
xor
xchg
or
adc
mov
push
mov
test
mov
test
mov
cmpsb
test
jge
lods
leave
dec
or
clc
ljmp
pop
push
push
in
nop
bound
sbbl
inc
xchg
xchg
sbb
mov
push
lahf
add
scas
mov
sub
mov
push
das
push
jno
add
jmp
int
cs
pusha
cmp
dec
ret
js
cwtl
push
mov
xor
into
repz
and
sbb
jp
adc
dec
pop
loop
repnz
and
inc
loope
stc
lock
into
in
push
leave
adc
xchg
mov
test
or
push
push
popl
aam
push
fstps
mov
ds
sar
jl
fmul
inc
addb
cmpb
stos
clc
pop
add
pop
xor
lods
dec
das
test
mov
mov
lahf
arpl
and
jmp
sbbl
jp
lahf
xorb
ret
jge
jmp
loopne
lcall
in
mov
mov
andl
cltd
and
loope
adc
push
mov
mov
test
xor
out
stos
mov
pop
imul
adc
faddl
add
rcr
pop
pop
xor
loopne
pop
pop
enter
add
andl
or
fs
rorl
jp
or
outsl
dec
jns
inc
pop
aas
iret
add
rcl
dec
fcom
xchg
out
cmp
push
mov
aaa
cmp
mov
sub
aam
fistpl
mov
mov
fnsave
rolb
jnp
frstor
data16
and
jl
mov
stos
outsb
inc
jl
xchg
jne
incl
testb
shl
ficompl
repnz
mov
out
xchg
outsl
inc
aad
sahf
mov
stos
xor
mov
pop
xchg
addl
test
dec
ja
xchg
scas
inc
mov
out
movsb
push
jne
and
ljmp
orl
enter
stc
cmp
in
insl
jbe
fcmove
mov
xor
mov
jno
bnd
xor
fbstp
mov
insl
fldl
xor
jno
movsl
loop
push
test
cmpsb
or
jae
xchg
test
or
xchg
cmp
xchg
dec
fidivrs
out
lcall
iret
jmp
call
dec
loop
aaa
leave
inc
out
pop
jl
daa
push
stos
jne
rcll
aad
adc
mov
out
shll
pop
and
in
xlat
pop
pop
push
fisubl
orb
lds
mov
adc
adc
rorl
mov
in
in
divl
rcrb
add
flds
xor
out
sub
jns
ljmp
test
shll
sbb
sbbl
imul
movsb
push
mov
fsubl
test
xchg
inc
push
or
mov
sbb
hlt
loopne
push
scas
push
jg
adc
ds
mov
fisubl
stos
add
popf
pop
jmp
cwtl
inc
adc
mov
sti
dec
mov
data16
inc
in
jne
mov
inc
adc
inc
xor
into
aaa
jp
push
dec
out
mov
leave
add
adc
inc
dec
dec
ljmp
dec
mov
or
sbbb
add
leave
dec
imul
cmpsb
adc
test
inc
inc
cwtl
test
sub
pop
adc
or
and
cmp
xchg
ja
je
out
idivl
cmp
mov
imul
cli
test
sbb
jecxz
scas
repz
in
cmp
fdivl
test
mov
dec
lret
mov
jge
pop
mov
jns
nop
fwait
xchg
addl
mov
arpl
sub
jecxz
div
inc
adc
dec
clc
push
ret
and
aas
mov
in
imul
fwait
or
aam
movsl
rolb
sbb
test
pop
inc
stos
push
cltd
imul
push
push
jns
repz
clc
shll
dec
or
push
mov
cmpb
mov
xor
add
shrl
fildl
pop
cmp
push
stos
jb
out
jnp
inc
insl
and
mov
call
stc
lds
fiaddl
sbb
aam
mov
jmp
xchg
out
mov
imul
xchg
jnp
jbe
add
in
outsb
push
lahf
loope
inc
fldt
imul
insb
cs
sbb
and
mov
arpl
int
xchg
mov
dec
lcall
inc
popf
add
movsb
ds
insl
shlb
pop
jmp
imul
push
ret
mov
shlb
push
cmp
cmp
sub
sbb
or
icebp
lahf
jo
add
andb
push
sub
dec
mov
jb
adc
inc
jns
sbb
dec
daa
ds
inc
lods
ja
sub
sti
scas
xchg
loopne
sub
data16
xchg
xchg
or
cltd
imul
outsl
inc
add
enter
addr16
pusha
mov
adc
gs
leave
test
pop
mov
push
in
pushf
enter
xorb
and
insl
je
xchg
xchg
int
fildll
out
lret
adc
mov
xchg
outsb
xchg
test
mov
push
mov
xchg
push
xchg
pop
xchg
mov
aad
add
inc
cli
mov
pusha
ljmp
inc
and
sub
adc
xchg
xor
jb
dec
adc
xchg
dec
xchg
jns
ja
sub
mov
je
hlt
mov
pop
sbb
lahf
cli
mov
inc
test
sbb
push
cli
cwtl
insb
jle
xor
pop
cwtl
stos
pop
icebp
inc
jg
and
jbe
mov
aam
mov
dec
pop
jmp
sarb
sbb
mov
and
cmp
pop
dec
pop
mov
dec
dec
dec
sub
mov
loopne
inc
push
or
and
or
sub
push
repz
addr16
sbb
ret
cmpsb
push
or
mov
or
lret
xchg
dec
daa
cwtl
pop
and
les
lods
adc
repz
push
mov
cmp
or
push
aam
pop
jbe
and
stc
imul
and
nop
adcl
lock
mov
pop
shlb
xor
jb
repz
lahf
and
and
scas
cmpsb
inc
adc
inc
aaa
ret
and
aam
loope
out
rclb
xorb
mov
add
fs
pop
call
rorb
pop
pop
incl
scas
mov
das
aas
test
mov
in
fidivs
nop
mov
cmp
stc
je
scas
insl
lock
pop
loope
mov
mov
daa
ljmp
into
js
arpl
mov
fnstcw
add
or
repnz
mov
decb
leave
fdivl
cmp
push
mov
mov
jnp
or
fmuls
dec
ret
push
xchg
jg
in
jg
test
cmp
and
and
cmp
mov
add
jmp
lock
lea
insl
lds
fldt
add
sbbb
aas
fwait
cmp
cli
jecxz
mov
nop
mov
movsb
push
lods
outsl
push
adc
icebp
lahf
cmp
jle
xor
push
jecxz
jmp
push
mov
adc
scas
mov
mov
ds
sbb
push
xchg
pop
adc
jne
es
data16
xlat
mov
push
and
jns
les
lahf
jg
cmpsb
orl
mov
sub
jecxz
push
ret
inc
add
jno
mov
lea
push
mov
out
sub
jp
pop
adc
cmp
in
dec
mov
inc
cmp
movsl
fwait
sbb
ja
enter
sbb
ja
cmp
cmp
or
cltd
pop
xgetbv
addr16
bound
fwait
loopne
and
ljmp
jecxz
dec
ja
mov
sbb
sti
lret
push
mov
mov
pop
in
jbe
clc
xchg
daa
jmp
aam
xor
mov
mov
jl
dec
addr16
xor
cmpsb
push
adc
and
push
lret
mov
nop
rcll
jbe
mov
sbb
stc
sbb
pop
outsb
mov
lahf
adc
in
inc
and
shll
in
int3
xlat
jb
push
or
movsl
inc
adc
inc
loopne
mov
mov
jo
push
add
pop
cmp
or
lea
add
js
fstps
out
jmp
fs
inc
pop
sbb
dec
inc
mov
adc
xchg
jmp
push
sub
nop
cmc
push
les
mov
in
adc
mov
sti
ret
and
dec
ret
lahf
jbe
xchg
sbb
sub
pop
mov
jg
and
cmp
xchg
mov
jb
push
les
roll
cmp
sub
adc
adc
scas
mov
xchg
in
xchg
pushf
mov
lods
fs
xlat
fidivl
or
or
mov
ds
je
xlat
sahf
and
xor
cmp
ret
lods
insb
jge
pop
and
call
dec
xchg
xchg
xor
pop
cmp
dec
adc
mov
xlat
aam
in
shlb
clc
mov
stc
add
call
add
sub
loope
sbb
fbstp
lods
rolb
repz
mov
test
fnstenv
pop
pop
imul
stos
jmp
pop
xchg
nop
test
sub
xor
hlt
ffreep
inc
and
cmp
push
sub
push
iret
fistl
push
and
xchg
fdivrs
sbb
fmul
clc
or
jl
adc
sbb
add
imul
push
cmp
and
dec
cmp
cwtl
or
mov
jmp
and
cli
mov
imul
inc
xchg
lcall
and
scas
mov
add
adc
movsl
lahf
fs
orb
mov
inc
loop
adc
fdivs
pop
repnz
add
jg
mov
test
and
test
add
xchg
adcl
or
lods
test
sub
mov
cmp
rcrb
pop
outsl
mov
lcall
mov
mov
add
pop
insb
test
lret
lods
int
xchg
inc
adc
shr
rcl
push
cmp
out
or
loope
arpl
sbb
fiadds
fdivr
pop
push
fimull
ljmp
ficompl
int
notl
adc
lcall
popf
rolb
lock
pop
jmp
icebp
pop
add
mov
lcall
loopne
xor
and
jbe
cmc
add
sub
push
and
mov
and
push
cmc
mov
sbb
test
inc
shll
ror
dec
jbe
fdivr
push
sbb
insl
stos
pop
cltd
popa
test
dec
mov
adc
je
or
inc
fcoms
ljmp
das
leave
xchg
inc
dec
addl
fsubs
dec
ja
mov
or
cmp
and
mov
adc
loopne
sbb
or
cmp
lods
idivb
cltd
into
daa
ror
scas
loopne
push
arpl
pop
xchg
jg
or
test
sbb
xor
mov
call
cmp
into
std
mov
push
cmp
andl
idiv
cmc
fcmovbe
push
lret
mov
adc
xchg
pushf
lret
test
jl
sar
xchg
sbb
das
arpl
and
std
les
scas
xchg
push
and
and
repz
fwait
test
jbe
add
sbb
adc
in
and
ret
iret
or
xor
pop
push
fstl
pop
jmp
outsl
scas
xchg
push
mov
dec
sti
adc
cs
inc
adc
cmc
sbb
add
pop
jno
iret
cld
xchg
cmc
lock
int3
push
pop
sub
xor
cmp
test
test
ds
sub
aaa
enter
rcl
adc
push
mov
push
and
mov
in
add
cmpsb
adc
mov
popa
jecxz
cmovs
je
add
jnp
std
pop
repz
dec
jns
xchg
xchg
popf
adc
std
sub
incb
sbb
and
jae
out
or
pop
push
mov
fcomps
and
dec
push
arpl
js
mov
and
out
movsl
ret
inc
add
inc
cmp
movsl
ljmp
mov
negb
std
push
test
into
pushf
inc
jb
test
mov
xchg
dec
cmp
adc
dec
dec
jo
out
inc
divl
xor
push
ss
dec
inc
add
movb
pop
leave
mov
roll
cmpsb
push
or
insb
or
stc
jp
jne
pop
loopne
lods
das
icebp
aas
or
pop
sarl
jmp
adcb
clc
insb
stos
mov
frndint
icebp
outsl
xchg
push
pop
scas
jb
roll
in
aad
fadds
notl
push
rcrl
out
cmp
mov
lock
and
and
loope
lcall
push
add
es
arpl
push
ret
ljmp
xlat
or
cmp
sub
jo
cld
mov
xchg
loope
subl
adc
lcall
jo
cmpsl
ja
or
hlt
mov
inc
sub
adc
or
dec
in
xchg
push
pop
fisttpl
xor
inc
pop
lods
pop
test
inc
cmp
test
lcall
xchg
addl
mov
push
sar
sbb
ss
fsubs
push
shlb
cmp
loop
sbb
pop
mov
xor
clc
mov
push
fists
mov
arpl
lcall
mov
out
iret
sti
iret
adcb
mov
shl
rcr
rorb
call
pushf
cmpsb
mov
pop
cmp
dec
pop
push
lock
xchg
pop
jmp
daa
xor
xchg
dec
sub
inc
insb
loopne
jns
xor
test
or
xor
cmp
jle
pop
adc
and
sub
add
mov
data16
fidivrs
out
cmp
es
or
pushl
outsb
push
aad
pop
inc
jmp
out
add
adc
pop
pusha
pop
mov
or
or
fcoms
add
add
jmp
xor
repnz
adc
aam
call
add
mov
inc
sub
xchg
mov
cmp
int3
in
push
fcmovnbe
mov
in
les
jg
es
sub
xor
jmp
cltd
shlb
pusha
popf
pop
test
jno
out
popa
mov
mov
sbb
das
jno
xor
outsl
aam
cmpl
mov
test
fists
xor
add
popf
sub
xlat
add
hlt
push
pop
cmpsl
fimull
sbb
movsl
decl
mov
enter
jecxz
adc
shl
je
int
cmp
sub
mov
mov
pop
lea
or
pop
ljmp
ret
lahf
rclb
ss
xor
scas
mov
jl
orl
fnstenv
insb
or
mov
jmp
cmp
test
repz
dec
adc
fldt
aaa
pop
rcll
dec
loop
jbe
dec
bnd
push
xor
jg
fisttpll
sbb
cmp
outsb
xlat
jo,pt
movsl
dec
lcall
add
xchg
rcl
sar
iret
sub
and
in
pop
int3
and
jno
adc
leave
pop
stos
rorl
pop
add
push
xchg
outsl
ja
ss
rep
push
int3
lock
addb
mov
push
push
mov
push
clc
mov
out
iret
pop
xor
mov
add
lea
sub
rorb
daa
cmp
adcl
xor
dec
xchg
xlat
decl
add
and
dec
mov
push
pop
pusha
adc
orb
out
or
ret
test
bound
cmp
dec
aas
jmp
xor
jno
mov
pop
movsb
rcrl
and
xchg
pop
xchg
pop
xchg
ret
out
dec
push
bound
push
in
test
push
jns
out
sub
int
fsub
stos
mov
mov
xor
cmp
sbb
in
pusha
mov
outsb
lcall
add
leave
lret
pop
dec
push
in
xchg
outsb
and
pop
push
in
mov
jp
push
fcmovbe
leave
or
push
xor
ss
fdivrl
adc
mov
cmp
movsb
mov
div
mov
dec
and
add
dec
cmp
mov
sub
adc
inc
xchg
xor
xlat
and
scas
xchg
mull
mov
sbb
adc
cmp
adcl
lcall
adc
adc
add
shll
xchg
push
je
xchg
xor
add
cmpsb
mov
pop
scas
jnp
sti
xorl
mov
push
test
mov
movsb
push
dec
add
push
je
movb
cmp
jl
xchg
jl
movsb
ljmp
scas
lcall
icebp
adc
or
xchg
mov
fists
xchg
int
xor
lahf
fsubl
xchg
push
repz
notl
push
into
scas
lret
inc
jne
mov
loope
mov
cld
pop
out
call
jnp
aam
ret
in
lds
cmp
shrb
js
fildl
pop
and
mov
add
les
mov
pop
cmp
data16
cmp
decb
jg
xchg
ljmp
and
out
or
mov
fdivp
fidivrs
roll
mov
cmpsb
stc
mov
outsl
and
repnz
or
mov
lret
sbb
scas
leave
adc
mov
push
popa
push
imul
mov
jno
and
lcall
jmp
sbb
je
add
popa
sahf
in
add
cs
adc
rolb
xchg
lea
dec
es
pop
cmp
xchg
in
int
in
ficompl
push
pop
arpl
mov
mov
and
out
lret
aad
nop
ret
test
mov
rclb
ds
mov
mov
xchg
lea
push
pop
jg
push
or
jne
mov
xor
fwait
mov
xchg
das
sar
movsl
jge
mov
stos
jb
sub
inc
adc
lret
subb
jne
insl
jnp
daa
in
ficoms
negb
adcl
pop
outsb
rolb
pop
lods
test
push
imul
inc
jo
jb
cmpsb
cmp
lret
mov
cmpsl
shrb
rclb
dec
inc
mov
dec
cmp
or
clc
scas
mov
cmp
or
mov
mov
adc
lock
ret
shlb
add
lods
mov
loopne
mov
scas
mov
adc
jo
nop
dec
sub
dec
es
fildll
movsb
lods
cwtl
sbb
inc
and
in
pop
push
push
sbb
movsl
dec
enter
clc
in
addr16
iret
cmc
add
pop
cmp
pop
xchg
xchg
arpl
cmp
xchg
xchg
loope
aam
mov
xor
ficoms
shlb
outsl
inc
in
adc
out
and
les
js
fstpt
insb
int
sub
sahf
pop
fildl
mov
in
xchg
xor
ja
push
sbbl
sbb
push
test
mov
jno
xchg
xor
jge
int3
adc
sub
add
xor
sub
xchg
xchg
push
add
lret
or
das
mov
shr
int
add
jo
add
test
mov
test
mov
call
add
dec
out
bound
inc
in
out
cmp
or
cmpsl
and
sub
sub
xchg
ljmp
stc
sti
fildll
xor
cmpl
clc
jo
fsubrs
cld
or
pop
pop
pushf
clc
lret
adc
lahf
and
or
rcr
aam
scas
mov
xor
ret
gs
decl
scas
in
lahf
sbb
scas
das
push
lahf
out
in
cmp
mov
in
fwait
pop
mov
out
and
dec
faddp
stc
cmp
or
pop
stc
jmp
adc
rcr
and
imul
js
and
inc
test
pop
cs
jne
mov
mov
inc
and
mov
aas
mov
stc
les
dec
pushf
mov
dec
jmp
mov
dec
popf
dec
outsb
fbld
jnp
in
dec
popf
cmp
xchg
mov
ljmp
ja
jnp
cmp
lcall
xchg
cmp
jmp
aad
sahf
lret
inc
mov
jno
pop
adc
aas
jbe
inc
dec
xor
subb
jno
sbb
or
sbb
jp
or
out
sub
lods
cmp
push
jne
shrl
out
sbb
cmc
lods
lret
pop
cmp
push
mov
insb
imul
sub
push
movsb
test
xchg
incl
lret
aad
in
sbb
sbb
lods
lret
cmp
rorl
vsqrtpd
jmp
fwait
ret
mov
and
std
xor
cmp
mov
xor
icebp
imulb
aas
xchg
mov
jns
iret
cmp
lahf
dec
xchg
dec
cmp
das
pop
xor
jecxz
jmp
adc
mov
adc
test
into
in
in
mov
push
cwtl
ficoml
idivl
cltd
addb
and
fwait
inc
xchg
pop
clc
outsl
xchg
das
les
aas
inc
icebp
jecxz
add
xor
add
mov
mov
ljmp
xchg
sub
out
sbb
mov
cmc
loop
cmp
mov
jle
and
mov
xchg
loope
cmp
icebp
movsl
pushf
lret
add
mov
inc
arpl
inc
daa
stc
mov
xchg
dec
push
dec
nop
leave
pop
arpl
sub
xchg
or
out
xchg
lds
fnstenv
int3
pop
dec
xor
mov
loop
cmp
ljmp
cwtl
cmpsl
mov
inc
sub
jp
arpl
hlt
and
push
pop
inc
lret
xor
add
insb
scas
dec
jno
test
jne
adc
rclb
inc
fs
jne
fcoml
addl
and
jbe
inc
test
test
adc
jne
jne
ss
shrb
int
outsl
sbb
ret
jns
or
sub
pop
dec
movsb
add
cltd
test
std
test
mov
jmp
popf
aam
push
pusha
xchg
testl
jb
cli
cwtl
jmp
daa
sub
and
in
sbb
xor
mov
inc
ret
cmp
test
mov
inc
in
enter
xlat
add
je
xor
inc
cmpsl
xor
imul
sti
mov
mov
pusha
cmp
pushf
repz
js
rorb
jl
imul
gs
movsl
sbb
testb
ja
lods
or
adc
sub
push
jle
push
cmc
mov
inc
lea
hlt
repnz
pop
pop
jl
mov
push
incl
sub
pop
jp
imul
jl
sbb
cltd
std
xor
sub
or
bound
xor
ret
repz
mov
jno
out
fwait
bound
push
add
push
loop
das
add
pop
call
cmp
lret
call
sub
or
out
cmpsb
jns
ljmp
fs
lret
and
inc
outsb
fisttps
push
pusha
jbe
jb
and
lea
sbb
add
cmpsb
fisttpll
out
sbb
jno
pop
sarl
dec
mov
stos
adc
sub
cmp
test
pop
popa
push
shrl
push
popf
add
andl
mov
clc
mov
jl
pop
addb
shll
and
cmpsl
mov
es
mov
repnz
lahf
out
mov
xchg
pop
js
adc
sbb
push
push
push
mov
scas
fwait
int
jmp
pop
mov
or
fisttps
xchg
xor
sub
clc
outsl
cli
setg
jg
ror
jns
test
in
rcrl
or
lret
push
fistpll
push
or
cmpsb
jmp
in
inc
pushf
mov
inc
or
and
lret
pop
add
pop
pop
lcall
dec
imul
mov
sbb
push
sti
cld
call
cmp
xor
loope
sub
mov
or
lea
xchg
into
mov
dec
hlt
mov
lret
push
loop
sub
push
mov
xchg
and
pop
test
mov
cmp
adc
fsubr
sub
pop
cmc
lcall
dec
ret
ficoms
nop
xchg
xchg
in
push
out
pushf
pop
or
push
icebp
aaa
jbe
mov
subb
pop
cmp
rorl
shrb
fldt
push
adc
sub
jno
fadds
ja
mov
fs
and
in
add
fwait
xor
lret
sub
mov
ret
pop
sub
pop
pusha
ds
insb
clc
test
dec
sub
pop
sarb
aaa
in
gs
in
in
sbb
cli
and
pop
xor
in
fwait
rcrl
popa
aaa
xlat
outsl
das
push
leave
cltd
dec
mov
fsts
pusha
push
dec
rcrl
push
pop
sbb
cmpsb
xchg
aaa
ret
out
es
lahf
fs
mov
daa
jbe
pusha
hlt
mov
aad
lahf
xchg
mov
outsl
jnp
cwtl
sbb
add
push
das
rcrb
roll
test
lods
stos
mov
stos
sub
pop
loopne
imul
jge
cmp
pop
fwait
into
pusha
fstps
sahf
ds
inc
lcall
mov
xchg
mov
popa
push
pop
shlb
xor
cltd
lods
fistl
inc
push
mov
inc
jge
rorl
fucom
mov
pop
aas
stos
xor
iret
cli
cwtl
out
je
sub
ror
push
in
inc
sub
sub
sbb
in
lret
aaa
les
jmp
add
jae
cwtl
sarl
sub
jge
stos
xlat
jge
mov
aaa
pusha
fsubl
push
fldt
adc
pop
aad
add
popl
mov
sbb
fbld
lds
mov
pop
mov
push
mov
pop
inc
mov
stc
cmc
call
int3
or
stos
mov
loopne
cmp
test
sarb
dec
out
lahf
fnsave
ljmp
imul
scas
je
gs
xor
lock
and
add
jnp
cmp
pushl
ds
mov
pop
xor
push
fcomi
xchg
sub
in
pop
mov
sub
adc
sub
add
icebp
mov
cmp
loop
and
cmp
jmp
adc
sub
cmp
pop
insl
out
cmp
sub
pop
cwtl
std
sarb
push
jp
inc
inc
loopne
scas
cld
bound
mov
inc
jmp
mov
cltd
adc
es
mov
mov
outsb
sbb
arpl
shl
add
dec
dec
lds
pusha
test
lock
mov
fucomp
jnp
mov
inc
mov
mov
aad
mov
add
outsl
or
cmp
inc
cltd
jle
pop
addb
push
push
andl
bound
xor
enter
out
inc
data16
mov
outsl
adc
cli
push
ja
bound
xchg
fimull
jae
xorl
jmp
pop
pop
jns
cmp
call
cmp
in
leave
jbe
sbb
mov
ret
push
aaa
push
subb
in
or
cmp
push
or
pop
add
add
sbbl
push
cmc
test
std
pusha
xor
jns
pop
popa
dec
mov
mov
mov
sbb
inc
ds
ja
add
inc
bnd
fisubrs
add
dec
stos
xchg
cmp
imul
pop
mov
and
movsl
push
cmp
scas
or
adc
daa
lea
xorb
sbb
cmp
jl
popa
jne
jbe
mov
jecxz
lret
clc
lea
mov
imul
mov
aad
das
das
movlps
notb
cld
fistl
jns
xor
sub
xchg
leave
jb
in
mov
inc
cmp
pop
dec
loopne
cmp
push
dec
movb
inc
std
add
and
in
mov
dec
push
stos
mov
sub
xor
push
repnz
scas
cmp
aas
cld
repnz
rdpmc
jo
push
out
clc
sbb
std
and
sbb
mov
dec
sub
mov
cli
mov
jmp
and
mov
jb
push
cmp
dec
mov
cltd
push
add
mov
pushf
vcvtss2si
inc
and
xchg
int3
mov
jb
xor
in
xlat
loop
push
jbe
stos
lods
xchg
in
xchg
rcll
ret
lea
das
insl
pop
scas
lods
xor
test
cmp
sub
scas
cli
lcall
inc
mov
out
sbb
and
lret
fs
push
jl
mov
mov
mov
aam
test
insb
add
movsl
jmp
jg
mov
mov
dec
into
cwtl
cmp
inc
sub
lret
dec
and
mov
mov
icebp
inc
mov
stos
jl
addr16
bound
jecxz
dec
iret
jmp
nop
repnz
fs
cmp
mov
inc
xlat
popf
sbb
xor
sub
scas
lods
aaa
xor
mov
push
and
sub
jmp
ljmp
and
sti
jg
in
cmpsb
rep
sub
fcompl
into
hlt
enter
leave
insl
bnd
jae
shlb
rcr
and
push
clc
dec
adc
inc
popf
enter
fdivl
stos
mov
les
push
push
push
mov
pop
js
cltd
lea
lcall
divb
mov
in
adc
mov
shr
mov
lret
mov
aas
jb
cmp
addb
mov
jns
mov
insl
add
cld
fmul
mov
or
adc
xchg
andl
es
inc
inc
pop
mov
mov
mov
das
push
dec
mov
outsl
xlat
lret
push
dec
jp
cs
sti
jns
pop
pop
pop
dec
jnp
jge
dec
aaa
iret
xor
sbb
cwtl
lcall
inc
pop
ljmp
divb
imul
xchg
adc
mov
inc
jo
push
pminub
dec
jl
push
bound
mov
mov
aam
pop
cs
sbb
imulb
fwait
imul
and
or
stos
std
or
sub
and
mov
and
mov
xchg
push
jmp
mov
das
jbe
ja
cmpsb
stc
adc
bnd
cmp
xchg
lods
mov
jbe
divb
push
xor
fmul
in
out
push
nop
pop
enter
mov
push
dec
mov
fwait
add
jbe
inc
fcoms
and
mov
subl
sub
cmpsb
popa
push
into
xor
xor
sbb
mov
pop
clc
ret
push
mov
cltd
dec
lds
lret
jecxz
test
loope
inc
cmp
and
lret
lcall
lahf
xor
or
dec
popa
pop
mov
fprem1
and
sbb
dec
inc
jno
cmp
pop
push
in
and
mov
pop
gs
jbe
push
fbld
xchg
mov
and
scas
or
pusha
fistl
xor
jmp
into
fs
jg
inc
aas
dec
je
ljmp
mov
push
inc
mov
loope
cmp
xchg
mov
or
das
aad
jge
sbb
dec
int3
pop
mov
scas
jo
subl
xchg
sub
fisubl
mov
std
or
adc
fsubrs
cmpsb
push
xchg
aad
or
cld
dec
rorl
mov
dec
inc
dec
inc
xchg
lret
or
jge
ret
stos
loop
cmp
outsb
repnz
enter
sbb
or
outsb
push
and
sbbl
dec
sbb
jp
dec
ret
jnp
outsb
inc
add
cmp
shr
push
in
dec
xchg
stos
aas
cmp
sbb
mov
mov
std
dec
jno
jae
sbb
and
jge
sbb
lods
push
inc
inc
lahf
fisubs
xor
pusha
ljmp
xor
jne
stos
ret
cld
test
xchg
mov
jge
aas
lret
mov
cltd
add
add
xchg
das
ja
das
pop
mov
stos
bound
in
icebp
mov
xchg
hlt
mov
leave
sbb
pop
push
popa
addr16
pop
push
fimull
mov
aam
aaa
sbb
pop
popf
enter
js
pop
pop
sbb
loop
out
lret
lret
into
repz
adc
lock
gs
aaa
mov
rcrb
xor
je
dec
sti
or
mov
jae
dec
enter
adc
int3
xor
cltd
in
sahf
mov
cmc
int3
adc
pushf
xor
lds
cld
leave
xchg
popa
push
loopne
push
cmc
inc
lds
andb
aas
in
sbbb
popa
lret
mov
inc
sub
mov
sub
out
adc
mov
fistps
sbb
mov
jecxz
push
das
add
xchg
jbe
lods
xchg
pop
mov
and
jns
cmp
add
mov
into
mov
movsb
jne
imul
arpl
popf
push
push
in
scas
sbb
dec
jle
cmpsl
loop
cmc
and
xchg
push
sti
sub
sub
imul
or
into
mov
jp
cmp
les
mov
nop
test
pop
pushl
lcall
pop
ljmp
adc
xchg
mov
adc
js
mov
lahf
ss
mul
loope
movb
adc
push
outsb
xor
pusha
sahf
rclb
leave
testb
lret
mov
sbb
repnz
enter
inc
imul
mov
sub
mov
in
xchg
push
inc
rorb
sub
dec
fisttpll
loopne
or
and
mov
inc
loopne
lcall
or
call
push
pop
ficomps
sub
cmovb
pop
addr16
inc
sti
int3
pop
and
push
jo
subb
cld
test
xchg
add
push
popf
xchg
ss
cmp
std
sub
xchg
test
mov
iret
mov
hlt
popf
mov
push
cwtl
mov
sbb
stos
shrb
lock
shrl
cmpb
jnp
add
out
or
dec
cmp
imul
dec
push
xchg
clc
adc
scas
adc
dec
ljmp
or
pusha
rorl
push
subl
iret
cmc
divl
xlat
mov
adc
and
fs
push
in
imul
mov
pop
cmp
lds
jo
jae
in
pop
iret
pop
pop
or
pop
les
dec
pop
mov
movsb
push
jl
pop
iret
mov
mov
lods
jo
sbb
mov
adc
cmc
and
fwait
out
and
out
jp
mov
inc
cmp
inc
out
xchg
sbb
inc
in
mov
mov
jbe
mov
mov
inc
lcall
mov
cmp
push
mov
inc
movsb
xor
cmp
jecxz
cmp
repnz
push
jns
ljmp
lret
out
call
pusha
lret
mov
jge
pop
icebp
pop
lds
fstp
ss
ret
adc
lret
cwtl
in
jo
mov
jb
cmp
mov
add
pusha
inc
and
push
cli
daa
stos
cwtl
push
jp
in
cmp
popf
iret
dec
fs
inc
xchg
lcall
mov
cmc
or
and
mov
or
and
xor
addr16
cltd
push
mov
fs
inc
fdivs
mov
cmpsb
les
push
sarl
sub
sbb
and
mov
fs
dec
mov
int
or
fldt
jg
cmpl
cld
fnsave
arpl
mov
push
mov
inc
mov
or
test
movsb
xor
mov
or
out
hlt
ret
lods
aad
jl
fucomp
loopne
or
outsl
cmp
stos
mov
push
xchg
add
lea
pop
cmp
cmp
mov
jno
inc
xchg
cmpb
jg
int
sarl
xor
cs
roll
dec
cld
mov
and
loop
cmpb
add
mov
call
add
pushf
xchg
test
popa
int3
jbe
add
hlt
inc
inc
push
hlt
xchg
or
cmp
ds
inc
adc
pop
add
pop
sti
or
mov
cli
mov
or
sbb
cli
cli
dec
clc
std
adc
out
or
int
sbb
inc
iret
in
scas
jl
test
cli
int3
andl
mov
dec
pop
addr16
pop
lret
aas
inc
sahf
dec
mov
add
iret
push
adc
in
jmp
movsl
js
or
dec
sub
inc
inc
pop
xchg
xor
xchg
jg
jmp
ss
adc
ja
insb
test
dec
inc
pop
std
or
jle
or
jns
xchg
lret
inc
mov
pushf
fisttpl
lahf
cwtl
or
xchg
jmp
add
mov
mov
xchg
push
pop
aaa
popa
repz
std
push
mov
cmc
or
pop
iret
call
fcomps
xchg
jle
shlb
ja
fwait
xchg
addr16
jne
cmpsb
xor
mov
add
aad
mov
test
dec
add
test
jbe
sbbl
sbb
pop
and
ja
mov
mov
test
out
mov
mov
int
data16
xlat
cld
lock
mov
ret
je
imul
sysexit
pop
lds
mov
mov
sub
mov
repnz
loop
gs
cmp
xor
adc
test
test
enter
mov
rclb
push
sahf
or
cmp
fwait
js
imul
pop
push
add
inc
int3
mov
push
xchg
decb
roll
into
xor
imul
out
add
cmp
js
push
inc
mov
ret
jnp
enter
sbb
mov
inc
lock
mov
iret
out
cli
hlt
jecxz
mov
jae
and
jno
add
and
ljmp
jge
fwait
hlt
xor
pop
sbb
dec
dec
and
mov
and
je
divb
sbb
push
push
shl
jecxz
test
cli
fistps
lea
ljmp
mov
jge
pushf
pop
jae
add
clc
icebp
stc
lahf
cmp
mov
xor
lret
and
ss
in
dec
sarl
jnp
cmp
repnz
cmpsb
lods
in
cmp
xor
scas
pushf
mov
push
cmpsb
xlat
dec
repnz
clc
xchg
bswap
push
aas
pop
mov
mov
inc
and
divl
sub
inc
push
jns
addr16
pop
pop
mov
adc
cmp
mov
fstpl
les
push
and
mov
xor
push
xor
in
mov
xor
test
cmpsb
pop
loop
jns
rol
in
insl
mov
loope
nop
cmp
jno
ss
xor
fcmovnbe
sbb
mov
xor
gs
popl
in
mov
mov
aam
or
jo
and
ss
push
and
loop
push
negb
int
add
adc
xorb
inc
mov
jge
repz
mov
xchg
ret
xor
movsb
mov
test
xchg
test
sub
rcl
xor
fdivs
stos
push
adc
outsb
scas
sbb
faddl
mov
or
mov
lods
mov
test
add
sub
dec
or
in
dec
pop
mov
shrb
add
push
cmp
jno
adc
pop
das
push
pop
aam
int
lcall
rcl
lea
adc
test
mov
das
cmp
pop
mov
and
mov
mov
test
dec
dec
rcrl
jno
mov
adc
xchg
inc
mov
pop
mov
xor
xchg
ficompl
fwait
jns
cmp
fisubs
xchg
nop
stc
mov
ret
dec
push
jmp
and
xchg
clc
cmpsb
mov
xchg
xor
jns
push
inc
pop
es
rclb
cmp
aam
mov
and
mov
xorl
lcall
cltd
ja
or
dec
jl
fs
mov
add
pop
jl
cltd
adc
or
dec
cmp
sbb
lods
jno
jmp
sub
sbb
xor
mov
or
lret
mov
push
in
lret
js
fimull
xor
dec
cmp
out
cltd
mov
mov
clc
repz
das
cmp
jnp
int3
fistps
aam
xor
jne
add
mov
popa
cmp
shrb
mov
cld
jmp
repz
sub
mov
repnz
je
cmpsl
mov
sub
xchg
mov
jge
cs
sti
lods
xor
test
xchg
imul
ret
and
imul
ljmp
aam
and
jne
pop
les
movsb
sahf
pop
leave
shlb
sbb
cmp
pushf
data16
out
lcall
jne
adc
addb
sbb
adc
int3
jno
into
push
mov
pop
sub
insb
add
sub
pop
sti
repnz
lea
mov
push
push
mov
cld
inc
sbb
jb
mov
out
sub
loope
test
sbb
shl
in
pop
imul
dec
mov
dec
in
leave
mov
cltd
or
sbb
or
xchg
notb
aam
sti
fsubrp
jl
mov
mov
xchg
jmp
jno
sbb
fnstsw
rcrl
xor
fwait
out
call
rorb
jecxz
mov
leave
pop
inc
loop
inc
fisubrl
jp
jo
mov
mov
pop
or
mov
sti
sub
loop
jb
inc
dec
sbb
xor
mov
sbb
data16
sub
jg
xchg
jmp
mov
cmp
arpl
aad
shr
mov
test
movsl
xchg
faddl
inc
sbb
jns
xor
mov
pop
and
mov
test
push
cmc
cmpsb
cmp
lahf
out
push
dec
or
fidivs
lock
test
mov
xlat
aam
ja
and
mov
lahf
jno
pop
mov
sub
dec
into
imull
push
xchg
ss
fcmovb
xor
pcmpeqw
lods
pop
ss
pop
outsb
aas
jg
cmp
sbb
or
pushl
xor
push
orb
lahf
xchg
out
in
aaa
push
outsb
xorb
sahf
push
mov
or
push
mov
add
adc
jbe
ljmp
ret
in
mov
add
stos
jno
mov
xor
cli
popa
xor
and
push
mov
push
dec
jno
push
scas
mov
imulb
imul
and
icebp
pop
sub
lods
movsb
and
or
sti
test
jne
dec
sbb
xor
in
mov
or
add
push
pop
int
fwait
adc
push
xchg
xchg
in
rcrb
fistpll
fsubl
mov
dec
call
push
sub
fbstp
lcall
mov
xchg
stc
adc
sbb
add
pop
lcall
cli
mov
pop
push
pop
call
clc
and
jnp
xchg
ret
dec
mov
pop
adc
dec
adcb
sbb
push
and
mov
shrb
lds
sub
daa
sub
or
mov
repz
std
rcrl
cmp
out
add
sub
inc
pop
push
jp
aas
cwtl
sbb
out
call
call
imul
pop
stc
scas
hlt
adc
repz
jae
loope
xchg
int
shll
sti
int3
cltd
adc
je
push
jb
repnz
xchg
lret
jbe
xor
dec
into
mov
cs
push
mov
stos
push
outsl
fcoms
or
scas
xchg
push
std
xor
jmp
ljmp
push
add
mov
add
sub
adc
jmp
sub
outsl
mul
aaa
pop
add
cs
test
cmp
sbb
out
lret
pop
inc
xchg
in
add
mov
dec
cli
ret
fdivl
fisubrs
insl
xchg
mov
test
pop
push
pop
sbb
cmp
and
shll
stos
xor
test
lret
mov
lods
out
imul
test
pop
test
aam
mov
dec
jmp
and
fwait
lret
add
stc
mov
lds
repnz
jmp
add
mov
stos
sbb
add
ret
xor
addr16
pop
aas
mov
dec
out
mov
adc
pop
loope
mov
in
xchg
jg
inc
add
sub
fdivl
adc
lods
push
mov
cmp
inc
sbb
xchg
pop
arpl
cltd
cmc
fisttpll
pop
stc
pop
push
push
adc
ss
mov
xor
int3
push
adc
push
xchg
pushl
pop
bound
out
nop
lcall
or
add
fisubl
jae
inc
rcl
divb
sbb
push
sub
aad
push
cmp
push
sub
dec
clc
mov
idivl
add
in
imul
dec
cli
push
and
sbb
fidivl
adc
mov
and
cmpsl
ja
mov
adc
outsb
adc
aas
push
push
jbe
popa
cmp
insb
and
mov
adc
lods
call
jge
jo
ss
in
adc
test
addr16
lea
and
cltd
shrl
jne
add
mov
pop
setge
shlb
fxch
dec
mov
adc
testb
movl
mov
cltd
or
loope
push
pusha
out
pop
lds
pop
push
and
mov
and
fistps
pop
inc
xlat
push
jb
ds
testb
lock
push
mov
scas
xchg
sub
cmpl
rcr
clc
stos
fisubrs
mov
mov
ficoms
dec
xchg
add
mov
or
adc
inc
push
xchg
push
inc
dec
outsl
stos
fldt
add
inc
sub
scas
mov
xor
sbb
out
divb
mov
lea
ljmp
lret
mov
insl
div
cmc
mov
jbe
lods
xchg
or
pop
repz
mov
jb
sbb
sarb
shrl
out
mov
daa
cmpsb
repz
sti
not
mov
jg
iret
push
mov
stos
pop
arpl
push
pusha
cmp
sbb
mov
sbb
mov
push
loop
sub
adcl
orb
jnp
and
pop
dec
cltd
jbe
bound
movsl
incb
push
inc
fldenv
cmc
mov
iret
inc
inc
sti
mov
stos
out
inc
jno
dec
inc
cmp
cmp
femms
cmp
clc
in
jb
shrl
mov
inc
negl
cmp
dec
push
and
cltd
sbb
repz
push
mov
or
mov
sub
xor
and
lods
jmp
cwtl
sub
arpl
cmpl
js
fwait
dec
sbb
xchg
xor
lock
push
xchg
out
xchg
dec
daa
or
jg
addb
mov
pop
add
xchg
push
inc
mov
push
dec
xor
xor
and
or
jb
xor
xchg
roll
test
jnp
psubd
test
mov
rorb
xor
cmpsb
push
in
ret
jge
jae
mov
shl
andb
cli
cli
repz
or
dec
and
jns
and
dec
cmp
jbe
std
lret
jg
arpl
dec
loopne
dec
jne
xchg
jno
push
idivb
pushf
mov
in
dec
sbb
cmpb
xlat
mov
mov
fdivp
jnp
push
xchg
out
jl
dec
sbb
inc
mov
inc
push
push
ret
push
mov
sub
enter
je
int3
aas
movsl
das
dec
push
mov
xchg
push
iret
xchg
lds
adc
pop
leave
mov
outsb
inc
xlat
ss
push
pop
xlat
jae
pop
jmp
mov
adc
out
jno
mov
mov
sub
pop
fsubl
jg
add
cmp
imul
mov
ja
mov
mov
in
imul
jl
je
cmpsb
jl
stos
fisttpl
jno
ja
jbe
jecxz
fcoml
les
cld
and
mov
add
test
cmp
test
out
dec
in
outsl
dec
mov
dec
and
and
jnp
in
popa
mov
insb
adc
and
push
popf
lret
dec
sub
std
sub
test
fwait
or
mov
xchg
jmp
mov
cmpsl
ljmp
xchg
push
xchg
pop
mov
sbb
iret
mov
add
repz
repnz
aad
sti
addb
fdivrl
push
mov
hlt
cmp
fcmovnu
inc
jno
sbbb
mov
ret
push
mov
loope
out
xchg
xchg
lods
mov
lcall
jae
mov
cmpsl
add
cld
decb
and
and
test
or
mov
or
ret
int3
push
xor
mov
leave
ret
and
jl
dec
repz
cmp
int
ja
mov
pop
jbe
sub
mov
js
inc
lret
xchg
sub
jns
mov
ljmp
std
or
xchg
int3
incl
xor
dec
mov
jl
xchg
insl
es
mov
mov
adc
xchg
pusha
mov
addr16
scas
push
test
roll
lret
adc
ret
repnz
push
gs
mov
out
dec
push
fwait
push
adc
mov
mov
mov
and
add
mov
in
dec
jle
pop
push
cmp
push
mov
outsl
pop
push
lods
std
mov
sar
push
stos
inc
push
in
lret
sbb
ror
daa
jbe
and
sarl
adc
mov
pop
orb
hlt
xchg
xchg
add
pop
cmova
movsl
or
lret
ja
adc
sbb
pop
sub
lcall
bound
cmp
and
shrl
xchg
xchg
mov
sub
add
jle
and
das
cli
mov
into
mov
sbbl
insl
flds
fimuls
push
idivb
jno
xchg
scas
inc
pop
mov
mov
mov
inc
mov
mov
aas
mov
pop
jno
sbb
stc
aam
sbb
test
ds
lea
xlat
jno
inc
frstor
xor
rorl
add
jp
repnz
xor
insb
movsl
fcmovbe
ret
leave
loopne
bound
mov
pop
or
mov
adc
and
popa
out
ljmp
or
jmp
sbb
jle
or
mov
aaa
hlt
cli
push
sar
js
lds
sbb
aaa
xor
clc
cmp
loopne
jne
js
xor
aaa
je
xor
clc
das
sub
mov
push
imul
mov
xchg
fistps
movl
mov
dec
movb
jnp
js
push
sub
icebp
push
xchg
stos
pop
adc
mov
sbb
inc
mov
pop
or
xchg
pop
mov
leave
add
arpl
ret
xchg
in
and
sar
inc
popf
repz
mov
and
sbb
xchg
mov
jnp
lods
xchg
xor
mov
and
hlt
xchg
fisubrl
mov
hlt
add
popa
fdivs
lahf
xchg
lds
clc
hlt
shrb
js
dec
push
push
cmp
in
mov
dec
push
push
push
inc
fstpt
push
adc
repz
mov
orl
sahf
cs
mov
nop
rcrb
sarb
test
lds
icebp
or
jecxz
adc
add
xorb
add
pop
jp
jno
scas
pop
sbb
mov
cmp
mov
mov
dec
enter
jns
sbb
push
and
arpl
daa
test
xor
out
adc
test
in
movsl
aad
cmp
cmpsb
insl
push
sub
pop
lahf
scas
movsl
push
cmp
sahf
dec
dec
outsb
push
inc
mov
mov
push
cmp
pop
dec
shrb
jg
rolb
jp
lods
mov
in
pushf
pop
pushf
cmp
push
inc
icebp
into
sbb
das
dec
xchg
call
mov
addr16
jmp
push
pop
xchg
out
jle
jmp
das
cmpsb
sub
fwait
push
dec
fs
mov
jmp
xchg
inc
mov
lea
sub
xlat
pop
cmpsl
push
cmp
ljmp
out
push
xchg
xor
push
decl
sub
or
ret
addr16
mulb
sahf
movsb
sti
sub
fistps
xchg
imul
sar
cltd
ja
mov
setae
call
or
or
pop
jns
push
sub
mov
jl
pop
cmp
push
cmp
jnp
aas
xor
mov
cmp
mov
push
push
insb
repz
pop
aad
push
std
mov
mov
ret
nop
mov
fcmovu
mov
xor
fcmovne
and
shll
in
repz
inc
mov
pusha
int
cmc
mov
mov
push
jno
push
mov
andb
adc
call
sub
in
pop
sbb
jmp
xor
fnstsw
icebp
lahf
inc
cs
fdivrs
imul
dec
shrb
pop
or
mov
fstps
out
fdiv
in
jbe
ljmp
cmp
fisubrs
jecxz
xchg
mov
add
mov
inc
subps
test
push
pop
xlat
mov
push
sub
or
daa
sbb
test
sub
sbb
and
js
xor
jo
popf
inc
sbb
pop
dec
sub
push
imul
xchg
adc
into
or
fwait
sbb
and
sbb
cmp
shrl
ss
jns
inc
imul
addb
pop
inc
or
cmp
and
push
add
loope
jl
out
sbb
and
imul
jle
jnp
add
mov
xor
popa
inc
js
adc
ss
in
inc
xchg
stos
push
jp
adc
jo
inc
mov
inc
adc
mov
test
fstl
shll
lock
pop
cmp
and
sbb
fstl
xchg
fucomp
xor
inc
inc
lds
jmp
arpl
subb
gs
xor
mov
lret
jo
jp
or
arpl
inc
xor
mov
dec
js
sbb
mov
ret
add
ds
add
hlt
sbbl
dec
sbb
cwtl
sub
out
push
fwait
neg
or
in
or
scas
hlt
in
adc
and
aad
js
jnp
clc
xor
ret
mov
mov
imul
jo
mul
xchg
sbb
lods
ljmp
push
push
mov
cmpsl
xor
cwtl
cmp
enter
add
lea
push
cld
jne
cmp
mov
ja
jne
and
imul
or
jns
xor
lret
sbbb
or
aad
fwait
xchg
scas
xchg
test
jno
sub
les
lods
rcr
adc
lahf
jge
aad
into
pusha
xchg
pop
lods
push
push
or
scas
xchg
pushl
xchg
ret
push
add
and
push
sub
sahf
rolb
sbb
cmp
test
or
je
sti
adc
inc
pop
fs
push
stos
test
mov
shlb
pop
mov
pop
test
addb
bound
cmpsb
cli
stos
notb
cmp
push
pop
js
mov
jl
std
out
mov
dec
into
jl
xchg
mull
push
lods
test
mov
mov
sbb
outsl
pop
movsl
or
lods
cmc
push
or
push
push
es
out
mov
repz
xlat
loopne
push
test
adc
out
mov
mov
push
fistps
cwtl
and
ja
jp
dec
dec
lods
xchg
and
fstpl
jmp
push
subb
addr16
cmp
mov
in
pop
or
xor
stos
inc
jmp
ret
sub
mov
pop
bound
hlt
popaw
lods
fisubs
push
push
cmpsl
or
xchg
pop
inc
mov
aad
push
push
pop
or
push
dec
pop
pop
jns
inc
subb
stc
or
push
xchg
stc
cmp
popf
sub
fdivrl
add
mov
insb
test
loopne
add
or
xor
notb
sub
testb
jp
cld
push
jge
adc
add
sub
adcb
mov
aad
cmp
ret
push
xchg
std
jp
pushl
daa
cmp
mov
jp
out
pop
ret
pusha
out
scas
loopne
sar
nop
xchg
shll
mov
mov
test
fmuls
rol
mov
ljmp
inc
xchg
sub
adc
call
inc
cmp
popf
pop
divb
outsl
fimuls
cmp
pop
push
loopne
adc
cmp
add
mov
or
mov
mov
movsl
leave
mov
xchg
out
stos
mov
stos
push
or
ljmp
mov
or
xchg
xor
cltd
cmp
xchg
or
fisttpl
cmp
mov
jmp
cld
add
shlb
cld
test
loopne
out
mov
movsb
out
daa
fisubs
aas
lock
add
gs
enter
imul
add
push
pop
stc
jne
xchg
pop
aas
cmp
pop
rcrb
sbb
push
pop
adc
inc
insl
xor
mov
lret
adc
jbe
mov
arpl
mov
imul
repz
in
xor
sti
jo
int3
popa
int3
mov
fwait
rolb
and
push
cli
rolb
mov
mov
dec
xchg
xchg
pop
sbb
pop
stos
xorl
testl
cmp
aaa
xchg
movsl
shll
lea
mov
add
popf
lods
jp
cli
insb
iret
mul
outsl
mov
fst
lahf
outsb
popf
call
outsb
push
sahf
out
pop
pop
xchg
inc
sub
and
jp
push
jb
jb
mov
cwtl
add
sub
into
mov
int3
or
daa
lret
mov
mov
repnz
in
push
jge
adc
dec
xor
mov
shlb
add
mov
cmp
in
cmp
sarl
sub
popa
in
xlat
or
xor
pop
stos
cmp
imul
mov
fdivl
movsl
dec
push
je
adc
cwtl
fimuls
add
cmp
xchg
out
jb
shlb
sub
out
imul
shlb
dec
sbb
mov
mov
jecxz
inc
mov
mov
push
test
lods
jb
data16
jae
aad
in
push
dec
fwait
add
or
dec
add
add
dec
das
mov
stos
jp
leave
addr16
mov
lret
add
jecxz
xor
cli
ja
mov
and
or
mov
add
jge
xchg
fistpll
stos
push
adc
and
ja
int
in
lcall
movsl
jg
negl
mov
add
adc
nop
adc
test
mov
dec
pop
push
xor
int
and
dec
cwtl
cmp
and
movsb
pop
aas
xor
fisttps
mov
cmpsb
outsl
stos
rorl
lret
rorb
mov
xlat
mov
jb
pushf
cwtl
mov
mov
sub
insl
and
add
xlat
ret
lcall
sti
arpl
cmpsb
xchg
push
stos
pop
test
sbb
test
pop
push
dec
ja
pusha
aas
or
aam
add
in
insl
fsub
jno
mov
testb
es
sbb
mov
dec
aaa
int3
mov
cld
pop
jno
testb
adc
out
roll
pop
xor
push
out
movsl
push
dec
mov
fstl
and
adc
xchg
mov
ret
idivb
mov
xor
out
dec
pop
jne
out
sti
sahf
push
cmpsl
mov
and
cmp
xchg
or
in
sti
daa
lods
adc
rol
fs
out
aaa
aam
mov
mov
mov
lcall
sbb
mov
push
icebp
jg
jl
inc
sbb
ja
mov
jae
scas
mov
adc
pop
cmp
iret
frstor
aaa
lds
mov
fmull
aam
lret
lds
mov
xchg
dec
or
mov
in
mov
lahf
stos
rcll
jg
out
jnp
or
sub
mov
pop
adc
test
nop
cmp
out
or
xorl
cmp
jbe
fstpt
sahf
enter
test
inc
loopne
insb
inc
dec
cmpsl
push
je
iret
xchg
js
xchg
test
dec
cmpsb
data16
out
mov
jnp
mov
aam
jns
pusha
or
iret
push
in
scas
sub
fs
insl
mov
popf
jmp
lahf
lea
scas
sbb
in
xor
out
pop
fstl
daa
sarl
inc
mov
push
add
mov
pop
rclb
pushf
sub
cld
stc
mov
and
daa
xor
add
sbb
popa
into
imul
shlb
adc
sbb
mov
ljmp
test
xchg
pop
dec
mov
inc
sbb
pop
aad
xlat
std
cmp
lret
pop
cli
xchg
pop
jecxz
adc
or
mov
cmp
cmp
xor
xchg
cmpsl
das
cwtl
push
inc
push
xor
push
scas
push
int
out
andb
call
popa
icebp
mov
stc
dec
mov
shrl
les
xor
loop
add
int
mov
int
xlat
push
mov
mov
add
mov
lret
jmp
xor
add
cmpsl
fwait
pop
scas
dec
mov
out
call
movsb
mov
or
aas
out
addb
scas
ret
jnp
xorl
sub
mov
mov
jle
or
jae
ficoms
sahf
dec
cmp
xor
dec
int
in
mov
add
add
mov
xorl
stc
add
xor
aas
inc
test
cmp
or
mov
pop
pop
insb
inc
jbe
xor
push
push
movsl
stos
jb
pop
fucomip
adc
popf
adc
inc
inc
cmpsl
add
and
add
cmpsb
clc
sti
xchg
fidivl
or
aas
or
or
negl
jns
pop
xchg
inc
mov
stos
hlt
push
outsl
outsl
test
jae
addr16
cwtl
dec
dec
imul
hlt
push
shl
ljmp
int3
inc
into
aad
sub
out
push
mov
sub
fbld
mov
pop
push
push
add
xor
add
stc
mov
ja
pop
leave
adc
aad
dec
jo
pop
popf
or
inc
jecxz
test
aam
ja
sbb
into
std
mov
or
mov
shll
pop
xor
out
xchg
rcrl
ret
stos
pop
xor
xchg
push
ret
sub
lahf
lea
adc
fsubr
dec
mov
inc
leave
fs
divb
sbb
mov
cmp
lret
mov
hlt
enter
js
ja
jg
stos
push
repz
notb
sbb
add
in
or
push
or
dec
dec
subl
mov
mov
mov
push
sbb
pop
lahf
jg
faddp
fsubrs
mov
mov
fidivl
lods
fidivrl
xchg
stc
adc
cmpsb
xorl
test
jmp
inc
cmp
movsl
adc
in
cmc
ss
addb
iret
push
dec
fbstp
test
int3
sbb
lds
pop
in
into
aaa
loop
pop
mov
sub
mov
mov
mov
push
insb
add
jp
iret
mov
mov
lods
andl
cltd
or
sbb
and
push
out
xor
ljmp
dec
enter
add
jmp
in
les
adc
mov
push
push
push
test
xchg
push
pop
je
daa
out
ds
and
inc
movsl
jmp
xchg
popa
loopne
adc
js
ja
data16
movsb
jmp
jne
fcoms
fmuls
dec
jb
sub
push
pop
pusha
xlat
out
stos
dec
jae
test
cmp
xchg
xchg
test
jecxz
lcall
push
idivl
mov
cmp
cli
ret
scas
repnz
adc
and
add
data16
dec
jo
int
aam
cmp
bnd
pop
test
push
fldenv
adc
rorl
icebp
mov
mov
mov
inc
je
adc
fisubrl
paddb
or
and
inc
cmp
sbb
cmp
inc
les
das
sbb
add
ljmp
xchg
movsl
loopne
cmp
jne
call
cmp
fdivp
jae
leave
lea
xor
push
in
fs
mov
stos
ret
aas
or
and
mov
lds
inc
repnz
cltd
jbe
sbb
xchg
popl
jb
add
jo
leave
das
push
nop
mov
or
loop
and
repz
or
dec
dec
notl
push
xchg
add
aas
mov
adc
es
leave
mov
lret
int
mov
fisttps
ds
pop
add
out
inc
ja
data16
lods
daa
add
sbb
adc
cmp
sbb
popa
mov
xchg
cltd
sub
stc
fisubl
push
cmp
stos
movsl
push
inc
xchg
test
lods
lret
xor
lock
icebp
pusha
fidivrs
pop
dec
add
cmpsb
movsl
inc
mov
push
fnsave
test
inc
or
cmp
popa
cmp
scas
dec
test
lahf
lret
mov
cs
pusha
push
loope
call
jnp
pop
insl
insl
dec
fldcw
loop
cmp
enter
cmp
movsl
repnz
jle
inc
push
test
push
call
and
or
out
dec
push
jo
xlat
xor
xchg
cli
lds
in
xchg
mov
push
icebp
dec
sahf
lds
add
aam
pop
add
fstpl
sbb
int
and
fidivl
pshufw
xchg
paddusw
pushf
insb
shrl
out
out
lahf
xor
scas
and
jns
sbb
mov
or
xchg
out
cmp
fnstenv
insb
xor
push
clc
aam
adc
xchg
jbe
lock
or
xor
mov
push
pushf
repz
popa
sub
in
or
xor
ret
sub
int3
cmp
xlat
mov
pop
sub
loopne
decb
les
out
xchg
xchg
or
push
add
aas
cli
xchg
nop
jmp
and
sub
inc
inc
ljmp
jp
jge
aam
daa
dec
mul
adc
pushf
hlt
sub
mov
fdivl
test
fs
add
jbe
dec
push
sbb
cld
push
adc
mov
shr
inc
pop
and
imul
xor
adc
fcmovnu
test
add
push
cwtl
jmp
jge
mov
mov
dec
loopne
ret
cmp
push
sub
stos
add
clc
lret
and
mov
movsl
jl
push
fcoml
fs
psrlq
or
dec
push
push
jo
fwait
enter
test
sub
cmpsb
jo
cmp
add
shlb
pop
mov
xor
enter
xlat
sbb
jns
adc
ds
mov
pop
andb
fdivrs
jns
pop
jae
cmp
stc
aad
stos
loopne
jne
mov
hlt
pop
adc
mov
std
iret
and
ret
int
test
xor
mov
dec
push
mov
push
ret
subb
jmp
pop
cmp
mov
daa
movsl
xor
pop
loop
xor
xor
dec
je
jle
adc
sub
cmp
ror
outsl
ss
jb
mov
cmpsl
insb
sbb
xor
add
sti
xor
pusha
mov
push
outsb
outsl
hlt
js
jb
movl
xchg
js
addw
ficompl
ljmp
mov
sbb
xor
sarl
pop
add
imul
mov
lods
jmp
lea
push
push
adc
sub
fs
or
mov
call
aas
out
mov
push
push
scas
cmpl
xchg
push
ss
hlt
cli
push
push
cmp
push
push
popa
add
cmp
daa
mov
adc
stc
addr16
ret
xor
or
les
lock
fsts
inc
and
idivb
push
add
or
adc
lret
movsl
cltd
dec
cld
push
adcl
mov
movl
das
subl
or
push
fldenv
hlt
out
pop
adc
push
pop
andb
adc
fcmovnu
stos
xchg
dec
or
adc
dec
push
jb
sub
push
push
ss
in
fs
or
add
jle
movsb
cmpsl
adc
cmpsl
loopne
and
ja
pop
xchg
fsubl
sub
mov
addr16
sbb
adc
arpl
js
int3
shl
cmp
dec
dec
daa
jl
div
outsl
aas
sarl
lret
ds
mov
jmp
lret
cltd
insl
sub
shll
and
subb
sub
mov
in
jecxz
push
or
inc
mov
movsb
pop
aam
xor
out
mov
daa
mov
pusha
fwait
add
jl
sbb
pop
pushf
bound
or
mov
lcall
fs
int3
xchg
in
enter
and
sbbb
sub
cmc
leave
and
inc
shlb
test
add
pusha
push
or
push
cmp
jno
jecxz
ret
shlb
outsb
aas
jbe
xlat
mov
dec
xor
cwtl
and
call
push
cmp
movsb
mov
out
rcrb
add
cmp
xor
mov
aam
fstpt
je
jae
sahf
outsb
int3
cld
push
test
fidivrs
test
jg
add
sahf
and
sbb
cmp
outsb
push
inc
pop
mov
add
mov
or
data16
loop
pop
push
cmp
and
ret
sub
xchg
cwtl
push
adcb
sti
fstl
mov
push
mov
mov
sti
fst
dec
push
jmp
aaa
cltd
fwait
mov
sarl
push
ror
lret
clc
xchg
jnp
jnp
fucomi
repz
gs
and
test
mov
int3
pop
xchg
icebp
sti
xchg
or
addr16
aas
out
ss
cli
ror
clc
mov
sbb
push
sbbl
les
sbb
aaa
pop
movsl
xor
lock
ss
je
xor
pop
rcrb
jo
cmp
or
int3
cmp
daa
jbe
adc
jg
push
mov
shll
daa
fsubs
push
and
lea
mov
aad
or
push
gs
ror
pop
jbe
sbb
mov
iret
mov
fdivrs
inc
cmpsl
push
andb
ficoms
sub
xchg
mov
test
frstor
outsb
fidivl
xchg
dec
pop
lea
xchg
jmp
inc
mov
mov
mov
movsl
mov
adc
test
inc
ljmp
dec
cmp
aaa
outsl
sti
adc
xchg
test
fisttpll
adc
mov
ja
lods
xchg
cs
cmp
test
mov
les
and
enter
je
loopne
xchg
mov
sbb
cmp
lods
jp
cld
int
data16
mov
lods
mov
push
in
sbb
pop
push
inc
sbb
sub
fldenv
fists
inc
cmp
and
inc
pop
sti
fcom
or
or
and
decb
add
outsl
jne
or
mov
xchg
mov
add
cmp
clc
lahf
fistpll
pop
xchg
xorb
repz
push
sub
stc
lods
push
add
fdivrs
les
in
ss
inc
or
es
cmpsl
pop
mov
mov
xchg
dec
xchg
jl
jae
xor
sub
push
shl
roll
xor
ds
loop
push
and
pushf
and
popa
add
push
jmp
mov
fiaddl
jno
xor
notl
pop
in
push
bnd
insl
mov
mov
add
sub
stc
push
addr16
cli
and
nop
jmp
test
or
sbb
outsl
mov
shll
in
cmp
xor
mov
lods
ljmp
mov
mov
pop
inc
andb
jle
jno
sbb
push
sahf
cmpsl
aad
sbb
adc
pushf
jmp
mov
inc
jae
int3
sbb
or
imul
stc
jno
mov
das
xor
clc
xor
cmp
aad
mov
into
push
test
add
stos
fdivrl
pop
rolb
mov
sub
mov
inc
adc
sbb
shll
js
inc
fldl
pop
push
and
inc
shlb
sbbb
mov
add
sbbl
in
sar
pop
jge
add
fsincos
or
fdivrp
pusha
stc
xorl
xorb
dec
arpl
xor
jo
bnd
pusha
xchg
lcall
lret
add
div
incb
cmpl
push
gs
fidivrl
dec
outsl
subb
or
hlt
cli
cltd
cmp
push
sbb
pop
sub
pusha
icebp
mov
cmc
adc
cmc
sub
aas
mov
jg
hlt
out
das
fmuls
lds
daa
push
stc
aaa
ds
jl
jno
and
or
dec
cmp
lahf
bnd
fldl
shrl
adc
mov
into
out
mulb
xor
aam
testl
add
lahf
mov
sbb
shrl
pop
push
xor
xlat
out
ds
inc
push
mov
mulb
adc
sbb
jae
push
fisubrl
jp
idiv
fsubs
out
sbbb
jmp
xchg
fstps
jle
mov
xor
or
test
add
in
shrb
jae
fnstsw
aaa
sahf
lahf
stos
push
inc
dec
filds
loope
add
mov
mov
pop
or
hlt
cmpsb
mov
lcall
adc
push
ficompl
xchg
push
sbb
or
mov
lret
cmova
push
mov
xchg
rcrb
inc
jo
call
sub
pop
scas
push
xchg
jnp
xor
leave
cmp
sti
lock
push
dec
dec
jns
mov
push
stc
xor
gs
lea
into
jns
xor
jbe
shr
fsubs
lahf
clc
pop
aam
and
pop
mov
and
add
mov
rol
int
fistl
loop
fucomi
push
ljmp
lods
and
loope
loop
jno
lcall
sbb
nop
jge
inc
ja
adc
hlt
xchg
sti
test
push
inc
dec
xor
cmp
pop
cli
lock
rclb
pop
adc
push
jmp
in
ss
enter
xchg
cmp
in
popf
dec
aaa
xchg
xchg
push
sub
stos
mulb
and
in
lahf
cwtl
pop
jns
mov
out
xchg
adc
sbb
sbb
dec
movsb
shll
xor
or
mov
jle
jl
lret
cmpsl
vpcmpeqb
pop
pop
out
push
les
sub
xchg
and
fiadds
xchg
sbb
jmp
mov
ja,pn
dec
and
push
scas
aaa
cmpsb
out
pop
fidivrs
jns
lods
and
xchg
xorl
loop
cmp
or
dec
stos
or
jno
sbb
insb
stc
imul
sar
adc
ret
lods
rcrl
stos
jg
push
ret
xor
add
dec
mov
mov
rorb
adc
ret
cmp
and
jle
cmp
mov
leave
cltd
scas
mov
push
scas
les
imul
cmp
pop
call
arpl
sbb
divl
jge
lret
lea
mov
dec
push
xor
sbb
sub
add
pop
or
insl
and
movsb
in
idivl
cmp
push
aad
xchg
mov
scas
jle
nop
dec
cwtl
xorl
gs
fbld
mov
je
mov
pop
and
mov
adc
js
out
fildl
lret
xchg
jl
push
loopne
pop
dec
aas
stos
or
jnp
jecxz
pop
in
and
decb
pop
test
jmp
push
fucomi
and
sbb
repnz
pop
jne
fcomps
dec
popf
adc
pop
lret
stos
loope
mov
adc
and
jae
leave
cmc
push
xchg
cmpsl
sqrtps
jbe
or
scas
aaa
push
sahf
push
ljmp
push
fisttps
cmp
int
jbe
xor
jo
jno
shll
mull
fildll
dec
inc
hlt
repz
dec
lret
imull
dec
push
imul
inc
lret
ljmp
cmp
dec
push
nop
push
in
xchg
jmp
leave
aam
imul
dec
aaa
sahf
and
rorb
dec
or
mov
mov
sbb
push
icebp
mov
cmp
arpl
add
ljmp
dec
mov
ficompl
es
cwtl
testl
or
jecxz
sbb
adc
in
lret
jne
fwait
testb
fcmovnb
jge
pop
std
mov
xor
je
or
jl
dec
xlat
cwtl
mov
fiaddl
out
jg
ja
jo
adc
imul
cmp
rcrl
sbb
lcall
test
jg
fdivrs
cwtl
add
pop
fwait
mov
adc
lea
js
insl
or
test
std
mov
sub
jecxz
icebp
leave
inc
iret
test
pop
dec
jp
jp
cld
insb
push
inc
je
sarl
cmp
outsl
jb,pt
int
hlt
sbb
add
outsl
sti
mov
cmp
test
sahf
jno
outsb
inc
pop
and
push
push
cmp
into
outsl
daa
sub
arpl
addr16
jbe
jg
cmpsl
test
pop
imul
add
test
fcoms
mov
int3
push
dec
xchg
je
mov
inc
bound
insb
call
pop
cwtl
push
popa
insb
sbbl
xor
inc
push
cmp
jle,pn
lods
mov
add
test
out
imull
lret
inc
and
insl
xchg
cs
xor
int3
sub
fldl
xchg
lods
fimull
add
lahf
sub
addr16
imul
mov
loopne
jge
jmp
js
mov
mov
data16
sti
frstpm(287
stos
push
and
adc
ljmp
fdivrl
dec
xchg
mov
pop
lods
sub
pop
cmp
imul
push
mov
lahf
fnop
out
mov
decb
dec
rcll
stos
sub
mov
pop
ret
cmp
out
dec
pop
adc
out
ljmp
cld
je
leave
mov
and
nop
push
and
dec
xchg
into
push
notl
les
shll
and
mov
xor
ror
rcrl
andb
jle
cmpsl
push
sbb
enter
aaa
add
arpl
dec
adc
pop
cwtl
psubusw
cmp
sbb
loopne
aad
jo
rorb
bound
xchg
in
stos
negb
in
lcall
xchg
lods
ljmp
xchg
fs
cmp
mov
mov
pop
addr16
or
mov
mov
add
cmpsb
push
and
sub
xchg
or
lcall
cmp
pop
cmpsb
sbb
dec
shl
pop
nop
sbb
inc
shlb
scas
dec
repz
pop
int
xchg
data16
es
test
out
dec
into
andl
or
pushf
decb
dec
jmp
add
push
cmc
cmp
push
repnz
cmpsl
ret
loop
push
inc
mov
push
dec
in
jae
loop
lea
jecxz
cmp
push
cld
cmp
adc
lock
jmp
les
push
or
sub
xor
pop
mov
pop
pop
cmp
and
and
cwtl
imul
out
inc
cmp
lcall
jg
stos
or
push
jbe
out
lds
fucomp
or
cmp
lds
ret
stos
movsb
js
adc
fidivs
std
dec
gs
out
leave
lret
repz
add
push
arpl
mov
xchg
movsl
xchg
push
mov
dec
jns
mov
lahf
mov
xchg
push
scas
cmp
into
pusha
nop
fiadds
in
sbb
jae
push
lea
jecxz
push
fsubrl
clc
int3
scas
shrb
les
fwait
inc
xor
fstl
fs
popf
repz
jmp
mov
dec
out
xchg
and
or
shrl
jo
cmp
arpl
or
pop
lret
mov
lea
popf
push
inc
xchg
cs
fcom
sbb
out
inc
lds
push
andl
mov
xor
scas
jbe
dec
and
pop
dec
xor
aad
into
jne
mov
loop
roll
or
add
jne
push
lea
cpuid
xor
lret
sar
sti
cmp
and
mov
xchg
dec
xchg
ljmp
roll
xchg
popa
cmp
in
mov
sub
pusha
mov
jns
aas
sbb
lods
repz
push
jne
pop
popa
jmp
mov
adc
pop
stos
repz
dec
js
dec
cmp
in
jl
push
test
js
mov
jge
pop
mov
mov
mov
int
push
fistl
sbb
adc
clc
inc
call
loope
mov
icebp
nop
in
xor
cld
rcrb
jmp
adc
roll
dec
fsubrl
lods
test
bound
xor
fcomps
lea
jo
cmp
imul
adc
xchg
ja
mov
fldl
inc
stc
push
pop
fstpt
mov
jmp
mov
mov
leave
xchg
mov
sbb
sub
jne
xchg
sbb
addr16
cmp
jecxz
xchg
add
inc
cmpsl
pop
enter
mov
dec
iret
lret
xchg
or
inc
mov
iret
in
jno
arpl
mov
cmp
out
mov
jle
xor
adc
pop
ret
inc
pop
push
sarl
xor
push
ret
jnp
jo
mov
pop
mov
dec
iret
incb
xlat
ja
dec
xchg
mov
imul
adcb
xchg
mov
push
pop
sbb
into
popa
mov
and
jg
jno
xchg
pop
mov
mov
lahf
sub
cltd
mov
and
and
daa
out
lock
imul
jne
dec
adc
int3
dec
ficompl
push
loope
shll
fiaddl
ja
mov
jmp
neg
sub
pop
daa
dec
shr
xchg
mov
fistpll
sub
aaa
mov
adc
in
leave
repnz
daa
mov
in
test
or
pop
aam
dec
adc
ret
jmp
cld
jo
cmc
mov
xchg
jae
push
or
push
and
std
hlt
xchg
dec
sub
inc
dec
add
js
mov
jbe
xchg
push
repnz
sbb
rcll
push
mov
jb
add
and
lock
in
inc
pop
out
pop
jl
mov
dec
daa
out
push
jnp
or
sbb
orl
push
stc
mov
adc
mov
add
mov
gs
push
ljmp
lock
sub
add
imul
xor
jge
add
js
xchg
jae
add
pushf
sub
or
lret
stc
movsb
pop
add
jle
mov
mov
mov
fmul
jmp
adc
mov
xlat
sbb
pusha
sub
addl
sub
sbb
psubusw
movsb
mov
cmpsb
push
scas
bound
aas
cli
push
xor
subl
add
and
lds
pop
mov
mov
pusha
pop
jno
fwait
mov
into
mov
xchg
dec
jno
movnti
pop
or
xchg
xchg
mov
or
mov
push
mov
inc
ss
sbb
cmp
sbb
inc
cltd
test
cs
xchg
repz
int
mov
mov
xchg
xor
mov
loop
jp,pt
sub
andb
push
inc
mov
lret
test
movsb
inc
test
inc
pop
fcomps
jle
sbb
or
push
dec
cmp
cmp
imul
iret
adc
mov
aaa
push
cmpsl
cmp
lock
inc
sbb
into
mov
add
xor
and
decl
mov
imul
lahf
test
sub
addb
add
mov
push
int3
pop
pop
scas
cs
ljmp
mov
mov
repz
ret
fistl
ss
cmp
mov
lock
cmp
sub
pop
jg
jnp
add
add
cmc
jnp
loope
sar
bound
mov
sbb
out
repnz
fidivrs
mov
sbb
push
popf
icebp
inc
fs
mov
pop
fdivp
pusha
je
jns
and
sub
inc
add
sahf
bound
xchg
sbb
jp
popa
mov
cmp
lds
jbe
lods
inc
and
lret
adc
pop
movb
jo
mov
cwtl
jno
or
aam
ljmp
ljmp
push
add
nop
pop
movsb
fsubrp
sbb
adc
sahf
cmpsl
movsl
jbe
cmp
mov
pushf
mov
leave
fcoml
mov
and
dec
sub
mov
push
cmp
mov
movsl
pop
je
or
adc
and
imul
cltd
pop
inc
pop
ficomps
xor
dec
push
or
xor
test
xor
je
aaa
sbb
or
loopne,pn
clc
mov
les
xor
das
aas
call
mov
lock
mov
outsb
adc
or
test
ss
ja
xor
shll
mov
sahf
clc
cmp
adc
xor
test
roll
pushl
inc
lods
push
mov
outsl
cld
dec
mov
or
dec
filds
out
push
call
dec
or
cmp
push
movsb
fildll
or
int
push
dec
cmpsb
loopne
enter
fld
pop
aaa
out
jae
add
inc
int
ficoml
test
inc
sub
out
and
icebp
mov
outsl
pop
jmp
push
cwtl
out
ror
or
aad
imul
in
in
clc
shlb
test
jbe
push
in
lcall
addr16
mov
nop
cs
sub
xorl
push
nop
or
imul
sbb
cld
and
mov
cmp
arpl
call
mov
aam
cmp
cmpb
arpl
cwtl
out
dec
pop
pop
jg
push
cmc
andl
lret
es
lods
xor
pop
cs
stos
out
lcall
mov
pusha
test
xchg
cli
das
mov
sbb
ja
mov
jbe
daa
adc
dec
add
int
aas
ss
packuswb
cld
cmp
out
stc
movsl
mov
mov
es
in
mov
jmp
popf
xchg
cltd
fcmovu
loope
jns
sarb
adc
jo
repnz
mov
pop
push
jmp
sbb
inc
and
pop
xor
mov
cmp
push
test
adc
mov
subb
push
adc
push
jno
lea
mov
fs
push
repnz
push
push
or
dec
fs
fmull
mov
add
and
sub
dec
arpl
adc
pop
lods
pop
into
gs
pusha
enter
out
sbb
sub
in
jmp
mov
pushf
mov
xor
loopne
jne
jno
mov
mov
jns
loope
div
push
fcomp
cmp
inc
insl
ljmp
mov
aaa
pushf
pushf
imul
mov
or
xor
inc
dec
in
push
inc
pop
out
push
test
loope
push
or
mov
lret
inc
or
mov
aad
dec
mov
and
pinsrw
inc
out
jne
mov
cmp
inc
sarl
inc
test
sub
dec
mov
adcl
or
push
mov
scas
test
inc
push
inc
stos
dec
enter
loop
fwait
xor
pop
xchg
out
xor
sbb
lods
or
sub
adc
cmp
rolb
push
adc
jl
mov
adc
xor
xchg
adc
mov
mov
xor
sbb
les
sub
cmpsl
aas
mov
and
scas
mov
cmp
fsubs
add
outsl
dec
sub
cmpb
xor
mov
inc
mov
insl
inc
arpl
and
imul
insb
add
loope
sub
dec
jle
adc
aas
inc
cmc
xorl
gs
cmpsb
sbb
fldcw
jbe
jmp
outsl
or
pop
pop
push
jno
lret
insb
jl
push
jg
push
clc
sub
mov
out
aas
imul
add
cmp
jbe
das
cmp
sub
pmullw
mov
in
jb
push
inc
sbb
and
and
clc
lret
xorb
dec
xor
xor
loope
aaa
push
sbb
sub
sbb
push
andl
cld
mov
jbe
xor
inc
jmp
and
ja
loop
cmp
mov
addb
jbe
lret
pop
decb
lods
fcmovb
inc
jae
movsb
or
icebp
xchg
mov
dec
jno
js
scas
pop
aam
jecxz
xchg
scas
and
mov
inc
cld
aam
mov
sbb
cmp
adc
test
xchg
mov
cld
jne
loop
pop
xchg
ficomps
sbb
leave
mov
dec
outsb
test
decl
sbb
fwait
mov
mov
cmp
std
into
incb
adc
jg
cmp
mov
out
jle
cvttps2pi
ds
in
sub
push
jl
fwait
cmpsb
ret
movl
inc
rol
ja
out
test
icebp
icebp
movb
faddl
inc
inc
xlat
scas
int
stc
scas
mov
insl
fcomps
push
pop
dec
mov
stos
inc
sbb
dec
dec
icebp
popf
ds
in
test
ljmp
mov
loop
clc
push
pop
cs
aam
mov
push
xchg
push
cmc
cmc
push
and
or
push
cld
push
xchg
js
fbld
cmc
test
imul
aad
cmp
xor
jae
orl
push
insb
out
pop
mov
in
sub
cltd
fldenv
pop
and
push
xchg
xchg
cmp
adc
mov
cmp
or
sti
in
icebp
in
xor
sbb
int3
jno
push
sbb
mov
movsl
or
pop
add
test
orl
xchg
ljmp
cltd
sahf
xor
push
jge
inc
dec
inc
icebp
sub
ret
mov
les
mov
or
shlb
cltd
jbe
leave
cmp
adc
lods
pop
mov
test
mov
xchg
cmpsb
sbb
pop
jns
xchg
lahf
dec
add
out
mov
gs
xchg
adc
or
lock
ret
xor
cmp
cs
mov
and
push
add
into
enter
orb
push
cmp
xor
jg
in
jle
mov
std
std
mov
stos
subb
push
jae
dec
cld
add
or
rcll
pop
push
ds
or
cmp
cmc
sahf
pop
mov
mov
je
aad
out
sar
aas
dec
out
add
loopne
testb
rolb
xchg
push
cmc
das
cld
xorl
push
mov
add
pop
adc
movd
dec
scas
out
or
mov
mov
cmpsl
fsubrl
nop
xchg
cmp
cmp
insb
push
sub
pop
fucom
scas
mov
aam
xchg
pusha
scas
push
cltd
xor
imul
inc
xorb
negb
ror
lret
nop
push
inc
inc
out
add
mov
jnp
push
rolb
daa
gs
sub
cmpsb
repz
psrld
xorl
or
or
dec
push
jo
pusha
outsb
jne
dec
lock
push
push
adc
popf
mov
lds
lret
inc
dec
xchg
or
push
dec
and
inc
aam
outsl
or
cmp
pop
xor
inc
push
mov
xchg
push
cmp
and
mov
dec
jnp
mov
pusha
dec
ja
xor
mov
int
xor
outsl
aad
push
mov
add
orl
subl
gs
mov
xor
insb
xor
cmp
clc
jecxz
xchg
mov
shll
and
pop
or
push
and
or
ljmp
push
mov
mov
in
scas
mov
lret
mov
mov
sti
stc
or
xchg
or
xor
ljmp
add
jb
bound
cwtl
into
jmp
call
add
in
inc
mov
insl
repnz
inc
fwait
jmp
sbb
mov
cwtl
push
out
scas
sub
notb
adc
dec
nop
aad
xchg
xor
jnp
mov
push
adc
jl
push
push
sub
mov
pop
dec
clc
inc
mov
popa
mov
mov
push
dec
shrb
jecxz
mov
popa
repnz
add
sbb
jp
inc
fidivl
fnsave
jne
xor
mov
push
in
aas
jle
imul
fwait
out
loop
cwtl
stos
lods
pop
jle
inc
mov
arpl
scas
pmaxsw
push
inc
or
push
inc
inc
nop
and
jne
sbb
pop
inc
frstpm(287
arpl
inc
xor
orl
into
lock
fcomip
ret
xor
dec
and
out
shr
ljmp
jmp
cmp
dec
adc
cltd
pop
xchg
mov
xor
mov
in
pop
insl
ret
push
std
lods
mov
mov
cli
and
xchg
and
push
arpl
jns
rcrb
inc
or
ret
jae,pt
in
cmpsl
push
jo
fs
mov
xorb
ss
jp
adc
mov
enter
scas
or
mov
es
cmp
outsb
xor
mov
mov
push
das
test
mov
mov
fs
push
fsubl
cmp
call
push
mov
dec
inc
shrl
movb
xchg
clc
xchg
testb
dec
or
xor
out
out
pop
ror
in
xchg
scas
stos
inc
in
fwait
jp
jno
lods
jne
cmp
push
sub
into
inc
inc
dec
mov
testb
aad
dec
cmpsb
scas
cmpsb
inc
dec
nop
in
or
or
sbb
push
sbb
sub
xchg
jl
add
rcll
mov
in
shlb
into
xor
das
fstpl
push
ja
cli
mov
ffree
sahf
pop
mov
dec
insl
inc
jo
dec
inc
jno
jecxz
lock
lret
int3
popf
pop
add
adc
pop
iret
cmpsb
repnz
call
call
fldcw
dec
aam
mov
lcall
aad
js
push
cmp
sub
sbbb
outsb
dec
ss
or
jp
or
adc
out
sub
fdivrs
push
sub
insb
jecxz
push
adc
adc
sbb
imul
mov
cmpsl
sbb
jb
ror
popa
push
aam
inc
ret
pop
or
cmpsb
ss
add
aam
clc
pushf
jbe
in
push
movsl
loope
hlt
inc
mov
mov
pop
inc
js
mov
ja
push
or
and
jecxz
in
sub
and
jl
or
push
shrb
xchg
xor
shrl
sbb
mov
xorl
movsb
in
ret
xchg
aas
jae
call
lahf
jbe
xchg
scas
imull
mov
xchg
xor
and
mov
jno
dec
xor
stc
jge
add
dec
adc
add
sbb
mov
xchg
xchg
loopne
jns
pop
popf
sbb
pushf
arpl
daa
mov
xor
inc
mov
xchg
icebp
sbb
cld
mov
inc
scas
mov
ss
push
sub
sbb
adc
mov
ds
sbb
popf
mov
and
or
popa
testb
xchg
test
lock
jl
sub
call
test
loope
push
jecxz
mov
jp
inc
xor
insl
sbb
ss
pop
icebp
stos
xchg
push
adc
dec
mov
fldl
xchg
dec
and
je
cmp
cs
and
adc
int
test
test
out
adc
lea
add
sbb
xchg
push
and
and
sub
dec
add
xchg
xchg
add
and
add
add
mov
jecxz
sbb
sbb
inc
mov
lods
jnp
add
sti
push
and
fwait
fwait
pushl
leave
dec
mov
imul
sbb
lock
pop
lahf
push
out
mov
xchg
dec
out
xor
leave
xor
fcoml
fiadds
adc
frstor
aad
imul
sub
pop
mov
and
xor
push
cmpsl
rorb
and
sbb
pop
lret
andl
add
dec
ljmp
out
and
sub
jmp
ja
mov
test
mov
cmpsl
sahf
fnstenv
hlt
inc
or
test
push
std
mov
lret
clc
hlt
faddl
push
jle
mov
cmp
jp
jae
push
outsl
or
push
and
ja
stos
and
int3
cltd
and
test
mov
push
and
mov
cwtl
mov
sti
lret
test
or
dec
andl
pop
sti
or
outsl
mov
mov
xor
cltd
lcall
fstpl
fnstenv
jle
mov
aaa
push
out
in
xor
mov
fsubrl
mov
pop
cmovb
push
mov
jge
lcall
cltd
xchg
adcl
and
xchg
and
xor
jecxz
ret
xchg
pusha
inc
xchg
mov
shr
or
dec
fists
lret
or
rclb
imul
enter
std
xor
mov
lds
fldl
sbb
cmp
xor
loopne
nop
sbb
ds
and
hlt
xor
xor
mov
mov
lahf
pop
ds
shlb
push
push
push
stc
ljmp
and
and
sbb
test
push
js
sub
and
mov
lods
and
dec
test
rcrb
dec
mov
out
xor
ljmp
mov
mov
push
mov
insb
mov
xor
add
jbe
adc
testl
sub
mov
test
test
jns
das
jge
sbb
jl
lret
cmp
shl
test
dec
xor
mov
adc
outsl
xor
mov
xchg
mov
and
addr16
fsubs
sbb
push
sahf
lods
std
mov
adc
push
jle
sti
dec
cmp
sbb
push
ljmp
cmp
adc
push
je
xor
addl
push
xor
xchg
xchg
xor
stos
mov
sub
add
xchg
cli
flds
xchg
out
adc
gs
arpl
or
dec
data16
insl
inc
ds
cmp
jae
mov
add
and
xchg
js
cmp
sbb
mov
mov
cld
mov
adc
mov
or
daa
jecxz
mov
sbb
in
jo
add
mov
movsl
imul
dec
out
movsl
ret
into
and
cld
dec
cs
ficomps
xor
lds
hlt
push
addr16
mov
jae
jno
mov
cmp
add
jns
incb
shrl
mov
or
mov
sub
inc
xchg
dec
add
sub
inc
inc
test
repz
xchg
sub
fsubrs
sbb
push
outsb
orl
cmp
mov
sbb
in
sbb
xlat
push
sbb
dec
movsl
jno
rolb
and
loope
jl
inc
das
in
sub
dec
add
inc
and
adc
and
clc
test
jle
les
mov
xor
dec
lds
cmpsl
adc
lea
test
leave
gs
mov
imul
sub
sbb
lods
mov
fiadds
mov
jge
pop
aam
fs
mov
imul
sbb
mov
shll
push
imul
into
cmp
mov
mov
lcall
test
and
js
frstor
testb
addb
jne
adc
or
loopne
imul
andl
shlb
ret
mov
xchg
std
or
loope
mov
mov
addr16
mov
pop
in
or
jns
insl
jnp,pt
mov
or
push
ja
mov
jo
fists
cltd
and
fwait
mov
push
jmp
rolb
ss
fildl
push
retw
mov
data16
out
lahf
xor
in
in
cmp
ja
xchg
cwtl
cs
add
test
xchg
push
push
std
adc
jns
lea
xlat
stos
cmp
adc
adc
scas
jbe
xchg
aaa
aas
xor
sbb
mov
cld
mov
lock
in
shlb
adc
pusha
in
loop
aam
divl
pop
mov
and
leave
das
sahf
and
adc
movsb
mov
add
enter
xlat
and
add
movsb
xchg
mov
push
ljmp
mov
ret
mov
dec
mov
jae
or
int
jl
adc
dec
xchg
repnz
sbb
dec
adcb
mov
sub
in
jb
cmp
mov
jne
pop
and
mov
cmc
loope
add
xchg
lods
cli
cli
daa
or
adc
into
mov
popf
jge
pcmpeqd
bound
jp
out
lret
clc
mov
dec
jne
scas
add
inc
stos
pop
flds
sahf
mov
cmp
jnp
xor
lahf
nop
push
subb
inc
outsl
inc
mov
loop
mov
sahf
add
inc
les
test
data16
inc
outsl
outsb
rol
outsl
dec
or
cs
or
movsb
or
mov
rcl
mov
mov
sub
cmp
lock
dec
mov
imul
popf
push
xchg
fcoms
iret
clc
jns
or
jmp
pop
push
push
fimull
sarb
sbb
loopne
xorl
xchg
or
cmp
mov
das
ss
adc
lods
xor
add
jecxz
fimull
lods
or
mov
cmp
push
shrb
mov
imul
pop
push
push
xor
std
cmp
jecxz
jmp
outsl
xchg
pop
push
sub
fisttpl
fwait
mov
push
xchg
cltd
iret
lods
mov
in
push
inc
xchg
loope
fnstcw
neg
testb
and
mov
dec
popa
out
cmc
jg
dec
push
xchg
jns
add
or
sarl
sbb
or
fwait
ret
pop
dec
test
jecxz
call
jp
xchg
fisubrl
fstpt
cld
test
aaa
jecxz
ljmp
icebp
outsl
push
fwait
scas
xchg
or
push
inc
cmpb
sub
sar
lcall
test
push
dec
inc
push
test
ljmp
cltd
rorl
pop
cltd
mov
pop
xor
test
in
ret
cmpsl
mov
pop
cltd
ljmp
sub
pop
xlat
leave
inc
cmpsb
jne
leave
adc
test
popf
pop
xchg
xor
lret
mov
jae
mov
sub
lods
ss
subl
cmc
cmpsl
neg
ss
push
test
aad
jmp
ds
mov
test
xchg
jl,pn
fildll
clc
call
cld
clc
fs
stos
outsl
push
scas
pop
push
mov
lds
imul
imul
les
fimuls
mov
sahf
xchg
mov
andb
test
jno
mov
ds
push
negl
movsl
xcrypt-cbc
cmpsl
xlat
or
fdivl
repz
repnz
ja
or
hlt
xchg
pop
lock
adc
lret
cmp
movsl
pop
cmp
lahf
call
prefetcht2
lcall
lods
cli
movsl
scas
xchg
mov
pushf
nop
adc
aam
int3
or
rcll
dec
fsubl
sub
pop
test
cmp
cltd
xchg
in
mov
jle
push
mull
dec
nop
pop
sbb
sti
mov
in
and
fdivl
sub
jne
movsb
lds
jb
cwtl
cs
icebp
int3
jl
aad
adc
mov
mov
lahf
jecxz
push
mov
pushf
sub
test
mov
jnp
adc
push
push
jmp
inc
lods
and
stc
inc
hlt
adc
or
sub
ljmp
cld
mov
sub
pop
pop
dec
stos
and
fmulp
jg
mov
mov
lods
mov
daa
nop
xchg
lods
das
hlt
mov
fidivl
and
ret
mov
in
lret
mov
test
data16
aad
movsb
test
movsl
aad
jge,pt
icebp
and
repz
std
jbe
sarl
xchg
sub
lea
cmp
ss
pop
xorl
insb
adc
pop
fld
ret
mov
push
pop
sbb
imul
scas
cmc
out
lahf
push
sahf
inc
addr16
ficoml
lods
test
mov
adc
mov
cld
xor
xlat
pop
repnz
int3
paddd
rcr
inc
ja
and
cmp
je
aad
lcall
cs
xorl
scas
cmp
repz
mov
cli
mov
pop
imul
or
inc
inc
decb
aam
popa
insl
cltd
add
mov
cmp
fistps
movd
js
in
shr
mov
imul
insl
mov
in
add
lods
aad
pushf
pop
je
xor
fstpl
or
repnz
lahf
sub
cs
add
jl
push
xor
jnp
je
add
cmpl
and
loope
in
jb
rcll
dec
cmpsl
sbb
test
pusha
repz
cmp
in
and
nop
pop
out
sahf
test
fldt
jge
popa
in
jb
sbb
mov
mov
cmpsb
and
pop
cltd
out
les
xor
cmp
lock
pop
dec
in
mov
lods
xchg
add
pop
push
xor
push
or
sub
iret
leave
sbb
enter
xchg
inc
ja
icebp
in
pop
jbe
xor
pop
jns
cmp
nop
inc
mov
fsubrs
lods
adc
imul
jge
movsb
cmp
pop
pop
scas
or
lds
fcmovnbe
in
cmp
inc
add
cmp
push
sub
adc
push
push
xchg
cmpsb
jmp
insl
jnp
or
or
pop
adc
pop
jnp
pop
or
and
aaa
push
jge
push
enter
xor
mov
pushf
xor
sbb
fwait
rclb
ret
addr16
mov
xchg
enter
xor
out
mov
push
pop
aaa
pop
loop
jnp
jne
popf
jbe
xchg
pop
and
inc
sahf
xchg
jbe
jp
shrb
inc
or
xchg
fadds
mov
popa
in
xchg
int3
flds
or
mov
mov
cmpsl
stc
sarl
jno
incb
arpl
lret
and
jno
cmp
rcrl
mov
adcb
in
dec
scas
loope
sub
cmp
mov
jge
fsts
in
fimuls
mov
fldcw
outsl
insb
stos
pop
cmp
insb
popa
xor
push
imul
or
fldz
sbb
jmp
scas
imul
loopne
lcall
push
pop
rolb
add
ficoml
lcall
sbb
xchg
lahf
sbb
insb
enter
out
adc
leave
xor
and
mov
lods
push
clc
add
imulb
fdivs
inc
sbb
adc
push
or
pusha
repnz
repz
add
popa
dec
jmp
cmpsl
sub
scas
gs
xchg
dec
dec
and
mov
xor
cltd
jns
jmp
popa
jbe
xor
sub
cmpsb
dec
aad
mov
pushl
leave
mov
lret
jnp
in
or
xor
xlat
mov
popf
popf
pop
jne
push
aas
lock
dec
fistpll
dec
clc
scas
cmp
test
in
ror
push
test
xchg
pop
xchg
cltd
js
icebp
and
mov
push
inc
loopne
mov
mov
mov
xor
mov
xor
adcb
sub
xchg
leave
xor
mov
or
add
lods
adcl
inc
push
inc
xchg
adc
js
dec
push
inc
sub
add
pop
inc
xor
and
cmovl
xchg
adc
xor
dec
sbb
aam
cmp
jb
sbbb
imul
rcll
inc
pusha
and
push
jp
fs
stos
nop
mov
cld
jecxz
mov
sub
mov
lods
movsb
into
sub
xor
cmpb
or
es
jno
mov
or
push
pop
test
ret
out
cmc
ret
pushf
js
loope
mov
pop
and
adc
adc
jp
cmp
lret
jno
dec
sub
jo
in
push
pushf
xchg
inc
aaa
cmp
repz
aaa
push
testb
sti
test
inc
in
in
or
in
daa
mov
insl
or
xchg
outsb
xor
sub
jb
mov
in
dec
scas
add
push
arpl
imul
push
ljmp
hlt
ljmp
pop
lea
out
jns
xor
inc
aas
mov
ret
jae
iret
call
add
jb
ljmp
stos
data16
movsb
push
pop
int
out
movsl
movsb
call
gs
inc
cs
or
je
in
push
loop
or
test
pop
lea
xchg
mov
xor
movsl
push
cmp
push
xchg
test
ret
popf
and
clc
xchg
mov
rorl
and
clc
mov
shlb
rcll
repz
out
js
add
jle
lods
mov
jbe
inc
shrl
xor
cltd
dec
and
xorl
mov
dec
inc
xchg
mov
xor
mov
pop
sub
jle
xor
sbb
icebp
xadd
outsb
pop
xchg
insb
call
or
ss
jbe
xchg
outsl
pop
rcr
xor
xlat
inc
or
mov
jge
mov
inc
mov
sahf
add
loop
dec
xor
dec
psrad
mov
and
popf
or
fists
jo
jns
in
inc
stos
adc
jge
scas
cs
cmp
fs
bound
xchg
xchg
and
adc
aam
add
test
cmp
inc
imul
std
into
js
das
in
sbb
xchg
decl
loope
rcrl
mov
addb
jb
arpl
mov
fldenv
xchg
mov
movsb
xor
jbe
xlat
sbb
xor
inc
ficoml
iret
sbb
hlt
push
rclb
pop
add
shl
xor
or
sbb
out
int3
test
stos
iret
xor
sbb
fwait
push
js
in
jne
testb
mov
jle
mov
dec
pop
imul
into
outsl
repnz
icebp
cmp
cmp
mov
pop
jmp
mov
aam
or
jmp
lret
mov
cmp
fdivrs
and
cmp
les
push
insb
dec
das
lods
lcall
fcmovbe
adc
cmpsb
cmp
fmull
cmp
jne
rcll
ds
mov
dec
inc
test
aas
lahf
sahf
shrl
arpl
test
xor
or
push
cmp
jmp
and
lcall
mov
mov
push
cli
dec
dec
inc
sbb
mov
stos
lds
mov
jbe
lods
dec
jae
push
or
inc
xchg
sbb
cmp
and
fmuls
mov
mov
repnz
pop
fcmovbe
sbb
lock
lds
enter
popf
lahf
fidivl
pop
and
mov
mov
xchg
ss
das
cli
test
out
clc
or
stos
insb
aas
stos
insb
cs
jge
int
mov
ljmp
adc
cmpsw
ficomps
mov
test
clc
adc
inc
lgdtl
int
das
aam
push
sub
push
inc
cwtl
es
xchg
in
out
test
adc
out
enter
outsl
adc
xchg
nop
and
push
mov
push
stos
xor
push
xchg
mov
adc
rclb
adc
jmp
jl
adc
sahf
jp
push
jb
inc
cmp
and
int3
mov
jle
les
test
adcb
push
xchg
or
in
cmp
jp
sub
insl
add
pop
mov
sti
lret
xor
mov
push
ret
sbb
sbb
pushl
and
cmpsl
mov
int
aas
or
jne
xchg
jmp
testl
and
fwait
std
test
xchg
push
addb
bound
scas
cmp
popa
dec
mov
stc
mov
pop
jle
aad
xchg
xor
pop
enter
neg
push
add
cmp
mov
cwtl
sub
les
cmp
jns
sbb
dec
imulb
mov
mov
jnp
rorb
hlt
jg
fwait
iret
or
in
bound
es
je
movsl
leave
xchg
popa
pmulhuw
hlt
or
lea
outsl
fsubp
pop
mov
mov
out
inc
push
cwtl
dec
dec
xchg
in
and
iret
pop
or
and
fstps
inc
adc
push
ja
push
push
outsl
or
aam
dec
push
fsubrs
add
inc
adc
out
cmpsl
push
out
sbb
dec
movsl
pop
dec
inc
nop
add
xchg
mov
into
out
loop
test
add
push
daa
and
jmp
fucom
sbbl
aad
daa
adc
inc
lcall
cmp
iret
xchg
push
dec
ja
add
inc
call
arpl
pop
mov
daa
scas
dec
bound
idivb
and
loopne
xchg
mov
push
in
imul
js
cmp
dec
and
sbb
lods
push
mov
mov
xor
psubusb
xor
sbb
fucom
sub
adc
fstpl
in
fstps
inc
mov
cmp
push
fisubrl
ds
mov
es
xor
out
fldcw
out
aas
pop
out
into
rcrl
or
push
outsb
xchg
fcomps
cmc
insl
frstor
test
xor
sub
dec
pop
clc
les
shll
lock
xor
inc
fdivl
loop
fdivl
or
and
pop
sbb
and
pushf
pop
arpl
dec
in
andl
sahf
xor
dec
repz
jns
ret
mov
cs
cltd
jle
lret
inc
dec
mov
cs
enter
mov
push
pop
push
cmp
mov
inc
add
mov
sbb
sar
mov
sbb
jb
dec
jnp
scas
fmuls
addr16
loop
out
sub
pop
loope
pop
mov
sahf
push
mov
xchg
sarl
push
leave
into
push
ffreep
mov
mov
addb
jo
pop
inc
inc
sub
fisttps
test
adcb
int
pusha
jmp
sahf
pop
call
popf
je
or
ficomps
inc
frstor
dec
dec
mov
push
adc
aam
mov
mov
nop
es
sbb
ret
imul
or
add
sub
inc
push
hlt
movsb
add
xchg
and
adc
movsb
in
or
xchg
push
insb
and
lahf
in
add
loopne
pop
call
xlat
adc
cmovg
add
add
sahf
arpl
aad
int
pop
xchg
iret
bound
dec
cmp
dec
or
cmp
dec
test
xchg
std
enter
or
adc
sbb
lret
jp
outsb
jecxz
inc
add
mov
inc
cmpsl
mov
cli
or
xchg
sub
pusha
test
fldcw
inc
in
cmp
shlb
nop
sbb
add
add
mov
cmpsl
xor
ror
mov
sbb
xor
adc
dec
jp,pt
fucomip
sub
lahf
movsb
push
xchg
xchg
mov
adc
pop
mov
dec
mov
ret
imul
push
add
xor
xchg
and
fnsave
jg
dec
enter
jl
dec
adc
movsl
dec
push
fdivrl
inc
lret
adc
cmp
jmp
dec
push
gs
mov
add
addb
jmp
das
cmp
pusha
test
sub
cmc
iret
mov
push
jo
push
stos
xchg
pop
hlt
pop
adc
jae
loop
lret
jbe
es
mov
repz
mov
insl
lea
imul
aad
xor
idiv
in
sarl
cmc
js
clc
decl
cmpsb
lock
jmp
dec
push
push
jmp
jge
ds
stos
add
add
xchg
push
inc
nop
testl
sbb
fwait
adc
xor
int
xor
mov
or
jge
xor
xor
jmp
fwait
loopne
add
push
inc
mov
fsubs
cmp
cmc
ss
repnz
cwtl
daa
pop
add
ds
xchg
xchg
cwtl
psllq
cmc
pop
pushf
pop
rclb
xor
push
pop
adc
cltd
clc
fcoml
loope
imul
dec
push
sarl
add
test
pop
scas
adc
mov
xlat
jle
scas
mov
fadds
adc
pop
pop
push
or
push
hlt
xor
adcl
and
or
insl
mov
dec
pop
lea
sub
add
mov
sbb
fldenv
lret
jecxz
jae
jp
push
lahf
adc
or
xorl
cmp
push
or
cmp
jbe
pop
xor
mov
sbb
popf
iret
or
or
cmp
movsl
imul
push
ljmp
adc
xor
adc
jnp
xchg
fimull
sbb
inc
xchg
mov
adc
push
pusha
mov
insb
insb
mov
iret
icebp
shll
xchg
inc
fwait
rcll
adcl
aam
insb
idiv
cmp
cmp
adc
fiadds
jmp
mov
or
cmp
nop
sbb
push
mov
dec
push
lods
addr16
fldenv
xchg
jno
pop
xor
inc
data16
inc
outsl
cmp
ja
jg
xor
inc
or
cli
cmp
and
inc
lods
pop
rclb
xor
ja
push
iret
add
lods
add
xchg
subb
mov
mov
jmp
xor
push
jecxz
cmp
jp
xor
out
cmp
cmp
sub
push
loop
pop
icebp
adcl
push
cmp
push
loopne
in
cmp
es
add
sub
movl
cmpsb
mov
xor
in
fstpt
ffree
repnz
out
push
scas
leave
sbb
rorl
mov
test
or
inc
sub
test
mov
jecxz
cli
stos
inc
ja
sbb
dec
rclb
xor
mov
out
xor
stc
add
dec
scas
jno
push
mov
mov
movsl
mov
mov
clc
ret
fdivp
mov
pop
fs
out
test
dec
mov
jb
daa
mov
pop
dec
adc
les
xchg
imul
outsl
cmp
cvtdq2ps
sti
faddl
outsb
pop
pop
adc
push
adc
push
mov
in
sub
inc
mov
jmp
xchg
out
pusha
clc
iret
inc
rcl
jge
sub
cmpl
movsl
lock
fwait
or
in
push
jbe
add
mov
fs
leave
sahf
mov
cld
fs
jns
mov
jno
daa
cmp
pop
testl
cli
pop
fadd
mov
add
push
out
pop
iret
mov
adc
jbe
icebp
mov
sbb
mov
dec
movsl
test
mov
fwait
or
testl
imul
inc
pop
out
fdivrl
xchg
or
cmpsb
jmp
out
movsl
jl
in
push
subl
pushf
xchg
xlat
loope
push
insl
stos
sub
mov
in
jnp
lods
jne
lret
mov
aad
cmpsl
mov
sbb
ja
inc
sub
add
mov
loopne
cmp
inc
test
aam
test
aas
mov
add
popf
lret
repnz
cmp
xchg
and
in
sarb
ds
ret
ja
js
jae
fnsave
in
fs
in
mov
pop
fbld
inc
andb
or
add
popa
outsb
gs
xchg
popa
addb
sbb
cmp
adc
lret
aaa
icebp
mov
je
mov
mov
test
adc
or
pusha
cmp
test
loopne
lret
cli
mov
test
push
adc
sbb
push
loope
pop
mov
fs
xlat
push
sarb
dec
adc
jne
into
mov
inc
dec
repnz
mov
adc
inc
mov
test
xor
loope
jp
sbb
in
adc
pop
popf
sub
sbb
inc
aaa
xor
das
push
sbb
test
lods
sbb
pop
adc
or
sub
fbld
cmp
push
dec
ds
gs
sub
cld
jne
stos
lret
out
add
imul
add
cmp
cmp
and
test
mov
sahf
mov
push
pmulhw
inc
out
shll
idiv
sub
adc
movsb
sub
incl
cli
nop
into
mov
test
mov
sbbb
xchg
mov
pop
and
pop
adc
lcall
xor
pop
mov
fwait
lock
jmp
notl
sbb
pop
sub
jl
in
rcrl
aaa
or
mov
ljmp
ror
into
ret
lret
scas
ret
xor
pop
out
aas
mov
fsubr
lds
fildll
mov
xor
lret
lret
arpl
sub
and
adc
xchg
cmp
ljmp
leave
fdivs
in
repnz
sti
cld
roll
sti
les
ds
jno
mov
push
scas
jno
xchg
mov
nop
cltd
data16
pop
push
cld
mov
push
pop
movsb
cmp
bnd
inc
xchg
jl
adc
jecxz
das
pushf
rcrl
gs
mov
loop
inc
mov
jecxz
add
sahf
bound
sbb
fdivp
ret
imul
jl
jp
push
in
mov
jmp
mov
repnz
stos
mov
dec
jo
xor
out
std
pop
ds
lahf
push
sahf
push
ret
inc
test
xchg
cmp
std
movsl
cmp
adc
es
push
cmp
and
jns
cmc
inc
mov
ljmp
and
pushf
lcall
sub
sbb
pop
shrb
jecxz
pushw
les
or
push
cmp
mov
mov
mov
sub
xchg
mov
mov
call
insb
push
pusha
xchg
clc
sbb
sarb
mov
sub
fstpt
pop
xor
gs
fcoms
pop
sub
sub
fcmove
cmp
lock
imul
sbb
inc
dec
sarl
test
jae
mov
popl
adc
in
or
stc
lret
test
fsubr
lea
outsl
mov
and
cmp
sbbl
and
aaa
lret
shll
or
pushl
inc
push
pop
add
inc
stos
cs
fucomp
pop
fs
ret
sub
push
enter
and
xchg
fcmove
xor
and
dec
or
jno
cmp
xor
jle
jecxz
ds
or
ret
jge
xchg
xchg
loop
dec
fsubrs
mov
push
into
jg
xor
mov
push
iret
lret
mov
loope
ja
out
lret
or
xchg
jmp
dec
mov
and
mov
sub
lret
sub
and
fildl
nop
cld
lcall
inc
arpl
jp
sub
data16
mov
and
call
lret
lds
adc
fwait
dec
and
xor
sahf
enter
popf
das
out
sbb
mov
mov
ret
pop
jle
sub
arpl
stos
out
std
sub
inc
jge
dec
enter
inc
adc
xchg
out
inc
add
je
or
aas
stos
sub
adc
jmp
es
dec
mov
cld
pop
sub
mov
mov
clc
cld
arpl
aaa
nop
imul
and
xor
mov
fs
or
into
dec
xor
xchg
dec
pushf
sbb
mov
imul
cld
std
push
mov
fldt
pop
adc
cmp
cmp
and
inc
jnp
repz
xchg
cmp
mov
and
xchg
mov
dec
fidivl
pop
scas
push
dec
sbb
or
and
ds
repnz
mov
insl
loop
xchg
fs
pop
xor
dec
sub
mov
xlat
jl
scas
daa
sub
sbb
movsl
cs
push
xchg
hlt
sti
movsb
cmp
loope
imul
pop
sbb
rcll
push
xor
frstor
sub
repz
cmp
hlt
and
cmp
adc
repz
push
inc
xchg
mov
rol
jno
movsb
clc
push
adc
cmp
fdivp
imul
and
bound
cs
fstl
in
pop
cmp
out
jnp
inc
push
adc
push
dec
mov
push
jmp
adc
push
or
inc
mov
cmp
mov
sbb
test
mov
mov
jmp
push
mov
fistpll
mov
into
pop
jno
loope
daa
iret
jae
scas
add
and
inc
add
push
loope
sub
dec
mov
fwait
pop
cmp
aaa
mov
data16
or
rcrb
mov
mov
jae
lahf
push
lahf
mov
xchg
xchg
mov
and
lea
inc
inc
divb
ds
mov
int3
cmp
sbb
sbb
or
inc
pusha
dec
scas
icebp
add
lods
div
xor
xor
adc
pop
daa
pop
stc
sbb
loope
sbb
xor
ljmp
fisttpll
and
push
lods
ret
cmpsl
mov
adc
arpl
scas
and
mov
dec
sbb
mov
loopne
mov
cmp
shlb
inc
push
inc
test
cmp
loop
repz
icebp
jecxz
aad
add
cmp
lods
pop
xor
pop
pop
out
mov
repnz
mov
pop
fs
ficomps
dec
mov
xlat
inc
lea
mov
bound
sub
mov
jp
in
lret
adc
mov
lods
and
scas
cmp
cltd
cmc
mov
pop
inc
sub
scas
mov
pusha
mov
lcall
leave
xor
inc
lret
out
sar
enter
sub
push
das
mov
mov
fiaddl
jg
sbb
stc
fldt
cld
hlt
outsl
stos
adc
push
dec
xchg
jg
push
sub
pop
stos
arpl
mov
pushf
cmc
sarl
out
jb
pop
jp
adc
lret
lods
gs
and
pop
xchg
pop
std
pop
lahf
mov
int
test
mov
lods
inc
cmp
mov
aam
inc
jge
leave
or
xor
ja
push
mov
jnp
imul
out
rcrl
add
mov
push
cs
in
sub
push
mov
xchg
mov
mov
hlt
push
call
lods
adc
mov
repnz
daa
sub
bound
shrb
pushf
adc
mov
jecxz
xchg
push
dec
push
fs
mov
int
pop
pop
pop
movsb
ficomps
or
mov
mov
iret
flds
jp
neg
orb
or
loopne
int
rolb
fwait
aam
pop
aam
and
int
or
out
mov
in
adc
popa
pop
inc
mov
adcl
loop
fs
pop
movsl
add
and
stos
mov
popa
ds
sbb
test
rcl
shlb
dec
retw
mov
xor
bound
xchg
jne
inc
adc
call
jbe
push
xchg
ljmp
xchg
outsb
inc
outsl
fwait
outsb
add
cmpsl
inc
cmpsl
int
jge
sub
jg
or
mov
xlat
adc
inc
pushf
push
adc
inc
xor
adc
cmc
inc
in
out
ss
movsl
mov
push
roll
rcrb
lcall
hlt
xchg
ret
inc
movsl
sbb
jbe
movsl
xor
fucomp
mov
jmp
push
repnz
rcrl
inc
pop
sbb
cmc
test
lcall
inc
out
jl
sub
adc
in
mov
cs
push
pop
inc
lea
int3
adc
rorb
repz
xchg
inc
imul
jae
jnp
pusha
mov
shrb
in
test
dec
mov
cmp
fiaddl
pop
rcr
push
cmc
jb
dec
pop
lods
cmp
mov
je
adc
mov
stc
push
stos
ljmp
dec
cmpsl
sub
cmpsb
xchg
adc
aaa
sbb
adc
add
int
sub
adc
add
sub
in
mov
nop
mov
loop
sbb
mov
mov
dec
jge
mov
in
rcll
movsl
jmp
pop
aaa
fcoms
pop
mov
sub
rcl
pop
cld
xchg
jmp
fsts
nop
cmpsl
clc
xor
xor
cmc
repnz
lds
dec
mov
int
dec
xor
js
rorb
jge
pop
repz
dec
sub
adc
xchg
pop
mov
cld
je
pop
mov
mov
lods
mov
sbb
add
inc
mov
in
and
dec
bound
ss
or
xor
cmp
jge
xchg
js
sub
xchg
jmp
pop
lds
into
pop
push
fdivrl
sbb
cmp
xor
es
out
cmp
pop
xchg
movsl
lea
std
pop
leave
repz
xchg
push
mov
fwait
or
lret
std
cmp
pop
cmp
xchg
xor
dec
or
jecxz
cld
jno
imul
pop
outsb
enter
lea
xchg
mov
stos
and
jne
lret
test
jo
ficoml
cmp
adc
lahf
fcoml
sbb
pop
imul
jecxz
lock
mov
add
dec
or
addr16
sub
addr16
pushf
iret
pop
aam
pop
pop
clc
daa
mov
pushf
mov
jg
mov
mov
adc
rcl
xor
mull
testb
and
xor
clc
push
cmpsl
imul
mov
cs
lea
fdivr
fimull
shlb
xchg
bound
or
imul
mov
jl
push
sub
out
addr16
sbb
pop
insb
xor
sbb
lods
xchg
stc
mov
int
xor
test
and
outsb
movsl
xor
call
sahf
adc
or
pop
and
fisubs
sub
xchg
sbbb
sub
mov
mov
mov
cmp
pushf
in
push
sbb
in
mov
jae
mov
aas
jle
loop
cli
mov
out
outsl
loop
fisttpl
add
scas
or
into
repz
imul
dec
push
dec
rcll
idiv
and
fdivr
pop
lds
fnstsw
mov
sub
notl
cmp
xchg
loop
cmp
inc
in
sbb
or
es
rcrl
xchg
lea
fidivrl
in
and
stos
adc
into
cli
xchg
andl
push
mov
out
dec
mov
mov
pop
repz
cmc
or
outsb
push
xchg
dec
mov
lds
inc
sbb
adc
int
jecxz
pop
push
minps
mov
adc
pusha
orb
jmp
push
cmp
or
cmp
dec
inc
sub
cmpsb
inc
pop
mov
lods
stos
addb
sub
adc
dec
shrl
jge
insb
sub
insb
mov
ffreep
jae
outsb
cmp
enter
add
imul
leave
mov
pop
sarl
clc
add
dec
aas
rorl
xchg
mov
mov
lret
in
adc
sbb
hlt
int
pop
int3
xchg
fbstp
sub
je
inc
pop
std
jecxz
call
icebp
push
dec
pop
add
ja
in
lahf
jnp
jns
ljmp
sub
jge
adc
arpl
leave
and
fwait
push
xor
push
sbb
jg
sbb
sbb
cmp
cs
in
dec
adc
incb
sub
add
mov
mov
lds
xor
adc
in
push
orb
cltd
mov
dec
sub
push
and
dec
add
mov
movsb
js
sub
clc
das
inc
js
sub
cmp
pop
pop
xchg
cmp
or
rol
fcmovnu
in
scas
divb
xor
mov
xlat
or
aad
sarl
add
notl
push
sbb
cmp
jo
cmpsl
stos
bound
fsts
xchg
push
or
push
in
les
mov
jae
xor
inc
sahf
fsts
aad
fiadds
inc
movsb
sbb
clc
arpl
mov
sub
scas
neg
test
stos
jge
inc
imul
lock
jbe
jle
aam
rcrb
push
out
push
xlat
lahf
push
xchg
in
out
jne
pop
in
jno
leave
xchg
xor
sbb
mov
mov
mov
jge
add
int
jmp
cltd
ftst
push
addb
push
fnstenv
and
lea
push
lods
sti
and
insb
mov
cmp
inc
adc
mov
out
testb
or
out
lock
sub
xchg
and
aas
fwait
inc
cld
sub
stos
mov
out
pop
pop
dec
fistpl
mov
adc
mov
or
das
repz
das
or
and
divl
stos
pop
enter
jnp
push
mov
iret
rol
sti
fstl
out
rol
stos
mov
mov
jno
loop
push
stos
fdivs
mov
inc
cmp
pushf
addl
dec
out
dec
les
outsl
add
mov
scas
cs
int3
fmul
and
xlat
and
clc
cmp
mov
xor
jmp
test
mov
sub
into
dec
add
adc
sbb
xor
xchg
dec
dec
insb
mov
lahf
xchg
push
xchg
cmp
mov
cmc
insb
jl
adc
stos
inc
mov
pop
insb
cwtl
mov
adc
xor
int
inc
adc
adc
mov
imul
int3
adc
mov
dec
xor
movnti
mov
adc
inc
inc
ds
in
fnstenv
in
cltd
mov
ss
in
mov
jmp
or
or
xchg
outsb
adc
scas
test
lds
jmp
jnp
mov
jle
push
test
xchg
scas
sbb
int
pop
pop
outsl
inc
adc
mov
lds
lcall
sarb
daa
and
mov
pop
mov
movsl
mull
pop
pop
fisubrl
popf
ss
fwait
movsl
lcall
push
mov
popf
int3
xchg
in
es
dec
sbb
fdivp
xchg
cmpb
pop
push
jmp
or
fistpll
or
jbe
jbe
popf
dec
sbb
mov
cmp
js
jns
lret
sub
xor
gs
xchg
sub
adc
adcb
sbb
loope
pop
imul
fsubrl
repz
fdivrl
je
mov
sbb
dec
xchg
jg
inc
adc
add
xchg
jae
stos
push
mov
mov
pop
cmpsl
inc
mov
adc
adc
mov
enter
xor
loope
push
call
mov
hlt
bound
mov
jmp
push
lds
add
mov
mov
sub
popa
loopne
dec
test
jnp
jae
jmp
mov
sarb
pop
mov
fucomi
cwtl
mov
fwait
push
xchg
sbb
jns
xor
xchg
aad
dec
push
js
outsl
inc
idivl
clc
insb
xor
stc
test
cmpsl
xor
jge,pn
arpl
ret
xor
xchg
sti
and
rolb
adcl
push
mov
scas
call
fadds
jb
push
stc
dec
mov
shr
adc
pop
push
xor
jle
mov
push
mov
imul
sahf
lcall
inc
pop
imull
sbb
xor
aas
mov
push
sub
cld
lret
test
jge
jp,pt
loopne
dec
nop
xor
popa
pushf
pop
mov
int
cs
xlat
inc
hlt
ljmp
add
out
int
shll
add
mov
fcompl
jne
and
cmc
sbb
add
enter
adc
fwait
sub
mov
rorl
mov
leave
into
lret
addb
adc
ja
rcll
ret
sbb
das
out
adc
gs
lcall
or
xlat
lahf
into
lods
xlat
mov
sub
dec
stc
sbb
push
ret
pop
test
sbb
dec
ds
push
scas
ret
add
and
mov
sbb
aad
xchg
inc
adc
decl
or
adc
or
into
mov
dec
mov
adc
xchg
and
popf
arpl
out
test
rcrl
dec
cmp
repz
popa
hlt
lahf
sub
inc
std
jnp
or
sbb
xor
ljmp
add
sbb
mov
xchg
sub
js,pn
dec
mov
xchg
mov
or
inc
aad
add
dec
xorl
mov
inc
adc
imul
jbe
fdivrl
sub
aaa
clc
mov
ljmp
pop
or
or
cmp
xor
test
loope
ret
sbb
sbb
imul
movsb
enter
dec
lcall
inc
add
loope
xchg
xorl
sarb
add
mov
cmp
dec
ss
notb
mov
popf
cs
test
sbb
sbb
jl
lret
and
mov
jmp
ja
in
cli
add
xchg
xchg
inc
push
mov
sbb
shrb
je
pop
xor
or
scas
mov
xchg
mov
ret
jns
lock
shl
cmp
or
mov
repz
cs
cli
inc
pop
ret
mov
or
rsm
xchg
mov
js
lahf
sbb
daa
out
fisttpll
add
lcall
push
xchg
add
fs
adc
pop
jb
popf
stc
jnp
inc
movsb
sub
sub
mov
jne
in
xor
mov
pop
sub
add
xor
push
xchg
fwait
pop
pop
mov
sub
xchg
in
out
mov
jecxz
lret
push
inc
test
push
ret
mov
push
sarb
jne
xchg
mov
aaa
and
mov
loopne
sub
pop
loop
jns
pop
daa
or
adc
sbb
ret
cltd
xor
test
sbb
inc
cltd
jne
fnsave
add
leave
push
cmc
xchg
sbb
shrb
stos
mov
inc
xchg
dec
dec
lds
bound
pop
aam
mov
pop
or
mov
shll
push
pusha
shll
pop
scas
mov
or
sub
in
push
gs
cwtl
dec
mov
mov
imul
mov
push
test
cld
inc
dec
scas
test
pop
jp
push
lds
sbb
push
andb
sub
mov
pop
outsl
loop
xor
xor
stos
inc
mov
fidivrl
pop
shlb
dec
lods
inc
or
adc
stos
xlat
imul
xor
shlb
push
sahf
cwtl
inc
mov
mov
arpl
jl
xchg
or
les
or
xor
mov
mov
add
notl
lds
cmp
shlb
sub
cmp
pop
dec
push
mov
dec
pop
mov
pop
jns
fs
add
lds
into
jge
out
mov
adc
xchg
jp
add
and
imul
sbb
push
scas
or
fsubp
cwtl
out
aas
xchg
xlat
jnp
mov
outsl
in
adc
lds
mov
sub
push
jb
sti
test
jp
loopne
sbb
fisttps
lods
clc
jmp
push
fmuls
dec
add
mov
xor
sub
aam
hlt
push
sahf
push
pop
mov
sbb
test
aam
icebp
push
enter
outsb
xor
ret
jp
cmp
aaa
inc
pop
xlat
inc
or
sti
push
push
fsubs
les
pushf
lods
dec
mov
loop
imul
mov
sub
sahf
outsl
push
mov
push
xor
enter
push
jle
hlt
xor
lret
jg
and
pusha
push
dec
out
hlt
pop
jmp
inc
dec
mov
leave
mov
std
cmc
lahf
cmp
cmp
lods
and
scas
cwtl
imul
xor
out
push
xor
xor
insl
int
test
fidivl
jno
xchg
arpl
pop
in
jno
cmpsl
xor
pop
js
stos
bound
or
adc
dec
xchg
out
arpl
xchg
lret
out
or
aas
pop
nop
mov
xor
mov
lahf
outsl
lods
add
imul
jns
clc
fdiv
sahf
push
mov
std
aas
lock
or
adc
cmpsl
fs
jg
add
repnz
lea
add
insl
dec
mov
pop
xchg
pop
pusha
psubsw
fcoms
test
insb
mov
pushf
daa
ds
call
mov
push
mov
push
imulb
mov
mov
pop
xor
rorb
inc
leave
in
scas
push
and
bound
decb
pop
mov
rol
mov
pop
mov
jbe
dec
sbb
ret
and
nop
xchg
mov
mov
sub
pop
dec
icebp
cmpsl
cmp
push
mov
hlt
xor
sub
add
rorl
negb
dec
stc
mov
out
fsubrl
jl
cmp
push
mov
mov
xor
les
inc
or
add
add
insb
jno
jb
jne
mov
jge
sub
push
mov
mov
sub
out
cmp
inc
mov
stos
xchg
ret
insl
xorb
lods
cwtl
mov
jb
pop
cs
dec
mov
ret
mov
fldenv
xor
and
outsb
or
cltd
add
adc
push
mov
cmp
xor
pop
xchg
addr16
pop
adc
mov
shl
rol
adc
inc
jnp
xor
int
jbe
mov
dec
mov
sbb
fdivrp
arpl
fnstcw
mov
aas
outsb
cmpsl
pop
push
and
popf
mov
xchg
inc
rcll
dec
daa
test
mov
cmpsl
addr16
ljmp
pop
fucom
xchg
test
adc
sahf
das
add
xchg
js
sub
jge
cs
fdivrl
aam
out
push
leave
test
sub
ss
fildll
ja
loopne
add
mov
jno
data16
imul
dec
les
push
push
jnp
fndisi(8087
mov
clc
ds
repnz
and
jns
fmulp
mov
in
fimuls
cmc
scas
push
push
sub
lcall
pop
inc
leave
push
mov
push
mov
inc
mov
cltd
mov
into
addr16
int3
and
xchg
mov
sbb
jae
inc
das
sbb
mov
out
data16
jg
ja
mov
pop
push
jne
xchg
cmpsb
jge
int
test
ss
out
loopne
cmp
into
cwtl
jns
jg
sub
push
mov
jg
sbb
imul
jo
nop
insb
xor
cmp
jl
jnp
mov
push
push
mov
mov
pop
in
cmp
test
loope
fcomps
xor
rcll
mov
inc
add
cmp
mov
cltd
mov
fcomip
pusha
inc
int
jg
into
adc
sub
pop
aam
lods
adc
adc
inc
jl
movsb
mov
out
std
inc
pop
push
dec
cld
movsl
pop
push
cmp
bound
mov
jae
mov
push
repnz
sahf
rol
xchg
cmp
repnz
xchg
push
lds
inc
aam
sub
xor
testl
dec
push
in
sub
mov
or
ror
mov
mov
sbb
je
jae
fs
mov
test
sub
jmp
pop
lods
add
sarl
sbb
mov
sbb
repnz
iret
inc
pop
lock
mov
in
jbe
mov
inc
out
add
jns
xchg
out
sti
call
and
add
mov
mov
jg
push
xchg
add
outsb
pop
repz
mov
daa
xor
movsl
pop
or
mov
mov
into
sub
arpl
sbb
aam
mov
and
int
shll
sub
cmp
fnstenv
and
call
sar
mov
xor
insb
enter
jae
xor
fidivl
and
std
leave
pop
push
pop
jg
out
cs
mov
aam
or
loop
xchg
es
shll
int
add
pop
jae
mov
cli
clc
imull
mov
push
xchg
insb
loopne
xchg
roll
dec
mov
cmp
jbe
pop
fucomp
mov
dec
mov
xchg
sbb
dec
pop
sbb
jo
push
push
or
cmp
rclb
mov
das
in
fs
push
xchg
mov
movsb
inc
dec
inc
mov
sbb
je
fisubl
xchg
call
in
rcr
push
ja
xor
xchg
and
in
testb
ds
jle
loopne
sbb
movsb
push
cwtl
in
pop
in
fmull
lods
jne
roll
dec
aad
jp
xor
rcr
dec
in
sarb
lods
rol
cli
mov
mov
sti
mov
mov
and
mov
xchg
mov
scas
outsl
dec
ss
lea
ss
outsb
dec
jb
mov
popa
sahf
arpl
fbstp
mov
nop
mov
or
mov
inc
xchg
ss
imul
push
and
mov
icebp
mov
xchg
push
scas
aam
inc
sub
orb
popf
or
dec
cld
loopne
scas
mov
pop
and
pop
jb
shll
xchg
cmpsl
inc
mov
leave
ret
movsb
insl
sub
js
pop
insb
pop
sbb
cli
mov
jno
std
sub
mov
jp
out
insb
sub
dec
mov
inc
sub
ss
lret
cmp
mov
mov
jg
xor
sahf
xor
pushf
jo
jb
dec
movsb
add
hlt
repz
push
out
and
popf
or
sub
out
pop
cs
lcall
mov
push
push
sahf
mov
xor
mov
or
jns
fisubrl
cmp
rcrl
rcrl
adc
addr16
cmp
mov
in
fdivrs
cmp
loope
jmp
test
stos
pop
cmpsl
inc
or
insb
inc
xchg
insb
dec
daa
inc
stos
jp
ja
test
in
pop
xor
divps
rsm
cmp
imul
int3
aad
push
mov
lcall
loop
inc
pop
aad
gs
outsl
sarb
ret
iret
mov
mov
xchg
pusha
ss
fldcw
and
mov
or
xchg
mov
je
adc
or
pop
cwtl
movsl
mov
in
rorb
dec
xor
loopne
sbb
stos
movsl
push
mov
push
sbbl
insl
lods
insb
push
fistpl
js
into
iret
clc
dec
je
dec
xchg
jmp
mov
lahf
popf
inc
stc
sub
pop
add
jno
lret
jl
sub
adc
or
lods
sti
cltd
jmp
std
inc
xchg
sti
stos
adc
cmpsl
push
mov
sub
repnz
stc
mov
xor
dec
shl
fisttps
pop
xchg
push
fsubrl
clc
fcompl
mov
and
sbb
fucomip
lock
inc
lahf
sub
fidivs
mov
inc
fmuls
roll
xchg
sub
xchg
xchg
add
sbb
int3
push
xchg
dec
sub
sub
pop
cmp
mov
sub
mov
cmp
push
mov
lock
and
adc
mov
pop
frstor
sarl
pop
push
jbe
push
mov
popa
sahf
adc
push
popa
push
mov
call
test
stc
nop
icebp
or
pop
sbb
fistpll
lret
and
mov
cs
mov
dec
shrb
scas
orl
push
sub
push
repnz
xchg
xor
insb
in
mov
lret
loope
xor
stc
mov
ja
fcmovnbe
add
inc
pushw
cmpsl
mov
mov
ficoml
push
test
rcrl
ds
insb
pusha
popa
fwait
add
mov
push
push
or
cmpsb
jmp
or
add
mov
cmp
in
push
cmp
push
jmp
mov
push
daa
out
aad
stos
xchg
test
lret
mov
in
jns
pop
iret
or
int3
ret
pop
mov
dec
aad
cli
cmpsb
sbb
in
mov
xor
push
jge
xor
insb
xor
in
xchg
or
adc
popa
sbb
test
mov
sbb
clc
mov
sbb
enter
lock
sti
out
outsl
out
inc
pop
inc
loopne
out
stos
sbb
out
out
push
aad
xor
jecxz
insb
add
sbb
cmc
out
test
inc
stc
dec
lods
filds
xor
lahf
xor
sub
test
xor
popa
adc
inc
pop
pusha
xchg
jo
enter
les
adc
cmp
push
sub
fisubs
jecxz
inc
jmp
fsubrs
sarb
inc
jmp
mov
cmp
jp
hlt
lods
adc
sbb
xchg
test
xor
xchg
mov
pop
enter
pop
popf
xor
fisubrs
aas
jns
vsqrtsd
pop
imul
jp
inc
dec
je
jle
jge
jecxz
jg
andb
sbb
std
add
jg
mov
jecxz
sub
popf
sub
test
push
dec
lds
adc
int3
fwait
cmp
aad
pop
cmp
mov
push
mov
lods
pop
cmp
popa
jg
pmaxsw
pop
ja
xchg
imul
imul
data16
std
and
in
jo
fistl
xchg
jno
cmpsl
bound
add
and
test
mov
addr16
movb
enter
jge
jae
sbbb
push
pop
test
push
sbb
lret
inc
pushl
cld
add
aas
imul
add
adc
aad
or
je
or
or
jp
out
fsts
push
pop
push
xor
repz
and
xorb
lahf
fwait
ret
jnp
in
mov
mov
sbb
sub
insb
fidivl
inc
bound
mov
cs
pushf
cmp
pop
in
test
jmp
aas
dec
and
xchg
cmp
repz
mov
aam
mov
mov
sbbb
lea
sbb
shll
or
jp
cmc
or
fwait
in
arpl
icebp
mov
adc
xor
cmc
adc
xchg
inc
insl
mov
test
fs
adc
push
clc
inc
mov
or
adc
shll
loopne
sbb
mov
aad
les
mov
and
sub
jb
pop
push
mov
pop
aam
es
cs
or
call
sbb
mov
xor
lahf
sub
in
pop
xor
pop
fwait
pop
xchg
fmuls
inc
stos
xor
loopne
inc
inc
xchg
dec
rcr
mov
leave
jb
lods
fisttps
in
sub
and
mov
add
or
pop
dec
decb
adc
and
pop
jno
icebp
stos
call
movsl
pop
dec
sub
xchg
mov
pop
mov
rorb
rcr
ljmp
stc
aam
jbe
dec
jmp
es
lods
mov
push
mov
je
test
ret
repnz
mov
repz
pop
loopne
aad
push
fcmove
pop
cld
outsl
in
lret
dec
out
ror
shl
arpl
push
lcall
inc
pushf
mov
dec
test
jecxz
lret
adc
test
icebp
iret
cmp
repnz
insb
sbb
hlt
cmc
xchg
mov
js
mov
loope
add
ljmp
or
sbb
fcomp
int
cli
fwait
jnp
repz
fcompl
inc
push
nop
or
loope
fmuls
outsb
mov
pop
sbb
adc
fs
roll
inc
jl
mov
push
in
mov
pop
lods
push
and
lahf
jmp
push
or
lods
stc
adc
lock
mov
dec
add
lret
jge
fstl
mov
rorl
pop
mov
rcrb
lods
add
pop
jne
loop
inc
mov
mov
adc
sar
clc
sbb
shrb
mov
dec
out
xor
js
mov
je
adc
ja
pop
mov
or
fmulp
fwait
aad
pop
lods
xchg
sbb
xchg
std
outsl
neg
outsb
mov
imul
gs
outsl
cld
xor
imul
test
sbb
daa
aam
lret
lahf
dec
add
popa
ljmp
sub
add
inc
cmp
push
stc
out
xor
repnz
insl
cmp
mov
add
scas
iret
cmp
in
pop
pop
push
and
dec
fdivl
fistpl
imul
fisttpl
jae
sbb
push
jns
aam
or
jae
dec
pop
mov
les
cmp
adc
xchg
xchg
lods
repz
cmc
pop
dec
xchg
or
cmp
pop
ret
stc
fists
aad
xchg
jno
cmp
cld
lret
inc
adc
push
into
pop
cmp
notl
leave
leave
jae
sub
insl
or
in
lahf
data16
leave
inc
out
add
dec
mov
iret
jne
repz
and
movsb
loope
loop
cld
cltd
sub
int3
mov
inc
les
fmuls
and
and
mov
bound
pop
inc
jns
addb
cmpsl
stos
pop
xor
pop
sbb
pop
lds
jne
sbb
loopne
hlt
xchg
pop
cmp
sub
or
int
inc
loop,pt
movsl
imul
sbbl
loop
xchg
inc
push
inc
movsb
adc
ljmp
mov
icebp
je
loop
or
imul
dec
ljmp
mov
adc
sub
cli
int3
arpl
sub
push
dec
jmp
stos
insb
popf
pop
and
repz
jg
jne
into
sub
mov
fs
inc
mov
bound
lcall
pop
mov
jno
lods
fcoms
sub
pop
dec
shll
out
incl
or
adc
xchg
out
lret
push
js
fiaddl
mov
sbb
push
push
pop
data16
adc
aam
or
ljmp
push
cmpsb
dec
and
js
mov
jge
jg
dec
int3
lahf
pop
ss
and
fnstsw
xlat
setae
pop
dec
cmpsl
fs
jne
test
cld
jg
inc
imulb
out
enter
pop
mov
dec
pop
jae
push
lret
stos
jnp
sahf
push
lods
shlb
pop
fsub
aaa
and
fwait
pop
and
stos
data16
imull
sarb
push
les
sub
mov
cmp
jp
push
pop
dec
std
aad
rolb
in
adc
sub
sbb
fsubrs
mov
cmpb
loopne
cltd
iret
subb
mov
jmp
addl
das
arpl
shr
shl
xor
in
stos
shlb
push
add
lea
das
dec
fwait
mov
jmp
cmp
scas
sbb
adc
sub
loop
pop
leave
loop
xor
mov
testl
pop
into
imul
ret
icebp
mov
sbb
dec
xor
sbb
cmc
adc
insl
mov
xchg
push
loopne
push
sti
pop
out
pop
mov
inc
imul
xchg
imul
push
xor
sahf
adc
cmc
pop
sbb
std
push
cld
loop
jmp
dec
fildl
loopne
jg
and
mov
cltd
in
mov
je
insb
inc
mov
push
sub
outsb
jo
jle
mov
pushf
cs
xchg
mov
push
inc
jp
or
or
bound
add
xor
pop
test
mov
mov
and
in
mov
cli
mov
dec
in
dec
mov
andl
mov
sub
jecxz
adc
or
imul
aas
andl
push
mov
cld
imul
jbe
jg
push
in
adc
lcall
out
mov
mov
push
inc
inc
sub
cmp
jnp
jbe
add
mov
or
adc
inc
push
dec
push
sub
rcl
movzwl
bound
pop
bound
test
xor
pop
adc
aas
clc
mov
push
jg
or
mov
xor
mov
sbb
lds
xor
jns
rorl
addr16
cmc
xchg
push
sbb
mov
es
ja
dec
mov
mov
loopne
xor
fildll
int3
cmp
fcmovu
jne
sub
lods
adc
sub
push
cmp
mov
mov
cmp
bound
mov
leave
gs
adc
cmp
cmp
jb
addb
scas
jo
decb
mov
push
xchg
jbe
cmpsl
mov
popf
mov
nop
lock
notb
imull
and
mov
mov
int
jp
mov
divb
outsl
es
sarb
shl
xchg
fwait
mov
and
jl
and
iret
imul
dec
inc
mov
cwtl
lods
in
scas
mov
fnstenv
dec
add
add
push
loopne
jns
test
or
iret
push
je
das
mov
lea
notl
mov
push
xchg
icebp
inc
sarl
lret
pop
pop
ss
sub
mov
shr
cmp
sbb
sbb
push
xor
add
mov
dec
aaa
sbb
push
pushf
pop
mov
inc
es
pop
mov
std
cmp
push
repz
jns
outsl
test
pusha
fisubrs
enter
cmpsl
dec
ror
and
dec
sbb
std
fldl
dec
mov
lret
mov
nop
out
fcoml
js
es
addr16
jl
jb
nop
pop
mulb
pushf
xor
pop
ficoms
ret
mov
and
dec
scas
adc
test
sbb
pop
fistps
popf
lea
adc
fldenv
lret
inc
jae
jmp
add
push
dec
clc
xor
outsl
aam
mov
pop
xchg
xor
lods
out
or
nop
outsb
push
out
jbe
sub
inc
out
jbe
fdiv
repz
mov
xor
jg
pop
test
ret
cmp
lock
push
fldcw
out
aad
insl
cmp
inc
call
jbe
xchg
aas
push
lahf
push
xor
xor
dec
ja
lcall
jno
or
xchg
xchg
mov
or
das
jbe
andb
movsl
add
pop
mov
jge
gs
pop
fwait
jbe
add
cmp
gs
and
jo
fcmovnbe
or
mov
movsl
xlat
dec
push
add
pop
sub
sbb
popf
jecxz
repz
pop
fdivr
rcr
cmc
mov
gs
enter
and
and
clc
minps
lcall
shrb
or
xchg
push
bnd
push
ficoms
sbb
lret
cmp
or
sti
mov
xchg
call
imul
pop
dec
ret
ret
pop
dec
in
xchg
cmp
pop
cli
push
mov
mov
cmp
xchg
int
iret
loope
fwait
vpmacsdd
sub
push
out
lret
pushf
inc
cwtl
adc
mov
das
aaa
xor
rcll
mov
cmp
enter
in
mov
sti
push
addr16
mov
push
lret
outsl
jmp
sahf
clc
mov
sbb
testb
cmp
sbb
pop
js
cmp
sub
add
jae
mov
shl
jae
jae
test
mov
mov
xorl
mov
pop
adc
or
cmp
xlat
cmp
rol
in
xchg
dec
xchg
mov
sbb
mov
pop
inc
cwtl
cmp
xchg
shl
arpl
or
out
push
cmpsb
je
stos
fistpl
cmp
push
sbb
shl
mov
scas
mov
cmp
stc
push
mov
loope
pop
jp
es
ret
cmpb
cmpsb
dec
xchg
ret
sbb
jbe
pand
inc
ret
sub
push
jno
outsl
inc
je
loop
dec
movsb
ret
es
cs
aas
cli
into
pusha
sahf
jmp
and
mov
add
fdivrl
test
sub
arpl
mov
push
pop
mov
imul
loope
mov
cmp
push
mov
or
and
movsb
or
fs
cmp
sarl
xor
cltd
and
popf
jg
inc
push
inc
adc
or
je
add
rcll
push
loopne
mov
cltd
lock
push
jb
pop
gs
mov
das
pop
js
jns
out
mov
mov
sub
mov
and
mov
and
iret
jp
inc
test
jp
adc
mov
add
push
fists
je
lret
inc
insl
mov
xchg
clc
pop
call
fisubl
jne
roll
insb
cmpsb
dec
inc
rol
push
push
std
pushf
jns
fnstsw
sub
les
cli
sbb
imul
push
pop
decl
jp
ss
pushf
push
aaa
mov
pop
mov
mov
stos
fdivrl
mov
cltd
adc
lret
pop
push
mov
test
idiv
iret
movsb
shll
cmpsb
scas
push
sti
mov
pop
mov
pusha
inc
xchg
repnz
jo
dec
test
sbbl
mov
fsub
dec
cmpsb
push
inc
mov
mov
adc
and
out
sbb
sarl
sahf
ret
push
ret
enter
jmp
js
mov
and
mov
pop
sub
into
imul
add
cmp
xchg
fstpt
push
inc
cltd
hlt
dec
inc
pop
aaa
rcll
aas
stos
addl
jae
dec
pop
and
push
shrl
jae
inc
and
rcl
bound
bound
push
pusha
popa
loopne
sub
or
imul
adc
xchg
pop
or
dec
mov
jmp
sbb
popf
fstpl
test
rolb
in
lret
sub
lods
icebp
mov
cmp
dec
stos
dec
mov
loope
and
stc
movsl
lods
pop
popa
sbb
cmp
cltd
adc
and
push
test
inc
rclb
xchg
hlt
mov
pop
popf
mov
add
pop
xchg
dec
or
lods
loopne
out
bnd
fbstp
add
test
xchg
insb
mov
addr16
mov
insb
aad
pusha
push
enter
sbb
gs
std
test
mov
outsl
mov
inc
popf
in
jno
mov
pushf
jmp
jno
sarb
fldt
cmp
pop
fbld
or
jle
fcomip
adc
enter
out
adc
stos
cmp
clc
jecxz
test
xchg
sub
push
mov
add
imul
notb
inc
mov
mov
inc
movsb
jmp
cmpsl
movsb
jg
xor
xchg
xchg
mov
push
sub
fmuls
mov
lahf
mov
bound
into
sub
sahf
mov
ret
insb
fistpl
inc
and
into
fsubrs
gs
shll
and
out
adc
cmpsl
and
add
imul
mov
cmpsb
shlb
pop
rcrb
insl
xchg
or
inc
mov
pop
mov
push
jp
fistl
mov
xor
test
sbb
out
inc
cltd
or
pusha
and
clc
movsl
push
mov
mov
je
jmp
adc
adc
cwtl
fisttpl
xchg
jne
ja
pop
or
fdivs
cmp
add
fadd
outsl
push
pop
out
rcrb
int
daa
or
push
cmp
call
cltd
iret
aaa
mov
push
flds
nop
imul
adc
and
movsb
sub
popa
inc
push
pop
fs
push
mov
add
jbe
inc
jno
sbb
dec
pop
dec
xchg
jno
inc
or
cmc
mov
dec
adc
into
jmp
dec
dec
push
sub
add
scas
mov
sub
popa
and
pop
inc
into
jmp
push
jns
insl
sbb
xor
pop
sub
push
jb
sbb
mov
sub
jno
hlt
xacquire
jl
in
push
xchg
inc
shr
ret
or
inc
mov
std
ja
or
stos
mov
jbe
push
mov
icebp
adc
and
les
sbb
loope
mov
imul
inc
pop
dec
shl
call
mov
jnp
in
cld
add
inc
imul
loope
stos
jbe
jnp
xchg
push
mov
cmpsb
out
in
mov
inc
pop
lods
popf
arpl
cmpsl
in
xchg
add
push
fisubs
adc
arpl
orl
outsl
out
or
lds
pop
test
cld
or
inc
push
push
cmp
je
mov
movsl
and
and
pop
das
jge
popa
push
mov
jae
loopne
lret
push
or
loop
jbe
dec
fnstcw
adc
bound
mov
scas
into
pop
inc
jl
inc
inc
scas
sub
movsl
mov
ljmp
ja
pushf
js
adc
sarl
imul
cmpsb
jae
jb
and
je
imul
cmpsl
sbb
shll
nop
pop
dec
xchg
jns
xchg
pop
sub
test
dec
jge
dec
and
inc
pop
jns
stos
add
insl
lock
pop
xchg
sub
jae
push
inc
repnz
pop
mov
inc
cmp
stc
sbb
popa
add
sbb
inc
cmp
sub
push
insl
or
std
mov
add
xchg
in
fisubs
adcl
xlat
out
push
sub
out
or
sub
outsl
lds
and
je
or
stc
lds
loopne
adc
in
cmp
sub
inc
in
mov
rolb
int3
pop
popa
repz
push
sub
push
push
ret
push
mov
jae
test
aaa
mov
data16
mov
fcomps
mov
std
shlb
sub
andl
rcr
dec
imul
aam
xlat
inc
outsb
add
mov
jmp
enter
stos
pop
cmc
and
loopne
ljmp
adcb
shll
push
adc
divb
ljmp
ret
arpl
sub
sbb
add
jns
cmp
push
lods
pop
push
cmp
movsb
jp
cmp
pop
fndisi(8087
add
shlb
mov
pushf
mov
mov
mov
movsb
test
inc
pusha
cmp
es
lret
and
add
mov
subl
insb
movsl
mov
push
sahf
inc
xor
mov
jns
mov
mov
fwait
sub
sub
insb
sub
xchg
jle
adc
in
into
pop
sub
iret
or
or
lods
or
ret
jl
adcb
loope
dec
mov
add
cmp
pop
jg
inc
jns
xor
jo
xor
outsl
data16
xchg
sbb
fisubl
sahf
xchg
push
adc
push
xchg
mov
mov
xor
pop
mov
mov
jge
cmp
shlb
dec
repz
and
enter
push
jb
mov
and
pop
dec
fildll
ret
add
jnp
fwait
movsl
jmp
jae
and
pop
aad
test
add
jb
fstps
and
lret
repz
cmpsb
mov
jecxz
enter
jnp
outsl
jae
ret
leave
xchg
mov
pop
test
jbe
imul
shll
sahf
push
test
rcrl
clc
inc
shll
out
jp
imul
dec
xor
adc
xor
push
sbb
lods
js
scas
cld
fbstp
js
cwtl
cld
dec
xchg
add
xor
or
adc
adc
jecxz
mov
mov
jae
mov
jp
mov
cli
pop
popf
push
mov
push
adc
dec
addb
pop
cld
xor
and
test
lock
xchg
inc
dec
jg
push
scas
rcr
fisubs
mov
sahf
mov
mov
rclb
ss
jecxz
lods
xchg
ror
call
cmp
xor
and
mov
shl
mov
into
ljmp
fsubrs
pop
fs
sbb
in
dec
push
pop
jns
sbb
pop
and
xchg
repnz
sbb
push
icebp
xchg
pop
gs
inc
test
xchg
cmp
sub
xor
mov
add
movsl
stos
add
push
dec
or
int
mov
xchg
pop
sub
jne
mov
xchg
add
sub
fwait
stos
mov
loopne
xchg
mov
inc
out
shlb
add
xchg
xor
inc
pop
clc
lret
add
icebp
std
push
lret
mov
jmp
push
jge
sub
sbb
mov
inc
fidivrl
imulb
mov
inc
mov
sub
sub
and
mov
or
xor
or
or
pop
cmp
or
inc
inc
lcall
mov
mov
fsubrl
ss
fimuls
cmp
pop
pop
stos
jb
mov
lcall
test
mov
mov
arpl
cmp
push
test
push
std
mov
and
test
push
dec
mov
out
pop
mov
out
mov
push
test
sbb
dec
and
loopne
inc
aaa
pop
test
inc
push
aas
into
sub
inc
jne
inc
inc
data16
xor
cmp
in
lcall
in
jns
lcall
cmp
mov
sub
mov
rorl
bound
jo
cs
mov
pop
mov
fisubl
adc
fsts
aaa
std
call
inc
pop
rcll
inc
and
aas
push
push
clc
dec
add
adc
insl
xor
dec
xchg
and
jp
or
push
mov
jns
in
fcoms
add
xor
inc
bnd
outsl
cli
jge
rorb
loope
shl
jo
out
sub
jo
sahf
mov
adc
js
push
test
daa
push
xchg
cld
mov
dec
and
testl
sbb
mov
fmull
fucom
leavew
out
fidivrl
scas
push
insb
fstpl
mov
stos
jne
aad
pop
ret
sub
sub
inc
bound
jbe
mov
or
repz
push
gs
xlat
push
xchg
into
les
cmpb
mov
je
mov
sti
add
sub
mov
scas
sbb
or
addl
fucom
pusha
testb
mov
jnp
repnz
iret
loop
add
mov
mov
lock
jmp
dec
in
adcb
sub
xor
cmp
lods
test
pop
in
in
fistpl
mov
cs
dec
lcall
repz
pop
daa
jecxz
arpl
popf
in
xchg
fs
mov
sub
fldt
jno
shl
jg
aas
cmp
inc
pop
mov
cmpsb
push
xchg
ljmp
in
data16
aas
ret
lahf
push
cmp
adc
mov
insb
aaa
jp
je
pop
scas
and
pop
dec
sti
and
enter
pop
repnz
fcmovu
sbb
jae
mov
cmp
imul
adc
insl
data16
fistl
fnstsw
xchg
mov
lea
in
nop
mov
and
mov
jns
dec
in
int3
sub
cmp
push
je
add
inc
cli
jmp
or
fbld
jo
es
js
xchg
pop
pop
addb
push
sahf
stos
sahf
dec
pop
stos
leave
push
jp
mov
daa
and
cmp
xor
je
xor
inc
orb
les
cmc
mov
lods
cltd
aad
mov
imul
jl
xor
repnz
xchg
imul
rclb
mov
push
mov
loop
clc
sub
xchg
mov
adc
inc
call
fwait
pop
je
cmp
cmp
loop
insb
arpl
insb
mov
sub
jg
pusha
inc
add
dec
and
cmp
dec
ss
daa
repz
mov
mov
cwtl
or
std
pop
in
pop
pop
sbb
dec
rcrb
int
inc
cmpsb
sbb
mov
outsl
cmp
imul
popa
dec
sbb
and
pop
out
call
mov
jne
or
test
and
jl
jl
push
out
or
popf
add
idivb
jle
aas
xor
inc
insl
je
xchg
xor
push
dec
inc
mov
push
jp
or
fstps
jns
xchg
jg
fsubl
addr16
lods
rcr
bound
mov
cmpsl
push
jnp
adc
test
push
pop
push
xor
in
inc
and
adc
ds
sub
mov
mov
pop
cmc
hlt
rorb
inc
subl
push
push
sti
mov
mov
push
in
ret
outsl
fildl
iret
sub
das
push
inc
mov
pop
std
inc
aam
in
mov
jle
cmpl
mov
repnz
and
andb
fsqrt
adc
sbb
stc
ja
pop
dec
cmp
mov
jnp
ficomps
dec
stos
jmp
stos
adc
dec
xchg
pop
xchg
outsl
loope
in
xchg
fsub
mov
aad
fnsave
das
mov
repnz
jbe
ja
cwtl
mov
popf
fucomip
pop
aas
in
cwtl
lea
rdtsc
ret
aas
push
lods
adc
jmp
jnp
cmp
xor
xchg
sub
inc
xor
jnp
loop
dec
cmpsb
aad
pop
dec
pop
push
or
fidivrl
inc
repnz
arpl
mov
mov
out
movsl
dec
scas
xchg
outsl
or
ljmp
fdivrl
std
xor
lea
cmp
mul
jge
jg
inc
and
icebp
bound
in
xor
shlb
sub
jmp
jmp
push
pusha
movsl
dec
shlb
stc
and
or
daa
fsubl
addr16
xor
lods
roll
xchg
iret
rcll
in
mov
nop
and
sbb
adc
in
push
gs
mov
ret
es
pop
mov
mov
and
xchg
fdivrl
test
scas
fists
adcl
mov
nop
rol
cmp
outsl
dec
xchg
bound
dec
xchg
mov
push
cmp
loop
dec
jp
mov
out
cmp
dec
fiadds
lods
push
test
scas
orl
jbe
iret
cmp
jne
mov
pop
xorl
mov
cmp
and
fs
jns
ja
and
cmp
out
lea
push
xlat
sbb
jb
addb
mov
jle
pop
aaa
fsub
orb
mov
inc
icebp
rcl
outsb
xchg
in
lea
xor
repz
icebp
xor
dec
mov
lods
xchg
mov
rcl
dec
pop
sub
push
icebp
imul
iret
arpl
inc
inc
daa
lret
es
mov
iret
pop
bound
push
adc
mov
adc
jl
fstpt
and
test
push
cmp
or
jg
sub
clc
xor
push
scas
std
fs
jp
push
mov
cmp
or
jl
imul
mov
scas
loope
aas
jg
sti
popf
pushf
xchg
xchg
iret
mov
scas
mov
out
sub
add
dec
xchg
push
ja
mov
ret
cmp
sbb
cmc
bound
sti
jmp
cmp
rcl
mov
test
xchg
stc
adc
xchg
cmpl
mov
sub
into
into
mov
fmul
mov
cwtl
xlat
add
in
gs
mov
popa
nop
insl
ja
out
or
jno
adc
mov
daa
adc
xor
or
xlat
insl
mov
test
push
shrb
mov
cwtl
push
ja
cmpsb
dec
sbb
mov
ds
jecxz
jne
xchg
pop
fdivl
fdivrs
das
cmp
cmp
xor
and
bound
push
jl
aad
arpl
xlat
stc
mov
inc
jb
imul
test
or
add
hlt
xor
ljmp
dec
or
in
test
pop
pop
sub
insl
enter
aaa
jecxz
inc
mov
ret
loop
popl
mov
ja
add
stc
push
adc
mov
data16
push
push
fwait
jp
cmp
cmpsb
pop
int
pop
push
lcall
stos
outsb
ret
mov
and
jp
out
aad
jp
test
pop
adc
push
int
lock
mov
cmc
xlat
add
mov
xorb
dec
push
push
popa
or
push
cmpsl
xor
push
nop
adc
loopne
mov
sub
ds
xor
int
mov
sub
and
cmpsl
and
fwait
mov
and
push
fstp
inc
aad
xchg
push
rcrl
inc
sbb
jb
ja
pop
inc
icebp
lcall
ficoms
testl
xor
jns
add
rol
lods
sarb
call
ljmp
sub
mov
dec
sub
pusha
cmc
dec
and
xchg
sub
arpl
xchg
dec
or
repnz
jb
push
clc
inc
mov
pop
push
or
js
jmp
jmp
iret
xor
repz
inc
xor
lods
out
mov
cmp
xor
mov
test
mov
fmull
sbb
pop
push
or
negl
cltd
nop
loopne
clc
or
loope
aad
cmp
and
inc
ja
pushf
adc
out
push
aas
push
sbb
push
mov
int
out
and
int3
jns
scas
mov
and
sbb
movsb
mov
mull
pop
fucomi
orl
or
sbb
or
or
adc
inc
je
fidivs
push
dec
xor
das
mov
pop
enter
es
xchg
xchg
mov
inc
and
mov
lret
mov
or
sbb
pushf
imulb
xchg
lahf
add
stos
pop
dec
cltd
addl
inc
lret
inc
xorb
outsb
jo
fsubrl
cmp
jo
and
adc
pushf
lods
pop
lods
ret
aad
mov
out
jno
and
or
push
cmp
cli
inc
shlb
frstor
or
into
ret
mov
or
add
jns
adc
cmp
lahf
xorl
daa
rorb
mov
out
jne
incl
ja
and
sbb
jge
inc
in
adc
xchg
or
mov
jns
loope
jle
andb
lcall
scas
pop
jne
sub
xchg
inc
cmp
push
and
movsb
dec
jns
xchg
adc
into
and
loopne
sar
fmuls
cmp
das
adc
cmpsb
sbb
mov
xor
repnz
add
imul
pop
ror
inc
cmp
xchg
push
in
pop
and
int3
out
fdivrs
je
test
adc
lret
mov
sar
dec
in
dec
dec
pop
scas
xor
mov
in
sub
stos
mov
movsb
inc
push
sti
stos
in
adcl
scas
mov
shlb
cmp
push
jl
insb
mov
fcomps
lods
clc
mov
std
int3
push
add
loop
daa
ret
js
in
jecxz
rcll
cmp
and
les
pop
fcoml
das
push
sbb
push
imul
clc
jecxz
enter
dec
inc
test
sbb
inc
pop
or
inc
outsb
xor
insb
mov
mov
mov
in
cmpsb
sbb
push
stos
xchg
add
aas
cmp
adc
xor
mov
test
inc
mov
movsl
in
inc
cmp
add
test
mov
stos
or
add
mov
sub
lcall
in
jne
sbb
mov
ds
adc
cmp
ret
rorl
mov
out
jnp
fld
daa
sbb
repz
dec
mov
ja,pt
pop
xchg
and
ljmp
jns
insb
cmp
cwtl
hlt
rcll
pop
scas
inc
mov
cmpsl
xor
aam
jg
pop
loop
subl
mov
out
jl
loopne
jnp
fildll
sub
mov
inc
pop
imul
icebp
es
pop
repz
dec
sub
inc
cmpb
push
inc
xchg
sbb
shr
mov
cmp
iret
jmp
enter
mov
out
sub
mov
stos
jge
push
test
lea
sub
loopne
aaa
mov
mov
cmp
add
push
lock
in
mov
popa
inc
pushf
loope
nop
xchg
out
mov
ret
nop
mov
mov
int3
sub
out
repnz
sbb
bound
mov
icebp
inc
int3
pop
adc
mov
add
sbbl
shlb
and
and
jnp
push
mov
psrld
inc
dec
pop
dec
cmp
cmp
mov
int3
dec
jge
xchg
pushf
sub
mov
fldl
xlat
enter
mov
sar
adc
fdivl
cmpb
jae
fistpl
mov
push
dec
jl
xchg
insb
inc
std
rclb
push
and
xchg
and
mov
push
std
mov
jo
fs
mov
mov
xchg
adc
jnp
iret
mov
dec
sarl
cmp
int3
xor
stc
and
xchg
lds
mov
nop
sbb
jbe
fdivl
and
pusha
add
gs
cmp
adc
xchg
dec
jne
xchg
test
or
mov
ss
xchg
sub
adc
cmp
lret
fwait
mov
pop
cltd
test
rep
mov
mov
cs
testl
sub
mov
or
ret
jo
test
cmp
notl
fldl
arpl
xor
lea
and
xchg
mulb
mov
xchg
sbb
fadd
add
push
mov
inc
stos
xchg
sub
cmp
lahf
fcompp
adc
fsts
inc
fists
mov
xchg
push
or
and
mov
out
test
lods
aam
cmp
sbb
sub
popf
mov
pop
cmpsl
add
sti
popf
movsl
enter
fistl
mov
sbb
xchg
fcomps
xchg
adc
lods
mull
rorb
inc
loop
lds
test
je
mov
les
sbb
mov
jae
test
sub
pop
outsb
das
subl
into
mov
pop
repnz
sar
xchg
faddp
loop
and
outsb
dec
push
lods
js
sbb
cwtl
cmc
push
xor
and
jg
pop
push
and
xor
push
push
out
dec
mov
movsb
add
sub
shrl
mov
test
dec
loope
and
push
daa
repz
sbb
xor
test
sub
or
rcrb
mov
xchg
mov
test
cmp
out
push
pop
fiadds
pop
add
push
cmpsl
mov
rcl
aas
inc
jne
adc
scas
jmp
xchg
adc
loop
subb
xchg
lret
fs
xor
and
pusha
bound
mov
loope
or
in
ret
mov
dec
pop
fnstenv
cmp
pop
add
xchg
test
push
sub
in
dec
cwtl
sub
xchg
in
push
pop
lds
test
popa
out
cwtl
pop
mov
ret
pushf
and
pop
adc
aad
scas
add
loop
push
call
dec
loopne
adc
adc
cmp
nop
add
int3
adc
xchg
mov
loopne
out
mov
scas
sahf
jmp
mov
test
aad
lock
stos
and
push
test
and
cmp
daa
scas
jg
jb
xchg
les
sbb
pop
in
loope
into
mov
repnz
shl
nop
popa
lds
decl
andb
cmp
repnz
movsl
mov
sbb
fidivrs
mov
mov
sub
fimuls
pop
push
out
lret
fwait
jns
arpl
orb
cwtl
mov
je
cmp
mov
mov
cmp
lcall
jl
sub
ret
xchg
mov
call
pop
jp
out
jb,pn
pop
fnstsw
ja
out
mov
push
cmp
cld
adc
mov
cmovp
pop
arpl
pusha
gs
pop
and
mov
push
rcrl
xor
stc
jnp
movsb
fiadds
incl
xlat
add
inc
shrl
bound
in
xor
daa
mov
push
daa
stos
sub
mov
and
pop
adc
mov
and
lods
xor
push
outsb
lcall
push
cmp
push
loop
mov
pop
rcrl
push
gs
rep
hlt
xor
js
hlt
lret
xor
fldenv
stos
push
pop
jmp
adc
aaa
gs
aad
fistpl
push
sub
movl
lret
xorl
xchg
xor
mov
xor
fistpl
scas
mov
test
cmpsl
dec
repnz
fiadds
ja
and
insb
aaa
add
aaa
fdivs
es
jne
mov
test
add
mov
rep
pop
clc
cmp
aas
add
jne
push
stc
out
xlat
push
setp
dec
sbb
std
sub
xchg
sbb
shll
jecxz
dec
mov
cltd
pop
or
or
test
sbb
ljmp
or
aaa
push
loope
daa
lds
das
cli
xchg
pop
add
lea
push
mov
inc
xchg
shrl
es
mov
fcoms
out
or
cli
cmpsl
ret
xchg
cli
cli
in
inc
stos
push
pop
js
in
int
mov
int3
push
mov
jnp
cmp
mov
adc
mov
pop
xlat
sbb
mov
lds
inc
rcl
mov
loope
mov
iret
loop
cwtl
mov
mov
mov
xorb
dec
cmp
pop
std
mov
push
pusha
dec
push
insb
addr16
bound
pop
pop
ss
cmp
jne
outsl
les
dec
fistl
adc
and
push
push
out
add
popa
addr16
aam
bound
sub
cli
mov
pop
jnp
fabs
out
cli
adcb
xlat
sub
out
test
stos
xchg
cwtl
jl
jmp
shlb
jbe
jo
mov
int
std
xor
movsl
mov
mov
stc
jae
push
mull
dec
pop
xchg
xchg
jge
scas
fwait
cli
stos
push
inc
ss
xchg
and
ljmp
inc
push
xchg
out
add
mov
lahf
push
fdivrs
mov
mov
or
push
mov
in
stos
jbe
cwtl
xchg
jb
aas
add
jae
je
pop
adc
mov
or
and
ds
mov
test
dec
rolb
lret
inc
rcll
adc
adc
lock
sti
xchg
roll
or
es
clc
mov
or
cmc
roll
aad
mov
xchg
mov
add
push
ljmp
bound
shlb
aaa
fnstsw
mov
cmp
aas
test
push
loopne
jg
out
or
dec
pop
cmp
or
mov
movsb
sbb
test
and
xor
cs
add
addr16
xchg
ucomiss
xorps
push
scas
sbbb
out
inc
or
adc
mov
cmc
push
xor
ficoml
in
aas
fiaddl
movsb
cmpsb
leave
stos
push
aaa
addr16
pop
daa
js
ret
lds
inc
shlb
xor
je
icebp
dec
inc
push
pushf
mov
push
cwtl
add
jge
jle
pop
popf
les
pop
adc
fcoms
add
int3
jg
sbb
adc
aaa
add
jbe
and
sbb
jp
fisubrl
or
dec
fists
out
lods
adc
shrl
cmp
xchg
lea
fcompl
dec
in
xchg
sbb
xchg
jmp
lret
insb
dec
out
xchg
dec
jg
pop
aam
inc
mov
sbb
or
inc
ja
dec
lea
ds
mov
daa
pop
mov
pop
sub
bound
nop
pop
inc
push
ja
in
adc
shlb
test
in
add
fwait
mov
lods
into
jmp
popf
mov
scas
pop
inc
lock
add
cmpsl
dec
push
in
jecxz
fimull
ficoms
or
lods
mov
fwait
rcll
cmp
push
in
out
outsb
cs
cs
andl
dec
shr
sub
push
pop
lret
jae
jbe
ljmp
int
pop
xchg
icebp
in
out
pop
aas
roll
movsw
addr16
scas
cmp
shl
call
lret
inc
sbb
sbb
into
dec
fnstenv
call
sti
lahf
xchg
dec
mov
loopne
lds
jae
push
pop
andb
cli
pop
ss
pop
jbe
cmp
ja
or
inc
xor
dec
jecxz
sub
rcl
fwait
mov
test
pop
test
test
xor
inc
and
fst
xlat
data16
jns
sub
lea
mov
push
daa
jmp
mov
fs
sbb
add
push
je
je
loop
inc
inc
mov
pop
mov
jle,pn
jns
jp
pop
mov
movsl
xor
loope,pn
add
icebp
sbb
mov
xor
clc
sti
mov
pop
dec
in
xchg
pop
mov
ret
push
and
es
xor
lock
jbe
adc
xchg
cmp
ljmp
add
out
sbb
arpl
test
cmpb
mov
xchg
ja
xorb
in
jb
sarl
xchg
mov
sbb
vunpckhpd
sub
fs
dec
mov
ret
adc
popa
fs
pop
in
cwtl
or
or
inc
jnp
and
pop
jns
cmp
mov
fbld
fwait
mov
cmp
stos
xor
jmp
push
mov
push
call
lcall
jb
movsl
sub
ds
xchg
aaa
or
lds
scas
sbb
outsb
jo
fidivs
mov
xor
lahf
fdivs
lcall
push
inc
xchg
cmp
jnp
jnp
sbb
out
xchg
lret
jnp
mov
shrw
cmc
or
arpl
adc
or
in
push
adc
jbe
sahf
add
xchg
leave
bound
mov
dec
inc
jmp
js
and
jae
cli
dec
out
cli
test
or
loope
jg
add
and
inc
cmp
fmull
mov
scas
das
enter
xchg
jb
lahf
fwait
cwtl
sub
imul
das
xchg
xor
sarl
xchg
imulb
mov
mov
xchg
dec
mov
sbb
sbb
sbb
loope
fmull
sbb
lret
lds
sub
cmp
push
or
loop
jecxz
xchg
mov
xor
xchg
push
fisubrs
sbb
es
cltd
std
ret
jge
movsl
push
int
cltd
jl
jo
xor
aad
sbbl
adc
rcrb
inc
aam
mov
add
xchg
jmp
cmpsb
push
mov
loope
imul
jo
adc
push
je
cmp
inc
rclb
push
push
cmpsb
mov
pop
sbb
or
pop
popa
push
push
inc
and
out
into
es
inc
sub
inc
stos
lods
mov
xchg
dec
sub
int
std
loope
in
aas
imul
out
pop
jns
add
push
pushf
inc
shlb
xchg
iret
inc
mov
js
push
out
pop
jnp
and
arpl
daa
mov
jne
mov
or
test
cltd
mov
int3
fisttpll
inc
lea
imul
test
ss
sub
or
xchg
add
es
addr16
mov
jno
mov
and
lcall
xchg
add
movsl
jle
xchg
fcmove
push
cmpsb
jo
mov
pop
add
cmp
cmp
xor
fbld
repz
xchg
jo
mov
adc
and
in
mov
leave
push
imulb
and
adc
xchg
aam
or
jmp
sti
pop
fisubrs
int
xchg
mov
lret
les
push
ljmp
push
dec
shll
xor
jg
aaa
mov
pop
dec
call
scas
lods
lock
xor
aaa
cld
add
dec
decl
ja
adc
cmp
xor
dec
sub
shll
jecxz
jno
imul
pmuludq
jge
dec
jae
movl
test
cmp
daa
nop
sbb
inc
sti
insl
push
movsl
mov
sbb
fisttpl
movsl
dec
pop
mov
mov
out
push
adc
not
fbld
loop
into
call
loopne
dec
add
rorl
js
arpl
adc
push
rolb
ret
cmp
mov
lret
gs
mov
sub
andb
icebp
jns
push
in
js
dec
sbb
jo
mov
pop
cli
test
pusha
adc
jg
sbb
ret
pop
out
ljmp
addr16
or
insl
cmpsb
add
enter
and
pop
int3
jno
test
push
movsb
in
ljmp
mov
push
mov
push
movsl
lock
adc
clc
shll
pop
scas
sbb
dec
push
sub
popa
addb
in
scas
les
aam
jbe
pop
and
xchg
ds
das
stos
testb
lret
sbb
lods
adcb
or
insb
out
loope
add
mov
stc
stos
leave
inc
jno
adc
hlt
inc
add
add
mov
sarb
jae
bound
std
sub
cmp
jo
sahf
mov
cltd
pop
stos
xchg
mov
mov
lea
cmc
inc
xor
lret
int3
cmp
and
aam
sub
rolb
push
adc
and
les
ficoml
push
shll
pop
jae
adc
aas
stc
pop
xchg
push
adcb
dec
jnp
xor
test
mov
or
subb
jne
add
cmc
fwait
jae
mov
adc
or
xor
enter
mov
pop
pop
push
mov
movsb
icebp
jns
fxam
adc
push
jnp
testl
test
cmp
sar
ljmp
addr16
fsubl
aaa
sbb
fsubrs
fcomps
inc
pop
jae
dec
pusha
repnz
inc
rorl
mov
lret
movsl
lods
or
xchg
iret
mov
ss
adc
clc
sub
mov
pop
cmp
jmp
or
jns
mov
adc
loop
ljmp
leave
mov
outsl
fs
lcall
mov
sbb
js
pop
lods
nop
hlt
cli
jmp
pop
mov
fldl
dec
push
mov
xor
popf
scas
out
je
mov
das
int
ja,pt
jno
popa
roll
repnz
cs
rorb
sbb
cmp
sub
lret
mov
in
popa
pop
xchg
sbb
fs
and
pop
xchg
inc
ja
cwtl
inc
add
xor
cmp
mov
fdivrl
fwait
pop
mov
mov
loope
dec
mov
or
add
dec
and
pop
mov
fwait
imul
out
xor
ret
mov
ja
push
faddl
and
jmp
cli
fidivrs
hlt
sub
mov
mov
push
std
or
mov
cli
iret
inc
sbb
jmp
sub
xor
in
pop
push
inc
pop
loop
outsb
in
and
mov
mov
sub
cmpsb
cmp
push
stc
outsb
lcall
jecxz
adc
lock
inc
sub
ret
sbb
mov
stos
ljmp
popf
and
and
push
or
subl
aaa
and
mov
popa
cmc
in
jno
outsb
xchg
and
mov
mov
cmc
shll
test
xor
call
mov
movsb
rolb
jae
and
mov
add
sbb
lret
xor
ds
cltd
cmp
int3
in
shlb
xor
sbb
push
add
lret
out
pop
add
and
xchg
call
je
lock
jg
int3
int3
addr16
ja
dec
mov
lock
xchg
bound
arpl
inc
mov
cltd
sti
pushf
outsb
mov
jbe
push
ss
cmpsb
aam
push
push
popa
jne
adc
repnz
xor
jb
mov
loop
mov
mov
mov
jg
cmp
jmp
negb
cli
inc
cmpsb
lods
repz
mov
jmp
or
ficoml
lods
out
out
sub
aas
or
xor
in
mov
sahf
ss
jne
xor
dec
lcall
or
push
mov
sub
imul
mov
out
push
jnp
xorl
cmp
rolb
lock
ja
mov
push
outsl
xor
add
orl
lock
aam
aas
mov
mov
add
xor
jle
xor
mov
in
fiadds
test
adc
and
mov
stos
pop
aam
test
rorl
jp
movsb
pop
mov
jecxz
adc
pop
ss
xchg
pop
leave
test
stos
inc
aaa
imul
sbb
add
cld
push
push
cmp
sbb
ret
dec
enter
jge
dec
inc
mov
sbb
int
xchg
jb
leave
std
mov
lret
lahf
dec
ret
rcll
cmpsl
mov
mov
ja
jae
pop
lret
or
clc
leave
adcb
mov
outsb
test
test
fidivrl
push
ret
sbb
shl
fdivrs
repnz
and
addl
mov
xlat
cli
add
push
jecxz
adc
push
cli
leave
jno
cmp
jo
push
mov
mov
xchg
std
bound
fildl
decb
int3
push
lret
in
adcb
xchg
fwait
add
pop
fwait
adc
lea
push
out
lret
pop
xchg
xchg
mov
mov
daa
cmp
rorb
mov
icebp
lods
lcall
into
push
cmp
mov
repnz
xor
sub
ret
lds
inc
dec
sub
into
in
sbb
subb
jl
insb
test
aad
xor
sbb
xchg
rolb
dec
mov
push
fld
xchg
push
push
cmp
inc
lds
mov
push
pop
mov
cmp
sbb
push
xchg
push
cwtl
mov
sub
cmp
sub
xor
mov
in
inc
lock
and
loope
jno
mov
imul
jl
xchg
inc
lds
loop
cmp
icebp
pop
push
jecxz
mov
or
lock
rclb
jp
inc
mov
mov
loopne
fs
inc
icebp
ret
cmc
popa
push
xchg
shrb
mov
add
fisttpll
and
data16
in
insl
push
pop
or
mov
stc
xchg
pop
call
divl
loopne
pop
fldt
push
decb
faddl
rolb
mov
push
push
jo
daa
fldt
hlt
int3
inc
or
mov
jne
data16
int3
pop
cld
jbe
xor
dec
jns
jmp
iret
add
rcrb
in
cmpsb
mov
and
mov
sbb
and
insl
subl
out
popf
xchg
mov
imul
enter
bswap
xor
stos
cmp
jp
inc
mov
adc
push
imul
out
xchg
xchg
push
mov
or
cmp
mov
inc
mov
pop
cmp
adc
sbb
test
std
mov
repnz
jg
js
sbb
jnp
lret
xchg
imul
lds
and
jp
stc
into
fildll
roll
and
mov
xchg
pop
sbb
cmpsb
xor
cmp
push
daa
test
add
icebp
jne
cmpsb
pop
cmpsl
fdivl
xor
cltd
fists
or
push
into
outsb
es
push
sub
stos
clc
je
xor
jge
or
notl
add
xor
or
repz
int
xchg
dec
fistpl
sub
dec
cltd
idivl
and
mov
popf
subb
rclb
movsb
repz
push
cld
stc
add
adc
sbb
xchg
dec
sub
mov
adc
xchg
mov
mov
ljmp
jno
fisubs
mov
jae
shl
das
adc
xchg
stos
or
jmp
clc
jge
cmp
lcall
push
adc
jmp
adc
xchg
call
adc
xor
out
rcll
ds
insl
mov
repnz
fdivrl
insl
xchg
xchg
cs
or
in
popf
pop
pop
subb
movsl
stos
add
xchg
fstpl
mov
push
dec
and
cs
scas
bound
or
test
imul
std
bound
mov
xchg
xchg
pop
dec
fildll
std
insl
arpl
inc
sahf
mov
ret
and
cmp
rorl
pop
lahf
pushf
and
push
decb
cmp
gs
fldt
pop
mov
out
fnstenv
mov
or
paddw
dec
outsb
mov
mov
jl
test
es
idiv
fs
add
sub
adc
mov
repnz
je
in
enter
inc
daa
repnz
iret
jg
xchg
dec
push
nop
xor
cmp
std
xchg
mov
das
fs
cltd
pop
pop
push
outsb
inc
sbb
movsl
mov
pushf
in
rclb
fbld
sub
jb
sub
mov
mov
push
cld
inc
or
push
adc
xchg
insb
xchg
jmp
mov
xchg
jb
mov
aaa
xchg
push
shrd
pop
xor
adc
mov
lret
stos
mov
rorb
fimull
sti
jbe
jecxz
pop
mov
call
in
push
and
jbe
push
sub
adc
dec
push
repnz
mov
push
pop
push
mov
xchg
push
push
sub
mov
lock
dec
leave
adc
jg
jae
shl
and
test
mov
xchg
dec
lret
outsl
insl
neg
add
push
insl
popf
gs
insb
insl
and
push
in
mov
lret
aam
mov
loopne
fwait
test
lret
mov
push
sub
dec
clc
inc
mov
jnp
lock
inc
leave
stc
ror
not
sbb
push
lock
jmp
loop
push
aam
xor
mov
cmp
fs
jb
mov
mov
out
mov
xor
and
call
shlb
jmp
fsubp
inc
ret
or
outsb
out
pop
push
fstpl
and
enter
mov
hlt
cmp
repz
fwait
lret
scas
and
inc
push
cmpb
cmp
jmp
arpl
cmpsb
adc
add
pushf
lods
pop
sbbl
mov
inc
lcall
adc
out
cmp
in
pop
xchg
inc
mov
push
pop
stos
sbb
adc
test
jnp
pop
scas
cltd
push
inc
stos
dec
test
call
inc
pop
lds
mov
imul
lds
js
rcr
add
out
sub
adc
pop
adc
cmp
xchg
inc
xchg
and
xchg
sub
inc
xor
pop
adc
call
sub
xchg
addl
aad
lret
fisubrl
lcall
in
jne
sub
negl
lods
jl
insl
aas
push
mov
or
push
and
xchg
push
mov
or
lret
inc
xor
les
int3
popf
pop
dec
int
rorl
nop
jbe
xchg
sbb
mov
xor
imul
or
movsb
xor
aaa
xchg
movsb
dec
adc
xchg
push
fsubr
subl
daa
xorb
popf
inc
jmp
iret
outsl
jne
stos
jbe
fistpl
xlat
push
inc
inc
out
jmp
mov
sahf
testl
inc
lock
mov
or
cmp
mov
xchg
pop
mov
adc
sti
mov
dec
pop
sub
jbe
jp
ret
jbe
mov
mov
mov
movb
mov
jne
mov
imul
jge
push
rcrl
idivl
and
xor
mov
xlat
xchg
pop
fwait
or
xchg
sbb
dec
xchg
fucomp
clc
adc
int
js
sub
or
jmp
lods
mov
hlt
lods
hlt
add
sub
and
fistpl
jo
test
lods
int
shlb
mulb
in
in
mov
outsl
inc
xchg
push
ds
dec
cmpsl
idiv
es
into
and
les
pusha
mov
pop
or
and
sub
ljmp
dec
jmp
stc
xchg
imul
pop
bound
out
sahf
cmc
leave
hlt
pop
das
js
fistpl
jecxz
test
mov
in
insl
xchg
and
bound
xchg
rol
int
arpl
jge
into
mov
ror
xchg
das
cld
pop
jo
ret
enter
lea
adc
scas
inc
xchg
or
sbb
rcrl
and
dec
hlt
pop
sbb
loop
int
xchg
and
shlb
dec
clc
clc
mov
add
mov
push
push
xor
cmp
aas
and
add
push
fwait
out
mov
mov
ret
mov
not
and
or
insb
lods
js
stos
cs
push
and
sahf
inc
push
les
cmp
or
pop
and
daa
sarl
xchg
xchg
shrl
std
inc
pop
xlat
mov
iret
xor
lea
sub
add
inc
pop
subl
ljmp
inc
inc
mov
outsb
jae
xchg
mov
in
push
sar
test
adc
jae
repz
xchg
addr16
roll
cltd
imul
mov
inc
pop
jmp
jae
push
aad
ret
push
xor
ja
sub
andl
jmp
sbb
or
jo
xor
xchg
test
pop
enter
and
enter
outsl
mov
inc
xchg
ret
sar
mov
and
pop
jle
sbb
fldenv
sub
cmp
pushl
arpl
movsl
pop
mov
mov
roll
daa
in
push
fst
inc
push
aaa
push
sahf
dec
pop
pop
in
ljmp
xchg
scas
sahf
aad
pop
lcall
cmp
dec
lds
repnz
ficomps
adc
pop
and
cwtl
xchg
mov
mov
std
mov
sub
cmp
aas
jnp
lahf
sbb
aaa
cmc
sbb
cmp
sub
pop
sub
ret
sub
les
fcomps
pop
and
push
sbb
cltd
mov
dec
xor
lret
divl
mov
cmp
push
loope
jecxz
js
inc
or
jecxz
in
cmpsl
aaa
sub
fcmovne
push
imul
lods
adc
and
clc
and
mov
lods
lods
daa
mov
cmp
lcall
push
fdivl
int3
mov
imull
cmp
push
jle
adc
and
adc
cmp
mov
adc
cwtl
repz
pop
pop
orb
xchg
ret
cltd
dec
loope
pop
out
je
jmp
js
pinsrw
xchg
xor
in
cli
int
xchg
mov
inc
dec
or
jae
mov
rcl
or
lret
add
fnstcw
decl
cmp
jnp
push
jmp
push
insl
aas
mov
fldcw
mov
dec
xchg
loope
or
xchg
push
insl
arpl
lods
sub
xchg
mov
mov
inc
jl
jmp
jns
and
jp
shlb
pop
xor
sarb
in
mov
jb
add
idivl
loop
mov
mov
xlat
scas
and
sbb
call
push
inc
sbb
insl
loop
gs
jnp
dec
sub
loope
mov
jge
fld
aam
mov
outsl
cmp
into
or
xchg
stc
nop
mov
or
or
fistl
pop
adc
int3
test
mov
out
rcrb
pop
out
cmp
rolb
js
push
mov
fcmovnb
dec
es
jbe
adc
or
sbb
into
push
xchg
repz
inc
lret
fadds
cmpsb
out
in
test
lret
fistpl
mov
sbb
mov
cmc
iret
into
push
ds
mov
shl
andl
into
dec
test
jge
jmp
lods
xchg
shr
xchg
inc
test
xlat
pop
jecxz
fldcw
jno
int3
mov
pop
sub
test
rorb
bnd
enter
dec
adc
dec
jge
sbb
inc
add
and
mov
out
sti
jb
lods
xlat
enter
add
int
lea
sub
in
mov
in
in
mov
fmuls
xor
cltd
xchg
mov
jmp
mov
pop
mov
hlt
cmpsl
fistps
inc
imul
inc
sti
test
jns
push
sar
das
loop
mov
lret
nop
int3
andb
adc
push
jg
xor
outsl
pop
inc
daa
xchg
sarb
mov
mov
xor
pop
orl
sti
inc
sbb
pop
pop
shl
cmp
enter
push
int
outsb
xor
push
jb
lock
xchg
imul
mov
cmp
repz
add
loopne
out
add
inc
mov
gs
call
push
int
mov
outsb
lods
cld
push
adcl
jo
decl
sub
push
add
jge
daa
stos
and
xchg
sbb
dec
push
push
jmp
mov
and
enter
push
sub
mov
cmp
adcl
jne
adc
jecxz
pop
cmc
add
call
pop
xor
sub
arpl
test
mov
int3
push
inc
inc
mov
xchg
sub
xor
cmc
mov
lret
xchg
fcmovnb
inc
jnp
pmaxub
lcall
mov
and
pushl
inc
dec
fisubrs
pop
pop
dec
add
cmp
dec
cli
leave
jle
push
fisubl
push
fs
rorb
gs
and
xchg
cli
and
jl,pt
adc
leave
fwait
jl
xor
jb
shl
repz
lahf
lods
lahf
xchg
stos
les
test
scas
mov
enter
ret
fmuls
aam
sub
jl
movsb
inc
dec
pop
call
rorb
jle
add
popa
mov
push
xchg
pop
mov
ljmp
cmp
mov
adcb
mov
jnp
popf
dec
push
pmaxub
xchg
movsl
rolb
add
mov
int
mov
dec
sbb
loopne
sub
mov
or
out
mov
outsb
lret
xchg
outsl
aad
stos
movsb
adc
stc
mov
xor
dec
push
cmp
and
lds
pop
fdivp
fidivl
push
adc
adc
push
repz
jno
andb
mov
movaps
inc
dec
jl
mov
add
mov
mov
fldenv
ret
mov
and
push
sub
cmpsl
pop
xor
fcmovnbe
mov
sub
cli
push
lods
movsb
xlat
cs
xor
aam
mov
lret
mov
outsb
aad
inc
and
ljmp
mov
and
rolb
lds
mov
xor
jnp
sub
mov
adc
stos
add
jecxz
sbb
aas
add
loope
loopne
bound
sbb
push
clc
bnd
ja
pusha
popf
ds
pop
aas
in
mov
mov
mov
les
out
xchg
pop
xchg
stc
mov
lea
mull
movsb
and
sbb
int
or
pop
jecxz
and
xchg
xchg
test
mov
ss
pushw
push
fcomps
sbb
push
and
ror
pop
cmp
test
int3
dec
les
dec
push
add
pop
jns
mov
and
dec
xchg
popf
gs
out
push
or
in
jg
ds
add
pop
dec
push
jns
lcall
movsb
push
shrb
and
leave
loopne
inc
ss
or
outsb
ljmp
nop
cmp
es
mov
inc
jbe
shrb
sarb
push
sbb
jg
imul
movsl
sbbb
pusha
into
rorl
sarb
addr16
or
pop
insb
repz
out
leave
sbb
cmp
and
ss
lcall
sbb
dec
pmulhw
jno
cmp
dec
push
aaa
repz
sbb
ss
scas
sbb
pop
cmpsl
push
xor
push
cmp
test
xchg
lahf
xchg
push
repz
pop
push
or
in
adc
sbb
stc
dec
xchg
lcall
lea
pop
mov
stos
outsl
rcr
mov
inc
nop
das
sti
nop
sbb
push
xchg
sbb
fadd
stos
arpl
mov
sub
les
inc
push
dec
loopne
shlb
or
fiadds
pusha
adc
push
sbb
sbb
jge
jns
jb
add
xchg
dec
add
stos
mov
adc
pop
sbb
mov
adc
mov
sub
dec
jmp
jge
fninit
push
jae
data16
idiv
je
orb
mov
lock
mov
add
rolb
cmpl
mov
inc
movsl
push
dec
cli
lock
mov
js
btc
ret
mov
test
lahf
push
mov
jp
sbb
into
in
xor
mov
in
movsb
rclb
sub
jmp
faddl
cmovno
inc
jp
das
hlt
xchg
add
clc
pusha
call
cmp
lcall
mov
pop
inc
ljmp
inc
xchg
lret
mov
popf
std
inc
cwtl
mov
or
call
and
mov
mov
lods
setge
xor
je
scas
xlat
pop
ja
jnp
xchg
xor
mov
hlt
jb
xor
mov
pop
lahf
xchg
sub
es
cmc
pop
sub
sub
add
movsl
fsubl
adc
mov
mov
cs
xor
jne
push
sub
mov
dec
jecxz
jmp
xchg
insl
jecxz
mov
cmp
test
push
popf
cwtl
aad
pop
jl
mov
xchg
and
add
mov
inc
into
lea
ja
aad
fnsave
xor
pop
pushf
cmpb
lahf
testb
cltd
pop
lods
cli
sbb
popa
adc
lcall
mov
inc
lock
xlat
bound
or
fucom
iret
pop
cmp
jg
aad
dec
mov
pop
std
fcomps
lds
das
aaa
fisubl
add
mov
lret
xor
jb
mov
popa
rol
cmpsl
mov
push
in
das
push
scas
jg
or
leave
daa
mov
aaa
loopne
test
cld
cld
fcomp
pop
cmp
es
ret
and
cmpsl
dec
mov
sahf
imul
pop
push
xchg
xor
jmp
dec
sbb
cmp
cmp
pop
rcll
aam
push
xchg
sbb
add
xor
shll
dec
cltd
mov
in
cmp
int
addb
addr16
jbe
sbb
sbbl
aas
cmovb
fstpt
aaa
xchg
fwait
add
adc
jp
dec
je
fnsave
flds
push
sbb
rolb
push
xor
jo
mov
or
pop
sub
lods
push
fsts
xor
cltd
ljmp
adc
pop
jg
icebp
add
and
sub
jno
lret
in
imul
test
lock
and
push
mov
xor
mov
jecxz
xlat
cmp
inc
sbb
mov
data16
push
test
inc
sub
jg
das
lock
xor
xchg
idivl
pop
stos
inc
popf
aad
mov
mov
sub
pop
ljmp
or
jne
mov
pop
xor
imul
popf
popa
and
lock
pop
sbb
es
cmpl
mov
aam
and
popf
xor
pop
dec
sub
jl
xor
pop
pop
xchg
scas
xchg
pop
pushf
testl
add
call
hlt
popf
movsl
mov
in
rcrl
fstps
addr16
mov
push
push
outsb
test
enter
push
cmp
dec
sbb
inc
addr16
dec
inc
std
jge
popf
sbb
cltd
and
sub
fcomps
mov
adc
loope
jmp
inc
sub
je
fisubrl
add
push
dec
xor
out
out
adc
dec
push
and
pop
xchg
mov
rclb
xchg
imul
push
jnp
das
jl
jo
icebp
mov
cmp
push
cmc
jne
je
sar
xor
inc
bound
shl
xchg
fistps
pcmpgtd
fisttpl
push
mov
std
inc
out
sti
aad
inc
xorl
movl
pop
enter
int3
fxch
or
sub
cmpsl
cmpsl
clc
xor
and
xlat
js
jo
adc
sbb
push
test
ds
sbb
mov
sbb
xor
fistl
jge
icebp
pop
mov
push
mov
cmp
mov
gs
enter
js
inc
dec
lods
mov
jmp
mov
sbbl
mov
push
mov
ss
in
cli
ss
adc
leave
pushf
xchg
xor
arpl
mov
add
icebp
adc
and
fnstcw
in
sbb
lock
jns
pop
test
mov
push
mov
mov
cwtl
psubd
xor
pop
or
jg
xchg
aam
mov
jg
sub
bound
or
cmpsl
xchg
hlt
add
popf
movsb
aas
push
jg
cmp
push
xchg
nop
jb
shlb
mov
mov
pushl
xchg
pop
sbb
jns
sbb
stos
not
fdivl
mov
and
mov
sbbl
inc
orl
cmp
out
jle
fisubs
add
fisttpll
pop
scas
int3
add
add
repnz
movsb
clts
jne
xor
adcb
or
jmp
push
cltd
fldcw
lea
add
cmp
pop
sub
adc
dec
dec
sarb
stc
push
ja
sbbb
out
jb
xor
sbb
xchg
lret
outsb
and
scas
mov
lret
or
pop
sub
stos
test
dec
inc
push
in
lret
movsl
xchg
mov
lcall
insl
fcmovnbe
pop
cld
or
pop
subl
cmovb
pop
and
enter
xor
add
jns
test
pop
push
adc
inc
pushf
scas
and
outsb
push
cmp
sbb
mov
jle
inc
mov
xchg
pop
sbb
aas
cld
push
add
popa
lret
nop
test
outsb
and
shlb
arpl
sub
gs
lea
popf
adc
push
cmp
pop
sbb
pop
out
add
cmpsl
or
test
scas
xchg
pop
addr16
loope
jg
ljmp
push
sub
and
fiadds
inc
in
cmpb
pop
paddd
xchg
pop
dec
loope
rcll
fdivl
jns
pop
jg
sub
out
test
push
dec
pop
xchg
dec
test
cmp
cmpb
rcrl
test
addr16
aaa
cmp
int3
sbb
fcompl
aas
mov
dec
dec
dec
mov
test
pop
rcll
loop
push
sahf
jbe
or
mov
clc
mov
add
lods
xor
mov
xor
insl
or
cmp
nop
add
dec
pop
fs
adc
cmp
jle
loop
mov
mov
loopne
popl
lahf
test
lds
imul
repnz
xchg
and
sahf
hlt
push
shll
dec
adc
sub
jl
or
fsts
ficoml
lds
repnz
cmpsb
popf
lret
out
dec
adc
dec
push
add
add
or
xchg
out
and
das
xchg
inc
shr
jno
out
cld
aas
cmp
mov
in
int
test
mov
inc
adc
push
sub
xor
mov
dec
jne
rorl
pop
mov
xchg
rcrl
or
lods
xor
mov
mull
dec
cli
add
cmpsb
xor
maskmovq
negl
in
scas
es
cmp
cmp
jno
mov
or
movq
jmp
jnp
dec
or
push
inc
push
xchg
jmp
jnp
jp
testl
lods
mov
sbb
hlt
xor
sub
sarb
or
js
jp
js
or
sub
lret
push
pop
test
icebp
lds
lahf
clc
sub
call
dec
mov
and
iret
push
les
and
pushf
fiaddl
jecxz
fs
cmc
and
nop
add
adc
pushf
mov
and
lcall
js
mov
and
sbb
lret
pop
sub
xor
jp
repnz
pop
icebp
shll
enter
in
xchg
daa
xor
ficomps
inc
and
mov
push
fdivrl
ss
fcmovnbe
sahf
imul
ret
into
hlt
pop
adc
xor
repz
mov
mov
mov
lock
cmpsb
and
out
out
stc
fwait
negl
aam
mov
loop
daa
inc
push
jo
out
mov
cmc
xchg
ret
inc
push
je
or
inc
mov
and
pop
fstps
fs
hlt
mov
mov
pop
cmp
sbb
mov
aad
movsb
dec
mov
mov
xchg
cmp
mov
mov
jo
sbb
push
std
cld
fistpl
and
lcall
lcall
fwait
xor
add
or
aaa
outsl
jne
jae
mov
mov
scas
pop
mov
mov
adc
push
js
mov
clc
mov
push
lds
jmp
push
xor
test
ret
cs
fiadds
repz
jmp
ljmp
mov
pop
push
test
xor
out
hlt
sub
pusha
out
hlt
sub
sbb
sub
jmp
mov
pop
xor
sbb
ret
lock
aaa
das
inc
sub
mov
in
cmp
cmp
xchg
movsb
xor
push
sbb
mov
xchg
xor
imul
pusha
add
into
push
pop
mov
sbb
ja
ret
int
jmp
test
rcrl
push
addl
jmp
js
sbb
add
loopne
lcall
scas
sbb
cmp
cmp
pushf
xchg
cmp
pop
ror
jne
xchg
subl
mov
push
aaa
int
or
xchg
or
mov
dec
cmpsb
mov
iret
mov
jns
repnz
ret
shrl
ret
mov
inc
aaa
outsl
adc
leave
push
xchg
dec
fmuls
mov
out
aad
pop
aam
sbb
push
push
push
ret
in
cltd
sub
dec
xchg
pop
pusha
enter
popa
mov
inc
mov
sti
sub
jg
addl
cltd
ds
es
xchg
out
xchg
jno
jbe
test
jge
jp
fwait
mov
adc
cmp
rol
and
inc
call
inc
cmpsl
das
xor
inc
int
inc
popf
outsb
cmovns
jmp
fs
or
xor
in
inc
xchg
hlt
add
xlat
mov
pop
adc
bound
jg
rolb
ficoml
shrl
adc
mov
or
sub
lods
add
lea
popa
and
inc
ja
movsl
hlt
xchg
mov
lds
or
sbb
mov
xor
mov
or
fstl
cmp
mov
mov
mov
mov
pop
hlt
ja
mov
movsl
loop
fs
push
je
xchg
pop
pop
mov
add
xchg
or
incb
shl
push
push
fsubs
mov
mov
in
ret
pop
dec
and
or
inc
test
push
ror
jmp
push
adc
cmpb
adc
push
lahf
outsb
sahf
test
sti
jo
mov
lret
lret
test
sbb
sbb
mov
adc
pop
aaa
adc
xchg
pop
push
sbb
rclb
or
push
in
xlat
or
insl
inc
inc
es
or
adc
dec
pusha
cmpsb
xchg
aaa
mov
int
ret
fs
arpl
aam
adcl
inc
fld
fsub
clc
imulb
dec
mov
jb
lods
es
out
fdivs
pop
xchg
xchg
push
mov
mov
repz
addr16
push
jnp
sub
cmpsb
hlt
fs
std
xchg
push
dec
push
test
sbb
sbb
cmp
add
adc
shrl
jmp
xchg
sub
mov
sbb
inc
movsl
mov
dec
arpl
dec
cli
popl
push
sub
pop
inc
mov
lods
pop
adc
push
pop
lods
sub
movsb
in
sub
mov
in
push
or
mov
test
in
bound
popf
ss
shrb
fcomip
push
loopne
imul
add
mov
sub
scas
out
mov
mov
movsb
jb
addr16
addr16
stos
fldcw
ss
or
std
sarb
test
out
inc
dec
dec
push
pusha
mov
and
mov
inc
sub
inc
scas
sti
inc
test
stos
mov
das
pop
lock
add
sahf
mov
bound
popa
into
out
int
xchg
adc
lds
adc
call
add
hlt
pop
scas
loop
pop
outsl
mov
push
std
pop
adc
jns
jecxz
enter
mov
ljmp
push
dec
push
xchg
out
adc
es
jge
sbb
addb
xor
pop
scas
add
jle
push
jle
mov
es
andl
mov
je
movsl
testb
inc
add
int3
lret
sarl
jbe
std
in
ljmp
push
pop
movsl
pop
pop
scas
js
xlat
lea
jmp
mov
push
movb
loop
mov
aaa
xchg
dec
sti
loopne
ret
cltd
std
test
jb
or
pop
mov
aaa
popf
bound
sub
int3
jmp
cli
sbb
movsb
outsb
rcl
clc
push
scas
and
mov
inc
movsl
daa
lcall
fldt
test
cs
test
and
mov
jno
and
out
mov
push
arpl
out
sub
call
fsubs
pop
adc
icebp
popa
cmpsl
out
adc
dec
in
adc
mov
pop
inc
mov
jo
cmpl
sbb
es
push
dec
adcb
stos
mov
sbb
cmp
test
cs
xchg
adc
scas
dec
jns
mov
sbb
or
pop
or
cmp
movsb
cmpsb
mov
mov
and
adc
mov
fnstenv
cmp
in
lret
addr16
fsubrl
jns
add
hlt
test
imul
or
cmpsl
stc
inc
jl
jno
lret
es
jmp
jb
movsl
sub
jb
into
cltd
lds
or
mov
mov
jo
shll
adc
repnz
int3
mov
cli
cltd
mov
cs
or
es
loop
bound
lret
or
pop
test
and
jp
scas
in
int
std
in
bound
and
adc
pop
mov
push
pushf
xlat
lahf
shrb
push
inc
push
or
cwtl
pop
pop
icebp
fimull
ss
mov
lahf
in
add
push
aas
loope
sbb
rcr
inc
sbb
mov
inc
fdivs
daa
sahf
push
and
cmp
cmp
out
xchg
fstpt
in
mov
movsl
jne
ds
dec
lods
loope
mov
jecxz
jnp
cli
mov
adc
add
fidivl
sahf
out
xchg
out
popa
jnp
mov
lea
mov
and
stos
cld
iret
jo
insb
cmp
fadds
push
cli
jmp
addr16
inc
jo
shlb
jne
mov
sub
nop
sbb
cmp
sub
fimuls
enter
and
aas
inc
inc
nop
and
dec
pop
xor
loopne
filds
pop
pusha
sbb
dec
in
scas
ret
fimuls
jne
fisubrl
inc
mov
lahf
push
shrb
mov
xchg
pop
or
fildl
vmptrld
mov
pop
inc
cmp
mov
pop
data16
cltd
dec
fsubrp
mov
adc
inc
ljmp
mov
mov
xor
les
sub
ret
xchg
pusha
jle
jp
or
or
mov
mov
sub
or
or
repnz
dec
jg
test
cmpsb
scas
and
into
sahf
sub
loop
rcr
sbb
orb
cmp
sub
adc
and
fstl
or
jns
jmp
jecxz
mov
inc
cs
cli
rorl
fmuls
test
divb
fdivrs
or
dec
mov
mov
add
repz
icebp
arpl
and
dec
pop
movsb
pop
insb
cwtl
add
mov
mov
or
data16
mov
popf
test
mov
push
das
add
lea
fistpll
xor
mov
push
fnstcw
dec
out
stc
popf
orl
and
call
sub
repz
push
and
in
lods
pop
adc
movsl
xor
jbe
daa
cmp
push
icebp
loope
cmpsw
lret
popf
bound
shl
leave
fimull
push
push
pop
xlat
bound
nop
inc
mov
sbb
xchg
test
call
icebp
pop
inc
pop
mov
mov
jecxz
and
loopne
lret
pop
cmp
scas
out
mov
xchg
jbe
data16
mov
mov
outsl
cwtl
dec
out
mov
sub
mov
mov
push
xorb
jne
jo
or
in
mov
cmp
sarl
push
mov
outsl
cmp
data16
cmpl
addr16
sub
sub
mov
in
pop
call
testb
push
fs
inc
test
add
jns
pop
push
ja
mov
mov
test
jp
push
dec
pop
and
sub
inc
pop
adc
pop
mov
stos
dec
cltd
fsub
movsb
insl
jl
popa
inc
add
loop
into
aam
lock
xchg
lds
or
and
aas
mov
ds
jnp
push
hlt
xchg
loop
cwtl
jbe
sub
push
or
aad
cmpsl
or
lret
inc
xchg
enter
xor
lds
mov
repnz
sub
out
sahf
dec
mov
leave
mov
add
gs
bound
mov
jo
adcl
outsb
or
out
shll
pop
adc
aam
or
lret
ret
insl
lahf
and
pushf
sbb
cs
enter
xchg
add
pop
add
add
js
cmp
loop
sarb
lds
lahf
jp
aaa
movsl
sti
loop
out
pop
pop
call
push
mov
push
sbb
in
cmpsb
cld
mov
fwait
insb
aaa
xchg
adc
jmp
mov
sub
inc
mov
xchg
xlat
aam
fadds
aas
add
pop
adc
cwtl
ret
enter
ret
mov
xchg
lcall
idiv
add
int3
cli
lods
xor
les
in
mov
pop
fldl
cltd
fstp
or
insb
arpl
xor
push
cmc
pop
es
xchg
and
cmp
jl
fidivrs
jg
out
rcl
test
mov
ljmp
lret
arpl
mov
adc
ja
shrl
mov
mov
decb
fiadds
and
sub
mov
and
call
xor
pop
fstl
cmp
cmp
xchg
add
xchg
fcmovne
jmp
cmp
aaa
sbb
inc
test
call
cli
clc
or
leave
int
adc
bound
sub
lods
gs
imul
and
into
clc
std
pop
shl
or
pop
dec
mov
mov
fs
add
mov
popa
mov
ds
hlt
pop
lods
in
pop
sbb
test
stc
sbb
xchg
out
mov
or
jno
adc
notl
cmp
add
inc
clc
sbb
lds
jb
shr
hlt
idivb
popl
jnp
aad
jl
push
adc
iret
fisubl
and
pop
subl
jg
mov
mov
lcall
sahf
xor
mov
ficoml
and
aad
loop
and
in
loopne
jae
adc
rcr
mov
mov
aad
in
int
inc
mov
popf
movsb
addr16
sub
int3
int3
stos
shll
push
pop
pop
mov
roll
test
push
hlt
pusha
mov
mov
push
xchg
lea
mov
adc
inc
out
pop
testl
fcoml
cs
xchg
mov
int
inc
daa
insl
push
cmpsl
mull
and
imul
cs
cmpsl
and
sbb
lods
fcmove
aam
mov
cmc
lcall
sbb
in
jmp
mov
pop
xor
in
push
pop
dec
jnp
into
jne
pop
mov
xor
dec
jmp
sahf
test
aas
xchg
out
lea
push
pop
ljmp
out
lahf
in
adc
sbb
mov
push
pop
pop
adc
enter
andl
call
dec
adc
jbe
cmpsl
jnp
insl
mov
lea
cltd
cs
add
int3
pop
sbb
jne
lret
sbb
sarl
inc
mov
jp
cmp
xorb
jl
sbb
cmpsl
add
outsb
and
xor
popf
shlb
xchg
hlt
rorl
ret
sbb
bswap
popf
leave
adc
stc
divl
lahf
add
push
in
cmpsl
les
mov
xor
cmp
test
out
adc
add
xor
fimull
stos
insb
push
sub
sub
imull
push
xor
inc
sbb
jle
incb
out
cmpsb
lods
hlt
push
ds
repnz
mov
sub
iret
insl
push
mov
add
inc
cwtl
push
jle
inc
mov
popf
mov
mulb
aam
pop
mov
xchg
fsubrs
cmc
ds
push
in
inc
pushl
and
lret
jae
and
dec
or
or
push
or
cs
xchg
les
ss
mov
les
rorb
orl
dec
daa
jbe
xchg
test
out
xchg
cmp
mov
adc
test
out
mov
and
mov
andl
inc
mov
cltd
fiadds
xchg
das
movsl
jns
lea
mov
push
ljmp
int
dec
pushf
shrb
mov
sahf
mov
mov
in
repz
stos
popf
movsb
sub
ret
aad
sbb
inc
sbb
mov
lret
pop
dec
dec
dec
or
xlat
pop
cmp
cmp
fst
and
xchg
lock
cs
mov
test
gs
gs
add
fdivrl
or
pop
scas
add
push
add
or
sbbb
mov
sub
rolb
mov
inc
jnp
ds
push
mov
mov
scas
add
or
mov
mov
xchg
idivb
jne
fimull
push
inc
push
call
rcr
inc
or
add
adc
push
ret
lds
test
fwait
notb
pop
push
mov
stos
cmpsl
mov
cmp
int
das
loopne
sub
pusha
cmp
jns
jge
inc
gs
mov
inc
mov
jno
daa
push
cmp
add
xchg
mov
sub
popa
mov
lahf
repnz
pusha
inc
inc
mov
fsubrl
cwtl
aam
jbe
fiaddl
scas
rcrl
movsb
add
jl
xchg
cli
xor
jmp
fs
stos
dec
insb
popa
mov
ljmp
leave
pop
mov
scas
mov
in
push
pop
xor
aad
dec
adc
xchg
std
cmpsb
or
or
fistps
outsb
inc
xlat
xor
inc
pop
inc
xchg
cmc
and
bound
sahf
mov
sbb
adc
jbe
int3
subb
test
dec
xchg
lret
out
pop
lret
add
dec
mov
std
jmp
insb
mov
sbb
addl
fiaddl
sti
bound
pop
adc
les
mov
popf
jl
dec
and
or
jp
data16
ds
jns
xor
pop
mov
repnz
bound
lret
out
push
ds
xchg
pusha
out
nop
daa
push
inc
jbe
dec
push
ja
add
mov
push
push
pop
es
lds
popf
inc
scas
cwtl
imul
push
add
dec
mov
mov
shll
jecxz
ds
pop
mov
jecxz
cmpsb
cmc
inc
or
jg
cmp
xor
xor
cltd
outsb
jmp
or
rolb
xorb
mov
jg
insb
sbb
lret
cwtl
aad
mov
and
jle
mov
lds
sahf
cmp
pop
imul
test
loopne
and
insb
lock
enter
in
jo
jbe
movsl
push
arpl
out
stc
outsb
divl
push
popa
mov
sbb
pop
pop
movsb
sub
fs
pop
push
mov
test
loop
aaa
and
fisubs
pop
ffreep
test
cli
add
mov
xor
sbb
push
sahf
jne
scas
out
jne
inc
adc
push
nop
rolb
xchg
lea
leave
cwtl
ret
in
sub
mov
cmc
aaa
mov
jmp
jae
insl
add
pop
mov
lock
test
dec
lcall
outsb
popl
mov
jb
orl
xor
mov
popa
movups
or
lock
popa
movsb
push
pop
ss
inc
mov
jo
dec
lahf
fldenv
xor
popf
push
inc
ja
mov
add
popa
mov
cmp
mov
daa
pop
pop
lea
ficomps
sub
scas
pop
fiadds
dec
pop
cmp
mov
shrl
jno
and
pop
into
aaa
sub
pop
xor
in
or
jl
sub
sub
leave
xlat
jp
imul
xchg
and
ja
mov
inc
movsb
rcl
cmp
stos
jmp
insb
test
loope
dec
jmp
xor
jp
insl
enter
fisttpll
inc
adc
aaa
enter
mov
add
mov
pop
mov
adc
sti
jno
push
aas
les
das
sub
mov
or
pop
sbb
jmp
test
xor
ss
lods
es
test
mov
or
xor
push
xchg
subb
daa
sub
or
pop
jo
add
pop
inc
fsubrp
pop
aam
call
pop
dec
xorb
xchg
popl
pop
pop
popf
cli
bound
mov
xchg
ljmp
push
xor
mov
in
imul
test
icebp
cs
push
cwtl
psadbw
mov
push
test
ljmp
or
repz
ja
jg
loope
arpl
inc
cmp
out
sbbb
mov
push
sub
pop
pop
cli
jge
cmpsb
imul
stc
lret
ret
jle
icebp
jo
push
xorl
insb
sub
in
std
add
add
rorb
je
push
in
adc
testb
int3
xchg
dec
xchg
mov
sbb
into
xchg
imul
or
icebp
sbb
addb
xor
cmpsb
adc
sar
pop
dec
movsl
lea
addl
pusha
out
cli
or
out
enter
and
pop
and
loope
push
jp
adc
adc
fstpl
mov
dec
out
add
inc
sub
das
add
sub
jmp
sbb
pop
pop
mov
insb
scas
btr
lods
cltd
je
mov
or
mov
in
rcrb
popa
ds
bnd
imulb
in
insb
sbb
and
cmpsb
in
into
push
or
enter
into
jge
jmp
lock
ss
xor
mov
sub
sub
cmp
cmp
jne
pusha
ret
mov
mov
mov
loopne
shlb
fidivrl
xor
cld
stos
push
xchg
jge
lret
push
cmp
pop
or
mov
and
mov
loop
rcr
add
mov
loop
rcrl
mov
movsb
adc
ret
cmp
mov
test
dec
push
cmp
fdivr
sub
add
lea
std
xor
push
adc
shll
sarl
dec
push
sbb
xor
nop
push
and
sarb
incl
jmp
jmp
mov
sub
mov
ret
and
xor
insb
cli
subb
or
and
lods
or
sbb
pop
test
cmp
mov
and
nop
xchg
int
push
jno
fs
js
movl
inc
test
mov
push
jb
adc
cmpb
xor
je
test
sub
push
cmp
and
and
jo
inc
popl
lea
add
int
pop
in
xchg
jo
xchg
cmp
mov
pop
shl
mov
push
out
push
mov
sub
mov
or
or
push
and
sbb
scas
add
insl
jnp
nop
jg
adc
movsl
inc
imul
mov
push
or
out
xchg
xor
mov
push
jmp
cwtl
dec
jge
daa
mov
pop
mov
into
into
sub
mov
mov
sbb
sbb
sub
add
inc
pop
fs
xchg
or
sub
cmpsl
sbb
dec
test
adc
or
and
cmp
and
stc
mov
js
sub
mov
adc
test
out
jp
aam
jg
adc
dec
adc
jbe
and
popf
dec
mov
xchg
fwait
arpl
stos
test
add
add
fisttpll
mov
shlb
cmpsb
je
rorl
jb
jecxz
aas
ficompl
jle
ds
call
cmpsb
mov
push
push
lock
scas
ficomps
mov
mov
xchg
ret
cmp
les
fsubrl
loopne
out
icebp
shlb
pop
movb
addb
adc
xor
js
xchg
ds
repz
aas
fs
push
hlt
cmpsl
or
inc
notl
lods
mov
lahf
lods
outsl
xor
jb
xchg
pop
adc
cmpsl
mov
sbb
xor
or
push
ret
push
aad
sub
ficompl
fstpl
pop
or
ret
dec
mov
je
cld
mov
adc
and
lock
in
aaa
xor
lret
mov
jg
ja
push
and
iret
ljmp
mov
test
mov
dec
and
lock
and
xor
cmpsb
mov
xor
add
xor
fistps
xlat
push
out
cmpsb
xchg
adc
leave
xchg
inc
sbb
jmp
cmp
jae
movsb
inc
cmpsl
mov
xor
in
dec
or
stos
push
frstor
xor
inc
fstpt
mov
arpl
mov
xchg
shl
in
shll
pop
pop
jle
xor
adc
std
cmp
movsl
arpl
adc
lret
jne
adc
lock
movsl
mov
sub
mov
sbb
pop
push
dec
mov
mov
cmp
repz
ret
cli
push
push
adc
das
divl
inc
mov
add
insl
ja
mov
inc
push
shlb
push
cmp
cld
fistl
fsts
jb
cwtl
repz
dec
ss
or
lcall
xchg
fdivrs
fdivl
imul
jle
and
inc
js
lcall
dec
lock
or
lahf
icebp
mov
jns
popf
xchg
jbe
jl
daa
jae
repz
adc
mov
or
push
leave
les
cmp
push
scas
subl
sbb
movsl
xchg
mov
mov
mov
mov
sbb
fwait
test
push
fsubr
enter
clc
sub
sahf
scas
lds
jne
sub
pop
stos
cmp
add
in
cmc
test
jl
dec
stos
cmp
xchg
fldt
sbb
test
jae
movsb
je
jg
loope
jp
add
gs
jecxz
xor
jg
xor
jb
lahf
mov
push
xchg
adc
cmp
in
add
addl
and
xchg
mov
loop
idivl
mov
sub
or
dec
fmul
adc
fcoml
imul
mov
nop
sahf
pop
add
xchg
test
dec
push
loopne
out
pop
popa
mov
jns
enter
sub
std
out
add
push
movsl
jne
add
and
and
aaa
mov
imul
lods
stos
mov
mov
cmpsl
in
das
cmp
sub
icebp
aas
jo
pop
adc
adc
cli
sub
scas
mov
rcl
jno
test
push
mov
inc
daa
xor
shrl
jns
dec
push
mov
mov
adc
imul
prefetch
sbb
rcll
mov
push
enter
dec
in
into
mov
in
scas
es
or
inc
fidivrs
pop
mov
lods
and
sti
push
imul
push
mov
add
sub
jbe
sti
ljmp
push
movsb
dec
ret
mov
in
inc
jbe
xchg
xchg
das
pop
stc
scas
test
aad
inc
aas
in
add
mov
jnp
cmp
xor
loopne
dec
fwait
xchg
push
mov
push
ljmp
mov
mov
xchg
rolb
out
xor
mov
xchg
push
adc
into
in
fcomps
imull
pop
out
insb
fimuls
xor
add
mov
stc
leave
mov
mov
fldl
fwait
sahf
xchg
pop
bound
mov
or
dec
dec
mov
or
outsb
repnz
inc
popl
cmp
adc
lret
rolb
js
mov
adc
or
test
cmp
jmp
adc
pop
int
lock
or
mov
daa
scas
popf
mov
fisubrl
das
add
mov
jp
pop
popf
leave
imul
ja
fbstp
clc
jae
xchg
inc
push
call
adcb
ja
out
in
sbb
lds
jmp
and
xchg
push
push
or
push
inc
fisubrs
scas
mov
mov
add
mov
insb
cltd
adc
jo
sbbl
pop
push
adc
inc
bound
add
fcomip
call
sub
fimull
popa
lea
ret
xor
mov
ss
xchg
xor
ficoms
mov
push
sub
cmp
lahf
out
dec
out
cwtl
add
sbb
xor
push
lcall
pop
xor
adc
out
or
pushf
mov
jle
insl
cmp
jbe
xchg
sbb
js
dec
xchg
cwtl
mov
leave
fidivs
add
clc
pusha
jbe
sub
sub
xlat
push
arpl
mulb
imul
loop
daa
mov
outsb
call
mov
and
sbb
and
insl
mov
pop
xbegin
cmp
adc
pop
adc
mov
xor
inc
imul
mov
jno
cmp
or
aad
push
jae
imul
inc
dec
push
pop
add
sub
ror
lret
fdivrl
sub
cwtl
sub
dec
pop
mov
into
push
pop
push
pop
mov
cmpsb
cmpsb
fucom
cmp
dec
je
sbb
mov
pop
jo
icebp
cmp
pop
repz
push
ljmp
inc
adc
jmp
jbe
mov
orb
dec
mov
cmp
test
iret
jne
mov
mov
push
jl
xchg
xchg
scas
sub
dec
ficompl
xchg
nop
pushw
xchg
jle
push
pop
mov
mov
sbb
mulb
or
mov
loop
je
push
test
imull
into
dec
adc
repz
aas
mov
push
test
sti
xchg
sbb
insb
sti
jle
xor
pop
sbb
cmc
shl
pop
xchg
push
aaa
inc
lds
sti
xchg
add
dec
inc
sti
add
add
nop
lods
push
mov
xor
cs
jae
lods
cmpsl
xchg
xchg
jl
cmp
mov
inc
sub
dec
aas
js
and
pop
xlat
daa
ss
popf
mov
faddl
fstl
jbe
pusha
gs
mov
lret
leave
jae
jo
lea
xchg
bound
fwait
clc
jp
mov
and
sub
dec
push
lret
adc
pop
test
int
lods
movsb
jbe
jecxz
lods
and
pop
push
stos
aas
jmp
jae
int3
or
push
mov
fcmovb
or
push
xor
mov
insl
fs
ljmp
xchg
mov
fdivr
push
push
xchg
sub
in
or
ret
test
sbb
addr16
sub
or
xchg
pop
cld
ds
push
push
push
stos
call
arpl
mov
fsincos
ja
mov
outsl
ret
lods
lret
sub
loope
and
rolb
sbb
sbb
jg
mov
dec
popa
sub
mov
dec
icebp
dec
in
jle
cmp
fstps
xorb
cmc
es
push
jl
sbb
roll
in
testl
adc
lea
sub
jno
cmp
lds
insw
iret
jb
sti
in
sub
mov
int3
or
pop
popa
mov
cmc
jp
sbb
imul
xor
xor
das
mov
repnz
mov
inc
pop
inc
push
pop
cwtl
pop
fwait
inc
testb
fstpt
or
mov
jecxz
add
xchg
mov
out
outsb
insb
xchg
mov
popa
test
lods
adc
push
fisubrl
negl
sysenter
negl
push
mov
fs
std
or
push
xor
repnz
mov
movsl
mov
and
cltd
push
sbb
arpl
cmp
jp
mov
xor
inc
mov
mov
push
rolb
dec
lret
orl
and
neg
cmp
push
das
movsl
inc
add
xchg
fs
sbb
ret
pop
icebp
in
jle
dec
test
adc
sub
shll
sbb
cs
dec
cmp
sarb
inc
adc
mov
push
popf
xchg
dec
fdivrl
bound
insb
lods
cs
cmp
clc
pop
popf
sbbb
jne
out
sbbl
jg
movsb
sbb
dec
aas
cmp
rcr
mov
mov
bound
jae
std
adc
fbstp
mov
repnz
cwtl
push
lret
aaa
icebp
lea
lret
movsl
lea
push
negb
mov
pop
rcl
stc
into
cmpsl
in
xchg
hlt
mov
mov
into
rol
shrl
adc
cmpb
insb
pop
int
xor
leave
jle
int
jecxz
popa
sub
sbb
sub
push
jns
outsl
xbegin
xor
loope
xor
fstpt
fisubs
mov
test
nop
push
cmp
sbb
cmp
push
pop
xor
xor
test
xor
imul
mov
xlat
sub
stc
sbb
pop
mov
sti
pushw
sarb
xchg
push
xor
clc
fimuls
add
loope
jl
cmpsb
bswap
mov
xor
cmpsl
ficoms
jae
incb
add
aaa
cmp
jecxz
pop
add
popf
mov
fwait
jp
test
sbbb
aas
shll
roll
jbe
movsb
mov
arpl
or
ljmp
cmp
add
out
inc
add
shlb
xor
ret
aad
inc
jb
lods
sbb
andl
lock
in
xchg
xchg
xchg
xchg
jns
loop
dec
sti
mov
roll
stos
int
xchg
jle
pop
sbb
cmp
stos
and
push
fldcw
xchg
push
inc
push
sub
icebp
ret
adc
pop
dec
jbe
mov
test
mov
push
iret
xchg
and
ret
xorl
mov
adc
incl
lds
mov
cmp
cmp
xchg
mov
jbe
insl
shrb
mov
pop
out
testb
addr16
loope
and
mov
mov
xor
es
loop
xchg
dec
fldcw
kmovb
dec
outsl
shl
loopne
int
clc
js
push
push
cs
fwait
xchg
inc
cmp
adc
jns
push
lea
push
popf
shrl
mov
call
sbb
aaa
stos
ret
cltd
std
shrb
mov
inc
cmp
jp
push
ret
mov
std
bnd
dec
push
push
sub
pop
testb
orb
pop
adc
outsb
add
pop
roll
aad
ja
ljmp
mov
pop
outsl
faddl
jl
fsubrp
mov
pop
das
lret
mov
test
outsb
jbe
or
shr
and
in
push
into
outsl
rorl
add
jge
mov
dec
negl
test
jmp
loop
js
nop
inc
fwait
inc
sahf
addl
fwait
test
into
aas
pusha
push
popf
sbb
ja
mov
jecxz
mov
dec
push
loopne
mov
insl
and
out
and
pop
push
sub
mov
push
ret
jg
xchg
add
cmp
mov
inc
fstpt
mov
push
shlb
mov
push
mov
clc
cs
lahf
ret
clc
mov
sub
fmul
pop
testl
xor
push
push
push
mov
jge
jecxz
jmp
pusha
jo
lods
jecxz
and
xor
jmp
xchg
sbb
les
arpl
mov
push
jae
orl
out
or
inc
imul
cmp
int
cmp
andl
adc
dec
xor
repz
stc
cs
push
outsl
pop
inc
shlb
mov
push
aam
icebp
or
mov
push
jnp
sahf
push
cs
dec
aas
testl
pop
stos
movsl
test
pop
in
sbb
icebp
popf
or
xchg
imul
mov
xchg
ljmp
scas
jecxz
dec
xchg
mov
dec
pushf
jnp
cld
rcrb
leave
aad
pop
jp
loop
lcall
insl
or
cmp
pushf
fisubl
inc
inc
or
push
pop
ret
cmp
movsb
in
push
sub
push
call
jnp
sbb
and
push
aam
sbb
popf
cli
push
mov
test
lods
mov
loope
jne
xchg
xorb
sub
les
push
pop
dec
imul
xchg
ja
imul
arpl
jg
jl
stos
loopne
out
fcmovbe
pop
pop
clc
mov
cmp
xchg
aam
imul
mov
mov
mov
pop
fldl
ljmp
ja
movsl
lock
jl
imul
dec
rcll
icebp
xchg
stos
fs
cmc
pop
push
adc
sub
sbb
fidivl
adc
ret
dec
adc
cld
lds
psubsw
aas
leave
mov
aas
clc
outsl
push
mov
icebp
mov
and
jge
inc
sahf
push
aad
in
mov
jp
addl
pusha
test
sbb
mov
hlt
in
mov
shlb
jp
mov
sub
arpl
push
scas
xchg
repnz
adc
ret
xlat
jno
sarl
inc
fidivs
inc
jbe
mov
insb
mov
popa
push
mov
outsl
fildll
jne
push
sbb
aaa
jae
cs
jns
cs
scas
mov
push
out
mov
add
sub
or
test
adc
repnz
or
xchg
mov
out
rorb
nop
int
jle
adc
cmp
cmp
xchg
aad
push
adc
lcall
cmp
or
imul
inc
xlat
jp
js
aam
mull
ds
dec
out
bound
jno
mov
push
pcmpgtd
pop
pop
xor
dec
mov
xchg
xchg
aad
sub
movsb
cmp
jo
sbb
iret
jp
mov
aaa
jle
imul
pop
insl
insl
dec
mov
mov
jg
inc
sbb
arpl
iret
lods
rcrl
nop
lds
rolb
iret
movsb
daa
lock
mov
in
data16
pop
adc
lds
call
daa
sarb
push
cmpsl
mov
sar
mov
cltd
inc
movsl
add
js
xor
cmc
js
push
fists
xchg
push
push
pop
pop
in
out
adc
loop
shll
mov
sti
adc
push
leave
sbb
ret
cs
mov
push
mov
in
bound
push
dec
jnp
inc
sub
push
inc
rclb
and
push
repz
jle
xor
cltd
outsl
mov
mov
cld
cli
cmp
adc
inc
out
andl
adc
mov
scas
inc
test
lahf
sbb
int3
jns
push
test
pusha
fcoml
mov
xchg
sbb
in
push
bound
xor
jb
cmc
push
pop
cmp
mov
sbb
inc
fmull
ja
cmp
xor
mov
adc
mov
js
jp
jo
fistpll
insl
aas
xor
dec
rclb
not
dec
ds
sbbb
mov
push
addb
mov
xchg
lods
out
lods
das
mov
cmpsl
orl
push
aam
ljmp
add
jns
add
ret
dec
cmp
dec
cmp
popf
shr
aam
scas
sbb
push
adc
jge
in
leave
and
pop
popa
rolb
or
aas
cld
pusha
insb
push
adc
jae
sahf
imul
iret
leave
int3
fbstp
lahf
mov
stos
pop
into
stc
inc
sbb
pop
inc
push
dec
mov
out
jmp
dec
xor
loop
cmp
cmpsl
repnz
mov
pusha
int
mov
out
or
xchg
and
shlb
mov
xchg
cmp
cmp
pusha
rcrb
xorb
aam
ret
cmp
enter
jg
jns
test
fmuls
leave
fnstsw
fsub
cld
je
push
jp
mov
mov
jns
or
lcall
pop
mov
push
test
push
sub
rcrl
mov
pop
les
xchg
iret
cmpsb
roll
jne
push
ficomps
xor
inc
and
xchg
xor
jmp
mov
jns
js
dec
filds
inc
xchg
inc
add
and
hlt
cmp
inc
ljmp
mov
push
stc
sbb
shll
jg
pop
mov
dec
xchg
cmc
je
sbb
stc
jp
push
jo
neg
xchg
aad
test
push
mov
xchg
sbb
sbb
sarl
icebp
lret
mov
add
outsl
inc
adc
add
fcmovne
sub
jno
gs
inc
pop
leave
adc
sbb
in
sub
int
push
or
lret
push
fcompl
pop
add
test
jge
ja
adc
jns
stc
pusha
dec
sbb
dec
fcomps
cmc
jns
fwait
lods
push
lret
sbb
aam
hlt
clc
sbb
mov
push
and
gs
jp
sbb
xor
es
mov
shll
pop
pop
sub
cmp
xchg
dec
fsubrp
inc
movsb
cmpsb
jne
ret
xchg
aam
cmp
out
out
movsl
inc
push
pmaddwd
mov
stos
rcrl
mov
jae
xchg
dec
in
mov
xchg
popf
std
dec
arpl
dec
insl
outsl
fisubrs
mov
movsl
idivl
jb
stos
pop
bound
inc
push
push
test
lret
stos
xchg
sbb
cli
rorl
inc
repz
popa
mov
dec
gs
mov
cmp
inc
adc
mov
pop
mov
or
adc
and
or
shl
fldenv
std
sub
ss
mov
es
imul
popf
mov
mov
arpl
adc
mov
mov
mov
mov
out
aad
xor
stos
cmp
xor
arpl
mov
mov
vpsubusb
pop
xchg
cmp
mov
gs
es
daa
push
daa
or
and
inc
sub
shl
test
imul
fsubl
and
mov
or
std
enter
fwait
adc
cld
jae
mov
and
dec
add
adcb
ljmp
loopne
repnz
add
cmpsb
lds
or
ds
stos
cmp
jmp
sub
jne
or
stc
fcmove
call
xchg
push
pop
add
loop
inc
mov
fldenv
out
sahf
outsl
push
xor
mov
inc
push
pop
insb
and
lahf
clc
cltd
pop
add
jno
xchg
xor
aam
pop
mov
xchg
dec
cmpsb
jmp
push
stos
jae
int
cwtl
push
add
mov
push
ss
cmp
inc
rcll
push
jbe
insb
int3
pop
jae
mov
sub
inc
jnp
rcrl
lea
aaa
test
push
enter
mov
dec
jno
jbe
mov
imul
in
in
add
aad
repz
xchg
push
pop
sbb
dec
notb
jo
fdivrl
or
addr16
pushf
cmp
loop,pt
inc
pop
sub
push
dec
outsl
and
cmc
sbb
fs
inc
mov
rcl
dec
aad
push
xor
lods
and
mov
push
sbb
push
cmp
inc
out
cmp
popf
into
pop
jbe
cmc
mov
out
cmp
sti
mov
mov
xchg
outsl
sub
ret
inc
add
test
stc
ljmp
fnstcw
inc
xor
sub
mov
movsl
inc
in
in
arpl
sbbb
inc
icebp
cltd
jbe
jg
sbb
sub
xchg
cmpsl
or
mov
scas
cld
loop
and
push
out
lock
lret
sbb
lock
and
adc
arpl
stc
mov
jns
test
test
or
jmp
mov
ret
ret
jo
jmp
sbb
mov
sbb
inc
sbb
mov
int3
ret
cmp
dec
dec
inc
push
scas
int
lahf
xchg
hlt
mov
js
jp
mov
inc
cld
ljmp
lahf
fisubs
xchg
pop
inc
or
inc
mov
ret
imul
int
mov
cwtl
jmp
add
stc
jno
mov
sub
mov
jbe
mov
cmp
je
sub
inc
xor
cld
mov
outsl
mov
sub
jecxz
movsb
sbb
call
or
mov
jbe
cmpb
insl
insl
cmp
xchg
push
xchg
xchg
imull
loopne
and
sub
mov
push
decl
push
or
fsubrl
xor
xchg
hlt
scas
test
adc
sub
fistl
popf
inc
test
or
sbb
inc
fldt
push
loope
adc
aaa
jge
jg
das
mov
loop
mov
jle
mov
mov
movsl
add
stos
xchg
or
pop
cld
popa
jns
xor
dec
ljmp
adc
ljmp
jns
cld
mov
jmp
pushf
cltd
test
xchg
push
mov
popf
test
jns
negl
filds
push
mov
sahf
mov
scas
sbb
int3
movb
ja
mov
lret
movsl
mov
lods
pop
mov
dec
movl
sbb
dec
inc
cmp
mov
xchg
inc
dec
xchg
sbb
sbb
imul
adc
addr16
int
stos
mov
cmp
mov
fstl
fsub
sub
fdivrl
clc
lcall
mov
sarl
cmp
mov
and
or
sub
lret
add
pop
rolb
rolb
xchg
fnsave
mov
call
xchg
mov
scas
aam
std
sbb
pop
lahf
mov
leave
cltd
mov
mov
pop
shl
push
push
and
sub
push
lock
cmp
es
outsl
stos
das
mov
loopne
es
pusha
in
dec
pop
mov
mov
cltd
subl
movsl
popf
jg
imul
xor
daa
adc
testb
pop
out
fildl
cwtl
ss
dec
iret
jg
ret
mov
jmp
pop
adc
and
mul
and
xchg
test
rcl
incb
push
pop
jae
or
or
inc
adc
dec
stc
ret
xor
adc
cli
cmp
push
cmp
push
push
adc
jp
aam
sbb
popa
in
addr16
push
fs
push
adc
mov
cmp
lods
sbb
mov
xchg
sahf
std
or
nop
pop
or
mov
ss
rclb
jl
test
aad
jae
and
jmp
mov
icebp
mov
push
gs
sub
cmp
mov
rcrl
sahf
push
mov
cmp
or
cmp
jns
loope
clc
dec
xlat
push
out
xchg
lcall
lcall
pop
loop
out
push
jl
nop
push
mov
int3
dec
daa
orl
int
or
sub
mov
nop
inc
popa
lcall
les
inc
movsl
mov
or
inc
in
lock
mov
sbb
add
mov
mov
adc
sub
fdivrl
cli
push
sti
enter
cmp
xchg
incl
out
mov
inc
gs
xor
pop
ret
inc
stc
pop
cmpsl
jns
popf
dec
js
jns
sub
push
and
popl
adc
jns
call
mov
in
jb
stc
mov
cs
dec
scas
push
mov
adc
movsl
cmp
add
rcrl
fcoms
arpl
inc
adc
push
das
mov
xchg
xor
xor
pushf
mov
addr16
cli
pop
dec
jne
or
outsl
xor
xchg
ret
adc
add
cmp
push
dec
mov
xor
inc
pop
or
das
sub
mov
push
lcall
push
mov
push
div
das
adc
sbb
ret
mov
jmp
cs
dec
pop
das
das
cmovae
sarb
aas
and
lock
andps
popf
xchg
cmp
mov
push
sbb
pop
ret
je
popa
mov
inc
and
and
mov
push
fcomps
sub
aad
bound
sub
adc
mov
sbb
stc
mov
cwtl
fstl
mov
nop
jmp
xor
mov
push
pushf
mov
or
loop
inc
xchg
push
out
frstor
sub
xor
bound
jmp
sub
test
mov
js
mov
adc
movsb
xor
das
movsb
pop
sbb
mov
iret
sbb
dec
add
imul
movsl
loope
jno
sub
fcmovne
sbb
sub
fisttpl
xor
stos
inc
in
cli
mov
outsl
insb
call
add
addl
shrb
cwtl
pusha
movsw
push
adc
mov
push
aaa
mov
inc
fcompl
int
or
nop
das
xor
add
loopne
lret
xor
lahf
pop
inc
cmp
cwtl
movsb
push
gs
testl
fsub
je
outsb
pop
mov
and
mov
inc
repz
push
daa
adc
movsl
adc
loopne
xor
fldcw
rcr
sbb
xchg
mov
out
mov
jbe
subl
test
add
jl
sub
xchg
jno
xor
inc
inc
mov
sub
xlat
lods
push
cmp
xor
dec
mov
int3
aas
dec
xor
xor
loope
dec
xchg
jg
cmpsb
push
xchg
nop
push
xchg
cltd
test
fistpl
jp
sahf
and
sti
add
jbe
cs
jne
cwtl
loopne
pusha
jl
add
cld
adc
mov
cmp
stos
mulb
cmpsb
lds
jl
cmp
lret
mov
scas
call
movb
mov
sub
push
int3
icebp
mov
dec
push
and
lea
add
dec
mov
sbb
cmp
pop
cltd
pop
lcall
sbb
pop
or
pop
fwait
and
adcl
lcall
in
into
int3
lahf
sub
push
pop
clc
into
xchg
hlt
sub
shlb
sti
xorb
fsubrl
push
and
ss
push
cmpsl
nop
out
sub
jae
inc
loopne
jle
mov
fadds
jmp
dec
dec
sbb
jl
aam
cltd
aam
rcll
sahf
and
pop
cwtl
xor
mulb
or
inc
add
shrb
dec
jno
add
fnstenv
cli
mov
stc
xchg
sub
push
ret
rcl
inc
orl
xor
mov
lea
adc
sarb
xchg
lds
enter
repz
adc
test
fucom
stos
dec
lret
jnp
andl
mov
mov
sub
sub
jg
sub
lret
inc
cmp
call
and
mov
test
xchg
je
data16
into
push
adc
add
outsl
push
int3
lahf
push
or
pop
leave
ljmp
cli
negb
xchg
hlt
pop
sbb
lcall
push
lret
jge
rcl
mov
cmp
fldt
lret
leave
sahf
and
mov
cltd
add
lret
xchg
mov
sub
scas
lods
sbb
xor
ljmp
mov
in
rolb
pushf
pop
rol
add
gs
jmp
mov
cs
testb
inc
out
fimull
cmpsb
cwtl
pop
xchg
jo
call
push
mov
addr16
insl
adc
cmpsl
jno
mov
into
add
or
push
push
jmp
cmp
xor
ljmp
icebp
movsb
jle
loope
sub
jg
push
fistl
mov
xchg
loop
hlt
aaa
adc
and
jecxz
jle
push
neg
push
xor
rcll
mov
inc
and
dec
pop
hlt
ds
sub
xchg
lea
dec
inc
mov
dec
inc
pop
loop
fisttpl
sub
add
mov
mov
pop
cmp
or
aaa
jp
adc
je
adc
int3
cmp
stos
add
cltd
push
sahf
mov
xchg
in
sbb
mov
divl
mov
xchg
mov
mov
push
lock
je
stos
pop
inc
fsubrl
aad
in
add
push
cmpb
arpl
sub
cmp
popa
pop
xor
push
mov
xlat
sbb
adc
flds
std
les
push
stos
stos
mov
or
pop
dec
fistpl
or
cs
subb
push
sbb
jo
push
jge
inc
adc
mov
mov
cmp
mov
pop
mov
pop
mov
ljmp
push
daa
inc
stc
and
fidivs
fwait
ljmp
ds
gs
mov
fisttps
addr16
cmpsb
push
gs
sub
adc
iret
movsl
ret
and
dec
shlb
mov
pop
or
inc
mov
xchg
xchg
aas
lods
lods
fildll
mov
movsl
jp
jge
push
ret
mul
int
cmp
movsb
sub
mov
mov
pop
std
push
insb
insb
add
movsb
sbb
fstpt
scas
sti
push
sub
jge
xchg
cs
inc
into
hlt
jecxz
jae
shll
add
cwtl
cmp
aaa
loop
sbb
push
or
or
dec
aam
daa
pminsw
push
jle
and
mov
das
in
sahf
fsubl
push
es
test
sbb
cmp
jecxz
jle
fldt
flds
cwtl
aaa
mov
imul
push
push
pop
jo
fstps
jp
jnp
mov
gs
push
mov
or
test
je
shr
adc
aas
lahf
xor
sub
xchg
cmpsl
stos
movsl
pop
int3
or
xchg
mov
inc
sbb
and
xchg
xor
inc
int
jmp
popa
fisubrl
xchg
add
or
mov
ficomps
push
jecxz
jmp
mov
mov
fnstsw
add
cli
mov
call
sub
sub
cli
test
out
cmc
cwtl
stos
xchg
mov
ss
rcrb
lret
xor
and
outsb
in
dec
shrl
inc
adc
icebp
push
inc
adc
pop
aaa
xor
call
mov
and
outsb
push
push
sti
pop
inc
or
sbb
sub
std
mov
cmp
in
fsts
daa
movsl
sar
and
cmp
mov
mov
pop
rorb
out
rcl
dec
jbe
mov
clc
mov
or
sbb
dec
xchg
movsb
pop
cmpsl
ret
enter
sbb
daa
jnp
lea
mov
nop
cmpxchg
dec
cmp
mov
adc
or
lods
sti
jnp
fwait
shrl
dec
sub
mov
lods
cmp
cmp
insl
mov
loopne
int3
inc
pop
jl
ficompl
sti
lret
xchg
popa
stc
test
pop
adc
hlt
mov
mov
push
popa
rorl
stc
cmc
sub
mov
dec
dec
pop
xchg
pop
cmpb
adc
xor
out
ret
xchg
mov
out
dec
adc
pushf
js
insl
lcall
imul
lea
ficompl
xchg
rolb
icebp
pop
cmp
jge
xor
mov
dec
mov
sub
push
cmp
sti
testb
test
push
out
xchg
ficompl
into
push
into
sbb
out
loop
xchg
movsl
cli
int
mov
dec
loop
push
mov
mov
gs
mov
dec
inc
adc
xchg
pop
adc
cmpsl
out
mov
inc
fmull
je
in
jle
shll
shlb
fmulp
push
ror
int3
loopne
xchg
iret
lcall
push
scas
or
pushw
jns
dec
pop
adc
lods
and
cmp
daa
aad
inc
es
push
imul
out
popf
leave
fistpll
fs
jne
into
icebp
test
sub
or
sub
jg
cmpsl
cli
push
addr16
mov
add
jl
sahf
add
psraw
mulb
push
xchg
cmpsl
loopnew
add
in
mov
add
enter
out
cwtl
add
scas
cmp
cltd
fsubrl
out
sbb
inc
pushf
rolb
cmp
mov
test
jno,pn
test
cmp
imul
sub
adc
pop
nop
xchg
stc
dec
inc
fidivrl
dec
mov
jbe
xchg
movsb
lret
out
cltd
mov
test
arpl
pop
mov
pop
pop
push
and
cmp
pop
pop
int
stos
xor
pop
out
bound
and
outsl
add
pop
fsubs
jg
mov
pop
aas
cld
sti
mov
xchg
out
shr
xor
sub
xlat
das
cli
and
in
ret
movntq
xlat
cmp
popf
rorb
arpl
mov
jge
outsl
push
dec
sbb
cmp
in
mov
and
hlt
out
std
ficoms
cmp
mov
xor
cmp
or
add
ret
stos
hlt
ja
xor
fsubs
aas
test
lods
push
or
push
pushf
ds
fstps
ficoml
dec
cs
pushf
lret
cmp
xchg
inc
imul
xor
out
sub
mov
dec
push
lahf
xchg
in
cmp
lret
scas
sub
arpl
dec
pop
push
sahf
adc
xor
scas
cmp
and
push
pop
decl
test
mov
pop
mov
fnstcw
psrlw
jge
mov
je
rolb
dec
cltd
iret
xchg
dec
cmc
cmp
in
insl
pop
insl
stos
clc
mov
scas
fwait
add
test
or
pop
ljmp
xchg
test
jge
loop
test
mov
mov
xchg
sub
jle
daa
ds
hlt
stos
js
adc
mov
mov
or
pop
hlt
lods
and
imul
mov
iret
jo
fsubrs
pop
dec
scas
push
xor
aam
mov
jl
pop
loopne
aaa
ret
inc
sbb
jl
jae
fwait
cmpsb
xchg
xlat
outsb
lods
into
int
lods
cmp
mov
ljmp
sbb
cmc
mov
pusha
xchg
mov
cmpsb
inc
outsl
inc
pop
clc
movl
icebp
test
rcrb
fiadds
push
mov
xchg
negb
out
pop
push
mov
mov
push
pop
insb
leave
mov
push
lods
xchg
xor
bound
sub
inc
mov
cmp
test
push
cmpsb
mov
ror
xor
inc
loope
out
and
sti
inc
or
not
stc
lods
scas
sub
mov
mov
popf
and
push
ficoml
sub
addr16
sbb
idivb
jb
jne
sub
jae
movsb
sub
jmp
inc
sub
movsb
add
inc
lods
je
mov
daa
and
jae
lcall
loope
ret
sti
xchg
cld
xorl
mov
leave
sbb
dec
xchg
shl
sub
jle
dec
jo
dec
clc
push
jo
stos
and
mov
inc
adc
les
stc
mov
pop
mov
mov
adc
mov
cmp
pop
icebp
mov
inc
cmp
jl
xor
sub
xchg
sbb
icebp
orl
daa
sub
test
pop
test
js
fndisi(8087
mov
pop
xchg
in
jne
pop
pushf
daa
adc
lea
icebp
enter
jb
movsl
mov
push
je
pop
cmc
stc
mov
xor
movsl
inc
out
sub
push
popf
push
lea
loope
push
mov
xchg
xchg
xorb
pop
aas
test
pushf
into
add
xchg
cmp
lds
fnsave
inc
or
inc
loopne
stc
das
xor
cli
std
adc
or
pop
ret
sbb
inc
sbb
out
cli
push
in
inc
mov
clc
ud0
idivb
sub
push
test
cmp
add
or
dec
sbb
pop
lods
ret
xchg
inc
add
mov
sbb
add
xor
insb
add
adc
aam
cmp
rorb
jne
daa
outsl
rcll
dec
or
xchg
out
rorl
push
pop
xchg
lds
ljmp
cmp
mov
sub
stos
mov
pop
mov
inc
sbb
sub
xor
mov
xchg
cltd
or
rep
mov
iret
fistps
inc
insb
pop
mov
pop
fwait
ljmp
xor
xor
rclb
inc
jge
and
in
out
daa
dec
clc
lcall
ljmp
xchg
push
jmp
inc
cmp
imul
mov
cs
in
lahf
std
mov
push
cltd
fwait
lcall
xchg
cmp
sub
sbb
mov
mov
mov
push
shrb
jmp
add
or
andb
jle
fistl
out
fists
andb
inc
xchg
js
and
dec
add
dec
fbld
test
cmp
xchg
jbe
pop
add
dec
adc
sbbb
dec
incl
aas
xor
and
std
jns
cld
lahf
inc
adc
mov
adc
sbb
ds
mov
rorb
movsb
dec
xlat
pushl
pop
out
fs
jge
jge
pop
inc
inc
das
push
jge
mov
and
sti
loope
jmp
push
repz
arpl
fldenv
fisttps
jns
and
sbb
push
stos
jle
rorl
pusha
dec
loope
out
lods
enter
cmp
xchg
int3
inc
cmp
jg
jmp
enter
out
jbe
test
mov
xor
movsb
imul
lcall
cmp
mov
push
mov
xor
fwait
inc
std
adc
sahf
dec
or
and
xchg
pop
scas
call
push
pop
scas
int
clc
jne
pop
add
in
mov
jbe
rcrl
jno
cwtl
jo
lahf
cmp
push
outsl
xor
jge
addr16
movsb
mov
cld
xor
stos
inc
cmpsl
sub
mov
push
xor
adc
rolb
mov
jl
sbb
rcrl
sar
jnp
es
inc
jl
notb
jp
pop
movsl
mov
push
in
mov
push
mov
sub
repnz
sbb
cmp
enter
sub
pop
dec
push
aaa
inc
add
fldt
pop
ds
ficoml
sahf
mulb
jg
fdivl
jnp
xchg
sahf
mov
movsb
inc
jecxz
inc
sub
outsl
sub
xchg
xor
mov
inc
jmp
mov
jno
mov
jl
add
nop
mov
xorl
and
adc
mov
inc
xlat
bound
mov
mov
inc
or
adc
mov
cmpsl
popa
push
in
mov
das
or
aam
sub
adc
jge
or
in
xchg
cmpl
test
sbb
mov
clc
lret
jne
push
mov
sbb
arpl
lds
sub
jo
sub
loope
stc
xor
pop
mulb
inc
jbe
syscall
clc
ret
sbb
add
cltd
subb
jmp
jo
cmp
cmp
xor
stos
adcl
dec
cmp
imul
cwtl
icebp
mull
mov
adc
inc
lock
push
mov
gs
decb
jp
aas
loopne
jle
cli
add
imul
lds
dec
mov
sbb
mov
mov
popa
push
mov
out
call
push
inc
mov
ds
cmp
shll
dec
and
orb
rcrb
rorb
push
lahf
dec
add
lods
bswap
mov
ficomps
cltd
dec
and
idivl
scas
stos
mov
loopne
adc
or
scas
clc
movsl
test
repz
out
clc
pop
icebp
lret
das
lret
sub
aad
clc
sti
scas
pop
jg
aad
movsb
pusha
sbb
movb
lret
cltd
pop
xchg
xor
into
divl
nop
ja
sti
pop
jns
sarl
and
ret
adc
and
jge
sbb
repnz
cld
mov
ja
mov
xchg
inc
icebp
add
cmpsl
jne
cmpl
test
and
mov
repz
mov
pop
or
filds
notb
and
pusha
outsl
mov
jg
inc
pusha
lods
jne
loope
out
add
icebp
js
mov
in
or
pusha
ljmp
inc
xchg
fs
cmpsb
insb
data16
adcb
xchg
mov
xor
rorb
sub
mov
pop
xchg
jnp
call
dec
push
jp
arpl
rclb
fisubrl
adc
aam
repnz
cmc
xchg
or
xchg
pusha
jb
dec
add
push
lret
and
push
rclb
cmc
jb
sti
arpl
jns
cmp
jecxz
fcompl
scas
add
idivb
lret
lods
jno
pop
lock
dec
arpl
cmp
add
outsl
aas
xchg
xor
push
in
mov
fldl
test
xor
clc
fsubrl
lret
push
stos
jb
cmp
lea
xor
fmull
hlt
mov
icebp
pop
scas
mov
push
or
sbb
pop
fwait
mov
out
jmp
dec
leave
ds
in
pusha
push
ret
pop
jl
insl
pushf
stos
sbb
xchg
out
push
inc
icebp
pop
ffree
pop
out
sub
leave
sub
das
mov
mov
popa
popa
push
and
sti
rorl
cli
lods
mov
xchg
jg
movsl
stc
push
sub
mov
jg
xor
inc
ja
pusha
dec
mov
sbb
std
ret
int3
cltd
in
shlb
xchg
cld
pop
xor
mov
sarl
push
and
lahf
roll
fisubrl
rorl
lds
leave
inc
xchg
loop
mov
imul
mov
pop
sbb
mov
push
aas
push
pop
popf
cmp
addr16
mov
cmpb
shlb
mov
pop
ficomps
addr16
shll
and
xor
into
xchg
cmpsl
das
idivl
sub
in
test
iret
or
mov
pusha
cmpsl
inc
fcoml
idivl
stos
or
push
pop
movsb
ud2
mov
pop
gs
add
push
insl
add
push
sahf
sbb
sahf
insb
mov
shlb
es
ds
mov
dec
xlat
in
pop
js
mov
ds
sbb
cmp
inc
stos
push
nop
mov
inc
fnstsw
inc
mov
rcrb
adc
outsl
xchg
mov
cmp
into
loopne
xchg
out
loop
ret
push
loope
mov
cmp
into
mov
inc
in
sbb
iret
leave
mov
mov
mov
push
mov
ret
mov
jle
stos
cli
in
inc
or
loopne
sbb
xchg
rolb
mov
shrb
xor
mov
ret
sub
sahf
clc
xor
lock
fxam
jecxz
clc
and
mov
repnz
or
int3
leave
dec
cmc
std
push
icebp
dec
add
or
fmuls
fs
stos
out
inc
push
dec
cmp
add
or
push
sbb
ret
shlb
xchg
push
repz
sub
lock
hlt
xchg
sbb
inc
in
jns
mov
std
pop
ljmp
sbb
scas
fwait
loope
fwait
cmp
mov
push
pop
cmpsl
dec
movsb
jp
fisttpl
push
dec
cmp
out
mov
xchg
out
test
add
cmp
xchg
aam
lret
sub
mov
ljmp
mov
out
es
and
imul
rolb
push
push
xchg
mov
dec
mov
mov
mov
arpl
jg
repnz
adc
mov
lret
sbb
sub
adc
lock
adc
sahf
imul
call
cwtl
and
inc
or
push
arpl
sbb
push
inc
cli
int3
pop
sti
hlt
loop
fiaddl
cmp
pop
dec
repz
ss
jecxz
adc
pop
outsl
cs
xlat
jb
sbb
test
out
or
adc
frstor
push
dec
pushf
jmp
sbb
xor
bound
lahf
jmp
sti
nop
sahf
sub
sahf
les
add
outsl
shlb
xor
addr16
out
cmp
pop
sbb
stos
mov
xor
adc
sbb
mov
add
xchg
call
sbb
scas
or
adc
jae
gs
adc
inc
cld
lds
and
into
aas
pop
lea
push
scas
loope
ljmp
mov
sub
addr16
adc
ljmp
in
mov
idiv
aas
mov
xchg
xlat
and
stos
js
mov
mov
inc
fisttps
push
or
mov
lds
and
aas
mov
adc
jl
addb
sbb
adc
and
scas
outsl
add
and
mov
sub
std
push
mov
sub
stc
pop
push
xchg
pop
xchg
out
or
shll
fs
dec
mov
movsl
pop
mov
movsb
sub
pushf
jl
imul
sbb
es
aam
sbb
je
cmc
add
and
mov
lcall
mov
shll
stos
pop
insl
mov
jle
fidivs
or
orl
and
dec
test
inc
push
loope
cwtl
sbb
sbb
inc
lret
jmp
cmpsl
outsb
mov
lcall
adc
cmp
data16
jno
int
add
or
add
and
cmp
cmp
inc
xchg
fwait
sbb
jae
cmc
stos
sti
push
repnz
stos
mov
cmp
outsl
stos
or
into
jecxz
loope
es
add
popf
or
push
fcmovnb
mov
and
insb
cltd
cmp
push
call
adcb
pop
movsl
mov
stos
int
pop
xor
dec
in
or
add
les
mov
cs
pusha
add
inc
lret
shll
sub
cmp
jne
sbb
test
cmc
inc
push
insl
adc
cmp
movsb
enter
out
jno
lret
aaa
pop
jecxz
out
out
xor
pop
fcoms
fcmovne
cs
cmp
out
xor
sbb
lock
pop
inc
adc
cltd
xchg
aam
jo
out
mov
ja
ss
dec
mov
adc
outsb
int3
or
mov
mov
std
sub
xchg
fsubr
mov
loop
dec
inc
orl
pop
jge
out
xchg
ret
cltd
insb
clc
aas
out
push
mov
mov
jl
ficoml
bound
pop
cltd
or
test
dec
add
mov
sub
xchg
pop
loopne
in
jo
or
pop
inc
or
imul
mull
jmp
push
in
popf
xor
jae
rcl
std
iret
dec
rcl
adc
ret
test
dec
enter
mov
lcall
je
fstl
aad
xchg
pop
movsb
pop
xchg
xor
jmp
pop
gs
jp
ficomps
adcl
outsb
xchg
mov
je
adc
mov
jecxz
push
in
xchg
js
push
mov
shrb
out
sbb
inc
jg
lcall
andl
fs
mov
mov
sub
mov
push
stc
mov
jo
mov
push
ss
inc
negl
fimull
fwait
mov
sbb
xor
repz
adc
outsb
xchg
adc
je
or
jg
repnz
andb
cmp
xchg
cwtl
jmp
sub
push
shrl
stos
ljmp
mov
imull
mov
mov
xor
lods
or
aaa
lods
rolb
mov
mov
xor
cmpsb
inc
jae
negl
sbb
pop
jge
shl
data16
xor
mov
jmp
sbb
inc
clc
pushf
push
rep
pop
mov
cmp
pop
pop
mov
outsl
and
movl
outsb
mov
in
add
jo
rcr
in
jne
mov
add
mov
inc
icebp
pop
cwtl
into
add
jb
adc
add
outsb
lcall
mov
cmp
imul
sbb
inc
out
fnstsw
enter
push
daa
shrb
ficoms
and
and
cwtl
aam
mov
pop
xor
mov
pop
in
lock
xchg
das
cmpsb
out
mov
inc
xchg
cmpb
aam
fists
jae
or
add
rolb
sbb
mov
ja
iret
mov
jnp
in
pop
and
test
xchg
out
jp
and
inc
fs
inc
imul
insl
jne
aaa
sub
cmpsb
add
cmp
out
pop
jg
push
ljmp
mov
pop
lcall
inc
clc
mov
pop
jmp
pop
push
push
sbb
stc
cltd
jo
jle
sahf
xchg
adc
jno
pop
ret
lea
es
gs
push
or
xchg
jg
xchg
test
sub
xorl
sarb
or
filds
fs
addb
inc
inc
lock
xchg
mov
in
inc
aad
lret
inc
addl
sbb
xchg
dec
jmp
repnz
test
jecxz
incb
ds
jl
fdivrs
or
fwait
inc
jp
out
cmp
fisubrs
jb
pop
imul
shlb
pop
xchg
xchg
imul
ds
repz
add
popa
ja
cmp
ss
pop
pop
pop
cld
insl
push
lea
push
mov
nop
popf
push
cmpsb
fnsave
out
adc
or
xchg
imul
pop
filds
js
bound
sub
fimuls
int3
fisubrl
jnp
loopne
imul
mov
add
int
mov
aas
mov
jmp
icebp
mov
inc
stc
pop
lods
shl
jp
add
lret
jecxz
jae
in
sahf
insb
int
cltd
cmp
mov
cmp
pop
push
insb
inc
fcomi
sbb
je
xchg
aas
out
cmp
call
test
and
xlat
sub
aad
push
xchg
leave
jg
out
je
dec
shll
adc
inc
pop
lcall
fsubrs
pop
clc
repnz
jae
xor
jge
mov
mov
xchg
shrl
daa
fisubs
pop
lahf
dec
and
pusha
pop
jae,pn
loop
shrl
xor
adc
mov
cmp
in
cmp
jbe
mov
cmc
mov
mov
pop
int
push
mov
mov
sahf
mov
scas
jle,pn
dec
imul
pop
inc
test
push
ret
test
inc
lret
add
popf
or
push
andb
mov
mov
inc
aam
rolb
mov
mov
arpl
add
leave
jns
cli
rcrb
addr16
dec
cmpsl
sub
or
dec
adc
imull
or
jle
sub
sub
and
pop
sbb
cmp
test
cltd
inc
cmp
sub
dec
pop
or
shlb
out
fisubrl
inc
cwtl
cmpl
add
cwtl
jns
testl
clc
and
fcoms
pop
cwtl
fldenv
sbb
push
inc
xchg
jecxz,pt
fdiv
hlt
pop
popa
fimuls
cmp
sbb
pop
dec
dec
les
cmpsb
sarl
lcall
mov
bound
mov
mov
sbb
sub
scas
xor
jle
inc
sbb
addr16
js
and
pop
or
call
ja
xlat
push
pop
pop
cld
add
call
add
movsb
mov
dec
dec
mov
out
dec
inc
jecxz
pop
negl
punpckhdq
fsub
sarb
push
iret
lret
mov
sub
in
sbb
test
sbb
stos
jle
xchg
data16
lds
inc
inc
sub
pop
pop
adc
adc
negb
sub
movsl
mov
mov
and
test
adc
in
cmp
xchg
dec
lret
mov
cmpsb
mov
jge
popa
pop
dec
xor
jbe
sub
mov
das
int
pop
dec
rclb
mov
adc
stc
xchg
pop
or
cld
xchg
enter
mov
xor
pop
das
loop
gs
or
cmpsb
adc
sbb
or
rorl
lock
sub
addb
hlt
je
add
sbb
cmp
mov
arpl
or
jmp
xchg
mov
pop
repnz
mov
pop
mov
movsb
aam
out
out
xchg
les
cli
push
push
test
xchg
push
or
xor
lds
pop
testl
adc
mov
imul
ret
jmp
in
test
pop
xchg
xchg
sbb
jo
push
loop
lds
xchg
fldt
adc
addb
or
xor
scas
in
fyl2xp1
jo
fcomps
mov
pop
daa
test
outsl
and
xor
jnp
xor
fadds
ror
or
inc
add
add
lods
popf
js
dec
mov
ret
loopne
insl
jb
mov
pop
in
iret
call
push
outsl
or
js
push
dec
cmpsb
pop
cmpsl
pop
cld
rcrb
lret
xlat
ret
mov
pop
push
enter
sub
in
xor
in
adc
add
or
push
xor
iret
xchg
pop
sbb
adc
mov
iret
pop
adc
sub
cmp
push
in
pop
jo
add
and
xlat
ja
into
insl
fnsave
xchg
cmpsl
mov
mov
out
dec
mov
mov
cmp
pop
mov
add
and
mov
dec
pop
jo
pop
cltd
fcmovnu
mov
pop
pop
test
imul
or
movsb
stos
fwait
mov
loope
fisttpll
clc
and
xchg
xchg
std
sbb
hlt
add
xchg
push
notl
xor
push
add
xor
mov
jae
inc
push
adc
popf
rorl
adc
aam
ljmp
clc
out
inc
pusha
sbb
roll
mov
and
sti
or
mov
fcomi
test
or
inc
dec
fidivrl
test
dec
repnz
fs
add
push
jno
cwtl
inc
pusha
push
std
push
xor
test
xchg
dec
sub
movsl
repz
fisubl
adc
lret
rcll
cmc
movsb
sbb
adcb
adcb
and
push
call
inc
popf
mov
cltd
mov
cmc
or
mov
jnp
or
xchg
fisttps
lahf
jnp
icebp
ret
and
mov
dec
jmp
and
jl
mov
sbb
xor
popf
mov
pop
sahf
add
adc
test
hlt
pushl
or
incb
in
in
fisubrl
xchg
xlat
mov
adc
loopne
pop
lock
push
xchg
out
ja
andl
out
cs
dec
ljmp
jge
mov
mov
inc
cmp
xchg
sub
xchg
inc
lcall
dec
add
sbbb
push
rorl
jns
mov
ss
popa
cmp
sub
test
imul
add
adc
pop
pop
mov
call
fdivs
lret
rclb
add
bound
jmp
int3
jb
aaa
adc
xor
push
ss
lcall
fldenv
fnstcw
dec
add
rorb
push
fildl
pushf
pop
xchg
fwait
repz
add
loop
or
pop
pop
mov
lahf
add
xchg
xchg
data16
dec
dec
inc
pop
mov
out
data16
int3
cmp
or
sub
add
mov
enter
out
scas
or
xchg
dec
jmp
aad
mov
sbb
jne
dec
adc
sbb
adc
aas
hlt
xchg
shrl
sbb
xorb
mov
xchg
cmc
mov
add
dec
mov
adc
ret
out
inc
shrb
add
cld
or
sbb
insl
inc
push
call
mov
dec
stos
insb
stos
ret
add
lds
mov
lret
sbbl
push
das
add
sbb
ja
and
outsb
sbb
sub
dec
push
daa
jns
aam
mov
aaa
dec
hlt
mov
fdivl
cmp
jns
mov
test
xlat
jmp
mov
xor
ret
push
jecxz
ja
jno
mov
fwait
dec
daa
cmp
jg
xor
jae
add
aas
fmuls
jg
cmp
jb
jl
sbb
fildl
mov
add
mov
and
das
cmp
push
push
movsb
idivb
das
mov
mov
and
mov
inc
daa
sub
das
push
sbb
int3
mov
sahf
push
adc
pop
popl
and
mov
fsubl
sub
insl
or
repz
add
or
ljmp
mov
pushf
or
js
mov
push
lock
scas
pop
mov
or
sysenter
pop
iret
pop
jecxz
cltd
add
inc
popf
lret
mov
dec
cmp
mov
fwait
cmp
sbb
aad
je
aam
mov
out
cwtl
fwait
or
xor
test
or
js
out
enter
mov
leave
nop
pop
gs
xor
pop
inc
add
test
mov
pop
ss
cmp
divl
bound
mov
loopne
mov
pushf
std
loop
icebp
sub
add
leave
or
arpl
mov
ficoms
cli
pop
in
test
ret
flds
enter
inc
jno
movsl
or
adc
insl
fdivrl
cmpsb
movsl
mov
addr16
inc
daa
insb
leave
adc
test
dec
insl
and
jg
pop
dec
xchg
int
push
or
adc
adc
std
jae
adc
push
cmp
jo
jb
mov
cli
jle
jnp
mov
fcoms
add
std
fs
jne
pushf
fimull
or
sti
mov
lea
and
mov
data16
mov
ja
jnp
insb
xchg
test
xor
fidivrs
mov
push
or
imul
aam
xchg
mov
and
cmpsl
test
inc
test
dec
es
mov
in
fildl
jg
icebp
nop
adc
mov
push
sbb
cmp
fdivs
pusha
adc
jge
dec
add
out
or
jmp
shlb
inc
pop
and
pusha
js
cmpsl
in
dec
aaa
adc
es
pop
imul
dec
xchg
cmp
or
dec
inc
inc
aam
inc
lahf
aam
in
cwtl
mov
xchg
dec
movsb
jnp
aas
xchg
mov
ret
aas
in
lahf
imul
cmp
jns
inc
out
push
repnz
out
jp
push
mov
pusha
mov
jl
jo
jbe
mov
out
add
rcrl
sbb
test
fsubl
mov
inc
in
add
sub
cmpsb
shl
sbb
inc
add
addr16
or
mov
fs
hlt
mov
mov
xchg
test
rcrb
dec
jae,pn
cmp
mov
xor
mov
push
movsb
scas
in
ljmp
add
out
adc
pop
das
inc
insb
sub
pop
ss
out
daa
sbb
fldl
and
loopne
jbe
sbb
mov
aam
cmp
push
sbb
add
dec
pop
xor
xlat
and
enter
lods
cltd
test
inc
imul
jne
sub
int
movsl
xchg
pop
pop
push
aam
or
addr16
xor
dec
push
lods
clc
and
shll
cmc
sub
xchg
std
fidivrs
and
add
mov
ret
or
fisubrs
int3
aad
or
rcrb
ret
sbb
es
movsl
add
imul
pop
mov
mov
divl
mov
cs
mov
in
cs
fimull
jmp
clc
adc
enter
xchg
ret
xlat
packuswb
xor
js
mov
outsl
mov
cmp
sub
rcll
lock
dec
xchg
adc
pop
sub
inc
in
mov
inc
adc
xchg
mov
cmp
es
jne
js
or
mov
dec
addb
push
je
or
mov
mov
adc
fisubl
xchg
jo
lret
dec
addr16
popf
jg
or
imul
lret
mov
pop
sub
cs
and
inc
jmp
fisubrs
xor
cld
sarb
mov
fisttpll
fbstp
push
ja
sub
sub
and
adc
pop
inc
push
movsl
add
imul
xchg
mov
lea
add
inc
and
mov
mov
int3
xor
xchg
into
adc
or
fstps
add
push
jmp
stos
leave
push
shrl
mov
insl
push
mov
push
into
inc
xor
pop
leave
dec
mov
lods
fs
lcall
adc
and
push
jo
std
fiaddl
cltd
je
push
adcb
hlt
in
push
jns
xor
push
xchg
pop
repnz
lods
es
xchg
mov
js
and
push
cmp
sahf
lock
and
stos
push
shlb
movsl
lods
stos
in
jns
movsb
aas
cmp
aaa
pop
bound
sbb
lods
xchg
sti
dec
or
cld
js
int3
je
cmpsb
pop
jae
pusha
stos
rcrl
jge
jne
dec
popa
out
jb
std
rolb
mov
int
inc
mov
test
fstl
and
mov
cltd
and
lds
imul
loope
std
mov
cmp
and
call
jp
jno
mov
mov
jl
std
sbb
pop
dec
enter
xor
xchg
ja
jg
std
sahf
pop
addr16
xchg
xchg
inc
mov
jl
and
add
push
dec
out
jge
test
out
mov
pop
mov
fisubl
test
in
xchg
mov
rcrb
out
dec
std
cld
dec
insb
xor
add
ljmp
or
mov
subl
sbb
test
jg
pop
sbb
add
outsb
in
out
xchg
push
mov
add
xlat
or
lea
dec
inc
cmc
test
or
inc
out
mov
mov
mov
mov
arpl
mov
mov
or
call
test
lods
jb
xchg
mov
lods
pushf
jns
push
xchg
ret
addr16
enter
arpl
sub
and
xchg
lcall
scas
arpl
push
jmp
mov
adc
aad
push
ljmp
or
lea
or
in
sbb
lret
divl
les
add
scas
adc
xchg
jnp
in
out
mov
pop
adc
push
imul
scas
outsb
cmp
mov
jne
add
lods
mov
xchg
cwtl
cwtl
out
or
in
cmp
jmp
out
cmc
int
cmpsb
sbb
lock
mov
xchg
sub
dec
ljmp
jmp
das
add
in
or
and
or
rorl
xor
mov
fisubl
pop
int
inc
int
aaa
adc
and
into
addr16
and
loop
fbstp
fldl
ja
xchg
push
and
cmp
ds
jb
or
sahf
loopne
pop
loope
lds
push
les
and
arpl
int
push
aad
imul
int3
adc
jp
pop
mov
mov
pop
pop
int3
jp
xchg
test
aas
inc
or
iret
or
xor
xchg
movsl
movsb
test
lcall
xchg
mov
xor
xchg
sbb
cmc
out
repz
out
add
sbb
in
testl
xchg
imul
cmp
mov
mov
dec
sti
stos
add
and
mov
shl
sbb
test
lret
mov
dec
xchg
ficomps
sahf
add
sub
out
xor
push
mov
xorl
jl
shll
stos
xchg
xchg
scas
addr16
popa
lahf
decl
mov
into
in
xor
repz
arpl
adc
cwtl
sahf
pop
sub
out
fsub
or
lret
xchg
or
popf
repz
cmovae
sub
stc
inc
je
sti
stc
mov
push
loopne
dec
push
jo
lods
leave
push
add
jo
sbb
in
movsl
test
mov
psubsb
and
lock
stos
cmp
xchg
js
enter
xchg
outsb
popf
rep
push
mov
lods
sub
add
fcomip
sub
rcrb
adc
sub
xchg
inc
mov
clc
adc
popf
pop
insb
jno
jne
lods
lret
cmpsl
push
xor
icebp
ret
or
mov
jecxz
sahf
push
ss
in
enter
jne
cltd
sub
ret
or
lods
cld
cltd
leave
out
cwtl
fs
sbb
jecxz
dec
dec
lahf
fisubrl
imul
xlat
insb
inc
cmp
jmp
adc
push
mov
dec
into
ljmp
scas
xchg
mov
pop
mov
insl
aam
push
popf
into
mov
mov
inc
jno
push
iret
jle
lods
jecxz
cs
xor
add
inc
and
lahf
in
mov
or
pop
jbe
leave
icebp
mov
mov
iret
cmpsl
adc
mov
mov
fbld
loopne
enter
xlat
rolb
rcr
out
adc
or
jae
pop
mov
sets
push
gs
xchg
popa
aaa
loop
ficompl
in
inc
in
or
or
jbe
mov
je
or
cwtl
rcrb
xor
lret
inc
inc
adc
leave
ljmp
cli
mov
sub
fidivrs
movsl
adc
js
sub
adc
pop
mov
xchg
push
sub
cld
push
int
or
rcl
add
out
leave
sub
mov
mov
es
jb
or
cmp
popa
mov
daa
in
mov
sub
mov
add
test
pop
loope
scas
jae
mov
je
jg
cltd
das
sbb
repz
repnz
jb
inc
add
dec
clc
cmc
pushf
into
arpl
push
gs
xchg
sub
fstpl
cld
push
std
jle
adc
sub
sti
data16
pop
dec
repnz
sbb
xor
outsl
rolb
sub
in
aad
jmp
das
mov
test
loopne
lret
jbe
cltd
lock
lds
hlt
fildl
lods
cs
sbb
pop
cmp
push
and
xor
scas
cli
dec
fnstcw
jb
icebp
mov
sub
mov
adc
call
stos
lcall
dec
std
sar
popa
mov
jbe
pextrw
cmp
rcrb
out
ret
gs
push
xchg
lods
jno
frstor
xchg
out
sahf
sub
sub
jne
mov
mov
add
sbbb
lcall
rcll
pop
fbld
stc
push
icebp
std
fistl
xlat
lcall
or
inc
push
pop
aas
push
xor
ljmp
mov
mov
int
cwtl
add
push
shll
shlb
test
lret
loop,pn
add
test
mov
sahf
adc
sti
shrl
jecxz
mov
testl
sbb
jne
cltd
insl
add
fnsave
in
sbb
cmp
cmpsl
cmp
imul
jle
mov
and
cmp
xor
sbb
outsb
aaa
enter
shll
push
push
cmpsl
sbb
fdivrp
dec
cmp
lods
add
sti
fld
mov
and
cmp
das
push
add
ret
jns
pop
jae
cmp
sti
cwtl
loope,pn
out
imul
popf
int3
iret
scas
lock
add
stc
jbe
jmp
mov
jae
aas
subl
sti
sub
push
push
daa
or
das
mov
lock
pop
cmpsl
aam
pushf
je
dec
xchg
mov
xlat
les
adc
gs
jg
les
jae
jo
lahf
xor
xlat
orb
xchg
inc
mov
fcmovnu
test
cmp
loop
fadds
or
inc
xor
jmp
mov
pop
cltd
or
hlt
jbe
jo
xchg
adc
loopne
addr16
insl
fsts
push
jle
ret
popa
push
into
arpl
xchg
scas
jg
pushl
mov
dec
pop
iret
stos
fmull
jne
mov
lods
push
add
mov
aas
clc
bnd
repz
jno
jg
pop
call
jb
or
les
rclb
loop
xor
cwtl
add
repnz
sub
fisubrs
add
clc
insb
xchg
jb
inc
inc
cld
repnz
outsb
or
fs
and
cli
loope
pop
ficoms
cld
mov
mov
jge
pop
sub
pop
cs
mov
ds
xor
outsl
mov
dec
ja
rcr
ret
into
cltd
mov
gs
xor
pop
pop
mov
jp
shrl
mov
jecxz
ret
and
push
hlt
sbb
loopne
shll
jge
push
aaa
xchg
mov
mov
dec
in
sbb
add
jns
sbb
loopne
stos
xor
xchg
mov
mov
mov
mov
cmp
ds
fcompl
jp
clc
mov
jl
sbb
mov
scas
push
lods
mov
sarb
call
aam
pop
std
inc
jle
lock
adc
daa
add
faddl
in
repz
scas
lea
out
sbbb
loop
add
cmp
dec
pop
cld
int
andb
dec
lea
xchg
push
jns
dec
push
push
inc
adc
ficoms
sbb
mov
adc
fsubl
insl
lret
push
mov
mov
push
dec
sbb
icebp
loope
adc
xchg
adcl
add
icebp
push
dec
mov
mov
sbb
imul
cmp
std
mov
dec
push
jnp
nop
pop
xchg
stc
sbb
mov
pop
outsb
mov
or
cld
xchg
mov
and
int3
sbb
sti
les
xor
cli
fwait
fwait
movsb
outsb
xchg
mov
inc
bound
incl
cmp
mov
sbb
inc
fcmovne
sbb
subb
xor
sbb
push
push
std
out
adc
ret
mov
rorl
jae
les
pop
fsub
push
repz
sbb
jmp
mov
xchg
cltd
fists
jno
pop
and
and
or
loopne
cmp
xchg
adc
mov
mov
rolb
or
xor
and
sbb
fisttpl
push
loope
and
sbbb
sbb
jg
xor
sbb
push
jnp
xlat
lahf
xchg
mov
insb
stc
jne
push
pop
jp
scas
adc
out
test
fnstenv
sub
lock
cmp
call
aas
and
dec
arpl
mov
scas
jnp
test
aam
aas
adc
pusha
ljmp
and
mov
jmp
mov
out
jle
lods
sub
push
repnz
je
xchg
test
in
add
lds
stos
mov
push
jecxz
in
mov
dec
and
jbe
jae
pop
nop
sub
sbb
dec
dec
cmp
adc
xchg
push
test
imul
xchg
aaa
mov
addb
or
mov
push
into
stos
fistpl
cmp
mov
scas
fiadds
sbb
lcall
fldl
frstor
pop
daa
adc
pop
xor
shlb
push
ret
jmp
inc
mov
xor
jnp
cmp
dec
inc
push
push
loope
lcall
testl
mov
outsl
in
jns
je
fiaddl
les
mov
xchg
push
xor
add
mov
mov
imul
and
bound
and
sub
inc
fnsetpm(287
fs
pop
sub
loopne
sub
inc
jae
sti
popf
lods
test
adc
cmp
imul
scas
ret
decb
sub
xchg
ja
aam
push
xchg
shl
ret
jno
adc
bound
sarl
bound
out
jae
or
int3
or
mov
int3
sbb
cwtl
xchg
dec
dec
xchg
push
sub
xchg
movsl
cld
imul
dec
iret
add
fcmovbe
push
addr16
inc
pop
dec
dec
jne
pusha
into
jnp
cmc
xchg
sti
nop
pop
jb
push
xchg
jp
insb
xchg
push
sbb
mov
ret
xorl
xchg
push
or
ja
fldcw
adc
dec
out
inc
es
out
xor
push
ret
loop
or
pop
jg
pop
cmpsl
iret
xor
pop
adc
les
sub
and
adc
pusha
mov
xor
in
sbb
pop
imul
and
out
jl
aam
ret
mov
aad
push
sahf
sub
dec
insl
mov
xchg
addr16
addr16
or
dec
add
jbe
adc
imul
insb
mov
data16
in
jle
imul
inc
pop
adc
es
push
cwtl
fldl2e
inc
push
pop
and
xchg
push
clc
fsubl
or
pop
out
push
sub
cmpsb
scas
inc
iret
addr16
mov
mov
push
adc
pop
enter
lret
sbb
jp
cmpsl
or
fdivl
mov
ret
cs
ljmp
aas
lahf
and
push
push
mov
lea
or
adc
pop
fdivs
in
iret
pop
sbb
mov
and
mov
icebp
cltd
sub
or
pop
mov
cld
adc
push
jecxz
mov
jbe
xchg
inc
pop
mov
add
cmp
movsb
aad
xchg
inc
cs
and
fiadds
lea
adc
adcl
cs
sub
xlat
sbb
lods
xchg
sub
shlb
push
push
ss
push
movsb
mov
xchg
or
cmp
or
cltd
inc
lea
sub
sub
jnp
adcl
mov
mov
mov
or
or
pop
add
jne
call
sub
insb
mov
pop
cmc
jmp
push
cld
cmp
dec
push
sbb
fadd
pop
add
filds
lcall
push
test
add
xor
in
ja
icebp
cmp
and
dec
stc
leave
add
dec
gs
sub
mov
inc
fs
adc
popl
cmpsb
adc
sahf
imul
sub
mov
out
icebp
mov
jno
cmc
mul
pushf
mov
pop
lret
sub
fstpl
lea
arpl
divb
outsb
adc
xor
sbb
out
push
xchg
loopne
fidivrs
pop
fidivl
dec
es
push
movsl
mov
mov
dec
push
clc
lods
cmp
add
inc
push
pop
lods
cmp
sbb
and
imul
sbbb
ss
repnz
pushl
mov
stos
ja
subb
clc
mov
xor
insb
rcl
cmp
xor
jbe
cmp
mov
js
cmp
insb
sbb
orb
pop
add
mov
aaa
dec
xor
leave
imul
sbb
xor
mov
adcb
xchg
pop
or
imulb
std
ja
loope
mov
jl
fwait
cltd
test
mov
cmc
popa
mov
lret
in
mov
push
or
insl
test
mov
and
push
adcb
adc
and
xor
arpl
xor
ljmp
dec
test
call
mov
fldenv
sub
stos
and
push
rcr
inc
enter
inc
and
sbb
adc
jbe
popa
jmp
lds
fs
sub
pop
call
pop
lahf
mov
xchg
lods
popf
pop
push
test
cltd
jns
xchg
shrl
jbe
roll
adc
dec
inc
pop
or
jg
repnz
incb
or
aam
or
enter
movsb
in
fstps
add
int
inc
popa
pop
xchg
pavgw
jle
cmp
push
lahf
inc
push
ss
lcall
dec
mov
ss
pop
je
dec
push
cld
dec
rcr
iret
lods
sbb
jne
add
push
mov
cmc
test
cwtl
adc
popa
xchg
icebp
mov
sbb
leave
mov
lret
mov
fldt
pop
mov
and
add
nop
jne
mov
les
mov
loopne
outsb
data16
in
aad
cmc
mov
fistl
cltd
inc
pop
mov
push
scas
sub
mov
call
sbb
cmp
fwait
test
pop
es
push
jno
lcall
jmp
mov
mov
fs
int
jbe
mov
repz
cmp
cs
int
bound
aam
mov
xchg
ljmp
stc
icebp
and
fisttps
jne
jmp
cmpb
xchg
jbe
movsl
jmp
push
jmp
xor
pushf
mov
pusha
in
scas
lahf
scas
xchg
adc
mov
stos
testb
pop
scas
in
es
jge
mov
push
mov
dec
mull
bound
inc
fbstp
pop
mov
mov
inc
leave
mov
lcall
xchg
movsl
rorl
jo
pop
hlt
push
repnz
dec
fucomi
cmpsb
jns
ret
negb
push
out
bound
mov
inc
adc
fucom
sub
aaa
pop
pop
dec
or
imul
add
jns
shr
jne
dec
jne
pusha
adc
aam
sub
out
popf
cli
push
leave
jp
jge
adc
xchg
add
lahf
mov
loope
adc
pusha
rorl
push
incl
inc
mov
mov
repnz
mov
mov
fldpi
sbb
mov
movsl
adc
xchg
dec
and
int
ds
xchg
xchg
mov
mov
mov
jns
outsl
jl
xchg
idivl
xchg
mov
loope
push
je
cmp
fstl
dec
int3
int
mov
dec
xchg
cmpl
ds
out
jecxz
arpl
insb
faddl
inc
pop
daa
xchg
push
mov
loope
movsb
popa
ja
push
xchg
pop
add
ds
xlat
pop
int
adc
jg
int
xor
int3
push
andl
mov
repnz
loope
je
sub
adc
cmp
cltd
mov
jle
mov
sub
pusha
ss
notb
xchg
xlat
push
movl
rol
insb
and
cmp
jecxz
jl
push
pusha
inc
bound
popf
xorl
mov
lret
add
js
adc
bound
dec
rorl
push
inc
mov
xchg
xchg
push
xor
fsubrl
bound
mov
pop
pop
pop
sub
mov
mov
out
mov
jmp
dec
xchg
dec
cwtl
fstl
scas
cmp
cli
imul
roll
lods
paddusw
lcall
xchg
fcmove
mov
mov
cmp
mov
mov
mov
fnstcw
inc
pop
dec
pop
inc
sub
dec
lods
pop
cmpl
adc
jecxz
jmp
dec
mov
adc
je
mov
push
cld
inc
clc
xchg
push
xchg
fs
fs
xor
and
jne
pop
sahf
leave
test
push
sbb
sbb
stos
mov
out
jo
pop
mov
scas
mov
imul
mov
cwtl
adc
sti
pop
into
add
mov
jmp
call
mov
shll
popf
lock
xchg
xchg
pushf
lea
cmp
mov
popa
pop
mov
or
mov
repz
loope
xchg
mov
xchg
repnz
sbb
mov
not
pop
push
in
xor
movaps
lock
in
sar
inc
mov
adc
in
and
adc
gs
arpl
xchg
add
leave
shrb
add
mov
cmp
push
scas
and
push
lods
dec
adc
jne
sbb
adcl
popa
leave
sub
aaa
cltd
loopne
mov
mov
xchg
fldl
xchg
test
push
popa
xor
sub
lods
pushf
pop
aad
rolb
aam
mov
xchg
add
ret
add
sub
xchg
outsl
sbb
add
daa
xchg
adc
test
scas
and
loop
jnp
cmpsl
push
in
pop
lods
in
cmp
ret
cmp
das
jp
arpl
xor
and
insl
fistpl
push
mov
xor
test
sub
sti
and
sbb
or
cmp
inc
mov
cmp
adc
xchg
ret
shrl
cmp
ficompl
dec
jae
mov
mov
xchg
aam
addr16
mov
sbb
out
repnz
jne
jns
add
pop
je
out
push
mov
adc
xchg
xchg
cmp
stos
insl
enter
and
into
out
cmp
inc
jne
movsb
push
inc
aam
add
insl
push
clc
push
daa
lahf
bound
cli
cmp
incl
out
cmc
cs
mov
sub
adc
add
test
sti
fsubrp
bound
xchg
mov
cmpsl
std
sarl
icebp
out
in
sbb
lcall
jo
and
sbb
out
cmp
adc
inc
je
cli
mov
insb
mov
repz
jne
mov
push
sub
lods
push
pop
add
fisubl
lock
push
mov
push
test
ret
ja
jl
mov
and
sub
mov
or
cmp
scas
jecxz
lea
mov
xor
stos
xlat
add
out
mov
jnp
push
mov
loopne
pop
jbe
push
jne
les
dec
cmpsl
mov
clc
jmp
or
add
loope
xchg
mov
jle
rcl
xor
movsl
push
stc
andb
sub
jno
jl
aaa
xchg
stos
ljmp
mov
cmpb
sahf
inc
push
lods
adc
aam
push
sar
mov
rclb
test
outsb
sbb
and
add
les
test
jmp
mov
movzbl
push
and
mov
mov
mov
movsb
ljmp
loopne
inc
insb
mov
out
mov
and
jle
and
cmp
repnz
dec
jecxz
out
push
cmpsl
mov
fidivrs
aas
enter
add
nop
sahf
ds
lcall
clc
cmp
movsb
aam
cmc
dec
mov
cwtl
sbb
dec
adc
adc
lea
jb
and
mov
inc
jle
jbe
and
adc
ds
aam
pop
nop
mov
outsb
lcall
add
dec
ret
xchg
out
push
out
ljmp
aam
mov
pushf
mov
notb
out
js
push
imul
pop
add
mov
sarl
or
push
cli
in
lods
mov
sbb
bound
jge
add
lret
cmpsb
sub
or
lock
xor
adc
arpl
pop
sub
int3
cmp
push
jmp
fnsave
test
jbe
mov
push
xlat
cmp
inc
lea
sub
imul
fwait
rorb
mov
addr16
sub
pop
push
push
push
movsl
mov
fstl
mov
lods
or
push
test
ss
push
lret
xor
xchg
inc
test
dec
push
mov
mov
push
movsl
dec
cld
sub
or
lods
out
lret
sub
pop
int
cwtl
ds
gs
and
das
xchg
test
js
mov
sub
fcmovb
sbb
pusha
divb
cmpsl
stc
lea
push
enter
add
add
ret
or
fstps
pop
sbb
push
imul
push
int3
lret
cwtl
push
out
jo
in
jg
test
lcall
arpl
adc
dec
leave
scas
hlt
cmp
push
sub
test
in
xchg
add
arpl
addb
scas
push
lret
ljmp
and
adc
push
xlat
into
loopne
push
and
cmp
gs
add
add
test
add
xchg
sub
enter
inc
xlat
xchg
test
lods
add
inc
mov
insb
sbb
jmp
adc
xor
jg
and
jbe
es
push
dec
push
push
dec
sub
jle
pop
mov
xor
enter
imul
pusha
mov
dec
inc
sub
movsb
popa
fiadds
add
jo
add
add
adc
adc
in
add
jg
cmp
das
inc
push
add
cmp
push
sti
in
popf
aad
sbb
fstl
cwtl
addl
test
addr16
or
lret
mul
mov
mov
clc
xchg
and
adc
mov
mov
ficoms
fisttps
int3
mov
dec
xor
sbb
or
scas
adc
dec
dec
ja
imul
insb
lahf
movsl
test
pop
xchg
loope
jne
jmp
and
clc
mov
test
mov
mov
xchg
scas
and
lret
sbb
mov
push
and
sub
insl
and
or
push
clc
cmp
lahf
in
push
mov
clc
addl
jno
xchg
loopne
pusha
pop
and
mov
ja
and
pop
push
dec
scas
and
jmp
xor
inc
out
inc
gs
mov
lcall
cmp
mov
jns
fnsave
pop
imul
dec
ror
pop
and
xchg
push
clc
daa
cmp
lcall
xchg
fcmovbe
dec
xchg
sti
sub
jp
aas
lahf
repnz
ds
movb
jecxz
out
lcall
stc
pop
pop
pop
pop
push
lds
in
add
dec
ja
push
push
sti
mov
mov
mov
and
xchg
adc
push
rorb
outsb
inc
jle
repz
push
sbb
iret
pop
pop
jle
enter
lods
pop
ret
aam
dec
daa
adc
jbe
and
cltd
lahf
aaa
nop
daa
repnz
adc
push
clc
mov
aam
pop
xor
pop
in
jae
push
xor
pusha
out
xor
pushf
into
mov
fisubs
jnp
cmp
insl
add
inc
insl
std
xlat
adc
sahf
dec
arpl
adc
pop
repz
pop
arpl
inc
je
dec
fucomip
inc
out
jmp
jnp
xchg
jg
push
popf
or
idivl
insl
push
out
scas
xchg
adc
inc
jno
in
jle
insb
das
in
out
push
mov
sahf
dec
leave
iret
sbbb
jbe
dec
jl
mov
sbb
gs
lgs
inc
cs
xor
fsubrp
and
sub
ret
and
cltd
testb
and
ss
inc
iret
pusha
leave
out
mov
repz
hlt
lea
push
addr16
and
adc
xchg
cmp
je
jmp
or
cmp
in
xchg
and
aas
cli
push
cli
lods
imul
andl
popa
mov
adc
dec
gs
mov
lock
stos
pushf
stos
cltd
and
sbb
loopne
push
jae
jge
sbb
push
or
outsb
and
mov
pop
add
mov
sbb
mov
lcall
nop
xchg
clc
enter
lcall
mov
cmp
sti
lret
cwtl
mov
in
ds
into
or
pop
mov
in
push
jae
xchg
inc
xor
test
cmc
jnp
ljmp
sbb
ljmp
adc
cmp
xorl
sub
mov
in
subb
insl
cltd
insb
pop
dec
sbb
xor
dec
push
jle
repnz
mull
mov
ja
popf
add
lea
rcrl
adc
jge
xchg
pop
push
test
fwait
xlat
mov
stos
push
adc
mov
outsb
ficoms
stos
and
das
jp
pop
enter
jo
xlat
stos
push
int3
idivb
xchg
cmp
stos
mov
iret
push
cmpl
sbb
and
mov
adc
mov
pop
push
iret
xor
mov
pushf
pop
jmp
xor
cmpsb
or
sbb
outsb
lods
xchg
rclb
dec
mov
and
pusha
call
imulb
mov
jne
addr16
mov
sbb
imul
or
scas
mov
cmc
std
pusha
adc
pop
xor
lods
outsl
not
testb
adcb
rorb
shl
rolb
das
push
push
dec
movsl
ss
and
hlt
or
mov
mov
stos
adc
mov
jecxz
push
xchg
jge
xor
sub
xchg
inc
lret
push
push
pop
xchg
lock
scas
fildll
test
fdivs
pop
outsb
stc
addr16
mov
mov
pop
or
mov
xor
in
push
scas
fcoml
rcll
sub
and
adc
jecxz
mov
jbe,pt
je
aad
add
lahf
xlat
add
std
jns
mov
jb
pop
cmc
jp
or
inc
cmpsl
mov
daa
stos
rcr
mov
lds
adc
scas
pushf
sbb
cmp
out
cmp
call
inc
daa
in
pop
test
add
nop
test
xchg
rolb
shlb
dec
lods
cli
sbb
xchg
aaa
jmp
mov
shrb
xchg
loop
bound
daa
mov
and
sub
in
sub
xor
loop
and
xchg
adc
sbb
mov
shlb
lds
or
push
popa
jno
jno
xchg
mov
repnz
dec
add
xor
or
packsswb
loope
jp
adc
lods
fildll
or
sub
idivb
mov
loop
xlat
push
das
movb
push
cmp
dec
cwtl
adcb
push
hlt
fisubrl
je
lret
or
out
pop
cmpsl
xchg
fwait
jns
cltd
add
push
ss
and
movsb
xor
jne
mov
jb
cmc
push
cmpb
in
movsl
subps
subb
enter
dec
pop
push
fxch
pusha
sub
into
xchg
xchg
jmp
fbstp
mov
and
hlt
arpl
fimuls
lods
popf
cmp
daa
jle
out
inc
sub
out
jl
bound
mov
or
movsl
nop
test
inc
movd
mov
push
popa
push
mov
pop
push
loope
push
mov
jg
cmpsl
add
xchg
out
sub
faddl
rorl
or
cmp
push
in
mov
in
adc
dec
xchg
and
lret
xchg
scas
lret
pop
std
je
scas
rorb
sbb
mov
xorb
xchg
insb
ss
mov
adc
push
pop
popf
jne
cmp
lds
mov
or
mov
int
push
push
out
data16
rorb
or
or
and
arpl
sbb
divb
mov
or
inc
ret
xchg
cmc
mov
scas
mov
ja
add
xchg
or
movsb
pop
jb
dec
into
rcrb
mov
mov
jo
dec
cwtl
out
ds
cmp
in
std
mov
hlt
insl
cmc
mov
xor
cmp
jae
add
cwtl
or
dec
xchg
and
fwait
mov
hlt
incb
stos
lods
das
xchg
inc
jge
decb
mov
imul
pop
xchg
dec
out
sub
lods
mov
imul
ja
xchg
je
stos
iret
pop
repnz
jg
add
daa
dec
dec
aam
sbb
or
ja
mov
popa
jae
pushf
or
sub
jno
ss
xor
xchg
leave
aaa
and
js
loop
dec
mov
stos
mov
daa
ret
sub
dec
add
stc
jmp
sbb
and
mov
mov
jmp
mov
lds
mov
rcll
test
lcall
in
inc
pusha
or
hlt
sahf
adc
in
lods
das
xchg
mov
es
cmpsl
pop
addb
ret
fsubs
out
sub
mov
divl
data16
pop
add
dec
mov
cmp
xlat
enter
mov
mov
dec
sbb
cld
sbb
lret
in
std
push
lods
dec
sti
add
mov
cld
cli
dec
out
and
dec
cmpsb
aaa
sub
dec
push
js
adc
push
push
pop
cltd
arpl
pop
dec
jns
xor
popa
push
cmp
xlat
jg
stos
daa
loopne
pop
push
add
add
inc
jge
adc
jbe
push
loopne
adc
xchg
xchg
int
int
loop
add
test
inc
sbb
sbb
mov
stos
imul
test
gs
cmp
movsl
mov
cltd
or
xchg
mov
mov
aas
mov
lcall
aaa
das
sti
out
xor
decl
sub
les
outsb
xor
mov
scas
lea
in
push
xchg
mov
cmp
jp
push
stos
je
sub
mov
and
jns
imul
push
push
fwait
sub
pop
movsl
jno
jbe
or
xchg
call
mov
je
mov
jnp
jnp
mov
sub
leave
adc
mov
add
jle
lods
cmp
scas
in
cmpsl
add
ja
imulb
jp
xchg
aad
out
mov
rcrl
and
fbstp
lea
xor
mov
jnp
dec
push
xchg
add
fistpl
mov
mov
repz
lods
jp
sub
icebp
sbb
popf
fs
jmp
scas
inc
dec
xchg
jno,pn
movsl
dec
imul
sbb
jne
mov
sti
xor
arpl
icebp
ret
inc
lret
mov
mov
mov
aaa
mov
xor
pop
sahf
clc
or
mov
jecxz
cmc
in
mov
pop
in
mov
dec
adc
daa
ss
and
out
xor
lahf
add
mov
icebp
test
mov
push
rcr
xchg
les
mov
std
cs
fisttpll
out
mov
fisttpll
cli
fistl
rorb
cmc
or
push
add
loopne
mov
jno
leave
pop
cmpsb
add
out
dec
adc
pop
cmp
dec
cmp
outsb
testl
inc
loopne
xor
and
test
in
shlb
sbb
jno
loope
int
das
jge
hlt
rolb
outsl
es
into
call
cmp
pop
add
iret
sbb
data16
push
pop
dec
test
subb
or
push
adc
mov
in
stos
mov
jae
push
xor
aam
mov
fsubrl
sub
mov
mov
mov
leave
adc
dec
inc
test
xor
ljmp
das
std
cmpsl
leave
jmp
cmpb
je
inc
shlb
and
fistl
mov
ret
xor
fdivr
in
in
roll
out
mov
fisttpl
scas
data16
test
adc
or
mov
mov
inc
movaps
pop
xor
jnp
outsb
cli
nop
or
fwait
sbb
xchg
mov
fs
sbb
out
in
push
jbe
das
mov
popf
and
xor
loopne
in
ljmp
mov
out
xor
test
test
cmp
sbb
pop
je
mov
popf
fmull
and
push
hlt
push
int3
shrl
cmp
insb
jge
rolb
pop
mov
lret
lea
cmc
mov
lret
mov
addl
and
aam
mov
shlb
add
jecxz
popf
push
sub
mov
jge
pop
pop
int
fldenv
jbe
cwtl
movsl
pop
fs
dec
sarb
js
addb
mov
and
sbb
dec
iret
or
mov
adc
mov
ja
dec
aam
leave
fistpll
pop
xor
lahf
imulb
imul
jmp
or
pop
jle
subb
nop
mov
in
xchg
mov
inc
dec
fwait
sbb
loop
out
mov
pop
sub
push
arpl
push
bound
ljmp
adc
dec
idivl
loop
movsl
aam
fwait
add
mov
les
or
adc
outsb
adc
cmp
xchg
or
push
outsl
push
mov
test
mov
rcr
xlat
loopne
fcmovbe
xlat
nop
xchg
test
lahf
mov
loopne
sbb
jecxz
hlt
and
ficomps
and
push
or
or
aam
sbb
mov
es
fnstsw
jo
out
inc
test
xor
movsl
sub
repnz
popf
jmp
mov
add
es
xchg
or
rclb
xchg
xor
sub
aaa
repz
jge
push
sbb
dec
fs
clc
sbb
arpl
push
cmpsl
imul
sub
mov
fisttpll
lret
xchg
mov
mov
dec
add
jmp
mov
xor
inc
fmul
cmpsl
add
xor
bound
cmp
or
js
push
out
push
sbb
imul
jbe
sub
cwtl
and
pause
jns
das
xchg
stos
add
or
imul
xchg
shll
dec
aas
xor
ja
add
cmovg
leave
add
aaa
adc
inc
dec
jo
cmp
jp
loopne
xor
adc
test
cmp
xor
push
in
pop
sbbl
pop
dec
ljmp
pop
or
ja
test
adc
in
and
mov
bswap
cmp
les
add
gs
jecxz
sbb
xchg
pop
push
sahf
hlt
in
stc
pop
iret
push
or
adc
fisubs
push
addr16
popf
inc
add
cmp
dec
mov
stos
inc
add
loope
xchg
aas
add
ss
loopne
mov
and
lahf
push
cmp
xchg
orb
mov
and
dec
data16
jns
call
sub
enter
sbb
shll
sbb
xchg
mov
pusha
pop
repnz
hlt
adc
jb
or
jmp
and
mov
rcr
inc
jmp
and
push
aad
pushf
outsb
pop
jl
pop
jb
cmp
mov
pop
push
or
std
inc
push
and
mov
sbb
add
mov
adc
jmp
and
xlat
mov
jne
sub
dec
add
mov
push
inc
pop
sbb
mov
fcoml
xchg
xchg
not
scas
loop
ja
sbb
cmp
sbb
ss
jge
add
push
gs
jne
dec
jle
cmp
mov
shll
cmp
xchg
add
cmpsl
pop
sti
adc
loop
dec
bound
and
add
xchg
fiaddl
mov
iret
decb
mov
lret
lods
lods
in
in
push
mov
pop
repnz
je
and
xchg
mov
test
dec
movsb
jg
add
push
adc
das
shrl
xchg
jae
add
dec
mov
dec
imul
pop
stos
sub
mov
push
inc
mov
or
push
xor
pop
fwait
call
shrl
push
push
push
andl
sti
sub
push
ret
fists
jb
lock
push
cli
xor
arpl
jo
mov
sub
and
sub
add
mov
cs
aaa
movsb
push
icebp
incl
fsubp
push
cmp
movsb
xor
jnp
adc
outsl
xor
mov
push
or
push
daa
test
popf
cld
leave
or
sub
int
adc
stc
dec
sti
mov
cmpb
fld
sbb
adc
dec
mov
sbb
arpl
loop
lods
sbb
cmpsb
and
daa
mov
push
addb
lahf
mov
test
ljmp
les
repz
cmp
sub
data16
xchg
orb
adc
ret
inc
mov
xchg
ret
jp
mov
lret
mov
cld
cmpsl
stos
pusha
ss
xor
test
mov
and
sahf
loope
xchg
jg
sub
mov
xorl
insb
mov
jle
xor
stc
jae
xrelease
loop
leave
push
xor
dec
add
pushf
and
stos
mov
cs
js
inc
push
sub
pop
dec
sbb
loop
sub
ljmp
mov
jne
icebp
lahf
push
sbb
mov
addr16
lret
adc
lcall
adcb
ss
addr16
dec
mov
imul
addr16
movsl
push
das
pop
jecxz
mov
ja
movsl
mov
push
push
movsb
push
cmp
or
push
push
pop
sub
mov
lock
mov
lahf
mov
out
mov
hlt
push
and
push
xor
jl
shrb
jb
inc
popa
or
sbb
mov
fwait
pop
jne
cwtl
test
lds
stos
flds
cli
mov
push
shr
ja
dec
jae
or
iret
fidivrl
jecxz
push
xchg
loope
sub
dec
mov
inc
cmp
sti
jno
outsb
shll
push
daa
or
and
mov
jae
pop
push
xchg
and
and
test
xor
imull
sub
mov
or
popa
mov
lcall
jnp
loop
jbe
sub
adc
lods
pop
nop
mov
cltd
or
add
mov
aam
rorb
imul
inc
sarb
popf
inc
rorb
loop
mov
sbbl
rolb
xor
mov
shll
add
shlb
inc
xor
nop
lcall
in
loop
repnz
shlb
outsb
mov
movsl
add
mov
lret
sbb
call
int3
push
mov
mov
push
fisttpl
std
or
mov
lcall
mov
daa
cli
aam
add
shl
inc
popf
movsl
mov
mov
lds
mov
loopne
adc
aaa
mov
jne
jmp
fmul
leave
mov
daa
or
lret
nop
out
add
call
stc
sub
fistpll
pop
test
mov
shlb
jg
cli
pop
push
lret
and
sub
orb
mov
mov
inc
fs
loope
adc
pop
loope
jle
sbb
mov
adc
mov
lret
sbb
jo
or
sbb
or
dec
je
pop
aad
std
and
adc
pop
xchg
jge
negl
mov
addr16
sarb
adc
xor
add
push
mov
mov
pop
fxch
scas
je
mov
hlt
xlat
cmp
sub
xor
mov
in
ret
cmc
insb
push
jg
push
cs
movsl
pop
dec
cli
cmpsb
mov
bound
out
fcmovne
dec
xchg
lds
sub
loope
adc
pop
popf
sbbb
mov
xor
push
xor
lods
jle
movsb
ret
bswap
inc
mov
int3
out
or
jno
push
iret
push
movsl
mov
movsl
xor
push
push
inc
adc
pop
push
push
or
xchg
mov
inc
cmp
mulb
and
shll
jns
jl
jae
aaa
push
push
scas
push
and
insb
outsb
mov
inc
inc
dec
pop
ret
insb
mov
rclb
les
pop
nop
lea
sub
imulb
xchg
sbb
arpl
jo
or
or
lods
lock
and
xor
cwtl
mov
inc
fcompl
jne
cmc
jmp
daa
inc
mov
rclb
pop
fbstp
fldenv
mov
mov
dec
mov
in
xor
sahf
inc
jle
jo
pop
sbb
inc
mov
insl
pop
jbe
addr16
dec
repnz
sbb
shrb
xchg
cmp
cltd
mov
ret
pop
lcall
push
nop
iretw
nop
pop
jge
cmp
repnz
xchg
push
enter
push
push
cmpsb
mov
xchg
inc
into
add
add
or
mov
les
in
inc
repnz
pusha
dec
xchg
sbb
test
xchg
sbb
cmp
ds
test
shll
arpl
insb
mov
js
ljmp
into
jno
push
push
push
das
jge
xchg
shr
xchg
cmp
ret
jae
and
xchg
sbb
or
insb
fs
dec
sub
sti
sub
test
inc
sub
sbb
mov
loopne
cld
push
cmp
into
movsl
in
cs
popa
test
test
aaa
aas
and
and
pop
sub
data16
mov
mov
or
test
sub
or
push
orb
sub
pop
hlt
adc
lods
inc
cltd
enter
add
sbb
xor
mov
pushf
xchg
xchg
mov
xlat
pop
arpl
clc
and
rcl
mov
outsl
mov
add
test
leave
pop
mov
mov
xchg
mov
sti
lods
scas
lret
insl
jge
jp
pusha
or
sub
sub
iret
cs
jnp
inc
and
push
fstpl
gs
enter
adc
xor
aaa
loopne
mov
push
pop
push
sub
mov
dec
xor
repnz
jge
flds
cli
arpl
imul
sbb
cltd
or
adcl
adc
mov
sarl
test
and
sub
incb
xor
add
mov
xchg
push
jb
add
js
loope
jmp
push
pop
ss
icebp
push
lods
xor
mov
lds
lods
xor
mov
sub
movsl
rorb
mov
mov
inc
jp
add
xchg
rcrl
mov
sub
fwait
push
lock
aad
jp
out
xchg
scas
sbb
push
mov
sbb
xchg
jge
mov
push
mov
and
xchg
jle
fistl
scas
add
push
fnstsw
es
push
je
inc
mov
rcrl
ds
mov
addr16
fisubl
inc
jnp
sbb
xlat
outsl
cmp
xor
in
jp
push
dec
jecxz
lret
mov
or
aaa
xlat
mov
rcrl
test
pop
int3
negl
ljmp
jne
xor
xor
xor
sub
movsl
inc
push
stos
dec
sub
push
adc
lcall
sbb
xchg
scas
aam
iret
scas
test
cmpsl
push
ljmp
add
rolb
lret
das
xchg
movsb
push
mov
jecxz
popa
push
cmc
ret
push
pop
or
mov
mov
cltd
mov
and
lods
push
ds
mov
out
imul
mov
stos
pop
fsubr
sub
or
cmp
test
mov
cs
or
pop
scas
sub
lock
push
mov
out
or
mov
or
iret
cmc
and
or
js
lods
movntq
out
das
rcl
fcmovnu
pop
sub
mov
xor
mov
add
pushf
inc
pusha
push
adc
add
push
sbb
pop
cld
and
sub
fistpll
shld
cmp
inc
lds
rcrb
xchg
inc
call
insb
mov
insl
mov
inc
mov
mov
aam
or
add
xor
xchg
sbbb
add
cltd
and
jno
push
repnz
dec
mov
inc
push
clc
test
mov
js
and
cmp
call
pop
test
pusha
cltd
pop
jmp
cmp
cmp
cwtl
orl
push
cmp
inc
loope
orb
cmp
test
cli
decb
xor
xchg
lret
push
mov
jnp
int3
jle
mov
push
add
adc
je
and
mov
fisubl
ds
loopne
loop
pusha
cmp
push
aam
mull
insb
movsl
pop
mov
repz
movsl
pop
lds
mov
sub
push
mov
sti
inc
bound
jb
ja
bnd
outsl
sbb
push
lods
sbb
jge
jge
jnp
cmp
dec
jge
push
pop
jl
insl
lea
out
callw
jb
xchg
adcl
aad
test
mov
push
lea
in
add
lods
xchg
in
mov
imul
jb
out
rcrl
loop
cmp
lods
test
fbld
popf
add
imul
cmpsb
mov
js
sub
mov
jecxz
je
inc
outsl
xlat
or
insl
ja
ljmp
push
pop
xorl
rcrl
push
test
cld
sbb
jno
add
inc
mov
mov
cwtl
fadd
sbb
aam
add
lahf
shl
pop
sub
outsl
fisubrl
repnz
into
repnz
add
inc
imul
sub
fidivrl
js
notl
mov
lds
sbb
mov
push
dec
fs
sub
movsb
cwtl
dec
push
sbb
mov
jae
jmp
lcall
xor
fmull
mov
dec
call
add
jae
ljmp
jb
xchg
mov
mov
nop
xorl
cmp
xchg
test
fcmovnbe
ss
int3
xlat
xor
sbb
outsb
scas
add
add
add
dec
enter
and
lcall
rclb
add
int
xlat
cmpsb
jnp
jae
pop
notb
sbb
test
in
inc
lahf
cmc
cld
jle
hlt
jno
scas
loopne
mov
cwtl
pop
xor
frstor
rcrl
dec
or
mov
mov
pusha
xchg
or
lret
pop
test
sub
int
fs
adc
call
jle
cltd
js
cmp
cltd
arpl
outsb
popa
adc
and
mov
insl
lods
xor
pop
pop
jg
andl
jp
mov
jg
pop
addr16
int3
mov
movsb
lret
sub
and
jne
and
fimuls
std
sbb
mov
stc
xchg
sahf
or
arpl
adc
loope
mov
push
aam
xor
adc
jae
das
sbb
xlat
pop
mov
jno
cs
out
mov
xor
incb
mov
mov
xchg
clc
stc
dec
out
cwtl
repz
mov
mov
sbb
mov
jg
clc
mov
dec
add
xor
aam
push
leave
cmpb
shr
inc
nop
cmovbe
rolb
mov
loope
enter
xor
lahf
decb
sub
js
jp
shrb
xchg
je
pop
push
fsubl
mov
popf
mov
xor
mov
leave
movsl
sarb
dec
ret
jecxz
jmpw
xchg
fs
xlat
les
andb
push
sub
sub
adc
add
adc
lret
sbb
lods
jmp
cmpsb
loopne
and
rcrb
into
dec
fiadds
or
xor
sub
lods
imul
je
adc
sbbb
push
std
iret
notl
jno
cmp
sbb
nop
mov
inc
adc
sub
jmp
jb
bound
out
insl
arpl
aas
repnz
push
jbe
out
data16
mov
stc
ror
lds
pop
mov
pop
pusha
test
sub
inc
iret
jbe
jp
mov
mov
jns
add
or
mov
jl
pop
jnp
mov
pusha
outsb
imul
inc
mov
pop
inc
rcrb
pop
mov
imul
mov
or
iret
loope
bswap
mov
inc
movsl
shlb
out
dec
push
das
dec
cmc
inc
repnz
pop
hlt
mov
popa
or
sub
adc
xchg
popa
loopne
xchg
inc
jmp
outsl
mov
movsl
mov
in
sbb
fmull
int3
fnstsw
or
jno
jae
lock
out
xchg
decl
push
aam
outsb
add
mov
movsl
enter
jge
cmp
out
sti
jbe
out
xor
jmp
mov
jg
xchg
jp
push
lods
push
sub
sbb
ljmp
mov
stos
ja
xchg
leave
cmp
dec
or
adcb
push
dec
mov
int
aaa
cmp
js
add
push
cmc
cwtl
aaa
jl
jb
add
out
stos
or
jne
popa
sbb
sbb
rorb
add
in
pop
fwait
xor
push
cmpsb
icebp
hlt
sub
adc
inc
inc
jnp
aad
xor
stos
lock
in
mov
jle
fimull
inc
sub
inc
es
imul
imul
cld
sbb
push
lret
lock
pop
cs
or
outsl
inc
jne
push
mov
cwtl
jae
jle
incb
cmp
sub
cmpsl
aad
fiadds
or
and
sbb
jle
dec
clc
xor
push
and
sub
loope
mov
test
pop
sub
add
mov
or
jle
gs
sbb
fidivrl
stc
sbbl
add
mov
sub
inc
sbb
and
out
loop
repnz
cmp
dec
mov
add
test
lods
cmp
mov
ja
push
add
add
add
push
pop
xor
repnz
sbb
push
or
xchg
flds
andb
fldenv
mov
mov
test
cmp
stos
mov
sub
aas
mov
xchg
push
mov
pop
repnz
mov
push
xchg
mov
and
lahf
inc
sub
mov
hlt
lds
lahf
rcrb
pop
cmc
xor
adc
mov
int
icebp
les
mov
fsubs
xchg
xor
mov
mov
add
les
jg
lret
mov
pop
adc
mov
stos
xchg
xchg
mov
dec
aaa
lods
mov
out
push
cwtl
insl
ror
mov
jae
outsb
jns
jmp
scas
nop
jno
fcmovnu
mov
cmp
or
jle
arpl
daa
dec
fs
inc
addr16
jne
and
adc
jmp
cmp
or
hlt
pop
sub
xor
adc
fmulp
xorb
pusha
mov
hlt
sub
jnp
cmp
xor
xor
pop
sbb
mov
das
lret
test
cmpsl
push
es
inc
mov
xchg
inc
or
repz
es
loope
mov
dec
popa
repz
sub
pop
add
fdivs
in
mov
adc
ret
aam
loop
call
enter
hlt
jo
add
pop
dec
jns
out
cld
xorb
and
push
xor
add
cmpsl
jmp
hlt
push
push
cmp
or
ret
pop
insb
in
add
add
add
cli
mov
in
and
adc
jecxz
jle
in
movsb
push
mov
pusha
cmp
dec
icebp
dec
push
in
sahf
dec
adc
pop
push
icebp
lret
push
and
ljmp
enter
xor
sub
and
popf
or
adc
push
mov
testb
rorl
ret
xor
xchg
movsl
pushf
cmpsb
sub
push
lea
call
mov
or
ret
shlb
fwait
cwtl
cmpsl
lcall
loop
mov
inc
enter
fimull
fldenv
add
scas
stos
push
mov
cmc
andl
pop
add
mov
and
xchg
sbb
gs
mov
sahf
and
subl
mov
inc
cmpsb
fsts
mov
mov
sahf
ljmp
negl
xor
lret
mov
incl
push
add
or
das
in
and
movsb
xchg
sti
and
sub
lea
mov
push
add
ret
xchg
sbb
xchg
lret
test
xchg
lret
xchg
adc
into
add
stos
imul
stc
int
mov
leave
iret
arpl
cmp
sbb
jmp
cld
insl
ds
push
mov
cltd
mov
mov
jno
hlt
insl
stc
xor
xchg
and
xchg
mov
sar
sub
adc
ficompl
fiadds
sbb
jp
mov
mov
ret
pop
and
out
pushf
adc
push
popa
rcl
rcrl
pop
pop
xor
movsl
inc
cmc
jecxz
mov
popf
icebp
dec
aad
pop
orb
pop
cli
daa
mov
stos
repz
daa
loop
push
dec
enter
fldt
and
in
mov
dec
fwait
divb
jp
cmp
in
dec
inc
push
jne
aam
jb
mov
and
mov
daa
pmaxsw
in
jecxz
xchg
clc
mov
into
lcall
rolb
pop
stc
out
add
cmc
dec
mov
lret
xor
cwtl
aam
in
bound
stos
or
dec
out
cmp
es
out
hlt
inc
shrl
or
xor
pop
push
test
fstl
inc
lahf
stc
addb
ds
xchg
and
sub
xchg
nop
das
mov
out
cmp
dec
pop
loope
lods
es
mov
ficomps
shll
insl
or
in
sub
daa
xor
jb
and
out
bswap
aad
in
and
scas
mov
test
mov
mov
aaa
out
lcall
add
or
pop
cli
testl
repnz
out
jg
adc
add
test
fldl
push
xchg
push
mov
adc
loop
arpl
add
loope
adc
loopne
fnsave
pusha
mov
sarb
inc
xlat
mov
adc
ds
fisubrs
and
jae
mov
and
insb
cmpsb
sbb
dec
lods
xchg
insb
clc
lods
stos
push
jbe
cwtl
dec
mov
xlat
cmp
arpl
test
mov
add
fucomi
shll
push
cwtl
mov
sub
in
sub
adc
imul
jge
and
mov
add
cltd
mov
js
daa
add
xor
sbb
or
fs
stos
jns
mov
cmpsb
push
pop
jbe,pn
jbe
loop
mov
adc
fs
xchg
scas
das
pop
je
icebp
sub
pushf
push
sarl
adc
lret
jge
ret
jle
mov
lahf
outsl
xchg
stos
fistps
shr
mov
pop
push
setge
fbstp
cmp
loopne
sbb
je
mov
mov
inc
movsb
or
dec
insb
lods
and
sbb
push
xor
sbb
inc
in
pop
int
repz
mov
lret
xchg
xchg
ja
sub
mov
xchg
popf
sub
out
add
xlat
jmp
mov
and
cmpsb
loope
aas
lcall
jge
daa
arpl
js
out
adc
rcrb
out
or
jno
pop
in
imul
out
xchg
pop
in
arpl
push
test
mov
and
xchg
mov
fnstcw
dec
lret
mov
out
adc
mov
ror
sub
mov
jmp
sub
aas
fisubrs
pop
sub
jo
push
loopne
mov
pop
mov
lret
xlat
pop
dec
shl
pusha
and
sub
int3
mov
sbb
sub
mov
and
pop
popa
xor
mov
mov
ret
sbb
data16
call
dec
cmp
popf
pusha
ds
in
xlat
push
xchg
pop
sarb
js
aas
push
popa
outsl
mov
pop
xor
sub
sub
cmp
rolb
sbb
push
xchg
xor
and
das
jns
jno
andl
pop
pop
jecxz
jge
repz
loopne
rcrb
ja
cmp
stos
sbb
loopne
fnstsw
push
lock
rcr
pop
outsl
add
sbb
test
fdivrl
cs
lea
fxch
mov
pop
xlat
fmuls
cld
aam
in
pop
testl
aas
push
inc
in
or
jmp
and
cmpsb
mov
mov
adc
adc
dec
scas
aas
test
subb
or
xchg
lahf
inc
jns
fdivl
cmp
mov
inc
dec
orl
dec
push
or
push
ds
pop
add
or
jle
xchg
dec
pop
cs
jge
decb
inc
pop
mov
lds
mov
fwait
xor
aas
mov
fildl
lods
call
sub
fxch
xchg
lahf
fbstp
cmpsl
cmp
push
xor
pop
cld
out
in
and
daa
mov
xchg
jl
jp
cltd
pop
xchg
jmp
ss
test
add
push
cmp
mov
sub
or
jl
adc
lods
es
inc
cs
ja
stc
fidivrs
add
xor
jg
jb
fsubs
movb
popa
jle
fisubrl
repz
mov
mov
enter
test
aas
jg
divl
or
aas
xor
jno
scas
idiv
test
pop
cmpl
iret
jo
or
mov
int3
mov
sahf
or
leave
subb
aam
sub
scas
std
lea
inc
and
lea
push
dec
andl
cmp
iret
mov
lcall
xchg
fdivrp
aam
xor
in
repz
ds
inc
fisubrl
mov
inc
sbb
push
push
mov
cmpb
fisubrs
shrl
mov
shll
lods
adc
rorb
pop
xchg
es
push
addr16
mov
iret
hlt
js
mov
int3
push
push
cmc
cld
mov
inc
mov
adc
push
imul
frstor
jns
push
and
outsl
stos
jb
or
aaa
fnop
pop
adc
xchg
add
mov
sbb
iret
fists
cmpsb
cmp
pop
dec
cli
das
sbb
sbb
pop
and
inc
jae
mov
fisttps
jp
into
dec
stc
aam
mov
xor
jmp
cs
clc
test
push
lret
das
jle
sub
insb
pop
pop
ja
sub
jp
sub
mov
adc
inc
xor
cwtl
dec
dec
add
pop
shll
dec
sub
mov
add
cmpsl
inc
add
adc
inc
les
popa
pop
sbb
push
cld
in
mov
inc
jae
outsl
lods
out
test
xlat
shrb
mov
jbe
push
mov
out
clc
das
fmuls
dec
cmp
cs
stos
gs
sbb
cld
outsb
xchg
cs
mov
aas
scas
out
incb
pusha
cmpsl
call
inc
mov
mov
push
repz
nop
ret
daa
aad
js
push
stos
sub
push
push
adc
outsl
cmp
test
and
cmc
pop
jb
scas
rcrb
mov
clc
dec
xor
xchg
pop
and
jbe
jmp
xchg
adc
adc
setnp
in
rorl
add
pop
scas
bnd
aad
mov
and
test
dec
arpl
jp
add
xchg
cwtl
jne
lods
or
xchg
and
lret
lret
mov
inc
mov
imul
test
fldenv
arpl
fldln2
add
push
das
cld
jl
std
jns
sti
call
sbb
mov
xchg
adc
leave
mov
orb
push
ficompl
inc
rclb
inc
xchg
orb
xchg
imull
sub
mov
jmp
movsl
jge
jge
jns
test
mov
outsl
test
jns
or
lock
push
fnstcw
call
mov
or
movsl
xchg
dec
insb
mov
cmc
shrb
fs
sbbb
stc
arpl
test
inc
int
push
pop
neg
frstor
xchg
mov
sarb
jbe
das
mov
scas
cmp
and
mulb
xchg
inc
idiv
cmp
rclb
xchg
sbb
out
into
push
cmp
jb
jmp
jnp
dec
pop
cmc
pop
xchg
fildll
fisubl
jne
in
enter
pop
loopne
xchg
lods
std
mov
imul
pop
push
adc
fwait
das
sbb
sbb
sahf
sub
cmp
push
mov
jb
mov
call
cmp
leave
int3
cwtl
pop
clc
or
add
add
xor
fildll
cmp
or
cmp
imul
push
xchg
dec
mov
std
mov
fstps
les
xchg
aaa
loop
negb
pusha
scas
call
sarl
lock
mov
xchg
nop
sbb
adc
and
dec
jg
fsubrl
stos
fcoml
insl
fisttps
jecxz
mov
add
cmp
dec
aas
fstl
popf
sahf
mov
lret
fwait
scas
out
cmpsl
imull
out
mov
mov
push
sub
mov
int
pop
pop
in
adc
jno
jl
jb
into
outsb
cmp
push
mov
jg
add
mov
or
ret
cmp
xchg
aam
jns
xchg
push
outsb
pushaw
inc
fldt
mov
into
and
inc
lds
and
mov
lret
xchg
aad
in
outsb
stos
mov
icebp
cmp
or
pop
add
mov
scas
xchg
imul
cs
jo
aas
icebp
sbb
sbb
lds
notb
add
adc
push
jle
orb
add
and
add
outsl
out
nop
hlt
icebp
mov
mov
and
xchg
xor
sub
dec
add
xchg
lret
shrl
xchg
add
cmpsb
mov
cmp
icebp
push
fstp
or
negb
pusha
lret
push
cmp
add
lcall
bswap
xchg
repz
repnz
xchg
inc
loop
pushf
jmp
pop
cmp
pop
xchg
mov
and
ljmp
and
or
mov
outsb
dec
popa
add
inc
fisubrl
inc
dec
sti
popa
jmp
sbb
mov
ret
jge
and
jecxz
sarb
in
stos
and
mov
lea
jp
jne
pop
stc
or
aad
pop
iret
cltd
jae
test
sbb
dec
shrb
decb
into
rorl
adc
push
inc
xchg
dec
nop
addr16
jmp
popf
xchg
and
fwait
daa
adc
or
add
lahf
ds
or
stos
mov
or
or
cmp
lds
or
pop
mov
mov
add
adc
sub
filds
pop
dec
shll
dec
xchg
dec
outsl
aad
and
inc
sbb
filds
push
lods
mov
shll
push
pusha
pop
inc
push
rcll
outsl
ret
inc
movsb
sbb
mov
pusha
sbb
adc
pop
andl
fildll
dec
mov
fldl
fldt
cmp
add
in
xor
mov
mov
leave
sub
aaa
xor
pop
xchg
mov
out
or
xchg
mov
push
mov
cmpsl
jmp
pop
jne
scas
stos
leave
ret
sub
shrb
mov
jle
or
add
test
test
and
mov
imul
cmpsl
jnp
loopne
cmp
std
xor
repz
xchg
ljmp
push
xchg
and
mov
ret
loope
add
leave
gs
js
aam
xchg
nop
mov
mov
sti
ds
mov
insb
add
xor
mov
imul
push
ror
ficomps
orl
cmc
in
pop
mov
shll
add
lock
fildll
jnp
jmp
divb
lods
pop
or
std
lods
jno
cs
mov
faddp
repz
xchg
mov
cmp
js
stos
sub
ja
fiaddl
xchg
xchg
clc
push
or
cmp
add
mov
iret
sbb
jecxz
and
cmc
cmp
dec
sti
insl
rcrl
int
and
xor
mov
fisubl
nop
inc
std
mov
inc
xchg
jb
cmp
mov
js
sahf
imul
int
movsl
into
in
test
hlt
cli
add
lret
sbb
adc
pop
lret
sbb
mov
iret
sub
roll
cltd
adc
pop
cmpsl
inc
inc
xor
aam
ret
dec
ds
adc
xor
mov
cmp
out
dec
cmpsb
cmpsb
sub
dec
iret
int3
shrl
or
aam
mov
xchg
pop
adc
hlt
jle
pop
jno
jecxz
icebp
mov
int3
push
cmc
jg
inc
push
mov
lcall
mov
xor
dec
or
pop
jg
and
and
cs
jmp
xchg
inc
fisttpll
data16
pushf
xor
inc
and
arpl
ja
jne
shl
xchg
jmp
cltd
movsb
cmp
xlat
sbb
fdivs
call
fdiv
add
add
add
inc
out
push
ds
sahf
loope
int3
mov
orb
inc
inc
pop
mov
call
clc
sbb
inc
jb
xor
push
and
pop
or
js
pop
int
popa
sbb
push
xor
js
or
adc
bound
out
fadd
jno
add
push
test
loopne
inc
das
leave
pop
inc
pusha
sub
test
xorl
les
jnp
dec
iret
sbb
std
add
cltd
fcmovne
or
popa
and
js
jno
mov
xchg
mov
add
jb
lds
inc
jnp
out
outsb
cltd
das
add
pop
out
push
test
aad
adc
push
pop
mov
popf
je
add
jns
dec
sub
xor
sti
mov
sub
lods
cltd
cwtl
movl
les
cmp
pop
xchg
and
fmull
mov
scas
fadd
gs
loopne
rorl
movsb
out
shlb
xchg
fcos
mull
jg
int3
xchg
loop
lods
lcall
xchg
lcall
inc
xor
icebp
jp
add
out
jns
ret
push
push
ret
mov
rcrl
iretw
cmp
pop
xchg
cmp
jns
cwtl
es
nop
mov
mov
jb
repz
setno
push
mov
xor
push
pop
inc
insb
dec
stos
pop
mov
ret
inc
xor
nop
sub
cmp
arpl
fcmovnb
outsl
pmovmskb
lret
add
in
test
adc
das
cmpsl
sub
repnz
cmp
inc
inc
loope
sub
mov
pop
cmp
loope
insl
es
outsl
mov
mov
pushf
repnz
ror
outsb
pop
cmp
jnp
dec
ljmp
adc
cwtl
inc
jne
arpl
hlt
movsl
daa
xor
int
cmp
lcall
lcall
idivb
ja
stc
add
aam
pushf
pop
or
inc
or
dec
and
or
cld
subb
jbe
sahf
sbb
roll
pop
shlb
div
sub
lods
loope
scas
fsqrt
outsl
mov
inc
xchg
mov
xchg
and
pusha
pop
lahf
push
shrb
fisubs
je
pop
outsl
push
dec
dec
lcall
setl
or
movb
mov
in
stos
jle
jb
push
int3
in
addl
push
add
adc
dec
int3
aad
jge
sahf
scas
cmp
or
popf
pushf
xor
pop
loope
jp
test
mov
popf
jp
push
in
lcall
adcl
mov
mov
mov
cmp
jecxz
pop
aam
push
sub
dec
xchg
insb
je
jns
fildll
subl
xorl
loope
gs
dec
mov
rol
push
in
ret
adc
pop
pop
lea
inc
xadd
jg
xor
ret
mov
hlt
xchg
and
nop
addr16
sub
jmp
push
outsl
repz
daa
pop
outsl
sub
pop
dec
ret
push
js
inc
push
imul
testb
mov
cmp
fcoms
pop
les
in
outsl
mov
shrl
mov
insl
sbb
sbb
lret
int3
clc
push
fs
fsts
xlat
inc
sbb
xor
shr
mov
shll
inc
mulb
or
sub
pop
sahf
insb
cmp
out
pushf
cmc
xorl
rcl
mov
or
cs
pop
dec
lock
and
ja
jns
daa
fwait
movsb
jno
ss
cmp
push
popf
das
fs
and
je
mov
shlb
push
imul
test
pop
aam
pusha
hlt
ror
ja
ret
or
cmp
dec
dec
es
jmp
into
mov
mov
iret
add
fimull
lods
cwtl
add
adc
jg
mov
fwait
xchg
cmpsb
sti
aas
movsl
sub
fnclex
insb
push
mov
mov
sub
pop
pop
jecxz
cmp
aaa
adc
dec
mov
dec
cmp
jg
lahf
pop
pushf
sub
hlt
mov
mov
loope
rcrl
jmp
roll
pop
jo
sub
cmc
add
cmpsb
mov
push
sub
bound
fsubp
cmovnp
pop
in
in
lret
inc
pop
std
das
nop
sbb
enter
sub
xchg
aam
sti
repz
lds
push
popf
cmp
andb
dec
pop
js
icebp
insb
loope
repz
jb
daa
push
test
aas
shrb
icebp
sbb
inc
push
xor
mov
int
cmp
dec
push
or
and
push
rcrb
push
xchg
and
pop
add
inc
jo
fimuls
adc
mov
lahf
xor
outsl
push
out
mov
js
test
js
dec
pop
gs
aas
int3
ret
or
mov
adc
xor
cwtl
loop
fisubrl
xor
push
repnz
xor
xor
lcall
inc
or
cmp
sar
mov
sbb
pop
jnp
test
aad
js
jecxz
daa
sbb
mov
mov
jg
jae
adc
push
out
adc
pop
push
push
or
dec
jle
adc
mov
lret
or
push
dec
pushf
pushf
and
loopne
lods
xchg
adc
fnstsw
enter
and
lcall
xor
push
lea
packssdw
jle
mov
or
fidivs
xor
cmc
ljmp
push
stos
adc
in
adcl
pop
inc
adc
push
vdivss
cmp
int
sub
inc
fwait
shl
mov
std
jae
icebp
icebp
outsl
mov
hlt
mov
loopne
negl
push
xor
inc
pop
push
dec
clc
idiv
negb
les
or
mov
dec
popa
lock
imul
xchg
ljmp
outsb
mov
xchg
inc
pusha
daa
sub
scas
jne
and
ret
and
pop
aam
push
lea
cmp
mov
rcrl
mov
rclb
movsb
call
and
or
test
icebp
mov
mov
sub
sbb
jp
and
mov
and
andnps
aad
nop
push
cltd
mov
adc
es
jns
and
lcall
fidivrl
je
out
hlt
xor
mov
add
fnstsw
ds
lcall
leave
stc
sub
adc
iret
sarl
shrl
pop
add
inc
fdivr
add
and
movsl
pop
and
sbb
xchg
sbb
lds
xchg
xor
mov
push
repnz
sti
ljmp
xchg
cmp
insl
or
jg
stos
hlt
aam
sbb
scas
jo
push
rcl
ret
mov
mov
mov
adc
aaa
lret
lock
rol
out
lods
add
inc
or
mov
pop
cwtl
mov
sbb
shl
add
and
push
insl
xchg
add
popf
push
xchg
add
aaa
add
xchg
test
adc
int
jnp
sub
xor
daa
scas
ret
sub
imul
jbe
pop
xlat
call
xchg
enter
cld
movsl
push
lea
stos
xchg
and
xor
cmp
in
fwait
out
jnp
and
inc
arpl
in
sub
lods
dec
pop
xchg
or
out
jp
arpl
sub
fs
loopne
in
pop
and
test
mov
mov
popa
inc
push
enter
mov
add
outsb
mov
add
push
int
dec
mov
cmp
adc
repnz
stos
ret
pop
mov
fisubrs
std
ljmp
out
push
cmpsb
pop
or
nop
and
aam
pop
mov
cmpsb
mov
cmp
stos
inc
jo
cmp
push
mov
cmp
cmp
enter
pushf
js
pop
and
sti
enter
cs
inc
pop
mov
mov
pop
xchg
push
andl
push
mov
sub
mov
push
xor
cmp
popa
xchg
aam
adc
xchg
leave
mov
dec
jbe
out
adc
or
push
jne
ljmp
and
dec
jmp
bsf
fcomip
pop
aad
xor
jge
adc
cmc
clc
xor
and
ja
jne
jnp
or
nop
in
lret
repz
imul
cmp
leave
aas
sbb
sbbl
push
popf
daa
ja
add
cmp
rclb
loopne
jle
pop
xchg
add
jge
lods
sub
imul
mov
or
cmpsb
mov
aas
lcall
mov
icebp
fmuls
add
add
out
cmpsl
jns
mov
insb
lret
push
pusha
icebp
pop
dec
jmp
pop
mov
dec
lret
or
pop
movsl
mov
pushf
js
jnp
inc
push
sub
inc
push
sbb
ret
lods
lret
inc
stos
dec
and
lret
loop
stc
dec
mov
push
scas
add
or
push
mov
mov
out
sbb
int3
mov
jno
bound
addr16
pop
xchg
mov
xor
push
add
nop
or
pop
xor
push
mov
mull
adc
inc
cmp
and
add
fcomi
es
daa
lods
cmp
jge
lret
in
cmp
shll
int3
mov
out
mov
mov
int3
inc
jg
scas
pop
xchg
iret
jp
test
test
add
add
aaa
xchg
ret
das
dec
test
scas
jb
jmp
loop
cmp
jp
or
add
testb
inc
mov
mov
sahf
xchg
sub
stos
push
xchg
jo
fsts
inc
jo
sbb
mov
xor
fincstp
jb
mov
fcompl
cmp
ficomps
imul
dec
int
mov
xorl
in
adc
fmull
jne
cmpb
sub
dec
mov
les
sbb
cmp
add
lret
xchg
mov
adc
bound
or
hlt
dec
jmp
test
jb
les
popf
popa
push
mov
cmpl
int3
aas
loop
mov
xchg
arpl
fs
es
mov
js
sbb
push
mov
mov
mulb
and
cmpsb
sub
adc
xchg
add
clc
sub
pop
movb
aaa
insl
fsubl
jbe
lods
jae
pop
lahf
push
lret
fs
int3
arpl
inc
push
in
test
inc
add
sbb
pusha
je
adc
jge
clc
mov
les
add
in
cltd
inc
mov
dec
mov
pop
xor
sbb
ret
mov
xchg
inc
mov
imul
push
sub
mov
sahf
add
mov
and
in
faddl
mov
ss
dec
es
cmp
jnp
sbb
pushf
adc
daa
mov
xor
sub
mov
outsb
imul
adcb
das
adc
test
movsb
mov
xor
inc
popa
push
mov
cmc
and
add
jmp
popa
xor
pusha
dec
and
cltd
in
sub
popa
adc
inc
and
out
cmpsl
mov
mov
jge
xor
dec
xchg
mov
std
mov
imul
loopne
cmp
xchg
push
mov
sub
xchg
mov
and
out
fs
inc
sbb
and
mov
cmp
xchg
or
clc
int
stc
aad
inc
fwait
xlat
sbb
mov
jge
ret
pop
in
sahf
push
aam
jb
mov
aam
dec
jnp
inc
or
xchg
sbb
mov
xchg
ret
outsb
jbe
and
imul
and
pop
sbb
add
sbb
fs
daa
aas
in
mov
mov
jo
lret
into
arpl
or
and
aam
push
add
or
mov
mov
enter
xlat
cmp
xchg
movsb
sub
xchg
add
push
xor
adcb
fs
dec
cmp
iret
addr16
or
out
xor
adc
jns
scas
mov
dec
add
sbb
hlt
ret
cli
dec
mov
mov
adc
loop
frstor
int
jmp
xor
pop
cmpb
mov
in
adc
jno
push
sub
movsl
push
push
into
add
mov
add
lret
frstor
insb
leave
cmp
insb
inc
push
push
ret
push
insl
scas
pop
jnp
jne
and
int
out
hlt
mov
and
adc
fsubrs
mov
out
mov
shrb
dec
pop
xchg
xor
lods
or
arpl
sub
mov
mov
movsb
neg
add
mov
ficompl
xchg
jmp
adc
jo
push
lods
or
push
push
imull
or
push
mov
hlt
pop
and
cmp
testl
punpcklbw
idiv
cmp
gs
or
loope
sti
jg
or
jbe
mov
sbb
fistpl
pop
movsb
inc
adc
in
sbb
inc
or
pop
andb
je,pn
push
pop
mov
inc
add
mov
loop
mov
mov
andb
pop
cmc
lock
pop
jp,pt
loopne
clc
shrb
dec
cmp
mov
clc
leave
and
cmpsb
add
jnp
ficoms
inc
lahf
push
ficompl
dec
mov
mov
pop
int3
mov
imul
push
add
sahf
mov
lcall
sbb
xor
repz
test
scas
mov
mov
arpl
out
mov
subl
sbb
aam
xor
xchg
xchg
xor
mov
push
jmp
jno
sbb
dec
lret
loop
or
scas
mov
or
cmp
push
dec
lea
rorb
ficoms
mov
mov
cmp
mov
jne,pt
dec
sub
push
sub
mov
and
or
sub
mov
mov
in
in
sub
sbb
inc
xlat
mov
pop
adc
sbbl
sub
inc
sahf
pop
imulb
push
test
jae
or
xlat
fcomi
in
push
dec
and
sbb
xchg
mov
es
push
inc
lea
and
fisubrs
and
into
aad
jae
loope
push
test
mov
xor
stos
xchg
xchg
out
lods
pop
int
orl
inc
push
fnsave
mov
std
xchg
sbb
or
cld
sti
sbb
stos
call
shll
mov
js
loope
sahf
and
mov
mov
scas
xor
cmp
mov
or
fstpt
outsb
ret
stos
imul
ret
sti
adc
mov
xor
std
mov
enter
arpl
sub
mov
je
aas
mov
and
aas
test
pusha
jnp
push
mov
sti
mov
pop
iret
or
std
cmpsb
jae
imul
dec
jae
subb
addl
lahf
push
fwait
arpl
mov
jnp
clc
fildll
dec
or
mov
cmp
xchg
adc
aad
arpl
or
sbb
jo
jmp
sub
jecxz
nop
ret
stc
cmc
scas
push
adc
repz
into
out
inc
insl
pusha
xchg
add
jmp
and
aaa
inc
mov
or
aam
mov
push
out
pop
mov
gs
repz
adc
arpl
je
sub
js
xchg
cmp
test
into
sub
in
add
mov
loope
add
push
add
fisubrl
dec
out
mov
push
jle
sbb
jecxz
push
jns
imul
mov
stos
rcrb
cmp
pop
lcall
jl
fiadds
xor
push
add
pop
in
test
push
ror
pusha
in
cmc
xchg
jle
cmp
mov
mov
dec
add
push
add
mov
lock
rcr
and
sbbl
cmp
cmp
pop
inc
mov
cs
and
mov
enter
gs
lea
sahf
adc
sbb
sbb
test
mov
mov
popf
mov
mov
push
adc
pushf
loope
xchg
shl
mov
xor
sub
mov
je
jmp
jl
stos
rorb
insb
xor
aas
mov
insb
scas
ljmp
jno
pop
ds
cmp
pop
xor
stos
rcr
dec
sub
sbb
pop
mov
shlb
add
sub
inc
mov
sbb
call
cmpsb
jae
mov
jno
iret
out
mov
int3
xchg
loope
or
test
push
xor
dec
or
rcrl
stc
mov
movsl
pop
out
pop
lea
outsl
bnd
movsl
scas
inc
out
in
sub
mov
mov
sub
inc
cmp
imul
popa
mov
ret
mov
sahf
add
cmp
jmp
iret
jbe
and
mov
jg
lds
popf
js
jbe
nop
decb
push
push
movsb
push
mov
push
jle
cli
das
icebp
jns
cmpsb
popa
cmp
test
jl
mov
scas
lret
jecxz
dec
rorb
rorl
jecxz
stos
sbb
xchg
mov
jle
mov
mov
push
mov
in
mov
mov
daa
pushf
mov
insb
loop
stc
mov
jne
push
bound
xchg
sub
movq
pop
mov
mov
or
xchg
and
std
lods
fwait
push
idiv
mov
in
cltd
cli
sarb
cld
int3
nop
loopne
pop
aam
fldenv
loopne
inc
add
cmp
xlat
bound
dec
arpl
mov
pop
es
mov
lahf
insl
jmp
adc
movsl
push
adc
and
lds
lods
push
jnp
int3
bound
pusha
jnp
arpl
sbb
mov
aas
popa
xchg
enter
mov
or
push
shlb
movsl
fcmovnbe
jge
adc
cli
pop
inc
adc
xor
inc
dec
ficompl
xchg
mov
out
mov
push
mov
push
ja
ds
mov
xchg
ja
sub
xor
mov
es
push
insb
xor
negl
andl
rorb
push
sbb
dec
sub
dec
push
sbb
jne
insl
adc
hlt
lods
je
mov
popa
outsl
imul
mov
ljmp
add
mov
cld
push
mov
dec
idivl
addr16
jg,pt
mov
mov
sahf
test
sub
lock
push
adc
lods
mov
mov
ja
sbb
inc
xor
mulb
bound
sub
gs
cmc
xchg
lods
iret
jo
mov
sbb
jae
arpl
lret
stc
dec
aad
pop
jb
push
xchg
fdivrs
mov
inc
pop
pop
inc
xchg
ret
mov
dec
bound
aaa
fwait
lock
inc
je
loopne
negb
ds
mov
loopne
popf
bound
out
and
inc
imul
lods
into
or
scas
push
mov
addr16
lods
xor
icebp
sub
inc
js
scas
mov
dec
mov
cmc
cmp
mov
int
pop
insl
jg
jns
dec
pop
insl
ret
push
pusha
cmp
push
dec
out
xchg
sub
and
jp
mov
shl
xor
and
outsl
pop
xchg
push
xchg
lret
int3
cmp
and
loopne
push
arpl
jmp
jge
adc
flds
addr16
enter
jecxz
lret
mov
ja
pop
lret
or
dec
pop
es
aas
cmp
aad
scas
lock
add
dec
or
xchg
iret
mov
stos
jo
rcr
xor
outsl
dec
xchg
sbb
add
iret
je
inc
xchg
xchg
and
or
test
enter
cmpsl
push
nop
lcall
movsb
sub
and
popa
jle
inc
xchg
bound
pop
pop
cwtl
pop
test
aaa
pusha
lods
inc
out
adc
in
adc
dec
jbe
idiv
and
mov
icebp
pop
and
xchg
shl
or
hlt
lock
lods
jl
shrb
xchg
cmp
dec
fmulp
bound
shlb
push
lret
push
mov
pop
dec
pop
cli
xor
mov
jecxz
fwait
ss
xor
cld
ds
jge
shrl
jae
adc
push
loop
pop
pop
popa
sub
inc
sub
out
inc
dec
sbbl
sbb
xor
jmp
rcrl
cli
mov
lea
sub
fstps
cld
jno
xchg
and
jne
jne
test
sbb
mov
aaa
call
push
cld
sbb
inc
cld
outsl
push
orb
out
sub
xchg
in
pop
mov
adc
jecxz
test
fstpl
push
xchg
outsb
outsb
lcall
push
inc
daa
xchg
pushf
and
pop
cmpsb
mov
sbb
adc
cld
les
sbb
ss
cmp
das
jg
repz
leave
mov
testb
in
inc
jnp
cmp
mov
mov
inc
aad
mov
cmpsl
test
addr16
pusha
aad
adc
sub
dec
xchg
sub
jg
inc
test
stos
roll
push
xor
push
ja
xchg
fbstp
mov
pushf
leave
pop
jle
fidivs
mov
xchg
cmp
cmp
adc
cmp
sti
das
mov
arpl
add
out
jle
test
add
in
sbb
out
call
in
test
inc
inc
xchg
cmpsb
cmp
nop
cmpsl
push
nop
lahf
adc
std
push
and
subps
push
mov
inc
jmp
scas
mov
rorl
jl
push
jne
dec
icebp
in
jle
add
je
cmovnp
push
pushf
pop
mov
add
pop
test
popa
mov
imul
xor
imul
scas
mov
mov
lret
fdivrl
loopne
js
dec
dec
shlb
push
mov
inc
in
aad
jo
jne
mov
pop
mov
xor
jno
scas
imul
pop
insl
adc
push
sub
imul
mov
incl
xlat
push
xchg
rorl
mov
push
hlt
adc
aad
shll
add
add
inc
sbb
scas
push
sti
pusha
or
negb
adc
test
cmp
mov
fidivs
pop
div
mov
pop
xor
jb
mov
std
mov
inc
and
in
or
mov
sbb
fnstenv
push
test
into
push
mov
xchg
divl
aam
sub
imul
push
daa
shl
adc
out
lret
inc
les
jb
ret
test
pop
inc
xchg
xor
mov
arpl
dec
les
and
add
mov
fucomip
clc
push
and
aam
and
leave
xchg
int3
and
and
adc
push
pop
shrb
lods
mov
push
insb
leave
add
or
mov
push
out
add
inc
xorb
or
lds
nop
std
cmc
mov
std
andl
mov
mov
adc
fwait
xlat
xchg
movsl
in
xchg
jge
cmp
daa
fs
sahf
push
pop
push
fld
and
inc
add
sbb
or
add
mov
or
push
xor
mov
enter
fwait
aam
inc
inc
fpatan
or
enter
xlat
mov
mov
iret
xor
in
ss
xchg
xor
roll
stc
sbb
mov
stos
ljmp
dec
dec
mov
pop
lret
in
jo
fucomip
push
sbb
inc
jge
jecxz
fstps
das
test
dec
mov
enter
xchg
xor
lock
lods
dec
sets
dec
aam
push
sub
int
pop
or
adc
in
fs
xor
cmp
or
xor
and
push
aam
cmpsb
xchg
enter
adc
dec
mov
mov
dec
mov
xor
idiv
cwtl
dec
push
in
xchg
jl
rorl
pop
mov
rorl
fiadds
lahf
push
and
and
push
add
in
sub
mov
popf
test
push
and
mov
inc
dec
mov
scas
lea
ja
addr16
cltd
mov
ja
test
enter
dec
cs
mov
enter
push
leave
jle
inc
adcl
data16
dec
sbb
imul
sti
aad
fdivrs
shll
icebp
push
or
dec
inc
into
int
sub
arpl
mov
mov
lret
cmc
lock
out
dec
fs
cmc
fwait
mov
fnstenv
lock
ret
into
cld
inc
sub
dec
jle
inc
scas
mov
inc
inc
int
aad
xchg
inc
cmc
jbe
fadd
xchg
sbb
scas
xchg
or
sub
lret
shlb
xchg
lahf
jg
ss
in
stos
fidivs
aaa
push
out
xor
mov
jae
cmp
outsb
and
jmp
cmc
div
and
dec
cmc
mov
lcall
mov
icebp
in
adc
xchg
mov
fsubs
fldt
pop
mov
sahf
jmp
cmp
int
sub
or
pop
popf
dec
adc
lods
jbe
sub
mov
jle
mov
jno
cmp
cs
mov
scas
int3
out
jmp
rcr
sbb
ret
iret
cmc
fnstenv
xchg
pop
mov
ljmp
lock
les
out
xor
call
loop
cli
scas
mov
lock
or
xorl
xchg
lods
add
mov
dec
jne
jmp
push
mov
inc
mov
fstl
pop
fldt
pushf
push
mov
mov
cmp
es
pusha
aam
xor
cmp
jmp
cld
mov
jge
jno
test
cmp
imul
pushf
mov
divb
mov
sbb
pop
cmpsb
sub
imul
ret
mov
mov
frstor
or
inc
xchg
sbb
push
cmp
jge
add
push
jmp
inc
test
cmp
mov
dec
jmp
in
jno
sub
in
add
and
int
rorl
out
inc
mov
and
mov
adc
mov
sti
add
pop
xchg
repnz
jle
pop
test
xchg
xor
imul
rcr
arpl
mov
cmp
jge
outsl
add
dec
mov
loope
popa
shrl
pushf
xor
xlat
int
flds
jnp
loopne
or
pop
sbb
testl
jl
adc
dec
mov
mov
je
adcb
cli
cmp
cmp
shlb
dec
scas
or
xor
add
icebp
pop
mov
cmp
fnstenv
in
xchg
pop
roll
dec
dec
inc
pop
or
xchg
pop
lret
mov
xor
movsb
ret
lods
and
mov
sar
xchg
das
out
andb
stos
out
loop
adc
fwait
and
aad
xorb
fsubr
arpl
or
rol
pop
cltd
in
test
dec
lret
sub
fidivrs
insl
ret
mov
fs
xchg
addl
or
ljmp
dec
push
pop
outsb
jp
in
nop
mov
jl
add
fwait
and
cmc
cltd
push
jle
shr
rclb
fwait
sub
lods
lods
cltd
andb
mov
imul
cmpsl
cltd
movsl
mov
push
iret
and
arpl
ljmp
lret
test
xchg
xor
push
js
shl
loope
cmc
pusha
addb
out
out
mulb
mov
lcall
sbb
mov
inc
pusha
cmp
in
xchg
mov
add
xorl
scas
sub
sti
jo
dec
rclb
jge
jmp
xchg
xchg
mov
xchg
mov
fwait
cmp
data16
xorl
pushf
dec
jl
sbb
inc
jl
cmc
push
ljmp
push
push
jbe
mov
cmpl
neg
insb
fstpt
jle
dec
or
mov
sub
pop
aam
xor
ja
pop
int
fists
ljmp
xor
push
cmc
cli
pop
and
mov
mov
pop
shlb
inc
das
lds
loope
sarb
cmp
mov
pop
bound
lods
loopne
sub
jno
cmp
fsts
pop
push
inc
xchg
out
rep
xor
cmpb
shl
daa
aas
mov
movsl
rcr
adc
mov
xchg
aas
enter
lods
ss
leave
xchg
lahf
cmpl
dec
jne
dec
andb
rcll
push
xchg
shll
ss
sbb
aam
cmp
shll
pop
mov
dec
repnz
cltd
call
xchg
dec
and
xchg
sarl
stos
and
repnz
subb
es
jp
sahf
insl
mov
jge
push
jns
cmpsb
rcr
mov
stc
mov
cld
xchg
jmp
das
xor
fistl
xchg
movsl
sbb
dec
lock
cmp
mov
test
jno
in
and
cmp
insb
stos
jae
scas
insl
nop
jmp
cmp
or
push
jmp
addr16
jo
pushf
repnz
jne
fdivs
and
jae
aaa
ljmp
xchg
jne
arpl
sbb
aad
adc
int3
xchg
das
sbb
int3
jp
loop
out
sarb
or
sub
adc
xchg
cwtl
gs
sahf
stos
adc
je
add
arpl
scas
jbe
pop
hlt
mov
jno
and
pop
adcb
jo
add
pop
fsts
jmp
arpl
ljmp
add
in
enter
jnp
sbb
ds
lret
xchg
xor
or
jno
insb
lret
push
inc
outsl
xor
push
push
ds
hlt
imul
int3
and
stos
fiadds
lcall
xlat
or
mov
push
add
cmpsl
cli
repnz
arpl
cli
jl
jle
lock
mov
mov
inc
stos
mov
and
or
jae
sbb
pop
call
lcall
je
test
or
xchg
jb
shll
add
sub
pop
out
or
fdivrp
aaa
or
xchg
shrl
int3
sub
insb
scas
in
xor
dec
scas
lret
test
inc
or
aas
ljmp
mov
cmc
loopne
xor
sub
loop
sbb
jle
testb
sbb
push
mov
inc
outsl
jmp
xchg
jns
lret
leave
cmp
out
push
mov
jecxz
cmp
push
mov
fisubrs
add
push
in
ljmp
std
adc
mov
dec
jo
xorb
insb
mov
inc
pop
loopne
lea
add
and
xchg
sub
in
pushf
xchg
cmpsb
cmp
pop
lods
push
in
lret
xlat
cmpsb
pushf
mov
xchg
hlt
cmc
mov
jp
dec
das
cld
or
xchg
adc
lods
lods
out
push
sbb
sub
aaa
in
stos
fmull
sub
out
xor
inc
adc
mov
gs
pushf
shll
insb
fwait
mov
sbb
movsl
jp
mov
arpl
xchg
pop
and
shlb
mov
cmp
in
dec
call
jae
leave
push
es
int
cmp
loop
mov
lcall
call
adc
bound
jne
rcll
mov
push
stos
cli
les
mov
in
das
and
lret
cmp
inc
enter
mov
pop
cmp
add
adc
pusha
fisubrs
or
mov
push
testb
fimull
adc
jge
mov
dec
lahf
pop
loop
mov
push
lret
enter
mov
divb
ja
aaa
mov
inc
sub
xor
xor
sbb
lret
sahf
add
aaa
and
sbb
outsb
cmp
push
jo
dec
sub
and
xchg
add
out
xor
stc
or
xchg
cmpl
decb
inc
fwait
and
into
adc
sub
cmp
and
pushl
cwtl
and
sbbb
push
ret
sbb
xchg
cs
int
les
push
gs
dec
frstor
mov
repz
out
out
out
subl
into
sbb
cmp
mov
leave
test
stc
cmp
lcall
aad
aaa
push
and
pop
movsl
cmpsb
out
nop
out
sti
inc
loopne
ja
dec
dec
jno
repz
push
fwait
popf
aas
inc
ljmp
dec
xchg
fnsave
pushf
into
inc
fisubs
jl
clc
inc
push
mov
scas
in
cmpsb
jp
or
pop
cmp
inc
loopne
cld
xor
cmp
lahf
inc
fnstcw
xchg
or
addl
add
adc
mov
mov
mov
adc
add
insb
js
xchg
ja
cs
dec
scas
pop
scas
jmp
or
fistps
outsb
sahf
push
xchg
pop
xchg
mov
std
push
rorl
sbb
sub
inc
pusha
adc
data16
fmull
loopne
cs
xor
rorb
pop
jmp
ret
iret
addl
xlat
fildll
out
push
mov
sub
outsl
adc
int
pop
add
lret
aam
add
sub
lods
push
or
stos
and
mov
nop
pusha
mov
aam
xchg
lahf
push
stos
stos
mov
rolb
jnp
test
xrelease
sub
cmp
pop
pop
mov
cmp
push
or
out
adc
and
cmc
jno
fisttpl
pop
sbb
shr
or
jo
xor
adc
movb
popf
dec
or
lock
fwait
ret
xchg
mov
pop
xor
pop
cmp
ja
test
cltd
rorb
call
js
dec
sar
fcmovbe
enter
xor
mov
cmp
xorl
mov
mov
std
adc
or
out
outsb
push
mov
test
loop
fwait
sub
out
mov
mov
shl
or
push
cltd
sbb
mov
jno
mov
js
add
pop
cmp
mov
xchg
mov
fidivrs
stos
mov
cld
fldenv
mul
mov
icebp
shl
inc
xor
dec
xor
daa
mov
push
pop
shrb
mov
jbe
loopne
daa
jecxz
pop
sbb
mov
and
xor
adc
cmp
loop
or
or
push
aaa
sahf
dec
lea
adc
xor
ja
xlat
dec
popa
sbb
bswap
pop
pusha
mov
pop
mov
hlt
ficoml
and
call
ret
stos
mov
push
and
scas
pop
and
jae
int3
sarl
xlat
mov
xchg
push
lahf
jl
xchg
jb
mov
hlt
leave
aad
adc
inc
xlat
jno
loopne
cltd
sarl
sub
sub
in
pushw
jae
scas
stc
pop
pop
bound
fnstcw
lahf
fisubrs
mov
sub
sbb
js
gs
dec
and
sbb
jns
mov
outsl
inc
pop
cmp
jecxz
fdivl
mov
mov
sbb
cltd
inc
mov
aam
cmp
scas
div
test
dec
add
pop
or
push
test
mov
mov
aam
lcall
pusha
sahf
cli
in
cld
lds
cmpxchg
pop
add
xor
cmp
push
cmpsb
jns
shll
pop
in
mov
das
roll
jmp
lcall
pushf
or
sbb
sub
cmp
pop
pop
mov
inc
dec
sbb
rcrb
loop
sbb
pop
aas
jle
mov
sbbl
pop
pop
lret
lods
cmpsb
cmp
cwtl
push
pop
add
jbe
aad
adc
xchg
and
and
dec
dec
mov
mov
jne
mov
mov
rorb
dec
and
adc
js
testl
insb
das
sahf
ljmp
mov
add
dec
jl
test
repnz
lds
inc
cmp
lods
xor
cld
dec
cwtl
fwait
add
mov
les
sarb
mov
loope
cs
pop
jae
jb
adc
or
shrl
mov
jle
clc
jae
jp
lret
sbb
sbb
jns
mov
adc
push
adc
xchg
inc
test
push
mov
imul
xchg
ljmp
dec
andb
ficoms
xchg
adc
inc
data16
imul
pop
xor
negl
push
push
jns
rcr
mov
push
ss
xchg
in
pop
inc
mov
daa
xor
push
gs
mov
mov
and
dec
xor
and
sbb
push
mov
jne
data16
int3
inc
scas
insl
loop
or
loope
lea
hlt
dec
lret
int
lahf
push
xchg
mov
push
xchg
pop
fxam
js
ljmp
call
fiadds
lret
es
and
fcompl
sahf
cmpsb
jge
jnp
rolb
mov
lret
cmpl
out
int3
mov
sbb
pop
fs
dec
xor
pop
shrb
repnz
arpl
jecxz
mov
sti
fstp
xor
lea
pop
xor
sub
jno
jp
dec
push
cmp
mov
dec
sbb
scas
jle
jge
mov
jae
add
dec
ljmp
stos
inc
jno
jp
xchg
test
and
shlb
adc
push
dec
pop
leave
stos
in
sub
jbe
dec
idivb
fwait
mov
cmp
shl
xchg
test
and
fstpl
data16
mov
xchg
jno
inc
fmul
subl
mov
fldcw
adc
out
icebp
xchg
push
sub
fwait
mov
in
imul
sbb
sahf
enter
les
lods
test
jae
push
dec
out
push
push
outsb
sub
je
pop
daa
push
ret
jb
mov
andb
adc
popa
push
test
insl
rcrb
xchg
jo
mov
out
aaa
repnz
inc
cmp
or
nop
leave
and
lock
jbe
push
inc
pop
dec
pop
iret
lods
inc
movsl
pop
arpl
xchg
les
xorb
xchg
sbb
es
pop
clc
std
sbb
ret
fwait
ja
xchg
push
lahf
pushl
rcll
cmp
push
mov
mov
sub
cmc
jno
loop
or
cmc
test
cmp
orb
cs
out
cmp
add
shll
push
mov
and
fcomps
in
sti
lret
pop
dec
jle
stos
push
aas
fsubrs
mov
mov
sbb
call
mov
dec
ljmp
mov
xor
xlat
fisubs
mov
jne
std
jle
outsb
push
mov
mov
pop
addr16
jecxz
add
pop
mov
roll
adc
sbb
push
push
and
int
push
lea
add
call
or
mov
push
mov
push
jne
sub
mov
cs
xchg
add
movsb
jmp
cld
pop
push
inc
pop
jmp
call
addr16
rol
jo
pop
aam
test
lret
inc
xor
xchg
xchg
jne
daa
and
pop
dec
ss
popf
insb
sub
lods
js
test
cmp
pop
sub
scas
add
imul
jno
in
pop
xor
fldenv
movsl
fidivrs
add
stos
cmp
cmpsb
mov
addb
das
push
mov
mov
shl
pop
addr16
mov
sub
test
bound
incb
xchg
daa
outsl
les
sbb
sbb
mov
add
pop
xchg
popf
inc
jl
shrb
dec
repz
sbb
mov
sbbb
cltd
dec
clc
push
ret
sbbb
mov
clc
jnp
lock
adc
jnp
mov
lock
pusha
push
divb
dec
hlt
fadds
js
push
sbb
cmpsb
jno
repz
cmp
jg
sbbl
data16
and
into
pop
push
sahf
inc
jecxz
push
jb
mov
faddl
sbb
repz
pop
movsl
int3
gs
cmc
mov
mov
in
loopne
pop
sbb
pop
and
in
and
std
cmp
rcll
test
fstl
jle
loop
jbe
cli
xchg
or
clc
fdivs
jecxz
xor
dec
mov
cltd
outsb
rcr
sbb
pop
add
mov
std
and
mov
lds
push
add
jl
enter
fdivr
dec
lahf
dec
or
xchg
ljmp
mov
ljmp
shrb
sbb
gs
xor
jmp
xor
mov
lea
dec
pop
outsb
fstl
shlb
mov
scas
dec
fs
pop
aas
loop
mov
dec
dec
adc
out
pop
push
scas
imul
xor
jb
mov
xchg
mov
mov
jle
cmp
data16
xor
mov
aaa
dec
cmp
mov
es
mov
nop
iret
pop
mull
push
xor
mov
xor
add
jbe
xor
adc
xor
out
popf
add
and
or
jae
neg
lods
push
xchg
or
sub
shll
mov
inc
andl
popf
or
push
xchg
mov
sub
fyl2x
std
and
and
push
iret
pop
inc
scas
pop
push
push
xchg
leave
cmpsl
mov
mov
jge
push
cmp
cmp
and
fdivrl
push
ja
rcll
shll
cmpsl
sub
fidivrl
gs
in
cmp
hlt
popf
imul
call
xchg
in
imul
xchg
jp
testb
xor
jo
pop
fldl
popf
mov
data16
xchg
sarl
aas
insb
ja
add
sub
jae
cmp
addl
out
addl
mov
xchg
movsl
loopne
popf
shlb
decb
xchg
pop
ret
push
pop
mov
mov
pop
clc
jp
call
jecxz
mov
jg
sbb
test
cwtl
mov
outsb
addl
je
and
hlt
cwtl
outsl
cltd
push
adcb
mov
adc
cmc
bound
mov
leave
xchg
mov
stc
or
arpl
stc
mov
add
int3
xor
xor
test
jae
loop
repnz
icebp
jns
jo
mov
gs
mov
in
jmp
ljmp
ds
pop
jg
and
and
cmp
cwtl
mov
imul
xor
test
jle
ja
inc
pop
sub
xchg
lret
mov
mov
add
push
or
add
pop
adc
sti
mov
popa
test
movsb
inc
stos
cld
dec
lret
mov
dec
or
scas
shl
xchg
pop
and
pop
std
das
cs
inc
or
mov
outsl
ljmp
test
fucompp
push
sbb
nop
sbbl
pop
jno
mov
add
jg
mov
out
int3
js
fs
mov
mulb
movsl
adc
inc
inc
icebp
subl
subl
cwtl
jb
insb
xor
push
das
nop
stos
aaa
dec
dec
rclw
aaa
sub
cli
dec
call
imul
mov
in
divb
ja
sbb
subb
lret
add
iret
jmp
std
push
aas
xchg
in
sbb
in
push
cmpsl
jmp
mov
xchg
jo
or
stos
clc
cmp
movl
xor
sahf
stos
negb
pop
mov
dec
pop
aam
and
add
popa
insl
mov
cmp
aas
push
ficomps
sar
push
ror
pushf
cmp
test
jbe
xor
push
jb
dec
pop
mov
ljmp
dec
sbb
iret
xor
stos
pop
mulb
cli
lcall
sub
int3
cmp
outsl
pop
mov
out
je
es
mov
dec
adc
popa
sbb
repz
pop
enter
cld
xor
into
mov
adc
add
or
je
dec
aam
and
in
es
jg
or
xchg
xchg
popf
and
icebp
xor
shrl
rolb
mul
cmp
mov
loopne
mov
stos
cwtl
ss
fdivl
mov
push
jo
jo
pop
mov
jmp
out
cmpsb
inc
or
jge
dec
mov
sti
rorl
ljmp
mov
push
sbb
mov
sbb
sbb
push
dec
mov
hlt
std
push
adc
dec
xchg
push
add
imul
imul
inc
cmp
out
repnz
mov
mov
lock
xor
and
jnp
ljmp
inc
or
mov
fcoms
scas
iret
inc
fldl
or
sub
cmp
sub
pop
fs
pop
cmp
enter
jne
mov
sbb
rcrl
dec
pop
mov
cmp
adc
ja
pop
or
data16
mov
cmpsl
mov
dec
aaa
jo
jnp
cmp
sub
mov
sbb
dec
out
push
inc
sbb
and
ret
mov
xor
jbe
scas
js
mov
cwtl
imul
scas
xor
sbbl
mov
push
imul
cmpb
pop
daa
lods
popf
cwtl
and
jge
jo
stos
pushf
scas
inc
mov
jae
mov
dec
fiaddl
add
ret
scas
dec
dec
sub
cmp
or
dec
loopne
push
fstps
push
inc
xchg
insb
dec
std
movsb
xchg
data16
mov
sar
jns
push
jecxz
cmpl
add
push
adc
mov
shll
and
mov
jo
test
outsl
insl
pusha
in
ror
fsub
or
cmp
push
sub
out
or
sub
mov
sbb
lods
adc
cld
and
aas
or
mov
dec
pop
push
push
xchg
mov
sbb
inc
sahf
bound
pop
and
push
or
pop
or
nop
pop
ds
mov
inc
fnstsw
lea
xor
sbb
inc
subl
dec
dec
mov
das
jmp
push
jo
lods
lret
sub
xchg
iret
xchg
insl
daa
xchg
dec
sbb
xor
mov
ljmp
push
addr16
pop
adc
add
pop
mov
sbb
adc
pop
cmp
pop
add
loop
lret
dec
dec
js
ljmp
mov
stos
movsl
dec
fwait
push
sub
cmp
pop
fists
shl
test
xor
mov
ss
pop
pop
insl
inc
mov
add
jge
jne
in
pop
dec
and
daa
shrl
ss
pushf
icebp
add
inc
adc
push
push
adc
xlat
jmp
fwait
push
adc
push
xor
outsb
cmp
mov
jnp
gs
sbb
fildl
jmp
call
and
pop
adc
mov
add
insb
cmp
mov
push
test
and
not
dec
movsb
aam
push
pop
sbb
mov
fistpl
pop
adc
xor
mov
rorl
in
mov
jp
jle
dec
mov
or
ret
and
out
sbb
daa
push
subb
test
add
fcmove
pop
setge
out
icebp
pop
dec
daa
sahf
add
rolb
sti
mov
sarb
mov
clc
stc
daa
adc
orb
ja
cli
sub
icebp
fwait
mov
fmuls
sub
sub
sbb
adc
pop
mov
inc
ja
roll
subl
pop
div
mov
adc
dec
shll
sti
xchg
sbb
jne
pop
inc
xchg
aas
mov
pop
call
popf
mov
xor
add
clc
jmp
mov
jle
sbb
scas
jb
dec
push
loop
hlt
cmp
sbb
ds
jbe
sbb
push
fisttps
pop
movsl
cmp
dec
das
in
xchg
xchg
and
jnp
aad
lret
add
dec
movsb
sti
int
push
es
inc
and
mov
ds
mov
js
loop
shrb
fwait
jp,pn
jne
sbb
adc
pop
jge
iret
mov
mov
addb
jns
cs
insb
sbb
mov
mov
mov
mov
and
aad
fidivrl
insl
xchg
dec
cmp
inc
or
mov
pop
test
jae
cli
shlb
pusha
sub
cwtl
or
xchg
out
push
addl
xor
or
mov
ret
mov
pop
daa
jle
jbe,pt
lds
mov
cltd
gs
mov
nop
mov
ret
mov
push
sbb
or
inc
xor
or
jecxz
push
cmc
ds
push
sbb
xlat
js
mov
push
dec
and
mov
add
or
js
movl
mov
movsl
outsb
pop
xlat
pop
jne
and
lds
loopne
sbb
repz
push
arpl
xchg
jp
inc
jo
cmp
add
icebp
push
dec
inc
popa
push
cmp
sbb
rcrl
xor
sub
cmp
sbb
sbbl
sbb
int
add
aad
or
cld
and
sub
mov
push
xor
add
popf
inc
dec
in
mov
sbb
pop
in
or
sub
and
mov
inc
sub
or
arpl
aas
push
sti
push
mov
sbb
push
lea
or
sbb
pusha
mov
in
stc
and
jecxz
mov
out
add
jg
push
lret
dec
mov
pop
jb
fldcw
outsl
xchg
hlt
lock
sbb
adc
cmp
fildl
loop
jle
inc
out
aad
jl
imul
sub
sbb
and
mov
lahf
sbb
outsb
daa
stos
jl
sbb
subl
out
out
mov
jle
push
test
aas
mov
ljmp
in
and
push
push
and
mov
lret
fisubl
push
popf
insb
in
test
test
fsubs
lea
nop
mov
call
push
movsb
inc
sti
mov
jns
cmp
jl
sarl
lods
test
sub
dec
or
shrl
pusha
movsl
mov
cmp
fwait
repnz
loop
and
cld
push
cmpsb
and
xor
sbb
xor
loope
sbb
jne
xor
mov
cmp
sbb
divb
out
insb
clc
add
cmp
ret
cmp
xchg
fstps
xor
movsb
push
sbb
jne
jl
adc
hlt
xchg
in
inc
pop
mov
test
adc
out
dec
int
dec
in
mov
ret
pop
cmp
pusha
add
inc
rorl
out
inc
and
pop
pop
shrl
and
cmpsb
add
mov
and
clc
test
mov
dec
adc
xor
jg
jge
xor
lods
fs
rcrb
inc
pop
add
aas
sbb
push
xchg
or
popa
xchg
rolb
push
or
outsb
scas
xor
fstps
add
clc
mov
iret
and
push
test
push
xlat
jle
mov
pop
imul
cmp
stos
or
mov
arpl
into
mov
push
cmpl
aad
out
mov
lahf
sti
lea
jp
popa
std
and
repz
mov
imul
shlb
push
imul
xor
out
and
ds
push
mov
hlt
sub
pushf
cmp
popa
jecxz
test
cmovo
lcall
or
cld
roll
cmp
adc
and
adc
sbb
in
js
mov
fwait
mov
pop
scas
js
movsl
fidivrs
ljmp
test
outsl
insl
bound
lds
lock
pop
lret
add
fs
je
adc
pop
arpl
mov
rcll
hlt
fnop
sub
fisubrl
orb
pop
mov
sbb
rclb
imul
cmp
repnz
inc
jle
push
or
inc
arpl
mov
addb
cli
jnp
cmp
mov
push
mov
add
out
int
cwtl
pusha
stc
shrb
add
addr16
xchg
add
iret
jmp
sti
push
movsb
cmp
and
test
out
lahf
dec
sbb
fisubrs
inc
fiadds
push
cmp
mov
pushf
hlt
sub
fstp
es
popa
xor
daa
add
out
mov
push
jge
movsb
into
add
in
xchg
stos
ja
mov
cwtl
pop
sbb
push
sub
loop
mov
nop
std
xor
cmp
fsub
and
rclb
scas
mov
pushf
lds
sub
jbe
leave
push
mov
test
call
mov
in
repz
jg
popa
push
dec
jecxz
jb
xchg
push
js
xchg
pushf
aam
add
movb
mov
stc
or
rorb
jae
sbb
sub
push
or
adc
adc
out
popa
jmp
fsubp
sbb
sahf
xchg
in
pop
mov
aas
cmpsb
xchg
adc
loop
mov
insl
mov
jb
dec
icebp
xchg
sub
lret
sti
cmpsb
xchg
dec
popa
xchg
adc
inc
loope
lods
les
inc
push
cmpsl
movsl
jb
or
mov
and
js
clc
ss
movsl
pop
mov
fiadds
adcb
jo
imul
les
shll
xlat
xchg
dec
mov
pop
sub
es
out
lds
sahf
popf
jle
loop
lret
out
and
ljmp
mov
cli
loopne
xor
mov
dec
je
decl
inc
in
out
xchg
jnp
xor
dec
aaa
movsb
fcmove
mov
js
inc
sahf
dec
je
sbbb
add
adc
or
add
pusha
aaa
insb
sub
ret
repz
inc
int
call
sti
add
cmpb
mov
iret
adc
mov
test
ss
shrl
cli
shr
xchg
inc
sbb
push
pextrw
fwait
je
dec
jb
aad
pop
sti
jmp
lret
xorb
add
push
adc
sbb
and
and
int3
dec
mov
dec
test
daa
mov
xor
push
dec
jae
sahf
in
sub
cmc
mov
cmp
cwtl
outsb
mov
cs
mov
mov
inc
sub
xchg
fldl
shlb
daa
ja
lret
fimull
push
mov
fisubl
les
or
jmp
insl
pop
imul
les
pop
sahf
jge
xchg
fldcw
js
inc
pusha
aaa
lds
or
inc
adc
cli
les
int
mov
fisttpll
cld
ret
jp
andl
cmpsl
clc
lods
rcrb
adc
mov
push
idivl
test
cmp
and
cmp
and
sub
xchg
andl
jnp
mov
push
or
or
xchg
movsb
and
test
std
in
loopne
popa
cmp
cmp
mov
dec
dec
adcb
fwait
mov
mov
sub
in
movsl
pop
push
fdivrp
mov
cmp
xor
icebp
and
mov
rol
std
out
jl
lret
insb
pop
sarl
adc
popa
pop
call
das
xchg
mov
jge
add
ja
roll
js
mov
and
shl
gs
js
mov
sub
in
repnz
sbb
dec
aas
imul
mov
divb
or
gs
xor
pop
add
or
cs
xchg
or
out
fwait
inc
dec
and
xlat
xor
pusha
mov
call
movsl
mov
stos
sbb
jb
pop
or
dec
cmp
adc
das
js
add
adc
mov
cmpsl
add
cmpsb
mov
imull
ds
into
fisubrl
fcomps
mov
ja
fsts
dec
jne
sahf
cmp
daa
leave
nop
and
lods
cmpsb
fldl
xchg
cmp
add
push
pcmpgtd
arpl
insl
mov
xchg
xlat
inc
arpl
sub
out
aam
cltd
sarb
push
outsl
cmpsb
aad
lods
sub
loopne
adc
test
jno
bound
loop
xchg
lret
cmp
iret
jl
push
es
stos
cmp
jecxz
out
adc
addr16
sbb
std
in
ja
adcl
ss
andb
hlt
fidivl
add
fdivs
aas
mov
xchg
hlt
and
mov
outsb
popl
xchg
jecxz
xchg
inc
jp
cmpsb
out
cmc
ss
jecxz
or
ss
enter
lret
and
in
mov
inc
and
xchg
xor
and
add
sub
jno
jns
and
lea
mov
repz
jns
jl
sbb
outsb
test
pop
int
or
andl
data16
xchg
jbe
mov
pop
and
test
push
out
jp
pop
out
inc
jo
pop
pop
fmuls
xorb
dec
repnz
jo
ja
and
mov
outsl
pop
dec
pusha
or
dec
popa
adc
jns
or
scas
fnstsw
dec
xchg
add
lds
mov
inc
sbb
hlt
xchg
movsl
mov
scas
mul
dec
xor
xor
flds
out
mov
and
mov
jl
pop
outsl
adc
pop
inc
iret
or
fists
dec
fimuls
adc
xchg
mov
in
roll
lock
adc
dec
ja
jnp
inc
lods
ret
adc
ret
data16
incb
ja
imul
movsl
add
cmp
add
imul
leave
into
nop
nop
pop
cs
test
rolb
lods
rcrb
jg
repz
inc
out
std
stos
subb
fstpl
popa
add
dec
mov
sbb
adc
mov
xor
xchg
mov
jmp
dec
hlt
or
ja
test
sar
stos
sbb
xlat
cli
sahf
cmp
pop
fdivrl
dec
in
fs
cmc
test
stos
jge
je
cs
outsl
sbb
gs
scas
ret
sbb
jno
imul
stc
mov
mov
repz
add
ljmp
shl
or
outsb
dec
push
cld
andb
testb
adc
add
rcr
dec
xchg
adc
aam
out
cmp
arpl
movsb
mov
rcrl
xlat
xchg
stos
aam
daa
ret
sub
mov
shll
fsts
sub
xchg
xchg
enter
pop
mov
push
jns
in
adc
into
add
xor
out
addr16
icebp
shr
in
popf
daa
or
or
in
mov
in
xchg
ss
in
push
fdivr
inc
fld
inc
push
adc
or
dec
xchg
mov
xlat
incl
inc
sub
or
test
adcl
dec
ret
sbb
mov
mov
cli
aad
jg
xor
ja
add
rcrl
insb
mov
divb
fldenv
adc
bound
call
jne
mov
fcompp
test
loop
xor
out
pop
xor
sub
xor
bound
stos
jns
push
xlat
push
sub
test
mov
insl
add
xor
das
out
div
or
mov
sub
add
pushl
or
xchg
mov
fidivs
test
xor
cltd
adc
test
cmp
dec
push
cmp
jne
jmp
std
lahf
cmp
insb
jnp
inc
add
mov
cmp
stos
add
orl
dec
into
cmp
or
adc
mov
adc
mov
out
out
fwait
insl
xor
xlat
loop
mov
addr16
aaa
mov
stos
pop
inc
push
sti
rcl
les
or
and
cmc
sub
dec
push
repnz
push
rcrb
xchg
xor
jnp
and
pop
rcrb
insl
jge
loop
icebp
iret
pop
mov
jbe
lea
movsl
ds
mov
or
subb
mov
leave
sbb
xchg
pop
lds
jmp
mov
sbb
mov
pop
hlt
jnp
fsubrl
mov
mov
jne
or
addr16
mov
loop
pop
pop
jae
pop
jbe
jge
mov
mov
arpl
sbb
ret
xor
mov
notl
mov
or
les
jo
push
mov
push
cmp
inc
adc
rorl
xchg
arpl
out
xchg
int3
push
in
loopne
inc
aas
imul
mov
push
push
cmp
or
xchg
outsb
loopne,pn
sub
imul
jle
leave
sbbl
shll
hlt
outsb
xchg
push
jno
jl
and
or
sbb
lods
mov
das
mov
mov
or
test
xchg
or
jmp
mov
sub
bound
cwtl
stos
mov
mov
and
insl
cmc
or
std
fdivs
rcll
dec
into
inc
lds
lret
ss
pop
in
ficoms
fs
mov
mov
movsb
inc
js
pushf
arpl
add
pop
iret
dec
cmc
mov
out
fstpt
mov
fwait
push
push
cmpsb
cli
xor
ret
xor
test
jecxz
push
xchg
pop
loop
in
js
idivb
icebp
rol
loop
push
jo
popa
cs
addr16
push
add
shld
jae
mov
adc
push
inc
jg
inc
stos
jnp
jns
mov
adc
push
loop
loope
sub
and
arpl
adc
es
add
cltd
insb
cmpsb
hlt
xor
jle
imul
pop
sub
cli
jmp
xor
mov
add
in
cmpsb
fwait
and
add
add
inc
mov
cltd
sbb
decl
jno
sbb
insb
imul
jns
pop
jo
out
and
push
test
roll
std
cmp
movsl
push
mov
sub
inc
ret
pop
int
cmp
fsubs
loope
lock
push
cmp
push
lds
dec
enter
scas
test
and
add
dec
fisttps
ja
inc
jb
jl
outsb
out
test
or
lret
insl
pop
nop
push
fdivr
lret
aad
into
mov
insl
adcb
mov
mov
bound
insl
push
cmp
inc
gs
addb
dec
mov
imul
sbb
loop
rorb
fstpt
cld
adc
and
xchg
sarb
jae
movsl
pop
mov
add
in
mov
xchg
test
and
scas
fisttpl
mov
repz
js
aad
adcl
ficoms
outsl
jb
sbb
test
or
dec
or
dec
or
sbb
pop
out
dec
es
mov
and
mov
repnz
cmp
and
call
sti
xor
add
repz
call
lcall
std
mov
or
nop
push
out
xor
dec
and
lock
lahf
lock
cli
cmpsb
mov
or
hlt
std
mov
enter
imul
mov
or
ljmp
dec
int
arpl
mov
jb
xor
dec
xchg
iret
pop
jl
mov
jle
cmp
aaa
es
jl
sbb
sub
lcall
test
imul
dec
cmp
andl
icebp
jmp
fldcw
xchg
stc
fsts
mov
sbb
inc
or
jmp
std
fwait
in
or
mov
popa
and
cmp
xchg
and
stos
xchg
clc
mov
add
jbe
mov
out
mov
push
jb
insl
lods
add
clc
nop
les
push
dec
test
repnz
data16
push
shl
lock
test
lods
push
clc
out
imull
and
mov
xchg
or
add
or
ds
xchg
jle
pusha
fmuls
imul
sub
call
add
dec
test
mov
mov
or
cmp
scas
fisubl
cwtl
repnz
mov
sbb
mov
mov
imul
stos
jae
movd
sub
and
mov
inc
mov
fnstcw
xorl
sbb
mov
out
pop
lods
call
mov
xchg
mov
adc
fstpl
jle
popf
int3
mov
fcomps
pop
add
imulb
cltd
in
mov
lock
push
fbstp
push
jl
inc
inc
popa
jmp
movsl
fisubs
mov
xlat
sbb
lds
mov
mov
inc
scas
fnsave
out
jns
dec
pushf
sbb
inc
pop
pop
divl
data16
xchg
mov
aam
push
jmp
les
or
shll
xchg
mov
xor
mov
xchg
xor
ss
pop
fs
xchg
or
xor
ljmp
jp
jg
out
ret
cmpsl
xchg
xchg
cmpb
sbb
mov
xchg
sub
pop
pop
jb
xor
scas
lock
nop
cmp
xor
mov
push
rol
sbb
js
mov
pop
and
out
test
lret
shrb
sbb
pop
mov
int
sbb
mov
popf
jmp
cmp
cli
pop
repnz
insl
into
add
popf
lds
shlb
aad
push
mov
dec
mov
in
lock
xor
mov
jne
cmpsl
sbb
es
je
adc
data16
in
in
imul
xchg
jne
popf
mov
jb
fnsave
mov
push
sbb
mov
add
add
sbb
mov
xlat
jmp
lods
push
inc
or
test
test
pop
sub
dec
xor
sub
sbb
inc
sub
pushf
lret
adc
outsl
lret
test
xchg
xchg
push
mov
xlat
cmp
loopne
pop
sbb
xor
xor
lds
test
je
adc
jns
ljmp
test
outsl
aas
mov
jmp
mov
out
scas
hlt
mov
jle
inc
imul
cmp
adc
mov
jle
std
xchg
push
js
fnstcw
jo
shrl
mov
cmp
lea
pushf
imul
int3
jno
shrb
pop
mov
pop
insl
xchg
lods
movl
fmull
rcr
mov
movsb
insl
xor
and
mov
pop
xchg
mov
outsb
cwtl
and
inc
idivb
mov
jo
and
lahf
push
dec
je
cli
pushf
fmull
sub
push
sbb
ja
dec
sbb
push
lahf
mov
pop
mov
int3
lret
inc
xchg
push
inc
pop
mov
int
xchg
cli
imul
dec
dec
push
ret
ficompl
js
stos
pop
xchg
mov
add
out
adc
in
pop
mov
jmp
fstpt
push
and
mov
arpl
mov
sbb
ss
or
lret
inc
popf
in
and
or
xor
or
mov
mov
cs
push
imull
dec
ficomps
in
into
push
repnz
shll
jge
icebp
call
jno
out
jp
pop
dec
lret
xchg
pop
mov
call
xorb
and
orl
pop
lods
inc
lahf
mov
cmp
push
mov
stos
pop
push
out
enter
and
jne
lods
test
and
push
xor
cmp
dec
add
out
les
lea
lcall
int
imulb
scas
popf
movsl
sysret
shll
out
xchg
clc
rcr
push
or
fcmovu
stos
shrl
divb
sbb
add
idivb
lods
mov
sub
lcall
mov
fsubl
imul
dec
mov
xchg
push
jp
jbe
and
shl
jp
mov
inc
mov
xor
lods
jb
in
outsb
in
fimuls
pop
fs
int
sahf
inc
sbb
sub
insb
or
mov
outsl
insl
xchg
cmp
jle
lock
fldl
sub
xor
xchg
mov
clc
mov
jns
adc
iret
sub
and
movsl
loope
mov
sub
and
xor
call
add
enter
jle
sub
jns
stos
js
inc
or
jbe
and
pushf
xchg
push
jo
pop
push
sub
adc
fwait
sub
pop
icebp
jecxz
std
aam
out
lds
sbb
dec
mov
daa
adc
jae,pt
lods
xlat
jno
xchg
inc
dec
pop
inc
cmp
jle
add
fcoml
or
inc
in
jno
sbb
addr16
repnz
add
int
and
push
fmull
xchg
push
fimuls
mov
pop
adc
push
bound
fidivrl
popf
loope
push
imul
pop
cld
test
cmp
les
or
es
in
aas
mov
test
add
lea
cld
mov
subb
fs
mov
inc
ret
outsb
jne
adc
rorb
fcoml
xchg
orl
enter
pop
xchg
sbb
lods
and
cltd
int3
cltd
push
sub
pop
sbb
and
in
sbb
roll
cmp
int3
daa
cld
xchg
or
adc
pop
pop
sbb
mov
jmp
hlt
xor
adc
xor
nop
xchg
icebp
imul
pop
and
mov
inc
add
stc
repz
push
cli
cltd
ss
fsubs
push
ja
inc
pop
pop
popa
data16
lds
mov
ljmp
test
arpl
sbb
pop
and
subb
or
adc
dec
mov
add
lds
and
lods
and
test
add
mov
mov
int3
or
sub
inc
outsl
jb
sub
subl
leave
out
and
outsb
fdivs
push
imul
rorb
cmpsl
loopne
out
mov
sbb
mov
mov
mov
mov
mov
pop
jno
push
xchg
push
fs
jb
iret
repnz
adc
mov
jb
or
jle
in
sub
ret
and
mov
stc
push
cmpsl
aam
notl
int
jl
or
adc
lods
cmp
enter
sub
sbb
fstpt
gs
int
imulb
sbb
add
mov
push
jmp
int3
loope
or
add
jge
in
cli
cs
cld
test
or
in
inc
dec
dec
pop
and
jae
iret
cmp
shlb
hlt
mov
inc
and
mov
call
and
xchg
cmp
xor
scas
je
lcall
cmp
and
loopne
pop
movsl
popa
pop
push
fsubp
push
dec
mov
lods
subl
jp
sbb
pushl
mov
shll
adc
inc
rorb
pop
ucomiss
fcoms
add
mov
sbb
push
mov
in
and
adc
pop
xor
pop
push
cmpb
jno
mov
push
dec
dec
fnstsw
pop
and
sub
das
xchg
test
sbb
sub
stc
lret
push
sbb
sti
es
jne
mov
jno
add
pop
pop
cmpsl
mov
adc
ds
add
inc
aad
es
popa
lcall
jnp
sbb
inc
fcoml
jb
xchg
mov
mov
jno
in
hlt
das
fiaddl
loopne
or
mov
insl
xlat
and
into
xchg
mov
jge
fdivr
shrl
icebp
xchg
push
imul
mov
pusha
pop
adc
jae
add
stc
push
dec
xlat
add
arpl
ja
hlt
lahf
rcrl
push
dec
pushf
dec
ffree
fsubrl
jae
or
pusha
dec
loopne
xor
mov
pop
hlt
div
cmp
push
mov
cmp
mov
and
adc
stc
or
cmp
jl
mov
pop
or
xchg
mov
jo
add
addb
mov
or
ljmp
lods
repnz
loope
iretw
clc
mov
xchg
mov
mov
loop
fnsave
sbb
addr16
loop
test
sahf
cmp
loope
fs
xchg
add
daa
popa
shll
orb
mov
nop
inc
cs
dec
fmuls
xor
lret
or
dec
mov
hlt
pop
push
sbb
pop
add
pop
aas
int3
mull
push
jp
push
push
pop
movsb
nopl
subb
adc
push
arpl
pop
push
push
mov
popa
sub
leave
into
sti
aas
xchg
push
rorl
jmp
call
cmc
adc
lret
pushf
cwtl
ja
bound
cwtl
xor
test
xchg
ljmp
in
dec
xor
pusha
push
xchg
lods
or
loop
gs
gs
inc
inc
xor
jae
dec
mov
jbe
sbb
mov
mov
dec
jp
push
out
inc
movsl
adc
pop
inc
xchg
mov
xchg
xchg
hlt
push
rcl
je
add
sti
sbb
mov
jb
mov
inc
fcomps
cwtl
xchg
xor
push
sbb
add
mov
adc
push
aam
adc
mov
and
divb
leave
pop
mov
adc
dec
fadds
mov
popa
dec
mov
mov
aas
or
inc
inc
enter
scas
loop
adc
call
lods
mulb
imul
sub
sbb
fnstsw
sbb
sbb
pop
mov
ret
lods
add
aas
jae
out
or
add
push
mov
cwtl
je
xchg
pop
test
adcl
add
bnd
push
movsl
pop
dec
cmp
pop
leave
dec
out
lods
add
sbb
roll
jecxz
movsl
inc
jp
pop
jmp
movsb
scas
mov
or
adc
jg
cmpsb
ds
daa
test
sbb
sub
push
mov
in
loope
iret
or
xlat
mov
push
lahf
xchg
outsl
jne
hlt
and
test
pop
int3
mov
jne
aas
mov
daa
or
and
jmp
repz
adc
pusha
adc
stc
dec
mov
sbb
ret
xor
xorb
addb
shl
repz
imul
lahf
sub
sarb
nop
inc
xchg
cmp
push
mov
add
aam
lods
imul
inc
xchg
mov
movsl
sub
subb
shrb
cli
lahf
lods
or
sub
pop
mov
inc
sti
inc
inc
inc
xlat
cwtl
addr16
std
imul
mov
inc
dec
in
mov
xlat
mov
dec
rcll
xlat
jno
jecxz
je
stc
loop
jg
jl
icebp
popf
das
test
add
or
or
pop
loope
es
mov
fwait
add
xor
loop
ficompl
je
mov
notl
scas
jle
push
inc
pop
ficomps
add
or
fs
dec
subb
ljmp
out
lcall
test
xchg
lcall
cmp
lds
lret
fidivl
sub
data16
cmp
sub
rep
mov
adc
mov
insb
sub
inc
shll
sbb
inc
pop
or
sbb
jbe
pop
fstl
push
test
repnz
out
push
xchg
hlt
es
mov
and
stc
dec
adc
xor
and
das
inc
sub
jmp
xor
sub
in
xchg
mov
das
xchg
movsl
in
mov
push
cmpsb
xor
pop
imul
push
and
data16
and
es
pop
mov
adc
cs
inc
mov
inc
stos
in
jae
inc
or
pop
push
push
cmc
mov
jp
xchg
mov
lea
insl
or
mov
int3
sub
daa
loope
int3
jne
cmp
push
mov
and
ret
add
fs
push
loopne,pt
insl
inc
push
mov
pop
mov
leave
sub
mov
xor
das
jb
adc
iret
and
sub
mov
xchg
test
mov
xor
pop
pop
lret
xlat
push
test
ss
and
lretw
movsl
cltd
mov
lcall
stos
push
and
cs
push
mov
mov
fs
add
mov
jmp
mov
sub
popa
mov
mov
and
xchg
mov
push
dec
pushf
aam
mov
push
movb
call
mov
into
or
xor
les
sub
popf
adc
sbb
repz
popa
jle
cwtl
clc
or
ret
xchg
dec
mov
sub
iret
sbb
dec
dec
mov
mov
inc
outsb
sbb
rcrl
mov
fwait
jge
xor
adc
or
xlat
insb
mov
pop
cwtl
xadd
in
insb
xchg
dec
mov
mov
push
add
push
jno
sub
inc
adc
sbb
adc
jno
or
add
dec
test
shlb
mov
fiadds
cmpxchg
scas
xchg
lret
xor
jae
stc
addr16
pop
xchg
ljmp
stos
adc
negl
pop
jl
jns
insl
inc
and
scas
cmp
push
jno
lret
sub
dec
das
sti
add
pushf
mov
fldcw
pop
inc
and
pop
imul
mov
or
sub
add
sbb
adc
aam
nop
addl
cmc
jae
mov
out
push
jp
xchg
dec
in
je
aad
sub
xor
out
mov
test
xor
mov
iret
xchg
adc
fidivrl
popa
subb
out
in
sbb
int
sbb
sbb
push
dec
sub
fists
cld
xor
sbb
cmp
and
arpl
sub
jmp
jg
sub
jp
lods
inc
xor
in
sti
subb
dec
xlat
xchg
xchg
xorb
int
inc
das
das
dec
pop
and
lds
xlat
aaa
aad
in
push
push
je
pusha
mov
shl
push
add
mov
pop
mov
and
or
fidivl
push
inc
add
popfw
fcomi
pop
jno
dec
loope
and
in
push
sub
roll
push
add
xchg
and
loopne
fsubl
ljmp
cld
stos
or
outsl
adc
jge
ja
sbb
cmc
mov
sbb
adc
test
cmp
fiadds
fdivrs
hlt
dec
jmp
xchg
sub
xchg
lds
jo
daa
xchg
jns
mov
jecxz
xor
jb
mov
inc
pop
fs
push
jl
and
fldcw
pop
ja
js
xor
movsb
jmp
std
lahf
xchg
cltd
repnz
cwtl
dec
sbb
test
xchg
aas
sub
in
insb
test
out
jl
repnz
ljmp
aas
and
jp
cld
or
cld
dec
mov
sbb
jge
in
mov
fldenv
jbe
lods
lea
xor
cwtl
dec
mov
mov
aas
in
mov
shrb
jae
xor
mov
int3
add
fidivrs
pop
movsl
add
rclb
and
scas
or
adc
mov
mul
cmpsl
and
push
fldcw
push
movsl
aad
sbb
xchg
push
mov
int
movsl
movsb
pop
cltd
mov
mov
xchg
inc
jne
fcmovbe
mov
and
pusha
cmp
loopne
jbe
jmp
jns
cmc
div
xor
jnp
jns
xchg
cmpsl
notl
call
mov
add
lods
int
jg
push
pop
data16
out
repz
mov
shrl
repnz
inc
outsl
mov
push
icebp
std
stc
sbb
inc
pop
adc
xor
mov
pop
jl
pop
or
and
mov
sbb
outsl
outsb
lea
xchg
mov
push
sbb
test
pop
shlb
in
loopne
and
mov
push
aam
push
divb
clc
lret
in
add
jmp
lret
std
inc
mov
adc
outsb
xor
out
fwait
std
movsl
adcb
repnz
andb
mov
movsl
sbb
insb
adc
mov
xchg
nop
push
xor
out
das
pop
xchg
jg
sub
mov
cmp
insb
pusha
out
lcallw
fs
test
in
in
mov
out
lods
fsts
pop
sub
push
cmp
xor
sub
lea
sub
cli
fdivl
movsl
and
sbb
imul
nop
sub
in
fnstenv
add
xchg
and
adc
jno
xor
into
mov
dec
xchg
mov
cmpsl
ljmp
ljmp
sub
shlb
outsb
int
test
xchg
cmp
js
jae
pop
lret
mov
pop
or
sahf
dec
inc
mov
xlat
daa
test
push
lret
fldcw
sbb
loop
sti
pop
arpl
cli
inc
pop
xor
stos
xor
andl
mov
and
inc
popf
xlat
inc
and
mov
cwtl
push
testb
jecxz
add
ficoms
subb
das
jae
mov
pop
cwtl
das
or
add
pop
or
jmp
lods
mov
ret
jecxz
out
sbb
int3
sub
popf
pop
adc
push
int
call
xor
test
push
add
das
les
test
aas
and
loop
cltd
repnz
sbbw
dec
ja
pop
push
xor
sbb
out
pop
repz
out
in
aam
ljmp
jb
pop
jp
push
pop
outsb
sbb
jg
rolb
and
out
ret
mov
push
mov
fimuls
frstor
shl
jae
lds
push
cmp
dec
xchg
arpl
xchg
movsl
or
daa
icebp
fdivs
test
lret
mov
adc
jae
sub
pop
test
xchg
test
sub
test
mov
add
imull
push
mov
cltd
pop
or
ljmp
sbb
leave
repnz
cwtl
add
lods
mov
jae
mov
dec
lds
xchg
lahf
xchg
ss
and
in
addl
cmp
call
lret
loop
popa
loop
scas
mov
fnstsw
xacquire
repnz
jne
inc
loop
fwait
or
sub
inc
pop
clc
or
or
sahf
in
cmpsb
bound
rclb
movsl
pop
dec
fwait
dec
jmp
popf
add
pop
or
mov
xor
arpl
inc
loop
adc
pop
aaa
lods
mov
in
cld
or
addr16
mov
mov
xchg
cmp
mov
inc
inc
mov
or
push
mov
pop
stos
repnz
push
aad
fisubs
pcmpgtw
outsl
enter
cmp
cmp
setl
ds
cmpsl
sbb
mov
and
or
sub
sbb
add
or
xor
popa
or
push
gs
in
ss
adc
and
cltd
xchg
adc
add
scas
sub
push
dec
xchg
test
ja
or
mov
fisubrl
cmpsb
inc
dec
mov
cld
sbb
outsb
pushf
jne
orl
sti
jg
movsb
sti
cwtl
dec
rcrl
xchg
push
dec
int
xor
lods
fmul
and
scas
aaa
xchg
inc
cwtl
cli
scas
call
push
mov
sbb
rcrl
push
out
jno
add
sub
lds
data16
popf
test
sub
adc
fwait
jge
pop
je
cwtl
sbb
lret
incl
cmc
and
mov
pop
decb
jle
and
mov
jmp
jns
jmp
mov
enter
jns
adc
outsl
jmp
pop
sbb
js
pop
dec
sub
lea
les
ja
fldcw
cmp
div
js
xchg
jge
stc
fst
imul
cmp
aad
pop
or
xchg
sub
push
lret
pusha
sbb
cmp
lds
ss
or
cmpxchg
add
mov
pusha
pop
scas
inc
add
add
jmp
and
push
adc
bound
cmp
mulb
mov
adc
outsl
or
sbb
cmp
call
dec
sub
notb
leave
in
not
mov
jl
jecxz
cwtl
outsl
and
out
insb
add
pop
arpl
out
insb
cmp
dec
shrl
add
pop
js
sbb
xchg
jle
sahf
sub
leave
sbb
pop
and
in
mov
cmpsl
xor
add
mov
mov
mov
adc
shlb
sbb
xorb
fidivrs
insb
aad
mov
inc
sbb
test
and
in
mov
in
imul
pop
cmp
imul
sahf
icebp
fcmovnu
repnz
jb
pusha
lods
ret
sbb
xchg
sub
inc
sbb
inc
fadd
pop
in
shll
sub
cmp
arpl
push
add
scas
jmp
scas
dec
mov
mov
iret
or
adc
into
shlb
mov
sbb
cltd
loop
sbb
popa
cmp
icebp
enter
jmp
inc
imul
mov
fstpl
push
fstl
sub
mov
push
lds
loopne
jnp
movsb
mov
orl
jmp
iret
or
push
inc
andl
inc
jge
xor
or
enter
repz
xchg
int3
insb
pop
mov
xor
out
xchg
or
add
in
lcall
xor
movsb
cmp
jecxz
mov
push
fnstsw
cld
adc
mov
jmp
adc
pop
xor
out
mov
test
ss
cmp
fisttpll
mov
popf
hlt
fisttps
dec
inc
in
mov
sub
sub
push
xor
adc
mov
fdivr
push
icebp
adc
fsts
movsb
sbb
mov
add
test
je
push
pop
addb
sbb
pop
aaa
adcl
scas
sub
mov
imul
test
sbb
cmp
fdivrl
imul
out
fwait
out
dec
push
dec
jnp
cmp
hlt
aad
xor
outsb
mov
mov
dec
sbb
pop
dec
ss
push
or
movsl
fildl
mov
mov
adc
negl
mov
cs
xchg
pop
or
loope
decb
data16
rcr
sbb
test
ret
test
and
or
pop
mov
enter
dec
mov
or
je
adc
and
sbb
call
fiadds
jp
add
dec
pusha
push
inc
jmp
mov
mov
fisttpll
loop
push
push
pushf
in
das
cmpsl
pop
pop
out
push
outsl
mov
mov
pop
push
das
jbe
test
inc
scas
fwait
repnz
das
xchg
xchg
lret
fidivrs
and
les
xchg
add
push
mov
repz
loope
and
cmp
call
cld
ljmp
outsb
ds
fstl
bound
xchg
or
call
jnp
add
mov
sub
dec
pop
or
mov
mov
int
jmp
mov
jne
pop
pop
repz
addr16
out
icebp
stc
add
mov
pushf
enter
stos
cmpsb
icebp
push
call
adc
dec
add
cwtl
mov
dec
lret
or
lcall
fs
and
push
rcrb
or
sbb
adc
ret
insl
mov
push
mov
mov
mov
add
xor
and
adc
ret
mov
call
aas
mov
clc
xchg
sti
xchg
jp
hlt
and
aam
jmp
ljmp
pop
cmc
out
pop
inc
sub
inc
xlat
jecxz
jmp
pop
loop
xchg
in
addr16
cwtl
int
leave
bound
inc
lret
fxch
adc
push
sbbb
out
je
adc
xchg
stos
mov
int
fisubl
iret
daa
mov
sub
mov
mov
push
mov
sbb
xor
insl
cmp
cmc
sahf
jns
loop
bound
and
xor
ss
js
sbb
faddp
cmp
fidivrs
xchg
fidivrl
adc
sub
sbb
leave
mov
adc
xchg
mov
lods
call
adc
sti
pop
out
dec
jne
lds
ds
jg
mov
mov
aas
pop
mov
pop
rorl
cs
decb
into
std
or
or
arpl
ss
xor
clc
xor
inc
scas
mov
mov
movsl
int3
and
push
imul
mov
out
inc
and
cltd
lods
cli
fsubs
mov
adc
mov
ret
je
popa
popf
mov
jg
inc
stos
xchg
mov
shll
cld
js
lahf
mov
jbe
jg
add
bound
mov
or
lea
xchg
flds
lods
cmp
jmp
xchg
sbb
dec
add
cmp
xchg
mov
int
cmp
fstps
out
mov
cmp
orl
mov
inc
ja
xlat
or
scas
sub
jmp
in
jg
sbb
lock
xchg
xor
xor
dec
daa
xchg
stos
test
pop
enter
push
mov
stos
sbb
jmp
sub
stos
sub
cld
cmp
in
testl
sti
mov
dec
mov
add
andl
mov
pop
es
sub
fisubrs
dec
fsub
fs
pop
cmp
inc
push
pushf
fldt
shrb
push
mov
je
imul
push
cld
mov
pop
jle
dec
jbe
inc
mov
pop
adc
pop
lods
jl
adc
mov
add
movsb
call
mov
and
cs
arpl
pop
imul
rol
cmp
mov
push
or
or
rolb
mov
aad
out
ret
aam
mov
mov
jo
setne
cmpsl
je
mov
pushf
mov
push
push
mov
fcomip
inc
repz
ret
cmc
mov
and
mov
fs
cmp
mov
add
cltd
shl
mov
fisttpll
xchg
dec
leave
mov
lock
push
xor
sub
in
ljmp
jl
faddl
dec
pop
push
fistpll
xlat
jne
out
pop
sbb
and
fwait
je
cmpl
lahf
lea
dec
lods
andl
daa
daa
fnstenv
pop
test
mov
sbb
dec
sahf
jbe
in
filds
sub
hlt
clc
dec
xchg
dec
jo
dec
pop
stc
mov
and
mov
and
sub
jno
push
dec
pop
mov
fimuls
int
dec
mov
adc
adcb
dec
xor
or
push
loopne
cmp
fnstcw
mov
fdivr
jo
lods
sahf
test
dec
inc
lret
cltd
movsb
test
mov
jae
add
in
adc
mov
mov
push
xor
int3
mov
mov
sbbl
or
scas
sarb
sub
mov
jge
pushf
cs
jno
jne
adc
les
out
xorl
scas
mov
dec
stc
dec
jp
insl
std
adc
sbb
jecxz
test
sbbb
push
jo
mov
xchg
jo
push
adc
sub
sub
aam
stos
fwait
inc
lock
xchg
jmp
shrl
mov
xor
inc
add
test
movsl
ja
pop
push
cwtl
int
push
sub
dec
or
dec
sbb
sub
dec
les
inc
sbb
out
cmp
es
mov
and
inc
and
or
stc
leave
cmp
arpl
rcrb
cmp
mov
xlat
push
xor
adc
sub
jp
in
inc
inc
xchg
add
dec
out
inc
add
inc
xor
lret
mov
push
stos
mov
mov
fildll
mov
add
rclb
scas
loop
sub
jbe
in
push
ds
mov
stos
rclb
jae
sti
add
or
cmpsb
adc
mov
adc
cmp
in
add
xchg
movsl
mov
mov
xor
out
adc
loop
xchg
inc
sub
sub
or
dec
iret
xchg
push
lret
stos
push
lret
stos
inc
add
inc
mov
pusha
pop
shlb
jnp
mov
inc
and
test
xor
lds
jecxz
pop
mov
mov
xchg
repnz
call
xchg
mov
push
jb
ret
rorb
mov
cltd
add
mov
xor
test
mov
pop
xchg
jg
arpl
mov
push
add
dec
pop
fsubp
sub
mov
into
fmuls
std
call
popf
push
faddl
sti
cmpsb
dec
mov
pop
xchg
loopne
add
push
jge
testb
popa
shll
pop
daa
and
xchg
les
mov
lea
rcll
push
xor
lock
dec
leave
xor
es
lcall
out
outsl
lods
lret
xchg
cli
xchg
push
inc
push
outsb
stos
inc
add
mov
adc
in
and
sbb
pop
or
sahf
push
lods
jg
pop
cmp
inc
jbe
imul
dec
push
aas
xor
jg
pop
test
jo
pushl
mov
out
mov
ljmp
aam
inc
je
test
mov
cld
fcoms
inc
orl
mov
scas
push
neg
out
fwait
ret
std
imul
xchg
mov
add
popa
xor
leave
arpl
and
pop
dec
sti
cmp
mov
movsl
lret
cmpsl
insl
movsb
cmp
dec
push
outsl
hlt
add
xchg
dec
push
and
xchg
mov
and
fnstenv
inc
inc
outsb
lods
push
dec
xchg
push
rolb
jge
dec
add
cmpsl
mov
sub
data16
xor
xchg
sub
mov
xchg
insl
std
mov
inc
movsb
jbe
or
mov
in
sub
xchg
xor
mov
or
es
pop
ja
sbb
cld
pushf
dec
lahf
cli
aad
sarl
dec
jns
cmp
cs
ss
bound
dec
cmp
sbb
fnstsw
das
ljmp
push
push
xchg
push
cmpsb
dec
cs
hlt
push
outsl
int3
jne
push
push
aaa
mov
jns
dec
inc
jmpw
push
mov
jae,pt
ja
into
mov
adc
bound
not
cltd
test
mov
nop
cmpsl
mov
daa
cmpsb
rcrb
cmp
ret
xchg
xor
movsl
and
scas
jno
sbb
or
es
shrb
jle
enter
xor
dec
mov
xchg
adc
daa
sub
movsb
cs
aas
stos
addr16
adc
in
rep
stc
lds
cld
mov
enter
insb
mov
fwait
cmpxchg
cli
bound
fstpt
gs
imul
adc
and
icebp
nop
mov
push
popf
mov
mov
jmp
mov
fsubl
pop
call
mov
test
jle
hlt
mov
pop
in
sub
adc
lods
cltd
push
and
rcll
mov
mov
js
loope
xor
push
test
xchg
out
setg
push
out
mov
jo
mov
and
int3
pop
inc
mov
shl
repnz
mov
xchg
push
and
lret
ret
adc
mov
mov
cmp
dec
adc
imul
pop
mov
jg
jbe
mov
arpl
cld
lret
insw
mov
dec
mov
sub
and
lret
sahf
idivl
pop
mov
fmulp
xchg
dec
fs
je
push
cmp
mov
aas
jne
mov
or
popf
inc
enter
fldl
push
ss
push
mov
fisubrs
mov
das
push
xor
mov
loope
shll
nop
xorb
int3
cmp
add
pop
push
cli
gs
pusha
inc
test
out
mov
xchg
inc
imul
mov
mov
ja
nop
mov
imul
scas
and
cltd
call
jg
sahf
jecxz
push
stos
sahf
daa
and
inc
pushf
pop
push
js
adc
imul
lret
inc
adcb
xor
test
dec
jg
and
movsl
inc
arpl
inc
lcall
outsl
mov
shll
adc
std
sbb
dec
out
xor
lahf
pop
lods
xchg
das
push
test
scas
mov
scas
in
push
jg
mov
cmp
mov
dec
arpl
adc
test
sbb
mov
sub
cmp
outsb
xchg
jno
ret
scas
out
in
imul
sbb
jnp
sbb
lret
push
push
ljmp
out
add
mov
push
jge
ds
lods
leave
roll
loop
mov
shrl
aaa
in
and
or
cmp
imul
cli
out
sub
or
loop
enter
jae
xorl
push
test
outsl
call
sub
and
les
outsl
mov
in
mov
cltd
cltd
lret
mov
inc
push
les
subb
mov
xchg
inc
adc
cmp
faddp
pushf
or
sbb
orb
pop
mov
mov
inc
sahf
mov
pop
jg
in
test
push
test
push
arpl
loopne
jg
push
sti
testb
cltd
sub
fidivrs
mov
xor
mov
inc
xor
cs
cmpl
mov
hlt
jnp
fs
aaa
addr16
push
mov
gs
shl
adc
icebp
in
or
mov
fdivrs
pop
cwtl
ret
xor
loop
adc
inc
inc
int3
xor
mov
fcoms
lret
xor
mov
pop
sub
jb
fwait
or
aam
cmp
mov
sbb
push
mov
loopne
dec
pusha
jae
push
xchg
in
dec
shrl
js
fmuls
lds
std
pusha
sbb
push
fdivs
clc
les
adc
add
out
inc
test
loope
pusha
aas
xor
dec
repnz
or
frstor
loope
pop
push
enter
xor
data16
outsb
xor
xor
das
sbb
scas
and
popf
out
test
shl
mov
mov
lods
mov
sbb
add
jb
pop
rolb
lret
outsl
add
jae
ret
mov
jmp
xchg
cmp
testl
psubq
in
insb
out
or
and
mov
lret
mov
pop
pop
xchg
inc
les
dec
push
roll
and
jo
jl
xor
sbb
sbb
in
insb
cmp
inc
bound
insb
addb
xchg
jmp
test
pushf
stos
cmp
fs
and
xchg
sub
push
or
addr16
inc
push
loop
cmp
pop
inc
jmp
mov
movsl
and
or
decl
stc
into
scas
jne
in
pop
inc
orl
sub
mov
push
outsl
bound
scas
jnp
pop
mov
divl
adc
cmp
stos
pop
lea
dec
sbb
xor
pushf
notl
jecxz
xor
lcall
add
inc
aaa
xchg
rorb
gs
shrl
or
test
idiv
sbb
dec
insl
fdivrs
rorb
lods
jecxz
xor
in
int3
xor
jecxz
andb
push
aad
ljmp
jne
in
push
mov
icebp
adc
cmp
jg
notb
movb
shrl
sub
nop
and
xchg
pop
jne
inc
add
repz
push
aad
fs
jne
in
mov
data16
or
outsl
mov
stc
loop
inc
push
stos
xchg
xor
call
push
data16
rol
push
repnz
icebp
loopne
cmp
cmp
jl
ret
jbe
js
inc
lods
aaa
sub
std
js
out
js
mov
jge
out
mov
or
push
stos
not
sub
fldcw
jcxz
adc
dec
xor
cmpb
mov
fwait
mov
lds
lock
xchg
adc
enter
mov
enter
movsl
sbb
inc
in
sbb
jno
xor
xor
jno
cmp
icebp
lods
push
lock
imul
loopne
inc
jl
imul
inc
test
adc
in
mov
in
cmc
push
fwait
in
push
adc
mov
push
inc
pop
or
inc
lds
data16
pusha
not
lret
pusha
mov
sti
mov
bound
pop
fisttpll
push
xor
and
or
xor
in
push
xchg
jmp
adc
test
fistpl
cmp
mov
jne
mov
test
clc
and
mov
sub
dec
jecxz
and
mov
mov
stos
lods
cmp
or
aas
stos
jno
sbb
clc
and
xchg
fwait
jo
cmp
xor
push
xlat
xor
cmp
sbb
sbb
rolb
ja
in
out
fdivs
pop
sbb
pusha
ljmp
adc
xchg
aaa
icebp
outsl
rcrl
push
mov
gs
pop
cmp
sti
pop
push
mov
idivl
rorb
cmovo
mov
stos
or
int
fxch
int3
ficoml
bound
mov
outsl
mov
and
negb
clc
mov
clc
dec
or
loop
lahf
in
test
mov
pop
pop
jecxz
add
scas
into
roll
mov
push
add
cmpsb
call
cmp
xchg
stos
leave
sub
mov
mov
pop
mov
mov
cmp
test
pop
cltd
cmp
sahf
in
jbe
sbb
stc
out
rep
push
js
cmp
push
imul
and
out
lret
pusha
jp
js
orb
outsl
and
ret
cmp
sub
out
pop
xchg
add
cmpl
ror
stos
mov
push
test
sbb
ficoms
adc
popa
pusha
je
mov
dec
shll
mov
cmp
mov
ficoms
mov
dec
adc
test
cltd
xchg
data16
cli
es
aad
dec
xor
pop
lahf
jb
mov
mov
jg
sbb
dec
lock
repnz
adc
outsb
fdiv
int3
xor
or
mov
addr16
inc
mov
mov
push
mov
mov
and
cmp
push
scas
adc
outsl
sbb
cmpsb
out
xor
dec
jae
leave
xchg
mov
in
xchg
inc
xorb
sbb
mov
pop
pushf
ret
pop
rolb
clc
inc
and
lods
das
out
sbb
mov
xchg
repz
cmp
lods
mov
aam
push
mov
and
sub
mov
lcall
sarb
mov
and
out
scas
imul
adc
mov
stc
enter
mov
sbbb
xlat
sti
call
pop
outsb
xor
lret
not
sbb
xchg
xor
scas
loope
or
test
cli
xchg
mov
or
cmp
js
jae
mov
push
pop
icebp
aam
inc
push
inc
lods
outsl
cmpb
fildll
fiadds
test
cmp
dec
sub
push
into
setg
fidivrs
cmpl
push
mov
jl
iret
mov
mov
sbb
xchg
daa
sbb
sub
inc
jg
sub
mov
adc
shll
sub
add
adc
xor
pop
lea
mov
sub
push
push
int
push
jnp
fdivr
fsub
mov
add
aaa
add
test
addr16
jnp
cmp
push
lds
inc
in
sub
daa
or
push
aaa
mov
nop
stc
mov
mov
int
imul
adcb
mov
xchg
push
cmc
mov
mov
repnz
outsl
das
xchg
pop
lret
pop
inc
outsb
and
xchg
call
and
cmp
push
aad
push
dec
sbb
pushf
test
sbb
enter
dec
loop
lods
out
jle
pop
jo
test
add
add
mov
xchg
sub
lcall
sti
xchg
jl
adc
mov
push
addr16
fcoml
loopne
sub
cmp
add
or
push
xor
xchg
into
push
add
stos
lcall
fstl
dec
fisubl
cs
xlat
cmp
mov
xchg
std
jmp
cmc
pop
xor
lcall
icebp
mov
jnp
jo
iret
sahf
mov
popf
cmp
cltd
xor
mov
pop
inc
or
xchg
negl
outsb
stos
test
inc
inc
xor
push
sarb
aam
inc
clc
sbb
repz
call
pmaxub
imul
scas
sbb
cmp
push
xchg
pop
pushf
leave
out
mov
push
mov
or
stos
mov
or
fsts
sbb
dec
sarl
aas
xchg
dec
mov
adc
clc
in
aaa
dec
push
fistps
mov
scas
cmp
jmp
leave
pop
xor
aas
ret
dec
fldl
movsb
clc
and
clc
test
add
cmp
and
in
xor
jl
pop
fwait
shl
push
cwtl
add
cmpb
push
fisubl
add
lahf
ja
or
adc
hlt
dec
fs
mov
repz
mov
rcrb
sub
jmp
mov
lds
dec
jne
lea
sbb
lods
and
sub
pushf
addl
iret
mov
scas
jp
and
ja
ficoml
add
rclb
mov
movsb
or
lahf
lds
inc
je
adc
xor
cmp
and
dec
adc
js
lret
ss
popa
add
shll
iret
mov
xchg
mov
scas
inc
mov
xchg
cmp
pop
addr16
orl
cmpsl
or
lahf
cld
out
out
stc
mov
push
jge
or
call
push
xchg
int
pop
mov
pop
lahf
fadd
pop
stc
cmpb
cmp
xchg
ss
mov
xchg
es
mov
fs
adc
in
and
sarb
sarl
ljmp
dec
decl
fnstsw
aas
mov
std
xor
push
sarb
movsl
jo
enter
jno
and
xorb
inc
adc
out
std
mov
mov
and
popa
sbb
dec
sub
inc
inc
lahf
dec
jae
sahf
pop
push
mov
inc
mov
dec
ret
sbb
fsubrl
int
add
popf
and
mov
mov
jne
in
mov
push
cmp
addb
fldpi
add
adc
cltd
mov
or
jl
lcall
xchg
daa
jle
popf
call
sub
cmc
pop
and
test
or
stc
jl
faddl
or
mov
outsb
mov
fstp
inc
mov
int
shrb
dec
jge
jmp
xchg
dec
movsl
icebp
out
ret
out
push
out
dec
lods
stos
mov
add
stc
daa
dec
insl
jae
inc
xchg
push
push
cmpsb
mov
push
pop
lret
cmpsl
cld
mov
rcr
sbb
push
fcmovnb
ja
jo
gs
mov
icebp
sub
or
shll
sti
rep
mov
or
sahf
lods
fldt
dec
sbb
adc
jns
das
sbb
jns
or
call
scas
mov
ret
push
xchg
xchg
gs
in
mov
xchg
xchg
xor
sbb
sahf
or
popf
mov
gs
rcrb
jbe
sbb
fcoms
and
mov
out
andl
add
clc
cmp
cmpb
add
in
mov
popa
adc
cmp
xor
add
pop
insb
dec
and
push
adc
addl
xchg
fstl
js
scas
mov
and
mov
in
js
dec
and
lods
pop
mov
push
adc
push
mov
push
mov
sbb
jo
test
jge
and
jle
pop
cmp
and
cmc
es
shll
or
in
xchg
push
loop
pop
bound
cli
scas
mov
jge
pop
mov
outsb
fdivp
adcl
outsl
cs
in
dec
pushf
pop
adc
jp
push
mov
gs
adc
mov
cmp
pushf
add
fbstp
jecxz
push
jns
call
adc
mov
cmp
flds
inc
sahf
xor
mov
push
mov
pushf
add
push
cs
subl
xchg
fwait
and
pop
icebp
cmp
cmp
insb
jne
xor
test
test
add
fwait
aad
inc
inc
sti
push
xlat
jecxz
jge
mov
mov
mov
jae
cmc
das
mov
adc
test
aas
add
xor
iret
test
sbb
call
sahf
mov
mov
pop
pusha
xlat
stos
ret
and
jmp
jno
or
addr16
push
jl
or
pop
sbb
push
mov
sub
out
lods
cltd
test
ffree
pop
cmp
test
xchg
addr16
xor
cs
dec
stos
loop
popf
sub
flds
loop
mov
adc
hlt
imul
sarl
xor
pop
decb
mull
add
or
xchg
fldenv
jne
arpl
aas
out
push
test
out
jl,pn
xor
inc
fcoml
repnz
movsb
cmp
rorb
mov
sbb
lods
mov
xorl
adc
stc
or
mov
bound
icebp
sti
shrl
outsl
push
je
idivb
int3
ficomps
sarb
mov
pop
mov
xchg
call
rcll
loopne
insb
and
ret
push
outsl
sbbl
int3
fdiv
test
das
call
jg
bound
outsb
or
sub
insl
inc
mov
enter
push
sti
sahf
push
stos
std
movsl
incb
mov
sbb
into
pop
mov
xlat
pop
dec
adc
loope
aas
push
les
push
inc
mov
jnp
sbb
imul
mov
das
lcall
mov
das
es
ljmp
mov
test
push
aam
in
sbb
loope
stc
in
jae
pop
icebp
pop
dec
adc
push
or
iret
adc
push
or
in
insl
adc
xchg
cmpl
pandn
push
or
mov
add
int3
adc
jl
je
mov
bound
dec
adc
xor
std
clc
lea
push
xchg
adc
fisttpl
dec
es
dec
iret
xor
or
out
sbb
mov
inc
pop
dec
out
lahf
mov
fwait
jne
aaa
push
loop
sbbl
cmp
xor
inc
pop
xchg
loope
pop
stos
sbb
pop
mov
pop
cli
mov
push
stc
jb
jae
mov
adc
jno
cmc
and
cmpsl
aaa
push
sub
mov
icebp
adcb
rorb
and
popa
lock
pop
iret
mov
cmp
mov
imul
repz
xor
call
mov
and
es
stc
add
iret
nop
data16
pop
sub
lahf
push
addr16
fdivrl
push
loop
adc
popf
mov
fbstp
mov
bound
stos
mov
fists
ret
jae
add
jmp
jbe
sbb
test
sti
gs
enter
push
jae
aam
hlt
cmp
data16
enter
data16
fsubrl
cmp
push
test
in
dec
push
inc
sub
test
pusha
cmc
mov
adc
mov
test
pushf
shll
push
js
out
andb
adc
dec
jmp
sti
in
sbb
pop
push
jns
rcrl
mov
inc
cmc
or
xchg
xchg
mov
in
and
push
pushf
in
mov
int3
pop
dec
cltd
add
cmpb
dec
and
cs
sbb
sbb
xchg
push
insl
push
xor
cmpsl
xchg
cmp
xorl
cmp
out
dec
cmc
out
js
movsl
mov
mov
ljmp
pop
mov
loope
mov
sub
mov
xchg
mov
sti
xchg
nop
aas
jmp
insb
sub
xor
clc
lods
inc
pop
lods
icebp
pop
mov
and
xor
inc
les
sbb
fdiv
sbb
add
pop
shll
adc
xchg
sti
adc
rorb
dec
outsb
outsb
push
gs
inc
mov
mov
lahf
je
rcr
and
pop
inc
jmp
mov
pop
sbb
jg
pop
ljmp
lcall
imul
loopne
add
ret
leave
in
mov
gs
enter
fwait
push
add
inc
fwait
adc
pop
adc
or
push
pxor
and
loop
push
addr16
push
and
push
ret
or
lcall
inc
dec
inc
inc
cmpsl
scas
orb
loopne
fstpl
sub
mov
daa
cmc
cmp
jno
sub
leavew
adc
jb
outsb
xchg
jno
xor
mov
fistpll
imul
movb
iret
inc
pop
pop
mov
fwait
out
inc
scas
push
sti
bound
xchg
loope
test
dec
mov
or
dec
aas
push
test
add
cmp
xchg
pop
or
cmp
cmp
in
xlat
arpl
and
mov
stc
daa
rol
stos
pop
outsb
inc
xor
jecxz
sbb
cmp
xor
xchg
fs
cmpsb
pop
sarb
mov
xor
jecxz
inc
in
int
adc
jb
jns
cmp
es
jl
xor
nop
add
fimuls
je
repz
mov
fnstcw
mov
daa
mov
fstl
sbb
cmpsl
ja
mov
call
push
outsl
lock
sti
adc
add
nop
dec
push
adc
jmp
fwait
sarb
inc
sbb
scas
mov
pop
add
inc
nop
stc
std
clc
inc
inc
outsl
repnz
cmp
and
fstp
mov
mov
fidivs
idivb
stos
je
xchg
and
lcall
insl
mov
jle
outsb
mov
insl
mov
push
jns
xor
stc
outsl
shr
out
int
sub
mov
test
mov
orb
dec
mov
inc
or
ja
das
or
lds
incl
sbb
aad
sbb
sub
sbb
sbb
add
outsb
ret
stos
jne
arpl
stos
loope
push
movsb
jb
sub
pop
cwtl
dec
cmpsl
ficoms
mov
cmp
loop
nop
popf
mov
dec
pop
lret
lea
test
xor
jmp
dec
cli
pop
push
push
in
mov
push
outsw
dec
nop
movsl
js
or
xchg
xchg
xchg
in
mov
xchg
push
inc
sub
xor
cmp
jae
rcr
mov
enter
es
inc
inc
sub
sub
xorl
nop
or
test
popf
mov
mov
cmpsl
imul
push
es
inc
jae
aam
inc
hlt
nop
and
out
push
es
jb
out
repnz
mov
lods
dec
mov
or
mov
xor
and
outsl
push
shlb
or
in
cmp
mov
inc
cs
dec
pop
xor
lret
iret
inc
xchg
repnz
pop
mov
in
cmp
and
fldcw
js
lcall
mov
movsl
xchg
sub
rcl
cmp
enter
fimull
mov
cld
mov
clc
movsb
inc
sbb
xor
mov
sub
jns
jg
sbb
sub
or
mov
push
push
ret
jmp
mov
lret
cmpsb
rcr
mov
shlb
pushf
mov
mov
xorl
or
lea
sub
xchg
mov
sbb
mov
iret
push
xchg
popa
lock
sub
push
cli
push
lods
loope
and
mov
test
int3
ret
sbbb
add
push
jg
mov
aam
hlt
xchg
adc
jmp
pop
stc
or
aaa
stos
cmp
add
std
scas
mov
into
filds
and
mov
repnz
loopne
inc
inc
stc
in
jg
movsb
repnz
jg
cmp
nop
sahf
out
sub
ret
adc
inc
cld
gs
out
scas
out
xor
repnz
pop
push
jp
ljmp
addl
aam
cmp
outsb
xchg
sbb
insl
daa
adc
movsb
icebp
test
jle
mov
pusha
inc
sub
jmp
mulb
mov
inc
shll
jbe
adc
xchg
pop
in
mov
pop
jmp
adc
push
lret
stos
test
push
sahf
pushf
dec
nop
test
push
cmp
pop
pop
adc
repnz
dec
jl
mov
mov
mov
sub
ja
repnz
movsl
cmpsl
call
inc
mov
jle
cltd
add
fldcw
xlat
call
in
mov
mov
push
or
out
js
std
inc
inc
jge
and
jo
call
xchg
scas
mov
adc
nop
adc
push
mov
and
scas
stc
lods
rorl
mov
jno
in
push
enter
inc
outsl
jno
xor
das
xor
loop
cmp
and
inc
or
ja
add
arpl
xor
fbstp
adc
gs
lods
nop
imul
sahf
aam
fistpl
pmaxub
rcrl
cli
inc
pop
pushf
mov
jl
adc
insl
test
mov
pop
daa
fildll
popf
test
xchg
jmp
stos
dec
scas
xor
cmpsb
and
lcall
gs
inc
add
int
mov
pop
out
orl
mov
pusha
cmp
xchg
bound
test
pop
mov
loope
dec
mov
mov
xchg
rep
mov
mov
or
jnp
mov
push
xor
ud2
pop
cmp
push
cmc
aaa
lea
in
je
popf
jge
sub
add
jnp
cmp
into
adc
push
xchg
cli
aad
rcrb
les
leave
fs
and
lcall
add
insb
jecxz
lods
iret
add
adc
ljmp
inc
or
lcall
aad
int3
leave
test
out
xchg
cmc
pop
inc
test
xchg
fmul
sub
cltd
or
je
fwait
pop
jns
mov
dec
lock
daa
mov
xlat
aas
push
repz
dec
repz
popf
js
fidivl
jp
nop
iret
stc
cltd
xor
out
jns
xchg
mov
inc
dec
xor
inc
and
add
ja
push
mov
notl
cwtl
push
push
je
aam
les
sub
mov
sub
aaa
xchg
shll
sbb
cs
mov
ret
ja
sarb
jnp
sbb
jns
divb
xor
pop
rol
cmc
outsl
mov
ds
or
aad
fwait
mov
mov
inc
jno
adc
or
pop
push
pop
lea
jp
mov
add
sti
movsb
mov
stos
ret
popa
push
sbb
and
adc
pop
add
jb
out
imul
aam
mov
pop
cwtl
add
sub
enter
dec
mov
push
shlb
xchg
notl
add
push
mov
mov
mov
add
out
cmp
or
mov
push
ds
into
cmpsb
adc
or
xorl
xor
sti
loop
dec
jp
cld
test
and
fsts
pushf
divl
mov
xchg
or
mov
push
xor
fnstenv
xchg
xchg
sar
pop
add
pop
fisubl
and
xchg
or
das
adc
adc
cmp
aas
icebp
mov
lds
test
nop
push
jl
loop
pushl
push
jbe
in
xchg
push
inc
pop
xchg
sbb
and
loope
sbb
or
xor
or
lahf
jns
fwait
jp
popf
nop
sar
dec
jg
cmpsl
xor
inc
jge
daa
rolb
mov
mov
out
outsb
jge
bound
jne
out
inc
ljmp
xchg
mov
jo
mov
mov
ljmp
popa
popf
jl
pop
push
clc
int
sub
adc
nop
popf
aaa
scas
xchg
adc
mov
aaa
lds
push
xchg
dec
popf
add
ja
scas
jns
hlt
jmp
pop
out
divb
enter
fwait
lret
push
test
repnz
push
inc
adc
cmp
fildl
xor
pop
outsl
xor
xor
cmc
imul
dec
movsb
faddp
mov
and
jbe
enter
pandn
pop
mov
imul
jno
sub
pop
sub
std
ret
jns
cmp
nop
je
mov
popf
mov
dec
add
push
or
sbb
out
lcall
scas
aad
dec
fcompl
adc
iret
and
push
jno
or
pop
cltd
mov
mov
inc
mov
lds
mov
mov
in
cwtl
and
icebp
rorl
inc
or
push
outsl
jl
mov
adc
cmp
mov
lahf
fcmove
ja
or
jle
mov
rolb
stos
jle
lret
push
mov
outsl
cmpsb
jl
inc
dec
out
cmp
jb
dec
jbe
aad
imul
inc
jbe
lcall
lret
scas
test
pushl
mov
imul
fsubrl
dec
lret
mov
push
jb
inc
pop
in
out
fadds
mov
in
add
outsl
xchg
test
mov
and
adc
xchg
fs
lea
jg
mov
xchg
imul
insb
mov
ss
add
pop
mov
popa
gs
inc
aam
and
ret
imul
arpl
mov
jae
inc
push
sarb
and
lea
out
mov
aas
pushw
gs
push
add
cmp
mov
adc
fsubrl
xor
movsb
mov
jae
cld
stos
mov
mov
enter
cmp
cmpl
sub
repz
daa
fincstp
cmp
mov
ds
xor
pop
pop
and
or
out
lods
leave
jp
mov
add
mul
ljmp
adc
out
mov
aam
xchg
mov
add
pop
adc
dec
sub
pusha
inc
sbb
fstps
mov
mov
jo
fstl
test
mov
or
pop
adc
dec
aam
movsl
insl
out
jno
rorb
movsb
data16
and
sarb
xchg
shufps
push
sub
outsb
cmpsl
pusha
push
inc
push
int
sub
fists
push
mov
or
jle
or
or
dec
insb
mov
cmp
inc
cmp
xchg
xchg
sarb
loope
loope
and
mov
rorl
push
in
cs
addr16
clc
and
jge
xchg
and
test
dec
ljmp
dec
shlb
nop
pop
in
test
push
lods
mov
call
icebp
mov
pop
insl
push
lahf
cmp
cmp
nop
shll
cmp
sub
ret
inc
lock
das
in
out
nop
sub
out
jns
popf
push
mov
cwtl
adc
out
mov
adc
sbbb
jge
in
push
sub
or
inc
mov
or
xor
inc
test
gs
adc
insl
sub
push
push
mov
das
cmp
popa
jbe
mov
add
lods
in
outsl
in
mov
orb
mov
fistpl
hlt
test
and
jne
cmp
rclb
data16
xchg
clc
fcompl
int3
out
divl
pop
fbld
sub
xor
cli
xor
add
into
cli
sub
jbe
movsl
cltd
or
pop
lret
sbb
pop
fisubrl
push
nop
adc
inc
sbb
dec
int3
push
pop
pop
jo
xor
lds
jo
mov
cmpsl
fdivs
add
test
xchg
add
mov
bound
inc
push
cltd
test
and
lds
jg
dec
mov
add
dec
bound
mov
lods
sbb
mov
es
nop
nop
movsb
cmc
decl
shrl
and
loopne
push
cmp
jae
inc
sti
mov
dec
lods
cmp
cmp
xor
add
mov
or
fidivs
xor
mov
xchg
inc
push
inc
push
fldcw
fwait
and
popl
pop
ljmp
daa
stc
loopne
pop
dec
fwait
pop
add
out
adc
push
jle
int3
cli
lret
mov
xchg
inc
lock
call
sbb
in
push
ret
or
mov
inc
loopne
into
bound
int3
adcb
mov
mov
data16
pop
mov
imul
fisubl
shll
out
test
mov
jmp
dec
es
sbb
or
jg
jl
sub
pop
push
ss
call
pop
fs
push
repz
xor
cmp
ret
stos
sub
dec
adcl
add
in
mov
pop
jb
dec
mov
pop
std
in
or
push
add
lahf
push
sbb
jnp
jl
sar
aad
sbb
addsubps
lea
sar
in
sbb
mov
mov
lahf
cli
int
inc
sbb
ss
stos
sbb
adc
js
lods
rcll
pop
xor
das
pop
nop
jnp
adc
hlt
popa
adc
test
inc
cld
and
jbe
imul
scas
pushf
int
mul
cmp
dec
dec
lock
ds
enter
mov
jg
xchg
pop
pop
cs
cwtl
aad
xor
mov
or
adc
push
loop
jno
push
pushf
imul
inc
pop
push
fistpl
or
test
aad
push
inc
mov
xor
sub
out
or
arpl
push
idivl
mov
jmp
jecxz
scas
jae
sbb
adc
in
sbb
xor
pop
dec
sbb
call
addr16
test
addr16
stc
cltd
push
fcmovu
xor
movsb
addr16
addr16
mov
jg
adc
imul
dec
and
cli
jle
push
jecxz
rorb
addr16
dec
and
cmc
repz
or
pop
xchg
cltd
push
jo
fsubr
mov
jmp
aad
cltd
inc
mov
lock
jmp
lret
rcrb
outsb
add
in
test
sahf
push
scas
cli
or
push
pop
jae
sbb
call
jno
sbb
fisttps
loope
orb
jmp
subl
mov
cwtl
pop
rol
std
mov
pushf
sahf
into
jno
or
adc
mov
loope
ja
out
jecxz
push
mov
cmp
push
dec
mov
sti
and
cmpsb
or
jmp
xor
scas
ret
mov
dec
cmp
loope
push
xor
pop
add
cmp
enter
scas
cmpsl
scas
addl
popa
scas
sub
idiv
jnp
sub
movsb
jno
dec
test
cli
sub
sbbl
repz
in
jle
js
cmp
sbb
xchg
dec
jl
or
loope
sbb
xchg
adc
fwait
push
mov
scas
aas
and
dec
cltd
sbb
jno
in
test
test
jnp
fcomip
frstor
js
sbb
cmp
icebp
clc
pushl
loopne
xor
out
or
popf
aad
std
es
jp
jg
jnp
sbb
push
out
jbe
push
nop
aaa
lea
xchg
loop
outsb
xchg
pop
ret
xchg
les
and
call
dec
fdivrs
out
jb
cmp
xor
les
jne
aad
and
inc
xor
lret
sub
faddp
aad
mov
cmp
and
jmp
sub
adc
mov
imul
jmp
push
jnp
adc
repnz
movsl
cmpsl
xor
mov
mov
dec
cmp
pop
mov
lds
int
mov
gs
iret
and
scas
into
lods
in
hlt
cltd
aad
xchg
jp
icebp
lock
and
in
dec
xor
jns
lret
popw
mov
icebp
mov
mov
testb
xor
pop
push
mov
cmp
imul
cmpb
pop
mov
adc
out
aam
out
mov
sti
dec
leave
fadd
push
dec
xor
push
jmp
int
cmp
xchg
enter
clc
cltd
mov
jae
mov
mov
dec
mov
lahf
adc
xor
outsb
inc
xlat
mov
loopne
inc
dec
xchg
cmp
adc
loopne
fucomip
push
aaa
in
shrb
push
xchg
std
xor
jnp
xchg
jae
repz
mov
repnz
sub
mov
inc
aas
cmp
or
pop
sub
rclb
xchg
pop
or
cmp
mov
mov
adc
xchg
ss
mov
mov
dec
mov
add
and
stos
cmp
mov
add
xor
mov
outsb
mov
or
dec
fwait
xchg
in
push
lret
mov
adc
fbstp
mov
rorb
aam
imul
addr16
sbb
outsb
xchg
out
out
adc
xchg
ja
insl
or
aaa
jnp
mov
cmp
mov
jg
inc
sarl
sahf
dec
ja
out
and
adc
test
inc
sbb
xor
iret
cmp
sahf
stos
dec
cltd
add
and
adc
shll
out
cmc
mull
push
add
leave
xchg
xlat
pop
sarb
int
and
stc
push
or
xchg
mov
cmc
mov
pop
dec
jmp
adc
cmp
xor
mov
or
xor
rcll
and
stc
adcb
test
pop
jge
sbb
jmp
cmp
and
jecxz
int3
xchg
arpl
push
decb
sub
mov
movsb
mov
in
fwait
adc
jmp
aad
lahf
jge
add
push
sbb
push
sub
xchg
push
jnp
sub
scas
and
ds
rclb
mov
testl
jae
std
mov
inc
int3
out
xchg
jo
fsubrl
repnz
test
jle
pop
fcompl
test
add
icebp
fs
push
loopne
dec
mov
jne
ja
cld
cmpb
inc
mov
add
fimull
or
call
sbb
jb
and
int
sbb
fsubr
pop
sbb
lods
jg
pop
xchg
push
jge
sbbl
je
xchg
and
fcomps
pop
xchg
icebp
mov
jne
subb
inc
movsl
sti
inc
mov
loope
add
cmp
insl
jne
cmpsb
inc
cmp
push
mov
arpl
xor
jmp
iret
pop
push
aaa
out
je
push
repnz
dec
mov
fdivrl
sbb
loop
pop
imul
jb
jnp
mov
fcom
mov
rorl
mov
and
sub
mov
xchg
or
push
ss
test
xor
pop
mov
mov
mov
push
imul
leave
lcall
jecxz
push
fs
test
lods
dec
sti
ds
mov
cltd
cs
jne
and
mov
add
aad
roll
mov
lahf
idiv
lods
dec
jo
add
jmp
rolb
pop
mov
xor
mov
jle
jmp
jp
repnz
inc
and
popf
mov
lock
xchg
push
adc
push
sbb
xor
adc
pop
aaa
or
sub
test
ficomps
push
dec
ds
mov
je
sub
mov
xor
xor
sub
enter
test
sbb
mov
jno
ficoms
call
sahf
sub
xchg
bound
test
adc
fwait
test
xchg
test
int3
sahf
addb
fcoms
arpl
xor
ret
pop
test
cmp
ljmp
cmp
adc
mov
es
add
bound
lods
aas
ss
sbb
aad
sbb
or
repz
dec
add
push
lcall
mov
cmp
mov
dec
adcb
clc
popl
cmp
popf
aas
and
push
and
add
mov
les
or
pop
and
cli
hlt
fdivrl
test
cmp
test
imul
fcompl
cmpsl
adc
out
pop
sbb
insb
lock
mov
fwait
or
sbb
sbb
fdivrl
add
mov
nop
xlat
xchg
rclb
cmp
inc
daa
sub
jg
xor
hlt
fisubrl
dec
cmp
pop
lds
rcrl
push
sbb
xchg
push
stc
pop
cmpsb
rclb
popl
fsts
icebp
popf
fistpl
stos
mov
imul
in
shl
xor
pop
sub
jae
xchg
push
popf
push
call
mov
rclb
xchg
div
int3
mov
lahf
jb
stos
in
fcomip
cmp
cmp
sbb
cmp
lahf
gs
outsb
jne
test
pop
lea
xorl
jg
dec
mov
scas
inc
lock
mov
and
mov
loop
pusha
rorl
arpl
mov
jge
into
and
arpl
mov
popa
subb
pop
xlat
fwait
mov
bound
clc
lea
or
pop
cvttps2pi
in
sub
lret
jo
sar
adc
das
mov
sbb
cmpsb
outsb
add
sub
cmp
mov
add
cwtl
or
test
mov
jp
std
pusha
pop
bound
pop
sub
lret
cwtl
inc
xor
repz
push
lcall
lock
cmp
jns
fbstp
jl
and
mov
xor
sub
mov
icebp
cmc
mov
out
mov
into
dec
mov
xchg
call
mov
jle
scas
loopne
and
int
aaa
pop
sbb
dec
not
adc
inc
shll
cmc
push
cli
sub
jnp
ja
or
cmp
mov
lret
out
mov
dec
cwtl
cld
sti
jnp
xchg
fwait
js
arpl
mov
ljmp
cmpsl
int3
cmp
mov
ret
lea
add
pop
fisttpl
mov
mov
cld
cwtl
nop
loopne
mov
fmull
mov
cld
mov
call
jns
aad
jnp
inc
jl,pn
fs
push
mov
sub
mov
push
neg
xor
xor
in
jg
push
clc
daa
adc
xor
int3
int
add
fnstenv
mov
aaa
jbe
sub
cmpsb
repnz
imul
clc
inc
shl
mov
push
cmpb
aaa
sub
xor
xor
ljmp
xlat
mov
dec
das
mov
aad
ret
lahf
cmp
in
out
scas
test
cmp
stos
push
rcrl
pop
movsb
fistpl
insl
inc
mov
cmc
sahf
xor
test
dec
lcall
insl
fcmovnu
mov
add
scas
push
pop
cmpsb
push
inc
pop
xor
or
or
gs
push
daa
and
or
outsb
mov
sub
ret
sub
mov
std
dec
sar
jnp
sahf
pop
mov
movsl
adc
fidivrs
lods
jae
out
iret
lret
jmp
and
flds
lahf
inc
inc
push
pusha
add
mov
mov
jmp
jle
addb
push
sbb
rcrl
cmc
cwtl
std
mov
cmp
lock
sbb
sbb
pop
fstpl
mov
es
xchg
aaa
adc
das
aam
jnp
sbb
push
and
xchg
fwait
and
imul
pusha
mov
push
inc
sbb
dec
out
mov
or
fmull
or
lret
jg
push
dec
lea
shll
fcmovnb
je
xchg
add
data16
mov
mov
daa
ds
sbb
outsb
sub
pop
repz
mov
rolb
daa
test
lcall
or
lea
xor
sahf
pop
lcall
mov
daa
cmc
flds
mov
scas
xchg
cmpsl
aaa
loop
addr16
dec
shll
pusha
out
adc
imulb
arpl
dec
push
rorl
cmpsl
pop
lcall
es
and
add
lcall
sub
outsb
aas
rol
cmp
loope
pop
pushf
iret
outsl
xchg
ret
and
fmull
cmp
and
aad
popf
ret
shrb
icebp
idivl
lods
gs
push
cld
dec
mov
js
cmpsl
lods
sarl
xchg
ja
cmp
test
dec
stos
push
and
jecxz
cmp
test
mov
dec
mov
mov
mov
xor
movsl
mov
inc
decl
hlt
pop
aas
out
ficomps
lret
and
ud1
mov
xchg
mov
lods
fdivrl
lret
fwait
stos
jno
mov
ljmp
lock
shlb
aas
in
lea
stos
movsl
jl
out
sub
xchg
lods
insb
xchg
dec
sub
enter
in
mov
xor
mov
push
pop
sarb
mov
dec
imul
mov
xchg
jl
sub
lds
dec
jae
sbb
xchg
mov
scas
mov
mov
fmuls
xor
adc
pop
jle
call
cwtl
pop
cmpsl
scas
std
cltd
dec
lcall
mov
xchg
rolb
fldcw
scas
stos
cmp
push
and
adc
sbb
pop
cmpsb
aam
push
dec
xor
jecxz
js
aas
jle
mov
mov
xchg
mov
lcall
dec
jno
pop
ds
imul
or
clc
xor
ret
jmp
pop
imul
sti
rsqrtps
icebp
outsb
sbb
mov
xchg
mov
ljmp
call
push
in
sub
cwtl
mov
pop
fldenv
loopne
jg
mov
scas
add
ja
je
sbb
sbb
jne
sarl
push
mov
pop
pusha
jecxz
das
dec
sahf
xchg
je
pop
shrb
bound
int3
daa
sub
hlt
movsb
xchg
iret
testl
adc
sbb
xchg
loopne
mov
icebp
jns
std
pop
mov
add
mov
fmulp
lret
mov
and
clc
push
lods
imulb
roll
push
mov
and
xor
out
inc
pop
dec
sbb
lock
sahf
repnz
cmp
xchg
mov
mov
loop
jo
call
shlb
xchg
push
aaa
int
dec
xchg
adc
pop
pop
cld
adcl
shll
sahf
mov
xchg
adc
pop
xchg
ss
jnp
xor
repnz
and
inc
dec
sbb
shlb
and
insl
mov
das
push
cmc
mov
hlt
add
inc
jl
sbb
mov
outsb
mov
aam
jp
pop
test
cmpsl
inc
xchg
add
cwtl
inc
xchg
pop
repz
loop
pop
mov
test
pop
outsb
lcall
adc
jge
jl
scas
stos
sub
xchg
rorb
in
jno
xchg
aaa
cmc
sub
sbb
lahf
xchg
jns
hlt
sarl
shl
add
pusha
arpl
mov
cmp
stos
sub
lret
inc
mov
cmp
xchg
imulb
scas
das
pushf
fs
push
fisttpll
insb
add
imul
lock
stc
push
add
push
adc
fisttpll
inc
xchg
mov
xor
adc
insb
cltd
in
jno
xchg
cli
jmp
jge
dec
inc
xchg
xchg
adc
inc
popf
mov
sbb
mov
das
fldl
mov
jg
dec
sub
or
loopne
aaa
out
inc
mov
add
arpl
push
add
inc
mov
push
sbb
lahf
mull
jle
and
loopne
gs
jns
out
mov
out
pop
std
or
je
clc
test
fsub
jnp
pop
mov
add
fildl
jb
fmul
aaa
mov
sbb
jb
xor
xlat
test
int
adc
pop
les
jle
lret
push
cmp
aam
subl
adc
inc
jle
or
pop
inc
xor
sub
adc
sub
inc
cwtl
sub
or
ret
mov
test
xchg
mov
lret
pop
xor
in
xchg
cltd
ds
jno
mov
push
pop
mov
aam
push
imul
jmp
mov
inc
test
int
rcr
push
mov
add
rcrb
movsl
xor
sbb
int3
sub
jle
xor
js
sbb
fcmovbe
and
into
push
scas
jl
ret
sahf
inc
jecxz
mov
xchg
sbb
xchg
cli
aaa
mov
fdivl
fstpl
jmp
pop
adc
data16
imul
inc
mov
int3
adc
or
lret
cmp
jge
dec
inc
xchg
cmp
aad
insl
push
inc
test
popf
fisubs
int3
pop
jns
adc
icebp
scas
jns
mov
pop
push
sbb
test
insb
aaa
clc
dec
aaa
mov
push
dec
sub
jecxz
cld
xor
and
pop
lcall
jg
imul
or
mov
adcb
dec
shlb
arpl
popf
rep
sbb
bound
mov
mov
fists
ds
xchg
fdiv
cmpsb
movsl
leave
pop
mov
and
mov
adc
pop
out
rclb
pop
mov
add
jecxz
in
mov
jmp
mov
pop
sub
mov
jno
clc
decl
insl
dec
sbb
daa
test
out
daa
jbe
pop
adc
adc
jle
mov
sahf
out
inc
loopne
sub
dec
push
xor
mov
xchg
call
imul
adc
in
inc
lcall
mov
out
mov
mov
push
loop
sti
push
inc
push
add
fwait
pop
mov
fstl
ret
addl
inc
out
sbb
and
cmc
inc
mov
adc
enter
or
cltd
push
xchg
push
dec
fsubr
in
rol
repz
out
dec
incb
mov
mov
call
xor
mov
push
out
lods
bound
push
mov
ds
outsb
call
mov
dec
in
in
add
call
or
cltd
fisttpll
aam
jmp
je
cmp
out
repnz
lds
jo
push
out
stos
mov
pop
mov
jae
jle
bound
mov
mov
test
xor
fistps
inc
jo
push
add
sbb
xchg
cmc
ret
std
mov
loope
mov
stos
push
je
comiss
arpl
mov
imul
sub
aaa
fs
cmp
adc
cmp
mov
pop
mov
or
cmp
sbb
dec
xchg
sub
jae
and
fisttpll
testl
rorb
lret
xor
nop
push
arpl
mov
movsl
ja
clc
jae
aad
xchg
dec
lcall
addr16
push
imull
lahf
mov
mov
subl
in
gs
fldl
sbb
ret
inc
xchg
inc
xchg
ret
jg
fcompl
mov
leave
orb
cwtl
mov
inc
xchg
xlat
sbb
loopne
pushf
ss
pop
cmp
mov
fbld
in
fs
scas
pop
or
jge
and
test
pop
mov
or
cmp
add
sbbb
mov
fcoml
push
mov
cmp
not
add
and
xchg
fimull
loop
mov
arpl
js
mov
mov
lods
aas
negl
push
out
or
or
iret
sahf
xchg
je
jecxz
lcall
inc
test
xor
jnp
inc
mov
inc
push
fmuls
repnz
add
sbb
mov
inc
int3
int
sub
test
adc
xlat
aaa
ret
add
mov
addr16
cmp
push
cmpsl
xchg
mov
sahf
arpl
pop
jge
or
push
jl
cmp
jle
bound
jne
outsb
loope
mov
aam
cwtl
test
adc
xor
das
in
into
movsl
add
ret
mov
imul
icebp
in
lods
mov
cmp
pop
sbb
pop
xchg
stc
sub
insb
dec
data16
notl
mov
rcll
inc
xorl
int3
cltd
fadd
mov
jns
cmp
repz
xchg
sub
push
int
loopne
ficoms
popa
cmp
push
xlat
hlt
xchg
mov
int3
leave
out
adc
mov
jbe
pop
inc
dec
decb
std
cmpsb
lret
ja
xchg
mov
fisttpll
adc
in
cmc
or
push
push
lret
xchg
outsl
pop
and
outsb
ret
repnz
mov
ret
adc
popa
lods
adc
xchg
call
adc
xor
pop
xchg
lods
inc
stc
data16
mov
lea
lods
jns
mov
ss
or
in
cmp
mov
stos
movsl
mul
adc
pop
xor
jnp
int
test
out
cs
mov
negb
movsl
js
cmpsl
cmp
push
hlt
out
fimull
jo
out
std
sub
out
or
std
xor
in
outsl
idivl
xor
addr16
xor
lret
and
push
cmp
pop
xor
xchg
jge
arpl
sub
mov
sub
stos
pop
test
stos
fcomi
scas
rol
xor
rorb
int3
xor
jl
into
lcall
push
insl
pushl
jmp
push
imul
push
bswap
jo
les
adc
out
shrl
in
pop
pop
clc
std
pop
loop
xchg
sub
aam
push
data16
push
mov
cld
mov
xor
mov
mov
xchg
mov
dec
mov
push
cmp
out
adc
xor
hlt
test
mov
popf
ficomps
add
xor
or
outsl
inc
push
sub
vcvtps2pd
pop
mov
add
test
loope
cmp
dec
xchg
in
dec
cld
stos
inc
int
insb
cwtl
in
data16
mov
xchg
adc
arpl
sbb
sbb
clc
pop
pusha
insb
jl
xchg
test
jp
shl
out
adc
inc
or
pop
pop
push
out
das
js
fnsave
xchg
rorb
ficompl
fistps
xor
adc
xor
add
mov
xchg
adc
jge
sub
subl
lock
jp
cmc
jecxz
enter
mov
loope
ret
fimull
dec
dec
out
ljmp
hlt
jp
and
aas
enter
jl
divl
insb
push
push
mov
and
ret
and
cs
cli
clc
je
out
movsl
dec
scas
insb
inc
shl
icebp
inc
cmpsl
in
jns
or
xor
mov
fwait
sbb
and
test
cmpsl
inc
and
inc
sbb
stc
fidivrl
cmpsl
out
adc
dec
mov
cmpsl
or
adc
add
sbb
adc
mov
out
je
dec
dec
inc
repz
js
jo
or
jo
mov
xchg
rcrb
and
mov
dec
sub
out
lock
mov
mov
xorl
in
in
and
daa
jo
stos
mov
sbb
shlb
movl
movsb
xchg
xchg
jg
push
jl
subl
ror
mov
push
outsb
add
mov
pop
aaa
or
mov
push
out
jge
cmp
into
cmp
imull
std
mov
lods
fists
mov
push
cmp
test
xor
test
cmp
xchg
outsl
sub
mov
inc
repz
sbb
orl
sub
es
cmpsl
inc
adc
pop
cmpsb
inc
jae
shlb
and
jnp
ret
ss
loop
and
std
lds
add
dec
jmp
scas
in
bound
rep
out
scas
ja
cmpsb
js
push
jo
push
add
fstl
insb
inc
and
pop
lds
jbe
rcr
xchg
pop
inc
fbstp
pop
fsubrs
fdivl
fxch
jmp
sub
mov
jge
and
out
bound
ror
aad
imul
mov
xchg
jbe
movsb
fistps
aaa
and
dec
loope
cmp
pushl
xor
es
sub
out
or
lock
outsb
and
sub
movsl
mov
xchg
cmpsl
xor
popa
std
outsl
add
icebp
fwait
cmp
jecxz
lds
icebp
add
test
repz
aas
test
cmp
in
sub
clc
pusha
cmp
repnz
mov
jns
xchg
out
jne
call
mov
incl
push
popa
mov
or
push
push
in
jae
mov
in
pop
imul
jmp
add
sbb
mov
mulb
jbe
jne
mov
sbb
mov
adc
popa
push
sub
pop
jecxz
adc
adc
jns
push
mov
add
rcrl
pushf
jns
push
xor
int3
in
dec
pop
imul
xchg
lea
mov
call
out
clc
mov
cmpsl
and
imul
aaa
imul
xchg
cs
push
adc
pop
xchg
mov
lret
rcrl
jno
bound
imull
lret
add
adc
dec
sub
test
add
lock
sbb
jge
cld
mov
xchg
inc
sbb
jecxz
mov
dec
mov
loope
shl
inc
cs
fisttpl
or
cmpsl
jl
cli
ret
test
cmpsb
les
movsb
pop
out
loopne
lock
addr16
aas
jmp
ficoms
add
out
adc
pop
test
rorl
fs
into
test
test
test
or
add
leave
sub
adc
shrl
add
rolb
leave
xchg
xchg
arpl
inc
mov
lods
sbb
add
cs
outsb
std
jnp
lcall
mov
fnstenv
loopne
xchg
mov
bound
aad
daa
lret
sbb
mov
xchg
jbe
pop
cltd
aam
mov
mov
lret
ss
jne
sub
adc
mov
lock
test
pop
lock
or
sub
mov
daa
div
lods
int3
cs
jg
jge
push
sub
mov
add
xchg
xchg
cmpl
les
shrl
xchg
dec
lea
jg
mov
jg
icebp
notl
out
outsb
out
xor
in
pop
pusha
xor
clc
dec
hlt
test
movsl
dec
pop
loop
or
fs
jecxz
cmp
inc
js
dec
pusha
cmp
call
mov
and
je
cmp
ret
pop
call
jb
insb
mov
xchg
mov
jnp
arpl
imull
insl
pushf
jg
sub
sub
shll
push
xchg
mov
in
gs
cmc
fcomps
mov
insb
popf
in
or
fcomps
sub
adc
pusha
xor
cmpsl
push
jbe
xchg
cmc
cmpsl
sub
aas
adc
inc
sbb
cmp
sub
xchg
mov
adc
and
es
mov
das
adc
push
lods
add
outsl
pop
popf
adc
and
push
adc
stc
and
jne
pop
mov
gs
cld
enter
sbb
push
jne
enter
add
dec
or
or
or
pop
jp
dec
dec
mov
sti
movsl
idivb
mov
not
ss
mov
stc
cmpsl
out
es
dec
mov
or
push
push
cld
inc
pop
push
lea
mov
jb
fmuls
cmpsb
lock
cs
and
xchg
daa
adc
dec
jge
and
pop
mov
sub
cmp
cmc
fcomp
loopne
pushf
jmp
jge
rcrl
je
lds
mov
add
ss
cmp
cmp
and
ss
adc
mov
aaa
les
sub
inc
arpl
xchg
pushf
cmpsb
xchg
jg
dec
xchg
mov
into
cmpsb
cld
enter
cmp
xor
and
leave
popa
enter
xchg
sar
inc
mov
dec
sub
sbb
xchg
mov
popa
fsubrp
daa
sbb
mov
sub
dec
fldl
jecxz
adc
and
push
movsb
cmp
lock
jnp
iret
test
ret
mov
int
mov
jae
xorb
lock
push
stc
cmp
pop
ret
flds
sbbb
jo
mov
pop
cmp
cmc
mov
xor
ljmp
je
test
push
arpl
inc
add
lcall
mov
fistpll
shrl
maxps
add
nop
jl
jge
icebp
loopne
or
xchg
es
cmpsb
fisttps
adcl
fwait
mov
sub
sbb
pop
inc
mov
pop
push
pop
mov
sub
cltd
mov
push
adc
aaa
mov
sarl
fmull
sbb
cmp
stc
add
fnstenv
push
pop
gs
es
jbe
loop
sbb
xchg
xchg
mov
inc
cli
test
in
aas
jecxz
lods
jle
and
stos
andl
fmul
into
cs
imul
lea
adc
cmp
dec
mov
cmp
into
es
sub
cmp
jae
repnz
fsubs
ja
push
jl
and
cmpb
push
clc
adc
pushf
cmp
movsl
cmpsl
pop
addb
sti
or
popf
xchg
mov
lds
xlat
ljmp
sub
scas
add
addr16
cwtl
xchg
in
das
dec
test
icebp
add
rcrb
data16
jge
stos
inc
xchg
pop
je
in
pop
cli
cwtl
pop
scas
xor
loope
ja
clc
orl
pop
out
mov
iret
push
xchg
enter
xor
pop
inc
dec
mov
std
jnp
shrb
pop
fiaddl
sub
mov
sbb
clc
scas
mov
adc
mov
jbe
dec
es
push
mov
push
adc
subb
jle
jmp
test
sbb
pop
out
jl
and
sbb
sbb
jmp
add
sub
lahf
icebp
bound
inc
xor
inc
pushf
jmp
mov
ret
xor
cmp
negb
rol
or
or
inc
add
mov
sub
je
fmulp
es
rcll
shll
sbb
and
add
dec
addr16
repz
lods
outsb
nop
push
js
out
cmp
push
enter
mov
inc
xor
neg
popf
fsubl
outsl
push
push
sub
cli
xchg
sbb
push
dec
mov
cmpsb
nop
mov
or
push
add
jne
push
loop
mov
and
sub
jns
fsubp
xchg
leave
xchg
enter
xchg
ss
stos
es
int
movsb
addl
jne
xchg
and
push
roll
or
mov
mov
pop
ds
ljmp
push
or
aam
xchg
mov
xchg
add
mov
inc
or
or
jns
imull
hlt
mov
xchg
add
divb
cmpsb
shrl
jecxz
inc
in
cwtl
xlat
push
xlat
mov
pushf
es
adcl
cmpsl
pop
cld
ss
jl
ret
jno
or
leave
cwtl
in
mov
nop
cmpsb
mov
in
popa
dec
std
das
xor
or
sub
push
cmc
lods
fistpl
loope
xor
gs
mov
pusha
push
hlt
mov
mov
or
call
ja
add
mov
lcall
add
and
pop
lds
loope
and
push
sti
das
or
mov
aaa
nop
enter
pop
nop
xchg
jns
xchg
stos
mov
mov
scas
or
push
or
repnz
lcall
cmc
xor
sub
inc
xor
pop
xor
mov
dec
loop
adc
popa
pop
jbe
in
and
xlat
in
inc
dec
roll
mov
or
jge
push
sub
mov
fwait
cs
scas
adc
and
xor
dec
iret
popa
push
mov
xchg
rclb
sub
sbb
and
jecxz
adc
inc
scas
push
pop
aaa
sti
mov
or
je
nop
inc
xchg
and
pop
xchg
adc
or
rcll
into
xor
loop,pt
sbb
sbb
repnz
scas
cmp
or
lahf
jecxz
into
xchg
repz
and
sahf
jle
jmp
mov
movsl
lock
cld
fimuls
leave
mov
repnz
push
jge
xchg
push
or
pop
adc
aam
aad
pop
mov
sbb
xchg
and
push
popf
mov
lods
mov
mov
hlt
cltd
test
test
or
add
or
pop
or
mov
add
divb
jg
pop
or
and
mov
pop
xchg
andl
xchg
lea
insl
push
andb
dec
and
add
inc
sbb
lret
xchg
xlat
xchg
adc
cmp
pop
push
mov
movsb
in
adc
pop
test
cmp
out
dec
test
mov
cld
mov
ljmp
flds
insb
cmc
es
sbb
cmpsb
out
xchg
mov
mov
mov
dec
ja
mov
addr16
inc
fbld
aad
movsb
mov
test
and
add
cli
pusha
ss
jno
lcall
dec
icebp
dec
xor
jb
pop
sub
fisubrs
cmpsl
fcomps
mov
xchg
std
dec
clc
and
xor
dec
dec
pop
arpl
test
jne
xor
jle
jmp
fbld
sahf
dec
insl
leave
or
or
pop
push
in
cmp
sbb
fsubl
ret
jae
xchg
xor
jo
inc
push
cmp
mov
adc
test
add
pop
arpl
stc
xor
xor
mov
pop
inc
imul
pop
out
ds
add
jl
mov
addr16
xchg
inc
and
loopne
sarb
add
xor
roll
loopne
xchg
sti
pop
pop
jle
sbb
stos
inc
sub
sbb
js
mov
inc
cltd
iret
pop
or
shr
repz
ret
push
movsb
addr16
std
mov
testb
push
ss
or
addb
je
aam
cltd
ljmp
lret
push
leave
inc
adc
imul
rorb
pop
and
push
in
xorb
xchg
add
test
js
adc
add
clc
mov
sub
jmp
sub
shr
mov
insb
pop
loop
popf
adc
lock
clc
enter
mov
sub
mov
add
fldcw
cs
mov
ficoms
icebp
lock
inc
jbe
pop
add
xchg
inc
adc
or
into
mov
int3
or
lcall
cmp
stc
hlt
ret
xor
cmp
xchg
mov
pop
pop
popa
xchg
hlt
jle
xchg
cs
jbe
push
mov
adc
jmp
paddw
daa
imul
testb
lds
cmp
lock
das
lods
add
adc
rcrb
repnz
std
arpl
insl
es
mov
jo
mov
cltd
xor
jg
int
out
dec
lods
jmp
jge
shll
cmp
sub
mov
cld
int3
scas
inc
cmp
sbb
inc
dec
mov
xchg
dec
sti
int3
mov
incl
mov
cmpl
mov
lock
mov
mov
aam
jg
mov
cmpsb
xchg
ss
jle
daa
insb
add
sbb
je
gs
and
mov
mov
xchg
dec
std
stos
cmpsb
int3
std
imul
push
dec
mov
xlat
inc
cwtl
movb
cwtl
fsubr
sub
xor
mov
xchg
pop
jb
xor
jmp
ret
sbb
cmpsl
push
daa
ffree
dec
mov
jae
push
test
mov
testb
out
sbb
add
inc
mov
movsl
mov
cmp
lds
pushf
loopne
fsub
clc
inc
adc
pop
jp
lods
push
sbb
mov
out
pop
out
mull
addr16
addr16
mov
ljmp
cld
imul
xchg
xchg
and
dec
or
addl
sub
add
adc
test
xor
les
jo
push
gs
in
dec
push
ds
imull
cltd
pop
mov
xchg
mov
ja
xlat
cltd
jno
pop
inc
cmpsl
vunpckhps
mov
jle
dec
mov
xor
dec
xchg
push
std
sbb
mov
movsl
or
ljmp
sti
sbb
in
stos
mov
movsl
mov
jb
cmp
ret
mov
push
or
das
shl
loopne
xchg
cmpsb
mov
adc
outsb
repnz
xchg
inc
add
dec
dec
dec
cs
push
out
test
call
push
pusha
gs
adc
ljmp
in
xor
fisubl
sbb
jbe
bound
mov
out
add
jecxz
xchg
xor
sbb
mov
inc
pushf
mov
dec
outsb
lahf
pusha
pop
fidivs
in
subl
xchg
inc
ljmp
addr16
xchg
sub
inc
mov
jae
push
shll
xchg
std
dec
faddl
pop
lods
push
aas
lods
sbb
fcomps
out
sti
enter
inc
mov
sbb
mov
dec
dec
push
lea
mov
sbb
cmp
repz
mov
repnz
into
imul
inc
jg
push
out
adc
shrb
xchg
add
popf
mov
psubb
xchg
inc
outsl
push
inc
mov
dec
fbld
sub
ss
xor
mov
dec
xchg
leave
pop
in
pop
lds
add
scas
mov
shll
pop
mov
sahf
arpl
fwait
cmpsb
rcrl
inc
outsl
mov
push
and
xchg
inc
inc
mov
jecxz
subb
loopne
aam
add
or
dec
ja
inc
lods
xor
or
divl
cltd
dec
imul
sbb
fcompl
mov
cmp
mov
lahf
inc
mov
jb
sub
inc
mov
and
popa
push
xchg
mov
jb
fcmovnb
outsl
imul
out
js
mov
test
mov
insb
sub
or
add
mov
popf
or
mov
fisubrl
ret
stc
push
sub
ljmp
sub
adc
dec
loope,pn
sar
pop
pop
aaa
es
rcrb
cmp
cmp
dec
add
mov
jo
push
divb
stos
adc
push
cmp
outsb
movsl
dec
cmpb
out
aad
test
loopne
cmp
subb
jl
stc
inc
sti
adc
xchg
push
int3
aam
jge
je
or
push
push
aaa
cwtl
xor
push
movsl
sbb
xchg
add
sbb
fldl
mov
mov
ss
adc
mov
dec
das
icebp
mov
nop
jnp
pusha
mov
fcompl
cmpsb
mov
inc
xor
sahf
jne
push
adc
out
xchg
mov
mov
fisubs
addb
outsb
dec
clc
outsb
lock
icebp
fscale
sbb
out
stc
cmp
xor
imul
insb
pusha
and
aaa
mov
cmp
jmp
push
pop
pusha
js
nop
mov
adc
fmuls
imul
jnp
leave
fwait
mov
sub
cmp
mov
mov
outsl
mov
iret
adc
out
imul
repz
or
mov
xchg
data16
push
add
mov
mov
jo
fwait
push
aam
xchg
mov
jb
rclb
in
test
shll
lods
inc
inc
jecxz
arpl
mov
imul
pop
std
dec
mov
ret
aaa
and
sub
cmpsb
mov
jmp
sbb
in
lock
sbb
in
cmp
xor
test
push
jno
data16
mov
sti
iret
sub
mov
inc
mov
cmp
and
add
push
add
ljmp
push
fldt
daa
das
sbb
faddl
shrb
in
lret
inc
leave
mov
dec
fldenv
stc
cmpl
fs
push
fsubrl
mov
ljmp
aad
test
loopne
mov
leave
pop
jl
cmp
jle
pop
rcr
loope
out
push
ds
cmovle
enter
movsb
loope
inc
outsl
lds
push
adc
test
pop
fisttpll
cmp
cmpsb
add
add
mov
test
into
popf
mov
xor
push
pop
pop
mov
cmc
push
push
sub
push
and
je
jne
xlat
jmp
filds
shrl
dec
sub
stc
jg
out
std
negl
adc
shrl
rcr
cwtl
into
jl
cmp
pop
jbe
cmp
int3
xchg
and
fs
dec
adc
add
pop
loop
daa
in
xor
mov
data16
inc
push
push
lret
inc
jge
sbb
cmp
push
clc
cwtl
in
push
mov
sub
mov
arpl
sti
sar
add
pop
cld
dec
pop
push
in
sbb
cmp
cmp
das
xlat
mov
test
movsl
lret
mov
xor
sbb
aaa
pusha
jb
inc
mov
jns
aaa
scas
adc
mov
mov
and
imul
and
mov
xchg
in
call
enter
xchg
aam
ja
enter
call
pop
pop
or
cmpb
adc
jae
or
outsl
xchg
and
push
lret
xchg
add
nop
sahf
and
test
xchg
outsb
mov
xchg
imul
dec
cmp
sub
adc
sbb
lret
out
or
sbb
es
cmp
jmp
aaa
les
xchg
cmp
aad
stos
jecxz
push
cmp
lret
dec
inc
out
cltd
icebp
ja
dec
inc
pop
xor
add
and
fiadds
and
mov
adc
mov
inc
xor
call
mov
sbb
out
xor
mov
dec
cli
ja
scas
mulb
push
call
xchg
dec
xchg
stos
and
mov
mov
add
sub
lea
shrl
xor
cmpl
jmp
addr16
dec
cltd
int3
jnp
cwtl
cmp
jecxz
xor
inc
stos
daa
out
iret
xchg
pop
xchg
cli
add
jns
jg
stos
scas
notl
mov
inc
cmp
and
enter
push
ret
addr16
cmc
cmp
mov
push
movsb
aaa
jb
push
jbe
loop
pop
adc
sbb
lea
lock
push
pop
lret
mov
cmp
lods
sub
dec
loop
jnp
and
mov
sub
pop
sbb
add
out
jae
xchg
mov
lds
dec
fimuls
push
out
popa
push
arpl
pop
adc
jne
cmp
jecxz
sahf
adc
int
mov
movnti
cld
rcll
cld
mov
fisttpl
add
mov
mov
sbb
jp
pop
mov
sbb
xchg
aad
clc
mov
sarl
sub
mov
sbb
jns
test
push
out
pop
sbb
cmpsb
repz
push
sbb
xor
test
mov
and
ss
xchg
das
bound
nop
push
cltd
mov
pop
fsubl
inc
ficompl
insl
sti
push
and
and
loopne
push
cs
rcrw
inc
pusha
xor
mov
rcrl
pop
out
ljmp
jb
aad
stos
cmp
add
lahf
adc
mov
push
adc
or
pop
dec
sbb
mov
mov
sub
pop
lcall
imul
jns
and
js
or
mov
sub
loop
cmp
push
pop
add
xchg
mov
arpl
mov
dec
sub
aad
mov
ljmp
loopne
xchg
cli
sub
popf
inc
iret
decb
into
cmp
mov
jmp
push
cmp
push
cs
sub
mov
cmpxchg
test
imul
push
fwait
sub
popa
and
cmp
pop
inc
and
inc
add
push
add
mov
lret
xchg
mov
fs
mov
jg
cs
xor
xchg
cs
adc
ja
insl
test
xchg
in
mov
fsubs
mov
lds
lods
xchg
jo
jp
mov
cltd
filds
mov
xchg
add
out
out
mov
cmp
sarb
repnz
jmp
leave
adc
ror
jmp
mov
xor
cmp
jecxz
stos
dec
push
les
xchg
negb
xchg
jge
mov
dec
sbb
out
nop
pop
fldcw
or
out
dec
jle
aam
mov
dec
into
scas
cmp
sub
stc
or
shrb
add
loope
add
cmc
cmpsb
je
fstpl
cmp
mov
rcll
sbb
inc
xchg
sbb
inc
daa
pop
or
jl
movsb
jmp
sub
scas
gs
adc
shrl
push
clc
sub
fldcw
jne
stc
pop
fadd
cmpl
pop
rolb
push
mov
test
test
clc
mov
cmpsl
add
sub
ret
jl
ds
pop
push
loope
pop
jno
cmp
movsb
sub
xchg
lods
mov
mov
fstpl
out
add
push
scas
mov
mov
aam
test
lea
dec
mov
jo
ds
inc
mov
inc
jmp
jae
cmpsb
cmpb
add
int3
movsb
addl
pop
dec
movsb
je
cmp
and
and
mov
clc
mov
xor
jne
sub
cmp
mov
cmp
inc
popl
cld
out
mov
cmc
lret
jbe
aas
and
bound
jns
pop
mov
xor
iret
jnp
xchg
out
mov
mov
jno
iret
jmp
out
add
shll
push
sub
rorl
popa
and
shll
mov
mov
scas
jl
sbb
or
mov
fadd
shrb
jae
add
mov
dec
push
jb
mov
mov
bound
or
in
out
fidivrs
sbb
insb
out
mov
push
mov
es
gs
mov
cmp
fisubl
lds
out
add
cmc
in
daa
popa
inc
jp
nop
les
xchg
xchg
mov
mov
add
enter
xor
sbb
idiv
pop
out
test
imul
push
xor
out
pop
push
fldl2t
daa
sub
add
ljmp
and
mov
add
push
arpl
push
sub
xchg
imul
shrb
pop
xor
or
daa
or
xlat
adc
jb
cltd
daa
clc
or
cmc
xor
push
adc
mov
scas
add
stos
sub
gs
shrb
cmc
enter
shr
dec
repz
lock
push
sti
fisubs
lock
fidivs
hlt
dec
dec
jl
mov
lret
inc
cmp
fnsave
je
out
ror
adc
movsl
xchg
adc
and
fldt
mov
sub
movsl
mov
call
cmpsl
popa
add
leave
mov
jae
or
cmpsl
cmp
sbb
mov
or
mov
scas
sub
lret
dec
ret
dec
lds
mov
pop
add
sbb
xchg
dec
sbb
ss
and
push
mov
add
test
clc
add
xchg
lock
sbb
loope
and
fisttps
idivb
push
mov
movsl
popf
push
cli
leave
ds
stc
mov
or
or
adc
push
adc
popa
jno
or
arpl
mov
out
mov
inc
or
mov
pop
pop
popl
test
rclb
and
dec
loope
insl
mov
sbb
ja
cs
pusha
fisubs
mov
lret
js
roll
adc
lahf
sbb
lea
jnp
dec
mov
repnz
xor
ss
aam
ds
and
js
cmpsb
dec
mov
repnz
jno
mov
dec
xor
bound
inc
outsl
nop
subl
adc
lahf
fstps
push
cmpsl
mov
stos
xchg
dec
or
cmpsl
mov
jmp
inc
shl
pushf
insl
int
outsb
adc
fdivs
push
je
jns
leave
and
jbe
call
outsl
mov
sbb
jle
es
bound
or
add
mov
shll
popf
pop
lcall
test
mov
call
out
gs
sub
dec
sub
xchg
pop
sbb
aad
stos
int
pop
stos
out
aaa
and
call
sbb
add
and
cmpsl
and
aas
popf
iret
lock
andl
cmpsb
adc
fcoml
jge
insb
dec
mov
cmpsb
in
inc
arpl
fdivrs
repz
push
loopne
test
shll
push
cld
mov
or
hlt
ffree
out
outsb
arpl
pop
mov
jg
bound
sbb
mov
inc
loope
enter
adc
in
lock
sbb
fdivl
in
insl
psrld
push
xor
rcll
mov
and
lcall
mov
int3
xchg
loope
inc
mov
call
mov
mov
add
cld
in
adc
shlb
xor
pop
sbb
inc
fisttpll
adc
lret
fcmovnb
dec
jnp
imul
jae
clc
xchg
and
pop
imul
jp
sar
pop
sbb
mov
stc
stos
and
pusha
mov
push
gs
aaa
cli
iret
cmp
cmp
int
or
and
adc
xorl
rorl
inc
cld
push
jl
lret
mov
and
scas
mov
push
pop
popf
mov
xchg
mov
add
cmpsl
cwtl
dec
push
in
sarb
aam
sub
mov
mov
mov
pop
cmc
or
cmpsl
testl
test
scas
mov
cmp
inc
cmp
insl
adc
cmp
pop
sub
mov
dec
jl
lods
jmp
sbbl
inc
out
add
mov
push
outsl
jmp
mov
cli
ja
adcb
loope
jg
inc
push
jmp
repz
loop
imul
mov
jp
add
cmp
fistps
rclb
or
mov
pop
pop
and
xchg
pop
sub
jnp
xor
loop
or
pop
bound
test
jno
push
xchg
outsl
adc
scas
and
xchg
sub
mov
mov
jp
test
mov
iret
fistps
enter
into
daa
mov
into
inc
cmp
jp
out
repnz
push
in
rol
test
and
mov
xchg
in
cmpsl
icebp
lods
call
jl
push
or
and
cmp
xchg
adc
mov
mov
into
fdivl
pop
or
xchg
add
jle
cwtl
inc
sahf
and
sub
inc
xor
pushf
jbe
inc
xor
test
stos
sbb
dec
and
mov
xor
inc
das
xchg
cld
daa
jbe
fsubrs
cmpsb
pusha
sub
mov
adc
into
push
dec
sub
push
mov
dec
sti
aas
sbb
sbb
push
pushf
mov
add
push
cmp
cmpsl
stos
dec
and
mov
cs
fldenv
loope
nop
pop
test
xchg
inc
je
add
dec
test
mov
fs
pop
je
jnp
rcll
outsb
jp
scas
ljmp
push
jg
pushf
mov
cmpsl
or
inc
das
sub
popf
mov
repnz
add
lahf
mov
xchg
jecxz
xchg
mov
push
aas
sbb
jbe
stos
dec
sub
mov
imul
push
mov
push
inc
push
sahf
sbb
jl
sub
mov
rorl
cmpsb
lods
sahf
int3
mov
imul
inc
out
mov
mov
pushf
imull
pusha
scas
pop
frstor
lods
push
or
lea
loope
arpl
arpl
push
decb
mov
cmpsl
mov
cmp
inc
fiaddl
mov
inc
ss
lret
imul
pushf
cmp
mov
mov
mov
xlat
xor
mov
mov
aad
fisubl
ficoms
out
inc
movsl
repz
add
sub
sahf
test
cmc
lods
xchg
adc
mov
gs
ja
push
pop
jecxz
xchg
sub
shlb
sbb
adc
push
outsb
fs
jecxz
cmp
nop
ja
mov
out
out
mov
dec
mov
fstps
cwtl
sbb
xor
add
nop
mov
sub
iret
fidivs
jmp
mov
lods
addr16
dec
cwtl
sbb
push
mov
xor
mov
fmul
jle
orb
and
das
rcr
inc
imul
sub
push
push
addl
int
or
sub
pop
nop
ja
inc
adc
add
cmp
jp
mov
mov
mov
or
xchg
dec
cld
imul
jo
mov
lret
fwait
lret
inc
das
leave
sub
pop
jge
jmp
test
push
xchg
in
negl
mov
xchg
repnz
mov
xor
push
aad
sub
sbb
sub
test
int3
jbe
cmp
pop
jae
jl
jae
xor
negl
inc
sub
jae
xor
inc
insb
in
lret
mov
negb
ljmp
aad
mov
cs
pushf
mov
dec
jmp
leave
jb
xchg
xor
sbb
daa
cli
fmull
xorl
rorl
sarb
imul
push
lds
std
push
push
inc
inc
js
rolb
xchg
and
sub
xchg
sbb
sbb
iret
rolb
sub
xchg
stc
cli
in
adc
jns
pop
subb
into
dec
dec
cmc
jge
aaa
inc
ret
insl
dec
mov
es
mov
xchg
fldcw
loopne
xorl
or
iret
add
mov
rolb
enter
add
subl
insb
mov
mov
push
mov
outsl
sbb
or
gs
in
lahf
jp
int
je
mov
fwait
mov
ljmp
xor
cmp
stos
sbb
xor
jge
push
repz
sti
mov
or
pushf
fistpl
jne
and
ficoms
daa
pop
inc
and
fstpl
repz
popf
ljmp
lods
pop
iret
push
lds
cmc
aas
mov
movsb
mov
add
testb
fwait
xchg
sbb
or
xor
mov
mov
dec
in
fwait
xorb
loopne
mov
orb
movsl
push
bnd
cmp
out
fdivs
sbb
rcll
push
and
cmp
lret
lods
enter
loop
and
std
bnd
mov
sti
mov
xchg
mov
mov
pop
rcrl
test
jae
pop
leave
dec
push
sub
imulb
xor
lods
movsl
shl
inc
sbbb
lods
lcall
push
aas
lahf
xor
cwtl
pop
rolb
or
std
sub
inc
pmulhuw
cmc
push
shl
xor
adc
push
test
pop
dec
sbb
and
jle
adcb
push
cltd
jp
dec
popf
aaa
jbe
xchg
adc
lock
push
mulb
adcl
mov
in
xor
mov
or
dec
fistpl
cltd
je
push
and
dec
not
or
or
bound
lcall
mov
cmc
jmp
movsl
dec
and
pop
inc
and
in
ljmp
adc
sbb
lods
imul
and
aas
dec
rclb
mov
inc
out
pusha
xor
mov
xchg
cmp
mull
stos
js
outsl
dec
sbb
lcall
jp
bound
mov
push
pushf
shrb
and
sbb
cs
cmp
rcrb
push
enter
hlt
sbb
lret
pop
jg
sbb
or
data16
or
push
dec
ja
sbb
inc
mov
scas
xor
mov
mov
sahf
mov
daa
mov
loopne
and
lds
into
std
sti
jno
sub
loop
xchg
inc
push
scas
sub
adc
inc
test
and
jbe
imul
bound
xlat
enter
mov
push
xchg
out
fistps
mov
xchg
push
lods
daa
push
dec
mov
cmp
sub
pop
push
fisubl
int3
lcall
push
sub
pop
mov
fbstp
jl
dec
stos
sbb
mov
pop
sbb
pushf
dec
add
sub
clc
ds
andb
mov
stos
jae
dec
ljmp
mov
aam
icebp
xchg
outsb
push
loopne
ljmp
jl
xor
push
dec
lcall
adc
pop
adc
cmc
mov
sub
xor
push
cmp
mov
in
jne
lea
aas
mov
sbb
xlat
jae
outsb
xchg
add
scas
fwait
or
cs
mov
push
ss
pop
aaa
xlat
push
cmpsb
pop
pop
adc
aad
in
and
xor
sub
in
arpl
add
adc
addr16
into
sub
std
jle
push
jl
lock
mov
cs
inc
mov
push
xchg
sub
insb
dec
fwait
in
iret
mov
adc
jmp
inc
mov
imul
add
pop
dec
dec
das
jns
out
imul
aaa
aad
fstpt
sub
lds
je
add
pop
lods
inc
jp
inc
or
sub
or
mov
mov
inc
fcoms
daa
pop
cmc
jle
sbb
or
stc
stos
lcall
xor
mov
inc
xchg
sbb
ds
ret
push
jmp
out
or
sbb
stc
mov
push
mov
inc
stc
scas
outsl
sar
inc
sbb
sub
std
adc
int
lods
cwtl
popa
nop
lds
inc
loope
jnp
nop
mov
mov
aad
jo
add
mov
add
aaa
iret
pushf
push
adc
shl
sbb
sbb
pop
pop
push
hlt
jecxz
adc
or
mov
shll
push
cld
mov
pop
xchg
or
push
mov
js
rcrb
or
add
add
in
xorb
shrb
cmp
cmp
addr16
mov
push
sub
gs
dec
js
bound
jno
xchg
jne
scas
mov
arpl
mov
jbe
mov
sub
dec
cmp
seta
sub
sbb
aad
mov
and
movsl
outsb
mov
ret
cmpsl
xchg
lret
mov
and
push
fsubl
addr16
and
adc
ror
movsl
or
fbstp
jo
and
mov
shr
es
jge
jp
push
in
xor
imul
filds
data16
out
jnp
mov
out
out
xchg
stos
push
imul
notb
pop
imul
sub
fcompl
xor
or
pushf
movsb
daa
in
pop
lock
out
int
push
bnd
cmp
xor
rcpps
push
ror
or
and
filds
inc
std
or
stos
daa
cmp
out
xchg
iret
xchg
jg
sub
pop
aad
push
test
lds
mov
jg
adc
push
iret
or
outsl
adc
mov
jl
into
push
lret
and
leave
jne
mov
scas
and
and
rclb
and
insl
add
mov
icebp
jbe
pop
iret
add
nop
mov
sbb
repnz
mov
nop
or
cmp
pop
mov
mov
xor
sbb
lahf
jb
ss
cld
ljmp
stc
out
mov
pushf
add
scas
aas
clc
scas
repnz
dec
shrl
xchg
pop
js
leave
jne
inc
add
add
scas
jno
jbe
xor
addl
mov
mov
psubq
mov
movsl
add
fsts
stc
mov
mov
lret
rolb
or
lods
shlb
cmp
insl
or
enter
xor
rcr
add
jle
xor
pop
push
jmp
xchg
std
icebp
pop
push
ljmp
cmpsb
sar
dec
sbb
and
xchg
or
nop
in
and
inc
cmpsb
imul
and
int
outsl
stos
xchg
insl
jmp
add
stos
and
push
dec
cli
clc
loope
fsubrl
scas
mov
push
xlat
push
and
loope
iret
pop
and
or
lock
imul
jl
notl
fdivl
and
je
add
push
push
das
jae
and
pop
pop
and
nop
xor
rep
xchg
dec
or
and
cmp
adc
jmp
stos
icebp
mov
or
int
scas
pop
sub
sbb
and
xchg
mov
jge
ret
xor
mov
popa
and
stc
adc
es
inc
push
or
ret
adc
jnp
cmp
jle
sub
arpl
fwait
sarb
hlt
lea
mov
xor
push
adc
mov
sub
lods
mov
lret
dec
in
xchg
int
jle
dec
pop
adc
dec
scas
mov
xor
je
imul
inc
add
pop
rorl
nop
sub
fsubr
dec
addr16
repz
fbstp
or
xor
aad
stos
ret
sub
xchg
mov
div
add
jb
outsl
pop
mov
xor
addl
std
or
in
or
ljmp
inc
inc
jne
ja
outsl
aam
and
lea
test
pusha
ds
jecxz
pop
das
adc
addr16
xchg
adcl
push
inc
vunpckhps
cmp
dec
cmp
add
shl
outsl
or
icebp
cli
loop
lods
sub
xchg
jmp
push
push
popf
xor
and
push
in
mov
mov
out
mov
xchg
adc
ret
mov
mov
mov
mov
mov
or
sub
jae
test
mov
gs
in
mov
and
mull
cltd
sub
push
inc
jge
pop
repz
cmpsb
ljmp
add
jle
mov
int3
ja
mov
rcl
out
hlt
and
pusha
dec
mov
ss
mov
lock
lret
pop
enter
dec
cmp
inc
xchg
scas
cmc
imul
or
inc
mov
ret
xor
xchg
fldt
inc
inc
mov
xor
dec
enter
mov
decb
jl
ret
push
and
popf
push
ljmp
rcrb
adc
test
add
cmp
iret
or
add
test
and
pushf
push
and
int
cli
mov
call
pop
addr16
je
lret
into
adc
jb
daa
pop
fcoms
and
sub
cld
sbb
test
mov
mov
aaa
xlat
loope
je
jo
psraw
xchg
rclb
fs
xchg
jp
jae
dec
cmp
lds
inc
mov
or
fisubrs
xor
stos
pop
pop
outsl
mov
xchg
sbbb
wrmsr
xchg
push
fs
mov
mov
push
loope
add
in
jnp
aas
push
and
inc
sbb
pop
lods
popa
inc
sbb
push
jle
add
icebp
lods
hlt
pop
jbe
jmp
nop
sti
rcrb
cli
shll
mov
jno
das
add
mov
ljmp
mov
cld
and
lahf
pop
jle
mul
data16
nop
mov
adc
lods
xor
adc
lods
push
lock
jecxz
call
fnstsw
in
sahf
mov
push
cmp
movsb
repz
movsb
data16
pusha
xor
xchg
push
out
xchg
fistpl
pmaxub
mov
inc
or
xor
repnz
xchg
popf
movsb
aaa
lcall
cmpsl
pop
add
int
cld
pop
adc
sbb
fldcw
add
or
int
push
imul
and
mov
pop
dec
cli
faddp
stos
xchg
sbb
fldenv
push
adc
mov
add
push
pop
xchg
in
std
xchg
jno
mov
adc
mov
xchg
inc
dec
add
xchg
movsl
xchg
int
and
or
sbb
daa
cli
out
lcall
xorb
or
sbb
pop
int
and
les
int
push
cmpsb
rol
arpl
sbb
mov
xor
fsubs
mov
mov
mov
data16
out
sti
sbb
mov
push
pop
sbb
movsl
out
cmc
pop
xchg
outsb
adc
std
pop
xchg
mov
xor
insl
inc
cmp
adc
sub
add
mov
inc
repnz
or
js
iret
and
xor
mov
sbb
mov
pop
mov
int
and
inc
lret
int3
dec
jb
cs
daa
xchg
aaa
mov
mov
lret
addb
push
xchg
aas
adc
ret
loope
lea
in
sar
sbb
mov
mov
dec
push
andl
dec
stos
sub
xor
jg
and
xlat
xchg
inc
outsb
sbb
cltd
test
inc
test
rcll
sbbl
fisubs
lahf
or
out
jbe
ss
dec
cmc
adc
xor
and
adc
ficomps
nop
pushf
pusha
es
jo
mov
mov
inc
or
pop
mov
das
sub
xchg
adc
pop
imul
std
outsl
fdivrs
repz
xor
or
mov
loop
adcb
cmpsb
cmp
enter
inc
inc
inc
loopne
fsubrs
repz
jle
adc
xchg
stc
sub
pop
jb
mov
xor
dec
pop
arpl
and
add
lea
negl
scas
mov
and
pop
push
adc
push
and
mov
push
loop
sub
insb
jg
daa
push
repz
sbb
scas
lea
inc
sub
les
pop
sbb
push
jle
mov
push
cld
shlb
outsl
sarb
inc
add
out
sub
movsl
rolb
in
in
loop
mov
stc
push
int3
sbb
dec
mov
and
pop
and
dec
shll
jmp
sbb
inc
lcall
cmp
shlb
in
xor
xchg
inc
jne
add
lds
add
and
add
xchg
push
add
add
sarl
insl
imul
addr16
xchg
pop
fwait
and
or
popa
cli
out
jmp
aam
mov
aad
adc
cwtl
fs
mov
mov
imul
inc
call
cmp
imulb
aam
andl
sti
xchg
mov
addr16
stos
push
mov
shl
push
pusha
jecxz
scas
sub
dec
and
out
sarl
xchg
xor
roll
sub
and
pop
inc
mov
jb
into
inc
sbb
sti
fnsave
mov
cltd
out
cmp
data16
ficomps
in
pop
adc
pop
lock
js
imul
mov
jo
push
outsb
mov
add
jmp
arpl
or
sub
in
add
lods
fwait
xchg
mov
pop
imul
jae
xor
and
jo
mov
idivl
sbb
and
subl
jae
xor
lods
jmp
mov
test
bound
mov
sub
enter
mov
xchg
int
loopne
fadds
mov
imul
out
sub
inc
and
push
mov
cmp
aaa
cli
addr16
sub
adc
loopne
cmp
pushf
pop
and
inc
subb
out
or
adc
sbb
dec
xchg
mov
mov
jno
jp
scas
pop
add
jno
sub
xchg
dec
sbb
test
je
pop
sbb
andl
jle
test
lock
bound
fidivrl
jno
fdivrl
adc
test
sarb
addr16
jne
int3
sub
loopne
je
inc
push
jb
mov
int3
int
inc
mov
pushf
les
fisttpll
out
jmp
add
in
lock
call
jmp
out
mov
add
pop
sbb
int3
outsl
inc
loope
mov
test
xchg
inc
fistps
fildll
inc
jmp
ret
fdivrl
dec
aam
int3
or
out
cli
mov
sbb
adcb
xchg
mov
es
gs
inc
lahf
movsb
rcr
int3
test
mov
cmp
jnp
or
fwait
or
inc
mov
xchg
xchg
outsb
hlt
mov
and
pop
dec
pop
out
mov
xchg
xchg
jno
pusha
fbld
mov
aam
js,pt
movsl
enter
movsl
sub
inc
jae
repz
and
mov
xor
dec
int3
stos
push
dec
hlt
scas
gs
xchg
fcoms
mov
push
add
adc
fldenv
dec
es
aas
stos
dec
lret
loopne
dec
jge
leave
insl
jns
jecxz
adc
mov
xor
mull
fldt
fstps
loope
lahf
jbe
or
jle
mov
lea
cmpsl
ds
mov
adc
cmc
add
push
and
push
outsl
or
rol
sub
scas
and
fwait
nop
mov
jnp
add
sarl
lods
mov
dec
sub
sbb
testl
loopne
push
aam
scas
jbe
sarb
inc
clc
adc
pop
jae
cmp
cmc
out
test
or
lret
mov
mov
ds
les
or
in
jp
popf
cmp
popa
js
push
and
fbstp
in
jp
mov
sbb
xchg
xchg
int
lods
in
addr16
and
pop
xor
test
insl
dec
jo
test
stos
loop
clc
mov
in
xchg
and
vfnmadd132ss
adc
bound
stos
in
sub
ror
xchg
sahf
daa
push
or
les
iret
cli
je
xchg
in
or
mov
mov
sahf
ja
loopne
pop
outsl
mov
mov
push
sub
popf
or
loop
movsl
daa
xchg
das
cltd
xchg
mov
jmp
pushf
sub
mov
mov
cmp
adc
sub
push
das
xchg
mov
shlb
out
aad
xchg
in
test
pop
lds
push
add
pop
jmp
arpl
jmp
bound
xor
fs
loopne
mov
or
mov
and
lret
jg
ljmp
imul
lock
push
dec
sbb
test
lahf
pop
cmp
mov
fldcw
lods
inc
out
and
enter
push
adc
adc
mov
in
cli
mov
imul
ret
push
xor
cmp
and
jne
das
mov
icebp
adc
lret
out
xor
mov
mov
jb
and
std
repnz
jno
mov
iret
sub
int3
xchg
mov
push
mov
or
insb
iret
inc
incb
stos
mov
out
rcrb
js
jo
cwtl
mov
jmp
mov
lods
inc
jnp
int
rclb
push
or
sti
out
aad
dec
mov
es
rcrb
loop
sub
popf
mov
lahf
mov
and
xchg
ss
movsl
int
xchg
xor
mov
lret
aam
in
xchg
arpl
sub
sbb
call
mov
mov
sbb
je
xchg
mov
fs
popa
push
repnz
dec
mov
xlat
cwtl
mov
and
sbb
jo
inc
cmp
jo
push
outsb
les
jl
adc
inc
std
cmp
xor
mov
out
pusha
or
aaa
cmp
mov
add
mov
pushf
adc
sbb
cmpsl
or
mov
xor
lahf
or
std
fdivl
jnp
pop
test
stos
adc
ror
jae
into
gs
mov
not
cmpsb
jg
cli
or
jae
test
in
sbb
mov
in
jmp
add
mov
dec
addr16
push
jo
mov
fcoms
sub
inc
in
push
lret
dec
mov
leave
mov
hlt
cmpsl
pop
rcl
pop
jmp
pop
sbb
sbb
xchg
out
dec
roll
and
ds
cli
call
out
repz
sbb
pusha
pop
addr16
push
int
dec
fmull
int3
mov
stos
das
pop
cmp
or
inc
push
movsl
push
cltd
sub
test
rol
ljmp
dec
or
in
fcoml
pop
dec
xchg
ret
std
and
subl
shlb
test
mov
loopne
adc
jnp
cmp
scas
mov
loop
outsl
in
inc
ja
lds
jg
ficompl
jne
xchg
xchg
sbb
pop
in
lods
gs
out
stos
lds
cwtl
pop
push
cmpsb
test
les
pop
add
rcl
std
mov
mov
pop
cld
cmp
inc
pop
xor
sub
and
xchg
sahf
shr
lret
add
dec
daa
xor
sahf
fwait
push
fnstenv
add
lods
aam
xchg
dec
int3
mov
jge
enter
sub
lahf
mov
inc
push
scas
je
dec
ds
mov
scas
sbb
mov
mov
out
cmpsb
lods
into
out
loop
mov
es
repnz
mov
les
das
in
mov
mov
mov
mov
xor
mov
repz
xor
xor
out
push
push
das
inc
or
out
xchg
mov
sub
test
lret
and
jmp
rclb
or
nop
jns
mov
gs
cmp
stc
mov
data16
cmpsb
dec
add
popf
out
or
mov
sbb
pop
test
xchg
movl
inc
jbe
jmp
jno
mov
inc
xchg
or
dec
cmpsb
loope
cmp
inc
push
add
in
xchg
int
jp
cli
aam
pop
bound
fwait
add
lock
xchg
in
cltd
push
mov
sbb
sub
ja
lock
or
mov
mov
roll
test
xor
stos
cmp
and
sbb
call
cmpsl
add
popf
sti
cmp
sbb
dec
js
scas
int3
push
mov
rcrl
or
jnp
int3
mov
mov
mov
adc
enter
jl
xor
pslld
jecxz
rcll
test
dec
fimull
cmp
ds
inc
cmp
pop
aas
imul
adc
es
in
fwait
rorb
in
add
mov
cli
xchg
pop
out
mov
mov
ret
movsb
fsubrs
loop
iret
aad
dec
or
add
sbb
or
jnp
shll
ret
lods
loopne
scas
in
ret
out
xchg
xor
out
popa
sbb
add
decl
inc
lret
stc
mov
dec
shlb
addl
je
mov
xchg
cmp
in
mov
std
and
mov
xor
sbb
jae
mov
pop
aas
jns
or
adc
cmc
pusha
or
stc
xor
scas
fs
jp
add
and
repnz
arpl
mov
xchg
push
cmp
std
mov
jl
shlb
icebp
jle
sbb
xchg
out
adc
xchg
sub
xchg
jp
mov
and
xchg
xchg
pop
sub
cmpsb
push
push
iret
xor
sahf
fidivl
test
cli
fildll
mov
adc
mov
mov
test
adc
lahf
push
jbe
loop
scas
xchg
inc
clc
mov
movsb
data16
imul
cmp
inc
flds
les
je
mov
or
jmp
sahf
push
and
mov
in
push
stos
jb
lods
cmp
push
call
loope
dec
dec
xchg
out
cmp
fnstenv
in
push
out
inc
mov
xor
iret
fldenv
mov
js
sub
mov
clc
pop
movsb
dec
rol
in
stos
in
popa
sub
mov
dec
sub
ljmp
repz
sub
pop
in
mov
lea
out
jns
xchg
xorb
ss
mov
dec
mov
mov
dec
outsb
and
test
test
incb
push
adc
xchg
jmp
mov
pusha
xchg
jae
mov
mov
sbb
cmp
out
fistps
add
sbb
mov
push
jns
jge
sbb
mov
daa
pusha
jg
jo
pop
xchg
js,pn
cltd
jmp
loopne
push
lock
or
daa
ror
mov
or
lods
pushf
out
sub
fdivr
test
adc
mov
fwait
mov
mov
dec
aas
sti
inc
pusha
jecxz
lods
das
pop
mov
xchg
divl
or
and
add
add
sub
inc
shr
cmpsb
fidivl
pop
iret
enter
xchg
xlat
rcll
xchg
inc
in
arpl
insl
insl
cli
stos
addl
sbb
stc
mov
dec
add
aaa
and
sub
cmp
mov
push
xchg
jo
and
cmpsb
jae
ror
out
hlt
jne
inc
jmp
arpl
into
jne
ss
mov
adc
aas
out
cmpsb
shll
cmp
stos
and
jns
inc
dec
imul
loop
jl
in
or
lds
adc
push
xchg
xchg
xor
cmp
int
mov
out
mov
fisttpll
sub
pop
jg
pop
pop
sub
adc
push
cmp
pop
jg
xchg
pop
mov
stos
and
cmpsb
ja
mov
stos
mov
or
cmc
aaa
lods
inc
into
mov
cmp
add
call
inc
inc
in
push
pop
out
out
mov
mov
dec
std
xor
push
aaa
popf
mov
mov
inc
lock
and
mov
inc
out
test
mov
pop
sar
mov
ret
andb
jl
xchg
pop
fnsave
jge
test
repnz
jg
jmp
rol
imul
imul
add
inc
jbe
dec
and
pop
orb
push
adc
loope
sbb
push
jnp
sbbl
mov
loopne
mov
mov
or
xchg
push
ja
ds
sbb
or
stos
int
sbb
in
fisubs
das
insl
sbb
lcall
mov
nop
rep
in
push
pop
std
xorl
mov
inc
xor
xor
inc
pop
pop
fs
push
push
inc
stos
cmpsb
mov
jnp
mov
jl
into
xchg
fyl2x
in
dec
cwtl
lahf
or
mov
sbb
out
mov
ret
jg
mov
icebp
sbb
jg
enter
shrl
xchg
jmp
les
stc
test
push
out
dec
pop
shll
cmpsb
xchg
or
push
ljmp
inc
call
cld
add
adc
ret
std
or
and
aad
fsub
inc
sti
imul
lret
stos
stos
js
add
add
adc
imul
xchg
popf
aam
int
adc
push
je
add
bnd
adc
movsl
in
cwtl
mov
shlb
and
scas
ds
imul
and
push
cld
mov
imul
adc
out
adc
insl
add
shll
inc
daa
xor
rolb
mov
shll
pushf
jae
stos
fdivrs
dec
cmpsl
imull
push
lods
jmp
imul
dec
scas
push
rolb
movsl
pop
sbb
cmp
jle
xor
push
fisttps
push
ja
push
out
sub
stos
jmp
mov
sbb
repnz
jae
push
xor
adc
or
xchg
and
jno
fadd
in
add
fidivs
xchg
mov
sub
popa
sub
cltd
jge
fsubrl
mov
jl
repnz
mov
icebp
jno
ror
popa
jne
adcl
pop
fisubrl
sbb
sahf
mov
into
sub
or
xchg
or
push
cltd
dec
xor
jno
push
inc
fucomip
lahf
push
dec
xchg
dec
scas
out
or
and
fists
dec
mov
jne
mov
cmpsl
pop
sarl
inc
sbb
clc
pop
mov
popf
shlb
jle
es
cmp
jbe
aaa
out
sub
loope
arpl
test
xchg
sub
lods
jmp
mov
push
pop
aam
and
inc
jne
fimuls
xchg
outsb
pusha
xchg
jg
inc
pop
pop
pusha
jbe
xchg
lret
int3
pop
adc
unpckhps
mov
jecxz
das
jae
mov
daa
inc
repz
push
shl
mov
int3
insb
jnp
and
ds
outsl
xor
inc
sub
lea
pop
adc
adc
cmp
in
or
mov
xchg
add
into
inc
adc
int
xchg
ja
xlat
mov
push
or
dec
iret
dec
pusha
pop
rcll
ret
mov
xor
push
pop
mov
dec
cmp
ficoms
in
fldt
sub
mov
jle
adc
jl
repnz
mov
mov
mov
fsts
repz
insb
xlat
xlat
fnstcw
jl
mov
mulb
cmc
pop
mov
mov
mov
mov
mov
lret
sub
xchg
scas
or
jmp
clc
push
or
cmc
imull
xor
and
sub
sub
dec
mov
sub
adc
jmp
idivl
jno
imul
popa
jae
shlb
ljmp
jb
cmp
add
icebp
xchg
adc
imul
jmp
cmc
adc
sbb
xchg
fdivrl
ret
inc
shll
mov
or
popf
and
leave
inc
dec
push
repnz
sbb
ss
jge
mov
pop
inc
aam
adc
ja
lods
fwait
inc
xchg
fwait
in
and
xchg
cmp
jo
add
addr16
or
movsl
sbb
into
mov
movzwl
mov
dec
mov
test
call
mov
loope
bound
xchg
fsubp
cmp
das
pop
leave
bnd
xor
sbb
lock
scas
cmp
mov
in
imul
pop
enter
adc
in
or
mov
jg
dec
or
pusha
popa
sub
xchg
dec
cmp
sbb
imul
mov
icebp
in
aad
ret
rep
std
inc
insl
push
sub
cmpsb
xor
ja
divb
push
sub
xchg
adc
cmp
push
dec
sub
pop
ret
insl
adc
cmc
lahf
aaa
or
and
push
imul
fwait
imul
xchg
and
dec
out
sahf
xlat
adc
or
mov
xor
inc
loop
cwtl
mov
inc
mov
lcall
pop
mov
movsb
or
jbe
hlt
push
or
cmpsl
fwait
out
daa
or
inc
dec
out
or
out
adc
or
push
fdivrp
mov
lods
clc
leave
push
int3
add
xchg
movsl
inc
repnz
inc
rcrb
and
add
imul
rcrl
popf
std
add
mov
pop
push
mov
xor
inc
cld
insl
int3
adc
repz
repnz
pushf
outsb
adc
sbb
fs
popa
push
pop
lret
sar
fsubp
stos
enter
mov
jg
mov
test
push
popa
sub
ret
fwait
inc
pusha
dec
pusha
into
fistl
xchg
jg
sub
pop
push
fcoml
fisubs
mov
dec
lret
pusha
loop
fnclex
gs
dec
mov
mov
rcll
xchg
xchg
xchg
xchg
ret
mov
cld
je
cmp
movsb
js
push
shlb
subl
add
pop
call
xchg
push
lret
and
adc
push
aas
push
jmp
ds
adc
inc
lock
xchg
test
fucomi
loope
sub
cmpsl
xorl
int
push
roll
cmpsl
or
std
inc
jecxz
fcompl
sub
sbb
flds
push
pandn
cmp
or
adc
aaa
mov
mov
xor
jle
push
iret
inc
jg
aas
stos
mov
cmc
fs
fstpl
imul
or
faddl
imul
arpl
jb
push
cmpsb
pop
je
ret
inc
dec
sti
imul
pop
lods
in
jmp
dec
sub
adc
adc
mov
inc
xor
sbbl
inc
and
jo
sbb
jnp
inc
pop
inc
repnz
data16
sahf
mov
data16
xor
out
les
lcall
add
mov
call
clc
popf
orl
pop
jno
int3
bound
mov
movsl
scas
mov
push
ds
pop
dec
mov
and
mov
lea
imul
jmp
dec
cli
mov
jo
xchg
add
nop
scas
add
xchg
cmp
int3
mov
cmp
adc
mov
jge
sbb
and
cmp
xor
and
dec
cs
lods
mov
adc
mov
and
and
lret
cwtl
mov
jg
rclb
subl
aaa
jg
popf
jnp
stc
push
insl
fisubl
xchg
sbb
jg
ds
adc
in
mov
pop
aas
xchg
pop
sbb
pushf
and
movb
icebp
and
cmp
sbb
and
xor
bound
jmp
xchg
push
cli
mov
cmp
mov
arpl
into
outsb
es
adc
dec
jl
sub
out
add
pop
out
mov
shl
shr
xchg
movsl
or
mov
rcrb
test
mov
jne
in
outsb
gs
dec
retw
inc
dec
mov
add
aas
inc
fimuls
lcall
in
pop
and
mov
mov
and
gs
mov
call
fwait
int3
sbb
cmpsl
cmp
aad
jl
sahf
loop
jbe
or
mov
sbb
dec
arpl
inc
cmpsb
idivb
xchg
sahf
aad
nop
out
stos
mov
mov
xorl
data16
pop
in
or
dec
mov
mov
inc
push
mov
popa
add
repz
sbb
jl
push
cs
pop
in
ss
sbb
insb
push
mov
pop
ds
in
jmp
adc
adc
or
cmc
aaa
clc
push
das
xorb
cmp
incb
daa
or
lds
mov
xor
xor
jae
inc
lret
jae
cmpsb
pop
add
xor
pop
pop
mov
and
ror
jb
pusha
lret
jp
popa
sti
push
aam
xor
lcall
jge
jg
stc
out
add
out
shrb
ja
fcoms
xlat
cmp
outsl
pop
ja
pop
mov
lds
movsb
in
or
sub
addr16
pop
scas
fcmovnb
or
daa
jmp
in
push
aam
imul
pushf
adc
pushl
sub
outsb
and
inc
inc
loopne
or
and
mov
pop
mov
pop
push
cs
xchg
fiaddl
mov
xor
ds
jnp
mov
lds
jg
pop
dec
jmp
cmp
aas
sbb
popa
xchg
jne
xchg
mov
mov
mov
inc
ss
in
int
mov
and
xchg
out
lods
mov
mov
in
fldl
jmp
mov
scas
cmc
lea
sub
and
and
mov
and
jns
sti
stos
out
cmp
mov
and
push
popf
xchg
lahf
fmulp
ja
xchg
mov
mov
and
repz
sub
arpl
sbb
dec
test
iret
call
pop
xchg
ret
dec
imul
mov
das
sub
inc
push
lock
bound
xchg
push
lds
dec
pop
cmc
fdivrs
cmp
int
repnz
push
dec
jp
out
movsl
in
adc
pop
pop
outsb
icebp
xor
stos
aam
test
dec
scas
out
fsub
jg
cmpsl
pop
rcrb
dec
adc
roll
pop
sbb
daa
or
ss
stos
jo
gs
cmp
pop
fstpl
les
adc
mov
mulb
mov
pop
sbb
shrb
pushf
movsb
les
xor
push
gs
jae
ss
cmpsl
negl
jne
or
push
out
adc
jmp
mov
and
lds
inc
inc
rcll
xchg
xchg
out
xchg
fimull
pop
lods
pop
sbb
ljmp
push
faddp
lcall
lock
in
jbe
xor
sub
mov
imul
icebp
fstps
mov
pushf
add
into
test
fdivrp
add
xor
outsl
lahf
rcr
cs
hlt
mov
jmp
inc
sahf
cmp
clc
shl
scas
clc
cltd
lcall
js
or
sahf
cmpsb
push
pop
divps
or
mov
push
pop
inc
popa
mov
fwait
dec
das
mov
pushf
pop
lods
dec
ficomps
cmp
loopne
adc
bound
fsubrs
inc
jns
add
and
fsubr
aaa
jg
sahf
jg
jmp
push
das
adc
sti
fs
cmpsb
mov
mov
dec
and
mov
inc
out
add
sbb
std
adc
outsb
push
divl
movsl
mov
dec
push
ret
adc
xchg
adc
add
jno
mov
lret
jmp
or
imul
xchg
pop
jnp
in
xchg
jns,pn
scas
je
aas
imul
js
ss
xchg
xor
dec
shll
and
in
jecxz
jo
fdivrs
out
nop
or
shlb
movl
fisttpll
pop
cld
gs
xor
insb
jg
mov
mov
ret
push
loope
add
dec
int
movb
hlt
aaa
daa
imul
sarl
test
or
or
loopne
inc
mov
xor
loop
in
ja
push
ret
dec
out
out
stos
xor
jecxz
cmpsl
dec
inc
xchg
add
stos
adc
jb
fdivs
mov
inc
or
mov
icebp
ret
ss
mov
mov
adcl
xchg
inc
push
das
cmp
jecxz
mulb
cmpl
test
movsl
shlb
stc
nop
rolb
pop
xchg
jo
pop
cmpsl
push
out
adc
push
aam
bound
jle
imul
enter
loop
jns
sub
sbb
insl
dec
cmpsb
loope
enter
testb
xlat
xchg
cltd
sbb
popf
xchg
sub
mov
add
sub
jmp
popa
out
pop
je
push
rol
je
add
inc
cmp
mov
mov
push
fdivrs
mov
daa
pop
adc
stos
sbb
push
sub
fsubs
xlat
cmp
push
imul
iret
movsb
in
pop
lds
or
ficoml
sbb
jae
fnsave
out
and
xor
ds
imul
xchg
cmpsl
fcmovb
movsb
hlt
int3
push
cmp
cmp
or
xor
ss
xchg
in
mov
mov
pop
lea
mov
fstpt
lcall
insl
mov
or
jnp
push
dec
sbb
sbb
sbb
insl
mov
movsb
mov
mov
in
fsts
mov
std
repz
pusha
aas
push
imul
lret
into
pop
mov
in
or
push
mov
sbb
push
xchg
pushf
psadbw
push
lea
insl
pop
push
pop
pop
dec
adc
loop
adc
and
jmp
inc
mov
sahf
and
cmpsl
dec
out
mov
test
test
clc
ret
cmp
adc
adc
cs
inc
xor
pusha
repz
jo
test
mov
dec
add
imul
scas
ljmp
jge
ja
sbb
xchg
xorl
sar
jge
sub
pusha
addr16
nop
popa
aaa
jp
mov
pop
test
orb
push
mov
mov
push
mov
mov
inc
stos
push
in
xchg
mov
mov
mov
xor
xchg
xchg
xchg
xor
sub
or
adc
jno
dec
into
imul
pop
mov
insl
pop
lahf
int3
push
ja
inc
mov
in
xor
dec
std
xlat
cmpsl
xchg
push
push
incl
stc
adc
outsl
and
mov
lea
outsl
dec
xor
jle
push
int3
int
ljmp
pop
pop
addr16
out
lahf
xchg
into
ja
sbb
mov
mov
adc
inc
cmp
xchg
push
lahf
jb
fldlg2
dec
clc
mov
jecxz
ret
pop
mov
adc
and
or
pop
mov
test
out
jg
cmp
jecxz
out
jno
fmull
daa
pop
mov
int3
mov
out
cmp
adc
ret
mov
pop
aaa
jns
inc
cmpsl
sbb
lret
sbb
xchg
addr16
mov
pop
jp
sti
shll
daa
test
in
stos
inc
jne
pusha
arpl
add
aaa
sbb
jle
sub
push
jge
xor
cmp
cmp
shlb
and
mov
cltd
inc
lret
scas
xchg
cwtl
cli
sub
jb
lods
cmc
dec
mov
fldcw
and
sbb
sub
sahf
mov
rcrl
sbb
add
mov
mov
aam
pop
and
icebp
push
lret
or
test
shll
jge
fdivr
inc
les
setns
out
cwtl
cmp
xor
dec
dec
call
pop
cmpsl
std
js
push
test
and
pop
ret
std
mov
inc
inc
pop
pop
repz
push
dec
pop
sub
lds
jo
inc
lea
movsb
por
adc
dec
push
inc
fbstp
mov
mov
mov
jae
mov
sbb
add
lret
and
or
add
add
outsl
xchg
movsl
inc
cmp
movsl
adc
and
fcompp
loope
mov
dec
enter
icebp
mov
mov
cmp
dec
das
jl
dec
cmpsb
pop
test
add
mov
ror
push
stos
push
inc
cs
sbb
shlb
and
gs
mov
jl
cmp
ja
xor
inc
call
xor
or
or
and
or
scas
and
loopne
cmpsb
aas
ret
movsb
mov
dec
push
cmpsl
loopne
fs
out
add
push
adc
arpl
xor
movlps
int3
inc
push
add
xor
and
add
mov
sub
cmp
pop
xchg
in
cmp
stos
rorb
push
mov
sub
add
adc
push
inc
cmp
ds
xor
add
test
cmp
pop
fwait
dec
push
hlt
sub
jb
pop
jae
iret
mov
ljmp
xchg
inc
arpl
loop
das
in
mov
testl
gs
lods
lock
mov
push
xor
cltd
cmc
imul
xchg
out
dec
add
faddp
sub
daa
inc
sub
in
sbb
lcall
pushf
push
incl
add
mov
daa
int3
sbb
aam
push
aad
xchg
xchg
dec
dec
mov
dec
movsl
cmp
push
les
sub
lcall
sbb
pop
out
jg
lods
cli
outsb
mov
int3
fisttpll
mov
jb,pn
mov
xchg
mov
push
mov
or
xchg
jle
xchg
movsb
push
mov
lahf
pop
je
push
mov
popf
and
push
inc
push
add
xor
sbb
clc
mov
mov
icebp
add
jl
and
dec
jbe
test
and
cmpsb
mov
lahf
pop
jle
mov
in
sbb
testb
mov
jecxz
inc
pusha
bound
cmp
pop
mov
mov
or
aam
xchg
xor
call
ror
or
jge
ss
loope
dec
xorl
dec
inc
addr16
mov
in
imul
fsubs
hlt
mov
xchg
push
xchg
mov
out
insl
jns
ds
outsb
fs
das
in
lret
mov
sbb
adc
push
sub
enter
loopne
flds
popf
call
add
jmp
fbstp
out
sti
loop
fldenv
out
xchg
lret
sbb
jne
adc
add
icebp
imul
inc
jge
push
lahf
push
into
mov
cwtl
add
or
jecxz
inc
dec
ret
je
push
pop
mov
cld
les
cmp
dec
js
cmp
xor
jecxz
cld
insl
out
inc
sbb
adc
dec
pop
ljmp
or
movsb
jle
scas
iret
push
sub
mov
pop
cmp
add
jle
and
dec
cmc
jle
mov
add
or
push
sbb
inc
xchg
ss
loopne
mov
fs
sbb
jge
aas
mov
sbb
dec
bound
push
ja
sub
aad
jge
xchg
jmp
mov
xchg
addr16
mov
insl
cli
cmp
push
jb
cmpsl
and
iret
into
test
fsubs
ret
loopne
scas
ss
loop
jg
cltd
loopne
test
pushf
or
pop
cli
fdivrp
push
mov
ret
xchg
mov
enter
adcb
pop
mov
jg
cmpsl
adc
jge
outsb
sub
dec
add
movsl
das
das
add
icebp
icebp
inc
add
push
add
mov
out
xchg
vpaddsw
addb
xor
sub
pop
scas
jmp
lahf
pop
push
push
jle
xchg
cmp
jg
in
mov
bnd
adc
mov
jb
in
fs
mov
fisttpll
fsts
outsb
adc
test
int
popf
popl
bound
adc
push
cmpsl
and
add
sbb
fnstcw
mov
shll
enter
data16
lock
sub
sahf
jo
out
out
push
test
fists
pop
outsb
adc
pusha
das
pop
fscale
popa
in
aaa
aad
loop
or
daa
or
mov
inc
rolb
pop
mov
mov
jmp
mov
insl
jmp
sbb
jg
mov
adc
shll
test
mov
jbe
les
mov
or
pusha
cmpsl
inc
std
xlat
inc
or
outsb
addr16
add
repz
repz
fs
lahf
jae
std
fisttpl
enter
pop
movsl
jecxz
add
mov
lahf
adc
push
pop
add
in
mov
jl
fcmovnu
call
sti
jno
xor
arpl
fwait
int3
stos
mov
mov
adc
dec
or
test
popa
fdivs
sub
dec
lock
loope
cld
mov
mov
xor
push
dec
or
es
dec
aas
enter
and
icebp
push
mov
test
dec
adc
pop
sbb
or
pop
ret
arpl
pop
sbb
adc
stc
dec
sub
fisubs
adc
xor
add
lds
and
pop
sti
sbb
inc
outsl
call
or
jmp
lds
cmp
cmc
jle
sbb
sub
stos
mov
pop
and
fdivrs
bound
enter
rcrb
push
ret
hlt
popa
das
or
loop
imul
jmp
add
nop
aad
aam
dec
rolb
js
or
jno
sahf
aas
sar
sbb
dec
xlat
xchg
sub
bound
mov
mov
mov
stos
je
mov
test
cmp
or
adc
push
mov
jae
xlat
movsb
mov
idivl
popf
add
stc
adc
push
loope
push
cwtl
rorl
scas
nop
pop
sub
rolb
cmp
cmpsb
lret
int3
mov
jecxz
adc
test
adc
fimuls
outsl
nop
imul
cmp
in
xor
push
cltd
out
inc
push
decl
jno
inc
pop
add
test
insb
call
ds
out
dec
out
rolb
cmp
and
xor
cmp
test
fldenv
mov
or
cmpsb
aad
test
push
adc
adc
and
shll
ds
lret
imul
notl
or
sti
sbb
lret
cmp
mov
rcl
data16
ds
out
es
leave
pop
dec
cs
js
sub
dec
shlb
xchg
daa
push
lock
inc
pushf
mov
fidivrs
and
bound
sbb
adc
or
sub
loopne
xchg
enter
sbb
xchg
fdivs
pop
in
add
cmp
ret
adc
inc
imul
cli
or
jne
mov
mov
adc
cmp
push
mov
cltd
push
loope
shrb
inc
mov
adc
jl
xlat
or
in
pop
sahf
fs
popf
push
or
push
sti
cmp
bound
aam
mov
stos
mov
outsl
mov
sbb
movsl
adcb
and
cmpsb
gs
out
dec
scas
into
hlt
mov
int
loopne
in
imul
jae
orl
push
sub
or
loop
daa
or
leave
or
mov
outsl
push
mov
popa
lret
mov
sbb
xchg
dec
pop
mov
sbb
or
lret
and
push
ljmp
pop
pop
test
add
ja
add
add
xor
sbb
xorl
and
pop
ret
movl
in
mov
mov
stc
je
movsb
mov
dec
mov
es
and
lcall
adc
fwait
cmp
cmpb
fwait
xor
sbb
stos
ret
xchg
and
cmp
mov
insb
cmp
mov
inc
outsl
out
mov
aaa
inc
cli
cmp
test
xor
clc
into
jnp
and
jg
stos
inc
lret
fs
cmp
cmp
sahf
add
stos
mov
jg
and
frstor
lods
bound
cmc
mov
mov
gs
adc
adc
stc
push
movsb
inc
cs
cmpb
adc
and
dec
mov
shll
bound
gs
or
movsl
push
cmp
outsb
cmp
pushl
jbe
sub
enter
test
out
xchg
mov
out
add
push
inc
aaa
cmpsb
adc
xor
das
and
clc
aam
mov
cmp
out
pop
xor
test
aam
imul
arpl
jbe
test
jp
push
add
cmp
dec
aam
sbb
jae
rorb
cmp
out
or
out
mov
mov
orb
fs
mov
jnp
fs
movb
scas
xor
mov
insl
inc
mov
push
sub
shrl
mov
adc
xchg
cli
aam
leave
pushf
repnz
fwait
dec
inc
enter
inc
dec
xchg
push
iret
ja
jmp
movb
cmp
and
shll
sbb
iret
mov
addb
ret
push
lret
mov
mov
add
cmp
inc
shl
in
dec
cmp
xlat
ficoml
inc
int3
cvttps2pi
and
add
mov
or
lock
andb
leave
mov
cs
ret
mov
dec
cmp
xchg
pop
mov
call
mov
cld
pop
gs
mov
xor
jbe
aad
xorb
nop
mov
add
jb
mov
hlt
xor
push
jo
xor
pop
repnz
js
insb
sbb
fsubp
test
cltd
inc
lock
jb
pop
cmp
scas
sahf
adc
fbld
xchg
scas
sahf
hlt
xor
xchg
dec
push
push
xor
pop
adc
dec
mov
pop
loopne
pushf
mov
push
dec
leave
jmp
mov
xorb
lcall
mov
mov
cli
xor
movsb
jno
jbe
jns
mov
and
push
inc
loope
fwait
sbb
xchg
cmp
test
xchg
fadds
pop
orb
test
cmp
inc
sub
testb
jmp
rcll
js
dec
je
mov
hlt
sbb
inc
push
movsb
cmp
sub
movsl
add
cmp
inc
sub
mov
lahf
mov
movsb
xor
dec
es
mov
fsin
out
fs
inc
roll
mov
push
cmpsb
and
jnp
shrb
mov
test
fstpt
cmp
popa
movsl
stos
push
jno
scas
in
arpl
or
les
sub
or
jae
mov
mov
push
xor
mov
call
xor
imul
pop
bound
dec
mov
jne
sub
test
jecxz
pop
hlt
int3
jmp
and
cmp
jg
ficoms
and
repz
sahf
and
rol
insb
mov
mov
sbb
or
sbb
lret
out
push
adc
loope
fldl
cli
je
dec
sti
push
call
addr16
loopne
sahf
dec
pop
or
sbb
ret
fwait
jle
cmp
dec
adc
mov
mov
loopne
jmp
shlb
rdtsc
ret
ds
mov
mov
lods
mov
jle
xor
ljmp
push
in
dec
push
and
clc
xorl
xor
sub
sbb
fisttpll
push
add
not
mov
out
cld
ja
pop
mov
sbb
mov
aam
jge
xor
sti
fdivl
and
imul
xor
ljmp
add
sbb
inc
jg
arpl
hlt
dec
pop
mov
dec
cmp
and
scas
xor
insl
jbe
push
rorl
mov
ja
cmp
ret
or
addr16
test
ds
cmp
sub
out
push
push
mov
ja
daa
mov
and
jb
cmp
mov
or
push
sub
push
cltd
pop
xchg
roll
xor
je
mov
js
loope
test
xchg
repnz
andb
aad
cwtl
out
jae
mov
int
fs
dec
xlat
jno
dec
lahf
dec
insb
nop
dec
jecxz
lcall
push
mov
pop
fmulp
orl
subl
mov
and
pop
cmpsl
pop
iret
or
les
test
xchg
push
pop
loope
hlt
or
jo
cmp
ljmp
nop
ja
adcb
mov
aam
cmpsb
xlat
add
dec
mov
ret
popa
push
mov
cwtl
add
jge
mov
add
cmpsl
pop
inc
icebp
aam
and
into
js
cmp
xchg
minpd
jno
xlat
cwtl
std
mov
xchg
or
ljmp
cmp
push
enter
mov
rclb
pop
jmp
xchg
fwait
shrl
pushf
repz
jle
jg
cltd
lahf
pop
inc
mov
sti
jmp
mov
xor
insl
stc
js
enter
fsubrs
in
fisttpll
out
stc
pop
and
dec
insl
push
fs
ret
push
inc
pop
jl
push
jo
jge
lods
dec
sub
xchg
xchg
push
test
addb
pop
in
out
sub
dec
notl
test
mov
inc
cmc
scas
sbbl
movsb
out
cmc
inc
ret
xadd
iret
cmp
add
mov
mov
imul
je
mov
jp
sub
pop
push
add
idiv
divl
in
xor
pop
xor
mov
cmp
test
ljmp
pusha
xorl
cmpsb
cs
or
xchg
in
sbb
jb
and
sub
sbbl
hlt
int3
adc
xchg
cmpl
mov
or
mov
rcr
dec
push
sbb
dec
lret
sbbl
push
pusha
mov
cmp
pop
fildl
xor
icebp
xor
push
mov
or
jbe
mov
adc
fs
aas
gs
test
inc
and
test
adc
cli
xor
xchg
cmovno
leave
inc
adc
insb
int3
shrb
hlt
pop
test
xchg
imul
sub
sbb
into
les
mov
jno
xchg
xchg
mov
loop
mov
mov
lret
aas
dec
call
movsb
sarb
xchg
pop
mov
inc
test
mov
xchg
pop
or
scas
push
mov
mov
scas
movsb
pop
repz
scas
fnstcw
push
bound
fiadds
das
sbb
jne
pop
jecxz
int3
push
pop
das
iret
xor
lret
cmpsb
jecxz
je
pop
mulb
push
pop
gs
icebp
in
aam
data16
inc
cmp
mov
add
add
xchg
xor
pop
les
sbb
idivb
in
sahf
cwtl
ss
pusha
adc
mov
push
add
dec
fs
daa
stc
lock
bnd
sbb
inc
inc
out
xor
mov
sub
test
xchg
outsl
stc
data16
pop
push
jae
in
mov
and
pop
mov
jnp
sbb
inc
fildl
push
popa
pop
jb
into
jne
jnp
aas
sub
lods
jg
inc
and
add
mov
pop
fiaddl
leave
add
loopne
jb
scas
pop
aas
mov
cmp
add
cmp
int
inc
mov
and
lods
pop
xchg
out
xchg
in
fcmovnbe
popa
jnp
roll
add
push
nop
pop
mov
xchg
call
cld
mov
push
rcll
jns
clc
pop
lods
lock
clc
inc
int3
pop
repz
sub
outsl
fsts
bndldx
out
and
out
sbb
dec
outsb
inc
inc
jl
and
fildll
jg
inc
and
mov
and
les
adc
sub
insl
lret
fs
cltd
outsl
jp
aaa
out
mov
testb
lods
dec
cmp
add
rclb
aam
mov
dec
test
xor
mov
xor
mov
aaa
xor
cwtl
xchg
rcl
je
or
inc
cltd
lcall
mov
and
sub
xor
sbb
jae
pop
sarl
and
fdivrl
mov
inc
into
jno
sbb
inc
ss
icebp
cmc
ficoml
gs
jge
lods
jnp
iret
stos
cli
inc
into
xor
pop
aad
sub
sti
mov
loope
mov
mov
mov
dec
mov
jmp
lods
add
sbb
mov
sbb
fisubs
loopne
push
inc
loop
xchg
dec
add
mov
pop
je
lds
and
cmp
cmpsb
inc
adc
push
cmp
mov
push
mov
jo
xor
mov
jne
push
ss
sbb
and
mov
dec
adc
inc
fisubl
mov
dec
in
movb
inc
push
rcll
or
mov
fwait
jo
add
aaa
orb
xchg
push
jecxz
push
insl
xchg
push
lea
xchg
mov
push
leave
xchg
repz
cs
sub
sahf
mov
cmp
inc
pop
cmp
mov
cld
pop
ja
xor
cmpsb
leave
loop
jns
sub
je
shrb
iret
fs
lods
jecxz
xlat
jmp
mov
jecxz
cmp
call
imul
ja
push
imul
divl
outsl
aas
notb
pushf
movsb
push
loop
xchg
cmp
cmp
jne
mov
lahf
mov
insl
pop
push
rol
cmp
hlt
pop
outsb
mov
lea
lret
in
outsb
movsb
imul
hlt
test
inc
shll
and
xchg
into
jl
or
ja
ret
ret
loopne
push
loopne
push
push
insb
xchg
dec
xchg
mov
aad
jp
xor
jno
repnz
mov
xchg
stos
pop
call
pop
add
pop
pop
xchg
cs
mov
pop
mov
push
ret
push
push
mov
sbb
dec
shlb
and
lcall
jns
push
push
nop
inc
sarl
add
icebp
dec
ja
insl
or
sahf
popa
les
mov
and
fistl
pop
sub
out
or
push
jl
jle
xchg
icebp
nop
push
push
mov
dec
jbe
add
movsl
xor
hlt
filds
sbb
mov
mov
rolb
inc
lea
push
ret
hlt
dec
mov
jecxz
sub
xchg
adc
or
cli
xor
inc
mov
and
mov
sbb
das
sub
dec
fistpll
mov
fsts
pop
fisubl
divb
dec
ret
aam
mov
inc
nop
cmp
lods
lret
pop
jl
jle
jle
jne
mov
push
sub
add
icebp
push
orb
ds
inc
ret
lahf
xor
jbe
sarl
mov
test
push
orb
push
stc
jb
std
pop
arpl
lcall
sub
icebp
imull
push
lret
and
dec
add
int3
popa
jnp
clc
jno
data16
sbb
pop
and
inc
jl
sarb
sub
dec
stos
mov
inc
mov
negb
popa
push
sti
push
popf
jg
insl
pminub
addb
dec
mov
and
mov
mov
out
push
mov
push
fs
daa
sub
or
or
or
pop
adc
call
cmpl
inc
bound
xchg
xor
mov
jg
mov
jae
mov
sbb
sbb
inc
orb
mov
and
dec
xor
outsb
jecxz
ret
imul
push
sbb
daa
lds
sar
hlt
out
fldln2
lock
stos
stc
xchg
xchg
bound
dec
dec
lret
sbb
ljmp
imulb
in
mov
inc
loopne
data16
cmp
adc
aas
jno
lea
aaa
ret
mov
push
and
loop
repz
push
dec
push
movsl
pop
mov
aam
mov
cmp
or
xchg
adc
push
and
jb
push
sbb
in
cli
cli
or
pop
mov
in
in
add
js
lcall
dec
test
mov
loopne
pop
cmp
adc
lock
das
pop
ret
aam
dec
add
fmull
jle
mov
mov
jne
ljmp
mov
ds
icebp
repnz
in
mov
dec
aad
mov
and
inc
scas
add
daa
mov
mov
cmpsb
nop
or
xor
sti
mov
call
mov
cmc
arpl
mov
mov
mov
std
loopne
sub
imul
mov
sbb
dec
dec
inc
sti
mov
sub
sbb
ja
mov
ljmp
int
push
push
push
jb
leave
mov
mov
pop
popf
roll
out
test
testb
pop
loope
fists
sarl
sahf
outsl
lods
fucomip
xchg
lret
dec
xchg
lcall
loope
shrb
fdivs
pop
cmpsl
and
push
dec
mov
xchg
imul
cmpl
cmp
int3
xor
sub
and
jle
nop
push
test
inc
push
jg
lea
movb
and
sub
shlb
pop
lret
shll
jmp
jns
sub
pop
sub
fildl
addr16
push
jnp
jnp
int
cmc
cmc
cs
arpl
stc
mov
cmpsl
fsubrs
inc
inc
jns
pop
jecxz
add
pop
push
jne
sbb
cmp
popf
xchg
dec
xchg
xchg
push
in
aad
mov
mov
sub
pop
divb
mov
cmp
or
pushf
fwait
ret
jge
xor
cmp
pop
iret
cmp
cmp
les
fcompl
int
sub
lret
pop
repz
push
in
jp
and
dec
xchg
push
into
icebp
js
stos
adc
cmp
std
mov
push
adcb
mov
inc
adc
jle
lea
mov
imul
inc
fwait
xor
inc
scas
or
push
mov
enter
or
add
in
add
mov
cmp
test
push
mov
in
mov
push
push
sub
and
leave
mov
xchg
xchg
pop
loopne
xchg
and
cltd
ja
pop
xchg
mov
test
mov
daa
aam
sbb
cmp
sub
in
out
or
fdivs
mov
jne
cli
xor
cmp
inc
jle
mov
data16
in
inc
mov
adc
mov
adc
sub
pusha
shlb
jnp
pop
dec
cmpsb
pop
sbb
stc
fbstp
gs
xor
stos
sbb
gs
bound
dec
loop
fisubrs
push
add
pushf
es
cli
pop
shll
sbb
sbbl
shrl
sbb
pop
negb
sub
inc
xor
adc
pop
in
xchg
out
xchg
mov
repz
mov
adc
jmp
jmp
sbb
or
inc
js
or
push
mov
push
pop
je
push
popa
pop
push
pop
xor
popa
js
aaa
addr16
shrb
arpl
inc
mov
mov
out
jecxz
dec
push
ficoml
xor
xorl
adcl
addl
out
adc
enter
ret
cld
adc
pop
repnz
add
add
mov
inc
mov
ss
or
adc
pop
fwait
pop
insb
mov
xchg
ds
inc
insl
imul
xchg
es
and
ss
std
or
push
rcrb
rcr
lcall
popf
fadd
xchg
jmp
jg
push
shrl
mov
pop
in
push
xchg
and
clc
pop
addr16
sub
rol
test
pop
jbe
ficompl
jnp
je
dec
or
lds
imul
push
push
mov
jecxz
cmp
aad
inc
pushf
inc
pusha
outsl
out
adc
sub
gs
pop
mov
mov
inc
dec
ret
repz
outsb
cli
ljmp
cli
cmp
or
and
cmp
jmp
fdivrl
out
jg
in
sti
cmovae
pop
and
fstpl
scas
push
dec
and
dec
mov
mov
xor
in
mov
push
and
cmp
sub
dec
fcompl
call
cmpsl
roll
fcmovnu
or
shrb
sahf
push
lret
mov
or
adc
pop
or
pop
adc
dec
push
shr
mov
daa
mov
cmp
movsb
mov
push
rcrl
sti
push
jns
rcrb
adc
adc
mov
adc
cmp
out
xchg
inc
pop
mov
sbb
mov
add
mov
scas
rorb
shl
or
arpl
lods
mov
lods
scas
mov
pushf
mov
fmull
push
std
cmc
ss
mov
jle
dec
fcompl
pop
dec
xchg
or
sub
cli
cmc
mov
xchg
pop
pop
jo
std
imul
add
arpl
xor
lahf
pop
lret
pop
cli
cli
mov
lock
xchg
pop
push
aas
mov
sbb
jge
sbb
sub
fsubrs
sbb
movb
out
aas
daa
pop
leave
daa
xchg
sub
adc
push
pop
repnz
addr16
xor
xchg
add
in
add
inc
dec
enter
aam
pop
pop
fimull
and
scas
push
xchg
push
fadds
test
or
inc
or
sub
ret
pusha
and
cmp
aas
xchg
mov
mov
dec
xor
repnz
inc
in
inc
jge
loopne
ret
sbb
lret
ljmp
sbb
cmp
in
mov
rorl
arpl
jecxz
sbb
mov
adc
or
scas
js
dec
adc
jecxz
stos
ljmp
out
dec
sub
sbb
or
hlt
mov
ljmp
jecxz
add
push
movb
push
xchg
xchg
dec
pop
sbb
push
push
roll
stc
iret
pop
cmp
iret
testb
adc
or
fwait
addr16
outsw
into
add
mov
jmp
test
sbb
xor
mov
ret
clc
mov
scas
outsb
mov
dec
add
fisttpl
xchg
inc
or
idivl
push
sbb
loopne
loop
cmp
mov
lock
cli
add
cmp
sahf
jne
ss
nop
out
sbb
pop
push
test
mov
punpckhwd
std
iret
aad
iret
lds
mov
cmpsl
pop
leave
lods
sub
ds
fistpll
addr16
sbb
mov
xchg
mov
push
mov
aaa
adc
or
test
dec
dec
add
imul
ret
sub
and
test
push
jnp
rcrb
xchg
ret
xchg
pop
dec
lods
in
lahf
sub
dec
leave
inc
lods
and
sahf
xorl
or
notb
jb
or
sbb
fcomip
pop
or
mov
pop
aas
popa
jb
push
xchg
push
or
les
and
addr16
sbb
push
pop
adc
ffree
dec
push
adc
jns
xchg
ret
cmp
xor
ljmp
cmp
jb
es
cmpsb
sub
adc
xchg
jnp
jo
push
pop
shll
outsl
adc
sub
sub
mov
rolb
std
xlat
pop
jns
cltd
ds
inc
leave
pop
scas
and
xchg
jg
jl
ss
call
sti
inc
mov
out
jg
add
or
cmp
andb
xor
lods
leave
clc
loope
stc
into
in
cmp
add
int3
xor
outsb
xor
jo
mov
gs
mov
test
cld
scas
test
aaa
sbb
imul
or
scas
sbb
xchg
popf
push
xchg
in
pop
mov
in
add
clc
jp
js
lea
cmp
jge
sbb
lods
sbb
xor
xchg
test
mov
sub
es
cmpsl
daa
mov
les
scas
cmpsb
push
sbb
in
das
pop
scas
cmp
loop
add
mov
rcrb
xchg
ret
aaa
pushf
jns
out
or
popa
adc
ss
sub
dec
bound
or
adc
cld
loopne
ret
mov
mov
inc
xchg
mov
ss
out
add
adc
mov
xor
cmp
rolb
adc
push
ss
inc
add
orl
lretw
movsb
xor
pop
out
pop
fcomps
in
mov
xor
out
pop
xorl
arpl
stos
and
sub
xor
ds
pop
pop
dec
leave
jmp
rcll
sub
pusha
or
popa
inc
ss
adc
sub
outsb
sar
outsb
outsl
mov
dec
pop
xchg
notb
aas
mov
push
xor
dec
xchg
xor
xchg
sbb
and
pop
push
ds
push
xor
dec
loopne
sub
cmp
aaa
lock
mov
mov
or
pop
mov
data16
xchg
adcl
outsb
jae
nop
pop
pop
popf
mov
outsl
push
lcall
jo
movsl
mov
sbb
and
iret
push
test
scas
addr16
ret
cmc
add
popa
fadds
mov
fistpll
sub
mov
xorl
lds
ss
jmp
push
outsb
dec
popf
orb
movsl
jo
and
cltd
js
jge
scas
idivl
xlat
mov
mov
pop
repnz
sbb
sbb
mov
xor
xor
cld
fidivl
in
inc
xor
test
inc
xor
mov
adc
mov
lods
fsubrl
pop
add
inc
and
movb
xchg
fcmovne
data16
into
or
lods
mov
scas
movsb
pop
jecxz
dec
or
pop
sbb
cs
shr
sub
sbb
and
xchg
push
cmpsb
jg
xchg
mov
inc
mov
jo
sub
fiaddl
inc
lea
test
lock
lods
repnz
fidivl
lock
in
insl
ja
movsl
adc
xor
stc
pop
sahf
mov
lcall
das
jge
nop
pop
mov
ljmp
imul
insl
sub
and
mov
cmp
cmpsb
out
scas
mov
int
and
adc
dec
xchg
mov
sbb
adc
cmp
mov
xchg
pop
jnp
cltd
cmp
mov
fstps
mov
mov
xchg
inc
xchg
mov
dec
push
call
mov
popf
push
aaa
mov
push
cmp
inc
dec
cmp
out
xchg
xchg
cmp
cmp
leave
ds
roll
xchg
movsb
fiaddl
pop
jae
filds
fstl
pop
jno
das
sub
adc
pop
or
mov
or
cmp
adc
add
faddp
add
aaa
imul
sub
outsb
jg
loopne
mov
stos
add
push
cmp
nop
push
or
pop
dec
or
mov
out
imul
sub
mov
dec
leave
cmp
lds
test
and
inc
jecxz
mov
adc
xchg
mov
int3
pop
sub
and
mov
movsl
pop
xchg
inc
jge
pop
int3
cli
mov
mov
mov
dec
adc
imul
mov
loope
into
pop
popf
bound
xchg
add
fimuls
cmp
clc
inc
xor
loope
push
movsl
ss
popf
sbb
pushf
pusha
test
out
dec
jmp
mov
mov
xchg
pushl
mul
test
add
lock
jmp
lock
in
icebp
xor
and
fsubl
xor
mov
enter
ljmp
cmpsl
xchg
movsl
mov
lods
mov
ja
cltd
add
movb
pop
sbb
dec
mov
stc
nop
adc
jns
sti
das
cmpb
dec
mov
jbe
test
es
insl
adc
xlat
jl
and
lock
push
cmp
loop
lea
adc
sub
and
movsb
push
mov
mov
repz
add
aad
dec
jl
lret
movsl
jns
or
push
pop
sub
xor
cmp
lret
xchg
cltd
pop
sti
in
movsb
das
clc
jl
inc
push
push
stc
jmp
data16
mov
std
push
aad
xor
push
mov
adc
adc
xchg
cmp
imul
jbe
mov
cmp
out
sub
repz
and
addr16
mov
jmp
ret
fmuls
cmp
testb
lea
pop
popa
jno
mov
fdivl
insb
daa
in
push
lods
push
repz
les
test
xchg
roll
adc
test
xchg
lcall
je
inc
repnz
sbb
cmc
mov
inc
mov
shlb
jnp
bnd
inc
xchg
cs
sti
icebp
shlb
clc
cltd
in
aad
shrb
cmc
mov
and
inc
xor
ret
icebp
arpl
into
xchg
push
inc
and
sti
add
mov
add
pop
push
jecxz
gs
push
push
loopne
movsb
mov
jmp
fs
inc
loop
xchg
shlb
pop
mov
adc
jnp
fdivl
or
xor
push
cmpsb
jne
ret
mov
aad
aad
movsl
push
fimuls
idivl
lds
or
pop
js
dec
inc
imul
insl
pop
add
xor
xchg
xchg
xchg
push
adc
rcl
ds
roll
sahf
xchg
fs
push
sub
push
scas
xor
inc
mov
jmp
outsl
mov
dec
movsl
mov
jbe
xor
fucomip
stc
sub
outsb
xchg
or
mov
mov
ret
mov
lea
subl
xor
sub
cmp
outsb
mov
cli
sub
into
int3
jecxz
jge
cmp
icebp
dec
neg
pop
cltd
sub
shl
in
mov
pushf
mov
and
loope
call
mov
xor
jle
insl
cld
jb
mov
repnz
xchg
mov
inc
inc
insl
sub
cmp
leave
ss
mov
fnstsw
push
pop
pop
xor
xor
add
imul
popf
pop
jo
cmp
outsl
xchg
jg
add
mov
xchg
xor
test
aas
adc
dec
subl
pop
pusha
adc
out
sub
fisubrl
add
orl
push
push
loope
leave
rcl
mov
les
sarl
push
xchg
fcoms
test
mov
filds
dec
pop
jne
pop
arpl
xor
mov
pop
test
cmc
in
pop
dec
outsb
in
test
or
and
pop
data16
rclb
xchg
ds
in
stc
jnp
xchg
ret
mov
xor
in
xchg
std
or
xor
adc
cwtl
cmp
pop
jne
roll
loope
mov
lods
mov
and
pop
cmp
inc
cmp
xchg
lock
mov
xchg
adcl
lcall
mov
and
xor
insl
inc
push
scas
dec
enter
pop
cmpsb
pop
mov
xor
sbb
mov
xor
cmpl
sub
scas
aad
mov
mov
ja
roll
loopne
dec
cmpsb
repnz
push
bsr
fsts
lahf
mov
int3
pop
push
daa
lret
cltd
inc
sub
mov
pusha
or
call
adc
in
je
mov
mov
add
je
mov
jb
icebp
adc
cmp
lods
mov
loop
cmp
push
pusha
and
pop
divl
int
aas
cwtl
cmp
pop
jb
ja
js
out
push
add
dec
mov
imul
xchg
lea
sbb
cmp
mov
mov
out
sub
pushf
xrelease
loope
dec
adc
fldl
xor
dec
roll
arpl
jbe
int
je
push
mov
push
xchg
or
jl
pop
loopne
cltd
loop
cmp
mov
xor
mov
jg
int3
xchg
out
rcl
inc
shrb
xor
dec
cld
mov
orb
cmp
daa
dec
arpl
jo
or
negb
dec
cmp
clc
inc
mov
and
fadds
push
stos
icebp
adc
dec
aas
pushf
mov
sbb
loop
in
lock
mov
mov
xchg
fmull
test
mov
sarb
jns
jp
das
jmp
lea
xchg
mov
jmp
testl
pop
and
dec
out
aam
cltd
stos
or
fisubrl
rcll
push
mov
sti
cmpsb
out
push
sar
xor
sub
pop
jae
cwtl
sub
push
dec
jmp
ss
jge
shlb
push
jg
pop
sub
xor
mov
dec
jbe
mov
shll
mov
mov
push
adc
add
jnp
sbb
sbb
mov
xchg
loope
xor
xor
int
xor
mov
lods
lcall
enter
sbb
mov
push
subb
scas
add
pusha
jge
sbb
sub
out
aas
pop
jnp
aam
jbe
roll
xchg
cmpsb
stos
shl
cli
mov
and
mov
pop
cmpsl
xchg
xchg
xchg
movsb
xor
leave
inc
scas
data16
mov
mov
data16
sbb
pop
xchg
mov
adc
mov
jmp
push
push
cmp
inc
lock
movsl
xor
out
lods
aaa
notl
jae
push
dec
xor
test
inc
mov
movsl
insb
fwait
xor
shrl
xchg
dec
xor
aas
add
pushf
jnp
sbb
lret
aaa
push
cli
cmp
mov
incb
jno
jns
lret
out
inc
fdiv
mov
jo
adc
jge
lods
mov
push
mov
cmp
add
in
stos
and
enter
idivl
inc
jle
dec
in
sbb
mov
lea
fisttps
rcr
xchg
sti
js
outsl
mov
mov
or
xor
pop
mov
shr
mul
mov
dec
adc
xchg
arpl
xchg
loope
jnp
dec
sub
jo
daa
xlat
int3
push
pop
mov
loopne
pop
and
add
dec
stc
mov
and
mov
test
es
dec
fsubs
pop
js
in
js
imul
outsl
xchg
adc
inc
sub
add
cmp
and
fdiv
ja
jg
mov
adc
fwait
sbb
in
int
mov
jge
insl
mov
into
cmp
mov
sbb
adc
js
cld
leave
xor
xor
in
and
mov
daa
cmp
mov
aas
pop
out
ret
push
lea
mov
adc
nop
xlat
mov
pop
inc
jne
rcrb
pop
test
mov
xor
cltd
int
int3
lock
push
mov
cwtl
popa
dec
mov
xchg
xchg
fisttpll
xchg
sbb
or
jl
inc
jp
sbb
and
pusha
cmc
ljmp
dec
cs
xchg
jl
repz
mov
jne
mov
mov
cmp
leave
movsb
mov
out
dec
pop
inc
and
loope
iret
cmp
aaa
pushf
outsl
pop
fists
les
xchg
insb
push
mov
sbb
decb
and
mov
ss
xchg
cmp
and
adc
dec
add
insl
cmp
enter
das
xchg
mov
leave
test
xchg
pop
and
adc
fpatan
mov
test
mov
jge
imul
pop
xchg
push
mov
inc
cmp
loopne
stos
hlt
lahf
enter
pop
add
stc
pop
enter
shl
js
mov
push
pushf
lods
test
lods
jmp
push
cs
data16
hlt
shrl
stc
xlat
inc
xchg
aaa
out
ljmp
fs
mov
and
enter
push
mov
cmpsb
add
add
mov
jge
pop
aas
lods
test
orl
sub
pop
adc
mov
iret
adc
jecxz
ret
cwtl
add
call
jle
push
dec
push
mov
aas
mov
or
or
lret
or
pop
add
or
xlat
shlb
shrb
cmp
sti
cltd
dec
or
jp
push
jae
sub
mov
or
leave
aas
mov
fwait
xor
aam
inc
push
dec
aad
xchg
lret
mov
fidivrl
out
out
xchg
xor
mov
popf
aaa
mov
imul
notl
test
pop
mov
cmpl
loopne
das
push
or
xorb
adc
dec
insb
xor
arpl
popf
lea
adc
jne
ja
sbb
scas
pop
inc
and
adc
arpl
ret
mov
mov
jbe
or
push
xchg
pop
lret
fisubs
popf
nop
inc
fidivl
jecxz
xor
lahf
or
ret
cmp
shr
rcll
std
mov
pusha
or
sbbb
cld
and
nop
adc
aaa
leave
cwtl
or
andb
pop
addl
scas
aad
ljmp
adc
in
adc
lret
xchg
call
sub
jo
cmc
adc
testl
mov
dec
mov
sub
repz
cmc
jnp
sbb
cmp
cmpsl
pop
enter
cmp
les
mov
mov
ljmp
stc
fs
nop
lret
hlt
pop
xor
mov
sbb
clc
lock
std
or
push
pop
xor
mov
imul
sub
pop
pop
mov
lods
dec
mov
lds
push
add
aaa
nop
jnp
daa
std
add
cli
inc
cltd
pop
or
cs
testb
pop
sbb
sbb
and
enter
ret
jno
mov
test
enter
lods
cmp
xchg
fs
int
nop
dec
add
cmp
jp
cmp
clc
out
dec
xor
pop
add
bound
sbbl
cmc
jbe
push
mov
dec
scas
ret
jp
mov
in
daa
jns
ret
shll
sbb
lock
ficomps
jmp
mov
mov
add
xor
into
adc
addr16
test
testl
xchg
ja
pop
adc
xor
jl
movsb
arpl
mov
push
push
and
mov
fwait
push
mov
sahf
sti
push
lret
cli
jl
mov
imul
fs
out
lock
sub
adc
inc
push
add
jmp
icebp
jp
dec
jmp
cmp
loope
testb
mov
loopne
adc
xlat
in
jne
stos
cmp
adc
adc
push
das
mov
in
rcl
mov
data16
add
cmc
mov
lcall
out
loope
pop
mov
add
loopne
pop
daa
imull
adc
lods
test
push
inc
pop
stc
fwait
jmp
cmp
push
xor
enter
movsl
xchg
pusha
loope
cmp
jl
int
xchg
adc
inc
mulb
push
sbb
xchg
data16
cmpsb
and
test
imul
pushf
fidivrs
xchg
rorl
pop
test
xchg
adc
sarb
aad
repnz
subb
jb
lret
fs
fwait
mov
fisubs
mov
iret
repz
adcb
add
sahf
xchg
inc
adc
sub
lahf
cmp
repz
push
js
push
popa
push
mulb
sub
pusha
cmp
add
aad
sub
adc
test
or
pop
mov
sbb
gs
fidivrs
dec
in
cld
cld
push
out
jns
div
das
or
ffree
push
pop
and
bound
lock
and
outsb
pop
jno
repnz
mov
shlb
cltd
xchg
sbb
popa
xchg
daa
push
add
xor
xchg
in
pop
enter
sbb
add
movsl
sbb
lret
fldt
mov
jecxz
cmc
setb
out
je
stos
and
sub
enter
mov
addb
into
loope
test
dec
and
outsb
in
push
rcrl
adc
adc
push
cmpsb
rcr
test
in
sbb
adc
or
push
repnz
adc
sub
in
mov
orl
jns
stos
stc
cltd
out
mov
mov
loop
jge
add
push
add
xor
pop
or
fiaddl
fwait
push
sbb
or
iret
fcmovne
call
push
xchg
sti
inc
cli
cs
pop
or
add
not
inc
enter
andb
orb
mov
cli
lods
aas
aad
mov
aaa
jne
cmpsb
or
push
inc
data16
adc
mov
lret
fdivrs
sub
add
roll
int3
mov
sbb
dec
in
jp
sbb
jmp
mov
xchg
aad
cmc
decb
loop
or
lds
cltd
adc
shlb
xor
sbb
sub
xor
std
cwtl
stos
dec
jno
jl
movsl
js
mov
aas
and
lods
push
cli
sbb
popf
dec
mov
fistpll
gs
cltd
shrl
aas
jl
sbb
sbb
scas
sub
sahf
push
lock
xor
out
lret
xor
insb
mov
stos
dec
lea
mov
fdivs
insl
sub
cmp
push
or
imul
and
and
cmp
sbb
sub
jno
stos
xchg
push
das
mov
scas
js
enter
dec
pop
sub
popa
mov
mov
or
cwtl
xlat
and
xorl
dec
sub
xor
lock
add
fisttps
mov
test
mov
rolb
jge
sbb
xchg
add
mov
xchg
cmpsl
add
push
sub
ja
scas
mov
jnp
sbb
jge
dec
leave
cmp
jg
sub
inc
pop
or
scas
mov
sub
inc
sbbb
lret
jecxz
jbe
push
pop
aam
or
adc
sahf
push
pop
mov
mov
push
add
mov
jmp
mov
and
lcall
xchg
sub
cmp
lods
pop
and
sahf
add
dec
int3
not
mulb
jnp
add
ret
subl
adc
cmp
fcmovne
add
rep
in
and
push
cmp
scas
dec
jne
cwtl
inc
cmp
insl
and
in
mov
es
negb
mov
sbb
sub
movsl
iret
js
jecxz
hlt
fstpl
iret
jo
icebp
sbb
mov
or
or
notl
pop
adc
inc
dec
push
sbb
imul
mov
mov
push
mov
imul
cltd
rcrl
adc
or
out
xchg
inc
in
ret
add
test
int3
imul
xor
es
sub
in
sbb
jp
sti
lock
cmp
ja
ret
or
or
call
pop
push
ret
cmp
jecxz
mov
pop
or
gs
dec
lret
das
xchg
xchg
gs
jnp
pop
or
movsb
sbb
xor
enter
sub
cmp
stc
mov
shrb
das
sbb
xchg
and
xchg
in
cmp
mov
lret
or
or
sarl
sahf
sbb
data16
and
cld
aam
sub
icebp
cltd
push
and
icebp
mov
int3
push
test
popa
dec
adc
sub
jbe
jg
push
lds
cmp
bound
call
push
int
sbb
jmp
sub
btc
mov
mov
dec
jne
xchg
push
jb
mov
pop
outsb
outsb
outsb
or
sbb
cmpl
jecxz
pop
insl
leave
and
dec
jle
sbbl
data16
clc
aaa
pop
inc
jg
sti
lods
add
leave
pop
xchg
pop
xor
sar
subl
or
inc
out
fimuls
or
aad
sahf
jb
repz
dec
out
out
stos
dec
inc
and
scas
inc
jmp
inc
mov
add
ljmp
xchg
inc
rcrb
xor
xchg
and
ja
xlat
icebp
pop
inc
fiadds
mov
js
ret
aas
mov
add
inc
pop
mov
jle
sub
in
std
xor
cmp
lods
and
pop
mov
outsl
cmp
cli
dec
daa
adc
jle
repnz
jle
pusha
daa
adc
xchg
add
aaa
scas
daa
jp
in
pop
shll
repz
shrl
or
adc
or
outsb
lret
jb
push
pop
push
adc
add
sbb
popa
fisttps
jle
jmp
movsb
imul
notl
adc
jno
push
daa
rorb
fistpl
mov
xorb
cmp
sbb
aas
add
xor
enter
add
loopne
sub
push
pusha
lret
sub
sub
cmp
mov
pop
mov
fildl
dec
movl
jecxz
or
sbb
adc
and
out
in
int3
fmull
out
push
ds
sub
mov
and
mov
jle
repnz
cmp
add
sbb
shrb
sbb
sahf
rcll
addl
in
sahf
insb
pop
pop
pop
dec
popa
lds
pop
es
clc
or
push
sbb
dec
mov
xor
les
dec
loope
sbb
adc
inc
jmp
pop
mov
out
jo
lea
jge
mov
mov
pop
push
adc
into
or
jae
repz
sbb
sub
shrb
mov
adc
fnstcw
mov
cmp
jmp
in
sub
and
pop
jno
ret
adc
testb
out
dec
and
shll
fstl
test
aaa
out
jmp
or
call
es
test
mov
and
dec
add
pop
pop
xchg
sahf
test
mov
cmpsl
clc
pop
popa
out
cs
dec
test
outsb
stos
sub
shrb
xor
rorl
inc
jae
sub
mov
sbb
or
dec
inc
lahf
mov
adc
mov
dec
stos
pop
add
mov
les
addr16
cmp
add
dec
sub
jne
sti
mov
or
jbe
add
ror
push
repz
aaa
push
adc
daa
in
dec
aas
test
test
arpl
pop
loope
dec
call
and
pop
pop
stos
ss
test
clc
sbb
pop
cli
fdivrp
ja
mov
xchg
xchg
cltd
pop
mov
xchg
mov
adc
push
mov
fstps
enter
push
pop
xor
inc
mov
push
jge
sbb
fdiv
in
cmp
jb
call
mov
ja
addr16
lds
mov
inc
pop
in
clc
sub
ficompl
into
mov
jp
loop
insb
mov
ja
mov
mov
and
push
pushf
sbb
pusha
jno
and
mov
adc
fwait
lret
mov
mov
mov
inc
cli
mov
pusha
fists
sbb
cs
es
notb
xchg
ret
add
inc
dec
imul
and
insb
and
push
xchg
cmp
js
test
and
adc
dec
and
mov
cs
and
mov
fs
adc
rolb
int
lahf
andl
lds
out
jb
fidivs
inc
into
insb
fs
cmp
mov
mov
jp
dec
pop
movb
nop
mov
xchg
push
leave
push
in
cmp
push
aaa
cmp
inc
add
jmp
insb
jbe
mov
dec
frstor
cmp
dec
xchg
push
xor
xorb
lds
stc
and
inc
lock
popf
or
xchg
insl
mov
out
mov
shr
xchg
fwait
or
subb
aad
cltd
ret
cmp
or
sbb
inc
pop
je
add
add
xlat
je
cld
mov
aam
and
mov
dec
push
data16
sub
lret
shrl
aam
pop
sub
mov
sub
ret
sub
cli
enter
jg
xchg
lea
ret
pop
mov
cmp
xchg
lds
movsb
jno
jp
dec
outsb
test
jge
jns
cwtl
mov
lcall
jo
shll
out
inc
ja
sub
mov
mov
scas
adc
mov
xor
push
in
mov
dec
mov
repz
push
or
dec
dec
dec
mov
mov
pushf
push
sahf
sbb
push
sub
add
pop
sub
subb
rcl
scas
repnz
ja
loop
xor
inc
addl
lret
movsb
push
repnz
test
bswap
ja
lds
xor
hlt
adc
inc
es
xor
into
dec
adc
and
rcr
inc
mov
scas
pop
add
mov
outsb
fwait
in
xchg
xchg
ret
mov
mov
in
cld
and
pop
jo
or
out
aaa
jo
aaa
adc
std
pop
push
inc
add
cmp
nop
xchg
jmp
out
out
pop
imul
sub
mov
jbe
sub
cltd
pop
fcmovnb
rcrl
bound
mov
jmp
pop
in
mov
adc
sbb
gs
sbbb
pusha
enter
enter
push
in
xor
or
push
pop
js
rcrl
out
pop
jo
aam
pop
xor
mov
outsb
dec
xchg
xchg
push
adc
add
mov
movntq
cwtl
scas
inc
mov
jle
cwtl
push
jecxz
jge
pop
pop
popf
sbb
mov
ret
shll
xor
outsl
xchg
sub
inc
sub
ljmp
pushf
mov
mov
cmc
add
fdivl
in
ljmp
fidivrs
aas
lods
mov
sbb
cltd
jbe
pop
pop
cwtl
jg
lock
ret
hlt
pop
xlat
addr16
aas
ror
jnp
mov
and
fs
push
dec
xchg
scas
mov
or
mov
out
dec
push
pop
ljmp
clc
imul
mov
mov
inc
mov
ret
jb
inc
test
out
fbld
mov
lea
jmp
and
lahf
cs
in
add
push
adc
aaa
insb
mov
and
add
mov
icebp
sub
in
mov
sbb
testl
mov
fnstenv
ja
jb
fstpt
mov
inc
mov
test
movsl
mov
mov
fs
pop
and
and
add
xor
sbb
inc
sub
aas
adc
mov
xchg
adc
adc
imul
sti
jge
lahf
push
jb
shlb
iret
repnz
adc
add
pop
xor
out
je
in
inc
bound
nop
insb
das
sbb
jecxz
cs
mov
imul
mov
xchg
cmpb
fstl
cli
pop
jmp
movsl
dec
or
pop
addr16
push
mov
mov
lock
mov
mov
rcll
movsb
lahf
xchg
mov
movsb
adc
ficomps
and
xor
lock
or
inc
movsl
pop
lds
push
xor
sahf
out
mov
or
jo
jne
sub
pop
aam
subb
mov
mov
jae
mov
test
sbb
in
cmp
test
adc
out
mov
mov
shl
fnstsw
dec
mov
rcl
push
pop
dec
filds
jbe
outsb
ds
ljmp
ljmp
xorb
or
xor
or
mov
cmpsb
push
cmp
enter
subb
add
add
inc
bound
dec
in
mov
inc
fidivrl
adc
adc
jae
imul
aaa
mov
loope
push
aam
xor
fstp
mov
or
inc
mov
fstp
xor
fs
mov
bound
mov
jno
fwait
stc
repz
insb
pop
aaa
in
lcall
scas
stc
stos
inc
adcb
jecxz
mov
pop
xchg
sbb
gs
push
fsubrs
mov
mov
loope
inc
add
dec
or
inc
imul
popa
loopne
arpl
mov
scas
lret
call
lods
cs
test
es
jne
mov
mov
add
int3
pop
cld
xorl
mov
shl
sarb
lret
cld
pop
push
mov
lea
pop
lea
stos
xchg
into
mov
push
lods
jg
lock
imul
out
xor
lods
sub
icebp
lea
jp
jmp
cmpsl
aad
mov
dec
mov
inc
sub
pop
mov
and
sub
incb
inc
sbb
aaa
jbe
stc
push
rorl
mov
repnz
cmp
mov
jno
dec
mov
dec
jge
mov
xchg
or
repz
ret
xchg
add
data16
jp
add
dec
iret
inc
std
pop
aam
nop
xlat
pop
mov
imul
mov
pop
icebp
inc
push
dec
push
dec
push
aad
sbb
mov
lds
into
fnstenv
jmp
cmpsb
dec
repz
mov
sub
adc
mov
xchg
inc
bound
mov
pusha
mov
mov
ja
or
or
and
mov
xor
adc
push
cwtl
imul
or
xchg
imul
inc
xchg
ss
or
stos
cmpl
lret
push
dec
decb
xchg
lret
out
in
inc
jo
lret
lock
fs
mov
mov
push
jg
ja
call
and
cmpsl
xorl
lcall
jg
jmp
leave
sqrtps
cmp
jge
sti
inc
mov
sub
inc
ds
imul
adc
sbb
mov
push
addr16
xor
fadds
ja
xor
jne,pt
dec
mov
arpl
mov
inc
mov
push
les
sub
sub
xchg
mov
test
vcvtss2si
sbb
aas
aas
dec
cld
push
dec
por
in
cwtl
insl
xchg
loope
fidivrs
daa
lea
sub
inc
cltd
daa
lret
arpl
add
lret
addb
jp
lock
out
dec
jnp
mov
ret
push
aam
xor
and
fisubrs
dec
pop
clc
sbb
fcmovne
mov
dec
push
aas
out
mov
inc
icebp
push
xchg
xlat
mov
fs
push
icebp
outsl
cwtl
sub
icebp
rclb
or
fildl
in
cld
xor
sahf
in
insl
outsb
fstpl
xchg
xchg
nop
outsb
cmp
xor
mov
rorl
xchg
jmp
mov
xchg
gs
mov
pop
push
mov
outsl
sub
cli
data16
push
inc
cmp
leave
scas
loope
push
push
push
sbb
inc
jmp
out
into
adc
leave
mov
pop
out
pop
outsl
jno
sbb
dec
subl
cltd
fmull
sbb
dec
mov
push
pop
sahf
xchg
insl
pop
ss
mov
or
mov
in
pop
bound
or
outsl
addr16
in
mov
scas
adc
loopne
adc
or
mov
orb
gs
fildll
inc
stos
push
pop
push
test
cmc
js
mov
imull
roll
mov
ret
pop
or
std
pushf
cmpsl
lret
mov
icebp
fnstcw
and
cmp
cmp
setp
mov
mov
pop
lret
lret
mov
fdivl
add
stos
mov
lds
sbb
outsb
add
push
add
mov
cli
mov
notl
jmp
push
mov
fs
cmpsl
add
adc
xchg
in
dec
mov
pop
dec
std
xor
mov
shrl
sub
dec
lcall
xchg
repnz
stos
add
mov
mov
imul
hlt
mov
mov
test
mov
and
enter
xchg
leave
insl
dec
sub
aam
int3
lret
sahf
and
xor
mov
icebp
and
mov
dec
pop
ret
cmc
sub
mov
mov
mov
cmp
sarb
adc
jo
movsl
inc
and
shlb
inc
xchg
jnp
cmpsb
push
aas
std
and
mov
ss
inc
adc
pop
push
fcoms
inc
gs
xchg
cmp
add
outsl
mov
lcall
adc
cwtl
dec
pop
jecxz
scas
icebp
int
std
subb
out
fwait
pusha
dec
sbb
mov
mov
push
mov
sub
or
push
mov
push
jne
mov
std
mov
push
outsb
cli
inc
or
push
addr16
test
or
data16
sbb
push
pop
and
jmp
in
popa
in
sbb
inc
popa
jb
push
xchg
pop
loop
js
cmp
roll
push
push
cmp
sbb
lock
iret
pop
jo
and
adc
stos
sub
or
std
fwait
mov
jmp
xchg
xchg
test
stc
and
pop
nop
mov
jecxz
in
adc
sub
add
mov
sbb
pop
mov
adc
insb
clc
arpl
enter
out
push
icebp
imul
insl
in
add
sbb
add
test
dec
or
xor
inc
pop
sub
mov
nop
out
mov
push
lcall
pop
pop
stos
jb
mov
in
shrb
xchg
push
hlt
into
pop
out
inc
cld
js
dec
imul
add
andl
lret
lret
ret
mov
or
flds
in
cmc
fucom
jnp
xor
fldenv
daa
lods
pushf
orl
flds
pushf
sub
int
je
mov
fdivrl
xor
mov
sarl
cmc
mov
push
outsl
int
pop
ss
hlt
add
jmp
add
xchg
sbb
shlb
imul
enter
cmpsb
stos
mov
mov
arpl
or
clc
cmp
sub
jmp
push
movsl
xchg
icebp
add
and
ljmp
gs
jecxz
mov
sti
sbb
divb
cmp
jb
test
jnp
pop
pop
into
and
movsl
dec
ret
stos
cmp
or
lcall
aad
out
xchg
inc
add
pop
mov
out
xlat
pslld
out
cmpsl
pusha
icebp
lret
movsb
aaa
push
push
inc
mov
or
cmpsl
or
mov
movsb
add
cmp
mov
lret
inc
aam
dec
lea
jae
pop
dec
popa
mov
inc
mov
stc
mov
dec
rcrb
sub
lock
int
outsb
es
xlat
push
jecxz
ja
jmp
repz
gs
test
insl
test
mov
fstpt
daa
loopne
adc
cmp
push
imul
mov
xchg
sti
cmpsb
inc
jl
pop
ljmp
dec
jb
inc
mov
xchg
mov
loopne
cld
jge
jnp
daa
sub
inc
jno
test
lahf
scas
lods
insl
call
and
xor
sbb
fstps
mov
or
lcall
mov
inc
popf
bound
clc
sahf
xor
cmp
cltd
dec
cmpsl
loopne
mov
mov
rolb
shll
and
arpl
add
mov
dec
outsb
jae
nop
push
ret
xchg
pop
cmpsb
and
int
adc
rcrb
fs
add
adc
and
mov
push
dec
lds
aad
or
add
push
or
jae
xorb
sub
stc
sbb
cmp
lcall
xor
fisubrs
xlat
add
push
adc
pop
jmp
push
mov
fwait
int
aam
xorb
das
enter
sbb
rorl
jmp
test
push
xchg
mov
enter
in
ret
ds
imul
nop
jnp
sub
mov
adc
jle
xor
xchg
stc
dec
in
jg
out
daa
testl
leave
add
xchg
sbb
testb
mov
mov
jne
xchg
cmpsl
frstor
cmp
sbb
pop
sbb
sbb
push
and
mov
cmc
adc
cmp
out
js,pn
icebp
mov
pop
ja
mov
nop
add
push
out
das
mov
rcll
xor
mov
lods
repnz
loope
jle
ss
icebp
rcrb
push
lahf
mov
pusha
sbb
xchg
loope
xor
fucomip
imul
add
push
enter
adc
repnz
inc
mov
cmp
jns
in
mov
jge
rcrl
jnp
cli
fnsave
loope
xchg
dec
inc
mov
loopne
ja
jecxz
leave
jae
pop
push
pop
test
ja
adc
js
ds
inc
bound
leave
cs
push
loopne
mov
cmp
fmull
jmp
sub
jecxz
xorl
subl
mov
cmp
test
hlt
ja
stos
adc
sti
sub
pusha
sub
incb
iret
pusha
jbe
pop
adc
enter
pop
in
ret
xchg
xchg
movsl
mov
xor
inc
jno
into
mov
lods
and
dec
inc
inc
insl
xchg
jecxz
inc
ljmp
or
jg
push
sub
out
jecxz
outsl
sub
xchg
jg
dec
test
subl
add
add
and
push
iret
mov
mov
mov
add
lea
iret
daa
in
daa
daa
lods
das
pop
adc
test
ret
push
repnz
mov
xor
sub
aas
popa
mov
lds
fdivrl
xchg
insl
int3
mov
sbb
inc
int3
inc
sub
push
or
push
aad
add
mov
icebp
mov
imul
ret
dec
in
dec
dec
push
xchg
jecxz
repnz
out
cmp
xor
push
pop
inc
inc
and
test
and
iret
add
or
cs
dec
pop
aad
cmpsb
mov
daa
or
in
sub
sbb
or
xor
popl
mov
std
jmp
inc
and
pop
ljmp
int3
lahf
xorl
mov
mov
dec
or
and
aad
push
dec
mov
or
fwait
mov
stos
adc
lods
cld
das
lods
adc
into
clc
cmp
mov
cmp
imul
fwait
or
sub
mov
shlb
aad
adc
jno
das
loopne
or
mov
jb
sub
cmc
test
sti
sbb
mov
sbb
ret
popa
mov
outsb
call
scas
xor
mov
loop
pop
pop
jnp
cmp
test
subb
dec
scas
jle
out
aaa
add
int
mov
lret
fsubl
adc
cmp
jle
or
cwtl
sub
dec
pop
push
aas
fdivr
sub
pop
call
jp
dec
out
jp
sub
inc
mov
inc
idivb
push
icebp
pop
cmp
in
lcall
mov
xorl
jecxz
loop
je
ss
insb
mov
xchg
sub
cli
shll
fdivp
bound
jmp
out
jb
sarl
mov
push
cmp
faddl
neg
out
daa
and
cmc
dec
pop
inc
out
xchg
xchg
dec
jnp
psubsb
inc
xor
mov
push
jne
cmp
and
cmc
mul
sub
mov
lea
cmc
mov
inc
inc
pop
mov
cmp
shll
add
aam
data16
xor
sbb
scas
dec
or
int
imul
inc
inc
gs
mov
shlb
jle
bnd
push
pop
testb
pop
xor
jb
add
test
sbbl
push
push
jno
pop
push
mov
xor
xchg
das
repz
mov
xchg
ret
xchg
out
and
and
loop
fimull
mov
fidivs
mov
jb
jecxz
in
push
sub
xlat
test
mov
in
and
mov
sbb
cmp
mov
test
dec
xchg
movsb
mov
fs
cmp
enter
mov
out
movlps
sub
daa
jle
push
scas
out
popf
sahf
xchg
jge
add
cmp
stos
sbb
xchg
or
dec
es
dec
xchg
cmpsb
lds
mov
sbb
ds
jno
pop
into
adc
jbe
cld
lahf
jg
jecxz
adc
cmp
int3
add
test
pop
xchg
negl
lret
inc
push
loope
mov
outsl
testl
sbb
and
jl
addr16
repnz
je
fistpl
sbb
movsl
mov
jl
or
jae
sarl
jae
pop
int
adc
xchg
stc
add
stos
jne
push
insb
ficoml
and
test
adc
or
mov
push
and
arpl
mov
mov
pop
in
cli
test
call
and
xchg
xor
mov
daa
das
ss
mov
mov
mov
adc
out
or
not
sub
adc
push
fs
mov
repz
outsb
scas
lods
mov
pop
jge
jle
and
add
cmp
hlt
pushf
xchg
testb
mov
sti
push
cld
ud1
lret
out
lds
or
pop
or
repnz
jg
jg
flds
cmpsl
icebp
in
inc
ja
xchg
push
jp
enter
jae
xchg
sub
push
inc
int3
or
outsl
outsl
pop
cmp
xchg
in
mov
pop
pop
pop
or
movsb
xor
xor
lds
cmpsb
es
xchg
daa
cmc
js
outsb
dec
ja
fdiv
xchg
inc
stc
enter
cmp
adc
repz
jne
pop
stos
sub
and
repz
mov
lods
rcl
jecxz
or
inc
test
adc
fcoms
xorb
arpl
jp
mov
pusha
inc
fistpl
add
xor
adc
jno
sub
fisttps
fcmovbe
jae
mov
mov
rol
int
mov
test
adc
add
in
and
mov
cmp
xchg
xchg
pop
jo
push
push
cwtl
mov
mov
insl
mov
shr
out
arpl
sbb
cmp
dec
inc
outsb
pop
cwtl
mov
xor
andb
loopne,pt
test
cmp
adc
outsb
inc
xor
stc
mov
popf
das
imul
in
iret
push
loope
outsb
int
jl
push
ret
leave
aam
cmp
mov
jae
pop
and
add
mov
and
shll
mov
ret
fstpt
aas
imul
rolb
cwtl
cli
lahf
or
ss
mov
jnp
lret
xor
insl
cmp
and
sbb
dec
or
mov
movsb
pop
or
shlb
cmpb
icebp
sub
push
lcall
add
lds
adc
lret
add
dec
mov
js
in
xchg
fimull
mov
lcall
or
xchg
inc
sub
adc
cld
xor
fwait
enter
pop
adc
lods
xor
orl
push
dec
mov
inc
adc
adc
pop
jmp
add
push
test
repnz
mov
int
test
mov
shll
mov
xchg
in
loope
push
and
mov
stos
jae
dec
int3
rolb
mov
dec
repnz
cli
mov
jnp
es
inc
fwait
dec
dec
and
add
xchg
inc
xor
int
enter
inc
scas
pop
xchg
dec
mov
test
cltd
cli
xlat
dec
fwait
int
jns
sbb
push
adc
mov
lcall
xchg
mov
int3
sbb
and
cmp
xor
popl
test
pop
shlb
call
pop
xor
bound
pushf
imul
test
jns
mov
xor
jmp
ficompl
sub
pop
xchg
test
xor
sarb
adc
sub
add
cmp
out
sbb
into
xor
sub
clc
or
cmp
shlb
fbstp
mov
sar
das
fiadds
dec
jbe
cmp
mov
shlb
lock
cmp
dec
add
mov
imull
mov
dec
out
mov
adc
sbb
mov
inc
outsl
div
dec
in
jbe
mov
imul
cmp
sahf
add
push
mov
jecxz
repz
add
aas
fwait
sub
aad
loop
adc
decl
test
shl
mov
int
iret
mov
add
inc
pop
and
icebp
add
rolb
cmp
cwtl
mov
dec
jge
fistl
xor
lock
out
addb
nop
pusha
scas
sub
in
cld
mov
test
lcall
jmp
sub
sti
xchg
loop
leave
lret
lock
in
sarl
out
pop
mov
movsb
adc
dec
aad
or
shlb
loop
sti
fwait
jns
fdivl
insb
xchg
subl
and
repz
fucomi
cs
cmpsl
sti
popf
lcall
push
aad
sbb
popl
mov
es
aad
sub
xor
pop
leave
dec
clc
addl
mov
push
xlat
mov
jno
call
or
aaa
dec
cld
stc
and
pop
sbb
arpl
test
sub
incb
mov
std
fisubrs
mov
jae
push
jg
push
lods
out
mov
shlb
out
sahf
int3
push
mov
sbb
mov
add
jne
push
pop
dec
sbb
das
push
mov
daa
dec
sbb
jmp
orl
cmpsb
push
addl
hlt
mull
icebp
push
xchg
cmc
pusha
out
lods
gs
push
lock
and
fcom
xor
ret
jo
in
fisubrs
scas
mov
sub
std
xchg
sbb
bound
repnz
imul
push
mov
xchg
mov
ret
jle
mov
xchg
xchg
jne
cmp
fisttpl
cs
mov
xorl
dec
push
idiv
sbb
sub
push
in
or
adc
cmp
in
or
mov
push
test
mov
mov
sbb
loopne
movsb
mov
mov
in
jmp
leave
daa
fsubs
lods
jecxz
and
sbb
imull
mov
sti
cltd
jne
jo
aaa
popf
addr16
fdivs
push
pushf
mov
xor
pop
pop
nop
lahf
cmp
clc
data16
aaa
out
inc
sub
lcall
or
mov
in
das
lahf
dec
sbb
lret
sahf
pop
push
xchg
xor
xchg
jno
adc
cltd
dec
adc
imul
pop
jg
movsb
in
test
mov
jo
lret
popf
in
lahf
loop
pop
and
fcoms
push
and
sub
scas
push
rcr
dec
push
adc
mov
clc
inc
leave
or
xor
xchg
rclb
jge
xor
aad
pop
mov
out
clc
jecxz
pop
sbb
sti
sbb
dec
mov
pop
lods
mov
push
mov
cmp
mov
adc
lcall
jl
fsubl
pop
loopne
mov
inc
cmp
mov
or
inc
cmp
dec
cmp
mov
and
jge
mov
sti
jg
push
rol
sub
outsl
or
push
lcall
test
xchg
scas
test
fucomi
and
adc
in
mov
ret
add
cmp
jae
cmpl
je
imul
or
push
jns
fsubs
or
popf
out
repnz
aam
insl
and
push
jns
jb
aad
inc
aaa
mov
out
pop
repz
mov
bound
hlt
pop
and
mov
pop
cmc
pop
sbb
stos
cwtl
pop
jmp
test
mov
xchg
jns
jmp
xor
mov
scas
adc
push
inc
cli
dec
inc
addl
dec
fld
jne
inc
xlat
xchg
dec
mov
popa
push
jae
add
adc
pop
ret
sub
jbe
jle
xchg
jbe
push
add
and
rcrl
mov
xor
or
lret
pop
sbb
test
mov
or
cmp
push
push
and
in
rcll
push
lods
sub
arpl
cwtl
sbb
jge
test
insb
repnz
cs
add
and
adc
decl
mov
jmp
jae
sub
rclb
mov
pusha
or
arpl
pop
in
jecxz
adc
insb
lds
sub
dec
jg
loope
out
cld
jae
inc
adc
xor
push
jbe
dec
stos
jno
jb
into
int3
jb
ljmp
loope,pn
jne
jle
pop
cld
lea
scas
int3
mov
add
pop
movsl
jnp
test
imul
fnstsw
call
sar
arpl
jp
int3
xchg
stos
mov
adc
add
lret
lret
adc
push
xchg
bound
adc
pop
ja
cmp
mov
push
dec
int3
add
pop
jge
outsl
push
pop
clc
scas
leave
hlt
icebp
mov
addl
cmp
push
rcr
mov
push
add
mov
mov
cmp
sub
mov
xor
cmpsl
jns
add
mov
mov
mov
in
repnz
push
daa
cmp
ret
or
push
push
mov
add
not
push
xchg
daa
cltd
lcall
fs
inc
fs
pop
sarb
aas
imul
mov
inc
lods
push
mov
scas
lods
bound
xchg
pop
jle
pop
sahf
xor
xlat
scas
inc
push
inc
pop
mov
mov
xor
mov
inc
pop
and
push
fisubrs
cwtl
mov
dec
push
into
xchg
icebp
xor
xor
imul
leave
and
hlt
dec
jnp
dec
in
sub
imul
jl
rcrl
pop
arpl
cmp
sti
ds
fdivrp
lods
push
jno
xchg
shlb
js
fsubr
shlb
repnz
insb
xor
sahf
outsb
call
xchg
cmpsb
pop
mov
aam
adc
aam
cmc
jp
cli
xor
adc
fidivs
sbb
loop
lock
mov
es
stos
sahf
sbb
ret
push
leave
test
cmp
pop
mov
cmp
out
sub
jle
mov
jg
cmpsl
mov
dec
and
xchg
sub
outsl
pop
jl
mov
push
jo
and
push
mov
mov
fs
outsl
lock
test
out
repz
in
imul
mov
daa
les
fmull
sbb
popa
mov
jnp
mov
mov
imul
mov
pop
push
mov
push
loope
sbb
lret
xor
xchg
jnp
fstpl
outsb
pop
je
fs
sbb
sbb
aas
mov
sbb
orb
movb
gs
add
gs
cmp
in
pop
pop
mov
mov
out
mov
push
int
mov
mov
sbb
jmp
outsl
rorb
jle
repnz
cwtl
xchg
adc
xor
rcl
inc
bound
push
pop
xchg
adc
and
xchg
adc
scas
fadds
enter
adc
inc
pushf
cli
popa
imul
or
or
cmpsb
and
and
leave
push
xor
stos
push
ror
mov
push
test
mov
idiv
int3
pop
jmp
gs
cli
xchg
rorl
int3
ds
sbb
adc
in
add
dec
xor
enter
ret
push
add
cmp
dec
mov
sti
inc
mov
or
add
xchg
pop
inc
cmp
hlt
jmp
adc
inc
js
mov
inc
pop
xchg
push
in
sub
lds
cmc
sti
push
push
repz
pop
mov
push
outsl
dec
rcr
and
dec
cltd
push
sub
xchg
mov
cltd
jae
pusha
fistps
cli
nop
sbb
xchg
popa
nop
aas
and
pop
pop
test
pusha
fs
sbb
jbe
inc
inc
pop
movsl
cltd
cmp
out
push
xchg
fs
cmpsl
mov
pop
shll
rcr
sbb
imul
inc
xor
dec
xchg
inc
sbb
or
inc
jl
fdivrp
dec
pop
stc
or
cmp
movsb
dec
lods
lcall
cmp
and
xchg
es
mov
sbb
xchg
cmp
andl
mov
lcall
cld
imul
jle
cmp
repz
test
xchg
lret
lcall
push
shrb
ljmp
sub
add
je
dec
int3
repz
push
add
fidivl
mov
je
mov
or
fimuls
sbbb
jg
mov
jnp
rorl
pop
inc
sbb
xchg
jmp
xor
or
push
xor
lock
arpl
push
filds
inc
shll
xlat
dec
push
sbb
or
add
push
mov
jbe
mov
or
insb
in
push
test
cmpsb
dec
dec
push
aas
dec
in
inc
cmp
xor
lods
pop
push
jl
sub
std
dec
sub
imul
test
jno
addr16
mov
lds
xchg
or
push
sbb
inc
orb
sarb
mov
stos
test
mov
jne
mov
push
and
and
inc
mov
lock
mov
sub
ljmp
orb
xchg
sub
mov
and
lret
sub
jmp
or
pop
mov
js
repnz
popa
xchg
das
std
pop
sub
sub
shll
and
pop
cmp
pop
rcrl
bound
cwtl
and
fcmovne
push
dec
popf
push
jge
pusha
stos
ret
sub
addr16
jbe
leave
ss
enter
or
or
clc
bound
or
pop
test
dec
push
pop
fisttpll
clc
xchg
push
je
out
jg
adc
pop
je
ret
or
mov
sbb
inc
pop
inc
orb
jle
add
cmp
repz
xor
adc
lea
xor
cmp
out
xor
add
push
daa
test
dec
lcall
es
dec
xor
and
shlb
fwait
sub
loop
js
test
shrl
xor
adc
add
out
dec
fdivs
setbe
add
stc
clc
sub
push
xlat
mov
out
add
mov
pop
xor
sub
faddl
out
idivl
cmp
f2xm1
add
popa
mov
mov
xor
sub
lret
out
pop
hlt
std
lcall
and
mov
mov
xor
or
adc
into
cld
mov
cmp
xchg
mov
mov
aam
inc
cmp
fldenv
sub
cld
sbb
add
ficoms
dec
sahf
cmp
pop
inc
scas
cli
sarl
inc
in
push
ljmp
add
jmp
and
push
xor
rorb
or
icebp
or
xor
int
push
jne
and
stos
mov
jle
dec
xchg
popa
aad
xchg
and
adc
pop
inc
mov
stos
pusha
push
mov
in
mov
pop
add
xchg
pusha
jmp
enter
adc
insb
out
mov
popf
popf
incl
das
push
mov
sub
sbb
and
gs
repnz
mov
out
test
mov
and
mov
loop
fcomps
dec
pop
add
popf
cli
ja
jne
pop
adc
sti
or
popf
adcb
pop
ret
mull
pop
add
mov
and
xor
or
aas
xor
pop
ljmp
cli
xor
mov
fwait
movsl
ss
or
mov
push
and
mov
cmp
adcb
xor
mov
cs
jmp
leave
inc
mov
hlt
dec
pushl
clc
jb
stc
xor
pop
pushf
lea
hlt
or
jo
lods
xor
dec
cli
jne
xchg
pop
cwtl
movsb
mov
in
in
das
mov
aaa
mov
out
jne
cmp
sub
xchg
cmp
inc
xchg
cmpsl
mov
lods
lret
cmp
add
lahf
sub
jecxz
cmp
mov
addr16
sarl
mov
jns
mov
cmpsl
jbe
ds
push
cs
rorl
dec
push
movsb
lea
push
lret
aam
add
inc
cltd
rcr
loopne
aad
jle
out
mov
mov
mov
dec
and
lods
cmpl
insl
shl
inc
imul
inc
pop
es
scas
xor
pop
ja
adc
xor
lods
sub
mov
push
repz
jecxz
adc
add
jne
test
push
out
mov
pop
xor
inc
nop
scas
rorb
jmp
addr16
adc
inc
in
inc
fnstenv
shrl
or
mov
cld
xor
push
jnp
stos
jo
xchg
es
into
clc
ror
aad
push
lods
add
dec
stos
repnz
test
and
add
cwtl
dec
fmul
ljmp
mov
or
xor
repnz
add
inc
lods
xchg
add
cmp
sbbb
repz
pop
js
int3
mov
pop
sbb
lcall
enter
mov
xor
cmp
mov
in
movsb
or
fdivrp
xchg
lahf
sub
ljmp
mov
inc
mov
pushf
xor
adc
or
leave
movsl
ret
sbb
in
mov
xchg
mov
add
jns
bound
and
dec
add
mov
adcl
xor
incl
rclb
hlt
pop
push
movsb
inc
lret
add
adc
scas
mov
mov
sarl
test
mov
fdivl
in
in
push
loope
mov
cmp
and
xor
dec
fwait
aad
mov
jp
xor
cs
dec
iret
xor
mov
orb
iret
dec
cltd
xor
dec
pushf
stc
aad
out
inc
scas
dec
jns
rep
cmpsb
inc
imul
dec
cli
in
ficompl
clc
xor
push
std
or
mov
inc
jmp
inc
fiaddl
clc
inc
fisubs
lock
cmp
enter
clc
repnz
and
xor
dec
in
add
jge
xchg
xor
stos
xor
and
lods
mov
mov
sub
xor
xchg
ljmp
jb
bound
ret
out
cmovno
mov
xor
clc
test
pop
inc
cmp
sbb
out
leave
sub
mov
mov
movsl
ficoml
cli
mov
fwait
xchg
ss
mov
fistl
in
ja
gs
sbb
jno
cmpsl
push
popa
jge
aad
jmp
dec
add
push
into
loope
shr
rcll
jmp
jns
aas
shlb
popf
cmp
jbe
mov
lret
jge
or
inc
mov
leave
sub
rcrb
sahf
jecxz
and
idivb
jmp
mov
push
mov
je
xlat
xchg
pop
fnstcw
stos
rcr
rcr
inc
aad
mov
sub
fidivs
xchg
adc
ljmp
jp
aad
cmp
enter
mov
nop
insl
jle
or
dec
lods
adcl
mov
fwait
negl
js
sub
mov
insb
imul
cmc
cmpsb
mov
mov
mov
leave
mov
and
insl
lcall
ret
rcrb
push
imul
jbe
adc
lods
mov
adc
loop
aad
xchg
iret
jmp
ja
test
jb
stc
push
push
idivb
jle
push
sbb
sarb
es
jl
cmp
sar
adc
flds
add
call
cwtl
adcl
stos
out
jns
out
addb
and
ret
inc
aad
pop
cli
flds
or
xor
inc
into
arpl
push
lods
das
das
testl
jle
lds
dec
int3
dec
xor
jne
ret
ja
je
ja
adc
cmc
push
mov
mov
cltd
shrl
pop
aad
adc
pop
aad
jg
in
sub
fiaddl
call
sbb
roll
mov
lock
xor
mov
repnz
scas
test
sub
sub
jmp
push
outsl
mov
mov
jns
ds
pop
jl
iret
xchg
mov
sbb
pop
mov
xchg
scas
fisubrl
mov
sub
ljmp
push
data16
sbb
sub
cmp
push
lret
cmp
dec
scas
sbb
sbb
filds
cmp
insl
nop
mov
add
imul
sbbb
lea
pop
in
into
lret
push
daa
sbb
test
adc
sti
cmp
popf
adc
pop
leave
cmp
dec
stc
mov
dec
xor
mov
pop
or
adc
pop
dec
add
out
pop
repz
inc
jae
mov
outsb
pushf
add
je
test
fsubs
pop
fwait
add
pop
inc
adc
or
xchg
mov
sbb
ret
pop
movsb
lock
and
movsb
loop
mov
xchg
js
and
nop
repnz
pop
jns
mov
es
imul
cmp
jg
imul
or
shlb
ret
dec
xor
and
add
mov
outsl
insb
filds
push
and
sbb
add
pusha
and
inc
xchg
scas
aam
fbld
pop
inc
xchg
jns
sahf
jae
mov
mov
lcall
pop
mov
mov
sarb
xchg
jne
fnsave
sar
adc
mov
pop
lea
add
push
imul
sub
push
mov
xor
subb
rcl
enter
dec
adc
insb
or
mov
stos
and
pop
aam
pop
pop
dec
mov
rcrl
mov
cmpsb
jge
scas
pushf
adc
lods
or
ds
add
xchg
insb
add
dec
pop
sbbl
add
jecxz
lret
mov
fimuls
xchg
mov
lret
xor
mov
ds
int3
mov
push
cmc
adc
sbb
out
jno
pushf
sarb
add
ffreep
les
rclb
or
movb
xlat
or
add
sahf
fldt
and
cmp
std
clc
fsubs
test
ljmp
add
repz
sbb
sub
pop
mov
xchg
cld
cmpsl
fidivrs
fbld
ds
sbb
test
sub
stos
xor
das
pushf
movsb
dec
shrb
out
rorl
xchg
push
add
std
sbb
jns
arpl
lcall
stc
test
test
xchg
cli
sub
int3
xchg
out
mov
call
mov
sbb
lds
cmpsl
test
inc
ret
hlt
push
or
add
add
and
adc
std
test
mov
push
pop
stos
dec
add
jb
mov
mov
adc
xor
imul
sub
and
rolb
cltd
add
aas
bound
in
nop
mov
cmp
mov
pop
lret
jno
sti
mov
in
test
dec
cli
cmc
cmpsl
lods
xchg
movsb
lea
pop
push
sbb
cli
jnp
jmp
pop
sub
sub
xorb
in
aad
ds
mov
aam
xor
or
jge
out
cmp
inc
in
and
cli
rcll
dec
stc
sub
loop,pt
lea
mov
int
xchg
dec
jmp
xor
aam
out
jg
pop
fldenv
sbb
shll
mov
call
mov
pop
fsubrp
pop
and
imul
mov
loopne
les
aam
mov
lods
jnp
and
js
xlat
lods
clc
sbb
dec
cmp
pop
mov
adc
add
arpl
lahf
pop
mov
subl
adc
cmp
repz
pop
push
push
adc
out
ljmp
clc
les
add
push
push
pop
stos
adc
and
adc
mov
mov
outsb
pop
jns
in
or
add
sbb
dec
jmp
icebp
add
xchg
imulb
dec
add
lahf
mov
cmp
test
lret
xor
das
sbb
mov
sbb
xlat
loopne
lds
test
pop
xlat
enter
jne
mov
iret
lea
clc
xor
fadds
sahf
push
xchg
hlt
push
mov
ljmp
in
fs
les
sbb
aaa
inc
mov
sbb
pop
aam
mov
mov
push
testb
dec
loope,pn
ja
sub
insb
jne
insl
xor
jmp
dec
xchg
ss
mov
cmp
cwtl
jecxz
addr16
ljmp
xchg
sbb
aam
fcompl
pop
cs
std
pop
cltd
push
imul
jno
push
push
aaa
xchg
jno
xchg
in
movsb
outsl
pop
ror
rol
pop
lcall
fildll
lret
les
mov
ja
dec
xorb
rcll
xchg
out
jecxz
sbb
ret
cld
cwtl
lock
jne
fbld
sbb
test
inc
mov
sub
push
xchg
rorl
or
rcr
push
int
adc
push
adc
es
sub
jmp
out
dec
insl
cli
fstpt
dec
aaa
or
ret
sub
sarl
sahf
mov
aas
movl
sub
roll
xchg
add
rcll
outsb
push
add
jmp
loopne
dec
sub
or
test
jp
cmpsb
sbb
out
lret
lods
popf
repnz
dec
shll
push
push
xchg
inc
pop
cmp
aad
dec
sub
rclb
pop
jbe
cli
fs
mov
xchg
rcrb
mov
imul
cmp
je
mov
fisttps
and
outsb
out
nop
out
mov
adc
xchg
out
sbb
test
mov
or
cmp
adc
jg
jp
test
nop
ds
dec
or
jg
push
and
fisttpl
lret
jnp
stos
sub
lock
add
adc
popa
sub
test
std
pop
cmp
addb
movsb
stos
mov
mov
loope
sbb
rclb
or
imul
in
or
jmp
scas
ja
arpl
push
or
enter
xor
adc
cmp
movsl
mov
xor
mov
fsubrl
jecxz
rolb
jbe
ficompl
repz
stos
cmpsb
int
mov
push
jb
movsl
fadd
loopne
xchg
push
dec
add
cltd
sbb
jbe
cmpxchg
vaddsubpd
xor
pop
cmpsl
push
and
xchg
sbb
pop
fidivl
cwtl
in
lahf
and
pop
inc
inc
pop
data16
in
inc
pop
shr
or
rcll
fisubs
dec
icebp
xor
insb
das
push
mov
enter
dec
push
in
dec
in
adc
testl
test
daa
lret
gs
pop
mov
push
push
in
sbb
inc
rcll
fmul
fldenv
sahf
or
into
mov
fisttps
lcall
mov
xor
push
insb
push
icebp
imul
pop
movsl
std
lds
mov
insl
sub
mov
adc
xchg
arpl
out
jge
ret
in
test
scas
or
das
mov
mov
jmp
loope
lret
pop
sbbl
fistpl
in
fistpl
insb
inc
jbe
ret
ret
xor
inc
lret
xor
fnstsw
in
mov
data16
xor
movsl
lret
push
inc
lret
movsl
mov
pop
sbb
lcall
xor
mov
fiadds
adc
addb
jl
loope
jbe
pop
fisubs
nop
idivb
hlt
in
jmp
mov
mov
imul
xor
mov
stc
cmpsb
add
push
mov
test
loop
pop
or
vmovss
sbb
add
repnz
and
test
adc
out
fwait
es
dec
mov
jnp
shlb
inc
or
sbb
test
fisubrs
std
je
sti
rcrb
inc
or
lret
ljmp
lahf
rcrl
cli
jns
sub
rcr
xor
mov
xor
pop
sub
mov
sbb
push
cwtl
push
aam
push
dec
scas
lds
dec
add
es
inc
or
outsb
adc
mov
ds
mov
mov
inc
pushf
push
lret
push
mov
in
dec
pushf
mov
sahf
cmpsb
jge
sub
mov
push
sahf
xchg
addr16
push
mov
push
xor
shrb
je
xor
cmp
mov
or
fcoml
xchg
clc
mov
cmp
xchg
ljmp
aaa
pop
jmp
pop
mov
adc
negl
data16
xchg
lret
or
mov
movsb
in
test
subl
xor
sbb
push
mov
in
ret
jp
insl
cmpsl
loop
mov
and
pop
mov
mov
or
stos
jl
aam
xchg
inc
sub
mov
cmp
lret
jmp
pop
pushf
sbbb
jae
xchg
int
lcall
loopne
fwait
mov
int3
push
addr16
push
dec
insl
int
sbb
jae
mull
dec
xchg
add
fldcw
popa
mov
and
push
jne
push
fsubs
mov
and
repnz
cmp
lcall
rep
push
adc
and
hlt
in
jno
xor
les
pop
jns
fdivrl
mov
mov
jae
or
int
incb
outsb
into
mov
jmp
pop
cmp
add
jl
adc
pop
fcoml
xchg
dec
stos
add
dec
fwait
dec
cltd
mov
in
mov
push
loopne
insl
cmp
or
xchg
sub
mov
cmpb
mov
cltd
fstpl
out
fiaddl
xor
test
fscale
mov
mov
pop
mov
push
roll
jmp
add
pop
push
std
mov
test
or
sub
arpl
int3
fnstsw
adc
enter
adc
sub
in
scas
xchg
mov
fwait
dec
pop
shll
aaa
cmc
push
inc
out
and
xchg
lods
sbb
mov
or
xor
push
in
cmp
dec
adc
or
pushf
xchg
mov
lahf
xorl
cmpsl
stos
pop
ljmp
mov
je
cmpsb
cmpsl
mov
jmp
inc
inc
fs
mov
in
inc
divb
sbb
mov
mov
adc
mov
pop
leave
sbb
sbb
push
je
int3
xchg
outsl
mov
es
inc
sar
push
mov
mov
sbb
dec
inc
aas
pop
in
inc
outsl
or
mov
test
stos
xchg
cli
shlb
idivb
cwtl
push
cmp
pop
hlt
imul
mov
cmp
sbb
or
cwtl
xchg
std
fildll
mov
adc
mov
in
cwtl
mov
fldl
dec
sbb
lcall
sub
jp
mov
popa
pop
and
fwait
adcb
stos
bound
ror
cmpsl
sahf
mov
sbb
mov
jne
addr16
dec
fmull
xor
pop
in
scas
cld
ds
leave
adcl
js
inc
xor
test
rcl
pop
shll
pop
rolb
mov
adc
and
sbb
dec
hlt
inc
das
leave
mov
mov
scas
adc
jns
push
mov
jbe
pop
mov
and
mov
mov
xchg
sbb
xor
xor
sbb
ljmp
adc
cld
push
or
daa
nop
sahf
vaddsubps
in
orb
data16
mov
dec
add
sbb
movsb
mov
xchg
xor
mov
inc
and
lret
jecxz
stos
adc
sbb
pop
inc
xlat
mov
mov
mov
mov
jge
int3
and
and
popa
cli
sti
int
push
cmp
pop
fst
mov
fwait
outsl
mov
xchg
lahf
pop
push
icebp
fnstsw
dec
shlb
pop
mov
aad
jbe
sbb
gs
xor
mov
xor
decl
insl
pop
and
aad
mov
or
xor
push
lods
repnz
or
push
jle
jg
stos
mov
dec
cmp
lahf
inc
inc
push
or
aaa
test
and
xchg
cmpsb
xchg
jl
mov
inc
jl
jb
mov
cs
inc
imul
pop
sub
or
and
repnz
inc
or
mov
leave
jmp
sbb
pop
adc
mov
sbb
sbb
test
sbb
mov
inc
test
mov
adc
inc
jbe
jnp
test
loop
mov
inc
movsl
loope
cmp
jns
mov
fidivl
hlt
sysret
dec
int3
push
mov
test
idivl
fs
hlt
cmc
mov
sahf
jbe
jo
push
push
cmp
add
inc
inc
lods
adc
xor
lea
mov
jnp
xor
adc
movsb
inc
pop
rorb
mov
stos
popa
inc
nop
lahf
roll
ret
cltd
or
fsts
jb
jbe
mov
gs
xor
push
cmpsl
hlt
int
push
aad
fmul
mov
rol
in
mov
clc
mov
int3
pop
ss
pop
in
sbb
add
mov
stos
xchg
and
mov
je
xchg
push
push
sbb
sub
fmull
loop
ret
aaa
xlat
pop
cmp
int
ljmp
les
in
punpckhbw
pop
out
or
popl
in
and
test
and
test
pop
roll
fnstcw
scas
call
out
cli
sbb
dec
mov
stc
xchg
push
inc
adc
sahf
int3
and
sub
mov
push
mov
int3
xchg
lods
sahf
push
jne
hlt
xor
data16
aas
cs
call
dec
inc
cwtl
jns
lds
fs
dec
xor
add
xchg
inc
xchg
pop
push
jmp
push
insb
add
pop
cmp
jne
push
in
in
out
dec
in
mov
int
mov
mov
dec
hlt
sub
stos
roll
jmp
xchg
fimull
xor
jae
int
cwtl
int
xor
mov
int
cmpsb
fstl
and
leave
cs
cmpsl
push
out
adc
sub
es
mov
push
dec
das
or
lret
clc
ret
mov
pop
pop
xor
negb
scas
add
jecxz
andb
icebp
and
jo
mov
dec
mov
icebp
rorl
dec
inc
mov
jge
xor
cltd
push
or
xchg
mulb
adc
mov
add
cwtl
jg
xor
and
int
insl
sbb
insl
xchg
adcb
into
mov
lock
scas
inc
mov
inc
push
leave
inc
mov
sahf
fsqrt
pop
adc
rcll
rorb
popa
push
inc
leave
out
mov
ja
and
cmc
mov
mov
and
mov
fidivl
jo
inc
dec
sbb
ss
dec
popf
loope
pushf
insb
aas
add
or
imul
lods
jae
out
flds
pop
dec
inc
icebp
add
jmp
movsb
sbb
aam
roll
mov
cmpsb
arpl
test
sub
xchg
or
xor
test
sbb
ret
lds
mov
cmc
dec
test
add
push
outsb
stos
fcmovnbe
outsl
popf
aaa
bound
les
lods
pop
mov
cmp
ljmp
lea
inc
loopne
or
mov
push
mov
lock
aad
dec
jo
dec
out
mov
cmp
test
orl
sub
push
aam
int3
rclb
xchg
pop
lds
sub
cmp
jg
or
or
dec
xchg
xor
test
shll
mov
ja
scas
sbb
addr16
lds
mov
aad
nop
pushf
xor
shlb
jnp
insb
inc
or
jbe
ret
stos
out
xchg
sub
jb
and
fs
rolb
cmpsb
xchg
ds
push
aaa
leave
enter
inc
dec
dec
int3
or
in
dec
mov
push
aam
dec
fmull
jne,pt
test
mov
cmc
test
sbb
inc
xchg
push
jecxz
push
sbb
pop
lods
jle
movsb
and
push
sbb
cmp
adc
leave
adc
push
xchg
add
pop
das
sub
jne
out
mov
lods
movsl
mov
cmp
orb
and
push
and
pop
dec
lods
and
xor
mov
push
xor
adc
mov
enter
push
sub
mov
imul
mov
or
movsl
stc
popa
insb
ds
or
sub
test
dec
dec
gs
cltd
xor
cmp
mov
insb
stos
xchg
leave
aaa
pop
jo
cmc
push
jecxz
cmpsb
mov
iret
sti
xor
stos
les
sub
int
cld
sub
es
jmp
mov
aaa
notb
orl
in
and
mov
sbb
sub
mov
imul
adc
adc
sahf
fs
jnp
push
pop
and
inc
push
scas
cmp
and
push
icebp
xchg
jl
rdpmc
xchg
call
ret
popa
or
push
mov
mov
cmp
movsb
lcall
mov
je
fsubp
push
cs
jns
mov
insl
push
xchg
popa
mov
gs
sti
pop
jae
stos
enter
dec
push
or
clc
add
daa
pop
mov
mov
pop
cmp
cmp
int
sarl
mov
cs
idivl
mov
mov
addr16
or
pop
jb
pop
js
mov
pop
sub
mov
inc
jl
add
fwait
inc
mov
add
or
lods
inc
in
leave
or
call
mov
adc
fldl
cmp
cmp
inc
test
xabort
cltd
hlt
into
clc
testb
inc
jmp
into
mov
adc
inc
outsb
popa
or
outsb
bound
cmp
ret
loope
pop
jae
or
cmp
adc
xchg
arpl
or
mov
dec
pop
xor
popf
inc
mov
dec
pop
pusha
stos
add
scas
repnz
jns
inc
push
out
xor
jg
xor
jecxz
sub
int3
sbb
pushf
add
fadds
cbtw
shll
jle
aam
jae
and
loope
adc
cld
or
pop
jg
hlt
xor
repz
push
in
mov
jge
pop
inc
in
cmp
xchg
xchg
icebp
mov
push
ret
mov
pop
jmp
lods
mov
imull
addr16
push
xor
imul
inc
in
mov
pop
dec
xchg
int
push
jno
pop
imul
and
lret
xor
cmp
es
mov
out
dec
mov
lret
jbe
inc
xchg
insl
pop
lahf
mov
dec
sti
jl
mov
lret
scas
es
push
or
cbtw
into
push
cltd
cmp
cmp
dec
rorl
add
adc
jl
add
sahf
scas
jb
dec
js
mov
cmc
xchg
lret
rorb
decb
inc
jmp
lea
orl
fcmovbe
notl
push
xlat
mov
pop
mov
ficompl
mov
dec
ljmp
sub
arpl
int3
mov
cli
adcb
es
jno
int
repnz
pop
pusha
cmp
js
jmp
xor
fmull
dec
or
std
xor
int
inc
in
dec
dec
xchg
xor
cmp
push
jb
test
mov
push
mov
xchg
add
fwait
pusha
add
rol
jecxz
xor
push
push
call
insl
loope
ljmp
in
push
es
push
sbb
call
mov
movsb
push
lock
lods
pop
xor
insb
sbb
push
or
cmp
mov
xor
sub
insl
cmc
push
out
cmp
mov
in
fwait
psllq
insl
jnp
jns
mov
dec
dec
push
mul
test
call
inc
mov
imul
imul
or
pushf
xchg
scas
cmp
test
xor
cli
daa
les
push
pusha
cmp
push
imul
je
leave
pusha
dec
shl
cld
test
rep
sub
mov
sub
dec
clc
mov
xchg
int
movsb
fwait
cmp
ds
in
sbb
aad
dec
or
shrb
or
and
aam
test
inc
dec
leave
jmp
mov
mov
cwtl
adcl
loope
lods
mov
imul
cld
sarl
sbb
push
fiadds
mov
mov
adc
into
mov
fstl
push
enter
push
int3
add
cli
or
xchg
mov
jne
stos
dec
daa
xorb
mov
shrb
iret
jle
sub
mov
arpl
mov
and
enter
mov
cmp
push
xor
push
movsl
scas
je
scas
mov
dec
cld
fldt
xchg
mov
out
pop
loop
push
sub
jg
add
push
lods
ret
mov
cmpsb
arpl
or
fisttps
insb
and
jne
out
imul
or
jl
cld
and
repnz
add
sub
call
pop
roll
mov
out
and
add
shrb
and
insl
cli
enter
pop
mov
iret
lret
dec
test
and
and
mov
xchg
push
mov
pop
shll
xchg
inc
in
adc
popa
sub
sbb
dec
xchg
push
adc
lret
sub
sbb
int3
pop
or
push
and
xchg
jl
loop
mov
sub
push
ss
xor
hlt
dec
lods
mov
sbb
dec
inc
inc
outsl
cltd
inc
ljmp
pop
pop
pop
mov
jnp
sahf
cmp
mov
das
adc
xor
cmc
and
jo
add
icebp
jecxz
movsb
in
mov
dec
xchg
push
sbb
sub
or
cmp
push
insb
and
pop
lock
cmpsl
stos
fs
cli
sub
mov
mov
xlat
xlat
xor
and
lods
out
dec
movsb
pop
cli
rolb
lods
cwtl
jno
or
inc
push
sub
mov
mov
cwtl
int
xchg
data16
pop
add
sbb
add
jnp
cmp
ret
lea
push
push
add
xor
ljmp
repz
add
or
outsl
shrb
leave
insl
shll
ficompl
in
in
inc
fiaddl
push
and
leave
sub
adc
mov
jb
and
sbb
daa
jmp
jmp
stc
hlt
jecxz
ror
sbb
fdivs
jne
dec
mov
rcrb
adc
out
daa
pop
xchg
js
xor
out
in
xchg
pop
ss
mov
dec
mov
loope
xchg
sub
imul
sti
stc
adc
les
into
mov
cmp
mov
dec
nop
lods
or
sbb
ficompl
fld
scas
decb
add
mov
mov
in
xchg
adc
popa
mov
jmp
and
mov
imul
inc
lcall
xor
jae
pop
outsb
cmc
nop
sbb
inc
xchg
cmp
movsl
and
and
adc
pop
pop
pop
mov
add
test
ds
mov
call
adc
incl
out
ja
iret
mov
jnp
fnstsw
fwait
and
push
pusha
addr16
and
repz
hlt
cmc
cmp
mov
enter
lods
inc
imul
add
jnp
daa
mov
push
pushf
aas
mov
test
xchg
add
fisttpll
push
xchg
je
pop
mov
fistps
mov
dec
adc
push
jle
lcall
or
push
sub
sti
adc
adc
cwtl
sarl
aaa
ja
incl
sbb
fiadds
js
and
ds
sub
push
cmpsl
adc
es
jg
dec
dec
mov
fcmovu
popf
or
addr16
cli
or
mov
push
popf
xchg
mov
stos
adc
cld
call
cmp
js
fcmovbe
addb
out
aad
popa
xchg
cmp
and
xor
push
data16
arpl
popf
out
cmp
ds
cmpsl
outsb
jp
in
sbbb
jp
mov
jle
rclw
xchg
fisttps
ds
sti
add
push
sub
ret
adc
mov
fistl
movsb
mov
in
pop
cmp
push
fsubl
lds
addr16
mov
push
int
in
jmp
incb
mov
and
xor
fcmovbe
movsb
loope
mov
or
cmp
xlat
sub
mov
dec
int3
dec
xchg
or
xchg
inc
imul
mov
jge
xchg
push
ret
push
hlt
loop
outsb
daa
lods
mov
mov
mov
cmc
negl
int3
out
subb
sahf
and
mov
sbb
shll
xchg
sub
std
in
add
mov
das
cltd
jg
gs
xor
stos
repnz
ds
push
xor
je
push
dec
das
cld
inc
push
xchg
icebp
push
dec
xchg
pushf
sub
sub
icebp
les
sub
cmp
cmp
leave
jnp
clc
and
lahf
cmpsl
xchg
push
mov
div
jmp
jle
cmp
push
aaa
add
jg
stos
sub
sti
dec
repz
pop
lcall
xor
push
sub
add
aam
cs
imul
insb
outsl
fnstsw
mov
sbb
outsb
dec
xor
sbb
push
mov
stos
sub
sub
inc
dec
cmp
xor
insl
fldl
enter
or
repnz
push
pop
pop
faddp
or
sub
adc
ret
xchg
fildl
push
in
sbb
in
and
dec
and
nop
or
lret
jl
inc
stos
scas
jb
lds
pop
jbe
cmp
mov
jo
lds
mov
xchg
loop
or
sbb
rcrb
and
push
data16
outsl
jl
cld
xchg
or
cmp
mov
mov
mov
dec
outsl
pop
mov
mov
test
adc
xchg
jp
add
sub
mov
sbb
test
mov
popa
jge
insl
adc
push
addr16
andl
shll
inc
out
pusha
mov
mov
sbb
xlat
popa
add
je
repnz
lret
lret
aam
cmpsl
lret
into
imul
gs
ja
cmp
jg
dec
js
stos
adc
dec
sub
into
pop
pop
andb
xchg
je
jg
mov
jns
jns
mov
call
les
dec
dec
push
popa
repnz
mov
pop
sbb
xchg
inc
push
inc
out
xorps
sbb
mov
cmp
into
jecxz
ror
dec
xchg
int
loopne
add
cmp
mov
sbbl
and
jmp
jnp
xlat
fbstp
imul
test
mov
fadd
inc
xor
inc
jle
test
stos
push
xchg
sub
adc
mov
cmp
jl
fwait
xchg
mov
push
mov
lret
scas
inc
inc
sub
bound
jl
push
in
js
pop
push
addr16
pushf
mov
repnz
mov
or
push
pop
int
insb
dec
inc
pop
mov
arpl
sahf
mov
sbb
mov
movsl
icebp
lods
outsl
cs
rcrl
ss
mov
fwait
in
mov
add
fsts
adc
dec
ror
lock
es
xorl
loop
adc
aad
push
cli
mov
mov
push
lods
les
enter
lea
bound
jns
jle
mov
sbb
cmpsb
and
xchg
sti
aas
fsubp
fstps
je
dec
insb
xor
inc
jno
movsl
jge
adc
loop
push
cmp
push
test
pop
xchg
hlt
cs
fbld
inc
mov
in
jo
jecxz
inc
and
or
clc
scas
xchg
jbe
or
add
xchg
dec
or
bound
int
pop
adc
mov
fwait
pop
sbb
push
mov
loopne
test
clc
xor
jae
out
in
xor
and
xchg
sahf
and
dec
cmp
sub
sbb
jp
pop
or
pop
push
or
add
outsb
push
addr16
test
sbb
inc
or
cs
jbe
pop
aam
and
shlb
enter
push
sub
or
mov
into
push
repz
xor
or
push
stc
mov
shrb
roll
js
or
push
sti
pop
mov
outsl
pop
jecxz
inc
cmpsl
mov
popf
push
mov
and
cmpsl
xchg
sarl
push
sub
pop
mov
loop
cmpsb
push
sub
into
mov
jecxz
push
sbbb
cmpsl
and
mov
bound
jmp
je
fs
fisubs
int3
dec
jge
mov
addr16
xchg
clc
arpl
cwtl
stos
xchg
je
daa
mov
pop
daa
sbb
xor
or
xchg
or
jne
xor
jmp
lahf
or
xchg
leave
mov
cmc
stc
pop
xor
jp
pop
mov
sbb
or
jb
mov
fdivrl
mov
xor
fadds
ss
mov
cwtl
sbb
inc
hlt
mov
sbb
shr
adc
std
pop
lcall
cmp
negl
sahf
stos
pop
testb
mov
add
xchg
test
adcl
pop
cmp
xor
js
std
cmp
and
jmp
inc
fdivrs
iret
adc
pop
popl
push
pop
inc
nop
fidivs
leave
pop
sti
dec
jno
cmc
int3
mov
leave
in
push
mov
mov
repnz
lcall
jns
mov
test
jmp
pop
jne
cmp
stos
aaa
insl
cmpl
xor
push
inc
push
cmp
aad
adc
mov
mov
add
pop
add
cmp
sbb
mov
fcomi
cwtl
out
mov
pushf
mov
insb
mov
or
inc
push
lea
jl
pushf
and
xor
fldt
das
sti
jne
gs
add
sub
loope
cltd
cmp
popa
xchg
jmp
les
lea
int
stos
xor
fdivl
pop
outsb
sbb
dec
sub
add
popa
and
sub
loopne
std
mov
stos
xor
jns
mov
sub
bswap
push
aaa
test
mov
dec
push
loope
cmp
or
mov
xchg
xchg
jne
imul
test
in
fisttps
iret
test
xor
sti
xchg
lods
lret
ds
bound
gs
or
mov
dec
mov
icebp
cmp
inc
bound
jmp
xor
or
aam
shlb
jnp
movd
pushf
inc
sbb
bound
sbb
mov
fldl
js
xor
pop
testl
ret
fstpl
fisubrl
inc
or
out
in
scas
aas
and
out
rcrb
mov
sub
out
pop
imulb
mov
xor
call
sbb
cmp
mov
das
push
xor
outsb
mov
xor
sub
das
mov
adc
cltd
pop
subl
mov
jge
xchg
jge
xchg
int3
dec
cmp
push
jbe
ja
scas
rol
aam
mov
frstor
push
loope
jge
dec
jecxz
mov
std
pop
mov
scas
mov
fisttpll
cld
leave
stc
gs
loope
outsl
in
push
mov
cmpsl
cmpsb
and
lods
mov
sti
test
cmp
hlt
sbb
sbb
cmp
lahf
fnsave
or
cld
mov
sbb
lcall
push
in
rolb
fst
mov
pop
and
xchg
or
pop
mov
loop
stc
xchg
dec
stos
fstpl
loope
sub
enter
cli
mov
mov
mov
cmc
fs
lds
mov
add
and
lcall
js
cmpsb
sahf
cmc
out
mulps
lods
outsl
lock
loopne
push
mov
divl
gs
out
add
iret
sub
mov
ljmp
jmp
out
rorl
sub
and
mov
popf
call
inc
push
push
repz
pop
inc
sbb
in
test
arpl
adcl
mov
dec
loopne
xchg
mov
xor
pop
faddl
mov
pop
xchg
push
movsb
lock
bound
jnp
xchg
insl
xchg
sub
mov
and
mov
xor
ds
jecxz
mov
or
icebp
pop
out
or
cmpsb
jne
movsl
mov
repz
push
push
movsb
jle
jne
push
test
scas
movsl
bound
add
pop
dec
imulb
ret
ljmp
mov
aad
xchg
pushf
test
or
out
dec
shrl
adc
or
out
mov
imul
mul
adc
pushf
shlb
add
cmp
jle
nop
mov
xchg
push
add
dec
and
inc
cld
xor
xchg
mov
rorl
mov
das
gs
add
jecxz
mov
jae
jno
stos
mov
or
push
sbb
cmp
cwtl
test
and
push
or
xchg
or
out
push
pop
cmpsl
test
decl
mov
movsb
aas
out
push
and
popf
lret
in
dec
xchg
pop
lcall
xor
lret
jb
push
sub
jg
rclb
jmp
push
repnz
lea
mov
js
lods
rcl
mov
sub
mov
fwait
stc
push
mov
push
mov
xor
jge
push
xchg
xchg
ss
pop
mov
sbb
repz
xchg
sbb
dec
or
cmc
cmp
rcrb
inc
outsl
and
ljmp
fdivrl
pop
rorb
cmpsl
outsl
inc
loop,pt
imull
pop
sub
mov
sbb
arpl
test
cmpsl
inc
dec
inc
shl
push
cmp
mov
push
dec
iret
add
jle
ret
out
lock
inc
test
or
dec
cltd
sarb
mov
testl
out
inc
jle
or
adc
imul
scas
ljmp
clc
cmpsl
mov
xchg
pop
gs
mov
fimull
dec
push
push
aam
repz
pop
ja
dec
fistpll
push
loopne
stc
and
fldt
dec
xor
jle
fdivrp
jg
cli
sbb
adc
js
xor
dec
xchg
adc
dec
pop
cmp
cmp
mov
adc
mov
push
int
insb
imul
fwait
movsl
popa
push
xchg
call
je
push
sbb
jg
push
cltd
jae
cld
adc
jne
scas
inc
pop
xor
daa
std
sbb
cs
sub
sbb
or
and
pop
sub
out
cmp
fs
arpl
cmp
loopne
clc
adc
xchg
out
testb
fpatan
mov
mov
mov
fistpll
cmp
test
fldenv
rcl
xlat
xor
adc
fs
pop
cld
sbb
adc
mov
push
insb
pop
lods
mov
in
pushf
aad
cmp
cmp
lahf
fbstp
loopne
and
xchg
cmc
and
mov
scas
and
shll
or
imull
adc
add
mov
pushf
xchg
jb
imul
mov
pop
mov
negb
fcomps
cmp
leave
push
sbb
dec
jne
dec
push
mov
insb
sbb
les
jbe
ss
repnz
dec
lahf
push
inc
cmp
cmp
lea
pushf
out
leave
cmp
xor
cmp
loope
ja
ljmp
xor
cmpsb
push
loope
enter
outsb
fucom
punpckhwd
mov
cmp
out
outsb
je
cld
inc
dec
pop
dec
mov
lret
dec
inc
mov
add
and
cli
test
outsl
cmpsb
aam
lods
mov
std
shll
inc
repz
mov
xchg
push
inc
imul
lret
js
jb
dec
jp
stos
lret
push
sbb
filds
jae
push
pop
ja
pop
idivb
pop
pop
or
add
or
je
or
shlb
int3
pop
lds
mov
push
data16
pop
fsubr
adc
inc
sbb
fmuls
cmpsl
scas
lods
push
out
ss
jb
inc
mov
movsb
pop
add
dec
in
mov
add
mov
das
fcoms
pop
push
inc
lret
fbstp
rcr
pop
xchg
inc
decb
ljmp
int3
adc
dec
inc
mov
adc
out
jns
movsb
sti
das
std
cltd
outsl
addr16
outsl
fwait
mov
dec
data16
int
sub
sub
pop
jo
push
pop
fists
add
mov
arpl
loopne
into
mov
mov
je
adc
add
add
jo
cli
xor
cmp
fldcw
jmp
push
mov
test
or
ss
out
repnz
mov
not
mov
mov
push
sbb
into
ds
imul
jmp
push
outsl
insl
outsl
and
push
outsb
mov
cld
mov
mov
xor
pop
popf
into
or
adc
movsl
inc
pop
outsb
or
stos
rcrl
mov
jp
jne
dec
sub
push
xchg
inc
movsl
nop
push
mov
sbb
iret
push
ljmp
ror
in
popf
jl
sub
cmp
out
ret
cmpb
aam
jbe
out
push
mov
jg
pop
sub
sbb
sbbl
leave
in
xchg
mov
int3
dec
sub
stc
popa
push
jno
xor
fldt
inc
fiaddl
sbb
cmp
fs
lea
cmc
outsb
xchg
add
xor
ret
inc
stos
std
xchg
subb
sbb
aam
jle
push
inc
cpuid
jmp
aam
pop
sub
fmulp
sbb
jae
lea
xchg
lods
mov
repnz
hlt
lret
mov
mov
jb
pop
cmp
jmp
mov
insb
rcrl
xchg
mov
imul
cli
out
ret
aad
jmp
enter
call
or
mov
or
jno
sti
test
lahf
jmp
push
cs
imul
xlat
push
lock
mov
addl
dec
pop
repnz
fistpl
lahf
fwait
push
cmc
insl
sub
ficoms
icebp
pushl
or
lods
sbb
cltd
orb
and
cmp
out
pop
movsb
aam
or
add
push
pop
repz
push
cwtl
mov
add
fisubrl
cmp
lods
cmp
les
push
mov
enter
sbb
cli
xor
movsl
pop
into
out
arpl
jl
mov
mov
pushf
mov
mov
cli
ret
mov
and
mov
call
xor
mov
mov
mov
pop
sbb
insb
xchg
push
sub
lea
shrb
push
cmp
call
repz
mov
ret
std
inc
lidtl
out
movsb
pop
jp
lods
stos
inc
mov
ret
cmpsb
in
jle
icebp
and
rcll
sahf
sub
add
push
shll
mov
repnz
test
dec
lds
dec
and
enter
dec
xchg
lds
aam
out
push
mov
sbb
mov
push
xchg
scas
or
mov
pop
xor
stc
xchg
in
sub
aam
mov
insl
push
repnz
push
pop
inc
repz
mov
dec
inc
jns
out
out
outsl
clc
out
or
mov
jmp
cmp
lods
jg
fcmovu
loopne
dec
push
adc
shll
mov
icebp
mov
movsb
js
sub
jg
lahf
or
xchg
sub
pop
inc
inc
mov
add
and
das
dec
mov
imulb
adc
pop
cmp
popa
or
scas
sbb
xchg
lret
adc
imul
inc
mov
pop
inc
frstor
xchg
push
mov
into
add
jae
scas
add
leave
fiaddl
dec
popf
adc
cmp
mov
jb
mov
xor
data16
or
sbb
test
dec
movsl
jb
daa
inc
xchg
mov
sbb
jl
es
imul
sbb
add
jge
stos
push
inc
mov
mov
rorb
xor
sub
push
add
ret
sbbb
mov
push
outsb
jl
sti
cmp
cmp
arpl
push
jecxz
jg
push
or
lock
neg
lahf
outsb
dec
add
mov
in
hlt
rcrb
dec
xor
aam
inc
mov
inc
in
ja
jmp
in
int
arpl
xlat
sbb
xchg
stc
inc
ror
cwtl
sti
mov
andb
les
in
popa
push
pop
pop
ja
and
out
or
jae
enter
fistpll
cmp
cmpsb
fimuls
xchg
sbb
inc
aas
mov
out
adc
and
das
mov
inc
cmp
out
sbb
out
js
lret
outsb
mov
inc
sub
or
lods
shr
adc
mov
lret
mov
shl
test
or
xchg
arpl
jbe
inc
add
insl
and
sbb
jl
int3
xor
xchg
rcrb
jp
mov
sbb
xchg
int
mov
aaa
inc
pop
orb
pop
xor
push
push
jg
insb
push
push
stc
jo
pop
jg
push
rorl
cmp
inc
pmuludq
xor
push
adc
leave
mov
jl
data16
mov
roll
mov
mov
out
pop
fdivp
xchg
pop
in
out
xor
notb
insb
and
xchg
adc
adc
ret
out
loope
cwtl
xlat
sub
dec
leave
mov
clc
jnp
fwait
adc
ret
mov
cs
ret
and
sub
cmp
std
stos
and
inc
push
push
out
repz
js
sub
imull
call
lcall
mov
pop
ja
push
insb
out
orb
aaa
cmpsl
ret
jecxz
pop
jp
sub
dec
movsl
aaa
roll
fidivrl
jg
aad
pop
mov
mov
out
adc
xor
xchg
inc
dec
in
enter
insb
jb
inc
dec
loope
loope
gs
push
cmp
ja
cmp
jnp
aad
and
mov
insb
mov
fmull
sbb
mov
dec
sub
mov
adc
movsl
push
aas
jne
mov
test
test
ss
notl
xor
dec
scas
cmp
in
mov
mov
fsubrl
pushf
or
xor
or
inc
movsb
push
loopne
scas
mov
arpl
pop
loopne
movsb
mov
mov
fldt
jl
mov
xor
icebp
ret
dec
out
lret
push
aam
mov
fadd
std
std
fidivs
push
push
add
pop
call
cld
mov
dec
mull
mov
pusha
sbb
aaa
jmp
jecxz
addr16
pop
sub
fisubs
mov
add
cs
or
inc
push
lock
push
inc
jb
sbb
pop
inc
cmp
hlt
pop
add
sbb
outsb
mov
pop
adc
or
shlb
mov
push
out
jbe
xchg
imul
in
or
ud1
cltd
loope
dec
gs
lods
dec
lock
stc
mov
xchg
out
add
cmpb
jbe
sub
push
ss
add
loop
push
mov
fildll
cmp
nop
loopne
in
mov
cli
mov
scas
sti
or
mov
and
pop
loope
sbb
mov
negb
jp
insl
dec
fisttpll
insb
push
addl
pop
addb
jae
mov
jge
push
aam
cmp
inc
cltd
in
cmpsb
push
in
sti
arpl
int
icebp
fwait
cs
imul
cmp
ret
out
jge
or
aaa
clc
stos
idivl
push
sub
scas
xor
fldenv
fnstenv
mov
mov
jne
out
sub
push
push
or
jbe
sub
stos
out
cli
test
outsl
mov
es
jle
in
aaa
jne
push
or
outsl
xor
mov
shlb
xchg
xchg
test
das
sti
das
aad
pop
pop
data16
test
mov
mov
lcall
jg
stc
push
out
push
sub
jne
loope
aad
push
adc
xlat
bound
push
bound
mov
repnz
push
jp
loope
xchg
mov
lret
jae
adcb
movlps
cmp
je
jne
pop
imul
and
dec
push
xor
sbb
jle
push
andb
sahf
mov
outsl
lret
jo
xchg
int
fcompl
je
into
lds
outsl
mov
insb
fstpt
aad
aaa
cmp
mov
sbb
push
outsb
scas
cwtl
lret
divl
inc
nop
fstl
xchg
cs
fwait
rcll
mov
xor
cltd
daa
mov
in
push
int
sbb
cmp
bound
mov
insl
rolb
pop
mov
jle
xchg
sbb
xchg
mov
add
and
mov
mov
xchg
movb
out
aaa
xor
jg
inc
aaa
adc
sarb
cmp
rorl
adc
pop
test
jo
mov
out
pop
mov
popa
push
mov
pop
outsb
fisttpll
or
and
mov
lods
adc
cli
adc
es
and
sub
in
jbe
lods
sbb
mov
add
inc
imul
mov
fcmovb
adc
lock
in
aad
inc
std
jl
pop
popa
adc
std
jecxz
or
dec
bswap
subl
inc
loopnew
scas
push
xor
jecxz
xchg
cwtl
fisubrl
jne
icebp
or
inc
mov
dec
bndstx
push
xor
arpl
imul
sbb
xchg
mov
mov
push
add
adc
adc
mov
push
push
es
add
ret
sti
pop
sbb
lahf
pop
cmpsb
sahf
shrl
sub
loop
loopne
ret
stc
and
push
sbb
xchg
shrb
lea
and
cmp
lret
pop
ret
bound
mov
inc
jge
cmpsb
cwtl
mov
jnp
mov
ret
decl
mov
mov
cwtl
push
push
or
and
stos
mov
aam
or
dec
das
push
lds
mov
pop
subl
xchg
mov
lret
sbb
xchg
clc
test
jp
insb
xchg
lds
cmp
sti
loope
mov
xor
mov
stos
jns
lods
out
notl
fs
push
nop
int
add
out
outsl
or
arpl
xor
cmpsl
xchg
bound
mov
rclb
sub
jg
xor
rcll
jns
pop
ror
jle
dec
jo
dec
lahf
mov
stos
shll
sbb
test
negb
jno
cwtl
cs
lock
pop
push
ss
sub
jne
sbb
scas
pop
pop
lret
cltd
sbb
dec
test
std
push
mov
mov
cmp
sub
fcoms
push
push
inc
xchg
inc
push
and
jnp
test
movsb
jle
or
ss
pop
negb
or
xchg
pop
repz
bound
not
and
jg
bswap
add
adc
out
mov
or
fwait
addr16
adc
push
rcll
ret
mov
loope
jmp
push
ds
dec
clc
iret
daa
pop
mov
lds
xor
dec
adc
sbb
std
out
repz
ficoml
jmp
addr16
lods
in
inc
jp
mov
cltd
jp
shll
dec
loop
repnz
fsubs
pushw
adc
mov
mov
ds
add
lret
cmpsl
repz
sub
xor
cmpsl
xchg
fwait
arpl
jno
stos
adc
and
xor
sbb
pushf
or
js
call
xor
pop
add
push
sahf
gs
out
xchg
mov
inc
push
into
mov
xchg
xor
and
out
repnz
jb
rclb
out
mov
cmp
nop
loopne
mov
cmp
mov
inc
orl
fistps
sti
lods
lret
call
lea
es
xchg
aam
std
pop
xchg
cmp
adc
scas
cli
in
clc
adc
mov
push
xorl
xchg
xchg
xor
mov
je
outsl
fwait
addb
es
ret
cmc
cli
xor
mov
inc
rol
push
mov
out
add
push
jns
sub
fisubrl
adc
lret
aam
sub
push
push
and
fisttpll
fcmovu
notl
mov
mov
inc
sub
xchg
and
push
mov
cltd
cmp
lret
dec
cmp
js
and
inc
fstps
daa
adc
mov
pop
bound
jge
pop
add
jmp
inc
out
or
out
mov
jge
mov
cmpsl
cmp
fcomp
fmull
push
inc
sub
dec
imul
mov
inc
insb
jo
jb
xchg
movsl
incb
fists
int3
pusha
popf
inc
stos
ret
mov
inc
mov
mov
mov
xchg
fldcw
sbb
fwait
je
pop
pop
cmovnp
out
xchg
aad
lea
push
adc
nop
inc
cmp
fisttpl
jle
push
loop
ja
call
loopne
xchg
sub
or
int3
shll
cmp
jmp
nop
cs
fwait
and
loope
cld
std
or
push
sarb
dec
push
ret
or
test
stos
lds
add
and
or
aas
leave
int
arpl
mov
push
divb
pop
popf
std
faddl
lea
push
cltd
test
cwtl
sub
repz
in
stos
jge
pop
dec
sub
jmp
mov
int
xchg
mov
gs
mov
and
adc
adc
mov
daa
inc
lock
shll
and
and
enter
lds
das
popa
lahf
add
pop
dec
stc
out
lret
adc
cld
push
pop
int
push
mov
and
clc
inc
xchg
inc
add
cltd
mov
cmpsl
repnz
and
xorl
scas
movsl
out
fidivrs
es
add
jge
std
fdivl
and
mov
and
xchg
xchg
xchg
inc
sub
shrb
or
sahf
xlat
test
xor
cmp
mov
cmpl
das
cmp
xor
jnp
dec
outsb
int
out
inc
or
test
mov
inc
insb
inc
jg
jnp
repnz
inc
into
dec
pop
pop
push
add
xchg
sbbb
mov
call
cmp
out
mov
mov
push
loop
inc
mov
outsb
pop
insb
cwtl
sub
fs
push
lods
cmpsb
push
pushf
movb
cmp
testb
mov
cmp
sti
iret
mov
xchg
or
push
or
out
cld
out
sbb
sbb
pop
jl
lods
sub
inc
pop
andb
popf
in
fistpll
fmul
fcomp
cmp
or
lea
xchg
ficompl
adc
pop
pushf
les
mov
nop
hlt
dec
fldl
repz
add
xlat
inc
test
mov
imul
ss
add
daa
and
and
and
lret
lea
es
xor
in
adcl
mov
jle
xor
movsb
stos
sbb
and
inc
inc
cmp
ljmp
cmp
mov
test
or
dec
rclb
and
jno
jns
inc
cmp
mov
test
mov
enter
daa
add
add
out
pop
loope
outsl
sbb
fsub
inc
xchg
jecxz
inc
andl
inc
jo
out
sub
fildll
out
dec
sub
push
xchg
or
add
gs
inc
iret
sub
cli
mov
scas
and
cltd
repnz
out
xorb
ds
adc
mov
out
movsl
mov
mov
or
push
xchg
cmp
fwait
and
fs
jns
popf
js
dec
and
into
xchg
jns
in
xchg
das
pop
shrl
outsl
or
inc
push
in
dec
xchg
mov
sub
icebp
mov
pop
xchg
fcoml
sar
cmp
outsb
loope
pushf
cmp
aas
stos
pop
mov
insb
call
jne
sub
and
dec
and
mov
dec
pop
and
ss
mov
dec
xlat
fwait
pop
addr16
jecxz
clc
sbb
push
push
fwait
sbb
sub
sub
mov
lock
clc
mov
adc
frstor
rclb
dec
cmp
cmpsl
sti
add
add
inc
rorb
sbb
or
sub
xchg
add
ret
sbb
push
loope
pop
repz
mov
add
push
adc
sub
push
xchg
dec
xchg
pop
xchg
out
jmp
jb
xor
cltd
aam
jno
jno
mov
jle
das
lods
pop
loopne
and
push
mov
out
sbb
mov
scas
sub
dec
push
inc
lods
dec
dec
mov
push
mov
lahf
adc
inc
aam
into
in
stc
lret
push
mov
lcall
mov
xorps
cltd
test
daa
mov
adc
xor
mov
aas
push
and
mov
jbe
test
out
imul
inc
fdivrp
sub
xchg
cmp
and
jl
adc
jmp
and
mov
ret
dec
in
cmp
xor
add
fsubr
je
jae
pop
fdivrl
xor
arpl
fcoml
arpl
insb
cmpsl
and
lcall
test
repz
xor
out
pusha
lahf
push
mov
cs
inc
out
lds
add
xchg
mov
mov
outsl
or
adc
jb
or
mov
sub
inc
gs
pop
clc
mov
mov
lock
sub
les
lea
cmp
popf
push
pop
jle
out
jne
push
xchg
dec
sbb
mov
xchg
repz
sbb
lret
cmp
mov
pop
jmp
dec
pop
pop
and
sahf
aas
cmp
xor
iret
js
inc
cltd
ljmp
lcall
mov
popf
dec
ret
and
sub
mov
mov
sub
mov
inc
cmp
jl
sub
std
popa
jl
jg
adc
lea
lret
inc
mov
idiv
stos
add
dec
in
xor
into
push
repnz
aad
mov
int
into
or
sbbl
sbb
mov
sub
mov
ljmp
add
inc
pop
adc
inc
out
push
and
push
paddsb
pop
jo
add
sub
sub
pop
mov
stos
push
sbb
popa
loope
and
jb
sub
mov
sahf
popf
daa
mov
adc
sbb
push
mov
mov
lret
scas
jmp
orl
xor
out
bnd
add
pusha
push
adc
xor
fadds
mov
jp
sub
or
xlat
push
shlb
repz
jmp
add
test
popa
xchg
push
popf
lock
and
push
aad
add
loope
jns
push
pop
lret
xchg
jmp
jmp
cmpsb
dec
stc
push
cmp
loop
pop
dec
sub
insl
mov
xchg
sub
andl
xchg
lods
xlat
dec
or
fidivrs
cmp
mov
inc
addr16
iret
movsb
pop
stos
sub
ds
dec
les
dec
and
incl
enter
ficoml
lds
push
add
jo
ret
fcmovnb
subb
shrl
or
in
int3
mov
pop
das
aaa
int
push
mov
inc
push
imul
xor
jl
in
mov
xor
sub
sahf
sub
xchg
pop
ret
xchg
mov
cmp
daa
sti
test
sbb
out
jne
icebp
dec
dec
dec
push
sti
push
push
sarl
push
sbb
sub
icebp
out
aas
ret
sarb
sbb
mov
add
iretw
and
xor
xchg
cltd
xchg
pop
jae
fistpl
out
fsubl
fistpll
add
data16
cmp
xchg
mov
aad
insb
jne
jb
mov
add
inc
xor
cld
rcrb
rorl
adc
gs
pop
imul
dec
mov
repz
cmp
xor
mov
pop
int
aas
mov
mov
mov
inc
stos
ret
cmp
sahf
das
mulb
test
loop
push
dec
lea
mov
loopne
and
pusha
sub
subb
jecxz
dec
dec
or
aaa
xchg
push
inc
fdivr
mov
inc
divb
out
movsl
stos
sub
pusha
jae
inc
add
aas
nop
or
add
int3
xor
iret
mov
add
cli
or
test
cmc
mov
imul
add
push
mov
push
subb
mov
cmp
jbe
xor
mov
push
jnp
pushf
aas
mov
fidivrs
push
pop
jmp
gs
mov
lcall
pop
cmp
leave
jg
hlt
push
cmp
outsl
decb
xor
mov
popa
out
or
cmp
xchg
or
repnz
into
leave
xlat
or
popf
push
test
mov
sub
mov
sbb
ljmp
add
sub
rclb
pop
imull
add
and
jle
inc
ljmp
and
cld
inc
adc
mov
and
stos
pop
test
repnz
jmp
jb
adc
pop
movsl
push
clc
rcl
and
lret
sub
insl
mov
pushf
jbe
jb
stos
subb
mov
bound
cmpsb
test
sbbb
mov
mulb
cmp
add
fstpl
fadds
mov
rcrl
cltd
lahf
mov
test
jmp
push
and
aad
pop
in
add
mov
int
or
out
xor
sahf
sbb
mov
or
dec
ss
inc
add
cmp
sub
mov
fldcw
xchg
call
icebp
xlat
or
sbb
jo
out
ret
xchg
hlt
dec
mov
test
stos
and
lea
sub
dec
mov
jge
repz
lods
jb
and
test
cmp
insl
dec
cltd
stos
add
imul
jne
int
sbb
cmpsl
into
add
dec
test
lahf
mov
mov
mov
daa
add
inc
mov
mov
cmp
in
adc
inc
js
cmp
or
subb
inc
dec
test
test
and
lea
in
repz
add
stos
xor
shll
sar
mov
imul
loop
inc
jecxz
shrl
aaa
sbb
adc
inc
cmpsl
imul
mov
inc
jg
sbb
xor
rclb
cmc
mov
xor
add
sbbl
and
fsubrl
or
and
lahf
pushf
mov
jns
add
lret
test
sub
add
ss
sarb
in
mov
fisttpl
jl
aad
or
pop
aas
push
subb
jmp
imul
dec
xchg
push
jno
jbe
mov
mov
cmc
outsl
push
pop
or
and
push
je
jne
imul
add
mov
in
jns
xor
sub
inc
xor
push
cmp
int3
jl
jg
mov
jno
dec
xor
push
pop
testl
lahf
xchg
shl
test
pop
adc
cwtl
mov
mov
adc
push
popf
pusha
arpl
sbb
shlb
jbe
ss
xchg
pop
aas
jns
push
cli
loop
pushf
lock
shrb
pop
jl
testb
dec
pop
dec
xor
push
and
data16
insl
sbb
out
sbb
push
xorps
jp
movsl
fiadds
mov
js
or
test
popa
dec
insb
fucomi
adc
inc
push
mov
xor
or
xchg
in
hlt
das
aaa
mov
mov
inc
jno
xor
aas
fisubl
cmp
rorb
pop
stc
lret
leave
xor
lds
add
cmp
cli
and
xchg
jmp
int
repnz
sbb
mov
dec
push
lret
sbb
mov
rcll
adc
sub
loopne
mov
mov
add
popa
pop
pop
push
popf
aad
mov
mov
into
pop
repnz
mov
inc
pop
fldenv
lds
xor
pop
jns
push
sbb
cmpsb
das
jecxz
mov
xchg
imul
fsubrs
push
cli
lods
xor
cmp
push
or
push
lret
adc
adc
insb
outsb
sti
jno
in
xor
daa
pop
loop
ja
jns
lods
jb
cmp
and
aas
adc
mov
cld
or
in
dec
mov
je
add
jmp
lock
fnstsw
hlt
jo
xchg
icebp
mov
les
adc
and
dec
outsl
mov
outsl
fcoml
mov
fistpl
mov
mov
in
out
mov
jb
and
in
aad
out
xor
outsl
je
dec
fsubl
xor
iret
xchg
repnz
lcall
or
aam
adcl
aas
mov
cwtl
cmp
xchg
cmpb
and
mov
mov
xor
inc
mov
push
fstpl
jae
adc
add
scas
add
mov
and
outsl
and
cmp
dec
push
in
push
pop
je
adc
mov
mov
leave
push
jg
out
jmp
sub
notl
lahf
loope
test
enter
push
mov
sub
add
inc
mov
out
adc
push
fmuls
ds
leave
sub
out
adc
outsl
mov
aad
push
mov
inc
out
sub
push
rcll
test
or
outsb
inc
les
mov
inc
ss
dec
cltd
mov
cmp
pop
sbbb
ljmp
jo
andl
mov
loope
xchg
insl
popf
push
and
out
jle
gs
and
in
dec
mov
fidivl
inc
xchg
aam
in
cs
mov
ss
sarl
rorb
push
jp
in
jge
mov
dec
fdivr
pop
pop
aam
int3
into
sub
pop
jns
fstpl
xorl
pop
mov
call
add
pop
xchg
add
das
stos
inc
mov
loope
pop
stos
outsb
cmp
adc
push
repz
xor
mov
mov
sub
pop
dec
sti
xchg
mov
jecxz
pop
fldenv
mov
loop
in
fdivs
aam
ja
repnz
xchg
mov
dec
dec
pop
movsb
cwtl
inc
mov
imul
xchg
push
mov
iret
imul
xor
insb
jnp
sbb
mov
cmc
sbb
repnz
lret
out
xor
cltd
ss
mov
dec
lahf
xchg
cmp
cmc
xchg
addr16
lods
pop
sahf
neg
xchg
movsl
adc
pmaddwd
or
popa
jae
iret
mov
add
es
and
ficoms
outsb
in
out
jp
mov
outsl
cmp
movb
aad
fsubs
enter
or
mov
je
dec
jecxz
enter
mov
pusha
adc
dec
and
pusha
xchg
sbbl
inc
sbb
push
in
jge
xor
out
out
adc
pop
pushf
xor
dec
inc
inc
cltd
loope
jne
xchg
push
test
sub
adc
rol
push
xchg
mov
xchg
leave
push
pop
pop
push
sub
addr16
cmp
and
test
push
pop
adc
lea
push
or
sub
ss
clc
fldenv
jbe
cli
ret
leavew
xor
aaa
pop
fldl
push
jmp
sbb
rcl
movsl
cs
outsb
ja
inc
push
add
test
les
pop
dec
nop
dec
out
inc
rcr
inc
rcrb
lds
in
enter
fcomip
test
aad
pop
sbbb
cld
dec
stc
jne
shll
or
dec
fwait
arpl
imul
in
mov
inc
call
mov
inc
loopne
notl
int
jp
adc
xchg
fdivrs
mov
lret
mov
push
and
xchg
jnp
js
and
out
cmp
inc
frstor
push
repnz
cmp
adc
pop
mov
cmp
mov
mov
pop
lds
xchg
fisubs
xor
mov
rclb
pushf
mov
pop
adc
push
xchg
loop
flds
out
mov
and
or
pop
and
mov
xchg
es
xlat
or
je
mov
cmpsl
jmp
fwait
adc
das
xchg
loopne
movsb
inc
jnp
jle
inc
push
loop
xchg
pop
lods
ret
cld
mov
jecxz
lcall
add
loopne
inc
xorb
arpl
adc
inc
jbe
insl
fadd
lds
mov
pop
push
mov
jbe
scas
jge
cwtl
sbb
xchg
mov
add
insb
es
mov
mov
in
imul
cwtl
pop
daa
fdivs
and
add
xor
inc
in
js
in
adc
push
cli
push
dec
pop
xor
loop
push
movsb
arpl
add
xchg
es
arpl
lret
sbb
jbe
dec
outsb
test
outsl
je
cmpsb
iret
jo
mov
out
jge
push
stos
push
outsl
fimuls
pop
xor
insb
arpl
jne
mov
in
jle
and
sbb
or
cmp
fildll
and
fnstcw
lret
repz
decl
insl
push
and
mov
xchg
decl
test
xor
xchg
mov
mov
testb
out
sbb
dec
sbb
mov
into
add
testb
cmp
scas
imul
mov
pop
jmp
ret
jle
scas
fs
addr16
das
in
cmp
push
cmp
mov
xchg
movl
pop
xchg
mov
stos
and
inc
push
sti
xchg
sarl
shl
dec
add
push
push
or
cwtl
lret
xchg
repz
in
into
cmp
inc
dec
or
jns
jo
leave
and
das
mov
lock
imul
outsb
pusha
pop
push
jmp
pop
jbe
mov
pop
fdivp
fidivs
xchg
aad
aad
shll
mov
cltd
push
jne
test
shlb
cltd
clc
aas
mov
sub
ljmp
jge
pop
sub
test
imul
out
out
nop
test
mov
adc
ret
push
xor
add
adc
pop
xchg
cmp
push
ficoml
fs
aam
mov
lcall
popa
sbb
cmp
out
jge
stos
xchg
cmp
fwait
pop
mov
sti
sbb
ret
jg
jl
push
in
jl
push
sub
iret
push
js
insl
pop
std
pop
sub
xchg
jmp
push
std
mov
pop
or
mov
fmull
scas
pop
int3
lret
packsswb
adc
pop
ljmp
mov
test
pop
ds
and
repz
lock
std
push
dec
mov
mov
push
pop
rcrl
popa
mov
xchg
mov
rcll
out
or
std
xchg
aad
scas
rcrb
add
lea
aaa
pop
push
jmp
mov
dec
mov
mov
and
pop
dec
pop
rcll
mov
ffreep
in
fcmovnbe
mov
sbb
mov
xchg
jecxz
sbb
pop
fwait
sahf
mov
sub
data16
arpl
push
in
leave
cmp
sqrtps
out
mov
lock
pop
xor
or
dec
neg
out
mov
mov
inc
aaa
mov
adc
out
sbb
sub
pop
int
popa
pop
sub
and
stos
sbb
cmpsb
sbb
or
outsb
frstpm(287
inc
mov
mov
repz
pushf
fdiv
gs
cmp
xchg
icebp
jno
pop
push
imul
repnz
pop
aas
pop
mov
xchg
aas
dec
and
sub
inc
cmpsb
lea
add
js
dec
ss
stos
sub
cmp
jbe
or
call
mov
cmp
and
push
sti
scas
xchg
loope
xchg
les
rep
cmp
add
mov
adc
popf
int3
movsb
hlt
sahf
sbb
shrb
inc
xchg
pop
or
xorl
cld
jp
ljmp
popa
cmp
xor
insb
mov
xchg
ret
xlat
inc
xchg
xor
adc
shrl
fisttps
pop
adc
inc
out
lahf
pop
pop
and
enter
mov
out
sbb
ror
xor
int
pavgw
jne
vmovaps
add
fnsave
orl
sbb
aam
or
mov
addb
scas
ret
cltd
fsts
sbb
test
insl
into
xchg
mov
lret
loopne
call
rcr
arpl
push
lret
add
jb
fiaddl
dec
popf
inc
cmp
sub
push
mov
jle
cmpl
stos
sbb
push
and
push
shlb
add
xlat
mov
mov
fcomip
push
push
pop
dec
rsm
dec
hlt
lods
dec
test
and
pop
pop
mov
outsl
add
add
scas
pushf
inc
mov
dec
gs
push
ss
jp
mulb
pop
mov
cli
sbb
mov
pop
jae
pushf
mov
aas
mov
mov
add
xor
das
outsl
in
lock
mov
push
das
jge
jge
or
add
xchg
aaa
jg
sbb
sub
popf
scas
add
ljmp
ret
subl
pop
ret
roll
cmc
scas
and
dec
mov
bound
repz
xchg
lea
pusha
or
xchg
cltd
xchg
lcall
loope
xchg
dec
lcall
xchg
test
sub
sbb
ljmp
xchg
jb
xchg
push
pop
push
leave
dec
not
in
ret
mov
inc
and
pushf
mov
shrl
jmp
sub
push
andl
arpl
add
xchg
mov
dec
or
push
jmp
and
mov
imul
lret
pop
mov
sub
add
test
push
out
jge
or
aad
lcall
subl
push
fldcw
or
in
xor
aas
pop
insb
repnz
aas
dec
ret
leave
scas
inc
punpckldq
fiadds
out
mov
sub
out
lret
cmc
lea
es
mov
mov
add
pop
mov
std
insb
cs
pop
cltd
pop
xchg
sub
mov
jns
jle
cltd
pop
add
mov
sbb
jmp
stc
xchg
mull
add
subl
out
test
sti
int3
repnz
loope
cli
ljmp
flds
mov
fiadds
mov
scas
test
sub
xlat
or
sbb
out
xchg
ret
aas
jnp
or
sahf
jmp
int
dec
cmp
xchg
mov
sub
sub
bound
and
mov
cmc
jge
stos
arpl
nop
les
sub
and
push
jge
inc
lods
pushf
sbb
cli
pop
shr
nop
or
pop
es
sahf
mov
cmpsb
push
inc
jecxz
sarl
inc
fistps
enter
ljmp
stc
cmp
and
inc
sbb
push
stos
mov
push
mov
scas
xor
xor
cmp
divl
sbb
loopne
sahf
int
icebp
adc
mov
cmp
adc
adc
leave
cmp
lahf
ret
mov
mov
cld
mov
stos
in
icebp
push
lock
addl
ljmp
mov
dec
dec
lret
ja
or
ja
fs
std
in
cwtl
dec
fidivl
push
mov
and
shll
dec
jae
mulb
lods
or
and
adc
cs
pop
shll
lret
jl
jl
or
pop
sub
adc
int
dec
shrb
xchg
add
jle
int3
ficomps
cmpsb
xchg
or
addr16
mov
inc
pop
daa
mov
jmp
push
jb
mov
ret
add
mov
mov
aam
ss
jmp
rcll
inc
mov
mov
jle
testb
xchg
sahf
xchg
mov
outsb
movsb
ja
xchg
sbb
sbb
insl
sub
clc
lcall
pop
out
mov
adcb
fwait
jl
cmpb
aaa
movsb
repz
nop
lret
xchg
pop
das
inc
jnp
push
mov
dec
les
adcl
mov
mov
mov
sbbl
xor
cli
jecxz,pn
or
jge
sbb
into
sub
jge
repz
add
ss
sub
sahf
inc
sub
fwait
jns
mov
popf
mov
cltd
jp
lods
cmpsb
repz
loope
sub
jg
mov
jo
mov
adc
stos
adc
int
jnp
mov
sahf
std
sbb
cmpl
pop
into
xchg
mov
lea
and
adc
mov
dec
xor
add
pop
pop
mov
sbb
mov
mov
rclb
mov
dec
incl
sbb
and
mov
xor
imul
cmp
xor
daa
inc
lret
push
add
fs
bound
mov
aam
nop
pop
lds
sbb
inc
add
mov
jbe
pushf
or
shll
push
push
sub
inc
shll
xor
test
inc
sbb
xchg
cmpsb
fldt
xor
xchg
push
sub
gs
ja
xor
ret
fmulp
sbb
inc
and
inc
scas
out
test
scas
test
push
test
dec
in
fnsave
je
andb
sbb
mov
lcall
fidivrs
jg
dec
mov
insb
cmc
popf
sbb
sbb
cmpsl
cmp
dec
daa
jbe
or
sbb
aad
inc
mov
xchg
in
nop
pop
push
fs
mov
je
xchg
xchg
dec
xor
rol
mov
or
das
mov
xlat
subl
sub
and
imul
add
dec
xchg
incb
add
mov
popf
push
out
daa
repnz
adc
jp
xor
fnsave
cmp
ds
sbb
xchg
mov
pop
mov
push
lds
outsb
shl
push
push
out
out
or
loope
mov
push
or
neg
out
sbb
xchg
icebp
push
add
sbb
dec
loopne
adc
or
pop
pop
je
xlat
or
popa
int
unpckhps
mov
cmpsb
pop
sbb
add
add
idivl
popf
dec
stc
adc
insl
dec
loopne
pusha
mov
jo
movsl
lret
enter
sbb
test
sbb
lahf
es
aad
mov
xchg
shlb
push
cli
int3
int
or
imul
jmp
lods
dec
sti
fs
jg
lods
pop
mov
lods
scas
lds
mov
xor
js
rol
add
je
stos
xor
faddl
popa
shr
test
xor
or
xor
jmp
push
inc
loope
or
mov
dec
or
aas
int
enter
pop
arpl
mov
mov
mov
out
scas
aas
les
sub
enter
mov
sub
dec
jp
fsincos
js
cmp
jg
cmp
pop
lock
movsb
filds
cmp
jno
test
fldt
add
sub
es
int
scas
push
iret
pop
cltd
mov
adc
xlat
mov
xor
stos
and
daa
ret
lahf
enter
movl
bound
xor
sbbl
pop
enterw
inc
dec
ds
mov
in
dec
mov
test
push
in
roll
shrb
push
roll
inc
shll
scas
add
push
mov
mov
or
int
xor
sub
xchg
mov
adc
xchg
xchg
adc
popf
in
xchg
push
sbb
outsb
xchg
xchg
leave
or
adcb
shll
sbb
decl
inc
jle
in
push
sbb
lea
into
mov
xchg
sub
imul
xor
sbb
pop
test
lret
popa
push
gs
and
add
stc
daa
cld
mov
or
clc
xchg
mov
push
or
cwtl
and
adc
push
sub
dec
or
xor
cmpsb
push
cld
in
sti
int
fwait
ret
andnps
xchg
orl
and
or
sbb
push
mov
mov
out
addr16
inc
dec
or
sbb
int
pop
ds
insl
pop
add
pop
adc
divb
rep
dec
mov
int3
lret
xor
inc
adc
in
jne
mov
ret
mov
dec
je
and
and
cltd
iret
andl
dec
dec
adcl
xor
mov
fwait
aad
daa
out
dec
sti
and
cmc
aaa
idivl
pop
pop
and
popf
jns
add
xlat
jecxz
sbb
popf
push
cmp
push
sub
incl
shll
cmpsl
fs
hlt
arpl
imul
ret
push
data16
inc
add
loopne
adc
xor
cmpb
in
outsb
stos
jle
mov
popa
or
arpl
dec
mov
decb
adc
sbb
xchg
jecxz
xchg
sbb
sbb
cmpsl
cmp
outsl
aam
neg
or
daa
jne
call
sub
inc
dec
loop
fidivrs
scas
mov
sub
imul
testb
fidivrl
dec
sub
pop
int3
or
fsubrl
pusha
pop
fisttpll
shlb
cli
je
cmpsb
mov
notl
dec
sub
mov
nop
dec
cs
cld
fmul
int
pushf
popa
jmp
sbb
xlat
pushw
mov
and
pop
inc
addr16
cmc
xor
push
inc
or
enter
push
fmulp
mov
dec
rcll
stc
imulb
xchg
add
inc
xchg
and
vmwrite
pop
add
sar
cltd
pop
pop
cltd
push
sbb
push
pusha
xchg
orl
adc
aam
into
xor
rcrb
mov
sub
pop
pop
pop
and
inc
push
ret
and
lahf
mulb
sar
lret
jge
jle
adc
mov
mov
adc
mov
cmp
or
push
xor
shll
xchg
mov
dec
cwtl
add
daa
dec
inc
cli
or
ds
xor
cwtl
fs
adc
adc
pusha
jg
xor
fisttpl
push
sub
flds
pop
lea
pop
in
dec
das
add
cmp
lods
mov
add
dec
and
mov
dec
in
cs
mov
js,pn
dec
test
popa
cmpsb
shll
cltd
mov
pop
and
pop
mov
clc
mov
cmpsl
es
or
sbbl
stos
outsl
xchg
push
mov
in
out
mov
lock
add
popa
loop
dec
je
das
adc
xchg
repz
mov
xchg
xchg
pop
mov
lods
jmp
icebp
shl
shrb
push
fwait
mov
mov
roll
cmp
cmp
or
jnp
pop
pop
pop
xor
out
scas
rclb
imul
clc
bound
shrd
cltd
mov
ds
mov
stos
pop
cmp
cmpsl
mov
xchg
mov
imul
jno
mov
sbb
and
cmp
adc
lcall
mov
push
enter
ret
dec
or
pop
shll
repz
dec
call
loopne
and
cmp
add
jmp
leave
enter
adc
in
and
sahf
mov
insb
sub
sub
je
jle
aas
push
rorb
rcrl
inc
insb
dec
rolb
fs
dec
dec
fildll
gs
in
add
ficompl
scas
lahf
lea
in
in
pop
push
and
pop
add
pop
outsl
mov
imul
sub
je
lds
lret
inc
or
int3
das
stos
je
jb
sub
orb
lods
ljmp
jo
std
mull
sarl
iret
cmp
outsl
inc
mov
lret
stos
sbbl
gs
jne
popa
push
or
mov
les
adc
and
adc
pushf
iret
xchg
mov
and
aas
fiaddl
push
mov
shlb
dec
or
adc
sub
xchg
mov
jmp
outsb
lahf
xor
imulb
test
xchg
enter
push
sbb
add
sub
dec
and
rcrb
aad
lock
mov
mov
pop
sub
repz
int
dec
and
cmp
and
scas
mov
cld
inc
mov
ss
xlat
test
jbe
adc
xchg
push
int3
repz
dec
inc
scas
cld
test
mov
icebp
pop
pop
ret
mov
sbb
stc
ja
popf
push
sbb
repnz
arpl
sub
cmpsl
test
sbbl
and
lock
negl
je
xor
xor
dec
aad
adc
xor
push
mov
sbb
adc
xchg
gs
xchg
push
aad
iret
cmpsb
sub
or
cmc
ljmp
and
inc
adc
loopne
sub
or
dec
fsts
jle
jecxz
int
pusha
in
and
sbb
fldt
push
xchg
sbb
lret
into
ljmp
pop
cmp
fstpl
jno
aam
imul
push
popf
xchg
data16
push
stc
popa
pop
dec
or
push
mov
inc
loop
push
rcrb
rcrl
in
in
in
test
mov
push
mov
push
ss
ljmp
jmp
out
loop
imull
rolb
add
and
pop
fmul
fwait
cmp
hlt
add
xchg
inc
pop
add
push
loopne
aam
addr16
cwtl
push
cs
lcall
mov
sub
into
jo
lret
pushf
subb
ja
sbb
xchg
in
dec
sub
addr16
in
mov
mov
mov
cld
das
icebp
cmp
or
jecxz
insb
cld
xor
iret
in
jmp
mov
pusha
lret
aaa
in
cwtl
fldenv
push
int
push
fisttpl
inc
outsl
jg
sub
dec
jge
cltd
iret
dec
inc
pop
xor
call
iret
jnp
sbb
jae
lds
pop
imul
dec
lds
ljmp
stos
mov
out
cmpsl
mov
and
out
mov
into
mov
xchg
xor
xchg
ret
and
call
pop
stc
jns
seto
js
dec
sub
fs
inc
outsb
fs
lret
scas
iret
mov
lret
fnstsw
cmp
mov
sbb
lea
mov
shll
jle
push
leave
fsubr
add
mov
mov
inc
mov
or
pop
fldt
push
rorb
cmp
or
jns
push
imul
xchg
sbb
pop
push
mov
jns
adc
mov
push
add
out
clc
aas
sbb
xor
clc
jmp
add
push
popa
aam
imul
add
nop
xchg
imul
loopne
mov
cmpsb
imulb
out
int
jecxz
cli
inc
sahf
call
int3
mov
popf
int
roll
inc
roll
xchg
rclb
test
rorl
or
clc
stc
xor
pop
inc
movsl
push
jle
test
in
aas
movsb
stc
mov
ret
mov
test
loope
in
and
lcall
les
out
cmp
xchg
add
int3
cmpsl
mov
xlat
rcrl
movsb
ja
push
mov
popf
fisubl
ret
mov
mov
mov
dec
mov
mov
push
fsubl
pusha
pushf
mov
negb
push
xchg
jp
xchg
test
dec
bound
lds
ss
mov
cmp
mov
pop
dec
popf
out
ljmp
lea
adc
je
rep
test
cmp
cmp
and
mov
fadds
ja
mov
mov
fcoms
push
scas
xchg
insb
pop
arpl
ss
enter
jg
outsb
fucomp
rorl
lahf
mov
mov
inc
push
push
mov
mov
flds
insb
ljmp
and
ja
lods
pop
popf
jno
insl
xor
sbb
loope
dec
mov
jle
and
jnp
test
push
lock
inc
jmp
sub
xchg
rorb
push
sub
cmc
mov
mov
andl
sbb
aas
adc
rol
cmpb
repnz
pop
int3
mov
std
fucomp
addr16
sbb
mov
stc
repz
xchg
push
fwait
mov
repz
cwtl
pop
aaa
add
jecxz
mov
xchg
sub
cli
rclb
xor
sbb
dec
sbbb
or
cli
xor
inc
addr16
jns
stc
mov
adc
sahf
addb
scas
pop
lock
mov
dec
pop
adc
adc
xchg
outsb
dec
add
int
and
jecxz
daa
fstpl
cmp
rcrl
add
jg
jns
nop
adc
into
enter
mov
mov
mov
sahf
fs
cwtl
pop
jns
push
std
sti
pop
jne
lds
xchg
dec
test
mov
cmp
fdivs
pushf
imul
sbb
add
daa
mov
adc
dec
adc
int
mov
inc
data16
nop
lods
shll
dec
add
mov
push
jae
daa
mov
frndint
adc
lahf
jmp
imul
aam
pop
cmpsl
sub
xchg
fisubrl
mov
outsl
leave
cltd
icebp
ljmp
pop
aaa
or
cmp
mull
adc
or
add
jae
jns
aam
call
repz
sub
out
lods
push
xor
cltd
pop
jae
push
cld
repz
push
inc
mov
bnd
scas
mov
popf
rcrb
cmp
aad
sbb
pop
cmp
lods
mul
xchg
mov
mov
rorb
cmpsb
sbb
movsl
cs
add
sbb
lret
or
and
push
ror
pushf
dec
pop
enter
lret
je,pn
push
pop
pop
insl
pop
or
cmpsl
cmp
into
vmovntps
jmp
mov
pop
mov
push
xor
add
mov
loopne
inc
std
fdivl
sbb
dec
mov
in
lods
cmp
push
inc
lods
lcall
clc
jns
cs
push
inc
mov
add
enter
fs
lods
bound
repz
jmp
in
int3
xchg
cwtl
sub
jbe
sub
add
add
adc
add
sbb
jmp
jl
insb
lea
sub
pusha
cli
je
psrld
add
add
subb
lret
int3
in
sarl
xchg
cli
cwtl
fs
lods
nop
movsl
xchg
pop
mov
into
dec
xor
adc
push
push
jne
lea
pushf
lcall
inc
pop
cmp
pop
fsubr
xchg
or
imul
sub
jbe
scas
or
insl
xchg
lds
hlt
cmp
cmp
cs
data16
popf
je
push
mov
or
mov
mov
pop
mov
cltd
icebp
fwait
ror
jecxz
mov
jge
int3
cmp
push
and
push
pop
or
ret
div
inc
insl
fiadds
scas
rclb
notb
mov
test
and
cwtl
jmp
lock
ret
pop
cmp
insb
loope
hlt
adc
mull
add
jne
and
adc
shll
xchg
add
sub
sub
adc
nop
aas
sbb
inc
rorl
je
pop
jbe
or
testl
cmpsl
mov
xchg
pushf
mov
xor
cs
xor
pop
test
sub
mov
fnstcw
lahf
mov
mov
push
arpl
movsb
or
or
dec
in
push
push
xor
xchg
mov
pop
pop
sbb
jg
cmp
sub
aam
icebp
aad
add
pop
mov
fs
rorb
imul
mov
imul
pusha
pop
dec
push
dec
inc
cmp
int
cld
int3
lcall
enter
pushf
dec
dec
js
sbb
dec
testb
ja
pop
lods
xchg
les
jb
adc
ficomps
pop
jbe
xor
subl
mov
add
cltd
ja
fldenv
aas
jl
outsl
imul
add
sbb
rol
hlt
jbe
sarb
mov
mov
imul
sub
xor
cmpsl
addr16
pop
insb
sbb
mov
cmp
push
ficoml
aam
add
cmp
push
sbb
jne
mov
das
and
in
sbb
aaa
jl
mov
dec
push
sahf
xchg
loop
fists
es
mov
sbb
sub
pop
cmp
pop
in
iret
push
ror
sub
xchg
jo
movsb
fisubrs
insb
rol
push
outsb
inc
aaa
aam
mov
fbld
decb
pushf
aas
xchg
sysret
or
rorl
in
inc
and
or
push
pop
dec
xchg
jb
clc
das
int
das
jge
test
xlat
dec
sub
sub
aad
shl
popf
pop
jecxz
sub
jbe
cmpsb
xchg
mov
rcrb
sbb
mov
fxch
mov
push
push
push
popa
jmp
fisubl
jnp
adc
fisttpll
and
mov
lock
adc
pop
push
cmp
inc
stc
cli
bound
pop
mov
jmp
xchg
sbb
mov
adc
orl
jl
add
aas
cmp
jno
gs
je
jns
push
jns
mov
xor
popa
cmp
out
mov
mov
mov
push
mov
mov
aaa
shll
in
in
xor
fcomip
shll
mov
sarb
or
lret
sti
lock
or
push
jae
rclb
jg
pop
or
or
clc
out
sub
xor
movsl
cmpsl
cmp
repnz
pop
lret
test
add
xchg
inc
leave
jb
notb
js
jle
loopne
inc
jg
lret
cmp
aad
mov
xchg
inc
inc
or
dec
push
sub
ljmp
sub
pop
into
fldz
ja
sub
and
mov
adc
xor
sub
fmuls
jns
pop
mov
test
cmc
cmp
pop
mov
inc
mov
subb
hlt
jnp
sbb
imul
mov
mov
cmc
aam
xchg
push
jo
push
or
mov
out
mov
rclb
mov
scas
jmp
ret
sub
jno
fs
lfs
push
das
lods
sti
xchg
pop
add
out
lret
cmpsl
lds
subl
inc
addr16
xor
int3
pusha
aas
test
imul
adc
fwait
push
sub
fisttpll
fistps
outsl
sbb
outsb
rorl
and
imul
sbb
mov
in
scas
xchg
lock
jbe
out
or
addr16
sbb
pop
aas
lods
xchg
mov
popf
iret
jns
lods
adc
ret
sbb
push
pop
inc
cld
xchg
pop
dec
mov
jmp
pop
dec
testb
pop
or
pop
push
int
divl
outsb
ja
je
in
pop
int
leave
cmpsl
mov
jmp
cmp
xchg
dec
pushf
sbb
push
loope
mov
scas
scas
cmp
shrb
jl
sub
lds
movsb
push
sar
or
dec
cmpsl
idivl
mov
js
xor
cmpsl
xor
je
sub
lods
iret
mov
cmp
enter
mov
lods
jae
into
jo
repz
sarb
push
lods
and
scas
mov
cmpsb
pop
fxch
call
pop
jmp
sahf
cmp
jecxz
les
dec
sub
jmp
xlat
leave
in
mov
sub
fisubrl
pusha
insl
jo
inc
roll
sbb
mov
lods
daa
clc
mov
push
ret
scas
aam
mov
adc
dec
xchg
or
in
leave
dec
repz
adc
je
lock
leave
mov
ret
xchg
cmpsb
ljmp
mov
dec
add
inc
jae
cmpb
sub
int
mov
mov
xchg
imul
xor
test
roll
scas
mov
lret
jne
sbb
fidivl
test
ret
fisubrl
cwtl
mov
dec
in
adc
in
or
dec
jp
cmp
leave
push
inc
xlat
dec
shr
or
lods
ss
xor
mov
bound
jo
fstpt
or
inc
je
dec
loopne
mov
test
mov
jp
add
outsl
push
insl
pop
ror
out
pusha
add
mov
adc
pop
jnp
xor
adc
mov
xor
stos
fs
mov
jo
push
popa
imul
mov
shll
dec
dec
cs
and
push
fsubl
mov
clc
js
jo
in
jp
xor
pop
or
mov
insl
aas
mov
or
dec
mov
mov
adc
sbb
mov
fcomps
iret
adc
jecxz
sbbb
lcall
test
mov
xchg
test
mov
xor
pop
inc
roll
cmpsb
in
push
jns
roll
test
and
pop
dec
cld
pop
sbb
mov
iret
dec
push
popa
lret
outsb
ret
es
mov
pop
or
xchg
or
add
scas
jbe
cltd
mov
fnstsw
in
lahf
mov
pop
mov
jmp
in
adc
hlt
lods
les
test
iret
test
xor
jecxz
jno
mov
jmp
js
fsubrs
mov
es
es
pop
xor
js
and
mov
out
mov
das
jne
outsb
ja
dec
lea
cmpsb
pop
mov
xor
jge
push
lret
out
inc
fs
mov
scas
fstpt
popf
jg
mov
dec
stos
mov
std
adc
in
inc
sti
and
pop
pop
imul
xlat
xchg
out
cmp
add
ja
sahf
fstps
xchg
xor
mov
int
dec
out
sub
insb
mov
mov
mov
je
in
adc
aam
jg
inc
or
cmpsl
imul
test
je
scas
dec
lret
dec
xchg
lods
dec
aaa
test
fdivrl
xchg
inc
lock
mov
cmp
insl
sbb
insl
addb
xchg
sahf
lcall
ret
stos
rcr
std
dec
test
add
and
lret
or
in
and
jnp
cli
cmp
loopne
cmp
bound
cmovb
jle
nop
cmp
inc
shlb
inc
cltd
sbb
inc
fcoms
repz
mov
out
cwtl
bound
in
xor
cmp
push
mov
pop
jmp
out
push
lret
jo
daa
or
push
ljmp
jnp
inc
mulb
clc
mov
mov
xor
jns
outsb
sub
movsb
lret
js
ja
or
pusha
mov
lock
iret
es
sahf
scas
inc
imul
sahf
sub
lret
ja
sub
movsb
mov
jno
data16
test
rol
fwait
mov
mov
dec
and
push
mov
xchg
jbe
je
mov
dec
sub
jns
inc
add
cmp
push
pop
test
lret
test
dec
repz
les
dec
icebp
sti
xor
cmp
or
cmc
mov
into
sub
sub
jle
mov
shrb
xor
ret
orb
or
xchg
xor
iret
mov
sti
pop
and
fimull
cmp
inc
std
outsl
jnp
repnz
rorl
repz
cmc
xlat
jl
pop
cmpl
dec
mov
sub
mov
stc
mov
xor
mov
add
mov
mov
in
imul
divl
add
xchg
ret
mov
fisttpl
outsb
imul
test
push
test
std
or
sbbb
rcll
fcoms
cli
in
mov
ljmp
hlt
out
push
negb
or
xchg
dec
cmp
cli
pop
paddusw
imul
sti
sti
dec
fdivl
xor
lods
loopne
and
xchg
sbb
cmp
inc
jne
into
stos
bound
fcompl
hlt
cmp
sahf
sbb
xlat
mov
imul
xchg
insb
filds
sahf
mov
xor
cmpsb
push
fwait
sbb
sub
dec
sub
ds
lcall
mov
lds
dec
lods
push
imul
mov
iret
cld
jg
jmp
mov
faddl
pop
in
daa
cmp
cmp
xor
popl
bound
fcoml
xchg
cmp
mov
inc
int
jecxz
out
inc
xor
test
xor
rcr
pusha
pop
jl
jl
ss
add
jb
sbb
mov
stc
inc
inc
sub
or
and
mov
jge
cli
ficoml
es
xor
jno
test
cs
xchg
mov
add
xchg
dec
daa
aas
pop
push
stos
movsl
std
sbb
jecxz
cld
mull
mov
xor
sar
push
insl
imulb
mov
mov
not
xor
sub
add
push
or
in
push
mov
inc
push
dec
std
inc
sub
sub
push
mov
pop
jg
out
or
gs
jmp
or
xor
pop
bound
fcomps
mov
movsl
jmp
push
mov
outsb
dec
adc
out
insb
mov
mov
sub
fnstenv
leave
mov
sub
test
inc
cmp
in
pop
mov
inc
in
xchg
inc
pushf
and
push
add
pop
sub
pop
pop
aas
repnz
sbb
dec
mov
sbb
cmc
pop
aad
sarl
fnstenv
mov
xor
cmpsb
add
scas
mov
repnz
sub
rdmsr
xor
dec
rorl
iret
movsb
daa
and
cmp
xor
jl
mov
sub
mov
mov
int3
push
rcr
jmp
leave
movsl
jnp
fmull
push
sbbb
jl
inc
sbb
mov
arpl
push
push
mov
xor
aam
sbb
jle
pop
dec
clc
imul
sbb
sub
mov
jmp
test
hlt
inc
mov
in
jge
in
or
lcall
push
pop
pushf
cmc
je
out
pop
jge
fdivrl
jae
je
mov
mov
fs
mov
out
pop
imul
lods
std
sbb
fstps
xchg
xchg
jge
roll
mov
mov
shlb
test
inc
cmpsl
popa
bound
or
outsb
sbb
or
hlt
into
daa
cltd
mov
lods
mov
pop
xchg
jns
cmpsl
add
arpl
in
inc
pop
jmp
mov
adc
in
jle
dec
out
enter
sub
inc
mov
shl
lret
jg
push
imul
mov
sbb
mov
mov
cmp
inc
arpl
popf
cltd
or
arpl
cld
sbbl
dec
loope
mov
test
lahf
push
gs
push
leave
pop
das
leave
or
repnz
data16
adc
scas
ljmp
inc
pmulhw
sbb
repnz
aam
js
shlb
push
fwait
dec
jmp
pop
loope
pop
outsl
mov
insb
xchg
cld
out
jae
push
cmc
out
sbb
cmpsl
add
movsb
les
or
pop
movsb
scas
nop
adc
test
fldt
addr16
xlat
js
dec
lcall
pminub
dec
gs
imul
add
pop
cltd
int3
sub
and
pop
mov
loope
lea
pop
fs
fwait
aaa
mov
jp
in
xlat
cwtl
fisubl
mov
into
jns
stos
push
mov
mov
or
adc
fwait
jo
dec
sbb
cmp
fwait
ljmp
cmp
mov
push
cmc
lods
xor
xchg
sub
mov
xor
sbb
pop
ret
sahf
fwait
js
lret
fdivrs
mov
fidivrl
sbb
pop
push
movsb
inc
or
je
mov
mov
subl
jge
xchg
inc
cmp
adc
in
or
sahf
jns
sub
fidivrl
xchg
cmp
test
jl
pop
pusha
sbbl
sub
or
out
in
or
scas
xlat
cmc
sub
sbb
test
cld
mov
out
push
dec
cmp
dec
cmc
xchg
add
mov
push
scas
jmp
int
fwait
lods
push
adc
test
push
fwait
add
aad
rcll
imul
jns
lcall
pushf
ja
jecxz
cmpsb
sub
pop
pop
scas
push
addl
or
je
ret
leave
mov
mov
ret
stos
mov
add
sub
jmp
pop
sti
push
leave
call
ret
test
mov
cmp
adc
repnz
ret
push
lock
xlat
add
mov
sbb
lea
loopne
in
iret
sti
stc
inc
movsb
mov
pusha
cmc
icebp
dec
subb
pushf
repz
fwait
jne
jo
or
push
fsubrs
repnz
mov
and
add
je
xor
jae
js,pt
ror
cmp
nop
jae
mov
jmp
cmp
fisttps
aad
cld
subb
shlb
and
xor
movsb
repnz
es
or
xchg
xchg
aam
sub
lock
int
shll
mov
ficoms
es
fimuls
mov
lcall
in
mov
decl
fbld
ljmp
negl
xor
jecxz
cmpsb
jle
sti
add
outsl
mov
push
lret
or
inc
insl
movsl
cwtl
dec
lock
mov
pop
arpl
mov
call
lret
into
cwtl
jbe
jecxz
imulb
push
mov
and
insl
xor
pushf
xor
bswap
cwtl
cld
and
pop
push
ds
and
mov
ficoms
inc
ret
jg
sbbb
mov
bound
sub
sbb
xor
mov
adc
adc
adcl
pusha
jmp
aas
fldl
push
lea
xor
mov
push
jmp
scas
mov
in
lahf
lods
xor
cmc
push
fsubrl
in
test
sarb
int
cmp
movsb
or
sub
jns
mov
xchg
inc
imul
cmpsb
adc
push
in
mov
or
insb
sbb
inc
fxch
test
lods
and
push
bound
pop
cs
jbe
test
push
sub
rorb
imul
loopne
cmp
mov
inc
lahf
idiv
add
das
adc
sti
sub
pusha
mov
lods
xchg
xor
mov
lcall
inc
outsl
lds
hlt
cli
mov
mov
mov
and
push
sbb
out
dec
cmp
loopne
repnz
mov
daa
cld
pop
xor
fsubrs
jno
cld
sbb
ja
pop
mov
rolb
xchg
icebp
sub
cwtl
lods
rcl
fiadds
js
sub
subb
and
cs
andl
out
lods
in
sub
pop
fistpll
dec
pop
and
mov
xor
dec
lods
fimull
mov
aas
sbb
adcb
movb
mov
xchg
andb
jmp
out
pop
dec
gs
xchg
mov
push
nop
inc
jbe
inc
sarl
test
mov
pop
and
mov
push
in
into
cmp
cmp
std
pusha
imul
lea
js
dec
dec
pop
rolb
xlat
push
push
mov
je
push
int3
lods
test
je
pop
loopne
int
xor
mov
cmpsl
je
cltd
jns
mov
js
push
inc
and
mov
push
sub
rolb
cmp
shrl
pop
lods
or
inc
rcl
or
jmp
movsb
ret
jo
jae
inc
inc
inc
and
sub
jbe
or
mov
insl
or
inc
cs
mov
xor
push
fs
cmp
inc
jbe
push
fistpl
push
mov
xchg
xchg
cmp
addr16
subl
shrb
fmulp
int
pop
repz
sub
pop
imul
test
pop
mov
push
add
push
cmp
mov
loop
pop
sbbl
xchg
inc
jmp
or
push
orb
adc
gs
bound
ljmp
and
rcrb
lcall
pop
rcrb
ljmp
dec
mov
cmp
dec
rclb
shll
int3
cmp
add
in
push
popa
inc
push
ja
or
jg
dec
push
pop
imul
test
das
insl
push
jnp
aam
push
cld
and
mov
pop
jmp
inc
mov
daa
pusha
mov
jl
mov
sbbl
cwtl
fisubl
add
xchg
jp
rclb
pop
jno
test
push
push
xor
stos
mov
clc
pop
sahf
add
nop
ljmp
rorl
aad
mov
inc
fs
jo
push
adc
pop
sub
pop
cwtl
cmpsb
nop
inc
bound
mov
je
mov
push
sub
lods
mov
sbb
mov
xor
jb
xor
fsubp
std
xchg
pop
imul
or
pop
shll
add
cmp
mov
outsb
push
sti
imul
arpl
outsl
das
gs
inc
sbbl
out
addr16
push
push
test
xorb
ficomps
mov
dec
or
test
mov
sbb
in
and
es
orl
fdivrl
ds
push
lret
pop
push
and
ss
push
or
div
sbb
dec
ljmp
push
sub
repz
pop
add
imul
test
stos
push
lods
dec
mov
inc
fwait
aas
mov
enter
xchg
int
loope
imul
mov
mov
cmp
pushf
mov
call
fs
cmp
xor
movsl
pop
arpl
xchg
sub
add
rcr
mov
fcomps
cmpsb
add
mov
xor
sbb
shll
inc
imul
ss
sbb
dec
icebp
add
pop
pop
xor
push
jle
insl
ficomps
push
nop
lds
jbe
imul
jne
cmc
sarb
xor
pop
movsb
lahf
or
out
ror
push
mov
push
and
cmp
sti
jne
or
jnp
insb
out
push
jp
mov
inc
jo
jl
lret
addl
mov
pop
dec
lret
out
sbb
add
jmp
sbb
fld
dec
insb
cld
jno
fisttpll
loope
pop
mov
shlb
adc
push
jno
popf
jae
cwtl
and
aad
fisubrs
lret
mov
mov
dec
js
push
and
test
sub
ja
addl
mov
mov
int3
popl
addb
test
into
test
inc
sub
lock
popa
incl
mov
sbb
xchg
enter
adc
mov
lahf
and
xchg
les
arpl
jmp
in
pushf
dec
insb
push
andb
daa
push
dec
nop
inc
mov
jmp
xchg
pop
ret
mov
repnz
into
sub
fcoml
int
ffreep
xlat
shlb
subb
and
jle
dec
jo
stos
test
shrb
inc
sub
add
xor
push
lcall
push
leave
push
ds
mov
sbb
fdivrs
mov
mov
decl
leave
cmp
jge
mov
nop
push
les
and
cmpsb
test
sbb
push
fcoml
pop
xchg
xchg
pop
add
inc
into
xchg
pop
mov
fcmove
into
repnz
pusha
dec
lea
sub
outsb
mov
inc
or
imul
jmp
and
pop
xor
in
outsb
xchg
fldl
add
and
in
out
cmpsl
pop
sahf
cmp
xor
sarb
adc
adc
sub
mov
adc
cmp
das
repnz
push
or
in
repz
jns
rorl
or
jns
cmpsl
sbb
inc
jno
daa
and
daa
imul
ror
sbb
push
mov
out
pop
arpl
sbb
mov
xor
subb
mov
sar
enter
stc
rorb
mov
dec
out
dec
fadds
je
in
mov
and
mov
outsl
out
mov
mov
or
test
fcomps
in
push
jmp
ffreep
xchg
int
xchg
sub
notb
dec
or
jnp
mov
fdivp
push
popa
das
adc
and
cli
enter
andl
inc
or
mov
inc
add
into
adc
lods
cltd
or
scas
leave
push
pop
mov
cmpsb
enter
dec
push
aam
fcmove
daa
jl
pop
imul
cmp
xchg
adc
adc
ss
push
add
xchg
call
cwtl
push
stos
jno
mov
dec
movsl
popa
xor
test
pcmpgtd
rcl
cmp
aas
jge
push
pop
dec
leave
dec
js
dec
jecxz
pop
push
adc
repnz
idivl
cmpsl
sbb
rcr
mov
xchg
std
mov
repz
ret
xlat
push
enter
xchg
inc
leave
and
push
repnz
sti
lret
leave
lock
js
ja
sti
mov
pop
cmp
adc
jns
push
dec
pop
jg
sahf
fs
cld
ret
ss
push
call
lret
pop
and
add
ret
cmc
test
jno
mull
sbb
cmpsl
mov
or
push
dec
pop
ljmp
test
pop
cmp
scas
int
push
mov
ljmp
push
fimuls
js
dec
into
data16
dec
mov
js
and
daa
pop
jle
sbb
sub
pop
lcall
pop
push
dec
xlat
icebp
mov
cmp
add
xchg
sub
push
ss
inc
cli
mul
sub
or
ja
mov
sbb
arpl
aad
push
lods
and
jbe
push
pushf
aas
lods
insb
in
cmp
adc
pop
stos
stc
mov
mov
ljmp
subl
hlt
ja
mov
mov
xchg
repnz
int3
add
cs
das
cwtl
stos
mov
mov
mov
js
scas
jae
sbb
fcoms
popa
mov
sub
int3
dec
xor
bound
sub
and
dec
cltd
aaa
add
div
pop
fsts
push
lods
sub
cltd
cwtl
cmpl
aas
int3
sbb
adc
mov
sub
mov
lods
clc
in
and
mov
push
insl
jno
stc
lods
in
fwait
dec
mov
nop
push
aad
addl
xchg
xor
cmc
lcall
faddl
jle
rolb
jns
sbb
js
cmc
jb
mov
xchg
inc
and
mov
mov
lds
fimuls
fisttpll
iret
xor
test
test
xor
xchg
xor
rcl
xchg
jo
fwait
test
test
sbb
mov
out
inc
and
cltd
mov
push
shrl
js
cmp
mov
mov
adcl
je
inc
pop
roll
xchg
sub
xor
out
pop
stos
shll
dec
mov
add
aaa
pop
jno
repnz
mov
into
mov
ja
push
sti
mov
mov
faddl
orb
mov
aad
scas
enter
and
es
dec
fdivs
jno
and
xchg
repz
or
xchg
jecxz
je
and
jno,pn
dec
stos
mov
pop
imul
xchg
ljmp
les
mov
in
xchg
aad
and
mov
or
or
pop
adc
mov
ljmpw
addr16
and
dec
insl
add
hlt
push
pusha
push
mov
std
fisubrl
pop
aam
stos
loopne
fiadds
mov
test
js
pop
push
sub
fsubr
xchg
mov
mov
dec
mov
dec
sbb
icebp
cmp
fs
mov
in
lds
sub
das
fisubrs
inc
pop
psrlw
sub
xchg
and
divl
adc
inc
sbb
cmp
push
es
adc
scas
adcb
cld
shll
imulb
xor
pusha
mov
or
lea
out
pop
mov
xor
neg
mov
leave
repz
shlb
cmp
pop
or
sbb
icebp
mov
jg
stc
cmp
lret
xchg
pop
cld
xchg
repz
int3
cmpsb
push
roll
daa
out
nop
pop
ss
adc
lea
dec
fstpt
gs
lea
mov
push
pop
dec
js
cltd
mov
jb
and
jecxz,pn
imul
or
mov
jge
faddl
lods
bound
lock
pop
push
fstpl
shl
cld
nop
dec
cli
sar
insl
mov
adc
xor
or
subl
daa
push
cmp
ret
inc
mov
dec
dec
xchg
dec
dec
adc
add
add
rcrb
cltd
lock
stos
in
pop
xchg
jmp
rorb
adc
xchg
xor
arpl
dec
mov
gs
into
and
insl
xor
subl
bound
inc
imul
shr
pop
sub
addr16
rcll
fiadds
lcall
inc
push
js
xchg
sub
pop
push
stc
xlat
test
movsl
jnp
out
push
add
mov
in
mov
dec
fsubrs
inc
xchg
pop
popa
push
lock
inc
lret
in
mov
call
sahf
bound
cmpsb
adc
into
les
test
push
ret
sub
arpl
dec
dec
test
repz
icebp
shrl
mov
pop
jnp
cld
shll
dec
insl
mov
mov
popa
mov
mov
add
dec
or
add
aam
mov
adc
pop
dec
jge
push
sti
stos
jp
push
repz
fimuls
sub
loopne
in
rorl
cmp
mov
nop
sbb
movsb
rclb
imul
seto
mov
xchg
cmp
lods
sar
mov
aad
xchg
push
rorb
loopne
inc
push
outsl
jge
mov
mov
insl
pushf
faddl
pop
and
data16
push
lds
aad
push
or
movsl
popf
add
jle
imul
pop
hlt
shll
and
mov
lahf
cli
adc
jle
pop
xor
sub
imul
movsb
and
mov
cmp
out
sub
push
mov
mov
ljmp
testb
repz
cmpsb
cmc
jmp
add
test
je
push
daa
test
in
dec
mov
mov
sbb
out
jecxz
mov
mov
xchg
mov
mov
syscall
in
orps
jmp
push
xchg
vucomiss
xor
sub
pop
stc
fildll
andb
pop
adc
sub
out
sbb
sub
ljmp
sarl
dec
cmc
cmpsb
push
add
jecxz
dec
dec
stos
ret
nop
out
rclb
sbb
aad
mov
dec
outsl
adc
es
add
insb
pop
fisubl
jge
jge
xchg
jg
jne
imul
into
shll
out
mov
mov
lods
jb
ja
inc
lahf
popa
je
mov
jns
or
call
fidivl
jg
add
mov
xorb
dec
je
inc
mov
das
sub
int3
xchg
adc
mov
outsl
js
cltd
ja
cmp
scas
jp
cli
and
pushf
gs
inc
testb
push
arpl
pop
cmp
add
adc
xchg
fcomp
sbb
inc
mov
push
pop
das
ret
jmp
nop
inc
mov
sub
push
call
push
inc
test
pop
aam
imul
hlt
sbb
xchg
leave
popa
mov
dec
testb
adc
insb
nop
adc
div
jb
aas
andl
dec
sahf
out
lods
mov
add
in
jae
aam
ret
lods
popa
sbb
cmpsb
pop
loopne
lods
outsb
les
clc
xchg
inc
xor
push
xor
test
jle
mov
test
pusha
cmpsb
in
mov
rcrl
dec
pop
or
inc
push
dec
push
popa
pop
test
std
add
nop
cmpsl
adc
popa
jmp
das
dec
fdivl
mov
jne
xor
mov
dec
and
inc
dec
jge
mov
punpckhwd
dec
cmp
test
repz
lea
add
ss
or
xchg
aam
jge
mov
int3
incb
xor
mov
movl
xchg
pop
arpl
push
cs
fsubs
pop
adc
mov
paddb
or
mov
jnp
in
cmpsl
pop
pop
jmp
mov
inc
dec
andb
dec
out
adc
jnp
mov
rcl
test
hlt
mov
pop
call
sbb
loope
or
daa
inc
imul
pop
or
jmp
mov
jl
mov
fcmovnu
pop
addl
hlt
adc
cltd
lods
xchg
xchg
out
mov
fdivs
das
xchg
inc
and
rcrl
loopne
clc
in
bound
xor
icebp
pop
psubw
cmp
sub
mov
or
cmpsl
ficomps
je
fistpl
dec
leave
out
xor
xor
scas
aad
sbb
sub
fcomps
test
dec
into
shlb
push
add
dec
insb
sub
mov
pop
enter
xor
push
xchg
ficoml
sbbl
sub
push
mov
icebp
inc
das
push
push
or
or
clc
jns
sbb
rol
adc
dec
leave
insb
shr
mov
pop
jmp
fstl
cltd
cmp
lds
aad
jae
jmp
mov
stos
pop
cmp
mov
ret
iret
inc
pop
xchg
inc
jge
mov
js
jp
loop
stos
or
adc
sbbl
jp
lahf
mov
jmp
push
mov
mov
inc
in
mov
mov
test
icebp
int3
ret
fwait
stos
and
inc
mov
les
and
push
insl
pop
mov
pop
push
shlb
cwtl
in
call
fnsave
mov
rorl
sbb
leave
leave
test
je
xchg
xchg
dec
faddl
dec
and
jge
dec
xchg
stos
out
sub
or
movsl
push
inc
pop
insl
lock
push
push
adc
lods
cmp
pop
sub
leave
add
push
jne
sbb
push
test
jbe
sbb
stos
inc
scas
add
arpl
inc
jne
or
scas
add
or
imul
xchg
das
pop
add
mov
data16
adc
icebp
bnd
mov
pop
pop
call
fwait
mov
out
test
inc
cmp
mov
adc
dec
jno
aad
cmpsb
movsl
pop
pop
cmp
inc
and
inc
dec
int3
mov
arpl
addr16
test
scas
jp
pop
movsb
mov
xchg
push
pop
out
or
fldt
mov
fdivrl
int3
jecxz
lret
imul
inc
sbb
mov
aad
mov
mov
add
lds
push
mov
and
pop
mov
ljmp
add
in
scas
testl
push
ficoms
out
jmp
cli
cli
test
aam
mov
xor
sub
or
sbb
clc
mov
les
and
cmpsl
ss
insl
test
mov
xchg
rcl
decb
sub
sbb
dec
je
inc
push
mov
out
mov
in
adcb
loop
pop
lea
jp
test
fwait
orl
divb
mov
mov
jp
mov
cmp
shl
shll
je
push
xchg
movsb
leave
add
dec
mov
aas
mov
push
mov
pop
in
test
sbb
mov
xor
cmc
popf
xchg
xor
add
js
and
sbb
rcr
repz
fisubrl
cwtl
sbb
sarl
icebp
lret
pop
ja
sub
fwait
negb
pop
ret
inc
hlt
mov
jns
sbb
int
bound
cs
adc
xor
lock
jo
mov
cmp
pop
dec
lret
cmp
cmp
xchg
jl
add
inc
and
dec
daa
loopne
dec
mov
loop
ficompl
dec
in
mov
adc
out
cmp
xchg
mov
mov
mov
jg
and
es
inc
loop
pop
leave
xor
or
inc
sub
out
jecxz
push
and
inc
inc
nop
inc
popf
in
icebp
imul
pop
mov
adc
add
enter
pop
cmp
jp
aaa
addr16
mov
or
push
mov
mov
mov
loop
cmpsl
ret
push
fisttps
sub
lods
lea
test
test
in
push
push
cmp
pop
dec
adc
xor
mov
xchg
dec
movsb
xchg
lcall
rolb
lahf
sbb
loope
bound
xchg
out
add
fsub
dec
xchg
jnp
sbb
les
movsl
mov
inc
sub
dec
add
xchg
dec
push
push
or
test
in
insl
popa
cmp
adc
fistpl
loop
inc
cmp
cli
cmc
or
stos
dec
mov
lahf
leave
cmpl
pushf
rorb
cmp
mov
loope
push
adc
popa
sbb
scas
mov
push
xor
repz
frstor
movb
lret
xchg
adc
fisttpll
push
cmc
into
pop
lret
stos
sub
xor
xchg
lret
pushf
sub
push
xchg
sub
out
sub
add
or
jecxz
push
dec
int
out
lcall
pop
fisttpl
adc
sti
sbb
lock
dec
dec
dec
or
fadds
cmp
sub
mov
sbb
rcl
adc
add
fimull
sub
xchg
or
cmpb
int3
iret
dec
in
push
cmp
rorl
xchg
enter
xchg
pop
fwait
int
pop
jle
mov
add
push
pop
jl
fidivrl
ucomiss
aaa
mov
adc
clc
xrelease
mov
inc
out
lret
aam
xor
pop
cmp
sbb
mov
jnp
out
call
repnz
sarb
pop
lahf
push
lcall
ljmp
jl
shll
cli
sub
sbb
ljmp
jnp
in
clts
in
gs
sar
clc
clc
addr16
pop
insl
dec
call
dec
dec
cli
movsb
nop
xor
rorl
or
push
xor
aaa
adc
pusha
dec
iret
repz
sbb
jo
xchg
test
jo
mov
mov
mul
add
sahf
pop
mov
gs
bound
popf
mov
enter
mov
mov
mov
sbb
leave
lcall
loop
fadds
mov
cli
push
les
insl
mov
mov
lock
sahf
mov
pop
dec
dec
inc
aam
test
sub
mov
mov
movsl
adcl
mov
iret
and
mov
jae
int
or
out
cmp
inc
mov
adc
ds
add
lods
rol
testb
stos
lcall
push
pop
mov
push
insb
or
js
jmp
es
pop
dec
dec
shll
mov
dec
inc
aas
add
into
xchg
cmp
mov
test
push
jge
fisttpll
js
cmp
adc
ljmp
push
icebp
mov
arpl
pop
inc
cmp
outsl
mov
jnp
pop
in
mov
inc
movl
jae
das
or
xchg
jns
loop
je
out
sub
push
mov
jae
add
arpl
xchg
inc
push
iret
cmp
fistpll
js
mov
decb
test
into
sbb
nop
add
xchg
xor
sbb
jno
and
sbb
inc
fnstsw
sub
or
mov
popa
fwait
push
fwait
lods
pop
xchg
mov
popl
xchg
jecxz
pusha
and
out
daa
xor
lret
cmp
add
mov
xor
iret
out
dec
and
scas
aad
mov
repz
jl
dec
mov
adc
mov
ficomps
aam
ja
xor
in
adc
pusha
pushf
ljmp
gs
divb
pop
iret
mov
notl
xchg
push
mov
dec
roll
dec
sarb
inc
inc
dec
insb
mov
pusha
mov
push
mov
xchg
or
mov
in
jp
outsl
push
test
outsb
adc
cmp
inc
movsb
loopne
popa
add
aad
pop
adc
cli
mov
int3
mov
aaa
movsb
xor
adc
stos
dec
ds
lods
fnstcw
pop
jo
xchg
push
adc
dec
icebp
pop
sub
in
aad
xor
fwait
stc
aaa
cs
mov
test
jnp
mov
popf
adc
movsl
push
stos
sub
adc
es
stos
xor
stos
mov
mov
loope
sbb
outsl
lahf
push
rcrb
inc
and
shll
pop
mov
dec
xor
test
fidivl
testl
inc
xchg
sbb
inc
jb
push
stc
adc
xchg
pop
mov
loope
mov
push
dec
test
pop
mov
push
bound
xchg
popf
dec
sub
mov
adc
and
or
push
sbbl
imull
jo
jo
subb
dec
aas
lods
xlat
lahf
arpl
pop
in
insl
sub
push
test
xlat
inc
jg
pusha
pop
push
out
das
popa
outsb
nop
icebp
add
pop
cmp
imul
in
mov
popf
cmpb
xchg
xor
mov
into
push
cmp
sbb
jns
dec
pop
rorb
cmp
repnz
scas
ljmp
cs
or
mov
repz
and
fwait
ret
mov
pop
movsb
sbbb
push
imul
test
xor
incb
add
mov
in
mov
inc
mov
pop
cmp
rcll
push
imul
imull
inc
sahf
mov
jp
xor
xchg
call
pop
adc
push
clc
loope
jb
and
cltd
cs
stos
lods
fdivl
inc
and
pop
fcomps
mov
add
sub
inc
aad
mov
pop
and
add
xor
inc
and
clc
jb
cltd
adc
xor
push
lahf
push
movsb
xor
icebp
xor
lcall
pop
in
repz
sahf
xchg
mov
and
movsl
and
rcrl
popa
leave
mov
jb
pop
loop
loope
adc
sub
lret
icebp
mov
mov
push
ljmpw
gs
jle
es
pop
es
push
cmp
mov
arpl
xor
mov
mov
cs
stc
cmc
jmp
cmp
dec
mov
mov
xor
adc
mov
dec
sbb
add
xchg
cmc
pop
jg
adc
enter
invd
and
rorb
shr
es
mov
dec
add
xor
pop
inc
iret
out
jmp
jl
testl
push
negb
jge
rorb
rcl
frstor
add
iret
sbb
cmp
pop
popa
loopne
cmp
fbstp
movsl
mov
mov
add
enter
push
dec
arpl
mov
mov
xchg
imul
jo
setb
je
imulb
imul
jns
xor
ss
adcb
ss
outsl
orl
test
flds
int3
movsl
in
xchg
add
scas
pop
push
cmp
xor
mov
mov
cmp
imulb
inc
dec
cli
mov
mov
push
pop
inc
mov
jle
andl
loop
jl
jno
adc
dec
ret
imul
mov
out
jns
inc
mov
or
arpl
clc
xchg
in
imul
dec
or
inc
in
jb
movsl
pop
push
fstpt
lock
sub
xchg
and
jp
add
out
sbb
icebp
ljmp
cmp
adc
cmp
xor
sbb
mov
aas
add
push
mov
xlat
push
bound
sbb
daa
fsub
ffreep
repz
inc
call
fcoms
jno
addl
cmp
mov
jbe
inc
jmp
xor
xchg
xor
sbb
cmp
clc
js
jg
jp
push
mov
inc
subl
xlat
inc
pushf
xlat
rcrb
lret
inc
xchg
mov
or
sub
loope
xor
lcall
in
xchg
nop
cli
mov
mov
fists
mov
pop
pop
mov
dec
xchg
mov
xchg
negl
int3
mov
mov
mov
ret
push
pop
mov
add
jne
mov
mov
test
bound
xorb
or
add
test
movsl
jp
or
mov
xchg
neg
push
push
xchg
mov
sbb
fwait
mov
xor
mov
addr16
mov
push
insb
or
or
sub
push
dec
stos
inc
ds
push
fucomip
mov
pop
xchg
fdivrl
jb
add
out
sbb
add
xchg
inc
inc
dec
dec
jg
jge
jb
aam
jns
repz
shlb
pop
mov
push
imul
ljmp
dec
add
sub
mov
stos
rolb
push
push
and
sbb
add
cmp
xchg
adc
in
dec
les
cmpsl
in
and
inc
or
clc
stos
sbb
mov
aam
xchg
test
lahf
pop
imul
testb
cmp
repnz
push
cmp
call
test
stos
nop
inc
icebp
sbb
adc
ds
mov
adc
imul
popa
push
xor
loop
outsb
and
and
pop
inc
xlat
push
inc
add
jne
and
pop
push
jno
mov
out
das
jbe
lock
add
cmp
push
add
jmp
stos
in
test
jge
cli
dec
fadds
xor
adcb
mov
aas
mov
or
add
mov
pop
push
jge
faddl
cmp
cmp
cmp
mov
pop
mov
clc
jp
jns
inc
out
jg
ss
lcall
ret
notl
inc
repnz
push
jne
sub
mov
pop
lods
mov
mov
lcall
cmp
pop
mov
mov
cltd
std
xchg
jns
dec
or
bound
shll
jnp
mov
cwtl
dec
jo
sub
or
sbb
inc
xchg
in
pop
nop
sbb
xchg
hlt
psadbw
stos
and
mull
rcll
or
loope
xlat
cmc
xor
xor
and
das
mov
jmp
mov
inc
mov
shrb
les
adc
mov
sub
push
mov
sbb
test
mov
mov
loopne
pop
mov
and
arpl
lods
pop
aad
imul
push
mov
inc
lret
dec
adc
loop
inc
loope
dec
push
aam
adc
out
icebp
fs
pop
dec
dec
or
add
push
sbb
sbb
je,pn
pop
adc
in
sti
pushf
jb
push
lret
or
lods
xor
pop
jb
pop
xor
fwait
hlt
pop
cmp
aad
pop
clc
sbbl
movsl
fisubl
dec
sub
xlat
sahf
lea
ljmp
loop
ret
lods
icebp
addr16
push
lock
aaa
cmpl
mov
mov
nop
int3
addr16
mov
dec
xchg
fldenv
ss
inc
daa
push
outsl
hlt
jb
mov
mov
stos
scas
scas
or
cmp
icebp
cld
jecxz
dec
and
and
push
or
lret
dec
lcall
jns
push
sub
sub
daa
mov
pusha
aaa
cmp
cmp
jmp
cltd
daa
faddl
mov
aas
and
sbb
popf
or
sub
lcall
insb
xchg
dec
jle
or
xchg
aas
inc
cltd
into
cmpsl
ss
std
insb
rolb
ja
or
popa
fbstp
jecxz
xchg
push
jmp
jp
jbe
insl
lret
paddusw
notb
dec
push
ljmp
scas
movsb
in
clc
fsubp
cltd
pop
aad
out
lret
dec
inc
in
pop
testl
mov
insl
dec
lret
mov
sbb
xor
xchg
bound
subb
ds
and
cmpsl
xchg
gs
cmpsb
cmp
mov
test
icebp
push
cmp
push
xchg
sub
notb
sbb
mov
pop
fldenv
inc
repz
shlb
out
add
pop
adc
adc
sbb
jb
push
aad
aaa
sbb
mov
bound
mov
lea
je
dec
xchg
pop
inc
daa
xchg
or
push
xchg
jne
sahf
cmpsb
xchg
hlt
fwait
jno
nop
push
data16
push
mov
xchg
fldcw
jmp
lret
pop
jg
testb
dec
pop
cltd
insb
xorb
jp
roll
mov
lcall
rcrb
dec
sbb
std
lods
cmp
push
daa
sub
in
loope
sbb
lcall
sarl
rcll
xchg
pop
add
adc
ficompl
cmp
fldt
jno
pop
add
fnstenv
xorl
add
push
adcw
nop
mov
inc
mov
cmp
cmp
xor
test
lcall
mov
rcrl
out
out
jge
shlb
mov
pop
out
jmp
es
out
mov
mov
stos
jecxz
rcrb
jnp
mov
aad
xor
cmpsl
sub
shrl
call
mov
mov
add
mov
pop
dec
stc
outsl
sti
mov
rolb
decb
add
sbb
mov
xchg
mov
rolb
lea
out
aam
push
mov
clc
and
xor
xor
mov
mov
jne
cwtl
fcomip
and
movsl
mov
mov
mov
int3
cmpsb
add
rorl
xchg
mov
push
and
fisttpll
sub
pop
fistpl
dec
clc
cmp
or
jne
sbb
inc
jbe
das
jmp
iret
imul
inc
stos
test
mov
lahf
ret
pop
pop
addr16
enter
outsl
cmpsb
cld
scas
enter
sub
pusha
lods
rep
addb
xchg
in
ja
jl
iret
pop
jge
mov
xor
scas
aad
and
sub
inc
push
lret
roll
ds
xlat
nop
xchg
push
aam
mov
xchg
sbb
loop
mov
fbld
jp
aam
pop
sti
aas
mov
adc
sbb
out
push
push
and
mov
lahf
cltd
js
inc
add
test
dec
xchg
iret
out
and
aas
pop
out
cmp
les
push
and
push
xchg
add
mov
rcrb
and
mov
enter
ja
rolb
js
cltd
js
das
in
int
or
dec
mov
jnp
mov
mov
adc
jle
sub
add
leave
fwait
mov
mov
scas
sub
or
mov
call
pop
or
cmpl
jp
mov
xchg
lahf
cmp
pop
jecxz
subl
xchg
mov
xlat
adcb
test
cmp
repz
lret
jnp
sbb
fisubs
mov
dec
inc
adc
and
cmp
inc
cmp
fisubl
mov
or
lods
push
mov
add
clc
icebp
test
xchg
aam
jp
cwtl
iret
xchg
jae
sub
jbe
mov
adc
repz
jge
jp
push
je
dec
mov
fcomps
addr16
test
add
mov
call
xchg
cwtl
ljmp
mov
mov
pop
or
fcomps
mov
rclb
sub
test
mov
push
jbe
jno
xlat
cmp
leave
std
or
inc
aaa
int
addr16
les
icebp
mov
or
dec
or
push
push
mov
mov
jp
dec
out
dec
pop
sbb
aam
rcll
xor
dec
mov
xor
mov
mov
inc
jnp
dec
sub
imul
cs
xor
or
fcomp
cmp
lods
mov
inc
mov
adc
or
loopne
xchg
ret
loope
fstps
das
lahf
mov
mov
xor
xor
insb
jne
mov
jb
pop
mov
ret
sahf
aaa
cmp
inc
mov
aad
movsl
mov
lea
stos
xor
aas
add
sbb
push
jnp
lock
leave
insl
and
cld
and
mov
stc
add
add
inc
fdivrp
pop
rclb
sub
pop
mov
cli
adcl
outsb
and
sub
cld
mulb
mov
cwtl
push
daa
fcoml
loopne
out
sub
insb
shr
call
or
scas
xchg
fidivrl
dec
jl
daa
cmp
stos
sub
fldenv
scas
fs
sbb
cli
xor
xlat
mov
cmp
out
lcall
cmc
mov
shll
div
js
and
sub
js
inc
mov
clc
cmc
shll
daa
aaa
insb
xor
cmp
bound
dec
dec
mov
push
in
mov
adc
jl
inc
dec
dec
cmc
dec
xchg
ja
or
nop
add
lret
xor
push
insl
add
cmpsl
lahf
leave
jl
mov
jae
jg
leave
mov
mov
vcvtsd2ss
xchg
out
add
or
or
jmp
js
and
pop
cmc
inc
add
mov
xchg
shll
andl
lock
jmp
repz
lahf
sub
sub
inc
jle
xchg
cmc
sbb
fbstp
jns
movsl
fisubs
push
xchg
jmp
push
cltd
jb
stc
dec
int
mov
cmpsb
pop
dec
popa
scas
rcrb
bound
push
lds
cmpsl
push
adc
stos
jl
outsl
stos
jne
cs
ficompl
xchg
out
mov
mov
or
movsl
pop
or
mov
ja,pt
sub
outsb
and
push
iret
push
mov
into
cmc
or
and
push
out
fs
xchg
xor
cmpl
clc
les
iret
lahf
dec
out
in
add
fdivrl
jnp
add
cmp
mov
bound
or
testb
dec
popf
xchg
xchg
mov
push
jl
sbb
push
adcl
js
pop
mov
loopne
das
xor
xor
lock
dec
inc
jnp
iret
push
pop
xor
jmp
fnstsw
sti
push
and
in
mov
lods
xchg
pop
insb
cmpsl
pop
mov
fsub
cmp
data16
nop
push
inc
cmc
out
push
sbbl
dec
xlat
push
jo
repnz
push
lods
inc
pop
mov
jg
movsl
push
sub
movsb
xchg
scas
je
xor
jb
call
and
xchg
fsubrl
in
adc
or
push
mov
ficoms
popl
xor
fsubs
int3
and
add
jp,pt
std
or
cmp
inc
push
add
pop
imul
jecxz
and
jae
sbb
subl
jl
xchg
push
add
int
lret
in
pop
cwtl
xchg
out
xchg
shl
loope
pop
push
aas
mov
aad
inc
lret
pushf
leave
adc
jae
jbe
mov
filds
xlat
pop
sub
pop
mov
jg
comiss
ljmp
jo
in
insl
into
cltd
sbb
sbb
movsl
ror
dec
pushf
push
cmp
sbb
test
push
pop
cmpsb
popf
sub
out
push
mov
fwait
jecxz
mov
xor
push
xor
dec
lahf
adc
xchg
fldenv
jg
scas
mov
mov
push
fdivl
fimuls
shrb
dec
sub
es
and
or
inc
push
mov
push
in
cmpsb
repnz
cld
push
push
xor
mov
mov
movsl
adc
cmc
add
mov
pop
sbb
fdivrs
repz
ds
fwait
ss
arpl
ljmp
jo
outsb
fnstenv
addr16
out
test
cwtl
repz
dec
dec
add
sbb
sbb
inc
adc
jge
sbb
xchg
cld
sub
push
dec
inc
ds
jge
or
dec
sub
dec
in
and
add
mov
cmc
jle
neg
or
inc
clc
sub
sbb
in
mov
lods
ficomps
out
jnp
fstpt
push
popa
add
mov
gs
add
fidivrs
sub
es
shl
stos
ss
xor
xlat
or
or
jns
ja
lret
cs
pop
mov
lret
iret
mov
push
mov
loopne
inc
and
mov
imul
lret
pop
pop
pop
andl
mov
outsl
inc
pop
jb
aas
xchg
dec
lret
xchg
popf
rorl
mov
pop
std
mov
pop
aas
in
ljmp
pop
aaa
movb
hlt
bound
mov
jo
stos
cmp
xlat
mov
jo
lock
fwait
pop
xchg
cmp
stos
jg
dec
mov
jl
scas
xor
daa
jnp
mov
mov
outsb
ficoms
or
imull
push
xor
adc
push
cmpsb
popa
lds
mov
lahf
imul
fs
sbbb
les
xor
lret
adc
mov
cmp
xchg
xor
sbb
dec
vpmacsswd
or
repnz
inc
lock
sahf
loop
sub
mov
lcall
pop
imul
hlt
hlt
add
fcompl
mov
pop
jl
adc
mov
aam
es
fdiv
xor
scas
movsl
jne
push
xchg
ret
sbb
lea
sbb
and
das
testb
mov
and
data16
sub
lahf
pop
jg
mov
daa
xchg
lahf
sbb
enter
mov
jg
ss
add
add
stos
out
xchg
adc
push
sti
mov
fbld
lock
cmp
imul
icebp
adc
sub
repnz
push
enter
pusha
dec
mov
sub
fnstsw
insb
ficomps
mov
scas
jbe
lds
ret
cs
jge
mov
in
repz
jl
int3
sti
sahf
ss
push
add
clc
inc
push
outsb
ljmp
dec
loop
in
adc
add
and
into
or
movsl
xor
jne
ss
rorb
lock
pop
xor
notl
stos
sub
idivb
cmp
aaa
ds
jmp
jmp
xabort
scas
nop
test
fs
fnstcw
mov
fimull
ljmp
in
es
andl
and
shlb
cmpsb
cmp
and
jbe
push
imul
imull
movsl
int3
sahf
xchg
pop
imulb
mov
mov
aaa
sar
jp
fwait
jl
cmp
sbb
hlt
movsl
fdivs
xchg
sub
push
push
inc
mov
pop
and
ljmp
mov
movaps
in
cltd
pop
imul
imul
adcl
in
std
shl
cltd
lock
push
repz
mov
rol
fst
int
insb
pop
imul
dec
fistpll
fidivrl
mov
rcl
pop
popf
xor
ret
mov
popa
pop
out
std
lods
ja
mov
sbb
movsb
mov
imul
dec
cs
out
push
arpl
mov
cmpsl
xchg
mov
roll
fstps
xchg
pop
ror
mov
push
lds
cltd
cmpsb
pop
add
mov
dec
sbb
lret
das
add
fiaddl
xor
lret
push
addr16
sub
repz
mov
adc
push
push
adc
cmp
pushl
jae
push
outsl
in
cltd
dec
mov
add
inc
pop
jnp
jp
inc
imul
push
icebp
lds
jmp
xor
insb
test
dec
mov
sbb
and
fdivr
xor
imul
shrb
sub
scas
mov
out
sub
movsl
jne
mov
cmp
xor
dec
ds
push
push
lret
push
dec
sub
jmp
cmpsl
jnp
mov
sub
or
jl
pushf
push
iret
sbb
or
call
out
dec
inc
inc
mov
sbb
jecxz
add
xchg
or
cwtl
mulb
mov
cmp
pop
mov
and
scas
jnp
add
mov
hlt
mov
push
test
lods
lock
mov
xchg
imulb
push
ds
jge
jmp
std
test
ljmp
cmp
cmp
into
inc
aaa
in
sbb
leave
aaa
pushf
jns
mov
adc
imul
pop
mov
fucomp
hlt
add
sub
cmp
jp
mov
sbb
xchg
dec
aad
sahf
push
dec
sbb
lret
mov
cmpsb
mov
fcomip
fdivs
mov
push
add
pop
aas
sub
jb
inc
repz
sub
pop
repnz
imul
xchg
add
pop
sbb
adc
inc
jne
push
rcrl
jno
jge
mov
inc
outsl
imul
inc
fstpl
mov
pushf
pop
out
add
fstpl
aas
mov
call
sbb
jge
mov
xlat
and
dec
loop
lret
or
ficoms
adc
ss
or
push
mov
push
arpl
leave
sub
cmp
fmuls
nop
out
addr16
test
test
addr16
push
movsb
xchg
pop
popf
scas
leave
jae
stc
jno
dec
sub
pop
popa
shrb
mov
pop
sbb
jle
imul
adc
test
adcb
pop
cltd
inc
jecxz
inc
imul
mov
nop
or
sbb
shlb
mov
loope
aaa
nop
mov
cmp
fprem1
jne
jnp
ret
lcall
insl
ja
pop
cmpsl
jb
js
addl
inc
fimuls
xchg
cmp
lods
test
fnstsw
jnp
sbb
dec
jmp
sahf
incl
mov
and
cmp
fsubrs
stc
cmp
or
or
mov
push
rcrb
stos
cs
xchg
addr16
push
addr16
cli
daa
adc
scas
aam
jo
sar
cmp
jmp
push
nop
xor
cmp
fcomps
mov
test
jne
mov
mov
mov
jno
stc
jge
mov
jo
mov
add
outsb
add
jge
mov
inc
repz
out
ds
cmp
jmp
lahf
xor
test
mov
add
fnstenv
dec
push
ret
mov
lock
lods
pop
mov
das
pop
xchg
icebp
out
mov
adc
out
pop
mov
add
shlb
mov
dec
inc
push
xchg
orl
cmc
mov
cmp
sub
or
mov
shrb
jno
outsb
jmp
arpl
mov
mov
inc
jmp
adcb
push
jae
or
fnstsw
stos
fildll
mov
data16
add
movsb
fiadds
push
mov
out
push
cmp
xor
or
test
mov
jno
adc
int
scas
lcall
data16
mov
adc
cmp
imul
mov
jmp
adc
jo
pop
dec
or
dec
sbb
xor
and
pusha
pop
mov
scas
mov
pop
and
mov
pop
and
pop
test
push
add
mov
cmp
adc
les
xchg
sbb
test
push
dec
imul
adc
inc
jnp
mov
imul
xor
mov
fimull
in
std
int3
mov
test
pushf
inc
lcall
lcall
mov
lods
cmp
mov
testl
das
mov
jge
cmp
jmp
adc
and
les
rorl
xchg
clc
push
fs
test
cmp
xor
mov
push
sbb
stc
push
lds
xlat
dec
sti
mov
cli
mov
push
jecxz
or
aam
int
leave
and
xchg
adc
jg
lods
push
into
sahf
or
scas
fld
push
xor
xchg
mov
imul
movb
push
sbb
imul
test
push
inc
pop
mov
rcr
lcall
clc
dec
sbb
cltd
dec
aad
xchg
loop
mov
hlt
pop
dec
dec
jl
mov
aas
shr
addr16
loop
jnp
pop
loope
lock
mov
loopne
jb
scas
aaa
sti
daa
mov
jno
mov
pop
xchg
and
sub
fistl
ret
rcrl
inc
enter
xchg
leave
dec
cwtl
mov
fiaddl
nop
xchg
xchg
dec
mov
pop
in
xor
out
iret
adc
pop
pop
inc
cltd
jp
add
lahf
inc
add
xor
mov
push
push
or
xchg
inc
mulb
stos
call
ss
and
mov
or
pcmpgtw
push
test
lret
pop
xor
and
rcl
or
mov
pop
jnp
and
fiaddl
or
jg
cwtl
sbb
adc
fs
and
push
mov
popf
sub
adc
mov
mov
xor
inc
aad
push
adc
pop
pop
sahf
mov
in
jmp
mov
xor
movsl
insb
mov
jae
sub
addb
pusha
cs
push
push
or
fisttpl
cmp
sahf
cmpsl
mov
outsb
pop
sub
sbb
mov
xchg
insl
jmp
jmp
add
xor
xchg
mov
xor
adc
sti
jmp
sub
pop
lret
outsl
sbb
cmc
mov
dec
shr
xor
dec
icebp
ror
cmpsb
stos
mov
fstl
xor
cmp
mov
dec
mov
leave
lds
cmp
cld
xor
orps
adc
repz
stos
push
mov
out
jmp
xchg
shlb
jns,pn
inc
sub
cmc
fsubp
imul
lldt
jae
jp
inc
inc
xor
movsl
repz
imul
rol
daa
cmp
mov
aaa
test
mov
mov
faddp
or
jb
push
sub
and
stos
xor
xor
xchg
inc
mov
icebp
push
jbe
lahf
jnp
cmp
jl
and
mov
and
addb
fwait
daa
sub
or
push
out
loope
stos
push
mov
and
mov
loop
pop
push
inc
cmpl
cmpsb
and
test
jns
add
xchg
xchg
mov
sub
icebp
push
jp
inc
fstpl
loope
jp
add
cmp
xor
push
stos
testl
imul
shll
dec
cmpsb
data16
mov
xchg
sub
fwait
xchg
mov
jl
fists
in
inc
lahf
orb
sbb
and
jmp
mov
sub
xchg
fimuls
mov
add
cs
cmp
jbe
mov
pop
sbb
xchg
cli
pop
push
pop
fldl
inc
push
sbb
das
rcll
xor
sbb
mov
cltd
mov
mov
insb
or
push
xchg
inc
out
pop
pop
xchg
jne
mov
mov
lret
mov
jbe
add
outsl
fwait
pop
das
cld
mov
or
add
hlt
mov
aam
jbe
enter
sbb
sub
jle
out
aam
or
into
lahf
cmp
add
cli
inc
inc
xchg
std
shl
ds
sbb
pushf
sbb
or
sbb
lea
cli
lret
ljmp
mov
aas
cwtl
ret
jle
outsl
cmp
clc
pushf
repz
dec
test
push
cwtl
test
rcl
testl
mov
mov
pop
push
aaa
outsl
cmp
movb
inc
mov
dec
stc
pop
mov
adc
test
ret
mov
les
or
js
adc
js
lret
push
dec
jl
xchg
mov
xchg
mov
push
mov
imul
repnz
mov
int
ret
out
cmp
ds
push
mov
push
loope
fcomip
jle
in
test
mov
cmpsb
dec
adc
sbb
test
ret
push
xor
fs
sti
pop
icebp
jmp
adc
pop
data16
mov
test
mov
lock
enter
daa
popf
imul
pop
push
lret
jmp
jp
scas
cmp
sbb
aas
cwtl
stc
sub
xlat
ljmp
cld
fmuls
and
jecxz
push
xchg
xlat
arpl
mov
jnp
ret
push
pop
lahf
test
sbb
sbb
enter
jge
shll
sub
push
jae
cltd
enter
iret
xchg
out
imul
jno
std
ja
push
pop
loop
es
pushf
jle
cld
push
inc
aas
sub
stc
jno
or
xchg
rcl
sub
movsl
cmp
and
jl
mov
mov
cmp
pminub
scas
jo,pn
ss
sub
xchg
or
xor
jl
test
ljmp
ficoms
jnp
std
call
divl
sbb
jecxz
ja
cli
push
jmp
sub
addr16
imul
movsl
or
loopne
or
jns
nop
in
jns
pop
arpl
rcrl
xchg
outsb
sbb
xchg
jne
jno
shlb
das
in
xchg
sub
add
imul
sar
lea
jns
push
inc
inc
sbb
sbb
mov
pop
cwtl
stc
and
aad
lcall
mov
into
subb
jnp
xor
cmc
ss
pop
adc
cmc
push
xchg
cmc
xchg
cltd
stos
ret
movsl
or
add
xor
pop
push
adc
out
ret
pusha
xchg
push
dec
xchg
shl
dec
test
add
cmp
roll
movsb
cmpsb
cs
loop
test
shlb
cwtl
popa
push
pusha
imul
rolb
lahf
imul
sahf
and
mov
push
xchg
cwtl
cmp
jmp
iret
jmp
cs
daa
mov
ret
xchg
cwtl
lcall
cmp
xchg
push
js
xor
sub
call
rcl
lahf
sub
aas
lods
jbe
mov
hlt
movsl
pushf
xchg
jle
subl
gs
inc
rcrb
dec
sahf
femms
inc
xchg
fcos
rcll
fisubrs
xchg
fistpll
jno
or
dec
loop
jge
jecxz
shrd
cmp
sub
push
mov
adcl
out
mov
movsl
arpl
stos
fldcw
in
mov
imul
fildll
lcall
aaa
cmp
push
movsl
jne
mov
adc
loope
mov
imul
or
dec
pop
pop
mov
insl
mov
xchg
add
in
rcrb
adc
pop
pop
test
mov
in
xchg
fwait
jp
int
std
daa
and
ljmp
sbb
lods
insl
cli
or
push
loopne
sbb
ret
fwait
xor
iret
stc
jl
sarb
xor
testb
fwait
sbb
icebp
jb
jb
or
and
stos
imul
in
push
out
xchg
mov
xor
mov
inc
ret
mov
add
pop
jnp
daa
jo
sbb
mov
loopne
mov
aam
add
daa
pop
cmp
pop
add
dec
jns
mov
mov
mov
cltd
rcr
push
leave
jns
in
mov
lea
jl
mov
test
rorl
pop
jg
and
pop
stos
add
std
push
ret
pop
sti
or
jle
mov
int3
dec
cmp
movsl
jmp
xchg
aad
mov
pop
fistps
das
jecxz
popf
xchg
jb
xchg
mov
add
pop
loop
cmp
sub
fisubl
jns
out
in
sub
push
and
push
xchg
insl
and
mov
int3
and
xor
xchg
test
sub
dec
mov
xchg
repnz
test
mov
add
mulb
scas
sbb
add
xor
mov
movsl
xor
inc
mov
in
dec
movsb
push
pop
out
xlat
cmp
rolb
fwait
xchg
sub
or
sbb
lock
mov
mov
inc
push
ljmp
out
sbb
xchg
movsl
or
inc
adc
mov
lods
lret
dec
andb
xchg
add
mov
and
pop
add
das
mov
adc
gs
xchg
cmpl
sbb
or
insl
ffree
ucomiss
das
jmp
cmpsb
add
loop
fs
pushf
mov
adc
sahf
das
push
and
adc
sti
jns
stos
or
mov
pop
ljmp
and
icebp
ret
cmp
popa
pop
mov
lret
test
mov
add
inc
or
adc
pop
cmpsb
jle
daa
lea
fisubl
test
leave
shrb
mov
inc
add
lock
int
jbe
cmpsl
and
stc
subl
adc
adc
push
fwait
stos
scas
jb
mov
in
out
push
sub
lahf
lods
push
mov
das
sub
push
xor
fstpl
cmc
sbb
xor
bound
mov
jp
xchg
sidtl
lret
push
or
jne
ja
repz
sub
outsb
movb
leave
pop
les
push
rcrl
aas
movsb
and
rolb
and
pop
mov
adc
movsb
adc
mov
inc
jmp
rclb
jmp
xor
jecxz
jecxz
cmp
and
and
xchg
sbb
dec
pop
push
fcoml
jge
fnstenv
xchg
mov
cmpl
mov
in
mov
jle
mov
pop
int
shll
or
sub
lods
mov
fiadds
pop
ss
int3
or
xchg
lret
push
and
jge
fcmovne
pop
pusha
pop
aam
cmp
dec
inc
into
mov
stos
or
sti
out
push
dec
mov
ss
inc
lea
pop
ret
xchg
and
inc
scas
inc
movsl
sub
or
data16
fildl
clc
ja
andl
adcb
mov
js
pop
cmp
push
cld
adc
cmpsl
rcll
pop
repnz
lods
dec
mov
jp
call
pop
push
fnstenv
add
shrb
push
sbb
jle
movsb
out
sub
cs
cmpsb
sub
pop
out
jp
add
mov
mov
movsb
add
xor
inc
in
out
add
outsl
sbb
pushf
or
push
fcoms
mov
cmovae
arpl
and
push
nop
mov
cld
addr16
mov
imul
and
in
lret
mov
jne
cmpsb
stos
push
mov
rorl
bound
imul
fcoms
xchg
insb
jmp
xchg
hlt
mov
pop
mov
adc
dec
call
loopne
fsubl
mov
push
mull
outsl
lock
sbb
mov
dec
fiaddl
lods
jge
mov
xchg
ficoms
call
testb
jge
popa
std
pop
cmovae
cs
clc
dec
loopne
ss
fwait
jle
out
es
loopne
aaa
cmpsl
jns
sti
mov
or
aaa
stos
sbb
mov
and
cld
sub
add
xor
mov
shrb
jecxz
push
into
shrb
ficoml
loopne
sti
adcb
ss
mov
aas
pop
out
dec
mov
mov
lock
pop
rcl
dec
push
push
cmp
repnz
scas
push
dec
cmp
outsl
dec
cmp
popa
sub
idivb
mov
int3
jg
int
push
stos
jg
into
movsl
imul
jg
dec
rclb
int
push
mov
dec
adc
aaa
lods
data16
inc
dec
and
cmp
jne
pop
int3
repnz
ljmp
das
idivl
test
jmp
js
ficoms
adc
data16
cmpsl
pop
jecxz
adc
sub
mov
push
add
sti
add
shr
movzwl
jmp
mov
cwtl
jle
and
inc
rcrl
jg
inc
lods
and
mov
scas
lods
jo
subl
addr16
inc
test
mov
xor
lahf
mov
pusha
std
mov
insb
mov
mov
int
xchg
shll
scas
cmc
int3
add
insl
add
xor
push
fsub
push
push
pop
fidivl
movsl
sbb
dec
mov
fsubrp
and
dec
mov
mov
fwait
jg
inc
cmc
insb
outsl
sbb
dec
jbe
das
cmp
mov
adc
push
cs
or
outsb
or
pop
jl,pt
jmp
mov
push
leave
adc
sub
and
jo
es
sbb
gs
imul
lret
lock
xchg
fdivl
test
jbe
jne
mov
inc
cmp
cmp
lock
jmp
ljmp
push
mov
add
dec
xor
les
dec
lea
cltd
in
xchg
cld
xchg
out
lret
mov
mov
movsb
cmc
dec
mov
or
mov
mov
je
shll
ret
adc
pop
pop
popf
push
fnstsw
stos
in
out
repz
orl
mov
outsb
mov
shr
loopne
xor
mov
adc
fsubr
fs
test
sub
push
in
incb
mov
sub
jbe
mov
cmp
inc
test
int
adc
cld
push
mov
dec
cmpsb
xor
xor
and
sub
es
lods
jno
xchg
je
shll
cwtl
mov
enter
jno
loope
add
fistpll
cmp
popa
mov
inc
xor
cmp
fwait
adc
jns
data16
aad
sub
jb
lcall
fwait
cs
outsl
jge
mov
cld
mov
sub
ret
setge
je
xor
pop
mov
mov
and
int3
xchg
xor
or
dec
push
pop
dec
mov
xor
rclb
pop
inc
push
repnz
dec
out
popa
xor
jns
sahf
sbb
jno
fcompl
add
jge
loop
xchg
pop
jb
pop
mov
rclb
jno
inc
xchg
repz
fildl
or
fnstsw
add
jns
or
push
sub
mov
orl
push
imul
outsl
in
je
mov
stos
cmp
cld
inc
sti
mov
jmp
loop
repz
fidivl
loope
je
call
pop
mov
sbb
scas
hlt
add
push
cmpsb
lods
mov
mov
fwait
xor
sbb
cmp
mov
push
or
xchg
imul
sbb
push
ret
push
sar
je
sbbl
xchg
test
inc
mov
sbb
or
mov
fisubrs
inc
cwtl
in
jae
adc
fs
mov
mov
sub
int
xor
icebp
cwtl
out
cli
jo
mov
push
mov
dec
mov
pushf
in
in
pop
jle
pop
jnp
fnstcw
inc
cld
rcll
mov
daa
test
xchg
and
mov
cwtl
mov
lahf
mov
push
jo
fwait
mulb
sub
push
jno
dec
push
inc
ljmp
movsb
add
cmpsb
das
jbe
iret
in
xchg
rcrl
and
sub
les
sub
les
adc
push
jp
ja
xchg
and
test
sbb
adc
pop
imul
add
mov
aam
pusha
xor
cmpb
pop
inc
out
xchg
adc
inc
dec
xor
jnp
gs
sbb
or
ficoms
mov
pushf
cmove
out
inc
inc
loop
aad
inc
repnz
push
call
cmp
fwait
or
jp
xchg
dec
add
aad
xor
nop
xor
jg
leave
mov
test
push
jmp
jp
aas
movsl
mov
or
mov
or
or
xor
andb
xchg
dec
out
or
ss
daa
in
ficomps
push
cltd
enter
pushf
imul
dec
rorl
mov
pop
inc
push
mov
shll
jle
and
lret
push
adc
rcll
or
stos
and
jmp
mov
sbb
mov
jg
js
aad
or
aas
mov
mov
outsb
xor
jbe
test
push
xchg
dec
pop
fdivl
sti
adc
out
pop
push
push
enter
and
cmp
cmp
xchg
xor
xor
push
je
call
out
dec
ficompl
cmpsl
lock
loopne
gs
inc
push
aam
sbb
xor
push
popa
xchg
mov
mov
mov
wbinvd
xor
addb
ja
popa
or
dec
insl
inc
adc
fs
and
testb
inc
aad
gs
lock
aaa
call
dec
incl
les
ss
add
push
gs
adc
stc
sbb
std
ret
jns
js
mov
and
dec
pop
pop
jle
pop
gs
pop
lock
pop
dec
das
out
push
mull
incb
lahf
push
inc
cmovp
push
ret
xchg
popa
repnz
cmp
pushf
add
iret
push
xchg
stos
mov
sub
sbb
lcall
xchg
bound
cmp
sbb
fisttps
adc
cmp
dec
sbb
lods
dec
adc
es
test
xor
jo
mov
sbb
cmp
jg
hlt
data16
adc
filds
mov
xor
jno
push
xlat
pop
or
imul
push
pop
std
aas
es
aas
mov
mov
add
push
sti
mov
or
push
adc
dec
fiaddl
popf
xchg
pop
inc
es
pop
sub
jnp
imul
mov
dec
push
and
icebp
pop
ret
inc
mov
bound
testb
jp
mov
pop
jnp
inc
aaa
mov
xor
xchg
jge
das
leave
mov
inc
inc
adc
sbb
stc
inc
dec
pop
add
mov
nop
mov
mov
insb
jl
adc
sbbb
pushf
lahf
add
fisubl
in
mov
pop
xchg
xchg
mov
repz
mov
sbb
mov
popa
cli
shll
or
syscall
or
ljmp
btl
mov
movsb
aad
dec
roll
and
leave
cmp
xor
test
pop
jbe
shlb
cmc
imul
popf
cltd
cmpsb
push
mov
sbb
adc
stos
incb
push
adc
pop
sub
shll
adc
or
inc
cltd
mov
ds
enter
or
cmp
push
jle
jbe
hlt
stc
jno
ds
fwait
mov
mov
sbb
push
es
cmpsl
xchg
sbbl
int3
xlat
aam
popf
out
ret
cmpsl
add
jne
fstl
cmp
ret
pop
aas
int
sbb
jp
dec
xchg
xor
cmpsl
cmpsl
mov
cmpsb
sti
sbb
xor
out
call
movsb
pop
lds
ret
add
mov
rorb
aaa
mov
and
jns
imul
ds
icebp
dec
cmp
jb
js
aaa
scas
push
movsb
lret
jns
in
data16
hlt
sahf
lods
cwtl
and
cmp
or
adc
dec
cmp
test
test
into
pop
push
lret
and
stos
push
mov
dec
xor
xchg
aas
push
call
mov
cmpsl
fdivrl
or
scas
push
out
ficoms
jecxz
in
ret
push
int
jbe
mov
adc
and
cmp
mov
clc
mov
pop
inc
or
xorb
and
lret
loopne
push
clc
enter
repnz
fsubs
stos
out
mov
pop
data16
push
dec
dec
js
mov
cmpsb
pop
sarb
outsb
mov
fwait
dec
fldcw
stos
dec
pop
imul
divl
cmp
cmp
dec
mov
push
cltd
lds
xor
xor
shrl
out
or
add
sbb
xchg
xor
cmp
idiv
sub
or
movsl
cltd
pop
iret
lret
fwait
mov
sub
lds
imul
or
cwtl
scas
jp
addl
push
aaa
bound
rcrl
inc
cwtl
cmc
ret
push
jmp
loopne
add
mov
or
sub
adc
movsl
jmp
mov
jbe
sbb
lea
scas
xchg
stos
sbb
shrl
or
pop
add
sbb
fcmovne
fcmovbe
mov
inc
pusha
adc
int3
jg
sbb
xorw
sub
pop
loope
icebp
rcl
pop
inc
mov
adc
cmp
es
fisubl
mov
or
jl
jno
mov
aad
lret
fistpl
cmpsl
xor
lods
cmp
pop
sub
lock
dec
mov
popf
mov
inc
sti
fisubl
push
push
inc
test
sbb
xchg
mov
arpl
and
jb
stc
jl
sub
push
sbb
mov
roll
xor
add
mov
mov
test
aam
shl
jno
or
jmp
mov
rol
adc
es
sub
scas
test
test
push
cmp
out
pop
in
int
fisubrs
jmp
pop
lret
and
xchg
imul
in
or
mov
stc
xchg
cmp
ret
xlat
outsl
pop
fistpll
mov
and
mov
inc
cmp
add
inc
das
mov
inc
out
into
xlat
xlat
and
pop
and
lea
stos
outsl
xchg
sub
pushf
pushw
in
jmp
cmpb
shlb
pop
cmc
add
enter
int
sti
loopne
or
lahf
sub
add
ret
jnp
mov
xor
inc
adc
mov
subb
jp
pop
stos
and
cs
mov
jle
loopne
enter
pop
and
mov
jp
cmp
out
push
pop
mov
or
dec
sarb
cmpsb
or
test
and
cmpl
and
outsl
fsubrs
add
xchg
enter
fidivl
shll
pop
pop
adc
mov
enter
subb
add
pusha
and
test
daa
add
pop
lods
roll
daa
sahf
xor
lds
jnp
pushf
xor
bound
fisttps
pushf
repz
sahf
inc
sub
popa
sbb
adc
jnp
cmpsb
add
test
int
xchg
mov
sbb
mov
sbbl
fwait
sbb
cmp
and
rcrl
ss
inc
ds
inc
xchg
movsb
and
scas
add
lods
adc
scas
xchg
adc
pop
addr16
rorb
pop
or
stc
out
adc
jo
hlt
inc
dec
aad
mov
daa
xor
adc
cmp
mov
sub
inc
push
dec
int
mov
jo
fs
rcpps
mov
xor
inc
mov
repz
jge
dec
sub
in
mov
icebp
add
imulb
mov
popa
xchg
jns
mov
jl
sub
adc
aaa
int
pop
mov
repnz
inc
imul
mov
je
lock
push
mov
pop
dec
pop
ret
sbb
push
jns
or
test
scas
es
xchg
gs
sahf
dec
icebp
in
inc
add
adc
leave
sahf
jae
ret
lea
lods
sbb
mov
mov
or
dec
add
nop
cmpsl
stos
insb
out
inc
jge
movsb
sbb
sub
fldl
test
or
test
stos
movsl
ret
push
pop
and
lahf
ret
or
pop
paddd
insl
xor
inc
aad
ljmp
int3
hlt
clc
mov
daa
iret
sub
call
pusha
xchg
or
push
std
jl
mov
or
adc
rclb
adc
and
aaa
mov
xchg
inc
dec
and
xor
dec
mov
xchg
repnz
movsl
arpl
lds
bound
test
pop
and
outsb
xor
xlat
ljmp
pop
not
dec
jle
arpl
int3
sbb
xchg
ret
sub
clc
aam
aaa
jno
add
dec
js
or
mov
icebp
inc
mov
int
or
movsl
das
fwait
cld
jecxz
jmp
lret
sti
or
xchg
mov
dec
jecxz
adcb
lret
adc
ret
sub
jns
popf
sub
jns
inc
mov
xchg
mov
cs
repnz
mov
cmp
repnz
pop
imul
xor
ret
sub
pop
sbb
xlat
and
scas
pop
mov
test
rcrl
cmp
mov
jg
out
or
mov
sti
or
scas
hlt
idivb
jns
xor
sub
fbstp
in
lds
or
xchg
dec
adc
in
mov
inc
cltd
mov
out
push
stos
in
pop
dec
push
movsl
pop
repnz
jb
arpl
dec
movsl
mov
std
in
repz
mov
or
jo
push
adc
inc
sahf
fildl
adc
sbb
mov
cli
jnp
rclb
pop
xor
mov
adc
dec
dec
push
push
mov
dec
mov
sbb
test
in
rclb
pop
cmpsb
xchg
mov
scas
cmpl
cmp
out
sbbb
out
xor
mov
push
mov
mov
cld
stc
loopne
jle
jno
movsb
fs
sub
mov
fcmove
aad
add
aam
jp
rorl
push
fstpl
daa
fucomip
fdivs
sbbb
push
push
or
mov
xor
imul
inc
test
je
icebp
mov
insl
lods
jbe
mov
outsb
push
stos
mov
push
clc
mov
shrb
je
mov
std
stc
push
std
dec
cmp
mov
cmp
xor
pop
xchg
ja
popf
int
dec
xor
or
cmpsb
ds
int
or
inc
mov
xor
add
dec
inc
test
xor
inc
testl
fldcw
mov
notl
movsb
aaa
das
xchg
cmc
fstpl
fimuls
rcr
decb
push
loop
cmp
xor
mov
dec
jmp
pop
sub
popf
cld
pusha
adc
add
push
cmpl
fbstp
sbb
mov
inc
xor
xor
push
xchg
lods
int3
loope
aad
inc
adc
xor
jecxz
pop
shrb
ficompl
cmp
jge
into
shl
int3
out
add
jle
xlat
sub
in
inc
mov
cmp
mov
and
movsl
ja
lods
pop
xor
fsubrp
lea
cwtl
push
sub
mov
mov
lea
push
fwait
and
sbb
mov
xchg
fnstsw
jno
mulb
lea
pusha
mov
in
aaa
aad
sub
sub
mov
into
and
rorl
ds
es
popl
mov
and
jp
adcb
out
jp
lret
cltd
push
in
push
std
shl
popa
leave
sub
pop
stc
jnp
fstpt
jnp
in
xchg
lcall
lods
sbb
loop
out
lds
add
popl
scas
loope
loop
cli
stos
mov
mov
mov
adc
rol
push
fs
out
inc
into
dec
iret
fld
jp
movsw
add
mov
shrl
sub
daa
jmp
push
test
ja
push
sub
and
into
stc
shlb
xchg
lock
popf
enter
cmpsb
inc
and
push
flds
jmp
popa
jmp
xchg
arpl
mov
adcb
pop
sub
mov
ds
pop
inc
test
jmp
pop
cld
imul
movsl
xchg
xlat
and
hlt
je
cmp
imul
mov
rorb
sbb
sbb
jle
mov
xchg
pop
movsl
data16
pop
and
scas
repz
test
push
js
push
mov
in
test
sahf
push
mov
inc
std
scas
pushf
in
adc
cmc
movsb
rol
cmp
or
push
mov
and
dec
mov
adc
adc
fwait
push
into
mov
jge
aam
jge
xor
fcomps
out
popf
dec
and
xor
mov
xchg
sbb
lret
pushf
orb
lock
mov
and
dec
add
sbb
call
mov
sub
cltd
cmpb
mov
dec
jp
mov
push
sbb
or
cli
jg
iret
mov
cmp
inc
cwtl
or
in
and
sbb
inc
imul
dec
js
loopne
push
mov
pop
es
inc
cmp
jmp
pop
cltd
or
xchg
sbb
sbb
pop
adc
cwtl
push
loopne
into
fsubrs
shll
mull
push
dec
or
jp
mov
and
mov
imul
jo
mov
stc
mov
mov
add
enter
inc
cli
ss
pop
insl
lods
out
ja
inc
lods
or
adc
sarb
outsb
mov
add
add
pop
int
mov
and
sub
jns
aad
insl
jle
in
stos
adc
sarb
pop
jg
mov
out
xchg
adc
xor
inc
pushf
dec
movsb
loop
call
scas
cli
test
xor
xchg
xchg
and
sbb
push
inc
aaa
out
xchg
xchg
xor
pop
lods
out
dec
out
cmp
xchg
xchg
sbb
cltd
xchg
push
mov
push
sub
mov
xor
jo
orl
push
add
repnz
repnz
xor
xchg
add
mov
rcll
cmpsl
xchg
adc
cmp
in
adc
shrl
push
mov
sub
dec
xlat
outsl
mov
and
decb
shll
jae
xor
mov
arpl
stc
push
xchg
insl
cmpl
movsl
jecxz
cwtl
test
call
jbe
in
inc
addr16
mov
cld
cld
inc
shll
rcl
xchg
cmpsl
ror
lock
dec
xor
or
mov
dec
loope
lea
or
subb
fld
loope
aaa
adc
gs
add
lods
icebp
fistpll
cs
mov
aad
mov
test
adc
cli
roll
inc
cmp
sbb
scas
testb
fcmovb
popa
cmp
adc
pop
stc
cwtl
push
out
in
in
sbb
roll
lret
and
jp
sub
rolb
lods
lahf
adc
fldenv
or
jbe
mov
cmp
cld
inc
jb
adc
fldt
faddl
pop
movsb
in
fcompl
pushf
push
pop
adc
and
aam
syscall
rorl
cmp
leave
xor
sbb
adc
add
jo
loop
in
loopne
movsl
out
jnp
pop
arpl
mov
pop
sub
push
pop
push
xor
mov
dec
pop
out
aam
mov
and
aad
stos
push
mov
dec
std
test
add
sub
cwtl
and
lods
sarl
insl
cmp
push
push
dec
sub
dec
lods
pusha
std
loop
push
in
mov
jnp
out
and
ret
add
and
jge
pushf
inc
or
adc
and
cld
out
aaa
jns
push
rolb
scas
cs
shll
xchg
push
dec
sub
ljmp
jae
xchg
inc
jmp
xor
inc
lock
lock
adc
jbe
and
mov
data16
push
mov
cmp
sub
add
mov
lock
scas
add
sbb
pop
rolb
cmp
mov
rolb
inc
and
and
bswap
in
xchg
ss
adc
pop
cmpsl
mov
push
jg
sub
cmp
cli
stc
push
inc
or
daa
lea
dec
mov
fcoms
arpl
movsl
push
cmp
out
inc
loope
jmp
jae
adc
mov
or
outsb
imul
mov
mov
sti
mov
mov
popa
sbb
popf
mov
lret
shrb
dec
aad
mov
pop
inc
movsb
inc
sbb
mov
mov
mov
pop
js
and
sti
test
lret
cmp
ret
dec
lods
mov
std
push
mov
stc
in
sub
roll
and
sti
outsb
cmpsl
or
xchg
xor
fcmovnb
xchg
jecxz
adc
lret
pop
and
testl
mov
add
fmuls
mov
mov
in
stc
addr16
je
adc
in
mov
ljmp
test
loop
shll
cmp
jp
cmpsb
call
enter
stos
jb
dec
jle
push
pmulhw
test
jle
push
pop
xchg
and
add
or
pusha
outsl
lahf
in
xchg
push
jb
lahf
sbb
fldcw
int3
lret
in
gs
or
out
sahf
or
ret
sbb
lock
dec
push
repnz
and
scas
je
mov
cmp
sbb
inc
loop
and
push
fdivr
xor
or
cmp
pop
dec
lds
push
sub
addr16
mov
mov
and
fbld
repnz
sbb
in
push
movsl
dec
dec
aas
mov
sub
xor
push
cld
mov
jbe
test
stc
sbbl
sbb
into
dec
out
inc
or
push
cmp
mov
loopne
cmpsl
outsl
sahf
pop
cwtl
movsl
mov
adc
or
sub
xor
imul
mov
out
arpl
addl
data16
call
ror
cmpsb
pop
fs
push
cltd
xchg
push
sahf
add
xor
and
cltd
cld
xchg
clc
ss
mov
daa
and
sbb
int
loop
cmc
fisubrl
xchg
jbe
adc
fldcw
aaa
jp
fists
xchg
leave
sbb
stos
dec
inc
repnz
mov
pop
xor
cmp
push
and
mov
cmpsw
aas
je
and
cld
mov
xor
cld
outsl
ljmp
call
insb
int
dec
int3
sub
xchg
inc
pop
cmpsb
dec
mov
cmp
sub
mov
cmp
in
lods
pop
pop
and
pop
inc
ljmp
cmp
imul
cmp
jo
stos
rcl
cltd
scas
in
lods
pusha
pushf
fadds
test
daa
std
arpl
mov
stos
popa
sbb
inc
lock
imul
sub
aaa
loop
cli
dec
push
mov
jge
mov
mov
sub
fiaddl
orb
cmp
frstor
test
pop
jns
jbe
or
cmp
mov
sti
sub
stos
push
hlt
cmpsl
xor
in
xchg
cltd
imul
and
pop
nop
mov
decl
add
inc
inc
sub
jge
ja
and
xor
xchg
nop
jp
push
dec
aam
int3
test
test
mov
pop
add
fists
cmp
push
xchg
into
aaa
adc
xchg
cltd
aaa
ljmp
imul
push
xor
lcall
rcll
ds
cli
frstor
xchg
add
xor
or
dec
push
fisttpll
sbb
mov
or
rolb
sub
lods
cli
add
orb
imul
in
mov
adc
out
sbb
mov
scas
or
popf
and
std
repz
mov
cld
sbb
in
iret
rcll
mov
jbe
lock
pushl
jb
mov
stc
ret
or
mov
outsb
popl
out
gs
rcr
hlt
cmp
ret
jecxz
add
mov
push
cmp
sbb
outsb
mov
das
fsts
push
repz
shl
mov
rcr
into
add
out
push
in
inc
push
popf
repz
xchg
pushf
xlat
out
int3
mov
pop
jmp
xchg
sub
sarl
xchg
inc
repnz
add
dec
es
dec
sbbb
dec
dec
jbe
push
sahf
std
fisttps
lret
testb
xchg
leave
and
and
pushw
insl
imul
push
je
shld
sahf
mov
in
cltd
sbb
pop
fisubl
and
xchg
inc
sbb
adc
pushf
push
call
imulb
jbe
pop
inc
data16
pop
pop
adcb
test
pusha
gs
scas
test
dec
pop
mov
xlat
push
mov
scas
jne
mov
sbb
jp
and
cmp
roll
ret
mov
dec
out
idiv
filds
xchg
std
fsubp
adc
and
lcall
pop
or
imul
mov
mov
inc
mov
out
lock
movsl
push
sbbb
sbb
xchg
or
cmc
cmp
jmp
sub
cli
mov
ficoml
mov
bound
adc
jb
mov
imul
cmp
xchg
rcll
addl
inc
ret
jns
ljmp
lds
icebp
sbb
sti
sub
lods
aad
jno
and
xor
jnp
loop
je
adc
dec
imulb
mov
shll
imul
test
cmp
push
movb
push
scas
mov
fistpll
sub
push
lcall
lret
fcomps
xchg
add
es
cli
inc
gs
pop
mov
xlat
out
test
add
inc
jle
cmp
inc
rclb
push
xor
xchg
pop
fisttps
dec
adc
jl
out
imull
inc
inc
mov
insl
bound
adc
cmp
lret
ds
aad
xchg
call
stos
lds
inc
adc
or
ret
push
pop
lcall
subl
ret
inc
sbb
sbbl
out
sub
test
sbb
xchg
lret
jne
or
push
pop
sub
cld
cmp
ret
inc
add
in
jl
or
fidivrl
or
jno
or
scas
mov
popa
push
mov
jge
mov
add
mov
mov
inc
lock
xchg
aad
cs
sub
aaa
movsb
push
cwtl
mov
pop
inc
leave
xor
add
pop
pop
mov
mov
mov
je
inc
cmp
sbb
scas
aad
sub
cmpsl
mov
inc
push
sbb
adc
mov
fwait
jbe
jnp
lcall
cmp
call
push
or
cmpsb
lock
fistpll
mov
xchg
adc
ljmp
test
add
enter
sahf
cmp
xchg
movsw
mov
jbe
pop
aas
pop
push
or
xchg
into
or
je
flds
xlat
lods
adc
jo
inc
data16
imul
pop
inc
imul
pop
not
push
loopne
push
loope
xchg
push
xchg
cmp
sub
call
lods
repz
int3
pop
sbbb
test
xchg
hlt
daa
ficompl
push
je
pop
out
inc
insb
loope
sbb
adc
adc
mov
std
adc
add
cs
gs
xor
daa
dec
enter
mov
sub
sbb
cmp
sub
jne
adc
jbe
jae
and
out
inc
xor
lret
inc
fnstsw
sbbl
or
xchg
jmp
js
sub
push
cmc
fisttps
sti
pop
mov
stos
loope
ds
cmp
push
pop
pop
ja
jno
test
push
xor
loop
int
adc
push
xor
pop
fnstenv
fmuls
mov
test
test
cwtl
inc
divl
mov
add
clc
push
pushf
cld
rcr
loopne
add
insb
ffreep
in
nop
cs
xchg
lret
jno
call
int3
idivl
mov
jge
or
fcompl
cmp
mov
xchg
jns
or
imul
xchg
roll
decl
loope
mov
sahf
or
xchg
jp
ja
cld
shrl
arpl
and
std
stos
pusha
loope
addb
ds
outsb
aaa
lret
cld
daa
xchg
push
sbbb
sub
enter
outsl
xchg
loope
xor
jae
add
sub
mov
mov
punpckhbw
mov
mov
xor
int
pop
dec
insl
sti
pusha
imul
rcrb
scas
adc
push
ja
adc
pop
sbb
fdivr
cmp
xchg
out
cmpsl
ffreep
mov
fwait
sbb
andl
mov
insl
test
aas
xor
pop
enter
arpl
mov
dec
popa
aam
aad
xchg
push
sbb
and
jl
fmull
addr16
mov
mov
mov
push
cmp
or
test
jp
insb
mov
xchg
in
cld
sbb
ret
loope
daa
lcall
add
sti
test
xlat
and
xorb
gs
xchg
push
inc
push
push
test
sti
shll
test
stc
call
pusha
fildll
adc
ds
stos
inc
std
aas
pop
sub
pop
xchg
jge
mov
out
fbstp
mov
dec
sub
aad
adc
fcmovnu
ret
xchg
jo
in
xchg
aad
std
or
dec
sub
dec
data16
insl
neg
in
cmpb
shr
fsubs
mov
loope
xchg
clc
cmp
ret
inc
mov
jecxz
xor
mov
ficomps
pop
dec
jle
ja
sahf
xor
xchg
xor
push
push
jle
unpcklps
scas
mov
leave
cmp
int
pop
xchg
pop
adc
pop
jb
ljmp
dec
xchg
jge
sahf
xchg
aam
int3
sbb
push
fiaddl
pop
ret
lds
arpl
daa
lds
loopne
mov
pop
les
adc
inc
mov
fistpll
cmp
mov
mov
xor
js
xchg
ret
jg
jae
movb
pop
jmp
cmp
or
int
add
mov
hlt
sub
lea
ja
nop
lds
fistl
lods
xor
movsb
push
push
arpl
repz
sbbl
push
pop
mov
mov
jnp
jl
mov
pop
mov
cmp
ds
cmc
es
jbe
scas
shrl
outsb
dec
jnp
loopne
and
or
or
xor
enter
push
sbb
cmpxchg
sbb
mov
mov
popf
lds
push
adc
aad
jb
mov
aas
sarb
notl
int3
push
push
addb
cwtl
jnp
push
in
lcall
adc
dec
sti
sub
std
and
rol
mov
mov
loope
shl
popf
mov
jg
adc
push
or
jnp
inc
jecxz
push
sub
jg
addb
mov
add
xlat
mov
hlt
sub
mov
test
repz
ret
in
hlt
pop
in
lcall
scas
jnp
cmc
shlb
fdivs
mov
ljmp
jno
add
mov
adcl
sahf
push
mov
or
les
aad
inc
push
loope
test
xchg
popa
dec
out
lahf
jecxz
push
lods
or
xchg
add
sti
pop
ss
cmp
js
xor
insb
lods
push
pop
loop
or
loop
xor
sbbl
mov
cmpsb
in
mov
mov
mov
and
mov
add
dec
inc
inc
mov
mov
mov
das
fcmovb
cmp
xchg
sbb
shrb
bound
lret
mov
jle
push
scas
mov
out
js
imul
xchg
inc
sub
add
rcr
test
jp
lods
sbb
stc
cmpsl
cmpl
rclb
push
sbb
arpl
fdivr
mov
mov
nop
in
in
mov
mov
outsl
xor
push
add
std
lahf
jl
movsl
cs
jne
mov
pusha
and
sbb
inc
sbb
popa
adc
aaa
mov
fucomi
dec
clc
xor
sbb
orl
push
pop
ret
inc
mov
movsl
adc
sub
jl
pusha
dec
pop
push
xlat
insl
stos
in
popa
cs
cmp
or
sbb
arpl
mov
arpl
xchg
xchg
cmp
sub
sbb
lret
ficoml
dec
test
addr16
les
sub
push
xor
je
push
cmpsb
push
xchg
mov
jg
inc
jns
mov
enter
jne
pop
fstpt
push
mov
ja
jnp
add
or
pusha
xlat
xlat
pop
lcall
mov
sub
push
sub
out
jnp
test
lcall
inc
popf
adc
jno
cmp
dec
xchg
mov
inc
xor
xchg
popf
push
ja
cwtl
lcall
cmpsb
ficomps
push
add
dec
movsb
sub
xor
aaa
decb
aam
mov
dec
mov
jp
push
repnz
fs
pop
xor
inc
pop
jb
rcrl
pop
dec
jae
in
xorl
push
or
jns
xlat
testb
and
cld
jecxz
xchg
fisttpl
xor
cmp
ljmp
mov
ss
in
pop
mov
or
sbb
sub
lea
test
adc
imul
push
cmp
rcrl
jl
xor
js
je
jbe
add
inc
and
mov
test
daa
ficoms
xchg
mov
pop
pop
push
push
sbb
or
jge
idivb
and
stos
dec
loope
mov
scas
pop
fstl
jae
push
fisubl
jae
test
push
push
lret
adc
xchg
mov
add
out
test
ss
out
insb
gs
ret
test
inc
imul
mov
push
popf
inc
mov
out
and
ret
into
test
out
out
jno
rorb
pop
inc
dec
orb
ds
fcomi
or
pop
int
jnp
pop
mov
mov
outsb
insb
push
shlb
xchg
fwait
adc
ficomps
outsl
mov
push
rorb
lahf
and
scas
sub
and
les
push
lret
jmp
or
cmp
push
inc
or
adc
adc
dec
data16
lcall
adc
stc
jmp
popa
jns
sbb
arpl
pop
daa
or
cmc
pop
out
adc
lods
cwtl
out
sbb
push
pop
pop
push
push
in
inc
lods
or
or
sbb
in
out
xor
mov
sbb
lcall
adc
into
stc
jmp
lds
mov
jno
sub
scas
subl
xor
mov
or
mov
aad
push
mov
push
icebp
mov
mov
stos
jnp
sub
jns
ficompl
push
insl
pop
sti
and
dec
mov
pop
jecxz
adc
int
imul
xchg
mov
fcomp
inc
jp
or
mov
sub
add
push
xchg
cli
push
arpl
lret
sbb
in
mov
inc
dec
dec
sub
pop
add
mov
xchg
cmp
leave
jne
mov
movsl
in
nop
mov
imul
xchg
add
stos
lahf
int3
push
fisubl
adc
jge
cmp
mov
mov
mov
movb
clc
imulb
mov
or
cmp
jb
or
fisttpl
adc
addr16
pop
xchg
lods
add
mov
lea
or
out
inc
add
mov
sahf
ficompl
cmpsl
ret
mov
cmpsb
mov
loope
fnstenv
repz
stos
lds
xor
jno
sbb
fnstsw
ret
mov
cld
jns
or
push
mov
push
sub
test
lcall
dec
loop
insl
push
pushf
push
fldpi
cmpb
loope
xchg
mov
bound
sbb
ljmp
push
fisttps
test
jb
cmp
jb
test
cli
sbb
mov
dec
sub
dec
cmpsl
repz
popf
mov
add
mov
pusha
and
and
cmpsb
loopne
sbb
rcl
mov
cwtl
int
les
xchg
push
jge
cltd
mov
hlt
js
test
arpl
movsb
sti
cmp
xor
sbb
fsubs
sbb
mov
sbb
xchg
push
pop
sub
xchg
mov
xchg
jp
adc
mov
push
sahf
movsl
in
fnsave
loopne
xchg
and
bound
sbb
xchg
das
sub
addr16
ja
inc
sbb
jbe
dec
mov
sarb
int3
movb
mov
ljmp
es
and
or
sub
addr16
popf
data16
dec
fcoms
and
xchg
sbb
and
cmp
mov
or
sub
push
sub
push
add
pop
adc
addr16
dec
sbb
fiaddl
pop
inc
mov
pop
imul
cltd
sbb
add
xchg
push
adc
lea
call
xchg
xchg
popa
jge
stos
jo
cld
sbb
hlt
pop
sbb
inc
mov
lods
lds
dec
jmp
test
rclb
outsb
test
push
arpl
imul
or
jl
cmp
neg
bnd
popf
fwait
sub
dec
add
jecxz
sub
lret
int3
gs
sbb
xlat
test
xchg
dec
push
inc
add
mov
js
imulb
adc
cmp
fbld
pop
shrb
fdivrl
in
popa
xchg
in
aam
push
in
lea
jbe
scas
sbb
cmc
lret
push
adc
leave
stos
lock
roll
test
insl
aad
test
std
in
loope
aam
or
lret
aam
xlat
xchg
enter
ja
mov
pusha
movsb
arpl
std
ljmp
xor
cli
pop
loope
add
rol
stos
les
mov
mov
or
push
mov
mov
fstpt
fisttpl
or
clc
pusha
pop
sbb
mov
aad
enter
scas
fwait
xchg
jnp
push
or
xor
sbb
test
stos
pop
jp
inc
cmpsb
inc
adc
mov
and
jmp
cmpsl
notb
fwait
sbb
repz
xchg
popa
lret
popf
enter
cltd
xchg
inc
fiaddl
fcmovne
push
push
jg
imul
int
in
into
addr16
or
daa
push
rorl
add
aas
mov
clc
outsl
in
clc
mov
js
fcompl
fcoms
jb
cwtl
push
inc
xor
sbb
and
aas
push
sub
cli
std
push
mov
xchg
push
lret
pop
push
sub
mov
inc
cmp
enter
cmp
orl
fwait
jg
popl
dec
fdivrl
str
push
test
push
insl
jp
enter
mov
cmpsl
sbb
lcall
mov
fiaddl
in
mov
es
jns
mov
int
int3
icebp
adc
out
sti
jmp
daa
xor
pop
jo
scas
into
mov
pop
jae
pop
xchg
loop
orb
lret
dec
sahf
les
sbb
xchg
outsl
sahf
mov
fdivrl
sti
ret
mov
stos
idivl
inc
fisubl
icebp
mulb
jp
mov
xchg
ret
negb
cwtl
push
iret
movsl
inc
adc
pop
stos
inc
sahf
fildll
mov
fcompl
dec
mov
rcrb
sbb
xor
and
add
sbb
das
mov
lods
pop
int
or
mov
mov
mov
sub
ret
and
jne
mov
ret
hlt
inc
lret
and
mov
xchg
lcall
pop
loope
ret
mov
lds
adc
subl
repz
out
xchg
aas
hlt
and
mov
and
or
adc
arpl
in
xchg
loopne
je
push
add
jle
cmp
lret
ret
nop
fists
sarb
pop
rcr
fwait
insl
sti
je
jns
arpl
adc
mov
loope
mov
dec
test
mov
insb
xchg
or
movsl
sub
mov
insb
cmp
in
add
iret
ss
repz
jp
sbb
jp
dec
dec
scas
icebp
out
loop
adc
mov
push
jge
leave
in
xchg
out
xchg
xchg
and
push
jnp
fidivrl
in
inc
mov
jne
or
dec
xor
push
push
dec
ds
lret
mov
ss
dec
xor
cmp
mov
fidivl
aad
out
push
fidivs
call
or
jb
push
sbb
cmpsb
inc
jecxz
mov
inc
mov
lods
adc
clc
sub
test
adc
xor
mov
xor
mov
addb
test
xchg
stos
data16
adc
dec
cmp
arpl
leave
cmp
mov
cli
fistpl
dec
mov
mov
scas
hlt
inc
xor
bound
inc
dec
add
adc
cmp
cmp
lahf
lahf
sbb
lahf
jae
mov
jmp
cmp
push
or
and
dec
inc
test
dec
cmpsl
sub
push
movsl
inc
repz
fucomi
xchg
push
mov
outsl
in
push
pop
add
popf
sbb
jno
sub
xor
xor
daa
hlt
push
and
sub
push
mov
shlb
movsb
jmp
std
movsl
fdivrp
dec
adc
and
cmp
dec
sub
mov
repz
push
out
data16
mov
cmp
inc
movsb
inc
incb
jmp
imul
push
lret
and
nop
mov
in
adc
sarb
inc
clc
scas
xor
sbb
sub
mov
repz
loop
sahf
mov
pop
lea
pusha
sahf
dec
js
ja
loope
push
jo
imulb
pop
out
repnz
sbb
adc
sbb
jl
xchg
push
sahf
mov
inc
sub
cmp
gs
out
cmp
inc
xor
loope
std
stos
shlb
push
mov
aaa
je
jno
mov
jb
out
cmp
aad
adc
js
pushf
or
sbb
and
cmpsl
mov
dec
sub
and
pop
pop
sub
dec
sahf
inc
addl
xchg
loopne
test
idivl
add
and
push
jg
fsubrl
mov
ret
cld
cmpsl
mov
mov
out
loop
mov
pop
dec
jne
dec
and
pop
in
add
mov
and
and
aam
hlt
int3
ljmp
adc
insl
jne
movsb
imull
lds
jae
popf
xchg
mov
je
mov
cmc
gs
mov
test
loop
lcall
andb
lods
mov
sti
xlat
and
lea
xor
jne
mov
loop
daa
push
out
push
outsb
pop
mov
mov
cmc
xor
outsl
mov
pop
mov
dec
enter
xor
testb
fs
dec
dec
mov
xlat
add
mov
movsl
popf
push
icebp
jmp
sar
clc
out
mov
sub
push
stos
pushf
xchg
aas
pop
pushf
leave
inc
pop
or
mov
pop
nop
xchg
push
gs
cmp
or
sub
pop
out
hlt
lds
daa
outsb
out
inc
fidivrs
imul
addr16
push
push
repz
dec
aam
jmp
mov
jle
inc
cwtl
pop
mov
daa
mov
dec
es
mov
add
mov
mov
rep
jo
aam
ret
inc
cmc
mov
cltd
repz
xchg
lock
roll
sbb
push
dec
adc
inc
lock
cmpsb
popa
test
call
inc
clc
loope
pop
xor
cld
pop
ljmp
sbb
mov
in
and
mov
movsl
mov
mov
lret
push
cmp
lods
imul
jno
filds
daa
sub
add
das
data16
shrb
or
mov
bound
data16
adc
push
mov
iret
ret
or
dec
add
leave
inc
jb
pop
and
push
cmp
push
call
jmp
adc
adc
fstpl
push
xchg
fsubrs
faddl
das
stos
test
cwtl
mov
loop
dec
imul
movsl
or
in
ss
cld
add
dec
aad
push
dec
pop
leave
cmp
fisubrs
scas
mov
xchg
xlat
pop
sbb
dec
push
loop
lret
jns
add
je
jl
inc
lea
jns
sahf
pop
aam
xchg
mov
test
int3
or
test
push
popa
aaa
dec
push
out
pop
ret
pushf
push
das
popa
inc
add
xchg
xor
leave
sbb
and
or
test
mov
jb
pop
adc
push
xchg
adc
cmp
pop
movsb
std
jae
aaa
aaa
cltd
mov
add
adc
out
in
mov
push
fwait
dec
jecxz
cmp
psubb
sahf
and
shr
dec
cmp
enter
sub
shr
inc
out
aad
mov
mov
pusha
out
fistps
pop
cli
str
in
mov
int
flds
dec
push
mov
lock
inc
fs
push
cmp
ljmp
add
push
imul
call
mov
call
cmp
stc
mov
cmp
int3
in
dec
test
loopne
push
dec
pop
dec
mov
shlb
adc
mov
fisubrl
shl
enter
mov
push
pop
xor
pop
or
or
sub
test
mov
addr16
ret
xchg
push
adc
sub
add
test
mov
inc
lea
jecxz
xchg
fbstp
mov
imul
mov
cmp
int3
fdivrs
out
xchg
cmpsb
in
mov
xchg
push
out
dec
sbb
jg
scas
dec
xlat
push
dec
cmpsl
adc
cmc
lahf
es
jae
push
shlb
mov
sub
adc
sub
add
and
mov
push
in
push
scas
pop
mov
aas
xor
and
loop
fsubrp
dec
nop
and
es
ss
pop
add
scas
das
mov
push
and
testb
inc
add
das
ds
js
xchg
out
push
or
lcall
push
sub
movsl
das
sub
push
adc
jecxz
cli
pop
imul
xchg
aaa
mov
mov
lahf
popf
test
daa
jmp
repnz
lahf
cmp
xchg
xchg
addb
add
psrlq
insl
mov
sub
mov
pop
jecxz
scas
xchg
jns
shr
xor
jecxz
js
dec
aam
jp
push
or
sbb
mov
mov
xor
push
and
pop
ds
add
pop
xor
add
es
cmpsb
cmp
inc
inc
ds
scas
ret
movsl
mul
pop
int3
and
les
nop
gs
mov
add
test
nop
pop
xor
mov
cmp
adc
out
inc
mov
stc
daa
movsl
into
mov
dec
fldt
jge
ss
mov
stc
rcl
jp
hlt
sub
repnz
mov
cmpsb
mov
push
cmpsl
pop
rcll
pop
in
mov
cmp
pop
mov
xor
push
addb
popf
lock
push
aad
pop
xchg
fucomip
or
push
cmp
stc
repnz
dec
add
repz
out
sbb
cmpsl
or
jmp
pop
xchg
xchg
cs
pop
lea
aam
xchg
xor
or
mov
push
fmuls
jb
pop
sub
jne
xor
inc
jg
ficompl
orb
dec
cs
xchg
inc
push
adc
xor
dec
jl
rol
leave
xlat
das
add
push
add
or
push
stos
inc
inc
adc
into
cwtl
test
lcall
sub
pop
int3
les
xchg
arpl
sahf
and
sarl
sub
xchg
pop
test
fnstcw
jnp
fucom
and
pop
cmpsb
lods
dec
mov
sbb
push
lds
es
mov
fmul
out
out
pop
mov
pop
sub
push
adc
jne
sub
mov
out
cmpsl
mov
inc
gs
jns
cs
jecxz
stc
mov
sbb
imul
rcl
dec
cmp
or
repnz
and
sti
jg
in
cli
inc
lcall
dec
fistpl
lds
push
xor
imul
pop
sub
xchg
aas
push
fsubrs
jnp
cmc
movsl
mov
movsl
imul
xor
mov
ss
lahf
inc
mov
ret
jae
xor
push
push
in
adc
and
in
sub
out
pop
inc
nop
jmp
jge
jno
scas
in
call
ds
jb
lret
jno
pusha
scas
test
mov
nop
xor
je
std
loop
fsub
pop
ret
or
mov
sub
pushf
fcomp
mov
mov
xchg
pop
cmp
fsubs
xlat
and
in
mov
shlb
addr16
mov
sbb
mov
push
push
call
int3
shr
mov
pop
sub
add
ja
jge
push
pop
dec
cli
orb
sti
addb
inc
jecxz
jno
pop
cmp
adc
bnd
inc
ja
sbb
mov
xchg
xchg
test
pop
cmp
xadd
daa
pusha
cmp
test
cmp
shlb
push
mov
or
push
ss
inc
jge
pop
inc
mov
faddl
pop
in
xor
addr16
fs
xchg
ljmp
push
jmp
pop
pusha
leave
jne
cmpsl
jge
cmp
jge
jnp
push
xchg
adc
lods
notl
les
xchg
and
fisubrs
imul
push
setle
push
hlt
pop
test
lods
in
inc
outsb
dec
add
dec
and
cs
fldenv
sarl
notb
jecxz
pop
sbb
inc
pop
out
adc
or
lret
movsb
bnd
cld
pop
fcomps
push
into
dec
xchg
popa
scas
ficompl
dec
sub
lcall
inc
lret
xor
mov
inc
daa
cld
sbb
aas
push
pop
adc
in
loopne
xchg
pop
je
xchg
sbb
pushf
lret
mov
and
test
cmp
clc
or
inc
stc
xor
pop
frstor
dec
les
xor
ret
addb
mov
test
mov
xchg
jle
mov
cmpb
cli
into
ljmp
lods
xorl
insl
ficompl
adc
sub
hlt
and
mov
push
mov
push
cmpsl
sub
out
inc
add
js
fbstp
leave
mov
mov
inc
dec
or
sbb
sbb
xchg
hlt
mov
dec
sbb
orl
mov
adc
mov
or
arpl
negl
jae
fs
lods
mov
je
sbb
sarb
inc
add
or
lods
imul
lock
into
insb
fsubrl
sbb
cmp
jbe
in
loopne
rcl
push
fcompl
pop
adc
xor
data16
lea
mov
sub
orl
and
out
out
pushf
cmp
bound
jp
pmulhuw
pop
xchg
ja
fisubrs
adc
add
mov
sub
add
sahf
sub
lock
pop
add
add
out
mov
dec
inc
imul
lds
out
lret
cwtl
lcall
popf
pop
cmp
cmc
xor
push
cmp
leave
jnp
xchg
test
cld
pop
mov
or
fs
and
stos
sub
push
pop
dec
sub
inc
faddl
imul
mov
pusha
adc
out
mov
adc
in
xchg
rcrb
jl
call
inc
bound
mov
inc
mov
std
cwtl
pandn
out
xchg
cwtl
sub
cld
jns
mov
lods
jb
cld
mov
pop
je
jne
sub
sti
shrl
and
add
mov
push
xor
mov
cli
sub
movsl
lret
push
fimull
mov
and
and
push
je
mov
jnp
mov
jmp
jns
inc
mov
cmp
leave
repnz
test
into
pop
cmpsb
cmp
out
mov
fidivs
cmp
lods
pusha
fistps
hlt
add
push
mov
or
mov
in
mov
in
sub
dec
xchg
stos
push
xor
hlt
and
out
enter
addr16
inc
push
add
push
nop
jp
orb
add
mov
mov
add
lods
and
sub
pop
roll
mov
jns
cld
scas
scas
les
stc
fwait
ret
fistps
ret
push
push
dec
lret
cwtl
test
push
dec
add
testl
mov
jo
adc
sub
jno
xchg
cmp
adc
addb
loope
dec
and
lods
nop
adc
cmpl
push
imul
daa
adc
and
jle
xor
pop
faddl
das
nop
insl
repz
sbb
stc
sti
outsl
adcb
sbbl
mov
fildl
sarl
test
rclb
mov
sbb
loop
fildl
dec
sub
sbb
test
pop
imul
pop
pop
mov
out
in
mov
xchg
jo
lock
xchg
jae
push
sbb
ja
rcll
adc
shlb
aas
jb
out
js
cltd
cmp
roll
dec
stos
rclb
xor
int3
enter
jmp
adc
push
dec
mov
lods
jp
into
aam
inc
testl
pop
insb
add
fidivl
testb
dec
mov
pop
push
lods
cmpsl
js
or
leave
mov
push
or
enter
lods
cmp
xchg
dec
push
xchg
push
mov
mov
in
sub
mov
fwait
pop
mov
inc
mov
loop
adc
in
inc
xlat
jecxz
andl
mov
sub
jmp
inc
and
or
aaa
das
pusha
mov
xchg
jg
rcll
cmp
mov
cmp
loopne
inc
and
movl
push
pop
add
add
stos
out
lods
pop
mov
sti
imul
push
test
inc
xor
cmpsb
inc
xlat
je
addr16
pop
mov
iret
jp
sti
loop
in
js
mov
mov
mov
daa
pop
jecxz
pushl
into
pushl
xchg
mov
mov
xchg
stc
mov
pop
mov
test
aas
dec
ret
xchg
stc
sbb
out
scas
xchg
inc
xchg
mov
mov
and
call
in
sub
xor
lret
dec
idiv
cmpsb
add
push
or
xor
faddl
scas
inc
xor
into
cmpsb
je
adc
enter
ss
mov
push
add
rdtsc
js
inc
lcall
push
cmp
lret
sbb
mov
dec
mov
pop
dec
bound
push
fs
add
pop
add
stos
cwtl
ds
mov
sti
pop
ja
fsubr
mov
jno
inc
or
jge
pop
imul
mov
test
sub
or
push
mov
sbb
mov
clc
push
rcr
shl
and
xchg
sbb
imul
pop
pushf
xchg
push
ds
and
xchg
movsl
inc
fwait
lods
addl
cmp
or
dec
das
pop
push
ret
sbb
mov
in
lcall
cmpsl
iret
mov
mov
push
xchg
fwait
repz
and
dec
jl
lahf
stc
lock
hlt
mov
stos
movsl
xlat
lret
sti
dec
xor
dec
test
in
inc
jl
int
inc
push
push
pop
imul
frstor
fisttpl
fs
add
call
cmc
call
mov
das
inc
sahf
mov
pop
pop
es
sub
aas
inc
daa
insl
out
sahf
add
popf
cmc
and
dec
test
aad
push
in
cmp
cmpsb
mov
adc
xor
mov
mov
mov
mov
mov
or
les
sub
in
and
adc
add
mov
lret
dec
cmp
fsubp
mov
gs
stos
adc
dec
cld
and
scas
cli
sub
bound
mov
sub
ja
popa
inc
mov
cmpl
sbb
jmp
jno
inc
aam
mov
adc
movl
ss
mov
inc
fidivrl
jbe
mov
imul
out
jp
js
jmp
lret
fdivrl
mov
and
cmp
in
ret
popf
mov
je
imul
sub
xor
mov
sub
jo
or
cmp
cmp
sub
jne
adc
fbstp
mov
rol
dec
add
hlt
sub
xchg
push
sbb
inc
loopne
cmpsl
xor
subb
dec
addr16
sub
xchg
gs
je
jne
adc
out
leave
rcrl
dec
test
call
pusha
mov
push
aas
jl
pop
sbb
dec
xchg
cmp
movsb
dec
js
ljmp
dec
int3
cmp
ret
test
mov
mov
xor
push
push
mov
pushl
push
sub
push
add
fwait
scas
int
xchg
mov
adc
imul
push
cmpsl
les
inc
cltd
movsb
int3
xchg
cmpsl
in
jle
call
les
xlat
je
jp
lret
cmp
mov
fiaddl
jg
and
out
mov
movsb
mov
inc
mov
gs
fwait
sahf
add
mov
pop
or
mov
clc
xchg
clc
adc
pop
cmpsb
ret
fwait
lds
xor
fisttps
mov
and
je
movsb
jo
mov
pushf
sub
ret
cmp
inc
out
sbb
in
into
dec
dec
lds
rcll
jle
sub
repz
add
inc
sub
fidivl
and
popa
movsb
sbb
test
xlat
xchg
sub
xchg
and
push
ret
jp
jne
js
cmpb
push
dec
cltd
pop
scas
or
rorb
or
pusha
fadds
or
mov
bound
aaa
and
xchg
push
pop
pop
dec
loop
fistpl
ja
xchg
add
push
mov
repz
and
add
lock
xchg
and
fcom
movsl
cmp
push
notl
clc
xchg
movsb
push
scas
test
pop
data16
lea
in
bound
fidivrl
jle
jp
js
adc
mov
dec
xchg
jb
insb
and
outsl
dec
jle
mov
xchg
mov
pop
xlat
addb
mov
dec
inc
popa
int
lret
xchg
pop
out
outsb
pop
xor
adc
pop
lock
test
cmpsl
lods
nop
lcall
iret
lods
aaa
sbb
ret
insl
fistpll
adc
cld
je
cmp
les
push
stos
fdivrl
js
mov
test
push
jbe
dec
lods
add
and
mov
cmc
mov
fisubrs
xchg
cltd
mull
fcmovne
pop
mov
cmp
rcrl
std
popf
sbb
dec
lcall
ds
jecxz
data16
sbb
cld
mov
inc
pop
shll
mov
pop
sahf
dec
dec
pop
data16
adc
in
push
and
rclb
mov
and
ficompl
lea
jno
fisubs
jmp
in
dec
clc
mov
xor
adc
mov
lods
and
mov
pop
lret
cli
fisubrs
xor
std
xchg
lods
scas
mov
shlb
pop
ret
adc
rolb
inc
stc
lods
cmpsl
mov
xor
inc
cltd
shl
fadds
in
fldt
xor
test
orl
jbe
ret
or
push
stos
jmp
inc
jl
aam
loopne
mov
dec
negl
int
inc
mov
sub
pop
sub
xchg
mov
jp
pop
xchg
jo
push
xor
cmpsl
jecxz
jge
push
mov
cmpsb
lods
pop
sub
xchg
clc
xor
ds
out
push
fwait
and
pop
outsb
sub
shlb
mov
dec
cmp
fldenv
insb
outsl
dec
nop
in
push
jle
cld
sub
ljmp
mov
cmp
leave
pop
dec
dec
ss
fimuls
pushl
push
mov
aad
fiaddl
sti
aaa
jnp
lret
ss
or
xor
fldcw
mov
dec
mov
fsubrp
jge
jl
cmp
add
insl
std
xchg
adc
jmp
sahf
rcrl
dec
inc
or
ret
mov
push
and
cmp
lahf
jno
push
cmp
xchg
xlat
out
sahf
dec
out
int3
lea
das
jge
leave
lock
sub
pop
mov
add
add
fwait
push
pushl
mov
lock
icebp
xor
sbb
adc
jmp
cmp
push
out
xor
movsl
mov
jae
out
dec
clc
sahf
sbb
loop
xchg
cli
scas
les
repnz
cmp
xchg
fisttpll
fnstenv
push
movsb
and
mov
push
sub
pop
sub
movsl
sbb
jmp
mov
imul
lock
push
fdivrl
mov
push
mov
or
mov
mov
rcl
mov
sbb
fdivrs
push
jne
aad
xor
inc
push
shll
and
mov
push
push
jno
mov
jbe,pt
fsub
testb
pop
movb
push
ja
out
dec
mov
mov
pop
mov
call
xchg
dec
imul
fwait
dec
sahf
xor
cmp
xchg
adc
faddp
shlb
scas
mov
or
add
rcrb
lret
int
mov
mov
xchg
and
out
lds
push
jb
fidivs
mov
cmp
cs
icebp
jae
repnz
ret
fisttpl
push
and
loopew
pop
movsl
adc
rol
cmp
jne
js
dec
aam
dec
scas
dec
xchg
cmp
lahf
insb
xor
xchg
mov
nop
pushf
and
pop
or
jnp
lock
jg
sbb
scas
pop
xor
popf
xchg
ja
adc
sub
push
mov
and
movsb
jle
enter
fdiv
pop
jbe
mov
push
push
inc
inc
fwait
cld
push
add
cmp
daa
mov
je
inc
add
jnp
pusha
jecxz
mov
cmp
dec
loop
adc
lock
add
pop
sub
cmp
push
imul
mov
sbb
xor
insb
xor
push
sbb
mov
jmp
mov
sbb
aam
push
inc
mov
inc
insb
sub
fists
data16
or
xchg
in
adc
xchg
lods
adc
dec
pop
push
outsl
out
hlt
das
pop
ljmp
lea
dec
lds
add
or
add
dec
in
je
or
pop
add
stc
push
call
jb
cmpsl
cmpsl
test
sbb
pop
fcoms
out
icebp
dec
mov
mov
sbb
and
mull
pusha
dec
pop
sub
and
xchg
mov
fbstp
test
push
push
xchg
fidivl
cmp
testb
or
dec
mov
inc
jge
lods
and
cmp
mov
dec
aaa
mov
cs
in
in
xchg
in
or
out
test
popa
in
xchg
mov
mov
cmp
mov
add
in
cmc
push
popf
adc
pop
into
sub
je
jl
out
pop
mov
push
andb
negl
add
push
xor
into
xchg
out
dec
ret
push
xchg
fiadds
jns
cmc
mov
out
sub
iret
ljmp
mov
jge
ss
mov
push
mov
add
shrb
and
jp
sti
ja
pop
cld
pop
mov
sub
movsb
jbe
daa
rcrb
daa
mov
jecxz,pt
movsl
cmp
sarl
outsb
pop
in
lahf
ljmp
fucomp
push
stos
lcall
subb
push
xchg
sub
xor
ss
mulb
and
sbbb
mov
and
sahf
scas
xor
or
arpl
mov
sub
and
enter
rcll
dec
mov
pop
jbe
and
cmpsl
inc
iret
cltd
xchg
fcompl
test
scas
imul
out
inc
inc
movsb
sub
jae
sbb
data16
ja
daa
push
pop
xor
movb
jmp
or
inc
loopne
test
fmuls
pushf
cmp
stos
mov
jno
movsl
out
test
or
sbb
xchg
pop
leave
dec
adc
mov
pop
push
push
arpl
jo
inc
mov
sbb
push
aaa
mov
seta
aas
and
loopne
xchg
dec
xor
xlat
fmulp
es
mov
dec
fcompl
push
inc
js
pop
mov
push
sbb
fadds
adc
or
cltd
neg
sbb
mov
xchg
and
and
scas
sub
or
jmp
mov
imul
mov
movsl
cli
mov
cmc
gs
imul
pop
pop
cmpb
and
pop
mov
incb
cwtl
mov
mov
pop
outsb
out
mov
jg
mov
dec
aam
jecxz
xor
int
sbb
bound
adc
push
inc
js
iret
push
xchg
or
out
nop
add
inc
sub
das
int3
pop
mov
jb
out
jg
push
pop
adc
ja
lock
nop
cs
fdiv
mov
push
push
mov
inc
ret
imul
or
scas
rcll
mov
mov
inc
sbb
jnp
mov
test
push
xor
stos
jno
ljmp
adc
out
cmpsb
dec
imul
sbbl
scas
xchg
mov
mov
or
and
jmp
in
fsubl
cmp
cmpl
pop
xchg
dec
out
mov
sub
sub
stos
mov
addr16
xor
xchg
add
lret
xor
pop
push
mov
sub
aas
jl
add
mov
lds
je
arpl
cltd
sub
push
sub
fwait
mov
adc
mov
mov
loope
inc
sbb
jnp
flds
push
push
sarb
scas
lock
cmpsl
push
cmpsl
or
mov
add
sbb
xor
mov
mov
jecxz
and
inc
fisubs
xor
xchg
or
lock
or
je
es
sbb
in
jp
jno
vandps
stos
pusha
in
lds
jecxz
and
sbb
inc
jmp
xor
jne
int3
loop
mov
xchg
stos
or
pop
sahf
daa
mov
dec
add
dec
enter
mov
popa
push
movsl
sar
inc
sbb
inc
adc
xchg
lods
xor
loope
push
sub
push
inc
or
imul
imul
es
jo
or
push
pop
hlt
mov
sbb
adc
xchg
and
sub
fldenv
add
pop
sbb
lahf
sbb
push
mov
push
cmc
push
repnz
mov
mov
inc
lea
test
les
rolb
xchg
test
cmpsb
cmpsl
jle
sub
cmp
test
and
test
ljmp
lds
mov
lahf
add
js
sbb
js
mov
sub
movsl
xor
lods
or
aad
cmp
dec
mov
sbb
arpl
stos
mov
push
inc
jb
loop
outsb
gs
stos
repz
mov
bound
jno
mov
sbb
ljmp
lea
ljmp
sbbb
jp
addr16
ljmp
xchg
or
rcr
xor
cmp
push
xchg
pop
lret
and
xor
jmp
int
add
shlb
out
rolb
outsb
pop
sub
insl
add
insl
xor
das
push
stos
or
aam
aam
xchg
mov
out
push
insb
xchg
inc
adc
movsl
mov
lods
scas
mov
sub
xchg
xor
cld
xchg
pop
sbbl
jb
mov
jns
test
xchg
xchg
popf
and
lret
adc
loope
or
push
call
jns
shlb
push
push
inc
mov
mov
xor
jmp
mov
sbb
test
in
fnstcw
or
lret
dec
or
imul
jp
sub
inc
fs
and
pop
cmp
jb
inc
cmp
incl
ficompl
cld
sub
pusha
ret
jge
fwait
lods
sti
call
pop
cmp
mov
adc
cmp
aas
add
mov
popf
jns
cmp
fld1
movl
jb
and
mov
lods
jae
push
repnz
test
inc
stos
pop
loop
jle
insl
adc
call
sub
or
cs
jns
mov
mov
pop
mov
mov
hlt
lds
andb
and
and
mov
hlt
pop
xor
xchg
cmp
out
cli
jno
aas
inc
and
out
xchg
adc
mov
rep
mov
xor
daa
inc
pop
fs
frstor
cmp
sub
movsl
cld
rolb
stc
outsb
and
adc
sbb
jge
mov
dec
fnstenv
push
fxch
stc
js
adc
xchg
lods
in
fnstsw
or
subl
adc
pop
mov
lahf
mov
negb
outsl
jecxz
std
dec
dec
or
and
scas
inc
popf
jns
push
int3
sbb
popa
gs
retw
pushl
test
js
and
inc
in
jo
xlat
out
fidivl
inc
mov
push
ja
pusha
mov
decb
cs
frstor
xchg
push
rorb
js
dec
pop
adc
pushf
dec
lret
jmp
pop
mov
mov
cltd
icebp
push
adc
loope
mov
cmp
mov
push
sbb
jb
iret
in
mov
les
inc
inc
lods
inc
add
stos
adc
test
sarl
repz
or
push
mov
pop
sbb
in
mov
fldl
popa
xchg
mov
sbb
fsubl
mov
int
shl
lret
xchg
in
and
and
or
fcoms
ja
fmull
and
inc
gs
mov
inc
and
lret
xor
out
cmp
loopne
in
addl
stos
inc
mov
or
aas
add
sub
dec
insl
cmp
into
mov
js
and
and
mov
cwtl
jae
rorl
jnp
orb
xorb
push
mov
leave
mov
ds
and
mov
mov
jae
scas
stos
pop
adc
cmp
fsubrl
add
and
pop
sbb
sub
clc
add
inc
sub
stos
and
dec
and
pop
arpl
dec
mov
scas
stc
gs
daa
fsubrs
movsb
jb
dec
push
aam
jns
jns
pushf
gs
sub
mov
cmpsb
push
jmp
imul
push
adc
jl
sub
push
call
lcall
jmp
loope
ret
push
xchg
push
inc
cmc
scas
loop
imulb
loopne
adc
scas
aad
adc
pushf
ret
ret
mov
lret
cmp
pop
mov
cmpsl
gs
and
xor
push
scas
repnz
jns
outsb
xchg
insl
lods
dec
fists
aas
xor
lds
int3
xchg
dec
cmp
ljmp
xchg
add
cmp
dec
mov
outsl
sub
inc
repz
fmulp
jbe
jg
cmp
xor
add
adc
test
movsl
push
test
cmp
cmc
jnp
cmc
sbb
jmp
scas
rcll
add
mov
or
stc
add
loop
dec
sub
or
xor
mov
adc
push
pop
negb
mov
jae
repnz
add
leave
jl
call
repnz
cmpsb
cmc
std
sbb
fstl
movsl
adc
outsl
and
mov
ljmp
lahf
aam
subl
je
or
cld
jno
test
pop
inc
cli
inc
add
ds
inc
pop
add
inc
xlat
pop
inc
pop
testl
cmc
adc
bound
adc
mov
cmp
push
mov
outsb
inc
out
pop
fcmovne
adc
cmp
push
gs
sti
push
dec
int3
outsb
hlt
mov
adc
cmp
aam
push
ja
xchg
mov
lret
orl
test
push
xchg
scas
dec
in
aaa
jp
push
cmp
imulb
cli
test
data16
sbb
cld
xor
stc
loope
push
sub
int
mov
cmc
loop
mov
scas
or
mov
jbe
addr16
lret
flds
cmpl
sbbw
or
scas
outsb
xor
clc
std
pop
jmp
dec
jbe
dec
xchg
mov
gs
push
cld
or
or
push
or
xlat
and
adc
into
mov
jnp
and
sbb
sub
cmp
insl
sub
mov
push
or
mov
lods
jg
inc
repnz
stos
out
lods
jnp
popf
cmp
jo
lret
sub
xchg
push
aam
jl
mov
lret
jns
dec
sbb
arpl
fdivs
scas
lods
jge
addr16
cmpsl
jno
mov
imull
xor
pop
popl
fldt
clc
out
xchg
inc
es
mov
sub
cmpsb
cmp
rol
xor
lret
xlat
enter
xor
rcrl
cmp
fs
inc
sub
jne
out
mov
or
in
hlt
sub
push
jg
xchg
or
cmp
test
test
push
pushl
jle
push
in
adc
add
adc
pop
push
push
hlt
dec
popa
ljmp
in
fidivl
adc
cltd
and
in
push
andl
inc
mov
push
mov
insb
js
mov
and
out
ljmp
into
lds
pop
push
in
cmp
add
or
mov
cmpsb
aas
or
outsb
jnp
sti
lret
gs
test
cmp
dec
xchg
mov
push
lret
cmp
jle
push
popf
xor
stos
adc
pop
push
repnz
leave
hlt
repnz
and
lcall
jns
rorb
lods
mov
fcompl
test
cli
add
scas
cltd
add
shrb
addr16
mov
push
jo
incb
loopne
insl
mov
addb
jmp
decl
adc
mov
push
nop
inc
jno
imul
xchg
das
sub
testb
jo
or
dec
mov
mov
sahf
subb
mov
shl
mov
mov
icebp
cmp
lods
arpl
adc
insl
or
mov
ret
les
stos
test
cli
xor
outsl
pop
xchg
cli
xor
lcall
sub
mov
fwait
lcall
out
mov
jle
mov
rol
mov
xchg
ljmp
jg
fwait
or
dec
lret
fisubrs
das
rcll
jbe
ret
sbb
adc
mov
push
out
aad
clc
dec
call
adc
xchg
inc
or
int3
sahf
cmc
push
jmp
adc
shll
loope
pop
or
test
lods
ljmp
mov
mov
jne
sub
adc
loop
dec
cltd
stos
inc
rcrb
fbstp
xchg
sbb
popf
pop
pop
clc
xor
ljmp
sub
adc
fcoml
cmc
mov
mov
push
or
mov
shrb
std
xchg
mov
pusha
pop
mov
rcrl
int
add
outsl
es
fadds
sub
xchg
insl
les
repnz
inc
xchg
pop
insl
insb
ret
and
popf
rorl
dec
adcb
ja
push
adc
jns
leave
pop
fbstp
mov
nop
scas
and
sahf
push
sbb
inc
popa
push
int
insb
mov
les
pusha
xchg
in
pop
fnstsw
lds
cmp
cmp
data16
hlt
lcall
add
dec
inc
sbb
mov
jne
pushf
add
stos
xchg
fmul
cmp
push
push
in
inc
mov
lods
mov
jno
cmpps
jmp
cmp
js
imul
in
call
sbb
or
stc
mov
pop
add
or
loop
lret
xchg
sbb
out
inc
loope
mov
and
and
shl
xlat
mov
sbb
flds
sbb
lods
mov
sbb
sub
loopne
pop
or
mov
mov
xchg
jno
jnp
jnp
dec
mov
mov
shlb
outsl
test
cld
cwtl
fisttps
xchg
pushf
call
movsb
daa
pusha
mov
insb
cwtl
mov
movsl
aas
xor
ret
lock
arpl
cli
repz
mov
jecxz
mov
ret
push
and
ds
sub
test
inc
adc
in
roll
test
cmpb
aaa
fmuls
out
mov
setbe
int
sti
cmp
pusha
mov
jecxz
xchg
out
jbe
mov
movsb
inc
bound
adc
sub
ror
add
cltd
or
lahf
scas
outsl
addl
cltd
mov
cld
in
movsb
inc
adcb
mov
movsb
jmp
jge
sbb
mov
cmp
addr16
inc
mov
sbb
lret
and
push
in
outsl
push
mov
and
cmpsb
xchg
dec
or
or
scas
push
push
dec
inc
sbb
es
adc
in
or
test
inc
jb
pop
mov
call
mov
out
cmpl
dec
or
xchg
mov
in
cs
fs
push
adc
or
mov
insb
rcr
lret
fiaddl
popa
lods
out
shll
dec
dec
or
xor
jb
adc
or
popa
push
or
pop
aas
subl
sbb
jecxz
mov
xlat
roll
cmc
outsb
stos
subb
ret
dec
and
filds
adc
pusha
jb
sbb
gs
dec
imul
cmp
xor
test
dec
jmp
jge
xchg
je
imul
jns
pop
jl
shrl
mov
fnstsw
mov
out
or
cmp
add
sbb
js
test
sbb
mov
xor
xor
mov
sub
lcall
push
mov
pop
call
push
das
cmp
jmp
jp
decb
lock
pmaxsw
js
popf
stos
and
sahf
and
jg
mov
shll
and
adc
sbb
insl
data16
push
push
es
dec
xor
jmp
stos
mov
std
jecxz
jb
mov
push
or
testb
insb
adc
mov
test
lahf
jnp
insl
xor
movsb
jmp
popa
jns
test
jle
mov
iret
dec
cmp
shr
sbb
inc
pop
jg
ljmp
and
cmc
push
add
xor
sbb
out
jg
push
jnp
cmp
test
mov
mov
nop
out
into
mov
or
mov
add
in
fdivr
iret
adc
out
idivl
insb
iret
sahf
sub
xchg
push
jne
daa
test
mov
cld
or
js
sbb
push
xchg
loope
add
dec
fnstcw
loop
in
sub
inc
loopne
fwait
mov
pop
shrb
mov
aad
push
adc
mov
push
mov
mov
add
push
ja
and
mov
sbb
mov
push
sbb
sub
push
xor
pop
push
push
hlt
dec
in
dec
insl
xchg
mov
out
pop
fs
rolb
push
jge
lret
in
or
lock
fcmovnb
cmp
mov
fnstenv
jns
test
loop
testl
mov
aas
icebp
push
pop
mov
imul
leave
jmp
lods
xor
mov
decl
sbb
mov
pop
mov
add
pushf
scas
imul
push
mov
cmp
cmc
ret
sub
sarb
sbb
repz
sub
xchg
stos
inc
push
negb
add
lcall
sar
jp
enter
je
sub
lea
mov
xor
ds
scas
loop
sahf
xchg
int3
js
adc
outsl
push
mov
iret
aaa
mov
xor
jo
push
dec
xor
jno
insl
ljmp
or
jmp
lcall
fwait
jno
cmpsl
mov
xor
mov
mov
std
insb
inc
jo
mov
sarb
ss
jge
fs
or
push
xor
mov
clc
out
adc
fwait
sub
cmp
test
mov
addl
fucomp
and
jp
pop
mov
ret
testl
loop
daa
js
sbb
cmp
ljmp
insb
jae
cmp
and
je
push
xchg
or
pop
test
mov
or
mov
mov
jnp
cli
into
pushf
mov
in
mov
jp
lahf
les
mov
pop
lods
push
flds
lea
addr16
lock
pop
xor
pop
sub
inc
mov
mov
or
mov
aas
dec
and
int
das
pusha
adc
mov
ret
out
ljmp
test
loope
sbb
scas
out
hlt
out
outsb
shrl
repnz
xorl
ja
repz
movsl
bound
add
int3
ficomps
mov
sbb
mov
and
pop
or
xchg
xor
pop
mov
adcb
adc
scas
ss
aas
insl
mov
into
loopne
daa
mov
scas
mov
out
je
mov
fsts
xor
push
dec
shrl
inc
cmpl
lock
icebp
call
jle
loopne
inc
imul
fwait
daa
pushf
xor
cmp
lds
rcrb
xor
shrl
sbb
push
mov
jbe
mov
std
sub
mov
iret
test
adc
hlt
popl
jmp
aad
aaa
repz
mov
pop
mov
shl
les
cmp
xchg
lods
cmp
sbb
stos
andl
adc
aas
adc
nop
incl
xorb
mov
sbb
outsl
add
and
push
push
dec
hlt
mov
add
icebp
lods
aam
or
into
out
out
das
sub
data16
and
clc
sub
cmp
packuswb
int3
jnp
mov
push
fstl
std
inc
add
rcrb
adc
in
adc
ljmp
outsb
movsb
inc
lea
das
dec
push
push
mov
mov
rolb
pop
xor
in
mov
clc
daa
xchg
cmp
jo
sub
jmp
add
test
test
jl
mov
jb
fidivs
aas
lds
push
ret
mov
loopne
xor
loope
jmp
icebp
call
xchg
jg
outsl
inc
push
lcall
adc
test
rcrb
inc
xchg
dec
or
arpl
lods
adc
dec
push
in
sub
fadds
lcall
sbb
cmp
cltd
fisttpll
adc
jle
push
aam
cmp
in
xchg
push
sbb
push
mov
mov
mov
jp
out
lret
push
sub
or
repnz
xchg
jp
jno
js
push
xlat
shll
jb
cmp
push
jmp
mov
fbstp
or
loop
addb
xchg
mov
jecxz
adc
mov
xchg
call
push
and
push
sar
std
call
pop
or
fwait
in
jmp
sti
pop
std
icebp
mov
into
jbe
popl
cmp
shll
push
sub
dec
jmp
sbbb
xchg
push
mov
jl
lahf
idivl
insl
or
xor
rclb
add
stos
push
rcr
ljmp
test
loopne
lea
mov
sub
mov
xchg
cmp
mov
es
mov
stos
loopne
mov
sbb
bound
mov
or
push
fnstsw
cmp
push
int
jnp
sub
lock
test
xor
push
lods
popa
pusha
adcl
xchg
scas
adc
lret
test
mov
mov
xor
sar
aad
dec
insb
jmp
inc
shrb
mov
jl
mov
fmul
enter
in
ljmp
jbe
mov
push
pop
loopne
pop
push
cmp
loop
ss
sbb
push
dec
lret
add
lods
int
pushf
test
mov
xor
call
pop
push
xchg
addr16
pusha
sahf
pop
and
lods
xchg
cmpsl
out
mov
incb
lods
add
mov
xor
and
andl
xchg
cmpsl
cld
sub
stc
jp
add
mov
jb
fnstsw
outsl
je
testl
xor
das
mov
mov
mov
mov
test
leave
xchg
js
fwait
and
mov
and
in
cwtl
or
pop
shlb
negb
or
pop
mov
add
sbb
jp
and
sub
inc
xchg
aam
cmp
stos
xor
pop
cltd
sbb
jl
mov
insb
aaa
in
pop
sbb
xchg
mov
push
push
jecxz
pop
out
idivl
cmp
and
stc
xchg
ja
inc
je
test
push
dec
rcrb
outsl
stos
lret
arpl
je
mov
adc
adcb
ja
mov
or
mov
sbb
repnz
sub
test
fidivl
lods
mov
xor
dec
insb
jnp
int3
jns
sbb
xchg
imul
xor
push
orl
sbb
sbb
mov
pushf
pop
out
xchg
pusha
cmp
pusha
int3
imul
dec
ret
inc
mov
sbb
popa
mov
negb
lea
jp
mov
jno
cmp
loop
addl
sub
push
pop
mov
jmp
je
stos
xchg
adcl
inc
jb
mov
mov
shr
scas
sbb
out
xchg
fcmove
mov
push
push
pop
xchg
fisubrl
dec
dec
and
add
pushf
mov
dec
mov
jecxz
lock
out
gs
insb
inc
adc
ja
jp
imul
je
pop
loop
inc
sub
adc
shrb
and
sbb
andb
aaa
enter
mov
lods
and
mov
stc
add
outsb
xlat
mov
lea
rorl
cmc
or
sub
pop
pop
inc
fs
push
lods
dec
int
xlat
in
sub
xchg
popf
sbb
out
push
and
lret
and
push
xor
mov
outsb
xchg
jge
lcall
shlb
push
ljmp
push
mov
jne
sub
adcb
out
mov
inc
jge
cmp
enter
stos
xchg
adc
mov
mov
lock
gs
push
mov
into
push
cmpsl
nop
sarb
inc
mov
dec
iret
lret
test
and
outsl
lock
arpl
adc
leave
and
insl
call
test
push
int3
ljmp
xchg
cld
pusha
inc
rcll
jecxz
sbb
or
outsl
call
mov
or
pop
shlb
mov
jp
inc
sbb
sub
cli
je
adc
push
push
or
cmp
xor
out
push
mov
stc
xor
repz
outsl
ljmp
or
lea
mov
xor
out
mov
addr16
dec
in
sbb
jne
cmp
adc
cmp
mov
sub
arpl
dec
adc
fistl
and
in
xor
gs
push
xchg
xchg
mov
mov
jne
push
push
aam
ret
xchg
adc
dec
pop
dec
jbe
mov
or
aaa
cmp
lret
popa
push
bound
jmp
mov
cmc
cld
push
daa
cld
dec
fiadds
gs
dec
into
sbb
pop
inc
push
xor
int3
popf
outsl
das
outsl
div
aas
loopne
into
fwait
sbb
push
add
jmp
stc
fdivrp
push
int
gs
mov
push
loop
and
dec
adc
adc
xor
jle
push
lods
in
jecxz
jbe
dec
das
mov
in
iret
test
call
jle
push
flds
xchg
into
dec
or
add
push
jne
adc
mov
popf
mov
imul
mov
mov
int
push
bound
cmpsb
cmc
stc
pop
xchg
jmp
add
xor
dec
shrb
stc
std
into
rorb
inc
push
sub
mov
sahf
test
fwait
mov
xchg
dec
add
sarl
nop
outsl
jl
mov
sarb
xchg
stos
cmc
outsl
cli
jle
shlb
js
push
clc
inc
xlat
shrb
stos
pop
sbb
testl
sahf
cmc
pop
push
dec
pop
dec
inc
mov
cmp
cmp
inc
xor
out
mov
scas
imul
mov
xor
es
push
cmp
ja
ret
imul
shll
pop
data16
sub
sahf
sub
aad
inc
adc
jo
bound
cmpsl
mov
cltd
cmp
mov
out
es
push
sbb
mov
pop
jns
roll
add
les
ficoml
push
inc
lret
je
inc
jbe
hlt
and
pop
std
inc
ja
mov
or
push
or
push
shrl
cmp
pushf
jb
into
add
pop
fwait
addb
sbb
add
outsl
sbb
xor
scas
nop
sbb
jp
cmpsl
aam
dec
rcr
dec
xor
iret
and
sahf
sbb
movsl
outsl
and
sub
cmpsl
imul
dec
loopne
insl
jne
je
push
ret
jmp
cmp
das
lret
mov
stos
iret
ljmp
xchg
imul
lods
test
inc
lock
sub
pop
xchg
sub
xor
jns
je
pop
jnp
dec
decl
or
and
mov
or
call
rorl
sahf
ljmp
add
mov
iret
mov
std
cmp
pop
and
dec
ss
rclb
jmp
mov
std
jno
xchg
mov
nop
push
je
aad
in
inc
int3
cmp
enter
in
sub
add
fadds
stc
fisttpl
cmpsl
loope
sub
int
test
cmp
imul
outsb
mov
movsb
cltd
mov
push
cmp
test
mov
in
add
shrb
lret
cmp
rclb
jnp
icebp
add
stos
adc
aad
je
cmc
mov
insb
pop
dec
sbb
call
ret
add
repz
and
push
jne
test
jecxz
and
pop
sub
in
and
test
push
ds
inc
mov
inc
loopne
pushf
mov
sub
inc
scas
pop
and
mov
inc
or
and
jnp
mov
mov
dec
cmp
pop
outsl
insl
xor
mov
in
sub
cmpsb
sbb
fisttpll
xlat
movsl
sti
roll
adc
pop
mov
mov
nop
push
loope
in
sub
lock
xor
ja
fsubrs
and
das
xchg
mov
mov
and
aas
push
push
push
arpl
sbb
lret
xor
mov
xor
cmp
imul
shrb
sbb
cmp
or
jmp
jns
inc
je
mov
pop
and
call
inc
pop
insl
push
fisttps
push
insl
jle
lahf
adc
cmpsb
xchg
mov
sbb
jbe
mov
fadds
adc
mov
sti
in
aam
inc
jmp
fists
in
add
cmpsl
mov
push
xor
sub
shlb
lret
pushf
imul
inc
mov
gs
and
ret
cmc
fdiv
pop
sahf
jge
test
pushf
call
fstps
dec
ljmp
sub
sahf
mov
addr16
xchg
fs
mov
add
jnp
mov
cmp
jmp
push
call
jo
movsb
adc
dec
push
inc
sarb
in
mov
and
adc
test
repnz
xor
cmp
stos
dec
in
mov
test
pop
or
rolw
bound
rcl
movl
pop
mov
mov
fistps
inc
push
jle
dec
jle
inc
fwait
enter
scas
push
push
and
push
movsb
cltd
push
mov
pop
clc
jmp
rcr
add
xchg
roll
std
adc
and
jae
test
dec
outsb
pop
xlat
lds
gs
adc
popa
dec
and
inc
in
cmc
push
in
dec
fcomip
mov
in
and
nop
andl
in
arpl
aam
out
jle
pop
pop
pop
ss
jb
imul
je
mov
out
dec
push
xchg
mov
cltd
int
pop
lcall
sub
or
ds
pandn
test
psubq
cmpsl
js
fsubrp
jae
dec
daa
bound
cld
out
insl
shl
mov
lahf
inc
imul
shrl
push
cmpb
adc
push
stc
and
adc
clc
mov
scas
xor
sub
cmpsb
fcmovnb
lods
std
fldt
add
arpl
dec
add
ja
inc
test
mov
and
add
mov
ss
scas
scas
and
push
movsb
dec
sub
wrmsr
mov
sbb
sub
jl
sbb
sbb
jmp
pop
pop
jb
or
pop
cmp
cmovno
sbb
push
mov
sbb
push
les
xchg
enter
xchg
hlt
shrb
outsl
es
inc
call
mov
jo
xor
adc
inc
dec
dec
fildll
das
movsb
aas
das
lea
in
inc
movsl
xorb
fldenv
scas
int
stc
addr16
mov
repnz
jbe
rclb
adc
xor
es
out
insb
in
dec
inc
cmp
in
popf
dec
hlt
pusha
push
sub
adc
std
dec
lods
sbb
or
daa
mov
inc
sbbb
lahf
ss
pop
jne
mov
dec
dec
xchg
dec
mov
xor
out
stos
enter
rol
pop
jmp
cwtl
mov
fs
stc
and
loopne
insb
and
test
ja
jne
int
stc
adc
mov
inc
xor
icebp
cmpsb
xlat
cltd
push
shll
pop
std
jae
adc
fdivrs
inc
stos
popf
dec
pop
xor
push
mov
cmpsl
cmpsb
push
cltd
xchg
or
jo
mov
xor
inc
stc
push
mov
pop
mov
or
add
push
shr
ret
repnz
dec
xor
daa
lret
les
inc
aaa
push
jle
mov
scas
clc
fidivrl
cmpl
mov
jne
shrl
repnz
psrlq
xor
push
dec
pop
leave
xor
adc
and
mov
fs
ret
and
sub
loope
pop
jbe
pop
test
push
sbb
fisubrs
in
int3
inc
ficomps
adc
lock
popl
lahf
push
and
or
fiadds
dec
fmuls
add
ds
add
jb
push
rcl
pop
jg
mov
xchg
xchg
jl
mov
xchg
sbb
es
push
sbb
jae
add
push
pop
ffreep
jle
ficoml
int3
stos
lock
inc
inc
loop
mov
pushf
inc
ja
xor
lods
inc
and
sbb
adc
lods
iret
fdivr
sbb
cmc
mov
ret
js
push
dec
inc
pop
dec
push
daa
inc
dec
in
cmpb
mov
mov
stos
out
mov
mov
pushf
stos
jmp
lds
jo
test
gs
jne
divl
popa
push
inc
pop
jle
push
pop
repz
xor
jno
lock
sahf
pop
pop
rol
arpl
insl
inc
int
sbbl
mov
xchg
inc
clc
inc
jnp
sbb
std
and
dec
test
xchg
aas
fwait
cli
int3
sub
gs
out
push
add
popa
iret
loope
in
adc
fisttps
inc
dec
out
bts
mov
jp
neg
push
xor
int
cmp
mov
in
mov
fcomps
test
mov
mov
xor
sti
push
push
lock
inc
cmpsl
out
mov
aad
lahf
jmp
int3
lods
mov
div
push
push
lret
or
mov
sahf
stos
pop
hlt
cmp
dec
lahf
rorl
jp
and
cwtl
movsl
int
es
add
xor
js
repz
add
jp
imul
mov
arpl
daa
sub
jle
mov
movsb
adc
jge
movsl
ds
pop
xlat
pop
pop
mov
jne
insl
outsl
jg
pop
jmp
pop
mov
pop
adc
shll
bound
leave
fcoml
in
das
sub
add
mov
pop
push
aaa
movsb
push
mov
xchg
jne
push
mov
lret
fwait
movsl
xchg
lock
jmp
lds
mov
jbe
mov
in
shl
imul
nop
cltd
clc
cs
jp
aas
movsl
into
dec
push
lods
lock
mov
add
rorl
mov
loop
cmp
or
imul
hlt
adc
mov
movsb
push
call
pushf
hlt
mov
andb
jns
fnstsw
outsb
mov
loop
cmc
in
scas
or
xchg
jge
and
rclb
lea
test
cmp
loop
stos
jmp
out
cltd
xor
xchg
cmp
mov
cmc
aam
pop
mov
cmp
jo
add
repz
fdivl
fidivs
rorb
jge
adc
push
jl
fistl
repz
comiss
pusha
mov
aad
popa
sbb
xor
lock
and
push
or
jns
push
mov
das
xchg
das
cs
mov
jge
out
cli
inc
hlt
hlt
ficoms
movsl
orl
and
and
inc
xorb
and
mov
mov
movsl
cmp
divb
jne
mov
push
outsl
inc
push
negl
iret
sahf
lods
jno
and
imull
ret
lds
adc
lret
push
xorb
push
aaa
fdivr
cmp
ljmp
jmp
scas
mov
adcb
ss
popl
and
das
sbb
test
dec
fwait
add
mov
xor
jecxz
jl
lock
sbb
int
cmp
addr16
xor
imul
mov
inc
sbb
test
mov
push
jo
in
cmpsl
pop
adc
stos
add
cmp
test
xor
jg
scas
cmp
mov
iret
addr16
dec
inc
nop
dec
push
add
and
mov
stc
cmp
cmp
stos
xor
adc
xor
sbb
jno
pop
add
cmp
add
stos
add
cli
into
bound
pop
or
cmp
les
pop
cld
or
test
lods
mov
outsb
and
lret
add
adc
shrl
mov
push
or
int3
sbb
shll
sahf
mov
fsubp
inc
addb
inc
adcb
add
clc
xor
fcmove
clc
xchg
inc
jo
adc
mov
xchg
scas
xchg
push
adc
and
cmp
inc
add
xor
sbb
mov
iret
jmp
fldl
sbb
fdivl
mov
outsl
sarl
hlt
fadds
shl
movsb
push
xor
push
filds
pusha
cltd
jp
pop
jle
xchg
and
jmp
sub
dec
daa
pop
pop
pop
add
add
out
push
xor
push
sub
mov
pop
dec
add
fcomp
pop
aas
mov
xchg
mov
fsubrl
aad
mov
ljmp
xchg
dec
loopne
rcrb
mov
pushfw
mov
test
xor
lret
jno
or
rorl
fistpl
jecxz
xchg
ds
mov
xchg
gs
pop
sarl
cwtl
imul
mov
xchg
sub
fs
clc
inc
aad
push
test
adc
jnp
sar
add
lods
pushf
jo
cmp
push
daa
arpl
popa
add
mov
push
cld
mov
sti
mov
add
pop
sub
pop
shlb
push
dec
jo
cmc
sub
mov
fs
lret
lock
es
in
push
out
jne
xchg
jo
jns
pop
jns
sbb
sbb
es
adc
mov
dec
nop
out
idivl
mov
mov
out
cmp
pushf
fdivr
cmpb
mov
fnsave
xchg
jmp
stos
mov
dec
test
int
sub
push
movsb
pop
pop
inc
sub
fs
nop
in
cmpsl
pop
xor
and
and
fidivrs
jge
inc
insb
pop
shll
dec
xor
sub
pop
xlat
or
or
fldenv
cli
out
xchg
adc
out
insb
in
es
push
pop
out
hlt
sbb
ret
repnz
dec
jp
mov
lods
mov
inc
add
add
adc
inc
mov
daa
and
xor
arpl
sub
push
movsbl
es
cmpsl
push
cmp
mov
pop
mov
cmpsl
push
in
fstpl
mov
dec
aam
popf
mov
mov
aaa
sbb
and
jo
out
fildl
call
je
push
stc
fisttps
jns
aas
push
add
cmp
int
into
dec
in
fmul
jge
push
push
shrl
lods
adc
cmp
incb
jae
bnd
nop
sub
stc
mov
sbb
popf
xchg
stc
dec
pop
jns
cmp
dec
xor
mov
icebp
add
cmp
bound
mov
into
xchg
xchg
xchg
fadds
les
mov
out
xor
cmpsl
cmp
push
sub
xchg
orb
repz
icebp
add
outsb
mov
mov
push
ret
test
pusha
hlt
xchg
lahf
ljmp
jle
cmpsb
sahf
push
popa
push
shll
cs
hlt
or
int
int
dec
push
xlat
add
fdivs
movsb
push
test
or
js
add
ds
cmp
fildl
lret
cmp
or
fwait
or
adc
lahf
jno
xchg
mov
mov
xchg
cmp
xchg
imul
mov
outsb
aam
push
idivl
sub
lcall
xchg
mov
mov
rol
aaa
lock
pop
out
mov
lds
jl
pop
inc
and
push
addr16
in
sub
mov
jae
push
pop
cmpsl
subl
scas
out
or
in
or
ret
imul
sbb
pop
mov
add
sar
outsl
fists
insb
xlat
cld
fnstsw
nop
adc
mov
sub
rcr
movsb
ljmp
adcl
rcrl
scas
dec
fimull
es
cltd
mov
and
pop
mov
jbe
mov
and
nop
sbb
cltd
movsb
sub
and
shr
push
loope
sub
pop
jb
movsb
or
or
jp
add
inc
xchg
mov
nop
push
pushf
enter
cwtl
jp
cmp
mov
lea
jo
scas
mov
adc
or
inc
aas
mov
mov
jnp
cmp
lods
sbb
add
dec
adc
fcmovb
iret
shrl
shll
ficoms
into
stos
leave
aas
push
and
mov
je
or
loopne
test
and
inc
xor
jo
fidivl
orl
ret
ljmp
dec
mov
add
sahf
insb
or
les
mov
mov
dec
sbb
adc
hlt
push
or
add
mov
push
data16
mov
push
add
mov
out
scas
iret
inc
jmp
adc
sub
mov
pop
inc
es
dec
dec
mov
rcll
iret
lods
or
xchg
jp
int
sub
jmp
sub
adc
push
inc
lcall
scas
push
xchg
and
xchg
pop
ja
sahf
and
fidivl
xor
ljmp
mov
dec
subb
mov
pop
rclb
data16
repnz
mov
xor
lods
cmp
loop
dec
jo
nop
add
jl
scas
pop
cmp
rclb
cmp
pop
jge
ret
dec
pusha
sbb
xor
in
lret
inc
icebp
cmp
dec
test
xor
xchg
int
jge
pop
jnp
call
nop
scas
push
xor
sub
sarb
aas
das
lret
mov
mov
mov
push
lret
inc
js
add
mov
bound
mov
rolb
mov
add
movb
in
jecxz
mov
ficomps
push
movsl
cmp
xchg
jle
push
xchg
mov
rcr
cltd
adc
jns
pop
lds
pop
dec
adc
xchg
jmp
faddp
xchg
cmpsb
push
sub
stos
int3
inc
push
pop
push
cmp
iret
pop
outsb
xchg
sahf
or
icebp
mov
push
outsl
cmpsl
lods
pusha
jno
jmp
lds
mull
not
or
jl
inc
mov
sub
fdivrl
lods
popf
push
dec
or
imul
lock
and
cmpsl
xchg
sub
pop
and
loopne
push
inc
imul
xchg
loope
insb
jp
xchg
mov
enter
sahf
mov
mov
cwtl
fidivrs
mov
and
jmp
push
outsl
pop
lcall
sbb
mov
dec
rorb
dec
mov
mov
retw
hlt
mov
rcl
loope
cli
jp
addl
insb
pop
sbbl
jmp
cld
lock
adc
scas
ljmp
ss
mov
or
out
int3
outsl
rcl
testl
mov
into
xchg
scas
mov
or
jno
icebp
push
lea
fidivl
sub
and
icebp
pushf
fwait
hlt
dec
fbstp
sub
xchg
cmp
adc
xchg
or
stos
ret
movsb
sub
jbe
and
daa
jl
decl
push
fstpl
ljmp
fisubs
clc
aad
lock
inc
fistps
inc
sbb
mov
cwtl
fwait
imul
or
mov
bound
jle
shlb
into
adc
lods
mov
jb
out
jecxz
aam
push
adc
add
nop
push
cltd
mov
inc
xchg
cmp
or
sbb
je
pop
jg
or
das
inc
ja
lods
fs
add
cmpl
lods
cmp
mov
out
sub
lcall
int3
shll
aaa
mov
mov
iret
cmpl
fisubl
jg
in
aaa
mov
in
or
sar
or
movd
pop
lea
and
ljmp
in
dec
push
int3
lret
testl
icebp
adc
add
pop
dec
fs
pop
mov
mov
rcrb
clc
pop
and
push
movb
adc
or
adc
repnz
push
dec
fcmovb
dec
mov
lret
cmpsb
jo
jle
adc
mov
ss
adc
or
stos
sbb
repnz
imul
cmpsb
lret
mov
cmp
daa
inc
push
rolb
testb
push
int
test
jp
push
js
dec
xchg
xchg
into
orb
scas
in
xchg
aad
cwtl
in
and
push
cmp
mov
lahf
pop
stc
nop
mov
out
mov
pop
push
jge
xor
push
imul
gs
or
imul
imulb
jns
pop
sub
fsubrs
daa
sarb
imul
xor
push
and
mov
sarb
loop
adc
cwtl
jl
cmpsb
xchg
mov
les
fimuls
inc
mov
push
outsl
rclb
int
or
adc
nop
dec
mov
sub
sbb
pop
daa
add
popf
insl
cmp
fldt
mov
and
mov
adc
repz
xchg
bound
addr16
inc
add
call
stc
push
repz
lods
out
ss
notb
outsw
or
pop
jmp
movsl
fsts
mov
ljmp
iret
inc
loope
pusha
mov
lahf
imul
lret
pop
push
sub
je
scas
jo
or
push
imull
imul
add
mov
or
mov
cltd
pop
inc
rcll
cmp
dec
pop
or
ret
fldl
or
inc
or
enter
aaa
lods
lods
cmpsl
shl
ds
push
mov
mov
pop
adc
jmp
aad
sub
gs
push
repz
mov
add
lea
ss
shll
hlt
pop
aam
imul
jno
xor
mov
pop
sbb
dec
dec
and
sub
and
add
ss
cmp
xor
add
les
leave
dec
push
pop
fwait
xchg
ljmp
pop
cmp
cmpsl
je
fcmovne
pop
popa
in
push
push
aad
xchg
andb
sbb
cmp
inc
mov
push
jmp
mov
rcll
daa
sbb
pop
jnp
mov
fistpl
pop
lahf
inc
les
push
jne
mov
iret
push
cwtl
adc
arpl
xchg
adc
repnz
jb
sti
jno
ret
and
pop
xchg
data16
imul
mov
fisubs
jbe
jmp
mov
add
pop
out
outsb
and
bound
cmpsl
add
mov
pusha
mov
daa
push
xor
stc
mov
cld
mov
pop
jl
test
mov
adc
repnz
and
xchg
in
adc
fdivrs
inc
push
cld
or
jno
pop
mov
fldt
pop
mov
xchg
jae
inc
hlt
inc
push
popa
shrb
hlt
dec
repnz
fmuls
in
dec
sbb
ljmp
pop
lret
jnp
mov
repz
mov
jno
arpl
xchg
cmp
jmp
or
sbb
pop
incl
jg
out
mov
mov
popf
pop
clc
dec
sub
push
hlt
test
mov
or
es
scas
enter
aaa
xor
pop
mov
fistpll
jns
xchg
inc
push
rolb
pop
sub
sahf
pusha
push
mov
cwtl
in
inc
ret
js
mov
mov
xor
faddl
cs
lret
jne
outsb
outsb
mov
into
mov
aam
cmc
daa
mov
pop
mov
sbb
cmc
mov
divl
inc
ret
addb
jbe
mov
dec
mov
sub
out
cld
nop
in
mov
cld
testb
les
out
or
xor
loopne
mulb
cltd
into
inc
gs
inc
cltd
mov
cmpsb
adc
or
mov
popa
xchg
inc
shrb
aad
lods
outsb
jb
fistpl
mov
js
push
sbb
push
cmp
cs
inc
add
fwait
arpl
lods
add
or
roll
fnstcw
pop
xchg
push
jae
inc
sti
dec
lods
out
pop
and
cmp
push
inc
sub
subb
add
and
or
enter
jl
mov
arpl
out
jb
cmpl
jne
push
cld
fimull
fisttps
int
xor
push
dec
push
ret
andb
mov
inc
cltd
push
xchg
xchg
cli
or
and
jb
pop
cltd
push
shrb
cltd
inc
adc
testb
insl
dec
mov
les
xchg
mov
mov
add
xchg
push
adc
lock
or
aad
je
sub
adcl
push
sub
movsl
push
mov
or
jbe
in
cmp
and
subl
movsl
sbb
lods
arpl
mov
xchg
fwait
leave
or
xor
pop
rcrb
dec
das
stos
sub
sbb
faddl
jne
mov
je
jp
es
jge
jo
jno
jecxz
and
int
bound
out
lock
jns
out
stos
call
sub
pop
aad
push
testl
inc
mov
pop
insb
orb
xor
sbb
mov
dec
ss
fcompl
mov
jge
xchg
icebp
mov
push
or
pusha
push
dec
js
aad
inc
fimull
mov
add
in
nop
adc
sbb
shlb
cmpl
addr16
xchg
dec
push
std
stc
pop
cmp
xchg
dec
lds
pop
popf
stc
pop
sahf
jne
movsl
cmp
xchg
sbb
stos
cld
in
mov
mov
and
dec
std
or
dec
jecxz
outsl
inc
sbb
pop
mov
pop
ret
adc
fildl
fbld
addl
fcompp
adc
or
or
inc
repz
daa
ret
lock
sar
jb
push
sub
mov
xor
dec
push
sub
add
cmc
outsb
inc
jl
subl
icebp
int3
jmp
stos
sub
inc
mov
dec
pop
arpl
gs
push
xchg
or
pop
xor
iret
int
lods
lds
sub
xchg
adc
jge
in
and
andl
enter
sbb
mov
xchg
sbbb
pop
subb
adcl
jno
cmp
cmp
push
ja
and
sbb
mov
cmp
rcrb
imul
das
repnz
or
notb
mov
stos
ja
mov
pop
testl
cli
sub
outsl
mov
add
jmp
popa
test
loopne
pop
push
rorl
shld
shl
aas
je
fstl
xor
in
cmp
jg
pop
rcl
push
push
pop
fidivrs
insb
fsubr
dec
and
inc
inc
adc
imul
mov
and
and
popa
xor
cmc
push
xchg
sbb
adc
popf
rcll
jge
es
int3
dec
pop
xchg
dec
pop
in
xchg
mov
mov
or
or
vinserti32x4
jne
cmp
sahf
clc
int3
scas
cli
in
adc
pop
fistpll
test
leave
xchg
dec
lock
nop
arpl
dec
mov
cld
cmp
xchg
fisubs
mov
sbbl
in
sbb
ret
hlt
inc
sub
or
jle
jg
adc
dec
jbe
out
movsl
pop
out
add
inc
ljmp
fsubrl
xchg
jns
sub
test
and
push
fidivrl
bound
loope
jmp
adc
cmc
dec
xchg
movsb
sub
lods
nop
or
jg
sub
xchg
inc
rolb
mov
test
mov
and
pop
dec
xlat
sbb
dec
xor
pop
mov
mov
test
inc
int
inc
roll
sub
int
and
ret
outsb
adcl
xchg
cwtl
scas
mov
mov
arpl
repnz
pop
lcall
mov
loop
stos
repz
add
out
sbb
adc
ja
xchg
fstps
xlat
mov
mov
mov
pop
mov
xor
jne
fsubrs
mov
aaa
lahf
mov
shrl
xor
jne
and
icebp
push
in
xchg
mov
scas
rorl
cmpsb
pop
jmp
shlb
inc
lds
xchg
sbb
jb
fimuls
insb
pop
int3
dec
test
fildll
sbb
fstpl
fsubrs
xchg
je
and
mov
cli
ja
outsl
imul
scas
jge
jno
jge
jo
scas
sbb
lahf
sbb
je
sbbl
insb
insl
icebp
jae
xchg
and
iret
mov
mov
push
push
rcl
inc
inc
insb
push
ja
hlt
loopne
or
pop
test
enter
aad
cmp
lcall
movl
adc
xchg
aas
popf
push
ss
mov
mov
sub
rclb
mov
out
cltd
leave
jmp
and
fs
sahf
pop
xlat
int3
push
int
arpl
jg
js
xorl
dec
clc
sbb
or
fisubrl
pop
negb
arpl
fcmovbe
and
pushf
je
ret
cmpsl
add
push
mov
mov
lcall
fildl
bound
cmpsl
test
mov
xchg
mov
test
lock
mov
and
lcall
push
outsb
pushf
fdivrs
push
aam
mov
fucom
cmpsl
pop
cmp
push
jl
mov
shlb
mov
mov
and
fiaddl
and
jne
test
push
enter
ljmp
inc
push
leave
xor
xchg
push
ja
xorb
jmp
ja
shll
push
or
mov
data16
jmp
push
pop
fldl
sbbl
mov
xchg
pop
out
jnp
sub
pop
pop
sbb
pop
cmp
inc
and
dec
loope
jl
sbb
add
push
mov
push
push
pop
jg
sti
jo
call
or
negl
scas
push
loop
dec
mov
out
loopne
cltd
sbb
out
sahf
adc
xlat
mov
cmp
in
repnz
mov
xchg
mov
inc
inc
idivl
into
hlt
adc
sbb
movsb
mov
mov
or
inc
movsb
mov
cmp
dec
jae
pop
dec
sbb
testl
mov
loopne
push
nop
xchg
or
bound
cs
pop
cwtl
cmp
mov
push
jne
es
subl
jl
repz
ficoml
sarb
int3
pop
fs
pusha
push
fsubr
pop
rclb
repnz
cli
jl
mov
lahf
adc
aaa
es
or
sar
aad
enter
sbb
inc
or
test
mov
jne
pop
lock
ret
sub
sub
subl
dec
inc
int3
mov
les
pop
fsubrl
and
sub
fsubrs
jp
icebp
mov
cs
pop
jg
fcmovu
mov
xor
jp
imul
jne
inc
fsubl
and
aaa
xchg
and
test
adcb
imul
sbb
jle
int
rclb
mov
cmp
das
loopne
inc
outsb
mov
ret
xchg
add
dec
sbb
stos
jb
ficoms
into
mov
scas
xor
mov
mov
or
xchg
mov
mov
push
xchg
lods
mov
cs
xor
cmp
and
and
decl
fcomip
adcl
mov
pushf
pop
cs
or
das
mov
xor
jp
mov
jge
mov
es
cmp
scas
addr16
lret
xchg
je
pop
push
adc
inc
sub
jmp
xor
mov
inc
mov
xor
sbb
xchg
ja
jbe
pop
bound
xor
sbb
stos
jle
sub
mov
mov
jno
ja
dec
stc
pop
xchg
mov
add
popa
cmpps
cmp
js
icebp
lea
push
xchg
ss
inc
loopne
xlat
mov
hlt
mov
adc
in
in
mov
xor
xor
orl
mov
add
clc
mov
push
mov
xchg
inc
cli
ss
iret
shll
pop
icebp
jo
cmp
push
push
push
ja
and
mov
repz
sbb
lret
mov
cwtl
and
jg
movsl
aaa
inc
les
cmpsb
into
xchg
fdivs
imul
pop
scas
push
pop
dec
push
adc
int3
inc
mov
or
hlt
adc
lea
mov
popa
sbb
inc
mov
jg
or
pop
xchg
pop
stc
out
mov
inc
test
jmp
and
mov
lahf
loopne
xchg
shrl
insl
les
push
loopew
cltd
add
arpl
pop
ret
outsb
cmpsl
push
lret
pusha
lret
test
or
adc
push
arpl
or
xorb
notb
jecxz
pop
adc
js
mov
jl
andl
shlb
push
adc
jb
push
mov
jp
xor
sbb
or
gs
pop
lea
and
rorl
addb
ss
ret
jle
aam
xchg
pop
xchg
mov
testb
xor
fidivrl
ret
pop
jp
adc
sbb
lock
test
out
lock
sbb
pop
xchg
mov
adc
jle
lds
cmp
stc
or
sbb
pop
je
lret
enter
lds
and
pop
je
jo
mov
callw
fdiv
and
pop
in
pop
add
adc
inc
adc
lea
notl
das
mov
cmp
sub
xchg
pop
sub
out
mov
cmp
mov
fstps
mov
lock
fidivrl
pop
fdivl
xor
daa
push
out
pop
xchg
bound
out
ror
push
mov
inc
jns
lea
lods
dec
les
ds
fsub
out
adc
add
add
xchg
je
inc
xchg
lods
outsl
nop
push
ror
lret
mov
gs
dec
mov
sbb
dec
pushf
ljmp
mov
repz
adc
dec
je
bound
mov
mov
inc
sbb
clc
movsl
fs
add
movsb
push
fbstp
repnz
jle
aas
fdivl
xchg
sahf
or
cs
cli
or
adc
aas
and
call
push
sub
sub
out
pop
sub
lds
jae
push
add
sub
loopne
je
jns
cli
cmp
pop
pop
cmp
pop
push
xchg
ror
push
mov
dec
mov
dec
mov
adc
cmpsb
inc
je
ss
cmp
adc
xor
mov
pop
sti
add
sub
in
cmpsl
mov
xor
loop
jne
lret
test
sbb
test
inc
call
dec
add
das
stos
daa
jge
cmp
test
dec
outsl
xor
imul
pop
test
push
xor
or
sarl
fiaddl
int
jg
arpl
add
xor
pop
dec
movsb
notb
sub
int3
test
mov
push
xchg
insl
sahf
imul
shll
nop
std
sahf
jle
xchg
fs
cmp
jg
repz
pop
test
outsb
int3
mov
int3
daa
sbb
fmull
add
fs
sbb
subb
inc
mov
cltd
dec
insl
insl
movsl
mov
add
ret
mov
jle
mov
sub
adc
addb
or
call
cs
ljmp
std
imul
test
cmp
inc
jecxz
push
shlb
stc
mov
ss
mov
cli
scas
xchg
sbb
cmpsb
imul
inc
inc
jae
or
jae
lcall
jg
inc
dec
push
movb
insl
call
dec
xor
jns
cmpsl
pusha
push
aaa
xchg
rcll
xor
addr16
push
mov
inc
cmpsl
fsts
pop
adc
push
shrl
cmpsb
stos
or
pop
lock
jmp
cmpsl
xor
lret
push
xchg
setb
mov
ss
and
pop
sub
pop
or
push
in
sahf
dec
outsb
adcb
stos
test
adc
push
and
call
sti
sbb
mov
ds
jge
pop
jne
stos
es
ss
iret
adc
lock
inc
enter
mov
mov
inc
push
sub
bound
xchg
and
sar
test
add
add
stc
test
rcrb
or
mov
cmp
in
cmp
clc
push
leave
push
and
adc
fistpll
mov
lahf
jge
dec
jns
out
scas
orb
dec
or
adc
rcr
inc
scas
lods
lds
addl
add
inc
mov
sti
sub
mov
mov
shrl
iret
fistl
mov
lret
sarl
xchg
test
or
push
add
mov
xor
jo
mov
xchg
negl
cmp
lahf
pop
sbb
mov
cmp
filds
dec
dec
testl
stos
add
inc
inc
clc
or
popa
jnp
push
ja
pop
ds
sub
rorl
xchg
cmpsl
test
jbe
mov
mulb
xchg
movsl
sub
mov
dec
scas
inc
inc
xchg
sub
stc
sar
mov
loop
and
iret
fmull
jp
sahf
sub
push
mov
push
int3
mov
ficompl
outsl
sub
jl
add
sub
dec
adc
cmp
ss
add
xchg
adc
cmp
out
aam
add
and
icebp
xchg
hlt
cmp
and
push
inc
negl
sti
and
and
dec
sbb
call
scas
jecxz
jb
add
out
arpl
mov
add
and
stos
cmp
int
mov
pop
pop
ret
aam
dec
repz
xchg
push
fcmovnb
outsb
pop
pop
mov
mov
inc
sahf
pusha
pop
pop
sub
mov
hlt
mov
push
aam
mov
push
or
lock
fs
mov
bound
mov
mov
inc
pop
pushf
mov
push
fdivl
sti
scas
rorl
fsubrs
and
jnp
bswap
mov
dec
xchg
addr16
aam
call
sub
std
or
jl
push
pushf
inc
or
rorb
pop
cmpsb
fiaddl
and
mov
mov
repz
out
hlt
jmp
scas
sub
clc
pop
int3
mov
test
cmpsl
outsb
scas
nop
jge
add
mov
mov
hlt
in
xlat
adc
test
fiaddl
mov
inc
xchg
push
sub
pop
sbb
les
movsb
dec
lahf
hlt
test
jecxz
add
bound
cli
cmp
add
mov
or
stos
lods
and
inc
and
jo
mov
das
mov
jnp
and
je
push
add
and
sahf
mov
jl
cmp
xchg
lahf
imul
push
les
pop
in
xchg
and
inc
outsl
stos
sbb
data16
or
add
mov
cwtl
loopne
pop
jbe
rcrb
out
adcb
mov
mov
addr16
mov
pop
int
pushf
cmpsl
in
xchg
sbb
xor
pusha
mov
cld
movsb
outsb
sbb
or
ljmp
in
cmp
jle
pusha
fbld
xor
cwtl
pop
pop
xchg
pop
jp
idivl
loop
aaa
cld
and
jno
pop
fcompl
lahf
mov
test
lahf
xchg
in
push
xchg
pop
add
jbe
out
jae
out
pop
mov
dec
data16
test
ja
add
mov
xchg
inc
cmp
mov
xor
jmp
out
pop
or
sbb
mov
inc
mov
lock
pop
adc
push
call
mov
lret
adc
jecxz
rol
push
and
push
mov
pop
sub
aas
or
jecxz
sbb
mov
mul
loopne
mov
xor
jecxz
jno
sar
sub
es
xlat
ja
xchg
inc
lcall
les
scas
cmp
xchg
pop
stos
adc
inc
fisubs
mov
sbb
cwtl
jae
je
repz
adc
inc
pusha
scas
mov
dec
jp
insb
in
pop
push
ret
gs
popa
gs
outsl
test
xlat
mov
addb
xchg
xorl
out
repnz
cmp
arpl
adc
jl
movsl
cmp
bound
xorl
and
adc
divl
dec
add
aad
fs
inc
add
sub
out
test
out
pop
add
pop
mov
ja
mov
mov
fnsave
or
mov
movsl
sub
jecxz
pop
and
ss
sbb
and
xchg
mov
cmp
out
jl
out
jno
jne
sbb
test
cmp
test
add
or
xchg
or
es
fstl
push
jae
aas
les
bound
in
sahf
dec
mov
sub
enter
mov
popl
mov
xor
fs
fstps
sbb
push
xchg
subb
lock
in
or
add
cmpsb
sar
jne
cmp
fsts
sbbb
jp
xchg
out
push
addr16
aaa
mov
lds
fistpll
je
test
stos
inc
call
ss
daa
mov
pop
push
leave
cmp
imul
lea
icebp
jb
inc
idivl
push
or
les
ret
inc
cmc
shrl
popf
out
dec
push
adc
adcb
pop
inc
mov
add
sub
shll
mov
cmp
jl
or
fcomps
adc
inc
stos
mov
loop
addr16
lds
jnp
and
call
dec
das
cmp
adc
imul
xorl
push
add
or
and
cmp
adc
cltd
jb,pn
inc
pop
inc
cwtl
mov
shr
rcrb
dec
mov
pop
xor
ds
push
ja
add
sub
or
add
xchg
dec
jnp
sbb
mul
sarb
add
test
pusha
inc
mov
xchg
jns
cmc
and
inc
xor
jbe
mov
and
add
mov
test
cmpsl
inc
and
push
adc
mov
rolb
movsb
jae
pop
pop
daa
pop
rcrb
insl
xorl
inc
mov
mov
adc
gs
and
jb
and
pop
aam
push
jle
rorl
jge
lret
mov
mov
sub
sbb
fimuls
int3
mov
xlat
jns
xor
mov
mov
and
in
or
in
jle
popa
dec
pop
fwait
mov
mov
sarb
loopne
add
out
movsb
ds
sbb
icebp
rolb
fmul
lock
call
pop
lods
lea
inc
cmp
aad
cmp
cmpsb
fucom
cmp
inc
arpl
jbe
clc
mov
xchg
cmp
jo
jne
push
mov
outsb
push
shlb
cmp
les
sub
mov
cmpsb
cmpb
add
adc
cmp
iret
jo
fsubr
adc
xor
into
or
div
inc
mov
sbb
push
clc
out
xor
adc
push
jnp
xchg
xor
addr16
sti
fs
cmp
mov
cmp
ret
out
and
adc
iret
mov
lods
push
insb
pop
test
or
add
jb
push
fidivl
roll
and
aam
sbb
xor
jne
call
mov
sbb
cmp
femms
cmp
sub
mov
shll
ljmp
pop
sbb
mov
pusha
pop
or
push
es
testl
lods
aas
mov
push
sbb
adc
es
pop
fdivr
cmp
dec
add
pop
and
add
ja
cmp
inc
data16
fldz
rcll
push
outsb
imul
loop
hlt
rcr
in
mov
mov
pop
inc
cmc
push
jp
push
xchg
dec
cmp
and
mov
xor
xor
sbb
in
or
clc
push
idivl
push
mov
xchg
outsl
dec
mov
sbb
test
dec
in
cmpsl
pop
cld
ss
pop
push
insb
mov
dec
adc
pop
xor
xchg
adc
test
icebp
in
sub
mov
hlt
mov
lods
inc
adc
xor
xor
in
sub
data16
dec
les
call
xchg
add
jg
adc
xchg
inc
sbb
and
shlb
mov
or
in
sub
xor
movsb
xchg
aam
cmp
loope
mov
ja
push
mov
icebp
ret
js
jmp
xor
and
and
xor
jb
xchg
dec
jae
je
cmpsb
cs
pop
push
push
sub
frstor
cmpsb
push
lahf
sarb
push
jnp
sbb
mov
xorl
dec
jle
lds
cmpsb
in
sbb
push
mov
push
and
mov
cmp
xchg
fdiv
jle
cs
add
aam
in
jnp
fwait
lret
rorl
cmp
or
int3
dec
sbb
jne
orl
cmpsb
xchg
push
les
lret
mov
mov
and
cmp
jmp
mov
and
push
lds
inc
dec
aad
daa
push
nop
adc
lcall
roll
subb
inc
cmp
cmp
mov
or
test
and
arpl
mov
lock
mov
push
movsb
lock
lahf
cltd
rcrl
out
aaa
mov
or
addr16
xlat
sbb
into
or
mov
mov
dec
hlt
jns
mov
outsb
mov
sub
dec
pop
mov
out
push
pop
sub
mov
shl
lods
into
mov
jmp
inc
mov
xor
fldcw
pop
dec
sub
or
inc
adc
insb
or
popf
insb
add
das
imull
mov
popf
aaa
mov
fisubrl
imul
loopne
and
add
aaa
mov
lods
jg
jb
adc
dec
popf
sub
inc
and
and
pop
sub
imul
sub
test
xor
repz
add
jp
push
add
push
mov
mov
mov
bnd
sbb
dec
xchg
psubusb
mov
clc
push
pop
repnz
mov
movl
push
xchg
roll
mov
cwtl
and
js
inc
int
nop
and
daa
push
fisubrl
mov
cmp
dec
fdivrp
enter
xchg
stos
ja
xsha1
mov
mov
sub
int
mov
cmp
sbbl
cmpsb
mov
movsl
mov
dec
dec
repz
and
int3
dec
sti
loopne
jnp
cmp
cmp
cwtl
out
rclb
divl
push
dec
in
xchg
cmc
mov
push
push
xchg
adc
bnd
dec
push
push
pop
push
pop
test
xchg
adc
push
cld
pop
es
or
call
cli
jmp
loopne
add
in
in
movsb
jnp
scas
and
cld
push
cmp
je
add
shll
jl
xchg
movsb
pop
jns
mov
push
arpl
rolb
scas
dec
push
movsb
push
lock
mov
adc
lahf
adc
sub
arpl
push
xor
add
jns
mov
repnz
aam
sub
iret
pop
int
aad
add
je
mull
mov
loopne
mov
fidivs
sub
and
mov
adc
or
inc
jmp
popa
aaa
push
mov
lods
push
push
xchg
sbbl
sub
dec
aad
in
fdivr
cld
das
out
adc
cmpsl
outsl
stos
and
enter
and
ljmp
fldl
sub
sbb
adc
repz
mov
and
xchg
into
and
mov
sbbb
and
icebp
lds
pop
scas
mov
cmpb
loope
and
fnstsw
pop
mov
push
cmp
es
inc
call
push
adc
push
sub
push
pop
mov
insb
jbe
cmp
adcb
and
xlat
push
mov
jb
mov
int
lret
adc
xor
inc
cmp
push
in
lcall
aas
xchg
cmp
test
out
mov
xchg
shr
movsl
and
loop
push
push
cltd
mov
icebp
fsubrl
dec
lds
ret
popa
xchg
push
push
stos
test
jmp
jne
pop
arpl
xchg
cwtl
dec
xor
push
enter
xor
dec
inc
jmp
test
jecxz
adc
cmpsl
loope,pn
out
loop
inc
daa
jg
out
adc
pop
imul
pop
xor
mov
rcll
pop
sbb
fsub
aam
sub
into
fstp
pop
hlt
mov
hlt
in
sbbb
cwtl
fsts
and
push
sarb
sub
in
adc
pop
in
sbb
or
in
mov
adc
pop
adc
jnp
or
mov
outsb
adc
rcll
inc
pcmpeqw
jge
mov
ret
xchg
pushf
loopne
inc
inc
jle
das
or
sbb
jecxz
sub
xchg
and
data16
es
clc
add
or
mov
iret
cmp
lds
movsl
aas
cmp
add
nop
push
mov
int3
repz
adc
ret
lds
jno
and
push
sbb
lds
inc
or
pop
inc
xchg
sub
mov
push
sub
mov
jle
mov
dec
insl
aas
mov
add
clc
mov
mov
jg
fndisi(8087
or
mov
imul
daa
inc
and
add
jne
adc
mov
stc
jo
fwait
daa
pushf
dec
in
jle
shl
pop
jle
je
dec
scas
inc
mov
sbb
dec
sti
js
cwtl
loope
sbb
mov
out
adc
jl
push
adc
aam
scas
cmp
inc
inc
icebp
jp
out
scas
imul
divb
mov
adc
loopne
sbb
imul
cmp
adc
adc
lret
mov
sti
lcall
and
divb
enter
bound
xor
cld
cmp
dec
sarl
lret
out
fwait
dec
stos
in
pop
dec
sbb
jo
cmp
cmpsl
and
dec
jge
sub
adc
cwtl
jl
arpl
lret
int3
jge
test
and
cmpsl
std
jns
hlt
fstpt
sub
dec
cwtl
sub
mov
or
fldt
daa
push
lock
add
test
push
movsl
adc
in
mov
cmovns
mov
int
fldcw
mov
jle
dec
mov
insb
mov
adc
sbb
data16
push
dec
testb
ret
cmovo
rcll
sub
cmpsb
mov
insb
lds
push
jno
aas
add
xor
jmp
in
jbe
data16
hlt
hlt
loop
xchg
stc
cmp
aaa
out
mov
les
add
xlat
sub
jne
push
leave
inc
orps
dec
andb
lea
imulb
or
pop
jmp
test
lock
aaa
xorb
pop
andb
test
mov
or
add
mov
jp
add
rclb
cs
shrb
sub
push
aad
push
xlat
push
cmp
xor
pop
push
sub
cmp
xchg
and
out
push
data16
and
push
xor
dec
pop
sahf
mov
cmp
sbb
xor
ficoms
adcb
push
jg
or
fsubrs
jge
test
mov
insb
xchg
sbb
les
mov
adc
sub
sbb
sarl
daa
mov
cmc
push
lret
inc
nop
push
add
flds
rorb
lds
sahf
cmp
rcr
notl
ret
adc
mov
jecxz
shr
popa
dec
xorl
mov
or
aam
pop
push
sub
adc
fwait
in
out
push
and
push
cmp
lods
cmp
pushf
stc
xor
jne
dec
jb
arpl
call
lods
mov
mov
shll
loop
push
or
xor
pop
xor
loope
mov
sub
jmp
test
aam
cs
subb
cld
loope
fsubrl
int3
insb
sub
push
ljmp
out
lahf
mov
mov
and
sbb
inc
js
int
mov
xchg
ret
sbb
sahf
gs
sbb
std
insl
mov
stc
nop
and
add
inc
sbb
push
and
pop
rorb
mov
add
pop
in
stc
outsb
and
sahf
xchg
jle
pusha
test
sub
mov
fstpl
popa
cmp
test
pop
inc
pop
scas
cwtl
xor
mov
rcll
lds
cmc
stos
sbb
in
cmp
cmovs
xchg
cli
jecxz
ds
lods
sbb
cmpsb
push
bt
sbb
mov
cmpsl
fdivl
or
inc
mov
mov
sbb
lock
mov
push
jno
mov
lcall
dec
xchg
int3
sbb
test
and
sbb
sbb
push
out
cmp
pushf
mov
xbegin
mov
mov
inc
ss
cltd
sahf
add
inc
mov
hlt
or
inc
mulb
cmp
ret
xchg
jo
mov
mov
jmp
push
ss
jecxz
or
imul
xchg
or
imul
jge
mov
xchg
add
inc
outsb
test
jae
mov
xlat
mov
dec
xlat
dec
test
pushf
call
sub
jmp
jb
push
mov
fidivs
mov
sub
mov
lock
push
or
lock
pop
inc
mov
and
xchg
adc
cmpb
mov
push
mov
push
pop
add
jp
dec
lahf
jae
data16
imul
mov
into
inc
aad
fimuls
dec
xchg
push
fmul
xchg
scas
sub
mov
aas
cmpsb
jns
mov
ret
ror
mov
sub
ja
jp
push
ds
shlb
sbb
stc
fnstenv
adc
out
sub
ds
xor
jmp
adc
mov
cltd
sub
xchg
repz
inc
addb
push
fiadds
adcl
add
xor
jo
xchg
sarl
inc
mov
data16
sbb
jmp
andl
dec
mov
nop
cli
sub
sub
addr16
fld
nop
push
push
add
das
lods
adcl
mov
inc
pusha
pop
dec
cmp
dec
xor
dec
pop
jge
in
pushf
rolb
iret
hlt
inc
into
pop
dec
aaa
fdivs
stos
add
out
mov
lods
pop
imul
sahf
jbe
insl
jae
adc
xchg
xchg
outsb
inc
aaa
inc
and
dec
add
gs
adc
iret
sub
jo
xchg
mov
insb
imul
mov
dec
sahf
outsb
jno
loop
js
std
adcb
inc
inc
push
into
mov
outsl
call
inc
or
lret
xor
adc
popa
push
and
cmp
pop
ret
push
cmp
xchg
mulb
pushf
lea
bnd
pop
and
jns
bound
and
shrb
into
stos
lcall
enter
fstpt
out
cwtd
xchg
cmovg
fbstp
pop
test
hlt
fisubrl
mov
hlt
mov
call
aas
es
mov
jo
dec
and
dec
mov
or
dec
adc
jbe
je
pop
rorl
sub
or
xchg
mov
mov
xchg
lods
aad
add
adc
lods
arpl
xchg
pop
leave
adc
cmpsl
add
push
fs
push
bound
jp
sbb
push
jno
or
mov
ljmp
iret
nop
cmpsl
jnp
pop
incb
cmp
mov
loop
dec
aam
pop
jmp
xor
scas
sub
inc
and
jno
ret
push
mov
outsl
jl
xchg
aad
sub
movsl
into
or
inc
mov
dec
mov
fwait
push
jmp
cmpsb
je
rcl
inc
mov
lock
jae
in
pop
loop
rolb
cld
inc
mov
xchg
out
add
fsubr
jne
ss
push
aad
and
in
or
jbe
rcll
cmp
jns
jmp
jbe
or
adc
dec
out
ror
lahf
negl
stc
call
mov
lret
cmp
jmp
mov
imul
add
mov
sbb
adc
sbb
dec
jp
add
add
cld
test
adc
into
mov
or
pop
lea
xchg
mov
inc
imul
pop
cmpsl
add
imul
xchg
inc
or
outsl
test
push
pop
stos
dec
sbb
mov
fldcw
jmp
sbb
xchg
mov
pop
out
pusha
sub
popa
dec
ljmp
or
mov
pop
out
into
in
mov
les
pop
pop
sbb
pop
sbb
pop
fbstp
and
loope
lods
pop
mov
jecxz
addr16
jo
test
add
and
push
pop
call
inc
int
mov
xchg
out
rorl
and
aaa
xchg
jo
xorl
mov
sbb
mov
mov
mov
dec
add
loop
leave
sarl
jno
pop
movsb
fisttpl
loopne
fsubl
das
lcall
aam
xchg
test
mov
imul
mov
out
mov
mov
fisubrl
inc
add
push
push
and
mov
fstl
aam
add
cmpsb
push
cld
xchg
add
jbe
push
in
xchg
jle
inc
xor
mov
movsb
stos
xchg
test
push
repz
mov
js
jmp
sti
dec
jp
xor
out
dec
xchg
lret
jecxz
movsb
sbb
adc
clc
inc
lahf
aam
xchg
rorl
jle
pop
sub
out
lcall
push
hlt
decb
xor
inc
dec
push
jns
jp
pop
push
xlat
mov
and
fucomi
test
mov
xchg
xor
aas
mov
mov
pop
xchg
mov
movl
sbb
sub
hlt
in
inc
xor
lahf
jbe
inc
stc
hlt
add
fwait
mov
pop
cmp
repz
add
loopne
movsb
fdivl
sub
mov
adc
fdivs
xchg
sbb
int
das
and
sbb
xor
out
pop
mov
pop
mov
std
std
int
sbb
les
xor
dec
popa
insb
add
jle
jbe
aam
lea
mov
or
leave
pusha
inc
out
test
fstpl
rorb
fwait
addr16
fldt
add
jecxz
test
pop
xor
xor
jne
cmp
mov
sbb
sbb
repnz
scas
fisubrl
mov
push
lret
inc
adc
adc
test
push
orps
cmp
push
pop
out
sti
rorb
sub
dec
add
jae
fmul
jmp
pop
add
roll
dec
sub
lods
xchg
mov
fs
jp
dec
mov
xchg
scas
lea
test
push
pop
mov
sub
xor
jmp
cmp
adc
mov
mov
inc
mov
push
call
pop
push
sti
enter
sub
jle
fistpl
test
pop
xorl
pop
sar
sbb
push
hlt
aaa
sbb
push
ljmp
bound
push
push
push
test
jnp
xchg
int3
repnz
pop
sub
xor
inc
lea
mov
rclb
lods
cld
jns
add
lcall
je
and
jno
sub
ds
movsb
mov
cmpsl
jb
cmc
or
push
popf
xor
out
popa
xchg
testb
mov
pushf
leave
rcrb
and
inc
scas
lea
imul
cmp
mov
jge
mov
xor
in
xor
jno
pusha
ds
add
scas
mov
fimull
cs
sub
dec
xchg
jb
sub
sbb
aaa
bnd
xor
sub
fstpl
adc
adc
sbb
ffree
push
sub
sub
cltd
push
mov
not
sub
cmp
stos
mov
scas
cs
mov
lcall
add
movsl
jne
mov
mov
mov
jae
or
jns
cmpsl
imul
movb
cld
leave
icebp
pusha
fsubr
stos
push
mov
lods
into
fimull
xlat
in
cld
pop
push
in
mov
rorl
inc
pop
add
dec
inc
adc
lret
out
dec
push
xorl
pusha
inc
pop
inc
fidivl
dec
pop
lret
popf
sub
xchg
pop
jmp
out
in
arpl
popf
call
sar
pop
xchg
lret
clc
jmp
xchg
out
inc
pop
push
lahf
jmp
cmp
std
add
jmp
xchg
shrd
jp
xchg
loop
adc
xchg
inc
cltd
mov
pop
jecxz
sbb
out
gs
pop
jge
cmp
loope
jmp
aad
test
pusha
incb
xchg
stos
push
sahf
mov
adc
test
push
jns
jno
mov
push
dec
mov
loop
iret
mov
mov
arpl
inc
fsts
outsb
vpsubsw
sbb
aad
mull
shlb
mov
jae
inc
push
mov
inc
mov
pushf
cmpb
scas
pusha
push
push
inc
and
mov
fistpll
repnz
cs
xchg
and
or
xor
mov
push
adc
mov
iret
add
movsb
push
out
aas
mov
iret
adcl
dec
jb
mov
xor
fisubs
sub
je
mov
notb
dec
cmp
or
roll
pop
xchg
rorl
dec
mov
mov
shlb
jbe
jo
cltd
fldcw
icebp
or
repz
out
out
movsb
lret
mov
pop
jnp
fmulp
jp
testl
imul
and
fmulp
rcl
ljmp
shl
leave
xor
or
cs
sub
orl
lods
or
cmpsb
out
scas
test
xor
sub
inc
imul
divb
pop
add
sarb
dec
jg
test
add
rcll
scas
cwtl
ja
mov
pop
xor
dec
jns
xchg
mov
mov
jne
loopne
int
jae
mov
lea
mov
inc
xchg
fucomip
xchg
repnz
jne
pushf
nop
cmp
std
jle
and
repz
frstor
roll
inc
jnp
xchg
hlt
push
sub
jmp
loope
fdiv
mov
and
lods
nop
mov
mov
es
lgs
in
lods
sbb
add
popa
shl
mov
fistps
mov
mov
je
push
xor
xlat
fsubrl
pop
je
inc
cmp
ficoml
test
dec
arpl
mov
pop
push
cli
mov
lret
sbb
andb
leave
pop
add
rorb
lock
xchg
idivl
aad
mov
jo
nop
or
cmp
cmpsb
into
push
pop
pop
test
dec
into
push
icebp
dec
pushf
out
stc
xor
inc
mov
pop
push
mov
or
mov
ror
rcrl
xor
mov
inc
xor
adc
and
sbb
cmp
insb
cmpsb
addr16
call
pushw
aam
fistl
cmp
icebp
dec
push
and
sub
inc
add
js
call
test
push
data16
leave
fistpl
cmp
jb
shll
mov
mov
push
es
fcompl
inc
rclb
mov
push
loop
std
insb
mov
mov
cmp
hlt
push
sub
aam
loopne
adc
jns
cltd
nop
mov
cmp
dec
fxam
jae
jmp
cmp
adc
xchg
jb
clc
subl
movsb
mov
inc
mov
fistpll
cwtl
lret
es
scas
cmp
out
out
outsb
sti
adc
sbb
ret
pop
add
xor
ljmp
jg
inc
pop
cmp
lret
addl
adc
mov
mov
jge
mov
jnp
sarl
fildll
push
aas
inc
sti
xchg
fistpl
outsl
add
sbb
add
rolb
test
inc
lods
test
inc
cs
cmc
push
popf
ficompl
mov
rcl
pop
and
xor
pop
mov
cmp
add
nop
mov
or
mov
pushf
mov
push
leave
aam
sbbb
jp
lds
jbe
or
test
and
mov
sub
lock
sub
call
fisubrs
jbe
mov
jo
mov
testl
in
cltd
out
and
test
cmpsl
adc
push
mov
ljmp
shrl
test
ret
in
iret
mov
mov
pop
mov
dec
add
mov
scas
popf
cltd
repz
stos
and
push
lret
jno
cli
sti
fmuls
sbb
ss
mul
negl
ja
push
xor
std
addb
adc
ret
or
inc
pop
cld
push
lcall
add
ljmp
fsubs
icebp
bound
std
icebp
xor
imul
mov
mov
adc
dec
xchg
push
dec
and
push
sub
cmp
scas
cwtl
xor
rcrl
cltd
loopne
vpshufhw
pop
pop
andl
dec
pop
xchg
adc
push
jmp
jl
enter
daa
lock
stc
or
pop
aam
enter
and
xor
cmpsb
push
inc
shrl
pop
iret
into
in
rcrl
push
mov
push
xchg
push
or
stos
addr16
push
mov
mov
push
outsb
cmpsb
mov
gs
dec
hlt
push
fwait
cld
mov
adc
int
seto
adc
cli
mov
mov
imul
fwait
aad
mov
push
idivl
nop
pop
faddl
cmpsb
cltd
mov
xchg
push
out
mov
add
push
xor
mov
aam
adc
dec
and
test
shrb
cmp
jns
xchg
orl
repz
add
jecxz
cmp
dec
adc
mov
xchg
cmp
sbb
push
repz
jp
lahf
xor
stos
inc
shrb
cmp
inc
fsubrl
into
jbe
mov
sub
sbb
shrb
outsl
out
or
or
mov
mov
rclb
inc
outsl
mov
mov
push
mov
ror
mov
xor
mov
addr16
mov
test
out
push
mov
mov
mov
hlt
xchg
mov
in
pop
add
outsl
pop
mov
fidivs
sub
sub
out
pop
ljmp
xor
add
sbb
dec
xchg
xchg
xor
and
inc
sbbb
mov
sbb
mov
pop
push
xor
xchg
xor
arpl
adc
inc
test
jmp
adc
push
mov
adc
and
inc
sub
scas
insb
clc
mov
mov
xchg
fdivs
scas
mov
mov
mov
cmp
mov
sub
call
inc
pop
sahf
xor
sti
dec
inc
jle
js
inc
lahf
adc
sbb
gs
sub
lret
in
mov
dec
jbe
ss
sub
xchg
shrb
push
fldt
add
push
stos
fwait
movsb
pusha
dec
xchg
sub
imul
xchg
and
jle
dec
adc
cmp
fdivrl
shl
push
sbb
fidivl
pop
jl
imul
scas
stc
pop
mov
scas
mov
sahf
paddsw
lock
imul
jle
xchg
push
clc
hlt
push
push
cmp
hlt
sub
popa
jmp
out
dec
lret
cmp
sbb
sub
icebp
jge
push
mov
stc
mov
nop
jg
inc
dec
aad
push
dec
xchg
inc
mov
clc
push
push
sti
sbb
test
or
mov
inc
lds
and
loope
inc
adcl
sbb
mov
xchg
pop
jb
push
push
mov
jae
fwait
incl
test
insl
mov
jno
sbb
aas
pop
xor
enter
nop
aas
in
or
pushf
fidivs
and
cmpb
jo
sub
aaa
std
and
in
in
jge
cwtl
push
shrb
in
js
pop
and
rorl
rclb
or
lods
mov
test
data16
add
filds
lahf
int3
icebp
jae
inc
xchg
stc
pusha
mov
test
in
mov
mov
mov
ror
sub
movsb
clc
pop
iret
testb
cmp
lea
filds
into
sbb
push
xor
shll
insb
push
push
sub
out
bound
mov
xor
add
push
in
sbb
imul
mov
imul
icebp
push
in
scas
and
out
and
not
add
mov
ss
aad
push
dec
jae
subb
cmp
jl
sub
sub
dec
xchg
push
loopne
cmp
lcall
sub
push
leave
adc
lahf
enter
arpl
jp
cltd
int
aam
ret
and
xor
sub
stos
push
test
jae
mov
pop
sub
add
xchg
mov
cs
adc
cmp
push
rcr
into
jecxz
mov
call
mov
imul
into
fs
jae
push
jle
push
aad
add
xor
jbe
dec
aas
push
xchg
sbb
shlb
shll
jl
addr16
sub
les
or
jnp
cwtl
mov
cli
add
and
rolb
out
nop
mov
jbe
pop
sbb
loopne
mov
cmp
jp
sbb
sbb
sub
sbb
je
lret
jecxz
or
jg
or
adc
mov
repnz
leave
sbb
shrb
adc
mov
imul
jbe
dec
cmp
xlat
mov
fistpll
std
shll
in
lea
mov
nop
add
icebp
int3
pop
daa
test
jmp
rolb
decl
xor
dec
data16
cs
std
cmp
jae
imul
fisttps
sub
cli
bound
arpl
pop
cwtl
fmull
addr16
push
ret
sub
dec
inc
lea
int
aas
ss
adc
and
out
cmp
add
shl
leave
jo
pop
jg
sbb
mov
test
fcoms
gs
fwait
or
lock
mov
cmpsb
xor
mov
cltd
mov
inc
aam
sbb
ja
jmp
and
add
outsb
push
repnz
out
int3
adc
jno
pop
jmp
sahf
sbb
jnp
adc
xchg
cmc
shrl
dec
loop
int3
es
std
cmpsl
jmp
cmpsb
out
adc
push
loop
fists
adcl
sub
inc
or
pusha
mov
test
imul
sbb
mov
xor
jbe
popa
adc
aaa
jbe
push
aam
jmp
cmc
jmp
mov
fsubl
ja
int3
jae
scas
pop
mov
hlt
cmc
sub
push
stos
test
insb
push
inc
cmpsb
mov
dec
inc
mov
sub
xchg
mov
adcb
mov
mov
and
rcll
aam
push
sbb
sbb
fldcw
scas
lret
dec
or
and
jnp
xor
jmp
out
mov
test
pushl
jp
dec
mov
adc
ljmp
pop
in
inc
add
insb
cmpsl
inc
lahf
xlat
add
add
testl
ljmp
add
push
cli
aad
bswap
sbb
xorl
mov
pop
pop
shrw
jp
in
scas
xchg
shll
cmp
sub
arpl
test
int3
xor
push
and
adc
movaps
cmp
mov
test
mul
cld
push
fdivr
or
and
fisttpll
std
loope
dec
sub
cmc
inc
pop
icebp
jp
lds
mov
fiadds
out
testl
jmp
pop
std
addr16
or
outsl
cmp
int3
xchg
aad
mov
xor
in
jmp
push
gs
psubsb
pusha
ret
and
mov
mov
jno
loop
push
dec
ds
pop
xor
jb
inc
sub
mov
sarl
scas
jnp
mov
rcrl
insl
xchg
and
int
lahf
mov
cmp
insb
jl
mov
icebp
dec
push
dec
or
ja
jnp
push
and
fildl
mov
test
xchg
rcr
loop
push
sbb
mov
inc
aam
adc
addr16
dec
mov
outsb
mov
call
jp,pt
jne
ds
or
outsl
dec
xor
mov
xlat
ljmp
out
lret
fnstenv
or
jl
aam
insl
test
xor
inc
lret
or
jecxz
mov
inc
das
leave
scas
ja
in
jb
lret
mov
mov
inc
inc
add
ds
or
aas
cmp
fldenv
gs
in
loopne
pop
test
inc
test
nop
cmpl
pop
frstor
or
dec
jb
stos
hlt
shrb
aaa
shlb
pop
inc
adc
ja
lcall
std
fidivrl
mov
movsl
and
lds
fsts
xchg
orl
pop
addr16
mov
sbb
popf
into
in
lock
fdivrl
aaa
push
mov
jnp
scas
outsl
cmp
scas
lcall
in
jno
lret
sbb
cmp
adc
push
cmp
jbe
repnz
sub
mov
call
shll
adc
mov
pop
hlt
andl
pop
mov
xchg
mov
adc
push
and
sub
xlat
add
rol
xchg
xchg
out
cli
fidivs
das
dec
ret
lea
xchg
out
and
ja
stc
sub
jge
lret
loopne
or
mov
xor
in
xlat
roll
lea
insb
lock
dec
cmc
test
pop
mov
andl
sti
mov
mul
mov
dec
unpckhps
daa
cmp
dec
xor
inc
lods
sub
gs
jmp
scas
repnz
jno
lock
bound
test
mov
pop
int
cmp
pop
dec
xor
mov
jns
cli
dec
mov
dec
dec
sbb
es
xchg
test
push
add
fisubl
pmuludq
cmp
idivl
pop
mov
scas
xlat
lret
cmc
mov
mov
jle
fisubrs
cmova
dec
out
flds
mov
dec
mov
dec
in
dec
rcrl
inc
dec
add
push
es
ret
lahf
dec
mov
outsb
outsb
fs
nop
rorb
scas
cmpsl
in
inc
jno
xabort
aam
xor
push
cld
pop
push
pop
mov
pop
mov
je
mov
pop
aad
dec
imul
stos
les
adc
adc
je
inc
shr
xor
data16
pop
push
or
inc
dec
mov
dec
jmp
xor
xor
sarb
sbb
subb
movsl
jo
iret
iret
leave
dec
mov
sub
xchg
and
aaa
adc
das
xor
jmp
fcoms
fs
mov
daa
adc
stos
push
les
jo
xchg
loope
orb
test
loop
outsl
dec
xchg
mov
outsb
lods
mov
rclb
sti
cmp
dec
fmul
or
aad
mov
imul
add
push
popf
fimuls
nop
xchg
mov
mov
jl
xorl
inc
mov
mov
pusha
sbb
nop
cmpsl
scas
loopne
xor
pop
divb
xor
int
aam
mov
pusha
out
mov
xchg
push
or
outsb
idivb
xchg
adc
inc
iret
fsubs
cmpsl
lcall
loop
ret
xchg
jmp
pushf
xchg
in
ljmp
sbb
js
push
pop
lea
scas
in
adc
pop
mov
call
pop
subl
dec
test
add
fldenv
shrl
mov
add
sbb
dec
cmp
xor
dec
mov
jecxz
rcll
jg
shrb
jno
adc
xor
out
test
jne
cmp
js
aaa
mov
pop
cmpsb
dec
xor
popa
mov
ficomps
xor
loop
or
jecxz
mov
sbb
mov
cmp
dec
rcrb
fmulp
mov
or
insb
sbb
std
adc
mov
inc
aam
hlt
jo
dec
sub
je
dec
enter
or
xchg
lret
das
repz
outsl
mov
inc
adc
lock
cs
xchg
das
adc
sub
popf
lret
imul
out
mov
mov
jmp
lock
sub
dec
iret
xorb
arpl
out
cmp
out
adc
xchg
mov
in
ficoms
dec
fdivl
push
cmp
cwtl
dec
test
mov
lods
xor
and
push
mov
fwait
lods
test
jp,pn
mov
lret
in
mov
into
inc
shrl
dec
daa
adc
xorl
or
or
pop
dec
or
fs
or
push
mov
xchg
inc
loope
and
pushf
imul
repnz
ja
cmp
and
daa
stos
sub
pop
shr
and
das
xor
es
jge
sarl
stc
icebp
cli
frstor
mov
xchg
jo
cltd
enter
mov
into
add
mov
sub
mov
sahf
mov
jg
bound
push
xchg
cmc
pop
sbb
loope
rolb
cmp
gs
and
cmp
call
ret
sbb
sarl
mov
sub
jne
iret
movsb
lcall
push
cli
mov
notb
movsb
jmp
dec
cmpl
xor
dec
jae
fadd
int
int3
cmp
jns
bound
sbb
je
scas
lock
insl
and
add
push
jo
sbb
xor
mov
push
pmaxsw
dec
mov
pop
shrb
jg
repz
inc
inc
cmp
lea
jnp
xor
imul
xor
mov
or
dec
dec
lods
xlat
xchg
and
jno
lret
dec
pop
sbb
adc
and
jl
add
push
repnz
and
and
push
aaa
fcomp
mov
ficoms
add
sub
or
mov
loope
icebp
fcoms
loope
ljmp
and
mov
ss
inc
and
out
mov
lock
popf
hlt
fwait
or
pushf
push
scas
incb
shrl
int
fidivl
fcomip
mov
dec
xchg
xchg
mov
adc
xchg
movsb
cmp
add
stos
ret
pop
or
push
or
adc
push
jg
loop
ds
dec
jmp
leave
adc
add
cs
testb
xchg
les
mov
cmp
adc
adc
pop
pop
lret
loope
mov
adc
dec
xorb
repnz
jo
dec
mov
jbe
inc
push
push
sbb
insl
xchg
lds
xchg
mov
mov
xor
imul
mov
lea
call
add
add
xchg
mov
popa
add
adc
xlat
insl
mov
inc
es
lods
mov
cmc
mov
icebp
stc
sar
and
les
in
mov
and
adc
inc
xor
insl
xor
fwait
mov
dec
mov
jmp
push
push
cmp
rcr
fistl
shl
pusha
adc
cmpl
or
adc
or
inc
jne
pop
mov
xor
jnp
lret
pop
lods
lds
call
test
jle
rclb
jae
mov
xchg
fdivl
mov
fdivl
jp
mov
or
jno
jae
fnstenv
inc
shr
push
mov
sbb
pop
sahf
mov
ds
fstpl
icebp
test
xorl
dec
jne
out
and
iret
je
and
insb
lods
and
cmp
jno
cltd
fwait
pop
out
add
lods
ret
add
jne
leave
scas
lods
add
testb
push
int3
mov
mov
call
pop
stos
jle
rorb
idivb
add
movsb
das
icebp
loopne
pop
adc
je
mov
add
jne
inc
inc
and
xchg
inc
xchg
stc
bound
sbbl
jnp
fldcw
test
jecxz
movsb
inc
jbe
inc
push
push
fisubrl
or
lret
inc
xor
push
pop
daa
fcomps
aaa
dec
clc
bound
inc
push
xchg
mov
out
sbb
loope
xor
push
dec
push
add
inc
ds
pop
push
stos
jecxz
scas
xor
jg
pop
jge
mov
pop
jae
sbb
out
and
lds
leave
mov
jmp
cwtl
in
xor
or
adc
mov
arpl
movb
in
outsb
ret
rorb
mov
int3
call
adc
xor
xor
cmp
insb
lret
lods
xchg
sub
test
dec
fldcw
push
es
jae
adc
fbld
pushf
enter
cli
adc
out
in
cli
mov
or
fnstsw
dec
arpl
jno
xor
add
call
fimuls
or
xchg
rorb
in
add
or
mov
roll
ljmp
bnd
mov
std
clc
push
test
sbb
pop
test
jge
sbbb
mov
insl
jp,pn
fsubrs
insl
mov
cwtl
subb
mov
not
decl
fpatan
pop
push
mov
xchg
out
adc
sbb
sub
sbb
mov
jo
add
dec
in
lds
cli
sti
and
xchg
ret
xor
inc
in
jb
mov
jl
inc
sub
rorb
pop
les
test
push
adc
pop
mov
mov
or
lcall
cmc
aam
lret
sar
jbe
or
fisubl
mov
je
call
testl
push
cmp
pop
lret
dec
push
inc
xor
push
cwtl
add
sbb
idiv
mov
push
leave
jae
inc
sub
nop
push
cli
pushl
aam
addr16
inc
jnp
leave
cmp
aam
jge
imul
daa
mov
sbb
insb
hlt
push
loop
daa
jp
fcomps
adcb
xchg
push
cwtl
pop
mov
stc
rcrb
mov
xor
or
imul
push
push
cmp
jle
and
ja
push
in
out
adc
inc
lods
stos
and
fsubs
and
push
leave
lret
pop
push
fcoms
push
jmp
add
adcb
cltd
clc
call
push
push
loopne
fiadds
and
sbb
mov
popf
mov
inc
xor
sbb
xchg
dec
xor
jecxz
fst
nop
jnp
nop
jo
test
pushw
pop
cltd
arpl
push
stc
scas
ret
sub
and
test
xchg
mov
mov
xchg
pop
std
sarl
push
loopne
push
mov
outsb
ror
cmp
scas
adc
pop
mov
push
aad
aas
xor
or
lcall
data16
mov
jmp
and
push
xorb
mov
mov
test
jb
shll
jae
inc
lret
cld
enter
stos
xchg
and
lret
adc
xor
adc
js
pop
and
jp
xchg
mov
jle
nop
int
xlat
cltd
and
pushf
ljmp
mov
mov
jnp
jns
dec
ret
mov
sbb
mov
test
cli
xchg
das
inc
dec
and
test
lahf
mov
fcmovbe
cltd
sub
pop
lret
mov
fimull
cld
filds
insb
fwait
xchg
mov
ss
inc
imul
fists
dec
sbb
iret
nop
aam
xchg
mov
call
pop
xchg
add
mov
push
fisttps
cmpsb
xorl
imul
jg
sbb
in
jg
jnp
mov
xlat
inc
xor
outsl
mov
and
nop
lahf
mov
push
sub
mov
test
push
sbb
xlat
lock
push
cltd
jle
out
int
xchg
adc
jns
rorb
pop
rcrl
sbb
enter
push
dec
cmp
jl
cmp
xor
xchg
sub
enter
pop
mov
push
mov
push
arpl
in
enterw
push
movsl
xchg
mov
int3
popa
sbb
push
or
in
mov
ds
xchg
push
testl
xchg
imul
insb
stos
call
lods
lods
outsb
sub
add
cld
jp
xor
push
pusha
cs
push
hlt
addr16
xor
jo
jmp
sub
and
scas
push
fstl
nop
mov
cli
adc
imul
push
push
jns
test
add
aas
sub
mov
mov
shlb
cmc
sbb
adc
ljmp
xchg
cmp
outsb
lods
jnp
lret
test
mov
fistps
movl
cmpb
lock
sarb
and
push
les
lods
mov
xor
jge
push
rcll
jmp
push
scas
sub
ret
xlat
enter
imull
out
xchg
dec
xchg
add
sbb
mov
aaa
fs
aaa
adc
jle
stos
ret
jbe
jl
daa
movsb
or
pop
fdivrl
cmp
lock
mov
in
shll
push
jo
roll
leave
xchg
lea
test
sbb
xorb
mov
cmp
fdivrs
stos
subl
add
lret
cmp
mov
sub
and
stc
nop
or
cltd
sbb
dec
inc
movsb
sbb
mov
lods
aaa
push
jge
mov
sub
and
outsb
lock
fisubrs
cs
push
xor
aas
cmp
inc
stos
adc
and
mov
mov
fiadds
scas
xchg
pop
notb
xor
popf
pop
cmp
ja
leave
js
imul
ficomps
dec
jmp
mov
xlat
int3
out
push
movlps
dec
mov
out
sarl
or
sbb
leave
and
mov
jne
jae
xor
dec
jne
and
into
adc
cmp
inc
or
rolb
pop
orb
loop
push
jo
movsb
out
mov
push
jno
add
jp
push
add
pop
repnz
and
negb
dec
mov
call
cmc
dec
sbb
mov
aam
fs
mov
mov
or
lods
push
mov
test
fs
in
sub
jnp
hlt
rcr
push
loop
xor
popf
rorl
aam
outsl
or
loope
outsb
in
fdivrl
aad
mov
pop
iret
movsb
xchg
in
daa
cmp
xor
imul
rcl
sbb
xor
repnz
and
negb
fsubs
in
inc
je
aaa
into
jns
jbe
push
jo
rorb
mov
fidivrl
lahf
in
xchg
lods
push
icebp
dec
fsubp
fnsave
sbb
ret
out
test
pop
sahf
xchg
mov
adc
cmp
lret
arpl
or
adc
imul
jg
add
cmpsb
sbb
pop
cmc
or
shll
jnp
call
push
xchg
push
cmp
dec
or
fs
inc
dec
out
pop
add
movsl
dec
popf
mov
repz
and
andl
lods
lock
pop
and
shr
int
gs
jp
outsl
add
rorb
cld
and
mov
sub
loopne
je
mov
aad
popa
inc
xchg
imul
push
scas
and
test
es
cmc
pop
cmp
mov
jg
loopne
add
xchg
and
mov
cmp
imul
pusha
cltd
ret
stc
jbe
push
negl
popl
mov
or
aam
lods
mov
subl
lret
in
test
lret
sbb
shrl
push
mov
fs
pop
lds
out
xorb
push
adc
mov
and
pushf
and
add
outsl
es
inc
ss
inc
mov
mov
out
data16
fwait
sub
daa
dec
add
mov
enter
inc
pcmpeqd
xor
stc
jmp
mov
mov
jle
mov
dec
sub
and
lret
add
inc
fstpl
out
lods
push
mov
inc
xchg
jbe
cmp
iret
pop
dec
in
xchg
sarl
mov
in
icebp
popa
das
insb
aas
xchg
addr16
ljmp
fisttps
add
and
jns
xor
stos
lds
sbb
push
or
cmc
shr
imul
sahf
push
in
push
xchg
cmp
xor
pop
xchg
rcrl
mov
cmp
xchg
sub
repz
pop
ja
and
es
jae
jle
jl
cmp
xchg
and
aam
jecxz
aaa
mov
add
dec
les
adc
fwait
loope
ljmp
push
adc
je
int
or
add
mov
mov
mov
push
fbstp
adc
push
test
cs
sbb
fcomip
addr16
mov
mov
fldcw
cltd
xor
mov
or
push
imul
add
in
in
jne
mov
les
lods
xor
data16
movsl
iret
ss
adc
push
pop
mov
jecxz
sti
test
mov
and
sahf
xchg
fs
pop
out
inc
insl
mov
adc
mov
out
movl
icebp
imul
repnz
test
dec
add
inc
dec
shlb
fucomp
sbb
movsl
movsl
mov
pop
pop
out
mov
lea
mov
cwtl
sbb
icebp
xchg
aam
fwait
roll
sbb
mov
jne
aaa
cmp
mov
xchg
jb
jb
fildl
xor
fcmovb
push
ror
dec
sbb
sub
sbb
sub
inc
jns
test
cmp
out
into
idiv
mov
push
xor
or
push
int3
pushf
out
cwtl
mov
negl
push
jae
pop
sbb
adc
sbb
das
and
mov
mov
xor
enter
rol
adc
call
jle
sbb
jns
pop
insl
pop
pop
leave
subw
out
ds
inc
fwait
mov
push
jae
push
or
sub
adc
aad
out
adc
fmull
push
testl
sbb
xchg
scas
dec
lea
imul
xchg
mov
xor
jp
js
mov
adc
inc
cmp
mov
dec
int3
adc
dec
aad
mov
rorl
in
jge
push
out
inc
push
inc
or
pop
xchg
outsb
loopne
mov
arpl
sub
mov
addr16
aam
cmp
add
mov
push
gs
push
jno
and
scas
stos
lds
mov
and
or
add
test
cmpsl
mov
xor
pop
push
aam
sbb
jg
fdivrs
je
cmp
outsl
in
imul
mov
arpl
sarb
mov
sbbb
sti
xchg
inc
orl
test
mov
sar
or
mov
lods
mov
shll
mov
imul
mov
cmp
fucomp
sar
minps
sbb
lea
xchg
cld
cmp
int
xchg
stos
ljmp
or
mov
bnd
jbe
and
mov
sbb
testb
sbb
in
xor
jecxz
popf
sub
clc
jne
pop
mov
add
pop
jmp
mov
lods
mov
out
mov
andl
sbb
mov
lds
in
xor
cmc
mov
cltd
stc
dec
jbe
rclb
mov
mov
mov
mov
jmp
out
sbb
and
pusha
stc
push
inc
pop
adc
jnp
je
clc
aaa
jl
xchg
jmp
jae
jle
lds
inc
test
xor
or
and
dec
add
fsubrs
imul
push
pop
fwait
int3
inc
sbbb
bound
jnp
decb
call
and
adc
lods
push
add
test
int3
js
in
sub
xchg
mov
or
pop
xchg
pop
inc
xor
jae
mov
xchg
stos
adc
jo
les
pop
xchg
xchg
sbbl
mov
dec
stos
push
stc
imul
and
dec
adc
enter
jno
dec
js
mov
dec
nop
xchg
js
loope
mov
repz
pop
outsl
push
inc
add
xchg
and
or
pop
int3
insl
jnp
bound
jae
inc
xor
fidivrl
aad
cmpsl
shll
cmp
pushf
dec
xor
aaa
aaa
or
xchg
pop
xor
push
lods
or
sub
ficoms
dec
pop
mov
adc
in
hlt
aam
decl
jbe
dec
into
dec
fsubl
mov
inc
jg
inc
cmp
jb
dec
xchg
mov
outsl
xchg
arpl
pop
insl
jmp
dec
push
xor
mov
mov
inc
sub
aam
shl
adc
dec
sbb
pop
aas
fistpl
xor
sahf
xor
push
inc
mov
mov
scas
mov
mov
arpl
lret
and
xchg
jl
daa
cmp
and
xor
add
decl
in
dec
insl
ljmp
xorb
inc
sbbb
mov
mov
and
jno
fidivrl
popf
xor
mov
aas
xor
mov
inc
pop
push
repnz
outsl
int
mov
push
sub
adc
pushf
call
jo
les
cmp
adc
xchg
sbb
lret
xorb
imul
fnsave
test
push
mov
mov
into
and
adc
orb
sti
loop
fs
outsb
outsl
xchg
jb
mov
mov
sub
stos
and
icebp
xchg
test
or
int
pop
sti
or
cmpb
adc
neg
neg
sti
movsb
xchg
clc
rcll
dec
xchg
mov
add
imul
bound
sub
jl
mov
mov
gs
adc
cmpsl
mov
fsts
mov
mov
icebp
mov
les
ja
or
cmp
inc
mov
dec
jge
aam
inc
push
dec
adc
into
pushf
popf
xchg
dec
sub
jns
rclb
push
aas
add
mov
jp
rorb
adc
insb
cmp
inc
pop
imul
xchg
jb
sarb
imul
filds
mov
les
loope
push
ljmp
mov
dec
inc
and
loop
pushw
call
daa
insl
insl
out
jb
or
fiadds
clc
test
fcmovnbe
and
fisubrs
cmp
int
sahf
mov
stos
fnstcw
lret
pop
rorl
xor
add
mov
stc
and
lods
push
jl
mov
push
mulb
ss
lods
notl
adc
push
fnsave
cmp
inc
vmptrld
ret
xor
sbb
cmp
cmpsl
jb
or
testb
faddp
fildll
jl
xor
adc
cmpsl
push
sub
clc
out
and
fnsave
mov
cli
inc
call
xor
jne
jle
xchg
mov
pushf
rorb
ja
add
xchg
outsb
sarb
push
push
loopne
cmp
xor
sub
in
add
mov
pop
push
das
sti
int
xorl
out
mov
cmp
stc
cmp
xor
stos
pop
leave
push
cs
pop
scas
cmp
add
ret
pop
mov
sbb
xchg
ds
jl
xchg
cmpsl
pop
iret
dec
add
add
fidivs
sbb
das
mov
xor
out
dec
inc
fsubl
xchg
outsl
adcl
add
sub
sar
xor
push
in
je
dec
insl
jne
imul
push
scas
addr16
cmpsb
jbe
inc
and
pusha
test
inc
stos
jb
test
xchg
pop
lcall
sarb
mov
xchg
push
push
and
leave
mov
rorl
scas
cwtl
xchg
fidivrs
push
mov
or
jg
stos
xchg
es
jmp
cmp
mov
mov
fsts
push
jge
fdivl
push
int3
push
xchg
sahf
mov
pop
daa
cmpsb
cs
je
ljmp
inc
sti
cmp
xor
jae
or
mov
pop
call
mov
and
arpl
xchg
adc
adc
out
pop
mov
insl
out
mov
pop
lock
cmc
mov
or
mov
mov
fsub
xor
dec
lds
loop
out
popa
lea
inc
or
mov
clc
mov
xor
pusha
out
jo
push
stos
arpl
nop
cmp
sub
push
ret
dec
push
jg
test
push
lahf
lock
fists
lret
pusha
cmp
push
add
pop
ljmp
cli
add
repz
xchg
test
mov
movb
mov
jp
loop
pop
iret
mov
xchg
sahf
rcl
mov
loope
mov
add
push
fs
loopne
mov
mov
cmpsl
and
adc
jb
jmp
xchg
and
sub
pusha
push
mov
outsl
add
shlb
sti
xor
cmp
das
sub
leave
popf
or
pop
mov
int3
daa
mov
jp
pop
stos
clc
mov
bound
xor
cwtl
lahf
pop
mov
popf
xchg
gs
shl
sbb
or
inc
sbbl
dec
xchg
xchg
sti
aas
out
loope
fs
stc
pop
out
push
sbb
pop
fsubs
jmp
ss
sub
mov
movsl
loopne
jg
adc
mov
fsubrp
mov
fadds
xchg
loopne
cmp
aaa
aas
dec
orb
adc
add
pop
jns
adc
lods
mov
jns
fcomps
pop
jmp
outsb
mov
xor
add
neg
std
mov
bound
push
aam
int3
loope
pop
adc
lcall
adc
iret
mov
dec
js
and
mov
movsb
pop
pushf
sbb
popa
leave
mov
cltd
mov
add
inc
jle
movsb
pop
les
clc
jp
lahf
hlt
pop
fbld
inc
or
dec
adc
in
test
cmp
rcll
jmp
pop
pop
push
addr16
sub
push
test
fbstp
dec
cmp
stc
in
je
inc
mov
sub
and
pop
repz
cmpsb
sub
cmp
xlat
add
loop
mov
pop
push
cmpsb
arpl
sub
mov
dec
jg
inc
icebp
push
repnz
repnz
jbe
lods
ficoml
mov
xlat
cwtl
sub
flds
pop
popl
rcrb
lahf
inc
cli
cli
iret
or
mov
enter
adc
pop
icebp
bound
std
xor
xchg
dec
test
xor
aaa
jne
lods
pop
dec
pop
les
mov
aaa
rcrl
xchg
scas
movsb
aad
jle
mov
add
xor
pusha
int
cmp
add
xor
cmp
mov
push
adc
push
pop
mov
or
dec
rcr
or
addr16
stc
out
shlb
mov
out
or
pop
push
divb
lahf
orb
out
jp
xchg
arpl
xor
jne
fnsave
sar
aas
imulb
inc
jge
out
mov
xchg
inc
sub
dec
aad
mov
out
jbe
xchg
imul
jb
arpl
sub
sbb
xchg
push
loope
cmp
adc
push
inc
clc
leave
out
adc
rorb
push
test
mov
inc
xor
mov
loopne
adc
inc
inc
in
add
aad
test
das
push
mov
cmp
sub
stos
dec
mov
fstpt
sahf
popa
mov
mov
fistps
lret
xchg
pop
clc
sub
loop
xchg
xor
xchg
add
push
pusha
xorl
daa
test
cmp
mov
cmp
or
out
mov
in
adc
dec
outsl
mov
scas
jb
dec
xorl
push
mov
and
cmp
jne
pop
negl
and
push
js
xor
out
addr16
or
imul
cwtl
and
pop
mov
incb
xchg
xchg
fstpl
sbb
and
mov
dec
adc
pop
out
pop
icebp
mov
cmp
test
adc
cmp
cwtl
sub
jp
adc
popf
mov
es
lret
test
orb
lcall
hlt
or
sub
out
xchg
add
push
push
aam
pusha
cli
pop
adc
sbb
cmp
cwtl
pop
xchg
pop
jecxz
in
sub
mov
cld
xchg
inc
mov
mov
jno
xlat
mov
sub
scas
icebp
inc
ja
inc
xchg
out
ja
dec
lea
pop
scas
js
or
xor
loopne
mov
pop
mov
mov
movsl
out
push
sub
scas
outsl
das
sub
lret
mov
pushf
xchg
mov
fs
ja
jecxz
xor
popf
in
popa
xchg
fidivs
shr
inc
mov
xchg
mov
xor
xchg
sbb
xchg
stos
clc
mov
imul
add
inc
inc
push
cmp
xchg
popf
mov
mov
test
test
lahf
or
test
or
je
out
or
gs
mov
mov
inc
mov
xor
call
inc
xlat
mov
mov
cltd
or
mov
data16
out
fistps
inc
adc
pop
push
add
lock
test
fnstsw
mov
lods
add
fsubrl
mov
rorb
shlb
outsl
out
fisubrl
and
push
outsl
lods
sbb
inc
nop
pop
dec
dec
or
jne
mov
sub
mov
shll
jnp
int3
daa
outsl
lcall
mov
xchg
hlt
rol
movsl
mov
cltd
mov
and
sbb
jb
testl
jns
push
mov
dec
or
rorl
cmpsb
jg
mov
out
lret
pushl
out
out
lcall
mov
das
mov
push
sbb
mov
push
wbinvd
lods
gs
sahf
pop
ret
mov
jg
inc
movsb
sbb
cmp
or
pop
cmp
dec
push
into
sar
dec
outsb
or
xchg
je
mov
rcrb
mov
clc
jns
scas
cmpsb
sbb
dec
sbbl
xchg
std
nop
sub
add
dec
mov
into
add
push
cmp
push
mov
dec
aaa
add
imul
orl
insb
in
xor
mov
fdivl
sbb
sub
rclb
arpl
cli
mov
shlb
mov
cmp
cltd
sbb
insl
test
mov
sub
jmp
fiadds
iret
mov
int3
push
fimull
pop
adc
sub
push
ret
inc
jnp
sbb
push
add
in
mov
das
jbe
adc
push
rolb
dec
in
push
or
jle
inc
dec
shlb
unpcklps
imul
or
test
sahf
dec
sub
or
div
pop
xor
push
sbbl
lods
mov
and
lcall
cmp
andl
popf
arpl
push
mov
push
loop
leave
jnp
mov
adc
mov
adc
push
aas
push
pop
xor
dec
mov
push
sarb
insb
xchg
jbe
push
inc
pop
mov
test
sbb
bound
push
mov
icebp
push
jno
push
jmp
and
dec
add
mov
imul
xor
mov
inc
cmc
cmp
cli
dec
pop
inc
pop
xchg
push
fadds
cltd
lret
jl
les
gs
scas
je
push
jl
cmp
fdivrs
inc
bnd
movsb
jns
nop
mov
sbb
bnd
sbb
ds
or
sbb
loop
xorb
xchg
rcrl
cmc
adc
xor
dec
mov
ds
pop
popa
cmp
xchg
jno
sbb
outsb
aad
dec
and
dec
sbb
xchg
aam
xchg
int
std
cli
pushf
cmp
jae
jl
mov
mov
ljmp
int3
pop
pusha
mov
sub
imul
mov
loope
cmp
xchg
cli
das
leave
or
mov
std
jge
dec
ds
mov
das
stc
and
lahf
dec
loop
mov
aaa
cmp
push
pusha
repnz
dec
insl
dec
mov
arpl
dec
pop
out
or
ljmp
ds
hlt
decb
cmpsb
ss
loope
sbb
addr16
jge
inc
lcall
and
mov
stc
push
test
sarl
mov
jae
xchg
ret
mov
test
pop
int
daa
jo
pop
jnp
lcall
loope
add
addb
ja
or
mov
lret
sti
lret
push
jne
out
mov
icebp
sub
outsl
fcomps
lret
pop
hlt
add
dec
mov
imul
fsubrl
jns
sarb
pop
add
jp
inc
out
push
pop
add
imul
adc
and
inc
mov
pop
and
cs
lret
aam
out
and
imul
push
adc
cmp
push
mov
imul
mov
int3
mov
mov
pop
rclb
shrb
aas
je
xchg
push
mov
loop
pop
sbb
hlt
push
lret
aaa
movsb
jb
out
nop
push
add
mov
mov
push
cmpsb
push
add
andb
adc
and
test
pop
mov
push
fstpl
ja
arpl
adc
out
test
push
inc
push
in
sbb
and
inc
out
inc
insb
sbb
iret
jo
and
pop
ficoms
mov
cmp
and
sarl
mov
adc
push
mov
fwait
jno
pop
aaa
dec
or
daa
mov
or
sub
lock
cmp
or
jmp
stos
arpl
in
inc
cwtl
pop
add
add
int
push
mov
dec
mov
int3
xchg
lea
xchg
mov
in
pop
lret
and
incb
cmpsl
movb
stos
addr16
xorb
loope
mov
in
cmpsb
push
push
mov
cmpb
fs
or
mov
xchg
cmp
inc
lds
mov
addb
rclb
mov
nop
jg
jp
pslld
lock
jecxz
int3
cmp
inc
rolb
jl
imull
push
adc
mov
or
mov
sti
lret
cmp
lods
inc
mov
and
in
rolb
dec
jns
inc
stos
or
out
mov
lods
mov
mov
xchg
mov
sub
add
push
mov
out
mov
incb
es
out
idivl
insb
push
js
imul
adc
iret
faddl
pop
push
ja
adc
and
mov
jge
test
sbb
sub
xor
pop
stos
leave
insl
es
test
lret
shl
test
jecxz
mov
loope
pop
sahf
leave
sbb
scas
or
mov
jge
loope
adc
pop
leave
xor
stc
pop
sarb
lds
push
jmp
xchg
push
sub
cmpsl
xlat
adc
ds
jns
test
test
lods
rclb
jae
adc
jecxz
aas
xchg
lret
or
ss
stc
add
sarl
imul
mov
mov
scas
add
sub
cmp
lret
sbbl
cs
inc
ljmp
scas
hlt
in
dec
xor
aad
jns
aas
cwtl
lahf
aaa
jge
push
sub
jle
repz
jmp
mov
jle
sbbb
in
cld
mov
add
ds
lea
lret
or
sbb
mov
rcl
pop
inc
xchg
push
dec
pop
adc
in
cmp
dec
adc
mov
cmp
int3
inc
mov
adc
sub
stc
pop
fdivr
shlb
sub
and
dec
mov
xor
js
jne
pop
pop
add
pop
enter
iret
outsl
sahf
adc
notb
or
pushf
push
adcb
dec
lret
into
loop
mov
arpl
xor
les
push
insl
sub
adc
sub
call
idivl
lahf
cmc
push
je
xor
lea
xchg
stos
cmpl
push
int
and
pop
pop
fistpl
popf
cmp
pop
clc
mov
insl
sarl
dec
dec
lahf
int
dec
or
jmp
int3
shl
inc
pop
lcall
sub
cmp
xchg
jge
outsb
push
les
hlt
out
dec
sbb
testl
sbbb
cmp
into
mov
adc
adc
call
cmp
sbb
inc
pop
push
inc
mov
pop
xor
dec
mov
push
test
dec
rcr
push
sbbb
subl
cmc
jno
stos
push
movsb
xchg
mov
sub
pop
fidivs
inc
sub
les
lock
subl
xor
and
addb
pop
mov
les
icebp
dec
out
std
mov
inc
inc
adc
lock
insl
mov
mov
and
jbe
mov
dec
xchg
loop
ret
mov
fucomi
in
mov
movsb
and
in
or
adc
icebp
push
dec
mov
push
inc
call
fs
fwait
cmp
or
insl
inc
fadds
or
mov
or
cmp
movsb
add
dec
data16
call
inc
divl
inc
lods
xor
jp
lods
data16
adc
scas
cs
sbb
xchg
adc
cmpsl
shrb
in
xor
ds
jb
sahf
or
movsl
and
jbe
xor
or
jnp
add
add
push
sahf
arpl
hlt
cwtl
xchg
jne
dec
pop
and
inc
jne
xchg
xchg
insb
nopl
sti
lret
jae
inc
add
fsubrs
stos
ret
pop
jb
add
inc
stc
push
movsl
sub
insl
and
inc
jp
cmp
cmp
sti
sub
rclb
or
fimuls
push
xor
mov
sbb
jp
stc
mov
je
pop
into
push
rorl
pusha
sbb
xor
cmp
xchg
add
loopne
fisubs
imul
into
adc
jnp
push
out
adc
sub
les
dec
add
xchg
es
outsb
jne
dec
pusha
movsl
adc
pop
sarl
out
jmp
or
push
cmp
mov
sbb
rorl
sbb
setne
mov
je
or
pop
ret
fidivl
out
or
sbb
jg
cmp
jo
fndisi(8087
or
ljmp
jp
shrb
cltd
inc
fs
iret
aad
call
test
jae
lods
inc
mov
cli
ljmp
fadd
test
push
aas
push
inc
icebp
dec
sbb
push
jle
inc
xchg
pop
in
jo
and
inc
inc
arpl
and
pop
rclb
sti
xchg
inc
outsl
pop
xchg
sbb
ret
js
rcll
add
call
lea
scas
pop
jns
mov
stos
push
out
xchg
xchg
mov
cmc
cltd
shrb
sbb
mov
loopne
mov
mov
std
cmp
mov
dec
mov
out
pop
test
mov
mov
push
fisubrs
xor
push
xchg
push
push
jae,pn
inc
or
and
aaa
adcl
jmp
mov
js
int3
scas
shlb
rorl
js
pop
dec
int3
bound
mov
lret
mov
jle
fs
mov
fcoms
mov
fdivrl
jge
clc
pop
push
test
cld
cwtl
xchg
inc
pop
out
int3
jge
insb
daa
aad
and
mov
jg
iret
inc
and
inc
ficoml
xchg
sbb
jb
cmp
loope
fistpl
cmp
repz
and
mov
xorb
dec
mov
popa
out
ss
fs
mov
mov
push
pop
pop
sbb
fnsave
movsb
pop
testb
das
xor
jmp
ss
pop
fildll
scas
sub
jbe
out
lea
inc
addl
mov
imul
mov
mov
mov
pop
ret
dec
orl
dec
cs
jl
adc
push
pop
dec
sub
insl
sbb
mov
and
mov
and
jb
xchg
mov
mov
push
adc
xor
push
mov
inc
mov
out
scas
stos
enter
push
mov
andl
sahf
and
insb
dec
cwtl
add
inc
xlat
cs
jne
into
neg
popa
inc
loopne
and
pop
ja
pop
lcall
pop
outsb
sti
cld
daa
mov
xchg
ljmp
gs
xor
out
pushf
lods
pop
jns
xor
cmpsl
sub
adc
out
xchg
sub
pop
mov
pop
imul
lods
sub
aad
xchg
inc
sbb
or
push
or
pop
adc
xchg
cmp
mov
sbb
lret
clc
idivb
dec
inc
push
lcall
mov
dec
jg
push
fimull
ficomps
add
dec
or
sbb
into
mov
adc
cmp
xchg
xchg
aam
jns
into
jle
jbe
jg
pop
into
or
sub
enter
xchg
jno
add
mov
push
sub
imulb
xchg
pop
adc
dec
adc
mov
lods
dec
adcb
insb
arpl
loop
out
icebp
pop
test
in
pop
adc
jg
call
mov
add
out
movsl
orb
and
rcll
cmp
dec
lea
pushf
out
add
movsl
lcall
sub
adc
dec
cli
lock
inc
scas
mov
test
pushf
dec
scas
in
test
lcall
cltd
mov
mov
adc
adc
adc
ret
pop
xchg
movsb
test
int
lds
popf
cmc
lahf
insb
hlt
xchg
mov
cmpb
push
jmp
mov
adc
and
pop
xchg
jp
rol
fsubrl
cmp
pusha
push
inc
fimull
enter
add
test
outsb
xchg
cmp
and
sub
pusha
sub
pop
mov
and
or
in
enter
loop
or
cmc
movsb
sti
jmp
in
push
add
fs
test
out
xchg
test
jae,pt
jbe
shlb
sbb
jno
mov
xor
test
jae
xlat
sbb
sub
push
flds
add
xchg
push
dec
jp
dec
jne
cmp
shr
mov
sbb
and
loop
inc
mov
fsqrt
xchg
push
and
inc
cmp
sbb
adc
loop
xchg
inc
jns
push
sub
mov
push
mov
jae
jg
mov
dec
movsl
enter
push
and
lea
arpl
mov
ficoml
push
pop
pop
add
xchg
push
add
jb
leave
roll
loope
sbb
lea
inc
sbbb
ds
or
gs
out
popa
call
int
cmpsl
jg
ja
jecxz
lahf
xlat
inc
aam
inc
hlt
sbb
pop
movsl
pop
add
sub
mov
and
das
aam
push
repnz
pusha
or
outsl
ljmp
data16
pop
xchg
sbb
mov
jns
stc
in
loop
pop
mov
jno
sub
push
mov
inc
adc
sbb
clc
dec
data16
pop
cltd
repz
inc
adc
jb
sbb
out
pop
lds
adc
outsb
add
arpl
jecxz
pop
xor
xchg
adc
cmp
outsb
inc
xchg
lods
add
pusha
add
cmp
add
mov
icebp
sbb
jle
mov
and
loopne
dec
cmp
and
xchg
or
push
je
mov
int
rorb
push
xchg
xlat
dec
out
adc
fstpt
imulb
xchg
jl
lcall
fnsave
loope
mov
icebp
out
push
out
leave
mov
hlt
xchg
mov
repnz
lret
inc
push
imul
fists
xchg
jbe
sub
cmp
mov
aam
pop
call
pop
and
push
popa
outsl
cmpsl
xchg
sti
jle
mov
cmc
cmp
xor
dec
and
movsl
lods
jb
sub
out
xchg
mov
insb
jae
cmc
cmp
sbb
loopne
cmp
fstpl
sub
lret
mov
jl
cwtl
das
flds
dec
test
into
sbb
xchg
leave
adc
iret
mov
or
movsb
push
pop
jbe
pop
mov
xlat
repnz
dec
fisubs
mov
aaa
call
std
or
fcoml
ds
sbb
test
xchg
pop
aaa
mov
fldl
push
pop
mov
jo
ljmp
pop
rcl
out
push
test
jg
ret
cmp
sbbb
fs
loope
pop
outsb
sub
dec
pop
cwtl
inc
aad
stos
loope
into
sbb
or
push
push
hlt
test
fldcw
pop
jg
cmpsb
jb
scas
adc
lds
xor
pushf
fcmovu
sbb
icebp
mov
lea
jg
insb
scas
adc
jo
jb
cltd
cld
aam
adc
std
addr16
and
lret
sahf
shld
jns
cmp
cli
push
jns
ja
and
jae
push
mov
adc
cmp
mov
add
inc
test
push
into
mov
mov
sbb
andb
mov
sub
dec
adcb
mov
mov
and
push
push
imul
or
insl
addr16
scas
bound
xrelease
and
test
add
ret
jnp
lock
test
jmp
xchg
rolb
push
into
sbb
out
jmp
ss
cmp
xchg
mov
mov
aam
mov
lea
lret
loop
sti
popf
adcb
lea
inc
mov
in
addr16
or
mov
cltd
fildl
xchg
mov
loopne
in
add
push
mov
and
loop
fiadds
leave
inc
arpl
fsubs
inc
add
dec
mov
adc
jmp
orb
fildll
bound
enter
fnstsw
out
sub
repnz
and
out
and
xor
mov
imul
into
repnz
ds
loopne
aad
pop
jae
jmp
mov
adc
aad
ret
ja
mov
mov
int
and
xchg
out
lods
test
push
dec
pusha
add
imul
push
xor
aas
loopne
jno
or
inc
cmp
push
gs
daa
fdivrl
mov
iret
add
cmp
dec
fcoml
dec
sbb
int3
add
inc
inc
jb
mov
add
sahf
pop
roll
call
data16
inc
dec
sbb
mov
cli
xchg
outsl
push
sahf
mov
or
dec
inc
cld
and
push
mov
movsb
test
fstl
push
rcrl
adc
push
stos
lcall
scas
incl
pop
jno
ret
test
xchg
in
scas
cmpl
outsb
sub
sub
loopne
dec
or
mov
insb
je
cwtl
inc
es
adc
push
js
movsl
add
dec
and
jbe
lcall
add
sti
mov
sarb
jmp
cmp
jns
test
jl
scas
scas
mov
jo
addb
xlat
jge
sbbb
test
mov
xor
scas
dec
add
fwait
out
jb
xor
outsl
adc
push
or
xor
add
jecxz
notl
and
shrl
jns
and
jnp
and
es
leave
divl
aas
and
insb
adc
jp
fucom
movsl
out
xchg
ret
repnz
jo
jne
mov
inc
bound
dec
xor
and
or
mov
adc
pop
sub
cmp
insl
leave
mov
int
aam
xchg
pop
pop
aaa
cld
sahf
jno
mov
sbb
sub
xor
subl
roll
in
dec
out
mov
ds
mov
outsl
js
xchg
fsubs
adc
mov
adc
jae
xchg
push
fisttpl
or
jge
push
gs
subl
dec
jno
xchg
inc
in
insl
xchg
loope
xor
push
cmpsl
out
ss
fsub
subl
xchg
sub
popa
nop
test
mov
lret
xorl
addl
mov
test
sbb
mov
jno
loopne
std
push
sbb
and
les
pop
pop
subl
fs
scas
mov
dec
test
mov
jae
stc
lea
leave
or
ss
daa
sbb
pop
shrl
cmp
push
jl
pop
test
pop
arpl
mov
sbb
add
rorb
pop
call
or
subl
imul
mov
stos
sbb
sahf
repz
imul
rorb
pop
out
push
testl
or
sub
jp
or
dec
call
jle
std
pop
or
outsl
xchg
jle
popa
jae
mov
std
pop
scas
or
adc
cmp
push
movsl
mov
les
enter
fdivrs
subl
loope
xchg
fildl
jp
loopne
xchg
cwtl
mov
ret
test
mov
add
and
dec
movsl
xchg
test
out
arpl
add
mov
std
mov
and
dec
enter
inc
out
repnz
xor
addb
sbb
fnsave
testl
icebp
rcrb
sub
scas
call
test
dec
xor
push
sbb
cld
outsb
and
lods
rolb
insl
add
cmp
or
mov
add
or
mov
adc
mov
scas
and
fildll
cmpsb
aas
stos
std
xchg
adc
add
imul
sti
movlps
movsl
js
icebp
add
push
insl
adc
add
out
cs
xlat
sub
xchg
aad
jbe
xchg
dec
dec
roll
xchg
jae
pop
cmp
inc
test
or
xchg
mov
dec
stos
test
fwait
ret
loop
jae
mov
js
push
xchg
or
push
aas
shlb
testb
int3
out
pusha
rolb
mov
xchg
scas
rcll
lcall
lock
xor
xor
or
int3
xor
sub
cmp
or
xchg
xchg
fwait
movsb
or
movsb
cld
xchg
and
xchg
mov
test
push
push
adcl
fistps
sub
sbb
pop
iret
mov
into
xor
mov
imul
adc
xchg
mov
adc
push
ficoms
scas
mov
stos
test
jmp
scas
adc
stos
fildl
cmp
es
add
stos
cltd
into
stc
ja
in
and
xchg
pop
pop
xchg
addb
push
push
popf
cwtl
aas
pop
mov
ja
or
repz
and
xlat
imul
inc
mov
dec
in
outsl
lods
jp
fstl
mov
pop
sarb
jns
mov
xor
sahf
cltd
dec
mov
cmp
outsb
out
add
mov
insl
das
iret
and
dec
fmuls
stos
xor
shlb
inc
inc
leave
test
push
or
jle
sahf
and
dec
pop
mov
sbbb
jl
cli
lret
jl
rolb
push
cs
sahf
pop
dec
cmp
cmp
int
add
insl
and
ljmp
fs
icebp
cmpsb
faddp
cs
adc
add
inc
mov
flds
mov
xlat
push
adc
sbb
push
sbb
jge
lods
push
mov
leave
data16
fildll
pop
dec
cld
subl
lret
mov
inc
aas
mov
sbb
rcr
lret
inc
shrl
bound
movsl
clc
push
ss
loop
outsb
mov
mov
cmp
insl
inc
sbb
loopne
loop
mov
into
xorb
push
popa
sbb
outsl
ja
push
jp
ss
mov
ret
xor
cmp
imul
fwait
cmp
int
fildll
mov
insl
mov
sbb
mov
push
add
mov
ljmp
inc
repnz
ss
fcoms
mov
push
cltd
test
cltd
in
and
push
out
sbb
jne
repnz
jo
cwtl
inc
and
pop
dec
pop
pop
and
push
cwtl
js
mov
sbb
lock
daa
jno
sbb
sub
sbbl
dec
insl
and
xorb
enter
je
mull
cwtl
arpl
arpl
sub
mov
test
std
icebp
add
rcrl
push
mov
test
pop
test
and
inc
mov
stos
push
mov
lds
in
jge
fstpl
jns
ljmp
sub
pop
mov
aam
test
ficoml
inc
insb
rorb
jnp
sti
aam
btc
inc
cli
stos
out
push
mov
dec
insb
inc
pop
int3
pusha
mov
decb
mov
cmpsb
sub
jb
xor
or
out
mov
xchg
pop
push
loope
sti
mov
shlb
sbb
addr16
dec
mov
lods
sbb
pushf
insb
stc
cwtl
jno
jo
test
mov
and
sub
stos
stos
mov
push
pop
in
out
mov
mov
in
lret
add
mov
push
pop
sub
pop
movsb
lods
add
push
and
jmp
notb
inc
adc
mov
je
aam
xchg
mov
dec
cmpsl
mov
das
fwait
popa
add
orb
outsl
dec
insl
sub
cmp
das
mov
push
ret
jae
sarb
xor
push
push
mov
sub
cs
cmp
jo
fiadds
xlat
xlat
pop
pop
mov
adc
lods
mov
movsb
loope
lods
add
mov
outsl
inc
push
xor
outsl
mov
ret
pop
insl
pop
mov
test
ret
lds
inc
adc
mov
cltd
lea
xor
pop
std
dec
cmp
cmp
cmc
or
gs
hlt
push
aas
mov
push
or
mov
mov
mov
mov
mov
pop
xlat
scas
inc
mov
rcrl
pop
jns
mov
bound
jmp
sub
pusha
cwtl
adc
mov
lods
cltd
aad
cmc
aam
stc
js
sbb
fwait
or
imul
mov
loope
ljmp
scas
sub
imul
mov
jnp
test
test
bound
xchg
mov
pusha
inc
andb
adc
adc
lds
out
iret
xor
call
sbb
dec
les
shlb
ja
mov
xorl
scas
push
pop
mov
cmp
push
mov
or
xlat
mov
xchg
mov
push
fmuls
adc
fldl
sbb
push
adc
mov
inc
sbb
out
xor
icebp
test
jmp
lret
fidivrl
or
or
repnz
cmp
mov
sbb
push
pop
fldt
cmpsl
imul
push
int3
cwtl
push
lock
shll
mov
push
inc
lds
pop
mov
jne
icebp
mov
or
lret
push
jnp
mov
mov
mov
sbb
mov
add
insl
dec
or
stos
pop
push
push
ljmp
icebp
scas
xlat
pop
test
mov
hlt
jns
add
pop
mov
jle
pushf
xchg
test
sub
and
insb
adc
cwtl
test
fsubrp
and
repz
stc
in
jmp
mov
imul
cmpsl
pop
pop
mull
idivl
sti
sub
stos
out
mov
in
in
roll
nop
or
scas
arpl
cld
mov
fnop
xchg
rclb
out
lcall
xchg
pop
outsb
lods
and
or
or
fldenv
loope
sahf
dec
testl
div
fimull
mov
and
call
aam
adc
pushf
pushf
adcl
int
addl
mov
addl
cmp
pop
movsl
xor
out
xor
ljmp
or
dec
mov
popf
jbe
pop
push
call
pop
mov
stos
sti
loope
jnp
sub
lret
push
shlb
mov
and
xchg
inc
cmp
mov
in
cmpb
mov
stos
ds
pop
cmp
movsb
lea
push
mov
cmp
push
add
movsl
push
test
outsl
mov
mov
push
jmp
dec
scas
cltd
sbb
rcrl
sarl
int
push
or
or
sub
lea
sub
fwait
mov
and
push
repnz
mov
rcll
popf
out
jns
leave
out
jo
xchg
in
add
xchg
out
xor
insl
movsl
or
inc
fsub
loopne
outsl
rclb
add
sti
or
outsb
or
push
aas
adc
inc
jl
int3
loopne
add
fnstsw
jbe
sbb
push
loopne
aam
and
cmpl
add
pop
mov
insl
daa
jle
into
cmpsb
pop
add
out
icebp
push
mov
fimull
pop
push
xor
or
fs
rorl
ja
pop
lods
mov
jno
add
fcmove
mov
imul
jle
fs
xchg
push
lret
push
stos
jnp
imul
mov
adc
stc
jge
lahf
push
cld
lea
shl
xchg
lcall
dec
sbb
push
and
add
aaa
lcall
jbe
or
cmp
jne
popf
and
cmp
aaa
fwait
js
fldl2e
push
je
scas
in
lcall
decb
imul
loop
dec
out
pop
inc
or
or
gs
mov
mov
insl
jge
push
adc
pop
test
xor
je
daa
sbb
push
test
dec
out
inc
sbb
in
enter
jbe
in
shl
popa
sbb
xchg
rorb
loopne
xchg
sahf
movsb
lds
clc
aad
xor
lret
push
sbb
xorb
xlat
xlat
loopne
jmp
pop
int
into
mov
scas
push
and
scas
or
or
sub
ss
xor
imul
or
xor
mov
cld
push
into
mov
jae
addr16
jle
xchg
call
mov
test
rclb
mov
clc
cmpb
push
mov
cs
cmp
movsl
adc
inc
push
jae
lahf
inc
sahf
xchg
xor
and
pop
lahf
cmpl
data16
into
mov
cmp
aas
and
scas
lds
jbe
push
sbb
repnz
fnsave
jle
mov
or
shrb
jae
mov
nop
mov
aad
and
lods
mov
in
test
sbb
cmpsb
cmp
add
sbb
push
ljmp
mov
xchg
fmuls
shlb
stc
test
push
mov
cld
lahf
jae
mov
push
enter
out
push
and
pop
test
insl
push
jne
lods
adc
dec
lock
sbb
sbb
repz
loop
cmpsb
sbb
fbstp
movsl
or
lret
ret
cmpsl
xor
pop
xchg
mov
repz
jae
rolb
mov
popf
lds
push
in
cmpsb
adc
lods
adc
fdivrs
push
xchg
shlb
das
sbb
outsb
sub
aas
jmp
cli
loopw
rorb
inc
xor
xchg
enter
sahf
sbb
stos
xor
scas
mov
cmp
stos
jmp
bound
or
cmp
test
in
movsb
popa
clc
bound
mov
popf
adcb
sub
sti
add
jno
jb
fwait
popa
mov
cmp
aam
std
push
in
xor
repnz
shrl
lds
jb
mov
ds
xchg
mov
push
int
dec
mov
iret
sar
and
idivb
stos
hlt
lds
push
int3
dec
add
popf
xchg
push
popf
xchg
cmp
sub
xchg
xor
inc
mov
lods
fisubrs
add
mov
repz
jnp
cld
imul
and
addr16
add
cli
inc
xchg
xchg
push
add
imul
scas
movsl
jb
mull
mov
push
adc
push
push
cmp
clc
push
push
insb
pop
insb
sarb
fstps
rorl
fs
cmp
fldt
leave
das
mov
or
fwait
adc
imul
in
add
arpl
cmpsl
mov
lods
sub
push
push
pushf
out
mov
stos
mov
jg
pusha
hlt
xchg
ret
add
xor
mov
pop
and
sbbb
mov
loop
mov
xchg
jg
jbe
loopne
enter
push
xchg
les
dec
jg
mov
ret
xor
lea
sub
cwtd
push
ret
out
mov
ds
rcrl
ljmp
cmp
mov
jp
in
xor
jmp
in
arpl
dec
and
mov
sbb
mov
jmp
mov
fimuls
fadds
mov
int3
cmp
pushf
dec
imul
das
mov
mov
enter
xchg
pop
inc
stos
xlat
add
pushf
mov
or
fsubrs
fnsave
or
pop
jmp
jb
fcmovb
xor
and
cmpsb
cmc
stc
sub
repnz
dec
out
fcoml
jl
and
or
pop
adc
xor
mov
or
pusha
push
movsb
or
mov
pop
push
cmp
fwait
pushf
shrl
add
dec
cmp
out
or
les
sarb
adc
movsl
stc
mov
dec
sti
mov
arpl
pop
lods
test
lcall
in
xchg
push
sub
mov
loope
dec
mov
push
mov
fimull
mov
push
adc
jmp
dec
dec
call
nop
push
lods
test
jo
or
xor
push
lcall
jmp
or
ljmp
push
xor
push
test
push
mov
cmpsl
and
inc
push
mov
out
mov
and
inc
sub
das
inc
hlt
fldl
mov
scas
addr16
cmp
sti
sub
scas
cmpsb
inc
repnz
jae
mov
lock
in
loopne
pcmpeqb
clc
dec
adc
jle
fists
pop
cmpsl
xchg
or
push
push
xor
xor
xor
xor
imul
loop
mov
lret
jo
outsb
enter
gs
mov
jg
adc
cmp
cwtl
sbb
jae
popa
out
leave
mov
xor
mov
cld
pushw
mov
push
push
data16
fcmove
cmp
out
mov
sbb
inc
and
pop
lret
add
imulb
shll
in
mov
cmp
add
xchg
mov
or
incl
cld
dec
push
daa
roll
adc
frstor
insb
add
mov
lds
rcrb
aad
pop
inc
cmc
dec
out
jne
xor
xor
jno
rcrb
push
nop
je
addl
imul
mov
call
outsb
jbe
jg
out
daa
orl
pop
mov
fistps
mov
push
xchg
imul
mov
gs
ret
cwtl
and
enter
lahf
popa
jno
ret
sbb
iret
repnz
in
pop
lock
loop
shrl
xchg
rcl
jb
scas
pop
std
mov
rorl
sub
repz
pop
arpl
and
pop
add
mov
out
out
push
cmc
insl
inc
sti
and
mov
pop
mov
inc
sbb
imul
jg
incl
stos
filds
or
or
movsb
pop
roll
pop
imul
insl
jmp
xchg
pop
scas
fdecstp
hlt
dec
repnz
gs
jo
das
push
in
in
movsb
scas
jmp
xor
movb
decl
fdivl
imul
push
xchg
loopne,pt
sub
lods
mov
cmp
dec
testl
pop
rcrb
lds
scas
sub
loope
cs
rol
frstor
insb
rcr
mov
pop
xlat
pop
sysexit
jmp
adc
test
ret
lcall
jg
sub
mov
fnstcw
mov
cmp
jns
sbb
pushf
nop
mov
repnz
nop
lock
pop
sbb
test
jmp
jb
cmp
cmp
hlt
or
lcall
movsl
fcomip
scas
stc
xor
mov
dec
les
ds
outsl
cs
inc
adc
lret
sbb
pop
jmp
imul
push
lds
jle
or
xchg
lods
movsl
repnz
mov
or
ret
sbb
mov
aad
mov
pop
mov
push
test
push
lds
cmp
mov
add
stc
push
stos
jmp
movsb
addr16
sub
and
es
adc
xor
mov
adc
sub
adc
pop
jo
mov
popf
das
scas
mov
aas
mov
int
push
rcl
inc
mov
test
pop
xchg
sub
mov
mov
stos
cmp
movsb
aad
lds
clc
xor
fstp
cs
push
jns
xor
xchg
jb
lcall
pop
push
cltd
fildll
repz
in
stc
es
mov
in
pusha
or
xchg
push
into
ljmp
cmp
and
mov
and
mov
rcrl
push
lock
fcoml
dec
and
test
int3
or
arpl
mov
shr
pop
push
cmp
bound
mov
mov
lock
xchg
stc
adc
mov
push
add
sbb
test
mov
jmp
sbb
and
xchg
xchg
mov
jae
imul
cmpsb
sub
fistl
push
lcall
mov
mov
and
test
lds
stos
sub
stos
pop
lahf
loopne
add
push
or
inc
xchg
xor
jbe
add
fisubrl
lds
into
jp
jmp
push
pop
jp
sbb
mov
sub
pop
int3
mov
and
ret
or
scas
scas
stos
aaa
in
sbb
js
inc
pop
les
mov
das
add
mov
loopne
lds
ljmp
or
sbb
mov
sub
pop
pop
fistl
out
repnz
scas
test
mov
cmc
in
pop
xchg
and
cmpsl
fstp
stos
mov
and
aad
orb
adc
mov
push
outsb
mov
shl
push
hlt
mov
xchg
pop
ds
aaa
pop
or
jo
ss
sub
xor
pushf
bound
push
sgdtl
daa
cmp
loope
sarb
push
mov
addr16
out
inc
dec
lock
mov
adc
xchg
sbb
push
cmp
inc
into
fnsave
lds
jno
push
push
addr16
lret
in
mov
insb
jmp
insb
mov
int3
jmp
mov
scas
les
lds
push
inc
in
fs
sti
jecxz
cmpsl
cmpl
cmp
imul
dec
or
xlat
jo
dec
test
test
cmp
jl
dec
popf
inc
mov
ljmp
repz
jmp
sub
addr16
ja
orl
loopne
adc
jl
mov
arpl
mov
mov
mov
outsl
mov
loopne
shll
lods
mov
xchg
out
loope
xchg
and
mov
je
dec
add
scas
adc
mov
jne
pop
sub
dec
xor
ret
lcall
hlt
pusha
addb
incb
inc
shrb
cmpsb
and
push
ficoml
movsb
jbe
xlat
fwait
mov
mov
mov
popf
sbb
xchg
jp
lods
mov
stc
nop
outsb
addb
daa
cmpsl
test
inc
rclb
icebp
clc
push
and
xor
testl
add
movsb
out
push
push
xor
dec
dec
es
out
xchg
adc
add
les
out
mov
dec
arpl
fwait
push
xchg
cmp
arpl
outsl
mov
nop
dec
sar
sbb
cwtl
sbb
inc
mov
xchg
add
test
mov
mov
cmc
aaa
mov
test
cmp
js
cmp
cmpsl
test
inc
cltd
sub
xor
mull
sub
gs
jmp
les
jbe
dec
adc
push
loopne
mov
inc
lock
cmp
mov
pushaw
les
aaa
and
push
sbb
sub
jb
ja
xchg
add
lret
or
das
push
stc
cmpl
xor
clc
or
ret
fld
and
xor
cmp
dec
push
cmp
and
or
mov
cmp
ljmp
jle
mov
andl
cmp
test
adc
dec
or
stc
pop
mov
int3
es
ret
or
jo
ret
mov
ret
scas
pop
out
pop
test
mov
pop
lods
pop
cltd
shrl
mov
fisubrl
imul
popa
sub
xchg
inc
popf
sbb
pop
push
test
adc
dec
cltd
jnp
cli
push
and
fdivrs
lahf
data16
mov
mov
dec
out
lock
pop
pop
inc
sub
sub
dec
popa
dec
hlt
call
stos
ja
jg
je
push
jp
pop
cs
or
xchg
out
or
mov
mov
pop
cmpsb
xlat
test
mov
jp
into
push
and
xchg
push
sub
mov
jmp
inc
imull
pop
push
sub
and
sub
fmul
dec
fimuls
gs
xchg
dec
fs
dec
sub
or
jo
out
and
lods
and
out
lcall
mov
xchg
push
mov
imul
std
adc
xor
mov
cmpsl
mov
in
adc
movsl
sbb
ljmp
cltd
testb
test
push
js
adc
shl
iret
imul
inc
mov
dec
xor
out
cmp
pop
dec
insl
imul
add
mov
cmp
clc
imul
adc
and
cs
adc
out
repnz
scas
and
or
mov
ljmp
shl
and
sub
sub
pop
pop
sbb
fdivrl
and
sub
inc
or
mov
in
lcall
imul
jno
push
data16
xchg
mov
fistpll
xchg
addr16
jl
lahf
sub
pop
mov
ficompl
fdiv
push
std
add
shrb
xadd
mov
pop
cmp
jnp
test
xchg
incb
dec
push
push
jmp
dec
xor
mov
popf
std
sbb
leave
mov
sbb
adc
cmp
out
dec
dec
je
shlb
adc
sub
shrl
pop
or
scas
cltd
movsl
mov
popf
gs
test
cld
repnz
mov
push
add
ljmp
inc
push
jle
div
int3
dec
in
sub
jge
mov
xor
and
sub
push
cmc
pop
call
fcoml
les
cmpsb
nop
inc
orb
mov
mov
les
mov
jns
aam
inc
mov
pop
pusha
cmp
adc
push
cmp
nop
add
lcall
pop
mov
insb
xor
push
flds
add
mov
jecxz
inc
ficoms
xchg
int3
sub
push
gs
lds
test
test
mov
sub
imul
jae
std
stc
push
mov
mov
and
push
loope
addr16
sbb
jne
dec
jmp
rclb
mov
mov
leave
pop
mov
cwtl
adc
loopne
shrb
adc
ljmp
loop
lods
jmp
push
pop
mov
pop
in
imul
and
test
and
xor
popf
jo
cmp
mov
aas
inc
clc
popa
inc
aad
clc
iret
sub
les
sahf
fwait
das
xchg
jne,pn
popa
pop
cli
and
mov
fcomps
imul
mov
mov
xchg
pop
jne
mov
sbb
pop
dec
sub
push
push
pop
aaa
insb
ds
ret
mov
mov
adc
fisubl
repz
rolb
pop
cmpsb
fldcw
das
cmp
imul
cmp
add
sbb
and
in
repz
aas
jo
inc
stos
popa
aas
xor
sub
jl
popl
sbb
call
mov
sub
ficoml
fs
xorb
cmp
insb
cmpsl
sti
push
inc
xchg
mov
xorb
outsl
mov
mov
shlb
es
stos
cmp
mov
in
aas
inc
or
in
loop
loopne
adc
pop
cmc
xchg
movsb
add
loopne
inc
push
mov
lea
xchg
xchg
add
ret
xchg
in
push
push
imul
sahf
sub
mov
lods
dec
jns
cmc
lahf
or
mov
dec
inc
push
sub
std
mov
adc
in
addr16
xlat
push
xchg
mov
mov
int3
sti
pop
bound
arpl
add
scas
mov
push
dec
lods
leave
loopne
dec
push
icebp
mov
fs
mov
fidivs
pop
aam
in
loope
ror
mov
sarl
dec
cmc
inc
out
idiv
dec
stc
or
cmpsb
call
sbb
testb
fs
dec
out
pusha
iret
jecxz
mov
aad
pop
sbb
push
popa
js
in
inc
mov
xlat
push
insb
adc
or
mov
shl
cmp
and
es
jae
mov
int
sbb
xchg
add
stos
fidivrl
ss
pop
bound
test
xor
bound
repnz
cld
fwait
xorl
test
sub
lock
iret
ret
pop
push
data16
cwtl
int
push
fadds
xchg
iret
leave
add
push
inc
stc
jb
push
pop
nop
repnz
jno
or
adc
add
mov
sahf
out
and
cmp
rcll
ja
neg
out
mov
icebp
popa
shl
hlt
pop
mov
xchg
xchg
sub
xor
incl
dec
sar
xchg
mov
lret
add
movsl
cmp
pushf
dec
addr16
adc
sarb
jl
das
ret
jno
jb
sbb
and
sbb
push
fcompp
jg
inc
shlb
aas
ret
mov
mov
xor
jecxz
ret
xor
les
push
cmp
inc
push
push
fcmovu
or
test
inc
mov
and
mov
xor
add
mov
xor
push
mov
cmp
lea
stos
fs
inc
inc
stos
int3
xchg
mov
cmp
push
push
int3
pop
int3
rolb
sti
cmp
dec
or
jp
test
fidivs
push
xchg
les
clc
movsl
fldln2
in
adc
jnp
push
adc
mov
in
push
jl
fimuls
cld
out
cmp
ss
in
repnz
xchg
ja
ss
sbb
fwait
mov
push
stos
dec
rorb
adc
aas
out
daa
dec
loopne
out
or
or
pushf
rcll
sbb
xchg
pop
mov
out
push
xor
nop
push
lcall
cmp
mov
testb
notl
loope
xlat
mov
mov
outsb
gs
xor
xor
outsb
and
into
in
testb
divb
dec
pop
insl
enter
xchg
int
push
ljmp
ficompl
in
imul
dec
mov
mov
push
sub
pop
stc
xchg
mov
ss
xor
lock
mov
cmc
mov
lcall
add
and
jnp
sbb
shrl
lret
je
fs
xlat
or
pop
and
sbb
cmp
inc
sahf
xchg
pop
mov
in
mov
cmp
lock
mov
div
sub
inc
ja
and
fisubl
xor
movsl
loop
shlb
imul
push
out
mov
mov
fistl
and
test
jbe
or
or
fbld
lret
pop
inc
rorb
sub
andb
nop
lcall
push
movb
insb
mov
xchg
adc
test
repnz
int
mov
pop
inc
add
mov
cli
aad
test
dec
mov
out
dec
scas
out
imul
or
pop
out
cmp
out
addb
cmp
lea
loope
ja
xchg
icebp
push
inc
inc
mov
mov
adc
in
cwtl
lcall
push
daa
into
out
xor
sub
test
hlt
sbb
mov
jo
mov
pop
imul
insb
jae
inc
out
fldln2
cmp
xor
mov
xor
dec
hlt
jno
fmull
imul
pop
mov
xchg
aaa
int3
leave
xlat
push
aam
sti
push
fisubl
inc
xor
test
cmp
shrb
sbb
ret
sub
cli
cmp
shll
mov
ret
dec
cld
or
cld
push
icebp
add
lock
mov
jmp
xchg
dec
cwtl
cmp
out
sbb
ret
shll
xchg
fisubs
js
scas
mov
lods
lahf
fldl
and
sbb
lock
push
test
sti
fbstp
rorl
mov
mov
or
dec
insl
or
jns
jecxz
push
inc
cmpsb
mov
mov
stos
push
inc
inc
aas
dec
jle
out
je
aas
js
sbb
cld
cmp
icebp
xchg
jl
icebp
mov
cmp
cmp
push
push
xlat
inc
sbb
fisubrl
test
popf
imull
pop
push
cmpsl
jns
xor
jbe
sbb
lret
jns
dec
pop
sub
mov
fadds
push
adc
adc
pop
mov
insl
adc
mov
rcrb
dec
mov
adc
repnz
and
or
mov
orb
bound
andl
testb
ror
jmp
xchg
push
rorl
in
push
xlat
loope
loope
and
aam
loop
lea
cmpl
aas
cmp
mov
cmp
mov
mov
loopne
mov
loope
cli
stc
sub
cmp
icebp
insl
and
sbb
mov
divl
insb
clc
scas
xchg
cmpsl
mov
xor
fcoms
mov
das
inc
xor
fbstp
and
push
div
pop
cmp
push
stc
cmp
ror
jmp
pushl
mov
fcoms
inc
cmpsb
test
lea
and
mov
data16
add
jns
mov
outsb
aad
add
shll
shl
test
insb
dec
jnp
fsts
dec
iret
push
test
mov
jae
push
aad
aad
add
out
mov
js
out
cmpsl
push
mov
adc
loop
inc
jge
jo
imul
idivb
imul
js
fidivs
adc
xor
xchg
dec
adc
sti
or
lea
out
bound
call
sbb
mov
stos
leave
push
xchg
pushf
in
adc
mov
imul
push
mov
int3
or
test
sub
adc
nop
or
jge
fsubl
imul
mov
mov
mov
lret
mov
aas
arpl
cmpsl
mov
int3
sbb
lret
mov
jg
lods
aad
ljmp
outsb
cmpsb
pop
arpl
das
push
add
cmc
fstp
ljmp
shll
push
mov
cmp
cmp
xchg
xor
xchg
in
pop
push
sti
shrb
xchg
pop
out
mov
pushf
xchg
outsb
popa
jl
aam
sbb
in
enter
push
sub
icebp
ja
cs
push
push
jne
xor
pop
mov
shrl
insb
dec
lea
out
sbb
rol
jp
jle
sbb
pop
cmpsb
and
mov
aas
or
mov
js
data16
sbb
lea
jnp
in
aas
das
sub
popa
movsl
mov
mov
cmp
xchg
adcb
xchg
in
jecxz
out
lcall
xchg
inc
jae
inc
jecxz
pushf
popf
xor
sub
pop
xchg
psraw
xchg
jb
pop
push
dec
sti
es
iret
repnz
outsb
sub
out
loope
out
int
out
xor
cmpsl
mov
xchg
test
or
fcoml
push
aaa
popf
lahf
and
cmc
test
xor
cmpsl
add
pop
cltd
fistpl
push
pop
inc
xlat
clc
mov
dec
cmpsl
mov
jge
loope
dec
xor
cld
push
cmp
xor
leave
jmp
push
mov
mov
mov
lods
out
je
std
cmpsb
in
dec
leave
pop
popa
push
aad
repnz
mov
into
cld
push
cmpsl
std
lock
into
shrb
pop
inc
xor
scas
sahf
nop
lcall
xchg
inc
sub
jge
fcompl
push
xlat
mov
bound
pop
cmp
stos
sbb
mov
add
test
cmpl
negl
and
filds
repnz
lahf
sbb
xchg
push
mov
aas
xor
xchg
aas
stos
ja
and
cld
mov
xor
stos
mov
cmpb
push
push
mov
inc
and
lret
dec
shll
out
inc
loop
pushf
pushf
clc
sbb
icebp
enter
dec
push
clc
aaa
add
cli
daa
mov
inc
jo
fwait
jecxz
aas
sbb
shlb
mov
outsl
dec
or
xor
shll
push
mov
adc
xlat
push
pop
aad
mov
or
jns
xor
cmpsb
fs
mov
repz
sub
add
mov
daa
dec
sub
fs
xor
lods
repz
cmp
in
mov
jl
adc
shll
rolb
scas
sbb
inc
mov
and
mov
add
in
jns
addr16
shl
push
mov
push
pop
jne
push
add
rolb
add
mov
std
stc
inc
xor
mov
je
mov
pop
ret
sbb
dec
xor
push
imul
mov
jge
jnp
or
lret
xlat
or
mov
ss
std
dec
subl
inc
cwtl
pusha
inc
ret
adc
inc
cwtl
sub
add
inc
dec
inc
loopne
jg
mov
pusha
xor
inc
sub
scas
int3
add
fs
icebp
dec
jmp
cmp
cli
mov
mov
outsl
push
mov
jp
xor
or
mov
add
dec
out
test
in
into
mov
imul
sbb
xchg
inc
out
ret
popf
mov
gs
out
jecxz
sub
mov
outsl
enter
fistps
rol
push
cmc
fdivp
inc
jp
xchg
shll
das
sbb
stos
add
xchg
clc
pop
or
into
ja
dec
mov
in
sub
xchg
xchg
cmp
inc
jp
pusha
jecxz
scas
pop
out
xor
int
inc
call
loop
dec
jle,pt
loopne
lret
push
xorb
inc
and
insb
movsb
out
jl
loop
pushf
mov
fmulp
dec
xor
cmc
inc
cmp
inc
cmp
sub
cwtl
xchg
cmp
es
dec
das
ret
mov
jne
add
out
dec
xchg
push
jmp
mov
mov
or
mov
jno
and
rol
push
int
add
out
jne
xor
sbb
lods
mov
xchg
cmpl
sbb
repnz
sub
xor
lea
ja
lea
bound
ret
lods
add
inc
xchg
mov
push
push
das
dec
mov
inc
cli
fwait
jno
adc
ja
in
out
sub
add
jno
sbb
mov
pop
cli
push
mov
jbe
adc
aas
xchg
jle
xchg
mov
cld
mov
xor
pavgw
add
xchg
pop
and
into
insl
jbe
cmp
sahf
mov
clc
pop
xchg
or
out
int3
insb
xchg
stc
push
das
int
xor
mov
push
cmp
je
or
pop
xor
jb
jmp
jno
sti
mov
jb
pop
fisubrl
rcll
mov
dec
in
mov
mov
popf
adc
mov
lret
loopne
push
imul
lods
fidivrs
ljmp
test
popf
mov
les
xor
fildll
lods
orb
mov
imul
or
push
in
cmp
les
scas
jecxz
xor
cli
loope
xchg
movsb
imul
dec
popf
xor
mov
int3
out
jne
sti
int
pusha
popl
jb
mov
mov
mov
lds
popa
shl
jg
sbb
mov
loopne
jnp
aaa
push
into
js
pop
loopne
mov
cmp
xchg
inc
mov
push
mov
jne
push
fs
mov
jns
xchg
add
out
fidivrl
imul
inc
mov
lret
fistl
sbb
roll
gs
lods
testl
jp
push
adc
cmpsl
push
mov
neg
ja
mov
outsl
lock
jmp
popf
adc
xchg
mov
mov
pop
push
cmp
push
cmpsb
xor
add
mov
pop
data16
adc
mov
mov
inc
stos
sti
pop
test
push
jg
mov
pop
xlat
insb
sarl
adc
shrb
pusha
lret
push
sub
in
ret
mov
pop
clc
pop
mov
add
jb
sbb
pop
push
mov
pop
dec
adc
xchg
test
jne
mov
into
fsub
les
test
add
sbb
push
jbe
xchg
pop
xor
cmp
rcl
or
adc
mov
imul
sub
ds
jp,pt
push
imulb
xchg
icebp
fisttpll
add
jl
fdivr
pop
in
jbe
fists
cmp
es
incl
sbb
sti
adc
int
stos
repz
jle
inc
daa
mov
sarb
in
out
fimuls
pop
fdiv
idivb
push
xchg
je
xchg
int3
jae
mov
std
mov
jmp
pusha
jb
or
cmp
ficomps
fisubrs
pop
push
push
je
pop
sbb
adc
push
fsubl
mov
in
jne
and
sti
js
jg
nop
mov
or
push
push
push
aam
mov
sti
jo
pop
repz
jnp
sbb
mov
inc
pop
in
inc
adc
cmpsl
lock
fldt
jae
and
cmp
or
cmpsl
pop
and
mov
adc
mov
lock
ret
ds
mov
repnz
out
mov
cmpsl
mov
cltd
push
mov
xor
mov
in
jb
fistpl
ljmp
inc
cwtl
adc
adc
lahf
ficoms
fnstenv
les
loope
push
loopne
int3
jae
inc
call
push
adc
leave
xor
sub
aam
enter
out
jo
aaa
mov
pop
mov
jns
push
mov
aaa
mov
mov
sbb
jmp
mov
jle
ss
pop
dec
into
sarb
in
leave
roll
push
jns
adc
jnp
imul
stos
xchg
cli
lcall
shl
xor
adc
es
jmp
pop
mov
aad
add
mov
mov
jmp
xor
push
dec
xlat
rcrb
ret
adc
and
add
loopne
mov
in
push
push
movsb
inc
and
rcl
mov
adc
xchg
popf
xchg
insb
pusha
mov
nop
aas
sub
hlt
jp
mov
sbb
adc
mov
dec
xor
adc
shlb
jecxz
lret
cs
scas
xchg
or
sub
mov
mov
add
popf
inc
dec
out
push
shrl
inc
pop
add
ret
mov
pushf
testb
mov
scas
xor
daa
stos
shlb
loopne
pusha
push
jae
fstpl
push
xchg
mov
and
int3
push
lcall
leave
ljmp
mov
cmpb
adc
sbbl
mov
pop
and
lret
daa
mov
sbb
mov
cli
pop
push
pop
addr16
in
testl
in
pop
push
les
sub
dec
stos
ds
sbb
jl
cwtl
in
mov
pcmpgtb
scas
scas
ljmp
outsl
int
or
jmp
jns
out
and
or
into
in
jle
mov
sbb
loopne
lcall
mov
cli
xlat
inc
pop
fisubrs
jb
jo
dec
ja
cld
fsubrl
in
es
cmc
or
dec
mov
jae
aaa
push
jl
sub
and
dec
cmp
jecxz
inc
xor
cmc
loopne
xor
add
pop
adc
push
dec
jl
jnp
outsl
lcall
mov
gs
mov
inc
inc
loope
xchg
push
xchg
dec
mov
loope
leave
aas
lods
ret
in
adc
adc
daa
enter
fwait
inc
push
mov
xchg
xor
pop
test
and
jge
inc
pushf
aad
in
cld
fbld
sahf
into
push
in
lret
lods
lcall
lahf
mov
sbb
lods
gs
sub
xchg
sar
adc
or
mov
cli
jp
jg
mov
adc
mov
and
and
push
xor
or
mov
mov
and
ror
push
jmp
in
repnz
dec
lods
push
xchg
jnp
cmc
xchg
pop
inc
ret
sub
dec
jecxz
out
jno
cs
sub
cltd
lods
jns
in
xchg
mov
test
lds
inc
lods
jge
jp
and
repnz
mov
fs
adc
cmp
mov
push
lret
add
and
fs
jg
sub
inc
jbe
je
mov
lret
mov
cmp
iret
cmp
mov
leave
and
cs
push
pop
test
sbb
test
je
sbb
xchg
inc
stc
jnp
mov
xor
dec
ds
arpl
test
mov
fprem1
inc
cmp
stc
sbb
jle
pop
notb
sahf
inc
sub
std
jbe
test
enter
pusha
xchg
xor
lahf
or
out
outsb
mov
jae
aad
jae
jns
ret
push
sub
cs
add
loope
ret
loop
outsl
jg
ret
jge
in
dec
std
inc
cmp
xor
aas
dec
push
pop
xchg
ret
sub
rolb
sub
xchg
jmp
mov
cmc
in
and
lret
repnz
jmp
xor
gs
mov
mov
jl
repnz
mov
mov
add
shrb
cmpsl
mov
daa
mov
movsl
in
arpl
jg
lods
cs
pop
add
ds
fisubrl
jle
cwtl
std
xchg
jbe
scas
aam
push
dec
dec
mov
mov
push
adc
xor
push
imul
into
mov
call
dec
pop
xor
setp
sub
test
pop
sbb
pop
mov
insl
cmp
in
dec
les
jbe
push
dec
xor
movsl
mov
loopne
loopne
out
xchg
jbe
popf
inc
mov
jnp
push
mov
xchg
cmp
stos
pushf
ficoms
cs
lcall
xor
loope
push
jp
mov
popa
ljmp
sub
jne
jmp
push
xor
jb
std
cmpsb
pop
repnz
xchg
or
push
inc
insl
pop
int3
sub
bound
push
andl
mov
adcl
jb
jb
sbbb
xchg
jmp
mov
push
mov
out
pop
dec
adcl
das
lds
mov
jb
xchg
fisubrl
test
clc
mov
xor
fwait
inc
push
xchg
gs
and
cmp
out
xchg
sbb
push
in
and
add
mov
pop
or
rorl
ds
pop
push
into
adc
lea
adc
ret
sbb
adc
sahf
mov
popa
sahf
or
aaa
mov
pop
jg
call
mov
sbb
jb
imul
je
xor
adc
test
mov
repnz
jns
and
ds
dec
xor
das
add
das
lods
push
or
out
mov
enter
sub
sbb
and
jp
cmpsb
adc
cwtl
xchg
hlt
jns
fcomps
add
push
in
daa
adc
ss
roll
pop
push
stos
inc
xchg
loopne
jl
rcrb
jne
mov
pop
fcmovnbe
pop
cmc
les
and
push
mov
sbb
dec
pusha
add
adc
push
or
aaa
repz
or
sbb
cmp
jl
mov
lret
xchg
repnz
outsb
xchg
or
push
imulb
fwait
add
clc
mov
jp
fisttpll
pop
test
cld
or
out
mov
pushf
mov
mov
xchg
mov
int3
pop
je
sub
ja
xor
pop
rcll
out
iret
pop
stos
leave
jge
sahf
sbb
dec
push
jbe
cmp
pop
inc
sub
outsl
int3
push
pop
daa
test
mov
xchg
and
pusha
xchg
xchg
mov
or
test
mov
or
enter
pusha
add
lods
lock
push
sbb
lret
test
mov
sbb
das
fwait
addr16
cmp
cld
sbb
sbb
or
jo
pop
or
in
testl
lods
mov
inc
cli
mov
jnp
pop
outsb
inc
call
mov
add
mov
std
mov
sbb
xor
ja
js
inc
ret
cmp
push
jae
add
inc
mov
jb
ds
js
jmp
cmc
andl
sti
pusha
jmp
pop
fadd
adc
xor
add
shrl
imul
jp
xchg
sbb
cmp
xchg
pop
pop
sahf
pushf
fadds
lods
ljmp
xor
jmp
int3
js
pop
sahf
scas
arpl
xor
sub
jns
mov
mov
mov
or
cwtl
nop
in
fs
sbb
dec
cwtl
stc
mov
jae
aam
mov
mov
data16
lret
not
add
lds
fs
cmp
mov
pop
daa
adc
add
and
cs
fldt
ljmp
imul
mov
dec
test
fiadds
ret
dec
call
mov
out
xlat
jbe
jnp
sti
mov
lods
xor
add
imul
enter
sahf
jl
mov
mov
les
jle
xchg
imul
inc
jbe
cmp
test
aad
into
xor
inc
xchg
pop
push
dec
sub
add
js
lea
mov
sub
int3
jae
xor
arpl
add
sub
js
loop
inc
sbb
call
ret
sbb
sub
fcoml
ds
xchg
fsubr
push
test
repnz
aam
mov
jmp
mov
stos
inc
adc
push
pop
ss
jge
lds
fwait
sbb
sub
xchg
or
lea
add
mov
inc
cmp
int
and
mov
adc
and
cmp
bound
int3
pop
push
enter
nop
push
push
ljmpw
fwait
mov
add
mov
jo
mov
sub
in
jl
mov
ret
int
xchg
in
shll
push
je
and
repnz
scas
pusha
mov
adc
pop
dec
or
mov
mov
cmpsl
pop
cs
nop
shl
and
inc
lds
and
ds
dec
jmp
divl
icebp
push
cmc
shr
adc
bound
and
xor
fnstsw
sbb
lret
test
jmp
in
mov
inc
pop
cmp
mov
lret
jp
push
nop
add
lcall
sub
xor
xchg
leave
mov
push
jle
pop
push
dec
cs
test
fbld
push
popf
xchg
in
push
inc
fsubrl
js
sbb
sti
push
lret
iret
fwait
rorl
inc
iret
cltd
sub
sti
stos
lcall
pop
pop
repz
icebp
adc
hlt
mov
addr16
pop
push
pop
pop
jmp
jne
jo
lret
fsubrs
cmp
bound
rol
mov
jae
arpl
mov
push
adc
jmp
adc
and
sbb
dec
xor
push
push
loop
adc
pop
pop
ret
loope
int3
aam
sbbb
in
lea
lods
mov
xchg
and
loopne
dec
subl
mov
push
push
push
jbe
dec
dec
daa
xchg
fadds
cmpb
fdiv
adc
inc
cmpsb
adc
mov
shrb
dec
test
test
push
xchg
push
fldl
lahf
sbb
sbb
add
loop
add
sbb
mov
cld
xchg
add
bound
sub
mov
cld
int3
push
xchg
mov
jle
dec
stc
idivl
pop
rcrl
xchg
or
sbb
push
push
stc
je
push
out
mov
mov
sarl
fmuls
xchg
lahf
sub
cmp
push
jmp
ret
sbb
insb
sbbb
and
dec
jae
add
jnp
dec
outsl
lahf
push
arpl
adc
fisubs
fistpl
inc
push
ds
jg
mov
pop
dec
out
fdivr
or
push
loop
aam
push
nop
fidivl
mov
sbb
jmp
in
inc
pop
addr16
xchg
add
push
sbb
sbb
inc
mov
je
cmp
mov
cmp
cmp
int
cmc
push
gs
push
pop
cmp
movsl
jne
es
imul
imulb
jecxz
sarl
loope
xlat
xor
mov
inc
xor
mov
xor
xor
mov
imul
add
fadds
out
clc
ss
insb
stos
jae
popa
inc
addr16
xchg
sub
in
inc
pop
outsb
repz
push
jb
dec
jmp
jecxz
jae
mov
mov
int3
es
sbb
test
pop
bound
sub
xlat
adc
roll
mov
je
and
in
adc
xlat
scas
cmp
add
pop
test
popf
repz
mov
add
cmp
xchg
mov
dec
xor
mov
imul
jo
inc
push
mov
xor
ljmp
cmc
sbb
fadd
lock
sbb
fwait
and
adc
mov
lret
inc
stos
cmp
inc
lods
cmpsb
in
sub
stos
enter
ret
xor
mov
xlat
push
stc
lret
cld
push
jne
ficoml
sbbl
pop
jbe
into
push
dec
hlt
lods
xchg
push
mov
cmc
cmp
fisubrl
scas
dec
leave
push
in
xchg
adc
popf
int
mov
cmp
xchg
ljmp
sti
mov
loopne
and
mov
idivl
inc
and
push
sbb
scas
nop
pop
das
fcompl
xchg
cs
hlt
pop
xchg
in
xchg
jl
jo
inc
dec
cmp
mov
ret
pop
dec
pop
jecxz
sub
sbb
repz
shl
mov
mov
bound
push
adc
or
mov
in
mov
orl
mov
jae
sub
sub
xor
jge
in
cmp
pop
test
mov
inc
jae
test
cmpsb
push
into
stos
xchg
sarl
mov
adc
out
pusha
ja
push
dec
add
test
inc
lods
mov
mov
pushf
mov
repnz
pushf
into
test
popa
mov
adc
mov
out
cmp
test
push
lret
lods
pop
sbb
xor
rolb
lds
mov
loope
jb
cmp
cmc
hlt
test
mov
or
enter
out
in
push
cli
imul
xchg
stos
inc
loopne
inc
movsb
subl
imul
bound
push
enter
nop
mov
xchg
aam
xchg
push
sbb
stos
inc
popf
popl
or
push
loope
jno
rorb
inc
add
and
js
es
cwtl
out
xchg
and
imull
cvtpi2ps
pusha
pop
fwait
cli
xchg
xchg
bound
inc
dec
dec
add
in
dec
movsb
cmp
xchg
and
inc
ja
flds
dec
shll
jmp
mov
adc
adc
test
or
adcl
jl
mov
xchg
pop
inc
mov
jo
loope
mov
popl
xchg
filds
xor
dec
ss
movsb
cli
or
int3
lds
xchg
jp
or
inc
arpl
cmp
mov
jp
push
and
sti
inc
sub
test
jecxz
shlb
cmpsl
loop
sti
pop
sbb
inc
cwtl
mov
pop
in
sbb
mov
orl
es
jecxz
push
mov
inc
stc
in
int3
testl
cmc
jae
into
repnz
and
mov
mov
imul
and
fs
xchg
and
add
jl
jne
adcb
addl
mov
or
xor
adc
inc
mov
pop
call
shrl
push
adc
xor
inc
jbe
lds
mov
xchg
and
cld
sub
pop
loop
mov
adcb
cmp
enter
popf
mov
adc
pop
dec
call
adc
dec
cmp
stos
pushf
lcall
mov
jecxz
push
arpl
push
adc
je
jge
and
imul
lods
pusha
push
pop
test
aam
and
ljmp
jb
cmpb
in
mov
popw
and
mov
icebp
popa
mov
mov
sti
xor
mov
mov
imul
push
xchg
int3
mov
mov
pop
pop
rcrl
add
pop
mov
ret
insl
adc
jno
mov
data16
outsb
sub
outsb
sbb
int3
aad
xcrypt-ofb
cmpsl
test
inc
sahf
cltd
lock
cmp
scas
std
sub
lods
xor
push
ffreep
jae
cli
xchg
xchg
mov
push
xlat
xor
push
std
dec
ljmp
fsubl
cld
xor
lods
xor
setnp
sti
cmpsl
mov
push
and
aas
cmp
mov
and
mov
dec
pop
mov
sbb
inc
notl
pop
pop
push
sub
cmpsb
dec
dec
inc
out
out
ror
push
in
sbb
imul
pop
lcall
sbb
xor
jno
insb
adc
push
lahf
mov
loop
out
stos
in
filds
push
lcall
xchg
inc
insl
cmpsb
or
and
cmp
je
fnstsw
fnstenv
icebp
inc
test
add
clc
push
cmpb
into
mov
test
xchg
dec
testb
rcll
xchg
sbb
or
filds
lock
dec
jmp
in
mov
or
outsl
mov
add
xor
lds
mov
push
or
cmpsl
mov
movl
add
mov
mov
std
xchg
imul
fstps
lcall
or
add
push
or
out
into
inc
pushf
stos
shrd
test
adc
fnsave
mov
mov
and
out
jae
test
adc
lea
jo
repnz
imul
cmp
cltd
jp
lea
filds
mov
ljmp
xor
or
loope
xchg
sbb
fsubl
cld
jno
sub
lret
jo
or
sbb
push
push
jno
cmc
mov
add
dec
divb
xchg
cmp
adc
cld
icebp
inc
mov
inc
je
push
xor
jl
hlt
ja
insl
ret
jl
lods
xor
jbe
mov
adc
sti
sbb
pop
pop
inc
sbbl
and
adc
adc
fscale
cli
sbb
nop
mov
push
sub
les
jp
jo
pusha
mov
inc
rorb
dec
pop
push
pop
pop
xor
mov
lods
push
fdivp
out
loop
and
dec
int3
adc
jae
sbb
mov
sbb
mov
loop
xor
or
or
push
xchg
mov
mov
int
call
ss
jnp
mov
clc
xchg
fwait
xchg
cmp
scas
mov
pushf
push
sbb
add
dec
lds
aaa
mov
sahf
repz
jge
iret
inc
adc
dec
inc
leave
add
adc
stc
pop
sub
adc
mov
mov
insb
and
jb
ret
ljmp
and
enter
cltd
push
cld
lcall
lret
adc
cld
xor
dec
mov
inc
sarl
dec
mov
int
les
dec
ja
testl
push
test
jl
adc
mov
mov
mov
push
add
test
mov
xchg
mov
enter
out
pop
lock
cld
aas
adc
fstl
out
pop
ds
insl
xchg
outsb
arpl
testl
dec
scas
loop
arpl
mov
sarl
leave
jge
xchg
es
mov
sbb
ret
and
stc
aad
cmp
xchg
cwtl
lea
std
movb
push
daa
imulb
scas
jb
push
jecxz
incl
adc
dec
in
mov
inc
das
jle
loop
ds
arpl
lret
cmp
mov
pop
jecxz
cmp
outsb
outsl
icebp
add
cs
mov
ja
in
and
inc
adcb
out
xor
aas
into
or
xchg
inc
xchg
xor
add
arpl
in
into
sub
cmc
and
cs
mov
adc
push
push
das
fsts
cmp
stos
je
lods
cmpsb
dec
test
stos
aam
push
nop
push
mov
cmp
sub
jbe
sbb
push
scas
mov
pop
jecxz
xlat
fistpl
test
outsl
out
mov
push
adc
imul
hlt
sub
push
pop
mov
dec
cmpsl
adc
fcompl
lahf
dec
push
popf
test
enter
dec
dec
sub
sub
mov
or
out
loop
mov
mov
mov
mov
inc
adc
mov
dec
mov
sbb
rorl
dec
and
push
mov
daa
es
mov
or
lds
rol
mov
jle
leave
and
out
inc
sub
fs
pop
pop
jmp
sbb
mov
or
mov
jl
int3
xor
das
lcall
popl
add
sub
arpl
jmp
ret
mov
in
cmp
into
push
pop
mov
adc
jae
pop
in
in
xchg
sub
jp
cmc
jns
push
fsubrs
cwtl
xor
es
mov
outsb
push
stc
mov
or
cltd
sbb
sarl
inc
sbb
jle
mov
mov
nop
xlat
push
pop
sahf
dec
ja
adc
outsb
lcall
sbb
call
mov
sub
jmp
filds
bound
mov
mov
repnz
idiv
jns
pop
enter
add
ffreep
jle
mov
cmp
sbb
insb
fcmove
test
or
repz
xor
repnz
jmp
pop
or
addr16
lods
fisubrl
in
ss
cmp
cmp
and
pop
push
dec
cli
adc
addr16
xchg
inc
shll
sub
mov
loopne
fcompl
add
sbb
sub
cmpsb
push
mov
mov
xor
cmpb
clc
cmpsb
scas
inc
clc
scas
and
scas
out
push
rolb
scas
lods
and
cmpsb
mov
mov
and
inc
inc
cs
sub
push
push
or
adc
sub
negb
int
xlat
sub
or
cli
test
pop
roll
mov
mov
orb
adc
pop
and
pushf
inc
and
inc
and
jnp
insl
fs
frstor
pop
test
xchg
in
andl
pusha
mov
cmc
mov
icebp
pop
repnz
int
and
imul
jnp
xchg
pop
xchg
or
out
test
pop
test
stc
xchg
or
add
cmpsl
and
push
rorl
cmp
sbb
add
fdivl
stos
add
adc
xlat
inc
movsl
jecxz
subb
negb
dec
mov
add
dec
inc
loopne
mov
in
and
and
fisubs
out
mov
hlt
xchg
mov
pushf
pop
lds
cs
fisubrl
mov
roll
inc
xchg
inc
shll
xor
pop
call
inc
call
cmp
mov
mov
cmp
and
mov
pusha
push
or
fwait
in
data16
std
js
pop
dec
or
cmp
arpl
inc
loop
mov
ret
sub
popf
push
sbb
xlat
out
and
js
add
daa
adc
mov
fidivrl
xor
in
cmp
cltd
stc
int3
jae
mov
lret
shrl
mov
jge
fimuls
outsl
int
outsw
sti
and
jp
fwait
loope
pop
push
pop
out
out
and
dec
mov
add
lods
fcom
xchg
jg
dec
dec
lret
je,pn
or
lock
and
mov
pop
jecxz
jle
aam
test
dec
lcall
adc
in
ljmp
je
and
xchg
hlt
aaa
loope
clc
inc
insb
jbe
xchg
test
fdivs
jo
adc
ficomps
fwait
cmp
mov
in
addr16
popa
cmc
in
loope
xlat
jne
into
ret
in
lcall
adc
xchg
cmc
pop
jecxz
cmp
test
xchg
mov
sarl
jg
daa
popa
adc
sub
or
mov
in
push
mov
shll
inc
dec
ret
jl
clc
clc
outsl
push
test
repnz
pop
aad
clc
jg
adc
fistl
xchg
xchg
pop
push
addr16
jl
xlat
sahf
fistpll
mov
jae
cmp
cmp
les
mov
incl
mov
sub
xchg
enter
xchg
jecxz
sub
jo
cmp
dec
dec
inc
sbb
rcrb
push
dec
cmc
arpl
stc
dec
mov
xor
mov
lahf
pop
jne
insl
pop
pop
inc
pop
xor
pop
xchg
dec
mov
in
pop
fidivrl
xor
aad
lret
lock
inc
fcomps
in
push
xchg
mov
test
aad
loope
mov
stc
mov
mov
ror
mov
pop
inc
cmp
and
loopne
mov
out
add
rol
int
mov
lea
mov
insb
int3
pop
jns
movq
and
inc
or
mov
out
fidivs
adc
sub
dec
mov
mov
xor
cwtl
aam
jae
sbb
data16
add
outsl
xchg
insl
lods
lret
sti
ret
jne
hlt
push
loopne
insl
js
mov
testl
push
pop
decl
dec
mov
fwait
je
sbb
mov
pop
pop
sar
jg
out
push
cld
mov
js
loop
lods
fistpl
scas
int
mov
fisttpll
movsb
dec
adc
sub
and
cmp
fldl
lcall
cmpsb
sti
movsb
or
push
dec
dec
fmulp
mov
ret
imul
icebp
mov
xor
jmp
dec
jp
lcall
jno
mov
mov
jne
ret
pop
mov
jg
movsb
or
fwait
jle
mov
ret
sub
push
gs
pushf
push
inc
sahf
sbb
jge
movsl
sbb
out
push
lea
add
in
xchg
jnp
mov
jbe
xchg
pop
mov
push
sahf
fildl
dec
pushf
aad
inc
int
cmp
pop
fcomi
scas
je
mov
leave
in
push
dec
pop
mov
jo
mov
cmp
test
sbb
cmp
mov
lret
aas
stos
mov
popf
jmp
pop
imul
movsb
mov
cmp
rcl
inc
iret
lret
mov
fisubrs
jae
out
push
scas
push
jno
jns
push
pushl
pop
sti
sahf
push
in
sahf
pop
sbb
xorb
setg
or
es
scas
push
push
add
jmp
stos
xchg
add
jl
jne
jo
add
mov
adc
stos
and
mov
aad
iret
xor
inc
mov
in
ja
dec
out
in
xchg
adcl
pop
stc
jecxz
aaa
inc
rcll
stos
adc
inc
jnp
std
jo
sub
jae
and
inc
call
push
mov
fnstenv
inc
mov
pusha
nop
cmpl
shrb
mov
sub
push
sbb
movsl
lret
jb
out
mov
fldt
fmuls
sbb
arpl
mov
xchg
jle
jb
jnp
dec
lods
fcoms
daa
mov
cmp
and
scas
ja
sbb
pop
enter
enter
lods
sub
adc
cs
scas
imul
xorl
nop
lea
daa
mov
cmovg
nop
leave
add
inc
add
xor
mov
push
stos
loopew
xor
dec
mov
mov
pop
lods
inc
add
shrb
dec
mov
bound
cmp
fisubs
nop
mov
scas
sub
adc
neg
leave
ja
pushf
test
ret
lea
xor
mov
inc
movsb
mov
loop
dec
xor
mov
xchg
xor
les
outsb
clc
jecxz
adc
push
xchg
sub
data16
std
cmp
rolb
or
mov
or
fisttpl
jae
mov
sbb
outsb
and
adc
push
jne
lret
ss
mov
or
adc
mov
xor
jnp
push
int3
mov
jmp
cwtl
or
insb
push
loop
lods
aad
idivb
iret
xchg
std
dec
mov
dec
pushf
pop
add
add
jno
clc
fdivp
loop
pop
je
cmp
out
mov
pop
popf
xor
aaa
imul
ss
adc
mov
mov
jle
jbe
cmp
push
mov
pop
dec
or
and
xor
and
jl
sbb
mov
lcall
es
mov
mov
lret
scas
mov
xlat
add
gs
or
jno
xchg
sub
push
or
sbbb
xchg
jnp
in
mov
jle
mov
enter
clc
pop
pop
loope
dec
jns
daa
push
mov
xlat
and
rclb
add
inc
mov
mov
mov
mov
movsb
inc
data16
push
ficoml
in
mov
inc
mov
sbb
adc
add
ss
xchg
mov
out
and
xchg
or
jmp
orb
leave
xor
adc
or
movsb
sbb
xor
orl
xorb
inc
inc
and
hlt
outsl
sarb
pop
sahf
adc
xchg
cwtl
mov
jmp
out
pushf
dec
push
cmpsb
out
rolb
aad
dec
add
fdivl
adc
cmp
dec
rcl
mov
loop
stos
sub
repz
in
cmp
lea
xorl
nop
sub
mov
sub
es
lea
jl
jae
loope
out
jae
stc
xor
loope
popa
jnp
xlat
shll
ffree
mov
ret
cmc
xchg
out
repz
dec
imul
mov
es
xchg
fisubs
cmpsb
ja
cmp
out
enter
pop
sub
in
inc
mov
sbb
int
std
mov
xchg
loopne
clc
push
push
pop
sub
jl
pop
mov
ljmp
data16
or
imul
mov
rclb
filds
fnsave
or
push
cmp
movsb
jae
sti
inc
xor
ljmp
jle
xchg
mov
mov
pushl
test
pop
inc
push
and
shr
dec
jns
sub
jmp
sub
cltd
xor
pop
push
movsl
sar
xor
jp
stos
ja
dec
push
pop
sbb
aam
jp
xchg
mov
test
cmp
decl
fcmove
xchg
mov
aaa
dec
cmp
dec
sub
inc
das
cltd
outsl
in
int
xchg
fists
imul
test
orps
sarl
add
jp
xor
arpl
imul
cmp
lds
cmp
bound
popf
out
xchg
xchg
imul
les
call
pop
clc
mov
roll
add
repz
stos
xchg
mov
fsubrl
dec
dec
jnp
dec
popa
out
jl
and
negl
xchg
and
orl
inc
data16
mov
and
push
mov
jno
mov
mov
push
int3
jbe
std
insl
xchg
mov
mov
fldl
nop
scas
stc
push
xchg
shlb
lea
shl
add
mov
test
rorl
and
sbb
ret
jb
aas
andl
insb
testl
je
in
int
out
fstl
xchg
jle
pop
cmp
mov
mov
push
add
cmp
mov
inc
in
or
enter
mov
jmp
mov
mov
dec
add
dec
add
and
mov
push
adc
xchg
popf
lea
and
insb
cmp
mov
mov
pop
lret
hlt
push
xlat
enter
pop
popa
movsl
mov
or
fwait
rorb
insb
push
mov
pop
lds
sarb
cltd
aaa
lcall
push
jo
fsubrs
adcl
jns
mov
and
outsb
jl
ret
pop
mov
xchg
ret
jns
mov
sbb
and
out
sub
pop
leave
subl
das
sar
aaa
inc
shr
arpl
push
sub
pop
test
xor
incl
mov
icebp
arpl
clc
mov
pop
out
ds
testb
das
sub
mov
mov
rorb
ljmp
std
and
dec
xchg
lods
cmpsl
idivl
or
lds
mov
mov
cmpsl
sbb
fstps
mov
imul
jl
jo
mov
add
jo
cmp
cltd
xlat
inc
jbe
mov
stos
xor
pop
inc
and
adc
cmp
fdivrp
hlt
push
aam
jle
mov
mov
sub
mov
leave
addr16
js
outsl
and
and
push
dec
cli
lods
ss
push
jb
ja
push
jg
xor
xchg
xor
out
movsl
xchg
fwait
sub
push
es
repnz
mov
or
pop
gs
loope
cmp
mov
out
jg
mov
jae
sbb
int3
cmp
sbb
in
shl
mov
jl
in
adc
out
sbb
jp
jcxz
test
sbb
or
jg
fldt
mov
mov
jle
push
aas
xor
scas
into
xchg
fwait
or
jb
sti
xchg
inc
pop
jb
mov
xchg
sub
jb
rcr
adcb
xchg
int
mov
andl
push
lret
sub
dec
clc
fiaddl
or
sti
fdivp
or
ds
js
add
hlt
jo
pop
gs
add
mov
aad
push
mov
mov
add
jmp
mov
stos
or
and
xor
push
sbb
push
cwtl
sub
xchg
jmp
mov
loope
cmp
jmp
in
adcb
jne
pop
jb
xchg
and
or
sbb
jo
jbe
jle
scas
daa
fsubl
test
loope
rep
shlb
arpl
inc
lea
adc
adc
jle
fcomp
sub
orb
mov
mov
loopne
mov
mulb
stos
hlt
and
or
fidivs
xor
mov
adc
mov
adc
js
xchg
fistl
inc
mov
icebp
sub
pop
mov
mov
adc
ss
sahf
push
push
cmpsl
inc
cmp
insl
mov
in
adc
xor
cmp
rolb
mov
arpl
js
ja
mov
cltd
lods
sarb
aad
add
mov
test
mov
cmp
out
int
sbb
push
mov
mov
xchg
fldenv
stos
bound
shrb
divb
dec
leave
popa
dec
int3
sahf
mov
repnz
cld
and
leave
outsl
fnstsw
loop
pop
scas
push
adc
or
arpl
lea
cmp
out
dec
clc
ljmp
adc
xor
pop
mov
std
in
out
lock
out
popf
lock
mov
aad
and
add
push
lahf
inc
decb
icebp
jp
push
xchg
sub
sbb
add
xchg
adc
fidivrl
out
call
mov
std
testb
jbe
jg
fnclex
nop
lret
les
push
push
jnp
and
sub
jb
cmc
xor
xchg
xor
movsb
scas
lret
cmp
jae
cmpsb
in
pop
dec
mov
lret
lret
fdivrs
mov
mov
icebp
icebp
inc
sarl
lahf
inc
cmp
rolb
mov
pop
pop
add
add
enter
jp
pushf
gs
cmc
jne
push
punpckhbw
push
enter
jno
int3
inc
jl
imul
insl
incb
data16
mov
mov
shr
sub
fists
dec
repz
add
xchg
hlt
lret
cmpsl
xchg
mov
add
mov
lods
mov
sbbl
repz
movsb
sbb
movsb
add
mov
pop
in
pop
cmp
jg
adc
clc
out
push
mov
mov
lret
shlb
shrb
jb
mov
out
xchg
cmp
popl
adc
inc
xchg
xchg
out
push
add
xchg
cmc
pop
sbbl
pop
inc
shll
sub
or
sub
and
jg
sarb
mov
or
imul
pushf
push
xchg
test
lods
shr
addr16
mov
or
insb
or
push
movsb
daa
adc
inc
mov
xchg
lret
fisubrs
xchg
decb
out
roll
das
cld
add
or
stos
mov
fisubrs
mov
hlt
mov
pop
daa
adc
rcll
fs
in
push
pop
es
sti
mov
mov
pop
dec
daa
push
in
jmp
out
lret
jle
fxch
mov
jge
jnp
repz
bound
mov
les
add
mov
push
mov
dec
roll
ds
pop
jl
imul
xchg
add
xlat
ret
stos
mov
mov
pop
cmpsb
sbb
aas
out
lods
imulb
fucom
add
add
call
mov
mov
movl
in
and
rol
fists
xchg
and
jne
mov
sub
inc
jle
xchg
stc
arpl
test
cmp
js
push
ret
in
pop
mov
push
bound
fcoml
ret
xchg
fildl
sbb
xor
shll
mov
pushf
dec
movsb
int3
stos
or
pop
push
push
incl
ret
mov
and
cs
push
jb
clc
add
aas
jo
mov
mov
or
sub
das
fwait
decl
mov
leave
adc
mov
das
pop
mov
fisubrs
mov
mov
xor
pusha
mov
vbroadcastf32x8
dec
fisubrl
push
xor
push
cmpsb
das
dec
or
icebp
leave
rclb
fsubrl
cmpsl
or
mov
mov
aaa
mov
fists
inc
popa
mov
enter
pop
repz
shrl
ja
and
cmpsl
movsb
inc
pop
and
cwtl
add
mul
or
push
insb
mov
sub
mov
ret
mov
shlb
fdivrl
or
rolb
sub
or
add
ficoml
push
add
jne
lcall
int3
jl
jne
cli
sbb
and
pop
in
push
cmpsb
or
jmp
cwtl
lds
and
ds
and
xchg
popa
inc
and
cltd
mov
hlt
push
imul
adc
scas
iret
jo
ss
imul
insl
test
jo
cwtl
sbb
les
adc
test
push
jne
jl
xor
inc
fnstcw
or
ds
inc
loop
lret
lods
js
pop
sub
mov
psubd
outsb
sbb
mov
nop
hlt
repz
jge
fwait
mov
loop
pop
jecxz
push
or
mov
scas
sahf
adc
movsb
inc
aas
int
push
xchg
mov
jb
or
daa
ret
cmp
aas
in
push
cli
mov
cmp
rcrl
or
or
cs
jno
lods
aam
adcl
mov
iret
push
stos
shl
cs
iret
and
lret
add
andl
lahf
xor
sbb
les
fwait
into
ret
rclb
sbb
dec
addl
mov
add
xor
mov
cmpsb
mov
fnclex
cli
pop
add
pop
add
negb
cmc
mov
in
mov
jge
cli
into
in
jle
mov
sub
pop
dec
push
inc
ds
ja
xchg
addr16
push
inc
ret
jnp
mov
out
xor
ljmp
popa
mov
mov
cmpsl
mov
inc
cmpsl
jae
in
mov
notrack
sub
sbb
add
clc
aam
xor
es
or
cwtl
pop
andb
movsl
mov
in
lods
mov
adc
stos
cld
fadds
out
cwtl
cmc
add
into
add
push
lret
jle
or
cmp
pop
imul
jmp
lock
inc
pop
xchg
stos
repz
mov
shl
sub
movl
test
cmp
pop
mov
cmp
add
sub
add
pushf
inc
cmp
ljmp
sbb
push
in
push
leave
xor
jmp
xchg
rolb
and
push
adc
dec
mov
dec
push
xchg
push
adcl
xchg
mov
cwtl
shlb
imul
dec
and
out
push
cld
dec
std
jecxz
mov
cmp
jo,pt
dec
into
inc
push
mov
mov
cmp
orl
mov
rorb
push
and
fbstp
hlt
stos
sbb
or
lods
xchg
push
or
adc
cmp
test
roll
negl
sub
adc
cs
mov
pop
jb
or
lret
lods
mov
xchg
xchg
cli
aad
jp
repz
lret
push
xor
xchg
mov
add
push
imul
pusha
int
decl
pusha
das
or
addr16
rorb
xor
mov
mov
push
mov
cmp
add
test
inc
inc
dec
icebp
mov
push
inc
or
pop
dec
sub
dec
fsubp
mov
fs
inc
inc
or
loop
out
pop
jbe
sti
test
bound
push
and
xor
dec
repnz
adcb
fdivrs
sbb
mov
lcall
test
int
and
insl
jg
ret
loop
sbb
push
lds
xchg
aas
loop
or
mov
mov
jo
orl
xor
adc
mov
movsl
sbb
sub
outsb
test
sub
pop
gs
pop
bound
pop
dec
xor
inc
je
lods
xchg
aad
push
fnstcw
cmpsl
test
mov
mov
xchg
or
cmp
xchg
orb
and
sub
add
lret
mov
sbb
push
jno
test
in
adc
neg
lret
mov
loopne
imul
movsb
inc
ret
dec
inc
lods
addr16
xchg
test
fisubrl
js
aas
ja
pusha
sbb
test
jb
cwtl
loopne
movsb
and
mov
test
movsl
imul
out
or
add
mov
and
mov
inc
lds
nop
pop
inc
cmp
push
scas
fsubl
loopne
cmp
xchg
adc
add
jmp
cli
gs
push
jmp
mov
or
lret
xchg
mov
push
in
sbb
adc
jb
movsl
pop
pop
pop
fsubrl
or
cld
dec
xor
std
push
mov
rcll
dec
lods
xchg
in
repz
jbe
adc
xlat
and
in
addr16
dec
lcall
scas
lock
rcrb
add
inc
in
addb
push
mov
movsl
xor
sub
hlt
in
push
cmp
jo
outsb
loopne
aad
or
push
outsb
out
jae
inc
in
sub
movsl
add
cmp
and
dec
loopne
and
jle
shlb
rorb
xlat
cmp
adc
push
adc
xor
dec
inc
xchg
icebp
int
loop
ljmp
cmp
int3
add
fs
cmpsl
loopne
je
outsl
cmp
int3
fs
repz
mov
popa
mov
fs
stos
mov
clc
mov
rolb
bound
mov
leave
stos
popf
and
mov
adc
lea
add
xor
les
pushf
das
jnp
xlat
add
xchg
bound
mov
lret
mov
inc
push
sbb
mov
lock
sahf
pushf
imul
inc
push
outsl
lahf
fwait
imul
es
and
les
jmp
mov
repnz
mov
inc
mov
or
push
push
push
stc
pop
pusha
outsl
outsb
mov
and
jecxz
lret
dec
test
inc
pop
xor
nop
push
sub
xlat
inc
add
push
cmove
pop
ret
ficompl
idiv
cmp
add
test
push
call
jg
loope
fxch
sarb
adc
sbb
mov
sbb
sbb
aad
je
sub
imul
iret
dec
inc
test
jmp
jl
push
inc
mov
xor
clc
shrl
imulb
mov
jno
arpl
xchg
sbbl
int3
pusha
lods
insb
adc
inc
mov
stc
xchg
inc
js
cmp
enter
mov
cltd
push
jl
push
mov
mov
jno
add
inc
push
mov
int3
mov
shll
mov
or
fisubrs
rcrl
mov
mov
cmp
in
inc
daa
add
ficoms
sub
pop
pushf
mov
inc
cmp
mov
pop
stc
outsb
pop
pop
pop
jmp
aas
mov
jecxz
rcll
ror
icebp
test
cmpsl
xor
inc
xchg
cmp
jle
dec
ss
stos
cmp
ret
mov
xor
jae
xor
xlat
sub
mov
pop
leave
sub
cmp
outsb
mov
fdivl
mull
jno
rclb
pusha
mov
mov
sbb
lret
or
jae
sbb
jno
int
or
jnp
inc
rorb
sub
leave
xchg
sahf
cmpsl
sbb
push
ljmp
pusha
les
or
gs
jl
mov
dec
mov
xor
or
cld
mov
fildl
and
add
push
push
push
jo
push
jns
enter
imul
push
in
dec
add
shrb
dec
hlt
test
test
fldl
mov
jecxz
fdivrl
insb
sub
sub
loope
jbe
mov
mov
inc
cmc
push
sbb
jnp
movsb
sbb
movsb
jmp
out
in
jmp
mov
add
scas
repnz
xchg
gs
adc
add
push
mov
call
jg
xor
cmp
jae
push
jnp
std
imul
cmp
sbb
lods
je
aad
je
jbe
cmp
daa
cmp
cmp
or
xchg
rclb
arpl
mov
fsubrs
mov
mov
aad
mov
ja
and
fucomi
stos
push
mov
mov
adc
stc
ljmp
and
repz
shrb
xchg
push
hlt
fwait
mov
orl
pop
pop
les
xchg
and
das
dec
sub
add
ljmp
mov
int3
hlt
test
push
fwait
adc
mov
sbb
push
fwait
mov
mov
rclb
shl
aas
cltd
or
mov
pop
popa
push
push
adc
dec
inc
icebp
insb
imul
sub
icebp
sahf
cli
push
pop
fwait
cli
mov
sbb
int
dec
int
mov
in
data16
sub
lock
movsb
das
inc
mov
cli
das
push
je
lret
imul
cmp
rorl
es
pop
inc
into
fs
sbb
push
rorl
scas
mov
cld
push
andl
cmpsl
sbb
xchg
movsb
xchg
sbb
mov
xchg
xor
shl
sub
push
mov
fwait
js
dec
mov
insl
and
insb
xor
stos
mov
aam
loop
pop
fst
in
push
sbb
pop
pop
xchg
fadds
stos
cmp
xor
xlat
test
inc
sub
xchg
push
push
xchg
fs
loope
add
cmpsb
stc
fsts
ljmp
movsl
imull
shrb
mov
or
jp
test
daa
jae
sub
jg
stc
ret
pop
xchg
bound
cli
xorb
add
xor
xor
in
addr16
orb
jne
rolb
pop
clc
mov
jge
dec
mov
and
xlat
add
jo
inc
jmp
int3
mov
dec
rclb
sub
xchg
into
icebp
shrl
push
jp
shll
cmp
xor
inc
movsl
xor
test
mov
xchg
loopne
mov
imul
and
js
sub
push
faddl
test
xchg
sbb
lods
or
mov
data16
adc
int3
pushf
jmp
xor
stos
xor
stos
jns
popf
xchg
add
lds
pusha
pop
test
movsb
mov
jl
bound
inc
int
adcb
subb
scas
stos
out
sti
dec
adc
mov
rcrb
dec
dec
rorl
push
xor
push
xorl
movsl
mov
std
pop
movsl
xor
aas
inc
scas
out
inc
cmpsb
call
shr
dec
pop
outsb
xchg
cmp
lcall
xchg
xor
ja
jle
or
xor
sbb
lcall
mov
andl
ljmp
jb
es
inc
pusha
repz
jno
pop
and
mov
out
mov
sahf
mov
loop
lea
inc
push
adc
sub
xchg
in
cmpsb
cmpsl
push
ljmp
mov
and
mov
mov
mov
sbb
shll
xchg
xchg
mov
or
test
and
pop
imul
xor
dec
pop
xchg
lcall
popf
jp
inc
in
mov
cmc
filds
arpl
xchg
pop
enter
aaa
or
push
mov
sbbb
iret
mov
xchg
xchg
loop
pop
cld
xchg
popf
cmp
add
aad
ret
jne
push
xchg
xor
sbb
in
inc
push
int
mov
outsb
or
xor
dec
push
fdivl
jmp
sub
mov
jl
mov
xchg
push
hlt
push
cmp
pop
cmp
xor
ror
pop
es
and
lret
outsl
dec
push
inc
lods
std
popw
sbb
lcall
andb
push
std
out
xor
subl
mov
pop
jmp
test
xor
scas
mov
lea
jb
cmpb
inc
pop
daa
mov
mov
out
insl
mov
js
jmp
movsl
push
inc
cmp
imul
mov
jne
xchg
or
fsts
adc
lret
cltd
xchg
or
xor
mov
stos
addr16
sahf
es
push
popf
pop
add
mov
call
pop
xchg
mov
out
jle
fimull
bound
sbb
xchg
cmp
push
jge
enter
lret
and
pop
insb
in
fsubs
jecxz
jmp
adc
jle,pt
push
mov
dec
xlat
or
inc
dec
sahf
lret
mov
inc
xchg
test
and
mov
dec
inc
sub
pusha
mov
in
sub
imul
shll
add
mov
mov
xor
mov
pop
pop
or
lock
sbb
loop
jbe
mov
adc
jmp
push
push
mov
cli
dec
xchg
mov
jbe
sub
pop
mov
mov
bound
shl
pop
js
test
add
scas
shrb
scas
sub
mov
mov
out
fbstp
dec
mov
shll
add
loopne
mov
inc
cli
aaa
pop
dec
inc
xor
add
fdivrs
hlt
in
mov
outsl
sub
xor
ret
xor
dec
lods
pop
cwtl
lock
into
mov
mov
mov
jns
or
push
mov
sub
pop
test
out
mov
cmp
mov
inc
jnp
dec
ss
or
rclb
adc
test
pop
jne
aam
mov
pop
ret
lea
mov
jmp
in
fsubrp
cmc
add
loop
mov
mov
sahf
dec
sub
inc
jle
gs
sub
jle
in
ret
jb
outsb
adc
fdivr
push
hlt
mov
popf
bound
inc
fwait
pop
add
cmc
out
adc
popf
jo
mov
cltd
loope
mov
adc
data16
add
mov
cmpsb
mov
popa
xor
popa
fidivrl
inc
and
das
mov
mov
xchg
mov
outsb
mov
sahf
fdivp
bound
mov
dec
ficomps
out
xor
daa
dec
sahf
dec
js
sbb
aaa
pop
leave
cltd
xor
ficompl
jecxz
adcb
cmp
sub
sbb
cltd
jmp
mov
fndisi(8087
or
ss
xchg
push
mov
jmp
xchg
jo
ret
dec
inc
sti
cli
dec
jbe
inc
adc
cmp
test
xor
jno
inc
mov
rcrl
add
adc
mov
adc
test
or
lcall
mov
mov
popf
mov
std
xor
shlb
bound
xlat
dec
hlt
je
xchg
lods
push
and
jmp
std
and
push
mov
dec
imul
inc
repz
addr16
or
jo
and
jecxz
mov
sub
repz
sbb
shll
fdivrs
adc
inc
rorb
xor
aas
dec
mov
mov
call
xchg
loopne
mov
xchg
and
sbb
sub
mov
insb
lock
repz
pop
push
shl
inc
fwait
push
mov
gs
inc
mov
out
in
out
out
lret
test
mov
pop
test
arpl
cmp
mov
aad
sbb
xchg
int
sub
inc
out
inc
fistl
mov
std
insl
std
data16
sahf
dec
mov
mov
aam
sub
push
int3
ficomps
movsb
sbb
mov
push
sub
sub
das
or
adc
nop
movsb
mov
or
add
call
mov
xchg
addr16
or
dec
iret
lahf
mov
push
ret
dec
lods
sub
push
jnp
das
mov
push
pop
fcomp
dec
pop
and
lahf
adc
jne
insl
lds
cli
shl
ret
cmp
es
int3
push
shl
movsb
test
or
arpl
imul
mov
movsl
push
ficoml
push
ja
xor
add
pushf
fidivl
daa
add
ror
repz
jb
cmpsb
mov
mov
cld
jne
sub
mov
cmp
jnp
lret
mov
js
fcoml
daa
out
fwait
mov
sbb
sub
mov
imul
ss
or
ficoml
scas
inc
mov
sub
add
in
jmp
test
cmp
mov
notb
sbb
roll
les
add
cmc
push
fstps
mov
sub
fsubs
sbb
in
mov
loop
shrl
cmp
not
pop
fdivs
pop
mov
icebp
dec
pop
push
push
popf
mov
dec
movsb
stos
mov
cmpsl
add
flds
dec
cli
sub
mov
pop
mov
aaa
lea
repz
scas
inc
or
shl
arpl
shlb
inc
lods
pop
sbbl
int
push
sub
test
popf
test
cmp
movsb
and
mov
outsb
aam
test
adc
gs
jmp
rcrb
fs
mov
xor
mov
scas
lock
adc
addr16
xor
nop
and
call
repnz
sbb
mov
dec
movsb
lret
xchg
rcrl
dec
sub
dec
in
push
enter
xlat
loope
xor
mov
aaa
and
dec
stos
cmp
sbb
in
lea
repz
sbb
mov
test
or
lret
pop
shrb
lret
cmp
subb
jnp
mov
in
adc
ret
dec
outsb
or
xor
jo
repnz
push
rcl
jge
jno
xchg
jnp
ficoms
arpl
xchg
lcall
jmp
iret
popa
xchg
sarl
cld
adc
cmc
aad
add
int3
cmp
mov
scas
test
getsec
adc
scas
sbb
bndldx
push
call
xchg
xor
popl
das
scas
sbb
mov
ja
cmpsb
and
cmp
je
mov
movsl
or
in
jmp
popf
jle
sbb
or
cmc
and
hlt
adc
or
fstps
and
inc
inc
lds
outsl
inc
jns
sub
sub
lock
addr16
or
int3
cmova
push
xchg
inc
cmp
xor
pop
movsb
mov
mov
lods
dec
dec
mov
test
pop
das
lahf
jo
ja
inc
xchg
pop
les
cmp
loopne
nop
fyl2x
pushl
adc
pop
fs
fwait
scas
cmp
loope
mov
je
add
jbe,pt
pusha
xchg
add
sbb
movsl
lcall
push
inc
movsb
xor
and
int
mov
xlat
enter
sbb
sub
mov
daa
or
sub
sti
ss
xchg
jbe
jp
jns
xchg
mov
stc
jle
inc
ja
push
sub
pop
pop
push
lcall
sub
jge
jns
gs
hlt
push
les
movsl
push
in
and
dec
and
lock
jp
into
fists
mov
jle
sahf
lods
and
lcall
mov
aad
and
das
roll
jbe
push
movsb
mov
pushf
add
mov
sbb
inc
xchg
rclb
or
mov
ret
ret
sub
push
jo
in
xor
pushf
or
mov
out
sub
fnsave
mov
push
xchg
inc
cli
fwait
imul
sti
test
mov
pop
sub
mov
fisttpl
inc
in
push
or
mov
and
push
jl
hlt
mov
push
call
pop
add
mov
xchg
and
idivb
lods
or
fcom
adc
cmp
outsl
push
jnp
add
or
scas
pop
inc
les
icebp
rorb
add
fwait
mov
pop
fsubs
loope
ja
fwait
inc
inc
mov
loope
in
iret
push
insb
mov
jo
pop
and
sbb
sbb
dec
mov
or
add
inc
stc
in
test
fwait
hlt
mov
adc
outsl
jb
arpl
push
das
adc
jno
fdivrl
outsb
ret
jmp
pop
loop
xor
adc
inc
repz
sbb
sub
push
jp
mov
lds
int
add
popa
pop
jg
shll
je
call
out
push
push
shr
leave
inc
mov
mov
mov
and
mov
dec
rorb
testl
jae
aad
jnp
mov
ljmp
jno
into
adc
mull
ja
add
ja
xlat
les
sub
cs
sbb
les
popf
sbb
out
mov
mov
dec
push
dec
sbb
mov
mov
add
sbb
rorl
out
dec
or
add
cmp
ret
repz
jb
dec
cli
pop
jbe
into
inc
fcompl
or
imul
add
xor
stos
lds
cmpsl
push
adc
and
mov
dec
xchg
adc
jb
out
mov
addr16
fistps
in
add
cmp
xlat
push
subb
mov
scas
xor
and
insl
mov
xlat
push
popa
push
movsl
jne
dec
loop
or
push
outsl
or
shr
movsb
sbb
subb
dec
mov
cld
fildll
test
and
out
push
fdivrl
adcl
fimuls
adc
add
cld
hlt
icebp
insb
rolb
imul
jle
mov
xchg
lret
jl
test
add
mov
dec
cmp
push
sub
mov
ret
nop
shlb
leave
mov
jns
into
pop
outsl
sbb
push
and
rolb
fcoms
gs
dec
pop
repnz
jg
ret
pusha
and
push
push
je
xchg
add
xchg
in
add
mov
dec
pop
push
push
jl
and
and
outsb
sub
arpl
add
jmp
mov
out
dec
aam
test
out
and
ja
cwtl
jge
lods
lods
xchg
dec
cmp
je
bound
add
rorl
add
mov
sub
sub
mov
and
or
cli
adcb
call
pop
repz
mov
cmpsl
and
or
inc
aas
in
xchg
mov
pop
xor
push
andl
aas
stc
jbe
sahf
xlat
mov
xchg
xlat
add
pop
andb
mov
lods
sahf
out
movsb
leave
mov
or
cld
lret
add
into
mov
gs
pop
lahf
lea
and
pop
xchg
push
mov
subb
jo
xchg
adc
mov
cmp
pop
push
inc
imul
sub
xchg
test
and
dec
add
lock
sbb
sub
clc
in
mov
mov
push
leave
or
ret
lds
mov
push
mov
pop
lods
adc
xchg
xor
test
pop
jp
push
gs
and
addl
mov
push
xlat
pop
mov
pop
sub
out
aam
imul
fwait
pushf
cmpsl
jnp
outsb
jmp
sti
cmp
jbe
leave
add
or
xchg
mov
adc
mov
ljmp
xchg
push
pop
adc
push
cmpb
loop
mov
inc
repnz
call
xlat
xchg
xor
pusha
int3
inc
lcall
je
rclb
cmpsb
frstor
ficoml
lock
push
adc
dec
push
fldcw
add
mov
xchg
cmp
and
or
add
cs
and
addb
push
out
adc
in
cwtl
aad
cltd
pop
mov
mov
cmp
mov
faddp
out
cmpsl
xor
popf
jp
out
jl
sbb
pop
xchg
or
lods
lcall
dec
es
movsl
jmp
mov
test
inc
fdivp
mov
movsb
sbb
cmpb
add
lods
repnz
or
jl
jge
cmp
ljmp
cmp
mov
mov
andl
add
sbb
in
xchg
mov
xor
and
aad
aad
mov
out
hlt
clc
xlat
loopne
dec
repz
aam
iret
sbb
lret
mov
jmp
lahf
xchg
iret
js
sbb
gs
dec
sbb
es
mov
imul
dec
bound
pop
mov
loop
fcomp
rol
or
adc
and
mov
sbb
mov
mov
fsubrl
mov
shrl
sbbl
insl
fisubrs
fwait
push
shll
std
loopne
ret
inc
mov
test
orl
dec
mov
jg
pop
pop
ss
mov
push
outsl
mov
inc
insl
add
fidivrl
mov
leave
sub
mov
push
data16
test
aad
sbb
sarb
ffreep
or
lods
and
push
clc
out
das
add
in
loopne
lock
cli
movsl
mov
adc
and
fistpl
icebp
jo
into
std
push
push
adc
xor
cwtl
xorb
and
push
pop
fcoms
das
dec
adc
call
push
mov
shrb
sbb
mov
and
sarl
popa
in
pop
jp
test
dec
xchg
mov
std
lods
xor
sahf
je
push
sahf
fcmovnbe
cmpsb
pushw
out
xchg
push
pusha
sbb
les
push
das
mov
cltd
loopne
arpl
adc
push
dec
or
xchg
xlat
sbbb
pop
or
cmc
insb
jne
jae
ds
push
js
inc
pop
shrl
pop
mov
mov
adc
les
xchg
lret
sbb
xlat
loop
lds
sub
jnp
jmp
insl
shlb
bound
sub
inc
add
punpckldq
xchg
sub
mov
in
pop
mov
mov
mov
loopne
jne
ret
cs
call
mov
shll
cmpsb
adc
repz
and
sbb
test
test
and
jmp
dec
cli
jnp
in
sbbl
and
rcr
sbb
sahf
push
mov
cmp
sbb
push
mov
lods
mov
cmovbe
push
subl
cli
loopne
push
pop
movl
popa
fsubp
shr
popa
xchg
xchg
dec
imul
loop
call
inc
outsb
xchg
jns
test
sub
and
jnp
out
js
sbb
mov
push
test
push
adc
jp
dec
mov
add
xchg
pop
addb
mov
xor
lods
call
stc
xchg
xchg
lock
test
imul
jecxz
lods
cmpsb
push
jnp
jbe
lock
push
out
jnp
push
mov
xor
aas
stos
inc
out
call
insl
test
ss
add
mov
ds
out
xchg
popf
ds
insb
mov
push
xlat
jg
add
lcall
popa
or
cli
les
sub
push
stos
jp
and
mov
push
mov
xlat
rcl
leave
repz
fidivl
enter
mov
nop
cli
mov
scas
mov
ja
in
mov
inc
aas
out
and
sti
loope
sbb
adc
es
xchg
out
lret
loop
dec
jne
in
pop
stc
jg
lret
sbb
dec
and
in
xor
ret
icebp
mov
mulb
cmp
imul
mov
fwait
cmc
rcrb
adc
jp
add
popa
imul
sbb
lods
adc
jge
pop
ja
dec
mov
ds
push
ja
aam
pop
aam
dec
pop
push
sbb
xor
dec
lock
ss
fisttpll
jo
mov
jecxz
sbb
arpl
xor
pop
and
stos
jge
xchg
arpl
icebp
arpl
xor
test
in
sub
es
mov
xchg
stos
dec
test
dec
repz
cwtl
movsb
sub
add
pop
cmp
pop
xchg
jnp
jg
lods
jnp
lods
aas
repnz
cmp
jbe
sub
imul
fs
cmc
daa
daa
sti
xor
dec
inc
lcall
sub
add
cs
gs
inc
xor
mov
call
popf
loop
jmp
movsl
ds
stc
cld
add
xchg
jle
mov
sub
shrl
xor
sbb
popa
mov
mov
stc
outsb
movsb
imul
fdivr
insl
dec
sarl
sahf
push
in
in
lds
sbb
cmpsb
in
inc
mov
mov
aad
outsb
mov
loope
jae
mov
mov
pop
nop
add
aaa
add
mov
dec
xchg
jmp
cmp
sub
out
jns
push
imul
lea
mov
es
out
lcall
nop
lcall
movsl
lret
or
adc
sbb
mov
mov
push
push
lcall
ja
jnp
mov
imul
adc
mov
or
and
outsb
inc
jge
enter
pusha
dec
mov
lock
and
xchg
int3
fisubl
test
pop
dec
inc
pop
xchg
stos
cmpsl
mov
ret
je
fdivs
and
cmp
jne
pusha
xor
dec
scas
clc
lahf
adc
dec
outsb
mov
test
mov
push
mov
add
and
roll
jnp
cmp
xchg
cmp
lds
adc
jge
loopne
xchg
shrb
push
fwait
push
dec
nop
stc
push
jge
sub
mov
dec
enter
pop
jae
fdivrl
imul
movsl
outsb
test
pop
ret
pop
sbb
cmpsb
lods
testl
jmp
xor
dec
test
popf
into
sub
pushf
dec
push
lea
cmp
gs
int
pop
xchg
loope
pop
lods
ds
mov
jb
ljmp
imul
xchg
loop
inc
lods
or
leave
in
push
les
mov
xchg
add
fwait
push
jns
pushf
dec
add
aaa
stos
setp
ss
arpl
mov
loopne
mov
adc
jmp
xchg
push
xchg
call
cmp
xor
lret
jle
outsl
xor
cmp
sbb
pop
jbe
push
repnz
xchg
cmp
push
xchg
cwtl
adc
mov
pop
add
test
pop
enter
cmp
in
xor
pop
loop
xlat
or
pop
bound
cmpsl
xchg
mull
aad
shll
mov
sbb
pusha
enter
xchg
adc
inc
call
xchg
insl
out
push
loopne
stos
sbb
mov
stc
daa
pop
adc
push
mov
aad
mov
xchg
into
dec
inc
cmc
popf
cli
shll
lds
mov
daa
mov
jns
mov
ds
std
je
cmp
cmpsb
sub
movsl
mov
sahf
leave
xor
lods
in
push
lea
enter
xchg
xlat
rorl
cmp
mov
rcrb
and
mov
xchg
pop
pop
dec
iret
ja
add
out
adcl
jmp
mov
jo
add
fwait
in
cltd
push
pop
push
cmpsl
pop
js
add
insb
pop
or
or
jp
xor
push
add
ret
outsb
cmp
sbb
pop
jmp
jmp
negb
cld
add
dec
xchg
popf
cld
lods
icebp
dec
loope
push
cltd
jne
jbe
outsl
mov
rclb
int3
pop
push
xchg
in
movsl
sub
dec
mov
mov
test
dec
mov
movl
push
sets
mov
xor
inc
and
cmp
pop
icebp
jb
push
adc
xor
sbb
add
cmpsl
outsb
inc
mov
cli
or
add
add
popa
mov
push
or
loope
lret
xchg
add
ror
clc
xchg
xchg
mov
push
xchg
mov
cmp
sbb
stos
sbb
and
push
bound
push
enter
test
clc
xchg
adc
sbb
pop
fmul
fistl
sbb
iret
movsl
push
daa
jge
fisttpll
cmp
les
int3
sub
mov
mov
mov
mul
icebp
jno
sub
out
in
and
add
es
addr16
fucomp
pop
sub
lods
loope
jb
test
cmp
pop
mov
jecxz
xchg
shlb
lret
sub
movsl
or
cwtl
insl
and
stc
lret
inc
mov
ljmp
jle
mov
fcom
and
add
inc
dec
xor
push
xor
icebp
inc
lds
jl
add
lret
aas
fstps
lahf
mov
notl
pop
sbb
adcb
jle
je
jge
sub
and
cltd
ljmp
adc
xor
mov
rclb
dec
mov
aam
test
push
xchg
add
lds
or
push
test
inc
mov
int
inc
das
xor
and
loope
cwtl
lds
ss
jge
dec
adc
out
or
xchg
mov
jns
inc
in
aas
sub
push
repnz
cld
arpl
mov
adc
int3
pusha
xchg
mov
clc
pop
nop
mov
xlat
sbb
lahf
pusha
data16
das
jne
ja
cmp
or
xchg
clc
inc
pop
adc
stos
lret
inc
jge
xor
pushf
sbb
adc
test
test
adc
dec
push
clc
repz
outsl
jmp
repz
mov
pop
jb
mov
mov
xchg
push
ret
cs
cmpsl
mov
push
push
int3
das
sbb
push
arpl
jns
add
jl
lods
mov
pushf
add
gs
xchg
mov
ja
inc
outsb
cmpsb
fs
test
sub
scas
mov
pop
mov
adc
aam
inc
add
push
and
inc
add
in
bound
add
dec
or
or
xchg
ret
and
movsb
sahf
dec
popf
xor
mov
addr16
adcb
cld
jo
mov
sub
pop
popf
push
mov
xchg
sbb
adc
pop
mov
or
mov
ret
push
sbb
xor
xchg
iret
mov
movb
xchg
mov
lret
out
and
imul
mov
xchg
dec
rcrl
xor
test
jb
dec
icebp
push
mov
or
or
lods
subb
into
idivl
inc
cmc
mov
cltd
loope
aaa
sub
sub
mov
or
imul
and
cmp
rorb
jecxz
jp
lods
jecxz
sbb
in
adc
scas
cmp
mov
ret
add
pop
inc
repz
or
aas
jg
movsl
xchg
inc
ret
jb
fdivr
js
lods
and
xchg
ja
out
or
push
sbb
clc
push
xor
sbb
mov
stc
mov
enter
jp
clc
xor
add
mov
test
imul
add
mov
ret
lret
in
mov
cmp
stos
jecxz
jns
push
xor
jg,pt
xchg
sbb
ret
test
pop
pop
sub
lods
adc
jp
mov
adc
lods
notb
inc
ret
dec
je
add
insl
orb
push
and
and
sbb
xorb
cmp
popf
mov
iret
ret
add
mov
popa
inc
stc
mov
adc
fldl
push
lret
mov
inc
lods
aad
es
add
in
sub
lock
leave
aam
mov
sbb
sbb
sbb
mov
mov
ret
faddl
lods
mov
lea
je
adc
inc
sbb
xchg
out
jl
and
cmp
or
ror
cmp
hlt
in
jbe
pop
sbbl
and
stos
cmp
es
lret
cmp
adc
imul
and
ret
xchg
inc
pop
push
dec
out
mov
imul
mov
and
pop
dec
notl
cs
mov
adc
in
dec
add
addb
dec
popf
mov
jno
fcmove
push
jno
lods
fsts
push
icebp
js
cmp
ret
vpandn
inc
mov
inc
xchg
outsl
push
bswap
inc
inc
jge
mov
mov
pushl
push
cld
inc
repz
pop
insb
enter
ror
jle
jp
jge
in
xchg
push
pop
pop
jne
cltd
dec
fists
std
dec
cmp
clc
inc
shl
mov
cmc
jns
lods
jmp
movsb
frndint
xchg
daa
cmp
xchg
fwait
in
push
xor
das
dec
outsb
jmp
cmc
dec
xlat
bound
adcl
or
and
sbb
pop
pop
cmc
sbb
mov
or
cmpsb
cmc
nop
push
lock
pushf
add
pop
jp
lret
cmp
lcall
aas
mov
loop
das
push
xchg
dec
pop
mov
sub
insb
dec
lock
addr16
mov
lods
stos
jecxz
pusha
inc
adc
add
out
pop
out
lcall
movsb
xor
adc
mov
xchg
adcb
and
popf
mov
loopne
pusha
cmp
ret
xor
sahf
push
mov
jle
pop
mov
fsubrl
or
sub
aaa
fstps
pop
rorl
popf
enter
mov
icebp
shll
cwtl
mov
push
push
call
jp
xchg
ds
out
xor
ret
mull
cld
mov
dec
mov
add
mov
inc
and
jl
push
test
mov
ret
out
mov
pusha
mov
pushf
lcall
mov
inc
repz
and
or
mov
sahf
jnp
jle
adc
cwtl
xchg
shlb
inc
test
or
push
cmp
in
repnz
test
mov
jmp
inc
push
ret
dec
push
imul
xor
inc
mov
mov
fildl
rcll
xchg
lods
cld
dec
es
in
mov
pop
movsb
add
adc
nop
pop
test
insl
call
adc
sbb
sti
out
call
dec
andl
test
repz
stc
ja
out
cmp
or
pop
stos
mov
in
in
scas
rcrl
jge
add
inc
fwait
aam
dec
mov
sub
imul
jo
test
outsb
mov
pushl
fxch
push
xor
jmp
cmp
in
inc
aad
xchg
popa
mov
outsl
adc
mov
andl
mov
mov
fimuls
clc
xorb
scas
push
xchg
lahf
jle
ret
push
in
sbb
xchg
mov
test
sub
pop
mov
jle
cmc
cmovge
or
aam
rcrl
sub
cmpb
icebp
lea
in
jae
push
cmp
mov
mov
incb
aam
push
mov
dec
outsl
and
xchg
sti
icebp
pop
loop
mov
sbb
ljmp
pushf
popf
and
lcall
clc
es
test
jl
movsl
rcl
hlt
fsts
sub
lock
or
movsb
lods
or
loopne
data16
xchg
mov
movl
push
adc
jnp
xchg
jmp
pop
movsl
mov
mov
pop
in
mov
sbb
sbb
cmp
notl
nop
orb
jae
sub
pushf
mov
adc
jns
or
sbbl
push
mov
inc
cltd
jmp
jae
stc
push
test
sarb
in
mov
sti
sti
mov
inc
outsb
outsl
adc
les
push
inc
inc
sbb
hlt
mov
sub
push
xor
test
mov
popa
mov
imul
scas
andb
fcoms
fyl2xp1
push
inc
fcoms
adcl
std
lret
cmp
mov
inc
in
outsl
outsl
sti
add
lea
in
int3
dec
mov
or
std
add
inc
data16
enter
mov
dec
sub
lahf
popa
inc
sbbb
or
xchg
dec
imul
sub
pop
out
aad
push
scas
pop
insl
mov
jae
push
ss
out
shll
jp
and
push
cwtl
cld
in
fstpl
mull
shrl
sahf
mov
je
pop
nop
jae
jmp
icebp
xchg
sub
ret
sti
iret
push
sub
cltd
cld
dec
jns
cld
sti
push
inc
adc
dec
cmpl
popf
jae
pop
adc
dec
lock
mov
jo
shll
fwait
lea
stos
leave
xchg
dec
lds
sub
leave
out
ja
movsb
orl
mov
inc
sub
sbb
add
sbb
pop
scas
or
push
mov
jge
adc
adc
orps
icebp
push
push
imul
loopnew
cmp
push
pushf
jbe
out
ret
inc
or
pop
in
negb
inc
inc
push
push
aas
lea
les
int3
jge
inc
jle
shrl
fidivrs
dec
xor
pop
ret
adc
fcomps
shrb
adc
adc
jo
add
lds
test
dec
mov
push
xor
fldt
int3
mov
cli
or
loop
cmp
pop
add
cmp
imul
or
inc
repz
add
xlat
out
push
jl
push
push
add
ret
lcall
push
test
mov
and
jnp
xor
popa
sub
loopne
das
cmc
xor
daa
ficomps
cmpsb
es
xchg
cmp
fyl2xp1
fistps
jnp
xchg
xchg
jl
lock
fs
fwait
sbb
mov
pop
fwait
jle
or
mov
lea
sbbb
mov
mov
or
shlb
sarl
push
insl
mov
pop
test
push
xchg
or
and
jo
insb
pop
push
xchg
jge
mov
push
pop
loopne
int
stc
clc
jmp
lds
dec
stc
int
aas
pop
je
push
inc
popa
cs
push
jnp
movb
test
jns
xor
inc
mov
arpl
das
movsl
or
dec
repnz
mov
jae
pushf
lods
xor
sar
fcomp
fistpll
outsl
xchg
dec
sbb
movsb
sub
lcall
ss
lret
mov
icebp
mov
lods
les
sub
mov
or
push
add
mov
xor
lret
xor
sti
mov
xorl
or
lods
lahf
mov
adc
sbb
out
ds
mov
push
xchg
ret
lea
or
adc
call
mov
leave
repz
icebp
lods
and
js
stos
xor
mov
lock
je
mov
fs
inc
and
mov
xchg
sub
cmp
xor
cmpl
adc
cwtl
jno
imul
push
sarb
mov
int3
das
sub
cld
sbbb
outsb
cmpb
sub
inc
aaa
jb
push
lods
add
inc
or
fisubl
pop
or
xor
outsb
lahf
test
andb
mov
and
or
bndstx
int
cmpsb
test
or
or
aas
jg
imul
icebp
jo
imul
mov
int3
sub
mov
fs
ret
mov
enter
push
scas
xchg
ljmp
out
test
push
mov
ret
subb
dec
cmp
fstpt
js
rorl
cmp
not
int
adc
cmc
into
fidivrl
je
sub
dec
int
cli
jmp
lret
sub
rcrb
jns
push
mov
dec
jne
dec
and
icebp
roll
add
and
int3
insb
xchg
lock
jne
mov
adc
mov
jbe
jl
mov
dec
cld
xchg
jecxz
xchg
jno
or
sub
xchg
shrl
gs
lahf
gs
mov
ret
test
xchg
int
cmp
mov
int3
cs
cld
mov
pushf
fcmovnu
je
jbe
inc
cmp
and
jecxz
out
add
test
push
sub
in
aam
divb
sti
xchg
test
jae
idivb
fsts
cltd
adc
xor
lret
or
dec
mov
loope
minps
sbb
out
mulb
call
mov
sbb
bound
dec
sbb
ljmp
or
das
xchg
sub
sub
dec
stos
rolb
inc
lret
cmp
cmp
lcall
testb
cwtl
inc
dec
test
jecxz
and
movsl
or
push
add
dec
cmp
cmpsb
loope
stos
testl
icebp
jle
jp
or
add
cltd
mov
jns
ja
inc
xchg
cmpsl
push
inc
ds
pop
fstpl
aam
sub
dec
stos
call
mov
shrb
enter
cmpsl
testl
cmpsb
xchg
sbb
aad
scas
jl
fiadds
cmp
pop
lds
and
push
pop
outsl
mov
ret
lahf
jo
adc
add
xor
push
ljmp
add
jno
jb
pop
out
fdivs
xchg
inc
scas
and
push
movsb
and
pop
bound
xor
and
mov
cs
ret
in
xor
arpl
inc
or
inc
or
add
adc
adc
sub
in
jnp
mov
in
jb
xchg
sub
movsl
mov
js
push
adc
aad
dec
xchg
lret
loopne
add
in
call
dec
xchg
xor
mov
and
ds
mov
lcall
xor
jle
ret
xor
push
mov
int
jb
cmp
int3
stos
adc
mov
fucomi
mov
scas
xchg
loope
cmp
add
dec
pcmpeqb
ret
shlb
ss
mov
jp
aas
push
mov
mov
rdpmc
test
lcall
jge
in
or
ljmp
push
or
jo
or
push
adc
jmp
mov
mov
dec
mov
out
test
ljmp
fisubl
and
inc
lds
aaa
mov
xor
adcl
loop
jno
bnd
sbb
inc
sbb
jl
cmpsb
jmp
data16
cmp
xchg
pop
mov
pop
jne
xchg
jno
movsb
js
xor
popa
cld
add
or
test
test
fsubp
mov
pop
ljmp
mov
and
rcr
jo
and
dec
test
jge
aas
xchg
dec
add
les
mov
pusha
push
mov
sub
add
push
pop
setp
sbb
test
push
jne
xchg
push
icebp
shll
dec
cmp
js
xchg
and
mov
sbb
cmp
or
push
jo
push
lods
pop
and
sti
adc
lock
imul
cld
push
pusha
clc
cltd
call
sbb
cmp
pop
cmpsl
ss
andb
stos
pop
mov
out
stos
mov
or
mov
inc
jnp
sbb
jne
mov
ss
test
xchg
xor
sub
negl
push
mov
sbb
lods
and
jbe
mov
imulb
test
inc
sbb
mov
stos
xchg
and
xor
cld
adc
orl
pop
sub
mov
neg
mov
jmp
leave
dec
rclb
cltd
nop
sahf
sar
push
mov
out
mov
dec
mov
insb
sub
test
scas
lcall
adc
or
xchg
scas
mov
mov
call
lods
add
mov
add
bswap
mov
clc
orl
dec
or
sub
push
das
mov
or
imul
lds
pop
and
push
dec
ljmp
lret
js
mov
sahf
mov
outsb
push
sub
sub
sbb
xchg
push
mov
push
or
push
adc
adc
jo
jo
mov
data16
je
mov
imul
jge
movsl
mov
iret
push
bound
or
es
lahf
pusha
push
ljmp
fmulp
push
mov
fisttps
xchg
in
shrl
cmpsl
or
insl
xchg
jmp
sub
mov
js
jl
pusha
cs
stos
xor
aad
ds
cmp
inc
loope
xchg
mov
push
dec
push
pop
dec
int3
cmp
cmp
out
xchg
xchg
cmp
and
pop
mov
shrl
lods
mov
adc
mov
arpl
outsb
shll
dec
push
out
test
lds
and
shlb
cs
cwtl
sbb
mov
push
sbb
orl
dec
xchg
aad
push
mov
movsb
stc
cmp
ret
and
scas
push
sahf
pop
jae
xor
dec
sub
andl
leave
pop
lea
insb
cwtl
leave
add
mov
push
mov
mov
in
stos
xchg
jae
mov
jbe
jp
lret
xchg
lea
adc
sub
dec
in
cs
fwait
mov
sbb
mov
jl
dec
xchg
mov
xchg
push
movsl
inc
xchg
mov
push
or
sbb
nop
imul
jg
xor
popf
out
das
mov
or
mov
mov
aam
fwait
cli
sbb
jo
xchg
jg
inc
popa
xchg
xchg
daa
rolb
loope
imulb
push
mov
mov
inc
scas
call
outsb
fnstcw
fimull
clc
in
cmp
or
inc
cmpsl
dec
das
lea
mov
adc
loopne
movsb
pop
pusha
lock
dec
pop
lock
mov
mov
fsubl
lds
mov
lret
or
pop
roll
jne
call
pop
adc
aam
orb
in
sbb
inc
push
popl
or
cli
pop
mov
jae
add
mov
stos
lcall
pop
add
dec
call
adc
mov
out
mov
scas
movsb
cmp
sarb
mov
and
cmc
pusha
rcr
cmp
mov
and
xor
insb
mov
xlat
sbb
xchg
xchg
pop
pop
mov
div
adc
jle
push
inc
sub
int3
lcall
pusha
fldcw
lcall
pop
pop
cmp
fbstp
in
push
sarl
testb
dec
sti
cmpsl
and
test
jbe
stos
lea
ss
pop
or
add
imul
mov
mov
or
ret
push
inc
stos
aad
mov
sbb
fistpll
cmp
es
fcomps
shrb
and
lcall
faddl
loope
sbb
add
ficomps
leave
mov
adc
rcll
iret
pushw
push
loop
dec
mov
roll
aas
sub
xchg
xor
pop
push
mov
dec
xchg
xchg
in
lea
jp
push
div
scas
mov
pushf
sahf
xor
mov
daa
ja
pop
in
mov
push
push
lea
inc
add
and
jge
inc
mov
adc
lea
cmp
lock
inc
mov
popf
lea
mov
lcall
hlt
loope
cmp
popa
insl
subl
adc
in
notl
jo
in
das
in
jne
adcl
xchg
imul
push
push
icebp
inc
icebp
xor
ret
fidivl
sarb
adc
xchg
sub
clc
adc
ds
pushw
sub
pop
clc
add
xchg
xor
ss
rcr
lcall
adc
push
out
pop
cmp
cmp
stos
insb
xchg
pop
sbb
out
les
out
inc
daa
dec
test
add
ds
xchg
bound
cmp
and
cmpsl
mov
jge
add
jp
repz
pushf
xchg
mov
fsubl
dec
fisttpll
pop
stos
dec
or
out
jmp
or
jno
jae
add
mov
push
jne
pop
adc
or
jl
cmc
shlb
sbb
pop
negb
inc
aad
std
pop
lods
mov
sti
popf
out
jae
pop
lods
ret
inc
add
and
dec
jp
outsb
push
sbb
into
mov
pusha
sub
pop
aas
rcrl
inc
push
insl
cltd
cmp
je
cmpsl
sbb
adc
mov
jbe
xor
int3
dec
test
aas
jp
adcb
enter
out
lret
in
scas
insb
mov
push
jle
mov
xchg
out
xlat
mov
rcll
ja
in
pop
xlat
cmc
sahf
pop
enter
mov
sarl
testb
mov
sahf
fidivl
mov
lea
xchg
pop
xchg
push
mov
push
mov
lea
std
inc
lahf
sbb
jmp
daa
das
sbb
or
adc
adcb
fs
push
or
sbb
jns
mov
mov
jge
shrb
mov
cld
dec
cmp
fadd
ret
xchg
add
jecxz
popf
jmp
mov
int
push
pop
jge
sub
sub
mov
push
sub
frstor
inc
test
insl
outsl
rcrb
and
cmp
call
jae
mov
mov
push
je
jne
mov
pusha
lods
mov
call
mov
stos
xchg
sbb
in
xchg
sarb
aad
dec
inc
dec
dec
je
inc
mov
fwait
movsl
sarl
in
shlb
xlat
mov
test
pop
xor
push
pop
pop
sub
pop
xor
add
lods
xchg
mov
add
rorb
aad
lahf
push
mov
inc
add
bound
lock
test
mov
adc
repnz
out
sbb
pop
cmp
mov
jg
sub
dec
mov
les
jb
pusha
jb
dec
imul
xlat
adc
frstor
or
popa
jns
push
add
in
movsb
outsl
dec
xchg
outsl
lret
mov
inc
jle
rclb
scas
iret
int
xor
aaa
loope
fsub
mov
loop
xor
fiaddl
xchg
cmp
cwtl
jns
inc
mov
sbb
ja
jmp
rorl
mov
fcoms
or
and
scas
cmpl
pop
xor
aad
add
and
add
cmp
loop
xchg
cli
sub
cld
js
xorb
movsl
adc
addb
fdivr
sbb
mov
imul
mov
sub
in
jne
push
sarb
mov
cmc
mov
xchg
cmp
mov
cld
sbb
adc
pop
lret
cmpsl
cmp
or
mov
call
js
or
jae
aaa
xchg
cltd
ja
je
cmp
aaa
pop
pop
lea
std
popl
int3
xchg
mov
stos
mov
test
data16
pusha
mov
sub
pusha
fistpl
adc
fstl
jg
adc
cmp
adc
or
push
add
das
push
mov
cmp
mov
or
jl
and
push
cmpsb
xchg
in
pop
adc
sbb
adc
shrb
or
dec
pop
push
data16
xchg
movsb
push
dec
inc
dec
mov
sti
mov
mov
and
push
mov
stos
std
icebp
xchg
rol
jae
mov
out
jno
cmpsb
xchg
shlb
test
movsl
sarl
jae
inc
and
sbb
fdivl
cwtl
pop
xchg
cmp
mov
mov
cmpsb
xchg
aam
arpl
add
cmp
push
add
std
jecxz
cmp
add
fisubs
and
mov
mov
popa
cltd
jae
adc
xchg
shrb
xor
sub
pop
mov
ss
hlt
jb
xor
jns
out
add
sub
ret
sub
in
scas
imul
add
mov
jmp
rcrb
mov
mov
arpl
cmpsb
or
or
icebp
inc
adc
sbb
mov
ret
cmc
in
cmp
inc
je
dec
jmp
sarl
aaa
pop
fdivrl
jge
test
push
loop
shl
loop
cmp
inc
roll
scas
push
sahf
sbb
aas
or
mov
inc
push
cmpsl
inc
daa
add
pop
cmp
out
sbbb
data16
dec
inc
mov
mov
mov
out
and
movsl
jge
fadd
jecxz
xchg
call
loop
in
add
into
pop
xchg
push
insl
jne
sub
mull
cld
xchg
jg
imul
stc
sub
or
xor
insb
aaa
popa
aaa
daa
cmp
lds
jnp
push
sarl
scas
stc
mov
sub
mov
fisubs
mov
dec
cmc
rolb
mov
or
mov
insb
inc
je
adc
andb
popa
sub
lods
ja
mov
jae
js
or
and
test
into
cwtl
pop
out
pop
jg
jno
data16
std
mov
or
or
mov
roll
inc
scas
mov
dec
and
pusha
xchg
cmp
inc
mov
shlb
aam
sub
adc
cmp
xor
repz
push
cmpsl
jne
test
xor
fld
frstor
inc
inc
push
aam
sbb
stc
jecxz
les
ds
lods
mov
aam
mov
mov
out
loop
scas
fs
xlat
imulb
lret
lods
pop
fwait
mov
and
sub
gs
in
test
mov
push
push
cmp
stc
int
mov
xchg
or
movsb
mov
pop
jnp
decb
pop
push
and
lods
jb
movsb
dec
in
dec
pop
mov
subb
or
sub
int
sbb
neg
call
add
and
cli
and
js
mov
adcb
fwait
es
or
pop
lock
cmp
aaa
pop
insl
jno
sbbb
dec
jno
push
mov
or
add
les
clc
sahf
jae
gs
shll
inc
fcmovbe
out
or
leave
jmp
jmp
mov
icebp
xchg
xchg
push
mov
ror
xchg
jb
ret
mov
jecxz
mov
sbb
cmc
insl
inc
sbb
sarb
sub
mov
dec
or
pop
ret
and
pop
sub
imul
jge
xor
shlb
add
push
sbb
mov
arpl
jbe
jle
scas
or
sub
inc
pop
or
es
data16
ljmp
and
pusha
cmp
cs
subl
leave
andl
jge
outsb
test
insb
test
adc
mov
mov
daa
fs
jmp
sbb
decb
jo
es
mov
inc
cmp
popa
and
cmp
roll
inc
data16
pop
pop
and
push
push
adc
dec
inc
push
mov
ret
push
sbb
pop
cmp
mov
shlb
in
add
jo
fwait
adc
jp
jnp
iret
sbb
ljmp
lods
inc
call
add
cmp
inc
xchg
in
inc
jge
jno
sti
enter
lret
xchg
cmp
stos
lds
mov
pusha
adc
aam
test
shll
movsl
stc
pop
sub
xchg
xlat
imul
pop
idivb
push
mov
lods
mov
dec
dec
in
jb
inc
push
mov
int3
fs
test
adc
push
sub
lods
push
pop
out
adc
or
pop
adc
adc
push
pop
rcr
cmc
into
and
inc
std
stc
dec
pop
push
insl
jno
mov
cmc
mov
out
stos
xchg
xchg
inc
push
pusha
push
aas
sahf
test
inc
rolb
dec
das
inc
dec
cmp
sub
pop
arpl
mov
mov
pop
sub
bound
fwait
lea
outsb
pop
mov
hlt
dec
pop
cli
in
push
jns
dec
push
jnp
sub
xchg
lods
or
xor
mov
push
adc
pop
mov
filds
cmp
mov
cmpsb
xor
xchg
pop
hlt
or
mov
mov
cmp
mov
pop
jle
roll
bound
test
dec
inc
imul
or
testb
push
adc
inc
jp
or
mov
inc
mov
cmc
cmp
cwtl
adc
les
mov
mov
stos
ficompl
add
out
pop
fsubp
sbb
shrb
aaa
stos
addr16
data16
daa
sub
jmp
cltd
ljmp
cmp
lret
lds
pusha
push
adcl
mov
cmp
pushf
pop
inc
add
mov
or
icebp
mov
mov
je
cmpsb
sti
dec
jns
push
aaa
xchg
and
popf
push
fbstp
cmp
aam
sub
jne
aas
add
push
cmp
inc
lods
aas
inc
mov
ret
mov
push
lods
push
jl
notl
jecxz
in
fbld
mov
insb
adc
out
movsb
push
dec
mov
psllq
lret
loopne
aas
xor
pop
in
ljmp
xchg
cmpsl
or
sbb
inc
loope
shlb
imul
jno
xchg
mov
cmpsl
insb
in
test
sub
mov
push
hlt
add
jae
adc
pop
imul
jmp
mov
and
pushf
and
jnp
sbb
and
or
sbb
fsubrl
adc
xor
sub
and
iret
push
popf
sub
aam
cmp
push
rol
call
fs
outsl
rclb
adc
fiaddl
adc
sbb
lcall
push
sub
sbb
add
cmc
pop
aad
movsb
cltd
sti
fnstsw
fwait
mov
rcr
sbb
shrl
enter
nop
lds
jmp
ss
leave
push
loop
fs
fidivrl
or
xchg
test
xor
fimuls
aad
sub
pop
or
in
test
mov
xor
dec
and
ret
sub
mov
lds
pop
fisubrs
cmpsb
inc
xchg
icebp
pop
xor
mov
cmpsl
pop
mov
cmc
pusha
and
xchg
sub
test
pop
mov
rclb
negb
mov
out
hlt
mov
jae
xchg
xor
jae
aas
pusha
cli
in
jne
fmuls
ds
ds
std
adc
lock
out
pop
cltd
push
adc
mov
or
in
bound
cltd
jmp
lret
mov
data16
mov
shrb
test
jl
into
adc
shr
sub
ret
jbe
xor
fwait
les
sub
mov
cltd
xchg
fsts
test
lret
mov
sub
push
das
adc
sbb
popf
dec
and
in
cs
popa
lcall
lock
xchg
push
shll
push
sub
fwait
shl
xchg
jo
pop
call
sbb
ret
andl
leave
xor
lret
adc
jnp
fimull
out
mov
leave
mov
xchg
pop
mov
pop
stos
mov
cmpl
lods
fcmovnbe
dec
xlat
cmp
je
cs
xchg
mov
int3
sub
in
xor
mov
loop
inc
aad
cs
lock
sub
je
mov
loop
mov
nop
mov
xchg
xlat
test
xchg
add
pslld
clc
adc
daa
cltd
inc
fldenv
aam
cmp
fiaddl
or
lea
mov
push
cmp
jge
sub
xchg
inc
stc
aaa
sbb
mov
pop
addr16
aaa
andb
mov
fs
rcr
sub
insl
mov
pop
in
test
idivl
mov
pop
stc
pop
jnp
addb
mov
movsb
sbb
lods
and
mov
orb
add
inc
dec
int3
cs
adc
cmc
lahf
sub
aam
dec
out
lret
cmp
mov
das
cmp
loope
xchg
in
inc
push
loopne
pop
xchg
pop
mov
xchg
imul
push
lock
mov
jne
enter
mov
aaa
add
dec
popa
push
pop
mov
aaa
pop
insl
jmp
adc
loopne
jnp
pushf
jge
mov
or
pop
and
cwtl
sub
jle
test
sbb
cmpsb
and
mov
jp
mov
std
adc
push
es
idivb
jo
je
xor
pop
rcr
pause
mov
cld
sub
mov
mov
pop
dec
mov
outsb
scas
mov
popa
add
femms
xchg
repnz
movsl
sbb
aaa
adc
or
mov
and
and
lret
dec
cmp
jg
sbb
in
pop
xchg
jne
or
lahf
inc
cmp
jbe
adc
and
out
imul
lret
dec
lock
rclb
cmc
pop
mov
cmpsb
rclb
outsl
imul
inc
xor
lahf
movsl
push
rorb
insb
popf
fistpll
scas
or
mov
loop
test
cwtl
pop
pusha
mov
pop
shrb
bswap
mov
mov
push
xchg
into
pop
lcall
push
mov
cmp
stc
add
in
sub
mov
push
push
sti
mov
sbbb
ja
mov
mov
rorl
inc
hlt
or
mov
movsb
imul
adc
imul
or
push
jmp
push
test
sbb
pop
xchg
jns
jo
push
fidivl
jbe
inc
or
sti
repz
adc
popf
sti
mov
inc
test
fsub
insb
lcall
popa
jno
sub
push
clc
mov
loope
push
in
fsts
scas
xlat
fiadds
movsb
sbb
std
mov
cs
ret
xor
in
push
fdivrs
dec
hlt
aam
dec
mov
in
mov
xor
mov
mov
cmpsb
mov
jae
loop
xchg
orb
add
mov
add
gs
jecxz
dec
cmp
fadd
enter
leave
in
pcmpgtd
insl
pop
add
cli
stos
jg
and
inc
pop
mov
ret
jns
cmc
cmc
mov
shl
or
push
mov
inc
push
cmp
mov
push
sarb
call
sbbb
inc
mov
jp
jl
je
test
adc
adc
mov
iret
pop
decl
cmc
push
out
xor
test
ss
daa
jmp
das
cmpsl
call
int
or
adc
in
stos
movsb
mov
int3
mov
xlat
push
orb
test
dec
mov
out
loop
shl
push
pop
inc
and
xchg
in
bnd
mov
sub
movsb
into
dec
xchg
xor
ss
xor
bswap
mov
in
clc
ror
hlt
jecxz
mov
aaa
xchg
leave
pop
loopne
mov
dec
in
ret
mov
cmpsl
and
mov
sti
mov
add
cmp
int3
mov
cmp
cld
mov
mulb
cld
adc
or
add
arpl
movsb
scas
inc
sti
sub
pop
orl
and
mov
mov
fisttpl
mov
dec
mov
jb
aam
pushf
lds
out
adc
fwait
dec
gs
jo
sub
sub
cmpsb
cltd
insl
out
sbb
in
ret
mov
popa
shlb
cwtl
jp
adc
or
xchg
nop
lahf
xchg
push
dec
adc
testb
push
hlt
das
mov
mov
mov
xlat
movsl
stos
push
test
push
imul
adc
inc
fidivrl
ds
xchg
mov
bound
mov
loope
jecxz
or
sub
stos
and
lods
push
adc
pop
fnsave
push
rcrl
loopne
bound
cmp
std
bnd
jp
enter
mov
mov
or
call
arpl
stos
and
push
sbb
cmpl
cmp
sub
push
in
xchg
mov
cmp
xchg
mov
pop
push
daa
iret
cmp
rcrl
popf
subl
or
icebp
dec
jnp
mov
dec
push
ds
imul
pop
cltd
sub
aam
and
aaa
push
dec
test
jae
imul
fwait
in
ficoms
xchg
sub
add
xor
xchg
dec
rcr
int
hlt
in
sub
gs
or
out
lock
adc
data16
popf
add
negl
repz
and
xor
test
add
jmp
cmp
cmpsl
adc
je
dec
push
add
jbe
pop
mov
xchg
out
fiadds
fiaddl
jne
aam
jecxz
imull
stos
rep
xchg
sar
adcl
hlt
movsl
aam
jb
push
aas
daa
or
inc
aas
pushf
dec
sub
fwait
ss
inc
cltd
mov
mov
add
scas
test
add
and
cwtl
pusha
int
mov
aad
or
pusha
lcall
jae
shlb
sub
lock
lds
lea
push
roll
xor
out
xor
cmpb
repz
adc
bound
dec
popf
xchg
hlt
insl
insl
sahf
lods
stc
out
and
test
in
ds
hlt
and
cmp
add
sarb
and
xor
in
adc
jnp
xchg
mov
jl
call
das
pop
dec
lods
sub
nop
mov
mov
out
popa
fdivp
inc
add
xor
inc
add
mov
inc
sbb
push
leave
jo
sbb
fsubr
push
jno
inc
inc
xor
mov
push
adc
xchg
popa
add
mov
bound
lods
add
and
fildll
lock
int
push
mov
mov
and
hlt
loop
sbb
cwtl
pushf
test
jno
mov
aad
inc
lods
fwait
lea
jmp
mov
inc
pop
sbb
adc
dec
lea
dec
mov
sub
sbb
stos
cmp
orb
xchg
xchg
mov
and
inc
cs
jecxz
shr
jge
ret
sub
roll
pop
hlt
mull
addl
push
shlb
mull
sub
ljmp
and
push
test
xor
popa
imul
das
inc
xchg
mov
or
gs
enter
push
and
and
test
ss
lcall
mov
lds
int
mov
sub
fwait
cli
outsl
lcall
xor
mov
mov
ljmp
stos
test
call
sbb
mov
into
adc
pushf
and
inc
jno
sahf
or
cs
cmpsb
mov
fwait
and
stc
push
outsl
fwait
mov
bound
and
mov
lahf
add
mov
push
aam
cli
mov
inc
mulb
iret
rclb
adc
xchg
sahf
xor
inc
cmp
jmp
cld
int
out
lcall
addr16
xorb
or
jno
mov
sbb
gs
sahf
pop
outsl
fwait
pop
mov
dec
andl
inc
nop
cmc
test
into
mov
call
add
mov
icebp
xor
movsb
in
imul
inc
shl
test
cmp
mov
insb
test
cld
adc
or
into
mov
test
xchg
add
dec
lods
xchg
adc
mov
push
rcrb
lahf
xchg
mov
movsb
dec
jns
jno
fnsave
aaa
jns
mov
or
sbb
mov
popa
out
mov
icebp
jo
push
call
and
xlat
pop
xlat
cltd
rclb
inc
mov
rcrl
clc
popa
test
jo
mov
repz
xorb
sbb
add
push
je
and
add
ss
push
xchg
shrb
bound
stc
push
cmp
in
xchg
mov
pop
pop
mov
jbe
push
sub
fidivrs
cmp
scas
mov
push
pop
add
jge
fs
jne
mov
fcompl
sbb
fimuls
mov
add
pop
push
das
es
call
mov
outsb
pop
sbb
mov
cmp
dec
fldl
daa
ja
mov
imul
rcl
mov
sbb
test
xchg
mov
in
or
push
mov
sbb
call
xor
clc
test
mov
ja
mov
loopne
mov
or
shrl
sahf
fwait
inc
cmp
loopne
inc
repnz
mov
enter
test
add
rol
pop
or
loopne
enter
push
das
fisubrl
aas
push
fwait
xor
sub
arpl
scas
repz
es
or
jle
cmp
mov
xor
lds
clc
mov
mov
insl
in
sahf
push
cmpsl
xor
xlat
adc
int3
in
or
mov
jg
mov
aaa
add
leave
sbb
push
ljmp
cli
or
lcall
scas
push
sbbl
sub
push
and
in
les
and
adc
inc
sub
push
lods
push
popa
bswap
in
ficoms
test
pop
adc
mov
push
inc
push
sbb
sub
xor
jno
mov
insl
ja
test
aaa
lods
xor
and
test
xchg
push
mov
inc
lea
add
enter
jne
andl
jb
fadds
xchg
int3
fldt
stos
int
out
push
ds
arpl
sbbl
xor
and
out
or
xor
daa
into
out
in
loop
mov
movsb
sub
pop
pop
jg
inc
aad
loope
mov
icebp
test
dec
sbb
cmpsl
fmuls
test
imul
add
rclb
jp
sbb
jle
dec
mov
test
xor
sub
xor
sti
mov
mov
pop
xor
dec
adc
inc
push
pop
lea
incl
pusha
adc
push
adc
stos
faddp
movsl
inc
jecxz
dec
jbe
popl
arpl
out
imul
sub
xchg
cmc
xor
jg
cmp
das
rclb
fadds
in
gs
ja
mov
cmc
mov
scas
xchg
mov
xor
ret
sub
fs
or
stc
loope
enter
mov
dec
pop
adc
cs
pop
push
je
in
mov
test
adc
dec
or
or
lret
fisubrl
out
pop
inc
pop
out
pushf
jo
sbb
push
int3
std
cwtl
aaa
mov
out
add
sti
dec
jp
adc
dec
jbe
xchg
xchg
dec
xor
lods
lahf
dec
pop
mov
jmp
dec
stc
xor
jl
leave
mov
jge
aaa
mov
imul
or
lods
xlat
or
scas
mov
mov
test
pop
and
jmp
mov
jl
cltd
inc
jecxz
mov
mov
jmp
jae
out
dec
xor
decl
push
inc
in
adc
loop
and
lret
fsubs
in
or
jno
imul
add
test
lock
mov
jnp
nop
dec
xchg
xchg
add
lds
rcl
cld
push
in
sahf
cltd
fwait
xchg
sbb
lock
sub
xor
jp
fistpl
repz
fdivrs
cmp
popa
cmc
ss
icebp
iret
sahf
jo
loope
pusha
pop
push
cltd
push
call
push
pop
sbb
enter
jno
xchg
add
daa
inc
test
insb
stos
xchg
lock
dec
fdivl
xor
sub
adc
loop
or
cmp
loopne
inc
or
adc
jecxz
fisttpll
pop
gs
sbb
sub
clc
pop
in
push
in
and
and
jo
jle
pop
sbbb
and
inc
adc
pusha
sbb
int3
scas
fisttpll
sarb
or
inc
scas
aad
aam
movsl
add
xor
xchg
push
pop
or
mov
push
mov
push
mov
mov
sbb
mov
add
jp
mov
pop
lahf
out
or
dec
jo
popa
mov
sbb
jge
jge
roll
imul
inc
jo
mov
hlt
cli
shll
mov
fs
add
pop
mov
jmp
mov
sub
or
imul
mov
fdivs
pop
lahf
cltd
xlat
stc
pushw
dec
xor
or
stc
in
out
inc
shll
mov
nop
jns
roll
xchg
adc
flds
xchg
dec
xor
hlt
rclb
mov
sbb
test
lods
inc
mov
cmp
jbe
pop
pop
addr16
lock
sbb
cmpsl
cmp
mov
rcrl
std
lock
cmpsl
jno
push
cli
cmp
xchg
das
jmp
leave
mov
test
ja
iret
mov
cmc
mov
add
js
sub
xor
pop
add
adc
xrelease
movsb
scas
int
fimull
pop
mov
clc
mov
push
xchg
mov
mov
and
outsb
jge
fsubrl
sub
mov
mov
xchg
dec
sub
out
inc
sub
add
out
inc
hlt
sub
lret
or
jle
ret
mov
jne
sub
insb
mov
divl
pop
cld
jecxz
bound
cs
out
mov
stos
scas
adc
sub
pop
out
inc
mov
xchg
pop
outsb
pop
inc
xor
xor
cmpsl
ss
sub
xchg
pop
repnz
loopne
pop
xchg
dec
jbe
cli
inc
add
pop
mov
dec
mov
daa
sbb
push
data16
jbe
ret
and
popf
push
xchg
je
ljmp
xor
pusha
lahf
mov
sti
pop
cwtl
ss
daa
inc
test
add
outsb
lods
das
inc
in
and
ret
jbe
iret
dec
pop
push
mov
mov
xor
push
sahf
jnp
jne
add
xorb
stos
sbb
lret
imul
mov
push
loop
sub
or
pop
lahf
xor
pop
add
test
inc
adc
aas
rorb
push
ret
sub
mov
pop
nop
xchg
push
enter
js
mov
lret
add
imul
hlt
mov
or
stc
bound
test
aas
es
sbb
decl
push
addr16
testb
pop
xchg
daa
jbe
enter
pop
hlt
xchg
adc
stos
fwait
jb
mov
insl
push
sub
roll
adc
into
in
roll
inc
fisubrl
adc
push
hlt
repnz
test
shlb
and
fs
cmp
mov
pop
call
sbb
repz
lcall
aad
mov
mov
mov
jg
xlat
bound
xor
xchg
sub
loopne
jo
mov
stos
shr
dec
xchg
outsb
shrb
add
push
iret
scas
inc
movsb
enter
xchg
cmpsl
dec
shl
and
lods
mov
add
lcall
mov
push
and
loopne
test
mov
insb
shrb
xor
int3
add
iret
push
into
std
pushf
mov
xor
lret
stc
das
mov
test
jecxz
jle
fdivl
repz
int3
outsl
inc
movsb
cld
xchg
or
pop
sub
jo
and
call
mov
pop
pop
mov
and
push
jb
shl
mov
lret
pop
pop
or
dec
push
cmc
bnd
gs
into
aas
jnp
cmp
xor
es
cs
pop
jae
cli
outsl
in
jp
pop
rcll
mov
jbe
and
jp
or
jne
stc
cmpsl
scas
fwait
pop
and
xchg
inc
mov
and
mov
mov
ret
jl
scas
or
movsl
sarl
es
pop
jo
add
imul
scas
addr16
adc
rol
cmp
loopne
jge
xor
xchg
xlat
js
clc
mov
inc
cmpsb
inc
aas
ret
pushf
jp
popf
mov
sub
xor
pop
es
pop
cli
push
aad
jns
cmp
jge
add
and
jne
fdivp
pop
mov
or
add
ds
notb
cmp
in
jbe
bound
inc
adc
mov
in
movsl
ljmp
pop
and
insb
std
mov
jns
xor
stos
popa
pop
data16
ror
jmp
rcll
mov
pop
sbb
inc
fildl
aam
add
mov
pop
int3
outsb
fmuls
insb
insb
pop
mov
stos
stc
shrl
ror
test
jmp
outsb
jne
pusha
pop
decl
shlb
dec
inc
mov
lcallw
mov
cld
lret
imull
popa
and
pop
lret
jb
xchg
push
pop
stos
aaa
add
gs
mov
push
inc
and
ja
mov
xchg
mov
cmp
adc
mov
xor
mov
add
jb
cld
int3
icebp
cmp
and
and
cs
mov
mov
mov
cltd
adc
mov
imul
imul
ret
test
mov
inc
jl
cmpsl
in
or
das
sbb
sbb
mov
lret
gs
mov
jbe
sub
inc
fs
movsb
pop
arpl
push
rclb
jge
jb
movsl
popf
xchg
loopne
jmp
cmpsb
int
sub
lahf
dec
pusha
push
adc
inc
ret
or
imul
pop
mov
adc
sub
mov
ds
loopne
addr16
scas
repnz
pop
sarl
dec
std
mov
jno
and
je
push
adc
or
mov
mov
mov
insb
out
jbe
mov
les
xchg
add
mov
lods
stc
xor
pop
cmc
in
and
outsb
sub
test
push
xor
repnz
lahf
xchg
popf
mov
mulb
pop
xchg
loope
js
out
cmp
fstl
fstpt
stos
cmp
add
cpuid
sbb
fidivrs
daa
in
sub
inc
add
mov
push
xor
dec
jg
mov
imul
test
xor
xchg
inc
cmpsb
cltd
leave
adc
bound
daa
and
inc
inc
sub
xor
loope
inc
adc
push
out
and
bound
mov
loop
rclb
inc
ljmp
pop
jo
jns
jecxz
hlt
subb
xor
push
inc
sbb
enter
dec
sahf
fnstenv
out
pop
xlat
leave
les
fwait
mov
fxch
inc
push
out
rclb
and
jne
into
lcall
fdivrs
fcmovbe
inc
xor
mov
cmp
dec
xlat
les
pop
push
rorb
mov
fs
xchg
lret
push
js
leave
mov
or
icebp
xor
nop
jl
lret
xchg
sub
shr
shlb
into
push
in
push
push
aad
call
push
jecxz
add
jmp
xlat
adc
shlb
loopne
fs
jecxz,pt
sub
loope
mov
mov
mov
inc
pop
xor
adc
repz
pop
inc
xor
dec
mov
dec
cmp
pop
and
pop
negl
ret
cmpsb
rcrl
call
popa
bound
ljmp
add
repz
out
test
push
xchg
ret
jb
dec
xchg
scas
push
stc
add
jg
or
adc
mov
hlt
and
fists
je
outsb
and
and
add
inc
loop
int3
scas
out
sbb
std
sub
es
roll
loope
dec
stos
xchg
test
mov
stc
ljmp
inc
test
cld
sub
dec
in
sbb
or
cmp
or
dec
cltd
bound
pop
je
push
pop
inc
mov
std
out
push
push
push
gs
xor
push
dec
xchg
xchg
in
aad
jae
or
mov
sub
jle
sbb
aam
loopne
inc
adc
pusha
sbb
test
push
lret
pusha
sbb
jle
inc
mov
adc
test
hlt
test
push
sahf
xor
mov
fisttps
dec
stc
imul
or
arpl
mov
nop
xchg
aam
xor
out
scas
inc
xchg
in
xor
mov
imul
pop
ficoml
in
add
imul
cltd
mulb
pop
push
icebp
leave
mov
aas
pop
arpl
fmul
inc
scas
or
sbb
mov
pop
sti
and
sub
add
cmc
pushf
pop
pop
ja
not
js
push
add
imul
mov
test
dec
mov
xor
test
ja
imul
loopne
adc
aas
push
xor
loopne
pop
cmp
repz
jns
push
adcb
mov
xchg
and
mov
push
in
loop
xor
ret
cmp
sarl
add
dec
dec
pop
sbb
push
pop
and
or
out
dec
mov
jbe
daa
stc
popa
je
xchg
divl
pop
or
insl
jns
clc
fs
pop
pushf
lret
mov
mov
xor
cwtl
cmpsb
jle
int
arpl
xlat
jge
pop
dec
shlb
inc
out
or
mov
fmull
mov
clc
lock
xor
dec
jmp
adc
fmuls
iret
lret
lahf
push
fisubrl
inc
nop
dec
cmp
mov
hlt
rcr
xor
fldt
shrl
bound
stos
gs
inc
rcrl
ret
sar
cltd
out
dec
mov
scas
cltd
fsubrp
lods
xor
jne
stos
jnp
icebp
pushf
aaa
mov
ds
xor
mov
pusha
inc
in
daa
jns
mov
sbb
jbe
jbe
jne
mov
aad
lahf
popa
xchg
in
and
std
push
adc
in
inc
sbb
stos
xchg
lret
jo
jae
mov
dec
mov
add
popa
mov
lea
mov
sub
sbb
in
sbb
and
mov
and
adc
pop
cmp
push
out
mov
mov
frstor
hlt
adc
inc
cld
cmc
pop
shll
xor
subl
xchg
testl
cmp
mov
popf
or
mov
push
push
jb
sub
or
push
shlb
add
enter
mov
cmp
stos
insb
jl
aas
mov
and
xor
es
push
mov
mov
jp
shlb
sbb
dec
iret
xchg
or
jmp
sahf
lea
out
xor
and
push
mov
imul
jl
adc
jecxz
fisttpl
fidivs
jbe
int
sbb
push
test
fs
mov
jle
mov
xchg
insl
js
xor
idivl
mov
nop
roll
repz
popf
in
notl
jp
cmpsb
xor
fimuls
or
jl
push
addr16
insb
mov
out
in
sbb
dec
mov
out
les
ljmp
sti
adc
cmc
push
scas
xor
push
dec
dec
daa
subl
cmp
shl
and
xor
push
cwtl
sub
xchg
jle
xchg
popa
lea
lds
movsl
inc
lods
cltd
popa
jl
sbb
push
and
sarb
fisubrs
lods
inc
cmc
sub
mov
mov
xchg
test
inc
ret
push
sti
add
pop
jne
mov
pushf
sub
neg
sub
sbb
cmp
xchg
push
test
fwait
pop
fiaddl
shrb
cmp
arpl
jg
jg
or
inc
cmpsl
fs
pop
xchg
mov
xorl
dec
ljmp
push
mov
ret
pop
xor
mov
pop
xchg
sarl
aad
push
rclb
pop
aam
or
sub
sub
jg
jnp
call
mov
dec
jge
or
pop
jo
push
popa
xchg
iret
icebp
inc
insb
ss
and
sahf
lods
in
or
push
das
out
outsl
dec
repnz
mov
add
sbb
mov
fiadds
dec
incb
fildl
sub
xchg
cs
imul
repz
pop
and
ja
int3
jne
rcll
adc
lret
dec
test
fnstsw
aaa
dec
pop
jne
or
adc
lea
mov
jl
iret
shll
pop
stc
addl
popf
nop
mov
and
and
push
xorl
cwtl
inc
fdivrl
mov
loopne
and
call
je
ds
xchg
ljmp
add
rcr
dec
dec
inc
int3
popf
lret
stos
loope
lret
jecxz
push
in
arpl
xor
scas
push
xor
in
add
push
fs
cmp
pop
mov
push
xchg
or
lea
jg
jge
mov
scas
add
dec
seta
sub
xadd
xchg
jmp
into
ficoms
stc
push
lods
xchg
add
cmp
movb
lcall
clc
movzbl
jg
fcompl
cwtl
add
pop
fdivr
jg
aaa
fwait
cmpsb
std
cmc
filds
movsl
and
aam
push
and
hlt
mov
into
cld
imul
addr16
cwtl
pop
mov
incl
jae
push
mov
mov
or
aas
mov
mov
cmpsb
ja
shrl
jno
and
sbb
mov
je
xchg
mov
negb
pop
pop
movsl
popf
rol
xor
movsb
int3
add
and
int3
jg
dec
or
sbb
test
in
jae
inc
in
ja
cltd
gs
adc
hlt
jnp
outsl
jb
jae,pt
pop
adc
ror
rolb
frstor
in
int
sti
lds
cmp
inc
pop
cmpsb
out
testl
call
scas
mov
xchg
jp
jle,pt
pop
inc
xchg
or
sbb
cmpsl
add
test
jno
leave
xor
mov
adc
dec
cmc
xor
adc
mov
push
adc
dec
jecxz
sbb
dec
xor
mov
fcomip
aad
xchg
sub
add
mov
shll
mov
outsb
and
pop
mov
rcr
mov
in
int
lahf
out
dec
xor
jg
cmc
into
jns
test
dec
cmp
adc
arpl
xchg
popa
jmp
jne
mov
rclb
jnp
dec
pop
add
out
insb
dec
xor
sub
adc
ss
pop
xchg
cmp
cmp
daa
pusha
fisubrl
js
dec
and
ds
mov
inc
rorb
push
int
fsubp
jno
xlat
mov
and
movsb
jns
push
addl
orl
ficoml
lret
movsb
cmp
ss
xchg
stc
mov
repnz
mov
sarb
xchg
je
fisttpl
mov
pop
mov
cmp
subb
pushf
jle
adc
and
imul
out
add
loopne
mov
mov
cwtl
fisubl
pop
xchg
jge
inc
repnz
fimuls
mov
and
enter
repz
adc
inc
jo
xchg
adc
mov
shr
cmp
jmp
insb
mov
sahf
faddl
mov
mov
dec
and
and
jp
mov
push
scas
or
xor
sub
xchg
lock
fldenv
aam
vpblendmw
mov
push
mov
mov
aaa
cmp
mov
jne
jbe
sub
arpl
mov
xchg
pop
jae
pop
dec
xchg
mov
fiaddl
inc
cmpsb
sub
loopne
or
sub
addl
mov
dec
ret
mov
pop
je
fistpll
lcall
push
mov
mov
cltd
notl
stc
es
and
in
pop
pop
fisubl
in
lds
scas
das
out
add
gs
fwait
insl
rorl
pop
ljmp
repz
bound
mov
mov
dec
cmpsb
add
adc
shlb
sbb
xor
dec
xchg
std
adc
push
or
jae
mov
mov
and
xchg
lcall
lret
fldenv
lods
sbb
pushf
and
cmp
mov
call
xchg
jnp
int3
rcll
sbb
aam
fstpl
es
inc
adc
out
push
fwait
cmp
add
imul
lods
gs
aas
inc
push
out
in
outsl
mov
lea
mov
jl
add
into
fdivs
xor
push
jnp
lahf
lahf
jnp
les
dec
and
xchg
and
idivl
xor
xchg
rcll
in
call
mov
mov
fwait
sub
xchg
mov
jmp
fyl2xp1
push
cli
pop
ret
mov
or
sub
xchg
inc
hlt
mov
xor
push
push
shlb
aad
addr16
nop
push
mov
xchg
push
pushf
xor
daa
popf
jmp
mov
fisubrl
mov
pop
mov
xor
xchg
orb
inc
test
xchg
xor
push
jg
dec
push
or
es
mov
lods
xlat
xchg
inc
and
ret
sarl
ja,pt
sub
push
loopne
jge
loop
adc
adc
inc
shl
popf
orb
leave
in
add
xor
or
scas
aas
adc
ja
mov
mov
pop
push
jne
sti
xor
mov
jle
daa
les
adc
lods
and
cmp
out
ss
insl
mov
jecxz
pop
lock
mov
cmp
cmp
loopne
mov
outsl
xchg
lods
jle
xchg
into
xor
fmuls
mov
cwtl
mov
cmpb
sbb
int3
cmc
cld
test
mov
stos
subb
add
lock
sarl
dec
clc
xor
and
mov
dec
in
dec
mul
dec
jg
mov
das
pop
pop
insb
sti
movsb
jle
add
xchg
std
sub
mov
or
sub
test
push
add
jne
pop
adc
nop
pop
mov
cmp
mov
add
das
cmp
and
add
mov
dec
sbb
sub
mov
jp
cmp
in
push
push
sbb
xor
jmp
or
add
pop
ljmp
xor
dec
adc
fcoml
inc
aaa
add
xlat
fldt
in
shrl
mov
ficomps
xor
cmp
add
add
repnz
sbb
xlat
cmp
jno
stos
movsb
sbb
cltd
mulb
movsl
pop
adc
mov
scas
cmp
or
xor
aad
pop
and
gs
push
sahf
pop
in
ror
sti
fwait
pop
sbb
mov
aam
rolb
sbb
ret
out
dec
mov
fsubl
outsb
push
movsb
or
mov
jge
pusha
jmp
xchg
and
jecxz
js
jmp
outsl
cmp
insb
outsl
fbld
jg
repz
mov
sbb
jb
pusha
inc
pop
out
jne
bound
dec
out
push
xchg
xor
or
cmp
test
cld
sub
mov
shll
sti
testl
popa
mov
mov
push
push
inc
jae
das
jne
shrb
popa
pop
movsb
add
fidivrl
add
call
add
sbb
mov
insl
fdivl
jno
shll
add
add
ret
ds
lds
jns
fidivrl
or
jo
imul
ss
pop
loopne
test
stos
faddl
aam
movsb
or
lcall
lock
ficomps
cmp
lods
sbb
lods
xchg
iret
dec
shlb
sbb
mov
fsubs
pushf
pushf
stc
daa
ret
ds
lahf
cmp
mov
fldenv
push
mov
sti
dec
cmp
xor
and
adc
xchg
pop
orb
addr16
push
jae
pop
and
sub
out
mov
add
or
xchg
add
in
scas
mov
out
mov
jmp
jle
fisttpl
lds
jno
mov
es
inc
inc
mov
lds
cmp
lock
in
mov
fmull
les
dec
mov
je
mov
jnp
add
addr16
push
mov
pop
mov
fmull
fwait
aam
clc
xchg
aas
mov
add
lahf
mov
data16
insl
xor
or
inc
mov
fsubrs
add
jo
pop
loope
or
inc
subl
xchg
push
clc
and
pop
jbe
enter
in
iret
push
ja
outsl
pop
cmp
stos
ljmp
into
cs
jb
or
mov
shll
adc
out
into
dec
pop
and
pop
add
mov
xchg
inc
dec
xchg
idivl
jmp
mov
gs
push
sbb
inc
or
les
sbb
push
cwtl
mov
enter
aaa
test
xor
int3
repnz
rorb
fidivs
pop
jns
stc
xor
adc
lods
outsl
scas
pop
movsb
xchg
inc
xlat
movsl
dec
ret
pop
lahf
push
add
cmp
push
mov
push
loopne
mov
push
lcall
lahf
mov
rcll
mov
fistpl
or
inc
mov
test
sub
sub
dec
sbb
fistpl
pop
addl
xchg
add
push
ret
js
popa
icebp
jmp
jns
clc
cli
dec
lahf
in
icebp
lock
or
lds
mov
movsb
stos
or
cmp
cld
dec
sbb
adc
in
fwait
dec
jo
ret
mov
and
cli
xchg
mov
push
in
pop
dec
xor
cmpsb
lea
jnp
pop
sub
jge
cltd
jmp
fucom
mov
ret
push
sub
lcall
pop
loope
dec
mov
cmp
mov
mov
dec
cld
nop
outsl
popa
adc
mov
shrb
xchg
pop
bound
ret
inc
dec
inc
adc
sub
icebp
imul
fldenv
sahf
incb
pop
pop
stc
inc
pusha
call
cli
bnd
sbb
push
mov
pusha
lock
aas
jae
rcr
mov
sti
mov
pop
pop
push
cmpb
push
ja
fs
data16
sbb
out
stos
fninit
xchg
fdivs
mov
sub
aaa
outsb
pop
aaa
loopne
js
out
ds
cmp
cmp
add
cwtl
push
sbb
aam
repz
scas
shr
hlt
movsb
push
inc
pop
and
ficomps
adc
mov
aad
pop
loope
test
mov
mov
test
mov
iret
aaa
cmp
sub
mov
fs
std
sub
jecxz
stc
std
xchg
sub
test
fiadds
aad
jmp
sbb
sbbb
fiadds
xor
out
aas
lods
add
sahf
call
and
daa
call
arpl
jbe
das
cmp
ret
inc
inc
inc
and
xchg
and
fistl
mov
cmp
and
pop
adc
mov
lret
nop
stos
push
ss
mov
xor
ret
testl
std
test
loopne
adcb
outsl
mov
sbb
popl
jmp
aaa
push
push
cmc
lahf
dec
sub
lret
pop
push
arpl
cmp
pop
sti
add
aam
stc
inc
adc
je
std
adc
mov
data16
adc
dec
iret
xchg
mov
lea
dec
mov
dec
cltd
mov
es
inc
mov
movsb
push
and
clc
add
icebp
lods
mov
mov
test
add
push
subl
fcmovbe
push
es
cmp
pop
cld
xlat
test
jae
movb
add
or
outsl
ljmp
mov
sbb
sbb
int
inc
xchg
shlb
cmovbe
sbb
xor
add
in
addr16
div
and
add
xsha256
cmpsb
push
dec
loop
xchg
xchg
and
sbb
inc
dec
xor
sar
sbb
inc
sub
jg,pn
scas
out
inc
xchg
inc
add
push
js
fldenv
popf
out
push
lock
inc
test
shlb
in
pop
xor
sub
pushf
add
ja
and
sbb
xchg
icebp
sub
ffree
fstps
push
push
ret
gs
or
cwtl
icebp
add
cmpsb
mov
or
push
cmp
mov
sbb
insl
inc
xchg
aaa
loopne
cltd
jge
inc
movsb
out
iret
out
cmp
in
out
jp
jge
sub
sbb
xor
mov
aaa
icebp
adc
sbb
nop
dec
rorb
lahf
mov
mov
xor
or
cwtl
dec
hlt
adc
cmp
jns
sbb
cmp
mov
lcall
gs
cmp
inc
cs
mov
sub
test
cmpsl
mov
push
inc
sbb
filds
ljmp
adc
sub
out
cmp
pusha
loopne
outsb
push
xchg
in
lods
test
mov
sub
sub
cmpsl
sub
sbb
jbe
outsb
inc
mov
fisttps
orb
jle
iret
addr16
push
dec
stc
mov
std
sub
pop
or
jne
lods
adc
adc
pop
sbb
stos
sbb
jae
jg
imul
idiv
lahf
add
ljmp
imull
or
jnp
jae
je
imul
cmp
xor
rclb
pop
or
jo
xchg
lret
repz
push
stos
mov
ret
in
adcb
add
push
daa
testb
daa
cli
xchg
sub
cmc
cmp
pop
and
cltd
mov
jmp
jae
out
xchg
orb
std
adc
nop
or
adc
sub
jne
les
or
dec
bnd
push
xchg
fwait
rclb
scas
push
out
mov
psrlq
clc
fs
stos
int
lods
gs
shl
mov
movsb
in
clc
add
sbb
adc
gs
push
outsl
cmp
inc
aas
xchg
cld
orb
jmp
andl
push
cmpsl
in
sbb
std
dec
loopne
shrb
sbb
mov
decl
xor
icebp
push
fstps
imul
movsb
pop
adc
mov
gs
into
mov
pop
inc
dec
lods
rcrl
cld
mov
mov
out
aaa
or
dec
jnp
loopne
aad
sbbb
xor
call
mov
in
xor
out
js
int3
stc
call
push
imull
sub
sub
dec
cmp
mov
mov
test
das
mov
rorl
push
push
dec
hlt
cmp
hlt
bound
jl
dec
pop
test
rorb
inc
icebp
jo
fbld
pop
dec
repz
inc
push
hlt
mov
cwtl
push
rcll
or
adc
imul
pop
pop
dec
xor
fwait
sti
pop
aam
imul
mov
and
mov
push
fwait
pop
stos
aad
hlt
es
push
mov
rcr
push
xor
cld
cmp
in
je
sti
shl
scas
fcmovb
cmp
cmp
out
test
sbb
icebp
cltd
aas
push
xchg
dec
inc
loope
iret
pop
jmp
jae
pushl
sbb
sbb
mov
ret
sub
xchg
jge
pop
pop
int
jle
and
mov
jns
aam
out
int
jge
inc
push
enter
lock
bound
ficoms
mov
pop
sub
ss
dec
xor
xchg
xor
or
dec
push
mov
xchg
out
jg
inc
and
sub
pextrw
imul
pop
or
mov
push
push
push
faddl
shl
fdivs
xchg
xor
jbe
pop
push
popa
sub
imul
or
and
repnz
mov
incl
push
je
xchg
daa
add
das
fs
xchg
cld
or
jge
mov
pop
pop
aad
or
aas
xchg
cli
movsb
jg
adc
and
pop
fs
jl
enter
mov
mov
out
lea
pop
sar
adc
dec
dec
outsl
mov
sub
aam
inc
scas
dec
rcl
push
pop
mov
cmpsl
add
out
inc
sbb
in
out
shl
loope
sbb
xchg
popf
or
cs
adc
clc
mov
mov
or
movsl
and
inc
jns
in
lret
jle
add
cmp
add
bound
lock
mov
and
pusha
mov
inc
into
sub
jmp
fsubrl
leave
fstpt
dec
and
loop
arpl
or
imul
xchg
adc
rolb
xor
cld
cltd
inc
in
push
adc
adc
adc
arpl
adc
lahf
dec
cs
movsb
cmpsl
addr16
inc
cmp
xor
cli
or
testl
fdivs
shlb
push
dec
and
adc
loope
or
adc
push
pop
mov
test
mov
mov
or
mov
jg
shlb
inc
jnp
inc
inc
aas
push
imul
ja
mov
or
mov
ljmp
popf
dec
gs
mov
pop
push
pop
insl
xchg
pop
sbb
sbb
push
and
mov
lret
das
inc
fistl
dec
xor
push
mov
push
xchg
hlt
stos
xorb
inc
ljmp
ss
outsl
mov
xlat
test
mov
fs
jmp
pop
mov
sbb
clc
std
leave
mov
inc
inc
lret
popa
inc
scas
mov
inc
roll
adc
cltd
xchg
inc
call
ljmp
xchg
and
mov
sbb
stos
das
dec
pop
mov
dec
push
or
out
adc
mov
ss
inc
test
fucomp
and
das
dec
cmp
cmc
add
flds
bound
jg
and
mov
mov
xchg
mov
adcl
mov
xor
mov
lods
jb
sub
stc
lods
pop
test
mov
and
orl
jle
jo
inc
pop
and
cmp
sbb
inc
out
subb
mov
in
ss
lods
call
sbb
jle
mov
test
into
adc
insl
sti
or
pop
or
lahf
push
mov
icebp
ret
sub
std
dec
aam
jnp
jge
loope
stos
bound
fwait
dec
adc
cmpsb
movsb
mov
loopne
sarb
int3
jl
dec
xor
xchg
sbb
and
jmp
xor
test
cmp
dec
ret
aas
test
out
dec
std
push
imul
lods
imul
xor
in
ljmp
repnz
int3
sbb
adc
adc
mov
sub
and
xor
xchg
sbb
mov
jae
ss
pop
add
jl
adc
inc
ret
ret
inc
dec
jp
pop
loopne
jne
mov
bswap
xchg
fdivs
mov
mulb
xor
jae
cmp
clc
lea
jns
pop
or
lea
xor
rcrl
mov
mov
mov
ja
ljmp
rcrl
outsb
test
mov
cwtl
in
mov
iret
movsl
and
lods
sbb
mov
jmp
out
lret
xchg
lock
psubd
and
and
mov
testb
and
mov
out
mov
sub
je
fwait
sub
aaa
fs
fsubrl
out
sub
jle
fadd
inc
mov
mov
pushl
aam
push
icebp
sub
xlat
sbb
test
jecxz
outsl
mov
dec
jne
push
sbb
cli
mov
idivl
sbb
in
mov
jns
ret
data16
int
fcmove
dec
sbb
sti
nop
xchg
icebp
mov
ss
lret
fistpl
repnz
cltd
rol
jnp
push
sbb
xchg
dec
mov
and
mov
pop
lahf
sub
jne
adc
das
and
das
in
sbb
mov
and
or
mov
addr16
push
pop
loope
in
jl
xor
arpl
adc
mov
sbb
insb
jmp
mov
movsb
mov
push
push
or
pusha
mov
add
push
pushf
popa
sarl
lret
pop
dec
xchg
scas
fmuls
out
inc
mov
add
or
andb
push
inc
dec
arpl
hlt
mov
and
inc
das
sub
stos
loopne
mov
jge
mov
icebp
les
push
cmp
cmp
into
rcll
add
mov
cmp
popf
stos
popf
mov
shl
shlb
fsubr
in
mov
adc
push
int
andb
and
or
xchg
mov
xchg
fs
into
ret
mov
sti
cmp
push
dec
cli
xor
jns
cwtl
arpl
pop
stc
pop
inc
pop
movsl
sbb
pop
push
dec
data16
mov
sub
std
sub
in
push
movsb
icebp
imul
in
insl
lret
push
nop
movsb
xor
mov
jnp
xchg
pushw
cmpsl
pop
sbbl
sbb
shlb
sar
test
in
iret
icebp
incb
push
mov
into
inc
jmp
mov
paddsb
sbb
add
scas
pop
mov
inc
shrb
sub
sub
cld
aaa
rcll
pop
pop
pop
mov
xchg
add
sub
mov
adc
xor
insl
das
jp,pn
mov
and
pop
push
icebp
add
pusha
inc
add
incb
xrelease
inc
lods
xchg
pop
jmp
mov
add
jns
cmp
sub
push
cltd
jae
sahf
cmp
mov
mov
aas
imul
lret
pop
nop
xchg
push
das
and
cmp
cwtl
sub
dec
inc
adc
data16
push
adc
fimuls
in
inc
mov
mov
push
and
sub
sbb
dec
mov
ror
not
adc
mov
jl
add
shr
cmpsb
divl
mov
popf
xor
mov
dec
movsl
mov
ret
ret
mov
mov
mov
cmp
aas
mov
inc
push
mov
pop
jl
mov
adc
push
mov
push
mov
rcr
ja
outsl
in
cmp
out
pop
cli
pop
dec
das
scas
shrb
xor
clc
or
add
pushl
add
insb
insb
jp
sbb
mov
ja
mov
inc
pop
je
mov
sub
inc
les
push
push
jecxz
rol
adcb
adc
nop
cmpsb
sbb
fisubrl
adc
push
movsb
lcall
jle
adc
sub
lea
sub
loopne
dec
xchg
mov
jne
push
jecxz
add
xchg
int
ret
movsb
mov
pop
imul
orb
sub
sti
push
mov
mov
mov
xor
dec
dec
or
push
lahf
fistps
outsb
push
cmpsb
mov
pop
aas
nop
xor
scas
mov
xchg
pusha
int
xchg
cwtl
cld
and
ret
mov
jnp
stos
clc
pop
add
mov
inc
and
push
or
pop
jle
popa
pop
xor
fildll
scas
mov
xchg
addb
cmp
lds
xchg
movsb
and
icebp
addr16
cmpl
xlat
leave
lcall
add
cmpsl
mov
ret
lcall
pop
sub
imul
add
dec
nop
xchg
pop
stos
mov
fisubrs
iret
cmp
xor
iret
sahf
lret
jns
or
mov
cmp
les
popa
cmpsb
mov
push
adc
inc
enter
je
ja
cmp
clc
in
mov
ljmp
test
sub
in
pop
cmpsl
mov
std
cs
movsl
ja,pt
ret
and
mov
xchg
imul
insb
std
inc
pop
popa
outsl
or
cmp
ja
xchg
roll
fs
outsb
loop
jmp
jg
jmp
aaa
out
gs
movsb
imul
adc
stc
cmp
adc
repz
into
adc
insb
dec
adc
repz
and
loop
jne
sahf
dec
xchg
pop
fwait
mov
imul
js
sarl
lea
mov
subb
hlt
xchg
rorb
stos
gs
inc
mov
sahf
mov
std
mov
fmul
lret
push
hlt
addr16
std
inc
inc
stos
pop
jp
cltd
mov
mov
inc
stos
das
mov
xchg
dec
push
jle
les
nop
cmp
fisttpl
std
fmul
xor
inc
or
xor
daa
dec
in
daa
xor
fsub
sub
dec
popf
push
jmp
fs
inc
cmp
test
out
iret
clc
cwtl
or
notl
mov
outsl
xchg
inc
enter
stos
pop
stos
popa
out
adc
stc
and
jbe
out
mov
cmc
mov
scas
int
add
cmpsl
dec
out
aad
int3
out
mov
jl
mov
dec
mov
push
loopne
fsub
mov
stos
adc
mov
sub
push
mov
daa
je
or
cmpsb
pushf
mov
jg
call
dec
pop
or
xchg
push
cmp
mov
dec
icebp
xor
outsl
movsb
jle
inc
mov
xchg
and
fistps
push
ljmp
jle
test
and
mov
inc
xchg
mov
pop
out
test
lods
int3
inc
lock
sbb
mov
cmp
and
sbb
popf
and
ret
sub
lock
dec
mov
mov
test
xor
rcl
cmp
adc
fldcw
xor
cli
push
mov
test
lahf
aaa
shll
repz
cli
pop
fisubrs
sti
nop
lds
cmp
ret
ljmp
jno
pop
out
call
inc
loop
call
inc
mov
dec
in
cld
shrb
add
pop
fs
movsl
out
pop
negb
inc
pushf
xchg
push
or
cli
out
faddp
inc
sti
sahf
scas
adc
shll
sub
adc
and
and
cwtl
and
mov
ret
fidivs
jge
dec
sti
es
mov
add
inc
xor
push
in
xchg
rcrl
mov
mov
jp
orb
jo
jg
dec
ds
pop
outsl
cmp
js
int3
shl
jle
insb
add
insl
testb
aam
ljmp
out
adc
fisubs
dec
fsubr
cld
adc
aaa
cmp
adc
xor
mov
cs
jbe
int
mov
jmp
push
cli
push
test
pushf
lods
jp
dec
sub
pop
clc
outsb
lret
mov
es
mov
lock
sbb
es
or
sbb
mov
dec
push
xchg
sub
outsl
push
into
push
sub
xorb
lret
icebp
fstps
jmp
mov
insl
les
pmaddwd
filds
inc
jp
push
or
cs
mov
adc
lods
ja
nop
test
inc
repnz
add
dec
mov
inc
sbb
rclb
insl
mov
sub
int3
dec
cs
sbb
add
mov
xor
add
aad
or
inc
imul
loopne
mov
aaa
xchg
push
cmp
movsb
lea
scas
stos
mov
inc
cmp
xorl
or
test
jl
nop
mov
bound
data16
sub
test
xchg
test
cwtl
jecxz
pop
sub
xor
repz
mov
xchg
mov
mov
out
rorl
cmp
xchg
sbb
mov
add
mov
sbb
or
jecxz
mov
sbb
pop
ret
dec
test
xor
jb
sbb
push
cltd
lock
out
lods
test
xor
insb
popf
loope
scas
sbb
fadds
lea
clc
into
adc
adc
xor
mov
ja
fldl
lcall
test
cmp
pusha
xchg
sbb
add
dec
pop
push
sub
push
scas
mov
jns
adc
hlt
cmp
stc
adc
popa
adc
les
mov
dec
push
enter
lea
lods
popa
pop
cmp
sub
loope
incl
jo
shl
jle
repz
ss
pop
push
lcall
pop
shrb
icebp
mov
add
xor
mov
lods
jne
mov
dec
aam
cmp
sbb
xlat
inc
repnz
clc
sub
insl
adc
das
sbb
dec
mov
mov
int
out
pusha
add
add
iret
xchg
imul
push
inc
sub
mov
or
adc
or
stc
pop
outsb
sub
dec
sbb
add
and
mov
mov
add
cwtd
mov
sbb
xchg
sbb
sub
add
out
sbb
mov
out
push
xchg
dec
mov
or
pop
xor
xchg
xor
icebp
ret
stos
and
push
push
xor
adc
lret
or
pop
jbe
mov
xor
push
ljmp
xchg
outsl
pusha
mov
mov
lahf
in
mov
sbb
sar
lcall
pushw
jg
dec
loop
out
lret
ret
ljmp
popf
mov
add
fcomip
out
dec
aaa
ficompl
cmp
mov
xchg
cmp
jns
jmp
popa
fmulp
sbb
pusha
mov
loope
sbb
ljmp
add
iret
push
loopne
sbb
dec
insb
adcl
jb
mov
sub
xchg
dec
or
imul
xorb
and
push
shrb
insl
mov
nop
jmp
dec
sbb
lret
cmpsl
in
lds
adc
scas
cmpsb
mov
mov
aad
sub
fnstenv
mov
sbb
mov
xor
icebp
pop
out
xor
fistpll
inc
pop
mov
shrb
ljmp
and
pop
and
jae
div
sub
xchg
xchg
in
mov
popf
or
adc
fwait
add
xor
mov
xor
imul
cwtl
and
and
lods
or
cmp
mov
lods
push
sub
jbe
rcrb
add
out
adc
cwtl
add
popa
mov
mov
mov
orl
jno
sub
test
sbb
movsb
imul
imul
fstpt
dec
int3
xchg
repnz
popf
jnp
cmp
mov
jmp
call
mov
lret
out
fisubs
inc
fsubrl
inc
fsubl
enter
ss
and
inc
sbb
pop
mov
js
or
das
mov
cmpsb
aas
adc
add
push
test
mov
dec
dec
jge
stos
jg
decb
fidivrl
ljmp
dec
pop
js
stc
add
push
rcrl
movups
out
dec
enter
lret
lds
push
pop
int3
jecxz
dec
in
push
dec
sbb
icebp
lcall
mov
xor
lret
dec
lret
arpl
inc
icebp
inc
nop
pop
ljmp
jg
inc
xor
lock
aad
sub
xchg
adc
hlt
xor
imul
ljmp
cmp
enter
sbb
pop
movsl
push
ret
pop
inc
adc
mov
sbb
insl
roll
rcrl
sub
pop
lret
jecxz
and
mov
push
pop
and
cmpsb
cmp
mov
aad
jnp
mov
stos
xchg
sbb
cmc
lcall
out
dec
bound
sbb
lock
sub
xchg
rcrb
push
push
repnz
mov
inc
lock
mov
cmpsb
arpl
ret
lret
aad
add
mov
mov
mov
inc
mov
scas
decb
dec
xchg
sbb
adc
movsb
push
movsb
daa
dec
sub
sub
and
xchg
add
aas
cmpsl
popa
or
xor
inc
aam
movsl
jo
cmp
aad
pcmpgtb
aam
and
dec
jp
hlt
outsl
pop
and
in
push
jmp
fs
xorb
sub
add
fsubs
xor
mov
subl
imull
mov
aaa
add
daa
xchg
ja
aad
xchg
xchg
or
in
xor
rcll
sahf
push
out
cmp
iret
andl
sbb
sbb
mov
fdiv
lock
lea
aas
das
jb
addr16
loopne
adc
cmpsl
cltd
cld
add
pushf
mov
icebp
cmp
dec
jo
repz
adc
nop
testb
jl
jmp
push
mov
int3
push
mov
mov
rorl
sub
cltd
dec
int
call
pop
repnz
adc
into
aad
test
ss
add
out
clc
std
push
or
jne
aad
and
and
bound
mov
gs
movsb
jbe
sbb
mov
jno
movsl
insb
fmull
add
xchg
repz
aam
lret
lock
bound
cmp
fsubp
lahf
fsubs
test
jb
sti
div
fnstsw
jb
fs
xlat
addr16
hlt
or
lds
cmp
rcl
xorb
push
popf
mov
das
test
bound
push
gs
sub
xor
xchg
dec
jnp
cmpsl
xor
xchg
mov
fstpl
xchg
xchg
pop
adc
sub
adc
lahf
jne
dec
into
addl
hlt
je
into
jnp
insb
xor
repnz
fs
push
mov
jmp
adc
int
dec
rolb
mov
cmp
insb
mov
mov
rolb
xor
mov
cmp
add
mov
xor
add
dec
inc
sub
dec
xor
mov
popf
cmp
lock
icebp
rorl
inc
cs
sbb
and
int
mov
gs
sbb
flds
pop
cmp
movsb
xor
mov
push
int
in
adc
stos
mov
test
sbb
mov
xchg
pop
mov
jmp
aaa
mov
jo
sub
xor
mov
mov
mov
dec
adc
push
push
mov
jecxz
fldcw
push
subb
or
fisubl
inc
fcomp
mov
fbld
mov
and
xor
stc
and
scas
fwait
stos
lods
cld
add
jo
ror
mov
jp
loop
mov
sbb
pop
or
enter
adc
add
jns
imul
dec
lods
dec
out
iret
stc
inc
mov
stos
inc
xchg
aam
in
cmp
pop
adc
fcoms
andb
pop
mov
sub
test
pop
leave
xchg
addr16
leave
fidivrl
cwtl
or
pushf
xchg
sbb
popf
fcomp
or
mov
fbld
sarl
mov
inc
mov
aaa
adc
pop
icebp
scas
push
mov
and
mov
xor
shrb
popa
and
push
jo
push
fildll
cmp
dec
add
pusha
mov
daa
add
push
cmp
mul
fnstsw
cltd
pop
mov
cmp
nop
in
lock
lds
pop
out
scas
cli
sub
cmc
testb
std
dec
lahf
pop
in
push
les
fcmovnbe
push
pop
or
push
scas
add
in
cld
rolb
mov
sub
or
jp
push
mov
in
ja
popa
loope
ret
xchg
cli
loope
ljmp
dec
rcr
mov
repz
inc
in
mov
int3
push
inc
rcrl
gs
add
lds
out
outsb
pop
pop
cmp
adc
xchg
lods
jb
ret
shlb
in
add
cmp
loop
sub
add
push
and
enter
movsb
in
xor
cltd
lods
lcall
fstps
inc
scas
mov
mov
mov
or
jo
mov
scas
dec
push
mov
lock
xor
or
pop
icebp
mov
scas
lods
xor
xor
push
pop
das
sbb
popf
enter
cs
xlat
iret
popa
mov
int
inc
pop
cmpsb
imul
push
inc
sti
add
adc
arpl
push
jo
add
outsl
pop
mov
mov
jle
sub
pop
push
sbb
repnz
push
mov
mov
repnz
lcall
or
cmc
cmpsb
cmpb
out
push
or
scas
inc
ss
inc
cmpsb
stos
mov
and
pop
int3
movsb
mov
je
fisttpl
sahf
popf
fs
ds
pop
rorb
int3
das
fbld
jns
shl
inc
mov
cs
inc
out
pop
pop
and
and
jecxz
jge
jns
pop
shll
in
mov
lock
shr
jne
jecxz
out
or
cmp
and
push
xchg
shlb
int
adcb
dec
rclb
aam
mov
jmp
repnz
mov
jle
add
dec
xor
or
mov
rorl
rcrl
inc
push
insl
jo
es
add
inc
sub
xchg
mov
aas
js
or
dec
inc
and
test
adc
xchg
fwait
inc
add
cmc
sti
movsl
cmp
mov
stos
jae
pop
fcmovnu
mov
push
into
sbb
xor
mov
push
and
or
sbb
inc
scas
push
test
jo
test
adcl
push
dec
add
mov
push
pop
cmp
popf
cmp
push
movsb
mov
push
enter
arpl
pop
les
std
jo
or
ret
dec
hlt
xor
jle
adc
and
dec
std
cmp
cmp
bound
jle
sahf
lcall
insl
icebp
xor
lods
fildl
and
dec
push
sbb
ljmp
scas
andl
add
or
inc
and
fildll
adc
mov
dec
hlt
sub
dec
stos
dec
lcall
cmpsb
adc
js
inc
fsubp
popa
push
xchg
movsb
popf
cmpsb
ljmp
mov
mov
dec
loopne
out
and
fistl
sub
sub
dec
in
lahf
mov
xor
aas
mov
jg
ljmp
test
mov
pop
pop
pusha
add
xorb
push
jp
mov
adc
shr
mov
and
in
xchg
jb
jl
xchg
or
add
and
mov
jmp
pop
iret
adc
mov
push
test
mov
rcrl
push
xchg
negl
popa
mov
rcrl
ret
xor
mov
aam
iret
cmp
jb
cwtl
mov
daa
mov
jl
xchg
pop
xor
push
cwtl
jo
in
test
or
lahf
adc
or
lahf
lods
jg
arpl
pop
inc
and
nop
xchg
jmp
pop
test
das
mov
pop
ja
jne
or
push
jle
fwait
roll
popa
cmpsb
and
scas
mov
dec
lret
adc
out
and
lds
cmp
and
pusha
inc
mov
push
mov
lret
sbb
fldcw
int
jp
sarb
push
enter
lds
inc
addr16
sbb
in
sbb
sub
or
pop
out
cmp
lea
push
movsb
mov
add
jg
addr16
xlat
aam
mov
fstpl
clc
add
add
jecxz
and
pop
sub
inc
inc
cmpsb
dec
imul
add
lds
int3
inc
movsl
adc
cld
push
jg
outsb
lret
adc
leave
call
mov
sub
lea
imul
cmp
rcrb
cli
ret
into
or
ret
idiv
jno
gs
xor
sbb
mov
je
xor
or
jno
mov
loopne
imul
xorl
adc
inc
cmp
fmull
mov
mov
frstor
mov
mov
mov
sti
add
mov
mov
imul
sub
fs
or
cmp
pop
mov
xorl
sahf
dec
stc
in
cmp
pop
negl
jb
add
add
mov
or
rcr
dec
subl
mov
in
xor
and
or
lret
scas
dec
and
rorb
std
enter
popf
push
add
bnd
and
jl
insb
lret
lahf
xor
dec
inc
dec
adc
scas
call
rcr
cmc
lret
cmpsb
mov
stc
out
dec
jae
into
call
std
adc
scas
mov
cmpb
jmp
in
aas
or
and
sbb
stos
test
ss
je
mov
fbstp
xchg
fidivrs
sub
jp
mov
ret
fmull
cmp
pop
xchg
ja
cmc
push
cmp
fnsave
add
ret
mov
dec
clc
mov
out
xchg
inc
and
mov
fistps
xchg
or
mov
imul
add
mov
pop
mov
dec
addr16
pop
xor
in
addl
pop
xchg
sbb
in
lcall
cwtl
cmpsb
push
push
ds
add
dec
shll
cmp
dec
mov
jb
sbb
aam
clc
xlat
rcrl
or
pop
push
vcvttps2uqq
repnz
out
cmpsw
popa
xchg
mov
jb
add
inc
repz
cmp
pop
scas
lcall
mov
call
pop
ljmp
jnp
jb
lea
sub
jle
rorl
aad
xchg
std
cmpsb
in
add
ret
sub
pop
popa
iret
pop
adc
cltd
loope
cld
pop
adc
inc
ja
fs
mov
add
loop
insb
cmp
cmp
repnz
js
mov
jg
mov
mov
bound
inc
gs
lods
push
insb
fwait
jbe
roll
in
inc
je
mov
dec
out
int3
sub
inc
insb
push
dec
daa
inc
jle
insl
arpl
or
ret
push
adc
pushf
mov
icebp
fsts
jno
cmp
hlt
scas
je
je
fdecstp
dec
mov
ja
pop
mov
fistpll
stos
add
int3
ja
fistpll
mov
addr16
sub
je
test
repnz
mov
sub
sbb
push
jecxz
dec
orb
sarb
sti
mov
roll
jbe
xor
push
dec
mov
ljmp
xor
dec
out
je
and
or
cmp
int3
mov
sbb
aas
cmpsl
daa
xchg
mov
pushf
xchg
jp
dec
jmp
mov
pop
popf
and
xchg
popa
and
or
loopne
pop
repnz
push
rcrl
pop
fbstp
sbb
cmpsl
rolb
push
cmpsb
push
mov
pop
pop
mov
cmp
xchg
pop
lret
iret
add
adc
mov
in
sub
addr16
fmull
mov
mov
jmp
jmp
ds
adc
popf
shlb
insb
adc
repnz
or
push
mov
movsl
pop
mov
sti
mov
outsb
jno
mov
mov
sahf
rcrl
push
mov
push
cmp
ljmp
bound
test
mov
add
imul
sarl
lods
in
mov
out
shrl
inc
pop
pop
adc
fistl
int
xlat
icebp
out
cli
sbb
mov
subb
mov
movsb
xor
ret
dec
inc
and
mov
mov
fiaddl
add
out
loop
push
int
nop
pushf
stos
insb
aas
int3
add
data16
xlat
jmp
hlt
xor
adc
jecxz
sbb
push
mov
daa
lods
aas
and
int3
mov
imul
je
dec
push
mov
pop
pop
in
pop
jno
loopne
pop
std
aad
dec
fimull
insl
cmc
or
lcall
push
inc
or
mov
mov
mov
daa
lret
xchg
pushf
adc
dec
sub
push
or
xor
sub
loopne
test
icebp
mov
jo
push
in
push
fcomps
pushf
mov
mov
or
scas
loop
mov
lret
inc
lahf
inc
mov
cwtl
push
sarl
jno
testb
out
xchg
insb
inc
jne
test
addr16
jecxz
and
jno
cmc
repnz
mov
pop
jle
iret
or
aas
test
aaa
out
out
add
outsb
icebp
cmp
into
sub
xchg
dec
into
xchg
mov
inc
cmpsl
outsb
pop
or
int
mov
or
ds
loope
ds
repz
mov
pushl
jle
xchg
ja
or
inc
xchg
lods
cltd
lahf
ljmp
sub
daa
mov
mov
fists
lods
jp
or
add
lcall
mov
ss
lock
jecxz
jmp
mov
lds
push
imul
mov
xor
jge
jno
insb
lods
xor
lods
mov
pushf
push
fwait
lds
inc
sbb
adc
jbe
mov
bound
cmp
sbb
pop
out
stc
shrb
xchg
movsb
pushf
jo
push
notl
aaa
outsb
jle
sub
lods
mov
insb
push
shlb
bound
cmc
cmpsl
xchg
pushf
pop
stos
pusha
lds
aas
pushf
push
and
mov
test
movsb
adc
xchg
vhsubps
fsubs
xchg
stc
jg
xchg
mov
mov
mov
imul
leave
rcrl
inc
mov
pop
jns
mov
mov
cmp
test
sub
pusha
gs
xor
xlat
mov
xchg
mov
clc
pop
mov
fcompl
sbb
sti
lods
add
sti
push
mov
in
jo
aas
lods
mov
pop
out
sub
in
movsb
dec
adc
or
repz
fcompl
jns
add
mov
scas
sti
jne
adc
xor
repnz
and
mov
xor
and
push
dec
sub
mov
fimuls
movsb
out
pop
enter
lcall
mov
xchg
or
sub
add
cmp
mov
jbe
or
subl
cwtl
movsb
mov
xor
addr16
pop
iret
loopne
lret
xrstor
add
xchg
clc
fidivs
jmp
jecxz
lods
lret
push
imul
out
popf
dec
pop
jecxz
outsl
pop
jl
mov
push
into
or
decl
sub
xor
cmc
mov
mov
popf
mov
fsubrs
fwait
test
inc
lods
roll
test
pusha
fidivs
aam
lcall
dec
adc
cmp
sbb
and
icebp
testb
rcrb
or
mov
and
push
rcrl
or
in
jge
stc
and
mov
std
rcr
mov
jecxz
sbb
cltd
div
add
dec
pop
dec
pusha
cmp
sbb
in
push
loope
adcl
cmp
shrl
lods
mov
lcall
loope
arpl
xchg
out
repnz
arpl
stos
arpl
sub
std
xchg
mov
mov
pop
pop
loope
xchg
das
jb
push
xor
call
pusha
movsb
adc
cs
enter
out
jmp
int3
push
jnp
shlb
icebp
mov
out
jbe
mov
sbb
dec
nop
lret
cmp
pop
lret
outsl
push
add
lcall
mov
cld
pusha
adc
rorl
cmp
out
dec
add
and
xlat
aad
xchg
sbb
xchg
inc
movsl
ret
aaa
jbe
pushf
shll
xor
testb
and
cld
mov
pop
pop
ficoml
or
mov
hlt
call
scas
xchg
aad
mov
mov
sbb
sbb
test
sbb
and
bound
mov
popf
aaa
call
mov
cmp
incb
sbb
scas
push
adc
into
mov
mov
jb
xor
lock
mov
pop
mov
sbbb
xor
lret
mov
jns
add
and
push
pop
push
xchg
add
addr16
xchg
mov
imul
add
rol
xor
in
xor
test
nop
out
cmp
push
and
jecxz
sbb
repz
lods
add
sub
in
das
cmp
mov
imul
pushf
das
push
mov
js
sbb
std
jp
jbe
jl
or
sub
cwtl
mov
cmc
pop
nop
push
and
jns
mov
in
sbb
adc
stc
pop
rolb
roll
aas
xchg
lahf
fsubs
test
adc
add
dec
or
ss
jg
inc
aam
cwtl
loop
mov
xchg
lods
mov
sub
mov
add
pusha
rorb
add
jp
cmp
cmp
loopne
inc
jb
mov
sti
repnz
in
xchg
add
or
ficomps
lret
mov
sub
xchg
push
jnp
xor
xor
xor
pop
idivb
lcall
bound
sbb
mov
repnz
jns
cmp
or
movsb
sarl
sahf
pop
pushf
aas
push
out
jmp
xchg
or
sbbl
jle
das
xor
movsl
ret
sarb
jae
pop
jns
mov
rcrl
xchg
mov
inc
jnp
ret
xchg
outsl
xchg
stc
pop
divb
out
call
cwtl
cmp
and
sbb
pop
and
cmpsb
sbb
rcll
mov
imul
push
pop
enter
mov
add
sbb
mov
or
loopne
aam
gs
add
mov
mov
fsubp
pop
inc
adc
inc
adcb
in
sub
xor
jo
mov
pop
lahf
xchg
inc
jae
jb
test
xor
nop
mov
scas
insb
popa
nop
lock
xchg
push
lret
cld
push
mov
fs
add
std
clc
fistpl
fisubl
jae
jns
imul
fadds
std
dec
or
fs
inc
out
sub
test
push
push
ds
or
cmp
call
sub
pusha
imul
fs
sub
xorb
push
mov
fistps
adc
aam
stos
enter
xchg
int3
aaa
pop
adc
sbb
xor
add
mov
test
and
lods
push
push
in
jg
mov
pusha
insb
pop
scas
ja
xor
ljmp
push
push
stos
inc
insl
pop
jp
hlt
imul
sbb
nop
and
test
iret
mov
mov
cmp
hlt
mov
popa
push
rolb
jmp
std
lcall
mov
jg
je
out
cld
sahf
jp
fsubrs
test
bsf
push
xchg
push
in
adc
and
out
pop
mov
jns
jno
mov
jnp
das
cs
or
and
inc
pop
sbb
pop
outsl
in
mov
lahf
jp
sahf
ja
insb
in
lods
popa
push
mov
xchg
loope
jmp
cmp
mov
push
or
loope
adc
push
pop
loopne
enter
ja
mov
sub
int3
mov
pop
xchg
push
jp
fld
xchg
testl
inc
and
ja
cmp
cltd
in
stc
mov
imul
xchg
or
jns
inc
pop
and
lods
cmp
mov
mov
cltd
in
aam
clc
or
dec
pop
out
ret
das
jecxz
dec
jo
lds
loopne
mov
inc
xchg
dec
je
mov
lock
mov
out
add
ljmp
vpsrlq
cmpsl
lods
jp
and
mov
cmp
repnz
lret
xor
and
sbb
mov
pop
rcl
aaa
cmp
sbb
mov
adc
adc
outsl
enter
mov
ljmp
sbb
or
add
mov
cli
xchg
test
filds
jge
addr16
leave
push
lods
aas
imul
imul
es
or
add
push
fmuls
mov
stos
sub
in
adc
mov
jge
idivl
sub
outsb
inc
clc
nop
xchg
cmp
mov
lcall
mov
test
in
push
movsb
lahf
inc
lods
pop
popa
movsb
mov
and
and
jle
or
jge
xchg
es
jo
xchg
pop
dec
loop
mov
js
popa
cltd
shlb
sub
push
les
lcall
mov
xor
pop
jnp
aad
in
mov
mov
ret
loopne
loop
jno
gs
hlt
fnstcw
jp
cmp
adc
mov
lds
out
popa
rclb
adc
sub
das
scas
jg
and
cltd
inc
mov
inc
mov
test
test
cmp
imul
pop
mov
mov
gs
inc
or
inc
popf
cmpsb
push
es
push
dec
outsb
das
je
xchg
in
cltd
arpl
mov
orb
sarl
cwtl
outsb
adc
adc
push
xor
jmp
sbb
jmp
mov
sub
cs
lods
cli
jp
cs
mov
jb
in
jae
aas
gs
into
pop
pop
and
xor
icebp
in
adc
push
pushf
test
xor
iret
sbb
movb
xor
enter
notb
mov
and
xchg
mov
mov
xchg
mov
mov
xor
je
cmpsl
iret
jb
xor
je
push
loopne
mov
dec
lret
aad
cs
push
adc
jnp
mov
jb
add
int3
inc
mov
fidivl
or
loope
in
add
fadd
cmp
inc
test
loopne
loope
rcrb
add
das
repnz
xor
out
push
mov
movsl
jo
mov
daa
mov
mov
mov
jno
out
cld
test
mov
jnp
cmp
in
mov
shr
cli
jp
fwait
adc
push
xor
fwait
roll
xchg
sbb
std
mov
iret
xlat
adc
push
xchg
repz
adcl
xor
mov
xchg
xor
les
dec
out
mov
nop
inc
cmp
and
dec
inc
xor
pop
xor
adc
push
cmp
push
adc
popf
dec
rcl
daa
xor
or
mov
inc
fistps
fstpt
cmp
clc
cmp
insl
pop
adc
lock
mov
int3
movsb
inc
pop
pop
push
aas
outsl
inc
mov
stos
jno
add
lds
cmp
scas
and
xchg
pop
in
mov
sub
xor
repnz
and
int3
movb
push
mov
push
sbb
lods
sar
rcr
cmp
xor
sti
mov
aam
push
pop
or
ljmp
in
pop
push
jl
add
iret
out
jle
sub
xchg
mov
daa
sub
pop
jge
cmpsl
dec
mov
cli
sbb
inc
ds
mov
inc
add
out
in
pop
or
mov
add
push
xor
outsl
mov
loopne
dec
adc
sbb
jle
xor
jno
add
cwtl
xchg
dec
aas
mov
sub
imulb
jp
push
inc
push
jae
in
inc
mov
mov
xchg
mov
lods
pushf
mov
cmp
adc
and
xchg
push
sahf
roll
insb
fiadds
pop
mov
roll
push
out
lret
push
lods
dec
into
arpl
lods
adc
ficomps
adc
movsb
cmp
in
push
mov
pop
sbb
mov
mov
add
jnp
sub
mov
or
out
sbb
add
rol
jne
pop
dec
loopne
and
mov
mov
into
mov
jae
mov
ds
fiadds
iret
xchg
mov
push
adc
rcll
mov
push
pop
mov
arpl
incl
pushf
mov
jno
cmp
sub
xlat
cltd
pop
je
xchg
push
add
inc
push
imul
and
stos
adc
loopne
repnz
or
pusha
jp
add
test
pop
dec
test
aaa
sbb
adc
xor
and
and
sahf
adc
repz
loope
inc
xchg
adc
mov
lret
inc
mov
out
dec
and
mov
es
in
add
adc
dec
push
fsub
push
stos
push
ds
cwtl
lahf
insb
push
cmpsb
xchg
sahf
pop
pop
push
test
cwtl
fcmovbe
sbb
shll
sub
dec
mov
stc
jns
push
aad
add
mov
add
cmp
push
fcmovnb
adc
sti
push
xchg
jae
dec
movsl
testl
xlat
fisttpll
sbb
jge
sbb
mov
add
mov
leave
sarb
negl
out
and
push
inc
jge
lret
and
sahf
aas
inc
sub
mov
iret
movsb
in
add
mov
jb
popf
aaa
call
scas
cmp
cwtl
push
pop
jo
dec
mov
fbstp
out
popa
dec
mov
out
cmpsl
mul
clc
xor
inc
pop
cmpb
lds
sub
xor
sahf
ja
adc
pop
push
ds
aam
ss
jl
cs
scas
ret
or
mov
lcall
push
xchg
test
push
xchg
mov
stc
push
je
out
dec
push
mov
or
inc
int3
gs
addb
pop
and
jle
es
cltd
xchg
push
enter
int
adc
ljmp
xor
mov
dec
push
int3
mov
xor
cmpsb
xchg
inc
clc
adc
and
je
and
jno
xor
inc
xor
daa
out
les
dec
addb
sub
and
cmp
mov
jle
sbb
fchs
aaa
enter
dec
sbb
fwait
mov
add
insb
mov
mov
mov
dec
daa
roll
inc
sbbl
xchg
xor
sub
in
mov
pop
pop
dec
or
cmpsb
imul
test
inc
mov
hlt
jle
clc
mov
cmp
mov
mov
jmp
insl
or
add
aaa
jb
inc
xchg
loopne
jo
aad
daa
stos
idivl
inc
daa
sub
xchg
imul
nop
push
mov
imul
sub
std
icebp
dec
lock
lret
call
test
aad
push
adc
mov
mov
mul
movsb
jg
mov
xchg
dec
out
out
sub
notb
mov
sbbl
loopne
jecxz
inc
mov
and
not
stos
cmp
or
enter
call
sbb
icebp
insl
sub
sub
test
pop
push
cmp
adc
inc
subb
xor
stc
sub
fwait
out
out
cmp
loop
repnz
adc
das
mov
scas
dec
out
xchg
movsl
fisttpl
cwtl
add
mov
or
rcl
and
outsl
jns
je
clc
ret
jl
xchg
lcall
imul
dec
cmp
add
xor
lock
mov
pop
mov
outsl
ljmp
lcall
lcall
or
ja
xor
adc
int3
xor
mov
fs
xor
out
fnstenv
inc
fdivs
adcl
push
adc
mov
cmp
jns
fcom
scas
xchg
push
ds
hlt
sbb
leave
stos
insb
out
fs
inc
jg
das
jmp
arpl
or
cmpsb
in
in
loop
clc
inc
xorl
js
mov
and
inc
cwtl
icebp
test
mov
jae
stos
iret
push
inc
xchg
nopl
dec
rorl
lock
mov
ret
scas
adc
mov
xor
aas
loopne
fs
lahf
lods
fwait
pop
mov
cmp
dec
iret
std
test
out
adc
dec
cmc
mov
dec
repnz
push
inc
jmp
loop
push
and
cmp
add
cmpsw
mov
pop
lods
adc
loope
jnp
cmp
jle
fisubrl
push
sub
lret
pop
std
push
pop
cmp
push
or
mulb
mov
xchg
sub
icebp
jle
adc
fadds
sbb
pop
mov
pop
mov
lcall
jmp
or
adc
loope
lahf
lock
pop
shll
std
aad
and
sbb
fdivrl
jbe
shlb
jl
jl
pop
jmp
aas
out
cmp
gs
mov
into
jne
roll
pop
lret
dec
cmp
xor
jge
out
push
add
xchg
outsb
lret
negl
mov
dec
dec
or
dec
rclb
sbb
push
and
cmp
test
sbb
jg
mov
sarl
lock
cmpsl
test
out
fdivl
out
aad
in
cmpsb
xor
movsl
jno
popl
mov
call
adc
gs
fisubl
pop
movsb
jl
aas
mov
sti
push
jnp
dec
loope
cmp
lock
pop
sbb
fmulp
dec
pop
jl
lods
jge
fadds
and
cld
roll
daa
xchg
mov
lret
jae
xor
pop
mov
or
repnz
sub
mov
stc
repz
pop
ss
fdivs
in
inc
xor
sarb
call
mov
mov
jecxz
xor
xor
lods
push
xor
dec
insl
or
xor
adc
xor
daa
sbb
pop
les
enter
jp
sbb
add
push
mov
test
clc
pop
jmp
or
cli
xchg
mov
int
mov
lret
das
lock
pop
and
repz
pop
nop
addr16
xchg
mov
fcomps
push
xor
sub
rcr
pushf
aam
sub
adc
movsb
popa
ret
or
sbb
call
sti
cmpsl
jp
outsb
pusha
repnz
and
adc
dec
imul
add
inc
rclb
jns
pop
inc
lret
jo
cmpsl
loop
ret
adc
adc
ss
movsl
rorl
rcrb
or
and
repnz
jp
inc
lods
jbe
mov
add
das
pusha
dec
xor
lods
mov
sub
loopne
jae
leave
add
scas
push
and
or
dec
push
scas
sahf
sbb
xchg
mov
inc
sub
lods
xchg
and
or
cmp
shrl
jno
cmp
ljmp
hlt
jbe
push
int3
xchg
dec
mov
push
aam
adc
mov
push
and
sbb
jmp
dec
sarb
jl
cltd
and
roll
and
push
out
pop
sahf
jo
jno
iret
repnz
push
cld
out
xor
pop
mov
notb
sti
iret
icebp
fisubrl
add
jo
add
lods
cwtl
add
arpl
fwait
ret
insl
cwtl
dec
cmp
inc
mov
rcrb
scas
dec
test
stos
clc
adc
mov
or
jns
mov
inc
ds
jbe
mull
repz
popa
xchg
jecxz
call
sbb
cmp
inc
into
arpl
cwtl
sbb
sar
data16
outsb
mov
sar
mov
fnsave
aas
flds
data16
xor
adc
arpl
int
call
out
cmp
jbe
fisubrs
stos
or
xlat
or
sti
mov
enter
push
test
insb
push
cmp
adc
ficomps
in
gs
xor
in
je
dec
std
and
adc
push
cwtl
arpl
cmp
push
jbe
shr
mov
fidivl
and
orl
sahf
popa
gs
add
inc
sbb
addr16
lock
icebp
sbb
xchg
push
push
icebp
xchg
push
jecxz
daa
dec
out
stos
mov
sbb
push
mov
arpl
out
mov
leave
imul
dec
mov
out
xchg
push
rolb
daa
mov
cmp
sub
dec
inc
adc
lcall
arpl
rcl
aam
insl
mov
nop
jne
sub
das
mov
movsb
dec
push
dec
xor
jecxz
scas
cli
jg
inc
sbb
hlt
gs
sub
stc
stc
ja
movsl
repz
mov
pop
jnp
xchg
rolb
mov
jns
dec
inc
sbb
mov
push
pop
jns
int
scas
repnz
xchg
adc
mov
jne
sbb
fwait
jno
mov
cmc
scas
aad
lds
cmp
repz
jno
mov
sub
push
fisubrl
mov
icebp
sub
and
sbb
shr
pop
cmc
mov
cld
stc
movsl
sbb
ds
enter
aad
pop
in
add
inc
roll
loope
push
insl
mov
in
shl
popf
mov
in
pusha
mov
mov
xor
ljmp
mov
xor
dec
loopne
pushf
lret
or
fcom
bound
cmp
cmp
add
dec
cmp
pop
pop
pop
sub
test
adc
sahf
lahf
mov
hlt
shrb
push
adc
push
or
adc
jo
les
xor
loope
xchg
mov
addr16
dec
add
lds
inc
pop
jae
pop
sbb
out
insl
das
fstpt
mov
in
inc
testb
ss
mov
pop
xchg
sti
mov
jl
cmpsl
pushf
dec
outsb
dec
testb
xor
mull
pushf
push
dec
cmpsl
jp
push
lods
test
cld
leave
mov
cwtl
and
cltd
arpl
xchg
sbb
jmp
sbb
mov
add
lcall
ret
pusha
and
push
lds
and
dec
xor
call
mov
xor
cld
dec
das
sub
movb
inc
xchg
movsb
daa
cmpsl
rcrl
int3
nop
inc
js
lock
mov
xchg
xchg
xchg
jnp
dec
mov
push
add
decl
imul
inc
int3
inc
jmp
inc
push
test
sub
add
nop
out
stc
mov
arpl
mov
pop
inc
std
add
rcll
mov
lds
fimull
outsl
in
and
push
mov
mov
xor
out
mov
dec
fdivs
fildl
aam
repz
arpl
lret
aad
pushf
mov
inc
lret
or
repz
movsl
mov
popa
mov
xor
adc
nop
inc
insb
mov
xchg
or
loope
xchg
cmp
xor
add
jo
adcb
pop
and
sbb
jle
dec
push
ret
fs
fstl
lcall
inc
xchg
fldenv
stos
lcall
and
adc
ftst
pushf
mov
sub
iret
mov
sbb
decl
mov
cwtl
jecxz
mov
shll
aam
mov
sub
sub
pop
adc
dec
mov
fnstenv
sub
dec
xor
or
sbbb
xchg
xor
inc
sarb
icebp
pushf
sbb
call
pop
mov
popa
sbb
cmc
int
pop
in
mov
lock
leave
insb
mov
sbb
and
clc
mov
pop
jno
out
rclb
push
xor
inc
or
inc
out
dec
sbb
test
xchg
push
rclb
sub
and
std
rcrb
int3
sub
cli
pop
mov
pop
push
pop
aam
lcall
std
frstor
nop
dec
out
inc
inc
sbb
mov
fdivl
in
adc
enter
adc
addr16
fnstcw
xchg
out
gs
sub
clc
or
push
inc
inc
xor
cmc
into
daa
movsb
mov
sbb
or
mov
shl
jmp
repnz
xchg
gs
jmp
sbb
std
mov
inc
pop
bound
dec
dec
push
push
imul
xlat
loop
xor
jp
add
push
inc
xchg
pop
loopne
stc
lods
fsubrs
loopne
fcmove
ficoms
ljmp
cmp
xor
scas
cltd
jg
add
mov
outsb
addps
test
aam
mov
test
push
shrb
jecxz
jecxz
in
icebp
xchg
pop
sbb
test
sub
inc
push
lds
and
jle
nop
inc
ljmp
imul
insl
sbb
aam
test
xchg
js
mov
inc
mov
inc
jb
loope
inc
or
mov
dec
pop
out
pop
hlt
dec
inc
aas
cmp
inc
imul
rorb
lret
in
and
outsb
mov
imul
daa
out
pushf
addr16
push
push
xchg
aam
pop
push
push
loopne
sub
div
inc
ss
sti
arpl
jmp
xor
adc
popa
in
push
xlat
inc
popl
dec
notl
arpl
aad
mov
addr16
adc
jo
jle
mov
sbb
push
ja
inc
and
cwtl
mov
sti
into
push
mov
mov
cs
rclb
arpl
pop
leave
jge
jne
loop
test
push
popf
fisttpll
stc
sbb
mov
loope
dec
out
mov
enter
adc
dec
mov
and
gs
push
and
fmull
sbb
stos
testb
sbb
lret
and
mov
shll
add
fucomi
out
jmp
jb
sbb
les
add
lods
mov
fbld
mov
sbb
test
scas
ffreep
mov
cmc
push
int3
je
sbb
xor
pushf
div
pop
lea
insl
rcl
fcoml
fcoml
inc
testb
mov
dec
dec
mov
dec
idiv
pop
ljmp
sub
aaa
mov
sub
std
dec
stos
jp
gs
add
jns
popa
adc
mov
mov
cmpsb
mov
sub
hlt
adc
xchg
xchg
and
or
loopne
mov
sti
nop
pop
ror
insl
das
and
mov
sbb
sahf
pop
mov
test
push
lret
nop
sbb
in
push
ja
push
rcll
dec
bound
inc
add
enter
or
loopne
loop
incb
mov
dec
rcrb
pop
ret
push
scas
mov
add
sarb
mov
dec
dec
inc
cmp
sbb
sub
mov
xor
test
out
jmp
pop
inc
xchg
pushf
sbbl
repnz
ljmp
stc
sbb
adc
sbb
rorb
or
adc
lods
call
popf
pop
add
cmp
add
or
das
test
andl
pop
dec
lods
pop
mov
ljmp
dec
cmp
sahf
scas
lcall
std
arpl
in
and
daa
cli
js
mov
inc
xchg
addr16
add
dec
xor
dec
fsubr
shrl
pop
adc
push
xor
mov
add
pop
pop
faddl
and
aam
pop
andl
mov
pop
fidivs
sbb
and
push
loop
test
decb
jno
mov
dec
inc
nop
or
or
pop
pushf
cmpsl
mov
int3
jmp
dec
adc
mov
sub
test
lods
inc
pop
data16
pushf
jecxz
fcompl
shl
movsl
push
pop
iret
xorl
jmp
das
sub
xchg
push
dec
add
loop
cmp
add
inc
out
fadds
adc
jae
fwait
fwait
mov
adc
jns
shl
stos
rcrb
jbe
mov
jg
or
scas
or
aad
jecxz
repz
fwait
sbb
or
sar
test
push
shrl
divl
add
cmpsl
mov
pop
insb
cmp
inc
lahf
cmp
sbb
dec
nop
imul
dec
in
push
inc
sub
jecxz
imul
mov
jae
pushf
pop
adc
inc
cwtl
iret
imul
fnstsw
lret
mov
rcll
cmp
xchg
dec
insl
test
sub
push
pop
outsl
sbb
adc
test
mov
dec
xchg
in
jp
loop
mov
cmc
mov
pop
push
cmp
pop
outsb
test
cmp
enter
and
cmpsl
aad
orb
pop
and
xchg
mov
jle
ret
jmp
es
sti
adc
popf
fstpl
mov
scas
out
add
int3
cmpsl
test
cmpsb
cs
push
jbe
xorl
sbb
out
lods
push
scas
fs
xchg
sub
mov
inc
mov
push
fiadds
jecxz
or
sti
dec
lds
lret
aam
push
push
inc
xchg
data16
jb
mov
ss
in
add
jmp
dec
movsb
aad
aad
test
jbe
leave
sbb
xchg
and
xchg
inc
subl
outsl
sub
xchg
jnp
into
insl
sbb
es
in
clc
popa
add
push
or
cs
or
dec
cmpsb
jl
in
inc
push
adc
and
lahf
adc
and
jne
inc
imul
fstp
add
icebp
sub
mov
lcall
rclb
push
fs
call
mov
mov
dec
xor
or
xor
enter
xor
imul
xchg
mov
daa
test
popa
fstl
in
fildll
jae
xor
pop
dec
pop
xlat
xlat
iret
cmp
outsl
mov
icebp
push
adc
dec
ja
mov
pop
mov
lahf
inc
imul
outsl
push
sbb
aas
add
pop
mov
lods
sub
mov
push
dec
js
orb
push
sahf
pop
add
in
scas
lods
daa
test
cmp
push
js
cmp
jmp
ret
jge
or
push
fisttpll
or
cmp
fildl
gs
mov
xchg
lods
dec
pop
mov
inc
mov
fwait
or
dec
in
iret
inc
repz
jecxz
push
mov
cs
inc
add
fld
clc
stc
loopne
push
fdivl
cmc
mov
pop
jl
popf
fs
xchg
lcall
push
daa
int3
scas
lret
push
ficompl
adc
std
push
jb
mov
mov
or
inc
cmp
je
scas
setno
sbb
out
adc
ljmp
or
in
push
movsl
sahf
imul
dec
push
add
dec
repnz
sbb
stc
xor
les
stos
jns
mov
cmp
cmp
subl
ret
int3
mov
push
icebp
jbe
lahf
dec
sub
cmc
std
shll
sub
or
aad
dec
and
mov
fcomip
pusha
movsb
int3
pop
gs
fs
cmc
jecxz
push
cmp
lds
push
iret
dec
mov
adc
add
jmp
mov
add
add
inc
and
mov
es
inc
outsb
aaa
icebp
in
push
clc
or
cmpb
test
nop
ja
and
pop
out
push
mov
das
lock
inc
jns
mov
daa
and
cmp
call
outsb
jl
push
mov
popf
pop
aam
mov
inc
leave
lock
ror
sbb
scas
clc
mov
daa
jg
mov
gs
mov
dec
jecxz
pop
js
sbb
aas
sbb
mov
cmc
push
ja
cld
adc
and
ret
xor
inc
les
add
sbb
cmpsl
gs
int3
mov
xor
pop
loopne
movsl
jmp
leave
xchg
xchg
adcb
xor
fdivs
sbb
sti
xor
dec
push
add
bound
xor
pop
les
add
stos
data16
sbb
and
faddl
push
test
lret
push
mov
cmp
out
push
fisttpl
mov
sub
jmp
into
mov
andl
hlt
push
scas
adc
popf
jle
cmp
sub
orl
pop
xor
imul
cwtl
lahf
stc
insl
xchg
pusha
jns
sbb
popf
xor
pusha
add
out
fs
repnz
stc
enter
in
fs
rorb
stos
add
bound
sub
arpl
cli
addr16
dec
cld
push
int
testl
jns
fcomi
divb
jo
outsb
rol
jne
jb
jecxz
shlb
in
addr16
dec
pop
cmp
jb
xchg
inc
out
pop
or
dec
and
rcr
dec
fwait
adc
repnz
pop
sbb
gs
add
mov
shrb
jbe
stos
je
sub
data16
jecxz
jnp
popa
stmxcsr
mov
pop
adc
add
sbb
push
test
mov
cs
sbb
cmpsb
sbb
mov
mov
stos
movzbl
imul
xor
xchg
rol
sub
mov
sub
aam
pushf
scas
mov
fiadds
jno
jmp
push
cmc
add
mul
sub
nop
push
dec
popf
xchg
scas
into
sbb
pop
cmp
jnp
out
or
test
out
adc
lods
js
je
cmpsl
cmp
xchg
mov
add
jecxz
dec
loopne
enter
cli
jmp
shll
lock
call
pop
mov
movsb
aam
mov
cmp
testl
add
fcoml
push
iret
bound
hlt
pop
hlt
cwtl
insb
insb
xchg
sti
scas
push
data16
add
add
xor
clc
xor
idiv
addr16
inc
add
xor
dec
inc
jne
xor
sarb
psadbw
das
xchg
in
jmp
pop
bound
xor
je
inc
mov
ret
iret
mov
cmp
add
ret
bound
fisubrl
add
stc
inc
dec
enter
insb
sub
cmp
popa
cmc
xor
mov
push
adc
popf
sub
dec
stos
jae
mov
arpl
mov
push
bound
aad
cmp
jg
lea
xchg
test
out
imul
in
inc
push
inc
adc
aam
xchg
loop
fs
movsb
pop
imul
seto
dec
xlat
std
jbe
and
dec
cmp
cld
rorb
ret
outsl
or
dec
adc
inc
lahf
inc
push
xchg
adc
jle
sub
xor
mov
pushf
aam
pop
adc
mov
test
inc
pop
cmc
mov
dec
daa
xchg
es
lcall
cltd
in
adc
sahf
fimull
add
push
jmp
pop
sub
sbb
popa
push
lahf
push
mov
adc
sub
add
lea
mov
flds
mov
mov
xchg
dec
adc
les
arpl
jg
jae
add
and
outsb
scas
dec
sub
mov
aaa
outsl
loopne
je
xlat
mov
dec
dec
ds
jmp
leave
add
test
out
in
jg
jno
testb
push
dec
iret
fwait
xor
int3
adc
mov
jbe
fs
jo
cmpsb
je
jl
sbb
cmp
lret
push
loopne
cwtl
mov
and
pop
test
dec
push
mov
lods
add
imul
mov
adc
push
test
rclb
aas
jns
iret
aaa
push
xchg
in
and
push
fs
stc
jo
in
repz
mov
mov
cmp
das
popa
mov
gs
imul
test
mov
xchg
test
loope
iret
xchg
popf
es
cmpl
loope
repnz
ret
jmp
shll
insb
fisttpll
sbb
mov
cmp
pop
das
in
lret
xchg
lods
dec
ja
fs
mov
sbb
dec
out
and
inc
cmp
insl
addr16
mov
roll
jne
mov
clc
xlat
add
and
andl
jecxz
rol
mov
seto
fwait
add
je
lods
sub
jg
icebp
pop
daa
mov
lock
push
outsb
pop
iret
jp
jecxz
int
inc
clc
ror
cmp
lcall
test
sub
scas
mov
lret
and
or
dec
outsb
test
sub
jns
jmp
jl
shl
and
mov
sub
mov
jns
adc
insb
sub
iret
push
xor
in
sbb
scas
test
leave
push
fs
inc
scas
pushf
or
add
push
xor
sbb
ret
leave
shlb
inc
cltd
sbb
mov
xchg
leave
adc
scas
clc
scas
loopne
xchg
icebp
adc
ret
cmpsl
outsl
repnz
inc
je
xchg
mov
add
scas
push
addb
sub
add
sbb
out
loopne
add
sub
es
inc
pop
or
sbbb
shll
dec
cmp
stc
iret
sarb
cltd
sbb
fcmovnb
push
mov
aaa
cmpsb
mov
sbb
pop
mov
je
adc
push
adc
lret
notl
inc
rcr
push
nop
inc
cmpl
jb
push
mov
or
dec
fimull
pop
ret
pop
in
js
hlt
sbb
insl
aad
orl
insl
roll
mov
decl
mov
sub
mov
loop
inc
sbb
dec
cmpsb
xchg
stos
inc
jg
sub
lcall
xor
cmp
movsl
add
lds
pop
mov
fldl
cli
pop
shll
push
jp
iret
and
fstpl
cmc
inc
fidivs
clc
insl
xchg
and
jmp
out
and
iret
mov
push
xor
or
add
fwait
shll
xchg
pop
fildl
out
and
push
or
adc
sbb
pop
mov
lods
gs
in
mov
ficoms
cmp
pop
out
adc
push
popa
loope
dec
ljmp
sbb
out
lock
push
sbb
lcall
test
ljmp
push
mov
jns
sub
pop
jl
push
cmp
cmovp
xchg
pop
cmp
nop
and
pop
repz
stos
inc
mov
leave
arpl
dec
out
inc
pop
sbb
mov
and
mov
ret
mov
mov
cmp
adc
mov
push
or
and
lcall
mov
xor
cmp
xor
push
ret
xchg
leave
jno
pop
push
and
dec
insb
aad
adc
add
stc
jo
and
shl
lods
inc
hlt
scas
pop
add
mov
test
mov
ss
pushf
sbb
ja
loopne
mov
aad
and
inc
fucomip
sbb
jecxz
dec
repz
sbb
mov
push
std
std
flds
lds
mov
test
xchg
pop
pop
mov
fwait
push
sbb
in
pop
or
es
mov
mov
push
sbb
outsb
and
lahf
arpl
bound
in
addr16
and
sub
and
cld
dec
icebp
shll
imul
stos
icebp
imul
push
dec
and
sub
inc
mov
add
pop
shrl
adc
fdivrl
xchg
inc
in
dec
mov
sbb
xor
or
push
sarl
sub
arpl
push
sub
sarb
cmpsb
jmp
andl
insb
push
rorl
push
mov
mov
mov
aam
popa
mov
fisubl
mov
dec
pushf
popf
jne
aaa
test
pop
lock
sub
rorl
cmp
scas
out
fld
ret
bound
push
divb
les
sbb
mov
out
lret
ficompl
mov
and
std
int
adc
cld
push
shrb
loop
aas
dec
mov
sbb
ret
rclb
dec
data16
mov
or
ds
hlt
scas
sbb
fwait
nop
jae
xchg
imul
sbb
sarl
add
cmc
test
dec
fcomps
xchg
sbb
cltd
sub
out
test
subb
jb
aam
pop
fxtract
lods
cmp
stos
out
stos
push
inc
mov
pop
xchg
and
int
cmp
aam
in
pop
cmp
lds
call
or
and
and
mov
pusha
add
dec
xchg
dec
bound
mov
pop
repnz
xchg
leave
mulb
cmpsb
bound
xor
aaa
out
inc
sub
out
mov
adc
xchg
push
ljmp
pop
aas
mov
arpl
aaa
enter
cmp
sub
rorl
or
ret
inc
jo
fs
jo
out
shll
push
out
repnz
mov
push
mov
insl
dec
mov
inc
scas
cmpsl
lds
sbb
pop
cmp
lods
outsb
loop
adc
push
test
aam
xchg
mulb
jge
inc
int
push
cmpsb
rcrl
loopne
pushf
lds
or
test
outsl
test
jg
mov
int
jl
push
inc
sub
mov
pop
movsb
lcall
in
pop
xor
data16
xchg
popa
mov
out
push
and
in
sub
stos
mov
add
mov
and
test
cmp
adc
cwtl
sbb
cmp
popf
adc
stos
inc
jmp
cmp
je
inc
and
cmpsb
out
filds
fwait
mov
xchg
je
xchg
push
sub
bound
pop
and
pop
and
cwtl
iret
pop
pop
lea
pop
leave
jle
fidivs
push
xchg
or
in
pop
xchg
and
xchg
ret
sahf
mov
pop
jb
cltd
xchg
mov
es
or
aad
jge
out
popf
hlt
and
popa
xor
les
mov
xlat
test
insb
jmp
cltd
lea
jecxz
sbb
popl
mov
pop
xor
push
sub
sbb
jae
xor
loopne
inc
es
inc
sub
mov
ret
xchg
lods
adc
cmp
roll
jno
lcall
or
repz
out
test
add
sarb
icebp
notl
int
xchg
xchg
and
xchg
inc
jbe
lret
inc
mov
dec
mov
mov
jne
arpl
out
sysexit
or
rcl
fisttps
push
dec
cmp
les
mov
mov
arpl
and
clc
mov
xchg
das
sub
lcall
in
fcoms
shr
lea
js
xchg
int
xchg
jl
dec
rcl
xchg
sar
loop
add
pop
rclb
push
fldenv
jg
jg
mov
or
jne
xchg
cli
lods
pusha
jmp
in
xor
jb
loopne
loope
mov
cmc
pop
and
or
mov
ret
dec
fiadds
fldt
insl
inc
outsl
mov
jecxz
lcall
popa
mov
loope
shlb
rcrl
cld
adc
jg
jno
es
fbstp
stc
faddl
or
xchg
aas
mov
or
in
push
ja
adc
loope
xchg
rorb
dec
xchg
cmpl
idivb
adcb
aas
mov
cwtl
lret
sbb
adc
inc
int3
sub
mov
in
lret
es
push
setns
pop
fiadds
xor
loope
je
sbb
mov
dec
movl
sub
mov
push
cltd
cmp
shrb
in
repz
int
mov
bound
loope
repz
popa
sahf
in
aad
out
test
shlb
out
adc
ds
pop
stos
push
cld
ret
push
fadds
popa
cwtl
jmp
pop
mov
dec
insl
mov
or
das
popf
dec
jne
fisubs
lds
jg
scas
adc
push
xchg
add
lcall
mov
fcmovb
in
xchg
mov
aaa
adc
outsl
test
dec
inc
ds
ljmp
push
adc
out
in
jge
outsb
adc
or
xchg
jo
pop
outsb
inc
in
adc
push
aas
rcll
notb
call
mov
test
aad
movsb
push
mov
pop
sbb
icebp
sahf
pop
loopne
xchg
mov
rorb
lea
jb
pop
pop
or
xor
mov
lods
dec
outsl
cld
cmpsb
cmp
lds
ficompl
and
mov
adc
loope
hlt
xor
mov
sub
add
pop
jmp
add
or
in
andb
fs
cmpsb
ljmp
aas
mov
jne
mov
mov
jecxz
out
out
lret
popf
pop
imul
xchg
lret
sub
mov
cmp
lcall
add
shr
popl
lds
insb
cmp
repnz
leave
mul
loop
call
add
and
jecxz
jecxz
mov
mov
xor
fnstcw
cmp
push
xchg
add
mov
clc
sub
push
loopne
jnp
lods
push
les
sub
cmpsb
rclb
sub
ret
add
mov
stos
lret
jae
mov
push
pop
arpl
mov
popa
loope
mov
jmp
aaa
sbb
mov
int3
cmp
push
dec
xchg
sub
in
int3
dec
pusha
and
inc
sub
xchg
mov
bnd
mov
mov
mov
rolb
jmp
dec
lea
out
bound
ret
xchg
jnp
pop
push
xor
lds
fisttpl
ds
mov
out
je
shll
sub
ffreep
mov
icebp
fisttps
inc
jo
and
mov
andb
mov
add
stos
and
dec
xor
add
call
add
add
sbb
bound
push
jmp
mov
dec
rorl
cmc
mov
sub
jp
in
je
pop
or
add
test
and
int3
call
in
adcl
daa
call
and
mov
mov
sahf
sbb
in
dec
jmp
jg
je
iret
shrb
fidivs
es
loopne
aas
scas
jl
in
fwait
sti
pop
rcrl
ret
out
jne
imul
push
cmp
adc
cmp
sti
sbb
call
das
aad
shr
pop
test
nop
mov
xchg
adc
mov
stos
clc
lock
sbb
and
js
stos
imul
add
notl
les
push
pop
adc
and
imul
xor
subb
mov
inc
adc
gs
jmp
xor
popa
adc
es
push
pop
sbb
icebp
scas
jno
mov
ret
dec
jnp
hlt
lea
xchg
jo
sbb
lds
mov
push
out
ja
xor
out
int
in
shrb
adc
xor
xchg
xlat
adc
sub
push
fnstcw
cmp
movsb
das
mov
pushf
lds
adc
ret
adc
outsb
notb
xorl
jno
inc
add
jb
dec
sarl
test
scas
or
es
shlb
and
jg
add
and
inc
ret
mov
dec
icebp
add
das
xchg
inc
mov
and
cmc
out
mov
xchg
mov
icebp
cltd
xchg
xchg
sahf
mov
sbb
pop
popa
pushf
rcrl
in
xchg
enter
push
push
mov
popf
ja
in
adc
pop
dec
xor
ds
out
bound
pushl
lret
add
loop
mov
push
xor
mov
adc
jl
aad
cmp
mov
test
shrb
je
sbb
mov
mov
inc
pop
mov
movsl
addr16
loop
int3
ja
movsb
mov
dec
and
sbb
xchg
sbb
fadds
pop
inc
push
jae
in
jo
jle
jae
pop
mov
pop
and
stc
in
jns
mov
movsb
cld
dec
dec
je
repz
cltd
bound
cmp
int3
repnz
movsb
out
in
and
fstpl
jp
and
orb
out
daa
rclb
jp
pop
stos
out
mov
dec
push
mov
mov
aaa
insl
sbb
mov
mov
loopne
neg
mov
lods
shl
adcl
add
push
jp
and
out
cs
jp
mov
or
cmpsb
xchg
adc
adc
js
sbb
hlt
in
sub
int3
xor
repnz
dec
roll
dec
into
movsl
js
push
hlt
adc
or
mov
pushf
jg
jl
hlt
comiss
dec
jmp
pop
out
pop
int
xor
inc
loopne
pop
shr
aad
push
ljmp
push
jge
xor
and
pop
push
insb
xor
clc
adcl
data16
test
push
jmp
shl
mov
pop
test
sbb
xchg
imul
sub
int3
mov
mov
mov
pusha
dec
movsl
jo
gs
mov
jns
jle
out
mov
mov
push
add
xor
pop
jne
mov
jl
pop
shrl
and
lods
icebp
clc
or
mov
xchg
inc
std
lea
mov
jo
je
adcl
jnp
add
dec
imul
fidivrl
nop
and
fstpt
test
imul
add
imul
xchg
xchg
psubw
mov
mov
cmpsl
push
cli
and
fbld
mov
sbb
sub
imul
push
and
mov
lods
mov
dec
inc
sub
mov
dec
shl
popf
dec
lahf
sub
mov
mov
push
mov
add
push
shrl
insb
fnsave
call
mov
pop
xchg
aam
mov
sub
inc
xor
insl
inc
jl
mov
xlat
in
inc
ret
xchg
insb
or
fidivl
fsub
arpl
mov
in
ret
dec
fildll
mov
sub
add
mov
xchg
xlat
push
mov
push
leave
xchg
cltd
adc
divps
leave
mov
pop
icebp
adc
mov
or
mov
loope
dec
mov
push
cmp
mov
cmp
popf
fsubl
aas
in
push
popa
xlat
push
ret
out
sbb
repnz
pop
push
aas
push
mov
daa
xchg
scas
xchg
and
cmpsb
sbb
mov
lea
xor
cmp
mov
sub
mov
ja
insl
lcall
fnstsw
mov
pop
sbb
mov
mov
popf
or
fistpll
push
jle
xchg
out
pusha
sub
testb
addr16
push
in
jge
ret
jnp
outsl
cmp
dec
ja
cld
adc
repnz
xchg
je
lds
lahf
orl
mov
test
stos
out
inc
mov
sbbl
adc
aas
lds
stos
and
scas
sub
movsb
inc
jg
push
xor
and
ret
inc
daa
ja
add
cmpsb
mov
jmp
inc
flds
fwait
nop
dec
and
loopne
jns
rorl
cmp
lds
inc
mov
cs
popf
mov
cmp
in
or
fsubr
fcomp
add
xchg
in
sub
xchg
mov
and
lahf
shll
jge
adc
int
mov
cmc
ds
add
cmc
jne
inc
cli
sub
sahf
iret
out
lgs
push
loop
ds
xchg
push
add
pop
es
inc
dec
cmp
push
lods
fistl
inc
push
sub
jno
frstor
ret
es
jne
aam
sbb
xor
jmp
pop
sub
adc
jno
add
clc
xchg
notl
mov
jmp
push
in
or
jmp
adc
lock
jg
cmc
pop
les
xlat
mov
push
aam
out
mov
pop
lods
or
into
icebp
mov
addr16
or
int
sbb
adcb
out
aas
test
jmp
imul
dec
incl
shlb
out
pop
shl
push
push
xchg
xchg
lock
lret
rcrl
clc
fwait
pop
arpl
test
out
sub
dec
rcll
adc
mov
jnp
add
lret
out
out
ss
lock
lea
cs
out
jb
jmp
sub
jecxz
lods
nop
data16
adc
lock
incb
cmovl
shll
or
push
ret
test
inc
rorl
push
insb
push
sbb
add
push
xchg
sub
je
divb
sar
inc
inc
in
icebp
mov
fisubrs
add
jle
jnp
or
mov
mov
or
shll
fwait
jmp
clc
int3
ffree
xor
xlat
jo
or
js
push
jo
and
xchg
imulb
adc
mov
inc
outsl
stos
dec
scas
lcall
pop
cmp
imul
inc
in
cmp
cli
jecxz
xor
mov
jns
jo
sub
fdivs
imul
sbb
pop
pop
inc
cmpsl
jl
sbb
imul
mov
js
test
outsl
cld
out
rcrl
in
sub
mov
push
xor
insb
js
loopne
mov
dec
cmp
pushl
xchg
inc
mov
adc
test
and
lods
test
pop
mov
inc
sub
out
push
sub
lods
sub
dec
sub
cs
or
dec
and
dec
xchg
push
out
pop
mov
adc
xchg
imul
xor
std
decl
ss
mov
iret
aas
or
popa
arpl
int
cs
xor
repz
push
out
inc
cmpsl
xchg
aam
add
bound
jp
pop
inc
ret
test
cltd
test
pushf
popf
xor
scas
cltd
xor
popf
xchg
movsl
scas
xchg
sub
cmpsl
sub
stc
cmp
aas
mov
sbb
sub
pop
and
inc
or
pop
test
mov
jnp
xchg
cmp
cmp
fsubrl
subb
rclb
xor
or
sahf
and
mov
sbb
mul
jg
add
inc
fwait
sbb
inc
repnz
xlat
xor
notl
lock
rorb
jecxz
icebp
mov
pop
add
repz
test
mov
out
test
cmp
xor
scas
jae
lods
cmc
push
add
mov
repnz
out
imul
das
and
jo
ret
mov
inc
nop
pop
pushf
xchg
js
jo
xchg
add
call
jp
ret
cwtl
fcmove
and
cmp
lods
clc
sbb
fstpl
mov
sti
enter
loopne
cmpsb
scas
xor
add
lcall
and
mov
or
loope
enter
out
cmp
add
pop
arpl
gs
aam
pop
addb
xor
or
xchg
mov
loop
sub
std
insb
ja
lock
mov
add
push
push
repnz
shlb
fsubrs
mov
imul
xor
popf
cmp
shll
and
mov
aaa
jecxz
cwtl
jno
pop
rorb
scas
imul
push
push
into
mov
xchg
les
roll
loopne
inc
jns
mov
mov
push
xchg
push
inc
shl
add
push
and
inc
cmp
cmpsb
mov
ja
or
mov
inc
insl
jb
inc
movntps
shl
mov
int
cmpb
push
lock
jl
lret
mov
jae
ja
xchg
inc
shll
jmp
jns
loope
adcb
mov
mov
jge
jne
out
loope
pop
aad
pop
xchg
ds
cmp
repnz
pushf
test
rclb
mov
rcrl
jge
orb
cwtl
mov
xor
adc
aam
popa
mov
mov
sti
sbb
sti
pusha
es
xor
clc
xchg
lahf
pop
sbb
mov
stos
cltd
cmp
push
sbb
mov
or
cmp
nop
movsb
mov
jne
ds
jmp
loop
sbb
imul
mov
inc
push
adc
out
cmp
movb
xchg
clc
ja
push
fsubrl
pop
mov
loopne
mov
cli
mov
fs
lea
lds
aas
cmp
lret
out
test
js
fwait
inc
xchg
movsb
mov
shl
cmp
cltd
leave
xchg
xchg
stc
and
pop
lock
scas
lret
mov
pop
inc
shll
jb
in
lods
lock
setno
sub
jp
inc
jecxz
mov
xchg
sbb
hlt
mov
xchg
push
push
enter
movb
dec
adc
icebp
mov
or
ret
push
repz
sub
lahf
cmp
xchg
sub
in
inc
lret
rcr
xchg
pop
cs
sbb
stc
mov
test
xchg
xor
push
int
cmp
xchg
push
scas
inc
push
jge
lahf
jnp
pop
int3
lret
xor
das
push
pop
inc
cmp
mov
cld
bound
add
scas
repz
jle
and
xor
out
lds
pop
mull
imull
cmp
sbb
das
sbb
ja
mov
shl
mov
or
repz
mov
negl
dec
addr16
push
jle
or
mov
sub
inc
dec
dec
mov
xchg
and
pop
test
mov
mov
ret
mov
sahf
stc
and
fiaddl
push
rolb
out
jmp
pop
std
hlt
mov
fsts
adc
pop
adc
fiaddl
cmp
popf
pop
mov
push
sub
test
call
pop
loopne
int3
das
jae
das
das
adc
mov
imul
add
adc
movsl
nop
int
loope
pop
mov
and
push
shl
int
mov
mov
xor
enter
cmp
mov
pop
push
iret
jno
xor
or
into
xlat
push
add
daa
cmpsb
outsl
jg
cmp
add
std
add
sbb
push
roll
jp
sub
andb
mov
cmp
pop
push
push
rcll
cmpsb
sub
dec
jle
or
jecxz
aad
std
roll
fstpl
mov
jmp
shll
jl
xchg
outsb
icebp
pop
push
mov
pop
xchg
mov
jno
pop
in
cmp
push
outsb
add
cmc
jmp
inc
cmp
fstpt
adcb
xor
mov
cmp
es
push
jle
pop
adc
fwait
dec
loope
fmuls
int
xor
repz
add
pop
sarb
mov
mov
mov
imul
and
pop
dec
xor
xor
mov
test
stos
sub
js
ret
lcall
mov
pop
scas
jmp
hlt
sbb
clc
fsts
int
cmp
push
cs
cmc
mov
test
imul
inc
lcall
xor
sti
mov
movsb
push
jo
addr16
out
in
lahf
ret
test
add
fstl
mov
iret
shlb
adc
sub
and
out
inc
cmp
outsl
mov
or
cld
rclb
js
repz
xchg
les
mov
int3
lods
ja
sbb
mov
cmp
aam
xchg
out
es
in
bound
testl
inc
daa
adc
fs
out
cwtl
pop
push
ret
cmp
cmp
inc
mov
mov
xlat
inc
mov
mov
add
xlat
push
je
push
inc
icebp
pusha
pop
jnp
das
mov
sbb
inc
sbbl
or
dec
pop
xchg
adc
cmp
loop
push
xlat
xchg
add
shlb
and
adc
ljmp
mov
cmp
mov
fisttps
mov
test
ss
std
xor
jno
mov
dec
mov
test
push
into
adc
enter
fcmovb
mov
jno
into
cwtl
ficomps
sarb
shl
rorl
pop
mov
shlb
test
fdivl
dec
enter
dec
orb
sbb
mov
mov
push
mov
cmp
mov
and
sbb
fidivl
sub
jmp
mov
negb
or
push
mov
mov
jne
sahf
les
lds
dec
and
lahf
jle
push
jecxz
xor
pop
out
fsubrs
pop
jo
cmpsb
repz
mov
cmp
push
add
lds
jmp
popa
dec
push
pop
mov
mov
push
pop
loopne
fistps
lods
jmp
sahf
aas
call
mov
pop
dec
addl
pop
adc
jmp
incb
stos
pop
push
ljmp
scas
cli
cmp
fsin
stos
lcall
dec
mov
xchg
xor
or
fidivl
loop
clc
out
mov
outsb
stos
out
add
mov
scas
push
mov
ds
push
and
adc
imul
jp
pop
push
int
ljmp
xchg
scas
lret
push
addr16
add
inc
pop
fs
lea
repz
rorb
sbb
int
sbb
jg
dec
xchg
mov
fmuls
notb
pusha
pop
xchg
xor
mov
sahf
ds
pusha
in
dec
mov
in
pop
jae
mov
aam
arpl
jp
stos
sbb
xchg
xor
push
pop
jae
shl
jge
fildl
inc
cli
nop
pusha
dec
jno
mov
cmp
repnz
fildll
pop
ds
fsubs
cwtl
out
and
xor
enter
loopne
fisubrs
imul
mov
imul
lods
xor
mov
jge
sub
repz
sub
ljmp
sbb
scas
mov
ds
std
in
enter
and
dec
sub
lahf
add
lea
mov
jae
cmp
mov
fists
sub
inc
mov
imul
mov
xor
movb
push
xchg
dec
ljmp
lcall
mov
push
sti
cltd
inc
out
sarb
icebp
sub
hlt
movb
inc
repz
pop
and
test
mov
or
and
adc
in
fstp
xor
cmp
cmp
mov
rcrb
outsl
mov
push
out
test
jne
leave
ret
mov
popf
into
xchg
fildl
lcall
inc
bound
pop
jl
push
mulb
or
rolb
or
push
pop
iret
and
xor
jae
cmp
jo
cmp
cltd
frstor
std
cld
dec
add
jne
lods
stos
push
inc
scas
dec
testl
mov
call
mov
daa
stos
repnz
mov
xchg
leave
andb
push
scas
scas
xorl
addr16
mov
imul
js
jg
sbb
mov
aad
pop
adc
dec
int
mov
push
push
cltd
iret
and
jb
frstor
insl
add
mov
out
mov
jp
pop
mov
out
es
cltd
sti
stos
out
scas
lds
pop
fdivs
mov
dec
test
mov
mov
or
aam
sub
xor
rcll
xor
push
ret
scas
mov
adc
lds
jne
cld
mov
out
iret
out
and
les
divb
cmpsl
test
mov
inc
lods
enter
and
pop
xlat
push
fcompl
hlt
mov
aaa
push
mov
in
ror
daa
xchg
cmpsl
movsb
mov
std
push
fidivrl
sub
sbb
enter
inc
fwait
cmpsb
xchg
cmp
out
jmp
and
mov
jb
dec
xor
mov
mov
fimull
in
adc
push
in
ret
lret
dec
ds
xor
mov
jle
lods
addb
daa
ret
pop
push
inc
dec
jmp
inc
popf
inc
mov
out
sub
jecxz
ficoml
jge
adcl
push
jmp
fs
dec
jb
sbb
inc
pop
test
popf
xor
pop
jl
pop
or
dec
sarb
or
in
xor
cmc
pop
push
sbb
popf
xchg
stos
push
jb
cmc
push
mov
xchg
rclb
xchg
xor
jg
inc
sub
jo
mov
mov
subl
adc
cld
incb
add
shl
int
dec
pop
push
cli
jae
into
or
jle
cmp
dec
or
repz
and
stos
pop
lahf
rcrb
mov
pushf
bound
pop
mov
out
mov
lret
xchg
movsb
xchg
cli
addr16
pminub
mov
mov
xchg
xchg
mov
mov
xlat
xchg
loope
dec
out
jecxz
add
sarb
mov
andps
test
or
out
iret
test
add
dec
mov
enter
popa
dec
in
iret
mov
pop
data16
loop
lods
neg
sbb
sbb
out
idiv
adc
and
cmc
jae
push
popf
sub
ljmp
dec
mov
divb
xor
sbb
icebp
lea
mov
sub
pusha
fiadds
je
sub
lret
and
iret
cs
dec
jno
les
sub
bound
ljmp
jns
push
or
jge
jp
dec
js
xor
gs
test
xor
pop
or
or
xchg
out
movl
icebp
daa
mov
fmul
mov
pop
loop
pushf
xchg
rorb
pop
or
inc
ret
jo
pushf
sbb
mov
std
cmpsb
push
jae
pop
out
mov
push
jmp
insb
enter
repnz
sbbl
lods
lods
call
and
mov
mov
cmpsl
mov
adc
lea
inc
movsl
fldl
cmpsb
xor
insl
sub
adc
cmp
mov
jg
sbb
push
lcall
inc
sbb
int
imul
out
jno
mov
pushf
sbb
add
mov
sbbl
add
xchg
add
out
out
gs
int3
inc
call
aas
in
ja
mov
andb
arpl
push
ffreep
adc
inc
out
mov
sub
mov
mov
mov
dec
sahf
cmpl
add
je
lds
aaa
mov
xchg
rolb
fwait
xchg
jle
jnp
fiaddl
push
jg
dec
ret
add
and
sbb
xchg
dec
xor
inc
jae
call
bound
adc
bound
test
ja
sub
mov
arpl
xchg
orl
hlt
pop
shlb
add
scas
adc
stos
push
add
sbb
rolb
insb
cmp
push
jmp
int
lret
push
jo
jp
movsl
mov
arpl
lea
push
jbe
inc
in
cli
sub
or
out
mov
xlat
mov
adc
adc
popa
ds
push
nop
pop
test
pop
cmpb
cmp
imul
into
pop
pop
push
inc
mov
push
call
pop
jbe
or
movsb
and
cmp
and
out
or
push
lret
adc
xchg
jle
test
inc
dec
pop
mov
xor
xchg
int
mov
inc
addr16
adc
daa
jl
sbb
aaa
inc
mov
pop
dec
test
ret
pop
mov
aam
cwtl
push
popa
mov
into
sbb
dec
sub
cmpsb
ror
add
pop
or
mov
cltd
out
addl
nop
push
sub
fstp
adc
fidivrs
fadds
jl
mov
jecxz
mov
psrad
jmp
clc
adc
add
xchg
sti
mov
add
sahf
sub
into
or
pop
mov
push
and
inc
rclb
jp
mov
jecxz
sahf
call
into
mov
pushf
push
es
stos
je,pn
jmp
push
test
and
std
xor
inc
ret
mov
in
cmp
negl
test
mov
imul
cmpsl
cmp
dec
pop
dec
cmp
lods
lock
insb
outsl
lds
pop
dec
or
pop
mov
mov
xchg
aam
lds
xchg
iret
daa
and
and
jo
sub
sbb
ror
or
mov
sahf
ret
in
xor
pusha
push
ret
mov
push
lea
adc
mov
jge
repz
stos
test
in
jecxz
cltd
rclb
mov
mov
push
das
aam
jbe
scas
ret
and
clc
insl
mov
int
fdivrs
andl
mov
in
jb
push
insl
sub
popa
or
xchg
aad
pop
arpl
in
outsb
push
std
and
test
sarb
and
ret
adc
jns
stos
pop
sub
dec
cmp
pushf
add
ss
or
lods
mov
cmp
lahf
sarb
int3
jne
inc
repz
mov
int
shr
insb
std
adc
lcall
mov
xchg
mov
push
add
out
cmp
push
and
or
lcall
ja
xchg
in
orl
xchg
je
sub
xor
lock
inc
dec
cmp
stos
loop
dec
mov
outsb
lea
cld
cmp
es
stos
sub
xchg
lcall
daa
cmp
arpl
inc
push
aad
push
mov
shrl
xor
mov
adc
inc
jns
pusha
mov
inc
mov
adc
sbbl
mov
jge
dec
xor
adc
add
insl
sbb
inc
insb
mov
add
pop
push
jb
mov
push
cmp
dec
jecxz
sub
icebp
popf
mov
inc
lods
rcrb
sbb
push
addb
inc
clc
faddl
test
sbbb
xchg
les
std
pop
shrl
flds
jb
pop
inc
mov
dec
pop
pop
or
adc
mov
filds
mov
mov
inc
popf
sub
cmp
dec
push
mov
std
xchg
lcall
inc
fnstsw
ljmp
jge
cmp
cmpsb
leave
cmp
imul
ss
cmp
sbb
jl
inc
and
in
push
mov
sub
in
or
rcll
mov
cmc
insb
dec
fildl
mov
test
outsl
lret
ljmp
in
pop
mov
or
aas
cmp
mov
cld
sub
push
les
clc
xchg
repz
xchg
dec
cli
mov
and
cmp
jbe
cmp
mov
jo
icebp
rol
and
sub
mov
sub
add
bound
ret
xchg
cwtl
xlat
sub
insb
cli
gs
mov
fiadds
jnp
xlat
sub
sbb
sub
outsl
es
mov
pop
ljmp
fcompl
cmp
pop
mov
pop
pop
addl
sbb
cmp
cmp
cmp
sbb
pop
and
xchg
lods
movsl
sahf
jmp
dec
imul
xor
cmp
lock
fcomp
stos
mov
shlb
mov
enter
fsubrl
insb
clc
out
cmp
daa
mov
rorb
cmp
mov
xorb
je
paddsw
fildl
into
int
inc
and
jmp
mov
pop
cltd
pop
mov
add
lret
mull
mov
xor
in
jge
fisttps
and
dec
testb
cs
sub
imul
notl
das
pop
outsb
inc
add
xor
adc
inc
mov
test
mov
mov
or
adc
xor
cmpsl
clc
fwait
xchg
mov
add
jb
pop
sub
imul
cld
cltd
adc
dec
mov
test
cmp
lret
mov
xchg
push
in
or
xlat
push
lods
call
rcrb
test
dec
xchg
xchg
sub
in
xor
negb
adc
sub
xor
lret
pop
xor
cmpsb
aad
sbb
outsl
subb
adc
mov
fwait
dec
repnz
pop
mov
mov
lcall
sbb
stos
mov
xor
and
stos
icebp
mov
lcall
lahf
bound
int
lcall
mov
xor
int
and
and
aaa
jg
add
mov
loop
inc
es
aad
test
jae
enter
lahf
or
out
sti
es
jmp
adc
lahf
mov
notb
cli
push
aad
push
cs
data16
cmp
outsw
stc
ss
sub
ret
sti
adc
ds
aaa
addr16
ja
pushf
mov
xchg
mov
jmp
testl
mov
inc
sub
pop
push
adc
sbb
sbb
sub
lods
push
stos
push
cmp
dec
mov
adcb
adc
repz
or
mov
mov
push
out
push
cmp
push
daa
in
add
enter
xchg
ss
inc
ljmp
in
test
in
rcrl
cmp
xchg
inc
insb
cmp
or
lahf
mov
sbb
loope
adc
movsl
movsl
push
mov
xchg
js
data16
aaa
and
fdivp
inc
mov
outsl
add
fdivr
or
xchg
dec
xor
std
leave
push
stos
and
insl
mov
inc
mov
andb
add
mov
xor
mov
out
mov
add
sub
jns
mov
test
push
mov
pop
cli
jo
aas
mov
push
mov
xchg
sbb
imul
push
xchg
push
mov
or
push
push
lock
jle
xor
out
and
sub
jg
lea
or
mov
add
mov
stc
jmp
test
pushf
ja
jns
nop
outsl
sub
xor
push
js
pop
xchg
adc
test
daa
mov
xchg
das
call
jg
and
pop
add
std
and
push
ficomps
jle
pop
xchg
xchg
in
pop
nop
sbb
push
cwtl
mov
xchg
subl
lret
out
daa
pop
sub
xor
enter
mov
bound
or
mov
xchg
hlt
lods
pop
dec
cmp
cmc
jp
shlb
test
jmp
mov
fcmovnbe
pop
push
iret
mov
mov
cmp
jg
fcmovbe
inc
or
in
test
addr16
icebp
sbb
xor
mov
stos
xchg
sahf
decb
dec
dec
js
sbb
push
or
mov
es
enter
push
clc
lcall
inc
ror
mov
subb
inc
fcmovnbe
movsb
add
stos
mov
mov
cmpsl
les
insb
inc
cld
pushf
mov
mov
cmp
xor
icebp
jl
fs
mov
xchg
inc
sub
stos
es
addr16
xor
sub
sbb
or
pushf
lret
xchg
mov
in
pushf
mov
mov
out
push
mov
daa
pushf
repnz
pop
add
popa
cmp
mov
out
cmpsl
mov
sbb
pushf
jp
pop
iret
les
mov
cmp
test
xchg
dec
jp
mov
inc
sub
out
mov
xchg
jge
daa
lods
push
jbe
or
jns
dec
sub
sar
jp
xlat
loopne
push
push
rcl
lds
jecxz
test
rol
subb
lahf
popf
cmpsl
fsubrl
xchg
scas
pop
cmp
popf
pop
mov
xchg
iret
pusha
into
xor
sbb
push
mov
inc
jne
hlt
xchg
add
jle
ja
std
and
andl
gs
lods
jae
jg
sbb
push
ja
mov
push
sub
gs
add
mov
roll
or
ss
subl
nop
xorl
add
inc
lcall
push
and
mov
jnp
repnz
push
out
sbb
or
mov
push
dec
add
inc
pop
cld
xor
gs
push
hlt
scas
and
stos
dec
inc
dec
xchg
leave
ret
mov
mov
add
push
and
sbb
fisubl
daa
out
xchg
fistpll
mov
or
pop
and
nop
movsl
pop
mov
mov
pop
mov
repnz
xlat
fildl
inc
in
cs
jb
scas
cmp
adc
jmp
or
outsl
stos
ret
stos
mov
int3
iret
hlt
fs
push
data16
mov
ror
stc
cwtl
cld
ret
out
fsubrs
cld
adc
and
pop
dec
int
cmp
cltd
mov
mov
sbb
cld
adc
in
xor
xchg
jmp
leave
stc
pop
xchg
or
std
mov
popa
push
sbb
pusha
adc
cltd
ds
in
pop
clc
pop
mov
repz
pushl
fisubl
aad
add
je
ljmp
mov
cld
mov
pop
inc
repnz
or
mov
shl
mov
in
or
sbbb
and
dec
adc
fwait
and
andl
inc
cs
inc
add
push
push
sub
or
mov
cmp
fmulp
fst
mov
pushf
out
in
iret
adc
cmp
pop
mov
inc
movsb
data16
shld
and
repnz
push
addr16
stos
sbbl
aas
bnd
add
sbb
mov
imul
mov
sub
xchg
add
icebp
fstl
cwtl
pop
xchg
lret
or
pusha
outsl
std
les
mov
add
and
dec
jecxz
cmpsl
xchg
ds
movsb
fcomp
movsb
xor
jecxz
xor
dec
and
or
jmp
fstpl
pop
movsb
jb
mov
divb
pop
add
jecxz
dec
sbb
or
xchg
clc
mov
cltd
add
sbb
je
and
sarl
mov
mov
aad
cmp
jl
fsubp
es
jge
aaa
popa
lea
sub
cmpsl
dec
test
mov
mov
push
sbb
xchg
out
jnp
cmpsb
or
and
repnz
outsl
testl
or
repnz
pop
mov
call
popf
test
std
lods
pusha
push
sub
sbb
mov
iret
jle
es
fucomp
pop
pusha
jg
cmp
popa
rcrl
sti
push
arpl
xchg
pusha
fwait
xchg
xorb
xlat
gs
mov
loope
fimull
andb
out
xchg
popa
or
or
inc
mov
dec
push
xchg
test
in
in
aaa
outsb
fidivrs
xor
fs
cltd
push
or
or
mov
scas
jg
add
and
push
sub
xchg
test
push
into
xor
xor
xchg
repnz
repnz
cmpsl
jle
int
bound
push
xchg
cmp
cmp
pop
bound
out
push
add
and
int3
cmp
repz
jnp
mov
push
cmpsl
pushf
mov
add
mov
and
clc
push
mov
rorb
fs
mov
adc
cmpsl
das
sub
jecxz
lahf
fs
pushf
mov
mov
adc
jl
mov
idivb
pop
sbb
ret
xchg
cmpsb
lret
dec
jae
in
ret
shr
jmp
pop
popl
adc
data16
ljmp
imul
aaa
mov
adc
jns
mov
out
dec
or
push
fptan
out
xor
lods
roll
aam
fstpt
lods
enter
mov
test
lcall
stos
mov
stos
mov
out
loop
imul
loope
divl
lea
jne
in
stos
outsl
cli
outsb
in
sbb
inc
shl
cld
mov
and
xchg
adc
int
push
xor
in
lret
sarl
mov
std
movsl
dec
sahf
add
pop
rcr
inc
inc
mov
mov
pop
mov
sub
scas
ss
inc
sarl
xchg
jns
sbb
mov
mov
inc
add
xchg
inc
arpl
xor
imull
lret
jl
aaa
aam
mov
push
pop
in
sub
popf
cmp
sahf
out
cmp
scas
iret
push
sbb
mov
mov
push
inc
lret
dec
scas
lock
daa
mov
fisubl
aaa
pop
jo
mov
dec
mov
les
fisubl
add
adc
push
inc
jb
andb
nop
lds
pop
idivl
sub
mov
cmp
movsb
push
add
mov
mov
push
rcrl
ss
pop
xchg
lock
cmovp
and
test
pushf
and
mov
or
add
ss
ds
mov
inc
aad
adc
jmp
lea
in
in
mov
add
into
gs
fcoml
rcrl
rorb
int
loopne
enter
cmpsb
cmp
fsubrs
out
shrb
or
or
mov
add
xchg
cmp
outsl
call
outsl
inc
adc
push
cmp
mov
shll
sarl
and
sarl
hlt
decl
in
mov
mov
mov
add
and
movsb
orl
scas
sub
mov
cmp
pop
outsb
call
mov
lock
repz
out
lds
scas
adc
push
fcmovu
outsb
add
mov
fnstcw
repnz
ljmp
sub
pop
iret
cltd
test
lock
push
rdtsc
call
or
push
lods
jne
rolb
les
mov
xlat
push
cmp
mov
sbb
xchg
inc
scas
lods
psadbw
jmp
loope
and
stos
mov
repz
mov
cld
push
mov
int
lret
fimuls
dec
dec
push
xchg
imul
mov
lock
pop
incl
and
loop
out
fistpl
popf
sbb
xor
xor
mov
mov
mov
mov
mov
sar
jmp
jae
in
mov
add
xorb
cmc
xchg
or
rol
sbb
fimull
inc
inc
or
addr16
repnz
sti
sarb
xor
xlat
mov
sbb
xor
xchg
sub
insb
cltd
lret
xor
cmp
loope
jbe
pushf
dec
das
cwtl
xchg
scas
fistps
xchg
xchg
pop
jnp
imul
std
out
push
or
arpl
push
pop
ss
mov
and
je
mov
dec
in
jl
lods
stos
ds
jo
insb
rcr
mov
nop
or
pop
iret
push
xor
cmp
arpl
fs
inc
sbb
es
scas
xchg
hlt
jl
mov
ret
sbb
push
add
adc
in
push
pushf
jb
leave
fiaddl
xchg
cmp
or
dec
lods
jb
scas
dec
test
dec
add
fdivrl
out
xchg
inc
push
movsb
sub
js
lcall
jge
imul
ds
mov
fiaddl
mov
cmovb
in
loop
mov
je
mull
pop
ljmp
cmp
push
data16
jns
stos
ljmp
push
daa
roll
and
mov
outsl
data16
lea
sbb
decl
or
cmp
add
xchg
push
jge
inc
fdivrl
xor
nop
repz
arpl
dec
and
int
popf
cld
mov
cli
mov
les
mov
add
jo
arpl
push
fwait
mov
jo
add
in
ja
mov
push
mov
xchg
adc
cmp
fildll
lock
or
cmp
daa
sbb
and
mov
xor
ja
lahf
inc
dec
dec
movsb
repnz
mov
std
lcall
repz
jge
and
arpl
ja
xor
mov
lea
jge
out
adc
mov
lea
xchg
ds
outsl
cs
jmp
repnz
mov
test
prefetch
pop
fcmovnu
fcmovbe
mov
in
js
or
inc
movsl
out
test
rcl
icebp
pop
sbb
adc
mov
jns
sub
mov
add
jle
xor
out
xchg
aas
jnp
mov
gs
jo
mov
jg
pop
xchg
or
in
mov
xor
inc
push
popf
or
out
sbb
dec
mov
push
out
insl
arpl
xor
jo
xchg
fcoms
or
data16
mov
adc
mov
xor
dec
dec
jnp
sbb
push
xor
cld
shrl
sub
xchg
imul
testl
push
xchg
dec
dec
mov
in
gs
out
fldcw
inc
int
adc
scas
mov
dec
in
in
loopne
ret
xor
cli
cmp
insl
call
xor
jg
pushf
popa
and
cwtl
in
adc
push
fbld
daa
mov
xchg
inc
xlat
cmp
push
pusha
cmp
jno
and
in
fstl
xchg
adc
lea
dec
dec
adc
mov
imul
sub
adc
popf
call
iret
or
outsb
cmp
adc
test
rcll
fidivl
pop
ss
adc
test
dec
mov
das
shrb
and
jecxz
push
fcoms
push
clc
pushf
sbb
lret
imul
fistpl
pop
xchg
inc
jnp
dec
pop
cmp
lods
adc
mov
test
xchg
mov
jecxz
insb
clc
out
dec
mov
ret
lret
lods
jl
ljmp
pop
and
loope
sbb
cmp
adcb
jo
fisttpll
inc
or
and
scas
out
cmp
scas
jbe
cmp
mov
lds
cmpb
xchg
push
or
insb
insl
fsubrl
int3
mov
rclb
jne
push
jno
ss
fwait
pop
push
push
jne
mov
adc
je
and
jae
cmp
add
or
pop
sub
mov
push
push
dec
mov
stos
cmp
arpl
loop
xor
xchg
pushf
outsb
pop
push
je
inc
insl
and
jge
xor
pop
inc
into
pop
jg
ds
pop
sub
mov
aam
cmp
fnsave
sbb
cwtl
push
add
sub
push
add
fldl
xor
jb
or
push
inc
xor
fdivrs
xchg
xor
adcl
inc
mov
xchg
or
int3
jle
std
es
mov
lea
dec
or
jl
pop
adc
or
sbb
xchg
cltd
jbe
clc
dec
int
mov
scas
mov
aas
xchg
or
push
aam
or
lods
leave
xchg
mov
xchg
pop
pop
mov
jmp
ljmp
mov
cmp
into
mov
test
or
mov
pop
mov
inc
inc
mov
js,pt
fnstsw
cmp
cmp
mov
sub
xchg
xorb
movsl
js
push
jno
insl
jmp
repz
rcrl
arpl
sbb
or
push
dec
sub
fucomp
adc
or
cmp
push
enter
jo
pop
scas
cwtl
cmp
sub
jle
push
jno
out
lea
repz
repz
pop
xchg
dec
addr16
mov
add
outsb
repnz
inc
pop
xor
sub
add
out
notl
dec
aas
int
push
dec
mov
rcll
fimuls
out
xor
dec
je
iret
pop
ret
or
loop
sbb
mov
mov
jp
and
lret
push
mov
jnp
aad
cwtl
outsb
mov
pop
mov
in
shlb
div
clc
outsb
pop
jnp
pushf
icebp
adc
and
cmc
repz
cmp
stos
or
xchg
pop
push
xchg
cmpsl
cmp
pop
or
jmp
inc
outsl
repz
jmp
xchg
push
lods
enter
xchg
add
cmp
jl
jecxz
loop
mov
dec
mov
imul
loope
pop
cmpsb
jne
dec
hlt
faddp
jle
lcall
push
bound
jmp
mov
xchg
bound
jb
std
insb
sub
divb
xor
push
cmpsl
test
lds
and
push
in
out
pop
adc
cmp
xlat
or
imul
nop
jg
sub
mov
in
rcrb
js
mov
es
call
cmp
xchg
imul
cltd
jns
pop
call
push
cmp
inc
cmpsl
inc
mov
jl
aas
inc
sub
push
enter
jge
xor
jae
ss
push
add
repnz
cwtl
popf
push
data16
rorb
int
dec
in
sub
das
xchg
mov
lret
mov
movsl
rcrb
nop
mov
add
fucom
or
fimuls
mov
push
mov
inc
imulb
dec
jae
sbbl
ljmp
jbe
fidivrs
mov
xor
movsl
fcmovnu
cmp
mov
cs
and
cmc
cmp
enter
outsl
mov
pop
cmp
aaa
pop
or
fstl
sbb
xchg
jno
or
fnstenv
das
into
mov
xchg
adc
faddl
push
arpl
jle
sbb
inc
aaa
mov
cli
js
mov
inc
mov
push
pop
pop
test
sbb
pop
pop
and
mov
addr16
xor
cmp
adc
fisttps
int3
mov
je
adc
inc
pop
ret
lret
outsl
mov
out
ret
inc
sub
inc
repz
test
and
cmp
aaa
dec
cmp
arpl
fs
sub
in
ret
push
mov
subl
adc
jmp
push
scas
fldcw
push
push
imul
or
mov
or
adc
xchg
fistpl
push
add
add
xchg
aad
iret
les
and
mov
push
loope
je
sbb
mov
ss
into
or
je
xchg
cmpsl
sbb
stos
aaa
flds
push
pop
stc
into
jns
das
test
sbb
test
outsl
lds
cmp
adc
inc
lret
sub
jecxz
mov
jg
adc
mov
push
mov
pop
sbb
mov
push
mov
rolb
and
mov
mov
pop
jge
and
sbb
ficoms
subb
jle
movsl
adc
cwtl
fcomi
popf
jns
mov
push
and
add
xchg
ds
faddl
push
push
les
orb
jp
mov
add
xchg
mov
inc
mov
push
ret
les
shrl
sahf
push
dec
lahf
mov
aaa
sbb
push
lock
pop
xor
lds
in
jmp
push
movsl
arpl
dec
ret
or
hlt
leave
jg
sub
insb
cmpsl
mov
xchg
xor
dec
mov
test
pop
and
fpatan
and
out
pop
sbb
mov
xchg
pop
push
xchg
mov
mov
stc
jecxz
rsqrtps
cmp
mov
inc
shlb
loop
cmp
xchg
inc
mov
pop
test
jge
das
mov
addl
clc
xchg
jmp
mov
sbb
adc
ficomps
push
lcall
lds
xor
jbe
dec
and
add
adc
sbb
cmpl
fisubrl
and
movsl
lahf
mov
nop
popl
es
in
xchg
movlhps
cmp
repz
pop
pop
test
dec
cmpsl
mov
sti
rclb
loope
pop
sub
frstor
sti
iret
jp
xchg
out
pop
pop
out
push
ds
sbb
andl
jns
pusha
add
mov
scas
pop
scas
sub
stos
and
das
mov
jno
xchg
clc
adc
dec
xor
add
repnz
rclb
xchg
jmp
shl
push
ljmp
jge
adc
mov
fbld
sar
popa
jns
ds
inc
fs
add
push
iret
insl
mov
push
mov
adcb
sub
test
push
jecxz
xchg
xchg
cmp
scas
imul
pop
xor
ja
mov
lahf
mull
rclb
fdivrs
adc
sub
cltd
and
test
push
xor
adc
repnz
cmp
aam
sub
mov
dec
js
xor
cwtl
repz
fucomip
mov
sbb
js
call
sub
les
and
and
jo
hlt
fbstp
xchg
loopne
stos
mov
adc
jle
clc
daa
adc
sbb
aam
jmp
push
mov
mov
xchg
repz
pop
or
cltd
out
test
movsb
mov
lods
inc
call
jmp
inc
rorb
pop
push
fisttpll
in
push
mov
fst
mov
mov
xor
ret
push
and
cmc
pusha
cmp
ret
fxch
cmp
ret
out
aad
daa
ror
sbb
mov
es
stc
pop
push
lds
filds
stos
and
nop
mov
or
cwtl
cwtl
or
adc
movsb
ret
pop
mov
xchg
mov
mov
push
std
mov
xor
cs
adc
lcall
xchg
adc
push
rcrl
xor
mov
pop
imul
xchg
loop
mov
mov
add
inc
mov
cwtl
movb
jns
jecxz
mov
push
xor
iret
int
stc
mov
iret
cmpsb
push
cmp
cmp
push
jne
aam
jmp
inc
mov
repnz
cmp
mov
pop
std
lea
leave
test
ljmp
sbb
icebp
pop
and
ljmp
xchg
idivl
mov
cmp
jge
or
shll
lahf
mov
mov
icebp
push
dec
pextrw
inc
outsb
cmpsl
jge
mov
cli
cld
nop
scas
sbb
dec
insb
push
jnp
xchg
addr16
cmc
pop
es
cwtl
xchg
jo
inc
adc
and
and
adc
fsubr
and
or
mov
xor
outsl
test
cltd
pop
out
xor
call
pop
mov
aaa
xchg
fdivl
imul
ret
push
repnz
mov
or
rcr
into
lods
ja
call
inc
insb
or
and
mov
pop
mov
mov
xlat
sub
ret
in
adc
das
pop
mov
lock
out
shll
roll
jle,pt
pop
mov
dec
pushw
inc
out
mov
roll
jbe
lds
je
adc
mov
scas
pop
leave
mov
push
ds
pop
push
mov
xor
int3
xchg
push
adc
jge
dec
inc
xor
adc
xchg
ret
mov
lea
mov
adc
inc
das
xor
mov
mov
pop
xchg
push
arpl
call
jae
jnp
sub
cmp
outsl
rorl
insl
jp
ja
cmpsb
cmp
xor
mov
fldt
dec
fcomip
push
ret
insb
aaa
subb
repnz
push
loope
jle
clc
push
cmp
dec
adc
lcall
int
insb
mov
aad
mov
das
flds
jbe
test
jo
sub
inc
push
mov
cmp
lock
cmp
nop
push
and
insb
les
scas
lret
dec
jo
add
and
aad
aam
push
imul
add
adc
xor
pop
sub
fcomps
outsl
rorl
out
test
js
jns
mov
add
jge
sbb
test
sbb
sbb
or
das
sbb
rorl
add
and
push
sub
gs
outsb
out
cmp
imul
add
inc
push
clc
roll
push
pop
test
dec
jge
cmp
cmpsl
dec
or
or
inc
pop
jbe
leave
repz
push
adc
pop
jp
push
mov
adc
mov
lea
insb
sahf
test
nop
sbb
or
sbb
and
xchg
mov
xchg
add
push
dec
loop
sub
rorb
cmpsl
out
pop
pushf
or
scas
sahf
iret
jne
int
das
pop
push
pop
fidivrl
inc
call
xorl
push
push
cmc
jmp
fnstenv
or
cld
jae
scas
jns
mov
int
or
pop
into
into
cwtl
shrb
pop
outsb
mov
xchg
mov
add
pop
lds
bound
adc
lret
jmp
pop
and
sub
mov
inc
out
subb
xchg
in
iret
jl
push
movsl
mov
les
ret
xchg
psrlw
or
test
cmp
xchg
call
jae
inc
pushf
push
repz
xor
lret
mov
jle
inc
fwait
jg
jnp
jae
mov
lret
and
mov
push
jo
adc
push
jp
sub
xor
and
or
pop
pop
lock
insb
inc
mov
inc
clc
mov
and
mov
in
jae
or
mov
sbb
push
mov
data16
scas
push
cmp
jl
xorl
test
dec
xchg
push
add
std
mov
or
mov
sbb
add
stos
loope
cmpsb
subl
cmp
cmp
fisttps
movsl
jo
jg
fistl
sete
lret
inc
sti
jge
xor
mov
jle
fwait
mov
std
jg
mov
jns
add
cld
jb
lahf
outsl
jno
les
sar
xchg
and
mov
imul
ficompl
lods
pop
test
std
aas
sub
je
mov
xchg
cmpsb
mov
xchg
mov
mov
or
das
aam
jecxz
fidivs
jge
sub
fidivrl
mov
mov
sbb
gs
jg
std
jae
in
repz
fdivrl
inc
inc
cld
cmc
addl
mov
mov
and
pop
cmpsl
je
movsl
xchg
push
shlb
xor
xchg
out
js
inc
ret
repz
test
test
push
jae
pop
cmc
andl
dec
cwtl
out
and
call
repnz
das
mov
test
dec
aam
int
int3
push
mov
js
cmp
mov
cmp
mov
jle
outsb
out
imul
data16
movsb
das
pop
es
std
jne
adc
lock
sbb
hlt
cld
mov
test
lea
out
push
in
xor
add
loopne
push
sub
add
jo
sbb
test
lret
jge
push
mov
call
xor
cmp
xchg
in
mov
incb
int
pop
pushf
out
icebp
jg
add
sub
cmp
mov
aas
ljmp
xchg
lock
gs
sub
mov
mov
call
add
out
sub
add
clc
xchg
mov
fisubrl
pushf
push
push
inc
mov
push
and
pushf
cmc
push
sub
pop
xchg
jmp
adc
xchg
xchg
mov
scas
xchg
stos
test
push
pop
nop
sbb
ljmp
xchg
sub
sub
scas
mov
mov
gs
add
mov
imul
sarb
out
das
mov
dec
cmpsl
or
or
insl
jge
shlb
cltd
mov
push
add
ljmp
mov
sbb
push
xor
xlat
ret
lods
cmp
or
bnd
insl
ret
mov
and
push
lods
rorb
dec
shll
testb
test
sbb
adc
inc
das
jnp
add
je
popa
pop
imul
add
push
and
gs
sbb
push
sahf
shl
mov
popf
xchg
xchg
lret
adc
mov
xchg
and
mov
ret
in
add
lea
shlb
fldl
stos
dec
fisttpl
xchg
jl
das
mov
ljmp
push
xchg
imul
cmpsb
pop
or
xor
xor
fiaddl
or
mov
call
aam
add
pop
ja
pushf
push
adc
xor
xchg
enter
rclb
cmpsb
xchg
mov
pop
or
ds
bswap
add
mov
push
pusha
repnz
or
adc
es
dec
xchg
rclb
push
mov
sub
xchg
mov
lods
imul
lock
mov
or
mov
imul
mov
mov
jmp
pop
and
lods
jecxz
xor
test
sarl
mov
sub
sbb
inc
xlat
add
cmp
bound
dec
into
je
adc
push
cwtl
push
inc
add
loope
push
out
repnz
int
jecxz
nop
shrl
mov
and
mov
cld
shr
inc
and
adcl
faddl
push
cmp
sub
leave
jne
dec
mov
cmpsb
and
movsl
mov
mov
je
xchg
and
push
xor
or
mov
jne
or
hlt
sbbb
xor
fs
cmpsl
inc
xchg
jnp
xor
lret
cmp
xchg
outsb
filds
and
fistpll
mov
fsubrs
sub
std
loopne
lds
insl
add
aaa
nop
in
xchg
ja
push
cmp
cwtl
int3
sub
mov
sbb
mov
fimuls
rcr
dec
inc
xor
rol
ficoml
pop
jae
int3
lods
xchg
mov
cmp
and
lods
and
test
rclb
leave
imul
aas
xlat
adc
inc
sub
out
mov
sub
jle
add
pop
xor
jmp
dec
dec
sti
int
push
pop
mov
or
cmc
mov
jmp
mov
je
std
rcr
xchg
sub
jno
jo
in
je
xor
cmpsb
xchg
pop
aas
mov
xchg
add
xchg
mov
loopne
jp
arpl
push
add
adc
push
lock
push
cld
jle
xlat
stc
jmp
mov
lea
imul
js
inc
fdivl
mov
int3
push
lahf
push
mov
cmp
bound
rsqrtps
mov
jb
mov
cmp
mov
push
mov
xor
mov
and
push
sub
push
lds
loopne
cmpsl
xchg
push
xchg
push
jns
mov
out
xchg
jae
decl
cmp
dec
test
adc
push
add
out
push
jb
cmpps
daa
mov
sub
and
xchg
or
imul
shrb
mov
in
addr16
xor
sub
dec
lcall
es
push
movb
setbe
inc
repz
mov
dec
sub
mov
loope
out
outsl
fnstsw
sbb
aad
fmull
ror
shlb
sahf
into
jecxz
push
movsl
cmpb
sub
repnz
inc
scas
lds
mov
stos
pop
cmpsb
in
jmp
jl,pt
pop
xor
int3
mov
rcrl
dec
add
test
mov
adcl
push
xchg
inc
jg
jge
sbb
test
fsubs
pop
popf
rcrl
in
ss
imul
jbe
jo
sbb
dec
dec
and
pop
cmp
lret
inc
cmp
iret
mov
adc
insl
cmpsb
xor
shlb
xorl
inc
jo
cli
pop
xor
mov
sbb
cwtl
cs
imul
xchg
mov
mov
sbb
xor
xchg
xlat
shlb
xor
lret
inc
xchg
hlt
push
add
xlat
jecxz
repz
cmc
iret
mov
test
xor
test
adc
push
mov
jne
mov
outsb
repz
je
lcall
dec
mov
sub
push
fsubrl
testb
push
pop
mov
aas
ja
sbbl
add
pop
loope
shlb
sbb
mov
sbb
mov
test
stos
ds
jne
aad
lea
rorb
cltd
and
push
mov
jns
push
xor
test
daa
das
push
je
cmp
or
popa
pop
cmp
sbb
push
lods
out
mov
outsl
bound
movsl
pusha
ret
mov
outsb
aad
jae
and
pop
inc
hlt
mov
ret
mov
jmp
mov
cld
mov
and
loopne
xchg
jne
loop
out
ret
jg
xchg
loope
ja
mov
adc
push
sbb
inc
inc
fldcw
lods
pushf
out
mov
insl
pop
inc
push
cmp
repz
or
mov
mov
pop
inc
mov
leave
aam
pop
shrb
push
ret
add
mov
jns
sahf
lds
pause
xchg
dec
fldcw
js
iret
xor
sbb
mov
cwtl
sbb
xchg
out
iret
mov
jp
inc
out
clc
jge
jne
testl
push
rorb
jg
jne
add
jge
je
jb
add
jb
xor
imul
jmp
adc
pusha
lcall
arpl
ffree
imull
inc
push
pop
jo
push
pusha
test
xor
mov
mov
xchg
in
xchg
xchg
pop
push
inc
popf
inc
sbb
fldl
cmpsb
in
mov
sbb
pop
sbb
cmpsb
jecxz
mov
push
cld
adc
idivb
or
sbb
shrb
dec
xchg
xchg
es
mov
xor
inc
lret
push
mov
pop
lock
mov
inc
shl
out
dec
lret
movl
push
outsb
dec
mov
sub
fcmovbe
cmp
mov
xor
xchg
sbb
cmpsb
bnd
mov
push
hlt
sahf
sub
push
add
aam
jmp
jbe
cmp
xchg
xor
push
movsl
push
xlat
out
adcl
add
push
lods
out
lret
mov
fs
scas
leave
and
pop
xor
add
ss
sub
retw
push
or
fsubr
mov
sbb
imul
adc
aam
loopne
push
sarb
mov
mov
push
mov
insl
jae
ret
and
jo
sbb
sbbl
sub
fdivs
mov
or
imul
mov
mov
mov
rcrb
adc
mov
mov
mov
xchg
sub
adc
out
neg
test
into
adc
mov
jge
inc
sbb
xor
sti
push
pop
mov
sbb
mov
xor
std
add
cmp
pop
jmp
adc
lock
clc
or
dec
lea
jbe
fwait
out
clc
jle
loop
adc
sub
inc
xchg
mov
shrl
js
xor
ja
adc
syscall
lahf
xchg
negl
addr16
ret
pop
xchg
push
cltd
push
jne
insb
popf
jg
push
xchg
pop
iret
out
popf
lea
insb
fcmovnbe
aad
enter
add
sarl
pop
dec
in
xchg
popa
test
mov
sbb
jmp
clc
xor
inc
pusha
or
mov
jmp
popf
cltd
sub
mov
loop
je
cmp
loope
jne
in
push
add
lea
arpl
or
lods
sbb
in
out
and
jge
jecxz
and
faddp
mov
ja
jmp
add
cld
ds
fimull
or
sbb
jecxz
cmp
or
js
xor
dec
stc
shl
int
push
aam
adc
adc
in
shll
pop
sbb
lcall
ss
fnstsw
jecxz
imull
jecxz
pop
sub
adcb
movsl
pop
adc
xor
inc
adc
in
mov
xchg
pop
xchg
daa
dec
jo
push
fistl
jmp
xchg
and
cmp
fst
int
leave
cli
out
pop
add
insb
pop
sar
repnz
pusha
mov
sub
push
xchg
and
xchg
dec
mov
addb
insb
mov
cmp
or
jne
pop
jge
push
cli
and
loop
push
push
mov
inc
mov
push
pop
xchg
push
fsubrs
inc
cmp
cld
stos
in
les
rcr
notl
mov
sbb
aas
loope
movl
leave
push
movzwl
fimull
push
mov
popf
and
jp
add
loope
inc
lret
shl
and
stos
sbb
mov
mov
cmp
mov
xchg
xchg
inc
pusha
in
cwtl
jae
inc
call
gs
mov
test
sub
cs
clc
jae
mov
popf
jo
mov
pop
push
frstor
cmpsb
mov
fldt
cmp
repnz
sbb
sarb
lcall
fsts
mov
push
shlb
push
iret
mov
lret
pop
jns
dec
mov
and
add
loope
pushf
jns
cwtl
push
loopne
out
cmpsb
fildl
inc
cmpb
jb
fsubp
mov
sub
jno
popa
decb
push
and
sub
dec
decl
add
sub
xchg
rcl
or
cmp
inc
sub
cmc
fisubrs
lret
pop
jmp
sub
mov
in
pop
xor
jnp
repnz
js
jbe
or
mov
push
jecxz
mov
sbb
push
lea
push
jb
xor
jne
inc
sti
inc
mov
test
push
rorl
cmpl
push
push
leave
mov
cmp
dec
mov
fsts
pusha
out
jp
test
cs
fcoms
sar
jbe
in
xchg
xor
cmc
lret
push
cwtl
int
es
lds
sti
icebp
xchg
aas
push
aas
aam
jecxz
push
push
push
xchg
xchg
jae
inc
lods
jl
xchg
add
inc
sti
adc
dec
pop
add
sbb
in
mov
and
push
pop
push
push
test
add
dec
fadd
push
imul
out
cmp
in
xchg
mulb
or
test
or
adc
decb
in
lds
add
mov
cmp
in
adc
dec
mov
inc
mov
mov
inc
xor
and
mov
jmp
push
aas
mov
in
push
scas
das
out
sahf
dec
test
mov
mov
xor
sti
and
cmpsb
or
mov
inc
sar
fisubs
fldlg2
lcall
sbb
iret
sub
pop
inc
fildl
jno
imulb
pop
pop
jno
sti
cmpsb
jp
jp
dec
pop
repz
hlt
fcoml
and
xchg
jbe
xchg
repz
mov
insb
mov
xchg
shl
adc
xchg
push
dec
jne
sti
insb
test
push
cld
aaa
or
test
repz
push
idivb
xchg
int
push
sbb
int3
sarb
decb
xchg
mov
and
cmpsl
jne
dec
scas
push
or
icebp
or
iret
mul
inc
and
lds
xlat
lahf
jae
jmp
insb
lret
jmp
inc
mov
mov
cs
jp
scas
in
mov
enter
shrl
neg
push
sbb
push
loop
enter
or
and
add
shll
out
imul
dec
nop
pop
dec
daa
adc
push
dec
jne
dec
xor
daa
pop
adc
dec
scas
jmp
out
inc
fstps
xor
pop
into
scas
mov
sahf
aam
sub
mov
xchg
or
out
inc
in
dec
sub
pop
adc
xchg
subl
and
sub
lahf
cwtl
pop
mov
insb
adcb
and
xchg
into
es
fsts
cld
add
test
pop
cmpsl
mov
data16
pop
imul
clc
or
mov
and
mov
pop
clc
pushf
pop
cmpsb
inc
test
fisubl
push
pop
popa
out
lahf
in
xchg
or
aam
popa
mov
push
pop
cmp
inc
hlt
cmpsb
sarb
cmp
ss
rcr
mov
popf
mov
mov
add
cmp
pop
roll
sahf
xor
mov
mov
sti
mov
push
dec
jo
mov
call
push
xchg
stos
inc
int
sarl
pop
or
mov
pop
cmp
iret
stos
mov
xchg
imull
adc
test
and
dec
in
stos
je
xchg
lea
xor
mov
mov
jo
cltd
mov
mov
inc
test
jmp
mov
inc
mov
ret
pop
popa
cmc
xor
repz
outsl
pushf
das
mov
cmova
in
and
add
add
and
mov
insl
pop
std
pusha
xchg
xchg
or
movsb
inc
add
dec
lds
mov
mov
repnz
push
sbb
aam
ret
add
or
mov
cmp
shl
test
jne
mov
sbb
nop
roll
sbb
in
dec
ret
ds
push
xor
insb
pop
lods
loope
mov
pop
inc
mov
xchg
in
std
test
pop
sub
lret
and
or
sbb
push
xchg
fcompl
xchg
push
lret
add
sub
fldl
jnp
inc
ljmp
sub
inc
lcall
movsl
pop
cmpsb
add
in
push
cmp
rcrl
dec
cmp
cmp
loop
movsb
mov
xchg
jns
and
jg
and
adc
push
addr16
nop
mov
cmpsb
adc
hlt
adc
cmp
jns
jns
mov
sub
jbe
xchg
outsb
push
jl
jecxz
stos
out
lcall
mov
movsl
jnp
mov
cmc
test
sbb
dec
xchg
pop
pushf
ror
out
lock
inc
push
pop
outsl
shlb
sahf
ja
push
pop
sub
push
test
loope
int
fdivs
jb
movsl
cmp
inc
mov
push
popfw
mov
adc
loope
fwait
pop
mov
sub
jbe
js
mov
dec
mov
jle
xchg
and
mov
ret
push
or
jb
mov
arpl
loope
and
cmp
push
push
es
movsl
repz
pop
pop
xor
sub
gs
xchg
pop
fs
inc
cmp
clc
std
loop
clc
ds
push
scas
lods
push
jle
xchg
xchg
sub
pop
orl
test
xchg
loopne
loope
jg
daa
mov
dec
mov
hlt
hlt
push
pop
aas
pop
xor
imull
nop
push
push
jae
and
push
andl
cmc
test
popf
pusha
subb
addr16
out
adc
mov
push
fistpl
orl
mov
daa
loop
fmuls
mov
fisubl
sub
shlb
inc
push
xor
push
xrelease
jns
push
les
push
inc
fs
adc
in
push
imul
xchg
lret
add
pop
sbb
mov
jne
mov
push
or
add
jl
in
or
jbe
mov
jns
jbe
cwtl
and
in
sub
mov
cmp
loopne
imul
shll
sub
and
xorb
loope
lret
inc
outsl
xchg
cmp
je
pop
cmp
inc
adc
dec
add
xlat
or
add
mov
subb
mov
sub
mov
das
or
iret
and
mov
and
es
cld
mov
lods
insl
push
mov
mov
es
mov
add
xchg
and
hlt
scas
lods
sbb
or
xchg
mov
lret
mov
int3
sub
out
test
in
stos
aaa
or
pop
sbb
mov
hlt
pop
stos
stc
add
iret
out
fldenv
cmp
push
js
add
or
inc
and
or
jns
push
xor
sbb
stc
scas
jbe
shl
sti
xorb
mov
cmp
dec
in
push
cld
loopne
shll
xchg
push
pop
fnstenv
fwait
cld
mov
out
stos
pop
loopne
aad
emms
mov
jecxz
xchg
scas
inc
pushf
lods
insl
and
sbb
dec
loope
jo
xlat
jae
imul
push
sub
add
sub
ljmp
push
mov
jge
sbb
dec
pop
pop
sub
orl
bound
jecxz
shl
popa
bound
icebp
and
call
cmp
in
pop
daa
out
mov
pop
jl
pop
mull
cmc
outsb
aaa
repnz
mov
in
mov
sub
test
test
sub
in
and
test
jge
inc
pop
xchg
push
mov
push
mov
fimull
dec
in
cmp
arpl
add
shlb
nop
ret
ret
push
fisttps
ret
lock
in
std
std
popa
mov
sub
sub
scas
imul
lahf
push
sub
push
jae
or
lret
jb
popa
adc
or
sub
shrl
pop
lret
pop
es
fnstenv
data16
mov
movsb
mov
sbb
sbb
cld
fstpt
es
jne
adc
enter
movsb
jg
jnp
test
jp
mov
in
pop
mov
add
call
pop
mov
and
xchg
mov
push
push
arpl
je
mov
dec
je
pop
movd
mov
cmpxchg
and
cld
inc
in
icebp
and
stc
cli
cmp
add
aam
daa
inc
sahf
jbe
pop
jbe
idivb
lock
pop
mov
addl
stos
dec
cmp
movsl
push
pop
pop
push
pusha
add
sahf
inc
mov
fldcw
xlat
push
out
jns
jl
rcr
or
mov
xchg
subl
mov
xchg
sbb
stos
sbb
sub
lahf
mov
mov
sbb
cmp
sbb
lret
aad
or
cli
pop
push
adc
cmp
lods
inc
mov
pop
inc
mov
lock
push
int3
incb
add
pop
loop
popf
lock
mov
mov
jo
in
clc
imul
mov
stc
lock
mov
or
adc
mov
jg
and
pop
pop
stc
loopne
scas
lds
lahf
lods
cmpsb
sbb
arpl
cmp
div
imul
adc
adc
jle
jnp
adc
outsb
mov
popa
dec
insb
mov
pop
jae
mov
leave
xchg
xor
inc
call
push
xchg
scas
loopne
std
cmp
xchg
sub
sbb
roll
lcall
mov
sbb
test
push
sub
loopne
mov
xchg
in
gs
sti
into
test
repz
cmc
lcall
out
jne
cmp
imul
sub
in
jo
outsl
pop
mov
das
insb
mov
vpackuswb
pop
mov
jo
shl
cmp
loop
xor
jae
cwtl
aas
inc
cs
add
xchg
aam
lock
lea
or
sub
ret
mov
mov
or
jns
mov
fisttpl
jp
ds
mov
inc
push
push
mov
sub
jge
add
fimull
push
ret
inc
cmpsl
movsl
test
notl
int3
fwait
push
aaa
cmp
dec
mov
mov
cmp
lret
out
fbstp
pop
push
ja
shrb
inc
or
daa
test
je
into
cmpsb
add
pop
gs
xor
pop
sbb
mov
lds
in
adc
sub
add
mulb
and
lret
daa
iret
add
cmp
xor
and
lcall
dec
mov
dec
fwait
fwait
hlt
and
lea
adc
ds
repz
mov
mov
lcall
add
cld
cmc
mov
call
pop
es
sbb
scas
pop
mov
inc
jnp
push
push
pop
push
pop
mov
mov
out
ret
jnp
xchg
movsl
pop
cmp
push
sub
jl
jg
push
insb
add
std
mov
dec
jmp
mov
sbb
jmp
inc
jmp
xor
out
movsb
in
data16
mov
and
mov
sbb
lret
jmp
mov
and
arpl
fldcw
mov
movsl
andl
push
jmp
test
sub
stc
mov
cld
popa
hlt
lock
jge
sub
jmp
sub
xchg
daa
subb
je
aad
xor
andb
loopne
jno
stos
clc
mov
push
gs
test
add
sbb
loop
arpl
test
outsb
loop
sbb
inc
cmp
cltd
sub
repnz
aad
ret
lret
scas
inc
shl
mov
divb
mov
dec
pop
das
xor
movsl
aaa
jg
outsl
mov
in
adc
add
aad
pop
jp
iret
imul
mulb
cmpsb
lock
aam
shll
mov
fsubr
dec
adc
enter
cmp
mov
push
adc
or
je
das
pushf
sbb
shrb
notb
lret
jne
cmpsb
and
pop
rcll
lcall
pop
adc
aaa
mov
and
popa
xor
or
pusha
js
movsl
add
sub
test
fiadds
iret
dec
add
sub
mov
fs
cmp
jno
add
and
sub
cmpl
add
out
jge
mov
rclb
imul
jno,pn
movsl
inc
lahf
add
push
xor
aad
mov
es
pushf
outsb
loopne
int
sahf
push
adc
mov
dec
and
adc
add
shlb
and
test
sub
iret
repnz
lahf
inc
sbb
insb
jns
and
sahf
bound
int
xchg
add
sub
sti
inc
xchg
push
outsb
xor
xchg
xor
rcrb
enter
in
adc
adc
fadd
out
shlb
push
fldt
insb
mov
out
push
pop
add
jo
mov
mov
aad
ja
daa
xchg
and
pop
or
jmp
dec
incl
mov
fisttpl
mov
and
jg
jl
xchg
sahf
mov
push
pop
mov
add
pop
sarl
push
add
scas
mov
test
loopne
push
and
jg
cmpsl
adc
pop
sbb
sub
fmuls
adc
in
rcl
xor
mov
dec
cld
cwtl
loope
iret
arpl
faddp
or
lret
iret
data16
sbb
faddl
push
cli
mov
lock
fldenv
aam
fsubs
inc
pop
pop
lds
mov
scas
lahf
adc
sbb
push
pop
cwtl
int3
pop
jl
ret
push
lahf
push
aas
out
std
or
add
xchg
xlat
dec
jge
dec
xchg
outsb
xchg
cmp
push
mov
and
adc
sub
in
dec
out
inc
sbb
movsb
das
lods
test
cmp
sbb
push
cmp
mov
mov
popf
xor
add
ret
jb
sub
pop
add
pop
mov
sub
mov
testl
sbb
or
js
or
leave
into
sub
lahf
pop
mov
push
lods
mov
jl
aad
into
lahf
fsubrs
stos
dec
sbb
loope
dec
inc
leave
test
lahf
gs
adcb
adc
sub
stc
je
mov
pop
shrb
and
roll
sbbl
lahf
lret
cmpsb
sub
adc
mov
and
inc
mov
rcll
mov
pushf
push
xor
push
push
cwtl
jns
mov
shl
sbb
mov
stos
add
and
cmpsl
ds
pop
sbb
inc
std
and
stos
push
xchg
enter
repz
dec
out
mov
adc
cmp
sbb
sbb
xor
mov
stos
scas
addr16
adc
jl
sbb
and
jb
xchg
popf
ret
adc
cwtl
cltd
or
adc
mov
sahf
test
aaa
rcr
or
mov
std
mulb
in
stos
jbe
aad
sbbb
push
xchg
and
mov
xchg
push
lea
test
mov
inc
dec
subl
xchg
subl
adc
in
pop
dec
aas
loop
xor
negl
cmp
inc
or
mov
mov
int
out
xor
mov
jne
inc
xor
into
xchg
xlat
push
cltd
or
int
jle
mov
jmp
adc
jmp
mov
lods
lods
mov
inc
pop
mov
pop
mov
mov
subl
movsl
ljmp
and
rcrl
ret
sub
enter
leave
es
fisubrs
mov
xor
pushf
push
or
or
add
cmp
icebp
push
adc
xchg
rorl
scas
clc
xchg
sbb
xchg
adc
lret
das
inc
and
inc
push
cmp
xchg
loop
mov
jnp
sbb
sbb
xchg
out
ret
mov
lret
scas
xor
bswap
sub
xchg
add
test
mov
jecxz
testl
and
nop
xchg
in
mov
inc
scas
xlat
rorl
dec
mov
aad
sub
mov
pop
xchg
fadds
dec
xor
push
pop
sub
push
int3
dec
cmp
mov
mov
enter
mov
pop
xchg
js
xchg
add
adc
lods
sti
jnp
gs
jns
or
add
mov
sub
xchg
gs
out
icebp
inc
insl
cmp
repz
shrb
pop
jp
or
mov
cli
out
cmp
repnz
pop
sub
pop
popa
sub
pop
fucomp
mov
dec
lea
jbe
jb
xor
jns
xor
pop
mov
ss
push
test
mov
mov
xorb
into
add
xor
mov
and
push
and
or
sbb
jne
or
lods
adc
cmc
cmp
cmc
xchg
sub
jl
and
push
lods
dec
sbb
pop
push
pop
sbb
pop
inc
rolb
pop
out
insb
push
sub
fwait
push
mov
lret
mov
ds
or
cmp
and
outsl
mov
roll
jno
bound
lret
mulb
add
jle
cwtl
cmpsl
bound
aaa
sarb
cmp
mov
jmp
mov
push
sahf
rolb
clc
add
mov
stc
push
pop
push
mov
std
mulb
add
dec
xchg
mov
ss
sub
hlt
out
cs
iret
push
cmp
cmp
repnz
mull
jnp
cld
inc
stc
mov
sbb
test
arpl
sub
cmc
xchg
mov
insb
jae
cmp
cli
xor
lcall
fcomp
mov
insl
mov
xchg
repz
mov
dec
inc
stc
dec
push
xchg
sub
jmp
test
imul
mull
add
mov
ret
mov
sbb
sub
rcll
loop
inc
pop
or
jle
neg
imul
je
jb
fistpl
sti
inc
xlat
push
push
aas
shl
pop
and
sti
cwtl
repz
lds
xchg
adc
das
pop
mov
flds
sbb
cs
xor
leave
jmp
lods
popf
leave
decl
mov
mov
test
mov
int3
mov
xchg
dec
jg
add
cmp
sbb
scas
add
add
shll
xlat
aaa
lret
arpl
aad
imul
sahf
cmp
add
push
das
jecxz
mov
je
scas
mov
movmskps
xor
inc
sbb
fdiv
and
pop
mov
test
cmp
cltd
addr16
push
cmpsb
mov
mov
add
jno
stos
loopne
dec
adc
test
jns
out
rol
mov
sbb
out
lahf
lea
lcall
int
jg
xor
out
push
jb
adc
cmpsb
scas
movsb
mov
mov
adc
ss
sub
pusha
or
test
or
cmpsb
ss
cli
add
pushf
cs
inc
mov
aas
std
aad
inc
inc
mov
adc
cmp
into
mov
cwtl
iret
mov
dec
add
out
les
into
adc
nop
and
dec
add
sbb
or
les
inc
sbb
adc
mov
jmp
push
push
push
cwtl
sti
lea
mov
fxam
add
mov
cwtl
or
jo
ljmp
cmp
xchg
lcall
mov
jge
icebp
cmp
orl
mov
popf
mov
sahf
sbb
vpshufd
stos
push
xor
ret
fucomp
dec
ret
cli
xchg
inc
mov
ficoms
out
aas
and
xchg
and
in
jnp
inc
cmc
adc
pop
pop
cmp
lcallw
and
add
mov
or
lahf
popf
pop
ljmp
mov
hlt
cmp
call
arpl
add
stos
xor
int3
shll
jecxz
cli
sarb
loop
fdivs
xor
mov
movsl
out
inc
xchg
and
push
jb
repz
adc
pop
mov
push
jb
out
mov
outsb
adc
cmp
notl
cmpsb
xlat
repz
jle
inc
std
dec
xor
sti
sub
mov
ret
push
mov
sbb
push
xchg
push
inc
into
sbbb
sbb
lcall
sbb
adc
inc
inc
imul
int3
push
and
das
out
xchg
sbb
out
cli
out
aad
mov
xchg
inc
mov
pop
inc
jae
sbb
sti
jno
movsl
arpl
mov
xor
int
and
ficomps
xor
mov
push
pop
test
rol
and
push
pop
les
add
idivb
aad
xchg
add
dec
push
cmpsl
inc
stos
cmp
pop
push
dec
pop
ficoml
adc
mov
sub
jp
sti
xchg
cmp
sub
and
push
or
sbb
lock
mov
pop
sbb
decb
xchg
mov
push
inc
nop
or
mov
dec
bswap
loope
xchg
xchg
sahf
cs
lret
sbb
adc
mov
movsl
xchg
and
movsb
mov
push
jne
data16
fiaddl
xor
pop
daa
out
sti
mull
inc
sbb
lods
mov
mov
hlt
add
not
adc
test
dec
js
fwait
rcr
sbb
aam
add
and
sub
xchg
cs
jo
mov
jo
repz
lds
daa
jnp
enter
inc
es
jbe
lret
js
mov
adc
pop
arpl
test
imul
cmp
mov
cmc
fwait
push
mov
stc
xchg
scas
popf
fsubl
cmc
cwtl
mov
insl
leave
scas
and
les
mov
out
insl
ds
leave
pushf
push
push
add
mov
dec
cmp
cmc
pop
aam
scas
xchg
cmp
sbb
xchg
daa
cmp
imul
mov
mov
cli
data16
dec
add
mov
fstl
adc
xchg
cmpsl
add
mov
sub
lods
out
inc
bound
ds
pusha
sbb
jecxz
js
and
lea
jne
xor
pop
push
sbb
and
adc
insl
pop
jae
mov
sti
adc
push
or
out
or
loope
ljmp
mov
push
lret
sahf
shrb
jb
adc
pop
xor
movsb
aad
cmpb
lcall
mov
jne
dec
out
jg
inc
cmp
xor
cmp
les
jae
pop
xchg
push
das
int
push
mov
loope
aas
push
and
jmp
mov
imul
mov
imull
ds
test
in
dec
adc
jecxz
cltd
scas
cltd
dec
test
popf
sbb
clc
inc
pop
xchg
pop
pop
and
aad
negb
sub
xor
mov
fildll
dec
jmp
dec
testl
xchg
loopne
pop
mov
mov
jmp
xor
stc
int3
negb
xor
xlat
or
sahf
addl
pop
jl
ficoms
inc
inc
inc
inc
sub
fsubs
or
pop
ret
test
sub
iret
jg
shl
dec
dec
jno
aam
push
rcrl
sbb
and
or
xchg
xlat
mov
sti
hlt
mov
adc
popf
decl
sbb
sub
xchg
decl
push
ljmp
pop
lock
es
push
mov
mov
mov
cs
add
insl
fstpt
jmp
pusha
icebp
repz
jle
mov
cmp
jmp
ljmp
jnp
test
loopne
add
inc
js
push
jge
cwtl
cmp
mov
bound
aaa
adc
lret
xchg
loop
add
pop
cmpsb
outsb
dec
daa
pop
pop
mov
adcb
loop
xor
jno
fidivrl
xor
mov
enter
push
outsl
cli
sub
rcll
sbb
into
aad
imul
push
sub
mov
xor
adc
add
test
inc
push
push
call
mov
lods
sti
inc
ljmp
bound
push
aas
xlat
iret
cmpb
out
repnz
inc
mov
testl
inc
adc
subl
cmpsl
pop
adc
shl
xor
xchg
inc
std
add
lods
hlt
daa
pop
lret
dec
scas
in
xchg
add
pop
mov
mov
movsb
mov
dec
lds
faddl
pop
pop
outsl
sub
jl
mov
ja
js
add
mov
sub
je
or
fdivrs
jmp
scas
leave
in
jl
push
sbbb
stos
fists
pop
xchg
rcll
jnp
adc
aaa
jmp
xor
dec
rcl
das
push
fists
push
mov
lcall
add
push
mov
call
jo
pushf
cmp
dec
scas
sub
repz
push
out
add
xchg
cmp
dec
push
pop
daa
xor
testb
lea
sub
pop
pop
jl
pop
inc
jo
movsb
xchg
outsl
ds
inc
aad
popa
fmul
sbb
and
in
inc
in
psrlw
adc
sub
adc
popa
pop
push
xlat
jbe
out
jecxz
adc
icebp
insl
jns
pop
pusha
sub
push
xchg
and
jge
jns
xor
inc
push
es
mov
pop
and
xor
jae
mov
pop
cltd
mov
xchg
xchg
adc
sub
jne
lock
mov
mov
fdivl
push
fists
scas
jnp
pushf
pusha
xorb
cmp
ret
stc
mull
ret
cmp
push
mov
push
push
add
cmp
sub
js
and
and
dec
xor
push
sbb
pop
jp
jo
fstpl
mov
fwait
mov
lds
ret
xor
mov
or
test
bound
pop
push
pop
lcall
jo
aaa
bound
push
mov
xor
pop
push
cwtl
das
gs
adc
xchg
ficoml
xchg
arpl
jg
std
mov
pop
shlb
and
pop
jo
cmp
dec
mov
mov
repnz
inc
stos
aam
fs
icebp
jmp
pop
decl
fsubrp
mov
cmp
fs
fbstp
sbb
cmpsl
xchg
fdiv
inc
js
lods
je
pusha
dec
ds
pop
add
scas
in
cmp
mov
push
lock
pop
inc
enter
push
xchg
inc
mov
out
js
cmp
mov
call
shr
mulb
pop
loop
ud2
xchg
cld
sbb
movsl
push
decb
adc
cs
shl
adc
inc
push
xor
test
fstps
mov
lods
outsl
mov
mov
in
cmc
repz
imul
xor
push
out
out
lahf
or
adc
int3
pop
xor
push
std
lret
adc
dec
or
out
mov
inc
js
jmp
data16
cmpsl
rolb
and
inc
add
pop
add
popa
adc
fistps
sub
pop
sbb
mov
add
jmp
ds
sub
mov
jbe
cmp
loope
lods
popa
lret
adc
and
fsubp
std
and
mov
stos
dec
test
pop
outsb
mov
je
jge
lret
fstl
loopne
sbb
push
fstpl
jmp
lods
lods
mov
sub
inc
and
aad
arpl
pop
into
repnz
mov
sub
mov
mov
sbb
inc
sbb
and
mov
mov
adc
adc
mov
xor
leave
popf
movsl
addb
sub
or
push
stos
push
xor
sbb
add
insl
jae
ficoms
das
enter
dec
sub
shlb
mov
fnstsw
imul
pusha
lcall
lock
and
adc
xchg
xor
repnz
push
js
xlat
lock
mov
in
ds
pop
lods
mov
std
push
fsubl
xchg
or
push
cmp
arpl
lahf
xlat
xchg
shr
cmp
decl
pop
push
movsb
jl
leave
sbb
in
add
out
ds
fstl
bnd
lds
jmp
mov
mov
rolb
leave
mov
xchg
push
xchg
ja
add
inc
pop
pop
insl
in
pop
pusha
adcl
ficoml
movsb
sbb
adcl
push
add
and
test
jno
and
xchg
addr16
mov
in
stc
mov
adc
loope
mov
stc
cs
sbb
arpl
or
xchg
fcmove
cmp
jns
push
bound
jo
dec
add
addr16
mov
and
jne
mov
jne
das
pop
mov
clc
rcrl
and
insb
int3
or
loope
lods
add
fisubs
sbbb
pop
mov
sbb
xchg
cs
jle
pop
jge
sub
mov
sbb
ret
pop
sbb
mov
xor
cmpsl
xor
mov
or
inc
adc
push
sbb
fisttps
in
xchg
or
int3
adcl
imul
xchg
inc
xor
xchg
fs
iret
mov
or
mov
dec
sub
in
push
mov
xor
dec
push
lock
sti
mov
fs
xchg
pop
pop
xor
int
adcl
leave
lock
xlat
or
xlat
das
jmp
push
or
frstor
mov
sarb
pop
sti
xchg
idivl
and
out
es
cli
bound
jo
jmp
std
movsl
inc
jne
neg
stos
or
sbb
inc
stos
iret
add
lret
inc
mov
daa
fldcw
in
int3
mov
dec
test
push
xor
imul
loope
jle
sub
pop
cltd
mov
pop
push
xor
mov
leave
pop
mov
imul
ljmp
lea
aam
xor
xor
enter
xchg
push
fnstsw
hlt
lahf
int
and
cs
dec
sti
lea
adc
mov
xchg
fsubrs
push
inc
jp
imul
ja
les
jnp
mov
into
mov
push
sbb
cmc
fdivp
xchg
adc
mov
jg
bound
cwtl
ss
cmp
add
mov
leave
xchg
into
out
jl
lahf
imull
fdivrs
daa
xchg
sbb
jge
lret
xchg
pop
push
add
stos
mov
mov
push
test
cmpsl
or
ret
mov
in
jg
xchg
mov
cmp
xor
or
into
aas
push
orb
push
addl
sub
xlat
int
xchg
mov
cli
xor
stc
mov
popa
fidivs
pop
cmpsl
push
outsl
out
dec
jbe
push
test
push
pop
mov
mov
cld
push
enter
out
dec
js
pop
out
jmp
int
or
daa
insl
or
movsb
inc
arpl
mov
cmpsl
mov
cmpsb
nop
and
mov
mov
mov
xor
dec
pop
jb
or
push
mov
cmpsl
out
dec
rol
pop
adc
mov
clc
pop
fisubrs
cmc
shrb
jae
sti
outsl
xchg
push
pop
cmp
mov
ljmp
mov
lret
cli
pop
dec
push
ret
mov
mov
push
fisttpll
xor
jns
ficomps
sub
inc
xchg
dec
icebp
mov
testb
loopne
std
jnp
aas
fcmove
push
add
dec
add
sbb
shrl
mov
insl
jge
test
mov
and
cs
lret
lahf
sub
popa
aaa
jg
pop
xlat
jl
push
lahf
sub
hlt
pushf
or
cwtl
lds
mov
aad
flds
imul
inc
roll
push
mov
ret
aam
outsb
sub
cs
scas
pop
stos
and
jns
out
roll
cltd
inc
pop
mov
adc
js
or
es
rolb
lret
and
inc
mov
push
mov
aad
cmp
in
aaa
cmp
mov
hlt
les
cmp
mov
fidivrs
push
sub
mov
xor
insb
div
andl
xchg
lods
test
fcmovb
fimuls
mov
insl
ljmp
sub
push
into
mov
sbb
rorb
and
in
and
adc
jb
mov
lods
in
mov
pop
std
sbb
adc
in
lahf
cmpsb
push
fwait
ret
add
jne
in
bound
mov
cmp
daa
pop
xchg
shlb
push
xchg
out
cld
adc
rcrl
mov
dec
and
adc
outsl
cmc
mov
lret
popf
xchg
cwtl
jae
xchg
jge
inc
xor
jns
sbb
outsl
add
jne
inc
int
fiadds
and
movsb
jae
shlb
xor
xchg
mov
out
stc
sarb
cmc
dec
dec
or
fistpll
cmp
outsl
pop
xlat
out
mov
dec
jp
pushf
mov
cs
mov
mov
sub
xor
or
rol
add
dec
or
push
adc
js
addr16
mov
lret
xchg
icebp
cmpsl
xor
mov
in
sbb
lcall
xchg
in
roll
ret
das
popf
sbb
cmpb
lret
out
inc
inc
sub
rorl
pop
into
dec
xchg
jmp
sbb
mov
lods
into
fucom
and
xchg
push
add
nop
xchg
xchg
data16
add
sub
sub
sbb
loope
insl
lcall
inc
xor
jne
imul
lods
or
sahf
and
ja
enter
sub
mov
cltd
mov
aaa
push
inc
idiv
or
xor
pop
add
leave
sub
push
xchg
cmp
mov
into
mov
push
xchg
int3
ret
pop
xchg
xchg
fldenv
pop
shrl
push
or
adc
mov
cmpsl
pop
push
shrl
xorl
sbb
lcall
or
ficompl
xchg
sarl
mov
fdiv
movsb
push
ja
pusha
leave
push
push
pop
xor
pop
sub
fwait
test
fistps
jo
xchg
std
mov
inc
in
xchg
mov
and
in
fiaddl
je
jns
xchg
push
add
popa
adc
jae
cmp
pop
movsl
ds
mov
lods
mov
push
jns
sub
nop
mov
xchg
push
cmp
jae
call
pop
add
movsl
mov
mov
and
dec
ret
cmp
hlt
sti
cmp
xchg
icebp
das
xor
out
dec
xchg
adc
adc
cmp
loop
fwait
es
sahf
out
push
dec
js
xchg
aas
dec
sub
mov
jb
jl
fdivrp
push
lahf
pushf
rolb
push
mov
not
stc
push
ret
into
and
je
into
arpl
sti
repnz
shll
mov
mov
cmpl
push
push
xor
sbb
xor
sbbb
push
mov
loopne
lcall
jne
or
mov
cmpsb
pop
dec
adc
xchg
shll
sbb
cmp
jnp
cmc
pop
lock
f2xm1
imul
xchg
nop
outsb
js
jmp
jbe
sub
xor
mov
mov
xchg
es
int
jp
jne
stos
jb
sbb
jecxz
add
stos
push
dec
xchg
add
sub
cld
outsl
fstps
inc
jno
xchg
xchg
gs
adc
int
push
jge
lea
push
jp
pop
lods
xlat
push
sbb
test
push
sbbb
and
push
in
pop
imul
inc
out
and
lea
sbb
icebp
sub
ljmp
or
push
pushf
cmp
dec
ja
push
adcl
in
add
mov
sbb
clc
lock
cmp
stos
out
mov
mov
pop
jns
dec
daa
dec
jl
mov
mov
jns
jns
push
das
or
pop
mov
mov
mov
or
pushf
xchg
test
insl
cmpps
jecxz
in
in
xor
jg
repz
lock
repnz
js
js
mov
aas
dec
shr
cmp
enter
sub
and
pop
mov
cmp
pop
xor
loop
sbbl
pop
in
adc
sti
sub
into
and
lea
push
addl
enterw
ds
or
lds
jnp
lea
pop
mov
and
mov
popf
rolb
mov
outsb
pop
adc
xor
and
add
adcb
sub
and
cs
lahf
dec
mov
mov
mov
pushf
dec
adc
pop
ja
sub
pop
jb
mov
jg
fnstcw
xchg
fisttps
std
inc
stos
shlb
mov
sub
push
mov
lods
jbe
insb
jnp
inc
or
inc
repz
sub
lcall
mov
and
fbstp
mov
pop
jl
shlb
or
mov
arpl
mov
jbe
inc
into
adc
xchg
xor
xchg
rorb
jle
shll
cmp
insl
mov
xor
insb
addr16
or
push
adc
in
pop
loop
mov
push
aam
dec
cmc
into
mov
vpmacsswd
inc
es
push
mov
das
rcll
fs
xor
das
jecxz
test
dec
xchg
mov
in
jae
out
jo
sbb
fisubrs
arpl
stos
cmpsw
ljmp
and
ss
fwait
insl
pop
std
outsl
lods
in
daa
dec
in
in
and
xchg
in
mov
xchg
xor
aaa
lods
sarb
mov
cmpsl
imul
popf
mov
mov
jns
sarb
ja
xchg
adc
cld
data16
push
jbe
sti
push
in
pop
ret
xor
popa
divl
and
adc
dec
xchg
xor
xchg
cmpsb
add
out
and
aam
rclb
xchg
into
push
sbb
xor
and
inc
or
inc
testl
fsubs
int
cld
into
stos
cmpsb
sub
xor
loop
sub
mov
sbb
addb
call
icebp
inc
sbb
mov
add
add
inc
mov
leave
nop
movsb
gs
inc
movsl
cld
push
xchg
lock
xchg
or
test
popf
lret
lret
out
xchg
mov
test
mov
cmp
call
and
xchg
or
outsb
lcall
mov
sub
incl
or
xchg
pop
cmp
aas
dec
push
mov
nop
arpl
mov
in
xlat
or
into
xchg
cld
xchg
test
jl
movsl
popa
xlat
ror
aam
mov
pop
arpl
inc
mov
int
dec
scas
xor
mov
mov
jge
xor
or
jno
stc
dec
inc
add
sub
out
inc
jb
in
iret
xor
sub
jge
mov
cld
out
test
je
sub
adc
icebp
or
jl
in
lahf
hlt
jbe
mov
fdivs
xor
inc
gs
aad
lahf
sbb
push
repnz
popf
shl
cld
dec
xchg
jmp
movb
and
fistpll
shrb
sti
mov
mov
mov
dec
jmp
fwait
mov
adc
and
pushf
in
push
jo
cmp
icebp
stos
mov
addb
and
xor
test
or
arpl
std
jl
nop
sub
or
dec
and
shll
push
jp
inc
xor
inc
loopne
jge
push
jmp
mov
mov
cltd
enter
scas
push
mov
inc
and
pop
adc
mov
dec
mov
popa
pop
and
push
add
bound
mov
mov
aam
inc
sbb
jecxz
lds
inc
lret
push
add
push
not
cs
sar
aam
xor
pop
sarb
dec
leave
popa
stc
mov
lcall
testl
mov
jmp
aas
and
in
outsb
outsl
xlat
jg
gs
pop
add
int
jo
push
add
push
dec
lds
sbb
jne
push
scas
or
cmp
sub
outsl
call
mov
loop
stc
cmp
xlat
mov
out
in
push
into
pop
or
and
mov
mov
test
jnp
pop
fcoml
cwtl
pop
into
or
jmp
xor
aas
pop
mov
pop
pop
or
ljmp
outsb
loop
or
jmp
push
nop
idivl
les
rorb
jge
inc
mov
stos
and
push
cmpsl
cli
rorl
adc
and
scas
shl
add
inc
mov
int3
cli
sahf
sub
push
fwait
mov
push
faddp
mov
add
cmp
push
fnop
pusha
jp
mov
sub
cs
ffreep
cwtl
xor
mov
cli
out
add
sub
in
adcb
lock
mov
icebp
int
push
insl
je
es
int
add
sbb
sub
mov
mov
call
stos
loopne
in
and
subb
adc
pop
adc
jp
or
dec
lahf
push
sbb
or
dec
xor
inc
popf
repnz
outsb
mov
or
jle
push
fsub
cs
jns
mov
fiaddl
push
adc
lahf
in
push
movsl
mov
dec
jnp
sarl
push
lcall
push
lds
jae
hlt
jg
jne
lret
int
mov
push
push
shl
inc
rcl
or
icebp
pop
imul
pop
jo
loopne
mov
subb
div
sub
es
adc
push
test
lcall
sub
enter
daa
dec
push
shl
pop
fwait
test
mov
pop
sahf
das
mov
arpl
xchg
fldl2e
push
jg
dec
push
mov
xor
icebp
fnstcw
mov
xor
and
and
bound
dec
sub
movsb
cli
sub
sbb
sahf
scas
and
cltd
icebp
lock
push
push
es
cli
pop
push
sub
inc
add
mov
jle
outsb
xchg
pop
add
or
jno
mov
mov
cmp
sub
int3
sub
test
mov
fstpl
jecxz
aam
int
fstpl
lods
pop
mov
negl
jns
sub
imul
jnp
mov
fucomi
add
sbb
stc
out
and
repz
outsb
popf
xchg
in
adc
mov
jp
mov
imul
dec
ljmp
sbbl
in
mov
loop
adc
aad
add
cmovno
and
sub
hlt
pop
inc
push
xchg
or
dec
sti
outsl
or
xchg
or
jno
in
pop
mov
sahf
das
push
cli
arpl
mov
sbb
xchg
cmpl
sub
sahf
xchg
jb
adcl
lock
cld
pop
mov
push
add
cmpsb
je
xchg
sub
and
js
lahf
and
cmp
add
subb
cmp
jns
sarb
mov
push
sub
xlat
testb
adc
jl
test
jl
mov
lcall
xchg
add
jle
ja
or
pushf
add
cmp
sahf
mov
aad
jge
cmp
ss
adc
mov
rolb
out
adc
test
lds
inc
aad
sarl
and
pop
push
mov
sti
adc
mov
popf
inc
pop
sbb
and
cmp
mov
mov
jle
cmpsb
pop
adc
jl
mov
nop
pusha
adc
or
jbe
sbb
setl
and
out
sbb
bound
adc
sbb
jo
jmp
sub
mov
and
mov
lret
mov
inc
dec
enter
outsb
testb
cli
scas
and
orb
dec
mov
adcl
sub
lret
std
js
xlat
sub
fidivrl
add
cli
xor
popa
test
cmc
pop
sbb
sub
push
adc
sarb
lret
insl
push
iret
pop
mov
inc
pop
push
pop
stos
lods
push
or
insb
push
hlt
sbb
push
sub
stos
sbbl
and
mov
fmull
roll
jl
pop
fimull
mov
push
adc
add
push
popa
dec
sbb
pop
aas
inc
mov
cmp
dec
enter
sbb
inc
adc
mov
je
jb
dec
insb
pusha
test
push
dec
mov
adc
sub
testb
sbb
pusha
pop
rcrb
testb
cmovnp
in
mov
push
cwtl
or
push
insb
jno
sub
or
dec
mov
push
xor
mov
sbb
cmp
clc
add
sub
sbbb
xchg
pop
mov
jae
inc
jae
mov
and
lcall
test
lret
push
inc
repnz
cmp
sub
and
lods
flds
movsl
das
lret
hlt
mov
call
push
adc
pushf
cmp
ss
cmpsl
aas
iret
fwait
xlat
loop
rolb
imul
arpl
hlt
xchg
cmp
cmp
popf
aad
jo
sahf
mov
inc
jae
cs
fdivs
dec
pop
or
mov
stc
scas
jmp
aad
and
es
xor
arpl
rcrb
fs
lods
mov
jo
scas
insb
mov
pop
dec
js
xlat
push
rolb
fstl
xor
rorl
stc
sub
mov
js
pop
push
bound
scas
xchg
mov
xchg
mov
rorb
lods
in
dec
xlat
adc
sti
in
dec
add
xor
sub
loop
pop
les
inc
lahf
push
adc
dec
or
mov
cmc
cmc
loope
mov
sbb
cwtl
lret
push
lds
popa
popf
popa
mov
mov
divb
add
or
add
or
mov
test
xchg
mov
adc
pushf
insl
pusha
std
push
inc
pop
push
stos
and
pop
iret
adc
and
sbb
pop
adc
push
push
roll
sub
mov
cltd
push
mov
stos
clc
loop
mov
add
call
xor
sbb
and
and
xchg
adc
test
popf
fbld
imull
pop
adc
and
add
mov
pop
cmp
or
ret
dec
pusha
roll
pop
jmp
rol
and
jno
aaa
add
clc
mov
cmp
test
mov
notb
fs
push
push
mov
sarl
loope
mov
paddd
pusha
ret
lea
fisttps
pop
jnp
in
iret
fadds
std
shll
jbe
mov
dec
pushl
push
and
ret
mov
bswap
sub
mov
inc
mov
lcall
daa
lea
pop
xchg
jl
testb
repnz
iret
push
inc
js
cmp
mov
cmc
aad
ja
test
push
test
insl
pop
xchg
js
xor
aam
push
movsb
sti
fdivl
in
push
jl
shr
pop
adc
ret
int3
test
pushf
xchg
mov
mov
mov
daa
lods
mov
call
daa
dec
dec
into
push
adcb
adc
sub
pushf
push
insl
hlt
shrb
mov
mov
mov
xor
rclb
cmp
aad
ss
jmp
mov
adcl
sbb
outsl
shrl
xor
xor
aam
mov
stc
xor
mov
in
adc
or
adc
push
adc
addb
fiadds
outsb
bswap
xchg
xor
icebp
and
loope
xor
dec
cs
inc
and
ljmp
mov
jmp
clc
cmp
push
xchg
lods
fs
sbb
lea
sbb
in
mov
cmp
jae
jbe
inc
push
std
out
pop
sbb
or
fcmovbe
in
dec
or
pop
xor
add
sarl
cmp
xor
add
fsubrl
fwait
lods
add
push
or
pusha
popf
lret
cmp
sbb
ljmp
test
pop
lahf
clc
push
mov
je
fimull
sub
rolb
pop
mov
ss
aam
aam
icebp
sti
lds
lahf
repz
mul
sbb
fildll
fldenv
mov
pop
ja
cmp
cmp
mov
xor
out
jbe
aaa
dec
fstpl
jp
fdivl
add
add
je
adc
jno
movswl
out
orb
imul
mov
subl
pop
ret
jae
cmpsb
pop
test
nop
mov
inc
pusha
dec
cmpsb
stc
sbbb
lahf
and
mov
testl
cmp
and
xchg
sbb
jnp
dec
dec
dec
lds
insb
popa
aaa
nop
sarl
jg
dec
pop
add
inc
sbb
cmpsl
icebp
popa
add
inc
in
sbb
mov
bound
divl
inc
test
mov
mov
jb
fnstcw
int
xchg
in
jmp
lret
lcall
cwtl
fdiv
faddl
lret
xchg
cmp
add
jmp
rep
js
jno
test
xchg
testl
add
xchg
xor
cmpsl
ja
dec
mov
pop
lcall
decl
cmp
movsl
mov
sub
fsts
xchg
jbe,pt
and
push
arpl
xchg
js
mov
movsl
xchg
cmp
push
lret
sahf
push
and
lcall
cmp
orl
sub
push
idivb
sub
dec
or
inc
enter
rcrb
sti
enter
mov
jecxz
es
sub
fdivr
pop
fcoms
xchg
dec
lahf
out
rcrl
pop
xchg
cmp
sbb
push
and
jb
pop
mov
or
movsb
lods
adc
pop
cmpsl
enter
cmp
cmp
mov
pop
cmp
cmp
andb
mov
gs
repnz
mov
arpl
hlt
xchg
pushl
and
mov
mov
mov
pusha
and
icebp
gs
dec
shlb
dec
jle
mov
outsb
or
fsubrl
push
pop
es
cwtl
push
dec
mov
pop
lock
sub
pop
insb
fs
cmp
addr16
pop
ror
or
cld
int3
fcompl
gs
xor
cmp
movsl
push
lods
or
jl
imul
stos
mov
sti
pmaddwd
mov
ss
int
cmp
xor
jns
leave
push
adc
ljmp
push
xor
rol
lret
inc
jecxz
daa
js
repnz
out
mov
mov
xor
or
xchg
xor
iret
sub
sub
repnz
jmp
sub
enter
mov
nop
dec
xchg
mov
push
shrb
dec
test
xchg
xor
stos
in
into
jb
dec
test
insb
inc
and
jg
scas
clc
cmp
xor
rorb
cmp
ljmp
jmp
xor
and
jmp
inc
les
jle
insl
aad
mov
repz
mov
out
les
jp
pop
cmp
repz
xchg
inc
call
xchg
out
mov
rcrl
jne
inc
add
popa
adc
int3
repnz
ljmp
jge
jo
mov
lret
push
hlt
in
push
or
push
push
push
adc
pop
xchg
pushf
mov
xchg
push
sub
sbb
mov
mov
push
rclb
test
xor
rorl
popa
mov
cmc
mov
inc
mov
clc
sbb
jmp
jnp
jg
add
or
out
cld
insl
inc
test
mov
shrl
xchg
das
insl
in
pop
outsl
outsl
or
sub
jne
xchg
or
mov
push
notb
xor
xor
cmpsb
add
rcrl
sub
pop
adc
and
fildl
cmp
sahf
and
dec
mov
cmpsb
xchg
xor
adc
pop
inc
es
imul
pop
int3
stc
push
mov
nop
sti
ds
sub
cmp
test
movsb
js
in
bound
mov
movsb
or
adc
mov
xchg
and
xchg
xchg
inc
daa
and
in
inc
dec
hlt
lods
lods
cmp
jo
outsb
out
mov
mov
cmc
mov
jl
or
or
iret
xchg
mov
mov
add
wrmsr
xor
xor
xor
mov
push
mov
out
dec
shll
ret
test
and
jns
aam
lcall
mov
jns
fs
jmp
in
shll
jge
adc
xlat
mov
and
jb
lahf
test
mov
sub
push
in
mov
insb
xor
cmp
pop
jb
cmc
test
sub
add
add
xor
gs
add
adc
in
popf
std
add
imul
cmp
jge
clc
xor
mov
mov
int
lods
fisubl
jns
add
push
add
pushf
jae
bt
fsubrs
gs
pop
sbb
ljmp
std
push
in
lods
or
lretw
push
xor
and
lods
xchg
pop
fnstsw
add
or
xchg
flds
mov
add
test
xor
or
dec
mov
orl
xor
pop
xchg
xchg
jmp
loop
xor
clc
imul
fnstcw
test
add
jns
fnstenv
test
mov
jae
mov
or
fwait
and
xchg
dec
in
movsb
cmp
jl
mov
sub
mov
inc
fidivs
fistpl
popa
add
mov
jo
mov
les
and
push
lahf
and
add
bound
sbb
stc
pop
inc
fbstp
rorl
jle
loopne
out
mov
int3
jns
jp
lahf
ficoml
mov
shrb
add
out
adcb
in
pop
mov
cmp
and
outsl
sub
aad
mov
xchg
sub
mov
imul
std
cltd
inc
pusha
repnz
enter
stos
nop
in
push
jno
cmp
xor
ja
cld
mov
ja
pop
in
mov
pushf
insb
cwtl
xlat
aad
popf
xor
xchg
dec
mov
jnp
dec
push
jo
out
rcrb
inc
iret
sub
xor
test
sbb
inc
pop
cmp
sbb
mov
fwait
mov
lds
pop
pop
orl
call
fwait
insl
xor
fwait
stc
dec
dec
aaa
lret
movsl
mov
loope
rcrl
in
insl
xchg
cmp
xor
inc
lods
inc
stos
cmpl
aad
clc
or
jmp
popf
mov
mov
pop
clc
add
cs
jns
jbe
int
ljmp
shll
icebp
divl
xor
imul
test
adc
lds
insl
arpl
xchg
jg
inc
sub
loop
rolb
hlt
aas
and
ss
test
sbb
jb
jae
das
lods
push
stos
sbb
inc
imul
rcrl
lret
mov
dec
out
mov
push
mov
dec
pusha
xchg
pop
rcr
pusha
adcb
cmpsl
jbe
jmp
mov
call
outsb
adc
rcr
mov
add
dec
orb
in
mov
mov
pop
aas
mov
jl
inc
xchg
fdivrs
sbb
movsb
inc
in
rolb
insl
mov
mov
pop
std
or
scas
stos
aas
or
outsb
dec
push
xchg
mov
std
xchg
or
pusha
inc
insl
xchg
add
xchg
mov
cmp
adc
ret
mov
es
adc
add
stos
mov
out
or
movb
mov
test
repz
sti
push
xchg
and
cmp
push
add
mov
jecxz
push
mov
pop
movsl
inc
shl
add
stos
imul
mov
push
shll
fsubr
sbb
cltd
sbb
push
dec
and
sbb
aas
cs
push
hlt
sub
sbb
and
mov
mov
test
enter
add
aam
ja
nop
or
push
push
cmpsb
mov
sub
jnp
mov
jg
mov
push
rcrl
xchg
add
sub
scas
mov
mov
sub
scas
push
sbb
mov
push
je
ds
xor
icebp
cmp
ds
push
mov
ret
loope
idivl
and
jge
mov
out
fucomi
push
pop
sbb
aad
testb
mov
repz
movsb
lret
das
cmpsb
iret
xor
inc
jae
dec
xor
hlt
mov
push
xor
rcrb
out
ja
loopne
xchg
mov
sub
and
add
fnstsw
add
in
push
mov
xchg
jne
pop
fsubrp
push
ret
mov
and
add
popa
add
fildll
mov
or
cld
call
sub
cltd
call
fcomps
int3
or
aad
inc
fstp
xor
xchg
push
inc
jno
pop
imul
pusha
fwait
adc
pop
adc
sti
popf
fdivrs
sub
movsl
fs
xchg
pop
cmp
jb
sbb
dec
mov
pop
pop
push
pop
xor
mov
push
cmp
pop
cmp
push
divps
adc
xchg
inc
pop
ja
popf
stos
cmp
jmp
adc
cld
pop
jns
pop
mov
gs
jae
jno
andl
mov
icebp
movsb
or
push
sub
adc
sbb
scas
bound
mov
hlt
xchg
loopne
push
orl
mov
rol
daa
sti
mov
cs
pop
jo
mov
arpl
fidivrl
and
mov
jne
idivb
or
clc
and
inc
push
cmpsb
push
mov
sbb
inc
or
loopne
or
cs
mov
pop
rorb
aam
into
sbb
ret
dec
fldcw
xchg
stc
out
shlb
dec
push
sbb
stos
cli
cwtl
out
push
in
push
pop
shlb
int3
xchg
mov
scas
fmull
test
int
scas
int
cs
sahf
fisttpll
xchg
movsb
mov
fld
pop
mov
xor
lds
pop
idiv
cmp
ret
jl
int3
push
mov
cmpsl
lock
loopne
jg
mov
jae
hlt
sub
lea
xor
sbb
xor
dec
add
fsubs
repnz
mov
int
sub
dec
fsts
lock
push
or
iret
or
notb
scas
jno
lea
push
push
shl
adc
or
fldenv
mov
leave
jns
es
mov
sbb
test
popa
sub
repz
clc
xor
xchg
push
sti
je
push
repnz
aas
nop
xor
es
jmp
jecxz
cmp
lcall
insb
mov
or
out
add
adc
clc
mov
push
push
jne
pop
stos
jae
add
dec
push
and
fwait
pop
sbb
jnp
andl
mov
adc
sub
mov
scas
push
sub
pop
sub
pop
aaa
in
pop
jmp
lret
inc
pop
in
mov
mov
push
stos
outsb
int3
aas
inc
jns
sbb
jle
mov
cmp
mov
je
mov
cs
sbbb
outsb
in
fdivp
hlt
xchg
sub
mov
mov
enter
test
mov
lods
dec
xchg
pop
xchg
lock
in
adc
gs
je
cmp
mov
gs
outsb
mov
iret
mov
sarb
icebp
je
leave
ja
or
bound
or
sub
lds
jg
addb
push
mov
adc
test
mov
dec
movsb
outsl
add
xor
movsl
lcall
aaa
cltd
out
js
add
ret
add
loop
int
and
hlt
mov
jecxz
lods
scas
inc
jno
ljmp
hlt
movsl
xlat
xchg
cs
and
fsubrl
xchg
fnstsw
loopne
inc
gs
and
push
adc
cli
xchg
fnstsw
push
fldt
inc
cmp
fidivrl
mov
push
jae
fwait
fs
fsubl
inc
jle
out
xchg
int
movsl
xor
add
push
dec
jno
dec
inc
push
pop
jo
mov
jle
sbb
repz
or
sub
and
fnstsw
inc
fdivrs
mov
push
inc
xor
push
xor
addr16
leave
xor
bound
or
xchg
or
sti
adc
mov
push
sub
data16
pop
xchg
lds
push
insb
fidivs
dec
shlb
outsl
ret
add
mov
jb
cmp
lock
scas
mov
sbb
mov
inc
cmp
aad
dec
cmp
mov
stos
daa
leave
std
outsb
jge
pop
cmp
or
shll
cmp
push
push
mov
test
loope
sub
ja
push
jne
push
fiaddl
pushf
add
inc
clc
jecxz
cmovg
push
ss
push
jmp
idivb
xchg
lods
into
sbb
out
pop
add
lock
in
cltd
in
lahf
push
sub
jns
inc
dec
jns
lahf
xchg
aas
lock
mov
outsl
jo
cs
lahf
lret
imul
cli
out
push
in
cmp
movsl
adc
and
inc
iret
fadds
mov
stos
leave
sbb
inc
xchg
mov
add
iret
iret
pusha
mov
sub
push
test
inc
or
mov
xchg
push
xchg
clc
lret
xchg
cwtl
insb
push
movsl
addr16
inc
jnp
jne
out
icebp
enter
dec
push
mov
pop
stc
xchg
adc
lahf
adc
aaa
bound
push
inc
pop
test
cld
push
pusha
jno
mov
mov
lock
xchg
mov
lds
bound
fidivrl
insb
sbb
cmp
cmp
filds
out
push
ljmp
orb
rclb
adc
daa
push
mov
xlat
xorb
cmpsb
dec
push
and
dec
jbe
lahf
aam
dec
std
xchg
adc
repnz
and
sbb
in
loopne
fildll
pop
jnp
mov
inc
scas
push
imulb
shll
loopne
dec
and
out
dec
fmull
cmpsb
test
mov
cmp
and
into
enter
sub
dec
jb
loopne
lods
out
repz
cmpsb
mov
pop
xor
lret
sarb
lock
inc
jnp
jecxz
sbb
lods
arpl
daa
scas
and
sbb
ljmp
push
xchg
into
aam
mov
pop
mov
jmp
adc
repnz
pop
push
leave
pop
jl
fisubrs
sub
popa
xlat
rcll
lret
cld
cmpsl
insl
fadds
pop
mov
mov
adc
and
inc
sti
inc
lods
jle
add
aas
bnd
call
mull
xor
add
xchg
xorl
repnz
pop
pop
test
jmp
mov
mov
ss
insl
pop
dec
mov
daa
in
shl
xor
xor
out
push
adcb
xor
add
mov
divl
pop
adc
dec
stos
gs
popl
cli
fmul
pop
mov
aad
out
jb
adc
pop
insl
fwait
test
add
in
ret
fistpl
mov
out
in
fisubl
mov
scas
fs
repnz
and
xor
cmc
cmp
adc
aaa
cmp
arpl
cmp
xchg
cmp
xor
mov
mov
and
out
scas
xlat
jb
sbb
out
test
adc
shlb
mov
xor
or
ljmp
cld
movsl
inc
daa
mov
xor
add
dec
inc
aad
dec
fsts
test
xchg
and
adc
mov
pop
sbb
xor
std
push
rolb
and
mov
sbb
lcall
jmp
adc
inc
sarb
test
icebp
ret
inc
jecxz
or
enter
je
jno
mov
scas
jge
sbb
and
addr16
out
movsb
insb
adc
dec
sub
int
subl
mov
aam
andb
adc
sbb
fnstcw
ret
enter
pop
mov
mov
scas
mov
jecxz
sbb
or
fldenv
mov
sbb
js
out
enter
and
cmp
icebp
dec
sbb
push
in
xor
aad
inc
xchg
out
les
jp
shlb
popa
movsl
sbb
sub
movsb
shrb
sub
test
mov
inc
pop
data16
flds
xchg
jl
and
aaa
popa
rdpmc
lds
mov
dec
mov
iret
xchg
mov
cmp
in
cmp
mov
arpl
xorb
pusha
sar
cmp
sar
cmc
jg
inc
mov
bound
leave
or
outsl
xchg
cld
lods
fldt
movsl
movsl
xchg
test
push
sbb
or
rcrl
adc
cmp
in
daa
movsb
mov
inc
lret
ljmp
jge
mov
or
lcall
js
inc
repnz
push
clc
pop
jmp
push
xchg
bound
insl
mov
cltd
rcll
pop
dec
jge
adc
pushf
dec
xor
je
cmp
mov
pop
int3
sti
or
cmp
inc
pop
int3
inc
mov
inc
mov
mov
repz
xor
mulb
sahf
popf
mull
cmc
add
shr
ds
jno
push
mov
subl
xchg
pop
and
ljmp
enter
out
rclb
sti
mov
popa
int
mov
aas
cmpsb
cmpsl
add
cmp
fstps
testl
pop
xlat
outsb
jbe
push
sbb
cmpl
cmp
lea
test
pop
jp
in
pop
lods
insb
cmp
push
fsubl
jle
fwait
iret
xchg
jne
movsl
mov
fisubl
or
push
cmc
hlt
cld
aas
popf
mov
pop
xor
scas
jp
pusha
xchg
pop
lahf
jne
mov
nop
push
jne
mov
out
add
adc
push
int3
cmp
sbb
pop
jl
adc
sbb
jbe
jecxz
daa
sub
inc
dec
inc
test
pop
hlt
pop
or
xchg
je
inc
pop
and
sub
xchg
fwait
int3
lcall
push
mov
inc
jmp
js
xlat
pop
dec
or
mov
in
or
das
pop
jbe
cmp
dec
dec
and
into
hlt
mov
mov
pop
mov
mov
lahf
pop
lods
sti
jae
fldl2e
je
es
outsb
ret
sub
rcrl
mov
sbb
test
xchg
xor
imul
mov
outsl
and
mov
pushf
rcll
bound
or
scas
ja
add
sub
insl
jmp
xor
push
shrl
dec
fists
xor
lret
mov
sti
sub
stos
popf
arpl
jae
cltd
cli
das
adc
mov
fsubs
stos
sbb
and
dec
movsl
adc
push
cmpsb
sahf
outsl
mov
into
in
int3
orb
movsl
int
shl
mov
mov
fldl
loopne
push
xor
cmp
and
lods
xchg
sti
mov
mov
repnz
lock
fisubs
dec
ljmp
cwtl
cs
cmp
jp
ljmp
int3
add
sbb
push
pop
testl
mov
imul
loopne
mov
sti
dec
or
pop
dec
and
adc
sar
sub
adc
mov
adc
push
enter
hlt
jb
and
jmp
movsl
sbb
adcl
daa
mov
sbbl
inc
sub
mov
adc
pop
inc
xchg
stc
adc
sbb
fsts
fsub
xchg
adc
add
dec
xor
push
fwait
loop
mov
dec
xchg
lds
daa
movsl
pop
cmp
xor
fisttpll
xchg
jbe
sub
push
gs
mov
cmpsb
int
xchg
xchg
xchg
adc
stos
sub
lods
push
cwtl
jns
sub
dec
mov
popf
sub
shll
fbld
cmp
cmp
and
ljmp
sub
je
scas
cs
cmp
loope
sbb
add
sbb
arpl
mov
fstps
mov
pop
outsb
incl
push
push
or
iret
cmp
inc
std
jl
push
cmpsl
pop
das
lods
shl
mov
lods
imul
dec
xchg
lret
jo
enter
je
in
jle
iret
cmpsl
clc
int3
ljmp
aad
mov
mov
ja
dec
test
out
and
add
popf
inc
sbb
mov
inc
stos
fbld
sub
xchg
aam
dec
sbb
dec
dec
lret
xor
scas
xchg
cmpsb
sbb
adc
lret
andl
jecxz
pushf
push
ljmp
into
int3
cmp
mov
or
mov
scas
push
dec
cltd
add
pop
repnz
les
push
arpl
fcoms
or
cmpsl
jne
jle
jnp
pop
push
out
push
dec
or
cmp
push
sub
push
bound
lcall
stos
xor
daa
arpl
mov
xlat
rcll
into
pop
dec
fs
sbb
push
push
mov
sbb
inc
sbbl
lds
sbb
mov
lret
mull
ss
add
aaa
js
jae
push
push
mov
mov
lds
in
pop
lcall
jmp
fcoml
je
cmp
mov
cltd
int3
and
enter
jp
and
pop
mov
mov
adc
lds
and
decl
push
ss
dec
or
dec
out
popf
and
mov
adc
popa
in
add
jbe
divb
jbe
rcrb
push
pop
add
imul
xor
fs
jae
push
lahf
lahf
dec
test
lea
inc
ds
push
add
insl
and
jl
sahf
test
repnz
call
adc
sahf
outsl
xchg
push
xor
sub
xorl
lea
lahf
in
out
ljmp
cmp
sub
inc
pushf
cmc
mov
scas
mov
ss
cmp
xor
mov
test
or
add
shlb
enter
into
divl
lock
add
push
icebp
adcl
push
mov
push
out
sbb
pop
cmp
jge
add
mov
pop
xor
mov
push
jle
or
sbb
mov
mov
sahf
int3
movsl
out
sbb
testl
idivb
fwait
mov
dec
mov
push
add
dec
pop
mov
dec
jbe
in
std
cmc
and
and
jecxz
movsb
aam
mov
dec
aas
sub
inc
pop
xchg
push
dec
cmp
dec
or
push
cmp
out
out
scas
stos
jg
popf
pop
and
aam
aas
daa
sahf
addr16
cmpsb
mov
shrb
pop
pop
jecxz
sbb
mov
in
fiaddl
jl
jge
std
aad
sbb
lods
decl
nop
mov
rorb
mov
outsl
ss
rcrl
pop
imul
mov
xor
cmc
mov
or
popf
lds
inc
test
jnp
into
mov
int
loope
inc
mov
jns
mov
add
hlt
jmp
mov
les
sub
rcrb
lret
movl
sarl
cmp
outsl
pop
jo
dec
cwtl
stc
mov
data16
les
daa
jle
xchg
rorl
scas
jnp
add
cmp
adc
pop
imul
push
mov
and
pop
scas
sub
pop
jl
jae
mov
dec
andl
jg
lods
call
fsubrs
jle
mov
fs
rcr
sub
test
inc
add
shl
jb
and
pop
fmulp
subl
lods
jb
pop
mov
mov
and
xor
rcrl
sbb
xor
rol
and
add
jo
cmpsb
enter
out
and
je
mov
ss
stos
ss
or
dec
cmp
shl
push
lahf
les
imul
outsl
jae
lods
test
imul
fdivrp
fcoml
cmp
sub
mov
popa
sar
dec
push
push
jnp
sti
fcmove
out
dec
test
repz
push
sub
dec
push
dec
add
mov
dec
adc
insb
mov
sahf
clc
fimuls
ds
sbb
shrl
ss
adc
test
add
mov
sub
xchg
dec
mov
or
out
fsubr
icebp
or
push
divl
add
in
orl
xchg
xor
test
rcr
inc
out
adc
xor
mov
sbb
push
dec
je
xlat
xlat
add
fwait
xchg
cmp
mov
mov
and
insl
cmpsb
dec
inc
adc
add
xchg
adc
lahf
push
xlat
aaa
subl
fs
mov
enter
mov
cmp
subb
push
adcb
or
jno
xor
mov
addr16
cmpsb
jns
and
adc
ja
and
ds
xor
xchg
inc
lret
sub
daa
std
ret
stc
cs
add
push
mov
mov
add
mov
jne
hlt
jns
stos
push
imul
add
inc
jb
push
mov
ret
xor
xchg
repz
pop
and
or
adc
sbb
fldt
aaa
pop
subb
out
out
or
loopne
sbb
hlt
jg
decl
mov
jl
push
sbb
bswap
aad
jmp
adc
scas
data16
and
lcall
dec
dec
sbb
mov
push
mov
mov
cmc
mov
test
ljmp
xor
mov
popf
pop
scas
add
push
ds
sub
loope
lods
test
push
out
jmp
jmp
in
sbbb
pop
sub
push
fisttps
pop
out
insb
mov
mov
xchg
cld
pusha
xchg
add
sub
movsb
cs
lods
push
adc
mov
aaa
mov
lahf
out
or
push
jge
xor
aad
mov
jle
lods
xor
je
or
mov
jl
sub
loope
test
push
push
hlt
adc
xor
adc
jae
pop
dec
push
cmp
inc
scas
push
xchg
xchg
sti
cmpl
lods
and
pop
mov
cmpsb
or
push
cmovb
rcll
push
cmpsl
xchg
int
pop
mov
clc
rcrl
sahf
cmpsb
cmp
loop
push
aas
iret
xchg
out
mov
mov
ror
cmpsb
das
sbb
add
and
popa
imul
mov
ljmp
and
lock
jae
nop
and
aam
sbb
or
and
in
enter
inc
je
shlb
mov
pop
sub
lods
je
in
mull
jl
push
jg
jmp
sub
lods
lods
mov
push
push
xchg
cwtl
mov
icebp
outsb
adc
jae
cmc
shrl
mov
bound
cmp
fldcw
out
lcall
or
xchg
inc
hlt
fmuls
mov
cli
mulb
pop
dec
xchg
inc
imul
aas
xor
adc
aam
xchg
push
test
pop
clc
pop
hlt
adc
test
xor
inc
jbe
in
das
xchg
aam
push
in
loope
enter
sub
out
hlt
dec
fisubl
jne
push
add
mov
addr16
and
mov
pop
imul
add
push
mov
pop
ret
cmp
ds
les
in
es
mull
pop
sub
lret
dec
stc
xor
and
jmp
decl
lret
mov
pop
jne
adcl
xchg
pop
add
gs
sbb
cwtl
lahf
dec
push
shll
sub
pop
loopne
js
push
or
mov
dec
or
push
iret
cltd
int
pop
cltd
push
xor
imul
and
dec
pop
inc
mov
xchg
dec
into
out
sbb
sti
push
sbb
dec
cmp
leave
cli
loope
add
cmp
out
bnd
push
add
mov
jecxz
xchg
sti
mov
fs
out
shll
mov
mov
ljmp
lret
xchg
in
inc
sahf
shll
adc
pushf
sbb
or
mov
aaa
mov
nop
test
imul
aas
sub
or
sbb
cmp
mov
and
mov
mov
mov
imul
sbb
out
repnz
arpl
xchg
sub
inc
shll
enter
push
mov
andl
lock
cmp
sub
mov
push
adc
clc
and
arpl
inc
shrb
lret
jge
imull
out
pop
cld
push
call
add
mov
jecxz
fmul
xchg
lods
loope
aas
xchg
pop
mov
lret
jno
mov
lds
push
mov
xchg
xchg
cltd
gs
mov
mov
int
jmp
or
pop
pop
cli
cmc
sub
movzwl
and
jle
loop
cmp
sbb
pop
gs
cmpsb
sbb
jne
xchg
popa
in
mov
pop
add
test
fdivr
rorb
jno
jp
fidivs
adc
push
movsb
in
shlb
sti
pop
mov
xchg
ss
xchg
push
inc
and
test
jne
dec
test
mov
rcrb
push
out
xor
jo
xchg
loopne
fwait
ljmp
push
or
push
xor
out
loopne
rclb
adc
lods
jnp
push
in
bound
mov
andb
adc
adc
scas
lods
adcb
js
mov
pushf
jns
ss
jns
sub
movsb
scas
jno
clc
add
mov
movsl
mov
ss
xchg
scas
cmp
push
imul
cmpsl
add
in
loop
cld
rol
push
or
mov
mov
arpl
fcmovu
int
pop
or
rcrb
sbb
ffree
aaa
xchg
mov
push
sub
sub
sti
cmp
and
repz
or
es
popa
xchg
hlt
hlt
adc
inc
ficompl
test
mov
mov
pop
adc
rol
xchg
push
daa
jns
jae
push
les
push
insb
sbb
movsb
or
xor
jl
iret
testb
ss
jl
std
sub
mov
rcl
cmp
inc
push
scas
movsb
dec
mov
inc
mov
ja
clc
out
repnz
or
stos
fld
pushf
cmc
cltd
cmc
stos
insb
scas
in
test
lock
pop
dec
inc
lcall
stc
xchg
pop
nop
push
dec
fwait
xchg
ja
pop
jns
cmpsb
out
cmpsl
aam
cmpb
pop
loopne
jb
adc
and
mov
sbb
test
insb
sbb
outsl
jae
movsb
jno
cmc
xchg
js
shl
xlat
loopne
sbb
scas
mov
in
rcrb
jns
in
xor
xchg
mov
in
hlt
sbb
pop
je
mov
add
and
or
paddq
iret
andl
jle
ljmp
call
push
lret
cmp
mov
fnsave
sbb
fimull
iret
inc
lods
jbe
dec
sbb
inc
and
mov
aam
lock
sub
xchg
cmpb
cld
out
inc
adc
jle
push
loope
jecxz
mov
into
jnp
dec
mov
gs
xchg
push
roll
sub
mov
ret
icebp
dec
out
add
negl
into
pop
mov
mov
jg
jp,pt
dec
stos
or
scas
xor
arpl
inc
mov
jae
sbb
stc
add
sbb
jne
sub
test
pop
lock
pop
loope
cmp
push
xor
pop
popa
mov
ret
push
shrb
xor
popf
out
mov
ret
cli
repz
insl
fmulp
fisttpll
jbe
xor
fnstsw
enter
push
fwait
cmp
test
push
mov
pop
iret
ficompl
lret
sahf
addr16
call
aas
cmp
out
gs
jbe
cld
mov
pop
repz
cmp
outsl
shll
pop
sbb
dec
dec
cmpsl
or
sbb
insl
cli
cmp
mov
rclb
adc
push
sti
jl
xchg
stos
add
pop
std
scas
sbb
addr16
dec
mull
jl
adc
ret
stos
cs
sbb
xchg
mov
mov
popf
clc
test
fstpt
test
scas
jmp
push
jmp
adc
test
testl
xchg
ret
pushf
jb
fs
pop
mov
mov
ret
xorb
subl
add
pop
testl
idivb
js
mov
fidivrl
cwtl
add
andl
xchg
adc
mov
sbb
xor
insb
int3
aad
and
fs
mov
jae
stc
fwait
adc
sub
add
sub
jle
push
inc
or
roll
sbb
jnp
mov
leave
popa
mov
in
out
sbb
dec
inc
popa
sbb
lock
add
int3
push
mov
lods
stc
lds
lds
mov
jmp
shl
nop
std
cmc
xchg
push
and
fwait
sti
adc
sbb
xchg
cmc
dec
mov
push
repz
jb
pop
and
inc
shlb
inc
sbb
mov
gs
jo
in
lahf
jle
sbb
mov
sbbb
je
jnp
cld
jbe
sbb
adcl
cwtl
mov
mov
pop
sti
inc
clc
test
mov
mov
dec
cmp
iret
rorl
stos
push
test
pop
pop
test
outsl
call
clc
scas
fcmovnu
push
jmp
jmp
stos
jmp
ds
imull
and
cwtl
hlt
xchg
dec
pop
movsb
sti
sub
and
xor
xor
or
jle
adc
inc
and
xchg
inc
mov
xchg
mov
mov
sti
inc
push
imul
mov
or
aaa
pop
mov
shrl
call
shlb
sub
mov
sahf
dec
mov
imull
inc
cmp
mov
pop
fnstcw
jmp
cmp
pop
cmp
inc
int3
in
add
orl
gs
je
jl
cmp
xor
mov
pop
push
dec
call
es
push
add
aas
or
jae,pn
lahf
pop
fdivp
push
in
mov
sub
mov
adc
imul
mov
xchg
sub
stc
mov
jbe
lods
das
sbb
sub
fs
imul
icebp
scas
push
mov
cli
and
mov
lods
sarb
sbb
repnz
fsts
push
cmp
ds
and
scas
push
jge
push
adc
adc
test
and
bound
int3
pop
inc
dec
sbb
icebp
inc
cld
push
or
push
dec
xchg
add
jge
push
pusha
mov
mov
ljmp
pop
popf
testl
mov
xor
in
fldenv
fdivrp
mov
sbb
adc
push
pop
jl
lret
shll
cmp
rolb
mov
xchg
sbb
in
leave
xor
sub
fists
repz
or
xor
or
fmul
out
fimuls
xchg
rcrb
xorl
or
sti
rcrb
repnz
fwait
or
push
sub
jnp
xchg
insl
mov
lods
cmovnp
xlat
test
inc
cmp
lea
mov
mov
cld
dec
mov
shll
rcrl
cmp
inc
push
inc
push
ret
dec
pop
mov
mov
jne
push
cmp
dec
pusha
jge
mov
jl
popf
push
mov
test
mov
mov
xchg
pop
insl
stos
cs
mov
es
xlat
repnz
xor
add
sti
dec
cmpsl
sbb
rcrl
rolb
sbb
jnp
pop
jae
mov
cwtl
sahf
pop
mov
sub
lock
xchg
leave
js
in
mov
xor
inc
stc
sub
insl
jno
xor
fisttpl
std
xchg
xchg
push
push
dec
hlt
push
pop
mov
mov
arpl
fs
jl
push
test
add
aam
or
dec
xor
cmp
pmaxsw
iret
cmpl
pop
add
inc
stos
pop
add
mov
fwait
inc
lods
in
push
movsb
lahf
test
rcrb
push
mov
pop
cmpsl
xchg
test
nop
lods
dec
jns
int
imul
clc
mov
dec
pop
jecxz
aam
fidivs
repz
nop
jbe
sub
cmpsb
insb
mov
sbb
pop
mov
inc
adcb
repnz
lcall
ljmp
ret
adc
ljmp
push
sbb
mov
inc
loop
int3
push
sbb
xor
cmp
mov
test
inc
sub
add
xchg
jl
mov
clc
cltd
clc
and
xchg
stos
jb
mov
out
std
das
insl
mov
insl
faddl
shlb
sub
leave
in
sti
js
mov
ficoml
jo
daa
dec
movsb
mov
decl
jns
mov
push
adc
mov
sbb
and
cmp
inc
cltd
dec
icebp
or
and
adc
sub
js
sarb
xchg
inc
cmp
sub
daa
test
test
push
popa
into
ljmp
cltd
aad
dec
and
jmp
mov
pushf
sub
lret
and
sub
in
fxch
jge
scas
dec
mov
dec
movsb
loop
mov
addl
insb
fidivrs
xchg
sbb
mov
xchg
inc
xor
movsb
add
cmpsb
xchg
mov
mov
pop
xor
xor
cmpsl
popa
shlb
les
xchg
notb
hlt
call
mov
ret
repnz
push
or
xchg
adc
jb
scas
pop
pushf
pusha
pop
loop
aam
mov
aam
mov
jmp
mov
dec
and
jnp
notb
cmp
push
inc
fucomip
mov
jmp
imul
orl
xchg
aas
scas
scas
mov
loope
cmp
inc
jne
rcrb
scas
push
adc
sbb
pop
test
inc
cmp
and
aas
pop
push
xor
cmp
es
inc
cmpsb
out
setnp
mov
or
mov
in
test
pushf
pop
mov
add
pop
fists
in
out
mov
cmp
mov
sbb
mov
aas
std
sbb
insb
cmp
popa
inc
jb
sbb
pop
jl
sbb
add
or
aam
sbb
cld
leave
pusha
pop
and
js
mov
sbb
sub
mov
or
mov
mov
aam
inc
scas
mov
orb
pop
repz
jle
push
js
cmp
xor
dec
cmp
stos
jns
dec
mov
popa
xchg
inc
stos
out
and
jae
mov
fs
fs
nop
push
and
out
mov
xor
jnp
lret
xchg
push
xlat
je
or
aam
cmp
xchg
and
jl
cltd
les
ljmp
pop
xchg
shr
sub
pop
lods
sub
sti
mov
cmpsb
sbb
in
das
inc
imul
aam
inc
ret
mov
xor
into
pop
push
nop
xor
inc
jae
es
insl
pop
fcoml
popa
xchg
fstpl
cmpsb
dec
xchg
loop
cltd
sbb
unpcklps
jmp
mov
cld
mov
fstpt
inc
ds
test
xlat
mov
sbbb
scas
test
cmp
or
inc
push
daa
pop
add
loopne
clc
jmp
lahf
outsl
sub
sahf
push
add
adcl
ficoms
mov
ret
enter
frstor
push
orb
loope
fnstsw
jno
cmp
xor
cmp
cmp
aam
lock
sub
int3
push
sbb
lahf
je
addl
sbb
popa
push
daa
int3
xchg
cvtpi2ps
lods
cwtl
add
shrb
or
fadds
pop
popa
push
out
nop
cmpsl
ljmp
jbe
orl
leave
inc
inc
cltd
xchg
ret
adc
shlb
push
es
pop
pusha
lea
test
or
fcmovnbe
pop
pop
idivl
mov
out
fisubrs
adc
movsb
jo
mov
call
rcl
xchg
cmp
add
lock
pushf
enter
int
xchg
jge
push
lods
and
or
sub
inc
daa
mov
sub
mov
mov
pop
shlb
mov
and
loope
outsb
mov
mov
dec
jge
cli
adc
les
push
movsl
cmpsl
push
push
and
xchg
mov
imul
lahf
sub
push
js
sbb
mov
test
popf
fistpl
divb
mov
mov
xor
arpl
cmp
ja
mov
lds
aam
xor
bound
rcrl
sub
xor
fildll
fs
cmp
inc
pop
lods
mov
insb
ljmp
pop
mov
pop
sbb
add
xchg
inc
xchg
xchg
jmp
or
leave
int
leave
int
shrb
push
fs
pop
push
jae
jne
ss
cld
ret
sbb
out
dec
arpl
cmc
jle
inc
push
xor
lret
test
mov
jbe
scas
xlat
daa
sbb
cwtl
xlat
fisttpll
jmp
push
movsl
and
mov
push
stos
loop
fstps
pop
sbb
scas
lods
push
cwtl
js
es
rclb
aam
icebp
mov
mov
data16
repz
aaa
ljmp
hlt
std
pop
addr16
out
lock
addr16
xchg
mov
roll
jae
iret
mov
dec
imul
and
jb
movsb
add
insl
push
add
sub
inc
mov
cmp
rorl
jnp
sbb
fimull
ja
sub
inc
adc
pop
jle
mov
pop
clc
inc
push
rolb
xor
inc
test
ds
fildll
push
test
push
push
stos
push
mov
imul
mov
in
pop
mov
and
jns
xor
mov
pop
push
shlb
nop
jo
fstps
jp
cli
int3
sub
js
push
cmp
aad
mov
bnd
es
and
cs
cltd
insb
and
pop
scas
xchg
jmp
lea
std
adc
sar
push
pop
or
dec
mov
inc
xor
icebp
jge
testl
cmpsl
jg
cmc
xchg
nopl
adc
dec
je
iret
dec
imul
add
bound
andb
pop
or
ljmp
iret
or
pop
daa
in
in
ret
insb
push
loope
fs
shrb
dec
mov
mov
mov
jmp
sbb
mov
push
insl
scas
fsub
sbb
jnp
mov
push
loope
or
cltd
or
inc
mov
inc
and
inc
rol
sub
dec
mov
outsl
sub
inc
and
in
push
fdivs
jge
add
or
cli
repnz
mov
xchg
cmp
pushf
in
sub
mov
mov
inc
aam
fisttps
dec
fnstsw
mov
pop
push
lret
xor
jne
jnp
xchg
ret
xor
mov
pop
aad
scas
push
pop
mov
jmp
movsl
jb
sbb
lcall
out
cld
inc
mov
pop
mov
sbb
out
in
mov
lock
hlt
orb
inc
jge
adc
outsl
popa
test
xor
mov
adc
scas
in
cmp
fmuls
mov
call
shll
popf
imul
xor
cmpsb
negl
iret
gs
dec
shr
and
ret
ljmp
clc
loope
xor
mov
mov
aas
add
jae
pop
into
je
arpl
rol
inc
sub
popf
movl
push
sbb
cmpsl
scas
incl
sub
mov
mov
cmp
or
lahf
jl
sti
int
popa
lods
or
lahf
ror
xor
sub
inc
aam
imul
aad
push
and
dec
mov
pop
sbb
hlt
push
inc
mov
std
add
fcompl
sbb
adc
pop
inc
inc
insl
insb
out
pop
push
mov
pop
add
sub
out
popl
test
xchg
push
popf
jb
push
mov
mov
jno
ffreep
and
lret
call
inc
dec
mov
pop
dec
mov
loopne
movsb
rorb
popf
jp
out
aas
jge
xchg
out
lcall
xchg
outsl
aam
and
sub
jecxz
cmc
push
xchg
jge
dec
aaa
jge
xor
inc
sub
mov
stos
std
pop
push
sbb
enter
xor
xchg
cmc
div
std
pop
pop
jne
mul
mov
insb
add
dec
push
jae
fnstenv
sbb
adc
fidivrs
cmp
sub
mov
test
lea
xchg
lret
push
jae
push
orb
jp
pop
push
or
add
mov
push
arpl
inc
pop
add
adc
push
inc
xchg
pusha
jmp
out
es
insb
shrb
jb
je
jmp
mov
cltd
out
sbb
mov
loopne
mov
scas
pop
fidivs
inc
xorb
add
xorl
out
jbe
jge
xchg
mov
int3
inc
mov
and
rolb
ljmp
imul
out
popa
sub
jp,pn
mov
fidivl
loop
mov
or
add
adc
ficomps
aas
add
sbb
inc
fdiv
gs
andb
and
popa
loopne
cmp
mov
xor
fs
fsts
pop
xlat
xlat
fbld
out
jmp
in
sub
jmp
jno
stos
and
dec
xchg
mov
imul
rcrl
jl
scas
mov
lahf
fcmovb
mov
inc
push
sti
stos
mov
cmp
rcrl
cmpsl
sbb
cmp
daa
inc
fnstsw
add
push
jp
outsb
sub
xor
lret
daa
cld
mov
pop
in
fstpl
add
ljmp
shl
push
xorb
les
sbb
sbb
popa
pop
jno
jecxz
movsl
mov
movsb
movsl
mov
xchg
out
aas
mov
mov
jecxz
push
arpl
and
ror
sub
dec
loop
push
enter
cli
aas
icebp
cmc
add
stos
mov
imul
std
push
pavgb
outsl
xor
pushf
daa
push
mov
daa
bound
sahf
jg
inc
fsubrs
push
mov
adc
jge
rorb
push
xor
xor
xchg
or
out
mov
or
shl
aaa
add
xchg
and
jl
mov
mov
jnp
mov
xchg
mov
inc
in
loopne
push
mov
mov
repnz
rclb
mov
imul
push
push
gs
sbb
les
mov
mov
sub
clc
lcall
aad
jns
or
mov
ret
test
dec
mov
mov
sbbl
or
cmp
ss
shll
rorb
cmp
outsb
xor
xchg
cltd
cmp
cmp
sub
or
int3
mov
lds
clc
les
xor
cs
scas
jle
fcom
daa
mov
push
jne
inc
jecxz
push
scas
mov
mov
xor
jo
hlt
add
mov
jg
inc
sbb
aam
out
adc
dec
out
les
sarl
daa
jmp
cs
cmpsb
add
notb
and
div
xchg
pop
xor
inc
rorb
pusha
lret
cmc
sub
xchg
in
aas
sti
dec
test
data16
mov
add
push
dec
outsb
in
cli
or
and
mov
addl
lock
inc
xor
sarl
jb
push
lods
jne
out
aaa
bound
push
aaa
data16
aaa
xchg
mov
or
stc
les
mov
lock
into
dec
mov
or
icebp
sbb
cmp
in
pop
push
mov
mov
repz
loop
in
sbb
and
inc
popa
jmp
jo
cmp
mov
lcall
and
mov
jb
sub
rolb
out
or
int
retw
xchg
les
jo
sbb
dec
cmpsl
jb
stc
fdivs
das
push
pop
test
and
add
imul
xchg
repnz
push
loope
sub
cmpsb
and
lea
je
and
jne
sar
jle
mov
or
pop
push
icebp
insb
stos
lods
test
dec
mov
cmp
mov
mov
stc
ljmp
push
mov
or
cmc
les
jo
cmc
jne
push
in
dec
inc
add
gs
pop
lret
lods
stos
dec
xchg
push
cmp
sbb
jne
icebp
sarl
jo
push
jnp
and
es
cmp
fcompl
lret
and
or
add
jno
jmp
sbb
out
jnp
pop
jno
add
add
mov
cmp
pop
test
xor
xor
pop
lods
clc
jmp
iret
int
jbe
loopne
xchg
adc
jns
leave
shll
iret
xchg
pop
sub
lds
sbb
inc
sbb
dec
inc
daa
pop
cwtl
mov
push
pusha
xchg
das
xor
mov
int3
sti
jns
dec
mov
insl
pop
sahf
cltd
inc
xchg
mov
xchg
daa
cmpsb
inc
pop
fwait
sbb
mov
mov
stos
xchg
cmpsb
pop
sub
mov
mov
hlt
adc
and
lret
mov
add
cmpsl
push
add
add
lods
clc
inc
adc
inc
aad
lahf
sub
mov
lods
jle
jge
movsl
in
pusha
ret
repz
mov
push
jg
pop
jge
test
push
push
pop
jg
ss
jl
inc
nop
outsb
ss
lock
repnz
dec
mov
clc
sarl
out
lret
jle
mov
outsl
mov
hlt
dec
std
xchg
sub
mov
insb
add
jg
pop
mov
cmp
xor
inc
jb
sti
add
inc
dec
ficoml
daa
out
stos
pop
pop
rep
sub
adc
mov
jmp
add
mov
std
rclb
jge
push
adc
daa
in
sbb
adc
dec
pop
addr16
add
icebp
inc
push
and
sarb
add
daa
in
mov
in
dec
jns
xor
jge
xchg
jb
mov
push
mov
add
pop
addr16
in
adc
xchg
outsl
scas
stos
mov
in
xchg
cs
inc
mov
push
push
jbe
mov
cmp
jle
lock
sbb
or
enter
and
dec
test
enter
dec
test
mov
shll
xchg
pop
int
xchg
aam
cmc
inc
es
mov
nop
jo
loop
lret
push
pop
repz
mov
lock
dec
ss
push
xor
roll
nop
jne
icebp
sub
mov
nop
xchg
xchg
ljmp
push
fldt
xadd
cmc
inc
inc
sbb
jo
flds
idivb
or
mov
lahf
sub
push
cmp
out
in
cmc
icebp
sarl
sbb
fucomi
mov
iret
test
xor
inc
inc
out
fstp
mov
or
or
xchg
aas
scas
push
js
into
mov
mov
ss
xchg
pop
dec
in
daa
pop
sub
jp
inc
sbb
push
sbb
pop
clc
or
ret
or
sahf
jnp
add
mov
fscale
adc
nop
mov
in
fnsave
out
pop
call
fwait
and
pop
test
rolb
pop
hlt
test
xchg
xchg
push
lret
sarl
xor
adc
jl
sti
add
add
std
std
dec
aas
pop
push
lods
je
sarl
mov
dec
lods
loopne
inc
cmp
add
xchg
add
mov
pop
sbb
mov
mov
pop
stc
lcall
mov
stos
scas
insl
mov
cmp
jmp
repz
and
sarb
mov
pop
gs
repnz
adc
mov
decl
sub
mov
adc
pop
cmp
xor
dec
insl
push
cmp
jns
adc
ret
aaa
push
inc
pushf
sub
call
movsl
xorl
xor
insl
xchg
add
jp
mov
add
loop
push
add
es
or
shl
lock
fwait
jbe
jo
in
cltd
popa
inc
loop
out
mov
adc
dec
push
adc
add
andb
inc
add
sbb
addl
pop
cmp
sub
xchg
xchg
cmp
add
test
cmp
movsl
aad
sub
lret
mov
int
aaa
mov
shlb
enter
cmp
fisttps
push
cmp
add
fisttpll
jae
imul
add
pop
imulb
mov
cmp
imul
arpl
mov
sbb
popf
cli
movb
push
mov
push
jo
das
repz
jbe
mov
ret
mov
pop
je
pop
shlb
jns
fs
cmc
add
stc
sub
shrl
or
cmp
daa
xchg
sahf
ss
sbb
popa
iret
out
pop
addr16
pop
dec
dec
sti
aas
pop
mov
lea
jne
and
stos
mov
sub
sbbl
inc
push
arpl
rcr
stos
sbbl
je
dec
das
test
sbb
mov
sbb
add
add
cmp
sbb
popf
mov
cs
sbb
xchg
shr
xchg
add
mov
scas
xchg
jp
dec
adc
data16
inc
mov
into
int
loopne
pushf
sub
ficompl
push
xchg
mov
loope
xchg
cmp
shlb
xchg
cmpsl
scas
pop
sbbl
shll
subl
pop
and
lods
mov
sbbl
xor
js
in
jg
inc
rolb
cld
jae
je
xchg
bound
filds
ret
mov
enter
mov
mov
ret
cwtl
xchg
popf
fisubs
cmpsb
add
dec
cli
repz
adc
inc
add
jae
je
mov
xchg
push
sub
push
outsl
in
lret
cltd
mov
into
sbb
dec
push
add
imul
mov
mov
loope
sbb
popw
sti
ffreep
adc
add
cs
inc
push
or
add
jle
test
mov
or
into
and
cmp
xchg
sub
add
or
jge
and
push
mov
jp
ss
jae
loop
xchg
xchg
insb
mov
repnz
mov
mov
in
lahf
das
jbe
xchg
xchg
jp
inc
push
out
inc
sub
loope
adc
imul
or
mov
or
rcll
mov
cld
ljmp
push
fsubrp
mov
mov
cmpsb
sub
into
xchg
pop
mov
test
xchg
in
xchg
shll
pusha
fisttpll
lods
in
jecxz
mov
daa
fdiv
insl
stos
loopne
jecxz
test
push
lret
lods
inc
push
add
mov
divl
pop
cmp
sahf
rcrl
and
cmpsw
or
dec
fdiv
jmp
pop
inc
xor
or
test
ss
jmp
ja
add
inc
data16
adc
push
fistl
in
push
jge
sbb
divl
xor
add
inc
mov
pop
outsl
outsl
shr
repz
push
lods
cmp
fnstcw
inc
inc
aam
pop
mov
xchg
enter
mov
xchg
in
jge
mov
mov
xchg
or
gs
iret
mov
add
jp
in
lods
testl
push
push
aaa
jb
xchg
les
repnz
dec
fimull
rcrl
movsl
push
inc
add
dec
popl
popf
push
inc
xchg
es
push
repz
push
inc
xor
cltd
push
cwtl
dec
push
fs
iret
jo
clc
dec
sbb
push
push
hlt
jmp
dec
push
aad
ss
sub
push
gs
mov
mov
xor
aad
stos
jns
jge
push
test
arpl
lea
mov
or
mov
sbb
bound
stc
pop
push
aad
pop
dec
xor
int
js
test
loope
pop
repnz
adc
push
and
sbbb
in
out
jo
filds
push
pop
inc
add
mov
sub
out
das
int3
jle
out
movsb
adcb
repz
scas
push
loope
mov
call
add
pop
ljmp
mov
mov
fisttps
or
fisttpll
clc
stos
mov
subl
mov
jg
xor
jge
scas
test
inc
arpl
out
adc
xchg
inc
ds
inc
aad
mov
xchg
adc
jmp
jno
sub
outsl
mov
add
inc
add
dec
ja
aas
mov
rol
mov
movsl
or
pushf
push
xchg
mov
insb
idivb
xor
push
dec
enter
stos
add
xor
jecxz
sti
mov
ret
xchg
clc
adc
aam
test
and
push
or
and
xor
sub
into
adc
or
push
adc
pop
xchg
pop
mov
fnstsw
sbb
aaa
sbb
dec
movsl
dec
repz
jge
test
insl
dec
cltd
mov
lret
push
xor
push
leave
push
push
cld
cmc
in
mov
jnp
repnz
lret
aas
push
movsb
xor
arpl
cmp
mov
insb
adc
outsb
sbb
pop
out
mov
mov
js
repz
fldcw
es
lcall
xchg
shll
xchg
mov
imul
call
outsl
arpl
mov
cmpsl
inc
cmp
xchg
dec
icebp
jecxz
sbb
jb
mov
and
mov
push
shrl
xchg
psrlw
shll
in
push
fucom
js
dec
or
jnp
mov
adc
xchg
movl
ja
xchg
movsl
push
fs
push
stc
xchg
test
imul
into
scas
push
hlt
and
ljmp
fimull
xchg
sbb
jge
push
les
call
inc
adc
test
loope
fdivrs
cmc
and
pop
leave
and
outsb
ds
out
jns
dec
scas
mov
fwait
jp
fimull
or
lea
test
cmp
arpl
adc
mov
movsb
lret
sti
iret
sete
sarb
outsb
shl
mov
stc
or
xlat
xor
nop
dec
mov
sbb
jae
pop
sbb
or
addb
ds
ss
mov
or
insb
xchg
adc
sti
das
xor
popa
xchg
xchg
gs
inc
jg
mov
and
movsb
mov
lods
mov
and
cwtl
leave
cmp
jl
mov
cmpsl
or
cmpsl
pop
loopne
xor
dec
fmuls
cli
mov
pop
mov
and
lret
cmpsb
enter
pusha
and
or
add
shlb
sbb
lret
popa
add
or
fidivrl
js
ds
mov
or
test
bound
outsb
mov
bnd
repnz
xor
sub
mov
je
push
cmpsl
and
adc
jns
in
ret
aam
xor
fldenv
sbb
pop
sub
inc
int3
js
iret
cmp
sbb
iret
push
cs
xchg
pusha
xchg
fs
cmp
mov
cmp
mov
push
test
jb
sbb
push
add
add
scas
nop
repnz
or
xor
fdivrs
cmp
es
loope
arpl
aaa
sub
inc
or
ss
in
iret
inc
ja
data16
call
inc
mov
adc
nop
jle
pop
xchg
stos
pop
fisubrs
add
jae
sub
rolb
insl
jae
movsb
adc
rorl
mov
pop
xor
ret
jae
mov
rclb
popl
sub
inc
xchg
mov
pop
test
jecxz
or
mov
arpl
adc
iret
jbe
mov
fildll
mov
sarl
lret
ret
les
shrl
aas
jge
xchg
bound
cmp
jb
jns
mov
call
inc
loopne
add
and
arpl
push
adc
rolb
push
mov
addl
adcb
mov
mov
dec
mov
test
cmp
ljmp
cmp
adc
lods
int3
out
sbb
pxor
xor
hlt
pop
push
movsl
or
pop
xchg
div
push
pop
fsincos
xchg
rorl
jmp
imul
dec
ja
loop
xchg
mov
push
enter
inc
and
mov
imul
outsb
leave
xchg
cmc
cld
fstps
fstpl
xchg
dec
imul
aas
lods
stc
adc
adc
and
cmp
and
jnp
stos
in
loope
imul
sub
dec
inc
push
out
loopne
dec
and
xchg
popa
push
pop
pop
or
inc
sbb
cld
out
jmp
in
cmp
jo
or
stos
or
js
or
jmp
std
add
pop
sbb
cli
sub
xor
pop
xchg
inc
test
push
mov
outsb
or
push
and
negl
sbb
or
inc
test
pop
insb
adc
mov
push
pushf
xlat
dec
imul
and
sub
add
inc
xor
out
adc
sbbb
in
jo
in
mov
jne
imul
inc
test
fdivrs
iret
or
sub
rcll
adc
mov
popf
mov
inc
adc
popa
xchg
jecxz
mov
or
pop
pop
cltd
fsub
pop
sbb
ja
jae
in
inc
movsl
mov
jb
jnp
push
push
pop
stc
jbe
lds
insl
fmul
in
add
mov
fisubrs
mov
mov
adc
fsubs
or
enter
adc
shrl
push
cmp
shll
mov
xchg
repz
mov
mov
mov
clc
jno
adc
sbb
xchg
sbb
fnstenv
call
nop
mov
xchg
mov
cmp
dec
faddl
gs
imul
push
gs
jo
mov
xchg
sub
repnz
outsb
sub
jmp
mov
pop
mov
mov
inc
fwait
movsl
les
cld
xchg
push
mov
cld
sbb
stos
arpl
ret
mov
iret
xchg
pushf
in
shrb
sub
mov
mov
sub
fsts
sub
jae
nop
push
dec
adc
lock
mov
scas
xchg
push
jecxz
pop
mov
sti
jne
dec
outsb
mov
outsb
and
cmpsb
push
fldl
aam
insl
xor
enter
and
pop
mov
jecxz
pop
and
mov
int
xchg
lea
adc
mov
push
mov
mov
lret
dec
decb
cld
gs
lock
scas
loop
xchg
cmp
xor
mov
ffree
lea
out
ja
mov
xlat
add
push
fsubrp
inc
ja
jl
pushl
shl
aaa
rorl
push
fisubs
fdivr
addr16
imul
jge
jns
lea
adc
fstpl
mov
je,pn
js
rep
test
or
xor
push
mov
add
or
or
push
push
cmp
mov
mov
sub
dec
mov
mov
mov
mov
mov
cmpsl
inc
das
bound
and
cmpsb
cmp
cmpsb
push
jg
aas
xor
push
shl
fbld
mov
mov
add
push
inc
and
add
test
nop
aam
xchg
out
andl
sbb
add
movsb
xchg
or
out
xchg
jecxz
push
mov
adc
mov
and
xchg
idivb
dec
jb
fisttpl
fistl
pop
xchg
loope
pop
mov
jge
sub
ljmp
fstpl
inc
test
or
jnp
sbb
loopne
outsl
push
sti
push
cmp
in
fisubl
addr16
and
es
sbb
xor
lea
faddl
cs
add
testl
push
loopne
add
call
push
test
inc
fcoml
out
lea
lds
and
or
dec
imul
out
dec
pop
js
insl
ss
xchg
aas
or
test
inc
mov
fistps
dec
enter
adc
insl
insl
pop
mov
xor
mov
lods
xchg
jg
xlat
or
sbbb
movsl
pop
leave
push
int
xor
push
loopne
movl
iret
sbb
mov
stc
pop
fisttpl
das
dec
sbb
fisubrl
mov
cmc
outsb
shrl
mov
aaa
inc
xlat
fst
push
jmp
in
imul
xor
arpl
leave
imul
and
rcl
fisttps
add
sbb
pusha
pop
icebp
inc
mov
gs
clc
mov
add
lods
pop
test
jae
and
lds
mov
lods
in
xchg
testb
pop
adcb
sub
clc
adc
repnz
lods
sub
or
dec
mov
mov
sbb
pop
jnp
dec
sbb
int3
out
pusha
dec
sti
fs
nop
sub
mov
popa
xchg
loope
inc
xchg
icebp
adc
inc
mov
or
ja
into
and
ljmp
lret
movsl
cmpsl
sarl
xor
rolb
lds
mov
or
xchg
inc
pop
out
inc
jge
push
push
hlt
sub
les
arpl
sarb
mov
mov
in
mov
sbb
xor
divb
mov
cmp
shlb
scas
std
and
sub
adc
sbb
mov
xlat
popf
adc
xchg
outsb
rclb
test
jmp
insl
call
cmp
in
mulb
int3
js
mov
test
inc
sbb
xchg
call
xchg
inc
lret
cmp
mov
outsl
jecxz
psubusw
xchg
jo
cs
sbb
lds
jl
je
gs
jb
jmp
mov
xor
mov
push
lahf
mov
decl
imul
pop
aaa
adc
nop
sub
int3
sub
rolb
adc
cmp
lods
es
add
push
sub
jmp
jnp
fsincos
add
lods
or
inc
scas
and
fbstp
lret
jp
mov
adc
shll
aad
ljmp
addr16
cwtl
ljmp
imul
js
lcall
in
insb
les
imulb
enter
or
aas
add
cmp
inc
aas
in
jne
ja
mov
sub
test
xchg
add
sti
into
sub
or
cli
xor
push
jae
mov
cwtl
loop
mov
push
fcomi
or
xchg
out
mov
inc
ljmp
rolb
push
loopne
shrb
ficoml
cmp
jp
gs
cmp
rcll
bound
arpl
lret
mov
inc
negl
sbb
idivl
or
jno
lods
add
sti
mov
movsbl
push
testb
imul
cmpsl
dec
cmp
sbb
mov
cld
and
ret
mov
cli
fwait
mov
subl
les
push
pop
ja
and
ja
mov
sahf
lahf
insl
outsl
mov
mov
mov
in
pushf
call
cmpsl
outsb
adc
sbb
and
movsl
xchg
pop
ret
movsl
fsts
push
lret
clc
pop
pop
push
or
inc
pop
testl
xchg
insl
cs
xor
adc
ret
sub
mov
cmpsb
push
outsb
shlb
or
add
inc
mov
xor
inc
inc
out
push
jnp
mov
in
test
out
sub
iret
cmp
cmp
jmp
adc
lcall
and
mov
and
or
mov
mov
cmp
xor
xorl
lcall
movsl
das
loop
jae
lret
mov
mov
bound
cmp
cmpsb
mov
icebp
pop
add
add
testb
ror
in
test
add
xchg
adc
aas
loopne
xor
movsl
xchg
loop
shl
mov
lods
inc
pop
sbb
xor
fwait
lds
mov
faddl
sub
bound
push
adc
sbb
jns
int3
je
mov
sbb
iret
or
out
popf
fidivrl
mov
adc
and
mov
sti
push
stc
scas
jno
lea
andl
dec
repnz
inc
xor
inc
or
fisttpl
push
mov
hlt
mov
push
ljmp
jo
and
dec
arpl
testb
push
inc
js
mov
into
cmp
test
pop
movsb
negl
add
jo
ljmp
mov
sub
dec
lock
test
jne
xchg
and
arpl
push
push
imul
sbb
dec
jbe
and
jo
inc
stc
shll
jbe
testl
pop
lcall
push
add
mov
xor
push
gs
ret
jae
insb
daa
in
add
movsl
sti
dec
outsl
call
jo
mov
scas
jmp
mov
cwtl
cmp
mov
mov
rolb
into
add
rcl
aam
mov
or
xchg
and
sbb
adc
cmp
mov
das
pop
stc
outsb
inc
pop
cld
add
pushf
pop
sbbl
mov
pushf
popa
fs
mulb
or
inc
sbb
andb
imul
add
out
pop
cmp
and
cmp
enter
xor
scas
mov
dec
adc
bnd
jle
clc
mov
popf
int
loopne
rcr
lods
or
into
subb
pop
aad
mov
fdivrs
jno
xor
and
ja
inc
xlat
cmp
hlt
pushf
cmp
js
sbb
ss
sub
or
repz
jno
jg
sub
xor
inc
insb
stos
mov
test
push
inc
mov
push
addl
cmc
data16
jo
into
mov
fbld
cli
or
insl
xlat
sub
xchg
and
jl
mov
nop
sub
lret
cmc
ds
dec
mov
clc
dec
sahf
dec
pusha
fs
mov
sti
je
insb
jns
mov
pop
sub
pause
xor
xor
and
jg
not
jl
add
mov
push
jno
cmp
insb
jp
mov
rorl
mov
add
mov
testl
pusha
out
push
jmp
cmc
xchg
or
cmp
mov
add
pop
inc
inc
arpl
mov
cltd
dec
fimuls
xor
push
icebp
ret
sub
mov
pushf
mov
fdivs
mov
cmpsl
or
cmp
mov
xlat
mov
jp
xchg
loope
adc
xchg
adc
int3
and
stc
and
mov
nop
push
test
add
lock
sbb
outsl
adc
and
sub
nop
outsl
fcoml
pop
dec
iret
adc
shrb
and
jae
jecxz
loop
mov
cmp
pop
add
enter
dec
repnz
cmpsl
mov
sbb
ret
jg
mov
cwtl
fs
xor
cmp
cmp
mov
mov
in
rorl
push
xchg
cmp
mov
lret
mov
push
cli
pop
imul
sub
int3
pop
push
pop
sti
in
mov
jb
iret
sub
xor
gs
notl
les
out
sti
cmp
jno
sub
ret
cwtl
cltd
cmc
test
lock
in
push
inc
rcll
fwait
mov
hlt
in
mov
mov
into
dec
lret
stos
sub
push
nop
jge
scas
and
push
xor
or
fs
les
jnp
movsb
jnp
push
mov
fnstenv
lds
pop
mov
out
out
mov
inc
loope
xor
roll
and
cmp
jno
push
divb
dec
sbb
mov
lock
imul
aaa
lds
popf
test
adc
or
pop
jle
ret
add
js
sub
sarl
mov
in
cmp
ja
out
dec
xchg
ss
push
nop
dec
push
gs
ss
push
js
xor
out
daa
dec
cmp
dec
loopne
hlt
sarb
push
cmp
pop
std
mov
add
insb
jle
add
inc
ljmp
inc
int3
xor
push
cmc
and
rcrb
daa
testl
push
sbb
scas
dec
dec
arpl
imul
lret
movb
gs
xchg
push
mov
inc
daa
and
inc
scas
movaps
sub
scas
adc
and
insl
scas
lds
xor
inc
stos
in
jmp
jle
in
add
pop
add
adc
iret
jecxz
inc
sbb
jbe
jl
ret
mov
pop
add
and
mov
loopne
pop
nop
cli
mov
dec
dec
js
lock
repnz
pop
mov
mov
and
cmc
fdivrs
and
dec
inc
pop
popa
into
mov
mov
movsb
es
xchg
adc
lods
shlb
int3
lock
ror
cmp
and
xor
jno
gs
idivb
jmp
imul
cwtl
push
sbb
shlb
sub
jmp
mov
mov
dec
lock
sub
loopne
mov
push
loopne
push
pop
jge
xor
outsl
movsl
movsl
push
xor
add
les
fldt
xchg
enter
in
dec
cltd
mov
in
push
ds
add
in
dec
add
and
cmp
call
imul
and
jmp
jb
call
cmp
dec
push
dec
pop
xor
mov
inc
jg
sub
inc
sahf
les
push
loop
push
push
leave
adc
outsl
inc
lods
dec
sbb
lahf
loope
push
mov
imul
add
sub
sarb
subb
add
sbb
lds
mov
icebp
xor
push
xor
scas
mov
movsl
cmpsb
cmp
sbb
jp
dec
pop
lret
xchg
mull
scas
push
sub
add
cltd
pop
cwtl
cmp
ss
xchg
dec
jne
mov
loope
sub
pop
fdivrp
cmp
cmp
xchg
sti
int3
cmp
int3
rcr
jb
dec
jnp
cld
mov
aad
and
jo
ljmp
lea
shlb
or
or
pop
and
sub
cmp
imul
fistpll
or
push
xchg
add
jns
test
jge
or
cmc
outsb
inc
xchg
cltd
lea
leave
jbe
aad
aad
pop
lcall
xchg
sub
cli
roll
into
inc
mov
jle
in
daa
xchg
stos
sarb
pop
mov
enter
cmpsl
arpl
lock
mov
movsb
xor
std
xchg
cmp
in
xor
aad
sbb
ss
push
ljmp
mov
out
divb
sub
int
cmpsb
mov
or
and
adc
push
fistl
sub
call
jmp
fdivrl
jge
inc
std
xorl
inc
sub
push
jecxz
dec
sbb
dec
push
and
xchg
outsb
arpl
mov
mov
andl
in
push
int
and
stc
ret
xor
and
fnclex
cmp
lahf
sub
mov
es
push
inc
dec
aaa
mov
out
xchg
fwait
jg
mov
cld
inc
cld
nop
add
add
jne
fisttps
cmp
jo
jns
shrl
lret
sub
out
xor
pop
add
mov
nop
int3
out
sub
cmp
cmp
clc
mov
xchg
dec
test
in
jmp
ss
subb
mov
cltd
jno
dec
jno
sub
sub
mov
cmp
xchg
and
cli
fs
int3
aas
or
bound
jl
rorb
mov
mov
bound
repz
adc
ds
xchg
mov
pop
pusha
add
daa
pop
pop
ret
mov
cmp
idivl
lret
lds
loop
enter
sbb
xlat
ds
add
cmp
xchg
call
adc
cmp
bound
ljmp
inc
fdiv
loope
lds
rol
xchg
sub
js
mov
imul
imul
cmp
in
dec
and
dec
in
pushf
and
out
push
cmp
int
cld
jnp
cwtd
pusha
outsb
pop
cli
sbb
mov
pop
mov
inc
ja
add
shlb
outsb
push
sub
into
ljmp
mov
stc
scas
sahf
std
loop
enter
jnp
fistpll
xchg
sub
lock
ret
repz
pop
and
jecxz
scas
aas
pop
push
push
loope
loop
int3
jmp
pop
pop
xor
flds
mov
push
or
cmp
lds
dec
lods
pop
mov
jo
dec
sub
adcl
lcall
gs
jecxz
pop
mov
sbb
cmp
xor
cvtpi2ps
das
mov
sub
adc
iret
pop
cmp
fsts
fimuls
push
sbb
rcrb
sbb
dec
fsubrl
mov
push
sbb
cli
mov
mov
cltd
scas
sub
sub
xchg
xor
bnd
pop
cmp
or
lcall
cli
icebp
loope
pop
xchg
jae
mov
jbe
jns
std
enter
test
ror
xor
inc
add
stos
daa
xor
jnp
aad
in
sbb
icebp
in
movsl
add
cld
adc
nop
push
je
fidivrs
dec
stos
repnz
lahf
xchg
scas
mov
leave
adc
adc
adc
pop
jno
sub
sub
sbb
cmp
mov
test
lret
add
mov
adc
dec
test
adc
hlt
in
mov
jl
sbb
rclb
add
jle
mov
inc
jp
and
movsl
rorl
mov
inc
pop
push
movl
fs
xor
xor
mov
repnz
mov
addr16
movsb
loope
xchg
cmp
bound
int3
leave
inc
mov
sti
mov
cmc
ret
fwait
mov
push
push
fdivrs
cmp
add
testb
out
enter
push
jno
repz
xchg
xchg
fisubrs
rcl
mov
xor
push
sbbb
lea
xchg
jnp
add
mov
push
jecxz
cmp
cld
fucomip
xor
mov
pop
inc
imul
cmp
jno
adcl
fmull
imul
lret
pop
pop
loop
inc
aad
dec
enter
bound
stos
imul
push
jae
call
dec
xchg
cmp
xor
test
and
gs
pop
ss
and
stos
xchg
iret
or
fiaddl
adc
sti
outsl
fdivrs
popf
out
neg
adc
dec
arpl
addr16
pop
daa
mov
repz
lcall
inc
or
test
sbb
dec
mov
in
jmp
xor
add
mov
inc
mov
repnz
ljmp
sub
lock
out
mov
push
hlt
mov
add
ss
add
incl
scas
sub
xlat
aaa
or
lcall
in
in
adc
sbb
or
out
jne
pop
scas
sbb
pop
add
mov
xcrypt-cfb
cmpsl
in
adc
pop
popf
push
fsubs
xor
xchg
inc
and
sbb
bound
lret
jae
jns
or
mov
dec
mov
imul
loop
ss
push
cltd
adc
mov
mov
xchg
jbe
into
and
daa
repnz
pop
jbe
dec
cmc
std
das
ret
mov
mov
and
subb
sub
rcll
push
das
sbb
and
push
mov
into
sbb
xchg
sub
fldl
jge
sarl
lret
xchg
lods
fnstcw
leave
loop
les
sahf
sub
and
dec
loopne
std
mov
clc
jo
frstor
sub
jb
ret
lds
push
ds
outsb
lret
data16
sbb
cmp
daa
lret
popa
lea
rcll
sbb
pop
bound
cmp
je
or
sar
adc
mov
add
xor
test
mov
cmp
out
es
imul
jl
out
xchg
mov
push
icebp
pop
mov
lahf
mov
loop
xor
cmp
daa
xchg
mov
cltd
and
mov
inc
incl
pop
mov
hlt
xor
es
fildll
push
fists
arpl
pop
xchg
aaa
fistl
jle
mov
aaa
jne
sub
dec
or
jne
sub
aad
sahf
pop
jbe
push
ret
sti
mov
inc
lock
or
mov
mov
adc
imul
mov
xchg
cmp
ret
ja
scas
inc
sub
and
push
pop
push
push
xor
imul
incl
movsb
add
rol
imul
incb
dec
xor
pop
in
push
inc
push
in
out
mov
sbb
movd
stos
test
mov
pop
fwait
xchg
mov
adc
call
in
jns
xchg
jae
jae
out
movsl
fcom
scas
aam
aas
and
not
xchg
cmpsb
adc
and
jecxz
sbb
test
and
pop
mov
push
jp
adc
dec
insb
jp
sub
cli
out
sub
cltd
popa
and
or
cmp
shlb
in
bound
adc
inc
mov
push
stos
aaa
push
popf
orb
ret
push
mov
inc
dec
sub
icebp
dec
sarl
ficomps
jmp
pop
mov
daa
dec
fs
adc
fcomi
data16
ljmp
nop
mov
push
data16
lcall
insl
je
dec
sti
mov
xchg
sub
xchg
adc
inc
dec
ss
in
cmp
mov
fidivrl
mov
adc
mov
mov
call
push
ljmp
dec
test
std
jecxz
adc
lahf
outsb
stos
dec
loop
jnp
push
jnp
jmp
icebp
sub
lods
mov
mov
and
pop
mov
lcall
clc
arpl
push
sbb
jg
or
rorl
cmpsb
ret
inc
push
or
icebp
mov
stos
out
mov
mov
adc
testl
push
in
jb
sbb
or
into
sbb
jae
mov
fwait
jmp
imul
jno
dec
push
inc
loope
leave
mov
imul
divb
rcll
push
icebp
sbb
xchg
in
pop
push
pop
popa
nop
and
lods
fs
xchg
fcoms
sti
mov
test
xchg
inc
out
pusha
rolb
lds
inc
dec
mov
dec
jg
sub
test
ja
jno
movsl
sub
lcall
cmp
imul
push
loopne
push
pop
ljmp
xchg
push
add
or
iret
cmp
jno
rolb
aam
shlb
mov
sbb
ljmp
push
or
les
clc
movsl
mov
mov
in
shlb
test
hlt
in
add
fwait
pop
ja
sbb
push
out
stc
xchg
fwait
pop
or
push
mov
add
pop
xchg
les
aam
out
mov
jle
hlt
daa
out
fmull
sbb
ret
jns
ret
adc
xchg
pusha
sbb
inc
jle
xor
notl
popf
loope
outsl
fists
aad
or
add
fiadds
clc
hlt
fsts
xchg
adc
movsl
dec
mov
push
in
xlat
cltd
pop
cli
pop
negb
cmp
dec
push
pusha
push
add
dec
test
maskmovq
testl
sbb
lock
adc
push
jb
push
imul
cwtl
mov
mov
iret
clc
dec
mov
lahf
inc
inc
push
jne
ja
inc
aam
xchg
sbb
cld
not
fidivrl
iret
sub
decl
cli
inc
jbe
sbb
mov
fmul
cltd
pushf
aas
lret
std
cltd
mov
shll
loope
push
pop
push
jge
fsub
pop
call
sub
push
fucomip
daa
push
push
stc
push
cmp
or
popf
popf
pop
mov
inc
lcall
pushf
add
fs
mov
sahf
test
aam
lock
cwtl
jne
cmpsl
mov
pop
into
addr16
xchg
dec
fisttpll
aaa
adc
addr16
imul
push
adc
scas
ds
in
mov
mov
cli
bound
mov
and
and
lahf
cltd
mov
sbb
lret
fists
movsb
fs
sub
das
out
out
movsb
mov
dec
jg
xchg
icebp
pushf
loop
shll
sbb
imul
int3
and
daa
push
aaa
sub
movsb
push
lcall
xorb
mov
leave
fxch
inc
sbb
pop
arpl
xlat
js
out
xor
pop
leave
popf
lods
cmp
icebp
sti
das
mov
test
xor
outsb
mov
std
inc
cmp
push
stos
and
repnz
pop
jb
ss
sbb
jno
roll
cltd
pop
mov
and
cmp
xor
pslld
lret
fcmovu
in
inc
test
js
int
xchg
or
stos
adc
sti
sub
mov
mov
adc
xor
xor
sub
daa
sbb
cmpsb
mov
inc
mov
jmp
cmp
xchg
dec
add
outsl
inc
pop
rolb
mov
sti
fistpll
mov
and
mov
or
xor
push
and
test
bnd
outsb
out
cmp
out
arpl
les
adc
orb
xor
cwtl
andb
sahf
ss
or
sti
xacquire
popf
popa
pop
inc
stos
jmp
gs
dec
push
aaa
xlat
es
aas
call
dec
sbb
add
mov
add
and
xor
xchg
inc
lcall
popa
aam
stc
add
mov
add
test
mov
popa
add
lds
mov
das
inc
aas
sbb
out
mov
sub
stos
lret
cld
outsl
add
fists
cmpb
mov
cltd
mov
loop
mov
es
enter
repz
stos
sub
mov
and
inc
sbb
adc
icebp
clc
sbb
mov
or
hlt
cmp
cltd
jno
fstl
into
inc
cmpsl
xchg
dec
lock
dec
add
sahf
push
sti
jmp
negb
stc
or
xor
pop
xchg
and
cltd
adc
push
fsubs
or
mov
adc
mov
loope
cltd
mov
js
sub
fwait
mov
aas
xorb
in
jg
adc
mov
sub
cs
adc
rol
mov
test
fldt
inc
push
mov
or
dec
lea
lcall
mov
or
jb
ret
and
cmpsw
repnz
push
add
add
insl
xchg
cmp
pop
in
adc
scas
pop
testb
adc
ds
cld
mov
js
movsl
rorl
arpl
in
sbb
jp
jecxz
scas
mov
cli
dec
in
or
aad
mov
xchg
ss
loop
ja
jnp
test
jl
andb
lret
mov
movsb
mov
addr16
cltd
mov
mov
inc
jmp
fucom
addb
adc
push
xor
mulb
mov
jbe
and
sbb
loope
cmp
or
mov
sub
mov
imul
pushw
repnz
cld
add
fistpll
hlt
inc
or
mov
fsub
pop
sbb
mov
mov
jg
jle
inc
aaa
mov
mov
stos
enter
or
cld
jecxz
test
rol
in
mov
and
dec
xchg
add
cmp
out
xchg
out
and
mov
mov
add
or
fistps
mov
int3
hlt
inc
mov
push
pushf
call
jne
cmpsb
sbb
lcall
jg
sbb
pop
pop
shll
mov
and
int3
lds
in
pmaxub
push
hlt
loop
hlt
outsb
add
or
ret
mov
xchg
lds
xor
test
dec
lahf
mov
and
dec
inc
pop
adc
mov
insb
aas
cmp
das
divl
daa
movsl
jne
dec
lcall
inc
stos
ljmp
push
jno
add
xchg
scas
test
jno
inc
push
jnp
xchg
shrb
iret
xchg
sub
stos
dec
movsb
add
push
or
sub
enter
push
pop
mov
sbb
dec
jecxz
mov
lea
push
mov
sub
cmp
xor
cmp
mov
fucom
xchg
aam
adc
jns
mov
sbb
stos
xor
ud2
pop
lea
outsb
adc
jmp
in
sets
push
outsl
cmpl
stos
push
pop
pop
pop
cmp
inc
test
out
jmp
rclb
lods
pop
pop
xchg
and
imul
cmp
pop
inc
out
mov
sub
loop
xor
add
inc
sub
bound
xchg
fwait
mov
mov
or
jae
dec
dec
mov
xor
ds
cmp
sbb
sbb
dec
iret
lds
roll
cli
push
jne
fimull
jb
dec
pop
out
cli
push
inc
sub
mov
sbb
mov
dec
push
push
add
dec
stos
pop
cld
add
sbb
xchg
push
jg
adcb
mov
shll
mov
or
stos
mov
jle
pop
xor
cwtl
scas
imul
pop
mov
insb
fwait
cmp
fnstsw
cmp
mov
sub
test
cmp
sbb
test
in
jns
pop
mov
enter
cmpsl
and
push
inc
jno
and
aam
xor
je
push
ficompl
loope
xor
pop
dec
cmpsl
lea
jecxz
in
in
addr16
mov
lcall
xchg
xor
loopne
mov
xchg
aam
mov
sub
push
jae
jmp
inc
cli
mov
in
push
outsl
add
sub
clc
out
add
inc
mov
jns
xlat
add
in
enter
lret
jbe
push
testb
lcall
inc
push
popa
add
lock
daa
aaa
inc
mov
dec
jle
sti
mov
movsl
imull
cmp
inc
dec
dec
mov
cmp
xor
pmaxsw
lahf
ffreep
sub
aas
les
sub
xor
add
dec
cs
push
jle
imul
xchg
push
jbe
sbb
fistpl
fdivrl
mov
jne
push
scas
push
mov
fisubs
and
pop
loop
insb
jo
test
pushf
cmp
or
call
out
or
inc
sub
in
out
loope
lret
imul
adc
jmp
mov
stos
imul
mov
push
out
mov
mov
int3
mov
mov
xor
sbb
sub
mov
in
popf
nop
aaa
or
stos
adc
adc
sar
aaa
push
loope
xor
ja
pop
mov
push
fdivrs
loopne
mov
sub
addr16
sub
mov
scas
and
sub
fbstp
std
cmp
into
test
fldcw
mov
fs
cmp
mov
cmpsb
mov
shl
ja
add
daa
jne
dec
sub
xchg
adc
out
or
sbbl
sbb
xorl
sar
aad
popf
lock
adc
mov
cmp
rcpps
pop
imulb
sbb
xchg
daa
push
ds
jecxz
inc
stos
pop
dec
lret
loop
dec
xor
xchg
in
mov
cmpsl
dec
ret
loope
cmp
adc
aam
xchg
pop
stos
rcrl
jmp
xchg
fsubp
jmp
pop
and
lods
rcrb
xchg
and
popf
and
xor
add
addr16
jne
dec
jge
cmp
in
mov
and
add
test
inc
bound
lcall
cs
sub
js
sarl
dec
movhlps
lcall
push
scas
inc
jle
scas
xchg
push
and
inc
mov
call
stos
aas
dec
lcall
cmpl
daa
dec
pop
call
insb
fisttpll
out
mov
sti
dec
inc
cmp
sti
insb
ret
call
inc
stos
iret
push
and
fldt
roll
rorb
jno
jl
dec
add
xchg
call
imull
push
jp
in
pop
mov
add
movsl
mov
and
xchg
mov
call
arpl
inc
mov
lock
into
stos
push
notb
add
add
fldcw
idivl
aad
in
mov
mov
bound
mov
inc
mov
les
sar
or
popa
push
mov
mov
popf
add
and
lods
stc
push
shrb
and
bound
clc
js
stc
adc
pushf
xchg
sub
repz
sahf
xlat
jle
mov
popfw
repz
int
jno
xor
dec
ror
sub
mov
je
push
hlt
call
pop
insl
push
fcoml
fs
inc
test
mov
push
cmpl
cmp
test
jmp
xor
in
xor
xlat
mov
ret
fsubrs
cmpsl
push
push
mov
rcl
stos
call
popa
jp
ljmp
je
push
sbb
loopne
add
xchg
push
je
out
push
repz
ret
sub
jle
shlb
sub
dec
outsb
xchg
mov
lock
mov
stos
jo
cli
cmp
inc
shlb
mov
pop
pusha
aad
rcr
fs
stc
ljmp
scas
mov
push
jb
int
fildl
mov
addr16
mov
es
or
lods
jne
mov
nop
bound
push
leave
add
cmp
cmc
xchg
sbb
andb
ss
loope
and
add
test
mov
xchg
mov
adc
shlb
popa
test
mov
into
push
or
pop
or
or
repnz
fdivrl
mov
cmpsl
insl
lahf
mov
cmp
fchs
mov
mov
rolb
add
lods
mov
sub
jl
outsb
lock
sbb
loope
mov
adc
fwait
popf
cmp
cmpsl
int3
adc
orb
lods
xchg
js
imul
jae
shl
addr16
jmp
scas
xor
and
xlat
movsl
lock
or
cmp
shrl
iretw
inc
cmp
repz
dec
lea
inc
daa
fucomi
cltd
push
add
lret
or
pop
dec
pop
pop
pop
popf
mov
cs
sbb
out
sahf
pop
out
jb
xchg
cmpsl
das
adc
insb
lock
xchg
xor
test
xor
and
xor
popa
lods
jo
fs
jl
mov
jp
adc
out
and
sbb
rolb
xchg
sbb
mov
mov
lea
mov
hlt
or
int
lds
fsubr
sub
dec
jl
insl
je
add
pop
sub
out
xor
js
int3
cld
inc
jge
push
cltd
pop
mov
dec
dec
inc
adc
adc
push
cmp
test
or
dec
lret
xchg
lcall
jg
jecxz,pn
sbb
push
xchg
ljmp
call
jnp
scas
dec
jbe
xor
mov
mov
dec
inc
push
lret
and
pop
insl
push
pop
inc
cmc
push
cs
scas
mov
or
je
jp
or
outsl
adc
dec
adc
int
out
mov
mov
daa
dec
orb
xchg
pop
loope
mov
mov
adc
es
cmp
outsl
dec
sbb
aad
rclb
out
mov
inc
dec
jae
and
push
ss
adc
cli
push
test
and
cmp
mov
pop
or
jae
pop
inc
sahf
je,pn
dec
mov
ret
ljmp
pop
fincstp
sub
xor
inc
pop
or
mov
pop
jge
std
lock
stos
cli
rcrl
pusha
inc
mov
push
fildll
mov
add
jge
xor
sub
ss
jge
xor
push
bound
cmp
test
sbb
pop
cld
sbb
sub
add
or
push
leave
es
sub
add
insb
loopne
shl
mov
in
mov
inc
push
cli
add
repnz
cwtl
ljmp
jp
lahf
push
xchg
mov
mov
rorb
fdivr
mov
sahf
mov
sub
jp
add
or
cmpsb
cli
push
out
daa
xchg
sahf
xor
pushf
sbb
sbb
sub
lds
mov
or
fnstenv
bts
mov
cmp
loope
shrb
repz
cmp
xchg
test
ss
mov
addr16
bound
pop
dec
scas
loopne
push
inc
movsb
add
repnz
dec
pop
xor
push
lret
mov
daa
inc
gs
in
sub
out
cmp
lea
or
and
xchg
loop
jb
sub
test
and
addl
outsb
movsl
clc
stos
jmp
outsb
repnz
push
and
and
loop
push
ror
xchg
lret
sbb
and
pop
mov
lds
mov
cwtl
and
loope
enter
mov
or
jmp
mov
imul
stos
cmc
jno
pushf
ret
add
test
cwtl
orl
cmp
test
mov
sbb
xor
mov
ja
sbb
dec
push
sub
cwtl
bound
xchg
loopne
dec
pop
rcrb
mov
ss
sbb
xchg
sbb
lea
ds
test
decb
mov
fwait
xchg
jnp
movsl
addr16
xchg
fsubrl
in
das
or
pop
das
jmp
xchg
xchg
fucomp
adc
fnstsw
jmp
inc
out
shl
add
loopne
pop
sbb
dec
repnz
sbbb
mov
inc
das
lods
adc
out
cmc
dec
sbb
push
cmp
xchg
pop
and
idiv
dec
ret
in
pop
xchg
inc
inc
add
lds
test
cmp
jno
xor
clc
test
add
mov
ret
mov
rcll
rorl
jno
sub
jecxz
nop
add
out
arpl
test
fs
scas
sub
jo
mov
push
les
xchg
xchg
xlat
out
icebp
aaa
jns
sbb
stc
int3
fs
add
jecxz
cmp
fucomi
sub
jb
or
cltd
dec
mov
push
pop
and
test
scas
inc
lods
adc
repnz
imul
call
inc
dec
and
orb
jecxz
mov
fwait
push
mov
add
mov
adc
mov
mov
cmc
dec
leave
mov
daa
jne
adcb
hlt
pushf
insl
adc
jle
nop
faddl
add
and
sub
add
jg
cmp
jo
inc
das
es
add
in
or
mov
mov
es
fstpt
pop
inc
cmp
mov
jne
mov
lret
rcrl
inc
push
ljmp
ret
dec
push
xchg
pop
addl
and
repnz
test
stc
add
arpl
je
ja
mov
jbe
sbb
std
cmpsb
imul
xor
fdivr
cmp
jmp
sub
cmp
adc
jne
fsubs
cld
js
insb
shll
or
out
dec
adc
pop
js
sub
pop
adc
or
push
jle
jmp
jo
adc
mov
xchg
dec
cmp
scas
test
jae
mov
in
addr16
mov
mulb
lods
imul
pand
popf
and
dec
sbb
call
jge
inc
test
jnp
and
xlat
cmp
push
not
xchg
jae
orl
js
mov
ja
insl
fbstp
jbe
aad
cs
aad
mov
push
arpl
fcoms
dec
pop
mov
iret
mov
andl
push
sti
xor
or
xchg
jb
sub
push
movsb
or
cmpsb
sub
and
push
jmp
pop
cmpsb
scas
xchg
or
fstps
jb
addr16
inc
insb
pop
repnz
mov
adc
jbe
xchg
cmc
xor
idivb
sahf
mov
in
inc
repnz
adc
sarb
pop
inc
pop
hlt
nop
push
jmp
mov
adc
adcl
cmp
dec
clc
lret
inc
jnp
divl
sbb
lods
enter
push
cmp
xchg
inc
add
lods
cmp
sub
shrb
xlat
out
mov
int
xorl
sti
not
jne
and
incb
sbb
or
adc
sub
data16
hlt
lret
out
imul
aaa
cmp
orl
fldt
fwait
xchg
xchg
hlt
jp
xchg
pop
dec
data16
scas
xchg
sarb
xchg
lods
lret
mov
loop
test
xchg
pop
push
jecxz
call
lret
mov
xchg
icebp
arpl
cmp
push
pop
sbb
mov
or
jmp
aad
addl
mov
in
cli
sbb
xchg
mov
imul
test
xchg
inc
nop
cmp
stos
and
out
lea
loope
fsubr
dec
xchg
mov
sbb
inc
mov
movsb
lods
ret
pop
add
int
sbb
shlb
pusha
stos
into
out
test
push
inc
stos
insb
add
sar
mov
sbb
sub
loope
jnp
popf
sbb
mov
and
fldlg2
add
xor
jge
mov
punpckhwd
add
dec
je
shrl
daa
fisubs
ja
mov
mov
jo
push
jmp
pop
notl
movsb
stc
lahf
subl
push
test
mov
mov
or
stc
pop
xor
sti
add
jno
mov
adc
add
nop
push
add
pop
or
inc
movups
insl
or
xor
je
mov
or
aam
pop
shll
xor
push
not
scas
mov
addl
mov
ret
call
jmp
enter
setbe
mov
mov
inc
lret
sbb
mov
mov
out
arpl
add
popa
mov
pushf
xchg
cltd
jecxz
jno
jle
and
pushf
stos
push
fsubr
mov
push
xchg
lea
insb
push
test
shlb
imull
pop
and
aaa
sub
sbb
ds
xor
stos
arpl
loopne,pt
jnp
sar
dec
mov
mov
push
int3
mov
pop
jl
ja
outsl
or
push
aam
ja
cmovg
push
pop
rcrb
cmpsl
lret
out
mov
iret
shrb
xchg
call
dec
pop
cltd
xorb
add
jge
mov
pop
mov
gs
repz
xchg
dec
data16
xchg
rorl
jle
dec
xor
xchg
lcall
mov
movsb
adc
pop
loopne
mov
icebp
insl
xor
test
fnstsw
xor
cmpl
addr16
test
lret
lcall
xor
and
push
movsb
rolb
and
nop
xchg
or
outsl
mov
cwtl
movsl
paddusw
ja
ficomps
fidivrl
lcall
into
add
sbb
imul
jne
push
adc
ret
fs
or
and
insb
inc
lock
inc
test
loope
mov
pop
lock
cltd
das
iret
jo
mov
adc
or
into
mov
sub
rorl
sub
insl
inc
add
arpl
js
shll
daa
mov
movsl
repz
shrb
mov
fmull
out
mov
jmp
lahf
adc
loope
scas
inc
leave
pop
stos
out
je
cld
test
std
mov
cmovne
test
aas
orb
add
or
repnz
nop
dec
pop
or
scas
or
hlt
or
loopne
xchg
stos
xor
outsl
xchg
jno
das
push
sahf
xor
dec
repz
push
lods
add
dec
push
push
jo
out
pop
xchg
mov
or
rclb
mov
fcmovnbe
shr
scas
xchg
push
xchg
add
pop
jle
repnz
arpl
xchg
cltd
pop
push
xchg
mov
jmp
add
inc
adc
xchg
dec
insl
fwait
mov
sbb
adc
add
pop
xor
flds
in
daa
repz
cmpsl
sub
pop
or
sbb
test
sub
scas
push
mov
sub
pop
pop
out
pop
mov
negl
mov
sbb
xor
xor
ret
mulb
lea
dec
pop
test
or
arpl
cmp
push
lods
pop
sbb
mov
cld
mov
test
test
sub
xchg
cmp
shll
out
add
mov
mov
lahf
pop
out
mov
dec
dec
fadds
negl
hlt
cmp
ret
push
inc
mov
cltd
jl
das
ror
mov
push
aas
ds
cmc
sub
jmp
push
pusha
adc
adc
dec
shrl
cmpsb
stos
mov
pop
add
cmp
aam
sub
std
je
and
jle
in
and
flds
xchg
cwtl
inc
test
mov
outsl
aam
xchg
aaa
insl
lahf
jge
aam
stc
clc
sub
pop
push
adc
mov
cwtl
test
or
push
mov
xchg
or
in
ret
scas
and
sbb
sbb
adc
movsb
pop
std
int
mov
adc
rorl
cmp
lcall
lods
xor
sbb
add
jne
dec
roll
xor
xor
ljmp
test
out
out
addr16
cmpsb
add
shlb
xor
pop
cmpsb
mov
loop
fmull
testl
cs
out
and
mov
xchg
dec
inc
inc
push
call
mov
xchg
outsb
fs
inc
wrmsr
icebp
push
fmul
add
stos
shlb
iret
xor
pushf
dec
pop
sub
subb
push
push
les
dec
out
jne
jb
mov
xchg
pop
out
icebp
mov
cli
pop
or
sbb
mov
adc
sbbl
lret
sbb
pushf
mov
dec
in
add
cmpsb
nop
xchg
ss
incb
dec
inc
add
xchg
iret
sub
or
iret
sub
mov
inc
in
inc
dec
loope
pop
in
xchg
int
fwait
xchg
int
push
pop
lret
adc
or
stc
mov
add
popf
js
or
sub
and
pop
insl
sub
lods
mov
pop
insl
inc
out
ljmp
orl
subb
dec
adc
cld
sbb
jecxz
push
int3
jg
mov
negb
lcall
pop
cld
push
sti
imul
pmulhuw
adc
ds
out
orb
inc
cmp
pop
hlt
push
test
add
cltd
mov
popf
rcll
sarl
imul
rcl
jo
cmp
cmc
cs
add
mov
sub
jbe
push
insb
adc
rol
pop
out
loopne
out
mov
push
pop
jb
lahf
inc
mov
fwait
cltd
mov
pop
mov
sbb
jle
movsl
xor
push
push
pop
dec
int3
dec
movsb
insl
fldenv
mov
cli
lcall
pop
push
cmp
xchg
repz
sbb
jbe
sbb
arpl
push
inc
xor
pop
dec
stos
out
xchg
cs
dec
ss
jno
cmp
cmp
imul
xor
movsb
jge
movsl
pushf
xor
xchg
loopne
cltd
rcrb
lock
ljmp
mov
sub
les
mov
xchg
dec
xchg
mov
aas
movsb
inc
jne
xorb
loopne
loopne
cwtl
fwait
dec
pop
inc
push
bnd
test
and
fcoml
aad
or
adc
mov
lahf
xchg
adcl
xchg
outsb
mov
jge
mov
mov
pop
jne
fdivs
xchg
lcall
out
dec
adcb
aaa
popf
adc
and
xchg
adc
sub
push
mov
ja
out
fwait
jb
imull
scas
xchg
sbb
xchg
inc
sbb
add
out
pop
hlt
cmp
ffreep
jg
push
rorb
pop
xchg
in
fwait
sub
push
in
aas
mov
stos
stos
fisttpll
in
inc
sub
xchg
jge
loopne
mov
movsl
adc
jns
cmp
lds
and
rclb
insl
leave
imul
inc
mov
out
outsl
arpl
push
pusha
dec
data16
add
push
in
push
mov
mov
and
and
push
pop
aas
fwait
daa
add
icebp
scas
aam
xor
call
aaa
fwait
xchg
iret
adc
xchg
popa
xor
sub
subl
rolb
loopne
out
inc
or
inc
in
push
fcoml
loopne
inc
inc
test
pop
mov
aad
cmp
or
add
add
fldt
inc
sbb
fs
fisttpll
add
fnsave
test
pop
mov
sub
cmp
test
push
sbb
mov
shll
addb
pusha
fidivs
in
adc
mov
dec
fstpt
imul
sbb
xor
pop
hlt
or
mov
push
dec
cmpsl
test
bnd
sub
out
outsl
ljmp
cmpsb
cmp
fists
lcall
pop
jb
insl
sub
insl
mov
fnstsw
repnz
movsl
dec
loope
adcl
push
adc
ffreep
add
add
mov
sub
add
dec
xor
sarb
aas
jl
addr16
dec
mov
sbb
test
icebp
fimull
fwait
adc
in
adc
and
std
in
push
mov
jo
pop
lret
in
popf
dec
xchg
addr16
push
push
jmp
xchg
or
ss
ljmp
mov
into
mov
adc
pop
adc
push
cwtl
push
dec
dec
loope
jmp
mov
ret
xchg
shlb
out
jl
loopne
mov
daa
xchg
out
ss
js
aam
loope
jns
loope
mov
jbe
mov
xchg
adc
xor
cmp
pop
mov
fs
mov
ljmp
push
cmp
stos
and
add
shr
arpl
movsb
je
xor
mov
push
imul
mov
jnp
sub
adc
xchg
xchg
orb
mov
cmp
cli
dec
xchg
cmc
jae
sbb
push
dec
lock
roll
add
icebp
cli
call
cmp
jecxz
ss
inc
pop
icebp
bound
push
pop
cmp
adc
mov
mov
fisubs
das
test
js
mov
push
mov
push
out
mov
push
test
cmpsb
and
int3
xchg
pop
mov
insb
ljmp
mov
enter
mov
lea
cmc
push
mov
out
mov
shrl
lahf
mov
mov
stc
mov
inc
add
sbb
mov
push
cmp
sbb
mov
pop
in
fs
xor
fscale
cwtl
std
xor
pusha
xchg
test
xor
xchg
inc
insl
mov
std
fldt
inc
gs
sub
dec
testb
jle
pop
xchg
std
pop
add
out
leave
jno
lahf
out
lds
pushf
cmp
add
inc
cwtl
sub
jecxz
dec
sbb
inc
stos
mov
test
cmp
fwait
iret
pop
and
pop
mov
movsb
pop
in
inc
xchg
cltd
fwait
insl
xchg
pushf
lea
cwtl
pop
cld
lock
test
mov
sub
or
stos
cmp
shrb
jecxz
fsts
sub
sub
and
add
inc
stos
movsl
mov
add
cmc
in
pop
ljmp
aad
pop
add
int3
movsb
xchg
xchg
cmp
mov
mov
sub
jp
cmpsb
mov
xor
fmuls
mulb
push
cmc
or
add
mov
hlt
jl
fistpll
arpl
aad
roll
fwait
jnp
xor
cmpsb
cli
xchg
add
insb
mov
mov
jns
adc
dec
fnstenv
clc
sbb
adc
fwait
adc
add
jge
outsb
pop
std
lods
inc
add
and
add
cld
ficoms
mov
stos
jecxz
cmp
hlt
and
iret
inc
mov
gs
int
dec
and
mov
arpl
and
mov
test
xor
dec
pop
mov
int3
aam
xchg
int
imul
and
sbb
fisttpl
addr16
out
sub
or
xlat
jge
adc
cmp
int
push
mov
pop
or
dec
sub
addr16
adc
bound
pop
loopne
fadd
aam
and
xchg
cld
lahf
and
jl
fnstcw
dec
xchg
leave
jne
pop
gs
bound
jns
imul
jbe
cmc
or
cli
mov
in
lods
insl
cmp
fwait
bound
mov
fwait
in
fxch
std
push
and
lret
imul
fs
or
dec
imul
dec
xchg
outsb
jl
jge
sbb
ret
pop
dec
lahf
nop
dec
xchg
lods
aaa
push
fcmovnu
daa
out
ret
jmp
into
mov
dec
call
ret
repz
cltd
fstpt
sub
dec
in
jge
pop
mov
mov
jmp
aad
and
xchg
dec
or
repnz
xchg
int3
pop
mov
outsb
or
in
mov
pshufw
mov
movsb
fcmove
pop
sbbb
ja
xor
dec
icebp
je
test
stc
xchg
mov
lret
into
and
out
fidivrs
push
iret
imul
sarb
pop
inc
fwait
sbb
ret
scas
jae
je
pop
xchg
mov
pop
imul
imul
out
or
mov
mov
cli
lods
fwait
mov
mov
rorb
jo
mov
ljmp
leave
fidivrs
xlat
adc
push
lcall
push
test
pop
rorb
dec
mov
cmp
sbb
out
push
rclb
shll
mov
decb
adc
xchg
sub
jnp
xchg
xor
push
bnd
inc
lods
and
fcmovnb
cli
js
dec
dec
mov
mov
adc
pop
std
mov
repnz
int3
push
icebp
sub
int
adc
xor
xchg
cld
jno
lret
sub
pop
mov
mov
adc
dec
mov
jo
xchg
ret
stos
mov
and
sti
inc
pop
dec
outsb
ret
sub
jnp
cmp
adcb
cs
fisubl
dec
gs
in
clc
push
lret
dec
inc
jne
add
sbb
push
pop
loope
pop
nop
in
and
sbb
or
stos
es
subb
push
mov
rcrb
out
sub
ficoml
sbb
lahf
mov
xchg
dec
popl
hlt
push
mov
push
cmp
sbb
push
or
fstpt
mov
xorl
jmp
pop
mov
push
lods
scas
sbb
je
lret
jns
jge
test
push
push
jp
aam
xorl
out
cmp
jne
test
dec
pushf
dec
xchg
sub
add
out
push
outsb
rolb
movsl
xorl
jmp
push
sub
mov
int3
subb
jmp
rorl
scas
sbb
cmpsl
push
outsl
dec
cltd
inc
pop
ret
or
in
test
in
mov
fstpt
sbb
cld
les
adc
cmc
loop
mov
push
out
ret
push
xor
or
inc
and
aad
push
adc
cmp
pop
cmp
mov
pop
jno
push
sbb
repz
outsl
loope
sbb
dec
ljmp
push
push
out
push
movsbl
jecxz
pop
fmuls
hlt
mov
pop
in
cmp
repz
and
mov
inc
aam
aas
loopne
dec
outsl
cmpl
into
aad
dec
and
xor
shlb
adc
sbb
sahf
or
aam
xchg
mov
adc
cmpsl
xchg
es
outsl
sub
bound
or
jmp
lret
fstpt
cmp
jle
cmp
in
xor
pop
das
loopne
sub
movl
js
subl
fdivrl
and
inc
cli
insl
loop
ret
div
les
pop
jo
xchg
daa
jmp
inc
adc
add
mov
add
cmc
mov
or
pop
iret
push
stos
out
mov
ret
push
jne
push
mov
sbb
mov
movsl
jnp
push
mov
sub
mov
push
test
mov
test
mov
mov
call
pop
add
cli
cwtl
in
cs
push
cmc
call
ret
mov
in
fs
popa
stos
sub
xchg
mov
jnp,pn
shr
ss
into
clc
fildl
insl
and
add
aas
fs
dec
or
xchg
pop
sbb
add
iret
sbb
into
mov
sbb
or
mov
mov
mov
ret
sbb
cmpsb
xchg
jmp
lcall
adc
shlb
mov
bound
adc
add
imul
test
retw
out
popa
sub
mov
sti
arpl
pop
test
pop
and
test
into
iret
sub
push
push
rorl
adc
sub
xchg
mov
jg
push
pop
subl
mov
push
rcrb
ficomps
xor
or
xchg
aaa
idivl
shrl
add
andl
popa
sub
dec
jnp
scas
jecxz
aad
or
and
not
inc
icebp
popf
ds
rcr
daa
outsl
fwait
or
xor
cmp
xor
mov
scas
loope
push
inc
inc
sbb
test
push
adc
das
inc
es
sarl
inc
fcmovnbe
cmp
mov
adc
inc
xchg
scas
sar
insl
nop
inc
clc
mov
jns
push
aaa
mov
imulb
pop
out
xor
and
scas
outsb
fstpl
jl
dec
repnz
sbb
ja
shll
xchg
mov
js
lea
out
js
out
lahf
xchg
pop
or
jnp
dec
push
jg
adc
int
rorb
iret
sub
add
push
aam
sub
repnz
test
and
dec
int
jae
mov
fldcw
aaa
inc
movsb
psubsb
push
aam
mov
out
sub
cmp
movsl
inc
jg
cmp
out
lds
outsl
ret
pushf
sarl
xchg
and
leave
sti
sahf
lock
rcr
scas
jmp
inc
fnstsw
add
push
pusha
rorb
mov
adc
adc
add
mov
addr16
push
xchg
push
mov
mov
lret
lahf
mov
stc
push
mov
mov
push
jbe
shl
jae
add
arpl
pusha
jo
xchg
inc
sbb
adc
dec
cmp
cmp
jge
mov
cwtl
jecxz
sub
je
fs
adc
stos
xor
dec
sub
rclb
lds
icebp
ret
pop
movsb
jne,pn
jo
hlt
inc
xchg
lahf
cmp
push
pop
lahf
push
sub
jns
aad
and
inc
mov
inc
and
xchg
push
imul
pop
mov
pop
mov
jge
jl
mov
std
push
sti
pop
cmpsb
and
or
bound
cmp
xor
movsl
popa
les
dec
pop
mov
dec
scas
mov
es
adc
jmp
mov
adc
cli
lock
or
cmp
adc
aaa
lds
stos
pop
jecxz
push
or
xchg
int3
jge
xchg
int
push
bound
fs
jp
test
or
xor
shlb
shll
cmp
loopne
inc
cwtl
xchg
xchg
xchg
or
sar
pop
lret
aad
jge
cli
rcrl
pop
sbb
push
mov
cmc
fwait
or
sub
jno
cmp
ficompl
es
cmp
imulb
outsl
inc
add
loopne
pop
sbb
push
je
shlb
sbb
mov
mov
in
repnz
xor
iret
and
cmp
daa
pop
inc
and
sub
sub
lcall
fsts
jmp
insl
or
mov
aad
into
data16
es
sub
push
and
stos
xchg
repz
sahf
cltd
xor
lcall
rclb
mov
or
adc
dec
sbb
lahf
ss
push
roll
adc
rclb
cltd
fcomps
cmp
pop
pop
rcrl
cmp
pop
cmp
leave
mov
outsl
stc
lds
sti
adc
dec
push
mov
das
lcall
xlat
out
test
fnstsw
sti
xor
enter
int3
mov
les
xor
ror
mov
pusha
adc
pop
aad
hlt
out
or
imul
arpl
insb
add
cltd
push
mov
cmp
jo
adcl
stos
dec
xchg
jae
imul
lahf
fsubs
fs
ret
bound
mov
out
data16
xchg
test
xchg
rclb
xor
mov
jge
xchg
mov
sahf
movsl
insl
rcrl
adc
mov
add
stc
aaa
mov
idivb
inc
cli
xor
jge
js
insl
adc
int3
out
add
jecxz
xor
mov
ja
pop
xor
and
push
sbb
popa
adc
test
mov
xor
sbb
cld
dec
incb
fcoml
inc
in
test
adc
sarl
xor
mov
xor
movsl
or
dec
fistl
es
pop
adc
xchg
addr16
shl
jg
lahf
outsl
or
hlt
mov
sub
pusha
iret
xor
mov
dec
inc
dec
out
sub
sub
int
xchg
subl
repz
int3
cmp
in
mov
popa
loop
shlb
xchg
jae
bound
sub
loope
inc
mov
dec
xchg
mov
or
mov
or
jle
bound
xor
push
push
insl
nop
sbb
cmpsb
xchg
nop
pusha
sbb
les
add
repnz
push
out
lcall
ret
inc
xor
inc
pop
bound
pop
es
popf
push
or
sbb
jge
lahf
sub
or
sti
lret
mov
sub
push
push
xchg
mov
push
cmp
mov
jle
or
sub
xchg
jae
out
inc
in
or
fwait
adc
stos
decl
dec
mov
cld
xchg
loope
inc
xlat
or
jnp
int
push
imul
out
insb
loope
mov
mov
in
jns
shr
idivb
test
adc
std
mov
fsubr
xchg
add
and
gs
lret
jb
inc
sub
jmp
pop
lods
inc
mov
stos
fildll
adc
mov
dec
dec
cmp
in
sbb
sahf
popa
movq
inc
cmp
xor
mov
pop
xorb
loope
pusha
pop
or
mov
inc
popf
test
mov
fisubs
and
shlb
mov
cmp
and
lods
lret
and
push
xchg
std
mov
aam
pop
mov
insl
std
mov
pop
in
sahf
xor
lds
stos
cmpsl
fisubl
ret
stos
inc
test
xchg
ljmp
dec
cs
push
sbbl
jl
jge
adc
nop
lret
inc
pushf
push
mov
cmc
add
xor
sbb
mov
ret
notl
sbb
pusha
mov
or
adc
mov
xchg
into
sub
ds
bound
sbb
lret
insb
xchg
sbb
jb
jno
pop
lock
sbb
fstpt
mov
mov
scas
jno
ss
iret
mov
jp
xchg
enter
fsubrl
push
mov
neg
movsb
inc
bound
add
push
mov
xchg
cs
fucomi
stc
test
xor
inc
mov
loope
push
das
mov
cmp
xchg
mov
out
insl
xchg
pop
jns
mov
mov
fsubl
adc
scas
sub
inc
sub
dec
dec
daa
dec
andb
cmc
push
in
icebp
addb
loope
jno
dec
stos
int3
fiadds
pushf
shl
out
jae
mov
in
inc
dec
es
pop
lret
leave
jle
aaa
data16
mov
nop
popf
jns
dec
xor
cmp
push
add
inc
scas
stc
sub
testb
daa
pop
mov
lods
loopne
mov
xor
inc
push
mov
fwait
jb
test
dec
mov
adc
mov
arpl
sbb
jne
dec
outsb
xor
jo
fucomi
mov
into
faddl
cltd
out
xchg
je
mov
cmc
adc
kandw
jp
fisttpll
sbb
das
add
add
jecxz
rorb
cmp
sbb
and
sbb
shrl
cmp
sub
rclb
dec
jp
jle
push
mov
ljmp
aam
rcrl
mov
das
cmpl
flds
push
pushl
xorb
mov
popa
movsb
add
inc
loop
mov
or
adc
xchg
mov
jne
lcallw
mov
adc
mov
xchg
rcll
call
push
xor
movsl
mov
mov
outsl
int3
jnp
xchg
leave
aam
mov
sub
mov
xchg
mov
mov
outsb
mov
rolb
sub
mov
jbe
push
pop
outsb
out
lea
jecxz
adc
cli
or
loopne
jecxz
shll
pop
mov
lds
or
jmp
cmp
pop
inc
insb
scas
mov
ss
inc
sub
dec
xor
push
leave
call
enter
scas
enter
and
pop
xchg
xchg
insb
stc
repz
iret
dec
dec
cmp
xor
cmpb
loope
fs
ds
or
mov
xor
xchg
pop
lods
dec
notl
and
cmp
fdivrs
mov
cmp
stos
scas
xchg
pushf
lods
dec
sub
insb
mov
sub
jns
cmpb
idivl
jno
xchg
out
lock
sub
sbb
push
sti
xor
mov
in
popf
je
or
mov
pop
and
into
sbb
loope
jns
jp
ja
jg
mov
popa
les
push
fyl2xp1
or
mov
push
xchg
xchg
loop
adc
into
dec
push
push
mov
out
cmp
clc
mov
jmp
dec
divb
cmp
inc
movsb
inc
cwtl
je
and
pop
mov
fwait
adc
or
xor
xor
pop
and
pop
xor
sub
jp
fxtract
or
push
mov
ja
arpl
nop
daa
add
xchg
mov
sahf
nop
cltd
mov
movsl
std
fdivl
xchg
mov
xor
cwtl
std
mov
add
lcall
xchg
inc
movsl
in
mov
int
mov
iret
cwtl
adc
inc
or
sbb
fdivs
das
inc
fnstenv
aas
or
mov
mov
dec
sti
xchg
jp
mov
sub
adc
xor
aaa
adc
sbb
out
cltd
pop
stc
inc
add
outsb
inc
mov
fimuls
xchg
addr16
in
mulb
push
call
mov
sbb
push
int3
pop
test
cmp
aam
and
push
popf
lahf
jbe
inc
jno
shrb
pop
and
loopne
mov
shrl
nop
or
adc
dec
push
push
aas
mov
in
push
push
call
ss
aam
add
dec
inc
imul
mov
adc
sub
popf
iret
aad
sbb
icebp
std
cmp
push
gs
pop
add
daa
arpl
sbb
dec
xchg
scas
ss
lds
mov
sbb
sbb
sub
sti
mov
jo
punpcklwd
push
mul
cmp
cmp
ds
test
xchg
sub
jge
scas
ficoml
pop
or
push
jae
lret
shlb
or
push
xor
leave
push
adc
pop
sahf
in
out
nop
or
pop
js
lahf
push
and
mov
cs
es
sbb
push
scas
pop
mov
fstpl
in
mov
mov
push
and
adc
dec
test
sub
ja
repz
jp
or
mov
mov
mov
arpl
test
in
add
js
adc
les
xchg
push
arpl
je
jo
add
fs
clc
insb
push
stc
in
pushf
test
jb
lcall
lahf
pushf
or
sbb
pop
cmp
push
push
add
pop
ret
repz
inc
data16
cltd
push
sbb
xchg
decb
mov
cmp
test
stos
inc
aad
mov
push
aaa
mov
imul
dec
dec
stos
bnd
xor
xchg
in
sbb
aam
lahf
dec
xor
inc
or
imulb
sub
and
xchg
add
cltd
roll
sub
enter
mov
pop
sbb
js
loop
sbb
jns
sti
mov
sbb
dec
ret
cli
xchg
xor
vpackuswb
mov
outsl
push
push
shlb
and
mov
push
inc
sbb
ret
mull
push
xor
sub
xchg
test
cmp
push
repnz
xor
mov
lahf
insl
adc
or
fimuls
mull
clc
insb
mov
dec
or
and
call
ret
dec
inc
and
and
adc
inc
in
lds
mov
sub
push
test
jb
and
mov
int3
popa
aaa
push
iret
outsb
or
insb
std
rolb
ja
das
mov
dec
cmpsb
loopne
into
ljmp
mov
ds
cli
xchg
jle
cmp
and
mov
mov
adc
mov
aas
jmp
inc
mov
mov
xor
mov
jb
insl
pop
mov
sbb
ficompl
rorl
dec
sbb
sahf
sti
add
mov
dec
pop
pop
dec
xchg
das
xor
in
out
adc
fimull
push
popa
mov
cmpb
pop
fisubl
scas
and
mov
lods
sub
sbb
nop
popa
dec
pop
dec
bound
jge
out
cmpsb
enter
inc
pushf
cld
ja
xchg
dec
or
sarl
pop
repnz
in
pop
lods
repnz
xorb
aaa
sub
fisttps
and
xor
nop
sbb
stos
push
stc
adc
repnz
iret
mov
xchg
mov
xor
std
adc
xor
fstpt
mov
push
and
cmpsb
adc
fwait
and
xchg
leave
rcrl
xor
sahf
ljmp
imul
dec
testb
out
inc
outsb
mov
subb
in
into
mov
sbb
ss
movb
int
call
or
fisubrs
fiaddl
pop
test
mov
and
mov
add
mul
mov
inc
cmp
int
xlat
fisttps
mov
xor
mov
mov
fwait
mov
xchg
aaa
fwait
mov
sub
cmp
repz
pop
jno
testl
mov
movsl
jecxz
dec
add
or
lret
lods
filds
in
outsb
clc
or
jge
xor
mov
data16
inc
outsb
movsl
dec
fbstp
push
mov
ret
mov
or
sub
testb
pop
out
fcompl
lods
sbb
fldt
sub
jmp
test
js
mov
movsl
xchg
jp
adc
inc
xor
loopne
cwtl
cli
insb
dec
popa
jb
cwtl
loop
orl
in
mov
cmp
ds
inc
add
mov
lds
pop
movsb
adc
jbe
or
hlt
push
ja
adcb
push
pop
add
shrl
mov
or
out
push
pop
inc
ljmp
xchg
aam
in
pop
out
push
rcll
pop
cmp
mov
sbb
or
mov
lds
mov
sub
sub
mov
jns
mov
mov
test
dec
outsb
adc
pop
cs
mov
mov
cld
lcall
mov
add
pop
jp
fldenv
bound
mov
fistl
inc
mov
repz
cld
sub
mov
or
xchg
clc
rcrl
xchg
fwait
dec
xchg
mov
dec
push
xchg
testb
cmp
sub
test
push
sub
mov
lcall
mov
loop
adc
add
cmc
mov
jns
enter
inc
push
les
xchg
bound
jnp
xchg
mov
add
xor
sbb
test
pushf
sti
test
call
mov
fsubs
inc
pop
jge
into
mov
rclb
mov
lds
ret
cs
xor
std
inc
stc
jb
rcll
jae
inc
in
cmp
lahf
mov
add
mov
jp
sbb
adc
jo
push
sbb
addr16
pop
pop
in
roll
xor
sbb
mov
rcrl
das
push
and
fildl
lahf
inc
or
int
fnsave
in
hlt
iret
mov
add
lahf
lock
std
sbb
dec
lods
sub
hlt
adc
int3
adc
mov
pop
es
dec
push
push
pop
dec
fdivs
leave
cs
jmp
fdiv
xchg
push
jns
mov
dec
bound
roll
popa
mov
xor
mov
push
cmp
jp
ljmp
or
or
inc
push
aas
jnp
imul
inc
mov
cmp
sub
outsl
fcmovbe
clc
rolb
int3
sub
movl
in
out
sbb
add
repnz
mov
jle
push
test
dec
xor
stos
enter
mov
test
push
fimuls
jl
push
sbb
sub
sub
shl
jno
pop
mov
jbe
xor
push
popf
mov
push
cmp
and
mov
faddp
add
jle
popf
lea
sbb
dec
in
pusha
jmp
or
ficomps
jns
jo
jp
aas
xor
dec
lds
and
je
cmp
pop
mov
mov
xchg
cmc
outsl
arpl
inc
xchg
mov
sbb
pushf
add
adc
int3
in
addl
gs
push
outsb
insb
mov
popf
jecxz
push
insb
mov
std
add
mov
dec
cmpsb
mov
sub
in
xchg
sub
adc
push
mov
push
mov
mov
sbb
fs
xchg
jne
pop
arpl
inc
sti
jno
icebp
lods
mov
jmp
cwtl
jmp
jmp
inc
or
cmp
xor
xchg
sbb
icebp
mov
imul
sub
push
dec
add
mov
adc
sbb
inc
cwtl
notl
mov
cmp
call
pusha
adc
xlat
xor
jge
and
xchg
dec
lahf
push
in
pop
dec
add
jl
addl
xchg
jecxz
push
outsb
enter
dec
decl
sub
in
imul
jl
cmpsb
or
cmpsl
ss
sub
inc
xchg
mov
mov
shll
jo
xlat
addr16
in
test
push
ss
xchg
xor
push
cld
mov
mov
mov
lods
bound
mov
mov
lcall
adc
dec
jns
mov
insb
js
mov
ljmp
lea
ljmp
loopne
loope
insb
pop
repz
loope
icebp
sti
push
imul
xchg
call
jecxz
xchg
ds
aas
sbb
int3
mov
in
es
sbb
sbb
mov
push
jl
mov
mov
stos
sar
in
jge
inc
scas
or
fnstenv
add
adc
push
fcmovnu
stos
and
mov
js
icebp
or
mov
les
nop
stos
popf
loope
push
loopne
fsubrp
lea
jbe
jge
movsb
outsb
roll
cmpb
ret
xchg
repz
hlt
sub
clc
mov
jae
pop
jo
jnp
mov
xchg
insb
outsl
ret
lock
popa
adc
adc
push
and
push
add
in
aad
push
jl
dec
cmpb
mov
inc
push
scas
inc
cs
clc
push
cmc
adc
in
inc
mov
das
sarb
test
sub
test
or
daa
lds
mov
inc
fwait
cmp
negb
scas
mov
std
aam
inc
jne
dec
pusha
cltd
xchg
inc
mov
imul
xchg
and
aam
test
add
xchg
lock
paddd
fnstsw
mov
xchg
nopl
pushf
aam
push
or
stc
sub
jle
jno
pop
inc
in
add
or
pop
icebp
mov
and
mov
mov
cwtl
stos
jl
xor
scas
ljmp
or
shrb
loop
lcall
fcomp
xchg
insb
cmc
int3
add
and
pop
sahf
cmp
roll
lea
adc
push
daa
popf
inc
rcrb
lahf
js
je
pop
jo
clc
movsl
cmp
fldenv
arpl
es
repnz
out
scas
mov
xchg
mov
popa
mov
mov
das
adc
and
gs
pusha
cmpsl
push
inc
loope
pushf
lods
sbb
xor
and
cmp
inc
int
mov
orb
cmp
lret
sbb
dec
lods
pushf
xchg
rcl
push
cmp
xchg
or
mov
jae
fisubs
sub
fidivl
mov
xchg
mov
call
push
cmp
push
and
jne
sub
and
adc
inc
negl
xor
into
lret
cs
out
mov
push
jno
dec
cmpl
cmc
js
mov
leave
out
sbb
sahf
xchg
add
and
fdivl
dec
lods
fidivrl
ja
dec
aas
xchg
fstl
xor
stos
subl
pop
or
mov
lret
aam
jne
movsl
aad
sub
adc
stos
leave
or
jmp
mul
pop
psubq
xchg
shll
test
stc
inc
cmp
scas
lret
test
xor
dec
jp
ss
aaa
xchg
rcll
pop
sbb
mov
outsb
xchg
ss
aaa
xor
cwtl
int3
pop
pop
and
jg
pop
cld
nop
imul
inc
pushf
sbb
mov
dec
mov
push
ja
dec
cmp
sub
arpl
xor
pusha
jecxz
or
mov
sub
icebp
or
and
sub
mov
push
js
sti
lcall
lret
fmull
pop
mov
sbb
pop
jo
out
mov
roll
push
and
dec
add
out
xor
xchg
in
daa
xlat
lea
cmp
pop
ret
and
cli
es
cmpsl
sub
je
and
push
adc
and
jbe
xchg
fimuls
push
scas
cwtl
xchg
jnp
dec
xor
push
lahf
lahf
shlb
sbb
inc
sahf
std
jbe
add
fstps
xchg
mov
adc
iret
enter
lea
push
mov
jae
mov
push
xchg
jle
and
adc
test
dec
jne
insb
fnsave
inc
jns
push
and
scas
sub
cld
test
jge
in
push
mov
sbb
or
jp
outsb
sbb
cli
lods
test
in
or
push
sbb
mov
lock
loope
adc
cmpsb
inc
int
ljmp
lret
sbb
jmp
sbb
mov
inc
jl
fnsave
cmp
loope
adc
jmp
dec
mov
lcall
rcrl
xor
lret
lcall
push
xor
hlt
add
mov
dec
xchg
loopne
mov
xchg
pusha
push
sbb
xchg
cli
mov
push
cltd
repnz
fs
cmp
movsl
or
fsubrl
sub
cmp
into
xor
pop
clc
scas
sbb
lahf
sarl
inc
mov
rorb
jmp
es
shll
or
out
add
xorl
cmpb
mov
inc
and
xor
xchg
fildl
jb
inc
iret
in
inc
inc
add
incl
dec
vmwrite
xchg
or
push
ret
sbb
mov
aam
outsb
repnz
dec
fimull
aaa
loopne
fistpll
xor
fs
cwtl
sub
jbe
and
data16
mov
mov
loopne
repnz
ret
mov
and
imul
je
push
sti
xorl
addb
sub
iret
lock
xchg
fstps
sbb
push
adc
shlb
jp
fisubrs
sub
push
imul
xorb
jp
push
adc
mov
or
test
xor
icebp
adc
sbbb
push
jnp
inc
push
add
sbbl
outsl
lcall
mov
test
mov
add
mov
cli
cwtl
not
stos
xchg
cmp
jmp
fldcw
jae
jbe
jb
and
xlat
mov
fbld
xor
test
movq
and
pop
xor
cwtl
sbb
fimull
loope
pusha
add
sub
lea
notb
sbb
jo
mov
mov
sbb
aam
jne
inc
adc
cltd
shl
mov
aaa
ja
jle
sbb
fnstcw
add
mov
repz
pop
sub
test
filds
repnz
mov
xchg
imul
and
adc
pop
cmp
mov
jge
sbb
dec
test
and
add
cmpb
out
jmp
xacquire
adc
inc
in
and
push
shrb
adc
out
fmuls
shlb
inc
cmp
inc
mov
push
push
push
and
icebp
sbb
imul
mov
mov
call
sbb
inc
adc
loop
inc
gs
jb
mov
mov
jge
mov
shl
das
lret
ret
pop
cwtl
cmp
cmp
data16
stc
popa
cmpsl
jle
push
and
pop
addr16
or
les
mov
aad
xchg
add
test
or
mov
adc
mov
inc
push
gs
mov
mov
and
mov
sub
mov
enter
fwait
inc
imul
lret
inc
popa
mov
lret
decl
lds
insb
scas
loop
fwait
pop
push
cltd
shrl
mov
push
mov
fld
jg
push
cmp
aad
mov
in
test
add
in
gs
nop
icebp
inc
mov
mov
aas
inc
pop
jmp
and
sbb
push
pop
sbb
pusha
add
add
adc
or
sub
psllw
push
fisttpl
mov
cmp
jns
int
lock
add
hlt
scas
and
mov
or
mov
sbb
pop
xchg
pop
imul
inc
daa
add
add
push
xor
aaa
stos
jns
cld
mov
rcrb
outsl
push
dec
pop
pop
int
retw
repnz
pop
jno
gs
test
and
push
fists
dec
mov
mov
mov
rcl
pop
popa
and
frndint
data16
notb
ficoml
cltd
mov
stos
iret
fnsave
bound
dec
inc
loop
pop
bound
lock
dec
mov
out
ficoml
das
insb
cli
sbb
sbb
mov
fnstcw
rcr
fimull
push
daa
jnp
ret
pop
test
and
lods
fiadds
repz
cs
sbb
nop
es
fmul
mov
and
sub
loope
hlt
loop
xor
rcrl
fnstsw
outsb
lds
xchg
mov
fildl
fdivs
push
cwtl
shlb
cmpsl
imul
mov
cmp
popf
call
pop
lret
test
pop
xchg
mov
inc
jge
jno
lahf
gs
stos
aad
mov
and
or
int3
in
test
jne
mov
jle
mov
sbb
in
or
cli
inc
xchg
jmp
push
insl
ss
mov
scas
subb
jnp
test
cs
in
stos
imul
aas
and
bound
xor
popa
rcrl
cltd
fcomi
aaa
or
stos
push
jnp
push
cmp
and
and
xor
mov
xchg
cli
mov
push
or
pusha
pop
xchg
mov
mov
nop
mov
push
lds
int3
cmpsb
stos
cmp
adc
cmp
fs
cmc
in
int3
addr16
dec
mov
pushf
xor
mov
xchg
sub
mov
mov
jmp
fstl
inc
popa
cmp
popf
mov
cmp
or
or
adcl
mov
call
rolb
or
cli
addb
std
lret
fdivs
mov
das
ss
mov
mov
popa
xchg
test
jne
loope
mov
pop
pop
and
add
mov
das
mov
jmp
fmull
aam
inc
popa
ret
bound
add
data16
pop
cmp
jmp
jae
xor
push
rcrl
xor
mov
push
or
clc
pushf
leave
out
scas
xchg
mov
mov
push
dec
mov
pop
mov
pop
push
push
or
fcomp
and
shrl
imul
call
mov
loopne
lahf
addr16
push
or
fwait
mov
mov
jno
fcomps
and
pop
dec
out
xchg
xor
fldt
ret
sub
mov
mov
bound
or
in
push
stc
out
mov
test
lahf
aaa
sub
xchg
jae
jnp
ljmp
in
fistps
outsb
mov
cmp
mov
cmp
mov
outsb
dec
rorl
push
cmp
enter
pop
pop
cmp
lret
jns
repnz
sbb
pusha
ret
push
lea
and
mov
inc
outsb
pop
sarl
push
push
out
popa
pop
jbe
arpl
lock
loope,pt
xor
es
pop
adcl
shl
cmp
push
dec
loop
push
pop
lret
into
aas
sub
aad
mov
add
push
cmp
aad
adc
int
cld
es
jns
jae
in
fs
jmp
sub
je
xchg
imul
out
sahf
cltd
stos
sub
cwtl
lea
mov
inc
and
inc
adc
add
decl
lds
add
add
dec
repz
mov
mov
mov
hlt
cs
mov
stos
fwait
lahf
push
xchg
and
insl
sbb
in
cld
dec
ja
add
sub
adc
scas
jbe
and
pop
aaa
mov
sbb
push
stos
mov
mov
mov
mov
sbb
das
aad
mov
mov
add
pop
jb
jmp
mov
dec
scas
jp
aaa
pop
jle
mov
call
push
jo
jecxz
cmp
aad
push
pop
cli
mov
jne
and
jno
ficoms
lret
es
int3
mov
jnp
xor
sub
cs
testl
dec
ret
or
lahf
mov
icebp
clc
jge
orl
js
xor
test
pop
cmpsb
push
push
jecxz
je
push
jl
xor
cmpsl
xlat
int
lock
dec
rorl
inc
xchg
push
out
inc
into
pop
testb
sub
pop
dec
int
clc
cmc
pop
fbld
les
stc
mov
fidivl
add
push
mov
imul
loopne
jb
inc
daa
je
or
and
cld
mov
xchg
push
jae
daa
int
inc
outsb
scas
mov
pushf
pop
dec
sar
sub
adc
and
xchg
jmp
and
neg
jl
sub
out
jp
xchg
mov
jns
fwait
add
mov
sbb
inc
xor
jl
arpl
dec
push
les
std
std
xor
lahf
popa
pop
cmc
imul
shrl
not
outsl
jo
add
mov
pop
fs
push
add
inc
mov
cmp
icebp
mov
clc
js
sbbb
std
add
ja
stc
jp
subb
sub
inc
pop
lahf
cld
xor
mov
sub
jmp
std
mov
pop
sub
dec
sub
and
pop
pop
insb
hlt
push
dec
inc
pop
pop
mov
jne
es
loopne
xchg
test
rcrb
imul
xchg
mov
mov
sub
xor
lea
stc
daa
in
in
mov
cli
cmp
sbb
push
and
add
fwait
out
cmp
fxch
inc
pop
sub
push
scas
mov
fnsave
pop
xor
mov
lcall
dec
mov
mov
mov
fisttpl
sub
popf
push
lahf
push
jge
and
sbb
xchg
xchg
add
and
xchg
sar
jmp
sti
aam
mov
sub
cmc
push
sub
xor
es
dec
adc
daa
pusha
mov
dec
test
addb
pop
out
leave
mov
mov
push
cli
in
mov
test
iret
pusha
sub
sti
out
addb
xor
sub
inc
pop
sub
fdivrl
std
lods
loope
movsl
or
mov
push
mov
lcall
ficoml
adc
mull
stos
push
int
xor
movsb
int
adc
les
pop
sub
loopne
jp
outsl
jno
jbe
mov
call
bound
jle
mov
cld
enter
fsub
imul
cli
repnz
pusha
sub
lock
iret
dec
sub
sub
hlt
pop
pop
sub
lret
add
mov
outsb
mov
dec
lret
stc
cmp
add
iret
cwtl
push
mov
jmp
aad
jecxz
dec
rcrl
push
dec
and
es
xchg
push
sbb
out
sbb
loope
push
xchg
mov
dec
inc
xor
stos
mov
mov
cmc
cwtl
dec
inc
jmp
les
jl
inc
jbe
add
jmp
adc
aaa
dec
mov
pop
das
cmp
adc
ret
out
mov
lods
inc
jmp
call
mov
flds
lods
fs
pop
and
sub
add
ss
mov
fidivrs
cltd
xchg
push
cmp
insb
add
mov
fs
inc
movsb
mov
cmpsb
shrl
xchg
mov
lcall
insl
lahf
pop
mov
aas
fsts
cld
push
jne
sbb
push
push
addb
push
mov
mov
sub
cmp
addr16
and
imul
lods
add
pop
pop
mov
inc
popf
test
fidivrl
pop
mov
mov
adc
adc
loopne
arpl
sbb
or
adc
pop
in
mov
sbb
push
mov
into
in
or
push
and
das
imull
add
jb
mov
ss
xchg
mov
pushf
getsec
pop
not
pop
insb
les
enter
sub
adc
dec
pop
cmpb
xchg
mov
lcall
dec
shrl
and
xchg
cmp
sbb
mov
mov
xchg
mov
in
or
pushf
out
int
xchg
push
mov
mov
mov
and
mov
xor
ret
push
pop
iret
iret
sub
mov
sarb
lock
enter
jp
push
shl
fbstp
mov
pop
fmull
or
adc
roll
pushf
js
shll
call
stos
dec
pop
mov
adc
movsl
roll
fisubrs
aad
mov
add
or
adc
pop
ffreep
and
mov
cmpl
in
addl
cmpsl
mov
decl
pop
dec
fwait
add
cmp
sahf
push
sti
sbbl
or
mov
sar
stos
sbb
out
repz
add
dec
xor
or
ja
ja
xchg
jle
pop
stc
mov
and
fcomps
call
test
out
add
add
mov
dec
inc
cli
cmp
jl
addr16
sbb
mov
scas
and
in
out
sar
add
cmp
or
popa
sarl
cltd
popf
ret
in
mov
xchg
cmp
pop
add
and
cli
inc
rolb
ret
cmp
insb
cmp
push
adcb
lock
bound
mov
stos
loop
cmp
adc
push
xor
jp
pop
enter
add
nop
jmp
insb
loop
add
or
mov
dec
shrb
cmp
es
mov
mov
scas
add
movl
mov
jne
jo
ds
sbb
cmp
cli
pop
and
outsb
jne
jecxz
add
adc
and
sub
mov
das
add
pop
shl
jb
inc
ficoms
cmp
outsb
add
cwtl
jae
adc
jns
enter
outsb
xchg
std
pop
movsb
das
ss
leave
mov
and
add
pop
mov
cmp
lret
xor
ja
push
push
mov
enter
push
cltd
dec
insb
enter
or
loope
cmp
cmc
cli
sub
cmp
pop
std
mov
pop
testb
sbb
test
imul
jb
mov
xor
xor
subb
prefetcht1
fisttpl
aas
out
add
cmp
faddp
jns
lea
xor
pop
mov
imul
and
jo
loopne
lret
sub
push
push
outsl
cmp
adc
sbb
pop
add
mov
add
dec
outsl
and
jns
int
xchg
add
or
and
mov
popa
mov
mov
xchg
ss
cmp
jle
std
add
xlat
or
mov
aaa
cmp
mov
popf
pop
cli
push
loop
pop
pop
jle
jo
ret
mov
fs
test
aaa
lret
dec
adc
insl
stc
xchg
xor
popa
lret
cmp
aam
rcl
shll
cmpsl
mov
dec
pusha
cltd
idivl
std
jb
cmp
push
inc
jmp
int
push
ja
cs
mov
mov
lahf
push
xchg
or
scas
or
cmp
aad
jnp
outsb
mov
addr16
mov
inc
add
fidivrs
mov
fldl
imul
lods
push
into
out
push
xorl
push
stc
xor
in
jmp
pop
ret
andb
jmp
out
add
and
mov
pop
hlt
xchg
loop
nop
scas
in
dec
sub
arpl
dec
and
cmp
fisttpl
sahf
mov
mov
pop
adc
jmp
enter
mov
mov
jmp
ret
es
cld
inc
sbb
inc
mov
dec
or
repz
mov
mov
dec
add
mov
mov
sub
outsb
out
lods
es
adc
push
scas
bound
pop
sbb
fucom
arpl
into
out
imul
push
je
fsubrs
pop
addb
ds
dec
pop
adc
data16
xchg
out
ljmp
inc
daa
and
jne
in
loopne
mov
je
cmp
lcall
mov
inc
loope
sbb
adc
or
pop
jle
xchg
ret
pop
push
outsb
sbb
int
aaa
push
sbb
rorb
outsl
movsb
xor
cwtl
jnp
mov
push
scas
xor
call
lret
sub
mov
jmp
sub
arpl
adc
orl
imul
jp
fwait
jge
fisttpl
push
dec
cwtl
mov
push
push
aas
mov
gs
aad
mov
pop
and
or
sub
adc
or
lcall
pop
popf
ljmp
shlb
push
out
dec
hlt
rcrb
lret
and
sti
sarb
sbb
jg
cli
mov
sub
jnp
in
lock
fbld
rclb
xchg
leave
jl
imul
popf
mov
lahf
dec
mov
lret
jmp
jnp
rcrl
imul
sarl
xchg
push
mov
mov
xchg
and
bound
or
cwtl
cmpsl
aas
and
pushf
cltd
movsl
sub
inc
add
push
pop
lods
push
shlb
int
sbb
push
mov
mov
out
fsub
cmc
out
jle
divps
cmp
ret
ret
test
xchg
into
loopne
fnstsw
dec
aad
inc
and
arpl
push
lods
push
xchg
cmp
mov
pop
lods
adc
pop
in
jo
dec
mov
loope
sub
cmp
adc
pop
outsb
jnp
in
mov
hlt
es
cld
push
fwait
dec
cmp
jge
mov
add
dec
mov
movsl
mov
dec
jno
cltd
cmp
jp
scas
leave
push
test
add
cmp
aaa
idivb
cltd
cld
dec
pop
mov
mov
adc
mov
movsb
stos
nop
inc
add
push
pop
mov
pop
mov
xchg
mov
push
xchg
das
test
cs
push
jp
cmp
hlt
lock
jmp
sbb
lret
mov
insb
dec
movsl
adc
adc
rolb
and
icebp
fwait
mov
test
jg
aam
fsubrs
test
inc
lds
jp
scas
out
adc
adc
mov
cmp
sub
ds
xchg
or
and
das
ds
dec
in
sub
in
pop
adc
sub
pop
in
ret
sbb
xor
xchg
je
sub
or
in
push
lahf
cwtl
repz
into
jl
add
bound
push
movsl
rcrl
or
pop
lock
xchg
lods
jge
jno
xchg
lahf
mov
aaa
xorl
ljmp
stos
pop
add
xchg
xor
xchg
dec
pushl
movb
and
lods
outsl
cmc
adc
and
pop
stos
push
and
imulb
mov
test
pop
cmp
or
outsl
addr16
push
insl
mov
sub
in
add
pop
rclb
shlb
mov
sti
fcomps
shrb
pop
fildl
push
push
add
fstpt
movsb
xchg
rorl
sbb
xchg
cltd
into
imul
cmp
inc
test
outsb
jle
mov
mov
hlt
and
out
dec
jp
cmp
cmp
sti
sub
test
mov
lahf
jmp
and
sbb
dec
xchg
cmp
cmc
jno
push
jo
jnp
icebp
test
stos
das
jge
cs
stos
in
adcl
sub
cld
imull
mov
cmp
mov
push
fnstenv
es
into
jg
dec
mov
xchg
out
or
rorl
aas
lahf
adc
add
lret
into
sti
dec
mov
inc
shl
roll
loopne
inc
add
lods
adc
std
xlat
aam
push
lods
outsl
stos
mov
call
xchg
mov
pop
push
jge
or
ret
or
and
sub
xor
xchg
in
pushl
xchg
sbb
xchg
out
push
ss
test
outsb
jbe
jge
sub
jne
push
push
jmp
ds
xlat
or
xchg
add
cld
mov
mov
rcrb
fcomps
mov
add
subl
dec
cmp
inc
rorb
clc
in
in
ss
mov
aad
js
into
dec
dec
inc
lahf
dec
mov
jecxz
adc
ds
sti
rcrl
pop
out
rcrb
insl
fists
les
xchg
test
xor
push
or
cltd
pop
mov
lahf
icebp
movsl
dec
fsts
inc
add
sbb
rcl
ffree
pop
mov
or
jp
sahf
clc
mov
dec
mov
sub
rorl
out
and
das
cwtl
mov
adc
and
dec
addl
ret
mov
push
mov
mov
xchg
mulb
and
mov
xor
cwtl
shr
ss
pusha
mov
imul
stos
ret
sahf
mov
xor
insb
xchg
unpckhps
xor
or
push
dec
and
hlt
dec
sbbb
push
bound
cmp
sbb
add
in
lods
xorl
int3
add
enter
imul
js
scas
mov
cmpsl
mov
jmp
push
mov
jle
sub
push
mov
scas
lret
sbb
test
imul
cmp
out
or
push
iret
out
cmpsl
fucomi
mov
adc
sahf
push
inc
cltd
and
cld
int
cmp
xchg
lds
outsl
adc
or
sub
xor
cmp
sub
lods
mov
pop
es
ja
stc
xchg
pop
les
mov
xor
mov
and
push
push
cmpsb
fstpl
cli
addb
push
xchg
jmp
ljmp
cmc
mov
or
test
jge
in
sbb
aas
mov
lahf
xchg
aad
adc
mov
xor
add
mov
lahf
inc
jge
sti
hlt
mov
arpl
mov
in
mov
int3
in
pop
adc
mov
mov
movsl
mov
nop
mov
ds
jnp
outsl
adc
jns
clc
daa
fstl
loopne
sbb
dec
sub
adc
push
adc
xlat
aaa
hlt
lret
das
add
adc
mov
mov
xchg
dec
or
cmp
int3
xorl
sub
in
addr16
mov
add
jl
pop
sbb
cmp
ret
cmpsl
ljmp
rcrl
scas
xor
mov
add
adc
jl
inc
pop
sbb
and
pop
push
mov
cmp
cmpsl
mov
cvtps2pi
push
add
xor
push
fcomi
pushf
cmpsb
nop
jo
out
out
xor
sti
enter
and
std
dec
or
ss
loopne
mov
jb
fldl2t
jns
jns
out
pop
in
lods
mov
push
sub
fiadds
xchg
loopne
mov
jne,pn
orl
into
lods
je
or
icebp
repnz
sbb
cltd
rdpmc
pop
in
inc
into
sub
mov
sbb
addr16
cmp
lods
loopne
fsubs
repz
xchg
inc
test
popf
adc
xchg
shr
adc
add
or
pop
and
subl
sti
adc
fwait
ud1
shll
sbb
addb
sub
push
sub
jge
loop
xor
shl
popf
xchg
jns
add
mov
addb
xor
jg
cwtl
std
jecxz
sbb
jle
dec
jl
add
push
pop
faddp
xor
adc
fnsetpm(287
enter
cmp
push
dec
xchg
pop
jecxz
sub
or
push
inc
out
in
add
inc
inc
dec
pusha
dec
xor
mov
lods
push
stos
cld
xor
or
ja
in
lods
adc
mov
sbb
xchg
icebp
mov
or
jmp
repz
mov
mov
mov
jg
leave
add
insb
mov
cmpsl
mov
mov
push
cmp
test
rorb
iret
cmp
jp
mov
jl
sbb
jns
sub
mov
sub
stos
add
cmp
cmp
jnp
fwait
testl
fbld
or
std
mov
add
sbb
pop
mov
sbbb
inc
dec
int3
cwtl
mov
mov
sbb
ss
cmpsl
ret
mov
or
push
nop
or
lret
jns
cmpsb
int3
mov
daa
mov
sbb
and
xor
movsb
sbb
adc
jge
lods
div
pop
je,pt
pop
orb
add
adc
add
sub
outsb
xor
scas
nop
in
in
test
call
icebp
in
adc
sbb
fisttpll
push
xchg
in
cmpsl
fstl
lods
push
inc
adcl
or
jp
dec
incb
sub
adc
mov
shll
mov
mov
lahf
loop
insl
ret
cli
cs
mov
test
div
xchg
cmp
add
inc
ret
rcrl
or
fsts
mov
add
cmp
sub
lds
adc
push
mov
adc
add
jne
and
les
bound
mov
jbe
inc
movsl
addr16
fcoml
shrl
mov
fsubp
pop
ret
push
push
scas
jns
repnz
testl
jb
or
xor
data16
daa
fidivrl
xchg
ljmp
xor
jnp
xor
inc
pusha
clc
ret
test
inc
dec
in
insl
outsl
aaa
jle
push
mov
cmp
cmp
testl
ljmp
iret
outsl
jl
lret
gs
xchg
xchg
push
int
lds
es
fdivrp
lods
add
sbb
inc
ficoml
cmpsl
movsl
popf
mov
out
inc
ja
sti
lds
dec
loopne
sbb
adc
into
dec
movl
scas
mov
mov
dec
ret
inc
xchg
cmp
adc
and
dec
int
cwtl
inc
jbe
jbe
rorl
idivl
mov
das
nop
mov
in
loopne
repnz
jp
fwait
addb
lea
daa
clc
imul
fwait
lahf
stc
mov
in
adc
dec
mov
xlat
xchg
addr16
push
neg
sub
pop
cltd
sbb
pop
push
cmp
pop
dec
and
lret
inc
jp
mov
dec
xchg
pop
jmp
call
std
sub
pcmpgtb
xchg
jae
lcall
xchg
mov
add
or
shr
int
imul
xchg
xchg
and
mov
mov
int3
xor
addr16
push
cmp
lahf
mulb
adc
mov
scas
xor
out
rolb
rcr
aas
or
jne
notl
repz
cmpsb
lcall
out
arpl
add
in
xlat
rolb
xchg
push
rolb
pop
popf
stos
push
adc
mov
pcmpeqd
or
adc
mov
jl
cltd
testl
mov
enter
jl
hlt
ljmp
xchg
int
cmpsl
icebp
sub
shrb
mov
add
sti
push
pop
push
movsb
adc
mov
add
jne
cmp
fidivl
mov
jp
test
test
add
mov
fwait
sarl
mov
add
enter
push
jns
mov
dec
nop
inc
push
or
mov
lock
xor
insl
jge
hlt
mov
lcall
mov
lods
xor
mov
repnz
push
push
shrb
inc
je
jns
nop
mov
adc
enter
mov
and
sahf
leave
test
out
dec
pop
in
xchg
shrb
jno
std
pop
cmpsl
xchg
inc
sbb
mov
xchg
xchg
mov
adc
jae
pop
insb
aas
push
cmp
push
in
inc
mov
ds
mov
xchg
cmpsl
lods
xlat
scas
or
jnp
xchg
sub
fnstenv
mov
lahf
push
mov
xlat
data16
fistps
test
add
jae
ds
add
push
movsb
cmp
out
push
jbe
sarl
dec
cwtl
xchg
xchg
push
push
int3
cwtl
jp
fwait
ret
pop
loope
mov
pushl
add
jge
xchg
cwtl
inc
adc
lret
bound
push
inc
in
scas
popf
push
pushf
inc
pop
adc
stc
xor
subb
movsl
sti
ret
jle
mov
icebp
int3
out
ljmp
lods
movaps
dec
aad
and
jbe
test
dec
addr16
movsb
adc
mov
pop
xchg
pusha
or
iret
hlt
mov
aas
sbb
loope
sbb
push
into
jno
lahf
mov
out
stc
jecxz
jae
outsl
mov
ud2
xchg
mov
fcmovu
cld
out
push
jl
inc
push
push
sbb
add
lret
fisttpl
xchg
mov
movsb
divl
dec
and
xor
sbb
stos
ret
sub
test
or
verw
and
jg
fidivrl
pop
pop
out
dec
add
loope
cwtl
or
sub
sub
hlt
add
sbb
ljmpw
mov
pmulhuw
mov
cld
js
ljmp
inc
push
punpckhbw
push
cltd
ret
or
in
mov
lret
pop
mov
out
or
cmp
pop
ret
rcll
loop
bound
ss
test
xchg
jne
dec
in
xor
lret
and
sub
mov
mov
adc
mov
dec
orl
jle
push
mov
xorl
jo
lret
add
xchg
dec
xchg
push
aaa
push
ret
cmp
sub
cli
and
scas
outsl
pop
rcr
mov
jge
mov
adc
aad
rcrl
ret
and
data16
inc
sbb
pop
shrb
scas
lret
or
push
lea
repnz
jae
or
js
lcall
mov
test
mov
mov
fmuls
shll
icebp
sahf
adc
scas
call
repz
fs
lock
popf
xchg
stos
ja
push
js
sbbl
xchg
push
in
mov
das
fs
xor
lcall
into
and
stc
push
fwait
dec
ss
sub
ds
mull
data16
orb
jo
add
shl
push
ljmp
ss
test
fiadds
popf
rorl
hlt
sub
jmp
inc
cmp
jae
lret
adc
idiv
orb
lea
pop
aaa
imul
pop
jg
dec
and
or
push
sub
xor
ljmp
movsl
dec
mov
inc
shrb
loope
leave
mov
and
mov
and
mov
ja
pop
ja
inc
or
call
mov
sbb
sub
inc
mov
jns
mov
fidivs
test
jp
pop
cltd
add
movsl
loopne
leave
hlt
mov
ja
cmp
mul
jo
adc
inc
dec
je
rcl
inc
subb
pop
mov
loop
or
call
push
shll
mov
mov
mov
pusha
mov
mov
je
ret
nop
mov
jae
mov
sbb
fs
push
imulb
pop
mov
fdivl
mov
adc
stc
lods
pop
sub
or
inc
aas
jns
cwtl
ficoml
xchg
push
or
leave
or
mov
sub
lcall
jbe
mov
fsts
test
or
mov
mov
dec
xor
adc
jo
jmp
xchg
js
add
jns
and
ss
dec
ljmp
mov
xchg
les
jge
shll
repnz
or
out
lahf
jns
popf
mov
jecxz
add
xchg
aaa
insl
ret
add
roll
aad
repz
and
adc
popa
mov
cmp
ds
daa
mov
ret
addb
cmpsl
ret
leave
icebp
data16
cmp
push
scas
out
xchg
aas
push
data16
outsb
sti
repz
pop
int
mov
cmp
ret
movb
push
mov
pop
sbb
bound
lret
sbb
repz
inc
addr16
sti
fwait
mov
or
fdivr
cmp
jne
cmp
insb
mov
std
ss
or
popa
fstpt
dec
sti
pop
movsl
leave
cs
in
push
mov
mov
and
int3
mov
mov
jo
out
or
dec
mov
add
or
push
pusha
mov
outsb
test
mov
sti
cmp
stc
sub
mov
add
mov
out
cmp
int
sbb
jecxz
jmp
out
lods
push
cmp
sbb
into
sbb
repz
orb
int3
inc
adc
xchg
into
int3
mov
rolb
mov
jge
divl
idiv
divl
imul
pop
jns
mov
lcall
in
int3
xor
ja
lods
out
and
mov
dec
insb
dec
push
cs
xchg
insl
adc
pop
or
cmp
leave
dec
cmp
jnp
negb
pop
shrl
sub
ja
jne
in
mov
ljmp
je
xchg
pop
shlb
arpl
jg
push
pop
jbe
dec
fcmovbe
sarl
aad
sar
adc
test
xchg
ds
xchg
test
adc
pop
xchg
jae
jmp
lea
mov
mov
lea
xlat
inc
popa
push
or
imulb
bound
pop
mov
out
inc
sbb
pop
xor
test
mov
sbb
rclb
mov
sahf
ja
cltd
cli
pop
movb
cltd
leave
pop
cmp
mov
shrb
imul
lods
pop
sbb
mov
das
xchg
xchg
pusha
push
sahf
scas
arpl
mov
aas
push
sub
into
test
xor
sbb
and
mov
out
xchg
add
lea
in
ficomps
xchg
mov
addl
adc
out
or
cmpsl
scas
mov
mov
jl
aad
aaa
jnp
adc
sub
pop
and
pusha
add
or
add
lods
imull
das
out
out
in
repz
sbb
pop
test
push
je
sbb
rorb
xor
es
ds
and
in
mov
pop
pop
daa
data16
inc
xchg
mov
not
mov
mov
inc
pop
fdivrl
out
mov
gs
or
jle
js
pop
and
add
out
and
call
add
js
or
push
dec
cmc
push
adc
add
push
stos
shlb
iret
cmpsl
sbbl
mov
imul
fists
and
xchg
lret
sub
dec
rcll
mov
jbe
std
mov
xchg
jo
repnz
push
cmpsl
mov
or
in
mov
cmp
loopne
jg
mov
jne
xchg
adc
pusha
jae
mov
out
gs
adc
rcrl
jnp
xchg
sbb
xchg
and
jcxz
cld
imul
fcmovbe
int3
inc
subl
rcrb
cwtl
js
je
inc
xchg
sub
jo
mov
xchg
fsubrs
dec
jmp
pusha
in
mov
or
cmp
push
adc
jne
jg
popa
xchg
orb
fdivrl
jb
sarl
pop
fwait
jle
fildl
sahf
jb
jnp
mov
pop
loopne
inc
jo
xchg
adc
pop
add
jns
test
sbb
sub
pop
sub
pop
mov
popa
jo
jb
cmc
xchg
cmp
xchg
mov
ds
sbb
push
outsb
cmpsl
rorb
mov
jmp
rcrb
icebp
lods
xchg
add
adc
dec
cs
mov
lods
scas
push
sub
into
mov
mov
add
mov
test
fnstcw
mov
nop
mov
or
sub
cli
xchg
mov
inc
bound
pop
rcrb
enter
ss
clc
jno
mov
fsubrp
jge
gs
adc
pop
cmpsl
cltd
cmc
les
popa
test
mov
movsb
in
pop
xchg
fildl
mov
xor
cmp
aam
xchg
negb
gs
add
movsb
inc
repnz
push
rorb
imul
lcall
mov
ret
dec
sub
sahf
and
pop
data16
jge
test
repnz
sbbb
testl
mov
pusha
sbb
popw
push
xchg
aam
xor
nop
or
inc
jle
jle
dec
push
jno
inc
sarb
mov
popa
adc
xchg
pop
dec
push
es
hlt
in
ret
xchg
pusha
cltd
cltd
int
xor
scas
aam
scas
add
pop
stc
push
cld
ret
mov
mov
lahf
lds
in
add
push
clc
pusha
pop
xchg
scas
sahf
cmp
mov
sub
test
roll
mov
or
popf
jb
out
sbb
sub
int
and
xor
and
ds
inc
mov
in
mov
mov
push
cmpsb
push
stos
clc
out
inc
push
sub
inc
cltd
push
jg
loopne
dec
outsb
into
dec
mov
ret
mov
movl
outsl
mov
mov
push
or
sbb
inc
fwait
push
enter
mov
dec
inc
rorl
push
cmp
ja
push
inc
jns
je
into
lret
mov
add
mov
cmp
pop
push
push
popa
pop
lea
xor
scas
mov
or
mov
movsl
out
lahf
pop
jg
fdivrp
cmpsb
hlt
cli
fmull
rorb
les
outsl
inc
fcmovnbe
mov
or
sbb
imul
cmp
fadds
adc
incl
and
cld
push
add
inc
fwait
jno
mov
popa
mov
mov
enter
rcr
and
pop
loope
mov
out
or
mov
xchg
ret
sbb
jmp
xor
sub
or
and
cmp
sbb
pusha
jns
lcall
sub
out
jnp
adc
shrl
divl
cmp
lds
imul
adc
lods
pusha
pop
fnstenv
xchg
cld
pusha
sbb
movsl
test
xchg
imul
hlt
jge
add
xchg
inc
std
xlat
mov
or
mov
jg
lods
mov
push
push
bound
cmp
xchg
adc
aas
jg
leave
dec
call
mov
rorl
pusha
xorl
cld
pop
and
int
bound
lcall
pushf
cwtl
jns
dec
jecxz
push
push
add
std
mov
jge
and
cltd
push
mov
bound
icebp
mov
mov
jo
fxch
call
lods
mov
aaa
inc
dec
cmp
in
icebp
jbe
loope
fidivrl
aad
cld
add
jl
insb
jmp
aam
lods
push
inc
scas
adc
in
push
and
mov
fs
outsl
loope
loop
push
cmpsb
adc
add
ret
and
dec
int3
xchg
lret
jmp
xchg
jae
inc
mov
fisttps
jl
out
das
pusha
outsl
adc
inc
push
aam
sub
lret
xor
bound
mov
dec
lcall
js
lods
mov
fidivl
test
xchg
pop
imul
movsl
dec
and
adc
or
arpl
popa
mov
enter
insl
mov
dec
dec
fstpl
jge
pop
cmp
lods
stos
sbb
ljmp
or
imul
outsb
jns
sub
pop
xchg
inc
fcomip
xchg
xor
jp
xchg
dec
ds
and
movsl
xor
or
cld
sarl
test
mov
lea
sub
jg
cmp
outsb
nop
cmp
inc
mov
pop
out
loop
ja
xor
and
xorl
popa
movl
xor
outsb
mov
dec
pop
pop
das
popa
outsl
push
xchg
fdivr
jg
sub
add
insl
adc
sub
into
flds
add
test
js
outsb
mov
les
test
cmc
popf
pop
or
pop
in
int
cs
add
add
add
pop
dec
out
push
mov
hlt
sbb
cs
ja
sub
cmp
fidivs
cmp
movl
mov
in
xor
call
loop
push
push
leave
jmp
movsl
mul
sub
mov
mov
pop
pop
fsubp
sub
or
add
loope
mov
inc
add
testb
fbstp
or
mov
insb
push
cs
imul
mov
insb
test
lsl
rolb
inc
stos
pushf
fstp
jnp
fistpll
negl
push
cld
add
sbb
or
jae
mov
dec
loope
adc
sub
lcall
xchg
out
and
jmp
sar
mov
andb
pop
mov
rclb
xchg
xor
xor
xor
mov
shlb
inc
fstpt
mov
mov
sbb
jbe
test
in
pop
aas
pop
push
ljmp
fs
xchg
nop
or
dec
out
dec
xchg
shlb
add
jp
xchg
sbb
jle
repnz
adcl
call
mov
add
sub
dec
sarl
iret
lods
sub
ret
add
aam
mov
mov
stos
add
mov
test
mov
dec
mov
sahf
cmp
mov
cmp
xchg
dec
cwtl
jne
jle
pop
popf
int3
lds
adc
stos
sahf
jno
movb
rolb
sub
xlat
jmp
xor
jb
jg
sbb
adc
pop
out
jle
jne
dec
inc
out
mov
stos
fidivrl
test
cmova
xor
rcr
inc
out
push
xor
sub
loop
cwtl
in
push
enter
jb
in
sbbb
mov
test
out
dec
movl
es
sub
xchg
push
jne
aaa
pop
arpl
movsl
nop
inc
loopne
ds
mov
xchg
xor
sbb
leave
daa
adc
adc
movsb
ret
fisttpl
adc
sub
lret
movsl
push
mov
cli
push
jno
adc
adc
shrl
pop
adc
hlt
adc
and
ret
xor
xor
xor
icebp
jns
outsb
fwait
sub
ret
mov
mov
jp
lret
dec
push
mov
xchg
mov
dec
cmp
pop
mov
adc
rcr
and
bound
test
push
xor
dec
insl
sbb
push
push
ss
dec
jge
mov
jg
repnz
sbb
outsl
lock
inc
lret
push
dec
add
or
ret
aad
jmp
hlt
sbb
mov
imul
das
cwtl
sub
jno
adc
in
fistl
es
jae
inc
cmp
aaa
fsubrp
adc
insl
clc
cmpl
pop
pop
mov
pop
mov
xor
mov
movsb
arpl
or
rorl
movsl
sbb
cmp
leave
loop
jo
push
out
mov
fpatan
pop
lock
add
ret
mov
xor
lcall
ficomps
aaa
dec
sub
lods
hlt
sbb
push
fmulp
leave
add
inc
dec
cwtl
jbe
pop
into
sbb
add
inc
xor
call
add
pop
je
movq
cmp
call
fildll
cwtl
adc
adc
mov
or
repnz
sub
push
pop
mov
imul
mov
mov
notb
jp
add
push
jle
ret
or
cmp
fsubl
or
and
mov
std
pop
pop
nop
inc
sbb
adc
sub
scas
inc
xor
xor
rcrb
shrl
pusha
cld
lcall
xchg
and
xor
lea
xor
and
int
jnp
out
xor
mov
jge
cmp
hlt
je
stc
add
std
test
cmp
mov
data16
or
nop
pop
inc
insl
push
sbbb
sub
and
jg
sub
fsub
out
aaa
push
clc
adc
xor
data16
mov
cwtl
movsb
insl
imul
lahf
lock
or
add
lods
push
pusha
enter
adc
or
pop
sbb
push
movb
mov
cmp
mov
leave
sbbb
shlb
daa
rcr
jno
mov
xor
outsl
sbb
pop
or
stos
les
not
fldenv
or
xor
test
ds
inc
sbb
sbb
mov
int
sbbb
sbb
dec
movsb
push
push
imul
sbbl
sbb
cltd
xchg
pop
rclb
push
sbb
fisubl
mov
add
enter
loope
mov
inc
int3
addr16
add
aad
jecxz
jnp
cmp
rcll
les
pop
jns
mov
cmp
ret
fucomp
mov
hlt
test
and
cmc
stos
stc
insb
daa
add
sub
sub
and
xchg
js
and
fistps
mov
data16
incl
push
xor
lahf
mov
fwait
orb
out
insl
ret
push
pop
andl
div
inc
fs
push
adc
pop
cs
sbb
adc
addb
mov
insl
jnp
push
push
pop
aas
std
sbb
loopne
call
iret
sti
sbb
insb
push
icebp
fstl
inc
mov
mov
jnp
repnz
scas
mov
push
daa
sbb
mov
ss
push
jo
pusha
js
lea
negb
fldenv
fnstenv
sub
rcrl
xchg
imul
push
pop
enter
jo
sbb
push
and
cmp
aam
xchg
ss
xchg
sar
cmp
testl
adc
insl
sbb
xor
cmp
aas
mov
lock
xchg
repz
jns
dec
outsb
add
int
dec
jne
cmp
cmp
outsl
mov
jb
push
xor
cmp
cmpsb
xchg
push
push
rol
daa
sbb
xor
cmp
mov
dec
cltd
insb
inc
adc
pop
push
adc
mov
fiadds
mov
sub
pop
dec
dec
ljmp
je
jmp
lret
loope
int
outsb
pop
and
add
jmp
add
int3
popf
xor
lods
fcoms
jle
jne
addr16
xchg
inc
inc
add
int3
sbb
out
inc
shrb
imul
sbb
sahf
mov
std
out
push
cmpsb
fildll
stos
ja
insl
pop
inc
js
mov
and
out
das
lods
rcll
mov
hlt
xor
jmp
xchg
and
stos
nop
stos
out
les
mov
mov
outsb
push
xchg
add
imulb
ja
add
lock
test
fs
call
pop
nop
aad
loope
inc
adc
dec
loope
or
fstpl
cli
mov
dec
inc
fstpt
pop
jo
xchg
inc
cmp
mov
popf
cmpsb
cld
mov
fs
pop
testb
adc
jae
add
test
add
pop
rorb
jo
inc
mov
xor
lcall
ss
aam
mov
sar
xchg
adc
push
jbe
mov
mov
ret
add
jge
push
pushf
inc
sti
std
arpl
aad
fbstp
es
sub
xor
dec
fidivs
dec
stos
mov
or
clc
ret
shll
mov
push
popa
sti
sbb
sahf
push
das
mov
sub
push
add
sbb
mov
sahf
scas
mov
mov
push
fcompl
xchg
movsb
paddb
add
xorl
jbe
xor
or
lcall
sbb
rcrl
mov
mov
xor
out
test
mov
std
or
cmp
mov
les
mov
pop
loop
lcall
in
sub
pop
add
aas
cmpsl
mov
out
mov
cmpsl
mov
dec
fsubrl
cld
add
insb
dec
idivl
imul
fiaddl
adc
cmp
cmpsb
dec
xchg
sub
push
andl
inc
and
dec
mov
out
ljmp
out
nop
and
push
inc
imul
jle
icebp
js
insl
lret
lcall
sub
and
push
in
add
mov
fidivl
mov
stos
xchg
inc
xchg
cmp
cmp
pop
loope
rcr
test
insb
fs
imul
jb
adc
aas
cmp
cmpsb
xor
push
filds
clc
xchg
or
adc
imul
les
and
sub
mov
popa
pop
cmpsb
jbe
and
jnp
xchg
sarl
popf
imul
push
repz
shrb
xchg
add
mov
shl
inc
rclb
push
in
dec
andl
or
rol
inc
pop
ret
repz
repnz
sub
loope
mov
xchg
in
in
inc
dec
cltd
shrb
cmp
faddp
or
sti
lcall
dec
adc
jae
xor
loopne
mov
das
clc
push
add
and
or
lret
add
pop
aas
xchg
mov
xchg
pop
xor
and
insl
inc
push
pop
inc
les
lods
subb
pop
rol
mov
dec
movsl
jg
jl
rorb
mov
ljmp
push
lods
mov
sbb
mov
out
cmp
adc
andb
fwait
loope
and
cltd
cld
daa
xchg
cmpl
jns
push
xchg
inc
xchg
push
out
lods
sbb
cmpsl
sbb
lahf
enter
add
stos
fildll
sbb
mov
xchg
xor
nop
sbb
inc
in
add
jo
mov
and
add
fimuls
dec
out
int
cmp
dec
mov
mov
pop
test
jae
ja
test
popa
cmp
int3
pop
push
push
or
popa
xorl
inc
lret
or
dec
jns
add
xchg
mov
rep
jns
add
and
pop
fsubrs
test
dec
dec
sub
stos
rcll
xchg
iret
imul
scas
pusha
push
fldcw
adc
lahf
xchg
das
jae
enter
out
sbb
mov
sub
lret
call
inc
scas
test
inc
push
add
stc
or
call
outsl
sub
sbb
mov
jp
sbb
mov
ja
push
lods
ds
movsl
xchg
enter
ja
adcb
sub
repz
mov
popf
xlat
dec
imul
adc
les
dec
movsl
test
sub
cmp
and
push
or
xchg
and
mulps
lds
mov
sub
dec
cmp
outsl
mov
inc
push
add
mov
mov
push
lret
pusha
cmp
mov
add
pop
or
mov
insl
dec
add
mov
pop
xchg
popf
std
out
push
test
cmpsl
daa
mov
jb
push
aam
or
and
jmp
loop
in
adc
popa
add
adc
aaa
sub
fists
mov
xchg
test
cmp
jnp
popf
mov
mov
sub
push
cmc
cld
mov
popa
jl
insb
in
lcall
mov
xchg
lcall
ss
js
not
pushf
popa
into
cmp
leave
cmp
xchg
and
mov
jg
fsubrp
gs
inc
pop
shlb
out
xchg
popf
lods
xor
pop
push
in
push
xchg
insl
shrb
push
add
jmp
xor
sub
pushf
or
mov
aas
test
out
lret
lret
xor
pop
push
inc
leave
leave
daa
lcall
sbbl
mov
push
lock
and
jne
dec
pop
sbb
test
dec
inc
out
sbb
dec
jl
mov
dec
movsb
pop
xor
inc
nop
xor
lret
enter
push
adc
leave
enter
xchg
addr16
cmp
jle
hlt
stc
fs
dec
push
subb
or
fs
loop
inc
adc
sub
or
sub
xchg
mov
and
pusha
jp
sbb
mov
jl
jno
jo
adc
cwtl
cmp
popa
or
and
add
enter
cmovnp
jb
mov
leave
jl
push
test
mov
nop
daa
push
adc
call
dec
xlat
cmp
out
sbb
insb
push
jmp
mov
pusha
nop
daa
insb
dec
adc
jge
jnp
lahf
push
jle
jb
add
mul
es
rsqrtps
cli
xor
es
out
dec
add
mov
test
mov
sbb
subb
push
adc
pop
adc
pop
test
aaa
jl
lea
cltd
push
jnp
jle
fs
into
aad
in
mov
sbb
pop
mov
adc
xchg
mov
jns
mov
inc
pop
in
in
push
pop
inc
add
fsubs
pop
mov
hlt
or
dec
cmp
das
sbb
pop
fld
sti
mov
ret
adc
ljmp
push
dec
xor
adcb
adc
sbb
aam
lods
xchg
cmp
inc
cmp
pop
push
cmp
in
stc
mov
lods
test
push
fiadds
loop
int
add
fistpl
add
mov
push
xor
jo
outsb
mov
sub
cmp
dec
xor
xchg
pop
mov
adc
jnp
jno
clc
int
mov
xchg
movsb
stc
cmpsl
stos
jge
rclb
js
arpl
pop
repz
out
push
push
test
or
int
add
push
test
insl
les
and
add
dec
inc
int3
outsb
es
mov
mov
cltd
aaa
fwait
arpl
hlt
jno
mov
ret
or
test
push
lods
push
pusha
inc
xchg
jge
movsb
pop
dec
fwait
pushf
xlat
cmp
xchg
jp
shl
pop
adc
popf
test
lret
xchg
popf
add
out
ljmp
ljmp
inc
scas
scas
in
xchg
stc
xchg
scas
imul
push
insb
push
mov
adc
xchg
cmp
inc
or
sub
mov
out
add
mov
add
fwait
inc
ss
pcmpgtd
sbb
dec
loop
cmpsb
loope
mov
popf
mov
lea
mov
inc
xor
outsb
das
cmp
dec
aas
jmp
inc
outsl
mov
push
inc
mov
sti
popa
mov
pop
out
cmpsb
outsb
add
test
lock
in
clc
inc
dec
xchg
adc
mov
dec
jbe
add
and
sub
cld
xchg
lret
int
add
addr16
xor
loop
push
inc
fnsave
clc
mov
mov
dec
aad
adc
pop
mov
inc
sbb
inc
fdiv
scas
or
shlb
addr16
aas
cmpsb
mov
in
mov
leave
rolb
pop
dec
or
mov
dec
data16
push
mov
mov
cltd
adc
add
insb
imul
adc
xchg
mov
dec
lahf
aam
out
adcl
loop,pt
dec
pop
in
in
inc
popf
adc
fcoms
push
pushf
lret
push
mov
mov
jns
xchg
stc
ret
cmp
push
bnd
mov
jge
imul
xchg
mov
mov
rclb
lods
xchg
push
outsl
loop
adc
arpl
pop
sti
dec
sbb
dec
into
mov
jl
scas
ja
cmp
adc
xor
or
mov
inc
insb
inc
test
jmp
sub
mov
adc
jb
out
jl
and
movsb
xchg
call
mov
orl
sub
insb
loopne
icebp
jns
sbb
cs
int
cmp
sub
enter
das
sub
cmp
mov
dec
daa
adc
or
inc
mov
and
outsl
mov
insl
iret
jge
clc
jne
fldl
jecxz
data16
lds
dec
dec
inc
dec
xchg
push
insb
aas
dec
pop
inc
sbb
out
mov
add
sbb
pop
jge
push
rorb
sbb
push
push
push
mov
outsl
inc
mov
in
in
cmp
in
outsl
stos
sar
movsb
fmulp
push
insl
shrl
out
add
lds
addr16
xor
test
mov
sbb
jp
cli
stc
pushf
mov
stos
les
aam
dec
fcmovne
xchg
js
add
sbbb
mov
pop
mov
mov
sub
mov
and
negl
mov
shll
cli
cmpsl
sub
and
fmuls
dec
fs
bound
js
adc
jbe
dec
and
loopne
out
dec
shll
inc
call
mov
aas
mov
pop
inc
cli
jmp
mov
push
lcall
xlat
adcl
mov
repz
xlat
pop
jge
sahf
inc
lcall
test
inc
flds
fisttps
sti
push
frstor
sub
mov
and
pop
pop
loope
inc
dec
data16
adc
ss
nop
adc
pusha
pop
je
add
aaa
mov
dec
movsb
pop
jp
lret
push
in
mov
divl
adc
lds
mov
in
out
push
fists
int
lret
orb
pop
fmuls
mov
test
int3
xchg
addr16
inc
movsb
enter
out
xchg
jb
add
add
bound
notb
idiv
fldenv
jnp
imul
iret
sbb
dec
cmc
out
into
nop
push
lods
incb
outsl
adc
test
cmp
pop
jge
add
and
out
ljmp
cwtl
or
dec
inc
or
cs
fisttpl
mov
jg
lret
or
movsl
enter
lods
in
je
es
enter
push
sbb
mov
in
mov
loope
cmp
lcall
xorl
xchg
cwtl
push
fldl
mov
sarl
fs
orl
cmp
ds
sub
cmp
xchg
sub
xchg
lds
push
inc
xchg
std
adc
daa
fidivrs
div
les
sbb
imul
jmp
xchg
mov
mov
xor
scas
aam
sbb
shll
jle
leave
lret
mov
ja
clc
sbb
sub
mov
xchg
nop
fs
jmp
or
mov
pop
dec
dec
jno
push
data16
mov
jb
aad
cs
into
or
inc
lcall
dec
pushl
xchg
cmpsb
jmp
insb
jle
mov
sub
add
xor
sarl
loop
and
scas
or
js
pop
pop
cwtl
jno
pop
mul
jmp
mov
inc
pop
jno
test
jp
pop
cld
aas
stos
pop
mov
xor
xchg
jmp
adc
stos
enter
fwait
mov
popa
sti
jle
sub
cmc
jle
repz
call
cld
clc
push
xlat
stc
push
sub
mov
addr16
adc
ds
leave
xchg
cmp
dec
arpl
iret
pushf
call
mov
xchg
bound
and
jbe
addb
jecxz
pop
ret
mov
icebp
pushf
sub
js
dec
cmp
clc
dec
nop
sbb
rcrl
aad
into
mov
and
dec
xchg
jne
mov
push
stos
dec
pop
test
in
mov
data16
in
xchg
or
in
inc
mov
pop
add
shlb
mov
mov
mov
mov
jbe
shlb
dec
icebp
sbb
dec
enter
arpl
xchg
loopne
scas
jp
push
fsubr
push
loop
push
mov
mov
sahf
xchg
xor
fs
push
hlt
pusha
jae
pop
gs
lret
lss
dec
xchg
mov
lret
outsl
dec
mov
shll
enter
fildll
adc
or
xchg
fs
cmpl
stos
jge
or
adc
jmp
shr
push
mov
jg
dec
hlt
sbb
push
in
xor
aad
push
cs
ror
mov
lahf
mov
scas
adc
inc
dec
imul
inc
xchg
ljmp
cmp
fsubl
or
paddusb
subl
mov
push
aad
sub
xchg
cmp
add
jmp
fistpll
and
push
mov
inc
and
xor
stos
push
in
pushf
sarb
xor
push
fsts
int3
lret
dec
les
in
or
js
ja
pushl
jbe
push
sbb
sub
cltd
dec
repnz
cltd
or
or
sub
add
mov
ljmp
add
ja
mov
or
mov
loope
or
out
and
mov
sub
xor
xor
lods
ficompl
fistpl
push
xchg
xchg
mov
xchg
pop
xchg
inc
mov
mov
js
std
je
aas
adc
test
sbb
neg
mov
fadds
xchg
dec
popa
adc
sbb
pop
orb
int
add
or
mov
es
out
in
xchg
sbb
repz
or
int
pop
and
lock
pop
fnstcw
pop
shrb
pop
xor
lcall
and
loopne
shll
mov
dec
cli
mov
popa
lcall
lret
sub
mov
pop
inc
int3
xchg
mov
test
mov
pop
dec
leave
jno
shlb
clc
mov
adc
xor
and
cwtl
xchg
sbbb
or
in
jmp
lret
gs
mov
mov
cmp
adc
push
je
mov
jle
mov
lret
sbb
push
imul
mov
mov
sahf
inc
pop
icebp
xchg
mulb
lret
xor
mov
out
cmpsb
sti
insb
mov
mov
out
scas
pusha
mov
push
inc
imul
add
in
fldcw
jl
loop
mov
in
fsubrp
rcl
das
inc
clc
mov
xchg
paddsb
or
pop
subb
add
cmp
cmc
cmc
fs
imul
push
xchg
arpl
cmc
xchg
mov
inc
add
shlb
inc
loope
shr
les
outsl
aas
cmp
or
cltd
adc
mov
and
mov
push
cwtl
loopne
cltd
int3
fiadds
aaa
mov
jne
xchg
mov
ds
scas
lods
mov
loopne
or
lods
and
inc
ret
loopne
es
xchg
mov
test
enter
lods
xor
scas
fstpt
lret
jecxz
pop
mov
dec
jae
xor
ljmp
out
push
aad
add
mov
clc
imulb
jmp
mov
sbb
loope
sub
les
and
add
sub
inc
mov
aam
cmp
mov
popf
repnz
fcomp
push
sbb
into
rorb
mov
movsl
stos
cwtl
mov
push
pop
push
mov
aas
aaa
pusha
dec
out
subl
adc
iret
inc
xorl
push
push
xor
or
sar
push
pop
add
les
dec
nop
push
pop
push
cmp
pop
jp
mov
addl
in
lock
push
jnp
int
lret
push
jmp
mov
out
pusha
sbb
adc
mov
sar
or
push
adc
push
insb
sub
inc
dec
jbe
sub
imul
adc
ljmp
int
int
mov
push
in
frstor
sub
pop
xor
jbe
or
lods
fnstcw
mov
and
mov
jge
mov
sub
int3
mov
jl
imul
inc
aaa
fsts
and
mov
not
adc
setae
in
sub
cmp
ret
xor
mov
aaa
iret
insb
mov
bound
add
sahf
mov
push
mull
aam
xchg
adc
repz
jbe
lock
mov
andl
and
push
outsl
jge
sbb
js
das
or
xor
cmp
sbb
pop
enter
sbb
push
mov
loop
mov
push
push
sbb
icebp
add
add
jg
adc
aaa
or
inc
jo
popf
inc
xchg
enter
add
add
int
enter
clc
xor
ds
fisttpll
clc
loop
add
pop
fs
les
add
mov
mov
imul
cwtl
add
cmp
repnz
push
push
mov
jnp
add
lahf
fucomip
jg
movzwl
imul
mov
aas
in
in
push
xchg
jecxz
xor
adc
movsl
add
aas
jno
push
sbbl
stos
rolb
add
shll
inc
ljmp
cmp
sub
fucomp
adcl
lods
pop
hlt
or
push
cmp
xchg
xor
imul
cltd
push
push
fwait
addr16
mov
cmp
fwait
into
outsb
jno
push
mov
sbb
faddl
jae
leave
paddusw
inc
dec
cmp
and
inc
mov
clc
push
les
fstp
lahf
mov
jbe
loope
in
mov
sub
inc
pop
sarb
inc
aam
xor
inc
faddl
leave
sub
test
and
cli
cltd
mov
xor
sub
in
ret
test
adc
int
add
fs
out
or
sahf
add
xchg
xchg
movsl
pop
ret
mov
and
and
xor
hlt
mov
aad
inc
sub
pop
out
sahf
pop
movsb
fxch
clc
orb
fadds
cmp
xor
or
imul
cmpsb
stos
inc
jne
or
and
jne
out
mov
aaa
in
sbb
dec
insb
cli
lods
push
mov
loope
jle
or
jg
sub
mov
pusha
arpl
pop
jb
or
inc
push
ljmp
dec
cwtl
popa
add
sub
jmp
jo
test
ja
xor
push
orl
push
push
pop
push
cmp
mov
popa
pushl
enter
push
jg
cmp
pop
pop
daa
push
add
pop
pop
xor
icebp
xchg
inc
mov
inc
stos
and
push
lds
push
and
inc
ds
lret
jns
and
and
sbb
movd
and
and
aad
lret
xor
and
mov
andl
ja
mov
ja
and
xchg
jmp
aad
lret
in
bound
mov
or
sbb
in
lods
jp
mov
je
and
pop
xor
jnp
jae
mov
in
lcall
ficompl
bnd
aad
mov
cltd
push
fcoms
mov
cwtl
mov
movsl
push
scas
dec
sti
pop
into
xchg
jp
test
mov
xor
pusha
hlt
in
ljmp
xchg
jb
std
mov
cmp
jnp
push
jmp
cld
insl
inc
push
xchg
loope
clc
add
sbb
std
loope
jge
call
aam
xor
jmp
lea
push
sub
mov
cmp
ja
pop
movsb
sub
popf
jne
fidivrl
cmpsb
adc
mov
push
cmp
jmp
pop
bound
shl
sti
jmp
inc
test
xchg
ss
std
or
aam
sub
mov
jne
adc
cmp
and
sub
out
adcl
cmp
sub
xchg
dec
addb
push
shlb
sbb
insl
pushf
daa
popa
push
pop
jae
jnp
lahf
pop
loopne
sahf
popa
mov
pusha
pop
aad
js
stos
movsl
mov
scas
sti
xchg
mov
mov
jp
xchg
lret
adcl
dec
hlt
pushf
or
fstps
fsubrp
inc
push
inc
lahf
push
xchg
dec
movsb
dec
cltd
hlt
test
addr16
jbe
cs
lret
push
mov
mov
push
jle
pop
jle
call
fidivs
repnz
gs
jl
fadd
lods
xor
push
lods
shrl
stos
xor
cwtl
scas
pop
sbb
mov
cltd
sbb
adc
xchg
sub
push
into
fdivs
xor
test
xchg
mov
ds
fimull
push
jecxz
sbb
xor
loope
stos
jge
pop
mov
test
dec
loopne
hlt
mov
arpl
mov
jle
jns
lds
mov
cmc
mov
lods
div
and
flds
std
mov
sarb
loopne
or
or
fstpt
jbe
mov
arpl
out
fists
or
jle
xor
sbb
daa
sti
cmp
divb
sbb
shll
popa
addl
sub
mov
iret
pushf
int
sub
fsubl
loope
mov
cmpsl
sbbl
jg
jge
into
out
lds
outsb
xchg
ds
xchg
pushf
xor
push
loop
sbb
lret
xchg
and
ss
xor
xchg
jno
dec
or
scas
add
rolb
mov
cmp
mov
popf
ss
movsl
pop
fcmovu
inc
mov
loop
xchg
jo
mov
in
data16
enter
jnp
rcrl
adcl
rcll
testb
xor
out
jl
pop
clc
cmp
pop
push
mov
cmpsb
mov
and
loop
inc
adc
adc
mov
ljmp
or
and
sti
sub
pop
adc
addr16
int
xchg
cltd
jo
ljmp
xchg
xchg
adc
stc
push
frstor
sbb
push
xorb
repz
add
out
fwait
outsl
sbb
inc
lahf
int3
pop
jg
icebp
std
jns
mov
addr16
mov
leave
mov
mov
clc
xlat
jmp
mov
out
scas
je
pop
repnz
inc
adc
inc
adc
mov
lret
jo
lods
in
pop
and
add
jmp
lock
gs
xor
add
add
mov
push
mov
dec
sbb
xchg
lods
div
bound
mov
add
xor
mov
add
xchg
rclb
xchg
aad
lcall
gs
fwait
xor
loope
mov
add
jle
lea
sarb
nop
out
sbb
and
add
fs
popa
int
inc
rcr
dec
xchg
sbbb
in
mov
xor
jg
outsb
lods
mov
in
add
cmp
fwait
xchg
stc
rcrl
iret
pushf
inc
gs
aad
mov
lret
mov
mov
pop
mov
pushf
mov
fs
sub
pop
adc
pop
outsl
andb
sbb
inc
pop
cmp
inc
lods
fbstp
or
dec
sbb
and
in
lret
jne
fisubrl
dec
gs
xchg
inc
cmpsb
cli
push
xor
test
addr16
jecxz
mov
fwait
xchg
nop
adc
cld
and
mov
movsl
push
cmp
xchg
js
in
fidivrs
push
xor
fwait
jo
adc
mov
xchg
mov
cmpsl
fildll
iret
push
add
sub
enter
mov
scas
sub
cmp
mov
roll
mov
cmp
decb
stos
pop
test
mov
ds
icebp
or
dec
xor
sbb
repnz
das
mov
push
xor
xchg
add
aaa
testl
adc
pop
push
test
in
loopne
ret
dec
xor
rclb
push
mov
adc
jb
mov
ret
inc
mov
mov
push
insl
and
nop
lods
pop
and
xor
jecxz
repnz
mov
adc
dec
out
cmp
das
dec
repz
and
in
push
cltd
cs
das
jo
pop
pop
mov
addr16
jge
cmpsb
pop
cld
cmpl
mov
mov
and
push
mov
out
pop
mov
nop
push
stos
or
add
popf
xchg
fs
push
inc
and
clc
or
in
cmp
xor
xor
loopne
mov
and
pop
xchg
mov
dec
xchg
mov
inc
mov
push
xor
xor
or
xlat
aaa
dec
sbb
push
inc
fisttpl
jg
out
dec
push
rolb
aam
fcomip
int3
and
push
cmp
jno
mov
daa
xor
lds
pushf
imul
int
ret
aad
cli
ljmp
cwtl
lods
add
out
pop
rcr
inc
test
lds
daa
xor
dec
cmp
out
push
fsts
je
insb
fwait
cmp
call
jo
and
cmp
mov
sub
xchg
mov
add
ja
enter
pop
inc
cld
pop
mov
cmp
ret
jne
lods
adc
adc
jg
jae
jnp
testb
fwait
repz
sub
xchg
jae
aam
and
mov
test
cmp
inc
repnz
roll
sbb
fadd
mov
imul
lock
ja
sbb
pop
sbb
into
inc
pusha
test
gs
ret
jmp
inc
xor
add
jl
pop
jl
into
aam
xor
xchg
adc
fstpt
fcompl
icebp
xchg
mov
and
sahf
mov
add
and
shl
mov
mov
jmp
jmp
or
jecxz
daa
mov
jno
dec
movsl
in
mull
loopne
sub
push
pop
dec
cmp
mov
cs
stc
sahf
sub
add
mov
lret
push
adc
sub
cwtl
push
adc
daa
leave
dec
cmp
dec
repz
cmp
pop
fcompl
stc
daa
sti
decl
or
shl
jp
mov
les
pop
in
mov
data16
push
or
loopne
adc
fucomi
add
push
rolb
cs
addb
std
push
dec
inc
xor
scas
fmull
test
sahf
mov
fmull
shrb
clc
hlt
in
pushl
int3
dec
out
outsl
jne
add
mov
mov
roll
inc
or
pop
jmp
cmp
or
insb
imul
xchg
fcompl
imul
cmp
xor
dec
ret
cmc
je
pop
std
stc
adc
test
jb
mov
ret
jne
adc
jo
xchg
jns
jnp
lea
push
in
xor
adc
dec
imul
mov
mov
inc
and
cltd
stc
jecxz
mov
pushf
mov
xor
icebp
lret
inc
sub
or
xchg
nop
les
ljmp
imul
or
shlb
fwait
divb
or
sub
inc
data16
inc
lret
or
jge
mov
sub
or
adc
daa
fldcw
addr16
jnp
jle
pop
int3
xchg
add
dec
mov
xlat
in
dec
mov
mov
out
ficomps
xchg
inc
ret
fdivrs
xor
jno
xchg
ljmp
dec
pop
mov
mov
and
xor
std
ret
mov
ret
push
scas
cmp
dec
sbb
jle
cwtl
push
push
mov
loop
xlat
inc
xchg
jecxz
xchg
or
imul
or
ja
jns
xor
mov
pop
sub
imulb
ljmp
xor
hlt
lods
in
pop
sbb
fistps
mov
sbb
arpl
sti
les
xchg
and
cmp
stos
rcrb
in
jns
jnp
fcmovnb
lea
mov
ret
cs
aad
lret
xor
cmp
sbb
pop
mov
add
lret
fld
sbb
scas
sbb
dec
and
stos
cmp
out
ret
out
fmuls
dec
cli
xchg
test
cli
push
in
in
push
xor
lret
xor
sub
inc
dec
aas
push
jg
push
cltd
xchg
ljmp
js
mov
mov
lods
or
outsb
cmc
adc
lret
out
mov
mov
mov
bound
xchg
mov
mov
xchg
adc
pop
clc
aas
inc
rcr
mov
pop
jge
inc
cmc
fstpl
rol
movsl
pop
je
jbe
into
mov
xchg
cmp
push
adc
iret
decl
movsb
push
and
push
push
js
xchg
out
cwtl
and
push
jecxz
je
pusha
gs
dec
or
xchg
ljmp
cmp
addr16
mov
push
enter
mull
and
mov
nop
sub
push
test
mov
test
pop
ja
cs
mov
cmp
push
mov
cmp
mov
inc
mov
sbb
fdivrs
jae
imul
push
pusha
shrl
jae
or
jae
inc
inc
push
jp
mov
dec
xchg
dec
popa
and
sub
mov
add
mov
insb
and
call
sbb
bound
into
cmp
push
adc
mov
or
fildl
repnz
mov
lods
sub
add
test
push
mov
pop
add
shll
jb
and
cld
lods
cvttps2pi
test
outsb
cmp
mov
xchg
decb
pop
jo
push
xchg
mov
out
lcall
mov
xchg
fnstsw
push
in
fisttpl
mov
xchg
dec
add
jbe
add
nop
lahf
xor
out
repnz
iret
insl
dec
ss
roll
mov
xchg
ret
stos
sub
test
cmp
sbb
sbb
cmpsl
mov
xchg
cli
stc
push
loope
xchg
aam
sbb
les
out
or
inc
popl
inc
push
mov
push
mov
outsb
mov
inc
faddl
fiadds
pop
dec
bound
pop
push
pop
xchg
jmp
adc
sub
fs
sub
in
push
xor
cmp
jnp
sahf
add
and
pop
aad
movsl
fdivrl
sub
push
scas
cltd
sahf
dec
pop
jne
les
repnz
mov
fisubl
repz
add
in
filds
popf
cli
sub
mov
aaa
pop
les
add
imul
xor
fisubrs
cwtl
xor
int
or
sub
decb
in
inc
push
pusha
sbb
stos
das
mov
iret
xlat
inc
lcall
and
jmp
movsl
repnz
xchg
testb
in
push
daa
lods
adc
push
sub
cmp
mov
push
dec
jae
outsl
sti
enter
lcall
fbstp
xchg
cmp
push
dec
mov
hlt
pop
push
repz
mov
fstpt
inc
mov
xchg
sub
xchg
mov
mov
lret
and
xchg
xchg
loope
sub
lcall
hlt
xor
pop
inc
push
ljmp
outsb
test
and
jo
and
adc
fptan
outsb
test
add
sbb
xchg
pusha
and
int
mov
repz
out
dec
mov
mov
mov
sbb
test
xor
inc
faddp
repz
inc
mov
out
aad
mov
dec
sbb
xor
xchg
subb
push
outsl
cmp
mov
lret
outsb
push
ja
dec
push
xchg
cmc
aam
cmp
xchg
jmp
pop
or
pop
insl
sbb
jne
rclb
insl
aad
mov
ja
frstor
sub
and
inc
cmpsl
or
loope
cmpsl
insb
ret
aas
sbb
loopne
mov
push
cmp
sti
int3
popf
shr
scas
gs
mov
push
add
xlat
aaa
xchg
inc
jae
xor
sub
xor
add
pop
cmc
inc
cmp
pop
je
xor
scas
divb
ds
cmpsb
lahf
adc
sbb
xor
test
test
inc
in
inc
cwtl
cmpsl
out
out
dec
ret
aad
loopne
call
and
cmp
cmp
cmp
ds
adc
jle
scas
dec
pushf
nop
sub
roll
add
sahf
loopne
fistps
xlat
adcl
pop
sti
pushf
sbb
gs
mov
mov
andb
push
mov
push
lods
fsubl
inc
popa
lcall
es
cmc
mov
dec
adc
jo
test
push
ficompl
sbb
or
imul
pop
jecxz
inc
fcoms
push
outsb
inc
mov
jmp
push
shlb
jge
lods
outsb
push
fdivrl
sahf
movsl
xor
loop
lock
popf
daa
nop
orl
scas
add
jmp
cs
outsb
dec
lods
push
adc
ret
cmp
xlat
dec
iret
das
push
hlt
mov
mov
dec
pop
mov
gs
mov
add
cltd
and
add
mov
icebp
sub
dec
pop
lcall
jno
or
cmp
ficompl
int3
pop
lods
dec
mov
pushf
adc
push
push
lds
push
jge
fisubl
or
or
scas
orl
mov
xor
test
leave
add
out
iret
xor
jg
fistpll
push
jae
movb
test
insl
imul
enter
addr16
int3
jno
popf
enter
aaa
mov
or
jp
mov
push
jp
and
lods
punpckldq
ret
sub
cmp
int
leave
iret
andnps
push
mov
les
int
xor
and
cli
cmpsl
in
repz
in
lods
cmp
jbe
jecxz
mov
gs
test
pop
or
sub
xchg
jb
ss
dec
loope
inc
test
xor
pop
mov
sub
inc
cwtl
mov
arpl
lock
cmp
icebp
mov
lock
xor
in
cmp
mov
mov
add
jle
xor
or
out
in
xor
xor
fidivrl
push
inc
or
out
dec
in
xchg
movsb
mov
sti
xchg
xchg
or
cmp
xchg
inc
cmc
inc
and
sub
sub
and
scas
jbe
mov
sub
or
xchg
sahf
pop
pop
fidivl
sub
sub
or
sub
pop
cmp
imul
aaa
xchg
mov
in
add
mov
and
sbb
push
adc
stos
lret
shrl
add
fwait
in
cmpsb
sub
pop
stos
pop
movsl
sbb
push
mov
ljmp
xor
rcpps
mov
xchg
out
movsb
test
pop
xchg
das
adc
sub
inc
rclb
fldenv
notl
inc
mov
pop
mov
xor
mov
xchg
cmp
inc
mov
add
jne
or
repz
add
cmp
lds
pmulhw
idivl
ljmp
outsb
sbb
out
ja
fnsave
div
cmp
dec
js
bound
outsl
aad
mov
xchg
shl
cmpsl
jl
mov
jmp
loopne
xchg
mov
fidivs
pop
mov
int
inc
or
xchg
lock
jge
clc
jnp
hlt
scas
xor
cltd
xchg
dec
nop
xchg
pop
jge
repnz
dec
pop
div
orl
lods
jne
dec
inc
pop
imul
mov
sarb
sbb
arpl
out
outsl
pop
add
repz
or
dec
sub
sahf
dec
jmp
inc
faddp
xchg
mov
pop
mov
insl
out
loopne
clc
icebp
pop
shll
call
mov
dec
je
daa
or
insb
mov
ja
mov
jae
inc
ljmp
sub
outsb
adc
cmp
push
test
sub
fwait
push
cmp
push
mov
cwtl
arpl
xlat
push
sti
lods
xchg
arpl
ret
xchg
fs
xchg
shrb
sub
cmpsb
scas
jmp
test
fnsave
test
xchg
sub
xchg
mov
je
aad
dec
mov
setg
invd
or
cmc
vorpd
push
cmovl
enter
mov
roll
dec
push
lock
push
mov
xor
test
mov
mov
add
sbb
je
xchg
push
rorl
pop
out
and
sbb
sbb
addr16
cwtl
fs
stos
sahf
push
aaa
lock
or
cltd
adc
outsl
fnstsw
jmp
dec
pop
push
jecxz
pop
fimuls
cmp
in
jecxz
mov
mov
push
lret
sarl
jo
daa
test
sbb
mov
add
pop
pop
adc
jmp
imul
and
jle
lcall
mov
dec
test
cmp
test
or
bound
mull
push
lock
xchg
xchg
cli
out
sbbb
ss
repz
rcrl
addr16
cmp
add
and
cwtl
add
mov
insb
pop
stc
leave
mov
aam
jecxz
test
lahf
adc
push
cwtl
and
jmp
dec
mov
push
into
repnz
in
or
das
jno
adc
scas
test
sub
test
int3
dec
xor
inc
xor
pop
or
roll
cmc
shl
subl
test
lahf
sub
dec
cmp
jb
fisttps
out
xor
adc
xor
mov
cmp
add
popa
lret
fists
icebp
aas
or
ja
sub
enter
cmp
bndldx
and
mov
out
add
xor
push
sarb
test
in
jo
addr16
adc
into
test
gs
push
pop
inc
les
jns
dec
xchg
push
nop
std
je
pop
aas
xor
stos
push
sub
sbb
jmp
out
into
push
pop
cs
cmp
cmp
pop
mov
pop
push
dec
or
rorl
sbb
fsubrl
pop
adc
or
dec
pushw
xor
call
shl
repz
aam
jge
ror
sbb
inc
pop
pop
fstpt
call
adc
ss
addr16
push
out
loope
jp
scas
gs
in
imul
inc
sub
mov
cmp
xor
stos
cmp
dec
push
sbb
xchg
imul
dec
movsb
lods
fsts
push
popf
mov
add
jae
lods
ret
jp
stc
movsb
ret
ret
mov
push
mov
add
mov
lret
je
iret
cmc
jge
pop
ss
cmp
push
gs
mov
cmp
insl
mov
ss
adc
mov
jecxz
insl
push
pop
mov
nop
fsubl
movsb
sarl
mov
out
and
in
push
mov
mov
and
push
sbb
xor
dec
or
inc
mov
aaa
sbb
and
xor
mov
and
and
inc
pop
xlat
loop
xchg
std
mov
dec
aas
xor
sub
push
popf
push
pop
xor
cld
je
jge
add
addr16
testl
outsl
into
mov
xor
add
out
push
push
jo
jmp
repz
aam
jb
rolb
fsubrl
in
sbb
xlat
cwtl
movsb
ret
xor
mov
es
cmp
repz
outsl
daa
lods
mov
sar
mov
mov
xchg
sbb
mov
leave
mov
fadds
mov
jmp
adc
cwtl
add
and
shr
fidivs
add
das
jbe
push
sarb
stos
loop
xchg
fsubp
aad
out
adc
pop
mov
ja
into
inc
mov
or
rolb
enter
test
ljmp
cmp
aas
inc
aad
sub
lds
jecxz
jno
scas
adc
ds
loopne
lds
out
lds
push
push
inc
mov
xlat
dec
cmp
push
and
pop
sub
rcrl
adc
mov
iret
shrl
fisubs
aaa
push
roll
sahf
pop
jns
cmpsb
aas
scas
xchg
mov
lds
lock
add
and
jg
dec
mov
cmpsb
dec
inc
inc
es
jb
jecxz
xor
aas
cmp
je
xchg
sub
mov
les
cmp
les
into
insb
fwait
xchg
fs
stos
ja
iret
add
lret
out
clc
sub
repz
xor
jle
add
pop
pop
push
cld
movsl
lds
pushf
test
add
sub
data16
sahf
mov
lods
jl
pop
push
jae
fidivs
sbb
aad
cmp
mov
adcl
aad
jbe
ja
loope
sbb
rcrl
cmpl
xchg
neg
push
or
fistl
add
xchg
jmp
mov
add
sbbl
mov
rclb
lahf
movsl
pop
fwait
pop
movsb
cmp
cmpsb
mov
mov
arpl
popf
loopne
pop
out
jl
leave
loope
int3
test
into
jge
xchg
adc
mov
sub
enter
dec
sti
jo
filds
divb
mov
lea
outsl
pop
pop
or
nop
pop
dec
addb
outsb
in
cmp
lods
mov
xlat
imul
stos
iret
jecxz
inc
rcl
cmc
incb
push
or
sbb
subps
push
into
cld
sub
cld
mov
mov
mov
or
enter
inc
out
stc
stc
and
cld
ret
add
mov
std
popa
imul
mov
mov
call
shl
jle
movsb
das
dec
xchg
add
mov
test
xchg
js
jle
jl
push
mov
inc
iret
lret
xor
icebp
sub
sbb
xor
or
mov
pushf
dec
xchg
lods
or
add
mov
mov
sbb
stos
push
cmpsl
pop
mov
and
and
aad
dec
jb
pop
xchg
dec
fnstsw
out
cli
mov
mov
jnp
adc
dec
icebp
stos
mov
cmp
jg
fstpl
rcl
outsl
lods
push
push
in
sub
xchg
insb
xchg
dec
lahf
pop
stos
jbe
in
les
dec
lcall
mov
inc
sub
mov
out
out
mov
mov
loop
xchg
cmp
sbb
scas
xchg
add
mov
adc
jbe
lret
insb
and
adc
and
mov
cmc
xchg
cmpsl
push
xchg
push
js
lods
mov
mov
leave
and
testl
mov
ficoms
mov
mov
mov
das
inc
addr16
fsubs
pop
xchg
push
dec
stos
shll
ljmp
pushf
std
xchg
aaa
adc
stc
inc
adc
cmp
mov
out
ja
repnz
dec
loop
sbb
mov
push
stos
inc
mov
xchg
dec
push
shlb
adc
xor
js
jno
xor
inc
andb
dec
pop
or
mov
mov
sbb
or
dec
in
mov
fldenv
int3
and
sub
subb
insl
pop
inc
mov
rcl
or
cmp
out
push
add
pop
js
mov
xor
mov
pop
mov
jns
paddq
loopne
cmp
adc
int
jno
cwtl
mov
dec
sbb
xor
ss
mov
mov
data16
cmpsl
and
loop
sahf
push
dec
sbb
lds
dec
test
dec
cmp
movsl
inc
mov
fimull
les
loop
popf
fisubrl
leave
lret
push
fcomp
cmp
sbb
or
xchg
stc
mov
xor
popf
enter
movsl
pop
repnz
pop
ja
sub
or
inc
cli
aas
fmull
test
cmpsl
cmp
jp
inc
enter
sbb
push
mov
mov
pop
cmp
xor
or
mov
rol
jae
jl
not
decb
pop
inc
scas
shr
pop
xor
pop
mov
mov
mov
jle
jae
cmp
mov
dec
shlb
sub
test
sbb
mov
into
icebp
fldcw
pop
adc
insl
jno
and
or
popa
int
aas
xorl
cltd
and
sbb
test
lods
inc
lcall
xor
adc
adcl
cld
add
mov
inc
mov
pop
mov
fldt
pop
dec
arpl
push
mov
mov
pop
mov
stc
lock
pop
cmp
icebp
mov
xlat
aas
jg
mov
add
adc
clc
lcall
movsb
inc
pop
jle
fcoml
lods
pop
jg
mov
inc
mov
push
adc
mov
jne
xor
mov
sar
repz
loop
mov
sahf
nop
enter
fisubrl
call
cmp
xchg
imul
sub
sub
sbb
in
push
jb
or
lret
mov
mov
sti
int
pop
cmp
inc
cwtl
xor
mov
stos
add
push
in
mov
inc
push
adc
cld
cmp
or
mov
cmp
sahf
hlt
das
ljmp
xor
rolb
sbb
pushl
mov
and
jg
or
adc
filds
lret
aas
or
or
push
sub
push
mov
ljmp
add
inc
fbld
loop
inc
xchg
pop
ret
and
mov
push
imul
lock
pushf
sub
pop
inc
cmp
movsb
rorb
pop
sbb
dec
jo
or
nop
js
dec
pop
psubb
out
stc
xor
fsubs
aaa
shlb
mov
and
fs
xchg
push
inc
dec
imul
mov
xchg
mov
mov
out
addr16
pop
sbb
adc
ljmp
outsl
sub
push
push
xchg
out
inc
dec
insl
cwtl
push
insb
cmp
mov
or
dec
push
jb
fnstenv
mov
cwtl
cli
lods
pop
inc
xor
loopne
sbb
xlat
sti
cmp
or
or
push
stos
sarb
jl
les
and
push
fwait
and
pop
std
je
mov
pop
scas
sub
dec
inc
fisubrl
hlt
push
repnz
pop
mov
fcompl
xchg
movsl
into
push
xor
dec
mov
sub
in
sub
or
loop
jno
sub
out
pop
push
pushf
and
int3
lea
rcrb
mov
mov
movsb
frstor
ds
negl
pop
inc
imul
mov
clc
adc
and
gs
mov
adc
push
cwtl
push
xorl
pushf
mov
leave
jo
or
aaa
repnz
fistpll
xor
iret
imul
lds
pcmpeqb
std
mov
cmp
adc
mov
dec
sbb
inc
ljmp
fcoml
push
mov
out
mov
pushf
in
or
push
mov
sbb
xchg
cli
and
insl
inc
rorb
pop
hlt
rolb
push
mov
mov
out
dec
lcall
mov
push
pushf
xor
hlt
cmp
jmp
subb
sbb
and
dec
je
cmp
movsb
call
mov
or
jg
pop
pop
addb
stos
fstpt
xchg
scas
sub
out
in
mov
add
imul
cmc
addb
pop
cld
scas
in
mov
cmp
subl
inc
xchg
add
fcoms
push
rolb
int3
and
call
cmp
repnz
and
les
sub
or
adc
inc
fistpl
xor
sub
or
rolb
and
push
jg
add
jbe
mov
aad
div
iret
dec
rorl
pop
dec
push
mov
inc
cmpsb
incb
adc
repnz
loopne
daa
lea
add
mov
mov
pusha
push
mov
out
push
roll
outsl
jne
add
mov
popf
sub
pop
push
in
icebp
test
push
ret
out
xor
adc
aas
sbb
out
jne
sbb
mov
sub
ret
in
inc
xor
xchg
orl
inc
cli
xchg
call
adcl
mov
mov
cs
mov
movsb
push
lahf
push
cli
and
loop
stos
adc
inc
xor
cld
sub
mov
mov
sbb
testl
sub
data16
adc
fucomi
mov
xchg
add
sbb
lret
mov
add
leave
or
pop
faddl
jns
xchg
imul
icebp
sahf
in
andb
rorb
add
and
repz
push
enter
and
dec
mov
bound
fsubs
pop
and
mov
subl
cmp
lods
jmp
mov
and
dec
pop
push
push
mov
push
mov
flds
and
and
pop
pop
fwait
dec
xor
pop
lds
shlb
add
ret
orl
out
mov
push
mov
scas
add
inc
sbb
hlt
iret
loope
mov
or
and
movsl
mov
loope
and
lahf
mov
stos
mov
pop
jg
inc
dec
call
mov
mov
mov
movsl
push
add
xchg
xchg
pop
movsb
xchg
pop
xlat
push
or
and
fnstsw
fisttpl
mov
addr16
inc
out
stc
inc
or
mov
int3
cmp
ds
iret
cmp
cmpsb
fwait
xor
popa
pop
mov
inc
int3
inc
mov
push
push
hlt
adc
and
pop
push
in
int
pop
rorb
xchg
xor
mov
sbb
adc
xchg
xchg
add
imul
fstps
adc
mov
xor
aam
out
mov
jmp
test
pushf
inc
cli
cmp
jno
xchg
jle
into
scas
fcomi
shlb
sbb
add
push
test
mov
imul
add
mov
mov
mov
push
sbb
mov
xchg
dec
inc
xchg
dec
and
in
push
add
fldenv
gs
push
push
mov
push
pop
sti
daa
dec
movsl
imul
mov
xchg
push
inc
test
xchg
mov
or
push
mull
stc
jno
idivl
mov
jmp
cs
into
jne
sub
mov
cmp
je
movsb
mov
outsl
je,pn
fiadds
mov
popa
jge
adc
sbb
adc
adc
decb
mov
les
pop
sbb
adc
cmp
add
loopne
cli
test
add
fldenv
or
lcall
ficompl
or
push
fs
add
xchg
mov
fsubrp
sub
divl
pop
pop
frstor
sub
scas
gs
nop
mov
je
xor
mov
cmp
cmp
pop
jbe
mov
or
jb
mov
ret
in
and
ret
inc
dec
aaa
adc
and
dec
jecxz
mov
mov
or
or
fcmovnbe
enter
scas
je
or
test
std
xor
stos
loopne
xchg
or
repnz
inc
cmp
hlt
lahf
sbb
pop
dec
xor
add
xor
pop
pop
mov
pop
and
or
in
adc
mov
mov
stos
arpl
mov
mov
cwtl
adc
push
mov
popf
jne
inc
addr16
hlt
mov
push
pop
push
adc
lcall
mov
fisttpl
dec
inc
das
fistps
mov
mov
dec
push
mov
mov
ljmp
scas
mov
add
pusha
ret
add
adc
xchg
sti
and
mov
iret
lahf
pop
and
push
mov
mov
subb
pushf
sub
jge
in
mov
and
js
mov
cmpsl
jnp
sub
mov
jno
inc
jb
xchg
adc
popf
in
movsb
les
testl
pop
ret
jno
mov
pushf
rorl
popf
sbb
out
je
jl
mov
movsb
pop
repnz
call
icebp
fcmovnu
cmp
cltd
push
lea
pop
cltd
mov
xlat
std
sub
stos
mov
push
sahf
jbe
mov
and
and
xchg
stos
push
fidivrs
mov
mov
push
xchg
push
fcmovu
and
ret
popa
leave
in
mov
sub
std
mov
lcall
wbinvd
orl
sbb
dec
mov
mov
push
scas
out
icebp
and
pop
clc
fcmovb
adc
ljmp
mov
fisubrl
push
sbb
icebp
daa
lods
imul
sub
cmpsl
pop
scas
push
ss
data16
push
mov
sbb
adc
pop
push
ret
mov
and
int3
cmp
sarb
xchg
movl
sarb
pop
mov
cmpsl
sbb
cmp
sbb
mov
fwait
xchg
scas
cwtl
push
lret
cs
or
jo
sbb
aad
cmpsl
cmp
or
xor
adc
push
popa
mov
test
pop
xor
lea
push
inc
xchg
outsl
sbb
and
pop
add
in
call
nop
fcmovu
outsb
in
pop
pushf
repnz
in
enter
jp
pop
add
pop
addr16
aaa
int
inc
cs
incb
icebp
add
or
aaa
push
jae
loope
push
out
outsl
stc
push
movsl
sub
lods
jbe
xor
lret
sbb
sub
push
xor
movsb
cli
mov
test
inc
and
or
jae
pop
enter
sub
std
mov
mov
fs
lfs
in
mov
add
add
jb
inc
or
mov
fwait
add
adc
rclb
aas
and
addr16
stos
out
les
mov
aam
out
mov
nop
imul
lea
or
lods
outsb
sbb
cmp
leave
jo
cmp
push
dec
es
fcomi
repnz
cmp
cli
emms
add
cwtl
je
call
xchg
jno
sbb
loop
pop
adc
nop
in
and
pop
inc
xchg
lea
fwait
or
inc
jns
jp
pop
lret
mov
fsubr
test
jns
repnz
dec
inc
add
andl
imul
adc
inc
add
inc
xor
cmp
push
xchg
mov
icebp
mov
gs
push
xchg
fbstp
call
adc
and
inc
or
xchg
mov
orl
dec
addr16
sub
xor
inc
aas
or
adc
ffree
mov
jl
popf
loop
das
lahf
es
xchg
lcall
fadd
fwait
loopne
lcall
xor
cmp
add
inc
daa
gs
loope
jmp
jle
lcall
mov
and
push
and
movsl
sbb
aas
mov
imul
push
or
pusha
sub
test
test
adc
es
es
hlt
out
stos
sub
jle
pop
andl
stc
xchg
xor
sbb
sti
ds
jnp
test
popf
ljmp
imul
daa
fistpll
shlb
sbb
pop
addl
xor
shl
sahf
aad
pop
repz
cmp
push
adc
mov
or
or
cld
repnz
xchg
int
inc
add
addr16
jb
lret
dec
shufps
je
jnp
lock
xor
test
mov
xor
gs
jb
mov
push
pxor
aad
rcrl
fsubrl
std
loop
cwtl
daa
sbb
add
cmpsb
dec
std
rcrb
push
xor
pop
mov
jle
push
ficoml
push
cmpsl
xchg
aas
xchg
ljmp
pop
push
in
ret
mov
mov
frstor
sbb
aaa
push
arpl
loop
dec
xchg
inc
push
mov
sbb
stos
xor
test
inc
mov
or
add
or
imul
add
roll
fsubl
pop
inc
lds
sbb
add
sahf
fdivp
sbb
cmp
sbb
mov
imul
cmc
jmp
jno
iret
pop
aad
add
out
pop
adc
inc
jl
imul
sbb
cwtl
jg
imul
sbb
push
lret
ja
addr16
in
mov
outsb
xor
fnstsw
cwtl
mov
or
add
add
mov
jle
mov
xchg
adc
jg
das
je
cmp
mov
subl
ret
cmpsl
mov
sbb
nop
roll
mov
or
scas
les
push
or
lds
mov
xchg
lret
arpl
addr16
pop
popf
ss
addb
sahf
inc
or
mov
xchg
fldenv
push
pop
in
or
into
sub
or
xchg
sub
and
cmc
inc
in
cmpl
xchg
std
stos
push
xchg
das
pushf
push
leave
xchg
in
or
push
pop
mov
xchg
daa
xor
push
push
imul
mov
fsubl
mov
jmp
cwtl
pop
repnz
mov
fcmovne
repnz
rorb
repz
loop
pop
aad
pushf
fidivrl
cs
out
aaa
jmp
and
pop
and
inc
mov
sbb
cmp
jge
scas
shlb
outsb
rol
xor
and
cli
inc
or
dec
in
into
mov
jg
and
cwtl
or
imul
mov
cmp
sbb
mov
xor
out
in
add
adc
mov
fwait
nop
sbb
mov
jl
xchg
hlt
jns
out
bound
cli
and
daa
dec
ret
sub
xchg
cwtl
push
xlat
aad
pop
mov
popa
xor
js
mov
scas
jmp
xor
add
hlt
imul
mov
inc
rolb
lcall
add
inc
fwait
loope
rcrb
clc
push
fs
shlb
or
add
dec
addr16
mov
int3
jo
dec
pop
jp
aas
cmc
insl
sub
push
add
or
or
mov
ljmp
bound
sbb
test
or
xor
jne
xor
shlb
ja
in
cmp
pop
call
idivb
testb
xchg
dec
stos
xor
outsb
sub
out
or
faddp
arpl
mov
mov
sub
fwait
rcrb
loopne
add
dec
into
and
popf
or
pusha
mov
sub
xor
aas
call
nop
adc
ss
out
dec
mov
pop
call
cld
cmp
mov
sbb
push
int
push
jae
add
out
bnd
out
imull
jb
int
insl
call
orl
mov
inc
or
push
sub
ret
stos
aam
insl
in
adc
mov
lret
add
or
mov
mov
xchg
mov
daa
dec
pop
stc
push
test
cmc
bound
lret
xchg
iret
xchg
icebp
mov
jl
or
mov
inc
call
push
icebp
adc
mov
add
xchg
lods
fsubrs
mov
sti
sub
jne
fcmovb
idiv
mov
add
out
adcb
pop
fsts
mov
aas
jbe
cmp
xlat
cs
xlat
sbb
fwait
notb
sbb
add
mov
inc
add
adc
mov
enter
sbb
xor
clc
cmpsl
negb
stos
bound
sbb
es
jns
pop
sub
xchg
shlb
push
gs
sarl
jmp
hlt
les
icebp
shrl
fadds
repz
decb
push
orb
imul
xlat
push
imul
out
lods
loop
pusha
cmp
out
and
sub
in
sub
push
sbb
sbb
cmpl
aam
shrl
cwtd
push
inc
push
lods
imul
sub
enter
subb
arpl
sbb
movsb
pop
sub
mov
ds
jecxz
pop
xor
lret
sbb
push
dec
test
or
mov
mov
pop
or
xchg
aam
xchg
xchg
jmp
ficoms
aaa
in
xorb
mov
fidivs
iret
add
xor
push
scas
xchg
stos
cli
xchg
cmpsl
cmp
mov
outsb
fldl
gs
push
notl
hlt
mov
cmpsl
clc
xchg
dec
dec
aaa
xchg
mov
mov
pop
xor
inc
cmp
in
orps
push
jmp
jl
rcrl
ret
mov
or
xchg
pop
ja
fs
jns
xchg
adc
mov
pop
inc
mov
dec
ljmp
arpl
mov
mov
cld
loope
into
mov
inc
jmp
fmuls
fnsave
js
xchg
push
imul
or
jno
mov
pushf
je
movsb
sub
cmp
or
lret
add
adc
fld
sbb
int3
adc
fnstsw
test
test
outsb
xlat
mov
stos
lods
popf
insl
xchg
stos
jb
pushf
inc
pop
xchg
in
pushf
addr16
aaa
and
mov
addr16
jmp
in
repz
outsl
gs
sub
sub
mov
dec
and
enter
jno
push
xchg
ss
pop
pop
lret
xor
aad
ljmp
mov
nop
and
adc
popa
mov
push
xor
es
push
xchg
lock
cld
out
aaa
mov
pop
and
push
jo
jmp
aam
jmp
fnstsw
xlat
repnz
push
les
js
mov
shrb
clc
sub
inc
jbe,pt
dec
cmpb
sub
cs
mov
dec
inc
fs
jmp
inc
mov
add
out
sbb
std
cmp
pop
pop
mov
mov
jmp
pusha
mov
mov
adc
jnp
imul
mov
test
cmp
push
jnp
inc
pop
inc
loop
repnz
jl
and
inc
mov
call
sub
ficoms
xchg
data16
fsubr
sbb
adc
adc
sbb
cmc
add
lea
fcoml
test
mov
or
les
jle
pop
jns
mov
wrmsr
sahf
sbb
mov
fcmovne
dec
lods
xchg
ret
xchg
adc
ss
jbe
cmc
add
lret
ds
sub
dec
fs
test
adc
popa
mov
jp
addr16
inc
out
dec
adc
add
dec
jecxz
lock
cld
mov
fisubrs
in
pop
pushf
pop
fildll
in
inc
sti
loop
inc
xchg
lock
repz
xchg
shr
push
mov
pop
and
adc
icebp
bound
adc
gs
push
mov
cmpsb
les
in
add
pusha
fwait
add
rol
test
mov
imul
push
sbb
mov
push
scas
test
jo
iret
imul
test
jns
es
addb
xchg
bound
out
clc
pushl
inc
or
outsb
mov
mov
daa
jmp
lret
push
aaa
cmp
lods
lahf
scas
ljmp
pop
and
jmp
sti
arpl
push
iret
push
xor
push
inc
ret
dec
fdivrs
rep
lods
jb
jle
repz
scas
ret
jl
add
jp
jo
push
push
and
in
cmp
and
jbe
add
dec
pop
shl
or
mov
xchg
cmpsb
je
pop
or
pop
or
dec
decl
mov
adc
xchg
addb
pop
sti
adc
sub
push
or
das
push
adc
add
mov
cmp
aaa
or
inc
cmc
ljmp
add
dec
jg
dec
sub
rorl
and
lea
cmp
stc
in
stc
repz
lret
pop
in
xor
aam
mov
mov
xchg
call
add
sbb
push
dec
gs
mov
or
jne
push
out
rol
jb
xor
xchg
dec
lahf
jg
sar
fistps
ficoms
test
cli
fs
aas
adc
jae
adc
pop
cmc
mov
mov
mov
pop
xchg
dec
incl
bound
imul
bound
int3
dec
pusha
insb
incl
pop
cmp
inc
push
xchg
xlat
mov
xor
fwait
mov
es
dec
imul
xchg
adc
mov
and
rorl
inc
ja
lahf
sub
pop
loopne,pn
mov
fcmovb
mov
into
mov
mov
inc
fisttpll
pop
sti
ds
out
or
push
ljmp
pop
fwait
bound
sti
rcrb
xchg
adc
call
jnp
jns
lahf
sbb
or
orl
clc
aad
dec
ja
test
dec
test
or
jl
into
cmp
push
inc
ss
lahf
mov
popa
ret
fs
rcrb
fnstcw
orb
and
icebp
jecxz
mov
int
add
cld
addl
insb
cmc
int3
test
xchg
fwait
sbb
pop
mov
lret
xchg
adc
sbb
js
push
xor
mov
xor
jne
sub
idivb
xchg
addl
lds
stos
repz
into
pop
aas
cmpsl
daa
mov
jmp
stc
push
loopne
mov
fsubrs
push
xchg
push
sbb
out
or
xor
outsb
notl
pop
jecxz
sub
pushf
jno
pop
nop
add
fistpll
aaa
imul
subl
popa
jmp
popa
jg
push
mov
cmpb
mul
pusha
arpl
inc
call
out
inc
ljmp
inc
jecxz
dec
jge
dec
push
cs
test
in
mov
adc
or
pop
mov
mov
inc
aad
aas
cmp
fisubl
rcrb
out
orb
cmp
cmp
int
cwtl
addr16
dec
repz
push
sbb
sub
sbb
imull
bound
les
or
and
sub
out
lcall
pop
aas
popf
lds
push
insl
sub
shll
adc
inc
or
rcl
lret
push
dec
sbb
adc
mov
add
add
aad
sahf
outsl
or
andb
or
pop
lret
cmp
mov
adc
rolb
mov
and
or
pop
arpl
out
fwait
cmp
xlat
sarl
pusha
inc
ja
fdivl
lcall
push
cmp
data16
or
ret
addr16
dec
dec
fsubp
inc
xchg
or
sub
xchg
ret
push
repz
mov
sub
jno
into
mov
fdivl
xor
and
popf
repnz
jo
int3
cmp
shll
push
jle
test
das
orl
adc
nop
push
shll
and
sahf
jl
lcall
sub
jecxz
int
incl
fstpt
push
test
repz
mov
xor
push
push
gs
sub
sahf
fimuls
lcall
dec
xorb
xor
daa
jnp
and
sub
jle
rorl
mov
lcall
test
clc
testb
xchg
sbb
movsl
lret
and
sub
idivb
and
fs
mov
out
ret
mov
nop
push
mov
ja
shrl
pusha
xchg
test
and
js
sbb
mov
sbb
mov
std
stc
insb
jg
cmc
loopne
xchg
fwait
dec
pop
push
pop
je
push
or
aaa
int
js
loope
sub
mov
adc
scas
test
or
mov
xor
in
mov
fdivrl
or
je
lret
rcl
shrl
xchg
iret
lds
pop
out
sarb
cmp
push
mov
movsb
fimull
cmp
mov
in
mov
mov
movsb
test
push
mov
rol
repz
inc
jae
cmp
in
mov
or
nop
sbbb
daa
add
or
jb
mov
sbb
imul
add
pop
pop
xchg
xchg
xchg
imul
out
push
mov
test
stos
mov
addr16
dec
imul
mov
mov
addb
call
fidivl
call
mov
jmp
add
cmpsb
xchg
fistpll
xchg
sbb
sub
sahf
and
mov
jle
push
pop
sbb
faddl
clc
and
js
pop
fsubrs
mov
cmp
hlt
mov
pop
pop
jle
rorb
sub
vpmaxsw
in
and
pop
sbb
sti
pop
xor
push
or
sbb
push
push
divl
jp
pop
int3
dec
lahf
cmp
inc
add
outsb
push
mov
arpl
inc
out
in
jae
call
and
jmp
jb
das
lods
stos
repz
sbb
mov
cs
mov
add
sbb
xorb
test
cmpsl
in
mov
mov
dec
cltd
and
mov
inc
nop
subb
out
mov
and
mov
rclb
push
mov
dec
sbb
cvtps2pd
cld
mov
push
mov
bound
mov
das
pop
shrl
sbb
push
xchg
xor
or
andb
mov
loope
push
cli
mov
sahf
push
jnp
lds
xchg
or
sub
lahf
fldenv
push
sarb
jno
cmpsl
sub
pop
xor
mov
pop
jmp
xor
into
jbe
cwtl
cmp
push
in
pop
hlt
push
movsb
lahf
xchg
inc
mov
inc
sbb
iret
psubusw
mov
push
xchg
loope
mov
addl
jp
xchg
or
in
dec
pop
push
pop
mov
lret
cli
out
lahf
insl
sbb
lret
sar
stos
out
xchg
mov
clc
mov
adc
js
or
push
mov
xor
xchg
pop
clc
in
fs
jo
push
rcll
mov
mov
test
sbb
inc
add
mov
mov
in
shrl
and
sub
sub
mov
stos
push
fsts
jle
lock
mov
mov
sbb
mov
and
pop
std
inc
negl
add
mov
lock
inc
mov
mov
sub
xchg
pop
stos
dec
or
mov
mov
ljmp
ljmp
fcoms
pop
xchg
add
fbld
std
mov
stc
or
cwtl
cmp
or
call
xchg
push
mov
mov
cli
leave
mov
fcoms
ret
mov
jo
int
push
pop
jp
push
add
pop
xor
in
adcb
pop
push
call
lcall
or
dec
pop
cmp
sti
xchg
lods
mov
sub
cmp
test
les
cmp
mov
aad
xchg
xchg
rcl
lods
sarb
popf
add
mov
div
lods
ret
mov
pop
mov
lea
sbb
incb
sbb
pop
loope
inc
fbstp
or
add
lahf
and
and
pop
inc
mov
push
in
xchg
sbb
sbb
fcmovb
cld
dec
cwtl
fsts
shll
nop
sub
and
into
inc
adc
jecxz
scas
testl
sub
sbb
and
add
pop
icebp
fs
adcb
aad
sbb
or
push
aam
adc
ds
rorb
fidivs
and
sub
loopne
or
in
sbb
cmpsb
ds
outsb
and
sub
add
add
out
cmp
fldl
pop
cmp
mov
insl
daa
testl
out
dec
cmpsl
leave
lock
jle
pop
and
insl
roll
sbb
enter
test
add
push
dec
xchg
movsl
mov
dec
imul
xchg
pop
and
adc
sbb
push
loopne
cmp
out
inc
ja
mov
negb
jecxz
addr16
sbb
and
das
cmpsb
outsl
mov
mov
in
mov
adc
xor
sub
clc
bsf
pop
push
inc
int3
mov
cltd
xchg
jb
mov
pop
mov
push
rcr
mov
sbb
add
bsf
ret
push
jle
imul
mov
cwtl
mov
xor
inc
dec
inc
push
xchg
movsb
inc
jg
aad
lcall
ljmp
mov
and
fs
neg
add
mov
cmp
outsb
or
wbinvd
jbe
in
fwait
mov
mov
aam
mov
add
aam
or
les
inc
sahf
sar
jno
jb
hlt
adc
inc
repz
adcb
adc
testw
incl
adc
cwtl
and
loopne
push
xchg
dec
aaa
mov
je
out
or
daa
mov
in
jl
and
cmp
imull
xor
xchg
sub
js
stos
mov
pop
pop
in
jg
cwtl
movl
pop
stc
and
sbb
stos
xchg
clc
out
int3
rorb
decb
and
stos
inc
push
dec
dec
out
scas
jb
js,pt
imul
mov
cmpsl
adc
adc
adc
iret
arpl
jae
into
sub
es
popa
cmp
lea
mov
scas
daa
fsubp
insb
pop
fwait
in
cld
call
insl
jecxz
mov
in
enter
cmp
notb
jp
jecxz
mov
lods
je
popf
push
stc
mov
lds
movsb
push
les
leave
fwait
xchg
push
xchg
nop
es
pop
sbbl
lret
mov
xor
out
into
gs
adc
sbb
aad
hlt
and
or
adc
dec
xchg
jp
ret
fnstenv
je
jbe
xchg
sbb
inc
jmp
xchg
mov
dec
push
and
stos
scas
shrb
lret
and
cld
fmull
inc
and
imul
inc
jbe
ds
subb
or
insl
push
clc
mov
test
stc
ja
mov
jbe
cmpsb
sub
cmpsb
lods
jle
mov
sbb
sbb
sub
fldcw
xor
push
sbb
mov
iret
adc
repnz
inc
in
xor
jecxz
jmp
mov
mov
lock
adc
dec
out
push
cmpsl
or
mov
fadd
jo
xchg
in
cwtl
xchg
popf
pop
stc
xor
sbb
stos
or
call
cld
movsb
cmp
mov
aas
inc
xor
xchg
pop
cltd
cmp
iret
sahf
sti
sub
adc
mov
enter
mov
movsl
lock
xchg
in
jne
pop
xchg
jns
sub
fmuls
test
rcr
sbb
cwtl
inc
ja
call
into
and
adc
js
push
pop
int3
out
rcl
cld
negl
aaa
xchg
ljmp
lds
lds
icebp
sbb
nop
loopne
dec
insl
jmp
sub
mov
cmp
mov
leave
jb
loope
pop
pusha
shl
xchg
mov
dec
mov
lock
aas
mov
fnstenv
cmp
hlt
ret
rorb
dec
addr16
in
xchg
and
dec
and
pop
lret
int3
stos
cltd
xor
mov
and
test
mov
push
test
mov
aaa
jp
or
aam
and
and
push
adc
or
test
xchg
pop
gs
mov
std
mov
jl
lret
test
mov
or
xchg
ljmp
mov
dec
std
cmp
cmp
sub
add
xor
inc
iret
mov
jmp
xlat
bound
xor
dec
mov
xor
cld
add
mov
mov
pop
fcompl
out
out
aas
lea
jbe
lret
and
iret
lock
sbb
stos
js
xchg
dec
dec
lcall
add
push
fdivrp
pop
jno
push
test
mov
rcll
and
lret
mov
rcrb
ret
lret
outsl
push
inc
cmpsl
xchg
or
adc
jecxz
outsl
ficomps
lahf
push
repnz
xchg
sbb
insl
lea
xchg
pop
loop
lods
mov
xchg
leave
jbe
mov
pusha
jge
inc
mov
jb
roll
and
hlt
call
xchg
cmp
push
pop
xchg
pop
and
jmp
ljmp
lods
push
and
daa
cld
jl
mov
and
in
stc
push
add
xchg
or
cmp
push
adc
xchg
pop
sbb
xchg
mov
jl
mov
das
mov
xchg
dec
addr16
xchg
xlat
imul
xchg
xchg
xor
imul
clc
sahf
jno
jno
lods
arpl
clc
sub
mov
jb
out
out
xchg
imul
dec
fidivrs
ret
inc
xchg
lret
stos
popa
and
lea
xchg
jnp
pop
push
pop
add
sub
cltd
mov
xchg
les
lock
pop
ret
sub
jg
test
xor
andl
popa
insb
popa
dec
push
pusha
aad
xchg
fcmovb
pop
int3
push
inc
adc
push
imul
scas
int
cmpsl
jbe
pop
adc
mov
sbb
dec
pop
or
fisubrs
mov
daa
and
out
int
add
lods
aaa
push
xor
test
adc
jbe
mov
mov
in
es
std
lret
jns
push
mov
jmp
mov
mov
loopne
mov
jle
add
sub
inc
inc
lret
xor
dec
cmpsl
in
ss
ss
ret
std
jg
gs
incb
push
add
andl
xchg
xor
jmp
mov
xor
jp
fsts
and
into
in
cmpsb
scas
loopne
mov
dec
sub
scas
lret
jg
mov
mov
fwait
push
shrl
jp
push
int
cld
sbb
aas
push
movsb
push
testl
dec
xchg
mov
xchg
dec
std
dec
scas
push
iret
or
movsl
sbb
aas
and
adc
fsubrs
inc
mov
lods
sub
jno
sbbb
adc
or
test
fdivl
xor
add
movsb
sti
lods
mov
inc
nop
fcomp
sub
sbb
mov
sar
dec
mov
cwtl
rorl
stc
mov
pop
push
addr16
dec
lock
stc
pop
adc
arpl
pop
cwtl
rsqrtps
jnp
rcll
out
mov
aas
faddl
lods
xchg
int
std
jg
inc
and
stos
popf
loop
mov
pusha
das
insb
jae
addl
mov
das
sub
xlat
fldcw
inc
rcrb
push
sbb
mov
mov
jns
aas
jo
or
jmp
adc
pop
pop
outsl
and
add
pop
mov
seto
repz
mov
inc
dec
xchg
rcrl
dec
test
and
push
lods
inc
inc
sub
inc
inc
testl
mov
or
sub
xchg
dec
cmp
mov
into
dec
add
lahf
mov
dec
jl
jne
in
jne
jmp
in
adc
incl
sbb
adcb
testb
repnz
push
push
stos
stos
sbb
jno
push
dec
jmp
icebp
cld
jle
and
int3
and
add
sbb
popaw
dec
inc
or
mov
xchg
in
xchg
pop
ds
lcall
icebp
mull
add
cmp
outsl
xor
movsl
jo
mov
ljmp
mov
pop
cmpsl
sbb
addr16
cmovl
test
xchg
fnsave
stos
jg
inc
pop
filds
mov
ds
cs
jmp
dec
jg
ss
jg
push
adcb
xor
mov
das
scas
sbb
cmpsl
dec
or
out
lahf
pop
mov
fsubs
mov
pop
or
repnz
cmp
mov
loop
cli
ret
movsb
sbb
clc
push
mov
mov
inc
lea
or
popf
add
lds
pop
shrl
les
pop
mov
adc
pop
das
sub
enter
ret
push
insb
mov
dec
inc
gs
jo
inc
leave
push
push
lahf
in
cmp
cltd
fcmovnbe
xchg
rcr
je
addb
pop
pop
xchg
cli
pop
jp
in
push
mov
xor
cmp
xorb
repnz
mov
jb
or
clc
les
cltd
icebp
cwtl
ficomps
std
nop
and
adc
or
imul
aas
push
cli
mov
into
push
or
xchg
xchg
push
scas
das
or
lods
xor
xor
js
push
inc
push
lock
out
sbb
jnp
ret
cmpsl
mov
incb
aam
adc
mov
push
or
cmc
inc
or
ret
pop
push
fstpt
sahf
in
cmpsb
les
lcall
sbbb
es
sbb
or
bound
ss
cld
lret
jns
cmp
imul
inc
jb
clc
aad
sbb
jnp
pop
cs
lods
iret
add
dec
movsl
pop
xor
rcrl
cmc
pop
out
add
scas
lret
into
scas
cs
arpl
insl
mov
mov
adc
mov
sub
repnz
xor
mov
mov
push
or
hlt
das
and
inc
into
sub
sub
lock
sahf
enter
dec
jle
jbe
jecxz
xor
inc
push
jne
sbb
jns
stos
and
iret
das
in
test
xor
fsubs
xchg
lods
xchg
push
dec
sbb
mov
push
push
enter
push
pop
cmp
and
mov
inc
imul
mov
add
daa
movsb
and
sbb
in
sub
outsb
into
sub
and
push
sbb
mov
cmp
dec
jle
mov
pop
xor
and
vpermil2ps
dec
fldl
lods
or
int3
push
in
call
ficomps
aad
xchg
sub
jg
cmp
and
adc
mov
inc
sub
out
mov
push
leave
dec
imul
adc
movsb
sti
mov
pop
jg
clc
push
pop
jmp
inc
decl
loopne
ss
ret
sub
icebp
sub
mov
mov
movsb
popf
sub
and
decl
xchg
jne
jae
inc
btr
mov
mov
pop
cmp
test
dec
rcl
push
shlb
lods
or
ja
leave
mov
jmp
add
push
jle
xlat
sbb
inc
icebp
shrl
mov
daa
dec
cvtps2pd
icebp
adc
addr16
and
dec
lcall
pushf
dec
repz
fidivs
pop
dec
xchg
bnd
cmp
in
jno
dec
fdivrl
mov
stos
jne
leave
adc
and
or
push
into
sbb
js
adc
test
inc
add
outsb
das
int3
sbb
into
ficomps
add
pop
jge
mov
addb
mov
pop
dec
or
and
sub
fs
int
add
ja
or
dec
or
xor
aam
stc
push
int3
std
out
jle
orl
in
pop
mov
jmp
dec
xchg
jp
xchg
es
fisubrl
sbb
mov
mov
push
insl
lahf
push
jbe
aam
mov
int
icebp
aas
sbb
add
outsb
sub
jecxz
and
cmp
xchg
jg
stos
push
adc
mov
movsl
movsb
mov
pusha
inc
xchg
mov
pop
pop
push
adc
ds
lahf
lret
ret
out
mov
dec
mov
outsb
lds
lods
mov
cmp
push
mov
test
sub
fiadds
inc
pop
cwtl
jle
pop
sahf
add
insl
pop
add
mov
cmpsl
or
repz
cmp
xchg
sbb
fdiv
dec
ds
dec
xchg
dec
shlb
sub
push
inc
es
dec
sbb
vpandn
mov
cmp
stos
jbe
mov
mov
push
mov
cmpsb
test
inc
sub
in
xchg
roll
scas
sub
sub
mov
lea
fwait
movsl
ds
inc
aaa
ret
jl
dec
sbb
xlat
mov
jge
ret
fisubrs
xchg
jns
int
std
orb
shll
aas
aad
icebp
mov
lds
test
and
sahf
inc
pop
incl
cmp
rcll
arpl
clc
xor
mov
mov
pop
cli
movsl
xchg
sahf
idivb
shlb
stos
push
sub
loope
jno
xchg
out
inc
ret
jo,pn
mov
mov
pop
push
or
out
scas
mov
shl
dec
mov
aas
push
jle
jne
test
rol
stos
jb
inc
or
adc
mov
or
or
sbb
mov
jno
outsb
xchg
cltd
in
push
ret
outsb
mulb
add
cs
fwait
pusha
pop
loope
mov
jbe
hlt
rclb
mov
inc
aas
adc
mov
inc
push
add
jge
adc
test
pop
sub
cs
cmovp
adc
add
or
push
jmp
mov
pop
ja
stos
lods
inc
xor
mov
fcompl
jae
les
sbb
inc
inc
cltd
and
loopne
imul
outsb
inc
fildll
in
jnp
iret
lahf
xor
sbb
daa
sbb
in
jg
sub
sbb
jecxz
ret
aas
xchg
push
add
pop
or
dec
jg
addb
fcoml
fcompl
pop
sahf
clc
pusha
loopne
cs
adc
in
cs
sub
mov
pop
dec
add
imul
in
cmp
mov
adc
dec
push
jg
nop
dec
lods
pop
mov
and
dec
daa
push
jo
aad
sbb
aaa
popf
mov
fucom
mov
mov
fsts
ds
das
or
ds
add
and
sub
testl
and
cmp
test
inc
push
iret
daa
pop
pop
aas
mov
lods
jne
stos
lods
stos
adc
sbb
jb
inc
pop
xchg
les
rcrl
clc
fnstenv
and
shrl
xchg
mov
mov
mov
pop
pop
stos
mov
pop
mov
js
imul
mov
mov
cmp
lods
in
cmp
mov
pop
lds
mov
inc
dec
cmp
sbb
pop
daa
fcoml
jno
sbb
fwait
or
idivl
xchg
pop
sub
orl
push
inc
cwtl
lahf
or
dec
shll
ljmp
test
inc
inc
in
push
pop
aad
adc
dec
and
das
in
xchg
cltd
push
mov
push
repnz
imul
fwait
dec
pop
outsb
pop
pusha
mov
sbb
insb
bound
imul
sbb
rcll
pushf
je
mov
mov
push
push
icebp
push
scas
cld
test
mov
fists
or
rcrb
mov
fcoml
xor
je
xor
xchg
jmp
xchg
inc
fistl
fisubs
dec
aas
out
mov
dec
add
cld
fildl
ror
mov
inc
push
popa
xor
mov
xor
stos
lods
clc
dec
xor
lock
cmpsl
push
fs
les
push
jns
mov
pop
mov
loope
pop
popf
ja
jae
call
xor
mov
push
add
xchg
add
push
out
leave
rcl
iret
mov
push
cli
scas
sti
imul
add
or
cld
or
push
subb
popa
jl
cmc
and
scas
lcall
scas
testl
lea
in
flds
pop
mov
sub
mov
pop
into
mov
mov
bound
fistps
cli
outsl
outsb
pushf
mov
xchg
pop
jmp
sbb
pxor
mov
jp
pop
pop
push
dec
inc
mov
lret
and
push
cs
xchg
xor
sahf
repnz
mov
mov
xor
pop
in
jge
das
jp
cmc
jl
cld
out
xor
xchg
cs
int3
addr16
xchg
mov
shlb
je
mov
dec
ljmp
dec
movsb
xchg
call
adc
jle
push
sbb
mov
jp
ficoms
inc
pop
call
or
rolb
xchg
lods
push
sti
into
jnp,pn
out
add
fisttpl
xchg
fbstp
sar
xchg
mov
sub
lahf
fwait
icebp
jle
xchg
jmp
data16
or
rcl
mov
fdivrl
arpl
add
mov
test
roll
sbb
xchg
ficoml
add
adc
les
pop
jp
cmp
xchg
cli
arpl
in
lret
pop
je
mov
mov
mov
rclb
cmc
push
repz
push
in
int3
in
xor
xor
and
popf
outsl
test
sub
and
mov
cld
stc
sbb
or
cli
mov
pop
ja
outsb
stos
test
dec
out
lret
fstpt
test
mov
adcb
push
dec
std
xor
jno
jno
and
jo
mov
mov
das
in
rcrb
add
jge
xor
sub
jno
sarl
aas
pusha
pop
cmp
je
mov
jle
loope
loope
cmp
pusha
mov
mov
adc
jmp
stos
mov
mov
repnz
cli
shll
fs
xchg
push
sub
iret
mov
mov
divb
pop
sbb
clc
xor
enter
cmpsb
into
lret
bound
arpl
js
aam
push
push
jo
jb
sub
xchg
es
fs
fistl
iret
inc
into
cmp
push
lods
and
xchg
test
xchg
cmp
cltd
js
loope
jbe
adc
mov
pop
mov
cmpl
mov
fistl
jp
call
mov
sti
push
sub
scas
in
add
insb
push
orl
jbe
xor
out
lret
ret
xor
in
xchg
stos
popf
mov
cwtl
lcall
out
in
bound
cmp
ficompl
xor
or
cmpsl
clc
adc
adc
jae
inc
pop
aam
push
scas
repz
mov
imul
sti
xchg
inc
sbb
out
in
popf
lds
mov
js
xor
insb
mov
push
imul
mov
mov
jg
jmp
cmpsb
jmp
imul
popa
jnp
push
xor
cmpb
jae
sbb
xchg
mulb
vpsubw
sub
sub
icebp
mov
dec
icebp
push
leave
mov
add
inc
push
pop
fsubl
push
iret
cmp
iret
inc
sub
pushf
mov
mov
scas
hlt
xchg
fmull
xor
cli
push
xor
fld
lods
push
dec
sub
xor
mov
nop
std
iret
xchg
mov
push
mov
int
jge
rclb
cmp
cmpsb
imul
lret
movsl
mov
test
lret
mov
and
mov
mov
enter
popf
dec
mov
pop
sahf
movsb
pop
dec
xchg
fildll
loop
mov
mov
stos
and
daa
sahf
leave
lea
mov
and
ss
adc
gs
rclb
roll
in
lret
ss
dec
stos
xchg
and
jae
pop
push
inc
inc
je
divb
sub
push
cli
stos
cmp
out
adc
sbbb
cwtl
icebp
pop
sti
sbb
and
or
in
sbb
mov
in
and
jl
adc
push
out
mov
adc
xchg
outsl
xchg
push
fiaddl
rcr
mov
cmpsb
xchg
arpl
imul
test
mov
icebp
rol
xchg
and
or
mov
cmp
push
call
jno,pn
xorl
aad
xchg
hlt
cld
push
inc
test
pop
cs
pop
leave
test
inc
mov
daa
jbe
dec
fimuls
aas
aam
pop
call
ljmp
fisubrl
xchg
imul
pop
or
adc
mov
fdivrs
stos
mov
xchg
addb
lcall
jle
outsl
lods
ds
mov
mov
xor
faddl
push
push
popf
stc
sub
mov
jae
cld
cs
and
sbb
shll
mov
jnp
jnp,pn
mov
sub
popa
or
and
shll
pop
loopne
leave
add
sub
inc
mov
adc
push
lea
ret
sub
andb
cmp
pop
inc
lahf
loope
add
push
gs
jne
inc
lahf
loop
sub
mov
pop
add
ret
mov
xchg
mov
and
and
into
mov
test
cmp
stos
push
inc
aas
pop
sar
xchg
or
jmp
mov
inc
sbb
fs
popa
mov
cmp
cmpsl
cmp
in
sbb
xchg
and
lahf
fdivrl
jg
mov
push
push
mov
cmp
push
sbb
sbb
jbe
fistpl
xchg
and
sbb
mov
sub
fucomp
jno
mov
repnz
push
jmp
inc
dec
push
sbb
xchg
mov
roll
and
adc
arpl
and
outsl
movsl
mov
xchg
push
mov
addr16
xchg
adc
aam
ret
pop
mov
sti
adc
arpl
les
aad
psubusw
call
aam
add
stc
or
into
stc
mov
and
bound
ja
les
into
fistpll
clc
mov
lea
lret
incl
lods
mov
fadds
shlb
pop
ljmp
mov
out
jae
mov
mov
imul
or
mov
cld
pop
or
push
mov
aaa
sbb
mov
adc
ret
push
cld
mov
xchg
out
pusha
jb
cmp
icebp
enter
lea
sahf
xor
push
pusha
mov
xor
fs
inc
ja
dec
dec
xor
loopne
test
cld
enter
vpsubb
test
sahf
fistpll
push
icebp
mov
and
cwtl
les
lret
jl
iret
adc
loopne
or
pop
in
xor
mov
movsl
add
in
jg
mov
lds
inc
shlb
lahf
inc
cwtl
mov
js
or
and
pop
mov
cmp
je
arpl
or
dec
insb
sub
jne
xorl
clc
arpl
orl
pushf
mov
sbb
adc
sarl
pop
lea
pusha
adc
push
add
das
bound
rcrl
arpl
jmp
insl
mov
cmp
jo
fcom
cli
mov
xor
pop
sub
lock
mov
data16
mov
mov
movsb
popf
fsts
mov
mov
insl
in
mov
or
cmpsl
rcr
mov
mov
negl
sub
mov
pusha
sahf
imul
dec
push
pop
xchg
cmp
inc
mov
enter
fwait
lahf
mov
movsb
movsl
xchg
in
iret
dec
pop
popf
mov
mov
fcoms
pop
lret
enter
sbb
aad
stc
lea
out
sub
movsb
fldt
fucomip
fisubrl
dec
insb
mov
stos
mov
push
insl
int
mov
push
cmpb
or
iret
ljmp
or
rclb
cmp
push
fxtract
stos
mov
mov
mov
data16
cmp
push
fs
lods
cli
cs
repz
push
mov
xchg
sbb
jg
add
mov
cmp
push
adc
cmp
xor
lcall
lods
pop
pop
xchg
mov
test
add
fcomps
pop
popf
inc
ret
enter
mov
and
std
aaa
fnstcw
lods
sbb
pop
jne
adc
cmp
mov
xlat
cmpsl
js
mov
and
xor
test
sbb
stos
fstpt
pop
mov
test
xlat
push
sbb
scas
jle
scas
sbb
and
fnstsw
icebp
cmpsl
ds
mov
cmpsb
pop
loope
rorb
add
rol
cmp
mov
dec
push
mov
sbb
inc
xchg
xor
fistpl
mov
push
pop
dec
repz
enter
mov
fwait
std
nop
aaa
push
mov
xchg
jmp
or
sbb
stos
and
xor
mov
out
data16
mov
dec
das
mov
inc
dec
enter
and
xor
imul
push
inc
lock
inc
rcrl
in
adc
push
es
sbb
add
xor
cs
sub
sbb
xor
mov
inc
inc
scas
rsm
mov
insl
sahf
pop
pop
and
bswap
pop
xlat
mov
jge
sbb
jo
cwtl
fcoml
mov
jnp
mov
test
push
daa
pop
ret
mov
jge
stc
xor
jnp
jne
cmp
xchg
sbb
andb
and
mov
mov
inc
lods
lret
jne
mov
aaa
int
pop
aad
xchg
sbb
scas
push
xor
test
ljmp
lret
ljmp
shll
cmpsl
sub
and
xor
enter
xchg
jb
adcl
jbe
xlat
in
mov
mov
std
xlat
out
stc
and
stc
lret
xor
mov
ret
mov
ds
add
jno
lret
jo
out
roll
aaa
xor
push
jge
ret
out
lea
sub
pop
out
cs
push
sub
cmp
jge
jo
mov
mov
xchg
push
aam
lock
adc
fwait
es
push
aam
inc
jae
push
insb
es
or
mov
lods
fisttpl
xchg
movsl
and
scas
push
mov
lea
cwtl
push
cld
push
push
adc
xlat
push
dec
pop
jnp
pop
xchg
cmp
popf
aas
es
mov
add
leave
pop
and
inc
mov
dec
aaa
mov
fs
rclb
dec
jmp
mov
cmp
mov
insb
cmp
cld
or
call
jne
dec
dec
popl
cmp
mov
lcall
std
inc
sbb
jge
jge
mov
inc
pop
test
jge
test
mov
lahf
pushf
rolb
mov
mov
push
cmp
jg
xorb
mov
and
inc
ror
in
cmp
pushl
inc
sti
inc
add
pop
popa
dec
sbb
std
cmc
loope
adc
cli
inc
push
aam
adc
shlb
mov
ljmp
pop
fdivrs
and
icebp
in
cmp
fdivs
push
movsl
and
mov
push
loope
jno
fidivrs
mov
xchg
jo
loop
mov
add
inc
stos
shlb
pop
std
push
lret
imul
mov
xchg
dec
xchg
jnp
test
inc
xchg
mov
cmc
aaa
mov
dec
add
dec
sahf
sbb
push
roll
add
call
fisubl
testl
aaa
add
mov
cltd
mov
pop
sub
aas
jmp
xlat
push
mov
xor
les
inc
mov
lods
add
mov
das
jae
inc
mov
ret
movsl
jl
mov
mov
mov
sub
pushf
jne
stos
lock
sub
faddl
iret
mov
jb
fisubs
jne
popf
fs
sbb
les
mov
loop
cmc
outsb
aas
stos
sahf
adc
test
or
sub
cmp
cld
loop
push
sbb
lods
cltd
clc
sti
dec
notb
mov
jbe
fdivp
dec
mov
mov
into
jae
jl
in
jno
xchg
ficomps
inc
mov
icebp
jne
mov
ss
xchg
sbb
xor
jge
jle
shrb
dec
sub
cwtl
or
cmp
rcr
jmp
lea
sbb
adc
shlb
sbb
or
xchg
shlb
int3
into
gs
mov
xchg
adc
mov
pop
popa
lock
adc
mov
ja
cmp
inc
cs
and
fs
and
sbb
mov
or
jo
popf
sbb
xchg
push
mov
jmp
or
call
aad
add
push
push
dec
jns
shll
sbb
cmpsl
outsb
not
loop
mov
sbb
pop
jnp,pn
fidivrs
sbb
adc
mov
ja
stc
pop
stc
push
test
inc
and
jae
mov
adc
mov
adc
das
mov
sbb
sbb
sub
stos
decb
je
dec
or
fabs
das
inc
mov
adc
xchg
push
push
fisttpl
cmp
lea
int3
imul
clc
push
call
fwait
jnp
iret
push
leave
lds
cmp
in
mov
pop
or
pusha
pushf
mov
aam
dec
cmp
push
cwtl
fsubrs
mov
jp
push
lret
aam
push
dec
and
push
and
call
pop
cs
pop
shll
inc
adc
xchg
pop
cmp
addr16
jo
and
out
mov
pop
out
cmp
shl
cmc
sbb
out
mov
xchg
inc
add
cmp
testb
add
dec
cmp
adc
push
adc
mov
xchg
insl
dec
sub
aas
in
jb,pn
data16
in
push
push
sub
arpl
xchg
mov
cs
pop
arpl
inc
lahf
out
mov
jl
call
ja
sub
add
shll
fs
pop
add
dec
cmpsl
mov
fdivl
cwtl
out
cmp
inc
daa
mov
or
rolb
sbb
push
psubq
sbb
xchg
mov
out
pop
add
push
ret
arpl
push
lcall
pop
adc
xor
shlb
mov
adc
mov
push
mov
dec
xorl
rcl
push
adc
inc
jo
pop
pop
je
sbb
xor
push
fnstcw
fwait
scas
xor
mov
jne
cmpsb
lcall
leave
add
jbe
or
mov
sub
dec
pushf
xchg
sub
mov
lods
mov
jo
test
jl
jl
mov
adc
push
mov
fcompl
cltd
repz
fimull
lahf
mov
in
push
sub
jg
dec
repz
int3
push
push
es
in
mov
mov
add
adc
test
mov
dec
es
cli
das
xor
jne
inc
adc
fisubs
gs
inc
dec
loope
or
aas
ja
stc
mov
dec
adc
adc
xchg
cmpsl
daa
out
lds
lret
stos
cmpsl
and
call
jg
stc
cmpsb
in
inc
subb
outsb
les
add
push
jge
in
pop
test
arpl
dec
and
pop
xchg
insb
push
mov
sarl
nop
hlt
imul
out
mov
orl
xchg
cli
mov
jmp
mov
or
cli
mov
decl
and
and
lock
fldl
les
movsl
mov
arpl
or
pop
xchg
fnstcw
in
pop
cld
shll
fsubrs
xlat
movsl
cld
bndstx
nop
jmp
push
nop
leave
jbe
cmp
push
mov
aad
cmpb
dec
mov
push
and
arpl
or
inc
push
dec
cli
aaa
cmc
mov
scas
jp
mov
pushf
add
adc
xor
fists
stos
mov
inc
cmp
adc
push
sahf
arpl
pop
inc
and
jmp
mov
shl
adc
inc
mov
mov
aaa
call
push
int3
jecxz
jle
cltd
or
les
jmp
mov
shl
in
inc
clc
mov
pop
inc
js
aad
popa
rcll
mov
xchg
adc
jnp
push
dec
sbb
pushf
sub
xchg
mov
mov
insb
les
rcrl
stc
cmp
push
mov
jbe
mov
ret
fildll
xchg
sarl
jp
cli
daa
adc
mov
fs
and
nop
iret
push
out
sub
xor
in
push
jbe
sbb
mov
in
jmp
call
movsl
cmpsb
loope
scas
or
and
jns
inc
inc
stos
hlt
sbb
ficoml
push
pusha
or
lret
mov
ljmp
xchg
add
inc
popf
stos
ror
outsl
ror
and
dec
shlb
out
stos
repz
insl
popf
mov
lods
or
push
int3
popa
in
push
and
mov
pop
rcr
bound
fsubs
pop
insb
add
sub
xor
jge
ficomps
scas
les
mov
adc
pop
popa
mov
lret
jp
cmpsl
imul
and
xor
xor
and
out
jl
inc
xchg
sti
enter
out
stos
adc
push
xchg
dec
std
je
sbb
xchg
nop
xchg
add
in
ret
add
mov
mov
mov
xchg
dec
inc
faddp
xchg
mov
jp
std
movl
inc
cs
lods
addb
lock
es
dec
sub
xor
sbb
ror
or
jp
test
movsl
jnp
test
cmp
movsb
fistpll
int
mov
ja
sti
cmp
dec
rclb
mov
pop
adc
mov
pop
or
push
pop
pop
sbb
mov
push
call
jne
or
dec
mov
filds
pop
add
jecxz
rorl
push
andb
scas
adc
outsb
cmc
test
es
inc
mov
adc
or
push
jmp
mov
loopne
push
lods
cmp
aad
xchg
shlb
pop
push
cmpl
dec
aas
push
cmpsl
ds
dec
repnz
mov
xorl
push
call
aaa
mov
ficomps
scas
and
lret
mov
es
loopne
mov
cmp
fisubs
lret
sbb
js
lds
fisubl
call
add
loopne
mov
pop
jle
aam
sbb
cs
push
cmp
cmp
add
mov
das
lret
sbb
rcrb
adc
and
cld
lock
push
daa
mov
addr16
pusha
jne
mov
inc
je
lahf
shlb
pop
pop
inc
rol
daa
aas
cmp
repnz
pushf
aad
daa
jg
adc
in
test
stos
mov
push
jl
sbb
enter
adc
cmp
cli
or
wrmsr
rcrb
sub
xchg
icebp
cmpsb
dec
sbb
das
popa
inc
add
decb
dec
in
inc
jl
imul
stos
roll
test
ljmp
cmp
hlt
push
cmpl
daa
mov
xchg
xchg
adc
rcr
arpl
jns
mov
mov
shlb
dec
mov
xchg
or
scas
dec
adc
rol
ficompl
or
jnp
lods
enter
data16
xor
adc
jmp
jo
cs
scas
fld
xor
xor
mov
fmul
shlb
push
loopne
outsb
lods
adc
into
mov
pop
out
out
jnp
repz
inc
fs
iret
dec
push
add
in
or
mov
ret
sbb
dec
cwtl
daa
mov
call
add
cmp
mov
aaa
dec
sub
mov
cmp
ds
jno
cs
test
jmp
dec
rolb
lods
insb
cli
push
lods
add
dec
jl
in
dec
mov
mov
jb
pop
jecxz
data16
jge
and
or
jp,pn
loopne
cli
in
rorb
cli
inc
dec
push
mov
push
aas
pop
mov
xor
add
jge
sbb
in
lcall
ret
fisubs
sbb
imul
pop
pop
or
out
cmp
mov
or
xlat
cld
das
push
cmpsl
mov
mov
je
lock
add
imul
ds
jnp
cli
and
jno
pop
rcll
aad
ret
inc
roll
xor
mov
cmpsl
push
adc
mov
sahf
and
bound
sti
inc
cwtl
push
outsl
fucomp
dec
in
mov
xchg
andb
lahf
repnz
push
and
out
xchg
enter
sub
push
push
dec
pop
sub
cmp
das
movsl
mov
movsb
push
loop
aad
adc
dec
or
push
jge
test
imul
fnstsw
lds
pushf
adc
jbe
mov
jecxz
nop
jne
ror
push
adc
insl
dec
mov
pop
popf
test
enter
mov
jg
lods
ret
sbb
fcmovnb
cltd
aam
lock
test
stos
mov
push
hlt
mov
push
test
xor
push
jle
pop
mov
pop
inc
jo
fmul
popf
pop
clc
cli
shl
sub
ss
aad
lret
mov
jge
outsb
mov
push
test
mov
in
adc
mov
popf
iret
movsl
test
std
jle
and
push
push
in
test
movsl
mov
loopne
mov
push
sub
mov
mov
cmpsb
into
popa
std
and
repz
sub
mov
and
ljmp
daa
adc
mov
imul
pop
pushf
test
adc
xor
mov
outsl
sbb
jnp
pusha
xor
sub
xchg
popa
icebp
push
cmp
insl
aam
mov
ss
jno
fimuls
jno
movsl
pusha
int
adc
sti
inc
lock
daa
repnz
mov
ret
loopne
pushl
daa
dec
pop
dec
jne
adc
stos
rclb
into
lea
push
mov
inc
setno
ucomiss
int
xchg
dec
and
pop
inc
outsl
push
gs
jae
ja
call
push
jns
insb
dec
push
frstor
lock
inc
sbb
mov
sbb
mull
pop
mov
xorl
or
jns
cmp
mov
mov
or
int3
test
sbb
push
mov
stc
and
js
xchg
jo
pop
aad
xchg
movsb
leave
mov
cmc
mov
pop
arpl
cld
int
stos
ror
fstp
roll
add
sbb
lods
pop
lock
dec
inc
mov
cld
jbe
je
repz
ds
nop
int
and
mov
in
ja
mov
rorb
es
push
add
mov
je
in
pop
sti
je
lods
adc
pop
adc
xchg
adc
shl
mov
xor
into
jg
outsl
jnp
int3
pop
xor
aad
js
js
xor
sbb
enter
stos
ret
iret
mov
xchg
cmp
out
adc
icebp
enter
push
push
mov
inc
lds
stos
mov
vpackssdw
pop
ljmp
insb
add
pop
mov
jb
cmp
idivl
mov
fbld
ljmp
pop
js
or
rcrb
clc
mov
jno
lods
and
sbb
dec
imul
lahf
push
mov
sbb
std
and
dec
jns
jl
das
gs
fisttpl
es
popf
sbb
out
out
int3
or
lods
cmp
punpckhbw
shlb
nop
dec
inc
xor
cmpsl
lahf
adc
sub
mov
jne
lock
movsb
into
add
subl
call
les
aaa
mov
mov
ljmp
pop
fsubl
fs
inc
daa
push
jmp
jg
jns
cli
xchg
outsl
xor
call
sti
sbb
cmpsl
cwtl
ficoml
push
rcr
loope
lea
sti
repz
push
loope
fwait
in
or
stc
jecxz
or
cmc
or
add
pop
xor
mov
or
fmul
mov
and
cmp
and
popf
rcr
mov
aam
hlt
pop
push
cmp
call
pop
adc
fdivl
push
pop
je
inc
into
dec
movsb
jne
jne
into
fisubl
rclb
cld
cmpl
xchg
xchg
int3
ljmp
stos
stos
lcall
insb
mov
fimuls
das
dec
daa
sbb
insl
jge
popf
jge
or
repz
fs
fdivrp
les
hlt
fldt
mov
inc
fwait
mov
outsb
pop
sbb
sarb
aam
pop
xchg
mov
mov
cmovns
aaa
es
stos
add
jmp
cli
sbb
inc
addr16
mov
lret
jmp
add
mov
fwait
mov
scas
push
aam
mul
xor
clc
ljmp
push
dec
push
imul
push
cmp
pushf
cs
pusha
imul
mov
dec
lahf
repz
dec
jecxz
xor
xor
and
test
dec
cmp
jmp
push
outsl
out
xchg
ds
ret
std
sbbb
sub
mov
push
in
pop
testb
cmp
cld
pop
adc
sub
movsl
in
mov
push
gs
adc
push
xor
jns
mov
jecxz
mov
popa
jmp
mov
dec
call
movsl
pop
pop
xchg
les
inc
pop
test
inc
rorb
dec
inc
mov
cmpb
mov
inc
mov
loop
aas
jne
lret
int
addr16
dec
mov
jmp
push
int3
leave
mov
scas
fiaddl
mov
stos
int
loopne
arpl
dec
or
mov
daa
pop
adc
or
shrb
dec
sub
outsb
cmpsb
jg
js
out
pop
push
lods
mov
cmp
sbb
cltd
mov
inc
mov
adc
outsb
xchg
dec
dec
add
adc
stos
lods
mov
cli
lds
rep
mov
pop
dec
repnz
aam
push
xor
push
fistpll
xor
xorb
mov
xor
adc
xchg
pop
and
les
mov
push
into
addl
or
dec
or
mov
out
ret
dec
adc
fmuls
xchg
xor
xchg
outsl
inc
mov
insb
jg
fdivrs
in
mov
pusha
mov
xchg
out
jo
dec
adcl
dec
loop
dec
mov
fdivl
mov
sti
xchg
pop
out
lds
lds
jle
dec
pop
pop
mov
add
out
xchg
outsl
lret
push
sub
test
sar
stc
mov
push
cmp
fidivl
adc
fisubrs
adc
sub
pop
cmp
mov
inc
inc
push
sti
cmc
inc
in
shlb
pop
mov
iret
xor
mov
shr
xchg
xor
jl
adc
clc
jns
dec
movsb
pop
imul
dec
push
ds
push
test
aad
das
fldl
daa
dec
in
call
cli
pop
cmp
ja
push
in
movsl
pusha
in
lds
cmp
and
push
jne
fnstsw
in
sbb
in
in
insb
dec
outsl
std
in
inc
xchg
shrl
mov
sbb
test
pop
out
fwait
cmp
clc
xchg
pop
adc
jge
out
imul
add
nop
inc
cld
loope
jge
mov
aas
pushf
mov
test
rol
and
fprem1
dec
mov
cwtl
jae
sahf
or
sub
dec
pop
in
jae
lret
test
sub
xor
pop
jnp
mov
shll
mov
f2xm1
clc
addr16
pop
scas
or
add
lret
fmuls
cs
popf
lock
mov
icebp
jno
das
cli
out
scas
arpl
pop
add
fldl2e
lods
push
xor
imul
push
inc
cmp
xchg
ja
xor
mov
mov
subl
pop
pop
fs
fs
into
pop
pop
ljmp
jbe
fwait
xor
jg
add
adc
xor
sbb
mov
pusha
sub
sub
pop
popw
push
fildll
int
stos
or
cmp
test
jno
fisubs
jbe
decl
dec
cmp
jnp
sbb
xchg
and
imul
pop
loope
mov
negb
call
bound
lahf
cmpsl
and
scas
sub
mov
enter
jb
or
aam
mov
cmc
cmp
rorl
test
in
xorl
test
out
add
push
mov
inc
or
sub
in
fnstsw
dec
cmc
fldenv
cwtl
cli
or
and
sti
fdivrs
test
adc
lock
push
jae
int
pop
or
int
jne
mov
aas
mov
mov
push
xor
jo
xchg
sti
cmp
push
ds
add
mov
push
movsl
add
push
cmp
push
fisubrs
fsubl
rorl
call
jno
inc
xor
in
jae
cmp
clc
inc
push
jnp
lcall
pop
out
and
adc
jecxz
xchg
jbe
clc
stos
std
dec
shlb
mov
inc
or
out
testb
sub
dec
pop
cmpsl
jbe
cs
daa
test
lret
xor
lea
cmc
inc
add
jo
cmp
sub
inc
sahf
scas
cmpsl
ret
mov
jae
mov
addb
sbb
jmp
loop
leave
mov
jmp
mov
jg
sbb
lcall
mov
mov
push
popf
mov
loop
call
add
mov
jmp
mov
push
add
rcrl
mov
adc
mov
or
leave
cmc
lret
dec
outsb
cmpsb
pop
stos
or
cmp
adc
test
mov
lret
jl
sahf
sbb
xchg
mov
pop
es
addb
xchg
mov
inc
jecxz
into
cmpsb
sbb
add
jne
inc
jae
je
xchg
mov
pop
xor
sub
and
pop
in
ljmp
ljmp
sub
cmp
and
dec
pop
mov
fimull
sbb
jnp
sub
into
popf
mov
int3
lret
adcl
aaa
cli
imul
adc
pushl
fwait
loope
xor
jne
mov
mov
pop
enter
adc
dec
dec
jns
mov
cs
mov
mov
fldt
loope
sahf
and
jg
cmpsb
into
push
imul
enter
mov
std
cmp
push
mov
xor
cwtl
pop
out
pop
xchg
add
pop
test
cld
scas
mov
daa
xor
and
lret
scas
mov
rcl
xchg
shl
scas
cmp
xchg
add
inc
dec
cmpl
pop
mov
dec
into
inc
xor
div
inc
test
cmpsl
lret
push
jmp
call
int3
push
dec
data16
cmp
test
mov
stos
ret
cmc
and
and
jl
or
sbb
mov
push
jmp
mov
push
stos
and
mov
ret
mov
or
add
loopne
dec
loopne
into
es
nop
mov
loopne
out
call
push
mov
xlat
dec
in
jecxz
into
dec
jne
ss
in
or
stc
sti
mov
fistpll
push
mov
inc
mov
fs
and
leave
cmp
jmp
adc
push
jne
dec
ret
scas
fwait
cmp
hlt
daa
add
aad
and
dec
fwait
icebp
push
sti
adc
or
xor
or
xor
out
add
xlat
scas
and
push
pop
jno
cs
xchg
roll
cmp
sub
or
mov
push
cmpsl
jg
out
xchg
fmull
xor
aad
jmp
jmp
pop
and
imul
std
jg
sbb
mov
nop
add
adc
ja
dec
arpl
sub
sub
cld
dec
dec
and
pop
in
js
adc
lea
in
cmp
je
fdivr
mov
pop
fmull
mov
sarl
rcll
mov
sar
jmp
mov
addr16
lahf
outsl
push
fists
mov
xor
cmp
push
dec
das
lret
pop
outsb
and
call
pop
cmp
lds
faddl
push
sub
mul
lret
dec
sbb
and
mov
ret
xchg
xchg
js
sbb
xchg
cli
add
jns
in
jl
dec
adc
add
orb
imul
adc
inc
jmp
pop
ficoms
call
push
inc
aad
sub
es
data16
cwtl
loopne
sub
mov
sub
stos
mov
aaa
sahf
andl
inc
stos
addb
out
inc
jge
scas
sti
lods
lock
jp
jns
mov
pop
xor
inc
add
fcomp
stc
out
les
jle
repz
xor
mov
push
cmp
mov
sbb
or
or
jmp
imul
scas
mov
push
xchg
cmp
mov
jnp
dec
dec
and
and
add
add
lds
je
call
mov
add
push
out
push
inc
out
lds
repz
rcrl
xchg
or
pop
iret
movsb
sub
aam
push
fistpll
dec
xor
adc
or
lcall
out
push
jp
sub
mov
mov
in
push
mov
mov
xorb
pop
int3
mov
lcall
es
test
pop
call
imul
add
out
cmpsb
inc
sahf
push
roll
stc
imul
add
adc
insb
mov
scas
dec
aam
dec
mov
imull
adc
ss
rcrl
push
cmp
lahf
xchg
enter
mov
adc
enter
push
push
loope
mov
mov
sub
mov
pop
xor
js
xchg
add
lret
xchg
aam
push
ljmp
bound
jecxz
mov
repz
dec
pop
into
inc
push
xchg
cs
jmp
xor
sub
adc
lock
sub
dec
xchg
cwtl
cwtl
cld
mov
xchg
xchg
sub
push
cli
mov
pop
pop
mov
or
fidivs
push
pop
cmpsl
mov
enter
sub
adc
sbb
ret
cmp
xlat
and
ja
scas
popa
out
jb
jmp
inc
xor
sbb
mov
cmp
xor
jne
fdivl
pop
arpl
add
dec
and
xchg
and
cmp
pusha
cmp
lret
inc
sahf
sbb
addr16
test
sahf
inc
dec
adc
cmp
repnz
and
jnp
cmp
dec
mov
fisubs
add
sub
fst
out
cs
shlb
push
mov
sbb
add
jne
xor
xor
insl
push
iret
adcb
mov
and
push
in
mov
fs
mov
and
mov
repz
sub
sbb
add
movsl
xor
test
das
lock
mov
js
inc
pop
xor
mov
insl
inc
pop
xchg
pop
lea
rcl
dec
mov
out
not
push
popa
xchg
push
xchg
or
repz
fidivrs
flds
xor
mov
hlt
inc
inc
mov
fsubr
mov
jno
aad
jne
sbb
fdiv
mov
subl
mov
pop
xor
pushf
adc
int3
rcrl
inc
adc
arpl
and
jns
sbb
mov
test
int
stos
add
lret
inc
jmp
sbb
jecxz
jbe
push
pop
sbb
mov
test
push
stc
jmp
or
lret
std
push
or
shld
push
std
inc
imul
fwait
dec
adc
mov
xchg
mov
ja
xor
outsb
stc
clc
rol
inc
dec
sti
jb
sub
adc
cld
imul
pop
jmp
es
xlat
movsl
stos
movsl
jp
xor
mov
rcll
pop
jmp
push
cmpb
call
mov
fidivrl
sbb
push
aas
str
cld
scas
jecxz
ljmp
mov
inc
and
repz
fst
lds
push
xor
cmpsb
or
mov
arpl
adc
mov
mul
insl
ret
lock
inc
jg
cwtl
es
ja
lds
fadd
xor
sub
gs
pop
movsb
sbb
dec
jae
mov
mov
mov
jge
mov
lcall
sbb
dec
or
cmp
push
mov
test
fcomp
arpl
cmp
repz
bound
dec
icebp
adc
push
sbb
enter
scas
push
push
pop
cld
dec
mov
jmp
repz
pop
pusha
push
fdivrs
out
icebp
daa
fwait
std
nop
push
mov
push
push
mov
sub
xor
adc
inc
mov
push
or
push
mov
out
sub
pop
or
xor
lods
add
sbbb
xchg
and
jae
call
xchg
sarb
rolb
mov
jl
or
mov
dec
notl
stos
adc
cld
aam
cmp
mov
jbe
jb
push
insl
and
push
mul
rorl
jmp
sub
dec
cmp
stc
int3
push
dec
stos
movsb
mov
add
loopne
sbb
imul
lea
mov
pop
xor
iret
jo
test
cmpl
outsl
test
ds
xchg
or
sbb
cmp
jno
jb
out
lods
lods
fisttpl
jb
hlt
repnz
jecxz
jae
loope
push
sbb
pop
dec
mov
das
movsl
mov
cmpsb
push
cmp
cmpl
enterw
mov
sbb
in
aaa
mov
into
push
sbb
fmull
rorb
loop
inc
inc
pop
imul
jp
jo
js
pusha
insl
mov
jae
mov
xchg
cmpl
aas
push
aad
mov
xlat
mov
mov
mov
neg
repz
andl
orb
aaa
add
push
jmp
pop
mov
cmp
and
orl
lret
push
call
popa
or
mov
subb
fstps
leave
fisttpl
add
testb
push
cmpsb
xchg
mov
jne
jnp
out
je
pop
sub
mull
mov
xor
insb
cmp
jnp
push
or
pop
jns
adc
cwtl
dec
mov
mov
mov
pop
sbb
fstpt
mov
cltd
loope
insb
rclb
fcoms
xorl
adc
and
movsb
sahf
add
and
ljmp
pop
mov
cmp
js
sub
add
mov
mov
test
mov
fdivl
mov
xor
data16
mull
adc
scas
cmp
add
movsl
mov
pusha
out
xchg
mov
cmpsl
fisubs
in
pop
mov
daa
jle
out
pop
je
pop
aaa
sbb
stos
dec
mov
loop
cli
dec
clc
lods
add
scas
xchg
lea
jmp
lds
inc
inc
add
pop
fadds
xchg
lcall
sub
xor
into
clc
xchg
lret
lret
sub
add
nop
movsb
xchg
pop
cmpsb
insl
mov
imul
push
dec
mov
xlat
cmp
mov
cwtl
jae
fs
pmaxub
xlat
mov
and
js
add
rorl
mov
push
lahf
mov
lahf
add
rorl
adcb
sbb
xor
rclb
fcompl
sub
and
aaa
xor
xor
in
push
push
lds
fwait
sub
loope
mov
je
xchg
inc
lcall
cmp
add
sbb
or
repnz
fisttpl
adc
sub
std
addl
pop
pop
in
sub
mov
inc
lahf
ret
mov
sub
insl
insl
xchg
lcall
adc
jno
or
sahf
adc
inc
mov
jl
sbbb
and
mov
push
pop
mov
push
mov
outsb
push
cmpsb
sti
mov
adc
and
scas
addr16
jo
test
cwtl
pop
enter
mov
iret
sub
sub
cmp
fildl
popa
out
mov
les
lcall
lea
pop
lahf
sti
dec
ret
ljmp
hlt
jns
push
jne
test
movsb
shl
inc
jns
sarl
sub
mov
loopne
movsb
and
xlat
xorl
sbb
adc
mov
loopne
push
adc
sub
clc
sbb
inc
daa
outsb
jp
pop
push
lea
dec
mov
xchg
scas
mov
ret
push
jae
pop
mov
insl
sbb
outsb
xchg
xchg
push
test
jg
or
rcll
inc
sbb
jl
push
and
ds
dec
shl
push
jecxz
pop
call
cld
out
push
std
jle
mov
out
cmp
and
into
mov
ficoms
mov
es
or
sub
sti
inc
ds
dec
sbb
mov
clc
dec
mov
pop
scas
fsubr
icebp
ret
pop
in
push
fsubl
adc
mov
std
pop
pop
loop
push
nop
mov
data16
inc
sub
or
dec
cltd
and
adc
repnz
xchg
cli
filds
cs
add
imul
cmp
je
bound
frstor
and
xchg
cwtl
cmp
clc
inc
out
or
add
stos
pop
lea
imulb
mov
pop
cs
jns
sti
pop
test
jns
sbb
xchg
sahf
or
mov
inc
push
test
shrd
data16
aad
xchg
mov
jae
xor
iret
jmp
movsl
aad
push
inc
add
shll
and
subl
stc
iret
cmpsl
push
dec
pop
pop
push
into
lea
and
aam
sub
aad
add
mov
xchg
and
jae
sbb
rcr
jmp
cmp
scas
dec
shrl
cmp
dec
mov
enter
pop
es
mov
mov
lret
pop
shlb
push
push
push
in
mov
jle
xor
sub
push
or
aad
jno
orl
and
adc
mov
movsb
cwtl
mov
sbb
mov
in
pop
sub
pop
push
mov
sti
in
rorl
jl
aaa
arpl
sbb
add
push
in
clc
adc
bound
rcrb
or
jbe
sbb
push
push
xor
das
in
fmul
pop
push
out
loope
push
lods
repnz
gs
loopne
adc
lods
xchg
js
cmc
std
cmp
in
popa
jmp
cltd
xor
mov
xchg
sub
push
sbbl
xchg
fdiv
pop
sub
movsb
repz
gs
xor
test
xlat
mov
arpl
lahf
and
aad
push
mov
mov
xchg
outsl
jmp
xchg
jl
cmp
pop
push
mov
dec
xor
std
cmp
daa
mov
and
xchg
sbb
push
mov
jmp
push
xchg
mov
mov
cmp
jbe
ss
ja
cltd
dec
out
fsts
adc
jo
sbb
jno
jecxz
rcrl
mov
repnz
adc
repnz
add
sub
xor
sbb
pushf
push
and
and
loop
mov
jns
jo
sub
notb
adc
xor
xchg
ret
es
xchg
push
jp,pt
add
pop
cmpsl
jmp
sbbl
aaa
daa
dec
pop
stc
pop
add
mov
push
dec
mov
sbb
push
lcall
mov
ljmp
std
imull
leave
mov
mov
mov
je
repz
movsl
push
shl
jns
jg
daa
jg
cmpsl
inc
sti
or
push
imul
sbb
xchg
cmp
cmpsl
iret
fisttpll
jno
push
xor
xchg
jmp
lods
or
mov
inc
rep
dec
xor
imul
out
xchg
cmp
cwtl
test
es
repnz
push
sbb
sar
dec
mov
xchg
int
and
scas
pop
je
mov
cli
out
aas
test
pop
addr16
loop
ds
mov
fwait
mov
push
mov
sub
pop
xor
shl
and
adc
jb
ss
scas
xchg
imul
out
pusha
dec
cmp
xchg
push
dec
jo
test
mov
or
pop
sbb
daa
data16
xchg
lods
jnp
sub
loop
addr16
and
cmp
int
in
loop
sub
test
ret
mov
jecxz
lods
cltd
mov
jnp
jmp
rcll
les
mov
cmpsb
mov
loopne
xchg
dec
repz
pop
cli
ss
aad
or
out
cli
cltd
pop
dec
fldenv
out
and
push
xchg
fwait
cmpsl
xchg
insb
adc
pusha
loope
movsb
test
lret
cmp
stos
ja
mov
push
js
mov
nop
inc
inc
rcl
out
xchg
movsb
cmp
push
inc
cmp
pop
cwtl
mov
stc
sbb
movsl
int
cltd
add
xchg
xor
inc
data16
jp
mov
xchg
orl
mov
ret
sub
pop
loope
xchg
add
xlat
cmp
scas
test
push
sub
fisubs
push
nop
adc
cmp
dec
inc
mov
les
jle
dec
js
outsl
xorl
xchg
shlb
or
xchg
aad
dec
push
rcrl
adc
push
push
push
or
decl
stos
push
out
pop
stos
mov
mov
xor
mov
sub
jbe
or
daa
fisttps
lret
pusha
mov
sbb
xor
sub
adc
imul
out
sarb
ss
lret
or
jns
sbb
or
iret
mov
xchg
add
outsl
push
jecxz
pop
jns
addr16
lret
xorb
mov
sub
jecxz
clc
repz
test
lock
call
xchg
jle
leave
inc
cmpsl
dec
add
mov
or
lret
enter
gs
dec
xchg
xorb
add
cld
rorb
pop
pop
idivl
push
mov
mov
sub
pop
mov
pop
sbb
adc
loop
ret
sahf
rolb
dec
cmpsb
jae
int3
mov
out
pushf
lcall
imul
mov
adc
xchg
push
xchg
sub
and
sub
mov
insb
adc
push
xchg
sbb
mov
sahf
in
inc
push
or
sub
mov
outsb
popf
sub
mov
imul
out
outsl
push
stc
sbb
dec
dec
mov
dec
out
sbb
lods
les
mov
mov
mov
sysexit
out
jns
pusha
and
xchg
movsl
sbb
int3
push
and
xor
adc
cmpl
sbb
fnsave
frstor
in
xor
jg
inc
gs
mov
push
aas
sub
test
les
pushl
cmp
scas
mov
push
sub
cs
pop
aad
push
in
vcvtdq2pd
xchg
mov
sub
push
and
cmp
xlat
test
std
stos
in
stos
and
mov
ret
adc
add
push
cltd
adc
aam
dec
adc
mov
jmp
mov
mov
and
sub
inc
pop
bound
jbe
scas
add
test
xchg
jno
ret
enter
call
lods
jbe
les
pop
repnz
mov
in
pop
scas
sub
push
je
mov
subl
adc
adc
cwtl
imul
mov
mov
mov
xor
ret
loope
cmc
mov
and
std
mov
arpl
pop
jmp
out
jnp
out
ss
and
xor
stc
jge
cmp
lods
cmp
arpl
es
std
lods
lods
mov
in
nop
xchg
lea
test
pop
mov
pop
int3
jns
je
out
lods
and
push
ret
cmp
xchg
in
int3
push
xor
push
push
cmp
lods
adc
out
into
icebp
mov
insb
data16
orl
scas
dec
jmp
das
push
out
xor
loopne
jg
pop
loope
loop
rorl
das
mov
xor
add
ds
jae
lret
jg
incb
adc
ss
jbe
push
mov
pop
sub
int3
pop
stc
and
mov
adc
jbe
stos
and
in
mov
adc
lahf
xchg
ja
adc
sub
cmp
push
mov
pop
or
pop
dec
mov
cwtl
push
out
enter
and
dec
stos
dec
nop
push
adc
popf
movsb
jb
notl
mov
and
hlt
xchg
mov
stos
popf
fwait
mov
add
lcall
sub
lahf
jb
ret
dec
in
fistpl
pop
scas
push
popa
dec
test
aad
sub
fwait
add
inc
dec
or
jb
fwait
addr16
or
shl
shll
push
xor
cmp
test
xchg
xor
fdiv
mov
leave
stc
adc
dec
outsb
push
xchg
adc
push
fisttps
dec
add
mov
xchg
in
push
pushf
push
popf
out
out
push
and
rcrl
fisttps
mov
mov
outsl
rcrb
sbb
cltd
lock
xchg
mov
xchg
lahf
sysret
aam
xor
add
subl
pop
push
xlat
sbb
push
insl
sbb
aam
mov
movsl
xor
or
jnp
scas
push
fimuls
pop
xchg
or
or
xor
stos
shlb
outsb
testw
sub
mov
ljmp
mov
or
mov
mov
mov
xor
push
mov
sub
fmul
push
mov
xor
and
sub
out
or
imul
addb
popa
dec
lea
sbbb
scas
sbb
cmp
or
mov
mov
imul
xor
jne
sub
dec
scas
jno
popf
int
repz
dec
lock
js
push
jmp
jnp
push
out
pop
in
mov
and
inc
jp
add
cltd
lcall
add
mov
ss
arpl
jbe
mov
daa
dec
mov
jge
add
inc
mov
subl
jecxz
mov
mov
mov
dec
sub
pop
fwait
mov
test
jns
lds
fs
cmp
popa
dec
mov
leave
sub
sub
loopne
jmp
jecxz
jle
arpl
call
jbe
inc
aad
cli
push
jmp
in
mov
adc
movl
fcmove
loopne
lea
sbb
mov
arpl
flds
into
xorps
jns
or
adc
pop
cmp
lret
mov
or
lcall
rcl
sub
push
xchg
outsb
jo
mov
in
pop
dec
aaa
xchg
push
push
outsb
mov
jo
adc
nop
cmp
add
cmp
xchg
jge
xor
insl
inc
test
mov
xor
pop
mov
mov
imul
cli
or
mov
pusha
test
fistps
push
xchg
adc
xor
mov
pop
test
add
gs
adc
ret
add
mov
and
adc
shrd
jmp
sub
repz
imul
in
add
sub
or
mov
filds
pop
or
mov
pop
pusha
sub
rcr
and
jecxz
jnp
gs
fnsave
push
and
pop
int
jecxz
mov
loope
jl
movsl
lret
xlat
int
mov
out
mov
xor
stos
dec
fwait
sub
or
xor
imul
mov
test
adc
jl
mov
jecxz
aas
ds
leave
mov
int3
stc
into
inc
xor
push
sarb
mov
mov
add
scas
push
mulb
adc
push
sbb
nop
push
mov
add
loope
outsb
or
dec
lods
fwait
mov
mov
and
sub
adc
out
sbb
std
add
int
ret
stos
cmp
loop
fdivl
repnz
in
ljmp
mov
test
xorl
and
xor
pop
mov
dec
fsubrs
inc
jp
ja
lock
in
inc
testl
inc
add
xchg
out
sub
mov
dec
fstpt
mov
cmpsb
ss
add
jg
mov
pop
repz
inc
enter
ljmp
fwait
daa
adc
out
frstor
icebp
cld
in
cmpsb
cmpsb
mov
inc
lahf
rcrl
jae
clc
mov
mov
pop
pop
incl
and
enter
add
push
push
scas
dec
jnp
mov
sub
mov
mov
inc
mov
fsts
pop
lret
es
lock
pop
fwait
or
test
lahf
cld
or
rorl
sub
addl
repnz
inc
fimuls
sahf
pop
adc
jbe
jle
and
xor
and
int3
inc
out
out
insb
addl
pop
mov
shlb
fcoml
cmp
push
popa
lods
in
mov
mov
cltd
aad
pop
test
sarl
xchg
and
inc
pop
std
jb
lods
jle
adc
cmpsb
dec
sbb
das
pop
cmpsl
sbb
js
gs
adc
jmp
imul
mov
mov
aas
sub
push
dec
mov
adc
dec
out
ss
push
cmp
andl
add
jnp
insb
jge
jp
fwait
push
in
or
pop
pushf
xchg
cld
sbb
mov
cwtl
cltd
testl
jg
sbb
leave
push
mov
pop
inc
cmpsb
inc
jnp
cmp
fwait
mov
cmp
sbb
in
dec
lret
mov
cld
movsl
pusha
sub
aad
enter
jecxz
mov
enter
jbe
movsb
pop
inc
ret
sub
pop
sbb
mov
lret
sub
and
xchg
mov
pop
test
add
sti
or
xor
push
fcomp
clc
push
pop
xchg
loope
fincstp
lcall
or
mov
pop
push
jle
pop
push
insl
bound
loope
add
or
lret
pushf
inc
insb
mov
fsubrp
jmp
int3
int
mov
and
and
test
jl
push
cmp
scas
add
leave
cltd
sub
test
mov
test
pop
mov
sub
arpl
into
jbe
clc
out
mov
dec
dec
mov
shlb
mov
mov
xchg
cmp
lret
test
out
pop
shll
dec
push
ja
clc
mov
mov
daa
or
popf
repz
aam
pop
cmp
or
cmc
outsb
pop
lahf
jbe
inc
les
popf
test
inc
ficoms
fstl
adc
adc
fadd
push
test
jmp
xor
in
movsl
jmp
into
pop
imulb
decl
xchg
bt
cld
jg
popa
int
xchg
pop
xor
into
fnstenv
cmc
jecxz
fcompl
jp
adc
lahf
ret
fidivs
mov
outsl
mov
push
idiv
into
xor
cwtl
pop
mov
stos
xchg
aam
xchg
ja
add
sar
dec
repz
xchg
rorb
pop
xor
rorb
clc
scas
aam
or
dec
shrl
sahf
jmp
sbb
mov
xchg
inc
pmullw
jae
mov
xchg
or
daa
or
nop
mov
aad
jo
arpl
cmp
imul
mov
mov
daa
nop
roll
aad
push
push
cld
out
mov
sarl
add
or
jl
imul
scas
jo
inc
and
mov
aaa
pusha
test
mov
dec
cli
sub
lods
aad
icebp
sub
xchg
add
dec
and
loope
in
xchg
test
fildl
loop
mov
in
mov
popa
sub
jp
mov
pop
sbb
inc
dec
daa
jp
jbe
fidivl
xorl
push
leave
outsl
or
jb
fstpt
mov
sub
sub
lret
and
fimuls
test
push
jno
and
xchg
std
adc
stos
cmpsb
xchg
mov
ss
stos
gs
dec
fstps
jmp
sub
test
push
mov
test
ljmp
pop
xor
pop
cmp
repnz
loope
pminub
fildll
dec
test
cli
lea
jae
out
pushf
pushf
test
mov
mov
popl
js
push
test
and
inc
mov
mov
push
notb
mov
cltd
rorb
lret
xchg
xchg
xchg
xor
pop
mov
aas
cli
dec
mov
cwtl
mov
fwait
lret
fidivs
xor
cmp
or
mov
dec
push
mull
arpl
xlat
xchg
mov
cmc
and
or
cmpxchg
jge
xor
nop
fwait
jb
filds
add
xor
test
jl
lcall
dec
clc
or
jne
push
lret
iret
mov
repz
push
adc
stc
shrl
dec
adc
stc
xor
push
mov
jecxz
addr16
jno
or
push
push
fcmove
cmc
dec
mov
xchg
xor
pop
pop
loope
or
sahf
fldl
xchg
nop
xor
dec
pop
xchg
in
mov
outsl
add
xlat
mov
stc
inc
push
sub
dec
pop
xor
adc
int3
ja
sti
fs
adc
xor
push
xchg
rcrl
imul
pop
dec
adc
loope
data16
mov
dec
pop
ficoml
and
jnp
xor
movsb
cmp
push
push
roll
sub
and
test
or
movsl
adc
cmpsl
sub
adc
rol
aas
mov
stc
int3
and
push
pop
roll
test
mov
nop
sub
sub
sbb
out
call
xor
mov
or
popf
mov
jno
xchg
jp
and
mov
mov
push
cld
repnz
lret
imul
adc
pop
arpl
mov
mov
mov
jno
insl
push
out
movsb
lcall
add
icebp
push
mov
repnz
push
pop
or
rcrl
int
fcoml
in
sbb
jg
and
shrl
push
mov
mov
xlat
stos
out
xlat
pop
into
mov
jmp
jl
pusha
mov
mov
and
repz
das
xchg
xchg
xchg
jns
scas
cmc
jnp
sbb
dec
sarb
push
pop
arpl
xchg
cwtl
fcmovnbe
mov
fdivl
adc
push
shll
popf
and
mov
call
sub
les
push
loopne
adc
pop
lret
leave
xor
imul
sbb
adc
fcompl
or
ss
daa
iret
lret
jo
ret
out
dec
pop
cmpsb
xor
inc
xor
sti
movsl
int3
and
call
pop
les
push
push
pusha
dec
add
add
icebp
pop
fisubrs
mov
in
in
outsb
jg
mov
adc
pop
pop
jno
call
pop
pop
ds
fbld
jb
mov
push
cmp
jl
nop
and
jae
adc
mov
add
push
ljmp
mov
lds
test
fs
pop
inc
fdivrs
inc
int
jae
test
loope
rolb
sysret
popa
int
lret
jns
movsb
into
adc
pop
push
jb
push
pop
out
aaa
ret
inc
xor
fadds
pusha
inc
and
pusha
xchg
in
jecxz
pop
in
shl
lds
fdivrp
add
arpl
aas
fcomi
mov
mov
cmp
cmp
into
aad
subb
xor
cltd
mov
sbb
arpl
pop
iret
dec
xchg
push
inc
dec
inc
test
mov
cli
mov
fcomps
loopne
fmull
xchg
bound
fs
jg
mov
mov
push
stos
dec
mov
jp
xor
inc
xor
mov
jp
test
imul
inc
mov
ficoms
pop
jmp
in
js
imul
mov
push
mov
sbb
lds
ja
jl
flds
sub
shrl
jns
jb
lock
popf
sti
mov
fisubs
pop
sub
sahf
adc
jmp
xchg
pop
sbb
pushf
lahf
dec
pop
pop
xor
fnstcw
push
pop
mov
and
lcall
mov
lret
mov
pop
or
sbb
fwait
xchg
ret
lods
xor
lret
sub
jnp
scas
mov
jo
pop
bound
sarl
pop
and
sarb
ljmp
js
mov
mov
dec
mov
in
scas
out
mov
adc
scas
pop
dec
cmp
cmpsb
pushf
push
test
add
gs
mov
push
ja
or
in
mov
pop
push
add
jbe
or
push
xor
lahf
cmp
cmp
sbb
inc
cmpb
cwtl
mov
mov
xchg
pushf
mov
mov
test
cmc
frstor
xchg
je
sub
push
cwtl
jg
add
outsb
mov
repnz
jne
pop
out
pop
pop
dec
dec
pusha
test
jle
inc
xor
sti
push
and
pop
int3
sbb
dec
mov
fisubl
lahf
dec
dec
pause
mov
sbb
push
mov
shr
cli
fisttps
xlat
adc
adc
shl
xchg
ljmp
test
mov
fwait
jne
adc
fiaddl
sbbb
imul
inc
push
leave
or
ss
addr16
fs
nop
sbb
insb
inc
or
lea
call
scas
sub
sbb
xor
mov
out
repnz
mov
mov
inc
dec
cmpsl
imul
shl
fisttpll
xor
clc
into
xchg
sbb
inc
mov
adc
into
cmp
dec
scas
inc
sub
sar
fldpi
inc
inc
arpl
fsubl
and
mov
adc
mov
jp
mov
aaa
fidivl
or
or
arpl
icebp
sub
cmp
imul
cmp
sbb
shr
xor
sub
pop
fistl
jbe
jecxz
add
pop
leave
xchg
or
ss
mov
lock
add
xor
inc
xchg
and
enter
hlt
mov
call
data16
sub
xor
and
callw
dec
fsts
popf
insl
pop
fstpt
jl
arpl
add
pop
stos
lret
stos
adc
popl
es
outsb
stos
cmc
fbld
lret
in
add
dec
rcl
daa
test
inc
imul
lret
sahf
sahf
lock
loopne
or
mov
pop
inc
xchg
xchg
jae
lret
xchg
mov
movsl
dec
adc
psubusw
xor
dec
add
ret
pop
sub
sbb
inc
dec
add
pop
dec
hlt
push
mov
xchg
les
clc
xchg
insl
push
lcall
repz
in
les
pop
jne
sarl
adc
je
and
mov
movsl
add
mov
scas
lret
inc
xor
xchg
mov
ret
shrl
lahf
push
push
sbb
stc
mov
ds
cmp
les
loopne
and
fnstsw
xor
leave
adc
movsl
xor
int
cmp
nop
js
mov
cltd
loopne
mov
push
ret
std
pop
jo,pn
cwtl
and
pusha
pop
mov
fsubs
add
push
add
cmpsl
scas
sbb
in
inc
pop
lea
inc
sub
test
xor
dec
mov
xchg
lret
adc
push
out
pop
adc
adc
hlt
pop
cltd
shl
and
inc
mov
mov
mov
orl
sub
mov
jbe
cmp
cmp
push
adc
jnp
lods
mov
sbb
xlat
data16
xor
push
adcb
shrl
xchg
fisubrs
rol
jno
cltd
adc
and
cmp
mov
int3
jp
or
fwait
adc
fidivrl
and
testb
mov
push
shrl
xchg
jae
inc
aas
prefetch
out
sti
push
test
mov
popf
inc
push
ja
mov
repnz
jle
sarl
dec
or
push
push
clc
leave
push
inc
sbb
push
xor
mov
orl
sub
sbb
enter
sarl
mov
xorl
add
and
and
inc
inc
out
ret
orps
gs
les
mov
adc
add
pushf
mov
sbb
jl
in
sub
lret
negl
leave
lds
jbe
mov
test
lea
scas
xor
stos
fwait
add
sub
stos
mov
push
jae
sub
mov
fbld
sbb
jmp
jne
dec
sub
xor
xor
jmp
clc
fldt
sub
ret
mov
fstpt
push
push
test
stos
aaa
inc
ret
cmp
xor
mov
scas
inc
leave
sub
mov
sbb
pop
fnstenv
scas
shr
mov
and
cmpsl
fucompp
cmp
adcl
or
aam
cmp
mov
jbe
mov
bound
mul
sub
fs
sub
xor
insl
int3
sti
cmp
loope
cmpsb
mov
dec
lds
xor
dec
mov
mov
mov
popf
push
xchg
shll
jle
push
mov
jbe
xchg
cmpsl
add
mov
aaa
xor
fs
and
xor
jl
loop
inc
inc
cmp
loope
sub
mov
mov
cli
mov
mov
push
fldcw
roll
xchg
stos
mov
push
mov
or
or
in
fidivl
inc
mov
add
push
jmp
out
xor
push
push
shrl
inc
sarl
loopne
mov
or
cmp
jl
lods
addr16
call
hlt
sbb
jo
sarl
sub
sub
jbe
cmp
out
cmp
and
inc
and
mov
fwait
mov
sub
xchg
cmp
add
mov
shrb
aad
rcr
or
xor
daa
dec
outsb
jmp
into
jno
ss
push
jl
pusha
dec
out
mov
jg
xchg
dec
mov
mov
add
test
dec
dec
sbb
ja
fists
dec
mov
cmp
cmpsb
xchg
xor
mov
cltd
loope
add
xchg
xor
mov
jbe
cmp
mov
lret
ja
and
outsl
test
sbb
movsl
jle
hlt
outsl
push
add
ss
sbb
adc
adc
mov
inc
cmpsb
xor
test
loop
cmp
jnp
icebp
rclb
add
mov
fiaddl
into
cli
es
std
decb
sub
lock
idiv
out
inc
gs
movsl
stos
sbb
jns
dec
xlat
or
adc
cmp
inc
aam
dec
jmp
cmp
sarl
test
sub
mov
aad
cmpsb
fimuls
inc
incb
test
mov
cltd
xchg
js
push
xor
fadds
lock
lock
in
cmp
push
out
add
dec
nop
mov
daa
mov
xor
lea
add
push
xchg
ret
repnz
push
fsubl
mov
sbb
jns
xor
mov
fnstcw
push
sarb
mov
inc
imul
nop
sub
loopne
outsl
loope
xor
or
xchg
js
or
lret
popf
dec
mov
cmp
fmul
insb
shl
std
cwtl
add
cwtl
pop
call
lods
inc
add
data16
cmc
sub
mov
xchg
sbb
fwait
imul
sbb
das
int3
xchg
cmp
ret
push
in
out
jbe
mov
mov
lret
adc
cwtl
sub
inc
iret
and
xchg
dec
scas
jg
inc
in
rclb
mov
mov
push
push
jnp
sub
jb
jle
repz
inc
push
imul
jno
pusha
scas
sbb
adc
pop
lret
add
sub
pop
pushf
daa
inc
xchg
add
es
add
nop
xor
in
sbb
decl
cmp
jae
hlt
sbb
xchg
negl
inc
and
adc
jnp
and
add
push
imul
push
pop
arpl
bound
sbb
dec
xor
cmp
in
out
fisttpl
inc
xor
outsl
push
cs
sbb
imul
cmc
dec
lock
out
pop
cltd
add
loop
movsl
and
int
pop
sbb
loop
and
inc
jle
or
xor
jbe
das
adc
and
or
sub
push
add
aad
cltd
mov
ret
mov
cmp
mov
ret
mov
mov
add
outsb
adc
sahf
subl
inc
fwait
loop
cmpsb
and
xchg
cmc
mov
mov
mov
repnz
mov
xor
add
mov
dec
stos
adc
xor
aaa
xchg
iret
mov
rcr
jb
lret
int
jb
imull
sbbl
cmp
lcall
les
sub
outsl
pop
gs
and
mov
gs
and
and
scas
and
jle
and
gs
mov
ror
dec
subl
bound
add
std
mov
sar
std
mov
jo
stos
into
dec
xlat
jns
mov
rcrb
jecxz
out
aam
out
cmp
ljmp
push
imul
es
xor
gs
ficoml
mov
mov
cmpsb
or
mov
mov
jne
xchg
outsl
push
sub
jae
shll
ja
dec
cld
cmp
icebp
xchg
stos
push
aam
push
xlat
jne
push
push
lret
cmp
and
stos
mov
shll
jnp
adc
xchg
pop
loope
ficoml
jb
jne
clc
mov
pop
mov
lcall
adc
scas
push
sbb
jne
push
mov
repz
sti
adc
xchg
ljmp
ret
lret
das
add
mov
into
add
push
enter
adc
pop
mov
mov
fsubl
adc
int
arpl
lods
xchg
scas
mov
scas
push
sti
mov
fdivrl
inc
or
jle
jmp
cmp
mov
loopne
lret
fnstenv
mov
or
ds
mov
arpl
in
out
pop
add
in
cli
jle
or
in
insb
jns
xor
sbb
fwait
test
mov
jns
out
push
jle
sbb
imul
shlb
xchg
hlt
adc
fldt
lahf
sbb
inc
xlat
data16
xchg
push
xchg
inc
stos
push
hlt
pop
dec
push
add
xchg
adc
stos
scas
iret
adc
insl
movsb
fs
or
push
es
push
dec
movsl
insb
pop
xor
mov
and
into
das
inc
in
hlt
sbbb
xchg
ret
mov
xchg
xor
inc
sbb
repz
je
jg
jnp
out
in
jne
lods
daa
xor
cmp
adc
add
mov
mov
sarb
mov
scas
fwait
xchg
aaa
pusha
iret
lcall
push
cmp
add
adc
inc
sub
mov
or
test
std
push
fmul
sbb
in
adc
inc
mov
iret
xchg
popa
sub
xchg
cmp
or
sti
dec
mov
dec
inc
dec
mov
jge
jle
pop
fcmove
ficoms
arpl
xor
lock
sub
cmc
or
xor
daa
push
test
and
xchg
repnz
repnz
lods
sub
js
xchg
push
mov
lcall
xchg
aaa
sbb
lahf
sub
jle
pusha
xor
xor
ds
das
xchg
xchg
jl
sub
push
daa
mov
jl
cmp
mov
dec
sub
addr16
insl
pushl
dec
call
pop
xchg
pop
adc
pop
sarl
jge
aam
cmovle
arpl
xor
jmp
jle
sub
movsb
and
mov
fwait
outsl
sbb
pop
sti
mov
sbb
pop
pop
cmp
jp
xchg
mov
std
pop
sbb
adc
jge
repz
outsl
pop
rorl
sti
lahf
shrb
dec
dec
jle
push
xor
pop
push
repz
mov
es
xchg
push
jge
pop
mov
dec
in
pusha
aad
mov
inc
insl
xor
mov
stc
enter
shl
xchg
test
or
pop
xchg
and
cmpb
adc
faddl
jno
shr
mov
or
jmp
fwait
inc
jns
sub
out
movsb
leave
add
sbb
mov
cmpsb
test
fcomp
push
inc
aaa
movsb
and
fists
stos
or
jle
add
rep
push
andb
mov
inc
pusha
test
push
mov
fwait
fwait
mov
gs
fsubrs
fcomip
or
pop
outsl
mov
pop
xlat
test
cmpsl
dec
shrb
or
scas
adcb
dec
scas
dec
mov
lods
sarb
pop
and
inc
loope
xchg
movsb
pop
sti
shll
mov
push
add
icebp
int3
inc
sub
js
lret
stos
ss
fdivl
test
icebp
mov
sbb
cmp
fidivs
aaa
ljmp
inc
je
jnp
idiv
add
test
push
loopne
out
icebp
pop
or
push
cld
and
imul
mov
mov
arpl
mov
in
xchg
in
mov
xor
mov
mov
inc
imul
leave
cmp
in
test
sub
aas
icebp
outsl
fs
repnz
dec
das
push
add
imul
popf
mov
enter
je
std
sbbl
dec
mov
testl
test
subb
cmpsb
sub
stos
add
mov
jg
dec
sub
xchg
sub
mov
mov
sbb
outsb
inc
sbb
mov
fiadds
aaa
scas
enter
imul
test
or
out
sbb
ret
daa
ret
mov
push
fcoml
inc
ret
imul
leave
xchg
xor
mov
inc
adc
faddl
or
inc
lret
shr
rorb
cmp
pusha
jb
cltd
mov
vrcpss
xchg
rcll
pop
gs
sub
push
and
fsubs
and
dec
lcall
out
adc
and
pop
cmc
arpl
xchg
inc
lods
jmp
add
inc
xor
stos
push
cli
mov
bound
sub
leave
jl
inc
mov
sub
xor
out
push
mov
adc
mov
les
or
pop
test
aas
mov
cmc
aad
lcall
adc
or
pushf
sub
addr16
mov
les
dec
jle
ja
rorb
mov
jne
dec
leave
push
in
cmp
fcomp
cld
xchg
push
sub
add
popa
sahf
mov
jle
into
sub
lcall
inc
pop
mov
fcompl
ss
adc
int3
insl
cmp
das
mov
insb
loope
xchg
mov
int3
jmp
sbb
bound
cwtl
sub
mov
mov
repz
in
out
test
mov
pop
loopne
addr16
iret
dec
lea
repz
adc
rorl
lret
ror
mov
incl
clc
xor
inc
pop
das
cmp
pop
inc
cmp
inc
sbb
push
pop
rorl
lea
and
clc
out
sahf
push
loopne
rorl
sbb
push
mov
xor
pop
mov
das
jbe
push
push
dec
dec
sbb
iret
inc
cld
ds
jle
mov
lahf
mov
es
ds
xchg
out
bound
not
xchg
xchg
dec
cmp
fs
mov
mov
xor
mov
adc
adc
jp
sbb
test
mov
xor
sub
loope
ljmp
addr16
insb
xchg
fildll
mov
add
pop
push
cmpsl
stos
cmpsb
in
in
ret
add
notb
sub
sub
sub
sbbl
xchg
jno
in
ret
pxor
cs
iret
andl
es
adc
push
push
icebp
mov
into
adc
sbb
fisttpll
notb
or
and
pop
hlt
lods
xor
ds
imul
or
out
mov
cmp
and
mov
out
cltd
add
iret
cmp
cmp
enter
test
or
ficompl
das
sbb
push
into
inc
push
in
push
and
fnsave
or
dec
and
popf
mov
out
imul
add
jl
cmp
and
pop
out
xor
pop
add
xchg
popa
sahf
xor
outsb
cmp
mov
lret
aad
xchg
addr16
std
sbb
les
and
push
ret
sub
aaa
add
int3
and
jmp
shlb
lea
mov
push
inc
cmp
int3
xor
mov
add
lods
xchg
xchg
mov
cmp
adc
ljmp
fidivs
test
nop
fdivs
mov
or
je
dec
cmp
adc
push
add
insb
lock
cmp
sbb
push
mov
iret
dec
adc
rclb
add
cwtl
paddw
add
loope
mov
repz
inc
xchg
jo
sub
insl
jle
fldl
orb
js
scas
inc
lahf
sub
adc
loopne
pop
mov
xchg
std
stos
mov
out
mov
or
ficomps
mov
test
cmp
push
dec
jmp
stos
mov
mov
aaa
mov
in
push
out
sbb
inc
sbb
insb
sub
arpl
add
mov
hlt
sbb
leave
mov
sbb
mov
sub
xchg
test
rolb
insb
gs
fs
pop
adc
jo
xor
add
cli
dec
inc
cmp
mov
adc
sti
insb
pop
pop
cltd
cwtl
push
iret
jle
imul
inc
ficoms
xchg
cmpsb
push
jae
fsts
xchg
outsl
xchg
sbb
bound
popa
sbb
xchg
addr16
sarb
sarl
scas
data16
psubsw
incb
dec
in
sub
push
or
sbb
jle
aaa
inc
inc
and
mov
pop
push
push
cltd
add
inc
je
movsb
mov
iret
ficompl
pushf
data16
dec
dec
add
int
mov
xchg
adc
lahf
mov
movsb
and
add
cmp
mov
test
cmp
jno
fists
pop
nop
bnd
fisubrl
icebp
in
lret
repnz
cmpsb
je
daa
rcrl
insb
adc
pop
loopne
add
ja
or
and
sarl
or
inc
lock
inc
push
xchg
test
and
mov
fisttpll
addl
loop
mov
gs
fists
fcomps
lahf
in
fisttps
out
je
mov
ljmp
add
push
dec
cmpsb
push
mov
xchg
jo
mov
std
dec
int3
inc
test
fidivs
push
ljmp
hlt
xor
ret
adcb
or
add
and
movsb
mov
imul
mov
fcomps
sbb
mov
xchg
rcrb
repnz
cmp
xchg
cmp
push
push
ja
inc
lahf
rorl
mov
mov
xchg
push
inc
adc
xchg
sbb
xchg
or
or
push
mov
xor
mov
push
jp
jne
xchg
mov
adc
lods
dec
mov
or
movsl
mov
leave
mov
ja
js
lahf
int3
iret
repnz
cltd
out
cmpsb
jmp
inc
push
adc
insb
rcl
xor
mov
jecxz
hlt
test
pop
shl
dec
jno
jl
repz
push
rol
xor
andl
mov
cmpsl
test
std
imul
popa
sbb
sahf
js
xor
xchg
pop
aas
and
inc
sbb
pop
cmpsb
loope
pop
sbb
adc
xchg
test
ljmp
cmpb
lods
dec
fnstcw
adc
loop
or
dec
xchg
and
inc
and
sbb
test
mov
cli
jnp
add
sbb
pop
vandnps
in
insb
movsb
mov
lcall
sti
xchg
lea
enter
inc
inc
push
lret
sbb
pop
repz
mov
addb
sahf
or
xchg
filds
daa
lahf
jl
mov
ret
xor
dec
or
mov
loop
mov
test
push
pop
sbb
dec
sbb
ret
xor
adc
cmp
lret
lods
clc
mov
xchg
or
jp
inc
add
lds
or
rep
mov
addb
shl
dec
dec
cmpsl
sub
test
inc
adc
pop
je
outsl
fcmovnb
push
inc
mov
adc
ja
mov
aaa
cwtl
sub
jb
xor
xchg
inc
incb
cmp
mov
repnz
sub
mov
lcall
into
add
ss
xchg
xor
mov
mov
and
push
in
jnp
pop
sti
ffreep
xor
jb
lcall
or
mov
fildl
push
jmp
or
mov
dec
mov
inc
push
sub
xchg
sbb
mov
test
ret
stc
sti
inc
xor
xchg
shlb
push
push
pop
push
negb
out
int
ret
test
mov
rcl
or
popf
addr16
sbb
in
pop
test
xlat
pop
xchg
mov
cs
pusha
push
lods
cli
loope
fsts
inc
movsb
mov
addl
insl
jnp
test
or
subb
xchg
shlb
test
insb
aas
xchg
jg
push
push
xchg
lea
cmc
mov
pop
addb
rorb
js
and
loop
pop
or
xchg
lret
imulb
subb
decb
outsb
and
pop
or
shl
fs
jbe
and
inc
fists
shlb
mov
ret
in
xchg
or
jle
cwtl
mov
icebp
ljmp
out
dec
cmc
pusha
push
pusha
xchg
mov
int
xchg
fldenv
sahf
incl
and
mov
jns
inc
pop
sbb
adc
mov
mov
sub
lods
push
mov
sub
stc
aam
mov
push
shlb
sti
or
shrb
xor
rcll
ret
xchg
sub
lahf
aaa
jle
cmc
outsl
xchg
hlt
test
push
divl
jae
sub
jno
in
push
stc
adc
or
dec
xor
iret
insl
loope
iret
cli
cltd
xor
cmp
inc
bound
dec
xchg
xor
inc
cmp
call
jne
dec
or
iret
adc
enter
scas
adc
testb
dec
cmpsl
dec
pop
inc
fsts
imul
inc
test
in
fsub
jecxz
xor
push
into
test
ds
push
add
cwtl
fcomps
add
mov
lods
mov
pop
fnsave
aam
outsb
int
test
popa
arpl
jns
cmc
mov
ds
mov
cmpsb
negl
stos
enter
push
mov
xor
mov
jns
cmp
cmp
daa
fwait
int3
xchg
cmp
xchg
and
cwtl
movsl
sbb
push
ds
cmp
lcall
or
jmp
test
loope
mov
adc
cmc
xchg
ja
out
cli
andl
inc
xlat
push
sbb
rolb
out
sahf
push
ret
scas
testw
mov
add
push
or
rcrl
out
jg
ljmp
into
repz
lahf
mov
mov
jecxz
and
inc
pop
push
adc
cmp
adc
pushf
rolb
in
ficoml
in
push
orl
push
jecxz
push
int3
jmp
mov
xchg
adc
out
out
or
and
push
in
call
inc
scas
sbb
xor
scas
xchg
sbb
adcb
push
lcall
and
aam
xchg
pop
enter
addb
sahf
adc
les
mov
test
test
xchg
sbb
mov
iret
icebp
fs
cmp
add
or
dec
cwtl
push
pusha
add
jmp
imul
lret
or
jmp
sti
testb
cltd
arpl
fmull
dec
push
addl
or
cmp
mov
sub
cmp
jne
adc
sub
lods
xchg
ret
xchg
out
mov
dec
jmp
jb
jbe
test
adc
andl
sbb
js
push
lret
xchg
ja
or
sub
es
push
leave
sub
xchg
imul
sbb
pop
jge
ret
pop
push
dec
test
dec
cmpsb
testb
clc
clc
repnz
xchg
inc
lret
repz
adc
mov
stc
lods
scas
fs
push
imul
mov
jle
push
mov
inc
ja
jne
addb
aam
and
lds
xlat
ret
outsl
rorb
js
rorb
xor
jl
ret
sub
loop
mov
fcomip
inc
into
sti
xor
aas
sbb
loope
mov
and
fldenv
xor
jmp
stc
push
jge
jae
add
dec
out
push
repnz
or
repz
in
ja
sbb
xor
and
fcoml
test
pop
pop
faddl
mov
and
add
movsb
mov
pop
pop
dec
mov
cmpsl
inc
iret
or
jp
cmp
sub
jp
push
aaa
test
and
stos
inc
fbld
in
outsb
mov
aas
xchg
ja
jbe
iret
xchg
pop
jge
cld
data16
mov
in
dec
xchg
add
movsl
out
jge
pop
xlat
add
les
int
mov
movsb
lahf
pop
hlt
xor
sbb
mov
dec
xlat
mov
fldenv
jne
xchg
pop
inc
push
lea
scas
adc
mov
fstpt
cmc
push
sbb
or
mov
fmuls
rorl
jmp
cltd
xchg
fistpll
mov
int3
sub
cs
lcall
out
inc
push
test
dec
lahf
rolb
add
mov
mov
gs
sti
enter
mov
je
cmpsb
leave
daa
loopne
cmc
mov
lock
lea
testb
test
mov
add
cmp
jmp
or
hlt
add
push
test
jb
jae
cltd
ss
in
push
pop
out
add
rcll
movsl
mov
fsts
outsl
stos
lcall
pop
cwtl
pop
xor
test
lret
repnz
rcrl
xchg
sub
jmp
ja
insl
pop
jnp
jne
cld
lahf
sbb
jmp
gs
pushf
in
cwtl
sub
gs
push
pop
shl
stc
test
mov
pusha
adc
jecxz
std
add
pop
imul
movsl
repnz
mov
test
dec
push
sub
test
imul
aam
adc
out
cld
test
xor
test
and
jb
mov
add
iret
stc
push
push
push
shll
ret
insb
pusha
jp
xorb
ds
xor
jecxz
push
out
mov
lds
cmp
fcomi
jmp
mov
ret
add
sub
jno
mov
mov
adc
lods
pop
xchg
test
dec
cmp
imul
add
pop
push
and
rcr
lock
jno
inc
add
pop
sbb
cltd
outsl
xchg
jmp
loopne
pop
repnz
fcmovnbe
negl
cmc
cli
insl
inc
rcrl
inc
xchg
fs
jge
adc
insl
bound
mov
das
int
add
testl
pop
add
orb
les
push
mov
push
aaa
jb
imul
mov
add
adc
jle
jns
int3
jae
lahf
pop
movsl
add
jle
jp
push
dec
popf
dec
outsl
dec
cmp
push
sub
pop
imul
mov
stc
mov
filds
into
dec
add
sub
rcl
inc
popf
pop
jecxz
pop
or
in
or
int3
fidivl
aaa
xchg
pop
icebp
xor
and
int
sbb
push
js
xor
in
and
xchg
sbb
adc
les
mov
push
cli
dec
push
lods
push
rcrb
lds
fcmove
bound
iret
test
mov
ret
hlt
scas
mov
bound
mov
pmullw
xor
jae
jl
cmp
and
not
cmpsl
fnop
call
mov
xchg
pusha
xor
add
add
xchg
pop
daa
cmp
scas
sbb
dec
popf
pop
inc
dec
cmc
jge
sub
mov
mov
insb
cld
add
adc
dec
int3
imul
adc
neg
adc
cmp
push
sti
sbb
jle
push
aad
add
test
aaa
jo
jl
out
mov
jo
popa
test
mov
mov
jmp
jp
xchg
scas
jne
daa
add
stc
inc
mov
xchg
in
push
cmp
in
adc
outsl
scas
mov
shrl
jmp
jg
or
mov
sahf
sub
xlat
push
subb
cs
cmp
fwait
pop
enter
or
fimuls
jg
loopne
add
outsb
inc
fisttps
lret
imul
scas
push
lahf
addr16
js
repz
sub
inc
mov
pop
jecxz
addps
or
jne
into
and
popaw
loop
xchg
in
mov
pop
bound
mov
mov
out
loop
jg
mov
cli
mov
dec
fwait
ror
or
inc
movsl
inc
sub
ljmp
movl
nop
xor
jl
jns
xchg
add
aad
or
push
dec
rol
aad
xchg
dec
or
push
mov
call
or
xchg
test
add
inc
or
push
outsl
dec
imulb
repz
push
fisttpl
fisubrl
jp
lret
mov
and
imul
adc
rorl
xchg
popa
cmpsl
add
shrb
or
mov
sub
stos
mov
mov
adc
cmp
dec
les
call
ja
bswap
cmp
fildl
sbb
pop
xor
loopne
je
mov
out
push
and
inc
imul
mov
test
je
adc
sbb
lret
movsb
insl
lea
cwtl
mov
sarb
sbb
scas
add
repz
adc
xor
cmp
shll
ss
negb
sbb
icebp
cmpsl
push
jle
filds
stos
xor
into
jbe
xchg
insl
roll
dec
enter
xchg
aad
adc
or
sbb
sub
fnstenv
xchg
negb
cmp
ljmp
add
adc
int
in
adc
sbb
and
rcrb
jecxz
mov
fadds
pop
add
pop
jmp
insb
aaa
mov
stos
jae
fucom
xchg
in
sub
shrb
pop
xchg
stos
sbb
jae
xor
jl
push
xchg
xchg
popa
mov
loopne
arpl
ret
add
dec
les
mov
sbbl
jbe
dec
cld
mov
lea
fimuls
fs
iret
dec
imul
into
movsl
dec
lds
adc
sub
dec
inc
xor
scas
lods
scas
fists
and
xchg
xor
jecxz
mov
adcb
mov
sbb
test
ret
jmp
push
jmp
sti
in
xchg
sarb
rol
xchg
rolb
out
dec
or
mov
push
xchg
int3
sti
xor
int3
and
cmpsl
fidivrs
shr
inc
dec
iret
mov
jbe
sub
out
fwait
jnp
push
lock
sar
pop
jge
xchg
adc
pop
mov
sbb
lods
sbb
xorb
jbe
dec
imul
out
or
or
mov
add
xchg
aaa
pop
addb
outsb
xor
pop
jg
xchg
repz
jg
in
xchg
dec
sarl
imul
dec
xchg
mov
mull
mov
or
lock
and
gs
mov
mov
add
fsubl
xor
jns
in
rcrl
jge
pop
leave
xor
mov
dec
ljmp
or
dec
add
pusha
dec
testb
mov
cld
cwtl
mov
push
sbb
pushf
adc
jae
jnp
mov
xchg
jl
daa
or
std
cli
xlat
dec
xchg
xchg
mov
mov
lods
xor
lcall
push
cs
ret
jg
push
push
into
clc
push
mov
scas
adc
cmp
cli
sbb
or
out
je
add
out
fistps
fmull
ret
ds
ljmp
enter
inc
gs
and
sbb
je
cmpsl
mov
xor
dec
inc
stc
xor
xor
add
in
ret
arpl
cmp
lds
add
test
mov
and
dec
out
lods
dec
aas
push
push
xchg
pop
fidivrl
mov
push
inc
aas
hlt
cmp
jno
sub
mov
popf
pop
jnp
pop
sahf
bound
fnstenv
mov
jb
push
aaa
mov
stc
mov
mov
adc
xchg
sbb
fdivrl
sbb
stos
xor
jmp
and
push
imulb
sbb
add
sahf
jbe
aaa
jb
in
add
mov
ja
lods
je
ljmp
stos
cmp
pop
icebp
fldenv
pop
sbb
jg
mov
jne
call
daa
push
push
xchg
adc
inc
stc
pop
test
adc
xchg
out
loope
fwait
mov
or
cmp
mov
pop
mov
push
mov
mov
lret
xor
shrb
outsl
inc
mov
xlat
cli
push
push
push
popa
xor
and
lea
sub
pop
sbb
mov
shlb
jbe
insl
push
or
gs
mov
loope
rcll
popa
xchg
icebp
fwait
mov
cltd
push
push
sbb
dec
xchg
ret
notl
xchg
pop
pop
sub
xchg
sub
sub
rcll
test
mov
adc
cwtl
xor
xor
add
outsb
pop
add
aas
jmp
cmp
add
cmp
adc
das
ret
jp
jne
imul
fdivs
jne
pop
jge
and
mov
and
mov
xor
xor
leave
push
scas
jecxz
jmp
fdivs
adc
popa
es
push
add
aaa
push
mov
lods
sti
stc
push
and
add
daa
adc
cmp
jge
mov
dec
pop
mov
mov
lcall
jp
iret
xor
pop
mov
lds
es
test
add
xchg
sub
inc
orb
clc
jbe,pt
mov
push
dec
loop
sbb
jno
cmp
lods
test
or
mov
adc
fisubrl
push
jle
lcall
inc
shll
gs
dec
push
cli
mov
repnz
fwait
adc
das
aas
mov
sbb
push
das
loopw
xchg
repnz
push
rol
cli
cwtl
add
adcb
add
push
loopne
int3
xchg
mov
pop
mov
cmpl
addr16
outsl
jl
adc
push
js
lea
pop
jbe
mov
jae
nop
mov
in
fisubl
xor
je
push
pop
add
stc
jg
test
inc
orl
lret
and
das
pop
loopne
lcall
xchg
xchg
push
movsb
and
and
scas
mov
push
push
in
jl
jp
mov
xor
jg
sub
cwtl
xchg
pop
pop
repz
cmpsl
ja
xchg
inc
push
int3
mov
dec
in
and
shll
and
lret
ljmp
in
sbb
lds
xchg
sti
dec
repz
cmpsb
movsl
dec
dec
sbb
repz
xchg
test
arpl
leave
aaa
int3
mov
pavgb
call
push
aas
dec
pop
shrb
mov
clc
mov
pusha
push
xchg
mov
xchg
or
and
xor
out
lea
iret
data16
xchg
int
sbb
test
or
daa
and
inc
mov
push
inc
daa
lcall
jmp
adc
dec
mov
les
imul
ljmp
mov
aas
loope
add
mov
jo
fists
mov
ss
fisttpl
loopne
jae
ja
out
fisubs
add
push
sub
ret
outsb
popa
cld
xchg
test
outsb
test
das
loop
mov
insl
and
outsb
dec
shll
divb
push
dec
pop
jle
push
sub
and
ds
mov
mov
lahf
inc
inc
out
lret
idiv
insl
sub
xchg
imul
cmp
pusha
fdivl
jle
dec
imul
xchg
in
movsb
inc
xchg
xchg
push
push
sahf
add
lock
int3
movsl
jecxz
lock
push
lcall
dec
out
pop
mov
pop
inc
bound
and
repz
clc
sbb
stos
jg
outsl
push
xor
mov
fstpl
pusha
sub
pop
or
or
adc
jg
repnz
lock
test
es
or
roll
outsb
mov
adc
mov
or
lretw
in
cmpb
addr16
shl
add
fdivrl
orb
ljmp
adc
xchg
xor
dec
jo
xchg
dec
jmp
cmp
add
add
xor
inc
adc
or
cmp
mov
cld
add
push
bswap
adc
sbb
cmp
mov
enter
lea
daa
add
jl
into
sbb
test
push
mov
xor
subl
stc
popf
mulb
test
shll
or
inc
and
stos
adc
idivl
xlat
add
dec
dec
xchg
les
cmp
int3
lret
mov
adc
imul
inc
add
jmp
push
in
mov
inc
push
fistps
cmpsl
sub
jbe
sahf
popf
sbb
icebp
das
sub
stos
fnstsw
pop
fbld
hlt
mov
aas
dec
push
lock
xor
mov
ja
movsb
push
in
leave
mov
and
jb
push
xchg
fstpl
add
xlat
jmp
movsl
pop
movsl
adc
rep
jle
fstpl
push
sbb
adc
dec
cmp
inc
xchg
stos
and
pop
das
pop
incl
pop
jne
push
adc
fsub
push
xor
std
push
das
push
xlat
int3
dec
test
mov
setne
adc
loop
sarb
out
cltd
fildll
mov
sub
bound
mov
out
outsl
jno
jbe
mull
sub
push
sbb
xor
dec
push
dec
jbe
addr16
gs
lret
cmp
aam
mov
cmp
fs
mov
mov
cmc
mov
cld
daa
loop
xchg
test
adc
sub
mov
inc
std
into
into
push
jns
mov
sbb
cmp
mov
cs
lahf
and
aas
bound
popf
sub
adc
mov
dec
add
and
xchg
xchg
xchg
shlb
ret
lea
inc
cmpsb
mov
addr16
cmpsb
ds
add
jb
arpl
rclb
into
shrl
mov
pop
cld
lds
add
xor
loopne
xor
in
xor
out
cmp
imul
mov
into
inc
out
add
push
outsl
mov
inc
lahf
adc
mov
sarl
loope
in
stos
push
pop
test
pop
sub
data16
psrlq
or
sarb
fsubrs
add
or
or
or
adc
arpl
shr
jl
out
imul
ja
int3
loope
ds
xor
pop
out
push
or
jg
dec
adc
movsl
and
add
mov
mov
mov
adc
add
mov
xchg
nop
adc
jns
out
and
out
dec
aas
mov
push
cmpl
and
cmp
sub
imul
pop
icebp
in
call
sub
aad
cmp
mov
push
subl
jg
or
cmp
dec
lds
ja
sbb
xor
cli
cld
insl
frstor
or
or
cmp
inc
loop
sub
pop
push
orb
cwtl
jmp
repz
sti
pushf
sbb
lods
test
mov
mov
xchg
sbb
jl
mov
dec
push
jmp
sarl
sub
mov
xor
cmp
imul
dec
sub
jo
inc
movsb
pop
xchg
add
sahf
in
sbb
js
push
ret
and
dec
rcrb
mulb
sahf
and
xchg
sub
jmp
inc
js
or
cli
mov
bound
jle
pop
push
cmp
or
out
xor
shll
mov
fimull
ja
sub
cmc
jp
movsb
jb
test
add
jae
das
aas
add
or
pop
xor
addr16
cmp
adc
mov
bound
add
or
adc
mov
mov
rcrl
cmc
addr16
cmpsb
cwtl
adc
push
or
stos
mov
movsl
xlat
xor
jp
jecxz
add
shrl
or
repnz
test
push
or
adc
sahf
mov
sub
testb
mov
push
lock
cmpb
pop
les
notl
add
ljmp
jp
cmpsl
adc
push
and
fmul
insb
leave
mov
add
pop
int3
faddp
fwait
pop
test
test
xor
scas
mov
dec
jp
adc
in
pop
stos
jne
sbbl
pop
mov
cmp
jge
frstor
test
jbe
call
jb
pop
cmp
mov
rorl
fwait
out
sub
sti
pop
dec
sbb
inc
or
les
push
fs
into
inc
push
lock
sbb
mov
adc
fidivrs
scas
mov
dec
adc
push
fwait
loopne
movsb
sbbb
fstl
jp
pop
scas
push
or
push
xchg
movsb
xchg
jae
das
mov
ss
mov
scas
cmp
movsl
inc
sub
sar
int3
mov
xchg
push
dec
cmp
das
scas
fstpl
icebp
stos
inc
cmpsl
stos
in
outsl
lcall
jne
insb
mov
loope
repz
imul
shrb
pop
pop
xchg
stos
cmpb
mov
and
cs
insl
test
mov
lods
mov
jmp
lahf
sub
jecxz
popa
clc
sarb
pop
imul
mov
or
xor
loop
rcrl
jge
test
lcall
and
out
sbb
mov
in
int
fldt
js
out
bndldx
push
enter
test
or
sahf
in
bound
and
insl
mov
pop
jmp
add
inc
icebp
lret
mov
bound
es
arpl
out
xchg
mov
lahf
adc
xlat
out
and
aaa
xor
cld
sbb
cli
jo
cli
xchg
imul
lds
push
test
mov
add
test
push
cmpsb
das
push
dec
fldt
sbb
sti
inc
cld
pop
mov
xor
sti
dec
cmp
pop
push
hlt
jns
in
sub
pop
push
out
jecxz
or
cmp
adcb
xor
idivb
cwtl
dec
lock
andb
in
jns
les
rcrl
mov
jnp
test
shlb
mov
loop
mov
sub
jbe
pop
mov
mov
sub
outsl
fwait
jmp
jecxz
cmp
lods
sub
fsubl
jl
pop
pop
xorb
xchg
mov
popl
dec
cmp
pop
add
mov
mov
pop
mov
aas
or
push
ficoml
push
mov
add
sub
or
pushf
mov
pusha
lcall
lods
or
xchg
pop
int
push
fisubs
mov
xchg
ljmp
imul
rcrl
imull
cmc
xor
xchg
daa
sub
scas
call
push
ljmp
xchg
bound
sub
and
sub
add
pushf
popa
in
jnp
ror
test
mov
dec
push
jg
push
lar
lods
dec
pop
inc
jge
inc
xor
fbld
jmp
sub
or
insb
mov
sub
roll
and
fdivs
pop
call
fdivrp
adc
xchg
or
push
lock
sbb
shrl
sbb
sub
fidivrl
pop
mov
cmpsl
rcll
call
cmp
enter
pop
pop
stos
mov
loopne
mov
clc
int3
or
fiadds
mov
jns
mov
jo
data16
out
pop
and
mov
ss
pushf
movsb
inc
cmp
jns
push
sbb
sub
add
pusha
and
cmp
sub
outsl
fsubs
sbb
lds
lods
imul
pop
cld
xchg
jmp
cmp
push
push
std
xor
rcrl
int3
rclb
dec
lcall
sbb
jo
inc
jp
mov
cmpsb
mov
dec
shlb
xchg
sub
mov
scas
aas
and
fimuls
mov
loope
ficoms
inc
out
iret
xchg
dec
pshufw
loop
notl
test
repnz
mov
lcall
addb
cmp
gs
scas
xor
jp
adc
arpl
js
inc
add
jne
push
int3
imul
testb
pop
cmc
in
lret
or
leave
nop
shlb
sub
jp
mov
iret
in
aas
jnp
loopne
jne
stos
mov
mov
pop
cmp
addl
inc
cld
and
iret
add
dec
popf
cmp
push
in
stc
lcall
out
mov
mov
imul
in
sahf
imul
inc
bound
les
js
jns
sbb
pushf
in
push
xchg
fdivs
lds
cwtl
pop
adc
sar
or
push
sar
andl
cmc
push
scas
outsl
jp
arpl
pusha
test
mov
dec
loop
das
icebp
fsubrl
lock
mov
call
test
movsl
or
fnstenv
jg
and
sbbl
les
sbb
fildll
test
push
dec
dec
leave
xor
in
pop
mov
std
mov
xchg
out
sahf
scas
pop
into
cmp
mov
pushf
cmp
cmpb
ja
sbb
mov
scas
fildl
jne
repz
arpl
sti
testb
mov
cmp
pop
test
repnz
aas
sbb
and
pop
dec
dec
inc
xchg
jbe
mov
or
jnp
sarb
outsl
cmpsb
xor
shll
insb
xor
popa
sbb
sbb
jnp
mov
call
or
xor
dec
lods
fnstenv
xlat
fiaddl
adc
test
in
ds
xor
aad
aad
inc
inc
fcompp
testl
and
jl
cmp
xchg
repz
sbb
ret
jns
pop
stos
js
lahf
push
imul
ds
push
pop
jg
xlat
mov
cmp
aas
filds
pop
cmp
call
mov
or
repnz
xchg
xlat
adc
or
add
sbb
or
fmuls
rolb
dec
inc
push
fdivs
xchg
and
xchg
orb
inc
adc
push
cmp
mov
cltd
or
loopne
mov
cmpsb
ss
insb
adcl
lahf
dec
adc
pop
daa
mov
cld
push
xor
or
xor
mov
jae
mov
lahf
flds
outsl
stc
dec
cmp
in
test
add
or
sub
insb
cld
das
xorb
jne
test
movsb
and
sbb
mov
add
push
mov
xor
mov
or
lret
xor
enter
cmpsb
jmp
cmp
lret
ljmp
or
pop
roll
jns
and
pop
stos
inc
push
dec
mov
and
rcrb
lods
mov
push
push
test
push
bound
scas
xor
popf
repnz
adc
and
call
aas
int
lret
jo
xchg
fnstcw
xchg
in
or
ss
rcrl
decb
dec
inc
stc
movsb
test
idiv
pop
jge
sahf
xor
lahf
push
lret
xchg
pop
jmp
xor
xchg
xor
cltd
out
loopne
movsl
push
sub
cmpsb
push
pop
rcl
xchg
pop
push
jo
inc
negl
test
or
lods
mov
dec
scas
mov
push
sub
pop
jb
jecxz
rcrb
dec
xchg
inc
cmpsb
cmp
pop
adc
jl
push
out
jecxz
xor
sar
test
aaa
hlt
mov
jns
xchg
jo
sub
fidivs
jbe
div
in
or
push
push
xchg
mov
mov
lea
xchg
push
mov
mov
sbb
xchg
push
pop
icebp
idiv
mov
sub
rclb
and
fldenv
xchg
push
outsb
xchg
push
xchg
mov
mov
clc
dec
lret
aas
xchg
movsb
mov
imul
pop
rcll
sbb
call
cwtl
call
lea
repnz
inc
pushf
cmp
sbbb
loope
pusha
insb
and
and
test
sub
add
jmp
inc
lods
in
adc
sub
test
cmp
xlat
xchg
sbb
cli
ret
add
pushl
add
push
aas
cwtl
mov
ljmp
ljmp
push
or
les
enter
fidivrl
std
add
outsb
xorl
xchg
cmc
pop
add
shll
bound
lock
ffree
xchg
cmp
js
jne
dec
push
fldt
test
inc
and
pushf
xchg
mov
sti
jge
mov
adc
mov
aaa
jo
test
xchg
jae
enter
inc
push
addr16
popf
xchg
inc
mov
inc
fisttps
sub
mov
add
sub
sbb
adc
dec
inc
jbe
fs
sub
imul
iret
adc
fnstenv
jp
insb
lds
pop
and
sarl
cmp
lods
jbe
sbb
hlt
pop
jcxz
add
mov
ficoms
leave
push
push
jne
xor
mov
insb
clc
push
xchg
mov
es
xchg
adc
addr16
add
imul
or
je
pop
push
mov
jns
call
cmpsb
push
mov
sub
out
cmp
iret
dec
aaa
hlt
ffree
mov
dec
jg
pop
mov
daa
sub
fsubs
insl
push
imul
and
sbb
jo
xadd
mov
imull
jecxz
stos
mov
iret
cltd
or
arpl
neg
inc
repz
aam
ret
bound
push
fwait
and
mov
fstps
add
js
and
ret
repnz
nop
nop
dec
pop
testb
lret
add
leave
or
test
inc
inc
jmp
add
xlat
adc
dec
movsl
mov
ret
daa
and
aam
xchg
pop
iret
in
das
test
lods
aad
dec
jo
and
pop
jecxz
les
jmp
xchg
pop
sbb
cmc
aaa
jo
into
mov
decl
enter
fists
scas
icebp
aad
pop
je
mov
xchg
mov
repz
aad
call
movsb
mov
push
push
ret
repnz
nop
and
call
or
push
mov
adc
push
pop
xor
mov
stos
loopne
rclb
xchg
jae
aad
push
inc
mov
fiaddl
jmp
repz
lods
lock
rcr
push
cmc
ds
jmp
stos
pop
dec
in
mov
iret
mov
pop
fdivr
add
sarl
dec
xor
lds
aaa
mov
insl
jmp
imul
imul
enter
mov
push
stos
enter
mov
stc
mov
fisubrs
hlt
pop
pop
lret
pop
pushf
dec
xchg
clc
xchg
lea
lcall
jbe
sbb
in
aam
xlat
mov
adc
jmp
je
ljmp
and
rcll
aam
jecxz
in
sbb
movsb
xchg
push
jg
shlb
into
adc
lahf
rcll
push
pop
cs
jl
pop
scas
mov
mov
push
adc
jnp
loop
push
out
es
push
out
call
xchg
mov
push
mov
dec
inc
mov
jl
rol
sub
sarl
mov
push
jne
jnp
mov
mov
xor
sbb
cmove
pop
stos
push
mov
xor
jnp
in
das
outsl
mov
and
cltd
fisttpll
repnz
cli
sti
mov
sbbl
adc
ret
icebp
lret
into
stc
adc
cmp
xchg
sbb
jle
push
inc
and
movsb
shrl
ja
and
idivb
mov
lahf
mov
and
int3
stc
cmp
fists
in
test
and
mov
inc
xchg
cli
jle
arpl
and
adc
mov
inc
outsb
aaa
mov
pop
and
bound
daa
test
out
ret
das
add
inc
xor
dec
aad
rcll
movsb
mov
or
mov
gs
imul
pop
int
jp
xchg
mov
dec
sub
jp
dec
addl
xchg
outsl
jns
pop
sub
xchg
outsl
push
cmp
out
lret
sub
loop
lock
test
pop
xchg
pusha
mov
lods
mov
dec
call
xor
out
test
enter
addb
imulb
xchg
pop
clc
ds
jno
mov
mov
push
push
int3
jne
and
out
inc
pop
jecxz
stos
pop
lods
lock
jae
inc
pop
stc
mov
push
mov
inc
test
mov
push
push
repnz
fdivl
dec
mov
hlt
mov
jno
xor
lock
mov
pop
pop
in
sti
std
cmp
pop
faddl
rorb
push
mov
cmpsl
mov
cmp
test
pop
out
or
gs
mov
fisttpll
sub
inc
dec
push
out
loopne
push
arpl
mov
mov
stos
jge
dec
call
dec
mov
inc
push
mov
stos
imul
xorb
not
aas
mov
xchg
pop
dec
cli
movsl
adc
mov
inc
jns
outsl
les
mov
rolb
outsl
mov
test
mov
in
mov
adc
and
jg
rorb
test
insl
inc
sub
int
sbb
outsb
arpl
mov
add
cmp
inc
mov
lock
pop
add
and
ljmp
jle
popf
lds
pushf
pop
data16
or
and
and
mov
pop
dec
hlt
inc
iret
inc
and
cmp
mov
rolb
lods
add
cli
imul
or
jne
sbb
std
cmp
clc
mov
int3
inc
adc
ja
gs
adc
lock
sbb
sarl
std
popa
pop
cmp
stos
test
jmp
adc
scas
lahf
adc
not
loop
lods
sub
fdivl
sbb
fwait
cmpsb
mov
sbb
fldl
mov
es
cli
xchg
or
mov
mov
outsb
mov
cmpsl
divl
sbb
je
lods
lret
xor
addl
popf
xchg
or
or
repz
add
push
xchg
push
sarl
and
sti
int3
xchg
psrlq
mov
lahf
or
mov
push
sarl
icebp
lret
scas
out
xor
push
subb
mov
sti
xchg
out
test
aam
outsb
sti
test
mov
xchg
das
and
push
outsb
dec
push
push
dec
addr16
enter
pop
mov
ds
add
shrl
and
mov
sti
push
adc
mov
clc
xchg
push
push
inc
inc
into
pop
pop
xchg
imul
rcll
inc
ret
push
sub
mov
mov
push
sub
xor
imul
and
dec
mov
cli
jmp
mov
pop
mov
imul
movsb
push
mov
aaa
sarl
fmul
push
leave
push
aam
or
bnd
cmp
push
pop
sub
push
inc
mov
and
jecxz
cmp
aas
jbe
mov
imul
xor
mov
pop
sti
mov
push
add
in
pmaddwd
insl
xor
cs
xor
mov
push
subb
icebp
fbld
outsl
rol
aaa
imull
mov
xchg
or
gs
in
inc
lods
divb
jg
adc
or
notb
xchg
nop
pop
ja
jbe
sub
mov
mov
cltd
mov
cltd
jnp
or
pop
jmp
imul
int
jge
xorl
jnp
fwait
daa
mov
test
mov
cltd
repz
adc
cwtl
sahf
push
pop
mov
movsb
shl
repnz
pop
push
dec
jb
std
idivb
shld
push
sbb
sub
adc
dec
lds
xlat
out
ss
adcb
mov
adc
pop
and
sbb
dec
sarl
in
decb
mov
enter
add
aam
lods
imul
loope
loopne
stc
addl
xchg
stos
jo
gs
dec
repz
jb
nop
fildl
icebp
sub
int
bound
add
cmp
popf
jle
mov
rcll
xor
aaa
jns
mov
cmp
aam
dec
lret
clc
test
push
jae
cmc
mov
fsubrl
xchg
push
int
inc
pop
lods
pusha
add
out
repz
push
pop
andb
test
jbe
stos
mov
mov
mov
xchg
sti
roll
mov
imul
jg
adcl
sbb
add
or
and
clc
xor
mov
mov
es
xor
xchg
cmp
loope
js
ficomps
outsb
ss
call
fwait
gs
repz
xchg
inc
rcr
out
xor
in
dec
cmc
ret
ds
pop
testb
mov
pushf
xchg
jnp
pop
push
lock
and
ss
pop
jns
cmp
cld
or
sub
or
aam
push
rclb
push
cmp
jno
rcrl
pusha
popl
mov
pop
fsub
dec
mov
xchg
sbb
xchg
mov
adc
and
mov
jmp
jmp
ficompl
dec
mov
sub
push
es
popf
outsb
outsl
or
hlt
fs
test
loop
and
cld
insl
lcall
cmp
in
fwait
daa
fstps
dec
movsl
mov
and
and
arpl
jae
mov
xor
cmp
shrl
or
clc
loopne
dec
lds
cwtl
es
addl
push
das
sub
mov
add
movsl
clc
lds
lds
xor
xor
and
inc
in
mov
and
stos
int
out
cmc
stos
loopne,pt
je,pt
ss
jmp
repnz
dec
js
stos
mov
fnsave
aam
mov
push
add
shl
mov
aam
inc
leave
into
sbb
xor
scas
aas
cmpb
pop
out
shl
pop
sub
cmp
mov
add
add
pop
push
xor
mov
push
jnp
outsb
imul
stc
fwait
loopne
dec
sbbl
icebp
or
stc
jnp
leave
mov
jnp
fwait
cltd
inc
push
push
cmpsb
xchg
mov
or
cmpsl
lret
test
int
out
dec
xchg
fidivs
ja
pop
loopne
inc
out
lcall
mov
andb
inc
sub
pop
fwait
sub
pop
cs
pop
movsl
mov
mov
push
sahf
and
rclb
mov
pop
xor
mov
mov
push
fwait
sub
jl
aad
xchg
xchg
lahf
fisubrs
fldenv
pushf
aad
out
pop
test
iret
nop
cmp
aaa
push
add
lahf
jg
mov
cmpl
cmp
in
sbb
cmp
clc
xorl
push
pop
jb
inc
enter
das
in
shlb
add
push
je
stc
push
push
jbe
sbb
mov
sub
into
sub
adc
fcomps
xlat
cmpsb
mov
je
pop
insb
mov
push
sbb
not
cwtl
repnz
mov
mov
imul
cmpxchg
jmp
arpl
sti
sbb
sbb
and
ret
xorb
or
into
dec
repnz
mov
dec
xor
lret
adc
ret
xchg
adc
and
xchg
int3
mov
cmp
or
push
pop
aaa
into
jo
aas
leave
fs
icebp
leave
sub
shll
jne
pop
inc
sub
and
add
mov
sub
stos
jb
and
mov
add
mov
cli
lret
test
movsl
imul
call
outsl
rclb
adc
insl
in
popa
push
ja
jne
aaa
dec
mov
lods
push
cmp
xor
xchg
call
adc
mov
aaa
pop
mov
jl
xchg
test
jp
lret
add
dec
dec
fisubs
int3
roll
sbb
in
and
and
cmp
jp
loope
sub
mov
lcall
repz
xchg
fdiv
pusha
roll
out
into
pop
enter
jae
nop
jge
sbb
inc
mulb
or
jle
popa
jmp
int
pop
fadds
ss
sbb
in
imul
fidivrs
push
pop
dec
push
lds
aad
mov
inc
inc
outsl
into
sub
dec
lods
jg
push
sbb
lcall
mov
push
sbb
cmpsb
mov
dec
cmp
insb
push
movsl
ljmp
mov
daa
cwtl
outsl
in
add
jno
cmp
xchg
daa
jle
sub
popl
mov
push
rcl
xor
jo
lret
sahf
adc
xlat
fisttpl
cmp
cmc
movsb
pushf
adc
in
test
inc
jl
dec
mov
int3
mov
gs
sbb
cwtl
rcrl
push
mov
dec
sub
outsb
push
subb
shll
rcll
push
leave
jecxz
ret
scas
cmp
imul
jle
bound
ja
mov
push
mov
gs
test
xchg
mov
inc
stos
repz
cmp
out
stc
push
hlt
sbb
and
or
xorb
pop
popa
jns
push
fwait
mov
das
add
test
mov
stos
es
mov
movsb
xchg
sub
push
and
sbbb
test
fldl
mov
je
jmp
and
lods
and
dec
inc
push
lret
add
ja
xchg
mov
adc
fneni(8087
jg
jp
cwtl
cmpsl
shll
jg
cmpsl
scas
out
shll
mov
mov
push
adc
or
jnp
cmp
sti
and
pop
dec
imul
mov
call
cld
push
es
dec
mov
rorb
adc
cmpl
scas
or
sti
loopne
mov
inc
in
lahf
cltd
xchg
mov
loope
loopne
jge
pop
add
cld
mov
ret
push
dec
cmpsl
jecxz
cmp
int
dec
shlb
cmp
sub
xchg
xchg
std
sbb
cld
lock
aad
cltd
cld
push
test
xchg
inc
fdivl
jecxz
sub
pop
shlb
xor
mov
dec
cmpxchg
les
fs
pop
push
pop
mov
js
cltd
sub
mov
jge
pop
push
mov
lods
fdivs
push
orl
ss
push
int3
call
loopne
xchg
insb
repz
in
mov
sub
push
add
mov
sbb
insl
fisttpll
lcall
insl
push
std
mov
xor
sub
scas
xchg
pop
xor
add
fs
mov
push
mov
outsl
rolb
inc
cmp
orl
or
sbb
cmp
or
stc
ja
outsl
pop
xchg
dec
rcrb
push
cmp
popf
mov
enter
fsubr
les
pop
sub
fldl
lahf
cwtl
loopw
cmp
stc
ja
inc
icebp
sub
int3
sbb
sbb
or
sbb
jmp
aad
dec
mov
mov
fadd
jle
mov
sub
testl
mov
xor
and
inc
rolb
adc
inc
pop
inc
or
push
mov
dec
xchg
imul
mov
or
aam
and
sbb
dec
aaa
or
stc
lret
inc
dec
and
push
outsl
lods
mov
adc
or
shlb
shrl
dec
lcall
cld
cs
inc
movsl
shlb
sbb
shlb
sbb
mov
iret
mov
pop
sbb
fidivs
cmpsl
jne
jnp
or
insl
aaa
call
dec
pop
stc
or
or
pop
iret
mov
leave
cmp
inc
cltd
insb
aam
mov
mov
sub
mov
push
gs
add
leave
xchg
cmp
jecxz
jp
pushf
mulb
fstps
in
xchg
loope
in
jno
out
mov
rclb
jo
inc
je
jge
jp
scas
sub
inc
scas
je
call
stos
aaa
repnz
ret
aaa
sbb
test
popf
cwtl
mov
arpl
mov
add
mov
mov
iret
jno
xor
fcmovne
push
xlat
dec
cmpsb
or
xor
push
icebp
jmp
cmpsl
ss
pop
pop
push
pop
dec
std
jne
arpl
or
lret
lds
loopne
arpl
jg
es
ret
or
xchg
mov
outsb
mov
cmc
jb
pop
push
xor
dec
dec
xchg
cmpsb
adc
mov
lahf
push
pop
sbb
sbb
or
xlat
clc
int
lret
add
jp
rol
repz
in
adc
add
push
ret
mov
pop
mov
gs
mov
adc
dec
sti
test
jge
mov
add
cmp
sbb
in
iret
pusha
mov
adc
dec
mov
mov
push
ja
in
push
out
sti
mov
xor
mov
sub
jge,pt
dec
adc
out
das
dec
xchg
in
pop
dec
inc
in
inc
dec
push
nop
adc
lds
inc
sub
inc
and
arpl
sub
fstl
mov
inc
insb
idivl
fsubrs
and
mov
lods
call
fdivr
and
push
xchg
pop
sub
or
fimuls
pop
push
mov
push
or
mov
sbb
pop
fs
xchg
and
pushf
movsb
fsubrs
iret
jbe
dec
iret
push
repz
xchg
mov
jae
leave
arpl
sub
mov
cld
out
cs
jge
push
lahf
movsl
jb
push
repz
int3
or
and
jnp
mov
inc
int3
mov
cltd
mov
mov
xor
or
js
lret
adcl
xor
lock
sub
rclb
add
or
push
adc
fstps
std
out
jecxz
or
fidivl
rorb
rolb
ss
or
stos
mov
icebp
lock
push
test
lret
mov
clc
stc
scas
mov
inc
lds
sub
popa
dec
mov
jno
mov
adc
add
adc
inc
mov
dec
popf
push
xor
repz
cmp
adc
rol
mov
in
pop
cmp
rcll
xor
jg
outsb
je
js
pushf
pusha
call
pusha
popa
out
mov
xor
and
or
mov
lods
adc
cmp
aad
shlb
out
mov
jae
in
mov
push
int3
mov
cmp
pop
or
rol
sub
push
dec
in
andl
sub
rcr
test
inc
sub
icebp
xchg
adc
xchg
xchg
loopne
gs
pusha
rclb
enter
add
jp
mov
pop
inc
sti
testb
mov
jmp
cs
outsl
aad
and
xlat
mov
pusha
rclb
cmp
in
jno
and
incb
mov
rclb
mov
push
shlb
jmp
cmp
xchg
cmp
out
arpl
dec
inc
xchg
pop
jmp
pop
adc
cltd
cltd
in
imul
mov
addr16
in
je
es
out
scas
push
popa
mov
inc
mov
push
insl
mov
pop
mov
sub
pop
push
es
xchg
push
or
aas
gs
stos
jbe
xchg
push
mov
scas
cld
jl
std
sbb
ja
jge
mov
cmp
test
pop
mov
ficomps
mov
int3
lahf
ja
adc
cmpsl
ja
jbe
ret
int
xchg
adc
popa
push
mov
xor
jne
mov
test
xor
arpl
push
out
push
in
jp
mov
pop
lret
fcmovbe
ds
jmp
pushf
pushl
add
mov
adc
lahf
orl
push
movsl
mov
jg
pop
repnz
out
fstpl
movsb
lret
adc
stos
loopne
xchg
jmp
js
push
push
int
fwait
cltd
int3
lea
fisttps
mov
xchg
mov
icebp
cli
daa
enter
cmp
jo
mov
adc
pop
lods
or
repnz
insb
adc
out
mov
xor
or
lds
gs
dec
adc
insl
or
out
aaa
and
adc
hlt
and
push
pop
jecxz
sbb
je
mov
mov
enter
adc
pop
pop
pusha
and
hlt
dec
and
mov
pop
cmp
nop
dec
pop
fidivs
pop
lods
mov
push
inc
dec
imul
out
fs
dec
or
jge
leave
add
sbb
test
je
push
adc
xchg
dec
jbe
lahf
mov
dec
setle
and
mov
bound
mov
daa
mov
add
dec
cltd
push
xchg
add
fwait
sbb
mov
add
and
push
in
and
mov
adc
adc
fcoms
add
mov
adc
js
aaa
xor
xor
mov
xchg
mov
xor
fimull
sub
iret
mov
dec
mov
popf
sbb
out
mov
ja
add
push
mov
test
adc
sarb
adc
dec
and
sbbb
mov
jne
push
aad
jg
mov
mov
mov
enter
pushf
into
jl
scas
mov
cmc
pop
mov
test
outsl
xor
aas
jnp
and
rcll
popf
call
pop
mov
mov
es
or
add
adc
mov
sub
imul
cmp
inc
adc
xchg
ret
dec
or
mov
push
mov
sub
ror
test
sbb
inc
popf
jl
pop
pop
dec
in
popa
movsb
inc
mov
test
xchg
rep
mov
push
push
sub
mov
xchg
movsl
jl
cltd
xchg
xor
lds
add
mov
xchg
lods
lods
xchg
or
repz
pop
shrb
pop
mov
lea
jns
sub
and
bound
xchg
add
js
cmp
cmp
fisubrs
loopne
repz
add
and
mov
sarl
fimuls
push
mov
mov
cmc
loopne
popf
aas
jp
fidivrl
adc
mov
xor
fcomps
push
xor
addr16
scas
dec
std
xchg
imul
sti
gs
mov
pop
in
dec
mov
inc
aad
push
fimull
jae
cltd
adc
test
mov
pushf
out
pop
test
ljmp
jno
pop
les
cmp
push
cltd
mov
aam
rcll
cwtl
dec
sub
sub
loope
ss
add
mov
addr16
addr16
jae
fsub
fbstp
call
ret
leave
inc
dec
jle
inc
pop
mov
and
sbb
xor
cmp
jnp
gs
test
inc
test
mov
mov
rorl
icebp
pop
add
jle
out
lahf
repz
int
repz
pop
pop
mov
mov
push
xchg
frstor
or
sbb
pop
adc
int
fdivs
fs
mov
lcall
cltd
test
pop
xchg
pusha
dec
daa
es
ds
mov
jnp
and
mov
sub
lcall
cmp
push
and
and
inc
test
and
sbb
cld
shrl
in
push
fsubrl
imul
cmp
sub
mov
push
loope
pop
mov
lods
repz
dec
sahf
inc
mov
jg
nop
pop
push
cs
xchg
jecxz
pusha
push
js
dec
mov
rcr
fildll
stos
idivl
mov
es
jg
push
fwait
pop
mov
adc
lahf
jl
jne
adcl
leave
jecxz
lret
sbb
mov
xchg
sbb
inc
xchg
mov
ss
jp
pop
ljmp
jo
cltd
push
iret
jecxz
push
xor
add
mov
testl
mov
or
loopne
popa
ja
inc
lahf
call
jle
xor
das
icebp
gs
sbb
xchg
and
in
sub
imul
mov
sub
cmp
jmp
add
mov
pop
push
sub
ficomps
ljmp
push
movsl
push
cmp
jne
inc
add
xchg
mov
mov
adc
pop
jb
sarl
mov
lods
andb
mov
addr16
xchg
mov
push
gs
mov
push
xchg
push
pop
mov
push
xor
mov
push
in
xchg
mov
pop
sub
mov
call
dec
call
fldl
cmp
xchg
add
sbb
jo
imul
xchg
inc
movsb
jge
inc
lea
in
fdivl
fnsave
mov
std
adc
sub
cmp
mov
push
cmpsb
xchg
stc
mov
icebp
orb
push
or
bsr
lahf
dec
dec
out
jns
add
lea
mov
int3
mov
xor
mov
inc
adc
mov
rclb
cmp
inc
xchg
imul
xor
xor
jb
in
pop
xchg
hlt
pop
mov
sbb
jl
mov
dec
in
xor
adc
jnp
inc
mov
inc
fidivl
add
cmpl
mov
cmp
sub
ret
dec
jecxz
fcom
jnp
jns
test
movsb
pop
movsl
inc
mov
inc
fnstcw
sbb
mov
mov
sub
popf
shll
jmp
or
ret
add
cmc
outsl
das
cmpsb
ja
insb
xchg
push
push
or
mov
gs
mov
xlat
mov
cli
nop
mov
pushf
push
adcl
inc
scas
dec
ljmp
int
mov
fisubs
mov
push
mov
fcmovnu
fsub
mov
sti
inc
push
nop
lock
jg
mov
xor
jnp
jge
and
pop
lcall
in
imul
adc
ret
pop
insb
or
cmp
dec
ret
stos
xchg
mov
sbb
aam
shr
adc
adc
jb
ds
fsubrl
jnp
push
adc
cmpsb
cmpsb
cmpsb
add
out
mov
enter
xchg
sbb
mov
adc
int3
lahf
jecxz
cmp
and
sub
xchg
xchg
cmp
cmc
pop
ds
add
popf
mov
pop
xor
pop
xor
nop
jecxz
and
pop
add
cmpsl
insl
aad
lods
push
lds
cmpsb
push
rcrb
lret
je
xchg
xor
dec
cmp
adc
xor
or
push
inc
dec
mov
lods
das
push
fimuls
cmc
jmp
imul
fmull
bnd
jecxz
xchg
les
push
pusha
add
and
psrlw
add
push
sbb
in
or
mov
fdivp
cs
add
in
rorl
xor
pushf
scas
repnz
inc
popf
jl
adc
std
cmp
aad
ss
cmp
jns
sub
and
jne
je
jge
stos
fwait
sub
pusha
dec
sar
push
loop
je
add
add
jl
stos
cmp
mov
mov
stos
js
in
mov
lret
jge
or
fdivs
inc
adc
movsb
icebp
lock
cmp
fisubrl
lcall
insl
leave
jns
imul
mov
mov
jae
sahf
inc
out
cwtl
jmp
ficompl
adc
loopne
or
data16
jmp
test
sbb
sti
and
or
and
push
subb
int3
mov
adc
hlt
inc
mov
sbb
sbb
out
mov
rcrl
fistl
xor
insl
push
daa
sub
or
test
jae
xchg
cmp
add
repnz
xor
cmp
cmc
cmp
das
jl
and
repz
push
outsb
sub
fisubrs
push
incl
mov
aad
arpl
mov
or
jmp
movsb
pop
or
inc
mov
inc
mov
inc
sub
push
xchg
and
mov
ja
add
and
mov
stos
cmp
jg
mov
les
sarl
cmp
pop
jno
jnp
add
insb
dec
add
push
and
xchg
xchg
mov
mov
and
sub
or
inc
movsl
scas
pushf
ja
mov
mov
or
inc
push
leave
fucom
rolb
add
aad
adc
push
rcr
iret
sbb
es
pop
pop
repnz
ror
xor
push
jge
add
shl
aaa
dec
insb
mov
mov
mov
jmp
in
idivl
mov
xor
shl
insl
add
pop
aad
pop
add
push
mov
movsl
mov
stos
sub
fbld
fidivs
mov
inc
sar
sub
aam
mov
imul
inc
test
xchg
sbb
je
or
sub
inc
test
mov
lret
es
mov
int3
call
fwait
jmp
pop
xchg
mov
pop
ficoml
aad
pop
js
adc
mov
orb
pop
push
cmp
std
push
xor
jae
mov
and
pop
sbb
mov
pop
xor
das
test
jg
stos
ss
xchg
test
fistps
adc
icebp
das
pop
mov
jp
xchg
scas
movsb
sbb
pop
pop
in
stos
in
jo
mov
pop
push
sub
push
clts
xchg
cld
add
cmp
pop
jg
fs
dec
mov
fs
jl
push
and
lret
lock
lret
pop
cmc
fs
in
out
push
xor
jno
leave
sub
adc
bound
mov
add
push
ret
inc
shl
repnz
rcrb
jg
push
nop
mov
adc
adc
jle
into
sbb
or
push
xor
pop
pusha
push
adc
fcompl
scas
mov
sbb
fcoms
inc
les
loop
syscall
scas
loope
lahf
dec
rol
in
or
inc
out
mov
repnz
or
jnp
into
ret
popa
out
mov
jbe
and
push
js
xorl
stos
ss
in
inc
inc
in
insl
lcall
dec
xchg
add
pusha
aam
sub
mov
scas
push
jmp
fwait
or
sbb
xor
pcmpeqd
insl
and
cwtl
push
daa
clc
jno
adc
pop
into
adcl
pop
or
inc
and
and
out
aas
or
adc
inc
and
dec
inc
in
shrl
jno
xchg
insb
arpl
push
cmpsl
and
push
imul
shl
mov
sub
pop
int3
out
in
sahf
dec
test
mov
adc
or
clc
mov
mov
leave
pop
jle
fildl
mov
cmp
test
pop
mov
pop
jmp
in
cld
popf
push
mov
les
daa
fwait
cmc
loop
xor
jmp
jnp
insl
cmp
xor
mov
in
gs
cmp
into
arpl
jp
and
jl
stos
fs
inc
stos
dec
pop
sti
dec
xchg
out
outsl
xchg
ljmp
incb
rcll
aad
or
cmc
and
pop
mov
pop
cld
cmc
cmpsl
pop
ja
data16
mov
cmc
addl
mov
jp
pop
push
in
test
xchg
cmp
fisttps
pop
sbb
inc
mov
mov
sahf
fldcw
pusha
jp
cmp
mov
sub
popa
pusha
xchg
cmp
and
add
shlb
jbe
and
hlt
jb
adc
rcll
mov
inc
pop
cld
inc
clc
sbb
sub
push
xchg
jp
aaa
push
popa
adc
pop
gs
mov
arpl
mov
imul
sub
fldcw
or
ds
std
jno
cmp
pop
hlt
xchg
dec
push
and
sub
dec
test
or
xor
jp
enter
out
pop
es
insb
mov
inc
xchg
adc
inc
cld
stos
mov
cli
daa
aad
aad
jmp
pop
mov
ficomps
push
inc
adc
xchg
int3
sbb
inc
xor
cmp
in
or
outsb
push
dec
xor
mov
mov
lods
lds
test
mov
jl
sbb
dec
mov
xchg
aaa
xor
xchg
and
aas
mov
mov
lods
sbb
cltd
pushf
push
adc
mov
xor
int
outsb
loopne
inc
stos
push
aam
add
scas
in
cwtl
push
mov
mov
xchg
jno
jp
jb
lock
call
cmp
pop
adc
mov
xchg
mov
add
fs
and
sbb
push
mov
dec
lret
fs
adc
je
adc
and
xchg
scas
adc
cltd
mov
and
push
xor
or
mov
and
sub
lret
data16
mov
jl
fsubr
push
test
popl
inc
inc
jge
jbe
push
push
rclb
arpl
out
out
dec
fwait
ret
sbb
shlb
dec
pushf
mov
movl
fwait
pusha
stos
sub
int
dec
pop
sub
xor
sti
aad
sub
push
je
stc
repnz
xor
sbb
xchg
jl
andl
dec
adc
sub
jno
or
jl
mov
aam
jge
pop
daa
ljmp
sub
pop
int3
rcl
sbbl
ficoms
adc
xor
cmp
mov
cmpsb
jmp
or
mov
mov
addb
mov
dec
cmp
cltd
push
fists
cmp
cmpsl
ror
imul
mov
dec
and
sahf
xchg
pop
pushf
mov
out
sub
stc
out
test
ss
notrack
sahf
inc
adc
mov
jae
mov
xor
jecxz
push
jns
dec
shlb
ds
mov
mov
scas
aaa
sub
sub
fs
mov
xchg
fsts
mov
rclb
mov
jne
sub
cmp
jae
shll
sarl
pop
cli
mov
leave
mov
adc
push
cmp
out
add
xchg
add
insb
mov
dec
loop
lods
sbb
dec
ds
je
test
repnz
imul
jp
rcrl
imul
adc
mov
mov
idiv
inc
rol
xchg
and
ss
gs
jg
xchg
add
push
cltd
add
xchg
adc
in
jg
cmp
add
mov
in
lock
lods
cmc
stc
movsl
ja
bound
push
xor
out
repnz
int3
mov
arpl
imul
adc
inc
aam
pop
push
or
inc
out
mov
add
lahf
jne
andb
sub
jo
fidivrs
xlat
arpl
inc
mov
mov
cs
test
xchg
test
or
sub
mov
jae
pop
andb
aam
mov
or
shll
loopne
push
add
mov
or
ret
mov
cwtl
mov
out
fmuls
jle
int
movsl
xchg
pop
sbb
xlat
cmpsl
dec
mov
into
mov
popa
inc
movsb
jecxz
lea
xor
rcrl
pop
add
icebp
push
xchg
xor
or
or
gs
addr16
add
lods
movsl
and
fnstsw
or
jge
rcl
xchg
cwtl
nop
sbb
or
push
dec
adc
out
xchg
outsb
xor
jle
shlb
push
enter
mov
sbb
xchg
addr16
push
inc
ljmp
daa
lret
loope
xchg
bound
scas
jg
in
sarl
push
jbe
cwtl
das
ds
lea
add
insl
repz
daa
lret
cmc
dec
add
xlat
mov
pop
jg
lret
ss
mov
push
mov
jo
ljmp
and
jge
fdivp
das
sub
loope
ficomps
jns
add
scas
ret
push
dec
loope
pop
imul
cmp
push
ds
test
pushf
movsl
sbb
and
adcl
dec
fcom
test
mov
loope
nop
mov
fdivrs
lods
filds
pop
mov
xchg
dec
sar
xchg
mov
inc
pop
mov
out
sbb
andb
jno
icebp
add
fldl
mov
xor
mov
dec
stc
fwait
mov
mov
mov
jns
mov
lahf
mov
sub
in
mov
sbb
std
divb
repnz
xchg
or
dec
fsubl
mov
jo
in
movzwl
ret
inc
sub
mov
fdivp
pop
add
ret
sub
lcall
in
fs
popf
inc
out
mov
lods
xchg
ficoms
push
loopne
rorl
cmp
cmp
mov
xchg
mov
dec
xchg
popl
lret
sub
xchg
lret
adc
ret
mov
outsb
pop
mov
pop
xchg
fsts
insl
out
pop
jo
mov
icebp
inc
cli
add
adc
daa
lods
pop
pushf
dec
lahf
sbb
popf
fxam
scas
test
filds
dec
jo
xchg
sub
test
int3
fcoml
jle
scas
mov
push
push
xorb
add
testb
cmp
xchg
or
pop
mov
subb
lahf
lahf
jge
dec
xchg
nop
dec
dec
sar
sbb
adc
hlt
inc
dec
sbb
pop
cwtl
out
pop
outsb
push
mul
mov
jnp
add
fsubl
add
sub
fcomps
fwait
cmpb
mov
pop
popa
lods
std
movsb
inc
ss
fsubrp
fnstenv
pop
out
into
pop
xor
es
aas
mov
mov
mov
and
into
or
xorb
cmp
loope
imull
add
mov
push
dec
ficomps
sti
testb
pushf
mov
xor
pusha
ja
jb
pop
mov
movsl
test
pop
xchg
rcr
and
inc
imul
mov
les
cmp
cmp
enter
inc
pop
out
test
movsb
test
fs
lods
test
push
inc
inc
adc
cld
ret
mov
punpckldq
mov
int3
jle
xchg
loopne
ds
in
add
ss
or
ja
jmp
xchg
iret
mov
push
in
jle
push
shlb
cmp
sub
rorb
cmp
nop
popf
mov
mov
pop
jo
daa
int
and
dec
or
sar
into
add
xor
flds
mov
push
ss
or
xchg
repz
xor
js
fcom
dec
in
sbbb
pop
out
adc
inc
push
mov
cli
scas
or
pop
inc
movsl
sbb
or
dec
pop
add
pop
mov
loop
call
ret
shrl
das
movsl
dec
jmp
adc
testl
mov
cmpsb
inc
and
cmp
mov
sub
dec
nop
fmulp
out
cmp
mov
adc
cmp
pop
sub
mov
inc
mov
mov
enter
xor
xchg
mov
lcall
clc
sub
mov
nop
add
and
and
addr16
pop
inc
inc
in
cmpsb
mov
popa
or
adc
push
push
test
pop
and
sarl
push
push
enter
sub
test
inc
and
outsl
xlat
ja
pop
mov
xor
push
lods
xchg
dec
mov
pusha
xor
ss
push
mov
xchg
cmp
lret
cltd
xor
mov
mov
jo
xchg
sub
int3
adc
popa
aaa
mov
mov
or
ret
ljmp
push
imul
imul
stc
push
push
push
popf
addr16
aad
lahf
lcall
out
pop
and
mov
mov
inc
and
std
ljmp
cmp
daa
mov
aas
cmp
cmp
popa
outsb
xor
jle
lahf
push
ret
jle
mov
repnz
jmp
dec
push
mov
inc
cbtw
and
sbb
add
mov
lret
push
shll
hlt
sub
adc
adc
jb
in
scas
push
stos
les
push
imul
ret
ret
adc
daa
inc
push
push
movsl
rol
les
imul
cmp
iret
in
sub
adc
or
lds
jg
insb
xchg
cmp
js
xlat
dec
arpl
loop
xor
ljmp
repz
cltd
popa
pop
xor
mov
mov
jo
add
inc
nopl
clc
inc
out
jge
and
fsubrl
dec
mov
push
jge
jne
inc
pop
jle
jbe
or
sbb
add
je
repz
imul
cmc
sti
xor
xor
movsl
push
and
outsb
adc
mov
or
pop
into
cmc
mov
fnstsw
mov
push
mov
stc
push
fmull
mov
addl
fs
mov
sbb
sub
rcll
or
xlat
sbb
pop
push
mov
jl
dec
out
add
pop
scas
mov
nop
mov
xor
rclb
in
mov
cmpsb
adc
stc
lods
fwait
jb
stc
dec
aas
shll
addb
mov
add
mov
dec
aas
pop
dec
mov
xchg
cld
out
adc
leave
sbb
into
mov
test
xor
xor
dec
or
or
scas
jae
or
pop
xchg
push
push
bound
xor
cltd
adc
aad
test
out
ljmp
pop
jecxz
mov
incl
jae
push
adc
and
xor
int
rorb
mov
insl
push
mull
aam
shrb
test
pop
xchg
out
or
pop
stos
adc
stos
cmc
mulb
popl
addr16
insb
icebp
leave
push
sarl
lds
add
or
out
add
hlt
or
pushf
pop
loopne
mov
loope
add
movsl
popf
cmp
push
cmp
dec
lods
xor
push
fwait
shll
jo
ja
idivl
cmp
lods
pop
push
loope
aaa
add
test
xor
test
mov
and
dec
dec
jb
aam
out
ljmp
js
fnstsw
add
rolb
rcrb
sbb
cmp
sti
int
fistl
shl
cmp
shlb
popf
cmp
mov
mov
inc
mov
mov
jle
jge
daa
sbbl
adc
lds
xchg
jge
in
rcl
and
sbb
in
arpl
mov
shrb
add
fmull
lock
push
test
sahf
lock
mov
dec
lods
rcrb
mov
push
ret
subb
jg
sub
aad
jb
xor
cmpsl
sbbl
cld
stos
jp
pop
jns
stc
push
ficoml
xchg
sub
add
inc
fimull
jae
imul
mov
and
adc
daa
cmp
sahf
in
cs
popa
mov
rorb
lahf
push
pop
loope
cltd
stos
mov
rorb
jbe
ja
sbb
ja
mov
ret
and
add
add
xchg
mov
lods
adc
out
push
cmp
insb
arpl
negb
int3
lret
cmp
cltd
sub
or
push
push
push
int
xchg
aas
cmpsl
test
cs
mov
mov
fcmovne
outsb
inc
testl
mov
add
leave
call
xor
push
loopne
adc
test
testb
jae
mov
lahf
pop
mov
mov
or
or
arpl
sbb
lahf
push
in
lea
sub
pop
or
jle
sbb
push
dec
jmp
mov
shlb
shrb
aas
xchg
bound
dec
adc
jae
add
nop
iret
pop
or
add
int
mov
mov
loope
xlat
xchg
pop
gs
lret
add
sub
inc
cmp
dec
sbb
push
push
sarl
mov
cmp
inc
pop
mov
inc
adcl
lea
jle
adcl
mov
jecxz
orl
rolb
push
add
sbb
scas
adc
loopne
outsl
mov
cwtl
test
inc
arpl
enter
andb
inc
repz
lods
mov
out
das
dec
call
sbb
imul
fprem1
test
xchg
repz
cld
jno
bound
xor
je
into
shrl
jb
ret
or
sub
call
inc
enter
jmp
mov
pushf
or
insb
aas
out
adc
ss
les
ret
insb
stc
sub
cmp
sbb
data16
or
cs
mov
les
sbb
cmp
nop
je
sub
and
inc
push
out
xlat
std
mov
and
lock
dec
loopne
inc
je
stos
sub
insb
lret
mov
xchg
jne
sbb
sbb
insl
scas
inc
test
xchg
dec
mov
sbb
in
sbb
lods
or
pop
pop
stos
mov
or
mov
pop
mov
dec
xchg
push
inc
add
sti
pop
es
pop
fisttpll
sub
inc
jne
mov
dec
testl
mov
xor
mov
and
xor
into
mov
cs
sub
mov
sub
push
iret
hlt
ret
je
aaa
pop
adc
fildl
add
xchg
imul
mov
js
xor
es
mov
pop
loopne
mov
and
and
push
les
ja
jg
inc
or
or
int3
clc
shlb
lods
aam
sub
lret
and
sbb
jnp
push
aad
xor
cmp
sarl
enter
or
and
push
cmc
cmp
mov
fnstsw
pop
jg
stos
and
push
push
dec
inc
mov
icebp
adc
jge
sbb
call
jnp
jno
nop
mov
out
cwtl
pop
dec
ss
aaa
outsl
pop
mov
push
mov
and
inc
dec
pop
mov
pop
lcall
mov
lret
notl
scas
xchg
imul
mov
fldenv
or
jns
mov
icebp
mov
aad
inc
lods
sub
xor
xchg
popa
mov
ss
outsl
push
push
add
aam
leave
and
lcall
test
movsb
sti
out
loop
sbb
jecxz
fidivl
cmp
mov
lock
fisttpl
enter
js
orl
dec
pushf
xchg
jb
dec
sbb
mov
pushf
mov
and
push
pop
inc
cmp
sahf
sub
shrl
push
adc
xchg
sbb
ret
mov
or
sub
lock
stos
std
push
sbbb
add
inc
jne
jge
pop
jmp
test
sub
push
pop
jnp
mov
mov
int
cwtl
and
lcall
mov
lret
inc
shl
dec
clc
aam
xchg
fldcw
mov
cs
cmc
lods
pop
dec
xchg
pop
repz
sbb
sbb
add
rcl
rclb
hlt
cmp
out
pop
sbb
bound
sbb
mov
mov
adc
adc
xor
xor
inc
adc
int
pop
push
or
xor
fsubrl
mov
addr16
shll
ficoml
inc
cmp
lret
mov
and
cmpsl
adc
mov
sbb
mov
inc
xor
jmp
test
imul
cltd
pop
shlb
incb
push
in
aaa
in
jp
or
divb
and
xor
repz
sub
push
mov
inc
mov
lret
popl
inc
jo
adc
fisubs
dec
and
sub
enter
popa
jecxz
jge
imul
aam
mull
cmp
icebp
cmp
pop
aad
xchg
mov
pop
dec
lret
adc
rcrb
rcll
imul
sti
lods
mov
out
sub
dec
mov
push
pop
ds
jmp
push
xor
fistpl
pop
push
add
int
fsin
sti
lods
loop
stos
mov
mov
push
repnz
sbb
or
shrb
inc
stc
int
cmpsb
xlat
stc
sub
jns
mov
outsl
sarl
arpl
jb
lahf
lea
jbe
addl
mov
scas
jmp
scas
int3
aas
push
fdivrs
xor
in
fwait
cmp
push
mov
or
cmp
pushf
int3
inc
inc
repnz
xchg
cmpsl
mov
inc
in
sub
mov
jo
push
cmp
dec
mov
inc
lods
insb
enter
test
jnp
pop
mov
fcmovne
mov
add
int
addr16
cmp
and
in
push
insb
stos
push
movsb
sub
xor
loopne
pop
std
mov
fidivrs
test
pop
outsl
lods
fcompl
xlat
int
jmp
outsb
imul
sbbl
mov
or
test
jle
cld
pop
xchg
insb
xchg
mov
mov
ret
dec
push
pop
dec
fldt
out
sbb
mov
push
into
lods
jae
add
push
jne
iret
hlt
adc
sbb
int3
popf
pushf
mov
sarb
inc
jge
jbe
adc
pop
mov
mov
test
dec
jle
fstps
add
bound
sti
pushf
cmp
jbe
dec
fsubrl
jg
outsb
add
mov
mov
cwtl
lock
ja
mov
addr16
cmpsl
mov
inc
mov
lods
pop
dec
aas
es
shll
incb
mov
xchg
shr
inc
mov
xor
adc
subb
inc
stc
mov
sbb
stos
in
inc
pop
adc
loope
out
pop
scas
add
insl
popl
mov
loop
cmpsb
out
imul
xor
stos
or
rorl
ret
push
push
xor
cmpsb
fs
das
xchg
and
or
lret
mov
imul
and
inc
out
jns
cmpsl
mov
imul
lea
lock
add
mov
cmp
mov
mov
aaa
and
in
leave
in
dec
xor
jbe
and
or
push
and
mov
xchg
call
out
cmp
xchg
fwait
stos
clc
cmp
jg
adc
xorl
push
lret
push
dec
jp
mov
cwtl
add
inc
jnp
pushf
cmp
and
insl
inc
xor
mov
insl
lds
cmpsl
sub
arpl
jmp
andl
mov
insb
xor
enter
or
leave
outsl
divb
addr16
out
inc
sub
jo
rcll
arpl
enter
in
xor
xchg
negb
mov
popa
cmp
xchg
mov
loope
adc
repnz
pusha
in
int3
nop
mov
pop
test
lahf
mov
orb
inc
lea
cmp
mov
dec
fstp
jge
jmp
sub
lret
stos
adc
imul
pop
nop
adc
fcompl
sub
out
adc
ja
jecxz
mov
jge
pop
out
cltd
adc
jp
jae
loope
adc
outsb
adc
sbb
mov
pop
out
loope
leave
sbbb
mov
jae
fs
jecxz
jmp
rclb
sbb
sub
aas
aaa
in
or
lock
aam
pop
push
xchg
imul
jb
adc
fbld
lds
scas
leave
cmp
inc
pop
jns
xor
fdivl
gs
loope
pop
lahf
ret
add
mov
or
mov
ss
xchg
pushf
ss
xchg
mov
lahf
pop
mov
push
enter
sub
shrl
sub
inc
mov
mov
jbe
xchg
pop
int
rcl
pop
imul
push
jbe
leave
mov
repnz
pushf
fucomi
popa
mov
test
in
dec
mov
pushf
mov
aam
xchg
fistl
pop
or
xchg
dec
test
inc
sbb
sahf
pop
xorb
in
jle
mov
ja
fwait
pop
dec
mov
push
push
pop
jns
and
sub
add
ret
js
loopne
mov
mov
test
push
sbb
shl
mov
add
leave
and
gs
jo
xchg
gs
aas
dec
pop
push
and
adc
dec
xchg
iret
pop
pop
test
sbb
mov
in
xor
mov
jmp
scas
jo
or
mov
movsb
sub
mov
xchg
std
inc
sub
xchg
xor
jo
cltd
cld
mov
or
lock
adc
imul
xchg
ret
mov
mov
data16
in
cmc
push
ss
jno
cmc
xchg
stos
jg
pop
repz
fs
inc
xchg
fwait
mov
lods
and
int3
pop
or
aas
pop
lods
lret
sbb
xor
test
jo
outsb
pushf
inc
lds
leave
mov
std
int3
inc
fidivrl
inc
or
in
lret
sub
in
imul
test
scas
mov
jg
dec
pop
test
mov
sub
xor
sbb
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
test
and
repnz
or
cmc
xor
stc
xchg
imul
jne
inc
dec
out
mov
and
jecxz
cmp
cmpsl
out
mov
cli
stc
sub
int3
popa
xor
inc
mov
lcall
sbb
popf
test
xor
in
inc
ror
cltd
cli
aaa
add
mov
jg
dec
lcall
push
sub
dec
mov
in
aaa
call
stos
sbb
dec
mov
mov
clc
fidivrs
dec
xor
xor
sbb
neg
aas
dec
jmp
dec
jle
push
xchg
idivl
sub
nop
sbb
outsb
pop
insl
movsb
cmpsb
jne
les
mov
imul
fst
test
lock
mov
loope
add
jecxz
jne
inc
inc
test
mov
adc
mov
and
insb
pop
shl
lcall
xor
lds
out
out
add
add
xchg
or
push
mov
adc
cmp
or
lock
sub
push
xor
js
mov
mov
aaa
cmp
mov
jne
cli
pop
mov
jg
mov
pop
cs
jns
in
inc
push
inc
addr16
xchg
cmpsl
ret
int3
rol
sub
inc
jp
add
add
add
add
xchg
add
inc
xchg
lea
dec
dec
jns
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
dec
mov
add
popf
mov
