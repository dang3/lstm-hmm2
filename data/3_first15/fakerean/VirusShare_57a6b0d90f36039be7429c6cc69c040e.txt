jno
add
divb
rorb
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
das
test
add
jl
insb
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
inc
mov
adc
inc
and
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
out
mov
push
mov
test
je
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
jle
inc
add
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
pop
xchg
inc
add
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
mov
add
add
add
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
add
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
xchg
inc
add
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
jne
inc
add
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
ret
inc
add
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
fisubs
and
call
add
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
add
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
add
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
inc
add
push
and
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
sbb
add
add
xabort
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
pop
sahf
inc
add
or
add
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
sbbl
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
outsb
popf
inc
add
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
mov
add
mov
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
fwait
inc
add
mov
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
lahf
xchg
inc
add
add
test
or
test
dec
and
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
push
push
and
lea
mov
movl
movl
movb
roll
mov
jbe
inc
add
mov
arpl
add
dec
and
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
add
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
add
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
add
loop
add
add
call
mov
roll
out
add
test
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
add
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
push
lea
push
call
add
lea
push
push
call
mov
test
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
movl
call
test
je
movb
testb
je
mov
test
jne
test
jne
cmpb
jne
push
lea
movl
call
mov
mov
lea
push
push
mov
call
test
mov
js
mov
test
je
cmpl
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
mov
mov
movl
je
movzbl
mov
mov
push
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
lea
push
push
push
call
test
mov
js
cmpl
je
mov
test
je
mov
cmpw
je
xor
mov
push
mov
lea
movl
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
lea
call
test
je
mov
mov
mov
push
push
call
lea
call
mov
mov
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
les
or
push
add
or
jmp
mov
mov
lea
lea
mov
cmp
je
mov
mov
sub
cmp
push
jne
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmp
je
mov
push
mov
add
mov
mov
mov
mov
lea
mov
mov
call
test
je
mov
mov
push
call
mov
nop
mov
xchg
add
mov
add
pop
roll
add
enter
in
add
scas
mov
add
pop
testl
add
loope
pop
icebp
lcallw
scas
sahf
jb
out
add
hlt
roll
push
add
push
popf
cmpsl
fwait
xchg
add
rolb
add
mov
add
add
test
call
add
rolb
in
js
insb
jbe
add
mov
add
lods
add
add
lret
stos
mov
add
cmpsb
add
cld
push
push
ljmp
imul
clc
ror
add
add
add
aam
jnp
lods
xlat
push
push
je
add
xchg
js
push
incb
add
add
mov
add
push
push
push
push
push
lea
push
push
push
push
call
cli
fildl
test
add
add
add
push
mov
pusha
fdivrl
add
lods
add
addl
add
testb
jge
add
add
data16
mov
clc
stos
in
add
movsl
cli
add
pop
imul
imul
xchg
jge
add
jmp
aam
cld
lea
pop
movl
push
push
lea
push
lea
push
push
push
call
into
lcall
in
add
shll
add
mov
fcoml
mov
loopne
add
add
stos
add
mov
add
data16
sti
push
lods
scas
add
nop
add
add
pop
hlt
add
fcoml
leave
mov
movb
movsb
shr
imul
add
push
mov
int3
add
cmc
add
pop
out
jno
pop
popl
push
lea
push
push
push
call
movsl
rolb
push
add
cltd
movsb
add
add
addl
add
cmc
add
add
lods
mov
jmp
push
add
add
add
add
add
add
add
mov
xchg
add
fwait
add
add
add
add
cwtl
add
add
rcll
add
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
push
test
add
add
cmpsl
add
in
stc
xchg
rcrl
jae
add
rcrb
pop
add
mov
jmp
clc
add
push
add
add
call
ret
add
add
roll
add
ja
add
add
out
rcr
data16
mov
scas
add
mov
jge
lret
add
loop
popa
mov
lea
pop
push
push
push
push
lea
push
push
lea
push
push
call
add
add
cli
mov
sar
in
push
jns
add
add
add
cmpsl
add
aam
loope
mov
add
xchg
mov
add
jle
sbbb
out
add
scas
add
movsb
movsb
add
movsl
xchg
add
xchg
add
orb
jl
add
add
add
sahf
jnp
pusha
movb
mov
add
aam
bound
call
push
push
lea
push
call
pop
add
add
lds
leave
push
mov
test
add
xchg
out
scas
add
mov
imul
add
mov
stos
add
test
movsb
lret
fsubp
push
add
ljmp
add
add
cli
scas
mov
int3
iret
xchg
outsl
add
add
add
mov
mov
addb
mov
mov
lea
pop
call
push
push
lea
push
push
lea
push
push
push
call
sti
ljmp
add
ret
mov
pusha
add
add
fiadds
in
pop
clc
fnsave
mov
in
addb
lods
push
xlat
pop
lea
add
scas
test
push
jo
mov
fisubrl
add
fiadds
mov
hlt
jne
add
shr
movb
mov
mov
add
jmp
mov
lea
pop
call
jmp
push
push
push
push
lea
push
push
lea
push
push
call
idivl
fldl
pop
add
add
movsb
cmpsb
lea
jecxz
add
add
jle
add
lahf
pushf
mov
add
imul
ljmp
mov
add
add
iret
add
test
test
add
rcr
jnp
add
push
add
insb
test
in
add
jl
pusha
mov
add
pop
add
xchg
add
pusha
and
push
push
push
push
push
push
push
lea
push
lea
push
call
insb
add
loope
xlat
imul
add
mov
cwtl
mov
xchg
lods
popa
add
add
int
add
cwtl
push
stc
add
pusha
add
scas
add
add
xchg
cltd
fadds
add
add
xchg
movsl
add
testb
int
ljmp
or
les
hlt
ret
add
sti
mov
lea
pop
mov
push
push
push
push
push
lea
push
push
push
push
lea
push
call
hlt
pushf
add
fldcw
jecxz
jecxz
mov
add
mov
add
aad
aad
lahf
movb
cmpsb
roll
cmp
add
mov
jmp
mov
cltd
jmp
bound
lretw
movsl
mov
xchg
sahf
add
add
cltd
push
ja
add
lods
test
add
jbe
mov
lea
pop
mov
push
push
lea
push
push
call
mov
add
ret
pop
fldenv
add
into
les
xlat
add
add
push
cmpsl
add
jae
mov
add
lods
push
add
push
add
cltd
add
mov
push
add
loope
add
movsl
add
add
iret
add
mov
call
jae
in
mov
add
mov
lea
pop
add
push
push
push
push
lea
push
push
call
add
add
in
rolb
mov
rolb
add
add
mov
mov
xchg
jecxz
stc
add
int
jle
add
mov
mov
add
ja
jl
jo
add
add
popa
add
mov
add
push
add
out
add
add
fdiv
mov
push
scas
jbe
add
pop
add
add
mov
xor
push
push
push
lea
push
push
push
push
call
mov
imul
in
add
push
je
jae
les
add
mov
pop
lcall
mov
pop
add
popf
jb
ficoml
add
ljmp
xchg
jae
push
repnz
add
aad
add
imul
push
add
je
call
pusha
ret
mov
lea
pop
add
call
push
push
push
push
push
push
push
call
out
pop
xchg
mov
bound
add
add
test
add
add
shl
jne
add
add
add
add
lock
out
mov
popf
add
add
add
add
stos
add
xchg
pop
mov
mov
lcall
add
mov
imul
pop
add
add
mov
lea
pop
mov
xor
push
push
push
or
inc
add
add
sub
sub
add
sub
add
pop
pop
push
push
push
call
test
enter
jnp
in
add
mov
mov
hlt
push
aad
xchg
mov
lcall
push
cltd
les
push
add
mov
aam
pop
ret
movl
mov
xchg
xchg
add
ja
add
mov
arpl
lds
jae
mov
stc
mov
cmc
pop
ja
mov
testl
add
testb
pop
pushl
call
mov
push
push
push
push
push
push
call
call
xchg
jp
add
aad
mov
int
lcall
push
aad
pop
addr16
addl
add
jns
jae
in
pop
add
movsb
movsl
add
insb
add
add
mov
movsb
fiadds
jecxz
add
addb
ljmp
test
add
neg
out
xchg
stos
add
lods
add
mov
pop
movl
push
push
call
add
mov
add
jno
lahf
lcall
add
out
stos
add
add
add
pop
arpl
xchg
add
int
add
ret
jmp
add
popa
iret
jb
xchg
xchg
sahf
add
push
add
jno
mov
enter
add
jns
mov
add
add
push
orb
lea
push
pushl
push
push
push
lea
push
push
push
push
push
call
fs
add
pop
add
lret
add
insb
lock
call
jo
push
xchg
jmp
xchg
add
aam
mov
ljmp
pusha
lods
add
mov
add
xchg
nop
lock
add
add
mov
mov
add
add
jle
mov
add
shlb
lea
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
popf
lods
add
cmpsb
in
add
push
add
scas
add
enter
jb
out
hlt
add
add
subb
std
lea
ret
test
imul
add
mov
in
mov
shl
jnp
push
fiadds
arpl
int
add
add
jl
into
out
cmpsb
mov
rolb
cltd
mov
mov
lea
pop
call
pushl
pushl
push
lea
push
push
push
push
lea
push
call
pop
fiaddl
data16
add
jle
add
imul
add
add
mov
in
add
jnp
arpl
mov
jae
add
xchg
add
pusha
add
mov
loope
roll
jae
add
add
je
fwait
loop
mov
add
mov
rorl
call
push
push
shl
inc
add
push
and
add
rol
shl
sub
ror
sub
xor
add
not
ror
pop
lea
pop
push
push
push
push
push
call
ficoml
add
out
add
add
add
cmpsl
aad
mov
outsl
test
xchg
add
add
pop
add
mov
add
xchg
ret
add
jecxz
add
mov
push
mov
test
add
add
add
add
js
icebp
jmp
add
add
add
mov
add
pop
pushl
push
push
push
push
push
push
call
scas
mov
cwtl
out
mov
mov
add
outsl
add
lret
aad
rclb
data16
js
insb
add
call
jmp
fs
lea
add
mov
mov
test
mov
add
adcl
sti
mov
jmp
jo
push
add
add
mov
rolb
add
xchg
push
leave
add
pop
call
push
push
push
shr
push
or
inc
add
add
shl
sub
sub
sub
sub
add
pop
shl
sub
sub
pop
push
push
push
push
lea
push
push
call
add
add
add
int
xchg
push
ja
add
addr16
add
out
hlt
call
fstps
xchg
mov
nop
aad
add
jle
jne
jmp
clc
cmpsl
mov
add
jp
frstor
popf
iret
fcom
mov
jbe
mov
mov
loopne
add
cwtl
pusha
movl
pop
jle
mov
add
jp
add
add
add
pop
push
push
push
push
push
push
lea
push
push
push
push
call
pop
add
movsl
idivl
loope
pop
add
pop
pop
add
imul
out
pusha
clc
add
push
add
add
jns
xchg
add
mov
add
add
add
add
iret
add
mov
test
jnp
add
add
sub
add
add
pop
push
call
mov
push
lea
push
call
mov
test
popa
pop
jbe
add
jo
add
add
mov
inc
jp
add
add
add
xchg
pop
sti
xchg
push
jo
stos
add
mov
pop
pop
scas
add
flds
add
add
cwtl
mov
add
std
add
movsb
push
mov
roll
add
add
pop
int
mov
mov
lea
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
jo
jno
add
add
push
in
push
add
mov
add
bound
add
stc
add
add
pop
jmp
xlat
push
add
add
mov
data16
add
pop
test
add
fwait
lods
add
add
fildl
add
popf
mov
movsb
add
add
add
je
add
in
add
stc
add
imul
add
or
lea
pop
push
push
push
lea
push
push
push
push
push
call
add
bnd
arpl
jle
fwait
add
add
add
lret
xchg
leave
xchg
add
mov
popf
mov
mov
add
cli
push
xchg
add
jne
push
mov
out
push
xchg
add
in
xchg
pop
stc
fidivs
mov
add
add
add
movsb
test
add
add
pop
mov
push
push
push
push
push
push
push
call
add
loopne
add
mov
pop
imul
mov
add
push
bound
xchg
ret
xchg
add
lods
mov
add
push
rcrb
add
out
sub
je
call
add
cli
faddl
andl
push
add
add
add
imul
add
mov
push
shrb
fiaddl
add
add
shrb
add
add
add
add
shrb
imul
out
add
add
pop
add
add
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
add
std
add
cmc
add
lcall
add
mov
out
sahf
add
jo
leave
add
testl
lret
add
shlb
add
add
stc
jns
into
cli
mov
add
add
add
add
mov
mov
in
lods
stos
mov
add
loopne
outsl
bound
add
pop
xchg
repnz
add
add
jbe
mov
aam
bound
pop
add
mov
xor
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
jge
imul
xchg
in
stc
pop
add
add
add
add
add
std
add
iret
nop
xlat
ljmp
add
add
popl
stos
ficoml
add
in
jnp
hlt
pop
cli
stos
add
mov
add
cmpsb
mov
add
add
fidivl
js
pusha
add
pusha
call
mov
add
add
add
add
mov
mov
lea
pop
add
push
push
lea
push
call
add
add
roll
mov
gs
add
icebp
test
cmpl
add
jmp
mov
jns
popa
movb
add
fldcw
lret
xchg
xchg
lods
jb
add
add
add
add
add
test
popl
push
add
outsl
push
add
scas
mov
add
mov
insb
add
mov
std
push
add
jno
add
arpl
add
add
add
add
pop
push
mov
xor
push
push
push
call
add
ret
add
xchg
push
imul
int
jb
mov
jle
pop
ja
ja
add
cli
jge
addl
mov
add
test
loope
add
add
ljmp
mov
add
add
hlt
add
add
add
add
movsl
mov
add
lea
pop
add
push
push
call
jae
jle
incb
iret
mov
add
add
adcb
fcmovne
pop
push
mov
cltd
jnp
add
scas
mov
addr16
fcmovnb
add
insb
add
add
cmc
add
mov
add
add
pop
popf
fadds
int
add
add
imul
add
lods
mov
lea
pop
pop
push
push
call
add
cli
add
add
imul
add
pop
pop
mov
add
add
mov
out
jle
pop
mov
lock
xchg
ljmp
loope
fldl
jae
add
movsb
jl
add
bound
add
add
out
jo
add
jbe
mov
add
clc
add
add
pusha
shrb
jp
add
add
aam
jecxz
call
data16
dec
sbb
movsb
shll
lahf
push
lea
push
push
push
call
push
lods
add
push
mulb
repnz
js
pop
arpl
push
add
pop
xchg
jle
loop
add
in
add
add
push
movsl
add
add
xchg
popl
add
movsl
fcmovnu
hlt
cmc
add
mov
add
fdivr
scas
jae
add
add
data16
xor
push
lea
push
push
push
call
add
add
cli
lahf
mov
add
add
add
pop
sahf
pop
add
push
add
add
out
push
add
add
in
add
int3
jge
mov
nop
add
int
pop
add
cltd
mov
cli
clc
in
stos
loop
xchg
add
test
add
jp
jecxz
cld
add
xchg
add
mov
std
iret
mov
fmull
les
add
push
push
lea
push
call
scas
add
push
add
add
leave
add
add
add
add
cld
add
stc
add
mov
mov
shrl
in
jp
push
xchg
sahf
add
loope
add
add
add
add
pop
add
add
xchg
mov
mov
add
add
add
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
shrb
add
fsts
lock
les
jecxz
je
cld
jl
add
add
add
cwtl
cwtl
roll
imul
sti
jp
push
add
mov
lock
add
add
add
push
add
mov
testl
fildl
gs
add
jle
push
xchg
add
lret
mov
lea
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
call
add
mov
hlt
std
jb
jecxz
mov
add
mov
outsl
add
sahf
push
bound
jae
fucom
nop
xlat
add
jb
add
into
add
mov
mov
sti
lods
add
add
xchg
add
fcoml
cmc
add
in
add
mov
add
rorl
xor
push
push
push
push
lea
push
call
nop
add
add
cwtl
add
add
stos
mov
add
add
add
add
jge
mov
add
add
push
testb
mov
ljmp
add
sbbb
pop
jecxz
add
mov
add
add
loop
aam
bound
add
sub
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
pop
incb
xlat
repnz
out
popa
jnp
push
add
add
imul
add
xchg
enter
mov
xchg
xchg
add
not
pop
push
add
insb
popa
int3
add
add
push
mov
push
add
push
add
pop
idiv
test
adc
add
test
jo
add
jle
jns
add
push
add
data16
push
lea
push
push
push
call
out
add
lret
add
mov
mov
js
add
add
lock
pop
add
add
int
pop
jns
add
add
ret
mov
mov
add
add
jge
out
imul
mov
push
lret
add
add
add
add
addb
pusha
adc
movsb
push
push
call
cld
add
jnp
lahf
add
jo
mov
les
movl
push
xchg
loop
add
les
add
arpl
mov
stc
add
xchg
push
jmp
mov
ja
mov
stos
add
add
add
fildl
testb
push
add
jbe
add
add
add
push
mov
addr16
pop
push
mov
or
push
lea
push
push
push
push
call
pusha
mov
mov
xchg
stos
js
xchg
lods
add
lods
jle
add
leave
jecxz
gs
hlt
add
pop
mov
fldl
jecxz
jno
mov
lret
mov
add
in
add
pusha
jnp
lods
add
add
add
loope
jns
add
mov
add
outsl
add
add
add
mov
lea
pop
mov
push
lea
push
push
push
push
lea
push
push
push
push
push
call
je
jge
js
add
test
add
push
add
add
jbe
lret
jno
ja
jbe
std
add
xlat
addl
add
add
add
popl
mov
fnstenv
add
jmp
xchg
call
insb
mov
mov
add
mov
into
jno
data16
popa
lahf
adcl
add
sahf
rcr
add
pop
add
add
add
push
lea
push
lea
push
push
call
add
add
add
add
push
loopne
mov
mov
mov
mov
cmpsb
pop
mov
xchg
add
push
add
add
add
leave
in
out
enter
cltd
stos
iret
icebp
mov
mov
aam
jno
add
iret
push
fdiv
pop
mov
fwait
add
add
fidivs
andl
iret
jecxz
mov
adc
inc
cmp
sti
push
push
push
push
call
repnz
mov
test
cmpsl
jne
add
add
add
fcmovb
pop
add
add
lods
add
mov
lock
add
add
lock
add
scas
mov
mov
add
add
fbstp
add
add
add
add
add
jno
out
lahf
loope
aam
cltd
mov
xchg
add
mov
call
rcll
lea
pop
mov
xor
push
push
push
lea
push
push
push
lea
push
call
ljmp
jge
add
add
mov
mov
xchg
add
mov
lods
mov
add
int3
add
nop
aam
add
add
popa
mov
xor
lret
in
mov
fisubrs
add
jl
jle
flds
fadds
mov
mov
add
popf
fimuls
pop
mov
push
push
push
push
lea
push
call
shrl
push
jb
xlat
test
add
lods
xlat
push
add
jp
mov
rolb
mov
add
loop
cld
int
push
add
add
add
fsubl
add
mov
add
add
fisttpll
add
fsubs
add
add
add
add
lret
arpl
add
xchg
leave
mov
pushf
mov
lea
pop
xor
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
int
roll
add
mov
lock
in
add
in
mov
push
pusha
cmpsl
imul
add
aad
add
mov
add
mov
add
faddp
imul
add
xchg
addr16
stos
add
add
mov
mov
lea
pop
add
push
lea
push
push
push
push
call
add
add
jmp
pusha
push
std
test
loope
mov
scas
mov
imulw
cmpb
add
cltd
les
pushf
add
xchg
in
les
mov
push
add
add
int3
add
add
int
jbe
jp
add
add
nop
fistpl
pop
mov
lea
pop
add
push
push
lea
push
push
push
push
push
call
flds
add
mov
push
movb
add
pop
mov
in
into
lcall
mov
cli
lea
add
fwait
xchg
cwtl
jmp
add
add
mov
cmc
int
add
int3
clc
add
rolb
arpl
jbe
divb
jmp
loopne
shl
stc
pushf
stos
push
ja
movsl
jmp
cld
lea
pop
add
mov
push
push
sub
rol
push
sub
add
not
shl
add
sub
add
add
shl
pop
dec
add
pop
push
push
push
push
lea
push
push
push
push
call
mov
sbb
pop
sahf
mov
mov
mov
iret
add
add
aad
fcmovb
add
add
mov
xchg
add
add
add
bound
mov
push
mov
add
add
out
pop
add
addr16
push
std
shrl
pop
scas
add
add
lods
mov
lea
pop
pushl
call
push
push
push
lea
push
push
call
test
fxch
xchg
add
add
cwtl
add
loope
jns
jge
add
add
add
jmp
add
int3
add
cltd
mov
add
mov
add
clc
movsb
imul
addb
xchg
add
jle
les
add
lret
add
add
insb
scas
ja
arpl
cmpsb
add
add
pop
push
push
push
xor
sub
push
xor
add
sub
sub
xor
shr
pop
dec
ror
pop
push
lea
push
push
push
push
lea
push
push
push
push
call
pushf
jge
add
cld
xlat
xchg
jecxz
mov
push
mov
loop
add
add
pusha
jmp
leave
jecxz
add
add
mov
jo
add
add
xchg
shr
mov
mov
mov
iret
clc
push
fstpl
push
insb
add
push
add
add
pop
push
push
push
push
lea
push
call
add
add
cltd
repnz
jbe
add
mov
insb
cld
add
push
add
jno
lcall
out
imul
add
int3
add
out
xchg
scas
mov
add
add
in
add
jge
mov
jns
mov
lea
pop
push
call
mov
push
add
pop
push
push
mov
push
pop
add
push
sub
sub
sub
pop
add
add
mov
push
push
push
push
push
push
push
push
push
push
push
call
add
mov
fwait
imul
loopne
add
add
out
loope
test
test
add
pop
nop
enter
roll
fcomps
push
cmpsl
add
add
popf
loop
popf
add
popf
add
xchg
lret
sti
flds
mov
push
add
mov
cmpsb
rcrl
xlat
gs
push
jmp
test
lea
pop
xor
push
push
push
call
add
push
add
jno
add
add
fnsetpm(287
add
mov
jae
add
add
stc
xor
test
out
std
aam
mov
jp
add
movsb
push
rolb
fdivr
int
mov
mov
add
leave
jns
add
mov
xchg
rolb
lret
lahf
movsb
add
jns
add
aad
add
add
add
in
fwait
shll
hlt
lea
pop
add
push
lea
push
push
call
xchg
lcall
jae
mov
xchg
add
jne
negl
clc
xchg
divb
pop
add
filds
test
pop
cltd
add
add
mov
fbstp
add
test
insb
in
push
add
add
pop
jnp
push
add
roll
xchg
add
add
add
add
add
jp
xchg
shl
ja
sar
add
pop
add
test
mov
lea
pop
add
push
push
lea
push
push
push
call
mov
addr16
mov
add
scas
add
add
in
add
add
push
add
add
jge
add
pop
jbe
jmp
jne
mov
push
add
jmp
lret
insb
cmpsl
data16
cltd
rcll
add
clc
addr16
push
jbe
add
pop
add
add
xchg
pop
pop
jo
mov
lea
pop
push
mov
xor
push
shr
dec
pop
add
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
sti
movl
lds
lahf
mov
add
add
jp
mov
stc
add
add
add
mov
fs
add
mov
add
mov
orb
jmp
add
ljmp
mov
add
xchg
add
xchg
les
add
jnp
nop
incb
fstpt
leave
add
rorl
lea
pop
xor
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
push
clc
loope
add
aad
add
add
push
sahf
add
add
jno
jmp
loop
stos
add
in
test
mov
jbe
xlat
gs
jne
pop
pop
scas
into
mov
add
mov
insb
aam
lret
add
popa
in
add
add
in
fcoml
into
movsb
add
add
add
into
add
add
fldl
add
add
fwait
pusha
mov
lea
pop
add
push
rol
pop
rep
mov
xor
push
xor
shl
add
pop
or
je
mov
push
push
push
push
push
push
push
call
imul
mov
push
hlt
int
cmpb
lret
add
cmc
add
ljmp
cmpsl
add
stos
filds
cli
jbe
pop
add
add
mov
add
xchg
aad
xchg
add
loope
mov
add
push
add
shll
test
repnz
add
add
aam
gs
lds
add
add
add
mov
lea
pop
xor
push
push
push
push
push
push
lea
push
lea
push
call
add
movsl
mov
add
add
mov
lods
shrb
cmpsl
add
scas
mov
push
mov
add
add
add
mov
xchg
add
add
mov
int
arpl
add
push
les
sbb
jmp
fldl
add
in
jge
add
add
lea
pop
add
push
lea
push
push
lea
push
call
loope
scas
test
add
add
push
add
push
add
push
mov
imul
lods
add
js
mov
imul
add
rcl
add
mov
stos
loopne
add
mov
loope
mov
mov
jmp
ljmp
sahf
add
mov
add
mov
jo
mov
push
mov
movsb
addr16
data16
add
add
pop
add
pop
mov
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
popa
add
popf
jo
cmpsb
add
mov
outsl
add
filds
negb
mov
cwtl
les
test
add
add
add
xlat
add
out
bound
add
add
mov
add
imul
mov
add
int3
cwtl
test
into
andl
fildl
xchg
mov
js
scas
add
add
add
lea
pop
xor
push
push
push
push
lea
push
push
call
add
jo
lahf
test
test
filds
mov
xchg
movsl
sar
add
add
leave
pop
pop
cld
movsl
test
lret
add
lods
add
imul
mov
lock
fists
ficoml
add
add
sar
add
mov
add
add
add
rorl
add
add
mov
add
add
sbb
les
add
push
shl
pop
add
add
push
push
push
push
lea
push
push
push
push
push
push
call
call
push
mov
mov
add
add
cwtl
add
std
incb
ret
mov
jecxz
mov
add
add
jns
lock
in
add
pop
scas
push
add
add
add
add
insb
fs
xlat
pop
leave
mov
cmpsl
int3
add
mov
int3
lea
pop
mov
push
push
push
lea
push
push
push
call
rcrl
xchg
mov
xchg
add
pop
add
add
add
hlt
lcall
jp
bound
out
lahf
xchg
add
add
int3
popf
pop
mov
in
insb
add
add
sahf
fiadds
add
jmp
push
lods
rclb
xlat
add
add
fdivrl
add
add
add
xchg
roll
add
push
mov
mov
lea
pop
xor
push
push
push
push
call
adcb
add
in
push
add
pop
add
add
iret
loop
lahf
add
iret
aad
add
js
jbe
jmp
fistpll
gs
add
add
jmp
mov
cli
add
insb
push
mov
pop
out
add
add
mov
fneni(8087
mov
add
add
lea
pop
add
push
push
push
push
push
lea
push
lea
push
push
push
push
call
pop
jae
add
mov
add
loopne
add
movsl
add
cld
movsl
add
movsl
scas
mov
push
pusha
add
xlat
lret
loopne
out
add
cmc
loope
lcall
add
sahf
add
lock
les
add
subl
mull
stos
addb
xchg
jnp
scas
jae
shlb
je
enter
int3
lea
pop
add
pop
push
push
lea
push
push
push
call
gs
mov
in
lahf
movsb
lahf
jbe
enter
jmp
cltd
add
jmp
out
add
rcrb
add
add
add
cld
out
filds
mov
add
add
cwtl
mov
add
test
jns
ljmp
add
jns
out
in
movsb
mov
add
add
mov
lea
pop
rep
push
push
call
in
add
mov
mov
xchg
add
icebp
je
lret
mov
scas
outsl
add
mov
xchg
mov
add
test
movsl
data16
jno
scas
add
mov
loopne
add
lahf
add
sahf
add
pusha
add
add
add
imul
add
add
cltd
mov
push
les
dec
inc
push
push
push
call
mov
add
loop
in
test
test
fprem1
xchg
add
loopne
pop
add
add
add
shl
add
jp
mov
add
add
add
mov
mov
leave
mov
add
add
add
iret
add
jno
add
mov
add
mov
rorl
xor
push
lea
push
push
push
push
call
xchg
cltd
xchg
mov
mov
add
repnz
ficompl
xchg
add
add
jecxz
add
add
add
add
mov
shll
fs
lods
mov
subb
mov
jge
test
lret
add
rolb
cwtl
add
rcrb
test
mov
jecxz
in
mov
lea
pop
add
or
je
push
lea
push
lea
push
lea
push
lea
push
call
add
mov
jnp
pop
test
cmc
push
addb
add
add
add
in
into
add
loopne
add
in
mov
push
add
jae
xchg
add
into
lret
lds
sti
add
pusha
hlt
pop
lock
mov
jecxz
out
add
add
cli
add
cmpb
fildl
add
pop
add
push
add
les
lock
lea
pop
mov
add
add
push
ror
shr
pop
rep
pop
push
push
inc
add
push
or
not
add
not
not
shr
not
sub
rol
add
lea
pop
dec
rol
sub
pop
push
shr
lea
pop
pop
push
shl
shr
pop
mov
mov
push
lea
push
call
add
insb
ret
add
add
add
add
pusha
add
test
add
pop
imul
out
aam
mov
add
pop
add
jbe
push
add
add
add
push
push
add
fst
popf
jge
add
pop
int3
xchg
in
add
add
add
xchg
add
fidivrs
push
mov
ret
lret
lcall
jne
cmpsb
mov
mov
lea
pop
mov
jmp
push
push
sub
pop
mov
add
push
push
rol
pop
push
push
dec
pop
push
push
pop
push
mov
push
lea
lea
dec
pop
pop
push
push
push
push
call
imul
in
jmp
add
movb
int
add
xlat
add
cmpsl
add
pushf
mov
movsb
add
mov
add
add
pusha
mov
pop
add
bound
int
sarb
gs
xchg
xchg
sahf
jo
add
add
push
add
push
jo
filds
push
xchg
out
cmpl
add
lods
int
add
add
add
hlt
lea
pop
pop
pop
pop
push
shr
pop
leave
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
clc
fldl
pop
jne
add
add
add
out
mov
mov
mov
add
leave
mov
add
loope
ret
cmpsl
mov
test
jp
sahf
test
out
add
push
add
lahf
add
test
mov
jnp
add
add
add
cmpsb
stc
add
add
add
add
add
les
lcall
popa
and
or
push
push
lea
push
push
call
push
jmp
mov
pop
add
out
mov
jge
add
imul
add
mov
mov
add
mov
js
faddl
hlt
cwtl
add
bound
add
mov
add
mov
addr16
roll
mov
call
add
add
adc
push
inc
ror
ror
pop
mov
add
push
push
xor
pop
push
push
push
push
push
call
add
cli
iret
int3
push
imul
imul
add
iret
add
rcrb
mov
add
pop
add
shrb
lret
add
add
add
add
in
add
mov
adc
xchg
pop
mov
add
out
lods
jns
add
cld
lea
pop
push
push
push
push
lea
push
push
push
push
push
push
push
push
call
imul
add
popa
push
testb
jle
mov
ret
jecxz
fiadds
aam
add
mov
add
jmp
into
call
add
add
nop
pusha
add
add
add
int3
in
clc
lret
mov
add
in
icebp
add
mov
mov
add
mov
add
bound
pop
movl
addl
test
je
push
push
call
rcl
mov
cmpsl
add
add
add
popf
add
movsb
je
pushf
xchg
add
loope
add
mov
add
mov
add
cli
mov
add
add
add
add
add
ljmp
jae
loop
add
add
mov
leave
add
int3
sbbl
lret
mov
push
mov
lea
pop
mov
pop
push
rol
pop
pop
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
iret
add
mov
nop
add
lahf
arpl
add
jnp
ljmp
imul
shl
jne
add
fildl
add
testb
jb
add
stos
lcall
je
gs
repnz
add
add
add
scas
add
out
add
mov
arpl
addl
in
subb
sub
push
sub
pop
ret
push
push
push
call
bound
add
addr16
rolb
loope
add
js
add
aad
add
jno
out
lret
add
mov
lds
mov
lea
xchg
mov
bnd
addl
roll
mov
jno
add
mov
clc
mov
sahf
xchg
xchg
push
add
add
ret
jns
xlat
xchg
pop
fadds
scas
faddl
mov
lea
pop
push
mov
push
sub
sub
pop
add
push
push
lea
pop
push
push
push
push
shl
pop
testl
addl
push
lea
push
push
push
push
push
push
push
call
outsl
popa
push
add
mov
aam
push
loopne
mov
mov
mov
lahf
mov
add
push
xchg
add
fwait
add
add
std
mov
aam
add
rcl
add
outsl
push
add
rolb
fsubr
mov
add
mov
jno
add
add
outsl
jl
xchg
hlt
outsl
add
jnp
xchg
add
popa
add
jmp
pop
xchg
pop
mov
mov
lods
jne
mov
lea
pop
push
push
push
push
lea
push
push
push
push
push
push
call
imul
ret
add
scas
out
int
nop
push
add
into
xchg
sti
add
jl
fcmovu
jnp
xchg
ja
pop
add
add
leave
add
test
push
out
jne
add
stos
add
int
stc
lea
xchg
sti
mov
mov
lret
push
jb
add
lods
xchg
add
mov
testl
mov
lea
pop
call
mov
push
push
push
push
lea
push
push
lea
push
call
testb
lock
add
mov
add
out
bound
add
rolb
add
fdiv
add
call
push
mov
lock
lds
add
mull
sahf
add
outsl
add
gs
add
jns
push
add
add
int
fcmove
jmp
in
jae
call
mov
mov
lea
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
fsubrl
negl
add
add
add
cli
popw
int
in
add
out
add
rcrb
pop
call
arpl
hlt
add
add
bound
fildll
mov
pop
add
mov
add
push
rcr
je
add
push
xchg
cmc
add
add
std
mov
push
lcall
and
aam
incl
test
push
rol
sub
add
pop
pop
pop
pop
push
sub
pop
leave
ret
push
push
lea
push
call
add
jae
cmpsl
add
add
add
js
mov
add
pop
mov
add
add
add
add
shlb
lods
add
jo
jae
add
add
andb
add
js
add
add
or
push
mov
push
push
push
lea
push
lea
push
push
lea
push
call
data16
int
clc
lea
add
loope
int
test
add
mov
scas
pop
add
add
jle
ja
ret
lods
push
add
mov
add
mov
add
out
add
pusha
add
cmc
add
jle
push
add
add
xchg
fwait
cltd
add
add
jb
clc
gs
mov
iret
cli
add
add
mov
lea
pop
add
push
push
shr
shr
pop
push
push
push
push
xor
pop
movl
push
call
push
lea
push
push
push
lea
push
call
test
testl
add
add
mov
add
fildl
add
add
add
add
jb
mov
xchg
movb
mov
add
add
bound
sbb
add
add
push
add
pop
pushf
add
push
mov
add
add
xchg
add
imul
scas
mov
addb
add
jmp
lea
jb
mov
jmp
mov
lea
pop
push
push
shl
lea
inc
pop
call
push
inc
inc
pop
subl
cmpl
jne
push
push
lea
push
lea
push
call
add
add
xchg
stc
aad
cmc
xchg
push
outsl
insb
add
pop
jl
add
lods
add
fists
rclb
cwtl
add
add
add
call
in
stos
clc
pushf
add
add
add
add
mov
mov
add
add
add
add
push
mov
add
adc
push
push
call
add
stos
test
add
lea
je
mov
add
sahf
pop
jecxz
pop
test
stos
add
add
out
xchg
mov
fdivl
add
add
jecxz
add
add
repnz
add
insb
xchg
faddl
pushf
add
mov
aam
cmpsl
out
lods
flds
stc
mov
in
bound
xchg
mov
lea
pop
pop
push
lea
push
push
push
call
mov
loop
fcmovu
mov
sbb
repnz
add
xchg
add
add
ret
jnp
addl
add
add
cmpsb
add
pusha
add
xchg
add
add
sbb
add
xorl
enter
add
fcomps
add
out
cwtl
add
add
add
loop
add
jne
add
mov
lea
pop
pop
push
push
push
push
push
call
add
mov
push
xchg
push
into
add
scas
mov
add
stos
pop
add
add
out
add
add
mov
push
add
mov
lahf
add
rolb
mov
mov
jae
add
mov
fcoms
add
add
test
popa
add
add
add
add
add
in
mov
add
pop
mov
lea
pop
pop
push
lea
xor
pop
leave
ret
push
push
push
call
repnz
mov
add
add
add
add
add
pop
mov
add
sarl
xchg
add
fcomip
add
pop
js
pop
push
add
push
add
xchg
jmp
add
popf
add
lock
add
bound
mov
push
roll
js
jnp
jge
add
lods
add
cli
repnz
hlt
pop
xchg
addl
add
test
pop
mov
push
sub
add
pop
add
push
push
shl
shl
inc
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
call
cmpb
add
mov
push
pop
popa
add
loop
stos
cli
loopne
add
add
mov
movl
xchg
add
add
ljmp
xchg
add
call
jae
imul
insb
jns
xchg
out
rorb
jne
add
rolb
jns
add
add
je
fdivrl
add
test
mov
lea
pop
mov
lea
push
not
inc
sub
pop
sub
push
add
not
inc
pop
mov
shr
push
lea
ror
lea
pop
add
mov
mov
push
lea
push
push
push
push
push
call
aam
add
lods
add
push
jne
popf
add
add
out
jno
push
insb
add
lcall
add
jbe
xchg
jbe
jge
pop
mov
add
lds
add
add
xchg
mov
add
fiadds
add
add
ret
add
hlt
repnz
repnz
sti
add
cld
add
push
pop
add
fnstsw
add
pop
add
cld
lea
pop
add
add
mov
push
push
push
push
push
lea
push
lea
push
call
add
add
cmpsb
int3
add
jb
test
add
icebp
add
imul
rolb
fwait
loopne
add
ja
add
jns
mov
gs
int
lret
iret
add
movl
push
nop
clc
add
add
mov
add
loope
js
lock
add
mov
int3
lea
pop
mov
push
inc
inc
sub
pop
cmp
jne
push
sub
not
pop
cmp
jne
mov
push
ror
sub
ror
pop
movl
push
push
lea
push
push
call
add
add
add
xchg
mov
jl
loope
bound
lahf
insb
add
add
stos
mov
nop
leave
add
movsb
add
fs
mov
aam
xchg
add
roll
add
testl
add
jb
jge
jle
cli
pop
movb
push
fisttpll
add
lcall
add
add
fisubl
pusha
adc
insb
or
xor
seta
dec
push
lea
push
push
call
xchg
cmpsl
add
lods
jne
imul
stc
in
filds
add
add
mov
out
add
add
add
leave
addb
data16
nop
add
mov
imul
jne
add
jge
add
mov
jo
add
testl
add
adcl
and
inc
cld
mov
sub
jne
push
ror
inc
pop
mov
movl
jmp
push
push
push
push
push
lea
push
push
push
push
push
call
cmc
sbbl
fwait
mov
mov
add
call
push
add
fwait
pop
movsb
jb
fadds
int3
add
add
add
add
stc
add
add
add
stos
mov
add
mov
xchg
frstor
mov
xchg
scas
add
mov
mov
add
fwait
add
cmpsb
add
lea
pop
mov
mov
cmp
jne
push
sub
inc
pop
mov
push
push
push
push
push
lea
push
lea
push
push
call
add
mov
add
push
lock
fwait
xchg
jae
cmpsl
add
data16
add
mov
cmpsb
add
fiadds
xchg
add
mov
mov
scas
jmp
pop
fscale
lret
add
roll
mov
jae
add
cmc
int
popf
add
add
je
stos
add
add
fiaddl
add
test
ja
add
mov
lea
pop
movl
push
push
push
push
push
push
push
push
lea
push
call
scas
mov
in
loop
add
jno
cltd
add
cli
jb
into
cmc
cmp
push
add
sar
add
pop
add
xchg
fisubrl
mov
cltd
loop
fadds
test
add
fs
add
xchg
int
jecxz
js
add
jne
out
push
stc
adcb
add
clc
loopne
popf
movsl
add
add
xchg
add
add
test
mov
data16
jmp
mov
push
lea
pop
cmpw
jne
push
inc
shl
add
pop
mov
push
xor
not
pop
movl
jmp
push
add
rol
add
pop
pushl
push
push
push
push
call
out
loop
push
add
add
movsb
scas
push
mov
cwtl
xchg
jns
pop
outsl
add
test
push
pusha
jnp
mov
jmp
add
test
mov
add
data16
mov
add
hlt
add
mov
add
add
addr16
mov
add
add
lds
mov
lcall
test
rcr
mov
push
add
push
in
add
mov
lea
pop
pop
mov
push
add
not
pop
mov
mov
push
push
push
xor
add
dec
rol
shr
sub
not
xor
pop
add
pop
push
add
sub
shr
shr
pop
push
push
xor
sub
shr
inc
pop
call
cmpl
je
push
push
xor
push
sub
add
add
add
not
sub
shr
dec
lea
pop
lea
shl
pop
push
push
push
lea
push
push
call
test
xchg
add
mov
test
jns
push
add
add
add
add
mov
push
bound
mov
add
mov
add
pop
out
shll
add
rolb
jle
stc
push
add
xchg
test
cmpsb
add
add
add
add
outsl
add
mov
lea
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
ret
add
aam
xlat
add
popa
xchg
add
add
xchg
mov
arpl
add
cld
stc
add
nop
pushf
add
add
pop
add
roll
add
rolb
lcall
sar
jge
pop
sahf
mov
add
fdivrl
add
mov
lcall
mov
lea
pop
call
push
rol
shr
pop
cmpl
je
push
push
not
push
or
not
add
dec
sub
inc
xor
pop
ror
rol
add
shl
pop
push
push
add
ror
pop
call
cmpl
je
push
push
inc
inc
inc
push
and
add
xor
sub
lea
dec
inc
pop
sub
inc
shl
pop
push
push
lea
push
push
push
call
add
jmp
add
popf
in
in
out
lods
shll
jp
mov
in
movsb
leave
test
add
aad
xchg
xchg
loope
lahf
in
push
add
jge
addb
push
add
cld
add
fmulp
cli
add
add
pop
popf
mov
fmull
push
push
push
lea
push
push
push
lea
push
push
push
call
push
in
addb
mov
xchg
js
stc
repnz
stc
pushf
int3
filds
in
jp
pop
movsb
add
add
push
mov
add
add
test
in
mov
mov
mov
add
add
shlb
add
add
cmpb
lcall
stc
mov
lea
pop
call
push
ror
pop
cmpl
je
push
push
add
rol
sub
push
sub
add
shl
lea
sub
add
add
pop
xor
pop
push
sub
not
pop
push
push
push
push
lea
push
push
call
fiaddl
add
add
jl
jo
add
add
mov
testl
add
add
add
add
jl
repnz
lahf
cmp
aam
mov
fldl
jecxz
xchg
add
add
movsl
add
add
add
jp
loopne
je
cmpsb
push
mov
add
lods
jne
test
add
mov
add
mov
lea
pop
call
push
shr
lea
add
add
pop
cmpl
je
push
push
add
shl
push
sub
add
lea
sub
ror
pop
not
ror
shr
sub
pop
push
xor
rol
shl
add
pop
push
call
push
lea
push
lea
push
push
lea
push
push
push
call
iret
arpl
add
bound
movl
repnz
jns
mov
add
sahf
out
add
xorl
idivl
sahf
add
add
nop
rcll
add
add
mov
pop
pop
mov
enter
fadd
out
mov
xchg
mov
add
cld
lea
pop
cmpl
je
push
push
add
xor
xor
push
push
pop
add
not
dec
sub
ror
pop
sub
pop
push
push
shl
xor
shl
pop
call
cmpl
je
push
push
inc
push
xor
add
shr
lea
sub
inc
pop
not
sub
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
jecxz
mov
jmp
jns
add
jmp
fdecstp
mov
cwtl
cwtl
loop
loop
add
add
add
push
add
mov
movsl
stos
add
lea
jbe
movsb
add
pop
add
push
add
add
outsl
pop
add
add
mov
mov
mov
add
out
add
int3
add
loopne
test
hlt
mov
mov
fs
mov
lea
pop
push
call
cmpl
je
push
push
sub
inc
push
or
not
add
not
not
sub
add
add
pop
add
sub
pop
push
not
pop
push
call
cmpl
je
push
push
shl
add
sub
dec
push
or
inc
add
add
add
sub
lea
rol
shr
pop
add
lea
rol
shr
pop
push
push
push
lea
push
lea
push
push
push
call
add
je
addl
mov
ljmp
testl
add
pushf
sti
popf
jnp
cmc
add
add
arpl
xchg
add
add
aam
std
test
frstpm(287
add
add
mov
add
fsubrl
add
enter
iret
add
mov
jb
mov
xchg
iret
andl
pusha
sbb
push
call
cmpl
je
push
push
xor
add
sub
push
and
add
add
sub
pop
add
pop
push
pop
push
push
push
call
lods
add
repnz
mov
push
mov
jmp
sahf
testb
rcll
add
jecxz
mov
add
sarl
fcmovu
mov
jb
pop
popa
imul
ror
mov
add
leave
add
pop
add
add
stos
test
push
mov
cmpsl
fidivl
mov
pop
lcall
or
jo
add
cmpl
je
push
push
lea
dec
add
push
sub
add
inc
not
sub
shl
pop
add
xor
lea
sub
pop
push
dec
pop
push
push
push
call
ljmp
add
add
add
add
call
add
add
repnz
jbe
add
xchg
push
out
testl
xchg
mov
mov
lret
add
pop
mov
mov
add
fiadds
ja
add
lahf
fildl
add
rcrl
add
add
add
add
add
mov
add
mov
lea
pop
call
push
push
lea
push
push
push
push
push
push
push
call
pop
out
mov
add
jo
mov
fisubs
xchg
push
flds
loope
jmp
fcmovu
add
fxch
orb
shr
int
add
jns
add
in
ja
jp
out
add
imul
add
add
add
add
movb
add
add
add
mov
add
and
lret
add
int3
lea
pop
cmpl
je
push
push
add
push
or
inc
add
shl
rol
sub
not
inc
pop
xor
sub
pop
push
xor
pop
push
call
cmpl
jne
push
pop
mov
push
not
add
not
pop
movl
jmp
xor
push
add
pop
pop
pop
pop
push
rol
add
sub
pop
pop
leave
push
push
lea
push
push
push
lea
push
lea
push
call
scas
outsl
jnp
push
lcall
add
pop
cwtl
add
add
add
cmc
add
jbe
xchg
push
add
add
add
xchg
pop
add
add
xchg
add
xchg
stos
jp
add
add
repnz
stos
aad
fmul
add
xchg
add
add
xchg
push
std
sti
jecxz
add
mov
lea
pop
ret
push
push
sub
pop
mov
push
push
push
push
lea
push
call
add
fbld
add
add
add
roll
jmp
movsl
cld
xchg
cmpsb
push
add
pop
add
push
add
imul
lods
sahf
popa
lcall
jp
mov
add
incb
shll
popf
mov
add
add
into
push
popa
jne
push
add
add
push
add
mov
add
xchg
add
sti
arpl
lea
pop
add
cmpl
jne
push
push
inc
push
sub
add
inc
xor
add
sub
add
sub
not
pop
sub
rol
pop
push
ror
sub
shl
pop
pushl
call
push
sub
rol
pop
push
push
ror
pop
call
push
sub
shr
sub
shr
pop
jmp
push
shl
dec
pop
cmpl
je
push
ror
inc
dec
sub
pop
cmpl
jne
leave
add
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
ret
testb
xchg
addb
shrb
mov
je
mov
add
push
add
test
fwait
add
mov
add
nop
add
cltd
iret
add
sub
jb
cli
cld
mov
pop
fcmovu
scas
out
push
iret
jle
jle
push
add
icebp
mov
lds
flds
mov
push
mov
lea
pop
pop
push
xor
pop
pop
push
lea
dec
inc
pop
pop
pop
leave
push
push
push
call
add
add
add
add
popa
push
data16
add
add
add
enter
add
add
fldl
xchg
add
add
push
add
add
add
add
clc
add
arpl
int3
outsl
int3
out
add
mov
mov
in
into
pop
bound
pop
add
push
sub
rol
pop
ret
push
lea
ror
ror
pop
jmp
cmpl
jne
push
push
lea
shr
push
xor
add
shr
shl
rol
sub
rol
pop
shl
add
not
pop
push
push
push
lea
push
push
push
push
call
add
leave
add
mov
mov
add
les
mov
bound
add
xchg
arpl
add
add
add
xchg
xchg
add
cltd
ljmp
push
add
sahf
scas
imul
lods
push
add
roll
add
add
mov
mov
push
xchg
add
xlat
bound
xchg
add
lea
pop
pushl
call
push
push
push
push
push
push
lea
push
push
call
add
shr
loopne
add
loopne
icebp
add
push
jecxz
add
fsubs
faddl
ja
add
add
icebp
xlat
cmpsl
jne
jne
add
mov
repnz
add
fwait
cld
push
clc
lcall
pop
add
shl
aad
add
mov
fst
lock
add
mov
add
fimull
sti
int
add
mov
add
add
add
mov
lea
pop
push
push
shr
pop
call
push
pop
jmp
push
lea
push
push
push
push
call
add
add
int3
les
scas
sti
add
add
mov
imul
add
mov
jb
rcrl
mov
add
push
add
add
add
push
push
test
lea
add
add
add
add
mov
lahf
add
mov
add
add
push
push
add
mov
push
pusha
cli
fildl
incb
mov
lea
pop
cmpl
jne
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
js
mov
je
add
jl
loope
cltd
push
repnz
add
add
pop
loope
clc
stos
add
mov
pop
add
add
add
add
popf
add
add
jns
xchg
add
mov
add
xchg
bound
jle
pusha
test
xchg
lret
add
mov
addb
enter
add
mov
pop
mov
push
not
pop
mov
push
shr
add
sub
pop
push
push
push
push
sub
add
add
inc
dec
sub
rol
pop
dec
add
inc
pop
pushl
push
lea
sub
add
pop
call
call
push
push
sub
dec
lea
push
push
pop
add
shr
add
sub
sub
shl
shr
pop
add
pop
push
sub
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
add
add
pusha
push
push
add
add
pop
push
add
add
add
sahf
outsl
add
xchg
mov
add
jl
test
add
mov
in
incb
push
xchg
add
call
in
fadds
mov
iret
in
mov
add
fcmovnu
mov
add
jns
push
pop
jns
sti
faddp
mov
add
add
mull
subb
add
pop
call
call
push
push
ror
shl
sub
push
and
add
inc
sub
xor
sub
sub
ror
pop
pop
push
lea
push
push
lea
push
lea
push
call
add
mov
add
add
scas
nop
imul
add
lahf
in
movsl
sub
arpl
aam
mov
imul
loope
add
int3
jle
add
add
add
add
jbe
push
add
add
insb
in
stc
add
add
add
push
faddl
cmc
fwait
add
ljmp
lea
pop
pushl
call
push
push
push
push
lea
push
push
push
push
push
call
mov
imul
add
add
add
repnz
test
add
mov
add
insb
add
addr16
popa
leave
mov
pop
add
lret
lcall
add
mov
cli
jo
hlt
add
add
rcll
add
data16
mov
mov
add
sahf
outsl
negb
data16
call
push
push
dec
add
push
push
pop
add
xor
sub
sub
pop
shl
pop
push
push
rol
rol
push
or
inc
add
rol
sub
add
shr
dec
pop
ror
dec
pop
push
xor
pop
call
push
add
pop
pop
push
push
lea
push
call
add
cmpsl
add
mov
mov
movb
xchg
fwait
dec
add
add
add
add
add
into
add
enter
add
add
add
add
mov
int
pop
xlat
add
push
pushf
add
add
add
add
pop
pop
add
mov
imul
lds
add
aam
bound
dec
jne
push
push
push
push
push
call
add
stos
mov
add
xlat
xlat
add
rolb
add
add
add
nop
add
mov
add
nop
add
imul
cltd
clc
popf
fildll
loope
add
add
add
add
xchg
pop
bound
cli
gs
gs
add
mov
lea
pop
call
push
push
push
lea
push
push
push
push
push
call
add
jae
add
add
pushf
clc
mov
movb
loop
add
ja
add
add
add
pop
add
imul
mov
add
add
add
jno
add
mov
add
add
mov
jge
fldcw
add
imull
mov
cmpsl
add
rcll
sub
stos
testl
add
shll
add
add
mov
lea
pop
jmp
push
ror
add
rol
dec
pop
call
push
push
rol
inc
dec
sub
push
xor
add
shl
sub
sub
ror
pop
xor
shl
lea
pop
push
xor
shl
pop
pushl
call
push
sub
sub
add
pop
push
call
mov
push
shl
sub
pop
lea
push
push
not
add
inc
push
xor
add
shl
shr
sub
xor
sub
sub
ror
not
pop
ror
shl
pop
push
dec
not
pop
pushl
push
pop
call
push
push
ror
pop
call
push
push
not
push
xor
add
inc
sub
inc
shr
pop
lea
ror
pop
pushl
push
push
lea
push
call
push
mov
add
add
jl
add
fwait
clc
add
jmp
stc
popf
out
add
pop
mov
add
add
mov
jns
add
push
mov
sahf
mov
mov
add
jo
add
add
lret
jle
add
add
xchg
add
lret
hlt
lods
loope
int
add
test
jp
les
ficompl
add
rclb
shl
xor
pop
mov
lea
push
push
dec
shr
inc
push
or
not
add
lea
sub
sub
pop
add
pop
push
push
push
push
call
add
xchg
jb
ret
out
iret
add
test
add
jl
add
subl
loop
xchg
loope
xchg
add
add
add
pop
icebp
push
add
xlat
add
fiaddl
fidivrs
cltd
add
outsl
add
mov
xchg
add
add
clc
add
add
addl
ret
lea
pop
pushl
call
lea
push
push
push
lea
push
lea
push
push
push
push
push
call
push
out
add
ret
pop
negb
mov
jo
in
test
in
add
add
add
in
add
add
add
sti
add
mov
les
add
rolb
out
mov
add
jp
js
faddl
xchg
add
add
mov
add
pop
jae
add
jl
mov
add
add
pop
mov
int3
jmp
stos
lods
add
add
fcoms
add
fisttps
pop
push
push
push
push
push
push
push
push
push
call
addb
mov
add
jns
addb
mov
add
mov
xchg
cwtl
add
add
add
add
jne
stos
stos
stos
in
add
ret
fbstp
loop
mov
jae
add
add
aam
xchg
in
mov
add
push
jbe
add
addb
outsl
add
mov
add
popa
add
add
lret
movsl
js
pop
gs
add
cld
lea
pop
pushl
push
push
dec
dec
shl
push
xor
add
add
shl
sub
sub
sub
add
pop
inc
pop
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
or
ja
add
popa
cmpsb
jp
add
add
add
jmp
rolb
lea
add
clc
out
jae
add
mov
movsb
cltd
push
add
add
popa
push
push
pop
add
push
mov
test
jno
add
add
gs
add
add
add
add
mov
push
lea
stos
loop
jne
xchg
fnstenv
out
add
add
pop
call
push
push
rol
push
push
pop
add
add
sub
add
pop
pop
push
push
push
push
push
call
add
mov
jl
mov
add
int3
cmpsl
pop
mov
mov
add
jmp
add
rolb
test
outsl
push
add
mov
xchg
pop
mov
aad
add
cli
add
add
sbb
lds
add
loopne
add
push
add
add
in
xchg
mov
out
add
popf
mov
add
add
test
mov
lea
pop
pushl
call
push
push
push
push
call
jno
popa
add
add
loopne
jns
add
add
mov
add
int3
test
add
jbe
pushf
add
stc
pop
mov
ret
add
add
mov
ret
pushf
add
roll
add
add
pop
add
add
loop
pop
nop
orb
add
int3
lea
pop
call
push
push
sub
add
dec
shl
push
or
inc
add
sub
sub
lea
ror
add
pop
shr
xor
pop
push
push
push
push
push
lea
push
call
cmpsb
mov
testl
add
leave
add
aad
add
std
rclb
lock
pushf
add
movsl
add
pop
xchg
mov
add
xchg
roll
add
xchg
add
jae
add
add
add
add
push
add
rclb
in
add
sbb
jne
call
push
push
lea
push
push
push
lea
push
lea
push
call
mov
iret
mov
andb
add
add
add
jmp
add
pop
icebp
add
add
out
add
push
cmc
rolb
xchg
movsl
fldenv
add
pop
add
arpl
and
mov
in
push
add
add
ja
add
jo
mov
add
mov
lea
pop
call
jmp
pushl
push
lea
dec
add
pop
mov
jmp
push
push
add
not
not
push
push
pop
add
add
sub
sub
add
ror
pop
inc
inc
add
pop
push
pop
pushl
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
movb
in
add
add
add
in
fisubrs
add
push
add
out
add
sahf
roll
jb
mov
roll
movsl
shlb
add
sahf
add
scas
ljmp
mulb
arpl
add
add
add
adc
shll
add
int3
pusha
mov
add
mov
jmp
lea
in
rorl
call
push
call
push
push
xor
shl
sub
push
or
not
add
add
rol
sub
dec
rol
sub
pop
xor
pop
push
lea
push
push
lea
push
lea
push
call
mov
icebp
mov
xchg
add
add
jl
add
add
mov
add
add
push
addb
add
out
add
mov
fwait
mov
pop
add
add
add
mov
aam
push
mov
add
add
mov
movsl
data16
add
pop
mov
sti
push
lods
add
mov
jne
out
mov
add
adc
pushl
push
push
lea
push
call
mov
shr
add
cld
add
add
cmpsl
add
jl
jmp
ja
stos
mov
add
push
add
leave
sti
cld
roll
add
add
pushf
add
add
pop
xchg
loopne
mov
cli
push
jns
movsl
add
add
mov
push
xchg
cwtl
mov
add
add
mov
fwait
jne
add
lahf
loop
sahf
cmpb
add
add
jo
add
jo
mov
add
pop
call
push
lea
push
push
lea
push
lea
push
push
call
popa
xchg
stos
add
add
add
add
in
stos
push
add
mov
add
mov
test
outsl
add
lds
test
int3
out
add
fwait
xchg
push
lds
add
add
lods
shlb
add
add
mov
mov
add
test
add
rcl
mov
lea
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
add
mov
pop
add
repnz
shr
add
stos
jp
lods
add
test
add
cli
lds
out
mov
icebp
add
fistpll
adcb
flds
mov
popa
test
les
enter
pop
arpl
pop
stos
push
xlat
out
add
rcrl
out
mov
arpl
pop
call
push
add
pop
leave
push
not
pop
add
pop
push
push
push
push
call
repnz
add
out
mov
add
icebp
push
xchg
std
add
add
mov
roll
push
add
bound
andl
std
pusha
les
addb
pop
roll
into
mov
out
add
scas
cld
lahf
mov
add
add
add
lods
out
cmpsl
add
add
add
add
add
mov
lea
pop
pop
pop
pop
push
push
push
push
push
lea
push
push
lea
push
call
lret
add
push
add
add
fldt
jmp
add
movsl
add
addb
mov
roll
test
shl
stos
std
mov
add
add
cwtl
add
jne
cmpsl
pop
jmp
pop
ljmp
gs
lods
cmpsl
push
add
fcmove
addb
add
mov
lea
pop
leave
push
push
push
push
lea
push
call
fadds
int
add
jmp
loope
add
xchg
xlat
ret
jmp
jo
add
add
popa
into
add
add
add
gs
jne
push
enter
jns
add
aad
pop
xchg
add
insb
xchg
add
mov
movsb
add
aam
push
add
pusha
add
fiaddl
add
lahf
add
xchg
int
lret
add
add
add
add
bound
add
push
shl
pop
ret
leave
ret
push
lea
push
lea
push
lea
push
push
push
call
xchg
add
add
add
popa
add
add
aam
add
int3
add
pop
add
mov
add
mov
add
add
pop
mov
mov
loope
add
stos
push
add
xchg
mov
jne
addl
ja
jmp
sbb
push
dec
pop
mov
push
add
inc
pop
cmpl
jne
mov
jmp
push
pop
mov
and
push
push
call
add
add
sbbl
add
mov
jle
into
add
std
std
add
add
push
mov
out
add
test
add
add
add
call
add
stc
call
mov
pop
scas
outsl
jno
aam
add
mov
testl
xchg
add
cltd
add
ljmp
loopne
add
push
add
or
leave
xor
push
shr
pop
add
push
push
push
push
push
lea
push
push
call
add
sarb
add
jnp
add
mov
xchg
bound
out
lahf
loop
loopne
add
add
jmp
ja
add
popa
mov
mov
add
add
add
add
rcr
add
add
clc
push
push
add
icebp
add
add
pop
cli
mov
sahf
add
add
in
lret
sti
xchg
add
mov
mov
lea
pop
xor
dec
sub
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
jecxz
clc
mov
mov
add
push
shrb
mov
test
fcompl
add
jne
pop
xchg
ret
mov
in
nop
mov
mov
add
add
add
xchg
add
mov
mov
cmpsl
lcall
add
jl
jno
push
mov
movsl
jo
pop
js
popf
in
mov
lea
pop
jmp
push
rol
shr
pop
sub
push
sub
sub
pop
pushl
pop
push
push
push
push
call
pop
push
addl
lret
adcl
icebp
fucomi
ret
add
stc
mov
add
add
add
faddl
out
xchg
add
add
add
add
jp
xchg
mov
pop
out
add
int
pusha
popa
mov
imull
add
loop
popa
add
nop
js
test
add
test
jl
mov
lea
pop
sub
cmp
jne
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
add
out
add
add
pop
add
flds
ja
imul
stc
jae
add
add
add
mov
add
push
jo
add
pop
add
add
imul
bound
mov
jae
addr16
add
lret
xchg
movsb
add
lods
add
add
mov
add
pusha
push
add
push
add
mov
lea
pop
mov
lea
sub
push
rol
pop
mov
push
add
not
pop
shr
add
sub
push
not
pop
pushl
push
not
pop
pop
push
ror
dec
sub
add
pop
shr
and
sub
push
push
push
lea
push
push
push
push
call
xor
add
add
add
add
into
test
imul
add
sti
add
add
cltd
aad
insb
xchg
add
orb
add
add
add
add
in
fcmovnb
add
insb
add
addr16
fbstp
add
add
xchg
xchg
add
add
add
add
add
rorl
pop
cmp
jne
push
push
push
push
lea
push
call
cld
cld
scas
add
pop
jbe
add
add
mov
add
add
int
mov
hlt
data16
push
rcl
push
pop
add
fadds
add
movsl
mov
mov
out
loopne
push
add
add
jbe
aam
add
add
xchg
add
negl
jle
add
push
aam
pop
sti
cmpsl
add
add
add
pop
leave
push
lea
push
push
push
push
push
call
stos
jecxz
enter
aad
add
dec
mov
roll
xchg
push
mov
add
add
add
push
stos
test
fcoml
js
movsb
fiadds
iret
mov
add
int
add
add
jp
add
les
add
mov
mov
iret
pop
in
add
add
mov
add
test
xorl
add
lea
push
push
push
push
push
call
out
add
movsl
lods
int3
add
data16
add
scas
add
add
add
jp
jno
add
add
lea
add
add
push
cld
add
add
insb
fistpl
imul
add
add
add
add
add
add
pop
enter
add
sahf
lret
push
stc
add
test
lahf
mov
add
add
mov
fs
lea
pop
mov
push
push
push
push
push
call
add
fadd
add
imul
fcmovnbe
add
add
jne
add
loopne
add
jb
add
sahf
pop
add
jp
add
add
add
roll
int
lock
jge
add
jo
add
addb
add
insb
pop
mov
bound
insb
aam
push
mov
jnp
add
insb
loope
push
add
std
jae
lds
fisttpl
addr16
add
push
push
push
push
push
push
push
push
push
call
add
lods
add
call
loope
popf
imul
mov
out
add
pop
mov
scas
out
jb
roll
xchg
add
add
add
pop
mov
xchg
movb
lods
pop
add
sti
add
push
jo
add
mov
mov
add
add
add
lret
iret
add
leave
test
shl
loopne
pop
loope
sti
add
out
mov
lea
pop
push
push
push
push
push
call
hlt
test
add
mov
add
clc
add
add
jne
out
xchg
loop
mov
pop
out
scas
test
add
add
add
rolb
mov
in
std
add
add
lcall
mov
add
pop
testl
ficomps
add
cli
add
add
add
fisubrs
jecxz
aam
mov
jp
fmull
push
ror
sub
pop
push
push
push
call
mov
add
add
xchg
add
add
add
xchg
in
xlat
xchg
add
je
add
ror
add
fldl
add
add
jbe
pop
add
scas
jnp
test
in
into
call
ret
add
imul
mov
push
sub
ror
pop
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
test
add
shlb
idivb
add
test
mov
sbbb
add
add
add
cld
add
add
add
add
add
loopne
pop
add
clc
add
add
cwtl
mov
push
add
mov
add
add
shlb
xchg
mov
insb
add
add
add
and
ljmp
pop
shr
add
push
push
push
lea
push
push
push
call
add
mov
add
mov
sarb
les
add
xchg
hlt
add
lret
test
into
push
mov
hlt
in
add
add
mov
push
movsb
int
mov
mov
shrl
lods
add
mov
test
pop
fdiv
add
test
popa
ret
fbld
add
add
lods
bound
sbb
fwait
addb
add
lea
push
push
push
push
call
add
ja
mov
push
testl
add
loopne
popf
fiadds
push
add
mov
popf
jb
jle
aad
cmc
imul
add
lret
sahf
add
aam
add
add
jl
add
add
mov
add
scas
add
scas
fsubrs
add
sti
add
add
add
pop
add
mov
add
push
push
push
push
push
push
push
call
rcr
xchg
jle
add
mov
add
mov
add
pop
loope
add
pushf
xchg
push
add
enter
push
les
xorb
notl
stc
jae
add
push
add
add
icebp
add
nop
add
add
add
mov
fs
in
xchg
flds
int3
cmpsb
mov
out
lret
mov
iret
sarb
mov
lea
pop
xor
mov
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
mov
push
push
pop
fs
pop
cmpsl
bound
push
jnp
flds
jbe
out
mov
scas
add
scas
add
std
ja
mov
pop
aad
add
add
jmp
add
jae
add
add
add
mov
add
add
scas
add
add
repnz
add
fucomp
xchg
std
lods
add
loope
clc
xorb
int
hlt
pop
mov
xchg
add
mov
lea
pop
and
call
add
push
sub
dec
inc
pop
cmp
je
push
not
shl
pop
add
cmpl
jne
xor
push
lea
push
lea
push
lea
push
push
push
push
push
call
push
clc
mov
add
add
add
out
mov
add
add
add
pop
jge
xorb
ret
movl
mov
add
je
rorl
insb
push
add
aam
addl
in
sub
hlt
icebp
iret
add
lods
add
stos
mov
push
mov
aam
bound
pop
pop
push
shl
not
pop
pop
pop
push
push
push
push
lea
push
push
push
push
call
faddl
push
add
popf
add
popf
add
loope
jne
push
add
sahf
add
out
add
push
add
mov
mov
add
frstor
pop
lock
add
xchg
xchg
add
lea
mov
add
out
add
fs
add
repnz
testl
vpsubsb
jle
loopne
pop
pop
push
push
push
lea
push
push
push
call
push
add
jno
mov
sti
push
fucomi
roll
lods
iret
fnstsw
int3
add
popl
add
addr16
mov
add
in
push
arpl
xchg
icebp
add
std
pop
pop
out
lret
add
mov
add
mov
in
add
testl
popa
add
jno
std
lods
mov
lea
pop
leave
push
push
push
push
push
push
lea
push
push
call
jns
add
add
xchg
flds
mov
add
ret
fists
ret
jmp
icebp
nop
mov
add
mov
push
cmpsl
in
xchg
mov
pop
cmpsb
test
pusha
add
add
jecxz
add
jnp
ja
jmp
add
ljmp
add
rcrl
add
mov
lea
pop
ret
push
push
lea
push
push
push
push
push
call
xchg
add
int
add
add
add
cli
pop
cwtl
lods
ljmp
mov
jle
mov
jp
jl
out
call
jecxz
js
fcmovne
add
les
add
add
cmc
pushf
addl
in
add
add
add
add
mov
add
arpl
mov
lea
pop
mov
push
push
push
call
testl
leave
add
xlat
hlt
add
add
mov
jnp
add
mov
xchg
add
iret
push
add
add
push
add
add
add
movsl
add
add
jmp
popa
jge
out
add
add
add
clc
pushf
aam
add
add
enter
add
movsl
add
add
in
cmpsb
imul
add
mov
pop
mov
lea
pop
add
push
push
push
ror
not
pop
pop
push
push
push
push
call
xchg
mov
push
ret
add
faddl
mov
lret
mov
incb
push
cmc
test
add
loopne
shll
loopne
jb
jmp
enter
add
in
mov
add
add
add
add
mov
add
fldenv
cmc
in
addl
mov
lea
pop
pop
push
ror
lea
pop
mov
push
push
push
push
lea
push
push
push
push
call
add
jp
fcoms
ja
add
cwtl
gs
add
jecxz
jo
xchg
mov
push
shlb
roll
call
test
pushf
popa
insb
filds
cmpsb
add
add
imul
add
sti
lds
cmpsl
fadd
loope
std
add
add
add
add
sahf
pop
rolb
mov
lea
pop
call
xor
push
push
push
push
push
lea
push
lea
push
push
call
roll
add
ror
add
pop
movsb
add
out
add
push
pop
add
add
add
stos
inc
add
popa
add
add
mov
mov
fiaddl
mov
lret
add
sti
add
cmpsb
jo
add
add
add
add
jmp
add
iret
add
mov
ret
add
rolb
cmpsb
push
jns
add
xchg
add
iret
add
mov
insb
les
mov
arpl
pop
pop
pop
pop
push
lea
push
push
push
push
push
push
lea
push
call
pop
add
xlat
bound
add
add
add
add
cwtl
mov
fwait
loop
mov
movsl
jnp
popa
add
mov
add
xchg
lret
les
xchg
add
push
mov
gs
xchg
jno
add
add
adc
push
outsl
add
mov
lea
pop
pop
push
push
push
push
lea
push
push
call
repnz
add
leave
add
add
xchg
cmc
pop
mov
jae
mov
cld
ret
mov
add
mov
add
addl
pop
in
add
xchg
mov
jne
rolb
in
cld
add
rcrb
add
insb
add
imul
jle
iret
imul
mov
lea
pop
pop
leave
push
lea
push
push
push
push
push
push
call
movsl
add
flds
in
imul
add
push
add
lahf
jo
mov
lcall
add
sahf
insb
push
mov
jno
push
jp
add
jl
add
push
mov
shl
add
enter
icebp
add
bound
add
add
stc
add
nop
faddl
hlt
fidivrs
fucom
jno
mov
mov
mov
push
pusha
jge
mov
bound
ret
push
push
shr
shr
shl
pop
mov
add
push
add
add
pop
push
push
sub
pop
push
push
push
push
lea
pop
mov
push
push
lea
push
lea
push
call
add
lret
add
jle
add
add
scas
add
jae
mov
add
aam
add
mov
gs
movsl
push
xchg
bound
pop
mov
add
sarl
mov
mov
add
roll
add
stos
push
jo
nop
xchg
add
xchg
xor
push
fstpt
add
add
add
mov
fmull
lea
sub
push
push
push
push
push
call
mov
jge
int
clc
add
out
add
add
into
jns
add
add
add
add
pushf
mov
cld
add
popf
mov
out
add
fiadds
test
mov
aad
rcl
loopne
add
addb
ljmp
add
add
add
lret
jno
iret
add
add
fmull
adc
ljmp
imul
add
jns
push
lock
cli
add
add
shrl
enter
add
add
imul
ja
add
nop
mov
add
push
mov
xchg
jne
add
jge
xorb
imul
mov
add
mov
cmpsb
add
jbe
add
fsts
scas
sarb
pop
mov
mov
lea
pop
add
push
push
push
push
call
add
mov
add
add
sar
sar
call
ret
out
push
scas
mov
add
jmp
add
jno
loopne
stc
add
mov
add
andb
decb
xchg
add
leave
xchg
add
fisttpl
add
out
lods
add
lea
jo
pop
add
add
mov
lea
pop
mov
push
inc
not
pop
add
push
push
lea
push
push
push
push
push
lea
push
call
fildl
add
shlb
jbe
add
add
lods
fdivl
mov
insb
sahf
js
testb
add
add
add
add
mov
pop
push
fsubl
add
add
add
push
mov
cmc
jne
int
jmp
pop
xchg
add
in
push
pop
nop
sti
cwtl
gs
enter
add
add
add
add
ja
add
pop
pushl
push
sub
pop
popl
push
ror
not
pop
mov
add
push
shl
xor
pop
xor
lea
push
push
lea
push
push
lea
push
lea
push
push
call
add
scas
add
add
add
mov
lcall
add
ret
lods
add
add
xchg
add
jecxz
mov
add
xor
add
popa
xchg
stc
jmp
add
into
add
cld
add
mov
add
jmp
lahf
cld
xchg
jge
add
fwait
mov
mov
add
ja
cld
add
jno
add
ret
pop
add
imul
shll
rclb
adc
pop
mov
push
call
add
push
mov
cltd
jb
add
jae
imul
outsl
add
add
add
fld1
add
imul
ljmp
add
jb
pop
add
xlat
js
mov
add
enter
add
je
add
stc
add
add
test
add
push
add
add
popa
adc
call
push
rol
sub
dec
not
pop
add
nop
nop
push
sub
pop
cmp
je
push
lea
push
push
push
push
push
push
push
call
add
jne
mov
fwait
add
xorl
add
add
mov
add
mov
add
imul
add
test
fcompl
add
add
add
fnstenv
add
hlt
bnd
and
loopne
xchg
ljmp
sar
add
mov
push
push
add
lds
pop
nop
nop
push
push
call
add
add
faddl
lret
add
mov
add
lock
add
jb
add
push
mov
jne
cmpsl
leave
into
int3
xorb
mov
add
js
sub
movb
add
subb
test
call
add
fmull
pop
inc
nop
nop
push
push
push
lea
push
push
push
lea
push
call
rcrl
jmp
xchg
lea
add
mov
add
add
add
add
xorb
xchg
push
pop
lea
lcall
cmpsb
add
push
add
add
add
cmc
add
add
add
jle
int3
xchg
cwtl
add
out
popa
nop
add
hlt
mov
jns
mov
lea
pop
cmp
jb
push
add
pop
xor
push
push
push
push
push
push
lea
push
push
push
lea
push
call
jge
movsl
add
add
in
stos
popa
add
ljmp
roll
mov
out
add
aad
add
add
flds
clc
add
pop
mov
lock
mov
add
jmp
loope
repnz
xchg
in
add
jmp
add
add
add
mov
add
jp
sub
add
add
add
add
pop
mov
lea
pop
jmp
mov
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
out
mov
cmc
push
insb
les
add
aam
outsl
add
xchg
mov
idivl
add
add
add
cltd
lods
data16
int3
push
push
add
add
leave
mov
addl
leave
jns
add
push
bound
add
add
jl
mov
add
add
add
add
add
mov
lea
pop
add
push
push
push
push
push
push
push
lea
push
push
call
in
xchg
mov
into
mov
add
jb
in
mov
add
jnp
add
add
jns
add
jne
je
add
add
add
add
out
popa
jp
ret
add
mov
add
add
jne
add
add
cmc
add
popl
lea
mov
pop
movl
lret
out
frstor
pop
add
xchg
ror
call
add
mov
lea
pop
movzwl
mov
push
push
push
push
push
push
push
call
mov
add
jl
add
jle
test
testl
add
fwait
xchg
loopne
jl
add
add
add
add
testb
fwait
movb
cmpsb
add
mov
add
je
hlt
push
cld
je
push
imul
shll
leave
mov
mov
out
xchg
add
scas
add
ror
mov
add
shll
cld
lea
pop
add
push
sub
add
pop
mov
xor
push
inc
ror
pop
xor
push
lea
push
call
fsub
add
xchg
add
gs
add
jnp
add
imul
lahf
js
mov
ljmp
push
add
sti
lahf
les
jne
movsb
add
add
loope
test
add
jp
add
add
add
pop
mov
xlat
mov
jb
cld
lea
pop
shl
xor
push
add
rol
sub
pop
shl
xor
push
push
push
push
push
push
push
call
add
mov
add
stc
xchg
add
pop
je
add
jle
add
add
add
cltd
pop
cmpsl
add
add
mov
icebp
add
enter
xchg
addb
add
addb
int
roll
xchg
xchg
enter
add
add
mov
add
ljmp
andb
push
fiaddl
test
int3
lea
pop
shl
push
sub
pop
xor
mov
add
push
sub
pop
pop
pop
push
rol
rol
sub
pop
pop
pop
push
shr
shr
not
ror
pop
leave
ret
push
push
push
call
add
rolb
jbe
xchg
pop
mov
mov
insb
add
mov
mov
add
add
add
push
add
mov
mov
cmpsb
add
add
add
add
movsl
add
xorb
fildl
add
fildll
push
cmpsl
je
add
push
neg
add
fcmovnu
pop
out
add
add
add
xchg
push
mov
lea
pop
mov
push
lea
push
lea
push
lea
push
lea
push
push
call
fidivl
ja
push
cltd
data16
add
add
loopne
gs
filds
les
pop
fcomps
add
add
push
in
add
add
jle
add
add
mov
jp
shl
jo
in
les
xchg
addl
fmull
push
push
push
push
lea
push
push
lea
push
push
call
push
mov
add
jp
add
movsl
add
add
addl
std
call
add
mov
jge
outsl
orb
insb
xchg
scas
shrb
bound
add
cwtl
add
stc
loope
lahf
jge
add
outsl
aam
movsl
stc
test
add
in
mov
aad
xchg
jae
lret
add
xchg
jmp
jge
cmpsl
nop
mov
add
xchg
mov
lea
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
imul
push
imul
add
xchg
jns
cmc
movsl
pusha
popl
add
test
add
add
add
clc
jno
mov
test
int3
clc
mov
lret
into
add
jb
push
fistpll
fs
add
mov
iret
outsl
add
pop
mov
mov
push
ror
pop
mov
test
je
mov
push
add
shr
shr
pop
test
je
push
ror
pop
mov
mov
push
ror
pop
mov
push
not
dec
pop
inc
push
sub
add
ror
dec
pop
cmp
je
push
rol
rol
pop
test
je
mov
inc
push
sub
sub
sub
shr
pop
cmp
je
push
push
push
push
push
push
call
add
pop
lods
jbe
mov
pop
add
add
push
sahf
add
enter
mov
roll
fcmovnb
add
mov
add
in
call
add
xlat
add
jae
push
aam
add
iret
add
cmpb
lahf
mov
add
andl
add
add
jl
int3
lea
pop
test
jne
push
lea
sub
add
pop
xor
pop
push
lea
push
lea
push
push
push
call
add
addr16
movsl
add
sti
mov
repnz
movsb
add
lds
add
mov
add
test
add
aad
cwtl
movsl
popf
push
mov
push
out
add
add
lret
add
jae
pop
add
adcl
add
jmp
pop
push
add
fiaddl
add
add
imul
lock
lret
call
les
pop
push
lea
push
push
push
push
push
call
jl
aad
add
cmpsl
ja
add
jl
test
test
in
add
mov
lret
mov
pop
add
lcall
add
jbe
add
aam
push
push
imul
icebp
push
xchg
add
push
mov
add
loop
add
mov
add
repnz
lea
pop
pop
leave
ret
push
push
push
push
push
push
push
call
xchg
lods
gs
iret
add
jecxz
add
stos
add
add
pop
cld
icebp
jno
add
shlb
mov
test
add
add
add
pop
add
mov
mov
jmp
add
xchg
add
roll
add
add
mov
rorb
push
repnz
mov
lea
pop
mov
inc
push
push
lea
push
push
push
call
jb
int
xchg
add
jb
lock
movsl
add
js
arpl
add
add
add
add
mov
xchg
add
add
add
jbe
add
pop
arpl
in
mull
out
add
add
cwtl
add
add
std
add
xchg
add
lods
out
hlt
mov
add
jecxz
jmp
jecxz
testl
addr16
add
mov
push
mov
lea
pop
cmp
jne
push
shr
lea
sub
pop
lea
push
xor
pop
mov
test
je
push
push
push
push
push
push
push
push
push
call
leave
mov
insb
jmp
testl
fcmovnu
add
lahf
cli
fstl
pop
add
push
add
pop
jle
jne
outsl
xlat
int
lods
mov
icebp
jbe
jo
sbb
clc
add
add
fs
test
mov
test
push
addb
add
xchg
add
add
sahf
incb
rolb
add
roll
fsub
roll
push
mov
aam
bound
mov
push
push
call
out
jp
add
ljmp
outsl
add
rcr
xchg
xlat
add
xchg
mov
add
jge
push
add
add
jo
cwtl
jb
fldcw
jle
add
js
jecxz
stos
roll
movsl
mov
pop
loope
fadd
stos
les
jl
ja
push
push
test
add
sarb
pop
add
push
push
push
push
push
push
push
call
add
mov
fwait
add
xchg
movl
xchg
jmp
add
stc
movsl
scas
addr16
lods
lret
not
add
add
ja
add
jbe
aam
xchg
add
aam
add
add
add
mov
mov
jb
add
int3
movsl
mov
mov
clc
add
mov
popa
ret
mov
test
add
pop
cmp
jne
push
push
push
call
outsl
add
push
pop
loopne
cmpsb
jns
add
jne
push
add
popf
cmpsb
aam
in
add
add
add
mov
cld
add
add
jbe
fucomp
jmp
add
push
add
sar
les
test
add
loope
les
stc
mov
fiaddl
mov
add
add
add
repnz
lea
pop
mov
test
je
mov
push
not
inc
pop
add
push
sub
dec
pop
cmp
je
jmp
xor
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
js
pop
lahf
lcall
push
imul
add
mov
movsb
js
xchg
incb
add
mov
add
clc
add
mov
cmc
mov
loop
add
add
mov
cmc
add
imull
xchg
shr
add
add
js
mov
add
mov
lea
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
call
cld
out
hlt
fistl
push
popf
push
lret
add
jo
jmp
add
sahf
xlat
scas
add
add
add
mov
add
add
stos
add
mov
push
mov
rcr
cli
add
insb
lea
jl
notl
jne
jmp
add
ret
pusha
lds
lock
jge
xchg
enter
mov
addb
add
add
nop
add
pusha
and
pop
pop
pop
push
lea
push
push
push
push
call
pop
mov
jns
loopne
add
jle
xorb
add
add
add
push
insb
mov
jae
add
add
incb
lds
mov
adcl
movsl
add
int3
lahf
add
outsl
push
addr16
mov
add
out
add
fwait
stos
xchg
int
add
in
out
add
mov
imul
add
popa
push
lea
pop
leave
push
push
lea
push
push
push
push
push
push
push
lea
push
call
pop
add
add
arpl
jns
shll
add
add
mov
add
push
pop
mov
add
mov
rcll
imul
mov
ljmp
out
in
rcrb
mov
add
add
add
cmc
test
mov
sub
or
push
push
push
lea
push
lea
push
push
call
mov
pop
je
int3
add
add
rolb
test
add
aad
mov
roll
fdivs
add
push
lret
addb
add
mov
sarl
jbe
hlt
mov
cmc
add
gs
jo
jmp
xorb
mov
add
shl
add
js
loopne
add
icebp
add
add
addb
sti
cmpb
pop
lea
push
push
push
push
call
add
sahf
lods
movsl
pop
test
xchg
add
add
add
xchg
in
jge
add
add
test
mul
outsl
fildll
add
push
add
mov
lret
push
iret
fwait
cmpsb
out
add
je
add
sarl
aad
lea
fbld
test
add
jle
test
mov
mov
jnp
fsub
mov
mov
jl
mov
aam
bound
pop
pop
pop
pop
push
lea
pop
pop
push
push
push
call
add
mov
addr16
mov
xchg
add
mov
mov
add
jbe
pop
add
push
fidivrs
add
push
pushf
insb
add
add
add
xchg
xchg
add
add
pop
into
in
xchg
popl
add
add
add
pop
aam
add
mov
aam
bound
leave
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
jnp
popf
add
loop
in
pop
add
add
push
icebp
add
mov
add
aam
lcall
lea
mov
push
mov
add
add
aad
rcl
add
cwtl
imull
mov
jno
jmp
scas
add
xchg
push
add
into
add
pop
ret
mov
push
lea
not
lea
pop
pop
pop
pop
push
push
push
push
push
call
add
pop
mov
mov
rorl
stos
pop
mov
hlt
add
mov
mov
gs
xchg
add
icebp
ja
arpl
add
add
mov
mov
out
cwtl
add
xchg
loope
mov
push
add
add
add
add
add
popf
pop
jl
add
lea
pop
pop
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
push
addr16
add
in
jo
std
test
mov
xlat
into
add
js
in
mov
fsubrs
std
add
add
in
addr16
aam
xchg
scas
mov
xchg
add
lret
mov
mov
rol
mov
xchg
pop
call
stos
ret
stos
push
repnz
ja
mov
lea
pop
leave
ret
rol
push
add
inc
pop
rol
push
pop
xor
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
pop
cli
jb
pusha
add
pushf
lcall
add
jb
mov
jno
add
xchg
add
push
fcoms
flds
fwait
lods
sahf
add
add
add
xchg
stc
popf
add
add
pop
add
hlt
add
add
mov
add
add
cmpl
clc
mov
add
shl
add
push
add
ljmp
mov
lea
pop
inc
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
cli
jl
add
push
add
add
add
xlat
fwait
add
mov
mov
add
add
add
mov
aam
fnsave
add
mov
add
add
in
cli
add
xchg
mov
add
mov
lock
push
add
movl
in
fsts
jae
andb
mov
lea
pop
cmpb
jne
ret
mov
shll
sti
movsb
shll
sti
movsb
shll
sti
movsb
adc
sti
movsb
andl
sti
mov
pop
mov
sti
movsb
shlb
sti
jg
mov
and
das
inc
mov
lds
scas
sbb
sbb
mov
inc
cwtl
cmp
lods
push
jge
repnz
cmp
ret
das
ret
mov
dec
mov
add
lcall
fsub
jmp
mov
pop
fs
ds
xchg
xchg
jmp
adc
ret
add
cmp
arpl
or
mov
sbb
fdivrs
sub
iret
and
pop
mov
xchg
sbbl
stos
sbb
mov
icebp
mov
add
mov
push
inc
mov
fs
ds
or
sbb
pop
push
in
lds
hlt
mov
and
and
cmp
sbb
push
dec
jns
push
jne
push
push
sub
mov
stos
adc
inc
mov
pop
xchg
cmpl
adc
dec
shr
pushf
in
sti
add
mov
dec
jb
dec
mov
mov
xchg
iret
sahf
cmpsb
jo
jg
xor
fld
mov
ds
jne
adc
sahf
mov
mov
loope
fsubp
inc
add
dec
xchg
mov
or
mov
jg
mov
cmp
or
pushf
rclb
lret
jmp
int
dec
addl
cld
lcall
cmp
dec
jl
in
sub
mov
jge
mov
out
sbb
rcrl
or
loope
aad
jae
mov
mov
stos
inc
push
pop
xchg
mov
je
sbb
adc
das
push
in
pop
xchg
lock
mov
push
xchg
movsl
stos
iret
roll
jp
in
call
stc
loopne
iret
bound
inc
insl
imul
sbb
push
fwait
or
pop
mov
fisubs
jg
sub
inc
test
mov
push
in
ds
mov
daa
bound
shrb
pop
cmpsl
sahf
call
fcomi
repz
or
sarl
outsb
scas
push
or
add
loopne
les
rcr
sar
sub
cmp
lods
test
sahf
out
mov
mov
push
adc
lock
jb
ret
aas
jbe
icebp
push
adc
stos
lock
cmp
mov
int3
and
ret
xchg
jp
in
inc
dec
mov
sti
pop
outsb
cmpsb
cmpsb
cmp
daa
stc
mov
push
rolb
lea
es
ss
mov
les
pop
adc
pop
inc
int3
fnop
in
push
mov
xchg
dec
sub
test
lock
out
loopne
push
mov
mov
fsubs
sbb
mov
sbb
int
jae
sbb
nop
decl
mov
in
sarb
bound
fs
jmp
mov
push
xor
gs
das
xlat
jnp
loope
rdmsr
jo
dec
js
xorl
lahf
or
jmp
and
cwtl
jno
out
fcomps
dec
bndstx
and
adc
inc
mov
out
inc
jne
loope
pop
pop
inc
lret
adc
movsb
mov
shl
adc
dec
pop
fidivrl
incb
mov
jbe
jge
outsl
jp
xor
sub
iret
iret
jno
ds
push
jge
jo
frstor
add
xchg
dec
inc
pop
push
sub
sbbb
ja
jb
or
test
xchg
xor
add
push
mov
inc
es
mov
hlt
pop
stos
push
sbb
ffreep
or
sahf
je
push
xchg
inc
pop
ret
clc
adc
gs
mov
lds
push
repz
test
or
stos
xchg
inc
enter
pop
sub
jno
mov
dec
lock
adc
pop
stc
sub
inc
insb
mov
dec
insb
stos
scas
imul
das
push
mov
inc
dec
adc
adc
scas
or
mov
imul
mov
test
repz
in
xor
fstps
xchg
mov
lds
ja
stc
adc
fnstenv
mov
pop
dec
mov
stos
repnz
mov
data16
inc
sti
icebp
in
mov
ret
shrb
out
xlat
dec
loope
fcompl
dec
or
les
fs
fldl
ficompl
leave
lret
pop
inc
scas
push
cmpsb
fwait
push
jbe
cmp
adc
fs
mov
cmpb
loopne
xchg
jo
jge
movsl
cmp
ret
cmpsl
ljmp
xchg
xchg
mull
sbb
lret
movsb
jecxz
or
ja
aad
sbb
mov
or
test
ss
sahf
dec
or
pusha
dec
push
daa
pop
lods
in
test
mov
xchg
push
sub
jp
ret
push
mov
dec
cld
add
xor
mov
mov
mov
sti
out
adc
sahf
popa
jnp
pushf
fs
xor
cmc
shll
mov
gs
pop
sub
pop
addl
sbb
out
lahf
push
jnp
je
shll
inc
cwtl
and
push
aad
jns
and
push
pop
pop
dec
hlt
aaa
pop
insb
js
cmpsl
das
mov
sub
call
lea
loop
dec
push
jmp
jmp
and
inc
add
mov
push
cmpsb
in
scas
sub
mov
lock
adc
adc
adc
mov
cmp
sbb
cli
les
leave
fnsave
outsl
sub
lock
xchg
push
pusha
push
and
test
mov
dec
repz
xchg
fldt
adc
fstps
mov
fidivs
xchg
std
ror
pop
sbb
das
clc
pop
and
dec
cwtl
cli
int
shlb
or
sbb
jbe
cmp
clc
sarl
out
cmpsb
repnz
test
cmp
lahf
outsl
pop
sbb
roll
add
pop
push
push
movsl
add
loop
mov
rcll
mov
outsl
lods
xchg
push
ret
ffree
cmp
xchg
pop
mov
clc
xlat
sub
jb
mov
add
shll
push
outsb
iret
test
notb
arpl
shlb
cli
sbb
fadd
jns
in
int3
leave
iret
and
test
ds
mov
cltd
rorl
jg
popa
pop
cmp
adc
mov
dec
xor
jmp
xor
push
test
test
lods
adc
aaa
sbb
jns
xor
lahf
icebp
pop
mov
mov
in
lods
dec
mov
inc
xchg
jno
bound
lock
xchg
mov
sbb
or
sub
fwait
or
jne
lahf
xchg
fidivl
enter
pop
adc
and
jns
pop
int
data16
cwtl
adcb
ror
aas
xlat
or
sub
jns
dec
xchg
jne
repz
push
loop
addl
repnz
shl
das
loopne
mov
fs
shl
mov
enter
sahf
mov
lea
fs
daa
cwtl
fs
cmp
dec
pop
xchg
les
cmp
les
ja
xchg
and
and
subl
xchg
xchg
sub
subl
addr16
ficomps
or
int
fsubl
xor
ret
jecxz
enter
lret
jecxz
jo
in
je
sbb
push
loopne
sarl
sub
mov
int3
aaa
mov
inc
pop
and
lret
mov
xchg
adc
lea
xlat
rcl
jmp
lods
in
push
jmp
nop
jecxz
pop
mov
pop
and
mov
pop
dec
adc
orb
adc
inc
loopne
popf
mov
aad
movsl
lcall
insb
cmpsl
sub
cwtl
dec
sbb
xchg
ret
fbld
and
fidivs
gs
repz
sbb
sbb
leave
sub
pop
sbb
sub
lods
cwtl
movsb
xor
addb
imul
fs
add
dec
je
mov
arpl
nop
pop
les
push
outsb
in
add
cmp
cmp
loopne
fnsave
out
test
ret
mov
pop
daa
sub
aaa
in
xchg
push
xlat
cs
mov
insl
cmp
xchg
sub
and
repnz
leave
xchg
repz
cltd
fnclex
imul
adc
push
dec
push
xor
out
mov
dec
xor
mov
xor
sub
jo
add
sub
pushf
inc
add
data16
fs
out
inc
xor
and
ret
mov
or
mov
pop
fildl
out
push
fwait
out
sub
pop
dec
push
test
mov
cmp
les
cmp
es
inc
call
pop
sub
aaa
push
testl
stos
outsb
sub
mov
and
in
mov
xor
sbb
fs
inc
test
push
lea
data16
sub
adcl
adc
xchg
push
adc
shl
das
in
mov
mov
test
pop
lahf
cli
cmp
sub
cmp
push
bound
sbb
ja
inc
or
inc
fstpl
and
cld
sbb
bound
mov
mov
and
loopne
enter
cmp
pusha
or
jle
inc
enter
push
jle
adc
les
and
pop
repz
jns
mov
xchg
sbb
cmc
mulb
std
pop
cs
or
pop
jnp
cmp
fnsave
dec
xor
push
sub
aad
mov
sbb
addr16
stc
sbb
add
test
jle
je
aas
in
pushf
mov
add
jecxz
sbbl
mov
adc
stc
xchg
xorl
mov
jg
lea
or
sbb
lea
dec
aam
and
mov
sub
and
stos
mov
outsl
sti
sub
les
cmp
mov
or
xor
andl
fnstcw
mov
jnp
stos
repnz
xor
jecxz
outsb
xchg
mov
pop
aad
sahf
dec
cmp
push
xchg
jns
sbb
and
or
test
sub
fimull
cli
inc
xchg
movsb
inc
xchg
xor
add
mov
mov
lods
rep
lahf
cwtl
xlat
cmp
mov
imul
stos
xorb
leave
test
xor
push
ljmp
loop
js
inc
sti
sbb
imul
dec
fisttps
fwait
inc
xor
mov
movsb
dec
mov
cmp
xlat
and
mov
bound
je
aaa
jbe
add
out
lock
or
dec
and
mov
xor
loope
mov
stos
mov
das
sub
push
test
jo
sub
das
js
push
push
pop
and
hlt
int
ljmp
arpl
cs
adc
into
sahf
insb
push
pop
mov
mull
out
ret
pop
leave
sti
pop
jnp
pop
sbb
mov
mov
ja
sbb
pusha
das
bound
pop
adcb
clc
or
xchg
xchg
xchg
movsb
roll
fistps
cld
jl
in
dec
dec
xchg
arpl
xlat
or
aam
sti
jmp
stc
push
dec
ds
lock
xchg
xchg
or
cld
or
jnp
rcr
daa
sub
add
dec
out
push
mov
mov
andb
inc
daa
test
xor
mov
outsl
gs
lods
jle
xorb
adc
pop
loop
popl
pop
sub
dec
pop
mov
pop
movsb
clc
nop
jl
push
add
xlat
xchg
out
add
push
cmp
jp
add
cmp
cwtl
sub
leave
inc
pop
mov
pusha
and
popf
and
dec
mov
push
cld
jle
aad
xchg
pusha
cmc
pushf
sbb
cli
into
rclb
adc
adc
iret
testl
adc
imul
jb
roll
cld
xor
adc
cs
or
fimull
mov
inc
aam
add
jnp
push
imul
cli
movsl
std
pop
out
push
cmp
dec
test
cmpsl
and
add
lret
lahf
adc
xor
loop
mov
jno
outsb
mov
lea
inc
scas
fcmovnu
push
aaa
mov
fbld
adc
xchg
push
pop
xchg
movsb
inc
ja
mov
loope
push
ss
pop
lcall
pop
xchg
orl
mov
mov
sbbb
xchg
add
push
jg
mov
in
iret
ljmp
inc
ss
cltd
cmpsl
fnstcw
dec
aam
xchg
pop
jno
xchg
pushf
test
sbb
lods
jecxz
stc
cmc
pusha
fidivs
std
cmpsb
aaa
mov
out
pop
and
or
subl
int3
dec
gs
or
lret
mov
jecxz
lret
or
jp
mov
sahf
into
push
xchg
xchg
int
ret
jg,pn
imul
cmp
into
mov
pop
insb
sub
jmp
xchg
mov
gs
in
into
in
aaa
mov
mov
js
mov
pop
or
out
lahf
jge
scas
lahf
mov
mov
xchg
mov
xchg
mov
push
les
es
push
xchg
std
mov
mov
push
xchg
xchg
sbb
add
push
fnstsw
ret
repz
in
push
pop
imul
jle
pushf
lods
mov
push
fists
jmp
adc
int3
out
gs
mov
sub
push
mov
sti
ret
sti
ljmp
in
ljmp
pushf
jo
inc
push
jp
aad
add
add
ficomps
out
gs
xchg
jecxz
aam
xlat
lods
adc
sbb
xchg
into
jno
sbb
aad
int3
mov
inc
mov
sbb
and
clc
in
xchg
jg
push
int
mov
mov
mov
int
dec
lcall
adc
inc
pop
lret
lahf
push
or
fiadds
jl
xchg
mov
outsl
stos
ret
adc
or
outsl
lret
sbb
dec
enter
mov
popa
stos
in
push
or
push
mov
loopne
adc
cmpb
mov
or
sub
ja
pop
push
push
shll
mov
fs
out
jo
cwtl
cmp
jl
or
ficomps
popa
fsubrl
adc
cmc
add
and
mov
int
mov
cmpsb
je
mov
imul
pop
in
mov
notl
or
mov
push
dec
pushf
push
cmp
loop
leave
push
clc
and
sub
jne
xchg
lret
xchg
mov
xchg
sub
add
pop
lahf
mov
shlb
xorb
pusha
test
aad
push
dec
pop
sahf
jns
sub
movsl
int3
inc
jb
pop
test
inc
push
xlat
out
add
mov
jg
scas
xchg
jae
lods
push
and
mov
addb
xchg
cmp
dec
xchg
out
and
and
inc
cmpl
adc
jne
es
mov
loopne
data16
call
inc
cmpsl
jns
and
add
push
mov
and
jecxz
movsb
movsl
pop
mov
mov
test
in
lds
stc
pushf
cmp
cltd
pop
pop
js
repnz
int3
cmc
scas
sbb
imul
push
mov
cmp
push
or
decb
es
int
jo
xchg
xchg
inc
addr16
jne
hlt
mov
out
inc
jmp
jg
fsts
jmp
push
lods
inc
or
mov
cmpsb
stos
pop
dec
pushf
cs
test
rcrb
add
imul
xchg
jne
mov
bound
jae
nop
sub
inc
jl
imulb
repnz
inc
push
mov
stos
jae
xor
into
in
sbb
ret
jmp
mov
push
jle
adc
cmp
movsl
or
xor
xchg
mov
sar
lods
mov
ljmp
and
cld
or
cli
inc
cmp
mov
push
popa
mov
sub
mov
out
xchg
test
rcr
push
mov
adc
in
aam
sbb
es
add
dec
test
xor
jecxz
into
adc
mov
fwait
sbbl
mov
jnp
aad
in
add
push
int3
xlat
sahf
xchg
filds
pop
ljmp
pop
dec
out
pop
lret
imul
or
out
movsb
mov
in
or
jne
push
lahf
xchg
push
imul
pushf
call
cmpsb
ret
xlat
cmp
jp
fisttpl
inc
lahf
sub
hlt
mov
add
add
xor
mov
cmpl
iret
mov
pop
shl
push
std
cmpsb
cmpsl
lods
std
stc
adcl
adc
jbe
pop
daa
jl
ret
mov
es
into
daa
jno
xchg
stc
aam
int
test
mov
lock
dec
or
xlat
mov
int
scas
xor
mov
fstpt
clc
pusha
gs
push
cmpsl
pop
outsb
repz
add
jo
jecxz
jno
in
in
int3
cmp
andb
jnp
fnsave
aaa
pop
or
xor
cmp
in
cmp
movsl
imul
fisttpll
xor
and
lea
mov
sbb
push
push
jns
stos
fnclex
add
subb
sti
mov
xchg
das
cmp
gs
push
xchg
dec
hlt
cli
mov
inc
cld
hlt
jp
nop
or
cmp
inc
mov
jne
loopne
div
xchg
xchg
add
roll
mov
xor
cwtl
testl
loope
dec
js
call
daa
dec
jae
mov
jno
std
cmpsb
adc
pop
push
xor
lret
les
scas
and
lods
ds
ss
and
arpl
lds
jp
jb
cmp
pop
in
or
mov
mov
or
divl
lret
rcl
mov
mov
shll
notb
movsb
mov
roll
mov
mov
aad
xchg
or
xchg
push
xchg
int
dec
jnp
cmp
xchg
frstor
fwait
xchg
push
rcll
sbbb
sub
movsl
mov
cwtl
idivl
in
mov
icebp
sbb
lahf
pop
stos
mov
fs
mov
std
fwait
clc
mov
cltd
mov
jns
popf
lea
or
jl
fsin
mov
jnp
mov
xor
inc
iret
xor
pop
cmp
xor
push
cs
xchg
inc
cmc
sti
es
test
push
aad
xchg
sbb
add
fbstp
les
movsl
inc
mov
cmp
mov
sbb
xchg
outsl
mov
ds
ja
por
into
in
int3
iret
out
xchg
loopne
push
addr16
int3
insl
lret
sbb
sub
sbb
lods
mov
add
xlat
lret
lds
mov
xor
mov
push
jae
push
test
sbb
pop
imul
in
cmpsb
shrb
dec
jecxz
aas
xchg
jmp
int
in
sarl
mov
sub
outsl
in
mov
push
repz
mov
mov
push
test
mov
bnd
fcmovnu
sub
push
push
in
inc
cmp
fxch
jo
out
insb
test
xchg
or
and
inc
adc
or
addr16
je
mov
cwtl
fcmove
imul
lds
xor
and
arpl
and
inc
les
test
or
pop
fstpl
cmpsl
sbb
jns
mov
mov
movb
insl
cmp
loopne
in
and
mov
mov
jbe
xchg
outsl
mov
pop
lods
pop
lahf
les
xchg
rolb
cli
cmpsb
mov
ficoml
xchg
mov
inc
cmpsb
sbb
jns
adc
add
aas
xlat
js
mov
add
and
push
in
push
cmp
adc
test
lahf
mov
dec
jnp
cmp
sub
addr16
shlb
hlt
mov
pop
pop
or
inc
imul
jo
sbb
ljmp
cltd
inc
jnp
xor
mov
push
and
mov
pop
test
cmpsl
mov
and
mov
add
inc
jmp
lret
lods
xor
mov
fmuls
aas
and
xsha1
cmpsb
or
loope
addr16
pop
inc
out
inc
mov
pop
xor
add
mov
into
setb
outsb
pop
jbe
repnz
stos
je
ret
sub
iret
dec
out
mov
jmp
imul
jg
cmc
cmpsl
jg
aas
out
fscale
cltd
sub
push
inc
adc
out
int
dec
ret
rcrl
xor
adc
nop
leave
lahf
adc
cwtl
sbbl
and
movsl
pop
je
adc
push
lahf
outsb
mov
jp
into
shlb
sub
jo
push
dec
jg
outsl
pop
addr16
pop
xchg
mov
out
mull
push
sbb
int3
or
push
cld
movsl
int
rolb
cmp
leavew
dec
fs
cltd
out
dec
aas
stos
pop
jns
jecxz
mov
pop
sbb
lea
insl
mov
cmp
and
lock
scas
aaa
cs
pop
imul
imul
dec
cmpsl
insl
adc
xor
ret
push
cs
js
insb
pushf
dec
movsb
in
push
inc
sbb
xor
loop
pop
xchg
xchg
and
js
test
mov
sub
cmp
stc
addr16
mov
das
in
inc
fwait
rorl
xor
cmpsb
jno
mov
mov
pop
enter
or
jno
cmp
cltd
push
popa
xorb
jnp
pop
dec
adc
xor
push
jmp
sub
and
cmp
enter
jb
jno
sbb
mov
in
jbe
mov
add
xchg
lods
into
cmp
mov
add
or
xchg
pop
jo
rclb
mov
cltd
jmp
jg
mov
arpl
scas
xchg
xchg
xchg
sub
jae
xor
test
ljmp
sbb
icebp
scas
push
test
int
movb
adc
inc
pop
adc
loopne
sub
fistps
in
mov
test
xor
mov
mov
pop
dec
das
imull
xor
in
pop
xor
mov
adc
xchg
inc
ret
push
in
sti
mov
dec
xchg
adc
sub
add
call
jmp
dec
sub
aam
jb
imul
sbb
dec
bound
xchg
addr16
int
out
cli
mov
and
or
dec
sbb
xor
mov
sbb
lahf
jecxz
call
adc
test
cmp
xchg
stos
xchg
out
ror
call
adc
mov
popf
push
adc
sub
in
mov
inc
adcl
adc
leave
dec
dec
out
pusha
sub
dec
cmp
cmc
test
lret
inc
imul
pop
out
inc
daa
xor
enter
aad
ja
or
add
inc
ljmp
rclb
and
enter
push
pop
aad
xor
fdivl
sbb
call
xlat
xchg
in
nop
mov
pop
jbe
pop
push
pop
or
add
outsl
sub
cmpsb
daa
add
int
pop
inc
call
inc
adc
pop
xlat
mov
or
inc
cmpsl
sub
daa
xor
ljmp
fldcw
rclb
jne
inc
sbb
fyl2xp1
xor
int3
ja
mov
stc
cmp
jb
push
push
ret
mov
lret
jle
add
inc
and
scas
ret
mov
xor
pop
in
sbb
mov
iret
popa
lea
and
pop
adc
mov
cmp
loopne
jg
mov
aas
fists
xor
mov
or
fldenv
les
jl
mov
and
addr16
lret
sbb
sbb
inc
push
mov
mov
push
inc
add
insb
pop
shll
pop
push
clc
lods
arpl
out
xlat
dec
pop
sbb
fnstsw
mov
adc
dec
inc
daa
cmp
push
adc
cmp
xchg
xchg
addb
pop
push
pop
pop
xor
sub
inc
and
xor
into
cmp
aaa
orl
cld
icebp
mov
push
and
ret
jp
cmpsb
pop
fwait
mov
jne
nop
mov
outsb
sub
dec
mov
outsl
sub
push
enter
jecxz
shr
test
adc
nop
mov
fisubs
shl
shrl
adc
push
mov
gs
loopne
aam
mov
dec
cld
xchg
push
or
outsl
add
stos
xor
sbb
pop
pop
imulb
or
fiadds
inc
sub
cld
addb
add
pop
call
cli
stos
inc
ljmp
ds
mov
stos
out
and
faddp
cmp
stos
int3
add
cmp
jecxz
mov
loop
mov
sub
call
in
sbb
mov
cli
rcrb
sbb
xchg
sub
popf
ret
xchg
xor
mov
test
dec
lret
dec
movsl
aas
lahf
fadds
dec
repz
iret
xchg
mov
mov
cmp
pop
xchg
rcr
jbe
lahf
testl
orl
mov
clc
lea
push
fldenv
dec
jecxz
lods
in
dec
cs
jle
enter
xchg
leave
mov
imul
xchg
push
inc
sub
ret
mov
test
out
inc
repnz
inc
push
pmuludq
add
out
mov
mov
shl
addr16
rcrb
xchg
clc
popf
popf
scas
push
adc
das
popl
stos
xor
pop
imul
push
adc
push
ljmp
sbb
loope
hlt
push
xor
aas
sbb
or
mov
es
shrb
sub
mov
pop
add
and
mov
shlb
pop
push
or
cwtl
push
movsl
sub
inc
or
and
jae
inc
sarl
jle
out
sub
ficomps
es
ss
add
cmp
pop
cltd
call
fcmovu
leave
imul
pop
jb
data16
xor
fwait
js
dec
cmpsb
pop
cmp
call
push
test
out
mov
movsb
movsl
or
mov
imul
pop
imul
sub
push
shl
rol
dec
bound
sbb
sub
imul
push
add
push
in
addr16
push
push
test
stos
push
xor
mov
insb
xchg
fwait
mov
mov
repz
jo
scas
cmp
loop
hlt
dec
jne
pop
mov
call
mov
xchg
ja
lds
sub
shl
insl
in
mov
movsl
insb
shrl
cmp
pushf
push
xchg
movb
gs
xorb
adc
dec
cmc
add
in
jmp
push
repnz
jb
and
in
idivb
xchg
mov
test
cmp
inc
pop
jl
icebp
mov
xchg
push
pop
jmp
jge
jns
adc
arpl
jecxz
xchg
fimull
cmc
jb
jno
xchg
sbb
in
xor
in
in
jo
rclb
xchg
fiaddl
dec
enter
mov
sarb
test
sub
push
outsb
js
test
adc
inc
inc
jae
sub
mov
rorl
push
sbb
into
adc
xchg
stos
bound
aam
cmp
lods
out
icebp
lcall
ret
std
cld
mov
sbb
cltd
insl
inc
jmp
lock
lods
xchg
xor
ficoms
mov
lock
jp
jmp
sbb
cmp
pop
lret
aam
add
jecxz
int3
cmp
hlt
mov
ret
push
iret
dec
rorb
stos
pusha
int3
faddl
mov
mov
shll
negb
xchg
xchg
imul
mov
addr16
dec
xlat
sub
mov
inc
pop
cmc
scas
xlat
ret
pusha
mov
push
mov
mov
fsubrs
cs
dec
test
leave
cli
add
mov
xor
cmp
push
jnp
ss
mov
loope
call
mov
sub
xchg
aas
and
out
jnp
shrb
loopne
push
lds
test
dec
aas
pop
or
and
mov
insb
push
dec
fnstcw
loope
ss
pop
fnsetpm(287
ret
rcrl
dec
push
lret
fcoml
jg
nop
mov
call
clc
fwait
mov
shr
xor
jp
js
int3
jne
and
jge
icebp
fs
outsb
pusha
xchg
and
add
xchg
ja
sub
xchg
aad
je
scas
insl
or
loop
pop
imulb
cwtl
adcb
movsl
xchg
adc
xlat
xor
les
insb
sub
mov
icebp
int
aas
mov
mov
and
cmpsl
adc
pop
mov
push
mov
mov
fnsave
into
out
or
push
mov
sub
lahf
sbb
clc
repnz
fbld
cmp
sbb
fwait
shll
fcompl
jne
into
or
hlt
daa
jle
mov
fistps
fcom
ljmp
int
imul
add
idivl
and
pop
pop
mov
shll
sub
mov
xchg
mov
mov
movsb
jl
in
sar
adc
inc
insb
int
adcl
aad
mov
ret
mov
mov
mov
loop
ret
out
out
xor
rolb
cli
xor
inc
xor
add
and
or
lds
clc
push
stc
mov
xor
in
jo
pop
pop
int
dec
sbb
pop
daa
lret
sub
cmp
jae
scas
jae
out
dec
js
lret
inc
adc
xor
sub
add
lods
enter
add
push
insb
loopne
je
sub
in
std
mov
jne
mov
sub
pop
sbb
aad
mov
lods
lret
outsl
shll
das
cmp
inc
sbb
and
adc
pop
mov
push
inc
add
sbb
jnp
pop
sbb
lcall
xchg
fs
fdivrs
stc
or
mov
in
push
inc
negb
repnz
jmp
or
xchg
insb
or
pop
mov
adc
push
in
daa
sti
fdivrl
hlt
rol
incl
shl
cmp
std
outsb
in
jns
or
cmp
sub
mov
cmp
pop
int3
cltd
shl
xchg
test
xchg
sbb
xlat
inc
or
add
xor
daa
sti
div
sub
lahf
inc
popf
cmp
lods
test
sbb
addr16
mov
sbb
das
cmpsb
popf
jge
mov
lds
dec
cmp
xchg
mov
aad
xor
cmpsb
xor
add
sbbl
fisttpll
mov
fwait
push
rcl
test
jo
sbb
rol
jge
adc
xchg
ret
rorb
cmp
outsl
pop
dec
test
arpl
mulb
or
mov
pop
add
aam
pop
mov
sbb
pop
lods
push
inc
jo
push
inc
imul
or
gs
out
addr16
ret
cmp
rcr
cli
jp
xor
adc
fcompl
outsl
gs
add
cmp
push
pop
adc
scas
mov
shrb
jmp
ret
jl
insb
add
add
stos
inc
fwait
cmc
cmpsb
dec
mov
fiaddl
inc
lock
fidivs
repz
xchg
js
add
push
jmp
or
std
mov
push
test
mov
leave
xchg
mov
scas
insl
and
cs
out
popl
dec
xlat
shlb
or
sub
inc
inc
out
les
ds
lahf
outsl
es
or
cmpsb
jl
cltd
pop
pop
lods
lahf
xchg
cmp
dec
or
jb
gs
dec
out
lahf
aas
push
in
in
dec
sbb
dec
loope
push
lahf
add
jbe
pusha
push
push
cmpsb
or
dec
sbb
std
loopne
mov
es
push
cmpsl
sarb
or
mov
test
jge
mov
mov
rclb
icebp
xor
inc
xor
jmp
inc
jb
mov
nop
fcoms
ds
push
outsb
pop
out
aam
mov
dec
jmp
mov
movsl
pop
dec
jp
jge
push
fstpl
outsl
mov
mov
mov
sub
xchg
jecxz
dec
add
stos
cmp
jbe
in
cmp
cwtl
mov
mov
pushl
lret
inc
mov
dec
addr16
inc
xor
mov
push
xor
out
std
xchg
pop
adc
es
int
ljmp
xchg
adc
das
xchg
mov
sarl
in
leave
push
push
icebp
ficoml
jmp
insl
sti
divl
and
popa
jmp
push
mov
push
pop
pop
and
xchg
inc
outsb
int
rcll
jnp
push
cmp
std
stc
or
lret
lret
aad
enter
sarl
jns
rclb
dec
outsb
jo
xchg
fcomps
pop
jbe
jle
cli
jo
dec
dec
hlt
or
stc
cwtl
rolb
lds
pop
fnstenv
cs
loope
sub
aam
sub
jp
stos
cmp
iret
negl
inc
inc
scas
inc
fs
xchg
es
shll
js
out
icebp
test
in
and
call
les
add
inc
inc
jmp
rcr
push
jno
sub
and
test
ja
add
and
adc
sbb
lcall
jns
adc
mov
and
and
outsl
mov
mov
cs
loopne
push
adc
lahf
lods
fs
or
int
cmp
bound
xchg
repz
jle
jmp
mov
cltd
xchg
push
jbe
enter
out
or
sub
mov
mov
cmpsb
lahf
dec
ror
mov
stos
adc
inc
push
jbe
aas
test
pop
lds
ds
push
inc
movsb
push
pop
rcrl
xchg
sub
loop,pn
xor
lds
ja
mov
sub
xor
movsl
cmp
mov
sbb
mov
sub
lahf
lock
scas
lea
icebp
xchg
lcall
orb
mov
int
mov
aam
add
cs
push
sbb
addr16
movsl
outsl
mov
fs
mov
loop
jo
call
and
prefetch
lds
cmp
outsl
push
xlat
push
adc
cmpsb
aam
push
je
iret
pusha
roll
jns
xor
js
insl
sbb
and
mov
mov
xlat
pop
jecxz
add
icebp
dec
int3
xchg
repz
iret
pop
jo
jle
pusha
cmp
mov
dec
pusha
imul
icebp
and
jb
cmp
push
mov
outsl
mov
orb
adc
mov
adc
sub
adc
cmpsl
cli
shrl
or
mov
stos
leave
cmp
xchg
scas
and
mov
rolb
push
adc
dec
jp
pop
mov
pop
dec
push
mov
and
xor
cwtl
pop
sub
mov
repnz
push
mov
pop
pop
cli
jo
xchg
mov
mov
mov
mov
outsl
movb
push
jg
iret
push
aaa
xchg
icebp
arpl
dec
lods
testb
dec
mov
push
xchg
aam
std
xor
fld
push
add
or
mov
xchg
pushf
movsb
aas
int
mov
mov
cmc
mov
push
push
ds
test
bound
push
cmp
jo
jmp
cmp
lock
scas
xor
fsubs
push
and
xchg
popf
sub
and
cmp
call
data16
dec
cmp
ret
sbbl
and
sbb
fisttpll
clc
cmp
sbb
repz
sub
inc
inc
push
cmc
stc
out
mov
inc
jl
mov
push
loope
movsb
lret
inc
pop
int
js
add
sub
call
out
mov
push
pop
inc
shll
mov
jnp
lods
test
inc
cmp
and
std
enter
mov
mov
lahf
jge
mov
sub
adc
adc
adc
mov
cld
fiaddl
aad
sbb
stos
mov
mov
lcall
push
jae
shrl
xchg
lock
pop
lahf
cmp
add
cmp
mov
dec
push
mov
xchg
push
faddl
add
pop
lahf
test
dec
cmp
pop
mov
dec
lcall
enter
daa
or
loope
int3
insl
dec
push
sub
dec
sub
jmp
fsubrp
or
sub
adc
aad
lock
lret
xor
cmp
popf
mov
out
pop
add
fldt
pop
mov
mov
lahf
in
int3
movsl
shll
test
mov
adcl
mov
jecxz
mov
cmp
xchg
lea
sbb
dec
loopne
xchg
arpl
and
adc
insb
jo
jo
scas
bound
cmp
out
test
test
xchg
clc
ljmp
cmp
cld
sti
lret
pop
and
pop
and
cmpl
movsb
dec
ljmp
or
stos
gs
mov
inc
add
mov
lock
jmp
pop
xor
mov
dec
outsl
aad
mov
mov
adc
lea
test
mov
mov
cmpsb
push
dec
cmpsb
mov
leave
push
fsub
iret
dec
jns
leave
mov
sub
cmc
or
mov
cmp
sahf
movsb
mov
ficompl
int3
push
cmp
mov
dec
push
mov
cmp
mov
and
or
xor
add
dec
inc
mov
xor
mov
clc
shl
in
in
mov
dec
and
push
cltd
cmp
push
outsb
xchg
xchg
aaa
in
mov
cmp
inc
xor
stc
ljmp
push
push
stos
rclb
ja
and
fwait
ss
xlat
dec
mov
insb
cmpsl
sarl
or
cmp
or
pop
mov
mov
pop
pop
or
xchg
aam
xchg
sub
addr16
ret
sar
ljmp
sub
fstl
mov
pushf
jle
pop
mulb
xchg
pop
jo
fld
push
aad
xor
mov
rcrl
jmp
out
xchg
add
sbb
mov
xor
out
jbe
push
sahf
in
mov
stos
xchg
xchg
movsb
mov
push
adc
push
loope
in
dec
mov
jb
in
push
lods
pop
ror
dec
jno
stc
call
lock
jns
xor
xor
and
outsb
xchg
add
xchg
jo
faddl
mov
adc
jno
dec
lock
jl
sbb
mov
cmpsb
mov
fnstenv
outsb
sbb
cld
and
pop
repnz
push
mov
mov
call
in
rorb
test
push
xorb
jae
pop
dec
sub
stc
hlt
sbb
pop
dec
scas
pop
xchg
jne
dec
ja
pop
cld
mov
ss
fisubl
out
mov
pop
cwtl
adc
shl
test
adc
cmp
dec
je
push
fsubrl
repz
push
enter
sub
xor
xor
jge
les
in
mov
aas
ljmp
mov
xchg
outsb
lods
imul
test
cmp
dec
inc
pop
adc
fwait
daa
xchg
xchg
pop
dec
ss
ret
in
push
jmp
mov
loop
cmp
push
incl
ljmp
das
movsl
add
push
fimuls
mov
inc
jo
pushf
lods
shll
imul
pop
xlat
in
jns
mov
out
fld
mov
in
sbb
movsl
fistps
faddp
sub
outsb
xchg
or
cmpsl
push
and
mov
rsqrtps
pop
mov
fcoml
jmp
or
jl
dec
dec
pop
dec
nop
loop
lods
add
or
cmpsb
dec
jp
idivl
in
push
fwait
jae
outsl
xor
cmp
aad
out
lods
js
push
in
mov
mov
daa
aam
jecxz
xor
sbb
mov
cs
int
inc
dec
pop
arpl
stos
add
popf
push
mov
jns
inc
inc
and
imul
cmc
inc
push
pop
cltd
mul
jl
ficoms
xor
ljmp
pop
shrb
pop
out
jnp
addr16
pop
pop
cs
fstps
outsb
inc
scas
andb
lea
inc
rorb
mov
add
xchg
cmp
xor
add
add
mov
popf
pop
jns
mov
jl
lret
aam
sbb
stos
xchg
mov
aad
popa
mov
or
adc
pop
xchg
ja
lods
push
and
shll
enter
cs
dec
jmp
icebp
clc
jae
mov
mov
movsb
imul
dec
cmp
jg
xor
sbb
sbb
xchg
in
cmp
imul
xchg
idiv
cli
std
cli
and
out
sub
sar
cmp
scas
inc
rcrl
enter
sub
out
sti
fwait
push
outsl
popa
xor
xor
sub
fnstsw
or
sarb
add
mov
mov
mov
sbb
dec
arpl
mov
sub
jns
and
outsb
xchg
flds
pop
ljmp
fwait
and
in
cmpsb
xchg
inc
jno
dec
iret
push
or
push
jnp
cmpsl
mov
cmp
fs
push
out
adc
fldt
dec
push
mov
mov
or
jae
jl
sub
out
inc
sub
inc
push
lea
mov
lret
xor
loopne
outsl
in
testb
xchg
jecxz
sbb
mov
aas
cmpsl
int
add
push
xor
out
mov
movsb
inc
push
insl
sub
cmc
sub
push
dec
jle
scas
push
orb
sbb
cmpsb
sub
ss
adc
xor
push
push
push
push
lahf
mov
xchg
ja
mov
jno
mov
sbb
mov
sbb
mov
mov
imul
mov
cmp
mov
sub
mov
out
ss
int
pop
push
imul
mov
pop
adc
cmp
mov
mov
mov
xchg
jns
pop
xchg
movsl
je,pt
andb
or
dec
dec
cli
gs
fildll
mov
jnp
pop
dec
outsb
test
push
and
nop
fmul
enter
fnstenv
adc
inc
and
push
jp
cltd
jmp
cmp
push
lock
in
mov
push
lret
and
pop
push
sub
insb
inc
xchg
mov
mov
sub
push
lds
shl
lret
or
push
cmpsb
shl
das
stos
sbb
mov
pop
into
ds
imul
jbe
jae
sub
pop
jle
data16
jns
test
jo
ja
mov
pop
pop
mov
lahf
in
ss
inc
rcll
lret
pop
int3
in
outsl
adc
pop
and
mov
daa
jp
enter
inc
pop
sub
add
and
cmp
jne
jb
loope
pop
sub
pop
ror
and
sbb
pop
in
inc
sbb
jmp
fldt
jb
fwait
dec
fs
lods
sbb
lea
push
dec
mov
leave
repz
pop
adc
jecxz
testl
das
add
nop
imul
ljmp
cmp
mov
out
fisubl
repnz
lret
xchg
ljmp
push
xchg
add
and
aaa
in
repz
mov
punpckhdq
dec
mov
cmp
rcr
dec
mov
sbb
push
out
inc
mov
cmp
inc
dec
push
ret
int3
add
xchg
fwait
and
shrl
ret
mov
dec
popa
icebp
outsb
lock
fdiv
sub
mov
jne
imul
test
dec
dec
out
mov
add
jg
cmpsb
in
fisttpll
mov
mov
lods
add
call
adc
enter
mov
es
push
push
xchg
lods
dec
dec
inc
xchg
ja
xchg
pusha
stc
lret
js
or
or
pop
or
or
push
mov
call
into
mov
in
mov
scas
out
cld
jle
cli
cmp
in
inc
mov
loope
sub
mov
push
ljmp
and
xor
push
test
stos
mov
fcomps
push
filds
nop
aad
push
xchg
mov
int3
out
in
aas
je
inc
imul
cmpsl
loop
inc
mov
cmp
push
cmp
lds
cmpsb
fiaddl
imul
add
cltd
ret
outsl
call
outsb
out
nop
push
mov
pop
negl
ret
out
jmp
push
negl
adc
lods
popa
std
dec
jp
mov
mov
in
jns
sarl
rclb
popf
jns
adc
inc
xchg
movsl
mov
inc
rol
jg
xor
out
jno
xor
mov
jle
mov
xchg
cli
jg
repnz
push
xlat
pop
out
out
pop
lcall
stos
push
aaa
stos
inc
negb
xor
fistl
push
cmc
mov
fs
pop
out
mov
iret
or
adc
fiadds
adc
mov
xchg
popa
ljmp
mov
in
and
xor
adc
ret
xor
addr16
push
fs
aas
stc
scas
in
mov
sub
cmp
fistps
adc
or
push
jg
xor
push
lods
vucomisd
mov
mov
test
push
lret
adc
jo
in
rcr
data16
fcoms
movb
adcl
jns
push
pop
sub
xchg
out
adc
in
fstpt
and
scas
adc
loop
iret
lds
mov
fldenv
or
mov
stos
dec
pop
bound
jle
int
fcmovnu
add
xchg
mov
insb
jl
js
mov
jecxz
add
add
cli
in
stos
test
push
sbb
inc
sub
mov
out
cmpsl
push
mov
fnstsw
cmp
sbb
hlt
mov
push
or
jnp
mov
stos
inc
cwtl
dec
or
fisubrl
je
dec
mov
ds
fsubs
jecxz
stos
jle
cmp
or
hlt
push
seto
mov
cmpl
je
mov
out
or
mov
gs
xlat
xlat
mov
and
inc
inc
adc
lods
dec
pop
add
push
mov
add
cmp
push
add
push
ss
call
loope
pop
sbb
add
add
add
outsb
imul
lcall
add
lds
jb
sbb
icebp
loop
adc
das
dec
or
dec
dec
push
daa
add
and
fxam
mov
jp
icebp
stos
imul
adc
ljmp
jle
push
inc
popa
or
sbb
dec
pop
into
push
js
jnp
inc
sub
inc
push
mov
mov
mov
mov
adc
or
add
pop
adc
pop
dec
xchg
sbb
and
and
imul
xchg
sub
cli
stos
faddl
popa
repz
pop
stos
sti
or
fimull
sbb
xor
xorb
cmp
sarl
pop
sub
inc
scas
mov
and
xor
addb
sub
mov
mov
or
and
rorb
mov
mov
mov
leave
xchg
or
mov
xorb
mov
pop
call
push
loop
push
stos
fisttps
icebp
iret
aad
ljmp
fwait
sarb
pop
insl
loope
xor
or
and
mov
sub
repz
inc
sahf
fldt
or
mov
fucomi
sub
cmp
mov
jg
test
aaa
mov
mov
stos
and
loopne
add
dec
ja
pop
adc
aad
adc
add
mov
icebp
push
mov
pop
ds
and
mov
loop
out
divb
shrl
or
add
or
fidivl
imul
xor
repz
dec
lds
ret
repnz
mov
add
daa
sbbl
pop
addr16
add
pop
jg
jb
xchg
test
cs
jecxz
icebp
dec
add
daa
mov
in
stos
or
daa
mov
mov
pop
pusha
test
pop
lret
mov
mov
lret
js
push
add
hlt
test
int3
shl
test
cli
adc
sar
adcb
and
imul
push
push
imul
fcmovbe
fildl
dec
ret
xor
push
into
mov
push
imul
pop
push
sub
out
jmp
pop
push
ds
jg
ja
leave
adc
shlb
mov
movsb
push
inc
sub
or
test
xor
jno
adc
dec
mov
cld
add
dec
dec
jp
xor
push
jbe
insb
lret
xchg
outsb
mov
sti
aas
jo
rorl
and
enter
es
adc
enter
sahf
lcall
subb
fists
mov
mov
pop
imul
xor
fadds
les
jecxz
xor
add
cmpsl
or
dec
dec
es
scas
je
jp
mov
arpl
and
mov
sti
and
dec
jle
jo
pop
mov
les
sbb
repz
and
cmp
movsb
push
and
inc
lods
mov
into
aaa
pop
imul
bound
out
in
inc
test
pop
std
dec
push
mov
adc
int
mov
pusha
out
das
cmpsl
push
and
orb
pop
push
pop
pop
xchg
test
pushf
pop
sbb
mov
ret
jo
xchg
and
or
xor
imul
inc
mov
xchg
leave
repnz
fdivr
sub
mov
and
pop
ds
roll
mov
jae
or
fildl
pop
xchg
subl
loopne
stc
aam
push
outsl
sub
push
or
je
les
mov
mov
xor
pop
mov
cmp
push
dec
adcb
rolb
rorb
or
xchg
cmp
sub
mov
adc
cmp
enter
loope
sub
movsb
sub
mov
inc
and
inc
sbb
add
mov
mov
into
cmpsl
mov
inc
xchg
push
push
ror
or
leave
dec
dec
shrb
jns
xchg
jl
imul
mov
sahf
xchg
xorl
aaa
mov
ljmp
cwtl
cmpsb
leave
cmpsb
xchg
mov
jmp
les
xchg
in
les
out
rol
pop
inc
jbe
dec
rolb
xchg
sbb
or
cmpsb
mov
das
xor
sbb
insl
out
das
sbb
rcll
das
or
sub
jmp
dec
lahf
push
mov
cmp
cmpsl
outsb
out
imul
test
testb
cld
scas
cmp
clc
xchg
xor
imull
sarb
cmovp
aam
sbb
cmc
cmp
jnp
jl
lods
arpl
unpcklps
jnp
or
mov
add
fwait
je
xchg
jl
in
mov
popa
xor
adc
pusha
adc
mov
mov
pop
push
or
shl
mov
arpl
jo
and
push
in
test
and
sbb
mov
cpuid
mov
sub
loopne
push
mov
mov
push
pop
scas
dec
push
stos
cmpsl
push
add
ret
cs
fcoml
dec
cs
sbb
mov
addr16
inc
movsl
aam
and
xor
and
lret
and
mov
and
je
leave
add
bswap
orl
cltd
mov
and
lock
scas
std
cmc
js
out
cmpsb
loopne
das
popf
cmp
pop
jb
cmp
aas
cmc
mov
es
cmp
jle
mov
ljmp
mov
inc
mov
push
sub
rcrb
sbb
inc
rcl
loopne
jmp
add
aas
sbb
movsb
psubw
push
or
xchg
aam
cld
jmp
adc
lods
test
cmc
inc
adc
push
clc
mov
xlat
lahf
loop
ds
push
ljmp
sub
popa
movsb
sub
jno
ficoms
stos
js
mov
inc
out
lret
rorl
xchg
jmp
jmp
addb
mov
pop
movsb
in
xchg
popf
sub
sbb
xchg
pop
bnd
inc
push
movsb
call
push
add
loopne
bound
movsl
cli
sub
lods
imul
mov
lods
out
js,pt
dec
movsb
add
pop
inc
sub
jbe
and
xor
fstpl
out
cmp
lods
lods
ds
pop
loop
dec
movsb
add
xor
jae
and
mov
mov
cli
mov
loop
loopne
adc
adc
jns
loope
insl
dec
imul
lods
mov
rcll
mov
push
jle
mov
es
subl
cld
lret
loope
cmp
clc
fsubrp
loopne
testl
push
bound
sub
je
xlat
xchg
dec
cli
inc
hlt
cmp
ljmp
data16
jle
pop
xchg
stos
push
mov
cmp
mov
outsb
fisubs
xchg
add
jb
inc
out
cwtl
add
leave
sub
mov
aas
sbb
add
cmp
or
mov
ret
out
aad
xchg
insl
jmp
xor
test
adc
ret
and
sbb
xchg
lcall
or
outsl
or
mov
lods
scas
push
popa
xlat
int
dec
fcoml
inc
loopne
pop
leave
or
pop
inc
addr16
repnz
add
jge
lret
subl
in
jl
in
pop
scas
pop
int
mov
adc
iret
sub
xor
aaa
and
jb
int
std
adc
jmp
mov
jle
sbb
adc
push
bound
mov
add
cmp
sarb
push
mov
inc
xor
and
aaa
xchg
loope
ret
ljmp
movsl
decb
jg
mov
push
inc
jne
mov
cmp
inc
inc
ljmp
das
pop
mov
test
pop
xchg
mov
int3
push
sets
and
cwtl
xchg
sbb
idivl
jle
adc
inc
sub
mov
das
lock
jp
std
out
in
push
cld
inc
orb
pop
sbb
inc
stc
sti
dec
scas
xor
int3
out
test
jg
test
movsl
icebp
stos
fsubs
jl
out
pop
jno
cmp
sti
sbb
jmp
iret
stos
mov
adcl
mov
mov
andb
shrl
sbb
push
aad
in
in
xor
push
lods
test
in
push
mov
add
push
adc
shl
lods
aad
insb
out
shl
outsb
or
pusha
push
dec
shlb
insb
mov
lret
xor
and
je
std
test
xor
pop
mov
pop
dec
ret
insl
mov
mov
and
enter
in
test
push
repz
adc
neg
mov
nop
fidivrl
ror
add
es
int3
pop
jp
cmp
inc
loop
jmp
jnp
jg
lret
sti
dec
test
adc
pop
xlat
inc
outsb
loope
mov
mov
sub
cli
mov
mov
mov
aad
sbb
mov
imul
stos
rclb
and
addb
loopne
sbb
aam
sub
outsl
or
and
jns
lret
es
sub
decb
shl
out
sti
adc
jno
mov
test
lock
out
or
out
xchg
gs
shll
mov
es
dec
mov
mov
subb
loope,pt
call
lret
dec
and
fwait
adc
jle
cmp
push
and
loopne
xor
out
and
sub
or
clc
out
incl
mov
sub
pop
xchg
mov
pusha
leave
in
es
leave
addl
repnz
pop
cmp
imul
outsb
mov
popf
pushf
mov
repz
imul
pop
mov
inc
aam
sub
sbb
lock
and
mov
repz
add
fsubrp
xor
adc
mov
push
mov
inc
push
mov
lds
pusha
sbb
insl
mov
adc
sbb
in
std
mov
add
or
aam
lahf
jb
xchg
add
xlat
push
pop
ljmp
xor
outsl
sti
popa
aaa
mov
test
aam
jle
xor
inc
subb
jne
scas
cmp
roll
lahf
in
clc
adc
push
mov
push
outsb
out
or
outsb
sar
mov
xchg
int
sbb
add
jg
les
rolb
test
or
cmc
jg
popf
mov
mov
cmpb
outsl
cmp
and
cld
pop
and
incb
rep
stos
sbb
jl
js
arpl
int
mov
inc
andl
popa
xchg
repnz
adc
subl
imul
pop
in
sti
pop
dec
and
or
sbb
ss
or
in
xchg
out
dec
lods
sub
mov
pop
jne
and
xchg
jne
xor
pop
iret
popl
stc
scas
push
fs
cld
aad
je
adc
mov
cmpsl
cmp
mov
int3
xor
lahf
mov
push
dec
mov
mov
shlb
fimull
cmp
inc
add
ljmp
hlt
xorb
shll
cmp
jl
cmc
ficomps
jle
mov
mov
in
mov
test
popf
insb
outsb
xchg
fcoms
xor
pop
mov
shll
dec
or
pop
xchg
xchg
xor
jnp
ja
retw
pusha
cltd
mov
add
stos
in
rcll
mov
sbbl
dec
pop
repz
rcrb
jns
fisubs
dec
lds
mov
mov
pusha
or
push
jl
je
clc
cli
clc
adc
pushl
jl
xchg
mov
int
lds
jno
aaa
xor
movd
cmp
lods
test
popa
add
mov
cmp
mov
addr16
pushf
sub
fisttps
out
inc
jno
incl
xlat
movsb
iret
lcall
inc
aam
xchg
adc
ret
push
push
rorb
sbb
mov
sub
and
lret
jmp
pop
mov
cmpsb
dec
stos
test
aaa
ficoms
je
jno
mov
and
push
movsb
jl
add
je
push
xchg
mov
mov
xor
rcr
popa
ret
cmp
test
and
fnstsw
out
sub
jae
sbb
sbbb
stos
insb
mov
jnp
and
push
out
jo
dec
dec
das
and
pop
mov
stc
dec
inc
mov
mov
push
cmp
jg
mov
sbb
cmp
insb
int3
jmp
xorl
icebp
adc
scas
and
sarb
dec
pop
clc
sbbl
jge
push
and
jbe
insl
das
mov
repz
dec
dec
pusha
inc
insb
out
mov
aad
out
mov
mov
out
test
fimull
movsl
testb
mov
mov
sub
mov
jae
fiadds
outsl
jge
mov
out
pop
push
mov
add
stc
lret
movsl
adc
push
scas
jne
pop
pop
mov
push
mov
cltd
nop
shr
mov
fisttpll
sub
cmp
inc
nop
cmc
mov
int3
sbb
or
pop
out
sub
daa
xchg
stos
addr16
xor
sahf
lock
js
ret
mov
jge
stos
sbb
xchg
stc
mov
xor
jmp
adc
test
imul
enter
aaa
lahf
popa
repnz
lds
inc
xchg
jnp
jae
and
enter
lods
lods
xchg
ja
pop
stos
jmp
lock
cmp
xchg
aas
or
mov
movsb
adc
sbb
mov
add
out
ljmp
lods
ret
call
and
mov
js
inc
adc
mov
mov
shrl
repnz
call
lret
les
sbb
jge
pop
sbbb
lret
icebp
add
repz
mov
jne
ret
xchg
sahf
pop
jmp
push
push
sahf
and
cmp
outsb
or
mov
js
pushf
stos
pop
out
idivb
es
jno
vpackssdw
pop
mov
ret
jg
pop
pop
lods
dec
mov
jp
push
lcall
xor
add
lcall
or
out
sub
mov
mov
call
fadds
dec
andl
cmp
nop
or
mov
aam
jne
clc
add
cltd
shrl
xchg
and
in
outsl
mov
cmp
adc
bound
das
jbe
sub
push
inc
repnz
mov
mov
les
xor
rcr
jnp
imul
jecxz
mov
into
mov
sahf
movsb
test
rcll
rorb
loopne
mov
cmp
jle
mov
out
mov
repnz
lods
xchg
je
push
sbb
cmp
inc
and
fmul
cltd
mov
inc
shlb
ja
test
ljmp
cmp
movsl
and
sbbb
dec
ds
std
inc
mov
in
push
scas
lock
fcompl
xchg
and
pop
pop
scas
sbb
jg
jg
jne
mov
mov
xchg
lret
or
int
xor
lods
or
std
sub
push
pusha
aaa
mov
push
add
mov
hlt
xor
loop
xor
popa
in
insb
jo
sbb
jns
in
dec
lret
ljmp
pop
or
mov
jp
xchg
test
imul
or
jae
rcrb
push
pop
push
xchg
in
les
popa
lcall
push
mov
xlat
addr16
scas
dec
push
mov
das
mov
insb
fnstcw
mov
lock
xchg
js
roll
mov
jp
and
sub
das
add
cmp
sbb
or
mov
std
push
fidivrl
xor
mov
or
call
out
lods
lret
mov
dec
sub
les
fwait
or
mov
aas
int3
test
dec
add
or
dec
pop
cmpsl
lahf
mov
std
sub
dec
dec
mov
mov
mov
enter
xchg
jo
ljmpw
call
mov
scas
nop
cmpsl
insl
jle
pop
mov
ficoml
and
sub
out
sbb
mov
loope
daa
add
push
stc
into
lret
or
add
lea
mov
xor
mov
stos
shrl
mov
inc
mov
sbb
sub
dec
mov
and
inc
jno
in
in
sbb
fucomp
ss
xorb
cmpsl
clc
mov
push
mov
negb
jbe
cld
es
lods
adc
push
lods
movsl
push
mov
in
add
add
xlat
adc
push
jne
xchg
std
icebp
inc
push
mov
das
fimull
addr16
pushf
sub
cmp
test
rcl
fs
push
sti
jns
and
jmp
dec
and
daa
in
inc
mov
fisttpl
out
dec
sub
jle
xlat
adc
mov
pop
stc
mov
dec
xchg
mul
dec
stos
enter
mov
mov
jle
dec
xchg
cmp
sub
mov
cwtl
in
sub
jnp
and
insb
mov
ljmp
jmp
rclb
gs
or
es
sarb
test
jae
inc
mov
adc
push
arpl
and
pusha
lcall
lods
mov
sbb
stos
out
mov
stos
pop
or
jno
inc
dec
loopne
jp
call
mov
lret
cmp
pop
fsts
push
mov
jae
mov
inc
mul
movsb
push
loopne
pop
push
cmp
adc
adc
pop
sti
stos
sbb
xchg
inc
loop
in
shl
ljmp
addr16
lock
inc
negl
cli
jmp
fnstcw
in
rcrb
pop
sbb
outsl
mov
xor
dec
nop
push
test
loope
fdivp
xor
xchg
sti
movsl
ss
lods
jae
mov
or
dec
ficomps
cmp
mov
push
js
test
xchg
pop
fdivs
sub
insl
loop
xor
scas
xlat
cs
or
mov
test
int3
lock
push
stos
push
shrb
push
insb
testb
outsb
xor
pop
sub
es
les
xchg
int
ja
jp
fs
orb
test
mov
out
add
outsb
into
or
xchg
cltd
out
jno
inc
test
xchg
ret
psadbw
out
inc
les
pop
dec
inc
daa
ja
repz
cmp
mov
lock
push
xchg
pusha
mov
and
pop
icebp
pop
fnstsw
push
insb
out
mov
shr
jl
cmpsb
mov
lds
test
cld
ss
mov
out
pop
mov
shlb
push
jmp
lock
jmp
sbb
adc
mov
lahf
outsl
sub
jmp
fdivrl
into
and
xor
bound
push
pop
push
mov
push
in
mov
sbb
jecxz
xor
dec
sub
gs
inc
lods
cltd
arpl
add
arpl
insl
xor
push
cmp
aad
mov
testl
imul
or
jg
pop
mov
scas
fstps
rcll
in
add
pop
pushf
cmc
add
inc
dec
jmp
push
cltd
inc
mov
daa
push
arpl
shl
dec
mov
mov
movsl
test
insb
mov
fbstp
and
lock
jle
jecxz
insl
jp
jo
adc
leave
rorb
mov
in
xchg
scas
ja
out
sbb
and
pop
clc
arpl
add
lea
jbe
xchg
test
test
pop
jecxz
jl
shll
into
fxch
or
test
push
mov
xchg
imulb
xor
sub
aam
aas
repz
in
jmp
imul
leave
clc
nop
sbb
mov
mov
or
std
push
in
cwtl
mov
test
bound
mov
mov
and
out
adc
mov
mov
pop
icebp
sbb
rclb
loopne
dec
insl
cmpsb
mov
jbe
test
sbb
jbe
mov
sar
test
call
lret
pop
mov
movsl
out
mov
mul
mov
call
mov
push
cmp
aam
lods
jb
mov
jp
lods
btc
shll
test
loopne
dec
mov
ret
dec
enter
mov
push
xchg
jmp
inc
xor
and
out
movsb
xor
jle
dec
push
xchg
ret
xchg
ret
loopne
sub
lds
test
fsubrs
insb
cli
push
mov
enter
mov
lods
sahf
sub
jge
addr16
aam
call
jo
fimull
push
icebp
mov
pop
sbb
fs
adc
addr16
fxch
jb
cmc
mov
mov
xchg
adc
xchg
pop
mov
mov
push
mov
mov
pushf
mov
lcall
lret
aas
inc
shlb
call
test
cli
mov
insb
mov
rcr
lods
out
mov
inc
out
jnp
pop
rcl
pusha
and
sub
push
xchg
subl
cs
mov
jp
leave
test
scas
mov
mov
mov
imul
xchg
sbb
xchg
xor
jecxz
adc
mov
adcb
cld
mov
popa
sub
rcr
in
popa
push
nop
mov
dec
popf
or
nop
aaa
rcrl
mov
mov
sahf
pop
out
add
ljmp
push
test
cmp
popf
sub
mov
push
jno
push
pushf
xchg
sbb
dec
dec
mov
dec
js
xchg
push
jl
mov
mov
mov
push
insb
in
ja
cmc
pop
push
divb
addr16
mov
es
cmp
or
push
xlat
ljmp
push
loop
daa
add
mov
out
gs
ja
sbb
scas
insl
imul
cli
rolb
movsl
cmp
push
movsb
mov
sbbl
ja
push
in
mov
mov
jae
lret
imul
das
add
clts
push
jg
push
push
push
mov
test
imul
sbb
test
stos
mov
jmp
mov
jo
scas
ss
jns
scas
gs
dec
and
sub
pusha
push
and
movsl
popf
cmpsb
jle
dec
mulb
fmulp
cmpsl
or
sub
xchg
mov
ss
cs
repnz
stc
outsb
mov
test
es
addr16
mov
inc
push
jno
jmp
mov
jp
and
mov
test
dec
leave
loop
in
dec
xchg
in
add
add
iret
lds
cmpsb
xor
xchg
daa
jl
sarl
cli
pop
cld
adc
aad
repnz
mov
arpl
adc
cltd
pop
andl
outsb
leave
sti
sbb
push
inc
aam
std
lahf
jnp
xor
and
es
insl
subb
pop
pop
cmp
jp
inc
jnp
jmp
out
adc
cmc
adc
push
jg
in
add
aad
inc
push
notb
add
repz
lods
int
push
xor
lock
push
cltd
sahf
out
scas
xor
bsf
push
orl
push
adc
stos
stos
lds
mov
xor
in
jle
dec
xchg
cltd
adc
mov
jle
ds
mov
sbb
outsb
lods
add
inc
loop
inc
pop
sub
xor
mov
or
push
dec
adc
pop
je
jecxz
jge
pop
push
jne
and
mov
xchg
cwtl
lea
in
and
pop
ret
sbb
stos
imul
gs
jge
lahf
push
cmp
test
test
loope
cmpsb
fisttps
push
faddl
popf
pop
jge
ret
or
stc
test
xchg
idivb
dec
sub
fcmovb
sub
xor
repz
mov
mov
andl
fsubr
inc
sarl
add
adc
ds
stos
cmp
sbb
and
push
sbb
stos
sbbl
jmp
sub
stos
cmp
push
sbb
sub
out
and
cmpsl
movb
or
add
pop
test
scas
and
outsl
sub
out
popa
xchg
pop
gs
sub
and
aad
xor
push
sub
int
dec
or
cmp
cmc
test
adc
xlat
cmp
test
pop
xor
fsubl
out
dec
cmp
stos
das
fwait
gs
adc
mov
testb
xor
scas
sub
sbbb
dec
dec
addr16
jecxz
adc
pop
cltd
jmp
daa
add
or
jno
rorl
xchg
mov
sub
dec
push
push
sbbb
lods
mov
sub
push
fadds
push
or
jecxz
mov
adc
mov
pop
les
scas
add
and
mov
adc
cmp
enter
out
or
test
daa
xchg
cmc
aaa
cmpsl
negl
lea
adc
data16
test
lods
mov
cmp
fsubs
je
inc
jmp
mov
jae
cltd
sbb
jne
scas
mov
push
sbb
lock
rclb
addb
das
xor
or
mov
aad
aam
mov
xchg
jp
test
fisubl
jb
leave
push
icebp
add
xchg
jno
mov
imul
pop
ror
and
dec
and
dec
adc
ficoml
mov
add
mov
repnz
and
mov
ret
ja
sub
jnp
fnstcw
sar
xchg
jbe
leave
loope
add
add
dec
mov
rep
arpl
push
inc
inc
or
ja
fwait
or
cmp
lds
and
or
js
stc
sbb
loopne
addr16
stos
jmp
aam
mov
aas
out
sub
fistps
jno
sbb
cltd
fistps
mov
inc
lea
xchg
dec
adc
jns
pop
xor
insb
cmp
mov
or
dec
int3
and
movswl
push
dec
mov
cmp
bound
sahf
jle
bound
les
add
mov
push
push
into
mov
vminps
daa
jne
add
xor
cmpsl
les
jecxz
rorl
mov
std
mov
outsl
inc
jns
add
aas
test
in
aas
and
push
stos
test
adc
pop
shrb
mov
adc
jnp
in
mov
jne
cwtl
cwtl
sahf
xor
and
mov
mov
lahf
push
in
xor
mov
std
movsb
out
testl
cmpsb
scas
cmc
je
repnz
popf
fsts
inc
test
sbb
adc
adc
fwait
je
sbbl
int
mov
fisubl
lods
jne
sub
les
sbb
mov
testb
sahf
mov
movsl
xor
in
push
loopne
addb
movsb
sbb
fsubrs
push
xchg
pop
nop
add
xor
loopne
repnz
inc
daa
insb
or
lea
xchg
or
xor
or
sub
popa
movsb
mov
mov
test
int3
mov
and
pop
add
xor
arpl
shll
mov
lret
adc
mov
xchg
rorb
mov
ret
jl
pop
xchg
inc
das
lods
add
mov
and
imul
movsl
dec
loop
les
movsb
fcomp
stos
pop
mov
sub
out
orb
lea
push
les
pop
arpl
mov
push
lret
pop
imul
xchg
call
inc
and
shlb
test
dec
roll
cmp
sbb
sti
adc
lods
lods
loop
inc
lret
or
xchg
mov
sub
in
clc
cmp
or
or
or
pusha
pop
out
sub
xchg
xor
cmp
xlat
lds
cs
xchg
rcr
fwait
lock
repnz
pop
pop
lret
add
jae
rcrb
cmp
test
and
cmpsb
mov
sbb
popf
or
or
sti
push
inc
jl
test
jb
xor
mov
sar
int
decl
or
mov
jo
push
bound
mov
inc
xor
push
les
leave
icebp
or
adc
movsl
out
stos
jmp
mov
fisttpll
fadds
dec
int
cmpsl
addb
adc
sbb
sahf
add
repnz
push
les
lahf
pop
mov
outsb
in
enter
push
subl
sbb
int3
pop
scas
fcoms
lahf
and
cld
sbb
out
mov
add
mov
push
shrl
inc
jle
ds
push
lcall
in
outsb
and
subb
and
pop
lods
pushf
dec
xchg
mov
cmpsl
sti
or
pop
scas
roll
mov
cmp
pushf
rcr
fcomps
das
or
aaa
and
push
mov
jbe
cmp
aaa
pop
pop
rol
xchg
xor
xor
addb
fcmovnu
pop
sahf
adc
mov
push
push
fcoml
movsb
adc
adc
lret
sbb
das
add
xlat
adc
dec
sub
jp
xchg
dec
nop
add
mov
in
fmul
push
sbb
mov
gs
sub
rolb
mov
xchg
fcmovu
movsl
scas
imul
cmp
loope
mov
inc
xor
pop
sbb
dec
or
data16
lea
mov
cmp
arpl
notl
aam
fidivrl
cld
sub
jle
imul
out
jmp
fdivr
and
outsb
orb
jno
dec
cltd
mov
jl
mov
stc
inc
pop
adc
cmpsb
jb
int
dec
inc
add
adc
mov
movsb
sbb
movsb
jp
jmp
or
inc
mov
add
jg
xlat
mov
jb
stc
pop
in
decl
insb
cmp
xor
lods
pop
mov
jb
in
shll
js
inc
rolb
je
mov
fsub
xchg
pop
fnstsw
mov
movsb
pop
adc
in
imul
jecxz
dec
pop
adc
push
and
cs
stc
xchg
cmp
jg
mov
scas
in
jae
xchg
push
jnp
rcr
psraw
cmp
sbb
push
insb
add
ret
sub
stos
jo
cwtl
icebp
adc
fidivrs
mov
fs
cmp
popa
jbe
inc
jmp
mov
subb
xlat
push
mov
imul
and
mov
add
lret
rcll
and
pop
lret
jne
lea
stos
movb
or
lods
push
push
sbb
shl
outsb
adc
jmp
push
stos
ret
les
stc
outsb
int3
hlt
adc
pusha
mov
loop
push
add
jo
mov
in
xlat
adcb
mov
repnz
dec
inc
inc
push
xchg
sub
push
fcmovu
enter
ljmp
movsb
dec
mov
orl
inc
jp
enter
mov
roll
and
inc
pop
xorb
inc
push
subl
xor
aad
ljmp
cmpsl
andb
lods
ss
pop
bound
sbb
movsb
popl
fwait
push
mov
cltd
ret
out
inc
cmp
mov
faddl
xchg
shr
in
pushf
lods
push
sbb
out
sarb
roll
lea
dec
je
hlt
push
push
fsub
idivb
incb
mov
popf
stc
sub
and
lds
mov
les
scas
sub
adc
or
scas
sub
loope
andl
jle,pt
outsb
cli
and
mov
jp
adc
mov
sbb
add
stos
dec
pop
push
add
fs
adc
xorl
or
leave
movsb
mov
outsb
add
sub
loop
xor
pop
hlt
int
dec
fiaddl
adc
jnp
mov
movsb
jl
push
cmp
rorl
mov
push
push
and
jno
mov
pop
and
adc
and
fildl
mov
jle
lret
stos
in
cmp
xchg
std
cwtl
jp
push
lea
mov
sti
xor
test
lods
arpl
mov
adc
and
addb
push
pop
push
rcll
xchg
test
ret
add
lret
pop
mov
cwtl
cmp
inc
fcomps
es
aam
sub
test
sbb
lret
add
stos
sahf
fbstp
or
jge
enter
or
inc
mov
jne
sbb
dec
mov
pop
xchg
pop
int3
sbb
rcrb
adc
dec
inc
xor
repnz
mov
adc
movsb
pop
cltd
pop
jbe
mov
jnp
int3
test
fadd
mov
fmuls
addr16
test
out
dec
hlt
mov
leave
idivl
sbb
pop
imul
hlt
cmc
mov
push
xchg
fimuls
jb
pop
dec
aaa
std
scas
adc
jno
loope
mulb
pop
js
aaa
aam
in
jmp
mov
cmp
das
mov
and
frstor
shlw
out
push
jb
les
fnstsw
mov
cmpsb
stos
cltd
mov
cmpsb
xlat
inc
fsubrs
fisttpll
cmovle
mov
mov
cltd
arpl
mov
sarb
push
dec
sub
xor
add
jg
pop
and
pop
frstor
loop
pop
insl
pop
push
inc
dec
lea
cwtl
test
add
lahf
dec
xchg
cmp
sti
into
mov
push
in
mov
and
testl
test
rcrl
jp
pop
jmp
jge
cmp
pop
mov
stc
pop
cld
dec
repnz
cld
sbb
shlb
xor
adc
mov
and
cmp
outsb
mov
dec
jmp
pop
fwait
xlat
sahf
fsub
loopne
daa
sbb
fdivrp
repnz
test
or
pop
scas
insl
push
pop
and
orl
adc
popa
mov
fisttpl
movsb
in
lods
mov
rorb
ja
pop
add
ret
jg
mov
xor
cmp
lcall
jnp
iret
inc
adc
adc
pop
mov
dec
dec
mov
scas
fs
shrl
pop
mov
xchg
call
pop
icebp
inc
adc
inc
fildll
lock
aam
test
out
or
inc
cmp
mov
ret
sub
pop
rolb
cmc
fdivr
push
cmp
lret
nop
pop
jg
les
leave
mov
mov
cmp
xchg
dec
cmp
int
out
enter
cwtl
push
xchg
mov
xor
dec
sbb
js
pop
outsb
mov
dec
frstor
movsl
lcall
lret
dec
xchg
and
cld
mov
std
xchg
or
ljmp
dec
adc
lods
fstps
dec
push
xor
cmpsl
test
mov
sbb
cmp
xor
push
data16
add
mov
int
ja
xchg
or
out
inc
jns
lretw
inc
test
stos
jb
loop
xchg
xchg
jecxz
mov
dec
or
jns
inc
or
hlt
sbb
lahf
lods
ret
call
sub
scas
loopne
pop
cmpsl
aam
or
iret
mov
push
jl
insb
daa
mov
lahf
push
pop
dec
data16
sub
fs
lret
cmp
lret
dec
fdivs
rcll
pushf
out
out
sbb
sbb
jno
push
xor
xor
cmp
sbb
and
lods
ljmp
inc
jb
sbb
sub
scas
daa
icebp
inc
pop
lds
pop
inc
mov
jl
and
ficoml
sar
jmp
jns
fistl
fcomps
or
jl
mov
push
mov
or
fcompl
shlb
popa
outsb
and
jl
enter
sarl
sahf
sbb
and
cmc
cmp
clc
shrb
and
fcmovb
jbe
insl
repz
inc
dec
pusha
dec
jmp
pop
addr16
jl
xchg
sbb
scas
cmp
inc
jb
lret
jle
mov
cwtl
int3
fiaddl
push
xchg
push
movsl
mov
movl
cmpsl
pop
and
sub
imul
fiadds
sub
or
inc
pop
lods
outsl
sub
adc
cs
stos
ds
mov
xor
mov
icebp
cmp
in
loop
xchg
stos
add
out
lahf
xor
adc
testl
cltd
int
fadds
sub
lds
into
lock
stos
add
clc
inc
adc
cs
mov
mov
loop
jns
call
jnp
imul
and
je
push
jns
or
push
sbb
filds
sbb
sub
cwtl
call
jno
jecxz
add
es
inc
add
icebp
in
mov
data16
mov
adc
out
sbb
in
sbb
rcll
out
add
ret
fucomip
aaa
mov
arpl
lret
insb
xchg
das
je
aaa
inc
pop
sbb
cmp
sub
push
jne
loop
jecxz
movsl
addr16
adc
or
xchg
adc
inc
push
cmp
mov
cmp
or
aad
insb
mov
cld
mov
jle
pop
pop
mov
jo
fstl
xor
or
push
cmp
fucomp
iret
pop
mov
cltd
push
mov
sar
mov
sub
and
push
ss
jbe
mov
sbb
cld
mov
test
dec
bound
jg
mov
mov
sbb
lock
adc
sbb
in
scas
pop
cltd
fsubrl
dec
outsb
lds
pushf
pop
and
lret
add
mov
sbb
dec
sub
xor
insb
push
or
inc
scas
mulb
mov
push
inc
inc
inc
fcomps
and
pop
jmp
mov
cmpsb
sub
pop
pop
repz
mov
adc
xchg
dec
pop
xor
sub
mov
lods
shr
jne
add
cmp
cmp
fbld
paddusb
push
jno
jb
mov
loope
fcoms
nop
stos
insb
lret
cmp
sti
inc
xchg
movsb
xchg
std
in
popl
das
ret
pop
icebp
ja
mov
loop
movsb
cwtl
pop
gs
jne
loop
lods
and
imul
cmp
inc
clc
inc
mov
subb
arpl
gs
in
fldcw
lret
lds
mov
or
sbb
outsb
lcall
sbb
mov
mov
cvttps2pi
pop
adc
jo
jne
and
gs
mov
sub
xor
gs
push
mov
jl
fistl
lret
mov
pop
xchg
leave
scas
pop
pusha
pop
add
adc
scas
cmp
mov
les
lea
shl
enter
adc
mov
cmp
enter
es
inc
inc
pop
imulb
adc
xlat
jae
scas
or
gs
arpl
jge
lods
in
data16
cmp
hlt
pop
mov
pop
and
mov
mov
inc
jbe
pop
das
push
push
add
pushf
dec
scas
dec
cmpsl
jae
or
jp
xchg
sub
push
sbb
rcrb
sbb
outsb
mov
cmpsl
mov
cmp
rcrl
inc
jnp
xor
jg
das
enter
les
jo
add
aad
mov
push
fstl
jb
and
repz
das
pushf
fcomps
dec
or
in
jmp
push
jns
popa
test
jmp
add
sub
imulb
pop
ja
pop
stos
ret
loopne
dec
out
pop
mov
mov
sub
cs
mov
gs
mov
xor
add
lcall
clts
into
in
popa
pusha
int
scas
lcall
repnz
loope
jo
mov
push
popf
xor
fnsave
out
sub
hlt
jg
inc
ds
cltd
mov
inc
xor
arpl
fsub
sub
adc
pop
hlt
int
or
rcrb
ds
mov
xor
cmp
add
dec
mov
mov
jae
lret
sbbb
pop
sub
add
das
cmpsb
aaa
mov
out
mov
jb
or
lods
jo
dec
cmp
pop
adc
ja
call
or
leave
sbb
iret
add
outsl
cmc
and
push
inc
flds
iret
lret
mov
dec
dec
int3
mov
icebp
rcrl
jecxz
sub
jp
adc
cmp
inc
bound
fisubrs
pop
push
popa
mov
lret
jne
hlt
add
add
mov
mov
mov
sub
and
decb
xor
fsub
inc
adc
or
nop
lods
push
pushf
cs
dec
in
mov
stos
das
mov
ss
ds
jns
test
pusha
in
push
ds
pop
pop
sub
dec
inc
jmp
int
jmp
out
add
aaa
mov
cmp
and
test
add
jle
mov
in
mov
cmp
sahf
xchg
data16
sub
je
ljmp
shlb
ret
rorb
add
daa
xchg
lods
xchg
in
jbe
icebp
popa
mov
inc
cli
dec
enter
jp
or
xor
mov
scas
sub
cmp
jmp
inc
sbb
test
pop
jb
or
push
out
mov
mov
testb
int3
mov
repz
clc
xchg
pushf
add
cmpsb
jp
dec
mov
xchg
js
aam
cwtl
fldcw
pop
enter
neg
ffree
into
sub
push
pop
gs
loop
or
sbb
addl
mov
xchg
pop
add
and
push
inc
mov
xchg
in
or
pop
mov
test
enter
mov
aas
adc
insb
insl
fldcw
stc
cmc
lods
je
sub
lods
jle
inc
mov
mov
lret
mov
ss
int3
push
add
mov
mov
arpl
jg
jecxz
shll
xchg
or
insl
push
cwtl
add
dec
cltd
repz
mov
pusha
icebp
jg
cmp
ffreep
pop
fisttpl
daa
outsb
cmp
test
xor
adc
lret
push
cltd
adc
pushf
xchg
add
pop
sub
cmc
outsl
jnp
loope
sbb
pop
push
cmpsb
sub
ss
and
loop
sbb
in
cmc
dec
scas
fdivl
insl
jmp
pop
dec
lret
xor
sub
int3
inc
pusha
or
aas
les
fwait
inc
shll
and
xor
push
push
xchg
xchg
stos
stc
ret
sub
or
mov
hlt
fildl
or
ds
andl
inc
popf
and
cli
cmp
adcl
jecxz
fcomps
jb
and
in
xor
pop
mov
in
or
cmp
jmp
add
mov
daa
fs
mov
pop
lret
mov
and
mov
mov
je
shl
repz
push
push
pop
xchg
dec
jno
leave
dec
cmc
sub
xchg
cmpsl
add
sub
enter
loope
jmp
or
dec
sbb
jns
cmpsl
dec
sub
jle
mov
mov
fsubl
lret
sti
inc
out
and
shll
pop
cmpsl
cs
or
sbb
pop
cmp
mov
xor
loop
add
int3
adcl
out
sarl
jge
jecxz
hlt
cmp
lock
test
pop
fisubrs
lcall
sbb
sti
and
test
and
inc
es
or
jecxz
pop
add
xchg
xor
in
fnsave
jne
in
dec
pushf
push
jno
std
push
inc
xor
lods
xlat
xor
mov
push
jg
dec
lods
shlb
sbb
mov
sbb
and
sbb
test
dec
sti
mov
cwtl
scas
push
mov
shr
dec
push
add
dec
mov
mov
sbb
pop
push
dec
jmp
dec
push
mov
lds
adc
in
repnz
setnp
gs
call
pop
adc
mov
scas
sub
aad
andb
push
jbe
lock
int3
and
aad
mov
pop
mov
or
pop
push
xchg
or
repz
arpl
shr
sub
into
push
imul
ret
xor
jne
pushf
ds
arpl
int
mov
and
and
and
clc
movsb
test
jo
pop
pop
mov
mov
inc
or
pop
add
fnstcw
jo
daa
mov
mov
xor
dec
in
jne
add
jp
fiadds
mov
bound
popf
lahf
cmc
scas
out
pushf
mov
rcr
pop
adc
dec
pop
xor
inc
pop
cli
shl
inc
dec
stos
lahf
mov
and
add
jns
xlat
sbb
in
aam
mov
cs
repnz
add
adc
push
outsb
cmpsl
jae
and
ja
pop
rclb
and
cmpsl
test
sbb
dec
mov
mov
mov
test
test
jbe
in
and
mov
pop
rclb
mov
ret
pop
sti
mov
lods
lcall
repz
das
cs
leave
add
imul
xor
xor
outsl
outsl
push
repnz
mov
cmp
daa
mov
push
out
mov
push
and
lods
mov
and
cs
into
repnz
and
jge
adc
je
push
inc
cmp
dec
add
mov
jl
sbb
rolb
aas
lods
in
add
into
pushf
sbb
or
cmp
xchg
push
push
aam
cmp
cmp
clc
inc
mov
testb
int
sti
scas
scas
repz
imulb
jno
adc
push
jecxz
lret
cmp
push
leave
ds
pop
sbbl
dec
fsubl
icebp
xlat
outsl
ds
push
arpl
daa
test
dec
sbb
fmuls
mov
lods
cld
mov
mov
and
jo
xchg
cld
sbb
jo
test
xor
lahf
xor
pop
movsb
sti
pop
and
fwait
jb
or
adc
lahf
subl
ds
stc
jge
in
pushf
mov
sbbb
push
addr16
es
pusha
test
add
adcb
mov
pop
mov
ljmp
cmp
icebp
rol
divl
pop
or
or
adc
xlat
jge
jp
jbe
mov
sbb
dec
adc
mov
dec
repnz
dec
js
xor
bound
je
fcoml
cltd
sbb
enter
pop
mov
or
loop
mov
mov
push
mov
les
addr16
movsb
cmp
adc
popa
mov
add
sub
cli
pop
or
push
out
mov
jecxz
lret
fwait
aaa
mov
xor
pop
pop
fs
inc
mull
sarb
out
xlat
adc
icebp
sbb
hlt
mov
adc
movsb
xor
dec
inc
push
push
xlat
aam
mov
orb
out
outsl
fsubp
lods
inc
cmc
loop
int3
orl
mov
add
sti
fisttpl
cmp
aam
push
jge
mov
pop
fists
jl
jo
lds
sarb
or
pop
sarl
fdivr
insl
test
addr16
or
mov
bound
inc
adcb
fs
dec
fidivl
test
icebp
cmp
xor
sbb
jne
dec
pop
mov
xchg
mov
mov
or
push
insl
jno
mov
jp
mov
push
outsb
out
lods
sub
sbb
jb
jl
mov
mov
inc
sbb
dec
dec
mov
and
mov
aas
ficoms
lods
jns
outsb
xorl
jmp
mov
fnsave
mov
jle
mov
inc
cmp
lods
scas
push
mov
shll
add
add
jmp
repnz
dec
inc
fcompp
mov
fcmovnu
std
nop
xchg
and
fwait
je
adc
scas
popa
push
stos
mov
adc
out
pop
ss
or
movsb
out
and
inc
movsl
mov
iret
repz
fistpll
mov
arpl
inc
int
sbb
push
aas
fsubs
jle
mov
push
xor
adc
mov
add
push
aas
fdivr
dec
je
push
out
rclb
dec
insb
push
dec
pop
lock
dec
enter
nop
add
loop
fwait
repz
dec
add
jmp
int
cwtl
vcmpss
adc
je
lock
jno
xor
out
dec
jbe
jl
adc
sub
add
mov
xchg
push
cmp
aas
jl
fstl
sub
std
xchg
rorl
adc
aad
xchg
dec
rolb
mov
sub
pop
loope
jle
mov
loop
sbb
dec
into
movsb
in
xor
lahf
push
cmpsb
lods
jno
pop
sub
jns
mov
mov
hlt
mov
inc
or
fs
inc
test
and
mov
into
xor
dec
cmp
jp
aas
push
pop
je
rcrb
push
pop
push
in
mov
add
icebp
aad
pushf
lret
loope
mov
mov
jg
sti
cmp
sbb
mov
mov
xchg
scas
and
mov
push
test
mov
sbb
icebp
pop
cmpsb
cmpb
adc
sub
add
push
sahf
add
sub
ds
fiadds
sbb
enter
mov
jae
ret
xor
jns
push
lea
lods
sbb
out
call
lea
jb
mov
adc
dec
sub
xchg
cs
push
sarl
mov
push
in
jg
lahf
stos
and
add
dec
fisttps
andb
sub
inc
jb
decl
roll
movsl
xor
xchg
in
xchg
sbb
inc
lock
inc
fildl
addb
test
xlat
add
push
push
shll
into
shll
fsubs
test
push
clc
inc
icebp
int
in
jp
out
push
mov
bound
sub
fwait
leave
cmpsb
pop
std
pop
sub
dec
addr16
mov
inc
cmp
mov
xchg
adc
pusha
cmpsb
mov
sbbl
mov
jb
pop
iret
adc
jns
cmp
bound
mov
pop
roll
pop
mov
xchg
test
sub
mov
or
je
andl
test
pop
sbb
cmp
cmp
outsb
fwait
adc
dec
jecxz
xorb
mov
call
xchg
mov
insb
sub
dec
call
shr
in
jb
xchg
dec
xchg
mov
sub
and
mov
stos
push
xchg
in
arpl
dec
inc
xchg
gs
sub
addr16
cli
daa
inc
pop
sub
arpl
dec
push
add
mov
or
ret
and
dec
mov
lcall
xchg
imul
out
dec
outsb
repz
sub
cltd
lock
stc
int3
movsl
scas
dec
jne
ljmp
and
fnstenv
fisttps
insb
or
cvtps2pi
iret
out
cld
test
jmp
or
test
mov
xor
fsubrl
mov
adc
mov
scas
pusha
mov
xchg
or
out
in
dec
in
repnz
xchg
ret
push
daa
jg
rcll
adc
fdivrs
imul
sub
dec
fs
ret
push
push
imul
leave
sti
add
bound
and
jmp
popa
imul
or
xchg
arpl
inc
fwait
cwtl
inc
cwtl
or
int
mov
sbb
push
cmp
cld
pop
mov
mov
loop
pop
cmp
out
les
jl
jp
inc
fidivrs
sub
mov
mov
and
mov
sbb
inc
push
clc
lods
pop
push
push
loop
xchg
arpl
lahf
or
xor
or
push
cmpsb
imul
pushf
loop
sub
push
xor
or
dec
out
mov
mov
add
inc
dec
int
popa
xchg
pusha
call
fldenv
in
jo
lds
repnz
adc
xchg
jne
cmp
jg
xchg
xor
xor
and
mov
lock
mov
clc
scas
xchg
jge
add
and
icebp
iret
mov
or
jg
cwtl
bound
lods
xor
adc
ljmp
cwtl
or
ss
mov
push
jne
into
inc
call
fsubrp
dec
loop
pop
sbb
sub
pop
lock
push
add
mov
addr16
xchg
clc
sbb
or
out
fwait
jbe
dec
push
cmp
sub
jg
ljmp
ror
sub
popf
rorl
hlt
cs
lea
adc
jnp
gs
stc
outsl
pop
cmp
scas
mov
sub
add
mov
clc
stos
cltd
call
push
mov
and
adc
sbb
inc
pop
aas
sub
sub
cwtl
cmpsb
sub
jmp
and
enter
mov
repz
adc
ret
push
jb
popf
nop
cmpsl
in
mov
push
pop
xchg
mov
push
jl
and
mov
enter
enter
sub
mov
pop
xchg
lcall
popa
inc
loopne
dec
mov
aad
mov
add
and
sbb
clc
shrl
jecxz
jno
push
cmc
aad
mov
inc
inc
add
pop
xchg
loope
nop
ja
cmp
pop
dec
std
fs
sti
ss
aad
push
pop
repnz
mov
mov
shlb
stos
jns
test
and
xchg
ljmp
mov
push
in
jecxz
pushf
aad
notl
clc
push
pop
xchg
sbb
dec
test
je
sub
sub
xchg
mov
insb
inc
adc
sahf
out
ret
loopne
cmp
daa
jmp
jo
xor
addr16
in
cwtl
add
lahf
pop
xchg
xor
dec
push
dec
dec
dec
jg
add
add
testb
imul
ficompl
mov
lcall
sarl
xchg
jl
in
mov
enter
outsl
scas
stos
dec
call
lret
nop
test
in
test
test
mov
pop
xchg
out
xchg
lcall
or
xor
mov
loopne
cmp
push
push
and
mov
and
rclb
fsubl
jno
ja
lods
out
shlb
test
ss
mov
mov
or
mov
fwait
and
sbb
sub
add
xchg
loope
mov
sti
sub
and
icebp
pop
sbb
xor
lret
pop
ret
and
aas
movsl
jl
sti
aam
pushf
call
jb
push
pop
adc
ljmp
sbb
sbb
mov
push
in
frstor
pop
lods
lods
cmp
push
fwait
jbe
lret
stc
pushl
cwtl
mov
movsl
dec
and
xchg
andl
pusha
aad
ret
gs
std
sahf
cmp
mov
aas
jecxz,pt
adc
jg
popa
loope
pop
xor
test
cmpb
xchg
inc
sub
mov
call
dec
leave
dec
test
jge
test
mov
or
dec
adc
mov
mov
in
out
sub
mov
cmp
xor
repnz
mov
mov
cwtl
pop
xlat
mov
std
test
mov
inc
push
mov
dec
add
test
movsb
cwtl
cmpsb
test
rcr
mov
xchg
out
icebp
mov
sarl
and
xchg
aaa
mov
inc
fldlg2
pop
cmp
mov
push
push
cmp
gs
ret
clc
push
and
inc
lret
arpl
push
ret
or
and
and
int3
sub
mov
call
cmp
sbbl
test
movsb
cmovne
pop
stos
neg
and
jg
push
adc
ja
mov
mov
mov
lock
movb
movsb
test
lret
iret
adc
mov
push
mov
loopne
lret
sub
fsubs
mov
aam
sub
mov
rcr
mov
jge
cmp
daa
fsts
mov
shlb
and
push
mov
cmp
mov
cmpsb
rorb
jnp
dec
add
lret
pusha
decl
mov
inc
sub
mov
je
daa
sbb
xor
fisttpll
mov
lods
inc
push
pop
mov
jb
xlat
adc
pop
mov
rorb
xchg
xchg
cltd
dec
xchg
imul
mov
daa
ret
or
xor
push
stos
leave
push
ret
fstps
and
cs
and
and
mov
lcall
inc
jmp
push
and
es
in
push
ljmp
pop
xor
add
out
aaa
les
cmp
mov
mov
mull
add
inc
pushf
cli
call
fs
xchg
jg
inc
add
fistpll
movsb
cmp
stos
out
lret
insb
loope
out
jl
cmp
sbb
cmp
fwait
inc
cld
sahf
outsb
add
cld
std
lret
jb
into
mov
hlt
xor
push
dec
cmp
cli
push
ss
pop
adc
xchg
jle
jbe
loop
xor
xlat
add
sub
add
add
out
jbe
push
mov
push
mov
loopne
mov
movsb
pushf
arpl
push
mov
xor
lret
jno
movsl
mov
push
popf
inc
aaa
and
cmp
jmp
mov
push
pop
fdivr
jg
mov
jp
loope
sahf
mov
xor
aaa
pop
jo
jne
mov
dec
jle
je
pop
pushf
inc
out
clc
mov
stc
jmp
nop
mov
and
fsubl
nop
xchg
into
mov
xchg
ret
mov
xchg
ds
mov
shll
cmovne
pop
mov
sub
push
int
mov
mov
and
sbb
xor
sbb
push
add
fbld
mov
movsb
adc
push
jecxz
jo
loopne
stos
loope
and
jle
or
dec
dec
cltd
dec
push
xchg
out
pusha
loop
mov
pop
bound
or
pop
insl
mov
mov
mov
add
fidivl
test
and
jge
enter
adcb
ljmp
fiadds
sub
cmp
std
sub
arpl
jnp
or
pop
sahf
lahf
pop
mov
js
mov
loop
pop
out
add
cmpsb
cmp
fbstp
popf
mov
pop
add
or
jle
pop
pop
ss
xor
mov
imul
sub
js
jecxz
aaa
test
mov
iret
std
bound
xchg
mov
xor
aad
stos
aaa
es
in
and
sbb
fstpl
out
mov
decb
in
test
mov
lret
popa
mov
inc
mov
sbb
fs
ret
mov
sahf
cli
pop
inc
mov
out
mov
push
out
sub
dec
out
or
arpl
fcomps
push
pop
inc
pop
fldcw
in
mov
in
sub
mov
add
pop
mov
dec
jmp
xor
cmp
inc
insl
push
mov
je
xchg
sbb
jg
in
stos
or
add
xchg
loope
cmc
or
rclb
jp
xor
in
or
mov
mov
adc
xor
push
lods
mov
sub
add
es
push
ja
xchg
jno
lods
mov
dec
mov
imul
arpl
push
out
lock
fildll
rorb
rcll
popa
mov
ret
lret
push
arpl
adc
js
mov
sahf
cltd
sbb
fldt
mov
pop
int3
jle
add
pop
dec
je
sub
jp
or
mov
insb
push
shlb
lods
fnstenv
cld
push
int3
mov
mov
lcall
out
mov
fimuls
ds
push
popf
aaa
repnz
adc
xchg
pop
inc
mov
imul
cli
pop
pop
sub
aam
jecxz
out
xor
rorl
push
mov
add
pop
jnp
pop
out
and
add
jno
test
aas
int
xor
pop
pushf
bound
idivl
xchg
cmp
aad
and
dec
loope
sub
repnz
into
scas
mov
adc
aam
fwait
push
fldt
pop
jle
xor
scas
xor
cs
cmp
mov
ja
cli
aas
rcrl
gs
cmp
push
jl
xor
bound
pop
test
lcall
xchg
js
adc
shrb
dec
or
push
lods
push
dec
inc
cli
lahf
imul
movsl
pop
cmpsl
arpl
push
aaa
adc
rcll
in
mov
add
dec
mov
sbb
and
jae
out
adc
adc
aas
iret
cld
rcr
xor
shlb
cld
iret
mov
mov
icebp
insb
shrd
rcrb
mov
cmpsl
push
add
and
je
mov
scas
cmp
and
mov
mov
out
rorb
pop
outsb
mov
out
rorb
lcall
pop
mov
add
gs
inc
and
jecxz
insb
lock
mov
lahf
icebp
cmpsl
push
push
daa
loope
and
ror
push
imul
dec
ret
xlat
mov
stc
std
iret
cmp
or
stos
mov
test
imul
adc
mov
sbb
sub
lock
stos
sbb
push
outsb
jo
mov
mov
dec
adc
lock
ret
scas
mov
add
jne
add
inc
adc
rolb
clc
mov
popa
dec
mov
rorb
arpl
push
test
push
aaa
xchg
fadds
or
jno
xchg
mov
dec
popf
cmpsb
mov
sbb
call
jl
jecxz
bound
jbe
sub
and
dec
add
mov
inc
mov
mov
pop
inc
sub
nop
fcoml
cmpsl
test
lahf
xchg
mov
scas
cmpl
dec
add
jns
or
call
test
scas
mov
adc
xchg
jnp
into
pop
rorb
cmc
and
dec
jle
sti
mov
sbb
sbb
xchg
dec
sbb
ds
sti
in
mov
hlt
mov
inc
gs
in
pop
jb
fwait
stc
and
inc
repz
cmp
pop
pop
dec
or
jne
jnp
sub
jmp
push
xchg
lret
xchg
mov
mov
fprem
bound
push
pop
out
xchg
sbb
mov
adc
mov
sbb
rcll
pop
add
lret
push
data16
and
sbb
cmp
mov
fnsave
lds
mov
int
add
push
icebp
cmp
add
nop
jo
and
stc
jmp
cmp
out
jne
push
fwait
and
dec
cmc
scas
outsb
pop
adc
dec
repz
in
sarb
or
loopne
stc
mov
add
inc
adc
xor
add
ret
push
test
xchg
in
pop
cmp
dec
mov
es
jl
imul
push
jo
dec
mov
mov
test
inc
repz
jg
mov
jnp
sti
fisttpl
aad
sbb
mov
nop
fistl
push
cmp
lret
sahf
and
inc
xlat
daa
test
dec
mov
hlt
shlb
xor
hlt
notb
outsb
cmp
add
mov
push
xchg
cmp
rol
in
jae
dec
mov
jmp
rcrb
or
lea
mov
std
imul
cmpsb
sbb
jns
mov
mov
loope
jbe
sub
movsb
jo
jmp
movaps
sti
fbstp
fisubrl
mov
cli
adc
push
out
out
lods
or
sbb
loop
lret
rorb
insb
ret
mov
pushf
mov
jo
jp
js
push
ss
je
insl
add
rolb
cs
leave
jnp
popa
or
lret
lods
out
in
xchg
xchg
outsb
pushf
iret
xchg
rclb
jbe
fisttpll
mov
loop
push
imul
dec
cmpsl
cmp
insb
and
cmp
cld
cmpsl
in
fadd
jnp
rolb
xor
mov
or
mov
mov
adc
cld
jns
lock
pop
nop
imulb
cmpsl
mov
imull
shrb
nop
icebp
sahf
sbb
mov
push
rcrl
mov
jg
dec
and
fisttps
adc
cli
ljmp
push
ret
mov
jbe
pop
xor
mov
or
fwait
push
push
push
push
std
sbb
adc
pop
daa
pop
xor
out
dec
subl
lahf
dec
cld
aad
pop
call
fwait
aam
gs
testl
and
xchg
fnsave
ja
aad
popf
xlat
out
shrl
xchg
mov
loopne
inc
pop
adc
mov
lahf
test
pop
jbe
lods
lods
adc
iret
push
incb
or
push
push
aas
push
int
dec
xchg
xchg
fsts
aaa
ficoms
iret
lods
inc
icebp
rcrl
inc
xor
xor
fcom
pop
mov
mov
push
sbb
fdivl
add
mov
add
repnz
cmc
fldcw
add
fcoml
pop
rorb
ret
push
xchg
dec
aad
ret
jo
inc
mov
sub
hlt
out
shrb
cmp
pop
dec
and
sahf
mov
push
push
addl
je
sub
hlt
gs
push
das
jb
xlat
in
das
lcall
dec
xchg
movb
pusha
cs
and
mov
shll
dec
cmp
sub
add
es
inc
into
pusha
cld
xchg
imul
test
xor
gs
mov
mov
lret
int
into
and
aad
in
mov
pop
testl
and
into
pop
add
sbb
movsl
mov
out
push
dec
cli
fadds
pop
xchg
loopne
mov
dec
xchg
add
loop
sti
push
insb
arpl
jnp
and
and
lret
xlat
arpl
and
push
imul
pop
jg
ret
fcoms
xchg
addr16
jg
in
pushf
jge
adcl
add
add
out
pushf
jns
mov
push
scas
lcall
and
pop
out
arpl
xor
adc
push
jl
push
cmp
lcall
cltd
push
cmp
jne
or
idivb
mov
pusha
jmp
push
add
mov
mov
bound
pop
fadds
and
jno
push
and
adc
rol
pop
adc
xor
xchg
cmc
mov
mov
adc
outsb
fiaddl
jo
les
and
js
cmp
addr16
adc
rcrb
mov
fidivrl
sbb
aas
and
loop
adc
mov
sub
xchg
push
test
mov
pop
sti
ds
or
lret
adc
lcall
movsb
movsl
lods
in
sub
lcall
pop
pop
xchg
inc
lahf
inc
inc
sbb
push
xor
jp
jne
std
xchg
pop
dec
imul
and
jne
je
into
lods
shlb
and
pop
push
inc
cs
int
sbb
fsubrl
imul
jne
lds
ret
lret
shlb
push
cli
lods
jnp
sbb
dec
sbb
add
lret
cmp
stos
ds
push
push
pop
pop
testb
push
xchg
xor
push
push
jno
fldcw
push
sbb
pop
push
int3
addr16
ja
sbb
sar
adc
rcll
adc
icebp
add
xchg
pushf
adc
decb
sub
gs
shrb
mov
fdivl
loope
pop
ds
sub
xchg
xchg
lods
xchg
fsubl
das
lods
push
xchg
cli
cwtl
dec
push
or
js
jb
pop
scas
dec
movsb
dec
mov
mov
addr16
xor
insb
roll
js
cmp
sbbl
mov
cli
fisubrs
lret
sbb
or
std
mov
pop
js
lret
cmp
cwtl
sti
sub
fdivl
cmp
loopne,pn
push
fmuls
and
psraw
pop
fiadds
fstpl
into
stos
mov
adc
andb
pusha
xlat
cwtl
jbe
inc
jge
add
divb
aaa
aaa
addr16
arpl
lods
sub
xor
xor
pop
popf
push
xchg
pmulhw
aas
arpl
loopne
and
je
inc
push
inc
add
add
pop
mov
fwait
scas
pop
outsb
rclb
mov
push
lcall
dec
test
xor
repnz
or
test
push
fldt
jbe
rorl
sub
cmpsl
push
mov
pop
scas
mov
xorl
push
scas
ds
mov
dec
mov
dec
jp
in
les
lret
xor
sahf
mov
or
decb
stc
or
dec
inc
sti
stc
jns
cmp
xor
dec
xchg
mov
orl
mov
ljmp
out
cmpsl
mov
loopne
enter
out
inc
xor
and
pop
and
push
adc
fs
adc
xchg
dec
loope
add
push
add
hlt
pslld
xchg
jp
aad
mov
scas
lock
pop
lret
add
cmp
and
inc
cld
inc
add
mov
jge
sbb
mulb
mov
xlat
lret
adc
push
inc
adc
pop
push
sub
adc
jg
dec
push
subl
sub
std
lret
or
mov
jbe
dec
push
cmp
sub
enter
gs
pop
ret
insl
mov
cmp
jg
mov
inc
mov
call
inc
scas
jb
xor
add
and
pop
div
js
mov
imul
in
out
sar
xchg
push
pop
or
and
enter
in
xchg
cltd
lock
stos
inc
insl
jne
daa
lods
das
lea
inc
xor
dec
fsubrs
mov
mov
out
mov
lcall
pop
ljmp
arpl
inc
pop
dec
testl
add
mov
pop
aam
add
imul
dec
fs
lahf
add
imul
pop
fs
add
hlt
inc
test
inc
leave
jne
inc
add
or
pop
pop
dec
js
sbb
nop
mov
mov
jmp
mov
int3
jge
test
xor
popf
cld
inc
mov
stos
iret
mov
aad
mov
movsb
inc
icebp
and
jnp
push
and
mov
pop
jmp
mov
mov
sub
and
sub
insb
and
and
je
push
cmp
scas
mov
xchg
jge
imul
or
pusha
and
test
jl
push
sub
push
adc
push
cmp
sahf
jmp
mov
enter
mov
sbb
test
das
imul
pop
or
sahf
loop
in
sub
pushf
push
sbbb
push
test
in
add
jge
mov
shl
loope
or
dec
pop
sarb
call
inc
add
repz
xchg
inc
mov
mov
sub
inc
cli
out
xchg
int3
std
out
cmp
adcb
dec
lahf
lcall
jnp
stos
push
sahf
addr16
sbb
inc
js
je
ret
mov
xchg
xor
mov
mov
aas
gs
lods
and
out
push
cwtl
roll
jbe
mov
sbb
mov
aaa
mov
add
cmpsb
mov
sub
inc
sbbb
lret
xlat
xor
enter
inc
xor
rcll
cmpsl
xor
scas
cmpsb
sub
arpl
mov
dec
lahf
outsb
cwtl
std
mov
mov
nop
sarl
push
aaa
std
push
popf
adc
pop
jb
into
pop
jg
mov
aas
add
mov
xchg
subl
fsubl
mov
orl
dec
ss
testb
std
sub
scas
stos
cmp
pop
xchg
pushf
jecxz
imul
flds
mull
out
mov
in
leave
jmp
mov
lea
testl
data16
sbb
fnstsw
jnp
ds
cmpsb
nop
mov
adc
enter
es
xor
push
push
jbe
inc
xchg
pop
int3
lcall
inc
out
addr16
lods
add
push
scas
shlb
or
sarl
fisubl
cmp
jg
lcall
mov
clc
ret
ret
jb
out
sbbl
pop
sbb
movsl
sub
call
shll
in
jp,pt
loopne
pusha
adc
or
inc
in
jg
iret
test
out
pop
cmpsl
ret
stos
mov
cld
in
imull
roll
xorl
ret
lods
inc
or
pop
add
sbb
out
into
adc
mov
jno
jp
push
adc
cmp
shll
or
lret
pusha
xlat
cmp
sbb
icebp
rcr
out
cmc
jmp
push
bound
insl
fsubr
dec
xor
dec
add
xchg
lret
lods
jl
push
mov
jb
jmp
aam
mov
gs
mov
mov
xchg
arpl
xchg
int3
pop
pop
xlat
cmp
cmpsl
pop
xor
es
test
cli
inc
stos
stos
sbb
and
jmp
lea
pop
push
push
mov
mov
cmpsl
stos
out
arpl
or
sbb
outsb
movsb
cmp
or
lret
in
adc
pop
adc
std
push
fucomi
cmp
int3
sub
stos
loop
dec
popf
mov
je
sbb
push
cmp
fidivl
or
inc
push
hlt
outsb
jae
iret
andl
xchg
jno
dec
and
test
out
out
push
movsb
adc
shrl
sub
test
or
gs
mov
inc
mov
sbb
cltd
loop
sub
sbb
lret
or
xchg
sbb
jmp
sti
fldln2
ret
out
nop
xchg
cltd
cmp
aas
or
jl
xchg
icebp
cmpsl
mov
jecxz
cmpsl
mov
ljmp
fistpll
inc
nop
or
ret
psubd
sbb
cmpsl
movb
enter
imul
add
add
movsl
add
test
js
mov
xor
jne
jb
add
scas
repz
loopne
xchg
add
shr
add
and
and
and
test
adc
js
push
jbe,pt
xchg
mov
jl
ljmp
mov
cmp
xor
mov
sarl
or
test
mov
sub
rcrb
cs
push
mov
test
dec
xor
mov
push
jo
pop
fisttps
imul
repnz
je
xor
imul
or
fsubs
add
in
dec
mov
mov
enter
mov
adc
hlt
jecxz
xchg
add
aad
sub
jnp
ljmp
rolb
sbb
addr16
push
jl,pn
imul
fsubr
stc
dec
xchg
adc
push
data16
imul
inc
cs
pshufw
push
mov
push
negl
lcall
push
xor
jno
outsb
dec
jg
in
or
adc
mov
push
push
cmp
xor
imul
lods
sub
out
push
and
ficoml
rol
mov
push
adc
dec
and
sub
inc
mov
adc
jb
or
cld
mov
inc
daa
jno
dec
xchg
pop
mov
sidtl
sub
cmpsl
pop
outsb
icebp
mov
mov
jo
into
call
push
push
jmp
dec
xchg
sahf
sti
xor
sahf
xor
stos
lea
adc
out
jns
xor
push
vpsraw
test
sbb
pop
mov
fistps
add
adc
sub
cmp
pop
test
mov
push
jg
rolb
xchg
test
mov
and
adc
adc
jg
loopne
or
fdivl
in
and
fucomip
clc
push
lcall
outsl
cmp
js
loop
mov
outsl
ja
ret
inc
cmpb
ficoml
lahf
cmp
outsb
cwtl
imul
iret
xor
dec
add
xchg
outsb
add
inc
addps
xchg
les
in
movaps
xor
in
push
jnp
jo
in
mov
push
fists
cmp
shlb
sbb
popl
jge
inc
mov
mov
in
sbb
ss
push
cmp
adc
out
roll
ss
popf
mov
lahf
sub
cmp
ljmp
and
push
stos
ret
in
xchg
pop
loopne
dec
mov
fldl
jo
adc
mov
outsl
xor
sbb
jmp
xchg
call
jge
pop
adc
cmp
dec
imul
mov
mov
adc
inc
mov
test
jbe
cmp
das
xchg
mov
cmovo
mov
inc
lret
push
fcompl
push
es
mov
hlt
cmp
outsb
loope
js
das
jle
nop
lock
push
pushf
sbb
jo
cmpsl
mov
stos
inc
lods
mov
inc
push
jg
dec
and
loop
ja
pop
xchg
push
repz
sbb
push
and
lea
scas
inc
xchg
push
cmp
or
pop
in
jae
test
sbb
cli
sbb
out
dec
jmp
int3
xchg
cmp
cmp
push
add
jge
dec
fcom
cli
push
cmpsb
negb
and
imul
and
mov
pop
pop
jo
popf
insb
or
inc
or
das
stos
jp
inc
cmpl
ds
jo
pop
ret
repnz
xor
cmc
push
mov
stos
xchg
mov
jb
push
cmp
int
iret
stos
mov
fsubrp
pushf
fs
test
pusha
jecxz
out
fbld
jnp
rorl
mov
out
pop
and
and
sub
fidivrl
fimull
insb
cld
cmc
cmp
pop
xor
movsl
fnstsw
mov
daa
inc
xchg
lock
cli
das
jns
shl
es
jmp
test
pop
mov
outsb
test
push
aaa
inc
lcall
xchg
mov
orl
sbb
pop
xchg
bound
xor
loope
and
outsl
test
dec
aas
xorl
mov
and
imul
test
mov
cvtps2pd
enter
fisubrs
outsb
int
jp
test
xchg
sub
xor
fdivp
jmp
in
dec
lock
sbb
paddsw
cli
mov
mov
repnz
jnp
cld
imul
fldcw
mov
add
dec
mov
sub
xchg
mov
fildll
into
cmp
add
fwait
or
test
out
xor
dec
mov
xor
mov
xchg
mov
test
hlt
push
lea
or
push
inc
lock
cmpsb
inc
cmp
mov
clc
sbb
in
es
push
dec
fcmovne
dec
insl
adc
xor
inc
jmp
adc
push
dec
inc
pop
shr
xor
cmpsb
jg
mov
in
jmp
xchg
imul
pop
scas
ficoml
cmp
outsl
jecxz
cmp
push
adc
mov
dec
mov
hlt
mov
mov
or
xchg
sub
lods
jmp
popf
mov
push
push
mov
jl
hlt
sbb
adc
mov
sbb
cld
dec
sub
in
or
pop
loop
mov
outsl
ja
ficomps
ss
mov
lret
mov
imul
loop
cmp
inc
or
mov
out
sahf
add
mov
lret
add
adc
jne
xor
mov
pop
test
daa
sub
dec
pop
movsb
pushf
xchg
lds
xor
out
cmpsb
ficoms
loop
test
popf
mov
dec
adc
pop
jle
pop
enter
push
pop
popf
rcrl
and
and
add
loop
push
push
out
inc
push
cmp
pop
sub
push
cmp
mov
inc
ret
lods
mov
xchg
leave
push
dec
mov
jo
push
xor
pusha
mov
inc
rcrl
or
cmpb
repz
movsl
fwait
cmpsl
or
imul
inc
into
add
mov
clc
lock
lcall
movsl
pop
cmp
sbb
testl
sbb
xor
sbbb
push
icebp
pop
push
mov
jns
push
jnp
jnp
and
cmp
xor
shrl
loope
cmpsb
xchg
add
ljmp
jle
inc
movsb
lock
lds
mov
push
sti
xor
push
add
mov
std
sub
int
inc
rorl
sbb
mov
ja
pop
pop
shrl
sub
sbb
push
leave
cmp
loope
popf
aad
pop
cmp
push
negl
stos
pop
add
mov
into
fbstp
aam
push
sub
repz
pop
call
rcll
test
lods
outsl
rol
cltd
push
sbbb
pushf
pusha
pop
pushf
fcmovbe
ljmp
wrmsr
pop
outsb
push
icebp
xchg
cmp
mov
loopne
cwtl
cmpsb
cmpsl
mov
lret
std
jne
aad
push
in
shlb
shll
or
mov
scas
std
mov
mov
fsubrs
fwait
jo
add
repnz
adcl
mov
pop
psubb
je
cmp
mov
xor
outsl
outsl
jns
test
jb
fildl
mov
jge
aaa
adc
add
xor
pop
mov
mov
loop
and
dec
jl
jge
enter
mov
int3
hlt
jb
adc
pop
mov
insb
movsl
into
xor
addr16
cmp
ficomps
sub
cmp
movsb
pop
cs
sub
xchg
jns
add
stc
mov
das
pop
xor
dec
xor
and
aam
dec
xchg
inc
fidivrl
sub
cltd
xchg
cltd
cmc
imulb
fistpll
lea
inc
jle
add
pop
push
adc
roll
lahf
rol
ljmp
fnsave
mov
mov
adc
push
pop
ret
imull
or
cltd
push
pop
pop
push
mov
out
cwtl
loop
in
lea
and
das
clc
pop
test
test
xor
dec
insl
imul
dec
push
mov
rorl
enter
jno
add
in
xchg
popf
movsb
inc
outsb
cmc
pop
pop
xor
leave
aaa
or
push
ja
and
dec
mov
sarl
dec
sub
mov
rcrb
insb
inc
in
pop
cmp
push
dec
dec
sahf
int3
xchg
jbe
mov
nop
repnz
push
push
mov
push
sbb
dec
add
cmpsb
sbb
popa
repz
mov
fmuls
mov
cmpsb
inc
push
dec
pop
repnz
push
shll
loop
pop
test
jp
sbbl
repz
daa
mov
out
sub
enter
push
data16
fs
mov
and
sub
fidivrl
add
add
xchg
sbb
xchg
subl
pop
mov
xchg
fdivrs
mov
shl
and
mov
les
xlat
jnp
jno
sub
inc
dec
jmp
addr16
aam
imul
repnz
popa
in
add
mov
mov
arpl
and
cwtl
cld
inc
and
out
aaa
xor
in
or
add
aam
out
dec
push
sbb
repz
and
or
sbb
push
xor
mov
into
sub
shlb
hlt
xchg
sahf
mov
popa
cs
insl
pop
xchg
push
arpl
jo
jg
push
sahf
inc
lods
hlt
adc
int3
pusha
out
mov
lods
cld
cmpsb
and
dec
sub
jne
sbb
pop
cmp
sbb
rcl
outsb
mov
mov
and
faddl
xchg
pushl
fdivl
and
push
into
fwait
popf
pop
ljmp
mov
fdivp
fistps
adc
adc
mov
cmp
sub
sub
cmp
shl
mov
cmp
ret
fmuls
jns
ljmp
fildll
push
xor
das
mov
mov
xchg
mov
mov
nop
dec
jg
cltd
dec
lea
aad
popf
sub
jns
cmc
test
test
movhps
mov
aas
shrl
add
jno
adc
cmp
adc
testl
mov
mov
icebp
add
jg
nop
bound
call
lods
lcall
push
cmp
fstpt
dec
jno
mov
popf
push
call
push
popf
mov
lea
in
sbb
pop
xchg
cld
mov
popf
inc
sub
lock
inc
jae
movsl
dec
mov
cld
mov
xor
scas
dec
add
push
sub
xor
sahf
inc
mov
or
jbe
aaa
aad
and
dec
mov
dec
stos
inc
add
mov
movb
sbb
push
xlat
outsb
jp
mov
pop
mov
dec
out
movsl
shl
shrb
imul
in
pushl
pop
pop
jmp
jl
inc
jns
xor
leave
xchg
outsb
sub
ljmp
in
fst
jmp
mov
cmp
fidivs
inc
cmp
pop
inc
lret
mov
ds
dec
lods
orl
xorl
mov
jl
js
inc
aas
cmp
adc
jns
sbb
insb
jb
stos
and
out
mov
jg
mov
dec
xchg
andl
cmpsl
mov
add
arpl
ja
xchg
in
cld
icebp
in
imull
call
inc
roll
mov
mov
sub
sbb
stc
cli
dec
pop
jne
xchg
mov
mov
jecxz
lcall
mov
xchg
fs
imul
jnp
jae
out
mov
aaa
cli
push
lret
jmp
push
mov
scas
xor
test
repnz
xchg
xchg
sti
xchg
loopne
outsl
mov
xor
inc
lea
add
jne
in
mov
mov
mov
push
pop
pop
xchg
or
fwait
dec
fstps
repz
adc
cwtl
jmp
rcrl
pop
and
xor
mov
bound
or
das
dec
sbbb
insb
test
xor
shl
dec
les
cmc
inc
cmp
xchg
mov
jno
jge
jg
add
add
mov
pop
inc
dec
mov
cmp
mov
push
mov
sub
jne
aad
jp
rcll
repnz
mov
mov
jno
call
pop
and
xchg
jg
mov
inc
rorb
dec
jle
mov
jecxz
sub
lcall
jne
push
mov
or
inc
clc
cmp
out
pop
adc
cmpsl
aaa
push
inc
jae
xor
push
sub
fwait
jae
pop
dec
jle
adc
xchg
mov
bound
and
sub
imul
cmp
inc
push
cmp
ds
sbb
pushl
outsb
jne
push
mov
mov
loop
push
lods
arpl
dec
mov
jmp
lret
pop
cld
popa
pop
in
sub
sarl
popf
sbb
out
ror
loopne
std
push
cmp
sbb
out
ljmp
sbb
mov
es
loop
test
jle
push
mov
pop
or
xchg
add
inc
jbe
fisttpll
pop
fxch
sarl
xorb
adc
cmp
out
inc
sbb
gs
add
jl
push
mov
xchg
adcb
dec
cld
cmc
pop
loopne
xor
push
shll
pop
lds
sub
stc
mul
pop
mov
sub
clc
sub
pop
jae
push
aam
test
lahf
sub
aaa
shll
sbb
or
add
cmp
inc
and
aam
stos
xor
xchg
pop
hlt
js
mov
paddb
sub
stos
jne
roll
pop
and
daa
adc
dec
xchg
movups
addr16
ljmp
mov
lret
sub
popf
cmp
mov
enter
pop
test
or
pusha
cli
or
ds
fsubrs
std
sbb
sub
or
int
xchg
and
and
stc
xchg
push
lcall
xchg
push
stc
mov
xchg
dec
cmp
idivb
mov
jnp
fwait
cmp
fs
hlt
and
cmpsl
lret
insb
mov
js
sub
pop
mov
or
add
imulb
push
shl
out
sub
stos
dec
andb
cmp
jne
cmpb
pop
in
aaa
test
dec
xchg
sbb
xchg
lods
xchg
scas
push
jp
shrl
mov
js
cld
pop
cld
inc
and
and
js
ret
js
cltd
sbb
arpl
clc
stos
sbbl
sbb
icebp
iret
cmpsb
push
fildl
mulb
or
fdivrl
in
shll
daa
xor
sub
into
xlat
insb
movsb
iret
stc
lret
adc
push
push
sahf
jae
jb
rcl
pop
cmpsl
test
lock
inc
xchg
push
xor
and
dec
adc
stc
or
arpl
inc
mov
push
mov
inc
sarl
mov
scas
push
scas
fcomi
leave
adc
or
fwait
adc
push
cltd
jle
aad
orb
ror
xor
mov
nop
movl
test
jb
or
sub
mov
adc
mov
ret
les
xchg
iret
and
bound
mov
inc
or
shll
and
adcl
and
hlt
orl
fimuls
hlt
xor
fistps
pop
or
adc
lcall
js
outsl
mul
mov
sbb
clc
sbb
je
cli
cmp
cmp
jg
scas
xor
jl
int3
push
test
movsb
scas
sahf
pop
adcl
add
pop
cmp
pop
jge
inc
or
in
mov
xor
movsl
mov
pop
nop
arpl
ds
push
js
jge
jmp
xor
or
gs
mull
lock
out
in
shlb
mov
inc
mov
faddl
push
out
imul
and
test
mov
push
inc
or
sar
pop
lods
jle
jg
jl
jl
je
dec
test
dec
jb
frstor
inc
leave
inc
jl
loop
mov
xor
cltd
add
fwait
mov
dec
aam
aaa
loope
bound
mov
dec
pop
rolb
sub
add
sub
imul
jge
xchg
stc
or
sbb
loop
lods
shll
enter
test
xor
sub
jb
sarb
adc
xor
push
jo,pt
nop
popf
mov
in
jb
imul
mov
inc
fcompl
mov
andl
sbb
dec
sbb
mov
dec
adc
aad
arpl
imul
nop
add
pop
ss
test
jg
loopne
adc
shrb
fsubs
outsl
sub
jg
cli
push
js
xchg
sbb
fs
in
and
sbb
leave
xor
mov
cmp
test
in
out
or
dec
dec
outsb
adc
sub
pushf
icebp
cmpsb
aaa
jbe
ficoml
dec
add
and
jge
out
ret
lahf
mov
addr16
pop
sbb
lds
inc
lock
push
repnz
xchg
js
mov
dec
pop
xor
cmp
mov
int3
mov
pop
insl
aad
jb
cmp
pop
sbb
xchg
sbb
outsw
mov
jmp
arpl
js
jnp
into
or
test
jmp
rorl
xchg
je
popf
sbb
incb
and
call
xchg
cmp
jge
pusha
xor
jbe
flds
es
push
in
scas
inc
pop
and
xlat
push
flds
adc
push
push
cmp
lret
push
cli
inc
outsb
loope
xchg
and
jb
popl
xor
jmp
stos
sbb
pop
mov
lret
out
iret
sbb
add
dec
jae
push
dec
mov
jns
ss
inc
jle
aas
lcall
jae
fstps
sti
adc
cmpl
arpl
jae
jno
lea
jno
dec
shlb
sti
imul
iret
je
adc
xchg
sbb
dec
mov
and
sub
pop
jns
cmp
inc
add
inc
push
or
mov
cwtl
xchg
dec
out
dec
jg
je
add
test
adc
mov
mov
dec
les
dec
cmp
lahf
jmp
adc
fbld
xlat
xchg
push
mov
frstor
pop
jmp
gs
in
push
adcl
div
scas
into
aad
xor
mov
outsb
xor
lea
and
mov
sub
inc
rolb
cmp
mov
mov
add
jl
mov
jmp
or
pusha
insb
mov
sub
push
jb
push
lret
sbb
mov
cltd
mov
and
ret
iret
cltd
ja
adc
inc
loop
lds
cltd
mov
cmp
sub
push
pop
cmc
outsl
xchg
sahf
inc
or
xchg
fidivrs
jle
adc
rorl
dec
int3
in
cmp
fistps
scas
repz
jnp
jo
jnp
or
pop
mov
cltd
test
sbb
sub
jg
jo
push
ss
movsl
test
push
mov
sub
adc
addr16
mov
jg
jecxz
ljmp
addb
dec
fadds
decb
push
ret
push
ss
ds
inc
mov
dec
sub
pop
pop
roll
lret
or
cmpsl
stc
cmpsb
imulb
jb
lods
sub
sbb
sbb
iret
pushf
int3
inc
stos
push
mov
jl
loop
cmp
lahf
lock
push
cli
in
insb
daa
mov
mov
repnz
mov
fwait
incl
aaa
cli
fdiv
inc
pusha
add
scas
cmp
aaa
fmull
ds
and
jp
hlt
jle
push
sbb
sbb
dec
das
xchg
or
test
rol
dec
push
stos
out
andb
push
mov
and
add
lahf
cmp
lods
push
add
jg
push
inc
xchg
jge
mov
push
add
push
add
and
or
and
scas
or
xchg
adc
mov
pushw
pop
popf
cmc
or
inc
mov
out
pop
pop
mov
or
insl
and
or
lods
mov
push
dec
call
cmpsl
aaa
adc
xor
lahf
loopne
stc
mov
sbb
cld
jne
test
sub
sub
icebp
or
repz
sub
adc
mov
cmp
xchg
sub
jo
test
ret
cmp
dec
neg
fdivrl
test
punpcklbw
mov
pusha
dec
pusha
fists
in
sarb
pop
mov
push
push
mov
ja
fsubrl
cli
daa
movlps
jo
cmpsb
loopne
sbb
inc
jle
inc
and
fwait
jmp
push
arpl
adc
les
stos
loope
cmp
and
flds
testb
jae
mov
or
aaa
sarl
cmp
gs
sbb
ss
bound
cltd
test
mov
sahf
mov
pop
insl
dec
cli
imul
cmpsb
xchg
es
jbe
js
push
dec
cli
sbb
push
shl
ds
stos
jp
mulb
enter
aam
jmp
push
cld
sub
enter
test
jbe
mov
and
pop
mov
cmp
pop
pop
dec
cmc
addb
ds
mov
mov
nop
imul
ror
sbb
out
bound
cmp
push
leave
shll
test
dec
test
xchg
inc
pop
pop
pushf
stos
pushf
mov
and
movsb
fwait
js
push
or
push
mov
sub
test
push
inc
jne
out
std
cmp
cmpsb
sub
or
ret
das
xchg
cld
inc
xlat
push
fisttpl
mov
push
cld
fisubs
in
mov
iret
mov
cld
in
lahf
sub
xchg
ror
lock
and
sub
jnp
arpl
gs
jo
or
push
xchg
cmp
inc
shlb
sub
mov
inc
xchg
data16
sbb
pusha
mov
orl
daa
add
push
and
xor
cltd
ja
cld
cltd
mov
out
add
jb
mov
and
xor
stos
popf
xor
sahf
mov
xor
imul
dec
jg
sbb
sub
push
push
add
mov
sbb
sub
pushf
hlt
sbb
sbb
sahf
xor
ffree
orb
sbb
fstl
cmp
add
jge
cmp
shl
mov
ss
in
das
inc
sti
sub
or
mov
outsl
in
cwtl
lock
pop
cwtl
call
push
test
xchg
adc
push
cmp
hlt
and
cmp
daa
sbb
ds
mov
cmp
lods
jle
adc
rcr
stos
lods
inc
jp
add
mov
iret
jae
lret
daa
jl
lcall
dec
or
lea
xchg
dec
sbb
fs
out
mov
jne
mov
movaps
jl
lahf
jecxz
pop
push
scas
push
lret
outsb
sahf
scas
nop
xchg
push
jno
adc
sbb
idivl
xchg
imul
add
jmp
lods
jno
xor
les
add
dec
xor
inc
imul
lock
jno
imul
sub
mov
movl
stos
fisttpl
cmp
xor
aad
mov
pop
je
xchg
gs
inc
ljmp
fistl
ret
pop
push
stos
es
xchg
or
sbb
insl
dec
sahf
jo
lds
dec
sub
mov
sbb
mov
movl
dec
add
and
add
stc
xchg
pop
jns
mov
inc
cmp
mov
xlat
sub
xchg
imul
fistps
xor
iret
sbb
add
js
or
cli
xchg
add
arpl
mov
push
loop
add
add
sub
lahf
push
xchg
ficoms
or
stos
mov
mov
adc
pop
adc
rcrl
jmp
fwait
mov
aad
out
setp
dec
in
pop
ret
sub
test
ljmp
mov
mov
xchg
mov
ljmp
sbb
jns
dec
bnd
dec
loope
je
arpl
pusha
movsl
mov
enter
cltd
add
testb
das
rcll
shll
loopnew
in
sbb
lahf
adc
push
je
dec
jns
cmpsb
sbb
jmp
pop
mov
mov
xchg
mov
stos
sarl
dec
int
into
movsl
hlt
add
popf
repnz
push
mov
pop
xor
inc
mov
jle
ja
mov
je
mov
pop
xchg
out
xchg
mov
nop
and
notl
lods
mov
mov
push
imulb
fwait
jmp
cli
mov
jle
arpl
outsl
jp
aaa
repz
pop
xchg
bound
jecxz
cmp
es
sbb
sti
roll
jnp
mov
lahf
sub
mov
jl
lds
sahf
xor
sub
xchg
jle
and
fistpl
setl
xor
ret
dec
loop
fistpll
aas
cmp
mov
push
bound
ljmp
subl
fnstenv
sarl
int3
js
ds
cld
pop
mov
jbe
in
outsb
les
or
scas
xor
popa
push
pop
or
xchg
cmpb
hlt
sbb
xchg
enter
dec
int3
fisttps
xor
enter
pop
jecxz
gs
xor
dec
andb
sbb
jns
sbb
xlat
sar
pop
ret
xchg
and
shlb
fdivp
imul
jle
jp
aam
xchg
popf
daa
xchg
push
inc
in
or
imul
mov
push
jae
fwait
jae
xchg
mov
sbb
hlt
pop
aaa
in
lahf
icebp
lods
fcoml
inc
mov
hlt
jo
dec
mov
call
and
cmpsl
mov
jbe
sbb
pop
cld
adc
pushf
in
jle
ljmp
scas
gs
push
loope
insb
mov
lea
lret
push
pop
into
push
xlat
repz
push
out
arpl
xor
adc
in
test
pushf
xchg
imull
lds
and
lods
call
xchg
push
fcomps
out
jle
sbb
loopne
lea
loope
je
scas
push
xchg
jae
pop
sbb
push
fs
pop
jp
popf
sbb
je
or
call
mov
sbb
pop
mov
mov
pop
leave
pop
int
pop
mov
out
shr
mov
jo
jl
scas
jecxz
fcoms
sarl
mov
iret
pop
inc
lods
add
mov
pop
cmp
out
lcall
fs
push
or
lret
jb
call
pop
test
or
bnd
js
repz
jnp
or
in
test
aas
int3
and
mov
pop
pop
jg
movsb
lret
lret
jl
xlat
mov
mov
out
jo
pop
test
and
in
cmp
scas
sub
inc
scas
push
xor
scas
arpl
stos
sub
cmc
xchg
fisubrs
inc
adc
jge
fwait
and
pushf
out
xchg
adc
mov
and
nop
rcrl
mov
push
jae
jbe
inc
imul
pop
stos
cld
xchg
outsl
andb
loop
mov
pusha
loope
shl
inc
jb
mov
adc
and
lods
cmp
sub
cltd
cwtl
out
jns
jp
mov
or
or
push
dec
jmp
push
jns
mov
mov
les
int
adc
mov
pop
cwtl
add
movaps
sbb
cmp
jge
inc
js
shlb
out
lcall
out
push
ss
pop
movl
xchg
mov
cmp
mov
shr
lea
lea
dec
sub
pushf
out
and
int3
aam
jmp
jmp
push
ljmp
aam
inc
dec
addb
stos
orb
in
cs
loopne
int3
sar
or
push
pop
rcr
push
outsb
outsb
lock
inc
push
hlt
call
xor
jle
jmp
ret
adc
sbb
or
xchg
xor
mov
mov
cmpsb
daa
addr16
mov
pop
jb
or
mov
mov
sarb
popa
jne
stos
xchg
enter
xor
dec
lds
fdivl
ret
std
stos
jno
pop
aaa
lret
xchg
push
and
negl
int
jns
mov
stos
jb
shrb
maxps
push
mov
push
jne
jnp
mov
mov
and
mov
pop
push
div
inc
inc
and
mov
push
mov
iret
and
jbe
jg
test
mov
cmpl
mov
pusha
insl
ljmp
adc
in
sti
push
fistpl
sarl
arpl
add
lods
xor
add
mov
xor
mov
pop
pop
push
adc
ror
lahf
mov
jo
pop
adcl
mov
sahf
iret
cli
mov
scas
and
jae
cmpsb
mov
shrl
sbb
js
les
ljmp
insl
dec
fmulp
cmp
or
mov
cmp
push
stc
lcall
nop
inc
shlb
in
sbb
xor
push
loope
push
mov
mov
jbe
mov
pop
or
mov
lret
adc
jae
stc
mov
mov
sbb
daa
not
lods
int3
jle
lcall
xlat
movsl
push
pop
xor
sub
mov
gs
adc
pop
lock
push
and
adc
sub
dec
xchg
jmp
dec
jb
testl
mov
jb
clc
dec
cmp
rcll
stc
sub
adc
adc
jp
loop
mov
pop
xchg
ja
and
std
mov
mov
adc
lcall
push
mov
jne
pop
sub
cltd
popf
fwait
cmc
mov
inc
cmpsb
push
push
cwtl
pop
int
movsb
outsb
pop
mov
das
in
imul
in
into
push
filds
pop
xchg
mov
pushf
mov
mov
sub
sbbl
in
push
mov
ret
ljmp
movmskps
ror
add
jae
or
cmp
xchg
repnz
adc
push
icebp
inc
mov
adc
ret
mov
push
pop
sbb
ret
lahf
xchg
insl
out
testl
push
ret
insl
adc
lods
adc
mov
jne
ss
inc
push
rorb
orl
push
in
push
dec
test
mov
or
dec
cld
mov
clc
or
xchg
popf
shl
sub
sbb
out
mov
fwait
add
sbb
xor
jge
loop
int
dec
jp
and
inc
sbb
inc
gs
jle
xor
xlat
push
inc
cld
dec
repnz
fisubrl
xlat
fdivp
cmp
push
dec
cmp
and
mov
mov
and
daa
imul
mov
inc
xlat
adc
cmp
sti
fsubs
divl
jns
adc
pop
test
cmc
xor
jg
pushf
and
cmpsl
das
daa
push
push
into
aaa
cli
jbe
jbe
fwait
movsl
mov
test
or
or
push
repz
enter
add
mov
iret
and
and
xchg
cmpsb
int
cmp
jp
dec
lret
dec
mov
sbb
aad
mov
fsubrs
out
mov
adc
loopne
iret
push
aad
ficompl
shrl
test
xor
das
icebp
mov
sub
fldlg2
shlb
int3
cmp
addr16
pop
lock
xor
and
jns
xchg
xor
xor
mov
inc
inc
call
fdivr
fadds
imul
inc
sub
xchg
pop
jmp
and
and
loope
hlt
out
fidivl
push
sub
cld
and
ret
in
push
leave
adc
wrmsr
pop
fisubs
enter
xchg
aad
cs
mov
mov
cs
fimuls
data16
in
mov
sbb
sbb
dec
mov
inc
mov
mov
dec
inc
xchg
jmp
nop
cmpsl
dec
test
int3
and
out
mov
test
jae
loope
push
jb
or
shlb
sbb
fistpll
push
fistl
mov
jbe
pop
cltd
sbb
add
mov
inc
lods
lret
imul
mov
inc
add
or
push
xor
movsb
ret
xchg
push
mov
nop
ds
mov
sub
mov
mov
es
push
pop
push
jecxz
jp
scas
je
and
mov
stos
leave
sbb
xchg
aas
movsl
leave
push
outsb
or
sarl
arpl
scas
pop
dec
lret
dec
aas
xor
shrb
jg
test
sbb
mov
ljmp
push
push
mov
flds
xchg
enter
add
push
and
or
sbb
push
pop
mov
fnstsw
or
jecxz
sbb
lcall
lret
fidivl
cs
and
fadd
dec
jp
stos
or
xor
cmp
stos
cmp
add
push
mov
cmpsl
mov
test
out
or
test
inc
sbb
sti
imul
mov
lea
mov
and
jae
mov
mov
push
int3
std
and
pop
test
aad
nop
stos
mov
inc
cmp
mov
cmp
lock
fsubrp
movsb
movsl
cmpsl
ljmp
push
inc
push
push
mov
jge
pop
mov
push
jg
jle
mov
mov
sbb
aam
sub
outsl
jp
mov
orb
std
pop
adc
push
inc
xor
jno
in
adc
dec
xchg
fs
pop
lods
xchg
cmpb
sbb
inc
xlat
dec
sbb
adc
xchg
lock
enter
cmpb
mov
dec
pop
test
movsl
repnz
mov
xor
jne
xchg
cwtl
and
repz
scas
ja
pop
sub
hlt
dec
push
daa
adc
sti
fwait
sbb
adc
je
in
or
adc
andb
push
pop
cmc
sub
shlb
inc
push
cmp
inc
cmc
sbb
mov
or
fisttps
jne
add
cltd
jno
mov
pop
mov
aas
jns
jno
cmpsb
mov
ret
xchg
sbb
movsl
fdiv
and
jno
pop
in
xchg
push
pushw
push
fisubl
imul
lahf
xchg
test
cwtl
icebp
dec
and
std
mov
popa
in
inc
fidivl
sbb
mov
and
pop
xor
aas
and
xchg
stos
cmp
rolb
mov
repnz
fs
out
xor
mov
adc
push
mov
dec
pmulhuw
sti
push
ss
lahf
inc
cmpsl
int
inc
or
sub
leave
dec
push
jge
ja
xchg
xor
js
xchg
in
mov
cltd
pop
adc
inc
push
stc
ret
out
outsl
xchg
and
mov
mov
mov
rcll
scas
dec
inc
xor
cwtl
aam
or
shlb
int
hlt
cmp
push
mov
jecxz
orb
outsl
popf
stos
out
jp
notb
cmpsb
dec
sbb
sub
stos
adc
pop
popa
aas
mov
xchg
int
or
mov
fwait
dec
aam
les
data16
call
jmp
js
stos
lret
adc
xor
jg
or
cmp
mov
mov
ja
movsb
fidivl
mov
push
in
fs
push
rcr
cld
sub
mov
jl
fldt
xchg
jl
movsl
fdivr
mov
pop
push
daa
mov
ret
inc
xor
and
mov
orb
les
push
cmp
jmp
push
adc
loope
jl
xchg
lret
inc
push
push
mov
mov
dec
shl
scas
cld
xchg
ss
addr16
or
lret
cwtl
xor
icebp
add
pop
sbb
pop
out
movsl
pusha
pop
outsl
mov
es
lods
ja
mov
daa
or
mov
and
mov
testb
add
test
push
imul
rorl
bound
daa
pop
sub
and
mov
inc
lods
or
inc
add
dec
inc
sub
xchg
mov
repnz
jae
lahf
decl
inc
mov
addr16
fdivrs
cwtl
adc
fldenv
pop
je
ljmp
jle
cmp
push
jbe
pop
inc
mov
dec
orb
push
mov
sub
sub
cmp
mov
inc
cmp
mov
fisttpl
scas
jge
jmp
loopne
repz
cld
sbb
mov
mov
xchg
sub
adc
ljmp
mov
jnp
cmp
xchg
mov
sbb
cmp
out
jp
lret
add
imul
jge
in
cmp
fldt
repnz
adc
pop
fdiv
mov
sub
xor
and
cmp
out
rcrb
sbb
les
jns
mov
cld
in
mov
mov
testl
cmp
fldenv
adc
lods
or
cmp
inc
jo
aam
push
xchg
dec
in
mov
aam
shrl
sarb
repnz
add
xchg
push
iretw
jnp
pusha
scas
enter
xchg
loop
ds
clc
repz
jmp
nop
mov
mov
ljmp
and
or
out
jmp
sub
xchg
shll
out
sub
loop
sub
xchg
mov
sbb
int
inc
mov
jb
mov
adc
add
or
ret
sarb
movsl
mov
mov
clc
jbe
sahf
jo
dec
aam
sbb
sub
pop
dec
aam
lds
fwait
push
xchg
pop
add
and
mov
adc
inc
inc
repz
mov
nop
inc
fwait
gs
popf
xchg
lods
orb
jb
dec
inc
out
dec
jg
ss
in
mov
mov
sbb
insl
push
sub
test
xchg
pop
pusha
dec
cmc
cltd
adc
jp
movsb
sbb
jbe
dec
push
xchg
lret
inc
out
repnz
lahf
aam
inc
call
ja
mov
xor
push
lock
push
andl
lea
xchg
jo
test
mov
mov
or
mov
lret
cmp
inc
jbe
jge
mov
arpl
aas
mov
xchg
sarl
test
jae
imul
sub
xchg
sbb
ret
jp
xor
push
sti
lret
inc
hlt
xchg
test
pop
xchg
mov
into
jl
add
jbe
rorl
add
gs
mov
rol
dec
adc
montmul
cmpsb
add
push
into
sahf
pop
adc
jg
jl
js
jecxz
dec
and
or
sbb
insb
dec
push
in
sub
xchg
push
insb
push
dec
mov
pop
data16
les
mov
xchg
fs
adc
ja
into
movsl
jne
mov
mov
scas
call
jp
mov
pop
pop
and
push
aaa
xlat
and
inc
gs
or
sub
cmp
pusha
jo
pop
fwait
jle
mov
cmp
sbb
push
pop
pop
leave
out
aaa
inc
repnz
and
and
outsl
popa
icebp
inc
jae
xchg
out
push
fistl
in
xchg
jnp
stos
inc
je
fldt
mov
sub
jo
dec
xchg
mov
aas
adc
mov
or
mov
push
add
mov
or
pop
xchg
pushf
inc
clc
xchg
mov
stos
and
int3
jb
sbb
xor
ja
jg
or
xchg
lahf
fsubl
iret
dec
adc
cli
sahf
push
sti
fsubr
popa
xchg
pop
push
push
ds
insb
cld
and
out
rorb
loope
cmp
push
xor
insl
or
jmp
mov
or
sahf
scas
fcomps
adc
mov
pop
pop
xor
add
insl
int
lea
and
mov
jmp
lret
xorb
enter
data16
mov
jb
xlat
adc
cmpsl
sub
imulb
cmpsb
push
hlt
scas
xchg
and
scas
bswap
or
lret
daa
data16
xchg
aad
pop
test
ja
imul
rcl
and
imul
sub
loope
mov
xchg
push
or
lret
addr16
repz
xor
pop
or
push
cs
jo
cmp
pop
ljmp
dec
movsl
roll
lcall
add
xacquire
int3
scas
push
push
pop
pavgw
nop
mov
jb
push
mov
push
jno
lods
push
out
rclb
pop
enter
jecxz
int3
mov
cmp
test
add
jge
shl
jae
xchg
mov
mov
xchg
idivl
cli
push
dec
pop
dec
call
in
popa
orl
add
jb
xor
nop
mov
testb
cld
adc
outsl
and
xchg
roll
cmpsl
or
jl
dec
in
int3
pop
jp
pop
sarl
pop
loope
lahf
cmp
xchg
mov
into
mov
test
enter
ss
xor
dec
xlat
ret
popa
fs
in
nop
test
mov
jb
fisttpl
divl
std
nop
lea
fwait
dec
dec
loopne
addb
cmp
and
shlb
dec
lds
addr16
insb
loope
loopne
push
enter
mov
sbb
cli
inc
and
cmp
loopne
insl
pusha
dec
cmp
or
pop
in
xchg
sub
xor
push
jbe
cmp
call
pop
sbb
mov
bound
jmp
pop
inc
mov
hlt
pop
aaa
push
add
je
mov
nop
xchg
adc
in
flds
outsb
call
sbb
les
iret
add
int
xor
push
xlat
ja
movb
mov
rclb
cli
fists
mov
in
push
mov
je
mov
stos
or
cmp
sub
fwait
aad
stc
mov
ljmp
add
shrl
mov
pusha
jecxz
pop
cmp
lods
lods
lods
jb
sbb
sbb
lods
and
pop
push
mov
pop
divl
cld
push
xchg
orl
lods
inc
scas
xor
movsl
scas
jb
cmp
adc
lret
stos
icebp
or
mov
sahf
push
push
test
dec
inc
je
mov
xorb
sub
xor
sub
fldt
ds
lcall
sbb
dec
mov
sbb
pop
mov
gs
ret
ss
jmp
jle
push
jmp
mov
cli
gs
fidivrl
mov
enter
and
pop
stos
dec
stos
jb
leave
int
decb
outsb
into
sbb
shlb
test
pop
rcrb
sbb
ja
xor
jg
cmp
int3
test
xchg
in
ljmp
or
idivl
push
xchg
or
adcl
mov
mov
add
sbb
sahf
bound
add
mov
iret
cmp
lcall
fwait
js
xchg
cmpsb
xchg
push
mov
into
xchg
jns
and
cmp
in
add
xor
xor
repnz
repnz
lea
push
out
test
xchg
leave
mov
test
push
decb
movsb
mov
mov
add
inc
xchg
lock
je
test
dec
cs
xchg
mov
bound
arpl
and
imul
inc
pop
stos
in
scas
mov
fs
shl
mov
shl
adc
shl
jp
sbb
dec
data16
sbb
mov
outsl
iret
gs
sti
test
jp
pop
int
or
mov
push
out
inc
push
out
std
stos
push
sahf
cmp
scas
jle
dec
out
jg
rolb
mov
popf
lret
out
cwtl
inc
dec
sbb
in
cmp
mov
dec
out
sub
xor
leave
cmp
popa
xchg
int3
bound
cmp
xor
icebp
push
rcrb
roll
push
jp
mov
cltd
dec
sbb
mov
mov
fldcw
lock
dec
roll
stc
adc
jns
test
pusha
or
dec
cli
aam
lcall
cmpsb
pop
mov
pop
hlt
cmc
enter
popa
imul
into
jmp
and
out
dec
sub
sbb
jne
push
pop
shl
dec
xchg
sbb
cbtw
cmp
add
or
fsubr
dec
mov
sbb
xchg
lods
and
andb
out
cmp
jmp
decb
jb
aas
or
adc
js
test
hlt
adc
aad
or
lret
xchg
add
inc
or
jae
adc
fmuls
sbb
adc
jge
out
jmp
cld
jp
xchg
mov
push
adc
mov
add
int
adc
or
xchg
mov
sub
adc
les
sbb
aad
int
shrb
xor
test
shl
fnstsw
add
xor
hlt
ret
pop
mov
push
call
loopne
fmull
data16
enter
xor
divb
mov
ss
mov
add
pop
dec
xor
push
and
inc
leave
lods
hlt
fnstcw
xchg
fsubrp
mov
mov
jmp
and
in
dec
lahf
leave
dec
subl
xchg
xchg
repnz
and
sbb
sbb
test
lahf
mov
idivb
or
inc
cmp
out
js
int
lods
xchg
jle
push
insl
dec
lret
cmpsb
movsl
pop
outsl
es
push
sub
ret
push
pop
cmpsl
push
loopne
or
cmpb
cmp
and
push
sub
pop
dec
mov
ret
in
cmpb
xchg
mov
and
mov
inc
js
hlt
ss
or
inc
cmp
push
addr16
mov
movsb
movsl
ljmp
addr16
out
mov
jo
jns
jecxz
sbbb
ja
pop
pop
pop
movsb
push
test
mov
push
pop
cmp
pusha
test
stos
and
xor
or
jns
imul
xor
push
and
push
inc
icebp
jae
std
outsl
adc
xchg
jno
push
inc
mov
or
in
jmp
push
jae
in
imul
adc
mov
xchg
push
mov
das
inc
and
pop
xorl
xor
scas
mov
pop
addr16
jge
sub
lea
dec
inc
mov
dec
icebp
mov
jns
pop
ljmp
pop
push
pop
lock
pushf
rcrb
jae
add
jne
xchg
mov
mov
push
std
pop
pop
jl
sbb
enter
lods
pop
rcl
ret
add
dec
mov
stc
inc
sahf
clc
adc
shrb
int
add
cmc
inc
add
sub
fucomi
jecxz
and
imul
lds
mov
mov
adc
ljmp
jno
push
xor
mov
jo
xchg
cmc
push
xchg
repz
and
xchg
mov
push
or
push
pop
int3
dec
out
in
lret
stos
loop
adc
inc
and
out
jne
scas
dec
cld
mov
ret
icebp
fisttps
cmp
mov
add
pop
movsb
out
pop
sbb
mov
loop
fsub
das
gs
aad
or
movsb
icebp
mov
push
cmp
xlat
ret
jae
inc
push
lods
pop
xor
decl
lcall
jp
loopne
idivl
cs
push
es
call
mov
fstl
lea
int3
inc
mov
jle
xchg
outsb
dec
sub
scas
in
sub
and
int
push
or
notb
fildll
jne
int3
mov
xchg
push
cld
nop
test
mov
repnz
js
testb
pop
mov
cwtl
popf
mov
and
add
sbb
mov
sbb
mov
adc
test
dec
inc
mov
mov
out
mov
dec
and
pop
iret
lret
mov
sbb
lcall
adc
add
add
sbb
aaa
xchg
add
push
int
ljmp
jl
mov
xchg
push
pop
scas
outsl
fcmovne
mov
outsb
pop
mov
push
out
mov
psraw
sub
pusha
dec
psubsw
jb
dec
sahf
jo
hlt
lods
sbb
mov
or
aaa
adc
jb
mov
xor
mov
mov
add
andl
outsb
scas
pop
pop
cmp
lahf
push
loopne
test
fs
mov
outsb
loop
pop
inc
das
adc
dec
mov
add
push
jg
mov
imul
pop
test
cmp
scas
sbb
lcall
jge
aaa
pop
push
xor
movsl
or
out
call
ss
pop
xor
lret
xchg
jns
cs
aad
fldt
call
iret
repz
dec
sub
push
sarb
loop
xchg
jb
enter
add
adc
and
sti
cli
shrb
loope
add
popf
or
push
sbb
or
dec
ljmp
xor
push
sub
mov
cmp
idiv
aam
test
push
mov
jns
jecxz
test
pushf
pop
and
insl
fmulp
icebp
adc
into
xchg
adc
mov
inc
enter
out
dec
inc
sub
clc
adc
test
sbb
ror
popf
test
cmp
cwtl
adc
arpl
push
divl
push
sarb
pop
inc
jbe
clc
fstpl
jno
and
popa
mov
stc
xchg
mov
mov
pop
out
mov
stos
cmp
dec
mov
ret
xor
pop
push
jmp
pop
popf
pop
xor
push
faddl
sbb
test
lret
and
inc
in
cmpsl
push
lahf
dec
lea
ds
add
sahf
leave
mov
sub
test
mov
movsl
sub
inc
jge
test
jp
cmc
xlat
ds
jge
and
jo
cli
jecxz
pop
inc
call
and
in
push
lahf
bound
cmp
out
int3
sbb
jmp
loop
cmp
pop
gs
dec
xchg
add
jne
les
inc
rcrb
and
mov
add
pop
orb
mov
push
xor
sti
add
pop
mov
cmp
xchg
iret
pop
xor
xor
dec
movsl
es
call
or
js
lock
daa
daa
loopne
inc
inc
push
cmpsb
lahf
aam
in
xchg
test
test
mov
mov
movsb
adc
or
sub
fdivrl
xchg
or
int3
iret
imul
jp
pop
or
jnp
sub
push
in
xchg
inc
xlat
adc
iret
mov
leave
xchg
adc
jnp
xchg
loop
pop
xor
pusha
rcrl
je
aas
shl
ljmp
mov
mov
add
xchg
pop
adc
clc
inc
mov
call
push
int3
jl
lret
cmp
push
cld
mov
enter
pop
mov
aad
add
jo
pushf
jbe
stos
shlb
hlt
mov
cmc
faddl
es
mov
lods
mov
sub
ljmp
pop
fnstsw
mov
sub
mov
mov
int
aad
jl
and
stos
lret
movsb
mov
pop
or
mov
xorb
shll
dec
pop
popa
stc
mov
xchg
mov
xlat
andl
mov
jle
gs
mov
fbld
or
in
or
xchg
adc
adc
les
sbbb
call
in
or
adc
call
pop
movsb
xchg
shr
pop
bound
mov
roll
push
out
popf
inc
lahf
mov
leave
test
rorb
in
mov
mov
aam
ja
and
or
daa
insl
mov
push
out
ljmp
loope
jmp
cwtl
loope
push
sub
or
pop
add
dec
mov
pop
xor
and
xchg
ret
popa
pop
mov
stc
stc
icebp
ds
adc
outsb
xor
adc
clc
shrl
lock
ds
and
ret
outsb
in
mov
out
xor
jns
mov
jp
jge
mov
mov
cmp
inc
push
xchg
mov
ljmp
mov
aad
mov
lods
dec
and
fstps
jnp
jecxz
xor
repz
xchg
cld
adc
stos
movsl
push
jae
imul
sub
pushf
xor
xchg
cmpsb
jle
jbe
push
jnp
push
push
mov
in
mov
insb
mov
and
sub
ss
cwtl
movsl
pop
mov
das
sub
pop
pop
sub
mov
mov
inc
xlat
sub
xchg
sub
jno
inc
jno
pop
push
in
adc
xchg
movsl
adc
xor
psrld
sub
xor
data16
stc
xchg
jl
rcrl
mov
jge
mulb
lahf
aas
dec
movsb
xchg
in
xchg
or
add
pusha
or
jnp
push
inc
orl
lds
pop
sbb
sub
jecxz
lahf
inc
jp
int
test
scas
xchg
xchg
pop
push
xchg
out
cli
dec
adc
in
jge
adc
push
sbb
iret
outsl
add
mov
sub
stos
or
mov
adc
mov
dec
and
out
xchg
or
jl
mov
inc
jmp
stos
imul
ret
stos
cmpsb
orl
mov
imul
lods
push
or
int
out
xor
iret
push
fabs
mov
cmp
jo
adc
in
fstps
loopne
pop
cmp
xchg
pop
lods
pop
xchg
jbe
mov
lret
mov
xor
jno
jae
xor
adc
mov
call
adc
xchg
dec
jle
cmpsb
std
and
stos
clc
mov
lret
fcoms
push
xor
shlb
mov
xchg
mov
add
fsts
or
jo
push
ret
pop
and
mov
dec
dec
mov
jnp
rcrb
sbb
stos
push
clc
adc
add
ja
leave
push
jl
jmp
lods
mov
xchg
jl
rol
sub
jae
push
dec
mov
push
pop
ret
out
mov
adc
repnz
call
movsb
outsl
mov
push
sbb
fcomip
add
push
mov
cmpsb
push
fcoml
sahf
sub
test
and
jecxz
or
mov
inc
ret
jne
adc
and
sti
decl
and
pop
pop
push
rcrl
and
add
jmp
pop
xchg
xchg
enter
xor
xchg
cli
xor
jbe
and
adc
fs
stc
jge
fdivrl
jge
loope
inc
mov
mov
push
pop
adc
pop
stos
adc
or
lret
rcrb
jmp
mov
ret
mov
subb
mov
adc
jnp
repnz
sub
je
push
xor
mov
ret
xlat
daa
xchg
jne
jnp
fbstp
add
leave
lea
popl
out
mov
aam
mov
loop
in
into
or
inc
test
mov
addr16
sahf
xlat
mov
sbb
fcmove
cli
mov
popf
stos
loop
push
inc
or
jne
scas
lock
mov
shll
xchg
xor
repnz
out
push
xchg
pop
add
clc
aaa
in
mov
push
mull
lret
arpl
ret
pop
lock
push
sti
divl
int3
xchg
aaa
xchg
popa
pop
push
sub
jnp
int
popa
cli
cmc
gs
daa
lods
jmp
fimull
je
insb
jno
jb
dec
test
jmp
fsubs
cmc
out
outsb
mov
sbb
stos
sub
sbb
pop
mov
adc
xchg
fs
pop
cwtl
rol
or
arpl
in
mov
out
loop
push
aaa
pop
shrb
mov
test
mov
xchg
cwtl
mov
test
outsb
xchg
lea
mov
inc
orb
mov
scas
push
xlat
aam
or
movsb
lea
cmp
mov
shll
mov
pop
mov
push
and
mov
mov
jle
jmp
fwait
cli
scas
dec
call
pop
fstpl
mov
jne
stc
pop
cmp
jb
mov
scas
push
mov
iret
iret
int
out
mov
insl
test
and
push
lock
dec
inc
jecxz
cld
push
shll
mov
movsl
movsb
inc
in
invd
mov
es
movsl
sub
inc
mov
mov
cmp
push
xchg
push
in
dec
jno
mov
mov
movsl
std
mov
dec
cmp
or
into
cli
leave
and
adc
lock
xchg
or
push
testb
and
subl
pop
dec
mov
xchg
lods
mov
mov
cmp
xor
adc
in
sub
iret
push
cmpsl
mov
and
sbb
js
push
into
aad
icebp
adc
mov
shrl
lcall
mov
mov
push
je
mov
fcomps
mov
mov
lock
push
cmp
sub
push
xchg
out
fs
inc
mov
jmp
out
out
xor
fisubrs
cmpsb
add
ret
lcall
daa
and
lahf
sbb
in
sarl
popf
cmpsb
jle
mov
mov
std
iret
enter
dec
inc
mov
cmp
cmc
jmp
repnz
inc
or
jmp
rclb
dec
mov
jl
scas
fildll
in
popf
sbb
jno
xchg
std
mov
repnz
pop
test
movl
mov
test
fistps
dec
or
jns
pop
ss
repnz
fisubl
je
mov
scas
xchg
jmp
push
int3
xor
mov
test
roll
gs
pop
jo
jmp
dec
movsl
pop
loopne
mov
shlb
fcom
pusha
in
popf
lahf
rol
and
aaa
std
cmp
das
mov
jmp
in
cld
in
xchg
dec
das
ds
mov
cmc
aad
ret
pop
int
push
jae
inc
dec
pop
sti
leave
out
cmp
cmp
push
cmp
and
sbb
fnstenv
cmp
aaa
cs
pop
push
inc
enter
pop
fsubr
jo
nop
xor
es
mov
inc
mov
mov
jle
mov
add
dec
cli
nop
repnz
inc
pop
push
sarl
mov
mov
pop
dec
push
cmp
mov
xor
pop
cmp
shlb
push
cmc
cltd
movsl
pusha
jbe
mov
xor
pop
mov
dec
inc
add
jecxz
icebp
mov
sub
cmpl
scas
dec
adc
inc
aam
pop
imul
jge
mov
dec
xor
inc
cmp
sahf
stc
mov
lcall
inc
cwtl
pushf
xchg
mul
dec
push
cmp
jmp
push
repz
jne
inc
sarb
xchg
cwtl
push
cmp
jg
les
push
or
jge
das
addl
mov
cwtl
popa
add
add
pop
aas
testb
aad
push
clc
lret
fwait
mov
xchg
outsb
add
pop
sbb
inc
ficoml
or
test
outsb
cmp
dec
mov
enter
je
movsl
jo
jae
mov
xchg
jbe
xor
xor
mov
sbb
mov
add
aad
das
cld
jp
aad
pop
ucomiss
dec
jp
cmp
xor
popf
movsl
jl
bound
mov
xor
stos
add
imul
loopne
dec
ja
mov
in
and
cwtl
or
pop
inc
mov
call
fwait
cltd
push
fnstsw
movsb
jecxz
xchg
xor
jnp
fs
add
and
sub
outsb
jae
imul
movl
aaa
mov
popf
xor
and
adc
xchg
int
jp
jnp
dec
dec
mov
cs
icebp
lds
adc
outsl
cmp
and
popf
fistps
in
jmp
adc
xor
jb
cmpsl
dec
jns
outsl
sub
cmpsb
out
dec
pop
dec
cmp
jge
or
and
and
jae
xchg
jns
xchg
mov
mov
mov
pop
inc
mov
add
test
clc
addr16
inc
push
mov
popa
fwait
and
and
xchg
out
sub
xchg
fwait
mov
jle
mov
cmpsl
and
dec
dec
jg
xchg
dec
in
sub
or
mov
push
cmp
xchg
mov
lret
fsubr
fidivrl
sub
js
inc
and
leave
pop
in
cmp
mov
pusha
xchg
fwait
pusha
stc
mov
sbb
out
mov
das
int3
rcll
rol
push
out
jmp
inc
jge
inc
sbb
mov
adc
push
push
leave
arpl
jo
out
roll
ljmp
push
mov
pushl
clc
test
test
scas
movsl
dec
outsl
lods
popa
sbb
jne
jb
pop
pushf
movl
xor
scas
dec
jns
sub
lods
sbb
fisttpll
pop
push
sbb
test
xchg
and
das
pop
gs
mov
ret
sub
loop
or
xor
mov
pushf
inc
or
fs
ljmp
scas
adc
aam
add
imulb
xchg
je
mov
pop
or
xchg
lea
jns
outsb
push
dec
pop
sbb
cmp
scas
outsb
inc
sbb
out
loopne
scas
jmp
fsubrs
fstp
dec
pop
icebp
rcrl
mov
xchg
or
sbb
adc
mov
gs
stos
lret
xor
in
sub
and
std
test
xor
out
leave
inc
test
push
std
jo
xchg
in
mov
cmp
sub
movsb
or
aaa
xchg
xchg
pusha
mov
outsl
cli
xor
xchg
lods
and
sbb
es
pop
lock
push
xchg
pop
loopew
add
xchg
mov
xlat
leave
mov
mov
pop
test
or
jp
lock
je
fs
sub
lret
arpl
mov
data16
add
gs
clc
jle
and
xchg
xchg
enter
or
adc
aas
loopne
clc
mov
in
mov
sti
push
xchg
xchg
sub
test
cld
icebp
push
mov
or
sbb
mov
ljmp
push
bound
cmpsb
pushaw
mov
insl
lret
xchg
cmc
rclb
cmc
or
sub
inc
xor
fcmovu
scas
pop
cmp
shll
jmp
add
cld
inc
data16
xchg
sbb
movsl
cmp
lds
dec
push
dec
adc
inc
jne
jmp
setl
in
pop
jbe
mov
xor
andb
int
sub
push
push
aam
pop
push
andl
test
addr16
out
lret
or
aaa
int
imul
data16
aas
push
mov
add
int
mov
and
ljmp
subl
mov
movsb
insl
xchg
jl
push
fisttps
push
outsl
pop
fisubrl
in
xchg
std
mov
shl
mov
mov
pop
test
scas
out
faddl
lods
dec
hlt
in
inc
aam
or
dec
push
aam
adc
sbb
or
cmp
and
lret
mov
push
and
sahf
fcompl
les
add
cs
push
mov
lods
inc
push
lods
push
push
sub
repnz
cli
and
push
filds
mov
inc
repz
test
lods
js
or
cmp
icebp
cli
bound
sbb
cld
mov
int3
cmp
inc
jb
push
cld
testb
fstl
mov
xchg
stos
xor
mov
rorb
fwait
inc
mov
jp
clc
mov
pop
lods
in
rcll
nop
jecxz
iret
sub
aad
pop
ja
stos
out
add
xor
pop
mov
les
arpl
cltd
adc
es
cwtl
or
xor
cmp
pop
add
mov
mov
into
lahf
mov
ds
outsb
xchg
cs
or
stos
xchg
xchg
aaa
mov
loop
add
repz
fcomps
cmc
cli
mov
cmp
nop
fs
push
xchg
mov
cli
aaa
dec
lahf
repz
or
out
pop
jae
inc
in
stos
cmp
push
mov
push
fisubrl
cmp
mov
mov
sub
ja
jecxz
inc
jmp
adc
cmp
cmpb
aaa
loop
push
xor
lret
cmp
pop
add
jle
mov
sub
dec
push
add
testl
insl
and
push
ret
inc
jg
cmp
pop
cmpsl
xchg
ret
mov
push
test
aam
sub
xor
jo
cli
dec
icebp
sbb
nop
cmp
movsb
mov
mov
movsl
loope
lea
rorb
push
jle
cmpsb
in
test
push
lods
lock
jns
mov
xor
dec
pop
cmc
fimuls
push
sti
dec
inc
test
and
addr16
sub
test
int3
call
not
std
cmp
jne
clc
ret
jle
dec
pop
and
adc
ja
xchg
push
sbb
add
fimull
mov
test
inc
and
out
pop
shrl
xchg
sarb
push
cltd
jl
fisttpll
cld
push
dec
adc
dec
sbb
loop
mov
test
popf
lret
or
xchg
sbb
sar
dec
cmp
mov
icebp
out
mov
and
jo
cmpsb
mov
adc
lcall
lock
out
add
ss
out
ficoml
fwait
mov
arpl
push
xchg
sahf
clc
pusha
dec
stos
or
stos
adc
dec
xor
jbe
shrb
xlat
xchg
int3
ret
dec
xchg
imul
mov
fstpl
dec
inc
adc
in
pop
arpl
lds
je
insb
fbstp
push
repz
xchg
dec
lahf
add
movsb
sbb
ret
movsb
loope
mov
testb
add
ja
add
add
int
jns
mov
dec
jle
mov
and
shrb
add
or
addr16
and
pop
cmpsb
adcl
stos
fstpt
imul
fdivp
jae
stc
mov
into
push
leave
push
xor
out
cmp
mov
cmpsl
mov
or
push
lcall
fs
sub
movb
push
outsl
dec
inc
mov
icebp
test
pop
cmp
jl
mov
adc
mov
loopne
in
push
sub
fcoml
jmp
mov
gs
popa
out
jb
pop
inc
mov
lock
inc
inc
jecxz
xor
jmp
xor
ror
pop
xchg
fs
loop
sub
pop
filds
push
shl
dec
xchg
or
mov
or
mov
loope
mov
cmpsl
fbld
outsl
pop
mov
inc
mov
xchg
push
aad
cmpsb
call
jo
jae
adc
xchg
mov
mov
test
pop
popf
pop
cmp
xor
mov
lea
sbb
sub
insb
or
mov
mov
ds
sbb
stos
add
pop
sbb
lods
insl
add
push
out
dec
dec
push
cmc
dec
mov
jmp
push
cmp
rorl
stc
add
imul
sub
pushf
psubusw
dec
jecxz
pop
xorl
aaa
or
dec
repnz
mov
mov
sub
inc
ljmp
inc
cmp
pop
xchg
into
fidivrl
lahf
xor
jl
sub
jecxz
mov
xchg
gs
dec
call
scas
out
inc
iret
adcb
popf
test
jbe
ds
jp
and
int3
jp
test
or
mov
push
adc
sub
sti
push
pushf
mov
mov
test
movsb
call
addb
pop
dec
jmp
test
andb
shll
les
sub
in
pop
pop
inc
cmp
imul
loop
in
cmp
mov
iretw
addb
mov
popf
je
cld
xchg
stc
mov
jl
iret
pop
test
pop
fwait
pop
stos
imul
mov
cmc
mov
sub
push
test
mov
lahf
loope
xchg
adc
inc
lock
sbb
stc
add
call
jno
mov
inc
fimuls
mov
mov
adc
xor
mov
and
test
and
push
adc
and
inc
or
cmpsb
pusha
sub
aas
mov
adc
mov
jecxz
sarl
xlat
mov
repz
out
pop
ljmp
les
and
mov
cmpsl
adc
jecxz
scas
mov
sub
and
stc
inc
cmp
adc
sub
lea
in
fildl
sub
xor
xchg
mov
decl
pusha
aas
sbb
xchg
pop
outsl
mov
jmp
pop
jecxz
lods
std
or
mov
sti
xchg
add
outsb
out
push
pop
int
push
pop
outsl
outsb
mov
sub
popf
leave
je
mov
in
and
xchg
add
rol
ljmp
mov
dec
mov
movsb
fwait
les
pushf
xor
shrl
insl
pop
mov
outsb
pusha
sub
out
int3
pop
cmpsb
lds
pusha
jecxz
push
inc
adc
or
jbe
and
inc
imul
mov
js
mov
addr16
push
jmp
hlt
fwait
mov
mov
xor
addr16
or
sub
xchg
push
pop
in
push
fdivs
pop
cmc
xchg
or
ljmp
sbb
test
sti
xchg
jb
es
fimuls
out
xor
cmp
in
into
jb
sub
xor
mov
adc
xor
push
ss
cs
sahf
xor
add
push
xor
loop
dec
lret
mov
xchg
jge
xchg
aas
sarb
push
idiv
repz
dec
cmpsb
add
pop
pop
inc
arpl
jle
mov
mov
lods
loope
adc
xchg
ja
fimull
cmp
push
and
popa
ret
pop
push
ljmp
mov
pop
nop
dec
xor
jnp
repnz
jns
rcr
arpl
jb
fwait
mov
addr16
mov
movsl
inc
xor
and
rorl
into
xor
loopne
repz
bnd
push
sbb
ds
push
dec
popf
sbb
ret
aam
test
ror
mov
popa
mov
lea
rolb
iret
fmuls
cmpb
sbb
push
pop
cltd
popf
bound
sub
push
dec
mov
movsl
push
test
sbb
mov
mov
dec
fcompl
fimuls
xor
jbe
aam
call
mov
and
leave
and
sbb
fisubl
push
lret
or
mov
filds
filds
stos
scas
dec
xchg
push
and
push
nop
jg
inc
imulb
cltd
add
shll
popa
sarl
cmp
or
aam
sub
lock
mov
jle
mov
mov
cmp
cmp
sbb
test
dec
shr
adc
out
and
inc
sub
imul
shrl
dec
cwtl
out
xor
lcall
daa
icebp
pop
xchg
mul
std
adc
push
and
aam
jle
and
cmc
test
int
std
bound
xchg
and
adc
push
rclb
mov
pop
and
or
fsub
xchg
pop
push
aam
xor
pushf
xorb
mov
mov
jbe
mov
mov
push
xchg
add
dec
sbb
movsb
in
mov
push
mov
jmp
je
xor
jno
and
daa
enter
cwtl
pop
dec
pop
lock
nop
jno
movsb
mov
and
movsb
pop
add
icebp
dec
push
call
daa
inc
mov
cs
rcrb
nop
add
inc
xchg
popa
mov
lahf
or
fninit
sbb
loope
in
imul
jge
inc
mov
jmp
mov
pop
movsl
lcall
jge
cmp
bound
push
imul
mov
push
xchg
push
jae
sbb
dec
jge
loop
rcr
nop
gs
shr
fs
xchg
jo
mov
cmp
push
icebp
adc
pop
jp
add
mov
adc
inc
scas
and
shr
pop
push
inc
cmpsl
inc
xchg
dec
push
jno
test
mov
dec
push
fnstenv
push
mov
mov
xchg
cli
adcl
cmpb
adc
cmp
xor
jecxz
inc
dec
mov
jmp
mov
loopne
pop
jg
adc
addr16
es
inc
pop
sar
enter
lret
int3
aad
and
add
sbb
lret
mov
imul
mov
loope
push
push
pop
aaa
shl
cmp
test
jmp
mov
arpl
push
xlat
gs
jge
loopne
mov
les
or
insl
jne
insl
popa
test
popa
xchg
jno
mov
dec
mov
test
xchg
cltd
and
xchg
pop
sbb
loop
pop
scas
mov
push
mov
xor
cmp
lahf
sub
xchg
push
movsl
movsl
movl
filds
in
push
data16
nop
jmp
stos
xor
cmp
mov
fadds
or
xchg
addr16
jle
cmp
or
push
lret
cld
sub
aad
jno
jbe
int
subb
out
popf
push
pop
inc
aaa
or
fdivr
in
pop
jmp
lods
push
or
packsswb
movsb
pop
and
push
dec
xor
out
aad
shlb
das
xlat
out
ds
push
xchg
lods
inc
fidivs
xchg
movzbl
lcall
enter
cs
fwait
pop
dec
mov
push
sbb
mov
mov
mull
mov
sarl
je
add
addr16
or
add
cmc
xor
push
xchg
fnstcw
dec
add
dec
pop
xor
xchg
hlt
pop
jo
sbb
aad
test
add
das
mov
jnp
sbbb
pop
mov
mov
jnp
or
inc
and
sahf
into
nop
sbb
inc
sarl
inc
ret
ja
jg
mov
mov
mov
fstpt
aad
aam
mov
js
and
mov
fwait
das
push
mov
jae
in
mov
inc
push
dec
add
xor
stc
repz
jns
adc
jbe
sbb
dec
pop
int3
jle
push
ljmp
call
or
test
xor
jle
loope
aad
or
fisubrs
mov
pop
cwtl
sub
push
imul
inc
nop
and
out
lcall
mov
inc
mov
repnz
pop
mov
or
lcall
sar
test
cmc
sar
mov
inc
es
pop
pop
dec
xchg
mov
fbld
and
ret
jmp
call
jg
mov
inc
sbb
push
outsb
jecxz
sahf
pop
lret
vfnmsub231ss
loopne
push
xlat
int3
inc
imul
icebp
dec
iret
xchg
cmpsb
clc
stc
mov
cwtl
movsb
jno
xor
push
push
and
mov
pop
nop
or
mov
xchg
adcb
inc
lcall
fdivrs
dec
and
mov
mov
stos
jae
pop
out
or
jns
cmpsl
push
add
ret
mov
mul
or
xchg
mov
inc
mov
sbb
push
sub
cltd
dec
xchg
mov
nop
ljmp
rclb
push
outsl
aad
repz
je
fcmovb
xchg
jno
sarb
pop
dec
prefetch
dec
ret
add
jmp
mov
sbb
cld
imul
outsl
sahf
sarl
dec
leave
adc
pop
push
cmp
cmp
stos
rorb
xchg
or
cmp
mov
leavew
pop
xor
enter
lods
xor
fsubl
push
xor
je
fisubs
adc
cmp
dec
adc
mov
out
jns
mull
and
cwtl
lret
sub
add
lock
loopne
in
pop
jo
fwait
mov
push
int3
stc
sti
hlt
mov
nop
and
mov
sbb
cmp
lods
or
inc
pusha
cld
inc
filds
push
jo
faddl
cmpsl
mov
dec
pop
mov
loopne
fadd
vmovups
push
pop
dec
sbb
sbb
ss
adcl
mov
repnz
aam
sub
sar
sbbb
insl
mov
aam
nop
sbb
xchg
mov
ja
ja
mov
push
mov
icebp
mov
jge
inc
fstps
jge
and
adcl
jno
pop
fwait
xchg
or
ds
xor
and
lret
sahf
or
xchg
push
loop
in
xchg
mov
outsb
cmp
mov
mov
adc
inc
ljmp
ret
jle
scas
cmp
inc
aad
mov
xor
inc
or
jmp
nop
outsl
jecxz
rorl
push
push
push
cmp
insb
sarb
sbb
frstor
cmp
ja
inc
inc
insl
das
push
cmp
imul
daa
xor
jbe
xchg
inc
cmc
outsb
jp
adc
mov
test
push
mov
add
add
sbb
jae
loope
xchg
jb
gs
mov
aaa
add
cmp
loopne
sbbl
dec
mov
orl
or
xchg
jno
push
jle
and
mov
scas
jp
pop
fstp
adc
es
jle
es
pop
jle
jecxz
aad
cmpsb
add
fsubr
pop
gs
in
push
in
and
pop
xor
insb
in
lret
dec
mov
pop
sub
inc
test
adc
mov
repz
aam
insl
popf
xchg
jne
mov
out
das
xchg
ss
loope
add
mov
mov
ljmp
call
cli
jmp
mov
test
imul
stos
xlat
cmp
cmp
test
mov
xchg
lods
add
leave
icebp
mov
test
lahf
sub
addl
cmpsl
sbb
mov
inc
push
test
cli
inc
push
sarl
sbb
pop
xor
xor
pop
xor
roll
inc
inc
adc
inc
loope
push
int3
push
sbb
into
pop
mov
xchg
dec
icebp
push
outsl
test
push
outsb
pop
mov
and
mov
xor
xchg
add
pop
fisttpll
mov
loop
sbb
jge
ds
les
pop
in
push
xlat
push
movsb
push
fnstcw
jo
jl
mov
lds
icebp
outsl
sub
int
fisubrs
adc
rorb
jns
imul
or
lahf
cwtl
loope
sbb
mov
inc
subl
shll
push
cmpsb
fs
cwtl
cmp
inc
xchg
insl
add
or
cmp
xchg
out
insb
std
dec
movsb
xchg
loope
cld
push
cmp
lods
test
fcomps
insb
out
mov
dec
daa
sub
loope
ret
stc
push
jbe
dec
sbb
stc
stc
inc
xchg
insb
or
add
push
adc
test
enter
rorl
sub
pop
loopne
mov
add
mov
adcb
dec
mov
loope
cwtl
loope
sbb
adc
iret
loopne
test
add
xchg
out
ret
xor
lea
xchg
popa
mov
inc
push
sahf
inc
dec
fidivl
dec
xchg
sbb
mov
iret
test
inc
push
or
mov
adc
inc
fwait
shrl
add
lret
or
cmp
and
ret
inc
inc
in
ret
mov
xor
inc
mov
add
sub
and
push
mov
jp
repnz
imul
ret
xor
enter
sbb
push
scas
repnz
js
loope
data16
jmp
push
aas
outsl
inc
sbb
push
andps
push
dec
jle
add
pop
pop
lock
movsl
mov
lds
jb
lret
adc
xor
sub
dec
ret
pop
mov
pop
xchg
fstpl
cld
push
mov
test
test
shlb
lock
shl
cmp
dec
loope
mov
push
repnz
cmp
pushf
pop
jo
inc
sbb
mov
pushl
inc
xor
fwait
xchg
jmp
cmpsl
xlat
shr
test
mov
stos
push
jns
rcl
xorl
cs
jnp
sbb
jae
push
adc
sbb
push
hlt
ljmp
mov
out
push
clc
test
and
mov
scas
daa
scas
adc
mov
int3
popa
std
push
xchg
or
xor
jno
dec
das
pop
xor
fnstcw
mov
inc
cmp
ret
add
pusha
sbb
sub
test
xchg
cli
scas
jo
mov
push
mov
adc
mov
fistps
push
mov
xchg
lea
xchg
mov
pop
mov
sub
in
add
inc
push
imul
and
sub
pop
jmp
jmp
push
mov
mov
lds
xchg
sbb
pop
add
arpl
xchg
and
test
icebp
imul
aad
xchg
and
xchg
call
adcl
sbb
mov
pop
mov
nop
adc
dec
xchg
cld
ljmp
in
push
xchg
lret
popa
fsubrp
popf
ror
or
loopne
cld
cmp
pop
xchg
daa
popa
inc
or
xor
xor
ficoml
outsb
loopne
cmp
xchg
repz
xchg
xchg
cmp
or
push
fucomp
add
fwait
sub
dec
adc
and
dec
xchg
out
lods
sub
ss
cld
popf
in
jmp
lock
pusha
sbb
jg
js
ret
cmp
adc
inc
mov
mov
hlt
sbb
insb
inc
stos
push
lahf
aaa
push
les
pop
push
inc
popa
sub
dec
jnp
push
sbb
pop
inc
push
enter
jge
inc
sbb
push
sti
out
cmp
testl
ficompl
outsl
sub
sub
data16
jle,pt
push
mov
cld
dec
or
aad
pusha
sub
lret
lret
push
xor
sarb
shrb
leave
fnstenv
dec
dec
out
xlat
cmp
ja
sub
ret
cmpsl
jae
mov
orl
js
push
or
sbb
out
dec
dec
arpl
cmp
movsl
inc
fcmovu
loop
dec
push
adc
enter
and
mov
popf
cmc
lea
cld
push
loopne
cmpsl
pop
add
dec
jo
pop
je
inc
stos
call
push
pop
aas
mov
lea
js
or
push
lds
push
imulb
jno
mov
enter
ljmp
xchg
gs
loopne
movsl
inc
enter
add
insl
xchg
mov
xchg
mov
imul
lock
lods
sahf
sti
or
mov
insl
fidivrs
jecxz
cmc
orl
aam
ljmp
adc
into
pop
pushf
jecxz
sub
cld
xchg
pop
sbb
sbb
xor
sub
cli
js
test
or
mov
lods
in
lods
movsl
cwtl
mov
sbb
push
push
pop
sub
push
test
outsb
dec
test
rcr
aas
fidivrl
repz
insb
pushf
pop
test
es
shlb
jmp
jp
lods
in
mov
lea
cmp
sbb
fsubrl
xor
and
ret
jns
mov
ds
pop
js
mov
nop
and
adc
outsl
loopne
pusha
scas
add
dec
cld
mov
data16
gs
mov
or
xchg
fs
or
es
movsl
nop
addr16
adc
shl
xchg
out
and
pushf
repnz
xor
inc
aas
js
into
lock
repnz
je
inc
ds
insb
and
mov
cli
xor
sub
das
lahf
in
in
into
bound
sub
mov
mov
int
arpl
jp
cmp
daa
daa
incl
mov
or
pop
flds
sbb
iret
ret
loop
add
and
mov
inc
cmc
cmpsb
and
es
cs
ja
pop
in
jno
sbb
mov
les
push
fldt
mov
insl
sub
lods
jmp
int
push
dec
push
je
or
mov
stc
dec
mov
das
popf
mov
sbb
mov
cmp
xchg
mov
pop
push
adc
dec
sub
dec
movsb
inc
push
cmp
and
push
cmpl
inc
lret
pop
cmp
jbe
dec
repnz
rorb
mov
mov
and
or
arpl
rorb
fwait
jmp
icebp
sbb
cwtl
and
push
outsl
inc
adc
pop
mov
jns
bound
sbb
je
cltd
jae
insl
inc
pop
mov
imul
repz
insb
ljmp
call
or
jbe
fisubl
iret
stc
inc
push
fnstenv
pop
sbb
sbb
xchg
icebp
mov
jl
jp
fstp
push
call
loopne
add
xchg
dec
xchg
int3
pop
lea
lretw
gs
popf
cwtl
adc
popl
dec
mov
vdivsd
dec
push
push
insb
push
xchg
mov
pop
rcrb
inc
dec
insb
mov
jg
inc
xor
push
pusha
xor
xchg
int3
lods
or
rorb
sub
push
sub
add
mov
rcll
out
out
mov
fisttpl
test
cli
xchg
lret
mov
es
icebp
push
mov
and
out
push
add
sub
outsl
je
neg
pop
or
dec
dec
cli
stos
loopne
int
addb
roll
pushf
cmp
cld
cmp
sub
aam
pop
dec
sub
popa
mov
loopne
ficomps
stc
mov
push
cmp
out
fsub
nop
jbe
aaa
jmp
dec
mov
loope
or
cmpsl
mov
cmp
inc
decb
sbb
ror
pop
je
out
ja
lods
jns,pn
add
mov
xlat
repz
mov
mov
push
arpl
xchg
cmpsl
sbb
mov
xor
or
cmpsb
mov
jbe
leave
daa
dec
sbb
pop
jl
das
insb
push
imul
in
mov
insl
cld
push
inc
pop
xchg
addr16
jge
adc
or
xchg
in
mov
add
mov
jecxz
inc
jl
jg
mov
cld
mov
jo
test
add
and
inc
movsl
dec
out
test
sti
ss
jp
call
add
sub
sahf
rcr
testl
lods
push
adc
dec
xorl
out
iret
lret
pushf
dec
xchg
pop
xor
pop
mov
xchg
mov
and
inc
imul
mov
adc
adc
and
gs
inc
push
cmp
pop
in
andb
pop
lock
pop
sbb
sub
dec
cmp
mov
addb
icebp
xor
aad
lock
mov
pop
nopl
xchg
push
inc
sbb
stc
subl
jp
push
mov
les
or
notl
movhps
push
je
mov
imul
mov
data16
mov
adc
popf
or
nop
negb
ret
sahf
fwait
incl
and
jns
mov
xchg
adc
shl
adc
gs
sbb
shrb
cli
test
aaa
xor
int
and
rcrl
das
pusha
sarb
fstl
push
lea
mov
lds
mov
pop
adc
sbb
mov
and
in
cmpsb
or
adc
sbb
adc
cmpl
jge
xor
mov
push
or
loop
jecxz
mov
aaa
movsb
mov
jge
mov
imul
inc
adcb
inc
leave
sarb
dec
push
and
pusha
sub
sahf
aaa
in
mov
fscale
mov
dec
popf
stos
fiaddl
jecxz
stc
repnz
test
and
daa
fldt
mov
stos
out
cmp
in
cmp
jge
int
fiadds
dec
xchg
out
in
mov
jl
pop
lock
das
loopne
jp
imul
movsb
mov
lock
fidivrs
imul
jno
hlt
stos
aad
fwait
and
mov
dec
cmpsl
and
aam
loope
cmc
or
js
jle
test
hlt
sub
pop
loopne
scas
and
arpl
hlt
or
jae
test
and
xchg
xor
add
lret
jp
jg
pop
dec
mov
imul
scas
xchg
test
cmpsl
sbb
push
sbb
cmc
pop
test
mov
mov
mov
adc
mov
fcmovne
sub
pop
cli
inc
adc
push
lds
jmp
repnz
movsb
sbb
jo
mov
ljmp
das
lods
sbb
das
mov
or
pop
mov
mov
jl
mov
sbb
enter
push
repz
dec
or
stc
or
pop
xchg
pop
scas
lahf
mov
pop
shrb
lds
cli
inc
lea
cmc
add
sub
out
inc
adc
out
lret
aas
push
iret
jb
cmpsl
mov
xlat
out
fnsave
pop
pop
lock
jmp
mov
push
dec
cmp
cmp
pop
push
pop
sub
sbb
push
push
jb
cwtd
int
lahf
es
cli
pop
push
mov
out
cmpsl
push
cli
push
inc
dec
dec
clc
or
jmp
out
es
jmp
pop
xor
or
pushf
adc
xor
mov
lds
add
rcrb
xchg
clc
insl
dec
shlb
mov
adc
mov
loope
enter
cwtl
inc
xor
stos
fcompl
popf
subl
inc
add
fimull
arpl
jecxz
aaa
jge
or
add
add
xchg
xchg
sub
jg
jmp
mov
dec
es
aam
mov
or
movsb
mov
and
loopne
xchg
cmp
push
add
inc
aad
test
lahf
add
leave
xchg
test
nop
pop
lds
pop
int
mov
ss
rcrb
int3
inc
movsb
add
andl
lret
cmc
cmp
aas
inc
or
jle
insl
daa
push
pop
pop
or
jecxz
pop
jmp
lret
aas
orl
pop
mov
lea
and
js
xchg
insl
gs
mov
imul
push
in
ja
fwait
lds
je
adc
lahf
sbb
fisttpl
sti
mov
cs
shlb
enter
lea
xchg
jbe
cmp
aad
mov
mov
dec
mov
sub
mov
pop
jno
dec
lret
jb
push
icebp
scas
jp
sub
mov
xor
mov
lahf
in
xor
sbb
addl
call
loop
mov
lret
sub
add
test
test
dec
fnsave
dec
jg
rcll
sub
jb
fs
in
lea
lds
clc
dec
xchg
adc
xor
mov
pop
pop
sub
mov
xor
inc
es
dec
vaddsd
pcmpeqd
loop
sti
scas
in
pop
cmp
inc
push
pop
pusha
mov
mov
stos
mov
sbb
pop
loop
in
insb
fdivrl
mov
stos
test
dec
lds
cwtl
or
jo
gs
js
pop
cmpsl
enter
pop
xchg
icebp
jns
out
mov
cmp
pop
mov
daa
xor
aad
insl
push
pop
movsl
inc
inc
push
lret
xor
cmp
fs
push
cmp
or
out
rcrl
pop
push
sbb
jb
movsl
sbb
xchg
lcall
sbb
arpl
jb
js
pusha
call
xor
jle
cmp
nop
and
insb
inc
cmpsl
jae
push
lahf
mov
out
and
adc
out
pop
call
jmp
adc
es
lock
aam
fsubrl
gs
push
pop
int
test
iret
clc
adc
aaa
aam
aas
outsl
inc
xorb
sub
daa
enter
iret
jbe
xor
jne
lea
push
ja
mov
pop
push
fmul
xlat
loop
popf
jge
push
cli
rol
or
cmpsb
xorb
inc
ljmp
std
mov
mov
push
pop
jmp
sbb
mov
loop
inc
daa
push
mov
lods
es
mov
jbe
test
xchg
nop
lahf
sub
daa
lods
insl
jnp
das
shl
iret
xchg
cmpsb
or
jmp
mov
das
insb
lcall
idivl
cmp
gs
inc
mov
loope
testl
into
call
int3
imul
sub
xchg
push
mov
testl
jb
je
lock
ds
inc
adc
in
mov
jb
fadd
mov
sbb
push
push
xchg
arpl
jge
add
shll
lahf
fisubs
scas
jbe
pop
push
mov
pop
or
bswap
pop
out
test
push
mov
clc
loopne
sbb
xchg
repz
pop
mov
xchg
aad
jo
les
xor
ss
rorl
ljmp
pop
jmp
lds
mov
jp
adc
lret
mov
xchg
sub
mov
pop
xor
xor
pop
sbb
and
push
imul
push
push
push
es
pop
xor
jmp
push
sbb
push
inc
pop
aad
lods
mov
lahf
ret
daa
hlt
std
mov
mov
adcb
out
mov
cmp
add
jno
fisubrs
mov
test
add
aas
push
sub
outsl
dec
adc
sub
pop
decb
cmp
xchg
dec
mov
repz
nop
test
andb
sub
xorb
cmp
lock
inc
push
adc
test
mov
shlb
pop
adc
std
mov
insl
mov
dec
or
xchg
pop
insl
mov
sti
cwtl
mov
divl
dec
movsl
stos
pop
xchg
adc
and
mov
dec
lods
into
cmpsl
fdivrs
jae
in
sti
fwait
mov
add
jg
popf
scas
push
leave
mov
in
enter
aad
iret
mov
push
add
lret
dec
call
std
xchg
and
int
les
ds
mov
mov
daa
repnz
pop
push
mov
idivl
dec
ret
cmp
je
call
shlb
int
movsb
adcl
incl
mov
cmp
aad
mov
cmp
mov
out
bound
mov
sub
or
cld
push
inc
xlat
or
das
push
mov
xchg
repnz
inc
ss
out
xor
std
xor
inc
pop
mov
jbe
mov
add
dec
stc
mov
ds
pop
mov
inc
and
stc
dec
sbb
stos
pause
or
mov
jbe
sub
pop
inc
xor
cli
mov
pop
xchg
sbb
leave
scas
cmp
xchg
and
xor
push
xchg
mov
mov
cmpsb
adc
xchg
call
xor
jge
jle
aam
and
or
filds
mov
xchg
in
lods
add
mov
mov
sub
xchg
and
popa
repz
and
push
push
fmull
sti
xchg
or
not
fwait
out
outsb
adc
and
shll
jo
fwait
es
lahf
add
add
jnp
sbb
sbb
rolb
jmp
sub
in
hlt
lahf
leave
jl
xchg
fildll
pushf
lock
cli
sbb
mov
or
pop
mov
add
push
das
lds
pop
stos
scas
pop
les
push
test
adcb
jge
data16
repnz
push
popa
push
dec
or
add
shlb
fisttpl
push
rolb
push
int
inc
loope
mov
shl
dec
mov
xchg
mov
ret
fistps
dec
lret
mov
cwtl
cmc
lcall
in
scas
daa
js
sti
into
pusha
cmp
mov
fs
push
in
leave
les
mov
jg
sbb
int3
xchg
shll
popa
jo
cs
shll
sarb
fldlg2
xchg
sub
mov
outsl
push
fs
xor
or
imul
lock
sub
hlt
dec
int
std
into
cwtl
sub
mov
and
shlb
out
jg
test
addr16
pop
rclb
in
fst
adc
sbb
movsb
mov
subb
push
jae
push
imul
mov
inc
out
push
add
ss
xchg
sbb
pushf
push
loope
mov
mov
in
inc
scas
xor
dec
iret
cmc
cmp
mov
jnp
dec
stos
dec
int3
shrb
dec
mov
inc
sub
lea
cld
fistpl
js
arpl
ret
test
pop
insb
dec
push
pop
add
xor
sub
insb
roll
mov
jmp
jg
push
addb
pop
fistl
cltd
dec
nop
dec
bound
jl
daa
sahf
mov
push
das
mov
repz
inc
out
cmpsb
addr16
pushf
aam
cmpsb
test
jl
xlat
repz
ret
mov
ds
pshufw
fistps
mov
and
sub
ficomps
push
mov
lods
xor
pop
jmp
xor
fidivrl
fldenv
and
insl
pop
pop
push
lahf
out
negl
push
stos
imul
in
adc
sub
adc
dec
sbb
adc
adc
push
js
pop
outsb
dec
cmp
cmp
stc
bound
or
mov
cmp
push
ficompl
jae
jbe
outsl
and
push
jg
aas
and
sbb
fildll
insl
test
aam
cltd
jo
or
xchg
mov
or
push
rcrl
test
mov
icebp
xor
popa
sbb
xchg
jl
mov
adc
subb
xor
inc
aam
icebp
fs
lods
adc
pop
ljmp
lods
in
dec
mov
lret
imul
push
and
add
dec
insb
dec
mov
call
pop
cwtl
dec
ds
popf
stc
popa
add
cmp
lods
xor
xchg
cwtl
jmp
mov
inc
mov
inc
pushf
xor
add
out
in
fwait
xchg
outsb
popa
jg
sub
cmp
and
adc
mov
push
sbb
mov
mov
popf
mov
rcrb
sbb
pop
adc
outsl
cmpsl
lods
imul
cmp
cmp
pop
mov
xor
jle
pushf
inc
dec
std
jle
ficoms
mov
xor
mov
inc
pop
xor
pop
and
aad
dec
dec
ds
frstor
or
adc
enter
lahf
mov
jo
push
or
lret
dec
cwtl
mov
out
call
idivb
mov
or
cmp
icebp
mov
add
scas
mov
sbb
jmp
imul
mov
popa
push
xor
sbb
adc
cmp
jge
push
adc
xor
pushf
and
dec
sub
pop
inc
sbb
xor
mov
mov
inc
push
mov
scas
outsb
filds
dec
jecxz
jb
pop
xor
cmpsl
add
dec
push
roll
sahf
imul
ficomps
outsb
adc
lahf
das
xchg
fs
es
lret
sub
mov
mov
jmp
sbb
mov
push
or
sbb
jge
in
rolb
hlt
nop
rolb
rcl
fsubr
out
xor
dec
or
dec
out
loope
das
in
jnp
int3
cmp
rorl
mov
xchg
push
or
inc
neg
and
outsb
pusha
lods
pushf
adc
push
mov
int3
dec
stc
lcall
xchg
and
mov
fabs
sbb
mov
jmp
in
push
or
ffree
insb
add
jg
pop
das
cs
add
sbb
and
sub
ljmp
inc
jg
push
lahf
ds
inc
jmp
imul
out
push
flds
cmpsb
shl
icebp
fsubrl
cld
adc
mov
pop
lahf
jb
sbb
push
mov
xchg
addl
jns
adc
pusha
inc
or
aad
movsl
out
pop
cmp
test
out
fidivrl
shrb
adc
lods
pop
aaa
sbb
bnd
mov
ficoml
test
or
adc
imul
jo
add
or
fdivs
pop
mov
or
mov
mov
mov
lea
cmp
sbb
mov
enter
fs
das
sarb
jbe
xor
add
and
xor
mov
cmpsl
mov
stos
mov
mov
fs
aam
les
out
and
repnz
or
dec
adc
imul
jle
lcall
jae
mov
movsb
aaa
test
inc
xor
add
or
xor
popa
sbb
fstpl
fidivrl
mov
dec
inc
lds
dec
ret
lret
xor
cmpsl
sbbb
pop
in
sbb
addr16
push
ds
lret
pop
mov
push
sub
dec
push
pop
daa
das
sbb
test
and
pop
add
test
jp
loope
xor
mov
sbb
xor
filds
pop
shl
gs
mov
pop
push
test
jmp
insl
out
ret
sbb
lret
je
stc
cli
and
xor
jae
sti
jb
push
push
rclb
call
insb
adcb
inc
and
or
mov
idivl
pop
mov
out
mov
test
inc
pop
pop
pushf
jg
je
mov
or
jmp
loope
mov
xchg
jbe
icebp
ss
je
cmp
push
mov
xchg
pop
inc
fcompl
out
lret
out
test
loop
xchg
inc
cmpsl
mov
movsl
or
inc
data16
jecxz
ret
push
xchg
imul
jmp
xchg
js
int
cltd
out
mov
or
fcmovnb
aad
movsl
dec
xchg
sub
aad
or
sahf
or
push
out
sbb
add
pop
add
hlt
repz
or
mov
mov
xor
mov
mov
subb
dec
scas
out
dec
out
daa
ja
es
in
jp
mov
loopne
inc
stos
push
or
arpl
mov
push
xor
xchg
xchg
or
imul
pop
mov
arpl
mov
mull
jge
neg
lods
dec
cmp
js
stc
xlat
mov
and
idivl
stos
aam
cmp
mov
daa
push
and
aad
dec
test
out
pop
or
lods
enter
inc
jae
mov
stos
in
das
lret
sbb
testl
loop
bound
xchg
aas
or
lret
icebp
lods
sbb
out
insb
ljmp
mov
pushf
aam
std
out
pop
lea
fnsave
stos
rorb
cmpsb
and
inc
into
jne
addr16
orb
xchg
mov
push
mov
push
cmpsl
shl
dec
sti
mov
jbe
dec
loop
setae
jge
inc
and
inc
xor
je
fst
ss
nop
lea
push
mov
cmp
xlat
sub
imul
daa
sbb
pop
pop
repnz
or
leave
outsb
mov
aas
mov
pop
out
and
out
xchg
lret
ss
icebp
mov
cmp
scas
sub
push
mov
js
push
es
adc
int
jbe
sahf
in
adc
xlat
pop
add
data16
test
dec
dec
push
xor
jecxz
xor
scas
jge
mov
rol
nop
imul
daa
fldcw
test
pop
or
js
ret
lds
xchg
ja
xchg
mov
or
cmpsb
stc
das
pop
sti
movsl
mov
lods
movsl
in
nop
jg
jmp
xor
pop
push
lea
sahf
jg
dec
arpl
popa
ret
cld
push
jge
xchg
dec
aam
pop
repnz
out
cmp
mov
mov
das
and
mov
push
popa
cmc
mov
push
das
inc
outsb
out
stos
mov
xchg
lds
or
mov
or
pop
cmp
cmp
sub
repz
mov
stos
iret
add
add
adc
into
into
js
insl
dec
and
loopne
pop
test
jmp
sbb
lds
adc
and
xchg
sbb
cmp
inc
jbe
in
pop
jge
cmp
inc
sbb
clc
xor
adcl
cli
pusha
cmp
push
add
mov
fidivs
mov
mov
stos
fidivrl
insb
call
push
adc
adc
mov
dec
inc
je
out
fwait
stos
arpl
mov
push
adc
mov
jp
es
bound
inc
loopne
lahf
mov
xchg
sub
add
jp
and
push
hlt
pop
add
push
js
ret
cld
into
mov
jmp
shufps
aas
pop
lahf
jg
pop
sbb
cmp
mov
scas
lock
leave
in
scas
push
cmpsb
mov
jb
dec
cmpsl
cltd
pop
iret
lods
aad
cmpsl
enter
jg
ljmp
sbb
ret
repz
fbld
shr
aas
mov
scas
push
test
ljmp
dec
loopne
mov
and
xchg
bound
jae
cmp
inc
popf
adc
shlb
daa
test
pushf
xor
inc
push
push
fimull
ret
aad
dec
ss
imul
xchg
sbb
pop
push
sub
inc
pop
mov
repnz
inc
lret
mov
rcrl
jb
sbb
lret
mov
xchg
std
xchg
out
and
int
sub
pop
xlat
dec
pop
push
pop
xchg
or
or
mov
testb
xchg
into
sbb
or
inc
push
repnz
es
add
dec
repnz
cmp
test
adc
mov
and
mov
jle,pn
add
popa
out
icebp
jmp
shrl
fidivrs
dec
inc
es
pop
lret
test
lds
mov
das
int
xchg
mov
jnp
test
addl
aaa
shl
clc
jl
mov
mov
sub
mov
popf
sub
je
imul
sub
xchg
adc
mov
add
test
mov
inc
lock
sbb
sub
call
pushl
add
add
xor
orl
cs
dec
sub
inc
push
je
jbe
aam
enter
cmp
cmpsb
rcr
push
cmpsl
jmp
pushf
add
mov
fisubrl
loope
pop
jae
rep
sbb
pop
ja
mov
mov
cmp
xor
cltd
es
inc
add
pushf
es
mov
das
js
xchg
mov
adc
js
jmp
data16
lcall
cli
repz
add
dec
cmp
lret
adc
das
xor
xor
xor
stos
xchg
dec
and
jno
repz
out
push
inc
lcall
and
adc
ljmp
and
inc
rclb
pop
movsb
mov
or
xchg
pop
fcmovnu
xchg
scas
dec
dec
mov
mov
inc
jbe
jbe
sub
mov
or
and
and
sbb
xor
sbb
sub
in
mov
sbb
lcall
sub
or
das
out
xchg
adc
mov
cld
or
shrl
movsl
ss
or
loop
addl
mov
movsb
adc
sti
shlb
xor
lret
std
mov
pop
mov
std
xchg
adc
movsl
mov
loop
pop
or
icebp
adc
loop
add
push
sbb
xor
fidivrl
or
cmc
xor
jl
andl
hlt
xchg
cli
mov
lods
or
pop
mov
nop
insl
aam
loope
mov
aam
cmc
aaa
mov
jecxz
mov
and
mov
push
jno
test
shll
rcrl
and
fadds
add
sub
add
xchg
clc
pop
setge
mov
or
mov
xor
in
pop
and
xor
or
aaa
xchg
mov
mov
mov
add
imull
sarb
in
xchg
jb
mov
gs
pushf
call
cwtl
test
enter
test
sar
push
in
and
mov
mov
test
xchg
fwait
sbb
sar
shrl
insl
ja
jecxz
ret
and
icebp
ja
pop
sarl
jmp
xchg
sahf
stc
pushf
pop
rdpmc
mov
pop
int
jo
pop
test
inc
mov
jle
inc
pop
adc
adc
dec
mov
mov
in
inc
aas
add
call
popa
mulb
mov
mov
xchg
jmp
std
jmp
inc
mov
mov
mov
xchg
mov
test
add
mov
cmp
not
mov
cmp
into
add
jno
sub
movsb
and
inc
pop
add
adcb
lret
ljmp
adc
mov
sub
jb
mov
aam
ds
mov
stos
cld
sub
xor
or
inc
jecxz
mov
xchg
std
in
fsub
ljmp
push
and
enter
mov
xlat
push
cmpsl
imul
aam
imul
push
imul
cmp
arpl
or
push
pop
xchg
test
clc
dec
cmp
adcl
mov
popf
lcall
je
cmpsl
rcrl
icebp
cmpsb
pcmpeqw
dec
insl
xor
int3
push
sub
test
and
ds
iret
xor
xchg
stos
xor
push
xor
mov
mov
lcall
jo
ficoml
sub
lods
ss
sub
movsb
out
mov
cld
mov
fucomip
adc
sub
adc
cmpsb
pop
xlat
adc
sbb
pop
lret
sub
add
mov
add
dec
sub
test
gs
mov
call
dec
test
mov
sbb
jbe
cmp
popf
lods
sbb
mov
cmp
pusha
cmp
ss
data16
loopne
adc
jbe
push
sbb
rol
adc
and
xchg
ret
loop
clc
push
add
xor
scas
je
mov
cld
inc
roll
or
lahf
scas
leave
outsb
fs
mov
sti
imul
and
insl
loopne
test
pop
lds
pop
stos
sub
int
add
test
push
xchg
ja
and
jge
aas
jp
pop
mov
aad
push
mov
ret
jbe
cmp
adc
cmpsl
in
lahf
cli
mov
cmp
or
shrl
inc
mov
lret
sbb
jno
pop
ljmp
fyl2xp1
sahf
loopne
push
faddl
addl
mov
inc
ljmp
push
repz
mov
dec
sub
ret
fsubl
mov
lods
divb
jp
loopne
push
andl
shlb
es
notb
call
jge
fnstsw
dec
bts
icebp
mov
dec
aaa
mov
pop
adc
push
pusha
roll
fs
xchg
mov
jo
popf
xchg
jl
rol
sti
sbbb
dec
scas
mov
sbb
pop
enter
dec
mov
jns
insl
lcall
scas
pop
sub
add
js
in
int
xchg
loope
popf
into
int
adc
mov
std
and
addr16
xor
ss
ret
pop
dec
dec
push
jecxz
testl
outsl
xchg
pop
int
or
inc
push
sbb
in
pop
inc
jmp
and
jp
in
jecxz
repnz
push
fisubrs
movsl
inc
into
in
mov
imul
lds
repz
add
xchg
cwtl
xchg
lock
fadd
xor
adc
jp
mov
sub
std
inc
pusha
jle
sbbb
or
lods
jb
test
add
inc
ss
cmp
sbb
mov
or
test
mov
jne
test
mov
add
add
imul
bound
or
scas
mov
and
pop
xlat
lea
push
sbb
or
xchg
insl
push
add
pop
out
out
cmp
sbb
cld
xor
repnz
jle
mov
jl
andl
test
pop
and
and
out
push
mov
and
inc
xchg
subb
cmp
jae
adc
mov
inc
lret
cld
jecxz
insl
adc
xor
std
mov
sahf
sub
xor
out
push
faddl
aad
pop
xor
test
jne
xorb
cmp
sbb
pop
fsts
ds
in
and
sub
jmp
adc
idiv
mov
rorl
inc
scas
hlt
imul
inc
and
bound
stos
adc
nop
hlt
js
fs
jne
test
xchg
or
bound
test
daa
movsb
mov
frndint
popf
inc
pushf
push
push
mov
aad
xor
inc
daa
out
int
mov
cli
dec
rcll
sbb
dec
and
ss
pop
aam
movsb
cmp
cmp
icebp
cmp
lcall
pop
fbstp
pop
mov
fdivrl
pushf
hlt
stos
mov
mov
pop
pop
repz
push
xor
adc
inc
mov
or
jl
test
fidivrs
in
imul
gs
cmp
xlat
scas
sbb
cmp
pushf
adc
jmp
cmp
dec
rcrl
adc
loop
repnz
push
fwait
jmp
ret
mov
jp
fstpl
and
mov
adc
xchg
je
push
movb
xchg
out
bound
in
out
adc
sbb
lret
aas
into
mov
or
sbb
mov
mov
rolb
push
mov
loop
lock
add
xchg
ret
rorb
hlt
dec
xor
sbb
jmp
dec
jmp
mov
mov
rorl
ss
shl
mov
xor
stos
xchg
ljmp
push
rcrl
sbb
adc
rcll
push
mov
orl
scas
test
inc
negl
xchg
lea
mov
imul
pop
adc
pop
push
push
pop
sub
push
xchg
outsl
adc
lea
jl
ret
scas
test
cmp
mov
test
loopne
test
or
insl
mov
xchg
loope
fwait
popa
fldcw
loop
in
arpl
sbb
or
jmp
ficompl
push
inc
in
push
cli
das
std
inc
into
mov
and
sub
popf
push
cmp
pop
push
aad
out
lock
xor
add
cmpsl
cmp
das
ss
sbb
call
jb
imul
cmp
imul
daa
mov
in
call
sub
dec
aaa
pop
leave
push
and
pop
xchg
jns
mov
push
cmp
outsl
sahf
jg
cs
mov
mov
and
in
inc
adc
push
jnp
jne
test
dec
jl
mov
andb
xchg
hlt
sbb
push
rorl
lods
out
mov
xchg
xchg
jnp
outsl
insb
fcom
rcrb
jp
repnz
mov
jecxz
dec
test
xchg
bound
fsubrl
push
and
add
repnz
mov
icebp
fnstcw
xchg
add
mov
fnstsw
pop
adc
mov
test
sbb
ret
stc
vmwrite
inc
xor
sbb
mov
jmp
xchg
addr16
stc
jecxz
ret
lcall
out
lahf
fdivr
insl
mul
sbb
mov
mov
jmp
mov
pop
icebp
cmc
imul
sarl
mov
add
xor
dec
add
add
xor
or
and
mov
cmp
outsl
div
jp
xlat
repz
jmp
inc
jb
push
push
add
add
sub
ljmp
sahf
mov
loopne
push
cmp
inc
pushf
sbb
pop
mov
inc
xchg
push
movntq
inc
imul
sbb
cmp
sbb
dec
add
push
shl
leavew
or
pop
mov
inc
jp
sbb
loop
or
mov
stc
cwtl
or
rclb
repnz
mov
shll
pushf
cmpsb
es
sub
mov
into
push
out
ljmp
out
xor
mov
jmp
ja
dec
aas
enter
xchg
lahf
jp,pt
sbb
adc
jno
cmp
int
xor
jne
adc
jl
popa
add
adc
rcrb
sub
mov
sti
add
dec
mov
mov
cld
popa
and
mov
fnstenv
xor
inc
int
aaa
xchg
and
inc
sub
jp
dec
or
inc
push
push
out
cmp
cmpsb
push
pop
stos
or
pop
jnp
push
add
push
pop
scas
mov
stc
lea
mov
lock
jno
out
xor
fwait
and
cmp
sub
push
or
cmp
sbb
push
mov
adc
mov
jl
fdivrs
sub
xor
pop
push
push
mov
sub
mov
push
mov
nop
or
adc
sbb
cmp
inc
add
and
xchg
test
scas
sbb
xor
adc
stc
stc
sbb
xor
lods
or
ljmp
pop
inc
cmpsb
jo
outsl
jae
dec
cwtl
and
jae
js
jnp
mov
lods
mov
xchg
repnz
xchg
or
xchg
sub
and
jno
adc
hlt
add
mov
sbb
outsb
into
jle
out
mov
and
push
xor
push
ds
rcr
mov
cli
ljmp
adc
mov
adc
xchg
fisubs
gs
cmp
jbe
inc
dec
fidivrl
xor
jp
call
enter
into
aas
ret
pop
out
popf
lret
lahf
movsl
iret
lock
xor
fbstp
test
fwait
mov
sbb
cld
sub
sub
insb
xchg
sub
sub
cltd
mov
loope
push
stos
insb
lcall
cmp
jecxz
jne
fwait
mov
push
pop
cld
bts
lods
lret
lds
push
popa
and
cmp
mov
dec
mov
and
xchg
jecxz
cwtl
and
notl
lods
cmpsl
add
fucomi
sar
fistl
jge
mov
fbstp
in
test
stos
jae
dec
dec
call
lock
out
mov
cmp
mov
push
repnz
cmpl
cmc
js
push
mov
sub
or
popf
es
push
and
loope
mov
mov
das
push
icebp
xlat
lea
cmp
push
scas
push
dec
mov
dec
mov
cmp
mov
mov
punpckhwd
lret
jl
mov
add
lret
and
aaa
xchg
movups
iret
xor
or
in
clc
fs
in
cmpsb
addr16
nop
ffree
imul
fisttpl
lods
mov
in
insb
hlt
cmpsb
mov
mov
stc
jae
sarb
cwtl
push
jno
arpl
mov
lahf
xlat
sbb
xchg
cltd
push
aas
pop
xor
lret
popa
pop
rcll
fcompl
mov
insb
add
stc
das
or
loopne
xchg
mov
in
sub
jo
mov
call
adc
sbb
out
imul
sbb
cld
mov
adcb
int3
call
jge
aad
out
jl
loopne
push
sub
jl
xor
jno
inc
dec
sub
jmp
sub
fisubrl
push
sub
lret
fisubs
and
faddp
in
adc
int
out
enter
std
push
jns
sbbb
push
fisttps
clc
cwtl
xor
out
imull
enter
ret
daa
mov
adc
sarb
jmp
mov
xor
dec
xchg
ret
scas
xchg
cltd
inc
sub
pop
shll
pop
mov
add
or
cmc
and
push
shrb
imul
lods
pop
jmp
sbb
and
inc
mov
mov
enter
mov
mov
fimull
arpl
and
test
lcall
cmp
xor
xor
cmp
lods
repnz
test
lret
add
rol
out
sbb
adc
push
adc
inc
psubb
push
out
ret
xchg
jecxz
sub
sar
loop
sahf
pop
jecxz
cld
pop
pxor
pop
sbb
and
push
jle
dec
stos
aaa
adc
xchg
sbb
jecxz
movsb
in
pop
adc
loopne
testl
or
pop
test
adc
jo
cmpsl
out
jge
in
xchg
push
jp
mov
or
bound
ds
int
dec
sub
adc
mov
dec
leave
cld
jb
mov
cmp
clc
insl
jo
sbb
out
cmp
and
inc
ds
jo
add
mov
pop
xchg
jns
cmp
ljmp
cmp
sbb
mov
push
std
add
pusha
in
and
inc
aad
push
and
push
mov
mov
lcall
lcall
hlt
pop
and
or
dec
pop
mov
cwtl
push
cmp
dec
int
sub
push
mov
sarb
ja
aas
push
or
sub
push
dec
push
fs
pop
lcall
and
mov
mov
int3
orb
or
sub
cmp
sbbl
jmp
lea
clc
mov
inc
or
cmp
xchg
mov
inc
cmpsb
in
hlt
jle
test
push
es
inc
lock
cmp
cmp
jle
pop
sub
hlt
hlt
test
cmp
insl
in
test
sbb
call
clc
mov
and
incl
insl
sbb
notl
scas
lods
mov
lods
stos
test
ret
nop
cmp
fmul
xchg
out
cltd
adc
sbb
mov
enter
add
sub
mov
and
cmp
or
mov
xchg
mov
or
adc
xchg
xor
das
xchg
mov
bound
inc
jo
pop
out
addr16
xor
aam
clc
jl
push
sbb
mov
decb
and
test
jle
lock
lret
test
fstl
add
sbb
stos
inc
push
roll
int3
enter
and
cld
sbb
clc
stos
mov
popa
jl
lret
pop
push
dec
push
push
cmp
and
es
mov
dec
inc
pop
fldenv
and
iret
in
xchg
imul
in
pop
add
adc
fxch
movsb
add
lcall
jae
rol
cmp
andb
sbb
sub
xchg
cmp
mov
fs
push
movsb
push
ss
push
fs
mov
cmc
pop
cwtl
add
ret
and
xchg
inc
inc
xchg
xchg
in
inc
inc
push
fidivs
js
jno
loope
in
adc
inc
outsb
sub
cli
in
outsl
sti
imul
xchg
insl
xor
cmp
mov
cmp
push
jp
jbe
repz
xlat
mov
aas
cmp
pop
or
and
cwtl
imul
xchg
movsl
mov
inc
int
mov
jne
cli
pavgb
cmp
xchg
push
pop
rolb
mov
testb
sub
inc
cmp
ss
outsl
and
jmp
test
jge
fwait
outsl
mov
scas
mov
lahf
ss
mov
aas
mov
lret
push
jmp
iret
mov
lock
adc
das
movsb
aas
pop
call
dec
scas
mov
ljmp
xchg
xor
out
mov
dec
iret
int3
call
xchg
lods
cmp
fwait
test
sbb
sbb
notb
mov
jp
xlat
bound
imul
scas
mov
ja
divl
ds
add
xchg
push
xchg
push
mov
xorb
cmp
and
movsb
push
pop
js
pop
addr16
push
scas
icebp
or
shr
aas
shll
sbb
add
cmp
push
call
repz
sbb
push
mov
add
aam
xchg
or
inc
xchg
or
cmpl
xorl
jbe
and
xchg
je
cwtl
fcompp
fwait
lds
jo
mov
call
fisubrs
xchg
int
cmp
fcoms
fldenv
jnp
pop
testl
lret
sub
sub
addr16
xor
mulb
fadds
stos
lcall
cmpsb
push
fdivp
pop
pop
rcrb
xadd
xor
sbb
mov
sbb
sbb
xchg
mov
das
call
call
push
jg
stos
aam
cmp
in
push
xchg
repz
pop
dec
or
push
mov
pop
mov
jg
and
xor
xor
mov
add
andl
mov
xlat
xchg
aad
mov
add
lret
push
popf
inc
mov
repnz
jb
es
shl
test
pop
adc
sub
add
movsl
sub
mov
mov
sub
dec
xor
lret
data16
sbb
and
lcall
inc
test
mov
ret
out
out
jle
leave
fdivl
testl
xchg
bound
scas
scas
jge
and
adc
push
and
in
push
lea
adc
cmp
sete
sti
xor
cmp
cli
leave
xchg
or
add
bound
adc
mov
mov
loope
pop
fisttpl
lahf
jmp
xorw
push
rcrl
and
rcrl
pushf
cmp
adc
mov
cmp
or
jecxz
imul
je
mov
lods
jnp
sbb
adc
pusha
inc
jle
call
aad
jns
ss
push
repz
bound
sbb
add
pop
xor
out
shl
out
xchg
pop
sbb
xor
mov
fwait
add
lcall
cltd
fidivrl
push
into
into
rcll
mov
fadds
mov
sbb
mov
mov
sbb
lret
ljmp
pushf
cmc
sub
notb
ficomps
ljmp
push
addr16
push
adc
xchg
shll
dec
pop
insb
adc
pop
dec
insl
or
out
scas
pop
lahf
dec
popa
push
mov
cmp
mov
repnz
stc
sub
hlt
faddl
cs
imul
mov
outsl
fnstsw
jg
sub
ljmp
and
pop
inc
xchg
fisttpl
or
out
fcoms
xchg
mov
mov
add
movsb
cmp
cs
xchg
fidivrl
add
addb
xchg
inc
push
rcrb
jp
adc
in
and
mov
loope
stos
rorl
jnp
out
shll
in
mov
bnd
jae
xchg
divb
fldl
imul
cmpsl
cwtl
shll
xor
dec
lea
arpl
fwait
sarb
xor
add
inc
lret
dec
cmc
pop
ja
inc
pop
and
fistpl
cmp
out
fwait
inc
inc
mov
sti
mov
or
filds
dec
daa
lret
or
adcb
movsb
jae
pop
outsb
leave
dec
fs
add
pusha
lret
ja
xchg
dec
mov
mov
cmpsb
leave
test
cmp
sbb
or
out
sbb
lock
jb
push
shlb
fstp
pop
popf
pop
or
test
hlt
push
pop
xchg
sub
bound
popf
out
mov
xchg
dec
fldcw
scas
cmp
std
adc
dec
and
push
jo
mov
mov
roll
mov
jne
mov
xorl
orb
rcll
adc
dec
or
iret
in
int3
cmc
out
fimull
outsb
pop
jae
mov
mov
test
ds
movsb
lret
dec
in
xchg
sbb
mov
adc
jb
or
testl
test
sub
mov
hlt
stc
in
lods
sbb
cmp
test
push
pop
xor
out
mov
jae
cltd
push
ljmp
adc
dec
cmp
roll
jl
cwtl
pop
inc
pop
jge
add
xchg
std
jg
push
jg
xchg
divl
cs
je
std
es
add
hlt
loopne
cs
popf
xchg
out
mov
add
xor
mov
mov
pop
ljmp
lret
jg
cli
ret
push
mov
test
dec
shl
call
sub
lret
dec
iret
sub
cmp
pop
sbb
xchg
mov
sbb
mov
or
sbb
popf
scas
mov
fildll
mov
cmp
lds
icebp
pop
add
orb
inc
dec
inc
out
stos
loop
add
insb
sub
jb
dec
mov
jmp
in
iret
xor
xor
jno
sbb
or
or
hlt
mov
xor
leave
test
sahf
sbb
xchg
mov
icebp
push
mov
ljmp
iret
mov
ds
mov
push
inc
or
add
sbb
sub
mov
pop
mov
decl
mov
cmpsb
mov
aas
lods
addr16
mov
ret
enter
pop
dec
pop
cmp
push
pushf
arpl
cli
rclb
leave
mov
in
rcrb
test
xchg
das
sahf
in
mov
or
inc
orb
sarb
lea
sub
jp
cld
frstor
mov
dec
pop
xor
mov
sub
fisttpl
rorb
scas
dec
dec
iret
fstpt
out
into
leave
cmp
push
popf
repnz
in
stos
add
imul
mov
xchg
leave
push
mov
popf
inc
or
testl
push
mov
repnz
in
in
mov
cld
mov
sub
imul
test
inc
nop
and
ret
or
dec
sbb
stc
push
sub
xchg
mov
nop
insb
enter
les
inc
xchg
mov
ja
ret
dec
xchg
lret
mov
add
pop
adc
push
sub
in
xchg
popa
push
mov
mov
cltd
add
in
nop
in
das
loop
jne
jp
sbb
movsb
jno
addr16
ss
sbb
push
fisubrl
gs
bound
into
inc
int
add
adc
xchg
cmpsl
inc
inc
outsb
pop
out
shlb
cmp
je
mov
jle
adc
inc
jl
mov
test
jle
dec
fcoms
dec
cmp
jp
and
movsl
int
xor
mov
sbb
add
cmp
insl
pop
fistpl
lods
add
in
popa
xlat
stos
mov
mov
sbb
sbb
out
in
fists
cmp
bound
push
test
int
adcl
ljmp
push
scas
lahf
lcall
adc
dec
shrb
push
push
popf
inc
adc
aad
or
jbe
ljmp
ja
movsl
xchg
pop
sbb
or
stc
outsb
sbb
and
int3
incl
arpl
icebp
sub
pop
clc
fiaddl
loope
mov
xor
push
and
mov
cmpsl
push
jp
in
arpl
out
lock
cmp
mov
and
sti
mov
adc
fiaddl
cwtl
pusha
pop
cmp
test
and
adc
sub
inc
or
lods
cmpsb
jno
pop
jl,pt
lods
ljmp
push
out
repnz
mov
ror
je
out
push
imul
in
mov
aad
js
test
mov
cld
dec
mov
and
cwtl
sub
pop
out
adc
push
ja
push
fmuls
or
aad
es
mov
add
cmp
addl
xor
add
xchg
enter
jno
add
xchg
push
and
ss
inc
jnp
pop
dec
call
mov
mov
sub
fsubrs
xchg
xchg
ror
lahf
cmp
cmpsl
mov
xchg
xchg
mov
dec
popf
jno
fs
xchg
rcr
mov
les
xchg
cmp
jno
jb
test
add
xor
fwait
mov
movsb
xrelease
in
or
push
cwtl
or
mov
push
imul
push
in
mov
sbb
jle
dec
aam
inc
dec
dec
sti
aam
sbb
pop
jnp
aas
into
cmp
addr16
nop
mov
arpl
dec
mov
xor
mov
sub
add
movsb
mov
rorb
jge
test
push
xchg
daa
xchg
clc
pop
movsl
xchg
pop
mov
push
loopne
loopne
mov
je
mov
cmc
sbb
adc
mov
and
pop
fisubrs
xchg
inc
test
fbld
aam
hlt
mov
scas
ja
popa
cs
in
imul
pop
aad
push
mov
repz
xchg
xchg
das
sbb
inc
popf
dec
gs
das
test
cmp
outsl
enter
push
lods
xor
xchg
mov
cltd
cmp
or
out
and
adc
imul
push
lods
ss
mov
mov
aas
push
aam
xlat
mov
sbb
pop
int
pusha
in
add
inc
or
jnp
es
je
add
es
mov
jbe
dec
jae
sbb
dec
cmc
mov
and
mov
adc
fistpll
int
sub
roll
xchg
in
out
int3
inc
dec
shlb
js
mov
roll
fdivs
xor
jle
dec
inc
stc
leave
lret
push
sahf
loope
ljmp
mov
hlt
daa
push
lret
les
jle
push
xchg
push
test
adc
dec
cmpsb
adc
mov
lods
mov
jge
aad
cmp
mov
push
inc
and
sti
outsb
mov
flds
dec
test
in
push
cmp
fmuls
lods
sub
mov
adc
mov
inc
ret
jecxz
jg
push
xlat
lret
stos
cmp
cli
cmp
push
push
push
mov
mov
xchg
push
fisubs
push
addr16
inc
dec
sbb
mov
dec
sub
bound
and
xchg
jge
push
daa
cld
aam
fsts
ss
loopne
dec
add
daa
jns
pop
pop
or
out
ja
pop
cli
xchg
ret
mov
lret
push
cmp
mov
push
cmp
out
lahf
and
lret
out
jne
push
xor
push
push
fnstcw
push
repz
scas
xor
xor
pop
rcll
dec
std
xabort
test
test
js
sub
sbb
push
xlat
jmp
js
cmp
popw
lret
cmp
pop
jmp
out
mov
mov
cmp
and
addl
ljmp
jo
gs
movsl
mov
mov
outsb
shl
mov
push
dec
pop
aad
mov
test
pop
mov
sbb
fisttps
outsl
int3
cmp
jns
rcll
mov
js
enter
adc
stc
and
dec
inc
iret
sahf
cmovbe
sub
and
and
inc
out
pop
fisubrl
rcll
icebp
dec
jmp
pop
out
jle
adc
pop
mov
push
sub
loop
sahf
and
lds
adcb
mov
pushf
adc
lahf
mov
leave
mov
cmp
push
je
cmc
mov
cmpsl
rclb
and
sub
fisubrl
sub
cltd
sub
popf
scas
in
gs
pop
repz
sahf
xchg
cmp
ret
push
test
pop
sub
loope
xor
imul
mov
les
rcll
and
mov
add
jbe
cmp
scas
int3
aad
xchg
aad
fadds
mov
jg
jbe
sub
in
lods
hlt
rorb
mov
jecxz
nop
adc
mov
js
fidivs
idivl
adc
dec
cmp
xchg
in
add
dec
lea
insl
movsb
repz
add
ss
xchg
pusha
add
int
cmpsb
cmpsl
jb
mov
adc
loopne
push
les
in
mov
dec
js
shlb
cltd
xchg
add
cmp
popf
xchg
jo
idivb
fists
mov
pop
xchg
push
stos
jp
add
mov
pop
lods
xchg
nop
cmp
mov
pop
inc
das
mov
dec
decl
fstpl
cmp
pop
popf
or
push
push
insl
push
int3
fcomps
loope
stos
xchg
pop
ja
lret
dec
xor
ret
pop
outsl
push
iret
mov
and
mov
mov
pop
sub
jb
jp
mov
adc
or
jmp
cs
add
jo
xor
std
sub
outsb
shll
insb
jns
iret
loopne
cmpsl
jno
pop
rcr
cld
adc
cmp
mov
inc
adc
adc
push
inc
push
jg
pop
jecxz
aad
fcoms
add
das
cwtl
or
sub
scas
mov
lods
insb
lahf
pop
sub
mov
sahf
xor
dec
pushw
scas
das
adc
mov
dec
adc
in
sbb
insb
notl
xchg
cmpsl
jecxz
sub
pop
cli
jae
dec
mov
inc
cmp
jle
mov
fdivrl
pop
and
mov
mov
jmp
hlt
dec
push
ror
xchg
testb
pop
jle
aad
sub
data16
dec
and
sub
push
cmpsb
lods
icebp
adc
das
scas
mov
mov
dec
aad
aas
negb
clc
mov
pop
cmp
xchg
mov
xchg
inc
push
shll
fimuls
mov
popa
dec
loopne
out
mov
out
in
enter
sub
add
aas
jne
sub
xor
call
mov
shlb
gs
push
mov
dec
cmpl
clc
outsl
mov
outsl
lcall
loopne
sbb
mov
sbb
dec
fcmovbe
aas
icebp
xchg
into
xlat
jnp
fnstsw
inc
mov
sbb
fwait
push
js
sub
dec
cmpl
daa
push
das
in
xor
fisubs
mov
mov
loope
or
cmpb
decl
mov
xchg
pusha
mov
fisubs
add
lret
in
adc
and
pop
cmp
xor
ret
shl
sub
imul
rol
sahf
fidivs
add
mov
lods
inc
jp
ljmp
cli
aad
sbb
enter
out
in
mov
inc
inc
daa
rclb
add
cwtl
xchg
loopne
adc
mov
aaa
or
dec
xchg
dec
add
mov
push
mov
add
and
jbe
daa
xchg
ja
mov
and
adc
sbb
imul
mov
out
and
test
inc
aad
xchg
jmp
xchg
mov
push
fidivl
add
dec
fstps
sub
cld
inc
mov
adc
mov
push
cmp
outsb
adcb
xchg
sbb
sbb
ja
mov
mov
fwait
add
stos
bnd
popa
xchg
pop
popa
clc
cmp
fsubs
push
pushf
fnsave
ret
xor
idivb
push
or
pop
xorl
and
loop
inc
mov
ffreep
insl
rcl
test
jbe
jl
dec
lahf
cmp
orb
jg
imul
and
jle
sti
xor
xchg
xlat
pushf
ficoml
in
enter
imul
data16
or
cltd
jge
mov
cld
xchg
stos
cltd
and
xchg
popa
fnsave
addb
and
jmp
or
popf
int3
mov
fs
lret
cmp
ret
sbb
jae
jle
loopne
mov
xchg
stc
push
push
adc
mov
mov
pop
testl
scas
out
test
push
mov
mov
andb
adc
jg
xor
inc
jno
jns
mov
cmp
outsl
dec
mov
jns,pt
imul
cltd
mov
mov
roll
stc
push
cs
jmp
notl
or
movsb
jnp
jno
sub
fnsave
dec
out
fsubrl
lret
xor
imul
ss
aas
xor
repnz
sbb
shll
or
xor
mov
jb
sbb
stos
add
xchg
xchg
push
test
sub
adc
fs
ja
or
loope
dec
and
mov
jle
or
les
mov
cmp
test
sbb
sub
ret
pop
dec
aaa
mov
add
mov
fsubrl
jnp
cld
ds
test
xor
cli
test
mov
adc
mov
xor
outsb
shlb
xchg
sbb
mov
sbb
fsincos
add
fstpt
xchg
stos
movsl
mov
cld
ljmp
mov
and
push
scas
jnp
call
fsub
out
jmp
insl
ret
bound
rorb
push
cltd
nop
scas
sar
shlb
pop
pop
push
das
imul
movsl
jno
std
jle
push
pop
js
push
cli
ss
add
out
sub
getsec
sbbb
or
dec
sahf
jo
sarl
cs
outsb
pushf
andl
jmp
pop
cmc
jnp
sbb
outsb
aad
into
jo
sbb
shl
push
ds
pop
add
xor
sub
sti
sbbb
aad
sub
ret
mov
scas
iret
mov
xor
xchg
insb
sbb
sahf
lods
cmp
mov
jae
push
outsl
ret
cli
add
cli
xchg
dec
mov
pop
sub
jae
daa
sbb
fidivl
mov
in
fs
ret
jae
sarb
xchg
jmp
cmp
lret
loop
mov
ror
hlt
inc
push
jb
mov
arpl
stc
inc
xorl
sahf
stc
test
imul
mov
and
pop
stos
iret
aad
js
fidivl
push
inc
adc
jp
es
or
jp
les
into
out
sub
mov
fcoms
scas
mov
or
pusha
aam
sub
mov
icebp
cmpsl
fdivrs
or
lds
or
mov
inc
mov
fdivr
mov
arpl
movsl
mov
pushf
inc
aaa
mov
sti
inc
add
fstps
pop
std
scas
sbb
shll
cmpsl
mov
push
aad
jb
mov
rol
xor
mov
sbb
enter
sahf
jae
mov
mov
or
or
adc
popf
les
xchg
dec
and
pop
xchg
jmp
jno
xchg
and
sub
faddl
out
mov
pop
hlt
pop
movsb
jno
mov
data16
pop
aam
and
imul
push
gs
and
adc
ficomps
test
adc
cmp
repz
bound
roll
adc
adc
aas
sbb
aaa
add
dec
cmc
stc
ffreep
aaa
les
inc
sub
adc
insl
enter
push
jno
cmpsl
shrl
push
stos
sbb
sbb
pop
pop
mov
and
mov
or
sub
fisttpl
test
sub
mov
xchg
inc
rep
dec
and
pop
sarb
push
sbb
jecxz
stos
add
and
out
xlat
inc
and
pop
mov
pop
mov
cmp
les
aas
sbb
lcall
js
xor
lods
or
int3
add
or
cs
loop
sti
stos
push
dec
ret
ja
and
clc
pop
pop
in
aad
push
fistpl
jne
rcrl
addl
mov
out
or
mov
andl
mov
mov
inc
mov
sbb
sar
jge
jnp
pop
cmp
das
inc
xor
xchg
cmp
les
push
xchg
pop
iret
mov
cmpsb
js
mov
fsubrs
jecxz
test
jmp
cltd
out
es
push
mov
insl
jecxz
enter
jo
jnp
jmp
xor
aad
sub
lcall
jo
jae
jbe
jle
daa
out
sub
repz
decl
jbe
dec
lcall
sub
jae
iret
mov
mov
cmp
add
into
jle
mov
pop
push
push
fildll
and
mov
jle
inc
inc
push
cli
insl
rolb
ret
sub
mov
fsubrs
xor
xchg
orb
cmp
adc
inc
scas
cwtl
jb
sahf
mov
in
ret
dec
je
xorl
or
mov
loopne
pop
inc
ret
cmp
jo
daa
inc
add
mov
cmp
adc
adc
mov
jg
mov
fildll
jp
and
mov
cmpsb
dec
xor
ja
jae
dec
lret
jae
dec
std
xor
cltd
clc
xor
sub
pop
fcomi
loop
fidivs
lret
jbe
dec
xlat
jo
dec
imul
xchg
std
es
dec
cmp
cmp
or
lods
ljmp
cmp
mov
enter
xchg
or
fistps
scas
add
mov
push
sub
cmp
shll
inc
inc
mov
repz
insb
xor
xchg
je
into
pop
adc
push
pop
arpl
and
into
hlt
xchg
data16
dec
cmpl
adc
mov
ljmp
push
cmp
fxtract
insl
and
or
xchg
cmp
sbb
jl
jle
jmp
lds
jmp
out
addr16
fildl
dec
mov
pop
inc
mov
and
jmp
es
xchg
inc
mov
orl
push
fstpl
repnz
sub
sbb
aad
jmp
jl
mov
ret
xchg
xor
je
add
ficoms
xchg
int
lcall
mov
test
mov
scas
pop
inc
pop
ljmp
sbbl
int
repnz
out
aas
pop
jnp
push
rorl
in
push
xor
mov
test
scas
fisubs
jge
pop
mov
dec
lods
out
adc
mov
outsb
out
negl
and
xchg
sub
clc
daa
fcmovbe
stos
pop
popf
jge
pop
data16
mov
or
jg
idiv
imul
in
mov
dec
inc
jl
pop
movsl
jbe
rol
test
shr
cmpsb
stos
xchg
fs
aad
aas
insl
sub
inc
ljmp
aas
jmp
inc
adc
dec
sbb
adc
pop
leave
push
sub
es
lcall
xor
cmp
add
mov
test
imul
and
enter
ljmp
insl
pop
idivl
mov
xchg
or
jmp
call
data16
mov
dec
in
imul
push
fwait
sub
xchg
push
pusha
mov
cmp
mov
insl
fmulp
hlt
repz
ss
movsl
cli
or
subl
aaa
loope
sbb
push
jmp
nop
mov
add
addr16
or
pop
or
add
xchg
leave
adc
sub
into
mov
pop
test
lcall
fwait
mov
clc
cmp
xor
sbb
cmp
pop
mov
out
xchg
sbb
sti
fwait
lret
sbb
cmp
sub
in
adc
fisubs
nop
adc
ror
push
cmp
into
dec
icebp
pop
fildll
xor
sub
lcall
lock
push
pop
orl
ficoml
inc
push
inc
stc
pop
xor
sub
test
dec
and
loope
das
jmp
bound
add
fcmovnu
inc
test
or
repnz
imul
jb
mov
add
sub
pop
data16
int3
or
add
cld
cmp
ror
pop
xor
push
lock
fidivl
xchg
sbb
jmp
cmp
push
out
mov
adcl
ss
lods
clc
dec
ret
jne
xchg
pop
bound
aaa
add
mov
pop
xchg
and
push
xor
dec
cs
in
in
loope
cmp
add
jbe
jno
test
sbb
pop
test
jmp
sub
loope
or
xchg
lcall
add
pop
in
push
push
jno
add
popf
daa
ljmp
xchg
xchg
test
pop
stos
mov
movsb
in
jge
sbb
jp
pusha
mov
push
das
pop
flds
fnstsw
addr16
stos
push
inc
outsl
and
mov
ror
sbb
test
mov
inc
jne
icebp
adc
adc
sub
int
into
imul
mov
push
adc
inc
jle
jecxz
jecxz
cmp
mov
fidivrl
push
int
aas
pop
fisttps
sbb
loopne
sub
dec
push
fisubs
and
mov
mulb
xchg
andl
adc
dec
xchg
sbb
test
mov
mov
pop
sahf
inc
mov
xor
xchg
fmulp
into
inc
lret
cwtl
mov
add
mov
jg
out
jge
sub
jmp
push
testl
xchg
int3
es
adc
push
mov
xchg
push
dec
setbe
xchg
sub
jne
pushf
sub
mov
mov
ja
sub
aaa
xchg
mov
cmpsb
mov
lret
fsts
dec
pop
inc
ror
les
popa
lock
jnp
adc
ret
pop
xchg
jno
orb
pop
jbe
inc
xchg
cmp
testb
addr16
fstl
lahf
insl
mov
popa
dec
mov
call
stos
data16
push
daa
sub
cmp
inc
sbb
adc
push
xchg
cmp
lods
insl
mov
or
inc
icebp
lea
pop
mov
push
xchg
inc
and
cmc
hlt
pop
mov
sbb
xor
fs
in
push
lods
mov
out
inc
push
in
ficompl
repnz
pop
sub
mov
dec
test
rcrb
lcall
hlt
jne
cmp
sub
rcll
into
cmp
mov
pop
loop
loopne
dec
scas
xor
pop
int
je
daa
xchg
mov
mov
fwait
cmp
cmpsl
aam
divl
push
cmc
int3
lds
xor
xor
test
adc
add
cmp
push
push
scas
sub
lods
shrb
and
stc
ret
inc
orl
sarl
jge
sbb
std
and
dec
imul
mov
add
mov
inc
pop
lods
gs
jne
out
lods
pop
xor
push
or
adc
dec
xchg
push
repz
pop
xchg
insb
mov
push
push
cmp
aas
gs
push
retw
outsl
push
movsb
xchg
add
fistpl
add
dec
and
push
cmpsl
jmp
push
lods
dec
sarl
vfnmsub132pd
sbb
dec
fidivrs
std
icebp
push
fimull
xlat
cld
js
mov
out
inc
gs
and
jbe
out
data16
add
inc
or
outsb
mov
mov
mov
cmp
sahf
test
or
adc
push
fnstcw
ljmp
mov
gs
out
push
jle
imul
jnp
add
je
mov
pop
out
pusha
lahf
push
in
sbbl
je
pop
push
mov
shlb
mov
push
xor
pop
inc
sub
pop
std
std
xor
std
sub
inc
push
xchg
dec
cwtl
cltd
out
pop
pushf
jg
xor
pushf
stos
xor
pushf
and
push
mov
xor
inc
test
xchg
ret
add
or
dec
or
xchg
jg
mov
sub
jb
imul
and
pushf
loop
and
loope
mov
mov
cli
aas
add
movsl
lock
lret
outsl
inc
fwait
add
les
divl
and
stos
rclb
sti
xor
ret
es
in
cmpsb
jb
cld
cmpsb
inc
lods
add
or
sbb
scas
sbb
xchg
mov
dec
popf
dec
movsb
pop
mov
addl
mov
or
jne
pop
repz
xchg
or
cs
loop
mov
fstp
roll
cwtl
mov
push
in
gs
imul
pop
roll
sbb
test
outsl
add
adc
cmpsl
addr16
xchg
cmpsl
popa
iret
jbe
sbb
fldenv
mov
jnp
idivb
jp
add
je
mov
flds
dec
jle
or
mov
clc
ror
adc
cmp
movsb
aam
sbb
lds
xchg
mov
out
add
incl
mov
loope
sbb
pop
sbb
or
les
ret
adc
xorb
add
mov
in
lods
dec
xchg
ret
nop
jns
call
add
inc
cmp
sbb
js
hlt
mov
pop
fcmovu
sub
movsl
mov
inc
inc
dec
lret
xlat
dec
fistl
adc
mov
stos
ljmp
rcll
xchg
add
lret
adc
push
push
pop
mov
cmpb
push
sahf
pop
movsb
fistl
sbb
add
mov
scas
adc
jg
jne
jl
push
fiaddl
mov
lods
cmc
cld
enter
pand
pop
jbe
imul
cmpsl
inc
xlat
je
cltd
pop
addr16
mov
jae
insl
xchg
rclb
in
xchg
leave
stc
gs
or
inc
sub
sub
lahf
out
fisubrl
sub
out
stos
shrb
xadd
xor
hlt
cmp
out
pop
scas
cmp
jmp
insb
pop
scas
aam
data16
mov
lds
call
repnz
push
gs
cmpsl
imul
cli
cmp
bnd
jns
movsl
push
ds
jae
jge
xor
daa
jp,pn
imul
shlb
cwtl
insl
mov
lret
testb
test
cmpsb
in
je
fdivrp
cwtl
insb
mov
mov
sub
sub
dec
and
dec
in
iret
sti
lcall
mov
push
iret
jne
sub
ficomps
inc
dec
mov
mov
adc
adc
mov
jb
jg
push
stos
mov
sahf
pusha
and
in
pop
add
mov
cmp
in
push
pop
pop
dec
inc
mov
xlat
xchg
push
and
nop
jae
inc
pop
or
clc
or
test
add
inc
xor
mov
or
dec
jne
loop
mov
mov
lcall
push
inc
pop
std
push
or
lcall
adc
xlat
out
lds
and
pop
ljmp
sti
mov
enter
pop
ljmp
pop
stos
out
inc
xchg
mov
ljmp
pop
pop
xor
call
lea
push
jae
push
mov
cmp
imul
pop
ficompl
ret
enter
dec
mov
aas
test
pop
data16
mov
jne
xchg
shrl
jb
xor
dec
mov
aam
mov
sub
outsl
sub
lcall
sub
pusha
xor
mov
call
cli
adc
push
adc
int
mov
lret
cli
xlat
xor
jnp
das
jl
cmp
dec
loope
push
adc
xchg
cltd
cmp
aad
int
or
orl
xchg
xchg
cmpsl
mov
cli
pop
cli
leave
insl
mov
add
mov
fstpt
inc
mov
push
mov
push
stc
shl
mov
lret
or
mov
pop
stos
into
mov
cli
adcb
mov
incl
or
sbb
cmpsl
xor
jb
insl
rclb
adc
inc
fdivp
jo
inc
scas
xchg
xor
outsl
and
in
lods
test
xchg
or
xchg
cmp
lods
fmul
jbe
adc
loope
mov
pushl
out
cmp
mov
je
and
or
sub
add
sbb
into
sbb
and
cwtl
sub
movsb
mov
pop
cli
sti
cmp
test
je
test
iret
shrb
pushf
mov
shll
iret
popa
jge
sub
cmpsl
fwait
jo
or
adc
and
mov
shll
sub
xor
outsb
adc
push
incl
out
nop
sub
or
mov
sub
leave
add
and
cmc
mov
mov
bound
add
or
push
std
sub
adc
and
pop
cmc
sub
aaa
insb
gs
orl
outsb
test
out
push
pushf
imul
sti
das
clc
repnz
jo
add
addl
ficomps
nop
push
iret
out
or
out
insb
inc
outsl
lea
gs
fldl
inc
addb
pop
push
aam
sbb
fwait
insl
nop
outsb
dec
xor
sub
jl
lahf
stos
mov
mov
hlt
out
insl
cmp
fistpl
jmp
lret
cmc
test
out
insb
test
lds
xor
mov
lods
mov
sub
fcmovnbe
and
mov
cmp
adc
ljmp
sbb
lds
scas
or
outsl
leave
adc
ficoms
mov
out
xchg
jmp
rcl
hlt
fisttpll
sub
ret
mov
inc
dec
daa
rclb
movsl
dec
insb
dec
jnp
ds
dec
into
and
mov
push
in
adc
movsb
das
je
mov
jno
or
ja
scas
or
movsb
ds
daa
pop
lahf
or
hlt
lret
in
xchg
lret
movsb
scas
jb
sub
xchg
ss
ja
xlat
pop
xchg
xor
aas
repnz
cld
dec
push
test
loopne
pop
jb
xchg
sbb
pop
outsl
scas
lods
fcomps
sbb
cld
and
ficompl
pop
mov
add
mov
outsb
std
ret
rcll
xchg
fidivrl
rclb
jp
mov
outsl
clc
sbbl
add
gs
fstpt
dec
dec
push
roll
cmpsl
repnz
pushf
and
rcl
cmp
into
dec
imul
sub
pop
fnstsw
aam
push
or
ja
stos
sub
jmp
insl
cmp
or
xchg
fldcw
lahf
or
out
nop
pop
jbe
imul
inc
jo
js
rorb
dec
lea
xchg
div
mov
or
insl
in
mov
ljmp
data16
icebp
and
pop
popf
inc
das
out
xchg
jge
int3
jbe
scas
inc
in
push
add
mov
lds
lret
push
add
aas
negb
dec
data16
mov
ds
push
hlt
clc
fdivs
aad
sbb
dec
mov
xchg
and
cltd
dec
cltd
shrl
lret
push
xor
mov
pop
cmp
ret
push
mov
subl
mov
in
push
mov
testb
shrb
lcall
pop
hlt
aaa
imul
call
sub
scas
push
adc
sub
movsb
enter
push
popf
imul
adc
pop
push
xor
ja
adc
test
mov
in
add
sub
insb
add
inc
jmp
int
mov
loope
cmp
pop
or
fnstenv
sub
fiadds
mov
adc
jmp
and
xchg
sbb
inc
je
dec
mov
daa
les
mov
xchg
addr16
xor
push
testl
inc
pop
dec
xor
or
and
xor
mov
call
push
out
xchg
enter
mov
sbb
ljmp
adcl
mov
xor
xor
lods
ss
hlt
or
cmp
jno
fstps
or
divb
movsb
push
ja
inc
sub
test
fisubs
cmc
dec
sbb
xor
int
xor
adc
cs
xor
cmp
mov
sbb
lcall
fs
mov
lea
xchg
pop
mov
scas
mov
movq
fs
ss
jns
xchg
mov
sti
outsb
fdivrs
jle
fucomip
cltd
jge
jbe
sti
mov
stc
fsubrl
cmc
push
mov
out
push
adc
mov
pop
fadds
sbb
xlat
fldcw
jno
push
lods
add
testl
pop
int3
jg
add
cmp
insl
lcall
dec
sub
andb
and
dec
mov
clc
mov
push
test
xor
bound
pop
mov
add
inc
sahf
imull
push
outsb
adc
outsb
jl
lcall
int
test
vfmsubadd231ps
ret
int
in
cmp
fwait
pop
pushf
sbb
push
cmpb
addr16
dec
push
arpl
out
pop
lcall
in
push
add
loop
arpl
call
mov
mov
pop
loop
or
sbb
xor
jle
push
pop
add
in
andb
or
push
mov
fwait
bound
mov
je
sbb
mov
lock
imul
movb
imulb
add
cmp
jg
fs
fcmovbe
sub
daa
ficomps
cmp
cmp
push
adc
add
mov
sar
fwait
xchg
dec
dec
clc
and
sub
jne
sub
xchg
push
cmp
mov
jmp
push
jl
fisttps
adc
push
std
cmpsb
into
imul
pop
inc
loopne
imul
xorl
dec
mov
sbb
les
mov
mov
loop
mov
add
push
inc
movsb
mov
orb
add
out
add
adc
xchg
sbb
inc
dec
mov
cmp
aam
sbb
mov
inc
icebp
mov
add
inc
cmp
sahf
inc
xor
pop
sbb
lods
dec
add
cmp
aaa
das
mov
ss
gs
add
call
cmpsl
xchg
xchg
cmc
dec
lahf
repz
popa
pop
loope
add
repnz
jnp
push
shlb
jae
xchg
stos
pop
pop
sbb
jns
and
sub
xor
mull
xlat
sbb
scas
push
jb
ror
loope
stos
xor
dec
jge
les
jnp
inc
adcl
scas
and
push
mov
push
imul
sbb
js
or
jecxz
loopne
fistl
pushf
push
fisttpl
jecxz
push
insb
xor
or
add
mov
cmpsl
outsb
ss
mov
mov
lods
push
mov
xchg
faddl
push
jb
adc
rclb
push
loopne
mov
mov
or
add
loopne
faddl
add
push
out
cld
cmpsl
ja
fs
iret
push
lcall
ret
push
pushf
sahf
lret
xchg
scas
pop
jp
jle
pop
xor
in
scas
test
in
lods
jae
repz
push
cld
insb
push
lea
sbb
adc
out
jle
and
add
ja
mov
dec
jne
jbe
push
vpsllq
mov
mov
xor
arpl
pop
fidivrs
xlat
mov
xor
or
cld
inc
aad
dec
jmp
scas
addr16
sti
fiaddl
sbb
push
sti
inc
add
int3
call
adc
in
sbb
adc
xor
cwtl
push
push
inc
fstps
shrl
jo
mov
imulb
stos
push
add
cmp
shlb
fldt
push
dec
mov
jmp
arpl
std
add
sub
adc
lods
fildll
mov
fimull
adcl
jmp
add
jle
pop
lret
pop
adc
and
les
lods
sub
fwait
dec
mov
into
adc
out
adc
in
jno
insl
and
iret
sbb
xchg
adc
sbbl
mov
cli
push
lea
repz
aam
mov
add
inc
fwait
popf
pop
fiadds
insl
mov
jg
mov
aam
je
mov
sbb
and
out
nop
inc
push
iret
insb
push
out
mov
mov
popa
mov
cmp
pushf
fildl
pop
sub
push
call
ljmp
xor
ja
ret
push
inc
aad
mov
mov
push
dec
xlat
imul
jne
sub
cmp
push
jne
in
sub
int3
fisttpll
stos
loopne
aas
xchg
and
pusha
mov
ljmp
sqrtps
adc
repnz
insl
jle
mov
add
mov
mov
add
pop
pop
loop
and
jmp
pop
sub
push
mov
pop
or
subb
mov
fsincos
and
mov
push
jb
and
fists
and
dec
test
push
notl
lea
adc
data16
jge
lods
xchg
dec
sub
pop
sbb
xchg
mov
push
lods
stos
jge
cmp
movsb
add
addr16
adc
inc
push
fmuls
mov
cmpsl
xchg
jg
inc
inc
add
call
or
mov
adc
mov
pop
ret
mov
in
shll
scas
cld
push
mov
xchg
cwtl
pop
in
mov
test
mov
int
mov
cmp
sbb
mov
inc
push
lcall
adc
mov
imul
mov
xchg
cmp
sysenter
lods
mov
xor
notl
sbbl
fdivs
sub
mul
jmp
fmull
fistpl
pop
fnstenv
lahf
addr16
dec
sub
rol
lcall
cmp
subb
stc
mov
je
rorl
rcll
inc
sbb
pop
xchg
sub
push
test
pop
jnp
mov
jnp
ret
cmp
sbbb
fwait
ret
fxam
adc
test
repnz
popf
es
ja
movsb
arpl
pusha
leave
push
out
push
cmp
stc
outsl
call
dec
and
sub
mov
insb
stc
cmp
mov
push
xchg
adc
dec
notb
dec
mov
mov
or
pop
das
xor
mov
cmpsl
les
jbe
aam
jno
pop
inc
data16
sub
cld
jo
stos
scas
out
mov
pop
rclb
xor
into
xchg
xor
je
jno
ror
xor
xorb
sbb
xchg
sub
pushf
imul
or
adc
insb
xor
and
cmpsb
addl
hlt
cmp
sub
ljmp
addr16
cwtl
stos
popf
cld
das
cmp
cltd
lds
inc
xor
test
lds
inc
sbb
jnp
cmp
int3
mov
cmc
lcall
sbb
fidivrl
shll
and
push
daa
div
js
mov
or
in
or
ret
pop
inc
test
lcall
test
inc
dec
cmp
daa
cmp
and
shrb
mov
sub
out
gs
popf
fs
add
dec
pop
jl
push
jbe
push
inc
xchg
arpl
shl
sbbb
testl
jae
mov
rorb
std
sbb
in
and
push
out
stos
mov
adcb
add
mov
sbb
sbb
pop
jo
aam
fs
pop
or
inc
sbb
lods
dec
jmp
leave
lea
aad
ds
xor
push
pop
sub
in
loopne
bound
push
inc
push
mov
movsb
jb
popf
jno
ljmp
mov
pop
repz
fisubrl
nop
xchg
adc
and
fnop
repz
jo
outsl
stos
and
lahf
movsb
ljmp
std
or
shr
jl
xchg
adc
jge
dec
jp
scas
xchg
fs
in
add
lds
xchg
data16
inc
adcl
jg
ret
push
ret
sbb
inc
int
mov
je
inc
ja
sbb
jg
push
orb
jge
loope
fcompl
xlat
mov
movb
in
mov
pop
iret
loope
pop
js
out
pusha
stos
scas
gs
icebp
jecxz
pop
pop
imul
cmpsb
rolb
add
xor
in
or
or
sti
aaa
jne
pop
outsl
jmp
popa
or
pop
push
inc
lret
inc
mov
outsl
jne
cmp
sbb
mov
lods
pop
pushf
push
icebp
and
cmp
add
fcoml
or
sti
subb
xchg
jae
lods
adc
push
test
mov
pop
xchg
mov
shrl
mov
add
mov
outsl
mov
add
adc
mov
xor
clc
or
call
rcrb
movsl
jmp
mov
insl
addb
add
pusha
pusha
ss
xchg
cltd
mov
icebp
and
out
or
ja
mov
lds
cmp
insl
scas
xchg
or
xor
cmp
jo
lahf
jle
push
lods
fnstenv
inc
mov
pop
cmp
jne
push
cmpsl
push
lret
pop
sti
and
mov
hlt
cmp
mov
dec
ljmp
repz
sbb
shrb
sub
mov
xor
push
sbb
jae
out
in
and
dec
cmp
add
jno
cmp
in
pop
bound
ja
outsl
xor
cmp
mov
mov
idivl
out
lea
mov
and
dec
mov
or
xchg
push
lret
sbb
sub
arpl
lds
inc
cs
popf
scas
pop
rcl
mov
loopne
push
xor
adc
in
lods
pop
push
les
pop
push
cmp
clc
in
insl
lds
xchg
lods
pop
sahf
int3
pop
jle
or
cs
pushf
dec
mov
lods
adc
cwtl
hlt
jne
push
cli
cmp
xchg
mov
dec
or
xor
ret
push
xchg
sahf
pop
call
pop
cli
cltd
push
mov
dec
and
mov
daa
xor
mov
test
mov
lahf
das
cwtl
jno
mov
dec
fstl
push
dec
dec
xchg
loope
pop
mov
cs
add
int3
lss
or
pushf
adc
lret
test
sub
fsubs
mov
sbb
mov
push
mov
inc
and
jno
sub
es
cmpl
orl
nop
jmp
mov
sbb
xchg
inc
pop
mov
aad
pop
test
or
lcall
mov
adc
das
mov
dec
pushl
pusha
push
testb
push
pop
xor
jbe
push
jne
stos
mov
lods
dec
lods
adc
mov
sub
stos
les
cmp
jnp
lods
movsb
xor
gs
scas
fnstcw
push
xchg
hlt
ljmp
scas
lods
inc
mov
stc
test
mov
cmp
jns
mov
pop
mov
inc
outsb
xchg
in
cli
arpl
mov
bound
jl
xlat
inc
add
ds
push
mov
or
sub
xor
and
mov
insb
inc
cwtl
adcl
xchg
mov
pop
sbb
jne
cwtl
imul
nop
mov
dec
lds
sub
sbb
cmp
scas
scas
fstpl
fxam
outsl
sbbb
jl
push
pusha
xchg
dec
push
stc
mov
jle
push
xorl
lock
lds
out
add
mov
mov
or
adc
inc
movsb
lret
or
push
sub
xchg
dec
mov
sub
ja
and
popl
cmovg
pop
xor
in
mov
sub
pop
xchg
popf
cwtl
or
jle
sub
xchg
arpl
adc
sar
dec
lock
lret
imul
in
insb
stc
jae
mov
sarl
aad
out
cmpsl
cmp
lods
mov
jg,pt
in
jp
dec
adc
shlb
outsl
jo,pn
loop
in
gs
push
push
fmull
pop
push
and
mov
pop
mov
jle
outsl
jae
mov
mov
adc
xor
dec
lcall
pop
jp
sbb
mov
fldenv
imul
mov
xor
imul
and
sti
lret
add
cmp
divl
xlat
dec
lret
jl
sub
push
ss
add
rorb
inc
lret
stos
mov
jecxz
xor
mov
daa
je
push
ret
sbb
inc
xchg
mov
ljmp
pop
fld
pusha
sbb
iret
ret
push
lock
sub
ja
ss
jmp
jno
sub
push
repnz
mov
push
sub
add
hlt
or
and
int
jo
pop
int
les
mov
inc
cmp
js
cmc
jae
adc
rclb
mov
push
loope
pop
xor
adc
adc
push
mov
inc
mov
out
adc
je
popf
cmp
cltd
dec
sbb
icebp
movsb
cmp
lahf
and
push
lcall
mov
sub
cmpsl
or
adc
inc
jno
dec
outsl
dec
iret
shlb
or
les
scas
xchg
push
jle
jg
pand
rorb
mov
push
hlt
fs
ds
lret
or
jp
stos
dec
daa
fwait
mov
enter
sarb
sbbb
cli
test
mov
add
aaa
xor
sbbb
loope
fimull
sbb
xchg
out
fwait
sbb
adcl
fiadds
cli
and
mov
xor
xchg
xor
and
xchg
cmp
shrb
push
out
xchg
mov
inc
xchg
adc
ljmp
mov
lods
leave
lea
adc
lahf
mov
lret
mov
orl
fsts
lahf
fwait
xchg
adc
into
xor
js
mov
push
faddl
scas
loopne
popa
inc
dec
shr
imul
dec
add
pop
repnz
movsb
mov
xchg
xor
notb
jne
push
ret
adc
inc
popf
inc
xchg
xchg
scas
xchg
pop
mov
rcrb
insl
mov
inc
jne
sub
push
mov
pusha
lahf
movsl
cmpsl
movb
clc
cmpsl
aad
cld
mov
jg
loopne
mov
fimull
jns
xchg
int
ljmp
aam
pop
and
cmc
and
test
mov
pop
insl
pop
jl
mull
mov
xlat
adc
sahf
pop
cld
pusha
movsb
jge
mov
stos
loopne
int
leave
lret
inc
dec
fs
inc
fcompl
test
cmpsl
jp
fisubrl
mov
mov
jl
mov
fmull
dec
and
pop
or
inc
mov
mov
std
insl
and
fsubrl
ficompl
mov
aam
xchg
xor
and
ljmp
sub
clc
xchg
jns
out
psrlw
insb
popf
xor
mov
cmp
xor
cmp
adc
or
in
push
jno
insb
rclb
sub
andb
clc
xor
jo
je
pop
scas
movsb
or
pop
sti
gs
insb
jae
dec
mov
dec
dec
bound
lea
xchg
mov
jge
cld
aad
stc
push
je
fcomps
out
test
mov
add
push
xchg
or
ds
jmp
xlat
movsb
adc
mov
inc
lcall
cmp
push
cmp
pushf
jns
add
testb
mov
push
pop
add
call
sbb
adc
std
push
adc
das
jg
int
sub
insl
nop
pushf
pop
xor
cmpsb
aad
sbb
rcrb
jo
and
sahf
dec
outsb
pop
cmpsb
sub
enter
push
push
subl
aam
jecxz
ret
sub
pop
lret
push
arpl
mov
jecxz
and
add
sbb
jle
inc
mov
xor
outsl
daa
cmc
or
push
sub
pop
pop
fsts
xchg
push
mov
int3
push
sub
push
and
nop
jecxz
mov
shr
in
aaa
les
rorl
int
fxch
outsl
sub
and
lea
mov
cwtl
mov
sbb
mov
sbbl
sbb
fcomp
loope
push
stos
jo
jo
inc
pop
clc
test
dec
adcb
sub
arpl
mov
pop
xchg
lahf
mov
pop
cmpsl
test
add
ljmp
loope
mov
mov
ja
xchg
popa
push
adc
add
mov
ret
mov
adc
inc
xchg
add
mov
jp
sbb
imul
lcall
lahf
in
xchg
mov
adc
cmp
jl
rcrl
arpl
push
call
adcl
xchg
adc
aas
sub
int
cmp
cmpsl
ret
neg
in
cmpsb
add
xlat
mov
pusha
cli
mov
adc
stos
je
scas
mov
cwtl
test
push
sahf
push
jnp
xchg
pop
cmp
mov
and
mov
pushf
hlt
push
dec
js
cmpsl
push
inc
out
jp
push
mov
sahf
test
and
mov
fstpt
sbb
sub
stos
loope
mov
addr16
sahf
aam
cmpsb
cld
out
jl
xchg
clc
dec
mov
decb
std
ror
jl
fdivs
jecxz
jns
pop
icebp
test
cmp
and
aaa
or
xchg
imul
nop
insb
sbb
dec
loopne
jge
lcall
mov
jge
or
sti
stos
jle
pop
loopne
mov
mov
jbe
ljmp
inc
icebp
add
mov
clc
movsb
int
cli
rcr
test
pop
jle
loope
fst
mov
push
rorl
jg
mov
sub
lock
dec
lock
mov
pop
fwait
mov
test
outsb
imull
push
pop
mov
mov
mov
sub
dec
outsl
scas
pop
mov
imul
not
inc
dec
adc
sbb
cld
fsubl
push
mov
js
pop
daa
pusha
mov
push
fcmovu
test
xchg
ja
out
pop
cwtl
cld
jmp
out
je
ds
add
imul
dec
sub
pop
test
mov
mov
cmp
lret
pop
je
dec
data16
cmp
fistpl
sbb
xchg
mov
sub
sub
and
jmp
push
icebp
js
mov
imul
popf
cmpsb
aad
pop
inc
lahf
fcoms
in
xor
int
xlat
aad
cmp
pusha
cmp
mov
and
sbb
movsl
cmpl
push
sti
or
push
dec
inc
inc
xorl
cli
pop
add
sbb
into
icebp
push
adc
test
jno
cmpsb
add
vmovmskps
enter
add
xchg
xlat
test
adc
mov
rclb
adc
shr
ss
add
lock
push
pop
test
cmp
mov
test
subb
and
loop
push
xchg
sbb
push
testb
scas
neg
sub
rclb
imul
mov
cmp
int
lods
push
hlt
mov
adc
fwait
cmp
mov
dec
jo
ret
push
pop
sbb
pop
inc
js
xor
lods
inc
divb
pushf
lret
sub
test
fs
ficoml
jo
scas
hlt
scas
insb
movsb
lret
or
push
jge
pop
test
out
push
movsl
imul
sbb
or
loope
sub
push
shr
dec
or
popf
jae
jae
sarb
xchg
aad
push
pop
cmc
xchg
cmp
add
jne
ds
add
lcall
cmp
pop
cltd
into
xchg
lcall
mov
data16
mov
stos
test
xchg
pop
aaa
sub
push
add
insl
pop
pop
out
iret
xor
dec
rcr
and
fcmovne
mov
add
adc
dec
and
js
dec
mov
int
sub
incb
es
fbstp
pushf
ljmp
stos
pop
inc
cs
adc
outsl
shll
idivl
and
sbb
sbb
nop
push
fmul
sbb
and
inc
mov
sub
xor
jbe
aad
outsb
movsb
xor
and
shr
pop
cmc
inc
dec
sub
js
clc
inc
imul
pop
dec
pop
out
cmc
jecxz
rorl
orb
lcall
fsubrp
and
push
es
xchg
and
inc
cmp
pop
mov
mov
sub
dec
cld
fmuls
xchg
jae
pop
cmpsl
outsb
lock
fdivs
imul
fdivrs
or
nop
pop
aaa
push
adc
test
sbb
inc
mov
movsl
les
je
mov
or
add
or
jb
xchg
cmp
sub
fadds
or
pop
adc
jae
lcall
mov
push
roll
adc
push
sahf
in
xchg
iret
or
push
mov
jg
sti
push
mov
outsb
adc
dec
push
lock
cmp
jecxz
and
cwtl
xor
pmaxsw
in
arpl
mov
mov
fsubrl
inc
mov
fmuls
jmp
in
int
and
xor
sahf
dec
fcomp
xchg
inc
mov
adcl
cmpsl
fisubs
xchg
fists
in
inc
scas
mov
repz
bound
mov
jmp
lods
dec
jp
cmp
call
into
scas
aam
push
out
adc
fidivs
pop
fs
mov
mov
lret
xchg
aad
loopne
xlat
or
mov
test
pop
push
imul
loop
cli
pop
stos
mov
sub
testl
mov
cmpsl
mov
push
aam
xchg
mov
lods
loopne
mov
mov
mov
fidivs
xchg
cmp
xchg
movsb
and
sbb
push
js
outsl
stos
and
mov
xchg
mov
add
ja
in
ss
add
out
or
in
jb
jg
xor
test
mov
ret
add
test
cli
popf
sar
mov
mov
xlat
mov
jne
sbb
daa
mov
fmull
int3
std
dec
pop
pushf
popa
les
mov
or
ja
rcrb
dec
sub
jmp
dec
inc
sub
insl
sub
sbb
jno
inc
pop
pop
or
inc
add
adc
aas
neg
nop
repnz
loopne
jg
mov
cmpsl
cmp
test
dec
test
aas
rorb
imul
xor
imul
xchg
jbe
jb
xchg
lcall
dec
mov
jb
addr16
int3
stos
or
jmp
cmp
inc
loop
dec
clc
xor
gs
addr16
ss
push
scas
sbb
cwtl
push
push
je
icebp
cmc
stc
pop
jge
pop
inc
pop
cmpsb
sti
xchg
ljmp
xchg
ja
jne
loopne
cmc
loop
insb
and
fs
imul
lds
mov
pop
ljmp
push
pop
inc
scas
mov
inc
addr16
adc
xlat
or
ds
je
cmpsl
std
mov
fwait
cmpsb
fisttpll
in
cld
mov
xlat
inc
jo
das
ja
popf
xlat
int
insb
pop
adc
jae
repz
arpl
jg
js
sbb
imul
fildl
gs
fsubrl
dec
cltd
mov
cmp
jno
mov
gs
mov
mov
pop
adc
mov
push
lret
test
xchg
stos
ret
add
and
cli
andnps
lock
out
subb
rclb
cli
aaa
push
jle
movsl
and
aad
lea
xchg
pop
sbb
mov
and
call
and
fs
test
ficompl
adc
ss
ss
out
mov
inc
stos
cmp
mov
in
shrb
jmp
xor
add
mov
sar
mov
cmc
fdiv
push
add
imul
jecxz
xchg
push
in
popa
add
mov
in
cmp
cld
bound
jmp
inc
in
out
push
iret
adc
mov
push
xchg
xchg
adc
xor
add
mov
dec
xor
xor
stos
dec
cmp
enter
sbb
cmp
pop
daa
dec
andb
sarb
jg
sbb
fiaddl
add
inc
loopne
repnz
fidivl
rclb
xchg
dec
adc
movsb
repnz
cmc
pop
mov
sbb
dec
mov
out
fnstenv
mov
negb
dec
mov
or
inc
cmpsb
lock
sub
sub
mov
dec
fmull
jno
cmp
enter
ss
loope
in
sti
jbe
das
dec
mov
cwtl
popa
sub
int3
je
mov
stos
mov
in
and
xor
mov
jnp
popa
xchg
aad
or
xor
mov
popl
or
inc
cmp
pop
aas
outsl
lret
jg
cmp
into
fs
cli
out
pop
pusha
in
adc
xchg
xor
outsb
add
in
or
nop
inc
sbb
stos
and
rolb
dec
fadds
jnp
stc
int3
fdivrp
mull
push
jns
adc
or
adc
dec
inc
js
and
cmp
aad
mov
lods
ljmp
sub
incb
and
adc
cmpsl
arpl
clc
pop
xlat
push
sahf
bswap
jns
xchg
out
xlat
adc
and
sub
inc
inc
add
clc
divb
mov
push
test
cmpsb
mov
jo
mov
jmp
ret
or
mov
jbe
add
sub
scas
cmpsl
and
rorl
xchg
and
xchg
andb
rcll
dec
inc
cmpl
cmp
add
and
mov
xor
loopne
and
popa
sbb
xchg
mov
aas
sub
add
push
dec
rcrl
mov
mov
sbb
out
sbb
xchg
adc
cmp
stos
popa
adc
cmp
mov
adc
les
mov
rclb
aam
inc
movsl
repz
cmpb
repz
cld
cli
inc
mov
adc
int3
mov
sub
pop
sub
jl
jmp
out
pop
sub
int
jo
lcall
xor
arpl
jle
inc
repnz
loop
cltd
lock
shll
push
pop
mov
or
int
ja
inc
rol
and
and
imul
and
lods
mov
nop
cli
lahf
push
dec
mov
inc
and
out
movsb
and
dec
mov
mov
or
gs
popf
jecxz
sbb
arpl
cmpsl
shll
nop
dec
das
jg
push
cmp
push
test
adc
inc
pop
leave
call
popf
jae
inc
in
mov
push
cmp
sbb
out
ss
mov
in
fstpt
jp
mov
lods
xchg
mov
push
and
je
xchg
sub
aam
int
rolb
mov
mov
aam
in
inc
push
lods
fdivrl
inc
cltd
mov
xor
cltd
subl
dec
loop
std
lods
xlat
jb
pop
fildll
lret
mov
xor
fs
data16
repz
add
mov
add
push
sbb
ret
sub
push
inc
ss
inc
push
cmp
inc
repz
out
mov
movsb
out
adc
dec
or
mulb
mov
mov
fnstcw
cmpsb
mov
and
and
pushl
lds
in
mov
pop
jae
cwtl
xor
scas
aad
or
test
fwait
aam
xor
cmpsl
out
dec
push
push
negl
lock
in
inc
int3
xor
lock
add
movsb
push
fstpl
dec
xchg
inc
mov
pusha
dec
mov
jne
jle
in
das
and
das
fldcw
aam
repz
cmc
sbb
test
inc
test
inc
adc
adc
fwait
push
insl
adc
jge
mov
pop
fbstp
add
add
adc
lahf
mov
xorb
mov
dec
hlt
or
xchg
fistpll
push
jle
mov
test
xor
jle
repz
xor
xchg
pushf
or
leave
xor
mov
test
xor
add
mov
roll
and
ret
cmc
xchg
enter
sahf
mov
xchg
dec
jns
xchg
jbe
cli
xor
inc
sti
sbb
and
es
sahf
nop
mov
cmp
mov
or
add
pop
fildl
adc
jno
xorl
jno
mov
jns
mov
iret
mov
imul
dec
ret
mov
enter
cmpsl
pop
repz
imul
mov
jnp
in
xor
mov
into
sub
mov
leave
dec
mov
jo
xlat
sub
sbb
and
mov
mov
push
sbb
movsl
cmp
lret
rcrl
mov
aaa
std
movsl
ljmp
add
sub
sbb
fcompl
mov
push
jp
dec
jle
and
leave
xlat
lods
fildll
mov
pop
mov
xchg
cmpsl
fdivrp
xlat
rol
out
add
push
movsb
rclb
dec
sbb
sub
fwait
add
jbe
out
mov
jecxz
out
or
sub
movsb
pusha
shr
push
push
aam
sbb
test
pop
adc
add
jg
les
call
sub
fstpl
push
and
adc
cltd
or
jp
dec
dec
icebp
xchg
mov
push
xchg
xchg
and
jns
adc
xchg
aam
fldt
jnp
je
pop
ja
mov
bound
imul
or
push
push
mov
inc
fs
divb
xor
push
iret
mov
pop
popf
sahf
enter
pop
adc
jmp
arpl
dec
jge
push
jge
leave
ficompl
aas
push
adc
mov
jb
testb
incb
dec
pop
jmp
aas
adcb
or
mov
push
cmp
mov
in
stos
inc
pop
call
push
in
cli
add
es
pop
dec
mov
and
lods
lods
fsubrl
mov
fdivs
out
adc
and
clc
ljmp
and
scas
mov
gs
les
sti
lods
loopne
inc
mov
ss
xor
daa
andb
adc
push
inc
mov
lcall
jbe
hlt
cmp
mov
pop
ljmp
ss
das
cmpsb
jge
fwait
sbb
adc
and
in
sbb
ljmp
repnz
fiadds
cmp
scas
mov
lahf
mov
jns
cmpsb
lss
incl
xchg
dec
xlat
cld
add
stos
xor
das
inc
addr16
jae
outsb
jge
sti
bound
jge
movsb
loopne
jle
mov
fwait
push
mov
cmc
inc
imul
lret
mov
ljmp
out
sbb
clc
jno
cmp
pop
xchg
xchg
decl
cmpsl
jmp
aaa
sub
pop
rep
xchg
cmp
fsubrs
lds
enter
fs
mov
fwait
adc
pushf
pop
sbb
push
lahf
cltd
jno
pop
repz
mov
mov
push
add
fldt
and
test
dec
lcall
jle
loop
xchg
ret
mov
mov
push
xchg
bound
adc
scas
or
fidivs
sbb
in
cmp
mov
or
pop
or
loope
xor
sbb
in
xchg
dec
xor
mov
lods
cmp
mov
and
out
insb
loop
stos
inc
jno
pop
mov
repnz
dec
sbb
movsl
stos
mov
dec
mov
dec
push
out
mov
imul
ret
sub
mov
push
fisttpll
fadds
push
push
sahf
cwtl
mov
hlt
clc
out
rol
js
cmp
cmpl
mov
inc
xor
lret
sub
pop
mov
jbe
in
dec
inc
push
add
dec
inc
movsl
push
push
sub
mov
arpl
test
aam
xchg
or
dec
mov
cmpsb
xchg
sbb
test
pop
add
fdiv
xchg
aad
nop
add
imul
lahf
cli
jo
mov
mov
push
imul
jg
lret
adcb
adc
scas
mov
dec
mov
jae
nop
fwait
lahf
jae
mov
or
or
adc
cs
lods
leave
dec
sub
mov
aas
mov
lock
and
and
or
xchg
fcmovnb
dec
jnp
addr16
shrb
mov
mov
sbb
cmc
lret
shld
fs
add
mov
add
push
dec
sub
add
scas
mov
es
jne
test
xlat
xor
dec
pushl
mov
cmp
cmpsb
adc
pop
les
jb
mov
mov
jnp
and
cmp
cmp
xchg
cmp
dec
pushf
push
xchg
test
or
in
sbb
jns
shl
psubd
insb
ret
loop
push
fistpl
mov
loope
mov
out
fidivs
mov
shl
stc
les
sub
inc
stc
stc
lea
push
lods
push
adc
aaa
dec
jne
das
pushf
xchg
dec
mov
test
mov
imul
fcomps
jge
and
dec
dec
inc
xchg
stos
and
into
idivb
sbb
jo
aaa
shll
out
mov
add
imul
test
inc
ret
mov
or
test
xchg
daa
pop
in
cmp
ljmp
cltd
inc
xlat
xor
and
sti
lock
dec
sub
pop
lret
loope
mov
shll
test
dec
and
lahf
add
mov
add
int3
dec
or
lcall
mov
in
pop
nop
xor
push
cmp
push
sub
std
jl
fwait
adcb
stos
xchg
inc
xorb
push
mov
pop
movsb
push
stos
push
jp
xchg
inc
mov
push
sub
sbb
push
dec
pop
test
ret
inc
sub
cmp
repz
shl
sbbl
cltd
inc
std
ljmp
inc
inc
pushf
push
shrl
movsl
jg
xor
lods
add
out
push
les
lahf
and
dec
or
in
cmp
push
outsb
jns
cld
pop
cmp
add
fcmovb
xchg
xchg
adc
fiaddl
xor
lods
pop
jecxz
jmp
mov
cmp
imul
mov
pop
repz
dec
into
fdivrs
mov
arpl
repz
fisubs
inc
scas
push
mov
mov
push
mov
adc
inc
mov
insl
stos
pop
clc
insb
movsl
xor
sbb
test
dec
xor
pusha
and
das
cld
scas
jo
push
inc
cmp
ja
inc
pop
lret
popf
cmp
pop
testb
add
sbb
cmpsb
adcb
push
add
xor
int
fs
and
mov
pushf
add
xchg
in
lods
subl
adc
test
xor
dec
mov
dec
push
sub
in
cmp
sub
inc
jno
adc
outsb
push
pop
pop
xchg
pop
adc
pop
fmuls
push
xchg
lahf
int3
pop
sbb
mov
lods
push
repz
add
pop
cmp
fldenv
adc
jg
push
rcl
xor
add
pop
sub
mov
dec
nop
sar
pop
addb
mov
cmpsb
mov
sub
xchg
mov
loop
dec
jns
fstpt
xor
and
stc
pushf
cmc
aam
mov
xor
fsubs
fs
add
lret
neg
fnstcw
iret
stos
pop
insl
pop
enter
mov
push
lahf
jmp
lea
cmc
mov
shll
insl
shll
and
cmp
and
mov
and
divl
repz
mov
mov
add
jmp
sbb
push
outsb
mov
dec
sub
in
xchg
dec
fneni(8087
rcrb
cmpsb
loope
push
lahf
cmpsl
or
mov
ljmp
mov
cmpb
cmpsb
push
jmp
call
movsl
push
lock
scas
bound
push
aad
and
test
jecxz
jnp
xor
in
or
icebp
jno
scas
inc
pop
pop
ret
xor
xchg
cmp
jmp
xlat
and
xchg
mov
adc
lock
cmp
dec
pusha
loopne
ds
pop
jle
aas
sbb
jp
dec
lret
jp
fisttps
mov
mov
pop
push
es
lea
mov
int
in
repnz
popl
icebp
sar
arpl
mov
cmp
sub
pop
mov
jbe
ljmp
lods
or
fisubrl
and
mov
hlt
push
jmp
xchg
mov
test
xor
nop
mov
mov
sub
dec
pop
adc
cmp
repz
cltd
xor
imul
insl
test
clc
add
out
adc
ret
loopne
fidivl
or
jno
fucomip
fisubrl
stc
push
adc
pop
hlt
lods
enter
data16
lcall
jp
xlat
data16
xchg
inc
call
in
pop
inc
pop
mov
cmc
or
mov
clc
in
jbe
sahf
sti
jbe
daa
in
mov
pusha
icebp
inc
or
pop
mov
mov
xchg
ds
inc
cmpl
call
loop
cmp
int
cmp
pop
pop
cmp
cmp
push
cs
push
stos
add
cltd
xor
push
pop
xchg
mov
push
repnz
test
aad
pmulhuw
clc
push
ds
xor
cmp
pop
pop
or
lea
xor
shll
rcl
add
fwait
and
pop
push
jp
inc
out
dec
jo
mov
push
lahf
pop
jmp
pop
xor
frstor
adc
fcmovbe
dec
jo
loopne
leave
mov
fstl
scas
push
dec
xchg
stc
rorb
je
lahf
cmp
scas
push
mov
enter
push
add
setbe
or
into
enter
repnz
push
adc
inc
shll
leave
xor
dec
ss
dec
mov
ret
stos
inc
fwait
jo
nop
xor
fwait
data16
addr16
push
es
jb
push
mov
mov
jge
rclb
loope
loope
mov
je
loop
outsl
sub
dec
push
sub
testl
aas
sub
jb
test
cmp
pushf
push
cwtl
adcl
cmp
js
xchg
sub
roll
mull
aam
fcmovu
rcrl
push
inc
mov
mov
mov
push
rclb
push
ja
out
dec
and
dec
cld
fld
les
xor
repnz
test
jb
roll
adc
imul
sub
nop
sbb
push
das
xchg
or
mov
sub
inc
cmp
addl
cmp
jge
push
xchg
mov
nop
int3
iret
sbb
pop
das
sti
daa
fwait
shl
idiv
add
jmp
xor
sbbb
ret
xchg
daa
mov
aam
and
imul
sbb
inc
inc
lods
mov
xchg
in
inc
pop
xchg
add
push
push
out
popa
adc
out
mov
pop
cwtl
sarw
stos
pop
fwait
cmp
jno
inc
dec
fwait
imul
adc
push
pop
imul
mov
sbb
cvttps2pi
push
cmpsb
mov
dec
push
mov
cli
mov
xlat
and
mov
jb
lds
cmp
adc
or
pop
pop
pop
scas
jns
xchg
adc
cmpsb
int
pop
add
out
ljmp
nop
aam
cmpsl
clc
testb
jae
xor
test
out
movsl
adc
xchg
pop
cld
into
aas
ljmp
cld
fildl
xchg
dec
xchg
hlt
pop
mov
pop
xchg
xchg
popf
xor
adc
push
mov
cmp
test
push
test
cmp
or
add
loopne
sub
lret
sub
dec
pop
cwtl
pop
shrb
xchg
mov
sbb
xchg
aas
sub
movsl
mov
xchg
pop
xchg
ror
mov
loop
jne
sub
inc
loope
in
js
insb
popf
stc
subl
ficoms
lcall
jo
mov
scas
inc
sti
addr16
cmp
jge
cltd
cs
mov
add
mov
and
div
out
hlt
shll
test
scas
xor
xor
pop
and
pop
jns
jno
xor
dec
loopne
js
mov
arpl
lock
adc
movsb
out
loop
pop
cmpsb
push
mov
outsl
lret
negb
adc
xchg
and
push
pop
pop
or
addr16
aaa
imul
call
add
xlat
movsb
mov
pop
mov
jl
dec
xchg
vmovaps
lcall
dec
xor
xchg
cwtl
xor
lea
in
lahf
jmp
pop
push
addr16
fsub
fstps
xor
mov
pop
pop
lahf
dec
and
sbb
push
cmpsb
xchg
outsb
add
or
jle
xchg
imul
cmpsl
loope
lahf
cmp
nop
cmc
shll
outsl
and
sub
call
mov
repz
mov
addl
or
and
rol
inc
test
jecxz
test
fwait
xor
push
push
lret
clc
pop
out
sbb
jns
loop
rcl
andb
test
popf
mov
mov
pop
cmp
pusha
push
lahf
push
and
cmp
fcompl
mov
mov
and
xchg
lret
push
ret
fs
cmp
dec
mov
xor
and
clc
xchg
in
cmp
lods
adc
inc
cmc
inc
xchg
sbb
fidivs
es
inc
xor
sbb
mov
push
mov
jmp
cmpb
sub
sub
pushf
movsl
mov
sub
lret
ficomps
cmpsb
cmp
das
sub
cmp
ret
cli
or
mov
popf
add
cmp
jmp
in
insl
popa
sbb
xchg
pop
pop
push
or
cltd
fidivrl
jno
dec
popa
inc
sar
or
dec
addr16
or
jecxz
and
xor
dec
shlb
dec
sbb
pop
add
jmp
sahf
cli
cmovnp
pop
or
adc
mov
nop
cli
adc
xor
dec
ja
arpl
repz
inc
add
loop
out
or
mov
shrl
cmpb
jg
pop
cld
push
mov
cltd
mov
lahf
inc
xchg
cld
repz
sbb
or
test
jecxz
rclb
xchg
pusha
and
inc
cmpsl
lcall
adc
movsb
bound
dec
adc
aam
clc
or
pop
push
pop
xchg
outsl
xor
fcmovu
popa
ljmp
add
cli
jno
out
fnstenv
cmp
xchg
rol
das
xor
adc
mov
sub
int3
push
fstl
sub
xchg
mov
mov
imul
jp
flds
mov
sub
rclb
jno
pop
pop
cmp
add
push
xor
xchg
ds
mov
inc
push
push
sbb
lea
push
popf
mov
mov
fmul
in
jns
adc
fimull
inc
dec
add
pusha
mov
adc
add
aad
outsb
jle
popf
mov
inc
pop
lods
xchg
fisubl
sub
xchg
stos
bound
adc
pusha
push
pop
push
mov
jle
rol
lea
fisttpll
stos
inc
adcl
cmp
dec
sbb
xorl
imul
shll
or
stc
cmp
fldenv
pop
lret
sbb
lock
dec
lfs
pop
jmp
jecxz
jne
out
scas
iret
test
mov
test
xlat
aas
push
xor
adc
fdivr
in
sahf
ja
xchg
bnd
test
xchg
mov
push
aas
out
mov
xor
jmp
cmp
cmpsb
sub
dec
ret
push
xchg
hlt
xor
out
mov
jno
lods
xchg
pop
xchg
es
ficompl
fmuls
adc
dec
aam
test
push
mov
sub
or
lea
jmp
push
lods
fstl
mov
mov
ret
mov
pop
je
xchg
outsb
andl
stc
pop
jg
mov
or
dec
ja
scas
sub
xor
movsb
dec
sarb
int3
push
sub
ja
sub
jg
daa
jb
pushf
loop
and
xor
sahf
lods
mov
sub
add
mull
xchg
fwait
push
jmp
jle
adc
test
inc
ja,pt
add
test
xchg
popf
mov
cmp
cmpsl
jl
mov
pushl
mov
pop
jbe
daa
push
movsl
not
insl
xor
or
lock
mov
lahf
gs
push
lret
cmp
aam
add
mov
sbb
sub
push
out
dec
mov
pop
mov
xor
dec
xlat
push
adc
xor
ficomps
xor
test
jo
mov
fsubrs
das
cmp
in
ret
in
ror
add
mov
sarb
data16
mov
xchg
push
pop
enter
sbb
mov
clc
enter
ficoml
pop
xor
out
and
cmp
adc
fwait
data16
add
dec
stc
or
or
jb
pushf
pop
xor
sbbl
add
sar
mov
dec
cmp
rcll
xchg
shrb
push
xchg
movsl
sti
pop
cmp
sub
fisubrs
mov
enter
xchg
test
out
lcall
mov
sub
mov
pop
mov
addr16
cli
cmpsb
push
mov
enter
mov
out
add
mov
jns
and
cwtl
movsb
pop
inc
test
add
jmp
sub
icebp
pop
pop
mov
jp
push
aad
cmc
iret
stos
push
stc
push
and
icebp
aas
xor
adc
dec
push
loope
stos
mov
insl
into
mov
cmpsb
test
movsb
arpl
iret
insl
lret
xor
out
mov
test
inc
loop
nop
jbe
pop
sub
push
mov
inc
push
outsl
cmpsl
sbb
push
cmc
pop
ror
out
loop
add
lcall
xlat
out
enter
aaa
pop
mov
cmp
out
add
pop
dec
push
mov
xchg
or
fcmovnb
pushf
jbe
mov
or
dec
in
clc
iret
xchg
or
fnstsw
push
add
jle
pop
xchg
ljmp
dec
mov
stc
inc
lds
sbb
pop
dec
inc
mov
out
les
and
dec
cli
call
gs
adc
fcoml
xchg
mov
iret
out
and
mov
scas
xor
dec
hlt
rorb
pop
xchg
aas
mov
mov
pusha
jp
test
dec
mov
mov
adc
xchg
push
sti
jge
add
xchg
dec
push
call
test
das
push
test
xor
adc
in
jbe
push
jp
mov
and
sbb
out
push
ret
sbb
fsubl
add
addr16
sub
inc
lock
ret
jbe
icebp
stos
push
das
mov
sbb
inc
shlb
sbb
jo
ss
pop
cwtl
sbb
pop
cmp
push
out
je
sub
xchg
pop
fbld
dec
adc
aaa
les
in
scas
jbe
lds
insl
test
xchg
stos
or
in
rcl
in
vphaddwd
in
adc
out
divl
mov
lds
pop
mov
inc
mov
sbb
and
es
push
fistl
push
ret
push
stos
aaa
enter
repnz
addl
add
add
popa
cmpsb
mov
dec
inc
fwait
into
mov
push
or
into
cltd
xor
dec
cld
sbb
mov
dec
mov
mov
pop
push
jecxz
sub
ret
sbb
gs
sub
js
divb
or
into
packuswb
cmpsl
pop
pop
aad
inc
test
bound
jns
bnd
std
mov
jmp
daa
jno
popa
lret
adc
orb
ds
dec
scas
and
fcmove
dec
rorb
outsb
sub
loopne
mov
and
xlat
dec
dec
out
adc
jmp
sub
add
jbe
scas
cmpsb
out
push
cltd
out
je
outsb
sub
add
jle
ja
xchg
icebp
jp
nop
outsl
rcr
or
mov
sarb
cmpsb
fs
push
test
pop
jno
outsb
fwait
or
push
out
insb
inc
sbb
idiv
mov
jle
mov
jge
jle
pop
inc
or
mov
imulb
cmpsl
test
sbb
loop
lock
std
imul
out
mov
cli
pop
mov
inc
pop
ss
lret
xchg
jp
test
imul
mov
pop
movsl
gs
rep
stos
xchg
out
pop
and
jle
les
cmc
push
sbb
fidivl
pushf
sbb
aam
and
movsb
lret
push
xor
call
aam
outsl
cld
jmp
push
push
inc
add
shlb
fsubs
mov
dec
sbb
inc
or
arpl
push
jle
icebp
in
dec
lods
andl
mov
ljmp
mov
lret
adc
in
fiaddl
jbe
pop
gs
push
gs
adc
or
push
cmp
xchg
pop
mov
gs
xchg
bound
sub
mov
xchg
sbb
fstpt
fildl
shrb
frstor
test
pusha
cmp
loopne
or
push
mov
xchg
dec
mov
jge
ds
mov
ja
cmc
lret
jae
cld
mov
int
out
add
pop
mov
jb
std
push
stos
mov
fsubrl
call
repnz
sar
loop
mov
xor
pop
push
mov
out
push
pop
xor
pop
add
xchg
shlb
xchg
push
push
ret
ret
mov
ficomps
fst
or
jmp
hlt
es
ret
rcl
cmpsb
insb
imul
sbb
xor
adc
jg
ja
imulb
pop
fmulp
or
popf
loope
aad
clc
mov
inc
cmc
jne
lea
push
mov
mov
ret
adc
xchg
xor
sub
pop
das
xor
fnsave
scas
mov
lds
nop
fistpll
mov
js
cmp
leave
xor
xchg
cmp
lods
jecxz
stc
mov
rorl
arpl
stos
jbe
pop
cmp
jb
cmp
sbb
scas
daa
mov
mov
sbb
add
mov
xchg
push
sbb
push
cli
mov
adc
fs
xor
sbb
dec
int3
or
jno
sbb
dec
int3
adc
rcll
fbstp
fmull
shr
jno
add
popa
inc
sti
mov
mov
fadds
fbld
sub
sub
sub
int
lods
mov
in
mov
xchg
push
sub
cmp
out
fidivrl
or
mov
or
hlt
pop
test
and
roll
mov
dec
jp
push
lcall
pusha
adc
test
xor
popa
inc
jp
add
dec
mov
pop
mov
mov
mov
pop
or
cld
cmp
lahf
xlat
lret
xchg
stc
mov
jle
imul
dec
fs
das
scas
cmp
inc
cmp
pushf
pop
xor
jae
outsb
push
das
jae
mov
fcoml
mov
sbb
and
mov
xorl
pop
xchg
jl
mov
mov
mov
std
cs
cld
xchg
add
add
or
ret
stos
dec
out
fdivp
imul
mov
adc
movsb
xor
fsubrs
jnp
push
inc
push
in
imul
cmpsl
daa
or
mov
push
mov
imul
ret
addb
xchg
test
shrl
pop
xor
xor
add
out
add
in
loop
and
popf
mov
cmp
into
inc
pusha
lea
pop
hlt
xchg
xchg
shrl
mov
inc
call
movl
repz
inc
test
cmpsl
mov
ss
cs
shrb
pop
xor
loope
loopne
stos
dec
jp
leave
cwtl
in
mov
pop
or
xchg
adc
sub
fstpt
xchg
ret
push
mov
xchg
inc
fsubrs
mov
mov
sbb
mov
mov
xchg
sbb
mov
aam
idivb
pop
jns
hlt
not
out
pop
adc
cmp
lret
cmp
xor
mov
inc
inc
fs
dec
or
jnp
popf
xor
test
jg
xchg
ficoml
dec
adc
lahf
cmp
cld
scas
add
jmp
pop
jg
or
inc
jmp
xchg
push
adc
enter
aam
das
stc
sbb
xchg
pushf
jo
insb
std
add
xchg
je
push
frstor
int
xchg
ret
ficoms
bound
insl
xor
push
cld
cltd
in
int3
in
add
loop
rcll
sbbl
jecxz
and
insb
andb
mov
push
push
sbb
xchg
pusha
push
mov
insl
sub
inc
inc
aas
cld
sub
xchg
fbstp
inc
jmp
inc
in
or
lcall
shrl
lea
dec
sbb
xor
push
xor
cmp
loopne
das
nop
ljmp
cld
sbb
fldcw
mov
xor
pop
xor
notb
dec
mov
addr16
out
inc
mov
cmp
es
pop
add
mov
pop
cltd
jge
rorb
inc
cmc
test
pop
lea
imul
fdivs
stc
pop
loop
mov
in
cltd
mov
pop
dec
cmp
daa
bound
inc
sub
rclb
dec
dec
int3
repz
rolb
jge
mov
clc
mov
pop
mov
inc
arpl
stos
jnp
and
outsl
outsl
adc
jns
outsl
sbb
jmp
or
push
loop
sub
push
sub
jns
cmp
fyl2xp1
xor
cmp
movsb
rolb
data16
jno
jbe
fsubrl
aad
loopne
cmc
pop
aaa
add
cmc
bound
mov
shrb
xlat
jl
push
xor
ficompl
xor
out
out
add
testb
fwait
adc
jg
lods
mov
dec
mov
mov
pop
ret
incl
stc
iret
xchg
and
push
lods
jo
cli
pop
fsubrs
sbb
out
push
enter
imul
imul
adc
mov
