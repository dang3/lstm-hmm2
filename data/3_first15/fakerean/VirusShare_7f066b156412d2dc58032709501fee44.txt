dec
and
pop
pop
pop
pop
xor
call
add
ret
cmpl
jne
cmpl
jne
cmpl
jne
lea
push
push
call
add
test
je
cmpl
jae
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
mov
jne
mov
mov
mov
call
test
mov
js
mov
jmp
cmpl
je
jmp
push
lea
sub
push
push
push
mov
xor
push
call
test
je
mov
pushl
lea
call
mov
cmp
pop
mov
pop
in
add
add
lea
mov
inc
push
mov
mov
mov
push
call
test
js
cmpl
je
mov
stos
inc
add
jge
mov
mov
push
call
test
js
lea
mov
lea
mov
lea
mov
lea
mov
lea
xor
push
lea
push
movl
movl
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
lea
push
lea
push
mov
movl
movl
mov
call
mov
pop
pop
lea
push
push
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
jne
testb
jne
mov
dec
fldl
insb
push
push
call
cmpl
je
pushl
call
cmp
pop
je
mov
push
push
push
mov
call
test
je
mov
movw
pushl
mov
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
xor
lea
ret
int3
inc
add
mov
pop
pop
pop
add
leave
ret
mov
push
push
call
jmp
testb
je
jmp
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
pushl
mov
pushl
call
neg
pop
sbb
pop
inc
ret
mov
decl
mov
je
ret
movl
push
movl
call
pop
xor
jmp
push
mov
push
xor
push
push
mov
mov
push
lea
pop
mov
movl
call
test
pop
je
cmpl
jne
pop
pop
mov
pop
ret
call
mov
jmp
pushl
mov
pushl
call
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
push
push
call
cmpb
jne
mov
mov
test
mov
jne
mov
mov
insl
flds
dec
and
shlb
enter
cmp
ja
mov
xor
cmp
je
cmp
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
push
lea
push
call
add
mov
jmp
push
push
mov
mov
test
jne
mov
push
push
call
test
je
test
je
mov
push
call
pop
pop
ret
mov
mov
test
je
mov
mov
cmp
jae
mov
test
je
pushl
mov
pushl
push
call
ret
mov
jmp
xor
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
xor
push
call
test
je
mov
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
je
pushl
call
cmp
pop
je
mov
mov
call
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
mov
add
mov
call
mov
cmp
je
pushl
lea
call
lea
call
lea
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
pushl
call
test
pop
je
push
pushl
call
andl
pop
push
mov
lea
call
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
push
mov
sub
lea
cmpl
push
je
mov
mov
mov
xor
pop
leave
ret
push
mov
push
pushl
mov
call
pop
mov
lea
call
mov
mov
pushl
mov
push
call
test
pop
pop
pop
pop
jne
pushl
pushl
call
mov
pop
pop
jmp
push
mov
test
je
mov
push
mov
call
test
jne
mov
push
mov
call
test
jne
mov
mov
call
test
je
mov
pop
ret
mov
jmp
xor
pop
ret
push
push
push
mov
test
je
mov
mov
call
test
je
mov
call
mov
test
je
mov
mov
call
cmp
jb
mov
test
mov
jne
test
jne
pop
pop
pop
ret
pushl
call
pop
mov
call
mov
mov
jmp
push
mov
and
sub
push
mov
mov
mov
mov
push
xor
cmp
push
mov
je
mov
push
call
pushl
lea
push
mov
mov
mov
mov
push
lea
movb
call
mov
aad
inc
add
adc
push
call
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
lea
call
pop
pop
xor
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
lea
call
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
mov
test
pop
jne
mov
test
jne
mov
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
mov
jmp
push
mov
push
push
push
push
mov
call
test
je
andl
push
mov
mov
add
cmp
je
xor
mov
cmp
mov
je
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
mov
mov
inc
cmp
jne
pop
cmpl
jbe
mov
mov
cmpb
je
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
cmpl
push
push
jle
cmpl
jle
mov
mov
mov
mov
mov
mov
push
lea
mov
mov
movl
call
mov
mov
lea
push
call
mov
mov
mov
add
call
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
call
fstpl
mov
fildl
mov
mov
push
fidivl
mov
fstpl
call
fstpl
mov
add
call
test
je
mov
mov
mov
jmp
mov
mov
cmp
je
movzwl
test
je
movswl
call
movzwl
cmp
jne
lea
push
lea
push
mov
push
mov
call
add
test
je
fildl
mov
mov
push
fidivl
mov
push
fstpl
gs
call
add
fcomps
fnstsw
test
jnp
lea
flds
mov
fstps
sub
lea
fmuls
lea
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
mov
call
mov
mov
mov
mov
mov
add
mov
mov
push
lea
mov
mov
call
mov
mov
mov
test
jne
test
je
mov
mov
push
call
add
test
mov
jne
cmpl
jle
cmpl
jle
mov
lea
call
test
je
xor
lea
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
test
jne
mov
mov
mov
lea
mov
cmp
push
lea
jne
test
jne
xor
test
jne
mov
mov
and
or
jne
xor
test
mov
jne
xor
pop
pop
ret
mov
mov
mov
mov
pop
pop
ret
mov
jmp
push
mov
mov
mov
push
push
mov
push
add
mov
add
decl
inc
cli
push
add
cmp
add
cmp
je
push
call
cmp
pop
je
mov
orl
mov
pushl
mov
call
pushl
mov
push
mov
call
pop
pop
pop
pop
ret
push
mov
push
cmpb
jne
mov
test
movb
jbe
dec
mov
mov
push
lea
mov
push
mov
mov
mov
cmp
jb
mov
test
je
pushl
mov
dec
mov
call
jmp
push
mov
call
mov
pop
mov
movb
pop
leave
ret
movl
jmp
jno
inc
add
incl
std
xor
push
push
mov
push
lea
push
mov
call
test
je
push
push
push
mov
call
test
jne
cmp
je
call
movl
xor
inc
pop
ret
xor
pop
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
test
mov
je
addl
lea
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
push
lea
push
movl
movl
movl
call
orb
cmp
jne
cmpl
je
mov
cmpl
jne
mov
call
test
je
push
mov
mov
call
test
je
mov
call
test
je
push
call
test
je
cmpl
jne
cmp
je
orb
push
call
test
je
add
pop
jne
cmpw
jne
mov
cmpl
jne
mov
movl
mov
add
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
test
je
addl
cmpl
je
mov
pop
pop
pop
mov
pop
ret
test
jne
mov
test
je
push
lea
call
cmp
je
lea
push
push
mov
call
add
test
je
push
push
lea
push
mov
call
test
mov
jne
lea
push
xor
call
test
je
push
mov
mov
call
test
jne
cmp
jne
push
push
push
mov
call
test
je
mov
push
lea
mov
call
test
jne
jmp
mov
call
test
jne
jmp
mov
call
jmp
push
push
lea
push
mov
call
push
push
lea
push
mov
mov
call
cmpl
jne
push
push
push
mov
mov
call
test
jne
cmp
je
push
mov
mov
call
test
je
mov
jmp
lea
cmp
ja
movzbl
jmp
nop
sbb
push
pop
adc
cmp
add
add
add
int3
int3
int3
push
mov
push
call
test
je
cmpl
jne
mov
cmp
jne
mov
pop
ret
orb
xor
pop
ret
push
mov
sub
push
mov
mov
mov
lea
push
call
mov
test
mov
je
andl
push
push
push
mov
add
call
mov
test
je
andl
mov
mov
lea
lea
mov
add
call
push
push
call
xor
cmp
jne
lea
mov
lea
call
push
call
test
pop
js
mov
pushl
mov
push
call
mov
cmp
mov
mov
je
mov
push
call
mov
cmp
je
cmp
jne
pushl
lea
push
call
lea
call
xor
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
call
inc
add
jge
push
mov
call
jmp
sbb
add
add
push
mov
push
jge
push
call
test
pop
je
mov
andl
test
movl
out
inc
add
add
push
add
decl
or
inc
adc
adc
inc
test
mov
je
mov
push
call
cmpl
je
mov
push
pushl
add
mov
push
call
mov
lea
call
mov
pop
pop
pop
ret
mov
push
call
jmp
sub
inc
add
xor
and
call
mov
ret
pushl
call
pushl
mov
push
call
ret
push
mov
sub
push
push
push
lea
call
lea
call
xor
xor
mov
mov
test
jle
xor
mov
or
push
push
mov
lea
push
call
test
je
inc
inc
cmp
jle
test
je
mov
xor
push
inc
call
test
jne
mov
call
test
je
cmp
jg
cmpl
jg
jne
lea
push
lea
push
call
mov
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
mov
add
movl
sub
mov
movl
mov
mov
lea
lea
push
mov
call
test
je
mov
mov
mov
add
cmp
je
cmpl
jne
mov
call
mov
mov
shr
lea
xor
mov
and
inc
shl
or
add
decl
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
inc
pop
pop
pop
leave
ret
mov
jmp
cmpl
je
cmpl
je
cmpl
jmp
dec
je
dec
jne
jmp
dec
je
dec
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
andl
test
jne
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
mov
push
push
call
test
pop
pop
mov
jne
push
call
pop
andl
lea
mov
mov
push
mov
lea
movl
movl
movb
call
mov
mov
mov
mov
lea
push
mov
mov
movl
call
dec
neg
sbb
inc
mov
je
mov
test
jne
cmpl
mov
je
testb
movl
jne
testb
je
jmp
lea
call
lea
call
jmp
push
mov
sub
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
mov
lea
movl
movl
mov
mov
mov
call
test
jne
pushl
lea
call
mov
cmp
je
mov
pushl
mov
pushl
push
call
mov
mov
push
pushl
pushl
push
call
lea
call
inc
add
call
inc
add
pop
leave
ret
mov
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
push
mov
movl
movl
cmpl
je
push
lea
push
call
pushl
call
pop
pop
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jmp
mov
mov
dec
mov
shl
add
add
call
test
jne
test
ja
mov
test
ja
mov
test
ja
mov
call
inc
add
rolb
pop
pop
leave
ret
mov
mov
mov
shl
mov
sub
lea
lea
mov
sub
sub
cmp
jne
decl
mov
mov
lea
mov
call
test
je
cmpl
jbe
jmp
mov
lea
push
mov
or
lock
dec
jne
lea
test
movl
je
push
push
lea
movl
loop
add
mov
push
add
add
inc
sbb
adc
test
js
push
call
test
pop
je
mov
test
je
push
call
test
pop
je
push
call
pop
pop
pop
xor
pop
ret
push
call
pop
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
cmp
je
testb
push
mov
je
mov
mov
push
push
push
pushl
push
call
pop
lea
call
xor
pop
leave
ret
push
mov
testb
je
push
push
push
pushl
pushl
push
lea
push
call
mov
add
cmpb
je
xor
push
inc
call
mov
test
je
mov
test
jbe
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
push
mov
je
mov
mov
push
call
mov
test
mov
je
mov
push
mov
call
mov
test
mov
je
mov
mov
push
call
mov
cmpl
mov
je
mov
cmpl
je
cmpl
push
mov
je
cmpl
je
push
call
add
test
je
mov
mov
call
test
mov
je
add
mov
mov
mov
mov
add
push
push
push
call
mov
mov
mov
mov
add
xor
test
je
cmp
je
lea
cmp
je
mov
mov
cmp
jne
jmp
mov
mov
add
mov
test
mov
jne
test
je
add
mov
test
mov
je
addl
cmpl
je
cmp
je
cmpl
jne
mov
mov
cmp
jge
cmpl
jne
movl
mov
cmp
jge
cmpl
je
mov
mov
xor
mov
mov
call
test
mov
jne
mov
mov
mov
mov
mov
mov
test
je
lea
cmpl
je
cmpl
je
cmpl
jne
mov
call
mov
push
call
mov
mov
mov
addl
cmpl
je
test
je
mov
mov
push
call
test
je
mov
mov
push
call
lea
call
pop
pop
pop
xor
pop
add
ret
push
call
add
test
je
mov
call
mov
mov
test
mov
je
add
mov
test
mov
jne
test
mov
je
add
mov
test
mov
jne
add
mov
test
mov
je
call
jmp
xor
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
push
mov
xor
cmp
push
mov
mov
lea
push
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
call
lea
push
lea
push
mov
movl
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
cmp
mov
lea
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
mov
call
mov
lea
push
lea
mov
push
mov
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
mov
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
mov
lea
push
mov
mov
mov
push
push
call
cmp
je
mov
mov
outsb
in
inc
add
sbb
call
push
mov
add
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
push
push
push
push
xor
call
add
test
js
cmpw
jne
mov
mov
push
push
push
call
mov
lea
mov
mov
add
add
lea
mov
movl
movl
mov
mov
push
push
mov
call
push
mov
call
test
je
mov
lea
push
push
call
mov
add
test
je
mov
add
push
call
add
test
je
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
je
mov
mov
push
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
mov
call
add
test
jne
mov
push
call
add
jmp
mov
add
call
mov
jmp
push
mov
push
andl
push
push
push
lea
mov
call
mov
pushl
mov
push
lea
call
cmpl
pop
pop
jne
xor
lea
call
pop
mov
pop
leave
ret
push
pushl
call
pop
call
mov
cmp
jb
push
push
push
pushl
mov
call
pushl
xor
add
adc
mov
mov
call
pop
mov
pop
ret
mov
test
je
mov
mov
mov
mov
mov
xor
ret
push
mov
sub
mov
andl
push
push
mov
lea
call
mov
test
je
mov
lea
push
lea
push
call
test
js
mov
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
lea
call
pop
leave
ret
mov
push
mov
lea
call
mov
mov
push
add
push
push
call
and
neg
sbb
and
pop
ret
push
mov
push
push
push
lea
cmpl
movl
movl
jne
lea
call
mov
call
lea
call
pop
leave
ret
sub
push
mov
mov
push
push
push
xor
or
mov
lea
jne
mov
mov
lea
push
add
push
lea
movl
movl
mov
call
mov
test
jne
test
jne
mov
push
lea
call
mov
cmp
je
push
push
lea
mov
push
lea
movl
movl
mov
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
mov
mov
push
push
mov
lea
movl
mov
mov
mov
mov
push
push
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
movl
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
test
mov
je
mov
push
mov
call
mov
mov
mov
push
call
test
js
mov
push
push
push
push
call
mov
test
je
mov
mov
push
call
lea
call
lea
call
xor
pop
pop
pop
pop
add
ret
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
mov
je
add
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
movzwl
test
je
push
lea
mov
call
add
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
pushl
call
cmp
jne
lea
call
mov
cmp
jne
inc
add
fimuls
add
pop
pop
mov
pop
ret
mov
movl
xor
ret
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
jne
movl
movl
movl
mov
test
movl
jne
push
push
mov
lea
push
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
mov
jne
test
jne
mov
test
jne
mov
test
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
andl
mov
lea
call
cmpl
je
mov
test
je
pushl
mov
call
mov
mov
lea
call
lea
call
xor
leave
ret
jmp
int3
push
mov
and
sub
push
push
push
mov
mov
test
je
mov
mov
mov
mov
xor
and
or
mov
mov
jne
mov
and
xor
or
je
mov
mov
mov
push
mov
call
test
jne
mov
mov
mov
xor
mov
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
mov
mov
push
push
lea
push
push
push
call
mov
cmp
jne
mov
andl
pop
pop
pop
mov
pop
ret
mov
mov
mov
push
add
push
mov
call
test
je
jmp
mov
cmp
je
mov
call
test
je
mov
mov
push
mov
call
mov
and
add
or
je
cmpl
jne
mov
call
test
jne
mov
mov
mov
mov
mov
movl
movl
movl
push
call
add
jmp
mov
and
or
je
mov
xor
jmp
int3
push
mov
push
mov
mov
mov
push
mov
sub
test
jne
mov
mov
mov
add
push
push
push
call
add
mov
mov
add
push
push
lea
push
call
add
pop
pop
pop
ret
mov
mov
cmp
mov
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
ret
mov
jmp
push
mov
mov
test
jne
mov
mov
mov
mov
add
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
mov
cmp
jge
inc
mov
cmp
jge
xor
pop
pop
ret
mov
jmp
mov
mov
cmp
jae
mov
push
mov
test
je
mov
push
call
mov
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
mov
mov
push
push
call
mov
mov
xor
pop
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
xor
inc
pop
pop
ret
xor
jmp
push
mov
mov
test
jbe
mov
dec
mov
lea
cmpl
je
mov
mov
push
call
mov
mov
andl
mov
test
jne
xor
pop
ret
orl
orl
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
push
movl
call
mov
add
cmpl
lea
jne
push
lea
call
mov
push
call
mov
mov
lea
lea
lea
add
cmp
jb
mov
lea
lea
lea
cmp
jne
push
push
push
lea
push
mov
call
mov
cmp
jne
pop
pop
pop
pop
add
ret
mov
jmp
lea
mov
mov
call
add
cmp
jb
mov
jmp
lea
mov
lea
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
mov
call
add
test
je
add
add
cmp
mov
jne
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
movl
je
push
call
pop
mov
pop
ret
push
mov
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
push
mov
movl
movl
add
js
mov
add
add
jne
mov
test
je
push
call
test
pop
je
andl
mov
test
jne
mov
test
jne
mov
test
mov
jne
test
jne
lea
call
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
cmp
jge
xor
cmp
jne
testb
jne
lea
mov
mov
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
mov
movb
cmpb
jne
cmpb
jne
mov
mov
lea
push
push
mov
call
test
js
mov
lea
push
mov
push
push
call
add
test
jne
lea
mov
mov
mov
push
push
mov
call
cmp
jne
lea
push
mov
call
call
push
push
push
push
call
orl
mov
mov
test
jne
test
jne
testb
jne
push
lea
movl
call
mov
mov
lea
push
call
add
cmpl
je
push
call
add
test
je
mov
call
mov
test
je
mov
mov
push
call
mov
test
lea
mov
jne
cmpl
je
mov
and
jne
test
jne
push
mov
call
push
lea
movl
call
mov
mov
call
mov
lea
push
lea
push
movzbl
push
push
mov
shr
and
push
mov
push
lea
push
push
mov
push
push
call
test
js
mov
mov
add
test
movl
jne
push
push
push
push
push
push
push
call
add
lea
mov
call
lea
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
testb
je
jmp
int3
int3
int3
int3
sub
mov
xor
mov
add
push
mov
push
push
mov
mov
mov
mov
mov
mov
xor
cmp
mov
mov
je
cmp
jne
movl
xor
test
js
mov
mov
push
lea
lea
movl
movl
mov
mov
mov
call
cmp
je
push
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
xor
jmp
mov
jmp
lea
movzwl
push
call
add
test
jne
cmp
jae
mov
nop
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
add
cmp
jb
lea
mov
xor
mov
mov
sub
mov
lea
lea
mov
movl
movl
mov
call
add
push
mov
mov
mov
call
test
jne
mov
cmpw
je
mov
push
mov
call
add
xor
push
lea
mov
call
add
lea
push
push
mov
mov
movl
movl
mov
movb
enter
add
push
lea
push
lea
push
call
mov
mov
add
test
jne
test
jne
test
js
mov
cmp
je
cmp
je
mov
mov
push
push
push
mov
call
lea
call
mov
test
jne
test
jne
nop
mov
xor
jmp
lea
nop
mov
cmp
jb
mov
push
mov
lea
mov
call
lea
call
lea
push
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
push
mov
push
push
push
call
test
js
cmp
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
jne
cmp
lea
jne
mov
push
mov
call
mov
push
lea
mov
call
lea
call
cmp
lea
je
lea
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
push
push
push
mov
push
lea
cmpl
movl
je
mov
test
je
mov
mov
lea
mov
push
push
push
call
add
cmpl
movl
je
push
call
pop
mov
test
jne
testb
je
push
call
pop
pop
mov
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
test
push
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
xor
lea
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
test
jne
mov
pushl
mov
push
call
test
mov
jne
push
lea
mov
call
pushl
lea
call
test
pop
mov
je
pushl
call
mov
pop
mov
mov
mov
lea
call
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
mov
lea
push
pushl
push
call
test
mov
jne
testb
je
lea
mov
mov
out
lret
inc
add
push
mov
movl
movl
movb
mov
push
call
test
mov
jne
push
push
lea
push
or
mov
call
push
lea
mov
call
push
push
push
lea
push
lea
push
call
add
test
mov
jne
push
call
cmp
pop
je
pushl
mov
mov
mov
call
mov
mov
xor
mov
cmp
je
lea
call
mov
pushl
mov
push
call
test
mov
jne
lea
call
pushl
pushl
call
pop
pop
jmp
push
mov
mov
sub
push
lea
push
push
call
mov
test
jne
push
call
test
jne
and
push
push
lea
call
mov
lea
push
push
call
test
jne
lea
push
push
pushl
call
add
test
jne
xor
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
add
xor
adc
ret
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmpl
jne
pushl
lea
call
cmp
je
cmp
je
cmpl
jne
mov
mov
lea
push
pushl
pushl
push
call
test
jne
cmpl
jne
lea
call
lea
call
xor
pop
pop
leave
ret
xor
lea
call
mov
jmp
push
movzbl
push
push
movzbl
push
pushl
mov
call
cmpb
mov
jne
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
test
movl
movl
movl
movl
jne
mov
cmpl
lea
jbe
xor
movl
mov
mov
mov
test
je
call
push
call
add
mov
addl
add
cmp
jb
testb
jne
mov
test
jne
cmpl
jne
mov
mov
subl
sub
mov
lea
sbbl
test
jne
mov
test
jne
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
mov
test
mov
jmp
inc
add
push
call
add
test
jne
push
call
add
mov
mov
push
push
push
push
call
mov
cmp
jne
mov
lea
call
lea
call
mov
mov
push
push
push
push
call
mov
cmp
jne
mov
test
movl
jne
add
test
je
mov
call
push
call
add
pop
pop
pop
pop
pop
ret
mov
subl
mov
sub
sbbl
jmp
mov
test
je
mov
mov
mov
mov
movl
movl
jmp
call
push
call
add
jmp
push
mov
sub
push
push
push
mov
lea
push
call
lea
call
fldl
call
fldl
mov
call
fldl
mov
call
fldl
mov
call
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
pop
pop
leave
ret
mov
mov
mov
mov
mov
ret
andl
mov
dec
mov
movl
mov
mov
andw
ret
push
mov
sub
push
push
mov
push
xor
mov
push
lea
lea
mov
mov
mov
mov
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
mov
lea
push
pushl
mov
mov
push
call
cmp
jne
lea
call
push
call
cmp
pop
je
pushl
mov
mov
mov
mov
call
mov
xor
cmp
mov
je
mov
push
call
cmp
je
push
lea
lea
mov
mov
mov
mov
call
cmp
mov
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
jne
mov
pushl
mov
push
call
mov
mov
mov
lea
mov
push
lea
lea
mov
call
test
jne
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
mov
lea
call
pop
mov
pop
pop
leave
ret
test
je
mov
push
call
mov
push
pushl
call
test
jne
ret
mov
push
call
xor
inc
jmp
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
push
mov
push
andl
push
push
mov
push
call
test
je
andl
push
lea
call
mov
mov
lea
push
pushl
push
call
mov
test
js
mov
test
je
mov
push
push
call
mov
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
xor
mov
mov
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
push
push
push
call
mov
lea
push
mov
call
mov
add
cmp
jbe
xor
mov
cmp
je
add
add
cmp
jb
jmp
lea
lea
cmp
je
mov
mov
xor
cmp
setne
lea
push
mov
call
mov
cmp
jne
mov
add
mov
je
cmp
out
add
adc
dec
and
int
dec
and
cmp
jne
mov
mov
call
cmp
je
mov
mov
cmp
lea
je
mov
cmp
je
add
mov
call
mov
test
lea
je
testl
jne
cmpb
jne
mov
mov
mov
push
add
call
mov
xor
test
js
mov
mov
mov
xor
mov
call
lea
call
mov
pop
pop
pop
pop
add
ret
pushl
call
pop
lea
call
lea
call
lea
call
cmpl
je
cmpl
je
ret
decl
cmpl
jne
push
movl
call
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
mov
test
je
add
mov
push
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
xor
push
push
mov
cmp
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
testl
je
cmp
je
cmp
je
push
call
add
lea
call
pop
pop
pop
pop
add
ret
cmp
mov
mov
je
cmp
je
add
mov
cmp
lea
mov
jne
cmp
je
jmp
lea
push
lea
call
test
je
jmp
push
mov
mov
mov
push
xor
inc
cmp
movl
mov
mov
mov
movw
jae
andl
mov
pop
pop
ret
mov
mov
push
lea
push
push
push
push
call
add
test
je
xor
mov
jmp
push
mov
mov
push
mov
mov
shr
and
push
push
call
test
js
pushl
mov
push
call
test
js
pushl
mov
push
call
test
js
pushl
call
test
pop
js
lea
push
call
test
js
lea
push
call
add
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
pushl
call
test
pop
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
push
and
push
push
mov
call
mov
and
neg
sbb
and
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
add
enter
mov
mov
push
push
mov
push
push
mov
mov
cmpl
mov
jge
lea
call
xor
test
je
xor
test
js
lea
mov
mov
call
lea
mov
call
lea
xor
call
add
mov
lea
mov
mov
lea
push
mov
mov
movl
movl
mov
movl
mov
mov
mov
push
push
call
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
lea
push
push
mov
call
test
js
mov
cmpl
jge
mov
mov
mov
cld
jmp
push
push
call
test
js
mov
cmpl
jge
push
call
add
cmp
je
mov
mov
mov
push
push
mov
lea
push
call
mov
cmp
je
push
call
add
mov
cmp
mov
jne
cmp
je
mov
lea
mov
mov
mov
mov
push
lea
lea
mov
movl
movl
mov
call
add
test
js
mov
push
lea
push
lea
push
mov
call
test
js
mov
cmp
jne
cmp
jne
mov
push
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
add
jne
mov
mov
pop
pop
pop
pop
xor
call
add
add
push
mov
sub
push
mov
push
push
xor
push
mov
call
push
pushl
mov
call
test
js
push
lea
push
pushl
mov
call
test
js
cmp
mov
je
push
lea
push
pushl
mov
call
test
jne
push
lea
cmp
lret
adc
mov
add
add
add
inc
je
pushl
mov
call
test
jne
xor
inc
test
movl
movl
mov
movl
movl
mov
je
movzwl
push
push
push
lea
call
pop
pop
push
pushl
mov
call
testb
mov
jne
testb
jne
test
jne
lea
mov
xor
cmpb
jne
cmp
mov
jne
mov
push
pushl
pushl
mov
call
pop
pop
pop
leave
ret
push
mov
andl
test
jne
pop
jmp
push
mov
mov
call
cmpl
je
mov
or
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpb
je
push
push
mov
mov
push
push
call
cmpb
push
je
mov
push
push
call
movzwl
push
push
mov
push
push
lea
movl
movl
mov
movl
mov
mov
call
mov
lea
mov
lea
add
mov
lea
lea
mov
mov
push
lea
xor
mov
push
lea
push
mov
mov
mov
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
cmp
je
mov
mov
cmp
jbe
xor
mov
jmp
jmp
lea
mov
add
mov
mov
test
lea
mov
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
push
movl
movl
mov
call
push
mov
mov
mov
movl
movl
mov
call
lea
mov
mov
xor
lea
mov
add
mov
lea
mov
lea
mov
mov
lea
mov
mov
push
lea
mov
push
lea
push
mov
mov
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
add
jne
mov
sub
jne
pop
pop
pop
pop
add
ret
mov
push
push
jmp
movsbl
and
ret
mov
test
jne
test
je
mov
ret
xor
inc
ret
xor
ret
mov
call
cmp
jae
mov
call
ret
mov
test
jne
mov
ret
and
ret
add
push
xor
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
push
lea
push
lea
push
lea
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
sub
cmp
jne
cmp
jne
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
mov
push
mov
push
mov
push
lea
mov
call
fildl
mov
sub
fstps
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
call
mov
mov
mov
add
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
add
call
fildl
flds
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
and
enter
sbb
inc
and
fdivs
fstps
flds
fstpl
call
fstps
flds
add
call
fildl
mov
fdivs
fstps
fldz
flds
fcom
fnstsw
fstp
test
jne
faddl
call
cmp
jl
cmp
jg
mov
mov
imul
mov
imul
pop
mov
mov
pop
mov
mov
push
call
mov
add
xchg
add
mov
enter
cltd
xchg
xchg
add
add
mov
out
std
popf
cli
lret
add
incb
jns
jae
add
add
add
add
push
mov
add
push
push
push
push
push
call
add
add
out
add
fldcw
xlat
xchg
arpl
jmp
add
push
lcall
add
push
mov
lahf
in
lods
mov
movsb
std
mov
add
lcall
into
cwtl
out
mov
mov
pop
ret
ja
mov
pop
ljmp
add
pop
popl
push
push
push
lea
push
push
push
push
push
push
call
scas
add
test
jns
add
add
add
mov
jl
mov
add
add
popl
popa
push
jbe
mov
push
add
lcall
push
push
push
push
lea
push
push
push
call
mov
mov
mov
xchg
add
pop
add
add
lods
enter
add
add
mov
jecxz
aad
mov
mov
add
test
jne
push
add
mov
call
push
push
lea
push
lea
push
push
push
push
call
add
popa
add
add
add
add
int
add
shrb
add
rcrb
in
jae
mov
icebp
add
add
jmp
movsl
add
add
lea
pop
xchg
test
add
add
cwtl
add
sti
add
add
call
push
push
lea
push
push
push
push
lea
push
push
push
call
cltd
imul
mov
add
mov
add
jp
add
push
in
into
aam
add
mov
bound
clc
add
add
add
add
fistps
test
add
add
add
cltd
mov
mov
test
add
sub
pop
push
call
push
push
push
lea
push
lea
push
push
push
call
gs
add
add
std
add
add
fldl
add
mov
add
fcmovnbe
in
add
push
add
add
sub
pop
jmp
push
push
push
push
lea
push
push
call
xchg
xchg
add
test
add
jl
add
add
push
test
shll
test
mov
int3
loope
mov
add
movsb
add
out
push
add
add
leave
loop
scas
add
add
add
lea
add
push
push
push
push
push
lea
push
call
icebp
add
test
lret
add
add
mov
mov
add
lea
fsts
add
not
out
addr16
add
add
push
fildl
stos
add
clc
add
stc
gs
stc
stos
test
add
xchg
out
sub
pop
mov
mov
push
push
lea
push
push
push
push
call
call
add
push
clc
add
add
add
add
add
xchg
add
push
push
bound
jnp
loop
add
jnp
cwtl
add
add
add
pop
add
push
add
add
pop
in
add
push
lea
push
push
push
push
push
push
push
push
call
jae
add
mov
add
sahf
ror
popa
mov
scas
jo
je
cwtl
add
mov
pop
clc
pop
add
push
icebp
into
add
notl
lret
jnp
add
add
add
add
jecxz
add
nop
push
leave
add
sub
pop
add
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
jp
jne
roll
add
rolb
xchg
in
add
out
mov
add
bound
add
add
xchg
sub
pop
mov
xor
push
push
xor
rol
rol
push
and
add
sub
dec
sub
pop
rol
pop
push
push
lea
push
push
push
push
call
mov
mov
jns
sbbl
fsubrl
je
shll
subb
loope
in
add
popl
loop
pop
push
mov
mov
pushl
call
push
lea
push
push
lea
push
call
add
add
jp
push
lahf
int
jnp
add
bound
sarl
out
scas
add
mov
add
popa
mov
jle
out
rclb
fs
add
push
add
lcall
inc
lock
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
clc
add
push
sarl
add
icebp
cli
pushf
add
add
in
pop
add
roll
jp
add
scas
add
ljmp
cmc
hlt
fwait
rorl
add
outsl
add
addl
pop
movl
push
push
push
push
push
push
push
push
push
call
cmc
repnz
mov
adc
mov
jae
add
mov
mov
arpl
mov
lret
add
add
lock
add
add
jle
cmpsb
lods
sub
pop
lea
push
push
push
push
push
push
lea
push
push
push
push
lea
push
call
add
xchg
add
sti
mov
add
std
addb
add
fldl
add
add
mov
mov
sahf
jno
add
xchg
addb
data16
lods
cmpsl
into
add
add
insb
jp
addb
or
lahf
in
add
aad
xchg
add
add
stos
roll
lock
push
push
push
lea
push
lea
push
call
add
add
sub
stos
add
popa
push
xchg
call
add
in
add
push
in
rolb
popf
int
add
add
add
mov
add
mov
push
xchg
add
add
add
add
in
in
lcall
jo
add
push
lea
push
push
push
push
push
call
fadds
int
mov
mov
add
cmc
fs
add
pop
mov
jne
add
xchg
add
pop
add
push
loopne
ffree
roll
add
add
jo
mov
fiaddl
jne
push
lea
push
push
push
push
call
leave
add
add
cli
pop
iret
mov
add
push
mov
add
jecxz
flds
test
add
bound
pop
movsl
add
cld
sahf
add
mov
add
jmp
cmc
add
add
add
enter
mull
add
ret
add
pop
push
enter
lcall
jne
call
push
push
dec
not
push
sub
add
inc
shl
sub
rol
not
pop
add
shl
xor
pop
push
push
push
call
insb
add
jle
jbe
jb
mov
cmpsl
jae
push
add
xchg
in
mov
add
push
xchg
add
add
sub
pop
pushl
push
lea
push
push
lea
push
push
push
push
push
call
mov
loope
add
imul
loopne
arpl
mov
jns
add
add
pop
pop
ljmp
cld
sub
pop
call
push
push
push
dec
inc
sub
dec
push
and
add
lea
sub
sub
ror
shr
pop
not
xor
lea
pop
push
push
call
test
pop
shl
adc
jl
shlb
add
shl
aad
add
push
add
mov
pop
imul
in
out
add
in
mov
add
jbe
sahf
jb
icebp
fiadds
add
clc
lcall
push
push
push
call
mov
add
call
lock
rolb
add
add
add
add
push
mov
add
add
add
jno
add
test
loope
insb
add
mov
outsl
decb
add
add
add
add
loop
icebp
popf
ror
add
jl
test
lcall
rclb
push
push
call
add
push
mov
add
add
mov
cltd
push
add
in
add
or
lret
add
xchg
add
int3
lods
hlt
push
push
add
scas
cmpsb
out
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
push
push
call
jne
test
mov
add
add
add
repnz
movsl
jns
add
scas
jno
lret
outsl
add
add
add
mov
stc
xorl
mov
add
push
ljmp
insb
add
cmpsl
mov
jmp
loope
cld
add
add
sub
pop
push
mov
push
push
push
push
push
push
push
push
lea
push
call
add
add
ljmp
test
cli
pop
ficomps
mov
add
add
push
add
add
add
in
mov
fcompl
pop
in
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
mov
pop
outsl
add
nop
add
in
add
add
add
scas
add
add
gs
mov
add
pop
add
add
clc
stos
push
add
rcll
add
xchg
add
popa
mov
repnz
clc
add
loopne
sahf
fildll
add
les
add
xchg
mov
stc
jnp
push
add
add
push
push
push
push
push
call
push
jl
push
add
filds
add
push
sahf
addb
lret
xchg
loope
lret
addr16
mov
mov
out
add
sub
pop
add
push
push
call
cld
fsubrl
mov
pop
push
add
add
mov
add
popa
jb
push
add
test
cwtl
add
add
stc
add
add
add
add
add
add
scas
mov
add
add
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
cli
divl
jnp
add
add
jle
aad
testl
jge
in
fcomps
xor
push
push
push
call
add
add
add
scas
add
sti
out
add
jnp
pop
add
cmpsl
andl
pop
mov
mov
loopne
jmp
xchg
add
push
sahf
add
pop
xchg
add
add
jno
add
add
pop
sbbb
aam
iret
addr16
loope
add
lcall
les
add
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
fucomip
add
add
add
add
add
add
gs
icebp
jne
mov
shr
add
movsb
add
fcompl
jne
push
push
push
push
push
call
loop
add
add
add
pop
add
add
jp
push
fnstcw
out
jp
add
add
lods
mov
add
add
add
add
pushf
clc
outsl
push
jb
add
hlt
jne
add
add
cmpsb
mov
lods
add
xchg
add
testb
add
js
loop
icebp
add
push
movsl
push
fiaddl
lcall
inc
or
mov
push
push
push
call
data16
imul
add
test
cltd
mov
add
pop
add
add
sti
add
jns
cwtl
add
in
mov
out
mov
fldcw
add
add
xchg
out
mov
in
jmp
enter
sub
pop
add
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
test
mov
add
repnz
mov
add
add
fdivl
add
test
add
pop
fcompl
incb
mov
addl
outsl
sub
pop
pop
push
push
push
push
call
pop
js
jb
mov
lret
fcmovnb
leave
movb
in
add
xchg
add
mov
jle
add
in
lock
mov
xor
push
push
lea
push
push
push
push
lea
push
push
push
push
call
sahf
add
jl
push
add
icebp
jmp
movsb
add
cmpsb
add
movsl
mov
push
xbegin
mov
add
addl
add
push
jo
add
push
mov
add
mov
in
fcomps
push
push
push
push
call
add
xchg
flds
add
scas
add
mov
jno
add
cltd
push
stos
mov
out
add
mov
lock
lcall
inc
or
or
jl
mov
push
call
add
add
add
bound
std
fstl
push
mov
push
jmp
add
add
sar
jne
lret
add
add
mov
lcall
add
push
push
push
push
call
add
add
pushf
add
into
add
jmp
xchg
add
std
in
sti
push
addl
test
add
add
sahf
xchg
int3
mov
cli
out
add
scas
jle
add
pop
test
je
mov
jmp
mov
mov
lock
add
push
push
push
push
push
call
push
mov
sahf
add
add
fiadds
pop
add
add
add
out
add
icebp
add
cmpsb
shl
add
popa
add
stc
lds
xchg
icebp
add
jmp
nop
add
add
sub
pop
sub
pop
push
push
call
cmc
movsl
jnp
add
jge
add
out
mov
add
aam
xchg
mov
add
add
fs
addl
in
rcrb
testb
lods
xchg
xchg
add
mov
pop
shrb
lods
cwtl
add
add
add
imul
in
clc
lcall
movsb
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
call
testl
les
add
mov
add
add
test
fldl
fadds
popa
loop
test
popf
mov
pop
out
add
pop
hlt
push
push
push
lea
push
push
push
call
les
imul
add
add
xchg
gs
add
xchg
jl
mov
add
add
mov
add
add
pop
add
add
jge
xchg
add
add
add
pop
in
push
lea
push
push
call
mov
fiadds
fidivs
pop
add
add
addb
lret
add
cmpsb
add
add
fildl
add
mov
cwtl
jl
in
addl
ficoms
add
add
jnp
sahf
sub
pop
add
add
push
push
call
mov
jnp
movsb
movsl
jbe
int3
mov
add
lds
fisubrs
add
add
mov
addr16
pop
mov
xchg
lds
sub
pop
mov
push
push
push
push
push
push
call
lock
add
xchg
in
add
add
add
adcb
add
add
add
movsl
xchg
lahf
mov
xchg
add
push
push
call
into
movb
int3
nop
mov
outsl
add
add
mov
testl
cmc
add
in
hlt
jmp
mov
pushf
add
std
xchg
mov
shlb
arpl
add
sub
pop
add
push
push
push
push
push
push
push
push
call
add
movsl
mov
add
shr
push
add
test
add
cli
movsl
add
jmp
sub
pop
mov
push
push
push
call
add
imul
in
test
jp
push
add
cwtl
add
ljmp
add
in
mov
add
add
std
icebp
gs
push
add
mov
pop
xor
push
lea
push
push
push
lea
push
call
add
test
add
add
pusha
add
mov
cli
add
add
push
pop
stos
fildl
xchg
fnstcw
enter
lea
cmpsb
jle
mov
mov
add
xchg
pop
add
mov
add
add
add
stos
add
lcall
les
add
push
xor
pop
mov
push
push
push
push
push
push
push
push
push
push
call
mov
cmpsl
push
cltd
add
loope
addb
iret
add
add
add
add
add
mulb
add
rclb
jae
add
mov
add
mov
fdivr
lcall
or
push
push
call
fiaddl
add
add
cmc
leave
add
fsubrl
mov
add
movb
xchg
test
xchg
mov
bound
mov
push
jae
add
add
in
clc
lcall
les
add
push
xor
rol
dec
add
pop
add
push
push
lea
push
push
call
int3
add
je
add
add
add
imul
mov
add
add
je
add
add
aad
lods
add
jne
add
jp
xchg
call
popl
pop
add
push
add
add
jge
cmpsl
test
jge
loope
jb
nop
add
outsl
add
push
stos
sub
pop
add
push
push
lea
push
push
call
test
push
add
repnz
mov
add
mov
xchg
mov
jl
rolb
mov
into
out
imul
lock
mov
push
push
shl
push
and
add
xor
rol
shr
sub
shl
lea
pop
add
rol
pop
push
lea
push
push
push
push
call
add
add
add
add
shl
push
jno
xchg
push
hlt
mov
jnp
add
push
add
add
mov
add
jge
add
mov
add
cmpsl
filds
stos
add
push
mov
in
lcall
jne
call
push
add
shr
sub
pop
push
push
push
dec
rol
push
push
pop
add
not
sub
ror
pop
not
ror
pop
push
shr
shl
sub
add
pop
push
push
rol
add
pop
push
push
xor
ror
pop
call
push
add
pop
mov
push
rol
not
not
add
pop
push
push
push
push
lea
push
push
call
xchg
add
push
add
movsl
pushf
add
cmc
push
add
cmpsl
out
mov
addl
add
jmp
fiadds
lcall
push
lea
push
push
push
push
call
pop
add
add
nop
mov
js
add
frstpm(287
cltd
add
shll
add
mov
add
jmp
mov
add
add
add
out
add
add
add
jecxz
xchg
shlb
sarl
pop
popa
mov
out
add
add
stos
popa
xchg
pop
hlt
add
push
push
lea
push
push
push
call
add
add
pusha
add
js
loope
andl
push
nop
jp
add
add
jp
add
imul
int
add
xchg
push
nop
loope
xchg
xchg
xchg
leave
jp
aam
lods
add
shll
add
add
call
cwtl
add
jb
mov
pop
sub
pop
add
add
push
push
call
mov
add
aam
add
test
add
add
arpl
mov
fiadds
add
fbld
add
add
jb
mull
call
add
push
add
add
les
in
add
shr
in
clc
pop
mov
push
push
lea
push
push
push
lea
push
push
call
fwait
jae
lods
mov
add
lods
add
cmc
je
add
pop
cltd
lret
lock
add
add
add
into
add
sbbl
lods
stos
hlt
lea
lcall
xor
push
lea
push
call
imul
scas
push
imul
add
lock
pusha
loopne
in
popa
pusha
add
sarl
add
jmp
add
add
les
push
push
push
lea
push
push
push
push
call
xchg
add
cli
add
out
add
add
mov
aam
add
push
fs
mov
push
call
add
fildl
add
add
fiaddl
add
arpl
hlt
sub
pop
add
push
shl
shl
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
stos
add
scas
mov
push
jge
mov
roll
add
cli
icebp
add
addb
stos
pop
roll
mov
add
aad
lcall
add
int
add
scas
add
repnz
mov
xchg
stos
add
std
filds
inc
adc
lock
repz
pop
add
push
push
push
push
lea
push
push
push
push
call
add
add
ja
loop
cwtl
imul
add
cmpsl
push
mov
imul
pop
jmp
fiaddl
add
gs
ljmp
mov
mov
std
popl
push
mov
sub
pop
pop
push
lea
push
push
push
push
push
call
pop
add
add
mov
add
mov
add
add
xchg
shlb
add
faddl
add
lret
repnz
push
mov
add
add
add
push
add
jmp
add
add
in
flds
jb
lds
lcall
dec
and
mov
push
lea
push
push
push
lea
push
push
call
mov
pop
add
in
add
jmp
cwtl
rcr
js
push
out
stc
test
into
leave
add
movl
les
pop
add
lcall
movsb
mov
xor
push
sub
dec
pop
or
je
push
rol
inc
not
shr
pop
mov
xor
push
dec
dec
shr
pop
mov
xor
push
inc
sub
ror
pop
add
push
push
push
lea
push
call
add
stos
add
mov
js
rcrl
jp
lods
add
add
add
pop
jge
faddp
mov
fs
std
add
add
bound
rcr
mov
pop
fdiv
xlat
sub
pop
add
push
push
push
lea
push
push
call
add
add
add
test
rcrl
rclb
stc
add
out
mov
add
add
iret
add
add
popf
add
xchg
roll
gs
in
mov
add
add
loopne
add
in
sub
pop
push
mov
push
push
push
lea
push
push
push
push
lea
push
push
call
add
cmc
add
std
add
mov
call
into
pushf
add
add
idivb
rolb
mov
leave
add
pop
imul
and
lea
push
lea
push
push
call
popa
add
add
mov
add
pop
out
add
ret
aam
add
cmpsb
add
sbb
push
fisubrs
shlb
popf
imul
add
sahf
sub
pop
add
push
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
xlat
jo
popf
int
jmp
add
nop
jmp
cld
add
add
mov
shll
bnd
add
mov
int
cli
jae
add
lea
test
sub
pop
add
pop
push
lea
push
push
call
xchg
test
adcl
push
jmp
add
mov
stos
add
add
mov
fcompl
add
repnz
mov
push
add
mov
fstps
add
movsb
mov
xor
push
add
sub
pop
or
je
mov
push
pop
add
add
push
push
lea
push
lea
push
push
call
loope
fidivl
ret
jno
mov
add
add
ret
std
add
mov
loope
add
lea
add
repnz
add
mov
in
in
lcall
movsb
pop
push
push
rol
shr
rol
push
xor
add
ror
shl
sub
shr
add
rol
pop
add
add
add
lea
pop
push
push
call
push
fiaddl
into
push
mov
pushf
addr16
add
add
xchg
mov
in
scas
negb
jmp
pop
add
mov
std
hlt
lret
movsl
fs
je
lcall
add
mov
add
data16
add
fcmovnu
add
je
sub
pop
pop
push
rol
pop
mov
push
dec
pop
mov
push
push
push
push
push
push
push
call
add
mov
add
pushf
into
pop
add
add
xchg
add
add
flds
popa
cmpsl
aad
je
push
jne
addl
push
call
lret
push
add
add
cmc
add
out
fwait
in
add
add
xchg
clc
add
mov
mov
test
in
in
lcall
inc
and
push
dec
add
pop
jmp
push
pop
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
imul
popf
add
fdivl
mov
outsl
call
add
add
stos
out
pop
lds
add
fcomps
in
push
not
shr
pop
add
push
push
lea
dec
pop
push
push
push
push
push
push
call
add
jp
add
jecxz
mov
enter
mull
xchg
mov
rcr
fwait
test
mov
scas
clc
jge
js
in
add
scas
shll
jne
mov
lods
pop
sub
pop
push
push
lea
sub
pop
push
push
inc
lea
pop
mov
pop
push
lea
push
lea
push
push
lea
push
push
push
call
add
jne
jl
fscale
mov
movb
add
add
push
add
add
lret
add
popf
add
test
add
insb
add
xchg
add
pop
xchg
loope
add
mov
cmc
add
pop
add
add
ljmp
je
jl
jne
add
lcall
pop
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
insb
aad
xchg
lea
xchg
sahf
add
xchg
pop
add
mov
add
data16
pop
add
add
pop
add
add
jbe
lret
jmp
mov
lret
add
add
mov
lcall
leave
push
lea
rol
add
pop
ret
push
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
call
in
add
add
cwtl
push
push
add
jne
add
add
out
add
add
add
mov
int3
add
add
add
fnstcw
movsl
add
xchg
add
add
lcall
xchg
shrl
mov
in
lcall
xchg
add
mov
pop
mov
push
lea
pop
add
push
push
pop
push
push
shr
shr
pop
push
push
push
push
call
loope
mov
cmpsl
push
loop
pusha
add
add
mov
push
je
mov
add
out
pop
cmpb
aam
add
sub
pop
push
movl
push
add
lea
dec
inc
pop
addl
push
inc
pop
test
je
push
add
pop
mov
push
push
push
push
lea
push
push
push
call
mov
mov
enter
mul
xchg
add
xchg
mov
fsubrs
imul
fildl
add
into
loop
add
add
jecxz
add
pop
jnp
cli
movsl
lcall
pop
pop
pop
push
sub
ror
shl
pop
pop
push
push
lea
push
push
lea
push
push
push
call
jb
stc
jae
add
jmp
fisubs
add
jnp
flds
call
cld
scas
cmpsl
add
adcb
call
add
mov
xchg
js
mov
js
add
mov
jo
add
mov
xchg
sub
pop
pop
push
not
ror
add
rol
pop
leave
push
push
lea
push
call
pop
std
lcall
add
int3
clc
add
fistpl
ljmp
mov
fiaddl
lcall
add
push
push
lea
push
call
cmpb
jbe
add
pop
add
add
pop
add
lret
add
add
int3
xchg
xlat
mov
mov
jns
push
lods
out
pop
pop
xchg
out
cli
add
add
je
mov
add
add
jno
fnstcw
add
add
jecxz
add
add
imul
push
mov
push
shr
ror
add
xor
pop
add
push
push
add
pop
push
push
push
push
push
push
lea
push
push
call
mov
pushf
add
je
fldl
add
jne
add
pop
add
add
cmc
push
add
nop
nop
xchg
push
insb
idivb
xchg
add
add
fiadds
add
add
mov
jmp
addb
mov
cmc
add
shlb
add
call
add
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
add
arpl
in
push
ljmp
fimull
jl
add
enter
jo
add
lret
test
add
aad
movl
testl
push
push
lea
push
lea
push
push
call
lahf
fisubrl
out
imul
flds
pusha
mov
push
add
roll
std
ret
jae
rcll
xlat
add
add
fadds
add
sti
lahf
jnp
mov
add
in
in
pop
addl
push
push
ror
sub
pop
call
mov
push
push
lea
push
lea
push
push
call
bound
popl
pop
add
jnp
mov
add
add
enter
add
cmc
icebp
add
xchg
lahf
sub
pop
pushl
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
ljmp
mov
mov
aad
test
addr16
mov
addb
popf
cld
pop
add
test
lea
add
add
add
jge
sub
pop
push
push
push
push
push
push
push
push
push
call
add
xchg
push
stos
add
add
cli
out
add
push
add
add
out
movl
pop
add
movl
pop
aam
push
pop
js
test
cld
add
addb
aam
cld
push
pop
jb
insb
add
cltd
test
add
lcall
or
call
je
pusha
push
call
pusha
push
mov
add
jbe
mov
add
add
add
mov
cltd
je
clc
lods
add
insb
add
add
ja
ljmp
push
jno
in
clc
pop
cmpl
jne
push
push
push
call
add
jge
jae
add
add
out
add
lods
push
pop
xchg
nop
push
mov
pop
pusha
fldl
mov
add
mov
add
add
sub
pop
pop
push
rol
not
lea
inc
pop
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
loope
movsb
add
add
iret
stos
add
add
add
add
push
add
jecxz
add
add
add
jo
mov
add
pop
push
push
push
push
push
push
call
add
addl
into
mov
mov
add
loopne
add
mov
add
out
add
add
xchg
push
pop
add
add
sub
pop
leave
ret
push
sub
pop
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
jne
mov
repnz
mov
pushf
lret
lahf
add
jno
movl
add
xchg
fisubrl
add
add
sahf
mov
xchg
add
add
xchg
push
lods
mov
add
add
popf
lea
jo
add
add
add
add
sub
pop
mov
push
lea
push
push
push
push
lea
push
push
call
jno
add
mov
js
add
add
mov
mov
add
out
add
mov
in
mov
mov
clc
fists
add
mov
bound
jbe
xchg
mov
lret
cli
add
leave
insb
sahf
add
les
out
iret
push
roll
pop
scas
leave
jno
int
mov
push
out
push
add
in
in
add
push
push
push
call
jge
add
data16
into
ja
add
add
add
xchg
mov
stos
imul
add
lahf
fldl
add
mov
mov
add
hlt
addl
bnd
pop
mov
pop
xchg
imul
add
cmpsb
add
shrb
add
nop
not
fcmovne
add
push
push
add
add
sub
pop
push
push
push
push
call
add
int
into
ljmp
clc
pop
cmc
add
add
std
add
push
mov
add
mov
jle
roll
add
sub
pop
push
push
push
push
push
call
add
add
mov
aam
mov
loopne
aam
jo
jbe
add
scas
out
leave
add
mov
pop
add
addb
cld
or
add
push
push
push
call
jp
arpl
xchg
test
mov
add
rolb
push
push
lods
xlat
xchg
add
int3
add
mov
add
add
add
add
mov
out
cltd
pop
cmpsl
push
mov
sarb
add
lock
add
add
add
add
int3
add
add
sub
pop
call
push
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
push
push
sti
cwtl
jmp
loopne
add
push
cli
std
mov
cmc
pop
pop
xchg
add
ficompl
add
lret
jmp
xchg
flds
test
icebp
jmp
jp
add
jecxz
insb
lock
pop
call
subl
push
push
lea
push
push
lea
push
push
call
add
xchg
jmp
mov
add
add
mov
add
add
test
add
xchg
add
pop
xchg
add
add
pusha
add
cwtl
movsl
loop
add
fcomps
add
add
aam
add
jge
add
test
push
push
lea
push
push
call
leave
add
insb
add
iret
add
cwtl
add
shl
jle
add
push
mov
add
jo
popa
add
stos
imul
cwtl
xchg
mov
mov
add
add
out
jnp
rcl
add
lcall
pop
pop
push
push
push
call
add
add
mov
mov
js
add
add
add
mov
add
lahf
ffree
fistps
add
nop
cmpsl
add
mov
xchg
lcall
int3
cmpsb
cmpsb
jbe
add
mov
add
mov
push
add
rcrl
add
xchg
out
popl
add
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
je
lret
out
out
test
add
pop
add
lret
add
jbe
push
add
add
int3
repnz
rolb
xchg
xchg
xchg
add
mov
addr16
sub
pop
pop
push
sub
pop
leave
push
add
add
xor
pop
ret
push
push
push
push
push
call
pop
movsl
rolb
add
add
jno
push
add
push
add
std
stos
add
popa
popf
add
lret
add
add
add
lock
ficompl
mov
outsl
pop
add
mov
xchg
jnp
addr16
xchg
rclb
sub
pop
push
push
sub
rol
pop
mov
push
push
push
push
lea
push
push
call
cmpsl
jge
push
rcr
mov
add
arpl
mov
js
bound
ret
add
add
xorl
add
add
add
out
add
fwait
mov
mov
sub
pop
add
push
xor
inc
pop
push
push
lea
lea
sub
pop
push
push
inc
not
dec
pop
push
push
push
push
add
shr
dec
push
push
pop
add
not
sub
shl
sub
rol
pop
sub
xor
pop
push
push
push
push
push
push
push
lea
push
push
call
add
lcall
pop
xchg
and
push
cli
int3
std
mov
add
add
add
xchg
add
add
fwait
xchg
popa
add
lcall
jne
push
lea
push
push
call
mov
add
add
add
add
add
jmp
add
add
add
add
add
test
in
add
in
hlt
lcall
mov
add
push
push
push
push
push
push
push
push
call
adcb
cmpsl
add
loop
add
jl
imul
bound
out
add
add
mov
mov
mov
leave
add
add
popf
add
andb
mov
mov
lea
add
xlat
lods
fnstsw
test
int
in
loopne
lcall
shrb
sub
stc
push
rol
push
and
add
shr
ror
sub
dec
pop
ror
add
sub
pop
push
shr
shl
add
pop
pushl
push
sub
inc
pop
call
push
lea
push
push
push
push
lea
push
push
push
call
add
in
mov
aam
test
mov
mov
mov
add
cmpsl
push
add
add
jp
add
add
aad
add
add
scas
mov
add
push
xchg
lret
sub
pop
call
push
push
xor
shl
shl
rol
push
push
pop
add
shr
sub
shr
pop
xor
sub
pop
push
lea
pop
pushl
call
push
push
call
addr16
mov
push
xchg
pop
mov
add
js
fs
pushf
add
fadds
mov
add
pop
aad
shrb
add
add
add
ljmp
loop
hlt
std
add
test
idiv
outsl
add
add
add
add
add
lock
call
push
push
rol
push
xor
add
shl
lea
sub
sub
rol
not
pop
lea
not
pop
push
push
push
push
push
lea
push
push
call
vdivsd
push
xchg
shrl
imul
pop
add
pop
into
add
mov
fcoms
mov
jno
pop
add
add
mov
pushf
addr16
addl
test
enter
sahf
repnz
pop
jne
faddl
pushl
push
lea
pop
call
call
push
push
rol
push
or
inc
add
add
sub
ror
dec
inc
pop
sub
shl
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
jbe
mov
data16
lea
add
les
lcall
add
push
add
sar
lea
int3
add
add
mov
push
mov
add
add
pop
jae
pop
xchg
add
adcb
lcall
int3
jbe
add
lcall
jne
push
push
push
push
push
lea
push
lea
push
push
call
gs
pop
arpl
clc
xchg
add
add
add
test
xchg
mov
sub
pop
call
call
push
push
push
or
not
add
sub
shr
sub
shr
ror
xor
pop
rol
add
pop
push
ror
pop
pushl
call
push
push
push
push
push
push
push
push
push
call
mov
pop
fcompl
add
add
add
add
into
push
add
faddl
jle
imul
add
fcompl
shrb
adc
stos
push
add
not
shr
push
push
pop
add
xor
shr
sub
ror
not
pop
sub
pop
push
lea
push
lea
push
lea
push
push
push
push
push
call
push
xchg
sahf
mov
cmpsl
stos
add
xchg
out
add
insb
add
add
clc
add
mov
add
add
stos
hlt
add
js
xchg
add
jne
call
push
sub
add
pop
call
push
push
ror
inc
push
xor
add
sub
lea
shr
sub
sub
shl
pop
inc
rol
sub
pop
push
push
call
mov
scas
add
mov
add
push
test
add
add
add
add
pop
add
add
fisubs
lea
jne
push
xor
lea
lea
pop
call
push
xor
pop
call
push
lea
rol
pop
mov
push
not
sub
add
shl
pop
lea
push
push
lea
push
push
call
test
add
jle
roll
add
add
add
clc
int3
add
popf
xchg
test
idivl
push
add
add
add
cld
ficomps
bound
lea
add
add
add
jecxz
push
popa
popf
add
sub
push
push
push
push
push
push
lea
push
push
push
call
mov
lahf
mov
jae
mov
shlb
add
add
jl
test
fcoml
mov
add
leave
enter
roll
mov
addb
stc
add
add
scas
add
add
mov
fs
popa
add
add
add
sub
pop
mov
shr
push
inc
pop
add
push
push
push
push
lea
push
push
push
push
lea
push
call
fdivrp
add
pop
add
add
add
add
stos
loop
stos
add
movsl
add
pop
pop
jno
leave
fdivrl
jp
sub
pop
mov
push
lea
push
push
push
push
call
ret
add
add
jecxz
fcom
mov
mov
mov
mov
jmp
lea
fstps
sub
pop
mov
add
push
push
push
push
push
push
lea
push
push
call
add
loope
add
jp
jb
mov
out
push
add
stos
add
add
lods
add
repnz
add
xchg
lods
add
shlb
rol
pop
mov
push
push
push
push
push
push
push
push
call
xor
add
jp
pop
push
lea
jnp
xchg
ficoml
lods
leave
add
sti
fidivl
jmp
add
rcl
sub
pop
mov
push
lea
rol
xor
pop
cmp
jne
push
inc
pop
cmp
jne
push
push
push
lea
push
push
push
lea
push
call
xchg
jnp
push
je
jae
add
mov
add
push
add
js
add
add
add
pop
jae
into
cld
into
jns
jecxz
loope
ljmp
add
lcall
inc
adc
push
push
lea
push
push
push
push
push
call
out
pop
addr16
movsl
add
add
jne
add
add
add
lcall
add
mov
xchg
cltd
ljmp
xchg
add
sub
pop
movl
push
push
push
push
lea
push
call
bnd
push
aam
add
fadds
mov
shrl
jb
icebp
add
out
pop
lods
ja
lods
add
jp
push
cld
lcall
insb
pop
add
add
add
leave
jne
pop
mov
shlb
mov
add
jmp
push
push
call
lahf
add
popl
add
lahf
add
add
repnz
repnz
add
testl
pushf
repnz
stos
fiaddl
push
pop
cltd
ljmp
add
add
mov
mov
add
std
ja
gs
mov
mov
push
mov
add
sub
pop
mov
mov
push
dec
add
ror
pop
sub
jne
mov
push
rol
pop
movl
push
push
push
lea
push
push
push
call
add
incb
add
push
lret
mov
addr16
add
add
add
add
jmp
data16
add
xchg
add
divl
sub
pop
jmp
mov
push
push
push
push
push
push
call
aam
sahf
push
add
add
add
mov
loop
nop
xchg
add
nop
jo
addl
add
add
in
add
test
add
add
mov
leave
mov
sub
pop
mov
push
inc
pop
cmp
jne
mov
push
pop
movl
push
push
push
push
push
push
call
push
push
test
add
add
add
jns
add
add
imul
add
xchg
add
add
sub
pop
jmp
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
pushf
pop
add
jp
add
jns
int3
lret
add
imul
in
add
mov
push
xchg
add
jb
in
sarb
jge
add
jp
add
mov
mov
xchg
lret
add
roll
clc
add
sub
pop
mov
cmpw
jne
push
push
push
push
push
push
push
push
push
push
call
imul
add
push
add
imul
jge
jbe
add
pop
add
lret
add
add
mov
push
add
lahf
add
add
jns
add
imul
arpl
lcall
inc
adc
movl
jmp
push
rol
inc
pop
pushl
pop
push
push
lea
push
push
call
add
lret
add
jne
add
xchg
xchg
into
mov
jecxz
mov
xchg
aad
pop
push
les
into
sahf
add
pusha
add
mov
fldenv
add
inc
or
pop
mov
mov
push
push
dec
add
add
push
push
pop
add
xor
sub
pop
sub
rol
lea
pop
push
push
push
push
push
push
push
push
push
call
cmpsl
add
pushf
add
pop
jbe
mov
pushw
add
mov
add
add
outsl
pop
add
mov
add
add
std
cmpsb
js
add
ja
jae
push
add
lcall
call
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
add
jp
aad
add
add
negl
clc
mov
data16
scas
mov
add
add
add
add
bound
push
fcomps
lret
int3
add
out
add
jnp
lret
xlat
call
addl
pop
cmpl
je
push
push
ror
sub
xor
add
push
or
inc
add
sub
shr
sub
not
pop
sub
pop
push
rol
pop
push
call
push
rol
rol
shr
sub
pop
cmpl
je
push
push
shr
inc
inc
shr
push
or
not
add
not
add
rol
shl
sub
shr
add
pop
sub
pop
push
dec
dec
dec
pop
push
push
xor
rol
not
pop
call
push
push
lea
push
push
push
push
push
push
lea
push
call
aam
add
int3
ret
pop
mov
fldl
fiadds
imul
add
hlt
add
stos
add
jle
ljmp
sub
pop
cmpl
je
push
push
dec
push
push
pop
add
add
sub
ror
pop
inc
ror
shr
pop
push
add
shr
sub
pop
push
push
lea
push
push
push
push
lea
push
push
call
hlt
test
cmpsl
ljmp
flds
cmpsl
add
add
mov
add
mov
xchg
into
sarb
mov
arpl
bnd
in
in
call
push
not
pop
cmpl
je
push
push
sub
shl
not
push
push
pop
add
rol
not
dec
sub
add
pop
add
not
sub
pop
push
lea
push
push
lea
push
lea
push
call
loopne
add
jnp
push
ja
mov
shl
add
bound
mov
addb
add
mov
add
fbld
add
mov
add
xchg
loop
jne
iret
pop
add
add
push
push
xor
shr
pop
call
cmpl
je
push
push
rol
shl
shl
push
or
not
add
lea
not
sub
dec
pop
pop
push
inc
inc
pop
push
call
push
add
pop
cmpl
je
push
push
xor
sub
push
or
not
add
sub
sub
add
add
add
shl
pop
sub
lea
add
pop
push
push
push
call
fldl
negb
add
add
add
ficoms
js
shr
pop
add
pop
add
cwtl
add
mov
repnz
cld
add
add
pop
push
scas
add
lock
imul
add
shrb
add
add
add
les
lcall
push
shr
sub
pop
call
push
inc
pop
cmpl
je
push
push
ror
push
or
inc
add
sub
sub
lea
pop
dec
pop
push
add
not
pop
push
push
rol
lea
sub
pop
call
push
push
push
push
lea
push
lea
push
push
call
mov
pop
fwait
mov
add
add
add
add
in
fwait
popa
add
add
add
add
mov
scas
scas
add
lods
pop
fists
add
mov
add
add
add
add
int
out
add
pusha
addl
add
clc
cli
in
sub
pop
cmpl
je
push
push
add
inc
xor
shr
push
sub
add
lea
xor
sub
dec
inc
xor
pop
dec
shr
pop
push
lea
push
push
lea
push
call
add
popl
add
mov
mov
iret
rorb
add
add
add
movb
sahf
push
mov
js
add
add
imul
add
lret
add
lock
xchg
push
jne
xchg
push
fcmovbe
clc
cmpsb
roll
jmp
mov
lcall
call
push
push
push
push
call
shrb
stos
add
mov
add
add
int
add
out
fiaddl
push
mul
pop
mov
jae
add
fs
mov
add
jne
leave
addb
pop
cmpl
je
push
push
not
lea
xor
push
or
not
add
ror
rol
sub
shr
sub
pop
add
add
pop
push
shr
pop
push
push
dec
pop
call
push
lea
push
lea
push
push
push
lea
push
lea
push
call
stos
push
pop
gs
mov
add
movsb
jmp
add
add
int3
fiadds
add
out
mov
add
roll
lret
mov
ret
add
addr16
popa
add
lods
add
add
fcmovbe
add
movsb
cmpsl
faddl
pop
add
cmc
leave
pop
mov
add
lcall
cmp
test
add
jns
mov
dec
add
push
or
not
add
sub
rol
sub
sub
sub
pop
add
shr
add
shl
pop
push
push
push
push
lea
push
lea
push
push
call
mov
add
add
mov
add
cwtl
and
add
lock
loop
add
mov
nop
lret
push
aam
fldl
in
add
add
jo
add
cmpsb
stos
into
jae
mov
pushf
movsb
js
add
add
imul
add
add
xchg
add
fimuls
pop
push
call
push
push
push
push
push
lea
push
push
push
lea
push
call
jp
stc
cwtl
pop
add
mov
add
fldcw
add
add
popa
add
add
add
lret
in
gs
add
add
insb
add
fcompl
js
xor
ret
test
add
add
dec
stc
ja
shr
shl
sub
push
or
not
add
sub
pop
dec
xor
lea
pop
push
xor
pop
push
push
push
call
add
add
lock
lcall
popf
pushf
add
aad
mov
add
pop
add
pop
add
mov
pop
push
lahf
jo
mov
mov
add
add
out
add
arpl
insb
sub
pop
call
cmpl
je
push
push
ror
push
or
not
add
lea
xor
not
sub
dec
sub
not
pop
shr
ror
add
lea
pop
push
xor
lea
pop
push
call
push
push
call
lods
sahf
lods
popa
add
sti
mov
movb
lock
iret
in
negl
pop
add
out
scas
add
in
clc
pop
cmpl
jne
mov
push
add
dec
pop
movl
jmp
push
push
lea
push
push
call
pusha
rcrb
cmpsb
fildll
jb
add
push
in
mov
add
add
add
add
add
imul
add
add
add
mov
add
sti
fmulp
cwtl
mov
mov
xorb
sub
pop
xor
push
add
rol
add
lea
pop
pop
push
push
push
lea
push
call
lock
add
into
sarl
add
leave
jle
add
add
add
cmc
push
add
add
push
add
in
add
fsubrl
addb
mov
lahf
jle
mov
ljmp
pop
push
xor
shr
rol
pop
pop
push
xor
rol
ror
shl
pop
pop
push
add
ror
rol
xor
pop
leave
push
sub
xor
xor
rol
pop
ret
push
push
lea
push
lea
push
push
call
cwtl
leave
mov
leave
sahf
movsb
mov
add
mov
jno
rolb
mov
in
mov
add
add
xlat
add
mov
pusha
xchg
fucomi
add
jle
cmpb
out
add
xchg
cld
add
bound
jbe
push
push
add
sar
jmp
in
lcall
push
ror
shl
pop
mov
push
push
push
push
push
push
call
xchg
add
popf
add
leave
jge
add
add
jl
add
add
fwait
shlb
fistl
bound
sti
add
ret
roll
stos
arpl
push
add
repnz
imul
pop
add
popa
add
lcall
in
push
add
sub
sub
pop
cmpl
jne
push
push
sub
add
push
push
pop
add
sub
rol
add
shr
pop
not
dec
add
pop
push
inc
pop
pushl
push
sub
not
ror
pop
call
push
push
inc
pop
call
push
lea
push
push
push
call
mov
insb
add
xchg
add
mov
jb
jmp
cmpsb
add
rolb
sti
add
xchg
stc
add
add
mov
add
add
add
add
sbb
add
push
push
push
lea
push
lea
push
push
push
call
add
jcxz
xchg
test
pop
add
pop
push
lret
add
add
mov
lea
mov
loope
xchg
sahf
sti
lds
jb
add
lcall
jge
add
test
add
add
lea
push
push
push
lea
push
push
push
push
push
call
add
fucomi
clc
pop
pop
add
mov
lahf
add
sti
lret
lret
xchg
fdivrs
add
js
add
cwtl
imul
sahf
lea
cwtl
add
scas
loope
shlb
in
fdivr
lcall
pop
pop
add
ret
push
lea
rol
shr
pop
jmp
push
push
push
push
call
pop
loop
add
add
add
mov
or
lahf
scas
rolb
roll
rolb
xchg
add
xchg
xchg
add
add
bound
push
add
xchg
imul
add
lahf
add
add
add
lcall
jge
add
test
add
add
push
sub
rol
push
push
pop
add
lea
sub
sub
inc
dec
pop
add
pop
push
ror
lea
pop
pushl
push
lea
push
lea
push
push
lea
push
lea
push
call
cmpsb
add
out
add
popa
mov
add
add
cmpsb
add
add
add
pop
in
pushf
add
data16
add
add
xchg
jo
mov
mov
shll
int
jmp
repnz
ljmp
add
nop
push
add
les
add
sub
pop
call
push
push
push
lea
push
push
lea
push
push
push
push
call
in
xchg
scas
add
push
add
add
out
stc
add
lret
add
add
pop
add
imul
add
pop
call
jmp
push
inc
pop
cmpl
je
push
push
call
rolb
add
cld
add
shll
add
fs
push
add
jl
jl
add
add
add
cwtl
test
in
mov
jns
std
add
mov
add
stc
mov
nop
jge
jno
in
clc
lcall
jge
add
add
push
shr
add
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
add
je
xchg
lcall
lods
add
roll
add
in
add
xchg
mov
add
push
jns
les
clc
lret
add
add
lods
imul
mov
jno
add
cmpsb
scas
popl
mov
push
push
push
push
push
lea
push
push
push
push
call
jecxz
aad
add
je
add
add
add
fistpl
insb
add
add
mov
add
in
loopne
call
push
push
add
lea
push
xor
add
not
lea
sub
sub
sub
shr
ror
pop
add
dec
pop
push
shr
pop
pushl
call
push
sub
ror
sub
pop
call
push
push
inc
shl
shr
push
xor
add
not
inc
lea
sub
dec
ror
pop
sub
lea
add
pop
push
lea
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
add
add
pop
add
data16
fsubrs
add
add
mov
stos
mov
fucom
movsb
add
add
add
add
lahf
xchg
adcb
add
out
ret
add
orl
add
add
js
add
add
add
add
xor
add
call
push
push
rol
rol
add
push
push
pop
add
shr
sub
inc
pop
not
pop
push
push
lea
push
lea
push
push
push
push
push
call
jle
scas
jns
mov
imul
add
push
roll
pop
xchg
in
mov
test
jge
add
sub
pop
pushl
push
pop
call
push
lea
push
call
testb
push
stc
movsb
add
aad
add
je
fwait
imul
mov
lods
add
mov
mov
add
sbbl
add
add
add
add
loopne
fistpl
loope
lea
add
sub
pop
call
push
push
rol
xor
ror
push
sub
add
dec
dec
sub
shr
xor
sub
add
pop
lea
lea
pop
push
lea
push
push
push
push
lea
push
push
call
lock
add
int
add
movsb
add
add
sahf
imul
add
addl
jle
sub
pop
pushl
push
push
lea
push
push
push
push
push
push
lea
push
call
add
xchg
fwait
cmpsb
mov
out
mov
in
repnz
add
xorl
add
add
hlt
nop
jb
add
stc
incb
ljmp
xchg
add
add
add
lret
add
add
push
xchg
int3
push
add
add
mov
lea
push
pop
add
push
push
push
push
lea
push
lea
push
push
push
call
add
lods
mov
jmp
add
add
add
add
push
add
mov
add
enter
fadds
jmp
add
add
add
add
add
sub
pop
call
push
push
sub
push
xor
add
shl
sub
add
sub
shl
pop
lea
pop
push
ror
lea
inc
pop
pushl
push
sub
pop
call
push
push
push
push
push
push
lea
push
lea
push
call
add
xchg
jecxz
arpl
out
xchg
mov
arpl
add
add
add
jle
add
enter
out
fucomip
jl
cltd
pop
lods
repnz
mov
pusha
jle
mov
jl
call
repnz
shrl
add
shrb
addr16
mov
sub
shl
not
push
or
not
add
shl
sub
dec
shr
pop
add
xor
pop
push
lea
push
push
push
push
push
push
push
call
add
fildl
stos
filds
add
pop
add
add
jmp
add
add
scas
add
jbe
add
cmc
add
cmpsb
ja
mov
je
mov
inc
xchg
add
in
add
add
mov
add
mov
jbe
add
scas
mov
data16
std
sub
pop
pushl
push
xor
pop
call
push
xor
add
pop
call
push
push
inc
push
and
add
dec
sub
add
add
not
pop
ror
add
pop
push
shr
pop
pushl
push
push
lea
push
push
push
push
push
push
push
call
add
xchg
out
push
add
mov
add
add
jno
xchg
loop
add
mov
jmp
mov
add
enter
leave
mov
mov
cli
mov
pop
add
add
add
pop
test
rolb
jbe
add
add
fadds
add
add
add
pop
in
fwait
mov
sub
pop
call
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
lds
rolb
js
add
std
ficoml
add
popf
cmc
add
test
out
add
add
add
cmpsb
movsb
sub
pop
call
push
push
not
sub
dec
push
xor
add
not
xor
sub
sub
pop
pop
push
add
pop
pushl
call
push
lea
push
push
push
push
push
push
call
mov
addr16
iret
add
add
stc
add
add
add
pushf
stc
add
add
fs
out
mov
cmpsl
sub
pop
call
push
push
rol
xor
push
and
add
xor
sub
shl
rol
sub
pop
sub
pop
push
push
push
push
push
push
push
push
push
push
call
pop
shlb
push
add
jbe
in
bound
leave
iret
lcall
add
add
jmp
add
add
popf
in
std
add
mov
sub
pop
pushl
push
push
lea
push
call
add
lods
fxch
stc
xchg
add
mov
add
scas
addb
add
add
jb
add
add
in
fidivrs
jle
add
mov
jge
add
pop
add
lcall
sbb
add
push
add
add
pop
call
push
push
sub
sub
push
or
not
add
add
shl
inc
sub
sub
sub
ror
pop
shr
sub
not
pop
push
shl
pop
pushl
push
lea
push
lea
push
push
push
push
push
call
jns
lahf
je
add
sahf
pop
push
ficoms
cmpsb
movsl
add
add
add
add
lods
jnp
mov
jno
pop
add
call
aad
shlb
jb
xchg
sub
pop
call
lea
push
shl
shr
rol
pop
push
push
sub
not
pop
call
push
push
shr
sub
push
push
pop
add
sub
dec
ror
pop
lea
rol
shl
pop
push
lea
push
lea
push
push
push
lea
push
call
add
push
pop
mov
add
cmpsl
fldcw
imul
mov
lret
int
add
add
lock
popf
add
je
add
mov
sahf
mov
out
add
call
pushl
push
add
sub
pop
call
call
push
push
sub
push
xor
add
ror
sub
lea
sub
add
pop
sub
sub
pop
push
xor
shr
pop
pushl
push
lea
push
push
push
call
notl
add
je
mov
add
mov
xchg
add
add
add
push
call
in
mov
push
test
addr16
add
jmp
add
popf
enter
add
mov
add
ja
add
xchg
add
in
lock
lcall
and
add
push
push
push
push
push
push
push
push
lea
push
call
jl
dec
add
pop
add
mov
sarb
stos
stos
add
add
pop
or
jbe
add
imul
into
add
xchg
add
add
add
push
sub
pop
call
push
push
ror
sub
push
xor
add
sub
ror
add
pop
shl
add
pop
push
push
push
push
push
push
push
push
call
outsl
mov
push
add
jae
add
add
add
mov
add
mov
jae
add
add
hlt
add
loopne
leave
arpl
jnp
test
rorl
add
pushf
add
add
fcoml
pop
xchg
nop
add
add
sub
pop
pushl
push
sub
shr
sub
dec
pop
call
push
push
lea
push
push
push
call
jl
xchg
jnp
pop
out
jle
add
mov
jl
cld
add
addr16
icebp
roll
add
add
scas
mov
jmp
add
add
pop
add
mov
mov
add
aad
fs
add
shrb
sarb
push
shl
rol
push
or
inc
add
not
add
sub
lea
pop
rol
sub
add
xor
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
add
pop
add
lods
add
loopne
add
clc
add
in
test
add
arpl
cmc
push
insb
stos
mov
fbld
fists
ljmp
add
add
push
add
jl
pop
pop
sti
add
add
mov
scas
lret
add
in
fcompl
jne
call
push
push
lea
ror
push
xor
add
add
sub
sub
sub
sub
pop
lea
dec
pop
push
push
sub
dec
push
xor
add
not
inc
sub
sub
sub
pop
rol
pop
push
lea
push
push
lea
push
lea
push
push
push
call
add
push
mov
add
jae
add
pop
js
add
cmpsb
add
add
mov
lods
jp
mov
mov
jp
loope
add
push
add
lcall
js
scas
add
out
add
add
hlt
cwtl
add
lcall
rcrb
add
inc
pop
dec
jne
push
push
lea
push
push
push
push
call
icebp
call
mov
stos
add
pusha
mov
pop
add
lea
add
add
add
add
add
rcll
call
mov
push
shl
dec
pop
int
push
sub
ror
ror
pop
lea
push
push
sub
push
push
pop
add
add
add
rol
add
sub
rol
ror
pop
add
pop
push
push
push
push
push
lea
push
push
push
push
call
mov
fidivrs
add
pop
add
add
add
imul
cmpsl
mov
in
fcompl
jne
push
sub
shl
pop
call
push
push
add
rol
pop
call
push
push
sub
push
xor
add
sub
lea
sub
xor
add
pop
shr
not
ror
pop
push
push
lea
push
lea
push
call
add
repnz
add
cwtl
pop
lods
add
add
repnz
add
add
add
add
add
push
lods
fadds
xchg
add
jnp
loope
cltd
rclb
sub
pop
pushl
push
push
push
lea
push
push
push
push
push
call
cmpsb
test
sti
in
add
imul
jno
add
in
addb
testb
add
jmp
cltd
negl
movsl
pushf
jmp
cwtl
mov
add
xchg
add
add
pop
add
add
aam
xchg
sub
pop
call
push
lea
push
push
push
push
push
call
pop
add
shll
loopne
add
in
mov
add
repnz
ret
add
add
add
add
add
addl
les
add
popf
add
in
add
icebp
ror
add
xchg
incb
test
sub
pop
call
push
sub
pop
mov
lea
push
push
lea
push
and
add
not
sub
shl
dec
pop
xor
pop
push
push
lea
push
push
call
in
aam
jo
cltd
stc
xchg
add
add
add
add
imul
jle
add
enter
add
scas
test
mov
jge
add
add
jnp
js
faddp
add
lret
int
mov
lods
add
mov
lcall
jne
call
push
lea
pop
lea
push
not
sub
shl
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
lods
xlat
mov
out
add
jle
add
lds
loope
ficoms
icebp
add
add
jl
fs
add
add
push
not
movsb
aad
outsl
add
push
les
out
stos
xchg
outsl
scas
add
lods
jle
sub
pop
push
pushl
push
push
not
lea
push
xor
add
rol
dec
not
sub
shr
add
add
shr
pop
lea
pop
push
add
pop
push
push
push
push
call
jmp
jbe
add
mov
or
incb
addb
add
add
add
add
add
add
add
jbe
loope
jnp
std
jbe
test
add
add
push
add
lcall
cmpsl
mov
cltd
nop
enter
cwtl
jle
mov
add
mov
pop
call
push
push
lea
push
xor
add
sub
sub
sub
sub
rol
pop
add
dec
not
rol
pop
push
push
push
push
push
push
push
lea
push
push
call
ljmp
addb
add
add
add
add
add
jmp
add
movsl
add
movsl
cli
cld
fildl
add
add
add
jp
cld
roll
pop
pushl
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
ja
mov
addb
fcmovbe
mov
test
add
add
push
add
out
add
mov
fcomps
loop
add
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
fwait
mov
add
fiaddl
add
add
fiaddl
add
icebp
test
aam
add
fidivrl
addl
fsubrp
push
leave
add
add
mov
in
fcompl
call
push
push
lea
push
and
add
not
lea
sub
shl
pop
add
add
ror
add
pop
push
dec
shr
pop
pushl
push
push
push
push
push
push
lea
push
push
call
hlt
add
add
xchg
xchg
jns
xchg
add
add
add
in
fucom
cmp
call
jo
pop
in
lods
add
lcall
int
add
call
push
add
inc
pop
pushl
push
rol
xor
pop
mov
jmp
push
push
xor
add
push
xor
add
not
sub
sub
sub
lea
pop
xor
lea
ror
pop
push
inc
shl
sub
pop
pushl
call
push
shr
add
add
sub
pop
push
push
lea
ror
ror
pop
call
push
push
shr
sub
inc
push
sub
add
rol
sub
xor
sub
add
pop
add
lea
dec
pop
push
add
pop
pushl
push
sub
dec
dec
rol
pop
call
push
lea
push
push
push
push
lea
push
lea
push
call
outsl
mov
flds
add
add
add
xchg
add
fsubr
fists
aam
add
pop
push
sahf
lock
test
fistl
pushf
add
add
enter
stos
add
int
fsubr
add
add
mov
in
in
lcall
push
push
push
lea
push
call
add
pop
push
out
out
nop
mov
add
mov
cwtl
xchg
mov
cmc
add
xchg
int
add
lods
add
pop
add
out
nop
data16
aad
mull
flds
add
mov
stc
add
add
js
filds
add
iret
add
lret
lock
call
push
lea
push
push
push
lea
push
push
lea
push
push
call
iret
popa
add
push
movsl
pop
jno
add
add
sti
pop
add
jecxz
cmc
add
enter
xchg
add
add
add
add
xchg
add
stos
cltd
sar
add
jno
add
test
stos
idivb
pop
add
add
add
mov
leave
push
push
push
call
pushf
mov
add
roll
add
add
leave
test
leave
add
stos
test
add
cli
xchg
pusha
add
add
add
add
jo
in
hlt
lcall
les
push
add
rol
pop
pop
pop
push
dec
dec
pop
pop
push
push
push
push
push
push
call
mov
add
out
movl
add
add
in
add
add
cwtl
add
cmc
add
cwtl
add
cwtl
xorb
add
out
popa
add
mov
push
pop
in
add
jb
nop
jecxz
enter
in
gs
clc
xchg
movsl
add
popl
rclb
sub
pop
inc
push
shl
lea
pop
ret
leave
push
push
push
call
add
add
fs
outsl
dec
js
movb
loopne
push
scas
aam
add
mov
add
stos
testb
push
sub
pop
ret
push
push
lea
push
push
push
push
call
add
xchg
add
push
add
jne
mov
add
add
lods
test
test
test
add
mov
add
mov
out
push
fwait
popf
cli
hlt
add
lcall
lcall
push
push
lea
push
push
push
push
push
lea
push
call
cld
int
addb
add
add
add
add
xchg
mov
in
add
lahf
enter
add
movsl
jb
nop
add
pop
xchg
add
jae
add
adcl
add
in
sub
pop
mov
cmpl
jne
push
xor
lea
pop
mov
push
push
push
lea
push
push
push
push
call
push
mov
pop
xchg
sti
add
scas
stc
mov
cwtl
lahf
sti
stos
into
jb
add
push
leave
pop
mov
lods
in
aam
xchg
add
fs
stos
add
cld
add
mov
int3
xchg
add
test
add
add
pusha
sub
pop
jmp
push
push
lea
push
push
push
push
push
call
add
add
subl
pop
xchg
add
add
lret
mov
mov
repnz
add
pop
add
add
fidivrl
fsubr
add
lcall
inc
or
loope
add
pop
and
push
lea
lea
pop
xor
push
ror
xor
xor
pop
xor
add
push
push
call
mov
push
add
add
jmp
add
cmpsl
mov
addb
add
loopne
lcall
cmc
aam
cmpsl
add
lahf
lret
push
subl
lret
pop
push
mov
add
push
add
xchg
add
xchg
pop
mov
cmc
add
cwtl
add
std
add
call
lcall
dec
decl
rol
rol
pop
sub
push
sub
pop
jmp
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
lcall
mov
add
add
sti
jbe
repnz
test
insb
xchg
xchg
add
add
add
jns
add
movb
rcr
loopne
mov
pop
cwtl
add
add
movsb
add
sub
pop
sub
pushl
push
dec
sub
not
pop
pop
push
sub
not
pop
sub
push
inc
shl
shl
pop
cmp
jne
push
dec
pop
mov
lea
push
push
push
push
push
push
push
call
test
add
add
fldl
cmpsl
add
lock
add
jns
mov
add
imul
add
sub
lcall
jmp
add
lea
pop
shr
add
push
lea
push
push
lea
push
push
lea
push
call
add
loope
add
fcmovb
add
movsl
add
call
fwait
mov
ret
add
out
add
sub
pop
sub
push
lea
push
push
lea
push
push
push
push
push
call
mov
mov
in
add
mov
cmpsl
cmpsl
push
les
jmp
into
int
arpl
add
add
nop
add
pop
add
fwait
add
popf
add
addl
add
mov
incb
sub
pop
pushl
pop
push
add
shr
pop
shr
push
push
call
add
add
ret
arpl
add
add
add
add
push
push
add
popf
xchg
in
addr16
add
fldcw
popf
mov
imul
lahf
add
add
add
jnp
mov
mov
jmp
fildl
sub
pop
and
sub
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
mov
test
test
push
stos
shl
add
mov
cld
mov
add
add
movl
sbb
test
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
mov
sahf
xchg
mov
out
mov
mov
add
add
add
add
add
bound
ret
push
rol
pop
push
push
push
lea
push
lea
push
lea
push
push
push
call
push
push
add
in
add
add
add
test
add
mov
lret
flds
add
mov
jp
imul
add
mov
icebp
outsl
loopne
leave
add
add
mov
jge
add
nop
add
add
out
push
mov
add
sub
pop
mov
push
pop
add
push
rol
pop
push
push
sub
pop
push
push
inc
pop
push
push
add
pop
push
push
lea
push
push
call
pop
add
push
rolb
push
lret
addr16
pop
clc
iret
sti
push
add
test
add
add
add
in
out
push
add
jecxz
hlt
add
pop
add
push
lret
loopne
push
pop
add
pop
mov
add
jl
add
movb
push
call
add
out
in
hlt
lcall
mov
push
push
push
push
lea
push
push
push
call
jecxz
add
fiaddl
add
add
add
in
cmc
jnp
xchg
repnz
push
leave
icebp
add
add
mov
xchg
add
mov
lahf
repnz
cli
jge
push
add
pop
mov
lcall
push
cmp
push
push
call
test
test
add
popf
imul
add
scas
add
idivb
push
pop
add
add
mov
mov
add
lcall
add
fdivl
add
rorb
cmpsb
add
lcall
ljmp
pop
mov
shr
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
stos
popf
xchg
in
add
add
xchg
int3
fcmovbe
add
hlt
sar
mov
jmp
in
add
add
aad
enter
add
out
insb
insb
add
add
pop
add
push
sub
pop
mov
add
push
push
lea
push
push
call
xchg
xchg
jmp
pop
cld
add
jae
mov
add
add
add
add
push
add
jmp
testb
pop
mov
mov
add
add
add
fs
jmp
xchg
add
incb
add
add
stos
not
add
clc
shl
mov
add
out
add
jbe
popl
jnp
push
xor
add
pop
add
xor
push
shl
sub
ror
pop
mov
push
not
ror
not
pop
and
push
xor
pop
rol
push
rol
add
pop
rol
xor
push
pop
inc
push
sub
pop
cmpb
jne
push
add
sub
pop
add
cmp
je
push
push
push
push
call
add
add
shl
add
lcall
add
popf
out
add
jne
mov
divl
push
jno
add
jns
add
add
add
pop
rolb
mov
scas
in
add
sub
pop
add
push
push
push
push
push
push
push
push
call
cmpsl
pop
xchg
into
popa
repnz
lds
xlat
add
jecxz
add
mov
pop
mov
mov
jo
jmp
notb
loopne
cmpl
jne
xor
push
push
push
push
push
push
push
push
call
add
add
pop
add
enter
push
leave
add
add
lea
add
out
add
mov
add
in
mov
add
fadds
mov
mov
rol
sub
pop
pop
pop
push
inc
rol
dec
pop
pop
push
sub
sub
pop
pop
push
lea
push
push
call
pushf
push
jle
push
leave
mov
mov
add
add
mov
roll
roll
add
add
jmp
add
add
push
filds
add
popa
in
insb
imul
out
movsl
andl
stos
mov
jae
in
hlt
pop
pop
leave
push
add
shl
pop
ret
push
rol
add
add
pop
mov
push
push
lea
push
lea
push
lea
push
push
push
push
call
ljmp
in
push
add
adcb
sti
lahf
jne
fnstsw
push
stos
add
add
insb
mov
add
add
filds
loope
push
push
add
add
in
lcall
stos
bound
lock
sub
pop
add
push
not
pop
mov
push
push
add
pop
mull
pop
push
push
call
mov
rolb
fiadds
lods
add
add
add
movb
cli
je
mov
outsl
add
add
mov
divb
call
push
lea
push
push
push
push
push
lea
push
call
add
add
add
jo
fisubs
scas
add
pop
push
fs
pop
add
push
jl
mov
add
test
lret
sub
pop
push
push
push
call
out
add
rorb
add
out
lret
mov
add
out
push
add
lods
movl
mov
mov
push
add
pusha
fisubrs
outsl
add
push
add
insb
enter
add
mov
add
jmp
add
add
into
int
rolb
out
hlt
call
push
push
lea
push
push
push
push
push
push
call
jae
add
add
lds
in
add
xchg
xchg
shrb
add
add
fwait
jmp
scas
add
add
sub
pop
xor
push
push
lea
push
lea
push
push
call
hlt
sahf
nop
aad
nop
xchg
js
xchg
int
pop
stos
add
addl
add
xchg
add
jecxz
lods
push
add
sub
pop
pop
push
push
push
call
cltd
std
movsl
cld
mov
add
mov
bound
pop
fwait
jge
mov
add
pop
pop
ficompl
push
stos
sarl
ljmp
add
icebp
jno
add
mov
add
jbe
cltd
add
hlt
pop
pop
push
shl
shr
add
pop
pop
push
xor
shr
sub
xor
pop
pop
pop
push
shl
xor
pop
leave
push
sub
xor
pop
ret
push
ror
add
shl
pop
push
push
push
push
lea
push
push
push
push
call
xchg
jns
add
fimuls
pop
fildl
add
stos
enter
push
mov
call
icebp
xchg
add
sti
addl
icebp
add
pop
add
loope
mov
scas
shll
sub
pop
mov
add
push
push
lea
push
push
push
push
call
fwait
pop
addr16
repnz
add
popa
add
xchg
add
add
add
mov
add
add
add
add
add
int3
add
add
movsb
xchg
add
mov
in
mov
jb
add
add
rolb
fiaddl
outsl
loope
add
mov
push
push
lea
pop
push
push
not
pop
push
push
not
not
add
not
pop
push
mov
push
push
lea
push
lea
push
lea
push
push
push
call
movsl
add
add
fcmovbe
add
mov
mov
add
jl
jmp
add
mov
outsl
mov
pop
sub
pop
push
push
rol
pop
pop
lea
push
lea
push
push
push
call
add
add
cltd
push
add
add
xchg
mov
lds
out
jb
mov
enter
ficoms
add
movl
add
mov
mov
les
mov
lock
sub
push
sub
pop
mov
push
lea
pop
shr
push
not
pop
add
push
rol
pop
mov
push
rol
dec
pop
add
push
lea
push
push
push
push
push
push
lea
push
push
call
pop
xor
add
in
add
in
jl
add
rol
add
add
mov
pop
jle
add
add
ja
push
pushf
rol
add
stos
add
not
add
add
xchg
popa
pop
mov
mov
mov
sub
pop
pushl
push
push
push
call
fisttpl
add
add
push
add
fiaddl
fiaddl
add
add
fstpl
add
int3
ficompl
add
pop
popl
push
push
lea
push
call
add
add
sub
jb
add
mov
out
xchg
jo
cmpsl
pop
in
mov
icebp
xchg
push
add
add
test
aad
push
cltd
add
mov
pop
pop
scas
addr16
sub
pop
mov
push
lea
push
lea
push
push
push
push
push
push
call
repnz
add
add
add
pusha
xchg
movb
ficoml
fildl
je
lcall
mov
loopne
lcall
stc
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
jb
mov
add
add
add
cmpsl
add
add
add
mov
stos
mov
ljmp
lret
cli
pushf
ja
add
add
sti
add
jns
push
add
push
push
neg
cltd
add
add
mov
lcall
notb
add
inc
inc
ljmp
call
cld
add
pop
add
in
add
arpl
popfw
add
testl
add
mov
mov
outsl
fisubl
push
out
mov
aad
add
std
add
mov
add
add
add
mov
sahf
jle
sti
sub
pop
lea
mov
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
incb
movsl
push
add
push
pop
add
test
mov
stos
filds
mov
addb
subl
add
add
call
pop
add
add
bound
add
mov
cwtl
add
sub
pop
add
push
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
addl
add
in
add
ja
je
add
add
pop
mov
subl
pop
cmc
push
flds
lcall
rclb
push
lea
push
push
lea
push
push
lea
push
push
push
call
testb
jecxz
add
pushf
add
xchg
in
bound
push
lcall
jbe
stc
lods
push
mov
leave
add
push
pop
add
rol
nop
push
ror
dec
pop
nop
push
not
add
xor
add
pop
xor
push
add
pop
nop
nop
push
lea
push
push
push
lea
push
push
push
call
jbe
cmpsl
js
push
clc
add
in
jle
mov
mov
test
mov
imul
pop
hlt
jae
jo
mov
mov
fmul
add
add
add
in
mov
out
mov
sub
pop
inc
nop
push
xor
pop
nop
push
xor
ror
pop
cmpb
jne
add
push
xor
dec
add
pop
nop
push
inc
pop
nop
push
push
push
push
push
push
push
push
push
call
repnz
clc
add
mov
sti
sahf
scas
movsl
add
add
add
add
add
test
add
add
addb
mov
add
pop
fiadds
mov
add
mov
fdivr
lcall
inc
or
test
add
add
loope
lea
pop
nop
push
lea
push
push
push
call
add
add
lea
jle
mov
addb
lea
popf
mov
into
ror
add
add
add
jecxz
lcall
sub
pop
nop
push
inc
sub
xor
pop
inc
push
lea
xor
pop
nop
nop
push
add
dec
shr
pop
cmp
jb
push
push
push
push
push
push
call
insb
fidivs
shlb
add
fwait
lcall
add
pop
add
ret
fs
add
test
pop
clc
add
lods
pop
add
add
xlat
mov
add
rclb
into
push
call
add
loope
lock
hlt
add
imul
lods
mov
add
jno
mov
mov
add
jecxz
lahf
lret
jne
icebp
add
cmp
add
push
inc
rol
add
pop
mov
push
shl
rol
pop
add
push
not
add
pop
movzwl
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
add
push
enter
push
add
add
scas
mov
in
add
scas
add
cmc
add
rolb
add
add
add
add
add
add
add
add
lcall
inc
sbb
lea
add
pop
add
push
push
push
lea
push
call
add
jmp
data16
jae
push
hlt
jge
add
jns
out
enter
addr16
add
cltd
test
add
ja
jnp
add
add
add
cmpsl
push
add
mov
jnp
pop
add
nop
call
icebp
add
mov
fwait
loopne
cli
orl
mov
push
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
stos
movsb
add
add
pop
add
and
lret
mov
fidivrl
mov
in
jne
test
add
lods
test
xchg
add
fmul
cmpsb
clc
xchg
loop
add
sub
pop
xor
xor
push
not
dec
pop
shl
xor
push
pop
shl
push
lea
push
push
push
push
call
add
int
std
mov
mov
add
mov
int3
pop
test
lret
add
ljmp
add
dec
nop
add
out
add
pop
shl
xor
push
push
lea
push
lea
push
push
call
pop
push
add
ljmp
xchg
mov
mov
loopne
add
mov
andb
add
test
testl
aad
add
fs
icebp
into
add
loop
add
imul
push
xor
pop
add
pop
push
push
push
lea
push
push
lea
push
call
nop
in
add
lahf
push
add
fwait
add
mov
pop
stos
add
add
add
mov
lcall
lcall
pop
push
add
pop
pop
push
push
push
call
add
add
jecxz
icebp
jbe
cltd
jle
movsb
loop
add
push
add
bound
loop
add
add
cwtl
out
add
add
add
lds
pop
add
mov
sti
xchg
add
add
push
push
lret
mov
add
push
push
lea
push
push
lea
push
push
lea
push
push
call
sahf
lock
add
add
fprem1
ja
sahf
add
mov
add
add
fldl
cltd
repnz
add
add
les
in
loopne
lcall
or
push
inc
add
pop
push
push
shr
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
add
push
jne
bound
xchg
sarb
add
nop
add
xchg
mov
scas
addb
add
sti
lret
xchg
sub
pop
push
push
lea
push
lea
push
push
push
push
push
call
add
add
add
addb
out
add
out
add
add
add
push
mov
bound
jge
incb
lcall
push
push
lea
push
push
push
push
push
call
loopne
add
add
pop
add
add
cli
lcall
pop
add
add
jp
add
mov
je
add
adcl
arpl
std
xchg
add
push
add
enter
xchg
fistpl
addr16
test
push
lea
push
push
call
cli
add
mov
lea
mov
add
fcompl
push
lods
mov
xchg
add
add
popf
xchg
imul
push
add
add
xchg
add
jp
addl
scas
xchg
add
scas
push
fadds
add
add
sub
pop
mov
push
push
push
call
add
aam
jecxz
pop
add
lock
cltd
mov
mov
add
mov
fistps
mov
add
arpl
add
add
lds
aam
idivb
xchg
add
in
hlt
pop
mov
push
sub
pop
mov
test
je
push
push
push
push
push
lea
push
call
add
mov
add
jb
loope
sti
add
cld
movsb
cwtl
repnz
add
add
roll
out
clc
movsl
gs
add
mov
lahf
fsubs
add
mov
add
add
add
push
testb
xlat
add
xchg
in
pop
add
xchg
xchg
add
ficompl
in
call
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
xlat
bound
push
mov
jnp
test
jbe
in
incb
stos
popl
mov
imul
cmpsl
repnz
mov
insb
add
mov
lret
jge
jmp
xchg
rolb
add
add
nop
add
mov
lea
push
arpl
xchg
loop
add
add
mov
push
sub
pop
test
je
push
push
push
push
push
lea
push
lea
push
push
call
add
cltd
test
iret
mov
aad
add
cmpsb
testb
shlb
outsl
add
in
mov
repnz
xchg
imul
lock
add
jns
rolb
mov
mov
cmpsl
mov
pop
test
data16
stos
add
add
add
mov
add
lcall
testl
jmp
push
lea
push
lea
push
push
push
lea
push
call
add
xchg
add
ljmp
xchg
test
mov
fcoml
les
add
cmpsl
mov
mov
fwait
lret
mov
pop
inc
push
lea
push
push
lea
push
call
push
add
add
mov
add
aam
hlt
add
jle
aad
add
shlb
mov
lcall
add
loopne
add
pop
mov
pop
enter
add
lahf
lcall
leave
jo
add
mov
add
sub
pop
cmp
je
test
je
push
push
lea
push
lea
push
push
call
cmpsb
notb
hlt
pop
mov
rolb
cmpsl
add
add
out
rclb
add
iret
jnp
mov
mov
mov
mov
push
add
sub
sub
pop
inc
push
lea
push
push
call
add
add
add
add
aad
add
add
xor
ljmp
into
jno
jb
push
jecxz
sbbb
test
jle
add
into
add
movl
add
in
fidivl
add
add
add
cli
add
cmp
je
push
shl
pop
test
jne
push
lea
push
lea
push
push
call
pop
mov
add
mov
lods
mov
out
movl
add
jb
add
add
jecxz
jecxz
mov
add
fildl
cmc
pop
mov
incb
lahf
popa
sub
pop
xor
push
dec
pop
pop
pop
push
rol
pop
pop
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
stos
arpl
add
add
hlt
popl
add
negb
xchg
add
shl
pop
add
pop
add
jge
xchg
movl
jb
add
jecxz
add
add
sub
pop
pop
leave
push
xor
xor
pop
ret
mov
push
xor
dec
pop
inc
cmp
jne
push
push
lea
push
push
push
push
push
call
push
add
add
add
scas
add
add
arpl
jnp
mov
add
fcmovu
add
add
add
add
lret
stos
jo
xchg
add
add
out
loop
rolb
add
sti
hlt
test
add
movl
add
jno
cmpsl
lea
test
pop
ljmp
testl
jl
adc
std
rol
pop
mov
push
ror
pop
test
je
push
dec
sub
shr
ror
pop
mov
add
push
inc
pop
cmp
jne
mov
push
push
push
push
call
jbe
add
jb
out
fadds
add
add
add
mov
sti
add
add
add
add
cwtl
mov
lcall
mov
add
outsl
loope
add
scas
stos
pop
add
jb
testb
je
push
sub
sub
pop
mov
push
lea
push
call
xchg
jne
js
add
add
add
push
xchg
jmp
add
stc
fildl
jae
pop
add
jecxz
add
out
addb
xchg
fcmovbe
add
fs
mov
mov
xchg
fcoml
add
add
jo
push
add
fcmovnbe
jle
push
les
add
add
popa
cmpl
lcall
roll
loopne
test
call
out
mov
cli
sub
sub
pop
jmp
xor
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
leave
insb
add
push
add
add
add
out
add
pushf
add
add
add
add
shlw
add
jo
sub
pop
pop
push
rol
sub
not
shl
pop
pop
pop
push
lea
inc
pop
pop
push
lea
push
push
push
push
push
push
call
jno
imul
add
cltd
sahf
cwtl
add
mov
flds
add
rolb
loop
add
add
add
add
stc
cmc
add
lret
add
mov
add
mov
push
in
add
add
int3
xchg
add
lds
mov
sub
pop
leave
push
push
push
push
call
addl
mov
add
ljmp
add
pop
lret
addl
cld
mov
add
add
cmc
jns
cmc
mov
int
mov
into
add
fsub
add
sti
filds
add
add
add
mov
add
pop
add
mov
sub
pop
ret
push
push
push
lea
push
push
call
jbe
lea
fndisi(8087
add
jb
mov
push
push
add
add
add
lods
cmpsl
add
addl
jb
enter
push
scas
xchg
add
push
repnz
add
adcl
je
cmpsl
mov
pusha
jmp
in
loopne
mov
pushf
jae
mov
in
in
lcall
inc
lcall
push
push
push
call
add
mov
out
addr16
sub
jo
lds
push
add
jns
add
fwait
lds
lea
bound
add
add
mov
cmc
add
add
add
test
add
jle
add
add
sarb
add
add
xchg
add
out
in
lock
lcall
push
shr
pop
pop
push
shr
shl
pop
pop
leave
push
xor
inc
pop
ret
push
rol
inc
pop
mov
push
push
push
push
call
lcall
add
data16
add
pop
mov
mov
sahf
mov
nop
icebp
add
add
testb
add
cmpsb
add
roll
int
add
cmpsl
add
mov
add
mov
test
lea
add
insb
add
push
push
lea
push
push
push
push
push
push
push
call
fsts
add
add
add
push
jge
mov
add
bound
add
iret
add
popa
rolb
fwait
push
pushf
test
add
add
jecxz
add
add
scas
fiaddl
jno
xchg
leavew
sub
pop
pop
push
push
push
push
lea
push
push
push
call
push
xchg
add
lcall
push
add
popl
sbb
out
jnp
add
fstpl
shll
jle
pop
roll
mov
scas
loop
add
cld
push
add
fiaddl
xchg
imul
mov
pop
pop
pop
push
shl
xor
rol
inc
pop
leave
push
rol
sub
pop
ret
cmp
mov
xor
mov
mov
mov
icebp
into
mov
loope
mov
ror
mov
lret
add
mov
xchg
lret
or
imul
add
adc
test
jns
movl
lret
sbb
iret
dec
jl
fs
mov
imul
push
mov
dec
jo
aam
in
mov
sub
das
and
fisubrs
scas
cmc
mov
adc
push
xchg
rclb
fsqrt
loope
ljmp
test
in
add
adc
sbb
inc
lods
cmp
int
divb
das
dec
xor
inc
xor
sbb
lds
hlt
and
stos
jnp
pop
or
or
cmp
lods
data16
xor
out
inc
test
cmp
push
cmc
leave
xchg
fbld
hlt
inc
leave
inc
lahf
test
ret
cmp
arpl
outsb
mov
cmpsl
mov
jbe
gs
sarl
dec
outsb
push
and
dec
ret
shrb
cmp
pop
mov
cmpsb
sub
mov
push
adc
cmpl
push
mov
dec
push
stc
add
push
add
inc
sub
or
mov
push
std
out
push
or
pop
pop
jnp
fwait
loop
dec
imul
or
lods
mov
fbld
scas
pushf
in
inc
adc
ror
or
sub
jg
gs
pop
scas
hlt
mov
mov
cmc
jmp
adc
cmc
fcmovnu
inc
or
sbb
test
scas
mov
pop
fs
xchg
jge,pn
lret
mov
xchg
out
mov
popf
sub
scas
das
push
outsb
mov
icebp
or
ds
fnstsw
push
or
adcl
fisttpl
dec
sub
mov
lods
dec
and
xchg
arpl
mov
push
lods
and
push
push
pop
pushf
or
jns
std
das
int
ss
cltd
fsts
enter
adc
cmpsl
mov
xchg
hlt
or
pop
mov
sub
push
movsl
jno
xor
mov
outsb
or
loopne
or
std
popa
cmp
ficoms
inc
cmp
pop
pop
lret
movsb
insb
xchg
repnz
sub
jno
sbb
mov
jge
mov
or
push
mov
lock
sub
lcall
or
dec
xor
inc
pop
hlt
adc
pop
pop
gs
daa
shlb
out
xchg
mov
in
sub
in
mov
jecxz
xor
mov
and
jno
mov
out
dec
sbbb
push
mov
fwait
loope
mov
gs
cmp
and
adc
xchg
xor
and
sbb
in
lahf
icebp
pop
adc
sub
mov
and
out
out
inc
lret
lcall
rolb
jns
push
mov
aaa
out
pop
loopne
inc
aaa
insl
jo
mov
sahf
outsb
mov
jb
mov
ret
sarl
enter
movsl
xor
jl
stos
sahf
inc
scas
push
jmp
stc
adc
sbb
shl
icebp
fwait
adc
jne
frstor
lds
mov
dec
mov
pop
outsl
lret
test
dec
mov
push
cmp
inc
jmp
dec
cli
jl
les
sub
adc
cmpsl
stos
outsl
mov
dec
mov
in
cltd
or
and
dec
mov
xchg
add
inc
movsb
xchg
rcrl
data16
mov
cmc
xchg
sbb
dec
cmp
mov
push
pop
test
adc
and
pop
xor
adc
sahf
in
lret
add
in
iret
mov
ja
inc
leave
enter
fildl
dec
cs
xchg
pop
ret
iret
inc
out
xchg
xchg
mov
sahf
bound
cs
push
in
jo
mov
inc
lahf
xchg
xchg
test
movsb
mov
pushf
cmp
inc
add
test
pop
mov
jge
mov
sbb
push
testl
loop
sbbl
dec
jmp
out
mov
das
and
insl
fisttps
mov
jmp
inc
test
xchg
inc
push
or
xlat
adc
sbb
cmp
or
cld
dec
xchg
and
outsl
push
mov
dec
push
mov
daa
pop
mov
jle
lahf
ljmp
outsb
sub
sbb
scas
sbb
sub
jmp
in
sbb
mov
mov
mov
xor
movsb
pop
outsl
xchg
xor
mov
loope
stc
shl
add
inc
xor
insl
cmc
xchg
aam
arpl
or
pop
ss
cs
dec
jbe
ljmp
jb
sarl
push
rol
lods
xor
pop
cwtl
jne
out
pusha
cmp
inc
pop
es
lods
push
test
add
jecxz
push
pop
lock
and
mov
fneni(8087
decl
and
orl
inc
shll
push
ror
pop
or
rcr
test
shll
mov
int3
clc
in
stos
add
pushf
push
jg
xor
jnp
or
xchg
test
stos
sti
adc
ret
and
lret
or
and
out
xchg
ljmp
and
lahf
adc
jmp
andb
lea
popa
addr16
mov
sarb
data16
ja
mov
mov
sub
pop
mov
cwtl
ds
lret
nop
aaa
or
and
notb
test
mov
out
jbe
ret
shlb
cmp
dec
sub
pushf
lods
cmpsl
test
mov
clc
jmp
pop
push
push
ljmp
mov
mov
stc
loope
daa
out
and
push
aam
add
stos
or
push
mov
inc
push
xlat
cmp
imul
push
mov
mov
adc
popa
xchg
in
mov
xor
and
xchg
aam
xchg
cmp
fstl
flds
or
cmp
fimuls
xchg
sahf
xchg
out
leave
sbb
and
jl
pop
call
loope
and
into
ljmp
data16
mov
mov
push
mov
movsl
imul
pop
add
in
inc
sbb
mull
loopne
addr16
into
jp
sarb
movl
jnp
mov
push
repz
mov
dec
sahf
jl
and
sti
sbb
shll
cmc
imul
add
inc
mov
inc
or
fucomip
cmc
or
mov
in
negl
jb
lahf
or
or
fs
push
cwtl
jnp
or
pop
mov
cld
sbb
fsubrs
pop
cmpsb
mov
aaa
or
loope
push
or
rclb
xor
gs
repz
ret
inc
sarl
mul
lret
nop
pop
stos
loope
sub
jo
adc
fistpll
out
cmp
orl
cmp
mov
cltd
scas
dec
fistpll
add
jge
sub
ljmp
test
jl
cmpl
push
test
sub
ds
cmp
fidivl
push
inc
shr
xchg
push
es
jnp
hlt
push
pop
xchg
test
jle
out
mov
mov
pusha
mov
loope
or
cld
sbb
repz
es
lock
dec
fidivl
add
jecxz
popa
pop
out
loopne
pop
enter
movsb
xor
scas
out
cmc
das
popl
ror
enter
repz
jno
push
mov
push
fwait
stos
in
clc
cli
mov
fwait
ds
lahf
cltd
pop
push
loopne
push
push
shll
push
les
jmp
and
sub
sti
cli
out
xor
loope
js
scas
fbstp
aad
dec
pop
pop
js
pop
mov
jmp
subl
adc
addr16
push
rolb
jle
push
hlt
pop
mov
icebp
out
ret
ljmp
or
into
xor
scas
xlat
and
imul
sbb
sub
lahf
aas
jle
sub
jae
scas
shl
jo
ss
xchg
xchg
inc
sub
inc
add
push
pop
insl
xor
repz
xchg
fiaddl
mov
cmp
inc
jo
adc
adc
scas
xor
lret
js
jne
dec
cmp
mov
bound
fs
call
sub
xor
jae
dec
incb
test
add
pusha
adc
jno
mov
mov
mov
inc
icebp
sbb
or
and
inc
shlb
or
pusha
lret
push
jle
xchg
in
mov
cli
lret
sti
inc
mov
in
add
mov
add
jns
loop
addr16
mov
and
outsb
repnz
or
cltd
cmp
inc
sbbb
insb
jno
cmp
iret
push
fs
push
lods
mov
repnz
fwait
add
add
dec
iret
fs
das
mov
into
xchg
xor
aas
xchg
cmc
mov
ds
push
cli
xorb
pop
inc
mov
adc
jb
fcmovnu
inc
lret
jns
rclb
push
add
mov
in
xor
mov
shlb
jne
aam
jbe
and
sub
negb
pop
hlt
sub
xchg
xchg
andb
fsubs
cltd
cmp
xchg
stos
frstor
out
jb
push
movsb
xchg
mov
xchg
cld
push
xchg
mov
das
inc
movsb
in
and
cmpl
adc
pop
and
shlb
or
mul
popf
fdivs
test
test
and
sbb
xor
cmp
push
jne
and
xchg
lds
rcll
fs
out
iret
push
inc
fistl
int
pop
mov
or
sbb
lock
mov
aaa
ds
inc
push
dec
jge
jo
or
xor
or
mov
cmpl
fnsave
sbb
mov
dec
sbb
mov
mov
xchg
pop
js
mov
jmp
xchg
sbb
mov
or
in
fists
test
ja
push
clc
dec
sbb
jo
pop
or
out
repz
cmp
or
xlat
adc
fnsave
inc
push
pop
xor
cmp
jae
mov
in
sbb
bound
inc
inc
insb
lock
jl
sub
xor
push
sub
and
imul
xor
notl
mov
shll
adc
aas
sbb
stos
data16
add
ret
mov
push
iret
mov
mov
sbb
fs
pop
in
push
es
int
movsb
inc
inc
outsl
and
scas
xor
mov
mov
cmp
pop
or
mov
dec
xor
cmc
add
inc
test
adc
or
out
mov
dec
lea
lcall
mov
push
das
pop
mov
jae
ret
mov
sbb
out
mov
jg
pop
push
sarb
mov
call
push
test
repz
xorb
icebp
mov
sbb
call
and
cmp
adc
imul
movsb
mov
cmp
dec
hlt
out
sub
pop
xlat
gs
add
and
pusha
and
xor
stc
cmp
adc
test
cmpb
int3
sub
inc
and
sbb
sub
fidivrl
outsl
xchg
pop
std
pop
or
out
push
data16
push
pop
add
sub
jo
mov
mov
xchg
mov
test
pop
loopne
jle
sarb
push
or
daa
jno
je
repz
push
fdivl
mov
adc
mov
jo
aam
inc
lods
rolb
clc
xchg
inc
mov
and
cwtl
stc
ja
stos
std
inc
movsl
mov
jb
lods
or
add
enter
les
jnp
scas
xchg
or
mov
into
mov
mov
push
fcomip
mov
sub
jbe
test
cmp
mov
mov
mov
xchg
in
out
test
and
xchg
nop
push
adc
ds
rorb
repz
fmuls
adc
adc
fcomps
xchg
cmp
idivb
add
lock
jp
sbb
in
xor
ret
test
push
pop
xchg
aam
add
lret
mov
in
js
dec
call
subl
or
sbb
enter
mov
fwait
mov
cltd
jb
cwtl
xlat
inc
jbe
iret
add
ljmp
or
jle
shll
addr16
test
xchg
mov
mov
inc
mov
push
fcomp
invd
test
mov
fcompl
inc
daa
sub
hlt
scas
cmpsb
cmp
jge
loopne
mov
mov
fidivrs
dec
loopew
gs
inc
bound
lcall
rcrl
repz
adc
inc
mov
sahf
ja,pt
push
pop
xor
push
nop
adc
jl
in
loopne
jne
stos
out
add
stc
mov
data16
fisubs
cmpsb
push
add
mov
movsl
lret
ljmp
mov
out
ss
adcl
pop
push
ds
pop
cmpsl
imul
or
fs
ds
dec
pop
or
adc
mov
cmp
es
adc
sub
lahf
orl
adc
leave
pop
cmp
sbb
fisttps
inc
mov
adc
insb
sub
mov
cmp
arpl
mov
inc
je
cmpsb
mov
or
je
fcomps
cmp
inc
inc
aas
jle
ss
inc
icebp
clc
pop
fwait
inc
sbb
inc
jecxz
lods
loope
loope
adc
je
hlt
xchg
ret
pop
push
ja
in
sbb
cmp
stc
fsts
leave
loope
cmp
test
push
mov
movsb
insl
xorl
ja
adc
mov
mov
mov
mov
xor
push
and
insl
cmc
add
ds
sub
popa
out
aaa
add
sbb
push
jnp
int
aad
dec
lock
inc
jl
sub
lods
dec
scas
fwait
pushf
or
std
push
fsubs
adc
data16
popa
adc
das
mov
or
aad
pop
scas
out
mov
mov
xchg
inc
push
add
lret
out
shrl
arpl
xor
cmovbe
dec
dec
cltd
jno
fwait
add
cmp
in
lods
jne
incl
data16
mov
pop
sbb
movb
add
shlb
jne
adc
clc
pusha
jbe
adc
icebp
cmp
adc
mov
and
outsb
ljmp
aaa
xor
roll
xchg
cmpl
sbb
roll
cmp
addr16
sub
jl
push
pop
jb
icebp
lcall
movsl
fadds
outsb
jecxz
lahf
push
inc
sbb
bswap
jns
jmp
and
cli
xchg
pop
and
loope
fs
sbb
dec
jmp
inc
cmpsb
rcll
lods
mov
dec
fbld
xchg
pusha
and
xor
orb
mov
sbb
lret
mov
push
mov
pop
mov
xchg
sbb
repz
lret
add
iret
stos
cmp
xor
or
add
mov
mov
sahf
stos
ja
fimull
jne
jne
outsl
cmc
aam
sub
shll
cli
fimull
add
inc
in
and
loopne
jne
sub
jbe
sahf
fnstcw
stc
sub
xor
insl
hlt
pusha
mov
inc
mov
sbb
jbe
div
pop
push
push
fdivl
jle
sub
xchg
push
lods
outsl
out
inc
sbb
sti
je
pop
out
pop
sarl
jae
adc
pushf
cs
push
add
shlb
or
cmpsb
fildl
insb
or
in
mov
lea
pop
filds
clc
mov
mov
das
mov
into
aas
jle
jnp
or
int3
dec
int3
sub
stc
dec
xor
add
test
jb
jmp
mov
mov
xchg
push
mov
fnstenv
pop
aaa
jge
or
fiaddl
shll
test
push
mov
add
push
fcoms
mov
stc
lods
out
enter
jno
notb
in
aas
int
jo
test
in
arpl
fcoms
in
int3
out
ja
scas
cmpsb
int
and
cmp
jg
and
cli
aam
xor
jecxz
shl
dec
and
adc
fimuls
inc
icebp
jnp
dec
sub
adcl
jns
mov
mov
push
aad
movsl
inc
mov
jl
mov
cld
adc
xlat
or
add
das
cmp
cmp
xor
pop
fwait
and
jo
adc
mov
out
in
push
cli
xchg
pop
je
in
mov
jbe
xchg
pop
iret
push
les
push
adc
les
mov
ljmp
or
cmc
fidivrl
out
test
or
mov
les
and
pop
dec
bound
xchg
mov
xchg
daa
cmp
imul
jo
js,pt
add
ret
rcrb
popf
jle
test
cld
loop,pt
ljmp
jmp
into
mov
test
aaa
nopl
jmp
cli
movsl
out
inc
sbb
cmp
int
test
fldenv
push
rcrb
lock
mov
arpl
out
and
std
adc
dec
fwait
cld
loope
xor
loope
add
dec
jns
adc
arpl
data16
cld
test
jns
rorl
cmp
in
and
in
popf
das
inc
scas
outsl
popf
test
xchg
dec
xor
fs
xchg
sbb
hlt
xor
push
outsl
jbe
pop
js
arpl
mov
scas
inc
shlb
and
mov
mov
cmp
cmpl
mov
scas
imulb
imul
adc
xchg
mov
inc
jmp
test
mov
lods
iret
daa
loop
idivb
mov
sbbb
shl
and
xor
out
xchg
dec
ret
xchg
adc
mov
std
ja
push
jp
push
stc
punpcklwd
lret
dec
or
loope
jo
jnp
jbe
jo
sub
dec
insl
xchg
cmpb
pusha
sti
in
jno
notb
pop
mov
fdivs
xchg
data16
lods
mov
daa
xchg
mov
jbe
addl
mov
out
fildll
cli
mov
add
js
mov
adc
aad
fwait
mov
xchg
jno
icebp
sbb
rolb
sbb
dec
lods
sub
add
data16
aaa
adc
jne
outsb
xchg
sbbl
xor
mov
cli
mov
pushf
nop
cmpsl
adc
movsb
insb
adc
jmp
fdivr
loopne
std
dec
sbb
dec
shlb
incb
adc
js
xchg
enter
sbb
inc
stos
dec
mov
fisubs
and
int3
loop
cli
out
push
mov
cmp
repnz
add
notb
push
push
jg
add
xchg
pop
arpl
xchg
inc
mov
repnz
cmp
jmp
mov
lahf
pop
scas
lods
cld
push
scas
imul
je
xor
int3
mov
movsl
push
mov
xor
xchg
push
pop
jae
scas
fiadds
push
mov
sbb
cltd
repz
nop
push
js
cmc
fdivrl
add
pop
push
int3
jns
xor
popa
xor
xor
lock
std
lea
push
filds
push
mov
lret
mov
pop
int
inc
and
mov
stos
fimuls
aad
push
xchg
popa
bswap
or
pop
repnz
cmp
lods
mov
cmpsl
int
xchg
and
mov
push
cltd
lds
sub
xchg
mov
pop
sub
enter
adc
mov
cmp
fisubrl
sti
in
jno
lods
nop
xor
loope
sbb
push
pop
add
cmpsl
adc
int3
xlat
sub
out
mov
jb
rclb
data16
fsubs
mov
lcall
mov
or
push
xchg
cmp
pop
adc
sub
ror
loop
fs
movsl
mov
pop
xchg
cmpsb
xchg
fcomp
pop
inc
jns
push
fnstcw
jl
lret
js
icebp
push
cmp
stc
fsubrs
jecxz
jecxz
xchg
jg
mov
movl
pop
pop
mov
out
ret
pop
xlat
rorb
andb
outsl
int
add
mov
jns
adc
sbb
and
idivb
push
xchg
mov
lea
iret
add
dec
mov
fs
jo
inc
ss
sbb
call
inc
pop
dec
xadd
jne
cmp
mov
and
cwtl
shrl
ja
aam
lods
xor
into
and
loop
leave
pop
iret
in
mov
ss
xchg
test
push
addb
insl
mov
aas
icebp
or
push
inc
lock
xchg
imul
xchg
inc
sub
call
cmp
data16
lock
fnstenv
mov
push
xchg
ds
daa
cmp
mov
cld
shl
add
fdivs
jmp
pop
inc
mov
push
cli
into
cmp
mov
mov
dec
cmp
push
pushf
push
mov
or
mov
lcall
or
jb
repnz
mov
add
pop
fimuls
sbb
fnsave
out
inc
test
mov
lcall
push
push
jp
stos
jecxz
or
jp
jmp
js
ljmp
enter
sbb
mov
xor
sub
and
add
leave
movsb
in
ds
mov
mov
cmp
pop
pop
dec
aad
inc
movsl
and
clc
inc
pop
or
mov
mov
scas
imul
jg
cmpsb
mov
popa
xchg
mov
jge
cmp
ss
cmpsb
cmp
je
insb
pushf
imul
shll
add
mov
aad
adc
rclb
les
hlt
call
je
rolb
rol
push
daa
jmp
in
fdivrl
mov
lock
xchg
sbb
jae
dec
bound
adc
xor
mov
pop
scas
out
lods
inc
int
loop
outsl
jo
xchg
mov
movsl
outsb
xchg
cmp
xchg
adc
cs
add
testb
popf
sub
cmp
add
push
and
sub
push
push
pop
pop
cmp
je
les
aas
mov
or
fists
cmpsb
push
pop
pop
shrl
call
es
jno
and
aad
or
mov
sbb
adc
mov
arpl
mov
pop
out
pop
in
xchg
jp
fldenv
sbb
pop
pop
repz
jnp
sub
xchg
xchg
inc
mov
cmovg
push
test
jle
pop
test
sbb
adc
sbbl
add
push
push
fstpl
cmpsb
imul
movsl
add
sbb
cmp
stos
js
int3
js
outsb
rclb
lods
mov
dec
cmpsb
test
outsb
iret
inc
xor
jl
fcomps
lods
push
mov
pop
popf
xor
andl
lock
aas
or
mov
mov
in
mov
jno
ror
mov
jmp
sbb
outsb
xchg
call
push
sbb
loopne
sub
lret
mov
clc
cwtl
mov
and
xor
mov
xor
test
adc
in
jno
inc
ret
cmpsb
mov
push
dec
jmp
lods
outsl
leave
cld
in
mov
or
xchg
sarb
mov
test
bswap
pop
mov
and
sbb
jle
call
scas
sub
mov
in
out
jb
outsl
lea
adc
push
inc
jae
pop
add
or
test
pop
xchg
push
mov
mov
jl
mov
mov
daa
mov
pop
jbe
mov
in
clc
pushf
lds
leave
test
outsl
mov
push
subb
xchg
inc
add
sub
mov
ja
mov
sub
inc
ljmp
pushf
sub
mov
or
call
inc
pop
sbb
cmpsl
subb
in
mov
xchg
popl
loopne
pop
fldl2t
es
lahf
cmpsl
push
notl
dec
mov
icebp
dec
mov
popf
push
ret
rep
mov
add
stos
popa
adc
xor
aad
pop
and
sbb
aad
mov
pop
mov
dec
push
push
add
adc
cld
fisttps
daa
adc
mov
xor
xor
lods
lret
cmp
jns
or
inc
insl
xchg
pop
test
pop
subb
sbb
sti
scas
xchg
pop
shlb
sbb
in
jae
sub
gs
push
adc
add
dec
sbb
flds
jbe
fsub
pop
sarb
mov
mov
mov
inc
push
test
mov
fs
jmp
adc
js
add
and
ja
mov
cmp
adc
mov
sbb
cmp
and
or
loop
fwait
jo
cld
dec
fisttpl
sub
ja
mov
inc
pop
cmp
jge
push
adc
cmpsb
movsl
dec
adc
pusha
ja
loopne
in
pushf
jae
mov
cmp
test
lods
adc
mov
cs
xor
sub
into
ss
nop
push
popf
push
pop
repz
cltd
xor
sub
lds
mov
pop
sbb
and
aas
movsb
std
mov
movsb
push
add
add
fldenv
je
orb
xchg
das
das
mov
lods
ucomiss
lcall
push
dec
sub
mov
movsl
int3
inc
sub
ljmp
fstpt
xchg
pop
xor
cwtl
or
test
push
inc
inc
imul
mov
cli
push
lock
cmp
push
push
nop
push
pusha
mov
inc
repnz
xor
fisubrs
add
pop
mov
cli
adc
std
std
int
fidivs
mov
push
jp
xor
inc
xchg
lods
jb
lock
mov
out
pop
sbb
push
cmp
cwtl
lret
push
test
or
ljmp
fdivs
mov
jp
mov
icebp
mov
xchg
int3
pusha
sbb
aaa
fmuls
shlb
shrb
cltd
dec
add
jo
adcl
rcll
clc
sarl
iret
jae
iret
stc
push
sti
fistpl
lods
jle
jp
test
adc
xlat
sub
cli
shlb
idivl
inc
aad
push
mov
stos
mov
inc
jbe
int3
into
xchg
pop
and
iret
and
in
push
mov
pop
mov
jle
outsb
mov
sub
mov
arpl
xchg
pusha
hlt
cwtl
into
pop
fildll
subb
push
inc
aaa
int
add
sub
push
mov
lahf
adc
fimull
je
dec
jno
lds
xor
sub
ljmp
out
and
adc
int
xchg
rorb
dec
popa
cmp
ljmp
mov
and
xor
push
cmpsl
lcall
test
test
xchg
roll
mov
adc
pop
jne
popf
cmpsl
imul
sahf
scas
sub
in
das
jnp
sar
xchg
push
aam
imul
fmul
nop
je
bnd
arpl
lds
popf
dec
xor
nop
in
mov
les
xchg
mulb
sub
mov
pop
out
imul
sub
adc
cmpsb
mov
enter
cmp
and
cmp
in
lret
push
adc
test
imull
push
mov
sub
xchg
lods
pop
stos
insl
insb
outsb
lcall
xchg
pop
add
ljmp
loop
or
add
arpl
pop
out
or
mov
mov
nop
sbb
aas
pop
dec
sbb
fucomip
xchg
xor
mov
shlb
dec
test
lds
mov
push
push
xor
mov
xor
and
loop
aad
xorb
sub
and
filds
in
xlat
arpl
and
stos
pop
push
stos
dec
push
in
or
iret
dec
insl
test
adc
outsl
scas
push
xor
add
adcb
push
lea
pop
sub
and
je
jbe
mov
rcrb
sbb
insl
scas
je
mov
push
mov
mov
sub
adc
cmp
call
or
push
mov
xor
call
loop
push
inc
movsl
push
xchg
inc
adc
negl
inc
mov
repz
jae
out
imul
iret
out
mull
add
or
pop
mov
xchg
add
mov
iret
shl
or
je
jae
nop
pop
push
insl
add
push
out
pop
lock
dec
call
test
adc
jnp
rcll
pop
dec
push
mov
xchg
mov
cli
insl
in
fsubr
mov
push
sbb
jl
pushf
pushf
xor
std
sbb
in
add
xor
jno
mov
ja
aas
or
cmc
movsl
js
pop
ljmp
mov
sar
jg
in
xchg
xchg
mov
cltd
push
dec
mov
divb
sbb
outsl
cmp
xchg
sbb
add
cmp
add
cwtl
aad
aaa
push
mov
sub
fdivl
or
or
xchg
or
cmp
push
dec
lcall
bnd
fdivrl
push
add
xor
sub
pop
mov
int3
sbb
arpl
add
dec
jle
mov
inc
test
adc
adc
enter
nop
mov
xor
out
mov
cmp
inc
in
cmp
popa
lea
mov
mov
inc
push
cs
addr16
dec
ret
cli
jno
loope
push
xchg
test
sti
mov
outsl
and
or
or
and
ds
std
xlat
sarb
push
pop
sbb
test
cld
imul
lods
or
iret
dec
mov
jle
fldl2e
in
and
pop
adc
cmp
mov
aad
inc
mov
mov
fsts
and
push
clc
inc
push
insb
dec
cmpsl
clc
xor
lar
or
cld
shll
leave
push
jnp
jmp
cwtl
dec
sub
shr
jns
insl
add
addr16
js
xor
dec
mov
jno
popf
dec
cs
out
fstps
sub
adc
mov
mov
arpl
clc
cltd
cmp
push
jmp
jns
or
stc
mov
sbb
adc
dec
and
punpckhdq
mov
push
mov
testb
movaps
stos
cmpsb
int3
fistpll
xor
cmpsb
std
loopne
adc
jle
or
pop
repnz
add
cmp
push
ret
pop
jmp
pop
test
sbb
mov
sub
cmp
arpl
mov
mov
xlat
pop
mov
adc
sub
xor
in
xor
call
frstor
jle
jmp
push
cmp
sub
jl
lcall
inc
sub
sbb
test
or
pop
fcomi
mov
adc
movsb
leave
push
dec
neg
xchg
or
or
mov
out
cld
or
push
shlb
sub
shrb
adc
cs
aam
mov
xlat
xchg
cmp
xor
or
mov
clc
into
cmp
sub
cmp
mov
xor
pop
jle
push
sar
mov
add
pop
add
dec
ss
lret
fwait
ret
dec
fcoml
jle
jb
inc
cli
scas
sbb
int3
lods
pushf
dec
addr16
xchg
mov
fisubrs
or
mov
mov
imul
mov
jnp
xchg
mov
lcall
in
xor
les
in
out
in
add
xchg
sbbl
out
mov
and
sub
je
in
pop
push
je
in
sub
ss
sub
jne
dec
mov
cwtl
and
mov
setg
add
pop
xchg
cs
inc
or
pop
imull
push
xchg
imull
pop
arpl
push
push
push
rdpmc
push
out
pop
cs
cmp
sub
sbb
fisttpl
xchg
jae
xor
sbbb
mov
in
push
pop
cwtl
cmp
sbb
inc
sub
xchg
movsb
fists
cltd
fidivrl
sbbb
inc
sub
xchg
jb
sbb
dec
adc
push
in
push
cmp
sbb
push
rol
mov
rol
mov
adc
lods
jge
cmp
iret
popf
in
lahf
pop
nop
xor
mov
pop
and
out
lret
pop
movsb
pushf
jb
cmc
xor
adc
fmul
sub
adc
lock
stos
mov
add
and
cmp
cmp
push
inc
leave
xchg
popa
ljmp
jnp
pusha
push
pop
mov
inc
mov
pop
out
xor
adc
mov
fstps
iret
out
icebp
cmpsb
sub
push
call
cmp
movsb
xchg
leave
fdivl
pop
xor
add
mov
push
pop
inc
xchg
pop
je
adc
pushf
imul
int
or
inc
pop
addb
scas
jp
sbb
sbb
data16
jp
or
leave
je
test
push
iret
pop
adc
sub
jnp
push
jge
imul
in
test
scas
and
leave
fcomi
push
int3
fisubl
jge
xor
in
leave
dec
sub
int
and
or
pop
pop
arpl
es
mov
enter
jo
cltd
das
sub
lahf
sbb
loope
clc
in
popa
fidivrl
das
xchg
mov
insl
rcrb
ss
mov
or
sbb
inc
xchg
jg
lock
in
jns
arpl
hlt
mov
adc
addb
fucomi
push
pop
orl
or
jg
sub
inc
out
mov
and
jae
add
cs
jnp
in
addr16
push
mov
pop
mov
movsb
push
jne
les
cmp
dec
xor
imul
add
cs
dec
push
leave
movsb
and
mov
scas
stc
insl
repz
xor
push
adc
add
sarl
inc
mov
in
pop
sub
pop
pop
call
adc
sarb
push
insb
push
sub
sbb
or
ljmp
iret
and
stos
fiaddl
sti
xchg
or
lock
dec
sub
mov
pop
mov
ror
jns
push
scas
sub
lods
leave
mov
arpl
arpl
add
inc
hlt
sub
mov
push
dec
mov
test
push
stc
aas
iret
les
push
in
xor
call
movsb
fdivs
imul
pop
inc
in
jl
test
cmpsl
jecxz
mov
push
ret
inc
push
dec
and
notb
pop
jp
push
sahf
lret
or
orl
imul
mov
sbb
aad
test
jb
leave
pop
in
out
cs
add
les
pop
pop
jg
mov
out
xchg
sub
mov
add
inc
jne
out
xor
and
fldt
pop
cwtl
add
and
add
dec
mov
cwtl
cmp
or
adc
mov
pop
sub
sub
xor
xor
ret
push
fcoms
xor
roll
scas
sub
xlat
mov
mov
push
test
roll
pop
scas
cltd
adc
push
dec
arpl
jne
inc
std
pop
lahf
push
and
add
adc
jb
fiadds
ret
add
loop
pop
cmc
and
sub
push
mov
mov
rcll
mov
pop
push
cmp
xchg
sbb
push
out
xchg
out
loopne
xchg
lret
int
add
adc
imul
fwait
ret
gs
mov
sub
jg
imul
add
mov
push
fs
out
or
xor
sub
sahf
cmpsl
mov
data16
stos
push
mov
arpl
in
mov
mov
adc
icebp
cmpsb
inc
aas
and
adcl
sti
js
imul
inc
jge
mov
mov
or
cmp
sahf
or
inc
add
inc
or
icebp
dec
decl
dec
lods
pushf
out
pushf
cwtl
sub
jecxz
xchg
mov
sbb
pusha
lods
outsb
sbb
or
cmp
in
lods
mov
sub
inc
loopne
lock
psrld
xchg
adc
rorb
inc
les
xor
fdivrs
cld
int
or
inc
mov
dec
and
mov
mov
jge
jbe
and
sub
mov
test
fidivl
jb
adc
xor
stc
movb
xor
sub
cmpsl
inc
ljmp
xchg
cmp
mov
mov
add
push
lock
mov
dec
popf
xor
loope
sbb
fsubl
or
pop
lret
adc
cld
clc
adc
out
sbb
or
xor
cmp
hlt
or
outsb
fs
in
nop
mov
push
out
in
xor
stos
xor
sbb
sub
loope
jae
xor
loop
jecxz
jb
sub
mov
or
out
push
aas
jmp
mov
cmpb
mov
rolb
jne
in
fwait
push
xchg
sub
mov
inc
sbb
out
jmp
in
add
lods
iret
insl
fsubrs
insl
or
insl
cmc
jbe
sbb
lret
dec
or
cmp
daa
ds
pop
sbb
mov
mov
adc
xchg
mov
les
pop
sahf
xorl
dec
dec
int3
je
push
mov
add
je
jnp
xchg
jecxz
in
xchg
les
rorl
mov
xchg
mov
aad
mov
and
das
or
imul
inc
xor
icebp
xchg
fst
scas
mov
pop
sbb
mov
andb
push
lcall
add
jne
jmp
iret
dec
ja
cmp
and
add
cwtl
sbb
loope
or
xchg
jno
es
dec
push
out
push
addl
mov
out
jge
fstps
repz
or
call
inc
stc
cld
in
inc
lret
add
aam
in
inc
sub
int
xchg
and
mov
test
fs
jb
mov
call
and
push
inc
lods
imul
jp
test
pop
sbb
mov
cmp
repnz
fstps
sub
pop
fwait
jns
and
js
ljmp
bound
xchg
xor
pop
ss
sub
add
mov
out
dec
ret
push
mov
cmpsl
sbb
pop
jne
sub
push
std
outsb
sub
bound
cli
cmp
ss
jno
cli
sti
das
lods
add
test
mov
dec
or
out
or
mov
sbb
scas
lret
pop
rolb
push
xchg
imul
arpl
push
mov
addr16
fcomps
cmp
rcr
shll
pop
sub
push
ficoml
add
adc
xchg
xor
jge
pop
xchg
fwait
mov
gs
jl
and
loop
add
scas
das
std
ljmp
stos
xchg
decb
inc
xchg
addr16
xchg
cmpl
cmp
jle
gs
add
ret
and
push
out
push
movsb
int3
js
jae
ficomps
imul
insl
jne
pop
testl
or
sub
and
cmp
in
jp
mov
icebp
mov
das
fdivrp
inc
adcb
es
dec
push
stos
std
add
call
sub
mov
insb
xchg
test
lds
inc
movsl
movsb
in
jle
or
inc
add
ljmp
es
mov
cld
fs
jo
xchg
cld
mov
sti
dec
lahf
jecxz
dec
jmp
push
mov
data16
sub
popf
inc
add
hlt
xchg
xor
imul
adc
mov
add
ljmp
cltd
fadd
js
and
cmpsb
or
les
loope
push
loopne
fstpt
mov
loope
mov
lods
into
loop
test
les
pop
rorb
fdecstp
ror
je
lret
movsb
cmp
fwait
in
mov
cmpb
or
inc
xchg
and
pop
xor
fsubrs
xor
pop
mov
out
jg
outsl
push
inc
addr16
inc
and
jae
jb
dec
mov
sbb
bound
bound
adc
in
outsb
jl
jae
ret
pop
bound
iret
xchg
inc
mov
ss
dec
adc
bound
cmp
imul
movsb
ficomps
adc
dec
lret
mov
repz
mov
dec
iret
cli
or
enter
mov
add
inc
scas
es
mov
pushf
dec
out
adc
inc
xchg
stos
inc
xchg
stos
js
push
fs
call
stc
out
lcall
in
insb
stc
adc
dec
cmp
lret
mov
jnp
push
lea
call
or
push
sbb
xor
adc
js
push
sbb
test
mov
cmp
sahf
sub
movb
and
inc
movsl
fdivrs
mov
clc
in
lcall
sub
push
fldenv
mov
push
popa
addr16
divl
mov
mov
pop
idiv
addl
add
gs
cmc
repnz
xor
shl
jbe
in
jge
adc
cli
ud1
pop
jp
push
push
lods
hlt
int
ficoml
ficoms
outsb
xor
sub
jecxz
sbb
sbb
add
jae
jns
and
mov
and
inc
mov
lret
mov
xor
mov
es
add
pushf
xor
mov
insb
and
xor
sar
xchg
mov
scas
gs
aam
subb
xor
and
hlt
je
fnstcw
iret
mov
fwait
mov
inc
das
and
sub
xor
fcmovbe
add
mov
xchg
addl
outsl
xchg
mov
addr16
mov
mov
jnp
in
mov
ss
dec
sbb
cltd
or
iret
out
xor
mov
or
das
push
add
loop
shll
sti
or
movsb
call
cmpb
fmuls
lret
jle
nop
ja
in
incb
lea
sub
mov
insl
es
jg
inc
outsl
dec
inc
repz
cmpsl
xchg
jge
jmp
xchg
mov
jae
push
xchg
icebp
mov
inc
int
sahf
push
xor
pop
cmp
mov
loop
mov
lods
repnz
outsl
push
xor
pop
scas
cs
js
push
jns
or
or
ret
pop
mov
or
pop
stc
mov
call
inc
add
cs
das
cwtl
add
in
xor
xbegin
insl
push
std
push
jno
fstl
pop
jae
pop
sub
mov
jmp
imul
inc
scas
das
rclb
xchg
cmpsl
sahf
ret
add
les
lock
adc
dec
sahf
int3
inc
adc
jae
inc
lock
fld
lahf
out
mov
jge
sub
loop
imul
xchg
shlb
xchg
iret
and
and
nop
rcr
out
add
xchg
xchg
popa
inc
add
pop
mov
sarb
dec
mov
fdivp
push
mov
fdivrl
jno
mov
shll
mov
int3
dec
orl
add
cmc
pop
sub
xchg
in
sbb
add
arpl
adc
cmp
flds
mov
sahf
lock
lock
push
xchg
data16
mov
shr
enter
repz
icebp
mov
inc
iret
jecxz
ds
mov
daa
pop
out
or
mov
ret
mul
dec
stc
mov
ficoms
push
mov
pop
pop
imul
loopne
inc
leave
inc
or
daa
pop
scas
loop
inc
xor
mov
inc
jl
lea
xor
sub
cmpsl
out
inc
mov
in
add
pop
cltd
sub
shlb
cmp
dec
mov
gs
cmc
push
pop
loope
popf
ret
inc
dec
adcl
mov
mov
es
push
xchg
fsubrl
push
call
pop
fmul
push
lret
mov
orl
dec
inc
jge
imul
xchg
push
jae
repnz
and
jno
jae
xor
mov
dec
dec
xor
imul
and
cs
fmul
cli
push
jl
push
pop
popa
es
nop
cmpsb
fstpl
or
and
xchg
les
mov
push
sarl
arpl
notl
insl
out
pop
push
in
xor
push
pop
xchg
movsb
and
ret
jae
enter
stos
and
in
xor
lods
ffreep
jo
jp
xlat
cwtl
std
or
pop
dec
dec
lods
mov
add
mov
mov
inc
pop
icebp
enter
jp
cmpsl
pop
adc
add
mov
test
mov
or
shlb
cld
lds
imul
sub
rorb
add
dec
les
mov
push
adc
fwait
jmp
scas
cmp
inc
movsb
mov
pushf
fisttpl
shr
dec
add
fsubrl
imul
fucom
sbb
dec
lret
out
cmc
andl
test
pop
mov
xchg
dec
cli
inc
sub
and
add
or
jo
mov
sub
cmp
ja
inc
loope
dec
test
adc
push
sub
test
ljmp
mov
cs
inc
repnz
lahf
inc
test
iret
adc
push
out
leave
xchg
out
jle
push
pop
inc
mov
xor
das
insl
dec
or
mov
dec
fistpll
jb
outsb
jne
jle
jnp
pop
stos
scas
mov
lcall
dec
sbb
addr16
mov
adc
and
in
cmp
cltd
ret
dec
pop
lret
ja
cmp
loopne
imulb
mov
adc
jno
mov
jecxz
and
dec
or
lret
in
cmpl
or
lret
cmc
mov
cmp
pop
jmp
ds
cs
pop
data16
pop
std
lds
std
xchg
lods
and
cmp
push
adc
sbbl
out
xchg
add
insb
ljmp
test
push
das
jmp
flds
cmp
out
push
and
jecxz
mov
jg
pop
ffreep
xorl
test
sub
mov
lock
xchg
lds
outsb
xchg
movsl
xor
mov
sti
jge
mov
leave
popa
inc
aam
addr16
xchg
and
pop
xor
decb
aas
mov
clc
mov
shrb
idiv
test
and
pop
fwait
imul
fs
or
or
shr
pop
sarb
dec
clc
mov
imul
sbb
ds
cmpsl
fcom
xchg
inc
in
and
cmpsb
or
inc
inc
mov
ret
lea
mov
mov
jnp
shlb
testl
test
out
dec
hlt
repz
pop
mov
pop
into
dec
ds
dec
mov
sti
mov
pop
leave
test
callw
mov
sbb
lods
fistl
and
adc
xor
pusha
mov
pop
stc
les
sets
mov
ss
sbb
inc
cmp
sti
pop
lret
or
sub
into
cmp
mov
sub
loopne
mov
mov
fisubrl
dec
daa
lcall
inc
jbe
ja
lret
push
dec
pop
cmp
cmc
inc
jmp
gs
ja
lcall
loop
js
xor
pop
mov
loopne
int3
out
out
sti
jne
sahf
call
fcoml
loopne
inc
movsl
sub
xchg
flds
mov
xchg
and
hlt
cltd
imull
xor
in
repnz
jle
xabort
and
repnz
aaa
out
mov
andl
ret
pop
pushf
sbb
sub
lret
stos
push
sub
xchg
cmp
orl
pop
fnstsw
mov
int
jmp
cltd
je
stos
push
sbb
int3
sahf
pusha
cmpb
dec
add
or
mov
push
inc
jns
push
notb
outsb
shlb
movsb
pop
std
add
push
xchg
xchg
in
into
gs
inc
mov
ja
gs
pop
cs
dec
cltd
imul
cmpb
sub
jg
decl
dec
loop
adc
mov
cltd
in
mov
jae
lods
mov
dec
xchg
outsb
rolb
out
addr16
repnz
mov
out
jae
jge
dec
aaa
lods
inc
fwait
mov
cmp
dec
lret
mov
cmp
mov
push
test
sub
xchg
xor
xchg
leave
cmpl
jg
inc
mov
mov
adc
mov
cmpsb
mov
mov
add
inc
cwtl
dec
cmp
dec
push
xchg
aaa
test
je
jecxz
cmp
push
jge
mov
iret
cmc
lds
loopne
incl
inc
mov
sub
jp
cwtl
iret
fldl
out
pop
adcl
mov
cmpsb
pop
stc
loope
sahf
push
or
out
ss
pop
outsl
sbb
data16
jbe
in
or
xor
dec
jno
mov
jo
adc
andl
enter
xchg
pop
psadbw
ja
add
xor
pop
ret
sbb
loope
mov
jmp
into
pop
inc
cmp
aam
pop
mov
jnp
sub
xchg
jecxz
fisubrl
fstpt
push
jmp
jmp
lds
xchg
cmpsl
stos
add
push
jecxz
mov
mov
and
push
push
inc
or
jo
frstor
dec
inc
xchg
sbb
in
xchg
insl
pusha
pop
or
gs
jbe
ds
scas
mov
sub
jge
add
pop
push
shrl
jb
jecxz
shrl
lcall
imul
inc
fwait
jmp
mov
jb
movsl
or
pushf
add
xor
call
iret
movl
mov
pop
hlt
dec
call
mov
lahf
aad
sub
insl
stos
xor
aaa
inc
push
jge
out
outsb
push
cmpsl
jecxz
jmp
xor
test
popa
imul
nop
fcoms
loope
mov
ret
out
icebp
out
gs
and
test
notb
pop
fs
aaa
mov
dec
movsl
adc
mov
mov
arpl
inc
jns
sbb
ljmp
lret
or
pop
mov
pusha
mov
and
xchg
pusha
cltd
dec
divb
pop
js
bswap
add
add
pop
shr
frstor
pusha
lahf
jns
adc
mov
mov
mov
test
jg
dec
test
or
not
inc
mov
cmp
test
cmp
dec
roll
cmpsl
into
mov
jle
mov
ja
mov
nop
jnp
mov
fwait
mov
dec
sub
pushf
popa
push
adc
jle
sahf
outsb
jecxz
xchg
xor
jae
adc
adc
pushf
sti
aam
repnz
lods
mov
jbe
sbb
mov
stc
adc
lock
loopne
pop
int3
lock
mov
jl
in
inc
add
pop
xor
aad
lahf
xor
ds
aaa
jecxz
pusha
cwtl
cmp
mov
orl
jb
dec
fcomps
mov
xor
outsb
inc
pop
out
push
inc
mov
stos
mov
or
ljmp
divl
mov
adc
cmp
push
je
fimuls
push
xor
mov
ja
cmp
pop
pushf
pop
mov
fdivrs
mov
nop
adc
pop
inc
rorb
stc
scas
fnstcw
in
fs
jne
push
inc
jb
pop
push
pop
lea
cmp
dec
imul
jmp
int3
sub
xchg
fldenv
cmp
push
mov
pop
adc
or
jl
enter
ljmp
mov
add
repnz
and
es
fs
out
push
adc
jl
out
fistpl
xchg
cmpl
mov
sbb
adcl
shrl
push
out
mov
pop
jmp
and
mov
xor
push
les
mov
loop
mov
sbb
mov
jno
shll
xorl
ds
dec
mov
je
jge
jecxz
clc
loop
loop
popa
in
inc
pop
adc
ljmp
sub
outsb
or
mov
jg
fsubrs
outsl
adc
out
jno
mov
ret
mov
xor
cmpsb
add
sbb
jbe
cs
mov
rorb
cwtl
pop
mov
loop
xor
lret
dec
call
push
add
xchg
mov
mov
sub
or
add
jle
mov
filds
aam
cmp
shll
jo
xchg
fdivrp
fimull
lret
loope
jge
cs
add
and
dec
dec
icebp
xor
xlat
mov
ret
fiadds
call
movl
imulb
xchg
push
shlb
cmpl
adc
mov
cmp
xchg
or
mov
cmpsl
jns
sub
adc
pop
push
fsts
adc
push
inc
std
movsb
ss
push
jae
inc
mov
adc
cmpsl
rclb
sub
pop
lods
push
lahf
fisubs
xchg
enter
popa
insl
push
cmp
inc
test
adc
jge
dec
cmp
fdiv
mov
subl
sarl
roll
dec
outsl
xchg
sub
mov
jns
lock
lahf
mov
bound
cmp
testb
imulb
lahf
or
test
sbb
movsl
enter
cltd
adc
sbb
cli
fisubs
aam
pop
popf
sbb
or
jne
add
lret
negb
mov
mov
les
mov
mov
cmp
mov
repnz
push
xor
imul
inc
xor
mov
dec
into
popf
ja
int3
mov
adc
movsb
pop
or
mov
sub
mov
jno
sbb
scas
insl
cmc
sbbb
push
and
lods
add
mov
mov
outsb
mov
xchg
xchg
or
push
add
mov
lods
mov
ror
scas
adc
fnstenv
loop
divb
and
pop
mov
inc
aas
dec
pusha
inc
rorb
call
lcall
stos
or
rolb
aaa
arpl
pushf
addb
adc
clc
add
jno
sub
stc
mov
rorl
jp
dec
out
push
lods
lock
fbstp
mov
pop
xchg
lret
cmp
loopne
test
jmp
test
pop
push
ss
test
ret
xchg
test
in
in
adc
aad
inc
jb
push
shrb
dec
add
sub
pop
sbb
scas
and
mov
lds
cmp
int
test
mov
fnstenv
dec
negb
push
pop
out
adc
xchg
in
cmp
nop
inc
lods
push
out
adc
pop
inc
inc
jns
push
cli
sbb
and
insb
loop
andl
hlt
mov
test
into
rcrb
dec
mov
inc
and
enter
cmpsl
push
les
xchg
mov
addr16
push
pop
mov
imul
inc
cmp
adc
pop
mov
push
xor
pop
pop
push
mov
xchg
jg
in
daa
or
addr16
inc
dec
ja
cmpb
std
push
cmpl
movsb
jo
xchg
cmc
mov
cmpsb
pop
jl
dec
loop
std
mov
pop
nop
loope
cmc
sub
enter
mov
lock
sbb
dec
mov
mov
in
stos
sbb
andl
test
movsl
inc
arpl
or
adc
push
mov
scas
gs
xor
lahf
sub
je
loopne
mov
out
enter
xor
xchg
xlat
lods
push
dec
stos
mov
lods
cltd
movd
sub
cmp
arpl
mov
push
ds
ds
rcrb
jle
jno
xchg
sti
test
into
mov
fcomps
int
cmpsb
stc
adc
pusha
test
jns
cltd
inc
call
xor
xchg
inc
ret
and
and
xor
std
push
or
pop
xchg
in
dec
cmp
pop
sbb
xor
jecxz
out
push
movsl
out
xor
call
lahf
mov
mov
mov
add
mov
cmp
subb
mov
mov
mov
iret
sub
jp
xor
or
xor
pop
pop
leave
jae
cmpsl
outsb
pusha
xor
pop
fdiv
je
pop
imul
mov
ret
cmc
stos
stc
lods
push
lods
mov
xlat
cmp
hlt
pop
fisttps
cli
jge
jb
pop
or
test
cmpsl
adcb
sub
sub
sarl
sbb
or
and
aas
sbb
dec
add
mov
int
sub
cwtl
inc
pop
lock
mov
mov
or
dec
push
aaa
dec
je
ficompl
orl
mov
adc
cmp
adc
jne
jp
syscall
fidivl
jns
or
rcll
lods
push
fwait
and
jno
and
loope
mov
data16
sub
pop
fistpl
ss
dec
xor
jb
xor
pop
mov
cmpsl
dec
sbb
cmpsb
imul
sub
in
mov
scas
rcll
nop
mov
js
and
push
js
lds
popf
rolb
jo
ljmp
lret
pop
or
lds
inc
xchg
psrad
jb
shl
outsl
movsl
cmp
mov
adc
out
cmpsl
imul
call
out
xor
jge
pop
sbb
jp
pop
ss
cmp
mov
loope
xor
ror
scas
cmp
add
push
push
sbb
movsl
or
and
nop
ss
stos
je
push
imull
xchg
out
or
enter
rcrl
pop
into
scas
and
ds
jecxz
cli
insb
call
mov
subb
adc
and
push
push
inc
pop
xor
rcrl
push
std
push
imul
push
imul
aam
add
lods
mov
cmp
mov
insb
push
faddl
imul
push
sbb
call
data16
mov
in
icebp
fisttpl
cmpsl
scas
les
test
mov
faddl
shll
xchg
mov
idivb
jp
push
push
test
in
xchg
sub
jg
jb
ret
clc
mov
cltd
adc
cmp
xor
inc
int3
pop
dec
jb
and
push
sbbl
fistpll
add
fstpl
pop
jb
idiv
xchg
rorb
fnstcw
lods
sub
stos
and
push
test
test
mov
cmp
repnz
fildll
mov
sbb
sub
clc
repz
or
jp
cmc
add
dec
scas
scas
mov
imul
dec
jne
clc
jns
cld
mov
lea
int
and
mov
shr
les
ds
sub
cmpb
mov
movsb
mov
insl
out
push
jecxz
cmpsl
jo
lods
sti
test
into
stos
mov
lret
and
and
mov
outsb
jmp
cmpsb
sbb
or
jmp
dec
xchg
inc
loop
fistl
insb
pushf
sbb
adc
aad
xchg
push
inc
cmp
cmp
ds
adc
mov
stos
stos
fistps
inc
xchg
adc
jne
dec
pushf
aam
sbb
inc
mov
fsubl
fidivrs
out
test
out
repnz
lods
into
in
mov
cmpsl
fsub
mov
jbe
cmp
hlt
ljmp
inc
inc
cmp
lods
test
arpl
out
clc
mov
movups
pusha
sub
out
mov
leave
jno
idivb
mov
sub
jle
mov
lcall
pushf
xorb
jecxz
mov
pop
insl
sub
fwait
das
sar
mov
or
add
out
mov
sbb
cmp
or
sbb
sub
arpl
jecxz
xchg
ret
adc
mov
call
scas
cmpsb
decl
stc
pop
lret
cld
mov
ds
sub
dec
movsb
add
cmp
mov
xchg
push
dec
test
aas
into
int3
cltd
jg
sbb
pop
xor
and
cmp
jbe
orl
push
pop
hlt
cmp
sub
test
test
lock
xchg
or
xchg
phsubw
sbb
imul
sbb
imul
aas
push
sahf
inc
icebp
cmc
mov
add
push
fmull
fbstp
inc
mov
mov
lds
loopne
popa
adc
fstl
xchg
lods
repz
xchg
jmp
jle
xor
sbb
xor
mov
add
pushf
xchg
flds
sarb
out
and
ljmp
pushf
mull
subb
mov
add
inc
or
cmc
jne
mov
lret
push
mov
cmc
insb
lea
daa
xor
sub
ret
ja
pushf
int
sub
out
xchg
jo
adc
shll
fidivrl
lods
test
lahf
ja
shl
mov
sub
xor
xchg
adc
adc
mov
les
mov
mov
psllw
dec
or
fs
mov
aad
push
mov
andl
sbb
xchg
adc
test
jmp
jge
lret
scas
xlat
out
mov
mov
jb
xorb
test
sar
and
xor
xor
and
fcomps
out
iret
stos
das
outsl
adc
rdpmc
add
add
clc
repnz
push
mov
xchg
push
sbb
cmp
stos
dec
mov
mov
loop
movsl
or
aas
fildl
and
imul
add
mov
popa
xor
adc
inc
or
sbb
sahf
hlt
xor
aas
inc
cmc
mov
sub
in
ret
mov
mov
pop
xchg
cmp
loopne
clc
setg
popf
inc
fnstcw
mov
fidivrl
jns
mov
addr16
daa
push
inc
movsl
lods
jmp
xchg
sub
push
sarb
ret
push
xor
out
xchg
jecxz
mov
cmp
and
test
outsl
fsubrs
nop
dec
adc
pop
es
add
sub
push
rorb
lret
in
add
testl
movsb
cmpsb
mov
xor
inc
jle
inc
ret
mov
pop
xchg
lock
jns
dec
add
push
pop
or
repz
mov
ftst
mov
ds
mov
aad
leave
sub
jno
jl
nop
or
dec
ret
dec
stc
bound
pop
cmp
dec
adc
rcr
in
clc
sbb
mov
div
sti
push
push
enter
cwtl
stos
idivb
loopne
mov
mov
and
jne
test
sbb
xchg
pop
sbb
mov
adc
arpl
mov
cmp
outsl
xchg
popf
clc
popa
lret
cmp
dec
dec
repz
push
inc
scas
fnstsw
mov
clc
xor
addl
in
jle
ljmp
testb
in
jbe
inc
fs
pop
lods
or
aad
into
shll
test
cmc
pop
mov
aaa
mov
rcll
xchg
cli
jl
dec
push
out
imul
dec
mov
mov
fisubs
je
inc
int3
push
jg
mov
mov
lock
or
jecxz
ljmp
lods
shl
loopne
lahf
mov
push
loopne
jmp
xchg
sub
test
push
and
vpcmpeqd
stc
icebp
cmp
lret
mov
xor
adc
in
push
xchg
cld
int
lock
scas
push
lahf
jnp
dec
pushf
push
sub
int3
sbb
dec
leave
xchg
dec
cmp
sbbb
ret
outsb
mov
shlb
stos
lock
add
mov
fimull
dec
aaa
fistpll
out
movsl
jnp
test
push
mov
dec
jle
sbb
aaa
ja
xchg
jno
push
cmpsb
out
ljmp
insb
sbb
lret
or
cmp
xor
mov
mov
sbb
mov
push
add
sar
andb
xor
lahf
scas
xor
mul
push
dec
xchg
cltd
sti
rcrl
push
adc
imul
add
enter
sbb
fucom
lods
push
movlps
mov
jb
aad
and
pavgb
imul
sbb
add
ja
jge
shl
stc
xchg
mov
pop
fdivp
inc
jg
test
jne
mov
das
sahf
sarb
xchg
rorl
dec
add
and
icebp
xchg
lcall
pop
adc
imul
pushl
rolb
jecxz
popa
xor
mov
ret
dec
or
jb
jnp
add
cmpsb
scas
cmp
xchg
scas
lock
outsl
stos
adc
mov
dec
or
xchg
andl
jnp
inc
popa
cmp
push
rcrb
mov
dec
arpl
scas
jb
into
sbb
and
push
popa
xor
lahf
pop
xor
jno
dec
mov
mov
incb
adc
in
nop
data16
lods
dec
insl
les
movsb
xor
aaa
fnstsw
cmpsb
out
in
daa
rorb
or
add
jno
jbe
ds
fdivrl
or
std
sub
and
or
ficoml
pop
pop
insb
and
mov
into
subl
mov
loopne
loopne
fnstsw
xor
or
out
pop
or
cmp
add
clc
dec
jae
stc
cmp
orb
mov
stc
sub
out
mov
push
and
and
lock
xchg
sub
test
ret
outsl
aam
xor
cs
fisubl
adc
fstpt
sbb
mov
sub
mov
movsl
dec
jnp
es
push
mov
loop
fstpt
dec
jno
push
pushf
lea
adc
jg
enter
sbb
ljmp
loopne
outsb
addr16
dec
cmpb
xchg
add
add
int3
roll
sbb
xchg
popf
cmp
xchg
pop
and
bound
movsb
pop
ss
mov
cs
xorb
mov
push
push
out
xchg
xchg
pop
xchg
or
mov
or
mov
jmp
andl
imul
subl
aam
xor
nop
mov
jp
int3
jg
in
xor
fldt
lahf
or
sub
inc
mov
and
jge
clc
jns
mov
jb
pusha
fsts
jge
push
xchg
outsl
jb
adc
jg
xchg
cmp
mov
dec
pop
jne
lahf
add
jb
fcmovnbe
test
rol
insb
push
icebp
mov
or
fistps
lock
cli
pop
daa
int3
das
jb
fstl
imul
mov
ret
in
xchg
push
cli
xor
mov
sbb
inc
pop
pop
xor
in
lock
push
mov
sarb
aaa
rcl
sbbb
inc
test
inc
stos
cmpsl
dec
hlt
gs
ja
mov
aam
push
js
jge
jge
push
xor
into
mov
cmpsb
jecxz
adc
jecxz
addr16
arpl
es
loop
mov
push
movsl
mov
dec
xchg
adc
pop
cmp
or
jnp
dec
jb
scas
shll
or
and
push
and
xor
add
pop
rcrb
arpl
pavgb
inc
adcl
xchg
loope
movsb
adc
dec
inc
mov
testb
mov
stc
mulb
xchg
fisttpl
pushf
add
sub
cltd
push
mov
dec
les
shrl
cmp
jno
data16
adc
sub
adc
dec
fsts
js
lahf
fstpl
adc
test
lock
push
mov
inc
dec
repnz
adc
repnz
or
sub
lret
pop
or
cltd
push
lds
mov
negl
xchg
pushf
imul
pop
jge
mov
push
das
jne
cmpb
nop
data16
btr
mov
roll
dec
rcrb
mov
or
lret
xchg
int
pusha
bound
mov
iret
mov
cmpsl
lret
enter
shrl
or
addr16
fstps
pusha
sub
xchg
mov
imul
cs
mov
mov
test
pop
enter
insb
mov
or
push
push
or
sbb
mov
cmpsb
es
popa
test
xchg
or
loop
je
pushf
into
mov
cwtl
pusha
dec
jne
stos
cmpsl
leave
cmpb
pusha
and
xor
or
cmp
push
mov
dec
jae
int3
mov
cltd
mov
imul
das
jle
mov
mulb
and
aas
lods
call
push
das
push
pushf
inc
sub
sbb
and
or
pop
pushf
divb
mov
mov
xchg
mov
xchg
negl
gs
mov
mov
and
mov
or
enter
hlt
dec
add
mov
stos
sbb
cltd
decl
enter
mov
into
ficoml
mov
je
nop
ret
cmp
push
out
cs
cmpsb
popa
popf
mov
pop
loope
xchg
xchg
pop
popa
aas
dec
xlat
adc
xchg
add
pop
rorb
lock
adc
stos
test
adc
push
negl
xchg
mov
les
mov
mov
mov
cltd
movsl
xor
in
ds
loopne
imul
jbe
mov
mov
and
cmp
mov
insl
sub
in
lds
add
int
pop
dec
sub
fs
mov
pusha
clc
int
jns
xor
pop
int
shlb
push
je
divb
push
sub
sub
sahf
mov
cmp
mov
pop
sbb
push
sub
adc
adc
adc
test
mov
test
lret
leave
es
cmp
sub
add
jmp
shrb
lock
dec
cli
dec
xabort
pop
dec
mov
pop
mov
mov
lret
and
mov
pop
aad
dec
or
rdtsc
cld
and
cli
add
mov
mov
mov
xchg
test
push
mov
xchg
cmp
ds
jge
adc
fwait
pop
mov
dec
pop
stos
or
std
dec
push
outsb
jmp
popf
push
aaa
jp
xchg
push
pusha
shrb
movsb
add
push
dec
sar
dec
sti
das
push
ljmp
mov
lret
jae
jle
loopne
int3
lds
jp
mov
pop
xchg
clc
inc
loopne
fists
lcall
insl
xor
rolb
cmp
sbb
pop
scas
mov
cltd
push
xor
ja
int
ja
inc
outsl
lods
xor
out
xlat
iret
rcrl
jg
sub
and
push
stos
jne
test
leave
cmp
nop
icebp
inc
jge
aad
repnz
inc
cmpsl
test
insb
in
out
and
sub
mov
shlb
into
mov
shll
icebp
jp
lahf
cmp
les
lods
mov
jge
mov
fs
mov
and
and
mov
inc
lahf
adc
xor
jecxz
int
subl
add
and
mov
pop
cs
xchg
push
adc
add
push
negl
in
aad
mov
push
daa
idivb
or
shrb
inc
xchg
xor
mov
sahf
xchg
ret
and
aad
incl
leave
out
ret
dec
xchg
lods
mov
iret
mov
std
cmp
in
or
test
sti
scas
jge
push
pop
aaa
popa
nop
dec
aam
xor
xchg
stos
lret
movntps
pushf
das
lahf
push
xor
fnsetpm(287
push
mov
mov
sub
inc
pop
imul
jl
roll
sbb
sbb
pop
xor
cs
cs
subl
xor
push
mov
ljmp
jp
push
pushf
popf
push
xchg
mov
fucomi
aad
aad
aad
bound
pop
stos
test
cmp
mov
idivl
mov
jae
push
incl
sub
mov
sub
loope
int
movl
lds
leavew
add
dec
in
pusha
rcrb
inc
fsubs
xchg
cmc
mov
push
sahf
pop
dec
dec
outsb
iret
cli
pop
je
lea
xchg
enter
and
sar
sbb
jmp
jp
dec
sbb
loop
and
testb
mov
clc
and
outsl
aas
testl
dec
jecxz
test
lret
fisubl
adc
lret
mov
or
mov
call
lods
dec
aaa
mov
add
xchg
cmp
dec
fsubl
mov
daa
cmp
xor
aaa
inc
adc
ret
inc
popa
mov
es
movsl
pop
dec
or
mov
push
cli
sarl
push
xchg
test
loopne
push
dec
pop
inc
fisttpll
or
pusha
push
cmp
mov
insl
ret
das
xchg
push
pop
mov
shlb
push
rcll
xchg
mov
push
push
psllw
pop
push
ret
mulps
enter
dec
sub
add
ret
and
cmp
or
loop
add
fistl
addb
xor
push
jp
cs
daa
mov
ret
mov
dec
mov
sub
iret
es
ljmp
jp
push
or
push
ljmp
or
jp
in
or
test
pop
mov
adc
push
aam
add
orl
jecxz
push
pop
mov
lcall
and
add
leave
xchg
xorl
decb
cmp
push
fadds
push
stc
shl
cmp
jbe
add
cltd
fstps
stos
outsb
outsl
mov
or
ficoms
cltd
or
add
inc
ret
push
loop
push
xchg
ret
jecxz
lock
ja
add
leave
cmp
inc
push
fldt
bound
sbb
jp
mov
shrb
inc
add
xor
push
mov
mov
push
or
repnz
es
insb
or
mov
je
adc
ror
jo
lcall
and
dec
in
stos
pop
xor
mov
enter
testb
and
and
ror
xchg
imul
add
pop
push
call
add
sbb
ja
sub
mov
loope
xchg
jae
les
cli
jecxz
pop
outsl
xchg
iret
jae
dec
mov
xor
mov
nop
and
subl
jo
jno
cli
ds
loop
cmc
aaa
iret
push
call
imul
dec
les
mov
cwtl
push
aaa
jl
lea
and
imul
pop
or
sub
xor
test
pop
and
dec
fwait
mov
jle
pop
pop
and
js
jmp
leave
pop
xchg
or
adc
sahf
mov
ret
jae
or
jp
and
icebp
adc
shll
inc
fs
hlt
rcrb
shll
pop
xchg
xchg
adc
out
repnz
xchg
pop
adc
ret
xor
scas
das
in
pop
int
sub
xor
push
dec
pop
adc
out
and
add
shlb
jno
cmp
push
pop
mov
lcall
jmp
cmp
mov
mov
pop
xchg
aas
and
lcall
fdivp
loopne
or
int
push
ret
cs
outsb
mov
cltd
mov
lock
sub
xchg
test
out
mov
lret
movsb
jmp
movsb
clc
fnstenv
test
fwait
aad
dec
data16
dec
je
pop
fsubrs
test
popf
aad
dec
xchg
scas
jno
jnp
or
push
jmp
cmp
aas
push
cmpsb
mov
andl
fwait
outsl
push
pop
nop
test
scas
add
movsl
push
push
je
cltd
lret
aaa
ret
inc
pop
xchg
test
sbb
dec
pushf
fcmovu
xchg
in
pop
jbe
sbb
inc
sarb
imul
in
les
inc
xchg
mov
jl
sbb
popl
iret
iret
mov
fldcw
add
addb
cmp
jb
cmpsl
repnz
cmp
call
leave
imull
or
inc
out
ljmp
mov
enter
out
inc
sub
lea
sbb
jle
lods
or
cmp
int
adc
subl
lods
fs
mov
jb
subl
jns
stos
adcb
mov
outsb
jne
inc
add
add
sub
jne
xlat
add
lahf
sub
jecxz
inc
dec
mov
pop
push
push
in
leave
inc
sarl
lods
outsb
mov
mov
fisttpll
mov
jbe
pusha
dec
out
dec
xchg
cmpsl
insb
scas
bound
cmp
mov
scas
ficomps
jb
xchg
sub
jne
jne
mov
adc
ret
addr16
push
xor
pushf
fwait
xchg
inc
lods
aas
movb
leave
mov
insb
insb
push
cmpsb
popa
push
insl
js
aad
or
jle
fcomps
sbb
int3
mov
dec
inc
jns
pop
out
cli
push
sub
or
push
mov
dec
push
in
mov
add
stc
fcomp
dec
lods
sbb
push
popa
fisubl
sbb
fisttpll
cwtl
jnp
push
std
sti
cmpsl
cmp
lods
cld
rcrb
and
xlat
push
xor
add
xchg
sahf
cltd
shll
dec
cmc
sahf
test
push
outsl
adc
jno
xor
push
dec
adc
jg
out
or
out
sub
jl
xor
test
rolw
outsb
sub
sub
iret
iret
jmp
scas
push
dec
add
std
mov
jp
mov
enter
movups
mov
dec
inc
adc
movsl
pop
inc
add
stos
test
pop
in
outsb
loopne
pop
cs
jbe
push
dec
clc
mov
divl
mov
xor
sub
push
push
pop
lcall
pop
fbld
mov
sbb
pop
sbb
stc
push
fildll
jo
leave
std
rcll
out
push
daa
jae
cli
test
sub
and
hlt
je
orb
mov
dec
movsb
sbb
add
shll
psubsw
lods
popf
dec
leave
sub
test
fs
out
fs
push
rolb
add
cmp
cs
mov
out
faddl
or
jge
sbbb
xchg
sahf
push
sbb
jo
push
js
adc
ss
jo
leave
inc
xor
jp
mov
loopne
mov
and
outsb
mov
push
sub
xchg
jmp
lret
inc
aad
add
xorps
or
arpl
adc
push
js
xlat
dec
inc
test
aas
jp
mov
insb
add
daa
nop
xchg
mov
cli
mov
jle
xchg
ja
out
dec
fstpt
cmp
fcmovnbe
js
rclb
rcll
jne
icebp
mov
mov
repnz
les
imul
cmp
push
ds
das
rcrb
jp
cmc
or
or
shl
test
lods
add
xchg
inc
das
insl
xchg
mov
and
clc
cmc
add
sub
push
mov
mov
fistpl
notl
xchg
stos
jge
rolb
in
daa
fisttpl
lret
les
dec
or
cli
fwait
lods
adc
cs
sbb
pop
divps
sub
scas
inc
lea
lcall
sti
sub
bound
test
sarl
fcoms
aam
aas
or
inc
sub
insb
insb
cmp
pop
jl
dec
cld
hlt
aad
mov
repz
sbb
jp
std
inc
sbb
pop
cwtl
dec
gs
mov
subb
xor
mov
fcmove
push
insb
fsubrs
add
outsl
movsl
pop
popf
and
outsl
sub
pushf
mov
adc
je
add
mov
push
scas
cmpsl
or
jnp
mov
dec
rcrb
popf
into
push
jge
call
pop
fimull
mov
xchg
sbb
nopl
xchg
adc
pop
inc
cmp
inc
inc
into
push
loope
dec
jge
push
inc
stc
dec
pop
sub
fdiv
popf
insb
cmp
leave
dec
mov
loop
int3
gs
rcll
test
outsb
or
imul
pusha
imul
movhps
dec
aaa
sub
push
fistpl
fstl
xchg
aam
mov
mov
push
mov
push
rol
pop
sub
ret
fincstp
sti
xchg
mov
xor
add
ljmp
inc
leave
lods
nop
faddl
loope
popa
adc
push
vmovapd
clc
pop
push
and
xchg
dec
rorb
jno
add
pop
testb
xlat
test
jb
cmp
xor
mov
mov
mov
dec
lea
push
push
add
lret
call
adc
sub
mov
in
jp
nop
mov
pop
mov
xchg
dec
mov
data16
jl
xorl
mov
enter
xor
das
mov
jbe
and
jle
enter
imul
or
and
imul
xor
ja
dec
push
sarb
and
and
adc
inc
ja
data16
out
xchg
dec
scas
jecxz
mov
sub
into
nop
lea
test
stc
dec
dec
sti
aas
test
xlat
mov
fs
or
mov
popa
xchg
bnd
xor
icebp
loope
fwait
or
sub
out
add
fs
xchg
jl
shrb
dec
jmp
je
test
or
aaa
jecxz
out
inc
or
sbb
inc
pop
jns
pop
mov
mov
cmp
mov
test
fildll
aam
mov
ret
shl
jmp
xor
sbbb
push
pop
jns
mov
aaa
mov
int
shrb
sbb
lcall
push
adc
movb
pusha
inc
cmpl
inc
aas
or
movsb
push
jl
push
pop
nop
mov
mov
add
stos
jecxz
lcall
and
jl
repz
and
and
fisubs
mov
jmp
inc
xorl
or
inc
jecxz
xor
enter
cmp
lods
push
movsb
lahf
cmp
sbb
mov
sbb
cmpsl
test
ret
or
mov
and
sub
nop
add
inc
call
sub
add
mov
sti
lods
outsl
test
inc
mov
or
push
repz
rcl
fists
adc
pop
scas
cmp
aad
push
shll
jmp
mov
popf
int
std
pop
hlt
ret
nop
hlt
xchg
stos
jge
lcall
std
lret
dec
jmp
out
lahf
mov
inc
in
sahf
xchg
popf
inc
mov
scas
mov
mov
push
pop
pop
and
adc
imul
loope
leave
mov
mov
jno
and
jecxz
add
adc
mov
shrl
and
sub
inc
sbb
cmpsl
mov
sti
scas
in
mov
sub
rcrb
ret
out
mov
adc
loope
push
imul
jg
jp
ds
xchg
outsl
dec
jg
mov
jne
pop
push
cmp
mov
mov
nop
dec
cmp
sbb
pop
cli
cmc
mov
xor
sub
loope
sti
enter
push
mov
mov
sub
jno
into
inc
jae
icebp
mov
jmp
popf
add
xor
loope
ror
sti
cmp
sahf
mov
mov
or
xchg
dec
mov
dec
aam
int
dec
xor
in
push
sub
sbb
mov
rcr
fbld
out
dec
add
inc
xor
test
fcmovu
daa
inc
nop
popf
and
push
mov
add
sbb
gs
shl
or
fstpt
xchg
lcall
icebp
add
mov
gs
pop
shlb
mov
push
je
push
push
add
mov
insb
jg
lods
pop
test
fsubl
mov
std
add
into
sbbb
jle
ret
in
test
sub
add
sub
or
sbb
repnz
test
fwait
sbb
and
and
jo
push
popf
dec
out
testb
movsb
aaa
mov
lahf
sbb
xor
aas
jns
int
icebp
xchg
dec
aad
inc
or
add
xchg
jl
mov
inc
jp
fdivrs
adc
jnp
inc
aaa
popa
dec
adc
imul
xlat
enter
pusha
cltd
and
in
cmp
dec
jl
sub
loope
add
push
repnz
incb
push
jle
sbb
andb
cli
in
adc
daa
mov
pop
cwtl
shll
push
leave
sub
fs
movl
push
inc
add
les
ds
pop
push
icebp
push
mov
sub
mov
adc
decl
xchg
mov
cwtl
push
sub
test
clc
sahf
pop
push
and
xorb
insl
shll
and
aad
mov
and
push
or
mov
xchg
mov
ss
xchg
pop
inc
inc
aas
divl
out
cmp
and
mov
sbb
dec
mov
mov
aad
dec
jae
or
adc
sbb
dec
jle
adc
sub
clc
inc
sbb
jae
push
mov
mov
mov
test
cmp
scas
out
mov
xchg
ss
shlb
inc
jnp
xor
test
jnp
pusha
dec
mov
insl
inc
mov
xchg
pop
test
add
int3
inc
ret
jecxz
sub
in
sub
dec
push
test
push
ljmp
xchg
adc
inc
pop
sub
movsb
fstpt
fwait
inc
pop
jno
daa
ficompl
mov
cmc
adc
addl
outsl
int3
add
dec
xchg
xor
inc
mov
mov
ss
push
cltd
movsl
xor
gs
mov
ffreep
cwtl
test
add
repnz
lds
call
cmp
fimuls
std
jns
sahf
popf
add
cmp
es
lods
mov
inc
push
inc
and
pop
outsb
inc
insb
pop
push
lods
sbb
jge
rcl
and
push
or
arpl
pop
add
les
andl
cwtl
movl
out
dec
fldcw
incb
lods
pop
sub
loope
out
push
insb
xchg
mov
outsl
jnp
lods
xchg
push
xchg
rcrl
lds
xlat
cmp
out
popl
aam
add
cltd
repz
mov
dec
mov
aam
negl
pop
xchg
subl
push
and
xchg
mov
jmp
sar
cs
cmp
movsb
sbb
lds
loope
sahf
or
dec
dec
lcall
pop
ret
mov
out
int
sahf
ja
pop
cmp
push
notl
cmp
and
jnp
mov
cwtl
nop
lahf
rcrb
scas
int
mov
and
lock
cmp
test
push
in
rol
jae
popa
out
add
shlb
mov
test
mov
jmp
imul
ljmp
xchg
dec
pop
out
pop
imul
push
lock
loope
lret
inc
lock
jg
sub
jmp
test
scas
inc
ret
dec
sbb
js
cmp
out
repnz
add
dec
inc
or
clc
stos
les
orb
push
es
lcall
cli
pop
int3
cmpsl
dec
and
cmp
lods
mov
int3
push
cmpsl
xor
sbb
loope
fistpl
xchg
aas
cltd
pop
mov
daa
mov
ja
jne
les
dec
pop
xor
aas
and
loope
adc
sub
das
daa
xor
jo
int
rorl
mov
in
jns
pop
notl
cmp
std
sbb
ja
or
ficomps
fisubs
push
aaa
or
and
mov
arpl
fdivl
jb
repz
sbb
dec
lret
and
and
jnp
mov
pop
popa
popf
jmp
insb
jle
mov
mov
xchg
lret
je
add
in
jae
mov
sbb
lret
sub
scas
cmp
push
int3
mov
in
test
push
mov
ss
das
es
cwtl
dec
stc
adc
and
pop
ret
mov
loope
jns
sbb
xchg
fldl
inc
inc
movsb
and
call
daa
adc
insl
stos
jbe
jne
dec
dec
mov
dec
add
cmp
xor
repnz
pop
fdivrl
flds
jge
shll
sub
testl
sub
push
cwtl
lock
inc
jg
xor
xchg
inc
or
pop
pop
ds
cltd
pop
orl
repnz
or
jno
lret
cmp
or
cmp
mov
dec
cwtl
mov
ret
add
xor
pop
mov
cmc
and
mov
test
repz
and
dec
adc
inc
aaa
ja
orl
nop
mov
xor
jno
imul
fwait
push
aad
scas
decl
pop
aad
and
adc
inc
xor
scas
lret
sub
fs
cmc
call
xor
fwait
inc
aas
ja
les
fs
push
sub
ficoms
xor
add
fisubl
fisttpl
pop
loop
inc
lret
sub
or
outsl
or
pusha
scas
into
and
adc
ja
jbe
in
jno
fldl
and
addl
jg
pop
mov
xchg
pop
sbb
xchg
cmpsb
ret
push
push
lods
mov
ficomps
ss
push
addb
push
sub
jae
dec
push
cltd
vmwrite
jecxz
mov
aad
pop
ds
loope
push
xorl
push
insb
jecxz
push
xor
in
pop
mov
pop
cmp
xor
dec
popa
jns
sbb
cmp
xchg
fsubr
sar
es
push
shlb
sbb
cmpsl
imul
jg
dec
push
jge
lret
sbb
sub
sbb
mov
cli
lahf
ds
mov
int3
cmp
xor
aad
stc
xor
mov
pop
idivl
mov
dec
popa
test
inc
xorb
cmp
ljmp
jmp
subl
sub
jmp
push
mov
mov
repz
add
sarl
movaps
push
stos
stc
or
mov
popf
mov
and
inc
cmp
pop
mov
sbb
daa
dec
and
xlat
push
sub
push
and
in
test
into
pop
call
add
pop
mov
add
std
js
out
lret
test
scas
les
lods
push
mov
incl
fwait
add
push
push
lahf
add
jecxz
xor
repz
gs
mov
aad
les
sbb
fcompl
pinsrw
jae
mov
fsubs
fldl2t
adc
push
fsts
ljmp
lahf
pop
sub
mov
cmp
jo
lret
jns
cmpsb
push
aam
mov
xorb
ds
dec
fimull
sub
lods
dec
xchg
int
cmpsb
in
addr16
repz
xchg
sbb
movsl
dec
imulb
pushf
xchg
jecxz
int3
and
out
test
and
dec
push
mov
push
test
test
cltd
adc
ret
lds
in
push
int3
ret
in
xlat
mov
fnstsw
ljmp
es
jne
mov
sub
pop
mull
sarb
pop
push
mov
pop
iret
lret
mov
and
xor
xor
xchg
dec
adc
or
mov
inc
hlt
or
adc
mov
ret
ljmp
sbb
jg
fsubr
enter
add
push
mov
sub
add
call
sbb
stc
ljmp
jbe
sub
scas
push
lods
inc
sub
leave
test
bound
lods
imul
xor
push
add
lods
mov
inc
mov
pop
in
xchg
cmp
shrb
add
insl
repnz
dec
in
or
hlt
dec
inc
add
adc
popa
fnstcw
orb
sub
jp
mov
push
fwait
mov
mov
cmp
xor
ds
mov
out
push
dec
mov
ss
int
pop
mov
dec
mov
loopne
jbe
mov
push
pop
xor
or
push
fadds
popf
adc
leave
js
dec
add
mov
icebp
or
ljmp
test
jno
dec
adc
pusha
in
pushf
jge
fnstsw
pop
test
add
xchg
sbb
mov
mov
dec
aam
push
loopne
pop
xchg
cmp
lahf
mov
jg,pn
movsl
push
push
mov
mov
shrb
mov
pushl
and
pop
sub
rorl
negb
bts
outsb
bound
inc
loope
cwtl
arpl
cmc
pop
pushf
sarb
mov
pop
mov
adc
mov
js
int
push
shld
cltd
inc
cli
xchg
xchg
pop
inc
adc
mov
faddl
int
cmp
push
cmp
imul
xchg
cmp
sub
jmp
roll
xor
push
push
inc
xlat
xchg
mov
out
pushf
push
jbe
bound
push
pshufw
dec
icebp
cmc
sub
clc
aad
out
fidivs
push
mov
das
popa
repz
pushf
shlb
jne
jnp,pt
xor
push
pop
jecxz
addr16
out
mov
xorb
es
pusha
and
pop
repnz
sbb
bound
pusha
xchg
out
out
cli
nop
sub
or
mov
push
loopne
pop
fucomp
xchg
iret
std
leave
xchg
sub
xor
fsubrl
in
fstl
mov
inc
cmp
pop
jmp
adc
mov
inc
xor
sti
dec
nop
xor
mov
pop
lcall
cmpsb
xchg
mov
call
mov
mov
int
cli
sub
int
push
add
stos
into
ret
cmp
into
sub
pop
dec
sti
jge
aam
sbb
jle
leave
int3
adc
nop
daa
comiss
aaa
fldcw
sub
or
adc
popf
and
pop
mov
add
jecxz
repz
popf
es
in
dec
pop
or
orl
ret
cli
xorl
mov
add
or
js
mov
push
or
jno
std
stc
push
xchg
adc
push
add
fs
mov
imul
ret
or
inc
mov
fisttpl
aas
sub
pop
leave
mull
add
mov
or
sub
cli
cmp
push
dec
cld
sbb
movsb
std
in
push
fsubrl
inc
jg
or
vprotw
fisttps
adc
je
push
out
movsl
mov
dec
xchg
sub
outsb
in
pop
cli
inc
popa
les
hlt
int
jo
dec
sbb
cmp
mov
mov
hlt
pop
and
mov
fbstp
dec
sahf
scas
cmp
cmp
int
mov
xlat
mov
fsts
nop
pop
xchg
pop
je
nop
adc
mov
mov
sbb
jmp
xchg
push
repnz
pop
aas
loopne
pop
sbb
adc
loop
sti
loop
jecxz
jmp
das
mov
sahf
mov
fdivrp
nop
add
test
jo
nop
push
sti
or
sahf
xor
outsb
in
mov
pusha
test
xor
lcall
xchg
push
cmpsb
in
fisttpll
testl
or
fdivrl
bound
fwait
lahf
fisttps
test
test
lahf
enter
jmp
insb
push
push
cld
cmp
imul
stos
pop
aas
mov
ret
dec
daa
fs
mov
pop
leave
addps
ror
jno
ja
lret
xor
cld
xchg
adc
cmp
and
pop
fmull
rorb
jecxz
sbb
add
jb
mov
sbb
lods
xchg
mov
push
or
xor
xchg
and
cmp
jp
xchg
das
mov
jae
cmpb
xchg
aam
inc
mov
das
mov
cs
push
or
sbb
push
or
pop
pop
sbb
sbb
ficoml
push
xchg
and
xor
repz
sub
pop
mov
subb
not
iret
shlb
pushf
jns
mov
pop
les
xchg
insb
and
push
xor
call
rorl
ficoms
fcoms
fidivs
dec
or
and
jae
xor
sub
xchg
fdiv
int3
call
adc
jb
sarl
rolw
dec
add
cs
dec
adc
inc
jp
xor
int
int3
jns,pt
insl
sub
neg
addr16
cmpsb
and
insb
or
gs
push
dec
shlb
sub
xchg
inc
cmc
stos
bound
gs
popa
icebp
or
sub
call
xchg
stc
mov
out
rcr
jmp
or
aam
pop
sahf
pop
dec
pop
inc
mov
pushf
xchg
insb
adc
das
cld
lock
mov
je
loop
jmp
outsl
inc
sbb
ljmp
stos
ret
dec
adc
push
push
jmp
js
add
push
sbb
pop
ret
daa
inc
mov
lods
test
push
sub
xchg
pop
gs
push
inc
inc
push
cmp
sub
mov
ja
addl
jb
mov
jns
inc
add
push
and
repnz
addr16
scas
fldt
pop
lcall
ljmp
ror
xchg
cmc
cmc
jne
mov
adc
push
jb
sub
fnstcw
pop
js
jecxz
mov
push
fisttps
dec
iret
adc
out
pop
int3
jns
jae
iret
push
jl
cltd
pop
mov
imul
popf
aad
vmread
pop
xchg
testl
divl
shlb
mov
or
jecxz
sbb
mov
loopne
lods
inc
mov
cmp
inc
icebp
addr16
jmp
inc
push
or
aad
mov
mov
jmp
cld
call
test
iret
adc
mov
xchg
add
loope
dec
lods
cmp
rolb
das
adc
addr16
push
dec
sbb
jns
call
mov
jae
jl
mov
jnp
stos
xor
sarb
mov
jae
mov
xchg
dec
adc
shlb
mov
roll
pushf
cltd
jb
mov
test
sahf
popa
inc
test
scas
push
inc
sarl
in
jne
lods
fnsave
add
insl
dec
and
mov
xchg
sarb
insb
out
pop
fdivrl
dec
fisubl
xor
cwtl
in
sub
push
cli
mov
std
mov
mov
incl
lock
add
push
and
xchg
das
iret
or
movsl
xchg
jecxz
inc
in
jb
xor
rcrl
ljmp
sbb
mov
and
ja
xor
test
lods
rclb
or
push
mov
mov
xchg
mov
les
mov
shrl
adc
mov
int
pop
ret
rorb
lcall
dec
push
push
dec
pop
sub
icebp
in
leave
fwait
ss
mov
xchg
jecxz
jno,pt
insb
into
inc
jbe
push
and
dec
test
lock
xchg
and
adc
aad
jae
repz
cmc
mov
pop
xchg
lea
in
mov
cmovno
loopne
shl
add
loopne
and
out
cmp
test
pop
pop
ret
lods
hlt
add
lds
les
icebp
jmp
xchg
inc
lds
cmp
dec
call
sub
and
sbb
xlat
scas
sub
sbb
cmp
pop
test
cmpsb
sub
loope
mov
sbb
vpunpcklbw
inc
xchg
std
pop
enter
mov
xchg
roll
in
jb
das
mov
pop
adc
adc
jg
imul
add
sbb
mov
jno
push
lret
jmp
push
cmp
mov
test
lds
pop
fisubrs
pop
pushl
int3
inc
leave
int
pop
cmc
lea
xlat
mov
adc
lods
sbb
fists
gs
push
out
and
roll
loopne
jb
imul
adc
aas
push
xor
testl
push
jno
cltd
mov
pop
mov
cltd
add
push
mov
aas
popa
xchg
sti
jne
stos
add
out
test
mov
lret
aad
jb
test
cmpsl
cmp
adc
shll
mov
add
adc
xchg
or
mov
and
mov
sub
dec
rorl
fisubrl
and
sar
jae
mov
daa
inc
pushf
dec
sub
mov
scas
sub
testl
push
stos
insb
add
fs
mov
fcmovne
inc
mov
je
ss
push
divb
iret
rclb
popf
lock
rclb
cmp
adc
mov
outsl
rorb
stos
jmp
push
xchg
xchg
in
jo
loop
add
movsb
stos
mov
inc
dec
and
insb
mov
out
rorb
xlat
fsubrl
sub
insb
lds
adc
mov
cld
lahf
dec
mov
nop
std
sahf
cmp
xchg
cmpsl
bound
and
es
sti
add
and
push
xor
mov
outsb
addr16
adc
arpl
dec
cmpsl
adc
mov
out
push
adc
popa
pusha
subb
dec
ja
inc
aad
cmp
sbb
sub
out
cmp
mov
scas
mov
fimuls
or
inc
test
jg
xlat
addr16
in
ret
adc
xlat
out
repnz
jmp
add
test
jp
loope
inc
gs
jo
sub
fiadds
repz
jge
int
addr16
pop
or
bound
jne
or
xchg
popf
fcos
pop
aaa
das
inc
ja
cwtl
lods
pop
in
jge
ljmp
ja
sbb
addr16
sbb
jnp
xchg
lcall
rolb
jmp
inc
rcrb
insb
cwtl
test
mov
rcl
imul
dec
cmp
pop
call
popf
mov
out
into
xchg
sbb
dec
lock
pushf
std
jo
mov
outsb
lret
jl
add
movsb
faddl
add
rorb
jno
lock
sub
aam
add
sar
jo
or
sbb
inc
jae
dec
fsubp
rclb
adc
or
jp
or
mov
test
sbb
xchg
stc
and
out
or
and
lea
inc
sub
lahf
pop
sti
sbb
neg
lret
out
out
ret
sarw
inc
jns
adc
int
pop
mov
push
mov
ss
xchg
shrl
add
test
jbe,pn
and
jmp
jle
imul
fisttps
bound
pop
push
xchg
sbb
cmp
add
dec
call
out
mov
inc
pop
es
pop
push
add
fs
clc
mov
lret
push
std
sub
out
stc
or
call
mov
pop
add
pop
and
mov
push
paddb
loopne
jl
jge
sar
cmpsl
adcl
adc
jecxz
adc
add
fcoms
test
arpl
repz
cmp
mov
push
test
or
mov
movsb
scas
ja
jnp
cwtl
push
push
bound
inc
sub
fistpl
mov
int
and
sub
or
cmpl
lret
test
mov
jne
push
lahf
xchg
dec
jmp
sbb
adcb
popf
hlt
shlb
pop
cld
dec
int
sub
je
push
int
in
ja
jne
adc
sbb
aas
mov
pop
jp
xchg
stos
cmp
daa
push
and
das
jae
mov
ds
mov
pop
or
insl
popf
cwtl
bound
test
xchg
ljmp
je
add
call
add
loope
movsl
into
call
fwait
mov
and
adc
push
adc
dec
arpl
sbb
testl
jbe
jb
rorl
add
outsb
push
push
aas
add
popa
cmp
sub
push
sub
add
cmp
ds
xchg
mov
aad
test
std
rcrl
rcl
push
lret
adc
imul
dec
sbbl
push
inc
jmp
jp
jnp
ffreep
lods
pop
jp
cmp
push
out
movsl
sbb
mov
dec
popa
mov
cmpsl
adc
mov
sub
sbb
call
aaa
into
js
pop
add
mov
in
adc
lods
dec
xor
lods
les
movb
ficoml
movsl
pop
cmp
xchg
loopne
icebp
inc
xchg
testl
lods
ret
mov
call
xor
out
js
mov
out
xor
test
inc
test
pop
enter
jnp
fistps
stos
lds
xchg
rorl
lahf
jmp
xor
jecxz
jae
push
bound
mov
std
xchg
add
xlat
fcomp
inc
jmp
test
in
jp
dec
es
push
popf
xchg
mov
jmp
and
sub
mov
adc
lcall
xor
aam
shll
mov
loop
mov
iret
out
and
testl
movsl
mov
mov
fwait
mov
out
mov
xchg
add
popa
loopne
ret
push
sbb
mov
movsl
ja
inc
and
out
pusha
cltd
jnp
jnp
loopne
pop
jno
mov
fsubs
mov
add
jle
mov
xor
mov
dec
rcrb
sub
mov
mov
lretw
mov
faddp
add
stos
sbbl
sbb
sub
stos
popf
ret
shl
fidivrs
mov
mov
lods
fisttps
arpl
sub
bound
xor
bound
pop
decl
test
test
lock
mov
mov
pop
loope
pusha
mov
cwtl
xlat
js
mov
insl
pop
in
rcrl
add
sbb
lcall
popf
add
int
je
jecxz
cmc
sbb
rcrb
jne
enter
or
and
cmpb
lea
or
add
scas
lds
or
ds
popf
and
das
push
xchg
test
out
add
xlat
sub
adc
pop
mov
pop
jp
pop
mov
dec
aad
mov
xor
lahf
jbe
mov
push
test
xor
nop
xor
cmpb
sub
fidivrl
imul
les
add
sti
cmpb
adc
pop
test
jnp
inc
aaa
mov
popa
push
sub
cmpsl
push
mov
ficomps
insl
pop
fsubrl
clc
or
sbb
and
pop
jbe
ret
adc
addl
push
xchg
push
cli
mov
jle
lcall
mov
fdivrl
popa
lds
stc
lret
push
inc
clc
xor
push
mov
mov
mov
sbb
pop
push
testl
xor
jl
mov
mov
out
ret
add
cmp
es
scas
or
push
sbb
shll
mov
xor
or
mov
fmuls
movsb
jmp
cld
fistl
pop
js
idivl
jne
arpl
xchg
sti
clc
sbb
sar
jp
mov
push
mov
mov
jg
out
imulb
mov
andb
inc
cmp
das
mov
jnp
das
idivl
enter
sti
test
mov
pop
mov
jecxz
movsl
ret
test
ret
aaa
pop
inc
xchg
inc
push
xor
lret
mov
loopne
pusha
or
ljmp
push
daa
jns
lahf
mov
mov
roll
mov
inc
xor
adc
leave
mov
inc
in
jle
dec
jnp
cmp
ror
add
push
dec
or
inc
jmp
adc
divb
test
subl
sub
jns
lahf
cmp
sbb
addr16
and
push
rcrl
lods
in
gs
pop
mov
loop
push
fs
mov
rorb
xchg
add
adc
dec
shlb
fs
cmp
scas
call
push
cmpsl
lods
push
mov
inc
sbb
out
dec
mov
shll
rol
inc
mov
sarb
lcall
mov
lea
pop
sbb
mov
loope
cmp
nop
and
cmc
fiadds
and
cld
xor
add
fldt
fucomip
sub
adc
dec
inc
fs
push
cmp
hlt
outsl
add
mov
adc
shll
dec
gs
lret
aas
cmp
pusha
stc
movsl
fstpl
push
pusha
jo
xchg
icebp
stos
cmp
jg
inc
aaa
jmp
mov
cmpsb
push
ss
shll
xor
jecxz
dec
pop
sub
or
call
xchg
aam
repz
in
testl
dec
push
negb
add
inc
fs
sbb
cltd
jne
cmp
cmp
xchg
sub
stos
xchg
mov
insb
ror
adc
jnp
mov
orb
xchg
iret
scas
jnp
cli
sbb
inc
mov
jmp
sub
mov
loope
fiadds
test
mov
or
push
clc
or
jmp
addr16
push
mov
mov
jmp
inc
fnstsw
fisubl
sbb
je
or
jo
xor
cmp
insl
cli
sbb
push
adc
shlb
xchg
push
fidivl
repz
int3
xchg
mov
mov
xchg
xor
data16
inc
rolb
pop
ss
jmp
jns
xor
pop
insb
xor
sbb
mov
and
scas
popa
jno
data16
int
cwtl
adc
sbb
and
push
mov
sahf
mov
xchg
push
jbe
mov
adc
xorl
sub
divb
movsl
lds
leave
es
pop
pop
lret
cmp
dec
das
xor
cmp
lret
aad
stos
pusha
lret
loope
xchg
xor
je
pop
out
xor
lods
xchg
jno
lds
rcrl
push
xchg
push
mov
fcmovnb
adc
leave
mov
insb
fldt
rorl
mov
cmp
cmpl
cmpsb
jle
adc
rolb
mov
cli
and
test
int
push
jmp
aam
xchg
push
insb
outsl
mov
js
pop
mov
pop
mov
push
or
cwtl
imul
loopne
fs
or
jae
lds
xor
scas
sbb
or
push
iret
mov
xor
pop
dec
sti
jns
xchg
outsb
cmp
cmc
pop
jl
cmp
js
pushw
les
fsubs
or
repz
pop
arpl
add
dec
mov
xorl
cmc
out
push
cwtl
cmp
xor
add
sub
pop
pop
dec
pushf
sub
dec
mov
iret
out
enter
fs
push
push
mov
dec
jl
push
out
imul
jbe
sbb
push
cmpsl
subl
enter
fnstcw
pop
sub
rorb
pop
add
scas
or
add
add
add
arpl
orl
movsb
sub
sahf
roll
in
adc
cmp
aas
mov
fisubrl
and
and
loope
fsqrt
ficoms
ret
pop
sbb
adc
push
fistpll
sub
decl
cs
sbb
adc
cmp
movsb
cmpsb
dec
loope
jg
and
ja
mov
and
inc
cmp
cmpl
push
dec
sub
fisttps
out
aam
in
shrl
mov
jb
int3
insb
add
jge
jo
je
out
ret
xor
outsl
lods
scas
mov
dec
fwait
push
mov
cmp
movsb
push
mov
scas
jp
mov
rclb
xor
mov
out
mov
daa
int
arpl
xchg
iret
inc
sbb
popa
mov
ror
scas
or
cld
scas
push
xchg
imul
push
mov
and
mull
jno
dec
adc
dec
sbb
or
and
push
dec
lret
in
pushf
out
cmp
cmp
scas
mov
shrb
sub
mov
jecxz
inc
mov
jns
std
shlb
and
sbb
popa
arpl
pop
inc
jne
adc
in
pop
xchg
sbb
ucomiss
mov
inc
das
test
aad
pop
push
xor
movsl
mov
ljmp
cmpsb
call
stos
inc
out
and
mov
pop
mov
mov
repnz
pop
jb
adc
arpl
lods
sub
or
test
out
aas
or
leave
mov
loopne
addr16
and
push
or
test
fs
push
cmp
adc
jl
xchg
hlt
loopne
pop
inc
dec
pop
nop
insl
lcall
xchg
and
inc
mul
pop
andb
shlb
or
cmpsl
cli
js
mov
sbb
insl
xor
cwtl
lods
xchg
mov
sahf
fistps
push
push
sub
sar
sub
stos
aas
fstpl
push
mov
mov
mov
xchg
loopne
mov
lods
cmp
sti
fisttps
sub
pop
and
loopne
outsl
and
sbb
xor
enter
mov
xor
mov
cmp
push
mov
mov
fistpll
sarl
repz
jl
popa
pop
cmpsl
push
cmp
dec
shr
and
cmp
fs
inc
rcll
jns
adc
std
addr16
cmp
test
or
iret
ds
mov
mov
cwtl
cwtl
push
cmc
sbb
pop
fdivrl
ss
in
hlt
clc
dec
xchg
inc
ret
sbb
jecxz
loope
fnstsw
inc
das
inc
aad
add
popf
cmp
stc
mov
test
jo
lds
inc
dec
add
cli
sarb
jno
inc
pop
call
in
cmpb
xchg
jns
inc
or
insb
imul
das
jb
push
cmp
push
mov
add
pop
jb
and
cmc
xchg
inc
cmp
ret
push
push
jae
and
les
cmp
aam
iret
iret
cld
sub
xchg
shll
aas
or
fmuls
jb
pushf
jae
mov
aam
inc
xchg
stos
xchg
les
mov
sbb
repz
rorl
pop
jge
scas
aad
es
fdivrl
xadd
fistps
add
shlb
ja
mov
sahf
movups
loope
pop
jns
dec
stc
andl
jmp
mov
jmp
ret
sahf
es
ficomps
xchg
add
mov
cmp
cmp
cmp
shl
out
or
jp
mov
sbbb
pushf
xchg
rcrl
dec
add
sahf
mov
inc
xor
movsb
xorb
xor
shll
pop
xchg
inc
repz
pusha
into
pop
dec
lods
movsl
pop
cltd
push
rcrl
clc
push
es
adc
dec
or
shrl
pop
sub
mov
pop
adc
jo
inc
shll
fmuls
inc
movsl
rorb
test
jo
fldl
mov
lods
data16
add
dec
repnz
stos
pop
push
xchg
sahf
nop
pop
dec
out
inc
cmp
lds
cltd
les
or
dec
add
xchg
and
xchg
and
pop
push
jmp
mov
pop
or
sbb
clc
push
fs
mov
push
nop
add
xchg
push
mov
stc
lds
cli
xor
ret
sbb
das
das
rolb
clc
jnp
xor
inc
xor
sub
cld
add
dec
xor
iret
push
std
jl
xor
icebp
decb
bound
icebp
sub
dec
mov
mov
xchg
push
pop
sbb
add
dec
adc
rcrb
adc
mov
mov
push
ret
imul
jns
mov
pop
and
in
in
test
int3
ss
cs
aad
mov
bound
xchg
mov
and
cmpsb
sub
lret
xor
push
out
ret
sar
push
cmp
dec
aas
mov
out
sahf
pop
sbbb
mov
add
push
jne
xor
dec
mov
lahf
xchg
xor
in
sbb
and
cltd
fxch
dec
iret
iret
aaa
cmc
repz
and
arpl
lods
cmpsl
fyl2xp1
sub
sbb
inc
jnp
outsl
fildl
xor
and
dec
scas
mov
dec
stos
in
movsl
mov
cli
sbb
pusha
and
or
dec
stos
mov
insb
add
out
pop
fstpl
mov
inc
xchg
pop
fisubs
pop
and
jmp
mov
inc
sbb
pushw
mov
int
test
cmp
cmp
rcll
add
mov
dec
push
cmpsl
mov
test
mov
add
xchg
sub
jecxz
push
ror
arpl
jns
adc
cwtl
fistpl
sub
imul
jle
dec
and
popa
dec
in
mov
sbb
sub
sbb
or
xor
jo
stc
dec
into
or
out
je
adc
lahf
pop
loope
push
adc
adc
test
jnp
movsl
data16
mov
movsb
out
inc
in
test
jbe
lock
mov
cmc
xchg
mov
or
adc
xor
xchg
in
loopne
stc
pop
cld
pop
inc
xorb
iret
xor
repz
push
mov
imul
pop
hlt
lods
shll
mov
mov
pop
mov
mov
inc
add
std
mov
mov
repz
ret
xchg
sbb
xchg
sub
add
jno
pop
mov
out
push
int
xchg
adc
and
loopw
mov
xchg
test
push
loop
xor
jno
shlb
sbb
push
jmp
push
xor
imul
mov
outsb
inc
push
pop
lret
icebp
lock
add
fs
xor
iret
out
fwait
push
push
icebp
ljmp
mov
xchg
mov
xchg
xor
into
cs
dec
je
scas
mov
lcall
xchg
ret
std
xor
mov
mov
adc
mov
clc
cmc
push
fnstsw
cmp
sbb
or
push
lcall
mov
lods
or
cmp
xchg
mulb
adc
mov
ljmp
imulb
std
imul
push
inc
mov
jae
add
dec
imul
loop
ss
cli
push
ficoms
ja
sub
mov
xchg
mov
xchg
inc
fucomi
inc
inc
add
test
mov
sarl
push
outsb
aam
ror
push
or
pop
pop
data16
adc
xor
lret
shll
rclb
imulb
adc
add
or
aaa
pop
loopne
inc
lods
push
push
out
cmp
xchg
lods
stos
push
imul
or
int
add
dec
jbe
mov
das
bnd
and
pop
push
xor
fcompl
stc
lret
and
out
adc
xor
aaa
dec
mov
lret
jp
mov
mov
call
pop
fnstsw
fdivrs
pushf
popf
jnp
sbbb
dec
arpl
fisubrl
fmull
std
das
out
sub
mov
jp
in
inc
jp
sbb
dec
mov
sahf
mov
jbe
fwait
in
inc
cmpsb
in
mov
clc
leave
inc
faddl
scas
cli
iret
mov
sub
ljmp
xchg
je
lock
lods
or
sti
jae
cmp
decl
sub
bswap
push
adc
jbe
xchg
or
movsb
jne
inc
mov
sahf
pop
dec
pop
or
inc
arpl
and
jmp
or
jg
imul
jle
xorl
cmp
inc
xchg
adc
mov
int
andl
cwtl
test
sbb
add
pop
iret
rcll
xchg
fsubrs
jge
sbb
cmp
and
push
push
cli
pushf
add
inc
mov
out
in
lcall
xor
jns
test
mov
mov
dec
lahf
jl
inc
daa
push
insb
aad
int
or
xchg
mov
mov
xor
fstpl
mov
mov
mov
insb
xchg
fsubrs
popf
cmpsb
fistps
push
fdivrl
loopne
lahf
xchg
jecxz
jae
mov
mov
jae
outsb
push
mov
pop
jne
mov
jge
pushf
sbb
pop
adc
pop
and
loopne
leave
sbb
pop
in
xchg
loopne
xorl
mov
xchg
jo
jmp
mov
arpl
mov
cmc
push
xchg
xchg
jmp
jne
add
pop
in
out
rcrl
rorb
out
mov
rcll
mov
push
xchg
ffree
incb
outsb
aam
out
scas
mov
popf
or
mul
and
fs
shll
and
es
popf
cwtl
and
dec
repz
aam
in
bound
jbe
lcall
daa
sub
in
bound
test
jge
pushf
push
mov
inc
jae
mov
push
push
xchg
dec
mov
hlt
push
paddb
outsl
popf
fwait
jmp
inc
test
pop
xchg
loope
sbb
jp
push
or
add
jne
or
xor
stc
add
scas
xchg
repz
dec
sahf
sti
movsl
sub
shlb
test
xor
sub
mov
fists
xchg
aaa
mov
jb
in
lock
test
mov
or
call
leave
arpl
arpl
loopne
fwait
cli
pusha
mov
mov
lret
stc
pop
mov
xchg
lods
push
inc
enter
push
aad
les
mov
insb
sub
and
imul
inc
popf
lock
and
xchg
and
add
outsb
mov
stos
cli
test
xchg
adc
add
jo
sub
cmc
mov
shrl
gs
cmp
xchg
fdivr
dec
test
lods
and
mov
sbb
and
dec
mov
fmul
xorb
sbb
int
push
mov
stos
cmp
and
mov
sahf
stos
push
inc
pop
cmp
int
mov
std
mov
cmovbe
xor
jb
pop
mov
and
sbb
jne
sarb
in
data16
repz
jle
and
sub
mov
pop
in
pop
sarl
jg
push
fs
inc
cmpsb
dec
out
cmp
js
arpl
sbb
inc
pop
xor
outsb
xor
out
push
adc
mov
bt
jmp
lcall
cli
lods
lock
in
inc
xor
jnp
scas
jns
pushf
mov
cmp
stos
gs
xchg
dec
inc
add
inc
jae
pop
imul
sbb
mov
out
repz
xor
mov
pop
jl
out
fiadds
add
sub
aam
sti
ja
sbb
push
xchg
roll
pop
into
and
scas
les
test
xor
out
xlat
std
and
smsw
xchg
lock
fnstcw
pop
xor
fsubs
daa
add
movl
rcrl
jp
lods
pop
sahf
mov
mov
in
test
lock
js
push
int3
xor
mov
lcall
cmp
sub
insb
mov
xor
insl
add
out
pop
xor
stos
iret
fistpll
lods
loope
out
or
push
jb
imul
xchg
fstps
mov
jnp
xchg
jmp
bound
ja
push
shrl
inc
jmp
and
cmp
xor
pop
inc
xor
xchg
sub
inc
in
mov
inc
lea
pop
stos
sub
test
dec
in
add
into
jns
bound
jl
std
cmp
mov
cmp
dec
adc
pop
and
push
stos
xor
push
sub
fwait
clc
mov
scas
xchg
cltd
inc
and
add
cmp
jnp
xor
aaa
pop
arpl
sub
ja
and
fisttpll
addr16
pop
mov
inc
stos
add
ja
fnstsw
insl
or
ss
mov
jne
pop
fs
add
cmp
gs
pushl
sbb
push
insb
sub
xchg
int
lahf
aam
aam
or
lret
dec
out
repz
xor
rcl
orb
fiadds
jge
outsb
stos
xor
adc
inc
inc
in
add
faddl
cli
xor
adc
xchg
dec
adc
inc
insl
xchg
insl
cmp
cmp
jnp
aad
ficompl
cmp
nop
shl
add
into
jmp
xor
nop
jp
js
pop
ret
jae
clc
pop
and
adc
rolb
push
and
mov
mov
jg
xor
sbb
in
jns
fcoml
xor
sub
mov
stc
pop
hlt
sbbb
sub
jne
neg
hlt
sbb
arpl
sub
xchg
add
xchg
add
fcmove
cwtl
loop
mov
mov
rorb
mov
jge
daa
pusha
adc
std
jmp
mov
mov
je
push
inc
jb
add
pop
in
push
pusha
mov
add
cmpsl
mov
adc
lret
fistl
xchg
dec
jl
leave
nop
iret
add
aas
js
inc
mov
mov
aam
loope
add
add
movsb
ficompl
cmp
ret
inc
and
inc
xchg
jo
outsl
outsl
sub
inc
arpl
aaa
imul
jge
loop
dec
fbstp
xorl
pop
adc
ds
popa
xor
clc
push
fildl
push
nop
loopne
aam
pop
leave
ficoms
fwait
in
and
dec
pop
stos
mov
and
mov
test
movsb
pop
stos
inc
add
pop
mov
pop
mov
jae
loop
lret
ja
jns
inc
pop
subb
ss
push
imul
shl
jb
data16
push
fadds
mov
imul
sub
aad
cld
std
pop
dec
xor
jb
aas
or
pusha
pop
add
test
mov
orb
cmp
xor
dec
ss
push
jge
insl
adc
leave
push
shrb
mov
cltd
xchg
shll
mov
mov
sub
mov
inc
jge
jbe
iret
dec
inc
data16
loopne
inc
and
jno
push
or
mov
ret
push
scas
pushf
adc
xor
jmp
scas
inc
sbb
push
adc
xor
xlat
sahf
fwait
or
or
or
mov
insl
roll
jl
outsl
inc
leave
push
hlt
sub
aad
pop
lods
aam
jae
inc
push
in
test
pop
and
mov
mov
leave
sub
int3
xchg
test
test
es
bound
jge
int
pop
ret
dec
or
ror
clc
aam
mov
mov
mov
cli
popf
mov
sbb
fdivl
push
sbb
cwtl
mov
pop
mov
sahf
inc
xlat
push
lods
and
add
aas
cli
mov
cmp
and
jle
in
mov
jle
and
fimuls
js
pop
pop
sbb
movsb
xlat
sbb
ljmp
lds
clc
call
and
mov
gs
leave
testb
out
mov
daa
mov
lahf
test
out
mov
jo
jmp
fnstsw
ljmp
ja
leave
test
sub
mov
jp
sbb
lret
lock
inc
stos
ss
or
jl
mov
popf
outsl
decb
mov
stos
mov
inc
or
jb
mov
call
lods
out
repz
ror
or
mov
repnz
outsb
in
cmp
sbb
cmp
pusha
push
cmpl
mov
int
fdivrl
fiadds
add
add
mov
jl
arpl
push
inc
idivl
into
mov
inc
movsl
mov
adc
pop
cld
sarb
push
mov
addr16
adc
shr
fs
sub
mov
push
mov
lock
clc
pop
data16
out
dec
ficoml
in
mov
jp
cmp
in
cmp
clc
jbe
add
arpl
inc
pusha
mov
pop
jne
divl
test
sbb
or
fbstp
mov
cmp
mov
movsl
cmp
aaa
xchg
jle
dec
stc
imulb
popa
jle
stos
repz
add
mov
cmp
mov
sbb
int3
jecxz
xchg
shr
cmp
pushf
in
pop
dec
xchg
pop
pop
ret
cmp
sub
dec
jns
fcmovne
mov
roll
xor
scas
adcb
aam
es
mov
fistpll
movsb
xor
iret
dec
xchg
push
cwtl
pop
roll
xor
es
lret
or
hlt
sbb
test
test
mov
jl
icebp
sub
inc
loope
mov
adc
jecxz
cmpsl
cmp
fdivp
insb
add
xor
mov
out
das
cwtl
jne
lods
dec
call
ret
in
addr16
std
mov
cmpsb
inc
test
sarl
mov
lods
inc
or
hlt
aam
cmp
or
shlb
mov
movsl
add
insb
test
pop
cli
or
and
scas
pop
sbb
push
xchg
sahf
into
push
pop
sbb
inc
jb
push
divl
lret
test
ja
pop
testl
add
mov
scas
insl
mov
les
lods
stos
stos
cld
sub
jae
std
mov
mov
fdivrl
es
push
icebp
jle
jno
cmp
push
mov
lret
scas
sbb
int3
inc
cmp
mov
push
pop
push
test
aam
xchg
cmpsb
push
movb
xchg
imul
or
sub
inc
push
xor
jae
roll
mov
push
jns
pop
sbb
insl
jns
pop
push
std
and
sbb
or
mov
scas
jo
sbb
mov
mov
sbb
dec
pop
pusha
xchg
add
adcb
scas
xchg
in
sub
ret
loop
xchg
push
lds
dec
mov
mov
popf
dec
push
and
iret
xchg
cli
lods
popa
sbb
lock
arpl
scas
repz
shlb
cmp
jecxz
pop
fistpll
repnz
push
jecxz
cmp
xchg
testb
jge
mov
add
sbb
lcall
xchg
shlb
xor
and
mov
rol
shr
shll
push
sbbb
sbb
arpl
lret
jns
add
out
je
jnp
or
add
sahf
xor
and
cmpsl
imul
lods
dec
stc
mov
inc
add
xchg
pop
mov
lds
and
mov
xor
or
movl
std
inc
mov
mov
mov
js
setl
mov
xchg
sbb
or
push
dec
addb
ficompl
dec
pop
dec
pushf
sbb
push
mov
dec
nop
int3
mov
mov
push
and
outsl
xlat
aam
out
jl
or
hlt
and
les
add
movl
jecxz
adc
or
dec
xchg
in
fistpl
add
jmp
jl
mov
and
xlat
lods
outsl
dec
pushf
sbb
xor
sub
jmp
jp
sbb
rorb
mov
in
xchg
int
movsb
dec
or
jo
jge
sub
push
cld
cwtl
adc
cwtl
in
sub
xor
ss
pop
test
xchg
adc
in
mov
sarl
cmp
scas
cmp
cmc
mov
push
pop
cltd
not
int3
sub
sbb
dec
insb
adc
out
jl
call
scas
pop
lds
jl,pn
lahf
cld
je
push
xor
fimull
jnp
lds
cmpl
stc
xlat
repnz
fs
roll
pmaxsw
rorb
jno
adc
mov
jmp
pcmpgtw
mov
mov
push
xor
mov
dec
rcrl
imul
cwtl
and
xchg
lcall
das
inc
jg
mov
hlt
lea
mov
and
add
aad
call
cs
clc
out
gs
sbbl
add
xor
mov
dec
stos
iret
jo
jo
lds
or
jecxz
push
shrb
pop
mov
in
mov
lock
or
outsl
dec
inc
mov
fisttpl
repz
lahf
fsubl
mov
or
dec
adcb
cs
in
shll
xchg
in
sbb
cmp
in
mov
hlt
mov
mov
and
mov
mov
jmp
push
pop
mov
and
push
repnz
and
jge
stc
inc
mov
popa
lcall
sub
fisttps
clc
test
push
hlt
adc
aas
mov
lret
push
mov
mov
sbb
and
mov
dec
arpl
jb
xor
or
push
insb
cmp
mov
mov
ds
daa
je
call
dec
inc
loop
out
ret
pop
cmp
pop
mov
jmp
lds
mov
adc
cmp
pop
xchg
imul
jmp
lods
iret
pushf
mov
jne,pt
cs
xchg
cs
xor
js
push
cmp
or
data16
cmp
adc
out
out
mov
jo
add
cld
adc
inc
push
add
bound
outsl
sub
inc
push
xor
ds
jbe
movsl
bound
insl
sbb
pop
icebp
sarl
leave
pop
jae
mov
cmp
push
and
push
inc
and
pop
pslld
xchg
jno
mov
lahf
hlt
pushf
push
int3
or
pop
mov
xchg
daa
enter
test
and
dec
mov
loopne
push
arpl
call
mov
aas
sub
add
into
cmpsb
push
add
je
sbb
mov
shlb
inc
mov
int
xor
pop
sbb
lahf
lahf
dec
arpl
push
mov
xor
sti
test
mov
sub
scas
inc
sti
pusha
mov
mov
xchg
mov
lock
adc
stos
cmpsl
sbb
mov
aad
lcall
adc
sbb
inc
mov
adc
daa
xchg
outsb
popf
rorb
pop
pop
mov
or
cmpsb
mov
popf
fstpt
jb
mov
dec
and
int
icebp
ja
fisttps
sbb
pop
pusha
cli
jmp
ja
pop
mov
rolb
lods
xor
inc
rorb
ror
cwtl
leave
and
std
add
nop
jb
mov
mov
add
xchg
adc
mov
push
arpl
enter
gs
repnz
push
aaa
shll
push
mov
xlat
or
mov
repz
icebp
leave
xlat
jnp
movsl
iret
add
push
jnp
in
jne
add
out
jb
test
out
lret
dec
jecxz,pn
mov
push
or
cmp
jnp
pop
cmpsb
dec
jae
outsb
or
mov
dec
pushf
push
cld
or
dec
sub
repnz
push
sahf
rcr
cmp
pop
jae
out
ret
lcall
or
push
mov
mov
test
stos
xlat
insb
dec
mov
adc
hlt
rclb
push
hlt
jge
gs
cs
inc
add
in
andnps
in
xor
mov
flds
add
cmp
loop
or
add
movsl
jno
push
jae
aad
sbb
and
aad
xchg
inc
bnd
popa
mov
into
dec
cli
outsl
jl
xor
pop
repz
je
or
loop
daa
shll
and
jns
pop
fdiv
stos
sti
lds
add
divb
jecxz
pusha
mov
addr16
ss
dec
mov
adc
inc
rclb
sub
push
or
xchg
mov
fcomps
jge
inc
test
jmp
cli
aam
stc
cmp
xor
mov
mov
jle
push
stos
xor
push
pushf
sbb
pop
add
out
inc
pop
push
ret
adc
sbb
lods
cmp
inc
adc
adc
dec
push
test
data16
aad
xchg
push
jmp
and
adc
inc
test
rorb
out
pop
rcl
lea
cmp
stos
mov
xchg
xor
dec
pop
mov
iret
fwait
rorb
fdivrp
dec
inc
xchg
add
imul
fiadds
mov
mov
lods
loopne
sahf
pop
in
mov
pop
shlb
mov
jmp
orl
cltd
add
mov
lods
lcall
lret
out
mov
adc
imul
mov
mov
loop
add
test
pop
lcall
mov
mov
mov
cli
int3
add
and
mov
or
and
popf
dec
adc
inc
jno
fcomp
sbb
push
and
xlat
loopne
pop
ds
lods
aam
std
push
jg
or
fdivrl
jno
sarb
dec
xchg
popf
push
mov
insl
andl
int3
xor
out
imul
stos
cli
mov
inc
leave
cmpsl
shr
or
sbb
lret
repnz
shrl
int3
jp
cltd
and
sbb
sub
pop
push
call
cmp
sbb
call
or
pushf
es
push
je
mov
push
outsb
dec
sub
mov
inc
nop
cld
js
xchg
sbb
sub
sub
mov
subb
inc
inc
jae
out
je
cltd
int3
xor
ficoms
pop
lods
je
idivl
cltd
and
push
lret
add
jo
mov
adc
add
adc
inc
rcl
sbb
daa
adc
mov
outsl
int
bound
mov
in
fistps
sub
jno
jp
sub
push
dec
mov
xchg
pop
call
movsl
jne
data16
dec
fdivl
mov
mov
jo
inc
outsb
xchg
pop
pop
xchg
popf
inc
jbe
sbb
test
jmp
lods
cmp
leave
insl
andb
stos
inc
lock
aas
mov
dec
mov
sahf
jnp
out
push
sub
enter
movsl
xchg
rclb
pop
popf
loope
push
or
mov
xchg
push
iret
xchg
mov
xchg
loope
push
cmp
fidivs
mov
cmp
xchg
inc
or
loope
stos
push
push
es
test
out
push
or
icebp
movsb
jmp
sub
adc
inc
push
pop
dec
aad
outsl
ds
lret
add
mov
ss
nop
aaa
aas
es
xor
inc
adc
lds
xchg
xchg
cld
mov
shr
fucom
adcl
js
adc
push
stos
idiv
dec
out
shlb
std
pop
pop
lods
loopne
fs
dec
js
gs
cld
mov
push
lret
cmp
mov
shll
in
std
xor
push
push
xor
out
inc
fdivrs
inc
jno
inc
push
push
pop
jnp,pn
out
xor
xchg
xchg
idiv
xchg
mov
jne
inc
std
in
loop
ret
xchg
aas
add
sarb
push
repnz
sbb
mov
les
adc
push
dec
inc
lahf
rcr
cmp
imul
mov
movsb
lahf
or
jmp
clc
aad
pusha
mov
fbld
xor
inc
adc
push
push
pusha
ljmp
add
cmp
sub
inc
and
loope
sti
testb
mov
out
fisubl
cmp
daa
jg
int
addb
pop
jns
fs
pop
sub
or
jne
cmp
mov
iret
shlb
dec
inc
mov
dec
fwait
xor
lret
scas
pushf
pop
popf
or
hlt
sub
xchg
imul
or
insb
jns
fisubrl
push
pop
adc
xor
pushf
roll
ror
push
or
mov
xor
xor
inc
mov
int3
popf
leave
xchg
aam
inc
adc
lods
mov
mov
call
fnstsw
andl
and
pop
fwait
xchg
insb
clc
sub
or
loop
sti
pop
xchg
xor
and
sar
jmp
or
int3
or
leave
inc
ja
xchg
sbb
stos
arpl
sub
movsb
pop
mov
in
into
fiadds
inc
fiaddl
xchg
fisubrs
mov
es
sub
movsb
in
inc
mov
fisubs
jb
push
loop
xor
imul
jne
nop
and
mov
popf
sub
mov
cwtl
data16
sbb
daa
loope
mov
inc
rorl
push
mov
sub
int
xor
add
dec
mov
enter
nop
sar
inc
or
sub
jmp
test
mov
stos
lcall
cmp
push
cmp
into
cmp
xor
and
hlt
jae
push
inc
cmc
out
mov
or
pushf
or
aam
js
stos
popa
repnz
or
push
subb
ret
inc
loop
xor
out
leave
loopne
popa
lcall
mov
in
adc
mov
lahf
mov
nop
jno
mov
or
add
icebp
loope
add
and
dec
cltd
pop
inc
xchg
cmp
test
mov
xchg
inc
mov
test
pop
cwtl
jle
in
loop
or
roll
es
xor
sbb
je
ja
mov
cmp
bound
lcall
mov
mov
xor
outsl
gs
out
mov
ss
mov
iret
xchg
pop
fsubp
adc
nop
jae
mov
xchg
stos
popf
ljmp
scas
stc
scas
out
test
inc
jb
rclb
stos
outsb
push
xchg
std
gs
mov
fcoml
xchg
and
sti
xchg
hlt
mov
sarb
mov
sti
xor
fsts
push
shlb
jg
mov
scas
sub
pop
and
insl
inc
loopne
loop
loope
aad
jb
test
out
inc
xor
sub
mov
pop
sbb
ficoml
push
xchg
xor
idivb
mov
sbb
adc
fcomip
popa
jmp
in
repz
jae
jg
je
dec
out
inc
jns
pop
test
dec
iret
add
hlt
and
push
prefetch
jp
std
outsb
stos
je
rcll
cli
cwtl
mov
mov
rorl
loop
cli
sbb
stos
fcmovbe
jp
jae
sub
xchg
push
push
sub
cmpsl
dec
repz
insl
gs
test
nop
sub
mov
jp
fdiv
or
movsb
adc
iret
dec
mov
xor
lods
test
mov
push
mov
or
fwait
out
dec
adc
inc
jp
dec
jnp
dec
in
push
mov
sub
insb
enter
pop
mov
cmc
push
shll
movsb
mov
popf
js
lret
dec
xorb
in
cli
sbb
sub
shl
repz
cmp
lahf
in
mov
xor
les
pop
inc
fsts
cmp
jae
stos
adc
mov
fcomps
xlat
mov
cwtl
xor
sub
add
lret
sti
les
popa
pop
cs
cld
sbb
push
xor
jg
aam
sbb
cmp
fldcw
xchg
jmp
pusha
and
cs
data16
pop
cmp
into
inc
notb
jl
or
jg
cmp
daa
bound
stos
ret
inc
dec
xor
gs
xor
aam
fdivs
mov
dec
movsb
cli
or
mov
in
jae
out
fldl
jbe
lahf
mov
fdivr
fcompl
sbbb
sbbl
gs
jl
in
in
leave
push
test
pop
enter
daa
addr16
pop
sub
lcall
jle
sub
and
mov
scas
adc
sub
jne
xlat
inc
daa
fsts
aas
inc
mov
fimuls
push
in
mov
ret
pop
repz
sahf
cmpl
jge
add
adc
fildl
jbe
or
or
sbb
cmp
mov
rcrl
stos
frstor
sub
sbb
jmp
sub
fisttpl
dec
scas
mov
shll
ss
sbb
fwait
sbb
popa
adc
xchg
ss
lret
sbb
in
cmc
sub
or
xchg
sbb
clc
aas
jno
push
ret
mov
test
or
test
aad
and
pop
cmp
add
or
jge
test
inc
xchg
xchg
sbb
loope
pop
dec
and
xor
repz
div
int
fistpll
dec
push
notl
mov
cmp
out
out
sub
cwtl
jg
pop
mov
mov
cmpsl
rolb
rclb
mov
in
out
in
mov
imul
call
mov
inc
add
mov
leave
loop
gs
dec
dec
fwait
mov
adc
pop
shrb
mov
incl
xor
sub
addl
xchg
inc
arpl
rcrl
icebp
cltd
pop
pop
in
add
addr16
aad
movl
jecxz
pusha
outsb
cmp
xchg
jo
dec
dec
push
fdivs
add
clc
and
fs
sbb
movsl
in
ret
outsb
popf
push
cld
jns
lea
ret
rcrl
and
jmp
pop
jecxz
push
push
test
xor
pop
incl
out
add
cmp
sbb
xor
push
and
rol
nop
jmp
repnz
xchg
push
or
xor
repnz
cs
adc
jno
pushf
pop
arpl
jno
jo
pop
or
jg
add
jp
pop
out
aam
ds
fdivrp
mov
out
xor
inc
cmc
add
ljmp
jbe
aam
stos
test
or
pop
ljmp
int
cmc
xorb
fcoml
mov
dec
outsl
out
xor
cmc
cmpl
sub
push
jne
xor
fs
cmpsb
insb
xchg
xor
mov
stos
cmpsl
cld
rcrb
in
fwait
xchg
xchg
fsubrl
out
pop
fwait
cmp
jl
sbb
lahf
pop
jle
push
addr16
test
mov
popa
lock
cld
sub
outsb
sub
mov
or
dec
pop
push
stos
lret
inc
fisubrl
adc
outsb
jp
cmpb
imul
adc
inc
dec
jb
pop
repnz
inc
sbb
or
sbbl
ret
mov
cs
dec
jne
sbb
mov
and
repnz
dec
scas
jl
pop
pushf
jns
push
ljmp
jns
pop
mov
adc
adc
loopne
jbe
jg
push
adc
rcr
adc
push
push
mov
movl
jg
sbb
xor
fsubrs
adc
std
add
sbb
int
sbb
mov
cmp
jo
outsl
test
add
repz
jmp
inc
jmp
mov
push
dec
mov
arpl
cmp
xor
movb
divl
ret
and
add
add
push
mov
imul
jo
shrb
fisttpl
jmp
sub
jg
xlat
push
push
cli
aam
jp,pt
cmp
fildl
sub
int3
xchg
mov
cmpsb
scas
push
into
incl
test
push
ljmp
push
xchg
sub
or
call
fs
movsl
mov
insl
jge
aad
mov
push
mov
cmp
and
lret
adcb
pop
sti
jns
je
mov
cltd
cmpb
sarb
jge
pop
rclb
add
adc
jp
cmc
iret
pop
movsl
push
dec
push
into
jge
xor
repnz
add
in
cmp
idivb
daa
mov
out
in
mov
mov
mov
int3
sti
mulb
xchg
testl
sub
in
cmpsb
int
mov
jg
cmp
adcb
xchg
dec
jnp
mov
pop
xchg
jbe
nop
imul
xor
sti
pop
roll
fiaddl
mov
jnp
mov
outsb
divl
cmpsb
mov
pop
pushf
mov
pop
mov
gs
push
frstor
cwtl
icebp
fsub
inc
xchg
pop
movsl
ret
fildl
int
clc
fcmovnu
sub
cmp
xor
mov
push
mov
mov
ss
and
fstl
movsb
adc
in
jbe
sub
pop
scas
leave
push
stos
mov
mov
out
add
add
mov
int
adc
in
mov
ret
into
mov
cmp
fistps
movsl
dec
mov
stos
push
lods
cld
or
pop
xor
add
and
mulb
xchg
lahf
sbb
mov
test
pop
idivb
mov
cmp
mov
jle
test
addb
cmp
loope
stc
das
cwtl
lea
cld
loop
ret
sahf
push
mov
mov
lret
mov
into
jle
inc
sub
xchg
and
pusha
adcl
mov
mov
loopne
enter
nop
jle
lahf
mov
or
add
mov
mov
lock
inc
sbb
jb
repnz
ret
mov
shll
mov
mov
jge
dec
add
enter
mov
sti
mov
mov
fiaddl
jmp
fs
imul
stos
mov
sahf
fs
mov
sbb
cmp
lcall
cmp
cmc
cld
outsl
inc
nop
mov
es
xor
jmp
mov
hlt
inc
xor
mov
repnz
negl
add
mov
sbb
inc
push
outsb
roll
jp
lea
loope
stos
fsubs
addl
sbb
inc
in
xor
std
les
sti
sti
mov
cmp
sbb
pop
ss
push
jnp
mov
std
ficomps
xor
sbb
push
popf
rcrl
pop
mov
in
push
imul
insb
jbe
xor
dec
out
cmp
inc
mov
jnp
cmp
sub
add
mov
das
sub
aas
mov
frstor
xchg
or
add
or
jnp
fcompl
outsb
jb
mov
les
loopne
test
mov
stc
cmpsl
push
clc
sbb
and
sbb
mov
inc
pop
xor
aam
push
pop
push
xchg
sub
int3
and
out
aam
ret
sub
xor
adc
xchg
mov
push
or
lods
and
dec
aas
js
mov
mov
aas
pop
xchg
jecxz
inc
mov
pop
mov
mov
out
xchg
int3
pop
jns
add
movsb
adc
mov
or
sbb
rorb
call
xchg
sbb
daa
stos
and
or
int3
sbb
shll
sbb
pop
or
push
sub
push
das
xchg
push
add
aam
adc
mov
mov
push
out
push
ss
stc
xor
mov
mov
mov
int3
outsl
cli
mov
testb
outsl
push
loop
xchg
mov
repnz
mov
lcall
int
in
sub
shl
popa
lods
stc
xorb
into
hlt
sti
icebp
mov
push
out
push
popa
pop
movsl
and
xor
push
repz
in
mov
cmp
arpl
outsb
clc
lods
ja
fwait
jb
jo
scas
mov
popa
mov
and
mov
pop
mov
shr
in
push
sub
mov
es
adc
popl
xor
jns
stos
testl
mov
lret
insb
xor
jne
pop
movsl
sbb
add
int3
fisttpll
out
adc
xor
mov
pop
sbb
or
sbb
push
jno
add
ds
and
mov
lods
mov
aad
call
orl
jbe
insl
mov
jae
cmp
xchg
jnp
cmp
popa
out
or
sub
adc
mov
inc
cmp
mov
pop
mov
adc
lret
mov
mov
repnz
je
imul
adc
mov
aaa
pop
jno
lock
orl
iret
aas
xor
inc
jg
std
dec
fsubp
int3
jecxz
hlt
cmpsl
cmp
pop
pop
inc
mov
je
arpl
fs
jle
pop
clc
xor
sti
mov
xchg
fsubl
das
cmp
movsb
out
xor
andb
mov
ret
sub
jne
pop
movsb
lret
or
lret
mov
mov
fldenv
and
lock
int3
clc
shrl
sbb
cmpsb
fistl
mov
test
mov
stos
jg
outsl
dec
lods
sbb
push
in
and
mov
push
insl
push
pop
jne
and
imul
cmp
and
movsb
push
dec
outsl
dec
ss
or
adc
mov
sbb
leave
divb
jnp
in
cmpsl
aas
xor
je
jo
jae
mov
mov
ret
xor
outsb
iret
cmp
jmp
loopne
mov
jmp
rcll
ficoms
jecxz
add
or
lock
inc
inc
addr16
les
mov
push
and
cltd
ret
enter
stos
out
dec
sbb
inc
xchg
ficompl
arpl
imulb
fisttps
jns
insl
pusha
jp
sbb
scas
pop
ljmp
call
ret
dec
loop
xchg
cli
mov
add
fldcw
jp
fisubrl
rcll
or
negl
stc
sbb
es
and
scas
test
mov
xor
jg
out
xlat
mov
test
ljmp
inc
sbb
repnz
subl
mov
xor
cmc
mov
cmc
mov
rcll
add
lcall
sub
pop
sbb
movsb
cmp
xor
gs
pop
xor
call
cmp
sbb
fdivrl
push
fdivl
pop
scas
ret
andb
lret
ret
sbb
sahf
cmp
xchg
or
test
fsub
sub
sub
leave
inc
outsl
popf
ret
xor
stc
fisubl
adc
leave
add
mov
lea
test
ja
add
cmp
scas
icebp
lcall
add
fiadds
lret
dec
dec
xor
in
jno
inc
cmc
pop
and
shll
mov
mov
ljmp
mov
cmp
adc
xchg
mov
and
movsb
add
cmp
popw
inc
adc
ljmp
jg
push
sub
loopne
in
add
push
and
sti
pop
inc
or
shll
mov
int3
xchg
pop
jb
cmc
dec
std
fcompl
loop
jae
and
outsb
out
je
xlat
mov
popf
sbb
into
in
or
and
push
mov
lret
gs
test
mov
insl
xchg
movsl
leave
fsubs
pop
ret
push
xchg
daa
divb
mov
adcb
das
mov
jns
sub
cmpsb
add
xchg
ret
xor
addb
sub
imul
push
xchg
cmp
jnp
imul
sahf
dec
pop
jg
cmp
sub
xor
push
push
xor
setle
dec
mov
lcall
adc
push
imul
mov
je
nop
mov
pop
sarb
mov
sar
cld
outsl
enter
fs
into
in
pop
or
cmp
xor
aaa
mov
and
dec
sub
push
shrl
dec
mov
mov
dec
loope
xchg
sub
mov
sti
or
push
xor
and
scas
or
sbbb
shlb
and
lods
mov
adc
mov
sub
dec
ss
push
fwait
out
test
ret
into
sbb
fdivr
in
gs
aas
fs
push
adc
add
or
jne
xor
iret
out
unpcklps
mov
mov
cmpb
test
cmc
bound
mov
js
scas
sub
inc
aas
ret
mov
push
inc
cmp
loopne
ret
leave
sbb
rcrb
in
ds
sbb
out
test
mov
imul
imul
popf
xchg
data16
test
dec
mov
xchg
mov
gs
sub
das
jp
ret
pop
das
int
nop
inc
aam
sub
popw
dec
fs
sub
out
data16
insl
out
int3
xor
mov
repnz
pop
fwait
jne
aaa
mov
daa
daa
push
shll
pop
lcall
cld
xor
out
fbld
push
test
jb
xlat
xor
repnz
into
lds
clc
adc
mov
lcall
push
and
mov
xchg
push
fstpl
mov
xor
pop
mov
jae
loop
inc
pop
sti
xor
dec
push
int3
cmpsb
push
sti
xchg
inc
cmc
inc
jae
mov
xchg
clc
pop
ljmp
fiadds
pop
sbb
mov
xchg
rorl
pop
cmpsl
and
aad
mov
pop
xchg
aam
xchg
ds
inc
fwait
xchg
jg
outsl
mov
xchg
ret
adc
ljmp
jge
call
fdiv
test
inc
cmc
sar
jno
pop
and
call
addl
aam
pop
mov
in
inc
dec
xchg
dec
in
jl
gs
mov
mov
repnz
repz
sub
arpl
mov
bound
push
es
mov
sbb
insl
xor
cmpsl
lds
sti
mov
mov
mov
xor
sub
out
dec
xchg
repnz
xlat
or
mov
cltd
lea
sbb
int
ljmp
push
mov
bound
mov
test
or
in
mov
rclb
xchg
stos
adc
cmpsl
mov
cmpsl
lock
sbb
in
fimull
jle
inc
mov
pop
inc
addr16
out
xor
cmp
mov
fcmove
negb
inc
outsl
xor
jne
outsl
lret
mov
sub
add
cmp
clc
push
dec
jg
pop
push
scas
lea
push
inc
xchg
in
sbb
ss
mov
out
sti
cmpsb
shlb
push
cmpsl
jle
inc
xchg
lods
std
cmp
lahf
stos
movsl
add
mov
add
shlb
jns
xchg
inc
cmpl
push
xor
pop
adc
call
jnp
mov
sub
cmpsl
loopne
dec
mov
outsb
rclb
fildl
cmpb
dec
scas
mov
push
mov
movsb
or
sub
out
je
mov
lods
repz
push
inc
jne
fistl
push
add
and
xchg
adc
cmp
es
outsl
loop
inc
add
nop
xabort
imul
test
push
mov
scas
cmp
aaa
negl
mov
fld
sbb
jp
mov
jno
push
mov
xor
fildl
pop
add
out
lahf
mov
popa
stc
divl
aaa
cmp
jne
mov
xlat
xchg
imul
jmp
test
dec
push
sti
mov
rcll
mov
or
jnp
pop
sbb
mov
and
dec
insb
ret
sub
jno
mulps
inc
addb
jnp
divl
mov
dec
push
mov
add
in
clc
sbb
xlat
sbb
bound
xchg
mov
pop
pop
je
cmpl
mov
adc
mov
push
loope
dec
jae
dec
int
dec
or
int
mov
jl
decb
jo
jge
out
xchg
inc
ljmp
mov
fistl
or
pop
pop
lea
add
or
cmp
loop
lea
call
movsb
lcall
push
inc
sbb
xchg
in
cmp
scas
mov
lret
sarb
mov
xor
jecxz
mov
push
bound
mov
adc
sub
scas
jle
lds
psrld
test
xchg
dec
cmpsl
lcall
or
mov
jns
xchg
andb
mov
loope
arpl
sub
jp
push
jp
daa
data16
mov
fdivl
roll
ret
mov
cmp
mov
roll
sbb
push
shlb
clc
loopne
sub
popa
iret
int3
xchg
pop
jnp
push
ljmp
lods
pusha
lahf
and
jge
movsl
addr16
and
call
mov
jo
pushf
sti
adc
roll
orb
push
push
ljmp
xchg
push
cmp
push
adc
enter
sbb
mov
ja
cmp
inc
pusha
sbb
je
aad
inc
out
mov
cld
push
jno
insb
and
sbb
xchg
sbb
dec
leave
inc
dec
rolb
push
mov
jl
jmp
add
jo
shl
pusha
leave
daa
cmpsl
jae
jl
jns
xchg
and
mov
leave
push
sub
or
aad
test
mov
sbb
mov
cwtl
push
lcall
pop
sub
shrb
mov
pusha
jmp
mov
cmp
cmp
jmp
sti
pushf
mov
icebp
dec
imul
fdiv
js
ss
mov
test
pop
fnstcw
insl
fs
inc
jge
inc
scas
subb
inc
xchg
cwtl
mov
push
pop
mov
test
dec
popl
mov
cmpb
inc
mov
lods
pusha
and
mov
test
push
scas
fisubrl
lock
js
std
xchg
aad
xchg
loope
pushf
fnstenv
and
push
mov
fstps
jbe
popf
pop
adc
fmul
xchg
pop
add
and
cmp
adc
cwtl
inc
jo
in
and
pop
and
out
add
add
pop
xchg
daa
xchg
jne
insl
xchg
cmc
mov
ja
in
jmp
ss
test
call
je
mov
gs
dec
fbld
jp
in
pop
pop
mov
sub
pop
popa
mov
xlat
pop
sbb
dec
icebp
scas
cmp
jl
mov
sbb
fcompl
pusha
fistpl
lds
roll
mov
fistpl
jmp
int
roll
mov
cld
js
scas
sbb
aaa
leave
jns,pt
mov
jl
pop
add
sbb
sbb
aad
vmovshdup
dec
jns
test
or
jmp
lret
push
mov
cmpsb
mov
xor
or
cmc
sbb
notb
and
mov
pop
pushf
pop
push
js
aas
inc
xlat
jle
xchg
popa
out
js
lods
sub
sbb
minps
add
sub
pop
inc
cmp
cli
xor
push
xor
repz
or
pop
out
paddsb
enter
cmp
into
inc
rcl
loope
or
arpl
aaa
mov
sahf
clc
ljmp
lock
shrb
pop
jle
add
sbb
or
loope
mov
fs
push
addb
jbe
out
sub
mov
insb
push
push
int3
and
rorb
dec
mov
mov
ja
xchg
sbb
dec
imul
xchg
xchg
std
xlat
cmp
mov
int
cmp
lea
les
pop
imul
je
dec
push
outsb
xor
js
and
loope
mov
push
ds
and
push
xchg
orl
insl
cltd
xor
rclb
nop
cmp
movsb
loope
dec
lock
jo
add
lret
in
pop
adc
sub
cmc
call
adc
inc
cmp
sbb
adc
daa
hlt
cmp
adc
xchg
mov
sub
mov
mov
fnstsw
fidivrs
pop
fs
out
divb
xor
aam
imul
cmp
mov
loope
pusha
insb
adc
lahf
xor
xchg
imul
sahf
and
push
shll
mov
call
xchg
bound
or
mov
int3
pop
lea
sub
cwtl
lods
imul
roll
addr16
mov
lock
xor
lods
popa
sub
pop
xor
sbb
jp
leave
sbb
iret
push
subb
adc
xchg
sub
repz
xchg
jecxz
addr16
sub
clc
int3
inc
xor
push
lret
test
out
dec
cwtl
xchg
sbb
jne
mov
or
pop
decl
ret
xchg
jb
mov
dec
movsb
xor
std
daa
mov
aas
xchg
dec
loop
xchg
dec
cmp
and
jne
sbb
nop
mov
mov
lods
sbb
xchg
xorb
add
pop
sub
in
cmp
add
lret
add
add
test
mov
rcl
add
dec
fsubrs
pop
dec
jns
outsb
into
clc
dec
or
les
adc
fdiv
fstps
out
add
aam
push
shl
sti
push
or
sub
scas
mov
lret
jbe,pn
pop
inc
cltd
pop
pop
dec
mov
cmc
leave
insb
push
jmp
dec
in
inc
bound
mov
scas
add
fisttpl
fwait
xor
imul
ja
push
fsubs
mov
sub
das
mov
mov
xchg
cmp
leave
sbb
clc
jge
mov
or
bound
pop
inc
test
ja
movsb
mov
aam
mov
loop
add
or
mov
rcl
in
jb
mov
pusha
inc
sub
shl
fidivrl
inc
push
push
shrb
pop
xor
pop
dec
or
add
aaa
lret
mov
add
subl
stos
stos
movsb
pop
ljmp
andl
test
sub
aaa
rorl
jg
subl
fstpl
fs
scas
test
popf
mov
out
dec
dec
adc
jecxz
pop
inc
dec
ret
inc
lods
subb
fisubrl
lods
inc
xchg
mov
jl
jbe
xchg
insb
dec
test
mov
pusha
jne
fisubrl
arpl
jge
aas
std
adc
cmp
loop
add
mov
clc
mov
pop
test
adc
xchg
loope
std
mov
xchg
movsb
rcl
dec
out
idivb
mov
xchg
addr16
cmp
mov
pushf
cmc
std
sub
xchg
pop
mov
pop
sbb
push
and
outsb
mov
test
jb
mov
popf
push
xchg
sti
aad
jecxz
je
mov
lahf
sbb
xor
push
repz
jmp
push
inc
and
and
ja
aad
test
mov
out
mov
pushf
mov
sub
xchg
scas
cmpb
pushf
addr16
lcall
cli
xchg
iret
mov
cmpsb
or
add
loope
push
insl
and
cmp
mov
int3
ret
lock
xor
icebp
push
ret
lcall
enter
inc
insl
cmp
sub
rorl
xor
mov
idiv
mov
cmp
enter
mov
andl
jb
repz
cmp
fdivl
dec
push
mov
roll
adc
in
xchg
cli
cmp
xchg
mov
cmp
sbb
cmp
fldt
cli
cmpsb
mov
sbb
cmpsl
pop
add
dec
xchg
fldpi
sbb
cli
jo
icebp
popl
cmp
test
push
setl
ficoms
test
rcrb
pusha
insb
ljmp
jge
loop
push
addr16
int3
faddl
cmc
push
fiaddl
gs
sub
popf
push
mov
fidivrs
add
adc
mov
repnz
nop
and
xlat
sub
jecxz
push
mov
icebp
xlat
daa
push
stc
xchg
xchg
outsl
pop
mov
pushf
lods
mov
into
hlt
mov
adc
call
outsl
jmp
aaa
iret
and
out
xlat
dec
push
out
or
mov
aam
pop
pop
xchg
xor
inc
ret
out
pop
jae
sbb
or
and
xor
orb
call
imul
push
dec
loopne
test
pusha
test
mov
jbe
cwtl
mov
fbld
push
or
inc
data16
fldenv
rcrl
cmp
xchg
loope
dec
sub
mov
push
vpshufhw
mov
mov
out
lret
scas
enter
call
shrb
loop
xchg
mov
xor
scas
sbb
mov
push
bound
shll
mov
stos
inc
fcmovbe
cmp
loop
insl
cmpb
out
mov
aas
clc
or
inc
dec
dec
insb
xor
lock
dec
gs
sbb
push
pop
stos
fdivs
fwait
sbb
jl
in
pop
dec
push
mov
inc
mov
int
call
xor
scas
ret
loopne
mov
xchg
jmp
repnz
roll
jge
pop
mov
dec
add
add
scas
xor
pop
fwait
push
sub
jl
add
sti
mov
add
jb
cs
xorb
mov
or
and
cli
cmpsb
dec
adc
xchg
shlb
cwtl
lcall
lock
sarb
inc
call
pusha
out
shlb
imul
enter
sbb
call
sbb
call
test
jae
das
ffreep
test
push
and
and
xor
jg
movsl
and
enter
lock
xor
sti
cmpsb
add
std
xor
test
shrb
add
test
in
mov
fdivrl
xchg
jp
jno
mov
jg
sbb
nop
in
in
mov
imul
push
dec
insl
ss
sbb
mov
aam
ret
jne
mov
leave
adc
inc
jnp
test
test
xor
lret
out
pusha
out
push
fldt
cmpsl
test
popf
roll
out
push
push
mov
movsb
pushf
dec
mov
ds
push
and
jecxz
bound
mov
pop
repnz
out
jnp
pop
sbb
js
scas
dec
jp
adc
sub
push
adcb
mov
push
jge
and
jno
loopne
idivb
lcall
aam
cmpsb
test
and
sub
jl
add
jbe
fstpt
outsb
sbb
xchg
dec
sub
fcompl
sarl
jae
xlat
ret
xor
cli
imul
ret
mov
xchg
cmpl
shrl
cmc
out
dec
and
cmp
and
js
xor
dec
mov
push
add
je
pop
mov
dec
iret
pop
mov
out
mov
dec
mov
pop
cmc
fistpll
or
pop
pop
push
lcall
mov
negl
jns
imul
and
in
lock
cmpsb
fwait
in
or
adc
mov
push
cwtl
stos
mov
push
jo
mov
in
pop
jmp
jl
mov
mov
imul
sub
jae
mov
add
call
popf
push
mov
test
mov
inc
div
or
inc
pusha
xchg
pop
in
lcall
call
mov
dec
add
xchg
test
push
jecxz
enter
lods
inc
and
mov
enter
mov
jp
push
xlat
icebp
dec
or
das
inc
mulb
lods
jmp
hlt
cld
cld
rcrl
pop
xchg
loope
or
jae
mov
lret
jl
xchg
adc
icebp
out
dec
shr
xchg
mov
mov
sub
jmp
add
and
ja
arpl
inc
das
cmp
push
and
jmp
push
dec
out
imul
in
mov
push
mov
xchg
bound
sahf
inc
inc
fdivrs
push
aas
aaa
or
push
js
adc
lcall
fsts
sahf
inc
pusha
fdivrs
adc
clc
jl
aad
das
mov
jnp
repnz
dec
jbe
fimull
outsl
mov
adcb
lcall
xchg
pop
movsl
xor
push
popa
pop
and
ss
fdivrs
je
fidivs
sub
repz
push
xchg
popa
pop
icebp
push
sahf
fs
inc
stos
mov
lods
and
xchg
int3
dec
shlb
int3
adc
scas
cmpsb
add
jge
cmc
mov
mov
les
fcomps
lahf
push
jne
fnsave
lahf
add
scas
fucomi
fidivs
or
pushf
cmp
cs
cmp
add
adc
lahf
sbb
fisubl
pop
push
pop
pop
mov
mov
sbb
push
out
mov
fidivs
xchg
inc
out
mov
fnclex
dec
ja
out
add
cmc
lea
mov
push
mov
sub
inc
das
xor
ss
inc
or
pop
rcll
mov
adc
sbb
xchg
pop
fs
add
pop
push
and
jg
mov
add
adc
mov
sti
mov
jecxz
cmp
mov
adc
flds
ret
inc
xor
jecxz
inc
inc
out
rolb
jno
out
lods
cmpsl
push
sbbl
inc
repnz
mov
arpl
out
pop
into
out
stc
bound
incl
pushf
adc
cmp
sub
xor
push
dec
test
aas
jb
ja
cmc
cmp
dec
inc
fstpt
out
loop
iret
xchg
scas
push
orb
stos
imul
dec
fs
clc
sub
push
sbb
add
inc
cmp
cmpsl
lret
pop
and
and
fldt
cmp
pop
xchg
inc
leave
addr16
das
pop
movsb
stc
ret
mov
inc
idivb
jo
out
push
stos
rep
mov
cli
adc
mov
mov
push
mov
fists
movsb
lock
or
sbb
dec
js
sarl
sbb
add
mov
repnz
daa
lcall
movl
jb
dec
shl
aad
jmp
mulb
push
fldenv
lahf
push
xor
ljmp
pop
sbb
push
enter
xchg
add
push
rol
pop
mov
inc
test
icebp
xchg
jae
andl
sbb
inc
push
mov
cmc
mov
repnz
xor
cmpsb
mov
aad
mov
sbb
sbb
jne
pop
lock
outsl
testl
pop
cmp
mov
push
lss
scas
loope
stos
leave
and
insl
sub
adc
mov
nop
std
mov
mov
mov
xchg
lds
test
cmp
stos
outsb
mov
sbb
jge
lock
add
or
mov
push
lds
pop
out
gs
lret
lcall
mov
cmpsl
mov
inc
cmp
data16
fs
pop
test
int3
sbb
test
mov
adc
faddl
popl
push
sbb
je
jg
cltd
popa
and
sub
or
in
cld
loope
aas
mov
inc
fwait
lcall
sub
jmp
dec
xchg
gs
inc
test
xchg
gs
clc
roll
stos
push
outsl
and
push
push
aas
jge
arpl
sub
ss
sbbl
lahf
xchg
lea
subb
shll
icebp
fidivl
push
push
gs
mov
dec
push
icebp
sbb
xor
adc
ret
cmp
or
cmp
movsb
sbb
push
lahf
ss
mov
mov
bound
adc
push
mov
inc
push
ljmp
daa
mov
aaa
inc
or
xchg
adc
mov
dec
adc
loop
movsl
inc
mov
int3
imul
sbb
mov
imul
mov
loopne
pop
and
stc
cmp
insl
dec
ljmp
in
or
inc
sahf
cmp
movsl
mov
rolb
shlb
scas
adcb
dec
dec
xchg
or
push
or
push
sub
mov
cmp
push
push
xor
es
popa
dec
jns
mov
adc
push
mov
stc
sbbb
cmpsl
or
or
sahf
cmp
jbe
les
cltd
mov
arpl
mov
push
arpl
pop
out
or
dec
sub
inc
sub
lock
push
sbbl
and
push
ds
jg
jmp
mov
into
cltd
add
cld
jne
sbb
push
dec
mov
ficompl
inc
cwtl
xchg
xor
cld
and
xor
stos
call
jge
and
pop
xchg
ja
rcl
adc
cmp
cltd
dec
xchg
insb
hlt
adc
push
lcall
cltd
mov
sbb
arpl
add
and
mov
sahf
insl
enter
out
lods
cmp
xchg
xchg
jno
ljmp
mov
loop
jp
mov
fbstp
mov
nop
outsl
jo
out
cmp
push
pop
cmpsl
repnz
in
mov
js
fnstsw
mov
sub
mov
xchg
fwait
repz
pop
lret
cli
xor
jae
xor
sbb
mov
test
inc
daa
and
dec
sbb
push
push
test
scas
rcrb
aaa
loopne
call
ja
xchg
and
inc
sub
dec
scas
sbb
inc
leave
cmp
popa
mov
movsb
adc
fnstcw
loopne
mov
stc
hlt
call
inc
shrb
out
dec
pop
pop
test
and
push
push
nop
fildll
or
dec
xor
repz
std
lods
xchg
xorb
xchg
mov
push
les
xchg
addr16
gs
js
gs
js
icebp
xchg
bound
daa
pop
jns
add
xchg
mov
outsl
xchg
cmpsb
fsubp
sub
fisubrl
inc
add
sbb
fisubl
jns
aad
xchg
jb
imul
dec
pop
stos
mov
mov
dec
jne
jae
scas
mov
pop
push
mov
xchg
sub
sbb
xorl
push
add
push
lcall
sbb
sahf
inc
inc
popl
xchg
lods
cmp
adc
mov
and
leave
stc
mov
mov
mov
addb
mov
jp
xchg
inc
sysexit
aas
ljmp
notb
movsl
call
sub
or
jo
sub
and
outsb
inc
sbb
inc
mov
in
mov
mov
xchg
push
sbb
lods
out
test
out
arpl
test
rcrb
out
and
aam
icebp
mov
inc
popf
jnp
mov
fs
xor
movsb
sub
xor
sti
aad
adc
popf
dec
cmpsb
cld
ret
mov
test
mov
cmp
cmp
sbb
mov
adc
iret
ds
xor
adc
jp
loope
jecxz
add
push
push
sub
adc
adc
pop
nop
xchg
outsl
xchg
jl
mov
das
aas
push
call
repz
cmp
fcomps
cwtl
test
xchg
mov
test
add
fwait
ja
mov
push
adc
rcr
pop
clc
mov
jae
call
cmp
test
xor
rcll
insb
test
fincstp
sub
sub
ja
dec
xchg
fwait
push
int
cmp
aam
outsb
aaa
jle
stos
or
and
imul
mov
daa
movsl
dec
pop
and
xchg
push
cltd
mov
repnz
mov
push
jg
repz
inc
adc
scas
pop
xor
mov
mov
adcb
xchg
inc
adc
adc
ficomps
out
mov
and
push
push
insb
lea
ret
movsb
mov
cmp
scas
aad
push
pop
and
ds
jle
fcoml
and
inc
cld
gs
sar
shll
stos
or
leave
and
test
add
sbb
push
pop
sub
and
inc
dec
pmovmskb
adcb
pop
scas
les
outsb
sbbl
aas
clc
andl
cmc
add
addr16
out
test
fildl
sub
lret
fwait
std
out
shll
ss
lret
neg
lret
fnclex
std
stc
xadd
pop
jnp
or
fstpt
sub
cmp
in
add
sti
xchg
inc
out
sbb
add
hlt
dec
loopne
ss
ds
pop
inc
out
cmpsl
out
and
fwait
aad
adcb
mov
pop
push
cmp
add
ds
mov
cmp
stc
out
lods
mov
sti
das
cmp
int3
ret
xor
push
mov
push
mov
hlt
loopne
shll
popa
clc
movsl
movsl
and
xchg
sub
pop
jmp
arpl
int
insl
inc
mov
mov
inc
xchg
cwtl
jne
aaa
leave
leave
mov
lcall
xchg
es
hlt
inc
mov
andl
roll
mov
sbb
sub
ljmp
mov
iret
or
test
sbb
sbb
xchg
push
rolb
cmc
xchg
lds
xchg
loope
lods
out
rol
jo
push
or
mov
cltd
pop
jp
inc
mov
hlt
or
fs
cmpl
sub
lods
cmp
xor
xor
mov
jae
in
xchg
push
adc
mov
dec
jne
aad
inc
sahf
arpl
fstl
push
push
cmp
xchg
pop
cwtl
andb
in
sub
xchg
test
inc
rorb
sub
into
and
hlt
lahf
nop
mov
sub
in
std
pop
clc
scas
fildll
mov
lods
xchg
jge
cwtl
ja
iret
cwtl
xorl
or
mov
outsb
clc
jmp
stos
and
in
cmpsb
in
push
pop
popl
addr16
or
jl
mov
mov
pop
fwait
test
add
sbbb
mov
in
lret
fimuls
pop
insb
push
fwait
or
fidivl
enter
daa
icebp
and
jecxz
push
jl
loopne
mov
lods
cmpb
aam
pop
test
nop
pushw
scas
mov
pop
jl
mov
adc
stc
pop
ljmp
lret
or
xchg
rorl
repz
shlb
fdivs
mov
out
push
adc
idivb
es
cmpsb
jo
or
scas
in
mov
mov
and
sub
jne
lea
int
lods
sub
insl
dec
push
xchg
jg
iret
mov
into
mov
imul
scas
stos
xchg
shrl
jne
lods
sub
pop
mov
pop
mov
fidivrl
jne
mov
jmp
jbe
dec
push
dec
pop
mov
pop
push
leave
lods
loopne
imull
jae
or
mov
pop
and
pop
in
cltd
sbb
nop
sub
dec
mov
addr16
int
repz
and
fldl
nop
loope
xor
aam
jnp
cld
popf
testl
xchg
cmp
adc
icebp
xor
jge
inc
or
clc
sahf
cwtl
js
jg
dec
xchg
stos
or
les
clc
out
imul
sarl
and
sbb
jmp
icebp
test
mov
out
fsubl
jg
pop
inc
jae
ret
js
rcr
jp
stos
sbbb
and
add
push
fincstp
dec
add
mov
push
jmp
xchg
pushf
xchg
out
fiaddl
out
popf
xchg
daa
or
sbb
gs
enter
negb
fbld
pop
lock
mov
shrb
in
and
arpl
cltd
xchg
adc
dec
xor
sbb
aam
cli
sbb
int
into
push
outsb
or
jbe
movl
xchg
cmp
jne
mov
mov
adc
cld
adcb
fcoms
and
movsb
sbb
mov
lds
adc
into
out
jg
shll
mov
lds
lret
mov
imul
test
adc
sbb
xchg
imul
fldcw
lods
cmp
add
loop
lahf
in
lcall
pop
cwtl
and
aaa
test
stos
push
xchg
out
leave
lods
mov
cmpsl
xor
mov
xor
ret
fidivrs
das
push
xor
inc
out
cmpl
adc
cmp
add
or
dec
sahf
mov
aad
push
lock
adc
jecxz
fmuls
iret
sbb
sbb
adc
aad
js
adc
cmp
pop
mov
in
sub
adc
adc
enter
sbb
movsl
popa
pop
pop
sub
nop
xor
sahf
jmp
leave
xchg
repz
lods
dec
int3
sahf
dec
pop
bswap
push
cmp
xor
push
cmp
inc
lods
fnstsw
mov
ret
cmp
or
aaa
pop
pop
push
std
outsb
out
inc
insl
loop
into
push
and
rol
stos
adc
push
mov
jecxz
xor
test
stos
sub
xchg
mov
js
jge
xor
dec
frstor
out
ret
adc
push
xchg
sarl
xor
fwait
insb
push
jle
leave
clc
xor
stc
cmp
xchg
xchg
xor
imul
push
push
rorl
jmp
in
mov
sahf
aaa
jo
dec
push
jns
sub
dec
or
jbe
sub
mov
leave
xor
cmp
pop
add
in
pop
rorb
push
inc
dec
pop
jg
lcall
lcall
stos
sarl
out
xchg
add
pop
pop
or
push
shr
aam
into
lods
popa
push
ljmp
dec
test
mov
mov
xchg
push
pop
adc
xor
stos
inc
cwtl
mov
shll
sbb
lds
or
xor
xchg
push
leave
sbb
xchg
in
lds
inc
mov
cmpsl
jne
adc
add
add
sub
bound
jge
insl
jnp
sub
adc
push
scas
inc
ds
shrb
fdivr
add
sbb
push
jmp
decl
pop
inc
shlb
addr16
popf
outsb
jnp
dec
adc
add
les
and
and
ljmp
mov
or
and
mulb
push
out
ret
scas
push
pushf
lea
dec
sbb
inc
pcmpeqw
push
movsb
mov
inc
iret
jb
sub
movsl
lea
std
push
dec
fldenv
lcall
cli
arpl
in
in
jmp
mov
adc
pop
mov
push
andl
and
insl
imul
xchg
mov
iret
dec
popl
jnp
frstor
popa
pop
in
jle
aaa
mov
decl
pop
test
fistl
add
mov
sbb
ds
out
and
xchg
jg
into
mov
cmp
mov
outsl
inc
mov
or
ljmp
aaa
lds
fimuls
insb
sub
inc
out
lahf
dec
arpl
pop
adc
subb
pop
sbb
and
aas
or
and
stos
jmp
or
popl
ss
dec
sbb
pop
stos
pop
or
test
lea
stos
das
stos
dec
ja
cmp
aam
in
sub
and
jo
clc
xchg
mov
ljmp
or
sub
ds
int
clc
add
sahf
and
out
frstor
mov
cmp
std
mov
jle
mov
push
pop
inc
fmul
xor
neg
jmp
xchg
or
xchg
jecxz
out
inc
xlat
gs
data16
rcll
fiaddl
movsl
fildll
nop
cwtl
wrmsr
pop
pop
fsub
pop
testl
cmp
test
dec
loopne
add
outsl
inc
xchg
or
insl
push
mov
fldl
sub
inc
pop
aas
ret
enter
iret
das
lahf
lds
out
push
mov
mov
push
int3
fbstp
in
mov
mov
pop
sub
xor
pop
ljmp
faddl
mov
mov
adc
mov
mov
or
mov
out
inc
push
sub
nop
jmp
adc
lock
insl
xor
in
jne
xor
inc
mov
ljmp
fists
js
and
push
xor
inc
jns
fadd
ss
cmpsb
aaa
push
stc
inc
cmpsb
inc
mov
mov
jmp
cmpsb
ds
xor
faddp
stc
imul
adc
rcr
fists
mov
xchg
je
xchg
cmp
pop
push
out
subb
lahf
popf
aam
repz
or
inc
into
popf
fstpt
xor
notl
out
mov
adc
pop
inc
inc
cwtl
mov
inc
jb
repz
mov
add
cmpsb
scas
mov
aad
addb
sub
jp
rcrb
xchg
sbb
or
int
test
jb
mov
dec
dec
lret
data16
mov
and
jmp
inc
mov
mov
xor
into
inc
fistl
inc
pop
and
mov
cmp
cmp
das
push
and
jne
ja
pop
bound
sbb
or
enter
add
cwtl
add
clc
mov
sub
mov
adc
pop
or
ret
ret
sub
jnp
xor
xor
ret
push
int3
popa
and
pop
icebp
inc
mov
or
movsl
and
ret
call
fisttps
les
cmp
scas
cmp
in
sbb
rorl
ljmp
mov
push
xchg
cmpsb
push
mov
or
loopne
and
cltd
lcall
in
cmp
aas
sbb
dec
inc
out
icebp
cmp
daa
jno
addr16
jp
leave
or
fsubs
ja
mov
push
loopne
push
or
and
into
push
call
pop
fisubs
shrl
int3
stc
jmp
cmpb
dec
pop
jns
daa
xor
mov
inc
push
mov
mov
fidivs
mov
and
pinsrw
adc
out
and
ljmp
adc
dec
inc
push
jp
add
inc
jae
in
push
jnp
xor
sbb
enter
fnstenv
shll
xchg
imul
roll
pop
and
pop
scas
imul
fsubs
repnz
xchg
inc
jle
jp
pop
inc
inc
imul
cmp
mov
dec
adc
dec
mov
jl
inc
pop
mov
dec
push
jno
push
insb
adc
add
mov
clc
popf
mov
or
popa
leave
out
data16
repnz
mov
inc
lahf
adc
cmpb
pop
daa
jns
pop
ljmp
stc
addr16
push
jmp
sub
xchg
add
in
pop
adc
int3
inc
and
sbb
lcall
int3
les
jle
sti
mov
adc
mov
cmp
mov
add
enter
leave
or
xchg
mov
gs
fstl
xchg
out
and
mov
dec
mov
loope
cmpsb
popa
inc
and
add
adc
mov
aad
divl
int3
aaa
rcrl
xchg
or
hlt
test
fstpl
shrb
or
jb
push
fistps
push
in
mov
insb
xchg
cmpsb
lahf
rorb
shrb
sbb
loope
xchg
sub
push
fst
inc
xor
and
repnz
cmp
nop
lret
pop
jbe
int
push
and
das
jno
inc
xchg
add
call
dec
adcl
push
pop
jle
push
add
cltd
fildl
mov
pop
sub
xchg
lods
nop
push
sti
fwait
clc
test
insb
pop
cltd
stos
push
lret
gs
je
arpl
pop
jecxz
jmp
stc
or
mov
sbb
lods
and
mov
lods
push
lret
inc
dec
jmp
cmpsb
adc
mov
ror
fldenv
leave
pop
xchg
pop
mov
out
jg
adc
ret
jg
xchg
jo
ds
cmpsl
dec
fnsetpm(287
sbb
std
arpl
and
mov
lcall
ds
push
cwtl
cmp
jl
dec
in
test
pop
ss
mov
mov
push
mov
imul
xor
mov
mov
jp
sub
dec
xchg
pop
aas
lds
dec
lcall
adc
dec
shlw
jbe
insl
push
cmp
in
inc
push
es
out
data16
cmp
push
ds
lret
pop
fcoms
adc
jns
test
into
sbb
sbbb
and
adc
adc
decl
sub
fldt
jae
imul
into
mov
pop
mov
icebp
push
jmp
jmp
xlat
jle
cmp
xor
mov
or
lcall
xlat
stc
inc
adc
movsl
or
jae
data16
imull
or
xor
mov
aas
andl
lcall
mov
fdivs
push
add
aam
aad
add
ja
xchg
stc
inc
xorl
inc
add
in
pop
or
cmc
je
outsb
popa
dec
test
movnti
jl
dec
ljmp
sub
and
es
inc
insl
jbe
mov
cmp
pop
jne
aas
xor
mov
arpl
mov
push
sbb
jae
add
sub
pop
cmp
push
jp
stc
int
sahf
subl
mov
call
and
test
bound
xor
sub
inc
and
jge
leave
bound
fdivs
int3
mov
or
ja
mulb
pop
lahf
mov
mov
jb
and
cmp
in
jno
sub
lahf
adc
push
inc
push
mov
les
jp
pop
mov
aas
adc
and
cmp
and
popa
adc
mov
lods
mov
push
inc
add
mov
nop
xor
push
push
pushf
xor
mov
xor
jno
pop
out
pop
push
fisubl
xlat
and
cmp
lcall
pop
xor
rcl
aas
pop
int
and
xchg
cwtl
sub
mov
aas
mov
ret
out
pop
sti
adc
into
pusha
je
sbb
arpl
repz
insb
fldln2
mov
and
loopne
insl
xchg
shrb
mov
add
lret
jne
mov
loop
xlat
data16
mov
mov
dec
dec
cltd
dec
popa
mov
push
aas
sahf
mov
or
test
lret
jb
mov
adc
pusha
dec
jecxz
ret
pop
xchg
adc
into
dec
xor
lea
das
inc
dec
fldt
faddl
pop
shlb
xchg
in
insl
xor
and
sbb
inc
dec
inc
call
mov
fnstenv
fnstsw
ss
loopne
mov
rcrl
cltd
add
adc
xchg
xadd
xchg
das
mov
cmpsl
mov
std
test
popa
add
jmp
ret
call
sbb
int3
sbb
pop
xor
fwait
add
jne
iret
insl
jns
aad
ljmp
adc
mov
xor
inc
and
scas
filds
nop
ds
roll
jo
mov
push
jb
dec
xchg
sti
test
cwtl
movsb
fbstp
addr16
rorl
insl
fsubs
mov
jo
shlb
das
lods
xor
fisubrs
jecxz
negb
adc
test
add
and
lret
sbb
dec
movsb
push
outsb
adc
or
cmp
sub
push
in
sbb
mov
cmp
mov
int
jmp
pop
out
rol
inc
stos
push
mov
fiadds
push
and
sub
jb
out
dec
push
aam
mov
dec
pusha
pop
sbb
inc
pop
sub
xchg
dec
clc
in
ret
xor
adc
dec
add
lahf
or
inc
popl
movsb
inc
dec
xchg
jae
lods
rcrl
sub
adc
rolb
scas
inc
mov
cwtl
xchg
inc
dec
xorb
cs
adc
fsts
outsb
aad
orb
stc
or
pop
outsl
call
sub
rcrl
mov
mov
out
push
mov
je
ja
mov
xor
pop
xchg
inc
pop
rcll
and
jl
pop
pop
mov
dec
testl
jle
lea
sub
addps
or
mov
push
and
shlb
fwait
out
sub
adc
int
aaa
shrb
xchg
or
rorb
ljmp
iret
in
push
movsb
aas
cmp
mov
ret
cmc
jbe
in
fdivl
std
aas
iret
lret
cmp
inc
cmp
sbbl
jb
jno
iret
addr16
cmp
jae
sub
insl
sub
mov
mov
stos
pop
inc
jo
adc
or
and
lea
fistpl
or
ljmp
mov
mov
sub
stc
xor
insl
sbb
imul
mov
arpl
repnz
mov
addr16
push
pop
xchg
inc
xor
jae
arpl
ds
dec
sbb
add
mov
cmpsl
imull
dec
pushf
push
lcall
fsubrs
test
push
xchg
clc
mov
shrl
pop
lods
xchg
hlt
sbb
cmp
xchg
sub
in
sar
fwait
cmpsl
jge
mov
inc
cwtl
movsb
enter
test
mov
xor
xchg
pushf
rorl
mov
mov
int
sub
paddw
fstl
insb
xor
push
aad
sub
pop
jle
lods
cwtl
sub
mov
adc
nop
push
stos
xor
xchg
arpl
add
push
in
es
mov
push
xor
xchg
cwtl
sbb
cmpb
pop
inc
pop
je
xchg
bound
mov
ss
popa
rcll
les
sub
mov
in
mov
rclb
pop
sbb
fwait
in
enter
xor
inc
nop
pop
xchg
out
add
mov
fdivrl
sbb
rol
mov
out
cli
dec
cmp
mov
push
pop
outsb
pusha
jbe
outsb
in
cwtl
xor
push
mov
lods
add
gs
jb
int3
sbb
inc
fildll
repz
sbb
js
int
in
call
arpl
cmp
shlb
mov
movsl
dec
fstl
lock
int3
cmp
movlps
push
pop
cmpsl
push
in
sbb
push
test
cmp
and
add
cld
pop
xlat
jmp
cmpsl
cs
xor
mov
sub
push
cld
ss
lea
fwait
dec
xchg
mov
addr16
out
jecxz
repnz
mov
mov
out
push
cmp
rcrl
loop
xchg
jns
push
adc
mov
jl
adc
call
mov
sbb
sub
fidivs
xchg
adcl
mov
in
xchg
adc
cs
pop
dec
pop
mov
inc
push
rorl
into
push
movsl
lds
push
and
loopne
adc
push
or
cmp
push
std
and
aad
add
push
dec
scas
cmpsl
and
lret
add
xor
adc
or
loop
idivb
mov
vandnps
pop
jno
call
cmp
jns
ret
stc
and
loope
jecxz
sbb
lcall
dec
nop
fldl
push
or
mov
aad
cmp
sarb
mov
push
repz
dec
das
iret
movsb
gs
lock
aad
jg
and
ret
psubsw
pop
adc
aas
and
aad
les
imul
in
cmpsl
fsub
call
jle
lock
iret
mov
fcoms
in
cmpsb
ja
scas
fs
das
dec
adc
shrb
movsb
xchg
mov
cli
pop
outsb
das
scas
aaa
ret
mov
enter
test
jecxz
ss
ja
xor
cmpsl
out
sti
and
mov
cli
pop
mov
aad
jge
sbb
js
pop
fs
cs
push
xor
ficomps
ds
gs
mov
hlt
add
aaa
pop
popa
ljmp
mov
push
and
fildll
and
or
cmpsl
out
loop
xlat
ret
add
and
cs
xchg
jnp
pop
push
inc
pop
dec
mov
push
inc
pop
mov
cwtl
mov
pop
push
test
adcb
and
test
sahf
pushf
dec
pop
jno
sti
ficoml
scas
mov
cli
loop
xchg
les
xchg
pop
cs
std
loope
sub
inc
lds
ja
andb
cmp
dec
pop
adc
cmp
mov
mov
lahf
sub
and
loop
insl
sarb
cmpb
cmc
dec
xor
fwait
jbe
push
int3
jecxz
and
movsb
cmp
fisubs
push
jmp
bsr
mov
push
test
adc
sbbl
loopne
gs
cmpsl
push
dec
pushf
inc
inc
jge
xchg
js
jmp
or
xchg
mov
push
ds
int
sub
xchg
push
cmp
pop
lret
int3
mov
cmp
sbb
or
iret
stc
fidivrs
xchg
stos
inc
mov
lea
xor
adc
jne
xchg
lock
or
lret
ljmp
xor
addr16
xchg
or
mov
imul
data16
test
hlt
jb
xor
popf
push
das
sbb
mov
ss
hlt
add
rcl
push
jb
push
sub
iret
cmpsb
mov
mov
cmp
push
add
jno
clc
fwait
and
mov
and
cmpsl
xlat
mov
xchg
push
mov
pop
push
push
mov
incl
push
pop
jp
cmp
int3
xor
jae
adc
ss
rcrb
enter
jmp
ljmp
adc
cmc
faddp
repz
pop
test
xchg
push
push
mov
in
scas
inc
notb
or
add
in
or
dec
pop
adc
add
nop
cmpsl
pusha
push
fwait
aaa
xor
jmp
jb
mov
or
dec
das
mov
lahf
das
sahf
adc
jmp
mov
jp
in
loop
lods
imul
fcompl
inc
push
lea
call
clc
sbb
nop
xor
xlat
pop
or
test
push
insb
clc
add
aaa
popl
arpl
push
rcl
mov
jmp
add
push
mov
loopne
imul
push
jge
push
orb
js
add
or
loopne
fwait
shll
push
jbe
pop
fdivrl
or
cltd
push
fildll
mov
mov
and
pop
sbb
ljmp
mov
rorl
ljmp
lcall
orl
add
clc
aaa
enter
mov
and
je
cmp
jecxz
rorb
and
xchg
cmp
pop
cli
jnp
jo
les
cmpsl
or
gs
nop
fldt
push
dec
out
xlat
mov
and
xchg
xchg
adc
std
cwtl
clc
or
jno
pop
mov
je
sti
push
movsb
orb
lahf
mov
es
gs
fdivr
inc
add
inc
aaa
fwait
push
inc
cmp
mov
dec
cltd
out
pushf
pop
ror
lods
add
add
xor
mov
movsl
ret
lea
int3
dec
pop
and
pop
insb
and
jp
out
jae
adcl
int3
lret
add
dec
jne
push
adc
icebp
nop
dec
out
es
into
outsb
hlt
dec
negl
lea
jo
nop
fldenv
push
xchg
mov
fsubs
jmp
cmc
and
jo
inc
scas
mov
mov
into
sub
jecxz
mov
push
negb
roll
mull
shlb
add
lret
loopne
xor
mov
jp
xorb
sub
cmp
and
icebp
hlt
xchg
sbb
arpl
jg
nop
dec
push
add
or
leave
repz
aam
pop
out
push
push
sub
inc
cmpsl
add
dec
nop
sub
add
mov
cmp
inc
push
icebp
cmpsl
push
lds
enter
pop
lea
loopne
dec
push
mov
daa
sar
pop
cmc
std
push
sub
dec
loopne
or
push
mov
addr16
jne
xor
push
popf
jae
fsubrl
mov
push
std
mov
inc
add
mov
pop
rclb
jno
daa
cmp
pop
aaa
addr16
sarb
icebp
xlat
mov
inc
mov
in
jmp
jnp
and
and
int3
mov
xchg
push
xchg
insl
mov
inc
repz
mov
les
sbb
dec
xchg
push
push
xorl
je
jne
mov
mov
ljmp
inc
or
add
mov
jne
iret
test
fs
divb
mov
mov
xor
sub
bound
xchg
loopne
cli
inc
inc
pop
pop
les
daa
cmp
jg
insb
mov
pop
ja
jecxz
cwtl
dec
xchg
mov
cld
out
inc
jbe
pop
insl
in
and
in
jle
je
insl
movsb
sub
rcl
jp
sbb
mov
out
daa
adc
icebp
and
sbb
fs
push
mov
sbb
outsl
mov
inc
sbb
arpl
jmp
mov
nop
ds
ret
pop
loop
test
xchg
sub
enter
stc
xchg
popf
ss
mov
mov
xor
push
shll
xchg
inc
scas
stos
add
or
xor
lods
in
mov
ret
fisttps
js
idivb
dec
adc
or
dec
push
cmp
jae
fs
stos
adc
mov
adc
mov
js
push
jne
inc
pop
outsb
lock
daa
mov
xor
leave
aaa
lds
push
pop
or
ss
mov
or
pop
jmp
pop
into
mov
fisttpl
xor
jp
leave
jo
sub
bound
and
sbb
ss
xchg
adc
cld
or
pop
ja
push
xchg
xlat
fs
cmc
in
dec
pop
dec
aaa
decb
mov
bound
dec
andl
sbb
push
fucomip
xor
or
inc
pop
or
imulb
add
add
sub
jbe
ljmp
std
lret
dec
iret
loop
cmp
xlat
add
xlat
in
and
shl
pop
sti
nop
ret
dec
rcr
dec
out
inc
lret
and
inc
xor
addr16
cmp
adc
jb
repz
sub
mov
mov
xor
cmp
dec
cmp
outsb
mov
mov
int3
adc
movsb
sub
out
mov
lahf
dec
mov
rclb
xchg
pop
test
sub
adcb
inc
mov
test
sbb
ret
sarb
fldt
dec
into
jo
mov
and
les
clc
dec
add
or
push
insl
cmp
sbb
and
shrl
stos
xchg
and
hlt
mov
xchg
repz
adc
cwtl
or
jle
and
or
popf
xlat
stos
das
add
sub
mov
cmp
shrb
bswap
mov
jmp
repnz
xor
cld
push
mov
xchg
movsl
repz
sub
ret
mov
sbb
jb
dec
adc
outsl
pop
xor
fbld
aaa
sbbl
ret
sbb
ret
cmp
adc
xchg
cmp
mov
lcall
cltd
push
loope
int
test
notb
dec
mov
sbb
or
dec
inc
xchg
add
and
and
aas
xor
jmp
clc
jecxz
xchg
lock
shl
inc
in
dec
je
pop
loope
add
jns
inc
mov
flds
sti
and
cmpsl
push
pop
xlat
mov
lods
pop
jno
aas
rcr
cmc
fildll
js
cli
fsubrl
mov
loopne
inc
popf
popa
cmp
push
inc
dec
and
imulb
movsb
add
push
cmp
fwait
shl
mov
and
and
call
fcompl
aas
push
cmovs
mov
and
xchg
mov
jno
xchg
and
mov
cmc
clc
or
inc
imul
int3
and
sbb
in
inc
push
fistps
mov
xchg
pop
pop
pop
pop
icebp
xchg
push
test
cld
dec
mov
loopne
sbb
lcall
or
ljmp
into
scas
pop
xchg
scas
inc
js
mov
sub
ret
rorb
mov
pop
sbb
aam
mov
cmc
mov
mov
xchg
or
cmp
inc
in
loop
aaa
stos
cmp
enter
in
dec
cmpsb
imul
mov
call
fidivs
adc
pop
decb
push
xchg
mov
add
pop
add
popf
lods
iret
mov
mov
leave
pushf
sub
add
imul
or
lods
mov
movsl
out
leave
push
mov
movsb
pop
dec
test
shrl
scas
mov
xchg
inc
leave
stos
push
lea
dec
pop
testl
push
inc
xor
test
and
dec
jp
popa
jbe
icebp
test
dec
daa
mov
add
and
data16
sub
ret
adc
add
cli
cwtl
and
xor
nop
hlt
and
mov
cmp
les
cmp
es
dec
fidivs
xchg
ret
test
cmpsl
bnd
into
dec
mov
xor
push
xor
jge
ret
push
mov
mov
lcall
repz
rclb
mov
dec
mov
inc
movsb
mov
les
pop
andb
push
cmpsb
push
cld
ja
dec
orl
popa
jecxz
jg
mov
add
mov
jmp
cmp
rorb
jns
dec
cmp
pop
xchg
mov
sbb
jbe
xor
outsb
and
pusha
hlt
inc
mov
cmp
addb
xchg
or
aas
sbb
mov
les
fisubrs
push
push
fisttpl
dec
outsl
outsl
add
imul
inc
es
jg
je
clc
and
and
dec
pop
xchg
imul
repnz
cmp
jg
sar
sbb
addb
or
push
int
scas
mov
mov
add
adc
fmull
add
neg
movsb
movsl
cmpsb
jmp
adc
pop
adc
jecxz
dec
pop
xchg
in
shrb
repnz
ror
aas
add
daa
iret
sub
xchg
cli
fidivrs
fisubrs
inc
es
adc
out
andl
or
cwtl
mov
leave
pop
or
pop
test
cmpsl
mov
aad
imulb
jae
cwtl
sahf
mov
inc
jbe
mov
nop
scas
fldt
push
ljmp
neg
sar
in
cwtl
pushf
orb
adc
sub
pop
out
lret
fisubrs
cs
jmp
les
xchg
mov
or
push
fs
xor
push
mov
push
bound
mov
call
jbe
inc
xor
sub
rcll
leave
push
scas
cwtl
ficompl
gs
aam
divb
and
jne
test
pusha
sbb
ja
imul
adc
les
cmp
icebp
fldcw
mov
js
mov
repz
push
mov
mov
pop
jmp
int3
adc
mov
insl
jle
ret
call
repz
std
in
pop
scas
fcmovne
loopne
sahf
popl
push
mov
push
cs
fwait
jp
cmpsb
cmp
addb
icebp
repnz
cwtl
out
or
mov
les
repnz
call
xor
shrb
jb
add
inc
movsb
and
jecxz
js
mov
test
pop
or
push
dec
ss
sbb
shlb
test
jnp
mov
daa
jo
mov
pop
mov
in
adc
adc
xchg
push
lods
push
dec
out
pop
or
mov
cmp
cmp
add
ljmp
mov
clc
mov
test
sub
cmp
inc
les
loop
push
test
push
icebp
rorl
pop
stos
jnp
push
fisubrs
ds
rolb
rcr
jae
mov
cld
mov
adc
ljmp
clc
jmp
leave
int
mov
or
sbb
pop
popf
push
xchg
mov
and
andb
test
ds
dec
cld
or
mov
cmp
dec
adc
inc
xchg
sbbb
push
add
and
mov
push
xorb
push
xchg
xor
push
fadds
iret
stos
jb
or
and
pop
add
pop
fldenv
dec
imul
push
or
pop
lods
lods
jb
mov
insl
jge
fidivrl
fwait
scas
movsb
test
imul
push
adc
out
sub
push
adc
jge
or
cli
or
xchg
push
repnz
mov
sbb
mov
loopne
mov
lds
dec
mov
and
mov
lods
xor
mov
or
mov
daa
jle
mov
inc
sbb
push
inc
or
mov
and
stc
movsb
jb
or
mov
cmp
pop
xchg
mov
bnd
rcr
push
cld
fistpl
mov
aas
imul
add
out
les
push
inc
mov
les
mov
cmc
mov
and
mov
in
ja
xchg
dec
jge
shll
ja
mov
pop
inc
in
mov
or
pop
fidivl
pop
repz
mov
fistl
cli
pop
adc
lret
xchg
xor
mov
lea
test
pop
iret
les
stc
jae
or
js
movsl
mov
dec
int
mov
ret
mov
mov
fistpll
pop
adc
push
fmull
fstpl
movsb
mov
pop
pop
dec
lods
or
jle
pop
jecxz
cmc
fsts
cmp
aam
test
ljmp
xchg
outsb
xor
pop
xchg
fimull
mov
addb
lock
mov
decl
fstl
xchg
add
mov
fstpl
mov
stos
push
or
pop
inc
cmc
stos
mov
jp
pop
mov
leave
inc
clc
insl
xor
fcmovne
sbb
jno
fs
add
mov
leave
and
inc
cltd
imul
xlat
and
call
lods
fimull
push
int
pop
or
xor
fmulp
and
fstl
and
push
sbb
jecxz
dec
outsb
sub
mov
or
sub
and
mov
sub
xlat
sub
cld
in
or
inc
inc
stos
jae
in
lret
cmp
in
sub
lods
shlb
push
sbb
dec
jecxz
loope
dec
xor
clc
jae
rolb
and
test
lret
nop
pop
mov
ret
dec
mov
mov
sbb
dec
loope
inc
adc
imul
add
push
rorl
push
rcr
test
enter
aam
jp
mov
dec
pop
push
or
fucomip
imul
dec
mov
push
bound
frstor
xor
cmpsb
stos
mov
xchg
sub
bound
fsubs
add
testb
adc
dec
dec
inc
sarb
dec
cmp
pop
ret
outsb
loope
lcall
dec
jne
jne
pop
jp
add
stc
popl
or
push
out
xchg
cmp
das
mov
or
inc
repz
ds
stos
clc
inc
dec
ret
xchg
add
lods
movl
push
xchg
jno
pop
push
jp
add
scas
lret
mov
ret
mov
or
out
andb
addr16
dec
sbb
out
cmpl
mov
sarl
add
adc
rcl
push
js
jecxz
inc
pop
jb
inc
out
mov
or
imul
les
or
jnp
in
sub
mov
add
xchg
xchg
es
xchg
ss
dec
adc
sub
pop
sbb
lock
add
and
or
sti
add
cmpsl
mov
xchg
int3
dec
push
jno
jnp
push
dec
outsb
dec
out
fidivrs
and
xchg
hlt
sub
cli
nop
sub
xchg
jns
aaa
sub
mov
mov
mov
lock
sbb
cmp
xchg
sub
lcall
out
cmpl
mov
cmp
or
push
movsb
out
or
and
movsl
and
in
ss
dec
cmpl
ja
cli
test
and
add
or
popf
je
icebp
pop
incl
mov
lret
pop
ljmp
loopne
mov
xlat
repnz
mov
scas
jo
stos
mov
push
adc
outsb
inc
cmp
push
push
dec
jae
sub
daa
mov
subb
hlt
ret
imul
ror
in
mov
cli
rolb
dec
adc
push
rorb
aaa
jmp
jbe
cmc
lock
jno
ja
add
ljmp
leave
leave
add
and
movsl
ljmp
cmpsl
mov
pop
icebp
add
mov
mov
dec
sahf
dec
sub
xchg
sub
dec
pop
mov
push
movsl
push
jl
push
int3
mov
mov
repz
inc
imul
add
dec
xchg
inc
xor
stos
loop
fldenv
and
out
adc
jle,pt
incl
mov
cwtl
insb
cmp
addl
lock
add
mov
cltd
and
pop
bound
out
dec
jno
stos
dec
testl
fld
mov
fld
mov
into
push
mov
cmp
and
push
xchg
scas
scas
jo
js
fimuls
leave
sub
test
movsl
outsl
clc
sbb
add
out
sbb
push
cmp
imul
mov
sbb
add
push
repnz
js
ds
cmp
add
pop
jp
mov
in
loop
jg
cmc
lea
sahf
jne
in
jb
mov
outsl
test
pop
sarb
test
cmpsb
mov
sbb
pushf
push
les
cmp
mov
dec
in
adc
lock
jp
loope
out
out
mov
fdivl
or
leave
mov
xchg
pop
mov
repz
jbe
push
jecxz
mov
pop
xor
sbb
and
jle
adc
loope
cwtl
dec
sbb
shlb
pop
mov
jno
andl
ds
add
and
subl
adc
test
inc
mov
test
je
adc
outsl
cmpb
je
adc
dec
lahf
pop
cli
lcall
push
sarl
mov
sbb
pop
adc
jno
enter
xchg
dec
mov
mov
int3
adc
shlb
fisttpll
mov
lret
int
jle
hlt
and
xchg
movsl
imul
push
inc
mov
xchg
xchg
mov
nop
mulb
aad
gs
jg
cmp
arpl
incb
loopne
jmp
pushf
je
adc
cld
mov
add
mov
adc
rclb
mov
or
test
sub
rorl
jae
inc
add
mov
mov
rolb
test
jne
push
lods
cwtl
jmp
fisubs
hlt
movl
mov
adc
sbb
mov
lods
shrl
leave
or
add
pop
int3
mov
xchg
fisubrs
inc
cmp
daa
mov
cmpsl
dec
mov
inc
scas
cld
mov
nop
popa
cli
pop
adc
test
pop
sub
daa
pop
ret
pop
clc
and
dec
fs
sahf
push
scas
fimull
insl
mov
stc
cs
sub
inc
je
imul
pop
rorl
or
mov
push
pop
xor
mov
out
ds
rorl
cmp
jmp
int
jmp
xchg
inc
inc
jle
into
insl
mov
cmpsb
mov
outsb
mov
jne
jle
xor
loop
jg
cmp
into
xchg
mov
cmpsb
mov
rcr
jns
xchg
pop
int
leave
inc
pop
add
add
mov
aam
je
shrl
xchg
mov
sub
jbe
ret
pop
add
shl
pop
push
inc
push
ret
sarl
lret
loop
sarb
imul
pusha
negb
push
or
dec
cmc
push
sbb
mov
xchg
dec
gs
push
fdivs
cmp
jmp
sub
es
outsl
sahf
push
add
mov
adc
cmpsb
jno
xor
dec
adc
std
cmp
mov
movb
daa
outsl
incl
scas
imul
mov
arpl
jno
stc
sti
pop
mov
push
fs
shrl
imul
pusha
bound
aaa
or
sub
jecxz
or
jmp
je
cld
data16
rcl
dec
mov
fstl
enter
push
xor
mov
push
pop
push
xchg
test
fldt
outsl
imul
mov
push
fwait
daa
enter
push
or
into
in
cli
and
repnz
ja
jbe
push
pop
add
in
daa
insb
mov
fdiv
mov
stos
movsb
bound
inc
dec
jns
fnstenv
icebp
pop
andb
jno
add
dec
icebp
mov
cmpsl
popa
add
sub
enter
fstpt
push
popf
out
xor
cmp
mov
pushf
pop
pop
or
daa
and
cmpb
das
jo
rcrb
push
mov
pop
xchg
mov
cld
pop
pop
imulb
lock
aam
repnz
pop
mov
push
jno
insb
sub
in
dec
pop
sti
outsb
in
sbb
test
pop
movsl
mov
jl
iret
pop
sahf
jno,pt
test
inc
jle
cmp
mov
pop
aaa
mov
push
jbe
fsubrl
loop
xchg
sub
pop
mov
sub
dec
lock
mov
push
pop
imulb
or
mov
and
hlt
inc
mulb
cltd
fisubrl
push
adc
sbb
in
leave
cwtl
push
loope
popa
mov
repz
int3
jecxz
int
lret
sbb
andb
xor
inc
push
pusha
xor
ret
hlt
jno
stos
lea
and
xor
out
mov
in
and
inc
sbb
dec
jmp
lods
cmp
pop
mov
mov
clc
arpl
dec
jp
dec
loopne
repz
xchg
sbb
inc
lds
inc
pusha
imul
xchg
in
push
repz
loope
mov
inc
sub
lods
pop
push
fistpl
sbb
ja
negb
inc
inc
jmp
out
icebp
jl,pt
fucomi
rcl
int3
mov
xor
in
adc
outsl
cmpsb
or
movsb
loope
inc
loope
icebp
push
push
sti
adc
lock
int
aam
push
test
mov
ljmp
mov
jae
xlat
ffreep
xor
sub
mov
pushf
add
jmp
mov
fsubl
or
in
add
outsl
cli
fidivrl
and
lahf
inc
stos
jbe
icebp
mov
xchg
into
cmpsb
xchg
sbb
lret
pop
in
cs
and
aas
test
popa
push
mov
rorl
lods
das
pop
loop
or
sbbb
push
fwait
mov
push
adc
rorl
sub
pcmpgtb
or
mov
cmp
das
mov
pop
mov
xchg
hlt
sub
jbe
fcoml
out
or
sbb
sub
mov
cmp
inc
leave
out
lahf
xor
jg
rolb
inc
movsb
lock
mov
and
mov
repnz
imul
movsl
sbb
jmp
adc
ret
add
not
mov
adc
ret
dec
sbb
add
xchg
dec
rcrb
or
inc
or
xchg
lret
pop
fwait
adc
or
nop
imul
imul
mov
push
and
xor
mov
jne
push
ret
ja
or
js
mov
mov
and
pop
in
add
dec
fdivs
add
or
xchg
ret
sbb
out
jno
jno
and
lret
or
and
or
fsubp
movsl
arpl
outsl
xorl
test
or
cwtl
shlb
mov
loope
fwait
push
and
push
iret
sub
and
cmc
or
cmp
jne
leave
adc
addr16
mov
jno
sbb
sbb
mov
in
jecxz
enter
mov
mov
sarl
pop
mov
dec
xchg
mov
pop
inc
lcall
test
into
lcall
push
testl
jg
pop
outsb
ret
xor
in
xchg
sub
movsl
xlat
popa
movsl
pop
add
popa
sub
and
adc
rcl
jae
fidivrs
out
fchs
inc
int3
dec
sub
cmp
xchg
outsb
in
mov
rorb
lret
cmp
xchg
insb
mov
cld
jl
loop
sub
add
out
pop
incl
lds
decl
sbb
and
lea
outsl
icebp
mov
call
shll
imul
loopne
imul
int3
inc
outsl
out
ret
test
test
mov
and
imul
jl
or
push
jns
jl
dec
in
les
arpl
mov
fstpl
ds
mov
pop
push
mov
mov
pop
mov
pop
adcb
enter
mov
jmp
lea
jmpw
test
pop
cmpl
inc
clc
mov
push
and
lods
gs
push
xor
test
xor
es
mov
stc
mov
scas
fistpl
pop
out
divb
into
fnsave
scas
pop
std
and
push
insl
add
je
cld
sahf
out
imul
pop
lea
out
or
sub
jmp
data16
mov
inc
sub
out
je
roll
flds
push
out
insl
sahf
cmp
pop
push
pusha
inc
ja
or
bound
nop
xor
cmp
mov
xchg
sysexit
sub
xor
or
fdivl
or
std
push
mov
bnd
ss
xor
jmp
pop
add
mov
out
lcall
testl
mov
mov
and
jbe
loopne
xchg
mov
pop
in
paddq
shlb
push
adc
push
jae
fmulp
imul
cli
lods
aam
lods
sbb
push
je
or
push
sbb
push
outsl
jmp
jo
xor
js
in
dec
or
out
sub
rclb
xor
ljmp
sub
in
jge
mov
das
andb
imul
xchg
in
adc
sti
scas
outsb
fdivr
movsl
scas
sub
jg
cmc
aaa
sbb
in
mov
dec
inc
and
mov
movsl
xorl
fdivrs
data16
dec
in
rorb
leave
mov
test
jns
stos
mov
jge
lods
aaa
adc
or
icebp
imul
and
mov
and
sbb
int
arpl
repz
jecxz
cmp
or
fistps
imul
cltd
pop
pop
inc
leave
nop
push
mov
mov
pop
dec
js
jecxz
rcrb
rclb
cmp
dec
jnp
movb
pop
pop
xchg
xor
push
lods
in
in
inc
shrb
cmpsb
or
aaa
es
push
ss
test
mov
cmpsb
pop
cmp
add
insl
mov
sbbb
push
push
dec
int3
aad
data16
inc
sub
push
push
inc
movl
cltd
dec
jne
push
inc
ds
xor
jnp
xor
jp
inc
mov
inc
mov
fxch
sub
sbb
cmp
int3
faddl
adc
push
addl
mov
pop
pop
inc
fs
mov
adcl
in
mov
push
jle
push
ja
into
lahf
fildl
and
pop
test
mov
pop
cltd
rcl
xchg
test
in
in
mov
sub
les
xchg
test
pop
jns
fdivrs
out
mov
lock
inc
jno
xor
icebp
sbb
mov
sub
inc
mov
movsl
jae
pop
mov
dec
call
cmpsb
pop
cmp
push
std
sub
out
inc
lcall
inc
or
push
add
or
cmp
cmpsl
mov
gs
daa
leave
cwtl
stos
addr16
sahf
scas
cmp
dec
and
fstl
or
data16
mov
sbb
call
xchg
lock
andl
addr16
jnp
lahf
sbb
jp
dec
adc
add
inc
ss
dec
js
aad
cmp
scas
lret
sub
jle
test
dec
hlt
push
aam
mov
dec
and
sahf
rorb
shlb
push
pusha
dec
jno
movsl
imul
cmp
and
js
pop
pop
cmc
lods
lahf
aaa
cli
lret
outsb
mov
mov
cs
std
and
add
mov
rolb
lods
mov
xchg
das
aaa
push
inc
or
xor
sub
jg
out
aad
mov
aas
outsl
jl
pop
stc
pop
insl
sub
or
push
jo
or
pop
adc
ret
cmp
sub
pop
push
jnp
xor
pop
and
cmpsl
jmp
aas
mov
mov
or
shlb
push
fidivs
mov
cmpl
dec
pushf
xor
sbb
out
adc
mov
lods
mov
or
jecxz
ret
dec
sbb
mov
or
and
in
mulps
dec
pop
out
jmp
mov
mov
inc
push
mov
cmp
stos
js
inc
clc
imul
sub
cwtl
stos
clc
jns
mov
pop
mov
es
or
sub
cld
pop
in
push
sbb
dec
pop
jp
daa
xchg
push
lods
paddq
jl
and
cmpsb
scas
push
adcb
filds
or
aad
jo
lret
fndisi(8087
fiaddl
mov
lock
mov
push
push
adc
and
adcb
sub
mov
scas
xlat
rclb
and
cmp
dec
roll
pop
mov
push
cmp
xor
or
loop
jae
jb
sbb
ficomps
movsb
dec
dec
ljmp
cltd
xchg
into
adc
add
lods
jecxz
outsb
leave
sub
push
andl
or
shll
cmp
sbb
les
mov
xor
lea
mov
imul
add
arpl
in
add
mov
jge
in
pop
movsl
pushf
add
movsl
loope
sub
loop
fisttps
cmpsb
icebp
add
icebp
fstps
and
mov
mov
jns
dec
stc
push
fnstenv
push
dec
push
shll
inc
cwtl
cmpsl
les
ficoml
mov
scas
pop
add
gs
jmp
cmp
aad
enter
push
mov
add
insl
fs
ja
xchg
cmp
in
mov
pop
stc
js
adc
push
ficompl
and
cmp
inc
mov
test
xor
clc
lock
movsl
in
enter
lods
sub
push
mov
scas
mov
mov
xlat
add
push
adc
divl
aad
push
sqrtps
icebp
imull
mov
stc
and
pushf
rcr
mov
xor
hlt
mov
adc
sub
jg
add
sub
lret
dec
dec
sbb
sub
or
popa
lahf
xchg
pop
jle
sbb
popf
or
ret
cmp
and
dec
pop
mov
mov
xorb
push
ljmp
stc
add
add
mov
sbb
dec
out
sarl
mov
stos
pop
sahf
xchg
dec
ds
cmp
mov
xorl
inc
pop
gs
dec
insb
mov
mov
xchg
or
or
pop
insl
or
pop
imul
mov
outsb
pop
pop
mov
jnp
inc
lret
sti
or
addr16
in
lret
scas
fsts
js
xchg
cs
test
ret
xorb
cmp
and
out
mov
sub
mov
mov
bound
movsb
mov
ret
add
cmp
pop
cmp
fldl
add
push
or
jp
lds
in
daa
mov
mov
ret
cmpb
xchg
mov
adc
jp
sti
sbb
repz
inc
dec
ljmp
pop
iret
mov
sbb
sbb
je
cs
inc
clc
lahf
xor
fcmove
mov
jnp
jmp
lds
mov
test
imul
test
dec
cmp
pop
fsubrl
into
push
ret
fimull
add
stos
inc
fstpl
call
push
cmp
fucom
divl
test
or
cmp
xor
add
loop
sti
shll
mov
mov
sbb
jg
repnz
shll
outsl
fiaddl
lahf
in
mov
lods
push
jmp
adc
or
pop
sbb
aaa
in
inc
add
mul
xchg
dec
out
mulb
icebp
mov
lods
pop
in
jp
movsb
test
aas
xchg
xor
pop
cmpsl
xor
push
dec
cmpsl
idivl
stos
fbstp
repnz
sub
pop
pushf
push
xchg
daa
cltd
cmp
mov
cmp
inc
sbb
dec
loop
xchg
psrld
xorb
mov
gs
fisttps
mov
cmp
aaa
mov
mov
in
mov
or
inc
cmp
jbe
out
mov
dec
lret
mov
mov
out
sub
cmpsb
outsl
outsb
in
sub
and
jno
test
fdivl
mov
xchg
aam
stos
sub
cltd
testb
add
dec
pop
add
movsl
movsl
mov
loope
lods
mov
cld
lcall
sbb
je
int3
test
push
in
sub
push
daa
xor
test
aaa
xchg
or
mov
dec
jl
cli
sbb
jl
add
jecxz
bound
rorb
in
pop
cld
xchg
xchg
add
leave
push
mov
or
cs
and
fbld
xchg
js
jbe
fbld
xor
cmp
scas
lahf
mov
mov
cmp
sbb
int
xor
or
or
mov
orl
lods
dec
adc
cmp
repnz
or
or
jb
add
call
sti
ljmp
js
sti
jle
stos
pop
movsb
popf
stos
test
repnz
mov
test
lret
adc
mov
lret
push
mov
xchg
mov
les
dec
hlt
aad
shll
outsl
push
outsl
cmc
lcall
xchg
icebp
cmc
mov
xchg
dec
pop
mov
jmp
mov
clc
sub
mov
aaa
addr16
pop
test
sti
data16
pop
xchg
subl
stos
lea
mov
inc
inc
mov
test
sbb
mov
clc
mov
pop
sbb
cmp
or
div
orl
mov
aad
bound
out
dec
lods
mov
mov
sub
mov
mov
mov
jle,pn
lea
push
nop
cmpb
mov
inc
ffree
push
movsb
push
or
repnz
cmp
cmp
pop
jno
stc
cmpsl
mov
pop
sbb
cmpsl
stc
push
pop
jae
movb
out
cli
add
or
pop
jb
cmpsb
xor
pop
push
sub
nop
pusha
ret
loop
cmp
les
fnstsw
jno
out
cwtl
hlt
sub
fcmovbe
lahf
fldcw
or
xor
pop
dec
pop
outsl
repz
adc
pop
jno
out
jle
test
and
and
je
push
data16
xor
cmpsl
sub
sbb
fidivrl
rcrl
mov
fwait
or
call
jb
into
inc
aas
scas
sub
sbb
mov
cld
das
xchg
xor
xchg
adc
aam
mov
jb
push
mov
xchg
test
jp
and
pop
loop
add
es
stos
jge
or
stos
xorb
loope
cltd
push
push
sub
mov
lock
jg
std
mov
subl
fiadds
or
lods
pop
cmpsl
stos
cmp
inc
cld
mov
jne
aad
push
push
xor
mov
scas
mov
jp
mov
sbb
jno
sbb
cmpsl
jecxz
andl
jno
cld
sub
sarb
xor
dec
fildl
test
mov
popf
cwtl
cld
ja
xor
sbb
iret
nop
sbb
dec
lods
mov
movsl
jmp
lods
mov
pop
out
pop
add
fldl
lods
add
nop
stc
sarb
add
xlat
xchg
dec
cmp
test
adc
aaa
or
scas
movsl
jb
loopne
lds
inc
daa
clc
cwtl
sub
mov
pop
testb
and
test
xor
movsb
testl
jl
lahf
mov
push
mov
les
inc
xchg
dec
push
jmp
sub
push
loopne
out
roll
rep
xchg
mov
call
jb
push
and
mov
mov
xor
insb
sar
pop
xor
pop
mov
cs
jae
mov
lret
pop
test
out
mov
in
mov
scas
sbb
imul
sub
adc
dec
push
mov
mov
add
dec
out
popf
std
add
popf
call
out
fstp
out
cmp
cmpsb
int3
repz
push
mov
or
mov
cwtl
loopne
xor
mov
aas
stc
mov
movsl
xchg
inc
es
fsubrl
cs
cmc
push
xor
mov
and
ret
je
js
add
dec
or
mov
push
inc
shlb
call
push
cmc
mov
aam
rclb
sarl
mov
pop
ds
xchg
lods
xor
mov
add
int3
in
repz
js
cli
ret
push
aad
dec
in
or
cmp
and
push
and
lcall
adc
ret
popl
xor
xor
ljmp
xor
xorl
repnz
test
cmpsl
inc
jmp
daa
cmpsl
ss
mov
add
jo
jo
fcoms
cmpsb
cmc
mov
test
push
sbb
add
sbb
mov
mov
mov
sarb
and
in
push
mov
pop
fstpl
add
xlat
mov
sub
sbb
rolb
push
add
shr
sti
fcomp
hlt
dec
lods
push
mov
cmp
or
mov
jb
dec
scas
pop
ljmp
aas
xor
and
sbb
push
xor
inc
scas
shl
aad
jo
std
mov
lock
daa
push
jo
and
cmp
inc
leave
fdivrs
push
cs
call
popa
scas
std
data16
mov
into
xor
push
mov
cld
mov
xchg
loope
jb
rcl
rorb
dec
mov
les
fwait
dec
shr
jae
or
jg
loope
ss
xor
daa
es
jecxz
scas
and
or
jecxz
adc
cmp
push
aad
fiaddl
shl
out
inc
fsub
fcoml
shrl
push
stos
cmpsl
sahf
xor
enter
inc
into
mov
hlt
pop
mov
out
sti
dec
dec
insl
icebp
lcall
mov
push
icebp
mov
or
add
mov
movsb
enter
stos
int
push
fcom
dec
or
sbb
ds
stos
or
jne
mov
sub
pop
mov
jbe
inc
fcoml
add
loopne
shrb
mov
aam
sbb
call
test
push
inc
sub
into
xchg
and
inc
out
push
lea
mov
iret
dec
sbb
and
pop
ret
fcomps
outsb
fsubrp
mov
dec
daa
insb
and
popa
int
cmpsl
out
je
outsb
fs
push
sbb
cmp
cld
or
xor
sbb
mov
inc
call
das
insb
scas
iret
mov
pop
cmpb
and
outsl
popf
sbb
sub
test
inc
pop
and
xchg
sahf
push
add
jnp
vrsqrtps
pop
xchg
xchg
into
or
pop
divl
and
mov
mov
xchg
out
insb
push
cmc
inc
adc
inc
call
xchg
mov
push
push
std
jb
mov
mov
stos
push
pop
mov
loopne
push
mov
adc
dec
cmp
pop
xchg
add
cltd
cmp
test
stos
add
mov
js
push
jbe
and
push
scas
push
or
jo
jne
sub
xlat
cmp
jbe
inc
push
clc
mov
or
sbb
dec
popa
inc
das
jno
popa
xor
loopne
add
lea
cmpsb
clc
fwait
lret
xchg
test
stos
arpl
fstpl
cmp
popa
xchg
xor
scas
test
das
xchg
fidivs
int
jns
or
in
rcr
shrb
mov
dec
push
sub
push
ljmp
sub
or
daa
int3
popf
test
or
ja
cwtl
and
ror
cmpsb
mov
out
mov
and
imul
fidivrs
ss
aam
stc
aas
fstpl
mov
jmp
popa
sarb
shl
xor
nop
push
je
dec
ds
cmp
stos
fdiv
popf
rcrl
iret
mov
lods
int3
shrl
enter
and
cmpl
adc
out
xlat
lcall
pop
sub
add
lea
fwait
sti
mov
add
add
sahf
adc
aad
cmp
xchg
adc
dec
mov
mov
test
push
sbb
fwait
push
sbb
iret
dec
test
rcrl
popf
orb
repz
jle
stos
jmp
sbb
pop
aad
loopne
js
pushf
jmp
mov
pushf
pushf
lcall
and
sbb
adcl
sub
sub
dec
mov
cmp
pop
mov
add
mov
in
pop
xchg
or
enter
cmpsb
inc
daa
rol
sub
cmp
pop
or
call
repnz
call
sub
inc
fisubrl
lea
imul
jo
stc
sarl
mov
aas
push
cld
and
cld
icebp
lret
or
push
daa
push
xchg
scas
jnp
cmp
pop
mov
mov
repz
mov
nop
dec
pop
push
cmp
in
jns
and
movsb
adc
xchg
out
cltd
mov
sub
pop
ret
and
lods
je
dec
dec
sti
stos
test
cmpsl
dec
pop
icebp
jno
jg
push
or
mov
incb
adc
enter
cmp
mov
popa
mov
out
push
push
fs
adc
dec
mov
arpl
test
mov
add
cli
lahf
pop
dec
mull
dec
sub
jle
xchg
stc
cs
icebp
cltd
in
adc
scas
out
push
dec
leave
or
movsl
sub
rcll
sbb
and
pop
movsl
inc
or
xchg
andb
sub
loopne
sbb
stos
inc
insl
enter
mov
push
sbb
and
mov
fidivs
dec
pop
fistpll
rorl
sub
ds
add
das
jecxz
pushf
push
insl
jp
cmc
xchg
adc
adc
clc
into
push
cmc
inc
pop
rclb
movsb
mov
pop
fdivrs
jg
cmpsb
pop
add
jmp
aaa
out
inc
stos
popf
xchg
jnp
lahf
iret
arpl
jge
movsb
sarb
jmp
inc
mov
sub
xchg
out
pusha
add
daa
add
lret
adc
aam
divb
fabs
push
out
in
sbbb
outsl
popa
cmp
pmaxub
dec
inc
adc
inc
cmovp
js
inc
cli
icebp
sbb
and
mov
mov
adc
jbe
push
jle
dec
push
and
aaa
scas
or
or
add
xchg
imul
aas
or
fwait
out
sarl
adc
inc
gs
inc
in
ret
inc
jg
pop
rcrb
adc
in
repz
mov
fs
cmpsb
lret
test
loopne
lock
aaa
push
and
fists
cmpsl
inc
gs
inc
add
dec
subb
add
pop
push
xor
adc
nop
sbb
imul
in
dec
int3
adc
mov
ja
jno
jp
and
loope
loope
lret
jl
push
mov
icebp
cmp
pop
mov
dec
and
je
fsub
leave
clc
cwtl
data16
mov
aam
fnstsw
icebp
icebp
inc
pop
pop
aad
push
dec
sbb
cmc
jo
dec
or
pop
xor
ret
loop
sub
jecxz
pop
fwait
xchg
out
jae
inc
sbb
leave
xor
mov
aas
jmp
adc
xchg
add
inc
inc
pusha
pop
pushf
adc
scas
xchg
cmpsb
mov
je
lds
xchg
mov
adc
dec
dec
jne
movsl
mov
insl
push
xchg
add
aas
pop
cwtl
std
jae
push
idivl
jle
movsb
hlt
clc
cmp
sub
cmc
pusha
inc
mov
cli
jmp
jmp
xchg
xor
mov
cmpsl
add
jecxz
xor
lock
pop
fmull
or
dec
sbb
loopne
lahf
fwait
mov
hlt
fdivl
jb
popf
lock
mov
mov
xchg
mov
test
push
ret
push
inc
mov
or
pop
in
pop
adc
cli
daa
cwtl
fwait
cmpsb
add
and
push
sub
jb
mov
int3
out
and
mov
mov
insb
das
out
cli
in
test
into
xchg
inc
lea
lods
bound
clc
popa
mov
add
xchg
dec
sbb
pop
push
stos
lock
dec
jae
or
push
lea
inc
imul
mov
repnz
dec
cmp
or
xchg
mov
flds
outsb
lods
inc
rcrb
inc
and
lods
outsb
into
cli
mov
cmp
jp
mov
outsl
jne
notl
adcl
inc
xchg
outsl
mov
fistpl
fadds
shl
or
xchg
data16
dec
dec
sbb
jl
sahf
jnp
setp
iret
inc
enter
pop
cmpsb
cmp
addr16
ss
outsl
jne
mov
fcom
movsl
mov
cmp
xor
and
cmp
and
jmp
mov
or
psubd
fucom
out
push
adc
dec
icebp
lret
into
jb
mov
out
sbb
pop
stos
push
adc
shlb
insb
outsb
pop
push
shll
mov
lock
out
in
jecxz
movsl
dec
test
dec
inc
pop
and
pop
pop
loopne
jb
jmp
jae
leave
aaa
mov
mov
out
and
pop
mov
or
insl
ds
cmp
adc
and
mov
bound
data16
movsl
movsb
les
addr16
sub
imull
movsl
lods
out
cld
mov
xor
out
mov
outsb
adc
pop
insb
mov
loope
xchg
orps
aad
jp
add
cmpsb
pop
sbb
sub
jecxz
or
pop
lods
adc
xchg
dec
lea
mov
test
cmpsl
lds
aaa
mov
gs
xchg
loop
aad
ja
outsb
clc
cmpsb
inc
adc
scas
pop
in
pop
mov
ret
fcomps
mov
addr16
out
hlt
mov
push
ficompl
sub
dec
mov
imul
inc
out
or
mov
pop
sti
xchg
mov
popa
shll
hlt
jb
out
cmc
jecxz
inc
jb
fst
out
add
and
adc
enter
pop
lret
dec
lret
add
mov
mov
popf
pop
jno
and
int3
sbb
je
ljmp
dec
or
insb
stos
mov
sarl
fcomps
nop
cltd
xchg
or
pop
inc
pop
push
ret
in
mov
aaa
pop
fs
test
ljmp
test
sbbl
repz
jg
jl
lret
jmp
or
popf
inc
pushf
in
jae
push
std
or
in
adc
cmp
repz
subl
das
mov
mov
fs
inc
incb
out
scas
lock
sub
push
outsl
mov
dec
and
movsl
mov
stos
js
xchg
repnz
test
or
das
jmp
ret
push
lods
out
jbe
add
das
jnp
mov
ja
jl
dec
push
incb
mov
stos
push
add
pop
mov
mov
jle
sbb
loopne
push
push
xlat
mov
xor
inc
fcoms
xchg
mov
jno
enter
rcll
fwait
inc
aad
xchg
or
pop
jno
es
xchg
loop
mov
test
and
xor
push
aas
cs
push
adc
push
shl
jle
xchg
inc
test
sbb
cmp
cmp
dec
mov
shrl
mov
call
xor
cmp
call
es
jno
in
pop
test
or
ds
jmp
clc
sarl
mov
push
pop
jle
inc
xchg
push
xchg
loopne
or
cmpl
sbb
pop
pop
cmc
xchg
lods
outsl
je
sti
dec
lea
xchg
in
pop
test
nop
out
adc
lahf
lcall
rcll
add
fwait
jge
imul
iret
or
pop
imul
jb
mov
push
xchg
addr16
bnd
or
sbb
ret
outsb
int
fld
cwtl
mov
jbe
pop
sbb
xchg
mov
pop
in
sbb
push
mov
sub
daa
ret
mov
fwait
jmp
cmp
stos
mov
mov
mov
xor
xor
not
jg
sbb
sbb
sub
pop
xchg
ljmp
negl
aad
lock
lcall
cmp
add
sub
cltd
andb
push
imul
loopne
out
push
jae
sbb
xor
mov
push
int3
dec
imul
shlb
ss
dec
push
repz
flds
add
adc
sub
stos
cli
sti
stos
daa
mov
fs
out
int3
dec
loop
pop
pop
loop
or
adc
lcall
adc
test
sbb
and
outsl
adc
sub
xchg
mov
cmc
cli
push
lcall
pop
or
loopne
jo
lock
mov
cmp
loop
lea
and
std
pop
cmp
pop
mov
adc
cmpsl
fsubrl
shrl
and
add
sahf
int
sub
insb
into
shlb
mov
xchg
pushf
sub
stos
imul
addl
and
icebp
in
mov
das
pop
jae
mov
xchg
inc
push
out
and
cmpsl
inc
or
loop
lds
inc
adc
outsb
test
xchg
jns
mov
sbb
cltd
pop
xchg
push
adc
push
inc
xor
push
rolb
div
cmpsl
pop
mov
mov
sti
movsb
jno
in
iret
mov
xor
movsl
outsl
fidivl
test
push
shll
cltd
imul
jbe
ror
xchg
inc
cmp
pop
arpl
ljmp
es
adc
and
outsl
test
xchg
inc
sti
ss
cmp
pusha
ret
and
xchg
jno
push
test
cmc
cmpsb
pop
and
nop
call
jp
mov
mov
jg
push
xchg
cmp
shr
push
aaa
push
xorl
je
popa
in
pop
mov
shl
roll
jmp
or
add
dec
pop
sub
fprem1
repz
sbb
xor
jnp
aam
dec
mov
arpl
fs
sub
std
sti
pop
aas
sarl
les
add
jmp
jle
add
mov
lods
ljmp
fisubrs
pop
or
sbb
stos
scas
lock
dec
mov
mov
in
popf
mov
xor
cmp
jge
dec
xchg
fwait
subl
mov
test
stos
mov
mov
test
in
shl
push
push
xchg
push
adc
jg
lcall
jle
lds
xchg
gs
ret
mov
mov
dec
inc
push
jmp
notb
lret
jb
mov
jmp
repz
mov
js
dec
sbb
and
popa
adc
xchg
add
sbbl
jbe
dec
clc
dec
xchg
mov
lret
bound
pop
sbb
mov
sub
ljmp
setno
imul
xor
mov
out
test
ficomps
mov
outsl
loopne
push
push
in
shlb
call
mov
shlb
xchg
mov
add
pop
xchg
in
shlb
inc
xlat
test
jg
jae
loope
outsb
mov
mov
fwait
or
stc
cwtl
mov
jne
dec
scas
fisttps
movsl
jae
mov
dec
cmpsb
inc
in
cs
mov
subl
aad
jg
test
add
fcoml
cwtl
jmp
or
xlat
notb
mov
dec
cmp
enter
and
popa
jb
outsl
inc
add
jg
ds
or
mov
mov
mov
subb
lret
sbb
call
sarl
xor
cwtl
scas
and
xchg
cmp
nop
insl
arpl
mov
sbbl
daa
mov
xor
mov
cwtl
loopne
push
dec
out
mov
xor
and
mov
push
push
orb
fildll
bnd
sbb
mov
mov
aad
jle
outsb
cmp
cmp
outsl
jo
or
orl
shll
inc
sti
adc
repnz
or
lret
mov
dec
leave
jo
xchg
jmp
aaa
add
imulb
jne
xchg
mov
or
mov
jle
adc
dec
jnp
sub
cmpsb
adc
lret
push
push
xchg
push
xor
mov
jg
fcoml
mov
mov
fsts
pop
repnz
scas
stos
pop
sub
push
popl
daa
or
or
sub
int3
mov
je
imul
jl
call
shrb
mov
sub
shll
ret
lock
xchg
and
add
or
std
sub
fwait
jae
scas
pop
dec
pushf
mov
insb
popf
xchg
sbb
add
popa
pushf
xlat
xchg
cmpl
das
and
xchg
cmp
xor
out
mov
dec
jge
sub
mov
shl
xlat
xchg
mov
arpl
pop
and
xchg
cmp
jns
lods
int3
test
push
mov
push
lahf
into
and
pushf
js
ljmp
cmpsl
adc
out
outsl
dec
outsb
int
ss
in
adc
sbb
and
xor
mov
mov
pusha
repz
add
arpl
pop
fists
xorb
pop
add
sub
incb
jae
cmc
pushf
shl
mov
out
adc
sti
mov
push
out
dec
int3
dec
jmp
mov
cs
mov
test
jbe
daa
xor
mov
adc
sub
xchg
add
and
sbbl
add
xor
add
xor
mov
mov
xchg
fs
xchg
pop
pop
dec
dec
push
mov
lahf
xorb
inc
inc
jge
enter
repnz
stos
mov
cli
daa
movsl
inc
jecxz
dec
shrl
in
stc
sub
sbbb
subb
movsb
gs
mov
les
xor
in
outsb
mov
and
mov
pop
cmp
push
or
sub
and
and
mov
xchg
stc
stos
xor
rcrb
sbb
sbb
in
xchg
das
and
das
test
out
sbb
testl
adcl
adc
and
movsb
sbb
out
pop
pop
sti
lods
movl
pop
fists
mov
pushf
lods
jbe
call
call
dec
cmpsl
mov
xor
pop
out
repz
test
ljmp
push
inc
in
pop
sbb
test
lock
xchg
aaa
lret
sub
test
xor
mov
sbb
out
lret
pushf
nop
mov
cmp
ss
or
addr16
bndldx
lods
push
push
push
fidivl
fsubp
mov
faddl
in
mov
rcrb
jge
fadds
repnz
outsb
xor
imul
int3
leave
nop
cmp
loopne
and
ret
mov
adc
ljmp
or
jle
mov
bound
mov
enter
adcl
ljmp
sbb
push
pop
sbb
iret
push
xchg
mov
mov
out
cwtl
jecxz
lock
daa
push
hlt
lods
pop
push
or
dec
daa
dec
add
jmp
adc
lahf
sbb
je,pt
repnz
imul
sub
aaa
mov
divb
call
clc
add
pop
pop
sahf
fwait
jge
repnz
addb
mov
cmpsb
push
leave
out
movsl
fnstsw
mov
mov
lahf
rclb
dec
cmpb
dec
pushl
scas
test
adc
mov
mov
cwtl
adc
add
loope
cmp
cwtl
mov
or
push
fisubrs
negb
push
push
aam
cmc
aam
imul
and
stos
sbb
cmp
repz
or
popa
mov
xchg
dec
call
sbbl
imul
inc
outsl
add
lods
clc
daa
imull
mov
mulb
xor
dec
cli
rcll
xor
cwtl
das
xor
mov
adc
inc
cwtl
xor
jl
mov
push
dec
pop
popf
les
ss
and
mov
xchg
loopne
sarb
push
inc
sbb
dec
inc
out
and
fcmovu
dec
testb
bnd
push
xchg
adc
and
jae
mov
or
mov
jmp
data16
ds
push
xorb
jbe
jp
imul
js
add
jecxz
test
cmp
mov
pop
daa
pop
cmp
test
int3
js
push
push
cmpsl
jb
sbb
xchg
cmp
dec
xor
adc
and
mov
mov
add
and
aaa
shl
mov
dec
mov
mov
cli
mov
jno
shlb
xor
pop
loop
xchg
lea
shrl
xchg
xor
jb
or
or
xchg
cli
and
cmpl
adc
pop
adc
loopne
push
or
stc
loopne
scas
inc
jg
ret
out
xor
mov
or
sub
lret
mov
arpl
out
sub
sbb
mov
or
xorl
xor
dec
jg
mov
pop
pop
fisttpl
adc
adc
add
xchg
js
adc
mov
dec
and
sbb
adc
sti
jnp
and
rep
fnstcw
adc
test
repnz
out
sbb
lods
xchg
xchg
mov
mov
iret
mov
push
inc
mov
lods
fs
cmp
ja
out
mov
xchg
cmpsl
jg
scas
shrl
int3
xchg
push
mov
xchg
jle
subb
das
clc
sahf
xchg
ja
sbb
mov
lret
dec
stos
jmp
addb
cltd
stos
pop
repnz
mov
cld
fdivrl
popf
xor
adc
xchg
and
in
in
cmp
pop
popf
in
ja
mov
inc
and
shlb
xor
adc
mov
sarl
mov
jb
dec
data16
fwait
ss
lods
out
pop
lods
loopne
xchg
out
push
insb
cltd
or
xlat
mov
jnp
cmp
outsb
inc
aaa
and
out
pop
aaa
in
sub
xor
or
dec
push
xchg
mov
outsb
pop
add
cmp
jle
mov
test
mov
jecxz
lds
outsb
cmp
lret
dec
imul
mov
cmpsl
push
dec
jns
shll
int3
ljmp
cmc
xchg
fxch
xor
cwtl
ljmp
bound
xchg
mov
push
sbb
pop
out
shlb
and
std
jo
jg
add
push
mov
std
in
rcrb
lahf
xchg
subb
clc
mov
jbe
dec
in
out
filds
mov
mov
xchg
mov
inc
adc
sbb
push
test
mov
push
outsb
pop
sub
dec
cmp
pop
scas
mov
jns
fwait
sbb
lods
mov
mov
fcoml
inc
lret
mov
jmp
adc
loopne
test
flds
ret
mov
sbb
int3
aas
jns
outsb
cmp
arpl
sbb
mov
js
lods
faddl
iret
aaa
add
int3
jmp
shl
sti
ss
mov
and
add
loop
pop
sub
in
stc
xchg
ss
cwtl
mov
sbb
sub
adc
fwait
and
outsl
test
scas
pop
adc
cs
hlt
mov
icebp
add
jle
xchg
icebp
jne
int3
inc
add
pop
add
dec
jae
out
jle
and
aaa
lret
or
sub
lret
mov
scas
filds
pop
lea
popf
enter
cmpsb
push
js
xchg
pop
dec
inc
in
test
fdivs
inc
fldcw
push
dec
daa
mov
mov
and
int3
jae
add
nop
and
adc
and
mov
jp
and
loopne
or
xchg
scas
cld
sub
bound
cmp
inc
jae
dec
sahf
mov
fidivrs
add
lds
fmuls
sub
or
xrelease
andl
xor
icebp
or
add
mov
and
mov
sti
popa
in
inc
mov
js
cwtl
ficomps
nop
dec
cmp
cs
add
xchg
push
jl
mov
icebp
cmp
inc
jbe
or
out
mov
sbb
mov
nop
push
es
scas
pop
pop
xchg
push
aam
add
fidivrs
sub
mov
push
pop
push
and
xor
or
mov
push
adcb
std
fs
xchg
cmp
stos
out
lcall
cmp
pop
lea
push
push
mov
jmp
sbb
cmp
inc
divb
jle
inc
push
adc
lahf
mov
xor
cmp
ds
cmpsb
scas
div
aad
cmpsb
dec
jg
inc
into
xchg
aad
test
cmp
movsb
ds
xchg
xchg
das
pop
or
cmp
sahf
leave
xchg
inc
enter
filds
ss
cltd
and
hlt
xchg
repz
sbb
xor
mulb
sub
mov
push
mov
mov
addr16
movsl
add
mov
cmp
cmp
in
mov
cmpsb
imul
rorb
leave
les
insb
mov
mov
or
lods
daa
push
scas
ja
test
adc
xor
call
fmuls
stos
inc
insb
cmp
add
xor
punpckldq
dec
push
das
and
cmpsb
push
fsubr
adc
loope
lods
dec
mov
jo
inc
xor
push
daa
insl
into
mov
pop
jne
in
push
icebp
cmp
xor
dec
shr
mov
jmp
mov
push
cltd
xorl
adc
das
imul
xchg
or
jb
dec
xchg
je
popa
add
rep
push
leave
imul
movl
pushf
mov
les
neg
fsts
mov
push
ds
and
mov
xorl
inc
leave
push
sbb
out
or
inc
out
movsb
jecxz
sti
movsl
push
or
in
scas
cmpsb
cmpsl
jmp
pop
sbb
mov
inc
lds
mov
pop
das
movsl
pop
nop
mov
mov
pop
movsb
out
dec
mov
mov
xchg
fsubr
arpl
in
jno
shrb
loope
ljmp
aam
mov
js
iret
loopne
push
adc
out
js
jns
jne
loopne
ss
dec
or
loopne
mov
call
fldl
stos
pop
cmpl
push
pushf
mov
push
rcl
cwtl
flds
insl
out
out
movsl
lock
int
jnp
repz
lea
sub
es
mov
js
mov
lcall
pslld
rorl
fs
inc
ja
add
rorb
call
jg
clc
arpl
rolb
in
lea
sahf
dec
add
push
imul
pop
int
test
pop
leave
hlt
icebp
push
popf
push
clc
in
mov
call
xorl
lcall
sbb
push
mov
inc
mov
jno
int3
xor
movsb
inc
test
enter
pop
in
sub
mov
mov
xchg
mov
mov
aad
adc
xorl
bound
mov
mov
xor
movsl
sub
loope
lock
les
sub
stos
mov
rcl
mov
xchg
inc
mov
adc
test
gs
and
flds
movsl
fxch
adc
int3
xor
and
cmpb
xchg
inc
lods
adc
or
mov
iret
clc
mov
dec
jno
pushf
push
insl
xlat
test
push
adc
sub
insl
daa
add
test
insb
pop
mov
aad
dec
insl
aaa
xchg
xchg
repnz
lock
cmc
in
out
sbb
sub
stc
jbe
repz
and
cs
jge
xchg
pop
inc
and
mov
pop
stos
push
sbb
repz
push
pop
xchg
cmp
push
rcrl
insl
pop
dec
out
sub
xchg
mov
enter
test
inc
cli
repz
lahf
xchg
add
stos
inc
sub
dec
cmp
add
lods
jnp
cwtl
dec
aas
cmp
les
ljmp
mov
fmul
push
idivl
filds
push
stos
ret
es
xor
jl
inc
mov
cld
or
vdivss
dec
mov
pop
jmp
xlat
cld
dec
flds
jle
nop
adc
pop
test
dec
out
jp
mov
or
leave
lock
ljmp
xor
cmp
or
jle
fldcw
push
dec
je
push
ljmp
push
push
sbb
mov
cwtl
sbb
pop
lret
std
mov
addr16
or
int
cmp
loop
imul
pop
cmp
xorl
in
cwtl
andl
jl
hlt
into
ror
cmp
repz
cmp
cmp
mov
and
enter
jl
out
out
in
in
shlb
lods
jb
cmp
pop
xor
xlat
push
sarb
pop
lcall
lret
pop
pushf
jnp
ljmp
cmp
add
aam
iret
adc
lret
push
xchg
cmp
xchg
ja
and
jns
adc
test
fidivl
inc
sbb
int
jmp
outsl
and
mov
insl
sub
rcrl
addl
imul
xchg
shlb
fisubrs
je
lcall
lds
or
jb
jns
ds
cmp
jl
rclb
cmp
addr16
test
repz
data16
jmp
mov
jbe
jge
push
mov
add
cmp
cwtl
outsb
push
insb
push
das
adc
fnstcw
int3
cltd
pushf
jmp
test
clc
mov
jae
push
repz
shrb
pop
mov
fistpl
leave
fdivs
or
lods
mov
out
insl
repnz
retw
mov
and
lret
outsb
sahf
fnsave
lcall
add
loop
xor
xchg
aas
sub
cmp
aam
or
lods
push
xor
mov
pop
pop
and
pop
fucomi
add
and
or
sub
mov
adc
les
jmp
adc
push
icebp
jle
loopne
push
mov
inc
push
sub
js
and
or
addr16
jns
fistpl
inc
mov
xchg
mov
push
push
fstps
repz
dec
push
push
lods
lea
xchg
gs
push
inc
test
mov
cld
cmpsl
jle
jae
hlt
sub
push
divb
adc
ret
mov
mov
test
or
fstpl
sbbb
cmp
cmc
xchg
xor
mov
out
push
je
scas
fs
or
les
mov
cli
xchg
mov
sub
ja
dec
pop
cmp
arpl
cmp
or
cmp
into
pop
pushl
xor
and
clc
xor
enter
mov
xor
inc
push
mov
nop
push
add
adc
mov
mov
test
into
mov
sub
insl
inc
faddl
cmpsl
movsl
mov
adc
adc
add
mov
add
xchg
std
nop
adc
mov
sahf
jae
outsl
or
jb
in
clc
or
xchg
lds
fnstenv
xlat
xchg
cli
push
pop
fwait
lahf
add
int3
sti
pop
or
loopne,pt
sub
and
movsl
mov
inc
fimull
fists
mov
cmp
sarl
ja
roll
cmp
insb
xchg
mov
lcall
mov
push
jl
mov
dec
mov
ret
mov
adc
pop
pusha
hlt
das
call
sub
xchg
mov
sub
sbb
mov
xchg
aaa
roll
adc
leave
sub
and
mov
adc
pop
scas
movsb
imul
loopne
pop
and
push
std
xor
jge
sbb
mov
cmpsb
jecxz
mov
std
add
sub
jmp
cmc
cwtl
aam
loop
jb
push
rorb
jmp
test
nop
ret
enter
lret
daa
not
push
pusha
push
cli
dec
push
jp
sub
push
ret
insl
repz
adc
push
push
shl
inc
mov
push
pushf
int
dec
and
mov
pop
pusha
mov
and
fidivs
fidivrl
add
push
xor
rorl
mov
dec
in
dec
iret
icebp
pop
mov
xor
popf
cmpsl
das
mov
rorb
xor
cmp
cmp
daa
xlat
push
jle
xor
mov
sub
cmpsb
out
xor
or
cmp
ljmp
cmp
pop
xchg
jge
jne
mov
mov
repz
mov
leave
outsb
out
mov
push
dec
test
movsb
cwtl
pop
push
add
jnp
rcrl
xor
leave
fs
or
xchg
scas
dec
jecxz
push
sbbb
mov
inc
adc
ficoms
add
mov
inc
jl
fimull
add
in
out
dec
ret
push
ret
sbb
mov
pop
fs
mov
sub
cs
fnstenv
fwait
push
popf
mov
sub
cmpsb
inc
sbb
and
cs
push
cmp
push
xor
adc
test
in
sbb
push
xor
and
repnz
fucomp
xchg
dec
pop
dec
es
test
cmp
icebp
pop
pop
clc
scas
xchg
cwtl
inc
jo
mov
jle
insl
and
cmpl
rorb
rcrb
add
pushf
add
ret
movsb
adc
stc
shr
es
scas
cmp
lock
xor
push
adc
inc
dec
stc
shrl
pop
push
fbld
sbb
es
mov
push
aad
gs
enter
xchg
icebp
or
sub
int
and
ret
pop
cvtdq2ps
lcall
pop
jp
mov
outsb
cmp
fadds
xchg
dec
jge
add
pop
rorl
mov
dec
scas
scas
jg
cmp
dec
loopne
and
repz
popa
and
xchg
adc
bndstx
xchg
ret
mov
mov
shlb
pop
mov
imul
ror
jp
mov
pop
xor
fucom
xchg
jb
mov
enter
cmc
popa
or
xor
fmuls
outsb
xchg
cli
xchg
in
fdivp
inc
subl
add
add
data16
jb
test
in
int3
test
pusha
push
mov
and
ds
sbb
out
sbbl
lahf
int3
xchg
aaa
popf
pop
out
pop
cli
add
mov
aad
sub
jecxz
or
cmpsl
pop
into
jge
gs
push
inc
push
dec
inc
adc
dec
pusha
adc
mov
ret
outsb
and
aad
push
dec
pop
ret
adc
daa
pop
mov
lahf
test
scas
and
adc
jno
stos
mov
pop
pusha
jge
clc
jge
dec
lock
inc
push
mov
lcall
or
push
mov
mov
xlat
cs
pushf
and
sti
sub
add
adc
stc
mov
cmp
cmpsl
sbb
push
xchg
inc
hlt
sbb
cmpsl
shrb
and
bound
mov
xchg
sub
imul
sub
fs
xlat
ds
push
inc
test
mov
and
jne
add
out
push
mov
loopne
jne
pop
pop
xchg
popa
andl
test
clc
lahf
mov
insl
dec
adcl
iret
insl
xor
xor
and
lret
jbe
call
push
lret
jecxz
pusha
repz
in
sbb
js
jb
pop
adc
stos
pop
aaa
je
adc
aas
mov
arpl
mov
pop
lods
mov
push
pop
iret
bound
cmp
jb
pop
cmc
mov
rolb
push
jle
mov
cmc
daa
cs
decl
mov
movsl
ret
or
or
jno
iret
xor
loopne
xchg
popa
adc
sbb
pop
push
pop
xor
pop
lea
decl
cld
push
dec
adc
fcmovb
and
loop
filds
mov
ret
adc
xor
incl
cs
leave
pop
push
js
lret
pop
inc
gs
fxtract
mov
cmc
pop
loop
xchg
mov
popa
sub
in
or
xor
mov
pop
ss
shll
scas
cmc
push
call
into
pop
ret
fxch
ffree
int3
dec
xchg
shlb
inc
rcr
xlat
aam
nop
jmp
push
call
cltd
mov
lods
nop
ffree
loopne
sub
mov
lock
out
ja,pn
addr16
das
jns
sub
test
cmpsb
imulb
daa
je
cmp
add
sbb
and
ss
les
mov
add
cld
int
addr16
mov
xor
cld
add
pusha
adc
or
add
sub
add
out
outsb
popf
ds
ds
mov
push
adc
or
loop
hlt
dec
inc
rorl
or
cmp
test
mov
cmpsl
mov
iret
stos
arpl
dec
sbb
std
cs
jecxz
adc
cmpsl
mov
jle
das
jnp
push
mov
add
lea
fcmovnb
pop
fs
stos
and
icebp
lahf
iret
ds
test
nop
jge
jo
roll
data16
lds
xchg
mov
mov
jne
or
and
mov
jno
jb
fistpl
jo
adc
jmp
pop
or
jg
insb
adc
pop
jl
in
or
xlat
call
aas
push
mov
aaa
jb
mov
addr16
xchg
cltd
cmpsb
ljmp
or
xchg
xor
lahf
mov
xchg
idivl
mov
inc
das
scas
sub
das
pop
cli
movaps
bound
mov
xor
sbb
addr16
outsb
cmp
mov
jno
nop
pop
icebp
hlt
mov
into
aaa
sbb
imul
push
xchg
lods
lcall
mov
popl
into
jnp
or
mov
aas
je
or
or
mov
out
shrl
dec
mov
or
in
stc
movsb
push
mov
add
sarl
je
jb
ffree
adc
into
adc
push
adcb
lods
push
outsl
sarb
mov
jns
aas
jmpw
lds
test
addr16
bswap
xor
dec
add
pop
insb
or
loopne
out
les
pop
movsb
fmuls
inc
xor
mov
jp
mov
push
and
xlat
fdivrl
and
push
lods
sbb
nop
sbb
sti
cmp
xor
mov
or
imul
pop
push
inc
incl
inc
and
jo
incl
dec
insl
dec
lods
aam
movsb
popa
sub
pushf
outsb
mov
icebp
cwtl
sti
daa
enter
pop
jle
adc
addl
icebp
inc
pop
fdivl
add
inc
cmc
insl
fists
sbb
and
mov
outsl
imull
mov
mov
and
lock
fistpl
cmpsb
dec
sti
outsb
movsl
sbbl
mov
push
cli
arpl
sub
xchg
mov
loope
push
mov
pop
mov
decl
pop
testb
fstpt
xor
sbbb
jmp
xor
imull
clc
enter
inc
sbb
outsl
sbb
popa
pop
mov
adc
jg
xchg
cmp
xchg
add
add
and
in
xor
mov
lcall
add
dec
mov
inc
jae
jg
add
ja
test
pop
into
adc
jmp
imul
and
dec
cmpsb
repnz
fistpll
mov
inc
add
loop
out
xchg
gs
roll
jg
aad
jbe
fs
call
mov
xchg
lock
movsb
mov
or
daa
out
pop
mov
rolb
push
aad
mov
fsubs
loop
inc
lods
mov
outsb
dec
jecxz
push
and
fcoms
js
in
push
and
bound
sbb
jmp
sub
movsb
add
mov
xor
insl
xchg
int
cmp
dec
push
add
ss
cmp
cmp
out
out
imul
in
jg
test
pop
inc
sbbb
out
cmp
movsb
insl
mov
push
xor
mov
pop
mov
mov
jne
pop
push
pop
push
nop
cmpsl
or
sub
dec
ss
cmp
push
clc
mov
sbb
jns
add
push
arpl
mov
pop
je
out
adc
dec
es
lds
pushf
sub
es
sub
mov
mov
mov
jl
pop
cmp
ds
leave
mov
mov
sub
xor
repnz
ss
mov
cmp
icebp
xchg
or
lds
sub
into
mov
andl
outsb
int3
xchg
pop
outsb
pushf
aam
pop
lea
or
lods
and
test
rcll
cmp
pop
xor
das
jmp
movsl
mov
mov
dec
and
les
mov
mov
aad
xor
fldcw
sub
pop
sbb
aam
cld
cmp
pop
lds
pop
sub
ret
outsl
cmp
xchg
lds
stc
pop
movsb
leave
ret
ucomiss
pop
mov
inc
call
mov
mov
inc
ljmp
popf
add
jnp
pop
pop
add
sbb
insb
mov
adc
rclb
in
dec
fisubrs
pop
sub
fisubrs
inc
adc
leave
gs
inc
jl
push
or
cmp
sar
and
ret
data16
inc
cmp
inc
call
mov
xchg
movsl
aad
sti
xchg
cld
sbb
mov
mov
repnz
or
pop
xor
pop
stos
fwait
out
ljmp
ljmp
jecxz
cmpsl
lcall
xchg
fwait
push
push
ficompl
adc
jno
cmpb
xchg
dec
aaa
adc
mov
inc
outsl
pop
sub
hlt
and
ja
ret
divb
mov
ds
jge
push
in
cwtl
xor
dec
and
or
sub
xchg
lock
fisttpl
imul
inc
sub
int
push
mov
lea
pop
rolb
jnp
sbb
lock
into
mov
scas
fisttpll
imul
loop
out
stc
adc
and
mov
adc
aaa
xchg
jg
enter
push
xor
add
dec
mov
into
push
js
les
js
int3
mull
mov
pop
mov
add
pop
stos
hlt
jae
bts
sti
mov
imul
push
inc
lcall
jg
imul
insb
nop
in
in
sti
xchg
out
inc
pop
idivb
sub
fiadds
cli
dec
ja
gs
dec
fs
jg
mov
scas
stc
push
adc
xlat
loop
in
sarb
pop
sahf
imul
mov
imul
rcll
mov
filds
cmp
dec
stos
jge
cmc
push
pop
popf
jmp
dec
or
mov
mov
inc
cwtl
mov
lcall
mov
mov
int
dec
fwait
rcrl
scas
sarb
call
add
push
ret
dec
dec
cmpsb
xchg
xlat
mov
sbb
lret
mov
inc
add
arpl
jne
data16
test
ja
out
fwait
repnz
add
jmp
adc
loop
imul
daa
aam
mov
int
or
inc
or
xor
in
and
imul
pop
clc
aam
pop
cs
or
jge
test
cwtl
push
jo
mov
lcall
jae
xchg
out
and
cltd
mov
push
jg
pop
sbb
fildl
cwtl
inc
lea
outsl
or
test
cmc
xorb
mov
or
pop
push
pop
push
push
cs
pop
fmuls
mov
es
inc
pop
mov
lret
nop
ljmp
push
das
xchg
jns
shlb
xor
in
rcrl
enter
and
add
lock
cmp
or
test
jno
pop
mov
mov
xchg
leave
imul
es
sub
test
cmp
adc
arpl
mov
mov
push
push
jnp,pn
test
mov
mov
xchg
notl
mov
pop
mov
mov
hlt
call
add
ret
gs
sbb
jo
std
in
clc
xchg
cmp
loope
cmp
sarb
loope
icebp
pop
subl
subl
outsb
stos
aaa
mov
stos
call
lcall
inc
addr16
sub
push
daa
xchg
xor
jo
mov
sti
xor
sarl
mov
push
xchg
cs
or
pop
rcll
sub
inc
insb
unpcklps
mov
xchg
lock
mov
push
bound
outsb
imull
and
jbe
jg
or
adc
mov
popa
dec
and
jecxz
fdivs
imulb
cmpl
imul
push
loop
lods
in
je
cmp
fidivl
orb
dec
jmp
add
stos
dec
mov
adc
cmp
popa
push
jo
leave
or
cmpsl
out
stc
insb
inc
adcb
push
lock
pop
iret
lcall
arpl
push
addr16
fsts
fucomp
mov
pusha
out
std
xchg
push
sub
dec
pop
adc
xor
cmc
jp
je
mov
scas
std
sub
imul
jae
and
push
hlt
mov
push
cmp
and
lods
rol
repz
xchg
mov
mov
test
pop
jle
cmp
xlat
cmc
ret
pop
stos
mov
ljmp
cs
dec
rorl
sub
pusha
cmp
xor
push
jno
je
aam
lret
icebp
movsl
or
fldt
inc
jl
adc
out
in
out
pop
cmp
and
dec
lret
repnz
pop
jns
jne
pop
sub
fnstenv
push
inc
cwtl
pop
push
cltd
xor
cwtl
adc
jb
xor
sub
and
mov
dec
cs
arpl
out
adc
fisttps
sarl
sbb
mov
loopne
into
jns
and
pop
push
fstpt
rcll
out
cltd
popf
pushf
out
push
dec
sub
cmpsl
xor
adc
arpl
mov
insl
xchg
mov
arpl
and
push
and
loopne
dec
fs
jecxz
mov
inc
pop
and
inc
mov
jmp
pinsrw
xchg
jns
or
pop
mov
dec
pushf
dec
sub
cmp
notl
mov
popa
dec
dec
xchg
add
js,pt
pop
popf
cmp
mov
jbe
repz
mov
xor
rclb
lds
fisttpl
scas
sub
mov
push
mov
add
mov
outsl
adc
xchg
rorb
in
mov
jno
cmp
mov
cmp
clc
icebp
ret
xchg
sub
popaw
adc
dec
scas
lahf
pop
cltd
push
jmp
dec
jecxz
mov
add
leave
fbstp
stos
add
outsb
pop
dec
xor
lea
adcb
out
pop
cs
pop
cmp
xchg
fsts
filds
pop
shrb
cmp
les
call
xchg
or
xlat
out
in
scas
lcall
mov
jle
inc
xchg
fdivrs
pop
mov
mov
imul
pop
dec
add
push
insb
push
mov
pop
and
jecxz
loop,pn
inc
add
stc
xchg
jg
mov
pop
dec
scas
and
dec
mov
add
sub
adc
pop
mov
pop
cmp
cs
std
or
and
pushf
pop
pop
xor
leave
filds
jno
hlt
movsb
sbb
mov
pop
imull
mov
sub
xchg
jno
or
cltd
mov
jne
cmpsb
sbb
jg
ds
or
int
or
jnp
sarl
mov
xchg
movsl
aad
fiaddl
cmp
stos
adc
xor
jl
or
orl
lods
into
jae
jnp
vpshad
jge
sbb
jnp
ljmp
push
aas
xlat
ret
or
orl
jmp
and
mov
arpl
int3
and
fisttpll
jo
ja
mov
imul
xor
xchg
add
js
int3
push
fimull
mov
sbb
jno
cmc
mov
mov
jmp
std
in
pushf
jle
fnstsw
scas
in
add
pop
call
cwtl
mov
add
cli
mov
lret
imul
jae
out
lea
int
mov
xchg
stos
out
loopne
pop
mov
test
mov
cmp
or
jbe
cwtl
or
mov
je
xchg
ljmp
mov
add
xor
push
dec
mov
add
add
xlat
lock
xlat
pop
gs
clc
fucomi
ljmp
dec
inc
pop
mov
insl
lds
addl
mov
sub
lret
inc
cmp
fldcw
mov
repnz
dec
add
cwtl
mov
scas
out
xor
and
call
push
jb
push
push
daa
or
push
int3
bound
lock
pop
inc
loop
cmp
shr
outsl
mov
je
inc
sub
add
insl
popf
mov
push
mov
cmp
cmp
xor
xchg
sub
into
sub
dec
lock
mov
inc
lods
cltd
sbb
mov
or
mov
aas
loop
ljmp
lahf
pop
ret
ja
mov
sub
pop
push
pop
adc
and
rorb
mov
rcll
aad
adc
cltd
mov
push
nop
adc
dec
mov
insb
outsb
push
inc
jae
outsb
push
mov
stc
mov
pop
jp
subb
and
cmpsl
sub
or
jp
inc
xor
xchg
cli
sahf
add
jne
cli
imul
and
jecxz
sub
sub
stos
sbb
dec
xor
sbb
dec
mov
shlb
mov
sarb
jl
mov
bound
outsl
insb
lret
or
stc
scas
dec
inc
mov
mov
lods
adc
jp
push
mov
cmp
add
jmp
inc
out
aad
pop
clc
movsb
aas
fildl
fwait
mov
xor
aaa
out
xor
scas
adc
clc
xchg
jg
push
sbb
sbb
pop
pop
out
mov
mov
shrl
or
imul
leave
in
mov
enter
mov
out
out
shl
pushf
inc
sbb
popa
test
pop
in
jge
mov
jae
pop
rorb
pop
mov
mov
push
sub
or
xchg
mov
jae
xchg
aam
sbb
xlat
lahf
xchg
dec
das
dec
outsb
mov
ljmp
xchg
out
sbb
popf
mov
addb
inc
inc
scas
or
shrb
xchg
pop
fucomi
push
movsl
ss
xor
jbe
or
not
fstpl
cli
dec
in
int
push
pop
sbb
and
rcll
in
clc
push
mov
jnp
jmp
mov
scas
mov
in
adc
fdiv
enter
add
sbb
or
adcl
shr
lods
out
jp
xchg
mov
repz
lock
repnz
clc
paddusw
xor
jno
xlat
repz
mov
mov
dec
push
add
loop
mov
mov
jp
push
add
sbb
push
dec
mov
scas
add
loop
pop
mov
imul
and
push
test
pop
mov
fwait
jg
push
je
js
mov
pop
mov
pop
icebp
cmpsl
out
xor
and
push
add
loopne
mov
lods
mov
xor
hlt
arpl
push
mov
aad
pop
insb
sub
xor
xchg
lock
shlb
pusha
sbb
mov
jb
mov
test
test
or
sbb
in
mov
shrl
in
jne
cli
cld
jecxz
push
push
gs
jns
into
fldt
fldcw
inc
sbb
fdivs
mov
xchg
mov
lcall
sub
xor
aam
pop
sbb
lods
fildl
movb
fldl
sbb
jle
adc
fistl
sti
dec
repz
xlat
aam
xor
mov
inc
sbb
outsb
les
cltd
subb
sti
push
imul
mov
cmp
inc
pop
push
dec
es
push
xor
pop
pop
push
xor
cltd
lea
imul
into
or
arpl
xchg
and
cmp
out
xchg
int3
cmpb
pop
pushf
into
fisttpll
ja
xorl
mov
xor
jl
dec
fdivrl
repnz
lds
jnp
xchg
xor
pop
cmp
xor
sub
jbe
pop
ja
xchg
insb
insb
test
scas
add
adc
mov
pop
cmp
mov
xlat
ret
xchg
sub
out
add
rep
loope
nop
xchg
popf
or
test
je
stos
cli
mov
out
scas
jne
roll
out
and
call
push
sub
inc
add
dec
push
lahf
and
fcomi
sbb
repz
movb
mov
inc
or
sub
sbb
xor
mov
repz
rolb
pop
adc
pop
inc
ret
lret
cltd
iret
dec
data16
aad
mull
shll
shl
xchg
test
fcompl
jb
dec
add
ror
add
fcomip
in
sub
ljmp
repnz
fcoml
inc
adc
xchg
pusha
ret
xchg
int
cmp
movsl
cs
fcmovb
mov
sub
xchg
cmpsl
out
mov
aaa
jmp
jnp
cmp
and
scas
xchg
ret
not
stc
mov
pop
push
xchg
xchg
or
dec
aas
scas
mov
das
pop
cwtl
ret
xor
xor
xchg
mov
jae
and
imul
sub
pop
into
shrb
sub
imul
out
pop
jnp
insl
je
adc
pop
shrl
or
insb
xlat
jmp
sbb
push
stos
cmc
out
adc
lock
add
cmp
xchg
int
mov
fmuls
fildl
imul
xor
iret
mov
popa
ret
pop
dec
sarb
out
xor
aaa
xor
js
xchg
jns
fimuls
icebp
mov
mov
lret
loopne
cmp
add
sbb
add
mov
lahf
fcoml
outsl
fs
sbb
cmpsl
pop
jo
add
es
int
mov
jecxz
jae
mov
bound
cli
int
repnz
push
dec
mov
mov
cld
mov
mov
out
punpcklwd
js
lahf
test
mov
sbb
outsb
rcrl
mov
mov
loopne
jmp
cs
popf
sahf
popa
dec
loop
jmp
addl
or
cmovbe
call
jb
jp
dec
into
push
in
rolb
mov
pop
sbb
dec
dec
xchg
lds
inc
popa
lea
movsl
in
xchg
jno
fistpl
add
in
lret
push
aas
inc
and
repz
mov
mov
pop
jmp
add
scas
les
ror
imul
sub
xchg
fcmovnb
arpl
addr16
xlat
mov
mov
mov
les
and
jge
repz
jb
jb
xchg
adc
aam
jge
gs
sbb
xchg
insl
shrb
mov
dec
icebp
ret
cmpsb
jecxz
repz
dec
movl
sub
inc
xchg
lods
pop
push
mov
and
cmpsb
adc
push
adc
push
adc
xchg
or
enter
pop
cmp
leave
jb
mov
dec
cs
sarl
mov
xchg
ljmp
jno
movsl
cs
aad
mov
adc
pop
add
jp
lahf
stos
cmp
or
cmp
add
adc
loop
insb
or
pop
hlt
inc
and
push
lret
or
dec
push
sub
and
cltd
fimull
xchg
sbb
mov
jo
std
sbb
jg
xor
es
sar
cmpsl
push
insl
bound
loop
add
push
dec
jo
ret
pop
push
mov
inc
push
xchg
xor
sub
pop
xsha1
cmpsb
leave
adc
or
incb
test
xor
pop
out
pop
jnp
sbb
iret
inc
adc
ficoml
pop
jp
test
jno
fcomps
rolb
call
adc
clc
inc
arpl
mov
orb
out
mov
jge
sahf
add
adc
js
cmp
iret
dec
jno
cmc
mov
sti
inc
lret
xchg
out
scas
jge
mov
hlt
lahf
mov
add
imul
ss
pop
xorl
xchg
and
sub
mov
mov
adc
mov
bound
xor
sbb
aas
icebp
inc
daa
push
sub
sti
cmp
lea
pushf
mov
jb
push
pop
add
jl
sahf
jmp
or
cmp
sbb
adc
mov
mov
aas
cmp
sbb
dec
das
mov
adc
xchg
das
xor
pop
cli
loope
repz
movsb
cltd
aam
cltd
fmuls
push
dec
jnp
push
lock
mov
cli
mov
fistpl
push
test
sbb
mov
dec
sbb
mov
dec
jno
mov
mov
insl
mov
push
mov
push
mov
popa
and
icebp
aaa
adc
stos
push
sub
cmpsl
and
adc
lret
xchg
les
jo
test
outsl
push
push
dec
and
jo
mov
mov
or
enter
dec
fcomp
jge
lret
cmpb
adc
inc
test
dec
pop
aaa
dec
imul
shlb
out
or
inc
test
fadds
sbb
add
scas
dec
jl
push
in
scas
jl
xor
jne
shrl
cmp
mov
push
testl
ljmp
mov
insl
push
cmp
rcrb
imul
xlat
popa
adc
mov
das
pop
push
decb
xor
jno
mov
mov
mov
sbb
cmp
mov
cmpsl
imul
mov
shrl
std
jmp
jns
cmp
xchg
iret
pop
inc
cwtl
ficomps
inc
xchg
mov
pop
push
dec
scas
mov
lock
movsl
out
flds
dec
mov
popf
jb
cmp
imul
rcrb
out
inc
cmpsb
fdivr
xchg
adc
adc
jo
adc
iret
push
cmpsl
cmpsb
popa
dec
nop
jg
mov
pop
mov
mov
pop
fistps
out
adc
adc
hlt
push
int3
mov
jge
cwtl
cmp
pop
in
mov
push
pop
ss
or
inc
add
adc
xor
mov
or
in
lahf
adc
push
in
fsts
push
outsb
loop
test
dec
call
jb
hlt
subb
sub
xchg
enter
pop
nop
adc
pop
in
inc
movsb
cltd
testb
dec
sub
dec
adc
sub
loope
cmp
jmp
fists
sub
and
pop
fwait
cmp
xchg
lods
push
sti
jmp
xchg
pop
cltd
into
mov
xchg
dec
ret
inc
and
pop
jne
fcoms
mov
fs
sbb
popa
or
stos
and
inc
fisttpll
dec
or
fisubs
mov
adc
jl
loop
icebp
cmc
dec
cmp
movsl
mov
insb
movsl
mov
pop
push
clc
xor
js
pop
movsb
out
sbb
jecxz
lock
jbe
jecxz
xor
inc
inc
dec
aam
into
jle
jmp
pop
mov
jbe
xchg
push
divb
scas
in
or
shll
stos
mov
and
mov
iret
aaa
stos
fwait
scas
add
mov
popf
push
sar
cltd
mov
addb
loope
xchg
sub
mov
cmp
dec
jl
sbb
pop
aad
xchg
adc
sahf
out
dec
mov
repz
adc
outsl
mov
adc
scas
and
fiadds
mov
or
jp
ret
ror
repnz
out
sub
lods
enter
pop
inc
aaa
dec
xor
data16
sub
mov
xchg
push
pop
imul
mov
mov
fld
push
orl
mov
dec
ret
fbld
add
jnp
adc
cli
mov
push
dec
jns
inc
imul
xchg
in
stc
pop
fnsave
xchg
dec
subl
lods
or
mov
xchg
sahf
mov
mov
roll
clc
ss
je
jo
mov
xor
and
or
movsb
push
orb
adc
outsb
push
push
aad
repnz
and
xchg
jle
jge
dec
lea
pop
xor
dec
xchg
sub
in
cmp
out
sub
jge
push
subl
add
sub
int
mov
jne
sub
and
pop
testb
stos
jbe
sti
nop
sub
adc
pop
sub
frstor
ja
ss
jmp
imul
ret
lock
jnp
test
mov
in
dec
pop
pop
cmp
inc
xor
push
fisubs
cmp
lcall
lock
adc
movsb
jp
pop
adc
jns
cltd
adc
test
lods
push
or
lds
ret
jno
inc
lea
pop
sbb
movsb
lods
out
adc
les
ss
negl
sub
fisttpll
adcl
mov
mov
imul
lods
mov
ljmp
mov
daa
subl
inc
or
inc
jg
ja
add
or
add
dec
cltd
cwtl
pop
xor
cmp
add
sbb
repnz
push
stos
pusha
ret
pop
sub
inc
fstpl
sarl
mov
mov
mov
push
faddl
cmpsl
adc
inc
fwait
or
fbstp
inc
sub
pop
in
jmp
and
out
nop
ljmp
add
jae
mov
shlb
add
hlt
pop
mov
mov
inc
outsb
push
push
jmp
rcrl
aam
mov
mov
test
stos
lock
pop
pusha
push
and
shlb
sub
ljmp
jg
je
clc
fstpt
jmp
xchg
inc
nop
xor
hlt
lahf
and
imul
js
iret
movsl
cli
dec
add
fisttpll
cmp
inc
lods
int3
stos
into
mov
das
jle
dec
test
mov
iret
cmpb
pop
cmp
cli
pop
imul
xchg
sarb
aad
xor
icebp
test
rolb
push
and
mov
xchg
repnz
cmp
call
arpl
jecxz
jns
fstpt
out
insl
xor
add
arpl
xor
andb
adc
aam
fstl
inc
data16
stos
into
imul
jg
icebp
pop
push
ret
aam
ss
sahf
cmp
push
call
outsl
mov
int3
xchg
xchg
mov
mov
mov
xchg
cltd
jns
sub
sub
cmp
push
sbb
adc
pop
das
lcall
pop
mov
je
push
scas
scas
mov
roll
std
test
push
hlt
sub
test
lods
test
xchg
and
cmp
add
cmc
or
lret
sahf
in
outsb
push
int3
or
aas
or
pop
sbb
divb
mov
addr16
rcll
mov
int
pop
adc
stc
mov
sbb
jl
pop
insl
lods
nop
loop
mov
sub
cmp
sbb
insb
xlat
inc
push
adc
sahf
out
cmp
leave
xor
push
sbb
icebp
inc
mov
fmuls
pop
push
push
lret
sbb
push
mov
ljmp
mov
mov
jae
je
and
push
sub
outsl
pop
xchg
gs
popa
jecxz
aad
dec
mov
mov
sti
test
jp
add
inc
push
outsl
xchg
test
movsb
repnz
test
out
fwait
and
cmp
out
stc
jns
test
movsl
jns
adc
sub
sub
cmp
mov
cmp
lods
loopne
stos
lahf
lret
xchg
jmp
xchg
sbbl
dec
dec
in
inc
in
std
pushf
and
mov
cli
ja
aas
aas
psllw
sub
flds
clc
icebp
rolb
nop
or
push
mov
outsl
or
cld
pop
push
imul
ret
lock
jb
mov
fstpt
in
orl
test
cmp
fdivs
jmp
mov
dec
popl
lea
stos
pop
push
pop
adc
or
pushf
loope
lock
icebp
addr16
jle
pop
mov
in
sub
pop
mov
pop
adc
call
mov
adc
int
jo
and
in
clc
and
mov
adc
fnstcw
mov
loope
mov
mov
sarb
pushf
xor
cli
mull
cltd
aaa
jns
mov
and
repz
fimuls
enter
aad
ljmp
sbbb
push
aad
push
xorl
add
hlt
stos
scas
adc
xor
sarl
cmpsb
dec
sub
sti
mov
and
xor
mov
adc
lret
lcall
cmp
and
cmp
cmp
jne
jmp
inc
push
mov
call
jno
js
mov
inc
ret
add
cmp
mov
xor
cs
sub
icebp
les
cmp
jae
std
lahf
and
add
repz
add
pop
push
push
or
push
or
cmp
stos
jge
cltd
pop
loope
test
jge
mov
adc
loopne
ret
push
inc
sub
push
xor
xchg
xchg
inc
hlt
lods
stc
xor
ss
mov
xchg
cwtl
or
jno
enter
jg
aam
fdivl
mov
imul
cmpsb
orb
rcrb
push
pop
stc
fwait
mov
and
lock
fldt
mov
je
lret
scas
push
sti
mov
cli
inc
jp
lock
xchg
js
or
paddb
test
js
stos
dec
insb
stc
lods
mov
and
test
movsb
add
add
xchg
sub
std
cmp
inc
iret
sub
inc
rolb
cli
loopne
xchg
xor
or
pop
mov
out
ret
pop
and
add
aaa
test
jp
cmp
clc
dec
add
sub
scas
hlt
sub
aas
dec
cmc
pop
lret
pop
add
dec
filds
addb
xchg
into
bound
call
jns
rolb
add
mov
ficoms
ds
imul
mov
sbb
or
xchg
stos
push
inc
pop
ret
mov
bswap
push
cmp
push
inc
pushf
sub
dec
mov
sub
outsb
push
cmp
jae
sub
fmull
jecxz
jg
pop
xchg
lock
dec
xor
sbb
repz
hlt
inc
scas
pop
pop
scas
mov
mov
jle
stos
mov
lret
aaa
jge
pminsw
mov
pop
std
xchg
pop
mov
ja
push
sahf
mov
inc
lcall
aam
mov
jo
push
push
subb
inc
pop
scas
dec
bound
cmpsb
ret
add
push
pop
xor
sub
sbbb
lods
xchg
inc
pop
lret
in
push
arpl
or
mov
popf
push
cltd
sahf
dec
add
or
jnp
mov
int
mov
mov
daa
fidivrl
ret
pop
push
add
push
test
aad
cltd
in
inc
test
xchg
xor
adc
aaa
dec
imul
mov
loop,pt
ds
xor
stos
cmp
in
and
inc
insl
mov
xor
sub
insb
inc
xchg
in
fdivrs
mov
push
les
mov
add
xchg
call
dec
dec
movsl
inc
dec
sbb
imul
adc
cli
mov
sbb
stos
push
mov
out
out
sub
xor
mov
jmp
cmp
xor
jmp
fwait
or
xchg
sub
aaa
pusha
jmp
out
xchg
jbe
cs
pushf
sbb
pop
cmp
je
jo
push
test
sub
cli
fldenv
repz
xchg
adc
rcrl
push
rolb
inc
jo
ds
pop
mov
outsl
stc
push
cltd
shlb
and
inc
stc
shrb
mov
clc
fld
fisttpll
sbb
in
adc
add
jno
sub
lahf
enter
xchg
push
or
pop
inc
lcall
push
pop
push
pusha
pop
inc
pop
dec
loope
enter
jmp
adc
cmp
enter
mov
daa
mov
xor
negb
subb
testl
test
xchg
pushf
arpl
scas
xlat
cmpsl
pop
mov
jle
or
push
stos
xor
int3
mov
in
daa
jbe
enter
jb
bound
aaa
cmp
sub
call
sub
aas
dec
and
lahf
pop
adc
sbb
shlb
jl
into
jl
clc
adc
jo
gs
in
or
mov
or
jns
jnp
cmp
leave
pop
fiaddl
inc
stc
pop
mov
lret
icebp
mov
pop
stos
push
push
sahf
sub
pop
stos
jmp
xchg
sahf
loopne
xor
mov
push
inc
mov
test
int3
adc
pop
aas
rcrb
aam
call
dec
icebp
mov
dec
or
or
ljmp
stc
jl
push
xchg
pushf
bound
inc
pop
andnps
mov
enter
adc
jne
dec
mov
xchg
mov
repz
and
test
push
sahf
popf
insb
in
gs
sub
rcr
sti
pop
stos
aam
jns
mov
pop
push
dec
movsb
jmp
popf
ljmp
add
push
nop
xor
lea
push
outsl
or
pop
ss
loop
cmc
sbb
repz
dec
lret
cmp
dec
call
adc
sbb
sbb
scas
outsb
push
adc
mov
in
sub
push
add
inc
int
push
push
mov
lock
sbb
push
mov
adc
shll
clc
js
sub
hlt
pop
and
pushaw
scas
repnz
ljmp
stos
fsubr
cld
lods
rcrl
sub
hlt
xchg
out
xchg
xchg
mov
push
subb
mov
outsb
fildl
lahf
dec
movsl
push
lock
inc
cs
lahf
fistpl
pop
fisttpl
add
std
notl
xor
pop
push
push
jb
out
xchg
ss
rorl
movsb
iret
enter
jmp
scas
fsts
push
repz
sbb
jecxz
shll
mov
xlat
xchg
push
shll
lahf
call
adc
push
dec
int3
mov
push
xlat
xor
fnstcw
shll
inc
icebp
pop
rolb
cmp
mov
jle
jo
pusha
jmp
xchg
sub
orb
data16
mov
repz
insb
xor
xlat
jbe
or
js
and
sbb
stos
cltd
sbb
push
aas
scas
aam
aaa
push
xor
cmp
push
jbe
mov
scas
pop
dec
sub
iret
xor
inc
push
loope
roll
hlt
fnsave
push
mov
inc
call
adc
pop
mov
jmp
cmp
mov
mov
or
addr16
dec
mov
das
and
andl
mov
dec
out
mov
jle
push
aad
outsl
jg
bound
lcall
push
jg
inc
dec
sbb
insb
add
cwtl
lret
in
or
data16
cmpsl
push
xchg
xorl
xchg
pop
lds
mov
pusha
cmp
shrb
repz
push
lods
int3
imul
fs
dec
add
mov
xchg
fisttpll
sbb
gs
push
dec
mov
jmp
push
jmp
mov
add
mov
outsb
sbb
and
push
sbb
jmp
add
into
in
jae
inc
negl
dec
mov
mov
int3
bound
mov
mov
fidivs
daa
shrb
mov
cs
sti
xchg
push
testl
ds
adc
adc
dec
jge
push
sbb
mov
or
mulb
fsubrl
adc
and
out
xor
fmull
out
daa
sahf
pushf
lret
rorb
pop
add
xchg
clc
mov
mov
clc
jecxz
xor
jg
fistps
mov
scas
test
and
xchg
xor
lcall
fldl
lahf
mov
test
repz
lret
in
outsb
fcom
and
scas
fucom
inc
pushf
jg
and
mov
pmullw
mov
sub
add
and
add
pushf
sbb
push
sarl
jbe
int
or
enter
mov
sub
cmp
cmp
sbb
sarb
mov
push
fsts
test
sbb
lods
inc
dec
jbe
int3
enter
imul
jbe
dec
pop
out
pop
jge
xlat
call
xchg
loop
pushf
xor
pusha
mov
xorl
orl
pop
cmpsl
xor
mov
movsl
stos
sbb
adc
hlt
orl
mov
mov
fisttpll
cmp
add
fildl
cmpsb
out
mov
jge
push
sub
and
cwtl
xchg
sbb
data16
adc
adc
or
inc
inc
jnp
pop
xor
push
int3
push
out
cmp
sbb
cwtl
test
pushf
movsb
fcoml
das
jl
inc
rorb
mov
mov
loope
cwtl
sub
arpl
cmp
rorl
addr16
or
mov
leave
mov
inc
pusha
aad
xchg
loop
and
leave
sbb
mov
jmp
clc
shlb
or
xor
jg
imul
pop
cmpb
pushf
stos
lret
push
sbb
ss
call
scas
lcall
loopne
popa
pushl
mov
add
scas
push
dec
pop
decb
cmpsb
and
mov
enter
mov
jmp
xchg
pusha
xor
jl
mov
imul
nop
sti
pop
or
add
xor
and
or
rcrb
rol
inc
pop
cmc
sub
mov
mov
popa
mov
add
sarl
mov
or
in
mov
add
add
std
into
push
fidivrl
sbb
push
aaa
mov
cmp
dec
cld
ja
call
shrb
mov
pop
pop
fsubs
adc
dec
aad
sti
sbb
pop
lret
push
cmp
idiv
pop
dec
inc
lcall
ss
xchg
pop
pop
fpatan
stc
jno
jp
pop
js
fbstp
outsb
outsb
and
sahf
popf
mul
test
ret
cltd
jl
lock
arpl
mov
xchg
fucomi
movsl
inc
mov
ret
ret
movsl
add
andl
pushf
and
add
xchg
sub
xchg
or
jge
call
into
jl
add
inc
movsb
aaa
jno
mov
lods
adc
fistpll
out
in
into
into
aad
push
mov
adc
push
in
sbb
push
add
dec
jb
aas
shl
call
mov
xchg
xchg
or
adc
mov
inc
stos
imul
xor
and
stos
xor
adc
es
mov
je
insl
fld
shll
add
and
in
test
xchg
or
cmpsb
and
xor
ds
shrl
mov
stos
pop
inc
pop
jg
aaa
mov
shll
dec
xor
inc
cmp
cmpsb
and
jge
inc
shll
faddl
imul
sbbl
adc
out
nop
popa
mov
adc
fdivrs
add
xchg
jp
and
jnp
imul
dec
push
push
shrb
iret
xor
cmc
cld
roll
dec
inc
daa
jmp
dec
mov
jecxz
test
out
pusha
cmp
fsts
dec
mov
dec
mov
mov
fadds
pop
cltd
mov
andl
mov
in
mov
clc
push
in
iret
test
test
cmp
jl
stc
push
and
movsb
pop
mov
pop
stos
les
dec
push
sar
and
hlt
imul
jnp
jmp
push
inc
jnp
lret
push
movsl
pop
in
fisubs
mov
add
call
mov
xchg
ss
enter
fsub
mov
or
fstl
repz
adc
ljmp
lcall
fimuls
ret
cmp
push
sbb
es
pop
mov
push
or
movsb
jmp
inc
push
fistpll
shll
jg
mov
cmpb
sbb
out
mov
lahf
inc
std
mov
iret
push
pushf
mov
cmc
leave
mov
xchg
inc
fwait
push
cwtl
sub
xor
rclb
adc
imull
push
sub
pop
insb
movsb
sub
rolb
xor
xchg
dec
sub
and
popa
mov
lods
popa
mull
and
std
adc
mov
lahf
mov
test
and
mov
dec
pop
mov
arpl
xchg
mov
js
inc
sbb
enter
jo
ss
adc
adc
mov
scas
pop
sub
push
push
arpl
dec
test
clc
jecxz
add
sub
or
pop
pop
dec
mov
imul
dec
xchg
test
push
loop
movl
mov
icebp
pop
sub
in
sub
xchg
ret
xlat
scas
jb
leave
jg
push
leave
or
push
xchg
sub
clc
test
inc
adc
or
and
or
jl
and
mov
or
dec
stos
sti
clc
lcall
fildll
jp
andb
aas
mov
add
add
andl
dec
mov
cmp
and
inc
mov
lock
xchg
out
test
das
aaa
push
test
gs
loop
outsl
lahf
mov
jne
dec
ss
sub
mov
mov
cwtl
popa
dec
gs
jns
dec
xchg
daa
stos
dec
test
pop
cs
ljmp
inc
mov
and
adcl
mov
sub
adcl
lcall
sbb
adc
pop
cs
popa
or
sub
or
jp
mov
push
das
xchg
add
bnd
cmp
mov
push
ja
adc
rolb
inc
jge
arpl
ret
loop
aam
mov
mull
aad
popa
leave
ss
or
movsl
fsubrl
int
mov
fcomps
out
jl
mov
pop
clc
pop
and
jns
jnp
sbb
inc
rcrl
andl
xlat
pushf
gs
push
push
incb
lahf
mov
in
push
or
cs
sbbb
stc
shll
fidivrl
iret
and
lea
cmp
ret
dec
lods
gs
adc
add
jnp
sbb
les
sar
inc
sbb
repz
loopne
xchg
inc
mov
sahf
shlb
hlt
dec
lock
inc
jge
pop
lahf
add
mov
aam
sar
jb
or
adc
jno
movsb
ds
insl
sbb
js
inc
dec
icebp
pop
pop
push
lea
jge
or
sbb
sarl
dec
lods
cltd
movsl
jo
pusha
adc
leave
fidivrl
roll
sub
arpl
repz
ja
xor
cmp
cltd
insl
cwtl
mov
sbb
adc
mov
js
gs
xchg
mov
sbb
dec
inc
fistpl
and
adc
pop
orl
test
or
test
mov
into
sub
cmpl
hlt
cmpb
jae
xchg
pop
jns
test
pushf
xor
roll
or
nop
imul
imul
xchg
add
xor
sti
icebp
gs
xchg
jae
mov
jg
mov
cwtl
bound
sub
mov
mov
sbb
cltd
mov
xchg
xor
and
dec
aaa
mov
mov
faddl
and
sbb
pop
mov
out
sahf
loop
icebp
mov
movsl
test
imulb
nop
idivb
pop
imul
pop
sbb
sbb
adc
push
stos
and
mov
and
mov
pop
ljmp
popf
movsl
push
cmp
out
or
out
test
rorb
ljmp
in
in
xchg
mov
clc
jp
xchg
and
inc
fidivs
jp
push
mov
pop
cmp
push
cmp
cmp
ss
or
mov
stos
xchg
sub
out
dec
add
xchg
cmp
push
das
xor
inc
cmp
cmpsb
mov
mov
dec
push
mov
dec
inc
imul
stos
std
or
test
cmp
pop
push
dec
scas
clc
sbb
add
jle
xchg
mov
push
pop
dec
jecxz
adc
add
or
adcb
mov
lahf
sbb
test
fwait
ret
xlat
daa
mov
push
sar
outsl
and
mov
pop
mov
xchg
loope
dec
aad
jns
adc
push
sub
das
sub
add
mov
fsubl
and
mov
or
adc
aas
sbb
fwait
lock
cmp
sub
mov
jnp
mov
xchg
add
jns
clc
mov
dec
mov
sub
pop
sbb
mov
jbe
mov
ret
sub
imul
fwait
repnz
mov
mov
add
push
xor
jg
aaa
iret
out
sub
arpl
xchg
fdivs
pop
jl
cmpsb
les
ficoms
adc
add
lock
loop
mov
add
cltd
fistps
arpl
lret
sub
adc
pop
fdivrs
adc
dec
and
mov
jno
xchg
or
dec
das
ss
dec
cmpsl
push
fists
hlt
flds
lcall
cmpsb
adc
dec
sub
add
or
mov
xchg
dec
fstpl
push
cmpl
imul
test
pushf
sbb
test
sbb
out
into
outsb
fstl
and
push
into
pop
sub
add
ret
data16
nop
dec
add
ficompl
dec
ljmp
loope
add
daa
mov
jmp
mov
sti
insb
mov
xor
ret
js
test
outsl
xor
std
test
mov
cmpsb
push
je
inc
lds
cli
push
or
jecxz
mov
ret
das
xor
inc
sub
or
mov
add
pop
mov
pop
out
scas
out
sbb
stc
lret
and
adc
dec
xor
adc
inc
jle
pop
mov
add
fnstcw
imul
stc
add
ljmp
ljmp
xor
inc
jno
pop
cmp
xor
mov
add
or
cmpsb
fcomps
or
jbe
fsubrp
ficompl
cmpsl
pop
cltd
test
les
jmp
or
mov
sbb
push
in
adc
push
repnz
mov
push
mov
sub
popf
lods
or
pusha
out
push
jbe
icebp
jbe
mov
addr16
aas
jbe
jb
iret
shrl
pop
pop
pop
mov
rcll
popf
cli
jne
pop
inc
jecxz
push
stc
add
stc
mov
aaa
and
test
jnp
call
hlt
mov
shlb
mov
push
aam
adc
mov
jg
insl
or
mov
adc
lds
movsb
insb
push
mov
jo
sbb
sbb
pop
pop
gs
inc
testb
push
xchg
sbb
push
pop
into
ss
movsb
int
cmp
and
mov
xchg
inc
lods
mov
notb
inc
test
lret
fisubl
sarl
push
sarb
test
sbb
push
xchg
outsl
les
xor
out
pusha
call
mov
jl
push
shufps
mov
cmp
ds
sub
sub
vcmpss
fstps
jbe
outsl
sub
jmp
xlat
lods
jo
add
sub
inc
jbe
iret
xchg
inc
pop
test
add
push
lret
sahf
jle
sub
mov
mov
fwait
sub
in
insl
push
cmpsl
push
ljmp
jmp
movsl
push
mov
push
adc
das
enter
bts
dec
nopl
pop
xor
jg
jg
adc
sbb
mov
stos
cmp
jno
mov
ljmp
and
jo
or
mov
aaa
dec
pop
fwait
mov
lods
cld
push
pusha
sub
leave
sub
movd
std
xchg
mov
sbb
nop
mov
daa
ret
sub
sbb
sub
push
lahf
mov
addr16
test
add
jne
push
dec
push
xchg
or
add
sbb
adc
notl
adc
jae
mov
jge
inc
xor
insb
jnp
dec
mov
les
and
fstp
rolb
cmp
adc
ds
jge
mov
cmp
int3
mov
lods
xchg
lods
and
add
popf
aas
jb
arpl
lcall
cmp
sbb
xchg
cld
imul
mov
loop
stos
xchg
iret
inc
sbb
xor
insb
loopne
sbb
insb
mov
inc
jle
push
dec
push
add
xchg
pushl
hlt
call
movsl
mov
add
mov
int3
push
aaa
in
inc
ss
dec
out
je
fisubs
sbb
outsl
ror
imul
mov
mov
ret
shll
and
inc
xor
faddp
ret
adc
xor
mov
fidivrs
shlb
xchg
mov
mov
imul
lock
or
push
cmc
into
mov
push
xchg
aas
push
mov
lea
push
rcll
and
lahf
xchg
xor
sbb
int3
mov
movsl
mov
or
inc
or
add
cmp
inc
repnz
das
add
pushf
adc
rcr
mov
loope
mov
mov
or
xorl
icebp
dec
cs
mov
test
pop
mov
shlb
shrb
dec
in
push
out
aam
movsb
jge
insb
xchg
jge
test
sub
data16
mov
in
repz
popa
jbe
divl
outsl
inc
mov
dec
lret
and
mov
test
cmp
hlt
adc
xchg
mov
ss
cmc
xor
xlat
pop
stc
xchg
ret
and
mov
pop
xchg
sub
shr
xchg
jmp
cmp
mov
pop
jmp
mov
push
sahf
data16
mov
or
fnstenv
insb
jbe
jno
mov
push
push
movsb
lods
fidivl
mov
mov
and
das
imul
push
rcrb
pop
dec
int
dec
pop
enter
das
dec
jge
jp
adc
enter
push
cmpsl
cmp
rcrl
dec
mov
and
sbb
adc
jbe
je
fnstcw
mov
inc
and
xlat
leave
cmc
mov
rorb
push
outsl
mov
ljmp
push
fsub
bts
enter
in
and
xlat
or
dec
push
pop
incb
jno
lret
push
imul
inc
or
push
mov
pop
inc
mov
xor
pop
bound
adc
idivl
push
rcll
jae
inc
mov
xchg
in
and
cmp
lret
pop
and
jns
and
push
lock
and
push
pusha
aad
inc
inc
xor
fstl
iret
jmp
es
pop
mov
cmc
jbe
sub
rorl
push
imul
les
ds
hlt
cs
test
ret
fadds
xchg
dec
insl
fwait
and
add
test
cmpsb
ds
lock
fdivrl
jl
add
add
repnz
mov
mov
aaa
fidivrl
fmulp
mov
lock
insb
lds
mov
popa
lods
outsl
rcrb
jmp
test
hlt
fdivs
inc
adc
sub
cs
xrelease
stos
in
daa
mov
pop
mov
sbb
jg
mov
sbb
lret
ret
mov
inc
mov
mov
adc
push
and
sbb
push
cmpb
mov
cmp
add
jg
xchg
cmp
xchg
adc
pop
test
fsubrs
test
les
iret
cld
adc
jmp
cmc
sub
push
decl
rorl
in
ret
sub
xor
xor
mov
or
loope
inc
ss
add
xlat
or
or
sub
mov
iret
mov
mov
cltd
xor
mov
test
lret
lcall
repz
xchg
stos
popf
pop
popa
sbb
das
pop
loopne
lret
sbb
ret
mov
cmp
xchg
imul
mov
xchg
dec
and
dec
test
mov
xchg
push
push
cmp
xlat
jge
cmp
repz
sarl
and
cltd
sub
sahf
xor
addr16
pop
arpl
rorl
aas
sub
fwait
xchg
mov
lret
adc
cmpsb
mov
lods
movsb
mov
lock
lock
jl
int3
mov
xor
int3
xor
mov
sbb
nop
and
stos
sbb
ds
xor
leave
pop
pop
repz
pusha
in
jns
lods
xor
stos
jno
push
add
dec
mov
repz
sbb
mov
lahf
push
loopne
mov
mov
mov
insb
fsubrp
and
sbb
stos
int3
in
sbb
jmp
sti
inc
pop
mov
adc
cltd
shrl
dec
ds
xchg
xor
je
out
scas
mov
pop
cmp
mov
aas
loope
sbb
outsl
jne
xlat
or
push
mov
jmp
pcmpgtb
mov
iret
mull
nop
fimuls
movsb
repz
hlt
nop
iret
adc
jg
xchg
test
cmp
push
mov
pop
cmpb
cmp
pop
lret
sub
insl
push
xchg
lods
inc
xchg
sub
movsl
dec
fbld
jmp
fnstsw
sbb
fsubr
in
jmp
popa
mov
je
push
jno
jecxz
test
cmp
xor
push
push
jno
ss
shl
in
inc
test
sub
sub
lods
into
push
sbb
xor
cwtl
dec
sub
jno
or
mov
mov
mov
popa
sub
cmpsb
andb
fwait
stos
mov
push
call
movl
pop
pushf
orl
je
leave
imul
clc
ds
mov
pop
loopne
inc
sbb
bound
clc
jns
mov
push
mov
and
shr
jo
cli
lea
mov
movsl
ljmp
or
idivb
and
ret
mov
or
divl
or
enter
into
add
das
int3
mov
mov
cld
jno
test
enter
push
jno
mov
xchg
xchg
rorb
xor
andb
test
pop
mov
dec
mov
xchg
jg
add
sahf
or
je
lods
imul
movb
leave
nop
repnz
gs
in
mov
mov
mov
pop
imul
mov
sub
mov
nop
xchg
out
mov
cmp
xchg
test
and
outsb
mov
push
and
pop
movsl
xchg
cmp
jp
adc
nop
cmp
aaa
jno
xchg
std
cmc
pop
add
inc
shl
sub
mov
inc
fwait
js
mov
out
es
jecxz
push
enter
in
pop
pushf
shrl
test
pop
shll
sbb
mov
andl
test
out
xchg
xchg
inc
xchg
jge
jnp
jb,pn
cmpsl
xor
ss
mov
mov
lock
xchg
inc
repz
std
sub
sbb
xchg
fisubrl
cli
dec
add
add
push
stos
mov
jmp
lea
fildl
and
xchg
ljmp
push
popf
stos
ljmp
mov
fcmovb
add
sub
inc
push
into
mov
fucomp
adc
mov
gs
call
mov
movb
lea
cli
sub
jmp
scas
add
push
enter
dec
lods
jmp
ljmp
xchg
loop
add
pop
inc
cmp
icebp
xor
jle
sarl
and
xchg
in
sub
rcrl
push
push
jbe
lods
sub
sub
inc
inc
imul
or
cmp
add
xchg
stos
push
mov
sti
pop
pop
test
jns
in
rorl
and
outsb
int3
les
leave
pop
loopne
dec
leave
fisubrl
push
jnp
gs
out
hlt
xor
mov
sbb
das
dec
daa
scas
xor
into
fisttpl
mov
fildl
dec
dec
cmp
ljmp
loope
cmp
dec
jecxz
es
test
mov
xchg
and
xorl
lock
jns
test
aaa
mov
push
pop
adcb
xchg
mov
subb
movsl
lret
ret
sub
add
add
and
lahf
adc
subb
aas
inc
cs
mov
mov
out
lds
xor
xchg
fs
dec
sbb
push
xchg
fs
push
cmp
inc
xor
cmpsl
push
xchg
leave
je
loop
sub
mov
add
int
add
in
push
out
lds
jmp
adc
outsb
lods
or
fs
jno
fs
push
adc
cwtl
data16
xchg
mov
mov
mov
mov
arpl
and
push
and
mov
repz
push
mov
imul
idivl
insl
dec
cmp
mov
cltd
fbld
adc
mov
test
aam
dec
xor
xchg
loop
add
jge
pop
divl
jg
jecxz
dec
add
fnstsw
push
imul
jl
pop
dec
add
mov
jp
shll
fimuls
in
mov
clc
xchg
cmpb
sbb
pop
sub
lahf
push
js
inc
xor
and
jecxz
in
sub
scas
out
lret
jg
imul
ss
mov
repnz
pop
loopne
lock
test
jnp
ret
jno
leave
mulb
mov
push
push
mov
lods
in
push
and
sbb
test
mov
insb
jnp
daa
test
pop
insl
ljmp
pop
shl
mov
fs
cmp
add
repnz
orl
xlat
add
repz
lds
xchg
adc
in
inc
scas
fimull
mov
push
xchg
cmpsl
push
je
mov
push
lods
adcl
inc
shrb
shll
inc
pusha
sub
jnp
call
ret
out
gs
movsb
into
jbe
add
mov
or
scas
xorl
xor
fsubrl
mov
inc
jmp
shll
gs
mov
test
push
pop
cmp
mov
xchg
cmpsl
inc
faddl
mov
data16
fcoml
out
orb
insl
jmp
mov
inc
xor
popa
fucomip
fsubl
dec
mov
cmp
jb
sbb
jns
sbb
lahf
mov
xchg
ljmp
pushf
mov
ds
cmpb
dec
lret
add
pop
mov
pop
xorb
cmp
dec
mov
jae
xchg
and
sbb
sub
clc
inc
sarl
inc
inc
fnstsw
mov
mov
loop
shl
push
ror
out
push
aas
jns
lret
mov
int
and
in
xor
add
aad
std
inc
fs
fwait
mov
mov
je
dec
jp
aam
iret
dec
cmp
mov
push
aad
in
jecxz
sbb
jl
xchg
jl
pmaxsw
daa
mov
xchg
mov
push
xchg
bts
cld
jo
push
push
sti
cli
daa
fstpt
cwtl
fs
inc
inc
dec
dec
push
xor
dec
mov
lock
xchg
in
jae
xchg
imul
mov
mov
pop
mov
loop
ja
imul
xchg
push
movsb
xchg
mov
sub
loop
mov
push
leave
aam
jl
or
jg
adc
punpcklbw
xor
mov
sub
dec
fldcw
lods
std
mov
pop
mov
fcoml
test
data16
jp
sbbb
out
jecxz
movsl
out
xchg
lcall
fsubs
jl
cmp
pop
sbb
mul
mov
mov
cmovg
pop
or
lea
loopne
or
sub
and
xor
sub
push
jbe
jecxz
jg
sub
lds
clc
je
rcrb
xor
xor
xchg
or
pop
out
or
int3
or
iret
jmp
je
xlat
loope
fcomi
lds
repz
lcall
fstl
push
fbld
jmp
mov
rcll
imul
push
jnp
pop
stos
sbb
inc
and
pushf
mov
push
mov
int3
jg
rcll
fidivl
push
adc
mov
pop
pop
sub
add
cmpsb
arpl
int3
out
mov
sahf
imul
imul
xor
mov
sahf
adc
ja
pop
sbb
sub
inc
push
push
dec
pushf
inc
sti
adc
inc
lcall
andb
push
xchg
cmp
mov
les
sbb
cmpsb
mov
fwait
add
xchg
push
sbb
jg
mov
mov
aas
lcall
popf
inc
inc
mov
mov
scas
incb
int3
test
inc
jns
mov
mov
sub
sti
fucomi
adc
pop
xor
into
in
cld
sbb
xchg
sub
or
sar
mov
iret
mov
xchg
pop
rorb
mov
loopne
sub
lcall
movsb
sub
pop
je
scas
aam
pop
js
repz
cmpsl
xchg
and
mov
jecxz
xor
out
sti
cltd
bound
push
mov
sbb
popf
notl
xor
arpl
insl
fsubp
scas
xchg
push
sub
mov
push
sub
mov
sbb
lea
sub
push
mov
ss
lea
sub
and
add
xchg
jns
or
lods
xchg
sahf
in
mov
push
daa
adc
sbb
adc
sbb
addr16
jne
repz
adc
fstl
xorl
scas
out
push
test
xor
popa
push
dec
cmp
aam
cmp
das
movsl
dec
and
xor
adc
sub
inc
jb
sub
push
push
ret
xor
or
mov
hlt
aam
pop
insl
in
xchg
fs
and
imul
movsl
mov
pusha
in
lcall
jbe
lahf
lds
es
das
push
sub
movsb
popf
push
xor
xchg
adc
xor
or
mov
sbb
lea
sbb
addl
sbb
popf
lahf
imul
push
or
loopne
xchg
lock
mov
cli
jne
mov
cmc
push
dec
push
test
xor
fildl
imul
jmp
ficoml
mov
push
std
lahf
je
sti
notb
stos
mov
idivb
pushf
lods
fbld
lret
loopw
sbb
lods
jns
mov
push
inc
ljmp
imull
xchg
mov
aam
cmp
jle
mov
test
pusha
fcomps
js
cmp
add
mov
outsb
sbb
es
test
lcall
dec
sbb
xor
push
cli
xchg
jmp
cmp
arpl
lock
aaa
dec
inc
lds
movsl
in
fstps
jbe
add
std
sub
cmp
lret
inc
or
fdiv
insb
mov
push
rclb
push
cmp
imul
cmpsb
pusha
insl
pop
imul
int
jnp
int
fsts
aad
jp
mulb
and
das
pop
jbe
mulb
adc
sahf
cmp
dec
test
mov
pop
dec
push
mov
mov
xor
dec
out
mov
cmpsb
rcrb
jno
idivb
movsl
sub
sbb
inc
sbb
or
xor
lods
inc
fildll
dec
or
jns
lret
sti
fdivrs
sub
xor
jg
xchg
sbb
fisttpl
add
pusha
mov
repnz
xor
cmp
call
mov
shll
test
sahf
mov
sbb
daa
loope
test
jae
popa
xchg
pop
and
jne
jp
sbb
icebp
cltd
jmp
scas
sub
scas
inc
pop
mov
inc
mov
add
dec
rcl
aaa
lcall
mov
pop
mov
xchg
or
jb
cmp
and
push
dec
fistl
push
mov
in
push
jl
mull
push
stos
fsub
and
scas
rclb
inc
rclb
mov
sbb
aam
stos
call
dec
cmpsb
mov
xchg
add
cmp
call
fwait
mov
sahf
icebp
inc
test
pop
repnz
add
cmp
sahf
xchg
xchg
cmc
xchg
jae
mov
iret
test
jns
cmp
add
cmc
mov
and
sbb
adc
mov
pop
pop
nop
inc
cwtl
pop
xor
dec
cwtl
pop
pop
ds
mov
test
push
sbb
iret
jne
or
jo
fdivrl
inc
mull
dec
fwait
repnz
fst
mov
daa
mov
and
aaa
sub
rcl
mov
sbb
jmp
or
test
flds
int3
ljmp
jg
push
fwait
jecxz
xor
into
mov
arpl
icebp
dec
or
js
cs
jno
rorb
test
push
mov
je
imul
lret
aaa
fwait
cmpsb
jae
xlat
clc
sahf
pop
sbb
leave
dec
mov
xchg
pushf
ror
test
fcmovbe
dec
in
add
xchg
test
fsubrs
and
nop
mov
push
xlat
shrl
push
xchg
pop
mov
je
jns
inc
pop
push
jecxz
or
mov
mov
testb
cmp
shlb
jg
inc
insl
inc
and
cmp
daa
punpckhbw
rcr
xchg
jae
add
push
pop
notl
ret
cmpsl
scas
decl
and
add
and
ffreep
adc
inc
pop
stc
sti
scas
adc
adc
gs
inc
mov
dec
addr16
push
mov
mov
lds
aaa
xchg
sub
push
shll
out
or
std
jne
ljmp
or
cmp
xchg
outsl
push
pop
and
dec
mov
xor
jne
mov
adc
icebp
sahf
cmp
cmpsb
xor
pop
pushf
into
pusha
mov
sub
add
aaa
jle
into
push
repz
js
pop
popa
fisttpll
sar
out
lret
movsb
stos
mov
pusha
push
mov
fcoml
jne
mov
jne
adcb
in
xor
xchg
shlb
jecxz
dec
mov
repnz
in
ja
test
push
stos
adc
movsl
pop
jb
movsb
shlb
fs
mov
andl
repnz
push
outsb
xchg
mov
xor
sahf
adc
xchg
ljmp
popf
xchg
xor
pushf
dec
inc
jnp
fimuls
xorb
mov
xor
into
adc
movsl
lock
pop
icebp
lret
or
cmp
incb
imul
lret
mov
sbb
lods
pop
lods
or
enter
sbb
rcrl
and
cmp
test
sbb
scas
sbb
insl
int3
fisttpll
sub
mov
jge
mov
enter
mov
nop
icebp
rcrb
jbe
inc
or
add
loope
mulb
mov
out
add
fbld
mov
mov
cmp
sti
sbb
push
clc
or
in
sbb
pop
and
icebp
and
addr16
cmpsl
and
std
out
or
imul
or
dec
ds
push
xchg
imul
dec
xchg
imull
pop
inc
dec
aaa
pop
sub
add
mov
xlat
scas
dec
jecxz
test
imul
and
jno
femms
sti
sub
mov
inc
mov
lea
pop
and
loop
mov
mov
movsl
pop
or
push
cli
out
ljmp
ret
dec
jo
jne
or
cmp
rclb
outsb
adc
jne
sbb
pop
sti
test
fs
and
stos
push
push
mov
xor
test
imul
xor
pop
bound
push
mov
push
cmp
mov
xchg
scas
dec
fistps
mov
jne
dec
jo
push
dec
in
sbb
adc
scas
fs
xor
pop
cmpsb
mov
decl
loop
loop
jbe
mov
mov
xlat
and
pop
jecxz
push
inc
stc
jl
insb
mov
decb
or
cwtl
lea
scas
scas
lahf
ja
cmpb
sbb
aad
movb
dec
cmp
in
sub
xor
inc
mov
sahf
cli
adc
push
push
adc
dec
je
out
inc
sarl
xlat
stos
mov
xchg
mov
repnz
add
gs
mov
cmpsl
jmp
cli
push
std
add
pop
clc
lcall
dec
loope
sar
adc
mov
aas
add
push
outsl
out
sub
lret
inc
jbe
int
ret
lods
mov
mov
and
std
out
mov
push
ds
sub
addr16
ret
dec
fisttpl
out
pop
nop
sahf
loop,pn
push
jecxz
std
mov
loopne
jno
adc
push
icebp
dec
mov
inc
mov
mov
lahf
xchg
pop
xor
int3
jg
pop
pop
mov
pop
sti
sub
push
adc
fcmovnbe
sbb
and
incl
xchg
sbb
int3
je
cmp
mov
sbb
aaa
stos
es
int3
xor
push
insb
mov
cltd
xor
pop
jae
push
jbe
shrl
mov
out
mov
idivl
movsb
sub
mov
mov
pushf
mov
mov
push
mov
in
gs
es
jb
or
xor
mov
jecxz
mov
ljmp
xchg
xchg
xchg
pop
mov
ja
shrb
cmp
inc
xor
sub
mov
inc
iret
dec
pop
ret
into
sti
int
pop
nop
dec
cld
repz
and
movsl
sub
insb
fnsave
int
dec
dec
mov
cmp
test
ljmp
out
mov
sbb
hlt
cmp
add
inc
xchg
pop
fstpt
push
sub
lret
mov
std
popf
jno
je
mov
and
inc
add
push
push
jae
out
pop
repz
jno
out
neg
aaa
adc
xor
mov
push
sti
loop
scas
sub
fistl
pop
inc
outsb
inc
loope
mov
mov
repz
sub
decb
loopne
js
pop
fbld
das
mov
xor
cmp
mov
in
imul
pop
jno
add
ret
in
mov
inc
aam
in
lods
add
xchg
pop
je
add
cwtl
lods
dec
inc
sbb
rclb
or
ds
cmpsb
pop
nop
inc
adc
in
int3
or
cmp
sbb
mov
mov
repnz
pop
push
clc
addr16
stos
loopne
mov
mov
movsb
or
jne
incb
fucom
in
fs
and
mov
lcall
fsubs
mov
pop
pop
adc
cmp
lods
notl
sbb
dec
push
out
bound
out
or
jmp
jne
dec
or
ss
sbb
outsl
popa
pop
inc
scas
mov
dec
hlt
add
xchg
jmp
jnp
dec
xlat
inc
push
insb
sahf
shl
sub
cmp
push
out
or
sbb
stc
and
decb
push
insl
pop
scas
lods
popa
aaa
sti
adc
leave
mov
push
jecxz
jbe
cmp
sbbb
dec
in
mov
mov
add
lcall
in
xchg
in
jno
add
adc
mov
sbb
mov
add
pop
mov
jnp
pop
repz
push
ret
mov
mov
aam
lcall
cmp
inc
ret
inc
inc
fstp
push
xor
mov
outsl
clc
xlat
push
add
mov
mov
cmp
int
mov
call
xor
sub
push
dec
cwtl
add
xor
add
cmp
xchg
and
xor
mov
jae
and
mov
in
fsubs
sbb
mov
xchg
and
out
xchg
fstps
xchg
inc
rol
sub
shlb
jmp
mov
popf
in
repnz
roll
push
test
fcoms
mov
dec
mov
stos
adc
leave
mov
loop
jne
push
lea
ss
add
clc
test
mov
fsubs
std
mov
pop
daa
cmc
clc
shl
push
sub
and
imull
mov
jno
pop
sbb
mov
dec
lock
pop
ss
dec
fisttpl
pushf
or
cmp
push
test
xchg
scas
or
xor
rcrb
lahf
fiaddl
testb
push
xchg
movsl
int3
scas
inc
fistpll
sub
pop
adc
cmp
jae
popa
popa
test
jmp
push
mov
sbb
imul
inc
ret
pop
pop
gs
xchg
insl
cld
xlat
push
pop
hlt
imulb
inc
aad
sbb
cli
aam
sbb
push
jl
loop
dec
jno
mov
mov
dec
into
push
pop
arpl
inc
dec
add
ja
add
test
lret
stos
jno
rcr
in
dec
or
iret
pop
pop
loope
adc
mov
cmp
sub
std
add
in
and
and
outsl
loop
add
sub
sarb
push
lods
jp
shll
outsl
icebp
in
push
push
push
or
movb
and
mov
ja
push
xor
inc
sbb
out
sub
fcmovbe
inc
loopne
xor
outsb
pop
das
add
mov
xchg
loop
dec
push
mov
push
dec
movsl
adc
test
lret
sbb
out
xchg
cmp
hlt
ja
pop
in
inc
xorb
fcomps
mov
push
clc
cmp
and
pop
add
mov
negl
call
movsl
fldenv
inc
call
xor
out
enter
mov
pop
dec
cld
sbb
adc
test
mov
aas
hlt
lea
shlb
sub
inc
push
jmp
mov
or
inc
call
and
jg
aam
jl
or
pop
and
mov
push
or
push
inc
cwtl
push
movsl
data16
aas
jg
into
fs
rcl
movsl
pop
inc
and
stos
rclb
clc
int
js
sub
sbbl
and
lock
xchg
ret
cmpsl
pop
test
xchg
adc
in
mov
and
and
add
sbb
pop
cmp
shlb
sbb
loope
and
xchg
cmp
mov
sbb
inc
mov
or
mov
push
stc
dec
lcall
rclb
mov
cltd
call
cmp
cmc
or
cmp
clc
stos
cmpsb
push
cmp
inc
push
pop
jb
bound
xorb
ret
pop
imul
xchg
xchg
inc
mov
pop
pop
cwtl
sbb
or
adc
in
fdivs
jne
std
mov
sbb
dec
fnstsw
fnsave
cmp
push
inc
push
jecxz
je
inc
sbb
adc
mov
jo
push
push
lea
test
outsb
sub
mov
adc
pusha
fucomi
cmp
mov
les
and
or
std
cmp
and
and
fsubrl
rcrb
mov
iret
orb
mov
mov
mov
mov
je
sti
test
insb
inc
push
bound
xchg
out
jle
xchg
clc
mov
aaa
and
jae
push
jns
loope
push
xchg
int3
sahf
inc
jecxz
pop
xor
xor
imul
test
mov
cld
jae
fistpll
lock
inc
cs
push
incb
stc
fnstsw
xchg
and
xchg
fs
adc
mov
mov
push
xor
cmpsl
inc
icebp
loope
jne
test
rolb
rolb
or
insl
movsb
lahf
sub
pop
cld
rcr
push
xchg
icebp
loope
xchg
enter
fdivrl
push
ficoms
sub
cmp
fnstcw
aam
jne
sahf
mov
mov
cwtl
es
leave
and
cmp
ret
mov
inc
addb
or
fadds
shl
push
lods
aam
and
je
cmp
cmc
jg
add
push
cld
add
xor
adc
lret
unpcklps
xchg
iret
stc
jnp
mov
cmc
insb
cmpsl
push
or
push
movsl
cwtl
mov
push
fidivl
js
in
lret
adc
dec
add
add
and
bnd
inc
adc
pop
lret
xchg
dec
sub
in
pushf
fmulp
jmp
aas
cld
bound
test
xchg
js
pop
popf
jbe
jmp
pop
out
mov
mov
imul
cmpsl
xchg
jns
pop
adc
cmp
stos
inc
or
mov
inc
dec
jnp
fwait
xor
add
adc
cmc
push
dec
fildll
or
fwait
xchg
and
lods
iret
xchg
popf
lds
in
hlt
movsl
int
mov
ss
adcb
test
xchg
and
cmp
scas
das
loope
lcall
mov
lret
leave
mov
out
je
bound
xor
lea
jl
or
in
gs
outsb
push
enter
push
mov
adc
xor
call
adc
gs
inc
out
add
mov
inc
je
lods
cli
in
popa
loop
sub
adc
in
pop
xchg
orl
and
pop
repz
adcl
lods
mov
dec
leave
jle
dec
pop
test
int
cmc
test
xchg
xchg
xor
aaa
rorl
inc
adc
call
or
in
or
and
mov
cmp
mov
mov
scas
jl
jl
cmp
or
adc
mov
or
pop
push
push
dec
rcl
les
pop
mov
repz
xchg
mov
imulb
mov
push
test
jne
inc
lods
xchg
push
adc
ret
mov
iret
nop
cmpsl
and
push
loopne
jne
cmp
out
cmp
add
xor
xchg
and
jne
push
testl
xor
or
pop
fsub
mov
inc
cli
cs
mov
out
mov
mov
adc
push
mov
xchg
cmp
sahf
scas
push
aam
jl
iret
divb
lock
in
mov
push
stc
or
popf
test
sbb
aaa
or
mov
lret
shrl
inc
mov
jle
fsub
shl
dec
push
and
dec
pop
mov
into
jecxz
incb
jl
in
push
cmpsb
fisubs
jnp
aad
lods
pop
fmul
xchg
adc
push
and
ss
fldcw
popf
sbb
movsb
bound
pop
popf
cmc
push
and
sbb
dec
loope
test
add
aas
sub
mov
pop
bnd
sbb
mov
mov
mov
nop
andl
vpunpcklwd
jbe
mov
mov
shll
and
mov
mov
outsl
and
add
lods
xchg
scas
dec
sub
fs
pop
sarb
mov
les
loope
les
push
pop
pop
ljmp
test
iret
imul
sub
pop
cmp
fisubrs
mov
leave
stos
fdivr
fld1
inc
mov
jle
stos
or
or
push
aas
ret
cld
roll
sbb
jge
sbbl
sahf
out
loop
xchg
cwtl
mov
inc
push
movsb
mov
in
push
cmp
sub
arpl
xor
sti
mov
movsb
dec
leave
and
push
mov
mov
dec
cld
push
sbbl
mov
pop
andb
insb
orl
insl
mov
popa
aad
leave
pop
sub
adc
aad
jg
inc
loopne
mov
adc
je
dec
ds
sub
add
bound
stos
insb
cmpsl
jnp
xlat
imul
mov
adc
out
icebp
movsb
pop
mov
movl
and
rol
inc
jb
out
imul
adc
mov
and
sahf
add
lret
dec
or
jmp
sbb
jbe
sbb
dec
aam
cld
mov
jmp
or
rcll
adc
movsl
sub
mov
sub
cmp
or
lds
add
into
lret
push
ljmp
push
mov
insl
cltd
cli
cli
jge
ljmp
insb
and
dec
dec
xor
nop
mov
in
scas
add
mov
push
insl
dec
xchg
xor
push
pop
int3
dec
or
das
sbb
jp
mov
jge
movsb
xor
imul
test
ja
sub
aas
jmp
repnz
add
cmp
push
in
in
cmc
out
jns
es
mov
out
cmpsl
lret
mov
pop
add
xchg
inc
cli
std
mov
or
push
shrl
dec
ret
sub
xchg
lahf
mov
data16
dec
mov
mov
iret
lea
mov
jno
addr16
std
jno
mov
jnp
mov
scas
cmp
and
fdivp
push
sub
pop
in
add
sub
sbb
fcmovb
dec
fwait
bound
mov
jno
adc
andb
ja
adc
xor
sbb
jbe
push
and
xchg
push
dec
scas
scas
sbb
outsb
inc
xor
call
jne
repz
push
sub
xchg
jb
inc
sti
jae
push
cwtl
mov
dec
or
jae
imul
jge
and
dec
mov
jle
and
cmp
mov
insl
adc
xlat
data16
cmp
movsb
movsb
inc
outsl
inc
cmp
and
dec
add
inc
sub
pop
popa
jnp
fidivrl
add
lret
fildll
andl
lcall
cld
sarb
sbbl
xchg
ljmp
sahf
dec
xchg
sahf
mov
push
jmp
popa
cmp
rclb
xchg
pop
imul
mov
adc
out
out
xor
clc
mov
jmp
jb
into
in
sub
ret
popl
ss
lds
mov
ror
lds
push
push
iret
jp
and
out
pop
jne
xchg
pop
pop
adc
shll
jmp
movsb
mov
popa
or
inc
negl
cltd
lock
pop
popf
je
movsl
or
dec
adcb
mov
pop
mov
ret
mov
add
fcomip
xchg
jg
or
sti
sub
das
out
lea
sub
sub
lret
mov
dec
jns
movsl
or
std
ret
hlt
lret
xlat
imul
jnp
inc
jmp
mov
fcomps
pop
mov
and
push
je
hlt
mov
jecxz
dec
rcl
fdivrp
roll
add
jmp
jns
loop
shll
loope
mov
leave
push
mov
sbb
test
mov
cmp
es
cmp
popa
add
xor
cmp
ficoms
inc
fwait
sbb
pop
push
pop
lock
pop
testb
adc
jno
xchg
test
mov
cltd
or
cmp
je
xchg
push
and
dec
repnz
pop
mov
dec
dec
cmp
ss
fwait
test
jg
push
push
ret
ja
jp
ljmp
and
aam
fistpl
mov
add
push
and
aad
mov
push
negb
mov
jg
jle
das
stos
lret
mov
imul
icebp
mov
movsl
mov
loope
scas
bswap
cmpsl
cltd
repz
test
lods
sbb
jo
xchg
mov
cmp
jo
lds
pop
jle
and
and
or
daa
out
xchg
in
or
add
pop
les
xchg
or
jle
jne
push
xchg
or
addr16
sub
jge
pop
inc
setb
cwtl
xchg
inc
aad
fsubrl
pop
cmp
arpl
add
sub
sti
push
in
inc
mov
or
jp
movsl
mov
push
call
jmp
ja
xchg
adc
xchg
je
test
mov
fisttpll
outsl
sub
mov
mov
cmp
repnz
cmp
lcall
dec
test
out
arpl
inc
mov
notl
add
jbe
into
shl
add
iret
sbb
mov
imul
jae
cmp
andb
sar
or
xor
das
sbb
cwtl
hlt
sti
xor
imul
insb
adc
icebp
pop
cwtl
imul
imul
inc
push
cmp
pop
hlt
jl
sbb
js
pop
leave
dec
divl
push
cmc
inc
xchg
dec
cwtl
mov
pop
fcompl
mov
inc
sub
and
lret
jge
or
sub
cmpsb
lahf
cli
pop
cmc
lcall
push
jne
jg
stos
fidivrs
dec
out
cmpsb
or
fcompl
rorb
inc
jg
rolb
pop
clc
lods
cs
lods
add
scas
adc
dec
sbb
lahf
adc
in
sub
pop
push
shl
aas
dec
fcom
scas
xchg
sarl
bound
xor
bound
out
jo
and
in
sbb
push
mov
loop
fucomip
fnsave
daa
popa
adc
cs
data16
cmpsl
repz
shlb
mov
sub
rcrb
mov
pusha
rolb
inc
lock
adc
dec
into
add
das
cmovae
inc
fcmovnu
mov
outsb
inc
pop
lret
sti
lock
jb
pop
pop
data16
rcr
mov
push
loope
jo
add
xor
add
repz
mov
or
loopne
lret
xchg
and
mov
nop
mov
repz
mov
enter
test
inc
adc
jl
or
inc
sub
xchg
testb
hlt
xchg
dec
in
fmul
pop
mov
stc
cmc
inc
data16
inc
mov
arpl
dec
and
icebp
ss
in
and
mov
pushf
in
jns
sub
inc
jae
jns
add
mov
in
js
push
fdivrp
push
mov
jmp
cmp
mov
ljmp
jmp
pop
inc
inc
faddl
adc
push
or
push
sbb
das
std
mov
notl
or
daa
inc
sbb
std
addr16
pushf
movsl
test
mov
sbb
sbb
xor
mov
insl
pop
lret
cmpsl
pushf
and
ja
cmp
sbb
mov
mov
sub
and
xchg
cmpsb
mov
pop
push
jo
repz
or
es
stos
push
out
js
pop
push
cmpsb
xor
mov
mov
repnz
push
sahf
jg
enter
fs
and
scas
fsts
cs
mov
insb
lds
push
ret
inc
in
cmp
int
int3
loopne
push
sbb
lods
mov
pop
mov
and
jb
lret
cmp
sarl
xchg
jbe
cmp
mov
pop
or
sbb
call
jmp
aad
pusha
xchg
cmc
cmp
stos
aaa
cmpsl
dec
stos
loop
insl
outsl
dec
leave
mov
in
int3
push
mov
pop
dec
in
or
in
add
sub
jno
inc
repnz
sub
xchg
sbb
adc
add
cmp
addr16
xchg
jmp
jmp
and
stc
int3
mov
inc
repz
lea
das
sahf
aad
dec
pcmpeqd
and
jecxz
mov
jae
lods
and
sbb
pop
xchg
imul
fisttpll
flds
fs
add
add
cld
or
xchg
lock
scas
xchg
mov
pop
inc
out
add
and
xor
or
fcmovnbe
and
and
cld
out
ss
jl
lahf
dec
push
mov
int
add
mov
pop
ret
in
out
xor
cmp
lock
mov
cmp
into
sti
mov
mov
push
cmp
fnsave
lret
mov
dec
lea
sub
add
rolb
sbb
jne
pop
add
lea
jnp
sbb
into
sub
repz
nop
or
cwtl
xor
adc
xchg
faddl
sbbl
sar
pop
or
mov
sub
jg
popl
inc
imul
lcall
mov
sbb
inc
les
mov
call
cmp
ss
xchg
test
popf
loopnew
dec
das
add
dec
js
imul
xchg
inc
or
cmp
mov
arpl
mov
loopne
je
insl
pop
sub
pop
inc
inc
stos
pop
fwait
jbe
ret
xchg
fsubl
pop
xor
add
sbb
mov
addl
mov
out
sub
jecxz
pop
pusha
clc
pop
jb
xchg
daa
cmp
pushw
aaa
jp
xor
xlat
mov
cmp
dec
shrl
pop
cmp
dec
xchg
xchg
loopne
aas
mov
sbb
aaa
pop
pushl
pop
mov
sbbb
inc
in
lret
pushf
sti
push
xchg
sbb
pop
movsl
xor
dec
dec
pop
add
inc
mov
jge
lods
pop
or
jnp
pop
enter
test
xor
sbb
stc
jle
int3
insl
mov
pop
repz
xlat
fmuls
sti
dec
stc
dec
std
in
clc
ret
mov
add
jnp
stos
dec
and
inc
je
xlat
cli
data16
push
and
inc
test
fcmovb
mov
push
adc
mov
inc
popf
inc
dec
jbe
mov
sbb
jbe
repz
bound
add
add
mov
mov
inc
dec
int3
inc
es
sbb
jmp
add
mov
ret
mov
ljmp
rcrb
or
insl
arpl
mov
and
mov
stos
adc
daa
shll
pop
or
jg
dec
sub
inc
loope
mov
xor
xor
es
pushf
jne
add
repz
cmpsl
gs
xchg
out
pop
jb
mov
das
rorb
dec
nop
dec
xor
push
mov
repz
inc
jecxz
aad
fsub
in
lahf
adc
into
pop
flds
and
cmpsl
or
or
mov
stc
dec
xchg
cmpsb
adc
test
mov
mov
xor
inc
imul
in
jecxz
mov
add
fdivl
loop
enter
or
cmp
xchg
xor
push
fs
out
mov
inc
sub
cmc
inc
mov
xor
push
adc
lods
inc
imulb
mov
sbb
les
mov
pop
push
loop
xchg
mov
push
icebp
xchg
pop
incl
pop
outsb
test
std
clc
mov
pusha
pushf
lcall
stc
mov
test
rolb
pushf
sbb
xchg
jns
pcmpgtd
in
jmp
fiadds
inc
cmp
sti
inc
jne
adc
add
sahf
bound
lcall
das
sbb
arpl
adc
sbb
cmpsl
xor
cmp
mov
pop
sub
push
cmp
cmp
fwait
mov
es
or
mov
adc
or
in
mov
mov
les
pop
lods
inc
lods
lret
dec
push
or
pop
push
sub
ret
mov
inc
cmp
cmpb
subl
adc
xchg
mov
rcrl
dec
mov
addb
xchg
jecxz
decl
push
shl
aaa
inc
pop
add
test
dec
sub
push
testl
mov
jle
pusha
fsubr
or
testl
xchg
ja
push
jnp
and
add
fnstenv
frstor
fwait
aam
jnp
into
jge
add
cmp
cmp
lcall
js
arpl
sbb
dec
xchg
lods
xchg
xor
mov
cmc
mov
loopne
fwait
pop
mov
clc
aam
out
les
ljmp
flds
dec
sub
loop
hlt
push
cmpsl
test
inc
loope
mov
test
add
es
test
aad
rorl
sbb
jg
pop
add
mov
shlb
ret
addr16
mov
bound
pop
sbb
sbb
repnz
call
lock
jnp
xchg
movsb
mov
outsl
jmp
lods
mov
add
xchg
and
xchg
movl
fcmove
mov
inc
add
addr16
push
dec
sahf
sbb
sbb
cld
insb
rol
aaa
bound
or
xchg
aaa
sub
push
aam
add
mov
mov
pop
leave
cltd
push
xchg
or
es
mov
push
add
sbb
push
dec
xchg
mov
sub
push
cmp
mov
mov
pop
repz
pusha
ret
mov
or
lret
repnz
cmp
mov
sbb
dec
cmp
fs
sbb
aaa
push
ljmp
jbe
loope
nop
adcb
fbld
aas
sub
in
xchg
cmc
mov
jne
mov
mov
mov
sbbb
jb
mov
mov
int
insl
jnp
cmp
dec
outsl
cmpb
and
sub
into
movsb
das
test
pop
in
rolb
ret
jae
pop
and
stos
and
jbe
movsb
ret
outsl
mov
mov
or
ficoms
cmp
lahf
dec
sub
movsb
das
lods
jmp
lahf
repz
arpl
cmp
jo
scas
lahf
xor
dec
mov
add
incl
in
loopne
in
ss
divb
mov
fmuls
shrb
or
sub
jmp
push
pusha
add
in
mov
mov
lret
int3
cmpsb
mov
push
in
cwtl
xor
adc
cli
xchg
insl
out
adc
std
jno
mov
push
insb
test
sarb
iret
lods
inc
movsl
jge
adc
movsb
mov
call
pop
xchg
jecxz
es
sbb
add
stos
jg
or
sub
mov
jp
mov
js
clc
int3
lret
sub
clc
mov
out
enter
pop
ret
sbb
out
adc
cs
es
stos
jmp
outsb
dec
cmpsl
jl
sbb
xchg
divb
lock
dec
sbb
int
inc
push
xchg
cmpsb
xlat
rep
sbb
cmpsl
fiadds
pop
scas
sub
jno
mov
lods
cmp
lret
jne
and
adc
ss
cmpsl
push
aad
adc
test
push
mov
jmp
mov
inc
jmp
filds
les
imul
mov
lds
push
lret
pop
ljmp
cmc
cld
test
fdivrs
jecxz
movsl
dec
ja
dec
sbb
adc
cmp
stos
movsl
or
adc
jmp
mov
lret
stos
xchg
mov
cltd
xor
lock
or
movsb
mov
push
and
jne
push
xor
and
adc
mov
lock
cmpb
lds
loop
cmp
adc
jecxz
icebp
inc
mov
jae
xchg
jmp
sub
dec
mov
add
sarl
dec
in
xchg
scas
fstpt
aas
sub
push
les
push
out
pop
jo
inc
repnz
fmulp
jnp
sbb
add
mov
repz
enter
js
imul
aad
pushf
sbbb
cwtl
xchg
stos
rorb
out
and
dec
lret
subb
push
cmp
gs
push
fwait
sub
call
movsl
es
fdivr
jne
inc
mov
pushf
jle
fiaddl
adc
cli
pop
jae
icebp
ljmp
mov
add
sub
out
das
inc
inc
dec
jmp
mov
push
sub
sbb
insb
fbld
std
cmp
sub
jge
pusha
xchg
out
out
out
xor
xchg
clc
fnstenv
pusha
fcmovb
xor
call
in
int
fdivrs
dec
mov
and
stos
mov
pop
or
jns
mov
add
and
inc
ja
mov
dec
cltd
imul
pop
push
adc
jmp
ja
dec
push
dec
jb
cmp
in
jnp
push
xchg
scas
in
in
adc
fs
cmp
je
push
js
and
or
sbb
fidivrl
loope
out
xorb
xor
and
fnstcw
ficomps
sub
int
mov
xor
popa
fisubl
lret
int3
or
sbb
sbb
cmp
jge
and
mov
jno
adc
iret
sbb
ds
xor
xchg
sub
and
dec
cli
inc
sub
pusha
or
popa
sbb
insb
lea
lret
or
lds
xor
out
push
hlt
js
movsl
jns
add
cltd
ficompl
inc
mov
sahf
add
imul
out
mov
pop
movsl
enter
or
push
fwait
xchg
cli
mov
cltd
sbb
add
lahf
imul
loope
cli
rcr
sub
lahf
push
subb
hlt
jge
icebp
shrl
jl
out
dec
or
push
jl
or
cwtl
aad
stos
fiadds
loope
and
mov
scas
jno
push
fst
xor
fistpll
jge
mov
cmpsl
mov
dec
xchg
clc
lods
inc
cwtl
push
pop
in
jg
add
aam
inc
jo
xor
xor
mov
movl
or
pushf
pop
jge
add
negb
je
push
std
inc
mov
jno
mov
cmp
mov
int3
cmpsl
push
sti
in
insl
jecxz
adc
inc
push
es
je
dec
lods
loope
fpatan
add
dec
or
rcrb
into
pop
fildll
pop
iret
push
out
mov
dec
lock
or
inc
imul
xor
rorb
push
es
pop
add
mov
mov
sub
push
xchg
fcom
clc
loope
data16
test
mov
cmp
jns
add
xchg
ret
mov
or
and
rcl
jg
push
xchg
repnz
pop
addr16
xchg
jbe
adc
loop
dec
and
jae
push
nop
aaa
popa
adc
jl
das
and
clc
mov
dec
es
fadds
mov
popa
cltd
std
push
lcall
hlt
out
pusha
lret
and
or
icebp
arpl
cmp
push
lea
loope
iret
cmpsl
rcll
sbb
jmp
inc
insl
sbbb
ds
sub
mov
adc
test
mov
pop
pop
xchg
mov
and
in
inc
adc
mov
divb
sbb
mov
in
mov
dec
insl
push
push
pop
imul
mov
push
in
cmp
sub
or
xor
testb
xrelease
inc
jg
repz
xor
pop
enter
mov
test
and
xor
xchg
sahf
mov
xor
and
out
inc
fsubl
ss
loopne
js
lret
or
lcall
cli
je
sti
loopne
and
add
cltd
lods
lahf
jge
sub
aad
roll
fwait
icebp
test
bound
mov
pop
out
sub
mov
cmp
adc
mov
cld
cmp
cmc
inc
add
popf
pop
aas
aas
jmp
call
jno
dec
dec
rcr
psubd
divb
repz
pop
outsl
test
xlat
mov
add
test
inc
cmp
nop
cmp
sbb
jno
shrl
mov
fs
add
or
mov
popa
push
std
or
loop
cmpb
pop
xchg
adc
in
into
movsb
dec
pop
les
xchg
and
rol
daa
xchg
ja
arpl
push
cmp
and
test
mov
daa
dec
outsl
hlt
bound
jle
je
das
je
jnp
fwait
add
lods
dec
jne
fcoml
lods
mov
into
lahf
mov
jno
out
fucomp
pop
sbb
ficompl
mov
fs
inc
arpl
rclb
and
sbb
cmpsl
cld
lods
or
mov
fstps
or
dec
mov
cmp
lods
and
rcr
movsl
mov
and
push
arpl
jle
mov
mov
and
mov
lcall
xor
mov
into
inc
xlat
pusha
jg
test
cmp
je
push
fbstp
nop
sub
divb
mov
mov
lock
push
aam
cs
ja
jnp
mov
pusha
lret
push
push
and
shlb
lods
add
mov
mov
sub
cmp
lcall
int
jb
and
mov
sbb
pop
aas
mov
sbb
ja
lds
pop
pop
je
dec
add
sub
jg
scas
and
xlat
outsb
push
push
rolb
imulb
pop
xchg
jle
pusha
nop
and
xchg
fistl
add
aam
test
stos
adc
xchg
andb
aas
enter
mov
mov
xchg
cmp
mov
arpl
xor
inc
movsb
add
lods
adc
scas
lea
mov
jae
push
jge
loop
je
addr16
in
jnp
mov
stc
in
in
add
aad
fcmovne
adc
jg
jae
add
leave
ficompl
cli
and
ficompl
or
pop
punpckhdq
mov
mov
enter
mov
mov
sbbb
aaa
inc
aas
inc
or
rcrb
add
cmp
insl
mov
ljmp
push
rcrb
xchg
mov
jns
mov
jno
rcrb
fsub
sbb
lock
adc
pop
call
dec
push
scas
cmp
mov
pusha
fdivs
jecxz
mov
mov
xchg
out
inc
or
or
out
aas
xor
push
loopne
out
outsl
mov
das
outsl
fisttpl
cmpsl
xchg
jle
jmp
lcall
clc
loopne
cli
add
push
mov
stos
ljmp
in
sbb
out
mov
mov
pushf
mov
mov
fstpl
xor
fwait
jbe
and
xchg
aaa
pop
lock
stos
fisubs
inc
daa
inc
cmpsl
lret
fimuls
jmp
ss
mov
incb
mov
cmpsb
icebp
mov
loope
fdivl
ret
inc
gs
fwait
aam
lock
cmpb
leave
push
in
inc
mov
xchg
mov
sub
adc
jmp
xchg
aad
loop
mov
enter
pop
jo
sarl
mov
mov
cli
dec
and
int3
lods
add
adc
imul
lds
push
mov
inc
fldt
fnstsw
and
add
inc
dec
fdivs
adc
adc
dec
repnz
xsaves
mov
pop
inc
push
mov
push
mov
sub
ret
inc
stos
lods
ss
mov
sbb
outsl
inc
mov
xchg
mov
pushf
xadd
std
pop
loopne
out
frstor
fcompl
mov
test
and
mov
mov
jl
mov
test
cmp
mov
or
sub
enter
pop
leave
mov
sti
test
aaa
jg
lods
cmc
add
cmp
dec
in
repnz
mov
js
roll
lret
xor
dec
add
push
cld
in
popa
cmpsb
leave
lcall
and
andl
jmp
cmpsb
mov
hlt
push
mov
shll
pushf
rorl
push
js
or
fstp
imul
push
lods
loop
jno
xchg
mov
aaa
adc
call
jg
push
xor
pop
idivb
mov
sub
jl
lock
clc
xchg
xor
sbb
cs
and
mov
in
gs
xor
test
inc
cmpsb
add
fldl
jo
lods
xchg
scas
jmp
pop
mov
imul
int
scas
addl
divb
out
inc
xlat
sub
sbb
jbe
stos
ds
fstl
sahf
or
aaa
das
sti
imul
mov
jl
cmp
cmpsl
ret
cmpsb
adc
xchg
xor
cld
push
pop
jne
shrb
xchg
rcr
mov
leave
dec
push
jo
stos
scas
in
cmp
dec
mov
push
adc
movb
stos
inc
add
mov
cmc
lcall
fstp
rolb
ret
and
out
mov
pop
enter
cwtl
jns
sub
mov
stc
cmp
les
lods
and
imul
jb
cltd
sub
lret
inc
pop
add
sbb
sbb
add
mov
xor
cmpsl
lcall
xchg
lahf
loope
jp
mov
lret
cmp
jnp
xchg
out
ret
shrl
adc
and
into
lret
mov
daa
adc
xor
ret
mov
cmp
mov
sub
cld
test
cld
aam
test
xchg
je
or
rorl
test
jl
adc
push
cmp
xor
cwtl
mov
lods
jecxz
loope
jno
xor
push
bound
popf
rep
inc
xchg
jnp
je
add
adc
or
inc
sbb
mov
roll
imul
aaa
cwtl
xchg
mov
popf
jno
lock
stos
loopne
mov
fcmovnu
xchg
adc
adcb
test
cwtl
loope
ljmp
jl
fdivl
ljmp
cmp
sbb
mov
push
adc
arpl
jb
and
push
cmp
cmpb
xor
fcomps
push
subl
push
or
fs
loop
fldcw
mov
pusha
mov
xchg
mov
repz
cmp
cli
fildl
inc
fwait
mov
dec
add
xor
pop
xor
mov
fsts
sbb
sbb
outsb
and
xor
mov
mov
xchg
adc
mov
mov
push
pop
jbe
pop
stos
and
pop
fistps
test
bound
mov
rorl
jp
inc
or
cmp
lahf
xor
arpl
leave
jbe
inc
addr16
inc
inc
xchg
aam
xor
lods
lahf
xchg
sar
aaa
sub
cmp
inc
into
cmp
mov
rorl
sarl
xchg
ret
scas
test
inc
test
or
outsb
jbe
jmp
gs
nop
or
fidivs
es
jecxz
addr16
and
divb
icebp
adc
inc
xor
fsub
mov
or
jno
cmp
pop
fwait
test
mov
movsb
adc
movsb
and
lods
ja
es
popa
push
iret
in
and
bound
mov
xchg
in
inc
cmp
paddusw
dec
push
push
pop
push
push
icebp
fwait
shl
rolb
cmp
jae
xchg
mov
pop
cmc
nop
enter
ja
jecxz
data16
pusha
scas
inc
adc
xor
out
nop
and
adc
adc
mov
mov
dec
aad
insb
sbb
or
xchg
cmp
scas
add
dec
stos
mov
sub
dec
rorb
fldl
repnz
pop
pushf
ss
xchg
add
popf
lahf
movsl
icebp
rcrl
out
inc
dec
mov
push
loope
gs
cmp
aas
adc
shrb
mov
dec
add
mov
pusha
jne
rcll
xor
mov
xchg
pop
lods
mov
mov
stos
sbb
shlb
xchg
pop
sbb
rcrb
pop
push
lods
add
xchg
imul
paddb
pop
add
push
mov
pop
inc
imul
cmpsb
fimuls
je
add
outsl
pop
mov
enter
sub
push
cmp
push
add
call
inc
insl
dec
lret
iret
test
fldl
lods
cld
cmp
dec
and
inc
data16
lods
shll
ja
insl
cmp
xorl
fwait
imul
jmp
sub
cmc
push
mov
fwait
insl
cmp
jne
std
adc
xchg
push
and
jmp
outsb
adc
mov
add
jnp
cmp
pushf
je
inc
push
adc
stos
jg
dec
insl
xor
rolb
daa
imul
sub
decl
xor
mov
gs
mov
ja
push
enter
cmp
push
mov
imul
roll
lds
loope
push
pop
mov
cmpsl
jecxz
nop
cwtl
xchg
push
mov
fldenv
hlt
inc
into
cmpsb
push
push
cmp
inc
xor
aas
and
cmp
mov
enter
insb
addl
pop
test
imul
aas
sbb
lret
in
cmp
es
xchg
cmpsl
test
subb
push
rcr
push
push
and
mov
inc
fadds
jbe
mov
cli
mov
pusha
mov
cs
fnstcw
imul
sbb
xlat
jb
cmp
sub
cwtl
fldenv
push
loope
pop
js
pop
or
lods
add
dec
fidivl
mov
jne
enter
push
hlt
push
daa
test
or
dec
pop
cltd
push
jmp
imul
xor
lods
sarl
outsb
iret
pop
inc
push
mov
or
sub
arpl
push
sub
out
inc
add
push
mov
outsb
jge
pusha
out
push
lods
cmpsb
mov
data16
cmpl
adc
clc
cmpsb
mov
xchg
xchg
call
or
inc
or
out
movsb
mov
jmp
into
push
rol
mov
mov
and
push
cmp
sbb
out
in
or
int
jecxz
push
scas
outsb
dec
xchg
push
addr16
mov
pushf
mov
inc
shl
outsl
pop
mov
pop
pop
test
popa
xchg
mov
insb
xchg
pop
aad
mov
xor
sbb
adc
fdivrl
xchg
jnp
neg
out
scas
dec
icebp
inc
ss
or
pop
xchg
aaa
mov
cmc
xchg
xchg
xor
inc
lock
jl
pop
mov
adc
jl
out
or
out
add
popa
pop
mov
lock
inc
imul
jbe
fisubrl
movsb
cld
fwait
fwait
push
lock
iret
dec
mov
cmpsb
adc
in
push
sub
cmp
push
jecxz
imul
mov
insl
push
fmul
sub
jae
jg
or
sbb
nop
in
dec
int
mov
cli
pop
mov
int3
shlb
mov
xor
xlat
pop
loopne
jne
cmp
lds
xchg
and
mov
xor
mov
pop
addb
mov
push
jns
mov
xor
iret
mov
pop
stos
cwtl
cmp
mov
jnp
mov
inc
popf
ret
out
lcall
add
ja
push
sbb
std
dec
xchg
lea
in
imul
mov
ljmp
or
inc
insl
jb
mov
xor
cmpsl
stos
mov
ret
or
jbe
xchg
push
int3
lods
fidivrl
jg
push
inc
outsl
aas
xchg
lahf
fstpt
push
ret
std
xchg
mov
xlat
mov
add
test
push
and
inc
lods
lahf
fstps
dec
stc
sub
inc
or
lock
rolb
jmp
scas
rorb
mov
mov
scas
or
cli
inc
push
cmp
add
jmp
rcll
outsl
add
mov
pop
arpl
stos
pop
xchg
lret
test
movsb
cmc
lret
xor
jl
rcrb
mov
inc
xchg
jge
mov
mov
adc
or
push
sbbl
aam
inc
xor
fildl
sub
dec
int3
xchg
inc
cltd
fnstsw
sub
mov
cltd
stc
xchg
roll
mov
mov
es
or
mov
mov
push
and
jnp
add
nop
mov
pmulhw
jb
pop
mov
inc
jo
push
mov
out
rep
mov
jno
inc
sub
sbb
cwtl
lahf
leave
push
adc
xor
and
enter
mov
pop
cmpsb
jp
rolb
inc
cmp
in
scas
lods
je
imul
cmp
mov
dec
sarl
pusha
aam
int3
push
jb
mov
mov
loope
test
mov
cltd
cli
out
lock
shr
jbe
jns
das
test
jne
jecxz
iret
outsl
sub
fldenv
push
xchg
cmc
inc
inc
xchg
cwtl
or
nop
ljmp
pop
inc
out
in
out
mov
fmull
gs
imul
inc
inc
and
push
inc
jno
test
add
lds
dec
cmp
bound
ss
lods
lds
pop
loopne
test
ja
mov
ret
jns
loopne
sub
xor
lret
pop
shlb
test
pop
cmp
aaa
or
xlat
lock
dec
into
adc
fwait
mov
xor
in
arpl
mov
adc
test
xchg
xor
xchg
nop
push
cmpsb
mov
dec
inc
mov
mov
cli
std
adc
push
mov
sahf
mov
push
push
mov
and
and
jns
add
mov
mov
adcl
rcrl
push
out
data16
xchg
ret
lret
lret
and
test
pop
fcomps
divb
leave
xor
icebp
push
and
or
adc
dec
jmp
adc
sbb
jl
pushf
gs
subl
aaa
repz
pusha
iret
mov
sbb
add
sti
lock
fs
imul
fimuls
stos
dec
aaa
inc
jmp
sub
icebp
pop
jae
xor
and
inc
dec
pop
stos
adcl
aaa
fnstsw
xchg
or
mov
mov
xchg
add
sbb
xor
les
or
push
and
xchg
inc
push
insl
sbb
in
xchg
in
insl
rolb
xor
rol
xchg
lret
add
pop
pop
daa
add
xor
sbb
mov
cmp
gs
fldt
dec
insb
divl
push
xchg
std
add
mov
inc
ficoms
scas
jbe
and
pop
fcmovnb
xor
sbb
cltd
int
jns
push
cmp
movsl
shrl
sahf
orl
mov
xchg
lea
mov
or
loope
mov
pop
xchg
jae
pop
jecxz
pop
fisttpl
shll
inc
out
and
mov
mov
lock
mov
iret
outsl
pusha
mov
mov
fisubrs
fwait
sub
sbb
xor
test
fwait
sbb
rcrb
pusha
fsts
pop
and
icebp
loop
push
cld
repz
sbb
sub
inc
adc
add
mov
sub
adc
cmpsl
std
dec
mov
lods
sbb
jg
addr16
push
std
mov
add
lret
or
or
mov
movsb
ds
mov
push
notb
mov
aaa
loopne
enter
mov
inc
test
incl
pop
jmp
sub
sub
dec
adc
aad
push
movsl
push
clc
add
cltd
or
in
jecxz
out
xor
add
mul
pop
fimuls
adc
and
sbb
lahf
mov
lahf
cli
cmpsb
sub
pop
pop
mov
ljmp
cwtl
push
jne
arpl
mov
divb
sbb
mov
and
clc
lahf
cmp
dec
lahf
xchg
jg
pop
xchg
pusha
pop
or
xor
adc
test
sbb
inc
dec
sbb
cmp
mov
xor
cmc
pop
sub
xor
pushf
sbb
addl
pop
mov
iret
xchg
xchg
fucomip
jnp
push
jmp
das
inc
in
lods
js
imul
sub
aas
inc
xchg
in
push
inc
jp
mov
jle
cmp
sub
pop
xchg
add
dec
or
sbb
pop
imul
and
sbb
imul
xchg
push
mov
addr16
jns
mov
sbb
data16
push
rolb
bound
xor
rcpps
mov
mov
jge
insl
decb
popl
sbb
mov
xchg
or
das
pop
test
loope
mov
push
testb
or
pushf
addr16
lds
icebp
testb
xchg
cwtl
or
lret
xorb
nopl
ljmp
loopne
push
push
mov
sbb
xchg
je
or
lods
dec
insl
push
cmp
sbb
inc
repnz
cs
loope
pop
mov
aaa
sbb
ss
jae
imul
int
xchg
loopne
xor
adc
xorb
sahf
adc
lret
cwtl
push
mov
das
jmp
dec
les
fnstsw
rcrb
pop
dec
shrl
xchg
ja
adc
in
addb
xchg
add
stos
and
sti
ficompl
mov
cwtl
cmpsb
icebp
mov
jbe
xchg
fiaddl
jecxz
rorw
in
fwait
sub
mov
out
imul
shl
xor
loop
shlb
mov
sub
insb
insb
dec
cwtl
aaa
pop
xor
mov
xor
popa
icebp
and
scas
or
cmp
scas
xchg
outsb
mov
jecxz
sub
inc
sub
idivl
push
stos
cmp
leave
aam
imul
mov
xor
bound
mov
lock
push
fdivr
jbe
gs
stos
cli
or
mov
popa
mov
pop
out
int3
mov
add
enter
clc
mov
pop
data16
mov
pop
push
push
mov
and
subb
fdiv
mov
repz
fs
mov
rorb
cmpl
sbb
add
push
jns
push
cmpsb
rcl
sub
dec
cmpsl
sub
mov
dec
jl
and
dec
xchg
cmp
cmp
add
movsl
fstps
cld
mov
leave
cmp
repz
decb
test
fcmovnu
pop
test
lret
cmp
insl
pop
mov
sub
scas
push
cmp
bound
test
cltd
mov
ret
lahf
inc
clc
xchg
xor
jo
and
cmpsl
mov
cmc
mov
mov
movsl
mov
inc
lock
nop
pop
test
or
lds
sbb
fsubl
outsb
adc
push
xchg
sub
sbb
into
mov
lods
sarl
int
and
mov
xchg
and
adc
bound
insb
lds
add
sbb
push
jg
ss
enter
ror
test
stc
push
lret
jae
cmp
js
jle
pop
jnp
or
cmpsb
cmpsl
or
lods
xchg
pop
das
out
pop
popa
push
aam
inc
xchg
fucomip
mov
or
ja
or
mov
outsb
mov
mov
in
scas
sbb
push
mov
xchg
sub
fsubrs
enter
dec
popa
mov
adc
daa
adc
dec
mov
aaa
aaa
scas
mov
ret
aas
insl
mov
cwtl
pop
popf
mov
enter
cld
push
sbb
rclb
es
dec
cmp
adc
cmp
and
xchg
adc
xchg
mov
lods
push
and
cs
ja
enter
mov
in
fs
lahf
jb
sub
into
mov
adcl
and
mov
mov
mov
cmp
jbe
mov
stc
in
mov
insl
dec
ret
les
pop
scas
mov
iret
mov
sub
mov
add
push
orl
xchg
daa
imul
mov
fwait
pop
jne
dec
push
mov
sti
fwait
pop
pushf
lcall
sub
push
test
cli
dec
int3
scas
dec
xor
sbb
inc
and
into
pop
mov
ljmp
loope
dec
incl
mov
test
je
xor
jmp
or
test
es
add
adc
arpl
insl
loope
test
xchg
stos
push
cmpsl
sub
dec
adc
inc
mov
mov
adc
xor
mov
xchg
stos
stos
ja
fistpll
sub
sbbb
xorb
xor
sahf
lds
xchg
dec
sub
fwait
push
mov
rcll
push
in
xchg
push
lcall
jle
shll
jl
out
cmovno
adc
aas
pop
cmp
cmp
scas
inc
mov
mov
repz
aas
or
outsl
fildll
pusha
popf
dec
xor
cmp
sbb
cs
lret
dec
and
sbb
adc
cmc
pop
test
cmp
push
stos
mov
xor
ret
or
add
xchg
pop
or
sub
mov
mov
xchg
aam
fwait
add
xchg
lret
inc
ds
mov
gs
mov
lea
push
sub
mov
sub
sbb
jns
jae
inc
pushf
mov
jnp
pop
sbb
fstps
add
shrl
jne
sbb
push
shl
pop
sbb
stos
inc
int
add
xchg
cmp
movsl
lcall
push
mov
cmp
push
mov
jmp
scas
stos
idivl
mov
jecxz
and
jl
xlat
jmp
mov
push
fdivr
ljmp
in
mov
sbb
mov
xchg
mov
dec
outsb
cli
xchg
sahf
add
test
sub
and
test
je
pushf
mov
stos
lea
repnz
test
out
push
xor
push
int
scas
mov
test
pop
rol
jge
pushf
or
js
and
cmp
inc
pop
dec
movsb
stos
ds
in
and
into
mov
mov
or
fildll
sbb
lret
and
sbb
or
push
mov
in
lret
cmp
push
pop
rcrb
mov
pop
and
mov
sub
jmp
cmp
xchg
sahf
or
ret
fwait
cld
mov
arpl
fiaddl
add
add
imul
loope
into
fwait
xor
add
cltd
ljmp
xchg
dec
arpl
push
and
add
pop
sub
inc
out
dec
call
incl
loope
jl
test
and
stos
sub
popf
xchg
mov
fs
sub
movaps
mov
and
xor
mov
adc
out
ja
push
cmp
xchg
cmpsb
dec
jge
aam
sbb
lret
aas
pop
cmp
int3
add
add
push
lahf
aam
adc
les
rcll
aam
cmp
xor
out
dec
cs
aad
adc
mov
cltd
sub
test
rcrl
mov
pop
leave
js
adc
sbb
ja
insl
inc
adc
dec
mov
mov
add
inc
add
loop
push
or
out
mov
push
clc
lret
dec
cmp
pop
jp
mov
cwtl
sub
jns
xor
test
sbb
pop
xchg
fldt
pop
push
jae
inc
mov
mov
loope
push
mov
sub
scas
dec
add
in
inc
inc
rorb
rcll
iret
mov
aas
jno
out
in
mov
pop
out
outsl
and
mov
add
ret
inc
sub
pop
mov
adc
cmpsb
sbb
mov
or
in
pop
mov
insb
cli
push
or
sarb
xchg
lret
scas
mov
jne
icebp
pop
fwait
aad
mov
subl
icebp
clc
pushf
sbb
and
pop
sub
outsl
lock
jnp
rcl
sahf
xor
inc
movsl
mov
popf
loop
into
add
repnz
in
dec
aaa
aad
mov
sbb
mov
inc
mov
cli
inc
andb
hlt
in
stos
add
mov
int
cmp
int3
jmp
faddl
inc
aaa
adc
out
add
jb
fimull
push
fsts
loope
mov
mov
mov
ja
adc
outsb
mov
rcrl
stos
sbb
push
repz
outsl
pop
es
mov
cmpsb
andb
push
out
sbb
insl
cmpsl
daa
icebp
mov
cmp
and
pop
push
cmp
cwtl
add
xchg
and
sub
es
adc
mov
ljmp
shlb
lcall
mov
xchg
jl
pop
jge
jne
inc
adc
sbb
negb
ss
rcr
mov
pop
pushf
repnz
frstor
leave
stos
mov
out
pop
lods
pusha
and
add
out
andb
ret
mov
scas
aad
popf
shll
mov
xchg
outsb
jne
dec
shlb
cs
cmp
or
mov
xchg
mov
stos
mov
lcall
ljmp
mov
mov
xchg
test
jle
lock
pop
insl
out
shrl
into
loope
or
push
sub
push
cld
test
xlat
ss
stos
into
dec
es
pop
popa
lret
pushf
ret
bound
push
inc
or
in
and
rol
ret
inc
mov
jno
pushf
push
andb
fdivrl
fnstenv
or
roll
pop
or
sub
sbb
imul
mov
mov
pop
rcrb
pop
stos
jge
pop
cwtl
xor
dec
jo
xor
imul
dec
jns
aam
loope
push
push
out
mov
mov
rcll
jno
sti
lret
mov
hlt
xchg
pusha
addr16
outsb
xlat
fs
push
xchg
ja
mov
rcrb
jae
and
pushf
pop
push
popf
test
sbb
inc
imull
out
cmc
movsl
data16
fmuls
adc
cs
popf
sbb
push
mov
aas
xor
jnp
and
push
arpl
mov
ret
out
or
insb
out
and
dec
or
add
push
es
enter
hlt
lods
int3
cmp
xor
out
dec
enter
clc
xor
fs
add
jp
and
lret
xor
jle
out
mov
mov
in
xchg
pop
push
jg
or
in
je
out
mov
fs
xor
imul
mov
jne
dec
jmp
cmpsl
jnp
fldl
popa
in
xchg
notl
sub
call
sub
sub
outsb
xor
in
out
jmp
mov
jle
insb
and
mov
pusha
add
dec
adc
or
pop
sub
push
or
mov
ret
sti
dec
dec
add
jl
adc
fwait
adc
insb
hlt
push
stos
cmp
fwait
dec
aam
loope
idiv
jge
in
dec
pop
cltd
into
mov
pop
xchg
hlt
scas
subl
mov
ret
ss
push
dec
cmp
iret
popa
test
lahf
je
stos
mov
leave
jge
mov
movzbl
pop
xchg
notl
push
stos
adc
lods
adc
leave
lret
sub
push
push
mov
sub
out
repnz
ret
adc
popa
repz
ja
jl
cmp
adc
mov
leave
movsb
xor
mov
inc
cmpsl
mov
movsb
jno
test
pop
popl
fiaddl
jge
inc
mov
aaa
mov
stc
push
out
iret
lock
pusha
add
stc
jg
jmp
mov
sbb
dec
or
mov
test
xchg
lcall
jmp
cmpsb
fs
js
cmp
sbb
push
xor
jmp
dec
sahf
enter
out
push
movsl
inc
decb
jnp
vpmaxub
mov
adc
int
inc
sbb
and
jne
test
adc
and
pushf
mov
jmp
or
ret
std
scas
cmp
cwtl
rcl
out
ss
xor
repnz
into
in
iret
iret
popa
sti
adc
jmp
fcoms
fsts
cmpsb
sub
cmpsb
xchg
cli
inc
mov
push
pop
loopne
jp
jnp
cmc
inc
lahf
jns
cmpsb
imul
imul
sub
cmp
stos
popf
das
pop
out
pop
imul
push
or
jle
mov
adc
sbb
xchg
sub
lcall
sbb
jg
sbb
shll
mov
xchg
ret
inc
xor
sub
negb
and
mov
push
stos
cmp
into
lods
rol
jmp
jns
push
js
or
pop
ret
sbb
cmp
and
sbb
enter
stos
xor
gs
aas
xlat
cld
push
mov
push
sub
lods
jo
and
adc
xchg
mov
inc
outsl
cmp
in
out
in
cmp
mov
jnp
pop
clc
push
cmpsb
cmpsb
jecxz
cmp
popa
xor
sub
mov
sub
lcall
les
or
mov
and
sub
push
push
or
clc
cmp
push
or
js
rolb
iret
mov
jmp
aaa
cmp
xchg
gs
in
xchg
sub
mov
add
fstpt
in
pop
ja
and
lock
dec
aam
dec
cwtl
fidivl
or
pusha
dec
mov
xor
push
jnp
aas
std
sarb
jae
xchg
jnp
lods
sub
xchg
je
aaa
push
add
adc
hlt
int
ljmp
in
jns
push
or
rcll
aam
inc
jnp
jbe
or
aad
jnp
jne
rorl
push
xor
gs
adc
lods
jge
jmp
add
or
xor
xlat
icebp
jg
insb
xchg
aaa
shrl
ret
mov
insl
cmpsb
roll
jge
or
sarb
push
lcall
jo
shrw
mov
loope
dec
xchg
dec
pop
pop
and
push
xchg
inc
and
js
pop
cmp
inc
icebp
int3
imul
xchg
mov
or
adc
inc
mov
nop
cmp
jecxz
dec
movsl
cld
pop
pmaxub
push
scas
cwtl
cltd
lahf
mov
sahf
cli
push
push
sahf
fsubr
sbb
out
test
js
shl
adc
inc
mov
je
xacquire
shlb
repnz
adc
les
dec
out
ss
cmp
pop
dec
das
stc
xchg
call
sub
cld
cmp
in
pop
cld
lea
mull
mov
dec
mov
xchg
push
ss
adc
arpl
xchg
shl
bound
icebp
push
push
mov
icebp
pushf
cmpps
adcl
jecxz
sbb
dec
sub
cmp
pop
adc
mov
sbb
ljmp
pop
in
jns
adc
es
fsubrl
adc
mov
sbb
push
pop
pop
mov
and
cli
inc
pcmpgtb
adc
bound
mov
jnp
int
popf
rcrb
dec
fld
mov
loop
pop
adc
push
jg
xor
scas
pop
jno
lds
sub
mov
xor
mov
and
inc
scas
scas
test
adc
aas
xchg
add
das
gs
fwait
adc
ret
bound
xchg
lret
pop
dec
push
out
jmp
fsubl
ret
rolb
mov
sub
filds
and
sti
mov
push
fldl
ret
mov
jg
shll
pop
shlb
inc
test
jmp
and
pop
sbb
xlat
fistpl
push
stos
sbb
sub
jmp
mov
push
movsl
rcrl
mov
cmp
xchg
push
jae
dec
xor
add
dec
mov
aam
shl
clc
push
dec
shll
fiadds
or
cld
jl
adc
ficoml
scas
add
cld
test
lods
insl
mov
leave
mov
arpl
test
in
cmp
mov
lock
out
test
leave
test
jg
or
xchg
in
fisttpl
mov
fs
jecxz
aam
sub
leave
inc
sti
cli
sub
lret
xchg
popf
jmp
ja
jl
or
das
or
out
es
sbbb
cs
push
cltd
lds
mov
mov
lds
cli
pop
mov
pop
and
ljmp
out
sub
into
inc
sahf
fwait
icebp
dec
sbb
lods
and
or
cmp
negb
xchg
push
push
push
push
inc
inc
jecxz
cmp
jmp
iret
cmp
nop
inc
fs
xor
push
lret
xor
ja
mov
popf
cmp
mov
inc
dec
jno
or
xchg
fcoml
dec
sbb
mov
mov
clc
jl
cs
mov
loope
dec
jecxz
mov
std
rorl
imul
loop
fsts
in
outsb
imul
pusha
xor
inc
scas
jno
push
push
xchg
bound
fs
lock
daa
ss
or
lods
or
sub
hlt
nop
adc
mov
cmpsl
adc
lcall
popf
mov
xchg
pop
sbb
lea
sub
inc
popf
loop
xlat
pushf
pop
pop
pusha
xor
mov
dec
hlt
dec
mov
movsl
in
add
sbb
ljmp
sbb
adc
inc
orb
dec
das
inc
fisttps
das
sbb
fs
in
dec
push
stos
adc
dec
roll
push
stos
orl
sbb
lock
das
sub
stc
mov
das
mov
lcall
pushf
add
dec
mov
jecxz
lcall
sub
sub
sbb
adc
icebp
bound
test
mov
in
fsubrl
cmp
fwait
jne
and
or
xor
leave
xor
ds
add
and
outsl
jmp
pop
mov
sbb
rclb
lcall
in
xchg
jp
clc
jno
scas
popa
and
cld
stos
mov
push
sub
in
adc
sbb
out
sub
xor
mov
adc
lea
mov
xor
dec
push
sbb
and
test
sbb
out
std
xchg
sbb
ficoml
loopne
fwait
es
push
pop
cli
mov
out
into
or
xorb
ss
in
aas
jae
xor
jmp
sbb
lret
mov
dec
xor
psraw
sahf
pop
es
into
fstps
cmp
hlt
sbb
stc
negw
ss
shrb
shll
fisttps
and
mov
test
clc
and
pop
cmpsb
sti
push
xchg
fisubrs
cs
mov
pop
xchg
push
scas
xor
inc
xor
outsl
push
inc
mov
dec
gs
out
je
imul
xchg
daa
lods
xor
cmpsb
dec
divb
push
loop
int3
mov
inc
pop
outsl
iretw
sahf
repnz
dec
mov
pushf
xchg
stc
jnp
daa
cs
sub
insl
inc
add
cmp
cmp
mov
jo
rcll
addb
sarl
scas
mov
pop
pop
loope
cli
sbb
sub
daa
aas
mov
sahf
pop
les
ret
scas
fstpt
jo
add
mov
fcoms
ljmp
imul
mov
out
in
xchg
pushf
adc
push
sbb
into
dec
push
repnz
fisubrl
pusha
add
jb
sbb
insb
or
into
push
ja
mov
fnstsw
pop
int
cmpsl
andb
add
xchg
or
ja
mov
xor
mov
inc
pop
test
xchg
ret
fisubl
sub
jo
lock
xchg
insb
in
jge
fs
lods
repnz
bound
or
lock
adc
cmp
fldt
out
mov
scas
das
lock
mov
mov
jo
faddl
stos
rcrl
xchg
or
cmp
add
sub
stos
and
push
mov
in
mov
jle
fiaddl
pop
sub
cmp
inc
sub
rclb
push
mov
push
push
xchg
adc
jne
imul
or
sub
lcall
lea
jg
add
xchg
ss
jle
aaa
adc
xor
or
mov
rolb
jp
cltd
lcall
jmp
test
adc
loopne
jg
ds
stos
test
inc
inc
adc
sub
add
jg
jecxz
test
in
jg
xor
repz
inc
adc
ret
sbb
les
xchg
fsubl
insb
inc
mov
fs
jmp
lock
adc
cld
mov
cmpsb
hlt
fistpl
aas
dec
push
jecxz
jp
mov
jle
iret
mov
enter
test
jne
adc
add
incb
mov
adc
dec
sub
shll
mov
and
xor
mov
shrb
inc
aas
iret
es
adc
pusha
fsubrs
push
call
nop
xchg
mov
xchg
ja
iret
repz
in
popf
or
cmp
imul
adc
pusha
jle
enter
mov
js
sub
sbb
add
cld
shrb
insl
or
aad
into
jmp
mov
das
test
or
movsb
das
push
mov
in
out
add
ss
add
stos
ret
hlt
roll
push
push
movl
jl
push
jns
jecxz
repnz
pushf
dec
mov
pop
dec
sub
xor
repnz
sbb
or
mov
mov
enter
or
cmp
jecxz
xchg
xor
in
sbb
pop
in
xlat
pushf
enter
outsb
negl
mov
sahf
imul
cmp
pop
loopne
inc
sbb
cwtl
mov
sbb
mov
xchg
sub
xor
xor
les
dec
insb
sub
mov
lea
sub
xchg
rolb
jmp
adc
mov
adc
mov
repz
xchg
pushf
mov
mov
leave
inc
jno
xlat
add
arpl
xchg
push
in
sbb
imul
or
orl
lcall
push
mov
aad
pop
imul
fcmove
out
push
lcall
fsts
inc
test
jns
mov
mov
add
rolb
pusha
jmp
es
mov
mov
jl
addr16
add
shlb
ret
xlat
data16
xchg
push
sub
xchg
xchg
loop
push
into
lods
cs
sti
mov
pop
cmp
jge
cli
neg
stos
pop
cmc
pop
sbb
xor
push
rolb
pop
aas
xchg
pushf
dec
adc
jnp
xchg
test
sarl
fcom
xchg
cmp
mov
std
cs
pusha
adc
inc
daa
dec
mov
cmp
or
in
pop
cli
lahf
scas
mov
les
push
jg
xor
dec
inc
ja
xchg
mov
mov
adc
jnp
rclb
daa
sbb
mov
sbb
mul
xor
mov
ja
fmull
shrl
incl
adc
or
insl
outsl
lods
mov
or
xchg
in
fwait
mov
dec
jl
mov
cmp
push
scas
lods
xor
cs
cmp
xor
pop
daa
lret
pushf
movsb
dec
xchg
mov
mov
mov
mov
aam
pusha
int3
mov
adc
cmpl
movsl
jp
stos
cmp
mov
mov
push
add
stc
mov
bnd
push
adc
cwtl
push
or
jp
es
insb
es
cli
ror
nop
push
stc
pop
adc
pop
out
add
xchg
jl
fsubr
jb
mov
jecxz
push
and
or
not
or
push
aad
int
outsl
mov
cmp
std
andl
sbb
fisttps
cmp
inc
xchg
dec
ljmp
stc
push
fisubs
adc
jnp
sub
leave
xchg
add
mov
idivb
push
xchg
fisubrs
or
jmp
loope
loope
cmp
fisubrs
fdivs
xor
xor
mov
fidivrl
call
out
inc
push
pusha
sub
push
shrl
mov
sbb
test
in
insl
ljmp
mov
mov
xchg
mov
lcall
das
and
aas
shlb
stos
test
inc
rclb
repnz
js
adc
daa
push
ljmp
test
push
mov
rcl
gs
pop
adc
fsubr
pop
adc
fisttpl
push
loop
mov
ret
mov
jno
mov
jb
fisttpll
mov
nop
sub
sarb
jns
pop
rclb
mov
mov
scas
test
pop
imull
std
adc
pusha
xor
jno
js
cmp
rcrb
jo
lret
mov
inc
mov
jb
push
jmp
in
hlt
and
jecxz
mov
jo
adc
mov
or
call
and
popf
orl
or
cmp
lds
sub
jnp
fcoml
xchg
push
mov
mov
ret
aaa
sbb
lds
jbe
mov
iret
jle
lea
xchg
in
cmp
inc
js
push
std
jl
dec
rcrb
cmp
pop
pop
mov
rcll
mov
cmp
aam
add
movsb
das
mov
lret
xchg
scas
sbb
add
mov
push
jne
cmp
pop
sub
je
push
str
shlb
inc
mov
pusha
aam
lret
or
mov
fimuls
dec
push
repnz
ds
pop
out
out
jl
pop
jo
xor
add
out
imul
filds
lock
jne
or
sbb
dec
adc
outsl
fistpl
dec
pop
aam
cmp
ret
stos
sub
test
mov
add
adc
shrb
sbbl
dec
dec
or
fstpt
movsl
push
xchg
insl
addr16
imul
mov
jns
adc
or
inc
sub
mov
aas
les
xchg
aas
mov
pop
dec
mov
mov
and
xchg
imull
imul
pop
push
adc
repnz
gs
out
xor
adc
ss
mov
cltd
test
outsl
dec
push
sbb
xor
cmpb
aaa
int
aaa
jmp
mov
out
jbe
pop
and
dec
cmp
sarb
push
or
jno
adc
in
push
jb
testb
and
or
sahf
sub
cltd
xchg
aam
mov
push
imulb
pop
sub
in
out
xor
or
in
lock
in
iret
aad
add
xchg
frstor
adc
jnp
adc
sbb
xchg
stos
popf
movsb
mov
inc
shr
rcll
pusha
push
jge
popa
or
dec
cmpsb
mov
push
jnp
xor
stc
addr16
out
movb
cld
leave
repnz
addr16
pop
es
imul
aas
or
push
mov
loope
int
pop
loop
js
push
outsb
fstps
es
imul
mov
xchg
or
test
fcoml
pop
icebp
push
cmp
insb
pop
jne
outsb
sub
mov
sbb
icebp
or
pop
pop
mov
fisubrl
mov
out
push
xchg
fbstp
mov
rcrl
or
in
xor
jno
sbb
loopne,pt
aas
int
incb
rcrl
gs
xor
loopne
loope
jmp
dec
movsb
out
imul
ret
adc
imul
daa
sbb
nop
push
addr16
cmpsl
and
mov
lds
sti
lcall
mov
in
pop
cmc
sarb
hlt
les
add
cmpsl
adc
or
loopne
push
clc
in
fcomps
lock
cmp
arpl
pop
fildl
rcr
loopne
pop
popa
adc
push
mov
cmpsl
push
xor
xchg
fadd
dec
or
mov
scas
in
fisttpl
jge
pop
push
sbb
cmp
stc
dec
repz
addr16
and
stc
loopne
les
fs
jmp
ret
jmp
sbb
jle
xchg
push
lret
rolb
mov
stos
and
in
ficoms
or
mov
sbb
mov
mov
mov
inc
mov
add
push
mov
shrl
test
ljmp
adc
add
addr16
dec
lods
mov
enter
cmp
sbb
push
add
pop
scas
xchg
fsubrl
out
xchg
mov
mov
mov
in
cmp
push
push
hlt
fmuls
or
testl
mov
lods
les
dec
push
lahf
aad
out
fsubrl
push
mov
sbb
pop
jbe
push
jle
push
push
sbbb
rclb
out
mull
stos
inc
jne
cmp
sub
and
jmp
mov
filds
jecxz
fcmovnbe
enter
sub
adc
jge
sbb
repnz
insb
icebp
jno
jecxz
dec
imul
mov
cmp
add
add
fistpll
or
mov
jno
sub
pop
push
add
iret
mov
cwtl
loopne
std
stos
in
sub
cmp
fdiv
lret
mov
dec
outsl
test
mov
sbb
dec
sbb
addr16
leave
push
or
mov
leavew
cmp
xor
push
ja
outsb
bound
test
inc
pusha
mov
jo
xor
sub
int3
mov
aam
push
cmp
inc
xor
pop
jg
mov
sub
movsb
add
jne
lea
xor
push
test
mov
movsl
pop
mov
fsubrl
arpl
adc
sti
and
shr
xor
gs
fcompl
and
ljmp
imul
push
xor
xor
loopne
sub
mov
movsl
out
fldenv
cmpsb
mov
sbb
sbb
cmp
ret
sahf
cld
fidivs
iret
and
push
sbb
lret
jbe
push
imul
jl
inc
hlt
adc
aam
cmp
jae,pn
jb
cli
inc
jg
jbe
lods
aas
mov
cmp
and
cs
jg
mov
pop
or
pop
fmull
mov
push
mov
aas
push
push
pop
in
sarl
inc
repz
int3
inc
stc
inc
out
mov
bound
add
pushf
mov
cltd
add
xor
pop
sbb
jo
mov
and
inc
mov
into
dec
dec
inc
bound
or
stc
inc
pop
daa
in
repnz
imul
and
je
cmp
cmp
adc
dec
ds
insl
mov
repz
jae
cmp
mov
or
pop
or
mov
sbb
stos
test
arpl
lods
mov
adc
mov
jmp
divb
mov
lock
push
add
jle
adc
push
shrl
mov
xchg
ret
or
inc
fidivrs
jo
adc
mov
loopne
testb
mov
push
pop
shrl
sbb
movsb
xchg
loopne
adc
inc
shlb
push
adc
lods
subb
xchg
mov
push
lods
xor
imul
jae
loope
add
mov
mov
popa
xchg
mov
dec
in
mov
mov
and
es
fidivrs
sub
adc
in
jmp
xchg
dec
sub
lock
dec
cmp
outsl
mov
pushf
and
sub
dec
loopne
mov
dec
repnz
or
orl
sub
fdivs
adc
outsl
xor
cmc
mov
and
xchg
test
test
sub
pop
andb
hlt
or
enter
jmp
pop
test
xchg
mov
loopne
daa
out
jecxz
push
les
jp
andl
mov
jno
cmp
xor
or
cmp
pop
jge
into
inc
arpl
call
jbe
mov
cld
cmc
adc
mov
and
add
dec
pushf
std
clc
xor
out
aas
jmp
fstpl
scas
cmp
xchg
or
push
mov
les
jg
inc
dec
int3
enter
clc
fstpl
or
sub
xchg
pusha
add
push
xor
sbb
mov
addr16
cld
outsl
mov
gs
cmpsl
xlat
popf
cmp
iret
insb
sbb
pop
inc
lret
fwait
push
das
jno
add
cmpsb
adc
lea
addr16
dec
adc
int3
xor
enter
pop
and
sub
in
pop
nop
inc
cmp
sbb
fs
cmp
into
jns
mov
cmpb
push
adc
pop
push
push
dec
in
mov
push
roll
jne
inc
in
imul
bnd
sbb
mov
push
icebp
enter
inc
mov
sub
into
jne
movdqa
sahf
jae
or
cwtl
adc
inc
xor
or
hlt
mov
fcmovbe
aad
lret
pop
jae
xor
movd
mov
lret
inc
std
jp,pt
adc
xchg
fcompl
jg
jecxz
sub
stos
insl
and
mov
and
je
adc
sbb
and
sbb
dec
js
int3
insb
sub
mov
cmpsb
movsl
cmp
or
xor
cmp
test
mov
dec
xchg
mov
pushf
xlat
cltd
jbe
movb
adc
subl
fwait
das
jb
mulb
scas
jne
lret
rcrb
xlat
jnp
mov
inc
xor
mov
jp
ret
xchg
cmp
adc
xor
or
ljmp
mov
add
xor
xchg
pop
inc
xchg
insl
inc
xor
or
cmp
lea
push
cmp
xchg
and
lcall
notl
mov
jp
cs
sti
es
pop
jmp
mov
adc
fadd
pop
mov
push
adc
mov
inc
test
pop
shlb
pop
add
cmp
insb
dec
xchg
dec
decl
push
mov
push
mov
push
xchg
jbe
int3
mov
stos
fmul
insl
push
jge
fists
iret
cmp
dec
or
popa
sbb
cli
dec
scas
ret
jecxz
dec
insl
fcomps
cmp
daa
insl
das
nop
xchg
pushf
sarb
cwtl
mov
es
stos
das
sahf
push
xor
and
dec
jne
das
mov
push
int3
pop
out
loop
and
mov
mov
fnstcw
ret
adc
mov
xlat
mov
push
dec
adc
in
push
das
rcl
out
loope
aam
nop
and
pop
push
mov
mov
mov
insl
gs
js
pop
xchg
repnz
out
loope
xchg
push
jecxz
dec
push
cmp
inc
pop
pop
sub
mov
pop
cs
mov
aas
movsb
pop
pop
leave
lret
ret
lods
or
fidivl
stos
nop
or
jne
jp
test
pop
jno
out
jmp
xchg
lcall
dec
clc
rorb
dec
mov
push
das
lret
test
nop
xchg
pop
sbb
sbb
repnz
push
aam
stos
push
lods
mov
cmp
ljmp
jo
test
push
aas
xor
sub
push
icebp
xor
scas
int
ds
mov
int3
shll
outsb
lds
adc
shll
push
and
xchg
cwtl
pop
cmc
jo
push
ss
adc
push
sbb
mov
iret
inc
das
lods
mov
xorl
repnz
jmp
sub
lods
push
loop
sbb
push
es
sarb
ljmp
push
push
cmp
cltd
sub
cmp
pop
dec
mov
inc
lret
ljmp
xor
clc
das
sahf
lret
popa
stos
rcrl
shlb
rcr
xchg
push
mov
xor
aaa
inc
jmp
in
or
pop
aad
lahf
mov
push
push
into
or
jne
mov
add
out
lock
jb
ja
pop
imul
lds
ja
shrl
and
or
push
cld
jne
adc
inc
mov
in
das
inc
mov
cmc
jp
icebp
scas
xor
call
rolb
andl
andl
add
popf
pushf
loop
jg
icebp
xorb
orl
mov
repz
mov
cltd
inc
aas
insb
lcall
push
jno
add
shll
pop
inc
push
pop
insb
dec
push
loopne
and
cmp
nop
add
push
xchg
mov
leave
int3
add
mov
cli
mov
pop
sbb
aad
xor
jo
out
dec
pop
out
mov
fdivl
xor
in
cmpsb
test
cld
leave
pop
movsb
std
arpl
push
push
mov
lds
sbb
lock
mov
arpl
cmp
clc
rorb
jnp
lods
xor
and
and
aad
pop
or
xor
daa
sbb
lret
jo
jnp
mov
dec
scas
mov
adc
sbb
mov
jg
jp
nop
xor
ret
push
pop
lret
mov
out
adc
js
xor
je
cmp
sub
lea
lret
int3
lds
and
and
add
inc
push
jbe
sub
cmp
imul
sub
xlat
xchg
aam
movsb
and
cld
or
xor
adc
inc
cwtl
push
push
adc
mov
jbe
lock
fisubs
in
imul
cwtl
bound
and
frstor
sub
jnp
into
adc
lahf
or
mov
xor
adc
les
cmpsl
and
mov
inc
push
mov
js
testl
insl
pop
push
ss
push
xchg
fisttpl
jne
scas
and
and
fidivl
mov
pop
cmp
xor
push
into
push
std
lods
jge
dec
ljmp
add
arpl
xchg
mov
push
sub
dec
sahf
pop
jg
lret
and
adc
es
and
mov
xchg
or
sub
repz
subb
jg
fcmovnb
imul
cs
push
mov
dec
out
fidivrl
mov
push
or
fs
repnz
mov
sub
dec
in
xchg
insb
push
repz
or
sub
frstor
ljmp
xchg
outsl
and
xor
das
fsubs
jg
fs
repnz
dec
or
inc
pop
fmull
inc
sti
push
dec
add
scas
dec
in
pop
sub
fists
sub
ljmp
fisttpl
cld
inc
data16
and
cmpsl
mov
inc
dec
xchg
mov
mov
add
jns
jge
pop
std
lea
fidivs
add
xchg
imul
outsl
insb
aad
mov
lcall
dec
in
cld
xchg
movsb
dec
jb
stc
into
pushf
aad
arpl
add
xchg
cmpsl
mov
inc
add
scas
sub
xchg
iret
add
xchg
addr16
lea
jns
fcompl
cmp
data16
int
add
mov
mov
mov
sbb
enter
daa
xchg
pop
pop
mov
push
dec
fs
mov
jae
inc
or
fidivl
xor
les
inc
mov
int
int
loopne
andl
repz
pushf
push
test
leave
and
movsl
test
iret
fnstenv
enter
inc
les
in
jns
xor
fwait
sarb
notl
push
sti
push
pop
scas
hlt
iret
jo
pusha
dec
sbb
dec
or
fidivrl
mov
pushf
mov
jmp
adc
xor
movsl
test
or
pop
and
leave
inc
cmp
iret
add
inc
popf
adc
sbb
mov
dec
loop
jno
fstps
test
xchg
sbb
pop
rorl
lock
xchg
loop
dec
sub
fcoml
mov
and
test
mov
inc
negb
xor
stos
jge
xchg
mov
and
adc
jae
aas
enter
push
xlat
push
dec
cld
jno
rorl
insb
sub
imul
in
inc
dec
mov
add
pusha
cmpsl
mov
xor
arpl
push
inc
jg
add
jns
sbb
mov
paddusb
je
pop
movsl
push
addr16
ud1
jmp
mov
ret
daa
push
jb
lahf
sub
fptan
gs
adc
jbe
mov
fldcw
dec
pop
aas
add
inc
data16
scas
in
mov
aas
jg
test
add
mov
add
xchg
orl
lret
lock
add
mov
push
push
jnp
pop
xchg
mov
mov
cmp
and
mov
testl
ljmp
xor
push
xchg
dec
or
adc
icebp
pop
repnz
popl
xor
jo
push
fcoms
mov
jge
int3
push
cmp
mov
rcl
sub
insb
xchg
int3
andb
leave
fisubrl
adc
insb
popa
into
mov
inc
mov
add
lss
ljmp
pop
outsl
push
xor
mov
fistpl
pop
adc
adc
mov
mov
je
aam
sahf
mov
inc
mov
cmp
mov
xor
add
mov
out
mov
and
daa
push
mov
mov
cmc
xchg
mov
cld
mov
mov
push
and
and
pop
bound
outsb
inc
or
addb
xchg
sub
bound
cmp
xchg
shll
daa
add
adc
xchg
sti
jecxz
push
je
cmp
notl
ds
xchg
xchg
mov
mov
dec
sub
xchg
pop
mov
fisubs
fs
sbb
addl
aas
adc
lods
cmp
fadds
adc
inc
inc
int
data16
or
pusha
mov
sbb
xchg
aam
jne
js
adc
cwtl
dec
popf
inc
pop
fstpt
jle
out
push
xchg
sbb
mov
xor
dec
mov
inc
imulb
mov
cmpl
or
mov
ret
punpcklbw
out
xchg
loope
lret
mov
adc
mov
mov
dec
fiadds
psraw
and
flds
mov
aam
dec
push
lret
pop
jb
sarb
add
and
sub
xchg
sbb
lods
mov
mov
lods
out
jp
sub
sbb
sbb
cli
out
div
fnstsw
lods
inc
jb
cmp
push
add
adc
mov
es
jge
adc
out
fwait
jmp
aad
cmp
cli
movsl
add
or
out
xor
lea
adcl
mov
icebp
clc
mov
mov
push
lret
mov
or
xor
cs
inc
nop
lock
adc
fdivl
pop
mov
sahf
in
in
int
movsb
out
cli
sahf
scas
ret
andb
out
sbbl
adc
iret
test
pop
mov
leave
stc
xor
mov
inc
adc
pop
and
jl
sub
jp
sbb
jnp
cmp
mov
adc
adc
adc
jmp
inc
cmp
mov
dec
sarl
pop
inc
aam
pop
scas
lret
mov
lret
in
cltd
push
pop
pop
mulb
mov
jge
iret
inc
mov
mov
lret
xor
jmp
xchg
dec
ljmp
push
imul
aaa
dec
scas
dec
sub
sub
lret
adc
xchg
or
inc
ficompl
add
fucomp
clc
aad
sti
add
movsl
sahf
cmp
mov
push
pop
fidivs
ret
gs
mov
xchg
aaa
in
cmp
dec
push
test
add
lea
sti
imul
pop
lahf
mov
add
push
inc
dec
into
out
pop
dec
jbe
sbb
xchg
lret
fwait
clc
stc
xlat
sbb
fs
nop
cmp
cltd
inc
rclb
les
std
dec
mov
mov
add
cmc
dec
in
jb
aam
int3
mov
pop
mov
mov
mov
jns
mov
push
sub
and
scas
shrl
xchg
push
js
inc
jge
xlat
mov
and
adc
jle
bound
jo
push
mov
sbb
sahf
mov
pop
dec
xor
es
mov
pop
and
aad
mov
test
sbb
dec
mov
adc
sub
lods
out
add
or
lods
sar
fbstp
les
rcr
pop
mov
xchg
fstpl
push
adc
insl
int
and
and
and
iret
mov
mov
movsl
gs
loope
loope
outsl
cmp
mov
adc
int
sub
xchg
mov
fcoms
xchg
inc
aam
pop
jg
xchg
orl
and
fs
arpl
in
movsl
cld
or
add
cltd
mov
add
adc
je
pop
scas
negl
int
mov
fsubrs
out
dec
mov
push
lahf
aas
sbb
call
mov
and
cld
in
fwait
addb
dec
pop
test
std
dec
ljmp
sbb
cmp
adc
scas
dec
cmpsb
sbb
out
frstor
push
cmp
ja
rcl
stos
loope
push
dec
lock
sbb
into
lcall
adc
jge
xor
scas
dec
xchg
jmp
lea
push
ss
jns
xor
sbb
jle
cmpsl
dec
mov
xor
movl
pusha
jp
push
and
dec
repnz
add
mov
pop
fwait
sub
sub
ret
adcb
bound
in
lret
out
cmp
mov
push
mov
xlat
or
inc
push
fcmovnbe
xor
lods
mov
out
test
push
mov
stc
push
jl
stos
in
dec
in
movsl
addr16
cld
xchg
clc
iret
add
gs
sub
stos
ret
xor
fidivs
mov
push
loope
and
sahf
pop
jae
jae
jecxz
pusha
aad
fmulp
pop
sahf
pop
out
inc
mov
xorl
sbb
xor
inc
fiadds
sbb
mov
mov
inc
fimuls
jmp
das
push
push
mov
mov
pop
xor
sbb
adc
outsl
test
sbb
into
leave
popl
cmp
pop
inc
insl
icebp
xor
mov
push
fists
sbb
jno
add
and
mov
ljmp
dec
or
in
mov
mov
int
lock
push
lds
call
jae
push
adc
int
adc
mov
rorb
cmp
mov
sbb
repz
cmp
test
mov
cmpsl
cmp
mov
stc
je
mov
adc
jae
sbb
cs
mov
aam
and
lret
pop
in
and
orb
lahf
sub
jnp
pop
ss
cmp
out
out
jecxz
mov
push
pop
xlat
imul
xchg
and
leave
sbb
out
sub
fucom
mov
cltd
das
adc
adc
ja
sub
inc
pop
repnz
addr16
mov
or
cmpsb
dec
sti
lock
mov
shrb
imul
es
sub
lea
into
loop
mov
fwait
aaa
xor
andnps
notl
jp
insl
add
push
mov
fsubrl
jne
mull
add
repz
cwtl
or
lea
in
enter
mov
push
int
mov
mov
hlt
mov
test
mov
cs
insb
jne
jb
js
rol
cmp
dec
insl
lds
cli
sbb
pop
adc
sbb
push
cmc
inc
iret
push
xchg
pop
mov
int
outsl
jo
stc
hlt
adcl
addr16
mov
jle
lods
sarb
adc
nop
ficoml
xchg
mov
dec
add
int
repnz
push
jmp
mov
test
cmpsb
push
das
loopne
add
mov
or
loope
sbb
aad
adcb
xchg
in
dec
int3
jne
xchg
repnz
dec
pop
add
insb
mov
dec
cltd
fcomp
xchg
fistps
cmp
xchg
add
dec
data16
lods
pop
mov
les
pushf
fdivs
iretw
xchg
xchg
mov
pop
jne
lret
rorb
mov
in
adc
jecxz
mov
into
popf
test
cmpsl
loop
mov
and
int
push
push
mov
negb
mov
fstpl
mov
fisttpll
and
sahf
testb
mov
loop
add
and
push
or
push
sub
cld
pop
rolb
cmp
dec
negl
cmpsb
test
imul
fdivrl
fsubl
mov
xor
pusha
pop
test
sub
mov
sahf
push
mov
pop
lret
or
mov
jnp
jnp
cwtl
rcrb
cmc
out
mov
inc
imul
and
push
sti
push
decl
test
sub
sub
xlat
dec
into
and
stos
ret
loop
mov
ja
sub
sbb
xor
dec
fidivs
fnstcw
scas
xchg
push
cmp
out
cmp
jmp
sbbl
fisubl
pop
pop
cli
jl
cmp
inc
pop
xor
rclb
fmuls
mov
mov
or
repz
aam
test
xor
pop
dec
jnp
cmpsl
mov
push
xchg
cmpps
xchg
inc
hlt
and
lcall
mov
pop
xchg
leave
pop
call
xchg
scas
mov
pop
mov
inc
nop
out
loopne
jbe
cld
in
xor
push
mov
sti
xor
mov
fwait
roll
pop
cmpsl
test
aaa
inc
mov
imul
mov
push
jae
xor
loope
sub
cmp
and
cld
jmp
sbb
jp
clc
jno
push
ficoms
je
push
ljmp
jge
popf
push
xchg
dec
leave
ret
sub
add
fcmovnb
scas
repz
mov
loop
shll
add
or
pop
pop
cld
mov
sbb
aaa
and
stc
sbb
sbb
cmpsb
pop
or
jmp
mov
mov
or
jmp
jg
mov
pop
sti
orb
add
and
div
or
out
push
push
jmp
cmc
sarl
ljmp
out
sbb
fsubrl
sbb
xor
cmpsl
loop
add
and
scas
clc
dec
or
addr16
pop
mov
sbb
sbbb
aas
repnz
push
add
outsl
lods
popf
push
out
addr16
inc
xor
int
ret
add
jle
adcb
pop
push
cs
cwtl
sqrtps
mov
xrelease
insb
int
orl
ss
fbld
cmp
or
cld
repnz
sub
test
mov
sub
and
jo
enter
mov
leave
or
mov
push
or
inc
fstpt
cmp
js
push
repnz
push
dec
movsb
fdivr
cmp
cmpb
mov
popf
xorb
cmpl
xor
mov
xchg
adc
fucom
sub
orl
andl
cmp
addb
pusha
into
ds
xchg
leave
out
cmp
pop
mov
add
data16
pop
mov
xchg
lret
xchg
mov
lea
in
loop
je
fisubs
xchg
jae
sbb
cmp
sahf
dec
int
pop
loop
mov
dec
popf
or
test
dec
mov
mov
mov
mov
push
xchg
sbb
mov
dec
adc
mov
add
cmp
pop
sub
cli
jge
pop
popa
cmp
pushf
jne
inc
dec
sub
inc
leave
push
out
aad
cmp
push
out
or
push
dec
inc
ret
mov
push
push
mov
repnz
sti
cmc
cmp
cmp
jle
enter
mov
jno
pop
jle
mov
mov
jmp
lret
insl
pusha
getsec
lods
pop
mov
mov
popa
cmpsb
sahf
scas
test
je
loopne
mov
pop
bound
mov
data16
addr16
imul
xor
push
repnz
pushf
popf
shll
pop
ljmp
mov
loop
sub
mov
or
push
sbb
dec
ret
subb
add
xlat
push
ja
scas
push
dec
out
add
popl
movsb
cmpsl
and
xchg
fisubl
sbbb
mov
lret
into
sbb
cltd
es
rorl
aam
mov
pop
mov
pop
nop
sub
mov
les
xor
mov
int3
dec
mov
in
adc
test
outsb
sub
push
shll
daa
imul
dec
mov
call
cwtl
aam
lods
jo
and
jns
out
ja
je
imul
jge
inc
shr
js
xchg
adc
fwait
mov
adc
xlat
dec
dec
jnp
push
and
mov
cmp
add
aam
cld
push
addb
mov
shl
leave
pop
psrlw
push
and
xor
loope
jne
mov
pop
push
mov
arpl
into
push
es
enter
fwait
call
sub
push
jl
mov
lcall
cmpsl
aas
xor
pop
int
in
xor
xchg
dec
xor
inc
sbb
mov
fnstcw
gs
jl,pn
dec
fdivs
push
adc
xchg
inc
sbb
add
mov
jne
outsb
in
lock
jns
jmp
mov
mov
adc
dec
push
dec
inc
inc
fimull
inc
loop
sub
mov
mov
adc
adc
lahf
mov
das
lret
mov
in
icebp
lret
out
mov
xorl
adc
insb
push
out
in
cmc
js
sbbl
pusha
pop
mov
adc
cmp
movsl
fistl
cmp
mov
out
shrl
mov
pop
dec
sbb
pop
leave
xor
pop
pop
fmull
bound
mov
mov
insb
xchg
pusha
mov
lret
xchg
xchg
xor
add
repz
in
mov
sbb
xchg
rcl
jp,pt
dec
int3
pushf
sub
or
addb
scas
inc
lock
xor
xchg
xchg
xchg
pop
insl
xchg
cld
pop
pop
push
mov
inc
int
jnp
ss
in
inc
test
jg
out
cmp
cltd
test
pop
stc
inc
andb
rcrb
pop
pusha
fwait
xor
or
adc
lea
cld
into
sbb
sahf
push
push
xchg
or
lret
je
mov
cmp
sub
sbb
dec
pop
cmp
pop
notl
idivb
dec
fistpll
cmp
or
test
test
fs
and
xor
ret
xlat
fsubrp
sti
leave
das
inc
cmpsl
movsl
js
and
mov
loop
movsl
and
dec
sub
push
push
mov
mov
sar
sub
sbb
mov
fistpl
andb
fadd
jo
push
sub
fildl
stc
leave
je
cli
fmulp
out
mull
popf
int3
push
mov
arpl
pop
call
nop
daa
addr16
xchg
ffreep
icebp
ljmp
outsl
addl
cltd
adc
outsl
jno
fmuls
mov
push
mov
sbbl
sub
cwtl
popf
fsubr
jns
cmp
sti
rcrl
aaa
inc
or
in
mov
xor
push
pop
sahf
jp
scas
les
mov
mov
lock
push
mov
push
pop
push
jnp
jns
inc
or
dec
loope
push
dec
xor
sbb
pop
sub
mov
xor
push
aas
push
mov
iret
out
push
and
outsl
aas
mov
ret
cmp
scas
loope
popf
arpl
dec
push
sub
sub
sub
jns
xchg
sbb
ljmp
mov
jge
push
popf
ror
xor
mov
testl
fdivl
dec
jbe
push
or
js
ja
push
je
mov
pop
inc
cli
add
sub
jmp
dec
sbb
pop
mov
pop
nop
incb
cltd
clc
repz
repnz
in
mov
mov
test
mov
lret
mov
pusha
mov
jnp
cltd
repz
push
dec
pop
int3
out
pop
mov
jne
enter
fcmovnb
mov
mov
mov
jp
sub
cmpsl
scas
inc
mov
cmc
mov
loop
test
xor
push
out
cmp
add
adc
cmpsl
mov
xchg
xchg
jle
or
into
xor
or
loope
inc
adc
sbb
test
push
jmp
shl
pop
or
or
mov
sbb
dec
sbb
aas
cld
ret
das
scas
popf
cwtl
fsubrs
lock
aad
ja
mov
and
pop
xchg
pop
in
and
insl
lret
icebp
mov
int3
mov
cmp
jno
shrb
cmp
cltd
fstp
sbb
cmc
fs
addb
stos
mov
jno
add
cmp
xor
jno
sbb
movsb
sub
sub
sbb
xchg
mov
jle
xchg
in
xor
push
and
cli
call
fsubr
movsl
inc
loop
sbb
in
adc
pop
mov
jecxz
pop
aas
inc
popf
subl
int
outsb
in
or
mov
jmp
add
mov
sbb
nop
jbe
loop
loopnew
push
imul
add
xchg
or
mov
mov
insl
xlat
lea
and
ds
add
jnp
inc
add
dec
xor
or
push
mov
push
push
push
push
xlat
cmp
in
fucom
cmp
es
pusha
xor
mov
mov
leave
pop
sahf
cwtl
inc
jbe
outsb
movsb
fldenv
push
adc
pop
aaa
xorb
push
cmp
pushf
clc
mov
ja
ret
xchg
mov
sub
dec
call
mov
jbe
mov
shl
mov
ffree
lods
inc
lods
enter
mov
dec
jl
lahf
fcomip
inc
xchg
pusha
cwtl
mov
mov
std
or
mov
cmp
scas
sti
lret
jnp
imul
addr16
js
dec
dec
mov
and
cli
addb
lods
stos
mov
or
or
pop
mov
lods
fsts
movsl
pusha
repz
nop
cs
pop
push
add
xor
pop
xor
jg
loop
pushf
fisubrs
fnsave
shrb
mov
leave
lock
negb
push
call
lea
cmp
addr16
js
add
pop
mov
cld
jge
sub
cs
sub
mov
movsb
sbb
push
mov
test
das
push
int3
sbb
pop
mov
out
mov
cmp
sbb
inc
xor
add
dec
add
adc
std
adc
inc
mov
lock
mov
pop
push
test
mov
adcl
repnz
mov
xlat
outsb
fadds
or
loopne
inc
mov
xor
xorl
out
scas
jne
shlb
mov
xchg
ss
mov
xchg
inc
lret
pop
ds
dec
cmp
pop
lods
add
out
add
pop
es
pop
jno
insl
push
lods
scas
rcll
into
in
call
sub
mov
xchg
xlat
dec
ljmp
sahf
loop
insl
jae
sbb
loopne
sub
bound
js
int
pop
test
fs
xchg
push
sti
push
mov
sahf
pop
ret
sbb
jb
push
negb
fcoms
push
cmp
xchg
imul
stos
test
sub
add
enter
xor
jo
lahf
xlat
cmpsb
fcmove
fdivl
adc
lahf
and
and
pop
icebp
cmp
repz
pop
insl
out
xor
jne
add
and
jg
cs
es
adc
addl
mov
repnz
jmp
insb
ret
int3
push
pop
es
test
notb
xchg
dec
dec
into
lahf
mov
std
sub
pop
push
xchg
idiv
lock
imul
mov
xlat
jae
xchg
pusha
and
lods
jbe
lock
aad
push
pop
lahf
sub
sti
cmp
into
rcrl
into
inc
adc
mov
jge
mov
xchg
and
test
and
mov
sub
jl
adc
pop
lds
push
aam
cmpl
loopne
cmp
inc
in
test
fisubrl
divl
cli
jg
aaa
mov
inc
sbb
clc
xchg
movsb
add
fucomi
sbb
test
jnp
aas
mov
into
mov
repz
xchg
add
push
jg
sub
outsb
cmp
cmp
push
in
pop
xchg
rcl
jns
and
or
pop
das
adc
pop
or
jb
pop
inc
cmp
hlt
fiaddl
repz
mov
lahf
add
push
jne
stos
pusha
xor
mov
mov
push
aam
stos
add
fnstenv
mov
xor
sub
xchg
aad
pop
cmpsl
int
jno
jge
cld
pushf
cmpl
icebp
ret
pop
out
adc
shl
xchg
iret
inc
ret
jno
idivl
cs
ret
dec
mov
mov
daa
or
test
jnp
xor
mov
mov
inc
ret
out
cmp
or
jbe
enter
out
out
mov
ja
nop
sar
xor
fsubrl
jnp
xor
add
add
sub
push
sub
shrb
mov
push
lock
loopne
in
out
mov
add
test
and
mov
push
xchg
int3
lahf
lahf
pop
int
into
mov
cmp
xchg
stos
orl
shll
imul
sbb
push
in
std
sub
inc
or
or
in
dec
ret
jmp
ret
mov
xor
mov
leave
outsb
vpxor
mov
popf
xchg
popf
jbe
xchg
adc
inc
xor
imul
push
mov
inc
mov
addr16
aad
jmp
mov
or
repz
rorb
jo
and
push
jo
pop
in
add
xchg
jmp
mov
call
and
adc
out
or
out
stos
xor
dec
mov
jl,pt
or
push
inc
push
jmp
dec
pop
and
add
or
outsl
dec
add
pop
sbb
inc
shll
dec
in
shll
mov
cltd
add
add
enter
jns
cld
adc
ss
ja
push
cmp
cmpsl
stos
adc
cmpsb
jp
int3
leave
or
xchg
iret
mov
call
dec
loopne
fsubrp
xor
sub
or
push
xor
imul
jo
out
push
xchg
xchg
or
mov
inc
fimuls
jg
in
jl
notl
xchg
fsts
inc
aad
add
xchg
inc
and
lahf
jno
sarb
clc
outsb
mov
mov
mov
adc
dec
es
inc
or
lcall
test
xchg
mov
lret
fidivrs
jne
xchg
push
and
adc
mov
out
and
and
cld
push
add
mov
inc
push
scas
push
aad
inc
cwtl
pop
xlat
ret
loopne
imul
inc
xor
inc
out
neg
imul
adc
sbb
call
mov
insb
shlb
ss
fnstenv
jle
sub
dec
xchg
jle
in
mov
stos
jb
xor
ljmp
loop
xor
jmp
cmpsl
cmp
dec
add
dec
mov
rolb
sbb
orb
or
nop
in
sub
adc
sti
pop
inc
and
or
aas
call
and
stos
aad
add
enter
test
jb
mov
imul
loop
enter
test
decl
aam
cwtl
fcoms
iret
adc
mov
stos
fcompl
std
jle
push
pop
out
ja
sub
dec
jecxz
cmp
je
and
and
outsl
jae
clc
aad
lahf
dec
sbb
push
adc
jge
cld
shll
out
jp
es
movsb
mov
rclb
in
fiadds
adc
mov
xorl
test
xchg
xor
xchg
push
and
push
sub
mov
aam
ljmp
dec
and
lcall
je
add
in
imulb
mov
pop
jb
subb
xor
out
cmp
xor
pop
je
mov
push
adc
add
std
mov
xchg
cs
test
xchg
and
daa
mov
dec
cmpsl
mov
jmp
sti
mov
pop
rcrl
mov
xchg
scas
in
pop
mov
fmul
lret
cmc
push
mov
xchg
cmc
lods
xor
xchg
xor
fidivl
aas
test
leave
movsl
stos
inc
or
testl
std
mov
sarl
pop
mov
push
rclb
sub
sbbb
clc
cltd
cltd
lods
pushf
adc
jo
inc
out
test
push
push
dec
add
aad
push
jne
mov
es
mov
sub
int3
mov
xor
cltd
mov
or
inc
sbb
dec
repz
lret
sbb
adc
push
sbb
imulb
clc
js
inc
ret
cmpsb
cmp
or
cwtl
cmp
mov
mov
int
lods
hlt
and
push
int3
out
bound
out
mov
pop
das
gs
or
inc
mov
out
jne
xor
outsl
inc
fidivrs
mov
pop
adc
xchg
xor
mov
inc
inc
cmpsl
loopne
add
sbb
pop
outsb
call
into
pop
js
mov
shlb
dec
push
push
pop
mov
test
and
fisttpl
inc
push
hlt
sub
mov
adc
in
jnp
imul
js
dec
xor
fisttpll
mov
scas
les
mov
dec
mov
dec
loop
pushf
scas
andl
mov
pushf
clc
int
movsl
imul
lods
js
or
mov
pop
testb
lahf
ja
lock
test
mov
fsubs
test
pop
sbb
lcall
pusha
pop
scas
jecxz
in
or
test
mov
aad
adc
lret
decb
test
xor
loope
fs
cli
int
nop
or
xor
pop
dec
inc
cld
ljmp
inc
aam
leave
jb
inc
cwtl
lods
in
out
mov
xchg
rcl
jbe
mov
pop
and
mov
mov
cmp
mov
mov
fisubrs
in
pop
mov
xorl
mov
ja
add
and
jecxz
insl
loop
call
sub
xchg
sbb
pop
xor
sub
jg
lcall
lock
out
and
sub
pop
dec
adc
sbb
adc
jne
dec
int3
lea
push
mov
add
mov
adc
lea
in
clc
mov
add
xor
sub
outsb
ja
sub
mov
repz
shlb
push
leave
fistl
sahf
andw
pop
and
sub
adc
and
inc
dec
add
mov
cmp
pushf
shl
push
inc
fcomi
pop
rcr
jecxz
dec
and
in
ja
lcall
mov
pop
mov
test
mov
insl
gs
imul
ljmp
jecxz
jg
sbb
cld
inc
pushf
and
repnz
jl
and
adc
imul
sbb
enter
add
sbb
out
out
xchg
sbb
and
dec
push
sbb
adc
bound
sub
ljmp
in
add
mov
xchg
sub
mov
push
or
xchg
fsubrs
xchg
dec
pop
lods
sub
xor
out
aas
cmp
lcall
add
mov
fdivl
xchg
loopne
addb
adc
jecxz
subb
int3
cmpsb
dec
fimuls
mov
adc
mov
cmc
call
push
orb
into
xchg
pcmpgtb
ffree
lahf
int3
enter
xor
cmc
hlt
dec
jno
jmp
cmp
js
mov
nop
mov
add
push
mov
dec
mov
jnp
jno
cmpsb
fdivrl
mov
sahf
dec
jl
pop
movsl
xchg
pop
push
mov
ret
ljmp
scas
into
ret
jnp
lock
fists
jmp
in
sub
sub
loop
adc
and
sub
adc
cmp
jo
push
sbb
mov
int
rorb
push
xor
sub
ljmp
gs
sahf
lods
in
push
jmp
cmpsb
clc
jecxz
add
xchg
das
ss
jl
ja
xchg
fcmovne
pop
fldt
popa
mov
and
add
and
push
xlat
xchg
dec
dec
pop
rorl
ret
add
repnz
sub
mov
inc
or
repnz
out
fisubl
xor
repz
mov
add
test
frstor
push
pop
outsl
xchg
sub
mov
jg
call
out
adc
sbbb
jmp
lock
pop
and
mov
mov
enter
ja
ret
test
dec
roll
lret
scas
adc
cmp
pop
outsb
loop
adc
imul
push
cmp
inc
cmpb
fisubrl
and
cmp
std
adc
dec
sarb
gs
xor
outsl
ljmp
xlat
sar
ror
mov
loop
jb
subb
imul
ja
stc
lahf
lds
adc
out
mov
je
icebp
sbbl
adc
xlat
pop
int3
lock
xchg
add
out
addr16
lods
xchg
push
loope
sub
push
shlb
mulb
push
data16
imul
xchg
mov
pop
push
imul
cmc
inc
sarl
cmp
insb
xchg
lahf
repz
pop
mov
shll
and
aaa
loopne
ljmp
dec
cltd
fimull
add
add
push
dec
daa
xchg
sub
adc
or
pop
repnz
push
pusha
lahf
scas
dec
bound
jns
push
adc
push
push
xor
sub
addr16
ljmp
jmp
jns
push
inc
and
lret
mov
les
jnp
dec
inc
adcl
push
test
add
adc
cs
out
jno
test
aam
mov
adc
addb
sbb
xor
mov
incl
sbb
es
insb
rcrb
aaa
xor
ret
leave
push
leave
cmc
les
cltd
push
divb
dec
stos
aas
out
scas
mov
test
ret
and
inc
add
mov
and
add
movd
enter
xchg
add
das
xor
lea
xchg
cmp
pop
inc
sub
mov
add
add
repz
push
or
rol
add
jo
xchg
loop
stos
movsl
lret
lods
insl
add
lahf
leave
xchg
cmpl
adc
xchg
sbb
sahf
dec
lret
and
push
mov
stos
inc
pop
loop
fldl
sarb
out
or
jecxz
xchg
in
ja
lret
imulb
stc
lock
xlat
xchg
jmp
mov
add
xchg
les
mov
aas
movsl
xchg
mov
adcb
es
cmp
adc
lds
out
les
mov
scas
insb
call
push
cmp
es
inc
cmp
inc
test
pop
sbb
mov
leave
sbb
in
iret
popa
dec
xlat
jmp
cmp
sbb
mov
popf
pop
out
sub
leave
shll
lcall
xor
jmp
jmp
xchg
jmp
mov
inc
push
int3
pushf
inc
lock
jle
adc
push
pop
in
stos
add
frstor
mov
ds
jbe
aad
jne
stc
fistpll
and
or
mov
cs
fdivl
stos
arpl
adc
xchg
stos
ss
insb
xor
xchg
addr16
hlt
push
xchg
push
loopne
pop
outsl
movsb
enter
jl
sbb
int
into
call
lret
in
in
pop
outsb
dec
xlat
mov
jae
dec
ljmp
jmp
add
xor
cmp
inc
xor
lods
add
pushf
fidivs
fcmovu
pop
xor
sub
hlt
adc
aas
insl
xchg
cmpsl
mov
orb
jmp
pop
xor
xor
rorl
xor
xor
ja
and
and
push
cli
push
in
fcom
add
or
dec
cld
int
cs
add
sti
lods
movsl
ret
leave
xchg
adc
into
push
pop
jle
shlb
mov
std
ljmp
add
xor
dec
testl
xlat
mov
or
subl
xor
imul
dec
adc
xor
aaa
bound
ffreep
lea
push
adc
sbb
cld
into
xor
call
add
gs
add
lods
dec
icebp
add
nop
sbb
fucomi
jmp
aad
and
outsb
mov
js
cmpsl
sarl
and
fnsave
mov
pop
and
iret
popf
enter
aas
mov
xorl
pusha
mov
mov
mov
cmpsl
inc
jmp
jl
sbb
mov
in
ja
add
dec
mov
fs
dec
or
mov
dec
rol
sub
mov
test
popa
and
jecxz
popf
outsl
cmpsb
xchg
aad
enter
and
xchg
pop
pop
adc
sarb
negb
enter
sub
pminub
mov
lods
xor
push
sub
xor
jns
insb
mov
clc
ret
ret
mov
lret
cmp
cmpsb
add
cltd
pop
mov
mov
hlt
testb
imul
sub
sbb
aaa
ret
test
insl
cmpsb
push
and
cs
mull
movsl
lds
jle
cmp
aaa
add
or
fst
ljmp
leave
mov
dec
add
outsb
data16
loopne
adcw
xchg
addl
xchg
push
inc
add
pop
out
test
push
mov
pushf
cmpb
popa
incl
xchg
ljmp
shl
inc
cltd
inc
repnz
inc
fcoml
int
js
adc
jge
sbb
push
jno
lock
mov
lds
pop
jle
in
mov
add
loop
mov
dec
sbb
mov
insl
cwtl
xor
lds
dec
xchg
sbb
push
sub
push
mov
leave
ds
or
dec
mov
jae
add
addl
mov
pop
inc
mov
add
out
and
xchg
jle,pn
ret
mov
cmc
frstor
dec
rsm
stos
push
inc
outsl
add
popf
mov
int
mov
push
ss
sbb
jl
cmp
sbb
mov
mov
mov
mov
fisubrl
inc
negb
js
je
testb
shrl
stos
es
scas
or
adc
addr16
mov
outsb
mov
stos
or
cld
jmp
addb
pop
call
mov
outsb
mov
mov
pusha
daa
jg
rorl
push
mov
test
push
popa
lock
out
jg
push
mov
popa
aam
shll
pop
xchg
fs
mov
jne
daa
xlat
enter
leave
punpckldq
ds
pusha
jnp
add
push
xor
jbe
scas
jmp
xor
je
or
dec
imull
inc
and
pop
mov
out
fwait
jp
lock
and
mov
das
mov
loop
or
imul
adc
fnsave
in
jmp
push
mov
and
lret
add
mov
cltd
xor
inc
pop
sub
jl
add
or
jno
int3
mov
push
sbb
fldcw
insl
mov
aam
dec
testb
iret
cmp
push
push
test
push
jnp
orb
xchg
gs
inc
xor
push
clc
ret
jmp
stos
lods
leave
lret
adc
in
movsb
pop
adc
jp
xchg
ss
movl
fsubp
lods
js
in
xor
sbb
sub
fistpl
mov
rcrl
lret
push
icebp
cmp
aam
stos
lods
mov
out
insl
idivl
xchg
sahf
lahf
popf
jb
jecxz
pop
ret
xor
cs
mov
mov
jns
and
repnz
fisubrl
adc
inc
fimull
loopne
add
sbb
mov
test
in
lret
je
leave
sahf
mov
loopne
mov
sub
mov
jbe
jp
lds
cmp
sbb
arpl
mov
push
xchg
addr16
dec
mov
mov
enter
cltd
pop
push
sti
sub
jae
add
mov
sub
pop
in
sub
pop
ficoms
clc
je
enter
mov
jae
add
cs
jne
jo
mov
jge
stc
xchg
cs
mov
movsb
cmp
or
adc
push
fadd
add
pop
nop
dec
mov
fnstenv
xor
cmp
aas
mov
push
cmp
cmpsb
flds
xchg
xlat
pop
movsl
lret
dec
stos
xor
add
shll
loope
dec
mov
in
mov
jg
xlat
and
mov
addr16
ret
jp
aam
mov
sbb
jbe
lock
mov
mov
cmpsl
int3
push
mov
testl
pop
jns
mov
jno
mov
je
sbb
inc
mov
shrl
imul
aas
dec
mov
mov
inc
cmpsl
arpl
or
jae
ret
dec
adc
mov
das
in
scas
into
addl
dec
mov
imul
xchg
inc
dec
inc
jge
enter
fstpt
outsb
push
jne
xorb
pop
xchg
ret
data16
daa
sbb
lods
and
add
aad
popf
aad
sub
xchg
ret
out
cmc
adc
xchg
mov
stc
outsw
inc
pop
xor
xor
adc
std
and
mov
into
mov
add
jo
lock
test
std
rolb
lods
sbb
je
lret
add
and
push
and
xchg
push
jp
xchg
sti
lds
pop
cli
add
pop
cld
mov
mov
jo
jo
pop
dec
js
jbe
in
push
mov
jl
frstor
sbb
sub
jmp
xlat
mov
rcl
xchg
movsl
lret
ret
pop
pop
xor
inc
or
cmp
out
inc
mov
daa
push
cmc
pop
inc
jnp
cmp
or
pop
and
pop
add
and
insl
sarb
sahf
and
std
sub
fisubrs
pushf
testl
rcl
mov
clc
adc
xor
xchg
rcll
mov
mov
adc
mov
xchg
lret
push
popa
aas
inc
aaa
shll
cld
xor
fiaddl
orl
cmpsb
dec
sub
pushf
jl
je
out
jbe
add
test
std
pop
leave
mov
jecxz
fwait
lods
mov
roll
mov
std
mov
addr16
mov
dec
lods
je
jmp
pop
lahf
lcall
fsin
lds
cld
push
or
mov
inc
inc
pop
aas
cmp
inc
sub
ret
adc
push
lret
popf
mov
sub
aam
mov
mov
loope
inc
mov
fcmovb
shrl
inc
int
xchg
inc
pop
in
fwait
add
out
pop
or
iret
mov
pop
sub
mov
cmp
cmp
xchg
pavgb
call
icebp
pop
xchg
mov
popf
inc
jbe
gs
dec
into
sbb
jb
pop
and
test
clc
sub
or
jecxz
cs
jne
lods
add
ret
iret
shrl
faddp
inc
xchg
mov
mov
fsubr
push
cmp
dec
lcall
in
pushl
add
lahf
mov
inc
movsb
cmp
mov
jns
lds
loop
xor
add
scas
push
pop
cli
rcrb
pop
adcb
sub
inc
cmc
adc
sbbl
push
test
dec
shrl
arpl
insb
test
sbb
adc
jmp
and
aam
xlat
mov
enter
mov
cmp
inc
out
pop
push
and
mov
mov
pop
lds
inc
stc
jb
and
and
xor
mov
out
jb
and
and
es
xchg
insb
leave
xchg
adc
mov
sbb
mov
leave
xchg
nop
cld
mov
mov
mov
sbb
hlt
dec
testb
int
orb
cmp
repnz
mov
ss
lret
fwait
cltd
push
jmp
mov
sbb
xor
sbb
hlt
push
inc
cmpsb
lcall
add
test
xchg
into
xchg
pop
jae
add
mov
xchg
int3
pushf
pop
std
cltd
dec
leave
xchg
mov
sub
ds
add
cwtl
jmp
xchg
in
mov
dec
int3
rcrl
pop
shrb
or
in
sbb
push
rolb
mov
cmp
aaa
xchg
fidivrs
and
adc
ss
les
sub
lds
mov
adc
iret
fwait
add
push
lock
and
adc
fbld
cmp
call
aam
std
scas
pop
inc
mov
cmc
in
cwtl
pop
lock
rcr
shrb
in
into
xchg
jg
rorb
stc
clc
dec
mov
lcall
ss
add
jne
aad
js
stos
nop
push
lret
imul
hlt
xchg
jle
fwait
mov
cmp
cs
mov
jb
xchg
jae
sub
dec
xor
jae
arpl
mov
jp
mov
arpl
sub
mov
sbb
lret
popa
sbb
dec
mov
std
js
mov
jns
nop
repnz
sub
cmp
mov
aad
mov
fnstenv
pop
cld
leave
dec
push
fldl
or
jno
fsubs
sbb
dec
add
call
and
into
or
fldl
and
enter
sbb
xchg
dec
xor
push
pop
loope
cmp
loopne
jecxz
jnp
ret
jo
push
xor
push
fwait
psrlq
inc
stc
or
add
and
fisubrl
pop
movsl
stc
jns
xchg
stc
bound
cmpsl
ds
popf
and
testb
clc
inc
lea
jle
sar
dec
push
cmpl
cmc
hlt
sahf
cld
or
xchg
ljmp
cli
fprem
xor
bound
cmp
mov
stc
add
or
and
aam
stos
sbb
pop
negb
out
mov
xchg
js
pop
mov
mov
dec
adc
shlb
push
aam
xor
mov
or
jae
lea
mov
cmp
cmpsl
mov
out
adc
cmp
push
popf
aaa
movsb
and
loopne
jle
enter
or
adc
pop
scas
dec
fadd
imul
mov
lods
sbb
inc
in
or
pop
dec
pop
shlb
jno
lret
jne
lock
jne
scas
cmp
in
inc
hlt
add
aaa
push
sbb
cmp
leave
dec
add
mov
jmp
in
cmpsl
hlt
cwtl
std
or
dec
push
adc
lds
popa
mov
shl
inc
adc
jbe
out
insl
mov
daa
pop
mov
bound
jo
sub
adc
or
lret
push
push
shl
nop
aas
adc
sub
xchg
xor
test
mov
jo
mov
ret
lds
xchg
inc
je
push
push
dec
mov
ds
jecxz
jne
outsb
add
add
and
dec
cvtps2pd
adc
lea
inc
cli
pusha
loope
ret
jmp
jae
push
test
push
das
pusha
cmc
scas
add
jmp
shll
repnz
dec
sahf
in
imul
lret
fcomp
xlat
jno
outsl
jnp
addl
push
cltd
push
inc
sarl
stos
stc
imul
sbb
cmp
jnp
loope
pushf
fsubrs
add
movsb
sbb
rolb
in
fidivrs
sub
mov
shrb
dec
jmp
push
fwait
call
cmc
fdivs
and
stos
or
es
mov
adc
pop
cld
imul
pusha
and
data16
or
scas
hlt
push
ret
add
xor
push
mov
pop
inc
insb
jae
add
cpuid
xchg
loopne
test
pop
add
ja
or
dec
inc
call
ret
push
xchg
pop
ds
fildl
or
mov
jb
add
cld
sub
std
push
xlat
ficoms
xor
mov
mov
cmp
std
dec
into
in
lea
xchg
xchg
fwait
push
insl
xorl
fimull
pop
adc
push
dec
xchg
shrl
sarb
stos
xchg
fwait
pop
inc
xorb
mov
push
jg
mov
add
fwait
push
sub
imul
out
shll
movsl
adc
xchg
fstps
mov
inc
sbb
jmp
mov
or
mov
add
test
and
fstpl
push
sub
inc
fldenv
fsts
jl
ror
xchg
pop
jb
sbb
sbb
push
push
sti
pop
push
push
gs
incl
clc
imul
lods
shl
pushf
fildl
pop
and
loopne
jnp
inc
jns
xchg
out
outsl
dec
stos
mov
movsl
pmaxub
fsubrl
nop
or
adc
mov
mov
xor
xchg
inc
adc
not
push
mov
shl
lock
addr16
push
sar
in
and
or
addr16
and
jbe
pop
mov
aas
mov
ret
test
sub
xor
mov
push
mov
cmpsb
lret
pushf
pushf
push
je
cmc
mov
inc
imul
enter
add
sub
ja
add
std
scas
fistps
mov
stos
push
adc
inc
mov
out
pop
push
mov
sub
iret
and
mov
enter
mov
inc
mov
arpl
mov
test
psubb
shlb
mov
gs
push
sahf
mov
je
lea
cwtl
xor
mov
xorl
test
pop
cmp
sbb
icebp
xlat
jne
xchg
ss
push
mov
xchg
repnz
popl
dec
sbb
repz
roll
lds
div
mov
mov
decb
or
add
ss
pop
les
add
pop
sti
sub
out
js
ja
pop
test
les
shr
inc
rclb
cwtl
flds
sub
inc
xchg
fimull
scas
sbb
aam
lahf
pop
outsl
mov
push
test
hlt
pop
lds
repz
out
pop
jp
push
jno
das
inc
lds
jno
dec
xchg
ljmp
lods
cli
idivb
into
pop
push
dec
pop
pop
push
adc
sub
lea
aas
lahf
mov
push
test
gs
testl
int
in
sbbb
mov
mov
adc
add
popf
fcmovb
leave
and
cld
movsl
in
and
sub
insb
mov
xor
nop
popa
in
xor
sub
pop
std
xchg
mov
std
push
push
mov
and
xchg
lea
mov
xor
push
push
mov
or
loop
lcall
inc
or
xchg
les
inc
fsubp
inc
inc
outsl
inc
dec
psubq
mov
rcll
and
aad
mov
dec
add
push
jns
jmp
test
jne
pop
xorl
icebp
outsl
nop
xorl
inc
inc
and
icebp
ficomps
mov
jae
aaa
jo
and
mov
mov
lds
out
xchg
sbb
cmc
or
sbb
cmp
test
fcompl
aad
push
ljmp
addr16
push
mov
adc
pusha
mov
push
daa
popf
movsl
add
add
sub
sub
xchg
mov
or
cwtl
testl
rolb
xchg
cs
popf
pop
mov
enter
ror
cli
pop
push
push
jo
sbb
fs
dec
adcb
daa
movsl
sbb
or
mov
fwait
jb
mov
pop
lods
fsubl
dec
fisubrl
repz
repnz
xor
add
mull
mov
xchg
add
sbb
xor
daa
outsb
or
xchg
mov
out
add
and
repz
sti
xchg
xchg
sbb
es
lcall
sti
cltd
xor
add
add
adc
shlb
nop
or
mov
mov
lret
and
jp
scas
jecxz
sub
outsl
das
mov
lock
jmp
push
cmp
int
in
testl
xor
xor
stos
clc
cmc
dec
pop
mov
sub
lods
fadds
bound
jmp
mov
test
idivb
js
movsb
addb
imul
mov
inc
cs
jnp
or
aaa
and
xchg
mov
mov
rclb
dec
pop
imul
or
rorb
mov
pop
scas
sbb
shlb
mov
fsubrs
jne
and
or
ss
imul
sub
mov
add
fs
imul
pop
sub
pop
shlb
add
pusha
ret
out
mov
dec
iret
sbb
xchg
or
push
push
in
test
fwait
aad
int
cltd
jnp,pt
mov
lock
jge
inc
psllq
add
dec
push
in
rcrl
push
in
popf
sub
mov
sbb
in
cwtl
out
cmpsb
fst
in
mov
xchg
sub
mov
jle
mov
aas
mov
push
add
inc
test
jno
cmpsb
outsb
inc
xchg
subl
shll
cmp
or
scas
aaa
cld
dec
cmpsl
cmp
jbe
clc
pop
cld
aas
jmp
xor
cmpsb
jo
or
arpl
sub
sbb
push
movsl
mov
jae
mov
adc
jb
inc
and
jmp
mov
pop
push
dec
sti
pop
add
arpl
ljmp
pop
and
jecxz
adc
sbb
push
pop
dec
mov
and
fwait
push
inc
jns
fnstsw
sub
mov
ret
mov
sub
pop
dec
hlt
in
jmp
xor
ljmp
pop
xchg
push
jo
lods
mov
lcall
fdivrp
neg
xchg
stos
gs
in
adc
xlat
dec
jp
arpl
push
lock
fisttpl
push
movsl
jg
das
dec
cmpsb
jb
pop
dec
mov
sbb
jbe
cmp
push
sbb
pop
dec
lods
inc
add
sbb
sbb
xchg
pop
mov
and
sbb
in
scas
test
fcomps
in
inc
dec
cmc
jge
test
ja
jg
outsl
jbe
mov
mov
scas
xchg
daa
cmp
add
inc
adc
xchg
scas
pop
movsb
inc
shlb
xchg
push
daa
cld
cmp
sub
pop
in
in
push
insl
mov
cmc
lods
jecxz
jo
add
sbb
mov
mov
cs
ret
leave
mov
repnz
xor
dec
sub
xor
xor
pusha
jmp
pop
js
sub
enter
sub
aaa
jecxz
ret
xor
sbb
rcl
adc
repnz
mov
icebp
dec
fidivrs
stos
cmp
add
mov
pop
xlat
sahf
sub
adc
push
lret
pop
iret
rolb
cmp
orl
pushf
jbe
mov
mov
fcomps
notl
bound
sub
lret
mov
xor
and
jno
sti
into
lret
ja
xchg
push
fldcw
hlt
jno
into
sub
push
es
mov
dec
dec
mov
push
imul
out
in
cmpsl
ret
adcl
sub
dec
jb
pop
pop
mov
fdivl
sub
outsl
std
or
shll
xchg
mov
push
out
sub
pusha
jnp
jmp
ljmp
mov
or
movsb
jbe
rorl
frstor
fs
jmp
pop
jb,pn
ss
lret
inc
inc
jge
lcall
popf
mov
push
push
addr16
mov
push
jbe
jmp
cltd
add
lea
xor
sub
pop
aaa
pop
sub
mov
out
dec
xor
ficoms
and
adc
repz
lock
add
mov
rorb
mov
addr16
add
sub
sub
aad
add
jge
dec
fidivs
cmc
es
jnp
pop
fdivs
daa
dec
ljmp
mov
jecxz
xor
ret
adc
lea
jnp
jns
sbb
aam
stos
scas
out
mov
fcomps
int
mov
repz
inc
push
in
sub
dec
and
test
sahf
mov
sbb
fisttps
fistl
pop
xchg
and
lahf
movsb
sti
cmp
rcrb
hlt
fldl
decb
mov
lahf
pop
jmp
loop
push
or
push
jns
sbb
popa
pop
popa
mov
imul
mov
shl
test
lret
add
and
in
aad
stos
nop
fimuls
into
fs
add
je
movaps
int3
jp
sub
outsb
adc
jp
and
ficoms
xchg
dec
and
loopne
xlat
cmc
push
push
jno
adc
xor
or
mov
xchg
mov
movsl
sbb
xor
cmovle
mov
shlb
cwtl
call
sarl
cmc
aaa
out
imul
das
cmp
xchg
test
xor
insb
pusha
cmpsl
cmp
jmp
mov
jl
xchg
or
stc
mov
dec
fidivs
push
mov
ss
sbb
lods
jl
sbb
dec
push
mov
sbbb
sub
sub
pop
cmp
cld
sub
fsubrs
popa
sbb
jb
mov
lret
xchg
or
adc
leave
and
stos
ss
adc
repz
ret
mov
insl
or
iret
lods
xor
add
hlt
adc
pop
add
cmpsl
call
add
cmc
inc
or
sub
sarl
fistpll
add
xchg
and
cmp
clc
flds
jns
fisttpl
dec
test
jg
sbbl
out
les
ja
mov
lea
pop
cmpsl
pop
aas
mov
xchg
ja,pn
add
or
mov
pop
icebp
push
inc
shr
in
cli
shrl
push
pop
out
fwait
ja
mov
into
mov
mov
push
imul
jne
shll
in
cmpsb
and
or
sub
addr16
push
icebp
sahf
in
jle
fldt
dec
jns
out
pop
and
sub
mov
adc
mull
pop
sub
or
mov
mov
dec
push
adc
ret
xlat
insb
hlt
shrb
repnz
loop
add
fidivl
in
fisubrs
sub
stos
sub
mov
dec
pop
mov
loopne
shlb
xor
movsl
pop
xchg
das
int
int
add
fwait
pop
jnp
adc
dec
rcl
pop
fisttpl
loope
add
cli
mov
push
dec
xor
loop
pop
pop
fs
push
fnsave
dec
sub
sbb
xor
adc
jb
cmp
mov
insl
or
mov
pop
xor
aam
mov
sarb
jl,pn
ret
jge
in
outsl
mov
sbb
stos
cmpsb
jo
jp
orl
cmp
dec
lods
lcall
pop
mov
stc
add
sti
xor
and
add
mov
xor
jno
rcr
fstpt
repz
cld
fucomp
mov
fildll
add
xchg
outsb
mov
cmpsl
out
add
fldt
mov
dec
clc
jo
sarl
movsl
xchg
sbb
outsb
mov
sbb
mov
inc
sbb
xchg
pop
mov
mov
rclb
hlt
cmp
bound
mov
into
cmp
or
and
jne
push
xlat
jnp
adc
cmp
and
dec
add
mov
fldt
lea
jne
in
add
xor
das
int3
ret
mov
mov
inc
test
rcr
lods
sbb
subb
loop
int
cld
push
jle
mov
push
lret
dec
sbb
mov
ja
push
aam
mov
lea
jnp
pushf
sbbb
adc
inc
xchg
adc
jns
inc
shrb
fsubp
mov
sub
dec
adc
inc
in
mov
fnsave
inc
inc
mov
ret
push
cmp
ds
xchg
lret
or
int3
push
sub
mov
clc
lods
or
xchg
std
pop
dec
int3
sbb
mov
out
xchg
outsl
xchg
je
loope
inc
mov
or
fcomip
cmp
lret
xlat
jne
push
es
insb
dec
jne
sub
jle
lods
ljmp
mov
push
insl
fbstp
mov
sarb
rep
cmp
xchg
ds
notl
fmull
es
sbb
or
pop
dec
or
or
add
into
js
data16
out
adc
push
movd
dec
inc
das
mov
inc
out
outsb
ret
push
add
inc
sub
pop
cmpsb
push
adc
mov
xlat
es
jbe
sahf
cltd
mov
jl
and
and
fistps
int3
insb
jle
push
fistps
rcll
cmp
jns
test
outsb
inc
mov
sub
inc
jne
sub
insl
scas
add
jle
jmp
dec
stc
push
shll
xchg
cmp
fiaddl
movsl
int
outsl
imul
imul
gs
sbb
in
cmp
pop
sub
movsl
and
jne
mov
lods
fucom
pop
mov
data16
push
dec
enter
and
inc
insb
dec
rcr
repz
fsubr
outsb
sbb
arpl
dec
mov
dec
dec
stos
leave
dec
mov
aam
lds
ljmp
dec
aad
pop
aad
mov
rorl
fnstsw
pushf
andb
mov
sahf
mov
fiaddl
push
sub
pop
pop
sub
movsb
xor
ds
jecxz
jecxz
stc
inc
cmpl
sbb
xchg
push
popf
pop
insb
mov
and
inc
roll
sub
in
pop
test
pop
mov
les
out
loope
mov
int
xchg
sti
adc
outsb
xor
mov
adc
jmp
es
push
jnp
push
cmp
or
xchg
adc
mov
adc
jb
and
lods
movsl
push
push
pop
scas
pop
lret
sub
adc
loopw,pt
faddl
jne
mov
outsb
scas
inc
test
into
in
inc
xor
insb
outsl
sub
sbb
adc
mov
sbb
sub
andl
and
fnstsw
es
inc
lock
notl
pop
push
lods
scas
mov
ljmp
push
into
cs
jo
shrb
pop
insb
push
sub
inc
push
jbe
adc
or
cwtl
jmp
mov
push
dec
pop
inc
and
pop
aam
adc
mov
shrb
or
xchg
scas
pop
iret
cmpb
data16
push
fistps
jns
or
js
imul
mov
cmc
jl
ds
loop
sub
clc
lock
imul
adc
jno
jge
jnp
cltd
scas
inc
mov
aam
pop
dec
jecxz
cmp
lods
outsl
loope
sub
mov
je
add
mov
jecxz
cmp
mov
xor
cmp
push
test
aam
popf
dec
mov
fcoms
lret
int
pusha
or
mov
ja
xor
sbb
cmp
adc
xor
mov
xchg
mov
adc
jnp
test
dec
repz
sbb
test
dec
mov
ret
insl
fadds
dec
xor
cmpsb
push
call
fs
pop
pop
sbb
xchg
test
and
push
inc
or
add
xorl
loope
aad
gs
fbstp
add
mov
xchg
pop
testl
pop
and
pop
jne
outsl
ja
pushf
inc
or
rclb
add
loop
and
lret
test
mov
xor
push
stos
adc
repnz
into
adc
jg
shlb
xor
xchg
loope
repz
dec
pusha
fstl
inc
jp
dec
mov
push
adc
jo
dec
repz
cmp
popf
ja
and
sub
test
data16
das
xlat
pop
sub
dec
jnp
ret
xchg
sbb
inc
lahf
nop
subb
xchg
ret
inc
movsb
adc
add
adc
movsb
dec
fwait
adc
add
scas
push
scas
mov
mov
push
xor
inc
jo
jg
xchg
adc
jae
mov
scas
adc
int3
out
cmpsl
jne
jp
insb
mov
xchg
sbb
push
dec
mov
mov
cmc
cltd
cmpsl
dec
fwait
xchg
ja
insb
ljmp
jecxz
outsl
adc
lock
adc
dec
or
inc
push
cli
xchg
push
jl
loope
sarl
lret
add
mov
add
xchg
push
add
pop
push
nop
jecxz
and
mov
inc
test
add
push
push
mov
sub
mov
sbb
fisttpl
sbb
mov
pop
cmp
fwait
aad
movsb
insb
xchg
mov
adc
std
cmpsb
test
sub
aam
in
aaa
cmp
add
mov
cmp
jge
push
pop
cmp
test
popf
adc
sub
cwtl
in
cmpsb
fs
imul
dec
fisttpll
add
int
stc
outsb
cs
ljmp
out
sbb
js
sti
push
mov
arpl
movsl
std
or
scas
cmp
int3
popf
clc
dec
lret
xchg
jb
xchg
icebp
sahf
cs
cmp
sbbl
dec
jne
mov
rol
addr16
mov
rorl
clc
stc
mov
jmp
add
clc
sbb
fwait
push
sbb
jecxz
lahf
mov
clc
or
arpl
test
jl
push
mov
xor
pop
and
out
cmpsb
pop
xchg
or
push
lods
dec
jle
push
mov
or
xchg
xchg
mov
sti
mov
mov
cmpsl
mov
cs
aaa
lahf
in
inc
hlt
ret
jae
iret
sub
adc
or
lret
adc
cli
not
mov
xchg
mov
or
out
mov
lcall
push
cli
pop
ret
rorb
adc
sti
cmp
and
sub
cmpsb
int3
pop
and
mov
es
loop
pusha
push
push
loopne
fcoml
sub
xor
scas
and
inc
hlt
add
mov
lcall
hlt
jl
aaa
repnz
mov
movsb
sarl
out
ror
jno
pop
shrb
popa
add
pop
jecxz
popf
outsw
and
cmp
fs
movsl
pop
dec
dec
add
out
data16
pop
ja
cmc
call
int
pop
ss
add
jno,pt
mov
dec
dec
divb
add
and
cmc
mov
and
mov
aam
xchg
dec
aas
sbb
inc
cmpsl
fcomps
pop
mov
add
adc
leave
cld
pop
adc
or
mov
cmpsl
les
dec
aas
sarl
push
pop
dec
mov
pushf
fnsave
sbb
pushw
stc
dec
cmp
adc
dec
mov
popa
add
jbe
mov
push
mov
imul
jns
jbe
pop
inc
sahf
push
arpl
cs
xchg
inc
inc
xchg
xor
in
fsubp
and
mov
dec
push
scas
dec
hlt
ret
jecxz
out
cmp
idivl
jg
xchg
outsb
pop
insl
jbe
adc
ret
movsb
or
cltd
or
sub
data16
out
pusha
inc
je
adc
sub
test
mov
imul
mov
mov
xchg
fbstp
cmp
fcoml
data16
dec
test
call
jb
xor
fldenv
xchg
jmp
in
mov
cld
and
int
clc
loope
flds
imul
jle
sbb
push
loop
les
or
push
loopne
or
xor
add
cmpsl
push
cmp
cmp
pop
push
cmp
into
mov
cli
mov
out
mov
push
push
push
clc
push
cmpsb
mov
or
pop
es
outsb
setbe
cmp
jg
xchg
shrb
pushf
cs
shrl
mov
push
or
sbb
cld
mov
or
or
fs
jg
adc
insl
pop
arpl
inc
aad
mov
cmp
xor
xchg
pminsw
sbbl
dec
nop
andl
cli
pop
loope
call
mov
xchg
xchg
xor
adc
adc
jnp
shll
and
iret
scas
sbb
sbbl
arpl
jb
loop
test
loopne
popa
cmp
shl
fcompl
pop
fwait
pop
loope
cld
imul
pusha
add
push
out
xchg
bound
inc
in
mov
xor
cmp
jae
out
call
cmp
or
scas
mov
or
in
icebp
dec
cmp
inc
xchg
cmp
stc
dec
or
pop
mov
test
inc
add
sub
and
shr
add
adc
add
imul
add
aas
out
out
mov
lahf
sub
add
fists
sbb
adc
shlb
fadds
test
rorl
scas
addl
rol
and
push
sub
xor
inc
add
xorb
std
sbb
aaa
or
dec
test
in
jae
push
ret
idivb
cwtl
and
and
in
sub
sub
test
inc
stos
dec
pop
in
adc
pusha
pop
cmp
out
jo
imul
or
int3
mov
lret
stos
add
pusha
pop
ss
adc
mov
push
xor
fwait
sub
arpl
adc
fiaddl
clc
lea
aad
rorl
lcall
sub
add
sbb
ret
xchg
jl
outsb
adc
xchg
sbb
sbb
push
ret
mov
cmp
sbb
jecxz
mov
insl
xchg
mov
adc
lods
bnd
addr16
cmp
addr16
jp
sub
mov
testl
leave
popa
jecxz
mov
ret
nop
sbb
push
adc
in
inc
fnstcw
pop
lgs
cmp
test
stos
mov
lret
cmc
adc
mov
inc
push
clc
push
daa
sarl
sub
sub
sub
outsl
jecxz
cmpsl
fiaddl
add
and
sti
fstpl
pushf
push
or
pop
xor
imul
dec
repnz
bnd
outsl
sub
insb
mov
pop
mov
cltd
pop
cmpsl
sub
mov
mov
inc
int
and
jl
xchg
es
enter
mov
loop
sbb
je
imul
cmpsl
clc
clc
sbb
jmp
aam
sbbl
cmp
mov
push
pop
xchg
das
icebp
sti
out
inc
push
sub
scas
sub
jl
mov
mov
and
push
mov
ss
inc
mov
repz
fwait
jp
pop
jne
stc
call
sub
push
inc
cmp
rclb
push
push
lods
sbb
int
push
and
dec
sahf
pop
jl
out
xchg
stos
add
pushf
inc
sbb
inc
mov
fidivrs
pop
adc
ret
inc
inc
fbstp
sbb
and
jo
enter
jae
jae
sub
shll
or
imul
cmc
fs
roll
aaa
xchg
outsl
js
inc
arpl
xchg
inc
andl
mov
cmp
dec
imul
mov
dec
cld
inc
adc
cmpsb
pop
add
xchg
roll
mov
inc
lea
lock
lahf
test
mov
add
rcll
das
jne
lods
and
addr16
jg
cmp
xor
fdivs
movl
pusha
xor
test
mov
jmp
jle
test
ja
scas
cmp
mov
pop
test
stc
jmp
pushf
daa
lea
and
popa
ret
mov
pop
jg
mov
mov
xchg
test
push
dec
sti
je
add
sub
dec
mov
bound
cmc
jl
insl
push
push
dec
pcmpgtb
ret
in
lds
xchg
std
out
rol
mov
fisttps
cmc
std
ds
add
push
sar
in
ficoml
cmc
lock
lods
push
outsl
jns
out
movsl
cltd
cmp
push
dec
sbb
jp,pt
lock
xchg
shrl
ret
pop
sbb
cmp
lods
popf
lods
pop
outsl
add
and
aam
syscall
xchg
adc
inc
scas
pop
mov
pop
cmp
scas
out
jge
sbb
push
xchg
dec
cmp
push
cmp
ret
test
xor
fs
sar
fsubrl
dec
sub
and
xor
or
arpl
out
lret
fsubl
xchg
mov
cmp
iret
xchg
mov
sub
fst
cmpsb
adc
mov
cmovs
mov
mov
ficoml
scas
icebp
insb
xor
icebp
cmp
mov
bt
fbstp
push
fbstp
and
and
push
pop
inc
push
repz
cwtl
gs
ja
mov
xchg
adc
or
pop
andb
xchg
sti
out
cwtl
inc
jge
mov
mov
cld
dec
pop
insl
das
int
cmpsl
enter
jbe
dec
xor
dec
cmpsb
xchg
aas
xchg
jo
inc
stos
push
sub
dec
push
loopne
repnz
and
out
ja
fdivrs
iret
lods
xchg
mov
out
xor
jne
sbb
and
xchg
insb
and
lcall
andl
xor
mov
popf
sub
int3
or
jne
insl
test
xchg
cmpsl
aam
movsl
sub
jecxz
inc
cmpsb
or
dec
repz
mov
mov
mov
lods
mov
data16
je
mov
push
sub
jne
cmpsb
mov
mov
lret
imul
xchg
gs
adc
push
ljmp
testb
mov
sub
outsl
xchg
push
xchg
pop
je
movsb
fcmovu
sbb
rolb
mov
mov
daa
les
fistl
scas
nop
cs
ret
jmp
leave
ficoml
mov
pop
inc
and
call
jns
inc
addr16
jge
pop
test
adc
aam
pop
mov
loop
ret
out
cmp
je
lahf
push
insl
adc
aas
in
fstps
xchg
in
fmull
xchg
icebp
inc
lods
outsb
into
adc
lret
xor
lahf
rol
outsl
ss
mov
jne
test
jl
cmc
pop
jmp
nop
outsl
and
mov
out
inc
jnp
and
lea
or
fisubs
sahf
cli
jge
mov
pop
nop
dec
xor
pop
in
xor
pop
xor
inc
or
dec
cmp
adc
addr16
lcall
aas
or
xchg
adc
push
test
or
jge
pop
repz
jg
inc
mov
xor
dec
push
push
push
push
mov
aam
lret
jbe
sbb
mov
loope
xchg
cld
dec
adc
adc
rolb
test
push
rorb
rcll
xchg
cltd
pushw
adc
dec
das
scas
xchg
pop
mov
je
sub
lret
in
dec
ret
lgdtl
je
scas
sub
push
lret
adc
nop
jne
push
testb
xchg
jbe
cmp
or
popw
sub
adc
loop
scas
xchg
mov
rcr
jae
push
das
dec
jae
push
sti
iret
arpl
push
test
add
loopne
lods
std
jl
pop
xor
add
jne
xor
mov
pop
inc
adc
push
push
out
pop
inc
insl
imul
add
push
mov
mov
in
popl
sbb
fwait
fwait
and
movzwl
adc
clc
mov
xchg
mov
aaa
or
std
push
sbb
cwtl
daa
adc
jecxz
cmpsl
jge
cmpsb
fimull
insl
xchg
cs
push
and
scas
mov
pop
sub
dec
push
cmpsb
push
mov
xchg
test
mov
or
mov
cs
scas
xor
pop
inc
jmp
mov
jns
and
xchg
mov
push
fstpt
pop
int3
adc
sub
mov
lcall
xor
jnp
mov
inc
push
outsl
sbb
test
add
lahf
test
adc
or
jbe
out
loope
imul
push
adc
fdivs
dec
ljmpw
push
addb
cmpsl
fimuls
sub
hlt
lds
in
fcomps
ret
outsb
add
adc
ret
xchg
xchg
xor
or
es
ds
in
out
and
push
push
and
jno
jg
inc
ss
lahf
push
jp
mov
aam
jmp
pusha
fsubp
js
das
xchg
and
sti
push
xor
mov
repnz
mov
hlt
inc
cmp
cmpb
mov
aaa
mov
xlat
xchg
scas
mov
mov
loopne
js
jno
int
fstl
pop
mov
jbe
js
bound
addr16
lods
in
shl
loopne
loopne
in
jl
xor
out
in
sub
insb
aad
or
mov
addr16
jnp
lods
inc
insl
mov
orl
inc
cmp
or
cs
inc
adc
cmp
insb
xchg
mov
pop
and
xchg
mov
repnz
ljmp
leave
sub
sub
mov
inc
mov
out
popa
sbb
lret
scas
xchg
xor
faddp
in
mov
push
fbstp
test
lea
and
lock
mull
jp
mov
jae
inc
xchg
sbb
dec
iret
jne
mov
mov
fistpl
in
sbb
stc
test
push
outsl
dec
mov
dec
add
in
arpl
xor
or
mov
mov
enter
lahf
mov
push
in
add
push
xchg
mov
pop
movsl
cld
mov
sub
jb
jecxz
jg,pn
dec
xchg
jb
or
dec
mov
mov
das
push
ficoml
fisubl
adc
aas
dec
icebp
inc
test
mov
imul
lds
scas
lahf
xchg
push
pop
int
out
pusha
sub
sbb
loope
xchg
lock
push
cmp
xor
fstl
aad
scas
add
add
adc
push
dec
sub
leave
cmc
adc
mov
xor
repz
sub
insb
loop
ljmp
or
pop
push
mov
push
mov
lock
mov
cwtl
sub
mov
loopne
out
out
push
addb
sbb
sub
ds
mov
xor
int3
pop
divl
lcall
ljmp
push
outsl
ret
jo
xlat
xchg
into
inc
pop
or
cmp
sbb
imul
jle
mov
push
mov
lds
cmpsl
jp
inc
orl
adc
inc
inc
leave
jb
lock
scas
inc
xor
sub
cmpsb
add
inc
cmpsb
mov
jb
nop
data16
push
mov
daa
stc
lods
xor
scas
mov
ss
push
inc
push
rcrb
out
out
in
in
adc
sbb
inc
xchg
fsubrl
push
mov
cmpsl
jae
jl
dec
add
hlt
and
stos
push
ja
movb
jg
jnp
test
sub
add
dec
cwtl
adc
sub
sub
stc
cwtl
jecxz
mov
add
rcrl
pop
pop
subb
mov
xchg
sub
push
add
adc
test
inc
mov
jo
sbb
jecxz
stc
xor
or
add
pop
testl
stos
mov
enter
ljmp
std
bound
jne
inc
test
adc
sarb
jno
and
jne
dec
adc
sbb
inc
mov
push
lret
insb
adc
jbe
cmpsb
push
jp
ret
in
loop
je
sbb
cmp
jecxz
rol
int
icebp
jg
imul
xor
push
cmpsb
mov
mov
out
cmp
nop
mov
jmp
imul
dec
sub
lock
or
ljmp
repnz
stos
and
lods
dec
or
sti
leave
test
xor
cmp
shll
push
fisttps
ja
int3
pushf
out
lds
pavgw
das
mov
inc
imul
test
cld
fcomps
jp
mov
icebp
xchg
push
test
int3
outsb
popa
divb
xlat
cmpsl
push
xor
testb
jns
pop
inc
das
add
bound
and
divb
aam
push
adc
sbb
stc
sbb
fldcw
push
dec
int
fisttpll
aaa
xor
pop
add
xorb
nop
xchg
push
outsb
fnstsw
testl
icebp
mov
sbb
testl
mov
sti
mov
es
xorb
outsb
mov
jo
ja
add
les
ret
lret
jmp
xchg
scas
in
jb
pop
fildll
xor
jmp
fdivs
cmp
ja
push
jno
xor
sub
bound
clc
mov
add
dec
push
inc
insb
popa
xchg
dec
or
inc
xchg
and
aas
hlt
stos
mov
nop
leave
movsl
test
inc
inc
mov
mov
jmp
sti
pop
out
repnz
repnz
lds
or
pop
mov
clc
rol
push
pusha
pushf
xchg
sub
cld
sahf
dec
xor
fwait
sub
cs
in
addl
cld
or
mov
jbe
loop
push
frndint
pop
and
dec
xor
cltd
dec
iret
shll
stos
pop
hlt
int
lea
mov
xchg
mov
cmp
mov
rcrb
xlat
sbb
xchg
jp
pop
xchg
dec
lods
jle
cmpsb
sub
or
jle
mov
or
das
add
dec
mov
inc
cmpsb
mov
rclb
sub
movsb
rorb
or
cwtl
dec
cmp
sub
sarb
aad
cmpsb
xor
test
fs
cmp
cs
idiv
cmpsb
mov
rolb
scas
pop
rcrl
mov
movsl
dec
mov
fsubr
int3
push
mov
xor
in
push
inc
call
cmpb
cwtl
mov
push
mov
pop
loop
imul
xchg
add
rorb
cmp
pop
push
test
push
jno
outsb
js
pop
xchg
sub
inc
cmp
ret
xchg
pop
jle
inc
push
cltd
cmpsl
pushf
fdivs
fsubrs
mov
and
pop
mov
ss
pop
push
mov
sub
xchg
mov
daa
pop
mov
into
shrb
inc
inc
iret
cmpsl
cli
stos
fwait
mov
pop
mov
pop
scas
dec
addr16
pusha
xchg
iret
mov
mov
sbb
movsb
lds
mov
icebp
rorb
sub
repz
cmpsl
or
stc
inc
stos
mov
lret
adc
xor
aad
mov
adc
add
jae
xchg
fdivs
sbb
in
ss
mov
js
jno
xor
repnz
lcall
sbb
and
jle
xchg
jmp
sbbl
add
jb
stos
push
or
int3
inc
sub
daa
jmp
outsl
mov
cmp
test
mov
stos
cmpsb
jae
leave
or
pop
sub
add
jbe
das
mov
mov
mov
mov
gs
cwtl
add
je
mov
mov
fucomip
lcall
or
popa
fldl
lahf
push
sbb
test
stos
ja
jg
lock
jne
add
sarl
dec
sbb
adc
dec
cmp
inc
cmp
and
stos
push
fsubs
push
dec
and
xchg
pop
or
cmp
push
push
int3
add
fldln2
push
rcll
outsb
mov
jl
dec
adc
sbb
mov
jp
push
jns
jge
fisubrs
sub
ret
pop
decl
mov
cmp
inc
cltd
pop
lods
sbb
out
jne
cs
sub
lea
data16
or
jns
xor
cmp
push
sub
pop
add
cwtl
jns
mov
jmp
jg
inc
in
fldenv
cmc
sahf
clc
xor
jbe
shrb
loop
daa
pop
sti
jo
mov
mov
mov
xor
add
fidivs
add
lret
andl
fmull
lock
push
lock
mov
jbe
das
cli
add
test
xchg
dec
sbb
xchg
mov
fwait
sub
lea
cmp
xchg
pop
jnp
mov
fistpll
shll
sub
lock
and
xor
adc
xor
push
out
hlt
cli
jno
std
icebp
cltd
inc
stos
or
pop
xchg
aam
ret
fstps
fisubrs
or
xchg
or
push
sub
aaa
sbb
cmpsb
mov
pop
decb
pop
cs
hlt
shll
xor
or
jg
out
and
ficomps
inc
out
inc
in
into
mov
out
popf
daa
xchg
addr16
in
xchg
repz
shll
add
add
adc
pop
and
cmp
xor
subl
inc
mov
pop
lret
lods
sbb
fstpt
xor
cs
insb
dec
icebp
aad
cmp
das
inc
pop
pop
scas
dec
mov
xor
adc
xor
pop
inc
pop
xlat
test
bound
repz
xor
data16
and
gs
push
mov
mov
sub
fisttpll
push
mov
es
movl
cmp
cmp
cmp
jge
mov
and
xor
orl
jg
jp
and
aam
mov
stos
sbb
mov
daa
mov
jae
ficompl
cmpsb
jne
push
push
mov
ret
or
inc
mov
das
fimull
fldl
fdivs
add
je
dec
lods
aam
lods
jnp
cltd
lods
cwtl
lods
insl
xchg
sub
repnz
sub
xchg
pop
stos
cmp
jnp
cmpb
divl
dec
pop
in
lods
shlb
andl
daa
mov
movsb
jecxz
ds
pop
mov
mov
jns
into
test
mov
fwait
repz
xchg
or
dec
sub
loop
lds
movsl
mov
mov
fucom
in
loopne
ljmp
xchg
pop
dec
test
sahf
pop
mov
sub
mov
clc
ret
imul
jo
adc
pop
inc
mov
js
in
out
dec
sti
ja
in
xorl
std
test
gs
iret
cmp
and
fisubs
or
fs
mov
cmp
out
and
cmp
loop
stos
xchg
daa
test
mov
and
inc
lods
test
push
loop
mov
int3
inc
inc
insb
mov
insl
xor
jns
dec
inc
rcll
sbb
xlat
cmp
mov
inc
outsl
sbb
cmp
sub
scas
cmp
hlt
jae
in
stos
mov
fldl2t
into
xor
adc
cmp
lea
xor
pop
jbe
lret
fnstenv
fisttps
or
jne
mov
pop
and
lret
sbb
inc
sub
cmp
loopne
leave
pop
dec
xlat
adcb
jg
sub
mov
or
and
lods
rolb
das
ss
popa
dec
mov
sbb
movsl
divl
mov
xor
cmp
loop
pop
fwait
xchg
int
push
ljmp
and
test
mov
sbb
dec
mov
ret
pop
sub
dec
jo
in
fwait
sub
fs
or
dec
push
adc
out
ficoms
sti
push
aad
test
push
jae
xchg
mov
sub
jmp
jl
mov
xchg
cmpsl
dec
repnz
dec
push
sub
jnp
subl
push
sub
sbb
out
push
mov
inc
test
add
jb
out
pop
aas
mov
icebp
mov
mov
dec
out
adc
mov
mov
pusha
shl
dec
pop
mov
and
jp
jno
cli
pop
and
sbb
ljmp
out
pushf
or
jecxz
cmpb
fwait
add
iret
loopne
cwtl
cli
xchg
mov
movsl
fbstp
adc
outsl
push
or
cmp
pop
cmp
inc
inc
ffree
movsl
es
push
sub
add
or
pop
pop
sarl
pop
sti
mov
jb
and
mov
add
mov
cmp
or
xor
aam
and
out
xchg
mov
inc
ljmp
ret
inc
mov
push
or
add
xor
lcall
pop
cmpl
mov
dec
nop
stos
push
pop
in
sti
rcr
xchg
test
pop
xor
fcomps
mov
pop
pop
mov
lcall
jmp
mov
sbb
loop
into
mov
ljmp
fildll
popa
sbb
and
xor
iret
data16
fldcw
inc
jge
aam
sub
mov
dec
dec
es
mov
js
sub
jno
lcall
cwtl
fisubs
in
mov
pop
pop
fldt
mov
std
out
inc
sbb
jmp
mov
inc
and
adc
dec
pop
mov
bound
insl
dec
fistpl
not
pop
clc
std
mul
int
xchg
inc
jl
jmp
jmp
call
jae
je
sbb
push
rorl
push
fcmove
sub
inc
pop
xor
push
pop
es
inc
lds
icebp
lods
add
xchg
jae
ja
cmpsb
pusha
or
lds
jb
clc
sub
inc
sti
xor
pop
aas
test
mov
test
in
or
add
fsts
jmp
xorl
mov
outsl
xorb
pushf
rol
or
cld
or
sbb
pop
in
test
fwait
push
call
cs
mov
das
cmp
or
inc
test
lods
mov
add
mov
in
test
stc
xchg
das
cmpsl
inc
push
out
mov
and
lods
jp
jbe,pn
loope
aaa
jl
xchg
sbb
imul
push
enter
pop
out
mulb
add
neg
mov
xchg
sbb
mov
stc
scas
stos
mov
mov
adc
push
sahf
std
mov
rorb
rol
movsb
dec
sub
out
sahf
fiaddl
xor
adc
pop
dec
rcrl
sub
xor
mov
repnz
or
es
stos
in
mov
push
movsb
call
xchg
shll
push
test
push
outsb
popf
cli
fimuls
sahf
mov
imul
mov
pop
push
and
ss
push
daa
das
test
pusha
rcr
adc
mov
mov
mov
add
pop
stos
lret
cmpsl
sbb
aam
xchg
pushf
imul
cmpsl
lea
add
mov
in
add
adc
push
push
xor
and
out
inc
iret
dec
push
add
inc
and
sub
jo
cltd
jecxz
jo
jns
stc
cwtl
add
mov
fidivl
repz
jno
fcoml
in
push
or
repnz
mov
js
xor
sbb
mov
sbb
inc
cmp
adc
cwtl
xchg
pop
pop
stc
sub
lds
arpl
lret
adc
leave
scas
xchg
mov
pop
pop
jge
aad
add
xor
cmp
push
popf
out
mov
shrb
mov
sti
cmp
aam
aaa
and
add
in
adc
or
jl
push
ret
xor
int
test
insl
or
jecxz
mov
sarb
ljmp
cmp
je
mov
out
push
mov
xchg
loop
sub
sub
push
scas
outsl
mov
repz
in
js
push
mov
ljmp
or
cwtl
and
outsb
int3
pushf
iret
jno
or
ret
out
fs
enter
fucomi
dec
xor
xlat
inc
jg
andl
sub
xchg
cli
and
stc
popf
push
repnz
outsb
jae
lods
sub
or
call
dec
add
mov
movsl
pop
pusha
cmp
jecxz
mov
jp
jns
and
dec
das
ror
or
mov
mov
xchg
repnz
dec
mov
pop
sub
lcall
sub
push
xor
xlat
popa
mov
pop
aas
mov
rolb
dec
dec
push
sub
out
or
ja,pt
jno
mov
std
outsb
push
fisttps
ja
or
andb
inc
shl
pop
int
dec
xchg
iret
roll
leave
stos
mov
aad
mov
bound
pusha
xor
sub
mov
xchg
mov
cmpb
in
mov
push
jg
fs
cmp
lcall
mov
xchg
mov
jns
fwait
mov
jmp
nopl
out
outsl
aam
sub
clc
pushf
inc
dec
xor
jbe
imul
clc
jo
repnz
xchg
pop
mov
jno
lret
sub
gs
pop
stos
jg
pop
push
test
mov
lods
xor
in
stc
scas
dec
aad
fimull
push
cmp
jo
mov
hlt
jne
xor
mov
test
push
addr16
sub
push
rcr
sbb
lods
sbb
add
pusha
sbb
test
std
mov
dec
mov
xor
cwtl
movsl
mov
pop
mov
call
fbstp
outsb
add
fdivl
lods
mov
neg
xor
push
or
push
inc
out
add
flds
cmp
adc
push
ret
rorl
nop
enter
mov
mov
and
inc
incl
sahf
pop
sbb
mov
mov
inc
popa
fsubrl
mov
cmpsb
cwtl
mov
pop
jmp
in
mov
les
push
pop
cld
pop
rclb
sbb
stos
cmp
out
mov
ljmp
pop
cld
insb
lods
sbb
imul
in
mov
in
inc
add
xchg
jmp
repz
ret
popa
xchg
es
ret
daa
cmc
rorl
xorl
test
mov
enter
inc
stos
leave
xor
xor
stos
leave
jecxz
inc
stc
mov
ret
cmpsb
sbb
lods
fiadds
out
mov
mov
outsl
push
xchg
jp
lods
push
enter
or
add
es
inc
test
pusha
mov
jge
xor
dec
in
lret
movsb
mov
outsl
pop
cs
lret
pusha
jecxz
fidivrs
pop
mov
movsb
jns
xor
mov
mov
shlb
fcompl
adc
xor
roll
rclb
cmpsb
fcoml
leave
je
frstor
fildll
js
scas
jno
dec
cs
adc
imul
jle
adc
and
sub
add
dec
imul
dec
jne
xchg
xchg
dec
shll
movq
mov
add
sub
sti
aas
inc
push
cli
jmp
mov
inc
outsl
insb
imul
adc
add
inc
push
mov
mov
iret
pop
pop
arpl
sarb
icebp
xchg
xor
and
fbstp
shl
xchg
cmp
cmp
in
pop
and
aas
and
in
mov
add
jge
pop
movsl
repz
pop
adc
xor
pop
mov
shll
stos
test
fstpl
fwait
jnp
clc
adc
cwtl
test
movsb
sbb
std
out
es
js
mov
mov
in
mov
push
inc
ljmp
pop
std
loope
jmp
outsl
xchg
imulb
bnd
pop
out
movsl
sub
pushf
mov
xchg
and
mov
in
bound
lahf
or
inc
or
sub
xor
mov
stos
movsl
loopne
sahf
and
repz
and
jnp
inc
pop
cmpsb
adc
inc
push
jae
xchg
jge
push
sti
cmp
ja
test
test
icebp
dec
movsb
or
add
mov
and
in
nop
cltd
fldenv
test
pop
sbb
jp
vmread
mov
push
mov
mov
jge
push
adc
pop
stc
sbb
sarb
fidivs
mov
jl
cmpsl
movsl
stc
dec
les
sub
shrb
cld
cmp
add
in
imul
mov
cmc
dec
movsl
dec
jbe
adc
mov
out
movsb
mov
sbb
xchg
rcrb
pop
mov
add
sub
in
rorb
test
mov
repz
filds
pusha
inc
out
in
ds
mov
xchg
stc
mov
jne
xchg
mov
mov
rorl
add
and
mov
jb
sub
mov
mov
bound
mov
subl
mov
lock
add
repnz
add
bound
mov
lret
aam
lods
add
mov
xor
jo
cmp
nop
dec
mov
inc
aad
rorb
dec
mov
adc
jno
or
sti
dec
mov
cmpsb
inc
ret
inc
cmp
add
das
andb
ds
loope
lahf
jge
cmc
push
sub
adc
cld
adc
das
jle
out
mov
sub
dec
push
adc
movsl
jecxz
les
sbb
dec
out
mov
pop
lret
shrb
adc
pop
test
jle
push
stc
mov
jo
rorb
cmp
insl
dec
pop
aam
loop
test
arpl
adc
or
stos
inc
enter
cmp
inc
pop
add
outsb
xor
xchg
xorb
pop
sbb
xor
pop
jb
cmpsl
aas
pop
shl
mov
or
or
jge
mov
in
inc
add
pop
iret
sub
sti
lret
sub
into
xor
inc
lods
ds
jg
mov
inc
in
fwait
mov
shlb
pop
xor
std
add
dec
into
test
or
jle
aad
movsl
xor
fwait
push
mov
add
fst
cmp
pushl
adc
mov
mov
cmc
and
rcll
call
sub
xlat
pop
add
pop
stos
out
mov
stos
mov
xchg
sub
std
jp
imul
sub
insl
cmp
mov
jnp
push
jne
xor
sbb
outsl
mov
aaa
inc
push
sub
xor
xor
mov
adc
sub
rcr
sbbb
ss
imul
and
add
rcr
pop
enter
fwait
out
je
cmpsl
mov
xchg
cwtl
outsl
leave
pusha
or
or
mov
xchg
mov
inc
push
mov
push
imull
mov
insl
pop
xchg
pop
add
push
jg
add
or
enter
test
int
stos
mov
push
insl
ffree
push
test
xor
inc
lcall
adc
inc
ljmp
mov
and
and
stos
fs
inc
xlat
test
sbb
ds
cmp
inc
pop
loop
push
push
pop
xor
je
test
scas
cltd
pusha
dec
sbb
mov
dec
jecxz
les
aas
leave
lea
push
aad
dec
adc
lods
sbb
fwait
jmp
lcall
cs
mov
gs
int
adc
stc
adc
mov
mov
adc
nop
int
in
imul
stc
loop
lcall
out
mov
jge
push
push
add
jg
test
mov
fldpi
loope
lahf
nop
outsl
cmp
mov
int3
cmp
mov
inc
lea
jb
in
icebp
add
nop
mov
cmpsl
dec
mov
dec
cmc
push
ja
loope
iret
insl
negb
flds
xchg
sub
xchg
ret
add
call
in
aaa
punpckhdq
inc
cwtl
cli
cwtl
data16
shr
pop
pop
xchg
divb
and
cmc
mov
pop
pop
xor
lret
mov
popa
int
mov
mov
fs
das
adc
movsl
jbe
clc
mov
sbb
cmc
and
sar
dec
popa
arpl
lods
scas
outsl
mov
das
insb
xor
test
es
sub
insl
jne
sbb
ret
jns
andl
andb
pop
bound
mov
jo
dec
mov
in
push
addr16
enter
ljmp
jp
imul
mov
dec
daa
xchg
sbb
outsl
dec
movsl
fisubl
cli
fisubs
mov
adc
out
mov
pop
push
scas
and
stc
cmpsl
mov
pushf
aam
lock
mov
outsl
mov
or
cmp
ja
push
lds
dec
mov
mov
aaa
out
aam
adc
mov
inc
adc
adc
sbbl
and
fcoml
repz
stos
cmp
fstl
sbb
iret
sub
rorb
aas
sbb
inc
jmp
jo
push
sbb
cmpl
or
rcll
cmpsl
into
mov
push
mov
xor
jne
mov
testb
adc
mov
out
mov
test
or
test
add
inc
push
daa
pop
inc
hlt
push
xor
push
push
jo
push
loopne
sahf
nop
rorb
mov
insl
adc
push
sub
sub
jp
and
xor
or
fdivs
ljmp
push
mov
fcomi
sti
inc
popa
sub
push
lcall
insl
enter
xchg
cmc
jnp
pop
fldenv
das
mov
loopne
and
fwait
mov
loope
pop
test
and
hlt
pushf
divb
inc
aam
adc
push
mov
fisttpll
scas
nop
pop
popf
mov
dec
mov
push
xchg
stos
mov
fs
fwait
jl
adc
test
dec
add
bound
pop
mov
cli
mov
pop
xor
gs
mov
cmp
or
int3
rcl
mov
push
and
pop
aas
jae
bound
lea
add
add
cmc
aad
insl
push
inc
sub
stc
das
mov
outsb
test
pop
lcall
jno
aaa
fs
sub
inc
xor
xor
das
mov
pop
or
inc
pushf
subb
dec
cmp
call
rcl
lret
jbe
lahf
push
xorb
mov
int
idivb
push
subb
movsl
adc
or
lock
shlb
jne
cmp
bound
and
rcll
imul
pop
out
out
xchg
mov
es
mov
inc
pop
xor
mov
shlb
je
ret
and
or
mov
sbb
sbb
stos
sbbl
ret
test
adc
mov
pushf
outsl
cmpsl
daa
add
in
mov
mov
sbb
inc
leave
mov
les
popf
push
repz
sub
dec
ret
push
aaa
dec
in
push
jl
mov
or
sub
enter
shll
sbb
shr
add
jmp
cs
cltd
pop
stc
out
push
add
rcr
mov
inc
sbb
adc
mov
jbe
movsl
adc
test
mov
mov
fildll
xor
in
fsubrl
sub
adcl
xor
push
mul
loope
out
mov
outsl
fdivrs
jge
xchg
cld
es
mov
or
sub
add
arpl
popf
out
subb
test
sarb
push
ja
cmpsl
jl
push
or
sub
xchg
jne
mov
cmp
push
mov
pop
jge
in
fcomip
adc
inc
or
std
int
sub
sub
movsl
xor
cli
or
les
lods
pop
adcb
scas
mov
and
jno
rcr
mov
xor
and
sahf
icebp
xchg
push
mov
or
mov
inc
mov
jg
cwtl
mov
dec
sbbl
mov
pop
pop
cld
das
push
adc
push
in
sub
leave
push
scas
test
scas
mov
enter
mov
push
jo
add
sbb
sub
mov
jbe
dec
daa
shll
scas
testb
hlt
daa
sbb
push
dec
cmpsb
pushf
loopne
subl
push
xchg
inc
icebp
push
fmuls
sub
and
and
xchg
and
jp
lret
adc
and
mov
roll
jecxz
mov
sbb
sub
dec
movsl
mov
jg
loopne
addr16
dec
inc
sbb
out
filds
dec
mov
mov
or
lods
gs
mov
shrb
cmpsl
scas
xor
data16
in
repz
inc
pushf
and
das
ljmp
call
test
fs
icebp
mov
inc
les
cli
inc
and
dec
out
or
aam
test
or
mov
sti
std
out
sub
lret
xchg
int3
sub
cltd
xchg
and
stc
xchg
dec
ja
push
mov
cltd
pop
xchg
movsb
mov
push
pusha
xchg
xchg
adc
cld
sub
sbbl
loopne
data16
loop
mov
js
jg
mov
jbe
test
shrl
popa
cmp
push
pop
push
jp
pop
incl
scas
mov
lods
out
je
mov
mov
loopne
cld
mov
jo
fiadds
fsts
mov
int3
inc
or
mov
fidivs
aam
pop
jg
pop
inc
pushf
gs
stc
sbb
lret
jmp
cmp
lods
out
fwait
xlat
out
test
repnz
mov
aam
repz
mov
dec
sub
loope
xchg
sbb
and
ret
orb
xor
xlat
dec
out
fistpll
mov
addr16
mov
mov
cmpsb
xor
mov
jnp
mov
nop
int
pop
inc
lods
push
stos
outsb
nop
push
fdivl
shll
fistpll
aam
sbb
pop
mov
mov
xchg
xor
add
jns
icebp
adc
sti
movsb
jl
xchg
les
cmp
pop
arpl
fisttpll
outsb
lcall
or
push
push
inc
lock
pusha
lret
add
xchg
xchg
pop
lcall
lret
movsl
es
leave
adc
imul
mov
jno
cli
sbb
push
sbbb
cmp
adc
stos
sub
jae
dec
incl
mov
cmpsb
sti
mov
push
jns
pushf
inc
fstl
push
sub
and
and
scas
push
bound
adc
nop
inc
lret
mov
pop
pop
orl
dec
adc
mov
imul
out
jae
addr16
jne
outsl
shrl
add
sbb
xchg
cs
das
xchg
enter
push
jl
leave
cmc
into
push
pop
andb
or
or
jg
hlt
jp
pminsw
outsl
add
jnp
xchg
jl
and
arpl
aad
out
fsubs
movsb
xchg
cli
fcoms
dec
cmp
push
dec
lods
lds
jne
lret
int3
jo
pusha
push
in
and
lock
faddl
out
cmpsb
push
jnp
cmp
in
inc
in
xor
mov
nop
es
iret
cmp
pop
adcb
cmpsl
push
test
mov
cli
xor
mov
inc
push
mov
push
in
adc
inc
bound
mov
xor
mov
int3
pop
add
clc
mov
loop
sub
jmp
test
pop
xchg
fimuls
das
lods
mov
js
rorl
jl
add
mov
es
add
std
cmpsl
fidivl
out
test
push
mov
mov
in
mov
or
adcb
xlat
ja
push
jb
insb
add
and
xlat
inc
dec
ret
out
lods
or
jae
sbb
aaa
inc
pop
clc
mov
out
ja
mov
jl
push
jnp
mov
ret
sbb
scas
test
sbb
add
cs
xlat
hlt
sub
insl
lcall
fbstp
or
aaa
mov
xor
inc
push
push
adc
cmp
test
push
or
add
testb
cwtl
jmp
jne
lcall
lret
or
cli
lret
dec
dec
push
imul
aaa
data16
lea
out
out
push
test
dec
jbe
xor
fnstenv
add
xorb
cli
fwait
mov
add
sub
adc
rol
stos
jp
lods
insb
push
stc
xlat
mul
pop
xor
xor
lret
stc
jns
pop
mov
int
sar
mov
test
fcmove
aam
daa
cmp
enter
stos
stos
out
jmp
daa
rcr
add
and
push
adc
jg
addl
lods
stc
mov
xchg
pop
adc
hlt
mov
dec
divb
clc
stos
xorb
subb
rorb
adc
imul
xor
cmp
sahf
xorb
or
cs
lods
aas
ficompl
cmp
lea
es
aas
pmulhw
and
xchg
jl
inc
sbb
mov
insb
nop
cltd
mov
lock
lret
aas
jb
nop
pop
push
lret
aam
lret
push
inc
stos
inc
scas
loop
lock
adc
add
rcrb
cmp
stos
mov
xor
icebp
adc
mov
jecxz
sbb
pop
insb
add
and
es
dec
inc
sbb
mov
add
sahf
jecxz
push
push
stos
push
hlt
cwtl
scas
sbb
es
mov
and
fadds
xchg
inc
jno
ret
push
pop
fistps
dec
push
xchg
pop
fisttpll
iret
daa
mov
lahf
sub
data16
pop
imulb
scas
jnp
push
sti
pop
inc
inc
sbb
fwait
and
cmc
psubq
or
in
loopne
call
mov
xchg
push
push
jne
aam
out
mov
jg
je
cmp
out
pusha
sub
mov
fdivs
repnz
jmp
push
pop
dec
rcr
sub
mov
xor
xchg
ret
es
out
cmpsl
xchg
aaa
popf
cltd
ljmp
mov
xor
fidivrs
imul
mov
xchg
xchg
jne
push
clc
sbb
dec
aam
cwtl
mov
mov
adc
and
add
push
pop
mov
jbe
lock
push
out
push
aaa
xor
stos
mov
fnsave
jnp
and
pop
xchg
mov
mov
scas
cmc
and
sbb
das
mov
cwtl
add
push
add
mov
clc
nop
out
mov
pop
inc
mov
push
mov
cmpsb
mov
push
fwait
push
hlt
movsb
daa
push
call
in
lds
lods
pop
int
imul
cmp
rclb
mov
cmc
das
pop
adc
push
pusha
lock
inc
std
cmpsl
add
movl
test
pop
xchg
mov
inc
fs
es
push
push
scas
rcrb
mov
leave
les
cli
out
xchg
xor
push
imul
dec
sbb
stos
flds
sbb
test
stos
xor
pop
fs
stos
dec
xor
data16
push
mov
subl
xchg
pop
push
rcrl
out
mov
or
rorb
mov
add
les
cwtl
push
adc
sarl
sub
add
addr16
inc
xor
pop
jge
jp
js
stos
add
fwait
or
ds
repnz
mov
fsubrl
mov
movsb
mov
jns
jmp
fnsave
xor
pop
inc
ss
mov
xor
push
cmp
inc
mov
adc
add
stos
dec
sbb
stc
std
in
jg
dec
mov
fadd
ret
cld
mov
test
lock
ja
in
sbb
inc
sarb
pop
push
push
lcall
into
cld
stos
dec
jmp
or
mov
jne
out
test
cmpsb
fwait
inc
jmp
or
repz
ja
xor
xor
add
adc
lea
pushf
xchg
jae
aam
xor
adc
sti
dec
sub
sbb
fimuls
mov
ffree
push
int
xor
mov
jbe
inc
lods
mov
movsl
add
fimull
xchg
mov
lret
fsubs
lahf
sbb
push
es
aad
xor
push
inc
sbb
pop
pop
rcrl
add
in
movups
dec
das
fsubs
fadd
repz
clc
jmp
gs
arpl
movsl
cmp
sub
mov
js
sbb
dec
inc
fwait
mov
loopne
mov
mov
daa
push
jle
movsb
or
push
je
xchg
test
mov
dec
mov
inc
jno
and
negl
ja
lret
notb
sahf
mov
mov
adc
mov
test
pop
repz
nop
push
addl
subb
xchg
jmp
in
ss
dec
sbb
outsl
sub
stc
daa
stos
test
pop
lds
gs
sbb
test
push
mov
jle
push
mov
cltd
rcrb
mov
int
gs
add
sub
arpl
ret
mov
in
mov
cmpsl
sub
push
inc
shl
mov
mov
sbb
rorl
fnstsw
ret
jne
mov
cltd
leave
add
aam
pusha
mov
stos
das
pop
add
mov
add
xor
lret
fdivs
into
lock
pop
inc
out
insb
popf
jecxz
popf
inc
imul
mov
repnz
dec
jge
stos
jb
sarb
cmpxchg
data16
popa
stos
mov
inc
js
mov
sahf
subl
js
icebp
mov
jno
push
or
dec
cmp
adcl
mov
cmp
or
int
pop
outsl
movsl
mov
inc
das
jnp
pop
daa
std
roll
mov
pop
ds
xchg
pop
std
cmc
aas
pusha
test
sahf
jmp
fldcw
mov
pop
imul
sub
pop
sub
stc
mov
mov
xchg
stos
dec
inc
loopne
and
pop
sarb
mov
cli
and
enter
pop
test
dec
mov
xchg
ss
je
scas
int3
adc
inc
mov
in
jb
daa
push
clc
jnp
cmp
or
pop
sbb
lock
pop
jle
xchg
sub
sub
shl
push
pushl
int3
je
xor
and
xchg
add
mov
push
out
xor
and
ljmp
scas
dec
ljmp
orl
aad
fst
pusha
sbb
mov
pop
mov
cmp
out
sbb
roll
mov
mov
mov
or
sarl
test
outsb
inc
xchg
adc
test
test
jle
jno,pn
lock
mov
jae
in
push
and
push
lea
rorl
mov
sbb
jge
out
adc
mov
lcall
jl
cmp
cmc
ficomps
lea
mov
ljmp
xchg
sti
pop
loopne
stos
enter
int
xchg
iret
loopne
iret
mov
cli
inc
jmp
mov
sbb
mov
xadd
and
fidivrl
outsl
mov
and
inc
int
push
int
ljmp
ss
pop
repz
dec
lods
lcall
sbb
cwtl
sbb
dec
mov
lahf
outsl
add
sbb
mov
cltd
test
xor
jo
inc
cmc
mov
jns
or
rolb
loop
pusha
jae,pn
xlat
cld
jnp
shl
jp
jge
mov
mov
rcl
test
push
or
push
aaa
cmp
stos
sub
pushf
call
xchg
jp
iret
mov
fldl2t
std
stc
cmp
or
cmc
test
movsb
nop
rorl
scas
jecxz
lret
cli
xor
mov
lods
xor
fisttpll
pusha
mov
loopne
xchg
xor
clc
adc
pop
adc
cmp
jmp
sub
pusha
into
jle
mov
jnp
or
test
inc
shrl
fcomp
mov
pop
or
mov
cmp
pop
cmp
lods
aam
and
dec
out
fdivrp
ds
inc
bound
scas
pop
rclb
mov
pop
inc
aas
cmc
daa
pop
mov
or
mov
test
shlb
or
outsl
test
mov
call
test
or
stc
push
nop
adc
cs
xchg
testl
mov
inc
int3
push
ret
push
imul
sub
lds
aad
sti
sbb
mov
adc
pop
dec
xchg
daa
add
sbb
sbb
jae
test
dec
sub
xchg
sub
sub
scas
pushl
pop
and
push
jbe
mov
jb
dec
into
das
pop
les
dec
push
xor
lds
or
cmp
pop
or
test
dec
leave
push
bound
scas
cmpl
movsl
or
inc
jle
and
fidivl
sbb
ficoml
dec
pop
mov
stos
sbb
adc
je
xchg
into
mov
test
ret
jp
xchg
inc
push
pushf
cmp
xlat
add
out
rcl
jnp
cmpsl
stc
push
xor
ss
mov
dec
jecxz
lea
repnz
xchg
xor
and
xchg
icebp
filds
lret
in
or
stos
in
idivl
push
add
ficoml
js
pop
xchg
jns
mov
mov
inc
test
inc
loope
adc
dec
data16
mull
xchg
test
jp
inc
sbb
ljmp
lret
cmp
fistl
jmp
rol
lahf
dec
lods
pop
or
mov
jle
rorb
inc
int3
call
out
loop
or
lret
add
testb
mov
or
ror
pop
xchg
cld
add
lea
cmp
xor
xchg
lret
fildll
add
nop
in
pop
inc
sahf
hlt
cmp
add
jno,pt
adcb
and
pop
mov
repz
and
flds
leave
fistpll
bound
xor
adc
cmc
andl
mov
xchg
xorl
cmp
insl
jg
repnz
emms
cwtl
popa
or
dec
cmp
adc
jmp
push
shll
repnz
add
mov
leave
push
out
dec
push
cmp
mov
ret
rclb
sahf
outsb
jns
ret
lods
cmp
mov
subl
stos
inc
push
lds
inc
sbb
mov
iret
pop
sbb
sub
ja
push
scas
andl
xor
roll
and
fimuls
call
xor
xlat
addr16
rcrl
ror
js
lods
mov
popf
popf
pop
testl
sahf
sub
mov
sub
mov
inc
mov
push
cmpsl
add
lock
mov
xchg
out
daa
out
jmp
ds
adc
loope
jnp
jns
and
jnp
jae
imul
add
inc
mov
je
test
cmc
outsb
xor
mov
cmpl
in
in
outsb
iret
pop
mov
test
push
jo
aaa
pop
mov
hlt
call
jnp
mov
ret
sub
adc
fidivl
in
xchg
aam
inc
fnstsw
movsb
pop
xchg
adc
or
les
mov
sub
repz
shrl
pop
inc
test
mov
sbb
andb
fs
dec
pop
mov
add
push
aad
call
cmp
add
jne
lds
aad
dec
cmc
lds
push
xor
sbb
rcrb
add
sub
ja
adc
push
or
ss
fld
scas
adc
andb
loop
int3
cmp
lods
sub
inc
lds
mov
jmp
stos
popa
or
cmp
mov
addr16
out
cmp
xchg
xchg
pusha
jnp
mov
cmp
fs
jno
out
cltd
sbb
xor
or
or
popf
pop
pop
and
out
inc
and
pushf
pop
push
pop
xor
les
push
mov
mov
add
pusha
lcall
sbb
sbb
fstps
cmp
sub
insb
sub
daa
cmp
test
mov
push
push
pop
les
add
outsb
stos
add
push
je
cmp
dec
mov
icebp
out
add
add
daa
addl
leave
push
shl
xor
inc
pop
int3
enter
mov
aaa
adc
mov
fcmovu
fs
shrb
stos
in
pop
xor
dec
out
dec
jg
mov
leave
or
je
mov
push
pop
insl
scas
nop
fnsave
or
dec
push
in
fmuls
ret
loop
mov
daa
jnp
dec
aaa
xchg
imulb
in
mov
push
pop
push
cmp
imul
adc
add
leave
push
scas
mov
jbe
cs
arpl
pop
mov
mov
or
cmp
mov
in
es
fwait
lret
mov
and
pop
subb
fnstsw
mov
std
xor
xor
jecxz
adc
lcall
mov
xchg
jae
xor
fadds
jecxz
out
ljmp
fwait
xchg
sub
sub
xchg
mov
jnp
cmp
inc
dec
pop
insb
inc
pop
or
scas
xchg
imul
cltd
fldl
push
push
and
mov
and
sub
pop
xlat
cmp
cltd
sbb
and
adcl
hlt
mov
mov
xchg
adc
sub
cmp
fidivrl
insl
add
fisubrs
adc
mov
fst
je
xlat
out
push
fnsave
dec
mov
mov
and
shrl
aam
and
ds
cmp
rclb
mov
fldenv
dec
jge
xorb
xor
add
gs
insb
in
push
scas
jl
dec
sahf
cmp
das
sahf
lods
fstpt
cmpsl
sbbb
ret
or
fldt
popf
test
test
dec
ret
pop
aaa
test
hlt
sub
xor
je
xchg
fisttpl
sub
fiaddl
out
xor
pop
inc
or
out
popf
mov
jbe
mov
aam
sbb
sbb
into
cmp
adc
hlt
ret
sub
mov
sub
add
add
mov
sub
jns
xlat
rolb
sub
cmpsl
adc
mov
sub
mov
popf
xchg
dec
aaa
jge
dec
aad
xor
xor
aas
vmovsd
out
add
push
clc
sbb
shll
jmp
mov
push
ret
rcll
sbb
arpl
pop
mov
lret
pop
outsl
sbb
out
inc
sub
gs
cmc
xor
xchg
mov
jne
aaa
pop
inc
inc
loop
mov
push
mov
sbb
xor
int3
cmpb
inc
dec
sahf
andb
sub
mov
stc
pop
cmp
insl
mov
inc
inc
test
popf
fstpl
int3
cmpl
or
out
divl
sbb
mov
xor
into
cltd
cltd
shl
add
je
xor
inc
fldt
test
jnp
mov
adc
sbb
mov
xchg
insb
add
push
jns
mov
and
push
jg
je
xchg
adc
or
sbb
jmp
or
std
jne
ret
fdiv
mov
es
mov
and
movsb
loop
enter
out
inc
in
sbb
mov
push
or
xchg
xor
cwtl
fsubrl
pop
outsl
clc
cwtl
xchg
or
adc
in
in
cwtl
fcmove
jle
dec
fdiv
push
xchg
mov
fwait
push
and
cmc
jnp
out
cmp
mov
imul
sti
std
movl
mov
ja
jl
jmp
push
stos
adc
in
mov
pop
pop
inc
call
gs
ja
jge
stos
lods
rorl
xchg
jns
pushf
in
fmuls
mov
mov
jne
and
xor
rcrl
lret
jae
adc
sti
sbb
js
push
int3
push
cmpsl
mov
mov
outsl
or
adc
mov
push
pop
or
jg
adc
ret
fsubrl
jge
jns
add
jae
inc
insl
mov
mov
xorb
int3
ss
mov
push
filds
xor
mov
pusha
pop
dec
and
and
jmp
fistpll
movsl
fdivr
cmp
cmp
mov
shll
pusha
ja
sbb
repnz
repnz
pushf
cmp
je
push
fnsave
pop
imul
rcr
iret
dec
cmp
imul
ffree
sub
mov
and
jl
js
loopne
pop
add
cwtl
subl
xor
or
outsb
mov
mov
adc
sbb
fldenv
mov
aas
jne
jge
pop
or
add
lcall
test
cmp
jnp
pop
inc
inc
in
mov
lcall
adc
push
mov
mov
xor
push
jge
or
inc
sub
push
xor
jecxz
cmp
nop
ret
dec
js
jns
popa
cmp
or
mov
xchg
lahf
mov
shl
pop
ja
mov
insb
pop
lret
test
xchg
in
rcrl
and
test
fcoml
addr16
cmp
sbb
sbb
push
ret
jmp
cmp
int3
xchg
les
das
pop
mov
xchg
ljmp
hlt
mov
xchg
aaa
xor
ror
xchg
adc
insb
pop
call
ja
sarb
cwtl
cmp
xchg
jg
cmp
inc
mov
adc
inc
mov
cmpsl
movsb
out
xchg
and
mov
int
inc
dec
ffree
arpl
ficoml
dec
cmp
push
call
push
jp
xchg
push
lcall
inc
and
xor
in
dec
iret
andl
and
pop
xchg
and
or
cmp
jnp
das
xchg
jnp
gs
push
iret
xchg
jnp
dec
jae
das
cmp
fstl
jp
imulb
lods
jbe
adc
cmpsb
mov
es
aad
cmpsl
mov
out
movsb
xchg
inc
mov
push
cld
aad
out
rcrl
jmp
cmp
fldl
loope
lock
dec
into
sub
jno
lcall
outsl
leave
ret
or
mov
out
lock
dec
cmpl
dec
fisubrs
jae
adc
aas
mov
push
jno
fs
adc
ret
sbb
mov
push
movsl
popf
jo
jmp
xchg
jge
push
or
popl
clc
and
lods
icebp
mov
outsl
out
fisubrs
cmp
jle
xor
in
nop
call
or
enter
or
mov
push
xchg
lret
sbb
into
lods
push
mov
add
inc
outsl
or
xor
ljmp
or
stos
dec
mov
inc
lds
sahf
pop
ss
dec
mov
fimuls
imul
dec
sbb
cmovo
cmp
hlt
lods
nop
xor
fcmovbe
mov
push
fnsave
sarl
shlb
cmpb
mov
xlat
fs
jl
dec
dec
sbb
xor
push
es
mov
jnp
mov
jbe
sub
push
adc
dec
imul
or
inc
sbbb
cmpsl
xchg
lret
daa
add
mov
inc
push
cmpsb
sahf
ss
and
sbb
push
rorb
and
xchg
sarl
cmpsl
pop
leave
xor
xchg
sbb
bound
adc
inc
sbb
jecxz
mov
pop
and
cmpsb
stos
inc
divl
in
sub
cmp
lods
mov
push
pushf
hlt
insl
scas
enter
sub
adcl
and
inc
stos
mov
mov
hlt
pop
lret
jns
mov
call
ffreep
sub
mov
cmp
sbb
adc
adc
adc
scas
stc
mov
test
cmp
add
sub
push
xor
insb
add
pop
jno
and
inc
dec
nop
jle
icebp
pop
xor
jne
cmp
ret
aam
lret
loope
adc
adc
jno
pop
cld
das
lods
xlat
andl
shl
sti
imul
shrl
test
or
dec
pop
xchg
add
mov
or
cmpsl
dec
lahf
jno
leave
test
or
and
xor
dec
mov
jno
addl
mov
jnp
enter
fs
mov
repz
lea
mov
lahf
shll
inc
lret
aaa
or
iret
adc
dec
add
mov
in
dec
mov
outsl
call
data16
dec
pop
xchg
and
sti
nop
or
xchg
ret
inc
pop
adc
and
test
lods
sub
mov
lcall
jne
xorl
in
imul
inc
std
pop
cli
cli
add
jmp
jno
and
xchg
out
pushl
add
push
pop
scas
ljmp
mov
jecxz
dec
lret
movb
filds
dec
xor
jle
inc
push
push
mov
je
fcom
sbb
xchg
icebp
insb
dec
inc
xor
mov
aam
lea
clc
lods
inc
imul
add
mov
das
cli
mov
jo
push
cmp
mov
repz
xchg
insb
pushf
add
push
roll
sahf
les
ret
int3
stos
enter
sbb
enter
loope
test
adc
mov
mov
and
std
in
adc
lret
sbbb
shl
push
jnp
out
and
inc
sub
fidivl
lock
and
push
mov
adc
sarb
adc
fbstp
gs
fldt
dec
bound
push
out
aaa
add
movsb
test
or
cs
jecxz
jle
insb
push
sub
mov
test
fists
loop
xorl
ret
fcoms
or
hlt
pop
pop
scas
aaa
out
push
cmp
test
jp
jmp
les
pop
lahf
mov
or
jns
or
jge
in
or
sbbl
cli
adc
aam
int
adcl
mov
mov
and
mov
mov
jns
movsl
insb
in
mov
jmp
mov
mov
add
inc
sbb
cli
xor
push
push
xchg
cmpsb
fcmovnbe
aad
pop
mov
je
iret
mov
cs
shrb
gs
sub
mov
and
dec
rclb
mov
mov
mov
lcall
adc
neg
aam
adc
mov
leave
jecxz
jo
imul
lcall
data16
pop
push
cli
jle
int3
cld
push
add
dec
push
or
push
adc
pop
fimull
cmpsb
mov
xchg
shl
aam
cli
ret
dec
push
hlt
push
clc
insb
gs
xlat
mov
or
or
bound
mov
adc
mov
pop
and
pop
xchg
xchg
pop
sar
sbb
popa
in
mov
dec
dec
jmp
aad
inc
jp
in
mov
jg
stc
cmp
jo
mov
into
jae
mov
hlt
mov
sahf
sbb
sbb
out
int3
in
insb
inc
mov
pop
mov
mov
sbb
sbb
pop
lret
popf
mov
mov
jp
pop
pop
push
mov
leave
add
leave
sbb
or
testl
dec
sbb
gs
repz
jno
push
rcll
sub
pop
cld
incl
sub
add
sub
je
popf
into
cmp
les
mov
or
jmp
fcom
loopne
mov
mov
jne
and
lods
loopne
movsl
daa
int3
aad
inc
push
icebp
lds
cmp
dec
lcall
pop
jbe
test
sub
leave
lods
and
notb
in
sbbl
outsl
push
loope
inc
cli
and
mov
icebp
add
cmpsb
mov
pop
push
add
add
sbb
and
jns
rorb
adc
mov
mov
mov
out
mov
add
or
ret
leave
sbb
movsb
dec
in
nop
sahf
sub
jmp
mov
lods
test
mov
fisttpl
xchg
push
jmp
repz
mov
xor
pop
mov
cld
int
hlt
mov
hlt
adc
dec
mov
xchg
mov
popa
cwtl
aas
cmpsl
mov
dec
cmp
pop
add
inc
pmullw
inc
aam
dec
outsb
or
mov
sti
dec
sbb
shlb
imul
arpl
lcall
mov
subl
int3
sbb
cmp
mov
mov
mov
xor
push
lea
aad
sub
sti
xor
inc
inc
dec
dec
andb
jbe
mov
cmp
loop
sub
cs
mov
mov
xchg
lret
mov
mov
mov
xor
repz
sbb
jl
or
je
push
xchg
out
push
aaa
push
and
in
mov
mov
pop
outsl
and
insl
gs
in
and
cmp
or
pushf
ror
lods
fs
in
jmp
cmp
lods
jl
xor
adc
jmp
dec
cmc
mov
mov
lcall
cmpsb
fistpll
dec
xchg
pop
add
fistpl
js
sub
pop
inc
cmpl
xor
ret
and
add
sbb
mov
sahf
fsts
ret
mov
lea
cmpsb
pop
iret
imul
js
stos
mov
cmc
ror
jg
add
push
enter
push
jbe
and
js
sbb
shrb
jno
push
or
mov
mov
repz
cmp
cld
std
rcrl
sahf
xor
sub
in
sub
ret
pop
xchg
sbb
js
jmp
adc
fmuls
fsubs
add
insb
jmp
jp
cld
push
fistpll
out
dec
inc
mov
arpl
mov
mov
out
pop
push
mov
push
hlt
cmc
push
dec
cmpl
dec
xor
fisttpl
adc
push
lcall
sbb
ret
push
cmp
xchg
adc
imul
nop
xchg
xchg
scas
inc
fcomp
cli
and
lret
pop
push
mov
insl
pop
inc
rcl
cwtl
scas
popa
cmc
jg
sub
ret
sub
cmp
xor
imul
jae
jmp
out
mov
push
mov
add
mov
imul
inc
sbb
movsb
iret
lcall
js
push
adc
mul
aam
arpl
dec
ljmp
pushf
jle
fistps
daa
fs
and
in
fsubr
mov
imul
lods
shll
jbe
out
and
jmp
jmp
fildll
dec
and
mov
out
and
clc
leave
insb
lds
fadds
cmp
dec
int
shr
pop
gs
mov
inc
push
in
sbb
dec
or
inc
stos
push
sbb
imul
mov
mov
cli
out
xor
lret
rep
mov
sbbl
jnp
outsb
stc
xchg
cli
jg
push
push
and
lods
sahf
xchg
jg
out
fs
mov
rcrl
mov
sub
pop
lahf
jge
mov
mov
cltd
mov
cmpsl
es
mov
dec
add
insl
dec
cs
push
add
cmp
test
pop
inc
and
cmp
cmpsb
sbb
leave
test
xchg
adc
loop
lret
lahf
fisubs
sbb
xlat
push
mov
leave
cmp
scas
adc
mov
push
push
xor
icebp
insb
movsb
loope
mov
jns
push
test
push
push
cli
cmp
idiv
dec
mov
add
mov
iret
ljmp
mov
mov
arpl
push
push
mov
ljmp
adc
ret
xchg
es
in
sub
cmovb
movl
hlt
aaa
fwait
cmp
add
stos
sub
fwait
shrl
add
adc
jecxz
out
pop
and
test
rorl
out
jmp
ret
jge
lods
mov
push
pusha
dec
lea
dec
mov
fsubrl
insl
sub
push
or
mov
jb
lret
sahf
sbb
repnz
dec
adc
xchg
arpl
call
sub
mov
mov
and
jne
cltd
pop
cltd
jae
cld
jo
adc
movsb
ret
and
into
cmp
pop
mov
dec
insb
or
test
rcrl
adc
mov
dec
mov
shr
pop
sbb
cltd
xor
push
mov
dec
rcll
leave
push
or
pop
mov
lahf
jns
test
lahf
pusha
jecxz
fwait
hlt
mov
mov
mov
xor
fsubl
pop
or
adc
xchg
ds
lock
jge
xor
lods
sbb
rorb
sbb
cmpb
pop
jg
enter
shll
repz
call
jae
and
cltd
dec
ja
lea
mov
outsb
jno
cmpsl
sahf
adc
add
xchg
cmp
ja
aad
clc
push
jg
adc
pop
scas
sbb
or
iret
jg
inc
push
sub
sub
lods
sahf
popa
push
ret
mov
and
in
fdivrl
mov
aaa
and
ret
mov
add
movsl
daa
lret
lret
mov
fcmovu
pop
movsb
jp
repz
cmp
inc
std
cli
shlb
in
xor
gs
push
pop
sbb
push
aam
cltd
and
mov
dec
insl
out
dec
popa
pop
rcr
movsb
dec
mov
enter
xchg
loope
mov
pop
push
in
xchg
sbb
cmp
mov
push
add
pop
es
inc
mov
ljmp
sbb
lods
and
and
insb
xchg
inc
mov
mov
and
jg
out
xor
push
mov
ljmp
hlt
cwtl
jmp
sti
filds
incb
nop
and
aad
ret
rdtsc
adc
aas
dec
test
jle
lret
roll
dec
lds
jb
ja
dec
movsl
mov
mov
repz
movsb
sahf
repnz
xlat
cmp
adc
popa
addr16
rolb
jbe
and
jp
dec
adc
rcll
or
push
sti
xchg
jne
or
aad
addr16
jecxz
xchg
xor
jle
add
test
ret
sub
jg
addr16
lock
or
int3
outsl
shrl
pop
jmp
aam
jmp
cmp
lods
lock
mov
mov
nop
pop
dec
mov
pop
outsb
pushf
lea
and
mov
mov
mov
dec
outsl
fisubrs
shll
jmp
inc
jp
add
scas
fsubrl
or
cli
arpl
sub
dec
or
shlb
mov
lea
or
adc
lret
mov
xor
adc
mov
cmp
ljmp
inc
into
cli
jb
arpl
adc
lock
jns
mov
pop
in
jae
and
mov
mov
sbb
stos
addr16
jno
sahf
ja
in
xorb
fimuls
dec
sti
sbb
pushf
sbb
es
cs
stc
pushf
jae
inc
in
or
inc
sub
cmp
push
scas
or
cmp
sub
cltd
jg
in
adc
mov
pop
fstps
test
mov
add
mov
in
fnstcw
push
jno
test
add
roll
or
xchg
orb
cmp
sub
movsl
insb
and
fnstenv
pop
add
popl
mov
mov
inc
outsl
inc
pop
adc
ljmp
sbb
xchg
pop
and
les
adc
leave
fs
repnz
mov
push
mov
xchg
push
xor
lcall
sbb
mov
jbe
mov
adc
aas
jb
insl
push
mov
and
movsl
sub
mov
push
jae
fmulp
aad
fstl
insb
dec
outsb
loope
shrl
xchg
repz
add
repz
or
jl
bound
mov
mov
orl
cmp
xlat
negb
loope
and
out
cwtl
lea
jbe
fisubrl
in
nop
pushf
jae
xchg
jbe
or
adc
repz
pop
jbe
popl
mov
aam
test
aas
divl
jle
rorb
pop
lret
push
inc
fwait
ss
movsl
jnp
sbb
or
call
pop
es
mov
pop
scas
adc
inc
add
add
mov
cmc
jp
sbb
ja
test
inc
mov
fistpll
out
pop
jle
sub
stc
jp
movsb
push
rorl
cmp
shll
pop
and
aad
orl
cmp
xchg
das
inc
xchg
fistl
std
cwtl
xor
outsl
in
dec
xor
imul
push
xor
add
pop
shl
push
add
and
cltd
mov
dec
ds
fldcw
repnz
inc
aaa
sub
xchg
jle
lods
scas
and
lcall
push
lcall
js
or
rorl
scas
cli
sub
gs
inc
jo
fcmovu
inc
xor
pop
push
sub
jb
xlat
loopne
mov
test
pop
mov
mov
cmp
add
lods
xchg
cmp
sbb
pop
rolb
divl
mov
stos
push
lods
in
xchg
flds
test
sub
pop
pop
jmp
xor
repz
in
ja
aam
mov
fdivs
hlt
mov
loopne
outsb
mov
or
push
mov
inc
loopne
cmp
mov
fbstp
mov
xchg
and
leave
addr16
inc
test
adc
and
test
stc
jne
push
and
jle
xchg
stos
mov
lds
xlat
mov
push
xchg
sub
enter
aas
insb
imul
jp
xchg
nop
adc
test
add
pop
xor
dec
and
fiaddl
mov
cmp
cltd
and
xor
ror
xchg
jne
out
pusha
outsl
and
mov
mov
sarb
mov
xchg
inc
cmp
or
out
sbb
jnp
clc
mulb
insb
out
repz
idivb
mov
mov
cwtl
and
mov
icebp
push
rcrb
jae
xor
out
shlb
xchg
xchg
mov
js
inc
jns
or
cmpsl
lret
movsl
cmp
or
xchg
push
jg
cmpsb
xchg
lret
sub
std
mov
repz
sbb
and
mov
pop
mov
sub
lcall
fdivs
sbb
adc
pop
dec
outsl
jne
sub
add
xor
lds
mov
xor
cmp
dec
add
jbe
loopne
add
cmpsb
xor
stc
push
fidivl
xor
push
stos
push
push
dec
fiadds
xchg
lret
pop
lcall
sub
ret
mov
push
mov
loopne
mov
sbb
pop
inc
mov
into
pusha
pushf
fistps
xchg
sub
or
addr16
pusha
cmpb
xor
xor
mov
pop
popa
jns
icebp
mov
adc
adc
cmp
popf
mov
jle
xchg
cld
cmp
fidivs
in
pop
les
out
adc
into
xchg
push
mov
scas
sbb
je
loopne
push
out
stos
faddp
and
js
ljmp
and
and
jo
imull
nop
into
ja
xor
nop
jmp
rcrb
in
add
jl
idivb
in
mov
popa
pop
xchg
cmc
xorl
jne
adc
jnp
shrl
and
pop
fldt
into
sub
and
inc
icebp
mov
pusha
cmp
inc
fcmovnbe
in
mov
js
sub
cli
rcl
add
test
xorl
int
nop
mov
out
jmp
or
xchg
je
push
jae
hlt
popa
std
push
jp
cltd
push
pushf
lods
xchg
and
sub
lock
mov
outsb
or
push
pop
pusha
clc
mov
call
push
mov
aaa
fists
dec
push
dec
das
mov
jb
lret
sbb
jae
fstl
inc
mov
nop
cmc
add
add
pop
and
xlat
test
dec
mov
lahf
xchg
dec
or
pop
sahf
mov
sahf
jle
insb
lcall
les
cltd
mov
std
dec
mov
cmp
sub
nop
sub
and
out
out
adc
mov
lcall
repz
and
pop
xchg
fadd
in
jle
aad
enter
pop
dec
jle
push
and
out
stos
xor
aad
xchg
mov
xlat
pop
or
adc
jg
clc
repz
mov
fs
shlb
xor
test
xor
insl
xchg
call
mov
pop
jae
mov
dec
flds
inc
test
ret
xchg
test
daa
xchg
jle
imul
xor
pop
ret
mov
gs
push
ds
lods
cmp
lock
cltd
cmc
add
jbe
push
jle
inc
std
and
jns
push
mov
or
stos
adc
sbb
inc
add
popf
clc
test
mov
test
das
out
push
or
mov
dec
jg
mov
fwait
push
fstpt
jne
xchg
cmpsl
shl
test
mov
test
lahf
jno
push
leave
mov
out
push
loop
xchg
sahf
mov
mov
jmp
lock
xchg
jge
inc
dec
sbb
jbe
stc
scas
inc
mov
loop
and
dec
bound
or
lret
cmp
repz
lahf
jbe
push
lret
std
dec
ss
and
jae
mov
arpl
jns
lret
es
fcoms
mov
adc
pusha
and
in
xchg
cmp
cmc
sbb
dec
loopne
out
mov
pop
cs
test
int
jl
sub
mov
out
cli
jnp
dec
cmpsl
and
cwtl
add
cmpsb
call
dec
sbb
sub
cltd
aad
jo
fsubl
sbb
call
push
testb
push
int
mov
stc
ljmp
add
popa
add
outsl
pop
push
pushf
cltd
das
cmp
cmc
cmp
outsb
loop
add
clc
testb
lret
test
lret
mov
add
push
cmp
sbb
into
mov
jns
popf
ret
cmp
lcall
mov
pushf
mov
cmp
or
aaa
sub
mov
movsb
test
stos
rol
jno
xor
pop
scas
jecxz
sbb
aam
pop
jecxz
scas
inc
lret
sbb
xchg
insb
inc
aad
cmpsl
push
popl
push
push
aad
hlt
leave
lock
xor
mov
fisubl
lods
lods
cmpsb
xlat
in
fnstcw
in
leave
xor
mov
gs
loop
jp
dec
sti
mov
inc
imul
jmp
lea
inc
je
jle
rcrb
daa
push
or
pop
mov
data16
jge
iret
xchg
mov
push
mov
and
ds
cmp
fcmovnu
fdivrs
push
js
mov
sub
xlat
lret
mov
test
jo
sti
adc
xor
mov
add
mov
lea
call
fsubp
mov
pop
iret
stos
push
fstps
ljmp
addl
xorl
loop
adc
pop
xor
ficoms
sbb
fucom
inc
cmp
out
sbb
enter
jbe
mov
stos
push
add
xor
repnz
or
mov
dec
bswap
inc
lret
js
enter
call
dec
jns
lret
fstpt
out
je
lcall
lods
add
je
fwait
mov
cmpsl
add
hlt
xor
mul
rcl
sub
push
stc
outsl
adc
inc
sub
xchg
movsb
inc
ds
pop
push
cmp
gs
adc
pushf
mov
pop
add
and
repnz
shl
pusha
jle
xchg
ljmp
enter
movsb
fdivrp
mov
clc
stos
and
sbb
or
xchg
xor
and
cmp
jnp
out
xchg
in
cmp
jl
scas
inc
jo
cs
pop
and
negl
aaa
sti
repnz
fstps
insb
repz
fadds
data16
ret
adcl
popf
mov
sahf
outsb
mov
rcrb
mov
cmp
lcall
jbe
and
push
das
loope
sub
enter
es
aaa
mov
inc
xor
adcl
shll
sarb
repz
std
out
cli
call
push
lea
pop
mov
nop
ss
xchg
repnz
cmp
sti
lds
cld
push
and
pop
push
aam
rcr
shl
add
pop
push
movsb
dec
jo,pt
xchg
fisubrl
mov
incb
aad
inc
jl
call
movsb
daa
dec
jne
xor
std
std
movsb
cmp
cmp
mov
in
add
xchg
shll
fwait
movsl
cmp
push
and
rep
idivl
jmp
push
adc
push
dec
pop
jge
sbb
lods
arpl
add
adc
sbb
imul
sub
sub
adc
test
mov
mov
std
jge,pt
loope
leave
jno
push
pushf
fsubrp
fisubl
push
and
stc
rorl
iret
mov
iret
jmp
xor
push
jo
repz
ret
dec
mov
xchg
xchg
mov
hlt
sti
mov
jge
adc
js
push
mov
and
fcmovnu
push
mov
add
inc
mov
repz
jg
xchg
push
lods
jl
out
xchg
mov
cmpl
xor
das
rolb
xlat
mov
popf
addb
orb
adc
lcall
iret
into
mov
adc
inc
divb
shlb
scas
ret
pop
mov
pop
cs
imul
sub
into
cli
into
or
cs
int
jne
xor
ja
pop
imul
arpl
les
jb
xchg
pop
data16
pop
push
ret
decl
andl
jo
and
push
adc
orb
fwait
rcll
cmp
mov
sub
sbb
mov
inc
mov
out
ds
outsb
xchg
addr16
jmp
or
dec
ret
lods
pushf
sbb
xchg
lock
xor
and
or
cmpsb
fstpt
adc
pop
stos
inc
ror
mov
les
push
sbb
and
movsl
fisubrs
fs
push
dec
sbb
clc
jl
jb
cmp
jb
dec
xchg
jmp
cltd
shlb
inc
pop
cmp
sti
pop
and
insb
sub
sbb
pusha
or
negb
jmp
dec
adc
in
loopne
fstpl
aaa
insl
addr16
stos
push
rclb
paddd
hlt
mov
out
gs
pop
test
xchg
cli
adc
jo
pop
jbe
sbb
inc
dec
jge
pushf
call
mov
ljmp
mov
lods
movsl
std
popa
or
ret
add
mov
test
xor
movsb
inc
arpl
aad
negb
imul
bound
cmp
push
stc
mov
adc
std
hlt
mov
pop
dec
test
sub
into
or
in
cld
mov
hlt
inc
inc
clc
iret
or
aaa
das
cmpsb
stc
lcall
stos
shll
inc
jecxz
sahf
mov
pop
scas
add
nop
aaa
movsb
leave
pop
dec
mov
loope
out
mov
das
testl
jnp
jg
sbb
mov
rorb
test
sahf
pop
cltd
clc
lods
or
insb
xchg
jnp
push
or
out
jb
sbb
sbb
cmp
scas
lds
push
or
fimuls
mov
push
mov
fists
sub
jo
in
dec
ja
ja
push
int
les
movsl
and
push
or
jp
rcrl
in
int
loope
scas
xor
xor
test
inc
daa
mov
mov
rolb
addr16
repz
fs
pop
in
dec
call
push
ja
fldt
add
pushf
mov
adc
aam
outsb
sarl
dec
mov
dec
div
cmp
lods
ljmp
dec
lret
or
insb
notl
jno
popf
mov
or
shlb
sti
decl
xor
xorb
call
pop
daa
ja
loope
mov
add
mov
cwtl
fcmovnbe
pop
fistpl
cmp
mov
add
and
xchg
jp
cmp
fdivr
mov
cmp
test
movsb
cwtl
loop
push
int
test
loop
xchg
fxch
pop
sub
xchg
dec
pop
mov
jns
sbb
sub
jmp
push
movsb
sbb
aam
enter
inc
shrb
xchg
filds
inc
cmp
stos
inc
movsb
insb
adc
pop
mov
jge
dec
and
push
xchg
add
add
js
sub
jmp
cmp
mov
xchg
adc
pinsrw
shll
notb
cltd
adc
lcall
repz
fnsave
hlt
in
jmp
mov
inc
mov
movsl
mov
fisttpl
and
jo
mov
imul
sub
xchg
inc
or
add
dec
pop
adc
cmp
adc
cmpb
add
xchg
sbb
pop
cmp
mov
stc
ficomps
fs
pusha
fbld
sbb
xor
out
lahf
push
xchg
sbb
xlat
loopne
int3
ja
sahf
in
pop
jbe
mov
adc
mov
or
mov
xor
fwait
sbb
mov
xchg
add
mov
dec
xor
cltd
mov
cmp
pop
cld
cmp
negl
shll
dec
loop
fbld
sbb
lcall
ret
stc
int
aas
iret
add
mov
mov
push
cwtl
rclb
ljmp
adc
pop
cmp
pusha
cmp
add
push
inc
loop
mov
dec
cmp
xor
testb
stc
shlb
lds
cwtl
incb
pushf
or
pop
xor
mov
mov
and
gs
mov
bound
mov
clc
mov
cli
sbb
sti
jp
mov
in
jle
jle
mov
xor
clc
xchg
push
xor
push
sub
std
imul
mov
mov
pop
call
andl
je
mov
sti
in
xor
xor
bound
jne
dec
jno
push
and
xor
mov
daa
add
add
adc
call
xor
test
mov
mov
mov
inc
or
mov
loopne
cwtl
dec
xchg
cltd
mov
ret
scas
in
sub
sub
dec
push
inc
jnp
mov
cwtl
sbb
jge
movl
cmp
sbbb
cmpb
jae
add
popf
mov
mov
inc
idiv
bound
loopne
js
mov
sub
dec
jo
jb
jp
mov
jb
pop
mov
cmp
es
xchg
pop
nop
lahf
ret
inc
pushf
jnp
dec
inc
cmp
add
cs
xchg
push
cmp
or
in
iret
cli
jns
sbb
fildl
popl
sub
pop
fnstenv
mov
mov
sbb
mov
or
cli
xchg
ds
mov
inc
jne
inc
movsl
int
mov
sub
xchg
movsb
jmp
mov
jns
jp
idivl
push
push
sub
inc
lock
push
xor
cli
xchg
movl
cmpb
xor
sbb
mov
cmpsl
aam
sub
xchg
lcall
insl
andb
mov
stc
mov
inc
cmpsl
outsb
sbb
cmp
xor
sbbl
xor
fs
in
ss
xorl
mov
push
dec
das
adc
repnz
xchg
jne
repnz
cmc
or
ficoml
test
xor
int
xor
cmp
dec
xchg
add
or
and
scas
mov
xchg
adcl
loop
lcall
pusha
aaa
and
cmpsb
xor
jo
jge
mov
jns
repz
or
cmpsl
xlat
mov
mov
test
push
in
mov
xchg
test
inc
dec
loope
into
mov
pusha
lahf
lret
add
out
and
cmp
stos
lcall
std
push
jns
std
xor
jbe
mov
int3
imul
push
and
ret
xchg
scas
mov
ljmp
sti
int3
xchg
andb
jg
mov
jbe
sub
mov
lds
cmpl
push
push
adc
test
hlt
in
test
lret
xor
stos
fwait
cmpsb
dec
inc
jbe
and
cmc
pusha
or
movsl
stos
adc
fimuls
mov
adc
in
ss
mov
xor
inc
sbb
shll
mov
ss
xchg
pop
push
pop
pop
adc
cmp
aam
movsb
dec
xchg
dec
je
sbb
push
fstp
imul
popf
jo
dec
xchg
push
es
into
dec
or
orb
cld
cld
pop
jle
fbstp
sbb
xchg
mov
sub
pop
pushf
xchg
xor
out
movsb
das
nop
mov
icebp
cli
sbb
int3
into
pop
mov
mov
inc
cmc
loop
cs
cltd
lock
loop
movsb
mov
shr
jmp
imul
dec
scas
dec
bound
push
xor
mov
mov
lods
bound
mov
mov
test
test
aas
pop
sub
xorb
mov
outsl
loopne
pop
xchg
and
ja
loope
stos
jl
mov
mov
push
out
clc
adc
loop
test
call
lods
cmp
push
fcompl
push
cmp
inc
les
inc
fisttpl
movsb
test
lcall
decl
leave
cwtl
dec
ret
dec
and
and
loopne
sbb
std
fcomi
iret
sub
negl
jno
cmc
mov
dec
addr16
mov
bound
xchg
mov
icebp
dec
pop
sti
mov
inc
jo
cmp
out
outsb
test
cmp
jl
cmp
rcrl
inc
mov
stos
push
pop
outsb
in
mov
nop
xor
mov
add
sub
daa
test
cwtl
push
cld
mov
sub
lcall
sub
pop
push
mov
mov
cwtl
testl
test
pop
pop
cvtpi2ps
or
cmpsb
repnz
jge
xchg
lcall
mov
fisubl
and
imul
pop
imul
neg
xchg
in
jl
fisttps
sbb
lret
test
stos
fimull
es
cwtl
mov
ror
jl
mov
lods
jb
in
lar
bound
pop
popf
cmp
stos
add
push
sti
into
flds
pop
fsubs
xchg
xchg
push
adc
push
loop
gs
arpl
movsb
fldcw
pushf
pop
pusha
in
sub
adc
sub
sbb
lret
pop
out
imul
lret
mov
scas
popa
lret
inc
mov
jmp
imul
bound
inc
int3
and
cmpsl
push
or
es
mov
cmpsl
out
icebp
adc
pop
jle
leave
call
inc
cmpsb
inc
cltd
jl
add
pop
and
push
out
xor
stos
daa
jbe
jl
mov
mov
dec
movsb
idivb
mov
shlb
cltd
cltd
xchg
xchg
lea
test
dec
and
scas
ror
adc
mov
pop
jle
fs
out
dec
imull
cmp
xor
push
imulb
or
xchg
mov
push
cld
int3
mov
mov
push
or
ficomps
dec
shr
lods
jp
stos
xor
enter
xor
hlt
mov
inc
add
test
insb
add
jnp
movb
inc
push
insb
shrb
mov
inc
pop
scas
xchg
dec
repz
dec
push
mov
xchg
and
add
push
icebp
pop
sbb
sbb
repnz
std
inc
or
cmp
shrl
jge
lea
dec
addr16
lcall
and
pop
loop
jp
out
jnp
cmc
sbb
dec
adc
lcall
std
cmpsl
jo
rorb
fsubrl
inc
xchg
rcr
getsec
sarb
pop
pop
cmp
popa
dec
lock
sahf
fmul
mov
pop
sub
jns
push
pushf
push
cmp
jo
cmp
xchg
mov
jbe
bound
pop
cltd
lcall
and
jbe
and
xor
and
hlt
lret
push
vmwrite
cmpsl
inc
sbb
push
pop
sbb
sub
cmp
aad
mov
mov
clc
ljmp
cmp
sahf
out
jg
jne
cltd
gs
rcrb
ficompl
stc
ret
and
add
lock
test
popf
inc
ja
jns
xor
sub
fisubs
aad
dec
cmp
iret
sbb
ss
sub
and
push
int
cltd
stos
and
popf
jmp
pop
mov
xorl
sti
sub
inc
shl
repz
mov
sbb
adc
inc
and
xchg
bound
scas
or
cmpb
or
cmp
xor
fnstenv
aas
ljmp
test
mov
or
sbb
gs
unpcklps
ja
xchg
push
pop
inc
shll
dec
mov
int
inc
xchg
divb
xchg
ficompl
test
mov
mov
pop
pop
push
pop
nop
test
mov
and
xor
pop
xchg
xor
push
push
jno
adc
xchg
in
or
loopne
dec
pop
rol
lds
dec
and
pop
repnz
clc
jo
sbb
je
in
inc
or
lret
dec
aad
dec
adc
sti
cmpsb
pop
inc
xchg
rcr
sti
repz
sbb
addl
cmp
add
adc
push
pop
lock
adc
sahf
enter
fldenv
iret
cs
mov
cmpsb
jecxz
je
jo
mov
cmp
cmp
pop
jno
sub
jns
push
jno
fidivrs
das
rorb
loopne
jo
mov
shlb
and
daa
iret
inc
fsts
push
adc
stc
hlt
sbb
jno
jbe
xor
inc
lahf
imul
add
clc
mov
cmp
sbb
xchg
call
mov
jmp
emms
movsb
stc
adc
mov
jmp
inc
push
test
nop
stc
sarb
sbb
into
jg
aaa
cmp
mov
std
scas
or
call
data16
in
jns
inc
and
xchg
das
mov
fnstenv
call
fisubl
pop
push
xor
fnstcw
pop
jae
xchg
in
adc
xor
gs
xchg
adc
lods
push
xlat
decb
mov
aas
mov
outsb
and
pop
inc
lds
inc
sub
jne
add
dec
push
and
and
push
das
mov
gs
sbb
mov
outsl
out
lds
cmpsl
addr16
pop
loope
mov
ja
lea
andl
sti
push
dec
dec
stos
js
or
decb
movsb
movsl
fwait
jg
adc
xorb
inc
int
iret
fwait
inc
pop
mov
jae
mov
or
and
lods
inc
addr16
int3
xchg
xor
fidivrs
aas
int3
in
imul
mov
add
hlt
data16
xchg
and
sbb
jb
cmp
sahf
and
dec
push
rcrb
call
std
mov
fsubs
mov
aaa
xchg
outsb
xchg
arpl
inc
aam
cltd
scas
push
lret
lcall
aad
and
or
xchg
icebp
retw
cmp
xlat
mov
gs
add
lods
outsl
scas
and
mov
adc
adc
neg
cltd
cs
pop
push
push
jb
jl
or
mov
cmpsl
pop
ljmp
frstor
sahf
test
xor
movsl
mov
xchg
cwtl
cmpsl
mov
jne
aas
mov
in
adc
adc
hlt
test
imul
mov
clc
out
cwtl
mov
out
sbb
adc
inc
imul
cwtl
into
push
mov
fidivrs
adc
cld
push
push
ds
std
dec
mov
xchg
das
mov
inc
xchg
push
dec
dec
icebp
push
in
fstpt
xchg
adc
lods
cmp
xor
andb
pushf
int3
inc
xor
loope
test
aam
add
lods
cmp
test
fildll
pop
xorl
rorb
dec
xchg
adc
push
push
fldcw
rcrb
add
push
pop
jno
pop
push
inc
mov
push
bound
pushf
xor
adc
inc
or
mov
jne
imul
lds
mov
sbb
aad
in
dec
inc
or
add
ret
inc
push
or
pop
jp
fdivs
leave
jecxz
pop
sbb
fnstenv
ja
popa
or
xchg
mov
xor
dec
ret
cs
icebp
aaa
data16
orl
mov
lods
push
jne
movsb
sbb
mov
je
dec
fwait
mov
inc
ds
out
mov
jnp
or
dec
sub
out
cltd
push
into
push
lds
sbb
pop
cltd
out
fwait
inc
xchg
shlb
inc
jnp
shll
fstpt
icebp
out
test
movsb
das
aas
js
cli
leave
aas
mov
jnp
push
sub
adc
fdiv
pop
rcrl
lret
sub
jge
adc
mov
lods
movsl
loopne
stos
mov
fnstsw
fdivs
jge
or
js
sbb
outsl
mov
call
jp
mov
cmp
test
pop
scas
mov
stc
sub
aas
fcomi
stos
inc
pop
inc
cs
test
jecxz
jb
add
jnp
mov
rol
pusha
pop
addb
jecxz
shll
lea
inc
jno
and
ja
adc
loopne
outsl
mov
pop
std
mov
dec
shlb
shrb
jnp
mov
jbe
lea
xchg
push
mulb
lret
rcr
fcmovb
push
lcall
jo
fldenv
es
push
push
test
dec
std
jb
sarl
lcall
mov
sbb
xor
in
mov
mov
or
sbb
fistl
shll
or
jmp
addr16
ds
dec
cmp
adc
cmp
stc
cmp
fisttpl
push
jg
push
imul
dec
int3
push
aad
nop
mov
jb
xor
jnp
inc
sbb
add
out
std
mov
xchg
and
mov
sub
je
adc
sub
mov
icebp
fmull
cltd
roll
jl
sbb
or
mov
cs
cwtl
or
push
sbb
xchg
pop
stos
inc
cli
mov
daa
adc
cmpl
std
in
xchg
sub
mov
xchg
dec
subl
popf
xchg
adc
rorb
or
mov
xor
mov
aad
out
and
cld
pop
mov
lock
push
fistpl
mov
cltd
and
sbb
stc
fs
leave
and
push
mov
arpl
add
pusha
mov
mov
adc
mov
jp
dec
fiadds
adc
adcb
dec
idivl
mov
jns
inc
cmp
sbb
cltd
mov
mov
adc
mov
pop
push
push
mov
cwtl
xchg
mov
lcall
add
push
lcall
adc
int
cmp
add
aam
inc
cld
repz
xlat
ret
insl
aad
das
aad
xchg
pop
sbb
mov
cmp
lods
bound
pop
mov
and
lds
subb
test
inc
ja
jp
in
les
xchg
pop
push
or
inc
pop
test
add
cmc
dec
filds
dec
lds
cmp
arpl
lret
bnd
flds
cmpsb
js
xchg
sbb
fyl2x
xchg
sbb
aad
int
cmp
xchg
idivb
dec
out
pop
xchg
jns
jne
lea
cli
data16
inc
out
cmp
insb
sub
cmp
adc
jne
test
cld
mov
pop
mov
les
push
shrb
das
cmp
mov
lea
addr16
popa
adc
test
ljmp
jae
lods
repz
xchg
shl
cmp
in
pop
sub
mov
sar
push
iret
and
xchg
jmp
mov
out
jb
xchg
lds
aaa
mov
fmuls
test
pop
or
inc
sub
xchg
test
sbb
xchg
push
jno
or
mov
xor
clc
or
stos
ds
mov
mov
push
xchg
sbb
lds
add
dec
or
pop
popa
cld
mov
jecxz
adc
cmpsb
rcl
rclb
push
add
out
mov
sbb
aaa
push
inc
pushf
divb
jle
jmp
add
int3
inc
mov
cmp
lret
adc
insb
xchg
negb
add
stos
lahf
cmp
scas
jns
cmp
push
jmp
mov
add
lret
xchg
aad
in
jbe
scas
adc
jmp
add
jecxz
loop
repz
xchg
dec
mov
inc
ficompl
pusha
stos
push
sub
lret
mov
in
xchg
lahf
pop
pop
orb
pop
les
sbbb
mov
pop
sbb
adc
das
ss
popa
xor
mov
loope
xchg
adc
adc
sbb
dec
or
pop
lds
push
adc
sti
push
push
std
xchg
repnz
and
push
loopne
setb
inc
add
divb
mov
jle
cmp
mov
aad
sahf
push
outsb
jae
addr16
in
lods
adc
aas
add
mov
cmpsb
hlt
push
mov
adc
cmp
arpl
jbe
dec
push
jmp
aad
mov
rorb
sbb
mov
scas
add
cli
pop
loop
jae
mov
xchg
lods
pop
test
cs
push
fdivl
aad
popa
adc
imull
shlb
mov
mov
dec
pop
in
mov
mov
das
idivl
mov
pop
push
mov
xor
cmp
sahf
and
jp
pop
jmp
jmp
pop
cmc
jb
pop
imul
lea
or
dec
mov
add
imul
push
mov
sbb
jmp
jge
in
das
push
shll
mov
insb
in
rcrb
pusha
xchg
nop
loope
ret
int3
sub
xchg
aam
rcrl
mov
hlt
add
stc
das
mov
mov
pop
push
adc
test
cmp
or
ss
inc
scas
inc
ljmp
adcl
popw
lea
dec
rolb
andl
add
notb
cmc
pop
xchg
sbb
out
adc
xchg
jge
rolb
lcall
mov
sub
das
stos
mov
into
dec
das
sbb
dec
mov
imul
cmc
leave
nop
inc
jge
mov
fs
mov
adcl
insb
dec
mov
sbb
pop
psraw
pop
mov
push
xchg
in
leave
sub
mov
aas
xchg
sub
jnp
mov
or
xchg
sub
mov
mov
jmp
mov
call
sbb
hlt
mov
call
sub
mov
enter
jb
mov
cli
and
orb
add
mov
cltd
das
mov
aas
mov
jae
jne
out
push
push
jmp
xchg
cld
aad
sti
movsl
mov
std
mov
or
jns
mov
ljmp
push
jae
lcall
loope
pop
sub
adc
inc
fnstsw
push
adc
aas
fcompl
cmpsb
shl
lcall
stos
fcmovb
scas
mov
lods
mov
sbb
mov
inc
ljmp
out
sub
lcall
inc
fwait
pusha
mov
and
pop
mov
xor
xor
cmp
ja
cmc
lods
popf
xchg
test
jbe
adc
push
into
mov
cmp
pop
jae
lea
sar
push
sub
mov
adc
sbb
adc
aas
cmp
lret
lea
add
leave
push
hlt
xchg
cmpps
jnp
mov
movb
test
repnz
sarl
sbb
rclb
fidivl
xchg
aas
xor
jg
lods
mov
cwtl
orl
frstor
mov
xor
sbb
mov
mov
int
sbb
add
jl
and
xchg
arpl
les
jne
inc
ljmp
popa
in
mov
adc
mov
and
repz
in
xor
adc
or
pop
nop
push
xchg
mov
sti
mov
or
xor
mov
xchg
rclb
mov
out
jge
hlt
mov
gs
lahf
test
lcall
xchg
mov
dec
push
adc
push
mov
shll
pop
enter
ds
push
movsl
jbe
and
add
add
mov
cmp
notb
push
adc
enter
mov
rcrl
shlb
or
mov
mov
into
fsts
xor
testl
jecxz
fdivl
leave
xchg
jmp
sbb
js
pop
mov
inc
movsl
cmp
push
sub
jge
std
repnz
rcrl
or
sbb
cltd
dec
in
jge
ljmp
nop
ds
mov
shrb
pusha
sbb
adc
mov
xorl
nop
inc
subl
and
or
jb
or
jno
inc
sarl
mov
xor
xlat
outsb
aas
sbb
cmp
outsb
pop
mov
lret
push
cmpb
xchg
pusha
mov
mov
fadds
jns
jne
and
add
xor
push
push
sub
sbb
push
jle
cmp
loopne
popl
xchg
shll
ss
out
cmp
jo
sti
pop
sbb
les
dec
lock
push
fsubp
cmc
jno
push
in
das
cmpsb
jmp
jae
inc
sti
jne
mov
and
pushf
enter
sbb
cmp
mov
stos
outsl
and
lahf
or
add
dec
outsl
scas
jge
mov
inc
push
ja
aas
stos
add
flds
sti
popl
cmpsl
cli
std
mov
push
adc
mov
xor
sbb
addr16
xchg
adc
adc
xchg
nop
outsb
mov
mov
and
adc
mov
out
scas
lea
stos
scas
outsl
dec
xor
mov
lods
xchg
mov
pusha
bound
inc
pop
mov
call
ret
and
jge
enter
mov
pop
add
adc
adc
push
out
fidivs
jne
orl
icebp
push
je
push
loop
sub
or
lock
add
je
inc
and
push
arpl
push
xchg
lock
pop
in
sbb
dec
loopne
sbb
rclb
ss
jnp
aam
mov
add
cltd
data16
mov
ret
lret
mov
rorb
cmp
clc
scas
notl
xchg
or
and
inc
xchg
out
addr16
sub
sub
pop
cmp
mov
movsl
loop
popf
lock
jo
pop
xchg
mov
push
fadds
daa
pusha
push
jno
divb
sbb
jb
lahf
ss
add
out
mov
rcl
pop
push
out
jge
scas
inc
mov
dec
add
das
pop
rcll
movzbl
inc
fisubl
mov
mov
pop
jmp
mov
int3
mov
andb
inc
fsubs
push
xlat
int3
div
dec
mov
pop
js
mov
pusha
data16
roll
push
lcall
nop
mov
shl
call
dec
scas
repnz
repz
add
push
xchg
rcr
mov
aam
inc
aad
mov
ds
push
inc
push
push
xchg
pop
pusha
lcall
scas
push
cmp
push
dec
cli
mov
leave
mov
in
xchg
ja,pt
scas
mov
icebp
adc
sbb
mov
or
mov
sbb
enter
add
aaa
sahf
dec
cmp
or
es
mov
sub
pop
mov
add
pop
rcrl
pop
dec
outsb
je
bound
jns
test
les
out
bound
lods
jmp
out
mov
scas
push
pop
sub
xor
dec
ror
push
in
in
repnz
mov
dec
scas
loop
cmp
dec
mov
xor
adc
loopne
mov
imul
xchg
cmpl
cmp
lcall
jae
ret
xor
fmull
push
mov
andl
lods
sbb
mov
mov
cltd
or
push
jmp
rclb
jecxz
or
add
sub
mov
sbb
inc
or
adc
in
add
mov
fldl
inc
stos
data16
sahf
inc
pop
ljmp
adc
or
mov
push
pop
mov
cmp
ret
fldt
mov
andb
cld
je
fwait
lret
sbb
sub
icebp
adc
movsl
push
mov
jno
icebp
lds
jl
fdiv
rcrb
sub
xchg
xchg
mov
push
adc
test
and
test
das
cmp
cmpsl
cmpb
out
jmp
negl
lock
jns
inc
mov
dec
std
adc
mov
sarb
jp
out
dec
clc
add
arpl
test
movsl
add
test
sbbb
mov
mov
test
or
repnz
cld
jne
pop
inc
insl
adc
jecxz
rclb
jne
xchg
scas
dec
xchg
fimull
sbb
push
inc
mov
xchg
lret
sub
xchg
dec
dec
js
pop
popa
js
shrl
iret
fldt
adc
or
pop
sub
in
sub
sbb
aad
mov
ja
mov
test
mov
lea
xor
jnp
out
cmp
ss
sti
cltd
out
in
jmp
lahf
xor
popf
lret
xor
out
add
or
inc
mov
push
xor
or
mov
mov
shlb
jns
dec
pop
push
icebp
rcrl
into
imul
push
add
shrl
pop
rcrb
mov
sbb
dec
push
mov
push
pop
out
dec
sbb
cs
jbe
rorb
cwtl
add
mov
movsl
dec
jo
inc
negb
popf
mov
push
dec
push
lods
adc
sub
jns
addb
add
fnsave
pop
lahf
push
cmp
insl
xor
sub
cmp
inc
xchg
out
lods
cmp
inc
pushf
cmpsw
daa
dec
jno
push
aaa
loop
jmp
or
jo
jmp
adc
or
adc
mov
mov
fldcw
jnp
add
aam
push
outsb
push
cmpsl
xchg
sbb
loop
addb
pushf
mov
pushf
jbe
or
sbb
add
loop
mov
gs
fcmovb
push
in
in
jp
pop
mov
scas
dec
dec
inc
mov
pop
out
adc
jno
stos
xor
insl
pop
mov
xchg
add
int3
sub
add
inc
xor
xor
pop
lahf
rol
lods
pop
mov
ds
mov
lds
mov
aas
or
jp
sub
fstpt
fdivrs
les
ds
sbb
add
pop
dec
cwtl
pop
mov
and
or
in
sub
xor
jb
ror
outsl
sub
dec
arpl
insl
lea
imul
sub
adc
fnstenv
xchg
call
lds
pusha
aam
mov
mov
daa
sub
and
fisttps
in
aas
mov
xchg
fbstp
dec
lret
popa
mov
adc
push
outsw
lods
mov
out
or
fstps
push
js
test
ss
rol
push
sub
or
out
push
adc
cwtl
push
mov
bound
cmpsb
push
cwtl
inc
mov
xchg
ds
not
xchg
popf
dec
add
push
adc
push
jl
in
cmpsl
mov
or
adc
jp
xor
push
jl
fimull
fcmovu
das
je
inc
test
arpl
xor
sbb
pushf
mov
lock
fiadds
cmpsl
jge
ljmp
jne
dec
and
mul
daa
loopne
test
sahf
scas
pushf
sahf
dec
and
ret
dec
rorb
movsl
ret
or
aam
mov
in
lods
js
dec
popf
and
lds
aaa
mov
cmp
pop
mov
xchg
dec
jmp
push
cmp
push
ss
jmp
scas
inc
repz
pop
les
rclb
push
inc
inc
or
or
mov
loope
ja
into
mov
sar
lods
lods
out
lret
lahf
mov
and
xlat
push
sbb
int
ss
das
mov
pop
jnp
psubd
nop
int
dec
mov
xor
in
inc
xchg
fs
push
xor
ret
mov
xlat
sbb
insb
shll
fwait
pusha
mov
imulb
pop
cli
mov
mov
mov
loopne
add
push
data16
adc
xor
sbb
and
adc
ds
xchg
jo
inc
push
push
fiaddl
mov
and
test
mov
xlat
ljmp
mov
pop
or
cmc
xchg
mov
ficomps
sub
sub
insb
sbb
or
repnz
sbb
sbb
xor
jl
adc
cmp
pop
mov
stos
inc
xchg
sbb
stos
fiadds
jmp
and
testl
hlt
data16
inc
mov
pusha
pusha
je
sub
cmp
push
bound
add
icebp
loopne
jg
popa
and
push
add
mov
iret
jmp
mov
pop
nop
js
adc
mov
call
cltd
out
jl
sbb
add
rol
jecxz
dec
xchg
xor
jecxz
bound
mov
mov
xchg
add
xchg
mov
jne
pop
push
popf
mov
insl
stc
leave
movsb
mov
mov
pop
lock
or
or
push
or
cmp
test
enter
dec
dec
add
pop
push
inc
inc
mov
ljmp
mov
add
addr16
lods
fildl
loop
xchg
adc
xor
or
xor
push
cmpsb
xchg
add
fildll
stos
mov
inc
cli
enter
add
lcall
push
mov
jmp
add
sub
cmp
ret
test
das
pop
sbb
nop
fdivrp
clc
addr16
cmp
stos
and
adc
mov
and
icebp
enter
insl
or
flds
mov
ja
mov
xchg
sbb
xor
aad
xchg
ret
push
inc
fs
xchg
xor
pop
fxch
lea
xchg
pop
mov
test
pop
push
nop
push
or
sbb
xchg
inc
jl
push
movl
cs
mov
dec
fnstcw
dec
call
pop
mov
jmp
pop
inc
xlat
mov
bound
js
out
xchg
xchg
jnp
imul
push
ffree
adc
add
cmp
cmp
test
sahf
mov
test
add
mov
scas
xchg
les
int3
adc
or
cmc
inc
add
movsl
daa
hlt
in
sahf
push
out
push
sahf
sbb
pop
cmpsb
jb
mov
movsl
jecxz
and
inc
dec
nop
inc
insb
mov
mov
lock
push
cmc
jno
fcompl
mov
mov
xchg
add
cmovns
inc
mov
or
jmp
loope
mov
xor
in
cmp
fldt
scas
ret
ds
mov
jmp
dec
jae
xchg
cwtl
cmp
pop
in
pop
js
cmp
or
mov
arpl
leave
sub
scas
cli
cwtl
adc
cmp
cmpsb
outsb
pop
or
aaa
add
mov
or
jmp
cmp
push
call
inc
jo
pushf
lea
or
inc
dec
sub
push
leave
push
pop
shlb
int
and
daa
popa
call
sub
fdivrs
inc
dec
xlat
imul
pop
jns
ficomps
sbb
jns
add
inc
jmp
iret
lcall
xchg
jl
lea
inc
aas
mov
push
mov
adc
mov
cwtl
into
cmp
in
test
inc
xor
shrb
mov
adc
stos
jp
icebp
push
mov
nop
inc
loope
outsb
cwtl
fstl
dec
pop
lcall
shrl
inc
mov
in
push
les
arpl
xchg
cmp
pusha
cwtl
push
sub
jecxz
fnstcw
fldcw
mov
outsl
lahf
in
js
cltd
mov
test
fdivl
pop
adc
call
cmp
into
adc
push
pop
jns
rorl
pop
xchg
pop
dec
push
dec
out
shlb
jp
pop
xchg
and
mov
lods
mov
or
int3
fbstp
andb
outsl
pop
add
mov
mov
xchg
adc
pushf
popa
hlt
inc
push
pop
jb
not
shll
mov
cld
nop
sahf
cmp
xorb
stc
into
fnstcw
data16
mov
add
xor
leave
int3
dec
xchg
jge
cmpb
daa
cmp
bound
aad
push
jge
pop
loopne
leave
pushf
pushf
je
cmp
test
stc
and
ret
hlt
or
rcr
popf
xchg
aam
xlat
rorb
adc
lahf
nop
ja
jbe
push
fsubl
mov
push
outsl
loopne
ja
cmc
ja
imul
fcoml
test
add
lret
das
xor
jo
adc
mov
cld
pop
push
lods
mov
inc
jne
fsubrs
and
repnz
mov
xor
call
in
repnz
out
adc
push
mov
test
roll
inc
test
adcl
cmp
imull
or
cmpsl
jmp
adc
stos
je,pn
popf
negb
mov
enter
pop
xlat
lds
f2xm1
pop
aam
cmp
in
add
mov
or
mov
cmp
cmp
sbb
int3
adc
lahf
pop
push
gs
dec
mov
jle
rcr
fiadds
xchg
sahf
dec
imul
cmp
fwait
test
xchg
in
imul
inc
inc
sti
dec
int
sahf
or
jecxz
mov
xchg
push
fucomp
icebp
pop
cld
jge
mov
adc
jns
mov
jge
pop
jnp
jecxz
aad
ljmp
in
mov
lret
jecxz
repnz
out
dec
out
dec
sbb
cmp
test
jae
int3
sahf
scas
scas
repz
mov
pop
mov
in
push
mov
add
cmc
subl
pop
add
adc
pushf
or
push
add
adc
jmp
jb
pushf
lahf
cmp
cmpsb
aaa
rcr
gs
sub
jge
add
loop
pop
pop
insb
xlat
in
repz
push
or
aaa
rcll
cmp
adc
cmp
and
dec
dec
mov
jns
and
sti
or
movsb
not
cmp
mov
xchg
mov
js
push
inc
xor
std
mov
jno
or
test
out
xchg
sbb
add
mov
xchg
test
les
cmp
in
jmp
sub
xchg
test
movsb
or
push
push
popa
add
push
jl
mov
mov
push
sbb
and
mov
push
into
loop
xchg
notb
add
cmp
pop
out
adc
ds
jne
stc
cmp
aas
xor
fistl
fsubrs
sbb
out
movsl
inc
fcompl
inc
mov
pop
inc
lcall
jg
loope
inc
push
adc
add
mov
cmp
mov
inc
fsin
div
mov
fstl
icebp
cmp
mov
fiaddl
mov
add
push
stos
sbb
mov
cmp
pop
mov
xchg
imul
scas
or
add
lret
mov
pop
push
lret
mov
into
aam
xor
subb
sbb
dec
sbb
lcall
jle
jmp
add
les
outsb
out
adc
cmp
scas
mov
xor
fldcw
mov
pop
test
pop
inc
add
add
fsubrl
out
out
inc
bound
lods
adc
das
sub
pop
jecxz
and
mov
insb
mov
mov
mov
neg
unpckhps
xor
mov
sub
sbbl
cld
and
cmp
or
add
adc
emms
dec
leave
aas
dec
and
and
xor
add
lods
mov
sarb
cmc
shlb
jg
jg
loope
xor
jmp
adc
adc
les
add
mov
xchg
and
and
jge
dec
mov
fdivrp
iret
mov
in
mov
push
dec
hlt
mov
adc
adc
ret
jae
cmp
cmp
push
fdivl
mov
xor
mov
out
std
mov
push
fs
filds
lods
shrb
push
pop
sbb
das
adc
lret
pop
and
movsl
cld
xlat
xchg
cmp
sbbb
fwait
xchg
and
mov
shlb
lock
add
pop
push
or
ja
adc
cmc
sub
adc
fidivrs
out
cmp
and
xchg
pushw
xchg
mov
mov
sahf
xlat
adc
xor
das
cmp
xor
adc
fisttpll
sbb
mov
scas
sbb
jno
sbb
xchg
and
dec
jmp
or
std
jp
sub
cmp
pop
cli
xor
into
insl
sti
ret
loopne
decb
mov
xor
jne
ror
loope
jnp
sub
test
mov
test
imul
inc
push
std
insb
sub
jle
dec
and
xor
cmp
pop
imul
iret
loop
or
notb
adc
cltd
inc
dec
lock
jp
popf
rclb
shlb
dec
xchg
nop
outsl
int
aas
xchg
aaa
cmp
mov
cmp
ret
inc
mov
lods
adc
push
jp
ret
testl
mov
and
pop
imulb
pop
jmp
dec
and
sti
mov
mov
or
push
loop
pop
test
jmp
lcall
scas
cmpsl
pop
cmp
dec
rcrb
xchg
aam
and
and
inc
repz
cmpsb
mov
sub
out
fnstsw
addr16
outsb
popf
lds
movsb
fwait
insb
std
mov
jb
mov
movlps
or
push
fstpl
mov
cmpsb
xchg
xchg
or
mov
ds
push
mov
out
add
jle
mov
inc
aam
push
mov
or
jmp
imul
adc
and
sti
dec
cmpsl
add
insl
int
push
imul
fnsave
insb
insb
pop
rorb
fisttpl
mov
mov
sub
sbb
inc
xchg
adc
mov
pop
cmp
mov
cmpsl
stc
rorl
aas
int
stos
xchg
mov
adc
filds
push
lock
jnp
mov
ss
sti
ret
mov
mov
sbb
cli
mov
cltd
icebp
sbb
xor
dec
pop
push
sbbb
data16
sarb
leave
gs
imul
filds
inc
out
insb
ljmp
inc
stc
and
out
xor
loope
bound
cmc
add
lds
and
test
call
xchg
fistpl
adc
mov
sbb
insb
mov
test
sbb
scas
sbb
aaa
out
into
aad
fwait
xlat
cld
clts
lret
pop
mov
sti
pop
and
lods
xchg
push
xchg
movsl
data16
or
and
jecxz
mov
sub
mov
lods
xchg
mov
stos
and
sarb
subps
and
sub
ss
mov
test
or
or
fistpll
loop
lcall
mov
sahf
push
xchg
lods
shll
aad
fs
out
lock
or
xchg
imul
scas
push
xchg
jmp
push
cmp
ret
fimuls
stos
out
and
push
scas
push
or
cmp
daa
je
mov
stc
fidivrl
sub
cmp
negb
pushf
orb
out
add
jns
divl
or
cmp
cmp
movsb
cmp
out
lods
and
adc
pusha
sbb
xor
repnz
mov
faddl
mov
bound
xchg
enter
push
divb
fstl
dec
aad
or
into
jae
arpl
jae
mov
xor
sub
mov
push
loope
stos
sbb
adc
cmp
mov
sbb
inc
xor
add
fwait
xor
xchg
mov
into
xchg
jg
xchg
ja
push
popa
in
getsec
std
repnz
sbb
cli
cmp
cmp
mov
xchg
push
pop
mov
cmp
test
sahf
cmc
mov
and
stos
pop
jmp
add
inc
cmp
mov
mov
mov
rcrl
fistl
outsl
push
hlt
sub
sti
imul
xchg
push
xchg
pop
out
mov
mov
adc
jnp
rcrb
mov
add
mov
insl
and
mov
add
dec
cmp
into
out
aaa
pop
lahf
mov
addr16
mov
lret
mov
popa
xlat
cwtl
ficoms
xor
mov
movsb
aas
scas
lock
fbld
add
out
sahf
pop
and
pusha
mov
jnp
add
repnz
clc
bswap
lahf
stos
adc
cmc
fistl
cmp
push
or
stc
push
imul
inc
ja
cmp
mov
adc
push
addl
mov
mov
mov
sbb
gs
sub
xor
or
mov
stos
je
lret
mov
mov
arpl
xor
push
xor
bound
nop
xor
cld
add
jmp
ret
jb
pushf
add
ret
clc
mov
sub
fimull
int3
test
cmp
and
not
add
sub
inc
fnstcw
or
or
sub
int3
jle
mov
mov
fisttpll
lock
pop
sbb
and
movsl
add
bnd
iret
or
ljmp
pop
or
xchg
xchg
cmp
mov
jbe
out
in
fs
xor
popa
int3
movaps
lods
sbb
rcrl
dec
clc
imul
lods
xchg
push
je
inc
loopne
ljmp
xor
push
nop
call
int3
pop
jge
xchg
xchg
push
cwtl
xchg
jmp
cmp
sub
test
pop
stos
iret
repnz
sub
in
mov
enter
adc
mov
add
sub
or
jne
pop
aas
inc
inc
mov
inc
pop
adc
fs
mov
clc
fisttpl
mov
or
rol
pop
xchg
in
loope
sbb
jl
dec
mov
inc
dec
aam
mov
mov
sub
inc
xchg
jbe
dec
int
mov
ja
lahf
and
push
lret
imul
mov
pop
cltd
fiadds
mov
mov
aas
xlat
les
add
mov
in
loop
rclb
mov
adcl
outsb
leave
dec
popf
sahf
out
jmp
ret
test
xlat
or
andb
dec
sub
stos
push
mov
jb
jnp
hlt
push
xchg
ret
mov
or
xchg
out
mov
cmc
loopne
sbb
xchg
pop
hlt
push
jge
ret
adc
jbe
rcl
hlt
addb
dec
imul
orb
leave
inc
push
jl
or
dec
je
pushf
sahf
cwtl
outsl
add
sub
jl
or
inc
movsl
pop
mov
cs
out
push
and
jb
cmp
push
mov
fidivl
cmp
cs
repnz
push
sub
xor
push
out
loop
pop
mov
lds
stc
pop
fisubl
cmp
cs
insb
xchg
sub
out
in
inc
scas
sbb
in
fdivr
push
imul
out
mov
mov
fwait
stos
or
or
dec
jecxz
mov
in
cli
hlt
jb
rcrl
jge
or
dec
xor
lcall
imul
mov
xor
adc
subb
lods
iret
mov
je
das
dec
sbb
insl
push
mov
add
cli
shlb
sub
push
jge
jmp
addr16
mov
testb
adc
xor
cmpsl
dec
outsl
call
dec
xchg
stc
out
adc
hlt
insl
pop
mov
add
cmpsb
lret
mov
or
add
fistl
jmp
and
sbb
je
addr16
or
shl
push
cmp
lcall
ss
pop
test
test
out
fistpll
aad
and
ficoml
test
xor
jge
cmp
mov
and
or
or
es
je
popf
pop
adc
out
lock
jnp
add
push
cmp
mov
lcall
cmpsb
lret
lea
das
inc
test
frstor
cmp
dec
xchg
sbb
push
sub
jb
ret
push
fmul
in
mulb
pop
add
add
ljmp
add
mov
or
je
orb
xor
and
xor
stc
fadd
inc
cmp
out
loopne
mov
imul
pop
lahf
cld
les
pushf
add
out
fistps
adc
mov
frstor
scas
lea
pop
imul
scas
jle
dec
add
push
dec
int
mov
cmp
adc
add
and
filds
mov
call
fstp
pop
rclb
insb
shlb
push
fnstsw
