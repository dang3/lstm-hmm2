sbb
add
mov
xor
inc
pop
scas
into
jo
push
into
scas
xor
cmc
cwtl
cwtl
or
loope
outsl
fcmovne
iret
out
sbb
fs
jmp
adc
dec
cmp
cmp
imulb
test
jge
js
lret
mov
add
in
fdivs
fdiv
xchg
sub
hlt
inc
aas
add
xchg
jmp
mov
push
stos
sub
inc
loope
out
rorb
enter
ljmp
iret
add
cmpl
jle
xchg
sbb
adc
aad
dec
mov
pop
filds
mov
xor
aas
out
cmc
xchg
push
ret
pop
hlt
int3
xacquire
or
add
cwtl
mov
cwtl
repnz
imul
hlt
push
jp
sbb
lret
and
imul
psubq
push
jl
inc
mov
in
inc
movsl
outsb
push
cwtl
dec
adc
push
push
pop
rolb
push
in
roll
js
or
aaa
xchg
movb
mov
fdivl
xor
js
cmp
mov
jbe
sbb
fcompl
mov
mov
or
and
sub
cmp
inc
aad
test
pop
fnstenv
scas
sub
in
xchg
xor
or
pop
jbe
push
stos
and
mov
cmp
xchg
fsub
ret
xorb
icebp
xchg
mov
jl
inc
dec
xor
or
xchg
mull
sarl
sub
jnp
push
push
xchg
sub
test
xchg
adc
pop
subb
fstpt
cmp
aam
xchg
and
mov
cmp
test
xchg
and
sub
daa
xchg
in
shl
mov
fnclex
pop
xor
adc
das
jbe
and
sbb
sub
xchg
add
pop
sbb
stos
movsl
jns
bound
dec
daa
pop
and
adc
pop
iret
and
out
fcoms
inc
jb
inc
fldl2t
sbb
stc
or
movsl
data16
cs
xor
push
mov
outsb
dec
ret
mov
sub
cwtl
sahf
ficompl
jnp
inc
lods
scas
sbb
sbb
loopne
push
ja
ja
and
dec
sbb
push
hlt
repnz
pop
sti
daa
or
scas
xlat
cmpsb
sbb
stos
mov
sub
inc
xorl
xchg
aas
pop
and
movsb
push
fwait
ret
jge
xchg
dec
cmp
popl
push
lods
loopne
or
in
mov
dec
je
sar
insl
lahf
and
loopne
test
fidivrl
add
test
sti
fistpl
daa
push
jnp
xor
xchg
sub
call
aaa
xor
xor
js
adc
cmp
lods
shr
mov
sub
and
rcrl
sbb
dec
insl
add
pop
jno
push
cmp
dec
jne
sarl
xchg
sub
mov
add
out
inc
jle
pop
testl
and
sahf
aad
sub
mov
ror
pop
inc
cmp
dec
add
or
and
fstpt
pop
pop
loopne
rcrb
pusha
dec
sbb
jg
loope
aam
jne
inc
sub
cmp
push
fdivr
and
jecxz
bound
out
adc
ljmp
mov
movsl
fs
leave
sub
or
cld
cltd
aaa
test
cwtl
mov
out
cli
adc
xchg
insl
jg
sbb
cwtl
mov
cmp
or
sbb
std
je
cmp
aad
ret
clc
and
pop
fdivrs
adc
lahf
orl
popa
rcrb
cmp
jo
xchg
jae
mov
das
push
out
adc
in
sti
mov
mov
cmp
sar
sub
fdivp
mov
loope
pop
cld
and
xchg
xor
add
leave
cld
sub
lds
pop
test
adc
enter
adc
test
push
gs
xchg
pushf
jo
or
movsb
test
jne
divb
inc
jae
sub
dec
mov
dec
inc
sub
mov
in
jg
out
xor
pop
scas
lret
adc
sbb
push
popa
inc
es
sub
adc
cltd
shrl
mov
sbb
mov
dec
mov
sub
sbb
shll
mov
fwait
mov
mov
movsb
out
lret
xchg
subb
imul
fwait
xor
push
jbe
xor
rcrl
test
dec
or
out
lret
mov
fstpt
jmp
dec
call
lea
sti
popa
mov
xchg
xor
xchg
popa
out
mov
inc
scas
push
dec
std
sbb
sub
fsubs
cmp
mov
sbb
sbbl
sbb
loopne
jmp
scas
hlt
aad
push
and
mov
dec
out
lods
or
cmp
xlat
mov
jge
mov
lods
movl
jae
or
test
outsb
mov
les
xchg
adc
push
mov
add
jmp
pop
jnp
ss
rorl
repnz
add
and
inc
insl
loopne
sub
sbb
ds
add
aad
fistpl
jle
xchg
mov
fcomi
sbb
inc
inc
and
in
cwtl
jp
lea
pop
dec
pushf
cmc
sub
sub
fildll
lcall
test
jg
call
cmpsb
fdiv
jae
movsl
lods
cmp
rorb
test
mov
add
popf
adc
movsl
push
sbb
dec
stos
cld
cltd
addr16
cmp
or
cmpsb
inc
lods
push
rolb
jne
jo
adc
sbbl
scas
cmp
lods
stc
in
xchg
loop
pop
cltd
cmpsb
lret
cld
mov
or
jl
inc
mov
roll
fdivr
insl
lods
jnp
fmull
aad
xor
lea
fisttpll
inc
or
mov
subl
xchg
addl
or
cmp
lock
sar
push
mov
dec
jge
mov
ficoms
aam
hlt
cmp
out
ds
fndisi(8087
push
mov
pop
push
cmp
aam
mov
add
int3
xor
mov
mov
sahf
testl
subl
daa
mov
icebp
ja
add
testb
mov
mov
ret
gs
cld
jbe
push
ds
mov
add
and
mov
dec
hlt
inc
mov
incl
cwtl
xor
mov
push
je
ret
movsb
jp
aas
lret
cmp
fucomi
mov
out
adc
mov
js
or
jb
adc
sbb
imul
pop
cmp
add
rclb
lds
xlat
inc
cmp
inc
xchg
mov
push
inc
out
adc
xor
dec
mov
test
jmp
mov
sbb
jecxz
xor
mov
mov
push
ret
push
pop
lret
add
les
sahf
sahf
inc
fwait
sbbl
sahf
lds
sub
inc
stos
into
rcl
fdiv
push
out
push
dec
stos
xchg
iret
or
outsb
repz
lods
inc
negb
aas
and
sahf
mov
xchg
lahf
nop
jb
mov
data16
and
bound
fwait
cmp
ret
push
aaa
cmpsb
pop
shrl
stc
loopne
imul
mov
outsb
rcpps
lods
add
mulb
inc
cmp
sub
add
imul
push
out
test
into
out
js
mov
add
shl
inc
push
repnz
xor
cli
mov
into
out
xlat
mov
push
sarl
inc
jl
rol
mov
jl
icebp
ret
xchg
push
movsl
and
std
and
push
add
push
mov
lods
pop
frstor
and
sbb
cwtl
mov
imul
mov
dec
test
and
mov
pop
inc
ljmp
fstpt
dec
hlt
in
xchg
push
cmp
repnz
daa
inc
add
push
sahf
mov
sub
pop
in
sub
dec
jbe
jg
jbe
push
pop
out
lea
in
push
dec
mov
cmp
sub
sbb
add
lods
dec
test
insb
jns
cmp
jnp
mov
sub
scas
xor
ja
jne
call
mov
ja
arpl
dec
popa
and
jle
cmp
add
sub
bound
adc
xor
mov
mov
in
mov
xchg
cltd
jno
cs
jle
xor
xorb
mov
or
push
fs
ja
xor
icebp
jle
lcall
out
mov
imul
aam
adc
fistpl
out
mov
ljmp
mov
es
pop
arpl
inc
push
sub
andb
out
rcrl
punpcklwd
sbb
arpl
shl
push
dec
jne
jb
loop
jge
clc
inc
cmp
test
push
aad
test
mov
mov
xchg
in
jl
sahf
rdpmc
adc
int3
mov
lret
cmp
js
gs
jecxz
fildl
jmp
adc
les
out
ljmp
pushf
jp
movsl
mov
dec
cld
dec
push
mov
cmp
cmp
fstps
stc
outsb
pop
lahf
cmp
sub
sub
daa
in
xchg
setl
mov
dec
or
test
mov
ret
and
outsl
into
xchg
mov
lock
ret
icebp
add
cmp
and
pop
into
pop
enter
xor
or
and
pop
xor
lret
xor
fsubrs
addb
mov
data16
sbb
jl
cmpl
mov
repnz
adc
add
cld
mov
repnz
pop
push
mov
ljmp
iret
ret
shll
out
push
adc
sub
dec
jecxz
xor
adc
scas
out
cmp
lds
inc
inc
cmp
adc
add
jno
xchg
add
pushf
pop
enter
fsubr
aad
aam
push
stc
repz
or
pminsw
adc
inc
test
test
or
out
test
inc
cmp
dec
lret
ja
xchg
sbb
push
andb
ljmp
popa
test
and
sbb
lods
movsl
xchg
adc
xor
cmp
jb
jmp
push
mov
test
push
enter
shll
mov
lock
sub
out
cld
ret
push
push
push
adc
sbb
mov
stos
mov
mov
fwait
mov
push
mov
shlb
mov
dec
clc
lahf
pop
xchg
shlb
negb
jb
xchg
or
mov
popa
les
cmp
fs
dec
mov
adc
loopne
movsb
adc
jmp
js
cmp
lock
popa
test
lods
sub
in
mov
cmpsl
in
out
sbb
adc
lcall
fstps
add
adc
les
imul
fldcw
or
test
arpl
lods
pop
add
sbb
in
jp
xchg
fsub
sahf
loope
rcrb
jg
sbb
call
cmp
sub
jecxz
xchg
jo
jno
add
sbb
xor
pop
inc
and
sub
pop
or
int
sub
stc
cmp
fs
mov
lcall
imul
pop
addl
lock
clc
popa
xchg
xlat
cs
in
pop
js
jne
add
in
rol
sub
xchg
cli
mov
sbb
jbe
mov
push
cmp
cmpsb
pop
mov
lret
arpl
xor
adc
mov
lret
je
inc
movsl
sbb
xor
sti
test
icebp
je
jg
sbb
aam
fildll
inc
cmpsb
icebp
aas
mov
dec
jbe
hlt
in
sbb
orb
icebp
mov
push
je
testl
arpl
movsl
fdivs
repz
or
mov
in
int3
repnz
ja
stos
sbb
sbb
ljmp
push
fs
cmpsb
lret
sbb
sarl
or
stos
xor
jns
out
push
fsubs
repnz
sub
jle
cmp
std
mov
fcomps
clc
mov
ret
mov
out
pop
cmp
adc
lods
mov
mov
xor
test
inc
gs
dec
inc
daa
int
adc
push
movsl
fdiv
xchg
iret
sub
mov
mov
mov
sbbl
enter
adc
pop
not
adc
icebp
ljmp
fmuls
ljmp
enter
inc
ss
jbe,pn
adcb
bound
and
cmc
sub
dec
add
cli
xchg
jle
mov
test
mov
es
loop
loop
or
push
sahf
cltd
adc
jne
out
les
call
xchg
or
nop
mov
pop
push
mov
fsubl
arpl
add
mov
aas
pop
xacquire
jb
jne
pop
or
outsl
dec
add
imul
push
add
dec
xorb
or
jecxz
jne
push
inc
insb
push
xchg
pop
in
mov
andb
mov
push
mov
jg
leave
sub
dec
mov
push
out
js
sarb
jbe
mov
xchg
mov
jae
insb
mov
jge
jp
fcompl
push
sbb
rolb
push
and
imul
pop
xor
push
mov
xor
int3
push
aaa
fsub
sub
iret
jae
pop
jne
cmp
push
pop
add
jle
sub
cmp
in
push
xchg
pop
inc
bound
xchg
jecxz
in
jle
or
sub
cli
add
rclb
pop
dec
inc
push
in
pop
mov
push
pop
cmp
dec
outsl
cmp
incl
jb
or
inc
std
mov
int3
adc
fmulp
dec
jnp
or
dec
test
data16
in
mov
pusha
jmp
lds
sbb
scas
js
or
in
push
rcl
add
loope
xchg
loopne
out
rcll
adc
lea
pop
pop
mov
int3
xor
dec
cmp
pop
push
xchg
xchg
push
les
xor
xor
sahf
sbb
push
popl
ljmp
es
pop
das
pop
repz
out
popa
xchg
fs
xchg
adc
cmc
xchg
and
dec
cmp
icebp
fimuls
and
adc
mov
pusha
lcall
xor
loop
push
je
jns
mov
hlt
cwtl
fwait
jae
mov
sub
fsubs
mov
sbb
clc
xor
cmpsl
test
pop
mov
mov
pop
lock
mov
or
jge
mov
jae
pushf
aaa
test
sub
and
inc
and
int3
mov
ja
mov
push
imul
sub
subl
insb
dec
icebp
sbb
jo
dec
loope
xor
adc
cmp
sti
add
in
sub
or
sub
imul
sbb
clc
mov
sbbb
cmp
popa
mov
mov
lods
jg
mov
in
adc
insl
or
out
repz
lahf
pop
fstl
xchg
dec
mov
cmp
mov
les
out
sahf
or
hlt
and
push
pop
repz
aam
xor
js
xchg
into
sub
in
sub
jb
sbb
mov
inc
lods
jecxz
daa
shll
dec
cmpsb
jne
mov
cwtl
push
jns
cmc
and
repz
mov
xlat
fcomps
andb
lods
jp
test
stos
add
cmp
jle
movsb
test
mov
test
popa
mov
mov
push
xchg
add
data16
dec
addb
out
pop
xor
xchg
test
bound
es
mov
shrl
xchg
push
rcl
mov
mov
jge
lcall
push
xchg
mov
push
add
add
mov
xor
jb
mov
inc
out
aam
lods
and
mov
test
sarb
mov
sarl
out
sub
push
fisttpll
sub
push
fisubl
sbb
mov
cmp
push
lret
inc
adc
sti
ja
and
in
mov
push
out
mov
push
xchg
hlt
cmp
lea
ror
sub
stc
cltd
mov
iret
xor
arpl
loop
bound
mov
sahf
pop
xchg
cmpsl
orl
sub
add
test
mov
leave
pop
movsl
mov
dec
jnp
cmpsl
lret
in
push
sbb
sub
movsb
incl
and
roll
and
notb
test
popf
mov
aas
jbe
daa
in
test
daa
mov
ss
cld
add
jne
or
mov
cld
nop
push
xor
inc
ret
cmp
rcl
lcall
rcrb
ret
les
pop
ficoml
mov
leave
pop
add
mov
inc
nop
mov
or
push
mov
mov
push
mov
xchg
xchg
negl
jl
inc
mov
xchg
outsl
jb
inc
cmp
test
xchg
ret
popf
cmp
fcoms
decb
mov
dec
push
xchg
inc
insb
imul
cs
xchg
sbb
call
fldenv
or
in
xlat
imul
pop
or
scas
inc
jo
mov
imul
mov
dec
mov
mov
xor
push
xchg
in
fdivs
out
in
mov
push
jne
pop
jns
mov
scas
hlt
dec
pushf
mov
in
daa
mov
in
add
xor
xchg
cmp
add
lea
sub
icebp
pop
cmp
or
ds
add
mov
das
push
loopne
les
lods
scas
mov
fistpll
adc
roll
add
inc
in
mov
cmp
xor
push
movntps
stc
inc
mov
mov
dec
nop
pop
loopne
push
pop
jg
and
leave
and
jne
lret
pop
mov
cltd
mov
int3
push
or
sub
xchg
in
fdivl
jb
scas
sub
cmpl
jns
push
dec
pop
pushl
push
push
pop
jmp
dec
mov
rcll
cmp
mov
dec
hlt
add
dec
sar
loope
jmp
fstpt
es
out
movsl
dec
mov
ret
lds
push
das
jecxz
jno
mov
xchg
cld
orb
rcrb
lea
add
enter
fdivs
and
mov
rcrb
push
or
fstpt
inc
hlt
and
in
push
dec
mov
mov
jnp
cmp
jnp
jae
cmpsl
push
andl
push
aad
dec
into
out
mov
mov
insl
xchg
dec
js
cmp
mov
dec
cmp
mov
insb
out
jno
cmc
in
fs
in
jno
push
pop
add
insb
sbb
xor
data16
cmpsl
jne
or
inc
jmp
pop
jle
inc
pop
mov
push
push
jbe
pusha
ljmp
ss
jg
sarb
xchg
das
mov
addr16
lcall
mov
repz
push
stos
ljmp
dec
xor
leave
scas
cltd
test
std
movsl
fldt
sbb
lcall
push
lods
arpl
test
add
mov
push
push
and
pop
and
clc
mov
in
lret
jp
xorb
je
ds
lahf
addl
das
cmp
inc
fsubs
movsl
mov
xchg
sub
xor
cmc
xchg
loopne
lahf
movsl
mov
adc
in
adcb
adc
sub
pop
inc
sbb
pop
adc
cltd
xor
pop
fs
sbb
sub
fmuls
lods
je
loopne
ljmp
aas
jo
cltd
stos
pop
rcr
insb
int3
push
dec
xor
lds
sbb
xor
enter
cmp
jl
lods
test
xchg
mov
je
call
in
insl
or
roll
mov
pop
sub
add
mov
call
loopne
fcoml
jg
jb
sub
jle
popa
mov
scas
mov
push
add
insl
adc
in
cmp
dec
add
jmp
xchg
imul
xchg
push
mov
push
pop
fidivs
mov
cli
into
int
stc
das
xchg
rorb
scas
cmpsl
lret
jae
push
mov
and
adc
std
ficomps
outsl
enter
xchg
movsb
incl
adc
push
pop
in
mov
push
cmc
mov
mov
inc
xor
adc
xor
std
xchg
mov
xor
je
mov
xor
push
aaa
mov
loope
inc
leave
push
jg
lea
fcmovnb
pushf
outsb
jae
push
xchg
ret
xchg
inc
bound
bound
inc
push
inc
inc
pop
cmp
lock
cmp
inc
fadd
xorl
cmc
xchg
stos
imul
jge
imull
in
int
cmc
jmp
mov
stc
adc
mov
push
cmp
mov
cmp
sti
outsl
test
icebp
mov
inc
movsl
pop
in
fdivl
xchg
loop
enter
or
xor
xorb
out
mov
es
sbb
leave
movsl
xor
pusha
outsl
imul
fs
mov
mov
ss
aad
popa
mov
les
xchg
and
adc
mov
pushf
push
lahf
inc
fmull
xchg
fstps
sub
orl
divps
sbb
xchg
pop
mov
addr16
mov
icebp
push
idivb
lods
mov
call
test
jle
cltd
hlt
mov
pop
sub
dec
fsubp
repz
push
mov
sbb
mov
jnp
pop
pusha
and
jo
mov
mov
jg
xor
push
jne
lret
lock
mov
test
call
sub
lahf
cmc
jmp
dec
add
xor
dec
sbb
icebp
sub
push
inc
shlb
out
nop
pop
push
jl
cltd
xchg
dec
outsb
push
mov
stos
repz
hlt
xchg
xchg
cmp
icebp
call
outsb
test
repz
out
or
das
loop
pop
addr16
loop
and
inc
test
stos
shlb
test
stc
mov
xchg
and
sub
cwtl
insb
dec
loope
sbb
adc
mov
push
movsb
jo
jecxz
arpl
insl
movsb
sbb
pop
mov
aaa
data16
sub
sbb
loop
fdivl
out
xor
fcompl
frstor
ret
jl
mov
sub
inc
outsb
push
sbb
xchg
pop
push
pop
adc
pop
aam
mov
xlat
cltd
cmpl
imul
cmpsb
push
ret
and
push
hlt
pop
loopne
cld
setns
idiv
rcll
cmpsl
dec
xchg
aad
adc
ljmp
xchg
lea
jg
or
int3
mov
std
nop
hlt
pop
out
or
js
xchg
xchg
das
sub
gs
jb
stc
jmp
movsb
jbe
je
xadd
jge
aas
jo
jo
sub
inc
and
movsl
pop
mov
scas
or
jne
sbb
jg
fdivrl
lods
or
movsb
push
and
test
cld
test
jmp
dec
movsl
call
mov
ds
in
jae
mov
push
mov
test
push
rorl
mov
out
jl
stos
push
mov
fbld
cmp
daa
add
and
fwait
pop
and
stos
push
xchg
ret
shl
lock
rcll
rcll
add
bnd
sub
cmp
fs
hlt
sbb
shl
and
sbb
pop
mov
out
mov
sub
mov
sbb
and
jle
jb
xchg
pop
xor
test
repz
ficoml
cli
insb
adc
lret
push
xor
sbb
cmpsb
xorb
xchg
cmpl
push
arpl
loope
popf
mov
xlat
pop
xchg
pop
mov
jo
lret
mov
jl
jne
and
push
outsl
and
imul
and
push
cli
mov
mov
and
dec
je
out
rorl
mov
pop
cld
in
push
pop
dec
mov
add
jle
pop
sbb
call
xchg
cwtl
fsubrp
and
mov
push
lret
outsl
and
lock
sti
mov
roll
lds
cltd
jo
loopne
cvttps2pi
sti
mov
add
dec
imul
mov
pop
sub
mov
mull
xchg
clc
cmp
nop
ret
jno
daa
cs
aas
and
mov
and
jae
daa
or
xchg
cmp
jnp
cltd
scas
push
push
mov
sbb
push
or
stc
xchg
fdivs
sub
int
xor
add
scas
sub
sar
mov
stos
pop
pop
pop
mov
inc
cmc
cmp
cltd
test
mov
mov
xorb
push
ds
call
outsb
rcrl
jmp
xchg
jmp
repnz
dec
cli
gs
test
test
xchg
in
push
ret
dec
stos
dec
incl
cmp
outsl
int3
pushf
pop
pause
leave
or
mov
out
or
xlat
insb
adc
jle
test
add
sti
cmpsb
subb
dec
push
cwtl
std
inc
repnz
mov
gs
xor
mov
cmp
push
cmp
mov
or
xor
push
xor
cmp
push
xchg
std
fnstcw
add
push
xchg
jbe
dec
push
mov
push
push
cld
sbb
orb
stos
cmc
add
cmc
outsl
insl
je
pop
mov
movsl
xchg
fidivl
or
and
scas
loope
jae
aad
xor
cmc
and
aas
and
push
cmp
xlat
pop
sti
lods
cmp
lock
adc
push
sbb
xor
fldcw
testb
cmp
or
xchg
jecxz
inc
mov
mov
mov
xchg
pavgw
lcall
in
scas
mov
dec
mov
scas
repnz
add
sub
neg
xchg
repz
ss
std
les
iret
arpl
pusha
mov
pop
push
aam
cmc
cmpsl
cmpsb
sti
xor
mov
call
arpl
in
stos
or
xor
cs
or
outsl
xchg
push
lods
imul
sbb
sub
jae
rcr
ss
outsb
or
xchg
lea
xchg
cmp
jle
scas
lret
push
adc
cmp
jae
call
repz
iret
dec
mov
nop
cwtl
push
adc
inc
sub
push
fcmovnbe
rcrl
xchg
adc
push
adc
repnz
insb
fs
js
divl
mov
pushf
sbb
mov
pop
out
fcmovnbe
push
lcall
mov
jo
je
in
cmc
mov
shl
adc
push
outsb
jns
fcompl
mov
stos
cmpl
loope
xchg
js
sub
lock
jns
sub
in
inc
out
out
int
xchg
mov
mov
dec
aad
mov
out
call
into
push
sub
lahf
jp
adc
lods
dec
and
push
sub
xchg
scas
cmpl
dec
push
inc
xchg
adc
lcall
fnsave
nop
popf
xor
daa
pop
daa
je
ss
pop
and
adc
fisubrl
xchg
xchg
adc
sti
and
inc
and
sub
popf
xlat
adc
add
sbb
divb
inc
push
fldln2
ss
dec
outsb
xlat
mov
fbstp
dec
cmp
lock
dec
movsb
flds
lds
js
cli
pop
imul
movsb
popa
nop
xor
adc
clc
jl
xor
mov
lcall
fcomp
xchg
push
lea
pop
push
xor
das
insl
xchg
mov
rclb
sbbb
out
jbe
aam
fistps
xchg
shll
sub
sbbb
shll
aas
adcl
aad
xchg
mov
jge
fs
je
lock
enter
repnz
sub
cmp
sub
cmp
out
jg
cmc
sub
ja
and
mov
sub
inc
std
out
add
cs
notb
pop
jp
cwtl
subb
pushf
mov
mov
mov
sahf
mov
lods
cmp
xchg
jbe
cmp
mov
xchg
dec
push
lret
mull
fistps
sub
push
nop
jg
jne
sbb
jbe
sbb
add
popf
addr16
mov
pop
fidivrl
movsb
popf
std
sahf
add
or
cltd
je
ja
in
popf
mov
adc
or
xchg
pop
cwtl
xchg
shrb
ror
add
scas
jg
gs
xor
aaa
xor
arpl
mov
push
shr
leave
push
xchg
jmp
loop
push
fidivrs
pop
or
sub
test
in
xlat
divb
std
pop
adcb
fwait
sub
cmpsl
aas
inc
or
inc
in
cmpsb
dec
sub
lret
je
dec
jnp
paddq
and
push
add
cltd
mov
sub
dec
repnz
scas
movsb
cli
mov
shll
fstl
test
out
mov
and
adc
mov
and
vminsd
fdivrs
jne
das
mov
in
dec
add
mov
inc
adc
inc
mov
adc
inc
arpl
repz
rcl
lods
gs
lods
imul
add
imul
repnz
scas
movsb
and
jb
or
test
rcll
pop
fdiv
cltd
jle
mov
mov
test
jb,pt
into
int3
mov
xchg
push
pop
push
dec
mov
mov
xchg
js
jne
mov
ds
fisubs
lret
mulb
mov
mov
mov
cli
mov
addr16
daa
push
dec
shrb
mov
enter
push
stos
mov
mov
popf
les
lahf
ret
pop
push
mov
and
dec
outsb
scas
fists
jg
or
or
stc
loope
mov
cmp
inc
iret
mov
mov
cltd
dec
dec
inc
bound
xchg
lcall
sub
mov
and
mov
or
out
popa
adc
imul
mov
clc
pop
ja
xor
jbe
sbb
mov
jp
jae
call
popa
lcall
or
out
adc
ds
mov
sub
adc
enter
cli
adc
lds
loop
push
ljmp
fcos
xorl
mov
inc
xor
sub
cmpsl
mov
fs
cmp
call
pop
push
cwtl
cmp
stos
cmc
fsubrl
mov
jmp
add
push
sub
adc
insb
hlt
jo
sbb
and
xchg
cmpsb
jns
fs
sub
in
xchg
movsl
ficoml
pushf
jmp
xlat
push
into
mov
xchg
or
and
insl
xor
mov
cs
jle
in
push
aam
inc
cmp
jbe
xor
push
adc
int
cmp
lods
fbld
xchg
pushf
enter
scas
call
jge
out
jge
daa
push
addr16
push
std
test
shll
das
dec
adc
add
loopne
jmp
lea
pop
inc
es
dec
mov
iret
gs
jl
and
cmc
subl
fwait
mov
in
cltd
xchg
mov
das
fisubrs
lret
push
nop
pop
shrl
xor
mov
ja
adc
adc
iret
pop
shrb
push
jl
xchg
mov
ja
push
into
adc
mov
mov
icebp
stc
push
rcrb
mov
cmp
dec
mov
dec
sti
pop
ljmp
cli
mov
jo
adc
mov
test
ja
imul
outsb
add
xor
sbb
push
fsts
inc
ds
mov
fs
mov
jns
lea
sbb
cltd
rolb
push
dec
clc
mov
or
jno
dec
roll
and
jge
cmp
lahf
insb
fisubrs
mov
mov
push
sub
jl
repz
pop
or
outsl
roll
outsl
test
sub
jl
inc
popa
aad
lahf
push
imul
aas
sbb
or
jb
rcll
pop
and
cmp
cltd
jb
idivb
scas
adc
int
and
sub
outsl
and
add
jp
mov
popl
lea
and
sub
int
jb
out
call
push
adc
sub
add
pushf
inc
jl
dec
add
movl
inc
out
fwait
push
inc
pop
pusha
push
xchg
inc
inc
sarb
push
dec
push
stos
movsl
and
or
push
pop
imul
sub
xlat
movsb
add
mov
and
cmp
call
and
mov
dec
rcrl
xor
jmp
adc
cs
inc
aam
or
pop
and
cmp
shrb
cmpsl
arpl
ds
repnz
sti
mov
fcoms
aaa
loope
jmp
ret
aaa
das
jmp
outsb
inc
mov
push
jno
jnp
pushl
and
jmp
add
sub
sub
or
or
or
mov
std
sarl
add
imul
lahf
add
or
mov
imul
sub
mov
xor
lods
or
jg
mov
in
mov
out
lahf
xlat
loope
xchg
or
ljmp
bnd
push
insl
pushf
add
mov
inc
in
adc
inc
mov
pop
pop
or
dec
dec
in
insb
mov
fiaddl
pop
add
mov
xor
mov
adc
in
js
mov
out
lds
aam
mov
jmp
add
js
in
xchg
pop
aaa
int
dec
cli
cmp
inc
ficoml
mov
xor
icebp
jns
nop
pop
fmull
add
cmc
jmp
pop
sub
pop
aaa
pop
mov
mov
jb
fmulp
and
and
push
jmp
mov
es
add
stc
sbb
insb
loope
pop
in
jle
movsb
mov
fdivrl
xlat
lret
sbb
mov
and
sub
aam
or
mov
fistl
lods
daa
cmp
add
fnsave
in
inc
into
pop
or
imul
fstl
andl
subl
inc
jbe
pop
cs
aad
mov
popa
out
dec
add
and
dec
arpl
add
inc
outsl
add
cs
sub
ret
fisubrs
xchg
mov
xchg
push
mov
push
ja
ret
stc
popa
adc
leave
js
sahf
cmpsb
test
xchg
enter
push
xchg
test
aas
push
adc
pop
je
stc
push
or
push
xchg
rclb
inc
nop
pop
outsb
dec
pop
sbb
mov
push
cmp
add
dec
mov
fmull
pop
es
push
xor
push
and
clc
pop
sub
cs
mov
arpl
adc
pusha
lea
and
ljmp
push
mov
popf
jbe
cmp
stos
cmp
aaa
push
bound
icebp
les
daa
icebp
mov
dec
call
dec
sti
xor
sti
jno
je
bound
mov
push
push
xor
adc
andl
loope
jmp
aam
cmp
pop
jmp
jne
imul
dec
mov
scas
jbe,pn
cmp
test
xor
stos
fildl
jne
fdivrl
or
mov
insb
mov
test
enter
daa
and
push
cmp
jmp
dec
push
stos
stos
popa
cmp
dec
or
xchg
dec
xchg
adc
push
jae
nop
insb
setbe
mov
shrb
into
lods
cmp
jle
inc
dec
mov
jo
or
mov
and
stc
cmp
ja
xor
and
call
outsl
inc
pop
push
lods
or
jmp
mov
fisttpl
leave
jne
push
and
aad
xchg
xchg
lahf
inc
out
nop
mov
aaa
and
mov
fstpt
mov
push
fs
xlat
popf
add
lea
lods
ja
mov
push
and
push
insb
andl
mov
mov
idivl
add
repnz
adc
nop
daa
pop
bound
push
int3
jp
or
push
and
adc
pop
mov
mov
imulb
es
fsubrp
fcomps
jmp
addr16
and
scas
iret
pusha
jl
push
xchg
in
mov
xlat
inc
sbb
mov
sub
push
and
pop
xor
jmp
dec
jecxz
gs
add
xchg
stos
in
in
test
clc
push
dec
sbb
dec
sbb
outsb
daa
mov
jl
cmp
aad
out
fs
mov
js
mov
and
add
xor
ret
mov
mov
fld1
mov
push
mov
into
sub
jge
mov
mov
jmp
push
mov
and
sbb
xor
sbb
cli
sub
outsl
mov
xchg
jg
mov
ret
mov
out
int
add
sbb
push
pop
repz
mov
mov
mov
sbb
xchg
dec
aaa
repz
pop
mov
mov
cmc
lea
rolb
jo
xor
mov
cwtl
pop
mov
roll
mov
aas
sub
jae
test
into
sub
xchg
mov
or
xchg
loope,pn
sti
xchg
aad
mov
aas
sarb
pop
mov
jle
pop
push
les
inc
iret
shll
xlat
aad
testb
mov
inc
mov
test
xor
addb
dec
pushf
inc
fdivl
adc
clc
std
and
xchg
and
js
leave
popf
pushl
gs
fisubs
int3
iret
add
jno
in
es
sti
dec
ss
cltd
mov
jmp
mov
or
fs
in
or
das
daa
jns
fldt
stc
push
cld
jmp
mov
inc
stos
and
in
repz
out
cmp
mov
inc
adc
adc
or
push
mov
rep
adc
cmp
hlt
and
add
adc
shrb
clc
jg
push
in
in
in
push
jo
out
scas
mov
cwtl
mov
cmp
lods
jge
cmpsl
add
in
aas
repz
cmc
add
jnp
jne
cmp
add
scas
inc
mov
mov
repnz
lcall
mov
imul
jle
sub
and
notl
sub
in
push
mov
jne
std
jge
movsb
movsl
fdivrl
out
jl
sahf
inc
outsb
test
test
push
inc
pop
xor
jne
ss
daa
and
shrb
hlt
adc
test
mov
fs
ljmp
adc
inc
sub
push
xchg
mov
clc
fildll
mov
lcall
popf
sbb
push
inc
adc
mov
sub
loop
xor
les
sbb
cltd
xor
fnsave
test
imul
push
pop
add
pop
pop
movsb
movl
ja
loopne
int
lods
jb
clc
lods
push
dec
int3
roll
inc
jns
xchg
insb
popf
sub
xor
stos
je
dec
mov
mov
cmp
pop
mov
mov
inc
and
rolb
add
mov
jecxz
addr16
dec
sbb
std
pop
out
aaa
in
fnstenv
andl
lods
mov
ja
sub
int
mov
repnz
adc
mov
jp
int
mov
xlat
mov
and
mov
out
repz
sub
xor
mov
ret
pop
dec
push
xchg
incl
xchg
mov
xor
adc
dec
inc
or
roll
mov
je
cmpsb
sub
or
mov
dec
jne
das
adc
lods
jb
push
insb
or
push
xor
adc
cmp
sbb
pop
sbb
mov
rclb
xor
call
or
dec
data16
fwait
in
lea
cmc
adc
lea
mov
sbb
movb
sbb
cmp
je
jbe
pop
movsb
lret
push
mov
test
adc
dec
iret
testb
iret
and
mov
mov
mov
pushf
test
aad
adc
jp
inc
xor
daa
gs
ds
pop
cmp
pop
outsl
xchg
jbe
outsl
mov
pop
mov
mov
push
loop
ret
test
sbb
mov
mov
lret
test
inc
lret
pop
and
inc
sub
mov
dec
ds
mov
enter
out
out
and
push
loopne
push
jg
aad
or
test
sbb
jle
jle
cmp
ja
fidivs
mov
ret
stos
mov
je
inc
aaa
cld
ja
or
xor
or
jne
outsl
dec
cld
mov
mov
sahf
cmc
mov
xor
enter
add
loop
sub
pop
xchg
insl
xor
or
and
xor
mov
dec
add
sti
aas
pop
jge
out
es
sbb
lret
ljmp
cmc
jp
push
test
dec
sbb
lds
mov
dec
std
outsb
inc
push
mov
nop
insb
repz
popa
jns
ret
lods
mov
xchg
xchg
adc
xor
sbbl
xchg
adc
dec
pop
dec
inc
or
out
pop
push
mov
das
jp
in
push
push
sbb
in
jp
sub
fsubrs
adc
enter
pop
mov
fstl
mov
stos
dec
fmulp
push
call
maskmovq
testl
push
dec
outsl
sub
cmp
idivb
dec
jmp
fcomps
pop
pop
outsb
insl
sarl
mov
out
cld
fildll
jg
jg
push
mov
xchg
inc
or
loope
sub
pushf
xchg
push
adc
sub
in
mov
ja
pop
adc
xchg
sbb
movsb
lcall
cld
mov
out
in
insl
sbbb
stc
sbb
dec
lcall
in
mov
jp
lret
cmpb
inc
daa
lods
xchg
jmp
mov
insb
jns
dec
scas
jmp
aaa
incl
stc
mov
in
out
dec
mov
int
aad
hlt
loopne
or
pop
rcr
inc
pop
push
rcrl
jl
add
push
push
dec
sub
jp
ss
cmp
dec
pop
in
push
leave
iret
xor
sbb
int
fwait
xchg
int3
xchg
and
mov
sub
cmp
fsubrl
in
push
mov
push
xchg
test
movsb
jbe
shrl
mov
push
mov
or
mov
cmc
mov
in
loop
movsl
xchg
mov
cwtl
dec
xor
sbb
sub
push
lahf
data16
and
mov
shrb
mov
fstps
dec
imulw
lahf
adc
adc
inc
push
and
popf
sub
push
cmpsl
ds
aas
and
nop
and
mov
cld
push
or
lock
fdivs
packssdw
sahf
int3
dec
ret
shr
and
mov
add
clc
roll
int3
jge
inc
jnp
adc
and
xchg
les
insl
stc
pusha
xor
idivl
aaa
stos
add
xor
dec
lods
stc
sbb
mov
xchg
notl
inc
popa
lcall
sbb
mov
int3
inc
sbb
insb
aad
clc
jne
fldl
or
faddl
das
outsl
mov
add
pop
mov
jne
inc
stos
int3
push
rcrl
idiv
push
leave
into
push
pop
pop
sbb
ljmp
jge
sbb
out
into
xchg
lret
mov
jo
mov
jmp
imul
inc
in
shl
ja
cmp
mov
push
add
cmpsl
and
sub
push
out
push
aas
outsb
inc
arpl
ja
loopne
sahf
mov
cmpb
movsb
inc
pop
mov
out
xchg
dec
and
rclb
xor
dec
test
int3
jle
dec
loop
shlb
leave
test
loopne
xlat
hlt
clc
pop
test
dec
xor
push
stc
push
cmc
xchg
fs
push
call
pushf
pop
xchg
aaa
bound
pop
add
dec
pop
negb
add
mov
repz
shll
xor
xchg
jo
xchg
or
add
aaa
icebp
ret
push
daa
mov
pusha
das
mov
mov
hlt
mov
stc
hlt
jl
push
rol
int3
outsb
fidivl
pop
imulb
pop
mov
xchg
pushf
lret
pop
mov
call
les
or
mov
stos
push
ret
andb
lds
mov
lea
xchg
or
mov
lock
ds
adc
dec
push
push
addr16
loopne
mov
test
sbb
and
cmp
push
lock
bound
jl
push
push
outsl
fwait
inc
cmc
mov
jae
stc
pop
lock
je
out
imul
idivl
rorb
testl
sub
fisttpll
ficoms
ljmp
adc
out
cmpsb
or
incb
hlt
ror
mov
test
sub
aas
mov
add
or
mov
dec
out
mov
adc
mov
lcall
scas
into
sbb
clc
push
xchg
in
cmp
add
std
sbb
sub
jmp
or
mov
jno
xor
adc
sbb
sub
push
mov
adc
es
icebp
test
dec
jg
mov
adc
int3
mov
insb
iret
repnz
sub
es
mov
xchg
and
fwait
or
mov
add
pop
repnz
enter
mov
imul
ja
xor
push
mov
test
mov
loop
stos
push
inc
xor
loop
lods
inc
lcall
and
dec
xlat
lods
and
imul
fimuls
outsl
push
dec
xor
out
fs
sub
sti
repz
mov
pop
xor
mov
xorb
cmp
mov
mov
imul
push
pop
cmp
lret
daa
dec
inc
loope
dec
lret
popa
push
fldcw
test
xchg
loope
mov
sbb
sub
and
fs
call
sbb
or
std
jns
mov
imul
andb
sti
mov
movsl
das
jg
iret
test
dec
or
test
mov
push
enter
das
mov
mov
sti
repnz
scas
rorb
in
adc
push
popa
mov
adcb
push
mov
inc
and
sub
out
mov
xorl
out
jmp
ja
xor
in
or
insb
rcr
test
dec
out
mov
xchg
lock
xchg
dec
test
bound
mov
or
cmp
xlat
fwait
stos
std
add
mov
aas
dec
or
imul
or
mov
xchg
ret
fsts
jmp
cmp
jns
cmp
jle
ret
fbstp
and
fsubs
and
pop
nop
push
mov
cmpsl
out
aam
test
push
mov
popa
and
jle
mov
sbb
icebp
inc
stos
clc
add
sub
setl
and
sahf
sub
cmp
push
dec
addr16
lea
std
mov
sbbl
dec
popa
dec
cmpsb
push
cltd
mov
pop
pusha
scas
gs
xor
cmp
sub
addr16
sbb
xchg
jmp
jae
ljmp
cmp
inc
push
xor
popf
mov
daa
dec
inc
lock
aaa
lea
mov
dec
and
gs
fdivrp
shrl
adc
cmp
xchg
movsl
fnstcw
and
setb
rcrb
sti
call
pusha
aam
pop
xchg
in
pop
sti
jns
adc
add
cmpl
jb
ret
neg
repnz
mov
jb
js
int3
sub
dec
in
and
xor
test
out
mov
xchg
cmc
add
sub
out
xorb
mov
mov
and
andl
inc
xor
inc
int3
xchg
lret
adc
pop
test
sarb
jecxz
pop
sub
rol
int
pushf
pop
testl
inc
dec
push
or
jp
adc
and
clc
int
jnp
push
ret
fdivs
sbb
das
cmp
ret
xor
sti
int
gs
ljmp
pop
in
pusha
es
scas
dec
arpl
in
outsl
pop
mov
jle
rclb
imul
push
dec
xchg
pop
int
adc
sbb
cmp
test
jp
loop
xor
cmpsl
enter
cmp
lods
jae
daa
testb
push
std
jne
popf
or
jge
mov
icebp
fcmovnbe
inc
test
pop
aam
mov
mov
movsl
inc
xor
pop
sbb
push
xor
xor
xor
xor
out
popa
or
xchg
repnz
mov
lock
ret
lret
mov
pop
xor
push
dec
arpl
sahf
jo
clc
lods
xchg
mov
pop
imul
idivl
jb
nop
repnz
xor
push
adc
and
sti
inc
dec
loopne
in
iret
fnstenv
jae
aaa
daa
adc
xchg
push
jae
fwait
out
out
ficoml
inc
loopne
and
sub
cmp
xorb
lcall
or
adcb
cmpsb
sbb
mov
jae
enter
rorb
je
pushf
add
xchg
sub
dec
out
in
int3
jno
stc
imul
cltd
fstpl
imul
sbb
clc
and
dec
xchg
aam
cmc
jae
adc
in
xor
xor
inc
xor
gs
xchg
test
test
movsb
xor
sub
scas
sbb
push
inc
std
inc
jo
loopne
mov
sub
and
add
push
jb
lea
jmp
and
cmp
jmp
and
idivb
imul
aam
inc
adc
mov
fstps
bound
inc
mov
inc
pop
push
adc
orb
sarl
push
mov
mov
daa
test
jecxz
es
push
mov
or
je
mov
dec
hlt
lea
cmp
pop
jno
sub
addl
adc
mov
lahf
ja
xchg
sarl
mov
loop
xchg
inc
push
sub
cmpsl
sbb
adc
pop
mov
imul
pop
xor
cmpsl
mov
sbb
mov
add
into
sub
imul
stos
jo
add
cmp
fwait
jne
nop
push
adc
xor
ret
test
jg
or
dec
lea
ds
jl
xor
push
ss
sub
daa
add
xor
jp
das
insb
cmp
mov
hlt
sti
add
scas
pop
lea
inc
or
pop
lret
jo
adc
xor
add
jno
mov
jbe
out
sub
lods
xor
stos
xchg
pop
dec
in
and
jle
stos
sar
pop
lahf
adc
sub
dec
mov
mov
loop
daa
push
add
add
xor
jns
mov
mov
lret
mov
mov
or
mov
xchg
jp
dec
nop
stos
jno
scas
fisubrl
mov
or
dec
in
and
jg
mov
push
jbe
jp
sbb
xor
out
into
loop
scas
daa
imull
jp
jg
push
push
jb
sub
rorb
pop
fiadds
mov
jg
lret
mov
add
fwait
sbb
or
fcomi
mov
pop
sub
mov
icebp
sti
pop
pop
push
nop
fidivs
mov
movsb
pop
add
mov
lahf
dec
pop
shlb
mov
mov
jmp
test
pop
in
adc
sti
fmul
xor
push
decb
into
cld
sub
push
and
sbb
mov
or
xor
sub
nop
test
std
arpl
aad
or
test
and
stos
bound
add
pushf
add
dec
fildl
jbe
push
push
xor
jmp
sub
pop
leave
xchg
fnstcw
fidivl
pusha
arpl
push
mov
xchg
cmp
dec
loop
je
sub
aam
xor
xor
fidivl
fstps
adc
fnstsw
mov
jmp
xchg
cwtl
popa
repz
mov
in
ljmp
ss
jge
sub
imul
lret
into
sub
out
cmpsb
pop
popa
test
lret
adc
scas
cmp
mov
imul
cmp
jge
clc
lock
leave
mov
gs
mov
push
pop
test
inc
sti
fcoms
out
lods
outsl
mov
or
mov
cltd
dec
cmp
outsb
roll
out
dec
rolb
mov
dec
inc
xchg
adc
mov
cmpsb
xchg
push
or
jmp
pop
mov
test
xchg
pop
xor
lds
je
xor
sub
mov
pop
xchg
fidivl
xor
js
and
and
push
outsl
xchg
push
es
mov
inc
in
mov
cmp
mov
mov
mov
pop
loope
xchg
faddl
jo
sbb
sbbb
out
push
jnp
cltd
pop
sub
in
jle
enter
sbb
icebp
push
aas
mov
xchg
arpl
sbb
sub
pusha
and
adc
data16
inc
sbb
test
pop
bound
xlat
dec
test
sub
std
cwtl
fnstcw
cmp
subb
fs
xor
insl
push
fsubs
jecxz
jge
dec
pop
dec
push
loopne
jmp
loop
or
ret
dec
push
xor
xlat
sarb
inc
cli
inc
ja
push
test
sbb
or
jle
xchg
cwtl
test
adc
push
jecxz
es
pop
or
lahf
daa
lock
mov
xlat
add
add
pop
mov
pop
sbb
adc
fidivl
mov
xor
jmp
mov
mov
mov
fldln2
mov
stos
insb
xchg
imul
cmp
addr16
xor
je
aad
lcall
ds
push
into
movsb
push
imul
iret
jo
fdivrl
jmp
cmp
cld
imul
inc
mov
push
push
xchg
jecxz
notb
or
inc
dec
cs
push
pop
jge
repz
xor
adc
mov
and
movsl
insb
add
jnp
aad
pushf
fnstenv
add
xor
ret
and
cli
cltd
int3
out
rclb
int3
and
in
fs
cmp
inc
rcrl
sti
xor
xchg
iret
in
jg
lea
add
mov
aaa
pop
lods
mull
outsl
fsqrt
cmpsb
shlb
push
adc
imul
lods
pusha
adc
xchg
mov
rorb
cs
pushw
divb
ret
push
push
pop
inc
outsb
cli
push
out
and
out
jge
in
imul
sbb
adc
aad
cld
pop
push
xchg
or
xlat
jl
out
in
inc
xchg
mov
call
les
test
loop
jl
push
xchg
sub
mov
out
pop
inc
insl
xchg
sub
scas
into
rep
jns
lods
aaa
xchg
xor
xchg
mov
aam
cld
out
insb
push
inc
inc
scas
adc
pop
fs
jecxz
xchg
push
push
dec
add
sub
jmp
mov
mov
pop
and
push
icebp
lock
loop
or
sub
lods
mov
cli
adc
and
cmp
adc
push
pop
jno
into
into
movsb
dec
jae
arpl
rolb
test
adc
dec
fwait
ja
imul
or
xchg
sub
jae
loopne
jne
imul
std
shll
ja
add
or
pusha
push
fdivp
cmpb
dec
jecxz
scas
addl
dec
lret
xchg
shrb
xor
push
in
pop
out
push
in
pushf
and
imul
popf
xchg
and
fcomp
lods
mov
loope
testl
sbb
fcomps
push
mov
idivb
sahf
lea
xchg
sub
ja
mov
jae
je
in
leave
mov
sti
push
loope
test
inc
loopne
and
call
dec
icebp
pop
jl
mov
dec
imul
mov
in
ljmp
jge
dec
pop
cld
stos
push
push
daa
shrb
xor
sbb
or
movsb
xor
outsl
sub
out
sbb
shlb
adc
repnz
pop
ljmp
mov
mov
jge
rclb
pop
adc
test
adc
sti
xor
cmp
mov
jp
sbb
xchg
add
pushf
div
jmp
ja
loope
insb
fisttpll
sbb
xlat
mov
adc
push
test
jne
sbb
in
and
in
add
sub
dec
or
cmp
xchg
sbb
xorb
popf
mov
lret
inc
inc
daa
fistps
gs
testb
add
pusha
push
leave
call
lds
jns
lret
aaa
ffreep
movl
movsb
popa
out
sub
out
jl
stc
add
lock
cmp
les
movsb
out
push
and
leave
sbb
sub
and
call
fcmovu
jmp
lahf
inc
push
adc
or
xchg
movsl
jns
call
js
pop
mov
push
mov
cwtl
lock
mov
aas
mov
leave
cmp
jmp
adc
jne
std
cmp
jae
sub
ret
fnstsw
xor
ja
test
lret
dec
cmp
cmp
ljmp
pop
iret
dec
jmp
inc
push
add
bound
mov
jmp
lahf
mov
sbb
cmp
icebp
loop
cmc
pop
lret
push
subl
push
sbb
in
xorb
decl
scas
rorb
xchg
les
fs
xor
imul
cmp
push
and
mov
sbb
rcrl
dec
xchg
or
fimull
push
or
push
jno
fcmovbe
xchg
xchg
mov
dec
mov
imul
iret
mov
inc
pushf
dec
fmuls
and
pop
popf
push
ja
or
pop
inc
ret
ja
cmp
mov
ror
and
inc
adc
dec
mov
imul
je
dec
outsb
xchg
mov
es
xor
lock
outsl
flds
aad
mov
push
aam
lahf
test
icebp
dec
call
rcll
mov
mov
sahf
jg
xchg
pop
in
stc
js
inc
push
xchg
pop
popa
movsl
add
insl
sahf
cmp
in
add
out
lret
addr16
fldl
adc
inc
movsb
pop
mov
mov
lds
testb
cli
or
push
ret
gs
pushf
xchg
inc
popa
call
or
or
movsb
js
sahf
loopne
jmp
cmp
sahf
js
mov
outsb
xor
mov
mov
scas
push
iret
stos
mov
and
cmpsl
pop
andl
sarl
xor
add
push
pop
aaa
dec
aam
gs
push
sbb
ljmp
push
add
mov
popa
and
je
mov
imul
push
cltd
adc
adc
test
jg
dec
cmpsl
and
cmpsl
jmp
pop
jle
js
mov
sbb
xor
lcall
inc
sahf
dec
gs
shrb
cli
mov
or
fsubl
in
stos
aas
push
cmp
in
adc
jl
jne
pop
xor
mov
in
fnsave
mov
adc
mov
in
mov
mov
adcl
sbb
pop
nop
fistpl
xor
mov
addl
mov
fcoml
popf
cmpsb
bound
adc
adc
inc
mov
lea
mov
push
xor
add
decb
repz
dec
add
fdivrs
and
pop
cmp
jp
sbb
jge
sbb
mov
adc
andps
xor
jg
push
int
or
sti
sbb
jle
scas
adcl
mov
xchg
add
push
fsubs
and
push
push
sbb
add
pop
imul
cmp
jle
aad
jae
int3
add
xor
cmp
sbb
outsl
stc
mov
fistl
cmpsl
cs
jmp
mov
pop
int3
js
sub
push
lahf
testl
ds
push
add
mov
scas
cwtl
aas
cmp
les
xchg
shrb
mov
xor
and
mov
imul
ret
into
inc
nop
xor
dec
sub
inc
iret
cmp
cmpsb
fstl
fsts
push
dec
movsl
jg
xchg
stc
mov
xchg
inc
push
xor
adc
lahf
repz
or
pop
dec
cs
lea
sarb
and
dec
stos
pop
nop
adc
cmpsb
mov
or
sub
in
cmc
pusha
jge
outsl
xlat
jg
jae
out
arpl
aas
adc
fnsave
mov
mov
mov
mov
out
out
shl
xor
cmp
xor
mov
jg
outsl
sub
push
or
xchg
fwait
sub
dec
js
aas
mov
test
mov
nop
cmpsb
mov
rolb
daa
lahf
xchg
rcr
popa
lock
push
cmp
loopne
mov
out
cmp
add
fisubrl
xor
add
adc
mov
mov
and
insl
iret
ror
sub
mov
mov
rcrl
dec
pop
or
and
cltd
stc
mov
add
incb
fbld
jae
inc
mov
add
push
dec
xor
imul
xchg
aad
das
adc
movsl
icebp
mov
dec
test
inc
insb
dec
xchg
xorb
in
out
test
sbb
gs
mov
sti
inc
jle
icebp
cmp
fdivp
outsl
cli
jg
movsb
cmp
jns
icebp
sub
in
adc
bnd
jae
xchg
adc
shlb
push
iret
jge
les
mov
and
adc
nop
pushf
mov
les
jnp
in
shll
adc
push
push
test
mov
sub
popa
shr
add
mov
cmp
popa
pop
pop
pop
cmpsb
imul
popf
clc
push
lret
push
cmp
inc
pop
sbb
cmp
lret
addr16
fldcw
sub
lahf
call
js
leave
inc
jbe
xchg
jnp
shrb
scas
jp
and
adc
mov
iret
pop
nop
mov
adc
adc
xchg
out
inc
loope
int3
lahf
clc
adc
ret
dec
xor
cmp
scas
xchg
xchg
out
sahf
mov
lahf
mov
dec
inc
mov
pushf
negb
rcr
cmpsl
cmp
pop
and
sub
movsb
push
imul
nop
inc
popa
inc
jl
sarl
adc
outsb
fsubl
jecxz
cmp
outsl
in
gs
pop
test
pop
mov
lret
lret
scas
les
loope
ret
ljmp
out
ret
outsl
pop
mov
ss
dec
push
jo
inc
outsl
int
ss
jnp
insb
popa
push
mov
data16
fnstenv
ds
mov
or
or
xlat
cmp
cmc
fdivl
icebp
push
push
scas
push
mov
repz
call
cmp
jae
adc
hlt
push
mov
jno
fstpt
in
push
jae
jbe
lods
mov
les
inc
stos
test
and
sub
inc
pop
ret
inc
lods
jp
pop
and
rorl
pop
and
cmp
mov
pop
sub
jno
sub
and
mov
and
vpcomd
xlat
inc
push
mov
mov
push
inc
cs
fadds
fdivrs
arpl
mov
mov
fwait
loop
sub
lea
cmp
sbb
imul
xchg
icebp
ja
sub
and
jnp
orl
ljmp
push
jmp
dec
mov
daa
xchg
test
jge
mov
fimull
ficomps
or
lock
fbstp
lods
push
aad
sub
shll
xor
pop
dec
ret
pop
adc
lret
jns
call
mov
inc
mov
dec
add
inc
arpl
mov
leave
popl
notl
push
add
fsubp
fldenv
cmp
ss
jne
add
sub
in
and
mov
in
or
stos
ret
jae
mul
jno
sbb
test
mov
push
repz
loope
popf
mov
push
shll
pop
icebp
scas
pop
test
or
sub
loop
cli
adc
jmp
setbe
pop
mov
or
popa
inc
sahf
inc
fwait
sbb
in
cs
push
xchg
xlat
int
bound
push
inc
pop
xor
jne
dec
sti
insl
dec
dec
sub
ja
push
sub
or
cmp
stos
lods
xor
sbb
nop
imul
lea
adc
mov
icebp
xchg
nop
add
jecxz
out
lds
sub
std
jbe
ret
testl
shrb
mov
push
sbb
push
xchg
ret
sub
and
lea
int
loopne
test
lahf
pop
sbb
jbe
negl
std
shrl
sub
cmpsb
mov
loope
jg
jl
adc
jmp
cmpsl
mov
scas
ret
cmp
stos
inc
test
or
clc
cmp
lret
or
out
cmpsl
loope
dec
jnp
adcb
andb
rorl
push
aad
pop
push
dec
loop
xchg
push
cmp
mov
lcall
pop
stc
adc
pop
add
jge
inc
fwait
xor
imul
mov
scas
adc
mov
xchg
clc
jns
sbb
inc
fldcw
mov
lret
adc
scas
fs
pop
pop
xchg
xchg
shll
repnz
mov
push
dec
pop
ss
adc
sbb
into
int3
shll
gs
int
cmp
push
outsl
jb
jb
or
xor
sti
arpl
sub
ss
pop
xor
dec
mov
and
add
enter
xchg
int3
loopne
cmp
mov
pop
adc
rorb
loop
sub
mov
lods
sub
jecxz
sbb
lret
push
bnd
shll
pushf
xor
dec
aam
sbb
adc
addr16
icebp
aam
push
pop
mov
push
jmp
shll
xchg
push
push
sbbl
add
add
dec
dec
add
fcomi
cmpsl
sbb
and
aas
insl
push
ss
jp
push
in
test
insb
leave
jb
inc
insl
pop
in
in
test
icebp
cmpsl
mov
sti
dec
jge
dec
xchg
add
fwait
out
and
inc
sbb
push
xchg
mov
andb
xchg
shrb
enter
cmpsb
stos
mov
dec
rclb
adc
ljmp
pop
jbe
inc
mov
lea
fsubs
lock
pop
into
arpl
jnp
icebp
sbb
cmp
cmc
popf
xchg
shll
push
lahf
pop
shrb
jp
pmullw
dec
mov
dec
pop
sbb
ffreep
dec
mov
push
push
push
out
addr16
aas
pop
jno
cmp
test
xor
js
icebp
js
jns
jno
mov
mov
add
out
and
cmp
pop
out
xor
push
ret
popf
out
mov
stc
pop
popa
lahf
gs
lock
imul
cmp
loopne
cmp
js
sbb
xchg
gs
xor
popf
mov
outsl
and
pushf
jecxz
cmpsb
bound
cmp
mov
sbb
xchg
jo
add
mov
inc
into
leave
lds
out
adc
jmp
xor
jbe
xchg
sub
mov
pusha
sub
ret
ljmp
xor
inc
mov
cmp
xor
pop
adcb
xchg
xor
in
stos
mull
cmp
shrb
cmp
test
push
cmp
dec
adc
and
push
dec
outsb
outsb
pop
inc
adc
mov
jmp
pushf
out
clc
sbb
inc
sahf
in
fwait
outsl
fcompl
xchg
iret
cmp
mov
jle
bound
jl
movsl
xchg
pop
xor
insb
andb
das
test
cmp
push
pushf
sbb
mov
push
or
test
push
je
fisubrs
in
test
cwtl
xlat
sbb
mull
or
cmp
sbb
xor
or
bound
push
dec
xchg
fwait
or
scas
mov
mov
ljmp
push
sbb
enter
inc
pop
ss
push
rclb
xchg
adc
out
xor
hlt
inc
ss
jp
mov
jp
into
dec
mov
sarb
outsb
sub
dec
out
ds
insl
aaa
aas
push
neg
mov
sub
jmp
in
xchg
fidivrs
stos
lret
mov
pusha
mov
mov
bound
jl
out
sbb
mov
jl
neg
inc
lcall
pusha
pop
js
dec
sbb
xor
in
das
push
out
aaa
jle
push
inc
fwait
mov
fs
inc
adc
push
into
pop
lret
imul
add
xor
jb
out
cs
gs
xchg
cmp
out
lahf
lock
pop
push
out
or
test
test
iret
push
mov
dec
sti
inc
push
pop
lahf
mov
mov
pop
and
lret
sub
jnp
icebp
push
les
test
sub
mov
in
ljmp
dec
stos
xchg
test
setbe
sub
mov
add
ret
jne
lahf
pop
jle
loopne
bound
out
scas
je
mov
adcl
enter
push
int
lret
sbb
adc
shrb
ret
sbb
jb
jge
jns
add
pop
int
push
xchg
insl
call
scas
push
mov
loop
ret
dec
inc
jns
adc
xor
int
adcb
sub
push
lock
mov
sub
sub
cmpsl
ds
cwtl
and
fisubrs
and
sahf
les
outsl
stc
in
xchg
add
adc
aad
or
add
cmpsl
or
push
repnz
adc
and
cmp
test
push
subl
lds
fcmovne
js
sti
add
notb
xchg
jbe
pop
icebp
inc
addl
xchg
ret
test
data16
clc
faddl
and
mov
call
or
xchg
fs
test
jbe
adc
test
ret
dec
cmp
iret
and
sub
sub
sbb
lret
mov
arpl
daa
pop
mov
xchg
push
cltd
jge
dec
lds
sbb
jmp
stos
es
xchg
add
push
pusha
push
jae
jo
jl
or
add
push
mov
add
mov
stc
cld
jbe
out
mov
pop
mov
pop
mov
int
mov
mov
jmp
arpl
jmp
sbb
lods
shl
imul
jle
in
ds
loop
or
popa
cmp
dec
cmc
mov
adc
push
push
jne
xor
sahf
adc
enter
cwtl
addl
cmp
leave
test
arpl
add
int3
jne
cmpsb
add
sahf
pop
mov
test
popa
mov
mov
stc
in
arpl
add
cltd
add
loope
mov
popf
fists
mov
cli
jmp
pop
lea
mov
add
or
pop
mov
popf
ret
pop
pop
cmpsl
mov
shl
inc
adc
adc
gs
ljmp
aas
xor
mov
sbb
push
cmp
fdivrs
loop
dec
insb
push
mov
out
jo
pusha
or
dec
or
adc
push
mov
lea
pushf
pop
shll
push
cltd
and
add
ret
xor
dec
jl
mov
shlb
dec
cwtl
mov
pop
inc
loopne
sub
cwtl
je
dec
mov
clc
mov
jmp
in
mov
pop
push
loop
add
mov
addl
outsl
imul
lahf
xor
rol
sahf
xchg
or
jno
cmp
xor
shrl
sahf
aas
sub
mov
in
push
mov
xlat
aas
jnp
mov
das
movsb
fdivrs
jmp
lods
rcll
jns
pop
mov
xorl
enter
outsb
movsl
pop
jae
ficomps
pop
sti
xlat
jp
mov
hlt
imul
jbe
cmp
pop
add
lods
mov
sti
inc
in
lods
cs
adc
icebp
push
imul
pop
lret
lods
es
push
leave
psubsw
and
xor
in
add
adc
jmp
mov
pop
xchg
loopne
cmp
jnp
insb
lret
jne
scas
xchg
pop
and
sub
xor
and
out
clc
out
jle
notl
aas
aad
ret
adc
test
mov
stos
mov
rclb
cmp
out
add
fstps
cld
cmp
xor
pop
fld
movl
cmp
fldt
push
rcll
and
movsb
mov
call
cltd
sub
sub
xchg
lock
in
cmp
lcall
jge
addr16
push
inc
scas
mov
aas
push
pop
imul
mov
mov
stos
and
movsl
sar
mov
imul
notl
push
ret
arpl
dec
xchg
mov
sahf
imul
or
inc
outsl
mov
sbb
into
add
std
fnstcw
cli
test
les
push
es
adc
ds
aas
push
push
shlb
add
aaa
sub
enter
out
das
fildl
xchg
dec
pushf
cmc
stos
add
popf
shll
leave
mov
sbbb
call
mov
imul
or
jno
lahf
fimull
aas
cmpsl
mov
adc
sbb
pop
or
jp
iret
push
push
cld
rol
mov
das
mov
fimuls
xchg
and
push
xchg
andl
into
xchg
fstl
mov
inc
lods
xor
ljmp
add
xchg
or
mov
stos
adc
mov
out
sub
push
add
aam
jg
leave
xor
cmpsl
inc
mov
mov
xor
sbb
cmpsb
sub
aas
and
sbb
inc
je
jg
push
imul
push
mov
into
and
js
shr
scas
mov
inc
cmp
or
push
shl
rcl
xor
lret
or
and
movsl
stos
stos
insb
nop
or
sbb
xorl
out
inc
adc
outsl
ror
cmp
push
rcll
hlt
ret
mov
sbb
push
sbbb
popf
mov
pop
stos
lock
nop
rcrl
cli
push
int3
sub
and
addr16
xor
pop
push
loopne
sti
inc
mov
pop
xchg
mov
inc
mov
inc
iret
shlb
mov
pop
cli
and
imull
xor
ret
rclb
fldt
sarl
icebp
sub
pop
cs
or
sbb
pop
xchg
adc
adc
popa
iret
inc
cmpsb
out
fcoml
pop
add
mov
pop
inc
adc
notl
inc
popa
outsb
loop
sbb
mov
mov
add
stc
fxch
jecxz
loop
xchg
je
pop
imul
dec
jae
arpl
push
dec
pop
cmp
shll
ficompl
negb
jne
push
adc
adc
dec
int
aad
je
pop
lret
imul
icebp
adc
and
rorb
gs
cli
stos
test
rcrb
js
sub
dec
fwait
cmp
les
mov
iret
scas
fimuls
mov
sub
cmp
imul
roll
leave
cmp
pop
test
sarb
outsl
pop
xor
call
jns
jle
icebp
push
dec
jb
or
and
mov
cltd
jl
ss
loop
dec
lods
lret
xchg
adc
sbbb
xchg
cld
sbb
stos
scas
adc
cmp
or
adc
mov
cwtl
lret
popa
inc
and
lahf
jmp
aad
test
adc
jns
mov
std
jmp
fs
arpl
sub
mov
mov
ds
outsb
je
call
and
mov
aad
pop
dec
jb
adc
jb
mov
inc
lret
dec
shlb
es
das
jp
lds
in
xor
cmp
js
loop
sbb
xchg
dec
lahf
js
lahf
icebp
push
xchg
popa
mov
js
mov
inc
add
outsl
sbb
jnp
mov
mov
fistpll
mov
cmpsl
jmp
mov
mov
mov
popf
mov
jl
out
fldcw
pusha
ja
test
cmpsb
dec
xor
js
mov
test
sub
sub
mov
imul
sbb
mov
adc
xchg
mov
push
xchg
adc
dec
pop
fcmovu
pop
cmp
jae
mov
mov
dec
sti
ret
pop
sbb
cmpsb
sbb
scas
mov
imul
push
ja
sub
faddl
xchg
dec
or
scas
scas
cld
xor
sbb
roll
fidivs
fiadds
sbb
or
add
fsubrl
add
fwait
jecxz
int
or
imul
test
movsl
pop
dec
jmp
add
jl
fcompl
nop
movsl
push
jmp
inc
jae
out
outsb
repz
es
std
or
cltd
lock
bound
in
test
in
mov
inc
sbb
pushf
aas
push
pop
ret
lods
imul
cmpb
popf
pop
cwtl
lcall
jne
mov
jno
jnp
movsb
leave
push
mov
cmpsl
test
int3
enter
ret
sti
xchg
loope
fnstcw
insb
sbb
mov
insb
insb
test
inc
aam
fs
negl
jne
out
inc
sbbb
sub
xchg
jg
xor
iret
and
mov
sti
ret
shrb
inc
inc
adc
rcr
fwait
icebp
out
adcb
add
xor
cmp
aad
jl
ret
aad
loopne
inc
sub
and
js
div
jns
bound
pop
fldl
xchg
and
into
or
jno
outsb
add
shll
loop
xchg
movsl
dec
jle
dec
or
cli
daa
out
push
sbb
std
jo
mov
test
cli
xlat
jg
or
or
xor
rcr
inc
fildl
popl
stc
fcomi
sbb
pusha
cmp
jno
fmulp
add
and
push
mov
mov
repz
int
pop
xor
lods
insl
testb
insl
insl
pop
insl
lock
jnp
subl
adc
jnp
lcall
imul
jmp
or
aaa
pop
sub
add
and
lds
push
mov
dec
ret
ds
push
mov
in
add
movsb
mov
mov
or
xchg
popa
rclb
in
test
cmp
addl
inc
gs
cmp
adc
les
es
or
pop
xor
in
mov
sub
das
adc
sub
and
dec
mov
shll
fstps
xchg
sbb
ljmp
jle
inc
dec
pop
dec
sbbl
mov
pop
mov
push
mov
cmp
pop
scas
sbb
ret
icebp
lock
hlt
test
mov
scas
fmuls
pop
and
mov
jne
and
out
repnz
in
xchg
ss
stos
rorb
shll
adc
cwtl
push
insb
and
sbbb
mov
add
push
mov
inc
ja
rorl
push
xchg
xor
repnz
fabs
fists
inc
out
daa
outsl
in
je
mov
jnp
andb
js
fs
call
addr16
out
dec
mov
ljmp
mov
insb
es
push
leave
cmp
mov
add
in
cmpsl
xor
ret
fisubrl
push
mov
push
adc
test
mov
inc
xor
push
sbb
daa
cmp
inc
pop
add
mov
inc
js
mov
pop
xchg
out
fldl
mov
or
xchg
push
lahf
add
add
pop
mov
or
dec
mov
aaa
sub
and
mov
dec
int3
jnp
adc
inc
cmpsb
fiaddl
ss
out
subb
mov
test
mov
cmp
sub
mov
mov
mov
or
lods
fwait
sbb
packssdw
rcll
stos
addl
xchg
imul
push
pusha
cli
sub
mov
and
sub
pushf
or
insb
das
in
ret
movsl
adc
xlat
lret
mov
mov
mov
xor
or
push
xchg
inc
mov
lods
iret
or
clc
jo
pop
call
stos
lock
push
pop
lds
mov
push
dec
or
in
lcall
inc
push
mov
push
dec
dec
into
push
mov
fcoms
mov
lods
push
fnsave
stc
mov
loopne
inc
inc
clc
shl
push
sub
ret
add
mov
push
cld
fists
out
add
cmpsb
mov
aas
dec
and
bnd
cmove
scas
test
das
adc
adc
idivb
fldenv
movsl
clc
push
in
icebp
cli
icebp
or
iret
xchg
xor
pop
push
pop
sub
cmp
mov
cltd
jg
shrb
fldt
ret
jae
je
aam
push
addb
inc
push
and
leave
out
int
enter
push
ss
mov
arpl
psubb
mov
daa
jle
adc
mov
adc
aad
cmp
push
jo
lods
inc
adc
mov
cmp
dec
adcb
ret
sbb
mov
sub
fwait
or
stos
iret
mov
inc
mov
popa
or
les
lahf
negl
out
mov
test
fisttpl
jmp
push
gs
or
jns
and
inc
push
jae
jmp
pusha
push
adc
mov
mov
jmp
jl
div
cmp
and
das
stos
pushf
lret
xchg
nop
xchg
in
push
mov
or
ret
push
sbb
icebp
aaa
sbbl
stc
cli
cmp
adc
add
cwtl
test
lret
mov
mov
xchg
rcl
cmp
into
cmc
xchg
sub
lea
mov
mov
mov
stos
inc
into
dec
hlt
nop
jmp
jmp
ds
filds
pop
leave
push
movsl
jns
dec
aad
ret
adc
shrl
iret
xlat
or
popa
push
dec
mov
cmp
daa
or
les
ds
lods
test
cld
dec
loop
loope
xor
call
popa
mov
push
add
sbb
pop
iret
insb
inc
imul
je
stos
mov
push
pop
and
push
adc
push
pop
frstor
cmp
fidivrs
clc
push
mov
je
test
inc
test
insl
popa
pop
jne
cs
mov
and
pop
lock
xor
clc
add
lcall
jbe
adc
out
and
pusha
leave
loop
mov
in
jle
test
mov
mov
sub
pop
sub
jno
or
add
or
cli
sub
add
pop
xchg
xchg
jecxz
mov
or
fisubrs
dec
in
lret
add
mov
sub
movsl
sbb
rcr
xchg
sbb
gs
lahf
cmp
or
adc
mov
push
cltd
fisubl
jge
addr16
in
mov
lea
repnz
mov
xor
mov
add
sbb
mov
xchg
aaa
jnp
jl
out
mov
jbe
stc
cli
in
mov
xchg
add
mov
push
dec
data16
inc
out
ds
mov
inc
cmc
pop
sub
stos
roll
or
je
stos
mov
popf
pushf
lcall
sub
repnz
jae
sbb
or
mov
mov
notb
test
jae
unpcklps
push
ds
mov
aas
and
dec
mov
mov
mov
mov
jb
add
pushf
push
mov
clc
orb
fs
mov
popf
jae
xchg
outsl
sub
mov
mov
cwtl
sbb
pop
mov
jmp
adc
push
jo
push
push
out
outsb
jo
jmp
leave
movsb
fs
fsub
dec
mov
mov
push
lods
push
insl
xor
popa
dec
dec
jg
and
aaa
lcall
lcall
ss
ja
mov
jo
sbb
movsl
loope
dec
insl
sahf
xchg
mov
movsl
stc
push
adc
in
in
or
stc
rol
cmp
push
fadds
dec
repnz
ja
dec
lcall
cli
adc
push
aaa
xchg
outsl
sbbb
insb
subb
mov
and
popa
ret
sub
mov
popa
adc
sub
notl
rolb
jl
repnz
insl
add
mov
sbbb
or
bnd
lcall
in
jbe
outsl
dec
sbb
cs
outsb
repnz
inc
dec
and
sbb
mov
ja
fsubl
dec
jne
sub
ja
add
nop
dec
jbe
fadds
dec
aas
fisttpll
lret
aas
and
inc
bound
int3
adc
dec
sahf
mov
fidivl
stos
or
mov
mov
movsb
repnz
jmp
iret
add
outsl
sub
out
sub
mov
mov
inc
test
addb
adc
dec
ror
inc
dec
mov
xchg
dec
rcrb
sbb
add
pop
push
inc
cmp
sbb
or
sub
pop
jp
lea
pop
shrb
imul
iret
pop
xchg
push
imul
out
stc
mov
cltd
mov
mov
addr16
dec
out
lea
int
xchg
mov
cli
mov
imul
aam
loop
ret
aas
push
adc
xor
arpl
arpl
pop
jne
loop
jbe
es
arpl
and
cwtl
cmp
xchg
inc
in
and
fisubs
cltd
dec
nop
fwait
mov
cs
loopne
mov
repz
jae
es
dec
jb
mov
pop
aaa
leave
jno
and
add
cmc
mov
dec
inc
ja
mov
sbb
subl
push
cmp
jp
mov
jae
xchg
dec
das
sbb
ficoml
rol
fimuls
inc
int
loop
icebp
out
or
es
dec
inc
and
movsl
fsin
push
pop
mov
fidivs
dec
or
into
mov
call
dec
and
mov
add
xchg
sti
mov
ljmp
es
cmc
pop
fcoml
mov
jg
pop
mov
fmuls
inc
sub
add
jb
pop
leave
jbe
mov
test
lcall
das
xchg
cmpsb
cmc
xchg
lahf
xchg
push
add
imul
dec
hlt
xchg
movsb
xlat
or
movsb
sbb
mov
repz
int
call
adc
mov
das
lcall
fisubs
sbb
lock
mov
mov
push
decb
jp
mov
shrd
jo
add
sbb
pusha
sbb
inc
add
cmp
jbe
push
mov
push
pop
or
orb
mov
cmp
imul
in
cvtpi2ps
fsubl
iret
adc
dec
and
cli
mov
pop
jmp
stos
in
dec
insb
imul
in
mov
inc
mov
sub
and
sbb
movsb
sti
sbb
arpl
cmp
lea
dec
jbe
insl
dec
jno
inc
xchg
jecxz
inc
pop
lods
sbb
or
or
and
mov
lea
jb
stc
shl
mov
ds
dec
jbe
cs
out
icebp
in
pop
fiaddl
iret
sbb
out
leave
mov
xor
pop
pop
enter
movsb
sbb
mov
pop
bound
or
mov
lods
push
pop
jnp
cmp
je
dec
iret
stos
pop
fwait
out
cmp
mov
cltd
test
aaa
repnz
inc
xchg
dec
push
pusha
xchg
add
out
fisttpll
lds
cmc
fcmovbe
pop
jnp
mov
push
mov
lret
cmpsb
mov
stos
aas
icebp
cmpsb
jecxz
dec
jle
jnp
cmp
in
mov
push
fiaddl
pushf
pop
xchg
push
pushf
xlat
and
ss
aas
imul
cmpsb
mov
jecxz
insb
sub
test
repnz
or
cmp
ficoml
jle
jl
inc
loopne
jge
pop
or
bound
xchg
bound
jb
mov
mov
es
push
cmp
adc
repz
loopne
out
and
and
dec
dec
mov
lahf
sbb
xchg
shrb
and
and
add
sbb
push
mov
insb
cltd
dec
sub
xorl
mov
xchg
ret
mov
mov
mov
mov
mov
insl
out
sub
jno
mov
and
fnstsw
stc
repz
rcrb
in
jge
add
xor
or
pop
pop
cmp
xchg
divb
enter
and
sbb
pop
jp
inc
bound
xchg
push
into
cli
push
xchg
or
mov
ret
or
jecxz
xchg
pop
addr16
cmove
xor
mov
and
pop
rcrl
add
add
pop
sub
inc
into
push
or
adc
mov
pop
dec
js
mov
mov
lds
sub
ds
mov
rcrl
clc
mov
xchg
jo
insb
push
repz
test
adc
mov
xchg
jecxz
enter
xlat
cmc
lret
sahf
shl
dec
test
mov
imul
cmp
movsl
rcrl
mov
out
subb
int
xchg
mov
or
cmpsb
repz
mov
sti
inc
leave
pop
es
xchg
and
cmp
stos
je
cli
sub
inc
pop
divb
mov
out
stos
xlat
lods
arpl
cmp
bound
imul
pop
push
fistpll
ret
xchg
mov
lea
loopne
das
aad
add
scas
or
leave
pop
mov
popf
scas
add
loope
cmpsb
dec
xchg
xchg
out
xchg
lea
cld
imulb
fstp
sub
push
mov
and
mov
xchg
lds
das
dec
pusha
cmpsl
js
cld
jae
push
dec
mov
cmpsl
mov
dec
jl
add
mov
add
negb
jle
dec
jmp
enter
int
stos
cmpsl
and
sti
icebp
fmull
adc
xchg
sti
mov
push
adcl
fcmovnu
sbb
test
dec
cmpsl
inc
bound
inc
cs
aas
xchg
ds
jno
push
rol
mov
sub
in
and
rcrb
sub
dec
cltd
les
jno
aaa
push
movsl
ret
cmp
pop
or
mov
jns
add
subb
enter
repz
cmpsb
mov
ds
push
cmp
or
fnstsw
jns
pop
push
sub
jge
jecxz
push
fstl
and
ret
cmp
clc
popf
data16
mov
jp
mov
int3
int3
push
addl
mov
hlt
or
sub
rclb
sub
sahf
xor
mov
mov
into
adc
inc
adc
cltd
dec
sbb
sub
lcall
call
xchg
or
nop
add
xlat
ja
aad
das
jg
mov
mov
aaa
test
jp
lds
btc
mov
stc
jge
jl
inc
mov
pop
xchg
adc
insb
out
sub
add
mov
add
lock
lret
mov
pop
scas
xchg
pushf
xchg
sti
dec
adc
add
popf
std
js
sbb
pushf
in
test
test
out
lcall
loope
sub
cmpsb
fmul
test
or
repnz
xchg
stos
sub
test
xor
into
xor
call
push
js
xlat
je
imul
lock
clc
rorb
cwtl
divb
repz
xchg
insl
imul
sbb
daa
and
push
jmp
or
movsb
cmp
jbe
mov
push
mov
loopne,pn
insb
inc
jmp
add
std
aas
cli
xor
cwtl
sub
out
or
cmp
xlat
bound
cmc
push
mov
jae
push
rol
push
clc
cmp
mov
inc
xlat
fstps
push
jecxz
test
sub
adc
inc
fists
jmp
or
out
movl
jge
out
rorl
add
aas
orl
or
mov
push
rorb
add
imul
inc
push
dec
push
xchg
cld
mov
xchg
jb
data16
xor
mov
sub
sti
insb
in
out
loopne
movsl
xor
or
lahf
lret
enter
shl
in
pop
rol
mov
sbb
cmp
in
fmulp
mov
idiv
sub
inc
fsubr
pop
or
dec
push
dec
and
mov
mov
and
stc
fcmovb
push
dec
iret
lds
rcrb
and
pusha
inc
add
add
mov
mov
xor
cs
arpl
lods
daa
lcall
ja
inc
jnp
aaa
inc
lret
adc
test
fidivl
sbb
pop
dec
test
and
adc
add
mov
adc
mov
insl
dec
or
cmc
cld
jle
xor
xchg
rcrl
inc
push
mov
pop
sub
fdivl
mov
inc
dec
in
sahf
xor
sbb
or
mov
cwtl
sub
scas
add
add
lcall
mov
call
xchg
sub
loopne
popa
pop
adc
psrld
cwtl
push
test
sub
mov
and
mov
or
jecxz
or
test
pop
inc
jno
in
lea
lcall
mov
fidivrl
sbb
mov
sbb
pop
hlt
and
shlb
pop
in
sub
loop
stos
and
test
mov
xchg
jp
pusha
shl
fsubp
scas
cmp
andl
leave
push
leave
shlb
dec
or
stos
pop
cltd
es
pop
xchg
mov
fadds
mov
mov
stos
pop
sub
stos
mov
sbb
fsts
sbb
xchg
or
mov
enter
pop
push
lods
or
ret
fimuls
sbb
mov
dec
jle
inc
fnstcw
int
cltd
pop
mov
int3
pop
push
jge
inc
cmpsb
xchg
and
in
sbb
and
pop
pop
push
lock
sbb
push
popa
push
and
adc
sbb
and
xchg
hlt
dec
mov
andb
stc
out
lods
movsb
stc
push
mov
sbb
inc
flds
or
pushl
pop
ds
push
push
lock
cmp
xor
nop
dec
adc
cld
ds
sub
in
cs
sub
push
jl
out
cld
mov
js
mov
mov
int
xchg
mov
movsb
mov
sbb
inc
adc
stc
orl
jmp
iret
xchg
dec
pusha
stc
mov
aam
into
stc
and
bound
popf
ficompl
mov
mov
mov
fdivrl
cmp
and
xchg
and
shlb
jle
hlt
negl
loopne
sub
mov
icebp
sub
mov
int
push
jnp
pop
ja
push
dec
daa
mov
out
adc
inc
out
ret
fdivs
das
out
aaa
movsl
test
or
lock
outsl
dec
sahf
mov
jmpw
mov
rclb
rcll
jnp
aas
in
or
push
sbb
in
xor
es
jecxz
and
mov
int3
fidivs
in
and
sbb
int
jno
frstor
xor
pop
pop
pop
pushf
pop
insb
push
pop
adc
mov
or
and
loope
movsl
sbb
sub
or
call
jl
push
sub
fisttps
inc
mov
mov
movsb
pop
shlb
mov
cmpsb
jge
or
push
dec
inc
mov
stos
mov
mov
ljmp
loopne
jg
in
repnz
xchg
xor
pop
imul
inc
jecxz
arpl
push
loopne
lea
lock
int3
add
jp
aam
mov
sbbb
test
fwait
ss
and
mulb
call
shll
pushf
or
dec
push
lods
std
pop
jne
add
xchg
lea
test
out
inc
sbb
fcmovnb
push
outsl
add
jb
pop
mov
insl
aas
jnp
enter
cwtl
je
mov
xchg
pusha
dec
dec
sub
push
mov
push
inc
addl
ljmp
in
jo
push
lea
pusha
jmp
rolb
mov
sub
inc
xchg
into
movsl
mov
sbb
xchg
jb
std
push
dec
out
dec
jge
sbb
or
add
xchg
lea
cmp
jl
jmp
jnp
mov
mov
pop
filds
sahf
ss
ret
lret
lds
rcr
loop
push
dec
fistpl
in
inc
sub
jbe
xor
aaa
les
enter
nop
jno
adc
scas
sbb
lock
pop
fsts
mov
or
sub
jecxz
mov
cs
xchg
lahf
jmp
movsb
adc
add
sbb
mov
outsl
xchg
jno
repz
repz
call
and
dec
push
lcall
stos
popf
inc
xchg
mov
jnp
inc
inc
aas
nop
sbb
shrb
mov
and
adc
sub
mov
pop
insl
mov
or
fadd
sbb
xor
mov
or
sarl
ljmp
xchg
or
ja
pop
fsubl
enter
sbb
pop
sbb
jae
aaa
push
not
mov
or
arpl
lods
adc
hlt
xchg
outsb
inc
xlat
mov
pop
xchg
hlt
xchg
adc
gs
cwtl
test
popf
pop
mov
mov
mov
icebp
lahf
ja
push
jl
sub
popa
jbe
hlt
jmp
mov
dec
add
inc
into
in
in
add
pop
cmpsb
repnz
addb
sub
xlat
mov
cmpsb
int
andb
lcall
fidivrl
in
mov
fcmovu
repnz
pushf
cmp
xchg
mov
bound
sub
push
jne
xchg
repz
mov
into
aaa
nop
or
add
mov
inc
xchg
sahf
mov
lock
lds
sbb
mov
icebp
mov
pop
jle
pop
pop
lcall
xchg
movsl
mov
jecxz
cltd
out
fisttpll
in
cwtl
iret
mov
les
ja
mov
sbb
arpl
mov
mov
ljmp
inc
rol
sahf
adc
rcrb
lea
mov
pop
adc
cld
out
mov
subl
sbbl
mov
in
mov
adc
outsl
mov
mov
mov
in
lods
add
and
jg
lods
outsb
add
rclb
cld
fnstenv
sti
orl
sbb
mov
imul
mov
or
mov
xchg
or
xor
dec
bound
inc
in
pop
inc
rcrb
or
loopne
push
scas
add
pop
ds
sub
jb
test
push
or
out
mov
mov
lret
sbb
dec
or
jle
cmc
or
test
jns
test
leave
sub
mov
into
and
insb
test
and
mov
cmp
cwtl
mov
and
int3
cmpsb
mov
aas
add
or
aaa
scas
lock
dec
in
adcl
add
mov
imul
mov
add
cmp
scas
jle
mov
xchg
xchg
sti
add
dec
mov
inc
sbb
inc
fwait
sti
hlt
sbb
inc
dec
lcall
cwtl
int3
es
cmp
jg
push
sti
dec
incb
mov
push
dec
leave
jle
jl
sbb
xor
pop
inc
in
addl
fcoms
dec
cmp
or
out
repnz
mov
cmp
or
popa
leave
inc
push
nop
daa
add
test
fnstenv
into
stos
adc
sub
xchg
call
xchg
sahf
in
push
das
push
dec
inc
sub
jge
hlt
mov
icebp
ljmp
imul
lret
lods
inc
test
mov
jg
pushf
ljmp
ret
notl
icebp
clc
outsl
mov
adc
rorl
popf
and
cmp
aaa
out
fcompl
repnz
shlb
idivl
cmc
xchg
or
jle
sbbl
sarb
addr16
out
mov
adc
cmpb
sub
xchg
icebp
push
pop
push
push
xchg
fwait
dec
mov
aam
cs
jl
loop
xchg
sub
inc
stos
jae
cs
and
fstpl
out
mov
test
outsl
dec
stos
push
aas
fisttps
jecxz
lcall
dec
testl
arpl
and
mov
ss
lods
mov
mov
pop
dec
in
xor
shrb
repz
add
into
add
fwait
xchg
push
mov
push
inc
adc
lods
sbb
sbb
and
fldl
cmp
and
shl
and
out
xor
aas
daa
outsb
inc
dec
push
sub
fistpl
mov
sub
clc
jae
mov
push
andb
and
or
fldenv
lea
daa
in
mov
xchg
jae
push
rcll
or
hlt
mov
and
lret
jmp
emms
cmc
aaa
cmp
test
mov
scas
add
dec
lret
xchg
and
jge
std
stos
xchg
cld
in
imul
lods
pop
add
nop
mov
lods
cmc
adc
imul
mov
movsl
jp
mov
pop
loop
pop
or
pop
fwait
dec
push
ret
ja
push
shlb
repnz
mov
cmp
cmc
jno
fadds
sbb
stos
ljmp
and
dec
ret
sbb
lods
insb
sub
mov
jmp
clc
fwait
test
mov
push
mov
out
mov
mov
sar
pop
mov
in
pop
push
and
and
sbb
xchg
das
dec
lahf
lods
aad
mov
out
xor
add
inc
mov
fldenv
jae
lock
pusha
jae
sub
pop
lret
jae
dec
mov
fidivrl
in
push
leave
pop
scas
xor
xchg
xlat
testb
and
push
sbb
add
in
repz
lret
xchg
inc
cli
loope
loop
push
add
adc
lea
inc
in
and
pop
std
test
add
repz
popf
das
adc
jae
push
cld
inc
pusha
jle
mov
pop
lock
jo
sub
jmp
js
test
fsubrs
add
add
sahf
and
mov
loopne
popa
push
fimull
inc
xor
xor
mov
jae
jnp
mov
xor
mov
subl
cmp
test
call
push
lret
adc
xchg
xor
jge
or
jmp
movsb
in
pop
pop
repz
ds
and
or
aam
pop
sbb
mov
cmc
loope
pop
outsl
adc
push
jle
sub
into
pop
mov
mov
inc
sub
ds
mov
movsb
sub
cmpsb
sbb
push
or
mov
mov
sti
cld
sarl
fwait
adc
into
lods
mov
bswap
cmpsb
xchg
fdivp
and
xor
popa
out
pop
pop
mov
leave
sbb
lcall
xlat
xchg
mov
clc
dec
jmp
xorl
js
in
insl
shl
mov
loope
inc
dec
inc
call
jnp
ret
push
lock
mov
or
mov
and
repz
stc
cmpsb
ljmp
mov
lds
push
sbbb
sub
test
std
mov
in
or
xlat
jge
ficomps
sbb
or
cli
jno
cmc
or
sbb
mov
sub
rcr
xchg
mov
pop
popf
xchg
hlt
mov
add
cld
mov
push
inc
decb
dec
adc
xchg
mov
cli
fcoml
xchg
push
addb
rcll
cmp
adc
cmpsl
mov
fsts
bnd
pop
adc
jg
mov
bound
xor
adc
test
pop
lea
pushf
in
mov
pop
xlat
sub
inc
pop
int3
hlt
pop
hlt
loope
sub
adc
fbstp
repnz
in
sahf
out
ljmp
mov
mov
insb
loopne
cmpsl
cmp
inc
repnz
mov
sbb
push
fsubr
lret
sbb
or
int
dec
sub
sbb
sub
loope
inc
xchg
adc
out
in
inc
add
push
mov
pop
pop
loope
sbb
jle
shll
mov
ja
mov
test
ds
push
ds
in
insl
popf
fnstsw
jae
sub
adc
fsincos
inc
mov
popf
adc
mov
jo
ror
fistpll
iret
jne
addr16
lods
add
xchg
push
inc
mov
pop
add
jnp
in
insb
fwait
and
push
xchg
aam
dec
dec
clc
jl
mov
aaa
xor
dec
sbb
mov
jle
out
in
cmp
out
iret
or
iret
jae
dec
int
hlt
sbb
ljmp
cmp
js
add
xor
cwtl
sub
mov
enter
imulb
add
sbb
jl
dec
mov
mov
aaa
arpl
cmp
hlt
mov
mov
aad
mov
cmp
xor
mov
lret
adc
sub
push
sbb
lret
adcb
sti
cld
inc
lcall
lcall
mov
lret
and
dec
repnz
sub
xchg
test
fmul
scas
mov
movsl
idivl
push
add
loopne
sbb
cmp
imul
out
dec
loopne
sub
mov
pusha
repz
outsl
push
or
jmp
jecxz
xchg
mov
pushl
movsb
fsubl
lods
iret
jnp
ljmp
mov
in
xlat
or
or
pop
out
dec
outsl
icebp
ljmp
imul
ss
dec
add
push
idiv
lods
mov
cmpsl
ret
bound
dec
aas
inc
push
jo
pop
fdiv
adc
mov
scas
jno
outsl
shll
adc
lock
adc
int
insl
pop
xchg
jns
sbb
push
adc
bound
xchg
xchg
es
adc
lock
mov
ret
jmp
stos
movb
shrl
imul
adc
lcall
xlat
das
adc
int3
xor
in
inc
dec
xchg
test
mov
xor
fstpt
push
sbb
and
es
cmp
cmp
mov
test
xchg
xchg
xor
inc
popa
loope
out
in
ds
fildll
mov
insl
loope
xchg
out
fidivs
mov
rcl
inc
ficoml
mov
in
and
stos
dec
das
push
sbb
int
pop
add
rolb
dec
push
rorb
mov
lds
nop
mov
sub
xor
inc
push
add
xchg
dec
jns
mov
scas
lahf
je
mov
jno
pop
and
and
andl
movsb
in
cmp
push
and
inc
stos
pop
test
out
sti
call
pushf
push
testb
outsb
xlat
inc
mov
dec
jl
lcall
jge
xchg
lods
mov
or
in
xchg
push
or
cmpsl
shlb
stos
lods
mov
call
ljmp
rep
pusha
dec
add
or
sbb
xor
add
nop
fwait
xor
fstps
cli
addr16
scas
or
add
jne
ror
je
scas
pop
cltd
mov
lds
mov
ret
in
daa
test
sbb
cmp
ljmp
and
imul
mov
rclb
inc
fisubrs
sub
adc
je
jle
scas
push
xchg
xchg
jo
add
push
out
fs
negb
cmp
mov
xlat
cs
jb
inc
or
mov
jle
in
fwait
jnp
jge
aam
aas
gs
add
inc
insb
mov
cmpsb
and
hlt
aam
stos
jmp
mov
or
push
repz
mov
xchg
fwait
add
in
sub
mov
pop
nop
rclb
rorb
mov
cs
cmc
pop
push
fiaddl
out
push
stos
inc
mov
pop
lock
fs
dec
out
dec
mov
out
lcall
cltd
dec
fidivrs
cmp
icebp
adc
push
jg
add
dec
stc
fs
int
xchg
xor
sti
mov
loopne
push
ljmp
push
call
jp
insl
pop
addr16
outsb
inc
push
cmpb
dec
cmpsl
xchg
xchg
fdivrl
dec
cmp
cmp
xor
ja
fprem
push
adc
cmpsl
fisubs
jns
rcl
cs
or
dec
jae
adc
or
sbbb
cmpsb
add
out
test
pop
push
pop
movsl
cmp
adc
mov
cmc
lods
lock
xchg
inc
mov
jge
sub
testl
pop
push
arpl
pop
into
cmp
popf
filds
jle
sbb
adc
lcall
call
sti
or
or
shrb
and
xchg
cltd
mov
arpl
sbb
mov
dec
add
mov
adc
push
movsb
mov
fstpt
pop
add
pushl
arpl
hlt
xor
inc
das
cmp
jl
cld
and
mov
addr16
mov
jb
movzwl
mov
and
in
jo
or
imulb
mov
jnp
rclb
inc
jo
jno
in
sahf
inc
inc
sahf
aas
push
pop
iret
or
cli
stos
sub
inc
sbb
lahf
jmp
xchg
cmpsb
jmp
ret
out
pop
pop
ja
cld
rolb
call
jp
fcompl
dec
xor
je
mov
jp
cmp
mov
stos
mov
mov
insb
nop
lret
push
push
add
ss
dec
xchg
scas
mov
cs
shlb
jns
cmp
ficompl
dec
dec
mov
lcall
dec
push
scas
xchg
add
je
scas
mov
sarb
adc
xchg
cltd
fsubrs
xor
or
pushf
stos
iret
push
popf
fcmovnbe
call
cmp
inc
sbb
mov
jae
shl
imul
lcall
push
xchg
cli
push
inc
test
loope
rcll
pop
int3
jae
in
mov
xchg
cmpsb
and
shlb
fwait
pop
pushf
push
push
clc
movsb
push
inc
jo
psubusw
movl
and
xlat
divl
mov
fwait
aaa
leave
fisttps
scas
shll
mov
imul
and
stos
cmp
mov
mov
enter
clc
lds
sub
sti
data16
cmp
ljmp
sub
xorl
sub
out
mov
inc
shl
pop
xor
cwtl
repnz
or
jg
mov
aam
out
sbbl
push
loope
mov
mov
adc
lock
add
lret
adc
mov
xlat
cwtl
mov
es
sub
dec
cltd
pusha
fimull
insl
nop
sub
scas
push
ds
mov
xchg
jo
jl
aad
jb
or
lret
sarl
dec
sahf
inc
incb
ss
mov
sbb
mov
sub
les
xor
and
or
popf
ret
mov
scas
scas
mov
mov
andb
lock
xor
lret
cmc
aad
jle
push
sarl
xchg
and
lret
mov
lret
loopne
mov
and
enter
jp
dec
addr16
jnp
cmp
inc
bound
pop
jle
lea
std
jb
xor
enter
shr
movsb
addr16
orl
test
sahf
popf
push
jae
loopne
in
test
sub
or
fwait
sub
jmp
inc
fidivl
xchg
push
and
push
orl
gs
into
mov
push
insb
cmp
dec
jle
pop
mov
movsl
repnz
cmp
xlat
pop
add
mov
dec
fsubl
sub
mov
pushf
fisubrl
sub
and
scas
adc
xchg
xor
mov
mov
cld
in
fadds
jb
cli
movsb
xchg
repz
sbb
lock
arpl
test
mov
xor
mov
push
sbb
insl
pop
dec
out
lock
popf
insb
xor
mov
pop
pxor
imul
dec
push
sahf
sub
rclb
sub
jne
cmp
fwait
jg
jg
adc
pop
xlat
je
mov
rcrl
jecxz
fs
xchg
aad
popa
iret
iret
imul
out
dec
ret
push
daa
push
cmp
shl
add
pop
addl
pop
adc
xor
repz
nop
dec
dec
insb
sub
inc
fstps
fimuls
ja
lahf
sub
arpl
dec
dec
subb
lahf
xchg
es
xor
aas
mull
fs
shr
imul
mov
movsl
xchg
jns
test
lea
mov
add
fld
push
cmc
cs
scas
out
xchg
mov
outsl
mov
cmp
sub
jns
in
popf
sbb
add
jecxz
xor
shll
aas
push
xchg
pop
jmp
pusha
jmp
push
cmp
in
out
pop
stos
nop
orl
adc
xor
jb
sbb
cmpsb
and
jno
sbb
jmp
xchg
in
mov
stos
inc
mov
movsb
loope
insl
xchg
jle
dec
xor
fs
pop
negb
add
adc
movsl
scas
adc
push
jns
xor
cwtl
fbstp
das
xchg
mov
repnz
add
pop
sbb
lea
cltd
addl
repnz
mov
ret
lret
loop
loop
es
addr16
mov
icebp
and
aas
inc
dec
aaa
pop
fisubrl
test
and
push
adc
and
push
mov
cmp
in
std
ss
loopne
fldcw
shrb
add
dec
adc
pop
lock
xchg
xor
call
fstpt
ds
mov
popa
sbb
pop
scas
push
push
lock
push
xchg
jns
fbld
cli
and
mov
roll
bnd
jno
inc
mov
scas
mov
mov
push
cmp
test
jno
data16
call
xchg
adc
lret
leave
fcoml
and
mov
or
rorb
into
sarl
push
test
jbe
fcoms
stc
ljmp
inc
cmpb
jno
mov
imul
and
cmp
pop
mov
cmp
cmpsl
pop
sub
lret
pushf
jg
adc
pop
cs
fsubrs
adc
and
outsl
push
call
inc
movsb
dec
frstor
xchg
data16
cmp
nop
or
mov
mov
ja
mov
loop
out
loope
into
nop
stc
pop
jg
js
scas
push
repz
mov
pop
xchg
jmp
push
add
or
jmp
clc
rol
stos
cmp
cmp
xor
cmpsl
jns
xchg
fwait
dec
pop
jl
xlat
dec
and
sbb
jg
cs
scas
rcrb
movsb
or
inc
orb
ret
dec
lods
push
or
enter
mov
lods
add
outsl
mov
sti
jge
cmp
adc
icebp
movsl
jae
shrb
jge
test
inc
xchg
or
stos
xorb
scas
mov
xchg
xchg
sub
gs
insb
jb
scas
cmpsb
repnz
je
ss
rorb
stos
xor
lret
dec
jne
movsb
shlb
es
lods
pop
xorb
sahf
das
out
cmp
subb
in
push
cmp
xor
mov
cmp
shlb
sub
sub
lods
inc
xchg
inc
mov
out
mov
mov
out
lock
jmp
clc
jg
mov
ljmp
data16
inc
push
shl
pop
outsl
test
shrl
adc
fcomps
mov
xor
mov
inc
in
mov
xorl
mov
out
jno
mov
fdiv
imul
cwtl
imul
adc
cld
in
lea
jge
and
jmp
addb
adcl
dec
cmc
xor
jmp
and
xchg
sub
sbb
scas
add
filds
or
fs
shrl
push
xor
call
mov
adc
or
frstor
test
loop
testb
jmp
cmp
pop
les
push
outsb
mov
mov
out
cli
int3
cmp
out
lods
call
xchg
mov
test
mov
movsl
xor
cmp
pusha
push
mov
mov
aad
mov
add
mov
scas
arpl
sbbl
sbb
mov
fs
jmp
jb
cmp
mov
mov
or
ljmp
fists
jg
add
cmp
and
lcall
inc
mov
lret
add
jmp
dec
or
and
loopne
gs
mov
std
push
sbb
dec
lods
loope
daa
insl
cmc
icebp
out
adc
nop
jb
shlb
lods
inc
push
call
in
loope
pop
or
jbe
ljmp
ja
fdivl
sub
mov
fstpt
xchg
addb
adc
push
addr16
rclb
jge
ret
pop
cmp
pop
test
and
cmpsl
popa
mov
fcompl
mov
adc
mov
aam
sahf
rcrl
xor
std
loop
adc
pop
add
add
inc
ss
or
push
mov
xlat
push
out
pop
mov
in
repz
call
aas
push
pavgb
or
gs
sbb
in
mov
cmpsl
imul
stc
test
cmp
vmovaps
xor
pop
push
nop
mov
icebp
out
push
test
dec
sub
lods
in
rolb
stc
adc
xlat
inc
pop
aad
xchg
jno
cmpsl
sahf
fisttpl
add
add
fistpl
sbb
mul
dec
mov
lds
not
lret
inc
lea
inc
fwait
test
and
insl
pusha
sub
xchg
push
xchg
push
sahf
arpl
lock
ret
xchg
nop
mov
test
xor
cltd
bound
pop
push
imul
sbbb
test
jmp
shlb
pop
jno
inc
dec
repz
sub
xchg
xchg
in
sbbb
call
push
and
add
jmp
lret
xchg
mov
pop
pop
inc
mov
mov
sbb
enter
mov
inc
enter
nop
or
loop
jbe
repnz
sub
in
sub
pop
cmp
mov
fwait
lahf
add
adc
inc
mov
sahf
cmpsb
cld
sub
push
pop
xchg
cli
stos
andl
es
inc
inc
inc
push
jge
aam
xlat
fstps
jno
fisubrl
xor
mov
jo
mov
mov
loop
rorb
ret
shlb
fdivl
push
sahf
cltd
subb
in
jnp
pusha
out
or
dec
fcompl
adc
or
shr
mov
and
cltd
icebp
movsb
addr16
mov
in
imul
mov
mov
adc
xchg
jae
or
push
fnsave
dec
jmp
sbb
jmp
inc
jo
fcomps
sub
and
sti
mov
mov
inc
movsl
mov
loopne
mov
mov
fsts
mov
lea
enter
mov
dec
into
dec
mov
and
jl
jns
jae
adc
cmp
cli
or
adc
fmull
mov
jmp
test
movaps
mov
sub
leave
imul
lock
shr
out
nop
add
enter
aas
jmp
pop
pushf
and
je
xor
icebp
xchg
scas
or
xchg
repz
pop
or
fisubl
jns
aad
outsb
sub
cltd
pop
les
fwait
cltd
test
add
lcall
push
sub
addb
sub
dec
out
loope
bound
aaa
insl
nop
push
test
adc
mov
pop
sti
lcall
jne
and
xor
ret
lahf
cmp
imul
push
loopne
shlb
xchg
sub
mov
lods
scas
inc
in
or
cmp
rcrb
ret
push
fcoms
dec
ret
leave
ret
mov
rolb
es
push
sahf
fmull
ret
cld
cmp
jb
jle
es
xchg
icebp
daa
popl
lods
mov
das
push
mov
inc
cmp
pop
push
and
stos
add
mov
das
cmpsb
mov
add
xor
mov
dec
out
movl
xchg
out
cmp
lock
lock
sbb
rcrb
mov
lock
dec
or
push
ret
data16
daa
call
and
aas
jb
jg
stos
cli
xchg
cmpsl
push
out
push
sbb
mov
xchg
pop
mov
repnz
cmp
and
test
xchg
je
dec
push
adc
jge
nop
notl
adc
fildl
inc
sub
xor
das
aad
adc
popa
jbe
sti
mov
movsb
jge
cmpsb
gs
and
inc
pusha
aas
dec
std
test
jnp
push
mov
push
insl
mov
mov
mov
jae
dec
nop
jnp
sbb
movsb
int3
jno
daa
pop
mov
inc
ja
cmp
into
sbb
add
insl
jb
inc
push
jns
push
mov
pushl
je
in
fstpt
ret
jnp
cltd
jb
add
hlt
out
pop
mov
xchg
push
rorl
mov
inc
data16
mov
pop
out
test
xor
or
xchg
lock
push
push
xchg
sbb
jbe
inc
cmp
dec
lods
sub
insl
dec
loop
cmp
cs
pusha
inc
es
jno
or
cli
imul
ret
inc
enter
add
lcall
mov
fstpt
or
iret
cmpsl
call
adc
mov
mov
push
push
rolb
fucomip
xlat
adc
or
scas
pop
frstor
mov
inc
jge
outsb
sarb
push
jmp
sbbb
in
xor
fnsave
xchg
int
rorl
inc
test
adc
jmp
int
pusha
cs
data16
loop
jb
push
jb
mov
push
mov
sub
or
cld
mov
xchg
xchg
or
movl
jno
jno
sbbl
sub
and
add
lcall
outsl
inc
data16
ljmp
imul
jle
inc
pushf
insb
xor
popa
adcl
stc
hlt
ja
dec
sar
cmp
sub
adc
rclb
dec
les
outsl
adc
fnstcw
call
cmp
push
add
mov
daa
es
bound
add
jl
ja
pop
call
jge
es
shlb
sarb
popa
sbb
mov
fdivrl
adc
dec
addr16
aam
into
dec
and
sahf
ret
mov
in
pop
cs
adc
imul
testl
ds
dec
sahf
jmp
sbb
dec
loope
adc
in
pop
shl
dec
out
xor
fmulp
cmp
nop
jno
cld
xchg
shrl
mov
and
repz
dec
sbb
std
xchg
ret
push
mov
roll
mov
fisttps
stos
test
jecxz
std
push
aaa
les
and
pop
fimuls
jmp
out
and
sbbl
imul
imul
jae
js
imul
xchg
pop
ret
popf
xchg
or
cmpsb
ret
jne
jbe
mov
loope
mov
add
inc
icebp
or
mov
push
and
ljmp
sti
mov
add
mov
sub
lods
adc
push
jbe
adc
fldenv
jne
push
adc
add
lods
xchg
pop
int
push
popf
fwait
adc
ret
cmp
outsl
fsubrs
mov
cli
cs
cmp
stos
cmpsb
mov
dec
mov
mov
inc
jl
mov
push
in
jo
jp
dec
in
xchg
clc
cmp
aas
jle
outsb
sub
and
lret
call
mov
push
mov
push
test
xchg
jmp
sahf
mov
inc
mov
cmc
push
int
adc
xor
mov
or
inc
cwtl
cmp
pop
xor
add
lods
dec
es
negl
dec
cmpb
jecxz
gs
hlt
jg
pop
loop
add
mov
push
mov
inc
mov
loopne
add
test
add
mov
xchg
cmp
lahf
dec
lahf
addr16
jns
insb
sub
jns
pop
mov
lret
aam
push
mov
mov
fsubp
in
dec
insb
mov
push
in
aam
or
stos
sub
mov
popa
insl
xchg
in
add
jle
out
ja
push
popa
fld1
aas
push
shll
pushf
loopne
add
xchg
dec
mov
add
jge
mov
mov
shl
out
ret
scas
dec
out
xlat
push
cltd
shlb
ror
mov
pop
lock
movsb
sti
push
jge
mov
enter
sahf
js
pop
inc
jle
fistl
and
imul
add
mov
mov
into
lds
in
lahf
add
mov
loopne
das
cmp
and
sub
pop
push
fbld
scas
pop
stc
push
mov
shl
xor
sbb
test
arpl
fnsave
jmp
xchg
mov
pop
mov
movsb
clc
push
fidivs
xchg
dec
cmp
and
ja
push
popa
pop
insl
jl
push
scas
cs
std
sub
dec
cmp
inc
pop
pusha
push
push
mov
xchg
mov
shrl
sbb
out
jp
or
xor
jae
mov
pop
inc
lds
int
popa
xchg
popf
or
in
adc
adc
sub
push
arpl
mov
test
pop
inc
ficoms
push
pop
inc
mov
popa
push
lcall
leave
sarl
and
mov
pop
or
movsl
loope
stos
movsb
dec
pop
xchg
xchg
cmpl
iret
adc
sub
mov
jp
cmpsb
add
push
inc
notb
fs
mov
sub
movsl
sbb
and
jmp
sarl
push
jp
push
andb
je
dec
dec
lods
dec
in
jns
xchg
mov
les
mov
test
push
inc
mov
xor
push
fmuls
xlat
leave
xor
xor
inc
mov
outsl
xlat
pop
cmp
fs
out
imul
movsl
andb
fcompl
and
in
mov
dec
inc
cmpb
pop
mov
push
out
or
inc
test
hlt
aam
fs
ror
add
dec
push
xchg
outsl
mov
cmp
mov
lcall
inc
jns
js
xchg
mov
subl
or
xchg
push
psraw
sar
sub
sbbb
or
cmp
pop
jne
fldcw
inc
push
hlt
jmp
xorl
enter
inc
xchg
pop
dec
in
add
std
xlat
push
jno
lods
mov
pop
cmp
psubusb
aam
jbe
add
mov
push
in
addr16
mov
push
pop
mov
adc
jg
shrb
inc
mov
xor
stc
adc
adc
jl
hlt
andb
sti
jle
mov
out
add
mov
and
mov
les
stos
icebp
inc
adc
repz
adc
mov
in
enter
filds
clc
pop
mov
imul
cs
adc
es
in
ret
jmp
mov
test
fistl
xor
in
or
sti
lret
and
dec
ret
filds
loopne
mov
cmc
mov
sub
ret
add
push
sbb
xor
inc
dec
pop
fdivrl
and
or
sub
nop
add
mov
in
jne
movsb
popa
jae
mov
rcrb
nop
xlat
sarb
jne
scas
dec
js
sahf
inc
rol
mov
fistps
scas
movsl
pop
call
mov
pop
mov
loopne
sbb
pop
xor
in
push
push
sub
dec
jmp
cltd
int
sub
leave
inc
add
movsl
mov
sub
jle
test
pop
pop
dec
sub
loop
je
xor
movl
push
adc
int
popf
jmp
xchg
test
lahf
and
pusha
xchg
adc
inc
mov
inc
clc
xchg
cmp
popa
xchg
and
mov
test
pop
adc
adc
inc
push
xchg
shll
mov
movsl
insb
jmp
dec
xchg
push
mov
add
fsubs
je
cmc
pop
push
mov
cmp
ss
std
mov
arpl
int
fisubrs
fucomip
cmp
add
and
int3
leave
sbb
lock
sub
adc
arpl
mov
push
mov
repz
addr16
mov
clc
xlat
test
mov
outsl
std
xchg
jecxz
lcall
dec
in
xor
jp
sbb
jbe
inc
icebp
cmp
test
push
push
stos
push
mov
ds
sub
mov
arpl
mov
cmp
inc
xchg
ds
ficomps
movsb
flds
add
lods
adc
push
es
pop
lret
xchg
sub
push
xchg
loope
aaa
pushf
and
add
push
into
iret
push
lds
ja
cltd
jg
scas
andl
mov
les
fs
inc
das
xchg
jns
imul
mov
jnp
push
subb
pop
cwtl
jp
cmp
cmp
sbb
int3
jge
aaa
mov
enter
mov
lret
cmp
shrb
mov
push
pop
dec
pop
mov
mov
and
xchg
inc
movsl
cmp
cmp
movl
sbb
adcl
sub
insb
cmp
xchg
dec
js
das
adc
push
and
jmp
jns
out
fsub
cwtl
lcall
in
pop
jno
enter
add
into
inc
pop
xor
xchg
inc
arpl
loope
in
movb
clc
mov
pop
push
push
inc
out
or
xor
data16
or
jmp
jnp
fldt
xchg
daa
out
xchg
cmp
mov
adc
test
fs
mov
daa
inc
mov
or
movsl
sub
testb
es
adc
pop
and
fimuls
sbb
roll
sbb
movl
imul
inc
xchg
fsubl
scas
push
fists
xchg
movsb
out
andl
sbb
mov
mov
jbe
inc
pop
xchg
sub
and
mov
sbb
or
stc
je
xchg
lret
xchg
dec
dec
std
push
rcr
mov
jecxz
sub
iret
popf
cmp
sahf
push
xchg
or
and
in
cmp
xchg
xchg
jo
dec
clc
lret
mov
por
or
loop
out
mov
hlt
adc
add
in
rcrl
xchg
add
repz
sub
cmc
lahf
mov
cmp
mov
xchg
push
dec
jnp
jp
jmp
in
nop
pop
mov
in
sbbl
jne
xchg
fst
add
shl
test
adc
das
mov
jbe,pn
dec
adc
addl
sub
adc
shl
jns
ret
push
cmp
enter
rol
lods
mov
jge
sub
mov
ja
adc
mov
out
pop
test
sti
xchg
sbb
xchg
enter
loope
imul
out
outsb
adc
mov
dec
add
cmp
movb
ja
insb
pop
push
sahf
mov
shlb
test
repz
leave
test
xor
mov
nop
jbe
call
pushf
or
shlb
mov
shrb
sub
sarl
adc
aas
cwtl
or
mov
test
inc
sub
and
cmp
lds
jge
bound
xor
int3
push
mov
pushf
cli
dec
push
pushf
mov
cld
int
lcall
lcall
daa
int
and
lock
notl
pushf
sub
mov
pop
sub
xor
incb
pop
mov
data16
mov
inc
pop
jne
add
insb
push
dec
adc
mov
mov
sti
dec
js
add
xor
adc
jle
sub
sub
out
sub
pop
jl
push
popf
push
je
jb
mov
xchg
add
dec
adc
call
shl
lods
sub
mov
repz
inc
and
outsb
loop
xor
mov
jns
loope
pop
cmc
jl
mov
movsl
or
popa
dec
call
jo
cmp
out
mov
sbb
fdivs
mov
dec
sub
enter
test
js
xor
ror
nop
pop
push
daa
mov
std
push
aad
push
push
xor
es
clc
add
mov
xor
aad
add
mov
jno
ror
shll
aam
dec
xchg
je
pop
cmpsb
sub
fsts
xlat
gs
xchg
repz
gs
and
ja
jl
das
pop
and
cmovb
int
addr16
xor
sbb
xchg
insl
dec
sub
pop
mov
inc
sarl
push
add
sbb
int
ds
mov
les
or
mov
mov
out
jl,pn
mulb
inc
jo
mov
mov
dec
pop
dec
dec
aad
mov
jbe
lret
and
push
test
int
scas
cmp
popf
mov
sub
push
and
out
loopne
jge
lock
push
push
lods
dec
sbb
sbb
andb
push
outsb
fwait
sub
outsb
mov
pop
jno
movsl
sbb
pop
repnz
adc
push
jo
ror
movb
call
and
and
or
mov
push
jg
mov
iret
dec
pop
mov
call
out
fnstsw
jecxz
test
les
xor
popa
mov
sbb
insl
fnstcw
sbb
sbb
mov
inc
aad
shrl
testl
jne
scas
add
adc
dec
inc
in
test
std
dec
cltd
js
mov
sbb
mov
insb
mov
aas
and
xor
xor
jno
les
cs
jmp
xchg
arpl
mov
lcall
pop
test
stos
sub
out
mov
inc
adc
xlat
mov
sahf
cmp
sbb
and
mov
lret
stos
xor
mov
ret
sbb
fcomi
ret
xchg
and
push
xor
dec
or
or
lds
and
dec
outsb
adc
movsb
jne
fsubrs
sub
pop
sub
roll
push
ret
mov
out
xchg
mov
jns
outsb
mov
aam
roll
mov
xor
jns
push
mov
or
xchg
out
fs
mov
iret
xchg
jno
mov
test
leave
jmp
xchg
lret
push
jge
in
sbb
test
or
bound
sarb
cwtl
sbb
outsl
pop
int3
add
push
lret
lock
outsl
loopne
pop
out
adc
mov
clc
fsubr
inc
add
fsubl
test
in
push
ror
and
jle
fsubrs
add
jp
jmp
fs
daa
lret
test
pop
cmp
jle
fwait
test
mov
fildl
dec
pop
call
xorl
mov
outsl
shr
stos
and
push
sbb
adc
js
and
out
mov
pusha
sbb
push
xchg
jns
inc
push
adc
cmpsb
ret
ljmp
or
pop
sbb
mov
jb
dec
jo
fstpl
insl
cmp
rcrb
js
std
dec
mov
ret
mov
into
sbb
pop
add
pop
push
ljmpw
sbb
push
mov
aaa
sti
xorl
mov
xor
mov
scas
iret
sbb
pop
add
inc
add
mov
lock
pushf
jecxz
adc
pop
lea
mov
imul
cs
dec
icebp
test
mov
jge
or
and
lods
adc
push
dec
add
cltd
outsl
in
loop
clc
std
sbb
mov
imul
mov
inc
movsl
out
mov
cmp
sbb
incl
pop
std
ja
add
and
xlat
ret
and
cwtl
push
dec
out
scas
in
shl
cltd
pusha
enter
loop
xchg
pop
fstpl
je
popa
cmp
aam
push
dec
sbb
and
or
lret
mov
dec
jne
fildl
arpl
push
shl
into
pop
push
push
sub
dec
popf
jne
nop
mov
dec
xchg
lods
add
mov
aam
sbb
test
cmp
pop
pop
jo
push
dec
sahf
ret
loope
xchg
cmpsl
cmpsl
testl
imul
jmp
jne
pop
jo
add
fldcw
scas
cmp
mov
outsb
sbb
inc
inc
cs
aam
pop
xor
push
push
add
lcall
ret
sbb
lahf
mov
xchg
out
xor
pusha
cmp
cmp
xchg
rcrl
fdivrl
stos
push
add
stos
mov
es
mov
fsts
lock
sbb
mov
pop
std
inc
fcmovb
push
data16
pop
fwait
loopne
pushf
insl
stos
xchg
xor
add
lea
adc
sbb
dec
fsubrl
xchg
mov
lcall
lahf
mov
outsl
clc
xor
mov
aas
xchg
adc
mov
testb
daa
dec
test
xchg
shr
fsts
fistpl
cmp
lcall
jg
aaa
int3
or
leave
mov
pop
leave
cmc
inc
insl
jle
sub
sub
inc
test
sarb
jbe
cmp
mov
add
dec
add
daa
sarl
push
icebp
adcl
inc
fdivrl
sub
add
dec
jmpw
push
xlat
cmp
pop
inc
scas
in
pop
pop
push
out
fildl
outsl
dec
mov
mov
mov
push
jnp
xorl
pushf
jp
and
pusha
push
add
jb
sbbl
add
mov
inc
in
fcomps
jmp
or
mov
push
xchg
inc
mov
dec
test
sahf
daa
pop
adc
pop
addr16
test
lock
dec
cmpsb
xchg
dec
sbb
push
cmp
sbb
popf
dec
mov
pop
mov
mov
adc
add
cmp
popa
loopne
pop
andl
aas
sbb
and
loopne
xchg
cmpl
loop
ret
outsb
out
mov
scas
fidivrs
lahf
fcoms
jbe
imul
testl
mov
push
push
dec
xor
cmp
inc
xor
cmp
out
push
cmp
ljmp
xor
enter
sbb
inc
add
jae
sarb
repz
xor
ja
shrl
rol
in
cld
loopne
jne
and
push
jmp
inc
pop
jmp
sahf
and
fisubs
sahf
out
adc
ss
sarb
stos
jb
fdivs
mov
pop
int
push
and
int3
or
popa
xor
idivb
push
iret
dec
enter
lods
and
fldl
rorb
cmp
sbb
aaa
or
stc
rdtsc
mov
lock
fs
push
sub
fidivs
mov
bswap
pop
je
loop
jae
shl
inc
inc
out
sub
inc
popf
repz
scas
and
mov
xor
inc
inc
lock
xchg
and
mov
xlat
xchg
push
xchg
fxtract
shll
pop
add
arpl
cmp
dec
fsts
push
mov
mov
ret
divb
or
sub
xchg
gs
aam
xchg
in
scas
pop
jg
ljmp
mov
fwait
sub
cld
pusha
mov
dec
jecxz
in
sbb
int
sbb
sbb
fdivr
inc
mov
shlb
inc
cltd
add
pusha
mov
iret
jae
mul
lock
xrelease
push
int
ja
and
dec
xor
and
loopne
mov
and
testb
insl
stos
pop
mov
mov
cli
push
test
pop
push
add
cmp
jmp
pop
loope
pop
inc
pop
push
movsb
cmp
add
insb
addl
test
or
cmp
adc
jbe
xchg
xor
xlat
test
jg
inc
mov
rol
mov
push
mov
and
test
xor
or
push
inc
repz
mov
xchg
lods
stos
pop
ja
mov
dec
sbb
mov
sahf
sub
dec
rolb
ljmp
fidivrl
xor
cmp
mov
push
or
pop
test
es
adc
cwtl
and
cmp
rolb
cmp
shl
jl
push
rorb
fneni(8087
pop
fidivl
jno
aad
xchg
push
loopew
dec
add
ficompl
pop
jg
add
sbb
imul
xchg
inc
jne
fistl
inc
in
cld
sahf
add
xchg
aam
enter
pop
movsb
dec
xchg
lcall
jo
and
or
push
loope
jl
xchg
sti
dec
idiv
movsl
shl
out
pop
lret
or
pushf
ja
es
push
cmp
xchg
xor
add
movsl
dec
adc
mov
test
fst
ret
mov
je
fwait
or
pop
icebp
xchg
adc
mov
in
loop
mov
mov
movsb
sbb
pusha
bound
outsl
fbstp
or
fcomp
fldcw
push
loop
cmp
jmp
js
push
iret
int
lods
xchg
outsb
loopne
add
add
mov
popa
add
sub
call
sar
or
xor
jb
pop
sbb
scas
rsqrtps
leave
sbb
add
idivb
push
xchg
test
mov
sbb
jle
imul
mov
out
lds
rcrl
jg
jg
in
ja
and
sub
lock
inc
js
push
repnz
mov
sbb
flds
sbb
neg
mov
pop
push
mov
iret
out
mov
mov
es
xor
dec
mov
shll
imul
mov
fisubs
xor
scas
xchg
jne
inc
sub
xor
cmp
daa
lea
jp
std
push
mov
xor
and
gs
imul
pop
inc
adc
das
xchg
es
mov
mov
loop
outsl
and
inc
in
jmp
aam
push
push
iret
mov
jp
jns
imul
cmp
xorl
loop
sub
jo
cmc
xor
push
xor
sbb
xor
lock
mov
mov
and
dec
jae
fadds
or
es
push
inc
or
nop
je
xchg
cmp
movsb
xchg
testb
jae
aam
cmp
mov
cmpsl
mov
push
movsl
dec
subb
jle
mov
xchg
or
sub
enter
pushf
pop
mov
mov
and
push
stos
or
leave
lds
ffreep
andb
nop
loop
sbb
or
mov
iret
mov
rorl
cmc
or
repz
mov
into
or
and
ret
sti
sub
lock
subl
popf
stc
push
stos
scas
adc
scas
cmp
pop
data16
insl
push
loope
les
jle
insb
mov
popf
pop
lcall
dec
loope
push
xor
test
test
adc
mov
or
jl
lock
cmp
or
aam
pop
xor
out
es
mov
dec
shll
xchg
push
and
imul
or
adc
shll
addl
push
push
jge
sub
test
stos
fxch
mov
repz
jb
cmp
icebp
mov
cli
jbe
mov
mov
xlat
bound
and
sub
or
push
inc
mov
and
adc
push
pop
mov
rolb
in
xchg
int3
dec
pop
iret
add
sub
pusha
fiadds
arpl
add
mov
pop
add
sbbb
sub
jne
mov
xchg
xor
adc
adc
sbb
dec
shll
push
arpl
aad
pop
icebp
add
test
iret
push
mov
push
sub
push
fstpt
xor
add
xchg
leave
pop
popa
int
fmull
jb
inc
inc
mov
js
cwtl
mov
dec
mov
mov
inc
aaa
fildl
mov
addl
rcll
cld
cmp
inc
inc
xchg
adc
ror
xchg
test
adc
or
cmp
int3
fnstcw
xor
insl
fstl
fcmovbe
into
cld
movl
jae
cmp
or
cmp
shrb
inc
out
and
pop
add
jmp
das
stc
clc
in
loope
xor
fs
loop
sarb
or
cmp
and
hlt
add
add
cmp
and
add
fmuls
sub
push
fs
add
push
sub
es
sahf
cmp
dec
add
enter
xor
fimuls
hlt
and
mov
imul
dec
jmp
sbb
push
fsubr
push
cmpb
sbb
pop
sbb
jb
sbb
mov
sub
mov
gs
xchg
lahf
leave
lea
push
dec
je
dec
inc
or
out
fsubp
dec
mov
or
and
pop
repz
jecxz
ds
sti
insb
or
xchg
jmp
loope
lds
xchg
sbb
add
frstor
push
mov
repz
shl
scas
xor
lds
aad
cld
cmp
push
aaa
mov
mov
jne
push
pop
jecxz
ret
push
adc
jp
in
or
inc
int
and
push
andl
jge
popa
push
aaa
aas
push
div
mov
xchg
fldenv
sub
std
cld
daa
lret
pop
add
pop
out
scas
or
sbb
jle
out
pusha
xchg
in
push
push
push
sbb
ja
sbb
lcall
xchg
outsl
add
xchg
loope
sub
sbb
iret
shll
ret
loopne
mov
divb
xchg
lock
jge
cmp
mov
lcall
jge
sbb
mov
push
test
jno
nop
pop
xlat
mulb
scas
sbb
add
sbb
lret
sbb
std
insl
inc
movsl
sub
lret
jbe
sarb
jmp
es
scas
mov
popa
push
loopne
cmc
sub
fwait
cltd
test
cs
mov
inc
add
mov
outsl
mov
jno
cmp
mov
or
outsl
xchg
cmpsl
pusha
int
mov
mov
test
mov
and
xor
rcr
xor
jecxz
or
jg
cli
mov
inc
pop
cmp
jecxz
fnsave
lcall
add
jle
mov
int
push
fs
fwait
push
fdivrs
test
je
pop
inc
scas
outsb
std
lret
dec
push
or
daa
std
dec
ss
popf
test
cwtl
or
insb
lahf
push
adc
sbb
jae
dec
pop
fs
sarl
jle
pop
cld
test
cs
movsl
and
adc
gs
imul
ficoms
cmpsl
push
jmp
jmp
in
movb
repz
mov
and
pushf
mov
test
jecxz
push
shrl
or
cmpsb
cltd
test
aam
mov
dec
inc
test
mov
or
xchg
dec
sarl
inc
ljmp
inc
mov
mov
xchg
adc
inc
in
scas
xchg
mov
shl
addb
mov
shl
xchg
cmp
jns
inc
jle
lcallw
jmp
popa
ret
lret
mov
test
ss
mov
in
leave
or
sahf
mov
into
jle
inc
xchg
div
lock
mov
loopne
mov
push
mov
stos
std
leave
repnz
mov
mov
xchg
cs
sub
in
xchg
scas
mulb
jl
rsqrtps
int
fdivl
inc
sub
aam
mov
loope
inc
aaa
xor
loope
divb
test
or
and
jmp
sub
iret
sub
push
xor
push
aad
push
ja
in
xchg
scas
out
call
andl
imul
loop
repz
pop
add
xor
ds
jae
mov
scas
popa
jp
imul
jo
mov
aam
icebp
xor
adc
ret
jmp
jnp
aas
test
testb
data16
cmp
add
sbb
sub
inc
mov
xor
movsb
in
jns
out
mov
movsl
and
cld
cmpsl
jp,pt
rclb
fldt
mov
cli
xor
xchg
lcall
dec
or
enter
mov
repnz
add
sub
or
add
add
notl
testl
cmp
out
insb
test
xchg
inc
xchg
adc
sub
xchg
imul
lods
push
pop
mov
test
sub
ficomps
in
mov
and
mov
add
xchg
xchg
int
cmp
fisubrl
jno
dec
aam
xchg
xchg
dec
pop
shl
jl
cmp
add
ret
adc
fstpl
xchg
add
inc
loopne
mov
sbb
ja
inc
mov
ss
mov
frstor
pop
push
rorl
into
mov
cmp
into
mov
xchg
loope
add
in
xor
js
sbb
sbb
ret
out
mov
dec
sub
into
xor
into
adc
add
inc
das
sub
adc
pop
rcll
inc
rol
push
pop
loopne
dec
clc
in
std
xchg
popa
repz
lret
lods
and
push
push
cmp
mov
pop
imul
ds
daa
push
cmpsl
into
jg
mov
xchg
jbe
sbbb
jno
lods
outsl
pop
out
push
push
fstpt
int3
in
scas
fldl
clc
imul
and
sbb
fwait
aad
mov
ds
pop
mov
mov
test
sub
pop
pop
int
int
addb
imul
loope
repnz
imul
mov
jle
int
stc
pop
sahf
xchg
or
clc
incb
loop
lock
out
fsubrl
in
pop
xlat
mov
cs
sub
out
fisubl
insl
mov
insb
push
mov
jp
negb
shll
aaa
or
aam
xchg
inc
or
shlb
xchg
mov
scas
cmpsl
enter
loope
inc
pop
popa
lods
or
pusha
xor
xor
sbb
into
icebp
xlat
in
fsubrs
push
xchg
test
icebp
bound
loope
fadds
movsl
jp
pop
test
lds
inc
jle
sub
mov
xchg
std
aam
pop
adc
pop
fidivl
cwtl
test
jns
sarl
push
ja
xchg
xchg
mov
jp
fstpl
inc
add
imul
bnd
push
out
add
sbb
adc
push
js
xchg
cmp
inc
push
call
int3
invd
sbb
hlt
sbb
out
div
mov
mov
mov
or
leave
in
jg
mov
repz
out
cmp
jl
ret
inc
mull
lods
inc
adc
jb
fisubs
hlt
adc
pop
and
rcrl
and
mov
adc
imul
and
iret
mov
pop
xchg
xor
pop
cmp
mov
inc
scas
xchg
aam
jbe
push
mov
mov
fiaddl
lcall
push
pop
nop
lods
pop
out
jg
pop
pop
cmpsb
stos
loop
adc
inc
xchg
mov
adc
pushf
loope
inc
sbb
lock
ret
jge
dec
mov
push
ja
adc
repnz
movb
sbbl
cs
mov
fnsave
out
lret
cld
hlt
adcb
push
clc
popa
rolb
push
mov
pop
mov
jp
mov
jle
and
xor
or
mov
aas
lods
inc
in
add
subb
dec
xor
sbb
int3
inc
xor
cmp
inc
popf
inc
inc
sti
mov
ret
jbe
push
lock
cmpsb
jle
call
shrl
mov
pop
stos
jecxz
xchg
mov
icebp
mov
mov
push
sbbb
pop
nop
lods
test
push
jno
jnp
add
xchg
testl
push
jne
mov
mov
loop
jbe
inc
das
idivl
mov
in
lahf
push
adc
cmp
adc
nop
outsl
cmp
lods
movl
test
shl
fildl
int
push
mov
jg
fldenv
xchg
push
cmp
pop
shlb
cmp
add
sub
pop
pop
jo
push
imull
jb
fs
fdiv
dec
fildll
std
adc
dec
dec
push
lock
or
push
es
add
push
and
xchg
sbb
cmp
and
mov
push
repz
xchg
imul
mov
sbb
cmp
test
sbb
add
loop
mov
mov
arpl
adc
push
out
cltd
inc
xor
nop
outsb
mov
push
test
jle
mov
mov
into
mov
lret
imul
xchg
and
xor
mov
lea
les
lcall
nop
mov
fiadds
pop
push
das
gs
lcall
loope
adc
or
mov
in
xchg
and
add
das
into
jl
ds
jg
cmp
jg
jge
fistps
lock
xor
pop
addr16
insl
jb
les
or
cmpl
sub
inc
in
cltd
sub
push
mov
jne
adc
stc
fmuls
imull
mov
sbb
xchg
aam
or
daa
dec
daa
xor
or
pusha
movsb
and
sbb
jl
cmp
sub
inc
psraw
jnp
mov
or
sub
mov
je
out
clc
std
dec
call
push
pushf
lods
faddp
int3
dec
rcrb
je
and
loope
clc
outsl
push
out
adc
xchg
xlat
mov
ss
xchg
xchg
bound
fistpll
xlat
test
adc
adc
adc
test
mov
cli
es
lret
dec
dec
sbb
sub
cmc
sarl
stos
mov
or
and
fists
stc
mov
xor
ds
dec
cmp
popa
mov
addb
mov
leave
mov
scas
ljmp
and
sub
or
lahf
cs
cmp
loop
xchg
sub
dec
add
or
lret
push
adc
sub
pop
jecxz
pop
xor
test
and
in
add
dec
pop
iret
out
jl
and
sub
jbe
sti
jge
sub
xor
push
and
jl
lods
mov
lret
pop
xchg
sub
jnp
sbbl
push
mov
cmpl
xlat
or
mov
mov
cli
cmpsb
ds
arpl
and
add
mov
lahf
or
cmpsl
mov
add
lods
pop
xchg
in
iret
fists
pusha
dec
and
dec
bnd
and
mov
sub
jmp
and
call
sub
or
push
out
data16
lods
jno
test
xchg
pop
push
call
or
fistpll
jl
adc
mov
rclb
add
add
mov
pop
pop
fsubr
sahf
mov
push
jg
mov
pop
sbb
jp
mov
mov
push
push
mov
sub
daa
inc
mov
mov
xchg
bound
push
mov
cmpsb
lret
jg
cmpsb
xor
fneni(8087
mov
mov
mov
fwait
jmp
mov
popf
jmp
jne
pop
out
rcll
sub
in
jns
stc
and
out
mov
dec
pop
dec
jne
repnz
pop
and
pop
mov
mov
xor
mov
fmull
jbe
fdivr
adc
or
xor
xor
cmp
xorb
pop
adc
aas
sbb
sbb
xchg
cmp
lods
dec
pop
pop
jg
es
out
xchg
mov
push
cwtl
dec
fistps
jno
cwtl
loop
test
pop
aam
les
mov
pop
adc
test
popl
jne
or
sbb
jl
push
jl
test
push
hlt
adc
mov
lcall
loop
out
fiadds
jns
jnp
lret
push
xor
gs
mov
dec
push
dec
test
lds
jns
cltd
out
clts
inc
xchg
stc
cmpsb
mov
dec
shll
lcall
in
dec
jno
cmp
std
fstpt
and
push
adc
xor
xor
jp
cmp
sub
movsl
sbb
fsubrs
jp
mov
cmp
adc
push
jg
pop
mov
push
repz
dec
inc
cmp
outsb
push
stos
mov
inc
mov
push
push
and
mov
dec
xchg
in
mov
fisubrl
nop
stc
adc
sub
sbb
es
ja
pop
or
cwtl
jl
ss
xchg
aas
or
clc
pop
fidivrl
push
cld
jecxz
mov
and
ja
add
in
adc
xlat
mov
outsb
xchg
mov
mov
mov
daa
jb
roll
pcmpgtw
ljmp
das
push
push
popf
in
sub
xorb
pop
faddl
in
mov
mov
cmpsl
dec
or
stos
pop
xchg
imul
dec
lods
push
movd
iret
add
shll
andb
inc
xchg
add
leave
lods
pop
out
sbb
inc
repz
add
out
cmp
jns
aas
pop
xor
fisubrs
cmp
js
and
jecxz
out
mov
or
ficoms
ret
xchg
dec
mov
inc
inc
sbb
lret
arpl
ss
mov
pop
pop
mov
dec
push
fimuls
jecxz
fsubrl
push
xor
rclb
push
movsl
xor
dec
arpl
sbb
pop
addr16
push
lret
mov
sub
sbb
mov
cmp
sub
sub
sub
jle
mov
imul
xor
ret
fwait
sbb
into
sub
ret
inc
mov
int3
imul
mov
insb
mov
mov
sahf
jae
in
fld
clc
in
mov
mov
test
shrl
not
pop
pop
fwait
jo
sbb
inc
ror
cmc
xchg
popa
pcmpgtd
mov
fdivl
push
mov
and
bound
push
aad
es
or
lock
gs
sub
out
xchg
gs
dec
and
adc
sti
leave
shll
cmp
pusha
fsts
das
cmpsb
fsubs
push
push
movsb
scas
cmpl
testl
mov
pop
imul
cld
adc
test
and
lea
inc
addr16
hlt
jns
ljmp
sub
mov
mov
imul
ss
arpl
aad
inc
pop
jecxz
icebp
aaa
sbb
and
fnstcw
in
loopne
or
jmp
xchg
or
outsb
sub
imul
or
int
push
inc
repz
add
jae
add
jmp
cmpsl
mov
mov
in
adc
pushf
add
xorl
es
pusha
mov
xchg
mov
inc
rcrl
push
jg
push
add
pop
push
stos
jne
out
pushf
mov
into
sbb
movsb
adc
sub
pop
jne
jle
or
and
mov
mov
pop
pop
addr16
stos
filds
test
in
in
and
sbb
xchg
cmp
xchg
outsb
insb
dec
andb
inc
inc
mull
cld
or
xchg
push
pop
pop
mov
in
jo
insl
sub
das
push
mov
push
dec
xchg
enter
call
jmp
out
sub
sub
add
cmp
test
push
inc
je
inc
mov
mov
mov
test
lods
test
mov
xor
bnd
mov
mov
sbb
and
es
insl
gs
shll
dec
into
mov
adc
mov
fcomps
add
movsb
data16
sub
aam
cmp
inc
aas
sbb
addr16
xchg
aad
xchg
jl
sahf
scas
aam
sub
sub
aas
test
cs
mov
fwait
add
inc
lods
push
dec
cmpsl
xorl
pop
addr16
mov
insl
push
inc
sub
loope
popa
dec
xor
push
sub
jl
xlat
xor
xor
addr16
jnp
ret
push
mov
xor
adc
repnz
mov
outsb
jmp
adc
daa
mov
jmp
push
sbb
inc
sbb
popf
loop
movsb
enter
inc
aaa
mov
sbb
jmp
adc
ds
or
ret
push
repnz
mov
movsb
mov
jnp
lea
testl
loop
inc
outsb
xor
jns
dec
dec
insl
mov
mov
sbb
sub
dec
mov
jb
rorb
mov
cwtl
shrb
xchg
mov
mov
add
dec
mov
cli
xchg
cmp
sbb
test
dec
loope
test
mov
bnd
xor
dec
repnz
out
sub
stos
xchg
int
jo
dec
rol
stos
mov
cltd
pop
out
push
mov
xor
mov
push
cld
inc
sub
in
rcll
cmp
fildll
dec
outsl
sahf
and
mov
dec
nop
stos
loopne
inc
rorb
ret
repnz
mov
enter
stos
in
mov
sti
insl
icebp
sbb
and
cmp
test
mov
mov
cmp
push
xor
imul
sub
xchg
les
xorl
adc
mov
mov
sub
mov
cmp
aaa
adc
inc
sahf
dec
mov
fxch
fnsave
sarl
cmpsb
xor
loop
sub
fistl
repz
lret
pop
lds
push
cmp
push
rcll
or
fwait
aas
xchg
push
clc
scas
add
fsubs
xchg
mov
inc
pop
add
xchg
loopne
cmc
jb
mov
dec
nop
add
hlt
aad
or
fidivl
jmp
rcr
push
aaa
iret
sbb
and
insl
pop
push
mov
movsl
shrb
mov
movsl
mov
outsl
enter
add
jg
cmp
cltd
fsubp
js
cli
ja
push
mov
testl
mov
js
sub
pop
test
cltd
sub
mov
sbb
insb
inc
pop
push
inc
push
or
pusha
inc
std
and
jae
pop
jo
shl
ret
lret
adc
sti
jno
xchg
mov
and
and
fs
iret
scas
data16
pop
push
jp
mov
in
fmull
loope
insb
pushf
sbb
stos
rorb
jae
xor
xor
or
adc
and
xlat
mov
mov
jl
jo
add
adc
pop
push
mov
sub
shll
sub
out
jns
ret
pop
das
aas
clc
int3
and
or
repz
jne
enter
jp
fcoml
aaa
inc
jecxz
stos
pop
mov
adc
mov
add
xchg
imull
imul
fistps
flds
xor
sub
sub
lods
jmp
sub
fst
jecxz
jg
pop
mov
scas
ficomps
xor
addr16
mov
loop
lock
pop
stos
and
dec
mov
cmp
inc
hlt
mov
mov
stos
or
jae
jge
imul
mov
clc
pop
cld
in
sub
testl
mov
adc
mov
mov
cmp
cmc
nop
adc
mov
xchg
mov
lods
mulb
bound
mov
mov
inc
cmp
repnz
cmp
out
fisubrs
and
movsb
mov
push
jb
sarb
inc
in
in
cmpsb
fwait
dec
jge
out
and
out
addl
dec
inc
cmc
movl
fs
mov
push
punpckhbw
filds
dec
mov
mov
in
cmp
mov
xor
popf
add
data16
fwait
inc
jp
test
ja
xchg
repnz
xchg
clc
stos
mov
xchg
sub
mov
test
ds
sahf
lock
adc
add
rcrb
dec
cs
pop
mov
test
inc
dec
ret
sub
xchg
jne
mov
jb
or
ds
push
lds
push
gs
ds
imul
mov
adc
pop
scas
xor
sarl
and
and
xchg
lret
rcl
mov
shll
in
sub
and
shll
leave
xchg
xchg
push
dec
jne
and
shrl
bound
or
sahf
aas
inc
or
push
repnz
push
xor
fnstcw
fmul
pushf
out
dec
ljmp
mov
mov
inc
jbe
dec
lds
pop
and
mul
jnp
daa
mov
cwtl
add
add
lock
xchg
stos
or
aas
addr16
ds
lock
sub
cmp
pushf
clc
pusha
xchg
push
addr16
jl
test
out
or
iret
mov
dec
and
cmc
daa
ja
lock
push
mov
adc
lret
lea
and
push
adc
inc
push
mov
loope
loopne
mul
addl
xchg
repz
push
inc
cmovo
imul
adc
mov
cmp
mov
dec
addb
xor
jle
fsubrp
push
aad
mov
sub
call
dec
pushf
pop
cs
sbb
pop
inc
inc
cmpsl
pop
inc
and
jl
rcll
inc
imul
iret
ds
in
icebp
jne
lcall
std
das
enter
stc
out
int
mov
sub
stos
adc
fwait
cmp
lock
cmp
dec
ljmp
xor
cmpl
sbb
add
shlb
loop
hlt
sub
pop
addr16
aam
fstl
rorb
test
inc
cs
scas
mov
dec
stc
pop
inc
and
mov
sahf
mov
cld
fsubl
mov
push
roll
lock
add
dec
mov
mov
xor
sbb
fchs
inc
adc
lcall
stc
sub
push
in
mov
and
jo
arpl
aad
loopne
xor
mov
sbb
rorb
ljmp
test
push
out
gs
push
jge
ljmp
out
xchg
imul
xchg
lahf
stos
pop
and
clc
or
test
enter
cmp
sbb
call
jo
aam
sbb
adc
adcb
negb
fistl
push
iret
imul
popa
mov
xchg
outsb
jbe
insb
xchg
xor
in
jle
rcrb
add
fcoml
insb
stos
test
cmpsl
dec
outsl
jl
mov
lret
mov
es
cli
dec
add
hlt
push
sub
mov
movsb
adc
mov
xor
mov
cli
or
add
movsl
aaa
cmpb
test
scas
je
xlat
dec
push
inc
cmp
repnz
mov
xchg
push
popf
pushf
cli
and
xorb
cltd
sbb
or
in
jo
mov
pusha
cld
add
adcb
fistpl
lret
jl
jns
dec
pushf
sub
decb
ljmp
fisubs
jmp
cwtl
ss
or
mov
lds
cmp
popf
jnp
cmp
fsubrl
movsb
mov
inc
cld
push
cmp
out
test
fiaddl
lcall
das
xlat
shl
aaa
add
push
xor
cmp
cmp
push
or
xchg
inc
jnp
sbb
das
xor
push
lods
pushl
jbe
in
daa
cwtl
les
jge
dec
aaa
or
ss
aaa
mov
ret
pop
pop
or
movsb
cmpsb
movsl
in
clc
in
enter
adc
clc
xchg
mov
mov
fildll
sbb
out
ret
push
jb
add
jns
incb
scas
and
jb
cli
xchg
fisubs
push
fcoms
dec
add
jns
fdivl
lea
pop
cmp
sbb
lret
cmp
sub
test
or
es
pop
mov
sub
pop
mov
cltd
repnz
mov
sbb
aad
inc
xchg
movsl
pop
xor
mov
pop
or
test
rcr
sti
loope
xchg
fistps
cmp
fnsave
pop
bound
sub
cld
mov
xor
mov
xor
push
in
sub
aas
lock
jle
pop
int3
stos
or
dec
add
rorl
fmull
sub
push
loopne
jg
les
imul
pop
into
sbb
addb
cmpsb
rolb
ds
je
out
clc
aas
add
mov
mov
lods
pop
sti
and
js
lret
dec
push
inc
jmp
repz
push
or
ds
push
clc
add
hlt
jmp
mov
dec
sub
rcr
repnz
add
scas
mov
int
inc
test
fiaddl
je
test
dec
jae
push
mov
ret
lret
pop
push
loop
cli
dec
push
add
adc
or
pop
mov
popf
push
dec
mov
ja
sub
outsl
popa
sti
int
push
and
sbb
cmp
add
cmp
loopne
test
shll
loopne
dec
mov
les
push
sbbl
in
ret
sub
mov
fists
adc
jg
cld
cmpsl
dec
pop
sti
test
xchg
imul
push
scas
test
imul
stos
lods
push
enter
push
cwtl
pop
adc
mov
out
xchg
sub
adc
iret
xor
sarl
hlt
and
repnz
ja
mov
dec
cmpsl
imul
clc
jnp
in
das
mov
aaa
sbb
in
iret
pop
in
mov
fucomi
adc
dec
or
icebp
adc
inc
imul
sbb
mov
loopne
sub
mov
mov
clc
jno
and
cli
mov
xchg
xor
aaa
adc
aaa
pop
ljmp
pop
cmpsl
xchg
imul
fadds
leave
push
jns
stos
jmp
ss
and
jnp
out
or
repz
mov
mov
inc
ret
jmp
push
popa
imul
mov
dec
jge
clc
dec
sarb
jns
cmpsb
cmp
sub
mov
mov
mov
insb
mov
ljmp
cmpsb
or
push
fadds
and
mov
inc
clc
int
jg
push
sahf
ficompl
rorb
gs
pop
xor
adc
mov
jno
xchg
push
dec
jmp
push
scas
inc
loopne
or
aaa
pop
mov
es
fimull
test
inc
rcll
movsl
sti
xchg
cmc
dec
and
xor
into
adc
scas
insb
mov
add
iret
out
mov
xor
or
ljmp
jnp
mov
sbb
incl
cmp
xchg
mov
mov
out
lret
pop
mov
pop
adc
repnz
inc
xor
add
lret
or
and
test
cmovo
xchg
or
push
xor
sbb
lea
cmc
adc
dec
shll
leave
inc
lret
mov
stc
ljmp
std
lods
pop
xchg
lcall
cwtl
insb
jmp
leave
add
das
sahf
jge
add
xor
rol
pop
inc
xchg
inc
and
test
in
lahf
jb
int3
lock
adc
add
or
fsts
push
pop
mov
lock
sbb
and
popf
pop
pop
out
inc
idivl
cmp
adc
ja
jnp
inc
jge
aam
ds
jo
jg
loope
movsl
insl
mov
push
mull
sti
adc
addr16
and
xchg
mov
insb
sbb
and
add
dec
or
mul
clc
rcrl
ds
xor
inc
jp
pusha
ss
movsb
negb
je
lret
js
xchg
mulb
jo
call
inc
in
test
rclb
bnd
adc
adc
stc
and
xchg
sbb
xor
outsl
popf
insb
rcrl
jnp
cmpsl
repz
ss
pop
add
push
push
mov
negl
rorb
scas
ds
pusha
clc
sub
jg
rcrb
lcall
insb
rorl
sbb
movsl
pop
ljmp
mov
inc
insl
push
or
xchg
sub
sub
fs
nop
test
in
adc
push
sbb
adc
mov
mov
mov
cmpsl
xchg
push
xchg
sbb
dec
out
mov
in
ficoml
std
mov
jns
xor
stc
dec
rolb
addr16
mov
aam
push
addl
adc
cmpl
mov
imul
xorb
dec
pop
xchg
inc
shll
inc
fmuls
sub
aad
or
mov
adc
adc
add
dec
pushf
sub
ljmp
repz
in
popfw
testl
outsb
cmp
out
insl
ret
lret
cwtl
xor
es
in
add
mov
mov
xchg
scas
xor
rcrb
mov
lret
test
and
xchg
mov
ss
movsl
cmp
or
mov
repnz
roll
mov
scas
xor
inc
repz
insl
xor
cmp
fsubl
fs
push
mov
sub
push
mov
add
adc
lods
mov
cltd
ret
jbe
and
sub
fsub
inc
jl
loopne
mov
pop
sbb
repnz
pop
adc
repz
mov
mov
jecxz
xor
xor
pop
push
loop
adc
pushf
iret
or
shll
addr16
xor
jg
push
lods
loope
xchg
mov
js
mov
add
jo
in
xchg
stc
lret
jg
ret
shr
inc
addb
jbe
push
daa
xchg
imul
xor
mov
jl
adc
aas
pop
cmp
cld
fiaddl
out
lds
in
shll
jne
jl
mov
cmp
or
loop
scas
in
sub
xorb
mov
xor
movsl
or
push
push
pop
push
push
jl
adc
sbb
cvttps2pi
sub
iret
xchg
lcall
jbe
clc
repnz
jne
jno
cmp
jge
stos
das
pop
pusha
addb
pushf
sbb
test
jno
imul
xchg
ss
jg
or
int
xor
js
or
or
out
mov
adc
inc
pusha
cltd
push
imul
mov
dec
cmc
popf
dec
xor
scas
in
or
mov
add
loop
stc
push
lahf
push
sub
lock
or
cld
add
add
xchg
xor
mov
adc
add
dec
ret
mov
int
push
mov
loop
ds
cltd
adc
push
sbb
test
mov
inc
imul
inc
jge
push
adc
lret
mov
lods
std
xchg
mov
rcrb
or
repz
dec
mov
mov
ja
push
xor
in
push
xor
testb
rolb
movb
pop
xor
popf
nop
jle
mov
fildl
xorb
dec
and
and
sbb
lods
inc
push
add
or
gs
jne
xor
mov
sbb
stc
push
ss
push
mov
js
pop
jns
mov
xchg
mov
in
jbe
pop
addr16
rorb
mov
cmc
mov
mov
dec
rcll
scas
int3
mov
add
bound
rclb
loope
push
out
sub
push
cli
push
repz
pop
insl
clc
inc
mov
das
outsb
sub
loope
mov
and
lods
jo
addr16
aaa
push
adc
dec
shlb
xor
jne
outsl
inc
push
jecxz
sbb
arpl
js
mov
or
sbb
popa
jmp
cwtl
cmp
rol
subl
xchg
rcl
dec
pushf
pop
pop
add
sbb
fisttpll
dec
xlat
sbb
inc
push
lcall
sbb
push
jp
insl
gs
sti
jg
sti
mov
imul
mov
jne
inc
jb
sub
addr16
adc
mov
mov
stos
mov
out
aas
mov
mov
in
fimuls
into
xchg
inc
fistpl
shl
mov
sub
add
in
add
push
and
insb
adc
insl
mov
sub
mov
outsl
and
jae
xchg
jge
pop
stos
mov
daa
mov
dec
mov
push
ljmp
test
cwtl
dec
sbb
aaa
xchg
mov
imul
mov
repz
insb
pop
add
ljmp
out
pop
mov
scas
ljmp
sub
push
or
stc
xchg
push
inc
push
rcrl
and
cmc
je
xbegin
movsl
push
pop
sbb
sbb
cmc
add
stos
loopne
push
mov
aad
in
leave
sbb
mov
jns
sub
orl
cmc
jmp
dec
dec
repnz
inc
or
icebp
dec
je
inc
stos
icebp
orb
leave
add
addr16
mov
cwtl
pop
fdivs
fiaddl
sub
push
fisttpll
test
sbb
inc
mov
mov
cmpb
push
sbb
pop
and
sbb
mov
ja
mov
imul
and
cmp
jecxz
out
add
add
out
ss
pop
pop
fisubs
mov
xor
or
cmp
jmp
movsl
or
scas
mov
fisubl
mov
lcall
jge
orl
mov
stos
mov
push
imul
dec
es
mov
mov
shlb
mov
lret
movsl
loope
xchg
insl
pop
xchg
leave
jno
aas
call
inc
enter
push
test
loopne
mov
push
nop
loope
adc
mov
cmp
insl
jp
adc
push
dec
mov
jo
popa
pop
xor
ja
pop
mov
fstps
mov
testb
je
shr
sbb
sub
jnp
xor
cmp
jb
mov
jl
dec
call
rcr
daa
data16
or
aam
add
lret
enter
cmp
aad
divb
movsl
fmul
push
cld
sub
pop
pop
cmc
mov
scas
fisttpll
dec
mov
pop
rolb
pop
jns
nop
xchg
insl
pop
xor
imul
xchg
and
test
dec
fwait
xchg
or
dec
xor
cmp
mov
or
ret
xor
mov
jmpw
xor
shll
xor
xchg
or
sub
xchg
or
sbb
lret
hlt
lahf
sqrtps
and
xlat
xchg
pop
cmpb
and
cmp
shl
xor
mov
lret
push
sarb
mov
sbb
lods
cmp
das
lahf
add
int3
popa
cli
insb
or
push
inc
or
cmpsl
ret
sbb
lcall
outsb
sbbb
das
or
clc
cmpsl
jp
sub
or
adc
mov
shlb
xor
cs
pop
mov
loop
popf
xchg
mov
push
jbe
rcr
testb
mov
xchg
ja
js
nop
sbb
pop
sarl
pop
sub
movsb
or
jl
or
outsl
dec
sarb
int3
pop
inc
lahf
test
mov
test
shl
mulb
xchg
dec
adc
and
imull
test
jns
fcom
stos
loop
cmp
cmpsl
inc
sbb
pop
lahf
xchg
dec
mov
mov
test
cmpsb
add
repnz
call
jl
cwtl
lret
call
mov
ljmp
rcr
lock
xchg
mov
push
adc
or
jl
das
push
insb
fidivrs
cli
aaa
mov
ror
movsb
add
inc
sarl
inc
xor
andb
dec
push
and
mov
push
bound
popa
push
fidivl
lds
insl
mov
mov
and
cmp
lret
jns
jl
ljmp
cs
pop
iret
scas
leave
insl
outsl
cmc
push
mov
jle
icebp
pminub
xor
xor
mov
leave
mov
cmp
xchg
outsl
dec
ret
inc
pop
or
mov
mov
adc
adc
mov
sti
mov
jl
int
test
lret
add
shlb
sarl
aas
ss
insb
rcr
hlt
xchg
cmp
inc
cmpsb
fptan
pop
pop
mov
cmpl
sarl
movsb
mov
xchg
dec
sub
lea
pop
and
jl
sub
add
adc
std
mov
inc
ret
out
xor
clc
adcl
icebp
push
xor
xor
push
cmp
loop
xor
test
push
xor
leave
sbb
inc
popa
push
xchg
mov
jbe
fwait
xor
int3
adc
por
cld
or
and
mov
xor
cmp
jb
pop
cwtl
cmp
or
filds
mov
pop
xor
push
mov
fsubrp
sbb
push
xor
add
jl
cmp
xchg
inc
movsl
dec
mov
inc
dec
jge
out
jnp
andps
dec
cmpsb
add
retw
inc
addl
xchg
inc
or
imul
je
js
mov
xchg
mov
cltd
push
mov
ja
jns
xor
cmp
dec
popf
dec
loopne
in
or
cltd
mov
daa
pushf
xchg
test
xchg
mov
lock
orl
fcmovu
sti
jns
test
cmpsb
js
mov
aad
sub
pop
ljmp
mov
les
mov
xor
dec
es
pop
sub
mov
cmc
jl
adc
shlb
inc
sar
ja
dec
outsl
push
or
xchg
imul
add
aaa
jecxz
cltd
cwtl
push
sarb
jae
jmp
and
cmp
movsl
aam
das
lods
mov
scas
or
jb
popf
cltd
imul
cmp
mov
push
cmpsb
loop
fidivrs
test
mov
lret
into
pop
cli
rorb
cltd
fisubs
mov
out
mov
dec
mov
xor
adc
or
sbb
sub
dec
xchg
aam
xor
fs
cwtl
mov
jecxz
popf
sub
lea
jle
ds
aad
aad
stos
pop
or
enter
sbb
andl
rcl
lock
repz
fdivr
lds
push
mov
or
xor
ja
jle
insl
push
and
inc
xchg
aas
jl
icebp
movb
xor
sbb
cmpb
fsubrl
xor
or
popf
mov
int
icebp
sub
jecxz
hlt
imul
sbb
orl
mov
mov
lret
fldenv
adc
adcl
arpl
ror
sbb
pushf
dec
mov
or
push
les
scas
mov
push
lcall
call
loope
lea
mov
outsb
or
stos
mov
lock
pushf
dec
adc
lcall
fs
pop
cwtl
test
xchg
je
add
adc
rcll
or
sub
mov
and
hlt
mov
xchg
movsb
fidivrs
inc
mov
xchg
mov
lcall
adc
into
adc
in
cwtl
into
scas
push
inc
xchg
lods
sbb
xor
mov
int
out
ret
rcr
fsubp
movsl
fsubr
lahf
mov
push
push
mov
test
sbb
lea
les
out
lock
aam
cwtl
lcall
ja
sbb
aas
mov
shll
stos
lods
xor
aaa
decb
idivb
pop
ret
xor
add
iret
mov
and
mov
sub
fnstsw
fistpl
mov
add
xor
icebp
pop
push
arpl
sub
jo
sti
mov
add
xor
aaa
lahf
adc
add
inc
cmp
push
sub
popf
jb
mov
xor
sub
mov
sub
jp
lds
adc
xlat
icebp
or
ret
sub
sahf
stos
mov
cld
xchg
sub
inc
jbe
mulb
jp
jb
lea
cwtl
out
inc
jle
dec
sub
push
sub
ljmp
mov
jno
pop
and
sbb
adc
mov
fnsave
leave
nop
xor
in
fs
jmp
cltd
fdivs
push
and
iret
cwtl
mov
dec
pop
cmp
lahf
inc
loopne
inc
int
jl
mov
mov
cwtl
notl
test
ret
aad
das
lahf
das
mov
dec
dec
loope
or
fnstsw
push
icebp
adc
xchg
sub
sbb
pop
mov
lods
cmp
cmpxchg
pop
inc
pushf
rol
cmp
push
cmpl
inc
xchg
sub
and
insb
mov
dec
faddp
jo
cs
pop
xchg
lcall
push
xor
push
inc
sbb
addl
or
inc
test
sub
jge
roll
push
mov
fs
dec
sahf
xlat
cwtl
es
movb
xor
sub
inc
sbb
das
mov
mov
pop
sbb
iret
pop
ds
ljmp
fildl
mov
push
push
cmc
lea
ljmp
lahf
ljmp
es
pop
ja
jg
addr16
dec
mov
inc
rcll
or
mov
outsl
cs
movsl
push
cmp
dec
outsb
xchg
lret
push
adc
jo
cmp
mov
cs
xor
jge
out
shlb
aaa
xchg
mov
mov
aad
and
fyl2xp1
pop
cwtl
pop
shrb
inc
mov
inc
cmp
sub
nop
repnz
jge
cmpb
outsl
testb
stos
inc
push
in
sub
enter
popf
lcall
dec
mov
push
sbb
lds
data16
inc
jecxz
aas
push
and
rcrl
inc
stos
mov
fdiv
mov
inc
dec
inc
ljmp
mov
stc
mov
cmc
or
adc
or
aad
xlat
and
mov
fsubl
inc
lea
and
lock
jecxz
pushf
sub
jbe
push
pop
pushf
jl
iret
out
fnstenv
jno
adc
cmc
movsl
adc
fstps
leave
lds
dec
inc
movsl
dec
hlt
pusha
jo
fstp
mov
ds
lret
and
cmp
ljmp
inc
cld
adc
sub
leave
pop
xchg
cmpsb
inc
jbe
mov
dec
pop
inc
test
int
push
or
mov
jno
or
fiadds
sub
pop
push
out
fmuls
jmp
outsb
mov
in
dec
add
adc
in
lds
mov
lock
jo
subb
push
rorl
or
mov
test
push
fdivs
stc
and
negb
jl
mov
fcoml
fcoms
lcall
mov
dec
ss
add
or
lods
imul
stos
push
and
push
jge
xor
cmp
bound
pop
mov
jecxz
daa
mov
adc
add
aam
scas
fistpll
sub
outsb
xor
mov
aas
and
or
jl
roll
inc
shrb
je
adc
mov
mov
dec
hlt
sbb
popf
pop
imul
dec
orb
adc
cmpsl
mov
int
fistpl
push
push
pop
pop
or
sti
push
leave
idiv
pop
mov
mov
mov
insl
sarb
popf
jmp
mov
pop
inc
and
inc
andl
mov
jp
lret
ljmp
mov
out
xor
cld
enter
sarb
jns
mov
pop
xlat
stc
das
lock
jns
pop
jecxz
pop
xor
imul
mov
fdivrl
add
xchg
fiaddl
fwait
aaa
dec
mov
dec
pop
aaa
jb
cmpsb
jno
jle
mov
and
inc
ds
aas
addr16
cltd
pop
add
out
sub
mov
push
aad
push
arpl
xlat
xor
out
or
xor
mov
sub
jmp
push
pusha
jge
cmp
cs
sahf
movsb
ret
enter
mov
scas
and
rcl
pushf
stos
xor
cmp
roll
lret
jle
sti
sbb
in
mov
mov
std
cmp
fwait
mov
pop
or
cmc
stc
js
sbb
lret
ror
jge
loope
sub
mov
aam
rorl
xchg
xchg
sbb
cltd
std
int
aaa
aas
inc
imul
cmp
xchg
ret
xchg
fisubrs
jns
and
pushf
imul
adc
adc
pop
cmp
sbb
cmp
fmull
add
inc
add
xor
mov
rorb
adc
xchg
inc
les
cmpsb
popa
dec
sbbb
and
loope
lret
inc
cmp
arpl
sbb
inc
mov
and
push
cltd
sub
pop
mov
mov
push
cli
sub
test
into
into
pop
jge
cmp
push
or
add
mov
pop
into
mov
push
mov
mov
int3
clc
mov
xchg
outsl
jecxz
int
ja
bound
dec
sub
cmp
dec
stos
dec
lahf
aam
mov
in
mov
jecxz
pushf
cltd
adc
push
and
mov
frstor
cmp
mov
mov
ljmp
out
adc
jno
cmp
push
lods
xchg
add
roll
mov
ss
mov
outsb
fadds
xchg
icebp
je
mov
jmp
inc
scas
in
mov
nop
cmp
push
bsf
test
cld
out
in
sbb
and
pop
stc
insb
cld
xchg
loopne
in
mov
lods
aam
addl
push
mov
mov
pop
jmp
loope
rcrb
into
jg
jecxz
jnp
movsb
fistpll
out
lahf
mov
dec
mov
pushf
inc
repz
fldcw
cmpsl
ss
pop
xor
push
nop
xchg
mov
adc
push
aad
pop
ret
push
stos
scas
jmp
jno
inc
inc
scas
adc
push
sub
or
call
mov
sti
adc
hlt
pusha
mov
cmp
cld
inc
push
in
mov
jnp
outsb
insb
or
or
sbb
mov
sub
push
lret
fbld
call
fsubp
js
dec
or
adc
adc
sbb
scas
pop
dec
mov
cmp
push
lret
bound
sub
aaa
sub
fs
inc
pop
inc
addr16
mov
xchg
out
mov
mov
movsb
aas
fcom
and
cwtl
pop
sub
jno
daa
mov
hlt
or
push
mov
cmpl
pop
movsb
dec
and
inc
out
je
bound
test
mov
mov
mov
inc
xchg
cmp
mov
ficomps
push
aam
cmp
xor
push
cld
and
sbb
cld
jg
jge
xchg
push
push
pop
mov
leave
fisttpll
clc
dec
pop
mov
mov
dec
mov
sti
mov
call
enter
or
add
icebp
ljmp
dec
les
pop
pushf
lret
ret
sub
and
int3
push
dec
aad
and
mov
or
insb
pop
outsb
gs
adc
mov
or
int3
sbb
insl
in
shrl
pop
jp
sub
into
cmpsb
xchg
in
mov
cmp
cmp
push
mov
xchg
jnp
fsts
insb
in
mov
fdivrl
xchg
pop
fiaddl
aam
sti
push
dec
loope
mov
clc
inc
notb
push
fadds
fwait
in
lret
nop
adc
and
cmp
sbb
fstps
push
adc
fstpt
aad
add
lret
loope
testb
addl
les
movsb
jmp
gs
mov
mov
sbb
push
push
jbe
add
xlat
mov
cmpb
in
or
mov
sbb
and
add
popl
adc
mov
call
lock
mov
inc
add
or
jns
inc
mov
mov
rorb
mov
adc
int
dec
add
pop
seta
push
pop
mov
mov
jne
out
or
sbb
cs
out
into
and
mov
rcrb
fsubs
or
dec
mov
sbb
mov
pop
and
testb
movsl
fldl
hlt
xor
orb
rol
xchg
lcall
adc
nop
lcall
add
jmp
push
pop
push
lea
dec
shr
ja
mov
insb
xchg
ficomps
popa
sub
push
sbb
xor
cmp
aas
int3
push
mov
fs
dec
pop
inc
ret
test
push
and
adc
push
xchg
xor
lret
push
inc
or
outsb
outsb
pop
sub
adc
jle
sub
sub
or
jnp
push
jg
xchg
scas
lock
jge
adc
mov
mov
or
or
hlt
mov
in
push
stos
mov
xchg
fisubrs
icebp
sub
inc
es
xor
dec
push
pop
stos
cmpsl
lret
out
push
sub
andb
inc
mov
mov
out
fs
shl
mull
jp
and
and
or
add
sub
push
mov
ja
xchg
rcrb
shll
lods
ds
repnz
daa
pushf
inc
pop
cmp
push
std
inc
or
add
pop
mov
out
inc
lahf
dec
repnz
jl
mov
cmpsb
sub
cmp
inc
sti
lds
push
mov
aad
cmp
push
jecxz
andb
pop
cmpsb
jnp
cmpsb
aam
adc
or
jl
add
pop
bound
and
sub
repz
push
in
or
movsb
push
jmp
ror
popf
adc
jmp
mov
dec
cmpsb
popa
push
xchg
add
jb
sti
ror
mov
add
cmp
adc
cmp
out
jmp
xchg
sbb
lret
push
dec
mov
pop
pop
add
sub
mov
push
and
in
xchg
sahf
pusha
lcall
ljmp
out
mov
std
jg
or
mov
les
sub
push
scas
fnsave
cmp
sub
jp
ror
xchg
test
xchg
cld
or
mov
xor
loope
sbb
scas
stos
mov
rcll
push
xor
and
pop
xlat
enter
push
in
outsb
dec
xlat
ja
movsl
add
push
fnstenv
fwait
imul
jbe
pop
or
imul
int
shll
inc
es
dec
decl
jle
int
push
aas
pop
sahf
xchg
imulb
lock
mov
adc
sub
in
fs
cmp
or
mov
pop
pop
std
je
movsl
mov
jle
or
rclb
and
arpl
sub
jmp
pushf
leave
repz
int
ja
daa
jb
rorl
add
hlt
mov
cmp
inc
icebp
inc
lahf
adc
imul
dec
sub
fnsave
cmp
dec
ss
pop
and
data16
push
fldt
pop
pop
dec
pop
dec
int3
or
xor
fsubl
inc
jb
xlat
jg
or
shlb
push
shll
mov
lcall
jne
adc
mov
push
adc
add
sahf
insl
aam
lret
fwait
ja
jle
fsubs
sbb
xor
dec
pushf
outsb
or
add
mov
pop
push
shlb
sub
jg
insb
sbb
addr16
adc
lea
and
jnp
sub
cmc
lock
pop
mov
cwtl
andb
adc
xor
addr16
and
xchg
pop
mov
xlat
ret
lahf
out
and
or
fmull
lods
icebp
mov
adc
and
mov
sub
popa
enter
popa
adc
xlat
inc
dec
loopne
rorb
add
fdiv
inc
mov
test
jmp
mov
ficomps
mov
in
stc
insb
inc
lea
daa
fs
rolb
lret
ja
xchg
mov
test
and
jmp
stc
or
dec
jl
push
insl
loopne
lods
xor
sahf
scas
mov
cmp
sbbb
cmpsb
clc
or
aad
neg
imul
cmp
dec
sbb
js
js
add
js
loope
lds
mov
push
jne
int3
cmp
negb
mov
push
movsl
ljmp
cmp
xor
and
pop
adc
jmp
inc
pop
and
cs
pusha
adc
cmpb
sub
xchg
adc
pop
fxch
dec
popf
dec
mov
jbe
fmul
xchg
push
mov
ljmp
repnz
adc
inc
imul
jp
and
or
or
mov
stos
jnp
pop
out
hlt
push
adc
or
scas
js
hlt
aam
push
clc
fcoms
or
iret
jo
clc
out
mov
cltd
rol
sub
xchg
pop
lods
push
pop
popf
cmpsl
in
xor
sub
pop
mov
jne
lahf
push
es
cld
popa
lods
cmp
rorb
in
loopne
shll
fnstsw
mov
pop
jne
sbb
fwait
dec
cmp
aas
jae
dec
mov
out
in
pop
jbe
mov
imul
inc
pusha
xor
mov
jo
addr16
mov
pop
xchg
dec
cwtl
mov
push
jp
popf
fwait
dec
fidivrs
mov
in
fdivl
outsb
mov
scas
lods
jle
cmpsl
aas
in
push
cmp
adc
test
inc
sbb
sub
adc
jo
sbb
jno
outsl
cld
fiaddl
lahf
imul
cmp
in
cmpsb
mov
adc
fdivrs
outsl
andl
inc
repz
inc
idivl
in
xor
shlb
mov
mov
push
sbb
cld
dec
pop
lds
mov
and
jne
and
inc
pop
sbb
cwtl
in
xchg
xlat
pushf
mov
fsubp
rolb
sbb
mov
hlt
ret
lea
pushf
pop
adc
mov
adc
mov
shr
not
cmp
pop
sbb
jle
imul
inc
and
and
pop
push
sbb
xor
cli
mov
push
sbb
rorl
add
xchg
ljmp
jp
add
aas
or
sbb
push
cwtl
sub
mov
mov
aaa
lret
mov
std
xchg
cmp
push
add
stos
daa
dec
testl
repnz
out
je
cwtl
out
xlat
xchg
fidivl
xchg
jp
add
ljmp
in
or
and
cld
sti
push
sbb
test
cmc
fisubrl
fildl
xor
test
sti
loop
mov
jmp
xchg
div
leave
les
pop
mov
mov
or
mov
dec
pop
fldcw
aaa
adc
adcl
or
sub
mov
shlb
pop
and
lock
movsl
lahf
leave
xchg
fld
push
xchg
fbld
fadd
mov
imul
mov
test
push
pop
clc
sahf
sbb
push
dec
sbb
lcall
mov
adc
xchg
arpl
jg
xchg
push
cwtl
popf
arpl
push
mov
xor
cmp
dec
fisubrs
or
pusha
and
mov
push
imul
mov
mov
lahf
icebp
add
push
outsb
add
xchg
notb
repz
xchg
xor
cmp
cmpsl
ffreep
notl
cmp
push
dec
sub
aaa
mov
jo
mov
lcall
outsb
nop
mov
jo
repz
lahf
out
sbbl
int3
jp
hlt
fcmovnbe
ftst
aas
add
sub
jg
pop
sahf
cmpsl
and
push
inc
mov
add
fwait
inc
popa
add
sub
cmc
add
inc
mov
or
repnz
mov
jmp
sub
and
push
test
sbb
ret
pop
aaa
xchg
push
sbb
jmp
dec
or
clc
into
out
inc
xchg
aaa
push
sbb
aad
mov
pop
int3
cs
and
or
xchg
mov
mov
sbb
xchg
scas
ss
rcr
cld
cmpsb
aad
and
xlat
or
lret
aas
sbb
lahf
mov
sub
ja
fucomi
repz
movsb
sbb
call
insl
sbb
ds
cmp
fldl
jle
jg
xor
lods
cmp
mov
sbb
and
adc
icebp
repz
cmp
adc
pop
lods
js
repz
rcrb
daa
and
cwtl
sbb
es
and
sbb
loope
out
out
mov
mov
mov
hlt
or
cmp
pushf
push
xor
inc
aaa
lahf
xor
inc
cmp
stc
add
push
cmp
jnp
sub
addr16
not
mov
pop
out
cmp
rorb
sub
inc
pusha
rcl
pop
int3
iret
sub
out
sub
and
push
inc
out
xchg
sub
xchg
jns
sbb
or
in
push
or
add
inc
shrl
xlat
dec
out
jns
push
das
insl
pop
imul
out
jo
xchg
hlt
mov
sarb
pop
int
pop
lea
popf
mov
addl
loop
lret
aas
in
cmp
pop
pop
orb
sub
sub
sbb
div
stos
fimull
push
push
fdivp
lods
cli
mov
mov
mov
mov
push
pop
push
cmp
test
stos
in
cwtl
mov
sti
in
sti
cli
cwtl
bnd
or
ljmp
das
pop
dec
push
cmpl
mov
loope
mov
mov
sahf
in
pushf
shrb
mov
xor
into
push
xchg
or
cmpsb
or
pop
or
and
das
jmp
lods
and
movsl
xor
mov
cmp
scas
jge
or
pop
loope
jns
jp
or
gs
cmp
push
cli
jbe
ljmp
mov
shlb
in
dec
sti
stos
sbb
xchg
in
pop
mov
fidivl
ret
xor
add
ja
fdivr
stos
bnd
sbb
testb
inc
mov
xchg
add
mov
jnp
mov
sub
out
pop
call
push
rcrl
fisttpl
mov
push
cmp
aaa
sub
inc
push
sbb
or
mov
stc
dec
stos
repz
ds
push
mov
aad
mov
cmp
pop
adc
nop
jo
ffreep
cmc
sbb
xor
dec
pop
mov
fucomip
aaa
jno,pn
or
and
cltd
dec
clc
and
js
repz
test
pop
mov
adc
xor
ror
mov
or
push
dec
push
jmp
push
roll
xchg
insl
dec
push
stc
mov
not
adc
test
shl
in
and
mov
jb
adc
mov
movsl
cmp
fcmovnbe
cmp
sbb
in
pop
jle
dec
xor
inc
xor
sti
mov
loopne
jp
add
sub
shlb
lds
insb
add
and
adc
gs
je
out
or
lahf
adc
add
mov
sbb
pusha
sub
pop
ss
outsl
ror
mov
fsubrl
cld
outsb
pop
adc
scas
in
test
repnz
dec
fstl
fcompl
jb
insl
mov
push
jp
xor
xor
xor
sub
jp
add
mov
dec
ds
scas
jge
gs
adcl
mov
push
les
fwait
cmpsl
popa
xchg
js
mov
mov
inc
cmpsb
fwait
roll
lret
test
lods
push
inc
and
leave
daa
sahf
inc
cli
in
jo
test
shrl
or
jmp
xor
push
rol
cwtl
cmp
mov
les
shl
lret
or
shll
lods
jo
out
aaa
sub
movaps
shll
js
inc
jne
push
xchg
sub
xchg
in
out
inc
dec
add
cltd
and
dec
loop
test
pop
fadd
add
jne
cmp
mov
mov
fdivr
xor
pop
fimuls
adc
shlb
inc
jbe
lds
out
inc
add
lahf
and
mov
or
cld
int3
jmp
xor
dec
ds
jo
daa
inc
fisubrl
mov
idivb
mov
pop
popw
cld
aaa
movsl
insl
idivl
or
imul
sbb
inc
cmp
int
movsb
jecxz
mov
sub
sub
dec
in
mov
les
stc
negl
cltd
test
cld
shl
lods
push
lock
jb
push
cmp
out
mov
jl
mov
adc
cmp
push
xchg
xchg
ret
sbb
adc
repnz
jne
pop
addr16
sahf
je
es
push
lods
adc
lret
pop
test
mov
shlb
sub
lods
pop
jbe
pop
cmp
leave
mov
subl
into
gs
or
mov
sar
and
gs
lret
mov
insl
jmp
mov
xchg
stos
repz
push
xchg
aad
fcmovnbe
imul
jge
xchg
inc
jbe
sbb
xor
add
lahf
inc
or
pop
dec
inc
xlat
cmp
in
dec
mov
and
cmp
stc
and
pusha
fiaddl
jnp
mov
push
fsts
sub
movb
js
and
shrb
in
xchg
adc
mov
clc
mov
movsb
or
inc
push
dec
mov
js
jp
mov
sub
adc
insb
jbe
enter
push
fcoml
mov
mov
sbb
incl
xchg
push
fidivl
in
cmp
test
jle
add
dec
or
xor
pop
int3
cmpl
add
inc
xor
hlt
lock
lods
aam
xchg
loopne
fcomp
push
mov
add
sub
mov
or
shl
dec
out
cmc
movb
sub
les
lret
cmpsl
sbb
sbb
sbb
pop
shlb
push
andl
hlt
in
inc
xchg
xor
and
sub
fisttps
dec
pop
in
int
test
lds
xor
rorb
inc
nop
xchg
pushf
xchg
ret
sub
inc
dec
xchg
mov
push
enter
jg
iret
sub
cmp
pop
sub
in
mov
cli
dec
ljmp
jnp
dec
adc
jns
inc
inc
inc
mov
jne
jne
cwtl
imulb
mov
lock
mov
push
pop
adc
lcall
jle
push
or
xor
scas
add
inc
out
loop
xchg
shlb
or
pop
adc
out
add
scas
push
lret
imul
jg
loopne
dec
pushf
sbb
loopne
out
dec
xor
lahf
pop
out
add
xor
add
xor
lcall
xchg
xchg
xchg
test
shrl
sbb
cmp
xchg
dec
dec
mov
push
jb
scas
gs
inc
test
push
icebp
ja
imul
cmpsb
pop
fistl
scas
nop
scas
fs
push
pushf
test
jmp
ficoms
xlat
repz
ljmp
push
fmull
push
pushf
loopne
push
mov
inc
das
data16
dec
cli
mov
push
mov
rolb
jae
mov
cmpsl
sub
add
clc
loop
insb
xchg
inc
xor
push
and
push
call
aam
xor
sbb
insb
jg
ret
jns
clc
mov
xchg
push
sbb
adcb
jo
mulb
pop
mov
dec
mov
pusha
stos
push
popa
xchg
lods
lret
nop
fidivrl
inc
pop
sahf
cmp
rolb
mov
jbe
jb
inc
sbb
xor
fldcw
xor
push
stc
ret
popf
dec
data16
scas
or
popf
inc
int3
sbb
jnp
lea
dec
out
lea
sbb
jle
sub
sbb
adc
mull
stos
cmp
xor
sub
pusha
push
pop
cmc
jg
push
pop
sbb
dec
cmp
adc
pusha
xor
mov
and
sbb
xor
pop
movsb
xchg
xorb
mov
pop
dec
cltd
lods
pop
jmp
les
push
and
xor
jmp
xsha1
cmpsb
or
xor
jb
jle
sahf
shrl
out
and
push
sub
pop
adc
jg
mov
and
sub
ljmp
fs
das
push
pop
das
adc
or
add
in
leave
cmp
lods
push
push
xchg
ret
test
out
fprem
mov
jp
in
dec
cmp
cmp
ljmp
out
jns
pop
sub
test
test
das
or
call
add
sub
pop
hlt
mov
out
xchg
inc
xchg
cmpsl
pop
or
xchg
xor
lcall
add
mov
inc
xchg
imul
mov
sub
or
mov
xchg
ds
movsl
push
sbb
lret
mov
cld
icebp
repz
cmp
fiaddl
hlt
lea
cmp
pop
inc
jp
cmpsb
pop
int3
push
les
jbe
lea
jns
cwtl
subb
rcr
es
xor
jg
fs
sub
ret
les
mov
pop
js
jge
or
rcrl
insb
cli
sbb
push
aam
jle
xchg
repz
cmp
sbb
push
jp
xchg
rcrl
and
mov
sub
shlb
movb
pop
push
xchg
cltd
frstor
or
mov
scas
adc
cmp
bound
cmpsb
pop
mov
out
ds
insb
and
lock
and
push
mov
cli
jb
inc
shrb
push
sbb
dec
movsl
cmp
push
sub
repnz
nop
ret
int
cmp
sbb
popl
jl
or
repnz
out
mov
add
xchg
mov
scas
mov
aas
cmp
aad
out
sub
int
xchg
dec
pop
and
jle
jle
xchg
jge
and
in
jo
dec
mov
mov
imul
cmp
rcl
nop
pop
cmp
aam
fists
mov
mov
cwtl
or
incl
cmp
int3
idivl
jo
shl
mov
jo
jmp
cmc
call
out
pop
xor
dec
jmp
test
stc
fildll
xchg
shlb
mov
stos
ret
pop
lds
xchg
sahf
les
jne
mov
or
lds
cmp
ss
rcrb
pop
adc
lea
ret
subb
std
push
mov
shlb
dec
sub
mov
adc
lods
outsb
add
test
xor
jmp
push
or
or
ss
xchg
fadd
sarl
mov
jb
outsb
or
xchg
mov
sub
adc
cmp
insb
fisubs
pop
daa
mov
inc
ja
fcos
sub
add
and
mov
xchg
ret
inc
je
insl
and
push
imul
sti
mov
xor
lea
insb
sbb
sbb
loopne
loopne
sub
jo
xor
sbb
jbe
cmpl
mov
and
inc
jle
pop
sub
mov
mov
inc
stc
push
jp
jo
je
scas
sahf
mov
das
xor
xor
gs
pop
cmp
inc
cmpsb
or
mov
mov
mov
cs
mov
pop
push
mov
in
pop
stos
insl
leave
add
sub
mov
cmp
lahf
lea
push
stos
inc
sbb
push
lods
jmp
push
dec
aas
sub
cli
and
fidivrs
aam
jo
ja
mulb
stos
andb
test
add
xchg
sub
gs
xchg
mov
xchg
dec
sahf
leave
mov
pushl
jmp
sbb
fstps
mov
mov
or
call
jmp
addl
sbb
xchg
clc
pmulhw
adc
xchg
stc
mov
stos
cmp
inc
push
sbb
ret
rclb
xchg
jbe
lcall
xchg
das
stc
pop
sbb
ds
aaa
sub
cltd
lret
pop
lahf
pop
inc
loope
sahf
cmp
sahf
inc
push
in
icebp
jns
jo
or
lcall
pop
ljmp
jnp
pop
dec
je
popf
mov
pop
pop
and
pop
push
adc
fldenv
push
mov
and
sbb
dec
int3
mov
cmc
jecxz
gs
stos
jns
mov
movb
and
icebp
sub
adcb
outsl
mov
xchg
sbb
daa
push
add
insl
cwtl
jb
inc
pop
scas
inc
cmc
mov
cs
xchg
xor
or
insb
out
test
cwtl
out
imull
jmp
fucomi
xor
push
loopne
in
jne,pn
pop
or
mov
jnp
inc
rcrb
lods
xor
or
mov
pop
shr
loopne
scas
incl
xor
and
inc
ficoms
andb
inc
push
cmp
fcmovb
push
jge
test
lcall
lret
xchg
test
fnstsw
xor
xchg
inc
fcoml
mov
sub
es
enter
imul
jmp
ljmp
add
mov
add
das
stc
loope
pop
inc
jns
aaa
jo
arpl
repnz
sub
in
inc
repz
cmc
out
pop
loope
out
sahf
cwtl
lods
std
loopne
int
sbb
and
push
les
cmp
adc
jp
add
sbb
adc
sbb
sarl
xor
mov
pop
mov
xchg
push
test
pop
add
and
dec
mov
pop
out
cs
lods
fstpt
aam
mov
je
dec
sahf
jnp
cmp
cmc
dec
cmp
pop
adc
in
stc
lcall
mov
pop
fwait
and
das
mov
mov
repz
fidivs
enter
and
push
add
cs
jbe
add
stos
pop
je
int
dec
test
fwait
jp
mov
jmp
test
xchg
std
pusha
push
jecxz
inc
or
out
pushf
or
xchg
pushf
mov
push
pop
loope
push
fldenv
push
fsubs
xchg
xchg
mov
loope
insl
movsbl
decb
add
into
cli
sarl
shll
loopne
test
icebp
sbb
jb
mov
ss
jl
pop
cmpsb
rep
or
ficompl
add
dec
es
mov
arpl
sbb
sub
mov
cmpsl
in
push
inc
stos
and
scas
jecxz
pop
dec
xchg
lock
xor
xor
int3
mov
mov
adcl
push
sub
or
jmp
xor
jno
pop
or
and
mov
mov
lret
lock
dec
test
push
jns
test
jbe
or
mov
add
dec
rorl
aas
push
push
mov
push
inc
scas
arpl
sahf
cmp
jne
adc
call
sbb
xor
out
ljmp
shlb
push
sbb
ja
jae
xchg
shrl
outsb
adc
xchg
cwtl
dec
out
mov
mov
std
pop
or
ss
adc
jle
xor
ud0
subb
xchg
jne
sub
inc
jl
sbb
lea
ffree
insl
pop
lret
sbb
lds
xchg
mov
cmp
cmc
lahf
push
xchg
mov
push
hlt
push
mov
int
adc
repnz
xchg
push
and
mov
sub
int3
test
mov
add
jp
rorl
int
pop
insl
in
adc
shll
sbb
pop
cmp
sub
inc
jl
dec
mov
mov
pop
inc
adc
adc
and
push
sbb
fimull
lds
sarl
add
lds
xor
cmp
sbb
lret
mov
jae,pn
mov
jo
in
dec
jmp
iret
cs
dec
ret
mov
push
lock
bound
js
ficoml
push
mov
bound
pop
mov
icebp
mov
test
mov
pop
mov
lcall
orl
adc
rolb
sbb
mov
iret
push
push
fidivrl
sub
cld
xor
inc
test
xchg
dec
dec
fcomps
std
insl
jno
xlat
push
xchg
stc
dec
stc
mov
ljmp
jbe
xor
cltd
xor
pop
cmp
xchg
fimuls
call
and
fistl
fs
cmpsb
fstpl
cld
mov
inc
sbb
or
in
mov
lcall
push
push
les
icebp
and
mov
add
cli
and
rorb
cmpsl
cmp
cltd
leave
and
iret
lock
push
xor
stos
adc
sub
mov
popf
shlb
pop
insb
loop
cmpsb
lock
mov
mov
in
jl
pop
sbb
sbb
dec
int3
xor
and
cmp
mov
sub
inc
test
cmp
test
mov
mov
and
inc
pop
pop
fbld
pop
inc
push
nop
mov
dec
fwait
push
stos
mov
and
js
or
xchg
subb
jns
loopne
and
aam
jle
mov
sub
mov
nop
add
mov
adc
loope
mov
sub
or
cmp
mov
imulb
mov
cs
ret
mov
rsqrtps
pop
jge
push
jb
adc
push
mov
shlb
xchg
mov
adc
incb
lea
lea
idivb
ljmp
mov
pop
adc
shl
mov
and
or
mov
fsubs
xchg
or
popf
cmc
adc
loop
inc
gs
xchg
or
out
sbb
dec
pop
pusha
inc
push
std
pop
lods
fimull
fdivrp
sbb
fidivl
dec
orb
add
push
mov
add
out
or
leave
nop
inc
stos
add
xchg
lahf
pop
xchg
sar
aas
adc
sarl
movsb
scas
jle
pop
ret
movsl
sbbb
stos
and
xchg
test
jl
les
inc
stos
gs
pop
cs
aad
lcall
xor
jg
loope
clc
push
addr16
movl
pop
mov
fwait
aam
add
cmp
mov
sbb
lahf
jne
or
addr16
jp
xchg
inc
xor
dec
mov
lods
or
xor
call
adc
sub
lock
mov
cmp
xchg
push
hlt
rorl
sbb
icebp
insl
in
mov
ja
pusha
mov
imul
adc
sub
mov
add
pop
xor
fimuls
cli
lcall
xchg
cmpsl
dec
and
pop
cmp
scas
add
daa
or
push
xchg
pop
mov
adc
shlb
sub
mov
xor
jge
jg
stc
pop
adc
or
lea
jecxz
add
xor
push
addr16
mov
pusha
adc
imul
push
mov
mov
sarb
dec
jecxz
mov
mov
push
mov
mov
dec
and
roll
jle
sub
sarl
insl
sub
jns
mov
mov
in
mov
cmp
mov
cli
fldt
sbb
daa
bound
mov
lods
sub
popa
jge
adc
adc
inc
inc
jbe
mov
in
mov
xor
mov
stos
shll
pop
jg
outsl
xchg
xchg
pop
jl
aas
sti
mov
scas
hlt
int3
sbb
push
and
mov
pop
inc
cmc
pop
sarb
test
and
out
mov
sbb
lea
mov
mov
movsb
sub
std
dec
outsb
xor
aaa
cmp
and
jle
cmpb
lahf
fisubl
cli
daa
ret
pop
cmp
or
in
cmp
xor
mov
sbbl
pop
mov
xor
ja
scas
es
or
xchg
out
mov
push
push
popf
xor
push
cmp
xchg
mov
inc
xchg
cmp
jp
sahf
sbb
sbb
clc
idiv
insb
xchg
push
mov
mov
cs
movsb
cltd
test
aaa
jp
mov
movsb
dec
cltd
cli
sbb
dec
xchg
mov
filds
mov
mov
ret
imul
mov
push
clc
mov
jmp
pop
dec
push
fs
mov
jecxz
sub
mov
pop
scas
sbb
ret
push
cs
scas
imul
outsl
sub
ret
ljmp
sbb
xchg
test
jns
mov
cmp
dec
pusha
shrl
mov
cmpsb
xchg
imul
inc
fidivs
and
sub
outsl
xor
pop
popf
push
call
or
mov
cmpsl
bound
call
pop
jbe
inc
int3
or
loope
inc
mov
sbb
adc
pop
adc
test
lret
push
xlat
dec
cmp
pop
es
shrl
adc
ja
xchg
shrb
mov
sti
mov
jne
pop
mov
jge
jg
arpl
mov
andl
flds
jecxz
pop
mov
mov
mov
cmp
iret
mov
push
std
and
adc
rep
js
jp
xor
sbb
test
int3
dec
outsl
sub
mov
int3
fcoml
imul
mov
mov
cltd
or
adc
dec
add
sbb
mov
js
pop
je
add
std
bnd
jbe
and
scas
xchg
rcrl
jns
and
cmp
inc
cmp
pop
scas
lret
add
movsl
les
mov
rcll
dec
push
test
jo
ja
in
fildl
inc
insl
in
enter
jo
fs
icebp
xchg
aad
int
xlat
es
mov
mov
pushf
pop
mov
ljmp
and
lds
add
das
xchg
adcb
dec
sub
outsl
cmp
xor
jne
movsb
add
pushf
hlt
out
xchg
mov
or
add
cld
cwtl
cmp
lea
xor
mov
insl
pushf
cwtl
loop
mov
push
negb
inc
mov
mov
mov
jp
out
xchg
ss
daa
fldt
mov
andl
aad
dec
pop
inc
add
mov
add
add
xchg
sub
push
stc
xchg
inc
xchg
out
cmpsb
jg
mov
out
enter
pop
aad
fldlg2
mov
mov
scas
nop
inc
mov
or
ss
mov
aaa
mov
shlw
inc
mov
or
mov
xchg
aas
lcall
pop
fldl
mov
or
cmp
fstpl
push
stc
add
cmp
outsb
jns
and
jmp
lods
loopne
dec
mov
push
inc
sub
in
xchg
pusha
mov
jl
scas
mov
push
mov
or
dec
jo
push
push
popf
lods
xor
arpl
subl
push
icebp
and
ret
adc
jne
mov
out
mov
jno
xorl
aad
fs
add
in
jno
add
xchg
xor
cwtl
outsl
dec
push
jecxz
ror
add
cmp
js
mov
scas
mov
push
jecxz
jno
mov
push
mov
test
imul
shll
push
mov
push
push
mov
addr16
test
xor
mov
popf
dec
rcll
test
or
mov
mov
push
jp
pop
sub
lahf
mov
mov
jne
cmovnp
mov
sbbl
mov
add
push
cwtl
mov
or
int
js
es
mov
push
dec
dec
xchg
sti
lds
stos
mov
rol
jns
iret
pop
dec
dec
xor
mov
mov
int
and
cltd
roll
inc
pop
es
add
and
pushf
inc
lock
pop
xor
jo
fdivrs
addr16
mov
or
ss
fildl
fildl
xor
aam
orl
js
dec
and
loope
fwait
xor
dec
ja
sti
out
mov
repnz
inc
and
adc
cmp
cltd
aad
int3
gs
cmp
mov
js
or
jecxz
stc
loop
push
sahf
xchg
repz
add
or
std
lahf
stos
mov
and
cmpsl
push
jmp
leave
insb
push
mov
xchg
data16
ret
rcl
rorl
test
xchg
jne
push
jle
gs
adc
or
insl
or
pop
add
mov
xchg
dec
inc
mov
test
jns
or
movsl
ss
fiadds
fmull
mov
out
ja
imul
dec
js
or
sbb
cmpsl
mov
stos
ljmp
adc
frstor
or
gs
fldenv
arpl
mov
inc
rcl
inc
mov
xchg
imul
xor
xlat
xchg
dec
lret
leave
mov
bound
sub
pop
les
sbb
pop
rcll
adc
sbb
shrl
loopne
or
mov
cld
pop
cmp
lods
in
sub
mov
test
mov
sub
in
add
sub
add
imul
fcoms
xor
or
push
add
or
orb
or
jmp
adc
mov
mov
jo
out
and
sbb
lea
dec
cwtl
sti
movsl
fcmovnbe
dec
ja
sbb
in
pop
mov
cld
sub
ljmp
fldt
dec
jae
shlb
mov
xlat
cltd
not
cmp
dec
cmp
ret
dec
andl
mov
xchg
xlat
das
push
sub
inc
ds
push
and
fs
aaa
stc
pop
mov
cld
dec
mov
js
inc
loopne
push
jb
push
and
inc
sub
push
aas
lods
push
mov
sahf
psubusb
ja
fidivl
mov
aam
outsl
and
rcll
mov
mov
call
movsl
in
sbb
out
mov
cli
push
nop
mov
or
xchg
add
pop
pop
sbb
xchg
sbb
imul
sbb
movsl
rcrb
stos
dec
aas
jecxz
lods
cltd
dec
sbb
pop
mov
ja
jnp
gs
push
jbe
jns
loope
push
fs
mov
xor
xchg
xor
loope
mov
dec
xor
xchg
into
jbe
mov
cmp
fisttps
mov
nop
or
mov
inc
jbe
faddl
outsb
xor
mov
arpl
jmp
movsl
in
push
in
mov
cmp
cmc
xchg
stos
inc
inc
in
mov
addr16
cld
dec
inc
pop
inc
call
lods
sub
out
and
les
inc
xchg
cmpl
test
imull
inc
sub
leave
int3
pop
push
ret
add
testb
bound
aad
mov
aas
dec
sarb
add
inc
dec
jne
popa
mov
adc
es
fstpl
mov
xor
or
cmp
fisubrs
addr16
pop
xor
iret
pop
lods
imul
jns
xor
nop
jne
sbb
test
push
pop
loopne
sbb
xor
or
push
pop
rorb
cli
aam
jne
fsts
cld
outsl
outsl
sub
das
mov
loope
in
fbstp
mov
sahf
arpl
lcall
add
jbe
icebp
mov
sub
jnp
out
add
push
dec
or
inc
rcll
add
in
xor
in
ds
and
jge
mov
xlat
push
and
cli
cli
insl
pop
aad
in
mov
ja
dec
das
fcom
xor
mov
out
fists
or
xor
cmc
xor
stos
outsl
cltd
lock
stos
or
sub
dec
and
stos
cltd
les
dec
std
jbe
push
bound
jp
dec
ljmp
fadds
cmp
push
stos
test
and
arpl
aas
ss
push
lcall
sub
lret
cltd
icebp
xlat
and
xor
inc
pusha
shll
push
test
fdivs
cwtl
sbb
pop
and
push
ficoms
jp
or
out
adcb
out
push
scas
push
mov
mov
pop
cmp
popf
fstl
das
push
push
test
xchg
std
rcrl
cli
add
aam
inc
add
outsb
mov
pop
out
loopne
or
ss
mov
movsb
sub
push
mov
movsb
pop
lock
stc
mov
pop
jb
cmpsb
dec
push
gs
in
hlt
outsl
mov
movl
mov
test
push
mov
dec
scas
or
or
lds
and
adc
and
pop
fimuls
push
int
shlb
dec
push
jno
jle
out
mov
divb
insb
adc
je
out
ds
mov
sahf
mov
jge
dec
or
add
sbb
pusha
jl
jecxz
mov
mov
inc
shl
scas
das
es
add
fbld
lahf
mov
nop
inc
daa
fidivrl
mov
push
pushf
data16
out
pop
mov
add
push
fwait
ljmp
add
mov
outsb
scas
push
imul
aad
mov
lret
fdivs
push
inc
push
sub
mov
cmp
mov
xor
or
or
lods
cmp
xor
dec
push
loopne
in
mov
leave
xchg
pop
dec
popf
xchg
enter
add
cld
mov
or
movsl
testl
mov
lcall
xchg
mov
outsl
xchg
mov
stos
mov
or
mov
add
les
sub
push
loop
xchg
ljmp
mov
add
adc
repz
adc
sarb
inc
jmp
pop
pop
out
lcall
mov
cmpsl
xchg
dec
jbe
lcall
xchg
mov
rcl
pusha
nop
rcrb
or
xchg
sub
ret
ss
aam
stos
enter
dec
scas
push
xor
xchg
dec
lock
pop
rol
mov
adc
popf
push
decl
enter
leave
add
xchg
add
mov
xor
sbb
pop
push
push
cmpsb
adc
ljmp
clc
leave
mov
fadds
pushf
push
adc
and
lock
insl
in
mov
loop
sbb
rcl
out
int
push
xlat
cld
add
inc
out
scas
mov
jne
jo
cmpsb
inc
mov
jg
mov
dec
jno
popa
adc
inc
xchg
sbb
imul
jmp
mov
jge
sub
loope
loopne
and
fstps
dec
fs
pop
mov
mov
in
pop
sahf
cli
pop
or
int3
pop
inc
movsb
sbb
pop
arpl
mov
test
mov
out
movsb
lds
push
lea
mov
andl
lcall
inc
xor
sbb
push
gs
aas
mov
xchg
mov
adc
out
testl
sub
je
movsl
shll
jg
cwtl
mov
mov
mov
and
mov
lahf
in
inc
push
cmp
movsb
mov
mov
push
ret
in
std
pop
sub
push
push
mov
mov
int
dec
push
cli
popf
mov
push
in
daa
test
fcoms
mov
cmp
sub
sbb
mov
inc
lahf
sub
lret
mov
mov
push
shlb
cwtl
mov
cmp
add
adc
icebp
xchg
loop
add
ds
mov
mov
pushf
push
int3
repz
lcall
xor
dec
sub
pop
divb
jmp
test
inc
xlat
jns
mov
in
mov
cmp
mov
pushf
push
add
jg
cmp
insl
jbe
pop
arpl
sbb
mov
xchg
das
pusha
aas
xchg
sbbb
add
sbb
into
jae
adc
sub
fcmovbe
mov
and
shrb
xchg
and
push
ret
shl
sbb
push
cmpsb
xchg
cmp
sbb
sbb
mov
aam
mov
push
aaa
xchg
jns
out
jp
in
ret
cmp
cmp
sbb
in
into
sbb
push
pop
ret
xchg
inc
cmp
cmp
into
cltd
jbe
xchg
data16
xchg
or
pop
cld
cmp
sbb
dec
adc
mov
cltd
cmpsl
jl
xor
jno
dec
in
fwait
mov
cmp
fdivrs
lods
enter
inc
jmp
push
mov
jmp
xchg
cli
in
loop
adc
mov
popa
adc
fistpl
flds
sbb
out
push
jmp
out
aad
std
jge
shlb
dec
mov
mov
rolb
mov
stos
shll
out
lret
stos
xchg
add
mov
cltd
jo
cli
dec
xor
mov
and
hlt
cmp
inc
push
lret
sub
test
test
lock
mov
popf
adcb
xchg
and
sbb
rcl
int
fistpl
mov
jae
dec
xor
push
dec
shr
sbb
jge
xor
cmpsl
stos
fstpt
add
xorb
fcmovb
xchg
lods
fwait
mov
pop
jmp
pop
sarb
in
mov
push
and
xchg
add
fidivl
mov
inc
stc
jge
das
dec
jno
shlb
shll
filds
push
mov
push
cmc
fwait
jl
sub
aam
push
and
scas
out
lcall
fdiv
loopne
sti
rcrb
and
mov
push
and
sub
mov
pop
push
jb
xchg
cmpsb
pushf
mov
in
mov
sbb
mov
sbb
je
addr16
fldenv
xor
out
and
jge
push
in
push
ret
std
xor
daa
push
push
clc
fildl
cs
xchg
sub
mov
push
cmp
mov
or
adc
jnp
and
xchg
lcall
adc
stos
dec
outsb
orl
ret
aas
popa
jecxz
inc
xor
daa
call
mov
jl
add
and
imul
xchg
push
sub
rol
and
ljmp
in
and
jl
dec
data16
sahf
push
pushf
fs
rorl
push
popa
cmp
sbb
mov
cmp
mov
jne
lock
insl
lods
cld
repz
push
inc
and
xchg
adc
loop
jno
fwait
xchg
cltd
es
dec
cmp
adc
das
ljmp
es
hlt
sbb
mov
lods
mov
adc
mov
lret
scas
push
mov
arpl
inc
test
cmp
or
push
sub
mov
mov
jl
push
roll
dec
mov
out
mov
dec
jnp
add
into
jle
cmp
jno
loope
dec
ret
and
pop
arpl
shll
add
rorl
or
imul
mov
mov
mull
cmp
mov
test
cmp
cwtl
mov
mov
inc
mov
dec
scas
inc
cld
aaa
inc
pop
push
enter
fdivl
mov
dec
adc
dec
push
pop
sub
fnstenv
mov
loop
loope
ret
jg
in
cmp
fmul
jmp
into
aad
mov
add
call
imul
push
pop
lds
pop
hlt
inc
or
push
pop
call
into
dec
std
loop
ja
repnz
xor
adc
cmp
test
pop
shll
xchg
lahf
leave
cmpsl
adc
jge
dec
jb
push
cmp
lret
dec
sbb
test
pop
leave
scas
lahf
cmp
test
jbe
inc
lods
fisttps
adc
push
mov
jae
movsl
inc
mov
adc
cld
fwait
in
sub
mov
jnp
jbe
outsl
int
inc
test
push
push
in
shll
fisubrl
cwtl
adc
xor
pop
fs
bsf
mov
sti
enter
add
mov
push
adc
sbb
mov
aam
fisubrl
andl
add
jle
sbb
mov
inc
pop
cmp
push
jmp
dec
pcmpeqd
es
loope
or
enter
dec
cs
into
das
xor
dec
mov
lea
mov
roll
int
mov
push
cmp
xor
enter
ficomps
jp
rorl
insb
cmp
into
and
mov
mov
push
leave
adc
rolb
push
xchg
adc
rclb
pop
je
loope
adc
push
mov
inc
pop
adc
jecxz
push
in
xchg
int3
push
inc
aad
cmpl
sbb
or
in
xchg
aam
clc
add
push
or
sub
dec
mov
fs
rcll
js
lahf
mov
sbb
into
xchg
in
out
loopne
movsb
cltd
je
sub
fldl
inc
dec
jb
mov
data16
stos
sub
sub
or
or
insb
sub
repz
jnp
jae
jl
pop
mov
test
pop
or
popa
push
and
push
jnp
cld
fdivl
jno
cmp
jp
adcl
mov
lret
jmp
aad
jbe
fcoms
sub
mov
mov
aam
push
sbb
cmpl
icebp
dec
mov
lahf
data16
inc
or
sbb
pusha
jnp
fisttps
andl
cmp
out
sbb
sahf
push
arpl
add
xor
push
pop
gs
and
cmc
enter
add
and
mov
sub
jmp
xchg
mov
in
mov
repnz
out
lahf
sub
inc
fmull
and
fs
or
mov
ljmp
inc
jb
les
test
cmp
push
loope
scas
and
mov
dec
repnz
xor
loop
mov
and
push
daa
pop
test
sub
pushf
lods
bound
ja
pop
or
cmpsb
les
inc
sahf
sub
aaa
in
add
xorb
pop
shl
lcall
push
movsb
popf
dec
jb
xor
nop
daa
pop
sub
cltd
push
aaa
sbb
push
outsb
sub
or
xlat
movsb
lods
xchg
int
cmp
ljmp
inc
fwait
mov
nop
xor
call
scas
lret
test
pop
push
mov
sub
inc
inc
sti
mov
and
loope
adc
adc
lret
sbb
jmp
fisubrs
ja
cmp
xchg
cmp
mov
imul
fadd
push
cmpsb
inc
jecxz
dec
inc
cltd
sub
dec
xlat
mov
lahf
test
leave
in
or
insb
ficoml
mov
push
and
xchg
pop
or
inc
fs
rcrl
test
es
sub
je
sbb
das
and
mov
mov
test
cmp
add
jo
pop
push
rcrw
sub
dec
nop
inc
idivl
adc
mov
out
addl
sbb
sub
dec
outsb
sahf
stc
ficoms
pop
shrb
inc
pop
sub
es
mov
jg
adc
in
mov
movsb
adc
xchg
mov
scas
push
js
and
rclb
lcall
idivl
cmc
push
cmp
sub
jnp
dec
insl
add
inc
mov
add
xor
lahf
pop
sub
sarl
faddl
je
cmp
lods
dec
sub
push
pop
into
sbb
adc
xchg
cmp
stos
jo
mov
gs
lret
cmpsl
adc
insb
and
ret
lods
ja
lcall
jno
pushf
scas
test
xchg
cmpsb
outsb
push
outsb
push
scas
call
lds
out
fistpl
xchg
xor
jbe
sbb
cmpsb
inc
inc
fmull
lret
add
ja
hlt
dec
scas
stos
cmp
cltd
enter
cmpl
xor
fdivl
push
sub
sbb
icebp
inc
mov
jmp
inc
into
pop
and
push
adc
int3
clc
xor
fcmove
lods
pop
negl
subl
dec
sar
data16
imull
imul
fisttpl
and
orl
das
xor
jp
and
hlt
jg
shrl
call
in
outsb
pop
sub
ljmp
mov
or
std
cmp
push
push
and
pop
xor
or
movsl
andb
cli
enter
daa
push
loope
dec
aam
dec
jo
int3
sahf
leave
ss
mov
sbb
push
imul
xorl
cmc
pop
shlb
pop
pop
sbb
out
sbb
jns
push
in
popa
ret
sub
inc
mov
repnz
out
mov
or
call
cmc
pop
orb
adc
sarb
bound
adc
cmp
xor
cs
pop
dec
pushf
data16
fs
push
fwait
lea
addb
xlat
jb
insb
loope
cmpb
mov
adc
addl
scas
insl
or
inc
or
loope
dec
mov
dec
sbb
es
mov
sti
lret
lret
sahf
ret
test
ret
sti
dec
mov
mov
stos
ds
xor
gs
adc
dec
jo
clc
mov
and
jae
repnz
popa
mov
push
push
repz
xchg
aam
iret
dec
les
popa
lock
out
ficoml
cmpsb
or
push
xor
lahf
xchg
cmp
mov
jge
or
aaa
fdiv
sti
inc
push
pushf
inc
js
pop
add
test
scas
jg
push
fsubl
jns
pop
scas
cwtl
subl
cwtl
push
neg
push
filds
pop
jno
cwtl
iret
xor
iret
mov
imul
push
or
mov
xor
xchg
fdivrs
jo
mov
decl
xor
adc
jnp
push
mov
loop
adc
arpl
outsb
rorl
dec
xchg
cmp
xchg
xchg
dec
gs
and
and
jbe
sbb
dec
daa
xchg
aam
sahf
mov
dec
push
pop
lahf
sbb
popa
bound
pushf
mov
adc
sub
daa
jb
outsb
add
daa
fistpl
jge
invd
jns
stc
push
push
or
int3
jbe
loopne
and
sub
pop
mov
inc
out
push
in
adc
jns
push
enter
mov
clc
mov
jge
push
xchg
inc
cmp
incb
insl
out
cmp
loop
pop
mov
mov
neg
dec
leave
sbb
enter
movsl
in
in
movsl
push
or
cwtl
lahf
jnp
jge
scas
rcrl
call
push
outsb
push
mov
pop
movsb
loopne
int
movsl
xchg
sub
cmp
inc
std
push
lods
jns
lds
cmp
add
push
push
mov
outsb
xor
xor
lcall
hlt
inc
fwait
data16
pusha
pop
push
add
mov
andb
pushf
addr16
imul
sbb
cmpb
mov
in
add
mov
jmp
test
xchg
jbe
stos
cmp
stos
xchg
shll
and
ret
pop
loop
in
xchg
fmuls
pop
xor
dec
repz
outsl
data16
les
insb
aad
xchg
push
xor
ret
dec
stos
pop
push
mov
xchg
iret
jp
jle
addr16
movsl
xor
push
fiaddl
mov
imul
aaa
out
push
push
dec
inc
in
pushf
ret
call
aad
mov
adc
inc
dec
arpl
adc
xchg
imul
es
jge
sub
xchg
imul
jmp
cmp
push
nop
and
xchg
ljmp
fldt
add
lret
popf
add
mov
sbb
sbb
loope
push
cmp
ss
xor
sub
mov
sbb
out
and
cltd
fistps
xor
mov
adc
and
sbb
js
les
outsl
mov
es
xchg
fwait
mov
hlt
shr
push
adc
or
lret
fimuls
add
or
and
jno
add
popf
inc
sub
repz
in
in
insb
fcmovnbe
adc
je
mov
lds
jl
popa
in
pop
aas
xor
cs
daa
mov
sbb
dec
shr
call
std
je
test
nop
push
mov
add
lods
pop
push
xchg
out
lret
sub
or
icebp
add
pushl
inc
fxch
daa
aas
pusha
cmp
push
mov
sbb
es
movsl
aaa
in
adc
dec
add
je
aaa
sbb
cmc
pop
vdivss
dec
mov
pusha
sub
sbb
xchg
lret
aas
paddd
sbb
xchg
jb
int
pop
lcall
inc
notl
or
pop
daa
cmp
push
loopne
mov
mov
fists
pusha
dec
shlb
xchg
imul
inc
jmp
mov
push
hlt
aad
mov
call
pusha
push
adc
mov
faddp
mov
pop
arpl
lsl
nop
movsb
js
clc
xor
sub
cs
hlt
mov
test
jb
push
lcall
cmp
mov
dec
adc
jno
aas
loopne
pushf
jno
xchg
add
imul
adc
inc
enter
scas
push
add
loop
push
mov
hlt
sbb
lret
aad
jo
push
outsb
push
in
pop
jl
stc
insb
push
fnstenv
adcl
cltd
ret
pop
in
clc
dec
stos
enter
pop
cltd
pop
imul
aad
cmpsb
mov
test
in
pop
js
lods
testl
pop
movsl
in
cmp
and
stc
enter
cmp
xchg
and
push
cmpsb
jmp
stos
test
popa
icebp
outsb
jns
test
inc
call
adcl
or
iret
jo
rol
insb
pop
gs
insl
sbb
adc
ret
push
int
push
dec
pop
aad
inc
and
int
into
cmpsl
cltd
stc
sub
int3
mov
clc
mov
or
fnstsw
sub
cmc
adc
jecxz
out
jp
in
fistps
imul
out
aam
cmp
iret
mov
es
outsb
loopne
xor
dec
scas
pop
repz
mov
jbe
and
pop
imul
sub
adc
cmc
add
testl
adc
push
icebp
xor
mov
mov
idivb
cmc
fstpt
lret
dec
add
clc
jb
imul
adc
jb
pop
loop
and
xor
bound
ficoml
ret
sub
mov
mov
pop
pop
push
jbe
adc
int
pop
popf
push
xchg
stos
mov
fcoml
adc
inc
pop
adc
mov
je
rcll
mov
ret
sub
or
cmc
dec
movsl
rcrl
int3
ds
xchg
adc
psraw
ret
jg
dec
dec
dec
jp
js
push
nop
in
sahf
inc
jbe
out
or
insb
jg
dec
dec
fwait
mov
lods
leave
in
sahf
fldenv
popa
jmp
push
popf
cmp
mov
div
ss
sbb
push
pop
fs
lcall
lods
push
fisubl
cmp
cli
inc
outsl
fs
stos
or
pop
xchg
out
cmpsl
outsl
repz
mov
cltd
push
mov
inc
stc
jo
sti
mov
jne
js
dec
cmp
push
xor
pop
jg
xchg
mov
out
data16
das
push
mov
mov
push
push
push
cmp
js
lock
mov
sub
movsl
xchg
in
aas
xlat
rcrl
push
dec
cli
lds
xor
lahf
xor
xor
sbb
rcr
push
mov
pop
inc
in
push
inc
loop
mov
mov
int3
fisubl
xchg
arpl
lea
ljmp
rorl
dec
adc
in
dec
leave
inc
inc
fbld
outsb
inc
arpl
sar
mov
int
push
inc
pusha
aad
dec
mov
cli
pusha
add
xchg
nop
in
mov
enter
inc
ss
lds
jne
popa
pop
pushl
xchg
jo
jbe
cli
pop
pusha
mov
sbb
dec
lea
push
cs
push
insl
imul
scas
sub
imul
shl
push
call
shll
jmp
push
leave
pop
dec
push
aaa
xlat
adcb
les
into
roll
dec
insb
fmulp
dec
icebp
xchg
out
inc
push
scas
movsl
cmp
mov
pop
ja
mov
adc
aam
and
ret
mov
sbb
bswap
or
jb
ja
lods
ja
aaa
sub
and
adc
cs
das
loop
adc
shrb
dec
push
lods
jl
pop
aam
add
mov
ret
cmp
mov
aad
jae
sub
cmp
insb
push
adc
test
jnp
insb
xor
gs
inc
cmpsb
cmp
imul
xchg
xlat
lahf
pop
movsl
sti
pop
mov
and
ja
sbbl
mov
cmp
fadd
push
sti
js
and
jno
mov
loope
frstor
out
movsb
mov
or
xor
hlt
lahf
daa
pushf
in
or
pop
mov
loope
lods
sub
push
ds
test
addl
xchg
jae
pushf
sbb
lret
sti
arpl
mov
inc
subl
bound
shrb
mov
cmp
out
mov
mov
mov
fs
mov
inc
sub
fstpl
mov
sbb
lds
mov
aam
decb
xchg
pop
pushf
xor
fstps
mov
rol
andl
jb
in
pop
aaa
insl
xor
call
sbb
test
cmp
pushf
leave
test
pop
sub
jo
cmp
cmp
pop
adc
mov
and
and
jne
int
mov
adc
es
dec
cmpb
ret
repz
hlt
push
push
mov
mov
cltd
insb
and
lahf
out
pop
adc
sbb
roll
leave
ja
outsl
sti
stc
adc
jecxz
xor
mov
in
sub
js
loope
loope
adc
insl
icebp
rol
xor
rcrl
ss
cltd
idivb
in
popa
xor
mov
mov
aaa
jno
shll
pop
push
in
inc
into
or
imul
sub
add
dec
adc
ss
imul
ja
leave
arpl
pop
dec
rep
leave
lods
cld
sbb
scas
sbb
hlt
mov
in
xchg
push
adc
popa
leave
out
mov
pop
mov
dec
pusha
xor
popf
fiadds
cmp
lret
fcomps
fisttpll
xor
inc
out
xchg
mov
adc
and
outsl
jo
xchg
push
add
outsb
daa
out
sbb
stc
xchg
dec
jle
fmull
mov
fstpt
bound
pop
mov
fldl
xor
repnz
adc
loop
lea
jl
dec
insb
push
fstl
jl
xchg
and
in
jno
and
mov
out
mov
mov
mov
pop
jl
pusha
mov
rorb
jno
mov
dec
ss
in
xchg
mov
mov
mov
loop
jl
mov
wrmsr
jae
inc
jmp
dec
cmp
dec
push
push
inc
cltd
mov
mov
and
mov
mov
stc
sarl
shrl
scas
or
fs
loopne
ret
cmpsl
pusha
xchg
js
ret
mov
insl
xor
lea
xchg
mov
test
pop
dec
cmpsb
call
pop
or
pop
lods
add
mov
js
sub
mov
sub
push
xor
push
cli
sarl
adc
test
loopne
adc
lret
cmpsl
cmp
mov
fidivs
pop
push
sub
xlat
add
pushf
flds
ja
pushf
lods
jnp
sub
cmpsb
mov
push
lcall
cmpb
xchg
ret
pop
test
stos
sbb
mov
dec
xor
push
push
data16
cmpsb
jne
cwtl
pop
xor
xchg
jle
adc
push
mov
fsubl
out
fwait
rorl
cmp
lret
sti
ja
xor
jns
inc
cli
fsub
shr
sahf
inc
scas
add
xchg
mov
js
xchg
mov
mov
fs
mov
psrld
pop
iret
or
dec
stos
pop
cmp
or
jno
pusha
leave
js
mov
cld
pop
and
ljmp
fmull
sub
loope
jae
pop
mov
xchg
rcll
jne
jge
inc
pusha
in
adc
movsb
inc
add
jecxz
cwtl
push
gs
iret
sar
lods
mov
inc
iret
sub
jmp
pushf
pusha
popf
mov
bound
push
pop
xchg
pop
addr16
mov
add
je
fwait
js
mov
aam
add
cli
or
mov
rcll
out
enter
sub
out
cmp
sahf
or
jp
hlt
dec
cmp
ss
js
xor
hlt
std
outsb
stos
push
or
jno
stos
fucomip
test
lret
dec
sub
xchg
xchg
ds
push
das
test
jo
lea
ss
mov
cmc
in
aas
jecxz
fbstp
leave
dec
pop
shlb
add
sbb
cmp
inc
cmp
jo
dec
or
lahf
imul
adc
mov
mov
and
aam
ror
cmp
in
mov
inc
hlt
insb
xlat
push
and
stc
scas
mov
xor
aad
gs
bound
cltd
fdivr
lea
daa
jnp
adc
xchg
pop
xor
popf
jae
rcll
jp
or
sbb
lds
xlat
pop
sbb
xchg
fstpl
push
scas
mov
mov
imul
jnp
adcb
dec
xchg
xor
adc
lahf
inc
aad
add
adc
sub
std
add
rol
cmc
push
out
mov
stos
pop
dec
jnp
lods
lret
push
je
aam
push
xor
test
push
inc
or
mov
fmul
sub
or
pop
xchg
inc
lahf
or
out
inc
pop
mov
addr16
test
bound
lret
ss
outsb
lahf
call
das
lock
and
xchg
into
es
pop
rcll
jo
xor
jl
call
aam
inc
stos
push
ficoms
sbb
push
xchg
je
into
jno
xor
into
lcall
int
mov
popf
movsb
xor
push
pop
call
add
sahf
jne
xor
xchg
pop
mulb
dec
insl
mov
or
add
jns
popa
and
int3
jl
dec
xchg
sub
push
sbb
sub
xchg
push
or
mov
inc
imul
fistl
stos
imul
pop
sub
popa
aaa
xor
mov
mov
fidivl
sbb
lods
fst
sbb
inc
push
mov
aam
addl
inc
inc
cmovb
mov
xchg
shlb
loopne
lret
add
or
xor
outsb
add
mov
fwait
nop
ficompl
gs
popa
mov
jbe
mov
les
inc
xchg
or
or
jae
xor
outsl
and
sbb
js
shll
dec
call
mov
xchg
pop
movsb
popf
jecxz
xlat
pop
dec
in
sub
push
xor
adc
push
mov
cmp
jo
jle
dec
loopne
adc
loopne
xor
ret
jp
dec
dec
mov
data16
lock
sub
repnz
mov
cld
or
ds
ficoms
sti
popa
gs
dec
jl
cli
push
ljmp
inc
mov
shl
loope
movsl
dec
fldcw
or
add
jb
pop
test
stos
xchg
mov
movsb
mov
and
xchg
adcl
lahf
iret
cmp
fistpll
aam
lahf
lds
xchg
xchg
insb
dec
inc
fnstenv
sub
jmp
sbb
cmc
sbb
fstps
adc
mov
jg
sar
mov
cmp
out
ret
in
arpl
ds
std
xchg
pop
dec
mov
jl
xor
pop
ret
push
repnz
es
add
inc
cmp
sub
mov
inc
mov
adc
mov
arpl
pop
jne
pop
xchg
insb
pop
cmp
adc
mov
inc
aad
scas
xor
js
or
add
ss
push
xchg
das
outsb
cmp
mov
mov
mov
nop
lock
fcompl
ds
rcrb
inc
jge
pop
cmp
scas
push
sbbl
test
ret
repz
dec
subb
mov
cmpsb
inc
clc
adc
pushf
adc
test
lds
sbb
or
stc
xor
adc
mov
es
test
loope
mov
cmp
je
test
lock
xor
ljmp
pop
push
cmp
add
push
aaa
and
mov
aaa
test
pusha
mov
sub
and
xchg
xchg
push
push
inc
and
mov
je
lret
insb
pop
insb
adc
mov
mov
icebp
xchg
arpl
sbb
inc
push
stos
and
daa
xchg
mov
mov
repnz
xchg
push
pop
dec
adc
movsl
mov
pop
adc
or
xchg
pop
ret
pop
pop
mov
mov
jl
sar
nop
lret
imul
mov
scas
mov
xor
add
rol
loope
test
add
pop
pop
pop
in
inc
pushl
jle
xor
scas
inc
jg
nop
cmp
addb
add
inc
and
sbb
push
stc
mov
lcall
inc
into
lock
lock
clc
cli
or
int
lods
push
outsl
pushf
push
vmovq
jge
jge
test
mov
in
cmp
cmp
imul
mov
pop
std
xor
mov
fcomps
insl
xchg
adc
jmp
pop
das
pusha
mov
and
jo
lods
jb
outsl
cld
xchg
fs
repz
jle
leave
shll
shlb
mov
mov
fwait
imul
jno
fwait
adc
jecxz
cltd
xor
shlb
inc
gs
stos
push
cmp
stos
sbb
fwait
and
inc
or
inc
mov
aam
cmp
out
lret
xchg
lock
movsl
jle
mov
mov
push
insb
cmpsb
scas
out
adc
hlt
mov
dec
aam
orl
sub
popa
sub
mov
pop
dec
pop
sub
sbb
out
stos
sub
jp
inc
xchg
xchg
fsts
cltd
lods
cmp
fs
add
push
subb
push
cmp
int3
cmp
cs
sbbb
mov
inc
jl
push
test
ljmp
sbb
add
sbb
insb
fidivrl
push
into
mov
outsb
mov
pop
mov
movsl
addb
xchg
js
push
out
pop
jae
js
add
pop
cwtl
xchg
xbegin
push
sbb
cmp
sbb
int
lds
inc
inc
popf
outsb
add
jl
jnp
movsl
xchg
imul
in
in
mov
sbb
nop
cwtl
fdivl
arpl
imul
adc
mov
rcrb
pop
mov
cwtl
mov
subb
aas
aam
lds
dec
mov
mov
mov
push
pop
mov
dec
in
sbb
push
aad
out
adc
lcall
push
jge
aam
xlat
mov
daa
push
test
lods
mov
in
icebp
into
mov
sbb
and
fs
fsubrs
sarl
aad
push
dec
lahf
lret
lcall
iret
int
mov
jno
cmp
lret
cmp
ficoms
into
bound
int
jne
das
subl
add
pop
cmpsl
xor
aas
inc
sbb
loope
in
cmp
mov
cmp
pop
push
push
mov
dec
xchg
rol
insb
dec
adc
lcall
push
icebp
stos
test
and
bound
jge
nop
pushw
ds
call
out
loope
out
xchg
lock
xchg
jle
jnp
jp
mov
enter
shlb
adc
sahf
rol
outsl
xor
push
lret
dec
inc
jge
push
xor
and
inc
sbb
cs
pop
call
mov
and
xchg
std
pop
out
dec
insb
mov
sbb
bound
lret
fistpl
cli
jb
dec
filds
adc
xor
add
aam
cmc
dec
leave
fiadds
push
stc
cmp
lods
std
jp
sarl
movsl
les
lods
xlat
clc
fwait
mov
mov
outsl
jmp
jg
sub
pop
mov
pop
insb
out
jg
les
dec
jecxz
dec
fcmovnbe
and
lret
out
dec
pop
fcmovne
lods
imul
mov
mov
adc
loop
xchg
xlat
pushf
pop
das
pusha
inc
or
adcl
aad
sub
jbe
cld
add
ret
fstl
in
inc
sub
sbb
cmp
inc
add
repnz
xchg
adc
sbb
lods
xlat
adc
mov
sub
sti
sbb
aad
repnz
aaa
shr
aad
adc
cltd
push
orb
cmp
mov
mov
and
aam
dec
pop
stos
test
icebp
and
mov
adc
aaa
sub
aam
repz
lods
jae
fs
jecxz
add
daa
inc
ret
ja
loope
push
xorl
ret
dec
push
cs
scas
cmp
pop
jl
outsl
lods
ret
mov
fcmovnb
ret
mov
jae
call
fadd
hlt
daa
pop
fxch
ficoml
cld
fsts
mov
pop
test
xchg
loopne
push
out
int3
push
fadds
aaa
xor
in
aam
sub
mov
cwtl
ret
sahf
dec
lods
add
arpl
push
shlb
ss
xor
jge
shlb
or
outsb
stos
add
pop
dec
ret
loopne
ja
out
test
rolb
aam
dec
insl
push
sahf
add
xor
and
mov
inc
je
sbb
repz
stos
js
push
push
cmp
xchg
mov
jns
pushf
dec
jmp
xor
mov
ficoms
fwait
inc
xlat
test
iret
cmpl
pop
push
mov
sub
pop
sub
cmp
ds
ds
std
add
in
cmpsb
ljmp
hlt
popf
jnp
mull
mov
mov
iret
in
and
pop
jno
add
push
sahf
cmp
mov
and
aas
xlat
push
leave
adc
into
xchg
rorb
lret
mov
movsb
or
addr16
jnp
pop
sub
seta
pop
jmp
insb
xor
xchg
loop
aaa
rorl
cmpsl
push
jae
test
xlat
psubq
outsb
adc
ds
dec
adc
adc
outsl
add
mov
idivb
pop
adc
pop
test
sub
enter
mov
fldt
mov
cld
mov
xchg
jnp
mov
mov
ds
fisttpl
pop
mov
inc
jnp
and
hlt
loop
test
push
je
sbb
je
test
xor
ss
icebp
mov
push
cmp
jbe
decl
mov
in
xchg
cmp
rcl
js
add
xchg
rcl
loopne
stos
push
push
in
mov
jo
push
popf
int3
call
fcom
daa
int
mov
xchg
xchg
xchg
fcompl
mov
jb
mov
mov
fisttps
sbb
lods
jno
ret
aas
xchg
sbb
mov
mov
xchg
sbb
sbb
hlt
nop
aas
jmp
js
xor
fldt
gs
jecxz
mov
cld
out
mov
jb
and
aaa
cmpsb
movsl
inc
push
or
in
xchg
inc
das
xchg
mov
cli
adc
ret
cmp
arpl
lcall
rcrl
test
jmp
push
clc
inc
stc
mov
mov
jle
loope
adc
xchg
subl
pop
push
mov
or
or
dec
jecxz
sub
mov
dec
rcrb
test
push
lahf
rcll
inc
pop
neg
push
jmp
pusha
jecxz
xchg
loop
mov
sbb
sbb
inc
pop
jl
xor
dec
jne
lret
sti
push
fwait
pop
dec
jl
mov
loop
cmp
test
loope
data16
xor
out
sbb
aaa
and
xorl
sub
cmp
lret
cld
jo
dec
push
push
xor
and
mov
mov
mov
fisubrl
cli
ds
int
xor
fldcw
push
outsb
jns
jge
repz
sub
mov
push
cmp
add
inc
mov
or
xorb
add
cld
adc
outsl
std
shl
sbb
in
mov
in
xlat
imul
stc
mov
out
push
outsl
fsubl
pop
dec
imul
pop
aad
cmp
adc
mov
xchg
shll
cwtl
jge
mov
and
xor
xor
jnp
and
cld
fs
mov
out
mov
add
daa
enter
nop
fs
mov
push
fs
push
mov
dec
jae
loope
xchg
xchg
ja
in
add
mov
ret
jge
mov
push
push
loopne
add
inc
mov
cmp
pop
decl
stos
mov
and
jnp
jp
cmp
dec
mov
fildll
cli
jnp
mov
mov
sbb
push
fnstenv
lahf
pusha
xchg
pop
adc
xchg
mov
lods
xchg
aas
std
add
dec
sub
fwait
sub
loopne
inc
xchg
jl
lcall
icebp
daa
pop
mov
dec
ret
xor
cmovae
clc
fnsetpm(287
scas
cmp
xchg
repz
lds
sbb
in
cmp
clc
lretw
js
sbb
cmpsb
outsl
push
icebp
in
push
fs
mov
and
inc
ficoms
mov
fprem1
sahf
enter
dec
jp
stos
mov
sbbl
jg
icebp
xchg
loopne
in
movsl
sub
or
xchg
cmp
dec
cs
lock
xor
aas
mov
loopne
popf
es
es
addr16
sub
mov
aad
and
lret
in
mov
adc
pop
leave
sbb
pusha
aam
and
test
jl
andb
lret
sub
inc
fistpl
clc
out
fwait
andl
sbb
fmul
xchg
dec
xchg
xor
cltd
cmp
hlt
sub
pushf
clc
push
inc
cs
in
lcall
push
mov
popf
nop
lods
loope
repz
mov
icebp
fwait
add
inc
fcoml
test
jp
sbb
jl
mov
fstl
mov
lret
test
dec
mov
push
out
das
movsb
repz
fcoms
cmpsl
mov
or
add
mov
iret
es
add
jle
cmp
fwait
jae
inc
subl
pop
sahf
push
jg
rcl
movsb
lods
xchg
fsubl
mov
mov
pushf
subb
cmp
cltd
jns
pop
jmp
in
aam
loop
push
addr16
fistps
sahf
mov
and
lahf
int3
ss
imul
fldenv
negb
dec
mov
jmp
xor
orl
xor
repz
and
bound
dec
insb
std
cli
jp
cmp
dec
out
push
cmc
mov
loop
and
xchg
mov
mov
mov
fistpll
xchg
dec
dec
dec
loope
push
les
xor
push
jmp
pusha
cmc
inc
cmp
add
dec
and
in
in
movsl
mov
cmp
sub
push
loopne
iret
jae
femms
inc
mov
mov
sbb
cld
daa
jbe
into
mov
adc
inc
cmp
loopne
or
dec
mov
stos
pushf
shl
xchg
divb
inc
inc
or
scas
and
pop
dec
push
insb
pop
sub
lds
stc
mov
nop
int
add
insb
push
push
test
xchg
xchg
fcoms
test
cmp
std
push
insb
repnz
jno
add
arpl
aas
push
adc
sbb
jecxz
dec
adc
mov
inc
adc
outsl
aam
ss
push
sub
lcall
aam
push
bnd
enter
mov
test
jbe
sub
ret
popa
out
xchg
out
pusha
stos
in
pop
lret
aad
outsb
push
out
cmp
mov
iret
jmp
mov
mov
fs
ja
pop
int
adc
mov
daa
xchg
lret
jmp
in
shrb
ds
or
cmc
fs
sub
dec
adc
pop
mov
xlat
icebp
and
xor
andb
push
pop
pusha
sbb
jnp
push
inc
shlb
jne
icebp
out
lret
in
stc
test
dec
jmp
sub
add
adc
popf
sub
nop
popf
insb
scas
clc
mov
push
lock
jae
mov
mov
daa
fisttpll
enter
fcomi
in
dec
scas
mov
cld
pop
idiv
movsl
loopne
jp
mov
lcall
and
mov
push
imul
repnz
repnz
daa
aas
or
xchg
push
hlt
sbb
cmp
fists
mov
inc
icebp
insb
add
xor
push
mov
lea
das
and
ret
or
pop
pusha
cmovl
cltd
dec
sbb
mov
in
daa
dec
ret
fdiv
pop
dec
and
inc
lock
ds
pop
dec
cmc
cmp
xlat
test
mov
cld
scas
mov
mov
push
jb
fdivs
dec
cltd
jns
sbb
xorl
stc
jp
outsl
push
push
inc
mov
out
mov
mov
dec
push
cmp
add
out
mov
or
das
mov
dec
ret
sbb
cmp
jge
push
add
sbb
daa
aam
test
or
cmc
mov
and
repz
inc
pop
inc
movsl
add
std
int
movhps
or
xor
lods
add
xchg
insb
dec
test
adc
call
shll
jns
jne
int
adc
mov
mov
popf
shll
icebp
shlb
jo,pt
mov
sub
dec
push
mov
mov
imul
mov
lretw
cld
mov
test
bnd
imul
test
ljmp
adc
push
cmp
rol
roll
int
jmp
mov
stc
jle
mov
popa
lahf
mov
and
out
adc
jg
push
push
stos
add
je
ret
outsl
movsl
push
rolb
add
jge
jecxz
sub
in
adc
lahf
f2xm1
jp
jmp
outsl
lret
mov
pop
scas
mov
movaps
cmp
pop
push
testl
daa
jns
mov
shlb
mov
and
pop
fisttpl
in
adc
enter
fistl
and
cmpsl
mov
mov
inc
xor
cmp
dec
stc
mov
push
mov
loope
sbb
push
js
aas
inc
mov
ss
iret
jmp
shlb
aas
fldt
std
adc
mov
lret
dec
js
out
push
in
test
dec
xchg
pop
shll
aad
push
xor
or
fcomi
shl
ss
xchg
mov
push
dec
inc
cmp
and
cmpsb
dec
sub
and
xchg
call
scas
pop
addr16
sti
push
xchg
loop
jb
mov
cli
jg
xorl
pop
into
sarl
call
jno
xorl
mov
xor
pop
daa
mov
or
pop
mov
cs
cmc
mov
enter
in
out
std
lods
incl
push
pop
outsl
lret
xor
inc
cmpsl
sbb
xchg
scas
push
mov
cmp
mov
imul
arpl
and
dec
add
aaa
test
int3
fs
movsb
push
mov
leave
pushf
pop
mov
mov
fdiv
push
jno
mov
addb
aam
cmp
imul
stos
mov
jae
pop
sarl
cmp
dec
adc
fmulp
pop
lahf
mov
andb
jns
mov
test
push
movsl
cmp
inc
pop
jle
in
sti
xchg
adc
mov
lds
out
jbe
adc
xor
es
mov
dec
bound
jg
insl
mov
and
or
sahf
mov
imul
fisttpll
jge
scas
mov
xchg
jp
sub
subb
lods
jns
roll
push
push
jle
pushf
lret
jo
mov
stos
lea
xor
arpl
cld
sbb
repnz
das
sub
adc
jns
es
xlat
mov
or
stos
ficompl
pop
mov
mov
ljmp
or
jbe
and
stc
push
arpl
mov
mov
inc
repz
imull
ljmp
cmpsb
jns
push
sarl
in
xchg
enter
jl
pop
fildl
int
xchg
xor
in
xor
jp
jecxz
adc
pusha
adc
mov
loop
lods
pop
sbb
xchg
imul
out
adc
mov
fldt
push
adc
insl
adc
andb
adcb
ja
pop
xor
pushf
inc
leave
pop
insl
orb
mov
ljmp
rcll
or
cmp
mov
fcomps
inc
dec
mov
lock
xchg
push
cmp
ja
stc
xlat
popa
xchg
popf
xchg
or
cmp
mov
mov
push
pop
insl
imul
sar
inc
movsl
xlat
je
xchg
mov
sbb
push
push
jecxz
adc
or
lcall
xchg
scas
jmp
add
mov
in
shll
push
clc
add
int
sar
shll
in
icebp
das
add
cmpl
jns
push
out
push
les
adc
jns
mov
dec
test
mov
adc
xor
roll
cltd
pop
rcll
addr16
lret
mov
pop
cmpsb
or
mov
in
arpl
xor
daa
inc
mov
insb
ja
cmp
cmp
fisttpl
mov
jl
jb
bound
jge
inc
insl
lret
jg
adc
push
or
sub
xor
lea
mov
mov
aad
mov
jmp
call
out
mov
jecxz
fwait
and
or
clc
leave
bound
aas
jmp
rcl
sarb
scas
pop
sbb
mov
xlat
inc
fcmove
push
rcr
mov
or
xchg
push
push
into
cmp
std
push
and
in
andl
dec
aas
sahf
adcl
xchg
push
sbb
sbb
cmp
outsb
out
and
xchg
jns
jno
add
xchg
movsb
cmp
xorl
rcll
xor
cmp
dec
and
add
cmp
movntdq
mov
das
dec
outsl
adc
dec
or
inc
imul
mov
cmp
xchg
movsb
sti
scas
enter
push
cltd
stos
mov
pop
or
sub
flds
sub
xchg
mov
aad
movsb
jns
ds
lds
push
scas
negl
cmpsl
xor
sub
jns
scas
jno
push
or
fadds
jle
pop
and
xlat
dec
and
and
and
sub
push
pop
pop
test
pushf
jmp
and
pop
xchg
es
pushf
aad
jno
jbe
inc
je
fbld
pop
push
nop
repz
or
loope
lret
and
loop
adc
mov
std
pusha
cmp
int3
xchg
loopne
pop
in
pushf
hlt
shl
add
or
in
push
jmp
je
out
cmp
or
jmp
add
mov
pop
xchg
xchg
mov
push
xchg
stos
loopne
in
push
mov
cli
scas
or
loop
int
add
lea
or
fsubs
cmpsl
xor
jp
xchg
cmp
out
cmc
xchg
push
jle
xor
xlat
adc
mov
push
jp
scas
dec
inc
fimull
daa
lock
sub
pop
dec
movsb
fsubl
lods
sbb
inc
lds
add
loopne
ds
sbb
sub
jg
test
mov
shl
popf
jmp
rcl
mov
aam
cmp
xlat
xchg
clc
mov
and
add
adc
es
and
push
ljmp
bsf
jg
in
std
pop
sub
push
ret
adc
in
mov
xchg
orl
mov
lea
aam
fists
fistl
sub
and
int
jl
scas
int3
leave
sub
xor
xlat
jp
sbb
scas
inc
and
jp
out
js
pop
cltd
cmpsl
push
dec
jae
cltd
xchg
pop
mov
cs
cmc
inc
dec
sub
sbb
das
xchg
in
in
inc
inc
adc
xchg
jle
pop
int
pop
xchg
cmp
pop
pop
or
movsb
fmulp
inc
andb
loop
jp
xor
cmpsb
xor
testb
imul
mov
pop
jge
sub
test
xor
aam
push
push
sbb
mov
sub
les
push
sbb
into
ret
push
sub
sarb
inc
in
pop
push
fcoms
mov
lods
pop
loope
int3
fcomi
or
dec
and
out
jmp
add
popf
mov
enter
loope
inc
pop
stos
pusha
mov
sub
jno
cld
push
aam
test
test
fwait
in
fildll
stos
add
shrl
scas
pop
sbb
and
push
out
push
sub
aad
outsl
add
mov
dec
outsl
test
jnp
jae
push
popf
mov
jno
push
sbb
aad
or
test
mov
lret
iret
mov
outsb
shlb
sar
add
jnp
inc
call
xchg
ret
dec
sarb
aas
jge
shll
push
xor
pop
push
ljmp
aas
daa
out
and
and
movsb
test
loop
xchg
dec
pop
push
lods
sbb
call
scas
loop
pop
dec
mov
pop
dec
aas
pop
js
imul
daa
andb
lock
cmp
loopne
add
insb
sub
movsl
jne
xchg
out
pop
xor
test
movsl
mov
add
jp
pop
push
and
lcall
adc
shlb
inc
loop
shl
pop
and
loop
push
icebp
call
iret
lret
ficomps
jb
pop
cmc
jae
and
addr16
fmuls
test
in
add
push
push
mov
xor
adc
and
not
fsubl
push
and
mov
les
jle
out
nop
fdivs
arpl
lds
xor
mov
subb
sub
cmp
rclb
pop
or
mov
adc
push
jecxz
int3
int3
bound
xlat
mov
fldl
inc
cmp
inc
test
gs
sahf
movsl
dec
mov
and
cmp
shl
add
sbb
push
push
repnz
in
inc
daa
shrb
pop
cmp
lahf
mov
movb
rol
dec
lret
movsb
in
dec
ret
jbe
scas
lock
out
add
pop
jge
fadds
stc
fldz
scas
pop
das
and
out
xchg
jecxz
add
shlb
or
or
test
pop
push
ljmp
xchg
ficompl
rolb
sbb
fstpl
in
lods
and
loope
sub
xchg
sbb
loopne
test
fmull
cmpsb
rorb
push
sbb
inc
popa
adc
cwtl
movl
loope
mov
hlt
fwait
cmp
cmp
stos
lds
adc
pop
jnp
inc
adc
jne
adc
inc
adc
rcrl
cmc
fdivs
lret
loopne
or
mov
mov
add
fists
jmp
pop
rolb
mov
movsl
xor
adc
jbe
xlat
test
je
je
inc
push
mov
xchg
sbbl
or
and
sub
jo
or
daa
stc
testl
mov
leave
sbb
inc
mov
mov
lods
jae
add
lock
adc
cli
movsl
mov
mov
adc
je
test
stos
cmp
fidivl
cmp
loopne
rclb
xchg
faddl
push
xchg
or
lcall
sub
mov
fcomps
push
inc
popl
imulb
xlat
mov
or
das
and
pop
pusha
loope
jmp
sbb
sub
repz
add
fsubr
mov
cli
mov
stos
sbb
stos
pushf
mov
out
inc
lock
stos
insb
div
xchg
leave
push
pop
lahf
bound
pop
mov
out
std
fstps
adc
ja
popf
out
test
push
inc
adc
and
int3
mov
flds
jnp
imul
push
pop
loop
lds
xor
addr16
adc
pop
pushl
call
xor
and
imull
jno
or
jnp
dec
mov
lcall
lea
mov
mov
pop
sbbl
pop
push
or
or
ja
mov
aaa
int3
sbb
inc
pop
xchg
shrb
aaa
push
in
imul
pop
les
scas
insb
pop
jecxz
pop
jg
mov
xchg
add
insb
xchg
std
mov
push
inc
int3
or
push
test
pop
dec
loopne
xchg
cmp
in
fdivrl
dec
xchg
es
sub
scas
cwtl
and
jb
fs
sahf
add
xchg
push
lret
sbb
call
push
push
imul
aad
add
out
and
mov
fiadds
mov
xorb
jg
hlt
in
lret
int
fstpl
fwait
loope
stos
into
sub
jl
aad
mov
dec
xchg
fnstsw
mov
loop
enter
loop
es
mov
pop
mov
into
add
lods
xor
inc
das
push
add
inc
jmp
xlat
sbb
push
jnp
sbb
das
roll
addl
cmp
dec
dec
lock
jmp
jno
scas
clc
mov
jl
jmp
or
mov
js
sub
mov
iret
cmp
inc
mov
hlt
or
into
adc
or
inc
xchg
into
xlat
in
adc
cmpsb
fimull
into
fprem
shll
test
fidivl
mov
addr16
mulb
scas
test
insb
shl
pop
imul
data16
sub
xor
cmc
mov
push
lods
sub
cltd
and
cmp
xchg
xorl
push
jecxz
out
sbb
rorb
cmp
cld
outsl
push
xchg
test
mov
fcoml
cmp
pop
xor
xor
test
add
or
mov
stos
andb
stc
fwait
dec
daa
ljmp
jno
fldenv
inc
mov
lret
mov
jnp
sub
das
sbbb
xor
fidivl
popf
out
jmp
cmp
cmc
dec
fcomps
rcrb
iret
and
or
adc
jno
dec
sbb
popa
sub
mov
fwait
sub
stos
adc
ss
iret
mov
push
and
lods
push
scas
ss
cmp
mov
mov
aad
stc
xchg
enter
mov
les
mov
add
std
fwait
repnz
lret
push
push
dec
push
mov
jns
andb
ja
lret
jae
fildll
adc
cmp
add
aam
rorl
add
rcrl
cli
lea
cmpsb
cwtl
jle
cli
inc
jae
push
jg
jle
dec
jo
adc
out
pop
imul
out
imul
cs
adc
out
stc
test
xchg
rclb
mov
ds
xchg
adc
or
jmp
aad
fcomip
sbb
mov
xchg
push
das
mov
dec
cmpsl
lret
mov
clc
cmp
ret
movsl
jo
pop
fs
fsub
mov
mov
pusha
out
mov
inc
xor
dec
stos
sbb
pop
mov
or
leave
movsb
dec
sub
mov
dec
add
inc
shll
push
es
js
repnz
insb
dec
mov
aad
or
fnstenv
fdivrs
mov
repz
sbb
push
outsb
ret
mov
fwait
xor
sub
jmp
pop
stos
lret
cmpb
rcrb
nop
into
mov
fnstenv
test
bound
hlt
jg
in
aam
sbb
push
das
xor
in
roll
adc
cli
push
mov
and
les
adc
in
je
mov
cli
inc
ret
push
loop
sub
fidivrl
xchg
das
mov
lret
jle
sbb
pop
pop
sub
in
jne
in
xchg
xchg
sbb
add
addr16
pop
jno
loope
movzwl
mov
pop
add
cmpsl
out
jmp
stos
xchg
pop
inc
xchg
shrb
xchg
jno
popl
arpl
push
mov
xchg
sub
ljmp
scas
mov
jnp
lea
popf
push
xor
dec
jecxz
in
jbe
outsb
inc
daa
es
mov
stos
in
mov
fcomps
sub
pop
inc
and
sti
cmp
loope
cli
inc
lret
inc
dec
mov
mov
imul
push
lds
xchg
pop
lds
scas
popf
mov
test
sub
push
mov
jg
dec
jg
inc
outsb
or
arpl
je
jbe
mov
push
cmc
inc
daa
cmp
out
fwait
test
popf
out
repnz
or
movsb
ret
xchg
lahf
mov
notl
repnz
mov
mov
pop
testb
or
mov
movsl
inc
js
xchg
das
scas
enter
or
xor
jmp
inc
nop
xor
jbe
ljmp
sbb
test
push
fmul
aam
push
xchg
stc
jmp
mov
stc
inc
in
mov
mov
js
mov
mov
push
add
push
pop
xchg
ja
fsubrs
mov
in
subb
mov
idivb
xchg
mov
pop
pop
sti
jns
add
push
and
es
mov
lods
sbb
jg
movsb
mov
and
pop
pop
je
hlt
xchg
inc
adc
out
pushf
or
dec
imul
lock
imul
jns,pt
cmp
xchg
inc
test
inc
scas
enter
xor
daa
mov
add
mov
jg
or
scas
outsb
mov
out
inc
loop
jmp
aad
sub
push
jnp
insl
aam
inc
mov
mov
xchg
adc
in
cmc
movsl
cmp
pop
mov
mov
push
inc
lahf
hlt
fwait
adc
jns
outsb
and
movsb
dec
cmp
and
mov
negb
and
lahf
xor
fwait
and
pop
test
lret
adc
test
out
cmp
jae
or
es
push
cmp
add
jbe
add
call
and
dec
push
fistl
sbb
mov
pop
adc
xchg
dec
push
popf
scas
mov
imul
mov
das
cli
inc
jns
mov
mov
sysexit
jmp
aas
shll
rcrb
push
dec
ret
iret
pop
xchg
outsb
jbe
inc
rcrb
int
in
popa
std
fsubl
cmp
jne
sbb
ret
cmp
mov
loopne
sub
fnstenv
mov
pusha
mov
lods
bound
mov
cmp
aad
add
cltd
leave
sbb
xchg
xor
xchg
popf
dec
mov
jmp
insl
push
xor
push
pusha
mov
mov
js
popa
ror
lds
cmp
out
leave
sbb
imul
inc
orl
xchg
mov
incb
add
js
cwtl
inc
jl
or
lods
sahf
inc
lods
dec
mov
shlb
mov
xor
inc
cmp
mov
cs
loop
xor
mov
jno
aas
test
ljmp
inc
test
push
pop
loopne
cmp
mov
and
sbb
daa
xchg
and
fiadds
popa
xchg
add
bound
sahf
xchg
xchg
push
pop
and
stos
fmul
dec
add
ds
pop
enter
mov
sbb
addr16
sub
adc
jmp
mov
sub
xor
fs
iret
test
stc
cltd
in
insb
add
lods
loop
cld
popa
cmc
push
mov
push
das
add
rorb
jmp
outsb
push
and
in
nop
mov
ss
push
rorl
adc
ja
or
loope
push
xor
sbb
pop
sub
sbb
in
cmpsb
lods
push
dec
lret
cmp
dec
pop
add
cmp
shrl
adc
in
neg
push
pop
mov
sub
cmpsl
mov
cmp
call
xorl
or
add
loop
mov
nop
and
pop
sub
xor
ret
xchg
xchg
clc
and
clc
mov
stos
xchg
mov
fs
or
sbb
mov
in
xchg
int3
and
and
inc
mov
mov
loope
mov
pop
les
adc
cmp
cs
sbb
lcall
pop
add
je
push
dec
nopl
mov
or
test
divl
xchg
add
mov
xor
frstor
mov
fsubl
inc
or
xchg
push
push
inc
into
das
ret
lock
aad
pop
bswap
push
mov
outsb
out
aam
push
inc
inc
sbb
sbb
mov
sbb
fwait
sbb
js
ljmp
cmp
mov
fcomps
push
mov
dec
sbb
jae
pop
gs
cmpsb
inc
xor
add
sbb
icebp
repz
xchg
sbb
xchg
mov
push
adc
not
cmc
fwait
jmp
lods
sbb
movsb
cmp
fwait
mov
jno
pop
outsl
or
dec
les
jbe
ss
xchg
das
mov
push
loopne
inc
sub
adc
in
test
stc
mov
jle
push
mov
push
jb
xlat
cmp
cmp
call
stc
xchg
movsl
dec
popf
sbb
adc
xchg
and
xor
loopne
aam
inc
cmp
lret
push
add
xchg
sbb
call
jg
das
adc
sub
inc
adc
mov
and
outsl
inc
repz
loop
mov
incb
mov
push
out
in
inc
fbld
pop
scas
js
push
mov
movsl
in
mov
jns
mov
and
test
dec
adc
xor
cmp
into
xlat
sahf
inc
push
aam
add
out
addr16
pusha
aam
inc
int
push
icebp
into
jp
jle
das
xchg
loope
outsl
ss
mov
jbe
hlt
pop
cli
sbb
movsl
sahf
and
imul
sbb
mov
and
sbb
stc
cmp
xchg
sbb
xor
lret
clc
insb
stc
ds
and
push
pop
mov
mov
repnz
jae
and
inc
mov
xor
pop
xor
fldcw
ret
mov
lret
xor
scas
xchg
push
and
push
jns
and
subl
aaa
pop
insl
mov
mov
mul
pop
dec
mov
stos
cltd
std
pop
push
jno
inc
jl
jns
mov
es
enter
loop
adc
cli
rep
ftst
insb
mov
jb
and
lods
adc
and
ljmp
paddb
je
aad
repz
cmp
mov
fmull
pop
repnz
stos
int3
aas
aaa
aad
out
sbb
in
add
out
nop
lock
jne
icebp
aam
cmc
cmp
dec
or
icebp
cmp
or
xor
cwtl
lds
rol
mov
psubq
ret
testb
int3
lret
imul
xor
add
push
nop
xor
out
cmp
pop
mov
call
lods
fsubrs
jmp
and
out
outsb
xchg
loope
inc
and
cli
int
pusha
push
jnp
jl
stos
mov
ljmp
jge
data16
ret
int
dec
pop
int
out
les
sub
ret
push
out
push
inc
divl
insl
xchg
scas
inc
sbb
dec
push
das
rcll
and
fdivrp
push
mov
xchg
idivb
mov
inc
stc
mov
pusha
addr16
aad
pop
sbbb
enter
cmp
mov
dec
jl
push
mov
stos
icebp
int3
sbb
fwait
retw
adc
mov
push
outsb
cwtl
movsb
daa
les
cmp
mov
inc
push
sbb
push
dec
and
insb
xlat
js
insl
push
lret
aas
xor
loope
data16
repz
xchg
loop
lret
push
jmp
and
imul
test
ficoms
jae
mov
xchg
cmp
cwtl
test
mov
and
push
cltd
movsb
fidivrs
jg
rcrl
les
mov
pop
mov
sbb
or
xchg
cmp
push
and
jo
lea
test
lret
and
imull
cld
movsl
mov
jge
testb
das
mov
ret
jnp
or
sbb
orl
lahf
mov
fistps
sub
dec
pushf
push
add
aad
or
arpl
mov
sub
addr16
adc
not
push
enter
inc
into
rorl
add
mov
mov
in
xor
out
add
sbb
cmp
repnz
mov
lods
dec
test
out
or
fsts
jmp
jmp
mov
les
xor
cltd
rclb
fnstsw
clc
and
das
push
insl
jns
cli
adc
mov
cld
popf
push
jne
notl
jb
xor
mov
adc
cmp
sbbb
dec
lahf
in
outsl
dec
sub
aad
repnz
mov
push
or
cmp
jg
dec
pop
aam
push
jns
int
jae
adc
inc
shlb
jl
inc
xchg
add
mov
in
cmp
mov
cmpb
jg
cmp
cmpsl
lods
dec
nop
sub
out
sbb
test
sub
out
mov
add
sbb
movsb
movsb
sbb
das
les
sbb
add
mov
jmp
cmp
es
mov
addb
loope
add
cld
and
push
rep
xor
adc
xchg
out
jmp
sub
xchg
push
or
sub
dec
int
dec
loope
sti
mov
lcall
cmp
stc
cld
or
je
aaa
cmp
or
cmp
and
mov
cmp
dec
dec
or
imul
xchg
push
addr16
fs
push
shll
adc
inc
adc
xchg
push
and
repz
loopne
rorb
icebp
sub
push
ret
push
fistpll
mov
jae
adcl
xor
je
mov
repz
repz
repz
repz
out
insl
fstpt
add
dec
addl
loope
out
mov
cmc
fnstsw
push
movsb
repnz
outsl
pop
xor
xor
mov
cli
ds
in
sbb
inc
adc
or
es
leave
pop
cmp
cmpsl
push
xchg
sbb
movsb
das
pop
sbb
ss
sahf
cld
rclb
fisttpl
in
fdivrs
pushf
sub
out
shr
das
mov
shr
adc
push
out
lods
xor
cmpb
leave
lock
out
adc
test
popf
leave
imul
cmp
loope
xchg
sub
aas
lret
dec
hlt
addl
xor
adc
das
mov
jne
mov
popa
cmp
movsl
stc
test
push
push
pop
lret
divb
jle
imul
repz
inc
fwait
sbb
add
imul
jecxz
lret
xchg
jbe
daa
fsubs
imul
and
pop
and
dec
sti
outsb
sarl
aad
aaa
xlat
stos
mov
movsl
and
cmp
jg
adc
dec
push
sbb
icebp
pop
sbb
mov
in
dec
les
mov
mov
xchg
cmp
into
mov
test
pushf
dec
pop
pushf
lret
pop
jge
je
jnp
lds
push
lea
pop
outsb
push
sbbb
or
clc
inc
leave
stc
push
push
adc
scas
sub
xor
jbe
xchg
in
inc
add
fimuls
cli
test
insb
repnz
clc
jno
lods
cs
fildl
mov
popa
dec
xor
int3
add
pop
stc
inc
iret
lods
push
roll
jmp
xchg
hlt
sti
push
cmc
jmp
adc
inc
add
xor
data16
js
bound
mov
lcall
dec
jmp
rolb
add
das
in
add
or
cld
dec
sbb
mov
daa
fdivs
pop
add
dec
xor
pop
adc
xchg
pop
sahf
sbb
mov
inc
shll
push
in
jne
sbb
mov
mov
icebp
sbb
jb
xorl
das
addr16
pop
cltd
push
arpl
pop
outsb
mov
add
inc
sub
outsb
adc
add
cwtl
into
cmp
dec
insb
ljmp
xchg
scas
mov
jbe
xlat
xchg
inc
jle
out
out
push
leave
mov
sbb
mov
iret
outsb
cmpsb
movsl
adc
fdivs
fwait
xchg
in
and
adc
jne
clc
testl
cmpsl
subl
insl
inc
or
adc
dec
scas
adcb
movsb
inc
pop
loope
push
adc
xor
pop
ljmp
cmp
sub
or
push
push
mov
repnz
xor
fbld
add
mov
adc
jge
adc
scas
dec
cs
aas
ljmp
imul
push
mov
mov
daa
or
lds
pop
loope
xchg
pop
jbe
mov
call
jno
or
mov
adc
jo
push
mov
js
or
mov
int
orb
pop
push
cmp
mov
xchg
push
cmp
pop
fists
jae
and
ljmp
or
mov
leave
mov
stc
test
or
int3
mov
es
jg
cmp
push
sbb
dec
mov
enter
cltd
xchg
subl
and
xchg
xchg
test
dec
mov
mov
jnp
and
sahf
fsts
lcall
mov
mov
cmp
out
int3
and
jne
dec
mov
xchg
sbb
lret
test
or
insl
cmpl
in
or
aam
leave
in
cmpsb
and
jb
sub
pop
stos
and
aad
pop
enter
fnstenv
insb
test
sbb
in
sbbb
xlat
dec
mov
xchg
outsb
cld
mov
repnz
mov
add
test
repz
xchg
aad
adc
jmp
std
ljmp
xor
js
nop
jmp
jp
mov
test
jle
xchg
pop
popa
add
jb
imull
shll
repnz
sub
or
popa
test
aad
and
leave
mov
aam
cmp
jb
dec
xor
jne
push
cmp
inc
adc
icebp
xchg
cli
inc
adc
outsb
mulb
xchg
or
or
sbb
sbb
insl
decb
xchg
pop
shl
mov
outsl
imul
clc
ja
pop
lea
movsl
inc
andb
pop
movsb
lds
dec
push
ljmp
and
das
outsb
mov
mov
inc
fistpll
scas
adc
rcrb
cmc
repnz
aad
jmp
ss
pop
lods
jmp
loopne
and
or
mov
mov
inc
call
fsubl
jge
jle
decl
lods
add
sbbb
or
cmp
sub
xor
cmpsl
inc
je
and
stc
fidivrs
sbb
push
inc
pop
sub
hlt
jb
std
sahf
mov
nop
daa
int
test
jnp
jbe
xchg
mov
leave
out
jno
adc
jb
mov
sbb
divl
rcrb
bound
xor
inc
rcrl
xor
adc
adc
lret
xor
call
jl
add
out
inc
add
or
scas
xor
test
out
aam
fdivrl
or
dec
dec
repnz
and
jecxz
fcom
shrb
inc
pop
jg
daa
loope
dec
daa
lcall
sar
clc
enter
pop
add
sub
sbb
sub
adc
adc
lods
cmpsb
ds
scas
imul
andl
outsb
incb
or
push
cwtl
in
lret
adc
dec
adc
fidivl
sahf
int
dec
aad
and
lahf
mov
out
mov
cs
push
stos
stos
loope
lret
movl
imul
popa
dec
push
mov
push
pop
ret
inc
notb
pop
pop
cmp
imul
rcll
jg
pop
push
dec
arpl
repnz
mov
addr16
and
stc
cli
xchg
sub
cmp
cmc
pop
push
xchg
mov
push
mov
jge
and
pop
pusha
pop
cld
mov
jmp
inc
cmp
push
cwtl
jle
push
xlat
imul
gs
ret
or
leave
cmp
and
xchg
jmp
push
pop
push
nop
jmp
pop
adc
mov
add
aas
cmc
add
pop
sarb
mov
xor
push
rdtsc
and
cli
pop
js
inc
in
loop
popf
inc
cmp
adc
add
xor
daa
xchg
or
es
sub
rcll
mov
inc
push
xchg
out
cwtl
xchg
lret
xor
pop
jns
shll
xchg
ret
arpl
dec
add
in
sbb
bswap
jl
push
xchg
loopne
add
std
mov
aas
pop
fs
dec
and
xor
or
sub
js
in
add
movsl
shrb
rorb
and
add
js
fcmovne
addr16
jge
aad
test
pop
jecxz
lret
adc
xchg
cmp
cmp
xor
paddsb
cmc
jns
jp
adc
mov
testb
movsb
dec
mov
adc
mov
or
loop
mov
movsb
test
arpl
lret
xchg
mov
jb
test
pop
sub
xchg
xchg
dec
pop
adc
outsl
data16
insl
std
bound
daa
push
int
jmp
jp
fnsave
mov
or
dec
push
and
ds
das
les
lock
sbb
addr16
push
push
lods
addl
cmc
pop
cmc
mov
adc
cmc
push
rclb
or
add
xchg
cmpsl
pop
out
ficoml
je
push
inc
test
inc
lods
js
sbb
mov
or
incl
out
fwait
das
mov
inc
xchg
or
dec
push
movsb
sub
gs
enter
add
jl
test
into
mov
and
mov
and
sbb
dec
xor
sub
sub
mov
mov
xchg
ret
xor
push
fldcw
test
lods
push
in
xor
clc
test
aad
stc
jnp
loopne
jbe
sbb
dec
lahf
cltd
shlb
idiv
dec
xor
ret
jnp
pop
clc
push
ss
fimuls
push
dec
lret
adc
fisubl
rorl
jmp
aas
inc
or
or
sbb
mov
rclb
outsl
imul
cld
cs
cs
pushf
repnz
popa
sub
call
and
sbb
icebp
inc
xchg
mov
out
jmp
pop
cmpsl
jle
dec
sbb
insl
adc
es
xchg
popw
test
dec
test
jmp
int
mov
loope
jmp
jb
jl
or
add
xchg
sar
sub
cli
jns
cmp
mov
fs
mov
push
insl
dec
ret
pop
hlt
loop
push
imul
loop
movsb
stos
andb
mov
pop
hlt
sbb
inc
cmp
idiv
xchg
ja
mov
inc
unpcklps
inc
pop
mov
rorl
xchg
in
add
xor
pusha
xchg
mov
pop
xchg
xchg
int3
push
push
add
cltd
fcomps
pop
mov
repz
dec
mov
fs
xchg
ja
xchg
out
cmp
push
push
dec
add
jmp
mov
push
xchg
mov
xchg
xor
fldenv
jns
push
mov
pop
push
jns
dec
add
insl
and
xchg
fldenv
pushf
push
xchg
cmp
jae
xor
addr16
ja
pop
imul
push
out
adc
xchg
test
add
and
andb
pop
movsb
fildll
stos
sbbb
js
sub
rol
ja
cmp
inc
mov
fbstp
add
xchg
test
and
loopne
cmp
inc
idivb
sub
out
aas
mov
rcll
mov
pop
push
jecxz
pop
cmp
sbb
ret
push
mov
adc
cmp
bound
lret
xor
ds
fildl
aaa
cwtl
pop
aaa
mov
insl
or
test
cltd
rcrb
les
arpl
clc
pusha
push
sbb
das
inc
arpl
shlb
mov
and
ljmp
pop
repnz
insb
gs
cmp
push
inc
and
jmp
dec
repnz
dec
icebp
jb
push
add
push
add
xor
inc
or
nop
ds
sbb
pop
fs
mov
mov
xchg
sub
and
mov
stc
xor
sub
adc
lods
mov
nop
pop
pop
jno
sbbb
inc
nop
push
inc
sbb
cmp
shrl
std
cmp
sub
sbb
push
pop
imull
and
pop
fstpl
push
mov
mov
addr16
outsl
aaa
popf
jo
pop
leave
ja
arpl
jle
cmc
test
mov
push
mov
iret
mov
cmp
jnp
push
testb
xchg
cmpsl
les
jns
fstl
jecxz
out
rolb
push
push
mov
rcrb
cmpsl
and
jo
push
mov
xchg
in
mov
mov
sbb
mov
cmp
xchg
popf
xchg
mov
jne
xchg
bound
out
jnp
lods
loope
xor
add
xor
pop
mov
imul
cmp
pusha
adc
out
pop
fiaddl
int3
pop
xchg
shll
pop
pop
sub
bound
cmpsl
xlat
and
push
mov
insb
or
xchg
push
lahf
add
xlat
ret
dec
sub
add
and
push
dec
xchg
scas
jmp
rcr
mov
sti
insl
mov
sbb
shlb
push
lock
or
psubusb
xchg
std
xchg
mov
xchg
add
add
xchg
push
int3
lods
cs
scas
out
and
mov
lahf
daa
int3
dec
fdivl
adc
arpl
cmc
in
das
imul
jle
mov
xchg
cwtl
add
aam
jp
pop
out
push
icebp
or
pusha
out
mov
or
mov
inc
or
bnd
insl
fisttps
push
mov
lods
xchg
mov
sbb
mov
jmp
ret
mov
iret
and
iret
xchg
mov
imull
or
scas
mov
dec
shrb
add
sti
out
push
movsl
xorb
push
adc
push
imul
sub
mov
xchg
sbb
mov
ret
into
cwtl
mov
dec
insl
lock
fcoml
stos
lret
out
gs
xchg
leave
and
inc
mov
jge
call
push
sbb
xchg
cmpsb
xor
sub
xchg
imul
jecxz
add
mov
xchg
popf
lock
test
cs
add
fdivr
xchg
call
xchg
mov
jg
jns
dec
out
mov
iret
cmp
bound
sub
pop
ja
subl
fiaddl
stos
loopne
movsb
cmp
xor
xlat
sbb
mull
mov
loopne
loope
sub
jp
and
mov
mov
sbb
push
lds
jl
xor
into
and
inc
rorl
mov
and
vshufps
xor
jg
or
mov
cld
pop
test
divb
add
push
sub
xchg
scas
mov
aaa
push
sub
nop
test
add
pop
sbb
push
add
adc
lcall
dec
and
jbe
fldt
jns
pushf
fistpll
fidivs
fdivrs
and
push
in
and
stos
leave
mov
jb
or
lret
lret
cwtl
jnp
and
jp
out
int3
pop
into
or
pop
xchg
xchg
cltd
pop
lret
sbb
sbb
mov
jnp
je
jo,pt
pmullw
jmp
sbb
pop
rcl
in
int
andl
lret
and
jp
dec
sub
ret
sbb
lods
lahf
enter
push
adc
add
mov
mov
ret
andl
sar
mov
jmp
mov
inc
adc
out
imul
gs
pusha
flds
push
ficomps
cmp
sbb
xor
test
mov
inc
popa
mov
or
inc
loope
cld
add
jmp
xorl
jmp
inc
pusha
adc
and
pop
and
mov
push
movsb
loopne
xor
das
test
orb
jns
push
hlt
push
xchg
lret
das
xor
out
sbb
jl
and
xchg
insb
repnz
push
sbb
sub
movsb
stos
loope
sub
mov
out
hlt
lds
stc
adc
pop
rorb
mov
lods
sbb
push
das
mov
loop
in
cmpsb
ds
clc
aas
mov
aad
subl
mov
stos
inc
dec
stos
sub
fbld
hlt
cmp
pop
jbe
les
sbb
jbe
lods
inc
movb
cmpsl
push
std
in
jl
mov
aas
jge
push
jo
or
repnz
pop
sar
cmp
and
xor
lahf
ror
std
xchg
lahf
ficomps
out
dec
sub
js
pusha
iret
les
pop
fsubrs
cmc
add
mov
notl
mov
bound
mov
cltd
and
xchg
pop
or
ret
ja
cs
pop
js
push
xor
or
dec
jo
jae
fisttps
ljmp
xlat
push
jb
mov
rolb
sti
cmpsl
movsl
xchg
in
hlt
add
jg
xor
xchg
add
pop
outsl
les
jne
sahf
xor
in
gs
mov
mov
loop
iret
lahf
mov
out
xchg
sahf
jge
push
pop
xorl
xor
clc
lahf
cmp
lahf
add
stos
test
pop
xchg
mov
rolb
mov
nop
mov
mov
insl
in
inc
pushf
out
fcmovne
es
jg
stc
sbb
in
xchg
jp
cmp
adc
jle
and
push
dec
leave
dec
or
cli
arpl
fadd
dec
pop
outsb
pop
jg
lods
jno
stos
sti
test
in
jp
mov
js
sub
jp
les
and
jnp
fucom
xchg
shll
aaa
pushl
cltd
or
jecxz
daa
data16
insl
sbb
lret
enter
adc
xchg
int
out
mov
sub
mov
rcll
jle
jae
sub
cmp
popa
rorl
pop
xor
mov
push
jb
lahf
jo
push
xchg
test
out
faddl
inc
xor
in
loope
jo
scas
pop
mov
push
jbe
jbe
psubsb
repz
dec
pop
insb
testl
sbb
cmpsb
and
sub
sbb
dec
sub
inc
mov
inc
cmpsb
mov
adc
cmc
bound
or
ja
inc
dec
hlt
mov
add
or
arpl
cltd
xchg
in
pop
adc
cltd
cli
cli
sbb
sub
loope
pop
mov
rcrb
dec
and
push
stos
inc
and
pop
xorl
out
icebp
mov
mov
cwtl
filds
cmpsl
out
pop
adc
xor
sub
mov
jo
and
mov
jge
add
and
roll
sub
or
cltd
das
adc
pop
insb
push
sbb
ret
fs
push
cmp
dec
mov
sbb
sub
dec
dec
xor
subl
lret
data16
cmp
jbe
bound
mov
and
nop
mov
sub
aad
sub
arpl
add
xor
mov
insb
or
out
rcrl
into
leave
pop
fsts
sbb
and
fcompl
sub
xchg
xchg
push
test
and
incl
sbb
vmulps
or
xchg
mov
adc
imul
dec
pushf
xchg
iret
jne
ret
cwtl
iret
xchg
ret
mov
stos
icebp
cmc
sbb
adc
jbe
dec
or
aad
sub
mov
or
ljmp
cmc
or
adc
out
out
push
add
or
or
jnp
imul
pop
sti
outsl
fs
pop
jge
movsl
push
movsb
push
jnp
in
pop
scas
outsl
adcb
in
repz
xrelease
in
outsb
out
jle
xchg
inc
std
mov
daa
outsl
inc
xor
cmc
jo
xchg
in
mov
xchg
icebp
shl
lret
sub
cmp
lods
xor
xchg
aas
clc
out
sub
fisubrs
shll
cmp
pop
add
ret
loop
or
xor
movq
mov
dec
lcall
push
xor
lock
add
mov
jge
push
inc
in
pop
insb
bound
mov
mov
adc
push
mov
es
pushf
fcoml
pushf
mov
enter
mov
stos
or
aaa
lods
pop
insl
mov
roll
jl
jbe
ja
insb
sub
sbb
outsb
out
out
push
jg
add
jae
lods
dec
test
popa
xchg
jp
jae
fimull
filds
mov
push
add
pop
jecxz
dec
xor
sar
adc
cli
repz
hlt
fisttpll
or
ss
enter
dec
mov
mov
addr16
popa
adc
es
pushf
xchg
cmp
mov
add
sbb
aad
adc
xchg
dec
imul
loop
adc
movsb
in
mov
jb
scas
aas
and
adc
push
mov
jo
rol
mov
je
lods
mov
or
push
pop
inc
push
imul
pop
imul
xor
adc
sub
sub
mov
je
lcall
adc
scas
adc
lcall
push
cmp
jno
dec
inc
out
inc
js
outsb
xlat
xchg
mull
mov
aam
outsb
add
jecxz
inc
and
xchg
cwtl
aad
cmp
jae
adc
aas
cld
nop
sbb
nop
sbb
inc
mov
in
test
ret
add
out
scas
lahf
sbb
mov
push
insb
and
out
insl
cmp
inc
mov
cmp
jnp
sub
dec
outsl
fidivl
adcl
jb
pop
aaa
nop
js
icebp
jnp
stc
pop
daa
sahf
fbld
cmp
push
mov
xor
jne
add
push
int3
mov
lret
cmc
inc
pop
sahf
in
xor
scas
hlt
dec
aad
mov
cmp
movsb
jbe
sti
sub
scas
lods
cs
andb
adcb
mov
dec
fs
in
cmpsb
push
mov
jg
mov
test
jns
gs
push
add
jmp
mov
pop
sbb
cmpsb
or
push
dec
or
adc
dec
mov
or
in
sub
out
addr16
jge
popl
cmc
std
push
gs
stos
sti
dec
ds
jns
xchg
sbb
or
push
int
jbe
pop
sbb
push
outsb
scas
outsl
cmp
mov
mov
stc
insl
je
dec
imul
or
lock
loopne
xchg
rorb
outsb
adc
lds
bound
pop
mov
adc
push
inc
mov
std
mov
jne
shlb
cmc
and
add
cmp
paddsw
aad
jg
fsubrl
sub
push
push
xchg
or
test
addr16
gs
hlt
pop
pushf
push
pop
jae
dec
mov
jae
push
mov
jge
jp
nop
xchg
pop
xchg
mov
add
stos
and
adc
mov
cli
push
shr
dec
mov
jge
movsl
enter
icebp
or
pop
xchg
and
daa
nop
push
lods
dec
mov
shrl
cmpsb
hlt
pop
and
cmp
lahf
jg
ljmp
fbstp
pusha
stos
lea
pop
loopne
out
scas
inc
mov
sbb
ficompl
repz
mov
mov
dec
popf
es
add
mov
stos
pop
mul
jmp
in
fiaddl
out
pop
push
sub
pop
jae
icebp
ja
jmp
add
ja
clc
pop
cmpsl
jne
mov
lret
cmc
or
sub
repnz
cld
dec
cs
xchg
pop
push
int3
jg
jmp
mov
dec
adc
iret
push
xor
fcmovbe
js
push
adc
xchg
jmp
or
arpl
and
push
mov
jbe
dec
xor
in
clc
mov
outsb
cmp
mov
ret
out
jmp
or
mov
pop
cs
repz
test
sti
sbb
mov
mov
adcb
lods
mov
jns
xchg
mov
mov
adc
mov
cld
popf
aad
sbb
fcompl
jg
ret
sbb
fdivl
jmp
iret
jnp
pop
push
sub
insb
fs
adc
push
loop
xchg
lds
push
mov
enter
jecxz
or
stos
xor
mov
iret
roll
jmp
fwait
aaa
pop
xchg
mov
cltd
and
inc
imul
lods
test
sub
mov
mov
sar
jle
xchg
call
sbb
dec
dec
loopne
testl
push
and
repnz
shrl
cmp
insl
jmp
lock
jns
pop
pop
dec
fs
test
pusha
outsb
sbb
jecxz
sub
adc
jo
loop
ffree
out
add
pop
movsb
mov
sub
sbb
push
sub
lods
add
in
inc
or
add
testb
bound
push
out
imul
gs
add
fildl
or
mov
mov
test
jb
adcl
test
xchg
shlb
sub
or
lcall
push
jecxz
pop
mov
push
sub
mov
test
mov
nop
movsb
rorb
movsb
jecxz
cmpsb
sarb
add
iret
fisttps
jne
xor
mov
lock
mov
iret
fadds
lds
pop
mov
jecxz
ja
pop
sub
pause
xor
jbe
loope
mov
jno
mov
stos
shrb
mov
andb
into
ret
cs
jne
cs
jns
loopne
lea
stos
or
aad
and
repnz
js
daa
shr
in
xchg
jns
fmull
sti
cmp
push
sub
jge
jp
mov
mov
push
xor
xlat
add
jp
xor
ljmp
push
push
mov
adc
jno
int3
sub
xchg
jnp
add
ret
imul
cmp
sub
mov
sbb
stc
lock
cmp
mov
mov
mov
outsb
js
cmpsl
cmpsl
jecxz
pushf
lea
xchg
mov
fisttpll
stc
dec
les
cld
popa
stc
rcrl
loopne
ja
dec
rcll
xchg
jno
stos
int3
mov
lods
adc
vmread
inc
sbb
das
xor
add
dec
arpl
repz
mov
cmc
das
and
mov
jle
pop
pusha
data16
hlt
cmp
dec
xor
decl
fs
outsb
dec
andb
cs
jge
scas
lcall
pop
jmp
iret
sub
arpl
sbb
lods
and
adc
shrl
adc
imul
sti
push
pop
mov
pop
mov
mov
add
stc
cmpsb
push
sbb
mov
mov
outsb
mov
or
xchg
xchg
push
xchg
adc
data16
nop
int3
mov
sbb
les
add
xlat
cmova
mov
add
dec
mov
test
jp
fs
cs
in
jno
xchg
mov
cmp
popa
shl
push
mov
popa
adc
push
xchg
les
push
lods
out
aas
push
cmc
mov
ret
mov
lods
mov
pop
and
sbb
sub
fidivrs
dec
loopne
or
mov
sub
out
pop
jg
into
pop
ds
xchg
outsb
add
loop
addb
inc
lock
stos
dec
pop
in
jnp
inc
dec
mov
jp
sbb
or
shl
pop
shl
cli
dec
sub
push
sub
inc
pop
lds
or
dec
es
rolb
and
dec
shll
or
pop
pushf
test
adc
fmul
addl
fwait
push
jge
rorb
ljmp
movsb
popa
lea
outsl
xor
ss
mov
mov
or
sub
lods
idivl
ret
pop
cld
aam
push
add
jb
adc
inc
mov
fcompl
inc
cmp
les
aam
out
push
fdivrs
mov
and
push
push
popf
shr
xor
fndisi(8087
stos
and
inc
push
lahf
out
pop
mov
push
xchg
jae
mov
mulb
stos
lods
sbb
jns
xor
lods
mov
pop
pop
mov
loope
fmuls
inc
arpl
fildll
test
add
pop
dec
aaa
push
jle
in
jge
subb
xchg
in
sub
xchg
int
jne
sbb
and
pop
push
cmp
in
roll
stos
inc
icebp
pop
sub
add
in
in
arpl
xchg
inc
add
inc
cltd
mov
pop
lret
in
loop
movsb
sub
in
cmp
cmpb
xchg
lcall
shrb
es
and
imul
aad
pop
je
sbb
movsb
xor
out
fwait
sbb
inc
hlt
test
mov
push
mov
cmpsl
ss
inc
fcmovnb
sub
mov
decl
mov
shll
mov
fstp
aas
fdivs
aaa
mov
mov
mov
push
jns
add
xchg
test
sub
sub
stc
lret
arpl
sub
cmp
adc
test
sahf
mov
mov
dec
js
xlat
and
js
ret
imul
push
adc
lock
leave
popa
mov
rorl
aam
jmp
push
mov
clc
iret
push
and
insb
mov
cmpsl
jle
movsl
and
sbb
adc
outsb
add
mov
push
imul
jmp
test
pop
jne
rcr
cmp
xchg
mov
xorb
outsb
sub
test
jbe
gs
das
outsl
xor
repnz
cmp
xchg
popa
or
loop
scas
dec
and
fbld
jo
and
shl
enter
pop
dec
repnz
les
pop
mov
jnp
and
or
cmp
and
sbb
push
pop
jecxz
jmp
mov
sub
mov
mov
addr16
inc
and
divb
push
leave
pusha
mov
xchg
stos
ss
mov
jmp
mov
jno
in
sub
pop
jmp
or
pop
add
int3
ss
fnstsw
mov
cs
pop
mov
or
jge
jmp
xchg
lods
and
inc
inc
adc
mov
roll
fisubs
add
in
pop
mov
sub
cmp
out
dec
xchg
xchg
sahf
lea
jmp
pop
adc
xor
add
loop
fstps
daa
jg
jle
xor
push
shr
incb
or
stc
jmp
scas
push
or
inc
mov
and
mov
mov
pushf
ret
mov
xor
jmp
sbb
cmpsb
dec
or
mov
jp
addr16
das
gs
xor
mov
sub
xchg
cmp
sub
andb
jge
jbe
add
out
movsl
fidivs
das
sahf
inc
jmp
sbb
jp
xchg
fistl
scas
loop
pushf
rclb
out
xchg
lds
add
mov
sbb
ljmp
rcr
mov
sub
jl
in
sti
fwait
xchg
mov
pop
iret
lods
sbb
and
pop
mov
shl
orl
sub
sub
dec
jmp
pusha
cmp
imul
dec
adc
es
sbb
or
xchg
or
inc
test
ret
push
inc
out
sbb
rcll
test
imul
push
outsb
pop
and
sub
lcall
sbb
and
movsl
cmp
lcall
imul
dec
inc
addl
cltd
into
arpl
insb
hlt
inc
sbb
shll
mov
sbb
push
and
aad
out
jle
test
sub
scas
loop
mov
sbb
sbb
push
push
adc
cs
push
mov
and
ljmp
rol
xchg
and
sti
and
pop
lods
andb
cmp
cmp
cmp
shll
adc
cli
push
adc
and
in
out
and
insl
das
pop
fcoml
aaa
mov
adc
jbe
pusha
pop
mov
inc
mov
cmp
fadds
mov
add
cli
sub
push
adc
and
cmc
adc
sub
jmp
push
jbe
fdivp
sub
mov
add
push
cli
fldt
sub
in
jno
xchg
movsb
sbb
incb
mov
test
mov
push
test
jb
hlt
into
stos
adc
inc
or
in
cs
je
shlb
mov
mov
jge
cmp
pop
aaa
jo
jecxz
stos
es
out
cli
push
mov
pop
shl
fnstenv
pop
and
pop
adc
pop
mov
in
add
js
dec
neg
lock
outsl
mov
jb
and
mov
ret
jge
push
cmp
fcmovne
cli
cwtl
jecxz
imulb
imul
cmpsb
adc
inc
ja
jp
dec
cmp
xchg
adc
aas
fadd
sbb
fsub
test
fs
or
test
pusha
test
out
cmp
scas
add
xchg
jle
adc
and
ds
jae
cltd
xchg
mov
sbb
std
imul
lret
push
push
lahf
cmp
popa
jmp
in
adc
clc
and
rcll
shlb
and
bound
sub
dec
jmp
inc
clc
loop
mov
inc
cmc
xchg
adc
push
int
jg
pop
into
testl
inc
test
fcomip
popf
add
repnz
xor
sbb
jae
jo
es
xchg
mov
sub
ret
test
ds
test
movsl
pop
jecxz
and
mov
clc
cs
lods
sarb
xor
repz
cmp
dec
mov
lock
jns
js
addr16
xchg
bound
jbe
xor
xchg
pusha
mov
gs
jb
fistpll
lds
cmp
xchg
ret
cmpsb
in
ret
add
fimuls
push
xchg
call
ja
push
cmp
in
adc
mov
push
pop
aam
push
add
iret
mov
inc
push
and
daa
mov
push
lret
jmp
fmuls
fld
jb
pop
enter
xchg
pushf
lock
dec
mov
pop
cmpsl
push
shrl
jle
push
imul
mov
sbb
mov
cmpsl
orl
les
stc
xchg
add
add
or
sbb
mov
xor
push
inc
es
repz
adc
aaa
cltd
pop
outsl
adc
scas
loope
loope
lret
mov
and
hlt
mov
rsqrtps
dec
lock
inc
pop
push
out
dec
sub
xchg
mov
push
add
mov
xor
pop
push
push
cmpsl
cmp
fisubrl
cmp
add
fimuls
jno
add
fldt
pop
call
neg
rolb
mov
or
xchg
push
xor
je
dec
sbb
std
push
mov
insb
outsl
out
cs
mov
out
cmpb
stos
rorl
ss
in
cltd
dec
fcoml
dec
mov
daa
ljmp
icebp
sub
mov
push
push
fsubs
sbb
and
mov
es
mov
pop
add
je
test
lcall
adc
xor
out
cmp
fwait
scas
pop
xchg
cmc
jmp
shl
lret
fnstcw
adc
inc
add
mov
clc
add
iret
fcmovnbe
aas
lahf
add
cmp
jg
inc
add
ret
loope
cltd
outsb
xor
pop
arpl
mov
jb
mov
pop
subb
int
icebp
sub
inc
add
popf
test
ja
xchg
mov
aas
adc
iret
cwtl
push
leave
lret
push
int
fwait
cmp
cli
pop
icebp
bound
mov
insb
cld
cmc
xchg
jo
bound
dec
cld
packsswb
stos
stc
sbb
mov
out
js
jne
fstpt
add
inc
ret
xchg
fldt
test
pop
aad
test
les
add
fucomi
jle
add
xchg
adcl
rep
sub
ret
inc
mov
dec
jmp
push
hlt
lock
daa
push
in
xchg
dec
adc
ret
loopne
and
xor
dec
push
lds
lock
std
mov
int3
jbe
mov
insl
movsl
std
xor
bound
movsb
loop
dec
addb
stos
push
test
shrb
nop
loope
cmp
fmull
hlt
repz
sar
push
dec
pushf
mov
or
sti
int3
lret
movsb
out
mov
ret
xchg
pushf
test
mov
cltd
xor
push
mov
in
sbb
dec
cmc
inc
scas
lods
pop
mov
lock
or
add
sbb
jle
or
dec
imul
mov
aas
lods
mov
jge
mov
xchg
mov
xor
add
mov
lcall
pushl
sbb
pop
inc
xchg
dec
adc
arpl
push
sbb
sub
imul
in
sub
lahf
call
mov
mov
xor
movsl
in
xor
jle
or
int3
icebp
sub
fisubl
rorl
or
in
adc
pushl
inc
lahf
je
cs
inc
sbb
cmp
sbb
cltd
int
jge
mov
jecxz
inc
adc
repz
out
aad
pushf
xorb
add
fmuls
cmc
bound
mov
cmc
movsl
or
pop
ljmp
enter
push
popl
ror
ss
out
fcmovnu
dec
ret
cs
jl
and
mov
cwtl
test
push
mov
or
inc
testl
xchg
mov
sbb
push
data16
jge
pop
call
std
mov
roll
jb
cmc
ror
fldt
pop
add
sbb
inc
fiadds
mov
mov
xor
and
stc
jp
movsb
or
cmp
aaa
aas
sub
xchg
test
stos
addr16
pop
push
stos
sbb
in
test
fsubrs
sub
dec
stos
lretw
movsb
mov
pop
xchg
and
jns
adc
or
jo
dec
out
jbe
pop
jne
dec
jp
inc
mov
into
cmpsl
stc
subl
ljmp
int
movsb
mov
dec
jmp
sub
in
xchg
mov
inc
mov
popfw
add
push
stos
arpl
push
addr16
sub
je
pop
js
mov
loop
ljmp
mov
or
mov
lcall
roll
push
push
xlat
and
out
shll
in
mov
mov
xchg
leave
frstor
imul
pop
scas
gs
or
cmp
cld
sbb
dec
movsl
inc
pop
divl
xor
jb
cmpsl
cmc
push
jmp
jb
repnz
mov
loope
ret
pop
cmp
repnz
sub
lret
push
ret
cmp
stc
enter
sub
jb
xchg
int3
int
pop
mov
mov
and
leave
and
xor
mov
mov
xchg
repz
cmp
fwait
push
int3
jbe
pop
cmc
jne
cmpsb
test
repz
push
ja
add
movsl
push
and
outsl
push
insb
into
or
fnstcw
cmpsb
cld
xchg
mov
arpl
repnz
or
call
xchg
mov
jnp
and
mov
push
mov
verr
push
adc
clc
ret
jns
or
xchg
inc
add
aas
mov
addb
jns
repz
mov
push
stos
ret
out
cs
xchg
pop
inc
xor
cmpsb
shrb
push
jmp
cmp
out
inc
repnz
out
adc
gs
mov
daa
jo
push
fwait
es
fs
xchg
out
xchg
pop
push
inc
popa
pop
inc
and
scas
daa
mov
loopne
rclb
jb
jl
mov
outsl
es
bound
cmp
pop
out
mov
stc
out
daa
xor
jg
jmp
xlat
sbb
ror
je
popa
push
mov
jmp
or
les
or
jne
jp
iret
lret
stos
scas
lret
iret
lea
daa
jb
xor
loopne
sti
scas
inc
or
add
jb
mov
mov
xor
mov
subl
icebp
std
loop
inc
loope
gs
mov
jecxz
iret
movsb
cmpsb
or
add
icebp
fcomps
xor
jge
fbstp
fwait
test
push
sbb
jne
push
push
pop
int3
cld
mov
cmp
pop
aas
mov
xlat
cmp
fwait
in
in
fnstcw
shlb
sub
add
or
pop
mov
daa
add
inc
lea
and
jno
insb
std
sbbb
xchg
in
and
jmp
shll
inc
ljmp
and
leave
aad
pop
out
out
lds
jle
jns
fwait
pop
cli
aaa
gs
push
in
adc
mov
pop
pop
fstl
bound
dec
sbb
loopne
call
mov
iret
shlb
jmp
mov
sub
adc
push
adc
mov
push
sub
test
insl
push
popf
xchg
xor
xchg
jmp
es
inc
and
aam
jmp
cltd
aas
ret
xchg
xor
out
mov
loopne
add
js
xchg
syscall
pop
pop
pop
js
cli
fnstsw
jae
addr16
xor
xchg
push
sub
xchg
push
ja
sub
rol
bound
cmp
mov
mov
cmpsb
int
cmp
inc
add
mov
or
loop
sbb
mov
xor
jp
ss
aam
loopne
add
lock
data16
or
adc
out
xchg
shl
aaa
fidivs
inc
mov
test
or
mov
push
cmp
mov
loop
popf
loope
jg
ljmp
stos
mov
cmpsl
mov
dec
mov
cltd
gs
add
in
dec
mov
jae
test
mul
fcmovnb
movsl
xor
pop
aad
add
aam
ljmp
imul
cs
push
xchg
notb
push
mov
mov
or
mov
pop
aad
sbb
add
xchg
mov
mov
psubb
pop
sbb
adc
in
mov
andb
push
jg
loopne
mov
insl
jb
fcmove
mov
out
loopne
rcrb
jl
jae
push
xlat
popl
test
out
cli
pop
mov
inc
in
sahf
push
jmp
jle
mov
dec
rcrb
aas
enter
js
lock
add
jl
hlt
daa
push
xchg
push
negb
aas
aas
sarb
mov
filds
push
mov
push
inc
hlt
pop
shrb
add
fdivl
mov
xorb
stos
rcll
fucomi
into
scas
test
les
mov
sub
ficoms
adc
fidivl
sbb
cmp
inc
cmpsb
mov
add
lock
adc
push
popf
inc
push
mov
ror
dec
inc
or
mov
mov
lds
test
mov
mov
inc
mov
dec
leave
aam
ss
jb
cmpsb
enter
pop
icebp
cmp
stos
push
jns
sub
mov
add
loope
push
push
xchg
stos
cmpsb
rcrb
int
iret
mov
mov
dec
push
iret
clc
shlb
gs
cmp
add
andb
xchg
mov
out
add
mov
mov
mov
jp,pt
xor
test
jb
stc
pop
cmp
inc
int
enter
aam
add
in
inc
add
or
rcr
xor
mulb
ss
popf
pusha
in
and
jecxz
mov
stc
xor
aas
insb
shll
xor
jbe
int3
test
inc
dec
mov
icebp
loopne
xchg
push
xchg
push
jne
pop
imul
add
outsb
xchg
sbb
scas
enter
es
int3
xorl
in
mov
cmp
or
negb
push
arpl
mov
push
add
sti
faddl
push
and
aad
xchg
int3
testl
iret
cmp
movsb
cs
insl
in
cltd
xchg
and
insl
jnp
xchg
push
roll
test
je
shrb
addr16
jg
icebp
test
push
jge
into
inc
add
test
pop
xchg
pop
pop
add
pop
fiadds
mov
cmp
repnz
xchg
imul
in
inc
hlt
or
movsb
int3
mov
incl
xor
shrl
std
mov
lret
jg
push
jnp
sub
push
in
jo
enter
mov
cmp
inc
mov
jl
jmp
rcll
popa
outsb
mov
xchg
out
lds
inc
ds
sbb
push
sbb
int3
cwtl
pop
sbb
xchg
loopne
or
lods
sbb
pop
ror
gs
fistl
iret
cs
xchg
xor
push
cmp
adc
or
and
pop
test
popl
movl
mov
sub
mov
sbb
xor
mov
push
cmpsb
xchg
daa
sub
and
inc
xchg
fimuls
sbb
std
je
int3
mov
lods
jecxz
andb
mov
pop
cld
clc
and
ret
cld
std
push
lods
add
push
imul
outsb
shlb
mov
cmp
idivl
imul
adc
aam
cmp
mov
push
and
sub
jo
fs
das
leave
mov
lahf
imul
shll
pop
push
inc
lahf
es
repz
push
push
pushf
fwait
pushf
pop
pop
dec
cli
push
sub
std
push
mov
sbb
add
cmc
jno
jmp
push
or
out
adc
push
mov
test
sbb
or
fs
daa
pop
sbbb
xor
mov
or
pop
aaa
adc
outsl
or
leave
stos
pop
fnstcw
mov
cmp
test
push
jp
xor
cltd
data16
loop
int
ljmp
dec
in
xlat
mov
add
mov
ja
jmp
cmpsb
push
dec
mov
cmp
lods
mov
fnstcw
adc
aad
mov
jl
push
icebp
mov
cmc
push
mov
push
popf
push
imul
add
add
or
adc
sub
int3
mov
mov
sub
dec
add
inc
test
imul
outsl
jnp
xchg
or
shl
data16
jp
dec
cltd
push
dec
pop
mov
and
and
insl
fidivs
lahf
mov
and
or
mov
aam
inc
cs
icebp
mov
ret
or
cmpsb
sbbl
push
loope
push
sbb
cld
fcompl
push
pop
fwait
pop
sbb
mov
mov
or
aas
aaa
push
int
in
xlat
sahf
int3
dec
mov
mov
adc
cmp
push
xchg
dec
adc
bound
in
jg
repnz
loope
test
mov
pop
hlt
ret
xor
sbb
and
insb
or
adc
and
mov
xchg
xchg
rolb
aam
std
fsubs
imul
aam
cmpsb
and
jnp
xchg
lock
jne
daa
dec
adc
cmc
cmp
sbb
and
mov
dec
jl
cmc
clc
rcrl
arpl
mov
ja
lcall
mov
out
out
in
push
in
cmp
sub
cmpsl
mov
ret
mov
xchg
imul
enter
sub
add
rol
inc
and
sbb
jnp
jge
in
in
hlt
mov
push
mov
push
and
push
push
je
dec
xchg
push
push
jg
inc
push
push
ret
stc
sbb
xor
xor
bound
sub
es
pop
xchg
cmpb
mov
jno
pop
jae
add
xor
xorb
repz
lret
mov
fnstcw
js
in
cmp
arpl
out
bound
xchg
pop
in
xchg
or
adc
or
add
mov
sub
inc
je
sbb
pmuludq
loope
ret
sti
add
cmpsl
adc
popa
xchg
movsl
rcrl
outsb
cmpsl
push
sbb
loop
jmp
mov
pushf
dec
dec
pushf
add
sti
adc
aam
and
jno
jle
pop
mov
fldenv
dec
dec
lret
push
add
cmpsb
fprem
lcall
cmc
pusha
xchg
movsb
or
or
js
insb
out
scas
inc
es
xchg
aaa
mov
dec
sub
push
ljmp
dec
and
mov
push
or
es
dec
clc
xchg
pop
dec
not
imul
out
xor
mov
mov
les
mov
divl
mov
pusha
aam
jo
mov
cli
fdivl
mov
mov
sbb
repnz
icebp
push
sub
out
push
test
push
adc
aam
sahf
or
js
hlt
aad
dec
jl
mov
sub
inc
xor
jno
je
mov
mov
push
xor
or
mov
insl
jge
adc
jbe
or
jnp
xchg
push
mov
xor
cmpsb
sbb
pushf
fisubs
pop
shrl
lahf
and
inc
mov
aaa
pop
add
aaa
lret
sbb
xor
std
das
lock
xchg
lea
fldcw
dec
fidivrs
aas
imul
lods
icebp
nop
sub
jnp
lock
mov
pop
loop
cmp
jne
lret
jb
enter
clc
mov
mov
pop
sar
in
clc
mov
push
bound
inc
sarb
fs
mov
sub
pop
cmpb
pop
and
in
scas
lock
ja
outsb
xchg
jne
outsl
cwtl
sbb
xchg
dec
and
cmp
jae
sahf
dec
not
call
rorb
cmp
xor
cmp
andl
add
nop
or
inc
and
rorl
arpl
and
cmp
movsl
xor
pusha
mov
cmp
lcall
xchg
pop
shll
jge
rcrl
cmp
cmpsb
inc
movsl
sbb
stos
dec
or
xor
outsb
and
loopne
add
dec
dec
jle
and
jl
mov
fcomps
wbinvd
inc
mov
cmp
lods
loop
sahf
inc
or
rolb
push
int3
pop
xchg
notl
add
lods
notl
cmc
data16
mov
mov
adc
xor
lahf
fildl
outsl
hlt
popf
add
sbb
in
ja
add
xor
dec
mov
push
pop
xchg
add
dec
imul
bound
sarl
mov
add
add
xorl
nop
jns
mov
cmp
xor
and
jb
imulb
xchg
and
adc
sbb
adc
jp
xchg
cmpsl
pop
ret
inc
xchg
jl
icebp
js
lds
mov
add
xchg
movaps
inc
mov
lea
mov
cltd
sti
mov
sub
mov
rcrl
or
cwtl
cmc
sbb
push
test
shr
roll
insl
sbb
xchg
adc
enter
mov
pop
mov
mov
adc
fmuls
mov
in
pop
xchg
sub
inc
addr16
lret
pop
push
jns
xorl
cmpsl
pop
pop
test
mov
cmp
jge
pop
xor
lea
daa
lret
repnz
xor
mov
mov
inc
pop
xchg
push
cli
mov
inc
jecxz
mov
cmp
arpl
inc
add
outsl
out
out
add
jne
stos
pop
mov
lea
test
enter
loopne
inc
scas
int
dec
int3
jecxz
ss
push
push
or
push
popf
pop
leave
fwait
je
scas
sub
lods
push
jns
and
adcb
in
cmp
sub
enter
mov
xchg
jg
lahf
inc
mov
das
and
xorl
clc
sbb
pop
or
sarl
dec
leave
sarb
xchg
push
aad
scas
sahf
pop
cmc
cwtl
cmp
shll
popa
mov
fs
sarb
outsb
popa
js
inc
into
sub
pop
mov
shll
nop
cmpsl
call
xor
clc
sub
mov
mov
xbegin
xchg
divl
add
mov
pop
adc
fs
fucom
adc
pop
jns
imulb
xor
sahf
pop
push
lret
xchg
lret
pusha
and
out
cmpb
mov
sub
mov
cmp
lods
idivb
cmp
rorl
jne
out
xchg
lea
push
stos
xlat
imul
out
mov
cmp
lret
mov
mov
push
icebp
sbb
mov
add
sbb
sar
ret
aad
outsb
mov
sub
rorl
dec
dec
bound
scas
mov
cmpsl
dec
negl
sub
ljmp
subb
out
xchg
pop
mov
loop
stos
jecxz
cwtl
push
ja
pop
aas
scas
and
push
xchg
xor
ficoms
xor
lcall
xchg
cs
push
lcall
lock
jg
popf
or
mov
mov
cmpsb
jnp
jo
aas
push
push
fnstenv
lods
xchg
pop
sub
imul
ss
xchg
push
cmp
dec
dec
pop
jg
cmpsl
cltd
cli
popf
xor
push
mov
out
xchg
out
pop
push
sub
push
dec
mov
in
push
rol
je
and
push
dec
xchg
dec
mov
xchg
sahf
movsb
xchg
outsb
lds
sbb
ret
mov
insl
jns
mov
mov
add
mov
mov
ss
inc
daa
js
push
xchg
xchg
and
pop
sub
fstl
and
fucomi
push
lds
pop
test
and
cmc
push
ljmp
xchg
inc
cmp
in
repz
mov
mov
cmpsb
push
fadds
mov
fstpl
push
push
mov
sahf
rorl
in
lods
sbb
testl
xor
cmpsl
pop
add
ss
shll
test
sub
fnsave
in
sbb
ret
mov
stos
fwait
inc
repnz
ret
pushf
fisubs
out
lods
push
sub
cmp
mov
pop
inc
into
mov
jp
push
jp
push
ror
cmc
lcall
add
add
std
in
mov
loope
adc
mov
outsb
xor
mov
push
pop
bound
push
push
xor
or
sub
pop
aaa
add
push
testb
xchg
push
call
cmc
rolb
addr16
fildll
inc
mov
adc
mov
or
push
cmpsl
dec
repnz
lds
jmp
stos
jp
popf
clc
scas
dec
fs
int3
mov
push
pusha
jle
dec
sarb
xor
stos
or
test
sub
imul
add
out
xchg
cmp
dec
xchg
cmpsl
dec
nop
cs
enter
mov
dec
pop
imul
sub
fnstenv
int
mov
jg
aad
and
mov
stc
scas
je
cmp
push
es
inc
leave
sub
dec
push
fs
shlb
and
icebp
mov
push
pushf
sti
pop
jge
inc
test
inc
ret
sub
shlb
out
adc
stc
add
jp
xchg
nop
fs
repz
adc
or
stc
in
mov
test
jl
fisubs
das
cmp
and
mov
stos
sbbl
loop
fucomi
stos
and
repz
fbstp
pop
sbb
lods
xchg
add
sarl
fwait
ja
inc
xor
dec
sarb
mov
push
push
sbb
xor
pusha
loop
jo
or
cmp
push
shrl
cmp
sub
dec
sub
pop
shrb
mov
fs
jl
xlat
fistpl
mov
popa
sub
imul
xchg
into
jb
dec
fsubl
insl
mov
mov
bound
cmp
movsb
into
aaa
push
les
repnz
add
pop
sarl
pop
mov
test
loopne
jbe
jecxz
adc
add
leave
rolb
in
les
xor
in
out
adc
lods
nop
and
sarl
hlt
xchg
xor
push
mov
mov
push
in
fsubrs
inc
fs
cwtl
test
pop
xchg
mov
mov
sbb
mov
inc
loop
out
jae
imul
mov
jecxz
adc
mov
neg
dec
cwtl
int3
sub
sub
imul
pop
lahf
or
push
negl
mov
mov
pop
scas
repz
ljmp
js
pushf
xchg
xchg
dec
pop
or
push
jg
or
fwait
in
push
movsb
xor
popf
mov
shlb
mov
adc
mov
outsl
xchg
outsl
push
test
inc
fcmovnbe
test
lret
fsubp
and
xchg
pop
in
ret
loop
adc
daa
pop
ret
lahf
das
std
js
cmp
inc
loope
repz
cs
adc
push
jnp
std
push
int3
fwait
pop
hlt
stos
jl
outsb
fldcw
jae
add
outsb
xchg
dec
fs
aam
push
pusha
test
cmp
add
inc
lods
leave
dec
leave
mov
inc
and
aas
icebp
movsl
lret
outsb
ud0
inc
mov
xor
loop
jns
int3
mov
out
xor
insb
mov
jmp
and
pop
or
xchg
pop
or
repz
cwtl
test
leave
pop
mov
dec
mov
lds
scas
mov
push
dec
mov
cld
and
scas
int3
xchg
iret
adc
es
cmpsb
loopne
mov
inc
mov
mull
xchg
loopne
xchg
or
push
in
sbb
ds
insb
xor
inc
movsl
scas
mov
ror
insb
in
bswap
lret
js
ja
mov
mov
pop
pop
pop
cmc
test
repnz
mov
xor
imul
jne
js
insb
ret
ficoml
pushf
enter
inc
flds
add
sahf
mov
xor
cmp
xchg
aaa
jg
xchg
jb
repz
push
inc
and
cmpsl
ja
push
ljmp
cmc
jl
enter
jmp
aaa
mov
pop
and
jecxz
rcrl
jle
addb
sub
out
pop
popa
rorb
hlt
push
in
rcrb
arpl
mov
pushf
std
sbb
stc
lret
pop
xchg
mov
add
and
pop
or
das
sub
test
cmc
dec
jg
stos
xor
push
out
roll
jg
aam
imul
push
into
js
sub
rcrl
xchg
pop
daa
std
cmp
adc
sub
xchg
sub
inc
inc
sub
jns
sbb
lea
inc
cmpsl
cli
xchg
je
dec
ss
aas
hlt
fdiv
xor
push
mov
xor
and
leave
mov
or
jns
fcomip
insl
mov
lock
lret
xchg
mov
mov
push
in
and
fiaddl
jg
mov
test
push
andb
push
or
fsubr
mov
adc
mov
aam
idivl
mov
or
mov
notb
mov
test
xorl
xor
bound
xor
and
scas
sub
rorl
xor
push
mov
lds
testb
adc
hlt
mov
xor
jmp
lods
sbb
repz
push
sub
jbe
sbb
scas
es
test
dec
fistpll
dec
in
rcl
mov
xor
push
cmp
test
mov
cmc
push
or
ja
or
pop
mov
ja
push
clc
in
cmp
fldcw
pusha
xchg
sbb
fimull
sbb
lret
dec
mov
adc
jge
adc
sub
repnz
dec
and
mulb
in
aaa
or
imul
nop
insb
xchg
mov
sub
daa
cli
jae
or
pop
imul
out
rcr
adc
cmp
add
xor
cmp
shrl
dec
sbb
add
ss
push
xchg
enter
popf
movl
loopne
jl
xchg
or
sub
mov
fdivrs
divl
jne
mov
or
pushl
push
pushf
push
or
push
leave
or
or
xchg
lods
int
fsubp
dec
mov
push
and
test
sbb
dec
inc
add
gs
shlb
sub
stc
nop
or
jnp
and
dec
mov
jo
xor
mov
mov
dec
lds
cmp
pop
fs
adcl
and
loop
cmp
pop
sbbb
movswl
cmpsl
aad
sbb
mov
cld
sbb
movsb
dec
push
aad
btr
jmp
andl
inc
add
dec
sub
xchg
cmp
mov
rorb
stos
pop
mov
fstp
mov
sahf
sarl
lods
add
xchg
hlt
mull
and
jmp
cmp
fdivrs
aad
pop
pop
leave
mov
add
ljmp
loop
jecxz
je
test
and
mov
push
adc
jl
popf
push
lret
lcall
xchg
popf
and
add
inc
mov
rcrl
mov
mov
mov
push
call
sbb
mov
outsb
outsb
mov
lock
cwtl
dec
or
xor
fwait
xchg
out
cmp
pushf
inc
int3
aas
sbb
mov
and
push
xchg
negb
inc
fbld
or
in
jne,pn
roll
ljmp
dec
ja
add
btr
test
sbb
xchg
add
xchg
pop
dec
cmp
js
inc
adc
shr
push
xchg
in
ds
push
jle
pop
jp
fsubs
jo
adc
icebp
push
inc
lahf
nop
xor
and
and
pop
flds
mov
push
xchg
mov
insl
xlat
push
pushf
call
xchg
mov
insl
lret
sbb
push
mov
int
mov
or
cmpsl
and
bound
ds
enter
shr
sbb
add
lahf
inc
push
js
out
mov
mov
or
lea
les
scas
loop
loop
adc
and
mov
inc
dec
aam
push
mov
shrl
jge
pop
jbe
jbe
dec
stos
lea
test
data16
inc
into
mov
cmc
inc
stc
movsl
daa
sub
or
out
testl
sub
jae
arpl
div
ficompl
add
imul
clc
sub
sbb
and
cmpb
and
into
out
dec
push
lss
sub
imul
mov
adc
mov
push
xchg
and
lds
mov
mov
stc
in
mov
mov
pop
lods
push
push
dec
movsb
int3
dec
dec
jle
cmpsl
mov
or
cli
mov
xor
out
icebp
cmc
jnp
test
ss
outsl
repnz
int3
sub
les
pop
jns
adc
pushf
js
mov
xchg
imull
in
imul
les
sub
xor
jp
adc
mov
stc
iret
imul
das
mov
lahf
lcall
call
ds
mov
mov
cwtl
je
sub
push
sub
sbb
adc
popf
call
inc
pop
test
push
dec
aas
cs
fildl
hlt
xchg
in
push
sbb
sbb
outsb
or
add
push
dec
les
pop
popf
loop
movsl
insl
lds
add
adc
dec
flds
test
cld
shlb
mov
punpckhdq
loop
shll
test
int
pop
ret
loope
inc
stos
pop
andb
pop
add
sti
dec
xor
pop
cwtl
xor
adcl
loop
mov
inc
or
int3
pop
inc
aaa
add
mov
jge
sub
sub
inc
aam
lods
mov
fisttpl
adc
imul
push
push
push
adc
aam
mov
icebp
push
xor
test
out
jb
adc
inc
shll
test
call
inc
push
mov
inc
cmp
aaa
aad
or
rcrl
inc
dec
sub
mov
mov
fistpl
xchg
int3
and
imul
ja
pusha
fisttps
sub
jnp
jo
add
icebp
rcrb
js
sbb
push
xchg
lds
bound
dec
icebp
lcall
nop
outsb
xchg
cmc
sbb
outsb
loopne
fsubs
arpl
sbb
sub
xchg
mov
mov
jg
test
mov
sbb
pop
cmp
mov
jmp
mov
cmpl
jns
fistl
in
clc
lea
pop
decb
imul
dec
ror
faddl
mov
pop
pushf
xchg
fwait
jp
push
ja
int3
call
insl
mov
lock
mov
fidivs
dec
cmp
mov
arpl
and
cld
cmp
xor
rcl
jo
push
push
and
mov
mov
shr
mov
xchg
les
aam
mov
imul
pop
sub
sub
fwait
bound
mov
pop
outsl
mov
lahf
xor
iret
jecxz
add
in
lret
mov
cli
mov
sbb
je
cmp
fiaddl
and
std
and
mov
mov
adc
push
pushf
cmp
loope
pusha
cmpb
mov
hlt
mov
iret
xchg
xor
shll
shll
and
fmuls
mov
push
xchg
xchg
mov
sti
or
xchg
ret
cmp
pushf
or
mov
xor
push
pop
cmp
fdivs
js
ret
jmp
idivl
fldt
or
add
pop
xor
cmp
cltd
or
ss
pop
push
into
dec
gs
cmpb
push
sbb
lcall
dec
lret
sbb
in
insb
std
cmp
xchg
mov
adc
jecxz
fisubs
push
push
sbb
jp
shl
ljmp
cs
repz
cmp
nop
cltd
sahf
inc
or
mov
icebp
jne
mov
aaa
repz
xchg
and
push
pusha
aad
lods
jae
jnp
pop
ret
ljmp
mov
stc
jl
cmp
jl
mov
insl
fisubrl
inc
movsl
mov
fisttpl
inc
sub
push
sbb
inc
lea
cmp
sub
pop
insb
mov
aam
out
add
in
adc
rorb
ds
ffree
ss
pop
adc
popf
lods
cli
sub
divl
push
sbb
pop
pop
push
mov
call
and
dec
aam
mov
push
bswap
icebp
adc
adc
mov
inc
or
test
lods
cmp
lret
int
frstor
cmp
or
jno
sbb
ret
push
push
jne
mov
pop
add
push
mov
mov
pop
add
icebp
lods
inc
cli
sub
ds
pushf
fiaddl
in
inc
inc
inc
rorl
seto
add
test
mov
rclb
push
add
mov
stos
imul
test
sub
mov
pop
aad
shrl
mov
imul
mov
in
dec
add
out
add
jl
faddl
and
mov
or
dec
push
xchg
jb
and
insl
test
call
inc
imul
ret
rclb
sbb
lahf
push
aas
or
sbb
push
aas
popa
in
ret
stc
or
cmp
js
rcll
mov
js
aam
ljmp
stos
xchg
mov
fwait
aas
add
jg
ror
add
push
in
repnz
lahf
dec
cmovb
dec
cmpsl
cmp
daa
gs
inc
cli
pop
repnz
test
cltd
rcll
adc
aas
lcall
inc
fsubrs
sahf
cmpsl
mov
jp
test
iret
and
repz
or
pop
dec
fst
sar
in
xchg
outsl
dec
mov
lret
jne
pop
mov
ljmp
in
push
jecxz
cmp
stos
mov
or
or
scas
push
je
leave
sub
insl
sbb
lret
rolb
mov
mov
dec
outsb
bound
into
or
test
mov
imul
movsb
popa
ljmp
leave
xchg
push
mov
sahf
loopne
ljmp
cmp
stos
ljmp
cmc
jnp
mov
aaa
cltd
lea
sarl
arpl
int3
popa
lock
pop
adc
lea
stc
out
fcoml
push
jb
mov
imul
stos
inc
push
test
out
xor
and
imul
lret
orb
jne
scas
push
xchg
cmp
xchg
xor
ja
int3
dec
jno
add
loopne
or
sbb
cmpsb
mov
popf
into
inc
jecxz
xchg
mov
movsb
jbe
cli
or
arpl
test
lret
jo
int
popa
mov
xchg
in
pop
lds
mov
add
stos
inc
adcb
insb
lods
lea
sub
jbe
or
sbb
add
mov
mov
hlt
test
roll
mov
xor
and
icebp
cmp
jb
add
jmp
fadds
dec
std
in
hlt
inc
and
pop
sub
aaa
das
sti
mov
sub
dec
inc
outsb
insb
cmpsb
rclb
fmul
inc
sbb
sub
mov
lods
mov
sub
aas
aas
xor
ds
sbb
cltd
movsb
and
or
fnstsw
repz
adcl
add
iret
in
in
or
inc
idivl
icebp
push
jecxz
xchg
mov
mov
sbb
and
imul
cmp
rorb
rolb
sbb
inc
lahf
popf
adc
mov
mov
setne
push
mov
pop
cmp
enter
out
mov
dec
in
fcom
pop
pop
and
sub
mov
sbb
mov
jno
fdivs
xor
les
shlb
imul
sub
lock
xor
aaa
sarl
jmp
mov
sbb
sbb
out
nop
push
and
es
fmulp
mov
pop
fcompl
mov
data16
call
dec
out
sbb
movsb
mov
dec
sub
inc
sbb
bound
pop
pop
and
addl
mov
pop
ret
orb
inc
das
pop
add
hlt
jl
mov
mov
ret
pop
adc
stos
mov
adc
push
stos
call
popf
pop
fisubs
adc
test
push
mov
ljmp
or
int3
data16
andl
mov
inc
xor
icebp
xorb
push
jb
mov
or
xchg
lahf
fcoms
popl
aas
lretw
mov
xchg
fxam
rol
or
psadbw
pop
icebp
mov
jecxz
jns
add
rorb
push
addr16
pop
xor
addr16
popf
cmpsb
mov
fdivrl
dec
mov
clc
mov
sarb
push
sbb
xor
fwait
js
and
or
ds
inc
jne
and
or
sti
loope
inc
xor
rorb
pop
dec
adc
jno
adc
jecxz
jp
aad
cld
insl
jbe
inc
cmc
sub
insl
stos
xchg
pop
xchg
cmp
xchg
stos
lods
sbb
cmpsb
cwtl
outsl
hlt
jmp
fcompl
mov
cmp
mov
dec
sbb
loope
mov
shlb
int
fdivrp
movsb
iret
sbb
scas
sbb
adc
pop
mov
adc
mov
pop
mov
addr16
pop
sbb
popf
sbb
inc
add
gs
sub
aaa
pop
pop
adc
aas
aas
mov
mov
sub
lea
sbb
shll
inc
cld
jmp
adc
pop
sub
and
mov
shrl
cmp
idivl
inc
sub
stos
sahf
mov
mov
xchg
dec
lret
call
sub
icebp
or
lods
stos
pause
scas
dec
sbb
lods
inc
sub
fldcw
cmc
jg
add
std
inc
hlt
xchg
mov
pop
stos
jnp
arpl
and
inc
into
aaa
rorl
cs
in
mov
mov
je
inc
pop
mov
and
jno
icebp
jmp
test
sarb
mov
push
sub
sub
dec
rcrb
rcrb
arpl
in
movsl
inc
and
jmp
sti
xchg
jecxz
dec
ja
inc
sbb
rcrl
xor
push
fistl
loopne
dec
in
mov
add
xor
cmp
jno
cmpsb
push
xchg
scas
sub
and
hlt
fisubrs
aaa
cmpsl
jl
fnstenv
das
call
roll
gs
and
xchg
test
insb
inc
aad
add
movsl
or
or
mov
rorb
aam
lret
push
js
call
cmp
push
inc
xchg
inc
addr16
outsb
mov
lcall
xor
lret
sbb
dec
xchg
stos
or
aas
add
stos
adc
or
ss
aas
enter
fisttpll
repnz
pop
inc
push
mov
add
sahf
pushf
or
mov
sbb
push
loopne
push
sub
xchg
mov
out
insl
cmp
jbe
lods
dec
adc
xchg
in
daa
adc
mov
outsl
mov
stos
cmp
push
cs
lock
push
fidivrs
pop
popa
push
push
fldt
jle
adc
mov
sbb
sub
sub
jnp
fidivrl
hlt
ret
mov
or
xor
insl
dec
iret
and
jmp
daa
repz
mov
into
insb
adc
out
fs
jecxz
dec
jo
dec
push
sbb
ret
in
movzwl
sub
mov
sbb
stos
pop
mov
std
inc
js
xor
inc
les
shll
mov
jecxz
inc
cwtl
test
scas
sbb
into
pop
pop
loope
pop
push
add
stc
dec
xor
adc
cmc
jae
sbb
stc
adc
fwait
lret
mov
adc
mov
fnstsw
pop
jbe
inc
outsb
mov
jae
mov
add
add
lea
pop
jl
sub
mov
call
nop
mov
mov
orl
je
or
pop
bound
out
sbb
mov
push
mov
repnz
test
cmp
cmp
push
ret
sub
fidivrl
jmp
loop
in
out
xchg
cmp
xor
or
dec
lods
shlb
jl
sub
movsb
inc
mov
aad
jno
inc
jg
mov
xchg
pop
aaa
sbb
mov
unpcklps
dec
xor
aam
mov
fadd
jne
es
outsl
add
mov
lods
lret
mov
das
int3
fcmovb
leave
ds
test
pop
xor
dec
std
adc
adc
cmpsl
mov
dec
test
sbb
fidivs
je
sbb
add
dec
roll
push
es
loope
xchg
add
push
fsubrs
clc
inc
outsl
repnz
fcmovnu
xchg
sahf
jnp
inc
xor
loopne
push
cmc
mov
aas
out
cwtl
pop
mov
push
in
cmpb
punpckldq
je
push
dec
cmp
xor
cmp
inc
stos
repz
add
aas
and
dec
adc
cmp
sbb
push
sti
mov
arpl
shll
int3
pop
dec
loope
rcr
or
dec
lret
adc
xchg
cmpsl
lods
xor
insl
dec
lock
stc
mov
test
add
xor
enter
aad
popf
cmp
mov
mov
pop
ret
push
sbb
rcll
sahf
adc
push
xchg
xor
imul
and
jno
mov
je
roll
and
ret
xorl
pop
insl
ja
in
in
gs
push
mov
fidivl
lea
and
dec
or
pushf
mov
xchg
cmc
in
mov
xchg
sub
ficoms
sub
mov
push
dec
xor
adc
ds
cli
lods
sbbl
mov
push
xor
sub
sbb
xor
mov
lods
dec
jbe
outsl
mov
cwtl
inc
ja
lods
jp
bound
addr16
in
mov
inc
leave
cmp
or
adc
bound
lret
push
out
das
push
push
inc
cmp
scas
push
xchg
fldl
xchg
mov
and
or
sbb
lret
jmp
mov
rcll
mov
cmp
cmp
push
fwait
mov
mov
es
inc
xor
sbb
outsl
sbb
push
nop
lods
or
popa
push
repz
fisttpl
rcrl
pop
xchg
mov
xchg
fisubs
pop
jo
outsl
pop
clc
movsb
arpl
add
push
clc
dec
pop
icebp
push
movsl
pushf
stc
out
lock
ret
pop
sub
imul
xchg
outsb
mov
loope
sbb
int
insb
fldl
push
mov
cmp
aas
cmp
cmp
lods
insb
jcxz
push
jl
sub
and
jg
mov
inc
int
mov
imul
pop
fnsave
or
xchg
testb
pop
cltd
cmp
mov
in
enter
incl
lods
or
jg
shlb
pushf
jne
fcmovne
movsl
push
pop
cmpsb
stos
test
mov
in
xlat
addb
lcall
lds
adcl
sahf
outsb
push
mov
ja
cmp
and
rol
xlat
inc
call
ljmp
jmp
add
pop
push
lds
dec
ds
xor
mov
testb
xchg
fs
fs
dec
or
test
dec
lea
xchg
dec
in
jge
leave
sbb
hlt
aas
push
hlt
push
iret
cwtl
jae
mov
ja
adc
or
xor
mov
mov
fxtract
int3
mov
sbb
xor
push
jae
ret
sub
fmuls
pop
lcall
rorl
push
pop
pop
fiadds
cmp
idivl
or
mov
iret
xor
sub
mov
jg
sbb
mov
mov
lods
add
in
pop
push
test
sti
inc
int
loope
cmpb
stos
mov
push
or
sbb
mov
pop
test
int3
sub
orl
jle
and
idiv
dec
outsl
jb
dec
xor
sarl
xor
sub
stos
dec
in
push
add
sbb
cmp
mov
lahf
pop
sub
pop
mov
leave
js
sub
aam
xor
sbb
cmp
cld
cld
xor
and
mov
fistpl
add
into
mov
imul
and
and
enter
xchg
lea
arpl
pop
push
ficomps
imull
dec
xchg
mov
sbb
pusha
cmp
test
sbb
ror
xlat
mov
fwait
bound
add
lret
add
xlat
test
and
xchg
movsl
outsb
mov
jb
fwait
mov
aam
pop
cld
lahf
icebp
xchg
lahf
popf
cmp
xor
loopne
dec
mov
test
cmp
cmp
setns
add
and
xor
cmpsl
and
repz
sub
ss
xor
popa
or
xchg
andl
add
add
out
jp
aas
inc
sbb
mov
xlat
outsb
ret
stc
mov
int
adc
pusha
std
push
mov
cld
fs
adc
je,pt
push
xor
xchg
arpl
mov
lret
xchg
in
xor
ds
cmpsb
xchg
xchg
fldcw
pusha
xchg
insb
mov
xchg
dec
hlt
ret
fimuls
fidivrl
insb
sbb
pop
daa
push
lea
sub
sbb
stos
push
inc
shr
loope
adc
lcall
addr16
add
inc
inc
stos
add
sti
pop
aas
addr16
mov
mov
bound
push
dec
rclb
nop
or
push
xchg
hlt
lahf
push
push
cmp
xor
idiv
xor
outsl
xor
call
inc
xor
sub
push
loop
sbb
cltd
movsl
sbb
inc
aad
loop
push
dec
adc
jmp
jns
push
dec
sbb
insl
dec
movsl
pop
inc
pop
mov
sbb
stc
aam
into
sti
inc
inc
test
lods
sbb
mov
mov
adc
sub
lock
xchg
and
movsb
sti
insl
cs
jg
lds
pop
inc
fcmovnb
pop
push
xor
pop
ret
xchg
inc
sub
mov
dec
std
xchg
dec
push
pop
fcomp
insl
loopne
and
inc
adc
add
add
hlt
and
dec
pop
sbb
cwtl
ss
insl
cwtl
add
rorl
cli
sbb
lock
dec
iret
fadd
nop
cmp
or
cmp
into
lahf
mov
or
scas
xchg
dec
ss
call
frstor
add
pusha
aas
and
outsl
repnz
sarb
lcall
pop
shlb
dec
and
mov
dec
jno
mov
loopne
enter
push
sahf
imul
and
out
pop
add
iret
add
shll
imul
adc
add
adc
rcll
jmp
jmp
or
stc
or
mov
sbb
mov
mov
and
aad
inc
mov
mov
dec
adc
cmp
out
push
pop
ficoms
lret
in
lret
fwait
cmp
clc
std
lea
popa
cmp
das
sarb
movsb
stc
xor
aaa
jecxz
pop
icebp
push
push
ds
and
mov
mov
sub
jecxz
fnstcw
movzbl
xchg
daa
and
cmc
std
lea
lods
ret
lock
push
les
pop
insl
ucomiss
jb
sarb
or
dec
add
mov
xor
test
stos
sahf
push
xor
scas
gs
shrl
aas
or
jbe
pop
xchg
sub
and
fwait
pop
popf
jecxz
mov
push
push
mov
add
sub
cmp
mov
out
push
movsl
inc
je
sub
sub
loope
xor
push
imul
stos
pushf
push
xor
cmp
inc
ljmp
jb
mov
es
mov
test
dec
sbb
jo
cmc
xchg
ret
or
ljmp
mov
pusha
or
ret
int3
in
nop
arpl
mov
enter
scas
jle
sbb
out
adc
shll
sbb
jbe
mov
or
jbe
movl
and
in
std
push
scas
outsb
insb
fildll
int
addr16
sub
mov
fwait
dec
push
mov
xor
push
cmpsb
mov
jg
pop
jle
stos
push
mov
jns
pushf
clc
test
push
in
inc
fwait
sbb
pop
pushf
add
mov
cwtl
xor
cwtl
jmp
pop
jno
xchg
pop
or
bound
mov
rcr
mov
inc
mov
mov
cmpsb
out
and
mov
and
pop
sbb
js
outsb
cmpsb
mov
jge
or
cmp
gs
dec
jns
adc
and
pusha
mov
popf
rcrl
pop
popa
pop
and
icebp
in
repnz
mov
into
xchg
outsl
sub
push
dec
jl
scas
sbb
imul
xchg
jl
test
xchg
xchg
loopne
push
arpl
ret
dec
int
xor
or
mov
insb
int
pop
sub
pop
push
insb
das
popf
out
notb
sbb
inc
push
add
test
ja
xor
cmp
push
pushf
testl
cmpsb
jg
popa
shlb
sahf
stc
pop
mov
and
shr
push
subb
sub
mov
push
jecxz
push
cmp
inc
lret
mov
xchg
add
imul
jbe
sub
imul
xor
or
ja
leave
mov
xlat
xor
sbb
dec
ss
jmp
jl
ret
insl
js
xchg
out
xor
es
aam
leave
test
decb
aas
jl
mov
sahf
dec
rcll
mov
lea
dec
inc
cltd
jno
jo
test
mull
das
divl
or
add
cmp
adc
mov
ja
sub
xchg
ret
sahf
popa
je
int
fwait
sbb
outsb
xor
aas
repz
stos
repnz
insl
sub
jle
jae
into
adc
adc
jle
scas
sub
lret
dec
inc
inc
dec
outsb
mov
dec
orb
adc
xlat
movsb
adcl
sbb
jl
aad
daa
xlat
jbe
push
pop
test
inc
xchg
mov
jb
sub
and
es
sbbb
mov
stos
je
push
add
ljmp
nop
fcompl
dec
shll
add
or
cmp
cmp
dec
movsl
call
lret
mov
fistpll
inc
xlat
inc
mov
mov
and
and
jno
push
cmpsb
sti
adc
pop
cmp
scas
inc
imul
das
pop
cmp
icebp
adc
mov
inc
cmp
mov
lods
xorb
adc
out
dec
xchg
push
jb
nop
test
xchg
fisubl
cmp
xchg
sbb
inc
jmp
stos
in
lds
addr16
xchg
mov
aad
lret
in
pop
pusha
push
jne,pn
test
and
jb
dec
mov
scas
fs
imul
mov
sub
or
xchg
aam
push
out
shlb
or
andb
scas
in
addb
xlat
sarl
pushf
leave
and
pop
sbb
xlat
push
mov
sub
mov
xchg
idivb
add
xchg
repz
int3
in
mov
out
dec
call
cwtl
jecxz
gs
and
inc
dec
daa
xorb
cmp
mov
nop
fwait
pop
pop
xor
and
dec
sahf
inc
popf
mov
jg
and
mov
dec
adc
sub
invd
mov
pusha
jmp
mov
enter
sbb
scas
int
rcrb
adc
int
jno
fxch
aam
add
jne
lds
add
or
cmpl
std
scas
cltd
adc
add
xchg
lahf
pop
inc
pop
push
outsb
push
xchg
sub
jecxz
lea
or
inc
pop
aam
jmp
shlb
fsub
lods
mov
jg
ss
cmp
mov
sbbb
jae
sti
push
jo
push
in
mov
nop
scas
pop
shll
ffreep
xchg
lea
adc
sub
push
adc
inc
and
jbe
adc
mov
daa
loop,pt
and
fwait
inc
inc
inc
inc
cmp
push
xor
or
out
mov
leave
cmp
pop
scas
loop
into
scas
arpl
jns
pop
sub
aaa
js
negb
ffreep
mov
mov
cmp
pop
mov
pop
cltd
and
jnp
xchg
cmp
add
iret
sahf
sub
lods
out
fcmovnu
jmp
jl
adcb
mov
sub
pop
adc
out
dec
insb
push
push
xchg
dec
add
adc
jns
fs
cwtl
cmp
sub
jmp
cmp
arpl
sbbl
mov
xlat
jns
pop
mov
cli
repz
fsubp
scas
lea
shr
in
mov
jae
dec
xor
sbb
fwait
out
mov
mov
test
mov
inc
push
jl
mov
arpl
adc
adc
data16
fcomps
mov
jbe
sub
addr16
les
sub
arpl
fdivrs
mov
cmpsl
pop
inc
enter
in
push
xlat
mov
das
jmp
inc
pop
jl
divl
or
std
sbb
daa
in
rorb
mov
loop
out
add
ds
out
into
cmpsb
fnsave
jo,pn
cmp
lods
addr16
xchg
push
jno
arpl
sbb
movsb
sti
push
mov
imul
cmc
scas
xchg
jbe
xor
and
cmc
pushf
push
mov
mov
pop
jbe
std
scas
sarl
fmul
push
xor
jns
les
push
mov
and
mov
cmpsl
xchg
fsts
adc
xor
cmp
std
add
cld
imul
cmp
std
sbb
test
mov
mov
fisubrs
lods
pop
sbb
sbb
in
mov
incl
inc
xchg
mov
add
or
loopne
jp
cmp
mov
mov
loop
adc
adc
fnsave
inc
out
sbb
and
pop
push
sbb
or
inc
inc
sub
xchg
mov
addr16
popa
xchg
outsl
sbb
cs
jmp
lea
lds
minps
adc
mov
mov
jmp
js
xchg
pop
inc
inc
std
ret
dec
xor
add
push
scas
sbb
shr
lahf
bound
push
mov
scas
pop
pop
pop
in
out
je
add
popf
pop
int3
cmpsl
push
mov
js
test
pop
leave
add
js
aaa
dec
pop
das
out
mov
and
loope
dec
add
lds
shlb
push
jmp
fsubrl
mov
or
xchg
or
xchg
add
xlat
or
test
stos
and
push
xchg
out
mov
fcoml
xor
adc
add
cld
jns
xor
nop
je
insb
mov
pop
mov
addb
inc
push
ljmp
mov
push
push
and
addr16
sub
fistpl
xor
pop
xorl
pop
pop
jle
push
pop
pop
mov
jne
push
jo
mov
sahf
decl
xchg
sbb
cmp
dec
loope
jl
scas
call
int3
pushf
repnz
or
lods
inc
loope
push
js
insl
dec
xor
leave
cmp
out
stos
xor
test
add
andb
xor
jne
mov
shrl
popf
loop
and
add
sub
jle
adc
bound
ja
cmp
inc
cmp
jb
and
mov
mov
enter
jge
icebp
add
mov
pop
xchg
and
xchg
daa
repnz
adc
xchg
icebp
lahf
cwtl
sahf
xor
inc
mov
xor
flds
mov
xor
mov
dec
fwait
pop
cltd
sub
mov
sbb
cmpsb
stos
push
adc
adc
test
push
and
pushf
mov
dec
push
xchg
mov
adc
rolw
pop
pushf
add
sub
addr16
cmp
cmp
aad
push
ljmp
add
and
inc
ret
adc
pop
jge
stos
fadd
mov
popf
mov
inc
out
adc
mov
and
xchg
arpl
js
faddp
dec
sahf
adc
daa
or
shll
pusha
xor
xchg
lds
push
loopne
or
cld
lahf
arpl
push
fdivrs
and
mov
dec
scas
jmp
gs
int
filds
fildl
xor
movsb
ret
testb
inc
and
xchg
out
lock
movsb
sub
dec
mov
out
popf
jo
mov
push
in
xchg
insb
test
push
mov
sbb
shl
inc
mov
push
pop
xor
mov
outsl
xor
mov
out
movsb
mov
adc
or
add
jecxz
cltd
jns
cmp
aad
imul
push
dec
push
ficomps
dec
fst
arpl
push
sahf
push
mov
in
xlat
inc
pop
loopne
sbb
outsl
xchg
loopne
pop
mov
dec
mov
ficoml
ds
ljmp
lea
pusha
mov
insl
sbb
xchg
imul
ret
test
dec
sbb
cwtl
lahf
insb
aam
pop
jns
mov
int
add
loopne
sub
mov
cmp
std
add
in
or
es
clc
adc
jb
cltd
mov
lds
adc
test
sarb
sub
push
nop
std
test
enter
or
mov
pop
xor
push
mov
xor
mov
cmp
mov
sbb
rcrb
mov
adc
mov
pop
aaa
cwtl
inc
jmp
icebp
repnz
imul
adc
sbb
mov
sbb
xor
xor
repnz
cmpsl
cmp
stos
mov
mov
outsb
pop
push
clc
mov
cmp
or
adc
mov
sub
mov
outsl
mov
rcll
sbb
adc
lock
jle
push
sub
ret
lock
xchg
cli
mov
pop
xchg
cmp
roll
push
dec
jno
outsb
ja
inc
fldcw
or
into
movsb
sti
fdivs
fdivrl
adc
fnstsw
mov
rcrl
aad
push
mov
rcr
mov
pop
addr16
in
aas
cli
mov
push
sub
sarb
adc
scas
in
sbb
rcrl
test
dec
cld
mov
and
sub
dec
outsb
fldl
cmp
dec
iret
decl
xorl
ja
pop
jno
lret
cmpsb
push
orb
adc
sub
repz
adc
and
sbb
mov
inc
daa
insb
loopne
ja
cld
daa
addl
arpl
stos
dec
sub
movsl
jae
fmull
cmp
cmc
leave
push
insl
cmpsb
jge
bound
outsb
pop
imul
jmp
dec
sub
cmpsb
push
push
int
lea
inc
fimull
out
sub
push
test
shll
in
scas
shrl
inc
mov
xor
jp
rolb
jae
test
dec
cmpsb
addr16
xor
add
pop
arpl
and
cwtl
jmp
clc
cmpsb
fldt
push
mov
stc
xchg
xlat
aaa
test
dec
andb
xchg
pop
sti
test
xchg
xor
pop
sub
insb
push
sub
cltd
cmc
mov
sti
fildl
cs
pop
add
ss
xor
lock
xchg
add
adc
push
lds
pop
ret
fldl
sbb
mov
ja,pn
mov
gs
cmp
fxch
push
xor
mov
push
mov
rorl
bound
das
sub
cmpsb
fnstcw
mov
repz
push
rorl
lods
rcrl
in
mov
in
cli
ss
fdivrl
xchg
lret
shrb
mov
loopne
in
mov
push
pop
jne
cmp
std
xor
das
mov
repz
push
outsl
mov
repnz
sbb
in
and
pop
test
xchg
lods
stc
jbe
inc
jg
jo
and
ret
mov
pusha
call
mov
ljmp
sbb
lock
test
je
push
jno
leave
gs
xchg
out
lock
cmpb
fcoml
fwait
frstor
sub
xchg
and
mov
push
cmp
retw
inc
into
jnp
ss
in
ret
loop
ret
sub
lret
repz
je,pn
je
ljmp
and
add
xchg
data16
mov
aad
scas
sbb
jg
adc
and
mov
out
popa
sub
cmp
fwait
jl
adc
or
sbb
mov
adc
sti
addr16
sub
cwtl
outsl
jecxz
cwtl
ficompl
adc
dec
aas
sbb
mov
aam
inc
out
jnp
into
insl
sti
xor
push
dec
imul
jb
jge
and
pop
imul
add
insl
sub
push
movsb
cmp
mov
sarl
xchg
or
sbb
xchg
leave
add
imul
and
cmp
arpl
ret
push
ss
add
jne
pushf
dec
test
cmp
loope
fisttpl
mov
mov
ljmp
shll
clc
mov
add
cmpsl
sub
repnz
push
addr16
adc
push
cmpsl
mov
dec
sbb
loope
insl
gs
mov
jmp
movsl
test
loopne
fcmovnbe
jl
or
inc
clc
in
shll
lds
dec
iret
lcall
cmp
xlat
pmuludq
pusha
adc
sub
push
test
popa
pop
mov
lds
dec
and
cmp
lods
dec
mov
je
xor
inc
in
push
mov
xchg
and
out
xchg
in
in
in
sub
call
cltd
jle
jns
inc
in
in
pop
cmp
mov
push
scas
insl
ljmp
xor
lock
stc
mov
mov
mov
fiaddl
mov
mov
and
inc
out
les
fwait
outsb
sub
repnz
mov
in
pop
mov
cmp
out
aad
jns
mov
jb
dec
cmp
and
fbstp
popa
cmp
jl
into
pop
rcr
lret
scas
outsl
mov
shlb
aaa
fcomp
mov
pop
movsb
jmp
in
lock
inc
daa
cmp
cmp
mov
jnp
int3
out
out
cld
sbb
push
fldcw
and
mov
int
sub
imul
xor
push
sbb
or
popf
pop
fdivrl
int3
push
ds
push
pop
arpl
jne
dec
jle
xchg
mov
mov
lods
int
inc
orl
inc
mov
jge
mov
sub
sbbb
or
sahf
cmp
std
cmpsw
inc
push
jbe
arpl
or
push
leave
push
into
rcl
lea
cld
mov
xchg
ret
cmpb
clc
repz
pop
out
push
out
aam
and
std
xchg
xlat
add
push
aas
xchg
aaa
pop
mov
sbb
insl
or
mov
sahf
add
xor
adc
pop
push
mov
cmpsb
push
call
jbe
inc
popa
mov
xchg
mov
sbb
rdmsr
jg
arpl
rcrl
mov
jle,pn
jo
jmp
pop
jp
daa
fnstenv
dec
inc
ja
xchg
mov
sub
fnclex
sub
mov
fdivrs
das
pop
test
jl
pop
mov
or
insl
push
xchg
xchg
test
xchg
sarl
jp
lods
fildl
daa
mov
pop
and
xor
jl
add
inc
movsl
dec
or
inc
sub
stos
mov
mov
sub
stos
mov
clc
lods
inc
or
xchg
mov
jb
mov
push
xor
inc
inc
push
dec
idiv
inc
pop
xor
add
cwtl
adc
rorl
pop
lods
pop
data16
and
ljmp
cli
iret
outsl
inc
mov
mov
lods
push
jmp
pop
xor
ja
enter
pushf
sub
jns
in
mov
jbe
mov
cmc
xchg
adc
scas
sbb
rcrl
mov
add
ficomps
loopne
arpl
mov
sti
inc
jg
lret
and
xchg
cli
xchg
les
pop
lds
outsb
addr16
push
nop
jl
pop
ljmp
lock
mov
loopne
lods
mov
sub
sahf
and
out
das
ficoml
mov
es
adc
push
jg
jnp
repz
loope
xor
fs
cmp
cld
sbb
xchg
push
fistl
ljmp
push
outsb
scas
enter
mov
ja
adc
cli
roll
sub
lahf
repz
aam
fwait
mov
in
jg
push
jnp
add
push
addl
cmp
xchg
add
lret
repnz
dec
dec
mov
and
sub
lods
xor
ja
mov
inc
lock
mov
cmp
add
sbb
hlt
mul
fwait
lods
inc
jbe
scas
daa
and
sub
or
hlt
arpl
xor
dec
into
aaa
popl
idiv
mov
mov
add
in
std
xchg
mov
and
xor
aam
ret
imull
xlat
jnp
loope
fsts
sbb
mov
push
xor
dec
and
push
xchg
mov
cwtl
or
out
push
or
in
jo
sahf
enter
mov
and
int
xor
pop
arpl
adc
aad
mov
mov
adc
imul
cmpsb
jle
jb
pop
dec
mov
lcall
insl
jmp
lret
pop
imul
sub
cwtl
hlt
out
movsl
je
jmp
xchg
scas
hlt
jg
cli
and
ss
mov
out
push
pop
push
arpl
js
lahf
pushf
xchg
pop
mov
xor
cmpsb
clc
out
dec
andl
adc
ffreep
mov
pop
push
dec
scas
inc
cmp
push
pusha
add
daa
rcrb
lods
loop
lret
addr16
pushf
jno
pusha
inc
rcl
add
push
pop
push
lcall
pop
adcl
lret
add
or
cmp
ja
pop
aam
call
addl
cld
stc
adc
push
jb
mov
je
shrb
adc
and
out
ljmp
in
jmp
sar
push
test
push
and
push
mov
pop
xlat
lock
jbe
in
add
jae
sub
push
mov
inc
arpl
xor
in
popf
in
sub
push
jecxz
sub
shr
pop
pop
ja
fidivs
jo
add
fisttpll
cli
xchg
sub
xor
ret
ret
out
nop
iret
push
sbb
push
inc
sbb
std
jb
mov
cmp
sbb
mov
je
daa
dec
inc
or
jl
mov
negl
cmp
outsl
pop
add
push
cmp
mov
rcrl
adc
ja
jmp
cmp
adc
out
jbe
hlt
mov
mov
cmpsl
add
push
into
pop
out
xor
mov
sahf
jge
xchg
adc
repnz
je
dec
jecxz
xchg
add
mov
gs
ret
pop
mov
inc
sub
lds
inc
push
loope
into
push
sub
push
push
into
sbb
sbb
xchg
inc
mov
call
cmp
cmpsb
test
icebp
xorb
popa
aam
loop
notb
repz
in
lcall
scas
fs
addl
and
dec
imul
lahf
dec
push
ret
and
adc
cmp
sub
orl
add
je
xchg
leave
xchg
fadds
xor
inc
andl
icebp
push
fs
ja
jno
sbb
stc
jb
cmc
pop
push
aam
dec
mov
add
push
outsb
jnp
jl
sub
mov
and
sti
inc
xor
mov
push
pop
mov
stos
cmp
in
sbb
and
mov
jbe
and
push
push
jb
cld
push
mov
mov
xchg
shlb
or
and
mov
and
imul
adcl
outsl
jg
pop
mov
lret
jne
or
add
lds
pop
jp
cli
sub
fs
in
jecxz
sbb
pop
outsb
lea
push
bound
pop
mov
js
cld
xor
es
push
push
mov
and
xchg
nop
stos
mov
jno
cli
push
mov
add
xchg
and
jecxz
fcmovu
cmp
jmp
clc
or
add
xor
and
inc
rorl
jnp
or
fs
adc
mov
and
mov
clc
mov
iret
mov
int3
out
lret
lahf
test
test
and
insb
test
pop
push
or
mov
les
scas
pushf
sbb
dec
dec
shll
mov
pushf
fcompl
popf
pop
push
enter
mov
movsb
enter
push
mov
push
adc
jno
cli
arpl
dec
inc
fdivrp
fdivrs
lret
pop
push
xchg
int3
rcll
dec
jae
lea
in
jno
pushl
and
pop
xor
imul
xor
sub
cmc
adc
pushf
push
push
leave
mov
pop
xchg
rorl
dec
inc
jg
lcall
ja
outsl
hlt
ja
bound
add
lea
push
mov
push
push
jle
lret
fstpl
xchg
jmp
jmp
pop
sbb
or
add
int3
xor
loopne
mov
mov
addr16
mov
std
fucomp
mov
adc
inc
mov
fs
cmp
push
popa
pop
jae
mov
out
xlat
xchg
fwait
test
insb
fiadds
pop
mov
iret
incl
insl
jns
mov
pop
cmp
sahf
sub
add
popf
scas
pop
leave
xorb
lods
or
lea
cmp
clc
mov
movsb
lods
dec
push
fsubrp
mov
into
rorl
add
mov
inc
mov
xor
das
std
inc
outsl
mov
enter
mov
imul
cmp
or
cmpsl
ret
std
test
jae
push
fstpl
arpl
sbb
push
out
sarl
fs
dec
pop
push
sub
loope
cmc
cli
dec
nop
mov
dec
mov
add
xor
sbb
inc
je
mov
sbb
loopne
cmp
mov
sub
pop
pop
mov
push
jbe
and
push
dec
popf
and
mov
add
or
mov
inc
or
ds
inc
aad
insl
in
fsts
push
rcll
or
negl
xor
bound
adc
jmp
data16
nop
pop
sub
pop
and
and
adc
mov
adc
test
aaa
cmc
scas
and
dec
mov
outsb
lea
xlat
scas
jg
pop
jg
sarl
out
divb
sub
cmpb
aad
je
push
push
inc
sbbl
notl
data16
xor
mov
xor
xchg
sbb
stos
jl
mov
sahf
sub
ret
push
fstpl
xchg
push
add
cltd
cmc
and
in
out
mov
fbstp
scas
add
mulb
out
fcomp
dec
outsb
fwait
cltd
mov
jne
cmpsb
xchg
stos
mov
test
push
dec
int3
pop
or
out
enter
push
movsb
repz
adc
xor
and
inc
dec
pop
gs
pushf
arpl
sub
mov
pop
pop
dec
call
pop
mov
mov
mov
lahf
cmpsl
stos
dec
out
rcrl
fld
sub
add
dec
and
mov
xchg
sub
ss
loopne
mov
mov
or
inc
adc
mov
ja
dec
loopne
xor
inc
inc
mov
xor
mov
pop
mov
jmp
test
dec
es
jo
scas
lods
push
in
push
dec
cmp
xchg
xchg
add
push
jg
jns
push
jnp
cld
add
push
movl
adc
insl
enter
bound
add
call
or
shr
loope
data16
xchg
es
imul
inc
pop
popf
cmp
vphaddudq
jmp
out
out
xchg
aam
out
popf
test
jno
xor
data16
and
inc
je
adc
addr16
or
sbb
cwtl
push
xchg
fbstp
dec
pop
mov
or
lahf
xchg
in
cmp
jae
sbb
and
loope
xchg
fsubs
add
push
scas
insl
mov
pop
iret
sub
lahf
imul
sahf
in
sbb
fcmovbe
mov
movsb
cmp
int3
imul
scas
imul
inc
lods
pop
push
shrl
sbb
rolb
ds
adc
pop
lret
dec
fldcw
adc
mov
cmpsb
cmp
scas
and
mov
xchg
mov
scas
jle
cmpb
inc
cmp
test
popf
pop
daa
addr16
addr16
inc
push
push
cmp
mov
push
pop
test
fcmovnb
sub
push
notb
sbb
mov
jg
dec
and
pop
xchg
pop
fimuls
dec
push
push
movl
daa
sbb
add
jb
mov
cmp
or
push
mov
out
stos
lea
jge
test
test
inc
inc
sub
push
insb
das
iret
pop
and
or
add
jmp
mov
divb
dec
lods
push
lret
repz
cmpsb
insl
xchg
aas
movsb
outsb
push
ljmp
mov
sub
mov
xchg
jmp
out
mov
aad
aas
inc
push
sahf
test
and
int
dec
adc
arpl
lods
in
sbb
nop
push
jnp
sub
inc
cwtl
pop
xchg
repnz
cld
sbb
js
or
jne
lods
cmp
loope
das
rcl
pop
pushf
sbb
adc
rclb
push
push
leave
lret
sbb
cmp
test
inc
popf
pop
and
test
psrlw
sub
hlt
out
test
inc
inc
xor
xor
add
pop
xchg
imul
in
in
dec
mov
dec
pop
push
int3
dec
or
xlat
addb
lcall
cltd
es
fcos
xlat
adc
jmp
dec
pop
sub
xor
cmp
in
scas
push
in
sub
dec
addl
xor
push
fsubs
je
ret
xor
popa
bnd
and
aaa
sahf
repz
add
jns
push
movl
push
mov
hlt
or
push
nop
pop
in
pop
jmp
push
mov
xchg
fwait
mov
pop
movsl
dec
scas
push
dec
cltd
lds
stc
mov
inc
add
inc
add
data16
xor
fcom
in
in
add
dec
int3
mov
xor
int3
jle
insb
pop
mov
movsb
fldcw
arpl
popa
mov
imul
pop
pop
fidivl
fcmovnu
adcb
mov
loopne
sti
mov
lock
test
cs
cld
sub
dec
xchg
scas
adc
adc
xor
adc
add
aaa
mov
lock
adc
xchg
xchg
scas
mov
adc
pop
cli
in
loop
sub
mov
je
inc
pop
sahf
mov
es
xchg
test
adc
adc
jl
imul
adc
mov
mov
jbe
jae
add
adcl
inc
stc
push
aam
mov
xor
leave
movsb
daa
repz
fidivs
or
arpl
pop
push
or
jbe
mov
xchg
ficompl
test
mov
pop
test
fcmovbe
xacquire
mov
dec
and
inc
insl
scas
mov
idivb
pop
data16
arpl
cmpsb
or
fistl
xor
jb
pop
movsb
icebp
lea
pop
pop
push
out
pop
xchg
nop
mov
mov
scas
or
incl
mov
xlat
mull
pop
imul
mov
xchg
faddp
sub
pop
jl
lods
xorb
icebp
xor
cli
cmp
pop
test
lea
ficompl
or
mull
ret
mov
mov
roll
add
mov
sbb
rcrb
jmp
cmp
mov
and
cmp
insl
jle
rolb
cmp
jp
cmc
or
js
push
lods
pusha
jge
pop
pop
mov
movsl
ret
push
xchg
addb
mov
addb
mov
push
outsl
pop
adc
add
and
loope
testl
int
pusha
dec
imul
andb
ss
jg
xor
sub
add
push
push
push
xchg
pop
xlat
imul
ljmp
mov
or
xchg
insl
inc
xchg
sub
sbbb
adc
mov
cmp
mov
pop
inc
gs
or
dec
xor
shlb
jns
fsubl
sbb
inc
test
bound
insb
dec
jnp
inc
je
gs
push
mov
fwait
or
push
aam
fdivrl
loope
fsubrs
pop
sub
fwait
iret
xor
mov
jp
push
cld
adc
xor
sbb
xor
arpl
sub
sbb
push
xchg
out
in
pushf
dec
stc
in
cld
inc
mov
stos
in
or
pop
push
fidivrs
jl
test
inc
push
dec
mov
ss
insl
mov
xor
jnp
jnp
pusha
inc
sbb
jnp
adc
pop
lea
cltd
test
in
jle
outsl
mov
lcall
cmc
mov
xlat
data16
ret
hlt
leave
xchg
ret
inc
testb
stos
jae
push
mov
ss
pop
inc
dec
test
pop
cmc
dec
sub
mov
dec
fcompl
add
movsl
test
inc
fdivrs
pop
lea
das
push
daa
hlt
and
jge
sub
test
inc
inc
iret
push
jmp
fistpl
xor
dec
addb
push
xor
mov
loopne
add
scas
push
xor
inc
push
inc
push
sub
cli
xor
sbb
xchg
pop
jecxz
mov
or
xor
sti
adc
mov
jmp
pushf
sbb
mov
out
out
sbb
sarl
and
aaa
mov
inc
mov
sub
or
mov
xchg
js
leave
test
push
out
sbb
jg
jo
insl
push
xchg
repnz
and
sub
dec
and
and
xorb
decb
daa
add
mov
icebp
cmpsl
mov
shl
jns
aad
popf
imul
enter
ficoms
nop
or
icebp
jnp
and
mov
mov
push
pop
and
ja
push
mov
mov
mov
data16
dec
cmp
pop
or
cmpb
add
or
loope
iret
addl
and
cli
push
xor
dec
push
bnd
out
ljmp
sub
cmc
cmc
cs
cmp
pop
les
imul
mov
add
mov
loopne
enter
mov
idiv
xchg
filds
mov
cmpsb
cli
inc
mov
push
xorb
mov
xor
xchg
inc
add
imul
push
pop
stos
lret
and
push
jno
pop
xchg
ror
call
jle
pop
dec
inc
dec
push
lods
xchg
incb
mov
inc
inc
lcall
inc
cmp
mov
jmp
pop
dec
mov
stos
pusha
repz
enter
mov
pop
idivl
push
fwait
xchg
adc
jmp
mov
pop
xchg
std
dec
jae
dec
fcoms
push
jg
or
push
mov
mov
mov
pop
dec
mov
lahf
data16
dec
and
push
and
cld
popa
sub
loop
sbb
pop
das
inc
data16
out
sbb
or
add
lea
and
dec
fwait
mov
cli
jnp
mul
sub
stos
pop
jp
imul
fiaddl
mov
fildll
jp
push
mov
ja
enter
mov
pop
adc
lret
jbe
or
adc
push
xchg
dec
pop
dec
xor
jne
out
xor
stc
cmp
or
inc
jecxz
adcl
test
jmp
inc
push
pop
imul
jle
jns
cli
es
mov
loop
pusha
mov
dec
sub
add
je
pop
adc
popa
call
sbb
icebp
shl
push
test
mov
aaa
cli
mov
xchg
pop
iret
loopne
out
stc
sub
lahf
mov
inc
iret
pop
push
test
std
add
mov
dec
fwait
inc
ficoml
aam
in
mov
sub
addr16
and
add
dec
xchg
and
sub
fdiv
popf
je
or
or
jns,pn
lock
lahf
pop
mov
pusha
lods
jbe
cmp
push
mov
mov
cmpsl
dec
and
cwtl
push
and
mov
jecxz
mov
sbb
adc
sub
dec
mov
xor
stc
lea
jecxz
xchg
jo
shrl
fcoml
inc
notb
add
xor
jle
push
and
popf
popf
pop
into
pop
jae
mov
pop
lret
outsb
sbb
inc
rolb
mov
mov
out
add
jnp
pop
push
jl
add
mov
cmp
jg
lcall
push
das
sbb
sub
sub
gs
cmp
decb
dec
mov
es
and
pop
out
dec
push
push
sbb
cmp
cli
jno
fld1
adc
xchg
jo
sub
stc
inc
add
xchg
pusha
xchg
mov
fcomps
inc
xor
iret
inc
inc
lahf
push
and
adc
add
cs
test
in
jns
adc
jnp
xchg
mov
cwtl
and
fucomip
lock
adc
lret
cmp
out
pop
inc
repnz
pop
mov
daa
in
adc
cmp
cmp
nop
fdivrl
sbb
orb
out
leave
jp
lcall
mov
loopne
pushw
imul
mov
push
scas
push
mov
push
pop
out
and
xor
iret
movsb
adc
mov
inc
pop
cmp
pushf
cmp
clc
es
gs
dec
sub
ljmp
in
loope
adc
test
and
mov
and
adcl
repnz
shr
pop
stos
mov
gs
pop
add
gs
dec
pushf
push
aad
test
in
add
neg
fcom
imul
dec
stos
push
or
sub
cmpsl
std
xor
je
outsb
xchg
daa
test
les
jae
aas
add
and
sub
mov
pop
sbb
mov
arpl
es
or
enter
mov
cmpsb
lcall
or
xor
mov
jecxz,pn
jle
js
push
push
mov
xor
push
jbe
test
mov
sahf
push
pop
jne
inc
and
imul
sub
jl
dec
mov
add
lahf
jnp
hlt
outsb
or
jg
ret
int
jb
outsb
shrl
lahf
mov
ret
dec
lods
jae
insb
jnp
mov
jg
adc
enter
sahf
stos
cld
popa
outsl
fmull
dec
cmp
lret
adc
mov
jbe
mov
in
js
jno
cwtl
push
lret
dec
xchg
aad
adc
test
sub
mov
lea
outsb
flds
int
xchg
sbb
xchg
into
mov
popf
push
call
sahf
jnp
ja
testb
push
push
ja
cmp
adc
dec
cwtl
gs
rcrb
xor
sarb
inc
push
mov
mov
lret
inc
adc
xchg
pusha
xchg
add
pop
cmp
jnp
rcrl
mov
add
mov
scas
inc
lock
jns
pusha
std
jbe
jl
movsl
sub
jge
rcrb
add
dec
cli
xchg
test
test
nop
in
cmp
jmp
mov
movsl
inc
adc
pushf
shll
aaa
dec
outsl
lock
out
popa
mov
xor
aad
shll
xor
jae
fucomp
lcall
je
mov
adc
hlt
jne
data16
lcall
sahf
nopl
mov
popf
sub
outsl
jae
fwait
dec
sbb
movsb
in
mov
lods
lahf
inc
and
sahf
xor
xchg
push
les
jp
popa
es
mov
mov
fsub
mov
cmp
inc
into
pop
idivb
aas
and
mov
mov
cmp
aad
repnz
inc
sub
arpl
sbb
movsb
or
xor
push
lret
shl
pop
gs
mov
aaa
imul
lds
mov
mov
popa
mov
sbb
stos
lds
out
push
gs
int
mov
js
fidivs
sub
dec
insb
lret
scas
mov
lds
mov
mov
stos
les
mov
out
pop
sbb
ljmp
sti
insl
ljmp
jl
addr16
inc
andb
cs
mov
loope
loope
cmp
stc
adc
ljmp
cwtl
sub
push
xchg
inc
sbb
outsl
sahf
ds
inc
mov
gs
or
cli
pushf
xor
or
dec
andb
out
pop
cmp
nop
dec
xor
push
jno
inc
push
push
ja
pop
scas
leave
or
and
dec
mov
cltd
in
sub
fistpll
lret
jl
les
xchg
adc
add
sbb
test
cmp
adc
pop
push
add
cmp
jmp
scas
out
insb
cmpsb
mov
and
pop
testl
jmp
andl
sti
ret
mov
icebp
xchg
int3
pop
or
jne
outsl
sarb
daa
data16
xchg
lcall
lock
push
push
xchg
xchg
jle
ficoms
xor
sub
movsl
outsb
into
int3
jnp
fsubl
cmpsb
lea
cwtl
add
add
ja
movsb
xor
dec
int3
movsl
pop
adc
outsb
sub
jno
fistl
xchg
sub
cmp
pop
adc
out
fistpll
and
adc
mov
stos
out
push
test
lods
cmpsb
xor
dec
fiaddl
movsl
lods
popf
xchg
push
add
xor
sbb
in
xchg
jle
xchg
cld
adc
xchg
adc
outsb
dec
jecxz
enter
dec
std
xor
imul
mov
and
sti
pop
add
ja
jns
jge
cwtl
sbb
jmp
insl
xchg
shll
ljmp
push
enter
insb
pop
dec
shll
sbb
and
ficoms
cmp
fsubl
mov
add
sar
mov
ds
xor
mov
mov
mov
mov
fwait
call
cmp
movsl
jp
cmp
mov
mov
push
and
aad
lahf
dec
jbe
jns
rolb
lcall
lea
xchg
xor
add
ljmp
jns
mov
mov
jmp
pop
dec
fcomps
cmp
inc
adc
add
jae
inc
test
int
fcmovnb
inc
push
inc
jmp
cmp
add
pushf
mov
adc
fldt
adc
and
adc
xor
imul
and
cmp
mov
jge
or
jg
dec
or
mov
pushf
and
and
xchg
and
jp
push
adc
jmp
add
stos
fs
hlt
in
sbb
and
inc
xlat
and
push
inc
add
and
inc
nop
adc
test
mov
cmp
stos
cmc
push
mov
sbb
negl
xor
push
pop
test
adc
sbb
jl
dec
lret
mov
dec
inc
jge
mov
sbb
dec
hlt
outsb
xor
fmul
and
cmpb
movsb
das
and
dec
or
push
xor
in
mov
jge
xlat
out
js
fdivrp
lar
fcoms
cmp
dec
lahf
sbb
rorb
divl
repz
mov
lods
dec
jne
fs
stos
pop
bound
pop
imul
sub
mov
hlt
lods
inc
dec
pusha
sbb
mov
in
repz
call
lds
ja
push
mov
or
hlt
ror
sbb
mov
add
jbe
push
push
dec
int3
repz
out
sahf
test
add
lods
enter
dec
outsl
mov
mov
pushf
rcll
loopne
cmpsb
imul
mov
push
lods
xor
cmpl
leave
adc
repnz
ja
cmp
cmp
lods
icebp
lock
mov
jge
mov
pop
or
nop
sbb
jge
push
ss
outsl
and
out
cmpsl
sub
outsl
xchg
test
or
clc
lods
dec
lods
rcrb
mov
jmp
push
in
scas
pop
stc
sub
hlt
movsb
sub
arpl
jg
add
outsb
je
scas
add
sub
popa
xorl
jb
lcall
cmp
xor
pop
cmp
lods
scas
push
mov
or
push
popa
pop
sub
push
xchg
negl
jno
sbb
jle
add
jl
sub
jnp
mov
sbb
pop
test
mov
sbb
popa
xchg
push
pop
in
adc
jmp
repnz
dec
mov
mov
inc
pop
push
fwait
iret
cmp
dec
push
jge
mov
sub
gs
xor
loop
lods
add
mov
xchg
jae
mov
cltd
push
add
dec
mov
fstps
orl
iret
dec
sbb
jg
pusha
cmp
es
cli
int3
mov
or
fbld
sub
adc
lods
push
xor
sub
cmp
push
or
adc
pop
add
iret
rclb
inc
mov
das
or
cmpsb
pop
sahf
pop
dec
sub
and
push
jp
popa
enter
jns
mov
push
add
push
mov
and
sbb
fucompp
jg
xchg
xchg
imul
stos
sub
fsubs
cld
call
cmp
cli
pop
xor
in
ds
pop
pop
cs
xor
xor
jbe
add
or
jle
fsubrp
notl
bound
push
rcrb
mov
mov
gs
lock
fmul
dec
dec
jecxz
mov
gs
xlat
mov
sub
cmp
sbb
test
sub
ficoms
xor
inc
cmp
jae
in
test
cli
shll
repnz
pusha
lods
sub
movsl
push
fidivrs
lods
out
add
dec
mov
repnz
or
jecxz
in
imul
inc
mov
mov
insl
mov
loope
adc
stos
and
dec
and
mov
lahf
mov
outsl
mov
push
sub
mov
rsqrtps
ret
mov
mul
jno
push
and
jmp
pop
sarl
cmp
push
xchg
shrl
loopne
mov
sahf
test
arpl
nop
dec
cmp
in
rorb
ss
adc
and
dec
std
cli
mov
xchg
testl
out
repz
movsb
xor
sub
sbb
lods
or
out
sbb
sub
test
mov
leave
cs
push
inc
cli
pop
loope,pt
pop
pop
sbb
adc
fs
or
shll
movsl
call
pop
xor
dec
daa
sub
dec
sbb
xchg
out
xchg
adc
shll
push
in
ret
mov
lcall
mov
je
push
cmp
mov
cld
add
xor
and
shlb
mov
insl
jnp
shrb
and
pop
addr16
cmp
adc
xor
scas
imul
cltd
or
fnstsw
out
fisubl
pop
test
addr16
adc
mov
aaa
sbb
mov
pop
aam
jge
mov
fisttps
cs
shl
aad
and
sub
cld
jo
add
lods
cmpsl
inc
loope
imul
insb
pop
add
push
daa
arpl
push
push
push
loopne
fisubrs
adc
stc
mov
xor
mov
mov
adc
push
dec
add
in
mov
jmp
jno
test
pushf
pop
movsb
mov
add
pushf
or
xchg
adc
dec
test
fwait
pop
mov
decb
lea
stc
add
pop
in
int
xchg
sbbb
je
push
pop
adcb
adc
xchg
push
push
test
inc
adc
ficoml
push
into
push
jg
jecxz
dec
adc
sbb
or
lret
aad
mov
mov
loop
and
adc
mov
mov
stc
mov
and
inc
popa
dec
pop
and
mov
push
xchg
push
adc
fcomp
fst
rclb
pop
insl
push
call
repnz
scas
jne
test
dec
jg
pushf
mov
pop
mov
inc
mov
adc
sub
sbb
leave
stos
jbe
lahf
aaa
cmp
xchg
in
aas
mov
imul
cmp
mov
dec
inc
fucomp
xchg
icebp
stos
pop
mov
test
cmovb
push
bswap
rclb
dec
jge
stc
movsl
push
negl
push
jo
xchg
ret
cmpsl
sbb
lods
in
ds
fwait
push
das
cmp
ret
js
mov
and
sbb
out
fldcw
incl
shll
arpl
adc
add
sub
push
mov
rcrl
inc
push
mov
pop
and
pushf
or
cwtl
ret
repz
sarb
aam
jle
fwait
test
clc
enter
icebp
pushf
fnstsw
cmp
cmp
xchg
push
nop
mov
mov
dec
pop
out
lods
repz
mov
xor
pop
push
stc
dec
leave
sbb
mov
push
ret
cmp
jno
shl
in
cmp
rorb
mov
ja
inc
addl
cmp
or
jecxz
jbe
jge
ja
inc
mov
std
or
push
jp
dec
and
push
faddl
and
push
mov
stc
imul
jge
fdiv
aaa
pop
mov
push
jns
and
in
sbb
stos
out
sbb
cmp
jbe
jb
xchg
sbb
mov
cmp
inc
mov
mov
xchg
mov
aam
mov
dec
cmp
stos
add
cmpsl
js
jmp
faddl
mov
shlb
fstpt
fwait
inc
lods
pop
shr
xor
adc
mov
xchg
sub
and
push
dec
inc
adc
cmc
sar
mov
cmp
and
outsb
dec
out
cmp
pop
repnz
sub
sub
push
cmp
dec
int3
push
mov
lahf
sub
or
xor
sti
and
add
push
rclb
aas
sbb
mov
add
cwtl
pop
adc
data16
mov
inc
add
pop
mov
pop
rolb
pop
inc
jne
inc
xor
inc
call
aam
fwait
and
inc
mov
out
shll
inc
push
push
in
xor
or
mov
xor
xor
repnz
jo
testl
inc
dec
cmp
pop
addb
mov
lea
mul
jne
and
sub
cmp
xor
jo
cs
cmc
pop
pop
cs
mov
cmpsl
xor
dec
mov
iret
popf
loopne
dec
ss
pop
and
push
adc
xchg
int
mov
and
mov
data16
sbb
testl
ja
testb
jae
negb
push
notb
jbe
push
sub
and
loopne
dec
jnp
mov
test
cs
adc
adc
xor
sub
sti
addr16
adc
or
sbb
push
pop
stos
out
test
je
pop
test
loop
xchg
fcoms
mov
int3
arpl
push
loope
and
cli
cmp
lret
dec
xchg
or
adc
jp
cli
repnz
pop
test
add
cmpsb
dec
cmp
pushf
xlat
lods
or
push
push
ficoms
clc
jb
mov
lods
imul
fmuls
or
jl
adc
in
icebp
adc
daa
jbe
in
jne
jns
hlt
cmp
jbe
pop
or
xchg
sub
or
mov
test
div
sub
jns
call
cmp
aas
mov
or
mov
clc
in
std
hlt
adc
push
dec
xchg
sub
cld
cmpb
xor
mov
mov
and
jmp
sbb
loopne
or
test
xor
mov
cmp
jmp
loope
xor
in
cli
sahf
je
xor
icebp
sbb
dec
jl
lahf
xchg
xchg
pop
cmp
mov
scas
adc
and
inc
xor
xor
xchg
sahf
cs
pop
dec
hlt
ret
incb
test
movsb
mov
movsl
in
loop
arpl
dec
mov
sbb
out
fbstp
cmp
loope
and
dec
aas
adc
dec
xor
add
aad
in
sti
cmp
pop
repnz
frstor
sub
xchg
xor
xor
push
adc
adc
adc
push
insl
cltd
sub
adc
idivl
pushf
push
stos
sbb
fisubl
mov
fimull
mov
pop
jle
imul
stos
mov
outsl
js
mov
mov
add
cmc
xor
aas
xchg
out
and
stos
test
fdivs
xchg
push
imul
test
paddsw
ret
or
add
xor
pop
ret
pop
test
sbbl
scas
add
jne
adc
inc
lcall
lahf
push
les
mov
xorl
pop
xor
mov
jle
mov
pushf
popf
push
pop
test
jle
into
mov
pusha
testb
jl
insb
fiadds
push
dec
or
enter
push
loopne
or
or
andl
vpminub
pop
sub
out
mov
test
dec
aad
sbb
mov
sub
sub
fstp
test
push
pop
inc
mov
xchg
icebp
lcall
insl
loopne
lret
icebp
fisubrs
inc
xlat
lahf
aas
insl
jne
mov
or
pop
mov
sti
mov
mov
lret
out
cmp
inc
negl
cli
xor
cltd
subl
jmp
inc
pop
pop
jmp
imul
int3
popf
mov
adc
cwtl
cmp
outsl
inc
insb
fnsave
and
xor
cmp
cmc
mov
fidivrs
lret
movsl
fbld
gs
fimuls
loope
dec
mov
shrl
jmp
inc
xchg
mov
add
pushl
test
dec
jo
pop
sti
mov
adc
iret
sbb
scas
fimull
sbb
orl
pop
movsl
test
sbb
repz
cli
fwait
cmp
inc
ja
incl
rcr
xchg
shrd
mov
sbb
aaa
aam
and
subb
sbb
or
and
ficomps
fwait
jae
sbb
inc
jmp
xor
cltd
adc
inc
fimull
clc
xlat
jbe
pusha
fstps
or
jmp
shl
jle
loope
inc
push
daa
xorb
inc
cmp
movsb
fsub
mov
sbb
jnp
xchg
pop
adc
mov
cmc
push
cmpsb
fistpl
repnz
cwtl
sbb
jae
insb
ret
call
call
pop
add
nop
imul
and
push
lret
lahf
lods
nop
fsubl
mov
cmp
lahf
into
loopne
inc
psadbw
out
dec
jp
push
cli
test
gs
or
jecxz
rcl
sbb
and
dec
pop
sarl
or
dec
jge
mov
cmc
loop
push
arpl
mov
pop
nop
fbstp
jmp
xorl
jge
pop
nop
dec
adcb
dec
mov
pop
pop
jl
imul
cmpsb
insb
cmp
call
xchg
mov
push
jnp
add
aam
loope
clc
jo
adc
mov
or
pop
das
xchg
push
xchg
fmuls
fiadds
call
cmp
outsl
or
jae
popa
xchg
pop
lods
ret
xor
fstpl
sub
popf
push
sub
dec
ret
scas
sub
shr
jb
fwait
les
repnz
pop
jmp
add
sub
sbbb
pop
mov
pop
std
push
in
mov
inc
sub
cltd
pop
pop
add
xchg
mov
and
mov
sub
mov
mov
add
mov
cmpsl
mov
out
mov
xlat
std
sahf
pop
add
fwait
xchg
mov
push
mov
add
xchg
add
push
mov
test
mov
xor
mov
cmpsl
add
pushf
jb
cltd
ja
xchg
dec
or
in
iret
push
je
fiaddl
fistpll
loop
mov
repnz
mov
cmp
pop
pusha
adc
test
cltd
or
mov
out
push
inc
cmp
clc
mov
lret
ljmp
mov
lea
fisttpl
fcomps
push
idivl
add
bound
sti
daa
push
pusha
add
mov
es
orb
mov
mov
xchg
popa
xor
xor
ficoml
jg
in
or
pop
and
fs
jge
into
inc
xchg
dec
mov
pop
push
add
fcmovbe
or
xor
testb
sti
lods
adc
gs
jg
loop
ds
inc
jbe
bnd
flds
sbb
cwtl
push
push
adc
dec
mov
js
pop
arpl
xor
mov
xlat
inc
rclb
jmp
jne
and
mov
subl
inc
fsubr
cltd
and
xlat
popa
insb
mov
ffreep
pusha
adc
movsl
xor
xchg
jnp
aad
mov
stos
out
shlb
jg
out
hlt
inc
fisubs
jecxz
repnz
pop
dec
pop
rorl
dec
adc
je
push
fs
mov
mov
aas
pop
add
fs
dec
xchg
jns
aaa
je
xorb
stc
jmp
cmp
inc
inc
pushf
inc
in
adc
adc
jb
pop
jbe
jg
jo
xchg
pop
xchg
sbb
loopne
outsl
mov
int3
cmp
adc
sbb
xchg
and
shll
je
cwtl
inc
daa
and
data16
jne
shl
mov
xor
repnz
xor
ficoml
push
pop
orb
data16
insl
imull
hlt
xor
xlat
add
gs
pop
fcomps
dec
outsl
rclb
add
in
xchg
movsb
xchg
pop
scas
aad
movsb
mov
ret
adc
stos
pop
cmp
les
mov
sub
dec
bound
out
scas
cmpsl
xor
data16
lds
inc
cld
and
cmp
outsl
icebp
push
push
xchg
inc
pop
xor
decb
in
aas
call
out
loopne
rorl
out
fists
push
insb
sar
jle
popf
sbb
outsl
mov
hlt
inc
cli
or
dec
std
out
add
push
nop
sub
rorl
pop
mov
lds
mov
jb
and
cmp
aad
sbb
mov
cmp
andb
mov
mov
inc
fs
out
idivb
jp
test
outsb
fdivr
xchg
jae
bound
fiadds
ljmp
or
arpl
fs
xchg
daa
adc
fldt
sbb
stos
pop
add
xchg
leave
dec
fs
push
jae
push
push
sbb
sbb
jae
mov
sub
popf
ljmp
in
out
in
into
jge
fildll
xchg
fisttps
lret
cwtl
and
or
ret
inc
push
jae
stc
mov
cmpsl
out
cwtl
imul
mov
xchg
sbb
push
and
mov
jb
xor
lcall
xchg
and
mov
push
lods
into
push
jmp
cmp
jb
push
fisubrl
lret
jmp
testl
lock
sub
xor
pop
cmpsb
cmpsb
sti
fwait
clc
leave
push
gs
push
popf
data16
aad
xchg
jae
movsl
pop
cmp
jg
jmp
and
testb
sbb
in
add
inc
mov
scas
in
xor
mov
lcall
lret
out
cmp
jb
sbb
push
sbb
mov
cmp
mov
testb
cmc
sbb
sti
outsb
das
arpl
data16
jle
out
xchg
subb
mov
or
mov
xchg
xor
or
jns
aam
out
nop
sahf
gs
mov
push
push
mov
aas
cs
lcall
push
nop
jmp
mov
mov
and
imul
stc
ljmpw
jmp
loope
dec
push
add
push
push
inc
add
xlat
push
jg
rolb
addr16
shrb
jne
push
popl
aas
insl
cmpsl
xor
push
sub
add
fdivl
jae
aas
xchg
test
fs
sti
loop
je
daa
in
and
arpl
mov
fcmovu
mov
mov
cld
jmp
pushf
or
mov
fcoms
mov
cmp
sub
and
sub
shll
push
sbb
mov
test
sub
js
sub
pop
push
cli
pop
inc
dec
xor
jns
adc
xchg
mov
imul
push
out
aad
cli
jo
stos
jo
scas
push
adc
push
push
xor
xor
out
dec
pop
stc
cmp
xor
mov
out
pop
jne
or
test
cmp
jmp
add
fwait
dec
xchg
mov
add
ret
xor
ljmp
sbb
pop
xchg
sbb
cmp
dec
vmwrite
adc
gs
or
push
xchg
and
jecxz
mov
notb
cmpsl
mov
pop
xchg
mov
sbb
jmp
add
push
sahf
jecxz
addr16
mov
mov
mov
cmpsl
in
sub
das
xor
loopne
mov
push
popa
mov
aas
adc
push
and
xor
fwait
ljmp
pop
and
gs
add
ja
mov
stc
add
sbb
or
jne
fisttps
add
lcall
mov
add
js
fadd
push
test
mov
arpl
es
push
cmp
jg
cmp
adcb
pop
sbb
outsb
lahf
sti
push
adc
int
xor
cld
dec
leave
sbb
add
adc
outsb
and
ret
frstor
sbb
and
push
lahf
sub
cld
push
push
inc
xchg
and
das
push
sbb
aam
cmp
mov
insl
add
gs
in
popf
les
lahf
pop
sti
fwait
jb
pop
and
cmc
adc
push
mov
faddl
imul
and
lcall
in
mov
pop
fildll
out
xchg
loopne
inc
movsl
sub
inc
inc
into
lahf
jbe
or
data16
adc
div
addl
add
rol
push
fidivrs
push
push
fwait
das
aaa
jge
cmp
int3
pop
push
repnz
cmp
je
gs
mov
dec
aaa
cmpsl
sbb
dec
mov
in
sub
lahf
push
cli
dec
dec
andl
fildl
and
inc
lcall
or
sub
push
sub
lret
add
pop
fadds
jl
sbb
scas
frndint
incl
iret
fstl
orb
lock
jmp
ja
inc
xchg
push
fisubs
mov
shlb
mov
sub
clc
cmpsb
mov
inc
outsl
mov
call
or
add
aad
jnp
inc
popa
pop
pushf
adc
movsb
or
lcall
pop
or
fdivrl
add
jnp
mov
mov
push
cli
mov
pop
mov
xor
sarl
int3
xchg
into
ljmp
push
add
fs
jnp
pop
lahf
movsb
mov
lahf
sarb
jecxz
mov
mov
cld
iret
out
adc
or
mov
inc
xchg
aaa
cmp
pop
sub
mov
insb
lods
pushf
sbb
push
andb
push
daa
or
int3
out
inc
mov
adc
xchg
fsts
push
mov
or
adc
dec
pop
xchg
jle
popa
mov
adc
cmpsb
int3
inc
test
sub
loop
pop
lahf
or
sub
xlat
add
enter
inc
push
orps
cltd
mov
xlat
shl
aad
jo
repnz
aad
cmp
sub
in
int3
cmp
dec
sub
sti
test
in
mov
or
adc
in
mov
fdivs
adc
ljmp
lods
inc
xchg
dec
rcll
push
xor
outsl
loope
pop
and
loope
and
add
xchg
or
sub
add
mov
adc
inc
and
xchg
mov
add
lods
ja
jns
aas
jmp
and
idivb
cltd
aam
inc
adc
push
xchg
into
pop
sbb
hlt
xchg
mov
mov
cld
inc
and
mulb
sbb
and
xor
mov
mov
shll
push
fldl
push
scas
out
mov
inc
mov
sub
mov
xlat
or
frstor
fiadds
addr16
push
pop
sub
cmc
cmp
pop
fsubrl
add
cmp
inc
mov
adc
xchg
ret
mov
cli
gs
push
jae
xor
pop
call
ja
mov
pop
jle
push
jmp
inc
cmp
cmp
popa
js
xchg
mov
sub
xor
dec
mov
cmpsb
adc
lods
scas
sarl
dec
cli
push
ret
xor
scas
or
iret
outsb
inc
icebp
pop
mov
mov
lcall
mov
subl
mov
bound
xor
pop
xor
mov
adc
fbstp
sti
sbb
push
rolb
mov
sbb
jbe
ss
jge
or
push
jp
fisttps
mov
cmp
push
xchg
testb
iret
notl
shr
out
cld
out
jle
dec
leave
inc
push
or
mov
or
enter
push
popa
inc
loope
push
sub
cmc
xor
dec
inc
into
push
fcompl
jns
popf
add
repz
mov
mov
adc
adc
mov
push
and
pop
lock
lcall
inc
aam
xchg
mov
xor
jge
adc
decl
jae
cwtl
mov
add
cltd
push
pop
stos
cmp
shl
in
cld
sbb
inc
icebp
pop
sub
pop
inc
daa
iret
movsb
mov
shll
dec
sbb
lods
jle
push
mov
movsl
aad
sti
dec
adc
or
aad
cwtl
outsb
enter
sar
daa
clc
sub
subl
outsl
adc
rorl
xor
push
pop
push
je
pop
ret
in
dec
out
cmp
adc
sub
dec
filds
imul
push
scas
sub
cwtl
push
scas
push
add
xor
fwait
cwtl
mov
cmp
or
shll
inc
fidivs
test
idivb
push
sub
lock
cmp
rcrl
mov
out
pop
call
mov
xor
pop
mov
xor
scas
cmpsl
sub
pop
cld
jb
add
and
fldlg2
outsb
repz
cltd
and
sub
jl,pn
push
pop
hlt
fxch
cmpb
imul
push
mov
and
xchg
push
cmc
std
sbb
mov
out
sbb
sbb
jmp
jbe
outsl
or
jecxz
dec
mov
pop
pop
lret
ja
push
mov
xor
sbb
cmp
addr16
push
movsl
test
xchg
pop
or
loope
mov
mov
xor
dec
add
xor
sub
and
add
mov
jb
mov
in
inc
sub
dec
pop
out
xchg
fucom
aad
sbb
jb
fs
clc
push
xor
xchg
sbb
dec
lret
add
test
cmp
pop
push
icebp
xchg
or
or
sub
cmp
leave
mov
movsl
out
mov
xchg
add
adc
dec
adc
sbb
mov
scas
rcr
xor
or
xchg
shlb
xchg
loop
pop
stos
push
addr16
push
mov
or
mov
cmp
sub
or
ret
ljmp
xor
or
lret
mov
cmp
dec
mov
cld
ds
adc
movsl
add
dec
xor
mov
loopne
dec
mov
push
inc
mov
mov
sbb
mov
ret
jp
jno
ljmp
or
mov
stos
or
in
icebp
test
cwtl
pusha
in
adc
fmul
cmp
imul
mov
shl
inc
cmpb
pop
or
dec
inc
jle
mov
sub
pop
mov
mov
scas
rcl
test
mov
repnz
out
cmp
push
mov
test
push
sub
dec
lret
test
stos
dec
adc
and
repnz
out
lods
push
popa
hlt
call
sub
xor
rclb
popf
dec
ljmp
push
or
addr16
and
mov
jb
lds
icebp
sub
pop
loop
cmp
aaa
lods
nop
pushl
push
orb
dec
mov
aam
adc
test
scas
jbe
xor
cmpsl
stos
cs
notl
push
mov
xor
inc
popf
xor
xchg
or
fs
pusha
out
test
jmp
pop
mov
jnp
aaa
gs
mov
or
stc
clc
dec
cs
repnz
roll
loopne
jle
pop
xor
cmp
xor
out
dec
lods
mov
bound
inc
aad
add
lcall
xchg
pop
enter
jge
inc
repnz
mov
push
jle
test
add
mov
adc
sub
int
ds
push
xor
fistpll
xchg
rcrl
nop
iret
lock
jne
inc
sbb
hlt
out
dec
ret
push
inc
add
sti
iret
icebp
sbb
scas
push
pop
and
outsl
shlb
xor
outsb
xchg
lcall
sbb
lahf
stos
dec
lret
outsb
aaa
ret
sbb
mov
xchg
rclb
sub
inc
pop
inc
xor
cwtl
mov
adc
sti
shll
xlat
xor
mov
ja
push
lods
mov
jmp
cs
leave
push
ljmp
lret
sub
cmp
leave
repz
xchg
push
int3
xor
mov
pop
add
xchg
cmpb
jne
push
dec
dec
mov
inc
mov
clc
ret
fstpl
mov
dec
inc
movsb
and
pop
nop
mov
fwait
mov
in
and
sarl
std
iret
inc
rcrb
test
dec
jns
mov
pop
xchg
add
andl
popa
out
jp
sti
imul
dec
psrlq
cwtl
mov
mov
dec
sbb
xor
in
cld
cmp
lock
inc
cmp
mov
not
mov
cld
push
mov
ret
push
mov
xor
push
pop
lock
adc
xchg
insb
jge
out
jo
and
data16
aam
mov
jp
fcoml
pop
sbbl
add
fsub
and
jp
xchg
fbld
mov
out
mov
daa
jae
pushf
scas
adc
xchg
ret
int
inc
idiv
imul
mulb
pop
mov
out
fstps
mov
jg
loope
loop
aad
inc
jle
enter
dec
es
push
push
popf
pop
cld
movsb
bound
mov
mov
les
mov
lods
pushf
dec
xor
popf
ffree
cmp
jmp
lock
repz
ret
mov
sbb
mov
adc
je
mov
out
fimull
negl
and
adc
mov
inc
jmp
and
sub
movsb
out
jae
fwait
test
dec
mov
xchg
adc
pop
xor
ljmp
jb
stc
push
out
add
dec
mov
push
inc
out
mov
sbb
call
mov
in
add
test
lds
xchg
jns
or
mov
std
movsb
es
int3
adc
mov
jbe
mov
in
jl
xchg
int3
mov
ds
out
fwait
inc
xchg
pop
pop
imul
cmpl
iret
ljmp
pusha
nop
fdivl
mov
into
add
int3
sub
in
push
andb
add
daa
cltd
adc
jge
lahf
jno
sbb
inc
movsl
and
and
notb
sbb
xor
add
xor
fcomp
lock
pop
xchg
scas
jl
fldl
pop
push
punpckldq
imulb
ret
and
fwait
out
push
scas
cmpsl
jl
movsb
clc
adc
push
mov
lcall
adc
fst
xor
push
jae
or
mov
dec
popf
mov
shrl
sbb
add
jno
loopne
sbb
aaa
pop
sbb
inc
inc
ret
pop
mov
aad
and
xchg
xlat
das
add
dec
ret
das
cld
push
bound
push
push
inc
mov
and
test
and
shrl
xchg
jmp
stc
cli
dec
stc
test
or
cmp
xchg
daa
ja
xchg
jp
gs
mov
fwait
xor
cmc
std
lock
adc
stc
into
pop
ret
pop
sbb
or
jge
cmp
mov
lret
xchg
out
fldln2
outsl
sub
add
roll
xor
shl
mov
cmpb
adc
adc
sub
int
ja
or
mov
orl
mov
xchg
adc
mov
psllq
repnz
xor
push
sub
pop
in
lea
daa
xor
push
add
ret
in
xlat
add
popa
das
inc
out
and
loopne
nop
and
mov
stos
sub
fbld
mov
iret
movsl
cmc
pop
add
xor
popa
cmp
xchg
xchg
call
mov
cmpsl
sarl
icebp
cs
es
in
cmp
mov
cltd
repz
jle
mov
aas
repz
subb
xchg
xchg
mov
cwtl
jo
int3
push
jmp
out
mov
xorl
add
inc
push
sbb
push
mov
dec
and
fnstsw
int3
outsl
fwait
inc
push
push
arpl
mov
mov
fincstp
test
addr16
pop
aam
in
sahf
sbb
test
das
aam
push
ljmp
repnz
add
dec
test
js
inc
push
sub
lcall
pushw
adc
ror
mov
mov
xor
dec
loop
adc
push
in
jmp
cmpsl
dec
dec
lods
leave
or
fcomi
stos
fs
loop
jnp
and
movsb
xchg
mov
hlt
repz
add
ja
inc
pop
outsb
cli
pop
cs
jns
mov
mov
faddl
jb
and
pop
lock
push
es
int
repz
jbe
mov
cli
add
cs
mov
inc
jge
je
push
push
fidivrl
ret
iret
mov
mov
sbb
jg
sub
movsl
pop
icebp
push
add
sub
pop
push
fwait
pushf
adc
scas
adc
adc
mov
pop
lcall
fsubrp
jle
in
xor
faddl
xor
mov
les
xchg
jbe
push
sbb
shlb
out
ja
mov
xchg
imul
aas
aad
push
movsl
es
pop
andl
add
cwtl
cld
inc
mov
sbb
jns
mov
out
mov
shrl
dec
inc
add
mov
mov
xchg
int3
fwait
push
cmpsl
jg
inc
cmp
pop
insb
adc
test
ficompl
test
cwtl
das
lahf
cmp
inc
pop
and
xor
pop
pusha
add
stc
dec
pop
lahf
lret
xlat
sahf
sbb
and
mov
loop
lods
int
xchg
in
ficoml
and
negl
push
lods
inc
or
add
sarb
scas
ss
in
test
xchg
sbb
jbe
ljmp
repz
adc
fldcw
and
cmc
pop
xchg
mov
mov
fdivs
pop
adc
repz
ret
out
cmp
cmpl
jle
aam
push
pop
jge
add
mov
mov
divl
xchg
cmpb
fstps
stos
inc
loope
push
push
int
pop
jo
and
lret
add
xor
mov
xchg
out
test
adc
jo
mov
and
aad
xor
xchg
sbb
jge
pop
xchg
cmp
sbb
jmp
insl
lret
push
add
xchg
lock
js
and
cwtl
sbb
mov
jns
pop
adc
lcall
dec
dec
sbbl
divl
lret
sti
dec
mov
inc
cmp
sub
xor
js
xchg
pop
stc
mov
sbb
dec
movsb
loopne
outsb
push
test
fwait
and
mov
mov
push
push
pusha
lods
xlat
pushf
orl
les
sub
es
leave
das
inc
jecxz
aaa
adc
inc
pop
xchg
or
mov
push
sbb
xchg
inc
fisttpl
mov
xchg
lods
mov
adc
mov
fcoms
mov
ss
mov
std
ljmp
cmp
shlb
cld
faddp
fwait
and
ret
add
xchg
jne
inc
fs
hlt
cmp
push
xorb
scas
adc
push
les
or
jl
cmpsl
push
addr16
fwait
add
popa
sub
mov
cwtl
rcrb
mov
ja
mov
pop
mov
daa
mov
fwait
int3
sub
jnp
inc
stc
aad
xor
jmp
xchg
pop
movsb
dec
push
or
call
add
sarl
cmc
sbbl
mov
xchg
loopne
lahf
add
aas
dec
cmp
jnp
mov
xchg
push
inc
int3
sbb
int3
push
mov
mov
and
add
or
cmpsb
cli
xchg
mov
fsub
push
jb
pop
cmpsl
cmp
fistpl
scas
mov
shlb
jnp
jge
fisubl
sahf
jae
les
lcall
test
pop
je
mov
mov
sbb
popf
sub
dec
aaa
outsb
or
dec
addr16
sbb
ret
cwtl
test
pop
roll
fcoms
jmp
add
inc
std
xchg
xlat
and
stc
dec
test
mov
fwait
sub
insl
or
dec
mov
adc
sbb
dec
lcall
es
mov
imul
scas
in
add
push
cmpsl
jns
adc
dec
cmp
ja
jb
sahf
daa
mov
and
pop
cmpsb
push
and
adc
in
rcll
nopl
or
pop
andl
or
aaa
sbb
and
dec
jecxz
xlat
iret
lahf
and
inc
sbb
jp
and
mov
sahf
push
rcl
xor
in
sbbl
rol
mov
ret
cmpsl
jno
cmp
push
out
xor
cmp
sub
xchg
lods
push
popf
mov
jb
fs
mov
jo
xor
adc
add
stos
xchg
and
lret
or
xchg
cli
lds
repnz
sbb
push
adc
jle
jne
fmulp
add
outsl
push
int
jg
dec
nop
call
inc
cmpsl
rcll
mov
ds
pop
repnz
lahf
stc
and
ds
int
jge
and
pop
sarl
loopne
es
repz
and
sub
into
jns
or
and
sti
or
mov
test
scas
cmp
cmc
adc
sbb
out
cs
jb
cmpsl
xor
out
stc
fcompl
or
imul
inc
imul
cld
or
inc
inc
lods
mov
pop
repnz
cmp
fistpl
fcomps
jge
flds
enter
adc
adc
addr16
fstpl
loop
sbb
dec
push
mov
jns
ljmpw
cs
scas
imul
lret
daa
mov
jbe
insb
mov
ja
xchg
mov
mov
xchg
sahf
inc
cmp
pop
lcall
jne
mov
or
mov
adc
int3
aam
add
mov
mov
push
push
out
idivb
cmp
inc
xor
or
decl
shrl
out
aad
mov
fcoml
xchg
jecxz
dec
icebp
or
pop
popa
sub
mov
xor
xchg
aaa
push
add
enter
xchg
sahf
aas
shl
adc
jno
dec
or
lahf
dec
addr16
xlat
mov
inc
fidivrs
insl
adc
mov
inc
fs
jmp
stos
lahf
pop
fisubs
sarl
sbb
sub
das
pushf
stos
and
gs
pop
mov
jbe
and
outsb
test
mov
dec
js
and
dec
jl
out
xchg
mov
movsb
iret
testb
out
scas
or
leave
popa
mov
jl
fisubs
imul
dec
hlt
xor
daa
lahf
lahf
mov
dec
push
xorl
add
xchg
sub
xchg
mov
sbb
sbbl
popa
stos
and
adc
sub
pop
adc
mov
or
insl
xor
js,pn
pop
xchg
lret
ds
cmp
fwait
cmc
std
or
pusha
cli
in
mov
inc
arpl
xor
incl
pop
push
add
lock
inc
add
push
add
shrl
jp
mov
int
push
jl
in
jmp
clc
aas
adc
pop
pand
xchg
xchg
add
mov
push
adc
jecxz
int3
cmp
sub
xchg
repz
dec
dec
cs
or
mov
add
out
popa
clc
jno
and
out
enterw
pop
pushf
mov
out
in
jae
cmc
mov
iret
pop
cmp
sbb
pop
rcr
jb
sub
stos
ret
shll
push
cld
fisubl
push
and
in
mov
sti
sti
test
mov
push
mov
or
mov
sarl
and
test
mov
xor
xchg
loop
and
and
sub
xor
sub
adc
inc
push
sub
cli
dec
hlt
mov
mov
adc
insb
pop
adc
jp
lods
xchg
divps
cli
filds
xchg
sbb
and
push
rcl
inc
movb
xchg
inc
lds
sub
pop
clc
xor
dec
inc
pop
xchg
rorb
cs
xor
xchg
test
xchg
mov
subl
int
or
cli
add
jne
shrl
push
and
add
scas
inc
vmovapd
dec
ljmp
in
dec
jg
stos
adc
push
testl
rclb
fldt
pushf
addr16
mov
sub
ficompl
adc
dec
push
pusha
sub
xor
test
xchg
inc
rcrb
inc
ljmp
out
xchg
dec
cmp
imul
sbb
pop
inc
stc
sbb
scas
jecxz
shl
jg
mov
das
es
mov
mulb
aad
loop
stos
ja
imul
ljmp
mov
fsubs
mov
lret
cmp
pop
mov
lds
aas
and
cmpl
and
test
cmp
shll
or
sarl
push
jp
loop
fistpll
and
mov
into
jecxz
cmc
push
subb
sbb
repz
in
pop
lock
add
and
ss
cltd
dec
push
in
mov
cld
popf
iret
push
and
stos
fwait
ret
mov
xor
arpl
sbb
hlt
jo
bnd
in
ljmp
aam
xor
aas
and
int
test
popf
and
cmpsb
fistpl
icebp
lret
jns
lods
data16
call
xchg
dec
xor
inc
loope
loopne
mov
daa
adc
lds
lahf
stos
lret
lods
xchg
mov
cli
jp
dec
xchg
in
adc
pop
jo
ret
mov
mov
mov
outsb
dec
mov
insl
minps
jmp
stc
outsb
out
push
inc
xor
fwait
dec
nop
mov
test
fcmovne
pop
push
cwtl
add
repz
ds
push
orb
jg
ljmp
xor
dec
push
mov
pushf
mov
orl
pop
call
cwtl
xor
push
out
add
ficoms
sub
stos
mov
xor
movsl
adc
lahf
mov
xchg
negb
test
jg
ja
push
add
mov
stos
sub
pop
popf
jnp
outsb
mov
jge
mov
pushf
sbbb
aam
cmp
out
mov
and
mov
enter
jbe
into
cmp
insl
filds
mov
adc
push
or
push
and
add
in
xor
push
cmp
lret
cmpsb
adcl
fwait
cmp
mov
inc
fcos
aaa
cmp
loope
jmp
lock
sbb
sbb
push
test
shrl
push
dec
nop
dec
fwait
stc
adc
inc
popa
imul
cmp
movsb
andb
sahf
jno
inc
xor
mov
xchg
dec
sahf
push
jecxz
popf
ja
lods
mulb
lcall
xchg
in
cmc
mov
push
mov
pop
stc
sbb
jmp
jno
out
mov
fldt
xor
inc
dec
hlt
mov
jge
loopne
pop
cmc
ljmp
cwtl
adc
sub
mov
pop
fildll
ss
xchg
adc
lret
jl
mov
in
add
fildl
cmp
sarl
lock
add
sbb
lahf
jnp
push
rorl
int
cmp
rcl
imul
sub
mov
push
les
xchg
xchg
movsb
int3
loopne
movsl
xchg
test
push
iret
into
add
dec
and
in
out
cmp
jne
loop
xor
mov
out
or
adc
pop
lcall
rcrl
pop
inc
xchg
lods
jmp
or
jg
cmc
iret
and
xchg
fidivrs
insl
cmpsb
adc
outsb
jg
in
pop
mov
add
sub
sahf
pop
sub
mov
aas
jbe
xchg
jl
leave
sbb
fmull
push
add
data16
stos
cmp
pusha
push
xor
sarl
push
jne
addr16
pop
iret
sti
inc
pop
test
adc
pop
test
in
andl
adc
cmp
popa
jp
les
sub
sub
push
andb
insl
mov
xor
push
pop
push
push
sahf
sbb
pop
test
shrl
xor
mov
aam
cli
std
mov
xor
or
int3
fistl
push
jno
loop
xchg
xchg
insl
lock
push
xor
pop
ljmp
sub
mov
leave
insl
push
push
mov
add
or
jno
mov
jle
push
in
lahf
sbb
sarl
in
pop
popa
fisubrl
mov
bound
int
sub
shll
xchg
adc
out
aad
out
pop
mov
mov
fwait
pop
pop
mov
sub
lods
dec
dec
and
mov
jnp
pusha
ss
cmc
xlat
ljmp
inc
xchg
aad
fwait
mov
adc
cmp
out
adc
cwtl
mov
pop
mov
ror
aam
mov
or
xor
push
or
popf
es
or
and
and
ljmp
lea
push
add
shrl
rol
rcll
test
stos
mov
daa
mov
push
mov
fwait
out
out
inc
cmp
adc
mov
and
mov
andb
sub
stos
fldt
clc
adc
pop
mov
or
fistpl
xchg
imul
pop
scas
je
sub
and
sub
fmulp
jp
jecxz
js
push
push
cmp
roll
fwait
dec
ljmp
leave
mov
aaa
inc
daa
cmp
stos
xchg
pop
enter
scas
test
add
cmp
sbb
and
enter
mov
loop
inc
add
outsl
jle
dec
mov
fcoms
fistl
leave
mov
jp
cmp
mov
cmp
frstor
lods
push
cmp
push
std
test
daa
icebp
fimull
mov
push
popf
fs
jecxz
pop
dec
lret
addr16
ljmp
dec
ret
dec
push
fst
cmp
call
push
pop
jno
push
xchg
fisubrs
xor
outsl
gs
lds
lods
jg
push
push
push
add
hlt
mov
popf
daa
cmp
sahf
and
mov
jno
loopne
shl
mov
scas
icebp
cltd
mov
jp
and
add
add
dec
or
insl
int
xor
sar
cmp
dec
or
push
pusha
dec
dec
pusha
push
mov
jae
xchg
xlat
movsl
jl
jb
out
or
push
mov
or
into
mov
cmp
pop
adcl
cmp
push
sub
sti
ljmp
xchg
sub
rorb
lods
fs
mov
lock
dec
inc
test
out
je
lcall
sbb
xlat
inc
int
loope
xchg
xor
jbe
add
inc
mov
rcrl
js
jno
cmpl
sbb
pop
cmc
leave
sub
pushf
mov
xchg
mov
je
xlat
dec
test
outsb
cmp
jecxz
inc
jae
cmp
add
sbb
cli
push
mov
xchg
push
pop
ja
daa
xor
and
xchg
repz
push
into
mov
fcmove
xchg
sbb
lret
icebp
push
ret
lcall
in
xchg
add
cmpsl
adc
jle
pop
ret
adc
sbb
xor
mov
cmp
pusha
mov
lahf
outsl
lods
sub
cltd
test
add
call
fcoml
push
jnp
repnz
mov
loop
jb
pop
mov
shrl
mov
icebp
jmp
call
jo
je
mov
lahf
xchg
cmp
push
ds
pop
xor
xchg
push
aas
xchg
test
jb
loopne
out
dec
mov
daa
sbb
add
fwait
xorl
bound
lea
mov
out
or
push
lods
and
dec
add
pop
push
mov
jle
xlat
xchg
xlat
mov
loope
cltd
xorb
xchg
loop
cld
sarl
sub
push
inc
jno
jno
out
jle
lahf
aaa
xorb
das
cmpb
adc
lcall
mov
sbb
sarl
dec
mov
sub
leave
bound
mov
xchg
cmpsb
adc
imul
test
lds
std
icebp
add
adc
fwait
xlat
leave
mov
icebp
sub
xchg
shr
pusha
jge
into
rcrl
and
and
loope
dec
add
add
jnp
in
or
sbb
test
lcall
hlt
sti
mov
fimuls
xchg
mov
xchg
pop
sub
insl
call
mov
jp
xorl
push
into
push
or
dec
jbe
data16
out
cmp
xchg
insl
mov
cmp
testl
in
mov
lods
in
test
roll
ds
popa
test
subl
outsl
fcoml
cmp
push
pop
xchg
aas
jae
cmp
stos
shll
dec
mov
loope
sti
pop
mov
mov
sbb
aad
adc
pop
loope
push
movsb
jg
pop
cmp
mov
jmp
imul
mov
push
int3
lods
jl
jmp
dec
mov
inc
ljmp
xchg
mov
lcall
jne
sub
xchg
stos
push
push
mov
dec
repz
popf
adc
andl
mov
inc
mov
mov
cwtl
aaa
faddl
je
fnstenv
je
fdivl
inc
cmp
xchg
dec
sbb
push
cmpsl
dec
mov
jnp
test
and
clc
fxch
fsubs
mull
jmp
inc
cmpsb
aaa
int3
lds
cmp
fiadds
jmp
scas
jne
sbb
mov
mov
cmp
cmp
push
std
shrb
leave
add
mov
cltd
jbe
lods
addr16
insb
inc
jl
sti
mov
xchg
jnp
dec
jb
fsubl
xor
fidivrs
jg
invd
call
push
push
or
repz
mov
xchg
adc
fs
mov
mov
cmc
jge
cmp
cmp
pushf
fildll
dec
adc
jo
es
ret
popf
enter
push
add
mov
popa
or
addr16
iret
fnstsw
popf
mov
mov
jno
loope
xor
jo
test
shll
push
jmp
gs
std
xchg
test
call
mov
pop
add
mov
dec
cld
sub
nop
dec
lahf
ljmp
or
mov
fidivrs
sarb
iret
repz
push
lcall
les
stos
sbb
lret
inc
add
adc
xchg
popa
cmpsl
dec
iret
fwait
in
mov
inc
int
test
pushf
daa
pushf
jp
pop
mov
sbb
out
lds
int
shl
aad
fnsave
mov
int3
dec
xchg
sti
ja
jnp
cld
jge
test
xchg
cmp
push
sub
mov
ret
xor
and
xor
add
lods
loop
data16
stos
or
xor
lods
jno
pop
shll
das
mov
add
das
and
in
fcomp
arpl
cwtl
dec
bound
rcrl
fcoml
leave
mov
shrd
inc
push
andl
fldl
sbbb
add
xchg
pcmpeqb
pusha
loopne
and
iret
jbe
mov
outsl
pop
dec
jno
sbb
lods
das
pop
pop
jge
and
pmulhuw
in
insl
stos
mov
xchg
lea
lds
pop
xchg
lret
add
add
hlt
loop
sbb
cmp
rcr
shl
xor
xchg
sarl
sarb
cltd
repz
jo
mov
jmp
jge
shll
out
roll
incl
cmp
dec
loope
addr16
cld
jbe
jmp
popa
mov
adcl
lock
pop
xorb
dec
adc
lret
std
cmpsb
sar
sub
ljmp
data16
pushf
and
adc
xor
xchg
push
push
xchg
mov
imul
insl
leave
xchg
xor
jmp
push
cwtl
mov
js
dec
xchg
mov
fneni(8087
sbb
icebp
mov
adc
mov
je
inc
and
sub
fbstp
and
push
data16
dec
sub
pop
insb
fwait
push
fcomip
mov
fidivs
dec
pop
xorl
fcompl
jne
sarl
sahf
pop
cli
out
adc
mov
repz
js
push
pop
pop
lods
lods
cwtl
lcall
or
sti
adc
lds
loopne
in
incb
out
lret
mov
repz
jbe
mov
pop
inc
fmul
cmp
or
or
cmpsl
and
stc
mov
mov
add
mov
fsubl
aas
and
and
fs
shlb
xchg
loope
mov
or
call
lcall
and
shr
pop
ja
jp
repnz
test
or
cmp
outsb
sahf
outsl
pop
imul
jb
cmc
adc
arpl
xchg
test
rcl
hlt
jecxz
mov
adc
add
lcall
les
sub
imull
loop
outsl
mov
push
por
lods
fbld
mov
pop
or
les
fisubl
loope
sahf
cs
fdivrs
iret
push
ss
adc
sub
cmp
mov
xor
shll
cld
xor
lock
adc
fwait
adc
or
dec
add
dec
push
filds
fs
cmp
rclb
jge
pop
addr16
cmp
mov
dec
shl
dec
xchg
and
popf
lcall
or
pushf
mov
xchg
push
dec
incb
and
or
xlat
and
jg
dec
sti
inc
sub
dec
aad
shrl
outsl
daa
push
into
mov
push
pop
pop
scas
test
or
stos
pop
ret
adc
std
push
jb
ja
out
data16
inc
inc
adcl
cmp
cmp
sbb
int
jb
pop
push
push
addr16
jmp
mov
stos
std
mov
jb
mov
lods
mov
mov
les
jo
jno
sub
cwtl
jl
test
lds
mov
addr16
mov
outsl
push
xchg
sub
mov
imul
cld
js
popf
mov
sahf
dec
or
lock
hlt
push
scas
data16
sub
cmp
and
rol
add
sbb
fldt
mov
test
xor
ret
cmpb
daa
adc
cs
xor
pop
sub
sbb
call
movsl
inc
iret
lds
cwtl
jmp
adc
outsb
cli
xchg
imul
hlt
jle
pop
shll
cmpsl
in
pop
and
test
mov
arpl
pop
sbb
into
xor
push
and
pop
mov
xchg
ja
sub
pop
sbb
pop
ja
mov
push
adc
inc
sub
sbb
lds
mov
mov
das
or
sbb
or
mov
lock
bound
je
pusha
ss
imul
sarb
leave
ljmp
addr16
push
test
mov
xor
or
iret
add
push
lea
out
cwtl
pop
dec
ds
rcll
xor
popa
jmp
test
insb
adc
outsl
pop
mov
test
xchg
sub
pop
xor
cltd
xor
popa
inc
add
mov
fwait
jg
stc
in
adc
arpl
jecxz
enter
into
mov
lods
out
xchg
pop
mov
mov
shll
es
adcb
jp
lods
dec
inc
divb
mov
nop
inc
fucomip
xchg
add
adc
call
inc
lea
sbb
lcall
int3
mov
sub
fsub
cli
icebp
pop
sti
das
sbb
popa
sbb
mov
xor
shll
test
xchg
mov
faddl
aas
push
in
out
push
mov
je,pn
mov
pushl
loope
lock
push
inc
scas
jns
fistpll
xor
pop
xchg
inc
js
cmp
jae
xor
mov
inc
add
data16
jg
pop
gs
stos
sub
mov
test
sub
ficomps
add
jo
mov
mov
inc
aas
cmp
test
pop
ds
fsubrl
inc
sbb
jl
int
push
pop
pop
jb
jnp
repz
mov
adc
jmp
cmp
shl
add
or
insl
loop
jp
outsb
adc
movsl
inc
mov
add
mov
fmull
shl
inc
xor
mov
cmp
or
into
dec
cmp
adc
cmp
mov
or
dec
adc
inc
adc
pop
add
xchg
push
aam
fbld
pop
add
ds
ret
push
cmp
in
hlt
lcall
add
stc
mov
mov
in
xor
xchg
jb
push
mov
cli
jns
jo
sbb
mov
cmpsl
mov
inc
push
call
test
sahf
jecxz
xchg
enter
outsl
inc
xchg
das
mov
jb
lret
ret
call
or
lea
dec
cmp
jecxz
mov
neg
bound
test
es
mov
jmp
push
mov
inc
mov
fsubrl
mov
dec
push
dec
movsl
jbe
scas
adc
je
rcrb
call
fildl
xor
mov
inc
add
test
rcl
adc
test
sub
mov
or
push
mov
mov
and
enter
cmpsb
push
movsl
andl
lea
testb
jno
out
xchg
pushf
js
or
push
insb
jne
add
jb
cmp
pop
scas
pop
scas
mov
jp
lea
sub
gs
out
xor
sbb
and
adc
popf
imul
pusha
cmpsl
mov
shr
jl
fdivr
sbb
pop
xchg
inc
mov
test
xor
movl
xor
jno
cmp
push
inc
xchg
jp
aad
mov
xchg
sub
mov
ds
push
mov
fadd
in
and
mov
shl
dec
pusha
icebp
mulb
add
mov
push
or
aad
bnd
in
jne
mov
jae
insl
ss
adc
pop
fsts
push
xor
dec
jp
cmpsl
mov
lods
sub
ss
mov
ret
jns
icebp
xor
sub
push
lahf
out
loope
aas
or
pop
outsb
jl
push
jo
inc
lods
add
pop
clc
ds
dec
jle
jcxz
ret
jno
sub
xor
dec
add
mov
mov
div
xchg
sti
and
mov
out
ret
mov
push
mov
xor
mov
inc
lods
xchg
cli
je
mov
arpl
inc
in
mov
icebp
cmp
cmc
jne
sbbl
into
push
inc
or
fdecstp
into
enter
mov
insb
sub
push
or
lahf
pushf
test
xchg
xorb
mov
pop
out
bound
adc
filds
adc
mov
out
pusha
inc
add
lcall
dec
mov
jb
sbbb
or
iret
outsb
pop
and
fstps
mov
adc
jo
add
inc
jo
dec
jae
cltd
cmc
test
fiadds
into
fiaddl
jecxz
push
imul
pusha
in
mov
popa
mov
cmp
out
andb
sub
jge
xor
test
movsb
push
mov
dec
es
or
sbb
rcl
lods
ficoms
stos
sbb
and
mov
sub
insb
pop
clc
in
inc
mov
mov
xor
cmpsl
aad
ljmp
inc
paddw
cmp
repnz
sub
adc
xchg
jae
add
xchg
mov
lret
jecxz
popf
repnz
jno
sbb
xor
xchg
push
mov
pop
add
dec
into
push
cli
or
add
shr
scas
addl
adc
xor
out
xor
rolb
lcall
add
dec
inc
fnstcw
push
pop
cwtl
call
and
add
aas
mov
jnp
add
add
sbb
and
ret
and
addr16
sub
cmp
lret
push
mov
jle
cmpsb
dec
pop
shrb
imul
mov
leave
inc
pop
lock
fstpt
lds
test
in
push
xchg
insl
ret
xlat
mov
mov
jae
dec
cmp
jmp
add
cltd
in
push
mov
fisttps
lea
inc
sbb
repz
mov
pop
mov
leave
inc
das
push
adc
fmuls
cmp
mov
push
je
repnz
push
pop
add
cmp
cmp
pop
dec
pop
fucomi
andb
jmp
mov
xor
inc
add
aaa
mov
mov
leave
mov
cli
adc
lret
mov
hlt
dec
cli
movsb
test
fidivl
xchg
or
adc
fcom
loope
loopne
fisttpl
dec
cmp
mov
dec
add
cmp
jmp
jle
mov
lret
ror
inc
xchg
inc
jne
cltd
lds
inc
push
movsl
shl
iret
cmpsb
sahf
das
in
std
push
lcall
cmc
in
xor
dec
in
inc
and
test
mov
data16
loop
loopne
jmp
lods
jae
xchg
add
stc
xchg
mov
and
sub
or
repz
jnp,pt
ja
mov
adc
mov
add
enter
push
addr16
aam
outsb
cmpsb
out
mov
pop
lahf
xchg
das
repz
adc
cmp
sbbb
out
movsb
mov
and
or
xlat
dec
gs
hlt
sub
dec
cmp
in
lret
adc
jbe
add
push
push
je
inc
ret
sbb
test
mov
jo
sahf
inc
sbbb
add
mov
xor
in
sahf
pop
xchg
sbb
arpl
jmp
lods
and
out
jg
xor
lcall
xchg
roll
jae
mov
es
or
std
jecxz
mov
sbb
mov
push
or
test
xchg
insb
js
mov
and
int
das
cmp
mov
xchg
dec
lods
lea
xchg
cmp
xchg
pop
ja
sbb
push
repnz
dec
pop
loopne
lcall
loopne
out
cmp
lds
aas
popf
dec
jl
imul
dec
cmp
js
data16
data16
mov
icebp
call
out
mov
pusha
adc
mov
ds
mov
and
int
mov
xchg
stc
fistpl
sbb
push
cltd
push
jl
inc
cmpsb
cmp
mov
jns
sarl
adc
rcrb
xor
adcl
xor
mov
mov
push
sub
in
in
mov
ret
push
movsl
or
or
notb
gs
jnp
or
mov
jae
or
out
xlat
push
lret
mov
sahf
jl
and
xchg
stos
push
and
idivl
mov
fisubs
fmul
jecxz
adc
ret
and
nop
cmpl
nop
lret
ret
add
cmp
jns
fcoms
inc
mov
and
xor
push
in
addr16
or
jnp
insb
and
mov
pop
pop
fdiv
loopne
outsb
lret
xor
jecxz
loopne
aad
mov
mov
fstl
sahf
stos
adc
and
cmp
adc
pop
sbb
mov
lods
mov
cmp
sahf
jl
mov
push
dec
and
mov
xor
out
and
enter
xor
xor
cltd
filds
lcall
and
pop
lods
loopne
cmpsb
add
imul
push
mov
mov
jle
clc
dec
push
add
insb
mov
inc
jp
fdivl
add
enter
out
and
addb
imul
adc
pop
jae
stos
xchg
cmp
into
test
mov
adc
mov
push
xchg
loope
popf
sub
out
dec
add
addr16
bound
inc
sub
sbb
insb
dec
sbb
call
cmp
test
adc
dec
pop
sub
add
leave
cs
push
jmp
into
xchg
inc
lahf
mov
sbb
stos
adcb
mov
lret
sbb
popf
pop
xchg
shrb
fst
push
xor
std
in
aas
cmp
fimull
xor
cmpsb
jg
les
cmp
mov
cmp
enter
into
stos
adc
xchg
jbe
ror
icebp
jmp
or
sbb
inc
scas
pop
fstl
icebp
jge
xor
movsb
jnp
into
cs
rcll
mov
shrb
mov
iret
sbb
mov
stc
and
push
jmp
enter
mov
ret
sbb
ret
int
std
fists
movlhps
sbb
or
rorb
jge
xlat
pusha
sbb
mov
test
cmpsb
push
or
jp
mov
stos
dec
bound
test
push
and
and
pusha
clc
add
scas
jmp
scas
inc
aam
incb
mov
sub
fmuls
shll
lahf
add
pop
and
adc
dec
in
mov
jbe
sbb
adc
xchg
or
sub
dec
pop
xchg
pop
popf
arpl
and
and
in
lds
test
insb
xchg
adc
movsb
test
and
daa
mov
rcr
mov
cli
sub
repz
mov
movsl
and
loopew,pn
jg
push
xchg
mov
ds
stos
mov
stos
lahf
subb
and
add
mov
and
outsb
sarl
js
mov
and
push
inc
js
sbb
dec
test
lcall
jecxz
iret
out
out
push
sbb
push
sub
ss
xchg
xchg
std
pop
sahf
rcl
dec
pop
divl
nop
and
cmc
mov
lret
stos
and
repnz
dec
mov
adc
and
or
xchg
adc
dec
enter
jns
movsb
xchg
jb
push
adc
sbb
into
lcall
push
mull
adc
out
adc
mov
mov
in
jp
popf
sbbb
dec
test
xchg
insb
imul
jae
pop
inc
jns
mov
lds
or
test
loopne
pop
andl
stos
in
lahf
lret
subl
aaa
fstpl
jnp,pt
cmp
sbbb
pop
push
or
xchg
jge
dec
cmp
in
and
add
mov
in
sub
push
lret
mov
or
or
aam
hlt
ljmp
push
pop
int
jp
call
fisttpl
cwtl
stos
push
jne
inc
push
and
xchg
out
pop
insl
lret
fisttps
mov
fwait
insb
cmpsb
and
and
outsl
push
jnp
xlat
jo
xor
out
pop
or
outsb
shl
xor
adc
stc
add
pop
lahf
lock
mov
push
pop
push
sahf
push
and
int3
negl
add
or
cmp
lret
into
jg
sahf
inc
mov
xchg
mov
lahf
xlat
and
scas
in
mov
aad
lea
xor
mov
mov
outsl
inc
cmpsl
aam
xchg
cmp
repnz
sarb
inc
sub
testb
or
loopne
jl
bnd
jns
mov
add
je
mov
xchg
adc
sarb
fwait
ret
loop
gs
in
js
outsl
ja
movsl
mov
lret
out
xor
inc
arpl
les
repnz
aad
add
insl
dec
daa
and
inc
mov
cmp
lret
bound
adc
sub
call
xchg
loope
outsb
in
test
and
scas
lock
fstps
aas
mov
out
stos
mov
nop
outsb
sub
mov
std
sti
add
outsb
xchg
std
dec
sar
sbb
aaa
ljmp
mov
mov
jnp
in
lods
loop
pop
loope
mov
push
cmc
and
cwtl
jl
shl
int3
test
jno
adc
inc
push
dec
mov
mov
sbb
mov
fwait
repnz
or
push
into
dec
inc
loope
adc
adcl
xlat
divb
fistpl
stos
jae
ficomps
inc
push
cwtl
inc
inc
jne
out
pushf
cld
iret
cs
cmc
or
subl
loope
dec
pop
push
insb
sbb
mov
sti
flds
ret
ss
add
clc
call
mov
inc
mov
inc
repz
data16
hlt
adc
arpl
and
jbe
fstpt
push
arpl
pop
push
inc
test
jg
inc
xchg
leave
or
ret
lahf
push
cli
fisubrl
add
or
jb
mov
cmc
pop
les
roll
ljmp
cmpsl
outsl
inc
iret
add
jp
outsb
dec
aad
inc
add
out
adc
mov
sub
push
in
imul
push
cmpl
jae
sub
dec
test
or
fsubr
int
xlat
inc
jae
add
sbb
mov
mov
gs
jmp
shll
push
das
sbb
dec
cmpsb
in
fnstcw
inc
pushf
fists
push
rcr
dec
fisubrs
popa
jnp
jecxz
sub
mov
and
cmpsb
test
xor
cmp
adc
loop
lahf
jmp
and
pop
fwait
pop
jbe
inc
mov
mov
inc
xor
iret
iret
inc
clc
or
fdivl
shlb
lret
jne
mov
lahf
daa
push
mov
mov
mov
out
pop
aas
rclb
pop
movsl
out
ljmp
inc
loope
loop
mull
fwait
out
pop
dec
xchg
xchg
push
lcallw
enter
sub
mov
pop
push
lcall
mov
hlt
dec
cmp
inc
sbb
movsl
and
int3
mov
cmp
test
icebp
stc
mov
fwait
xchg
fwait
and
fwait
outsl
int
mov
add
adc
sub
ret
bound
mov
ljmp
scas
mov
insb
mov
and
out
mov
mov
push
in
fnstsw
pushf
cmp
push
add
fidivl
icebp
jbe
add
test
mov
jnp
fimull
jno
int
xchg
inc
gs
stos
out
push
rorb
mov
hlt
nop
dec
testb
sbb
das
sub
jno
mov
sahf
arpl
or
loop
and
or
pause
iret
cmp
inc
mov
mov
xchg
int3
cltd
mov
pop
cwtl
cmp
fisubl
aaa
sub
sub
mov
fcompl
dec
data16
jns
cmc
and
dec
dec
popw
sub
mov
push
xor
add
jp
fadds
push
das
jecxz
mov
cmp
sub
loopne
shrl
mov
dec
mov
mov
or
adcl
dec
adc
out
jge
push
or
iret
sub
jno
inc
sub
push
jno
insb
mov
jne
inc
push
push
je
fidivrl
daa
sub
clc
mov
sti
adc
or
lods
or
jo
jmp
testl
xchg
jno
int3
jg
push
dec
jmp
shll
mov
mov
cli
add
out
mov
outsl
inc
daa
or
mov
lahf
insl
leave
inc
add
add
xor
pop
hlt
sub
shlb
lahf
rcl
pushf
adc
dec
mov
mov
push
sbb
cmpsl
mov
push
xorl
lahf
or
add
mov
aad
mov
jle
lea
fs
cmp
leave
sti
sub
push
gs
sbb
push
pusha
xor
jle
sbb
sub
fildll
jge
add
loopne
mov
mov
adc
cmp
cwtl
and
mov
and
roll
mov
test
mov
adc
push
std
mov
pop
test
add
sub
mov
cmp
out
sbb
loop
inc
xor
jl
adc
adc
cltd
cmp
inc
push
negb
jle
lcall
lret
or
and
popf
cld
sbb
std
mov
lock
hlt
psrlw
and
lods
cmpsl
mov
mov
not
inc
pop
mov
subl
dec
insb
dec
lret
stos
xor
cmpsb
pop
mov
sar
ret
test
call
cmp
sub
pop
pop
push
sbb
popf
out
dec
push
push
xor
mov
stos
add
scas
loopne
icebp
mov
addb
test
ficomps
mov
mov
or
xor
xchg
mov
mov
icebp
dec
lcall
mov
push
pop
in
jnp
filds
push
cmp
lds
lock
out
mov
in
mov
pop
loop
enter
or
or
repz
arpl
test
ror
inc
mov
aaa
or
fimuls
hlt
fisttps
cmp
or
test
ss
pop
and
cs
or
in
cli
mov
xchg
sbb
scas
popa
test
orl
sub
das
icebp
inc
repz
insl
clc
rorb
xchg
aas
push
mov
imul
jmp
sbb
cmp
cmp
dec
sbb
jmp
lret
in
incb
push
pop
sahf
add
sahf
add
sar
mov
fistps
scas
rcll
out
cmp
aad
repnz
inc
xchg
mov
push
cmpsb
ja
stos
clc
shr
stos
xor
pop
add
clc
inc
in
mov
js
inc
push
push
mov
dec
inc
dec
leave
ficomps
cltd
stos
add
add
lods
mov
iret
aad
add
add
jl
out
popf
lret
outsl
mov
adc
and
push
cltd
lret
xor
aam
lods
adc
scas
dec
scas
push
aam
xor
and
xor
ss
sub
xor
pop
les
inc
test
fimull
adc
xchg
lahf
arpl
inc
test
and
inc
out
and
cli
into
lret
and
iret
add
cmp
and
stos
push
jge
xor
lods
das
cmp
es
mov
cwtl
rcrb
xlat
pop
pop
xchg
push
cld
add
jmp
fmuls
pop
xchg
cmpsb
divb
pop
std
add
cld
mov
movsl
movsl
fsubp
sbb
dec
in
lods
sbb
rcrl
cmp
sbb
mov
fdiv
decl
xor
cmc
repnz
cmp
cmp
mov
inc
mov
xor
inc
pusha
dec
loop
mov
imul
popf
leave
les
xor
sti
outsb
mov
inc
in
or
mov
mov
ficoms
push
push
sub
sbb
int3
faddl
cld
out
xorl
out
cltd
dec
in
sub
pop
add
enter
movsb
rcll
movsl
sar
add
cli
rolb
xchg
or
jecxz
mov
mov
test
pop
push
cld
adc
call
push
sbb
cmp
jne
mov
loope
sbb
add
push
jge
inc
cmp
mov
or
mov
cmc
jle
pop
subl
mov
jp
inc
xchg
push
mov
adc
out
push
fsubs
dec
jno
and
ja
cmpsb
jge
decb
sbb
adc
inc
int3
dec
popf
push
arpl
dec
or
jo
sub
xchg
sbb
ds
pop
inc
sub
xchg
jnp
mov
stc
sarb
cmpsl
int
ds
daa
popf
cmp
fiaddl
or
stos
call
lods
idivb
mov
sbb
push
sbb
xor
in
jns
pop
dec
push
les
lret
mov
pop
push
out
loopne
test
mov
mov
cmc
mov
sahf
cmpsb
sbb
jge
into
inc
cmpsl
lahf
sbb
add
clc
shrb
lahf
xchg
inc
dec
inc
mov
movsl
xchg
test
pop
subb
mov
scas
inc
das
icebp
pop
adc
dec
call
out
pusha
aaa
cmp
loope
or
sbb
and
mov
fadd
sbb
cmp
adc
insl
sub
lods
xor
leave
adc
outsl
leave
dec
mov
xor
push
jo
loop
dec
popa
clc
adc
xchg
icebp
jbe
pop
jmp
hlt
lds
pop
rol
xchg
mov
ficomps
shrl
lcall
out
xchg
xchg
xor
add
imul
and
mov
popa
les
stos
lods
pop
or
aaa
adc
push
rorl
fstpt
xor
xor
das
stos
fstl
pop
enter
mov
xor
aaa
test
dec
inc
fadds
push
jo
pop
enter
lret
fwait
js
int
stos
fs
sub
stc
jl
jo
pop
rolb
mov
and
sbb
xchg
dec
test
jmp
leave
add
adc
ficompl
push
insl
sub
or
dec
cmovg
sub
sbb
fnstsw
ss
jne
fwait
push
in
cld
out
adc
fidivl
test
inc
jnp
loopne
ljmp
aas
xchg
and
cltd
rcr
mov
inc
jl
jns
lea
jnp
and
fabs
stc
inc
or
jle
stc
int
aam
adc
aam
jo
test
pop
mov
pop
notb
outsb
jl
out
mov
mov
xlat
jae
es
jle
inc
shll
loop
dec
les
les
ds
roll
cmp
out
and
ja
push
push
mov
xchg
lahf
or
mov
pop
ret
imul
inc
inc
fucom
sti
insl
jno
int3
xor
jnp
leave
mov
cmp
adc
mov
stos
mov
mov
or
cmp
jmp
mov
insl
sbb
jg
jecxz
inc
test
sahf
je
push
mov
push
test
lret
mov
stos
adc
out
inc
and
sbb
idivb
ss
push
push
mov
lods
out
icebp
fmuls
add
or
and
fld
jecxz
mov
or
arpl
sub
xlat
lcall
cmp
stos
jmp
cmp
mov
mov
mov
sbb
les
lret
aad
add
enter
mov
mov
mov
mov
mov
mov
push
push
pop
inc
xchg
xchg
ja
inc
es
xor
mov
adc
add
bnd
outsb
push
in
mov
cltd
inc
ret
nop
xchg
fstpt
call
sub
inc
sub
or
out
cmp
dec
leave
cld
mov
cmp
push
lods
cmp
jbe
imul
pop
dec
jne
mov
movsb
rorl
aas
sbb
jmp
stos
xor
xor
pop
mov
adc
jb
inc
mov
popa
and
mov
data16
cmpsb
sbb
loope
mov
jecxz
add
mov
cwtl
jge
xor
or
fcmovbe
xchg
fnsave
popa
cmpb
pusha
mov
call
jns
arpl
dec
or
add
or
sub
mov
leave
xor
mov
lcall
jl
push
fsubl
sti
scas
jo
sub
cwtl
xchg
movsl
sbb
pop
shr
dec
shlb
lds
sahf
outsb
lahf
add
push
pushf
jmp
pop
ljmp
lret
repnz
shl
xor
int
push
dec
push
ret
dec
movsb
cmpsl
inc
lods
inc
cmc
jbe
testl
cli
leave
sbb
int3
cmp
xor
mov
or
sub
out
dec
push
and
cmpsb
rclb
adc
jecxz
scas
dec
stos
sub
jbe
dec
insl
jo
mov
ljmp
roll
test
aaa
pop
out
dec
sub
fwait
push
bnd
ss
add
aaa
xor
sub
push
jle
iret
outsl
xchg
jb
and
or
push
xlat
orb
repnz
mov
jle
pop
add
inc
notb
pop
aad
cmc
je
out
pop
fcoms
xchg
dec
adc
push
cmp
and
sar
sti
mov
fistpll
xlat
int
xor
push
pop
sub
fistps
loop
ret
xor
push
icebp
dec
push
mov
xchg
stos
sbb
xchg
mov
dec
lock
out
popf
xchg
cmpsb
fbld
not
addr16
push
repnz
push
inc
jmp
mov
adc
icebp
dec
mov
jmp
sub
aas
add
jge
movsl
mov
loope
jne
loopne
sub
fwait
mov
lock
push
fstpt
jecxz
cmc
dec
sbb
insl
or
jne
push
addr16
xor
jno
pop
imul
mov
shll
cmpsb
ficoml
shlb
xor
mov
mov
sbb
cmp
jmp
adc
or
arpl
lods
push
jge
or
xchg
into
mov
or
lea
lods
pop
js
icebp
call
imul
adc
sub
rclb
add
lcall
out
jae
xor
cmp
xchg
xchg
in
ret
mov
xor
in
rcr
lret
dec
pop
mov
and
mov
xchg
shll
cli
pop
pop
cs
jo
int
cli
or
ret
loope
enter
adc
adc
cmp
push
rolb
stos
and
shll
mull
dec
cmp
jae
push
inc
xor
sub
lcall
or
xchg
arpl
add
or
cltd
scas
sub
iret
pushf
xor
pop
sbb
push
mov
repnz
mov
jns
dec
cmp
sbb
ljmp
test
dec
bound
xchg
pop
rolb
je
or
and
daa
jno
mov
xchg
mov
je
cltd
cmp
xor
lods
xlat
adc
jbe
sub
mov
std
dec
jmp
aaa
cmpsl
push
stc
and
daa
sahf
mov
xor
leave
or
test
rol
rolb
leave
xor
xor
jae
shr
mov
xchg
outsl
pop
in
add
rclb
push
mov
push
int3
push
mov
popl
addl
cmc
shrb
daa
jmp
adc
or
mov
pop
adc
mov
cmp
pop
push
jle
xor
loope
pop
dec
mov
pop
hlt
fcomps
out
pop
and
xchg
stos
cmp
adc
outsb
adc
xchg
pop
inc
mov
popf
stc
cmp
sub
xchg
in
or
outsl
flds
push
pop
sbbb
cmp
shl
or
jo
js
stc
cmp
inc
lahf
lahf
or
movsb
in
xchg
xor
jmp
add
add
int3
imul
test
cmpb
lret
mov
aaa
fists
dec
adc
mov
je
fucomip
mov
push
rolb
gs
popa
push
aas
mov
jnp
push
ljmp
cmp
lahf
and
xchg
gs
cmp
sbb
repnz
cmc
enter
jo
push
movsb
dec
das
xchg
pop
mov
push
and
mov
mov
fildll
adc
xor
popa
cmc
and
lods
sub
jl
push
push
insb
jl
inc
outsb
test
fcomps
push
add
je
stos
das
arpl
fdivrp
xorb
daa
mov
jne
fs
push
push
add
or
adc
cwtl
xchg
dec
mov
imul
inc
nop
ds
pop
int
sahf
adc
je
mov
xchg
sbbb
or
cltd
add
pop
data16
arpl
loopne
mov
jg
das
adc
xor
fs
sbb
add
fidivrs
fcoml
loopne
and
pop
out
arpl
js
ret
dec
das
sbb
insl
and
in
mov
xor
fdivp
outsb
dec
mov
bound
lret
push
or
xor
mov
out
ss
xor
cmp
jo
insl
mov
pop
jg
cs
dec
add
cmp
or
xor
leave
les
pop
pop
push
in
mov
cmc
les
lds
rorl
jmp
push
call
and
mov
lret
rolb
sahf
fcmovnu
sbb
inc
test
fistpll
adc
push
push
push
cmp
push
shrl
subb
dec
jmpw
dec
and
xchg
lock
and
jo
sbb
es
js
xchg
in
ss
mov
jl
cmp
push
loope
cmc
hlt
in
or
cmp
add
mov
push
push
test
and
lret
or
je
in
cmp
insl
or
lcall
or
int3
in
sbb
mov
divb
outsb
call
mov
idiv
js
cmp
add
mov
or
push
subl
push
popa
or
sub
jo
mov
fldcw
sar
mov
or
imul
or
enter
hlt
mov
mov
pop
inc
mov
fidivl
mov
repnz
or
mov
add
xor
cmpsb
les
sti
push
pop
push
test
sub
adc
ret
mov
mov
jnp
and
jae
lods
sbb
sbb
test
add
sbb
movsb
sbb
inc
jnp
sbb
flds
dec
js
stc
stos
push
jns
pop
mov
cmc
mov
aas
insl
fsub
push
mov
push
xchg
in
movsl
and
push
adc
mov
fstp
cltd
push
pusha
in
inc
mov
lahf
movsl
popa
xor
stc
test
jle
and
mov
dec
stc
les
mov
std
push
shl
and
pop
imul
stos
leave
repz
addr16
push
cli
aam
xchg
sub
jp
popa
add
add
loopne
xor
dec
shrb
xor
pop
inc
dec
push
mov
insb
adcl
mov
mov
xchg
add
xchg
xor
test
pop
cmp
jnp
sbb
mov
jnp
call
lret
cmp
popf
sub
jecxz
push
call
in
xchg
mov
adc
lahf
jo
sbb
ret
in
add
cs
adc
jp
faddl
sub
and
jne
ljmp
lods
or
call
xor
andb
push
aam
push
mov
sahf
push
dec
mov
or
adc
mov
cmpsb
mov
adc
add
mov
xchg
push
or
jg
test
jne
aad
mov
xchg
popa
pusha
or
repz
pop
mov
inc
loopne
pop
or
bound
inc
ss
cmp
movsb
mov
push
xor
jg
mov
dec
mov
dec
dec
inc
lea
mov
mov
rclb
add
add
data16
cmpb
add
popf
xor
cmp
dec
sbb
push
les
or
push
pusha
sti
sbb
pop
xchg
mov
pop
fwait
mov
dec
mov
out
lcall
repnz
js
sub
loopne
sub
aam
mov
pop
adcl
jb
lret
dec
add
and
jg
and
mov
imul
aad
fbld
sbb
and
and
pop
loope
xchg
mov
xor
test
pop
xor
gs
push
movsl
push
lods
mov
imul
mov
fmull
cmp
push
lods
stos
loop
ret
sbb
pop
out
rorb
push
push
mov
mov
sub
daa
test
adc
mov
addr16
and
mov
add
and
adc
dec
sbb
ss
mov
jecxz
mov
repnz
data16
or
imul
inc
mov
xor
or
xchg
mov
adcl
mov
jge
dec
mov
outsb
fldt
sti
imul
push
negb
fnstcw
scas
xor
push
in
test
movb
xchg
cmp
les
push
lret
mov
pusha
sub
jmp
loopne
fwait
xor
cmp
push
xor
bound
mov
xlat
mov
out
mov
adc
aam
popl
lahf
fs
out
mov
divb
fnsave
and
mov
push
jae
mov
outsb
leave
sub
movsl
mov
int3
pop
cmc
inc
jmp
bound
ljmp
adc
mov
mov
stos
shl
call
mov
daa
adc
mov
push
mov
xchg
rclb
cmp
cltd
jge
jl
jge
dec
xchg
mov
jmp
sbb
cmpsb
std
pop
dec
xchg
push
mov
mov
pop
mov
gs
cli
jp
pusha
lds
insb
fldl2e
cld
lods
pop
mov
and
aad
shl
idivb
xchg
add
or
repnz
pop
xor
pop
push
imul
inc
inc
inc
add
and
rcll
inc
loopne
cs
jge
jp
je
mov
aad
or
mov
adc
mov
xchg
jge
cwtl
xchg
lret
jb
dec
pop
notb
cli
ret
and
mov
cmp
inc
out
rorb
cmp
inc
negb
roll
stos
xorl
hlt
and
mov
mov
mov
push
and
insl
pop
cmp
repnz
in
pop
fnstsw
scas
xchg
loope
loopne
dec
mov
shll
data16
jecxz
pop
pusha
aad
lcall
in
jmp
pusha
pop
xorl
lds
test
push
pop
xchg
add
and
mov
les
int
insl
and
jno
ljmp
mov
scas
pushf
test
jo
stos
mov
pusha
dec
enter
clc
sbb
outsb
mov
push
cmpsl
jp
pop
push
pop
mov
push
jb
xor
cmc
fimull
xchg
fwait
xor
and
push
cwtl
pusha
dec
or
mov
in
pop
mov
insl
icebp
dec
jecxz
or
jecxz
xchg
adcb
int3
test
adc
flds
push
mov
xchg
leave
pop
xchg
or
mov
mov
test
pop
pop
push
insb
fcompl
faddl
ss
or
push
stos
cmp
pop
push
and
and
pop
xchg
int
test
ret
pop
lods
xlat
aaa
sub
negb
inc
adc
push
inc
sub
popf
repz
jge
xchg
stc
lods
dec
js
scas
fld
push
push
fldt
movsl
xchg
ret
jne
loop
sbb
push
pop
sahf
mov
push
lahf
mov
movb
jns
mov
test
push
stos
xor
loope
and
mov
movsb
sbb
pusha
call
mov
mov
mov
lods
js
js
and
push
push
mov
jae
stc
movsl
lahf
aas
and
lods
fldcw
jecxz
outsb
stos
fstpl
dec
inc
cmc
jmp
add
push
into
lret
jecxz
in
jb
inc
call
cmpsl
loopne
and
jp
or
or
loope
jno
cmp
cmc
xchg
cs
pop
sub
jmp
cmc
lds
pop
jle
cmp
mov
jge
dec
adcb
inc
xorb
pop
xchg
inc
das
out
push
pop
push
hlt
test
sbbl
xchg
mov
pop
shrb
gs
xor
jmp
push
mov
je
pushf
faddl
aas
loope
xor
jg
shrl
mov
test
push
or
cmp
adc
xor
xchg
fsub
mov
fs
mov
test
xchg
out
out
lahf
test
addr16
adc
addr16
inc
call
and
adc
lods
movsb
ficompl
mov
and
fsubl
mov
mov
fs
cmpb
xor
mov
je
mov
sub
or
pusha
dec
pop
icebp
xor
enter
lods
cmpsl
push
in
shl
cmp
or
mov
ja
sbb
sbb
jbe
adc
iret
inc
xor
adc
mov
dec
icebp
add
xor
nop
mov
xchg
mov
lock
xlat
jl
xchg
aas
or
test
add
int
daa
das
aaa
stos
int
dec
out
xor
das
jmp
dec
arpl
cmpsb
mov
rcrb
dec
ljmp
repz
and
sub
sti
test
pusha
adcb
sbb
inc
mov
push
xchg
ja
sub
movsb
mov
dec
les
sub
js
dec
jnp
adc
inc
push
lock
repnz
adc
sbb
fnstcw
sbb
pop
icebp
lahf
mov
sbb
outsl
sbb
adcb
xchg
les
dec
mov
sbb
stc
sub
fists
push
inc
dec
arpl
xor
mov
pop
and
fidivs
out
cmpsl
mov
nop
dec
cs
sub
fmull
frstor
int
pop
cli
mov
add
jo
mulb
in
into
daa
or
push
in
xchg
cmc
into
add
mov
or
notb
cltd
in
lea
fcoml
adcb
js
test
jbe
jge
lea
xchg
add
inc
jne
push
pop
mov
mov
pop
lret
aas
mov
mov
jle
push
cld
dec
test
and
xchg
bound
cltd
fstp
insb
into
pushf
pushf
ljmp
cmpsb
cmp
pop
xor
ret
sub
mov
pop
adc
sub
mov
lds
adc
stos
mov
sbb
inc
aad
stos
rclb
loopne
cmp
sub
pop
sbb
insl
and
xor
enter
mov
in
pop
mov
xchg
stos
mov
push
dec
push
fwait
xchg
ficompl
xor
aas
shl
leave
mov
mov
cmpsl
inc
or
sbb
jb
inc
ljmp
xchg
xor
fmull
fsubrs
mov
stc
mov
fld
clc
jnp
xchg
sub
cld
rorl
pop
andl
jp
icebp
shl
popf
xchg
in
cmp
out
leave
int3
arpl
mov
mov
adc
and
add
or
pop
int3
or
mov
mov
dec
xchg
stos
pop
aam
imul
or
xchg
add
gs
test
lods
roll
mov
fwait
out
xchg
sbbl
adc
aas
daa
test
mov
sarl
out
xor
clc
jno
pop
cmp
scas
cld
add
xor
cmp
testb
mov
stc
adcl
sarl
sti
or
mov
sti
in
adc
scas
mov
adc
push
and
jle
xor
rorb
cmp
stc
mov
inc
mov
jo
mov
iret
inc
outsl
xor
ja
cmp
outsl
pop
or
add
mov
lods
cld
data16
push
mov
lods
loope
int3
xchg
lea
pop
cmp
cmpb
in
fildll
or
test
out
ret
fxch
and
cmpsb
movsl
insb
adc
mov
mov
test
xchg
jnp
add
inc
inc
insb
and
lahf
sbb
fdivrl
clc
adcb
out
dec
cltd
movsb
dec
mov
das
scas
imul
push
insl
lahf
pop
push
sbb
dec
daa
cli
data16
jno
sub
inc
or
adc
fwait
subb
adcl
cmp
loopne
daa
repnz
mov
xor
inc
inc
lret
sub
mov
sub
xchg
cmp
inc
sahf
sbb
leave
xchg
jbe
sub
sub
mov
cli
popf
mov
into
dec
mov
std
sub
aad
movsl
pop
xchg
iret
ss
xchg
mov
pop
sub
push
adc
fs
push
int
bound
test
insl
dec
lret
mov
xchg
xor
gs
jp
out
xchg
push
mov
mov
pushf
js
lcall
repnz
mov
je
pop
sbb
and
push
push
add
mov
sub
push
cmpl
aam
mov
xchg
sub
mov
stos
int3
jns
daa
insb
mov
xchg
out
mov
fsubrl
adc
adc
pop
cwtl
stos
cmp
mov
pop
and
xlat
nop
ds
shll
sbb
std
popa
leave
outsl
mov
and
pop
dec
cmp
aam
push
and
dec
and
mov
ss
push
fs
movsb
xor
mov
add
and
movsl
addb
imul
out
ret
push
inc
decl
lds
xchg
xchg
push
cmp
das
out
inc
or
jnp
repz
in
lret
mov
inc
mov
divb
jns
xchg
dec
in
mov
js
std
aaa
lret
jmp
inc
mov
adc
out
sub
jo
dec
mov
xchg
fs
jge
popa
add
jo
cmp
dec
mov
jmp
mov
lds
dec
mov
pop
out
cld
arpl
int
test
js
andl
xchg
adc
bound
jbe
lret
cmpsb
mov
pop
stc
cmp
ret
popa
adc
jp
aaa
lcall
pop
out
jl
das
mov
or
idiv
jo
inc
loop
sbb
mov
adc
ret
das
cs
gs
int
or
mov
sbb
jne
mov
mov
sub
fcmovbe
shrb
adc
scas
or
or
fcomip
sub
test
xor
jne
jns
jmp
mov
cli
xchg
adc
pusha
jl
cwtl
mov
cs
scas
mov
mov
call
out
fldt
bound
pushf
xchg
in
inc
ss
pop
addr16
mulb
pop
dec
and
aas
in
cmpsl
and
mov
mov
add
sbb
jecxz
in
dec
ljmp
xchg
mov
mov
sbb
mov
daa
mov
jmp
mov
push
jno
mov
repz
ljmp
xchg
movl
cld
sbb
mov
mov
stos
mov
and
adc
loopne
sub
sub
out
int3
imul
sub
dec
lret
and
sub
pop
dec
scas
aam
nop
lock
inc
xor
sbb
or
aam
js
leave
ficoml
add
xor
mov
in
mov
iret
or
add
cmpsl
sbbb
mov
adc
notl
jb
hlt
jae
into
sarb
xor
inc
dec
push
xchg
sub
pop
jo
or
and
jl
push
pop
mov
mov
or
push
pushl
xchg
sub
xchg
mov
dec
std
shlb
dec
lret
jne
push
rcrl
lods
idivl
cmp
or
cmp
mov
add
shrl
outsl
ret
or
jecxz
rcrl
sub
fstpt
int3
lahf
jp
aad
sbb
into
jle
and
sbb
popf
cld
stos
cwtl
mov
pop
pushf
or
xor
push
and
test
lods
mov
mov
enter
and
and
cmp
in
mov
push
add
cmpsb
insl
jl
out
and
pop
insb
jle
rcr
mov
daa
mov
fwait
pop
add
ds
dec
inc
dec
mov
xlat
lds
dec
scas
xchg
and
pop
insb
xchg
stc
lret
stos
fisubl
adc
adc
xchg
lods
mov
mov
or
in
shrl
and
mov
xchg
pop
nop
xchg
lea
adc
adc
arpl
cmp
push
xchg
sbb
rolb
xchg
push
loope
dec
pusha
cltd
addr16
shl
xor
out
push
xchg
push
sub
mov
mov
dec
cmp
data16
jp
lret
xchg
dec
jae
imull
mov
or
and
ljmp
aas
jmp
xchg
lock
imul
adc
inc
pusha
mov
mov
cmc
xchg
xor
bound
mov
dec
cmp
jo
cmp
aas
cli
sbb
sub
cmpsl
sub
jecxz
xchg
inc
add
xor
dec
mov
sub
mov
stc
dec
inc
test
popf
mov
test
nop
sbb
inc
lcall
xchg
int3
and
cmpl
daa
imul
push
cld
test
repnz
lea
jl
and
adc
lret
std
sub
das
leave
scas
cmp
jns
push
dec
and
sbb
shlb
ja
jle
std
jmp
insl
fimuls
or
or
in
cmpl
out
push
xorb
rcll
sarl
popf
int3
xlat
imul
lock
jp
pop
xchg
repz
or
inc
jb
icebp
mov
mov
adc
jns
mov
sbb
call
idiv
jb
ret
push
pop
insl
das
adc
test
cmc
push
mov
and
mov
out
mov
int3
push
inc
push
stc
jl
sbb
aas
mov
fildll
pop
or
divb
push
add
outsl
ficoms
inc
ss
mov
jno
inc
aaa
popa
mov
dec
scas
xor
pop
dec
push
imul
xorl
adc
xor
cmp
stos
and
mov
fistl
cmp
das
mov
inc
lock
and
sti
inc
dec
int3
out
cmpsl
adc
push
adc
mov
jnp,pt
adc
inc
leave
fnstcw
aaa
jmp
popa
in
sub
jno
out
aad
sub
pop
adc
enter
dec
cs
data16
mov
movsl
push
inc
les
sbb
mov
mov
cmp
push
xor
mov
mov
dec
dec
push
cmp
push
insb
and
out
out
int3
fwait
xchg
fbstp
sahf
call
int
sub
iret
mov
dec
jo
xchg
cmpl
dec
ljmp
xchg
je
mov
pop
or
sub
lret
rolb
addr16
mov
push
mov
enter
popa
inc
lret
popf
cli
and
pop
nop
mov
ret
mov
cmc
pop
xor
mov
dec
adc
inc
inc
mov
add
sub
lds
pop
sbb
call
in
cmp
dec
jle
les
out
jb
stc
je
and
inc
fisubrs
mov
rcr
arpl
push
jl
std
xchg
leave
jae
hlt
fs
push
iret
and
mov
xlat
ret
loop
and
and
popf
or
xchg
movsb
xor
out
rorl
xor
xchg
xchg
pop
sbb
jge
xlat
jne
push
fidivl
jge
lret
xchg
mov
push
imull
mov
push
jl
cld
pop
sub
mov
cwtl
andl
arpl
xchg
jns
push
sub
out
push
imulb
pop
fidivs
pop
mov
shrl
or
mov
ss
sub
sbb
xor
add
dec
or
push
jbe
and
cmpsl
divps
inc
je
dec
add
cltd
add
lods
cmpsb
mov
mov
in
aad
or
mov
jb
inc
in
dec
sbb
jge
inc
sub
push
ljmp
mov
getsec
lock
adcb
test
pusha
add
xor
mov
enter
mov
pslld
mov
into
aam
lds
fsqrt
stc
out
out
or
jo
fwait
mov
lea
jae
xchg
inc
jbe
dec
add
xor
pushf
inc
xchg
sarl
push
cs
inc
or
je
adcb
clc
arpl
xchg
pop
enter
das
push
sub
xchg
add
cmp
mov
loopne
or
loope
clc
cmpsl
add
push
js
sbb
xchg
adc
xchg
icebp
pop
adc
xor
inc
outsb
mov
movsl
sbb
in
push
cli
orb
jl
das
add
and
mov
in
test
inc
xor
add
loopne
sub
pop
inc
out
addl
test
lods
lcall
in
sti
cmp
jl
lahf
jle
dec
rorl
cmp
pop
daa
lea
lods
fsubrp
pushf
adc
cmp
adc
cmc
lahf
fistpl
jg
in
pop
mov
scas
push
pushf
pop
xchg
sub
addr16
arpl
xor
mull
push
mov
testb
cs
and
ret
out
mov
inc
loope
xchg
cld
push
jl
mov
add
push
xchg
insl
cmp
xchg
out
jmp
add
lods
sbb
divl
jmp
sbbb
sub
je
lret
mov
mov
pop
add
push
push
cmp
or
jmp
adc
negb
repz
add
mov
add
std
xchg
xchg
cmp
xchg
cmpsl
inc
orl
mov
clc
jne
nop
pusha
dec
jg
cmpl
sub
subb
cmp
sbbb
ljmp
jns
sar
int3
sbb
sti
test
es
fcompl
mov
iret
lcall
pop
imul
aad
mov
fbstp
call
inc
pop
xchg
out
pop
lahf
aas
in
jmp
push
in
dec
jo
icebp
pop
cmp
xor
adc
inc
or
ret
and
sub
sahf
xchg
popa
dec
movb
pop
and
add
dec
xchg
in
ljmp
mov
adc
sbbb
idivl
push
divb
and
popa
lds
sbb
pop
cmpsl
or
push
mov
inc
sub
dec
jae
push
ljmp
lea
or
lea
rorl
das
imul
and
lods
into
je
ss
out
sub
xor
dec
das
mov
imul
in
add
xor
xchg
add
popa
jge
dec
xchg
inc
mov
adc
in
dec
mov
outsb
mov
fisubl
stc
scas
push
sbb
mov
hlt
mov
ret
push
int3
cmpsl
daa
adc
xchg
and
fsub
call
pop
and
dec
stos
dec
mov
cld
sbb
sub
cmp
sub
mov
add
insb
out
or
push
es
clc
push
jb
add
aas
lcall
inc
iret
pop
mov
xchg
fiaddl
orl
push
dec
lret
cli
js
clc
pop
xchg
push
fwait
pop
pop
stos
jge
adc
lahf
mov
xchg
xor
enter
nop
das
dec
aas
repz
push
hlt
cmc
xor
in
xchg
mov
or
adc
pop
add
inc
pop
loope
push
push
adc
mov
repz
test
inc
or
inc
fwait
fs
jecxz
sub
aaa
jnp
xchg
stc
jnp
in
in
divl
sbb
mov
fimull
lods
push
shrb
jl
push
testl
xor
and
das
imul
aad
push
or
lea
pop
repnz
sub
fcomi
mov
jae
ret
dec
lret
cs
cmp
sarb
loop
push
sbb
leave
and
pusha
ljmp
mov
in
adc
lcall
rcrb
cmp
push
adc
stos
gs
popf
shrb
or
outsb
popa
mov
adc
repz
cmpsb
in
sbb
hlt
call
cld
jnp
mov
sub
fs
aas
call
add
fwait
push
sbb
cmpsb
pop
xor
jae
push
mov
repz
fdivrl
push
or
mov
fisttpll
jno
pushf
insb
gs
cmp
mov
mov
faddl
jge
shlb
sub
lea
lds
mov
loopne
rcll
fldt
mov
fldcw
pop
mov
sbb
test
jge,pn
cld
call
lcall
push
adc
cmp
or
dec
imul
pop
adc
loope
pop
clc
stc
test
lods
or
xor
mov
xlat
pop
leave
fldcw
test
or
sbb
sub
mov
rorb
push
and
int3
mov
test
cmc
cwtl
sbb
ficoml
int
sub
test
imul
cs
and
pop
imul
cmp
jbe
sbb
dec
mov
mov
cmp
xchg
inc
jmp
cmp
pop
cmc
or
test
jb
inc
repz
lcall
imul
push
mov
orl
clc
xchg
mov
punpcklwd
stos
iret
jecxz
adc
pushf
test
add
ret
inc
aaa
mov
mov
pop
xor
adc
test
jmp
fcompl
mov
push
push
jge
or
stos
mov
push
mov
test
inc
sbb
sbb
xchg
hlt
dec
push
outsl
stos
mov
movsb
in
dec
fstpt
lds
cmp
shlb
sbb
fbld
int3
jp
and
add
movsl
in
xor
daa
loope
aaa
mov
sti
orl
lret
sub
test
ljmp
dec
rcr
call
ret
sub
es
jge
push
imul
jbe
std
jg
pop
mov
push
lods
mov
mov
xchg
addr16
adc
xor
mov
sbb
push
mov
xor
or
in
cmpb
jp
in
adc
cld
push
popf
xchg
add
add
ficoms
xor
addr16
pop
stos
xor
cmpsb
sbb
pop
rorb
lods
ds
ljmp
xor
shlb
out
leave
mov
inc
sub
dec
sahf
stos
mov
and
aaa
cmp
insb
lock
jge
popf
mov
lea
mov
adc
adc
mov
and
cli
mov
lahf
loope
mov
fsubr
outsl
pop
lret
and
dec
or
cmp
neg
push
in
xor
test
into
or
sub
addr16
mov
imul
loop
mov
inc
adc
jo
fldt
cmp
pop
imul
fistpll
rolb
leave
mov
lret
gs
lret
in
dec
mov
cwtl
sub
pop
hlt
in
lret
cld
fs
cmpsl
out
and
adc
mov
hlt
push
mov
inc
push
mov
and
daa
and
test
add
add
aam
add
and
add
fldlg2
jl
cmpsl
nop
repz
hlt
int3
cwtl
iret
sbb
xlat
ljmp
push
pop
inc
in
or
mov
fidivrl
jno,pn
xchg
in
icebp
xchg
scas
roll
jo
or
mov
psubsw
popa
aam
sub
in
shlb
mov
fildl
cli
cld
inc
fisubl
push
or
dec
rcrb
fwait
adc
pop
adc
inc
adc
shlb
aad
cltd
xor
cltd
dec
and
loopne
fdiv
bound
jb
and
inc
push
inc
dec
fabs
pop
movl
js
aaa
idivb
jge
cmp
aam
add
mov
jmp
and
push
mov
scas
jnp
push
mov
scas
fistl
mov
push
movsl
push
mov
inc
sub
push
loop
idivb
and
xor
xchg
fs
ss
mov
lret
xchg
add
inc
xchg
into
lcall
int
inc
pop
scas
push
leave
xorb
sub
or
pushf
fbld
stos
shrb
mov
inc
stos
inc
aam
adc
jg
adc
mov
out
mov
lods
sti
cmc
popf
mov
dec
or
sub
add
stos
jne
mov
push
movsl
dec
dec
add
aaa
jg
aam
aam
dec
sbb
icebp
in
stc
inc
cmp
push
cmp
push
mov
sbb
jl
aam
ljmp
js
push
inc
loope
icebp
je
or
push
test
mov
adcb
dec
push
fwait
fs
pop
fs
add
mov
jnp
andl
clc
mov
out
inc
cmp
in
sbb
lret
xchg
adc
sub
sub
testb
cli
nop
cmp
movsb
mov
call
xlat
sbb
jnp
and
xchg
sbb
sub
and
test
mov
adc
mov
incb
xor
jae
rclb
add
int3
mov
add
shl
cmp
pop
les
sti
in
out
movsb
movsl
cmovnp
outsb
sub
sbb
fcmovb
pop
lret
jmp
adc
popa
mov
aas
jg
sub
in
jne
mov
push
js
mov
xor
fdivl
lea
xchg
out
jmp
mov
mov
cld
jge
sbb
lds
and
xor
xlat
lds
outsb
inc
loopne
and
int3
add
imul
jmp
adc
xor
push
sbb
cmp
jne
test
dec
mov
xchg
test
mov
inc
push
std
stc
lret
rclb
mov
dec
dec
scas
int
scas
jg
push
dec
in
sahf
cmpsl
fcomps
xchg
jl
or
loop
jne
adc
push
or
inc
mov
or
cwtl
cld
push
out
sbb
pusha
loop
call
mov
push
jp
xchg
sub
cs
inc
in
test
in
mov
std
cmpsl
jecxz
inc
loopne
call
push
jb
xchg
pop
mov
ljmp
or
mov
stos
mov
stc
lods
xchg
fbstp
imull
cmp
add
and
and
mov
cmpsb
loope
test
loopne
clc
sbb
mov
ja
lahf
inc
les
push
test
repnz
jo
push
mov
adc
dec
shll
lds
repz
add
inc
lods
in
jg
pop
daa
ret
popa
leave
cltd
add
xor
enter
aaa
pop
lret
mov
fldcw
push
xor
loope
scas
inc
xlat
lods
add
jnp
loop
add
sbb
inc
pop
mov
xor
xchg
adc
mov
cmc
or
push
mov
inc
imul
xchg
insl
mov
loopne
adc
das
push
stc
notb
mov
ja
mov
dec
imul
shll
pop
jg
dec
mov
mov
les
pop
adc
mov
sub
rolb
sbb
clc
ficoml
sbb
stos
in
mov
fistps
mov
test
cmc
mov
xchg
xorl
dec
xlat
push
jg
insb
sarb
sbb
cld
sbbl
mov
es
xor
lods
es
clc
int
xor
sahf
popf
adc
mov
jnp
push
sbb
cs
and
pop
jb
test
xchg
in
loop
and
lds
les
aam
pop
pop
cmp
jbe
sahf
lret
je
mov
out
xor
inc
inc
stc
insl
push
cli
fnstsw
test
daa
and
cld
cli
mov
pop
popa
in
in
sbb
dec
sahf
cmp
pop
mov
mov
cmpsl
xchg
add
fidivl
ret
lds
sbb
fucom
dec
pop
cs
mov
rcll
xor
inc
mov
lock
mov
inc
repnz
jg
mov
sub
mov
xchg
sub
or
rolb
fiaddl
xchg
inc
ds
loop
or
add
call
movsb
lds
outsw
aaa
jle
mov
inc
jp
jbe
rclb
jae
mov
inc
lods
iret
xor
or
jle
pushf
ja
lret
insl
repnz
inc
push
sti
mov
iret
sbb
lret
cmpsb
cmp
push
retw
sbbb
dec
cld
add
mov
cmpsl
xchg
pusha
aaa
out
das
add
sti
dec
and
jo
xor
adc
les
xchg
mov
push
movsl
fistpll
sbb
aam
jb
push
ficompl
test
in
pop
jecxz
out
inc
or
les
jno
mov
movsb
ss
popf
add
sbb
bound
or
jbe
cmp
sub
fistpl
mov
cmp
pop
outsl
pop
xor
xor
arpl
cwtl
sub
mov
cmp
leave
mov
sti
out
inc
in
sub
push
xlat
gs
popa
xchg
fwait
sub
mov
sbb
adcb
pop
cld
aas
dec
fildll
addl
pop
cwtl
cmp
jbe
mov
cmp
ret
jbe
dec
jnp
es
insb
and
mov
movsb
add
js
and
fisubrl
add
add
mov
popa
add
popa
fwait
outsb
jae
cs
dec
fisubrs
mov
aad
sub
push
adc
pop
xchg
xchg
xor
lods
icebp
mov
and
aad
in
iret
out
push
notb
mov
das
ja
pop
mov
popa
push
stos
test
mov
in
sub
bound
dec
test
cmpsb
mov
pop
gs
mov
mov
mov
outsb
sbb
mov
cmp
and
idivl
int3
rcrl
push
adc
jg
mov
int3
addr16
dec
out
adc
xchg
ja
xchg
xchg
add
fnsave
lea
stos
std
sbb
xlat
xchg
clc
stc
movsl
imull
dec
fcoms
loopne
loop
loopne
gs
jae
flds
jmp
jecxz
push
lret
inc
in
inc
cltd
mov
cwtl
gs
xorl
ds
test
movsl
jl
dec
clc
ds
sub
outsb
popf
sbb
popf
std
mov
jae,pn
int3
rcrl
inc
mov
scas
stos
pop
adc
lcall
outsl
andb
scas
xchg
movsb
in
outsb
jne
out
cmp
lods
cmc
sub
fucomip
xchg
insb
lods
cmp
jg
pop
xor
sbb
mov
add
mov
addr16
fcomp
or
sbb
lods
fdivl
addr16
mov
adc
mov
xchg
arpl
lock
jno
in
loop
sbb
lea
jmp
fcoml
int3
add
mov
jg
test
adc
dec
sar
pop
popa
adc
aas
out
stos
xor
push
add
cmp
out
cwtl
sahf
push
mov
fnstsw
loope
inc
cwtl
arpl
int3
mov
cmp
iret
push
push
bound
mov
test
ja
sbb
xor
push
fwait
cmp
ret
xchg
mov
test
mov
push
aam
jo
pop
push
or
in
shll
nop
cli
xchg
sub
nop
movsl
xchg
aas
enter
mov
mov
jns
cltd
push
or
icebp
rorb
add
xor
inc
aas
cmp
xchg
out
addr16
add
sbb
mov
fwait
stos
lods
jo
dec
push
mov
bound
pop
cmp
dec
into
xor
mov
lcall
or
sbb
into
push
pop
aam
xor
adc
mov
jg
jbe
jmp
cmp
clc
add
fldt
test
test
xor
ret
pop
mulb
jno
push
mov
std
jecxz
mov
test
pop
ja
jecxz
push
add
popf
lcall
out
out
add
push
mov
gs
lea
fdivs
push
div
pop
xor
inc
movsl
lock
fwait
leave
add
insb
mov
push
ret
cmpxchg8b
xchg
aaa
xor
cmpsb
and
and
push
xchg
push
jo
gs
or
popf
mov
jb
jb
cmp
push
cltd
add
dec
jmp
sub
jg
cmp
hlt
pop
jl
adc
mov
push
inc
pop
std
lret
or
fidivrs
dec
sbb
pop
aad
xchg
movsl
movsl
rorl
mov
pop
rcll
das
push
mov
and
and
lret
mull
ja
cmc
adc
sbb
fimuls
mov
push
fisttps
das
addr16
mov
fistps
dec
es
sbb
xchg
movl
sbb
sbb
push
fwait
sbb
inc
hlt
or
ja
mov
xor
xchg
cmp
lcall
sbb
sbb
jg
in
addl
inc
enter
les
mov
inc
ja
mov
rcrl
inc
lret
lahf
shll
xor
fisubs
es
cmp
out
mov
pushf
mov
add
mov
insl
mov
pop
lahf
aam
fwait
cmp
ret
lahf
push
outsb
aad
fcmovne
jbe
xchg
notl
enter
or
ljmp
ficompl
inc
scas
fdivrp
push
mov
xor
dec
or
test
leave
dec
les
rcrb
or
inc
addl
aam
sbb
mov
or
cmp
cmp
test
adc
mov
ljmp
inc
or
imul
mov
rorl
jns
idivb
insb
or
sub
lds
jo
ljmp
mov
shrb
pop
lods
xchg
push
scas
in
xchg
and
pop
push
xor
xorl
rorb
test
xor
cmp
dec
cltd
std
shlb
das
sub
pop
sub
aaa
popa
in
xchg
inc
andb
sbb
pop
idivl
jl
test
iret
mov
push
sbb
mov
xchg
jge
jbe
insl
xchg
mov
push
sbb
notb
dec
iret
fnsave
stos
cmp
mov
jno
jg
mov
mov
sub
stos
out
ljmp
cmp
jne
test
mov
sub
lea
ljmp
mov
pop
mov
das
in
dec
mov
cmp
pop
mov
mov
in
dec
cmc
xor
sbb
sbb
imull
outsl
inc
add
jb
mov
mov
and
out
dec
or
insb
out
xor
xor
or
sahf
jg
pop
imul
popf
xchg
jbe
sbb
fwait
jnp
sti
jle
pusha
out
lret
hlt
cmp
mov
or
xchg
cltd
xchg
cld
inc
mov
stos
mov
jmp
test
lods
mov
jp
imul
fldenv
pop
xchg
shl
cli
addr16
test
add
lcall
jge
pop
ja
xchg
cmp
push
popa
push
fimuls
mov
popa
jbe
pusha
xorb
mov
and
push
daa
ret
sub
inc
lahf
push
or
mov
popf
xchg
cmp
fistpll
dec
xor
lret
imul
shlb
xor
nop
sub
sub
inc
xchg
xorl
xor
sbb
int
pop
add
notl
test
int
cs
push
xor
mov
shl
fcmovnu
dec
mov
sbb
mov
cmp
sbb
sahf
or
out
cmpsl
push
push
xor
and
sub
imul
shlb
fmuls
fists
push
mov
aad
jg
push
roll
jo
scas
lcall
int3
inc
mov
ja
jns
lret
or
push
jle
gs
or
arpl
test
das
ljmp
stos
pop
pop
aas
jmp
cli
add
dec
sahf
lahf
out
mov
int3
inc
mov
stos
dec
jle
inc
ret
imul
dec
mov
sbb
inc
jns
push
adc
jmp
ja
scas
xor
cltd
ljmp
or
mov
cli
push
adc
adc
lods
sti
cmp
int3
mov
aaa
outsl
test
pop
pop
andb
shlb
ret
in
out
cld
sbb
push
or
sti
jb
push
push
iret
int3
in
jmp
and
arpl
aas
mov
shll
adc
push
and
sbb
jmp
lcall
and
mov
jae
cld
add
std
negb
out
loop
mov
mov
jmp
xor
mov
xchg
adc
cmp
mov
rorl
or
mov
into
ljmp
cmc
mov
mov
dec
pop
aad
or
mov
jne
pop
in
xchg
mov
sbb
push
pusha
jb
cmpsb
xor
enter
or
arpl
pusha
jl
pop
andb
adc
fcoml
icebp
dec
xlat
js
adc
and
jl
dec
out
subl
xor
daa
into
jg
ja
xor
push
pop
icebp
or
call
out
sbb
call
push
mov
test
in
xchg
sbbl
loop
divb
xchg
and
push
mov
fwait
jno
mov
sbb
adc
shld
sub
push
jns
sub
inc
cld
cmp
scas
into
jne
adc
push
call
push
fistpll
shlb
and
aas
leave
lcall
decb
testb
jle
shrb
or
cmc
cmc
subl
mov
movsl
cmc
ja
filds
xchg
sti
or
and
repnz
je
jns
push
arpl
sub
popf
es
pushf
arpl
adc
push
lods
xchg
mov
fbld
xor
dec
mov
sahf
mov
jno
scas
lock
mov
out
pusha
shll
dec
ror
out
and
adc
mov
sbb
or
inc
cmp
ret
mov
mov
jle
arpl
inc
shll
sub
sub
push
into
mov
out
add
inc
decb
or
sbb
mov
push
lahf
stc
adc
dec
std
popa
loope
cli
int3
jno
lret
adc
lock
loopne
addb
ds
mov
stos
mov
or
jmp
ret
jnp
les
mov
jae
shlb
mov
mov
into
cmp
xor
or
cmpsl
scas
rolb
pushf
pop
js
xor
jno
ljmp
stc
xchg
inc
lock
inc
mov
jmp
daa
test
push
pop
inc
in
xchg
fdiv
sub
jl
js
imul
adc
sbb
aaa
mov
rcrb
fidivrl
or
in
mov
movsb
or
dec
imul
jnp
cmp
fnstcw
ret
fsubrl
push
pop
cmpsb
cli
cmp
mov
sub
rol
fildl
cld
insl
inc
fisttpll
iret
cmpsl
loope
inc
jae
rorl
icebp
push
js
sub
loope
dec
bound
imul
pop
lock
xlat
mov
mov
sub
xchg
in
out
dec
cmp
inc
rorl
insb
mov
mov
fiaddl
or
test
and
cmp
fwait
pop
enter
xor
mov
xchg
mov
or
or
sbb
mov
inc
push
movsb
addr16
stos
push
stc
lea
lock
inc
xchg
xchg
or
repz
lods
sub
sub
paddw
adc
inc
and
inc
xchg
adc
sub
mov
stc
lods
loop
mov
push
push
in
loopne
lock
push
sti
mov
lea
pop
pusha
xor
cli
insl
sahf
jle
int
push
mov
in
cmp
push
out
add
inc
lods
and
or
push
pop
adc
lret
or
sbb
popf
int
and
or
push
js
in
add
xchg
adc
dec
sahf
pop
outsb
pop
mov
test
and
ret
sti
popf
mov
mov
and
and
outsl
aad
pop
and
subl
std
call
cmp
stc
mov
sti
push
mov
mov
pop
fldenv
or
insl
outsb
mov
lcall
loopne
lds
shll
push
mov
adc
pop
loop
mov
int
inc
jge
mov
add
sbb
test
or
sbb
inc
jge
dec
mov
stos
inc
cmpsb
jo
out
mov
pop
mov
loopne
push
in
fisttpl
insb
addr16
sti
cmp
movsb
mov
dec
js
mov
inc
push
sbb
mov
or
cltd
repnz
testl
fprem
mov
sub
les
sbb
test
dec
jecxz
lock
adc
mov
int
out
cltd
leave
sbbb
dec
dec
aam
loopne
push
and
dec
stos
xchg
nop
cmpsb
lret
add
pusha
adc
sub
cmc
and
sahf
notb
jg
cmp
pop
into
inc
out
outsb
push
imul
cmp
rcl
fs
fidivrs
jmp
jbe
test
xchg
bound
ss
jecxz
cmpsb
push
loop
int
pushf
rcrb
fsubrp
mov
cmp
int
bound
add
scas
stos
lds
mov
outsb
sbb
sub
fimull
aas
add
rolb
imul
sub
mov
jae
adc
mov
nop
dec
ds
pop
ljmp
lret
lock
xor
sarb
leave
jae
ret
dec
out
push
push
pop
pop
jmp
xor
jo
cmp
out
push
inc
jle
outsb
imul
xor
out
dec
push
push
fcmovu
loopne
in
daa
xor
outsl
cmp
and
adc
pop
enter
mov
ss
add
sbb
imul
fwait
xor
push
pushf
repnz
sar
decb
mov
xchg
fbld
xchg
dec
xchg
rcrl
out
rol
xor
aad
clc
fimull
jne
sbb
data16
ret
mov
add
sub
jae
fwait
add
xor
cwtl
fnstcw
inc
out
cmp
sbb
jp
pop
ljmp
shlb
es
in
mov
fdivs
sarb
sbbb
xor
cltd
jbe
push
out
inc
popl
int3
or
ljmp
pop
mov
movsl
movsb
pop
in
adc
xor
jno
clc
aaa
pop
push
int
inc
loopne
lret
fistpll
and
jecxz
fstl
pop
inc
push
sbb
fstps
or
dec
cltd
xchg
insl
les
in
fsubr
xor
xchg
shll
mov
sub
in
push
mov
sar
dec
sbb
dec
mov
dec
neg
popa
out
mov
push
int3
fmul
pop
push
ss
xlat
xchg
mov
imul
dec
dec
outsl
xlat
mov
pop
xor
add
fstpl
rcrl
outsb
mov
fdiv
lret
cmp
sbb
pop
jecxz
stc
mov
adc
cs
ret
ljmp
lret
pop
rclb
call
pushf
sbb
inc
leave
mov
pusha
leave
loopne
pop
dec
mov
xor
jne
stos
call
bound
dec
and
mov
int3
dec
pop
imul
xlat
sbb
mov
lahf
fcompl
or
js
inc
jl
mov
cmp
mov
negb
push
js
repnz
stc
sbb
mov
int3
out
mov
aad
add
and
mov
jmp
jne
mov
test
adc
xor
out
shrl
testl
and
and
test
push
std
mov
xor
ss
pop
enter
in
jge,pt
int
aas
inc
lock
sbb
xor
mov
add
cmp
mov
fisttpl
dec
mov
addr16
pusha
jmp
in
jno
add
repnz
and
cmpsb
clc
mov
sub
cld
mov
rorl
dec
cmp
adc
mov
mov
sbb
jmp
cmpsb
add
gs
jae
shrb
in
lahf
fistl
cmpl
stos
jmp
sarl
loope
adc
jle
and
stos
inc
mov
fcompl
sahf
outsl
ljmp
cmpsl
mov
xlat
cltd
test
test
sarb
dec
push
sub
setbe
shlb
andl
mov
jg
call
dec
sub
or
and
push
sbb
js
cmp
insw
xchg
enter
add
mov
jecxz
cmp
fidivrs
or
sub
or
repnz
imul
popf
xor
push
in
jnp
mov
lds
mov
push
andl
jecxz
sbb
testl
lret
sahf
shr
mov
xor
cltd
mov
or
jns
lcall
push
nop
mov
sub
popa
cmpsb
mov
cmpsb
lea
xor
cmp
adc
mov
loop
addl
jp
in
push
dec
sahf
pop
cmp
xor
cmp
stos
mov
lods
stos
cmpsw
ljmp
movsb
pop
cmc
dec
xchg
mov
xchg
lods
jne
xchg
in
sbb
ss
jmp
pop
xchg
mov
imulb
push
addr16
sbb
test
or
insl
enter
ljmp
sub
ss
xchg
lods
flds
adc
lock
inc
sbb
mov
push
hlt
mov
lock
stos
incb
stos
add
lods
mov
pop
test
clc
int3
pop
into
pop
pop
pop
add
xchg
pop
push
mov
fldl
int3
stc
xchg
mov
add
lcall
mov
vcvtsi2sd
sbb
pop
mov
add
mov
sub
xor
pop
loop
das
insb
stos
iret
mov
cmp
add
ret
scas
loopne
mov
dec
push
andl
imul
icebp
imul
in
fidivs
xchg
adc
or
inc
sub
pop
sbb
push
pop
out
mov
xor
scas
and
jne
or
xchg
add
add
adc
mov
mov
movsl
les
dec
idivl
mov
add
jp
push
loope
push
jp
shlb
pop
dec
arpl
test
or
stos
dec
iret
jge
xor
jge
sub
sbb
add
push
jmp
cmp
push
xrelease
adc
pop
adc
mov
fists
call
or
scas
sbbb
daa
call
loopne
lea
fcomi
push
inc
add
out
jbe
mov
xchg
imul
push
dec
sub
jle
pop
adc
push
sbb
mov
add
push
sbb
mov
jb
jmp
pop
add
push
fistpll
lahf
shlb
sub
shll
jmp
xor
pop
lods
push
inc
mov
cmp
adc
mov
push
out
sub
pop
mov
sbb
rcrb
xor
pop
mov
add
jge
mov
inc
mov
data16
sbb
push
xor
mov
inc
xchg
jb
div
jae
xlat
divl
inc
das
pop
pop
shrb
sub
arpl
leave
jns
lock
dec
rcrb
adc
jnp
adc
jbe
je
sbb
cmp
xor
and
or
or
in
lock
fisttps
push
leave
xchg
adc
or
jp
inc
lret
xchg
mov
out
lahf
jno
fwait
jp
cmp
lods
mulw
mov
test
repz
inc
das
mov
push
xor
test
iret
push
stos
pop
scas
lock
aaa
jnp
incl
cltd
inc
lahf
mov
pop
das
pop
mov
jg
ja
outsb
fsubl
fucomip
je
cmp
jno
inc
jae
lea
sbb
je
std
mov
ffree
mov
aad
divb
and
add
stos
push
outsb
out
mov
loopne
push
fcomps
daa
iret
xor
xchg
test
in
sub
out
lods
and
mov
xlat
pop
jge
inc
pop
mov
shlb
jo
stos
dec
outsl
popa
jb
pop
gs
mov
mov
adc
mov
jg
pusha
test
jne
pop
hlt
xchg
add
sbb
imul
loop
mov
andl
mov
push
sbb
outsb
enter
fdivl
in
fdivrs
lahf
add
mov
enter
hlt
cmpsb
xor
or
xchg
xchg
in
dec
and
fcmovne
faddl
ficoms
fstl
out
and
orb
dec
outsl
jb
in
jae
pop
lret
arpl
dec
or
call
mov
outsb
inc
sbb
inc
mov
mov
xor
inc
pop
sub
lea
adc
jl
cltd
sarb
add
aad
cmc
aaa
dec
xchg
cmpb
mov
in
movsl
inc
rol
in
push
pushl
jle
jmp
ret
cmp
popl
lret
clc
xor
mov
inc
or
mov
adc
fs
jmp
lea
shl
lock
and
jb
jle
lods
push
sub
mov
test
mov
push
fs
xlat
mov
jo
xor
inc
fwait
sub
or
daa
and
or
jae
xor
inc
rorb
mov
xorl
xchg
test
ret
dec
pop
dec
add
in
xor
jnp
mov
jb
jecxz
outsb
dec
or
push
xchg
int
pusha
pop
mov
sbb
inc
cli
cld
bound
inc
jne
add
popf
nop
out
mov
dec
icebp
or
bnd
out
jl
xchg
dec
dec
xorb
push
push
fwait
loope
and
mov
gs
subb
insb
imulb
test
xlat
jne
cld
add
mov
mov
into
cmp
cli
mov
jg
das
push
bound
xchg
jno
inc
jne
aad
repnz
lods
xchg
mov
arpl
int
and
or
sub
fsubrs
stc
jb
sub
push
rorb
in
je
movsb
rolb
mov
lods
jae
mov
xchg
cmp
or
insb
les
mov
sbb
pop
jmp
iret
push
enter
sub
pop
sub
mov
fbstp
lcall
mov
sbb
pop
pop
idivb
cmp
jb
sub
inc
dec
pop
pop
fiadds
cmp
adcl
out
fwait
divb
fmulp
repz
into
imul
jle
xchg
mov
pop
loopne
push
enter
add
mov
xchg
mov
fwait
jecxz
out
test
clc
jl
negb
out
pusha
push
inc
scas
lea
insb
pop
ja
jno
xor
mov
cld
fcomi
pop
in
inc
in
outsl
lcall
pop
pop
lock
lea
add
test
add
jnp
pop
xchg
stos
mov
pop
jecxz
test
inc
jns
aaa
repz
mov
cs
gs
mov
nop
std
pushf
lret
adc
inc
add
cmp
mov
inc
std
jge
stc
adc
ljmp
aaa
cmovg
mov
xlat
loope
mulb
mov
mov
das
lods
addr16
repnz
stos
dec
adc
inc
fldenv
and
pop
cmpsl
add
test
mov
clc
or
sbb
mov
insl
test
ficoms
xor
xor
xchg
push
lahf
jmp
xor
jbe
fimuls
jnp
cmp
sbb
sub
iret
adc
sub
xchg
rorb
pop
lret
ja
inc
inc
call
mov
test
dec
test
outsb
mov
cmp
aad
fidivs
addl
push
or
insl
mov
or
fiaddl
xchg
ret
mov
ljmp
in
push
jp
xor
mov
ja
mov
cmp
fwait
xchg
xor
sbb
movsl
push
sub
xor
lods
imul
mov
mov
test
sbb
out
lods
dec
or
hlt
push
pop
jle
leave
push
add
add
test
stc
cltd
xor
jno
xor
subl
aam
daa
xchg
scas
jmp
mov
cmc
imul
mov
push
inc
insl
mov
mov
adc
movsl
aas
loop
cli
inc
call
andl
add
and
sti
mov
add
cmp
and
lea
mov
cmpb
in
popf
ja
or
inc
cltd
bndldx
mov
lods
stos
xchg
stos
inc
out
sub
pop
pop
adc
orb
fcmovne
std
addb
xor
xchg
and
fsubr
jno
adc
bound
movb
and
shlb
sbb
sub
jmp
inc
mov
fnclex
push
jp
cmpsb
fcoms
dec
ss
push
xlat
lock
mov
pop
jl
jg
and
rorl
push
outsl
jmp
insb
es
gs
nop
xchg
cs
add
sub
or
inc
leave
cmp
ljmp
into
outsb
pop
fildll
jae
jp
lret
shrl
lods
arpl
out
push
or
lret
int
fyl2x
dec
pop
lock
sbb
inc
push
mov
xor
dec
cmc
nop
xchg
inc
fisubs
inc
ss
or
add
and
mov
pop
add
cmpb
pop
cmp
mov
imul
pop
rcl
adc
fbld
les
fmull
cld
rorl
lods
xor
mov
test
pop
cli
adc
mov
jle
test
jno
out
adc
cmpsl
mov
mov
and
jbe
dec
xor
and
pop
repz
pushl
dec
gs
mov
sub
dec
gs
lea
cmpsw
add
movsb
and
and
cmp
aad
cmp
mov
scas
call
or
sbb
mov
adc
test
es
xchg
fwait
divl
sbb
sub
repz
push
cmp
into
adc
loope
movl
mov
sti
push
aam
shll
or
jb
arpl
pop
lock
mov
or
push
test
icebp
or
aaa
xchg
jb
clc
push
lcall
cmp
inc
movsb
insl
outsl
notl
dec
dec
fdivl
addl
push
lea
mov
xchg
imul
ss
loopne
pop
xchg
inc
adc
lret
test
clc
lret
push
or
push
push
mov
or
cltd
jne
cmp
arpl
xor
ret
sbb
idivb
or
mov
fnstcw
es
jbe
testl
stos
sub
and
jno
orb
cs
out
dec
lods
mov
pop
push
dec
fwait
subb
cltd
adc
mov
shr
mov
ljmp
xor
sarb
and
mov
in
jo
es
sbb
jns
pop
xchg
lcall
mov
mov
movsb
pop
divb
push
clc
jmp
cmp
out
jmp
inc
fstl
xorl
or
xchg
jle
cs
sbb
dec
or
cmpsl
xchg
fstl
loopne
scas
mov
or
hlt
add
pop
imul
test
jo
out
call
add
inc
stos
mov
scas
jmp
into
mov
mov
lret
les
sub
xorl
scas
orl
push
jns
sbb
inc
int3
xor
repz
pop
es
mov
insl
imul
jmp
scas
mov
add
dec
pop
fildll
xor
sbb
mov
mov
mov
add
mov
mov
cmp
xlat
push
andl
popa
mov
mov
aam
out
add
data16
pop
sbb
loop
mov
mov
shrl
cwtl
in
lds
repnz
xchg
negb
mov
or
inc
push
shl
inc
cmpsl
test
hlt
or
sub
sti
jb
aaa
pop
fsubrs
inc
adc
nop
popf
or
ficoms
jmp
mov
adc
aas
aad
push
rolb
sub
push
dec
or
cmpsb
outsb
add
mov
cmpsl
leave
sbb
cmp
jbe
mov
add
sti
ret
jns
sbb
popa
pop
ss
das
imull
inc
push
pop
push
test
add
hlt
ljmp
mov
fsts
fisttpll
dec
mov
inc
xchg
mov
jno
sahf
das
inc
cmpb
loopne
jmp
sahf
out
orb
inc
lods
aaa
das
xor
jne
xor
mov
dec
imul
cmpl
insl
inc
pushl
inc
adc
lods
enter
xchg
fsubs
andb
flds
adc
orb
pop
sub
xor
adc
xchg
sub
jge
icebp
add
adc
or
push
push
aas
movl
mov
pop
out
push
ja
mov
dec
ljmp
inc
adc
out
sbb
sbb
pop
and
sub
std
jecxz
jmp
inc
sbb
clc
jcxz
sbb
mov
cmpsl
mov
ret
jnp
inc
mov
mov
jle
dec
xor
push
push
in
out
mov
mov
jl
stos
xor
pop
pushf
sub
lahf
fwait
cwtl
jnp
sbbl
mov
pop
hlt
push
adc
dec
lcall
call
xor
push
cmp
jmp
pop
add
add
jo
sub
mov
jl
xor
scas
jg
sti
xchg
or
insb
test
dec
ret
mov
jo
test
add
lret
ret
fcompl
push
and
jle
lcall
gs
outsl
adc
arpl
in
mov
lret
int
push
inc
lds
lret
xor
jle
dec
mov
dec
push
dec
fmull
out
cmp
fsubrl
xor
cli
pop
insb
int
in
fldcw
sarb
movsb
stos
std
fidivs
dec
aaa
xchg
xchg
je
mov
xlat
adc
jmp
sbb
pop
adc
sbb
insb
lcall
xchg
lods
dec
and
dec
sahf
stc
aam
jp
push
jp
jne,pt
leave
jae
testb
ret
xchg
xchg
fs
lret
xor
xchg
mov
pop
adc
pop
popf
sbb
es
xchg
or
pop
aad
and
mov
or
sbb
pop
lods
adc
loopne
hlt
movsb
lahf
fs
js
add
movsb
mov
push
inc
mov
cmp
fldcw
outsb
sub
inc
or
jl
dec
sub
mov
adc
jne
jmp
jno
lcall
xor
loop
rorl
sbb
mov
bound
pop
and
ja
add
shlb
jge
sbb
dec
jl
les
out
roll
dec
cmp
sahf
lds
xor
xchg
sub
testl
xor
dec
in
and
mov
fidivs
dec
cmpsl
nop
stos
push
and
loop
enter
mov
imul
and
arpl
aam
enter
scas
sub
xchg
addr16
ffree
mov
xchg
jl
xor
pop
in
stc
in
test
xchg
cmpsl
mov
pop
mov
mov
lea
idiv
fimuls
in
cmpb
xchg
out
cld
adcb
xor
lock
in
cmp
or
sahf
cmp
jle
clc
movsb
imul
negb
and
in
cmp
push
push
push
aam
imul
call
shll
and
gs
cmp
mov
jns
std
lahf
xor
das
pop
sub
sbb
subb
lea
sub
xchg
dec
test
or
cmpl
fisubrl
ja
sbb
rcrb
xlat
jbe
fildll
mov
push
rcrl
adc
lds
cmp
lcall
hlt
enter
or
pop
cmp
or
pop
and
test
jns
or
hlt
dec
bound
mov
dec
loop
repnz
jg
mov
dec
iret
int
dec
fsubrl
call
cmovbe
and
jp
xlat
outsl
jg
daa
mov
iret
cli
ja
dec
xor
inc
lret
enter
ja
add
add
ret
lret
sub
cltd
in
sub
iret
sbb
in
pushf
push
push
push
sbb
out
dec
mov
push
sti
cwtl
dec
mov
es
mov
mov
out
test
dec
and
mov
adc
adcb
sbb
incl
jns
mov
repnz
and
mov
mov
iret
sbb
mov
cmp
xlat
fmuls
adc
push
pop
jo
or
and
xchg
in
adc
jbe
sub
fnstsw
insl
push
out
jecxz
rcll
ret
xchg
es
pop
call
jne
movsl
ret
inc
mov
lea
mov
pop
push
pop
xor
xchg
sub
mov
xchg
sbb
dec
pusha
out
in
sbb
bound
sbb
push
imul
sbb
mov
inc
pop
pop
jbe
dec
or
dec
sbbl
addr16
lret
pop
out
xor
sarb
dec
jb
sbb
divb
sub
stos
aaa
dec
lods
aam
pop
push
fisubl
jno
decb
mov
in
icebp
pop
std
rcr
xchg
out
jb
push
fdivrs
xchg
adc
out
int3
pop
idiv
pop
inc
push
push
lahf
cmp
mul
jle,pt
adc
rcrl
inc
lea
adc
cmp
into
add
and
fisttpl
fisttpll
addr16
idivb
sub
or
adc
mov
orb
pushf
sbb
pop
ja
adc
pop
rorl
mov
cld
inc
jmpw
fcomps
xor
and
sbb
lahf
dec
jns
in
mov
mov
pop
push
pop
xor
insl
mov
addr16
cmpl
ja
xchg
loope
sbb
cmpsl
pop
and
aaa
fcmovu
lret
mov
push
insb
enter
fcoml
sbb
cld
ds
push
mov
adc
aaa
jge
stos
mov
or
or
mov
pushf
enter
leave
inc
stc
test
lods
add
xchg
ds
adc
jecxz
xlat
or
and
push
mov
dec
jae
mov
insl
adc
push
and
fwait
aam
in
ret
andl
jo
inc
mov
out
mov
bound
push
mov
orb
xor
and
adc
stos
or
ret
xorl
or
mov
sbb
pop
out
cltd
dec
add
lods
loopne
cwtl
popa
push
jecxz
mov
push
lods
in
and
hlt
lcall
scas
sahf
repnz
cli
push
xchg
jp
dec
sbb
stos
lock
bound
inc
sahf
test
push
lahf
lock
xlat
mov
filds
or
add
stos
push
popf
mov
sub
rcrb
loope
gs
leave
xchg
push
jae
mov
std
sub
into
orl
jge
xchg
mov
outsl
push
inc
rorl
aam
ss
adc
jg
push
xor
enter
inc
fdivrs
add
push
jge
pop
nop
jmp
vpaddusb
push
push
lods
push
lcall
cmpsl
push
mov
mov
arpl
mov
adc
sub
test
mov
push
gs
xchg
jmp
pmaddwd
loope
push
fmull
xlat
mov
cltd
popa
lods
cltd
dec
inc
popa
dec
add
mov
lock
or
cmpsb
push
xchg
dec
mov
or
or
stc
lods
insb
mov
xor
pop
stc
lahf
lods
test
xor
sti
mov
pop
sbb
push
xchg
xchg
adc
or
sti
mov
dec
int3
xor
mov
mov
test
pop
sub
push
enter
and
add
ffreep
sbbb
sbbl
fchs
jno
aad
loope
icebp
gs
lock
lret
cmp
sti
sub
jo
and
and
imul
in
out
adc
mov
ficomps
and
sub
setns
push
int
inc
xchg
mov
mov
mov
pop
cwtl
push
fcmovnbe
loop
test
jo
dec
mov
mov
cwtl
dec
scas
pop
pop
int
lahf
pop
cmp
inc
fdivrl
pusha
pop
icebp
test
jne
push
and
inc
mov
lea
or
xorl
in
ss
xor
inc
mov
pop
cld
mov
or
mov
and
rorb
nop
popa
and
and
mov
nop
mov
mov
aaa
push
insl
fldl
xchg
jnp
mov
jno
pop
testl
test
cld
push
lahf
xor
pushf
jle
xchg
outsl
xchg
xlat
inc
pop
xchg
mov
push
popa
rcrb
stc
inc
fcmovu
mov
in
lahf
inc
fidivl
push
jmp
xor
sub
outsb
daa
ss
mov
fidivrl
jg
mov
mov
jmp
mov
popf
xor
mov
sbb
xor
icebp
xor
xchg
dec
imul
push
int3
add
scas
das
ljmp
sub
fnstenv
rclb
or
inc
sbb
pop
push
mov
ret
mov
mov
fstpl
test
and
mov
add
or
aad
xlat
or
pop
dec
test
notb
lds
repz
shrl
adc
mov
in
push
mov
test
xorb
mov
sub
sarb
clc
inc
out
xchg
cmp
add
repnz
ret
mov
hlt
jne
xlat
lock
out
mov
imul
jmp
or
cmp
mov
int3
enter
loopne
lock
pusha
push
lods
jbe
pushl
push
dec
lods
movsl
pop
mov
jmp
out
adc
jb
addr16
cmp
mov
cmp
jmp
push
test
mov
daa
repnz
das
or
nop
adc
arpl
inc
cli
into
pop
push
repnz
mov
add
sbb
mov
mul
mov
outsb
jne
jmp
movsb
push
push
mov
jmp
and
cmc
pop
imul
repnz
mov
pop
stos
std
into
xor
outsl
mov
std
fdivs
aaa
rcll
mov
out
out
inc
data16
popf
adc
test
ljmp
mov
es
xchg
add
xor
cmp
mov
or
dec
out
jb
push
mov
jecxz
sub
ja
push
or
lock
xorb
adc
out
mov
sub
pop
sub
inc
inc
push
arpl
push
nop
incl
cmpsl
mov
dec
xchg
push
scas
rclb
cmp
nop
mov
dec
aam
mov
cld
xor
mov
lret
out
inc
fdivs
fistl
dec
inc
out
in
jg
jg
aas
cltd
jp
sbb
lods
xor
call
adc
sbb
subl
cmp
xchg
mov
xchg
push
or
push
xchg
pop
aam
mov
pop
mov
pop
test
pop
mov
mov
dec
jb
push
insl
cltd
ljmp
out
orb
jne
test
insb
or
iret
dec
ja
cmp
stc
movsl
les
and
cmovnp
dec
xor
add
jmp
inc
lahf
mov
inc
in
stos
fcomps
pop
mov
xor
stc
add
rorl
push
pop
push
fisubrs
ret
or
insb
xchg
cmp
dec
daa
mov
js
cwtl
scas
data16
fwait
cs
xlat
fsubrs
or
nop
aam
int
cmp
ror
cmp
push
mov
mov
rclb
sbb
sub
xchg
cltd
jbe
cmp
mov
add
sti
lahf
nop
out
xor
pop
inc
call
mov
adc
jns
dec
xor
out
sbb
adc
ficoml
cld
lahf
pop
cli
cmp
mov
in
cmp
xorl
dec
adc
jp
push
mov
sbb
enter
and
push
or
in
out
sbb
aam
fwait
mov
sbb
loopne
jp,pn
sub
mov
ljmp
fnstsw
fwait
and
sbb
movsl
add
xchg
int
lods
fistpl
aaa
ret
in
mov
cmp
roll
or
cmp
aam
xor
mov
sbb
and
dec
lods
sbb
mov
push
push
push
push
jb
pop
in
mov
scas
insl
adc
jl
push
out
add
mov
arpl
stc
cmc
sub
out
ja
out
push
dec
in
sahf
mov
outsl
add
mov
loope
stos
cld
and
outsb
jne
sbb
mov
int
cmp
js
xor
inc
rclb
pop
roll
inc
jnp
ficoms
adc
push
bound
es
leave
mov
add
outsb
lds
xchg
or
mov
mov
inc
and
sub
sahf
mov
jmp
lods
loopne
scas
xchg
fiadds
dec
mov
mov
pop
dec
scas
pop
daa
std
inc
and
inc
outsb
call
xchg
cmp
aas
movsl
sti
outsl
push
dec
adc
mov
add
fwait
insb
outsl
fistpl
mov
or
mov
sbb
loope
cmp
push
push
xchg
sub
mov
call
sbb
xchg
adc
sub
es
inc
add
pop
out
adc
pop
xor
cmpb
incl
negl
inc
loop
ret
in
sti
cmp
push
dec
in
loope
in
cmp
adc
mov
repz
mov
jg
insb
leave
sub
and
sbb
xchg
mov
add
popa
cs
in
jle
fldl2t
xchg
rorl
and
sarl
punpckhbw
hlt
mov
addr16
adc
inc
clc
subl
in
jne
cld
andl
js
mov
cmc
pop
push
test
in
pop
and
mov
add
dec
adc
sti
add
pop
add
das
out
push
jp
sti
ja
mov
mov
in
daa
cwtl
out
repnz
xlat
push
mov
sbb
mov
clc
mov
nop
adc
and
les
pusha
cwtl
cmpsb
jno
pop
inc
ljmp
fwait
xor
repnz
js
xor
adc
adc
sbb
sbb
jp
sti
imulb
mov
xchg
inc
hlt
in
cmp
fsubr
aad
and
insb
js
cltd
filds
jle
jg
xor
xlat
call
cmp
lods
xchg
fwait
xchg
idivb
sti
inc
aam
mov
jp
pop
jp
cmp
fimull
inc
push
fmul
arpl
adc
int
xor
hlt
jns
xchg
lea
jecxz
stos
or
fs
adc
or
les
pop
lret
adc
repnz
mov
aas
adc
cmpsl
loopne
and
push
adc
scas
push
mov
jo
cld
xchg
js
hlt
pop
sub
jl
and
in
out
cli
jo
rcr
ror
sub
mov
lock
out
adc
xlat
add
push
mov
test
repz
bound
xor
inc
mulb
nop
and
push
pop
or
cmp
insb
test
daa
dec
lods
mov
scas
push
nop
push
jmp
mov
pop
loopne
dec
mov
add
clc
xchg
sub
xor
pop
adc
push
mov
rol
sbb
add
popa
stos
mov
and
or
hlt
cmp
enter
test
jecxz
adcl
xchg
stc
and
in
scas
lock
push
mov
mov
iret
xor
sub
xchg
dec
fistpll
jmp
pop
or
lds
mov
es
loop
xor
ja
test
test
lret
inc
punpcklwd
jbe
inc
incl
push
mov
mov
mov
xchg
leave
int
adc
push
cmp
clc
or
ss
lods
mov
cmp
push
outsl
xchg
mov
jb
jp
icebp
and
insb
xor
xchg
pop
popa
sarb
in
lret
mov
jns
lret
mov
fs
push
rclb
jno
fldt
inc
rcrl
push
into
jmp
gs
adc
clc
sub
mov
inc
les
lods
ljmp
scas
repz
and
jmp
dec
adc
out
push
pop
dec
jbe
or
xchg
pop
mov
push
stc
inc
jmp
inc
outsb
inc
out
stos
stos
shl
lret
mov
or
xor
cmp
jle
dec
test
rorb
shll
cmpsb
push
leave
fistpll
mov
jo
or
shll
cmpsl
jp
push
cmp
add
dec
sbb
frstor
or
xchg
and
cmpsb
bound
jo
imul
sbb
inc
mov
add
mov
lock
das
and
mov
adc
pusha
fcmovu
or
nop
xor
jecxz
sub
adc
adc
pop
pusha
mov
sub
dec
fnstenv
call
stc
loop
mov
xlat
jecxz
jmp
lea
test
mov
xor
out
cmp
mov
dec
loope
dec
nop
lods
inc
fstpl
pop
mov
jp
or
ljmp
bound
pusha
push
xchg
inc
xchg
xor
popf
sahf
in
mov
and
enter
mov
test
lret
sbb
xor
out
push
out
arpl
pop
adc
call
inc
pop
cmp
and
int
pop
xchg
mov
into
mov
jmp
sub
outsb
testl
pusha
aas
push
inc
xchg
iret
mov
in
call
test
inc
cmp
mov
cs
cmc
mov
push
or
das
movsl
stos
lods
pop
out
es
xchg
push
sbb
xor
add
push
sbb
or
scas
insl
arpl
jb
lds
inc
gs
mov
cwtl
aaa
jl
imul
xchg
mov
pushf
cmpsb
dec
popf
enter
adc
inc
es
mov
cmp
and
xor
or
and
test
and
xor
cmp
test
mov
adc
inc
xor
cmp
add
mov
jge
mov
test
mov
insl
test
aas
push
sbb
btr
dec
xor
inc
out
inc
dec
dec
mov
dec
cld
mov
inc
sbb
lods
mov
mov
movsb
cmp
jo
sbb
pop
dec
lahf
mov
lret
pop
int3
add
fxch
bound
aaa
jle
inc
stos
xchg
pop
push
add
and
jo
in
jmp
test
inc
adc
add
xchg
mov
dec
inc
inc
fbld
dec
daa
push
mov
xor
pop
lods
loope
jae
mov
aad
test
imul
adc
movsl
jnp
jl
cmc
mov
in
xor
dec
mov
cmp
or
movsb
xorl
dec
mov
push
adc
mov
jns
lret
cmp
lds
or
xchg
mov
xor
aaa
and
jo
xlat
inc
out
ret
xor
shrb
sbb
xchg
gs
call
pushf
les
leave
rcll
icebp
ds
leave
xor
ret
std
insl
loope
and
jecxz
xchg
dec
push
aam
scas
cmp
jecxz
pop
xchg
insl
sub
ja
pushf
mov
xor
aaa
cmp
push
pop
aad
cmp
xor
aaa
shrl
adc
clc
dec
dec
and
push
mov
push
setne
and
push
into
cmpsl
xchg
mov
lods
mov
add
test
sbb
dec
arpl
fstps
and
and
inc
faddl
inc
xor
decb
test
cmp
nop
jo
ja
or
or
mov
pushf
and
pop
xor
push
rcll
or
fisttpl
into
int3
out
xchg
stos
add
jmp
cmp
mov
xchg
add
or
xor
jno
or
fsts
xchg
stc
lret
pushf
in
scas
jae
and
ljmp
popf
je
inc
addb
mov
das
xor
fwait
or
xchg
cmpsl
dec
movsl
sahf
scas
xchg
xchg
cs
bound
adc
jle
addl
mov
negl
xchg
jle
dec
addb
mov
decb
shll
jae
test
mov
inc
mov
xor
sbb
add
cmpsl
mov
xor
xchg
sbb
xchg
imul
outsb
push
jge
jae
jno
inc
aas
stos
stc
xor
dec
jmp
jmp
fdivrl
idivl
pop
or
pop
inc
test
test
test
std
push
sub
sub
test
inc
dec
leave
int3
mov
xor
jb
jle
pop
leave
div
jno
popa
inc
outsb
enter
mov
push
mov
lock
mov
xchg
dec
pop
sub
aad
addl
fwait
lret
push
mov
pop
scas
in
sbb
xor
jbe
push
mov
stc
jg
xor
and
addl
cmp
dec
icebp
hlt
mov
adc
mov
dec
idiv
adcb
stos
arpl
mov
xchg
inc
xchg
cli
xchg
fists
xchg
jo
or
outsb
xlat
out
pop
lret
pop
subl
rorl
insb
lods
dec
sti
pop
rorb
imul
mov
loop
push
pop
das
jnp
and
loop
jg
sub
adc
fdivrl
adcb
jno
fs
cs
pop
push
stos
pop
push
pusha
lods
imulb
ret
cwtl
inc
cld
xchg
cmp
mov
and
push
out
xchg
gs
sub
mov
fucom
adc
pop
ss
adcb
insb
xchg
in
popa
inc
sub
fmuls
sbb
sahf
dec
and
nop
xchg
pop
dec
cmp
popf
cmpsl
test
ret
outsl
dec
inc
ret
ja
push
and
dec
inc
jnp
push
movsl
xchg
call
dec
dec
in
ja
add
jmp
sbb
add
pushf
jbe
adc
mov
mov
testb
cld
jno
mov
int
lods
add
je
cwtl
pop
sub
icebp
dec
sub
orl
jl
sarl
push
push
jg
loop
push
mov
xor
jge
push
adc
push
inc
and
mov
or
mov
mov
testl
ss
mov
mov
cmp
xchg
out
or
dec
push
insb
sahf
xor
push
or
dec
pushw
cmpsl
xchg
movb
cmp
cld
jo
mov
fnstcw
mov
or
es
cmp
mov
and
fimuls
push
pusha
lret
jb
push
movsb
dec
aaa
adcl
in
leave
add
iret
pushf
loop
in
movsl
dec
sub
jne
pop
decb
aaa
ja
pop
hlt
pop
mov
cmc
dec
dec
sbb
mov
push
andb
stos
cs
shrb
cli
gs
jae
lock
mov
fdivl
sbb
aas
and
ljmp
xor
xor
pop
cli
gs
enter
call
fsubrs
xlat
dec
sti
lahf
xor
pop
or
mov
mov
paddsb
dec
rclb
or
sbb
outsb
fcom
sbb
push
sbb
ds
mov
outsb
mov
sub
mov
pushl
push
sbb
enter
pop
or
add
push
mov
popf
adcl
pop
sbb
mov
xchg
inc
or
xor
lea
sub
insl
leave
dec
or
loope
mov
jno
lods
divl
fildl
and
test
out
push
xor
addr16
imul
fdivl
xchg
nop
mov
rclb
add
out
pop
mov
dec
outsl
jecxz
scas
cwtl
xchg
pop
mov
dec
mov
aaa
add
sahf
arpl
xchg
in
imul
cmp
xchg
pop
shlb
or
xchg
lea
jbe
testl
sub
in
fs
ret
xor
sub
incl
or
mov
mov
mov
je
ret
cltd
sbb
scas
jne
and
fldenv
sbb
mov
in
sub
nop
adc
cmp
mov
inc
mov
ret
inc
xlat
sbb
cmp
stos
pop
and
sbb
lock
inc
pushf
jbe
data16
mov
inc
mov
and
outsl
call
imul
out
test
or
cld
into
xor
mov
pusha
fdivrs
cwtl
leave
jno
rorb
mov
subb
subl
jnp
cmp
test
in
enter
jl
mov
pop
push
movsb
shlb
inc
sub
xor
xchg
jg
xchg
lret
sub
or
sbb
scas
jno
pop
push
dec
mull
addr16
stos
addr16
jo
mov
jecxz
cld
inc
push
fwait
int3
push
xchg
jb
jae
and
sub
outsb
xor
jo
lar
icebp
jno
and
in
cltd
and
out
pusha
sarb
push
outsl
xchg
lock
test
pop
leave
gs
or
dec
test
xchg
or
insl
addl
mov
out
mov
fldcw
aas
aas
dec
fidivl
fidivrl
gs
dec
add
or
cmp
loopne
fnsave
ja
or
inc
fsub
inc
jge
inc
inc
xlat
scas
jae
cmp
cmp
aad
fnstsw
fistl
jecxz
dec
add
mov
add
mov
push
ds
lret
fpatan
sbb
dec
nop
pop
push
add
outsb
push
je
pop
cmp
jecxz
cmp
dec
stos
add
fistl
and
subl
xor
pop
sahf
mov
inc
in
xor
sub
pop
pop
xchg
sub
cmp
push
jge
stos
pop
std
pop
lock
pushf
bound
mov
imul
pop
jb
movsl
sub
sbb
adc
out
adc
xchg
dec
lcall
mov
out
and
andl
mov
push
aas
mov
cltd
xchg
das
push
lea
decb
add
nop
mov
inc
mov
sbb
lret
mov
mov
leave
icebp
sbb
repz
shlb
cld
jge
sarl
gs
icebp
xlat
xor
mov
mov
inc
lds
sub
cmpsl
sub
stos
push
dec
xor
jae
or
lea
js
sbb
dec
or
add
shl
daa
stos
xchg
jno
testb
cs
insl
imul
std
inc
push
std
les
cmc
les
daa
push
mov
leave
insl
sbb
loope
loopne
xchg
cmp
jo
fistpll
mov
xor
divb
dec
jbe
dec
movb
imul
addr16
in
or
xchg
mov
dec
dec
mov
sub
popa
das
dec
mov
in
jne
mov
mov
std
mov
cmp
jg
ja
adc
mov
cmpsl
dec
adc
push
leave
in
clc
dec
xchg
sub
and
and
mov
xchg
push
mov
adc
xor
pushf
test
ss
repz
mov
or
imul
cwtl
sarl
cmpb
push
and
andl
jb
repz
mov
mov
dec
into
stc
and
xlat
pop
test
push
push
mov
push
mov
mov
sbb
call
test
sub
pop
mov
lahf
jle
or
lret
cmpb
insl
pop
call
repz
or
in
scas
aad
push
movsl
sub
jae
pop
push
jae
sub
imul
andl
adc
xchg
mov
int3
mov
sbb
call
mov
xor
mov
in
adc
pop
adc
ljmp
fwait
ret
clc
loopne
iret
cmc
adcb
andb
cli
mov
push
je
jo
pop
mov
and
jo
mov
mov
int3
addb
sbb
ss
sti
out
xchg
pop
es
push
or
push
push
ljmp
cmpsb
addl
mov
sbb
fstpt
inc
jge
mov
jnp
fldl
cld
push
fmuls
inc
mov
leave
inc
xchg
push
js
or
mov
inc
clc
es
movsb
loopne
in
xor
pop
ljmp
loope
or
jb
push
jno
mov
jns
mov
lcall
cmpsb
shlb
jecxz
inc
sub
push
pause
fcoms
insb
out
push
fadd
xor
xchg
loop
inc
sbb
push
add
sbb
xor
js
jno
push
in
lret
mov
mov
aad
popa
out
mov
xchg
fists
outsl
addr16
out
je
inc
fsubr
and
and
dec
jecxz
nop
fsubr
mov
in
iret
xchg
je
sbb
cltd
fldcw
add
mov
jnp
jb
je
jae
sbb
mov
push
enter
divl
out
mov
add
cltd
cwtl
mov
or
jno
adc
xor
decl
stos
adc
or
mov
inc
jne
xor
scas
push
jae
int
negb
ja
push
mov
lods
cmpl
pop
dec
sti
mov
iret
mov
in
mov
inc
ja
loope
mov
and
fmul
mov
cmc
test
mov
xorl
stos
mov
pop
or
dec
ljmp
lock
push
add
lods
hlt
and
jnp
je,pt
mov
xor
test
dec
inc
adc
test
stos
push
xchg
cmp
daa
jle
addb
lods
jle
mov
mov
push
push
sbb
cmc
mov
rcr
jb
inc
inc
pusha
xchg
enter
outsl
loopne
mov
lods
pop
lret
fistpll
ret
les
dec
ffreep
add
dec
jge
cs
jg
mov
decb
movl
mov
sub
pop
adc
lretw
ror
rcr
push
cmpsl
dec
push
jle
movsb
test
xlat
cld
js
adc
xor
ret
jmp
out
pop
fsubrl
ds
inc
mull
cwtl
cld
lret
test
adc
adc
outsl
loopne
jns
push
out
dec
pushf
insb
in
dec
sbb
sub
leave
and
inc
fsubs
lret
inc
mov
dec
cmp
mov
andl
fistpll
cmp
jle
xchg
test
sub
xor
cwtl
mov
addr16
out
pop
fstpl
jle
push
mov
sbb
xor
iret
xchg
cmp
push
add
dec
pop
mov
sub
testb
and
push
adc
jge
out
imul
or
pop
dec
sbb
outsb
lods
sbb
add
push
cwtl
popa
hlt
adc
jge
out
andl
mov
mov
lea
cmp
or
test
inc
stos
rol
frstor
in
out
push
sub
outsl
sti
xchg
adc
sbb
push
mov
andl
cmp
lods
xor
les
lds
loope
fadds
das
scas
in
shl
aaa
and
sbbb
add
cli
stos
mov
out
jl
fs
shr
shl
shr
cmp
pop
fstps
xchg
dec
or
and
in
stos
in
and
js
push
test
outsb
clc
push
cmc
xchg
cld
outsb
test
rcr
icebp
int3
pusha
sub
inc
sub
fiaddl
jl
push
clc
pop
mov
aam
adc
push
xor
push
mov
adc
sbb
rcrb
leave
xor
call
and
mov
imul
data16
mov
cld
lcall
cmpsb
je
rclb
out
adc
add
int
fwait
mov
sbb
xlat
sbb
loopne
hlt
ret
mov
xchg
mov
ljmp
sub
cmc
mov
movsl
pop
or
xor
test
sub
pop
insb
outsl
aad
mov
xchg
dec
push
xchg
ret
push
imul
lret
divl
push
dec
stos
jle
cmp
in
and
sub
dec
lea
add
cmp
inc
nop
and
xchg
bts
inc
sbb
js
loop
imul
mov
or
iret
inc
sbb
sub
insl
mov
int
cltd
repz
inc
sbb
dec
int
insb
xor
inc
pop
mov
fisttps
jge
mov
daa
int
in
fwait
lea
sub
cld
add
mov
fcompl
aad
sub
out
inc
jge
sub
mov
hlt
xchg
xorl
sub
jno
jmp
sub
jle
add
ja
out
add
jg
sub
and
dec
arpl
nop
out
in
call
mulb
ret
pusha
lods
adc
roll
mov
movsl
pushf
pop
pop
js
pop
lret
stos
jl
bnd
adc
xor
lahf
aam
lds
and
ds
xchg
and
mov
mov
and
into
adc
sbb
fbstp
cli
add
push
adc
aaa
mov
bound
sub
jne
pop
loope
push
adc
shr
cwtl
cmc
lret
add
pop
push
test
sub
mov
mov
mov
sub
rcr
xor
adc
aas
fistpl
pop
popf
lret
sbb
xchg
movsb
xlat
inc
bound
int
adcb
push
rcl
fldenv
test
nop
lret
mov
or
call
movsb
lock
mov
outsb
cwtl
test
push
mov
sbb
mov
sub
jne
loopne
clc
in
popf
insl
loope
mov
shrb
outsb
add
ret
add
mov
mov
or
cmc
das
call
iret
ficomps
push
xchg
sub
mov
sbb
cmpsb
dec
loope
inc
pop
in
lods
fbstp
call
cltd
cmp
mov
mov
mov
sarl
mov
push
aas
nop
or
data16
xchg
xor
ss
shll
pop
cld
aas
movsb
mov
call
mov
mov
or
push
shrl
cmovle
cwtl
imul
shll
inc
dec
mov
sub
adc
repnz
test
sbb
sub
orb
jl
rcll
xchg
pop
jecxz
cmp
repz
jmp
jne
aaa
pop
test
mov
or
data16
test
and
add
add
adc
inc
icebp
mov
clc
or
arpl
jnp
or
lret
shr
mov
stc
push
fwait
mov
scas
pop
lea
icebp
addl
and
enter
cwtl
xor
cli
and
pop
dec
and
mov
inc
js
loopne
out
repnz
sub
andb
fstpt
out
mov
cmp
dec
mov
mov
movsl
divb
mov
xchg
jmp
imul
fwait
cmp
and
push
pop
jmp
or
push
out
pop
inc
pushf
imul
jne
or
inc
dec
out
mov
sub
cmp
cmp
out
adc
test
fidivrs
hlt
test
lods
in
add
and
inc
aam
sub
out
sub
roll
inc
scas
dec
not
test
cmp
push
push
dec
push
clc
sbb
test
cmc
jno
adc
int
jl
lds
int3
sbb
push
adc
test
push
in
mov
int
mov
cs
lds
xchg
jmp
in
fdivrp
adc
hlt
aad
jl
jo
dec
neg
push
mov
and
mov
rcr
mov
pop
insl
test
jmp
cld
sbb
sbb
add
stc
and
popf
into
adc
movsl
fnstenv
xchg
mov
pop
daa
mov
dec
xor
adc
or
adc
push
les
mov
mov
test
lods
pop
ret
pop
imul
pop
mov
gs
and
mov
xchg
loop
xlat
loop
inc
dec
aaa
fwait
mov
out
hlt
pop
ret
loope
sbb
add
sbbb
push
addr16
nop
xor
shll
and
lea
mov
inc
in
ficoms
fwait
add
inc
cmp
xchg
dec
inc
jmp
fs
adc
repz
outsb
lahf
mov
inc
test
or
pusha
sub
adc
les
mov
jns
out
ds
inc
cmpsb
into
dec
add
and
mov
and
xor
dec
push
lret
fildl
mov
pop
push
inc
push
adc
pop
lock
sub
sbb
sub
clc
push
push
jl
pusha
inc
cmp
jb
call
fmull
lock
aam
jge
and
mov
mov
scas
cmp
jmp
pop
add
pop
mov
sbb
lsl
arpl
jecxz
sub
lcall
push
mov
ljmp
jne
stos
xchg
out
sarl
aad
in
imul
pop
call
push
sbb
and
xlat
xor
and
repz
xchg
inc
ret
cmp
bound
pop
sbb
or
lock
push
movsb
aam
and
dec
ja
xor
aad
pop
pop
jp
popa
mov
cmp
sub
je
aam
lahf
sbb
pop
xor
pop
cwtl
leave
or
pushf
pop
test
nop
icebp
out
and
shl
adc
cwtl
ss
imulb
add
leave
jge
push
in
mov
lcall
clc
sub
cmpsl
inc
das
cmp
and
add
sbb
cmp
mov
sub
gs
push
adc
js
leave
pop
mov
mul
test
sar
pop
mov
sbb
dec
invd
in
stc
pop
stos
shrb
inc
andb
jbe
test
dec
addb
and
cmpsl
divb
mov
jb
arpl
mov
sahf
sbb
push
es
add
cmp
push
cmp
mov
repnz
sub
jae
repnz
popa
ljmp
sub
gs
ds
dec
sarb
or
gs
dec
dec
shll
imul
bound
and
mov
decl
rcll
or
xchg
dec
lahf
push
into
mov
fiaddl
mov
jmp
push
mov
pop
xchg
fnstsw
sarl
aad
loope
ret
iret
push
movsb
sbb
roll
push
push
or
pop
mov
jae
push
test
test
cmp
mov
stos
inc
sub
pop
out
dec
arpl
or
adc
pop
mov
jb
cs
cs
enter
popa
pop
xor
and
jb
stos
sbb
in
in
lcallw
adc
mov
pop
ffreep
sbb
hlt
pusha
push
sub
add
jg
aam
sub
mov
test
push
testb
loop
nop
pusha
lods
fwait
enter
addr16
jecxz
lods
mov
movsb
mov
mov
jns
lds
addl
in
sub
xlat
inc
jmp
gs
mov
int
lds
inc
jo
fwait
xor
aam
arpl
dec
push
rolb
dec
das
cltd
stos
lcall
mov
bnd
xor
mov
or
ja
add
adc
fidivrs
cmpsl
sbb
push
xchg
xchg
addl
push
les
inc
int3
cmp
mov
jno
inc
jnp
aam
push
dec
sub
mov
mov
aam
jl
andl
push
push
inc
imul
test
inc
pop
push
imul
cmp
loop
jne
mov
popf
add
mov
dec
inc
sbb
jbe
dec
test
enter
fiadds
jo
sbb
xchg
loop
lcall
aas
jbe
ret
pop
push
inc
cmp
popl
lods
scas
in
andb
cmp
sahf
and
adc
jg
mov
scas
pop
sbb
lods
incb
pop
push
gs
inc
cmpsb
push
cltd
mov
loope
mov
cs
fwait
ss
dec
xor
pop
xor
ljmp
push
xor
sbb
mov
mov
insl
std
push
fwait
push
lds
mov
sub
cmp
das
aas
lahf
adc
jmp
idivb
sbb
cmpsb
popf
xlat
je
push
jns
sbb
scas
ljmp
aaa
pop
cld
shll
cli
pop
adc
add
jnp
inc
cwtl
fcoms
scas
lcall
int
add
into
adc
mov
adc
mov
push
push
sub
xor
aas
sbb
daa
inc
pop
mov
sbb
test
jno
jno
push
out
int3
pop
cs
push
jae
in
or
adc
jb
je
push
repz
xchg
inc
lret
xchg
add
lret
sbb
mov
mov
pop
loope
enter
cmp
bound
ret
iret
jle
sbb
adc
or
sub
sbb
insb
popa
mov
cmp
in
mov
adc
ds
jle
or
pop
push
scas
add
xor
add
imul
push
in
loopne
ret
jo
mov
xor
fnstenv
lods
std
cmp
jbe
ljmp
sub
shll
pop
xchg
sbb
mov
push
popf
pop
pushf
in
stos
push
dec
xchg
jecxz
sub
mov
iret
std
mov
dec
cld
insl
or
cmpsl
mov
mov
sbbb
fs
pop
mov
xor
jp
pop
enter
fsubs
iret
lock
sub
xchg
loope
scas
add
xchg
test
jbe
dec
cmpsl
and
mov
xchg
rcr
ss
mov
lods
and
add
xchg
mov
inc
in
lock
icebp
out
pop
pop
add
das
cs
scas
mov
jmp
mov
scas
out
dec
mov
test
push
es
or
mov
or
xor
jle
mov
shl
xchg
outsl
orl
call
dec
add
xchg
or
in
adc
mov
inc
loopne
xchg
sarb
sahf
jle
cmc
push
xchg
stos
or
jnp
xor
test
inc
push
xor
or
or
das
add
rcrb
movsb
in
data16
mov
pusha
int3
sbb
incb
push
cld
jp
or
mov
incb
xor
jge
out
mov
out
imul
pop
das
rol
int3
dec
fldl
test
punpckhwd
nop
movsl
push
dec
lret
push
push
std
adc
push
and
cli
or
daa
pop
xchg
sub
sbb
int
jmp
clc
ljmp
clc
jecxz
push
int
mov
adc
xor
imul
cli
mov
test
in
loop
iret
pop
imul
data16
repnz
mov
mov
lahf
pop
stos
jo
pop
cld
int
inc
pop
pop
xchg
fisubl
fstps
jge
icebp
inc
je
mov
mov
cmpsl
and
fstps
in
jl
test
or
dec
pop
xchg
push
cmp
ret
add
aad
jle
jmp
jl
mov
insl
inc
jo
dec
pop
inc
aas
in
sub
leave
into
add
or
jns
ja
scas
mov
pop
mov
sbb
or
lods
roll
cwtl
out
sub
sub
dec
push
add
xor
int3
in
pop
push
adc
push
mov
rcl
fmull
out
andb
lds
or
rcl
xor
cwtl
aas
aaa
mov
fdivl
and
sub
mov
js
sbb
jb
ja
mov
ret
cltd
inc
jmp
std
add
or
xor
cmp
cmc
sub
negl
fs
pop
sub
jnp
imull
pmaxsw
pop
lcall
adc
into
rcll
inc
xchg
sbb
mov
out
in
arpl
sti
mov
ret
push
xlat
popf
mov
sub
into
pop
jo
pusha
pop
fbstp
hlt
xchg
push
in
daa
arpl
xor
mov
fstpl
cmp
enter
ja
insl
sbb
lods
pushf
add
jge
push
pop
adc
push
mov
std
cmp
xor
psrlw
fucom
outsl
sbb
jbe
push
out
mov
jp
jne
adc
adc
mov
cmp
jb
xchg
push
cmc
dec
rcrl
cmp
mov
subb
xchg
xchg
xchg
je
add
bound
sti
or
inc
stc
js
dec
xchg
test
cmpsl
shll
sub
add
xchg
mov
push
ss
push
data16
jg
xchg
push
jg
incl
pop
inc
imul
fstpt
icebp
ret
mov
jmp
scas
sbb
insb
jne
and
mov
lock
xchg
sbb
push
addb
jno
and
push
cmpsl
std
push
lds
pop
mov
cmp
inc
mov
icebp
or
cmpsl
inc
mov
mov
rcr
fsubrl
fsubl
cmp
sbb
mov
xorl
inc
imul
lods
shlb
xchg
dec
jecxz
mov
add
push
inc
cmp
stos
pop
fadds
js
fsub
popa
jp
sarb
lds
sti
test
or
test
mov
clc
xchg
mov
inc
jbe
int3
mov
push
jno
push
in
test
sbb
push
xorb
mov
adc
leave
ss
jnp
lret
test
aam
lahf
pop
cmp
and
popf
add
lret
lock
add
inc
jle
data16
inc
mov
sub
iret
stos
fidivrs
jns
inc
jne
sbb
xor
mov
pop
vpshuflw
out
hlt
push
test
aam
sbb
rcrl
and
rcll
xor
push
and
mov
inc
dec
bound
inc
loop
inc
scas
dec
dec
test
pusha
in
lds
loopne
ja
out
push
xchg
icebp
mov
add
xchg
cwtl
xchg
sbb
or
mov
mov
push
fcmovb
mov
insb
jle
mov
scas
ret
in
mov
xor
cmpsb
fadds
push
push
into
imul
daa
cmp
mov
jge
mov
mov
jmp
icebp
mov
jb
mov
mov
xchg
jb
and
aas
incb
sub
fldl
cmp
inc
cmp
mov
inc
enter
inc
sub
leave
sbb
std
mov
loopne
leave
xlat
fstpl
mov
int3
add
cli
jne
mov
adc
movaps
clc
cmp
imul
mov
mov
jae
stos
cmp
and
mov
xor
lcall
pop
inc
ret
lea
je
mov
lods
add
dec
movsl
dec
cli
xor
les
cmp
mov
iret
andl
mov
cmp
not
int3
insb
jmp
fs
mov
xchg
mov
jno
xchg
mov
iret
xor
push
xchg
filds
pop
test
jge
notl
je
and
add
add
add
and
adcb
xchg
inc
int
push
adc
push
adc
push
xchg
rorl
scas
inc
decl
mov
jbe
sbb
dec
in
cltd
fisubl
gs
or
add
add
in
add
lcall
ds
xchg
mov
hlt
jb
je
mov
cmp
dec
pop
lahf
adc
icebp
arpl
ds
mov
lds
ss
popf
adc
mov
push
mov
xor
addl
dec
or
xchg
jo
dec
loop
int3
loop
popa
lahf
or
loop
or
xchg
and
xchg
inc
pop
jne
jle
push
in
jl
or
mov
jecxz
pop
push
js
jo
roll
je
ljmp
ja
and
lock
stc
lcall
ret
test
inc
or
lock
sub
push
in
int
into
jp
hlt
rcll
cmp
inc
pushf
insb
aad
lcall
inc
sub
mov
hlt
data16
jl
pop
sub
sub
pop
scas
jecxz
loope
popf
push
mov
in
sbb
adc
cmp
or
sub
int3
xor
stc
push
es
testb
les
std
pop
cmp
adc
mov
mov
and
sbb
repz
cs
clc
gs
int3
xor
jmp
cmpsb
push
repz
movsb
popa
jnp
lods
rcrb
xchg
push
in
or
push
pop
adc
jo
in
icebp
test
push
sub
pop
stos
mov
xchg
lahf
or
xchg
adc
addl
jnp
jnp
es
aas
push
lahf
sahf
test
jo
data16
rorb
enter
adc
cmp
xchg
adc
pushf
xchg
pop
push
pop
out
lea
lcall
into
lea
mov
cmp
xchg
or
pop
cmp
add
test
dec
dec
sti
addb
ljmp
cmp
sub
and
mov
mov
int3
shrb
das
jne
mov
or
ja
sbb
push
xorl
or
mov
test
call
cmpb
mov
jp
ret
xchg
mov
inc
ljmp
push
scas
imul
sbbb
cli
aaa
pop
out
sbb
adcb
adc
jno
sub
push
mov
daa
jo
fisubl
push
mov
sub
pop
rcr
mov
pop
outsb
xchg
cmp
fstpl
lcall
insl
xchg
pop
sbb
imul
sbb
sarl
adc
loopne
mov
loop
pop
lret
jg
mov
mov
nop
push
xchg
aaa
bound
ds
shlb
jne
pop
mov
cmp
jmp
loopne
sub
cmp
jne
pop
in
mov
lahf
xchg
fstl
mov
jecxz
push
test
cmc
mov
sub
xchg
mov
mov
mov
lahf
sti
adc
cwtl
xchg
fstps
das
cmpsb
add
bound
lret
movsb
dec
add
or
mov
cmpsb
or
stos
in
inc
adc
mov
lret
push
jnp
cmp
enter
nop
dec
mov
hlt
sbb
sarl
xchg
clc
and
inc
jo
cli
adc
scas
jle
js
movsl
adc
push
test
outsb
repz
gs
push
into
sti
divb
inc
movsb
jns
scas
movsl
add
jae
xchg
jno
mov
es
jge
sub
mov
lds
leave
data16
fisttps
inc
fisttpl
pop
jno
jnp
add
adc
and
xor
push
push
hlt
cli
add
dec
push
int
sarb
dec
cli
scas
xchg
xor
les
sub
test
aaa
cli
pop
mov
cltd
push
xchg
rorl
mov
push
les
push
nop
cmp
bnd
sbb
mov
mov
cmp
inc
lret
and
cmp
jle
mov
fs
cli
xchg
xchg
sbb
enter
bound
sti
jnp
sbb
out
pop
push
out
or
mov
loope
fdivl
xor
ss
or
inc
pop
jl
notl
or
mov
cwtl
sbb
outsl
adc
mov
pop
push
stos
jg
test
mov
cwtl
sub
inc
inc
insl
clc
test
pop
fldl
xor
sub
or
jae
fsubl
jmp
or
sbb
in
push
adc
sbb
int3
pop
mov
xchg
dec
jno
test
outsl
and
jne
push
fldcw
icebp
push
fistl
scas
add
sbb
inc
movsb
adc
push
cmpsb
and
enter
out
xchg
push
mov
push
mov
sbbl
test
ret
cld
push
sub
cmp
arpl
push
add
lcall
aam
mov
cmp
add
mov
jbe
pop
stc
adc
xor
andw
cmp
or
fbld
sub
aam
fcom
arpl
cwtl
test
mov
jno
mov
les
mov
mov
fimuls
mov
loop
sbb
dec
or
int3
mov
add
mov
mov
and
inc
push
pop
pop
add
mov
push
xor
and
int
fnsave
stc
jge
cmp
sub
push
jl
sbb
shrl
call
ljmp
jl
pop
adc
mov
sbb
inc
adc
outsl
mov
lret
sub
adc
cmpsb
dec
es
xchg
mov
enter
cmpsl
ljmp
mov
xchg
lods
lahf
jb
and
sub
stos
jge
lods
stc
cld
sbb
sbb
jmp
cmp
adc
push
sbb
lea
jmp
jp,pt
xchg
stos
cmp
push
xchg
clc
nop
cli
adc
daa
imul
lahf
xor
sub
sub
cmp
xor
cmp
jl
inc
dec
mov
xor
imul
jne
mov
jns
mov
sbb
enter
xor
shl
jae
das
cli
lret
gs
push
or
imul
insb
shl
fcoms
mov
lds
enter
or
fsubrl
inc
sub
mov
iret
jae
mov
sub
cmp
cmpsb
ficomps
popa
sub
sahf
movb
sbb
add
mov
bound
xchg
xor
xchg
mov
popf
and
pop
fdivs
push
es
in
push
scas
jo
xor
addr16
mov
test
test
stos
pcmpeqw
push
cli
cmp
xor
inc
or
es
add
mov
mov
push
add
int3
enter
or
lcall
mov
pop
sbb
cltd
insb
adc
or
mov
pop
in
add
adc
push
inc
adc
test
jo
out
arpl
and
movsl
mov
xor
xor
xlat
gs
or
mov
inc
push
sti
xchg
pop
mov
stc
push
in
ret
xchg
push
movsb
xlat
rorb
scas
inc
xchg
out
inc
jge
insl
pop
cli
jo
sub
push
out
lods
test
xor
outsl
xchg
sub
in
jnp
jecxz
jb
jne
pop
std
xchg
or
pushf
sbb
sbb
test
sbb
jecxz
push
fcom
sbb
std
pop
shll
or
mov
push
pop
dec
adc
repz
ds
dec
mov
add
sahf
mov
push
xchg
push
ret
push
jge
movsl
sub
aad
xchg
fsubl
cmp
data16
pop
xchg
xor
add
push
clc
sbb
xor
mull
mov
pushf
mov
add
dec
roll
push
add
jge
dec
daa
mov
cmp
sub
and
xor
imul
call
xor
fsubrl
ljmp
fs
imulb
insb
andb
ljmp
push
sbb
subb
dec
cwtl
aad
inc
les
fistps
sub
push
sti
or
fdivrl
bound
and
in
sub
sub
leave
adcl
xor
insb
pop
or
stos
mov
addl
jno
aas
xchg
jp
xchg
push
push
xchg
aad
adc
mov
xchg
dec
insb
inc
fistl
xchg
jnp
or
jno
cmpsl
std
sarb
jbe
aam
outsl
cs
subl
pop
push
xchg
unpcklps
aaa
mov
cs
jo
in
xlat
push
mov
popa
push
dec
mov
cs
fdivs
mov
mov
cmpsb
xchg
push
out
faddl
or
leave
and
dec
stos
xchg
rorb
mov
stc
aaa
int3
xor
jl
fidivrs
pop
sbb
lret
testb
enter
idivb
rorb
or
mov
cltd
push
cmpsb
sub
mov
in
out
dec
pop
jmp
int3
inc
movsl
sbb
cmpsl
dec
jae
jbe
pop
push
cmp
cs
add
out
clc
dec
and
sub
stos
sbb
adc
dec
and
ret
mov
sbb
rclb
mov
push
pop
dec
add
lods
sub
shll
inc
imul
pop
test
jmp
sub
pop
popf
notb
xor
ficomps
push
xor
add
cmpsl
sbb
cmpsl
sarb
sti
cmp
cmp
pop
add
call
imull
shl
mov
in
cmp
out
bound
pushf
pop
pop
std
and
jne
xchg
es
das
xchg
sub
cmp
pop
mov
xchg
mov
or
rcll
leave
out
popa
jo
mov
movsl
mov
icebp
pop
stos
push
inc
jge
call
inc
add
out
or
ret
enter
or
leave
jne
jmp
dec
test
xchg
jae
notl
pop
fcoml
or
adc
xor
jns
inc
cmpsl
test
aam
adc
insl
pusha
mov
pop
enter
jne
xchg
push
mov
jle
mov
mov
rcl
pop
fiadds
add
jecxz
inc
pop
repnz
stc
sbb
lahf
cmp
push
mov
outsl
jecxz
sahf
test
movsb
push
mov
mov
ss
or
cmp
dec
push
cld
fs
xor
loope
ds
inc
mov
or
dec
repnz
mov
hlt
sbb
sbb
iret
pop
stc
jne
mov
pop
mov
imul
ljmp
xchg
loope
into
fidivl
pop
sar
scas
mov
or
out
push
loope
pop
mov
xor
jbe
addr16
test
xlat
mov
daa
fimull
xchg
inc
stos
sub
and
sbb
xor
mov
mov
inc
push
add
sub
repnz
in
shll
sti
mov
sub
jne
dec
aas
and
fisubrl
bnd
xor
out
jmp
lret
cltd
cmp
xchg
mov
add
jne
sbb
pop
inc
js
loopne
inc
sub
sub
in
inc
mov
mov
sbb
push
cmp
lods
dec
cmp
add
dec
dec
cmp
call
divb
mov
pop
lcall
sti
orl
stc
movsl
fstpl
iret
lea
mov
pop
movsb
aam
sbb
mov
push
cli
fisttpl
mov
xchg
pop
jle
loop
xchg
hlt
pushf
popf
ds
dec
dec
jmp
inc
lahf
imul
stc
add
jo
cwtl
sbb
int3
fs
sub
push
pop
insb
lods
or
inc
mov
jecxz
push
pusha
mov
push
dec
stos
add
push
jno,pn
out
insl
push
fucomip
xchg
and
stos
cs
xlat
xlat
in
orl
repz
bound
pushf
cs
repnz
push
jns
inc
add
dec
jno
pop
out
cmc
cmp
dec
outsb
mov
sbb
ss
jle
mov
push
repz
lret
adc
jecxz
fsubl
hlt
nop
sbb
pop
jecxz
in
ds
adc
or
inc
dec
shrb
jae
fs
push
jb
push
inc
je
lret
inc
inc
in
mov
adc
inc
jmp
dec
lret
pop
add
push
nop
dec
rcll
ss
into
aaa
pop
aaa
in
pop
stos
xor
xchg
ja
das
ror
sti
jnp
daa
push
sbb
repz
jg
push
iret
dec
adc
xchg
mov
daa
call
imul
pop
ss
loope
xor
repnz
js
xchg
mov
push
scas
cmp
dec
stos
fimull
jmp
mov
xchg
loope
adc
not
dec
push
aam
es
pop
pop
rol
imul
lods
pop
adc
cmp
loope
cld
data16
mov
jmp
stos
cltd
in
lods
adc
push
movsl
xchg
push
out
add
jle
and
sbb
and
sub
inc
push
js
loopne
lock
jg
mov
sbb
sub
mov
dec
pop
movsl
push
in
pop
test
xchg
dec
movl
loope
sahf
out
jno
pusha
xchg
mov
xor
adc
jl
dec
leave
pusha
stos
jle
les
mov
aas
push
mov
dec
dec
jbe
inc
sub
ret
movsl
push
jns
stos
push
cmp
xor
xchg
cmp
imul
jle
and
or
ljmp
xchg
gs
xchg
mov
push
lret
xor
sbb
je
gs
or
jmp
lahf
imul
stos
iret
cmpsb
jb
ss
jg
mov
jmp
mov
repz
in
and
cmp
pushf
mov
jmp
ss
mov
inc
jmp
popa
ljmp
cmp
fmuls
hlt
es
movsl
ret
fiaddl
jbe
jge
iret
aaa
fldcw
push
iret
and
cmp
mov
adc
sbb
mov
mov
out
dec
addr16
out
fiaddl
mov
and
cmpl
in
cmc
xor
int3
xchg
xchg
out
fwait
cli
es
xchg
or
decl
sbb
roll
fnstcw
xor
mov
inc
fmuls
or
imul
inc
xor
stos
add
cmp
push
test
mov
pop
xchg
cmpsl
loope
push
aas
sarb
wrmsr
jo
je
cld
mov
push
aam
inc
arpl
rcr
jl
shrb
sysret
cmp
mov
js
add
repnz
mov
mov
dec
insb
adc
hlt
push
sub
mov
pop
ret
inc
shlb
cmpl
test
jp,pt
mov
pop
push
aad
sbb
cld
into
jno
fs
adc
clc
xchg
adc
jecxz
mov
sti
add
fcoms
xor
and
clc
adc
hlt
sub
es
jp
out
jmp
xor
jne
sbb
xchg
xor
into
jo
ror
jo
arpl
imul
mov
xchg
mov
and
and
xchg
cltd
jo
and
mov
xor
mov
sbb
arpl
fdivrs
xchg
and
xchg
test
lret
stos
adc
imul
mov
ds
addl
sar
jecxz
cmc
fisttps
enter
mov
stos
dec
je
mov
nop
xchg
sahf
call
push
pop
cmp
cld
sub
push
fwait
out
imul
sbb
sbb
notb
call
adc
dec
cld
pop
lret
jge
loopne
test
cld
pusha
lahf
shll
out
mov
jle
pushf
jle
mov
and
nop
lock
js
xor
pop
out
lock
bnd
cmpsl
jae
leave
int
adc
lcall
jp
push
push
adc
lods
shlb
add
jge
mull
jne
lcall
stos
push
pushf
fs
mov
dec
add
popa
xchg
mov
xchg
sub
fildl
or
add
out
in
sbb
jbe
test
shr
or
dec
insl
int3
jl
iret
xor
leave
add
sbb
or
jbe
test
faddl
pop
loopne
xchg
popa
fdivrs
mov
cmpsl
or
add
dec
pop
jns
nop
push
pop
xor
repnz
mov
mov
jmp
mov
fisubl
jns
shr
jno
imul
dec
xchg
add
pusha
fcompl
mov
mov
mov
negb
test
push
cmp
out
sahf
mov
inc
xchg
and
sbb
jg
in
scas
push
xchg
lret
sbb
and
push
loop
adc
jle
imul
push
dec
and
aas
inc
rol
popa
mov
rcrl
xor
xchg
pop
les
daa
jg
cwtl
pop
mov
lods
pop
int
jbe
lds
push
jns
icebp
push
pop
jbe
out
fwait
adc
jecxz
dec
or
or
or
ja
outsb
das
mov
insl
and
xor
mov
cwtl
push
pop
jns
mov
ja
ret
and
popa
push
mov
cltd
mov
inc
push
mov
test
mov
fdivs
cltd
test
sarl
or
insb
sub
xor
pusha
pop
xor
inc
sbb
sti
mov
xor
lods
cmc
cmp
lock
inc
xchg
lret
lret
add
xor
push
or
cltd
add
ja
loopne
sbbl
jp
adc
cwtl
imul
jg
adc
jns
push
jne
popa
dec
call
cld
test
or
ss
mov
notb
sahf
rcrb
push
shll
in
jmp
out
cmp
fisubl
and
icebp
scas
jbe
jbe
sbb
push
lock
loop
cmpsb
cli
or
pop
jecxz
jmp
sbb
jnp
sub
jecxz
xchg
mov
sub
scas
cmp
enter
movsb
inc
lret
or
outsl
enter
jge
mov
popa
jb
dec
xchg
fprem
xor
stc
fistpll
mov
cmpsb
stos
nop
les
imul
adc
jbe
mov
xchg
mov
into
imul
dec
lock
popf
xchg
or
mov
in
xor
jecxz
or
pop
xor
movb
inc
jns
jg
mov
insl
sbb
mov
cmp
xchg
xchg
xor
lret
mov
hlt
inc
in
cli
icebp
sub
fucom
rcrb
sbb
outsb
outsb
test
js
arpl
and
adc
inc
fimull
dec
mov
mov
jo
scas
mov
out
fs
and
fisubrl
push
sub
sub
sbb
cmp
insb
mov
fwait
xor
lcall
cmp
adc
jo
push
mov
add
xor
arpl
add
jbe
add
outsl
mov
pop
sbb
inc
mov
pop
shr
insl
ret
enter
jb
sbb
dec
mov
mov
fildll
jg
pop
mov
mov
dec
ljmp
sub
mov
loopne
lods
stos
add
adc
inc
mov
inc
ret
cwtl
xlat
roll
lods
jp
insb
jae
and
sti
repz
fs
mov
cli
add
sbbb
sahf
and
sbb
loop
cs
mov
scas
mov
test
mov
int3
fisttpll
in
sbb
jns
sahf
and
ja
leave
mov
pop
scas
mov
mov
add
lods
es
or
pop
xchg
mov
paddd
and
sub
ret
aam
xchg
cmp
push
std
call
call
sbb
jo
adc
mov
push
fcom
jb
dec
out
adc
add
lods
dec
notb
movd
lock
scas
sti
daa
and
cs
out
or
xor
pop
push
sub
jne
fisttpl
pop
push
lock
push
pop
sbb
mov
inc
xchg
enter
addr16
sub
cmpsb
shlb
pop
cwtl
lock
das
ret
xlat
lret
xor
ja
pop
mov
arpl
jo
ljmp
dec
popf
aad
bswap
and
in
js
add
aas
mov
fsubrl
mov
mov
jp
ret
add
jne
scas
je
xor
push
or
outsb
data16
scas
ds
adc
iret
and
sarb
test
ja
inc
frstor
fimull
sbb
imull
dec
inc
xchg
xchg
jnp
mov
pop
daa
enter
pop
jmp
loope
cmpsl
or
mov
lea
xchg
imul
aam
dec
xchg
lods
xor
or
test
test
cs
cmp
cmp
test
je
lret
fs
call
lock
scas
daa
int
pop
dec
and
xchg
add
cmc
je
inc
push
mov
sbb
pusha
icebp
jo
in
aaa
xor
sub
push
outsl
repz
stc
andl
mov
aas
test
pop
fistpll
fsubr
enter
insl
mov
cmc
inc
imul
or
adc
and
and
jno
ror
testl
lahf
ja
cltd
lds
flds
mov
cmpsb
push
test
lods
ret
cwtl
mov
pop
pushf
adc
inc
stos
push
cmp
outsb
loopne
xchg
pop
pop
jecxz
das
test
pop
mov
or
sbb
mov
popf
rolb
mov
into
jae
push
or
outsl
popa
cs
mov
and
add
push
and
js
cltd
add
clc
sbb
cmp
add
sub
adc
movups
orb
or
xor
sbb
stc
popa
sarb
mov
mov
ja
enter
add
add
inc
jno
jbe
repz
pop
xchg
shll
mov
xchg
clc
rorb
xchg
imul
fidivrl
scas
pop
fstpt
xlat
pop
das
fcmovu
out
clc
ds
arpl
pop
das
xlat
sbb
mov
jmp
repnz
ret
mov
push
mov
mov
xor
sub
inc
cmp
push
arpl
mov
jae
cmp
xchg
jp
or
add
notb
rclb
fsubrp
inc
jae
pop
cmpsl
ss
add
xchg
aaa
pop
mov
out
int3
aaa
pop
push
fisubl
push
mov
jmp
test
mov
ja
mov
pop
cmp
jns
fisttps
jle
js
sub
std
sbb
pop
imul
inc
scas
inc
jl
stos
aaa
inc
inc
hlt
insb
push
xchg
repnz
sbb
mov
push
mov
rcrb
mov
lods
loopne
gs
les
pop
shrl
je
scas
out
cmpsl
push
loope
sbb
std
xlat
cmpsb
rcrb
xchg
jbe
xchg
divl
sbb
mov
sbb
mov
and
jl
aas
daa
hlt
inc
mov
arpl
sbb
or
mov
xchg
cli
icebp
xor
pusha
subb
dec
or
test
jmp
dec
mov
dec
rorl
fcom
push
fwait
jae
jge
cmp
scas
hlt
xor
jne
or
scas
xchg
sbb
cwtl
lret
sbb
xchg
mov
movsl
jle
jns
pop
rcrb
adc
lock
mov
stc
or
sbb
andl
fidivrs
mov
jbe
or
cmp
int3
mov
scas
scas
insl
bound
cld
pop
mov
test
scas
outsb
dec
adc
outsl
icebp
jb
fstpt
xchg
ret
mov
jp
js
das
rol
jge
sub
or
pop
adcb
mov
xor
mov
and
xchg
pop
push
mov
scas
sub
push
mov
xchg
fisttpll
xchg
mov
mov
jmp
cmp
pop
mov
pop
xchg
in
scas
cld
addl
adc
stc
cmpsb
mov
lock
insb
sarb
rcll
ret
inc
inc
inc
jo
adc
xor
push
add
popl
inc
pusha
inc
sbb
push
aaa
add
add
je
cmp
adc
std
ss
cmc
test
xchg
loope
test
imul
push
fistl
add
pop
jge
aad
cmp
aas
sub
imul
mov
cmp
dec
lods
cmp
add
pop
aaa
daa
cmp
rorl
jp
sub
sub
jmp
add
popa
hlt
adc
fadd
sub
mov
enter
sub
pop
dec
jg
mov
jge
push
lahf
dec
pop
ja
lods
gs
cmp
bound
repnz
jns
ja
sub
hlt
in
push
xchg
dec
mov
lar
push
mov
je
sbb
add
pop
shll
rclb
fsubl
push
fadds
ljmp
add
push
loope
xchg
dec
xchg
fcoml
pop
mov
in
jnp
fsubs
loopne
mov
insl
fs
pop
adc
jb
dec
xchg
cld
sub
or
stos
adc
leave
inc
pushf
push
lret
or
mov
aad
jecxz
js
mov
pop
push
jns
lcall
les
int
bound
fistl
es
popf
pop
jp
cmp
push
popa
sub
icebp
adc
jae
sbb
jnp
mov
lods
lods
pop
sub
ss
adc
adc
jno
stos
movnti
jae
sub
push
je
sbb
pop
push
jne
loop
xlat
aad
add
outsb
push
push
nop
lret
adc
or
cmp
sti
in
repz
push
cmp
imul
test
push
xchg
sar
cmc
pop
pop
sti
insb
mov
aad
mov
xor
or
inc
popf
jp
jge
pop
das
loopne
mov
ja
jne
repnz
mov
loop
loop
push
xchg
sti
fcmovnbe
int3
cmp
aad
insb
jge
jo
mov
mov
testl
xchg
xor
f2xm1
arpl
enter
xchg
or
adc
and
rorl
repnz
dec
jae
mov
andl
adc
pop
js
nop
ret
lock
pcmpgtd
jbe
pop
lock
mov
mov
jno
dec
js
pop
in
inc
lods
mov
pusha
jecxz
jle
jle
lret
push
ss
js
das
and
mov
loopne
dec
insb
mov
or
adc
in
lods
rcr
ret
movsb
aam
push
scas
lods
js
rcll
pop
jb
cli
push
sub
mov
lock
xchg
test
add
or
adc
pop
jno
pop
sub
leave
mov
popf
out
lods
xor
dec
adc
pop
clc
insl
cmp
add
jnp
fstp
lea
and
int
sub
enter
mov
das
fsts
jmp
inc
xor
shr
adc
cld
add
add
xor
cmp
pop
xchg
mov
push
xor
rcr
aam
testl
outsl
push
clc
push
push
fnstsw
sub
or
lret
sub
jns
xor
repz
lods
xor
ljmp
lods
adc
scas
clc
fldl
add
and
or
mov
bound
mov
into
add
push
loop
sahf
push
and
psubq
roll
cmp
and
push
iret
rorb
mov
repz
inc
xor
jnp
enter
sbb
xchg
mov
dec
sub
mov
enter
sbb
xor
div
inc
call
cmp
pop
xchg
das
es
inc
jle
cmpsb
jo
jecxz
adc
xchg
movsl
lahf
adc
cmpsb
cmp
add
jp
fisubrl
cmp
inc
enter
adc
into
loope
stos
cmp
add
xchg
cmp
adc
nop
inc
jge
enter
mov
pushf
loope
into
sarl
test
cwtl
jns
addb
ret
cld
int
andl
out
maskmovq
testl
daa
cmp
inc
dec
stos
mov
rcll
xchg
mov
inc
or
sub
dec
push
xchg
lods
cli
fcmovne
push
adc
gs
dec
mov
aad
dec
jns
add
dec
fdivl
sti
das
cmp
sbb
daa
fdiv
popa
adc
cli
ja
insb
pop
cli
add
push
aas
sarl
pop
cmp
scas
sahf
jo
sub
jbe
arpl
pop
mov
fwait
push
loopne
icebp
push
mov
sub
cmp
or
jb
jg
loope
out
mov
shr
jb
mov
adc
mov
push
stos
and
lret
jo
push
push
aas
pop
mov
test
lret
push
fisubrs
sub
xchg
pop
cltd
mov
daa
pop
mov
stos
dec
stc
test
mov
xor
inc
cmp
mov
push
push
adc
pushf
icebp
inc
xchg
les
pop
loope
mov
testl
fisubrs
xchg
lret
or
lea
mov
or
les
sti
divl
push
lock
fistpl
jb
repnz
jns
popa
out
fistpl
lds
add
shl
or
inc
mov
xor
idiv
mov
fs
popa
sbb
sub
fistpl
loope
xchg
sub
pop
sahf
add
mull
mov
iret
adc
push
jae
insl
xchg
notb
mov
jecxz
jbe
push
lcall
jb
xchg
sti
mov
inc
push
pop
jbe
mov
mov
movb
mov
cmp
cmp
mov
push
ja
pop
dec
fld
or
mov
jmp
dec
arpl
out
jo
xor
adc
out
jns
xchg
sarb
ret
test
mov
and
mov
mov
ljmp
mov
hlt
jns
lds
xor
aam
leave
ds
jne
adc
out
push
inc
mov
mov
jno
inc
orl
push
bound
repz
and
loopne
xchg
nop
jbe
xchg
jnp
dec
shll
xor
xchg
mov
adc
mov
nop
loopne
or
mov
cmpsb
adc
and
push
fsts
mov
int
pusha
aad
jg
test
sub
dec
in
or
and
add
int3
cmp
xchg
dec
aam
cmp
imul
push
fistpll
ss
mov
push
call
pop
mov
popf
jl
and
and
sahf
fcomps
dec
popa
sbb
hlt
cwtl
jnp
add
int
movsb
jns
pop
ja
push
sti
lahf
nop
mov
sbbl
cli
jno
sbb
xchg
and
push
mov
daa
dec
ret
mov
inc
lret
rclb
daa
stos
mov
ljmp
test
add
jl
adc
sbb
unpckhps
loope
scas
jne
xchg
stos
adc
mov
outsb
pop
push
cmp
lret
mov
sbb
add
adc
popa
cltd
pusha
fnstcw
aas
cmpsb
push
std
mov
mov
pop
test
popa
sbb
lds
pop
dec
movsl
xchg
lea
or
cld
aaa
sub
mov
movsb
scas
adc
out
js
jl
xor
loopne
clc
mov
jmp
adc
adcl
clc
add
scas
int
sbb
push
pop
pop
inc
test
pop
stos
es
inc
sbb
repnz
xor
sbb
dec
stos
xor
mov
arpl
out
cmpsb
ljmp
pop
add
inc
xchg
sub
out
rcrb
clc
mov
adc
sbb
add
aam
mov
pop
cmp
sbb
push
sahf
lods
outsb
rorb
popa
mov
xor
or
in
in
or
mov
bound
imulb
inc
inc
jnp
mov
adc
test
inc
mov
punpcklwd
cmc
cmp
dec
iret
pop
adc
sbb
xchg
jmp
test
lret
pop
fdivrl
aaa
xchg
clc
or
add
inc
fstp
fwait
mov
nop
push
lcall
or
dec
jmp
pop
mov
mov
push
repz
push
xchg
subl
lods
push
cmc
outsb
lahf
std
lea
sahf
movsl
outsl
mov
insl
and
fnstcw
add
push
bound
repnz
rolb
in
lods
pop
hlt
imul
add
xchg
add
push
xor
loopne
push
sarl
pop
add
jnp
outsl
sbb
in
std
lds
mov
ficoml
mov
std
cwtl
hlt
loop
dec
lcall
insb
ja
xchg
jl
cmpsl
jge
into
orl
jb
aam
das
cmpsl
xchg
lds
xchg
enter
jmp
jmp
dec
pop
mov
fisubrs
sbb
mov
dec
ret
addl
xchg
movsb
fnstcw
stc
mull
sahf
fs
pop
sbb
shl
adc
cmp
sub
cmc
or
adc
clts
aas
mov
cmp
cmpsl
pop
mov
dec
mov
insb
stc
inc
int3
adc
lcall
pop
fstpl
jns
inc
imul
mov
mov
enter
pop
fidivl
mov
test
movsb
or
das
and
jle
xchg
icebp
out
xor
sbb
fdivs
inc
pop
popa
adc
mov
xor
xlat
shrb
ret
fcomps
hlt
pushf
xchg
xchg
jno
pop
clc
call
mov
cmp
xor
cmc
test
aad
jmp
add
outsl
mov
fincstp
jecxz
jmp
pop
push
xchg
icebp
mov
daa
popf
in
rolb
sbb
insb
icebp
pop
ss
inc
mov
sahf
or
fnsave
gs
dec
adc
mov
jb
jle
inc
adc
fisubl
mov
mov
cmp
mov
icebp
mov
nop
pop
and
movsl
cli
xchg
lods
mov
xor
lret
add
jb
aas
push
push
lret
inc
mov
mov
dec
mov
pop
rclb
sbbl
je
push
sahf
dec
stos
push
out
xor
inc
xor
out
sbb
cli
xlat
adc
imul
insb
jmp
lret
cmpb
cmp
aaa
dec
arpl
mov
dec
jge
or
fdivs
pop
dec
xchg
ljmp
pop
xchg
push
shrb
cmp
outsl
mov
xlat
nop
pushl
cmc
popa
fisubrs
scas
testl
in
clc
in
push
ljmp
sbb
push
out
popf
jne
mov
and
adc
or
mov
push
lods
adc
je
fucomi
xor
insl
cld
sub
filds
xor
inc
sarl
stos
or
out
sbb
nop
mov
ficoms
les
aaa
out
mov
push
xor
jecxz
cmpsb
insb
cmp
push
fsubr
sti
and
xlat
cmp
sub
jb
mov
arpl
push
pop
insl
pop
repnz
push
sbb
jl
add
ror
dec
notb
sbb
mov
push
popa
in
mov
mov
pop
into
sahf
dec
sbb
or
xor
loop
stos
push
out
mov
cmp
int
es
xchg
insb
pop
fs
fimuls
xchg
fxch
arpl
rorl
cmpsb
add
scas
xchg
push
push
adc
fmull
mov
push
test
push
fmuls
lret
sbb
movb
pushf
test
sub
stos
imul
stos
movsb
xchg
test
das
pop
pop
adcb
push
hlt
xor
sub
aam
shlb
or
inc
stos
lds
std
xlat
inc
loope
jl
jns
adc
fs
aaa
jo
inc
xor
aad
and
ds
inc
dec
imul
cli
xchg
rcrl
dec
jmp
fs
sti
cmp
xor
ret
std
arpl
mov
push
sub
cmp
xor
cmp
sub
dec
add
fbstp
ljmp
rclb
ret
notl
xchg
jmp
inc
mov
xor
push
aaa
jns
ret
xchg
stos
rcr
adc
pop
cmp
jae
or
mov
push
jmp
dec
repz
outsb
stos
loopne
psrad
push
mov
mov
inc
popf
mov
sub
push
or
imul
push
in
adc
test
enter
loope
out
pop
add
add
ret
or
pushf
mov
cld
sub
lahf
add
je
adc
lds
mov
into
shl
daa
cs
mov
rcrl
mov
xchg
leave
mov
mov
cmp
fsubs
push
popf
bound
in
cmpsb
sub
cmp
pop
add
js
pop
hlt
xchg
shrl
jnp
scas
out
rorl
cmp
mov
pop
pop
dec
pop
sbb
inc
enter
movsl
std
nop
push
rclb
sbb
xor
or
mov
lea
or
data16
hlt
popa
add
gs
push
mov
pop
mov
push
dec
dec
mov
xchg
test
xor
mov
push
add
lret
sub
in
ljmp
mov
lock
dec
sbb
roll
inc
push
sbb
mov
movsl
add
aad
dec
jmp
sbb
popf
popf
cmp
xchg
mov
cmpb
iret
xlat
xchg
lcall
cmp
pushf
out
out
arpl
subl
push
push
pop
mov
jnp
mov
mov
lea
xor
mov
add
loop
incl
clc
test
jnp
shlb
cltd
dec
mov
jge
mov
dec
or
and
mov
fwait
sub
push
iret
pop
push
test
scas
pusha
pop
xor
leave
nop
mov
cltd
repnz
popf
cli
out
cmp
push
lahf
test
cmp
ljmp
lock
pop
js
test
and
pop
out
data16
push
xchg
es
xchg
fxch
and
loope
dec
sarb
add
sbb
mov
aad
shll
dec
inc
pop
or
xchg
mulb
xor
sti
dec
jl
xor
fbstp
xor
data16
mov
stos
inc
add
xchg
pop
repz
pop
repnz
pop
xlat
test
shll
repnz
stc
scas
push
pop
lods
dec
test
dec
mov
mov
fnstcw
sub
loopne
cltd
std
mov
mov
cmp
sahf
push
mul
and
jecxz
pop
pop
fxch
cmp
test
aas
push
sahf
mov
addr16
fwait
push
xor
mov
jge
mov
adc
adc
mov
sbb
aam
stos
fwait
mov
pushf
lods
in
data16
gs
mov
add
test
mov
mov
mov
mov
or
bound
nop
mov
and
nop
lahf
sub
out
daa
push
inc
icebp
lds
xchg
shrl
mov
pop
aam
mov
insb
loop
xchg
sub
fisttps
movsl
shlb
das
push
lret
sbb
fisttpl
mov
stc
int
mov
xlat
test
push
inc
int3
lea
rcrb
cmpb
jl
call
inc
out
adc
lds
adc
pop
jmp
sub
rorb
xchg
cmp
sub
inc
sbb
jmp
lock
push
or
push
jle
xor
lods
and
into
mov
das
inc
outsb
and
sbb
int
subl
mov
push
and
add
pusha
lea
inc
pop
sbb
movsb
adc
push
and
stos
mov
sub
inc
or
pop
mov
cltd
scas
in
xorb
rol
cmp
xchg
dec
hlt
cmc
cmp
sar
orb
sbb
aad
inc
xlat
or
stos
into
pushf
xchg
adc
out
push
gs
clc
clc
imul
and
sarl
push
pop
int
adcb
jecxz
sub
xchg
rorb
outsb
iret
aaa
sub
xchg
dec
xchg
mov
jg
fs
push
cld
sbb
jecxz
xchg
xor
add
pop
xor
movsl
push
mov
clc
popa
call
jp
popl
mov
call
aas
mov
outsl
nop
and
mov
add
jns
push
cmp
daa
xchg
jecxz
inc
loope
int3
fstl
repnz
out
lock
fisubrs
movswl
inc
lea
shr
movl
adc
enter
sahf
or
out
movsb
aad
cmpl
aaa
iret
negl
sub
popf
outsb
leave
mov
and
idivb
add
dec
pop
push
mov
movsb
cmp
cmp
cmpsl
addr16
out
jl
nop
xchg
jmp
pop
invd
adcb
fistpll
fmuls
cmp
int3
cwtl
add
push
int3
idiv
in
mov
out
jge
jmp
in
xchg
cmp
cmp
mov
test
data16
mov
xchg
mov
inc
inc
andb
in
cmp
inc
jmp
rorb
pushf
inc
out
call
ljmp
inc
lea
insb
fs
dec
mov
das
in
sub
outsl
in
dec
mov
xor
mov
adc
dec
sbb
subb
frstor
ljmp
out
aam
loop
loopne
mov
or
shlb
xchg
xor
jns
xlat
pop
loope
in
cmp
fstpl
and
mov
int3
inc
push
mov
jb
lcall
and
mov
fbld
xchg
outsb
pop
push
xchg
ja
les
push
lods
cmp
loop
cs
repz
jl
lock
pop
xchg
test
lods
cmp
adc
adc
sub
les
dec
je
dec
scas
out
mov
sahf
xchg
les
add
push
lock
popf
xor
cmp
xchg
mov
sbb
lds
mov
dec
std
xlat
xor
lret
or
cwtl
sub
xchg
shlb
xchg
or
lods
in
push
fisubrl
out
out
sbb
jg
lret
jb
xlat
cltd
xor
add
mov
or
dec
andl
loope
push
imul
sub
cmc
pusha
push
pop
fildll
imul
push
movsb
xchg
mov
test
pop
xor
xchg
jae
rcrb
push
orl
adc
mov
mov
out
cs
leave
ss
mov
mov
xchg
sbbl
sbb
lcall
test
clc
arpl
adc
cmp
add
out
or
dec
push
das
xchg
pop
pushf
repz
xchg
cmp
sbbb
inc
add
cmpl
and
dec
pop
jo
rclb
push
cmp
inc
fsubs
cmp
ret
xor
ret
cltd
cltd
movsl
aaa
outsl
cltd
cmc
sbb
cmpsl
xlat
jecxz
jo
lods
test
mov
testl
adc
jne
mov
ret
aaa
stos
mov
adc
shll
js
test
das
sbb
mov
shl
inc
leave
adc
mov
scas
cld
fs
dec
xchg
dec
int3
xchg
dec
rclb
popa
mov
movsb
insb
sub
stc
in
sbb
mov
xor
in
sub
movsb
in
inc
pusha
mov
and
stc
pushf
add
and
pop
sbbb
inc
mov
outsl
pushf
sub
or
sahf
push
mov
test
loope
xor
ret
dec
xor
call
pop
xor
pop
xchg
add
mov
mov
sar
sub
repz
loope
lcall
imul
fistps
push
ljmp
fwait
shlb
xchg
sbb
mov
rcl
adc
xchg
test
xor
clc
xchg
lret
mov
popa
inc
mov
jg
add
fs
lcall
xchg
cmp
in
adc
adc
scas
lcall
icebp
leave
adc
jle
jecxz
jne
xchg
popf
jg
aad
push
push
lret
fnstenv
mov
fcoms
dec
xchg
pushf
push
imul
or
sub
test
aad
jno
shlb
jae
sbb
lock
das
out
inc
mov
imul
cmc
into
ja
and
pop
and
rcrl
xchg
sbb
test
ret
stos
idivl
addl
in
sti
mov
xor
dec
jmp
mov
inc
cmc
mov
lahf
pop
mov
loop
cmp
push
popf
xorb
inc
add
aam
pop
daa
loopne
iret
rorl
adc
cld
add
mov
xchg
mov
pop
mov
int
lds
fucomip
sti
pop
xchg
jmp
sub
ja
mov
add
xor
scas
xor
push
pop
add
sub
and
movsb
out
mov
jmp
sarl
pop
adc
xor
repz
jmp
pushf
lahf
and
add
mov
pop
rcrb
inc
xchg
bound
mov
mov
add
js
aam
add
mov
shr
mov
out
push
andb
sub
test
cmp
mov
jge
push
das
aam
stos
lods
lods
imul
insl
sub
or
gs
lods
sub
sub
cmp
lcall
dec
pop
xchg
cmpsl
pop
sbb
into
lods
mov
dec
test
testb
inc
mov
int
xor
lods
sub
inc
mov
into
xchg
hlt
inc
pop
loop
pop
les
and
dec
outsb
fildll
add
daa
ja
in
clc
aaa
ret
cmp
les
popf
scas
xlat
ds
sub
sahf
fcoms
in
cmpsl
popf
xchg
imul
fwait
shr
push
loope
fidivrl
leave
xor
mov
cmp
negb
in
inc
pop
inc
mov
push
out
dec
mov
xchg
sub
dec
mov
mov
sbb
xor
es
push
add
mov
and
in
js
inc
push
rolb
rorb
add
aaa
inc
ds
sub
inc
imul
pop
arpl
test
mov
xchg
dec
xchg
mov
xchg
addl
adc
jbe
or
test
out
sarl
dec
xchg
push
add
jae
repnz
jp
lods
fldcw
add
out
cli
cmp
fnsave
push
and
mov
mov
jecxz
mov
arpl
cmc
jae
adc
add
mov
inc
push
pop
push
mov
stc
daa
rol
xor
or
push
and
mov
test
ja
loopne
inc
out
xchg
rcll
mov
out
cmpsb
adc
cld
shlb
mov
das
bound
pop
jle
ret
lahf
and
pop
std
inc
xor
arpl
sahf
aaa
cmovns
mov
dec
outsl
jns
and
outsl
mov
fsub
dec
or
adc
cmp
lods
fisubs
pop
lret
lock
mov
movsl
mov
fisubl
nop
dec
cmp
xchg
xchg
out
inc
imul
hlt
pop
outsb
jo
les
rclb
push
jecxz
std
xchg
cld
lahf
pop
cld
mov
lret
aad
dec
mov
cmp
jb
js
and
test
dec
sbb
int
mov
xchg
mov
jge
jnp
test
mov
dec
mov
add
in
lcall
mull
jbe
push
sub
push
popa
push
es
aas
test
cmp
xor
mov
jb
aas
cli
loope
inc
pop
pop
cmc
daa
sbb
stos
cmpsb
pop
iret
push
scas
out
jecxz
movsl
aam
ja
subb
addr16
out
mov
outsl
add
push
and
xchg
add
push
push
sub
loope
mov
and
into
hlt
adc
inc
scas
pop
sub
jns
fmul
xor
nop
push
rolb
jmp
scas
push
xchg
movl
lahf
pop
mov
mov
pop
jbe
shl
das
mov
pusha
fdivrp
mov
sbb
jge
filds
xor
in
cmc
bswap
ret
adc
lcallw
cmp
mov
push
ljmp
sub
fwait
xor
fistpll
cmpsl
shr
in
scas
mov
and
aam
out
jg
cmpsl
es
jmp
data16
insl
xchg
fisttps
dec
xchg
xor
cmpsl
in
inc
nop
inc
aam
or
js
ficoml
pop
inc
cmp
popl
ret
cld
out
cwtl
add
pop
int3
jg
out
mov
jo
outsl
loope
int
dec
lock
push
xor
xchg
jnp
jge
and
mov
dec
add
mov
test
pop
xchg
rcll
aam
les
push
lcall
out
imul
pusha
mov
jmp
imul
xchg
outsl
mov
repz
std
mov
pushf
lds
add
add
pop
pop
imul
arpl
popf
pop
inc
dec
jb
mov
cmc
cmp
arpl
sub
xchg
in
push
xor
pop
fdivrp
or
sbb
dec
movsl
cltd
xor
out
insb
stc
out
inc
mov
or
xchg
push
and
int3
lds
mov
xchg
mov
cli
jno
rcl
add
dec
nop
mov
xor
push
movsb
xor
lods
sbb
sbb
pop
lods
test
and
sbb
xor
pop
mov
dec
in
mov
jno
fstpl
adc
sbb
mov
clc
or
xchg
mov
sub
adcb
sbb
push
adcl
jbe
test
test
jo
ljmp
xchg
mov
cmpb
add
pusha
dec
jns
repz
sbb
loopne
inc
inc
lea
and
fbld
jp
mov
or
xchg
repnz
gs
cmpsl
add
adc
mov
pushf
stos
pop
cmpsl
ja
into
and
and
loopne
dec
daa
ds
sub
pop
aam
pop
mov
push
and
mov
sub
jae
cmp
sbb
adc
jmp
cmpsb
shll
shr
fs
aam
leave
loopne
sub
movsl
jecxz
mov
jg
pop
add
frstor
lret
jo
xchg
and
mov
sub
and
jg
and
pop
push
int3
shr
xlat
mov
stc
push
sbb
fistl
mov
xchg
inc
mov
xchg
daa
cmp
lss
fucomp
cmpsl
out
cld
pop
cmp
int3
push
test
jne
mov
sub
sub
push
test
sub
push
mov
and
ret
push
in
push
cli
ffreep
jb
divb
push
insl
fimull
frstor
icebp
cltd
hlt
pop
add
xor
pop
push
aaa
gs
in
add
ljmp
leave
dec
in
cld
in
icebp
jno
out
mov
outsl
sub
adc
lods
mov
test
pop
shr
mov
cmp
in
push
mov
dec
pushaw
sarb
lods
mov
xlat
or
outsl
cmp
push
mulb
int3
iret
lds
pop
mov
jnp
mov
mov
add
dec
sub
mov
test
push
iret
push
sub
jecxz
push
cltd
psubsw
ret
mov
enter
std
inc
pop
or
push
xchg
clc
push
xchg
push
das
mov
jp
jecxz
stc
fistpl
fnstcw
cmp
repnz
cli
dec
cmp
adc
icebp
subb
loop
inc
mov
shrl
sub
push
loopne
or
sub
int
fstps
adc
test
pop
mov
cmp
int
lahf
lcall
xor
push
pusha
lcall
int
push
cs
popa
mov
out
and
addr16
outsl
add
push
push
sti
or
mov
sub
test
jecxz
inc
mov
cmp
xor
sub
dec
aam
jg
mov
sbb
out
xchg
push
pop
sub
mov
inc
fnstenv
pop
loopne
fildll
fcoml
jne
lahf
je
cmpsb
push
jae
sbb
and
jbe
or
outsl
cmp
cmp
push
sub
add
pop
mov
pop
mov
outsb
push
and
mov
mov
mov
xchg
cli
mov
ja
es
xor
push
and
loope
lea
cmpl
dec
rorl
divb
mov
sbb
cld
fdiv
aad
xor
std
scas
mov
imul
xor
test
xor
fistpll
lds
addr16
pop
aaa
loope
push
push
jmp
lds
int3
cmc
bound
rol
mov
aam
and
mov
js
pusha
dec
adc
pusha
sub
call
dec
out
xchg
dec
sub
das
and
sub
popa
pop
cwtl
push
adc
je
jl
adc
js
pop
mov
cltd
std
pop
xor
push
jge
or
mov
enter
pslld
cmp
mov
mov
mov
fcomp
out
bound
mov
lahf
and
push
xor
jbe
mov
mov
xchg
jnp
popf
xchg
push
hlt
xchg
incl
in
mov
hlt
sahf
movsb
xlat
xchg
test
pushl
pop
scas
fidivl
or
fcomps
push
add
shrb
push
add
std
xorl
pop
arpl
shll
mov
mov
pop
pop
mov
mov
nop
hlt
nop
cmc
insl
popa
push
mov
lcall
mov
mov
int3
testl
lea
bound
ficoml
setne
loope
sbb
pop
int
fwait
lea
ds
mov
push
dec
ficompl
icebp
fwait
xchg
mov
or
or
mov
pushf
stos
outsb
xchg
dec
sub
ja
sub
jg
gs
sub
cld
xor
jno
int3
dec
es
lods
icebp
dec
push
cmp
inc
xlat
test
ja
dec
and
xchg
sarb
sub
dec
cmc
push
mov
fst
sbb
xchg
mov
cmpsb
repnz
sbb
outsl
push
and
xor
les
mov
popa
pop
push
dec
mov
int3
bnd
and
pop
outsl
sar
xchg
stos
push
leave
and
pop
test
xor
dec
and
add
incl
lods
les
push
mov
and
push
cltd
cld
fwait
les
sbb
shlb
jecxz
flds
lods
out
shl
cltd
pop
fnstcw
inc
inc
mov
jo
ret
lock
scas
jg
push
inc
xor
adc
aas
cmc
cmp
dec
jle
push
dec
and
pop
stc
cwtl
loopne
es
mov
rolb
mov
inc
sbb
pop
jle
xchg
or
cmc
js
rol
mov
pop
scas
and
pop
arpl
das
popa
lcall
fldcw
loop
test
lret
mov
in
xchg
dec
je
push
mov
jns
ret
fadds
fstps
sbb
gs
and
loope
in
fdivrl
pop
adc
cmp
getsec
mov
xchg
xor
es
sub
in
mov
adc
jp
sbb
mov
enter
sbb
js
adc
lods
lahf
jg
icebp
or
mull
bound
data16
xor
imul
fisubs
fnstsw
rclb
jo
fwait
les
pop
arpl
dec
je
mov
add
sbbl
jbe
pop
enter
mov
mov
lret
aaa
outsb
mov
push
push
fstpt
jbe
scas
sahf
mov
les
enter
adc
arpl
ljmp
cmp
or
dec
mov
aam
jmp
push
jp
das
and
scas
jne
or
jmp
in
mov
pop
adc
shlb
mov
push
cmp
jg
fs
push
inc
outsb
xchg
sbb
jp
cmp
mov
movsl
fucomip
aad
jno
mov
daa
lock
mov
subl
dec
das
inc
mov
cli
mov
push
leave
aas
mov
popl
subl
push
popa
mov
push
adc
jecxz
inc
in
mov
sub
sub
xor
mov
xlat
mov
xor
and
out
push
ja
mov
sbb
loop
out
inc
pop
add
popa
movsb
pop
xor
mov
std
mov
call
cmp
ljmp
adc
adc
shll
int
jns
pop
fwait
xor
sti
jo
push
shrl
movl
mov
sti
adc
enter
movsl
icebp
cwtl
scas
mov
sub
movsl
test
loope
mov
push
mov
mov
xchg
loop
mov
sub
call
popa
testl
ss
rorl
rclb
add
pop
fsts
jb
mov
jae
cmp
movsb
sarl
mov
aam
xchg
stc
push
outsb
push
and
fdivrl
or
mov
mov
adc
lcall
adc
testl
mov
xor
jnp
cmc
sub
rorl
mov
es
movsl
std
add
push
je
fwait
testl
enter
push
adc
jle
jge
aaa
imul
pop
jb
cwtl
addl
sti
xchg
jo
push
pop
inc
mov
mov
hlt
xchg
pop
sbb
lahf
into
mov
push
inc
cmp
or
loopne
fdivs
test
inc
or
xchg
pushf
xchg
popf
inc
inc
loopne
pop
subl
xlat
addb
pop
std
or
xchg
fimuls
call
mov
mov
mov
ss
xorb
or
jns
sbb
mov
lret
add
or
aas
fnsetpm(287
cmc
sbb
mov
shrb
pop
pop
inc
shrb
or
out
addr16
push
or
push
or
jno
pop
ja
adc
pushf
mov
pop
mov
xor
xchg
popf
xchg
mov
insb
shlb
xchg
inc
lods
pop
dec
bound
shl
xlat
add
out
sbb
stos
arpl
add
sub
xchg
icebp
xchg
std
mov
xchg
sbb
pop
cmpsl
clc
nop
xchg
mov
dec
adc
bnd
push
outsl
popf
inc
sub
repz
ja
cmp
pop
mov
or
sbb
mov
ret
jg
sbb
lea
lods
cld
test
imul
call
mov
shlb
stos
iret
rcl
cmp
xchg
inc
cmp
lock
adc
xor
nop
out
gs
ss
jnp
ficomps
xor
mov
clc
inc
cmp
dec
mov
pushf
cmc
push
jecxz
cwtl
cmp
push
mov
dec
js
jge
out
clc
scas
jo
sbb
adc
add
stos
add
mov
pop
pop
adc
sub
addr16
gs
jmp
adcb
mov
mov
xor
ss
jo
call
movl
movsb
clc
xchg
in
sahf
adc
iret
xchg
into
out
sub
xchg
jnp
push
add
pusha
ss
aaa
std
ds
dec
adc
xchg
pushf
mov
rcr
jb
roll
ljmp
lahf
xor
stc
mov
xchg
nop
sbb
cli
push
mov
mov
dec
out
imul
das
lahf
mov
add
loop
sub
pop
cmpsb
adc
ds
adc
push
fisttpll
mov
dec
hlt
cmc
jb
cs
fisttpl
out
lock
dec
idivb
frstor
mov
add
xchg
pop
fisttps
jge
mov
sub
fists
test
icebp
in
lds
dec
test
insb
orb
sbb
pop
mov
loopne
ficoms
mov
jg
and
fidivl
call
loop
ds
jae
dec
aas
push
xchg
pop
or
jecxz
xchg
jle
ja
or
pushw
push
fsts
sbbl
or
jp
sub
fcmovbe
cmp
std
mov
loop
cmp
inc
and
fwait
sbb
xor
jge
and
int3
and
imul
mov
je
into
int
pop
xor
out
sub
and
ffreep
pop
addr16
rcrl
arpl
std
imul
cltd
mov
ss
addr16
je
bound
mov
outsl
sbb
pop
fadd
inc
movsl
jns
lret
sbb
cmp
popf
imul
out
pushf
xchg
rcrb
test
shlb
mov
imul
jge
movsb
mov
lods
test
roll
lds
mov
push
sbb
push
inc
inc
mov
clc
sbb
cmp
imul
inc
mov
sub
or
add
pop
sbb
js
sahf
add
pop
xor
stos
push
shlb
mov
adc
test
fists
jp
movzbl
mov
lods
mov
mov
jecxz
mov
jnp
hlt
lods
lahf
xor
lods
xchg
or
pop
xchg
adc
fistps
push
jno
mov
pop
add
roll
outsb
mov
jb
sbb
adc
xchg
cs
adc
sub
sub
testl
mov
pop
jns
xchg
add
add
rclb
pop
push
orl
mov
fbstp
pop
repnz
call
in
nop
fxtract
sbb
ds
mov
push
test
roll
inc
inc
sbb
pusha
cmp
sbb
dec
mov
mov
les
gs
adc
repnz
in
jl
sub
stos
shlb
repnz
dec
movsb
lds
cmp
sti
push
jno
fistpl
aam
xlat
mov
cmpsl
cmp
lret
and
and
psrlq
clc
jge
lret
cs
es
jge
sbb
dec
push
cli
les
jo
jle
insl
jg
push
and
les
test
test
jle
rolb
ja
mov
dec
mov
imul
jno
lds
addr16
pop
lcall
xor
les
out
test
aas
cwtl
cmpb
mov
das
lods
dec
pop
cmp
jg
call
xor
xchg
cmp
in
dec
fcompl
outsl
jecxz
shlb
pop
call
push
out
aam
leave
shrb
mov
mov
ret
jo
test
lods
xchg
fwait
cmp
mov
xor
inc
jnp
loope
out
imul
in
mov
push
pop
cld
fsubrl
sub
bound
inc
das
pop
aas
aam
sarl
out
or
xlat
push
shll
stc
or
or
iret
jp
ret
in
dec
mov
inc
push
sahf
mov
mov
aam
push
cmpsl
inc
and
das
imul
cmc
insb
push
mov
popa
cmc
in
xchg
sbb
sbb
jne
xchg
insb
icebp
mov
xchg
xor
hlt
pop
inc
push
jecxz
jno
mov
mov
out
stos
mov
fsubrp
push
jecxz
sbb
ficoms
je
push
adc
mov
jb
xchg
inc
push
inc
mov
mov
lds
ss
fmul
mov
inc
pop
pop
push
cmp
pop
femms
gs
out
pop
out
adc
ret
xor
out
lahf
loop
push
fadd
test
int
push
cltd
je
fs
and
pop
cmp
pushf
pop
mov
gs
adcb
not
repnz
popa
mov
cmp
repz
imul
adc
pop
int3
cld
sbb
mov
push
into
ja
push
inc
cmpsb
mov
or
in
lods
inc
push
dec
test
aad
int3
movsl
dec
rcll
inc
jle
xchg
aad
ljmp
pop
mov
adc
xchg
lcall
sbb
inc
push
fs
std
lret
sbb
mov
xchg
out
xchg
fmulp
movsb
pop
mov
mov
popf
inc
sbb
and
sbb
jge
mov
in
cmp
popf
dec
mov
insl
mov
repz
icebp
xor
sbb
cs
mov
arpl
pop
bound
or
ja
outsb
and
mov
push
dec
and
and
aas
push
pop
rolb
sub
jne
icebp
in
fcom
add
cli
xchg
pop
adc
popf
add
push
mov
fndisi(8087
dec
xlat
mov
mov
js
jo
xor
dec
adc
outsb
in
cmc
mov
xlat
cmp
jg
cmpsb
adc
inc
jo
adc
ret
cmp
sub
iret
mov
mov
adc
pop
orb
je
lock
arpl
rcl
pop
stos
mov
rorb
popf
push
inc
cwtl
aam
lods
call
mulb
out
aad
cli
test
in
sub
jp
lods
and
push
push
cwtl
jmp
and
leave
and
mov
mov
mov
xlat
xor
adc
lea
add
sub
add
popa
adc
in
push
fsubs
test
imul
imul
pop
sbb
shlb
in
push
lea
push
ss
flds
lret
jae
sub
jp
pop
cmp
jae
ret
add
push
xchg
fsubrl
cmp
mov
fcomp
adc
push
loop
scas
ja
dec
test
jmp
sbbl
push
divl
stc
aaa
popf
sbb
xchg
sbb
mov
std
adc
arpl
pop
daa
add
lea
hlt
or
addl
push
cmp
pop
flds
daa
pushf
fs
adc
add
adc
popa
fildl
nop
inc
lock
aad
js
in
or
sbb
mov
pop
xor
xor
jp
sub
mov
mov
fwait
lods
mov
push
lods
or
mov
addr16
jb
jo
popfw
mov
mov
xor
or
movsb
push
mov
xor
dec
addr16
lea
shrb
adc
ficoms
ljmp
lock
or
int3
mov
pop
or
stos
inc
mov
lret
mov
mov
shrb
push
cmpsl
adc
int3
inc
jbe
test
and
xor
aas
push
mov
push
dec
sbb
popf
sub
data16
mov
cltd
stos
daa
xchg
scas
inc
push
adc
fsts
ljmp
bound
fldcw
jmp
or
sbbb
icebp
xchg
out
mov
mov
push
xchg
xorb
sbbl
push
xchg
or
push
xchg
cs
aad
and
push
xchg
dec
add
pop
xchg
push
pop
bound
dec
inc
mov
test
dec
pusha
icebp
mull
and
testl
and
push
push
xchg
sbb
sbb
mov
jecxz
jne
mov
cmp
lock
sub
ljmp
mov
test
out
sub
stc
call
add
push
sbb
test
mov
lock
mov
test
movsl
push
js
je
popf
jecxz
xlat
mov
xchg
daa
cwtl
sub
stos
inc
movsl
into
enter
push
cli
adc
ljmp
cmp
outsl
stos
hlt
add
mov
scas
sbb
stc
adc
xchg
or
gs
adc
mov
mov
subl
pushf
sub
aas
ret
sub
sub
les
test
adc
pop
mov
mov
cmp
dec
enter
data16
test
icebp
ret
add
fcoml
in
rclb
add
jl
cmpsl
loop
sarl
mov
pop
sarl
dec
mov
mov
mov
xorl
fisttpll
arpl
fsts
xchg
mov
sub
push
pop
sahf
ljmp
enter
add
mov
fdiv
sbb
pop
inc
aam
or
dec
sub
sub
bound
test
les
push
adcl
negb
popf
inc
add
mov
jge
ret
push
jo
popa
adcb
add
xchg
fbstp
sbbb
and
iret
mov
jno
in
aad
hlt
out
mov
sub
scas
xchg
mov
inc
andps
cmpsl
inc
andb
lock
adc
movsb
jmp
xor
insb
sbb
cmp
push
rorb
leave
or
cmpb
mov
push
enter
mov
into
pop
add
pushaw
mov
lcall
ds
or
pop
lahf
inc
cld
adcl
mov
call
mov
mov
xchg
mov
aaa
arpl
xchg
lret
cmp
lods
test
inc
int
cs
imul
xor
ss
pop
xchg
in
lods
jecxz
pop
cmc
add
es
mov
xor
push
ret
arpl
fucomip
cmp
jns
pop
in
enter
xchg
dec
cmp
negb
mov
pop
nop
xorb
sti
push
loope
scas
cmpsb
mov
xor
ror
ret
or
dec
mov
aam
enter
or
cli
lret
mov
mov
pop
std
and
test
xor
fwait
xchg
outsb
xchg
dec
jnp
push
lgs
push
mov
push
push
jle
sbb
ljmp
test
inc
push
shl
xor
jbe
lret
jle
pop
jnp
push
scas
xor
push
inc
adc
push
dec
mov
and
sar
jbe
add
jg
mov
stos
sub
xchg
sub
mov
push
mov
cli
xor
add
mov
loopne
ljmp
int
xchg
lock
or
dec
add
sbb
pop
mov
incb
scas
lds
pop
mov
icebp
loopne
fwait
add
out
xor
xchg
sbb
in
leave
sti
jno
add
sahf
popa
rcll
jae
nop
push
test
push
addr16
fdivrl
repz
adc
xchg
fbld
dec
rorb
aas
jae
lret
cltd
mov
ljmp
rclb
scas
pop
add
scas
xchg
or
fstps
das
and
test
sti
aas
dec
lret
push
fiadds
cmp
scas
push
sub
jl
xor
aam
and
test
mov
add
xor
or
imul
fstps
sbb
leave
dec
aaa
mov
sub
or
divb
sub
pusha
or
push
mov
xor
sbb
aas
pushf
fxch
cmpsb
xor
bound
ss
sahf
out
test
push
and
test
or
cli
push
and
cmp
movl
mov
psubb
xchg
xor
clc
movd
cmp
xchg
inc
xor
lods
insb
arpl
rorl
outsl
adc
sahf
or
outsl
sbb
fistl
ret
mov
xchg
push
std
shrl
and
ret
xchg
xor
loope
dec
add
jne
pusha
pop
in
mov
arpl
mov
sbb
xchg
js
xor
addr16
xchg
cli
in
xlat
jg
cmp
xor
or
xchg
mov
aaa
mov
inc
dec
add
les
mov
mov
mov
mov
ds
scas
or
pop
pop
push
push
mov
hlt
and
pop
insb
in
std
aad
push
xor
mov
pop
cld
inc
mov
sbb
sub
inc
sbb
fwait
es
xchg
lods
jns
testl
and
cwtl
das
movsl
and
or
or
int
push
clc
jo
inc
repz
sub
jnp
jle
filds
or
xchg
xchg
add
sbb
xchg
mov
call
dec
call
or
out
imul
out
mov
sar
cs
mov
mov
ja
mov
lfs
test
cltd
mov
shrl
inc
dec
push
mov
fsubrs
test
les
mov
cmp
xchg
sbb
fstpl
mov
cmp
mov
incl
pop
or
das
jns
lods
das
cmp
test
scas
ret
js
mov
xor
add
jl
out
pop
push
pop
outsl
rcll
mov
lahf
sub
insl
xchg
push
adc
cmc
xor
and
ret
mov
pop
iret
loop
xchg
cs
ss
shlb
cmovle
sbb
mov
xchg
dec
pusha
fnsave
int3
test
aaa
cmp
mov
aad
push
fs
or
push
push
mov
out
out
adc
stc
roll
out
jecxz
push
enter
inc
push
pusha
dec
dec
cmp
das
or
and
test
fisttpll
enter
mov
jp
sub
inc
xchg
out
movb
push
inc
inc
add
and
jns
je
cmp
pop
cmp
lods
or
sub
pop
imul
sbb
std
les
dec
push
lock
or
das
mov
call
lods
fcmovu
cltd
popf
ja
push
fcoms
xchg
or
mov
inc
xchg
jl
fistps
mov
dec
lahf
fsubl
lcallw
push
loop
sbb
xlat
movsl
sbb
and
or
mov
push
gs
shr
dec
adcb
xlat
xor
sbb
ljmp
clc
and
out
jo
xchg
add
movsb
push
pushl
into
mov
fidivrs
rclb
rorl
test
mov
jb
sub
js
mov
xor
push
insl
es
cwtl
or
mov
pop
and
cmp
or
aaa
xchg
in
jle
mov
xchg
inc
mov
adc
lahf
and
mov
push
lcall
cltd
aad
mov
ss
push
shr
mov
push
not
adc
cli
push
divl
add
pop
fdivrs
add
mov
mov
loop
and
int3
repz
inc
lahf
xchg
push
and
cmpsb
js
push
ret
mov
test
arpl
js
pop
push
adc
insl
fidivrs
dec
aaa
mov
gs
mov
sbb
pop
add
lcall
push
cld
push
cmp
addb
add
jge
dec
xor
xor
adcb
aad
cmc
lret
lods
cmc
mov
repz
ja
jl
and
loop
mov
pop
pop
outsl
call
dec
adc
inc
mov
inc
or
jp
insl
lret
sub
inc
adc
test
lret
xchg
jle
cs
jne
xor
inc
jns,pn
lea
pop
mov
icebp
shrl
ror
aam
loopne
push
mov
sub
loopne
pop
jbe
stos
addr16
push
repnz
xchg
lahf
pop
push
out
mov
push
iret
xor
insl
inc
sbb
xchg
mov
lock
lret
jg
lcall
je
jp
sti
mov
vmovntdq
ljmp
pop
mov
mov
dec
sbb
mov
pop
mov
cli
jbe
xchg
sbb
and
int
and
sbb
xor
in
popf
or
jle
or
pop
xor
lret
pushf
mov
pop
dec
cli
mov
mov
xchg
push
inc
jg
incb
jecxz
aam
or
sub
ja
pop
xor
sbb
jg
pop
mov
xchg
xchg
sbb
pop
push
adc
stos
iret
sub
push
mov
jge
int3
xchg
and
or
dec
andb
jl
or
jl
sbb
sub
push
adc
jl
jl
xchg
mov
mov
testb
fisubl
cmp
lods
addr16
pop
inc
xchg
mov
rcll
ds
and
lea
dec
enter
dec
addr16
arpl
dec
dec
adc
push
push
ss
inc
hlt
mov
pusha
sub
ficoml
stc
push
scas
arpl
into
rol
testb
mov
out
insl
movsb
inc
pop
cmp
and
push
cli
xchg
movsb
aad
sub
pop
sub
into
and
push
push
jge
mov
mov
add
enter
in
out
fwait
and
sbb
out
jle
stos
sub
jp
testl
adc
in
xchg
divb
loopne
xor
loopne
push
clc
xor
pop
sub
pop
or
dec
test
lahf
pop
adc
pop
fnstcw
mov
add
sbb
fprem
sub
push
movsb
and
data16
popa
adc
cmovbe
sub
mov
dec
adc
push
dec
add
sub
ficomps
into
jmp
dec
insb
lea
aad
rcll
mov
loope
mov
test
data16
sarl
jbe
in
push
mov
xor
hlt
pop
inc
xchg
sbb
adc
arpl
lds
movb
sarl
mov
dec
or
in
out
dec
fstpl
jp
stc
sbb
or
mov
ljmp
rol
jo
loope
mov
inc
filds
ret
imul
or
popa
pop
adcl
std
gs
mov
pop
mov
add
or
mov
shlb
push
push
jno
lret
insb
shl
aaa
int
jecxz
jne
xor
pop
out
pop
push
jno
stos
xor
inc
xor
iret
sbb
daa
inc
xor
mov
sarl
in
mov
and
and
sbb
jae
cmpsb
lret
fisubs
dec
xchg
add
mov
pop
aaa
jae
cmp
or
dec
xor
jl
or
cltd
fxch
jl
out
mov
or
test
dec
aad
mov
jno
test
mov
addb
adc
sub
mov
sbb
xchg
out
movsb
lock
mov
push
pop
lcall
sub
mov
rorl
add
xor
push
push
popf
fmull
sub
jp
jle
mov
inc
mov
push
ja
inc
roll
pop
push
hlt
xchg
push
mov
aas
mov
xor
mov
stc
mov
scas
add
sbb
xor
fistpll
mov
jae
scas
inc
or
mov
jecxz
roll
arpl
mov
iret
lods
mov
sub
roll
hlt
jns
loop
lods
inc
test
cmp
notl
jne
cs
inc
jnp
popf
dec
lock
cmc
testb
xor
adc
orb
loope
fistl
pop
dec
xor
pop
ja
in
imul
xchg
std
and
lds
mov
in
dec
jle
fwait
sub
jb
test
and
data16
mov
jle
aaa
push
outsb
push
sub
cmc
in
rcll
nop
mov
cld
adc
repnz
lahf
adc
sbb
out
inc
out
inc
dec
lahf
sarl
inc
and
or
cld
ret
cli
dec
scas
add
xchg
mov
inc
sbb
nop
push
xchg
push
pop
sbb
mov
jo
pop
jae
mov
enter
addr16
hlt
lds
pop
jmp
hlt
fs
inc
popa
sbb
cmp
push
test
nop
insl
push
mov
std
mov
or
btc
add
out
xchg
add
push
xchg
mov
sbb
mov
insl
std
insb
rcl
dec
dec
dec
mov
dec
sbb
adc
push
cltd
mov
aas
mov
insb
mov
push
dec
enter
pop
aad
cmp
or
sarb
int
dec
lods
lcall
cmp
rep
push
testb
loopew
xchg
fsubrl
fcmovnbe
outsl
loopne
cmp
or
inc
add
adc
adc
xor
jbe
and
mov
mov
outsl
adc
shll
loopne
pop
das
dec
and
std
adc
test
pop
and
int3
lea
in
fbld
dec
inc
mov
or
mov
stc
and
cmp
cmp
mov
dec
xor
add
push
sbb
push
dec
sub
data16
jbe
sbb
push
loop
sbb
cltd
mov
mov
fadd
or
ss
inc
pop
xlat
push
cmp
jecxz
xchg
add
nop
add
pop
fdivrs
sbb
xlat
mov
mov
sub
xchg
rclb
xchg
pop
xchg
adc
es
cmp
dec
sbb
push
repnz
xlat
js
cltd
mov
fidivs
push
jne
push
cmp
in
cmpsl
xchg
push
adc
or
aas
cmp
mov
repz
mov
mov
cltd
adc
cld
loope
enter
pop
pushf
push
inc
imul
ja
cmp
xor
mov
das
les
mov
loope
cmpsb
out
cld
out
fidivl
inc
lods
std
das
adc
inc
in
mov
jmp
and
popf
stos
push
out
out
pop
dec
stos
outsb
shlb
pop
stos
mov
call
inc
loop
xchg
or
pop
fsubrs
daa
push
sbb
sbb
mov
lods
mov
adc
inc
or
adc
cli
pop
imul
addr16
not
xchg
add
push
loope
adc
das
sub
movsl
loopne
fisubrl
rcl
pop
adc
aaa
repnz
cmpsl
or
and
lods
ficompl
dec
jns
subb
lret
mov
or
jno
dec
xchg
imul
mov
subb
adc
sub
adc
mov
sub
adc
into
repz
jno
bound
pushf
scas
ret
dec
jl
push
sub
sbb
pop
or
sti
test
adc
fmull
mov
pop
ds
push
in
xor
fiadds
fnstenv
stos
loope
cmc
inc
shrb
jg
orl
xchg
and
aas
gs
cmpsl
in
pop
cmp
pop
mov
ljmp
ss
fwait
nop
jno
mov
jns
mov
sarb
dec
cmc
pop
or
daa
subl
outsl
lret
sar
lret
stos
jne
cwtl
push
les
xor
or
in
xchg
pushf
notb
jo
mov
push
fistps
jns
push
fs
outsb
pop
and
cltd
cmc
mov
out
dec
ret
inc
sar
mov
inc
dec
or
mov
call
or
clc
call
dec
pop
inc
imul
popf
sub
not
stos
pop
jae
inc
mov
sub
das
adc
lods
jmp
jnp
lret
dec
pop
and
xchg
enter
cmpsb
imul
xchg
popw
adc
test
dec
pop
jb
jb
xchg
sbb
jne
mulb
data16
ljmp
movsb
jecxz
adc
xchg
mov
shrl
fisubrs
push
push
and
adc
xor
sub
jne
and
xor
lret
loop
hlt
aad
sub
enter
add
movsb
push
jo
mov
rol
sbb
push
dec
ret
and
lret
mov
in
in
or
es
sub
adc
xchg
outsl
jp
fwait
arpl
xchg
or
adc
jg
cs
iret
sbb
sbb
mov
and
mov
test
orb
mov
cld
aas
rolb
je
pop
mov
xchg
sbb
movsb
xchg
mov
sarl
outsb
addb
sub
out
cmp
rol
test
gs
test
pop
cmpsb
sbb
push
add
mov
addr16
test
add
rcr
addr16
fidivrl
mov
sub
cmp
das
xchg
xchg
mov
pushf
shrb
stos
leave
outsb
sub
in
pop
mov
nop
dec
jae
int
roll
cltd
pop
repz
mov
pusha
mov
mov
inc
pop
and
adc
sub
push
shl
fdivrl
push
jae
push
sar
and
pushf
icebp
lock
pop
pop
testl
sub
sbb
jae
hlt
call
xchg
mov
or
cmp
popl
mov
xchg
movsb
jae
push
adc
inc
sbb
dec
jg
jle
xor
pushf
popa
mov
jp
push
lret
add
xchg
outsl
cmpsl
mov
add
sbb
sub
aas
push
push
add
lcall
cmpsl
movsb
pop
or
push
push
inc
pop
stos
lds
mov
push
sbb
fwait
push
pop
push
jnp
sub
cld
pop
mov
mov
mov
sahf
ss
xor
cs
jnp
imul
xchg
inc
add
xchg
leave
jmp
mov
add
push
test
mov
cmpsb
bound
sub
inc
shr
das
lcall
xchg
jo
jno
cmpsb
in
ljmp
js
ret
pop
movsb
das
cmp
sbb
push
jnp
sbb
jge
test
inc
mov
pop
stos
in
mov
into
inc
adc
das
ljmp
adc
push
shll
popw
inc
out
sub
push
ss
cmpb
jmp
insl
jbe
xchg
inc
in
jle
mov
mov
mov
test
pop
pop
mov
push
jbe
rcr
lahf
loope
inc
xchg
pop
lcallw
inc
push
imul
aam
cld
cmp
xchg
inc
push
pop
sti
sbb
push
cmp
lods
adc
jno
cmp
lea
insb
fwait
ljmp
mov
into
out
dec
sahf
xchg
xchg
fldt
push
imulb
into
repz
adc
mov
cmp
pusha
adc
int
push
out
mov
sub
mov
jmp
scas
out
mov
scas
pusha
mov
rcl
je
or
in
ljmp
add
xor
lea
adc
pop
sub
insb
mov
xor
inc
frstor
adc
in
jp
push
jns
call
fisubl
nop
mov
addr16
dec
imul
pop
sbb
imul
cmp
xor
mov
test
faddp
ss
or
movsb
pop
into
dec
aas
arpl
dec
nop
adc
cmc
and
sbb
push
jb
jb
sub
out
xchg
mov
shlb
cwtd
cmp
mov
and
fcompl
mov
jno
mov
lods
push
in
cmc
xor
jmp
cld
mov
xor
jp
inc
or
xlat
or
mov
or
cmp
push
loope
mov
mov
aad
cli
ljmp
adc
fcmove
dec
lahf
jne
push
xchg
clc
movb
inc
pushf
dec
mov
xchg
mov
add
mov
xor
xlat
jl
dec
and
sahf
es
in
add
jle
daa
in
in
mov
ja
sub
sbbl
inc
neg
push
loope
add
stos
jae
pop
cmp
pop
iret
frstor
fs
jle
roll
mov
pusha
or
popa
or
aas
adc
addr16
sub
sub
add
out
jge
pop
shlb
jo
mov
fstpl
ja
bound
test
sub
daa
fidivs
jmp
rcrb
dec
and
pusha
fwait
sub
push
xchg
addb
daa
dec
add
dec
test
aas
mulb
mov
push
ljmp
arpl
pop
cmc
jae
pop
xchg
and
ret
dec
testl
shll
test
cli
dec
push
adc
mov
iret
cli
pop
loope
scas
outsl
fstp
jo
push
cmpsl
xchg
cs
stos
push
and
test
pop
add
mov
jns
or
adc
es
and
lock
inc
rcrl
or
arpl
sti
cmpsb
inc
mov
xchg
xchg
mov
sti
into
ret
test
or
or
clc
dec
jl
and
test
outsl
mov
lret
push
dec
movsl
jno
pop
das
mov
fisttps
test
mov
sub
fstl
out
fs
daa
cltd
insl
das
je
mov
jno
sub
test
mov
cltd
fucomp
inc
or
dec
jmp
mov
jno
mov
fsubr
call
rcl
cmp
loope
xor
sub
sub
add
mov
iret
pop
jp
iret
imul
pop
xchg
jle
nop
test
pop
and
scas
push
rcr
das
sub
fcoml
sbb
aad
xorb
repnz
dec
cltd
cmpb
and
pop
xchg
ja
clc
pushf
adc
xor
and
push
adc
add
xchg
stc
fs
incl
pop
in
dec
mov
out
cli
out
cmp
fdivp
lahf
ret
divl
lcall
push
jge
mov
and
bound
fdivrs
mov
das
xor
dec
mov
out
xor
addb
mov
insb
inc
jmp
xor
fisubrs
sbb
pushl
stos
cltd
mov
cmp
fcomi
inc
arpl
jp
loop
aas
jno
pop
or
and
xchg
pop
enter
jg
pop
call
xchg
sbb
sti
sahf
scas
rorl
aad
pop
add
mov
mov
sarb
aas
fbld
mov
stos
insl
xor
xchg
rcr
xorb
and
xor
cmp
arpl
xchg
cs
leave
add
ja
in
xor
rcrl
scas
sti
dec
in
popf
xchg
xchg
jb
lcall
mov
and
push
jns
mov
nop
mov
ljmp
shll
lcall
repnz
xor
jbe
cmp
imul
es
int
pop
lahf
dec
fiadds
stos
inc
enter
push
sbb
in
mov
fs
movsl
cld
lahf
scas
sbb
out
loop
mov
scas
mov
loopne
ljmp
aam
mov
js
scas
xchg
addr16
das
cli
push
push
arpl
cmpsl
xor
or
pop
movl
fimull
jp
cmp
std
les
shrl
cmp
push
jmp
jle
repz
fnsave
sahf
aam
jmp
test
pop
stos
cmc
push
stos
cs
scas
add
test
pop
or
aam
dec
es
sub
jbe
xor
mov
jle
mov
fildll
or
jnp
loop
dec
push
aam
or
loopne,pt
sub
pop
lods
icebp
pop
or
lcall
mov
loope
ds
je
dec
push
lods
sub
cmp
xor
lds
stos
icebp
out
xchg
cmp
lret
call
mov
enter
ds
xlat
add
dec
and
xchg
xor
xorl
xor
push
mov
cmc
mov
sbb
test
mov
jbe
pop
bound
mov
daa
xorb
adc
movsl
js
sub
sti
out
jb
add
sbb
cltd
adc
je
add
push
das
pushf
add
xchg
inc
and
repz
stc
scas
int3
adc
pop
push
scas
in
je
cwtl
add
sub
mov
imul
insl
mov
push
mov
or
fnstenv
add
mov
and
push
nop
ja
shlb
mov
sbb
xlat
sub
loope
adc
pop
lods
pop
psubw
popa
and
mov
cltd
jecxz
cmp
lds
aaa
fldenv
stos
aam
int3
sbb
and
sub
subb
call
or
inc
sbb
jecxz
cmc
jne
aam
sub
mov
rcl
jb
add
mov
add
mov
cmpsb
fidivrl
add
inc
cmp
pop
jp
sub
jne
insb
xor
mov
fsubp
jo
mov
xor
cmp
bndldx
mov
ja
pop
subl
mov
jp
mov
push
push
inc
xor
repnz
and
loop
xchg
add
sub
fisttps
inc
movsl
ljmp
loop
loopne
subb
iret
jb
dec
sub
mov
daa
sahf
pop
in
and
dec
popf
jae
fsin
cs
fmull
mov
das
mov
sti
xchg
out
lcall
aas
in
add
hlt
fucomi
xor
xchg
inc
adc
dec
dec
inc
sbb
imull
fstl
icebp
dec
rcrb
leave
ret
jge
inc
jno
gs
push
mov
out
mov
inc
cmp
roll
out
lea
lahf
bound
je
lcall
adc
push
dec
int3
mov
xchg
fbld
cmc
xor
addr16
sbb
sbb
rcrb
jb
pop
out
mov
push
lock
js
in
add
or
push
sbb
or
jne
sbb
xchg
lods
jmp
sbb
dec
imul
test
sahf
cmp
pop
movsl
xchg
fldcw
stc
sbb
outsb
adc
push
lret
cmp
bound
nop
cmpsb
push
loope
or
adc
data16
adcb
rcl
mov
or
dec
gs
addr16
inc
int
test
jecxz
sbb
adc
adc
xchg
cmpb
sub
add
hlt
mov
fwait
lret
gs
cli
pop
mov
pop
cmp
xchg
aas
mov
inc
add
ljmp
mov
sbb
mov
inc
adc
push
xchg
das
ja
ss
dec
jmp
mov
and
and
jecxz
cmp
push
push
jmp
pop
shrd
shlb
pop
out
inc
outsl
mov
pop
aaa
negb
pop
and
aaa
xchg
jno,pt
cmp
dec
dec
push
pop
sub
es
hlt
jbe
icebp
movsb
and
fsts
pop
push
push
push
fsubs
cwtl
push
out
sbb
call
shrl
orl
pop
or
adc
dec
lret
sub
adc
xchg
add
call
outsb
in
ja
jge
inc
pop
xor
sub
int3
mov
pop
adc
fwait
nop
ljmp
or
adc
lods
pop
cmp
imull
sub
ret
jp
mov
mov
push
inc
xchg
mov
xchg
dec
inc
xchg
cwtl
testb
pop
dec
subl
xor
std
test
cmpl
push
sub
dec
mov
std
mov
mov
sbb
in
cli
adc
jp
les
shrb
icebp
test
xchg
and
mov
and
jbe
inc
movsl
jge
ret
and
popf
sbb
mov
inc
ret
subl
das
clc
dec
or
lea
cs
cmp
cmp
xor
testl
cmp
push
add
xor
push
das
ret
test
movsl
sbb
xchg
lds
inc
and
jnp
adc
add
sub
mov
mov
fisubl
jl
int3
out
fldcw
mov
fs
flds
xchg
popa
cwtl
call
mov
and
cs
int
xor
mov
nop
jbe
subl
dec
pop
insl
or
in
jecxz
dec
dec
addr16
or
aam
and
and
or
ja
inc
arpl
push
hlt
je
aaa
jg
popa
mov
cmpsl
shll
cmp
mov
js
jne
sub
sbb
dec
daa
jp
dec
leave
cmc
jmp
adc
fistps
rorl
loopne
or
sub
lcall
adc
loopne
sbb
test
repnz
dec
xlat
dec
mov
out
sub
pushf
xchg
sub
dec
jp
fsubs
or
mov
fistpll
pop
pushf
adc
and
mov
test
adc
sbb
or
dec
das
test
int
aaa
xchg
pop
mov
test
jbe
inc
fnstsw
stos
xchg
stc
lahf
inc
and
push
adc
sbb
pusha
fimuls
in
cmc
rcrl
outsl
lock
dec
jae
sahf
sahf
outsb
out
jbe
test
pop
pop
loopne
dec
push
mov
sub
daa
enter
insl
pop
cltd
aas
xor
testl
lcall
jnp
fisttps
fcmovnb
lret
mov
int
fstps
ljmp
lock
imul
insb
inc
mov
imul
jae
mov
xchg
daa
cwtl
ret
jbe
arpl
add
add
dec
imul
lret
xlat
inc
mov
mov
pop
cmp
icebp
rclb
je
sub
stc
lahf
lods
xchg
ficoms
insb
push
lea
push
in
adc
inc
jae
jnp
test
sahf
or
in
ret
leave
mov
xor
mov
xor
aad
xchg
out
inc
push
loop
jle
push
and
adc
pop
test
fsubrl
xchg
mov
loope
popa
adc
xchg
jle
pop
repnz
je
jmp
push
insb
xchg
xchg
ror
push
mov
cmc
nop
pop
clc
les
in
cmp
shrl
ljmp
push
cmp
jbe
andb
jne
dec
fisubl
ss
fstl
enter
dec
ss
mov
sbb
movsl
test
enter
jecxz
dec
aad
sub
orb
in
sti
orb
add
test
and
in
add
mov
pop
mov
cmp
ljmp
adc
mov
push
or
mov
xor
xchg
pop
dec
lea
mov
cwtl
movsb
mov
mov
addr16
cmp
mov
lret
jmp
cmp
cmp
pop
mov
es
fadd
pop
or
add
add
movsb
ret
sub
or
mov
movsl
cmc
push
jle
popf
mov
or
shlb
jmp
pop
ss
xor
insb
inc
subb
jecxz
stos
ss
fidivl
clc
jbe
stos
mov
jecxz
push
test
pop
shlb
mov
cmpsl
xor
test
and
addr16
cli
xchg
nop
dec
daa
jge
jae
mov
xchg
cs
jmp
jmp
jl
shlb
ret
mov
and
and
xchg
or
pushf
add
das
add
xchg
jno
push
out
xor
test
pop
inc
shll
adc
xlat
inc
jg
xchg
loope
bnd
jge
test
cmp
out
xchg
jg
jle
ja
push
sub
cmp
mov
and
cmp
cmp
mov
push
lcall
fwait
cli
mov
vmovlps
sub
dec
lock
cmp
sar
push
add
mov
mov
fists
or
icebp
ret
cs
and
cmc
push
mov
adc
int3
push
pop
xor
in
stos
add
sub
mov
cmp
sbb
push
imul
xchg
sub
mov
cmp
fadd
xchg
pop
cmc
lret
in
push
add
pop
mov
jl
stos
jg
xchg
cli
out
inc
inc
add
ret
test
lret
jbe
adc
call
outsl
jle
dec
sbb
cld
addr16
data16
mov
sbb
jbe
ficompl
int
shlb
mov
out
testb
mov
pand
scas
iret
push
mov
sub
sti
cmpsl
sub
imul
sbb
and
dec
scas
push
lods
notl
mov
or
jno
pop
fimull
sbb
call
nop
cmpsb
jg
and
fs
mov
pushf
xchg
daa
int3
shlb
ja
xchg
cmpl
mov
rorl
fsts
dec
cli
lret
hlt
sbb
push
icebp
sbb
daa
inc
push
inc
or
imul
mov
and
mov
mov
aam
jne
fidivl
cmpsl
repz
sbb
test
mov
lret
lds
dec
aad
push
sti
gs
pop
outsb
jbe
js
jb
loopne
ja
sysret
mov
sti
or
or
cmp
fs
mov
nop
hlt
fcmovne
cltd
out
mov
insl
adc
inc
test
mov
fdivrp
lcall
das
clc
out
sti
mov
out
mov
xor
lods
mov
fwait
xor
loop
xor
dec
repz
xchg
mov
xor
mov
adc
xchg
arpl
xchg
sub
fldt
iret
jecxz
xlat
xor
cmp
xchg
cltd
jp
test
fcomp
add
sub
out
enter
rcr
lcall
mov
test
arpl
imul
out
jg
sti
sbb
xor
decb
pop
shr
fisttpl
btc
add
cmp
add
pop
xor
leave
fldt
add
mov
jecxz
jg
sahf
push
and
rcrw
ret
insl
dec
cmp
imul
in
dec
pop
je
cmp
push
pop
aam
cmpsb
and
xlat
sti
or
dec
std
rcr
lea
and
xchg
adc
mov
push
and
xchg
jnp
sti
pusha
ficoms
xlat
mov
mov
xor
sbb
xchg
cmpsb
and
xchg
sub
xchg
sti
xor
sbb
sub
int
inc
push
jle
out
cmp
rorb
das
insb
mov
xor
push
sbb
ljmp
mov
frstor
and
dec
xchg
int
int
mov
xchg
pop
push
aad
xor
outsb
std
add
mov
mov
js
xchg
sahf
jns
adc
insl
add
xor
mov
rcll
adc
call
cwtl
in
sbbb
pop
push
in
ljmp
arpl
bound
dec
lea
mov
sbb
and
pop
scas
or
test
push
out
mov
insb
xchg
ds
mov
bound
push
aad
int3
pop
inc
shll
xchg
in
jg
les
cmp
in
and
sub
notl
jne
jns
fsubs
das
pop
psrad
loope
je
cmpsl
pop
icebp
les
das
out
shlb
imul
pop
lea
pop
pop
dec
mov
mov
lea
ret
push
ficoms
cmp
ret
addr16
inc
push
jnp
sbb
add
xlat
cmp
sahf
jmp
inc
mov
iret
mov
dec
lret
popf
fdiv
push
cmc
aad
ds
leave
adc
xor
leave
movsb
sub
stos
or
pop
jmp
lock
mov
mov
gs
mov
test
fisubl
imul
daa
clc
xchg
sti
jl
mov
fdiv
cmp
sub
loope
ret
lds
fsubrl
cmp
cmp
xlat
and
mov
inc
pop
mov
adc
sub
cs
lea
adc
jbe
mov
test
pop
insb
adc
adc
insl
popf
insb
daa
out
mov
xchg
je
mov
mov
imul
mov
in
faddp
sub
jmp
mov
xchg
and
and
push
add
ja
aam
popf
cmp
leave
ret
leave
nop
sbb
lock
xchg
imul
dec
sbb
enter
hlt
enter
mov
in
jbe
inc
movsb
jno
rcrb
daa
fisubs
sahf
jle
fisubrl
lret
xor
ret
mov
aad
int
stos
sbb
inc
data16
lret
pop
push
add
jbe
shr
pop
sti
clc
andb
push
sbb
xor
sbb
adc
sub
xlat
ljmp
add
mov
loope
xchg
lret
je
sti
lret
push
adc
lret
ss
insb
jbe
out
mov
adc
cld
sahf
jnp
scas
jo
push
or
sbb
push
data16
inc
ret
cld
das
push
cmpsl
inc
inc
jecxz
push
sbb
push
lret
and
test
stos
lret
rcrl
lods
daa
outsl
mov
push
ret
ja
push
push
flds
xor
push
mul
sub
rol
fbstp
jae
cmp
js
cli
out
adc
lcall
sub
mov
cmc
popf
or
aas
xchg
inc
inc
pop
lds
xor
repz
mov
fisubl
cmp
xchg
push
and
movsl
jecxz
clc
mov
dec
test
stos
loopne
test
sub
nop
ds
iret
adcb
rclb
fcoms
add
out
jo
mov
in
into
and
or
loopne
pop
xor
and
enter
out
cwtl
std
sahf
lods
call
test
addl
and
push
lds
loop
and
adcl
inc
repz
jb
aam
rcrl
or
clc
sub
nop
mov
repnz
ljmp
push
xlat
leave
sbb
inc
sbb
lret
insl
xchg
ficomps
jne
mov
or
mull
mov
xlat
and
xor
jle
jmp
arpl
fstl
cwtl
mov
rclb
aam
xchg
push
fs
insb
test
push
sub
and
adc
mov
aad
jge
rcl
cmp
ljmp
dec
mov
hlt
xor
push
adc
sub
fcmovu
dec
cwtl
push
inc
add
pop
mov
pop
in
inc
jno
xchg
stos
add
push
sub
mov
sub
or
bound
adc
hlt
pop
xchg
cmp
icebp
repnz
iret
mov
insb
mov
sahf
into
sbb
adc
insl
push
popa
mov
pushl
or
inc
rolb
les
cmovo
rcll
jnp
ds
sbb
mov
jno
cltd
icebp
mov
inc
es
lods
in
push
adc
std
push
push
mov
movsb
pop
xor
lret
cmp
das
fiaddl
sarl
sbb
jg
lret
push
mov
mov
mov
jecxz
test
fisttps
mov
lret
sbb
ret
mov
pop
out
dec
add
push
pop
stc
daa
mov
nop
stos
and
cmp
xchg
lods
mov
add
aam
pop
mov
in
pop
xchg
add
xor
cmp
das
out
and
xchg
ss
mov
pop
pop
dec
cmp
lods
lock
sbb
fwait
or
popf
imulb
idiv
xchg
pop
loop
fdivrs
jne
dec
test
testb
sbb
xor
das
test
sub
mov
jg
jae
xchg
in
dec
sbb
outsl
fdivl
dec
or
sarb
in
cmpsb
fs
sbb
insl
aas
dec
stos
push
pop
dec
add
insb
cmpsl
jge
lahf
out
inc
fistps
fs
test
push
loop
cmp
cltd
bound
rorl
das
and
pop
push
inc
or
addl
mov
push
cmp
inc
jno
and
sub
cld
stos
es
sub
jge
bound
xchg
lock
fwait
popa
clc
dec
mov
mov
hlt
adcb
xchg
dec
sub
cmpsb
call
gs
sub
icebp
push
xchg
dec
arpl
jl
sub
pop
gs
scas
inc
daa
repnz
cmpsb
rorb
rcrb
je
es
ljmp
jns
mov
jb
push
fisubs
cli
adc
repnz
jge
sti
in
sub
and
adc
inc
sub
and
lods
mov
mov
fwait
ret
es
cmp
push
lods
aas
push
mov
ds
cltd
mov
xor
pop
daa
xchg
cmp
xor
xor
inc
jge
ret
and
dec
xchg
and
add
add
or
jle
dec
daa
xchg
or
pop
ror
add
inc
ret
ss
xchg
adc
cmp
loope
pop
push
lahf
jp
dec
sbb
xor
inc
dec
or
pusha
jo
lods
inc
popf
ror
adc
enter
jae
mov
bound
out
lret
dec
or
and
pop
jbe
lock
fcmovb
loop
ret
popa
enter
int3
inc
cld
mov
aad
test
dec
adc
mov
xor
popf
lds
les
dec
movsb
das
dec
dec
fdivrs
fnstsw
movsb
jle
xor
testl
xor
jbe
mov
imul
jnp
lret
outsl
or
jp
cmpsl
mov
les
sbb
push
pop
add
jecxz
mov
icebp
mov
mov
scas
and
out
dec
adcl
mov
shlb
outsl
mov
cs
jmp
int
out
and
dec
sbb
inc
in
xchg
in
xlat
je
inc
movsb
push
repnz
mov
cli
mov
data16
sbb
movsl
jecxz
jnp
cmp
pop
and
in
add
pop
stos
mov
fsqrt
cmpsl
out
mov
loope
aas
test
mov
mov
xor
imul
pushf
cmp
mov
repz
fisubrs
mov
xchg
mov
clc
out
sbb
bound
insl
sub
fildl
jg
adc
add
outsb
mov
ret
jb
fwait
push
mov
loop
hlt
jo
fisubs
scas
test
shr
movsl
sarl
cmpsl
jae
mov
push
test
data16
push
pop
repz
push
xchg
or
je
push
adc
mov
xchg
sub
in
cmpl
xchg
pinsrw
jbe
rcrb
hlt
negb
jno
sub
cmc
out
xchg
lcall
and
inc
iret
push
mov
cmp
sbb
jns
in
stos
insl
pop
aas
push
leave
pusha
xor
push
sbbl
and
or
ftst
mov
xchg
fidivs
push
in
sysexit
add
ds
lret
pop
shrb
rorl
or
es
fwait
add
add
pop
mov
mov
data16
pusha
sbb
into
push
push
fstpl
popa
jl
mov
sbb
shll
adc
lret
xchg
mov
in
sahf
lcall
mov
and
into
push
dec
mov
sub
cmp
pop
push
leave
out
std
out
aaa
arpl
xchg
or
dec
sbbb
or
pusha
dec
out
int
ljmp
stos
xchg
xorl
shll
vorpd
and
cmp
mov
nop
mov
test
testl
cmp
ljmp
lret
mov
into
add
jg
cwtl
sbb
or
jnp
mov
jno
mov
aaa
mov
addl
lods
mov
add
fisttps
sub
dec
ja
test
cmp
loopne
mov
mov
push
cld
and
inc
pop
sarb
inc
mov
arpl
push
rcrb
bound
or
xorl
push
pop
push
jecxz
add
leave
xchg
push
cs
add
lock
mov
mov
jle
sub
xchg
push
and
mov
mov
cmp
insl
adc
rcll
imul
inc
aad
movsl
jecxz
xor
scas
mov
pop
test
pop
push
movsb
out
xchg
fcmovne
les
sub
inc
repnz
popf
push
mov
dec
les
fisubl
xchg
jbe
mov
cld
cwtl
dec
jnp
fsincos
shlb
hlt
ror
mov
icebp
icebp
jb
les
mov
mov
jle
ja
fisubs
sbb
fucomip
clc
inc
jns
xor
push
or
popf
add
insl
mov
dec
mov
xor
pop
inc
mov
imulb
inc
sbb
cmp
test
in
mov
xchg
mull
inc
cmpsb
or
shlb
jo
mov
loope
sbb
scas
rclb
mov
movsb
in
push
xchg
int
imul
push
fisubl
pop
out
sbb
mov
loopne
movb
xchg
sub
xor
xor
jne
xor
inc
or
cmpsl
xchg
sub
adc
test
aam
sbb
sub
adc
mov
jne
fidivl
sub
mov
in
push
jecxz
dec
jno
sti
int
pop
push
add
insl
lret
pop
cld
bound
cmp
aad
outsb
call
mov
gs
jp
xchg
dec
je
pop
fbstp
mov
mov
clc
jle
mov
sbb
aaa
leave
cld
aas
sub
pop
repnz
xor
push
lds
sarb
enter
adc
outsl
mov
dec
xor
mov
sbb
sbb
mov
iret
inc
jle
enter
adc
adc
pop
iret
mov
fldt
lret
xchg
add
fidivrl
xchg
hlt
stc
mov
stos
nop
mov
dec
lret
or
call
sub
shlb
cmp
pop
push
sbb
sub
mov
pop
sbb
stos
inc
dec
pop
leave
pop
stos
push
mov
jne
mov
loopne
test
jbe
sbb
in
mov
cli
div
cmp
pop
roll
mov
push
clc
xor
pop
add
push
ja
fadd
jge
cld
fcoms
xor
daa
xor
or
popf
dec
sbbl
adc
jns
sub
and
mov
sti
into
xchg
lods
ret
imul
push
fcomi
adc
adc
mov
ds
push
xchg
in
popa
adc
xor
fisubrl
xor
dec
int
sbb
inc
movsb
jb
adc
std
pop
loope
xlat
or
push
pop
hlt
vpsrad
and
cwtl
jg
mov
stos
mov
add
push
mov
jmp
xlat
mov
js
addr16
mov
loop
mov
inc
sbbl
jl
and
adc
arpl
lea
sub
dec
in
into
int3
insl
daa
daa
aam
and
repnz
push
add
lods
cwtl
cmp
fnstsw
inc
cmp
rorl
jae
cmp
push
sbb
cltd
pop
popf
jecxz
jge
in
xchg
movups
test
xor
int
int
in
jb
nop
daa
mov
mov
stos
mov
cwtl
and
gs
sbb
subl
push
cwtl
bound
je
iret
jge
or
mov
aad
les
es
movsl
inc
pop
clc
test
mov
or
and
fiadds
out
push
popf
stos
xor
test
cld
imul
rorl
aaa
mov
daa
push
jg
cmp
clc
inc
lahf
push
ja
out
adc
sbb
push
lock
push
jge
stc
jl
sti
ljmp
push
cmp
push
pop
ja
outsb
aad
fidivrs
mov
lea
push
cmpl
fdivl
pop
or
adc
push
std
inc
xor
insb
outsl
repz
or
jmp
scas
loopne
mov
mov
mov
mov
lea
hlt
loopne
pop
inc
xlat
imul
mov
sbb
push
push
pop
jno
out
cli
pop
inc
test
mov
cmc
fwait
mov
test
jno
jns
mov
call
jecxz
push
pop
rorb
push
cli
mov
arpl
push
out
inc
mov
push
std
and
mov
iret
gs
bound
ljmp
lcall
push
xorb
and
out
push
jge
inc
or
notl
pushf
xchg
add
js
scas
in
push
scas
pop
imul
divl
imul
aad
jp,pt
or
and
sbb
popa
lds
js
inc
ds
pop
cmp
push
cmp
sub
cmpsb
sub
inc
mov
or
fbld
xor
roll
dec
insb
popf
jne
adc
mov
cmp
mov
xor
jo
add
sbb
into
aam
mov
push
push
in
incb
sbb
inc
in
push
pop
call
jo
dec
add
jg
popf
cwtl
add
mulb
inc
insl
and
mov
push
jnp
xchg
in
cwtl
push
xor
mov
pop
mov
in
lahf
popf
arpl
nop
mov
lds
xor
aam
inc
ss
cmp
mov
jge
in
push
xor
popa
sub
scas
leave
int
lods
xor
mov
fldt
fsubl
push
sbb
out
in
cwtl
push
pop
xchg
fisubrs
out
loope
push
rcl
jmp
gs
xor
rorb
pop
dec
mov
pop
pushf
call
pop
xor
test
testl
sbbb
sbb
test
fs
outsl
lock
jae
dec
pop
xchg
in
mulps
data16
ret
or
insl
in
ljmp
movsl
movsb
dec
mov
ja
lock
xlat
adc
mov
clc
xor
js
cmp
add
inc
cmc
sub
sub
aas
lods
adc
daa
imul
mov
mov
mov
push
scas
and
and
das
ret
and
adc
ss
popa
adc
addb
ljmp
mov
xor
fmull
out
clc
add
fs
in
and
cmp
xchg
call
lcall
sbb
shr
push
jno
cmp
jns
cmp
or
sub
cmp
out
xchg
stos
fildl
jg
mov
jns
xchg
repz
pop
sahf
jnp
scas
leave
arpl
jnp
xchg
push
add
gs
pop
mov
aad
nop
sub
and
iret
loope
out
mov
cs
mov
mov
lods
stc
lea
mov
test
sbb
outsl
or
in
movsb
inc
imul
mov
cmp
lds
jnp
loopne,pt
mov
cmc
sub
scas
ret
mov
inc
imul
cmp
das
or
shlb
xchg
sbb
inc
jmp
and
cli
sbb
inc
call
loope
pusha
mov
sahf
xchg
repnz
inc
shrl
ret
outsb
push
and
sub
aad
add
xchg
inc
xchg
push
fcmovne
add
mov
frstor
dec
fbstp
rolb
dec
push
cmp
jno
cld
rcrb
jp
shll
mov
push
in
sub
xlat
jp
ja
arpl
ret
adc
cli
jl
mov
lods
fidivrl
push
mov
push
into
dec
mov
ror
rcrl
cli
mov
add
testl
cmpsl
mov
xchg
and
xchg
imul
xchg
aam
jp
push
scas
fstps
daa
add
roll
mov
xor
pop
mov
enter
mov
imul
rorb
cli
xlat
addr16
lods
xchg
push
out
aaa
xchg
cld
push
mov
mov
out
cmp
push
push
cmp
movsb
xor
notl
pop
pop
lock
sub
aas
mov
mov
aad
xchg
mov
mov
out
ret
mov
es
sub
dec
mov
or
sbb
pop
lahf
mov
xchg
cmpsb
movsb
pop
pop
stos
sbb
mov
jno
aam
stos
mov
ret
sbb
pop
out
leave
lock
movsl
mov
int3
testl
mov
paddd
inc
mov
inc
xor
mov
cmp
cmp
mov
shlb
cmpsb
mov
jecxz
inc
xchg
mov
sub
enter
jmp
pushf
mov
and
insl
shrl
js
hlt
push
daa
leave
das
mov
xchg
dec
in
into
and
cs
stos
daa
insb
mov
xor
out
and
sub
mov
or
push
sub
add
xor
mov
jl
loop
ds
dec
stos
rcl
inc
push
inc
les
shll
idivl
cmpsb
arpl
xorl
mov
ss
dec
push
mov
out
adc
imull
inc
leave
xchg
loopne
stc
faddp
adc
loopne
fcoms
call
sbb
loop
sti
in
in
fisttps
ljmp
ljmp
inc
xor
add
jecxz
jnp
push
dec
sub
aas
fs
sarb
cmp
dec
std
fsts
cmpsb
lret
mov
mov
bound
mov
lock
je
cmp
dec
and
xchg
jns
pop
mov
shrb
insb
fwait
add
sbb
jne
mov
inc
ret
push
loopne
mov
repz
lahf
pop
pop
gs
es
clc
add
mov
sbbl
pop
inc
mov
adc
dec
jb
fistpl
mov
std
maskmovq
notl
mov
xor
xchg
negb
or
sub
aas
dec
pop
adc
mov
jl
fsts
adc
test
jae
mov
pop
dec
mov
cmpsl
les
loop
cmp
in
push
sub
cmp
push
out
mov
push
push
loope
es
aas
push
jle
fmull
enter
adc
inc
sarb
insb
mov
loope
out
xor
movsl
ret
roll
stc
mov
xor
test
fsubrl
int3
mov
iret
popa
lock
pop
in
xor
mov
dec
in
push
movsl
in
lahf
mov
pop
stos
mov
jb
jb
lret
push
out
js
mov
or
push
adc
iret
mov
int3
cmp
mov
cmp
push
fs
mov
je
inc
iret
ja
adc
sub
inc
cmp
outsl
enter
mov
mov
dec
mov
push
bound
adc
addb
mov
rol
dec
push
pop
out
inc
daa
mov
xor
testl
pop
jge
jns
dec
mov
xchg
ljmp
jle
add
and
xchg
mov
test
dec
lock
outsb
xor
adc
or
cmp
pop
enter
jl
mov
pop
inc
inc
popf
stos
push
jle
sarl
sbb
push
dec
dec
test
es
sti
adc
jo
xor
jge
repnz
ret
mov
cmp
inc
add
pop
mov
push
movl
sub
hlt
lock
mov
mov
cmp
aas
rcrb
pop
mov
or
test
jo
dec
add
rcrl
sub
add
jb
insb
lret
sub
test
pop
dec
or
test
cmp
and
rolb
cld
dec
xlat
sbb
xchg
mov
es
cmp
xor
iret
or
sub
adc
sbb
pop
xchg
mov
inc
into
xchg
cmp
mov
xor
clc
xchg
mov
mov
cmp
adc
into
out
adc
pop
int
nop
or
lock
inc
cwtl
lret
repnz
loope
xchg
mov
ret
into
pop
sub
fimull
pusha
cmp
pop
inc
gs
bound
inc
sub
cmpsl
push
cmpsb
jl
loopne
stc
mov
mov
pop
jl
fdivs
popa
outsl
cmp
mov
push
xchg
xor
in
xor
xor
fiadds
test
ds
sbb
insb
movsb
xor
js
sbb
dec
loopne
mov
push
sub
pop
mov
adc
out
or
sti
into
std
jns
add
hlt
lods
xchg
pusha
ret
jl
sahf
lret
ja
test
test
into
xor
sbb
xchg
mov
or
cs
jne,pt
push
addr16
mov
mov
mov
dec
hlt
dec
nop
jg
xor
rolb
mov
mov
loope
ss
rcll
sub
fistpll
movsl
addr16
in
scas
mov
in
mov
decl
das
add
push
cmp
ja
cld
inc
pop
notl
outsl
jmp
out
mov
pusha
xchg
sbb
pushf
stos
sbb
idivl
js
andl
jge
sbb
mov
push
and
out
addr16
xor
jl
ret
aad
fwait
add
mov
push
cmp
in
sub
cli
sbb
mov
test
leave
pop
and
hlt
dec
insb
adc
push
or
clc
mov
jae
daa
imul
and
jno
add
add
jns
sub
out
ja
insl
ljmp
fimull
push
mov
adc
pop
pushf
sarb
out
aas
out
test
cli
cmp
inc
mov
ret
cmp
pusha
mov
sbb
push
jbe
rcll
jae
and
or
xchg
cmp
test
lea
mov
mov
xor
add
cs
sub
inc
mov
or
inc
into
pop
mov
mov
cmc
mov
shll
adc
cmp
mov
mov
dec
mov
jecxz
xlat
push
mov
xlat
loop
nop
ss
mov
or
fwait
dec
or
mov
push
mov
inc
or
adc
mov
add
mov
mov
into
test
lock
lock
cltd
mov
inc
stos
shr
stc
sahf
sbb
mov
push
leave
mov
xor
sahf
pop
ja
mov
and
pop
orl
xor
repz
fwait
mov
push
mov
popf
cwtl
push
mov
pusha
mov
adc
push
push
inc
mov
mov
pop
cs
fidivrl
nop
movsb
mov
jle
and
es
inc
out
lds
arpl
inc
ljmp
ljmp
arpl
and
and
push
sbb
pop
inc
xor
pop
aam
aas
mov
and
aam
out
int3
lahf
rcll
bound
clc
sub
jno
mov
or
in
mov
into
dec
cmp
test
mov
xchg
mov
inc
data16
test
push
add
or
pop
ret
and
lret
xor
sub
mov
jp
jmp
mov
and
xchg
cltd
imul
dec
gs
sbb
movsb
mov
fwait
scas
fisubrl
mov
add
xchg
or
cmp
inc
dec
jp
pop
int3
rol
pushf
or
inc
loope
das
and
adcl
mov
lret
pop
push
inc
mov
xchg
roll
das
ffreep
test
pushf
pop
cmpsl
dec
iret
dec
cmpsb
mov
push
xor
or
mov
mov
in
fcmovnbe
push
push
aas
xor
or
pop
push
pushf
mov
xor
cltd
arpl
pushf
inc
mov
shlb
sbb
mov
jmp
pop
sbb
hlt
mov
dec
popf
jne
daa
pop
fmuls
and
adc
adc
adc
int3
fstl
mov
cmpsl
push
add
loopne
push
jb
mov
dec
gs
in
jns
jne
repnz
xchg
sbb
decb
cmp
mov
ret
dec
jg
add
xchg
cmp
cmp
fnstcw
and
fildl
mov
jno,pt
stos
inc
xor
push
xchg
jp
xor
fdivs
mov
push
int
push
jge
sbb
adc
xchg
adc
inc
cli
inc
xor
stos
int3
fidivs
inc
xchg
les
xchg
insb
mov
repnz
idivb
pop
shr
and
mov
jp
push
push
sub
or
ss
fbstp
dec
jno
out
xchg
out
mov
mov
loopne
mov
xor
outsb
lods
sbb
dec
mov
arpl
sbbb
loope
xchg
mov
add
aas
movl
or
xchg
movsb
xlat
loop
test
test
out
mov
push
insl
pop
in
adc
push
adc
sbb
lret
roll
push
jnp
sub
jno
add
aaa
jno
push
inc
sarb
sbb
cli
mov
fistl
pop
out
xor
clc
add
jnp
into
mov
into
jns
jmp
pop
or
xchg
jb
sub
sbb
mov
mov
and
xor
xor
popa
pop
inc
add
dec
fldenv
pop
out
xor
push
cmp
sahf
push
comiss
shrb
fldl
outsl
and
stos
lds
fnsave
fisubrl
movsb
pop
mov
aaa
jg
inc
mov
sti
xor
je
sarb
jmp
add
and
movsb
xchg
add
or
or
aas
xor
jno
repnz
stos
jge
out
fcmove
xchg
insb
arpl
inc
jp
pushf
pop
dec
sbb
fistps
out
in
stc
push
cmpsl
adc
sbb
push
push
aad
xor
out
mov
pop
pop
push
popa
testl
push
mov
jbe
data16
push
sbb
push
push
jg
mov
dec
pop
push
cmp
ds
xchg
push
fs
testb
mov
add
adc
out
pop
mov
cmpsl
daa
or
pop
mov
nop
std
mov
cmpsb
push
fsubl
add
dec
test
subb
push
fildl
add
xchg
jp
push
outsl
in
mov
cli
sub
mov
pop
fisttpl
negb
push
xor
cmp
outsb
xchg
fcoms
negl
and
stos
lret
and
cmp
cli
jge
lock
lea
clc
call
in
sub
xchg
insb
movsl
add
rcll
push
sub
int3
popa
stc
add
sbb
sbb
cmpsl
ss
sbb
cmp
cli
mov
popf
mov
jg
js
push
or
imul
adc
xor
adc
repz
mov
push
stc
ja
adc
mov
jo
ret
sub
mov
inc
cmp
and
mov
push
out
mov
out
mov
cmp
inc
stos
xor
popf
mov
dec
pop
xchg
das
jns
push
out
inc
iret
fimuls
sbb
and
mov
aad
mov
rorb
cmp
and
je
jb
shr
adc
ljmp
pop
adc
xchg
mov
loopne
mov
std
shlb
mov
in
jg
sub
mov
sub
or
inc
rcll
ja
or
pushf
inc
std
dec
dec
fstpt
pop
sti
xor
imul
adc
movsl
data16
inc
push
or
cmp
jl
aad
icebp
in
adc
std
xorb
fucomip
les
dec
jnp
mov
jle
arpl
mov
repz
dec
mov
shrl
pop
mov
in
push
aam
mov
dec
int3
xor
nop
xchg
pop
mov
scas
aaa
loope
jb
push
cmpsl
jmp
mov
inc
xor
xchg
jmp
jns
test
or
lcall
push
inc
data16
rcll
mov
cmc
xor
xchg
fcoml
or
inc
push
cmp
jae
sarl
mov
shlb
ret
add
mov
push
dec
push
adcb
or
inc
mov
cli
sbbb
xor
leave
js
or
push
push
xor
push
push
pop
les
ret
dec
ror
pop
fs
dec
mov
jg
xorl
cmp
rorl
cwtl
rcrb
in
jg
and
inc
sub
leave
loop
push
fisttpll
pop
mov
pop
pop
mov
ret
stos
fbld
stc
sub
jb
add
sbb
mov
imul
std
out
add
push
sub
cmp
xor
mov
sbb
mov
repz
sti
jnp
and
pushf
adc
aam
loope
aam
add
inc
cmc
jae
and
into
pop
fmuls
mov
xor
cwtl
mov
out
or
push
or
add
jnp
ret
jmp
xchg
std
inc
insl
sbb
insl
pop
cmp
cli
iret
dec
cmp
insl
push
rclb
int
mov
xor
add
mov
xchg
call
ds
and
call
icebp
pop
dec
fst
outsb
pushf
in
pop
inc
je
sub
dec
pop
inc
pop
pushf
sub
adc
mov
arpl
rorb
scas
mov
shlb
jne
jns
out
mov
adcl
scas
aad
sub
into
cmp
ret
cld
orl
mov
das
jmp
movsl
add
andb
sbb
mov
jmp
pop
mov
int
push
outsb
jp
push
das
add
adc
pop
push
aas
dec
inc
xchg
xchg
cmpsl
arpl
mov
stos
lret
mov
btr
cmpsb
xor
mov
fldt
rcrl
pushf
push
aam
pop
ja
lds
sub
mov
repnz
aaa
js
cli
fstp
fnstcw
inc
and
sbb
popa
sub
lahf
add
or
xorb
inc
xor
sub
mov
pop
fistl
movsb
test
or
pop
xor
cld
adc
push
ret
xchg
sbb
sub
shll
sub
ror
subb
adcl
pop
cmp
out
add
cli
sub
pop
cmpsb
mov
inc
mov
imul
jle
aad
mov
pop
push
cltd
mov
ds
mov
jnp
xchg
shll
mov
dec
mov
xchg
fstpl
insb
or
or
orl
aam
mov
shlb
pop
mov
cmp
out
jp
repnz
out
add
cmp
dec
cmc
adc
adc
lods
pop
inc
push
lods
adc
add
rolb
std
popa
rcrb
inc
nop
inc
cs
fisttpll
or
mov
mul
sub
mov
xchg
mov
orb
jbe
int
pop
mov
sub
jo
adcb
outsl
call
push
and
push
add
jge
pop
iret
push
jb
xor
mov
push
dec
push
ficoml
std
lret
sti
outsl
or
daa
cmp
add
in
cmp
stc
mov
mov
push
push
push
ss
mulb
outsb
hlt
pop
lods
or
jmp
jb
mov
push
js
cmp
idivl
push
jl
dec
xor
or
int3
mov
out
pusha
or
inc
xor
cmpsl
inc
aam
jle
fwait
imul
xor
fnstsw
sbb
or
aad
fidivs
ds
jg
mov
dec
xchg
test
push
xor
out
leave
inc
out
xor
sub
faddl
add
adc
adc
sub
icebp
fdivp
cmpsb
mov
jg
mov
xor
xchg
push
scas
and
mov
mov
je
mov
push
cmp
dec
add
dec
xchg
es
mov
shl
xor
mov
jb
fidivl
xor
mov
inc
or
xor
add
pop
dec
das
pop
call
movsl
nop
dec
decl
sub
call
in
push
pusha
pop
cmp
push
or
sahf
outsl
jge
mov
mov
push
iret
xchg
stc
xchg
idivb
mov
mov
pop
push
add
lods
fldl
es
outsb
fsin
mov
add
push
es
stos
cltd
insl
dec
std
add
adc
subl
xchg
lds
mov
ljmp
and
cmpsl
scas
dec
jmp
scas
dec
or
xchg
leave
mov
adc
out
pusha
rclb
xor
ret
cmp
push
xchg
mov
or
aas
ljmp
pop
jl
mov
inc
jl
es
or
mov
stc
mov
fldt
or
outsb
sub
insb
pop
or
pushf
nop
dec
push
xor
or
stos
fmul
sub
and
movsl
xlat
fsubrl
cmpb
jecxz
xchg
test
cmp
jmp
cmp
imulb
jb
popf
jne
in
out
insl
jae
add
adc
psllw
push
lods
bound
enter
leave
cmp
cmpb
lcall
es
cmp
les
push
pop
cli
jne
dec
rcrb
shrb
or
iret
mov
ljmp
ljmp
jge
mov
test
sub
xchg
and
aas
fidivl
ficoml
dec
mov
sbb
imul
or
or
ljmp
mov
xorl
iret
xchg
xor
mov
test
mov
sbb
dec
lods
fidivl
js
or
mov
jecxz
aas
and
and
jno
repz
lcall
ficompl
sub
cmp
sbb
lret
push
enter
daa
add
insl
xor
cwtl
inc
mov
mov
outsl
mov
insl
lds
xchg
add
inc
inc
jmp
ret
add
idiv
lods
lret
ja
testb
std
imul
cmp
js
ffreep
test
xchg
xor
lods
testl
aam
xchg
pusha
xchg
sbb
and
jmp
mov
ret
movsl
mov
xor
out
cmp
pop
xchg
or
gs
and
arpl
rorl
push
sub
js
outsb
jnp
cmpl
and
xor
xchg
popf
cli
clc
popa
push
xchg
cwtl
xchg
inc
push
cmp
test
mov
emms
lret
aaa
jecxz
xlat
jp
inc
pop
repnz
daa
sti
lahf
push
cmp
out
mov
int
call
pusha
inc
jae
sbbb
fwait
arpl
bnd
add
mov
cmpsl
stc
ret
adc
inc
cli
inc
enter
cmpsl
out
push
and
push
cmp
icebp
clc
xor
mov
jp
xrelease
jae
mov
imul
ret
xchg
pushf
out
jg
push
xlat
mov
dec
scas
lods
sub
mov
cmp
xchg
cmp
dec
pop
push
scas
inc
pop
sahf
cmp
repz
out
arpl
mov
pop
xor
aaa
cltd
mov
jl
call
push
cld
cmc
mov
jbe
sbb
mov
jl
mov
pop
pushf
dec
mov
pop
or
lret
and
inc
fcompl
add
push
scas
fisubrl
aaa
sub
xchg
jne
pop
test
popa
popa
rolb
es
mov
divb
xchg
loop
ljmp
mov
cwtl
pop
call
push
lret
push
pushl
addb
into
xor
ss
mov
aad
mov
jnp
jns
jb
cmpb
or
jnp
inc
std
push
pusha
mov
mov
mov
jmp
xor
in
fimuls
mov
cmp
pop
fbstp
mov
std
xlat
inc
cmp
cmp
dec
dec
xor
rsqrtps
out
rcrl
les
mov
jne
xchg
mov
fwait
mov
ss
push
fisubs
leave
jmp
gs
dec
xchg
mov
sbb
repnz
fwait
sub
pop
sbb
mov
rolb
leave
xchg
mov
sbb
cmc
shrl
cmp
inc
or
push
popf
sbb
sahf
push
or
xchg
sub
loopne
jns
mov
andl
xor
mov
jp
or
lds
xchg
xchg
mov
mov
daa
arpl
sub
push
cltd
cwtl
bswap
xchg
dec
insb
cmc
scas
or
jno
out
sti
mov
loop
insl
pop
cmpsl
dec
push
xchg
sbb
xchg
push
pop
enter
bound
ds
jnp
mov
test
aam
scas
mov
dec
jnp
mov
test
clc
test
add
jno
outsb
push
inc
lock
jno
ret
dec
movsl
js
sbb
mov
or
mov
jns
pop
test
push
push
mov
paddb
xchg
into
push
jno
mov
pop
lock
outsl
jnp
cmp
popa
stc
inc
cmc
lret
dec
xor
aam
mov
or
ret
lock
lret
test
out
dec
jle
inc
inc
inc
movsl
xchg
mov
neg
cld
mov
fadds
mov
xchg
orb
add
repnz
mov
movsl
out
jbe
mov
adc
inc
cmp
jmp
lock
push
adc
jge
mov
lcall
ljmp
pop
pop
jb
and
pusha
psubsb
test
cli
int3
inc
lds
flds
jb
fcompl
or
mov
rolb
jbe
stos
je
dec
pop
mov
movsb
xor
es
jnp
test
pop
into
sbb
insb
add
mov
mov
inc
fwait
push
push
dec
rcrl
xor
mov
inc
mov
cli
dec
imul
sbb
xchg
xor
out
loopne
sbb
mov
mov
aad
or
rclb
lods
jp
dec
inc
push
in
subb
test
cld
jg
xchg
cmpsb
cmp
inc
push
cmp
outsl
sbb
xor
in
adc
insl
aas
mov
pop
push
jb
jge
sti
pop
call
rorb
push
mov
arpl
jbe
push
and
popf
add
pop
testb
push
sbb
xor
data16
popf
mov
jnp
jne
inc
pusha
jbe
dec
repz
cltd
lods
or
or
dec
cwtl
or
stos
je
push
les
imul
jmp
test
jge
adc
push
mov
int3
dec
inc
lds
je
fildll
xor
cld
int
in
adc
add
imul
rorl
fcoms
ss
repnz
icebp
mov
fs
jno
test
jge
cmpsl
jnp
cmp
mov
jae
test
xor
push
loop
dec
adc
add
inc
cwtl
gs
fsubl
pushf
jl
mov
cs
lods
insb
xchg
cmp
imul
xor
pop
mov
xor
outsb
adc
sub
sti
addr16
loopne
mov
incb
loop
xor
orb
enter
sbb
ss
enter
xlat
sbb
ret
and
rcll
push
sar
sub
mov
mov
fnstcw
adc
dec
jno
mov
mov
push
mov
stc
imul
mov
lea
jecxz
loopne
and
nop
rcrb
pop
push
repnz
ret
push
popf
fnsave
jns
jbe
ljmp
roll
sbb
inc
cmc
jns
mov
mov
pop
ret
sbb
cs
xor
cmpsb
cmp
sbb
shr
mov
sbb
push
outsb
lret
in
xchg
mov
cmp
xchg
daa
dec
jae
clc
jle
mov
rclb
mov
fwait
add
mov
mov
add
dec
fcoml
xchg
pop
xorl
test
cmp
or
jecxz
cli
into
sub
scas
loope
adc
fsubrs
call
jne
lds
pop
inc
jmp
sub
push
xor
inc
mov
mov
xchg
sbb
sub
jno
ja,pn
inc
pop
jnp
bound
fisubl
or
int
adc
dec
mov
xchg
insl
mov
add
inc
jmp
test
xchg
lret
lret
push
push
rcl
and
shrl
sub
sub
icebp
imul
sbb
outsb
xchg
hlt
dec
aaa
ret
inc
sbb
mov
lahf
xor
xchg
dec
fildll
rorl
dec
ja
lock
jmp
arpl
and
out
pusha
xchg
dec
repnz
push
sbb
cmpxchg
into
xchg
pop
xchg
frstor
jbe
adc
pop
gs
mov
hlt
sbb
jle
sub
stos
movsl
or
stos
test
leave
daa
xchg
xchg
imul
and
mov
sub
addr16
push
and
daa
cmpsb
movsb
fnstcw
stc
sub
push
sub
fnstsw
dec
jp
push
data16
fisttpl
mov
xchg
cmpsl
jne
arpl
or
ret
adc
cs
inc
lea
jge
je
mov
xor
test
dec
repnz
sub
sar
pop
jp
jbe
mov
xchg
stos
call
cmp
mov
in
imul
mov
jle
nop
dec
pushf
jb
mov
adc
jl
sub
js
aad
aaa
and
aaa
pop
repnz
inc
mov
jb
push
jbe
std
nop
cmp
icebp
std
cmpsl
lods
inc
movsl
test
jl
sahf
inc
dec
imul
fidivrl
cmpsb
cmpsb
popa
jae
loop
xor
push
mov
xchg
jle
lock
stos
loopne
mov
xlat
xchg
and
cmp
lods
imul
add
cld
pop
lods
add
jae
sub
inc
call
fbld
lods
popf
adc
xor
mov
jp
mov
add
mov
rcr
sti
in
movsl
leave
push
xor
pop
loope
pop
pop
xchg
mov
pop
jbe
mul
mov
fcomps
mov
cmpsl
cmc
mov
shlb
in
push
stc
sbb
cld
daa
fsubrp
cmp
and
out
adc
mov
sub
cmp
fcom
adc
pusha
shlb
stos
mov
pop
dec
lds
loop
shll
mov
cmpsl
test
or
std
push
jns
ror
ja
rclb
cs
lcall
pop
inc
add
test
scas
ljmp
scas
push
push
lahf
test
push
das
dec
jns
mov
pop
xchg
xor
jp
mov
xor
xlat
sub
sarb
jmp
pop
test
aaa
jnp
mov
sub
add
fnstcw
dec
dec
jbe
mov
cmpsb
out
mov
jge
ljmp
mov
jle
cmp
and
mov
jmp
leave
pop
sbb
jge
imul
lahf
in
adc
mov
int3
mov
cmp
xlat
mov
sbb
pop
adc
daa
mov
xor
shl
sbb
fs
cmp
mov
xor
les
sub
jecxz
cmc
xor
aas
rcr
mov
push
or
fs
cmp
outsw
xor
mov
mov
daa
stc
dec
inc
scas
in
leave
stc
mov
mov
inc
xchg
mov
loope
pop
into
mov
jno
ret
cwtl
sub
gs
jp
cmp
mov
aaa
icebp
fists
add
data16
push
mov
arpl
xchg
mov
mov
xor
inc
or
xchg
fdivs
mov
icebp
stc
mov
loop
mov
cmpsl
out
lds
cmpsl
mov
pop
out
iret
push
dec
inc
lcall
stos
pushf
ret
sub
fldt
nop
xor
push
pop
pop
loopne
cmp
jl
lods
rorb
push
dec
hlt
sub
mov
pop
cmp
jnp
fcmovb
idivl
xlat
subb
pop
xor
iret
ja
andb
jmp
pop
adc
filds
pop
pusha
push
cmp
clc
int3
out
fbld
movsl
mov
xor
push
or
inc
in
shl
mov
clc
inc
xor
adc
adc
xchg
mov
dec
push
sbb
cltd
push
inc
test
movsb
sahf
mov
lahf
loop
icebp
cmpl
xchg
hlt
sti
insl
sbb
cmp
arpl
or
mov
aad
inc
sub
mov
mov
cmc
add
cmpsb
jbe
mov
std
test
js
insl
mov
pusha
mov
outsl
pop
jge
mov
or
and
xchg
call
pop
mov
mov
push
ss
pop
dec
pop
cmpsb
jg
and
in
inc
cli
in
out
mov
xchg
or
add
mov
pop
push
jp
fisubs
popf
adc
or
in
test
adc
cmp
mov
mov
jp
jle
dec
loope
adc
test
std
add
dec
std
xor
xchg
inc
and
bound
push
int3
testb
outsl
movsl
negb
in
test
cld
imull
xchg
sbb
mov
cmp
inc
pop
mov
inc
inc
mov
repnz
insb
cld
push
sub
mov
aaa
mov
decb
or
mov
xchg
cwtl
sbb
sti
jl
inc
jg
ds
mov
mov
xchg
ss
hlt
nop
es
nop
or
push
testl
sbb
insl
cmp
jmp
dec
adc
int3
test
sub
in
xchg
mov
cmpsb
mov
lods
movsl
push
mov
cmp
push
rorb
xor
sub
out
push
dec
ret
xor
push
mov
lahf
mov
rclb
sbb
sbb
jecxz
and
and
push
cltd
fwait
popf
cmp
xchg
push
dec
loope
mov
or
test
pop
mov
push
bound
push
gs
fdiv
cmpl
in
cs
cmp
int
out
ffree
sub
and
repnz
orb
push
push
pop
adc
cmp
out
add
xchg
sbb
add
adc
pop
jmp
pop
lret
mov
jle
insb
ja
lret
mov
jge
outsb
scas
std
jno
inc
jb
icebp
cmp
js
sti
inc
sbb
xor
lods
pop
jle
jns
dec
int
xchg
inc
adc
xchg
fcomps
js
cmpsl
das
hlt
stos
add
sbb
test
mov
adc
sbb
jne
insl
or
in
cmpsb
or
and
mov
fdiv
xor
fs
addb
pop
aas
xchg
xchg
daa
or
sub
das
filds
lea
xor
shl
push
adc
lock
push
stos
fsubs
pop
or
mov
adc
call
xchg
inc
cs
xchg
ffreep
or
push
icebp
cwtl
add
xchg
sub
ljmp
jnp
dec
int
cs
fsubs
out
fsubrs
sub
mov
lds
popf
in
mov
andl
mov
mov
pusha
sbb
or
dec
aad
or
fstps
push
in
and
jns
dec
ret
dec
aas
pop
push
push
and
cwtl
mov
fldt
iret
xor
inc
mov
repnz
test
sbb
dec
or
imul
mov
pop
add
cld
lea
enter
xchg
and
and
into
mov
jle
pop
or
push
shl
inc
push
cmpsl
push
mov
testb
ljmp
rol
cmpb
test
int
push
dec
add
les
mov
in
pop
test
mov
mov
out
jae
ja
shrb
sub
pusha
xor
pop
mov
icebp
shl
aaa
hlt
sub
int3
sub
scas
push
pop
cmp
sbbl
sbbb
push
or
jmp
addr16
xchg
mov
in
outsb
push
inc
mov
ret
arpl
mov
out
fwait
xchg
fcompl
pusha
mov
or
fcomi
inc
aam
cs
mov
push
cmp
pextrw
movsb
sub
iret
ficompl
test
sahf
je
lds
dec
pop
and
cltd
add
loop
mov
mov
sub
cmp
pop
mov
insl
sub
mov
or
push
adc
shrl
mov
stc
push
pop
pop
xlat
in
fsts
imul
loop
je
sbb
jecxz
mov
lods
or
lret
fs
lds
mov
and
fs
xor
stc
pop
insb
adc
clc
xchg
and
filds
cltd
ja
imul
aad
or
dec
fs
mov
pop
lahf
into
mov
lret
popf
in
mov
mov
sbb
push
arpl
dec
iret
rcll
mov
ror
les
cltd
dec
push
push
push
sbb
pop
dec
test
xor
imul
mov
fisttpl
pushf
sub
movsl
mov
pop
cmp
andl
or
cmp
ljmp
adc
push
inc
pop
sub
pop
stos
pop
aas
mov
aas
loop
cmp
stos
call
inc
adc
or
jecxz
pop
cmp
ficoml
lods
stos
ljmp
jnp
jno
in
mov
pusha
std
icebp
jecxz
sbb
mov
push
xchg
sbb
out
in
jns
lcall
jp
add
xchg
jne
mov
cmc
fidivs
shll
mov
xchg
add
daa
mov
in
out
sbb
pop
stos
xor
jae
adc
push
shll
ja
int
xor
jbe
jnp
xor
or
jne
add
fstl
gs
pop
repz
sbb
dec
adc
repz
aad
andb
xor
add
add
hlt
nop
lret
and
nop
dec
int3
push
add
pop
add
es
addb
pop
push
cmpl
push
jge
out
inc
fiadds
popa
sbb
pop
jp
adc
mov
ret
mov
incb
add
stos
inc
mov
add
lret
mov
mov
lea
jge,pt
lods
aaa
xor
gs
jge
inc
test
xor
orl
or
mov
sub
fs
xor
les
icebp
push
mov
mov
lods
repz
add
mov
mov
inc
push
imul
pop
sub
lahf
lock
fsubrp
es
stc
mov
cltd
out
mov
mov
jmp
cmp
mov
je
lret
shl
loopne
out
pusha
cmpsl
jnp
pusha
roll
test
in
lock
aaa
das
inc
mov
cmpsb
jge
pop
mov
roll
cmp
adc
inc
in
mov
sbb
or
and
mov
shrb
lcall
js
fabs
div
adc
addr16
imul
or
or
inc
test
pusha
insb
mov
in
je
pop
aam
jb
fsub
sbb
lret
nop
xor
add
call
fisubs
jg
loope
stos
je
xchg
popf
add
andb
aaa
add
mov
mov
test
insl
mov
rcll
push
dec
push
rolb
push
inc
dec
sbb
mov
call
mov
sahf
into
cmp
fisubrs
push
sbb
jo
jge
nop
lods
inc
push
leave
jg
mov
sub
imul
or
sbbl
and
cli
inc
aam
insl
pop
mov
jmp
and
cli
mov
or
fcoml
sub
adc
mov
push
scas
mov
dec
or
dec
loope
adc
repz
pusha
outsb
xor
dec
ja
and
or
les
inc
adc
mov
xor
inc
aas
add
sbb
in
mov
jae
int
adc
adc
add
aam
jmp
add
mov
roll
add
inc
cmp
leave
mov
stc
mov
inc
out
mov
pop
dec
jg
fwait
icebp
sbb
dec
lods
push
adc
mov
sarl
sub
dec
and
sahf
adc
mov
in
add
bound
push
add
popa
shrb
and
jmp
cmp
cmpsb
shl
in
push
clc
rolb
subl
adc
inc
mov
cmc
add
test
ret
jne
mov
adc
or
jae
mov
outsb
loop
cltd
in
nop
dec
cmp
xchg
jge
mov
pop
inc
cli
rol
pop
mov
shr
test
shrl
mov
jnp
lahf
mov
jbe
rcrl
test
jg
xchg
push
xchg
lock
subb
loop
cmp
jmp
sti
idivl
pop
or
push
outsl
shl
out
push
jge
popf
pusha
imul
jo
ret
pushf
call
gs
outsl
xchg
xchg
jl
iret
xchg
shll
mov
and
mov
mov
push
mov
ret
and
mov
fcompl
inc
pop
inc
icebp
jmp
lods
mov
mov
shrb
push
jnp
sub
xor
loopne
dec
cs
cmpb
jge
add
ret
jle
pop
lret
outsb
aam
fwait
xorb
pop
push
ljmp
lret
mov
add
jmp
mov
iret
or
fs
push
mov
push
popl
dec
add
fcoml
out
xor
and
je
fsub
arpl
popf
sarb
rorb
mov
sbb
clc
push
ffreep
pop
subl
movl
rcll
cli
pop
adc
iret
add
inc
inc
dec
cmpb
hlt
int3
shrb
or
out
fisttps
sbbl
fcmovb
sbb
pop
and
xchg
mov
ss
aas
out
shrb
adc
pop
cli
lods
jae
sbb
xor
dec
movsb
xchg
xchg
add
dec
mov
and
gs
nop
insb
lret
imul
sbb
dec
push
imul
flds
dec
je
dec
xor
arpl
ss
xchg
cmp
xchg
je
dec
dec
idivl
and
sub
mov
jmp
jecxz
mov
inc
pop
and
loop
inc
or
bound
jg
pop
or
pusha
divl
xchg
pop
fs
cmp
or
push
push
cmc
test
ret
cmp
jmp
xor
adc
negb
dec
xchg
fcmovnbe
push
fstpl
aad
jns
pop
lods
xchg
mov
mov
hlt
adc
pop
cmp
jne
cltd
pop
sbb
mov
mov
out
fistl
jecxz
sub
sbb
mov
jl
aad
cmp
cld
mov
les
push
jbe
jge
dec
jmp
xorb
scas
fdivl
push
jb
fsts
repnz
adc
cmp
cmpl
mov
dec
clc
sbb
pop
sbb
incb
jno
in
cld
xchg
adc
sub
or
push
xor
xchg
jl
xor
sub
xor
adc
pushf
cltd
insb
test
mov
lcall
test
daa
pop
movsb
std
repnz
or
lods
int3
add
sti
cmpsl
in
lcall
shlb
jmp
loopne
dec
add
mov
out
data16
divb
cli
and
or
cmpsl
sbb
ljmp
and
add
pop
cs
lret
divl
xchg
sbb
mov
insb
lock
divb
popa
clc
mov
fwait
cltd
mov
xor
jle
lret
lods
push
stos
sbb
xor
push
fiaddl
fwait
sub
loopne
clc
lcall
mov
shrb
in
pop
push
push
cld
shlb
mov
xchg
out
aas
sbb
push
sahf
or
cmpsl
and
dec
std
jnp
movsb
fs
cli
mov
mov
mov
mov
mov
imul
les
test
icebp
xchg
hlt
and
jnp
ljmp
or
push
sbb
loop
icebp
inc
or
mov
pop
lock
sub
es
fs
out
lock
ret
sbb
mov
imul
mov
enter
push
inc
stos
out
mov
inc
fwait
jne
and
leave
dec
movsl
shrl
insl
add
sbb
testl
sbb
fldcw
push
insb
sbbl
les
ss
sarb
jno
adc
or
sub
sbb
out
lahf
adcl
and
xchg
das
insb
sbb
mov
bound
rclb
sub
movsb
imul
cs
pop
cltd
sub
jo
xor
dec
xchg
lret
sbb
in
jmp
jge
dec
pop
cmpsb
xor
lret
ror
push
ds
and
call
mov
mov
xchg
or
and
test
cld
out
cwtl
add
notl
xor
add
and
adc
aaa
jns
popa
repnz
aas
or
cmp
faddl
js
ret
imul
jb
pop
icebp
in
insb
fs
insl
shlb
cltd
js
add
rcr
cmp
sbb
push
cmp
mov
out
ss
inc
xor
mov
repnz
push
cmp
push
push
push
jo
or
neg
xor
mov
pop
pop
outsl
pop
jae
inc
mov
mov
test
cmpb
iret
pusha
xchg
cmp
push
ret
lock
ret
pop
lahf
lods
mov
mov
icebp
and
mov
dec
or
jp
or
push
loopne
std
or
xchg
ds
out
sahf
mov
cwtl
push
push
xor
jl
popa
sub
or
ror
icebp
int
push
js
dec
inc
je
cli
sub
pop
inc
popa
dec
push
scas
jbe
rclb
jb
aas
mov
jl
daa
sub
xchg
es
fwait
jbe
and
clc
lret
ficoml
loope
dec
cld
dec
fcoml
add
pop
fldln2
mov
xchg
das
ret
adc
mov
push
stc
inc
pop
xchg
data16
pushf
pop
daa
fdiv
dec
xchg
cltd
dec
movsb
xor
inc
dec
xchg
jge
orb
sbb
and
sti
mov
lcall
and
inc
jns
pop
or
jge
out
data16
js
xchg
int3
lods
loope
push
sbb
outsb
cld
push
pushf
jo
xchg
xchg
adc
add
mov
lods
adcb
inc
in
inc
push
jl
inc
mov
jno
mov
pop
test
aaa
push
fisubrs
inc
adc
inc
insb
fs
loop
adc
sti
cmpsl
jmp
nop
mov
jb
adc
push
ljmp
scas
movsb
sub
popf
dec
push
push
jmp
fldl
mov
mov
pop
mov
orl
or
dec
cmpsl
repnz
out
jno
mov
or
aas
incb
push
out
mov
cmc
popf
or
mov
cs
jb
adc
sbb
mov
loopne
sub
pop
cmp
out
mov
lds
das
rep
mov
cmp
test
cmp
and
aam
popf
pop
mov
pop
xchg
mov
les
div
clc
mov
xchg
decb
pop
lock
movsb
js
add
loope
mov
js
cmpsb
fisubs
xlat
roll
popa
outsl
loope
inc
dec
add
scas
mov
mov
inc
xor
mov
adc
adc
divl
test
or
xor
gs
jle
and
sub
lret
and
mov
rcll
dec
imul
dec
xor
das
dec
ljmp
sbb
icebp
mov
sbb
push
insb
cmp
loope
out
addb
scas
into
lods
mov
mov
sti
mov
jnp
jecxz
push
nop
dec
inc
mov
xchg
mov
adc
cmc
popa
pop
repnz
sub
mov
pop
push
popa
fistpl
mov
push
shlb
iret
addb
xrstors
ja
jne
dec
xor
pop
pop
xlat
fisttpl
push
repz
fs
pop
addr16
subb
jo
movsl
mov
int3
scas
jne
dec
and
test
pop
scas
inc
or
mov
cmp
icebp
sti
in
cli
sub
ja
jb
jmp
inc
inc
jae
mov
push
or
mov
lea
mov
es
call
adc
and
inc
jg
push
aas
mov
testb
int3
push
sub
mov
xor
dec
inc
sub
xor
dec
dec
dec
mov
jbe
xor
cltd
and
das
inc
pop
push
daa
fistpll
xor
in
xor
dec
pushl
xchg
push
scas
push
std
add
push
mov
fdivl
xchg
fwait
and
cmp
or
icebp
inc
add
ffree
or
ja
mov
ret
pop
adc
pop
sbb
les
and
push
and
js
hlt
into
xor
inc
lea
pop
aam
in
jnp
dec
fldl2e
outsb
addr16
pop
data16
cmp
sub
insl
cmpb
stos
int
cltd
pop
inc
pop
and
mov
in
icebp
xchg
std
sbb
test
pop
in
jb
into
bound
jecxz
xchg
jp
xor
hlt
pushf
xchg
sub
arpl
adc
scas
or
sbb
mov
push
mov
repz
scas
adc
cwtl
mov
xor
imul
sti
xchg
jg
iret
shlb
cld
mov
cmp
adc
and
push
sti
movsb
push
inc
pop
mov
cmp
fadd
stos
jne
adc
mov
cmp
xchg
ret
addr16
xchg
or
xchg
movsl
mov
pop
pop
jl
loopnew
adc
sub
or
dec
xchg
sub
mov
icebp
mov
jp
pusha
orb
jne
sbb
xchg
and
and
inc
inc
sbb
es
pop
imul
mov
mov
shll
les
push
out
add
xchg
mov
int3
adc
aaa
jge
stos
xchg
and
add
insb
dec
adc
cmp
fistps
dec
out
dec
aaa
int3
lods
dec
push
dec
test
fsubrl
adc
xchg
push
popf
lods
idivl
gs
sbb
call
shlb
stc
or
sbb
mov
divb
xor
push
fwait
xchg
leave
shll
enter
in
mov
adc
sbb
ljmp
xchg
push
xor
fidivrs
cmp
lret
loope
je
ds
into
xor
mov
sub
mov
out
sub
jg
inc
jg
adc
lret
nop
lret
test
aaa
outsb
xor
insl
xchg
jge
jo
push
mov
mov
fsubl
andl
xchg
mov
pop
les
daa
cltd
dec
sbb
add
inc
hlt
lods
mov
pop
fdivr
mov
sbb
jno
fmul
jbe
jnp
out
cmpb
mov
mov
cmpsb
xor
iret
ja
cli
popf
mov
call
and
pop
or
push
leave
pop
ja
dec
push
hlt
sbb
or
mov
cmp
lods
sbb
push
ds
inc
xchg
xchg
filds
fdivrs
call
mov
setb
jne
hlt
mov
and
stos
push
mov
fs
insb
jle
test
sti
jb
cmp
pop
icebp
xchg
add
pop
dec
insl
push
jne
and
adc
dec
or
push
mov
lret
cltd
arpl
push
repz
pop
mov
push
cmpsl
mov
dec
push
out
cmp
xor
sub
sbb
test
inc
or
fiadds
sbb
outsb
xor
push
cli
pop
mov
jae
sbb
cwtl
inc
icebp
leave
fistl
cmpsl
jb
pop
nop
outsb
mov
int3
ds
bswap
push
ss
rolb
fwait
sbb
push
and
mov
and
fadds
jecxz
imul
and
outsl
mov
fidivrl
fmull
test
ficompl
mov
sub
negb
add
xlat
pop
mov
cld
iret
sub
jnp
das
cmpsb
inc
shrl
in
lods
movb
xor
jb
sahf
aam
test
ret
es
call
mov
hlt
mov
popw
dec
fcompl
in
mov
inc
jbe
push
je
dec
push
pop
mov
scas
sbb
sbb
movsb
cmp
dec
imul
and
jl
dec
cmovb
push
add
cli
hlt
jg
mov
and
xor
insl
je
xor
aaa
fildll
lock
and
repnz
xchg
mov
cmc
pop
hlt
cmp
xor
out
jno
jg
dec
movsb
enter
push
push
popf
dec
fisubrl
test
out
or
cmpsb
or
pop
data16
inc
push
subb
sbb
rclb
je
dec
xchg
mov
cmp
jno
bound
jns
in
dec
xor
and
adc
js
or
orl
test
popf
test
xchg
add
sub
xchg
mov
and
xor
jo
jbe
pop
jnp
inc
jbe
mov
call
pop
out
mov
and
jbe
jne
and
lahf
xchg
ja
lea
jge
mov
lret
or
dec
or
or
or
mov
into
dec
inc
or
push
fstl
cmc
faddl
sbb
std
inc
cli
out
inc
cs
jmp
push
inc
lods
and
mov
add
cmp
jne
sbb
scas
cmp
add
mov
roll
or
cmp
mov
or
rcr
scas
dec
cli
rclb
arpl
lods
jle
xor
repz
das
mov
mov
adc
jge
sarl
push
push
movsl
dec
dec
and
pop
push
and
popf
and
pop
and
xor
sbb
in
cmpsl
loope
int3
mov
dec
and
pop
in
mov
push
fdivs
xorb
sub
mov
mov
and
xor
adc
pop
out
add
or
xor
dec
call
mov
xchg
loop
jmp
xor
sbb
pop
sub
mov
lcall
aaa
icebp
leave
adc
push
mov
stos
mov
mov
je
lret
out
mov
aad
push
jge
clc
std
arpl
mov
xor
imul
and
rolb
xor
lds
inc
pop
mov
add
mov
mov
mov
dec
sbb
mov
xchg
fnsave
dec
dec
jle
add
cmp
sub
std
adc
ret
shl
mov
dec
mov
mov
addr16
cs
jp
mov
mov
cs
sbb
and
sahf
mov
and
ds
pop
and
ret
sti
mov
and
ret
add
je
mov
lcall
das
pop
sarl
fsubl
or
fcmovb
fsts
loop
scas
cmp
movsl
mov
daa
and
mov
sbb
sub
push
lret
shl
adc
in
cmpsb
mov
out
pop
movsb
pop
mov
iret
les
lahf
and
mov
xchg
pop
jp
popa
cwtl
and
push
adc
mov
jnp
inc
pop
in
add
call
in
mov
mov
repnz
call
cmp
mov
push
pop
stos
arpl
adc
jg
stos
pop
sti
stc
into
push
int
adc
out
in
and
pop
xor
pop
or
mov
bound
pop
cmc
pusha
xchg
outsl
out
pushf
js
fsubl
nop
insb
jbe
ret
lahf
jb
les
andnps
jbe
push
je
adc
push
lahf
addr16
sub
and
subb
dec
push
mov
cmp
jne
out
in
mov
seto
cmp
pmuludq
fwait
push
jmp
jo
inc
sahf
std
aas
and
push
roll
mov
loopne
inc
or
or
push
jle
push
and
push
jne
inc
insb
adc
xchg
cmp
out
add
cmc
pop
fldlg2
jg
inc
pop
jno
test
mov
cmp
test
out
ret
sbb
loop
sahf
shrb
mov
add
xchg
sbb
aaa
push
mov
stos
push
ja
test
push
inc
out
jb
repnz
sbb
cltd
stos
add
out
int
arpl
cltd
pop
sub
xchg
pop
or
in
cs
sbb
scas
pmuludq
xchg
mov
push
in
int
xor
cwtl
dec
stc
dec
int3
mov
adc
dec
lea
sbb
int
loope
inc
mov
into
push
inc
aam
aam
add
and
or
loope
imul
xchg
arpl
aam
dec
lods
int
lods
mov
add
out
enter
inc
popf
add
push
lea
frstpm(287
mov
cmp
lock
ds
loopne
js
cmp
and
push
repnz
push
mov
and
imul
jnp
jg
jb
test
mov
push
and
jecxz
movsb
test
je
dec
filds
test
cmp
push
adc
jge
arpl
inc
mov
into
and
sub
divl
pop
cltd
arpl
cld
orl
std
insb
stos
cmc
cmpsb
repz
mov
xor
cmpl
mov
sti
lods
jecxz
movb
sub
aad
pop
pop
les
mov
in
lret
loop
and
sub
sbb
xchg
inc
mov
or
pop
out
fstl
and
add
gs
push
cmpsl
mov
ret
jae
lret
into
push
popf
cmc
xchg
push
insl
push
push
inc
push
adcb
test
jp
je
ja
jl
xchg
xor
lahf
jg
cmc
mov
shlb
outsl
repz
mov
mov
bound
adc
and
ret
cmc
and
mov
mov
pushf
js
and
push
inc
in
mov
scas
lods
xchg
dec
adcb
sbb
pop
pusha
nop
xor
iret
das
les
inc
inc
sbbb
push
xchg
push
sbb
pushf
insb
les
sub
mov
push
or
int3
jne
and
je
stos
add
dec
outsb
into
add
push
push
jb
dec
lahf
mov
pushf
and
add
sahf
inc
push
mov
or
push
lret
mov
xor
dec
arpl
xchg
inc
pusha
stc
push
inc
cmp
int
push
ret
lods
xor
insl
sar
fs
icebp
shlb
ret
dec
loop
in
push
fisubrl
dec
sub
data16
aaa
sub
imul
scas
pop
cmpb
leave
aaa
add
jns
xchg
xor
fsubrs
shll
jo
setbe
call
aam
fcomps
dec
xor
cmpb
sbb
fmuls
cmp
emms
adc
sbb
inc
inc
bnd
mov
fiaddl
mov
and
lods
jo
jbe
pop
mov
imulb
cld
hlt
cmp
push
xchg
xchg
sbb
pop
test
inc
test
cmp
xchg
movsl
mov
mov
add
add
out
adc
stc
push
push
mov
xchg
xchg
mov
test
test
outsb
jae
mov
or
or
bound
lcall
dec
adc
cltd
and
xor
sub
pop
jns
sbb
jge
gs
inc
nop
lock
add
popf
nop
mov
imul
pop
mulb
xchg
stc
mov
mov
call
mov
cwtl
fwait
xchg
imul
jae
mov
inc
pop
gs
push
sbb
imul
je
fmul
push
jno
sbb
ja
je
mulb
pop
rolb
outsl
sub
sub
mov
pop
ret
fwait
pushf
cmp
in
sahf
jno
and
or
xor
xor
pop
movsb
sbb
jecxz
push
mov
sub
mov
aas
jle
add
xchg
push
aaa
sub
leave
dec
sub
push
mov
aaa
popf
pop
aas
dec
es
lock
repnz
fimuls
sbb
das
loope
lea
pusha
sbb
push
push
mov
sti
xor
xor
or
push
or
jle
or
cli
nop
inc
imul
add
pop
inc
or
xor
cmp
mov
repz
adc
nop
jo
mov
hlt
nop
adc
sti
adc
fdivl
int3
enter
ljmp
push
into
push
lds
mov
and
and
cld
sub
clc
adc
cltd
std
add
enter
mov
ss
mov
pusha
mov
push
loopne
mov
xchg
xchg
call
xchg
pop
shl
pop
frstor
test
imul
xchg
mov
insl
jno
hlt
cmpsb
popa
imul
cmp
or
and
int3
popa
and
cmp
dec
lock
mov
or
lods
inc
loopne
jnp
add
and
cs
xlat
loopne
inc
and
pop
sbb
xchg
hlt
adc
push
stc
xchg
daa
pop
xchg
into
sub
stos
inc
dec
dec
iret
sub
xor
imul
add
lahf
mov
icebp
add
in
cmpsb
lcall
pop
insb
push
pop
mov
rorb
jecxz
ja
sub
push
or
out
sub
xor
shrl
jne
sub
jp
dec
adc
leave
mov
aaa
cmp
test
shlb
or
jb
mov
lock
arpl
sub
sbb
aas
pop
mov
aaa
and
lret
pop
mov
shll
ret
clc
mov
pop
sbb
test
pusha
popf
in
cmp
mov
dec
gs
mov
inc
enter
cmp
enter
push
mov
push
pop
pop
pop
fsts
mov
lahf
rol
sub
sub
stos
testl
fcoml
sahf
fsubrp
shll
sbb
out
js
je
and
push
pop
dec
addr16
mov
xchg
jb
sti
mov
stc
mov
addr16
adc
movsb
sbb
xchg
mov
pusha
sbb
or
out
pop
inc
pop
add
and
hlt
ds
test
push
xor
cmp
aaa
ds
in
or
ret
xchg
pop
jae
ss
call
sbb
inc
cltd
pushf
cs
callw
push
push
sub
mov
mov
ss
in
aas
shl
xor
aam
aaa
push
xchg
cld
jns
push
popf
push
sbb
cmp
mov
les
sub
jmp
jle
lods
test
js
stos
mov
cld
mov
fldt
outsl
je
cmp
add
ss
pushf
imul
dec
jae
or
mov
mov
mov
pop
sub
sti
repnz
ds
lahf
cld
mov
and
dec
and
cmp
or
add
fldenv
xchg
jp
lret
bound
lods
pushf
aam
and
push
jno
lcall
adc
mov
jnp
stc
lea
repz
into
push
push
mov
dec
xor
and
sbb
inc
mov
jg
jg
inc
inc
mov
nop
adc
in
dec
pop
mov
in
pop
jnp
and
repnz
fstps
xor
xchg
das
or
mov
pop
test
testl
cmp
mov
ss
sarl
xor
lahf
mov
addr16
stc
out
adc
and
pop
les
jb
ret
cmp
repz
repz
je
push
adc
xor
cmpl
adc
push
lahf
pushf
ret
inc
sbbb
push
lret
xor
xor
jmp
mov
stc
mov
arpl
shlb
rclb
cmc
and
in
insb
adc
cmpb
adc
scas
sub
out
lret
insb
xor
gs
push
push
xorb
fists
iret
ret
jmp
mov
cmp
popf
sub
sub
mov
imul
sub
pop
mov
and
lea
lea
sbb
mov
or
out
push
and
mov
hlt
add
fcomps
scas
out
fxch
and
pop
shll
sbb
lods
jecxz
xorl
mov
mov
cmpsl
adc
adc
mov
cs
arpl
std
jb
out
rcll
and
outsl
out
sub
inc
xchg
iret
call
cmp
cld
add
adc
mov
das
xor
mov
imul
test
mov
pop
imul
or
or
fcmovnu
arpl
scas
mov
out
ljmp
add
mov
mov
xchg
popf
ret
inc
scas
xchg
lret
xchg
test
stos
cmpsl
lock
and
xchg
movsb
xchg
out
and
adc
mov
loop
inc
loope
dec
pop
shlb
push
pop
and
mov
pop
sbbb
js
xlat
scas
aaa
xchg
movsl
cld
test
mov
sbb
jle
insl
or
fsubr
mov
bnd
inc
adc
iret
and
jge
dec
mov
pushf
addr16
jl
sbb
push
shrl
push
jge
jecxz
or
imul
pop
xlat
ja
mov
mov
lcall
cvttps2pi
scas
and
sarb
in
jmp
or
test
aam
inc
mov
xor
jno
xchg
cmp
push
popf
pop
cwtl
add
push
add
inc
push
cld
jl
xchg
clc
sarb
bound
mov
test
or
fbstp
dec
leave
mov
lahf
repz
pop
inc
adc
mov
xchg
pop
lret
popa
mov
jmp
add
or
mov
jmp
out
test
pmaxsw
jle
pop
sbb
or
add
inc
daa
sahf
or
sub
xor
inc
cltd
loopne
xchg
mov
adc
aad
test
dec
arpl
jo
cmpsb
push
adc
inc
icebp
dec
enter
in
pusha
fucomip
in
jmp
scas
xchg
in
mov
inc
xor
xor
in
cmp
sub
addr16
jns
fstpl
dec
mov
mov
xchg
leave
rorl
dec
xchg
rolb
sbb
cmp
fistpll
in
lds
aad
add
sbb
or
xchg
or
ret
outsl
rcll
jcxz
out
and
adc
jmp
mov
jb
or
adc
cmp
int
sbb
int3
loopne
adc
jo
pop
mov
in
xchg
mov
shlb
hlt
fldlg2
push
dec
dec
shrb
rcrb
add
icebp
xchg
add
push
outsb
scas
mov
je
fisubrs
loope
mov
inc
imul
test
mov
fbld
idivl
nop
sub
mov
jp
aam
mov
movsl
push
lock
mov
mov
and
cmpsl
in
cmpb
gs
cli
sub
jl
lock
jnp
push
adc
pop
jmp
fchs
mov
cmp
push
nop
mov
mov
sbb
jmp
mov
lock
mov
xchg
mov
mov
les
iret
ficomps
inc
orb
jnp
stc
dec
pushf
push
jle
sbb
cli
adc
cld
mov
scas
out
pop
pmulhw
jl
data16
and
mov
fsubs
mov
push
xchg
outsl
lret
push
dec
xchg
loopne
ss
mov
xor
dec
mov
cwtl
addr16
add
jle
inc
xchg
xchg
stc
jne
adcb
xchg
jp
in
xor
in
shll
repz
movsl
test
push
in
pushl
stos
scas
push
xlat
add
dec
mov
or
aas
jp
push
fldl
jecxz
cli
push
loopne
cmpsb
sbb
jb
dec
cmp
sub
or
mov
imulb
mov
bound
push
jecxz
movsl
div
hlt
scas
sbbl
repnz
push
sub
sbb
inc
repz
fsubr
iret
push
push
xchg
lret
xchg
pop
pop
pop
sbb
movsl
iret
enter
add
and
pop
sub
mov
push
test
pusha
dec
loop
pop
sarb
in
pop
stos
push
dec
mov
mov
sub
push
gs
dec
shr
add
movsb
xor
mov
aas
push
push
jno
testl
loopne
adc
pusha
shll
mov
jb
mov
loope
sub
lret
or
mov
push
dec
subb
inc
cwtl
pop
popl
cmpsl
add
in
test
push
mov
icebp
js
ficompl
cmp
data16
je
push
in
mov
sarl
fidivl
fsubr
mov
or
fwait
mov
xchg
xor
or
imul
mov
jmp
pusha
jmp
or
ret
int
lods
adc
sahf
mov
adc
cmp
or
or
mov
lods
jecxz
out
les
imul
in
mov
mov
lea
ror
nop
ljmp
mov
rcrb
clc
test
out
pop
or
test
imul
scas
jmp
imul
lret
cmp
shl
lock
dec
leave
cmp
mov
enter
jmp
jmp
sbb
stos
cmp
adc
subl
shlb
add
jecxz
inc
test
cmp
es
mul
fstl
xor
jmp
xor
les
jnp
xchg
adc
fisttps
aad
mov
pop
xlat
add
jge
xor
es
jle
es
push
pop
cmp
ss
xchg
mov
iret
and
lahf
repz
pushw
les
cmpsb
mov
pop
fsts
loopne
mov
les
lods
icebp
fs
jae
clc
lds
adcb
xor
mov
loop
dec
cmp
mov
xchg
push
or
jmp
mov
aaa
lock
aaa
sbb
arpl
out
sti
mov
adc
lret
xchg
in
xor
push
ds
mov
bswap
in
add
push
insl
leave
mov
repz
xchg
sbb
nop
sar
xlat
std
sarl
orl
xor
lods
xchg
add
das
push
mov
add
pop
push
incb
shll
rcl
sahf
stos
fdivrl
push
movsl
je
gs
lret
movsl
sub
mov
jecxz
xor
sbb
in
outsl
push
inc
ret
test
hlt
push
loope
add
xor
fbld
mov
in
xor
xor
pop
lret
xor
fdivs
push
push
push
ja
lock
lahf
cmp
adc
loopne
pop
loope
add
jnp
sar
pop
scas
fnsave
mov
ror
xchg
ds
sti
arpl
mov
testl
es
cmp
or
and
sahf
xchg
out
inc
data16
pusha
out
jmp
sti
pop
sbb
aam
lds
push
inc
movsl
ret
and
pushf
std
adc
loope
cmp
shlb
add
dec
test
cmpsl
std
rcrl
pop
cli
cmc
popf
xor
and
jo
mov
int
adc
inc
loopne
pop
cltd
fucomip
mov
inc
fwait
mov
dec
jne
mov
xchg
add
push
and
cmc
imul
and
movsl
loopne
push
jp
std
mov
enter
lods
movsl
mov
adc
push
outsb
adc
xchg
js
sbb
pop
pop
jle
clc
les
popf
and
xchg
sub
popf
pop
add
cwtl
jp
pop
pop
xchg
mov
add
cmp
dec
mov
inc
mov
imulb
outsl
into
mov
fdivl
aam
dec
adc
xor
js
int
scas
test
mov
imul
into
pop
lcall
dec
fnstenv
mov
inc
push
inc
ret
sbb
cmp
loop
mov
popf
subb
mov
push
xchg
mov
push
mov
fcomps
xor
and
pop
sub
fdivrl
cmp
or
cmc
aad
inc
jg
lcall
hlt
jg
shrl
sbbl
je
gs
cmp
or
cmc
int
nop
out
xchg
mov
cmp
add
pop
je
push
ljmp
repnz
mov
movsl
pop
adc
ss
mov
xor
xchg
test
push
push
and
lods
xlat
jecxz
gs
pop
test
push
mov
rcrl
shrl
loope
pop
pop
mov
clc
fs
scas
out
fiadds
outsb
and
xchg
dec
movsl
mov
aas
dec
nop
fcom
rcl
pop
mov
enter
jl
sahf
ja
add
lods
out
popa
xor
in
call
add
test
pop
stos
test
lret
pop
pushf
into
or
pop
pop
int
mov
and
add
and
scas
out
sarb
js
rol
lock
cmp
bswap
dec
pop
mov
xchg
aad
rcrl
stos
shl
mov
xor
cmp
cmc
xchg
cmp
jp
out
xor
cmpsb
push
shll
movsl
les
rcrl
pusha
push
data16
add
push
push
mov
and
pop
cwtl
inc
push
int3
sub
jl
pop
pusha
dec
push
mov
mov
jmp
insb
jnp
push
jecxz
fsubp
xor
stos
cmp
inc
xchg
imull
outsl
test
push
add
lds
pop
jbe
jp
repz
and
adc
in
idiv
rcl
xor
jb
fst
mov
test
sbb
jmp
jns
data16
orb
pop
out
das
in
out
mov
out
lcall
or
mov
aam
call
sbbb
cltd
pop
adc
and
mov
push
sahf
dec
and
out
dec
pop
add
dec
dec
xchg
xor
pop
xlat
adc
std
js
lcall
lock
inc
mov
pop
loop
outsb
xchg
inc
mov
hlt
push
ficoml
cmp
dec
ds
shll
test
jb
in
push
fsub
mov
fdivr
insl
cmp
xchg
iret
xchg
jnp
or
push
pop
pop
xor
sub
add
mov
bound
xchg
mov
and
add
adc
insl
adc
fnstenv
jp
outsl
lock
xlat
push
mov
mov
mov
or
inc
jno
out
sub
inc
pop
aam
push
cmp
dec
aam
inc
fnstcw
roll
fldl2e
ja
dec
push
subb
pop
jecxz
mov
push
mov
and
enter
shrl
mov
dec
push
mov
cmp
negl
repz
xchg
mov
clc
push
jle
jns
imul
adc
sub
sub
fcmovbe
popf
lea
int
lea
sub
fcmovbe
or
mov
imul
ret
inc
repz
cmp
xchg
or
or
leave
popf
ja
movsl
push
pop
setae
jno
mov
jnp
inc
xor
lods
int
insb
les
ss
clc
test
fcomps
inc
leave
jns
notb
and
rcll
mov
pusha
sub
add
pop
push
dec
decb
xor
testl
sarl
adcl
xchg
stc
xor
in
fbld
or
xchg
xor
out
adc
cli
pop
stos
shrb
or
xor
test
sar
stc
push
lock
mov
inc
cmp
sub
add
pop
add
fidivl
inc
addr16
mov
xchg
loopne
inc
xchg
sti
lods
jg
dec
or
push
mov
add
xchg
stos
pop
dec
dec
into
lods
fs
mov
fisubrs
mov
into
push
jns
pop
cmpsb
ficomps
push
fimuls
inc
popf
icebp
xchg
dec
lret
inc
ficompl
test
jle
dec
leave
push
cwtl
rolb
jecxz
les
sbb
data16
mov
jp
sarl
hlt
data16
lahf
push
cli
add
iret
xor
aaa
fwait
lret
sbb
std
inc
xor
shrb
cli
lret
cmpsl
pushf
cmp
mov
notb
or
das
sub
or
ja
xchg
cli
jno
xchg
arpl
push
cli
cmp
ret
add
cmc
clc
cs
push
movsb
mov
pop
fisubl
aad
sahf
addl
xor
inc
int3
inc
add
dec
sti
lods
enter
aas
and
stos
out
pop
pop
addb
lret
ret
fstpt
inc
and
jecxz
and
sub
add
fsubs
pop
subb
xor
sub
int3
fwait
lahf
add
adc
sbbl
pop
add
dec
cltd
add
xor
or
in
jnp
jge
xchg
inc
sub
mov
inc
push
cli
pushf
push
das
mov
dec
jb
xchg
add
lret
fwait
sahf
mov
sub
pop
xchg
lock
inc
jl
jge
or
xchg
add
fs
adc
fldt
jecxz
pop
pusha
jb
mov
add
mov
cmpsb
sub
add
push
xor
xchg
test
inc
nop
fimull
fidivrl
cld
xchg
lods
insl
ret
mov
sub
xor
adc
mov
push
jl
push
and
fidivrl
dec
nop
mov
repnz
sub
stos
jg
xor
add
cmpsb
in
or
fwait
pop
imul
ja
in
or
or
mov
mov
pop
or
fisubs
and
adc
popf
xchg
push
rcrb
enter
add
arpl
mov
mov
lods
iret
pusha
test
xchg
stos
fmul
mov
in
sbb
test
jo
add
pop
mov
nop
stos
ret
push
jl
lods
push
jno
lret
sbb
hlt
das
inc
sub
out
inc
fdivp
xchg
or
jae
hlt
mov
or
pop
js
in
imul
and
or
jne
and
push
outsl
ljmp
aam
insb
jmp
pop
jl
adc
mov
mov
int3
jle
sarb
jnp
subb
jno
test
sub
jmp
xchg
xchg
rorl
movsb
sbb
jp
dec
ret
dec
or
cld
lahf
pop
mov
pop
cwtl
pop
adc
cmp
adc
mov
mov
bound
inc
pop
cmp
adc
cmp
sbbl
fwait
insl
insl
and
icebp
ret
xor
fwait
push
scas
fsubr
fildl
cmp
sub
jno
xor
cmp
fmull
je
jmp
daa
sbb
cli
mov
cli
cli
xchg
jle
insb
or
aad
cmp
pop
cltd
cmpsb
insb
add
push
cmp
pop
scas
int3
das
sub
mov
mov
dec
adc
inc
xchg
hlt
cmpsl
mov
xor
jmp
mov
dec
in
cmp
sub
sahf
rcrb
lds
xchg
xchg
inc
sbb
inc
fcomp
iret
test
sbb
std
or
add
andl
pop
and
lret
int3
pop
lret
jne
pop
mov
adc
in
mulw
mov
stc
in
xor
jmp
jne
sbb
sahf
sbb
dec
mov
sbb
stos
and
aam
repz
addr16
bound
pop
sub
lea
fcompl
inc
sub
jl
lods
pop
adc
out
push
clc
das
insb
faddl
std
enter
test
out
ds
jecxz
inc
or
fwait
add
rol
cmp
pop
pop
push
insb
sbb
mull
push
inc
scas
add
in
mov
mov
outsl
dec
xor
jbe
pushf
xor
xlat
pop
sub
dec
sbb
mov
sub
xor
adc
test
das
inc
daa
sub
mov
push
xchg
mov
insl
ret
loop
shrb
in
mov
xlat
adc
lock
xchg
jno
out
jo
mov
sbb
mov
or
xor
insb
popa
xor
xor
test
mov
bound
dec
push
in
out
data16
adc
outsl
lret
in
xchg
sbbb
sbb
mov
ja
dec
or
jae
jb
pusha
cli
dec
jnp
xor
out
add
test
or
dec
dec
int3
outsl
inc
in
hlt
daa
roll
cmp
mov
xchg
in
sarl
dec
cld
aam
fsubrs
xor
add
cmp
push
aas
and
in
sbb
in
xlat
cltd
jl
mov
jnp
sbb
outsb
mov
movsb
int
xchg
js
sub
inc
mov
and
popa
or
xchg
or
jg
hlt
and
fisubs
pop
js
out
je
mov
ss
cmp
neg
or
xchg
adc
xchg
pop
jg,pn
jne
or
xor
xor
lods
adc
inc
stc
xchg
fdivrl
inc
rorb
push
mov
jbe
dec
xor
inc
test
test
dec
aaa
rclb
jnp
aam
or
aad
or
push
jecxz
out
mov
jnp
push
ficomps
clc
bound
pop
dec
jns
cs
bound
scas
inc
pop
repz
dec
mul
sub
addr16
stos
int3
aad
les
insl
cld
cmp
push
sbb
xsha256
cmpsb
roll
aaa
leave
rcrb
cmp
sbb
push
mov
fisttpll
push
in
int
xchg
popf
mov
outsl
cmp
sbb
stos
and
scas
sti
bound
sbb
sbb
dec
stos
push
idivb
outsl
jnp
inc
push
mov
mov
inc
clc
out
sbb
xchg
cmp
inc
adc
shll
clc
inc
jb
xchg
inc
daa
sbbl
sti
mov
test
cli
pushl
dec
sub
fwait
dec
dec
call
les
es
inc
sbb
push
pop
subl
pop
dec
stos
or
push
cmp
and
add
test
movsb
ss
stos
mov
pop
shrl
adc
jg
fisubs
cmp
stos
xchg
std
mov
cld
aaa
in
loop
inc
and
ja
mov
cmpsb
dec
fdivl
pushf
andb
xchg
lcall
dec
cmp
jne
lcall
scas
cmpsb
pop
fcoml
sahf
inc
cmp
adc
dec
in
shlb
inc
mov
dec
push
jo
sahf
mov
fsubrl
ss
insb
inc
pushf
ret
loopne
sbbb
pcmpgtb
movsl
outsl
aas
mov
pop
mov
sbb
pop
repz
les
iret
mov
pusha
pop
cmp
cmp
jae
cmp
inc
push
cmp
xchg
cmpsl
mov
adc
imul
adc
loope
xchg
jbe
add
sub
mulb
test
rclb
or
sbb
aad
cwtl
adcl
aaa
leave
fcmovbe
int3
and
jno
aam
in
scas
out
xor
scas
lret
xor
ret
jb
stos
rep
dec
mov
mov
lcall
repnz
cmp
frstor
out
add
lea
inc
add
fwait
cmc
mov
xchg
inc
fdivrs
pushl
ret
or
pop
fcmovne
loop
lods
nop
js
push
mov
dec
xchg
push
insl
add
adc
jb
xchg
push
imul
dec
ljmp
cmpl
mov
mov
pop
mov
lahf
sbb
jge
outsl
js
aad
insb
repnz
mov
into
call
shlb
aaa
cwtl
sti
inc
das
xchg
shlb
mov
push
and
cmp
mov
mov
ret
xchg
sbb
adc
jl
lock
sti
mov
or
mov
push
push
cmpsb
dec
fs
cmovne
imul
jmp
push
jle
fimuls
and
ret
or
inc
mov
xchg
pusha
pushf
add
das
mov
lea
cmpsb
cld
andl
icebp
inc
pop
out
fisttpll
add
aas
or
fisttpl
movsb
and
fisubrs
pop
in
jge
push
fmull
pop
in
xchg
push
loop
repz
push
add
scas
sbb
xor
aad
outsl
fwait
mov
add
rol
xor
out
fildll
xchg
adc
pop
adc
scas
bswap
gs
jb
pushf
fdivl
and
pop
adc
cmc
xchg
pop
scas
dec
clc
daa
add
cmpsb
dec
and
xor
es
insl
pop
jp
or
fwait
scas
rolb
dec
out
popf
jns
cld
flds
popf
dec
mov
stos
xor
aad
cmpsl
movsl
scas
popf
shrb
push
stos
pop
jne
mov
dec
sub
dec
xor
or
insb
xchg
or
popa
lea
enter
roll
lret
push
mov
xor
jb
adc
je
push
js
push
idivb
xor
mov
xor
cmc
sub
cli
mov
pop
scas
xor
mov
sbb
cmp
gs
jb
mov
outsl
jmp
aam
sbb
push
jecxz
adc
and
push
add
sbbl
jg
in
xchg
out
dec
inc
jo
sbb
aaa
rorl
movsl
or
scas
rclb
sbb
xchg
cmpsl
ljmp
adc
mov
mov
test
pop
std
add
xchg
clc
inc
push
in
ret
or
ss
decb
add
cltd
pushf
lods
lock
xchg
xor
jg
jno
data16
clc
xchg
mov
inc
mov
pop
dec
mov
in
inc
jo
sbb
lods
xchg
or
test
call
outsb
cmp
nop
or
cs
add
xor
push
fmul
sub
mov
je
pusha
test
call
fs
or
cwtl
movsb
aaa
push
pop
pop
mov
and
and
sbb
sub
flds
sub
jno
cwtl
jns
movsl
xor
xor
cwtl
xor
sub
loop
dec
out
cwtl
xchg
inc
ds
insb
mov
add
in
lret
aaa
adc
lea
les
fstl
jge
or
sub
xchg
sahf
jp
test
add
pop
dec
pop
cmp
mov
fdivr
xor
leave
rcrl
xor
lods
das
add
adc
jbe
shrb
cmp
iret
push
pushf
jle
cwtl
ret
icebp
add
cld
repnz
xchg
sbb
mov
mov
inc
sub
iret
cmp
lahf
sbb
ret
xor
add
imul
xchg
std
jbe
xor
ret
add
or
lock
mov
ret
jnp
inc
add
add
and
pop
xor
fnsave
xchg
shll
in
data16
push
push
or
mov
or
mov
cwtl
test
das
mov
insb
in
or
ljmp
pop
adc
test
xchg
bound
mov
fcoml
lods
scas
pop
aam
shl
mull
add
mov
jecxz
pop
cmp
popf
sbb
fwait
mov
push
mov
push
ja
dec
cmp
and
xchg
gs
mov
fistl
xor
or
adc
cmovnp
lcall
and
addr16
mov
xchg
popa
dec
adc
jne
fs
shll
xchg
dec
or
in
shrl
jno
popf
rorl
movsb
roll
lds
loop
xchg
inc
sbb
jl
daa
stc
cmp
loopne
hlt
mulb
bound
fidivrl
sbb
mov
mov
cltd
add
jb
pop
and
adc
cwtl
fs
shll
push
push
jne
test
subl
daa
shufps
aam
bound
pushl
adc
mov
and
jae
fsubrl
sarb
dec
and
lret
icebp
leave
test
inc
mulb
lcall
mov
xor
push
shrb
mov
xchg
scas
daa
or
and
cmp
xchg
mov
nop
jo
push
test
mov
and
mov
inc
lcall
stos
leave
push
and
repz
stos
pushf
int
or
aas
sbb
popl
adc
mov
push
in
sbbb
inc
mov
rol
ljmp
xlat
cmp
subl
xchg
jl
mov
or
add
inc
loope
dec
andl
stos
xor
daa
cmp
pop
test
and
sarl
lods
shll
mov
fadd
leave
xlat
and
mov
mov
dec
icebp
pop
insb
imul
push
push
ret
dec
fcmovbe
ljmp
fstpt
std
adc
filds
adc
cmc
jb
add
xor
pop
or
and
arpl
pop
lods
daa
dec
pop
repz
xor
imul
xchg
inc
push
push
sub
or
jae
jmp
pop
mov
rcrb
mov
or
push
sub
ss
test
mov
cmpsl
add
mov
mov
jnp
cmpsb
test
int3
into
dec
fsubl
int
dec
out
push
add
push
lods
xor
inc
adc
xchg
mov
jmp
clc
bnd
dec
icebp
adc
test
pop
cmp
cltd
pop
cmpsb
cmpsl
outsb
or
aad
mov
clc
jecxz
fmulp
pop
data16
xchg
lahf
int3
inc
loopne
push
mov
outsb
and
shrl
cmp
add
push
insl
test
pusha
mov
inc
jne
shll
in
push
ret
sbb
cmc
mul
pop
and
aam
sbb
adc
aaa
addb
mov
in
inc
mov
adc
mov
adc
mov
xchg
pop
cmp
fs
sbb
xor
fwait
xchg
bnd
push
repnz
insb
sbb
jbe
into
aas
mov
decb
pop
test
xchg
mov
add
int
dec
adc
sahf
adc
dec
or
and
mov
daa
scas
test
jne
stos
movsl
xchg
nop/reserved
cmc
mov
pusha
stos
pop
mov
es
dec
pop
adc
jnp
pop
orps
dec
or
cltd
adc
xchg
cs
inc
or
push
in
cmp
js
test
cmp
mov
sub
rcrl
mov
movsb
into
outsb
sbb
xor
inc
insb
mov
out
xchg
mov
aaa
xchg
out
jb
xor
cmp
lods
mov
repnz
push
adc
fadds
xchg
cld
push
aad
mov
fistpl
lcall
js
inc
push
and
out
mov
arpl
or
xchg
shl
sub
push
push
dec
mov
cmovbe
sbb
dec
lods
pushf
xchg
enter
add
lea
inc
pop
sbb
daa
push
jns
sti
push
sahf
xchg
lcall
push
out
push
sbb
dec
sbb
jl
xor
xchg
subb
cld
jbe
imul
xor
jp
jp
fldlg2
dec
cmp
jecxz
in
lock
out
repz
out
inc
ret
xchg
movb
cmc
enter
in
jmp
mov
bound
jno
sarb
push
inc
pop
sub
fistps
mov
mov
addr16
fldcw
aad
roll
ja
dec
dec
aas
rcrl
dec
call
mov
mov
lahf
mov
dec
adc
cmp
sahf
dec
shlb
pop
pop
sbb
push
adc
vpshaq
xchg
and
aas
sub
sub
push
mov
cmpl
pop
lock
das
aaa
loope
jg
pop
mov
arpl
inc
stc
lret
stos
xchg
mov
int
jo
sbb
push
adc
mov
mov
jnp
ds
xor
pop
mov
cmc
sar
les
insb
or
je
inc
push
out
cmp
mov
cmp
or
jle
mov
pop
sub
stc
push
mov
leave
push
pusha
jecxz
mov
and
iret
nop
data16
js
xor
sahf
std
sbb
add
idiv
fsubs
idiv
jbe
xchg
gs
cmp
test
lods
sub
push
data16
push
jns
adc
cltd
mov
cmp
leave
aaa
inc
xchg
shll
fidivl
push
maskmovq
negl
pop
push
add
pop
outsl
mov
adc
jle
jge
cmp
pop
nop
leave
das
les
iret
ficomps
inc
iret
hlt
lret
xchg
push
cmp
les
js
pop
test
addr16
loope
pop
sahf
jno
test
jnp
bound
cwtl
jnp
add
pop
arpl
int3
xchg
mov
mov
hlt
and
enter
icebp
stos
sub
add
int
fs
jge
push
push
stos
fs
pop
mov
xor
dec
movsb
push
xchg
mov
lock
and
test
cltd
cmp
xor
cmp
pusha
mov
or
mov
idivl
gs
mov
cs
cmp
in
mul
repnz
push
es
add
fucomi
inc
popa
xor
aaa
lret
sub
sub
or
inc
dec
dec
int
push
imul
mov
aam
mov
adc
xchg
add
xor
dec
cmpsb
push
cld
rclb
fistpll
cld
arpl
jmp
inc
xchg
sbb
sub
and
test
dec
sub
shlb
sbb
pop
jp
std
fsubs
sbb
test
repz
and
nop
jg
imul
shl
fcoml
mov
adc
test
nop
scas
ret
mov
sti
adc
test
or
pushf
shrb
sbb
stc
push
and
sub
xchg
and
movsl
ljmp
xor
roll
mov
popa
xor
ret
sub
push
mov
call
mov
jmp
lret
mov
mov
hlt
sub
xchg
push
xchg
inc
adc
mov
push
xchg
stc
ret
addr16
outsb
xlat
fdivr
dec
jns
sahf
xlat
out
dec
sub
stos
jecxz
push
ja
sarl
xchg
shrb
std
fsts
or
add
push
lea
and
and
adc
cltd
and
dec
and
fucom
mov
sub
inc
mov
xor
pop
loop
cmpsl
and
fwait
je
nopl
fcomi
push
or
xchg
fldl
add
sbb
test
stc
test
mov
icebp
ficomps
ret
adc
sbb
jmp
les
cmc
dec
lcall
adc
fsubr
and
mov
push
out
movaps
sub
xor
das
inc
jne
rolb
jge
and
fdivrl
pop
jb
push
loope
mov
mov
xchg
and
insl
sbb
out
pop
daa
dec
inc
orl
mov
sahf
sub
and
or
das
fwait
cwtl
mov
hlt
lods
xchg
outsl
and
addl
jge
mov
outsl
fiaddl
push
and
ds
jnp
les
mov
ret
das
inc
and
std
mov
mov
and
nop
xor
dec
push
push
cli
lods
mov
scas
outsl
fdivl
mov
call
cltd
or
jl
add
cmp
push
test
xor
pop
and
dec
xchg
push
jno
or
cmc
dec
bound
fcoms
and
xor
inc
or
inc
adc
pop
jge
test
enter
pop
mov
les
ror
orl
push
pushf
jae
push
inc
loope
fadd
jg
daa
sar
jae
cmp
mov
cmp
xchg
sub
inc
psrlw
lock
push
pop
dec
mov
cwtl
ficomps
adc
mov
pushf
orb
mov
xchg
repnz
mov
ja
push
add
sbb
adc
das
enter
fcmovnu
and
rcrb
cs
dec
pop
popa
or
sbb
xchg
movsl
in
rcrb
fadds
out
arpl
xor
ficompl
cmp
ja
out
mov
pop
aaa
adc
fisubrl
push
addr16
ja
cmp
and
jge
fs
xchg
inc
test
ljmp
and
add
or
dec
mov
iret
adc
jle
sbb
adc
sbb
sub
imul
jns
cmpsb
stc
inc
pop
andps
ss
call
fsubrl
push
dec
jl
testl
pop
pop
mov
add
cmpsl
ja
into
out
and
dec
cld
sbbb
dec
xchg
iret
enter
mov
ss
xor
jae
daa
pop
iret
test
lds
or
loope
rcr
inc
adc
lret
mov
mov
or
movsb
adc
adc
push
clc
sub
cmp
fcompl
fs
mov
and
xchg
into
hlt
pop
pop
inc
cmc
add
rcrb
sbb
rcll
aaa
ljmp
lcall
cld
insl
mov
mov
dec
sbb
xchg
out
xor
jnp
stc
dec
rcrb
fs
dec
out
mov
pushf
mov
stos
mov
cmp
imul
jecxz
cmpsb
lret
stc
repz
das
push
in
and
push
fadd
xor
jbe
fstpl
dec
inc
fisubrs
pop
js
mov
in
je
outsb
test
push
pushf
repz
loope
test
test
mov
xor
fstpt
fstps
pop
cmp
repz
gs
push
mov
mov
xor
and
or
sbb
arpl
dec
test
and
add
data16
pop
imul
push
pop
ds
push
xor
mov
popf
out
cltd
jp
mov
inc
xchg
popa
adc
inc
aam
addr16
dec
stos
dec
ljmp
outsb
int3
out
js
xchg
mov
insl
adc
adc
scas
pop
pop
xchg
gs
jb
cmp
or
ror
hlt
es
or
rcl
leave
mov
jb
xor
loop
lea
cld
jns
inc
xchg
negb
xor
das
test
or
je
xor
nop
mov
jge
cmpsb
jmp
pop
clc
push
push
sub
cmp
inc
mov
jle
adc
imulb
out
sbb
pop
and
or
out
insb
je
out
pop
push
lods
lods
jbe
in
es
outsb
jmp
dec
orl
pop
adc
xor
imul
sub
cmpl
loop
cmp
mov
and
add
dec
cmpsb
fisubs
xor
xor
xchg
sahf
push
iret
mov
sub
daa
dec
xchg
data16
or
ljmp
sbb
test
mov
int3
jmp
mov
popf
cmpl
imul
popl
or
pop
js
cmovns
xor
push
xor
push
cmp
jge
jns
jno
lcall
aad
jg
shrb
mov
lds
daa
mov
mov
das
test
aas
pop
adc
das
cmc
popa
pop
inc
es
pop
push
adcl
lcall
jecxz
icebp
aas
dec
stc
arpl
sbb
sbb
xchg
push
inc
xor
mov
sbb
rolb
sbb
sub
mov
out
jmp
jbe
xor
cmpxchg
cmp
push
addb
repnz
loope
test
push
mov
xor
leave
outsl
sbb
pop
test
xchg
dec
out
mov
sub
fnstcw
repnz
or
cmp
shl
movb
push
sbb
sub
and
rol
test
pushf
dec
insb
pop
int3
cmc
imul
dec
mov
add
pusha
lea
mov
jge
in
add
push
mov
cmp
mov
sub
iret
mov
dec
pop
cld
push
lock
cmp
in
jne
xchg
outsl
icebp
flds
pop
and
cltd
enter
xchg
adc
xchg
push
sub
ljmp
mov
das
dec
lret
or
ret
call
xor
pushf
js
repz
mov
je
jnp
das
xor
adc
mov
xchg
jae
scas
mov
cld
divb
and
loopne
sbb
test
movsb
pop
divl
cmpl
inc
in
xor
sbb
stos
imulb
icebp
test
js
outsl
add
data16
and
rcrl
rcrb
orl
cld
je
scas
jbe
xchg
or
mov
insl
mov
cmp
cmp
out
dec
addr16
rolb
inc
ljmp
add
xchg
mov
mov
xchg
test
or
insb
jle
outsl
push
add
data16
jno
lds
fwait
xor
shll
daa
sub
dec
mov
inc
mov
hlt
fiadds
cmp
or
xchg
push
mov
rorl
imull
add
out
cs
xchg
lods
out
aas
xchg
cld
push
push
mov
push
sti
fwait
ljmp
adc
mov
gs
imul
pop
or
push
int3
clc
jecxz
outsb
mov
add
inc
mov
mov
add
test
push
test
cmp
lret
and
add
stc
push
jns
dec
inc
jl
das
adc
inc
push
sbb
push
sub
xor
jb
jae
jae
and
xchg
shlb
push
imul
cld
xchg
jg
nop
into
push
test
jecxz
data16
imul
push
push
int3
fisttpll
into
jne
icebp
repnz
sahf
loopne
cmp
push
inc
inc
fnstenv
xchg
jle
jl
popa
jg
lahf
repz
fdivs
sti
bound
pusha
iret
icebp
scas
out
stc
sbb
adc
mov
mov
or
jo
sbb
cmp
mov
fildl
add
lea
int
nop
dec
mov
jl
int
mov
jl
mov
mov
arpl
jl
lds
fdiv
cmp
push
xlat
arpl
ja
fdivs
xchg
mov
push
xor
cltd
sbbb
mov
adc
leave
add
sahf
sub
push
in
fdivr
leave
or
sub
sub
pop
jp
xor
pop
negl
daa
mov
negl
lods
clc
cltd
mov
adc
inc
sub
call
shrl
xor
fidivrs
ss
std
sub
pop
cmp
pusha
mov
cli
cmpb
add
gs
push
jge
push
rorb
pop
sbb
push
movsb
enter
push
sbb
mov
mov
jmp
xor
xchg
sbb
mov
push
cmp
std
jg
push
ss
adc
data16
sbb
pushf
mov
cltd
sbb
push
fidivrs
fsubrp
sub
incb
adc
stos
jnp
push
in
sub
test
dec
jne
xor
out
test
mov
dec
pop
test
scas
std
ret
adc
fwait
andb
movsb
push
enter
dec
sbb
cld
jmp
fnstenv
pop
ss
pop
push
xorl
daa
mov
aad
inc
ret
sbb
mov
inc
lret
test
jns
inc
stos
sub
inc
jnp
call
fidivrs
cwtl
ja
mov
ljmp
pop
sub
xchg
dec
jns
scas
orl
insl
sahf
dec
inc
mov
ficoms
lds
rcll
pop
xchg
or
test
js
fisubrl
mov
loopne
shlb
addr16
push
push
or
adc
lods
jle
or
add
inc
scas
push
nop
sub
jbe
push
jb
dec
ret
pop
into
sbbb
xor
jp
jmp
sub
push
mov
mov
xchg
xor
in
xchg
mov
xchg
add
xorb
inc
clc
pusha
lret
lods
lea
stos
inc
call
adc
push
xchg
aas
mov
adc
fstl
mov
xor
jbe
cmpsl
ljmp
mov
lods
cmpsl
mov
ret
rclb
rclb
fwait
mov
mov
test
jmp
jecxz
lret
cwtl
jo
cli
fs
lret
cmpsl
jns
pushf
cltd
jo
rorb
adc
in
xchg
cwtl
mov
loop
and
adc
inc
mov
cwtl
jl
mov
mov
inc
scas
in
sbb
testl
nop
js
mov
jl
adc
adc
xchg
movl
jae
or
mov
lcall
clc
push
xchg
xor
pop
jns
add
mov
push
push
mov
lods
scas
stc
mov
stc
orl
ljmp
push
xor
negl
inc
inc
jg
mov
push
out
outsl
fcomip
hlt
push
cmpl
jmp
or
sbb
pop
push
jmp
scas
cld
lea
out
out
in
pop
push
hlt
gs
bound
push
pop
pop
bound
mov
lret
mov
jg
jb
mov
shll
dec
push
dec
cli
mov
dec
in
in
loop
mov
mov
das
movsb
xchg
dec
xchg
ss
mov
gs
repz
xchg
jae
xor
je
imul
mov
mov
xlat
xor
iret
and
mov
and
imul
pop
push
clc
cmp
jg
pop
fistpll
mov
jno
lods
je
lods
fstps
aas
shr
cltd
stos
adc
lods
push
cmpsl
je
jle
xchg
loopne
movsb
lret
arpl
outsl
mov
arpl
or
mov
int
push
add
cmc
inc
inc
push
mov
test
mov
cld
mov
stos
stos
xchg
sbb
xlat
add
sub
leave
cmpsl
addr16
movsb
mov
xchg
mov
imul
das
ret
xlat
push
and
sahf
jg
cmpsl
insb
cmp
aam
in
fmull
and
inc
xor
and
mov
es
sub
xchg
cwtl
push
sub
mov
mov
loope
cld
lods
pusha
push
mov
dec
mov
in
popaw
test
push
inc
xor
je
sub
scas
xchg
inc
add
jns
jbe
xchg
enter
sub
andl
imul
mov
dec
jg
adc
mov
loopne
cld
stos
aaa
cmpsb
mov
mov
dec
lret
mov
mov
cmpsb
mov
mov
rcl
fisttpll
sub
mov
add
es
fiadds
push
or
pusha
ret
xlat
mov
fldcw
scas
push
sbb
or
insb
bswap
cltd
sbb
movsl
add
jno
or
test
cmp
sub
mov
xchg
out
cs
out
pop
lret
and
cmp
push
stc
stos
cltd
test
push
mov
fisubrs
lock
popa
adc
add
jle
test
sub
sti
jo
scas
in
push
or
movsb
add
xchg
dec
icebp
leave
xlat
dec
jg
mov
push
imul
ret
inc
cli
popl
jbe
push
arpl
icebp
cld
cmp
clc
pop
sub
gs
das
lret
arpl
bound
pop
das
cmpsb
popf
mov
xchg
je
sub
jp
mov
cmp
cs
pop
fstl
jns
cmc
in
fmuls
xchg
out
and
mov
sbb
mov
cmpsl
jo
push
inc
mov
loope
je
addr16
mov
sti
lahf
xorb
aaa
and
into
std
push
test
mov
aas
ljmp
mov
movsl
lret
inc
xchg
jle
sbb
xor
push
lock
out
inc
insl
push
das
mov
push
adc
pop
inc
pop
jne
movsl
int3
inc
mov
push
mov
jecxz
icebp
add
mov
loope
and
loopne
into
inc
fnstsw
and
push
or
sahf
pop
and
sahf
sahf
cmp
jns,pt
dec
sarl
scas
fldt
movsb
xor
sub
mov
sahf
test
in
pop
or
std
jecxz
sub
sub
dec
insl
mov
pop
mov
lea
xor
inc
test
dec
cmpsl
fnstcw
dec
push
inc
pop
mov
fisubrl
arpl
in
xor
andb
js
popf
je
cltd
xor
rclb
ss
pop
fnsave
add
or
movsb
fimull
and
mov
fnstenv
jb
mov
and
sbb
decb
stos
out
jne
loope
push
jg
mov
js
leave
das
ret
mov
push
jmp
or
sub
rol
lock
mov
push
pop
lds
ja
pop
in
mov
fldenv
inc
sub
sbb
mov
adc
add
ret
dec
fmuls
out
mov
jl
and
jmp
xlat
call
mov
pop
sub
cli
cmp
mov
mov
pop
aad
jg
out
push
inc
stos
orl
jle
out
gs
mov
insl
adc
enter
mov
jo
stos
xchg
jmp
or
hlt
push
imul
lret
and
imul
cmp
sbbb
mov
mov
orl
inc
xchg
nop
cmc
jbe
adc
pop
pop
xor
daa
inc
imul
dec
iret
mov
inc
ja
sarb
xchg
loopne
scas
sbb
es
mov
test
jg
aam
test
dec
mov
mov
cwtl
mov
lds
lods
stc
jl
adc
js
clc
mov
sahf
mov
rolb
sbb
pop
mov
jae
dec
dec
movsb
jmp
out
rclb
xor
sbb
test
not
mov
mov
add
mov
xor
jp
std
or
arpl
adc
push
je
lret
jb
and
cltd
xor
cmp
sub
scas
faddl
push
pop
call
out
and
cmp
xchg
dec
imul
loope
repnz
jae
xchg
xchg
pushf
xor
inc
pushl
rol
and
mov
aaa
xor
lret
add
xor
dec
jle
lods
int
mov
cmp
stos
jae
xor
fldenv
push
fcompl
lret
jns
add
add
jno
pushf
lock
sub
cmpsl
sahf
jg
mov
mov
jbe
ss
jl
mov
imul
test
call
loopne
cmp
inc
jnp
sbb
xchg
pop
inc
mov
stos
pop
cmp
cmp
mov
inc
ret
movsb
jns
js
loopne
mov
jo
push
xor
cmp
cmc
jg
adcb
mul
cmp
sub
stc
inc
in
mov
mov
pop
cli
jne
mov
mov
out
pusha
ret
out
sub
xchg
fidivl
dec
out
dec
dec
jbe
mov
inc
mov
imul
mov
and
fcomps
fildl
inc
dec
push
mov
std
out
in
cld
mov
push
adc
xchg
arpl
sub
sbb
xchg
sti
stc
pusha
outsl
jp
insl
imul
push
add
mov
mov
pop
cmp
or
lret
sbb
repz
dec
je,pn
pop
pop
fimull
adc
sub
dec
pop
add
adc
fcmovb
inc
fs
sub
xor
daa
dec
test
in
push
jnp
pop
or
inc
sbb
inc
pop
decb
aam
xor
add
shrb
inc
and
and
in
sbb
cltd
cmp
mov
ds
scas
lods
xor
rcrb
in
cmc
add
icebp
ja
push
ret
push
xchg
xor
xor
xchg
pop
mov
fnsave
push
sub
pop
sub
popa
xchg
es
aas
scas
xorl
jns
movsb
dec
stc
lods
mov
dec
sub
loop
jnp
mov
mov
and
in
sarl
mov
lea
cmp
push
xlat
in
xlat
jmp
inc
mov
bnd
dec
repnz
jno
out
mov
add
cmpsl
mov
pop
dec
adc
jno
test
nop
stc
das
or
mov
dec
std
ljmp
das
jno
inc
xchg
jns
add
jbe
iret
ds
mov
jg
outsb
sub
push
in
jmp
sub
ljmp
cmp
aas
inc
aaa
add
daa
sbb
je
lcall
imul
fiadds
xchg
sub
dec
mov
sbb
subl
popa
mov
pop
outsb
test
sub
stos
sti
sub
das
jecxz
push
jbe
sub
adc
in
mov
mov
inc
pop
cs
outsl
leave
pop
push
pusha
test
mov
mov
sub
adc
and
data16
lcall
movsb
mov
into
sahf
cmc
cld
adc
jo
jbe
sub
xchg
xchg
dec
test
pusha
ljmp
call
xchg
lret
add
ss
mov
adc
inc
or
je
repnz
mov
sub
fmul
out
mov
xor
lock
or
cmp
inc
or
xor
jmp
or
mov
mov
xor
iret
lods
pop
inc
adc
sub
cmp
xchg
mov
stos
pushf
xor
push
xchg
aad
clc
mov
push
xor
cmp
mov
adc
jmp
adc
jmp
mov
das
xor
push
lret
mov
rep
rorl
shrl
sub
add
in
in
mov
mov
cmp
push
test
lcall
scas
add
in
nop
xchg
add
xchg
xchg
jae
lock
lret
das
fistl
scas
pop
push
rcll
and
sti
xor
adc
xor
out
add
mov
adc
adc
inc
das
inc
aaa
test
andb
in
cmpsb
pop
sub
pop
push
loopne
xor
cmpsl
out
or
mov
mov
out
inc
or
mov
pop
into
push
les
pop
cmc
jnp
out
push
xor
jp
jmp
push
ret
push
cmp
mov
pop
cmp
jbe
arpl
movsl
sub
inc
pop
ret
cmpsb
jg
fdivs
mov
jns
enter
addl
rorb
test
inc
sbb
lock
xlat
fnsave
int
pushf
sub
movsb
cld
pop
pop
repnz
push
push
lods
mov
pop
cli
gs
push
mov
add
mov
cmpsb
outsb
xor
stc
aas
lock
test
and
enter
adc
or
outsb
xchg
push
jl
adc
aaa
jno
gs
lret
fisubrl
fucomi
es
out
jb
ret
repnz
xchg
or
ret
sbb
mov
adc
cld
cmc
not
test
pop
jmp
out
cmp
je
adcl
aam
mov
sti
mov
add
popa
xor
daa
sarl
xchg
into
jp
add
cmp
dec
sbb
shlb
lods
pop
jg
jg
adc
push
mov
xchg
adc
cmp
cwtl
adc
frndint
jp,pn
xchg
jb
movsl
lock
mulb
mov
fcom
dec
sbb
rolb
pop
mov
test
mov
mov
pusha
mov
popa
ficompl
jb
mov
add
mov
outsb
push
cmp
cmpsl
mov
jecxz
dec
imul
push
popa
mov
pop
stos
add
cmpsb
stc
sti
pop
stc
cmp
xchg
sub
movsl
rcr
sarl
les
push
fldl
add
add
js
sahf
lods
int3
cwtl
lock
cmpsl
xchg
mov
enter
cwtl
sbb
xor
negl
addr16
test
mov
mov
movl
jo
fs
inc
sub
std
inc
aad
push
xor
or
cs
rcrl
fucomp
xor
popa
cmpsl
jl
es
or
pop
pop
mov
jg
ror
lds
pop
and
xchg
cld
mov
dec
xor
mov
ja
dec
pop
xor
and
push
dec
push
dec
flds
jae
movsb
adc
jnp
mov
loope
xchg
sub
adc
fiadds
cmp
jmp
ret
push
mov
inc
out
cmp
xor
mov
mov
sti
enter
and
add
dec
les
pop
mov
subl
test
jbe
cli
jns
and
push
ja
loop
stos
add
test
push
dec
aam
xchg
adc
add
shl
pop
push
sarl
cmp
xorb
push
xchg
lds
pop
jae
enter
fiadds
lock
xchg
sub
imul
lret
leave
out
adc
les
insl
into
inc
lcall
bound
mov
and
imul
add
cmpsl
sbb
dec
sbb
int3
jo
and
in
mov
mov
or
inc
xchg
fistl
sbb
xchg
mov
testb
hlt
dec
cmp
ljmp
mov
lock
mov
insb
xchg
sbb
adc
or
dec
mov
mov
fcomp
arpl
dec
test
mov
into
sbb
jae
mov
scas
cltd
and
pusha
stc
test
mov
dec
cld
cmc
int
in
incb
push
dec
cmp
inc
inc
jae
adc
das
mov
or
push
shll
jl
lcall
arpl
jno
push
jle
mov
scas
jae
and
gs
or
loope
sbb
cmpsl
pop
sbb
imul
pop
xchg
push
imul
xchg
mov
inc
int3
push
fisttps
mov
inc
flds
jbe
test
pop
cmp
fldcw
mov
std
cli
push
jo
scas
out
mov
movsb
pusha
or
xchg
xchg
lahf
loope
and
mov
jne
sub
mov
mov
mov
pop
andl
xchg
nop
and
xor
in
cli
out
and
das
in
addr16
jne
sbb
cmpsb
ljmp
repz
fdivrp
jnp
cmpsl
mov
or
movl
pop
clc
dec
bts
sti
mov
xchg
sar
inc
lret
mov
int3
pop
and
xlat
imul
popa
ljmp
fdivrl
aam
xchg
testb
dec
insb
and
sbb
inc
test
mov
jne
mov
push
push
jo
aaa
dec
sub
sbb
repnz
sub
push
push
pop
mov
das
dec
outsl
sysexit
xor
in
sub
mov
xchg
inc
popa
aas
cs
dec
inc
in
data16
dec
or
push
ret
ss
or
fcmovnb
sti
push
xchg
clc
cmp
fldcw
dec
cltd
icebp
je
inc
cmp
mov
das
ret
mov
mov
sbb
add
jbe
and
add
pop
test
inc
xor
pushf
in
pusha
or
insb
sub
scas
jnp
sub
mov
xchg
test
mov
inc
arpl
out
mov
aaa
scas
ror
fsubr
lock
repz
or
dec
loope
mov
jbe
lret
in
sbb
stos
pop
mov
in
cmp
test
test
dec
add
mov
xchg
jmp
dec
push
movb
cmpsl
pop
movups
in
inc
xor
outsl
push
push
mov
rol
inc
xchg
push
call
xchg
sahf
call
rcl
adc
cmp
test
hlt
jae
mov
xchg
into
enter
shlb
fisubl
fistpl
push
inc
aad
adc
xor
mov
shrl
scas
mov
cmp
adc
mov
push
inc
cmp
pop
xchg
dec
es
push
loope
ja
mov
inc
push
lock
shlb
sbb
xor
sar
test
inc
mov
and
sub
das
xchg
lea
jmp
pop
daa
mov
sub
xor
cmp
sub
scas
std
push
or
and
aaa
lods
jb
sbb
ret
rcr
mov
aad
cmp
adc
pop
test
mov
stos
add
stos
dec
lret
sub
icebp
mov
xchg
cmp
jnp
imull
sbb
ja
lods
lods
loop
inc
xchg
add
cmp
divl
mov
mov
add
aaa
repz
inc
pop
popl
jl
insl
sahf
cs
test
hlt
adc
or
mov
push
cmpsb
sub
push
divb
idivl
gs
cmpl
push
mov
fstpl
vhaddps
sub
fimuls
mov
or
push
push
movsl
xchg
scas
push
add
mov
dec
sub
sub
or
xlat
or
jb
push
test
pusha
imul
ret
inc
insl
inc
gs
lock
and
pop
dec
lret
call
stos
adc
je
fs
jle
sar
pop
bound
loop
orl
es
xor
sbb
xor
mov
cs
pop
shlb
sub
adc
repz
ja
jecxz
andb
sub
dec
add
jge
and
push
inc
dec
cwtl
das
xor
roll
adc
mov
xchg
push
xchg
pop
xor
xchg
pop
mov
add
call
cmp
or
into
xor
inc
mov
push
xchg
test
jno
loopne
addr16
jb
jp
movsb
fwait
jmp
stos
and
aam
es
jle
pop
shr
sbbl
scas
fcoml
adc
int
push
push
cmp
add
addr16
cmc
push
xchg
testb
ja
push
push
call
add
cs
popa
dec
xor
aas
adc
push
pop
cwtl
iret
mov
adc
or
add
mov
nop
sbb
cltd
jbe
adc
inc
clc
std
ret
push
xchg
push
jle
mov
adc
push
cmp
imul
sub
jbe
lret
jae
xchg
cmpsl
test
in
xorb
addr16
xchg
test
pop
pop
push
out
int
jb
es
fisubrl
xor
mov
adc
cmp
dec
rorb
xchg
inc
push
in
ss
inc
or
mov
pushf
xchg
xor
push
mov
xlat
lea
sub
sub
inc
sub
pop
filds
imul
xor
add
sbb
sbb
fisubl
dec
imul
cmpsl
add
daa
mov
mov
fidivl
push
cmc
and
repz
cld
xor
xchg
leave
fld1
fwait
jne
insl
cmc
nop
mov
int
je
pop
data16
jg
dec
iret
cltd
and
dec
pop
scas
insb
into
jmp
sub
cwtl
add
movsl
fmull
nop
sub
pusha
sahf
sahf
in
clc
mov
mov
xchg
xchg
inc
and
mov
add
push
lods
mov
shll
test
or
push
cld
adc
ss
push
mov
scas
cmpsl
inc
or
mov
jns
daa
adc
in
ffree
jecxz
stc
push
stc
loop
loope
inc
in
mov
push
lock
add
adc
movsb
and
mov
into
rolb
fwait
sti
push
decb
mov
mov
mov
mov
and
mov
scas
mov
pop
push
roll
or
fldcw
and
leave
inc
inc
testb
sub
in
xor
pop
sbb
push
pushf
push
xor
and
pusha
lret
fwait
pop
push
std
xchg
xchg
andb
sbb
cmc
xchg
js
pop
push
lea
jge
loop
jmp
rclb
push
mov
scas
out
into
push
mov
dec
pop
sahf
mov
xor
andl
bswap
das
add
dec
or
add
cmp
pop
clc
mov
mov
mov
sbb
stc
dec
lahf
ja
mov
daa
jmp
out
cmp
jle
nop
outsl
jl
movsb
push
gs
push
cmp
inc
inc
sbb
mov
in
xor
pushf
in
ja
jns
test
js
fistps
call
sbb
mov
adc
xor
xlat
mov
mov
mov
xchg
adc
dec
mov
mov
rolb
and
add
data16
in
daa
adcb
pop
or
shl
insb
mov
or
aad
pop
push
mov
test
mov
inc
cmp
cmpsl
add
xchg
lcall
out
loopne
in
daa
push
into
pop
aam
and
fnstenv
std
or
jne
cmp
cmp
mov
in
lcall
icebp
push
mov
inc
outsl
jo
mov
jno
push
adc
adc
outsb
mov
cmp
push
into
fs
lea
sub
andb
lods
stos
jno
les
xor
sub
inc
pop
les
push
leave
mov
sbb
outsb
int
mov
cpuid
outsl
pop
pop
push
test
nop
mov
and
xchg
out
fcompl
loop
out
inc
pop
xchg
and
in
push
gs
lahf
xlat
push
std
inc
jl
add
mov
add
hlt
pop
cs
adc
inc
inc
cmp
dec
mov
pop
pop
jecxz
mov
outsb
and
jb
xchg
int
sub
xor
sub
jge
mov
jno
lock
ret
incl
cmp
push
bound
jmp
mov
push
loop
cmp
add
mov
xlat
mov
inc
jmp
stos
dec
scas
fcmovb
add
or
hlt
cmpsb
sti
push
dec
sub
jo
and
mov
jg
aad
lock
in
popa
nop
int3
xchg
aad
loop
sbb
hlt
mov
push
adc
lahf
popa
pop
pop
or
fcomps
unpckhps
sub
cmp
xchg
shl
push
in
cmp
sbb
mov
cmp
neg
xor
test
jle
cmp
pop
mulb
pop
dec
test
rol
bound
mov
and
dec
mov
sbb
and
movl
pop
jmp
out
mov
jge
rcll
test
mov
mov
pop
xchg
sbb
xor
jmp
xchg
push
repnz
or
lahf
bound
jo
incl
rol
mov
xor
xor
jne
dec
push
cli
xchg
pop
nop
ja
xor
shll
adc
negl
sub
push
lds
sbbb
movsb
sarb
aas
clc
aas
push
inc
shlb
xchg
out
mov
or
xchg
add
dec
or
lahf
push
cs
imul
sub
fs
lods
add
insl
jb
push
mov
mov
fwait
in
ja
sbb
pop
nop
std
xlat
jmp
ss
cltd
movsb
add
sbb
lahf
outsb
addr16
xor
in
ja
or
lods
fiadds
adc
mov
int
jle
xchg
jge
mov
imul
in
fcompl
cmp
cmp
divl
mov
mov
into
dec
jg
insb
mov
mov
push
jnp
repnz
pop
push
xchg
sub
pop
fnstsw
xchg
adc
dec
sbb
iret
scas
xchg
sbb
arpl
pop
dec
dec
mov
out
dec
sbb
loopne
pop
rcl
loopne
sbb
test
loop
test
outsb
cmpsb
mov
push
sub
in
push
insl
insb
stos
dec
and
push
jecxz
dec
dec
leave
aaa
xorb
das
xor
out
std
sbb
std
movsl
repz
lret
imul
xchg
mov
ss
pop
jno
pop
mov
and
jle
push
jb
lds
or
int3
dec
adc
std
and
cmp
pop
adc
and
aad
push
fs
push
gs
fs
enter
dec
or
ret
dec
out
inc
in
add
lahf
adc
clc
dec
cmp
scas
xor
jg
sub
loopne
xor
and
int3
jl
int3
hlt
adc
sbb
mov
pop
or
rolb
in
sarl
jmp
mov
sub
fs
and
stc
scas
dec
inc
or
in
loope
cwtl
lret
adc
sbb
ljmp
pop
xchg
inc
das
mov
push
addr16
pop
cmp
and
jge
push
inc
movsl
enter
es
add
or
lret
adcl
pop
push
and
adc
xchg
andb
std
inc
adc
sti
movsb
ss
cmp
out
stos
cmp
adc
pop
cmp
movsb
mov
test
bound
pop
lods
cmp
sbb
xor
mov
andb
xchg
es
loope
sub
mov
std
cmp
rorl
xchg
sahf
sub
lock
je
jle
push
sarb
int3
test
sbb
mov
push
or
out
imul
mov
lods
add
pop
xor
xor
mov
stos
inc
shlb
mov
aas
movsl
mov
xor
mov
adc
xor
inc
test
mov
fcmovbe
fidivrs
jb
lahf
outsb
stos
xor
cld
xchg
sbb
inc
add
mov
fdivrl
pushf
mov
cwtl
sub
pop
filds
roll
jle
sbb
fdivrl
ret
fs
jo
jne
and
arpl
decb
and
mov
addl
sahf
pushf
or
dec
add
inc
dec
jns
pop
sahf
inc
in
sbb
inc
sub
fnstsw
scas
test
pop
xchg
test
pop
test
ficompl
jb
mov
loope
sub
hlt
sbb
cli
jecxz
data16
stc
jg
push
mov
inc
jae
jmp
in
push
lock
leave
das
pop
inc
loop
cmp
cmp
repnz
jmp
cmp
loop
stos
callw
xor
sub
loop
cmp
in
ret
loopne
test
jbe
ljmp
or
lds
jne
sbb
dec
fdivrl
inc
mov
cwtl
pop
lods
or
jle
mov
insb
inc
or
mov
inc
or
mov
rorl
mov
jne
inc
inc
sub
cltd
fildll
xlat
scas
adc
rorl
iret
jl
xchg
stc
add
dec
repz
cmp
xchg
add
add
mov
shlb
iret
and
scas
pop
negb
xlat
mov
sub
jne
arpl
andb
push
iret
icebp
jle
xor
mov
inc
dec
addr16
test
pop
inc
mov
mov
dec
mov
int3
sub
int3
insb
jg
sub
mov
lahf
inc
push
mov
push
clc
int
dec
ljmp
fcoml
adc
adcb
mov
insl
mov
sti
jns
sarb
mov
ljmp
outsb
dec
es
and
sarb
push
mov
cli
inc
in
jmp
test
leave
aas
push
outsl
lret
sub
fdivrs
xor
call
or
add
xchg
sub
xor
dec
fwait
or
jne
mov
stos
sub
je
or
and
mov
jmp
outsb
adc
inc
nop
repnz
pop
aam
loop
pop
daa
push
or
mov
inc
sbb
jne
addb
int3
xor
mov
lods
sub
std
pusha
xor
xor
cmpsl
fisubl
sbb
sbb
pushf
das
hlt
std
add
and
in
scas
leave
jnp
stos
mov
icebp
inc
outsb
mov
jnp
std
xchg
les
push
jle
push
adc
scas
adc
pushl
jne
arpl
mov
pop
cmp
sub
xchg
ss
add
pushf
add
add
out
pop
je
mov
cmp
adc
xlat
mov
nop
mov
test
pop
sub
mov
add
pushf
inc
ljmp
xor
stos
push
sub
sbb
push
or
push
notl
and
nop
hlt
shlb
mov
fimuls
mov
icebp
outsl
and
push
mov
sbb
adc
sub
outsl
jp
roll
gs
sbb
push
mov
ds
rorl
pop
sti
mov
mov
xchg
int
mov
call
xchg
hlt
ret
xor
sahf
sti
pop
sub
and
mov
add
test
mov
aam
push
iret
xchg
mov
fstpl
push
filds
xchg
pop
lods
fstp
dec
in
sbb
pop
loope
in
sahf
imul
pusha
fcompl
lcall
ficoml
sbb
pop
pusha
mov
sbb
mov
addr16
pushl
cmpsl
imul
add
adc
imul
xor
sbb
jg
and
pop
sub
inc
in
sbb
push
ret
pop
fs
insl
clc
stos
cmpl
sub
push
and
mov
mov
inc
mov
insb
or
jg
or
mov
leave
fnstcw
int
xlat
stc
dec
pop
ret
dec
fldenv
lret
push
add
mov
mov
xchg
adc
xor
clc
cmp
sahf
mov
pop
push
mov
xlat
sbb
jle
jmp
add
inc
fs
mov
inc
cmp
dec
in
leave
popf
lret
scas
xor
imul
cwtl
outsb
insl
frstor
popf
rcl
or
repnz
cmpsb
cmp
sub
aas
push
in
cmpsb
scas
aad
jg
pop
nop
xchg
inc
imull
inc
push
xchg
aaa
jmp
les
pop
and
mulb
addr16
xchg
shll
adc
push
push
imul
icebp
pop
out
push
fildll
cmp
repnz
xchg
push
lret
mov
mov
xchg
xor
mov
fnsave
stos
loop
or
sarb
push
mov
push
cltd
mov
xchg
daa
shrb
pop
ret
jae
and
mov
dec
je
int3
sub
sub
jg
lods
fiadds
push
into
repnz
repnz
mov
and
orl
dec
aas
xor
or
and
inc
aam
push
mov
fsts
dec
mov
scas
jbe
inc
dec
jg
xor
dec
js
sbb
jae
sbb
push
or
test
or
mov
pop
scas
sbb
test
mov
das
lock
in
push
jns
jno
jno
xchg
mov
iret
testl
sub
subl
jmp
bound
cmc
in
add
scas
mov
push
repnz
mov
pop
dec
fists
shrl
sub
outsl
push
jb
test
es
lods
shl
lods
cmpsl
insl
xchg
repz
push
ja
add
xchg
fisttpll
push
test
ljmp
lds
adc
push
adc
and
aas
jge
test
jg
and
add
cwtl
in
xchg
pop
fwait
in
pop
xchg
adc
push
lahf
inc
lret
xchg
cmpsb
jmp
mov
cltd
sub
call
es
and
dec
iretw
sub
jl
xchg
enter
andl
jecxz
mov
in
sahf
mov
stos
lock
fcom
mov
or
xchg
or
mov
jo
and
cmpsb
mov
jbe
fstpl
xchg
push
dec
pop
jle
inc
push
clc
pop
and
xchg
mov
inc
jne
sar
popa
repnz
repnz
test
fiaddl
sub
orl
cld
int3
mov
ret
ja
xchg
and
push
cli
ficoml
jge
scas
in
push
aas
stos
cmp
and
jbe
push
jb
lret
xchg
insb
pushf
pop
xlat
sbb
xchg
shll
mov
adc
scas
xlat
mov
aaa
add
mov
pop
mov
cmp
cmc
rolb
jmp
xor
inc
xor
popf
cmp
std
loopne
stc
or
lcall
les
mov
adc
je
jae
imul
scas
push
outsb
addb
xchg
test
pop
adc
repz
mov
jl
mov
xor
push
or
mov
pop
fcmove
xor
push
mov
sub
inc
lods
pop
iret
mov
aas
les
or
push
movl
cmpsl
cld
lcall
mov
test
js,pn
inc
out
push
cmc
je
sbb
mov
xor
and
jl
lret
mov
and
xchg
outsl
adc
jle
and
icebp
adc
pop
mov
popa
cltd
ret
lods
pop
pop
jae
cmpsb
clc
or
and
movsl
cmpsb
sbb
shl
lds
push
inc
add
or
dec
mov
xchg
or
mov
movq
bound
addr16
lods
iret
cmc
mov
push
mov
mov
mov
and
aam
mov
pop
add
inc
adc
push
dec
lods
cld
add
fistpll
cmp
popf
decl
add
dec
pop
sub
xor
pusha
iret
rcrb
insl
inc
lahf
lcall
jnp
les
xchg
inc
jp
filds
movsb
shlb
movsl
iret
push
jb
xchg
sarl
cli
mov
push
cmpsb
out
sub
rcrb
adc
mov
and
push
jno
xor
push
fwait
mov
jmp
add
mov
jnp
out
cmp
imul
or
mov
xchg
inc
and
push
push
mov
iret
aas
jmp
dec
fisubl
push
jo
cltd
inc
test
xor
sbb
jae
les
repz
push
pop
mov
xchg
jl
dec
fisttpl
mov
mov
imul
dec
in
cmp
mov
outsb
sbb
cltd
lahf
shll
shll
ror
loope
fsubs
mov
pusha
and
push
mov
stos
ret
in
lea
pushf
popa
add
xor
ffree
ret
jb
in
outsb
rcll
push
xchg
call
popa
fs
fcoml
jmp
sbb
pop
push
arpl
inc
lock
leave
pop
push
mov
in
cli
dec
inc
mov
mov
jne
pop
jge
stos
loopne
aas
ret
mov
sub
pop
repnz
xchg
dec
push
ss
dec
outsb
dec
in
mov
dec
fnstenv
shlb
test
movd
loopne
push
or
add
and
cmp
sarl
inc
adc
jns
fistpll
sub
inc
sbb
jb
or
adc
rol
ss
stos
jecxz
lret
adc
lahf
stos
jmp
and
jnp
aaa
cltd
mov
incb
xchg
out
rorl
dec
pop
mov
dec
mov
fucom
mov
and
cltd
cmp
or
insb
call
push
popf
jecxz
jb
fidivrl
gs
pushf
push
notb
cmp
mov
push
outsb
or
push
test
jle
cmpsb
data16
xlat
push
adc
ffreep
dec
std
pop
xor
popa
pushf
lahf
ret
add
and
loope
push
push
mov
push
fwait
mov
push
push
xchg
jne
xchg
inc
push
sbb
das
fisubl
ljmp
call
xchg
pushl
jo
mov
js
insl
pop
movsl
mov
add
and
cli
mov
nop
sbb
mov
push
cmpsl
sub
pop
repz
aam
in
dec
popf
shr
in
adcl
and
into
or
mov
xor
mov
mov
xor
cmpsl
outsl
sub
jne
cmpsl
mov
insb
ficoml
xor
push
out
stc
push
or
loopne
jl
aaa
cmpb
fcompl
adc
repnz
test
xchg
decl
aam
daa
cltd
lcall
sahf
dec
in
ljmp
cmpsl
mov
inc
xor
dec
cmp
cmp
mov
mul
stc
cmp
lods
inc
xlat
mov
add
jo
jg
sahf
fidivs
in
mov
xchg
test
and
sub
or
ds
adc
push
in
subl
sub
imul
rclb
rolb
mov
shlb
fadd
fcoms
int
lahf
add
add
xorl
jnp
pop
clc
xor
mov
ret
sub
adc
js
xchg
or
icebp
mov
sub
fld
bound
or
je
divb
adc
gs
cld
adc
xor
mov
cmp
lods
xchg
sub
adc
or
mov
cmp
and
dec
in
jnp
jg
jl
add
imul
jle
mov
jb
rorb
sub
mov
lret
mov
shlb
mov
jbe
mov
dec
adc
je
adc
lock
inc
lret
jmp
imul
pop
cmp
pushf
lods
jmp
clc
push
test
jbe
mov
ljmp
lock
shlb
jl
pushf
push
stos
nop
mov
jne
pop
sbb
cmpsb
stc
xchg
xchg
pop
jecxz
mov
nop
addb
mov
insl
push
add
lret
shll
out
pop
sahf
roll
xor
pushf
imul
add
mov
test
push
das
pop
test
push
in
or
add
push
adcb
xor
pop
test
mov
leave
out
ficoms
mov
mov
test
push
mov
xchg
xchg
xchg
test
mov
sahf
push
jnp
cmp
mov
jno
mov
cmp
lahf
and
sbb
mov
rorl
pop
push
dec
shll
arpl
xchg
jo
iret
lock
rol
aam
jbe
in
and
mov
call
lahf
sub
sbb
dec
xor
aas
cmp
or
dec
aas
push
adc
out
dec
fdiv
and
pushf
and
idivl
notl
lods
rol
cmp
jge
mov
push
sub
incb
mov
lock
pusha
mov
rol
das
mov
scas
gs
xchg
fwait
mov
in
push
dec
and
xor
pusha
cli
sub
filds
cwtl
jle
fwait
jb
lahf
adc
iret
mov
cmp
or
mov
or
cltd
rcl
and
mov
popf
mov
mov
inc
xchg
mov
inc
xchg
sbb
popa
lcall
popf
aas
or
xor
pop
inc
lods
sub
sub
xchg
addl
pop
and
lock
add
insb
sbb
repnz
ja
ja
int
test
out
cli
lret
pop
add
pop
pushf
inc
stc
and
shll
nop
mov
aas
adc
xchg
pop
cmp
add
sub
lahf
mov
mov
loop
sbbl
xorl
outsl
mov
lds
sub
push
icebp
add
lods
xchg
dec
xor
lahf
cmp
xor
pop
mov
inc
adc
inc
insb
lahf
into
add
and
imul
cmpb
out
out
mov
dec
push
xchg
popf
dec
xor
dec
and
out
call
push
push
or
cmp
scas
faddl
adc
popf
mov
hlt
mov
inc
push
cmp
push
pop
and
icebp
push
lret
addl
out
in
cmp
cmc
jmp
out
in
outsl
repnz
mov
cmp
test
add
lret
lret
cmpsl
imul
jp
sub
jae
adc
js
fsubrs
xchg
jne
fadds
sub
dec
pusha
leave
call
ret
movsl
adc
inc
inc
push
push
bound
or
movsb
outsl
xchg
jbe
cs
stos
nop
sub
mov
sar
loope
out
push
cltd
jmp
cmp
push
xor
push
gs
cli
js
sbb
pop
fwait
mov
mov
bound
jb
dec
add
lock
bound
push
andl
aas
mov
test
ds
mov
adc
rcll
xchg
xchg
ljmp
incl
loope
sub
jp
je
popa
jmp
sbb
subps
into
testb
sbb
ss
fdivs
ds
sbb
add
jg
imul
insl
movsb
pop
data16
xchg
bound
pushf
testb
stos
and
call
mov
int
into
push
inc
cmp
jecxz
xchg
test
adc
push
hlt
icebp
adc
cs
in
xchg
adc
lahf
fwait
dec
mov
bound
leave
xor
push
sub
cld
hlt
mov
imul
ret
rcrb
mov
gs
int
scas
fidivrl
fdivrs
aam
movsb
sti
stc
subl
and
cwtl
pop
pop
xor
inc
ja
je
lods
int3
popf
scas
mov
dec
sub
mov
xchg
add
cwtl
insl
outsb
sub
ljmp
sbb
fdiv
cs
mov
sbb
or
scas
push
adc
push
inc
jl
jns
push
int
lods
mov
enterw
imull
push
dec
and
jae
pushf
fdivr
push
inc
xchg
dec
jg
mov
str
jecxz
jl
xor
call
loopnew
and
push
adcl
aas
iret
mov
fists
jp
aaa
push
arpl
sub
mov
lahf
mov
mov
xor
out
push
and
cli
and
or
mov
push
outsl
fsubs
cmpxchg
mov
pop
paddd
mov
movsl
movsb
into
int3
lods
cmp
xchg
mov
cmp
push
in
out
stc
ds
aaa
xor
mov
xor
sti
loopne
xor
out
jle
push
js
mov
jg
mov
jle
repz
scas
or
rcll
mov
adc
sbb
xor
adc
jae
movsl
dec
cmp
xchg
sbb
subb
or
lock
insl
xor
daa
testb
lret
push
out
xchg
mov
lcall
andb
push
push
ja
out
and
sbb
mov
mov
js
mov
xchg
loopne
out
ljmp
push
xor
sahf
push
cmp
pushf
hlt
neg
lea
sbb
lods
pop
inc
mov
mov
stos
jl
lds
call
jge
jns
loope
xchg
les
jnp
popf
ds
cmp
pop
cwtl
loop
neg
pop
cmp
dec
aaa
fildll
push
xor
subl
out
xchg
xchg
jge
fldenv
sbb
xchg
leave
mov
push
push
cmp
mov
dec
ficoml
lods
rclb
pushf
cmp
data16
lock
jno
cmp
test
push
pushf
inc
in
popa
shlb
cmp
popf
sub
pop
inc
jle
push
mov
sbb
cli
lret
fcoms
mov
or
hlt
mull
xorl
ds
hlt
push
addr16
pop
adc
mov
jmp
lahf
pop
mov
pushf
push
sbb
cmp
enter
in
fistps
cli
xchg
test
stos
push
xor
push
and
repz
dec
cmp
mov
cs
bound
sbb
loope
arpl
je
mov
jecxz
out
or
xchg
jb
fdivs
pop
addb
and
cmp
mov
fdivl
sub
xor
xor
fbld
adc
inc
pop
xchg
popa
add
dec
sub
cmp
dec
mov
push
mov
dec
pop
add
jb
pop
pusha
out
lods
xchg
and
stos
shll
and
lock
cmp
push
pusha
mov
fisttpl
lods
movsb
mov
or
sbb
inc
or
dec
loope
out
push
jmp
push
mov
testb
sbb
xor
lahf
mov
lret
push
imul
sub
fst
ret
cmpsl
dec
out
jg
stc
jbe
fmul
inc
or
dec
mov
mov
push
jl
ss
lcall
inc
stos
aaa
loop
jnp
pop
cwtl
popf
xor
repz
dec
sub
xchg
adc
ss
jae,pn
push
cwtl
lods
mov
xor
mov
inc
into
mov
inc
popf
mov
push
sbb
xor
shll
cmpsl
cmp
dec
sbb
cmp
leave
push
popa
xchg
push
addl
pusha
icebp
mov
sub
iret
jg
pop
cmpl
sbb
arpl
pop
decb
jecxz
stc
pusha
mov
icebp
scas
stos
push
jnp
pusha
pop
in
ret
push
push
icebp
imul
dec
push
xchg
mov
cli
jbe
jne
test
hlt
cmpsl
cmc
insb
mov
fsubl
or
dec
inc
mov
lods
jmp
jb
dec
mov
mov
adc
nop
into
loopne
cmp
cmp
imul
xchg
in
dec
cltd
jl
mov
sbb
mov
movsb
inc
inc
mov
clc
test
std
fwait
push
pop
and
jl
aad
arpl
pop
mov
dec
ljmpw
paddsb
jp
push
movsl
inc
sub
push
leave
dec
out
jnp
xor
lcall
repz
sub
sbb
xor
add
xchg
in
notb
popa
jp
xor
mov
rclb
push
pushf
fistl
pop
jb
aam
ljmp
movsb
out
and
xchg
vpminub
adc
stos
loope
lahf
dec
call
shr
gs
lds
adc
add
add
push
jecxz
cmp
lret
mov
lcall
mov
or
ret
aam
fwait
or
hlt
xor
int3
sbb
icebp
xchg
lods
popl
inc
out
jge
pop
lret
call
aaa
insl
pusha
or
xor
hlt
push
pop
add
shrl
into
jl
add
dec
mov
push
das
mov
sub
jns
and
icebp
outsb
xchg
xchg
add
jp
jp
popf
test
sbb
mov
rcl
int
lea
rorb
iret
std
mov
es
inc
pop
add
mov
in
push
insl
fsubs
adc
inc
cmp
mov
mov
or
sarl
and
mov
mov
cmp
mov
cmp
pop
loopne
lcall
test
xchg
adc
cmpsb
xchg
ret
and
mov
xchg
cmp
jnp
lock
scas
outsb
subl
int
pop
or
aam
mov
inc
push
push
jbe
mov
mov
fldcw
mov
sbb
add
insl
fwait
enter
lods
add
hlt
dec
push
mov
in
cmp
into
js
or
lock
add
insl
add
mov
cmp
and
jae
mov
pusha
inc
insl
jo
cli
ljmp
daa
cmc
outsb
jge
nop
sahf
fwait
hlt
dec
pop
sub
aad
arpl
mov
jmp
mov
mov
jae
sbb
test
les
push
push
jg
inc
jmp
mov
push
sub
xchg
and
out
test
ds
pop
repnz
cltd
xchg
negl
rcll
sbb
jecxz
mov
mov
push
movsl
or
mov
ss
sarl
push
mov
push
fdivr
hlt
add
out
jmp
fistpl
sahf
aam
dec
jge
inc
sbb
mov
mov
push
mov
jg
sub
sub
lea
lcall
faddl
outsb
fisttpll
mov
dec
push
jbe
cmp
fisttps
stos
mov
pop
cmc
cmp
push
and
xor
and
mov
inc
stc
cmpsb
ljmp
cmp
xor
addr16
subb
repnz
loope
cld
das
pcmpgtb
mov
fidivl
xor
push
lret
int
mov
repnz
or
mov
aam
nop
jo
sub
pop
xor
repz
mov
dec
je
or
je
sub
add
mov
sbb
xchg
or
mov
pop
xchg
pop
adc
adc
mov
mov
xor
cmc
mov
ficoms
fscale
mov
pop
push
mov
fs
and
lds
addr16
xor
repnz
fldt
xchg
sbb
pcmpeqb
jno
repnz
add
inc
mov
out
push
stos
daa
jle
pop
adc
andb
mov
mov
iret
jp
dec
dec
loopne
xchg
repz
fdivrs
lea
aad
popa
xbegin
adc
fistpl
push
lock
popf
jecxz
pop
add
test
testl
and
push
mov
out
xchg
jl
in
insl
outsb
popa
repz
jbe
in
sub
and
out
lds
les
add
jle
cltd
lods
imul
jmp
or
inc
sub
mov
ljmp
adc
test
fcoms
lods
adc
ds
cmp
fwait
and
ja
clc
xor
out
mov
xor
mov
xorb
xchg
arpl
push
std
fmuls
aaa
jmp
inc
adc
out
xchg
int3
mov
xchg
fbld
jmp
mulb
daa
sti
outsb
outsl
mov
cmp
add
fisubrs
jae
dec
inc
lret
ja
into
xchg
and
in
addr16
cmp
add
into
xor
cli
jno
lock
das
leave
jecxz
jb
mov
das
xor
pop
pushl
push
xor
in
push
lret
jl
cli
scas
mov
mov
pop
mov
xchg
mov
xchg
or
push
sahf
loop
inc
lods
pushf
stos
jns
in
daa
sub
xchg
ljmp
jo
loopne
sbb
mov
shrb
cld
lret
pop
inc
adc
js
cmp
hlt
mov
arpl
xor
out
and
cmp
idiv
mov
cmp
fistl
int3
adc
test
mov
in
adc
mov
sbb
cld
roll
lods
push
outsl
inc
dec
mov
les
subb
and
jmp
jnp
or
stos
out
push
in
add
or
jge
mov
sub
pop
in
bound
mov
sub
push
nop
xor
repz
sahf
or
and
cmpsl
roll
jnp
push
push
je
adc
fdiv
rorl
imul
add
xor
das
fmull
inc
cmp
push
mov
adc
dec
jp
nop
or
inc
fmull
sub
repz
jp
into
imul
in
and
divb
add
movsl
popf
mov
pop
cwtl
pushf
inc
adc
pop
repz
std
inc
sub
repnz
rorl
scas
or
pop
aam
ret
out
test
sub
pop
inc
adc
aad
stos
dec
clc
fwait
pop
push
dec
repz
cmpl
lods
fcmovnbe
aad
cmpl
ss
xor
stos
loop
fsts
jb
cmp
jns
into
mov
and
and
jge
idivl
adc
xchg
popf
test
push
push
cmp
inc
adc
int
js
jne
jecxz
and
cwtl
add
stos
stos
mov
xor
bsr
xchg
xchg
mov
add
or
xor
sbb
fistpll
imul
js
and
orl
add
pop
mov
shll
xorb
cmc
ja
xchg
sbb
or
pop
das
mov
add
xor
mov
lret
xlat
mov
stc
push
add
adc
jnp
pop
addr16
push
or
ljmp
repz
jns
ror
cmp
cld
sub
push
xor
dec
mov
jae
pop
test
sbb
fwait
inc
pop
es
addr16
pop
push
jg,pn
mov
or
pop
and
mov
inc
test
aas
pop
popf
mov
aad
inc
push
mov
cli
repnz
loop
nop
jmp
aam
fidivrl
inc
inc
mov
jae
inc
jg
inc
xor
xor
sbb
stos
iret
nop
das
clc
into
mov
push
es
imul
pop
pop
lods
xor
test
int
leave
xchg
add
out
pusha
mov
xchg
mov
sbb
fnstcw
dec
fs
mov
fstpt
or
or
addr16
adc
dec
shlb
repz
idivb
fisubl
adc
sub
pop
inc
out
cltd
in
cltd
inc
lret
mov
es
loope
fldt
push
pusha
enter
sub
sbb
and
mov
mov
lahf
dec
fimull
ror
push
jbe
jmp
xor
js
out
and
or
jns
cmp
jecxz
xchg
popa
mov
gs
pop
call
xchg
movsl
mov
cltd
and
stc
inc
mov
lahf
insl
dec
dec
push
xchg
mov
fdivs
mov
jae
inc
roll
xchg
out
outsb
inc
pop
jmp
xchg
xchg
jne
dec
addb
stc
sub
inc
mov
cmp
mov
test
sbb
cmp
mov
adc
lods
inc
jbe
inc
adc
or
sbb
pop
popf
int
out
xchg
push
lds
jecxz
pop
je
mov
aaa
loopne
stc
pop
div
mov
orl
or
dec
push
movsl
out
pop
sbb
in
lds
xor
loopne
cli
insl
sub
mov
sub
call
popf
sub
insb
jg
adc
xchg
push
js
subl
jl
ret
leave
inc
aam
sub
ss
sahf
sub
pop
adc
jmp
outsb
repz
dec
mov
pop
mov
das
push
test
push
das
or
or
ret
jne
arpl
shl
lahf
jecxz
mov
loop
test
xchg
mov
push
xor
mov
sub
inc
cmp
adc
cmp
sbb
push
test
ds
mov
shlb
xchg
mov
mov
imul
add
popf
inc
xchg
aas
fldl
loope
shll
push
test
pop
mov
jnp
ficoml
mov
push
dec
sbb
or
push
jg
adc
jb
and
xchg
imul
dec
sbbl
push
gs
std
fists
pop
fs
test
sar
mov
push
jne
ret
test
and
push
arpl
xor
xchg
sub
fcomi
mov
xchg
in
cmp
jmp
aam
jno
scas
fdivrs
sbb
test
mov
adc
call
lcall
dec
mov
lcall
in
push
scas
adc
xchg
aas
xchg
add
inc
fwait
popa
xchg
outsl
loop
aad
hlt
sub
inc
add
insl
jae
sar
outsl
or
jo
jge
pop
jae
movsl
icebp
inc
mov
mov
mov
jmp
jns
xor
adc
xchg
arpl
or
xor
loop
mov
outsl
cs
out
cld
push
or
jmp
push
fwait
push
lret
addl
movsl
jecxz
sub
inc
xchg
cmpsb
mov
xchg
cld
js
lcall
inc
movsb
push
push
dec
mov
jge
test
inc
mov
ja
data16
mov
and
mov
mov
sahf
jo
clc
ret
pop
das
push
jo
inc
adc
es
pop
xchg
leave
cltd
adc
in
movsl
ljmp
mov
lea
sbb
out
jl
xor
icebp
cmp
cmp
iret
xchg
cmp
popf
aad
add
ds
shl
push
dec
jo
dec
ret
je
lret
insl
shrb
adc
scas
and
dec
push
call
push
cli
xor
aad
jg
xchg
inc
dec
es
arpl
xchg
cmp
cltd
data16
pop
inc
out
push
clc
rorl
jb
add
fisubrs
push
sbb
fwait
fwait
mov
xor
jle
aaa
std
iret
popa
leave
outsb
jo
pop
fmull
lods
in
stos
popa
dec
pop
orb
ud2
xor
addl
jecxz
ficoms
pushf
mov
mov
in
int3
push
mov
jno
xchg
jmp
mov
adc
div
daa
pop
push
imul
pop
and
leave
push
loopne
and
and
add
fwait
testb
sarb
cmp
push
jb
jge,pt
sbb
xor
daa
inc
sub
or
inc
inc
ret
fdivrp
insb
outsl
cmp
rclb
jae
aad
sbb
int3
repnz
cld
and
fsubrp
adc
pusha
dec
pop
loope
sbb
sub
shlb
and
mov
mov
pop
inc
arpl
jle
out
add
dec
inc
push
xor
push
inc
cwtl
andb
sbb
and
lcall
loopne
fsubs
xor
adc
and
sbb
or
iret
insb
ljmp
call
adc
cmp
push
mov
arpl
xlat
scas
xorb
test
mov
cmp
push
out
es
push
sbb
xchg
cwtl
fisttpl
dec
add
out
or
repz
repnz
imul
push
je
in
sub
push
enter
jge
rclb
mov
orps
imul
mov
fsubrl
sbb
and
or
aaa
push
jge
jb
sub
fld1
xor
xlat
dec
pop
xor
inc
inc
pop
add
mov
dec
mov
lds
cmp
pusha
sbb
jg
mov
orb
js
lret
dec
add
scas
push
add
jae
rorl
cli
sbb
and
push
loop
xchg
mov
insb
lcall
inc
xchg
xchg
or
mov
dec
and
dec
shll
mov
dec
xorb
xor
je
jae
jb
inc
ja
int
pop
popf
fnsave
fwait
out
sbb
in
out
orb
jle
sahf
mov
cmp
xchg
std
or
add
xor
jp
xchg
test
and
in
push
mov
movsb
jns
out
inc
ljmp
ret
xor
gs
lea
push
add
outsb
fwait
int3
sbb
mov
dec
xchg
jmp
into
in
cmpsl
cmp
sar
aad
inc
dec
movsl
ret
ds
and
dec
xor
iret
pushf
mov
clc
mov
out
xlat
and
add
pusha
mov
mov
call
test
gs
xorb
cmp
test
add
shlb
sub
js
pop
stos
xchg
dec
or
mov
lods
and
arpl
je
dec
sti
or
push
ficomps
mov
push
dec
daa
xorb
popl
push
mov
pop
jne
cltd
lret
and
lcall
sub
bound
fdivrl
stos
mov
xchg
ss
add
sbb
xor
fwait
push
mov
dec
out
pop
and
loope
imul
sub
xchg
sub
pop
scas
cmp
pop
xor
movb
pop
add
jne
jg
sub
imul
push
jmp
inc
loope
xor
or
xchg
incb
inc
push
xor
ss
test
in
lds
xorb
movb
outsb
push
or
sbb
cmp
mov
add
loop
mov
test
mov
movsl
pop
daa
jo
lahf
cmp
in
in
sbb
mov
aas
pop
mov
ret
movsb
lret
in
mov
jmp
jecxz
cmc
fidivrl
hlt
outsb
mov
pop
mov
ljmp
loop
add
fmuls
fcomps
sub
sbb
mov
add
andl
mov
out
mov
mov
adc
lahf
inc
add
mov
jns,pt
push
dec
cmp
lock
lds
xlat
andl
sub
inc
cld
mov
daa
cmp
jae
js
jmp
lea
in
push
adc
xchg
push
popf
adc
idivl
xor
jb
in
pop
faddl
je
cmp
or
cmp
repz
pop
sub
or
mov
scas
or
jae
insb
aas
xor
push
cld
jns
mov
enter
int
insb
cmpsl
fsubrl
lret
lods
ljmp
mov
xchg
xchg
insb
loopne
clc
jmp
pop
or
xor
dec
fucompp
pop
dec
pop
pop
cmp
jecxz
dec
inc
adc
inc
fadds
or
jb
cld
sahf
cltd
test
sahf
dec
sbb
adc
lcall
lcall
add
data16
das
hlt
repz
test
xor
cmp
xchg
sub
adc
mov
inc
pop
js
mov
jg
xor
push
xor
pop
sub
mov
imul
add
int
stos
scas
leave
pushl
test
ljmp
adc
stc
jne
sbb
lea
jmp
pop
test
add
xor
stc
jns
push
ret
sbb
fcmove
xchg
int
pop
out
iret
sub
lcall
mul
pop
maskmovq
divl
fcomps
cmpsl
adc
cmp
movsl
jb
xor
pop
jmp
popf
jno
sub
adc
mov
pop
xchg
mov
sahf
ret
xchg
add
out
cmc
cmc
aam
dec
fwait
or
sub
push
sbb
js
outsl
sbb
pop
push
add
xchg
mov
cmp
fstp
sub
sub
fwait
jne
mov
je
movsl
adc
and
dec
repz
and
pop
std
cmp
popa
cmp
pop
int
push
cmp
dec
sbbl
loope
mov
xchg
jae
repz
jge
xor
gs
loope
lock
cmp
push
stc
mov
js
pop
outsl
sub
lods
jg
aaa
arpl
cmp
cmp
shrl
cmpl
popf
pop
xchg
cmp
cmp
mov
fnsave
mov
and
outsl
js
adc
loope
mov
out
jb
cmp
fmull
add
or
mov
jp
pushf
jbe
enter
test
jmp
mov
es
adc
cli
push
inc
dec
cltd
ja
imul
mov
adc
loop
add
mov
xor
mov
xor
mov
inc
jnp
sbb
das
add
outsl
inc
sbb
mov
xor
xor
xor
aam
sbbl
sarb
lret
scas
popa
scas
jmp
cmpsb
pusha
outsb
int3
jecxz
dec
inc
cld
xor
xor
mov
test
aaa
sub
fildl
or
inc
push
addr16
jmp
cmp
xlat
jmp
aaa
pop
or
xchg
dec
jbe
pop
in
shlb
sbb
adcb
push
add
sbb
sbb
ss
pushf
cmp
mov
xchg
cmpsl
dec
insb
mov
leave
add
test
push
push
push
loope
xor
loop
mov
dec
outsb
mov
aad
das
sti
sub
cmp
stos
jle
mov
sub
rcrl
and
mov
test
cwtl
repz
movsl
sar
imul
sarl
push
int
push
notb
sti
xor
lock
adc
subl
sbb
nop
ret
add
test
les
push
or
mov
pop
xchg
into
dec
lods
rol
pop
jge
fisubs
xor
out
adcl
shll
mov
scas
and
push
push
mov
adc
xchg
idivl
mov
adc
lock
mov
sbb
inc
add
inc
arpl
push
and
xchg
jae
aam
packssdw
lds
dec
xchg
movsb
mov
iret
jg
jge
fstps
cmpsl
jb
sbb
dec
jbe
imul
jns
cli
sbb
call
ret
push
dec
pop
mov
gs
ljmp
mov
aam
jb
inc
and
push
fisttpl
mov
stos
dec
cli
add
shlb
pop
movsl
loop
pop
xor
sbb
pop
jle
je
sarb
fs
in
mov
std
ret
push
or
push
push
inc
mov
rolb
lods
pop
arpl
nop
xchg
nop/reserved
sub
mov
in
mov
cmp
icebp
lods
mov
jns
sbb
xor
jns
idivb
xchg
lea
xchg
push
icebp
adc
add
mov
imul
out
push
ror
aam
sbb
in
test
sarl
adc
and
adc
subl
lock
test
push
jno
scas
lea
loopne
aad
cmp
gs
mov
cmp
aad
fiadds
std
inc
movsl
popa
dec
test
pop
adc
lods
fbstp
add
xorb
aas
scas
ficomps
daa
xor
lea
insb
xchg
dec
xlat
push
pop
cmp
push
sbb
ret
mov
lahf
sub
pushf
add
dec
sbb
push
out
push
stc
mov
mov
ret
adc
divl
mov
cmp
mov
sti
mov
ds
or
lods
test
mov
imul
jge
stc
les
shll
popa
pushf
cmp
sub
mov
sti
dec
push
xchg
mov
inc
imul
xchg
ljmp
add
rorb
pop
popf
push
sub
jnp
aam
ret
add
add
and
sub
inc
inc
and
mov
scas
imul
ficoms
and
test
xor
sub
movl
cld
outsl
loop
or
pushf
xchg
popf
dec
inc
push
sbb
pop
xchg
mov
cmc
popf
popa
aas
pop
inc
clc
sbb
or
test
rcrl
scas
incl
sbb
pop
pop
int3
and
gs
jbe
or
add
insb
adc
jns
out
enter
mov
cmp
movsl
dec
xchg
pop
mov
sti
es
or
adc
inc
or
rclb
dec
sbb
xchg
iret
jae
xor
aad
mov
movsl
inc
leave
cli
dec
fdiv
pop
jge
push
stc
fnsave
sub
aad
ret
dec
out
mov
bound
imul
imul
push
dec
or
into
lds
cltd
je
int3
mov
xchg
mov
mov
jbe
sub
cmpsb
sub
sarb
in
aam
fldl
addr16
mov
out
mov
int
repnz
movsb
xor
inc
jnp
pop
xor
shll
out
orl
imul
lods
popf
xchg
push
fucomip
mov
ljmp
adc
fistpll
aad
sub
pop
loopne
mov
lahf
sbb
mov
ret
jecxz
mov
rclb
dec
and
cli
dec
or
scas
pop
in
sub
leave
out
cmp
jb
sub
jb
das
and
popa
or
jbe
mov
ds
rolb
mov
fiaddl
jg
out
mov
insl
sub
cmp
xor
divps
or
or
fimull
lods
inc
mov
ja
or
mov
mov
xorl
sbb
mov
and
pop
cmp
cwtl
sub
jecxz
dec
sarl
mov
or
repnz
cmpsb
out
and
cmc
lea
cld
ret
popf
xlat
cmc
pop
cmc
add
shll
dec
ja
add
pop
push
pop
cmc
rolb
cli
push
shlb
jecxz
mov
popf
and
xchg
adcb
and
or
push
shl
mov
cwtl
cld
es
mov
das
dec
cmp
jecxz
cltd
xchg
pop
mov
bound
into
add
xchg
popf
dec
mov
push
dec
cs
movsb
push
inc
push
scas
scas
ljmp
xlat
mov
push
arpl
mov
push
jmp
fcmovnbe
imul
lds
xchg
popf
fwait
sbb
int
das
lds
dec
popf
push
leave
je
pop
movsb
cmp
cmp
mov
xor
out
movsb
sub
xor
fwait
mov
xlat
mov
xchg
adc
in
adc
fildll
push
int
jmp
push
pushf
push
icebp
xchg
or
push
jns
mov
scas
jb
je
mov
dec
inc
sbb
addr16
in
enter
xchg
ffree
repz
and
mov
push
mov
leave
fwait
fwait
daa
adc
cmpsb
and
notb
stos
leave
cltd
xchg
sar
lock
nop
xor
xor
mov
dec
add
pop
pop
and
rol
mov
jbe
mov
leave
sahf
out
rcl
jmp
nop
sub
in
int
es
addb
cld
push
mov
pop
push
xor
loop
loopne
adc
mov
inc
pop
in
cli
add
ret
ret
dec
icebp
test
sbb
ds
xchg
nop
jnp
or
xor
and
xchg
add
das
fmulp
subb
jecxz
ret
das
xor
and
das
lds
shll
push
inc
mov
jp
add
jns
ja
sub
mov
add
jg
fildll
mov
ret
sbb
test
std
inc
sbb
mov
pop
pushf
pop
in
leave
fwait
es
insb
mov
clc
dec
xor
testb
lcall
jl
xor
movsb
mov
sub
push
adc
pusha
push
leave
and
shll
mov
bound
pop
or
not
sbb
stc
icebp
sbb
jae
jl
cltd
ljmp
adc
mov
sbb
test
aaa
xor
aas
inc
mov
sub
mov
stos
push
sbb
mov
test
jno
gs
frstor
rorb
insb
adc
nop
xorb
test
cmp
push
hlt
pusha
dec
sbbl
in
daa
hlt
dec
mov
jecxz
call
in
cmp
notl
shll
xor
ret
mov
pop
mov
push
jg
ffreep
sub
inc
lahf
xor
in
adc
jle
add
dec
lds
jg
xchg
stc
roll
inc
lock
dec
or
ret
pop
push
adcl
mov
inc
xchg
or
imull
lahf
orb
fs
call
inc
sub
push
push
movsb
pop
jge
in
cli
test
in
fsubrl
lahf
cmp
adc
xchg
gs
mov
push
jo
adc
adc
mov
daa
leave
xor
push
jns
std
and
fsts
repnz
fwait
outsl
aaa
idivl
pop
sbb
movsl
mov
xchg
in
fsubl
sbb
lcall
cmp
push
js
pusha
lods
sbb
push
les
stos
insb
and
or
pop
mov
mov
cmpsb
in
in
lods
sbbb
mov
movb
mov
inc
lcall
mov
sahf
sub
push
sub
push
pop
sbb
xlat
xchg
xor
or
cmp
xchg
in
popf
es
cltd
lods
test
hlt
ja
outsl
xorl
call
pop
lret
xchg
inc
out
popa
gs
es
decl
and
adcl
int3
cmp
in
pop
inc
push
mov
mov
lods
sbb
decb
pop
sarb
push
sar
xor
mov
call
xor
or
dec
dec
roll
jb
scas
mov
mov
mov
clc
jecxz
or
mov
lahf
dec
mov
xchg
jmp
loopne
mov
push
pop
mov
mov
ss
enter
addr16
jne
inc
aas
imul
xor
lods
and
push
repz
std
cmp
mov
cmp
stos
out
test
rcrl
leave
xchg
stos
fcoml
mov
ficomps
pop
fbld
xor
jae
push
cmpsb
popa
mov
insb
xchg
jp
outsl
push
push
pop
les
sub
mov
int
leave
adc
dec
lds
nop
mov
dec
imull
scas
stos
fdivs
hlt
jb
in
and
pop
push
xchg
sbb
int
and
popf
hlt
adc
test
xchg
out
lods
xor
and
jge
or
ss
loopne
aam
cmc
cmp
jp
pop
test
cmp
or
div
pop
mov
add
and
and
adc
dec
add
xchg
pushf
lahf
pushf
sub
lods
push
popl
xchg
test
call
pop
add
lods
mov
jo
sbb
aam
pop
adc
or
pop
into
pop
or
fistl
out
mov
divb
push
cmp
sub
mov
jmp
cmp
int3
xor
add
in
mov
insb
add
call
dec
xor
sahf
xchg
aad
adc
not
inc
pop
fs
enter
test
xor
ljmp
aas
dec
mov
pop
mov
insl
imul
adc
jl
stos
mov
jle
or
jg
jb
lret
jecxz
movsb
sti
jno
fwait
enter
xchg
stos
movsl
mov
adc
loope
ret
jo
leave
pop
pushf
lret
std
gs
jl
mov
jae
mov
adc
popf
icebp
pop
xchg
xor
arpl
stc
mov
push
dec
dec
push
inc
mov
popf
sub
mov
jg
dec
stos
repnz
xchg
jge
ja
lret
cmp
je
inc
popf
xor
jbe
imul
test
jmp
push
sub
bound
cmp
fnstcw
mov
out
xor
inc
bound
pop
gs
and
jmp
imul
in
in
dec
add
into
int
jno
mov
addb
fucom
mov
scas
adc
popf
sar
and
push
pop
aam
call
imul
lea
xchg
ja
push
icebp
add
js
push
mov
dec
adc
mov
ficomps
sub
test
dec
addl
push
xor
sub
dec
into
sti
cmp
jle
lods
mov
xchg
cmp
js
push
scas
mov
pop
rcrb
inc
cmp
jno
xchg
test
sarb
cmpsl
cld
inc
fadds
xor
hlt
pushf
push
mulb
or
sti
shrl
inc
and
adc
test
sub
pop
inc
push
outsb
mov
dec
cltd
jle
jbe
mov
ljmp
fiaddl
rcrb
out
xchg
fsts
aam
xchg
mov
jecxz
or
data16
jo
sub
addr16
rcrl
dec
test
lahf
outsb
insb
daa
and
cli
and
sbb
test
jae
aaa
jo
push
xor
xchg
enter
xchg
or
call
aas
dec
adc
fimuls
ficoml
aaa
int
push
adc
mov
adc
cmp
dec
add
sbbl
dec
cmpsb
add
adc
jge
outsl
jo
popf
mov
fwait
or
pop
cmp
mov
int
xchg
insl
xchg
je
xchg
jge
jge
je
dec
sbb
and
mov
faddp
out
sbb
lods
push
add
xor
mov
pop
inc
pop
xor
outsl
sub
ds
movsl
pop
sbb
add
and
pop
jbe
mov
push
adc
add
sarl
aam
pusha
inc
dec
mov
pop
scas
lods
repnz
push
cmp
sbb
movsb
outsl
imul
mov
jae
adc
aas
lret
mov
pop
cs
mov
popa
jb
xchg
jecxz
pop
mov
popa
jo
pusha
stos
fdivs
negb
jmp
xor
aaa
sti
dec
ss
stc
mov
cmp
jns
lcall
insb
push
dec
mov
adc
mov
pusha
aam
in
cltd
and
inc
ficomps
xor
pop
cltd
in
test
jno
or
xchg
loope
jl
scas
mov
push
xchg
mov
cmp
int
lds
pop
pop
in
push
fsubrs
lret
or
cs
in
mov
push
pop
les
cmp
pusha
mov
test
xor
lahf
aas
fidivl
xor
and
arpl
add
popf
pop
jecxz
mov
adc
loop
mov
rcl
in
insl
push
in
mov
imul
in
adc
je
jmp
pop
je
repnz
repz
movsb
divl
cmp
jle
adc
sbb
push
mov
js
jb
rcrl
sbb
ja
jecxz
test
inc
add
pop
xor
push
jle
mov
shll
fisubs
test
mov
mov
aad
rolb
sbb
mov
call
or
jae
jo
mov
mov
fcoms
pop
adc
clc
mov
and
popf
frstor
push
test
cs
ds
cltd
jnp
mov
lret
sbb
jae
je
lods
and
call
cld
lods
shll
add
and
and
arpl
sti
mov
dec
js
push
and
mov
sub
cwtl
sbb
shlb
jno
or
xchg
mov
sub
inc
fs
dec
mov
das
jecxz
mov
sub
add
scas
dec
aam
pop
inc
neg
aaa
shlb
loope
cmp
incb
les
mov
mov
add
xchg
in
and
mov
jns
jnp
int
gs
pop
adc
sub
xchg
xor
mov
ret
getsec
fwait
addb
pop
pop
jns
pop
sub
in
mov
sbb
ficompl
repz
imul
cmp
pop
sbb
test
xchg
push
fisttpl
mov
dec
jne
ret
inc
xchg
scas
mov
sti
pop
movsb
sub
pop
dec
fnstsw
jg
sub
push
adc
into
mov
add
test
cmp
aaa
dec
movb
pop
cmpsl
paddd
hlt
sbb
inc
cs
cmp
loopne
leave
ret
jbe
inc
in
mov
xor
cs
lahf
mov
fwait
xchg
push
loopne
popl
shrb
jb
xor
aaa
ljmp
int
and
jno
rolb
in
xchg
jg
test
call
dec
or
cmpsb
std
aaa
push
bound
movsl
xor
data16
test
xchg
jae
mov
test
out
out
and
jnp
pop
sbb
shlb
add
sbb
inc
jmp
inc
shr
and
mov
jnp
dec
jge
jae
rcrl
fldt
aaa
jns
sbb
int3
ror
repz
or
xchg
and
stos
cmc
jmp
insb
sub
add
and
das
ds
jecxz
lock
sahf
in
jb
push
or
mov
mov
lea
addb
arpl
cld
mov
adc
cmpsl
negb
mov
loope
xchg
pop
test
dec
pusha
into
mov
xor
ss
cmp
das
sub
stos
incb
xchg
pop
ja
pop
aad
cltd
inc
shll
jl
outsl
jae
xchg
test
outsl
ret
jno
pop
pusha
flds
lcall
sub
cmp
in
xor
mov
jmp
fs
jnp
insl
dec
in
adc
sbb
mov
xor
shl
shlb
in
pop
cmpsb
addr16
leave
cmpsl
cmp
repz
popf
or
mov
inc
dec
mov
push
mov
lcall
les
add
shlb
add
inc
sbb
jo
mov
ljmp
insb
idivb
lcall
pop
in
mov
or
pop
xor
jl
xchg
inc
loopne
faddl
mov
mov
pop
and
scas
ror
xor
dec
fwait
push
dec
nop
pop
mov
mov
mov
xchg
add
mov
mov
mov
out
xchg
shll
xchg
mov
add
ret
dec
call
xchg
ret
and
sbb
movsl
mov
and
rcrl
stc
and
sbb
mulb
movsl
out
jo
ja
push
xor
aas
flds
test
aas
or
or
pop
and
into
in
jg
lods
jbe
sbb
bound
jle
jg
mov
sub
ret
push
sarl
cmp
outsl
in
sbb
hlt
pusha
and
vpcomud
pushf
push
mov
pop
arpl
pop
repz
in
jp
fcmovnb
lea
or
pop
addr16
daa
nop
push
fcmovbe
xchg
aaa
xchg
sarl
push
mov
push
sbb
add
adc
mov
movsb
dec
outsb
enter
int3
mov
outsl
inc
scas
mov
movb
pop
clc
out
or
lods
arpl
fcomi
movsl
sub
xor
lahf
out
sbb
iret
es
and
xchg
jb
movsl
int
push
xchg
push
pop
or
xchg
fidivs
push
add
xchg
pop
dec
xchg
xchg
sbb
mov
or
adc
sarl
dec
iret
mov
cmpsb
shr
mov
rorb
insb
add
ds
xchg
sbb
inc
xor
aas
dec
dec
ret
jne
xchg
and
scas
or
jmp
adc
lret
fcompl
std
lock
mov
sub
sub
inc
movsb
sbb
fwait
sub
pop
jl
pop
lds
iret
xlat
xchg
sub
mov
xor
xchg
test
out
or
push
outsb
iret
mul
and
push
ds
sbb
sub
mov
cmp
add
push
insb
test
lock
dec
mov
add
adc
roll
call
mov
dec
rclb
sbb
push
test
lea
in
sub
sbb
mov
repnz
jl
or
dec
repnz
imul
xchg
outsl
rcrl
or
ds
int3
les
push
outsb
test
dec
movzbl
sbb
mov
mov
add
sub
sub
lahf
or
aam
in
mov
and
cmc
movsl
add
jmp
std
lock
cmp
scas
daa
mov
dec
adc
fwait
cmpsb
insb
mov
in
dec
pushf
xchg
mov
pop
push
mov
movl
pushf
sbb
loop
or
xchg
call
jae
cltd
cltd
and
add
mov
test
scas
mov
mov
test
in
push
pop
iret
cmpsl
mov
and
insb
ljmp
mov
bound
sub
lahf
sbb
sub
int3
mov
mov
outsl
addr16
or
js
mov
in
cld
xchg
test
inc
add
test
pop
fnstenv
cld
xchg
jecxz
stos
in
test
push
xchg
addl
jns
lods
into
push
lea
and
iret
cs
add
icebp
loope
je
in
test
fwait
repz
pop
mov
idiv
lahf
jmp
mov
fistps
ror
dec
lcall
fisttps
movsb
jb
pop
jns
push
adc
xor
jecxz
mov
mov
mov
sub
push
out
cltd
arpl
cmpsl
push
inc
inc
mov
std
popa
cmc
inc
sub
pop
std
or
aam
int
movsl
repnz
pop
cmpsb
insb
cli
dec
dec
daa
daa
sbb
movsb
hlt
mov
repz
jns
out
shlb
mov
sarl
fnstenv
cmp
outsb
mov
mov
add
mov
pop
ljmp
dec
arpl
jle
clc
mov
fiaddl
bound
mov
push
outsb
iret
fs
mov
jo
jnp
xlat
shl
pop
jg
jae
push
out
call
mov
mov
popf
xchg
add
or
aad
stos
xchg
sti
ret
icebp
cltd
sub
stos
dec
add
andb
pop
sahf
aad
iret
js
in
cmpsl
mov
lds
mov
ffree
pop
gs
fimull
xchg
jmp
in
mov
inc
ss
sbb
mov
pop
or
mov
outsl
xor
in
ret
xor
loope
pop
fnstcw
or
sbb
leave
int
cli
and
subl
xchg
jp
sahf
jp
loop
outsb
mov
jns
xchg
xor
jmp
ss
dec
sbb
and
into
loop
js
popa
fidivs
pop
inc
inc
shr
or
mov
sub
xchg
loope
fildll
pop
xchg
jb
mov
das
cmp
xor
mov
dec
loopne
push
mov
ja
dec
push
and
stos
dec
jnp
adc
je
jmp
mov
mov
push
mov
daa
lea
jmp
into
jae
inc
nop
mov
sti
es
insb
mov
pusha
jo
les
mov
bound
mov
pop
into
clc
mov
xchg
add
mov
cmp
mov
jg
mov
jmp
and
xor
lcall
sub
xchg
ja
das
jg
push
test
sub
ds
lock
repnz
je
jg
sub
lea
cmpsl
mov
fistpl
cwtl
xor
cmp
pop
push
and
mov
inc
jg
sub
jnp
xchg
icebp
out
out
das
xchg
loope
popf
cltd
pop
pusha
fs
enter
or
std
lret
int3
test
fwait
xor
arpl
gs
inc
ja
xchg
mov
mov
xor
ds
add
nopl
arpl
int3
mov
lret
in
in
scas
arpl
sbb
in
pushf
mov
clc
loop
or
sub
outsl
test
daa
dec
xor
imul
test
jns
jecxz
xor
cmp
inc
inc
jge
pushf
sub
jecxz
xor
xchg
fisttps
xor
mov
mov
shlb
inc
mov
pop
and
rol
xchg
jne
pop
aam
xchg
jg
out
pushf
push
add
addb
loope
imulb
mov
subl
aas
sti
xchg
lods
jle
sub
sbb
push
mov
lods
mov
push
shlb
dec
add
cmp
jl
xor
xchg
addr16
nop
hlt
xor
fildl
sahf
push
das
iret
mov
jno
pusha
xor
subl
sbb
mov
jp
imul
or
pop
jno
movsl
mov
hlt
xchg
jg
decl
lcall
imul
je
mov
xchg
icebp
mov
fwait
scas
sbb
mov
add
xor
xchg
add
fadds
jle
push
xor
fs
inc
scas
arpl
ret
mov
sar
mov
sahf
xor
xor
pop
sub
dec
call
test
cmp
mov
fcmovnbe
int3
adc
lcall
stc
out
and
mov
jecxz
fcomps
and
mov
rcr
stos
jno
test
es
lock
fildll
pop
pop
push
adcl
int3
out
jae
and
fidivl
sbb
xchg
outsb
sahf
xchg
movsb
cltd
loope
jo
pop
xor
pop
dec
icebp
sbb
pop
outsl
dec
jp
mov
movl
vmwrite
fstps
lock
xchg
loop
jmp
cwtl
jl
mov
nop
jl
jb
mov
ljmp
lret
lret
enter
es
xchg
out
repz
testl
test
and
nop
jno
and
aaa
jbe
jmp
add
roll
mulb
jecxz
push
rcll
push
fsubrs
xorl
push
inc
jno
inc
cli
and
ljmp
jne
in
aam
mov
or
jmp
dec
or
adc
xor
imul
xor
or
cwtl
movsl
stos
stos
xchg
adc
not
jmp
xorb
and
sbb
dec
subl
mov
and
xchg
inc
mov
flds
cld
arpl
or
icebp
cli
aas
mov
cmp
and
pop
xlat
int
mov
dec
rclb
cmpsl
jno
stc
mov
adc
jo
lar
dec
xor
xorb
clc
and
mov
aas
dec
mov
sbb
sbb
aam
rolb
lret
hlt
mov
jecxz
stos
gs
adc
lods
out
repnz
test
xchg
lds
frstor
nop
push
mov
mov
lea
fdivr
push
dec
add
dec
xor
out
int3
hlt
out
mov
out
fildl
loope
je
pop
sub
cltd
fucomi
or
cmp
add
cltd
dec
lcall
movaps
pushf
xlat
mov
mov
jle
sbb
mov
cltd
in
cmpsl
orl
adc
ja
lds
mov
hlt
test
xlat
xor
sbb
in
sbb
hlt
rorl
pop
or
pop
lret
nop
cmp
and
shl
mov
popf
jnp
adc
or
cld
adcb
fdivs
sub
or
push
add
ja
sbb
add
xor
pop
and
jnp
inc
scas
dec
clc
faddl
loop
in
add
aas
jns
repz
xchg
jle
adc
cwtl
fstl
lret
and
fwait
pusha
and
jno
arpl
out
data16
mov
inc
or
popf
mov
gs
sbb
lods
sub
idivb
xor
pop
or
scas
adc
sarl
pop
jg
lods
rorb
cmp
adc
xor
jp
fisubrl
xor
ret
cld
mov
xorb
aas
sbb
rcl
gs
daa
enter
lahf
pusha
sbb
movsl
xchg
lcall
add
nop
pushf
out
jb
add
xchg
push
lret
cmp
jne
lock
fildll
frstpm(287
jp
jl
xchg
push
daa
sahf
add
js
sub
imul
cmp
or
xchg
or
push
xchg
mov
nop
aam
dec
sbb
add
xchg
add
xchg
icebp
mov
lret
jo
xchg
pop
out
iret
jmp
lods
xor
and
repz
adc
mov
add
pop
shr
inc
sbb
sbb
ja
dec
mov
bnd
into
sub
push
add
imul
imull
les
xor
icebp
ret
movsb
inc
jnp
push
xchg
dec
cs
fmuls
sti
outsl
in
pushf
sbb
fwait
mov
pop
jmp
sub
addb
int
mov
repnz
pop
push
jp
ret
clc
xchg
cli
cld
sub
in
icebp
js
sub
int3
or
sbb
nop
sbb
sub
int3
fsub
dec
dec
lods
call
mov
stos
repnz
aaa
ljmp
jmp
movsb
std
mov
sub
push
push
adc
mov
mov
mov
mov
cli
ljmp
jo
ret
inc
jne
dec
daa
repz
stc
jecxz
lcall
lods
inc
popf
dec
popa
cmp
repnz
push
mov
mov
add
jns
pop
pop
icebp
jbe
jl
xor
mov
adc
andb
pop
add
es
sbb
cmp
pop
jmp
sub
mov
sub
das
movsl
pop
cwtl
cmp
jle
aas
or
mov
insl
add
or
aaa
stos
adc
pop
ret
popa
mov
clc
sub
jmp
shll
xchg
imul
mov
sti
ret
sub
mov
lds
es
test
push
jl
cmp
pop
pop
or
hlt
mov
xchg
push
jbe
js
addr16
inc
adc
pop
mov
jns
loop
dec
mov
push
dec
add
dec
in
cmpsb
push
pop
pop
stos
xchg
xchg
repnz
bound
jnp
enter
mov
lea
sti
mov
and
jge
pop
or
or
jmp
cmp
loop
cmpsl
aas
shl
sbb
lock
jb
imul
cmp
and
shl
inc
and
or
and
addr16
fcoml
mov
lcall
fsub
insl
int3
adc
scas
push
mov
cmp
xchg
dec
pop
mov
fs
mov
sbb
aam
cmp
cmp
inc
test
push
ret
repz
repnz
lcall
sub
xor
loopne
stc
dec
mov
add
inc
push
pop
add
xchg
pop
sub
insl
movsb
mov
mov
jge
call
mov
nop
pop
jne
lcall
mov
or
sub
hlt
sub
mov
inc
mov
or
sub
and
mov
movsl
test
sti
xor
sbb
call
mov
test
les
xchg
outsl
xchg
and
dec
jno
inc
adc
es
or
adc
movsl
in
js
inc
push
mov
lcall
push
mov
push
push
cmp
scas
sti
adc
xchg
push
cwtl
stos
inc
loop
sub
insb
shrb
push
add
push
fists
bound
out
dec
cmp
mov
fiadds
cmc
mov
sub
roll
mov
and
push
mov
dec
sbb
popa
hlt
aas
mov
push
cmp
mov
mov
repz
pop
jnp
dec
outsb
addb
fisubl
sbb
lods
int
movsb
ds
and
pushf
ss
push
mov
adc
lock
add
cmc
pop
cld
jg
inc
in
push
addr16
push
mov
mov
mov
rcrb
dec
clc
cltd
fwait
js
pop
mov
pusha
arpl
mov
imul
xchg
and
movsl
dec
add
lock
xor
cmp
cmp
loopne
les
movsl
lods
jge
xor
or
shll
xchg
rcrl
imul
in
loope
mov
pop
pop
jp
jmp
sub
mov
fmull
inc
repnz
dec
pop
mov
mov
or
and
push
popa
cwtl
pop
fsubl
inc
mov
test
add
repz
fpatan
push
enter
xor
imul
fdivrp
adc
daa
mov
xor
push
dec
fdivrl
lea
mov
ljmp
adc
and
mov
test
adc
xchg
daa
jo
in
sub
mov
inc
decl
rorl
lahf
push
iret
gs
inc
adc
cld
call
pop
fildl
jae
mov
add
pusha
in
xor
inc
inc
mov
arpl
rorb
aaa
xor
pop
stos
and
mov
mov
test
out
cmp
mov
mov
push
pusha
stc
lret
jb
rorl
inc
inc
xchg
lea
inc
push
int3
ljmp
push
sub
mov
std
inc
xlat
sub
mov
por
add
idivb
push
rorb
ljmpw
and
add
mov
cwtl
lods
inc
cmpsl
adc
arpl
sub
shlb
shlb
pop
mov
adc
jl
push
mov
push
pusha
jo
push
mov
cld
loop
jl
test
and
ja
imul
inc
popf
jecxz
lahf
cmc
imul
push
mov
inc
cli
sarb
pop
mov
jl
jg
mov
das
xchg
adc
cltd
daa
aaa
mov
jo
hlt
dec
call
pop
mov
cmp
test
dec
mov
js
mov
cmp
push
mov
mov
push
lahf
jns
mov
mov
jne
push
push
adc
pop
test
sub
psrlw
fdivl
cmc
aaa
push
cmp
outsl
push
sub
int
sub
xor
and
xor
sbb
cmpsl
jecxz
test
std
pop
aas
jl
nop
cmpsb
aam
mov
adc
mov
loope
fistps
call
mov
push
xchg
sub
in
cmc
push
cmp
aam
stc
push
xchg
xor
lods
outsl
fisubrs
pushf
call
add
cmp
mov
push
mov
mov
xor
pop
push
mov
dec
notl
cmp
test
sbb
aam
add
and
xchg
xor
das
push
mov
jnp
mov
mov
cld
leave
scas
mov
pop
xchg
fs
aam
loope
push
adc
mov
orb
jbe
into
push
sti
pop
dec
js
sub
popf
or
mov
cmp
sbb
and
pop
je
rclb
nop
cs
fisttpl
push
xchg
call
imul
rolb
pushf
xchg
mov
nop
andl
fistps
mov
add
or
mov
push
adcb
ja
mov
mov
sub
sar
rclb
push
loopne
jl
test
jb
mov
add
lret
add
hlt
punpcklbw
push
or
divl
add
lds
mov
and
loop
mov
inc
ja
pop
sbb
dec
xchg
mov
lods
jnp
aaa
in
movsb
mov
hlt
pop
xor
movsb
ss
or
and
out
in
xchg
andb
cmp
sub
and
push
lds
stc
cwtl
stc
aas
loopne
cmpsl
loope
jp
call
lahf
pop
and
mov
fiaddl
mov
push
arpl
mov
cmp
pop
stc
call
xchg
pusha
jns
sub
xchg
push
mov
mov
sbb
xchg
imul
adc
dec
cmpsb
push
pop
cmp
xor
xchg
outsb
arpl
mov
jbe
mov
bound
outsl
movb
outsl
mov
add
mov
lahf
sahf
les
iret
cwtl
dec
aam
add
lcall
repnz
int3
sbb
cmp
push
xchg
lcall
xor
imull
ret
dec
xor
sbb
nop
xchg
xor
pushl
mov
ljmp
jae
mov
adcb
cmp
cld
pop
sbb
mov
pop
outsl
stos
ficoms
or
sbb
int3
jl
lret
xchg
iret
iret
cmpsb
jecxz
popa
xor
leave
dec
popf
jo
out
inc
lcall
push
iret
jmp
mov
cmp
mov
dec
xchg
cli
scas
sbb
lods
push
inc
add
clc
and
mov
add
sbb
test
stos
stc
sub
xor
mov
sbb
stc
add
mov
jo
and
cmc
xchg
pop
adc
mov
mov
pop
fnstsw
mov
xor
sub
jo
mov
gs
test
dec
push
inc
lea
xchg
ss
xor
sbb
jle
loope
xor
rclb
fadds
sbb
push
dec
enter
aas
in
ficoms
dec
dec
roll
jp
sub
movsl
xor
inc
out
adc
xchg
dec
dec
cmp
mov
test
jl
jbe
movsl
mov
jl
fcomps
jo
cwtl
sbb
rolb
jp
mov
xlat
pop
inc
push
call
xor
jg
test
fldcw
sbb
bound
adc
push
into
andl
adc
adc
rcl
loopne
in
popf
jg
icebp
jp
lcall
xorb
xorl
jns
push
nop
cmpsb
sbb
adc
test
lock
jge
js
ds
mov
fisttpll
dec
fs
jb
cld
or
or
sbb
adc
mov
jne
in
and
in
repnz
sub
scas
xchg
jns
out
fstps
jmp
nop
dec
movsb
js
pop
in
adcl
clc
jp
insl
fidivrs
testb
jae
sbb
jne
or
mov
pusha
push
push
inc
fcmovne
cmp
inc
lret
inc
ficompl
mov
pop
or
cmpb
loope
arpl
test
mov
and
xor
fld
pop
xor
jns
push
pop
sarl
mov
xchg
adc
dec
lcall
xlat
adc
sub
xchg
pop
dec
pop
ret
inc
adc
pop
ds
sbb
neg
xchg
jmp
ss
cmp
and
jmp
xor
push
push
fdivrp
repz
or
cmp
pop
out
scas
cmp
inc
and
fistpll
test
push
fidivs
mov
js
imul
inc
mov
dec
add
ds
jge
vorps
in
inc
pop
addr16
lock
cmp
leave
inc
aam
je
repnz
mov
sbb
dec
sub
push
adc
out
or
inc
mov
fdivr
xchg
aas
push
decl
sarb
jno
push
dec
pop
add
adc
sbb
out
gs
dec
iret
pop
sti
lret
jbe
xchg
inc
in
gs
addr16
cli
lret
dec
lret
es
push
pop
or
loope
div
popa
std
push
and
lret
ja
inc
adc
lods
or
add
sub
arpl
rclb
add
and
lea
out
mov
cs
sub
aaa
xchg
cmpsb
lods
out
out
fwait
mov
roll
imul
add
bound
arpl
inc
in
lea
ret
cmp
lcall
mov
or
psrlw
cwtl
sub
mov
fs
fsubl
dec
xor
dec
das
lahf
repnz
out
push
push
rcrl
nop
orb
jg
jp
xchg
jo
call
dec
stc
sub
arpl
scas
bound
jmp
testb
fidivs
std
leave
int
stos
fisubrl
cs
lds
cld
mov
mov
mov
ret
aad
repz
or
sbb
fs
or
push
movsb
dec
adc
xchg
or
pop
subl
lahf
sahf
add
mov
rorl
push
jmp
mov
cmp
add
ljmp
or
enter
push
into
push
mov
or
cmc
dec
jb
push
add
xchg
test
decb
rep
in
fnstenv
mov
shr
cmp
or
lods
and
jnp
cmc
and
sub
push
add
out
repnz
adc
das
roll
movsl
mov
mov
lods
sbb
test
sub
dec
xchg
and
das
out
mov
adc
sub
mov
ret
xchg
retw
outsb
repz
sbb
cmc
aaa
loopne
sbb
xor
push
lds
into
mov
je
xchg
bound
cmp
sub
dec
cmp
pop
outsb
xchg
lahf
insb
fmuls
stc
int3
xchg
repnz
adc
jmp
push
ss
jno
push
and
xchg
lahf
mov
out
dec
les
mov
xchg
fsubr
inc
je
lcall
mov
push
std
mov
in
jp
setl
mov
cs
cmc
jmp
outsl
inc
js
pushf
arpl
pop
and
mov
mov
andb
pop
push
rcrb
test
jo
sub
rclb
adc
sub
fimull
aam
stos
testl
xchg
in
fdivp
adc
aam
lret
cmpsb
adc
lods
jl
lods
aaa
cs
and
rorb
outsl
cli
xchg
stos
nop
adc
xlat
mov
cmp
cld
sbb
mov
xchg
repz
cmp
sub
dec
xchg
inc
daa
pop
outsl
movsb
jae
stos
pop
dec
or
pop
push
loopne
xchg
dec
push
jp
adc
enter
and
jecxz
icebp
in
dec
push
mov
test
out
cmc
movsl
hlt
fwait
adc
inc
stos
push
mov
mov
and
xor
popa
jmp
mov
clc
fnsetpm(287
cmp
cld
or
shll
pushw
ret
mov
pop
clc
lret
xchg
fmull
cmp
fcom
xchg
loope
cmp
jnp
mov
stos
cmp
hlt
jbe
aad
adc
pop
mov
ljmp
imul
stc
outsb
cmp
inc
daa
sub
mov
sub
insl
clc
aas
shll
insl
dec
outsb
bound
jo
outsl
pusha
mov
not
adc
mov
cmp
rcll
dec
dec
pusha
pop
fcmovnb
adc
xorb
push
in
dec
mov
out
pop
jmp
ret
dec
adc
sbb
inc
cli
fwait
jmp
mov
push
fs
ror
pop
dec
rorb
clc
ret
popa
test
repnz
mov
sbb
out
jno
jp
and
fisubs
je
lcall
mov
push
test
into
cmp
data16
cmp
clc
cmp
push
imul
ret
pusha
jl
daa
aaa
int3
sbb
and
je
jecxz
gs
sub
rcl
sub
push
or
and
sbb
fimull
cwtl
out
fdivs
mov
ss
lods
ficoms
cmp
adcb
push
ret
fdivrl
adc
xchg
test
sub
dec
mov
fcoml
leave
test
pop
stos
and
mov
jae
lret
fisubrs
push
xchg
lret
and
or
pop
call
dec
add
inc
icebp
adc
jae
cmc
cmp
inc
cmc
clc
pop
sub
cs
test
cmpsb
cmp
in
loope
icebp
jecxz
test
xor
lret
fwait
das
mov
dec
cmpsl
push
cmp
mov
vmovntps
nop
xchg
inc
adc
pop
lock
ss
xor
test
int
jl
test
push
or
inc
sbb
pusha
mov
inc
ss
or
clc
por
sti
push
mov
xor
sub
adc
xchg
ret
out
imul
out
loop
lds
dec
fisubrs
push
cmc
sti
push
out
or
pop
jp
push
xlat
xor
dec
pop
cltd
xchg
xlat
loopne
pop
lret
pop
mov
pop
loopne
test
mov
or
add
pop
mov
insb
loopne
or
inc
mov
aad
stos
jecxz
aas
pop
addr16
cwtl
mov
pop
orb
push
ret
ja
pop
andl
loop
out
add
cmp
dec
in
popa
adc
hlt
ficoms
inc
or
fwait
mov
lods
loopne
add
and
jns
add
pushf
int3
jno
push
in
sbb
out
or
sbb
pop
inc
pop
cmp
lahf
pop
xchg
test
test
pop
je
clc
push
ret
pop
sti
leave
mov
inc
inc
cwtl
xlat
scas
xor
fs
jmp
daa
sub
cltd
dec
ret
and
jo
sub
rcrl
adc
sti
fcmovu
mov
lret
rorl
bound
hlt
movsb
xlat
jb
lds
add
into
push
add
xchg
cmp
fnstenv
rol
pop
add
mov
pushf
data16
jecxz
add
fwait
addl
jae
clc
xchg
push
pop
ja
sbb
cld
xchg
xor
inc
jge
cld
cmc
dec
rol
bnd
mov
int
jnp
fwait
test
ds
movsl
arpl
xor
inc
mov
jmp
js
test
jp
inc
test
mov
xlat
movsl
inc
imul
cli
fs
out
filds
xorl
adc
in
pop
lock
xchg
push
insb
gs
xchg
xchg
bound
cmp
jle
jecxz
inc
jae
jbe
or
lods
lods
mov
cmpsb
lret
cmpsb
imul
movb
cmpsb
ss
sbb
int3
aaa
ret
jp
mov
sub
add
pop
pushf
aam
mov
jecxz
idiv
sbb
test
push
and
dec
fbld
pop
aam
sub
scas
cmp
mov
popa
ljmp
pop
in
push
push
sub
sub
and
js
jo
sub
xlat
stc
push
das
pop
and
ss
push
or
shl
and
sub
hlt
xor
cmp
inc
int3
jo
popf
adc
sub
movsl
sub
loopne
mov
mov
jp
arpl
inc
dec
pop
imul
shrd
pop
sub
adc
adcb
outsb
sbb
dec
xorl
stos
xor
out
mov
push
adc
push
sub
jno
pop
push
xor
movsl
inc
or
mov
insl
es
pop
push
ds
aas
jmp
movb
xchg
lods
and
icebp
enter
mov
repz
xchg
mov
in
lea
sub
push
lds
rcl
sub
fcomp
xorb
lds
data16
mov
and
add
popa
mov
leave
adc
or
das
mov
push
repz
das
inc
dec
mov
aas
or
sti
jae
lahf
cmpsl
lock
out
loope
jmp
add
mov
shr
inc
lods
dec
xchg
xchg
rcll
dec
xor
mov
pop
and
movsl
dec
xor
xchg
shlb
sti
loop
inc
int
aam
fnstenv
and
lret
fwait
dec
int3
push
leave
xor
stos
mov
xchg
je
sub
popa
std
add
repnz
sub
andl
xchg
dec
mov
das
mov
pop
es
pop
lods
adc
rolb
pop
movsl
cli
les
jns
jno
rcrl
ret
sub
sub
addb
lea
pmaxub
inc
lahf
push
mov
mov
inc
sub
mov
mov
decb
sbb
xchg
shrl
inc
inc
jbe
cs
mov
pop
ror
out
js
cli
or
mov
adc
scas
mov
push
xor
sub
adcb
inc
nop
lods
adc
cltd
xchg
mov
ficoms
jecxz
pop
add
jmp
jae
adc
mov
call
push
insb
les
and
lahf
sbb
cmp
out
mov
dec
xor
or
mov
fwait
sbb
loop
es
nop
sub
and
addl
clc
xlat
pop
adc
or
pop
dec
sbb
sbb
push
xor
mov
mov
push
and
cltd
jmp
data16
cmp
aas
pop
xchg
push
mov
movsl
cli
jae
fildl
lock
scas
flds
test
lret
dec
sub
pop
adc
sub
clc
loop
pushf
mov
cmpsl
aas
jmp
or
jns
pop
pushf
int
and
cmp
notl
mov
loopne
mov
fldt
repz
sti
jnp
inc
clc
and
cmc
aam
roll
jp
jp
leave
scas
sbb
repnz
and
cmp
add
cmp
add
in
pop
into
pop
sub
xlat
call
test
sbb
popa
call
hlt
fbld
pop
or
pop
mov
xor
roll
fidivs
cmpsl
cwtl
jmp
sub
dec
stc
sarb
std
icebp
xor
mov
push
shll
push
addr16
iret
inc
in
xchg
jl
addr16
push
inc
call
lods
decb
loope
jb
xlat
push
adc
scas
mov
mov
arpl
adc
ret
push
xor
xor
cld
subb
inc
mov
pushf
test
sbb
sbb
xchg
int
jle
jge
push
call
js
xchg
push
sub
ret
lds
out
addr16
je
shrb
mov
arpl
enter
mov
call
xor
testb
mov
movsl
push
insb
add
fldpi
xorl
mov
out
and
mov
insb
inc
xchg
sub
out
sub
jle
push
jae
mov
inc
sub
repz
push
fnstsw
inc
addr16
mov
push
mov
fldt
outsl
stos
and
sub
adc
mov
push
pop
iret
out
and
sub
test
pop
pop
xchg
idivb
sub
xchg
movsb
xor
ret
lret
pop
jg
pop
lds
aad
jnp
sbb
add
loop
fdivs
inc
adc
popf
xchg
lock
jns
ljmp
dec
stc
sti
dec
inc
scas
sub
repz
mov
lea
aad
ret
jecxz
xchg
mov
int
sbb
inc
cmp
mov
stc
je
iret
inc
sbb
mov
xor
push
push
dec
pop
xlat
jns
mov
idivb
mov
xchg
popl
dec
jb
jns
fildl
xchg
xor
and
push
mov
add
clc
dec
popa
sbb
xlat
loope
xor
dec
inc
pushf
aaa
adc
fwait
push
movsl
push
shr
outsl
stos
mov
push
add
pop
jmp
xor
adc
jae
lahf
addr16
add
hlt
out
cwtl
imul
and
outsl
push
sub
mov
stc
or
pop
cli
pop
int3
aas
into
popa
push
xor
or
mov
mov
xchg
mov
add
jp
xchg
jo
adc
jb
or
pop
scas
daa
out
sbb
lahf
lds
mov
inc
lcall
aas
add
dec
and
lret
insl
add
xchg
icebp
push
pop
decl
int
or
sbb
xor
out
jle
decb
mov
subl
les
pop
out
aam
gs
ret
fs
f2xm1
daa
rclb
and
pop
dec
pop
adc
mov
arpl
stc
repz
xchg
lcall
in
rcl
ret
or
fisttpll
mov
pusha
out
mov
loope
loope
test
mov
test
push
mov
and
lock
push
pop
mov
mov
jmp
mov
push
sbb
data16
sbb
int3
dec
aaa
out
in
shrb
inc
jae
imul
das
sbb
dec
fs
test
cmp
into
mov
addr16
mov
les
das
dec
out
arpl
mov
ret
incb
rorl
cmp
dec
cmpsl
rolb
sbb
adc
pop
xchg
stos
into
add
or
out
cmp
or
leave
out
stc
sub
mov
sbb
dec
nop
mov
dec
xchg
push
cltd
and
sbb
es
jne
mov
lea
xchg
jge
cmp
stc
addb
testb
aad
clc
dec
jnp
test
mov
jmp
jnp
inc
mov
pop
lret
popfw
jo
mov
push
dec
add
test
test
loop
jae
inc
mov
jecxz
shr
leave
call
std
jl
cmp
ret
orb
in
mov
js
sub
cmp
xchg
adc
cwtl
aaa
or
aad
sub
jg
int3
test
jg
jns
push
pop
arpl
test
gs
addr16
sbbl
fs
lret
xchg
mov
jge
or
xor
enter
aaa
dec
or
and
push
fidivrl
mov
xor
stos
jp
sub
sar
jge
and
out
xor
mov
int3
ja
inc
pusha
in
mov
pop
xchg
sbb
dec
popf
sti
or
fadd
lds
push
adc
imul
outsl
jmp
popf
daa
cmp
or
in
mov
dec
pop
xchg
fmull
dec
pop
rorb
mov
mov
scas
das
stos
fs
insl
nop
cmpsb
inc
pusha
xor
cmp
movsb
xlat
lahf
shlb
mulb
cmp
and
pusha
insl
and
es
andl
mov
add
pushl
mov
and
fistpll
lahf
push
push
add
cmp
sahf
pop
pop
je
sbb
xchg
dec
push
mov
int
and
xchg
mov
jo
faddl
pop
or
sub
mov
mov
in
sub
dec
pop
repz
pop
aam
mov
push
xchg
pop
inc
cwtl
push
adc
cmp
dec
adc
lcall
mov
hlt
rolb
shlb
xchg
mov
inc
push
js
in
out
mov
inc
ret
lods
jge,pt
add
repz
int
xchg
iret
je
fdivrs
rcll
mov
jle
je
ljmp
mov
sub
std
in
or
or
sbb
xchg
int3
sub
adc
dec
pushf
jg
enter
add
and
out
inc
jmp
xor
loop
mov
xor
mov
dec
pusha
aaa
cmpsl
pop
xchg
test
mov
mov
and
xchg
and
mov
pop
enter
xchg
mov
sbb
inc
ss
mul
lods
ss
sub
pop
sbb
iret
jge
jne
push
cmp
sbb
loop
pop
push
scas
sar
mov
pop
pop
gs
dec
aad
or
flds
ret
mov
jle
aaa
pop
mov
xor
mov
cmp
enter
push
sbb
fcoms
cmp
xchg
fs
mov
push
iret
xor
mov
fdivrl
cld
cmp
sbb
push
fdivrl
popf
adc
jg
ret
fs
aaa
cmp
mov
movsb
ret
cmc
xor
je
pushw
sbb
stos
cvtps2pi
ret
push
dec
jecxz
and
dec
sub
sub
jmp
cltd
and
pop
fistl
daa
nop
adc
test
mov
and
loopne
push
cwtl
jo
into
add
cmp
daa
inc
bound
pushf
movl
mov
jno
cmp
lds
addb
mov
cmp
push
or
dec
xchg
pop
cld
jns
jo
push
jns
mov
imul
stc
mov
fsubrs
sbb
pop
loope
mov
jle
fcoml
aad
push
jne
pop
and
inc
mov
cltd
dec
adc
mov
scas
sub
mov
and
xor
insb
xchg
mov
jo
mov
repnz
popf
out
pop
shrb
negb
cli
int3
mov
push
divb
jl
leave
pop
movsb
mov
fstl
dec
loop
fwait
bound
fsubrs
out
pushf
outsl
mov
bound
mov
mov
add
outsl
or
cmp
movd
outsb
cmp
aas
cmp
cmp
jnp
aam
fwait
push
iret
add
pop
mov
js
mov
ror
imulb
shrb
xchg
lret
dec
loopne
in
pop
pop
into
aas
push
xor
ffreep
lret
int
js
hlt
pop
xlat
lcall
fsubs
fistps
cli
fbstp
divl
push
test
pop
pop
stos
cmp
rcrb
repnz
sub
pusha
int
xor
mov
sbb
and
mov
int
rcr
xchg
sbb
jno
addl
mov
sti
rcr
xor
das
fs
mov
ss
cmp
or
insl
lcall
inc
mov
lods
adc
mov
xchg
push
push
mov
sub
xlat
imul
jecxz
mov
fildl
divb
frstor
push
inc
push
mov
jbe
pushf
test
ds
lods
cmp
pusha
jo
push
dec
ret
in
inc
sahf
rcll
das
js
xchg
mov
add
and
cmpsb
mov
and
jecxz
pop
incb
sbb
inc
mov
and
loop
push
jns
out
sbb
dec
adc
mov
adc
dec
cmp
cmp
outsb
rcrl
arpl
mov
sti
xchg
add
arpl
stc
xchg
push
mov
call
arpl
mov
not
pushf
aas
aam
fwait
xor
leave
rcrl
std
insb
add
add
sbb
out
insb
push
push
xlat
sub
dec
test
filds
fcoms
cmp
mov
lods
aam
shl
sbb
js
icebp
jge
rcrl
push
and
cmp
imul
dec
mov
xor
dec
in
mov
mov
jbe
bound
repnz
fmulp
lret
add
shlb
add
pop
orb
outsl
fstps
or
mov
jo
call
ljmp
inc
fadds
shrl
addr16
sarl
mov
insb
pop
sti
dec
adc
push
out
sub
or
or
mov
xor
adc
adc
add
jno
mov
aad
mov
js
out
loopne
in
loope
xchg
sar
cmp
lret
nop
xchg
idivl
push
add
imul
lock
cmp
push
pop
movl
lahf
insb
pop
xor
push
jl
xor
inc
es
pop
or
sbb
sub
xchg
sub
sbb
cltd
cs
sarl
scas
or
andl
cltd
jbe
addl
ret
ss
stos
pop
and
std
movsb
cmp
pop
jl
gs
les
or
pushf
call
cltd
dec
in
stos
packsswb
clc
xchg
lea
jo
inc
or
daa
push
xor
cs
pop
jno
fmull
jae
fildl
mov
jbe
mov
jne
orl
xchg
adcb
scas
ss
add
xor
jbe
pop
jmp
mov
mov
add
fwait
add
aas
mov
xor
aas
adc
push
push
xor
sub
in
inc
mov
xor
std
test
test
out
push
jae
jbe
push
ja
pop
or
mov
stos
daa
mov
xchg
mov
rolb
mov
sbb
jae
dec
jle
lcall
xchg
pop
jmp
out
inc
and
stc
dec
inc
pop
test
movsl
and
ret
push
rclb
push
xchg
sbb
push
sbb
inc
push
sbb
lds
dec
test
jns
lea
push
xchg
cs
movsb
les
lods
mov
pushf
mov
aaa
xchg
xlat
sub
fstpt
xor
enter
scas
sar
mov
push
jmp
arpl
movsb
cld
jg
and
xchg
add
and
aaa
lock
fwait
iret
ds
shl
push
arpl
or
les
dec
jg
scas
scas
sbb
inc
dec
jg
test
cmp
gs
stos
insl
out
shlb
push
cs
ds
mov
xchg
mov
insb
stc
xchg
arpl
in
sub
notl
push
mov
cmp
inc
test
ljmp
cli
js
jp
cli
cmp
push
sbb
push
das
or
or
jbe
out
or
ja
fisttpll
add
inc
fsubrl
inc
push
cmp
push
shrl
pop
mov
sbb
cmpsl
bound
dec
jae
enter
aad
lahf
xor
fmull
dec
int3
gs
cwtl
jae
xchg
jl
cltd
add
cmpsl
dec
call
xor
pop
and
mov
into
push
or
lret
test
pop
cmp
sbb
mov
mov
into
mov
ss
arpl
aaa
mov
xor
scas
jg
cmpsb
xlat
rdpmc
loopne
mov
movhps
fidivl
cmpsb
dec
sbb
daa
std
pop
pop
mov
loop
cmp
mov
cmp
in
sub
out
pusha
icebp
push
and
sub
clc
mov
dec
lret
scas
xor
aam
xchg
test
xchg
push
jns
xor
in
fbld
sub
mov
adc
inc
inc
sbbl
pop
scas
push
jae
gs
push
mov
jp
fcmovne
xchg
pop
cli
or
inc
pop
into
add
lods
pop
jp
xchg
push
push
adc
xchg
imul
mov
pop
mov
mov
lods
dec
push
shl
rorl
dec
jp
sbb
andb
inc
imul
cld
jl
pushf
mov
pandn
popw
pop
ret
std
xabort
xor
ds
sub
cmp
mov
dec
adc
out
call
adc
mov
movsl
testb
rcrb
sbb
pop
jge
popa
mov
xchg
scas
lds
outsb
shl
sbb
mov
mov
push
addb
sub
test
dec
cmp
jmp
sahf
jl
push
dec
sbbl
pop
pop
jno
adc
inc
pusha
lcall
daa
sbb
div
jl
add
inc
rol
pop
cld
cmp
mov
cmp
bnd
mov
jae
cmp
adc
lods
add
mov
jbe
xchg
imul
mov
sahf
ret
pop
aad
xor
xor
sbb
lock
inc
xchg
mov
cltd
cmc
cld
pop
jno
hlt
int3
aam
adc
ret
inc
jp
jmp
es
jge
in
push
add
and
pop
cmp
dec
jns
and
fwait
jno
and
xlat
and
out
loopne
cmp
dec
adc
pop
sub
inc
jg
std
cmc
enter
push
xchg
cltd
xchg
sub
lret
imul
mov
pop
leave
pop
call
ret
dec
mov
and
mov
inc
xor
pop
ja
lods
leave
push
mov
popa
leave
xchg
cmp
pop
push
dec
shl
inc
sub
andb
or
cmc
or
int
aas
dec
xor
loope
sbb
sub
cmp
mov
je
daa
je
in
jg
jle
mov
mov
xlat
mov
mov
pop
add
dec
lcall
imul
dec
int
movsl
push
scas
add
push
mov
in
mov
jae
sti
fdivl
dec
lcall
fcoms
loop
xor
mov
pop
adc
roll
movsl
loop
shr
sbb
hlt
adc
mov
bound
pushf
xor
enter
xchg
in
mov
call
loop
cmp
int3
call
fiadds
outsb
xchg
loop
jns
repnz
enter
jp
scas
loope
shrb
movsb
inc
arpl
xor
add
fnstcw
mov
inc
hlt
cmpsb
add
scas
daa
fsubr
push
xor
and
adc
sbb
loop
jnp
int
mov
aaa
inc
iret
xchg
pop
or
fdivs
mov
ja
mov
xor
mov
xchg
lahf
and
leave
subb
jbe
shlb
testb
pop
adc
scas
les
mov
sbb
xor
dec
push
push
int3
cltd
xchg
aam
arpl
xchg
clc
sub
fucomip
stos
dec
fisubrs
enter
scas
sbbb
sahf
rcl
push
add
dec
pushl
adc
cld
add
aaa
pop
in
push
mov
mov
outsl
jle
cltd
cwtl
stos
cmpsl
popf
pop
syscall
mov
pushfw
cmpsl
adc
and
lea
pop
mov
add
sbb
insl
scas
rclb
push
ror
daa
push
movsl
add
add
sahf
enter
sahf
xor
repnz
push
arpl
insl
fwait
clc
push
mov
mov
sti
mov
xlat
inc
ret
sbb
repz
xchg
mov
mov
add
bnd
mov
stos
and
aaa
xor
mov
pop
mov
in
cwtl
rcrl
xchg
les
jns
xor
xor
pusha
add
lods
mov
jmp
cmp
jp
xor
mov
ret
fmuls
mov
ret
imul
mov
loope
ror
fdivr
icebp
fildl
mov
scas
pop
mov
xlat
or
ljmp
sub
push
je
add
ljmp
bt
aad
pusha
outsl
inc
scas
jmp
es
call
xorl
mov
jns
popa
jg
sub
xor
mov
sahf
roll
loopne
xor
lea
push
dec
mov
cmpb
aas
ljmp
std
fimuls
dec
add
push
dec
adcb
leave
int3
paddq
pop
bound
dec
stos
inc
adc
xchg
jbe
scas
add
lahf
repz
xor
sbb
mov
and
mov
mov
xchg
daa
add
and
xchg
add
add
mov
cmp
lock
mov
sub
mov
xlat
jl
mov
dec
push
hlt
test
dec
out
mov
aad
xchg
push
lahf
sbb
push
test
int3
xor
les
and
fbld
mov
mov
fadds
or
shrl
test
out
mov
ret
and
into
inc
pop
push
mov
lret
sub
push
fcoms
jo
mov
cmp
inc
js
in
out
mov
sbb
cmp
push
inc
jecxz
dec
push
inc
or
jb
int
xchg
repnz
and
or
ja
and
pop
hlt
xchg
test
aad
xor
jge
xor
xlat
imull
daa
out
aas
hlt
fcomip
daa
ror
add
push
stos
sub
pop
stos
test
scas
fwait
or
clc
scas
xchg
cwtl
sbb
lret
add
clc
add
andl
or
cmpsb
jg
pop
pop
mov
int3
xchg
repz
dec
arpl
or
mov
insl
xchg
imul
dec
or
data16
mov
pop
jne
les
jecxz
mov
or
arpl
loopne
shrb
insb
or
sbb
arpl
mov
lret
movsl
lock
lock
push
mov
jb
push
inc
xchg
dec
mov
inc
fcoml
rclb
fiaddl
add
dec
cwtl
sub
dec
pop
test
lods
xor
sbbb
xlat
xchg
sbb
xchg
dec
fmuls
dec
iret
cmp
push
jmp
cmp
fsubrp
push
addr16
inc
push
dec
lea
mov
stos
ret
push
orb
jecxz
lret
mov
stc
scas
and
adc
shlb
loop
jl
imul
add
sbb
sbb
clc
xchg
addr16
sbb
cs
sbb
or
insl
insb
test
les
xchg
sub
loopne
popf
dec
popa
out
gs
aam
xor
pop
adc
jecxz
adc
mov
outsl
aam
ds
mov
lods
fisttpl
shrb
sbb
pop
roll
imul
decl
fstpt
clc
ret
mov
jg
dec
fsubrs
loope
out
jle
out
push
adc
fidivrl
lahf
xchg
mov
rcll
adc
mov
outsl
or
repnz
hlt
psrad
js
les
add
popf
pop
out
cmp
mov
sub
out
xor
addr16
or
scas
inc
inc
lahf
out
mov
or
sbb
mov
cmp
es
scas
scas
dec
push
fwait
push
pop
mov
mov
inc
jle
lret
ds
imull
pop
xor
sbb
cmpl
cmpsl
das
dec
repnz
arpl
mov
cltd
std
imul
push
icebp
les
add
in
gs
sbb
mov
out
cmpsl
inc
pop
cmp
jae
mov
loop
xchg
jns
lods
subb
dec
jne
xchg
fwait
es
aaa
jecxz
das
rcrl
lds
movsl
ret
mov
push
popf
test
dec
jp
add
pop
push
addr16
lcall
mov
outsb
jae
es
pop
jg
loopne
mov
inc
jae
mov
sti
stc
pop
ja
les
jg
xchg
imul
movsl
fiadds
xor
cs
add
push
lods
fs
rclb
mov
cmp
cmp
stos
inc
mov
pop
ja
pop
cmp
insb
pusha
push
mov
mov
sbb
cmpsb
sbb
mov
add
fs
lcall
sub
add
rcrl
in
mov
jnp
adc
cmpsb
mov
ret
xor
jg
inc
cmp
negw
sbb
jg
sbb
mov
stos
and
push
daa
vaddsubps
mov
push
xchg
or
sbb
repnz
sti
shll
push
mov
std
jp
mov
inc
aam
sbb
cmp
and
ret
push
lods
ret
dec
mov
insl
mov
xchg
cmp
stc
lods
daa
mov
xchg
nop
divl
adc
jmp
cs
cmp
mov
push
rcrl
out
or
xor
ds
jmp
and
pop
bound
mov
or
testb
sub
dec
int3
dec
outsb
scas
cmpl
int
in
xchg
push
mov
ja
inc
cmp
mov
daa
adc
mov
and
jl
enter
xchg
imul
shr
dec
lcall
mov
popf
repnz
jb
adc
mov
insl
or
inc
mov
mov
xchg
and
push
lods
mov
dec
xor
sub
xor
sub
mov
clc
and
std
cltd
popa
in
test
mov
jno
push
xchg
movsb
mov
iret
sub
xchg
dec
mov
pop
dec
jnp
and
xchg
or
int3
loop
ret
add
mov
ret
stos
cmp
push
lea
mov
xor
xchg
pop
in
std
jl
xor
lret
repz
sahf
fcompl
xlat
enter
sbb
pop
fsubr
push
jp
jo
insl
loopne
aam
xor
inc
xor
sbb
jle
mov
jmp
scas
mov
add
call
cmc
pushf
jne
sub
cmpsl
xchg
loope
test
and
dec
xor
repnz
mov
out
mov
mov
lret
push
cmp
xor
and
sub
jle
dec
sbb
stc
arpl
inc
jns
lods
dec
iret
inc
addr16
xor
and
mov
testl
xor
int3
push
sarl
jno
pushf
insl
dec
cwtl
cmp
mov
je
pushf
addr16
scas
mov
rol
je
pop
repz
or
je
xor
pextrw
aas
pop
cmc
push
sub
movsb
shrd
inc
mov
insb
push
int3
movsb
sub
pushf
iret
jmp
int3
cltd
sahf
ljmp
lret
mov
pop
cmp
cmp
nop
jg
test
ljmp
repnz
mov
outsb
jno
insb
daa
and
adc
popf
mov
sbb
enter
xchg
mov
mov
dec
fimuls
sbb
fnstsw
mov
in
in
add
insb
fwait
popa
xlat
rclb
pop
inc
xchg
scas
pop
pop
mov
mov
outsl
cmc
bound
adc
dec
jge
jp
sbb
gs
lret
into
lcall
pop
pop
jp
outsb
hlt
sbb
mov
dec
xorb
lods
add
adc
xor
call
or
xor
add
loope
push
or
and
js
jle
sbbb
or
jp
mov
cli
rcll
aaa
mov
sub
lods
aaa
hlt
mov
add
insb
lret
add
inc
repnz
lcall
sub
ja
gs
cmp
popf
pop
out
sub
jns
mov
loopne
pop
ret
fidivl
imul
ret
jns
js
cmp
pop
xchg
push
xor
mov
sub
notb
dec
aad
adc
cmp
out
leave
and
std
cmp
fs
lods
fdivrl
add
iret
fbld
dec
cwtl
inc
xor
repz
ljmp
push
mov
push
ret
mov
sub
xor
hlt
inc
sub
insl
in
out
aam
mov
push
les
je
insb
mov
rcrb
inc
adc
adcl
cmp
and
sbb
adc
mov
push
mov
xor
add
leave
int
add
mov
cmp
fidivrs
nop
xchg
jnp
cwtl
test
fs
push
pop
jmp
and
shl
fwait
sbb
scas
jnp
or
jmp
jne
icebp
inc
loop
cmp
fists
ja
nop
cmc
xor
std
outsb
xchg
scas
imul
in
scas
cmp
push
call
mov
dec
imul
inc
jg
icebp
sahf
icebp
mov
pop
sti
jge
lock
push
cmp
mov
or
mov
aad
push
fs
imul
jns
adc
mov
scas
xchg
iret
popf
mov
mov
mov
mov
insb
sub
pop
insb
dec
inc
mov
jbe
jnp
mov
adc
push
test
subb
stos
lcall
xchg
mov
jne
mov
outsl
sbbb
sbb
adcl
mov
sub
mov
nop
dec
mov
lret
int
pop
or
mov
gs
cltd
out
fcoms
es
jg
pop
mov
icebp
int
out
inc
and
mov
imul
rcrl
leave
or
fnstenv
mov
add
jmp
fs
sbbl
insb
mov
dec
jl
out
outsb
nop
aad
xchg
mov
add
out
fwait
repnz
in
xchg
push
cmp
xor
xchg
mov
sub
insl
jae
fs
loope
xor
xchg
loop
insb
loop
out
sti
cmp
xor
mov
add
subl
rorb
cltd
lods
shll
cltd
inc
lretw
mov
jns
cmp
fwait
rcrb
sub
mov
sbb
pusha
idiv
and
loopne
imul
jmp
sub
adc
mov
push
imul
xchg
jns
push
movsb
push
ja
mov
or
jl
and
mov
in
sti
mov
fisttpll
rclb
movsl
or
pop
lock
jno
sahf
fsubrs
mov
sbb
mov
sbb
sbb
mov
push
pxor
lret
pop
sar
mov
sbb
je
mov
fucom
xchg
das
jne
sahf
mov
enter
repnz
insb
xchg
xlat
aam
mov
sub
dec
out
and
leave
fistl
cmp
xchg
pop
adc
mov
fistps
push
jbe
mov
fs
xlat
and
loope
ds
sub
or
adc
cli
pop
stos
pop
mov
mov
mov
loope
inc
test
push
jge
jp
loop
push
mov
dec
loop
xor
loopne
xor
dec
sarl
test
and
cmp
inc
cmp
jmp
cli
xor
out
gs
aad
js
frstor
xor
lods
xor
daa
lcall
cli
jb
dec
idivb
mov
dec
out
je
cltd
jmp
pop
adc
mov
movsb
mov
sbb
push
in
mov
pop
sbb
xchg
invd
shrb
xor
je
cmp
aaa
subl
or
lret
jbe
push
sub
pop
sub
fwait
adc
dec
adc
jp
aam
jg
and
int3
xor
xchg
ljmp
add
sahf
push
out
mov
in
pop
scas
dec
out
add
fsts
ficoms
rcl
int3
int
cmp
inc
call
enter
pop
mov
cld
outsl
arpl
sbb
jle
add
mov
stos
fdivrl
das
ret
adc
add
and
and
and
and
in
out
xchg
hlt
cmc
xor
mov
mov
daa
dec
in
arpl
adc
jno
aaa
pop
sarl
cmp
or
mov
test
pop
add
in
pop
lret
xchg
imul
sub
or
pop
or
jg
pop
mov
roll
mov
in
ret
aad
sub
inc
xor
iret
lds
lret
hlt
lea
mov
ja
imul
cs
leave
cli
cs
pop
js
pop
shrb
lea
sarl
push
sub
mov
movsl
cmp
sbb
xor
xor
mov
jno
pusha
out
in
xchg
pop
dec
jl
in
movlps
xchg
int3
xchg
pop
mov
pop
xchg
add
clc
and
rcrb
push
outsb
or
jb
mov
jmp
ret
sub
insl
xchg
andl
test
adc
gs
dec
mov
int3
sbb
push
pop
inc
dec
in
add
leave
es
xchg
cmp
jb
dec
mov
mov
outsl
jmp
mov
xor
shrb
ret
mov
mov
insb
sbb
fisttps
and
cwtl
int3
lcall
xchg
inc
std
mov
test
push
stc
ljmp
js
push
movsl
mov
inc
push
dec
int3
cmp
out
insb
pop
jp
jmp
dec
out
dec
or
sub
sahf
xchg
jns
cwtl
les
and
mov
cltd
sbb
aam
pop
sbb
scas
add
fsubrs
aas
push
lret
in
mov
push
das
pop
jle
mov
push
push
dec
xchg
cmpsl
or
pop
sbb
fbstp
pop
add
adc
jne
ror
shlb
lret
xchg
iret
movsb
or
in
mov
and
dec
dec
cmp
ss
jmp
fwait
in
leave
loopne
adc
xchg
fcmovu
in
stc
xchg
cmpsl
mov
mov
shll
cli
xchg
sub
xchg
je
push
sbb
enter
mov
dec
mov
push
xchg
pop
sub
leave
xor
and
sbb
pop
pop
xchg
in
cwtl
xchg
adc
jecxz
stc
frstor
fisttps
std
dec
jb
push
fstpt
pop
jbe
pop
sbb
jns
out
stc
rcrl
sbb
popf
lock
rorl
jae
xchg
mov
rcrb
cmpsl
shlb
aam
roll
fbld
and
icebp
fdivs
sahf
sub
sub
pop
ds
stos
fldt
xchg
fwait
popa
jae
and
xor
rcr
mov
pop
lods
xor
adc
negb
or
in
sbb
jl
mov
and
sti
sub
add
cli
imul
xchg
scas
dec
adc
adc
inc
rcll
jle
jl
aad
sub
movsb
int3
adc
push
or
bnd
mov
and
mov
sub
stc
fadds
in
mov
and
pop
xchg
imul
jne
jo
or
xchg
cwtl
adc
imul
jbe
arpl
jle
fsubrp
shr
mov
lahf
and
push
xchg
jns
shr
scas
adc
push
insl
xor
or
add
jbe
loop
cmpsl
mov
add
sub
or
int3
xchg
cmpsb
js
pushl
fldt
xlat
xor
add
mov
fs
bound
cmpsb
sbb
int
push
mov
cmp
inc
cli
imul
fsubp
adc
popa
jno
mov
mov
jb
jno
pop
adc
ljmp
or
xor
and
mov
fmuls
push
cmpsl
mov
jo
enter
aas
nop
jp
adc
inc
mov
inc
pop
clc
and
jp
aam
and
fstpl
jns
push
inc
mov
aas
data16
jp
xor
mov
aaa
inc
loopne
mov
call
hlt
fldcw
aad
and
out
mov
imul
lods
push
pusha
xchg
add
test
xchg
xchg
jmp
adc
lahf
pop
push
sub
leave
mov
adc
xchg
inc
cmpsb
into
lea
subps
pop
pop
das
push
data16
sti
mov
mov
out
fstpt
int
test
pop
dec
push
and
addr16
enter
mov
ja
iret
cmc
xorl
pop
pop
fs
gs
hlt
out
fcoml
fcompl
cmp
sbb
or
daa
or
mov
mov
cmp
sbb
cli
stos
jbe
addb
sbb
inc
add
les
inc
inc
cbtw
add
sbb
mov
cmp
xor
dec
aad
mov
mov
cmp
sarb
pushf
push
push
mov
dec
fimuls
mov
add
jp
std
repz
inc
and
aas
add
call
dec
xchg
dec
fnsave
mov
in
xor
push
pop
fbld
adc
push
jp
enter
aam
xlat
scas
lcall
incb
lcall
inc
mov
shll
dec
xlat
mov
or
mov
std
fbld
push
push
sbb
fwait
hlt
and
cwtl
loope
fimull
sbb
negl
xchg
jecxz
adc
mov
mov
lods
ss
gs
adc
loope
or
leave
idivl
fsubs
int3
cmp
cmp
xchg
xor
xor
mov
inc
in
jg
ror
add
cwtl
stc
pop
aad
dec
pop
lcall
leave
xor
mov
data16
adc
dec
jmp
jo
and
xor
dec
inc
sbb
pop
sbb
dec
jae
rol
inc
push
ret
sbbb
adc
cli
fdivrs
or
mov
pusha
das
int3
ja
dec
mov
fwait
addl
adc
mov
push
cmc
arpl
sbb
jp
clc
mov
sti
in
xor
cmp
test
imul
xchg
dec
pop
fsubl
xchg
jo
or
cmc
lock
jle
pop
stos
pop
mov
jle
inc
sub
push
aas
mov
jnp
mov
pop
test
mov
rclb
add
cwtd
lods
jge
scas
mov
mov
scas
sub
sahf
xor
sub
in
or
dec
arpl
movsl
insb
sub
fwait
rcl
xchg
inc
clc
fstps
andb
cmp
add
inc
jo
loop
sub
push
inc
fldl
aad
add
bound
in
add
mov
std
in
cwtl
inc
mov
xor
pop
insl
or
mov
dec
sub
adc
out
mov
push
xchg
ja
or
imull
popl
sbb
push
push
lea
adcb
pop
icebp
sbb
adc
cwtl
popf
sbb
or
mov
mov
xor
sub
ror
andl
sbb
js
test
mov
out
mov
cmpb
jae
sub
add
sub
push
out
push
daa
cmp
and
xor
int
insb
int
js
shl
aad
test
loopne
in
fisubs
push
adc
mov
or
pusha
sub
mov
cmc
outsl
push
test
jmp
sbb
jle
pop
sbb
cltd
bnd
pop
sbb
inc
mov
fwait
pop
pop
ss
cmp
pop
std
icebp
xchg
call
cmc
sbb
fcomps
fs
mov
mov
push
push
ljmp
repnz
pop
sbb
fists
mov
or
jecxz
xor
imul
aas
hlt
test
fmuls
popf
push
sub
adc
daa
mov
jmp
sub
pop
cmc
rorl
mov
lds
cmp
das
inc
sbb
xchg
sarb
xchg
data16
mov
daa
sub
inc
mov
pop
jnp
xor
xor
jmp
fdivrs
sbb
ds
xchg
sbb
cli
push
jo
mov
bound
enter
dec
push
in
pop
lret
pop
stos
xchg
push
clc
sub
imul
or
fcoml
out
inc
cmp
bound
or
or
pop
aam
addr16
sahf
xor
inc
stos
push
mov
aaa
jge
dec
cmp
push
stos
aam
sub
mov
and
mov
jo
popa
les
int
mov
testb
mov
negb
push
pop
jno
cmp
jb
enter
dec
jae
les
mov
loop
adc
mov
or
dec
mov
lods
jns
adc
std
aam
dec
adc
adc
inc
popa
cmp
shrb
cmp
jbe
adcl
mov
lret
xlat
subb
pop
mov
lret
xor
push
add
xchg
xchg
mov
xlat
inc
andb
lahf
popa
fisttpll
ret
adc
fs
cmpsl
add
test
dec
mov
mov
scas
jle
mov
lahf
add
in
jl
test
int
sub
movsl
add
pop
mov
jo
mov
daa
call
js
dec
inc
call
ja
jp
out
aam
iret
in
mov
lcall
pusha
imulb
andl
xchg
push
lds
jbe
cmp
cmc
add
stos
dec
leave
fstps
add
js
inc
imul
fnsave
aad
or
cmp
and
sub
mov
or
dec
lahf
add
out
aam
outsb
mov
mov
les
pop
loope
push
cmpsb
in
xchg
call
cmp
inc
hlt
int
jmp
push
xchg
mov
or
pop
mov
cmpsl
add
mov
negl
pop
adc
mov
xor
mov
jecxz
hlt
shll
rorl
movzwl
sar
mov
int
lds
cmc
sbb
shll
ret
idiv
out
add
icebp
mov
cmp
fimull
xor
mov
rclb
mov
cmp
cmp
sbb
icebp
sarl
jno
mov
xorb
inc
add
adc
jge
xchg
call
pop
aam
and
xchg
cmp
pop
add
push
mov
mov
popa
xor
arpl
jl
push
pop
and
es
xor
outsl
sbb
ss
fwait
mov
call
fsubp
mov
jmp
pop
popf
pop
in
call
adc
stos
adc
and
nop
out
cli
xlat
inc
sbb
cli
test
jmp
jnp
add
into
xchg
adc
std
cmp
js
or
cmpsb
push
inc
mov
add
lea
add
inc
call
iret
push
dec
push
jle
xor
mov
cli
out
or
add
xor
sbb
or
push
xor
inc
int3
add
int
or
out
jp
jge
test
xchg
pop
mov
mov
ret
jns
std
lods
scas
scas
add
xor
jle
or
sub
and
jecxz
ret
or
mov
inc
add
lods
mov
call
insb
stos
ret
mov
mov
cmpsl
push
pop
loope
loopne
and
mov
cmp
or
aam
scas
dec
mov
cmpsb
roll
movsl
js
mov
adc
lods
mov
cs
bound
repnz
das
sub
mov
mov
fwait
mov
imul
pop
lret
add
lods
or
inc
mov
adcb
and
xor
xor
cs
jns
jno
cs
dec
mov
xchg
fsts
inc
jecxz
aaa
cld
mov
add
mov
nop
mov
mov
ljmp
jb
ret
popf
dec
sahf
scas
lods
dec
xchg
testb
ljmp
mov
jmp
popl
pushf
jb
mov
popf
jne
mov
mov
sub
xchg
ret
xchg
and
lcall
jle
push
xchg
and
ret
and
dec
xchg
nop
ficompl
pop
ret
aas
sbb
out
pusha
int
mov
push
aad
push
mov
jo
std
pushf
mov
pop
pop
pop
ret
jno
sub
add
scas
pop
inc
xchg
lret
fsubrl
mov
mov
pop
inc
jl
pop
es
add
stc
sbb
insl
push
ja
jne
dec
push
es
add
cld
fldenv
add
pop
adc
and
mov
or
xor
dec
xchg
cmc
into
dec
mov
lret
sub
cmp
xlat
repz
or
in
sbb
out
mov
ljmp
js
out
xchg
outsl
xchg
add
leave
orb
jecxz
jp
xchg
ret
inc
inc
push
cmp
orl
js
je
es
mov
jmp
mov
inc
cld
lret
sti
fs
mov
xor
popw
jo
test
push
ret
enter
xor
or
push
adc
js
stc
add
mov
stc
cli
inc
mov
mov
addr16
test
movsl
push
cmpsb
hlt
insb
jbe
push
mov
mov
dec
jno
lahf
jp
aad
sub
adc
add
jno
cmpsb
insb
cmpsl
mov
loope
mov
repz
xlat
inc
sub
sbb
sbb
jl
clc
jnp
mov
cmp
push
push
xchg
jl
fisttpll
lcall
pusha
jg
mov
push
aas
xchg
cwtl
sbb
mov
adc
sub
repnz
or
inc
xor
sub
fsubrs
aas
decb
pop
cmp
fstps
loope
xchg
sub
fisubrl
sub
add
xchg
enter
leave
mov
cmp
movsl
outsb
mov
adc
test
add
in
sbb
push
cmpsb
xor
jns
mov
xchg
mov
loop
into
and
xor
cmp
clc
adc
in
xor
test
cmp
in
jg
mov
imul
jo
sbb
das
hlt
fcmovu
mov
mov
push
pop
lret
rorb
add
outsb
repnz
push
mov
unpcklps
xor
jg
stos
cmp
in
mov
popa
in
lret
cwtl
sub
mov
pushf
js
inc
dec
imul
cmp
pop
pop
movsl
sub
addr16
mov
add
xor
call
ds
mov
mov
dec
or
mov
andl
mov
addr16
pushf
adc
orb
xchg
push
stos
mov
lea
gs
xchg
cli
xchg
dec
outsb
add
mov
sbb
jne
pop
push
dec
xchg
popa
cmp
fidivrs
rolb
decl
stos
movsl
enter
fisubl
cmp
pop
pusha
test
in
sbb
mov
enter
mov
out
enter
lods
insl
sub
push
pusha
pop
push
insl
rcll
xor
movsl
jmp
sbb
xorb
xchg
cmp
aad
lea
dec
loope
scas
mov
inc
orl
add
test
dec
or
enter
fidivs
pop
movl
mov
mov
adc
xchg
push
pop
xchg
mov
push
mov
in
addr16
dec
push
sub
jns
push
sbb
jecxz
test
test
dec
pusha
into
sbb
push
leave
or
xchg
ss
dec
lds
rclb
arpl
ss
sbb
in
fists
shlb
add
pushf
lds
jecxz
lock
cmpsb
imul
xor
jbe
push
sbbl
nopl
push
dec
push
mov
xchg
mov
data16
sbb
data16
cmp
ljmp
fidivl
testb
pop
movsl
pop
cltd
mov
dec
cmp
pop
rcrl
fnstcw
dec
inc
sub
lods
mov
call
push
loop
jmp
jbe
ss
mov
or
vmovdqa
jno
mov
or
add
cmc
sub
cwtl
xor
push
insb
dec
popa
mov
dec
sub
ljmp
push
cld
das
xor
or
cmp
and
fisubrs
mov
mov
adc
test
mov
push
icebp
add
cmp
cmp
dec
inc
fwait
jbe
jp
outsl
scas
mov
cwtl
sbb
sbbl
cmp
push
mov
cmp
nop
jmp
loop
xchg
fs
adc
adc
jge
mov
outsl
jmp
fidivl
test
lahf
dec
xlat
mov
push
int3
sbb
and
pop
aas
mov
ret
loop
push
mov
jp
call
cs
jne
cld
and
iret
mov
outsl
in
int3
stos
aad
js
test
les
lcall
mov
cltd
push
push
fsubl
addb
ret
adc
sbb
xchg
fadds
cmpb
addr16
adc
sub
aas
mov
jecxz
repnz
mov
xchg
in
inc
add
mov
xor
dec
in
dec
insb
dec
and
je
add
lods
jle
rclb
or
add
in
mov
mov
cli
mov
dec
dec
shl
std
cltd
loopne
add
sahf
jecxz
stc
add
test
fiaddl
xchg
loope
imul
cmpl
push
ret
cld
adc
lods
out
loop
xchg
addr16
mov
pop
push
pop
mov
lock
hlt
mull
sbb
pop
sub
enter
mov
pop
ja
es
sti
call
inc
cmp
jl
lods
pop
jbe
push
jmp
push
mov
dec
sub
call
mov
push
sbb
xchg
adc
mov
mov
mov
repnz
cmp
shll
rcll
cmp
mov
pushf
push
shl
bound
push
jnp
lods
mov
fcoms
fdivl
cmp
je
and
loop
iret
imulb
push
add
lret
js
adc
jbe
mov
stos
sub
inc
inc
sub
data16
ljmp
pop
pop
loop
int
loop
ds
pop
scas
adc
insb
das
mov
cmp
adc
cmp
and
push
jae
sub
and
arpl
inc
pop
push
cmp
pop
dec
sbb
fwait
xchg
jb
pop
imul
hlt
xchg
andb
sub
aad
cld
jg
push
lret
movsb
test
orl
adcb
dec
pmulhw
pop
je
xchg
sahf
pop
sub
xor
bound
inc
push
icebp
jle
rcrl
push
out
sbb
adc
andl
into
shl
ljmp
pop
mov
cmpsl
push
arpl
stc
inc
data16
stc
cmp
xchg
scas
inc
xor
call
in
inc
arpl
pushf
mov
loopne
test
xor
xor
sbb
testb
mov
cmpsb
mov
imul
mov
and
cmc
sbb
dec
mov
push
test
insl
int
push
mov
pushf
imul
jle
rclb
pop
add
pop
mov
sti
loop
push
iret
and
gs
mov
call
in
fwait
nop
test
adc
inc
orl
aam
repz
movsb
pop
fisubrs
rcrb
pop
xchg
movsb
pop
dec
bound
pop
sub
dec
inc
negl
and
popf
cmp
push
inc
cmp
xchg
xchg
or
push
test
jo
dec
test
dec
sub
int
push
mov
daa
sub
fwait
cmp
outsb
and
xchg
push
push
mov
pop
cwtl
adc
lcall
in
movsl
xor
lods
push
scas
scas
das
xchg
xchg
in
aaa
add
mov
dec
dec
pushf
imul
mov
mov
jecxz
pop
or
inc
hlt
adc
mov
and
dec
shrb
daa
in
clc
in
push
test
cmc
test
sti
sbb
cmp
pop
imul
sub
pop
cltd
out
xchg
repnz
das
jo
xchg
lds
mov
lds
jmp
cmp
lcall
scas
aaa
adc
mov
sub
cmc
cmp
scas
mov
fst
notl
mov
push
sahf
negl
scas
shll
jl
dec
arpl
adc
stos
mov
dec
mov
pop
mov
test
or
aad
rcll
cli
es
rorb
cmp
and
sub
in
lret
int
cmpsl
fsubp
aad
mov
mov
mov
cmp
sub
rclb
cli
mov
repz
in
jg
lods
mov
add
insb
pop
fcmovne
push
int
shr
add
jl
xchg
dec
lcall
ja
mov
add
hlt
out
xor
popa
mov
jmp
mov
adc
rep
fiadds
test
jb
aam
inc
sub
lods
mov
fdiv
iret
jmp
jnp
dec
stos
mov
inc
movsl
lret
sub
sbb
or
push
adc
add
bound
mov
and
dec
xor
adc
xor
fmull
inc
jno
loop
mov
push
add
push
enter
push
rcrb
pop
xor
add
add
ret
fsubr
pop
in
dec
aas
out
mov
lock
outsb
sub
bound
or
jnp
pusha
inc
jnp
loope
xchg
sub
push
out
fxch
adc
loope
mov
xchg
xor
loopne
es
in
in
adc
lock
mov
call
into
fisttpl
je
loop
lahf
sbbb
cld
mov
dec
xchg
xchg
xchg
xor
add
ds
sub
mov
xor
imul
adc
or
inc
mov
jecxz
mov
inc
in
or
nop
daa
fdivrs
sbb
cwtl
into
imul
adc
iret
adcb
fldcw
cmpsb
and
shlb
out
xor
cmpsb
mov
push
push
ss
icebp
clc
sbb
dec
aaa
jns
pop
push
sub
cmc
mov
jl
inc
jl
push
push
data16
cmp
in
orb
daa
xor
cmc
inc
cmp
xor
jecxz
fwait
xchg
jp
add
test
into
mov
pop
dec
fcom
mov
sub
cmp
cmp
sbb
lret
lock
sbb
pusha
inc
or
add
jg
lahf
mov
dec
hlt
loopne
add
push
out
or
push
enter
bnd
ffree
mov
mov
sub
dec
or
mov
mov
jbe
jno
mov
sti
pop
movsl
mov
jle
dec
shrl
xor
inc
arpl
lock
das
sbb
pop
lods
mov
insb
lods
stos
pushl
adc
push
in
inc
and
pop
dec
mov
xor
xor
jbe
ljmp
cs
gs
mov
enter
insb
jg
jg
and
add
bound
dec
jb
daa
xor
mov
fs
leave
jge
inc
shlb
lcall
ds
jo
popf
jb
mov
dec
sub
enter
cwtl
push
pop
lods
lret
rcr
mov
mov
push
or
lea
cmc
pop
jae
rcll
pop
cmc
inc
or
les
push
into
aas
out
sahf
lds
jb
rcrl
add
dec
mov
ljmp
jl
pop
dec
loopne
dec
dec
out
ss
ja
aam
mov
jge
jmp
add
push
repz
xadd
push
dec
fisubl
mov
xor
jp
pop
mov
inc
inc
mov
dec
xor
cmp
mov
xlat
sub
pop
inc
mov
repnz
lods
dec
pop
push
inc
jnp
ret
icebp
mov
xchg
push
fwait
insb
sub
jo
outsb
cmc
jno
mov
or
and
adc
int3
xor
xchg
pushf
jns
jmp
xchg
data16
scas
scas
loope
push
cwtl
inc
adc
test
les
cs
je
leave
inc
adc
int
loopne
and
xchg
cld
xchg
inc
fisubrl
aas
pop
fsubr
dec
pushf
shrl
test
mov
shlb
xchg
jbe
enter
roll
shlb
ss
leave
sbb
aad
xchg
movsl
sbb
fcoml
xchg
and
dec
arpl
lcall
fmul
sbb
or
and
and
cmp
jo
adc
jb
pushf
in
cwtl
sarb
scas
push
cli
or
aam
xor
jae
je
iret
ljmp
and
sarl
rcll
xchg
mov
adc
mov
mov
jl
bound
adc
lret
adc
and
xor
dec
inc
mov
into
push
xor
cmc
movsl
sbb
mov
xlat
popf
mov
inc
jp
out
sub
outsb
aaa
mov
mov
cmpl
mov
andb
adc
cmp
out
or
hlt
xchg
cld
sbb
scas
mov
mov
xor
int
xchg
xor
sbb
dec
xor
negb
clc
inc
fwait
jg
push
in
arpl
lea
popf
pop
xor
sarl
popl
das
xor
adc
inc
lods
and
int
ja
sbb
inc
enter
dec
or
pop
ljmp
pop
stc
or
add
xorb
inc
and
mov
imul
loopne
inc
or
jb
ret
xchg
adc
cmp
xchg
adc
mov
idivb
imul
mov
sub
ret
negl
or
jmp
or
xchg
xchg
push
or
pop
mov
pop
pop
xchg
shll
nop
aas
mov
inc
daa
or
icebp
imul
popa
inc
jp
jne
pushf
adc
jg
sub
stos
push
cltd
loop
inc
scas
mov
push
add
pop
test
ss
cmpsl
add
inc
pop
jnp
enter
adc
xlat
cli
fistl
cmpsb
dec
lret
les
or
iret
call
stos
out
add
mov
push
xor
add
orb
pop
adc
and
cmp
jae
jg
xchg
movsb
jl
cmp
ret
xor
lock
lods
mov
jnp
mov
in
xchg
nop
and
jp
sub
dec
mov
mov
inc
inc
mov
dec
aas
stos
push
rol
fsubl
imulb
inc
and
inc
and
cmc
clc
loopne
dec
add
out
xor
pop
sub
sub
mov
and
push
mov
push
inc
call
pop
mov
dec
sbb
outsb
mov
adc
xadd
aad
aad
mov
ja
rcll
mov
out
in
clc
nop
lods
jnp
or
fldt
mov
in
jge
adc
loopne
std
xchg
push
xor
lcall
jnp
fldl
mov
add
sbb
jmp
sahf
xchg
cmpsl
das
cmp
xor
and
add
into
inc
pop
aas
mov
mov
lock
push
lock
inc
mov
mov
shrl
les
mov
mov
pop
test
pop
popa
jle
mov
lahf
dec
adc
clc
repz
sub
hlt
mov
add
sub
rolb
addr16
and
scas
dec
es
loope
clc
leave
sti
mov
mov
ret
into
jl
roll
sbb
add
sbb
add
add
movsb
and
ja
pop
dec
in
test
xor
sti
mov
and
cli
dec
pop
je
adcl
jns
mov
popf
sub
sti
push
add
mov
daa
std
xchg
pop
out
sub
addl
jne
cmp
lret
dec
mov
pop
sbb
icebp
test
pop
lea
cmpsl
push
movsb
mov
xor
fcmovne
enter
insl
call
call
lret
cs
andb
push
sub
icebp
mov
dec
iret
jne
or
mov
inc
mov
arpl
add
iret
loope
cmpsb
mov
sub
jnp
ret
pop
imul
sbb
loope
lds
addr16
add
leave
jp
cmpsl
push
gs
pop
pop
pop
dec
add
push
jmp
das
jl
shll
aaa
addr16
shll
out
in
pop
push
lahf
stc
arpl
mov
or
out
rcrl
int3
xchg
mov
loope
pop
repz
xchg
daa
je
mov
lahf
pop
pop
test
xchg
sub
aas
js
sahf
xchg
pop
out
and
jno
or
or
xchg
std
cmp
loopne
mov
mov
dec
add
lret
shl
test
mov
pop
aam
jge
shll
enter
iret
ret
mov
xor
inc
addr16
xchg
mov
xchg
adc
push
fiaddl
push
mov
xchg
sbb
sub
pop
sub
sbb
ljmp
ret
add
pop
repz
inc
iret
mov
jle
jb
in
jbe
lret
dec
insb
sbb
test
loopw
jmp
pop
int3
std
fwait
sub
mov
shlb
aad
das
sub
jle
inc
xchg
pop
xchg
xchg
mov
cmp
loop
lods
ljmp
dec
cli
mov
iret
sub
mov
mov
test
jl
outsl
shll
push
cmpb
xor
loop
test
xor
mov
cmp
das
adc
jecxz
sbb
popa
dec
fsubrs
int3
pop
jl
xchg
jbe
insl
mov
iret
ja
sub
xchg
shlb
mov
sbb
outsb
popa
cld
jmp
movb
xchg
pop
cs
ret
mov
mov
filds
jecxz
popa
adc
or
or
mov
sarl
in
sbb
xchg
adc
and
xchg
loope
xlat
pop
cltd
push
sbb
sti
aas
pop
out
enter
xlat
std
add
inc
mov
mov
inc
pop
add
dec
mov
icebp
sti
incb
xorl
add
jp
lods
pop
or
ret
daa
sbb
sub
sbb
in
xchg
ret
cs
clc
jecxz
in
hlt
jp
out
and
cmpsl
repz
aam
out
dec
dec
sbb
insb
lea
xor
int
push
and
pop
mov
mov
lds
pop
fisttpll
cmc
add
mov
sub
shll
or
pop
insb
sub
movsb
inc
out
mov
jle
cmpsb
add
mov
aam
push
aaa
add
xchg
mov
int
in
enter
xchg
sbb
sub
pusha
dec
rclb
xchg
pop
xchg
clc
or
ljmp
in
insl
jge
push
mov
outsl
shl
adc
lds
sbb
pop
jns
movsl
shrl
fcmovu
add
jg
leave
fldenv
stc
enter
fs
ret
shr
sbb
mov
xchg
jno
jge
jne
stos
loopne
idivb
add
mov
iret
negl
mov
push
je
testb
ret
sub
and
sub
shrb
jle
addr16
test
and
repnz
sub
and
xchg
xor
or
dec
fwait
push
and
lock
imul
jnp
mov
add
xorb
sub
xorl
lahf
add
mov
lret
dec
ret
insb
je
js
or
push
push
mov
cwtl
pusha
xor
cmp
and
mov
sti
cli
std
sub
dec
sbb
inc
mov
fidivrs
jb
lcall
pushf
jb
cwtl
or
cmp
call
push
pusha
rclb
popf
jl
pop
jge
int3
cmp
popa
push
push
pop
in
mov
cltd
cmovo
pop
roll
pushf
xorl
or
mov
inc
mov
popa
jp
mov
sahf
int
sbb
test
push
scas
push
pushf
and
lea
add
stc
mov
nop
scas
add
or
ss
sbb
sub
sub
pop
xor
mov
out
into
pop
sub
jnp
jmp
arpl
in
callw
loope
adc
neg
stos
inc
das
in
add
and
cmp
repnz
adc
aas
jnp
insl
pop
xor
push
cld
les
cmc
fistps
lods
add
pop
xor
loop
fcmovu
ja
sub
add
insb
push
pop
sbb
pusha
xchg
inc
push
fisubl
xor
das
lret
sar
dec
das
cld
out
or
outsb
mov
hlt
cmp
movsb
or
add
fadds
or
mov
add
insl
mov
cmpsl
sbbl
ss
into
push
nop
imul
mov
mov
jns
adc
dec
pop
cmpsl
push
repz
test
jo
enter
add
cwtl
pop
adc
fwait
mov
repnz
call
xchg
lret
cmpsl
negb
loope
js
jp
shr
ror
or
sub
mov
sub
xor
movsb
sub
cmp
imul
mulps
inc
cltd
sub
je
cltd
lahf
pop
test
push
fsubp
push
std
jno
inc
add
les
ss
loop
aaa
mov
push
and
and
xchg
pop
add
imul
or
xor
in
adc
sahf
aad
cmp
sbb
push
dec
testl
dec
out
gs
lret
adc
pop
or
xor
hlt
rcl
xlat
jge
rcl
and
jmp
push
inc
in
push
pop
sub
aad
call
inc
dec
fists
lods
imul
xor
fsubl
les
int3
stc
add
inc
adc
fisttpll
addl
test
dec
inc
ss
fnstsw
sub
rcr
outsl
cmpsl
cli
out
jbe
mov
fwait
inc
mov
aas
mov
pop
das
or
loopne
out
and
pop
push
push
and
fldenv
fstpl
or
ror
dec
inc
inc
cmp
ds
int
and
push
jno
shld
stos
aad
aam
mov
leave
jae
test
pushf
cmp
jl
and
shlb
mov
scas
and
xor
sbb
xchg
fimuls
pop
and
cld
adc
pop
ljmp
aam
shrl
int3
in
mov
adc
insb
pop
scas
iret
inc
mov
mov
pop
and
lock
fmull
xchg
scas
in
sbb
mov
out
mov
movsb
pop
add
dec
inc
push
mov
mov
out
xchg
pop
sbb
fwait
mov
cmp
sbb
cltd
push
dec
pop
jbe
cmc
add
mov
xchg
mov
test
jl
push
pop
sub
shr
jp
adc
cmp
decb
sbb
cmp
mov
adc
nop
shr
lods
jl
or
insb
push
repnz
jecxz
daa
jno
popf
ss
sbb
mov
jbe
sbb
mov
hlt
stos
add
arpl
stos
push
aam
std
xor
je
jp
pop
mov
faddl
sub
pop
mov
daa
inc
or
inc
scas
test
xor
cmp
jne
dec
pop
outsb
loope
ret
xor
dec
xlat
mov
sbb
xchg
mov
js
sarb
lcall
roll
fsubrl
push
lds
push
xor
mov
push
in
sbbl
xchg
adc
imul
mov
mov
cmp
ret
sarb
shlb
mov
lahf
xor
mov
popf
insl
aam
push
in
cmp
in
add
aad
fs
cmp
xor
adc
xor
cmp
rcl
or
push
std
cwtl
repz
aam
xchg
fisttpll
pop
sub
jns
mov
mov
sarb
popf
xor
push
sarb
mov
jne
in
add
lock
push
mov
ret
in
mov
insl
popa
mov
outsb
sbb
test
add
xchg
fwait
stos
push
rol
push
cmc
push
mov
push
and
lods
jecxz
pop
outsb
fildll
cmp
gs
and
hlt
mov
icebp
xchg
outsb
xchg
and
pop
jno
subl
or
cmp
xor
pop
test
mov
out
cmc
arpl
cmp
pop
and
mov
dec
jge
jnp
icebp
xchg
in
xor
loop
sbbb
dec
aam
pushf
fmul
sahf
int3
xchg
pop
jmp
jne
xchg
and
or
add
cmc
cmp
push
push
orb
adc
les
cmp
sub
or
movsl
add
ds
in
push
jbe
pop
fisttpll
pop
sub
std
xchg
inc
push
leave
sub
adc
push
dec
nop
pusha
mov
cmp
sbb
xor
movsl
lea
push
adc
adc
jmp
inc
fwait
stc
inc
and
in
xchg
out
cli
jns
push
pop
out
jbe
sbb
cmc
xchg
push
gs
andb
xorb
shlb
into
push
aaa
test
jp
sbb
stos
xor
or
shll
lret
loopne
or
lods
fcoml
add
movsb
jnp
stos
cmpsl
push
or
mov
jno
fs
lock
call
jne
lcall
jle
enter
out
push
aam
xchg
cmpb
push
insb
data16
dec
fildll
lahf
pop
das
fsubp
lods
ret
idivb
or
lcallw
mov
mov
mov
aas
test
outsl
mov
in
mov
test
cmc
jle
clc
dec
mov
cmp
test
icebp
arpl
pop
xchg
test
inc
fadd
pop
sahf
sub
and
xchg
sti
adc
mov
rclb
bound
aam
cmp
or
cld
dec
mov
push
add
sub
jg
test
pop
and
mov
fdivl
push
mov
aas
or
add
inc
sbb
xchg
jnp
test
gs
dec
push
mov
push
loope
jae
mov
inc
out
sub
inc
xchg
xor
adc
test
mov
jmp
ljmp
add
sbbl
pop
ljmp
or
mov
fildll
sahf
jmp
aam
pop
pop
push
rcl
xchg
push
clc
ja
in
pcmpgtb
push
pop
pop
mov
cmp
mov
pop
out
jne
sbbl
push
sub
dec
loope,pn
cmpsb
dec
sbb
and
fimull
shl
loope
push
dec
pop
insl
cmpl
mov
dec
cmpsb
icebp
repz
fs
and
add
aas
jno
pop
fidivl
sahf
call
outsl
jns
cwtl
add
and
test
push
inc
clc
sahf
sbb
sub
xor
mov
push
adc
inc
jno
daa
xchg
cmpsb
shll
jmp
lods
cld
lea
aaa
add
and
ja
pop
pop
jns
sti
add
fsubrs
or
push
and
and
mov
lods
std
jae
and
push
xor
adc
movsl
dec
mov
push
cmpsl
cmp
mov
out
dec
in
pop
es
data16
subl
mov
or
cltd
push
daa
ffree
mov
jge
jbe
mov
into
xor
subl
mov
jno
jge
scas
outsb
rcrl
push
inc
lea
add
dec
ja
lds
out
mov
rolb
fldenv
jg
les
mov
or
cmpsl
lahf
arpl
push
sub
mov
cmp
jge
cwtl
aas
mov
cmp
popa
shrl
jmp
cmp
push
stos
push
xor
or
hlt
push
sbb
mov
sub
inc
sti
jbe
ja
mov
dec
xchg
mov
into
adc
jb
ret
int
in
or
fcompl
jae
push
lret
sub
aaa
movsl
shll
jge
cwtl
jnp
lret
popa
pushf
pop
mov
pop
pop
push
pop
ret
inc
sbb
push
mov
xchg
xchg
sbb
inc
mov
test
and
push
test
popf
sbb
jo,pt
mov
stc
in
mov
lret
aam
push
push
pop
push
pop
in
dec
addr16
fmuls
jns
pop
pop
ffree
popf
cltd
cs
xchg
mov
and
dec
mov
xchg
jg
inc
gs
sub
lea
scas
mov
xor
sub
test
les
sub
push
addr16
test
add
popf
mov
jae
movsb
or
pop
pop
lock
push
popf
loop
aaa
cs
mov
repnz
or
int3
add
rorl
pop
pop
sub
xchg
clc
clc
push
out
push
fistps
mov
add
sti
mov
inc
out
jg
jge
dec
int
mov
jne,pt
enter
inc
xchg
and
push
iret
jmp
repnz
cs
mov
push
cmp
mov
cmpsb
adc
sbb
stos
xlat
jmp
and
int
fwait
fwait
or
int
lods
filds
pop
mov
or
push
ror
or
cmpsb
jecxz
adc
call
mov
mov
mov
insl
dec
jp
call
lcall
pop
mov
mov
in
xor
cmc
ret
test
push
jbe
xor
mov
sub
mov
push
mov
clc
push
sbb
imul
incl
ja
lahf
in
out
clc
pop
or
xchg
outsb
popa
mov
clc
mov
mov
pop
or
dec
stos
jnp
movsb
jecxz
xlat
fsubl
filds
imul
mov
cltd
std
pop
lds
mov
fs
mov
dec
leave
xor
popf
inc
mov
testl
lret
pop
das
mov
shrl
and
push
lock
lcall
lcall
jmp
mov
iret
xor
test
daa
sahf
inc
pop
pushf
mov
out
cwtl
cld
dec
jb
aas
pop
xchg
iret
fnstcw
mov
aas
sarb
pop
lock
or
lahf
js
ret
inc
shll
add
mov
and
cltd
daa
jl
xor
out
popa
loope
fdivl
jp
dec
ja
in
stos
mov
jmp
pop
jl
and
outsl
mov
xchg
pushf
pop
mov
cmpsl
mov
data16
sub
jo
xchg
cld
adc
insb
movsb
jmp
or
sbb
inc
sbb
lahf
cmp
andb
jecxz
mov
shlb
cmp
pusha
mov
test
movsl
cltd
mov
lret
push
add
movsb
and
cmp
add
cmpb
test
jnp
pop
jno
and
pop
mov
pop
fbld
out
stos
sarb
jo
cwtl
xchg
mov
adc
dec
mov
jb
and
inc
test
std
inc
imul
fisttpll
mov
fwait
add
rcl
inc
add
inc
addb
sti
dec
test
cmp
lret
sbb
fisubrs
xor
stos
insl
pop
iret
mov
sahf
lock
mov
gs
fwait
cs
out
mov
ds
std
adc
repnz
cmp
mov
insl
xchg
push
testb
std
outsl
xchg
cmpsl
ss
xchg
cli
jmp
xor
movsb
xchg
sbb
push
sub
cmpsl
inc
lds
test
sub
imul
cmp
and
pop
push
push
cmp
sbb
push
pop
dec
cs
das
sahf
sbb
loop
push
cs
stos
in
jno
lock
ds
xchg
mov
jge
imul
in
pushf
sarl
arpl
mov
and
xchg
push
adc
push
and
sahf
mov
int3
ret
pop
jmp
sub
push
add
jl
jo
push
mov
mov
dec
pop
or
int3
xor
out
mov
push
jo
push
xchg
cmpsl
pop
in
mov
or
xchg
dec
aaa
and
fimull
or
sbb
xor
pushf
ret
mov
mov
in
xor
enter
jbe
ds
enter
jg
sub
jno
xor
mov
push
sub
aam
insl
test
inc
testl
sti
fwait
dec
fistpl
fsubrp
ret
xchg
in
rcl
test
jmp
and
les
xchg
jecxz
and
and
and
mov
adc
or
jecxz
cmp
xchg
sub
nop
stos
test
std
inc
cmp
test
shlb
hlt
ss
jnp
and
jb
popa
nop
dec
mov
xchg
mov
inc
loop
fbld
dec
addr16
mov
and
sub
cmp
xor
rcrb
in
popa
aaa
push
fdivrl
cmp
cwtl
addr16
out
jae
in
cmp
push
jg
xor
xor
xchg
mov
mov
lret
adc
push
xchg
dec
inc
push
adc
fisubs
push
mov
xor
test
inc
jp
fs
sahf
mov
jge
ret
leave
inc
sbb
adc
pop
pop
ja
hlt
out
xlat
scas
imul
sub
mov
fwait
sahf
stos
or
ljmp
outsb
ljmp
out
imul
stos
insl
mov
bound
gs
inc
mov
test
add
jmp
leave
imul
jno
aaa
es
fs
push
pop
in
mov
sub
or
repnz
js
and
push
rclb
leave
jg
icebp
push
rcrb
mov
addr16
fldl
aaa
jne
fdivrs
jmp
in
jne
mov
mov
sbb
xor
xchg
js
mov
cwtl
lods
stc
cltd
jmp
xchg
xchg
and
push
mov
inc
jecxz
xchg
mov
sub
fimuls
pop
mov
add
fnstenv
inc
sbbl
addr16
jno
push
xor
mov
cmp
jmp
mov
inc
popa
sbb
sbb
cmp
lods
jg
mov
xchg
mov
mov
and
imul
and
xchg
mov
sub
mov
aam
pop
xlat
push
mov
ret
push
in
or
jae
into
xchg
lock
faddl
adc
mov
jnp
xchg
push
push
add
fisttps
repnz
xor
mov
cmp
jae
jecxz
sbb
cmpsl
xchg
xchg
mov
setl
xor
in
mov
xor
sub
pop
cmp
fwait
xchg
and
clc
add
mov
mov
pop
int
xchg
out
icebp
cs
stc
das
les
iret
aaa
movsb
and
roll
sbb
push
and
cmp
inc
and
fisttpll
cmp
jp
movl
or
lods
cmp
orb
and
cmc
pop
xchg
sti
repnz
cld
xchg
push
lret
je
mov
daa
push
jg
je
ss
cltd
mov
mov
je
stos
xor
das
jne
ret
cltd
in
icebp
mov
sub
mov
cltd
dec
or
cmpsl
mov
cs
adc
nop
adc
scas
push
nop
or
out
lret
pusha
mov
xlat
imul
push
test
daa
insb
cmpsl
pop
movsl
movsb
sti
mov
jnp
sbb
out
loopne
loope
or
push
shl
test
insl
pop
sub
iret
adc
mov
shll
push
xlat
mov
lock
push
subb
jbe
xlat
push
mov
sti
cmp
push
pop
lret
loope
lret
clc
dec
mov
mov
mov
mov
js
es
inc
xor
push
bound
add
inc
adc
sbb
repnz
xor
sti
fcom
add
scas
fs
xchg
xchg
ds
out
daa
into
into
es
push
pusha
add
xrelease
mov
aaa
movsl
push
out
gs
out
out
add
pop
mov
mov
icebp
mov
mov
enter
dec
out
jmp
shl
push
cli
shr
push
pop
jmp
or
xchg
push
es
jb
push
sub
rcll
stc
pusha
add
cld
push
outsl
add
fcompl
inc
test
and
daa
jmp
pop
sub
sbb
sub
xlat
fiadds
cmc
xchg
push
mov
lahf
bound
rorl
pop
sbb
stc
push
jmp
idiv
cmp
inc
pop
cli
cwtl
test
addr16
add
cmp
fnstenv
and
popa
and
cmp
mov
sbb
xor
lea
imul
movsb
mov
mov
push
jno
inc
sub
xor
mov
mov
test
jns
add
jle
xor
xor
inc
repz
sbb
jae
cmpsb
arpl
aam
push
inc
xchg
push
dec
in
sub
dec
dec
adc
leave
int3
repnz
ret
mov
xor
std
push
scas
int3
fdivr
sub
xor
adc
mov
jmp
jne
cmc
sarl
fcmovu
xchg
ja
xchg
ja
daa
mov
xor
adc
xor
push
ja
ds
dec
fsub
push
jle
push
outsb
nop
int3
or
xor
sahf
cmp
outsl
jnp
pop
cmpsl
rcl
xor
inc
mulb
insl
sub
dec
int
mov
adcl
add
add
mov
sbb
out
pop
lods
jno
popf
shll
adc
xchg
sub
mov
in
sbb
jnp
and
negl
add
cld
mull
loop
and
ret
fisttpll
push
insb
in
or
cmp
aaa
ret
les
in
sub
adc
xchg
cltd
jno
jbe
inc
aas
push
in
daa
or
and
pop
push
dec
mov
fwait
subb
add
addr16
aam
mov
adc
idivb
jb
mov
movsl
aam
fwait
dec
add
cmp
or
dec
and
sub
add
stc
ds
sub
mov
in
insb
mov
xor
mov
insl
imul
xchg
test
mov
daa
mov
nop
push
xchg
pop
mov
jnp
mov
in
mov
add
sarl
popa
jae
fnsave
adc
xchg
add
jno
add
dec
lret
scas
pop
xchg
repnz
dec
lds
out
push
sbbl
add
test
sub
xchg
fwait
and
or
mov
mov
inc
jo
in
adc
stos
movsb
mov
or
imull
xor
les
jnp
out
cmpsb
xchg
call
mov
add
xchg
repz
inc
mov
lret
cmpsb
pop
testb
mov
hlt
sahf
outsb
and
insl
movb
add
jg
xchg
adc
fcoml
ss
cmpl
or
push
jno
imul
js
add
jbe
lea
test
lahf
scas
clc
sub
cwtl
popa
scas
sub
pusha
in
pop
inc
mov
ret
sub
mov
test
or
xlat
adc
nop
jno
popf
or
or
inc
jmp
cmp
jb
daa
and
js
fmull
dec
mov
mov
into
add
das
push
in
std
loopne
bound
or
outsb
add
xor
insb
add
and
movsb
and
cld
inc
sub
sbbb
jb
sub
mov
mov
add
and
imul
popf
fistpll
testl
cs
cwtl
mov
in
adc
js
push
or
ljmp
fstpt
fmuls
mov
pop
dec
sbb
sahf
jl
int3
mov
test
xchg
repnz
dec
stos
sbb
jp
or
js
hlt
pop
je
imul
mov
mov
imul
pop
das
fcomps
shlb
lret
scas
sbb
mov
roll
pop
test
push
push
fiadds
loop
pop
and
nop
mov
ret
dec
adc
sbb
xchg
enter
pop
insb
xchg
sub
sub
mov
pusha
out
repz
int
pop
loop
pop
popf
loopne
push
psubb
xchg
sub
js
mov
sbb
aas
mov
push
inc
shll
int
sub
sub
adc
outsb
mov
repz
push
decb
cmp
pop
mov
and
cltd
mov
add
cmpsb
cmp
sbb
movsb
or
shll
push
xchg
cmpsl
cmp
int
or
pop
sub
lods
orl
jmp
inc
cmp
rorl
adc
jge
sub
stos
mov
shl
andb
daa
aam
or
pop
mov
push
cld
stc
std
movsb
out
ret
mov
movsl
fld
out
flds
lahf
mov
push
dec
push
aaa
popa
xchg
shrl
or
adc
rcl
test
mov
jnp
cmp
pop
xchg
jo
mov
loope
xchg
xor
div
dec
popf
aam
sahf
mov
int3
and
mov
mov
mov
sbb
mov
xor
loopne
lock
lods
nop
xlat
xchg
inc
xorl
mov
cwtl
or
jno
sub
insb
les
adc
or
lret
je
cmp
xor
sub
xchg
add
repnz
add
ret
fmull
xchg
cli
mov
or
jae
outsb
pop
add
mov
and
add
fwait
mov
movsl
and
jg
cmp
shlb
sub
adc
fcmovbe
sbb
sub
push
lods
dec
jge
jl
dec
jl
fimuls
inc
jae
les
rorb
xchg
ja
aad
or
mov
pop
pop
out
push
stos
fcom
mov
aaa
and
push
pop
fistl
icebp
add
xchg
jg
fbstp
ret
popa
pop
or
cmpsl
test
mull
cld
cmp
jle
insl
mov
out
cmp
jmp
aaa
hlt
lahf
pop
int3
repz
push
test
mov
in
dec
sbb
scas
data16
mov
out
add
pop
cwtl
or
aaa
xor
add
dec
mov
push
addb
lods
jne
pop
push
arpl
push
insb
cmp
jmp
insb
dec
sbbb
sub
inc
xor
and
mov
test
insb
test
hlt
icebp
xchg
sub
shl
jge
ja
or
cwtl
lods
pop
ljmp
sub
pusha
mov
push
sub
pop
dec
call
stos
mov
inc
enter
add
out
pop
jbe
stos
dec
je
leave
inc
ret
dec
sarl
cltd
xor
jecxz
push
out
inc
mov
in
fwait
aad
sbb
call
pop
sub
mov
sarl
imul
test
into
cltd
cmpsl
lods
jno
jne
movsl
pop
enter
inc
rcll
sahf
aam
pop
jecxz
jnp
mov
cmp
or
push
js
jecxz
jbe
push
das
dec
cmp
cmpsb
dec
ret
imul
xchg
icebp
gs
jmp
dec
push
inc
jb
push
push
jns
arpl
dec
cmp
or
pop
dec
push
pop
gs
pusha
cmp
lods
ret
cld
mov
and
fmull
out
mov
push
sar
fldl
mov
mov
sbb
call
xor
loop
popa
sub
imul
cmp
fildl
ret
loop
or
dec
jns
hlt
dec
sbb
lret
lods
and
pop
aad
sub
lds
pop
or
aas
jnp
dec
pusha
leave
jb
rcr
cltd
push
subl
inc
repz
mov
mov
lds
test
std
xchg
cmp
mov
mov
pushf
popf
mov
pop
jg
inc
daa
movsl
push
mov
pusha
dec
add
dec
xchg
fs
jge
xor
push
mov
cmp
dec
cmc
push
test
xlat
shll
push
cmc
movsb
repz
hlt
dec
or
shrb
pop
cmp
mov
and
cmp
sbb
mov
sub
insl
repz
push
dec
fidivs
ss
sub
das
fisubl
cmp
or
cmpsb
push
rorb
xor
jno
push
ret
xor
loope
stos
dec
pop
dec
mov
xchg
iret
cmp
es
add
sbb
cwtl
sbb
mov
aam
push
inc
insb
mov
jae
xor
insl
outsb
jle
enter
stc
adc
add
mov
es
out
data16
or
lret
inc
popa
jne
cltd
popa
bound
mov
xor
push
push
sbb
addb
loopne
stos
mov
fldcw
subl
pop
cmc
pop
xchg
add
cmp
jmp
cltd
mov
adc
sub
cmpsb
xorl
rol
dec
frstor
rorl
insb
cld
rclb
or
popf
jne
cs
test
mov
lea
repz
cld
dec
pop
fstpt
loopne
ficomps
sub
pop
jns
adcl
adc
adc
popf
push
aas
push
sub
xchg
lock
and
mov
cmc
push
loop
imul
rcll
leave
cmp
mov
and
xchg
scas
xor
fsubs
scas
dec
popf
rcll
inc
aad
xchg
lret
mov
ja
xchg
or
mov
dec
mov
xchg
ds
outsb
push
cmp
pop
jmp
pop
inc
cmc
jb
adc
popf
icebp
inc
dec
loope
adc
inc
xchg
les
leave
mov
frstor
xchg
xor
enter
loop
hlt
arpl
xchg
fxam
mov
dec
filds
movsl
mov
pushl
bound
in
scas
out
sub
outsb
push
push
outsb
ljmp
adc
cmp
sarl
aad
negl
mov
mov
sbb
pop
sub
rorl
enter
mov
jnp
gs
cmp
rcrb
push
pop
mov
mov
std
ds
push
dec
fildl
jg
xchg
xchg
and
jae
mov
sbbb
ror
fdiv
mov
jnp
xchg
icebp
push
sub
push
or
adc
imul
fidivl
dec
lcall
jb
fimull
outsl
daa
fs
popa
lock
loopne
dec
lret
jecxz
enter
and
sbb
dec
jp
movsl
pop
cmp
les
adc
mov
and
lds
or
outsb
push
cmc
cmpsl
loope
jge
mov
pop
sbb
inc
cli
cli
cs
movsl
mov
out
mov
std
mov
mov
stos
push
sub
mov
sbb
sbb
in
loope
int
sbb
or
stc
add
xor
fidivrl
nop
fmull
xor
into
mov
xor
add
rcrl
rcr
xor
pusha
mov
call
jb
sbb
bound
leave
and
aad
lea
mov
push
lods
pop
mov
jp
stos
out
mov
push
popf
imul
decb
ficompl
and
mov
popf
or
ds
icebp
mov
push
or
std
cmpl
dec
adc
cwtl
fisubl
pop
mov
jbe
outsl
or
call
loope
es
ret
loop
cmp
stc
jne
pop
ja
clc
or
rcll
push
bound
add
in
mov
sbb
dec
ret
mov
sub
mov
imul
mov
xor
or
jbe
or
push
dec
adc
icebp
adc
sahf
sarl
sub
pop
mov
cmc
sbb
adc
cmp
mov
xchg
mov
and
mov
jnp
fdivl
fimull
sbb
aaa
add
jns
mov
test
arpl
stc
aas
aas
or
pop
movsb
push
ret
inc
out
sub
mov
mov
lcall
movsl
mov
jnp
pop
inc
nop
bound
ret
cmp
sub
push
mulb
pushf
sbb
mov
mov
call
into
ret
loopne
mov
cmpsb
arpl
js
leave
pop
fdivs
inc
and
mov
icebp
mov
in
mov
dec
leave
addr16
dec
fsubl
jmp
adc
jmp
shrl
push
cmp
lahf
cmp
enter
test
mov
xchg
in
shr
push
stos
inc
pop
dec
cli
mov
sbbb
and
out
and
dec
push
mov
out
add
clc
cmp
xchg
mov
jbe
repz
mov
mov
pop
xchg
add
xlat
pop
sbb
dec
imul
adc
loope
xlat
imul
jbe
or
lret
jmp
loop
pop
push
sub
sub
sbb
sub
out
xor
ds
jnp
jb
test
repz
ret
and
outsl
aas
push
ret
in
mov
out
testb
fisubs
push
lret
pop
cmpsb
cwtl
popf
sarb
mov
inc
inc
jmp
push
adc
scas
lds
add
jle
or
fnstenv
int
sub
xchg
jbe
mov
jge
adc
push
dec
inc
out
xor
pop
hlt
andl
ja
or
jecxz
or
push
mov
int
inc
insl
or
push
shlb
sbb
aad
ret
dec
les
mov
loopne
shrb
pushf
adc
rol
aaa
adc
adc
fs
adc
pushf
aad
add
xor
movsl
mov
cmp
movsb
out
pop
jno
xor
push
hlt
mov
js
pop
pop
test
sub
mov
sahf
pop
jl
repnz
pop
or
mov
dec
mov
add
xchg
cmp
lea
insl
shll
hlt
push
mov
dec
popa
push
sbb
cmp
push
jge
popl
ds
push
jbe
fsubs
pop
rcl
and
scas
add
lahf
leave
loope
out
rorb
adc
xchg
xor
insl
roll
mov
push
mov
repnz
dec
xchg
and
mov
and
rcrb
sahf
pop
ljmp
sti
add
adc
out
cmp
cmp
inc
adc
or
add
data16
add
lret
push
call
jo
insb
sub
ret
pop
filds
test
mov
leave
mov
int3
dec
lds
leave
inc
mov
xchg
mov
pop
and
or
sbb
rdpmc
addr16
rcr
push
xchg
out
push
pushf
xor
xchg
rcrl
mov
dec
jbe
sub
stos
jbe
lret
aas
mov
mov
inc
pop
loope
dec
pop
push
or
insb
data16
fwait
or
or
mov
jecxz
sub
dec
shrb
pop
jmp
push
testb
test
mov
jnp
mov
xor
inc
jp
push
pop
out
jmp
scas
mov
stc
cmp
gs
fcomps
inc
gs
outsl
jbe
lea
jno
and
dec
jg
jecxz
jle
inc
cmp
ja
push
das
andb
xchg
push
pop
or
mov
dec
cld
mov
movsl
test
mov
hlt
push
and
sub
push
adc
push
mov
loope
pop
mov
mov
pop
mov
cmp
hlt
rclb
out
jns
pop
icebp
or
jnp
xor
movl
pop
cmp
in
adc
inc
insb
push
adc
mov
fisubrl
sub
push
mov
leave
xchg
fwait
aad
popf
xchg
fmuls
cmp
call
sbb
fnstenv
ret
xchg
mov
jg
mov
fwait
sub
mov
movups
lahf
cs
jg
mov
add
insb
sbb
and
cmpsl
jecxz
and
gs
dec
sahf
and
mov
adc
sub
stc
mov
negl
sbb
ds
stc
sarb
mov
fidivs
inc
addr16
and
lods
xchg
xchg
js
test
cmpsb
jg
xchg
dec
cs
or
repnz
xlat
mov
out
inc
add
jb
push
jecxz
jl
cmp
cltd
mov
add
lcall
loope
insl
push
add
xor
xchg
adc
pop
lcall
xchg
std
mov
jmp
mov
andl
call
xchg
jns
stos
add
inc
enter
shlb
mov
and
gs
and
orb
scas
add
sahf
push
mov
mov
cmp
fs
ja
mov
push
cmp
fcmovne
insl
nop
and
lcall
mov
xchg
int
pop
mov
sbb
daa
and
repnz
pop
cmp
outsl
mov
add
shlb
or
xchg
mov
leave
push
push
aam
push
sub
mov
test
and
cmpb
fwait
icebp
push
stos
stos
mov
sbb
jns
dec
test
add
test
sbb
jo
negb
and
add
jnp
or
cmp
xor
push
mov
sbb
mov
imul
pop
jmp
pop
sbb
insb
ja
or
aaa
lds
sbb
xchg
rorb
hlt
in
sbb
fldln2
in
adc
pushf
test
fcoms
gs
add
cmp
inc
xchg
mov
fimull
jecxz
ficomps
pop
push
mov
sub
pop
pop
lret
push
cmpsb
mov
std
aad
in
sub
lds
push
lret
push
lgs
in
test
popf
cld
cmp
inc
inc
lods
aam
outsb
mov
pop
pop
sbb
push
rorb
or
hlt
outsl
imul
dec
xchg
add
jp
out
lods
sbbl
pusha
mov
xchg
or
lds
out
das
inc
jno
loopne
int
or
adc
mov
loopne
stc
xchg
xor
and
and
out
fwait
xor
sti
in
mov
jle
sub
je
mov
push
inc
pop
gs
aad
jne
ja
icebp
testl
outsl
cld
mov
in
pusha
movsb
filds
test
out
int
xor
loope
insb
in
testl
stc
lcall
cmc
lahf
mov
or
push
out
imul
mov
jg
out
jnp
add
jae
add
add
ljmp
lea
popf
inc
imul
cmp
scas
test
loop
fadd
cwtl
sbb
les
testl
and
inc
lods
ret
adc
sub
xchg
pushf
add
pop
pop
and
loope
xchg
pop
add
mov
jno
mov
rolb
push
movsb
pop
cmp
mov
ljmp
xor
lcall
xchg
jo
xchg
pop
pop
call
push
sarb
test
outsl
daa
in
push
jne
push
ja
and
shrb
cmp
fs
jle
lods
xor
inc
js
icebp
gs
and
sub
mov
jge
scas
add
and
scas
mov
pop
dec
mov
mov
bound
xor
mov
mov
shlb
jo
cmpsl
mov
cmc
fwait
jge
sahf
mov
pushf
negl
jecxz
out
ljmp
aad
flds
sub
jne
jecxz
or
sahf
jne
xor
test
mov
and
repnz
testl
mov
lods
insl
and
fnstsw
xchg
ss
and
out
jg
fcom
adc
lods
inc
xchg
add
inc
notl
mov
sti
shrl
jl
and
shll
repz
sbb
cs
jbe
popf
enter
inc
mov
jnp
push
dec
and
rorb
mov
and
fsub
orb
push
ljmp
or
sub
mov
mov
bound
push
xchg
jp
stc
cmpsl
leave
call
psubd
push
push
aad
mov
inc
push
adc
sub
pusha
lods
movl
jns
repnz
sub
loop
lock
rolb
sub
sub
cmp
lods
sub
cmp
shlb
into
sub
mov
adc
and
movsl
cli
lods
and
and
sar
iret
sub
or
xchg
jae
sbb
xor
sub
xor
add
adc
sbb
lock
movsb
xchg
stos
xchg
sbb
dec
xor
cmp
or
pop
out
cmpsl
inc
loopne
xrelease
cltd
cld
sbbb
jge
push
cmp
push
jae
fisubl
push
test
dec
out
roll
inc
mov
jmp
dec
cmp
mov
call
jmp
popf
outsl
loopne
ds
mov
jle
call
mov
push
inc
mov
xchg
outsb
loop
push
adc
adc
clc
inc
loop
repz
cmp
je
popa
and
mov
aas
or
dec
cs
cmp
das
fdivl
sub
test
pop
pop
insl
lahf
sbb
ljmp
out
inc
in
mov
sub
lods
xor
mov
inc
or
cmc
in
mov
repz
imull
mov
loopne
out
pushf
notb
rcll
jnp
push
xchg
xchg
push
sub
mov
out
cli
outsb
stc
mov
push
xor
push
xlat
jno
arpl
adc
out
dec
scas
stos
adc
loope
mov
adc
or
es
push
mov
stos
mov
sub
pusha
or
mov
add
mov
fistpl
or
pop
add
mov
xorl
pusha
aas
out
test
xor
fcmovnu
test
push
cmp
imul
fistl
mov
pop
xchg
sub
mov
movsb
test
sub
pushf
jge
cmp
push
mov
or
aam
rcll
or
pushf
adc
call
adc
fs
sbb
ja
push
repz
fildl
xchg
adc
cli
mov
sub
in
fcoms
cmpsl
jp
mov
adc
and
jmp
outsl
fnstcw
dec
jle
and
stos
mov
mov
das
sbb
add
jmp
push
jl
int3
fyl2xp1
ret
xchg
mov
push
xor
lods
mov
mov
call
jmp
push
xor
push
add
lahf
mov
out
jns
loop
lock
addr16
sbb
sbb
jle
mov
imul
mov
mov
push
fistl
daa
sti
dec
shrb
jno
sbb
adc
repz
stos
mov
dec
ds
pushf
mov
adc
out
pop
mov
xchg
stos
stos
jno
push
int
and
lds
cmp
jge
sahf
ret
xor
pop
jns
push
addr16
outsb
push
inc
out
imul
test
cli
int
pop
enter
and
pop
test
adc
jmp
push
sbb
popf
test
xor
rcll
sub
fs
addr16
xlat
cmp
shrb
rcl
call
sbb
mov
and
das
sarb
dec
int
add
xchg
das
mov
mov
cmpsb
adcl
cmpsl
sbb
mov
cmc
push
pop
xor
divl
inc
in
test
sub
add
xor
popf
out
clc
mov
jge
push
jnp
mov
xchg
and
xchg
roll
gs
mov
div
pop
pusha
ja
popf
mov
and
scas
xor
lds
es
insb
ljmp
cld
out
adc
iret
cmpl
adc
inc
xchg
and
stos
adc
jle
jnp
shll
push
fs
pushf
add
fisttps
subps
dec
das
adc
ds
xor
xor
jmp
fstps
mov
push
inc
out
ficoml
xor
hlt
dec
xor
je
pop
icebp
jbe
inc
in
insb
xor
das
daa
aas
cmp
pop
sbb
pop
inc
adcb
cmp
inc
dec
jecxz
and
pusha
or
inc
adc
les
mov
pop
or
into
mov
inc
jle
xchg
int
xor
sub
xor
out
xchg
jbe
jne
pop
lcall
popa
pop
sbb
incb
push
jnp
adc
add
add
sbb
movl
cmpsl
adc
out
mov
dec
and
scas
test
and
rorl
arpl
or
xchg
cwtl
and
pop
push
dec
xchg
xlat
loopne
sub
loope
sub
or
hlt
stc
pushl
inc
add
push
inc
ja
xor
mov
daa
cmp
push
scas
scas
ffreep
aaa
pop
gs
mov
mov
cmp
and
mov
fdivp
outsb
outsb
ja
ja
lods
mov
lods
icebp
push
stos
testb
imulb
push
loope
shrb
mov
cmp
icebp
inc
cmp
jg
roll
and
or
mov
inc
clc
dec
mov
xchg
pop
ja
lret
adc
lcall
cmpl
hlt
sub
and
mov
clc
or
mov
std
mov
or
lods
stos
insl
adc
push
mov
test
fsubrl
cmc
and
fidivs
lahf
pop
inc
fldenv
das
gs
mov
add
pop
cmp
jne
mov
in
div
or
cld
ret
xor
inc
adc
sbb
rcrl
mov
cmp
insl
or
dec
pusha
sub
sbb
in
xor
out
inc
sub
sub
jle
xchg
pop
pop
popa
subl
repz
push
clc
pop
push
xchg
test
pop
jb
dec
dec
or
flds
mov
mov
dec
mov
fdivl
mov
jns
push
adc
xor
call
cltd
aas
or
mov
popw
aas
clc
cmpsl
pop
mov
inc
cmp
mov
inc
fsubrs
inc
movsb
orb
stos
push
adc
movsl
enter
icebp
mov
icebp
in
cs
lret
int3
int3
inc
push
les
dec
pop
fistpl
xchg
mov
hlt
sbb
xchg
pop
inc
js
sub
mov
icebp
ret
push
mov
or
xchg
andl
push
push
mov
popa
clc
data16
arpl
fs
sti
cmp
adc
xchg
pop
pusha
push
jno
push
out
dec
mov
push
iret
stos
fnstenv
mov
stos
jecxz
fnstenv
mov
out
push
mov
leave
es
xor
push
push
xor
xor
or
mov
add
mov
lcall
push
mov
lods
push
jns
in
div
sbb
stc
xchg
and
add
mov
andb
mov
je
pop
pop
les
lds
mov
je
push
aaa
push
hlt
and
xchg
out
ja
xchg
lret
mov
ss
push
sub
cs
fstpt
pop
cs
pop
jns
pop
neg
in
scas
lahf
pop
jbe
sar
sbb
mov
scas
xchg
cli
sub
movsb
lret
scas
enter
lds
mov
sahf
div
xchg
jg
pop
xchg
orl
int3
int
pop
jle
hlt
loopne
aas
and
push
xor
jp
mov
lret
clc
aas
mov
aad
push
decb
repz
das
dec
or
testb
adc
sub
stos
test
in
out
cmp
dec
fists
loope
xchg
xchg
add
insl
dec
dec
xchg
test
int
icebp
cmc
add
test
xchg
push
xlat
mov
mov
push
leave
mov
mov
cmc
das
mov
pop
adc
fists
mov
lods
gs
fisubrs
sub
mov
das
inc
ja
cmc
xchg
pop
mov
ret
bound
lahf
jbe
fsub
push
push
push
sbb
insb
repz
outsl
mov
push
imul
stc
adc
or
sub
jb
adc
inc
bound
fs
mov
lret
dec
xchg
push
jnp
fnstenv
pushf
popl
dec
and
stos
pop
lods
out
inc
test
and
rclb
sub
lcall
outsl
shrb
push
sarl
bound
lcall
sbb
mov
or
add
fadds
into
cmp
cmp
mov
pop
mov
sub
mov
sti
inc
pusha
inc
pop
push
lea
sub
cmp
dec
pop
clc
sub
daa
ds
sub
adc
push
xor
xor
pop
in
adc
mov
mov
mov
leave
pop
and
cli
lock
xor
sti
inc
sbb
push
xor
pusha
inc
jne
ljmp
inc
pop
mov
mov
push
inc
in
lods
xchg
mov
sti
inc
pop
cmpsb
pop
aaa
clc
aad
mov
pop
xchg
jbe
sub
adc
cmp
xor
cld
lahf
insb
adc
outsb
testb
adc
cmc
xchg
pop
xchg
sar
inc
lods
adc
sbb
push
stos
in
fs
test
fnstcw
fwait
sti
pop
push
test
daa
imul
andl
mov
les
mov
les
lock
xor
lea
adc
xor
dec
xchg
repnz
imul
adc
cli
add
cmp
sub
push
adc
cmpsb
std
rcll
test
les
iret
inc
xor
pop
hlt
cld
cmp
sbb
inc
pop
xor
inc
ds
xor
adc
jle
lods
leave
sbb
dec
ffreep
loop
sub
dec
hlt
mov
ja
cmc
aaa
fsub
lret
mov
test
fists
inc
ret
xchg
pop
sub
fidivl
sbb
mov
xchg
push
lea
jl
rcrl
fstpl
mov
pop
icebp
mov
cld
in
mov
pop
lret
xorl
adc
pop
fsubs
xor
nop
adc
aam
outsl
jmp
mov
mov
ja
add
cmp
adc
pop
mov
pusha
cltd
adc
aad
sbb
fcoml
inc
adc
iret
movsb
xchg
or
std
inc
jno
cmpsb
sub
pop
mov
std
setno
insb
scas
mov
fsubrp
lret
lret
mov
jne
push
add
dec
pop
sub
shlb
dec
lods
xchg
outsl
stc
or
das
fsubs
mov
and
add
jg
mov
mov
and
mov
inc
mov
push
lds
sbbb
ds
icebp
push
push
mov
jno
pop
lea
aad
and
stc
mov
mov
pop
mov
hlt
dec
jae
or
cld
leave
push
xor
imul
push
jmp
or
out
movsl
data16
lods
xor
out
imul
les
fsubrs
dec
fiaddl
cld
into
pop
push
lods
sub
xchg
or
xor
loopne
adc
jnp
adc
cli
shl
fwait
inc
cmpsl
xchg
loop
mov
inc
adc
and
clc
mov
leave
inc
sub
and
push
in
adc
out
hlt
test
pusha
sub
pop
lret
push
jecxz
lea
movsb
xchg
fiadds
scas
mov
dec
cmp
nop
jmp
out
lcall
or
and
out
sbb
push
fs
int
mov
mov
into
test
push
cld
sti
mov
es
sbb
cmc
cmpsl
in
jae
mov
xor
or
sbb
enter
adc
push
push
jmp
ret
cmpb
or
pop
pop
jg
fsts
cmc
daa
pop
stos
fs
pop
inc
inc
out
or
sbb
jns
iret
mov
lea
ss
or
mov
mov
out
adc
sbb
sar
dec
ja
ss
xchg
dec
and
clc
popf
push
adc
pop
aas
out
dec
cmp
sub
jbe
mov
inc
push
fiaddl
out
mov
pop
or
vmovsldup
mov
inc
dec
xchg
push
insb
mov
sbb
leave
add
cmpl
stos
or
fdivl
fldl
loopne
jne
sub
mov
imull
jge
loope
add
mov
inc
fs
aad
add
int3
adc
jbe
or
stos
hlt
push
dec
cmp
rolb
adc
insb
pop
or
pop
in
jnp
add
ja
cmp
mov
xchg
add
aas
push
outsb
popa
in
cmc
push
dec
add
cmp
add
xlat
enter
xchg
dec
adc
sarl
xchg
mov
add
into
cmpsb
in
clc
stos
xor
xchg
inc
addr16
xor
fwait
decb
inc
rorl
cmp
inc
and
test
js
dec
sbb
or
divl
xchg
out
sbb
jno
sub
or
pop
repnz
dec
fsts
das
ss
insl
pop
jno
xchg
push
pop
sub
and
testb
adc
or
or
push
cwtl
xchg
push
sbb
push
add
mov
shrl
xchg
sub
dec
ret
out
jle
pop
movsl
jns
out
movsb
fisubrs
psubusb
pushf
push
insl
icebp
push
movsb
sub
das
pushf
xor
aas
repnz
loopne
out
jb
sbb
std
jnp
ret
mov
push
fwait
xchg
aad
repz
in
or
xbegin
loope
loop
push
sbb
adc
out
add
je
cmp
pop
in
test
cmpxchg
mov
sbb
in
popf
mov
insb
adc
inc
add
fsubp
mov
lret
jnp
push
pop
mov
mov
jmp
adc
mov
clc
stos
and
js
pop
rclb
rcl
insb
insl
iret
pop
loope
fldcw
jae
les
movsl
dec
xchg
and
stos
out
lea
push
jne
jmp
pop
jmp
mov
daa
inc
sahf
mov
scas
loope
fcmovnb
ficoml
mov
stos
and
or
mov
jg
xor
add
fidivl
pop
scas
enter
add
lret
sarl
mov
inc
jp
data16
pushf
push
lcall
sbbb
push
or
cmp
mov
sbb
inc
push
pop
lret
enter
icebp
jle
call
das
jg
mov
cld
jno
rcrl
das
add
mov
sub
add
cmp
mov
dec
hlt
out
push
lods
imul
fldenv
jmp
push
fbld
je
sbb
mov
add
and
sub
lret
movsb
stos
sbb
add
cmp
mov
mov
pop
fcompl
int3
mov
bound
or
xor
xor
adc
int3
xor
fs
push
adcl
les
pop
pop
sbb
mov
fbld
out
sub
mov
std
or
aad
movsl
adc
mov
fildl
sti
mov
push
mov
mov
iret
push
xlat
pop
push
mov
cmp
mov
int
mov
pop
or
xchg
cs
mov
popa
pusha
loopne
and
inc
push
mov
dec
repz
test
mov
out
mov
and
jns
inc
cmp
inc
leave
mov
inc
push
sbbl
idivl
mov
sbb
adc
sahf
fidivrl
jns
aas
stc
mov
mov
sbb
mov
in
xchg
lds
je
mov
les
or
cmpsl
pop
add
cmp
cmc
scas
insb
movsl
xorl
mov
aad
test
clc
imul
jno
ja
je
aad
mov
or
stc
outsl
fadd
insb
ljmp
or
shlb
flds
jb
outsb
xlat
dec
outsb
cs
gs
xor
cmp
in
popf
sub
iret
or
pop
mov
or
test
test
dec
adc
js
mov
hlt
push
xchg
fucomp
bound
lock
sub
xchg
hlt
or
jne
or
mov
out
push
jb
scas
add
sub
xchg
cmpsb
loope
jl
in
mov
es
leave
pop
sub
jp
lock
int
ljmp
out
imull
mov
xchg
inc
and
sbb
je
and
orb
test
jmp
xchg
stos
loope
pop
dec
pop
imul
cltd
xchg
or
or
fimull
ja
test
cmp
add
sub
or
sbb
shll
jmp
fcom
push
push
and
stc
mov
sbb
cmpsb
adc
xchg
mov
and
lahf
clc
sbb
mov
in
sub
add
cmp
sbb
cwtl
mov
leave
add
mov
sbb
mov
enter
sbb
push
inc
std
outsb
or
dec
movsl
pop
mov
aas
ret
mov
fisubl
mov
jo
ljmp
imul
dec
loop
jge
lods
mov
mov
adc
ljmp
lds
mov
in
jne
dec
mov
rcl
adc
ja
cmp
sahf
loope
insb
lret
fcmovbe
repz
fstps
into
xor
clc
push
sub
gs
push
xchg
push
lcall
fs
outsl
in
lods
arpl
gs
mov
js
xchg
xchg
ljmp
lahf
cmp
xchg
cwtl
mov
rolb
jg
pop
jns
or
adc
sbb
cmp
xor
pop
scas
orb
fadds
xor
out
ss
mov
mov
outsb
je
mov
nop
jl
imul
xor
repz
into
loop
jns
cmpsb
push
pop
and
sbb
jecxz
sub
or
pop
push
and
push
dec
icebp
and
fisubrl
loope
mov
mov
push
nop
push
aad
pop
test
out
pop
mov
xchg
push
test
dec
mov
cmp
pop
test
sarl
aam
mov
lcall
or
sbb
mov
imul
pop
addl
mov
dec
cmp
test
arpl
lea
adc
sub
cld
punpckldq
jge
loopne
xchg
cmp
and
cltd
sub
adc
clc
sahf
sbb
pop
push
aas
mov
outsb
dec
push
sub
add
lahf
ja
pop
cmp
inc
rol
add
xor
outsb
mov
xchg
int3
cwtl
push
loope
cmp
dec
mov
cld
jle
jecxz
pop
add
adc
mov
sub
mov
hlt
jmp
pop
mov
mov
mov
adc
adc
mov
out
xor
mov
sub
xchg
mov
cmc
mov
inc
aad
inc
pop
sti
ret
mov
cld
mov
clc
inc
mov
lret
cmp
aam
sub
dec
jmp
fdivs
dec
and
int
fsts
or
pop
imul
add
dec
ret
test
repz
jne
xor
ret
xchg
ja
movsb
jns
dec
cmpsb
or
addr16
jp
cmp
inc
mov
shlb
add
pop
mov
fsubrs
xor
and
lds
add
jno
xchg
cmp
rcl
lcall
cmpsb
jbe
mov
inc
fistps
pop
or
sub
sub
cmpsl
es
mov
mov
or
cmc
loopne
std
mov
imul
inc
or
shll
xchg
xorl
fcmove
jne
loopne
and
or
or
mov
dec
imul
xor
div
ds
mov
inc
std
mov
add
mov
mov
les
sarb
add
in
fmul
mov
pop
lret
faddl
aas
std
inc
aas
adc
roll
dec
mov
xor
mov
fsubl
nop
mov
inc
es
xchg
add
xchg
outsl
push
pop
or
iret
das
in
xlat
xchg
icebp
cmp
cmp
cmpsl
mov
addr16
push
test
adc
loop
lret
rcr
stos
jg
xorb
mov
fisttpl
xchg
add
pop
fadd
fs
mov
adc
icebp
popa
mov
rcr
add
outsl
pop
aam
inc
mov
sub
or
xchg
mov
outsb
jle
dec
loope
lret
mov
and
push
or
shlb
outsb
mov
cli
jmp
push
dec
push
decl
and
mov
lret
lret
fistpl
sbb
rorb
push
lods
cmp
xchg
pop
sub
test
push
add
push
sub
pushf
in
int
cld
pushw
jg
adc
out
mov
and
imul
ds
loope
lret
pop
push
push
addr16
mov
sub
test
push
push
sbb
jne
push
fldt
or
and
mov
aaa
add
and
xchg
dec
testb
int
mov
lds
cltd
push
jno
aam
repnz
push
fidivs
stos
mov
loope
insl
xlat
adc
add
xor
dec
ds
xorb
mov
icebp
mov
pop
push
jo
lods
pop
xchg
cmpsl
cmp
pop
xchg
lahf
jg
inc
cmp
lret
ret
xchg
mov
mov
jns
test
ja
cmp
scas
push
fwait
daa
or
loop
stos
mov
pop
push
cmp
in
pop
sbb
mov
lahf
dec
in
fwait
jo
iret
outsl
clc
lods
add
imul
xchg
push
shlb
xchg
orl
pusha
fs
arpl
dec
adc
shrb
push
cwtl
sbb
xchg
cmp
gs
or
sbb
lock
jbe
aaa
inc
mov
ja
and
mov
and
push
lar
inc
mov
out
cmp
push
push
cmpsl
sbb
mov
call
lock
xor
xchg
inc
mov
sarl
iret
mov
dec
stos
pushl
xchg
and
push
movsb
adc
mov
loop
push
fisubrs
repnz
add
mov
dec
xchg
repz
les
cmpsl
push
inc
xor
or
mov
test
xor
pusha
movsl
and
pop
mov
std
outsl
push
aam
scas
mov
lret
dec
or
sbb
scas
mov
dec
mov
jge
and
jns
mov
push
dec
addr16
rolb
insl
push
or
daa
iret
aam
mov
lcall
repnz
cltd
push
div
jle
cmp
out
fidivs
mov
pop
jne
pop
adc
xor
repnz
lahf
pop
movsl
jbe
xor
mov
jge
inc
aad
pop
xor
hlt
fwait
jg
scas
lea
daa
adc
mov
cmp
stc
xchg
adc
inc
xchg
movlps
shlb
adc
xchg
mov
adc
sarl
fistpl
mov
pop
mov
or
mov
xor
mov
imul
nop
ja
outsb
xchg
or
daa
cwtl
insl
mov
loope
mov
out
shll
xor
cmpsl
in
jne
sbb
cs
dec
les
fcompl
and
push
sub
daa
lcall
add
push
xchg
movsb
insb
out
jnp
mov
mov
dec
ljmp
sbb
dec
cmp
lods
or
mov
or
imul
std
xor
jo
daa
int
leave
js
mov
pop
xor
setne
or
inc
sar
aam
test
mov
movsl
or
cmp
cli
or
jo
mov
in
loopne
push
dec
push
ret
add
xchg
jns
sbbb
adc
insb
mov
and
xor
xor
sbb
aaa
std
mov
movsb
or
loope
and
fwait
inc
add
hlt
dec
cmpsl
ja
das
fdivs
cmpps
aaa
add
ret
mov
push
mov
movsb
mov
loope
lods
sti
and
scas
xor
out
mov
gs
mov
je
mov
addr16
andl
and
loopne
pop
iret
inc
fstps
mov
add
mov
int3
loop
leave
jns
pop
adc
in
jns
mov
lock
or
hlt
mov
enter
adc
sahf
es
clc
mov
jg
push
lods
push
test
pop
sbb
or
xchg
cmpsl
and
fcoms
inc
mov
jb
cwtl
fldcw
sub
adc
js
jecxz
ret
lcall
dec
mov
mov
pushf
mov
cli
test
add
jae
insl
sub
mov
sub
lock
adc
xchg
les
sti
sbb
push
dec
nop
popa
stos
pop
jecxz
xor
pop
imul
js
fdecstp
in
bound
mov
dec
psrld
pop
and
cmp
jae
stos
fsts
mov
adc
je
mov
negb
mov
scas
cmp
dec
pop
loopne
fisubrl
adc
clc
cmp
push
mov
movsl
andl
inc
inc
jns
push
jbe
mov
cmpsb
rclb
add
and
or
int3
out
add
mov
xchg
mov
cmp
div
fildll
xchg
jb
leave
xchg
mov
test
sub
xchg
sbb
push
push
and
mov
pop
dec
mov
pop
pop
and
addr16
movsl
sbb
lret
or
enter
xchg
imul
adc
xchg
pop
out
fwait
mov
mov
mov
and
xchg
dec
ret
cmp
cld
mov
pop
dec
adc
fcmovnb
add
in
cwtl
and
outsl
ror
mov
sbb
or
stos
lret
xor
fisttps
aaa
push
fwait
loop,pt
add
sbb
mov
int
mov
lcall
push
pushf
and
xor
mov
gs
pop
outsl
dec
jg
pop
mov
andb
shrb
cmp
jae,pn
loopne
mov
fldenv
pop
mov
mul
ficompl
dec
std
sti
in
icebp
enter
pop
lret
addr16
mov
mov
popa
inc
jbe
inc
negl
cmp
lahf
xor
sub
jnp
dec
mov
inc
pop
mov
mov
push
test
sbb
daa
or
dec
fnstsw
mov
sbb
add
add
or
xor
xchg
push
and
test
in
cmp
mov
xor
or
or
cwtl
xor
js
fs
sbb
mov
sti
pop
daa
pop
outsb
scas
in
lock
push
push
xchg
aaa
nop
adc
out
dec
int
lcall
scas
movsl
clc
dec
sahf
data16
inc
mov
mov
stos
add
js
sbb
test
stc
push
cmpb
jb
sub
stos
cltd
cs
inc
les
sbb
add
mov
cmp
add
sub
fisubs
mov
adc
rep
fmul
push
stos
mov
stos
imul
or
scas
push
repnz
mov
ds
enter
xor
jb
cmp
imul
push
pop
in
inc
pop
cmp
into
fisttpl
push
cmc
loope
push
xchg
lcall
lret
push
xchg
fcmovbe
mov
push
dec
or
adc
lret
je
lods
aaa
xor
iret
insb
aad
inc
mov
loop
push
mov
adc
ljmp
jmp
outsl
gs
cmpsb
adc
popa
notb
mov
jmp
sub
push
xchg
xchg
sbb
lock
pop
iret
icebp
dec
inc
xlat
mov
movsl
mov
xchg
mov
mov
jae
sub
or
jne
cmp
ret
cltd
push
sub
test
xchg
jle
in
loope
or
adc
and
scas
insb
movsl
nop
jae
loopne
aad
cmpsl
sub
and
mov
and
lcall
or
leave
sub
inc
daa
pop
mov
lods
test
iret
idivl
sbb
push
or
adc
cmpsb
adc
cmp
xor
in
int3
cmpsl
pop
subl
sbb
dec
in
cmpps
arpl
mov
mov
jns
shrb
mov
sbb
clc
js
add
add
lret
mov
add
jbe
add
xchg
fisubrl
lahf
mov
cmp
scas
xor
mov
icebp
mov
xchg
cwtl
and
mov
insb
fwait
jno
pop
xchg
daa
orl
xchg
dec
or
inc
lds
stos
rolb
gs
mov
or
xor
mov
adc
or
mov
not
ficompl
sub
loope
add
out
rcrb
mov
jmp
js
mov
mov
cli
or
das
fwait
dec
in
add
sub
fiaddl
push
ds
mov
loopne
addb
in
in
pop
xchg
mov
in
test
fwait
mov
fstpt
cli
push
push
pop
push
das
mov
in
insl
rcll
jl
js
and
pop
and
pushf
das
inc
pop
jge
pop
push
in
xor
jmp
lahf
inc
lahf
adc
jmp
jae
loope
sbb
dec
lds
jns
movsl
sbbl
jno
push
inc
inc
daa
cmp
jecxz
rcrb
int3
jle
jb
xor
addr16
pop
scas
in
jg
lea
cmpsl
cmp
ljmp
fadds
add
inc
and
adc
dec
or
dec
adc
xchg
jne
je
out
push
inc
and
loop
mov
filds
sahf
adc
sub
pop
dec
pop
in
cmpl
jns
jnp
cs
into
into
adc
add
pusha
or
dec
push
xor
jnp
sbb
cmp
push
mov
insb
test
adc
dec
and
les
loope
adc
adc
mov
or
push
cmpsb
cld
fbld
mov
mov
push
movsb
sub
std
inc
inc
sub
push
add
xlat
imul
mov
aad
sub
lods
je
mov
repz
popa
jnp
mov
aas
push
inc
xor
out
orb
jp
sbbb
js
lods
mov
gs
sbb
push
mov
rcrl
sbb
jecxz
mov
xor
inc
rcr
xor
lret
lea
cltd
aas
pop
hlt
rcll
xchg
loopne
sub
pop
sub
xchg
push
jge
jb
jmp
jle
in
push
shrl
adc
ret
dec
pushf
mov
mov
repz
repnz
push
dec
mov
lcall
lds
or
jb
inc
repz
pop
xor
or
in
cmpsb
mov
cmc
adc
jle
sti
div
cmpb
stos
into
gs
sti
sbb
xor
pop
ss
dec
pop
lahf
and
or
lea
sbb
adc
sub
in
fdivl
test
cmp
push
xlat
mov
mov
pop
xchg
jae
mov
jae
popf
fiadds
mov
enter
mov
movsl
pop
xchg
xor
dec
loopne
out
xor
push
pop
into
mov
push
daa
or
sbb
scas
mov
lret
mov
inc
pop
dec
shlb
lds
int3
mov
lds
mov
addb
cmp
rclb
adc
sahf
xor
lods
mov
rcr
jp
movsl
pushf
hlt
xchg
cmp
push
fiaddl
inc
lds
xchg
jge
jns
loop
fcmovu
mov
dec
add
bound
pop
cltd
jmp
mov
jecxz
out
push
add
mov
and
add
sub
inc
push
jae
das
fldenv
daa
add
inc
sub
cmp
adc
dec
dec
lods
fmul
sub
clc
mov
pop
cmp
iret
enter
push
mov
cmp
mov
add
mov
aas
fiadds
adc
mov
repnz
aaa
stc
xorl
mov
fistl
sbb
mov
adc
scas
or
pop
jno
mov
lahf
mov
lret
mov
imul
inc
ja
push
dec
pop
jnp
jmp
or
mov
aas
pop
cli
adc
pop
adc
xor
or
and
cli
mov
push
jecxz
pop
pop
sub
cltd
shrb
mov
mov
push
cmp
or
lds
shlb
mov
mov
sarb
push
outsl
add
ret
xor
mov
dec
ret
outsb
dec
insl
add
mov
cmp
xchg
mov
sub
fdivrl
sub
push
fwait
lahf
out
jg
stc
mov
jmp
xor
into
dec
dec
inc
jns
repz
xor
shlb
ds
dec
jb
jnp
es
call
outsl
dec
xchg
mov
jmp
pop
addl
mov
and
testb
lds
xorl
in
out
pop
mov
ret
sbb
xor
mov
push
sub
aam
or
inc
pop
test
sbb
inc
inc
cli
inc
out
and
sub
aam
popf
mov
cs
mov
sub
fdivrp
jp
mov
mov
sub
iret
mov
sbb
mov
repz
or
clc
dec
divb
pop
xor
inc
cwtl
mov
adc
push
pop
push
ljmp
stos
lods
xchg
dec
pop
cwtl
push
mov
pusha
into
ds
shlb
mov
cmp
sbb
sbb
pop
xchg
jge
add
jmp
xor
jb
push
mov
or
cmc
xchg
sahf
subl
hlt
mov
fdivrl
test
fisubl
sahf
ret
sbb
test
mov
add
imul
mov
test
pop
sub
lret
fldt
clc
imul
mov
jbe
test
or
out
ds
mov
jle
jmp
lods
jecxz
pop
popa
and
arpl
push
dec
sub
int3
fnsave
mov
add
mov
jo
mov
leave
dec
mov
push
lahf
xchg
inc
stos
clc
mov
leave
mov
fidivrl
cmp
mov
dec
push
xchg
in
mov
inc
push
mov
push
xor
xchg
inc
adc
in
imul
mov
call
mov
negb
sbb
fldl
xchg
mov
insl
xchg
and
jae
push
sbb
adc
jge
mov
cmp
loopne
push
mov
pop
pushf
xor
ljmp
rol
push
mov
lret
lret
add
fsubs
cli
in
jae
aad
xchg
mov
push
cld
mov
divl
add
xchg
lds
ljmp
lahf
mov
lea
pop
popa
xchg
icebp
mov
mov
imul
xor
mov
sbb
lahf
jne
imul
adc
sahf
enter
lds
imul
ret
lahf
jge
and
cmp
pop
xor
xor
es
mov
mov
rcll
in
cmp
cmpsl
cwtl
dec
and
outsl
cld
pop
xlat
fwait
lods
dec
out
addr16
mov
enter
and
ds
clc
cwtl
cli
sti
outsb
push
daa
sub
repz
movl
push
jecxz
xchg
ljmp
fwait
dec
sbb
aam
outsb
ss
xchg
cmp
mov
imul
hlt
fsts
push
fwait
mov
xlat
es
push
std
xor
arpl
mov
je
stos
sub
mov
jae
add
stos
imul
cmp
push
fnsave
bswap
cmp
call
adcl
fpatan
out
je
fstps
loop
pop
sbb
mov
adc
jmp
mov
out
inc
xor
xchg
mov
aaa
pusha
leave
flds
mulps
test
xchg
ret
xchg
fldcw
cmpsb
or
and
clc
mov
sahf
dec
es
dec
mov
and
add
aas
and
enter
cmp
jno
scas
dec
mov
mov
sub
cwtl
loop
movsl
loop
inc
fists
push
ret
dec
loop
mov
or
leave
xor
stos
stos
in
iret
xchg
push
insb
stos
cmc
mov
or
xchg
push
ljmp
out
testb
enter
sbb
xor
aad
out
adc
pop
xchg
jnp
push
push
pop
jge
ret
xchg
mov
dec
and
lea
jge
aaa
push
push
or
jo
and
ror
dec
dec
ljmp
lcall
push
lcall
inc
mov
inc
stc
mov
pop
in
jbe
je
stc
fldl
xchg
aaa
push
sub
pop
rcr
stos
pop
pop
es
insb
data16
scas
out
in
xor
xchg
pop
xor
test
out
loope
adc
int3
xchg
pop
xchg
dec
shlb
push
shll
xchg
xchg
stc
xchg
cmp
test
adc
xchg
sub
cmc
addr16
in
out
xchg
inc
lods
addr16
andps
ljmp
hlt
lock
xorb
add
mov
jno
sub
aas
add
ljmp
lret
lret
xor
pop
and
jbe
pop
mov
mov
inc
outsl
inc
xor
push
add
es
mov
lret
mov
cmpsb
cld
insb
adc
cld
mov
dec
mov
push
test
out
imul
cmp
pop
fsubr
adc
dec
jb
sbb
jecxz
pop
pop
cltd
push
pinsrw
mov
hlt
add
add
jmp
mov
add
les
xchg
xchg
gs
int3
out
aam
call
out
dec
inc
je
push
xchg
pop
and
push
loopne
inc
mov
scas
push
lret
xor
or
ds
cwtl
bound
sti
fistpll
xor
rclb
in
pop
fbstp
not
pop
jae
cmp
inc
in
inc
insb
negb
jecxz
lret
les
sub
cmpsb
inc
mov
scas
add
hlt
push
aam
popf
aaa
push
pop
jmp
sarl
mov
fidivrl
andb
sub
mov
push
push
scas
sub
sub
xchg
jg
in
je
daa
lods
in
iret
push
ljmp
pop
cmp
sbb
sub
rcrb
shrb
mov
fadd
mov
cmp
inc
into
out
not
pop
repnz
leave
testl
adc
outsb
dec
scas
inc
or
jp
sbb
adc
and
push
andb
push
cmp
add
fdivrp
xchg
and
add
and
fldz
add
adc
pop
out
mov
xor
cmp
mov
mov
dec
lods
sti
jb
jmp
push
pop
or
aad
clc
push
outsb
xor
daa
jl
ja
xorb
adc
lods
mov
filds
lods
cmc
inc
xchg
lret
dec
mov
jbe
jae
mov
xlat
aaa
shl
mov
js
pushf
test
in
sub
and
fnsave
xchg
out
mov
adc
mov
mov
jle
jnp
dec
sbb
mov
js
xchg
fisttpl
and
jae
pop
mov
jns
ret
and
or
out
sub
lahf
push
test
lea
mov
pop
add
cmp
mov
mov
test
cld
mov
lret
je
mov
rorb
push
cld
push
scas
or
jg
int3
shrl
std
aad
repz
add
shll
adcb
aad
aad
dec
lahf
cmc
dec
cmp
jge
inc
jb
add
out
in
pop
lcall
sti
inc
adc
dec
decl
bound
fnstsw
inc
inc
imul
test
push
aad
insl
lahf
mov
mov
jo
insl
movsl
mov
mov
je
mov
movsb
dec
movsb
std
jne
push
push
mov
mov
insl
mov
inc
jmp
jecxz
sbb
inc
sub
cmp
loope
int
push
loopne
jge
popa
push
clc
scas
in
lods
dec
stos
dec
jle
push
ss
lock
mov
cmp
push
jl
pushaw
jns
dec
cmp
xchg
cs
adc
enter
cwtl
scas
lods
sub
lds
dec
and
fsubrl
or
jmp
mov
in
nop
jnp
mov
xor
xchg
pop
mov
push
dec
icebp
xchg
outsb
imul
mov
mov
pop
jae
pop
pop
push
in
sbb
xor
sbb
fildl
cmp
jecxz
lds
jbe
xchg
push
cmp
jecxz
xchg
xor
sbb
dec
add
sbb
jge
push
push
shlb
sbbb
push
mov
fisttpll
scas
push
sub
lods
sub
bound
test
xchg
repz
lods
lock
adc
shll
sbb
test
xchg
mov
xchg
fisubrs
divl
and
roll
mov
sbb
cli
cmp
push
iret
mov
mov
cmp
mov
sbb
test
popa
inc
inc
xchg
xchg
bound
hlt
fwait
jle
sbb
inc
or
adc
push
pop
jp
loop
call
cs
dec
nop
mov
jle
mov
inc
and
xor
sub
xchg
fwait
gs
pop
add
push
ljmp
jg
fstpt
out
js
xor
aas
lds
ret
cmp
mov
outsb
dec
adc
mov
or
idivl
pop
jns
pusha
mov
ljmp
inc
sub
pushf
rcrb
notl
pop
push
icebp
and
pop
js
xchg
or
scas
push
cli
and
shlb
shrl
sahf
icebp
pop
icebp
hlt
and
adc
pop
mov
add
scas
out
jb
sbb
mov
sub
adc
je
clc
sbb
pop
jg
xor
pop
adc
or
mov
insb
add
pop
xor
mov
dec
jp
repnz
rclb
cmp
or
inc
jp
cmp
xor
scas
jbe
jmp
mov
test
and
mov
mov
inc
addr16
or
daa
add
sbb
data16
push
rcr
pop
aam
sbb
pop
stos
jge
stos
ret
inc
add
mov
ljmp
andb
push
mov
test
bound
inc
or
addr16
push
mov
cld
dec
jns
aad
sahf
or
aaa
jg
mov
daa
lds
hlt
xor
cmc
into
out
sbb
pop
add
add
stos
sub
push
cmp
add
inc
and
leave
xor
jo
mov
xchg
nop
rol
pop
and
lret
jnp
aad
push
xchg
xor
sub
subb
pop
sbb
add
in
jmp
inc
lods
fstpl
inc
mov
jns
mov
ror
stos
mov
mov
xorb
in
mov
inc
test
mov
imul
jg
sub
les
mov
je
mov
or
jnp
lea
loop
mov
fucomi
jg
inc
mov
aaa
pop
sbb
xchg
into
sbb
aas
fstps
xchg
sbb
pop
mov
xchg
std
int
pop
or
adc
in
dec
psllq
sub
adc
add
cmp
fwait
mov
repz
inc
xor
lds
outsb
in
push
icebp
aas
add
ffreep
or
mov
xor
xor
pusha
jmp
and
fidivrl
inc
stos
test
int3
jle
or
xchg
ds
xchg
sbb
fldcw
cmpb
dec
fwait
jge
cwtl
lea
add
lods
ss
adc
js
push
inc
xchg
push
fstpl
sub
out
cmpsb
scas
and
or
pop
subb
int
cmp
outsl
outsb
inc
mov
push
push
mov
cltd
mov
sub
cld
xchg
stc
jp
jle
add
jnp
xor
insb
sahf
lock
inc
pushl
test
ss
cltd
lock
bound
push
loope
mov
and
loopnew
cmp
sbb
jbe
addr16
iret
sbb
repnz
inc
mov
add
movsl
lds
xchg
pusha
pop
xchg
add
cmpsb
outsb
fwait
or
shll
push
or
dec
nop
xor
lods
fcmovnu
in
cmpsl
fimuls
ret
cmpsl
and
mov
dec
dec
out
icebp
inc
stc
lcall
jle
adc
xor
ja
pop
cwtl
dec
ret
cmp
xor
mov
xor
xchg
xor
fldt
imul
fs
insb
pop
jno
outsb
scas
iret
push
mov
negb
sub
inc
js
fdivl
aaa
test
das
fwait
lock
fimull
test
xor
shl
lock
jge
adc
xchg
pop
jge
jecxz
add
popa
jmp
sub
les
scas
cltd
andb
and
fidivrs
mov
mov
cld
fnstcw
rorb
push
int3
sub
jno
shlb
repz
pop
sbb
mov
rol
xor
adc
jle
jae
rorb
sub
aad
xchg
outsl
dec
popf
push
sbbb
or
jno
cmp
add
shr
lods
icebp
enter
pop
inc
lds
cmp
aad
movsl
in
shlb
dec
jg
lea
inc
in
jno
cmpsl
aad
push
and
xor
aaa
mov
xchg
arpl
cmp
xchg
mov
xor
cmpsb
sub
jnp
out
jle
mov
jns
sub
movsb
sbb
ret
or
sub
fnstenv
mov
xchg
cwtl
xchg
leave
shll
mov
lahf
cmc
jb
mov
xchg
loopne
xor
out
and
mov
or
mov
push
sbb
test
sbb
aaa
fs
lds
test
mov
mov
or
mov
pusha
bnd
cmp
or
pop
cmpsb
imul
stc
mov
sub
push
sub
iret
lock
mov
cmp
neg
movsb
mov
xor
mov
int
ds
xchg
and
sub
sbb
stos
call
xchg
adc
out
sub
out
mov
fadds
push
sub
shlb
dec
cwtl
and
jg
lret
scas
shrb
xchg
cmp
cltd
jle
and
add
cmp
ret
std
xor
lea
mov
mov
sbb
in
aas
shr
add
sbb
adc
jbe
mov
lods
shrb
sub
mov
in
jno
fdivrs
xorb
mov
js
lods
inc
out
jb
inc
in
fdivp
cmp
mov
sti
cltd
sbb
imul
and
xchg
inc
mov
xor
fwait
fwait
neg
cmpsb
roll
mov
or
xchg
inc
inc
scas
in
lock
popf
sbb
mov
nop
gs
rorb
aas
enter
and
leave
enter
cmp
ret
pop
fnstcw
sub
or
jge
inc
add
fadds
mov
mov
rcrl
and
clc
test
mov
adc
movsl
lcall
jmp
rclb
stos
subb
out
adc
push
sbb
jb
daa
ret
in
fldt
mov
int
mov
dec
pop
fwait
lcall
ja
mov
add
call
out
add
icebp
push
fistpl
std
mov
push
mov
je
pop
pop
ds
or
cmp
or
adcl
std
jnp
push
push
bndldx
or
sbb
andl
rclb
rcl
mov
aam
adc
pop
mov
xor
sub
pop
hlt
pop
pushf
push
cmp
jmp
dec
adc
movsb
stc
roll
add
cmpsb
call
rol
out
mov
sub
cmpb
cli
out
sbb
pop
adc
xchg
cmpsl
cmp
sbb
ja
sub
int
cmc
sbb
lcall
pop
dec
sbb
xchg
sahf
sub
sbb
mull
cli
fmul
into
add
xlat
sub
mov
mov
clc
dec
in
movhps
adc
xchg
arpl
sub
xchg
ret
test
mov
daa
outsl
or
inc
pop
ret
cltd
mov
movsl
jae
cmp
inc
mov
iret
dec
rolb
fildl
jl
adc
stc
pop
sahf
push
lret
dec
sub
xchg
ljmp
dec
ret
push
cmp
mov
mov
out
fsubr
pusha
loop
or
mov
pop
cwtl
push
sub
idivb
add
loop
andb
mov
inc
jmp
arpl
xchg
lods
inc
push
mov
push
inc
sub
aaa
test
out
std
lahf
push
addr16
mov
add
popa
inc
pop
sub
adc
xchg
ljmp
outsl
xchg
mov
addr16
stos
cs
icebp
adc
jp
stos
jmp
addl
pop
loopne
inc
pop
es
xchg
push
xchg
mov
fcomip
xchg
inc
xor
push
jg
push
das
sbb
xchg
cld
jbe
stc
and
cld
pushf
aam
int
sbb
xchg
mov
or
or
in
dec
cmp
loope
sbb
sub
jp
add
pop
xchg
lahf
cmp
leave
outsb
cmp
bound
sarb
mov
test
lds
test
out
push
jns
cmpsb
cwtl
clc
lahf
repnz
mov
pop
bound
pop
or
out
in
jae
pop
into
sti
push
xchg
lret
enter
fcoml
cmpsl
shrl
lock
outsb
dec
inc
lds
push
xchg
cmp
lret
mov
mov
adc
dec
inc
jmp
cmp
xor
jae
test
fwait
leave
loop
pop
ljmp
mov
outsb
sub
cmp
inc
xchg
mov
stos
ljmp
jg
cmp
sub
incb
ret
out
push
xchg
stc
aad
or
mov
test
popa
clc
sbb
les
fcompl
loopne
dec
mov
insb
pop
lock
or
xchg
inc
dec
sub
inc
cmp
xchg
icebp
push
mov
sbb
addr16
mov
aas
mov
add
arpl
sbb
jmp
jle
fxam
xchg
lahf
in
add
aam
mov
cmp
loopne
mov
sbb
pop
mov
push
add
pop
xlat
or
sub
call
cmp
lock
rclb
and
clc
pop
and
push
sti
out
lret
push
nop
sti
adc
push
xchg
addr16
pop
or
jge
lret
sbb
adc
jg
push
jne
orps
jp
out
addr16
pop
outsb
dec
data16
les
push
das
push
aaa
xorl
adc
sbb
mov
enter
cmc
xor
push
jmp
cmp
jl
stc
adc
aas
pop
mov
cmpsb
lods
push
xchg
lds
mov
cmpl
xchg
mov
daa
xchg
fnstenv
push
inc
cltd
inc
subl
pop
adc
loopne
loopne
push
cwtl
out
cmp
cmpsl
mov
movsb
jb
lods
jl
cmp
push
dec
fsubs
jae
push
mov
test
inc
cmpsb
bound
out
pop
cmpsl
jecxz
jp
fisttpl
cltd
add
mov
shr
mov
lods
fists
insl
cld
daa
sbb
cmp
mov
data16
sub
and
dec
shrb
pop
mov
push
outsb
push
ja
jo
pop
jae
mov
outsl
mov
push
adc
hlt
rcr
stos
dec
xor
mov
rolb
outsb
adc
into
xor
int3
xor
imul
lahf
inc
stos
out
xchg
mov
aaa
clc
aas
adc
in
or
add
loop
clc
shll
hlt
sub
popf
out
and
fsubs
jge
insb
shrl
inc
mov
into
push
ss
out
fisttpl
xlat
shl
jp
test
dec
adc
push
leave
jmp
xor
pop
lcall
stc
call
or
pop
adc
mov
popa
out
add
das
out
push
rorb
jbe
inc
out
mov
xchg
add
inc
jne
iret
in
mov
pop
or
test
addb
fldt
jmp
pop
addr16
stos
pop
rolb
push
fstp
lock
imul
pop
lahf
xor
mov
add
fmul
push
pop
sub
mov
xor
sahf
loope
fsubp
cmpsl
sbb
sub
push
in
or
push
mov
and
push
xchg
or
push
mov
sub
insb
cwtl
adc
pop
icebp
mov
sub
xchg
add
push
mov
enter
ret
inc
scas
fildl
xlat
add
mov
inc
repnz
sbb
pushf
mov
leave
stc
add
out
movsl
out
mov
or
pop
pop
mov
cmp
mov
pop
loope
ljmp
movsb
clc
xchg
jp
xor
in
pop
jmp
pop
xor
out
xchg
mov
adc
pop
popa
jnp
push
sub
pop
mov
hlt
dec
hlt
loope
lea
xlat
mov
adc
ljmp
cmp
sub
xchg
and
mov
xchg
mov
orl
aam
add
out
scas
mov
push
pop
mov
jnp
ja
mov
xchg
pop
imul
in
cwtl
stos
in
adc
cmpb
xchg
cmp
xor
leave
push
push
outsb
sbb
int3
pop
out
xor
rorb
jbe
orl
int3
lret
xchg
jmp
push
popa
xor
fcmovne
arpl
sti
call
sbb
cmp
fmul
sbb
test
push
dec
push
mov
int3
fwait
in
inc
lods
popa
inc
rcll
mov
scas
ja
das
or
loop
aam
lret
mov
jns
jns
cmp
sub
pop
push
push
jbe
subl
sahf
mov
jecxz
in
pop
fistps
dec
add
cmp
mov
fwait
loope
stos
mov
addl
and
xchg
fadds
push
daa
cli
jecxz
test
fildll
or
int3
fimuls
sub
lock
icebp
jmp
jo
push
xchg
mov
loopne
cmp
loopne
inc
add
lret
test
xlat
nop
sbb
pop
repnz
jo
scas
ja
xchg
or
arpl
mov
in
andl
std
das
test
fiadds
movsl
in
jno
add
int3
cmpsb
mov
jl
mov
and
inc
arpl
lcall
fnstcw
in
pop
push
sbb
and
adc
jl
bound
out
in
mov
in
fs
loope
lret
add
inc
mov
pop
mov
fs
loopne
outsb
jne
popa
loope
mov
pop
test
push
fmull
imul
cmp
out
lods
xorl
mov
ja
shrb
xchg
insb
mov
mov
cmp
and
add
outsb
pop
pop
les
repz
add
or
sbb
cmp
ffree
dec
sub
sbb
sub
or
inc
lret
jecxz
adc
sub
mov
ror
repnz
xor
or
cli
mov
inc
rclb
orb
mov
cmp
bound
aam
stos
iret
push
mov
mov
or
outsl
mov
pop
fs
leave
mov
sub
inc
mov
mov
push
insl
mov
or
mov
std
mov
jmp
xor
inc
lret
push
bound
ret
dec
cmp
in
aaa
inc
into
pop
sbb
ret
sbb
fcoml
das
loope
hlt
loop
mov
jge
scas
mov
xlat
lods
adc
xchg
mov
xchg
orl
jns
adc
adc
sahf
scas
shlb
sbb
jno
out
enter
jmp
inc
clc
mov
nop
push
dec
ss
mov
xor
leave
outsl
push
mov
mov
jnp
rcl
pusha
inc
mov
lahf
cltd
insl
push
push
lret
jl
sub
inc
mov
pop
das
popa
sti
lret
adc
xchg
outsb
sub
popa
int
push
sbb
push
ja
lcall
jmp
push
js
je
insw
test
mov
push
std
insl
and
and
add
pop
mov
jmp
repnz
stc
repnz
mov
push
pop
inc
xchg
arpl
cmpb
and
fs
push
adc
gs
in
test
data16
popa
mov
mov
cltd
rcrl
aad
cmp
popa
sbb
fs
movsl
push
push
jl
ret
jecxz
ss
jae
jp
ficoml
jae
jb
outsb
mov
adc
test
mov
in
stos
sbb
and
or
or
aaa
or
out
mov
lret
in
mov
xchg
adc
cmc
clc
loop
xchg
mov
xlat
outsb
out
shll
lods
dec
jl
xor
mov
sysexit
or
fcmovnbe
fidivl
fcmovne
and
dec
int
out
sbb
mov
std
mov
ja
jb
lds
sbb
loope
lods
cwtl
aam
sbb
out
push
outsl
xor
stc
nop
push
negl
lahf
jbe
leave
mov
mov
js
lods
mov
popf
in
mov
or
push
daa
out
pusha
ja
sti
xchg
idiv
add
fst
incb
in
pop
daa
faddl
adc
cltd
movsw
adc
stos
in
xchg
xor
dec
pop
and
je
psubq
sub
mov
adc
mov
outsl
das
sbb
in
jns
test
inc
adc
push
and
push
cld
pop
xchg
lret
aad
xchg
call
icebp
cmp
fdivrp
inc
mov
pusha
unpcklps
scas
cmp
dec
jb
sbb
jbe
movsb
cli
in
loopne
xor
test
popf
and
xchg
les
pop
outsl
out
dec
push
je
nop
add
addb
mov
push
mov
xchg
push
insb
pop
inc
imul
jbe
and
xchg
es
push
arpl
dec
jae
in
pusha
icebp
xorb
ret
std
adc
push
fldcw
popf
cmp
repnz
subl
aad
dec
shll
mov
aam
inc
fwait
jne,pn
push
push
or
das
push
xchg
mov
cmc
cmpsb
pushf
lock
xor
imulb
and
fsts
in
pop
pop
mov
or
aas
jo
gs
movsb
xchg
mov
loope
mov
aas
dec
jmp
jmp
popa
mov
xor
sub
push
lcall
fnstsw
push
mov
cmc
xchg
pop
cli
in
cmp
cmp
fildll
sub
popa
daa
imul
fwait
push
xor
xor
dec
mov
push
hlt
lock
xorb
data16
divb
gs
inc
dec
dec
outsl
and
sub
int3
lds
mov
pop
popa
ljmp
lods
cmc
jne
cmpsl
mov
jmp
mov
mov
or
adc
in
enter
xchg
inc
andb
js
loop
mov
push
int
mov
mov
clc
les
cmpsl
mov
fimull
sbb
into
push
push
dec
pcmpgtd
js
push
popl
nop
in
add
imul
out
jns
aam
pop
or
sbb
daa
jno
out
jne
dec
or
outsl
jbe
xchg
sub
out
mov
inc
ja
pop
and
ret
stos
xlat
xchg
add
jno
into
imul
pop
out
adc
cmc
rolb
mov
dec
cmp
xor
sub
addr16
je
push
mov
sbb
jns
testl
jge
lret
int3
xor
sbb
cmp
push
imul
adc
mov
shrb
lahf
fstl
inc
in
mov
pushf
adc
testl
pop
mov
push
mov
loopne
scas
outsb
shll
and
mov
adc
cmp
and
aaa
xchg
jg
in
pop
out
pop
fwait
sub
or
enter
mov
jo
arpl
scas
jmp
cmovg
icebp
cmp
test
pop
and
data16
cltd
inc
sub
jge
fwait
jecxz
mov
or
xchg
mov
sahf
xor
jno
ljmp
or
scas
repz
adc
cli
xor
mov
adc
mov
je
push
cmpl
xor
cmp
push
sub
cwtl
sub
insl
pop
xchg
fnstsw
jmp
mov
mov
lret
and
mov
add
test
mov
stc
imul
mov
test
sbb
ljmp
sarl
sub
lret
scas
and
iret
pusha
pop
push
jmp
mov
stos
in
xor
dec
in
or
cmp
add
and
or
ds
in
mov
cmp
push
stos
mov
into
jb
push
mov
push
push
mov
in
mov
es
pop
out
mov
loope
mov
pop
std
xor
mov
mov
sub
xor
pop
jmp
jecxz
push
jne
call
add
jl
mov
leave
out
das
insl
xchg
int
cmp
lods
mov
jge
ja
pop
adc
inc
inc
in
jae
inc
jecxz
fcompl
or
je
cmp
cmpsb
and
fldenv
addb
sbb
pop
add
pusha
scas
sbb
cmc
dec
loop
jno
out
push
dec
and
or
insb
and
pushf
inc
jmp
xor
idivb
and
lret
pop
sbb
out
mov
xchg
jmp
push
pop
rcrl
push
add
imul
aad
daa
ret
push
and
mov
test
imull
mov
addb
or
hlt
repz
mov
mov
insb
movb
jecxz
stos
adc
mov
jns
clc
rcrl
adc
mov
mov
or
and
cmp
add
jl
jno
xchg
stos
jbe
lods
scas
mov
int3
loop
cmp
mov
dec
mov
jnp
and
pop
adc
scas
std
pop
daa
lea
fsubr
dec
cmp
pop
pop
sarb
inc
pop
jo
test
adc
or
sarb
inc
in
mov
push
rcrb
xor
lods
cld
xor
sbb
mov
std
adc
mov
dec
pop
aaa
fldt
enter
rclb
add
insl
adc
xlat
pop
ss
addr16
aam
cld
js
mov
push
nop
push
stc
rol
mov
int
idivb
mov
cli
testb
lods
roll
xchg
in
adc
testl
mov
sub
mov
sub
pop
inc
test
outsb
jns
adc
pop
lcall
adc
std
push
mov
mov
mov
adc
jecxz
gs
add
iret
hlt
jae
cmc
icebp
mov
in
mov
xchg
inc
hlt
call
fistl
imul
or
test
mov
mov
sbb
cmp
nop
in
xchg
sbb
int3
cmp
les
push
jmp
adc
cli
xlat
sub
out
mov
pop
mov
sub
push
xchg
pop
out
lock
sarl
jno
jmp
mov
dec
js
mov
notl
push
ljmp
sbb
xchg
mov
push
imul
mov
inc
sub
mov
and
faddl
jp
out
pushf
or
adc
jp
inc
jmp
loop
ja
fistpll
xor
jbe
rorb
push
fisubs
pop
mov
push
or
lahf
in
cmp
out
rcll
push
scas
movsl
push
cwtl
push
xor
std
in
repz
lret
stos
jmp
add
sti
and
js
mov
inc
push
dec
or
pop
enter
orl
bt
cmp
adc
push
les
push
or
sahf
mov
dec
pop
lret
pushf
cwtl
inc
mov
xor
jae
xor
mov
mov
sbb
movd
sbb
add
inc
inc
dec
dec
xor
or
cli
push
mov
aas
daa
xor
add
and
negl
sub
pop
inc
mov
dec
or
ret
jne
inc
aam
js
inc
fcoms
pop
es
js
imul
jae
out
xor
mulb
imul
pop
mov
stos
mov
mov
xor
push
cmp
pop
jbe,pn
or
mov
daa
bound
outsl
and
and
mov
mov
pusha
mov
jne
mov
addr16
sbb
clc
loop
adc
sbb
lds
fs
sbb
jle
cmp
lret
push
rolb
inc
add
repz
fisubl
add
mov
pushf
pop
lock
fcompl
fstpl
cmp
clc
out
dec
lods
add
jmp
and
movsb
jne
pop
mov
scas
in
pop
dec
pop
push
test
jno
ds
add
cmp
mov
popf
adc
mov
jb
jge
stc
aas
rcr
mov
xor
aaa
and
dec
mov
adc
stos
sbb
add
popf
sbb
jae
js
sbb
negl
or
sub
rcll
clc
jbe
push
inc
cli
push
xlat
mov
sbb
mov
or
imul
and
aad
or
fst
mov
cs
push
popf
sub
aas
cmpsl
jnp
fmul
cmp
stc
test
movsl
jp
js
fdiv
loopne
scas
int
insb
cwtl
push
cmc
jg
add
adc
enter
adc
jecxz
lea
inc
daa
push
int
adc
xchg
jp
jno
leave
sbb
dec
adc
cmp
or
outsb
ss
loopne
daa
mov
xor
inc
fistpll
outsl
sub
inc
xlat
fwait
add
pop
stos
aam
add
sti
into
mov
loop
and
loope
cmpsb
sbb
mov
mov
dec
push
jg
ljmp
push
arpl
ret
cmp
dec
data16
hlt
inc
jl
xor
push
aaa
sarb
fdivl
xchg
lret
rcrl
pop
in
jmp
mov
stos
dec
inc
sbb
or
adc
lret
dec
int3
les
xchg
clc
jge
and
ljmp
mov
add
xchg
mov
adc
je
into
call
data16
cmp
xlat
out
jae
aad
shlb
out
sti
addl
sub
push
add
lret
shl
je
je
rclb
pop
sub
sbb
int
test
mov
insl
test
ficompl
test
mov
xchg
mov
leave
dec
and
add
js
int
jne
int3
dec
mov
cmp
mov
mov
pop
or
data16
lea
test
data16
push
or
or
mov
mov
cmp
leave
sbb
xor
in
ja
pop
test
ret
sbb
fnsave
outsl
loop
pop
popa
jl
cwtl
movsl
mov
push
dec
movsb
cli
pop
or
movsb
dec
xor
into
mov
scas
ret
dec
js
pop
loopne
mov
mov
inc
cmpl
leave
pop
sbb
int
out
or
adc
push
jp
lcall
loop
fcoms
pop
and
sbb
sbb
mov
cli
in
xor
inc
dec
pusha
adc
or
dec
and
sub
mov
pop
push
mov
fwait
lods
sub
inc
mov
inc
or
inc
dec
inc
sub
adcb
jns
pop
cmc
xlat
js
and
pop
outsl
sbb
rcrb
push
hlt
out
imul
jnp
cs
sub
stc
sbb
fldt
sbb
sbb
xchg
data16
dec
xor
sahf
sbb
sbb
mov
sbb
jp
jnp
sub
jbe
adcb
push
popf
fadds
mov
jge
push
push
pop
adc
int3
sub
dec
mov
adc
xor
adc
add
sub
inc
les
sbb
push
fsubrs
push
je
xchg
es
and
or
stos
pop
mov
jg
sbb
out
insb
xor
push
filds
mov
daa
pop
ja
adc
and
popf
xor
mov
dec
gs
dec
mov
scas
das
dec
test
adc
repz
sub
push
xchg
shl
ds
shlb
xor
pop
add
cmovle
pop
jecxz
jp
sub
xchg
inc
push
mov
cmp
repz
arpl
cmpsl
les
sbb
mov
lds
mov
dec
addr16
xchg
or
lret
xlat
fbld
test
xlat
mov
and
inc
scas
orl
cmp
jbe
push
adcb
hlt
sub
push
test
pop
pop
lods
in
mov
out
arpl
and
mov
push
inc
cltd
fcom
mov
test
jmp
loop
add
push
mov
jl
stos
xor
out
jp
push
dec
add
lcall
mov
sbb
or
sbb
frstor
fdivrp
ja
or
push
dec
and
push
dec
pop
add
mov
and
lret
xor
outsl
test
iret
sub
inc
out
jle
cmc
pop
addb
sbb
ljmp
sub
push
xchg
call
das
dec
ret
dec
test
pop
mov
cwtl
outsl
mov
mov
int
aad
pop
cli
ftst
pop
or
int
inc
sbb
pop
or
dec
js
ja
inc
mov
sbb
pop
ljmp
shll
add
or
insl
fidivs
repnz
inc
pop
mov
jmp
shll
les
or
in
fisubl
sub
mov
ljmp
dec
push
aam
cmp
cwtl
or
mov
in
push
pop
popa
pop
cli
push
push
inc
jns
leave
adc
mov
add
dec
or
sub
mov
mov
testb
sbb
jge
call
mov
cli
pop
push
xchg
mov
icebp
adcl
push
js
mov
lret
hlt
adc
xchg
or
add
or
aas
push
inc
idivb
leave
push
push
not
fbstp
rorb
push
add
push
loope
pop
mov
repz
inc
jp,pn
mov
or
gs
push
addl
dec
mov
imulb
loopne
cmp
aad
jne
sub
sbb
mov
enter
or
pop
movsb
test
and
push
jno
dec
mov
mov
stos
ret
nop
adc
mov
push
test
mov
mov
outsb
mov
outsb
sbb
xchg
outsb
mov
sbb
xor
mov
xchg
fbstp
dec
test
mov
pop
mov
dec
or
repz
pop
lret
notl
pop
inc
je
cmp
push
insb
test
in
fnstenv
sbbl
out
jge
mov
mov
adc
addr16
or
sub
call
mov
mov
pop
jnp
jmp
call
jae
decb
loope
dec
sub
fwait
xchg
insl
mov
out
lods
lret
and
outsb
sub
lahf
adc
arpl
arpl
xorb
outsl
dec
push
imul
xchg
jnp,pn
popf
or
mov
int
sbb
js
imul
lea
outsb
lret
inc
mov
mov
push
aam
adc
daa
loope
xchg
xchg
push
test
dec
cmpsb
xchg
pop
mov
cs
and
lods
mov
adcb
dec
inc
jbe
mov
fimull
out
fidivrs
cmp
dec
lods
faddl
lds
add
and
push
data16
add
inc
cmp
outsb
mov
in
inc
aad
rcr
and
mov
cmc
pop
pop
lcall
pop
outsb
pop
or
sub
xchg
out
js
nop
and
repnz
mov
push
sbb
cmp
or
jmp
jnp
push
xchg
lods
std
stos
mov
dec
ja
movsl
jg
loope
inc
iret
movsb
aam
push
call
pop
popf
test
or
cwtl
es
bound
dec
add
test
shll
flds
mov
mov
shr
dec
jae
xor
out
xchg
push
ja
or
mov
inc
inc
ds
movsl
es
cmp
fcmovnbe
cmpb
lret
mov
inc
push
cmc
test
outsl
add
sub
cmp
mov
aam
cmp
psubd
repnz
loop
rolb
icebp
faddl
dec
sub
fldl
cmpsl
sub
xchg
dec
add
add
and
mov
dec
into
xchg
xor
dec
mov
pop
test
mov
fldl
insl
rorl
fstpt
or
add
add
sub
lret
mov
xor
shll
movlps
ljmp
shlb
addr16
mov
mov
xor
sub
push
sti
sbb
inc
jae
ret
bnd
inc
dec
and
scas
pop
push
adc
mov
pop
pop
outsl
pop
xchg
sbb
adc
gs
xor
and
shll
enter
cwtl
mov
push
mov
lds
sbb
mov
test
shl
mov
xor
pop
push
cmc
into
cs
pop
clc
cli
sti
add
insb
scas
push
inc
push
cmpl
xor
inc
outsl
mov
dec
or
lods
mov
mov
movsl
adcb
lcall
push
arpl
int
add
xchg
movl
popf
cmpsl
xor
rclb
dec
repz
jno
insb
add
cmpsl
xor
and
jmp
xchg
test
sbb
cltd
sahf
mov
or
dec
movsb
lods
fmulp
iret
bnd
sbb
xchg
loope
lret
sub
arpl
mov
icebp
push
mov
pop
out
mov
xchg
or
jb
fsubl
cmpsb
fmuls
scas
and
popa
cli
ret
pop
cmp
sub
mov
dec
hlt
rcrl
lret
inc
iret
add
sbb
cmp
repnz
lea
sbb
mov
ret
xor
sbb
or
dec
fimull
xchg
ret
cmpsb
stos
jb
rcrb
cmp
sbb
or
mov
cmovnp
jns
test
pop
lods
or
dec
out
lods
lcall
out
das
inc
outsl
mov
jns
mov
and
ffreep
add
xchg
mov
push
jae
ret
dec
enter
es
fnstcw
or
push
cltd
sbb
push
dec
cmp
push
daa
xor
jno
sub
or
outsl
xor
orl
bound
scas
sub
insl
ret
mov
add
push
icebp
sub
shll
int3
xchg
push
insl
aam
pop
rcr
adc
icebp
mov
enter
cmp
aaa
data16
rcl
fldenv
out
push
and
ret
mov
pop
hlt
dec
loope
pop
sub
movsl
pop
push
jo
mov
loope
out
es
sbb
mov
jge
mov
in
sahf
push
loop
out
pop
pop
mov
jg
cwtl
cmc
xlat
or
push
test
mov
nop
fdivrl
and
popf
adc
add
lods
mov
orb
jp
or
cli
dec
or
nop
sbb
cwtl
cmc
cwtl
and
and
jge
testb
push
test
ja
stc
aad
hlt
jecxz
lret
or
sbb
xchg
sbb
xchg
push
xchg
ret
adc
adc
mov
out
lahf
nop
in
rcrl
push
lahf
shll
dec
ss
adc
pop
or
out
dec
add
push
daa
jne
idivb
lea
and
sub
push
xchg
inc
push
jge
mov
pop
stos
imul
cmp
pop
lret
scas
pop
mov
dec
imul
jb
orb
xchg
enter
std
pusha
add
adc
gs
push
aas
stos
cs
mov
hlt
into
cmp
fildl
xchg
or
pop
aad
push
adc
int
sti
int
xchg
adc
lea
lret
mov
mov
aaa
push
bound
inc
lds
iret
push
mov
adcb
mov
sbb
lret
mov
ficoms
mov
scas
or
shlb
push
pop
arpl
dec
fdivp
outsb
out
lcall
or
ret
mov
popa
xor
sbb
in
daa
into
pop
fidivl
mov
pop
das
and
stos
mov
cmp
sub
inc
pop
pop
data16
jns
mov
fimuls
xor
dec
ffree
jbe
pushf
jg
adc
jge
ret
aaa
lea
daa
in
lock
mov
push
dec
ret
out
dec
lret
lcall
in
mov
pop
and
mov
je
cmp
fs
adc
or
jg
dec
or
add
outsb
sub
cmc
aaa
arpl
cmpsl
sbb
jg
push
xchg
popa
mov
lods
aaa
mov
push
sub
xor
es
and
aas
mov
sbbl
filds
or
pop
je
adc
hlt
ret
push
testb
pop
aad
out
stos
insb
and
push
mov
or
aad
ret
push
idivl
mov
imul
popa
daa
insl
add
fs
out
ja
lret
lods
mov
mov
jle
adc
ds
icebp
pusha
fisttps
jg
mov
data16
cld
add
mov
xchg
cli
xchg
cmpsb
push
inc
add
pop
ljmp
mov
sub
std
dec
scas
icebp
movsb
xchg
lret
fcmovnb
popa
call
lret
fldz
outsl
xchg
loop
int
sbb
mov
jp
shlb
imul
push
mov
imul
sub
adc
rclb
cli
push
fadds
mov
dec
adc
cmc
fs
cmp
ja
mov
lret
ja
sbb
loop
ror
fwait
jae
mov
push
xor
pop
xor
aaa
ljmpw
nop
decl
push
xchg
cltd
leave
movsl
dec
std
movsl
lahf
push
outsb
inc
fwait
inc
bound
into
es
rorl
je
enter
push
push
fs
xchg
jmp
mov
pop
jnp
out
inc
mov
arpl
leave
movsl
xor
xchg
repnz
mov
xchg
mov
out
inc
mov
iret
adc
mov
dec
out
popa
mov
inc
mov
fisubs
js
out
insl
dec
hlt
loope
stc
dec
jne
cmp
adcl
jle
popf
std
jecxz
test
cmp
hlt
cs
sti
je
push
jnp
pusha
nop
ss
imul
fs
xor
mov
inc
dec
xor
push
shlb
enter
inc
sbb
and
nop
push
sbb
imul
xlat
lahf
adc
pop
xchg
icebp
mov
cmc
outsb
scas
pop
mov
push
stos
sarb
dec
pop
ljmp
es
pop
aas
jg
cmp
sub
xchg
ss
lods
push
fwait
loopne
es
dec
cmpsb
dec
pop
push
fistpll
jns
movsl
test
test
sub
aaa
add
jne
adc
idivb
mov
ljmp
out
gs
pop
mov
lahf
call
iret
jl
push
imul
adc
imul
lods
iret
xchg
in
aam
in
jno
sub
fildll
and
and
lret
cwtl
inc
dec
or
inc
sbb
dec
xchg
xchg
lods
sub
or
sbb
aad
stos
add
sbb
icebp
and
dec
ficoml
outsb
mov
hlt
pusha
cltd
movsl
in
push
sti
mov
cs
fcoms
inc
jge
cs
fcom
inc
insl
enter
shll
adc
shlb
scas
dec
enter
or
mov
add
sub
orb
shl
and
popf
sar
cli
cmp
and
add
fildll
ficompl
leave
stos
inc
lods
push
lea
dec
push
xor
iret
lods
xchg
repz
push
and
jne
insb
sub
into
int3
fdivs
iret
lds
mov
cld
mov
mov
cmp
mov
dec
jo
adc
icebp
mov
cwtl
mov
sub
pop
sahf
dec
lods
and
dec
lds
adc
mov
jne
push
mov
mov
push
rcl
cmp
ss
push
xlat
sahf
cmc
cmp
adc
mov
mov
sti
cs
sub
xchg
mov
pop
inc
push
rorb
inc
nop
and
mov
jo
lahf
pop
fists
arpl
xchg
mov
inc
das
daa
std
push
mov
in
xchg
dec
sub
jnp
lcall
pushf
ja
les
or
mov
push
sbb
push
roll
xchg
int
cmp
cmp
add
xchg
lcall
pusha
pop
mov
mov
in
push
add
lahf
imul
cmpsl
fldl2t
xchg
leave
rorb
mov
jmp
aad
and
cwtl
ljmp
pusha
push
mov
cmp
clc
pop
lcall
sbb
shll
outsb
mov
movsb
or
jb
daa
pop
lret
and
int
scas
sbb
pop
mov
xor
std
js
loop
popa
mov
or
cwtl
xlat
push
dec
or
jle
mov
sbb
mov
mov
mov
ja
outsl
sbb
ja
dec
mov
pushf
pushf
outsb
jb
popa
push
add
cltd
sarl
and
sahf
mov
adc
hlt
xchg
daa
fidivs
loop
jbe
insl
mov
loopne
mov
jge
sbb
push
pop
cwtl
sahf
inc
xchg
ljmp
and
or
mov
xor
jg
jno
loopne
mov
xchg
loopne
mov
lahf
int
xor
int
xor
jb
movsb
push
inc
mov
pop
int
pop
fldcw
lahf
loope
faddl
out
out
int
ret
mov
push
cmp
jmp
dec
cmp
jo
sub
sbb
or
icebp
sub
dec
inc
clc
pusha
push
fwait
loop
push
xchg
inc
icebp
xchg
jae
in
pop
ja
test
scas
std
icebp
fsubp
divl
shrl
xor
mov
add
or
fwait
pop
mov
sbb
loop
lcall
sub
adc
mov
fld
dec
or
jb
and
andl
fcomps
fiaddl
and
outsb
lret
mov
addl
cmp
es
sbb
insl
sub
xor
pusha
add
imul
popa
fmuls
push
adc
cmc
jl
add
sar
push
push
rcrb
xchg
lret
pop
sub
jnp
inc
mov
rcll
xor
inc
fdivrs
outsb
mov
xor
outsl
ja
subb
add
mov
jmp
push
scas
pop
xor
popa
mov
inc
cmp
lock
in
in
es
sub
mov
shll
mov
hlt
pop
pop
pop
jp
push
mov
push
iret
in
mov
push
mov
lds
sbb
inc
arpl
mov
or
mov
or
repz
out
and
cmp
in
mov
push
mov
or
xchg
fisubl
out
push
mov
inc
jmp
sti
push
sub
push
iret
andl
xor
push
fsubl
mov
jnp
mov
sub
xor
nop
fdivrs
push
inc
sbb
lret
mov
sbb
lds
xorb
cmp
out
mul
xlat
jp
fcmovu
xor
adcl
fdivr
inc
jecxz
pop
ret
movsl
xor
jno
jae
adc
insb
xor
adc
in
inc
jne
lcall
adc
das
movsl
scas
mov
push
sahf
fisubrs
jg
sbb
sbb
es
std
xlat
pop
mov
imul
mov
daa
mov
ret
sbb
mov
stos
pushf
adc
lcall
push
cmp
cwtl
adc
adc
testl
in
mov
sbb
jno
jl
mov
jl
testb
jmp
hlt
ljmp
div
sti
mov
pop
sub
sbbb
gs
cmp
inc
imul
add
cltd
shlb
sbb
insb
xchg
repnz
push
dec
jae
xor
out
sbb
into
add
push
or
add
popf
inc
xchg
movsl
jp
xchg
xchg
mov
push
loop
orb
push
add
jbe
mov
dec
push
stos
jmp
dec
cltd
and
xchg
xor
xor
iret
inc
bound
mov
insl
stc
inc
add
ds
imul
cmpsb
lcall
mov
shrl
dec
cmpsl
cmp
xchg
inc
aas
leave
mov
shl
out
loope
adc
and
inc
mov
pop
mov
aad
loop
cli
sub
inc
or
movsl
ljmp
inc
push
jno
fidivrs
es
pop
inc
pop
ljmp
pop
cmc
cmpsb
jb
pop
cmp
adc
dec
iret
xor
int
xor
dec
push
repz
push
and
negl
test
insl
jle
mov
out
cli
std
mov
mov
mov
mov
jne
mov
and
je
lock
jno
add
inc
dec
dec
dec
cmpsl
adc
xor
std
xchg
xchg
jmp
and
mov
sbb
mov
mov
mov
cmp
pop
push
repnz
push
inc
addl
or
and
push
lds
add
xchg
daa
push
cs
cmpsb
adc
aad
and
mov
scas
jno
xchg
jp
ds
fwait
rcrl
push
and
les
sbb
pop
call
int3
mov
into
daa
mov
leave
cmpsb
mov
outsl
push
xor
enter
push
mov
fadds
scas
push
loope
dec
mov
cmc
pop
outsb
mov
add
add
fidivrl
push
jb
stc
enter
cmpsb
ds
pop
xchg
sbb
add
push
inc
xor
adc
push
call
xor
inc
ficompl
jmp
daa
addl
sub
test
or
xchg
cmp
test
gs
dec
imul
and
dec
xchg
ret
pop
sti
cltd
out
sbb
in
cld
add
daa
xchg
cmp
xchg
push
cmp
pop
and
stc
add
add
lods
jnp
xor
hlt
jno
mov
jp
pop
cltd
cmp
sub
and
adc
jbe
in
jmp
pusha
or
dec
dec
adc
or
sub
int
jbe
or
or
cmp
stc
adc
ja
mov
mov
jmp
mov
mov
in
mov
push
cld
pushf
fisttps
push
push
outsl
movsb
pop
mov
adc
test
dec
dec
and
imul
mov
daa
mov
jne
pop
int3
loop
add
mov
push
fnsave
mov
mov
xor
lret
push
dec
cmc
test
lcall
test
pusha
fwait
aam
sbb
test
sub
mov
push
adc
mov
test
dec
aas
aam
jbe
bound
das
mov
push
jl
loopne
outsl
mov
add
nop
fs
out
add
mov
in
mov
push
xor
cmpsb
addb
iret
xchg
addl
ds
imul
xlat
iret
mov
mov
and
std
mov
cmp
sub
mov
stc
sbb
xchg
adc
das
add
insb
mov
sub
test
popf
xchg
das
push
pop
mov
mov
adc
cwtl
fcmove
jns
test
mov
fsubrs
mov
xchg
jae
popf
sub
and
mov
and
cwtl
mov
fwait
inc
mov
add
mov
les
mov
push
pop
cmp
loope
cltd
insb
hlt
xchg
popl
lods
fwait
test
inc
push
cmpsb
or
fisubrs
fsubrs
rorl
fstpl
jecxz
aam
loope
pusha
dec
cmpb
cmc
in
mov
inc
cli
shlb
sub
fisubs
jo
lods
jmp
call
loope
push
push
cmp
sbb
xchg
cmp
sti
rcrb
pop
rcrb
inc
and
cwtl
daa
out
pop
popa
sub
jae
lods
inc
hlt
fisubl
fstl
pop
out
xchg
cwtl
cmc
dec
dec
add
xchg
push
clc
dec
mov
push
dec
bound
insl
nop
ja
addr16
mov
scas
mov
add
sbb
jne
sbb
mov
dec
lock
daa
xchg
fistpll
test
out
jmp
jbe
dec
cmp
add
and
enter
lods
and
adc
jb
push
movsb
pop
ficoml
and
enter
push
enter
lds
add
js
inc
imul
mov
mov
inc
adc
shll
push
imul
std
dec
in
cs
popa
aam
inc
pop
ja
repnz
jbe
fucomp
push
imul
int
or
add
sbb
or
out
pop
cmp
ss
pop
inc
mov
push
std
adc
or
pop
iret
sub
rclb
stos
and
rcr
fmuls
xor
dec
mov
push
sbbb
movsl
and
lahf
xchg
je
fimull
xchg
icebp
or
data16
fcoml
push
xor
jmp
lock
pop
aam
inc
cmp
sbb
jle
push
ljmp
adc
es
xchg
or
loopne
inc
jecxz
push
ljmp
aas
or
ds
inc
sbb
add
sub
jnp
lcall
into
push
js
cmp
es
push
addl
ss
mov
lods
sbb
xchg
dec
out
push
pop
jnp
stos
aam
dec
es
mov
mov
and
and
xchg
sub
mov
sar
cmovnp
jmp
cmp
idivb
cmpl
dec
adc
sub
cmpsb
outsb
int
inc
arpl
rolb
push
xor
mov
pushf
mov
test
jle
cwtl
push
xchg
imul
mov
pushf
pop
mov
jne
jmp
fiaddl
sbb
rcl
mov
mov
mov
mov
sbbb
pop
rcrl
outsb
data16
xchg
push
mov
test
aaa
rclb
push
divl
xchg
dec
lret
daa
orb
loope
jb
or
bound
lods
fdivrs
xchg
roll
xchg
jmp
jle
jbe
lock
hlt
push
mov
xchg
daa
xchg
outsb
jns
mov
fdivs
out
mov
mov
lret
es
sbb
and
mov
jmp
lds
hlt
xchg
in
xchg
lods
test
js
shll
pop
or
jb
push
nop
add
shrb
xchg
ret
jecxz
sub
adc
jp
dec
push
lds
cmc
cmpsl
xor
hlt
test
cwtl
and
mov
int3
pusha
call
and
and
out
insb
mov
scas
inc
negb
fiadds
adc
stos
jge
lea
and
int
loopnew
inc
xor
aad
mov
or
insl
fnstenv
mov
push
les
int
in
add
pop
sbb
jmp
cmp
jecxz
mov
pop
mov
popa
mov
and
mov
dec
shrl
je
push
lds
cli
jmp
loope
pop
idivl
xchg
dec
ret
sbb
outsb
xchg
pop
cs
mov
es
add
rcr
adc
mov
mov
inc
mov
sahf
adcb
in
icebp
scas
subb
dec
imulb
into
adc
cmp
lahf
mov
out
addb
pushf
sbb
mov
pop
adc
test
lock
mov
jnp
xchg
fs
sbb
add
ret
push
mov
les
jmp
mov
gs
aad
lahf
gs
jo
jns
in
jle
sbb
and
sbb
xor
imul
inc
dec
xlat
shrl
xor
fldt
lock
loope
jmp
sub
jge
or
mov
mov
ljmp
ret
sbb
or
cwtl
or
xchg
xchg
aaa
xchg
cmp
cmpsl
jne
rcrb
fisttps
sub
jmp
fildl
cwtl
jnp
stos
mull
cmp
inc
push
ljmp
xchg
push
int3
mov
or
mov
inc
aas
cmp
push
lret
mov
out
inc
sti
fs
mov
addr16
push
dec
addr16
imul
mov
jle
lret
xor
cmpl
dec
pusha
cmp
mov
jb
cwtl
cltd
ss
jo
in
push
out
xor
mov
mov
mov
push
pop
jns
sub
fnsave
or
fisubrl
cmp
es
cmovnp
sbb
xor
dec
std
mov
push
lahf
xchg
jo
hlt
flds
scas
packssdw
out
dec
mulb
mov
sub
and
fistpl
testb
mov
je
jns
ds
xchg
stos
add
mov
adc
pop
icebp
pop
repnz
mov
stc
sbb
dec
cmp
lret
push
pop
fs
mov
loopne
cs
adc
xchg
aad
mov
cmp
inc
inc
dec
inc
add
repz
xor
ja
scas
pop
xor
div
pop
lods
dec
pop
lret
jmp
xchg
dec
mov
jb
pop
mov
jecxz
cmc
fcomip
in
icebp
mov
sub
add
push
fcompl
dec
cmpsl
dec
sti
mov
test
xchg
mov
mov
outsl
push
insb
push
hlt
mov
xchg
mov
mov
incb
mov
jp
jge
loope
lds
hlt
push
repz
mov
push
lret
int3
xchg
cmp
stos
insb
pop
mov
mov
ud1
lods
aad
or
repz
ljmp
cmp
jae
dec
test
sbb
lock
div
stos
cmp
fs
jo
movsb
dec
loope
hlt
jns
jl
or
push
iret
lret
aas
test
mov
pop
jg
aad
mov
hlt
mov
mov
dec
out
pop
sbb
rol
dec
mov
subl
pushf
pop
inc
loopne
rcrb
sbb
bound
or
xor
push
sub
dec
sbb
movzbl
mov
gs
push
xchg
fdivrs
cwtl
mov
aam
int3
mov
push
adc
mov
ffreep
mov
xchg
in
jge
hlt
jae
add
jne
shrb
cwtl
lahf
add
jle
ret
je
push
in
int3
loope
mov
cmp
andl
pop
mov
sbb
pop
outsl
xor
mov
call
sub
xchg
in
lds
fistps
jge
into
in
mov
into
jmp
sbb
fdivrl
enter
fsubl
xchg
jo
xchg
mov
mov
aam
dec
imul
js
jmp
jg
mov
sbb
outsl
iret
adc
cltd
daa
popf
pop
rorl
jle
xlat
outsl
hlt
inc
popf
mov
insl
add
test
das
leave
stc
push
int3
fsubl
add
cmp
movsl
pop
push
ja
dec
and
sub
pop
jb
mov
xchg
js
cmp
push
mov
cmc
jb
pop
cmpsb
mov
jle
jecxz
aad
jle
insb
cli
mov
fs
add
pop
mov
jnp
push
mov
pop
lock
adc
xchg
lock
adc
mov
shlb
test
call
push
iret
lret
stc
imul
mov
incl
pop
and
test
mov
push
ficompl
jle
adc
jp
es
scas
push
adc
mov
mov
sti
hlt
mov
setle
mov
jle
test
ss
sbb
dec
aam
int
ret
push
leave
xchg
daa
pusha
push
or
or
loopne
ficompl
shll
cli
inc
mov
stos
pushl
mov
jo
pop
jge
dec
fstpl
sub
sarb
xor
dec
jge
pop
jge
pop
nop
sarb
popf
xor
bound
addr16
cmp
jl
pop
xchg
push
enter
js
mov
sbb
add
lods
sbbl
hlt
adc
repz
jecxz
and
dec
pushf
jnp
xor
push
push
jl
idivb
pop
je
cmp
jnp
imul
jp
cmpsl
lret
mov
pop
sar
aam
pop
mov
and
ret
adc
mov
lock
sub
or
add
ret
pop
loop
jle
outsl
aaa
movsl
rcrl
sbb
adc
in
insb
pop
int
and
cmp
into
jg
push
lret
xchg
inc
mov
in
insl
lods
xchg
mov
dec
mov
repnz
inc
jle
sub
or
sbb
out
xor
and
jns
jp
mov
aaa
sbb
sub
pop
sbb
or
jb
ja
sbb
imul
mov
inc
sbb
push
lds
adc
test
pop
jne
and
xchg
dec
xor
scas
out
xchg
add
xor
and
icebp
adc
test
lods
fcoml
jge
jle
jg
bound
aam
push
imul
testl
cmp
loope
lret
dec
mov
arpl
adc
daa
aaa
and
mov
imul
insl
and
gs
fs
icebp
fwait
mov
test
jle
mov
adc
sbb
insb
ja
insl
push
and
mov
dec
popa
sbb
lcall
lea
xchg
push
push
mov
fiadds
mov
or
add
or
cmp
scas
outsb
imul
mov
adc
xchg
call
xor
sbb
inc
push
inc
adc
cmp
push
mov
cmp
std
and
jp
cld
and
pop
pop
stos
fsubr
pop
mov
pop
sbb
es
cltd
addr16
jp
xchg
cmpsl
xor
int
mov
in
xchg
stc
das
aaa
inc
subl
mov
dec
test
std
daa
insl
jle
lds
cli
push
movsl
jno
pop
mov
fsubl
jno
xor
pop
shlb
or
inc
sarb
and
int
testb
js
cs
mov
adc
fs
sbb
inc
pop
dec
push
push
lret
xor
mov
xlat
outsl
or
cmp
jmp
daa
mov
push
mov
mov
push
fiadds
and
int
daa
mov
dec
out
cmp
mov
aas
mov
scas
mov
xchg
insl
pop
pop
call
pop
andb
mov
ljmp
stos
xchg
notl
pop
jnp
test
ror
pop
scas
sar
jbe
inc
fcompl
out
cmc
sarb
jl
popf
xor
dec
and
sub
mov
nop
scas
fs
fsubrl
push
jmp
fmull
or
jge
xor
cmp
out
cmpsb
daa
jg
mov
pop
nop
mov
dec
push
jae
in
mov
adc
das
jns
xor
cmc
loope
cwtl
or
mov
mov
das
les
ret
ljmp
sbb
sbb
mov
mov
jmp
in
or
and
cmp
sbb
dec
mov
repnz
scas
movsb
dec
fucomp
pop
das
in
cmp
mov
add
adc
mov
inc
fisttpll
or
jno
fists
cmp
test
iret
add
lods
push
cli
mov
repz
int
les
xor
jge
sbb
cs
mov
enter
stos
jnp
jl
sarb
jae
mov
ljmp
test
movsl
aam
mov
popa
stos
cmp
pop
sub
ret
test
cmp
and
call
add
mov
inc
inc
es
inc
sbb
jne
pop
sbb
cmp
xor
push
jge
test
push
sbb
jbe
test
mov
jo
sbb
je
outsb
aad
pop
cld
xlat
mov
incl
aam
dec
jne
into
sbb
mov
and
mov
jbe
mov
and
push
xor
imul
sbb
scas
js
stos
js
mov
out
repz
inc
push
mov
or
add
pop
lea
in
jmp
xchg
mov
test
leave
mov
mov
fsubs
inc
ret
bound
outsb
pop
addr16
std
test
xchg
in
fisttpll
pop
enter
xor
inc
mull
xchg
fcompl
scas
dec
add
aaa
cmp
sub
adc
xorb
leave
cmp
jp
xchg
data16
add
mov
imul
in
movsl
xchg
adc
xor
push
xchg
jno
outsb
push
inc
sub
dec
out
cmpsb
xor
je
jg
hlt
xor
sub
data16
jmp
out
leave
fists
mov
mov
or
mov
lret
mov
lods
sbb
sbb
pop
adc
ljmp
cmp
lcall
or
sarb
push
dec
sar
jle
and
mov
jo
or
mov
push
into
sbb
mov
ret
xor
mov
xor
pop
push
enter
and
sub
movsl
test
push
notb
sub
ficoms
sbb
pop
jns
adc
pop
inc
repz
leave
mov
pushf
adc
add
dec
clc
push
cmp
push
adc
lahf
mov
insl
push
icebp
in
jne
xor
jns
imul
mov
mov
scas
dec
mov
dec
jo
lcall
lods
jmp
insb
dec
and
push
into
jg
xor
aad
int
jae
pop
xchg
pop
gs
jno
or
arpl
jae
and
mov
push
push
jmp
xor
imul
outsl
loop
sti
mov
mov
or
mov
dec
loopne
push
adc
cmp
dec
in
lock
pop
movsl
dec
mov
lock
add
xor
push
mov
popf
pop
fstpt
and
aad
imul
cld
cmp
icebp
ss
mov
xor
jbe
dec
mov
pop
nop
jecxz
sub
les
dec
xchg
aad
int
int
mov
loop
dec
scas
js
lret
mov
stos
out
xchg
sub
je
aam
pop
lods
cs
xchg
scas
pop
roll
pop
inc
outsb
pop
imul
push
lcall
and
sub
inc
mov
xchg
into
cmp
jg
push
ja
cmp
and
lea
and
arpl
mov
ud2
mov
negl
and
lret
loop
xlat
add
fistpl
jmp
jmp
or
mov
xchg
push
sbb
sbb
xlat
insl
jmp
cli
loope
insb
adc
jb
stos
scas
fsubs
cmp
in
ss
push
repz
insb
pop
mov
fdivs
pop
test
sahf
loop
adc
leave
pop
add
jge
or
mov
inc
mov
pusha
sub
jge
mov
jno
je
sbb
inc
movsb
pop
add
jne
pop
mov
in
stc
fisubrs
pop
lahf
notb
in
jp
filds
jno
icebp
lea
insb
jo
sub
loop
sbb
sbbl
cmpsl
and
xchg
js
pushf
add
add
or
jno
jbe
dec
iret
and
aaa
or
cmpsb
sbb
cmp
scas
cld
mov
out
pop
xchg
pop
mov
je
cmpsb
sbb
dec
outsb
adc
push
jae
xchg
lds
mov
cmp
pop
es
jge
mov
xchg
daa
push
cmp
sub
sbb
xchg
mov
xchg
decl
hlt
es
loope
dec
mov
push
ljmp
les
lock
mov
dec
mov
fadd
enter
fiaddl
or
pop
inc
scas
lods
fmuls
jp
gs
repnz
arpl
gs
cmp
and
imul
lds
mov
mov
cmp
inc
icebp
shl
lret
adcb
int
pushf
lcall
xor
scas
fdivr
pop
xor
iret
jle
lds
je
ja
xchg
pop
ss
outsl
inc
adc
add
mov
lods
adc
mov
sub
xor
xchg
fwait
and
movsb
negl
pushf
lcall
xchg
mov
dec
xor
fdivs
mov
in
imul
cmpsl
in
cld
incl
stos
add
gs
mov
mov
mov
imul
lds
push
sbb
sbbl
jae
and
fimull
or
xchg
ret
fcmovne
lcall
outsl
int3
push
or
pop
jge
push
and
ljmp
jmp
decl
enter
sub
dec
inc
lret
adc
pop
rcr
jne
jnp
cmp
repnz
outsl
lret
leave
sbb
rcll
sbb
out
sbb
pop
push
lcall
aad
or
add
mov
in
add
xor
or
movsb
and
inc
push
nop
add
sub
sub
in
jb
popa
and
test
xor
xchg
out
mov
out
xchg
adc
outsb
sbbb
push
or
insb
cwtl
fnop
stos
in
xor
faddp
das
pop
lea
ljmp
mov
mov
cmpsb
mov
arpl
cmp
cmp
cli
int3
mov
movsl
pop
mov
mov
std
pop
xor
sbb
xchg
inc
push
cltd
pop
loopne
aam
loope
daa
and
loopne
pop
jge
outsl
nop
add
pop
ja
pop
idivb
adc
in
and
fwait
stos
mov
and
cmp
insl
adc
test
in
std
daa
jbe
std
inc
repnz
inc
and
mov
or
fimuls
es
dec
nop
jle
pop
in
jae
ret
addl
inc
and
pop
ret
xor
mov
sahf
pop
sub
and
pop
jl
xchg
bound
adc
cli
mov
mov
dec
sub
roll
mov
jne
jge
xchg
mov
jge
push
enter
insb
mov
mov
xchg
adc
sbb
lcall
mov
xorl
imul
or
iret
subl
imul
xor
xchg
xor
frstor
cmp
jmp
adc
aam
jl
fwait
sbb
sub
popa
mov
movsl
popf
push
adc
xor
lock
cld
xchg
inc
fistl
out
jp
in
cli
scas
dec
xchg
js
cmp
dec
push
insl
pop
mov
popa
jl
cmp
pop
fsubrp
and
nop
outsl
iret
pop
pop
call
or
pop
cwtl
out
sub
repz
pop
cmc
cltd
jo
push
xor
addb
inc
stos
sar
xchg
sbb
addr16
in
ficomps
stos
je
jns
orb
inc
jmp
mov
call
sbb
mov
inc
sub
jecxz
jg
cltd
cmpsb
cmp
std
and
aam
lds
cmp
js
pop
cmpl
push
pusha
add
pushf
mov
inc
sbb
jbe
xchg
adc
and
inc
rcl
xor
out
addb
mov
xor
pop
dec
ss
stos
pop
pop
int3
imul
xchg
iret
xor
lods
rolb
lods
movsb
xchg
les
adcl
cmp
lsl
dec
adc
sub
shlb
pop
int3
in
xchg
adc
rcrb
mov
mul
jb
fbld
mov
jae
mov
inc
mov
leave
repnz
bound
mov
stos
lea
cmp
mov
add
sub
into
hlt
dec
sub
mov
test
pminsw
sub
int
stos
xorb
out
imul
jae
sahf
mov
idivl
enter
inc
data16
dec
stos
ret
daa
repz
sbb
push
lds
xchg
xchg
inc
cmp
rcrl
xchg
push
inc
shlb
xchg
mov
mov
dec
daa
sub
js
mov
cltd
adc
pop
add
pop
ret
mov
ds
pmulhw
enter
sbb
sbb
stc
icebp
pop
and
inc
adc
cmp
mov
jg
cli
and
in
inc
xchg
aam
xchg
add
ss
mov
leave
add
test
push
cmp
xchg
mov
aad
or
and
dec
and
cwtl
out
jbe,pt
or
add
enter
xchg
adc
int3
pop
fisubl
cmpsb
inc
in
jne
orl
pop
cmp
xor
or
push
cmc
dec
rcl
fisubs
outsb
jecxz
hlt
mov
out
push
jg
mov
adcb
loop
sub
insl
pusha
and
cmp
call
push
scas
shlb
pop
loop
sarl
hlt
movsl
into
js
insb
adcl
je
cld
xlat
push
and
mov
add
add
add
out
fdivr
ja
cmc
pop
push
movb
jae
lcall
xchg
addr16
mov
repnz
das
or
dec
mov
shll
pushw
cltd
and
mov
xchg
mov
das
pop
stc
push
inc
mov
cmpsl
enter
jl
enter
arpl
hlt
inc
mov
fstps
pop
rcl
push
out
lea
arpl
push
inc
inc
int3
sbbb
in
test
jecxz
insb
xchg
shll
adc
jecxz
cmp
xchg
cs
push
notl
ret
aaa
mov
xlat
int3
mov
sub
mov
pop
into
arpl
loope
or
decb
scas
movsb
xchg
fs
jg
cwtl
insb
in
sbb
lds
push
ds
pushf
add
into
enter
fs
out
mov
inc
xor
hlt
movsb
sub
adc
rorb
cwtl
icebp
inc
popf
adc
stos
push
out
test
and
pop
sbbl
jmp
xchg
cmp
cmp
lahf
inc
std
aad
in
jb
cltd
xchg
mov
pop
mov
jmp
addl
push
je
test
aam
jo
insb
cmp
stos
mov
ret
add
lds
inc
pop
fildll
and
iret
loope
push
cmp
lea
pop
hlt
sub
fwait
inc
fstp
movsb
xor
lods
mov
jae
inc
ficompl
mov
dec
cmp
push
pusha
ffree
lret
or
mov
test
daa
rcr
stos
push
push
mov
movl
push
mov
rcrl
mov
push
push
adc
mov
push
xchg
negl
inc
adc
cmpsb
mov
dec
inc
pop
add
outsb
cmp
lcall
lds
enter
xor
pop
adc
xlat
xchg
pop
mov
adc
fbstp
jno
jl
ficompl
pusha
cmpsb
add
mov
scas
pop
mov
ret
cmp
xor
stc
out
cltd
and
call
sub
jle
repz
jp
addr16
test
xor
xor
mov
dec
ret
inc
sub
inc
sbb
es
adc
xchg
fisubrs
push
cwtl
movsl
aad
icebp
xchg
mov
insl
daa
mov
mov
or
shr
sub
out
mov
stos
mov
pop
push
xor
cli
mov
cwtl
mov
and
subl
pop
sarl
movsl
enter
jecxz
add
ss
daa
jne
into
rep
sub
or
mov
lcall
mov
out
inc
mov
xor
cs
cli
push
in
fucomi
xchg
shll
test
jns
cltd
dec
adc
and
popa
lret
inc
test
jle
push
pop
lock
mov
sarl
xor
cmp
mov
outsl
das
cmp
fsubl
mov
jns
loop
sub
lods
mov
insl
popf
ljmp
js
imul
insb
push
push
inc
add
inc
mov
fimuls
mov
in
push
into
lahf
dec
push
in
cmpsl
insl
sub
pusha
ja
pusha
and
push
clc
cmp
dec
int3
pop
std
fmull
ret
add
mov
outsl
shl
fidivs
sbb
aaa
push
insb
fidivs
fcomps
call
xchg
or
mov
sar
xchg
sbb
mov
jnp
into
adc
gs
mov
sub
loop
add
or
int3
into
cmp
cmp
ds
or
and
roll
out
cmp
stos
xchg
loopne
iret
adcb
dec
inc
sbb
jno
pop
mov
or
adc
jl
mull
shll
xchg
adc
add
in
mov
dec
stc
jge
loope
push
adc
xchg
xchg
sbb
inc
out
out
nop
in
addr16
ret
arpl
xchg
scas
jle
mov
jp
mov
loopne
cwtl
sbb
jge
sbb
je
aad
imul
sahf
adc
sbb
pop
lret
dec
add
loop
in
into
sti
inc
dec
das
std
sarb
inc
pushl
mov
adc
push
push
xchg
pop
inc
jg
inc
lds
mov
out
call
fistps
out
xchg
ret
scas
cli
jmp
data16
xchg
xlat
push
cltd
and
sti
inc
push
push
dec
out
movsb
pop
add
or
xchg
lods
ljmp
imul
push
add
inc
ja
int3
mov
popf
or
testb
dec
lea
orb
shrl
out
ljmp
cmp
popa
inc
mov
and
adc
xchg
sub
outsl
or
es
cmc
lock
and
nop
enter
dec
jb
inc
fsts
mov
js
in
je
mov
dec
sub
dec
mov
xor
movsl
sarb
mov
mov
test
add
pop
xchg
scas
adc
cmpsl
push
pop
jno
cmc
xor
dec
in
mov
pusha
mov
aam
adc
mov
and
push
clc
cmpsl
fistps
fwait
pushl
imul
orb
sub
fiaddl
pop
sub
outsb
jo
push
out
mov
mov
mov
xor
xchg
pop
push
adc
push
je
pushf
aas
sahf
mov
cs
mov
dec
adc
push
clc
movsl
ja
and
sbb
xchg
push
insl
mov
jg
pop
and
mov
or
call
mov
mov
sub
insb
imul
mov
and
das
cmp
call
xor
in
loop
je
and
outsb
js
andb
mov
loopne
or
xchg
pop
hlt
fimuls
mov
and
loop
inc
adc
je
xchg
jecxz
inc
cmp
xchg
loopne,pn
inc
mov
jo
shrb
cmp
add
pop
cwtl
push
icebp
movsb
lcall
push
movsl
cmp
cmp
daa
pop
or
std
les
lret
mov
adc
pop
fidivrs
scas
push
mov
insl
lahf
ret
mov
cmpsb
sbb
cmpb
inc
xchg
mov
sub
inc
sub
lahf
jb
shr
fimull
push
mov
or
or
xchg
nop
mov
and
fnstcw
push
dec
shl
test
ret
les
pop
popa
dec
fildl
cmp
in
pushf
fdivs
mov
mov
mov
mov
addl
ljmp
icebp
and
dec
inc
out
aaa
inc
or
mov
mov
sahf
arpl
dec
push
inc
cld
mov
mov
lret
lahf
ret
inc
sub
jae
adc
push
or
lods
sbb
push
arpl
inc
jne
jmp
nop
and
or
sbb
xchg
call
jbe
xor
jo
mov
sub
popf
push
dec
adc
jne
jp
enter
cmp
mov
into
rorb
jg
addb
sti
outsb
pop
cwtl
les
fs
mov
inc
lods
inc
call
sbb
mov
sarb
pop
int3
mov
icebp
repz
fbstp
mov
repz
dec
pop
fsub
jp
test
bound
dec
fndisi(8087
xor
and
adc
sbb
sub
sbb
push
hlt
bound
adc
dec
dec
std
sbb
ds
repnz
pop
outsb
mov
jp
dec
add
xor
push
inc
mov
pop
repnz
test
int
outsl
insb
dec
sub
xor
fst
repnz
xor
cmpsb
loop
in
xor
mov
popf
push
push
mov
mov
outsl
mov
pop
rcrb
mov
jo
and
mov
test
xor
jecxz
lea
add
sbb
adc
jl
ficomps
mov
cmpsl
cwtl
jno
push
lods
mov
insl
and
outsb
mov
add
jns
adc
andb
lds
sub
aam
mov
cld
push
out
orb
les
jle
push
or
nop
test
out
and
in
sbbb
test
jge
addr16
jge
add
add
inc
pop
push
lods
icebp
push
pop
fdivl
jle
pop
popa
std
mov
push
cmp
add
jne
out
subl
jns
data16
push
ret
fidivs
mov
push
mov
or
imull
adc
xor
or
adc
lret
cmp
mov
pop
or
jmp
xor
dec
ljmp
and
filds
adc
bound
sub
inc
and
rcrb
lods
int3
pop
xchg
sbb
mov
mov
mov
lcall
nop
or
in
mov
std
mov
int
push
add
sbb
dec
out
and
mov
mov
nop
add
mull
ret
inc
jmp
jno
ret
hlt
lods
xchg
daa
push
pop
cmp
cltd
mov
lret
popa
cmpb
cmp
mov
inc
cwtl
aas
idiv
mov
in
push
js
lock
jmp
cld
imul
pop
mov
roll
cmp
fcmovb
outsl
test
cwtl
mov
and
clc
aas
sahf
aaa
lret
sti
or
xor
loopne
inc
mov
pop
or
test
mov
add
js
hlt
mov
mov
inc
std
or
sbb
xchg
or
jecxz
ret
es
lock
jbe
sbb
push
mov
out
dec
nop
mov
popf
call
mov
and
push
pusha
pop
imul
jno
add
roll
inc
cwtl
testl
in
jecxz
lock
add
xchg
dec
adc
push
scas
mov
sub
push
pop
iret
imul
mov
push
push
mov
lea
mov
mov
and
inc
scas
enter
cmp
adc
jb
xchg
jns
cltd
dec
and
or
fisubrl
jl
pop
or
lods
push
fmull
test
scas
fs
sbb
in
jl
xchg
call
iret
repz
mov
cmpsb
in
pop
sbb
mov
lock
lcall
pop
leave
add
inc
fldl
test
mov
pop
bound
or
shrb
add
add
cmc
ret
adc
fbstp
add
in
add
int3
fdivrs
inc
data16
adc
repnz
ds
xchg
popa
imul
out
mov
xchg
imulb
rolb
rolb
cli
cmp
jg
iret
xor
push
jnp
insl
xchg
rcrl
inc
or
mov
sbb
xor
scas
push
push
xchg
div
adc
mov
mov
lea
sarl
jo
loope
lock
jmp
imul
add
xchg
pop
cmpsb
and
adc
fimull
hlt
dec
xchg
push
mov
mov
lods
aad
arpl
sub
lods
rcl
fdivs
adc
pop
mov
dec
mov
dec
dec
daa
insb
sbb
leave
cmpsl
pop
mov
and
xlat
ja
mov
push
xchg
xchg
dec
call
shll
lret
stc
aam
hlt
xor
inc
xor
mov
xchg
jns
jge
imul
packuswb
add
lret
inc
inc
xor
mov
adc
cmpsb
stc
xor
pop
mov
jl
outsl
icebp
fisttpl
pop
js
mov
push
pop
ljmp
insl
test
nop
aas
popf
aad
mov
pop
imul
cmpsl
sbb
dec
popl
ror
push
aad
add
flds
xor
push
orb
xchg
jo
ss
inc
push
out
pop
std
adc
xor
xor
in
rcrl
aam
cmpsl
into
inc
ds
push
dec
lock
shll
jg
sarl
cmpsl
stos
cltd
mov
ljmp
out
push
sub
fsubp
cmp
es
add
dec
or
test
sti
xor
lret
pop
adc
call
pop
or
mov
add
les
scas
outsb
cltd
sub
cltd
push
dec
add
adc
sahf
pushf
in
mov
mov
daa
adc
xor
mov
fistps
lock
cld
mov
test
mov
and
fwait
jecxz
cmpsl
jb
or
pop
dec
xor
subl
rclb
and
adc
je
adc
push
and
insb
pop
fists
inc
push
push
push
subb
std
cs
stos
repnz
addr16
push
and
cmp
push
sahf
jb
jl
dec
sub
popa
out
sub
and
mov
pop
push
fs
push
sbb
fstp
repz
loopne
push
inc
iret
xchg
mov
fiadds
pop
sbb
mov
sub
fimull
jno
mov
mov
sbb
sbb
mov
out
je
adcl
les
call
pusha
pop
inc
mov
pop
in
out
adc
xor
mov
jmp
sbb
jae
fwait
dec
mov
jae
lds
lret
stos
ja
mov
cmp
mov
or
lea
xchg
jmp
xchg
xchg
roll
mov
pop
cmc
dec
lods
mov
call
sbb
dec
cld
cltd
mov
mov
jecxz
or
sti
jnp
add
xchg
and
mov
sbb
out
out
lods
pop
test
loopne
or
ret
in
lcall
shrl
mov
iret
cmc
or
adc
test
sbb
or
ret
icebp
imul
stos
repz
addr16
and
push
into
jns
push
xchg
movsl
jmp
movsl
pop
mov
ds
lds
in
push
nop
sahf
mov
xchg
adc
js
dec
pop
mov
or
push
mov
mov
mov
push
mov
inc
mov
dec
pop
adc
fdivrl
xchg
out
and
push
testl
xchg
outsl
push
mov
in
push
test
sub
cmp
jmp
mov
sub
jg
xchg
inc
jns
inc
stc
ja
xor
xor
inc
jecxz
dec
and
xchg
lret
jp
shlb
ret
inc
sub
cli
jns
add
or
shll
movl
push
mov
and
sbb
sarl
sub
loop
push
push
jb
inc
and
mov
xor
ror
xchg
dec
xchg
notl
xchg
and
in
jne
push
mov
test
gs
push
stc
pop
adc
call
cli
insb
mov
inc
das
shlb
pop
xchg
std
jmp
cmp
cmpsb
xor
icebp
mov
jo
sub
cmc
jecxz
movsb
outsb
setle
mov
add
and
sbb
or
mulb
fdivrl
adc
and
xchg
push
ds
dec
loope
adc
adc
fdivs
inc
mov
push
bound
faddl
jo
cmp
fst
fisubl
pop
aad
loope
push
and
in
aam
loopne
test
stos
insb
std
push
push
sahf
sbb
loope
pop
movsb
nop
jge
cmc
pop
add
ss
cwtl
outsl
in
insb
in
jecxz
jp
adc
cmp
xor
xor
test
pop
fnstenv
imul
xchg
pop
cmpsb
loop
int3
out
pusha
in
ret
sbb
ror
cmp
scas
cmc
cmp
or
ret
push
inc
out
xor
icebp
test
dec
dec
xchg
mov
in
push
sub
or
test
scas
fldl
pop
lret
dec
jl
into
adc
jo
inc
enter
rorb
xchg
fwait
popf
out
lock
dec
pop
mov
rclb
int
iret
divb
gs
testb
or
pushf
aas
lret
imul
xchg
mov
cs
ljmp
test
mov
dec
add
pop
dec
inc
mov
push
aas
jne
add
test
test
mov
int3
adc
adc
cs
jecxz
popa
inc
sbb
test
mov
mov
dec
dec
jnp
jbe
lds
jg
mov
adc
jae
jnp
jb
stos
shlb
xchg
adc
mov
lcall
xchg
sti
in
pushf
dec
push
adc
stc
mov
stos
xchg
or
or
and
mov
fistpll
mov
mov
pushf
mov
mov
nop
shll
movsb
fdivrs
in
out
cmp
movsl
cmpsl
test
xor
push
outsb
sub
pop
xor
sub
dec
cld
sti
sbb
lock
xor
pop
test
and
jecxz
test
push
xchg
fimull
lahf
stc
add
sbbl
in
stc
pop
mov
fisubrs
inc
sub
adc
xor
mov
adc
gs
sahf
enter
dec
ja
sbbb
mov
fbstp
mov
lods
insl
testb
out
mov
pop
stc
insb
dec
pop
mov
imul
pop
popf
add
movsb
xor
lock
das
cld
daa
fwait
adc
sbbb
imul
mov
cmpsb
sbb
sub
and
es
addr16
sub
mov
enter
orb
les
adcl
jg
fs
adc
lret
aas
pop
mov
push
pop
dec
and
xor
test
pop
arpl
cmp
lds
cmp
dec
inc
push
mov
push
mov
push
adc
sub
jge
jbe
inc
xor
cmpb
and
repz
arpl
inc
popf
mov
orb
mov
cmp
mov
outsb
lods
std
lret
stc
cmp
fs
and
or
and
xchg
mov
adc
shl
and
push
pop
push
fsubrl
inc
leave
lret
jg
mov
out
test
cltd
ss
xchg
and
mul
and
sbb
fcomps
out
test
scas
cwtl
cmpsb
push
test
addr16
adc
jae
mov
xor
mov
imul
or
mov
push
ds
fstl
pop
mov
cmpsl
cli
lret
add
adc
movsb
pop
dec
cmc
dec
pusha
das
movl
push
imul
jbe
repnz
in
add
xchg
ret
and
out
push
xor
repz
in
push
push
std
xchg
cli
push
adc
xorl
dec
decl
je
or
jae
cld
and
outsl
cmp
out
ja
pop
rcrl
fisttpll
xchg
mov
das
sahf
dec
pop
dec
fmull
xor
fmuls
adc
mov
int3
test
les
sahf
pop
inc
xor
enter
enter
mov
push
xor
add
mov
test
or
adc
pushf
adc
nop
inc
int
add
daa
rcrl
sti
ds
es
incb
fiadds
mov
pusha
pop
push
sahf
cld
movsb
sbb
fisubs
cmpsb
add
add
push
insb
xor
cmp
test
mov
ljmp
pusha
inc
stc
ds
mov
inc
xchg
shr
ror
jns
leave
aaa
repz
jno
cmp
insb
cmp
lcall
fidivl
sti
dec
push
std
push
out
icebp
enter
push
les
mov
mov
aas
sub
jl
inc
mov
enter
mov
ds
aaa
inc
fnstenv
insb
add
mov
or
cmp
or
mov
fildl
mov
mov
loop
mov
add
ljmp
add
in
lods
loopne
jp
jecxz
mov
fisubl
adc
arpl
mov
imul
mov
jp
push
mull
xchg
push
ret
insb
sahf
adc
pop
ds
cs
xchg
sbb
jo
mov
jo
adc
xor
mov
out
mov
divl
sbb
lods
pop
cmp
cwtl
mov
adc
sub
push
xchg
adc
cmp
adc
fstps
mov
and
push
mov
dec
icebp
sti
cld
popa
ret
cmp
lahf
popa
sbb
and
inc
scas
std
push
mov
push
cmc
repnz
xchg
inc
xchg
je
pop
lcall
adc
fcmovnbe
ljmp
std
pop
mov
popa
sub
cmpsb
daa
mov
inc
cmpsl
jb
mov
orl
adc
pop
jns
test
loopne
pop
mov
outsb
xchg
dec
fidivs
das
jbe
jne
sbb
ja
inc
jo
lock
mov
imul
aad
cmp
shlb
mov
sub
out
int3
scas
insb
dec
lods
das
jb
pop
add
mov
and
inc
mov
outsl
add
sbb
or
push
add
lret
iret
jge
xchg
fs
std
jbe
subl
xor
outsl
or
xchg
push
pop
enter
xor
sbb
jns
lds
lcall
cs
cltd
pop
jp
pop
int
pop
test
fisttps
mov
push
jb
mov
pop
aas
push
inc
sub
test
jmp
dec
sbb
fisubrs
rorb
adc
push
lcall
jo
call
or
jb
ds
negb
enter
cld
inc
insb
or
xchg
xor
cmpsb
mov
add
sbb
xor
outsl
or
daa
sbb
xchg
call
jmp
je
fcomps
mov
ss
cld
negb
mov
mov
sbb
mov
and
roll
je
inc
jmp
dec
gs
sub
add
cltd
outsl
in
leave
mov
out
lods
outsl
add
ljmp
jno
mov
cwtl
scas
out
lock
cs
aam
xchg
gs
xchg
adc
xor
adc
xchg
loopne
xchg
mov
std
inc
adc
cmp
and
mov
mov
push
loopne
mov
inc
fwait
mov
mov
mov
dec
push
add
mov
cld
jne
dec
std
push
stos
dec
call
lret
adc
push
test
add
vcvttsd2si
in
fdivs
mov
dec
lret
insb
fsubl
pop
push
rcrl
mov
sbb
fiadds
fsincos
loopne
xchg
adc
shrl
jbe
cs
std
jne
lods
mov
out
push
shl
jno
bound
sarb
adc
fisttpl
cltd
push
jno
fdivp
dec
dec
rcrl
std
and
cmp
xlat
fldl
sbb
mov
cld
push
adc
mov
push
sahf
lds
shrb
in
outsl
inc
ret
cmpsb
sar
sbb
aas
xchg
inc
pushf
out
sbb
mov
insl
adc
daa
and
pop
rcll
jae
mov
lods
test
fnstcw
pop
xorl
xchg
xchg
add
ljmp
ds
xor
neg
rorl
jecxz
cmp
pop
pop
inc
or
xor
fmull
repz
lahf
mov
icebp
inc
cmp
lods
cmp
add
dec
sti
gs
or
and
aaa
xchg
orb
and
inc
pusha
fcmovnb
je
addb
pop
xor
add
or
pop
mov
lea
push
out
and
out
sbb
mulb
inc
inc
lods
jmp
int
cmc
push
mov
andb
adcb
sub
subb
pop
xor
and
out
out
testb
and
push
mov
mov
dec
mov
push
daa
scas
or
push
imul
mov
xchg
mov
xchg
sub
ss
test
xchg
ror
jb
mov
scas
cltd
fucomp
cmp
call
lahf
dec
or
lcall
out
cmp
lret
sbb
push
add
adc
dec
aam
ds
daa
in
insl
ror
mov
jnp
call
in
mov
call
mov
push
pusha
jbe
add
dec
stos
je
and
lret
ret
in
adc
pop
ss
call
jnp
hlt
mov
inc
sub
into
cs
dec
xor
inc
push
and
jl
pop
pop
das
jp
xchg
ja
lcall
xor
aaa
and
inc
ret
out
push
inc
push
mov
adcb
xchg
ja
inc
lcall
popa
jbe
mov
dec
gs
mov
cltd
leave
add
xor
fs
fisubl
push
sub
sub
imul
mov
flds
xbegin
xchg
test
out
int
gs
test
fcompl
mov
outsb
mov
fnstsw
push
mov
test
push
add
cmp
pop
rcll
push
stos
push
mov
outsb
inc
loopne
aaa
sahf
cmp
popa
jbe
cwtl
loopne
rorb
std
cltd
sbb
jae
lds
adc
add
ljmp
xor
add
or
out
nop
and
mov
mov
scas
fcmovnbe
hlt
mov
dec
movsl
adc
sbb
cmp
jp
mov
dec
daa
mov
imul
push
lcall
aad
push
add
jg
add
push
jnp
iret
ds
outsb
inc
mov
das
dec
stos
sub
inc
adc
cmpsb
push
fs
mulb
mov
cli
cmc
and
movsl
mov
insl
mov
pushf
or
movsb
mov
xchg
xlat
push
sub
jne
jecxz
xor
cmp
mulb
or
add
stc
arpl
jo
sub
jne
xchg
xchg
sub
fwait
in
rcll
ja
stos
cmpsl
push
add
cltd
cs
gs
sbb
mov
mov
jle
cmp
test
jno
adc
bound
push
xor
and
fcmove
test
pop
or
stos
jns
jg
repnz
xor
inc
inc
or
jbe
xchg
pop
jecxz
stos
mov
pop
and
mov
lret
mov
and
xor
repz
pop
jns
xchg
lea
xor
dec
lds
je
adc
push
inc
test
pmaxub
das
push
mov
mov
mov
sub
sbb
push
imul
xchg
mov
xor
stc
jb
rorb
push
ss
gs
clc
cmp
mov
dec
bound
cmpsl
imul
xlat
inc
sub
mov
push
hlt
bound
pop
jo
rclb
cld
inc
imul
add
stos
and
daa
mov
rep
push
movsl
gs
repz
int
sarb
push
pop
xchg
add
mov
cmp
dec
cmp
xchg
mov
dec
ficoms
fidivrs
out
inc
nop
fsts
ficomps
push
cmp
lods
stos
es
test
cmpsl
shlb
push
push
clc
or
mov
call
rorl
mov
sub
lret
xchg
xlat
shrb
cld
xchg
xchg
ss
mov
cmpsl
jb
pushf
inc
lods
clc
cmpl
push
imul
ljmp
int
data16
pushf
push
add
fsts
int3
pop
sbb
lret
repnz
and
pop
scas
int
push
ljmp
lods
inc
rorl
js
cs
or
add
mov
sub
lcall
and
mov
stos
int3
cmpsl
xchg
inc
push
and
lgs
push
es
sti
xor
dec
jg
and
or
dec
daa
mov
or
xlat
mov
mov
jle
test
add
aam
jecxz
and
fstpt
mov
icebp
repz
popa
in
fwait
jne
scas
ret
mov
sti
sarl
lock
mov
scas
mov
rorl
pop
cmpsb
push
cmp
stos
cmpsl
cli
cwtl
shll
xlat
jl
insl
sub
mov
sub
dec
lahf
stmxcsr
lahf
xor
inc
mov
repnz
fsubl
mov
push
jns
testl
jl
push
adc
add
push
jl
aaa
cmp
insb
std
xchg
pop
dec
subb
cltd
cmpsb
mov
mov
or
in
stos
or
test
scas
iret
inc
addl
inc
shrl
cmpsl
jae
aas
mov
mov
pop
add
jl
jo
pop
inc
gs
push
imul
sbb
or
mov
sub
aad
mov
mov
jnp
jecxz
push
out
xchg
lret
pusha
aaa
stos
hlt
fwait
insb
xor
lock
fst
and
mov
sahf
cltd
enter
and
fcmovne
jp
add
jp
daa
int3
ficomps
fs
ljmp
mov
sbb
mov
mov
icebp
pop
loop
mov
in
xchg
push
jmp
xchg
cmp
push
ljmp
idivb
ljmp
adc
pusha
popa
adc
mov
notb
fsubrs
dec
sbb
xor
test
das
in
cwtl
sbb
fs
in
imul
mov
lods
shrl
push
mov
lea
into
add
mov
daa
add
lock
insl
mov
xchg
xchg
mov
xor
mov
pop
pop
in
inc
insl
jg
in
and
jecxz
mov
mov
je
nop
mov
or
movsl
mov
testb
in
add
mov
jnp
addr16
push
jbe
mov
cmp
jmp
push
push
lret
popf
xor
fnstsw
pop
ret
mov
cmp
cmp
imul
pop
or
loop
cli
sbb
jecxz
cmc
xchg
mov
sbb
and
fwait
lock
sarl
popa
shlb
rorl
xchg
add
adc
iret
icebp
jno
push
pop
fwait
mov
adc
mov
sbb
repnz
enter
cmpsl
adc
sub
test
clc
aas
idivb
mov
outsl
adc
rcll
cmp
jmp
movsl
jge
cmp
insb
jg
jge
xchg
das
and
sbb
scas
pop
sbb
sub
and
fistl
jl
jge
stos
movsl
xlat
inc
rclb
ljmp
stos
dec
mov
cmc
sbb
sbb
pop
int
cmp
jae
jecxz
mov
jns
ds
adc
rorb
mov
mov
das
push
mov
out
scas
fdivrl
subl
mul
xor
cmc
repz
cwtl
push
sub
or
insb
imul
cmp
xchg
push
or
cld
loope
outsl
and
jns
fnstsw
pop
xchg
push
push
xor
lds
mov
lods
xor
jb
int3
popa
fisubl
fisubl
push
lods
stc
outsb
cmp
cmp
arpl
sbb
jg
outsb
sub
call
cmp
jb,pt
mov
pop
mov
xchg
bound
imul
rcrb
xchg
push
lret
addr16
repz
enter
cmpsl
fwait
sub
mov
popa
rorl
call
cmp
mov
and
sbb
aaa
idivl
hlt
pop
aam
adc
cld
arpl
pop
pop
movsb
idivb
addr16
or
leave
icebp
movsb
inc
sbb
jnp
and
fmul
stos
sub
clc
lret
fistps
sub
mov
mov
push
js
inc
push
push
inc
insw
mov
je
scas
repnz
jnp
call
push
in
in
jne
or
in
mov
fsubl
or
sbb
pop
fst
clc
push
popf
inc
outsl
jge
xchg
repz
cli
fimuls
jg
mov
jae
jb
test
or
loopne
sbb
mov
inc
dec
int3
push
mov
iret
fmull
testb
stc
push
ret
daa
mov
mov
cmc
cmpsb
or
xchg
or
mov
enter
and
lods
mov
movsb
test
fwait
jge
call
cld
xorl
sarl
dec
sub
pop
mov
fidivs
add
xchg
push
or
subb
cli
sbb
insl
call
testl
mov
mov
adc
dec
loopne
ss
data16
dec
cmc
aam
pop
fldt
jne
and
mov
movsb
outsb
cli
stos
outsb
jbe
mov
push
fimull
dec
xchg
pop
mov
cmpsl
add
cmc
and
aad
mov
mov
ss
xor
xor
lods
dec
inc
xchg
mov
xor
add
fwait
dec
sub
pusha
mov
imul
dec
push
jo
jle
cmp
push
movsb
xchg
out
test
test
out
jmp
fcmovnbe
mov
push
jp
das
scas
rcll
add
aas
push
inc
mov
sahf
or
xchg
jo
jae
and
pop
push
mov
rcrl
mov
fcmovbe
xchg
sbb
nop
fidivrs
mov
xor
dec
into
addr16
xor
mov
mov
push
cwtl
dec
movsb
fdivrl
inc
jnp
mov
cmp
cmp
idivl
dec
popa
or
icebp
xchg
lods
pop
daa
lds
push
jg
fstl
mov
jecxz
gs
gs
inc
std
dec
add
mov
std
mov
xor
sbb
sbb
pop
mov
outsb
xchg
sbb
mov
push
enter
xchg
aad
push
jo
jg
js
movsb
sub
jg
jmp
mov
out
push
mov
or
jne
cmp
lea
ja
es
mov
jnp
mov
mov
jge
inc
cmc
mov
setno
clc
aaa
out
fwait
cmp
outsl
enter
packssdw
and
push
push
cs
xor
cwtl
dec
sbbl
outsb
gs
jnp
stos
enter
popa
aam
lds
jle
jmp
int
lock
pop
inc
testl
stc
sub
arpl
imul
lret
cs
sbb
pop
fldl
and
or
mov
sbb
jge
fidivs
mov
test
xchg
sub
sub
jle
imul
xchg
out
sub
ficoms
cmpsl
lret
fdivs
inc
inc
popf
loop
pop
lcall
ljmp
jg
push
dec
fistps
insb
repnz
repnz
dec
jnp
push
inc
sub
sbb
add
ret
dec
adc
rcrb
push
jmp
xchg
pop
loope
pusha
mov
psraw
cmp
ss
ss
out
or
add
in
mov
divb
aas
inc
and
out
jno
fwait
cmp
ljmp
inc
mov
popa
mov
fnsave
xchg
pushf
jb
and
incl
inc
sbb
xchg
pop
xchg
mov
adc
mov
lds
les
lods
cmp
mov
dec
ret
cli
fs
rclb
mov
out
add
adc
stos
dec
rclb
adc
fcomp
mov
mov
mov
aaa
pop
inc
jne
pop
ret
sub
xor
pop
fs
cmp
or
insl
mov
sub
add
lea
cwtl
call
stos
mov
dec
in
aad
mov
adc
sub
shlb
xchg
jne
rol
mov
mov
mov
shrb
sbb
enter
push
out
mov
xor
dec
xor
call
sub
enter
pop
xor
pop
rcrb
mov
xor
fcmovnb
add
xor
pusha
dec
movb
and
or
in
sbb
test
xlat
jb
sbb
out
arpl
mov
insl
lea
or
mov
mov
imul
dec
sub
lods
jns
sub
inc
cmpsl
icebp
pop
inc
bound
push
mov
aam
mov
orb
arpl
adc
sbb
loop
push
lahf
jb
inc
stos
addl
push
add
mov
fs
mov
xlat
xchg
mov
sbb
sbb
lahf
mov
sbb
lods
loop
push
xchg
sarb
push
mov
nop
outsb
jl
rorb
jae
mov
jmp
jmp
repz
add
xor
xchg
xor
sbb
test
pop
int3
jno
ljmp
mov
or
add
mov
mov
aas
cmp
ret
adc
nop
rcr
ret
nop
add
ss
jns
aas
jno
ljmp
mov
fldl
mov
push
jns
dec
add
push
or
mov
and
ds
pop
fstl
adc
and
stos
shll
adc
inc
cmpb
shlb
push
scas
loope,pn
insl
jp
sub
stos
jecxz
cmpb
pop
cmp
pop
out
pop
dec
clc
insb
inc
or
pop
xor
test
xchg
rcrb
fldt
lret
out
sub
jnp
mov
insb
mov
push
mov
jae
add
mov
xor
cmc
xlat
and
mov
add
adc
popa
inc
movl
jne
adc
lahf
push
sbb
jecxz
lods
inc
leave
adc
fdivl
mov
and
int3
pop
or
in
cmpl
xchg
popf
sub
mov
xchg
mov
mov
xchg
and
jg
xor
push
mov
sar
adc
lock
pop
adc
mov
fildll
mov
push
mov
cmp
cmp
fwait
inc
sar
sarl
dec
repz
ja
add
add
inc
es
sbb
push
testl
test
stos
mov
in
push
dec
mov
inc
fs
fstps
rcrb
sti
push
std
push
sahf
nop
xor
add
mov
js
jne
inc
jb
inc
push
xchg
or
and
inc
mov
cmp
mov
dec
aad
pop
cltd
dec
adc
mov
xchg
fistpl
stos
scas
data16
roll
push
adc
mov
mov
jle
push
pop
add
xchg
dec
addr16
add
xor
repz
pushl
in
push
jmp
movsb
leave
mul
push
jnp
sbb
jmp
push
sub
mov
or
pop
dec
lods
out
rcl
sarl
test
or
repz
mov
push
and
icebp
outsl
and
popf
aad
testl
mov
add
scas
insb
dec
movsb
hlt
pop
adc
cli
test
jmp
out
lods
jmp
lods
push
push
in
out
mov
stos
rorb
dec
cmp
push
fstpl
lahf
and
mov
shlw
adc
aas
mov
add
loopne
mov
and
loop
stos
cld
sub
inc
xor
mov
xchg
sbb
inc
shrb
mov
jmp
xchg
loope
cmp
mov
hlt
inc
fidivs
mov
sti
and
mov
fstpt
adc
inc
cli
or
jo
ret
negl
sti
repz
into
push
loop
mov
mov
mov
lcall
sbb
sub
mov
mov
cmpsb
add
push
mov
cmp
lea
int3
mov
aad
dec
pop
lcall
mov
mov
mov
push
scas
xchg
adc
ljmp
js
cmpsb
lods
ljmp
scas
xlat
in
push
lods
int
sub
jb
sub
mov
rcr
repnz
mov
pop
hlt
leave
cli
rorb
sub
inc
cmp
lods
cmpsl
xor
andb
jp
frstor
pop
lds
push
js
or
mov
fmul
mov
adc
into
aas
cmp
jge
out
inc
cmp
loop
jae
fstpl
adc
ficoms
in
push
js
test
adc
adc
pop
mov
test
sub
das
mov
adc
mov
imul
out
push
pop
mov
dec
or
addr16
mov
pushf
roll
inc
fmuls
pop
outsb
lock
into
sahf
adc
std
cli
cmp
sub
cmp
lods
cmp
xor
je
stc
out
invd
mov
or
jle
jge
scas
mov
in
or
push
addr16
daa
push
stos
mov
mov
loop
jecxz
mov
daa
push
xor
outsl
lcall
and
out
rorl
adc
mov
je
enter
jp
sbb
daa
mov
leave
mov
out
fdivs
xor
js
arpl
cmpsl
or
repnz
pop
inc
idivl
sbb
outsl
addr16
sub
dec
je
xor
jmp
outsb
mov
loop
or
and
mov
pop
or
test
iret
push
leave
pop
and
add
jae
stos
in
leave
push
jns
in
mov
jbe
or
push
and
popf
inc
dec
sub
rol
add
imul
lret
inc
je
in
sub
addl
leave
mov
lcall
push
sub
test
mov
mov
loope
push
push
mov
adc
pop
sti
mov
pop
aaa
cmpsb
mov
jle
stos
cmpsb
sbb
sub
jbe
mov
push
mov
and
jge
ss
cs
ds
or
mov
mov
mov
jns
cmp
sbb
rcrl
popa
sbb
jne
jmp
xor
js
dec
ja
lret
xor
mov
sub
or
or
loope
imulb
jno
push
sub
aam
xchg
sbb
scas
loop
in
aaa
push
add
dec
adc
cmp
sub
ljmp
test
repnz
pop
adcb
cmc
pop
dec
xchg
xchg
std
and
xchg
je
jns
xchg
and
rcr
adc
push
xor
push
or
adc
cmpsb
xchg
jne
jg
adc
pop
pop
lret
add
out
jle
push
mov
pusha
dec
cmp
dec
cwtl
push
lahf
ret
sub
add
aam
repz
add
loopne
inc
xlat
ror
std
movsb
push
getsec
jp
and
xchg
pop
jmp
cli
mov
cmp
inc
mov
pop
dec
pop
pop
stos
test
jl
mov
addb
in
mov
jne
cmp
push
into
cmpsb
mov
jge
inc
jo
insl
cmpsl
ficomps
mov
subb
mov
dec
fimull
imul
sarb
out
movsl
jmp
xchg
xchg
jbe
dec
imul
mov
pop
push
lret
adc
jecxz
test
and
inc
inc
shrb
jb
inc
dec
push
pusha
cmp
popa
dec
dec
dec
sbb
test
or
fstl
in
xchg
shrl
out
lods
pavgw
sub
ffreep
jecxz
push
xchg
icebp
sti
xchg
mov
jne
jo
nop
movsl
hlt
mov
out
cs
in
movsl
mov
mov
in
scas
cli
jbe
in
std
int3
fwait
mov
imulb
mov
and
mov
outsb
test
mov
movsb
into
iret
loope
mov
stc
in
cmp
or
dec
enter
pop
mov
sub
cmpsl
int3
cld
iret
sti
mov
and
pusha
arpl
push
pusha
jne
pop
movl
push
mov
fbstp
push
cmpsl
loope
add
testb
push
into
push
lock
mov
sub
sti
in
lods
fildll
lcall
and
push
inc
dec
mov
cmp
dec
xchg
inc
stos
test
mov
jo
out
inc
and
out
lods
push
aas
lcall
psadbw
addb
fmull
xor
pop
cmp
push
add
data16
fwait
out
aam
cmp
xor
mov
mov
and
aad
bound
icebp
orl
testb
mov
and
mov
rclb
adc
outsl
scas
arpl
arpl
mov
push
out
loope
movsl
xor
rcll
gs
call
inc
sbb
xor
js
xchg
loope
push
or
adc
xchg
sbb
xchg
pop
inc
mov
out
sub
stos
add
inc
push
scas
mov
xor
xchg
pop
and
pop
adc
das
inc
into
mov
push
xor
sub
or
push
jmp
cmpsl
jbe
fs
pop
mov
daa
inc
sahf
adc
inc
mov
inc
xor
pop
xchg
push
lcall
jb
and
dec
jbe
xchg
push
adc
jae
dec
outsl
jbe
loope
pusha
sar
in
jns
xchg
jb
enter
xchg
fsts
adc
jle
pop
ljmp
pop
push
sub
jae
push
fwait
outsl
test
fimuls
pop
and
insl
fs
loopne
shrb
push
hlt
jp
rcrl
mov
jle
dec
out
jl
sarl
mov
insb
adc
dec
cwtl
aaa
cld
sbb
in
jl
sbb
cld
mov
cmp
mov
push
subb
ret
fimull
jl
xor
jnp
xchg
shll
ja
jle
xor
icebp
inc
lods
inc
scas
push
dec
add
jno
pop
jmp
mov
arpl
cmpsb
push
add
cmp
test
cli
aas
gs
mov
movsl
sbb
or
leave
adcb
aam
push
sbb
jle
and
movsb
cmpl
xor
jmp
sahf
mov
xchg
xchg
fsubrl
jg
sbb
stos
in
and
xchg
popa
jo
loope
es
popf
xchg
add
sbb
fsubl
mov
lret
xchg
icebp
sbb
pop
dec
ljmp
mov
and
sahf
lock
lods
out
mov
dec
and
sbb
and
mov
jne
xchg
xchg
and
sbb
repnz
lahf
popa
inc
sub
jmp
xor
arpl
sbb
xchg
sub
adc
inc
push
cmp
push
inc
cltd
cmp
dec
cmp
xchg
ret
adc
hlt
lods
je
in
pop
dec
fisttps
sahf
sti
xor
dec
mov
pop
add
xchg
jg
and
es
dec
pop
fisubrl
ss
in
sbb
pusha
cltd
push
test
add
nop
jbe
adc
stos
cmp
xchg
push
hlt
hlt
popf
bnd
xchg
sbb
mov
fs
jne
push
mov
add
in
mov
out
sbbb
iret
cld
cmpsb
clc
xchg
push
pusha
dec
insb
mov
push
fcmovne
ret
test
adc
imul
icebp
popa
outsb
pop
cli
fs
pop
dec
lea
repnz
loope
ret
cmp
popf
nop
out
std
pushf
cmpb
roll
ret
movsl
push
mov
popa
mov
add
pop
or
mov
test
pop
mov
add
stc
enter
ljmp
xchg
arpl
lcall
je
jb
cmp
xchg
popf
xchg
xchg
fimuls
outsl
lahf
out
mov
iret
xchg
sbb
mov
outsb
stc
cmovp
jo
xor
aam
mov
ds
jg
adc
add
mov
cmpl
jmp
das
fcoml
gs
and
in
push
mov
enter
idiv
je
insb
outsb
or
adc
push
and
int
mov
jne
repz
push
pop
jae
push
pop
sub
push
jecxz
imul
dec
outsb
orb
push
outsl
stos
shlb
mov
jp
sbb
inc
mov
sbb
add
add
ljmp
adc
cltd
and
xor
mov
loope
aas
jmp
or
lret
jl
cmpsl
cmpsl
mov
lret
ss
dec
lret
push
test
inc
mov
js
adc
scas
jo
shll
push
add
mov
jge
lock
stos
bt
fs
pop
daa
inc
jmp
dec
mov
and
es
push
xchg
inc
dec
into
xlat
mov
dec
inc
test
daa
adc
imul
xchg
jae
push
es
pop
inc
stc
dec
dec
mov
sbb
inc
mov
mov
hlt
dec
push
dec
pop
add
pop
insb
outsl
sarb
test
push
lret
dec
push
es
insb
pop
inc
push
mov
lock
popf
lcall
clc
cmp
and
add
pusha
jl
xchg
or
in
pusha
retw
fildl
mov
mov
enter
cmpsb
ret
in
jge
add
push
mov
add
push
in
sbb
mov
adc
pop
mov
xor
inc
cmp
ja
cwtl
sub
shlb
aas
inc
roll
xchg
sub
mov
les
addr16
and
lea
outsl
in
xchg
das
push
rorl
xchg
fadds
sbb
pop
adc
xor
dec
xor
lret
mov
mov
stos
inc
inc
pusha
jl
ljmp
ja
ja
leave
pop
insb
mov
outsl
popl
movsb
or
mov
xchg
test
cld
pop
dec
fstp
lcall
adc
mov
xor
pop
xor
mov
mov
fdivrl
jl
push
push
xor
jo
enter
in
stos
adc
xor
cltd
dec
movsbl
or
mov
out
inc
repnz
fidivrl
in
dec
jecxz
mov
iret
addr16
leave
imul
adc
cld
mov
add
ret
addl
jns
xor
dec
or
or
push
in
mov
sub
aad
ljmp
test
or
xchg
add
hlt
inc
xchg
out
pusha
mov
dec
out
fs
jns
inc
dec
daa
jmp
mov
adc
mull
sarl
pop
mov
and
adc
popf
int3
rclb
leave
shrl
in
or
mov
push
adc
daa
jns
xorl
jne
in
mov
push
and
popa
lcall
and
loope
bound
sbb
je
insb
pop
xchg
inc
aad
add
popf
mov
pop
pushf
fstps
call
jle
nop
std
mov
out
push
add
mov
xor
jge
pop
les
popf
push
into
rcrb
lea
out
outsb
push
repz
insb
mov
push
out
int
mov
rorl
jp
lcall
mov
jp
pop
xchg
setns
mov
outsb
loope
pop
or
loopne
es
fcmovnu
mov
movsb
adc
jl
test
push
inc
pop
imul
ss
ret
pusha
stc
add
pop
outsl
lret
pop
and
nop
cmp
mov
xor
mov
mov
mov
out
gs
add
loope
xchg
int
imul
sub
mov
jg
pushf
ret
es
bound
aaa
mov
repz
mov
jmp
dec
adcb
lods
mov
mov
push
cld
stc
hlt
xchg
sub
fnstenv
push
popa
pop
dec
push
dec
repnz
loop
ljmp
scas
lea
mov
stc
bound
xchg
xchg
sbb
xor
pop
add
lods
clc
dec
dec
popa
or
adc
pop
outsl
jne
mov
ret
call
lods
ss
lahf
inc
and
push
sarb
fistl
mov
cld
mov
divb
stc
xchg
aad
add
xchg
fistpll
fs
insl
cmpsl
xor
push
ret
imul
rcll
and
in
repz
jl
push
or
add
cltd
and
shrb
jne
outsl
mov
sbb
shlb
xor
push
popf
leave
xchg
cltd
jnp
jae
pushf
push
iret
sbb
inc
jns
sbb
loop
cltd
or
movsl
inc
movsl
xchg
sub
lods
pop
jo
add
mov
pusha
mov
dec
movsl
int3
dec
and
rol
add
sub
ljmp
in
adc
mov
insb
outsl
adc
addr16
loop
jae
mov
icebp
insl
stc
fidivrs
dec
mov
xchg
mov
mov
mov
or
mov
mov
cmp
ret
ss
xor
inc
sbb
xchg
sub
hlt
adc
js
dec
push
jle
pop
fildl
lods
outsb
push
stc
push
shlb
push
lcall
and
mov
nop
shll
cwtl
movsl
subl
mov
iret
sbb
lcall
outsb
popf
xlat
in
in
pop
sahf
xor
cmp
jno
or
movb
jge
testb
and
and
int3
jle
sar
adc
and
in
and
add
mov
push
aad
mov
mov
mov
jns
mov
ja
sub
mov
sbb
js
jnp
test
test
test
int3
mov
fistpl
or
dec
cmp
inc
cmp
test
or
in
mov
jae
int
xchg
sub
andb
adc
jno
lea
hlt
adc
pusha
mov
add
out
neg
sbb
fadd
mov
pushf
orl
xchg
inc
mov
jnp
push
adc
sbb
test
insl
xchg
mov
insl
lahf
ljmp
xchg
out
jg
mov
mov
sbb
xor
sub
mov
int3
ljmp
add
aaa
and
dec
cmp
test
sti
mov
rcl
ffreep
cli
adc
pusha
loop
sub
mov
pop
jl
jmp
lds
sarb
inc
scas
icebp
outsl
mov
sub
popa
imulb
gs
fmull
cwtl
cmp
rolb
ja
int
push
add
cmpsl
popf
sbb
inc
jge
or
xchg
mov
adc
out
mov
pushf
jo
pop
jbe
enter
ljmp
jnp
bound
mov
add
jg
loope
addl
sbb
cmp
inc
jns
enter
test
jle
dec
and
ljmp
insb
sub
or
jno
aaa
jl
mov
push
fsts
gs
adc
mov
push
mov
fs
aaa
dec
ret
dec
pop
scas
cwtl
dec
mov
pop
dec
pop
cmc
jecxz
mov
pop
sub
lahf
xchg
jae
mov
inc
lahf
lret
iret
mov
mov
test
cmp
and
ja
push
fimuls
cmpsb
ja
xchg
lods
lret
daa
or
lock
stc
rcrb
fistl
imul
std
loop
xchg
enter
jge
cmpsl
or
lds
add
jecxz
rcl
adc
adc
ror
mov
jno
andb
jbe
push
jmp
and
jb
or
sbb
in
mov
push
shll
icebp
jo
mov
jb
push
lods
scas
in
ret
scas
inc
add
mov
and
ret
fldz
sub
lahf
pop
sbb
stc
cmp
shll
ret
rcr
cmp
shl
sub
pop
push
cld
or
sahf
adc
enter
cwtl
fadds
lcall
lret
cmp
aaa
shlb
mul
pop
mov
outsb
ret
imul
pushf
pop
aad
mov
add
ja
push
and
mov
and
dec
add
scas
xchg
je
pop
addr16
inc
aas
push
or
cmpsb
push
jl
scas
adc
pop
and
cmc
cmpb
lods
mov
cmp
movsl
loop
mov
and
popl
inc
ret
inc
mov
fadd
jecxz
mov
push
faddl
cmpl
adc
xor
sbb
daa
out
dec
ss
and
ret
pop
mov
pop
filds
repz
dec
shll
mov
call
inc
subw
adc
shl
pop
hlt
js
inc
das
xor
inc
pushf
iret
bnd
fdivl
jbe
jle
adc
jecxz
aas
jnp
js
xor
mov
in
idivb
xchg
add
fstps
mov
aas
sbb
imul
mov
dec
push
insb
out
ret
dec
loop
dec
xor
push
ss
or
hlt
idivb
jne
mov
loop
mov
xor
loop
jb
cmp
and
cwtl
jl
movsb
rcrb
addb
daa
aam
adc
enter
xchg
jno
mov
cmp
cltd
mov
std
dec
mov
fildll
inc
xor
jp
sub
sbb
in
fdivs
lcall
mov
and
fstl
mov
mov
mov
imul
inc
xor
clc
rcrl
jp
mov
cld
dec
in
mov
pop
cwtl
and
test
pop
mov
popf
and
js
into
fsubrl
pop
js
or
cmp
test
cltd
test
mov
push
ficoml
std
mov
dec
pop
es
mov
pop
cmp
insl
lds
sbb
jno
pop
or
subps
repnz
jo
push
dec
js
inc
or
movsl
in
pusha
sub
inc
mov
add
jl
aas
mov
sti
mov
push
pushf
push
stc
cld
subl
mov
mov
in
fiaddl
mull
outsb
sub
jle
push
int
pop
imul
outsl
nop
xchg
adc
and
cmp
adc
je
xchg
mov
stc
movsl
aam
mulps
push
sbb
fs
mov
and
fsubr
mov
mov
dec
dec
scas
xchg
frstor
enter
sahf
jns
push
out
jno
push
jnp
sub
pop
outsb
adcb
cmp
xchg
xchg
sbb
js
mov
push
pop
mov
fcompl
repnz
jns
and
jmp
mov
adc
pop
jns
hlt
add
lahf
sbb
dec
xchg
das
inc
test
pusha
jo
js
outsb
ss
shr
or
in
cmp
pusha
test
fwait
and
xorb
jo
inc
cmc
push
sub
outsl
mov
add
sub
push
outsl
xor
xor
into
or
adc
dec
add
mov
cmp
adc
xchg
mov
push
mov
add
pusha
lods
inc
cs
mov
es
aad
jg
mov
mov
fisttpll
icebp
and
andl
pop
or
dec
mov
stos
xor
pop
or
lods
or
and
push
sbb
stc
loopne
xor
and
ficomps
cmp
xor
in
mov
aam
aas
or
pop
mov
add
jecxz
in
add
dec
and
jle
cmp
and
add
outsl
mov
testl
xchg
jge
aaa
in
pop
iret
or
push
pop
les
or
cmpb
imul
push
fisubs
dec
and
int
les
xchg
movsl
fisttpll
popa
stos
mov
arpl
xor
addl
dec
clc
xchg
dec
xor
test
ss
inc
adc
and
into
arpl
pop
sub
jp
push
dec
sub
test
inc
clc
pop
aam
dec
add
pop
pop
inc
insb
xchg
xor
push
pop
jle
loopne
sub
fwait
xlat
mov
cwtl
pop
dec
mov
pushl
addl
or
add
xlat
dec
sbb
out
sbb
cwtl
cmpsl
xchg
mov
cmp
movsl
ljmp
das
int
cli
test
dec
pop
pop
xchg
mov
adc
in
jge
jge
dec
iret
add
les
jecxz
aad
lods
in
orl
je
sar
ret
or
test
adc
test
out
repnz
insb
cmp
adc
xchg
pushf
lret
and
mov
or
dec
inc
ljmp
sbb
dec
push
movsb
sub
mov
mov
dec
lods
leave
cwtl
das
add
mov
inc
aaa
movsl
test
pop
test
dec
lret
fdivrs
sbb
jg
call
test
sub
mov
icebp
sub
adc
popf
movsb
jmp
lods
les
or
gs
aaa
or
add
lods
imul
sbb
jl
inc
adc
push
mov
insl
shrb
cs
xchg
imul
push
fsubl
lock
fbstp
ret
mov
int
stos
mov
xchg
mov
jl
add
sti
inc
xor
outsl
enter
test
shrl
cmp
or
mov
std
pop
lea
cwtl
mov
inc
fistpll
insb
outsb
stos
repnz
mov
jbe
lret
arpl
adc
insl
xchg
jge
inc
jbe
mov
std
daa
in
pop
lahf
push
push
scas
loop
adc
jo
adc
mov
outsb
and
push
mov
xor
pop
fcmovnbe
mov
xor
movsl
and
adc
sub
fisubl
inc
cmp
fs
xor
sarl
out
mov
mov
push
dec
sbb
inc
shlb
add
adc
mov
xchg
pop
dec
and
push
mov
popl
xchg
adc
cs
dec
dec
or
rcrb
and
push
mov
cmp
repz
xlat
xchg
mov
mov
inc
push
fmul
aad
cld
clc
ds
pusha
jno
loope
xor
fwait
jne
lods
sub
sub
mov
pusha
loope
into
dec
cmpsl
pop
enter
or
and
xorl
callw
inc
inc
pop
and
mov
leave
mov
fstpt
pusha
rorl
arpl
jmp
dec
test
call
fisubrl
add
mov
cmp
push
sti
xchg
aas
cmpsl
out
adc
insl
or
mov
sahf
jg
inc
ret
add
cmp
add
xor
adc
popa
es
add
pop
lock
jg
jns
rorb
test
and
cmc
int
and
mov
inc
jl
test
imul
xchg
add
xor
lret
xor
notl
pop
inc
xchg
xor
dec
adc
movsl
sbb
xorb
mov
lds
xchg
mov
subb
cmp
out
arpl
loope
cltd
test
and
fdivs
add
mov
and
test
pop
cmp
scas
lods
lock
lret
repnz
push
mov
jno
mov
rcr
add
add
je
dec
std
mov
sub
insb
xor
xor
rolb
pop
je
in
mov
xchg
xor
jp
pop
mov
pop
out
nop
jg
das
mov
xchg
jae
cmp
pop
aam
imul
pop
and
outsl
pop
rorb
sti
icebp
push
xor
or
lret
insb
mov
adc
popl
sub
dec
push
mov
popf
adc
rclb
loop
cmc
idivb
push
cltd
lock
xor
and
fidivrs
test
fucom
imul
mov
rcr
push
adc
roll
ja
mov
xchg
jb
or
leave
push
cmp
push
pop
loopne
pop
or
cwtl
fmul
and
sti
imulb
sti
mov
mov
adc
or
jne
testl
xchg
mov
cmc
inc
add
test
add
xchg
pop
xchg
cltd
adc
inc
dec
or
pop
push
adc
test
cmp
xor
mov
aas
xor
jg
ljmp
insb
in
mov
add
int3
mov
fmull
testl
push
dec
cmp
in
sbb
lret
dec
pop
cmp
xchg
dec
cld
ret
xor
adc
fdivr
and
psrad
out
popa
popa
xor
mov
test
mov
movsl
xchg
mov
xor
pop
and
inc
push
in
icebp
mov
adc
scas
popa
mov
fbstp
cwtl
insl
adc
jecxz
outsb
lock
inc
cmp
jp
es
or
cmpsl
mov
les
dec
adc
inc
jecxz
aam
into
sbb
sbb
dec
sub
lea
movsb
js
add
arpl
lret
add
and
fbstp
cli
fs
stos
add
sub
jge
cmp
dec
sarl
stos
dec
je
std
lds
sbb
mov
sbb
ret
inc
cmp
pop
pop
adcb
mov
adc
repnz
sub
pusha
popf
in
dec
sbb
lds
rep
cmc
out
les
movsb
mov
int
mov
mov
mov
push
divb
daa
es
fcompl
std
mov
xor
mov
pop
jns
in
out
pusha
enter
xor
mov
mov
push
insb
aam
repnz
adc
pop
imul
mov
lods
mov
inc
push
add
je
cmpsl
mov
out
xor
push
rolb
jo
xlat
repnz
jecxz
cli
pop
push
jnp
adc
arpl
fldenv
mov
sub
lret
fidivs
addb
cmp
lret
sti
sahf
les
test
in
add
pavgb
in
or
adc
and
out
lret
adc
and
add
lret
arpl
sub
out
xchg
mov
mov
push
xlat
pop
mov
pop
movsl
stc
adc
adc
mov
inc
xchg
and
ret
out
lcall
inc
rcrb
xorl
dec
add
call
push
cmp
loope
outsl
push
push
xor
pop
push
sub
jmp
iret
pop
add
jne
xchg
movsb
xchg
or
mov
cltd
sbb
mov
mov
insb
xor
imul
mov
inc
mov
cmc
cwtl
lods
cmp
inc
sbb
in
pop
rcrl
test
sub
and
repz
add
test
es
pop
jl
dec
xchg
sahf
inc
cmpsb
pop
xor
fadd
pushf
pop
fidivl
xchg
mov
nop
xorl
mov
jnp
and
and
push
jno
mov
lahf
jne
push
push
int3
icebp
mov
and
push
push
cmc
pop
lcall
mov
jle
and
aad
cltd
or
call
jnp
dec
pop
and
push
xchg
mov
aad
lock
xor
roll
dec
out
xchg
outsb
add
jno
jae
mov
adcb
or
and
stos
mov
mov
aas
pop
mov
push
push
inc
daa
xor
stc
and
insl
imul
ss
cmp
push
rcl
lcall
mov
jl
push
add
bound
jns
and
inc
jne
lock
in
int3
mov
xor
ljmp
push
clc
repnz
cmpsl
add
insb
jb,pn
scas
add
daa
pop
call
cmpsb
cmp
push
mov
outsw
pop
aam
je
and
sbb
add
xchg
sbb
icebp
cmc
mov
jb
fstl
or
and
jnp
shll
push
test
ffree
push
sub
scas
leave
clc
and
sar
mov
xchg
inc
adc
in
inc
test
and
sbb
sahf
mov
ret
in
lcall
cli
imul
in
out
fwait
pop
xor
mov
mov
mov
or
daa
loop
nop
pop
dec
sub
pop
mov
xchg
aam
test
pop
inc
lock
prefetcht0
fnstenv
dec
dec
in
mov
inc
insl
xchg
lds
xchg
cltd
cmp
les
cld
pop
pop
cmp
jns
push
imul
push
mov
aad
pop
jne
mov
cli
push
push
enter
jl
mov
into
or
fcompl
cmpsb
dec
mov
outsl
repnz
sbb
and
popf
push
and
test
cmpsb
loopne
sbbl
dec
in
stos
out
sbb
fimull
std
mov
or
nop
lock
or
nopl
jb
mov
mov
xchg
jno
popf
mov
daa
ret
mov
adc
gs
std
mov
jns
stc
or
mov
xor
sbb
adc
jle
inc
push
and
mov
add
lock
lock
mov
cmp
add
jnp
stos
push
mov
cmc
call
mov
mov
push
into
fldcw
imul
negl
lods
imull
les
sti
mov
jo
jnp
mull
fistps
popf
xchg
and
adc
pop
push
mov
push
mov
lods
sbb
int3
fimuls
iret
int
mov
popf
pushf
test
mov
cmove
cmp
adc
or
fistpl
xchg
lock
aam
int3
mov
in
cmovge
inc
ljmp
pop
cmp
push
dec
sub
hlt
push
cmp
fcoml
dec
jge
and
sbb
ror
push
add
cmp
in
loope
xor
push
dec
adc
mov
pusha
xchg
push
and
cmpsb
test
sub
enter
inc
stc
insl
ljmp
shlb
clc
jl
test
lahf
iret
jl
int3
pop
jl
hlt
mov
adc
cld
fcoms
inc
mov
roll
pop
sub
dec
test
pusha
dec
or
shrb
pcmpgtd
dec
cmpsl
dec
push
fldt
in
in
cltd
or
out
ds
in
lock
idiv
push
pop
mov
or
xchg
test
sbb
stc
mov
jl
sti
arpl
out
xor
fwait
and
cmp
pusha
cmp
leave
pop
lea
inc
cmp
fbld
outsb
mov
cltd
stos
xchg
stos
add
loope
sbb
in
sbb
ffree
in
insl
mov
insb
cwtl
ja
into
test
loope
leave
and
neg
mov
mov
push
jecxz
cs
pop
jecxz
negb
or
push
dec
ss
out
mov
xor
rorb
sub
fmul
and
fnstcw
pusha
cmp
in
mov
clc
je
ror
mov
lret
jl
aad
mov
cli
cmp
ljmp
sbb
cmp
leave
cmpsb
mov
push
ficomps
sbb
dec
cmpsb
cmc
add
sbb
jmp
cmpsl
sbb
js
xchg
jae
fisubs
xchg
lds
xchg
xor
lods
mov
jl
arpl
ret
xchg
xchg
add
je
cltd
adc
fisttpll
aaa
andb
push
mull
mov
in
in
or
sbb
lds
into
js
pop
in
add
xchg
sub
mov
push
imul
sahf
data16
dec
mov
fcoms
jp
fdivs
push
out
nop
add
pop
dec
push
cs
mov
or
std
mov
loope
loopne
dec
movsl
or
mov
inc
in
jge
sbb
jns
cmpsb
or
and
ljmp
mov
lret
mov
das
aad
xor
xor
pop
add
cs
js
cmp
insb
aas
mov
jo
lods
jae
jb
lahf
push
adc
test
mov
or
jl
sbb
fsub
loopne
and
ja
fldl
mov
gs
mov
add
lock
int
push
xor
mov
xlat
sbb
pop
cltd
pop
jo
mov
cmpb
inc
iret
jge
in
std
push
dec
mov
dec
sbb
push
dec
test
les
cmc
pop
and
mov
popf
lds
mov
sbb
xchg
fdivs
jne
inc
inc
inc
mov
or
outsb
lock
xchg
scas
xchg
addl
lods
add
std
or
ret
push
jo
mov
daa
xor
shlb
mov
xchg
and
jp,pn
xchg
mov
or
sarl
cmp
in
mov
mov
pmaddwd
out
adc
mov
iret
test
inc
fxch
push
outsb
scas
jno
aas
pop
lea
ljmp
mov
stos
js
cmpsb
mov
stos
jge
pop
dec
jmp
fsubl
or
ljmp
and
addr16
test
xchg
enter
jno
mov
out
fwait
adc
inc
insb
lock
jo
sub
jae
repnz
xor
inc
mov
dec
loop
fwait
dec
pop
add
jge
adc
xor
and
pop
aad
scas
cmp
cld
inc
pushf
sbb
add
ficoms
out
or
mov
test
push
movsl
lods
xchg
pop
jg
test
aad
mov
stos
mov
aas
fisubrl
and
ds
dec
dec
jne
xor
subb
cmc
sub
lahf
mov
or
je
or
push
cmp
movsl
ret
test
xor
jge
es
fdivrp
icebp
movsb
jl
fdivrl
push
pop
sbb
sbb
jp
jae
mov
fiaddl
popa
push
das
sbb
andl
pop
sbb
cmp
in
sub
fcoml
je
xor
mov
lcall
shr
popa
dec
push
es
fs
and
cmc
outsl
mov
adc
mov
pop
jge
cmp
pushf
mov
fcoml
das
xor
or
pop
repz
jnp
jl
xor
and
test
or
dec
lret
adc
popa
aam
cwtl
cld
daa
inc
loope
and
cli
adc
pusha
jbe
popf
jbe
adc
dec
ja
cmpsl
add
dec
or
fwait
pushf
fidivs
mov
into
test
adc
in
inc
dec
push
stos
loopne
pop
ja
xor
mov
mov
and
push
push
sub
cltd
in
popa
xor
xchg
xchg
add
in
sbbb
dec
repz
xlat
out
lcall
inc
xor
dec
jg
adc
cmpsl
xchg
xchg
pop
push
call
dec
iret
mov
cwtl
dec
sbb
mov
cmp
jp
mov
dec
loopne
cs
sbb
ss
mov
jmp
addl
enter
mov
mov
mov
or
lock
mov
mov
orb
sub
cs
xor
in
dec
lods
sub
pop
stos
fs
inc
push
lds
push
adc
icebp
test
leave
sub
jbe
insb
in
xchg
push
loope
divb
push
orb
cmpsl
lret
cmp
cs
test
jecxz
sbb
pop
adc
push
pop
leave
ret
ret
add
push
push
scas
call
insl
mov
iret
loope
mov
imul
rcl
pop
jecxz
add
mov
cmp
xor
leave
xor
mov
lods
ret
push
jg
rol
faddl
mov
stos
imul
test
lcall
movsl
mov
loopne
fistl
cwtl
adc
lea
add
and
jp
xchg
loopne
andl
add
in
insb
and
insl
cmp
jb
dec
add
repnz
loop
xor
add
packsswb
std
cltd
jmp
adc
push
mov
sbb
test
push
mov
xor
cmpsb
add
sti
insb
cs
iret
fmulp
mov
push
lock
gs
int3
pop
sahf
push
push
pop
test
cs
adc
jns
imul
or
cmpsb
push
add
cs
or
test
lock
add
fsts
hlt
xchg
ja
icebp
pop
ret
cmp
pusha
fistpl
and
mov
lcall
mov
pop
outsl
in
std
xor
sbbb
sarl
ret
stos
sub
fimuls
push
sbb
sbb
fisubrl
or
jmp
pop
push
aaa
pop
push
push
xor
and
adc
jno
jl
mov
cmp
push
pop
fxch
mov
sub
inc
mov
dec
push
mov
mov
xor
jnp
mov
push
and
ret
insl
xchg
fimull
jbe
sub
js
or
incb
enter
loopne
jne
adc
stc
and
xor
lahf
mov
mov
loope
push
out
out
mov
jb
das
data16
xchg
repnz
jg
jle
mov
daa
mov
dec
add
test
xor
mov
adc
push
and
push
push
push
mov
xor
jo
adc
out
fldcw
or
inc
in
pop
sbb
cs
push
lods
mov
adc
test
iret
in
sub
sbb
cmpsb
add
push
icebp
iret
pop
lret
shlb
enter
add
aam
pop
sbb
mov
sub
jg
loopne
sahf
xchg
shlb
sbb
push
jl
cmpsl
and
jmp
je
xorl
mov
ds
inc
mov
js
sub
repz
andl
adc
mov
in
push
negl
scas
scas
mov
lea
sub
dec
shrb
jno
mov
jmp
xor
in
rcl
fidivrl
setns
jno
xchg
aad
adc
cmp
mov
mov
ds
mov
lcall
movsb
aam
stc
cmpsb
or
out
shl
fsts
sti
paddb
and
out
testl
rcrb
dec
repnz
adc
pop
fdiv
push
subl
xchg
jae
xchg
cmpsl
in
inc
adc
xchg
mov
call
push
jl
addr16
sbb
push
hlt
jl
int3
inc
xchg
in
push
mov
adc
inc
cmp
push
dec
sbb
jae
inc
dec
dec
jnp
or
or
loop
bnd
popa
mov
sub
mov
outsb
cmp
aas
mov
sbb
aas
out
rep
dec
mov
pop
mov
lahf
mov
inc
adc
mov
xchg
mov
dec
lahf
es
sub
fnstenv
rcrb
ljmp
jns
xchg
das
cmc
sbb
cmp
pop
xchg
loop
fs
mov
dec
push
lahf
addr16
mov
mov
or
add
xchg
lret
aas
sub
mov
pop
jmp
and
cmp
ret
dec
cmp
jmp
jo
xchg
pop
fiadds
or
sarl
mov
xchg
add
ja
fimuls
add
push
push
add
ss
push
mov
arpl
test
jg
shll
cli
inc
xchg
stos
pop
lret
cmc
and
cmp
xchg
pop
sti
sbb
adc
sahf
cltd
clc
sub
lahf
mov
bound
mov
mov
inc
adc
sub
cmp
pushf
sub
and
in
lds
dec
jl
xor
cmp
stos
push
lds
int
stc
sbbb
jmp
out
stc
mov
ja
test
sub
shr
les
pminub
jecxz
or
arpl
lahf
inc
jb
inc
sbb
dec
adc
pop
add
data16
shll
cmp
fadds
iret
repz
notb
pop
cltd
xchg
lcall
or
adc
cmp
jnp
jmp
mov
lods
or
dec
mov
bound
stos
or
scas
add
jmp
iret
fs
scas
jnp,pn
adc
mov
arpl
fsub
pushf
mov
pop
punpckhwd
or
adc
mov
or
cmp
addl
jo
ret
daa
fwait
jns
cmp
dec
push
or
mov
mov
cmpxchg
test
mov
xchg
ljmp
add
shlb
add
xchg
mov
push
outsb
sbb
roll
fistpl
adc
aam
rcrb
aas
mov
int
sbb
jp
test
stos
cltd
adc
lods
mov
sub
mov
es
popf
ret
jb
sub
add
es
push
mov
inc
js
xchg
aas
xchg
xor
cmc
imul
ss
imul
test
lret
inc
cmp
mov
mov
cmp
daa
push
cmp
repz
daa
adc
mov
movsl
movsl
sub
sub
cmp
imul
test
sahf
lods
or
stos
clc
cs
sbb
pop
arpl
sbb
xor
inc
mov
insl
dec
scas
pop
int3
and
lods
fidivrs
divb
dec
fbstp
jle
cmp
jae
pop
dec
sbb
iret
cmp
arpl
add
sbbb
cmp
out
add
cmp
mov
dec
add
ja
fwait
cmp
into
loopne
es
sbb
cs
add
and
xor
push
push
inc
jle
subl
mov
lds
mov
aaa
and
mov
outsl
adc
jecxz
lds
sbb
fs
cmpsl
mov
sbb
cmp
test
add
in
mov
je
mov
cwtl
xor
test
xor
and
push
pop
adc
sub
fdivs
jp
sub
xorl
movsb
into
xlat
pop
sub
aaa
sub
lock
jb
pop
add
popa
adc
in
iret
xor
adc
sbb
cmp
cmc
repnz
sub
rolb
aaa
jb
mov
into
loope
mov
out
push
sub
inc
cmp
xor
or
add
and
testl
pop
test
mov
rcll
inc
jg
iret
data16
dec
int
xlat
and
loope
cmp
imul
shlb
or
ret
test
pushf
jg
ret
jno
cmp
cmp
jo
jecxz
jp
pop
cmp
bound
jb
mov
call
mov
push
or
mov
lcall
cmpl
cmc
cld
stos
sbb
enter
mov
fsubs
stos
fcmovnu
pop
add
jecxz
mov
movsl
push
sti
adc
add
in
mov
dec
mov
jno
stc
mov
ljmp
xchg
out
std
fmuls
push
add
dec
mov
mov
cvtps2pi
mov
jno
mov
sub
mov
pushf
mov
outsl
pop
add
mov
repz
push
pop
int
lods
notl
mov
orl
xor
mov
stc
jmp
xlat
cmp
imul
inc
ss
out
js
lahf
ss
lds
xor
les
mov
push
add
sub
aam
mov
xchg
cmp
aas
mov
outsl
dec
ds
xchg
push
adc
cmpsl
mov
je
lret
fstp
mov
mov
push
mov
add
addb
scas
test
icebp
xlat
jbe
pop
popl
fwait
or
cmp
or
test
push
jo
in
scas
lods
cli
pop
mov
scas
test
in
jge
ficompl
or
cmpsl
es
sbbl
xchg
dec
pop
fsubrs
dec
cmpsl
clc
ret
dec
je
cmc
push
es
das
ss
sti
jge
xchg
dec
aam
pop
sti
out
push
cmp
xor
jns
in
stc
push
add
out
shl
dec
jecxz
xchg
insl
les
lcall
in
cmp
jge
xchg
add
cld
jl
into
jbe
mov
daa
xor
in
mov
mov
cmpsb
in
fcomp
lods
nop
xlat
fs
mov
jbe
cli
dec
mov
add
insb
inc
mov
dec
das
mov
push
test
stos
gs
sbb
cltd
jge
jbe
cmc
les
adc
xor
xchg
dec
stos
adc
mov
sub
pop
pop
neg
test
push
hlt
add
mov
dec
dec
jge
jecxz
xlat
popa
ficomps
in
sub
inc
rclb
mov
bound
pusha
jns
jo
mov
test
mov
xchg
shrb
dec
push
or
rcll
add
push
add
aaa
cmp
push
and
jbe
popa
jb
nop
pop
fsubrl
fdivrl
inc
xchg
dec
xchg
out
mov
into
ret
out
and
lea
fs
dec
mov
xor
or
fcmovnbe
pushf
adc
cli
incl
hlt
dec
stos
test
mov
lret
jmp
out
sar
sti
in
popa
sbb
ss
push
lods
cmp
stc
nop
xor
ficomps
hlt
out
lods
ds
scas
sbb
xor
mov
dec
jp
das
out
bound
sbb
xor
dec
aad
fisubl
into
sar
and
jl
cmp
pop
sbb
push
or
pcmpgtd
sbb
adc
rolb
mov
inc
mov
inc
daa
push
mov
xchg
call
decb
mov
mov
push
cmp
mov
mov
dec
std
outsl
and
data16
add
std
ss
add
mov
inc
into
scas
aas
pop
andps
es
jns
push
loopne
pop
addl
flds
adc
mov
leave
lock
mov
mov
outsl
jmp
adc
lcall
fistpll
cmp
lret
add
push
mov
mov
jnp
xlat
outsb
mov
int
inc
jg
jmp
daa
mov
xchg
loope
jge
and
pop
adc
mov
cmp
pop
loope
mov
lock
push
lock
pushf
pop
mov
sub
loopne
rcr
push
and
bound
popf
or
push
jnp
dec
cmp
pushf
das
sub
jmp
jns
jns
mov
data16
pop
fcom
push
adc
imul
pop
shl
mov
push
mul
hlt
mov
mov
imul
jle
xchg
popf
push
or
arpl
je
mov
add
leave
outsb
aaa
lods
outsl
inc
outsb
push
push
xor
inc
lods
popf
jge
jmp
outsb
add
sti
push
sub
lret
xchg
pop
shl
mov
filds
in
sub
pop
rcll
cltd
xchg
or
gs
inc
paddw
push
inc
repz
sarb
dec
jmp
in
aas
xorb
cmpb
ret
inc
jle
push
jmp
jae
mov
into
push
popa
xchg
andb
mov
lods
cs
xor
popa
je
cmp
aaa
cltd
data16
fcoml
dec
or
sub
mov
adc
shll
arpl
call
rcrl
stos
xchg
iret
push
mov
cmpsb
scas
cwtl
xchg
leave
push
hlt
loop
mov
subb
out
and
and
scas
leave
and
and
rclb
push
repz
rolb
out
sarl
test
leave
inc
mov
aam
push
and
in
xor
inc
pop
test
in
sub
xchg
jge
jne
rcrl
fdivp
std
int3
iret
cli
mov
jo
sub
push
jns
int
inc
aam
push
push
into
push
negl
fstps
xor
sti
test
xchg
push
cmp
loop
mov
sbbl
fldt
mov
lcall
adcl
inc
dec
adc
das
loopne
js
leave
incl
adc
xchg
pop
adc
movsl
in
cmpsb
popf
mov
dec
jmp
xchg
stos
inc
or
stc
mov
pop
dec
push
push
jp
and
xchg
dec
insb
jmp
jbe
add
sar
jns
call
mov
inc
cmc
mov
jno
mov
sarl
lea
and
jb
xor
xor
xor
insb
mov
js
mov
push
ss
outsl
mov
sarl
pop
or
movb
push
call
mov
dec
mov
dec
data16
int3
and
sbb
ret
add
gs
adc
shll
mov
mov
jle
fistpll
jne
cltd
ficoml
sbb
loop
fisubs
pusha
fidivs
aas
pusha
decb
test
mov
and
mov
sbb
mov
mov
xlat
ficomps
xor
mov
loopne
jb
sbb
out
jo
cmpsl
test
pop
adc
shrb
push
fdivr
jns
in
jmp
push
std
or
loopne
popa
das
addr16
or
cmp
jns
mov
shll
adc
adc
cmpl
out
push
and
xchg
dec
or
pop
xchg
popa
pop
bound
push
pop
dec
xlat
pop
mov
xchg
push
jne
adc
jl
inc
add
mov
mov
add
lahf
aas
lds
call
jp
fimuls
dec
sbb
in
mov
lahf
out
subb
push
lock
pusha
inc
loope
das
mov
daa
stc
mov
mov
pop
std
cs
daa
pop
mov
push
rolb
xlat
sbb
pop
add
int3
jne
pop
lods
adc
out
jle
call
test
int
out
push
inc
in
dec
data16
mov
jb
ja
sbbl
mov
nop
inc
add
lcall
jnp
jne
cs
int
push
fcompl
lcall
push
pop
and
enter
ret
fwait
imul
push
rcll
or
bound
mov
xchg
mov
sub
lret
cmp
rcl
dec
lock
pop
inc
pushf
scas
iret
adc
pop
jo
mov
hlt
aad
out
xchg
dec
jb
xor
xor
mov
push
cmc
int3
test
std
fwait
cmc
pushf
push
mov
adc
or
mov
notb
roll
repnz
xchg
push
xlat
mov
repnz
ret
add
and
daa
add
jnp
mov
lahf
and
fsubrl
popa
cmc
sarb
scas
rcrb
test
jmp
mov
xor
mov
lock
add
and
lods
dec
sub
repnz
sbb
ds
jp
sbb
lahf
sub
jle
nop
ret
aas
outsl
push
hlt
mov
add
fbstp
stos
into
pop
loop
dec
jle
bound
rorb
sti
adc
add
and
call
pushf
dec
cmp
test
popa
add
out
and
cmp
jge
lret
cwtl
nop
cmp
xor
pop
pusha
test
rolb
fwait
dec
adc
in
jge
push
inc
cmp
add
int3
pop
scas
jb
pop
pop
cmp
pop
mov
fisttps
lahf
or
fucomip
sbb
outsb
inc
push
adc
loopne
leave
pop
mov
push
push
data16
and
mov
dec
or
cmpsl
mov
jo
add
jg
out
fiadds
push
dec
dec
push
lcall
mov
mov
mov
pop
pop
cmpsl
sti
movsb
jo
mov
push
andb
mov
leave
lahf
and
jecxz
jbe
outsl
xchg
int3
dec
ss
jnp
cs
mov
rcr
sbb
xchg
adc
mov
pop
mov
adc
imul
sti
mov
inc
lock
daa
xchg
in
cwtl
jp
out
insw
mov
jbe
pushl
cli
xchg
ja
ret
data16
xchg
in
js
loopne
loope
or
sbb
lods
adc
xor
fnstenv
leave
inc
cmp
push
mov
stos
cmp
or
cli
add
je
addr16
shlb
jl
icebp
mov
cmpsb
fwait
xor
in
je
movsl
mov
and
loopne
mov
push
or
cmp
cmp
inc
aad
rcrl
push
mov
inc
scas
mov
out
jle
sub
ret
jnp
int3
sti
call
or
jne
jns
orb
xorb
stc
mov
sub
jmp
jae
jno
adc
js
sbb
mov
fwait
ret
jbe
fimull
pop
inc
sbb
inc
icebp
dec
or
push
out
cld
sahf
push
sbb
pop
ret
mul
movsb
addr16
out
jmp
fbld
fs
cs
adcb
jno
lods
push
shrl
jno
aam
test
clc
push
push
lods
jns
ss
loope
adc
jns
mov
pushf
dec
fcom
out
jnp
sbb
sub
jo
arpl
push
inc
iret
and
aaa
inc
cs
sub
subb
xor
icebp
dec
jecxz
repnz
mov
ljmp
movsb
bound
adc
sub
pop
adc
dec
bound
mov
lds
pop
and
mov
sub
xchg
sbb
jb
in
gs
mov
fcoml
sbb
push
sbb
adc
mov
jno
jnp
dec
lock
xchg
mov
leave
test
push
jbe
ret
incb
or
or
test
xor
lcall
js
test
negl
scas
fdivrl
and
cli
insl
lock
mov
bound
xor
clc
shr
cmp
xchg
repz
sub
movsb
shrl
push
jecxz
int3
and
test
pusha
mov
cmp
inc
xor
cmp
insl
add
xor
je
pusha
js
pop
lods
ret
fisttpll
sub
scas
push
push
frstor
mov
and
leave
dec
cmp
lcall
and
inc
insl
jnp
cmp
mov
dec
mov
lds
push
mov
in
push
enter
jmp
movsl
jbe
aaa
cmp
dec
sub
popa
pop
add
frstor
inc
cmp
xor
xchg
icebp
jb
xchg
dec
nop
fistps
lods
scas
xor
sbb
test
jge
mov
repz
pop
inc
dec
mov
bound
fwait
stos
add
push
mov
jne
loopne
testl
sub
mov
pop
in
jle
test
or
or
inc
bound
cmp
mov
popf
js
daa
inc
in
sbb
pop
rolb
cmp
outsl
push
aad
push
roll
jle
jb
lods
pop
sti
push
mov
loope
cmp
jo
add
lret
test
cmpsb
jns
add
clc
roll
cmp
fstps
cs
add
jecxz
inc
xchg
out
lcall
iret
mov
pushf
mov
inc
out
add
adc
or
dec
cwtl
or
decl
jl
cs
and
movsl
stc
mov
insb
xchg
data16
insb
mov
xor
pop
por
std
jle
pop
ss
mov
adc
lds
insb
pushf
stc
scas
scas
in
add
repz
dec
andb
inc
xchg
xor
pusha
stos
stc
adc
cmp
cmp
mov
fs
pop
cmp
lahf
divl
mov
xchg
adc
pop
cmc
mov
adc
leave
push
add
mov
rcrb
fsubrl
sub
adc
pop
imul
and
cmpsl
add
xchg
mov
push
mov
in
lock
iret
cmp
into
std
adc
cli
ja
ds
loope
fucomip
sub
test
or
sub
test
mov
stos
xor
adc
mov
xchg
cwtl
pop
pop
jmp
xlat
das
dec
add
icebp
iret
pop
jae
and
divb
mov
mov
mov
inc
outsl
jg
testl
movsb
test
andl
cld
lods
dec
sbb
movsb
andb
fisttps
je
jg
pushf
sub
cld
and
imul
push
adc
pop
mov
inc
pop
incl
fisubl
test
ss
sbb
jne
stc
shlb
movsl
add
xor
aam
std
cmc
daa
push
rorl
mov
push
mov
cmp
decl
fwait
and
ret
dec
ret
or
jnp
ja
push
ja
xchg
arpl
push
pop
test
mov
adc
rcrl
sbb
cld
out
xchg
bnd
pop
in
inc
in
sub
mov
ja
dec
adc
test
add
fistpl
loopne
in
inc
add
pop
jge
inc
insl
aad
cs
jle
mov
adc
and
mov
jp
add
cli
cmp
test
std
insb
cmc
xor
xchg
add
mov
lcall
insl
cltd
xchg
ja
aas
jl
mov
push
movsl
enter
and
cmp
sti
aaa
pop
inc
pop
and
jg
and
lret
std
les
mov
mov
jmp
sub
cmpsb
push
loop
out
dec
mov
imul
imul
cmp
cld
dec
push
inc
arpl
mov
jecxz
xchg
mov
jp
mov
and
jns
inc
cmovno
mov
in
adc
mov
mov
jo
imul
cmp
aaa
and
mov
push
adc
and
ljmp
in
icebp
lret
imul
std
jle
test
jnp
jo
dec
and
ss
and
test
mov
imul
push
insl
push
sahf
mov
out
clc
or
pop
repnz
cmp
stos
and
insl
stos
rclb
jno
sbb
cmp
stos
jg
cmp
pop
mov
sbb
out
xchg
dec
je
fiaddl
push
test
mov
repnz
mov
pop
fwait
jp
mov
lods
inc
xor
xchg
mov
lods
sbb
scas
inc
movsb
movsl
push
rcrl
xchg
mov
fnsave
inc
movntps
add
in
mov
into
dec
shrl
stos
push
in
out
jg
cmp
mov
add
pop
insl
mov
sti
aas
les
cmp
mov
scas
sub
bound
push
jmp
xlat
push
aad
xchg
ljmp
jl
dec
ss
inc
dec
push
sbb
arpl
sub
repz
inc
push
mov
ret
dec
or
lds
cmp
cld
pusha
xor
xor
mov
sub
rcll
inc
popa
sub
sbb
les
out
sub
push
pop
cmc
pop
fsubl
ja
sbb
dec
fstpl
orb
push
mov
sub
xlat
shlb
rorb
stos
adc
into
leave
movlps
xor
loop
xlat
jae
negb
inc
jp
repnz
and
out
dec
push
cmp
repnz
cmp
add
mov
mov
insl
xor
jne
mov
jbe
test
add
push
dec
dec
repz
inc
es
adc
dec
push
aam
push
adc
ficoms
push
or
outsl
push
pop
xor
rolb
push
fdivrl
outsl
cmp
daa
or
adc
test
int
fwait
adc
ret
cmp
cli
inc
int3
lret
cli
call
ret
adc
loopne
mov
es
aas
aaa
jo
ret
jecxz
inc
xor
xlat
jae
sub
or
jecxz
xor
imul
pop
xchg
mov
out
mov
jl
push
fwait
scas
test
jecxz
jle
lock
xlat
out
testl
jnp
adc
pop
mov
outsb
cmp
insb
insl
inc
mov
push
xor
mov
and
pop
mov
pop
dec
in
cmp
ss
stos
mov
inc
out
outsl
iret
cwtl
jne
xorl
push
andl
sbb
pushf
popl
push
mov
daa
mov
lahf
test
jnp
je
call
adc
inc
xchg
shll
push
pop
rol
xor
add
bnd
push
cs
dec
push
movsb
mov
fs
push
loop
xor
pop
xchg
jp
xchg
jno
bound
std
iret
imul
testl
and
pop
cmp
mov
push
xchg
and
cs
mov
mov
testb
mov
inc
jo
stos
into
arpl
cwtl
imul
loopne
jnp
out
push
pop
cwtl
cmp
lds
adc
outsb
mov
dec
fcom
jns
mov
mov
decb
jno
push
scas
outsl
cli
test
add
pop
ffreep
inc
rol
out
cmp
ret
mov
cmpsb
cld
shl
mov
adc
and
inc
mov
stos
test
lret
loope
mov
jns
push
cmp
shr
jo
mov
adc
xor
fwait
in
int
lods
ja
subl
and
sahf
aaa
lret
enter
sarb
movsb
push
dec
loopne
shl
mov
addr16
sbb
shl
hlt
pop
loopne
outsl
or
inc
sbb
outsb
push
pop
add
jl
jne
inc
and
popa
inc
out
pop
popf
out
pop
jecxz
sahf
adc
cwtl
sbb
add
aam
imul
xchg
jbe
pop
mov
or
movsb
mov
lods
or
sub
subb
push
push
push
push
stos
sub
mov
jle
push
cmpsb
ffree
lock
jb
out
jg
jmp
adc
repnz
in
rcrl
mov
pop
cmp
push
inc
push
sbb
pop
dec
pop
pusha
pop
push
cld
pop
push
shr
jp
fcomi
call
mov
pusha
dec
push
push
pop
rcrl
lods
cld
sub
cmp
cli
mov
aam
cli
clc
push
or
mov
push
cmpsl
scas
cmc
adc
hlt
dec
mov
mov
into
pushf
inc
xor
mov
nop
add
sbb
int3
sub
mov
sub
ds
popa
mov
mov
inc
fiadds
mov
jecxz
lret
cmpl
add
out
jns
push
das
dec
mov
ja
cmp
push
adc
jmp
arpl
adc
es
push
pop
or
jne
cmp
xchg
arpl
xor
int3
xor
int
adc
cs
and
imul
insb
test
xor
fs
stos
fucom
addr16
icebp
mov
bound
stc
mov
xchg
pop
sub
mov
xchg
push
in
pop
jnp
fwait
pop
jae
mov
lcall
jnp
ds
push
jmp
test
mov
mov
cld
gs
enter
outsl
fsubr
inc
out
shlb
jb
lret
sbb
jg
lret
push
fs
push
cs
inc
lahf
sub
arpl
mov
xchg
bound
pop
scas
out
jnp
pushf
mov
sar
out
cmp
sbbb
add
lahf
inc
int3
lock
dec
scas
frstor
fs
pop
mov
int3
imul
pop
cltd
lahf
sub
mov
popf
sub
mov
imul
xor
addr16
mov
and
xchg
popa
xor
push
push
loopne
clc
rolb
addr16
pop
xchg
lcall
sahf
cltd
aad
jae
scas
xchg
daa
xor
ja
sbb
jb
mov
push
inc
out
and
out
movsb
nop
sbb
test
in
dec
add
pushf
pop
lods
cmp
rcrw
mov
aaa
mov
cs
or
ds
push
xchg
adc
cmp
movsb
sub
and
sbb
popf
push
pop
hlt
xor
cmp
jmp
mov
xchg
aam
leave
outsl
dec
cld
cmp
jns
test
push
mov
dec
sub
mov
lret
fcmovu
mov
loopne
fistps
jnp
mov
xorb
ret
mov
inc
in
popa
outsl
xchg
cltd
xchg
pop
fidivrs
imul
lea
mov
sbbl
xlat
push
pop
stc
dec
inc
push
or
vcvtpd2dqy
pop
movsb
xor
stos
mov
in
les
lea
dec
pop
ja
scas
fsubs
hlt
push
jne
xor
mov
or
lcall
and
je
pushaw
cmp
push
xchg
lods
push
push
adc
imull
out
gs
iret
stc
cli
aas
sbb
push
test
or
out
icebp
out
dec
dec
test
sbb
jmp
ret
lret
sar
stos
ja
mov
popf
xor
fmuls
cld
jo
shrl
inc
fwait
inc
mov
jl
pop
xor
cli
gs
imul
pop
dec
jecxz
addl
clc
into
icebp
mov
jecxz
pop
jns
orl
repnz
jg
add
imul
incb
sub
lahf
sub
push
mov
mov
or
test
inc
jne
jmp
inc
mov
or
sub
testl
sbb
inc
lods
xor
ljmp
or
call
enter
call
lea
inc
adc
std
andb
pop
imul
aam
mov
cmc
xor
movsl
cmp
out
pop
cmpsl
sbb
pop
rcll
xor
hlt
jp
scas
mov
mov
stos
lds
mov
cmp
pop
sbb
adc
mov
imul
pop
cltd
roll
mov
sti
push
inc
dec
adc
adc
popa
out
push
jb
dec
cmp
inc
jle
fists
cmp
add
inc
jp
lret
sub
pop
sub
push
jle
push
imull
lock
sbb
bound
and
mov
cmpsl
lds
xchg
out
mov
adc
pushf
sahf
aad
dec
pop
stos
mov
xor
vandnpd
adc
cmp
xor
xlat
scas
inc
mov
loop
aas
testb
shr
bound
jmp
scas
pop
push
fs
lret
inc
stc
mov
ja
mov
mov
push
mov
pop
leave
mov
xchg
fimull
cltd
fadd
mov
rolb
sbb
aaa
cmpl
popf
mov
xor
cli
pop
inc
pushf
stos
cmp
fimull
adc
test
or
fistpll
daa
sub
xor
and
js
ljmp
mov
scas
add
dec
ja
jo
sbb
in
lods
leave
mov
mov
add
test
ss
pop
fldl
cmc
dec
aam
std
inc
cs
cmpsl
xchg
push
mov
sub
push
in
pop
dec
pushf
sbb
fbld
adc
test
xor
and
cld
inc
cli
inc
xor
dec
sub
cmp
out
imul
std
add
rorl
int
out
pop
scas
aaa
test
push
popf
pop
sti
cltd
in
cmpl
push
repz
inc
xchg
cmpsb
daa
sbb
mov
push
xor
lock
inc
mov
pusha
cmp
jmp
xor
cwtl
add
out
mov
sub
push
in
ret
mov
fcoml
pop
test
lods
sub
dec
inc
sbb
push
roll
push
dec
sub
xor
lret
jb
imul
mov
sbb
xchg
stos
pop
jl
mov
aam
repnz
mov
fbstp
gs
xor
pop
inc
jle
fdivr
mov
xchg
lret
jo
xor
sbb
ss
shlb
pop
or
sti
mov
int
test
jns
outsl
cmpsl
sbbb
rcrl
nop
hlt
cmp
nop
aad
lea
dec
subl
aaa
mov
mov
mov
add
xor
pop
arpl
push
popf
and
and
jmp
addr16
aaa
test
cmp
je
hlt
inc
arpl
repz
je
cmp
std
xchg
xchg
or
push
out
and
lea
jbe
out
mov
jmp
movsl
jno
std
pop
scas
clc
cmp
jae
adc
aaa
mov
cwtl
sar
fmul
nop
mov
mov
fiaddl
mov
repz
hlt
iret
cltd
inc
fsubrl
movl
jo
xchg
xchg
cmp
int3
mov
push
adcb
lret
jle
add
push
inc
adc
dec
and
insb
and
add
lds
xor
es
stos
scas
orb
imul
add
hlt
pop
jb
pushf
add
cmpsb
push
mov
sarl
xchg
or
push
xor
iret
mov
inc
jecxz
mov
sbb
or
mov
sbb
jb
pop
dec
pop
jno
rcr
adc
and
dec
aas
insl
testl
push
icebp
aam
pop
cli
popa
cmpsl
adc
xor
xlat
stos
mov
into
nop
imul
push
in
loope
mov
int
dec
xchg
fldcw
loopne
add
sub
inc
ret
mov
sbbl
lds
cmpb
mov
cmpl
sub
adc
xor
cvtdq2ps
adc
cmpsb
das
ror
shlb
lahf
cli
mov
mov
out
scas
sbb
incb
mov
pop
cmp
cmp
test
das
mov
cwtl
imul
loope
add
std
fldenv
lcall
jae
loop
daa
dec
jge
addr16
leave
xor
jg
mov
sub
popf
or
addb
sbb
jno
scas
lret
sub
and
or
lods
cs
fldt
out
pop
outsb
push
out
xchg
xor
lahf
xor
loopne
sbb
mov
jnp
and
jmp
aad
out
in
mov
into
jb
insb
sbb
pusha
int3
push
out
mov
imul
bound
push
add
call
push
out
add
push
push
jmp
xlat
inc
daa
das
decl
in
and
or
and
test
mov
stc
aaa
adc
adc
clc
lahf
sbbl
fdivrs
or
mov
add
adc
cmpsl
xchg
cmc
pop
in
test
adc
dec
pushf
or
icebp
jl
notl
dec
lods
or
imul
cs
or
mov
ret
add
pushf
lcall
cs
mov
push
fnstcw
lahf
sbb
xchg
jge
and
stos
pop
xchg
in
pop
push
ljmp
jle
stos
adc
cmp
ret
hlt
mov
mov
or
fisttps
sub
aad
jecxz
pop
pop
fistpll
xchg
xor
mov
bnd
and
mul
inc
xlat
or
lret
push
fstpl
push
into
jo
cmc
dec
mov
fwait
or
f2xm1
fs
push
jo
aas
gs
sbb
scas
jne
sbb
lret
ret
in
mov
xchg
or
xchg
pop
jno
shrl
mov
movsl
jp
test
sbb
icebp
sbb
push
mov
jmp
rorl
jmp
push
mov
cmp
aaa
cwtl
mov
cmpsl
inc
cwtl
sub
pop
mov
cmp
insb
stos
and
mov
call
mov
into
push
pop
stc
dec
insb
jns
dec
stos
push
cld
out
aas
rclb
into
shrb
push
outsb
popa
xchg
dec
inc
inc
lret
fcompl
xchg
push
mov
xor
loopne
and
pusha
mov
ljmp
dec
outsl
add
loop
push
jo
mov
daa
movsl
sbb
test
jmp
aad
or
scas
inc
cmp
dec
adc
in
dec
cmp
jae
adc
aad
dec
addr16
pusha
pop
mov
or
scas
cmpsl
mov
punpcklwd
ss
jnp
fwait
and
packuswb
sahf
sbb
push
test
cmp
mov
fadd
in
sbb
jns
xchg
cwtl
imul
mov
js
out
lcall
nop
ret
arpl
adc
out
xchg
aaa
jo
test
sub
mov
cli
mov
mov
test
in
mov
xchg
push
lahf
fadds
and
jge
fsubrl
inc
cmc
mov
sub
and
cli
push
xlat
adc
push
popa
dec
cmp
jp
inc
pop
cmp
arpl
lcall
cli
or
jmp
adc
jb
xor
xchg
sar
data16
cli
sbb
mov
test
in
test
subl
xor
ljmp
pusha
push
jge
jno
jne
es
pop
cmp
ds
call
pop
gs
jns
test
inc
cmp
push
jb
dec
xor
add
xor
xchg
test
repz
repz
push
add
addb
xor
pop
divl
lret
out
rcrb
mov
cmp
sub
adc
ret
push
lock
xchg
test
cmpsb
out
repz
cltd
xchg
arpl
jo
lret
xorb
jbe
adc
lret
xchg
add
popl
pushf
nop
ja
bound
je
jnp
push
andb
sbb
xchg
dec
iret
loope
mov
ret
movl
sub
repnz
jge
jo
pop
outsl
stc
sub
inc
loopne
add
mov
push
or
push
dec
les
adc
into
test
sahf
add
mov
imul
or
dec
loop
aam
xlat
sbb
js
in
cmpsl
movsl
cmp
ror
rolb
fdivrs
sbb
aad
and
dec
mov
mov
xor
lods
mov
inc
pop
add
xchg
iret
pop
out
sbb
xchg
data16
inc
in
dec
pop
testb
rcll
insb
sbb
into
lea
lds
xor
mov
add
xchg
mov
push
pop
cmc
sarb
ret
lahf
cmpsl
loop
mov
mov
xchg
adc
hlt
ja
add
xchg
cmp
adc
addl
or
lock
cmpsl
adcb
lcall
sarb
push
dec
push
fwait
mov
stc
add
inc
push
inc
sti
shlb
pop
in
stos
imul
mov
fstl
adc
jne
stc
fistpl
popf
rcrl
dec
jmp
adc
pop
xchg
and
adc
pop
xor
or
out
sti
mov
aaa
xchg
xchg
out
out
dec
cmpl
jmp
adc
mov
rorl
mov
imull
insb
inc
hlt
jbe
inc
aad
push
xchg
xchg
repz
arpl
jo
in
push
jle
or
lods
aaa
mov
pop
aad
rcrb
sbb
adc
xor
push
hlt
in
int3
jmp
and
bound
mov
cmp
int3
in
shll
xchg
cmp
pushf
sbb
es
bound
ret
adc
leave
cli
adc
xchg
xchg
xorb
add
inc
dec
ret
pop
and
cwtl
pop
cmp
and
shr
mov
in
sarb
loope
das
cli
or
fmuls
mov
sbb
cmpsl
sub
loope
cs
adc
push
pop
mov
sbb
popa
insl
clc
dec
xor
int3
pop
enter
je
addb
dec
dec
out
outsb
notl
xchg
pop
xchg
pop
pop
sar
out
pop
jo
sub
inc
pop
stos
popf
mov
jbe
subl
cmp
adc
lcall
add
faddl
and
mov
stos
jnp
ljmp
mov
aad
or
jbe
jmp
sub
dec
lret
adc
out
cmpsb
sub
mov
jns
pop
mov
cmp
lcall
push
popf
mov
and
lahf
mov
mov
mov
and
aam
lret
mov
scas
jbe
into
adc
mov
jbe
fdivrs
movsl
popa
out
sub
mov
push
inc
push
mov
data16
repnz
pop
subb
out
adc
adc
stos
dec
nop
ljmp
out
mov
iret
and
add
mov
sahf
mov
mov
xor
pop
lock
stc
and
js
mov
push
adc
add
push
sbb
fcomi
insb
push
pop
push
clc
je
fstps
add
mov
jle
addr16
or
push
insb
push
pop
xor
stc
aam
pop
les
jne
fisubrs
ficomps
out
out
pop
jno
jne
stc
jnp
scas
pop
dec
jne
mov
sbb
mov
mov
push
outsl
push
cltd
imul
fimuls
push
push
and
and
push
lret
ficomps
and
push
comiss
scas
fdivrp
xor
aad
sbb
adc
mov
jae
and
lods
nop
out
sbb
sub
mov
div
sub
add
push
cwtl
hlt
mov
fistl
jp
ja
adc
cmc
out
jmp
clc
mov
imul
sub
mov
xchg
std
adc
and
frstor
and
mull
test
xor
aaa
ds
dec
cltd
out
stos
pop
stc
ds
mov
sub
outsl
not
adc
mov
dec
daa
pop
fisubs
push
push
cld
iret
test
mov
fsts
fnstenv
in
inc
std
cli
mov
pusha
fcoms
stos
pop
push
mov
leave
cltd
in
aad
scas
inc
dec
out
js
lods
out
pop
sub
or
sbb
sub
in
lret
addb
stc
push
pop
lock
ds
insb
movsl
scas
mov
out
loop
loop
cmp
shlb
sarb
aam
je
shrl
rcrl
fcmovb
jne
outsb
popa
or
lahf
cmpsl
and
imul
clc
add
lret
fimull
les
pushf
pop
js
xor
lods
lds
cmpsl
push
adc
pop
addr16
out
in
cmpsl
insl
out
adc
loopne
cmpsl
mov
mov
lds
cmp
push
bound
gs
xchg
inc
lea
repz
or
mov
cltd
out
das
daa
push
push
and
mov
iret
cwtl
rcr
sub
imul
insl
dec
pop
orb
addr16
sbb
mov
fisubl
mov
adcb
sbb
and
mov
repnz
mov
into
imul
int3
dec
sar
hlt
mov
shll
ret
and
out
mov
mov
lds
jecxz
in
ljmp
adc
xchg
movsb
pop
divb
push
pop
mull
pop
mov
and
sbb
sub
xchg
shl
mov
mov
jmp
mov
push
mov
scas
push
addl
les
sub
push
dec
dec
push
jmp
in
pop
test
ljmp
cmpsl
dec
out
js
popa
cmpsl
ds
jae
pop
daa
lods
loope
and
imul
test
adc
idiv
mov
mov
xor
mov
mov
ja
pop
aad
test
dec
movsl
sahf
sub
idivb
leavew
inc
adc
inc
idivl
mov
pop
dec
les
out
testb
push
mov
enter
cld
dec
sbb
push
jl
mov
mov
pop
sarl
pop
fsubl
aad
lea
lret
mov
ret
jbe
repz
ljmpw
xor
shr
inc
test
mov
adc
mov
out
dec
test
ljmp
xchg
mov
inc
fistpl
add
adcl
movsb
cmpsb
jg
pop
je
jg
sbb
lret
push
or
mov
mov
movsl
mov
pusha
push
in
dec
xchg
imul
adcl
mov
mov
cs
push
ds
xchg
fsubr
imul
andl
push
pop
hlt
or
or
or
in
push
push
sbb
ljmp
sub
repz
inc
dec
dec
addr16
gs
gs
out
fs
and
loop
inc
mov
mov
imul
jecxz
add
and
cmp
fiaddl
outsb
and
sbb
cwtl
sub
fidivrl
inc
lret
or
xchg
pusha
in
outsl
test
jne
mov
mov
outsb
add
leave
nopl
xchg
sub
aam
shrb
mov
mov
jg
jp
lock
loopne
mov
jp
repnz
jae
jb
in
notb
push
mov
jno
xchg
sti
mov
push
loope,pt
and
mov
dec
das
cltd
inc
adc
int3
mov
divb
pushf
and
pop
lret
adc
push
jns
shr
cmpsl
inc
cmp
push
jg
adc
xor
inc
push
and
pop
fcomi
or
dec
lcall
mov
pop
add
inc
out
cmpsl
out
adc
je
hlt
jp
jle
xchg
push
outsl
mov
and
loop
mov
mull
ljmp
mov
fadds
popf
lret
sbb
aaa
or
outsb
cs
push
ds
jge
outsb
push
in
xor
xchg
testl
sbb
pop
dec
fstps
addr16
lret
cs
pop
jae
mov
hlt
fs
sti
sbb
fucomi
test
push
xchg
inc
pop
fwait
addr16
add
lcall
dec
xchg
leave
xor
mov
outsl
cmp
adc
cs
out
stos
insl
pop
xchg
cmpsb
mov
roll
popa
addr16
pop
orb
bound
shrb
cmp
fcmovne
lcall
outsb
popf
mov
xchg
daa
ret
xlat
jae
push
sbb
and
loope
fnsave
shll
lods
sbb
and
idivb
outsb
mov
inc
xchg
bound
cmp
addl
out
mov
jmp
in
cli
lahf
mov
or
mov
lods
ret
lret
inc
shr
mov
mov
sbb
add
jecxz
popf
shrb
dec
mov
test
jmp
movsb
movsl
fdivs
int3
mov
lahf
inc
iret
mov
cmp
inc
or
mov
fiadds
aas
jno
adc
les
inc
or
loopne
dec
pop
xchg
shr
loop
pop
and
leave
or
je
push
sar
rcrl
pop
call
std
popa
in
das
or
repz
mov
inc
stc
mov
pop
sub
xchg
cmp
sbb
mov
jmp
inc
mov
push
out
addb
pop
jmp
imull
clc
jecxz
mov
pop
fs
mov
out
xor
sub
sub
stc
ret
push
shl
or
add
in
jecxz
pop
in
add
stos
and
cmp
xlat
iret
pop
inc
out
jge
and
xor
std
in
leave
and
js
xor
lods
in
ret
fwait
push
xchg
sbb
aas
sub
sub
or
pop
pop
push
cmpsb
fstpt
sbb
pop
sbb
pop
dec
xor
out
aas
mov
cmp
add
out
fsubs
hlt
scas
stc
ret
ret
inc
in
addr16
or
xor
mov
lods
sub
aad
mov
jecxz
ja
jmp
loop
jmp
jecxz
gs
mov
jnp
push
dec
fmulp
mov
dec
cltd
or
idivl
mov
xor
stos
xchg
mov
push
dec
mov
mov
or
outsb
push
jecxz
movsl
dec
cwtl
push
mov
jbe
dec
movsl
xchg
jecxz
sbb
and
add
sbb
sbb
lds
lret
fiadds
outsl
cmp
dec
stos
xchg
add
cmpb
outsl
sar
outsl
mov
adc
sbb
lret
jle
inc
ja
mov
pop
cmp
mov
sub
call
sub
shlb
sub
pop
adc
xchg
scas
jns
mov
inc
and
sub
jle
pop
ret
cltd
mov
movsl
add
pop
mov
cmpsl
nop
enter
xor
add
pop
sub
bound
gs
lret
data16
dec
shl
or
in
pop
mov
dec
jbe
fs
mov
inc
add
pop
sti
nop
ret
cltd
or
mov
pop
inc
stos
add
lcall
imul
push
add
daa
fs
faddp
push
mov
push
cmpsl
les
jnp
and
lods
sub
ficoms
sarb
test
mov
shrl
mov
pop
adc
cmpl
jae
jmp
out
pop
nop
sbb
fcomps
sbb
jb
addr16
or
and
ret
mov
xchg
ret
or
mov
jmp
ljmp
jno
gs
push
pop
sub
fnstsw
pop
or
lods
aas
cmp
sbb
loopne
jmp
add
rcll
in
mov
enter
sbb
xor
mov
xor
ret
jle
ljmp
pop
mov
mov
xchg
aam
adc
pop
dec
xchg
sti
fidivrs
lcall
loopne
xchg
inc
and
ja
repz
xchg
in
bts
push
xlat
jle
sti
popf
jb
and
test
shlb
addl
jge
fdiv
arpl
les
pusha
push
jg
rcrb
mov
loope
or
push
or
out
push
pushf
repz
mov
pop
pushl
jg
push
adc
loope
cmpsb
andl
push
sub
cmp
sahf
jl
enter
mov
adc
xchg
jo
cmp
fidivs
mov
sbb
mov
jnp
gs
jl
outsl
mov
divl
fiaddl
pop
stos
outsb
push
adc
enter
loopne
shll
pop
sarb
test
pop
xchg
imul
rorl
push
test
fcompl
jl
or
mov
inc
push
sub
gs
sub
add
mov
imul
imul
push
popa
mov
add
movsl
inc
ja
sbb
imul
dec
jb
sbb
aad
inc
add
and
sbb
int
add
or
cmp
cmp
lret
xchg
lds
mov
int3
sbb
mov
pop
int3
iret
mov
sbb
xchg
insl
mov
bound
cltd
out
ret
sbb
dec
iret
cmp
mov
jmp
sbb
inc
push
and
outsb
mov
popf
fidivrs
ficoml
push
ja
or
test
jp
xchg
push
leave
xor
gs
leave
cmp
push
sub
fnstenv
dec
jnp
ja
sti
stos
rorb
mov
jne
out
jg
aas
jge
aad
mov
cli
inc
push
mov
mov
push
nop
jg
dec
mov
iret
ret
lcall
adc
mov
mov
insl
rol
icebp
sbb
jne
mov
and
add
adc
xchg
add
cmp
int
adc
pop
lock
fsts
mov
cmpsb
in
daa
sbb
popf
sbb
add
popf
xor
movsl
sub
jge
into
decb
dec
ficompl
xchg
cld
push
mov
sbb
leave
push
pop
push
bound
ds
fnstsw
bound
inc
xchg
cmp
pushl
or
mov
gs
nop
sbb
mov
mov
pop
and
imul
jb
mov
cltd
ret
dec
adc
lcall
cwtl
adc
int3
in
ret
loop
loopne
mov
outsb
cmpsl
pop
popf
lret
add
jmp
aam
sbb
scas
cmp
lods
adc
xchg
mov
adc
lods
fildll
loop
xchg
push
stos
mov
xor
fs
push
mov
sbb
xchg
cli
pop
cmp
mov
and
loope
mov
jg
add
xchg
push
sub
push
cmp
mov
xchg
sub
mov
clc
push
add
xchg
cli
std
stos
adc
dec
add
filds
cmp
jmp
dec
test
and
out
pop
push
ss
or
in
jge
loopne
negl
shr
icebp
adc
adc
mov
sub
jle
lcall
mov
iret
nop
nop
lea
mov
push
aam
push
clc
rolb
jmp
mov
popa
cmp
js
xor
hlt
rorl
in
hlt
daa
inc
push
test
adc
push
cmpsb
mov
int3
push
and
mov
push
jl
xabort
pop
fs
mov
add
push
xor
mov
fs
mov
data16
push
scas
push
dec
loope
ljmp
jle
and
cmc
aas
push
cs
popf
das
sbb
mov
and
jmp
into
popa
out
push
dec
jmp
cmp
xlat
sbb
imul
mov
in
daa
cltd
sbb
mov
sbb
arpl
inc
lock
pop
imul
mov
das
add
rep
push
dec
stos
jg
std
jg
in
outsl
xor
push
fcoms
cli
pop
ja
daa
and
dec
iret
ret
popf
scas
test
xchg
sahf
inc
out
shll
arpl
cmp
sahf
mov
or
inc
cmpsl
movsl
or
lcall
sbb
sbb
rcl
mov
sarl
push
push
pusha
jne
popa
clc
push
mov
push
lods
mov
push
cmp
xor
test
mov
xor
lock
or
es
mov
daa
xorb
test
add
mov
cltd
xor
stos
mov
lods
loop
pop
std
rcll
sub
data16
arpl
jb
pop
out
cwtl
adc
pop
out
dec
and
lea
ficoms
mov
sti
loop
in
mov
out
into
cmp
rcll
popf
mov
in
pop
shl
sub
arpl
xchg
ror
incb
in
pushf
push
xor
rclb
cltd
lods
shll
jg
cmpsb
rcrl
sub
and
mov
mov
jne
aad
pop
adc
dec
test
add
popf
jge
inc
dec
imul
insl
insl
dec
data16
xchg
cmc
cwtl
jg
rcrl
test
xchg
pop
lcall
or
xchg
cmp
mov
jg
pop
xlat
inc
push
dec
add
cld
jge
adc
mov
xor
enter
push
sbb
add
and
popf
add
mov
leave
cmp
mov
dec
push
repnz
adc
xor
xor
or
repnz
into
mov
lock
cmp
into
leave
lcall
dec
inc
xchg
push
sti
fstps
inc
out
in
or
add
lea
rolb
lret
push
shrl
mov
jns
inc
mov
ljmp
gs
int3
imul
ds
pop
jbe
sub
mov
jb
jecxz
sbb
push
inc
ljmp
mov
add
mov
xchg
inc
test
mov
adc
pop
mov
push
mov
out
push
cmp
lods
test
mul
dec
psrlq
ljmp
imul
xchg
mov
shrb
imul
and
mov
adc
test
dec
notl
ljmp
mov
push
sahf
mov
and
pop
xchg
add
into
lcall
cmp
clc
add
adc
mov
call
loop
icebp
outsb
popa
int3
mov
inc
aaa
jmp
dec
dec
dec
mov
pop
in
fwait
mov
test
mov
lock
stos
leave
sbb
mov
cmp
lods
ds
stos
xor
lret
movsb
fs
call
lods
add
stos
pushl
test
inc
pop
pop
cli
test
push
xor
lods
bound
and
sbb
fstps
jp
mov
scas
pop
repnz
sub
ljmp
and
pop
loopne
test
jecxz
mov
lds
cwtl
pop
lret
sbb
cwtl
adc
or
hlt
adc
pop
in
mov
movsl
xchg
addr16
repnz
subl
add
mov
sahf
push
mov
or
shrl
dec
adc
jbe
xlat
mov
insl
sub
dec
mov
dec
inc
xchg
pusha
pushf
scas
or
fidivrs
xor
scas
stos
xlat
rcrb
xorl
or
addr16
add
imul
call
stc
mov
mov
sub
adc
mov
push
mov
lcall
pushf
out
in
loopne
or
movsl
lcall
sbb
xor
ja
paddq
inc
push
lods
lock
mov
mulb
jns
movsl
out
enter
or
mov
aad
repnz
mov
rolb
rcr
jb
push
aas
push
rcll
in
scas
sbb
xor
add
sbb
dec
outsb
ds
xchg
push
lahf
pop
mov
or
imul
nop
push
cs
pop
loopne
lret
addb
iret
cmp
je
bound
les
fbld
jo
sub
push
inc
jbe
jbe
add
push
repz
lret
outsb
push
dec
xchg
xor
ja
pushf
adc
jl
imul
rol
test
add
push
insb
pop
xor
ljmp
pusha
cld
mov
add
dec
cltd
cs
push
hlt
mov
fistl
dec
movsl
insb
insb
test
cmp
mov
rclb
movsl
nop
xlat
dec
scas
stos
inc
fucomip
mov
sub
fwait
cli
sbb
jo
sub
mov
test
lret
jnp
inc
adc
jge
call
push
mov
mov
mov
aam
cmp
cmpsb
cmpsl
jg
or
mov
jne
imul
push
dec
sub
aad
sbb
inc
jns
sub
mov
jp
into
mov
cwtl
movsl
loopne
mov
push
mov
mov
or
lock
add
xchg
sbb
lds
dec
mov
adc
mov
mov
xor
inc
dec
les
rol
shr
mov
mov
mov
mov
xchg
loope
cmpsl
cmpsb
aam
pop
out
cmp
jne
lcall
sub
fcompl
pop
jge
lods
aas
pusha
pop
sbb
je
pusha
pushf
cmc
dec
arpl
insb
addr16
xor
nop
and
idivl
push
into
xor
and
and
fstpl
pop
arpl
sbb
test
mov
pop
imul
mov
fisttps
pop
fdecstp
in
add
xor
dec
mov
and
leave
daa
mov
inc
sbb
fistpl
or
pop
mov
fbstp
cld
cmc
mov
incl
cmp
dec
cld
lcall
sbb
jecxz
aam
outsl
sub
and
inc
or
daa
shl
ds
dec
jge
mov
cmpsb
xchg
push
je
mov
mov
jle
add
jmp
iret
adc
in
mov
mov
dec
pusha
dec
pop
out
dec
les
pop
cmp
lret
scas
ja
adc
xchg
leave
lock
shl
push
aaa
cmp
popa
jecxz
loopne
xchg
mov
shll
hlt
orl
push
xlat
and
mov
dec
push
cmp
cmp
add
js
jg
push
in
push
jne
and
pop
dec
adc
add
jns
adc
ss
xor
pop
xor
fdiv
pop
fdivs
popa
aad
lea
rcrb
cwtl
movsb
dec
lds
loopne
aas
test
add
push
insb
inc
mov
lret
clc
hlt
fs
dec
jmp
fimuls
cmp
pop
hlt
xor
jmp
movsl
adc
xlat
imul
mov
dec
mov
fldl
fistps
sub
insl
rcrb
push
xor
pop
dec
std
jb
and
in
mov
jg
and
pop
hlt
aam
roll
sysexit
jb
cltd
repz
ss
push
adc
outsl
or
mov
gs
jbe
mov
repz
cld
pop
clc
ret
sbb
mov
add
std
ss
cwtl
inc
ror
addl
jae
pop
adc
hlt
js
scas
sbb
sti
clc
cmp
ror
mov
dec
xlat
cmc
xlat
cli
jmp
pop
and
dec
add
insl
pop
pop
sahf
ret
lods
loop
sarb
jb
mov
xchg
cwtl
and
frstor
sbb
loope
cmp
ret
push
inc
cmp
stc
rolb
pushf
add
stos
stc
xchg
pop
lret
and
ret
xchg
les
xchg
hlt
xchg
sub
ret
lock
dec
and
data16
jo
dec
lock
adc
les
sub
aad
and
lcall
lock
cmp
adc
mov
cmpsb
inc
cmp
test
mov
mov
and
loop
aam
jecxz
out
mov
call
sub
cmp
ret
xchg
push
iret
jp
xchg
or
lea
movb
loop
sub
aam
dec
mov
cwtl
xchg
pop
or
cs
adc
cmp
or
dec
adc
xorl
loop
fwait
add
sbb
or
test
mov
lods
adc
adc
mov
in
aad
jae
and
scas
dec
es
pop
pop
xlat
cmp
adc
push
mov
dec
xor
and
fnstcw
or
movsb
test
add
packsswb
xchg
popf
adc
cmp
mov
jle
sti
gs
xor
movsl
xchg
rolb
cmc
mov
loopne
cltd
cmc
out
mov
mov
inc
movsl
dec
rclb
mov
dec
mov
lret
stos
loop
cmp
iret
dec
mov
mov
xchg
lock
add
xchg
loope
les
mov
push
inc
sahf
ss
xchg
sub
lret
mov
and
out
enter
inc
xor
push
test
cli
rcr
and
adc
mov
sub
aad
xchg
pop
inc
in
sbb
push
mov
jecxz
jbe
inc
movsb
mov
fldl
repz
stos
adc
lcall
mov
stos
cmp
lock
ljmp
mov
sahf
out
fdiv
jne
imul
sahf
adc
mov
fisubrs
decl
sahf
shl
sbb
xchg
fisubs
adc
cmp
fisttpl
loop
and
mov
shlb
mov
xor
add
pop
outsb
xchg
mov
test
mov
jle
sbb
mov
jecxz
inc
mov
xchg
shrl
pop
jge
push
ss
fisttpl
out
sub
popf
lcall
imul
lods
dec
loope
js
ret
xor
or
aas
cmp
jne
int3
std
mov
testl
push
movsb
push
test
insb
out
xor
fdivrs
call
xor
lret
xchg
in
popa
or
fld
inc
repz
sar
cs
das
dec
sbb
out
and
leave
inc
and
pushf
and
jo
in
pop
xchg
xchg
cmpsb
push
sbb
je
arpl
call
aad
inc
xor
loopne
in
dec
push
fisttps
jb
xchg
lret
cmc
int
pusha
loopne
and
orl
leave
bswap
and
jo
xor
inc
mov
sbb
lds
iret
ret
es
sbb
icebp
mov
daa
mov
jg
and
xlat
pop
mov
fcompl
and
mov
in
and
mov
mov
push
lahf
or
push
mov
xorb
divb
lock
cwtl
or
clc
xchg
and
mov
dec
sub
rclb
into
and
sti
jl
lock
or
push
ja
mov
xchg
sets
cli
adc
add
inc
cmpsl
mov
stc
dec
inc
les
or
jge
xorl
iret
sbb
aam
je
lret
stos
pusha
pusha
in
xchg
inc
push
ljmp
pop
pop
jmp
std
std
xor
xor
rcr
lods
popf
out
inc
sbb
and
mov
mov
or
sub
and
lcall
jns
jno
stos
jns
mov
sub
pop
or
enter
xor
stos
ljmp
mov
and
mov
out
sbb
sti
ficoml
pop
xor
add
push
ljmp
jg
sub
push
rol
testl
in
les
sti
mov
sub
add
push
out
dec
and
es
push
pop
filds
mov
clc
xor
dec
lods
call
shl
inc
js
sarb
lret
pop
je
sbb
dec
mov
sub
pop
adcl
mov
push
shl
push
inc
ja
cmp
mov
cmpsl
push
xchg
insb
mov
and
outsl
mov
sub
push
dec
pushf
mov
inc
nop
mov
popa
pop
fsubs
xor
inc
inc
outsb
inc
cmp
pop
sbb
bound
inc
mov
mov
int
sub
fwait
jmp
push
insb
adc
mov
rorl
adc
ds
rol
into
push
repnz
pusha
jecxz
mov
clc
xchg
cltd
mov
lock
jns
and
sbb
adc
xchg
dec
push
in
or
xchg
inc
std
or
add
cltd
imul
add
orb
test
mul
or
dec
nop
push
pop
sbb
ret
push
lcall
dec
inc
or
loope
or
lret
subl
push
add
mov
cld
sub
pop
adcb
add
xor
dec
jo
dec
lcall
dec
outsl
mov
insl
mov
dec
mulb
ret
mov
rcll
jl
sbb
js
mov
lods
in
xor
in
and
mov
insl
add
xchg
mov
inc
rsm
negl
add
ljmp
adcb
ljmp
sbb
pushf
xchg
sbb
xlat
push
jmp
sbb
xchg
lcall
aad
addl
call
es
out
sbbl
mov
dec
loop
inc
pop
dec
cld
nop
mov
mov
fs
dec
fdiv
mov
mov
enter
inc
sub
mov
fcomi
lret
sbb
in
lahf
jg
sbb
scas
ds
and
adc
rcll
pop
push
out
inc
pop
cwtl
les
in
cmp
mov
or
xchg
cmp
push
adc
push
push
in
ds
shlb
jns
pop
push
shlb
jge
or
cmp
pushf
insb
jle
inc
sbb
addr16
and
pop
in
pop
mov
popa
lahf
mov
mov
cli
mov
mov
leave
scas
mov
outsb
xchg
mov
push
sti
xor
dec
rorb
xchg
dec
stos
xchg
inc
vmwrite
push
mov
cmp
lock
rcrl
pop
lcall
dec
mov
or
mov
xor
mov
adc
fwait
in
cs
mov
pushf
mov
mov
loope
mov
jge
jge
xchg
mov
push
les
ret
xor
js
push
mov
adc
adc
divb
stc
iret
std
jg
mov
cld
pop
pusha
cmpsb
mov
pop
inc
outsb
mulb
test
add
jecxz
sbb
stos
roll
sub
xchg
or
rcl
shl
lea
pop
or
mov
sub
test
mov
mov
sbb
in
push
xor
fdivrl
mov
sub
fmulp
jnp
aam
mov
push
ffree
jns
sbb
mov
push
fdivl
loopne
shl
inc
pop
ss
cld
fsubl
push
dec
popf
outsb
or
pop
aaa
pop
in
and
into
dec
imul
test
cmp
ja
adc
andb
inc
xor
cmp
adc
cmp
adc
jb
enter
or
cmp
data16
int3
pusha
arpl
jne
sahf
dec
mov
ficoml
sti
repnz
push
loope
inc
sub
testb
cli
xor
cli
insl
nop
sub
movsl
add
mov
lret
dec
jns
pop
cltd
andl
jle
cli
push
push
repz
mov
or
mov
inc
icebp
ja
or
and
add
xlat
cmp
hlt
push
mov
adc
jg
outsb
out
jl
jecxz
sti
add
fidivs
jmp
push
jecxz
call
inc
ljmp
aad
mov
jle
cwtl
int
pop
ss
rorl
pop
jge
lret
dec
not
fiadds
add
xor
mov
pushf
mov
lret
cmpsb
push
push
movsl
pop
dec
xchg
cmp
xlat
jmp
shl
sbb
or
in
lret
dec
fnstenv
or
dec
aas
hlt
sbb
xor
dec
pop
sbb
test
inc
mov
adc
aam
cmp
lcall
xchg
jg
pushf
xchg
daa
movsb
scas
pop
pop
outsl
loope
in
inc
mov
or
into
adc
sbb
sbbb
dec
sahf
xor
and
sbb
jbe
popa
jge
addb
xor
mov
add
xchg
mov
in
or
rcrb
inc
inc
ja
dec
mov
out
or
push
add
jbe
pop
aam
xchg
push
jbe
ret
test
insl
outsl
test
pop
lds
mov
jp
mov
cmp
mov
sub
fwait
rolb
dec
mov
mov
or
lds
push
push
mov
aam
rclb
les
or
mov
mov
inc
xchg
roll
and
jno
aaa
sbb
aad
je
sub
arpl
rcrb
jmp
cmc
cmp
fs
inc
adc
cmpsb
xchg
outsl
add
cmc
inc
aas
shll
jmp
out
cmp
test
iret
out
ja
and
ja
cmp
jne
ss
mov
lcall
xchg
xchg
sub
ja
pop
push
test
xchg
mov
fwait
iret
sbbl
xlat
sbb
mov
lret
daa
inc
enter
push
mov
mov
mov
arpl
arpl
arpl
push
adc
mov
stos
arpl
lds
aam
mov
jecxz
xchg
arpl
clc
mov
rcrl
mov
hlt
pop
frstor
imul
push
shlb
push
cmc
or
pusha
test
imul
adc
xor
cmp
add
cmpsl
mov
and
out
and
icebp
enter
xchg
inc
dec
push
and
iret
xor
jns
icebp
ret
stos
loop
xlat
add
push
iret
nop
gs
sub
and
shlb
hlt
jnp
je
sti
jg
shrb
push
adc
jo
testb
insb
ficomps
sub
dec
jecxz
loop
negl
inc
test
adc
sub
stos
popf
cwtl
leave
sub
xor
jbe
cmpsl
sbbb
xor
into
lock
fldcw
enter
imul
jo
mov
push
fsubrl
adc
mov
mov
xor
mov
call
mov
jne
sbb
mov
xor
movsb
push
mov
add
jns
int3
jmp
xor
pmuludq
or
shl
cmp
xchg
in
xor
loopne
jns
and
nop
inc
stos
xchg
cwtl
jmp
sub
jmp
leave
sub
fstl
mov
out
mov
imul
add
or
movsl
mov
lcall
out
push
inc
gs
lock
xor
mov
lock
adc
xchg
jmp
loop
inc
sub
mov
add
mov
lcall
cmpsl
pushf
inc
enter
orl
insb
fst
ds
jp,pt
xchg
mov
loopne
cmpsb
popf
stos
push
inc
inc
mov
xor
mov
mov
mov
mov
lock
add
lds
jno
ja
xor
rcrl
mov
shll
or
ljmp
lea
xchg
lds
add
je
or
xchg
divl
lret
fimuls
push
imull
push
sub
mov
jp
mov
addr16
pop
jmp
mov
push
lcall
sbb
inc
jns
dec
stos
cmp
mov
shll
jne
mov
jge
mov
in
repnz
mov
pop
ljmp
mov
fldenv
sub
cwtl
jo
mov
leave
sbb
cld
cmp
push
scas
jl
pop
fstps
adc
push
push
ds
xor
pop
test
fildl
out
mov
test
mov
dec
mov
in
test
or
xor
pop
fs
cmp
arpl
cwtl
jnp
push
mov
xor
cmc
lods
and
ss
xor
lds
fisttps
add
sbb
leave
enter
stos
loopne
ret
gs
mov
pop
loope
fnsave
rcll
push
mov
into
daa
cmp
xchg
pop
cmp
idivb
fmull
repnz
in
push
ret
mov
pop
add
and
pop
test
ret
cmpsb
shrl
mov
pop
mov
rorl
jno
dec
dec
cmp
dec
and
jecxz
adc
push
or
rcl
mov
shr
pop
call
xchg
and
mov
cmp
and
cmp
inc
xor
mov
pop
ret
xchg
dec
mov
lods
outsl
xchg
cs
push
mul
shl
scas
pushf
lahf
js
jle
dec
dec
test
stc
push
in
out
jae
cmp
pushf
pop
sbb
pop
xlat
fidivl
movsb
repz
ljmp
dec
xor
stos
in
lods
fdivs
stc
cs
jae
sub
ret
ss
cmp
incl
xchg
dec
sbb
popf
cmpsb
in
xor
movsl
xchg
in
sub
xchg
mov
notl
xchg
mov
movsb
mov
sbb
addr16
pop
and
pop
mov
mov
decb
sub
wbinvd
push
ljmp
nop
lock
adc
xchg
loopne
mov
xor
fs
ret
cltd
dec
ljmp
ljmp
cmp
sub
je
push
push
sti
jo
xor
ret
xchg
out
shll
pop
add
sbb
adc
ret
xor
roll
packsswb
mov
sbb
xchg
push
xor
mov
xchg
mov
out
mov
cmp
fs
test
xchg
mov
movsl
push
andl
mov
cmp
push
push
inc
mov
fmull
push
sbb
jge
sbb
inc
jo
cmpsl
into
insb
add
lock
lods
das
out
andb
mov
cmpsl
sub
jle
jo
int
xchg
pop
dec
fwait
adc
inc
jns
roll
inc
and
adc
mov
add
mov
les
ljmp
jmp
std
out
out
add
mov
mov
xchg
stos
ret
xchg
mov
cli
inc
js
jae
xor
or
popa
movsb
sbb
jge
push
repnz
inc
das
sub
jae
test
scas
cmp
sub
cmpsl
movsl
movsb
mov
int
sahf
loop
popf
xchg
leave
adc
dec
and
jp
sbb
mov
jnp
in
mov
xchg
lds
ja
adcb
inc
addr16
fistl
mov
xchg
xchg
cld
mov
pop
mov
pop
xor
fdivs
int3
fwait
lahf
out
movsb
inc
lret
int3
mov
loop
or
movsl
xchg
cmpsl
adc
jae
lods
mov
jo
aaa
xchg
dec
add
add
shlb
mov
sbb
cmp
in
mov
push
inc
jae
or
mov
push
cmpsb
adc
imul
xchg
aaa
jg
adc
sub
cmpsb
aad
or
and
movsb
xlat
cmp
addr16
flds
popf
add
leave
sbb
push
xchg
push
rolb
sub
gs
fistl
repz
mov
pushf
fisubrl
sbb
adc
push
mov
jo
push
pushf
sti
add
pop
dec
stc
aaa
pop
outsb
jmp
dec
cmp
movsl
or
test
add
push
mov
inc
ret
pop
add
jb
fwait
stos
testl
repz
fcomps
jbe
dec
or
xor
cmp
int3
fucomp
mov
gs
and
sbb
add
mov
dec
xor
cltd
scas
jl
xchg
pop
mov
jnp
mov
decl
xor
lds
int3
pop
fistpl
mov
xchg
dec
jg
aaa
es
and
repnz
or
enter
nop
dec
jle
insl
or
or
movsb
mov
lret
mov
cmpl
scas
jge
roll
pop
ss
push
sbb
mov
jbe
jnp
in
movb
sti
lods
adc
push
mov
nop
push
pop
xlat
or
mov
lods
lahf
out
xor
xor
mov
xlat
int3
pop
movsb
xchg
and
xor
movsb
aaa
mov
mov
mov
cld
out
in
lahf
dec
pop
inc
pop
adc
out
flds
sbb
pop
mov
cmp
lea
mov
adc
loopne
sbb
mov
gs
and
mov
lret
imul
mov
outsb
jecxz
add
loop
dec
fsubl
cmc
dec
mov
and
push
adc
js
lods
arpl
shll
pop
adc
or
cmp
add
in
mov
xchg
adc
mov
xchg
fidivs
nop
xchg
lea
aad
outsl
sub
testl
mov
or
mov
adc
ret
pop
and
xor
pop
adcl
pop
fistpll
je
js
mov
shll
daa
addr16
popa
mov
or
test
dec
lcall
pandn
xor
lods
mov
xlat
add
push
xlat
test
push
sbb
call
lahf
or
stos
ljmp
pop
xchg
das
outsl
xor
cwtl
xchg
negl
adc
inc
cmp
iret
arpl
adc
adc
repz
push
and
lret
loopne
ror
adc
jge
aas
add
ficompl
outsb
mov
in
push
mov
mov
jle
int
data16
daa
outsb
loopne
mov
repnz
or
int
movsb
rcrb
sbb
sbb
adc
test
mov
loope
das
jmp
or
rorb
xor
insb
xchg
movsb
scas
mov
jg
mov
insb
cmp
dec
mov
subl
sbb
inc
inc
push
pop
divl
push
xchg
and
arpl
pop
rcrl
pop
and
pop
cltd
mov
dec
push
push
bound
xlat
repnz
pusha
sub
or
sbb
and
pusha
sbb
dec
jmp
inc
mov
jecxz
xor
data16
jmp
adc
addb
inc
sbb
iret
into
scas
dec
and
fcomps
dec
mov
push
xchg
cwtl
pop
jne
sahf
out
push
arpl
je
clc
and
dec
or
aaa
dec
dec
jge
mov
ret
imul
in
sti
outsb
inc
leave
inc
adc
pop
test
out
or
scas
push
mov
outsb
in
mov
mov
les
push
cwtl
add
mov
stos
in
jo
leave
cs
sahf
loop
pop
call
shrl
xabort
sbb
insl
mov
lahf
pop
xchg
lds
jae
push
xor
sbb
mov
aas
aaa
nop
int
movsb
testb
popf
jno
loope
js
es
adc
into
dec
and
mov
push
cltd
out
cmp
push
pop
fistpll
fadds
shl
cmp
xchg
shrl
fdivrl
scas
pop
cltd
dec
inc
xchg
aad
out
xor
jg
cs
outsb
dec
jmp
push
lcall
dec
out
pop
inc
leave
sub
fimuls
push
xlat
pop
jne
cmpsl
cli
and
cmpsb
xchg
in
imul
bound
out
aas
fisubl
and
stos
insl
lahf
push
shrl
or
aad
adc
cld
leave
xchg
push
pop
dec
sbb
dec
js
pop
repz
cli
or
cld
push
mov
adc
repnz
sbbb
mov
cmp
pop
push
int3
jns
clc
movsl
and
lods
in
lcall
js
out
jo
subb
lock
pop
sub
sbb
mov
xchg
dec
out
mov
cmp
inc
mov
cmc
sub
mov
add
sahf
ds
and
jns
outsl
or
repz
xchg
adc
dec
ffreep
inc
cmp
movsb
push
push
push
lret
cmp
arpl
mov
ficompl
mov
inc
js
cli
pusha
cld
cmpps
push
popf
fdivs
aaa
add
add
int
or
lahf
mov
sbb
scas
imul
xchg
outsl
sbb
inc
xorb
lret
bound
cmp
cld
cmp
popa
pop
lods
js
push
ss
mov
imul
jo
push
fstpt
test
jle
lock
icebp
flds
ds
xor
inc
data16
jo
pop
lret
lods
lods
sti
pushf
and
mov
jge
cmp
sbb
push
and
push
ja
add
add
xchg
jle
rolb
ljmp
movsb
mov
fsubs
push
xchg
fcomps
ffreep
jp
sub
adc
addr16
imulb
sarl
xor
clc
lret
adc
pusha
push
shll
nop
mov
adc
sti
jecxz
pop
aad
lock
jp
mov
loop
mov
or
hlt
xor
shll
adc
push
rcll
xchg
es
adc
pop
pop
imul
jp
push
and
lods
pop
jno
add
fisubl
test
mov
pusha
jg
pop
popf
mov
mov
adc
adc
mov
sti
sahf
cmp
sub
mov
loope
mov
sbb
pop
mov
lods
pop
out
or
mov
or
xor
leave
xlat
es
xchg
in
sbb
or
and
daa
movsb
jecxz
xlat
mov
mov
popa
push
mov
movsl
cli
sti
mov
push
popf
pusha
dec
cwtl
test
jmp
hlt
inc
dec
sarb
mov
ss
jecxz,pt
mov
popa
inc
std
jne
icebp
std
sbb
lods
decl
and
das
xchg
jl
out
add
jnp
lret
je
cmc
adc
sub
ret
and
loope
and
cmp
lock
xor
xchg
xchg
or
mov
dec
sar
mov
jmp
inc
jle
jge
mov
or
sub
movsb
cmc
mov
out
push
pusha
ret
fs
sarb
xchg
jecxz
imul
cli
std
out
or
push
ljmp
add
mov
pusha
sbb
push
mov
int3
frstor
aad
mov
outsb
gs
mov
xchg
xor
push
pop
or
xor
jbe
mov
movsl
mov
fucom
and
mov
push
aas
sbb
inc
cmp
mov
ficoml
test
mov
adc
mov
mov
cltd
sub
inc
dec
or
push
mov
adc
dec
or
dec
push
dec
ss
fisttpll
adc
inc
clc
pop
les
cmpsl
fmul
aas
sti
dec
lods
ljmp
arpl
pop
loopne
sahf
les
and
sub
mov
mov
out
insl
pop
pop
xor
out
xor
pop
ja
fcmovu
push
sbb
adc
imul
cld
out
jl
addl
dec
fldenv
fwait
mov
dec
ss
mov
sub
push
mov
bnd
hlt
loopne
movb
movsb
nop
enter
inc
xchg
insb
les
loope
mov
int3
std
mov
int
jo
xlat
les
fadds
dec
cwtl
push
or
loope
push
out
ljmp
add
sbb
mov
sbb
or
push
or
shrb
jmp
in
push
inc
mov
cmp
in
in
out
sub
bound
test
pop
sub
or
addr16
shl
test
lahf
test
mov
daa
xor
push
lahf
or
push
add
cltd
stc
cmp
inc
rorl
pop
sar
push
xor
jne
sub
pop
cwtl
je
or
insb
fsubr
push
pop
sbb
lds
sbb
mov
adc
stc
leave
in
fisttpl
sarl
lahf
and
pop
and
aas
jg
iret
fisubl
mov
sahf
mov
rorb
test
adc
jbe
lock
jle
xchg
in
lcall
icebp
push
rcrb
mov
adc
mov
insb
repnz
in
and
mov
push
insl
js
std
in
inc
mov
int
push
xor
sbb
or
enter
cmp
rcr
inc
push
enter
mov
mov
call
test
xchg
mov
mov
inc
sub
sub
xchg
dec
test
pop
xor
mov
sti
xchg
imul
inc
call
sbb
jecxz
and
sbb
xchg
jecxz
cltd
xchg
rol
insl
push
inc
outsb
mov
std
xor
loope
rcrb
and
xor
adc
mov
push
das
jb
cmp
dec
into
push
or
fcmovne
adc
pop
arpl
sbb
lret
xor
lods
pop
ljmp
add
mov
mov
jmp
fidivl
push
lock
inc
orb
out
in
loope
dec
pop
xchg
jp
clc
fsubl
shrl
sbb
fdivp
add
mov
sub
fmuls
sub
ja
fcomps
gs
outsl
flds
out
sub
mov
clc
ss
in
add
inc
push
sub
add
lds
pop
leave
call
cmpsl
inc
stc
movsl
imul
jl
insb
adc
loop
inc
sub
pop
or
xlat
jecxz
movsl
cmc
push
dec
gs
js
push
jne
mov
push
xchg
and
jle
dec
ds
and
hlt
add
mov
jle
push
test
out
mov
pop
into
lret
inc
cltd
inc
pop
stos
adc
lret
test
inc
movsb
cmp
pushf
into
inc
pop
add
mov
xor
insl
outsb
pusha
aas
sarb
push
ljmp
push
in
idiv
or
cmp
shll
jle
jecxz
fs
lahf
mov
rclb
mov
add
mov
bound
lcall
loope
ret
add
jo
test
cs
mov
xchg
dec
mov
xchg
xchg
dec
push
cwtl
mov
sbb
mov
inc
ret
pop
lea
fsts
jb
cmp
loopne
fld
out
test
daa
inc
sub
mul
outsb
into
add
push
jecxz
test
cmp
fnstcw
das
arpl
shrb
add
dec
addr16
pop
jb
or
jne
outsl
sarl
hlt
popf
and
arpl
dec
mov
in
addl
les
pop
mov
data16
aas
and
fstpl
adc
push
cli
ljmp
mov
fs
test
popl
adc
aas
sub
pusha
lret
lods
push
mov
mov
dec
and
mov
leave
sub
int
xchg
arpl
aas
and
xchg
or
push
arpl
arpl
adc
xchg
mov
or
cwtl
mov
dec
inc
jne
lock
lods
jns
shlb
dec
mov
dec
add
sub
das
or
jns
rcl
mov
test
js
pop
cli
sahf
iret
das
push
dec
push
inc
shrb
pusha
and
and
or
jmp
incl
cmp
sub
pushl
dec
jl
dec
push
ds
adc
push
xchg
sbb
and
xor
jge
dec
and
fcompl
imul
sbb
mov
inc
jmp
data16
adc
mov
and
sub
inc
sub
mov
sbbb
sbb
mov
inc
pop
mov
xchg
in
jl
shll
cmpl
stos
insl
add
aad
inc
in
enter
pop
out
inc
into
je
aas
stos
out
mov
mov
js
inc
notb
adc
scas
dec
inc
out
push
push
js
lock
mov
sahf
lods
sbb
popa
imul
mov
mov
lret
dec
lret
cmp
mov
addl
lcall
iret
mov
push
mov
push
divl
bound
mov
lret
icebp
lret
mov
cmp
push
push
cmpsl
dec
xor
inc
jl
loop
cmp
outsb
lods
adc
inc
lea
aaa
pop
adc
xor
inc
sbb
divl
sahf
dec
cmp
sbb
push
lahf
mov
push
mov
jecxz
stos
mov
dec
inc
sub
lods
mov
pop
into
mov
stc
push
inc
mov
ja
shll
dec
pop
nop
repnz
sub
repz
push
insl
shrl
scas
pop
pop
pop
pop
aam
dec
lret
out
push
pop
xchg
pop
sbb
jecxz
pop
sbb
out
dec
arpl
enter
loope
ja
cltd
cmp
pushf
push
sbb
fstps
out
xlat
pop
push
imull
ds
and
mov
cmp
jns
mov
arpl
std
or
fcompl
push
pop
jno
mov
lods
hlt
in
xchg
push
xchg
push
cmc
insb
xor
lock
fidivrs
add
jb
out
fs
out
ficompl
es
xchg
testl
and
push
mov
sub
shrd
jl
add
sbb
mov
test
test
inc
jmp
test
mov
or
test
xor
in
inc
jbe
test
mov
orb
inc
xchg
dec
or
mov
clc
movsl
bound
testb
in
dec
notl
inc
cmp
shl
xor
mov
aad
ret
test
outsl
mov
es
incl
cs
add
roll
or
out
adc
mov
pop
jl
push
xchg
pop
fldl
mul
gs
pop
insb
push
add
inc
cmp
push
lock
in
pop
test
pusha
movb
cs
lock
cmp
or
jns
jae
push
or
sub
push
insl
cmp
add
pop
lret
andl
into
lock
adc
sub
sub
andl
and
xchg
pusha
mov
leave
dec
nop
mov
jnp
push
stos
xchg
pop
mov
or
mov
jns
jnp
movl
inc
adc
ds
sbb
sti
loopne
dec
clc
lahf
repnz
int
inc
movl
hlt
add
pop
xorb
out
mov
sub
add
fcompl
jno
and
fwait
mov
jecxz
sbb
xchg
jecxz
push
loopne
or
aas
dec
call
dec
repz
add
xchg
cmp
mov
pop
js
or
inc
push
ja
imul
mov
cltd
sti
pop
xor
xor
cld
test
mov
roll
cmp
mov
or
adc
dec
sub
push
pop
out
jbe
xor
mov
cmpsl
and
sbb
clc
negl
lods
and
mov
mov
sbb
subl
inc
adc
inc
aad
shlb
mov
inc
push
xchg
nop
lea
ficompl
hlt
cltd
test
push
repz
imul
jl
push
add
imull
ja
xchg
repz
leave
push
add
fucomp
and
ss
inc
adc
data16
daa
arpl
mov
or
push
add
push
pop
add
cld
bound
push
mov
addl
lret
dec
sbb
jg
out
incb
ficompl
adc
imul
fisubrl
add
xor
mov
icebp
mov
aas
xchg
nop
inc
enter
mov
sbb
add
leave
mov
xlat
push
cmp
jb
and
mov
clc
and
aaa
xchg
and
fwait
in
cmp
sbb
dec
pop
or
add
andb
jo
adc
jp
hlt
lock
adc
cmp
orl
ficoml
test
lods
stos
addl
fwait
cmpsb
dec
mov
lret
push
dec
scas
les
dec
clc
adc
adc
pushf
and
stos
push
and
cmp
aaa
dec
pop
int3
pop
inc
dec
fs
pop
mov
dec
aam
inc
lret
cmp
mov
push
cmpsl
xor
mov
test
jnp
fsubp
repz
mov
sub
mov
aad
notb
out
xchg
iret
pusha
push
je
add
repnz
stos
repz
mov
in
mov
or
sbb
or
lret
mov
loopne
inc
sub
xlat
stos
push
sbb
inc
out
popa
stc
out
sbb
mov
ds
jl
jb
popa
xor
gs
jge
scas
and
add
int
loop
sbb
cmp
fs
jae
push
outsb
dec
inc
lds
cld
and
iret
or
or
xrelease
adc
adc
jmp
bound
insb
pusha
int
inc
popa
lahf
and
out
decb
jp
jae
push
jo
and
in
filds
orl
cwtl
mov
inc
jmp
mov
test
in
push
ret
and
div
sbb
xor
ja
ret
andb
dec
rcrb
mov
or
dec
bound
int
xorl
stos
leave
es
pushf
enter
rcl
adc
aas
nop
jo
repnz
cmc
xor
pop
aas
stc
xchg
mov
xor
cwtl
pinsrw
les
or
inc
fildl
movsl
hlt
gs
pop
out
xchg
mov
ljmp
iret
xchg
lds
scas
mov
andb
xchg
int3
jge
inc
mov
jnp
arpl
jno
jae
push
aaa
in
lods
mov
repz
sub
mov
inc
and
inc
jle
mov
sbb
shrl
popf
ret
mov
add
xchg
xchg
adc
pushf
jo
push
icebp
mov
aam
mov
cmp
imul
and
push
test
cld
pusha
mov
push
nop
andl
mov
or
lds
sbb
push
outsl
and
sbb
or
xor
cmc
sub
inc
fstp
jg
outsb
jecxz
add
pop
cmpsl
or
dec
or
sbb
fstpt
push
xor
jp
adc
mov
xchg
jge
fists
inc
arpl
mov
and
add
or
movsl
shrl
leave
iret
mov
lret
bound
out
mov
js
in
notl
js
xchg
sub
imulb
xor
imul
push
mov
or
xchg
add
pusha
inc
push
cwtl
insl
repz
mov
fidivrs
ret
inc
lock
push
ljmp
and
push
push
test
pop
scas
bound
es
or
incb
movsb
adc
mov
insb
mov
add
mov
stos
and
jns
adc
into
ficomps
leave
and
jno
arpl
into
add
dec
je
roll
movsb
ss
mov
pop
adc
test
daa
incl
fisubrl
sub
test
mov
pop
push
divl
stc
lret
xchg
push
sbb
mov
mov
push
mov
insl
jecxz
js
rorl
popa
loop
mov
mov
loopne
add
pop
mov
loopne
mov
sbb
adc
aad
add
fsubr
movsl
sbb
xor
adc
inc
bound
mov
stc
cld
daa
xchg
out
lods
loop
jo
notl
mov
adc
lock
ret
es
or
cmc
out
cmc
mov
cmp
sti
or
add
enter
dec
add
test
inc
movsl
pop
cmpsl
xchg
sub
cmp
repz
xor
test
and
inc
xlat
fists
fbstp
imul
les
test
inc
leave
mov
jp
popa
js
roll
inc
dec
mov
push
daa
ret
adc
mov
clc
mov
mov
rclb
cmpsl
into
ljmp
push
fildl
test
pop
test
dec
pop
mov
jmp
outsb
testl
inc
out
gs
fs
fisubrs
mov
stos
fbstp
repz
pop
and
add
mov
sbb
mov
xchg
pop
jne
xor
repnz
test
nop
mov
push
inc
out
jne
mov
and
divl
mov
ljmp
xchg
int
jl
ljmp
loop
or
aas
mov
jecxz
mov
pushf
jbe
mov
mov
ds
dec
xchg
lret
ss
or
lret
leave
fdivr
or
loope
sub
data16
aaa
adc
aas
pop
movsb
aad
sub
lret
in
adcl
movsl
xchg
inc
ljmp
jns
sub
loope
jle
scas
jo
xor
xchg
mov
xor
jnp
mov
mov
adc
mov
test
cli
clc
push
add
imul
cwtl
clc
mov
dec
jg
test
sbb
cltd
dec
fisubl
xor
mov
out
js
add
ficompl
out
jg
mov
out
xchg
xorb
in
cld
push
inc
js
addr16
jge
in
push
out
ds
push
rol
add
les
into
xchg
arpl
shl
pusha
jg
pop
repnz
sbb
cmpsl
int
xchg
jmp
cwtl
and
addb
stc
sub
in
fisubl
ret
stc
mov
sub
push
pop
mov
cmp
jg
mov
lret
insl
push
lods
icebp
sbb
movsb
xor
cld
insb
add
fists
stos
test
mov
fadd
and
and
dec
push
xlat
pop
cld
rolb
xchg
pop
cmp
sub
jle
pop
cmp
pop
inc
lahf
mov
dec
pop
fs
fimuls
jmp
shrl
and
jne
mov
movsb
mov
mov
xchg
inc
mov
jmp
jnp
xor
inc
or
or
xchg
lods
xchg
inc
cmpsl
repnz
inc
sti
fsubr
xor
sub
mov
lahf
mov
sub
mov
xrelease
sbb
cli
pusha
jmp
out
xor
jo
stos
add
sbb
fistl
ljmp
sbb
mov
push
adcb
fs
dec
mov
mov
sbb
pop
or
cmp
jl
adc
fsub
pushf
mov
rclb
sbb
addb
add
inc
stc
dec
dec
sahf
push
mov
int
adc
adc
mov
aad
add
imul
scas
mov
mov
arpl
imul
or
sbb
outsb
insl
pushf
and
aad
lds
gs
adc
dec
jb
add
addl
das
adc
add
adc
call
in
sbb
out
fwait
xor
push
xchg
jecxz
push
xchg
pop
adc
and
push
adc
pusha
dec
pmaxub
int
sbb
hlt
dec
out
dec
adcl
mov
adc
mov
les
rorb
movsb
push
xchg
cmp
jmp
push
sti
test
loop
pop
shr
in
stc
cmpsb
rorl
and
pusha
ljmp
cmpsl
jnp
inc
mov
int
mov
mov
xchg
test
mov
inc
ficompl
pushf
inc
rclb
jns
jbe
jnp
in
cmpsl
sbb
dec
dec
repz
out
gs
out
sbb
jp,pt
in
test
bound
ret
mov
jne
lahf
mov
int3
push
addr16
xchg
hlt
jecxz
lods
mov
cwtl
fiadds
pushf
xchg
mov
mov
ret
cltd
and
stos
or
mov
les
add
ret
jp
dec
mov
or
jnp
pushf
stc
je
stos
rolb
and
fcomps
inc
leave
mov
inc
int
lret
jp
enter
das
xlat
mov
stos
sbb
sub
pusha
sbb
jae
inc
adc
cmp
pop
dec
jecxz
mov
div
fiadds
imul
popf
mov
push
inc
inc
cmp
xorl
jg
into
test
push
loop
jnp
lret
and
cmpsl
or
aas
fldl
mov
pop
testb
push
mov
rep
mov
push
add
fldl
repz
pop
daa
fists
xchg
shlb
ss
dec
xchg
jle
bound
mov
xorl
popf
sbb
fld
clc
lret
sarb
loopne
sub
or
pop
stc
scas
pop
jbe
push
add
fistpll
shll
mov
cltd
push
shrb
ss
outsl
mov
loope
insb
jo
shll
sti
les
cltd
pop
sub
mov
jne
sbb
add
add
sub
cmp
jmp
popf
push
dec
shrb
fsts
ss
into
cwtl
push
adc
mov
sub
pop
pop
and
mov
xor
test
lret
fisttps
aam
sub
enter
daa
adc
adc
jnp
xchg
int
gs
lds
mov
popa
or
fisubs
jne
movsb
jno
jl
rcll
pop
add
lea
into
sub
xor
add
jp
add
pop
dec
iret
fsubrs
addb
mov
loope
ja
push
int
popa
sbb
mov
jbe
mov
fdivrl
mov
loopne
scas
ja
jo
inc
jp
inc
xchg
fstl
cmp
jmp
repz
cs
push
cs
adc
or
in
test
jecxz
pop
push
sti
aaa
sarb
cltd
sbb
mov
pop
mov
mov
jae
mov
sahf
mov
cwtl
cmp
sub
aas
mov
sbb
and
or
idivb
push
pop
fisttpll
or
and
jmp
inc
test
hlt
rdtsc
rcll
mov
jl
jge
insl
repz
inc
cmc
les
daa
push
scas
je
cmpb
jb
cmp
or
enter
jne
lahf
and
mov
and
push
xlat
xor
aad
push
xchg
dec
push
andl
movsb
scas
and
and
push
stc
dec
add
fs
lds
js
aam
pusha
jmp
xchg
sete
mov
ljmp
int
loopne
jno
mov
mov
popf
sbbl
mov
subl
fcmovne
andl
enter
inc
and
mov
dec
ret
xchg
jecxz
mov
das
lods
fwait
pop
mov
ret
add
xor
xorl
arpl
scas
sarl
pop
scas
push
fcmovne
call
insl
push
cltd
dec
jo
addr16
inc
add
adc
int3
push
and
inc
xchg
aas
lods
xchg
in
xchg
mov
imulb
sbb
pop
and
mov
and
ret
mov
std
cmp
pop
sti
jl
pusha
ljmp
push
mov
add
bound
adc
lcall
data16
xor
mov
mov
push
fsubs
mov
xor
jle
mov
repnz
pop
inc
outsb
addr16
cmpsl
repnz
or
jae
mov
jle
pop
in
loopne
cmp
add
in
sub
xchg
out
into
adc
add
push
or
inc
cmp
mov
pop
push
and
mov
in
pextrw
andb
inc
arpl
sub
inc
call
and
in
adc
add
icebp
and
xor
les
mov
xor
xchg
mov
inc
dec
fisttpl
es
pop
or
inc
pop
pop
adc
and
and
adc
push
dec
cmp
xchg
repnz
sub
incl
cltd
into
aas
adc
out
loop
lea
es
cwtl
movsb
add
xchg
ret
imul
mov
and
push
les
xor
stc
xchg
cmp
sub
mov
mov
mov
dec
push
push
mov
call
cmp
insl
pop
aad
xchg
jecxz
mov
ss
stc
iret
xchg
cmc
pop
sahf
das
fwait
imul
jmp
outsb
and
mov
mov
mov
popa
or
pop
dec
pop
push
add
xchg
mov
dec
push
movsl
jno
mov
repnz
cmpsb
inc
lock
stc
and
test
dec
adc
out
scas
sub
jns
lahf
push
fwait
mov
xchg
sbb
sbb
sub
enter
fldl
test
xchg
mov
dec
lahf
cs
mov
rorl
push
push
popa
test
mov
sub
repnz
push
mov
mov
pop
stc
cmp
subl
or
inc
daa
push
cmc
jno
mov
sbb
mov
divl
sub
inc
dec
leave
addr16
xchg
bound
xchg
mov
add
bswap
out
pop
and
dec
or
ja
or
mov
or
sbb
pop
sbb
pop
cs
sahf
cmp
xor
out
ror
or
sub
jb
mov
cmp
arpl
ds
mov
imul
cmp
cld
std
jecxz
and
in
pusha
and
or
cmc
sbb
mov
and
xchg
push
loopne
ds
aaa
int
jg
loope
mov
push
dec
or
das
or
into
ss
icebp
mov
stos
or
ror
data16
aaa
aad
scas
xor
jae
outsb
andl
sub
pop
dec
jmp
das
xchg
stc
dec
push
iret
lcall
mov
mov
stc
mov
xor
pop
xor
nop
jnp
loop
fsub
call
ljmp
pop
push
pop
lret
sahf
insb
shll
and
ret
xor
in
out
pusha
nop
aam
xchg
sbb
cmp
push
xchg
inc
and
push
insl
xlat
adc
mov
jmp
out
mov
push
mov
arpl
repz
mov
outsb
arpl
dec
popf
push
push
lcall
ja
repz
or
lahf
clc
fbld
outsb
lods
fstp
mov
inc
data16
mov
sbb
lock
sbb
jno
xchg
jp
ja
push
scas
mov
fldcw
shrl
mov
ss
call
dec
xchg
xchg
mov
sub
xchg
inc
test
pop
aad
mov
adc
sub
and
xor
int
das
pop
imul
rol
ficoml
data16
js
mov
enter
and
xor
pop
les
jp
sbb
aam
cmpsl
sbb
mov
inc
lcall
mov
scas
test
mov
fs
clc
js
or
jae
add
test
fcoms
cli
and
jp
sti
icebp
notl
jb
mov
cmp
jnp
shl
int
push
das
mov
les
fsubp
test
dec
hlt
cli
loopne
sarl
dec
stos
or
jbe
inc
outsl
insb
jnp
lods
leave
into
or
cmp
dec
fwait
pop
cld
adcl
and
xlat
fs
dec
test
jmp
cmp
sub
sub
movsl
test
out
add
xor
lea
xchg
add
push
jmp
mov
jae
mov
lret
ljmp
nop
sub
leave
les
loope
pop
jo
loopne
lods
repnz
out
jmp
out
popf
dec
adc
add
cmc
and
jge
dec
jnp
mov
aas
test
stos
adc
out
xor
test
inc
stos
mov
mov
jno
push
dec
and
cmp
add
add
xlat
jmp
xchg
push
test
push
lahf
add
aam
imul
adc
js
and
jp
mov
cld
subl
outsb
clc
test
int3
stos
popl
push
fcomi
fmul
mov
and
fsub
mov
pop
clc
xchg
mov
sub
xor
mov
adc
rol
dec
xor
mov
cs
pop
in
and
xchg
int
pop
lods
js
jl
loope
add
stc
repz
mov
subl
xchg
fiadds
mov
mov
push
cwtl
cmp
loope
jno
ret
in
mov
in
inc
nop
ja
xchg
add
negb
nop
xor
sbb
fnstsw
inc
cmp
adc
cmc
stc
jp
xor
adc
int
movsl
sti
mov
insb
neg
iret
cmp
xor
movsb
dec
dec
fsubrl
pop
int3
divl
push
ja
mov
sbb
mov
jb
outsb
call
jnp
cmp
fdivrs
xor
cmpsb
mov
notb
in
xor
add
sahf
pop
fsubr
adc
das
add
jnp
and
enter
pop
aaa
jb
scas
popf
mov
std
ljmp
adc
xlat
dec
push
cmp
arpl
xlat
push
mov
stos
sub
mov
mov
xor
ss
and
popa
cld
sbb
push
movsl
std
fnstenv
pop
mov
aad
ss
popl
cmp
or
ror
xor
xchg
sbb
inc
pop
imul
mul
stos
jmp
jmp
aaa
out
ljmp
dec
xor
and
sahf
fiaddl
jge
fs
arpl
inc
mov
add
inc
mov
loopne
cld
ljmp
sub
xor
lret
testb
cmpsb
out
and
dec
sub
ret
inc
loope
xchg
mov
les
mov
mov
rcrl
and
popf
xor
xchg
and
and
sub
mov
sbb
mov
test
icebp
lods
sahf
adc
pop
add
ds
aas
pop
push
outsl
nop
mov
cmp
inc
fists
cld
aaa
dec
lds
pop
add
adc
movsb
das
out
rcll
xchg
inc
mov
push
or
stos
jns
in
jle
popf
or
sub
xlat
repz
rolb
xlat
fwait
lcall
jbe
stc
inc
aam
push
push
clc
mov
lahf
and
mov
std
out
ss
fwait
cli
dec
mov
push
add
and
sbb
fnstsw
test
nop
xchg
cmp
sub
jns
pop
sub
mov
je
jns
inc
xchg
gs
xchg
in
jae
adc
sbb
push
fsubr
pushf
xor
push
mov
mov
fwait
aad
movsb
ret
and
dec
xor
repnz
mov
lcall
pop
hlt
or
jns
lcall
icebp
pop
sub
or
test
lods
in
fcoms
test
out
sbb
lds
add
push
data16
dec
mov
fnstenv
inc
mov
aad
and
int
stos
xchg
aas
add
je
hlt
dec
jae
ds
inc
stos
mov
popf
fmull
lods
or
push
lods
adc
orb
ds
insl
dec
mov
mov
xor
mov
in
scas
or
mov
repnz
push
aad
pop
mov
mov
ss
cmp
cwtl
dec
pop
mov
dec
sub
scas
call
xchg
in
jb
faddl
pop
and
xchg
lds
jle
push
add
mov
add
and
or
add
rolb
fsts
pop
js
mov
jge
cmp
out
adc
lock
jmp
sar
pusha
pop
jmp
dec
rcll
cmp
xor
inc
pop
jecxz
push
jle
in
sub
jg
push
inc
push
fdivp
or
jl
mov
dec
aam
mov
sub
insl
adc
je
sub
mov
hlt
mull
pop
dec
aas
cmp
iret
and
frstor
ret
mov
ja
loope
xorl
cmpsb
jo
mov
in
sub
and
dec
pop
jo
sbb
mov
mov
aaa
int3
pop
das
and
popf
fs
xor
sub
push
pop
scas
add
cltd
sarb
adc
jb
outsb
adc
mov
out
sub
and
xchg
loopne
js
test
xchg
lret
mov
imul
cmpsb
push
jne
dec
test
mov
add
mov
pop
mov
insl
add
sub
push
cmpsl
aas
out
add
int
scas
adc
jmp
daa
dec
jns
mov
pop
dec
push
inc
jne
and
mov
inc
push
mov
std
sarl
aam
sbbb
cmp
mov
jmp
lock
aam
xor
jnp
pushf
dec
arpl
or
std
add
jns
es
addl
pop
ja
mov
in
lds
pop
or
lcall
xor
mov
mov
insb
in
xor
xor
or
pushf
jnp
inc
cmp
push
xchg
lcall
lds
dec
adc
test
pop
mov
ss
xchg
jnp
sub
xchg
or
and
push
adc
outsl
imul
pushf
xchg
inc
cmp
sub
inc
pop
sbb
pushf
adc
pop
cmp
dec
arpl
xchg
sbb
fstps
ds
mov
out
add
xchg
into
pusha
cwtl
inc
xor
or
mov
push
sbb
lea
or
cmpl
pxor
cwtl
ljmp
push
mov
insb
adc
inc
in
xor
rorb
lret
lds
repnz
out
in
push
popa
ja
test
outsl
sbb
test
jl
fwait
xchg
fimull
fistps
loopne
dec
or
add
adc
dec
xchg
ja
mov
das
lea
add
mov
xor
add
shlb
into
sub
or
fcomi
ficoml
nop
cld
mov
mov
lods
gs
stc
in
hlt
cmp
add
in
out
mulb
mov
xorl
int
pop
push
repz
outsb
add
jmp
sub
out
outsb
jnp
lds
ret
mov
cltd
repz
sbb
mov
cmp
in
insl
or
mov
lahf
into
rorl
pop
decl
mov
outsb
fnstcw
cmpl
jle
sbb
add
xor
push
addb
mov
popf
pop
in
lret
ss
popl
pop
nop
mov
inc
add
aaa
cmp
dec
push
pop
out
inc
push
aas
mov
sub
cmc
jnp
sbb
push
into
daa
jg
shll
aam
popf
hlt
pop
sahf
sub
mov
test
aaa
loop
xlat
cwtl
dec
lock
push
lret
mov
jns
fists
mov
stos
push
dec
mov
inc
in
bound
jmp
pop
add
psraw
dec
add
nop
jecxz
push
sbb
mov
sub
pop
xchg
mov
mov
stos
jnp
fidivrs
pusha
cmc
dec
lea
mov
mov
mov
es
inc
mov
mov
pop
push
sub
sbb
pop
cmp
push
ljmp
jl
and
ret
idivl
fildll
xchg
inc
rcll
mov
pop
adc
loopne
stos
out
mov
stos
int
fisubrs
or
es
xchg
mov
lods
mov
pop
sbb
fs
pop
push
push
test
lret
lock
nop
or
mov
push
lcall
popf
test
ret
xchg
andb
lods
add
pop
mov
cmp
inc
sahf
or
pop
mov
push
fildll
add
mov
mov
pop
push
outsl
ds
out
in
sbb
adc
cmpb
filds
pop
lods
sbb
cmp
or
leave
or
aam
dec
add
jnp
inc
outsb
mov
cmpsl
inc
sahf
cmpsl
or
mov
lds
mov
dec
push
xchg
inc
inc
loop
leave
pop
xchg
jg
movsb
push
add
or
cmp
adc
jnp
mov
sbb
cwtl
out
imul
dec
mov
push
out
mov
out
rolb
cmp
mov
sub
imul
out
lret
pop
dec
and
inc
and
int
frstor
mov
loop
sbb
cwtl
jne
push
rcrb
add
ficompl
cld
call
mov
nop
hlt
ffree
fstl
xor
inc
scas
jle
dec
add
push
ja
jns
sub
xchg
test
add
pop
pusha
and
sti
pop
fwait
les
or
mov
shr
xor
outsl
xchg
xor
jae,pt
adc
mov
mov
cmc
in
mov
mov
pushf
mov
stos
jae
jae
lcall
lods
rorb
nop
push
andb
test
fldt
repnz
ret
push
push
jo
nop
sub
inc
and
cld
ja
stos
xchg
adc
cmp
stc
or
jo
jne
inc
jecxz
add
shlb
dec
mov
cwtl
les
mov
lods
outsl
pop
fidivl
xor
cwtl
push
lret
inc
pop
jmp
ret
mov
adc
xchg
stc
push
mov
cmp
lods
or
lds
enter
lret
lea
jg
jmp
rcll
inc
pop
fstps
mov
enter
cmpsl
sub
ljmp
loop
jnp
lcall
aas
inc
aas
insb
and
mov
jmp
andl
sbb
xchg
or
shll
mov
inc
lcall
sub
lret
lea
sub
imul
out
das
mov
std
ret
mov
push
repz
mov
cmpsl
adc
xor
pop
mov
das
lahf
mov
loop
dec
sub
ja
adc
sub
or
pop
inc
jae
cmpsl
jae
ret
mov
outsl
jg
add
lcall
dec
fildl
mov
add
mov
and
in
pop
dec
sbb
inc
jo
or
sub
adc
in
imul
mov
hlt
jle
out
and
sbb
pop
jge
sbb
xor
int3
cmp
mov
enter
cmp
mov
cmpsl
aad
lods
mov
imul
enter
mov
sbb
sub
fisttpll
addl
sbb
test
fsubl
lock
int3
pop
inc
out
imul
sbb
push
lock
jle
pop
dec
pop
push
push
xor
or
and
mov
push
fisubrl
rcrl
inc
cmpsl
fisubrl
push
mov
ja
adc
sub
es
sub
lahf
dec
xor
mov
pop
xor
shlb
add
iret
lods
cmp
lods
pop
and
aas
xchg
xor
mov
inc
cmp
btr
mov
je
insl
xchg
iret
loope
aaa
jp
out
repnz
sub
sti
sahf
int
fwait
aam
add
repnz
jb
cmc
lahf
mov
sbb
or
out
ljmp
call
or
or
pop
jge
or
or
xor
xchg
repnz
jecxz
mov
push
aaa
mov
fadds
loop
icebp
out
lea
mov
add
inc
ret
insb
loope
xor
push
aad
ljmp
test
mov
adc
scas
ja
and
pop
sub
ja
in
fcoml
mov
subl
jp
cld
mov
shl
jg
in
pop
repnz
cwtl
push
jo
imul
outsb
adc
stos
push
and
xchg
loopne
ss
push
lds
xor
out
mov
ljmp
bnd
add
jle
mov
lock
sub
pop
pop
dec
adc
push
std
cs
xor
mov
xchg
ljmp
jecxz
mov
pop
inc
inc
ret
cmp
sub
sbbl
adc
ljmp
int
jae
xchg
shlb
lds
call
rcll
mov
into
xor
push
or
mov
divl
push
sub
mov
aaa
lahf
pusha
mov
movsl
lret
adc
add
sub
stos
push
fs
xlat
int3
gs
es
shll
push
andb
adc
xchg
ljmp
clc
cmp
push
xor
movsl
cmpsb
aaa
sbb
lcall
sbb
sbb
xchg
inc
sub
les
push
popf
dec
jp
mov
xor
jbe
dec
inc
add
les
orl
fcompl
xor
push
pop
push
scas
in
inc
testl
cwtl
jae
mov
pop
dec
cwtl
cmpsl
rcrb
mov
jmp
pop
jp
push
add
jae
insb
out
or
push
sub
cmpsb
ficomps
shll
es
mov
icebp
cwtl
ss
xchg
jecxz
push
or
and
mov
fldl
pop
pushf
jne
ja
mov
mov
and
int
loope
lods
xor
mov
daa
cld
mov
inc
adc
add
in
inc
sbb
lock
addr16
dec
and
mov
add
push
inc
mov
insl
push
sbb
xchg
and
push
icebp
outsb
lahf
and
roll
or
xchg
pop
sahf
cltd
adc
movsb
cmc
lock
bound
pushl
pop
inc
xchg
mov
push
jecxz
pop
sbb
fidivrs
inc
inc
xchg
pmullw
lock
mov
rolb
inc
es
dec
xor
and
fnstsw
inc
and
push
sarb
xor
pop
xchg
lods
repnz
aad
jbe
jge
add
push
pop
les
and
or
nop
mov
xchg
jbe
pop
add
sub
xor
shlb
jge
into
cmp
cwtl
out
and
sahf
or
sti
push
lahf
and
das
sahf
jle
data16
dec
sub
jmp
pop
cmpsl
test
push
rcr
inc
mov
or
push
mov
stos
jbe
dec
lcall
pop
mov
out
mov
test
mov
mov
arpl
jnp
fs
pop
loope
test
cmp
call
pushf
scas
xchg
movsl
push
enter
mov
pop
pextrw
cmp
sbb
mov
stc
jno
jnp
icebp
xorb
add
fldcw
imul
fisubrl
and
test
outsl
or
int3
mov
push
and
push
jg
jle
dec
or
push
and
push
push
int3
leave
pop
sahf
lahf
and
lahf
adc
dec
mov
dec
adc
cmp
into
pop
jp
fldcw
pop
clc
push
sub
pop
dec
ret
es
mov
aam
mov
push
jne
sbb
test
and
pop
out
lock
out
clc
push
int3
rcll
pop
aas
test
sbb
stc
inc
addr16
or
adc
imul
mov
mov
lret
lea
jle
xchg
jo
cmpsb
negl
mov
pop
push
add
cli
cmp
cmpsb
jae
jle
cs
add
icebp
cmp
xlat
or
mov
jae
negb
insl
arpl
cmp
testb
adc
xchg
jns
xchg
pop
xchg
inc
fbld
add
pop
sub
jge
insb
sti
lods
adc
bound
adc
in
lahf
sub
mov
call
pop
mov
pushf
lcall
jo
inc
or
jb,pn
mov
mov
jne
stos
test
pop
adc
pmuludq
pop
jge
sub
fnstenv
cmpsl
push
mov
push
cmp
mov
cmp
mov
xor
jge
idivb
xchg
insl
xchg
imul
test
movsl
imul
cltd
dec
cmp
out
cwtl
add
mov
jnp
push
lret
in
mov
adc
and
xlat
gs
mov
pop
xor
mov
cmp
stos
sub
mov
testb
sub
and
push
jge
jecxz
orb
cld
xchg
xchg
xor
mov
cmpsl
push
das
sub
cs
loopne
mov
shr
sub
mov
sbb
in
add
dec
lret
jecxz
fwait
test
stos
outsl
jl
mov
inc
push
mov
lods
sbbl
gs
inc
or
cli
loope
fwait
out
inc
shlb
push
sbb
jecxz
sub
push
jno
ret
divl
imul
add
imul
xor
push
cmp
js
lea
jo
mov
fsubrl
mov
add
pusha
popa
mov
mov
repnz
push
xchg
mov
jl
std
leave
outsb
and
xchg
cmp
cmp
inc
data16
mov
dec
inc
mov
jnp
cmp
jne
mov
insl
sub
fnstenv
jmp
rcrl
cltd
sub
insl
xchg
jbe
mov
subl
xor
sti
adc
push
inc
dec
pop
mov
sti
fmul
dec
nop
mov
jg
mov
adc
jbe
mov
mov
mov
gs
sbb
mov
jp
cmp
mov
cld
push
loope
hlt
mov
sub
imul
fdivs
and
jb
cmc
inc
mov
lock
loope
push
xor
cmc
push
in
push
inc
or
xchg
movl
jb
mov
popa
sahf
cwtl
sar
pop
lret
add
pop
sub
cmp
leave
lds
test
mov
div
pop
sbb
in
sbb
xlat
xor
sub
mov
fimuls
lea
and
adc
cmp
adc
pusha
shlb
jl
and
adc
rorb
in
mov
fsubr
testb
jmp
int
xchg
push
and
stos
aad
mov
jle
aam
mov
lret
outsb
scas
lods
pop
mov
mov
xchg
lahf
std
cltd
pop
fs
push
and
movsb
pop
push
sarb
adc
xor
mov
ja
sbb
je
pop
addr16
cmp
loopne
cmpsl
into
repz
sub
xlat
push
mov
jns
xor
js
pop
jge
pusha
ret
and
pop
bound
out
popa
pop
inc
cmp
and
push
lock
outsl
aam
out
and
sub
mov
sub
mov
push
mov
cwtl
out
outsb
lahf
or
pop
fistpl
add
jae
push
int3
sbb
pop
andl
add
mov
push
jge
fstpt
loop
cmp
dec
test
pop
mov
mov
stos
push
push
push
in
inc
xor
shr
gs
mov
mov
add
test
adc
into
xchg
mov
shlb
cli
test
jmp
pop
mov
xchg
repnz
jo
inc
mov
xchg
or
push
jb
out
xor
movsl
or
daa
mov
push
lods
data16
outsl
nop
mov
dec
stos
in
and
ja
stos
inc
fucomip
fisubl
mov
cli
cs
stos
jecxz
mov
or
rorb
push
xor
lcall
mov
add
pusha
loop
mov
and
out
aad
clc
sbb
add
test
add
aad
outsb
sbb
pop
pop
mov
add
mov
les
inc
test
das
and
pushf
xor
or
fdivrl
orl
xbegin
mov
lahf
mov
pop
and
add
out
in
cmp
aam
movsb
loop
loop
pop
mov
popa
push
pop
jne
dec
cmpb
push
orl
rcrb
scas
mov
pop
movzwl
dec
rorl
repz
pushl
scas
lds
mov
sbb
shlb
rcrl
scas
dec
push
push
rcll
xor
inc
cld
mov
pop
adc
adc
pushf
mov
mov
scas
mov
inc
pop
fldcw
in
lods
fstl
jmp
xchg
inc
cmp
repnz
xor
jns
or
rcrb
leave
add
xchg
xchg
dec
sub
sarl
jbe
xchg
push
pop
sbb
ffree
data16
mov
cli
shll
jne
cmpsb
and
out
scas
mov
sbb
stos
fcoms
xchg
pop
sbb
ja
adc
mov
dec
add
hlt
and
fidivrl
cltd
push
or
mov
inc
mov
add
in
mov
push
lods
int
pop
and
mov
and
lret
or
push
adc
xchg
lock
push
mov
and
mov
xchg
mov
inc
enter
movsb
xchg
mov
dec
ret
cmp
cmc
ret
cmp
lods
ss
add
xor
iret
lret
imul
testb
shll
pusha
dec
rcll
insb
test
scas
jge
test
adc
mov
sbb
das
or
popl
dec
outsb
cmc
addr16
mov
push
lock
mov
subb
addb
fldenv
mov
movsb
jg
out
xchg
jmp
ds
in
mov
sbb
jmp
xchg
in
jo
and
sub
jno
test
popa
fstpl
lods
xor
sahf
xchg
bound
popa
pop
jnp
mov
mov
push
test
inc
sub
mov
sbb
lods
std
add
push
add
je
sti
out
push
lret
lods
xor
cmpsb
ljmp
inc
adc
mov
aas
push
mov
movsb
int
push
mov
cmp
aaa
push
xor
out
ret
push
xorb
adc
and
mov
cmp
outsb
fcomip
push
pop
dec
push
inc
pop
inc
lea
sbb
shrb
dec
sti
cmp
push
pushf
je
pop
cwtl
stos
cli
jo
pop
andb
flds
aam
in
repnz
push
pop
fs
adc
xchg
imul
mov
scas
jp
jecxz
dec
push
push
fwait
rorl
sti
loopne
mov
stos
add
cs
sbb
out
loop
push
stos
push
jne
inc
test
cmp
shlb
stc
fstl
gs
xchg
imul
dec
mov
inc
das
cmp
mov
pop
repz
mov
dec
add
and
sti
push
jb
xlat
cld
jns
xchg
sbb
and
fsubrs
dec
add
sbb
das
loope
daa
js
jp
xor
outsb
push
sbb
inc
enter
xor
adc
call
push
and
mov
add
cmc
mov
sarb
sub
cmpsl
movb
mov
outsl
dec
out
negb
out
inc
pop
cld
ds
test
cmp
sub
notb
jmp
add
cwtl
cltd
push
in
xchg
mov
or
fs
push
or
push
inc
xchg
mov
pop
movsl
lock
orl
ds
test
sbb
rcll
call
or
out
divb
or
je
test
cli
xchg
lock
lret
push
call
shrb
out
insl
adc
mov
jg
leave
loope
ljmp
sub
aas
lods
mov
mov
cmpsb
imulb
mov
cmc
cmp
pop
sub
dec
dec
xor
iret
jnp
and
jmp
sti
push
xor
rolb
rcrl
push
xchg
adc
dec
das
push
lahf
pop
push
cld
cmp
jne
xchg
add
aaa
inc
mull
sarl
or
ret
movsl
stos
ljmp
addl
pop
mov
dec
fsubl
sar
inc
sub
ss
dec
jns
jb
mov
and
cmpsb
rorb
xor
nop
mov
or
sti
test
int3
enter
jecxz
fincstp
jecxz
nop
mov
cltd
push
xchg
cmpsl
ja
in
fs
jb
cltd
std
mov
jle
xlat
xchg
outsl
aas
adc
add
cmc
stos
adc
lods
outsb
pop
mov
jge
mov
or
test
push
or
pop
mov
popa
daa
outsl
pop
pop
jne
jno
sbb
push
inc
ss
notb
movsl
jecxz
inc
adc
jbe
cmpsb
insl
or
shrb
and
mov
mov
or
lret
loop
jnp
add
test
xor
jbe
inc
int
pop
add
push
cmp
pop
je
inc
les
dec
add
aam
dec
cmp
adcb
nop
cmpsb
out
jne
mov
jne
sbbl
cmp
pop
xor
shrl
mov
cmp
shll
lea
or
cwtl
pop
xchg
and
mov
divl
insb
test
gs
pop
inc
xlat
jo
dec
cld
repz
xor
cmp
cld
jp
inc
inc
pop
and
mov
jae
in
mov
mov
lods
and
fcmovnbe
mov
xchg
inc
mov
popa
inc
jae
or
cli
out
rcrl
add
sbb
in
movsb
xchg
sbb
mov
lret
in
iret
pop
mov
adc
and
jl
loopne
insb
jo
ficompl
sbb
hlt
shl
out
fnstsw
cli
adc
cmp
bound
jge
push
push
movl
jbe
inc
stos
mov
mov
mov
xchg
testl
inc
xchg
loopne
lahf
lods
inc
lods
add
xlat
inc
icebp
cmp
mov
xor
aad
addr16
jecxz
incl
mov
and
mov
or
adc
cmp
sbb
inc
pop
cmpsl
xor
mov
mov
xchg
pushl
hlt
jo
adc
sarl
xor
xchg
xor
ds
mov
mov
xor
sbb
icebp
pusha
inc
nop
fists
push
ret
pushf
pop
push
negl
sub
cmp
add
sub
mov
xchg
mov
lahf
sti
addr16
and
mov
inc
xchg
leave
fsubl
daa
cmp
mov
or
aad
and
xchg
ret
lret
rcll
pop
shrl
xor
or
je
pop
dec
cmpb
loop
inc
stos
dec
mov
in
ret
ds
jmp
popf
sbb
popl
and
cmpsb
ret
mov
cmpsb
rcrb
pop
or
mov
mov
sarl
js
xchg
xchg
dec
aaa
pop
mov
sub
jno,pt
imul
movsb
dec
divb
cmpsl
scas
aas
call
cltd
imul
lock
adc
inc
sub
cs
push
enter
idivb
pop
dec
fwait
push
xor
scas
and
xchg
jmp
int3
sub
divb
mov
jne
pop
jbe
push
mov
push
fwait
leave
shll
lahf
push
mov
daa
or
jmp
xlat
jge
mov
scas
fldt
mov
dec
mov
adc
int3
sub
mov
mov
mov
ja
dec
push
add
lret
bound
icebp
xchg
ss
adc
mov
cmpsl
dec
test
pop
mov
and
mov
sar
sbb
adcb
pop
xor
imul
push
fsubrp
or
loop
sbb
or
test
in
shl
ljmp
inc
xor
mov
mov
leave
test
xchg
xor
fsubl
ljmp
sbb
daa
xchg
add
xchg
clc
adc
jns
in
mov
mov
fimuls
mov
add
dec
cmpsl
or
incl
lret
dec
ret
fsubs
and
mov
mov
test
je
xor
cs
lock
xchg
shl
jae
cli
int3
mov
cwtl
xchg
mov
insb
cmpb
sbb
cld
push
mov
add
xchg
ret
mov
sbbb
insb
dec
por
push
insl
hlt
mov
insl
adcb
in
pop
mov
jbe
outsb
mov
cmpl
fs
adc
xlat
or
pushf
insl
pusha
pop
mov
push
fwait
mov
pushw
xlat
dec
inc
cmpsb
sti
fstp
repnz
mov
inc
push
movsl
bound
push
mov
mov
sbb
xchg
add
and
xor
popa
xchg
push
add
dec
sbb
leave
mov
lods
cmc
pop
mov
sub
xor
in
movsb
sbb
xor
jmp
fsubrs
sbb
data16
cmp
push
jno
cltd
jno
lret
jae
stos
mov
gs
je
and
lahf
xorl
out
xchg
jo
je
and
pop
aad
int
test
xchg
fsubrs
push
test
jle
fsubs
xor
push
cmp
lds
cltd
je
imul
out
scas
les
push
mov
aad
aad
loopne
cmp
mov
ljmp
sub
data16
or
aaa
rolb
addb
popl
insl
or
inc
out
rorb
mov
dec
sub
mov
das
sti
in
lock
imul
test
ja
call
jne
pop
pop
and
je
enter
and
adc
xchg
fdivr
call
shll
jno
jnp
inc
test
lahf
pop
fildll
repnz
in
jnp
sub
out
inc
cld
pop
popa
push
lods
jae
or
add
sbb
test
es
mov
mov
mov
orl
push
jp
lock
cmp
push
sbb
test
xchg
inc
fstpt
hlt
add
sub
stos
cmp
add
insl
lods
sahf
ds
xor
mov
mov
mov
popf
mov
inc
decb
out
popf
loopne
dec
push
lds
popf
sbb
inc
pop
lcall
inc
adc
das
cmp
aad
sub
std
imul
mov
orl
push
pop
dec
jp
pop
dec
mov
cli
scas
rcrl
add
mov
sub
lret
jo
mov
inc
js
cmpsl
movsb
pop
push
fsubrs
sub
adc
ljmp
xor
pop
imul
sbb
inc
cli
out
add
jp
jns
adc
cmp
into
outsl
and
and
outsl
mov
jg
scas
test
in
mov
call
push
outsb
movb
mov
in
insb
pop
add
cli
ss
inc
dec
cltd
dec
stos
out
into
ja
push
sahf
cmp
xorl
mov
test
mov
inc
repz
cmpsb
mov
arpl
out
jb
jb
or
xchg
testl
xor
mov
cltd
lret
pop
sub
test
jnp
popa
daa
jno
add
push
xchg
or
stos
mov
mov
jecxz
loop
or
xor
jno
mov
pop
jle
mov
mov
xor
mov
jl
cmpsb
push
fdivrl
adc
fisubs
in
pop
xor
add
loopne,pt
mov
fucomip
lret
into
and
pop
lcall
push
cli
fmull
jbe
xor
cli
dec
sbb
andl
cmc
int3
cmpsl
xchg
int
js
xchg
cmpsl
dec
hlt
sub
add
sub
andl
ljmp
nop
push
ja
enter
mov
sbb
adc
mov
cmp
stos
sahf
ja
add
mov
imul
add
sbb
add
jp
jno
mov
or
sar
xor
adc
or
mov
popf
sti
adc
das
add
insb
push
in
pop
xor
repz
mov
xor
add
adc
sub
es
out
pop
mov
scas
cmc
push
mov
cmpl
add
sbb
in
cli
push
sub
inc
ja
xchg
cmp
jae
mov
or
xchg
xor
fsts
mov
mov
sbb
sbb
and
mov
pop
pop
lret
xchg
es
ljmp
nop
int
lcall
sbb
cltd
mov
pop
add
std
and
lahf
addl
adc
in
cs
push
jns
jnp
repz
ror
xor
repnz
ds
loopne
sub
sbb
lret
sbb
je
pop
push
sbb
ljmp
cmp
push
push
or
add
or
rcl
in
pop
mov
test
push
pop
imul
jnp
lret
out
and
enter
aad
dec
mov
sub
outsb
gs
push
pop
push
out
in
pop
inc
mov
cmp
pop
in
add
sub
cltd
adc
out
and
scas
push
or
push
lret
cmpb
ss
inc
in
ret
out
mov
rcll
inc
aaa
inc
scas
cld
pop
or
mov
sub
in
and
pop
daa
clc
adc
and
adc
mov
mov
push
push
dec
push
cld
loop
jbe
push
fwait
xlat
les
adc
addr16
mov
sub
inc
aaa
mov
stos
sub
test
jmp
inc
adc
mov
or
in
mov
dec
popf
xor
sub
inc
mov
cmpsl
add
outsl
push
inc
inc
push
adc
cmpsb
mov
cmp
rorb
pmulhuw
xchg
cwtl
out
jnp
and
popf
ljmp
fistpll
jbe
cmpl
insb
push
test
jae
stos
or
mov
mov
frstor
cmp
into
int
jne
xchg
scas
out
or
dec
inc
jge
cmp
es
or
sbb
push
insb
mov
test
pop
add
dec
and
stos
test
inc
push
jle
mov
jbe
xchg
fcomps
sub
test
pop
and
in
push
adc
add
push
push
divl
add
mov
xorb
into
cmovge
push
inc
jge
ss
xor
adc
xor
aam
ja
jbe
cmp
fadds
stos
cmp
loope
adc
dec
subb
adc
or
bound
jl
mov
mov
into
add
fwait
mov
xchg
push
inc
stc
add
ficompl
test
xchg
sbb
pop
std
push
jp
inc
mov
nop
cmp
dec
jecxz
mov
std
cmpsl
cmc
push
repz
rolb
popf
fwait
dec
mov
imul
repz
stos
leave
call
push
sub
stos
xor
jp
sub
cmc
cmp
push
popa
mov
mov
enter
pop
xchg
dec
cltd
cmpsb
push
push
dec
sub
add
sub
xchg
pop
xchg
dec
stos
fst
mov
gs
cmp
ficoms
gs
pop
push
test
ss
mov
ljmp
movsl
jo
cmp
popa
rcr
fstps
popf
push
dec
xchg
adc
sub
sahf
mov
ljmp
int
adc
jae
jb
imulb
dec
lea
jne
ja
int3
pop
sub
cmp
mov
into
jno
cmc
stos
jge
xor
xchg
cli
ss
das
lods
test
popa
leave
fucomi
adc
loopne
jge
xor
adc
ds
js
movsb
lods
addr16
sub
adc
test
pop
scas
loop
xchg
ljmp
pop
push
push
push
and
sahf
stos
out
mov
cmp
iret
in
and
jbe
test
sub
lea
and
and
inc
adc
lods
mov
mov
out
lret
inc
out
test
jno
pop
pop
sub
add
aas
adc
ret
sub
leave
cld
pop
sbbl
pop
lock
cwtl
mov
movsb
mov
stos
aad
or
divl
sarb
pop
xlat
jns
lea
dec
movsb
sbb
jnp
mov
sbbb
dec
xchg
lods
jmp
adc
and
and
arpl
addr16
push
les
lahf
gs
stos
cmp
add
in
adc
inc
std
inc
notb
arpl
fs
out
fcoml
add
js
rcrl
jmp
push
icebp
pop
lret
fistps
dec
add
cmpsl
mov
cmp
xlat
add
push
clc
pop
ret
mov
jmp
lret
aam
lds
inc
xchg
pop
movsl
and
fisubrl
jns
enter
sbb
add
push
cmpsb
loopne
dec
testl
mov
iret
mov
cmp
stos
adc
jmp
xor
fisubl
sub
rcll
cmp
stc
sbb
cli
sbb
sub
mov
mov
cmp
adc
add
int3
dec
mov
inc
iret
pop
ss
cmp
or
stc
jle
or
int
mov
mov
cmp
data16
push
loopne
jmp
inc
mov
mov
sbb
pop
mov
mov
jne
sbb
and
xor
xchg
hlt
dec
fwait
adc
or
xchg
fstl
add
xor
mov
gs
mov
ret
adc
mov
fiadds
dec
sbb
fcoml
testb
lret
in
je
or
push
test
pop
stos
jge
movsl
sar
add
sub
cmp
push
dec
dec
test
ss
sub
mov
sub
call
out
jnp
jle
test
inc
ret
dec
aam
jecxz
inc
and
loop
fs
pop
adc
outsl
or
nop
jp
hlt
jp
mov
pop
push
imul
push
clc
adc
sbb
bound
pop
jnp
rcll
mov
push
push
scas
xchg
cmc
cmp
into
popf
movsb
sub
outsl
and
push
push
cmp
dec
inc
or
and
ret
ds
gs
fwait
xchg
je
jmp
dec
mov
sbb
sbb
xor
les
xchg
cmp
mov
push
sbb
dec
add
jecxz
rolb
pop
out
lea
jmp
les
sar
adc
cvtdq2ps
sub
jmp
dec
sbb
adc
test
push
imul
sub
xchg
loop
sub
daa
xchg
repz
cwtl
aaa
bound
rorb
or
mov
loopne
xchg
lcall
push
test
divb
nop
mov
fcoms
lahf
xor
jecxz
rclb
scas
push
jne
add
dec
mov
or
aaa
daa
mov
jmp
xchg
inc
inc
mov
sub
enter
jb
cltd
ja
sti
mov
mov
repz
les
call
jnp
inc
fiadds
and
daa
call
lcall
jecxz
adc
add
push
sub
cmp
cmp
idivb
fnsave
bound
mov
mov
xchg
jmp
ljmp
stc
int
inc
inc
or
and
jnp
add
or
pop
add
xchg
test
es
dec
or
and
xchg
rcr
ret
xchg
cmp
adc
fistpll
stc
adc
lret
pop
aaa
into
mov
inc
xorl
test
mov
pop
inc
sub
mov
cmp
cmc
imul
xchg
pop
add
imul
pop
inc
addr16
shll
popf
daa
add
aad
sahf
push
psrlw
imul
jp
xor
or
dec
dec
movsl
or
sbb
fisttpl
add
sub
pop
stos
sub
fstpt
jmp
sub
push
pop
out
pop
test
popa
push
lahf
adcb
scas
mov
and
or
mov
mov
adc
fisubl
xor
shll
xor
push
fcmovu
inc
lcall
jmp
pushl
mov
xlat
clc
push
sub
js
mov
xchg
sbb
sti
mov
int
xchg
mov
dec
lods
dec
iret
xchg
call
pop
sub
data16
mov
js
leave
mov
dec
push
sbb
mov
fldl
pop
cmp
lret
loopne
es
cmp
inc
loopne
adcl
push
xchg
pxor
pop
or
fcoms
or
jge
mov
sahf
sbb
cmp
mov
or
xor
test
movsl
cmc
or
cld
rcll
fmulp
mov
xchg
mov
xlat
jnp
and
pop
fildl
dec
jb
sub
adc
push
mov
sti
jne
sbb
cs
adc
enter
call
add
push
sub
lods
mov
add
sub
insl
adc
cwtl
push
loop
mov
in
ret
push
mov
rcrb
lods
pop
cmpsb
lds
pop
lds
icebp
sbb
jle
jns
add
add
jns
rclb
cmpsl
jp
int3
cwtl
xor
xchg
test
iret
push
enter
mov
adc
sbb
int3
xchg
mov
mov
push
sahf
popf
jle
inc
push
pop
pusha
mov
mov
lods
adcb
sub
lcall
or
stc
dec
iret
les
or
iret
lods
repnz
stos
out
mov
jno
pop
pop
ss
call
js
outsl
ret
shr
out
push
and
int
sub
sbbb
lods
in
or
or
shrb
scas
test
lret
stc
xchg
push
pop
testl
mov
addr16
xor
ljmp
pop
or
les
and
add
les
jp
fiadds
push
push
enter
and
ja
push
add
into
fsubrp
mov
lods
mov
leave
mov
scas
inc
testb
pusha
xor
std
xor
sbb
jmp
push
cmp
and
in
int3
jg
popa
ret
cltd
push
test
mov
jb
mov
or
movb
iret
jb
fwait
out
pop
pop
mov
lahf
lds
mov
shll
inc
popa
shlb
sub
inc
dec
shll
enter
sti
push
mov
rorb
adc
sub
test
stos
cmpsb
js
sub
mov
jae
push
pushf
cmovs
mov
bound
cltd
xlat
sub
cwtl
loope
adc
sbb
outsl
rorb
out
sbb
sub
jne
notb
sti
or
or
cmpsb
jb
xor
daa
mov
les
and
rcrl
push
movsb
dec
mov
push
clc
aas
std
in
out
decb
and
push
cmp
mov
pop
pusha
xchg
pop
sbb
int3
lods
ljmp
cmp
imulb
push
fnstsw
mov
mov
fcompl
mov
bound
ficomps
mov
ficomps
in
sbb
adc
test
leave
ss
ja
jb
jmp
cld
mov
repnz
pushf
mov
jne
cltd
and
mov
adc
int3
shll
or
jl
adc
pop
ljmp
fcompl
push
and
mov
xor
xchg
inc
sub
dec
and
sbb
movsl
push
jae
sbb
sbb
andb
movsl
iret
movsb
inc
es
rol
adc
and
adc
lds
ljmp
pop
popa
insb
inc
jmp
sahf
call
adc
fwait
xchg
add
inc
cwtl
sub
dec
lret
pop
cmc
push
pop
ficoms
add
call
pop
mov
fsub
adc
push
loop,pn
adc
test
iret
xchg
push
cli
in
jmp
pop
adc
add
pop
sahf
int3
mov
and
and
push
add
xor
push
and
shll
ljmp
xor
add
rolb
cmp
pop
mov
sar
insb
pusha
shll
repnz
imul
jge
xchg
aam
popf
jb
sub
in
push
push
jecxz
and
mov
loope
jp
fisttpll
pop
push
sti
cld
lock
or
xchg
sub
or
mov
sub
or
dec
xor
lea
repnz
mov
jg
dec
and
out
jmp
jmp
xchg
popa
std
repz
ret
jns
xor
and
pop
adc
jns
ret
sbb
push
dec
mov
push
in
inc
cmp
imul
popl
lret
inc
fldt
mov
pop
fidivl
cli
inc
push
clc
test
xchg
aam
psllq
add
dec
jmp
aas
inc
inc
cmp
sbb
loop
iret
inc
jle
hlt
push
pop
daa
or
in
push
cmpsb
or
jno
idivl
add
xor
pusha
fsubrs
imul
lods
push
test
rol
jge
testb
cmp
push
loope
pop
gs
ret
mov
loopne
daa
fdiv
xor
pop
xchg
mov
add
cli
sti
fidivs
cs
stos
push
mov
stc
xchg
shlb
loope
call
ljmp
ss
adc
push
xchg
fwait
and
in
xor
dec
call
sahf
cs
and
cmp
out
cmp
hlt
test
add
das
xor
adc
sbb
adc
and
sti
loop
fimuls
and
mov
pop
pop
push
mov
fwait
sti
mov
fbstp
and
xor
out
push
mov
sbb
xlat
gs
loopne
xlat
lcall
xor
mov
cltd
dec
mov
ja
sarl
mov
cld
mov
mov
xchg
push
adc
mov
outsl
xchg
dec
and
lret
repz
pop
imul
js
add
pcmpeqb
add
lahf
stos
jbe
xlat
scas
sbb
outsl
jle
and
mov
xchg
lahf
gs
cwtl
bnd
cltd
das
das
iret
idivl
scas
insb
inc
mov
scas
push
das
mov
insl
xchg
adc
xor
mov
inc
cs
mov
stos
and
lock
ja
imul
mov
mov
lahf
pop
arpl
cwtl
push
sub
adc
add
pop
dec
push
clc
push
cmpsb
pop
nop
push
arpl
sub
imul
gs
xor
test
jle
sbb
cs
push
adc
test
mov
add
out
arpl
mov
std
xchg
bound
or
outsl
push
push
add
cwtl
push
mov
mov
pop
bound
test
mov
xchg
fsubr
add
sbb
and
pop
sbb
xchg
or
adc
scas
pop
popa
push
xchg
mov
mov
sub
bound
pop
add
push
xorb
outsb
jmp
adc
pop
das
adc
sbb
stos
jge
mov
adc
inc
lods
ss
out
xlat
jno
dec
out
xlat
sbb
fidivs
popa
in
mov
push
cmp
pop
mov
popf
add
jb
nop
push
js
iret
rolb
push
sub
aam
pop
adc
sti
adc
lods
test
test
xchg
xchg
sub
test
scas
ret
mov
add
std
jmp
cwtl
out
and
adc
or
popa
std
and
out
rolb
loop
pop
add
loopne
daa
add
xlat
scas
cmp
ficoms
aad
rep
adc
data16
xchg
mov
les
sbb
mov
in
jb
ljmp
adc
outsl
inc
xor
inc
imulb
ffree
mov
test
xor
jo
pushf
mov
cmp
xchg
dec
in
add
add
fnstenv
cmc
sub
xor
jl
pop
mov
inc
inc
insl
lcall
lret
cmp
push
das
jp
stc
in
lock
mov
jne
addr16
sub
xchg
jne
fistpll
loopne
or
in
imull
imul
xor
cmpsl
lock
sub
sarl
jnp
sbb
ret
cwtl
push
jne
cmpsl
or
daa
add
bound
lret
jmp
popf
test
movb
inc
mov
dec
fadds
dec
and
icebp
jno
and
popl
mov
inc
fmul
mov
aaa
outsb
sbb
push
arpl
adc
in
and
inc
test
sar
mov
mov
or
xchg
or
xchg
test
or
cmp
sub
aad
mov
dec
std
out
aas
mov
stos
and
mov
pop
cmp
clc
and
and
aas
fdivrs
mov
sbb
outsl
test
int3
cmp
shrb
data16
push
shr
and
aad
push
cwtl
xchg
test
jb
lods
fists
hlt
sub
mov
out
call
dec
pop
jae
xchg
and
js
dec
cmp
clc
popf
lods
lods
inc
mov
arpl
loopne
pop
lock
jo
arpl
mov
adc
sub
dec
adc
pop
push
cmp
outsb
stos
int3
xlat
jb
pop
xchg
cmp
fidivrs
pop
ret
adc
adc
add
pop
and
fdivs
inc
pop
xchg
popf
test
es
ret
mov
adc
lret
or
in
push
mov
mov
mov
mov
cmp
jle
ljmp
sub
cli
fistpll
shrb
mov
testb
push
adc
js
pop
ret
cmp
push
mov
mov
sbb
imul
lahf
mov
lahf
nop
jl
lret
shlb
fwait
adc
imul
mov
sahf
mov
fmulp
movsl
and
stos
push
scas
cltd
mov
out
das
adc
mov
push
cwtl
adc
dec
add
jno
cmp
jnp
mov
sbb
jg
cltd
adc
mov
mov
mov
sbb
pop
shl
xor
loopne
push
pop
inc
call
push
mov
ret
pop
addr16
xchg
lahf
rorl
push
mov
push
fcompl
cltd
lret
adc
mov
mov
loopne
enter
jne
ljmp
push
into
mov
leave
inc
repz
sbb
divl
add
inc
mov
rolb
push
aaa
xlat
and
inc
pop
rol
sbb
xchg
dec
jecxz
and
sti
jno
dec
or
inc
inc
lret
popa
inc
loopne
test
addb
mov
adc
subb
mov
mov
inc
js
lock
sub
cs
adc
and
movsl
call
setb
mov
jnp
out
das
popf
sahf
outsb
ds
arpl
push
loopne
in
xchg
pop
loope
loopne
sub
call
mov
call
sbb
lcall
push
nop
imul
adc
gs
cli
iret
jmp
inc
inc
push
inc
adc
mov
out
add
mov
clc
inc
inc
pop
or
out
lds
cmp
xchg
dec
decb
push
fdivp
out
push
push
mov
and
sbb
aaa
cmc
subb
bound
jns
faddp
xchg
cld
xchg
mov
jno
push
mov
pop
cmpsb
pushf
loop
add
stos
xchg
fsts
fsubrs
mov
loop
mov
adc
mov
lods
xchg
iret
inc
out
fisttpl
outsb
clc
jns
xchg
mov
aaa
gs
addl
jg
sub
lret
int3
sahf
add
xchg
push
pop
aaa
pop
pop
sub
stos
inc
lock
scas
into
aaa
pop
jmp
cmpsl
dec
mov
roll
or
dec
pop
pop
frstor
nop
aaa
in
arpl
cmp
sub
mov
cli
lods
loope
push
in
pop
mov
std
imul
test
outsl
lods
das
insb
add
inc
pop
sub
mov
clc
je
xor
inc
orb
orl
pop
mov
testb
and
popf
xor
jmp
dec
bound
pop
cmp
lret
inc
adc
and
jmp
dec
inc
sub
inc
jno
cmp
nop
cwtl
pop
loopne
mov
cmp
pop
in
jmp
les
outsl
push
push
adc
mov
cwtl
scas
mov
add
xchg
fildll
xchg
pushf
xor
fcompl
jmp
popf
xchg
jmp
add
xchg
in
repnz
jp
das
xchg
lea
in
jg
test
fistpll
cmpsl
pop
imul
mov
and
pop
jg
es
and
xor
imul
mov
cmp
push
mov
aad
ret
cmpsb
scas
pop
inc
mov
std
int3
jp
sbb
push
mov
fs
xor
cmp
mov
push
fbld
push
into
xchg
mov
cs
xchg
or
mov
cltd
and
or
push
scas
stos
push
fwait
adc
outsl
dec
fcoms
fwait
shrl
mov
popf
popa
mov
popf
jl
je
and
cs
push
mov
push
or
shl
mov
divl
stos
aaa
xlat
movsl
xor
xor
out
pop
mov
cmp
testb
jns
icebp
and
call
push
inc
pop
mov
cmp
decl
or
test
push
or
dec
sub
sti
cmp
mov
or
pop
addr16
mov
call
cmp
add
notb
jnp
ljmp
jbe
lcall
mov
loope
add
pushf
test
hlt
in
out
xor
ret
ja
adc
jae
mov
sub
inc
in
inc
aad
pop
inc
gs
dec
xchg
pop
lea
addr16
mov
mov
popf
pop
jge
pop
ja
cmp
mov
mov
xchg
sarb
ja
pop
inc
push
and
ret
sbb
or
add
ret
test
xchg
fildll
int3
sub
pop
mov
or
shll
xchg
inc
jno
or
xchg
pop
shrb
push
enter
movsl
ljmp
pop
pusha
mov
cmp
repz
es
fwait
cmp
je
or
mov
pop
and
sub
add
or
clc
and
lock
xchg
xchg
repz
aad
mov
xchg
out
imul
mov
add
in
inc
lret
cmp
iret
aad
lods
bound
cltd
gs
mov
xor
pop
movzwl
jno
xchg
and
sti
ror
jg
push
dec
rcrb
sti
loopne
adc
pop
mov
mov
dec
arpl
sub
jmp
push
cmp
into
push
inc
cltd
xorb
pusha
stos
inc
xor
test
hlt
xor
jne
xchg
jo
jne
push
jnp
pop
adc
jmp
sbb
jp
loopne
ret
pusha
fdivl
mov
sahf
lcall
divb
xor
and
mov
aas
addr16
test
mov
push
pop
add
sbb
push
mov
sbb
mov
leave
mov
and
pusha
mov
jbe
dec
aaa
nop
icebp
arpl
test
adc
adc
fcompl
subl
fdivr
popf
stc
jae
pop
or
shrl
jmp
rcll
enter
mov
mov
shlb
mov
popa
lret
dec
incl
cmpsl
pop
cmp
clc
lret
inc
movsb
int
jle
cld
xchg
cmp
mov
jg
mov
cmp
sbb
jb
push
jns
mov
xchg
pop
mov
dec
jge
inc
mov
cli
lods
inc
iret
ja
lods
push
push
iret
cmp
bound
adc
lods
lods
movsl
in
insl
or
rolb
iret
outsl
mulb
lods
xor
mov
push
lcall
cmp
jge
mov
adc
pop
xchg
fisubrl
sbb
nop
mov
xor
stos
mov
lock
sbb
add
loope
push
sbbl
outsb
sub
inc
int
ja
pop
mov
xchg
in
or
fbstp
pop
pop
fidivrl
movsb
aaa
cmpl
cmc
lret
dec
mov
int
rcrl
loope
xchg
ret
outsl
fdivrl
movsl
sbb
aaa
movsb
or
xor
adc
loope
addr16
cmp
imul
cmp
adc
call
xchg
daa
xor
gs
jge
sub
es
aad
adc
mov
mov
popf
out
pop
xchg
ret
ja
lods
lahf
je
lea
hlt
lock
cpuid
addr16
lret
int
js
cld
pop
cli
incb
sbb
sbb
cmc
add
cmp
jecxz
aaa
mov
inc
fistpl
gs
gs
cmp
popa
enter
mov
sti
inc
imul
loop
nop
xchg
mov
faddl
jmp
mov
add
jns
jns
adc
push
jp
cmp
fadds
shrl
inc
sub
aam
cmpsl
sub
mov
mov
insb
inc
inc
scas
sbb
ss
lods
or
adcl
push
jle
or
mov
cmp
mov
int3
mov
xorb
cmp
pop
add
and
push
nop
pop
xlat
pop
das
inc
inc
inc
dec
iret
sbb
inc
sbb
shll
push
outsb
cmp
cs
jge
test
add
into
mov
inc
adc
icebp
sbb
pop
cltd
mov
in
inc
pop
lret
pusha
xor
in
mov
pop
imulb
dec
jno
xor
insb
mov
add
iret
outsl
data16
xor
pop
int
push
jne
sbb
pop
mov
sub
leave
mov
insb
fisubs
fldenv
ret
ss
add
data16
stos
push
pop
loop
rcll
iret
pop
mov
in
mov
pop
mov
clc
add
dec
mov
mov
adc
jge
repz
add
aaa
cmpsl
mov
or
je
pusha
jbe
or
dec
lock
jg
popf
mov
test
imul
fdivrl
mov
mov
pop
int3
out
jge
pushf
mov
ss
mov
loope
lods
xchg
fldt
shr
fstps
dec
sub
pop
aaa
dec
jge
ljmp
cmp
cmp
push
push
or
imul
adc
ret
in
sahf
mov
jmp
notb
inc
rcrb
mov
and
test
jae
fists
xor
cmp
in
out
out
je
outsl
les
pop
xchg
push
cmp
sub
and
push
sbb
push
mov
aas
jmp
add
std
push
mulb
cmc
enter
in
shll
adc
pop
mov
xchg
ret
int
popa
jg
fisubs
mov
imulb
xchg
mov
add
imul
jmp
push
pop
adc
out
shrb
cltd
fisubl
jno
int
int3
xchg
push
fdivl
mov
aam
mov
mov
pop
mov
sti
clc
clc
inc
xorl
xchg
stc
shrb
ret
cmp
popa
daa
mov
lcall
inc
int3
and
mov
mov
xor
fstps
sbb
xchg
mov
adc
push
inc
pop
pop
mov
push
movsl
adc
lea
lret
das
mov
jecxz
loop
mov
out
and
cmp
dec
push
divb
inc
sub
pop
jl
inc
add
out
mov
sbb
sahf
mov
xlat
aas
and
mov
cs
cmp
shlb
and
cmpsl
xor
mov
mov
pop
cmp
rcll
adc
nop
pop
push
lcall
cli
or
cmp
sub
mull
je
lea
shlb
and
data16
cmp
inc
outsl
lahf
bound
xor
ss
inc
sarl
stos
outsl
cmp
jmp
int
lock
sub
subl
rcrb
jae
mov
dec
mov
shrl
adc
dec
movsb
mov
in
adc
shrl
repnz
inc
jp
jecxz
out
xor
dec
and
scas
or
dec
lcall
adc
jns
add
lret
shll
popa
mov
lret
outsb
mov
jmp
les
ret
mov
insl
jno
xchg
out
pop
insl
xchg
cmpsl
fisubrs
mov
mov
dec
imul
ret
ljmp
adc
mov
sbb
fcmovb
mov
rcrl
and
adc
mov
cmp
nop
xor
cld
push
fs
pop
xchg
jae
inc
popf
xchg
pusha
cli
adc
jle
push
cmp
movsb
xor
movsl
sbb
les
test
or
cmp
ret
push
shlb
mull
inc
adcl
ret
cmc
add
scas
xchg
lods
add
mov
adcl
push
xlat
and
lock
sar
popf
push
inc
and
push
xor
mov
mov
movsl
mov
lock
xchg
push
xchg
or
fists
mov
sbb
pop
lahf
push
pushf
faddl
pop
xchg
mov
or
mov
xlat
mov
adc
dec
pop
jg
or
jle
inc
out
jle
ret
add
rcll
cli
and
dec
imul
cmpb
outsb
aas
lret
push
lods
es
dec
popf
cmc
in
and
fwait
pop
jnp
imulb
ficoms
fbld
clc
and
jbe
inc
lahf
mov
sub
ja
xchg
xor
push
rolb
rcrl
int
js
movsl
add
das
mov
push
in
push
ja
adc
mov
mov
enter
clc
mov
adc
stos
in
aad
and
lret
ret
int
test
sbb
je
push
repnz
jecxz
out
jo
shrb
mov
sbb
stos
outsb
js
jmp
push
mov
sub
mov
mov
inc
push
lock
test
fistl
sbb
jb
scas
aam
adc
or
inc
inc
pop
cmp
leave
push
jmp
push
stos
add
mov
adc
in
std
cmc
lret
aam
dec
adc
add
cmp
jb
add
jno
lods
mov
pop
sbb
mov
fidivrl
mov
lcall
or
cmpsb
arpl
pop
or
pop
mov
xchg
iret
dec
mov
jge
daa
subb
gs
ret
xchg
add
jno
xor
pop
xchg
andl
jo,pt
push
movsl
in
addl
push
xor
in
mov
or
pop
and
jne
ja
dec
xor
mov
xchg
stc
push
jge
jl
shll
jbe
fmul
jnp
pop
shll
andl
dec
fmuls
loop
xor
repz
cmpsb
stc
cltd
aas
push
jne
loopne
adc
je
xor
xchg
ja
inc
mov
ds
stc
mov
xor
or
fcmovnu
dec
xchg
dec
jbe
pop
sbb
push
jae
and
mov
repz
ss
sbb
xor
scas
pushf
mov
sahf
adc
rolb
fmul
mov
jo
cmpb
dec
fld
fcomip
cmp
rcll
scas
pop
sbb
or
pop
test
sahf
sbb
xor
ja
repnz
pop
xor
mov
bound
scas
les
pop
cltd
add
and
xchg
ret
enter
add
xchg
dec
negb
ljmp
dec
addb
dec
fistl
arpl
xchg
xor
push
bound
test
cli
inc
push
mov
add
or
mov
addl
cwtl
sub
lods
pop
xchg
cmp
mov
cmp
sbb
xchg
dec
cmc
stos
sbb
popa
sub
ja
jecxz
adc
das
adc
imul
in
add
cmpsb
sbb
dec
fwait
rclb
sbb
inc
es
dec
push
adc
test
mov
add
inc
in
inc
enter
pop
inc
dec
movsb
inc
es
hlt
out
repnz
mov
dec
sub
sbb
mov
fnsave
aad
push
imul
in
xchg
cmpsl
xor
outsl
lds
pop
mov
mov
pop
imul
shll
cld
jo
or
or
or
adc
and
jge
add
lcall
mov
test
sub
or
push
add
pop
test
subb
jbe
jne
mov
repz
push
insb
mov
jg
clc
and
cmp
insb
ror
pop
inc
push
sbb
add
cmp
dec
add
arpl
aaa
mov
std
mov
mov
imul
mov
mov
pop
jg
mov
or
push
cmp
pop
jle
jno
popf
ljmp
pop
dec
mov
mul
xchg
and
or
inc
mov
adc
int3
jnp
xchg
and
scas
fisubrs
movsb
dec
cmp
fadds
adc
or
mov
hlt
jne
xchg
bound
leave
sahf
jmp
inc
sbb
and
test
mov
mov
loop
push
das
ljmp
lret
push
mov
fstps
sub
insb
and
sub
push
pop
mov
gs
xchg
shlb
dec
shll
hlt
mov
mov
push
push
cmp
add
das
push
pop
mov
cmpsb
in
mov
lea
adc
jmp
lcall
jp
in
cmp
mov
cmp
xlat
stc
pop
sbb
mov
push
or
sbb
sbb
das
cmc
mov
movsb
or
sbb
mov
enter
lea
test
mov
xor
or
jne
xchg
adc
rclb
aam
pop
mov
xchg
xchg
cld
test
push
pop
push
aaa
mov
data16
sahf
push
mov
decl
mov
call
aas
push
push
push
call
adcb
add
pop
adc
divl
jge
sub
fnstcw
inc
dec
fsub
xchg
test
movsl
mov
in
adc
arpl
in
mov
dec
jmp
jge
add
fstpl
mov
add
jmp
lret
cli
add
mov
insl
xor
push
mov
dec
sub
cs
mov
and
in
sahf
incl
insb
dec
mov
jb
push
adc
sti
in
mov
mov
das
sbb
mov
xor
cmp
xor
aas
or
jl
xchg
cli
mov
imul
lret
jg
adc
cmp
es
testl
push
ja
popf
lds
jmp
movsb
aam
mov
push
inc
sub
add
cmp
ljmp
insb
imul
mov
adcb
cmp
mov
mov
push
push
mov
pop
stos
adc
adc
mov
sbb
fucomi
ficompl
inc
stos
test
imul
ret
add
pop
mov
and
out
daa
or
das
cwtl
stos
jbe
mul
and
lcall
cmp
push
xchg
pop
adc
push
add
jecxz
idivb
mov
jb
xchg
fildl
push
test
cwtl
ret
aam
dec
pop
inc
mov
mov
bound
shrl
in
je
leave
pop
mov
mov
mov
inc
repnz
pop
cmp
add
gs
cmp
add
les
adc
pop
lahf
xchg
leave
les
cmp
push
fistps
es
shlb
xlat
dec
addr16
fwait
push
iret
iret
dec
push
int3
jno
dec
rorl
cmp
test
mov
lret
dec
cmp
hlt
in
mov
ficompl
fwait
es
sarb
dec
mov
in
mov
and
cmpsl
jl
pop
fstps
cld
jecxz
sahf
fstpt
sub
jp
dec
mov
stos
test
shll
rcrb
mov
bound
add
pop
xor
addb
cmpl
sti
mov
scas
pop
push
icebp
movsl
fcmovnbe
dec
xchg
bound
sar
adc
out
push
cmpsb
leave
mov
dec
sub
jae
and
mov
outsl
xchg
jne
adc
mov
movsl
aaa
fwait
clc
mov
inc
ret
pusha
adc
mov
jmp
jmp
out
sub
inc
cwtl
test
jns
test
dec
cmp
and
pop
xor
cld
int3
push
add
or
imul
cmp
insb
lret
adc
in
outsb
push
or
mov
mull
cmp
in
cli
pop
sbb
cmpsl
pop
cmpsb
ficomps
xor
ja
divl
push
imul
push
mov
lds
cmp
dec
sbb
popf
sbb
or
lahf
mov
inc
push
push
sbb
mov
sub
dec
lret
test
test
push
lcall
adc
or
int3
xor
mov
sahf
jns
or
push
daa
aas
cs
les
cwtl
outsb
push
int3
sub
loopne
lods
jae
mov
lret
push
xor
enter
jnp
push
insb
iret
push
mov
mov
clc
inc
fbstp
lret
jge
testb
mov
in
mov
adc
pop
out
inc
sbb
or
adc
bound
and
xor
jecxz
repz
pushf
insl
jmp
loop
loop
call
xchg
stos
or
fldcw
inc
xor
nop
jnp
add
cmc
dec
std
ficomps
sbb
aaa
ss
inc
pusha
dec
push
xor
jo
adc
insl
daa
pop
or
pop
arpl
out
xor
or
jecxz
ror
adc
sarb
in
test
push
mov
cmp
out
loopne
pop
popa
and
adc
mov
inc
call
push
ss
add
sub
sti
inc
dec
mov
imul
inc
push
inc
cmp
sub
inc
bound
fisubl
pop
sub
add
and
lret
movsl
xor
pop
pop
mov
add
setb
ss
sbb
les
fcmove
dec
mov
fwait
mov
pop
push
jb
mov
outsl
fnstcw
or
sahf
sub
push
xor
fdiv
xchg
sub
out
nop
inc
mov
lock
movsb
mov
daa
inc
icebp
int
js
popa
push
adc
push
xor
add
cmp
mov
inc
mov
lahf
push
xchg
in
add
loope
mov
loopne
das
fadd
inc
xor
incl
add
mov
xor
push
bound
mov
call
xchg
push
sub
rcll
xchg
fdivrs
and
popa
icebp
aad
outsb
and
dec
inc
ret
int
push
or
jle
and
stos
mov
xor
mov
inc
flds
testl
rcll
subb
loop
xchg
mov
jg
and
cmp
jmp
roll
jecxz
xor
cmp
sti
out
dec
xchg
fwait
mov
addl
xor
inc
dec
adc
clc
frstor
pop
inc
mov
push
xor
cmpl
bnd
xor
insl
push
xchg
xchg
movsb
sub
pop
insb
cmp
mov
insb
adc
ret
aam
adc
sbb
adc
dec
mov
sub
cmp
daa
outsb
fadd
add
mov
orb
stos
add
sbb
call
cmp
cmp
pop
dec
ret
aad
aas
xchg
or
data16
mov
fwait
and
out
dec
inc
pop
int
jnp
arpl
mov
lock
in
inc
push
jbe
pushf
pop
cmp
enter
jle
scas
xor
or
rolb
xchg
xchg
stos
movsl
mov
jbe
pusha
in
out
dec
sub
adc
stos
xlat
ljmp
loop
leave
mov
and
sbb
and
outsb
inc
fstps
loope
add
cmp
pop
and
cmc
dec
mov
cmp
test
les
push
xchg
repnz
enter
jecxz
test
into
push
insl
mov
add
and
cmc
cmpsl
inc
adc
test
stos
jae
out
lcall
xchg
xorl
lea
cmpsb
xchg
cmpsl
leave
inc
dec
push
jae
loop
pusha
or
sahf
cltd
hlt
rcl
mov
jb
pop
jmp
popf
movb
and
ss
cmp
adc
jl
push
inc
pop
jbe
xchg
popa
ds
cmp
sub
push
xor
push
in
sbb
repz
icebp
call
lcall
pop
dec
pusha
dec
jbe
mov
push
cmp
sub
push
fs
inc
xchg
shlb
jae
pushf
cld
pop
arpl
loope
lods
out
or
xchg
adcl
xchg
add
jmp
js
mov
and
sbb
ret
and
xor
sti
sbb
outsb
addr16
adc
push
cmp
xor
loop
and
stc
leave
add
inc
adc
test
cmp
jecxz
xchg
imul
nop
test
xor
dec
mov
jmp
inc
adc
nop
cmp
rclw
arpl
setns
inc
rcrl
mov
out
movsl
add
xchg
movsl
xor
ret
jl
js
pop
cmp
mov
mov
mov
clc
imul
dec
out
jo
and
cmc
push
movsb
inc
out
pop
push
sbb
push
mov
jae
jns
mov
pop
or
push
scas
nop
movsl
sbb
std
mov
mov
adc
mov
dec
and
push
lahf
mov
pop
nop
fisubl
out
pop
aas
imul
das
mov
int
adc
pop
cltd
lret
pop
sbb
pop
scas
mov
jbe
pop
or
loop
xchg
mov
pop
stc
test
pop
in
out
int3
fildl
mov
sub
enter
rolb
outsl
fwait
mov
or
arpl
jl,pn
xorl
xor
es
pop
loope
out
sbb
data16
mov
xor
mov
add
adc
mov
fs
inc
cmp
cmp
lret
jb
inc
adc
mov
mov
movsb
pop
or
subb
aas
iret
add
sub
call
inc
lahf
pop
xchg
push
jmp
scas
add
mov
inc
outsb
inc
mov
lcall
enter
sar
inc
ja
mov
data16
xor
cltd
jp
jno
jns
lret
jecxz
adc
pop
stc
mov
andb
fisttpl
cmpsb
mov
sub
in
out
pop
lods
cmpsl
ficoms
lds
mov
imul
inc
aas
int3
cmc
adc
jle
fcmovnb
pop
aas
jbe
mov
fisubrl
cmp
aas
mov
ljmp
xor
je
std
xchg
in
mov
xor
je
sbbb
cmpsb
js
or
lods
lret
outsl
cmpl
std
mov
insb
mov
pop
xchg
mov
cmpsl
lahf
adc
stos
mov
jp
or
outsl
mov
xor
add
mul
or
ja
xor
mov
sub
imul
mov
fcompl
lret
fs
out
in
sub
xor
xchg
sahf
cmp
sub
sti
sbbl
pop
cmpsl
xadd
cmp
jl
or
je
cmpl
test
jno
jmp
inc
sub
out
jle
xchg
rcl
cmp
sbb
fstp
ds
mov
cld
pop
test
pop
aas
sbb
mov
xlat
call
or
clc
inc
jb
sarl
jle
adc
mov
dec
incl
push
sbb
cmp
repnz
pushf
xchg
inc
fldenv
push
or
imul
xchg
xor
in
adc
inc
sbb
clc
dec
sbb
mov
or
cmp
ljmp
push
sar
addb
shll
sbb
xchg
mov
loopne
ficompl
data16
frstor
or
aad
jne
mov
pushf
pop
sbb
mov
lahf
std
dec
aaa
mov
loopne
push
movsb
repz
dec
fiadds
jo
rolb
fstps
xchg
rolb
jae
fdivr
and
xchg
mov
pop
cmpsb
repnz
sahf
iret
std
lret
daa
or
dec
cs
push
js
xchg
cmpsl
and
repnz
pop
jae
cmpsl
sub
inc
gs
int3
mov
add
pop
mov
push
mov
insl
jge
push
flds
fwait
cmc
xor
sub
mov
jmp
int
cmpsb
cli
lret
mov
aaa
in
mov
ret
add
fcmovu
or
aam
lods
push
xor
aad
jecxz
inc
imul
dec
lret
outsb
push
inc
fs
scas
mov
icebp
pop
jp
mov
and
aaa
ss
jbe
pop
cwtl
push
outsl
ja
imul
mov
mov
xor
popf
jo
test
bound
loopne
pop
mov
std
aas
inc
enter
mov
xchg
int
mov
stos
mov
sbb
call
int
fcompl
test
daa
dec
fmul
fidivl
xchg
ret
mov
jmp
stos
iret
jno
mov
popa
push
imul
lea
jnp
jae
loopne
es
rcr
out
sub
adc
lds
aas
pop
sbb
lock
and
cmpsb
pushl
dec
fisttps
shll
lds
addr16
mov
add
ret
and
xchg
pop
adc
nop
iret
xor
test
cltd
mov
cmpsl
sbb
push
add
sub
in
lret
adc
jns,pn
add
add
js
or
mov
repnz
sbb
bound
mov
shrb
xchg
or
cmpsl
lea
pop
ja,pn
out
in
mov
sub
sti
xor
dec
adc
inc
cmpsl
roll
cwtl
fnsave
stos
rcrl
jne
dec
fwait
cmp
jp
sbb
lock
idivl
stos
push
and
mov
inc
enter
int
vdivss
add
test
cwtl
mov
xor
push
jbe
pop
cmpsb
mov
rclb
lods
fs
out
inc
test
inc
call
xchg
decl
mov
test
clc
sub
mov
cmc
repz
sub
movb
jb
mov
cmp
cmc
lods
xor
out
xchg
push
mov
xor
mov
enter
decl
jmp
dec
outsb
and
and
daa
movsb
push
dec
and
pushf
sbb
popf
jb
and
dec
out
repnz
pop
cmp
insb
nop
jecxz
sahf
rcrl
fidivl
mov
dec
mov
lret
mov
mov
add
test
pop
arpl
push
pop
shlb
int3
xchg
shrl
add
out
jg
loopne
sbb
add
popa
subb
int3
leave
or
pop
icebp
call
sbb
push
cltd
and
xchg
cs
sahf
sbb
std
inc
dec
aaa
cmp
outsb
dec
pop
in
pop
in
or
aad
les
fs
mov
fmul
int
lods
sarb
mov
mov
mov
adc
filds
adc
xor
outsb
push
insl
push
lret
xorb
jle
repz
fs
movsb
mov
movsl
dec
and
scas
repz
add
movsb
insb
scas
jae
fisubl
cmp
mov
pushf
popf
gs
popf
insl
sahf
test
mov
movsb
cmp
shlb
repnz
addb
test
mov
pop
pop
inc
mov
cmp
push
push
dec
arpl
pop
repz
outsb
fs
push
loop
jmp
cmp
and
stos
mulb
das
jbe
femms
std
or
and
or
jbe
dec
xorb
mov
sbb
and
pushf
popa
jns
int3
or
fsts
sub
lret
xchg
inc
sub
das
mov
nop
in
add
jge
insl
std
clc
dec
lods
jbe
out
popl
cvtps2pi
jl
push
mov
hlt
repnz
and
aas
mov
negl
xlat
hlt
cmp
out
sub
adc
pop
pop
das
subl
pop
and
aaa
out
xor
or
out
cmp
cmpl
ss
cli
mov
scas
dec
mov
fucomp
sub
daa
cltd
enter
iret
pop
lret
scas
add
outsb
jb
inc
xchg
fidivrl
in
decb
push
jae
mov
aaa
int3
xor
push
pusha
xchg
jp
push
pop
xor
lods
add
mov
shrl
inc
movsb
adcl
imul
or
cmpsb
lcall
jb
es
and
ret
pushl
inc
pusha
movsb
xchg
lds
outsl
fcmovnu
fidivs
add
imull
pop
or
and
cwtl
shlb
xlat
dec
stos
fwait
std
lret
mov
bound
stos
or
sbb
xor
mov
add
sbb
mov
jmp
or
movsl
stc
push
sub
dec
testb
sbb
mov
jge
jnp
dec
fisubl
pop
ret
or
cli
dec
mov
xchg
vpor
add
mov
mov
xchg
inc
xor
insl
push
divb
stos
stos
xchg
mov
xor
mov
imul
mov
fstl
adc
loopne
aaa
shlb
lods
lods
mov
jo
fs
pop
int3
stos
mov
sbb
lock
mov
sti
fwait
jns
inc
dec
pusha
ss
cmp
jo
add
ja
xchg
clc
xchg
jecxz
or
inc
rorl
ret
cmp
inc
sbb
jmp
mov
jae
pop
addr16
xchg
and
stos
adc
add
lods
mov
shlb
mov
or
xlat
pusha
dec
dec
mov
js
movsl
xor
subl
inc
in
and
push
fs
outsl
jns
movsl
cmpsb
cmc
daa
or
mov
pop
jo
mov
push
fmulp
mov
scas
inc
pushf
push
in
fsubr
fwait
pop
cmp
jmp
xor
mov
push
aad
add
popf
aam
lea
inc
xor
jle
add
sub
adc
mov
sbbl
mov
push
lret
sbb
mov
and
aas
pop
mov
pop
xor
test
xor
inc
movsb
adc
dec
pop
pop
dec
imul
movsl
sar
lahf
movsl
cltd
repz
pop
movsb
loop
in
lahf
sarb
and
sub
in
cmp
pop
out
pop
data16
movsb
je
scas
inc
mov
add
outsb
repz
arpl
xchg
adc
push
push
mov
pop
outsl
jle
sub
cs
push
ss
fs
dec
mov
pusha
mov
ret
dec
loop
mov
mov
lcall
xchg
test
push
fldl
adc
push
inc
or
mov
or
lcall
jno
std
jl
repz
outsb
jge
adc
sbb
push
icebp
pop
mov
mov
add
inc
cmp
or
push
add
lahf
je
pop
add
dec
cwtl
testb
xchg
cmp
adc
adc
mov
cmpsl
sbbl
inc
pop
push
nop
dec
dec
popa
loopne
pop
fldenv
les
xor
shlb
mov
fmuls
adc
cmp
nop
stos
jo
cmpl
xchg
and
push
inc
bnd
in
dec
jmp
mov
loop
adc
arpl
sbb
mov
dec
cmp
jno
xlat
out
iret
or
mov
inc
xchg
fmuls
in
je
pop
mov
pop
jmp
ljmp
nop
fucom
inc
cmc
xor
fnstsw
xchg
adc
cmpsb
data16
mov
mulps
push
sub
add
and
or
into
mov
aad
and
xor
push
dec
push
jb
ret
or
fwait
dec
movsb
mov
push
pop
cmp
mov
xchg
xchg
negl
mov
loopne
mov
aam
pop
cld
dec
xchg
inc
cmp
dec
jecxz
outsl
inc
shrb
xchg
ljmp
jne
adcb
popa
mov
inc
jle
nop
xchg
push
mov
mov
sbb
daa
jle
stos
and
mov
xor
cmp
mov
pop
pop
mov
scas
popa
xor
test
lds
je
mov
dec
lret
aas
cmp
mov
int3
sti
pusha
xor
mov
paddq
add
dec
add
mov
mov
aad
mov
cwtl
icebp
pushw
movsl
and
mov
leave
push
and
fdivl
dec
xor
pusha
pop
cmp
pop
cs
sarb
outsl
in
pop
dec
mov
inc
push
mov
jb
lret
add
dec
sbb
xchg
ja
xor
xchg
mov
adc
cmp
div
xor
cmp
cmp
mov
add
sbb
xchg
mov
push
out
arpl
and
mov
xchg
mov
bound
adc
xchg
sub
or
push
and
adc
fimull
fstl
adc
mov
push
aad
ljmp
push
popf
add
fisubrl
fadds
test
jp
into
push
repz
fnstsw
andl
inc
push
popf
push
notb
cmp
mov
testb
fdivs
xchg
and
fisttpll
stos
lods
in
cmp
fsubrl
pop
ljmp
mov
push
jbe
mov
loope
jo
loopne
fists
cmp
dec
mov
ret
repnz
in
mov
rolb
or
outsl
ds
add
in
pop
sti
cltd
xlat
test
add
jecxz
add
pushf
pop
adc
pop
ror
pop
sbbb
or
andb
shrl
xchg
adc
fildll
aas
pop
stos
fistpll
mov
sub
push
imul
jns
mov
or
sbb
scas
dec
add
pop
daa
sub
enter
add
cli
push
xchg
xor
mov
insl
movsl
pop
ja
fisubrl
call
push
mov
mov
sbb
orb
push
fwait
and
mov
in
push
jp
mov
popf
stos
subb
sub
int3
jmp
loop
or
add
xchg
add
dec
fsubrs
das
sbb
xchg
pop
adc
nop
ret
insb
test
mov
loopne
adcb
inc
jg
stos
cmpsb
xchg
aaa
xor
into
or
into
sbb
inc
xchg
aas
lds
xchg
pop
insl
inc
jb
inc
push
fbstp
lea
adc
nop
push
push
jnp
shl
cwtl
fsubl
and
stc
mov
out
loop
sub
push
push
fwait
sub
or
rcrb
push
add
mov
test
shl
int
adc
aas
xor
loope
test
repnz
out
xchg
adc
jge
mov
loop
fistl
pop
mov
push
sub
sub
shrb
ss
pop
add
jns
jg
loop
push
xchg
ret
scas
pushf
push
stc
clc
mov
sbb
xchg
pop
stc
mov
shr
arpl
pushf
sti
pop
push
cmpsb
xor
sbb
sbb
inc
imul
adc
in
mov
adc
jne
adc
adc
ljmp
push
out
cwtl
lock
frstor
adc
push
push
cli
sbb
jmp
xorl
xor
ret
outsb
xchg
out
push
test
out
push
sbb
movsl
inc
xchg
sbb
bound
aaa
aas
jmp
cwtl
push
mov
sub
sbb
addr16
xchg
jno
push
aad
mov
or
mov
outsl
icebp
sbb
hlt
push
sub
mov
popf
push
push
pop
nop
and
sub
sbb
sub
pop
dec
sub
jbe
lret
hlt
mov
and
outsb
scas
out
jl
leave
icebp
insl
jmp
push
fwait
pop
xor
lcall
inc
ljmp
jmp
sub
lds
es
std
js
xchg
sahf
push
mov
and
rolb
in
repnz
lea
mov
pop
pop
stos
andb
dec
pop
push
cs
ljmp
mov
and
les
subl
mov
stc
fildll
arpl
dec
idivl
hlt
fsubrs
sub
call
fstpt
mov
ret
mov
xor
and
pop
js
jne
add
loop
ror
pushl
outsb
in
addl
loope
sarb
pop
loop
je
fdivl
inc
push
out
popa
js
sti
leave
inc
test
fs
fwait
orl
loope
xchg
cmp
out
inc
jl
cltd
repnz
adc
iret
sub
imulb
scas
cltd
mov
fdivs
setbe
jmp
loop
or
clc
data16
push
mov
es
cltd
inc
loopne
mov
in
dec
push
mov
mov
xchg
sarb
mov
xchg
je
xor
imul
imul
lods
cmp
sub
pop
cmc
push
mov
ja
aas
and
out
xchg
int
ja
push
sbb
stos
push
jg
sub
loope
adc
add
xchg
xchg
std
jbe
or
out
movsb
stos
push
aas
es
cld
push
mov
mov
mov
pop
mov
fstps
xlat
hlt
pop
pusha
jo
dec
gs
ffreep
and
out
sub
data16
or
mov
mov
call
inc
mov
lods
das
lret
jae
adc
mov
add
fnsave
sbb
pop
andl
imul
add
aas
insl
gs
or
cmp
mov
fcomps
les
das
sbb
inc
adc
loopne
xchg
out
or
sbb
push
lods
bts
lahf
or
lret
inc
and
std
sbb
jnp
cmpsl
adc
cmp
leave
xchg
add
xchg
pusha
cwtl
and
pop
bound
test
ret
lret
in
and
mulb
in
out
xor
xchg
inc
dec
outsl
imul
inc
jl
aad
sbb
loope
orl
xchg
fwait
sub
subl
jmp
sub
js
xchg
shrb
cmp
mov
adc
and
and
mov
inc
loope
fistl
icebp
mov
bound
bound
sub
cmpsl
loop
test
sbb
int3
fiadds
add
and
aas
jecxz
inc
sbb
sub
push
jp
sarb
shll
inc
pusha
xor
cs
adcl
iret
pop
shr
and
mov
repnz
movl
dec
lcall
xlat
sub
jl
mov
adc
cmp
add
jns
out
aam
sub
pushf
jp
push
test
xor
push
in
jae
pusha
aas
jmp
pop
sbb
movsb
sub
inc
lret
into
adc
aaa
call
mov
test
movsb
aas
lods
or
leave
into
inc
sub
mov
into
aaa
ficomps
testl
jge
mov
or
push
fwait
arpl
addb
cmp
mov
dec
mov
or
jecxz
andl
xchg
rcll
test
xchg
fldt
dec
add
mov
imul
push
adc
lock
repz
xchg
rorb
adc
cmp
repnz
xor
loope
daa
sub
mov
decl
out
push
dec
mov
mov
push
rcrl
sub
xchg
or
mov
movsb
xor
cmp
daa
into
jge
mov
mov
inc
mov
add
mov
test
repnz
pop
xchg
enter
push
outsl
jle
mov
aad
sbb
or
in
test
lahf
nop
mov
xchg
call
push
out
pop
cmp
test
mov
mov
sbb
inc
outsb
jp
sbb
in
add
push
mov
dec
ss
js
insb
outsl
push
ror
pusha
push
dec
mov
jnp
sbb
cmp
sub
fs
mov
pop
inc
sbb
pop
sub
and
dec
das
in
jae
sbb
xchg
mov
dec
mov
arpl
lahf
lahf
push
cmp
aaa
xchg
mov
jp
outsl
cld
xchg
add
mov
lods
add
add
xlat
es
les
rorl
imul
fnstsw
lock
daa
inc
xor
in
mov
pop
xlat
mov
lods
mov
mov
pop
fstpl
mov
cld
stc
and
xor
xor
jbe
test
xlat
jnp
or
aas
xor
sbb
mov
xor
pushf
cli
adc
cmp
subl
pop
scas
leave
leave
jbe
das
pop
es
sbb
adc
scas
dec
and
dec
ret
loope
cwtl
sbb
das
fsubrs
sub
out
outsb
ret
xchg
pop
adc
fsubr
push
pop
lock
jmp
out
or
dec
xlat
add
fwait
cmpsl
cltd
sub
or
fistpll
xlat
test
out
test
daa
sub
lods
add
cmp
cmpsl
test
das
cmc
mov
mov
jmp
mov
psubd
xchg
cmp
push
rclb
out
aaa
and
push
pop
js
ds
orl
xchg
insb
xor
xchg
or
stc
mov
dec
imul
movsl
fdivrl
pop
and
cli
pop
mov
cli
adc
sti
add
movsl
dec
xor
sbb
adc
push
push
inc
leave
mov
in
sub
add
add
popa
cmp
cld
insb
jmp
lret
stos
mov
and
pop
lcall
jno
mov
jne
inc
xorb
and
mov
or
notb
mov
in
xlat
adc
es
jle
mov
and
mov
or
or
cmp
movsl
shll
arpl
mov
mov
addr16
test
sbb
jns
fsubrp
xor
inc
dec
pop
lcall
popa
jne
cmp
lods
jmp
bnd
adc
and
fadd
xor
xchg
mov
pop
movsb
and
syscall
jns,pt
daa
push
int3
scas
xor
lods
push
icebp
insl
pop
imul
int3
cmpsl
aad
ud0
jg
insl
in
bound
inc
sub
pop
leave
dec
jns
cmpsl
scas
fwait
cmp
jbe
mov
int
mov
lcall
dec
pop
es
repnz
popa
sbb
mov
test
xorl
loop
add
ss
test
addb
mov
or
sbbb
cwtl
leave
fisttpl
insl
fmuls
pop
or
jmp
out
cmp
lcall
int3
lcall
mov
loope
or
add
mov
mov
mov
jb
add
dec
sub
xchg
mov
icebp
mov
insl
js
aam
dec
daa
aad
in
xchg
fcoms
inc
aam
push
divb
or
jno
sub
shrl
enter
mov
int3
cmc
mov
hlt
int
and
pop
jbe,pt
int3
and
cmp
fidivrl
insb
mov
mov
inc
xor
in
or
jmp
jp
xchg
push
sub
adcb
xchg
pop
dec
daa
aaa
cli
pop
int3
cmpb
inc
push
dec
subb
dec
xchg
outsl
repnz
dec
push
push
mov
dec
xor
inc
in
iret
sub
push
or
xchg
and
adc
dec
inc
fcompl
mov
dec
lret
cmp
jae
mov
xchg
mov
inc
mov
cmp
dec
push
adc
or
data16
test
lods
xchg
test
xlat
shl
sbb
lds
dec
das
insl
insb
inc
enter
jns,pn
pop
je
mov
pop
add
mov
inc
mov
addr16
fisttps
xchg
imulb
cmpsb
loope
cmp
adc
repz
cmp
xlat
jae
xchg
stos
mov
rol
jmp
jno
lds
jecxz
dec
rorb
mov
mov
jmp
sarl
xor
mov
push
dec
lock
adc
call
and
lahf
divl
add
mov
cmc
add
inc
lds
inc
jae
int
push
push
jmp
push
fists
daa
mov
ret
cmp
xchg
mov
xchg
or
adc
pushf
lea
mov
sbb
loopne
sbb
push
ds
mov
mov
jmp
add
dec
stos
add
pop
es
icebp
dec
jo
outsl
xor
jno
ss
mov
mov
popf
insb
sub
and
add
mov
daa
add
rep
sub
nop
popa
sbb
jmp
scas
lds
xlat
fcmovb
xor
jb
push
es
push
lea
fs
and
call
jle
xlat
mov
cs
or
in
sub
fimuls
inc
movsl
js
ret
jae
push
clc
pop
pop
shlb
mov
les
jo
loope
sub
ja
loopne
xor
inc
adcb
and
sbb
das
stc
add
sbb
cltd
mov
cmpsl
js
std
js
insl
sbb
push
sbb
or
imul
adc
and
lcall
add
andb
dec
jae
mov
pop
sub
aas
cwtl
gs
cmpsl
sub
mov
jmp
xchg
inc
clc
mov
adc
or
nop
in
ss
adc
cmp
insl
mov
clc
in
mov
and
add
je
jo
jo
and
mov
xchg
jge
inc
addr16
scas
xlat
lret
jo
in
pop
sahf
add
sahf
leavew
enter
dec
or
lcall
jecxz
mov
out
paddd
test
cmpsl
mov
repz
cli
imul
add
and
ret
in
xor
fildll
imul
jnp
mov
mov
push
add
push
ret
mov
cmc
sti
mov
xchg
pop
pop
push
cmpsl
ret
les
cmc
push
lahf
ljmp
lods
push
xor
addb
test
xlat
pop
fucomip
cmp
scas
jmp
push
lods
fsubs
into
cmovns
and
es
or
dec
sub
mov
movsb
add
xchg
pop
ret
das
scas
fs
imul
stos
pop
cmpsb
cmp
push
adc
lret
cmp
sahf
push
ud0
inc
xchg
dec
or
xchg
je
inc
or
push
int3
shlb
inc
test
lea
add
hlt
jne
test
leave
sub
cmp
cwtl
add
mov
xlat
inc
sti
loop
dec
push
xlat
cmp
jnp
test
and
xor
xor
ja
add
je
fdivs
lret
test
mov
ret
mov
xor
pand
repz
jmp
repnz
fnstenv
imul
iret
cs
sub
inc
xor
jnp
int3
jbe
test
jnp
push
std
sahf
or
scas
shl
inc
pop
or
testb
sbb
adc
sub
popf
jecxz
mov
pushf
jbe
rolb
out
cmp
sahf
lahf
mov
jbe
aas
adc
sub
icebp
jno
movsb
int3
movsl
shll
or
insl
add
jl
sbb
ret
sbb
scas
mov
inc
out
jns
inc
sbbb
mov
push
gs
ja
das
jecxz
out
stos
inc
jae
dec
int3
push
loopne
mov
sub
cmc
xlat
cmp
add
cmp
jge
test
iret
aaa
in
push
xor
sub
mov
push
xchg
fidivrs
xchg
lcall
cmp
out
sbb
pop
ret
stos
push
clc
outsb
inc
sbb
addr16
out
pop
and
shl
mov
sub
sub
js
mov
xchg
jmp
repnz
fistpll
imul
xchg
mov
jae
cltd
dec
movsb
xchg
mov
stc
and
daa
out
ljmp
and
popl
popf
mov
adc
addr16
sbb
bound
xor
popf
dec
xchg
dec
cmc
mov
mov
jb
call
nop
push
ret
sbb
std
dec
cmp
popa
in
and
insb
ss
and
test
jl
ficoms
pop
testb
add
movsb
rorb
xchg
cltd
leave
enter
push
cmpsl
outsb
or
outsl
sbb
xor
or
xlat
call
jmp
cmovp
movsl
in
daa
flds
jmp
js
stos
inc
sub
push
leave
sub
mov
fwait
mov
and
cli
mov
mov
pop
cmc
test
mov
xlat
mov
sti
pop
adc
repz
test
sub
mov
gs
aam
mov
cmp
sbb
movsl
dec
and
mov
adc
test
sbb
xor
outsb
sti
push
pop
or
rcl
es
aas
out
mov
add
jl
lds
jmp
xor
dec
mov
rclb
mov
inc
mov
lret
bound
outsl
aad
icebp
xor
inc
pop
mov
dec
mov
js
pop
adc
xchg
inc
xor
pop
mov
mov
rcl
stos
fisttpl
mov
push
pop
inc
add
mov
xchg
roll
inc
add
iret
and
dec
lahf
xorl
outsl
sbb
sarl
jns
aam
pop
adc
inc
xchg
mov
sub
adc
mov
pop
out
dec
aad
add
push
sub
inc
lahf
xor
pusha
loopne
cmp
repnz
int
cwtl
push
sbb
out
xchg
jo
xchg
cmpl
mov
movsl
test
shlb
mov
imul
shll
push
les
test
or
out
dec
test
push
shll
fildl
nop
sbb
cmpsl
fisubs
insb
pop
jl
sbbb
push
xchg
hlt
fcompl
iret
repz
xchg
xchg
jl
in
add
pop
mov
inc
js
and
lea
ljmp
mov
mov
sub
and
mov
lea
imul
mov
inc
dec
insl
mov
inc
js
insb
sbb
bound
addl
xchg
hlt
ja
mov
mov
popf
das
rcr
inc
ret
xor
mov
lahf
lret
call
or
jns
sbb
incb
imulb
dec
into
adc
ficompl
jae
push
lds
push
inc
rcl
mov
xchg
jle
pop
loop
dec
repnz
xchg
lret
sub
out
std
movsl
and
pop
xchg
clc
sbb
push
outsl
movsb
pop
sub
jbe
jmp
jecxz
lds
rcl
lods
aaa
orl
jecxz
push
mov
adc
and
pop
cs
sbb
xchg
nop
and
gs
jno
in
push
push
sub
popa
fstpl
or
fidivl
add
outsl
imul
scas
in
push
lcall
aaa
addr16
insb
pushf
inc
rcr
mov
stos
adc
xchg
add
mov
shll
aad
ja
imul
jo
xor
aas
icebp
mov
pop
add
loop
mov
jge
lds
pop
loope
jo
inc
int3
push
es
inc
stos
cmp
shrb
cmpsb
cmpsl
push
rolb
orl
mov
push
sbb
daa
into
adc
in
and
push
pop
stos
js
mov
mov
nop
cli
nop
popl
rcrb
sti
adc
jo
in
mov
lods
sub
or
ret
inc
in
add
rsm
cmp
inc
xchg
insl
sbb
clc
or
ret
jecxz
push
lahf
fstpt
rorb
ret
daa
inc
scas
fwait
add
pusha
push
cs
dec
adc
pushf
clc
lds
xchg
test
mov
ljmp
les
pop
xchg
insb
mov
sarb
mov
mov
out
and
cmc
ficompl
pop
into
data16
mov
push
inc
xchg
sbb
loop
out
and
xchg
sbb
dec
ds
dec
xor
stc
xor
adc
cmp
sub
rolb
pushf
dec
das
or
jle
inc
lock
ss
jle
jp
mov
push
xor
pop
adc
push
jecxz
push
repz
add
and
repz
mov
inc
stos
loope
vpsubb
rclb
xor
gs
push
add
xor
or
pop
in
mov
jbe
aad
xchg
rorl
jbe
push
mov
mov
notb
test
xor
jl
pushf
fsts
fiadds
rcrl
lods
roll
fcomi
addb
lods
pop
add
lea
jecxz
nop
jbe
cmpsb
data16
xchg
fwait
jbe
jne
aas
aam
xchg
mov
pop
cmpsb
repnz
inc
cs
mov
xchg
aas
mov
sbb
insl
push
cmpsb
jecxz
cltd
sarb
fsub
ret
imul
push
pop
lret
push
pushf
cwtl
scas
mov
xchg
adc
cmc
mov
fldenv
adcl
xchg
jo
daa
std
mov
mov
add
push
iret
js
jns
lahf
fadds
lahf
sbbb
mov
jae
or
xor
inc
hlt
fsubs
mov
mov
sub
or
in
xorl
jmp
incb
cwtl
cmpsb
loope
sti
mov
mov
sbb
ds
and
push
mov
and
loop
add
icebp
pushf
cmc
mov
popf
sbb
gs
stc
repnz
inc
cmp
xchg
jmp
jns
in
jo
arpl
xchg
push
inc
sub
cmp
test
push
xor
sahf
shll
aaa
jae
gs
and
shl
xor
in
and
inc
pop
call
cmp
mov
sti
in
dec
leave
in
je
popf
mov
imul
fistpl
push
sahf
xor
jp
lea
sub
test
pop
inc
push
scas
sub
std
sbb
pop
mov
loop
dec
loop
shrb
outsl
shlb
push
je
mov
ds
out
mov
cmp
dec
lods
cmp
cmp
cld
cld
push
nop
fwait
js
mov
sub
insl
mov
andb
aaa
rolb
pop
rcrb
jno
lcall
pop
mov
sbb
addr16
mov
fadds
mov
adc
in
pop
sahf
aas
inc
sbb
aam
aas
or
ljmp
cmp
lahf
sbb
orb
aas
lea
lock
pop
popf
ds
rcll
mov
inc
mov
push
inc
out
sbb
dec
das
fcmovu
add
mov
dec
and
mov
loopnew
add
mov
and
repnz
or
pop
xor
mov
fbld
aas
mov
fisttps
cmpsl
dec
pop
insl
mov
xor
add
iret
outsl
cmp
xchg
pop
jno
mov
cmovo
mov
push
push
add
shrb
push
jecxz
test
out
add
xorl
stos
xchg
out
xchg
pop
or
mov
cmp
mov
xchg
into
loopne
cmp
jne
fwait
and
std
sbb
subb
jae
cmpsl
pop
clc
mov
fwait
scas
rorl
cmp
aad
das
fwait
jbe
in
jne
testb
and
loop
jl
gs
outsl
sti
cmp
cwtl
roll
jb
dec
mov
cmp
dec
cmp
mov
mov
xor
mov
gs
or
or
mov
dec
test
les
arpl
jbe
cltd
bound
mov
pop
cmp
lods
and
pop
cld
add
add
xor
out
xchg
das
add
cmp
push
push
ss
pop
pop
sarb
subb
xor
ss
mov
and
scas
sbb
xchg
xor
adc
std
stc
mov
inc
cmp
xchg
hlt
cmpsl
fimull
insb
dec
or
lret
out
sbb
hlt
pop
data16
mov
add
enter
mov
insl
adc
ret
mov
repnz
cmp
xchg
jge
das
push
cmc
push
aam
mov
lret
leave
and
push
lea
jmp
jo
nop
shlb
jb
in
je
inc
cmp
mov
or
cmc
mov
test
push
cli
cli
js
mov
jnp
int
adc
negl
cwtl
dec
jl
push
pop
sub
iret
stc
mov
int
dec
xor
mov
cmp
mov
addr16
mov
adc
xchg
pop
outsl
sbb
sub
and
sbb
int3
test
xchg
data16
movsl
das
repnz
push
lods
inc
bnd
mov
mov
scas
lcall
in
shll
xchg
inc
mov
leave
sub
pop
jmp
stos
loope
ffreep
int
jo
test
jmp
sarb
shrb
push
shrb
inc
push
dec
incl
stos
pop
mov
jp
int
inc
lret
cli
xlat
dec
adc
cmp
pushf
push
xor
cmpsb
jmp
push
and
mov
dec
lcall
clc
imul
insl
pop
ret
sub
stc
imul
mov
aaa
leave
arpl
pop
ret
mov
xorb
stc
mov
inc
cmp
dec
lods
pop
mov
push
test
imul
dec
imul
sbb
lea
adc
dec
mov
mull
xchg
mov
and
mov
jno
rorb
adc
lock
out
fstl
add
insb
ljmp
je
add
jnp
outsb
daa
enter
in
jo
xor
and
sub
dec
outsl
rorb
test
mov
out
ds
push
mov
sbb
jns
rolb
dec
iret
fcmove
jae
jno
sub
mov
mov
test
test
insl
pop
popa
xor
mov
mov
xchg
aam
ret
xor
jl
testb
add
aas
lods
and
dec
xchg
add
sub
push
adc
xor
imul
adc
movsb
hlt
dec
fstps
cmpsl
sbb
cwtl
xor
xor
jae
mov
cmp
jae
mov
cmpb
aam
and
aad
imul
cld
sbb
repz
in
stos
and
clc
sbb
pop
sub
lods
pop
push
jl
addr16
aas
pop
push
jbe
and
movsl
sub
jg
xor
and
in
ret
mov
push
cmp
mov
ja
int3
in
pop
xchg
xlat
addl
mov
dec
ror
cwtl
and
movsl
icebp
mov
mov
pop
jp
clc
add
mov
ljmp
cs
imul
and
jmp
sub
mov
dec
dec
aad
push
cmp
cmpsb
xchg
pop
cwtl
lds
xor
mov
imul
xchg
stos
sbb
popa
mov
jle
hlt
xor
pop
test
dec
add
pop
mov
sub
xchg
movsb
test
pusha
cmp
or
test
lahf
or
adc
sub
addb
pop
sbb
mov
arpl
fwait
ror
jb
lahf
iret
cs
xchg
xor
std
ret
adc
or
mov
jb
mov
andl
int3
xor
addr16
inc
rcrb
aaa
lods
dec
cltd
int
test
push
sbb
fcmovnbe
jl
das
fiadds
outsl
outsl
cmpsl
call
mov
pop
dec
inc
or
mov
ljmp
and
adc
and
lret
jno
sbb
pop
fcomps
jnp
ss
push
mov
lahf
mov
sbb
pop
lret
sbb
gs
les
jns
and
push
cmp
sti
iret
sar
les
icebp
xchg
push
aas
xchg
aad
xor
std
int3
loope
daa
lea
cs
popf
dec
push
fistpl
jmp
cmp
pop
pop
push
sar
jne
add
add
sub
lret
xor
jmp
popa
lock
les
pop
lcall
inc
mov
outsb
lret
push
ds
pop
and
loopne
xor
incl
bound
xchg
pop
mov
clc
xorl
mov
es
lret
ret
repnz
push
lds
call
addr16
add
es
xor
jl
inc
sub
shrl
pop
cltd
or
int3
sahf
iret
fwait
pop
push
ja
adc
ficomps
decb
fisttpl
les
outsl
add
lods
inc
or
jb
lret
push
ffree
test
adc
rorb
dec
add
jmp
push
inc
call
and
fisubl
cmp
popf
lods
inc
cltd
scas
sub
mov
into
mov
arpl
pop
movsb
pop
fnsave
shl
mov
xchg
iret
lock
inc
fcomps
sub
stc
insl
sub
jle
aam
js
sbb
pop
sbb
mov
cltd
mov
aas
lcall
sti
ljmp
cmp
std
adc
jecxz
xor
movsl
mov
or
inc
enter
je
aaa
xchg
mov
iret
fisttpll
jno
shlb
lcall
cmc
inc
mov
sahf
xchg
push
or
dec
cmp
lds
addb
xchg
mov
xchg
aam
push
loop
cmp
mov
icebp
sbbl
negl
pop
ret
loopne
sbb
sbb
mov
sbb
das
and
fs
mov
stc
add
int
and
mov
adc
push
stos
pushw
cmp
shl
ret
bnd
jle
dec
and
sub
xchg
inc
xchg
add
adc
push
aaa
sbb
adcl
pop
cmp
xor
stos
or
arpl
xor
jl
or
mov
push
cmpsb
sarb
and
pop
std
mov
mov
ja
loopne
fld1
shll
add
ds
gs
and
mov
push
push
jmp
xor
test
pop
mov
fmuls
cli
mov
popf
push
aam
pop
adc
aad
mov
ljmp
mov
dec
punpckhwd
mov
add
bound
xchg
jae
hlt
into
inc
lea
dec
fnstenv
pop
arpl
test
mov
and
add
xor
xchg
cmp
push
stos
sarb
pusha
mov
icebp
mov
repnz
mov
mov
mov
mov
lds
lods
sub
cmpsl
repz
stc
inc
shll
jl
call
imul
scas
mov
jbe
cmp
mov
or
mov
pusha
rcrl
fimull
pop
pop
cli
adc
xor
lcall
imul
ret
decb
js
inc
in
or
push
je
insb
jae,pt
and
adcl
mov
setb
xchg
popf
dec
jecxz
sbb
rolb
testl
shlb
ljmp
pop
add
sbb
push
fs
pop
das
xor
jo
mov
cwtl
or
rcrl
arpl
mov
xor
jle
xchg
testb
leave
sub
push
fidivrs
sub
sub
lods
pop
dec
loopne
int3
mov
or
dec
fldenv
fwait
in
fwait
or
adc
movsl
push
push
adc
jl
ljmp
orps
pop
mov
jecxz
int
loop
stc
test
cmp
pop
daa
aam
and
push
out
outsl
jl
inc
push
repnz
or
pop
cli
in
and
movsl
repz
sahf
out
lret
inc
dec
cmp
xchg
std
cmp
cltd
mov
test
mov
cmp
adc
sub
jmp
and
outsb
movsl
in
int3
ret
bound
ret
sub
addr16
lds
or
and
scas
jb
cmc
push
sub
xchg
jl
mov
enter
mov
inc
inc
dec
push
int3
js
add
pop
arpl
xlat
test
movsb
xor
mov
inc
into
ret
inc
loope
iret
in
or
add
dec
jae
inc
push
mov
mov
pusha
push
push
push
shrb
outsb
lods
scas
fidivrs
sbb
mov
xor
mov
fdivr
jl
pop
inc
lcall
daa
dec
fsubrs
imul
std
dec
jb
jmp
and
push
pusha
rcrb
popf
pop
inc
jl
pusha
and
lods
add
out
adc
out
and
xchg
lock
icebp
sub
and
fsubs
int
mov
test
or
jno
rcrb
ja
andl
jnp
xchg
ss
ret
dec
aad
ja
bound
push
ror
test
xor
jmp
dec
push
xchg
inc
push
xchg
stc
add
mov
push
jns
jnp
clc
push
pop
sarb
dec
loop
lods
leave
cltd
cmpsb
mov
cmpsb
das
add
lea
cmpsl
test
pop
xor
mov
push
add
ljmp
data16
jmp
pop
imul
cmpl
sbb
cmp
mov
lret
and
js
pusha
jo
mov
and
or
or
stos
out
fcomp
push
xchg
lea
enter
sub
je
imul
push
cltd
jb
jns
mov
xor
mov
je
movsl
and
das
movhps
mov
mov
mov
mov
aas
xchg
stos
out
pop
lahf
and
or
insl
fcmove
scas
cmp
orl
loopne
mov
jb
or
mov
mov
pop
pushl
inc
pop
jae
sub
in
addr16
rorb
cmp
add
mov
fstl
lret
xchg
cmp
jge
jp
lcall
and
cmp
and
fisubl
icebp
push
jecxz
in
and
stc
xor
lahf
pop
or
std
add
aaa
dec
jno
mov
cmpsb
push
and
pushw
loopne
nop
mov
imul
into
test
hlt
arpl
inc
fcomps
mov
cmp
ror
out
inc
aam
movsb
mov
nop
mov
push
jmp
adc
cltd
dec
aaa
shlb
mov
sub
push
add
push
pop
nop
mov
outsl
mov
shlb
imul
and
dec
test
cmc
iret
mov
repnz
sarb
jp
mov
lcall
mov
pop
mov
addr16
arpl
enter
xchg
aad
mov
jmp
call
mov
ja
mov
adc
add
or
popf
gs
enter
aas
push
jno
push
and
push
jecxz
inc
jecxz
mov
daa
outsl
ret
sub
mov
in
fistps
push
jmp
in
dec
out
mov
dec
mov
dec
mov
out
dec
hlt
into
in
ficoms
sarl
mov
jp
cmp
clc
adc
arpl
lds
lret
aam
mov
add
fxch
aaa
sbb
and
rorb
aad
clc
test
cs
push
aas
dec
xchg
mov
aad
fwait
icebp
les
jge
cwtl
les
call
mov
xor
nop
arpl
adc
or
out
sub
inc
sar
pop
ret
lock
pop
and
pop
push
push
pusha
sub
cld
cmp
cmp
jae
sbb
es
in
movsb
sub
enter
arpl
adc
outsb
mov
test
sub
pop
lret
pushfw
sbb
sbb
stc
mov
xchg
pop
ljmp
scas
xchg
nop
testl
in
daa
dec
lret
fs
sub
mov
pop
lea
mov
outsl
fsubrs
sub
out
sub
push
cwtl
inc
jge
xchg
shl
ret
je
sbb
insb
pop
fldcw
int
movsb
lods
or
or
sbb
add
iret
std
call
jb
and
sbb
sti
pushf
ds
shlb
jp
int
jns
pop
mov
data16
or
nop
push
aas
and
jno
cmp
cmp
aad
sub
pop
leave
enter
popa
insb
in
jecxz
inc
push
popf
stos
addr16
push
push
mov
mov
inc
jp
push
inc
popf
stc
adc
cmc
sub
in
dec
call
xchg
xchg
sub
adcb
ret
xchg
cs
add
test
xchg
loop
mov
pusha
mov
addr16
leave
lock
push
xchg
push
pop
cmpsl
pop
gs
data16
cld
inc
pop
and
sbb
mov
inc
cmc
sub
add
or
xor
mov
cltd
push
pop
dec
sub
xchg
adc
mov
mov
mov
adc
movsb
pop
es
rorb
fidivrl
mov
arpl
out
and
push
jecxz
daa
and
push
sbb
push
add
xor
out
arpl
shlb
stc
out
and
xor
cwtl
cmpsb
dec
or
jb
loopne
je
add
sbb
push
arpl
jnp
jecxz
roll
mov
les
movsl
nop
or
ret
into
repnz
jo
das
inc
push
gs
cmp
xor
loop
mov
fwait
push
lods
jnp
int3
lcall
mov
cmp
out
sub
push
mov
out
pop
sbbb
adc
mov
xor
sub
dec
int3
push
dec
outsb
xor
xor
cmp
hlt
mov
inc
push
dec
fdivp
mov
movsl
clc
inc
out
in
and
cmpsl
sbb
jo
adc
pop
std
imul
fstps
jb
out
mov
ss
sbb
sub
stc
sti
mov
jo
out
push
dec
xor
pop
add
mov
jnp
test
xlat
push
add
in
xor
sbb
jno
jno
mov
popf
cmp
sbb
inc
mov
gs
out
mov
insl
dec
aaa
push
cmp
insl
nop
adc
fistl
iret
int
adc
cmp
stos
out
leave
divl
and
rcrl
imul
sbb
rcr
loop
pop
push
lahf
fisubrs
xlat
fistpl
adcb
add
out
jle
xchg
out
stc
and
rorl
jge
les
popf
cmp
mov
loopne
adc
out
repz
push
mov
lods
outsb
dec
mov
xchg
xor
pop
pop
push
mov
inc
jl
mov
sarb
ja
cmp
mov
test
pop
cltd
lret
lahf
jns
mov
arpl
push
shr
fdivrs
adc
or
sub
xor
pop
mov
push
cmp
sub
aaa
xchg
shrl
arpl
xor
ja
rcrl
push
js
add
mov
lods
shr
jb
bound
stos
jg
sbb
lahf
and
imul
aam
inc
mov
xchg
mov
int3
scas
mov
adc
inc
add
mov
mov
sbb
and
lahf
sbb
rcrl
cmpsl
add
jae
pop
or
dec
mov
les
push
aas
dec
push
cmp
jno
cld
outsl
loop
jae
iret
push
lcall
mov
into
repz
add
ja
push
mov
clc
lret
xchg
test
leave
scas
insb
repnz
jle
es
push
in
hlt
lcall
mov
pusha
xor
and
mov
push
aas
and
pop
inc
je
jno
inc
push
xor
lea
int
mov
rcll
push
insl
jmp
sub
rcl
cmp
sti
mov
add
ret
mov
add
jns
call
imull
jne
inc
sub
dec
lock
mov
test
fldt
push
test
test
inc
sub
dec
cmp
mov
sub
push
jo
xchg
lds
insl
mov
insl
jo
xor
and
stos
test
mov
sbb
push
fbld
pop
pop
js
jle
aas
repz
addr16
mov
pop
sbbb
or
dec
loop
test
sti
pusha
pop
pop
jae
adc
test
repz
and
xlat
js
insb
and
outsb
xor
pop
movsl
jae
sub
mov
nop
inc
adc
xchg
push
xchg
fldl
jb
je
mov
mov
icebp
icebp
clc
xor
cmc
dec
out
fsubs
mov
sti
cmp
lret
xlat
pop
xchg
adc
insl
mov
jl
jp
int3
imul
mov
jno
xacquire
das
leave
pop
or
cmp
aam
nop
outsb
lock
push
mov
mull
hlt
scas
xorl
adc
jae
sub
icebp
cmp
dec
leave
test
adc
push
pop
imul
cs
outsb
mov
xchg
leave
mov
shlb
or
jg
pop
das
jnp
dec
das
xor
sbb
jmp
mov
test
aaa
xchg
insl
inc
pop
xchg
int3
jno
or
pop
xlat
scas
jge
xor
popf
nop
sbb
scas
inc
pop
sub
loope
in
leave
test
dec
arpl
jp
out
dec
lcall
sbb
xchg
rorl
addr16
ljmp
sub
mov
sub
shlb
mov
nop
pop
push
add
imul
dec
loop
lds
inc
mov
jge
dec
fimull
lods
cmp
popf
xchg
dec
sub
push
cmp
pop
mov
bnd
xchg
mov
xchg
mov
sub
lret
xor
test
bound
mov
jg
loopw
icebp
sub
lods
movsb
jle
fsubrl
pop
push
mov
inc
adc
jge
addr16
test
sahf
imul
in
mov
adc
adc
mov
mov
or
inc
ret
mov
jo
bndldx
jno
cmp
mov
ljmp
xchg
push
cwtl
sbb
push
sar
in
adc
jg
mov
pop
sbb
jnp
mov
mov
orl
sahf
or
cmc
adc
adc
fisubs
dec
sbb
cld
cmp
mov
fidivrs
mov
dec
xor
fldt
mov
jae
dec
pushf
je
or
insb
addr16
jnp
and
test
dec
scas
xchg
mov
dec
scas
dec
arpl
sub
mov
xchg
and
shlb
pop
sbb
sbb
pop
inc
mov
in
lods
sbb
loopne
xchg
mov
mov
popf
inc
movsl
add
test
or
push
movaps
subb
cmovl
xchg
push
sahf
out
mov
out
movsb
adc
dec
shll
pop
adc
cmpsl
or
add
or
cmpsl
pop
shrb
xor
push
cmc
fistps
int3
mov
cli
mov
mov
push
mov
inc
lods
data16
xor
lods
inc
pop
sbb
stos
gs
xchg
test
add
sbb
lahf
or
hlt
outsb
mov
xor
movl
jecxz
and
dec
scas
lea
cmp
mov
ret
popf
adc
loop
mov
daa
out
jo
lods
jl
lret
or
insl
xchg
sahf
fs
xor
fcoml
mov
inc
imull
insb
std
xchg
xor
flds
sub
adc
or
scas
sbb
mov
lds
sbb
lds
sbb
jmp
mov
jno
lret
in
loope
sarl
sub
lds
popf
xchg
adc
push
mov
or
lret
dec
mov
mov
mov
mov
jo
cs
jnp
pop
ds
rorl
jno
mov
leave
ret
leave
aas
shll
dec
jle
in
sbb
add
nop
jle,pn
add
adc
sbb
jecxz
cmp
sub
imul
icebp
mov
adcl
push
imull
clc
sbb
and
adc
push
cwtl
pushf
mov
pop
adc
lahf
jae
test
fwait
xchg
sbb
pop
orl
xchg
mov
lods
inc
mov
cmp
pop
sbb
arpl
add
ljmp
jmp
xor
nop
repnz
mov
cli
mov
xor
or
adc
addr16
stc
jp
mov
repnz
scas
jnp
push
sti
mov
xor
push
mov
sahf
pop
push
pop
jb
sbbl
sub
dec
scas
orl
jmp
xchg
es
subb
pop
imul
cmpb
cltd
mov
and
mov
sub
dec
fisubl
roll
xchg
dec
adc
or
cmpsl
imul
stc
inc
add
addl
jno
or
sti
xchg
dec
js
add
and
sub
xchg
mov
out
jae
imul
mov
push
aas
mov
mov
push
icebp
cmp
ret
test
and
cmp
imul
ja
xchg
in
dec
cmp
rcrb
mov
mov
pop
rcr
out
mov
fstps
lret
xor
ss
lcall
cwtl
imul
jae
xor
insl
les
mov
mov
ljmp
push
sub
dec
jg
add
jg
lea
data16
fwait
lods
cmpsl
push
inc
mov
repnz
adc
and
sub
add
lods
and
mov
adc
fcmovb
les
pop
div
add
rorl
iret
testl
rcrl
cmpsb
fsts
push
xlat
ss
push
lcall
add
xor
pop
xchg
cmpb
and
jb
fwait
xor
stos
push
or
xchg
pop
cmp
aad
movsl
daa
nop
mov
xchg
cmp
or
sbb
push
xchg
mov
xchg
add
fdivs
js
mov
ret
lea
dec
fucomip
add
in
sub
mov
push
rcrl
iret
xor
std
xlat
shlb
insb
loope
add
jmp
xchg
pop
mov
test
push
dec
cmp
test
mov
adc
lods
cwtl
std
inc
push
inc
movsb
fsubl
ss
sub
ja
js
andb
cmp
jbe
sahf
cmpsl
mov
scas
mov
sub
test
mov
lods
adc
cld
sub
jecxz
sub
sbbl
sbb
xor
hlt
adc
jge
push
enter
inc
or
xchg
jp
jnp
test
sub
push
ljmp
sbb
sti
shll
ss
cli
dec
dec
aas
xor
iret
mov
arpl
xchg
loopne
cmc
fs
mov
sahf
cmp
arpl
sub
lcall
js
dec
rcrb
pushl
test
fstl
xchg
mov
insl
sbb
scas
imul
je
dec
bound
mov
mov
mov
push
hlt
push
fwait
div
xchg
xchg
jns
xchg
mov
pop
sbb
push
and
and
dec
inc
inc
sbb
sti
cmpsb
push
pop
mov
sahf
jg
cmp
mov
pop
pusha
sub
push
fwait
lea
fsubr
fdivrp
sahf
pop
add
stos
aam
jo
fstps
inc
loopne
out
pop
pusha
das
xor
add
xchg
in
les
mov
or
mov
out
call
pop
mov
outsb
sub
xchg
mov
xlat
lods
insb
dec
and
es
and
jbe
pop
lea
xchg
scas
lcall
test
ret
mov
bound
xchg
xor
ja
adc
pop
mov
push
and
push
and
scas
push
test
and
in
test
das
lahf
out
mov
inc
dec
addr16
jecxz
mov
gs
pop
sbb
sub
shll
lea
dec
mov
and
ss
sub
mov
loopne
add
pop
sub
inc
cltd
sbb
dec
jns
xchg
jp
sub
ljmp
fistpll
fldt
punpcklwd
and
lods
rolb
xchg
mov
dec
xor
lods
and
cltd
icebp
cltd
sbb
dec
ja
or
pop
inc
jno
adc
out
sub
cltd
lcall
adc
jmp
hlt
outsl
add
pop
stos
outsl
mov
jl
push
or
test
dec
scas
mov
je
push
jne
mov
add
xor
into
push
sub
pop
enter
es
movsb
mov
je
mov
out
icebp
sbb
jmp
sbb
jnp
and
sarb
subl
test
sbb
add
ds
push
movsl
lcall
jecxz
or
pop
sub
push
outsl
inc
ret
ss
ds
push
insl
xchg
add
and
lock
outsl
mov
cmp
inc
call
mov
lret
loopne
js
cmp
nop
popf
in
dec
sahf
enter
ljmp
or
mov
cltd
into
popa
std
cmpsb
loop
icebp
call
add
mov
mov
sbb
pusha
popa
inc
gs
xchg
mov
sbb
and
enter
popf
and
clc
ja
jbe
mov
icebp
push
sbb
aam
jo
popf
enter
mov
mov
push
stos
mov
sub
mov
test
das
mov
outsl
lock
lds
adc
mov
call
xchg
not
adc
fidivs
lock
ljmp
bound
ja
scas
mov
mov
fsubl
xor
dec
mov
fwait
pop
mov
test
pop
mov
cmp
add
adc
cmc
test
lods
xchg
sub
inc
jno
xchg
gs
jmp
mov
and
mov
jns
pop
insb
mov
adc
movsl
add
aad
pushf
jae
sub
mov
adcb
jle
mov
dec
cmp
push
sub
call
jb
mov
xor
shlb
outsl
rcrl
push
pop
ror
ret
cld
das
incl
pop
push
mov
cmp
stos
das
pop
sub
lcall
mov
or
imul
sbb
ja
cmp
pushf
or
inc
mov
add
jne
xchg
adc
xchg
jge
lock
mov
mov
jg
pushf
cmpsb
mov
repnz
lock
imul
enter
or
inc
sbb
xchg
mov
ror
hlt
cmc
dec
fs
ret
pop
push
mov
fldln2
lret
mov
push
jmp
stc
movsl
aad
mull
mov
decb
sarl
adc
mov
fs
sub
lds
cmp
lea
jnp
push
xchg
jl
leave
dec
pop
popa
imul
sbb
xchg
push
or
lods
scas
mov
adc
mov
jbe
cmp
leave
push
insb
enter
adc
cmp
cltd
into
xchg
pop
sarb
or
test
xchg
incl
clc
cmp
cmp
in
outsb
fs
push
scas
loop
jnp
mov
sbb
mov
in
adc
icebp
xchg
sbbb
imul
out
loopne
call
movsb
les
xlat
xchg
mov
aam
dec
mov
std
lahf
notb
bound
xchg
jne
sub
test
int
mov
sbb
or
dec
dec
dec
or
mov
fdiv
pop
loopw
addr16
xor
and
ja
inc
fdivrl
jmp
or
je
and
bound
pop
xlat
push
test
in
imul
leave
pop
shll
adc
push
jbe
push
jecxz
xlat
inc
lret
mov
inc
mov
sti
inc
ljmp
imul
add
dec
add
aaa
sbb
je
xchg
movsb
out
in
mov
mov
jl
outsb
pop
cld
stos
outsb
test
sub
ss
rolb
jnp
push
cli
and
fcompp
xor
jmp
inc
push
cltd
pop
mov
and
std
xor
pop
movsb
and
shrb
inc
insb
dec
dec
cmp
and
xchg
push
jnp
sbb
shrb
in
scas
mov
scas
cmp
nop
repnz
xor
jne
pusha
mov
adc
mov
or
inc
push
push
pop
lahf
jnp
and
sbb
xor
inc
clc
add
and
movsl
mov
dec
ret
mov
in
adc
and
mov
pop
adc
push
paddusw
and
shl
or
sub
jno,pn
out
cwtl
mov
enter
loopne
mov
jecxz
xlat
rorl
mov
inc
loop
mov
out
cmp
out
outsl
ljmp
sub
mov
xor
sahf
jmp
jp
pop
js
das
push
jmp
insl
cmp
sbb
xor
ja
daa
stc
das
test
pop
add
inc
lds
jb
xor
js
adc
clc
rol
mov
add
inc
into
std
ficompl
xor
test
idivl
pop
push
add
jle
inc
mov
lcall
jp
push
inc
xchg
lods
adc
adc
fstps
inc
data16
xchg
jl
sub
daa
mov
pop
dec
add
leave
mov
xorl
mov
jns
or
test
shrl
aam
mov
pop
push
mov
loop
mov
loopnew
jb
movsb
pop
mov
enter
jmp
mov
ljmp
aaa
jb
xchg
mov
sbbl
aas
loope
loop
or
hlt
insl
mov
or
xchg
xor
shll
xor
and
add
insb
sbb
shr
adc
rcll
mov
push
or
xchg
in
jl
nop
in
sub
adcl
and
js
in
movl
adc
jne
loope
ds
lret
loopne
aad
cmp
fsubrl
jl
xor
loop
pop
fcomp
fsincos
mov
cmp
push
outsl
aas
cmp
pop
scas
jae
sti
mov
push
pop
pop
push
mov
aas
xlat
jg
push
mov
jcxz
sti
lds
dec
addr16
sbb
fsts
cmpsb
addr16
sahf
mov
rolb
inc
mov
insl
in
in
loopne
dec
movsl
ficoml
sbbb
sbb
sbb
push
notb
push
or
mov
sbb
pop
aas
mov
jg
or
subl
adc
dec
addl
inc
arpl
mov
ror
and
out
xchg
in
iret
stc
cmp
mov
jnp
stc
or
jg
leave
jb
test
and
jl
shr
xor
outsb
adc
push
push
mov
jecxz
add
data16
push
negb
fsubrs
mov
push
lock
xor
sbb
mov
mov
add
push
mov
xlat
push
jle
iret
shll
mov
xchg
out
pop
fmull
addr16
lret
jg
dec
dec
ss
jae
mov
aad
xchg
pop
daa
inc
imul
pop
mov
inc
mov
dec
cmp
je
les
jmp
or
vunpcklps
add
xchg
ja
shll
or
mov
jno
loop
data16
scas
notl
xchg
aaa
xchg
stc
jbe
arpl
iret
and
pusha
xchg
add
inc
rcll
rcrb
mov
xchg
sbb
sti
pop
adc
and
inc
jle
sub
daa
subb
jo
push
das
push
mov
daa
mov
inc
cmpsl
icebp
shlb
cmc
mov
aam
sub
mov
insl
test
icebp
iret
lods
mov
adc
add
shll
xchg
call
or
fwait
jp
sahf
and
sbb
imul
dec
cmc
lcall
dec
add
icebp
push
fwait
leave
insl
ret
push
mov
fstpl
mov
ss
je
movsl
ja
jl
or
jb
dec
mov
xchg
fs
lods
enter
je
xchg
mov
jle
rcrb
vmovaps
jl
mov
pop
stc
test
jmp
cmp
push
mov
ret
mov
inc
mov
mov
in
subl
or
adc
or
lea
sub
stc
and
jg
aam
mov
iret
mov
mov
mov
ljmp
cli
xchg
adc
xorb
inc
adcb
xor
dec
cld
adc
adc
fnstenv
jecxz
push
fcomps
dec
mov
rcll
pop
pop
int
ljmp
movsl
divl
mov
cmp
jne
stc
xchg
jae
shrb
cmp
lret
sbb
xlat
push
jle
jmp
mov
xchg
fadds
pushf
push
dec
dec
pop
push
test
cmpsl
ss
mov
xchg
into
outsb
mov
adc
cmc
repnz
mov
repz
sbb
cmp
add
push
in
sti
movsl
inc
jns
and
stc
fcoms
pushf
dec
push
mov
addr16
xchg
xchg
fwait
in
push
sti
dec
aas
fbstp
cld
bswap
pop
adc
mov
pusha
stc
pusha
aas
daa
xchg
jg
fisttps
jnp
jl
cmpl
lahf
outsb
cmpsl
imul
add
fldt
add
xor
stc
jge
scas
les
fildll
rcll
dec
les
inc
cld
cwtl
jo
movsl
xor
fldenv
inc
movsl
bound
and
call
and
js
fisubrl
dec
repz
xor
xchg
pop
sbb
jb
popa
test
xchg
sbb
stc
movsb
into
int
rcrb
or
sti
sbb
or
add
jns
aad
mov
sarb
ds
jb
pushf
push
push
jno
adcb
test
cmp
mov
mov
push
ret
jno
xchg
dec
test
inc
sub
imul
arpl
cld
iret
adcl
test
outsb
rclb
jb
aam
loop
mov
xlat
sub
lods
add
pop
push
xchg
mov
test
jp
mov
mov
ds
mov
sbb
jb
add
and
dec
jl
sub
add
add
jge
mov
in
jne
cwtl
mov
sub
adc
cwtl
imul
xchg
in
lock
mov
cmp
cmp
sbb
subl
pop
fs
ret
lcall
inc
addb
dec
cmp
sbb
dec
cmpsb
and
mov
ja
or
mov
sarl
xchg
and
mov
insb
mov
xor
add
icebp
pusha
movsl
jnp
test
dec
inc
add
ja
pop
or
and
ds
insb
push
imul
iret
leave
xor
lret
lcall
fidivrl
lahf
and
popa
pop
js
push
push
mov
xchg
pushf
mov
in
in
pop
insl
cmp
pop
fwait
mov
movsb
cs
adc
cmpsb
sub
inc
xor
inc
popf
mov
push
test
in
in
scas
xchg
orl
cmp
sarl
pop
xchg
pop
imul
mov
mov
pop
mov
xchg
mov
rclb
outsb
xor
lock
jp
xchg
mov
dec
cmp
or
cmp
or
add
mov
xchg
xchg
rclb
pop
shl
fcompl
mov
sbb
sub
mov
lods
stos
jnp
sbb
repz
addb
mov
mov
in
fdivl
add
xchg
es
ret
stos
fldcw
jo
cmp
lds
popaw
fstps
std
mov
jno
mov
outsb
pop
pop
sub
sub
or
mov
in
sti
sbb
lock
jg
gs
orl
ret
mov
popf
fdivrs
xchg
ljmp
or
call
fs
xor
sbb
jo
int3
cmp
push
inc
xor
stos
fildll
jo
cwtl
or
mov
cmp
lds
sbb
dec
loopne
fcompl
iret
or
mov
mov
adc
movsl
jmp
pop
cmp
pop
clc
lds
xorl
mov
subb
mov
addr16
xor
cmp
or
mov
pop
pop
dec
imul
mov
pop
or
sbb
sub
loop
stos
jnp
xlat
push
imul
push
cmp
lcall
mov
scas
pop
adc
push
xor
lcall
xchg
jg
rol
mov
imul
jl
xor
je
mov
pushf
js
mov
mov
arpl
popa
fsubrs
mov
push
xchg
ja
fsubl
call
shl
push
lea
pop
push
xchg
push
mov
imul
pop
out
jl
jl
fs
xchg
scas
fwait
dec
pop
ss
enter
mov
mov
insb
pop
mov
mov
and
out
sti
cmp
pop
dec
xchg
xchg
or
movsl
and
xchg
daa
fmuls
sub
aad
xchg
jle
pusha
jp
stos
dec
pop
mov
sti
or
pop
adc
lahf
loope
jno
xor
adc
fwait
sub
int
xorl
mov
pop
mov
adc
ljmp
arpl
imul
push
and
addr16
dec
loop
in
inc
ud0
mov
call
test
fcoml
dec
xchg
xchg
aam
or
pop
into
rorl
xchg
loope
sub
or
fldt
aas
jbe
mov
shrb
jge
rcrb
jne
rcrb
mov
mov
ljmp
pop
shrb
mov
int3
mov
stos
cmp
dec
pop
movsb
jnp
mov
dec
test
add
enter
insl
hlt
push
mov
mov
pop
lods
sti
xlat
mov
subl
add
in
scas
mov
shlb
in
add
cmc
jecxz
rorl
orl
jnp
test
sub
and
jecxz
pop
mov
ja
cmp
mov
pop
sahf
call
fadd
popa
mov
mov
fnstenv
push
sub
fstps
repnz
and
cmpsb
pushf
and
pop
mov
in
xor
mov
fildl
test
xchg
or
cmp
dec
data16
mov
and
sub
dec
jnp
dec
outsb
jl
sbb
aaa
mov
adc
and
dec
or
int
sbb
out
in
pop
jg
ljmp
mov
arpl
mov
icebp
mov
cmc
cs
cmp
adc
xchg
fcmovbe
mov
add
sbb
xor
jmp
dec
pop
rorb
xchg
daa
into
jge
xor
jne
mov
or
fsubrs
sbb
xor
mov
sbb
pop
inc
popf
mov
mov
mov
mov
push
xchg
js
pop
loop
inc
std
add
je
aam
mov
fwait
bnd
pop
cltd
push
pop
ficoms
lods
or
stos
insb
inc
pop
inc
ret
jp
cmp
xor
das
sub
aas
xor
adc
cld
roll
or
outsb
lret
aaa
jle
sbbb
cmp
fsts
rolb
icebp
pop
push
inc
sahf
out
cmp
pop
xor
into
aam
ja
add
cli
or
mov
test
andl
mov
int
lds
jmp
cwtl
inc
xchg
jmp
cmp
push
cmp
pop
clc
push
mov
cmpsb
pop
push
test
ja
pop
notl
repnz
push
je
adc
iret
faddl
jecxz
popf
jp
cmp
or
loopne
xchg
mov
cltd
pop
jb
dec
repnz
mov
mov
or
lock
popf
push
out
loope
or
adc
xchg
cwtl
lret
repnz
sbb
sub
add
jo
add
mov
pop
pop
ljmp
push
sub
cmpb
cld
ret
xchg
jbe
adc
insb
sub
xor
test
mov
test
cmpsb
xor
cli
cmpsl
xor
mov
scas
lods
jg
in
sub
test
sbb
cmp
pop
test
or
jns
outsl
and
jno
dec
inc
pop
and
int3
clc
fdivrl
int
sub
jmp
xor
nop
aaa
inc
sub
inc
inc
arpl
inc
and
mov
daa
lock
and
push
mov
pop
stc
mov
push
fmull
mov
std
sbb
adc
push
vrsqrtss
mov
and
outsb
sbb
daa
jb
mov
fsubl
jnp
pop
sub
xchg
push
push
lock
sub
imul
rcrl
ret
ljmp
cmp
outsb
push
in
jb
insl
aam
scas
mov
mov
add
fldcw
hlt
push
std
push
cmpsb
ja
jae
arpl
sub
js
clc
push
leave
rcrl
daa
xchg
and
push
ljmp
sub
xorb
sbb
jne
mov
cwtl
in
rorb
lods
test
cmp
int
xchg
aas
push
mov
imulb
lret
mov
popa
aad
push
xlat
imul
cmp
out
cli
test
aam
popa
fisubrs
loop
leave
push
fdivl
mov
das
sub
outsl
mov
fsubrs
out
stos
jle
push
scas
bound
push
push
mov
pop
adc
pop
mov
xchg
clc
dec
or
inc
lcall
jmp
int
enter
xor
sub
xor
push
mov
popf
and
cmp
push
mov
lcall
insb
sti
cmc
sub
stos
dec
or
inc
and
lds
mov
fcmovb
cmp
xchg
sbb
xor
xchg
fisubrl
xchg
repz
jb
mov
or
sbb
xor
mov
inc
add
mov
push
mov
unpcklps
cmp
xchg
adc
xchg
and
jns
xchg
in
mov
mov
hlt
cmc
movsl
jle
sub
daa
adc
lcall
jl
jecxz
jmp
andl
jns
xlat
loopne
sbb
sub
inc
mov
sub
inc
mov
into
sub
jecxz
dec
or
jle
ds
cwtl
pop
or
das
inc
sbb
add
ret
mov
lods
sbb
xor
sub
inc
icebp
and
mov
fbstp
bound
out
out
fidivrs
mov
int3
call
push
xchg
cltd
pop
out
cmp
imul
call
scas
ror
jle
shrb
inc
mov
movsb
lods
out
inc
inc
iret
xor
gs
popf
dec
sub
xchg
fcompl
mov
call
cmpsl
fadds
mov
mov
inc
pop
mov
xor
mov
in
push
call
jne
push
sbb
rorl
cmp
or
adc
dec
and
data16
repnz
add
push
jno
xor
aaa
cld
jnp
dec
fstpt
adc
push
jo
cltd
fstp
mov
loop
hlt
outsl
fsubs
mov
mov
bound
mov
stc
mov
adc
mov
push
shlb
add
dec
inc
sbb
lea
mov
fidivrl
stos
nop
push
inc
cmp
jg
dec
nop
les
dec
xor
mov
mov
dec
mov
xor
enter
push
inc
and
mov
mov
sub
cmp
pop
aas
inc
nop
iret
scas
adc
mov
add
inc
sbb
inc
xchg
mov
mov
push
mov
ss
fucom
inc
jne
gs
dec
pop
mov
jae
xor
sub
rcrl
es
stos
mov
sub
inc
call
mov
or
jle
mov
cmp
repnz
clc
mov
ds
sbb
lds
scas
pushf
jge
aam
lds
sub
lods
push
outsl
div
into
in
sub
xor
aas
inc
adc
and
mov
inc
icebp
jno
in
and
push
mov
xor
push
ja
mov
mov
or
repz
aad
mov
sbb
xchg
insb
add
push
mov
stos
mov
mov
inc
outsl
lret
adc
lods
test
das
cmp
sub
xchg
cs
cmp
pop
insb
push
cmp
add
cmp
pop
xchg
or
xor
add
mov
mov
xor
test
cmp
or
out
push
mov
arpl
pop
arpl
adc
jo
pop
sbb
inc
out
inc
sbb
xor
jne
test
push
ljmp
lock
int
xchg
jb
add
hlt
add
sti
add
mov
stos
jge
pop
stc
jl
mov
jns
adc
popa
sbb
addl
jne
aas
arpl
xor
and
fs
inc
inc
jl
das
cmpsb
lret
or
roll
xlat
popf
imul
outsl
nop
xchg
pop
pop
xor
cs
out
cs
test
sub
xor
push
jmp
sbb
pop
push
xor
mov
add
loopne
in
les
jge
in
inc
icebp
sbb
lret
dec
dec
inc
jp
push
pop
jl
scas
adc
in
leave
sbb
mov
repz
or
shll
or
stos
scas
and
xchg
das
sbb
or
loope
ret
xchg
call
mov
inc
xchg
adc
int3
dec
daa
mov
js
aam
das
inc
mov
or
sbb
add
inc
jecxz
adc
decb
cmc
jae
test
cli
in
repnz
movsl
xchg
cmp
inc
fcompl
jnp
jle
loop
dec
ret
cli
jl
mov
xor
jl
mov
addr16
out
cmp
pop
cmp
cs
cmpb
mov
clc
adc
or
fdivr
sub
mov
lds
rorl
subl
xchg
imul
push
add
test
xchg
push
pop
adc
js
xchg
cmpsl
push
aam
std
or
cs
xchg
sub
fdivl
add
rclb
cmp
sbb
cmp
data16
loope
mov
pop
pop
lret
test
xchg
and
inc
and
arpl
mov
mov
and
lock
test
or
pop
sub
pop
xor
stos
jge
sub
out
xor
in
es
cmp
or
inc
ss
shll
mov
inc
mov
inc
sahf
push
xor
mov
push
pop
jae
mov
xchg
push
xor
cmp
inc
adc
sub
inc
fbstp
in
stos
mov
mov
fcmovne
mov
loopne
pop
popa
dec
sub
mov
ja
frstpm(287
pushf
lods
in
lock
gs
ja
mov
xor
dec
sub
loop
mov
adcl
bnd
xchg
stos
clc
push
outsb
xchg
fwait
sti
mov
jno
jns
in
lock
or
xor
cld
inc
push
jecxz
out
stos
mov
jp
fstpt
stos
cs
inc
loop
pop
js
pushf
xchg
adc
mov
jnp
movsb
sar
mov
mov
icebp
push
scas
stos
cld
jp
fsts
aam
ret
dec
sub
aas
mov
mulb
cmpsl
leave
sbbl
push
xor
in
cmc
push
adc
xchg
ljmp
lods
enter
cmp
in
pop
loopne
mov
or
fbstp
sbb
ret
mov
sbb
and
cmp
lahf
push
mov
lcall
add
push
rcrl
sar
cmc
xor
mov
xchg
or
out
and
mov
test
daa
sub
cmpsb
clc
pop
ss
jg
mov
mov
cmp
mov
jecxz
or
mov
add
pop
push
and
push
fwait
jmp
shll
xchg
mov
das
iret
in
arpl
cmp
sub
aaa
insb
lea
xchg
out
add
sub
fstl
add
stos
mov
stos
je
js
mov
pop
stos
cmp
enter
fwait
push
notl
mov
mov
pop
popf
sbb
pop
xchg
fmulp
and
nop
jns
pop
and
xchg
or
scas
lods
xchg
or
cwtl
jns
inc
cs
cltd
jmp
mov
fiaddl
loope
jle
push
dec
xchg
ds
popf
lcall
mov
js
inc
dec
push
dec
dec
hlt
xor
lods
dec
cld
sub
and
cmp
jmp
das
loop
and
shll
rorl
test
xor
or
ffree
inc
fdivrs
gs
xchg
xchg
push
movsb
inc
int3
movb
push
in
addb
xchg
sub
jne
shl
aaa
and
jo
je
pop
sbb
js
jle
lock
adc
pop
enter
arpl
adc
and
dec
sub
icebp
or
in
xlat
ror
or
cmp
mov
aad
or
pop
mov
push
loopne
mov
mov
imul
es
jns
ja
mov
dec
push
imul
or
inc
jp
sti
or
gs
stos
cmp
sti
mov
int3
scas
lock
or
insb
cltd
scas
xchg
testb
insb
pushf
lods
push
cwtl
xor
test
aam
idivb
sahf
out
shlb
jns
mov
mov
mov
and
ljmp
scas
cmpsb
mov
pop
lret
inc
nop
jg
jnp
imul
mov
pop
mov
or
pop
adc
sub
fs
mov
ret
add
test
xor
insb
and
push
aaa
fcoms
pop
sbb
xchg
in
mov
pop
cs
jbe
mov
dec
or
dec
aam
jg
add
insl
or
mov
rcrb
inc
add
shrl
push
mov
xchg
lret
stos
data16
mov
lds
das
mov
xchg
and
addr16
sbb
add
or
sbb
stos
in
imul
pop
cmpsl
leave
mov
adc
sarb
push
cmc
xor
and
dec
adcl
fstps
pop
sub
movups
add
nop
test
cld
adc
pop
cli
and
pusha
sbb
lret
jmp
mov
xor
ret
clc
xchg
insb
inc
test
push
lahf
cmpsl
mov
les
jns
fisubs
and
out
data16
pop
cmc
scas
inc
add
xchg
bound
xor
push
sub
and
cld
mov
dec
pusha
outsb
mov
dec
imul
decl
hlt
aaa
jge
pop
inc
mov
cld
test
pop
test
ss
mov
in
mov
pop
inc
lcall
test
mov
cmp
adcb
mov
test
inc
imul
mov
ljmp
into
sbb
xor
inc
push
adc
pop
std
aaa
lock
subb
push
xchg
pop
addb
cmp
cs
mov
adc
scas
jbe
adc
mov
fnstenv
outsl
and
xchg
ljmp
stos
lods
icebp
xlat
roll
lods
dec
inc
add
mov
xor
pop
mov
xchg
mov
out
out
sbb
rcrl
pop
mov
xchg
inc
jo
and
cmp
jae
testl
pop
inc
add
cmp
outsl
ret
shll
mov
jne
mov
lea
adc
xor
mov
movsl
mov
in
jo
mov
cli
outsl
dec
popf
inc
xchg
aam
arpl
jg
or
pop
mov
xchg
je
push
int3
jmp
mov
adc
mov
or
dec
test
call
std
mov
xchg
cltd
and
out
test
es
push
inc
pop
stos
cltd
fldcw
add
push
andb
sub
mov
pop
push
aas
pop
or
nop
int
push
outsl
mov
push
pop
xchg
mov
ja
incl
mov
jno
xchg
cmp
cmc
sbb
sub
xchg
mov
int3
aas
cld
fsubs
inc
loop
xor
imul
and
mov
mov
lods
xchg
pop
mov
insl
push
fisttpll
fwait
push
inc
rcrl
lock
mov
sbb
pop
icebp
cmpsb
leave
and
scas
add
aad
push
push
pop
dec
cli
ja
mov
lea
jne
leave
hlt
and
pop
mov
or
push
xchg
ljmp
in
das
ss
movsb
orl
jno
pop
xchg
xchg
aad
out
or
pop
inc
outsl
popf
nop
jo
add
dec
push
sub
mov
test
and
push
outsb
cmp
arpl
aaa
jp
xor
inc
sahf
fldcw
sub
inc
jae
push
iret
vmovntdq
cmp
or
sbb
xor
pop
jp
cwtl
jge
inc
mov
pop
mov
xchg
xor
clc
fdiv
jle
cld
test
imul
insb
pop
movsl
dec
ret
rorl
arpl
mov
xor
nop
enter
sti
push
filds
mov
mov
stos
daa
jl
leave
add
enter
jne
jo
subl
mov
out
fstps
movsl
adc
cmp
sub
ret
lds
adc
stc
jb
roll
xchg
aaa
je
mov
fcomip
sub
sbb
out
or
call
pop
pusha
or
mov
mov
mov
in
rorl
ja
xor
fnstcw
pop
add
pop
jecxz
sub
jb
int
pop
popa
fisubrs
pushf
sbb
scas
insl
scas
fisttpll
and
add
test
shlb
jns
cmpsl
xor
dec
sbbl
jp
aam
adcl
cmp
push
out
and
shlb
push
mov
push
ror
push
outsb
jo
movb
popa
push
in
cmpb
mov
xchg
jbe
jns
mov
lea
lcall
xchg
cmovae
in
and
movsb
addr16
cwtl
lret
test
jge
jg
mov
push
ljmp
jg
insb
clc
sti
mov
loope
int
addr16
repz
push
sub
push
dec
lds
push
pop
gs
sbb
push
xlat
jg
hlt
jecxz
or
rorb
rcll
inc
ljmp
cld
adc
inc
inc
out
pop
repnz
sub
and
jge
pop
jl
add
and
lret
int
addl
dec
mov
fwait
aad
jge
and
xchg
xchg
or
sub
rclb
test
inc
push
fisttps
cltd
jmp
xorl
pop
mov
jp
xchg
loopne
scas
mov
int3
dec
push
pusha
enter
andl
push
ljmp
leave
outsb
inc
xor
rclb
dec
mov
sbb
and
xor
and
repnz
movsl
es
push
xlat
into
lahf
repz
in
hlt
adc
shrl
mov
movsl
adc
adc
jnp
aas
xor
sahf
mov
cmpsb
cmpsl
outsl
les
pop
js
sub
not
add
inc
push
mov
int3
lcall
xchg
cwtl
fcomip
test
jp
jae
sbb
mov
mov
adc
add
lods
cld
ret
gs
dec
es
shll
adc
in
xchg
fs
xor
push
xlat
dec
jnp
jecxz
push
rcrl
push
push
mov
adc
lret
cwtl
je
movsl
dec
or
aam
add
fwait
lea
imul
subl
mov
lods
jmp
cmp
sbb
scas
std
cmp
mov
out
mov
cmp
insb
push
pop
xor
inc
sub
cmp
out
fisubl
mov
pop
mov
sub
xchg
pcmpgtb
add
rolb
outsb
and
icebp
push
and
clc
push
arpl
jg
popf
adc
lcall
pushf
push
push
mov
loop
inc
jae
ljmp
jp
insl
pop
adc
loope
data16
test
mov
cmp
aaa
and
push
inc
loop
rol
lock
mov
adc
je
mov
into
mov
mov
ds
icebp
lea
flds
lods
xor
adc
adc
pop
or
into
inc
xchg
mov
jnp
fstps
and
fbstp
mov
iret
dec
clc
notb
dec
das
jp
push
ret
pop
pop
push
inc
xor
lods
loopne
adc
mov
mov
sbb
sub
mov
sti
sub
arpl
adc
xor
cli
inc
ret
mov
js
add
push
call
bound
pop
mov
cmp
lods
push
mov
mov
negb
mov
pop
outsl
cmpsl
sub
mov
fsubs
incl
clc
imul
inc
fwait
cltd
ss
jb
mov
pop
ret
jg
add
aas
push
cli
push
or
dec
addl
and
dec
fisubs
jg
in
loopne
cmp
repz
pop
addr16
imul
hlt
mov
fisubrs
daa
add
insl
fistps
gs
test
pop
stc
das
sahf
cld
cwtl
sti
aaa
in
dec
popa
fists
ljmp
xchg
mov
shll
mov
int3
jge
xchg
and
je
push
sbb
iret
addr16
das
shll
mov
xchg
test
lret
mov
and
jnp
jecxz
popa
insl
adc
cmc
cmp
inc
lcall
cs
cmc
push
pop
int3
sbbl
cmp
mov
in
mov
adc
cli
insb
jle
adc
mov
xor
fcmovnu
ss
pop
adc
push
sbb
sahf
bound
out
pop
jp
push
clc
aaa
lods
inc
cmpb
jecxz
cmp
fs
push
test
cltd
adc
call
adc
test
clc
call
cmp
jb
dec
and
mov
push
in
aad
pop
cmp
imul
dec
mov
and
pop
jb
xchg
test
iret
roll
xor
xchg
cmc
xchg
addl
out
xlat
cwtl
jbe
scas
fsubrl
push
mov
ret
cmp
cmp
jecxz
and
xchg
aas
inc
and
add
mov
test
mov
mov
lahf
sub
pop
adc
cmp
loope
sbbl
cltd
cli
movsl
nop
push
loope
rorb
xor
push
inc
jmp
pop
cltd
pop
ja
inc
or
lret
mov
sbb
xor
dec
sub
mov
or
adc
cmp
lret
lret
and
faddl
aas
fisttpll
cmc
divl
inc
out
insl
idivb
sub
xor
ljmp
outsb
insl
dec
test
in
xchg
les
mov
popa
aad
xchg
shlb
xchg
ja
jmp
scas
push
mov
and
push
and
dec
aad
divl
push
insb
cld
mov
jno
lods
pop
jno
ljmp
sbb
incb
lods
add
xchg
testb
cmp
cld
or
insl
loope
mov
rclb
lret
call
fiadds
popa
lea
outsl
popa
add
fildl
mov
push
std
and
iret
mov
rorl
jb
shrb
mov
jl
pop
jl
sbb
mov
orb
aas
mov
pop
cld
sarl
mov
scas
aas
sbb
test
sub
add
js
adc
testb
lcall
aad
cmp
sub
ljmp
jne
addl
push
xlat
push
sbb
ljmp
jle
jnp
insl
in
insl
mov
dec
das
xchg
cmpsl
inc
hlt
dec
out
jp
pop
sub
push
jmp
addr16
dec
sbb
cmpsl
mov
mov
sbb
xchg
lret
popf
shlb
dec
dec
psllq
xchg
bound
stos
clc
or
imul
scas
adc
test
mov
mov
out
or
xor
push
aad
xlat
out
add
cwtl
inc
cmpsb
or
pusha
mov
out
daa
push
pop
std
pusha
dec
std
shrb
xchg
jbe
test
lock
pop
inc
cld
mov
mov
sub
push
test
xchg
pop
xchg
hlt
jge
jle
ret
pop
insb
aas
xor
add
mov
dec
sbb
mov
jb
imul
ljmp
jb
nop
lea
std
repz
shr
add
mov
mov
imul
adc
push
sbb
cmp
aas
popa
mov
movsb
xlat
les
jb
icebp
stos
dec
xor
stos
mov
or
jg
pop
jbe
jp
jg
lods
outsl
in
mov
mov
ret
xchg
cmp
xor
jo
aam
mov
mov
push
fcoml
lods
ret
xchg
lcall
aad
xchg
jge
stos
xchg
sahf
mov
mov
loop
mov
stc
pop
je
mov
in
insb
lret
adc
mov
jbe
mov
sub
dec
enter
test
adc
insb
mov
dec
and
sbb
mov
testb
mov
movsl
mov
add
or
out
rorb
loopne
das
cmc
and
pop
jo
int
sbb
inc
push
push
imul
mov
test
sahf
mov
xor
sub
sub
lcall
inc
sbb
ret
add
xchg
leave
loopne
mov
clc
sub
sbb
js
push
sbb
mov
cmp
rorb
cltd
das
dec
dec
adc
clc
mov
add
loopne
popa
mov
sti
push
ja
inc
data16
or
xchg
sub
call
lret
push
push
fcmovbe
cli
and
iret
loope
inc
pop
or
xor
jo
imulb
xor
xlat
mov
lea
roll
cmpsb
in
inc
sarl
dec
inc
lock
adc
cmp
add
add
xchg
mov
jne
add
jns
scas
in
push
stc
imul
cltd
and
jecxz
lds
jge
jecxz
fisubrs
shll
arpl
or
jle
pop
push
rcl
cmpsb
movsb
push
dec
prefetch
loopne
aaa
je
mov
add
dec
fbstp
pushf
ret
out
sahf
sbb
jno
cmpl
pop
ljmp
div
popf
inc
dec
arpl
mov
test
shrl
insl
or
push
mov
shrb
fiaddl
add
outsb
in
or
and
ds
or
inc
fisubrl
lahf
pop
pop
divl
xchg
sti
leave
jg
or
fucom
sbb
push
fstpl
in
mov
pop
xchg
push
sbb
pop
add
inc
pop
pushf
pop
repnz
arpl
cmp
add
repz
mov
mov
adc
mov
dec
xchg
movsb
test
push
in
iret
in
push
push
mov
loop
in
and
mov
repz
js
push
dec
sbb
cmp
daa
lods
sbb
cltd
push
add
lds
fiaddl
xchg
nop
cmp
inc
lods
pop
es
repz
pop
mov
mov
leave
int
frstor
or
or
movl
sbbb
insb
xchg
rorl
or
push
fdivr
fidivrl
cmp
hlt
fbstp
dec
roll
stc
idivl
push
scas
sub
push
dec
mov
xlat
jne,pn
xchg
fld
les
insb
je
movsl
adc
loopne
mov
add
cli
sbb
lock
roll
jg
xor
test
push
into
push
insb
fimull
xor
fimull
test
dec
nop
jmp
mov
jg
sub
pop
xchg
into
in
xor
sbb
push
cmp
cli
cmp
mov
inc
lea
add
jbe
xchg
pop
imul
pop
imul
lock
cmpsb
cmp
mov
mov
sbb
inc
cmp
lock
test
and
test
push
loopne
aad
out
mov
jb
xor
sub
jl
cmpsb
and
mov
cwtl
mov
xor
es
add
hlt
in
insl
mov
sbb
jle
bound
push
and
sbb
jle
sub
add
lock
lahf
lock
pusha
xchg
js
jb
dec
imul
mov
inc
cmp
aas
data16
cli
icebp
fwait
lcall
and
adc
test
sub
xor
outsl
jae
jae
mov
gs
inc
popf
out
xor
rorb
or
out
xor
in
push
mov
popa
pop
sbb
xchg
in
mov
xchg
popf
mov
mov
inc
or
ret
xorl
mov
add
lea
mov
popf
stos
outsl
sub
psllq
mov
dec
insb
add
sub
int
inc
mov
push
mov
and
xor
hlt
jge
jmp
outsb
jmp
or
cwtl
push
push
je
lea
dec
mov
inc
or
cmp
out
xchg
cs
sbb
pop
or
es
clc
sahf
out
pop
fadd
adc
rol
ficoms
sbb
lcall
popa
addr16
cmp
clc
cmp
fwait
jnp
insb
mov
andl
xchg
outsb
dec
mov
push
cmpsb
into
jnp
mov
pop
fs
xchg
out
jmp
xor
test
mov
jp
mov
cmc
jb
rorl
mov
cmp
dec
loope
in
pop
leave
or
mov
or
add
das
out
mov
push
lret
cmp
and
aad
out
jae
test
adc
xor
and
xchg
inc
or
or
mov
daa
iret
or
aas
mov
adc
jae
xor
adcb
push
mov
leave
aad
loope
bound
add
cld
cmp
in
movsl
xor
cmpsl
outsb
sub
adc
mov
insl
insl
push
ljmp
lods
cmpsb
mov
mov
adc
jg
add
fcomp
jmp
mov
mov
fcomip
xor
ss
test
inc
add
dec
dec
sub
mov
pop
movsl
jmp
push
scas
xor
fists
mov
or
mov
out
xor
pushf
dec
push
jg
negb
outsl
ss
or
mov
fcoms
xchg
mov
sar
aad
inc
and
adc
loop
das
mov
cmpsl
xor
sti
jae
or
shl
loope
mov
jmp
sub
mov
in
in
mov
cwtl
mov
sbb
or
mov
mov
pop
int3
mov
sub
cmp
filds
les
or
inc
jp
sbb
mov
pusha
mov
xchg
jmp
and
mov
xchg
in
adc
dec
jb
iret
lahf
fs
and
imul
mov
hlt
fwait
xchg
add
xor
and
mov
mov
xchg
mov
scas
nop
cmp
mov
inc
leave
insl
es
xor
adc
sub
je
xchg
sbb
es
push
mov
mov
jg
les
jecxz
jle
push
addr16
xchg
iret
dec
inc
mov
xchg
cmp
sbb
addr16
dec
ss
gs
cmp
lds
int3
add
mov
push
insl
push
pushf
test
sbb
das
cwtl
and
lods
mov
in
add
pop
or
pusha
jae
and
js
xchg
in
and
or
scas
xchg
shlb
iret
lods
movb
inc
ret
pop
das
adc
out
mov
mov
dec
jae
cs
jecxz
mov
xchg
ffree
cs
clc
or
jge
loope
add
mov
movsl
xchg
in
fsubr
fs
mov
sub
clc
cmpsl
icebp
lret
cmpsb
std
fstpl
test
cmp
in
mov
pop
ficompl
and
jo
mov
sbb
rcrl
int
frstor
adc
shl
adc
pushf
sbb
cmp
xlat
je
leave
xchg
xor
dec
mov
jp
out
mov
fldenv
sub
push
inc
iret
mov
popf
notl
call
ficomps
xor
and
pop
dec
ret
imull
mov
push
adc
push
xchg
adc
shrl
pop
cmpsb
insl
leave
cli
fimull
enter
movsl
xchg
xchg
jg
dec
sub
enter
jbe
and
ja
out
mov
inc
lock
addr16
mov
test
fsubl
or
xchg
mov
in
push
cmp
push
imul
mov
ljmp
add
loop
cld
ja
and
or
lea
jo
xchg
idivb
iret
je
cmc
andb
dec
nop
ds
mov
adc
mov
data16
mov
rol
mov
seto
push
mov
pop
pop
loop
sti
outsb
arpl
or
iret
add
mov
xor
mov
loop
cmc
jae
inc
jecxz
mov
add
sub
jg
inc
push
daa
les
mov
mov
adc
stos
ss
std
push
mov
idivb
bound
fsubs
in
xchg
rorl
out
mov
lock
mov
dec
add
adc
loopne
push
pop
mov
push
fdivrp
pop
repnz
in
mov
xchg
mov
xor
lret
xchg
leave
out
loope
mov
cmp
imul
and
sbb
lods
xchg
bnd
mov
cli
das
cmp
js
jnp
push
in
xchg
push
ret
xchg
fistps
fists
popa
mov
mov
out
jl
push
adc
into
jo
jp
push
mov
ficomps
rcrb
jnp
jns
stos
or
sub
stos
jmp
mov
lahf
xchg
push
xchg
push
sub
pop
mov
je
adc
add
in
mov
movsb
lret
jo
mov
dec
leave
mov
cmp
mov
mov
adc
inc
mov
cmp
imul
sbb
fisttps
call
faddl
outsb
add
xor
mov
mov
cs
ss
push
mov
movsl
add
inc
cmp
xchg
push
leave
push
jbe
xorl
dec
adc
fs
adc
inc
or
sub
dec
cmp
repnz
rcrl
sti
sbb
loopne
lea
fstl
cmp
inc
dec
push
adc
lahf
js
stos
push
pop
sbb
dec
sub
movsb
lea
mov
pop
xor
hlt
cmp
les
loopne
mov
loope
jne
mov
popf
lcall
aaa
sub
push
pushf
out
sahf
lock
jge
xor
sbb
inc
mov
cmpsb
adc
testb
cmp
insl
ss
and
pop
lock
nop
fs
pop
jge
rclb
cmc
mov
mov
adc
outsb
in
shr
sub
inc
adc
jno
cmp
jno
lcall
in
cmp
cmp
repz
cmp
push
adc
sbb
cli
sbb
sbbl
pop
stos
mov
or
lock
lahf
xchg
mov
dec
xchg
xor
add
lcall
int
xchg
and
sub
and
sbb
in
insb
cmp
fcmovne
les
sahf
pop
mov
je
pop
dec
mov
lret
stos
mov
aaa
pop
aaa
lahf
xchg
xchg
push
adc
mov
add
xchg
popf
mov
int
daa
or
mov
sbb
divl
ffreep
inc
xchg
sarl
mov
shr
pusha
mov
fidivs
mov
lret
inc
mov
fldl
adc
mov
add
lret
cltd
add
ret
cmp
cld
into
add
mov
mov
jns
add
sub
cld
adc
jg
mov
add
inc
int
lock
inc
xchg
ja
push
push
pop
inc
imul
jecxz,pt
add
push
push
ret
aaa
and
push
es
push
dec
je
jp
and
cwtl
shrl
outsl
mov
sub
sbb
push
and
les
test
scas
fmul
dec
insb
lret
shll
test
push
mov
pop
adc
sub
push
lcall
loope
cltd
jecxz
lods
adc
xchg
lret
adc
in
push
and
in
jae
or
dec
es
fmul
push
add
sub
and
movnti
into
cmp
xor
sahf
mov
xchg
iret
mov
outsb
jb
adc
int
pushf
in
cmp
mov
outsl
dec
insl
push
ds
sub
pop
iret
sbb
aaa
call
sbb
sub
add
mov
xchg
iret
mov
rcll
cmp
call
ret
mov
and
xchg
cmc
cmp
addr16
sti
mov
rcrl
in
arpl
outsb
pop
dec
cmpsb
push
js
lods
push
gs
mov
bound
icebp
sbbl
adc
sub
sbbb
loopne
divb
push
enter
mov
scas
ret
shlb
shr
mov
addr16
repnz
adc
insb
sarb
pop
dec
pop
lcall
or
in
sbb
and
adc
mov
xchg
rcr
and
mov
popa
pop
cmp
jne
daa
lock
xchg
xchg
loop
sbb
fistps
hlt
fsubrl
xchg
mov
pop
in
rcrb
jl
inc
cmpl
int
leave
cmpsl
jmp
jns
push
sub
sub
aam
addr16
test
sbb
sub
add
fs
pop
ljmp
cmp
aas
movsb
xchg
pop
push
in
div
xor
xor
push
inc
movsl
fmul
pop
outsb
fldt
test
dec
notl
xor
fistpll
leave
xchg
arpl
lea
lahf
push
jmp
sbbb
je
aas
adc
pop
sbb
or
push
into
mov
sub
sahf
adc
mov
test
push
jo
arpl
jle
popf
cltd
xchg
jecxz
jbe
flds
lahf
fnsave
iret
xchg
dec
pop
faddl
adc
outsb
fs
xchg
push
push
jmp
mov
dec
cmpsl
pop
js
xchg
addr16
cwtl
loopne
add
push
push
inc
cs
lcall
add
sbb
and
aam
mov
mov
sti
sti
iret
movsb
xchg
dec
mov
jb
inc
data16
adc
push
shrb
fisubrs
mov
dec
and
or
pop
mov
adc
add
in
ja
sbb
push
sub
pop
out
push
loop
ljmp
and
loope
xchg
and
aad
mov
add
testl
and
mov
or
mov
mov
je
xchg
and
pop
cmp
setnp
cmc
fs
aas
xlat
jp
andb
push
mov
loopne
jae
add
fsub
sub
cmp
stos
negb
stos
enter
add
jecxz
mov
call
lock
xchg
sub
jb
pop
test
repz
nop
fistl
enter
negl
les
adcb
es
pop
mov
sbb
sbb
jno
enter
sub
pusha
dec
loopne
fnsave
fwait
outsb
adc
pop
imul
stos
in
stc
testb
outsl
jle
popf
out
mov
arpl
jae
fsub
cmc
imul
jne
arpl
pop
lcall
ljmp
mov
jle
xchg
rorl
cmp
in
cmpsl
es
mov
jle
out
push
pop
sbb
or
push
xchg
jae
pop
mov
and
mov
lret
scas
fistpll
fcmovbe
movsl
subl
xor
ds
push
cmp
cmp
add
pop
insb
cmp
cmp
xor
aam
es
xor
js
stos
xor
push
cmc
cld
into
xchg
ret
into
rorb
mov
gs
sahf
push
cs
notb
aas
sbb
sub
out
int
mov
inc
gs
xor
shl
ret
ret
lods
mov
mov
das
aam
jmp
aaa
nop
xchg
into
icebp
dec
stos
cmpsl
dec
scas
pop
and
and
nop
dec
push
jo
fs
pop
mov
je
pushf
dec
test
add
pop
cmp
jns
loop
sub
or
xchg
inc
in
dec
aas
mov
addr16
pop
js
cmpsl
cmpl
lcall
xchg
xchg
sbb
pop
int
clc
cld
mov
sub
cmc
fbstp
mov
incl
in
adc
test
adc
push
or
sbb
ret
cltd
fisubrl
add
pop
push
cmp
pop
add
or
jmp
fmulp
push
fcomi
fdivs
adc
ljmp
push
fnstcw
xor
or
les
out
rcrl
mov
sub
in
pushf
cwtl
ret
stos
les
enter
push
ss
sbb
subl
adc
dec
es
cmpsl
pop
and
pop
and
mov
mov
orb
imul
ljmp
scas
xor
frstor
add
imul
cmp
ficomps
fstps
mov
stos
into
push
pop
clc
flds
cmp
je
add
mov
mov
leave
cmpsl
mov
push
mov
sbb
and
sahf
div
loop
and
push
xor
in
je
loopne
adc
cmp
jae
scas
cld
jp
cmp
xor
js
or
xor
inc
call
push
push
push
and
mov
xchg
jmp
xchg
xchg
mov
outsb
or
mov
jge
test
lds
mov
push
xor
inc
cltd
dec
js
out
adc
pop
mov
cmp
iret
and
cmpsb
mov
jns
lcall
imul
fdivrl
xchg
or
fisubs
jp
roll
rolb
adc
push
cmp
add
fldl
xor
dec
loopne
dec
not
xor
jbe
in
mov
push
mov
mov
or
out
sub
add
add
adc
out
lcall
xchg
cltd
xchg
sti
or
into
mov
es
xchg
xchg
popf
stos
rclb
ret
mov
sti
arpl
es
decb
incb
pop
pusha
cmp
adc
mov
jle
and
int
xlat
in
test
mov
cmp
add
xor
daa
out
mov
cwtl
inc
mov
aam
sub
push
jge
lods
sub
cmp
pop
and
sub
pop
out
aas
std
xchg
daa
data16
sbb
in
cmpsb
pop
mov
push
jb
out
imul
cmp
outsb
adc
jns
xchg
dec
cli
cld
inc
repnz
jge
sbb
sbb
adcb
leave
imul
push
mov
clc
push
push
mov
orb
xor
aaa
mov
outsl
mov
mov
dec
mov
test
xor
or
mov
imul
cld
in
dec
lret
ds
iret
xchg
add
inc
das
cltd
mov
hlt
mov
inc
cmpsl
push
pop
outsl
nop
fadds
pop
pop
xor
or
out
sub
mov
cli
es
pusha
mov
fwait
pop
push
dec
ds
pop
or
shrb
xor
jne
cmpsb
cmp
fcmovbe
in
stos
adc
cmp
dec
cmp
add
mov
dec
jb
adc
inc
outsb
cmp
mov
jle
dec
push
stos
popf
or
sub
lcall
sbbl
std
sbb
divl
mov
mov
xchg
jno
filds
lods
mov
xchg
mov
cmp
sbb
sarb
bndldx
pop
sub
jle
aad
out
in
iret
mov
cmpsl
sub
stc
ss
jg
adc
mov
xchg
jecxz
xchg
movsb
pushf
inc
ja
mov
sub
cli
fbstp
jp
sub
orb
ljmp
cli
cmp
jo
lock
movsb
xorb
push
dec
call
lea
ret
mov
mov
mov
cmpsl
out
inc
mov
mov
add
jno
push
icebp
js
movsl
mov
rorb
mov
cmp
mov
bound
test
adc
jbe
jge
ljmp
push
into
clc
mov
test
xchg
daa
mov
cmp
movb
cmovg
mov
fs
jmp
fwait
je
jp
xchg
dec
mov
vphaddubq
pusha
jge
push
and
ja
xor
pop
xor
aad
pop
mov
imul
sbb
imul
cmc
cmp
dec
in
pop
das
lcall
mov
sbb
mov
mov
xchg
mov
dec
mov
push
lock
scas
test
jg
xlat
inc
mov
cmp
push
push
cld
cmp
sub
clc
aam
fdivp
inc
mov
or
mov
sahf
xchg
push
jmp
inc
mov
cmpl
mov
or
and
jb
aad
fildll
mov
arpl
data16
aam
iret
mov
cmpsb
cmp
push
sbb
popf
cmp
inc
repnz
mov
sarl
pusha
or
jl
aam
sbb
stc
pop
cmpb
aas
cmpsl
icebp
test
cwtl
test
repz
adc
pop
stos
or
ja
push
int
cmp
pop
mov
push
mov
push
loop
push
cld
out
outsl
aaa
stos
into
sub
adc
ficompl
adc
aad
cld
adc
bound
popa
dec
mov
push
ds
sub
addr16
pop
inc
enter
ja
inc
shll
mov
adc
adc
push
arpl
notl
mov
addr16
xlat
mov
outsl
outsb
out
les
enter
pop
adc
adc
inc
add
push
jbe
or
shr
mov
xor
loop
js
xor
out
int3
xchg
xchg
dec
sub
jbe
je
push
in
push
push
fistpll
aas
cld
test
inc
jl
cmp
std
add
sbb
cmp
push
les
xchg
test
mov
je
mov
aad
pop
adc
popf
mov
fisubl
mov
pusha
sbbb
dec
mov
movsb
pop
jmp
ja
sub
insb
dec
rolb
sahf
and
xcrypt-cfb
cmpsl
out
test
jb
push
lods
fisubrs
dec
or
arpl
notl
mov
push
mov
pop
sub
jmp
fildll
lret
mov
icebp
aad
sub
cmp
mov
sub
sbb
mov
rcrb
dec
icebp
jb
lcall
mov
leave
mov
mov
push
fs
pop
fadd
pop
gs
push
mov
xchg
mov
jo
mov
xor
daa
aam
or
and
mov
popf
popf
incb
cmc
xchg
test
jge
loope
gs
aad
inc
hlt
push
dec
push
jmp
push
pop
and
insl
ret
enter
cli
and
sbb
xor
sahf
iret
mov
int3
js
push
jnp
orl
inc
or
movsb
cmpsl
or
test
sti
inc
pop
xchg
test
cltd
jae
mov
push
dec
cwtl
les
add
inc
pop
mov
xlat
aam
pusha
leave
xor
lds
aam
mov
fucomi
scas
push
cwtl
inc
popf
sbb
xchg
insb
outsl
leave
lret
stos
jmp
or
xorb
adc
pop
mov
lock
sbbb
jbe
aad
cld
xor
movsb
scas
addb
test
mov
ja
lahf
ja
cmp
jns
iret
dec
sub
jle
and
jecxz
lcall
jb
xchg
jns
push
adc
int
fs
mov
mov
in
push
mov
imul
leave
lods
and
retw
dec
stos
sbb
mov
push
pop
push
or
ss
mov
jne
sbb
out
data16
add
push
iret
pop
movsl
mov
mov
jg
ds
pop
ret
jns
ret
orb
call
popa
into
adc
sbb
mov
out
xchg
push
push
jge
adc
push
sub
dec
jno
adc
rcl
pop
jb
push
les
sub
fcmove
cs
in
cmp
andb
pop
shrb
sub
popa
jecxz
ja
insb
pop
cmp
or
outsl
lods
push
mov
lods
movsb
and
lds
push
call
ja
fiadds
das
in
dec
fwait
icebp
xchg
repnz
cmp
orl
iret
add
xor
or
hlt
mov
std
sub
nop
in
std
je
pop
inc
ds
cwtl
mov
xchg
cmpsb
fidivrs
into
jo
inc
push
out
stos
xchg
xchg
mov
pushf
hlt
or
daa
rcrl
insl
push
leave
mov
rolb
xchg
pop
dec
xchg
sub
mov
insb
jns
mov
test
sbb
leave
inc
call
rorl
jae
mov
ficoms
mov
mov
cltd
add
dec
mov
sub
decb
sub
cmpl
adc
out
adc
cs
into
clc
jae
mov
jno
daa
movsb
lds
mov
lods
hlt
in
mov
push
or
cmpsb
fildll
lahf
ljmp
sahf
push
mov
lret
outsb
enter
xchg
mov
jo
cld
dec
push
push
mov
imul
jmp
fnstenv
jnp
test
dec
mov
cmp
jno
notl
add
inc
cltd
push
push
rclb
jns
cltd
lea
or
lods
mov
sbb
jp
sti
jmp
cld
fadds
mov
xchg
popf
add
lret
test
pop
fwait
and
dec
mov
dec
cltd
nop
cmpsl
lea
jle
dec
pop
out
jle
mov
mov
inc
mov
in
nop
xchg
xchg
sub
pop
fs
loop
shlb
push
pop
cmpsb
out
stc
in
psrlw
pop
mov
lret
push
pop
repz
lret
push
push
pop
inc
xor
in
jg
sti
gs
imul
jb
lret
dec
or
shlb
mov
jo
pushw
jecxz
push
pop
out
in
fstl
addr16
bound
or
mov
leave
stos
lahf
iret
pop
cmpsb
push
pop
push
mov
popf
sub
iret
push
sub
xchg
pop
mov
bound
filds
in
cli
mov
adc
gs
sbb
add
mov
jns
pop
xor
aam
popf
sti
je
mov
add
xchg
fnsave
jl
cld
jns
mov
ss
lds
or
pop
mov
push
shr
push
ret
dec
jae
xor
pop
dec
push
xor
out
xor
lock
imul
sub
mov
or
fcoms
mov
mov
xor
into
push
dec
inc
ret
or
pop
or
sub
vmaxsd
xor
test
pop
sbb
xor
adc
mov
cmp
sub
add
insb
sbb
rorb
ljmp
bound
adc
std
sahf
cmpl
out
sbbb
bnd
pushfw
jns
shrl
ds
ret
das
or
jb
push
sahf
and
fistpll
sub
fisubrl
idivb
lock
inc
sub
and
stos
push
adc
imul
cmp
inc
ds
je
sbb
xchg
jle
mov
rorb
dec
inc
out
fwait
and
cmc
mov
dec
mov
mov
mov
mov
popl
mov
add
sbb
mov
jno
xchg
fisttpl
and
jo
xchg
jo
out
mov
jg
pop
notb
fwait
push
sub
pusha
subb
jno
dec
add
xchg
dec
sub
sbb
stos
push
insb
icebp
pushl
jle
jge
xchg
ja
or
xchg
repnz
gs
dec
aam
mov
inc
out
test
cld
jno
ffree
jnp
mov
shlb
push
cli
sarb
push
dec
cmp
or
call
ja
test
enter
xchg
cli
push
cmc
and
fdivr
xchg
repz
test
lret
mov
mov
je
nop
mov
ljmp
arpl
pop
fwait
pop
xchg
push
jbe
repz
cbtw
ret
add
or
pushl
mov
test
lea
inc
outsl
add
jp
loopne
pop
dec
clc
rol
fiadds
cmc
arpl
out
pop
aam
mov
mov
icebp
in
jo
icebp
in
pop
fistl
sbb
pop
mov
mov
pop
xchg
sub
test
outsl
ljmp
loopne
lds
insl
popa
clc
test
or
insl
cmp
xor
imul
aam
cmp
xchg
aas
mov
into
andb
jg
divb
adc
dec
into
popf
lcall
outsl
add
loop
arpl
int
je
lret
loop
scas
test
jl
pop
push
lock
stc
fildl
pop
rep
fwait
mov
push
mov
loop
mov
lea
js
pop
loope
or
and
cmp
xchg
sbb
out
ds
mov
mov
cmp
mov
fidivs
lds
mov
and
lods
mov
stos
cmp
xor
jo
stc
xchg
cmp
insb
int3
ds
mov
scas
sbbl
and
mov
xor
dec
mov
mov
inc
jecxz
inc
jge
aam
fs
mov
shrb
imul
jbe
shll
sub
mov
fdivs
jp
pop
or
push
mov
in
cwtl
int
sub
pop
cwtl
iret
adc
cli
inc
aam
insl
and
sti
jo
mov
jo
ret
pop
test
push
into
out
xchg
cmc
insl
out
shrl
jle
pushf
incb
or
lods
daa
mov
push
xchg
lock
xchg
cmc
cmpsb
mov
out
dec
or
mov
mov
inc
popf
and
cmp
push
mov
lahf
mov
push
push
push
xor
push
lea
div
add
sub
mov
push
cmp
pop
mov
sbb
mov
ljmp
xlat
and
aam
mov
jmp
out
mov
iret
inc
ss
mov
popa
cmpsb
mov
call
add
or
fxch
jno
out
inc
dec
stc
jp
loopne
cmpsl
mov
ds
push
div
aam
jmp
or
test
add
and
repz
in
push
int
inc
or
movsb
mov
or
cmp
xor
in
push
inc
into
call
mov
stc
jge
loope
loopne
push
jmp
dec
sbb
mov
insb
dec
lea
imul
or
std
lock
fadds
fildll
std
lock
insl
cmp
fdivrs
pop
stos
stos
outsb
pop
inc
sub
out
shrb
mov
loope
fchs
cmp
imul
sahf
xchg
cwtl
add
mov
int3
mov
test
loope
inc
adc
int
movsb
cwtl
or
jecxz
push
fpatan
add
cmc
jae
cmpsb
in
sub
rcll
cmpsl
ss
test
push
add
lods
fnsave
aas
sbb
nop
jge
aad
cmp
mov
mov
jb
or
push
outsb
ja
mov
out
xchg
sti
inc
add
cs
movsl
sbb
inc
or
iret
test
test
adc
push
push
mov
testb
push
inc
or
xor
out
xchg
ljmp
inc
adc
sar
push
dec
sahf
gs
mov
lcall
imul
cmc
jae
push
jp
push
mov
sahf
dec
in
jnp
sbb
test
cmp
mov
loop
push
dec
jb
out
mov
jecxz
jl
and
pusha
cmp
mov
adc
call
mov
sbb
dec
roll
in
das
repz
ds
lret
fiaddl
subl
push
inc
mov
pop
pop
jno
call
mov
movsl
addr16
adc
out
push
test
cmp
lcall
or
call
arpl
jp
or
or
sbbb
leave
xchg
mov
in
pop
inc
arpl
es
lcall
push
cmp
jmp
pop
sub
daa
jns
inc
adc
sub
mov
or
cmp
dec
push
cmp
lret
int
pop
jnp
test
fcomps
cmp
out
fucomp
cwtl
mov
or
mov
idivb
fidivl
jl
or
cmp
popa
push
mov
mov
sub
cmpsl
jp
add
mov
popa
pminsw
mov
sub
je
mov
ds
mov
cwtl
and
inc
mov
icebp
dec
mov
in
sbb
mov
and
fstpt
int
push
outsl
inc
push
clc
dec
aam
mov
bound
int3
scas
push
imul
mov
repz
pop
cmpsl
ret
mov
outsl
out
inc
add
jae
inc
inc
in
es
rolb
mov
stos
jae
ss
push
out
dec
jmp
and
and
lret
mov
mov
cwtl
insl
xor
mov
cmp
xor
xor
movsb
ljmp
push
push
fmull
imulb
lock
push
sbb
cld
xor
cmp
xchg
mov
stos
push
fisttps
fisubs
movsl
add
sbb
test
cmp
repz
fbld
rcrl
mov
clc
lcall
addl
lods
in
fs
insl
pusha
in
push
fwait
leave
sub
ret
mov
pop
xchg
pushf
add
push
mov
pop
mov
and
ja
push
cmpsb
ret
nop
pop
repz
pop
sbb
cmovb
outsl
inc
dec
mov
jae
push
adc
pop
lods
stos
and
negl
and
enter
stos
push
rclb
pop
mov
stos
cld
out
cld
stos
nop
arpl
stc
dec
xchg
stos
stc
shr
xchg
mov
push
arpl
in
nop
fsubrl
jnp
inc
dec
jge
aad
adc
and
inc
jne
popf
xor
and
in
mov
insl
or
xor
cmp
pop
inc
call
xchg
cmp
lahf
add
sub
pop
inc
add
out
leave
les
adc
sub
es
test
mov
xchg
ljmp
enter
outsl
pop
bound
push
mulb
dec
xor
adc
or
jb
mov
mov
inc
cmp
inc
lret
add
sbb
and
fdivs
test
sbb
jb,pt
mov
mov
or
add
iret
pop
add
push
out
and
shlb
ja
mov
test
sbbl
push
sbb
cmpsl
pop
and
or
or
loop
enter
dec
and
fisubrs
andl
adc
js
mov
nop/reserved
xchg
dec
cmpsl
ret
push
arpl
lds
lods
cltd
sar
adc
xchg
jno
dec
push
sti
addr16
dec
and
addr16
pop
arpl
add
call
jns
xchg
ds
dec
out
loope,pt
enter
mov
mov
sahf
cmpsl
mov
xchg
jge
mov
pop
pop
out
insw
mov
pop
out
mov
pop
add
scas
imul
adc
dec
add
ja
and
push
cld
test
faddl
lds
int3
or
pushf
dec
add
gs
fsubl
int
stc
iret
xor
jb
add
bound
imul
pop
push
ret
pusha
lods
mov
dec
pop
xchg
jg
mov
and
imul
xor
out
sbb
addr16
imulb
popf
das
jp
ja
mul
jns
sbb
enter
sbb
shl
js
add
and
sbb
rcll
fisubrl
or
mov
inc
clc
aas
ret
lahf
push
inc
arpl
cltd
enter
das
and
adc
pop
and
ss
into
cld
mov
add
xor
mov
sbb
cmpb
test
andps
and
mov
jecxz
sahf
popa
loope
jecxz
bnd
adc
lods
dec
scas
aad
mov
push
xchg
enter
loopne
stc
mov
ficomps
bound
lea
jns
xor
and
es
and
pop
fiadds
xchg
cltd
cmpsb
rorb
mov
adcb
push
sub
repnz
mov
and
and
push
sub
loope
ret
loop
shll
xlat
dec
out
jg
fldcw
inc
xor
xchg
mov
incl
mov
movsl
test
js
mov
dec
movsb
adc
add
pop
ret
pusha
mov
adc
sar
inc
js
dec
mov
inc
notb
mov
jno
out
xorb
imul
mov
lea
inc
out
icebp
imul
outsb
js
pop
mov
inc
push
mov
or
sti
add
add
outsb
aaa
sub
cmp
insl
test
push
imul
mov
mov
sub
rcll
or
movsl
jp
inc
inc
int
rcrl
jmp
pop
scas
jno
xor
cmpsl
mov
push
adc
add
add
outsl
arpl
addr16
lock
into
dec
cmp
mov
cmc
lret
xchg
lahf
adc
imul
sbb
lea
arpl
test
inc
jmp
mov
mov
cmp
ljmp
iret
inc
gs
sbb
in
stos
adc
sub
fwait
imul
leave
and
popf
stos
cmpsb
jae
jno
sahf
fnstcw
aaa
mov
adc
sahf
lock
rcrl
aam
fisubl
es
sbb
inc
mov
jns
push
cld
push
cmpsl
arpl
imul
loop
hlt
mov
mov
pusha
fldenv
mov
iret
gs
insl
xor
aas
addr16
sarb
lcall
pop
outsb
mov
jecxz
xchg
bound
mov
mov
mov
or
mov
je
add
enter
sbb
jmp
ds
sbb
out
incl
push
inc
pop
outsb
shrb
lods
push
mov
xor
jge
icebp
sub
clc
push
out
icebp
pop
mov
mov
testb
lahf
xor
pop
jno
xchg
sti
push
pop
sbb
or
pusha
je
mov
hlt
les
inc
mov
jo
in
insb
pop
jmp
repnz
jne
and
mov
fwait
incl
pop
aaa
sub
push
inc
fdivl
pop
bnd
pusha
jecxz
cmp
jb
xor
sahf
jecxz
shll
arpl
ja
mov
mov
popa
insb
and
inc
movsb
mov
orb
popa
outsl
outsb
dec
out
mov
into
sub
cmp
aam
scas
imul
shlb
imul
sahf
cmp
out
dec
dec
repnz
fstps
xchg
mov
jg
cmp
cmp
popa
mov
les
sbb
adc
sub
push
inc
dec
mov
out
mov
cld
mov
fs
scas
leave
fnstsw
push
int3
mov
out
test
mov
test
arpl
add
cmp
test
mov
sbb
sbb
jne
lahf
ss
aaa
test
cmp
cmp
fdivp
jmp
mov
adc
enter
in
lods
cwtl
jg
daa
push
shrl
dec
sbb
cltd
and
test
lds
movl
adc
xor
jle
cli
out
add
or
daa
or
sahf
ret
push
jg
clc
xchg
sbb
cltd
add
ja
mov
cmp
imull
lret
fwait
push
imul
cli
bound
idivl
out
leave
loop
cli
push
ss
movl
mov
push
repz
pusha
jmp
pop
add
pop
es
xlat
leave
lods
ror
jno
fdivl
or
jne
or
inc
lahf
cli
mov
insb
sbb
data16
inc
aad
push
frstor
add
subl
mov
mov
and
cmp
repz
cwtl
ds
dec
mov
mov
aam
jle
popf
jns
lea
add
cld
notb
call
add
xor
sub
jp
mulb
leave
mov
inc
imul
jb
cmpl
push
pop
movsb
xlat
cmp
and
push
mov
lds
scas
mov
iret
lahf
cmpsb
sbb
nop
fs
sti
pop
xor
inc
push
dec
sbb
cmp
push
adcl
pop
dec
loop
repz
outsb
and
or
cmpsb
ficompl
out
xchg
xchg
call
push
jo
xor
mov
maskmovq
imull
push
idivb
rorl
add
push
mov
or
cmp
arpl
popf
dec
cli
in
iret
mov
testb
pop
sub
adc
hlt
pop
xchg
sbb
xor
xor
test
mov
mov
outsb
mov
mov
jns
bound
pop
and
xchg
in
sbb
loope
add
mov
jg
xor
mov
adc
das
jno
lock
ljmp
enter
adc
mov
push
add
sbb
inc
in
mov
jle
mov
in
cmc
cmp
lret
pop
adc
and
fisttpl
or
push
add
lret
lods
cld
lcall
fwait
push
sbb
test
imul
ljmp
imul
inc
lods
dec
add
add
mov
xchg
in
aad
int
jne
inc
dec
jae
pop
xchg
stos
or
and
pop
push
sbb
lcall
xchg
pop
in
xchg
ret
adc
dec
xor
aad
pusha
xor
or
sahf
pop
out
push
cmp
add
sbb
push
and
pop
pop
adc
out
fiaddl
mov
pop
dec
push
fsubs
stc
js
cld
mov
inc
roll
jmp
mov
sbb
mov
loope
in
into
mov
sub
lock
cmp
daa
shrb
sbb
or
test
or
push
dec
inc
push
pop
cltd
mov
mov
or
mov
mov
les
add
sarb
dec
cmpl
jne
loopne
add
cmp
pop
fwait
mov
test
mov
lahf
es
xor
cs
pusha
incb
dec
jg
out
mov
stc
push
push
in
adc
xchg
addr16
call
sbbb
loope
mov
stos
sbb
sbb
sbb
push
sub
mov
fcmovbe
adc
fcompl
inc
jp
orb
fildl
pop
push
push
test
mov
or
xchg
stc
out
mov
cli
sub
ds
ljmp
cmc
mov
sti
scas
mov
aaa
ljmp
lods
lods
insl
das
daa
mov
loop
jp
jbe
addb
mov
nop
xchg
push
push
xor
inc
cli
cli
or
aad
fisubl
cli
dec
jp
xor
mov
pop
pop
sub
cmp
mov
in
cmp
out
dec
les
das
sbb
jge
inc
cmpsl
notl
xor
aaa
mov
mov
repnz
test
insb
lahf
xor
mov
pop
push
and
dec
stos
sbb
add
jl
clc
sbb
mov
lret
mov
cwtl
mov
cltd
repnz
push
dec
out
push
sub
cmpsb
fucomp
mov
ds
inc
imul
xchg
xorl
push
sub
lea
sbb
inc
push
lock
in
in
xchg
leave
mov
jns
xchg
in
out
jmp
call
pop
stos
dec
scas
sarw
inc
lods
popl
pop
test
adc
add
cmp
jg
repnz
or
or
lods
dec
mov
test
loopne
ret
pusha
xchg
int
and
stos
xchg
mov
fwait
jae
dec
outsl
xchg
add
int3
pop
aas
repz
and
xor
test
bound
popa
xor
aaa
mov
andb
dec
xor
adc
mov
jle
in
out
add
adcb
stos
add
mov
out
pop
clc
out
xlat
sbb
cmp
popf
fbstp
inc
test
pop
push
mov
mov
pop
mov
sbb
mov
mov
inc
in
push
mov
jns
out
aaa
xchg
mov
pop
xchg
dec
ja
mov
jl
mov
int
xor
pop
mov
jle
mov
pop
adc
sti
sub
jle
mov
dec
mov
ljmp
test
shlb
test
xor
ffreep
lods
mov
bound
iret
adc
ljmp
setbe
mov
jp
fsubrp
int3
xchg
ret
cmpsl
lret
test
adc
jmp
push
test
xor
or
sub
jmp
decl
imul
loop
loope
call
mov
add
mov
push
push
xor
jmp
xor
mov
mov
int
rorb
push
fwait
stos
out
jp
inc
jmp
cltd
mov
jae
xor
push
xor
sub
dec
es
push
fisubl
cli
sub
cmc
ficoms
enter
cs
sarl
jb
scas
sbb
pop
sbb
push
movsl
mov
inc
add
mov
inc
cmc
loop
je
push
add
xchg
mov
jb
faddl
xor
mov
xchg
lea
insl
ds
and
dec
cld
xor
and
pop
pop
lock
inc
or
loope
add
sti
fmuls
or
inc
rcrl
stos
xor
sub
fmull
stc
dec
cwtl
push
shrb
fsubl
mov
sub
add
js
ljmp
mov
xor
fwait
es
fidivs
cmc
sbb
push
test
add
lods
bound
sub
bnd
insb
cmp
xchg
cmp
jp
add
push
sub
add
pop
inc
int
int
xchg
imul
jmp
mov
bound
mov
sahf
xor
mov
cmp
cmp
mov
mov
add
push
data16
inc
in
mov
pop
or
sub
add
add
xor
xor
push
jnp
sbb
arpl
enter
ret
inc
outsl
mov
ja
lock
cmp
movsl
imul
shll
cltd
and
inc
out
sub
jne
fs
insb
jl
mov
or
add
loope
and
cmp
or
adc
jmp
std
fabs
rcr
mov
data16
jns
cli
sbb
dec
mov
add
sbb
jecxz
icebp
or
lods
cwtl
data16
sub
fimuls
xor
fwait
adc
xlat
and
or
jecxz
inc
mov
pusha
cmpsl
mov
or
mov
lahf
or
mov
push
div
xchg
js
dec
xchg
mov
pop
ds
dec
dec
inc
push
repnz
cmp
or
dec
sbb
add
sbb
loope
or
int
push
in
fnsave
xor
pop
rorl
add
jne
mov
repz
cmp
inc
add
adc
pop
jg
mov
pop
stc
xor
dec
sbb
ret
push
sub
outsl
cld
or
lahf
mov
and
mov
mov
fs
cmp
es
idivl
sbb
mov
mov
cmp
or
pop
cmp
js
pushf
scas
add
jno
jno
sbb
in
jb
hlt
inc
adc
pop
stos
push
adc
cmpsb
jns
inc
inc
dec
or
aam
xor
mov
sub
jo
and
in
cmp
data16
jl
add
ljmp
repnz
fdivr
sbb
push
pushf
xchg
sub
pop
jo
adc
jbe
ret
rorl
inc
mov
sbb
lea
hlt
lahf
js
mov
lock
jb
stc
inc
orl
bound
pop
adc
pop
sub
lds
mulb
arpl
test
fidivrl
sbb
out
ljmp
jp
mov
mov
mov
cmp
xlat
push
movhlps
loope
mov
xchg
jns
inc
loopne
fdivrs
rcll
mov
hlt
mov
pusha
mov
dec
jb
iret
addr16
and
jne
dec
jb
movsb
xchg
or
aaa
out
pushf
mov
sub
cli
xlat
pop
mov
and
or
lea
in
cmp
aaa
jle
hlt
and
mov
pusha
cmpl
ror
add
cmpsb
xor
inc
aas
adc
jecxz
lds
pop
mov
mov
inc
cmp
outsb
lods
sahf
mov
clc
or
push
clc
arpl
and
adc
cmp
sbb
fstps
cmpsb
loopne,pt
imul
call
sbb
dec
lock
movsb
or
add
into
sbb
gs
aam
pop
js
add
pushf
and
scas
std
dec
mov
jbe
pop
mov
pop
aam
dec
mov
in
lahf
sbb
cmc
divl
pop
inc
jb
inc
enter
ja
fs
sahf
repnz
addr16
dec
shrl
push
sbb
jp
or
scas
cltd
sti
aaa
pop
scas
mov
jne
add
fadd
sub
stc
pushf
sub
mov
fnstenv
inc
cld
sar
and
dec
loope
cmp
xchg
adc
movsb
mov
pop
or
sar
icebp
ss
daa
cld
daa
bnd
sub
lcall
pop
dec
ja
loopne
add
shr
mov
pop
sbb
shlb
mov
and
push
mov
push
in
into
rclb
fistpl
add
jg
enter
and
ret
popa
stos
mov
push
push
adc
pop
fiaddl
stos
and
add
shll
mov
arpl
cmc
leave
pusha
push
sbb
sbb
pop
test
mov
jge
stos
add
sbb
call
inc
dec
push
popa
push
adc
push
inc
fsubl
ljmp
jmp
test
xchg
int3
mov
lret
outsl
cmp
lock
inc
jle
subl
mov
lods
shll
mov
pushf
push
add
out
cmc
sbb
popa
push
xor
xor
sub
xlat
mov
pop
sbb
lcall
sub
jle
cmp
xor
pop
pop
insb
jns
mov
insb
jl
fildl
add
xor
and
cmp
std
push
push
mov
xor
roll
fs
cmove
xor
pop
push
repz
add
add
jno
dec
sub
xor
cmp
add
or
push
add
mov
jecxz
sbb
lds
out
lds
mov
mov
es
sub
movsb
or
dec
xchg
xchg
out
inc
cmp
data16
ss
scas
jecxz
cmp
fs
aam
scas
mov
mov
mov
bound
imul
and
ljmp
incl
push
xchg
pop
sbb
xlat
jmp
xorb
stc
or
pop
popa
jae
and
or
mov
je
push
loop
mov
inc
xchg
xchg
sarb
fs
push
mov
cmp
test
stc
jmp
dec
xchg
dec
add
test
insl
mov
les
pusha
loope
cmp
sub
push
mov
cmp
je
dec
mov
pop
int3
int3
orl
insl
pop
enter
xor
test
ret
push
add
repz
dec
testb
bound
pop
cmp
inc
push
sbb
and
cmpl
rcl
dec
mov
jne
dec
or
fnstcw
or
adc
dec
lret
cmp
aaa
lret
adc
stc
ret
or
xchg
cmp
sbb
jno
or
or
stos
cli
lahf
jge
aas
add
pop
jmp
inc
ljmp
dec
mov
ret
lods
mov
ret
jle
xchg
and
mov
mov
out
out
cmp
jl
out
pop
ja
inc
fadds
add
daa
sub
ror
loope
sub
imul
mov
or
inc
in
outsl
test
hlt
fsts
fimull
call
and
push
ret
sub
cmpsb
or
sbb
mov
push
shll
inc
mov
cmpl
jbe
cmpsl
repz
addb
xor
int3
test
or
push
leave
cwtl
cmp
sub
test
fsubr
aaa
cmp
out
add
in
inc
test
rolb
incb
add
nop
pop
sbb
jne
icebp
in
stos
pop
fwait
cmp
and
and
pusha
dec
ja
mov
adc
dec
idiv
in
xchg
int
pop
shl
mov
xchg
jns
call
mov
cmp
add
sarl
push
dec
adc
outsb
ja
incb
lods
in
mov
shl
inc
add
sbb
imul
or
jae
jae
or
inc
out
inc
sbb
mov
mov
add
dec
icebp
jecxz
aaa
nop
jge
and
or
mov
fistpll
subb
xor
cmp
sbb
adc
cld
jnp
fwait
mov
fbld
test
mov
scas
fcmovne
mov
pop
scas
push
adc
cld
push
out
inc
aam
ret
xchg
xchg
sub
and
pop
mov
cmp
shrl
pop
cmp
or
aas
mov
mov
cmp
mov
cmp
dec
jb
pusha
pop
aam
scas
in
mov
jge
sti
add
and
push
cmp
iret
insl
push
adc
push
pop
xchg
jp
and
es
cmp
out
inc
lss
xlat
in
jmp
mov
lea
push
dec
rcrb
cmpsb
addr16
out
jae
lcall
insb
xlat
addl
inc
and
lcall
lods
fmul
dec
stc
adc
and
xchg
in
out
imul
jo
popf
add
dec
rorb
mov
xchg
sbb
lret
xor
cli
sbb
fmull
std
adc
push
les
cmp
stos
ffree
lret
insl
in
sub
loopne
repnz
sbb
dec
adc
fistps
loop
int3
movsb
testl
enter
push
aad
fptan
jae
lea
rcl
inc
cld
movsl
outsl
mov
mov
sbb
cwtl
fists
mov
nop
jns
out
xchg
es
mov
add
jmp
push
out
aas
push
bound
mov
in
add
mov
or
fdivr
out
or
xor
mov
sub
test
cmp
jb
jnp
ss
xor
xor
adc
dec
data16
jmp
adc
jns
clc
add
aas
mov
lret
jp
js
das
lods
or
lods
ss
dec
dec
mov
pop
daa
clc
into
lret
std
push
mov
stos
rcrl
shll
xchg
psubb
sbb
jl
push
xchg
xchg
cvtpi2ps
mov
push
cld
mov
add
fcomps
sar
or
cs
jge
dec
fs
mov
mov
push
inc
out
cmp
idivb
adc
jo
xor
jle
loop
cli
outsl
dec
inc
push
xchg
pushf
aad
rcll
rorb
jge
les
push
enter
mov
and
mov
mov
jg
cltd
hlt
push
xchg
pop
popf
insl
scas
addr16
std
fwait
push
testb
fnstcw
cmp
lods
xchg
loope
mov
ret
daa
add
jl
movsb
push
pushf
in
and
pop
jp
jo
add
cmpsl
rcl
test
xchg
repz
icebp
fisubrl
js
pop
fildl
arpl
notb
popa
ljmp
or
inc
jle
loope
data16
decb
jno
aam
popf
cwtl
mov
mov
adc
clc
pop
sahf
mov
sarl
dec
mov
add
pushf
fildll
or
lahf
pop
divb
iret
cli
adc
je
fs
das
test
dec
cmp
xchg
or
stos
adc
cmp
sub
jns
dec
cs
rorl
push
fwait
jbe
mov
or
inc
cmp
je
ss
dec
cltd
aaa
ret
lods
imul
orl
cld
jge
push
in
lods
sbb
lcall
push
and
add
add
hlt
and
test
std
sub
in
mov
test
rorb
mov
test
arpl
repnz
jmp
hlt
inc
mov
popl
mov
dec
test
out
cmp
scas
or
mov
das
in
mov
loope
ficoms
cmp
aad
fsts
jbe
mov
push
add
ds
shl
dec
ss
das
pop
dec
icebp
loopne
cmp
les
addr16
in
xchg
and
jo
shr
jle
into
cmp
ret
aad
js
sub
or
mulb
out
mov
fimuls
inc
inc
out
cmp
out
jno
dec
xchg
stos
mov
jb
sbb
cwtl
lcall
add
mov
mov
leave
lods
orb
pop
scas
cwtl
andl
addb
dec
mov
inc
adc
fdivrs
lret
fsubs
xchg
jns
pop
push
pushf
xchg
mov
jne
out
test
movsl
push
stos
dec
inc
lret
sub
mov
cmp
out
adc
cli
out
mov
mov
mov
xlat
movsb
pop
imul
or
push
pop
jp
out
ljmp
push
dec
mov
das
cwtl
inc
mov
hlt
or
sub
repnz
mov
mov
sbb
mov
jo
mov
enter
jns
pop
pop
push
test
jo
jp
cmp
push
js
mov
cmpsb
leave
les
cmp
cmp
jmp
cmc
popf
fs
cld
jmp
in
imul
sbb
enter
roll
dec
mov
dec
mov
out
enter
jns
data16
sbb
cmp
jb
dec
outsl
je
je
pop
jl
sbb
test
sar
loop
insl
je
sbb
leave
inc
sbb
nop
jg
push
pop
andb
mov
dec
sub
adc
flds
cmpsl
sbb
xchg
jb
mov
jp
adc
dec
aam
add
lret
ret
mov
movsb
and
jo
psrlq
fstpt
push
in
imul
xor
sbb
fnstsw
loop
push
btc
cltd
xlat
add
mov
mov
mov
jecxz
add
xchg
mov
lea
sbb
adc
mov
mov
loopne
jne
push
js
mov
jle
or
test
cmp
lods
pop
sbb
in
loop
push
lahf
inc
cmp
fiadds
hlt
mov
scas
dec
and
jl
lods
or
mov
sarl
pop
cmpsb
rcrl
mov
popf
and
lret
mov
pop
pop
cmc
cs
jno
or
bound
jno
push
xchg
shll
inc
lahf
sbb
mov
push
mov
lods
in
cltd
pop
jp
lahf
inc
and
mov
or
mov
xchg
cltd
mov
inc
rorb
add
pop
imul
sub
or
mov
mov
xchg
add
sbb
imul
lcall
pop
inc
stos
or
out
imul
fwait
or
add
stc
fs
popf
xor
xchg
cld
sbb
ficompl
ss
ret
aad
add
leave
subl
mov
xchg
cmpsl
out
movsl
bnd
mov
adc
mov
ret
in
dec
ljmp
xlat
xchg
cmpsl
test
sbb
lret
mov
inc
sti
xchg
sbb
cmp
lds
out
mov
shl
dec
adc
movsb
sub
aam
jg
ret
stos
movl
daa
mov
mov
jge
jle
daa
arpl
mov
in
jbe
iret
fmulp
push
pop
inc
arpl
call
popa
shrl
sbb
or
inc
cmpsl
pusha
jle
pop
sub
repnz
jge
addb
and
stc
jmp
imul
sbb
jno
mov
add
and
scas
xchg
sbbl
dec
adc
inc
cmpl
dec
cli
xchg
xchg
cmp
or
mov
lods
add
lods
fidivrl
movsl
cmp
lea
je
cmp
xchg
inc
dec
sarl
sub
sub
push
ss
imul
inc
shll
adc
sahf
imull
icebp
jmp
add
mov
mov
out
data16
mov
subl
movsl
mov
out
sub
sbb
adc
jg
div
add
mov
int3
pop
cmp
into
adc
add
pop
inc
js
daa
xor
inc
lret
xchg
adc
cmc
mov
outsl
jnp
jecxz
outsl
inc
pop
shrl
push
sub
shll
dec
ja
ds
add
outsl
mov
lds
aam
mov
es
sbb
jecxz
out
rcrb
fcomps
bound
mov
dec
push
mov
js
out
clc
test
aas
ljmp
into
sub
cmp
fpatan
sbb
loopne
inc
cltd
add
andb
jg
cmpsl
pop
inc
jecxz
or
jbe
xchg
xchg
neg
xchg
stos
dec
dec
mov
lret
mov
hlt
mov
inc
or
ss
lcall
testl
aad
mov
pop
movsb
jnp
adcb
outsb
adc
dec
xor
add
inc
push
fdivrs
xchg
pop
push
push
mov
jle
sub
in
mov
and
mov
es
jle
add
sahf
sbb
mov
clc
mov
or
shrb
mov
mov
push
movsl
popa
push
mov
push
movsb
pop
dec
push
leave
push
push
pop
adc
or
mov
push
add
mov
inc
xor
aam
dec
jbe
xor
dec
push
cmp
mov
pop
repnz
adc
sub
sub
push
movsb
mov
ds
test
or
add
jl
mov
jl
andnps
shl
mov
pop
mov
scas
imul
les
loope
bound
outsb
sub
lea
xchg
cmc
cmp
test
cmp
popa
out
dec
mov
arpl
xchg
adc
cmpsl
cmp
repz
pop
mov
adc
and
imul
neg
xor
push
xorb
pop
inc
cmp
lock
fsubrs
lret
dec
push
clc
inc
dec
test
mov
dec
mov
xchg
test
and
shrb
movsb
xor
std
mov
int3
cwtl
xlat
arpl
test
pop
subl
inc
cmpsb
mov
pop
movsl
dec
stc
inc
inc
leave
adc
sub
clc
pop
xchg
and
adc
movsl
pusha
add
sahf
cmp
mov
add
incl
xchg
out
aaa
shr
pop
iret
int3
push
cmp
popa
test
pop
ja
sub
push
int
jne
sub
addr16
jnp
fisubl
adc
test
and
mov
arpl
imul
inc
test
xor
mov
ja
push
inc
rorl
mov
or
xchg
push
sub
addl
enter
push
xchg
push
dec
xchg
cli
inc
lahf
out
jg
test
stos
outsb
mov
push
xchg
movsl
adc
xor
mov
xchg
pusha
std
cmp
jecxz
xchg
jne
inc
outsl
je
add
sar
arpl
pop
inc
push
jecxz
leave
cmp
popf
cmpsb
and
hlt
pop
and
daa
mov
ret
lcall
inc
je
jb
and
roll
cmp
hlt
gs
push
mov
cmp
outsl
lahf
leave
mov
cmp
push
or
clc
jae
inc
test
inc
fbstp
out
fs
stos
scas
lahf
pop
mov
pusha
sub
jb
mov
mov
pop
mov
push
adc
dec
jecxz
cmp
inc
es
bound
or
int3
fisubrs
dec
xchg
sub
xchg
fisubrs
testl
inc
dec
sub
jle
mov
test
pop
fsubrl
loope
cs
jmp
mov
dec
ret
aam
xor
push
sti
cmp
int
jg
push
insb
mov
xchg
and
insb
push
fdivr
fsubrl
inc
push
pop
push
cli
inc
fnstenv
add
rcll
cmpsb
push
lods
fadds
xchg
pop
cmp
mov
int
nop
or
add
dec
jecxz
das
outsb
dec
lods
pusha
jecxz
and
push
out
sub
clc
std
sbb
outsb
mov
decb
movsb
mov
xchg
negl
testb
out
dec
repnz
pop
pop
xchg
push
mov
and
popa
jmp
scas
js
iret
sub
mov
in
test
mov
xchg
ds
sahf
popa
fsubrl
dec
jge
dec
hlt
inc
bnd
push
dec
and
inc
xor
repnz
shlb
push
out
sub
jae
push
sub
mov
shll
scas
sbb
jno
cmp
xor
adc
in
in
jne
repz
push
push
add
pusha
imul
push
orb
xor
jae
scas
and
jb
rol
stos
and
sbb
ret
sub
int
or
sub
jne
repnz
clc
incl
or
fs
add
fcos
xchg
outsb
cmpsb
inc
xor
sub
test
mov
std
int3
movsl
lret
or
pusha
xor
ret
inc
xor
jle
mov
subb
and
and
xchg
ficoms
movsb
lds
test
mov
cltd
fildll
mov
lret
jmp
mov
fmull
mov
test
subb
outsl
arpl
add
sahf
fildll
xor
cld
sbb
or
sbb
jnp
xor
mov
add
and
or
mov
jbe
mov
sti
fisttps
xlat
push
jo
or
lea
lock
xchg
adc
and
pop
cmp
iret
stos
aaa
xor
out
outsb
or
adc
mov
sub
rcr
sbb
scas
iret
add
push
xor
adc
syscall
mov
popf
test
repz
inc
sub
cmp
xchg
subw
or
push
lcall
cmp
xorl
pop
jl
mov
and
sti
inc
dec
and
add
and
int3
mov
pop
pusha
mov
dec
sbb
loope
dec
cmpsb
xor
stos
mov
xor
punpckhwd
addl
aam
out
and
jecxz
aas
push
mov
lods
out
lcall
pop
jo
cltd
pop
inc
test
xor
mov
into
xchg
ret
bound
add
js
xor
add
ss
push
movsb
cmpsb
xchg
adc
sbb
and
mov
cmp
lock
sahf
dec
inc
add
mov
pop
imul
push
pop
dec
adc
mov
mov
cmp
sti
insl
fldcw
mov
pop
xchg
mov
mov
sbb
jmp
and
insb
mov
in
and
or
js
sbb
pop
jnp
sbb
xor
das
xor
sti
pop
pop
cmp
adc
js
and
jns
xor
or
fiaddl
lcall
sbb
jne
int
test
pop
out
dec
jmp
int
lock
imul
imul
fisubrl
jo
sub
sbb
jp
lret
pop
and
and
inc
test
jge
lret
inc
insl
fnstcw
stc
jno
mov
sub
dec
sub
pop
sbb
in
mov
inc
adc
sbb
sbb
imul
pop
outsl
and
ds
outsb
jmp
inc
jb
clc
clc
lret
jle
and
xor
dec
ret
movsb
ss
or
std
lds
js
jae
shll
into
push
push
and
cmpsb
sbb
cmp
and
adc
adc
pop
add
adc
xor
push
addr16
xchg
je
xor
dec
mov
xchg
ret
dec
arpl
or
shlb
mov
std
rclb
xchg
sbb
inc
jae
imul
cmp
cmc
cmpsl
fsubrl
lcall
imull
or
xchg
push
push
push
adc
adc
jle
jae
lds
imul
fisttpll
int3
daa
movsb
xor
pop
stc
xchg
sub
jecxz
dec
xchg
arpl
mov
xchg
insl
mov
inc
insl
push
test
popa
ss
push
mov
pmaddwd
cmp
test
incb
fisubs
jp
es
test
fnstsw
icebp
sbb
sub
adc
iret
xchg
pop
jae
push
je
or
inc
das
xchg
jge
mov
mov
outsb
adc
pop
jmp
jle
in
adc
sbbl
out
cmp
lods
pushf
aam
add
xchg
jb
push
pusha
js
cmp
and
mov
dec
out
mov
clc
sbb
jbe
dec
xchg
xor
jg
rcrb
rcrb
mov
shl
or
dec
aam
insb
push
sub
jo
adc
cltd
stos
inc
rorb
nop
fsincos
sbb
mov
jl
adc
lret
lock
rcrl
sahf
fcompl
push
in
imul
out
xor
rcl
data16
pop
clc
dec
xchg
mov
sub
out
inc
jo
leave
fstps
out
sbb
pop
sbb
cmp
mov
lods
jns
cmp
daa
dec
dec
sub
es
mov
sbb
push
mov
clc
mov
or
stos
jmp
sahf
out
loop
mov
or
sarb
mov
and
fs
jmp
adc
push
xchg
mov
dec
mov
sub
fs
sets
outsl
outsl
fadds
and
pop
add
clc
mov
push
push
shll
loop
movsl
xchg
pop
fnstcw
pushf
or
xchg
inc
rcl
out
imul
stos
imul
mov
push
sbb
push
or
scas
mov
sbb
scas
out
mov
es
lahf
xor
pop
pop
test
or
icebp
xor
popf
call
mul
xor
jge
mov
dec
lcall
mov
add
push
xchg
push
dec
jle
inc
cmp
xlat
test
or
mov
and
fisubrl
or
fmuls
and
inc
in
lcall
and
xor
dec
fmuls
and
vsubsd
test
adc
icebp
imul
push
aas
and
popa
mov
cmp
shll
dec
in
mov
mov
cmp
call
mov
jo
js
sub
ds
outsl
adc
out
sarl
rolb
mov
xchg
add
sti
push
mov
inc
push
out
loop
int3
mov
cmpsl
movsb
call
hlt
adc
ss
sbb
or
fnstenv
fwait
jle
out
repz
or
or
or
mov
dec
icebp
lea
mov
mov
es
out
adc
xlat
cmp
mov
inc
sub
rcr
js
dec
xchg
outsl
mov
arpl
mov
rol
fldl
js
jo
add
add
movsl
mov
js
mov
ljmp
enter
push
mov
int3
sar
jecxz
fldz
aam
repnz
or
arpl
dec
mov
mov
out
stos
and
mov
movsb
adc
xor
or
sbb
push
call
loop
enter
bnd
aas
jo
addr16
or
pop
push
and
int3
icebp
aaa
mov
and
fnstcw
sbb
mov
push
fsub
push
or
imul
inc
cmp
stos
or
ret
dec
xchg
daa
lret
mov
xor
push
addr16
shl
sub
and
aas
subb
sahf
add
aaa
xlat
pinsrw
icebp
in
jl
imul
pop
jecxz
subl
insb
push
dec
in
ljmp
ret
call
stc
iret
inc
mov
cmp
insb
rcl
pop
movsb
mov
xor
sbb
into
push
outsl
shlb
mov
ret
xor
shr
sub
push
add
push
push
jbe
mov
nop
popf
sbb
jne
mov
and
push
jge
mov
lods
call
push
mov
scas
pushl
mov
pop
dec
stc
adc
dec
aad
ret
mov
daa
dec
mov
insl
jne
pop
or
test
pushf
loop
cmp
movsl
out
push
xchg
shlb
fisttpl
cmp
push
int
arpl
inc
scas
adc
aam
adc
idivl
sbb
out
sub
fildll
pop
loop
scas
je
sti
rclb
or
bound
jg
push
jns
and
movsb
mov
inc
pop
mov
ds
adc
cmp
xchg
jg
stos
repnz
sub
subb
stos
aam
xchg
inc
out
jle
ret
sbbb
push
cli
pushf
ja
test
mov
mov
scas
sti
loope
enter
pop
adc
mov
inc
xchg
and
call
lahf
push
xor
sub
pop
call
inc
jp
adc
mov
xchg
arpl
rorb
loop
dec
and
scas
jbe
sarl
aad
mov
xchg
mov
push
nop
push
test
test
jno
imul
or
add
mov
mov
inc
inc
xchg
outsl
mov
movsl
cmc
daa
arpl
testb
int
sub
push
push
leave
xchg
or
aad
jge
dec
or
push
aad
into
fiaddl
mov
and
pop
and
or
ljmp
push
xor
xor
imul
push
insb
inc
inc
xchg
pop
repnz
mov
cmp
mov
fadd
cmp
jmp
jmp
sub
inc
mov
shl
lods
inc
sub
xchg
pop
push
lods
mov
dec
rcr
dec
pop
mov
or
jg
mov
dec
adc
lods
push
fcomps
out
or
lods
xchg
xor
and
sbb
xor
jl
loop
push
pop
and
adc
decl
std
or
nop
and
int3
sub
pop
outsb
sarl
mov
pop
jg
loopne
pop
imul
jno
xchg
push
insb
ljmp
inc
or
aaa
mov
and
push
push
loop
mov
inc
fnstenv
aad
mov
dec
popa
mov
ret
push
ret
les
cmp
ret
ds
imul
lock
pop
mov
scas
outsl
dec
cli
jmp
in
call
outsb
out
setg
shll
pushf
into
pop
xor
xor
pop
xchg
xchg
subb
xchg
adc
pop
sub
jp
sti
adcb
xchg
insb
scas
loopne
cld
add
push
aaa
pop
lds
cmp
adc
or
adc
push
pop
mov
jl
mov
add
add
cmp
push
or
scas
add
and
test
scas
cmpsl
imul
xor
leave
sbb
cmp
add
mov
inc
popa
outsl
fadd
lret
lock
movsb
sub
adcl
test
fsubrl
or
lret
push
scas
jnp
dec
int3
xchg
loope
lods
xor
mov
or
pop
adcl
or
les
cmp
stos
inc
mov
sbb
push
add
push
aad
jae
jae
push
movsb
mov
jg
push
ja
out
leave
mov
mov
sbbb
lods
or
mov
psllq
data16
jb
data16
cmp
add
push
lret
fcompl
addb
mov
or
lret
mov
and
jae
aad
lret
cmp
shll
jo
mov
mov
sbb
jbe
loopne
cmpsb
jnp
sub
and
scas
mov
mov
stos
shlb
popa
jecxz
cs
cmpl
or
les
out
adc
std
jmp
inc
and
mov
sarb
dec
jg
cltd
push
or
mov
mov
jl
in
and
cmc
jbe
mov
das
mov
and
test
test
adc
xor
fwait
pop
sub
pop
and
jne
mov
daa
popf
in
fmull
xchg
out
sub
addl
lahf
in
mov
pop
adc
xchg
pop
jg
leave
dec
jmp
imull
dec
icebp
pop
mov
imul
dec
ljmp
popf
dec
rorl
aaa
push
inc
not
sti
add
cmp
sbb
pop
and
in
push
daa
data16
arpl
and
lcall
inc
das
xor
push
mov
std
notl
inc
inc
scas
fsub
cwtl
or
shrb
out
inc
aam
xchg
cmc
ds
pop
icebp
mov
imul
pop
ret
mov
mov
enter
lods
jno
cmc
add
js
notl
mov
or
cmp
iret
cmp
lock
jmp
test
pusha
jmp
sarb
and
jns
ja
xor
out
push
jecxz
xlat
mov
push
stc
rcl
sub
adc
test
pushf
pop
es
inc
sbb
ja,pn
flds
mov
jno
xchg
fmull
fs
call
push
lret
push
in
sbb
sub
call
dec
mov
ljmp
pop
mov
pop
scas
rclb
lods
inc
xor
inc
jbe
fistps
push
xchg
mov
shr
out
clc
adc
xlat
call
cmp
cmp
cld
rcll
in
ficoms
pop
popa
in
and
data16
ret
aam
mov
and
push
enter
hlt
pushf
into
inc
jmp
sub
sub
out
inc
mov
sarl
mov
jl
xor
mov
xchg
loop
inc
push
repnz
xor
push
sub
imul
insl
xchg
jae
and
ret
xor
leave
popa
and
adc
cmp
sub
sti
pushf
loope
stc
clc
mov
pop
addr16
loop
fldcw
xlat
out
jns
test
jle
nop
jp
scas
fcomps
fisttps
or
push
mov
sbb
jne
js
stc
inc
mov
xor
mov
sbb
cmpsb
sahf
inc
mov
jl
dec
pop
lock
mov
sub
inc
mov
xchg
sub
mov
inc
xchg
bound
lahf
jnp
icebp
mov
imul
xor
ljmp
ret
iret
mov
dec
test
push
mov
aad
jno
inc
jp
jno
push
sbb
jne
xchg
xlat
loopne
xchg
pop
js
jnp
inc
xchg
pop
jae
repnz
aaa
mov
dec
shlb
dec
imul
cli
cmp
cwtl
les
mov
pop
dec
pop
iret
arpl
stos
inc
dec
je
pusha
mov
sbb
sbb
loopne
movsl
imul
mov
in
jo
jne
xchg
or
shrl
mov
icebp
xchg
push
pop
mov
xor
cli
add
pushf
mov
sbb
inc
je
inc
or
xchg
xchg
pushf
hlt
or
push
dec
das
js
sbb
sub
ss
call
stos
cmc
pop
adc
xchg
cmp
into
repz
int3
out
stc
out
ja
stos
cmp
scas
jl
nop
cmpb
pushf
incb
xchg
push
cmp
cli
addr16
sub
rcr
push
subb
out
stos
sub
sbb
sbb
inc
rorb
xchg
data16
pop
daa
repnz
ds
jno
ds
cs
sub
push
mov
or
test
xchg
mov
jb
inc
insb
loope
pop
push
fwait
mull
xchg
idivl
sti
aaa
dec
push
and
adc
sarl
in
dec
mov
adc
sbb
cmp
lcall
dec
jle
ljmp
cltd
inc
pop
ret
jo
jb
jmp
aas
idivl
inc
aad
gs
int3
mov
jno
or
cs
mov
fadds
andb
mov
add
mov
loop
cmc
loopne
cwtl
imul
add
jno
xor
cli
stos
fwait
lcall
push
mov
sbb
dec
pop
popa
pushf
mov
inc
cmp
jo
lahf
push
mulps
in
sti
fs
jns
enterw
mov
sti
add
jge
in
lret
arpl
test
aad
jge
sub
fbld
jo
mov
sbb
leave
mov
cmp
ficoms
xlat
cs
mov
mov
aad
push
call
lret
pop
mov
mov
cmp
and
sub
lods
adc
call
pop
sub
inc
mov
jno
jno
mov
push
je
jg
rolb
mov
cld
cmp
in
mov
xchg
idivb
cld
movsl
mov
dec
mov
scas
sahf
call
imul
xor
mov
mov
shlb
lcall
pop
aas
aaa
push
xchg
or
adc
mov
iret
dec
pushf
ss
mov
pop
pop
xor
std
rclb
xor
add
cmp
xchg
enter
jg
rclb
add
xor
shll
leave
cmp
dec
hlt
jne
ret
fldenv
pop
mov
adc
mov
add
cmp
inc
cmpb
ret
add
mov
jnp
cli
sbb
mov
ja
movl
and
shrb
cmp
sub
sbb
jnp
test
cmp
rorb
pop
hlt
xor
mov
out
mov
pop
sbb
sub
ss
cwtl
mov
xor
loopne
iret
dec
mov
enter
push
or
shlb
stos
fildl
push
out
mov
jecxz
test
pop
add
or
repz
call
cmpl
cmpsl
in
add
pushf
xor
lcall
mov
sbb
gs
lcall
mov
das
dec
pop
icebp
mov
jp
negb
lcall
add
lods
push
cli
xrelease
fmull
imul
sbb
daa
jle
add
nop
out
jo
mov
clc
das
jl
inc
filds
push
test
mov
and
jo
push
repz
dec
add
mov
and
jle
push
jecxz
pop
clc
shrb
push
mov
xchg
popf
repnz
push
push
movsb
and
nop
inc
mov
loopne
jecxz
add
imul
or
xchg
pop
es
lds
sub
cld
es
xor
inc
push
dec
aam
sbb
xorb
loope
ljmp
test
push
push
xor
and
pushf
and
push
adc
adc
cwtl
mov
adc
scas
stos
pop
add
mov
jb
dec
push
cmc
arpl
mov
daa
xor
movsb
ret
and
push
sbb
jmp
repz
xlat
jnp
in
mov
xor
lahf
rcll
cmp
ja
pop
mov
mov
mov
lods
sbb
mov
das
pushf
and
pop
dec
les
jns
cmp
inc
dec
pusha
fisubrs
push
ss
mov
mov
outsb
mov
insl
or
mov
push
mov
mov
push
mov
gs
or
dec
jnp
add
icebp
es
cmp
imul
call
mov
negb
loop
xchg
push
push
add
dec
fxch
das
mulb
rcl
push
jle
mov
aam
pop
dec
inc
test
mov
mov
mov
or
cli
mov
cltd
sub
cmp
fs
push
xor
mov
movsl
and
insb
loop
cli
orl
aad
sahf
les
cld
aam
mov
push
fwait
xchg
testl
adc
push
adc
stc
jb
mov
arpl
imul
adc
fld1
xor
push
test
outsb
fldln2
fdivs
xchg
aaa
add
cld
popl
xlat
adc
xchg
icebp
pop
xor
test
mov
cltd
xor
jne
push
ret
add
mov
mov
and
inc
mov
mov
dec
jbe
test
test
or
xchg
in
pop
outsb
jmp
gs
fs
or
test
mov
imul
aas
or
sbb
xor
stos
push
fwait
ljmp
push
cmpsb
int
es
sbb
cmc
mov
test
jbe
mov
or
xor
outsl
mov
testl
push
pop
xlat
sti
jp
xor
xor
mov
gs
mov
jnp
mov
dec
adc
fadd
adc
mov
mov
add
jbe
adc
jecxz
mov
neg
ficomps
jmp
xor
adc
cmp
les
xchg
and
sbb
flds
test
jle
mov
adc
aad
and
fistpl
fs
repnz
and
mov
rep
fsubs
jle
mov
xor
cmp
xor
push
dec
fnstsw
popf
loope
ja
add
mov
scas
hlt
or
mov
dec
mov
jno
lret
cwtl
scas
mov
rcrb
sbb
jl
loop
cmp
je
xlat
sub
ljmp
jbe
add
mov
sbb
fucom
jl
clc
jg
pop
push
mov
out
adc
add
jg
in
or
mov
dec
icebp
inc
int
imul
add
mov
imul
lar
cmp
mov
jl
mov
stc
fs
stc
int
and
ret
cmp
fisttpll
add
les
cmp
rcrl
push
aad
ret
jmp
in
and
arpl
jno
loopne
jmp
les
loopne
mov
inc
mov
sub
mov
insb
into
loop
popf
sbb
je
dec
cmpsl
or
mov
sub
dec
add
sbb
cmp
sahf
cmp
adc
loop
mov
push
stos
add
pop
rclb
loop
pop
or
fmuls
dec
mov
fistps
sub
pop
mov
pop
push
mov
mov
adc
xchg
xor
je
adc
jns
add
enter
lea
pop
add
inc
add
add
mov
sbb
inc
scas
pop
sub
sti
orb
push
fwait
mov
jo
jbe
je
xchg
movsb
xchg
repnz
mov
and
mov
and
in
and
scas
push
mov
movsb
icebp
push
cmpl
ret
in
out
inc
cmpsb
jnp
cmc
jno
inc
popf
push
lcall
fbld
movsb
mov
sbb
add
push
mov
xchg
stos
fwait
addr16
xchg
inc
lods
clc
xchg
sub
out
add
clc
and
mov
mov
sbb
cltd
push
inc
xchg
push
xbegin
mov
scas
xor
inc
pop
call
and
sbb
sub
cwtl
or
hlt
or
or
iret
iret
pushf
add
lret
lods
xchg
ret
mov
sahf
sub
ss
sahf
mull
stos
aam
sarl
inc
loop
sbb
add
cmp
out
jne
pop
aas
lret
lock
lea
push
ljmp
push
shrb
add
fisttps
inc
ja
leave
and
push
adc
sbbl
xchg
xchg
pop
cvtpi2ps
adc
out
lods
jecxz
arpl
hlt
test
out
pushf
or
lea
add
sub
fcoms
shll
insl
int3
sarl
orl
popa
out
sub
les
lock
jl
aad
and
ret
adc
mov
jl
inc
mov
je
test
test
jg
rolb
fwait
es
stos
mov
cld
gs
inc
outsl
mov
mov
rclb
jno
or
inc
je
fwait
sti
popf
mov
pop
out
add
pusha
or
and
sub
mov
and
lahf
mov
and
add
dec
jmp
pusha
aas
out
xor
cld
mov
mov
jmp
mov
mov
xlat
jno
pop
hlt
jbe
and
inc
push
mov
test
cmp
cmp
sub
call
mov
rcrb
jns
mov
fs
and
adc
pushf
notl
sbb
add
inc
sbb
es
adc
xor
lds
dec
nop
fdivrs
sub
out
shll
repz
shrl
ret
xor
inc
bound
mov
loop
sbb
xor
lock
shll
add
lret
dec
mov
mov
imul
stos
sbb
dec
and
mov
icebp
inc
mov
enter
mov
or
mull
decb
inc
sbb
pop
lret
popf
mov
sbb
test
adc
lds
sub
adc
sub
push
cmp
lret
add
jecxz
out
jecxz
sub
pop
xchg
jge
xchg
stc
jl
xor
sub
mov
stc
hlt
sbb
fcomp
mov
mov
push
sahf
mull
jbe
xchg
std
lret
cltd
enter
cwtl
fiadds
daa
cld
pushf
cmp
xor
push
out
mov
lcall
or
push
stos
test
movsl
in
sub
inc
inc
rorb
aas
sub
and
outsl
lret
mov
pop
ss
out
iret
dec
jns
cmpsl
hlt
in
int3
das
dec
cmp
mov
mov
sbb
outsl
mov
test
jns
sbb
mov
cmp
fiaddl
adc
ss
or
cmp
dec
je
pop
push
xor
fcoml
into
xor
pop
ficompl
jo
addl
ja
inc
setp
pop
xchg
push
in
shl
scas
mov
cmp
dec
pop
sub
dec
rcrb
sub
mov
pop
addr16
fisubrs
pop
in
ret
sub
enter
test
lea
lea
jecxz
lret
jae
and
xor
mov
lods
sbb
lea
repz
adc
or
mov
mov
aam
fmuls
push
jg
popa
or
dec
push
outsl
scas
ror
movsb
aad
idivl
incb
test
cli
fisubs
inc
and
cmp
cmc
sub
test
mov
and
arpl
insb
addr16
and
lret
jo
mov
pop
enter
fimuls
cmp
or
nop
pop
inc
add
or
pop
mov
mov
inc
popa
rorl
loopne
sub
mov
nop
push
in
jecxz
mov
adc
in
stos
daa
pusha
movsl
or
xchg
test
loope
mov
subb
ss
lea
jmp
cmc
adc
icebp
and
sub
adc
je
and
lock
xchg
jb
or
mov
sti
mov
xor
test
add
push
repz
and
pop
addr16
push
and
in
mov
stos
ficoml
push
mov
pop
ljmp
daa
scas
leave
xchg
jmp
dec
and
dec
push
scas
ja
ja
insl
cmp
mov
or
stc
adc
mov
aad
enter
pop
fadds
fisubrl
aad
adc
inc
lods
cmp
adc
shrl
xchg
bound
imul
lods
leave
loop
xchg
mov
xchg
aaa
dec
pop
outsl
fldl
sub
mov
pop
ljmp
push
stc
jp
or
insb
rclb
lods
popf
test
insl
jns
ret
mov
je
mov
or
mov
inc
jb
jecxz
in
ret
cmpsb
xchg
shlb
shlb
cmp
sbb
iret
jns
outsl
lahf
imul
mov
or
and
repz
lods
cmp
fisttpl
adc
adc
rorb
adc
aaa
fmul
test
nop
daa
pop
test
imul
mov
test
add
rorb
dec
sbb
popf
rcrb
mov
mov
mov
in
out
popa
clc
out
push
inc
dec
xchg
test
jae
push
and
add
mov
sbb
or
cmc
xchg
mov
push
repnz
mov
or
adc
mov
ds
push
enter
mov
push
fcomps
sbb
jl
ljmp
fs
mov
add
loopne
aas
icebp
sbb
leave
int
jne
insl
fisubl
add
imul
xchg
sbb
pop
movsl
repnz
popf
pop
inc
xor
adc
stc
fstl
mov
lods
aam
xchg
pop
jne
repnz
push
fsubrl
fistl
push
pop
xchg
mov
add
clc
jg
jle
pop
pop
ja
or
repnz
sbb
inc
rcrb
pop
xor
lock
fwait
insb
lret
sub
rclb
mov
outsl
stos
incb
ljmp
iret
mov
jp
in
adc
mov
iret
pop
jbe
jle
adc
lods
std
jge
xchg
add
jge
fsubrp
or
mov
sti
lods
jne
stos
fstpl
mov
mov
sub
iret
aas
fdivl
dec
and
jnp
loopne
lcall
gs
and
mov
xor
fnstcw
aad
push
scas
jns
scas
push
pop
or
xchg
xchg
bound
gs
stos
jecxz
mov
mov
add
rcrb
xchg
sbb
stos
or
or
mov
pop
pop
jbe
dec
xchg
push
fs
push
mov
push
lret
pushl
decb
and
adc
int3
fisubs
adc
adc
mov
sbb
add
dec
popl
add
mov
sub
insl
mov
mov
dec
pop
sub
xchg
call
sub
xchg
popa
jecxz
data16
ficoml
adc
jae
or
pop
repnz
rorl
in
hlt
into
sbb
cltd
or
nop
mov
stos
shrb
stos
jl
cmp
push
and
inc
jp
decb
xlat
jae
xor
jnp
adc
aaa
mov
loopne
ret
iret
cmp
aam
jecxz
push
test
and
popa
imul
lcall
ret
cmp
ficompl
in
fucomp
std
push
ret
cmp
jo
imul
inc
out
pop
arpl
sbb
jo
es
dec
dec
xchg
or
dec
jb
mov
jne
cmp
push
jns
push
push
dec
jnp
popa
jae
xor
stc
movsb
sub
in
leave
cltd
mov
jno
subb
stos
mov
repz
mov
fnstsw
imul
stos
sbb
out
out
or
push
out
xor
and
repz
int
lods
adc
std
lahf
aad
fdivr
mov
mov
mov
mov
push
das
jl
lods
test
mov
mov
lea
mov
hlt
les
cmpsl
scas
jge
repz
jle
jecxz
and
jno
movsb
ljmp
aad
inc
xor
push
sub
cmpsl
mov
sub
mov
xlat
jle
mov
inc
pusha
pop
xchg
icebp
jle
sub
push
jo
stos
js
and
jecxz
out
fldt
pop
lea
aas
psraw
mull
sbb
loop
inc
scas
xor
xor
movsl
lods
loopne
test
pushf
cli
rcrl
mov
out
ret
push
adc
gs
xor
repz
bnd
stc
ljmp
push
push
sbb
mov
stc
and
inc
pop
mov
ja
dec
nop
jmp
pop
movsb
subl
stos
cmp
fcmovbe
mov
mov
mov
fwait
cmp
xchg
pusha
and
jle
pop
lcall
mov
test
cwtl
sub
sbb
in
repnz
bswap
aam
dec
cmpsl
pop
push
cmp
ljmp
mov
mov
cmp
jnp
out
gs
sbb
add
push
jnp
jbe
and
adc
dec
xlat
inc
and
sub
inc
adc
leave
sub
es
fdivl
cmp
jnp
clc
and
loopne
out
jne
add
dec
int3
jmp
divl
lret
loop
cmp
cmp
imul
mov
mov
mov
fwait
jp
ds
icebp
daa
or
cltd
pop
lds
scas
test
dec
and
mov
flds
pushf
lods
mov
idivb
jne
movsb
pop
imul
aaa
inc
jnp
sub
ljmp
loope
or
inc
mov
and
mov
rol
push
addr16
mov
rorb
add
lods
mov
and
scas
and
insl
jmp
pop
jecxz
dec
jbe
lret
inc
dec
ds
in
sbbb
jne
mov
imul
or
arpl
cmpsl
or
insb
inc
xchg
icebp
pushf
rol
mov
mov
pop
xchg
pop
cmp
pop
movsb
dec
popa
pushf
icebp
mov
mov
int3
movsl
shll
fimull
fnstsw
in
std
popf
daa
xor
enter
sbb
xor
mov
das
les
leave
test
fst
insl
jecxz
pop
cmp
mov
pop
stc
jne
repnz
imulb
mov
xchg
sbb
hlt
sub
mov
dec
cwtl
or
movsl
adc
push
clc
pop
loopne
mov
jl
notl
xchg
push
lcall
fdivrs
out
inc
and
int
outsb
adc
add
cmp
inc
mov
mov
inc
mov
in
pushf
mov
adc
sub
aad
loop
adc
xchg
pop
loope
imull
pop
repnz
pop
xchg
stc
cmp
or
ficompl
adc
int
scas
cmpsl
pop
sbb
jmp
fisubs
filds
cwtd
lcall
or
fists
in
jp
fs
inc
or
add
pop
gs
jecxz
insb
test
frstor
cmp
lret
sti
loop
mov
mov
sarl
clc
in
dec
or
xor
sbb
mov
jp
stos
aam
pop
sub
adcl
xchg
mov
xchg
cwtl
fwait
push
cmp
leave
xchg
mov
sbb
or
jns
inc
ret
xor
sbb
mov
inc
push
rorl
cmp
jno
in
mov
imul
in
pop
mov
or
push
inc
dec
stos
inc
fs
aas
rorb
xchg
cmp
test
adc
pop
ret
je
imul
jns
ror
mov
roll
push
gs
dec
fmul
imul
popf
xor
je
sti
push
sbb
jb
insb
nop
movsb
adc
push
cmp
dec
and
fbstp
push
dec
shlb
and
xchg
test
sub
inc
imul
cmp
test
pop
leave
out
cmp
mov
cmp
or
data16
adc
pop
out
es
dec
scas
dec
sbb
cmp
rclb
inc
or
jnp
daa
push
mov
clc
sbb
lahf
push
arpl
fisttps
js
mov
xor
cmc
imul
in
sub
pop
pop
jo
andl
je
adc
rcrl
hlt
xor
ss
xor
clc
bound
jp
sbb
jnp
push
into
andl
fwait
pop
inc
pop
and
popa
sbb
pop
fidivrs
mov
arpl
mov
stc
mov
or
daa
fdivs
lret
gs
cmp
stos
nop
adc
add
jl
je
lds
xchg
fiaddl
fisubrl
andl
xchg
xchg
clc
movsl
inc
pop
inc
dec
and
push
or
stos
mov
and
jle
mov
aam
xchg
sub
inc
or
sbb
pop
mov
fmul
ja
lods
xchg
dec
push
lcall
aas
jmp
stc
lock
push
jo
inc
jne,pt
jle
cwtl
jo
fnstsw
ret
xchg
pop
ret
shr
mov
jg
mov
jbe
sub
inc
or
push
pop
fimuls
ret
mov
jno
jmp
imul
lods
cmp
outsl
adc
push
or
sub
xchg
adc
xlat
inc
test
loopne
js
repz
jns
pusha
lahf
shlb
in
mov
sbb
sbb
push
jecxz
data16
mov
or
push
ja
mov
xlat
jnp
adc
scas
shlb
jnp
jmp
sbb
test
andb
addr16
imul
xchg
sub
adc
jl
sbb
push
mov
testb
out
shlb
xor
jno
push
out
jns
add
arpl
inc
mov
mov
mov
mov
lods
scas
adc
and
sarb
inc
sbb
inc
testb
les
jge
into
sbb
lock
gs
and
lods
sub
mov
pop
inc
jge
fidivrs
repnz
shl
mov
lea
lret
outsb
mov
shl
dec
inc
xor
es
mov
mov
push
push
and
xor
xchg
dec
fdivs
pop
mov
cmp
sahf
jo
outsl
push
insb
imul
mov
movsb
push
inc
dec
pop
mul
xlat
mov
or
sarb
mov
lods
ret
enter
enter
xchg
stos
pop
fwait
cmp
cld
roll
and
int3
xchg
pop
jne
sbb
aad
adc
repz
inc
loope
icebp
loope
repz
mov
mov
adc
test
rcll
imul
sub
lcall
int
ss
arpl
sbbl
call
rcr
xchg
xor
adc
sub
pop
imul
lcall
dec
push
lahf
jge
xchg
test
xchg
inc
mov
jg
jae,pn
mov
shrl
cmp
mov
mov
dec
dec
gs
rol
pop
sub
sub
jbe
test
addb
cwtl
jl
add
or
mov
sbb
cmp
dec
sbb
jp
cmp
sbb
imul
aaa
out
sbb
jne
call
pop
push
mov
fisttpl
push
mov
dec
xor
scas
imul
sbbb
mov
pop
push
jns
sti
lcall
stos
adc
aam
popf
adc
in
mov
cmp
gs
rcl
rclb
lea
rcrl
jge
or
out
cld
sub
cmp
lods
and
xor
rorb
fildl
sub
lods
movsb
iret
adc
rol
sbb
xor
movsw
mov
pop
dec
mov
pop
pop
push
icebp
sarb
popa
lret
mov
mov
mov
mov
mov
pop
push
dec
or
adcl
rcrb
hlt
js
xor
jae
ja
ds
and
les
int3
jl
imul
je
cli
jo
aad
aad
lcall
xchg
out
inc
nop
xchg
push
dec
ss
cmpsl
in
out
pop
push
jae
dec
mov
ret
rcll
addb
cmpsb
inc
les
scas
push
jge
jo
ror
mov
add
ret
pop
sar
xchg
cmp
fs
xor
mov
mov
std
cmp
xchg
sti
mov
loope
aas
int
js
cmp
ja
push
je
or
cs
rorl
decl
mov
and
push
enter
outsb
push
push
shl
mov
aaa
and
and
or
or
mov
ret
jae
lret
call
fildll
popa
ljmp
lcall
lods
sub
test
addl
mov
aas
int
cltd
idivb
in
mov
push
stos
jg
cmpsb
gs
gs
or
stos
mov
loop
ret
pushf
dec
not
adc
notl
lahf
fxch
icebp
add
testb
fwait
push
push
adc
ret
add
pop
inc
sub
pop
mov
fidivrs
inc
xchg
in
leave
aaa
orb
inc
pop
or
iret
cwtl
mov
xor
mov
fwait
in
sti
mov
dec
and
xchg
fildll
aad
and
out
and
dec
and
dec
fildll
mov
sbb
and
jl
sub
jle
or
cmpsl
aad
add
cltd
sub
decb
and
pusha
mov
out
roll
push
mov
push
mov
xor
shlb
xchg
enter
rdmsr
dec
jae
rcrb
or
nop
add
stos
push
out
push
daa
nop
sbb
fdivrl
test
jge
scas
subb
rcrl
inc
mov
comiss
cltd
sub
shll
repz
sub
hlt
sbb
rcrb
cmpsb
pusha
fsub
lcall
push
and
insl
inc
cmp
push
test
sub
jge
shr
mov
xor
fisttpl
enter
and
mov
cmc
fsub
cs
dec
pop
bound
ret
imul
mov
sbb
loop
lcall
jmp
call
and
and
aam
notb
scas
ret
sub
push
sub
test
adc
stos
mov
sbb
mov
scas
js
je
push
lahf
cmp
jmp
iret
mov
inc
mov
data16
in
sub
fisubl
mov
cmp
mov
pop
jl
and
fmul
sub
sub
ret
xchg
fwait
add
enter
bound
cmp
call
sbb
mov
pop
xor
div
sub
lock
pop
ret
aad
and
movsl
dec
outsl
sbb
roll
test
repnz
or
jo
scas
sub
pop
and
push
mov
push
dec
subb
movsl
cmp
add
addr16
sub
xlat
mov
sbb
or
jno
push
mov
inc
push
adc
mov
fmull
push
fisubl
outsl
jg
xchg
dec
fstpt
push
out
dec
push
sahf
pop
mov
and
mov
jae
xchg
sbb
hlt
and
inc
dec
xor
mov
push
repnz
addb
cmpsl
xor
mov
fstl
mov
xchg
xchg
jne
ret
hlt
sbb
pop
pushf
fdivs
jns
lods
pop
divb
pop
sti
jno
cmp
jmp
bound
jecxz
mov
pushf
or
jle
or
repnz
scas
pop
adc
jbe
and
out
adc
push
sbbl
imul
vmread
mov
icebp
je
sub
xchg
xor
imul
jmp
rcl
dec
movsl
mov
xchg
loope
mov
test
push
repnz
lods
sub
and
fdivrs
mov
sbbl
pushl
mov
fdivrp
or
sub
sbb
rclb
lock
add
xor
lods
push
insb
pop
pushf
out
cltd
into
clc
insb
negb
aas
call
ljmp
add
sbbl
jbe
pusha
pushl
dec
ret
lods
mov
adc
fcompl
xchg
repnz
mov
je
fs
in
mov
shrl
movl
xchg
rorl
push
popf
hlt
lea
pop
std
cs
xchg
dec
adc
mov
leave
insl
ss
out
and
mov
enter
mov
push
ret
adc
inc
pop
push
aas
lods
in
xorl
clc
call
iret
je
jnp
repz
loopne
and
xchg
add
mov
dec
sbb
or
xor
xor
dec
xor
sbb
mov
cmpsl
inc
xchg
pop
or
xlat
test
sti
leave
arpl
in
sub
movsl
jge
ffreep
lcall
add
jae
add
mov
mov
cmp
bound
roll
cwtl
icebp
in
shll
cltd
scas
movsb
lods
sbb
lcall
sub
out
mov
cmp
jnp
outsb
pop
test
push
inc
xchg
and
rorl
dec
mov
cld
ljmp
xchg
fidivl
push
enter
in
cmpsb
adc
push
pop
inc
jne
ljmp
ja
pop
out
or
mov
mov
andl
push
xor
push
adc
enter
lret
lock
add
xchg
pop
stos
and
mov
mov
dec
lods
imull
fldt
jbe
sub
sub
movb
jg
jb
and
or
xchg
mov
xchg
xchg
enter
aaa
sub
jno
enter
jae
xor
cli
rcll
push
lret
jb
mov
mov
popf
fcmovnb
inc
test
jp
imul
xchg
lret
dec
dec
cmp
sbb
and
mov
or
imul
cmc
mov
unpckhps
jmp
and
xlat
jae
push
jmp
adc
repnz
in
sub
enter
mov
sub
ret
nop
push
jne
dec
xchg
sahf
jmp
jmp
jmp
mov
xchg
push
xchg
popf
push
dec
fldt
or
push
mov
ret
dec
cmp
inc
mov
arpl
mov
inc
subb
out
and
mov
and
xchg
loop
push
xchg
mov
lret
cmp
xchg
imul
clc
jnp
xor
je
cmpsb
mov
dec
adc
mov
adc
xor
sahf
imul
sbb
jl
aas
mov
mov
mov
insl
mov
jbe
icebp
pop
movsb
push
loop
mov
sub
xor
dec
pop
pop
rorl
fldenv
test
pop
mov
push
mov
or
sbbl
adc
subb
ret
sub
inc
inc
les
adc
pop
cmp
hlt
out
cmp
lea
js
int3
pop
pop
mov
xchg
and
aad
call
test
pop
imul
hlt
adc
pop
ret
clc
push
cmpsb
mov
out
jo
mov
mov
inc
stos
cwtl
mov
jl
fadd
mov
mov
and
scas
popa
sub
negb
std
push
push
dec
imul
std
xchg
test
cmp
ret
dec
mov
movsl
or
inc
adc
cwtl
cmp
jae
test
push
sbb
sbb
dec
leave
jbe
adc
jecxz
repz
or
out
add
mov
lret
push
inc
test
or
xor
rol
icebp
lods
mov
xchg
or
cmp
inc
pop
test
xchg
cwtl
cmpsl
hlt
repnz
and
xchg
sbbl
test
add
pop
xor
nop
push
push
int
stos
ljmp
daa
aam
add
shll
flds
cwtl
leave
rolb
fs
and
inc
mov
xchg
ret
cmp
inc
loope
add
push
sti
loopne
loope
dec
cmp
mov
daa
dec
int
imul
mov
in
sahf
out
mov
xchg
loop
push
pop
adc
and
dec
addr16
adc
xchg
pop
ret
rcr
cmp
sbb
jnp
popf
jg
inc
inc
push
or
int3
mov
push
iret
or
sbb
push
adc
inc
les
mov
inc
sar
arpl
jg
xor
std
add
cmc
imulb
mov
bound
xchg
ds
outsb
cmp
cmp
cmc
out
mov
mov
push
lcall
js
mov
pushl
inc
stos
mov
inc
mov
dec
enter
adc
fisubrs
pop
xchg
andl
mov
push
inc
add
ret
mov
setg
imulb
sub
test
out
jno
sahf
pop
repnz
add
mov
inc
sarl
pop
and
in
test
fistpl
mov
push
and
sbb
jns
ret
icebp
add
test
mov
and
and
or
ror
outsb
xor
pop
int3
sub
mov
ss
pop
add
jmp
int3
inc
rolb
and
stos
ljmp
sub
ficompl
lcall
inc
add
xor
push
test
mov
stos
sub
mov
jb
jnp
mov
cmp
mov
nop
das
push
shrb
pop
mov
movsb
addb
fiaddl
and
pusha
xor
push
sub
cmp
popf
mov
out
outsl
cmp
lcall
push
das
stc
mov
xchg
mov
repz
aad
inc
push
sub
es
pop
scas
mov
mov
dec
clc
mov
or
xchg
xor
je
jmp
adc
adc
xchg
jbe
fwait
xor
xchg
icebp
mov
or
cmp
add
adc
mov
pop
mov
notb
insl
cld
mov
jl
enter
loope
or
int
adc
xchg
in
out
or
lods
outsb
hlt
cmp
out
cmpsb
fsubr
cmpsb
lahf
xchg
push
jp
xor
jnp
xchg
or
rcr
enter
es
xor
movsb
pop
xor
or
inc
push
pop
pop
cld
jnp
aas
dec
cmpsl
sub
sbbb
mov
push
imul
outsl
mov
out
mov
jae
addl
aaa
lock
pop
ficomps
bound
mov
sbbl
xchg
mov
fidivrl
push
imul
inc
adc
pop
pushw
aas
fwait
jno
popf
std
ret
or
inc
and
pop
lcall
xor
mov
sub
jns
sti
std
lods
sub
rorb
push
xchg
pop
popa
scas
jle
subl
cltd
in
mov
call
outsl
adc
pop
test
lea
sub
adcb
outsl
popl
inc
inc
jno
icebp
jnp
fsin
ret
iret
push
gs
sti
dec
cmp
push
scas
add
fmulp
dec
or
jb
stc
jbe
addr16
lret
push
ret
inc
and
les
iret
test
pop
lcall
ja,pn
lea
push
popf
cmp
fcmovnb
adc
mov
sahf
jo
jbe
sbb
das
iret
pop
and
cmp
lds
ja
mov
jb
out
xchg
jb
xlat
aad
pop
xor
and
lret
add
inc
iret
cmpsl
test
push
add
pop
out
push
enter
leave
fisttpll
pop
fdivrl
testb
insl
enter
add
jg
fildl
and
mov
jo
xor
adc
jl
push
mov
inc
and
jb
stos
mov
iret
movsl
mov
xchg
adc
inc
push
sahf
int3
mov
sub
mov
xchg
sub
bound
lock
cmp
out
out
xchg
cmpsb
mov
adc
aam
stc
mov
popa
push
pop
les
ljmp
lock
and
lcall
cmpsl
pushf
and
mov
stos
add
xchg
push
in
and
mov
cmp
push
pop
in
scas
test
xorl
inc
sahf
and
out
fwait
mov
fdivs
xor
jl
pop
adc
aaa
frstor
fldl
jmp
mov
addr16
int
in
fstl
out
mov
fcomps
fdivl
mov
jge
ds
fxch
adc
setge
mov
push
leave
xorb
sbb
xor
call
adc
movsb
rep
or
jns
insb
lds
cmc
add
rcll
mov
cmpsl
mov
sub
adc
jg
add
data16
jg
pop
or
adc
push
fimull
mov
add
addl
push
mov
push
negb
imul
and
rorb
or
and
or
mov
flds
es
mov
mov
add
xor
shl
mov
inc
push
xor
stc
push
les
xor
jbe
push
cltd
hlt
sti
xchg
test
les
mov
add
xchg
add
insl
adc
aas
in
ds
lods
push
mull
outsl
dec
sub
mov
push
rcrl
mov
mov
cmpsb
repz
xchg
push
push
mov
aas
pop
fisubrs
jp
cmpsl
and
loope
das
adc
sub
mov
sbb
cltd
mov
cmp
fcmovnbe
adc
ret
mov
neg
inc
loope
leave
scas
xor
fdivrl
dec
cmp
add
sbb
inc
mull
test
insb
lcall
sub
push
ret
ret
ficomps
sti
pop
sub
jnp
cmp
lods
pop
sbb
adc
lret
aaa
adc
adc
sbb
stc
iret
and
lret
cmp
mov
negb
negb
das
mov
mov
subb
mov
mov
lahf
enter
add
data16
and
test
mov
roll
xchg
xor
xchg
push
or
shr
cmp
out
frstor
loopne
popf
push
xor
shr
inc
mov
test
jnp
mov
pop
repz
sbb
insl
mov
in
dec
iret
mov
sub
mov
and
adc
pop
minps
dec
add
mov
mov
or
mov
fisubrl
movsb
mov
sbb
cmc
sbb
insl
and
inc
data16
mov
sbb
lock
jge
inc
loopne
jg
outsb
es
push
hlt
sub
mov
in
jge
call
mov
sahf
out
xchg
sbb
mov
movsb
test
pop
fwait
adc
pop
mov
jecxz
xchg
push
add
mov
daa
xor
cmp
daa
shrb
add
xchg
jno
mov
xchg
adc
sub
xchg
fldenv
jno
mov
lods
cmp
in
xchg
es
push
add
daa
xchg
and
out
scas
out
in
mov
fwait
mov
jp
ss
js
sub
call
pop
lahf
data16
mov
sbb
cli
and
cmp
pop
mov
fiaddl
cli
add
lock
mov
negl
fisubs
xor
ljmp
xchg
lods
in
aad
ss
or
addr16
les
adc
orl
dec
lods
sbb
stc
iret
shll
mov
je
ret
push
dec
mov
fsubp
xchg
adc
punpckhdq
pop
cmp
mov
jo
pop
mov
enter
xchg
mov
lea
push
cmp
inc
pop
aad
js
lahf
scas
mov
stos
mov
iret
fwait
xchg
xor
mov
movsl
test
push
mov
outsl
cmp
pop
cld
cld
mov
cmp
push
js
lods
leave
push
pop
xchg
stc
movsb
xor
xor
mov
lea
lret
test
cld
mov
gs
xchg
push
scas
inc
fiaddl
xor
pop
mov
jle
cmp
fwait
adc
enter
sbb
pop
push
imul
pop
fdiv
inc
adc
sbbb
and
daa
mov
pop
cmpsl
es
inc
lea
in
xor
mov
iret
mov
cmp
rcll
fstpt
jle
push
and
adc
mov
xchg
mov
lods
ljmp
daa
inc
push
nop
sub
mov
push
loop
and
fdivr
cmpb
push
and
mov
jb
jp
push
jo
sar
fistps
repnz
xor
repnz
add
pop
add
cmpsl
mov
cs
int
stos
lcall
std
xor
push
lahf
mov
cmpsl
sub
xor
cld
loopne
add
cmpsb
and
lret
adc
fisttpll
mov
inc
xor
pop
xchg
inc
loopne
shl
fbld
sbb
cmpl
enter
mov
push
lds
jne
sti
popf
test
es
loopne
dec
test
insb
in
cmpsb
pop
cli
pop
mov
into
xor
popf
ror
and
and
or
divb
add
xlat
jmp
outsb
mov
mov
jp
push
cmpsl
lcall
pusha
gs
mov
sbb
add
sub
sub
xor
pop
mov
xchg
dec
push
rol
adc
inc
jmp
cmc
bound
jb
imul
out
imull
pop
pop
mov
sub
cld
or
jle
shlb
incl
cmp
fisubs
xchg
sbb
bound
ret
aaa
xchg
aas
js
mov
sub
lods
mov
ret
stos
xchg
loop
notl
cli
out
xor
clc
insl
mov
push
push
ss
or
outsb
cmp
push
fadd
and
mov
test
mov
mov
jg
push
mov
mov
and
xchg
and
mov
jge
pop
sbb
cmp
cmpsb
testb
mov
dec
add
mov
and
sbb
ficomps
dec
shr
cwtl
out
jp
lea
dec
pop
mov
addr16
jb
lock
cmpl
cwtl
dec
popf
inc
inc
insl
hlt
inc
sub
stc
data16
fwait
cmp
sub
movsl
mov
pushf
push
mov
into
jo
out
push
mov
popf
and
and
orb
out
popa
jae
lea
fldcw
les
in
mov
movsb
ja
sub
lret
jno
jns
mov
add
dec
aad
xor
jb
fnstsw
cmpl
out
stos
ffreep
aam
sahf
jo
add
ret
sbb
push
fcmovne
jl
stc
stos
mov
mov
xor
pop
add
leave
cmpsl
lock
cltd
in
dec
and
lahf
jns
mov
sub
aad
jle
and
mov
or
sub
ljmp
data16
imul
push
arpl
jnp
jbe
call
pop
outsb
outsb
lcall
ret
mov
repz
jl
add
mov
daa
jmp
mov
stos
pop
adc
nop
insl
jg
addr16
xchg
jle
jl
and
sar
cli
mov
xchg
push
xchg
loop
xor
push
sub
leave
sbbb
add
inc
imul
lods
xchg
hlt
cmp
push
xlat
cmp
pop
mov
adc
xchg
lret
inc
aam
rclb
cmpsb
mov
xchg
jns
in
leave
hlt
pop
jg
out
push
leave
ret
stos
inc
fbstp
adc
jne
insb
mov
adc
fadds
inc
das
jg
out
pop
mov
popa
and
cld
pop
xor
mov
jbe
push
sub
xchg
inc
adc
std
lods
or
addl
loopne
pusha
inc
xor
jg
int
ljmp
test
cli
loopne
repnz
sub
arpl
sub
pop
xorb
andb
les
dec
lods
aaa
mov
and
pop
push
cli
adc
imul
je
sbb
pop
lret
outsl
adc
and
repnz
into
xor
push
adc
flds
pop
xor
mov
int
adc
mov
mov
inc
lret
sarl
dec
inc
push
or
xchg
sub
dec
fldcw
outsl
mov
hlt
xor
rcl
jl
pop
into
aad
mov
mov
jp
int3
scas
inc
in
call
cmp
pop
mov
push
mov
test
stos
and
movsl
cmp
mov
mov
jo
or
leave
add
xchg
pop
or
in
pop
sbb
fwait
pusha
push
or
testl
js
lds
pusha
stc
and
add
enter
sarl
or
loop
pop
dec
into
sub
lods
or
mov
dec
call
sub
icebp
cmp
jl
xchg
add
sar
insb
or
mov
dec
mov
cmc
jo
jp
mov
stos
addr16
jle
add
xchg
outsb
push
inc
fidivl
cli
fwait
jo
sub
fnstsw
push
mov
shll
jae
sbb
push
addr16
ficoml
mov
movsb
mov
push
inc
xchg
dec
push
fisubrl
leave
mov
sub
aad
cmpsl
aas
xor
mov
sbb
shlb
aaa
pusha
ja
pop
or
pop
xchg
mov
in
call
movsb
daa
movsb
scas
push
into
cld
movsb
or
insb
mov
out
fldenv
add
add
imull
jnp
mov
pop
adc
add
fisubrl
ret
mulb
stos
or
jno
mov
stos
pop
jns
cli
xor
cltd
pusha
es
hlt
pop
out
xsha1
cmpsb
dec
xchg
mov
pop
jmp
push
arpl
dec
or
xor
outsb
lea
nop
add
nop
mov
xlat
stos
dec
stos
and
xor
ss
aaa
mov
adc
fldl
clc
and
jbe
scas
and
mov
je
stos
testb
pop
fisttps
jb
ficoml
jmp
inc
push
mov
push
fs
jg
arpl
adc
icebp
mov
cmc
sub
adc
out
cmp
xchg
jb
out
push
and
fcompl
cmp
cltd
ljmp
addr16
les
jo
pop
faddl
stc
rcll
jb
mov
fldenv
bound
mov
sbb
jge
lret
call
in
mov
or
std
xchg
sub
or
sbb
hlt
mov
sahf
daa
pop
arpl
xchg
mov
ljmp
repz
ja
and
scas
mov
cmp
push
outsl
aam
cmp
pop
adcl
mov
lret
jle
in
iret
mov
iret
js
xchg
aaa
cmc
pop
ss
mov
js
js
cwtl
push
cmp
mov
push
jne
out
mov
and
mov
shlb
gs
in
dec
adcb
repz
dec
repz
repnz
iret
xchg
mov
pop
push
mov
inc
xchg
fildll
mov
jmp
lock
fisttpl
sbb
adc
mov
pop
stc
dec
inc
xor
lds
xor
shl
jbe
mov
subl
shll
mov
fbld
xchg
shr
leave
sbb
es
mov
test
loopne
sbb
sub
jl
or
ja
int
mov
inc
das
xor
jl
out
into
sahf
push
gs
pop
divl
and
in
jge
cmp
aas
jae
lea
imul
mov
lret
sbbl
sub
cmp
ss
int
adc
pop
cmpsb
push
xchg
pop
movsl
xor
aam
dec
xchg
stos
push
and
sub
jge
gs
mov
cmc
jno
push
dec
stos
sahf
jg
inc
mov
movsb
push
sub
jae
test
jnp
daa
mov
push
aam
mov
push
ret
jmp
pop
jge
movb
fnstenv
test
xchg
ds
loope
in
hlt
rorb
mov
mov
push
repnz
mov
in
daa
loop
movsl
subb
mov
aad
fstpt
ret
decb
mov
mov
out
or
das
in
xor
add
xlat
mov
fs
dec
push
mov
sub
leave
sub
sbb
loopne
mull
data16
lahf
rcl
ss
scas
dec
cli
xlat
jo
pusha
mov
dec
ja
inc
cs
icebp
jle
imul
loopne
lods
sbb
adc
sbb
sbb
push
in
leave
std
fs
js
xor
and
xorl
jae
scas
aad
lcall
pop
sub
int
mov
loopne
ret
lret
cmp
adc
hlt
daa
push
jnp
sbb
into
in
bound
mov
jmp
jmp
add
sub
lods
fucompp
push
mov
sub
scas
add
mov
add
inc
or
popf
leave
ret
inc
inc
loopne
into
jae
test
push
decb
push
sbb
inc
aam
jbe
and
mov
push
sbb
test
xor
call
rcll
inc
repnz
jne
std
pop
jno
push
lods
sti
or
or
mov
sbbb
pop
aaa
out
test
mov
push
rcr
into
in
or
test
cmpsl
aad
shr
test
shrl
push
add
sub
mov
jne
mov
jnp
adc
lods
or
fmul
aaa
lahf
imul
sahf
andb
outsb
inc
xchg
mov
or
testl
rcrb
xor
bound
arpl
addr16
in
dec
cmp
pop
inc
jl
or
mov
xchg
push
inc
icebp
dec
xabort
bound
xchg
or
mov
cmpsl
xor
jne
lret
ud1
test
sbb
pop
xchg
mov
data16
mov
cwtl
pop
push
xor
fldcw
out
cmp
lret
rcrb
pop
pushf
and
or
gs
cmp
or
push
mov
je
jmp
mov
xor
dec
pop
test
mov
jl
repnz
int3
daa
pop
pop
push
sbbb
pushf
push
push
pushf
push
push
aas
lds
add
jae
aaa
or
shrl
jecxz
xor
into
push
ret
add
hlt
cmp
and
push
mov
repz
stos
inc
pop
pop
dec
dec
push
les
adc
dec
scas
xchg
nop
cltd
in
xchg
push
adc
xor
sub
mov
adc
inc
jecxz
sti
jp
xor
mov
lods
jbe
or
daa
xor
mov
pop
je
bound
pop
xor
out
push
in
xchg
cwtl
bound
or
aam
mov
sub
lock
adc
mov
cs
lods
stos
pop
shl
mov
ret
push
cli
inc
mov
sti
jbe
sub
inc
popf
cli
add
xchg
fisttps
aam
pop
push
jno
mov
subb
fldt
test
in
enter
xor
out
sti
sarb
fldt
adc
sub
call
mov
jo
mov
mov
addr16
mov
fdiv
les
imul
inc
cmp
fisubrl
or
pop
lret
push
cmpsb
call
cmp
hlt
jge
jg
shll
mov
ret
push
jne
cmp
mov
adc
mov
mov
ror
mov
jno
jmp
leave
xor
js
mov
popa
int
aad
test
sbbl
pop
or
leave
insb
jae
jmp
pop
out
sub
pusha
jne
test
adcb
test
mov
bound
stos
addl
movsl
pushf
pop
insl
xchg
sub
out
icebp
adc
push
hlt
push
and
mov
pushf
outsl
add
mov
mov
adc
mov
xchg
xchg
and
rorb
cmpsb
fsubs
or
ja
std
sar
sub
jns
fistpl
fcompl
cmp
icebp
stos
sbb
out
les
fisttpll
adc
pop
lods
lds
jmp
sub
xor
rorl
mov
adc
pop
loop
xchg
into
push
clc
shlb
xchg
or
fcoml
inc
add
cmp
mov
add
mov
sbb
cmpsb
stos
cmp
mov
addl
jbe
idivb
repz
cmp
cwtl
decb
cli
testl
xor
outsb
imul
fisubrl
shrb
fistps
scas
xor
and
mov
imul
inc
jo
cltd
cwtl
sub
stc
hlt
cmpsl
or
mov
mov
sbb
push
inc
lds
add
sub
adc
jnp
cmp
xchg
stos
fsubrl
pop
xor
sahf
push
mov
je
dec
fldpi
sbb
and
mov
or
or
push
scas
sti
inc
pop
shrl
mov
test
sbb
fwait
inc
inc
aam
mov
pop
lods
cmp
sub
jne
dec
popa
in
pcmpgtd
enter
fsubl
xchg
gs
push
dec
ljmp
cmp
xchg
ja
mov
xchg
insb
cmpsb
sbb
jmp
movsb
mov
or
mulb
repnz
adc
addr16
notb
inc
sti
lods
cltd
cmpl
sarb
int
mov
lods
xchg
rcrl
ficoms
sub
in
loopne
jns
or
xor
lahf
and
xchg
bsf
mov
je
adc
sbb
or
in
inc
mov
cmc
adc
lods
cmp
sub
add
loope
movsb
bound
mov
jne
jo
pop
lahf
pop
mov
push
cmp
aas
adc
aas
scas
std
jp
lcall
or
leave
sbb
and
adc
push
dec
lret
pop
sbb
adc
mov
mov
xchg
push
and
xchg
mov
stos
or
dec
out
mov
sbb
lods
pusha
mov
scas
jg
mov
xchg
incl
ljmp
mov
popf
xchg
mov
sbb
or
leave
rorb
arpl
icebp
out
jo
daa
cltd
pop
mov
adc
testb
jecxz
adc
inc
xchg
movsb
mov
mov
mov
sbb
xor
cmp
lock
inc
cmp
lods
insl
mov
fpatan
inc
cmp
arpl
or
hlt
jge
popl
lret
clc
sub
scas
jae
adc
scas
test
das
add
or
shll
ret
lret
adc
jbe
mov
or
test
int
xchg
jg
dec
mov
pushf
dec
cltd
lea
enter
or
lret
out
adc
call
jo
in
mov
loope
push
loope
ret
ficomps
movsl
jle
mov
out
jmp
or
xor
fwait
or
rolb
xor
push
and
mov
mov
ljmp
mov
inc
out
cmp
repz
sbb
fldcw
add
cli
lret
adc
inc
jns
add
clc
sbb
in
ss
xor
push
cmp
jbe
dec
ja
jp
mov
pop
mov
repz
lds
pop
mov
int
insl
es
xchg
jle
xchg
add
gs
inc
pushf
push
adc
ljmp
xchg
mov
dec
loope
loop
int
pop
dec
and
push
push
push
outsl
mov
pop
arpl
pop
ja
xor
leave
in
lock
cmp
fs
cwtl
sbb
push
xchg
or
lods
add
ret
fidivs
pop
movsb
aas
rcrb
gs
mov
add
push
push
test
imul
pop
aaa
jge
mov
inc
mov
aas
rolb
lods
adc
push
and
add
addr16
aaa
fdivrp
add
adc
js
push
push
dec
push
negb
fsincos
icebp
push
add
hlt
lds
xlat
fcom
push
xor
and
in
adc
pop
push
ljmp
mov
push
dec
mov
sub
cmp
dec
ror
push
test
or
mov
sub
mov
xor
mov
in
pushf
mov
pop
dec
mov
out
mov
out
push
jb
mov
out
enter
cltd
out
xchg
mov
cmp
cltd
popa
mov
jne
movsb
sarb
or
repnz
fldt
scas
inc
or
adc
add
mov
fsin
out
mov
sub
data16
ljmp
jnp
jp
mov
leave
adc
js
test
xchg
mov
scas
lcall
shr
popa
add
dec
mov
stc
push
imul
shlb
lods
je
arpl
xlat
lds
mov
jae
aad
sub
cmpsb
clc
ret
or
xor
out
lods
in
mov
inc
jns
cmp
push
popf
roll
shll
inc
mov
and
dec
jecxz
pop
movsl
lock
cmc
enter
arpl
ljmp
int3
out
ds
dec
and
imul
xchg
inc
sbb
sbb
test
rolb
out
pop
jns
adc
cmp
dec
pop
adc
aas
clc
pop
roll
xor
cltd
es
mov
jb
fbld
adc
inc
cmpl
dec
cwtl
pop
jae
xchg
fcomps
jo
das
xchg
mov
push
pusha
add
inc
scas
fbstp
js
aad
fnsave
lock
and
mov
in
andl
cmc
xchg
inc
xchg
test
scas
loope
cmp
push
popf
or
mov
stos
or
int3
pop
fiaddl
sub
sub
arpl
cmp
das
aad
jecxz
jns
xchg
dec
and
loopne
sub
mov
sub
lds
push
fsubp
dec
out
push
out
lock
test
in
push
inc
in
pusha
scas
fldcw
jle
cltd
cmp
rorl
adc
lcall
xor
out
cmp
push
daa
jmp
ret
call
mov
rorb
ljmp
jns
out
aam
in
sbb
push
xchg
sub
daa
mov
into
pop
es
lret
inc
mov
adc
imul
imul
and
jecxz
xor
push
cmpsl
dec
xlat
out
sub
xor
je
loopne
loope
adcl
or
dec
test
rclb
ja
or
stos
add
pop
mov
scas
bound
jmp
cltd
mov
iret
je
mov
and
enter
pop
call
iret
daa
inc
dec
scas
cmp
sub
das
xor
sbb
dec
ds
vpmadcsswd
xchg
das
repnz
ret
pushf
mov
mov
dec
std
adc
inc
fmuls
mov
mov
pop
xor
jp
in
shll
push
push
gs
pop
mov
cltd
or
loop
push
jns
push
cmp
je
or
test
push
jmp
sub
inc
mov
addr16
adc
outsl
cmp
cmc
xchg
xchg
sbb
enter
in
add
sub
aad
sub
mov
repnz
xor
rcrb
pusha
sbb
jmp
push
sub
in
pop
lcall
sub
push
or
fmuls
cwtl
inc
out
xlat
and
ret
data16
cmpsb
jmp
mov
hlt
mov
es
sbb
sti
jbe
loopne
mov
mov
scas
lret
test
jns
outsb
lcall
xor
lock
leave
jmp
test
movb
mov
pop
or
jl
add
js
pushf
shll
or
push
xchg
push
cmc
ret
cld
subl
test
push
mov
scas
sarl
ss
lret
scas
mov
push
popa
inc
sbb
xchg
sub
in
in
lea
leave
imul
jne
shr
dec
push
mov
pop
decb
stos
imul
sub
int3
mov
inc
pop
xchg
jl
test
jnp
sbb
push
add
mov
divb
movsl
inc
push
xor
xchg
adc
dec
sbb
in
mov
hlt
cli
add
lahf
aad
sti
push
inc
fistpl
cmp
jne
or
stos
test
ds
push
xchg
stos
jle
mov
lods
clc
mov
fwait
jne
mov
cmpb
sub
mov
xchg
dec
inc
sub
jecxz
je
jo
movsl
addr16
adc
movsb
xchg
aad
sbb
and
loopne
fisubrl
aad
mov
out
rcl
test
add
mov
movsl
jno
insb
lret
push
dec
cmp
push
stos
nopl
xchg
sahf
sub
xor
and
mov
fdivrl
clc
rcr
jmp
mov
in
test
arpl
lret
mov
cmp
ja
mov
jae
and
femms
enter
shlb
mov
adc
icebp
in
pop
jge
loop
nop
orb
xor
aas
adc
jns
xchg
loop
cmp
loopne
dec
test
mov
cmp
aaa
dec
mov
mov
xor
jae
or
sbb
jno
stc
sub
xor
jl
jp
sarb
pusha
leave
cmp
stc
mov
cmp
inc
lret
pushf
add
xchg
dec
sub
and
adc
fs
push
xorl
pop
pop
loopne
fsubrl
push
jbe
call
into
xchg
and
fisubrl
cpuid
ljmp
sub
adc
mov
iret
pop
daa
dec
popf
or
inc
popa
xchg
out
ret
fs
daa
jg
mov
jg
jle
xchg
sbb
test
mov
lods
test
pop
mov
pop
pusha
cltd
push
movsb
mov
cmp
xchg
sbb
gs
rolb
sahf
mov
sbb
add
and
xorl
sbb
jnp
into
sub
cmc
js
jp
inc
add
insl
leave
in
es
pop
mov
mov
sub
and
push
pusha
repnz
add
mov
pushf
xchg
pop
pop
cmpsl
mov
pop
incl
fwait
sub
jns
es
mov
nop
dec
jnp
push
cmp
push
push
jmp
push
pushf
popf
pop
ret
fisubrl
loop
rcr
mov
cmp
cs
sahf
mov
and
lahf
mov
mov
rclb
cs
cmp
xor
or
test
in
fistpl
int3
pushf
and
xchg
lret
adc
and
mov
sti
mov
push
jle
inc
std
mov
sbb
add
pop
movsl
pop
push
lds
mov
or
lock
in
pop
xchg
js
ljmp
xor
outsb
push
inc
jnp
ss
or
int
push
xchg
and
inc
inc
movhps
out
loop
xchg
fsubrp
scas
xlat
sahf
pop
sub
sbb
lods
push
add
pop
test
pop
sub
icebp
shlb
mov
movsb
popl
out
add
sti
push
xorb
mov
dec
test
or
insb
mov
bnd
pushf
mov
add
movsl
mov
clc
adc
push
testl
push
inc
aas
sbb
push
call
dec
test
xchg
and
xor
inc
jns
cwtl
mov
xchg
loop
cmpsl
mov
out
sbb
popa
add
lods
roll
daa
lahf
sbb
xchg
lds
in
mov
aam
lahf
mov
push
adc
dec
inc
ror
lret
es
in
mov
pop
aad
je
cmc
push
jle
push
or
and
xor
leave
inc
icebp
xor
push
loop
jl
push
outsb
ja
or
test
pop
xchg
fistps
push
test
insl
push
leave
and
xchg
mov
cli
enter
movsb
out
gs
addr16
fprem1
push
mov
push
cmpsb
insl
loope
lods
inc
adc
icebp
shlb
test
in
push
jne
std
adc
inc
addr16
mov
adc
inc
pop
fsubs
mov
out
and
mov
xor
flds
add
inc
pop
push
imul
dec
xchg
push
aad
and
hlt
mov
add
into
jb
leave
mov
dec
sbb
xchg
addr16
cmp
jo
js
xor
add
imulb
movsb
cmp
inc
movsl
hlt
ret
popf
stc
daa
sbb
xor
testb
push
mov
cmp
sbb
dec
loop
cs
pop
adc
mov
std
in
xor
outsb
dec
pop
leave
imul
lret
das
imul
jle
aad
and
xor
mov
cltd
inc
push
dec
push
xor
std
dec
stos
insb
cs
mov
test
mov
imul
loopne
lret
ret
jno
push
les
mov
pop
rclb
push
int3
cli
out
int
fistpll
call
nop
call
je
int3
push
sbb
in
sbb
insb
fists
push
insb
rcll
mov
jo
fadds
outsl
cmpsl
jl
jmp
jl
stos
fisttps
add
movsb
pop
mov
cs
mov
dec
daa
lds
stc
aad
movsl
rcr
push
lock
out
pop
pop
jge
nop
out
cmp
fcompl
jns
inc
in
out
negb
insl
jae
mov
fisttpll
mov
pop
out
mov
ljmp
rclb
jle
iret
xchg
in
jecxz
or
out
xchg
cmp
push
aaa
xchg
ds
cltd
mov
iret
xor
sub
in
xchg
call
xchg
lahf
dec
xchg
push
notb
xor
mov
jl
adc
push
xlat
jle
js
mov
inc
inc
jp
mov
fucom
push
push
gs
mov
lcall
mov
lds
xor
sub
sub
ja
std
inc
pop
sbb
cmp
stc
push
inc
les
cmp
pushf
sub
push
out
shrl
mov
push
orl
loopne
jns
sub
or
mov
sbb
enter
cli
dec
jae
jns
orb
fimuls
fincstp
push
fisubrl
inc
jne
inc
ss
jo
cmc
test
repz
test
sar
mov
adc
push
std
jge
dec
cmp
mov
movsb
dec
lods
add
sbbl
push
adc
or
mov
sbb
and
fcomp
jle
bound
pop
mov
in
loopne
outsl
mov
and
xchg
in
push
sti
lds
out
xchg
ljmp
cli
sbb
out
xchg
mov
outsb
clc
pop
test
mov
inc
fwait
sub
int3
xchg
mov
and
sub
not
cld
imul
das
outsb
mov
mov
lock
add
pushf
mov
in
xor
xchg
ret
lcall
rolb
lds
out
push
inc
repnz
sub
xorl
push
xchg
xchg
push
cmp
xchg
test
loopne
xlat
cmpsb
add
lock
xorl
cmp
inc
lods
adc
std
lcall
test
test
scas
fcomps
iret
inc
out
push
bnd
mov
roll
cmc
scas
arpl
in
mov
hlt
sub
inc
fimuls
adc
fnstcw
leave
movsb
and
scas
fidivrs
pop
fwait
xchg
cmp
mov
xchg
xchg
aas
and
fstpt
mov
xchg
or
addr16
pop
addl
push
adc
push
mov
jns
mov
pop
jne
push
je
cmp
and
push
sti
imul
xor
add
pop
push
les
ret
mov
loop
std
das
ret
arpl
mov
add
mov
inc
pop
adc
cmc
fistpl
out
cmp
sbb
shrb
imulb
ljmp
inc
xor
imull
cltd
cmp
lret
imull
cmp
push
imul
pop
out
xor
push
cmp
lds
aas
shll
cmc
push
jno
sub
idivl
push
cwtl
cmpsl
xchg
pusha
xchg
sbb
push
cmp
or
sub
data16
cs
shll
fbld
mov
cs
xor
mov
mov
call
adc
dec
into
cmp
lds
addb
push
or
cwtl
rorb
sbb
sar
mov
pushf
push
mov
pop
jo
xor
mov
push
into
inc
or
lds
mov
enter
xchg
inc
dec
fsubrl
call
push
mov
push
mov
mov
add
popl
sub
pop
xchg
mov
pop
cmp
ljmp
popf
cmpl
enter
inc
pop
and
push
fwait
mov
xchg
lock
inc
loopne
pop
test
cmpsb
cld
out
daa
rcl
mov
mov
xor
scas
loop
mov
and
imul
sahf
lcall
xchg
mov
int
mov
popf
test
cmc
repz
mov
cmp
jae
sub
add
xchg
adc
fwait
dec
sarl
aaa
in
int
ja
pop
cmp
push
fldt
jne
add
rorb
hlt
add
xchg
mov
pop
pop
mov
leave
dec
inc
mov
push
inc
sbb
andl
into
mov
mov
or
idiv
outsb
push
repnz
lods
pop
bound
mov
cmc
cwtl
ds
dec
mov
jo
adc
push
and
mov
jb
push
mov
jno
push
orb
mov
bswap
jns
std
movsb
and
xchg
scas
insl
inc
das
fwait
bound
test
pop
inc
cld
je
and
ss
test
jo
adc
or
ret
bound
clc
cmp
lahf
sub
mov
add
lods
cmc
push
xchg
ljmp
mov
je
fisttpll
dec
jle
push
fidivrs
inc
lahf
imulb
push
inc
or
push
or
sbb
mov
jge
dec
cmp
in
xor
jae
scas
and
push
sahf
jae
dec
pop
js
mov
push
cmp
cmpsb
push
int3
fsubrs
test
push
movsl
cmpsl
sub
xor
add
sbb
repnz
jae
adcb
mov
fdivs
shl
xchg
movsb
xchg
dec
repnz
inc
out
fstpl
roll
fldl
sub
pop
sub
jae
in
xor
cmp
fs
sbbb
pop
inc
mov
or
rcrl
push
xlat
lds
push
sahf
mov
mov
or
push
xlat
fnsave
loope
es
jb
je
neg
add
insl
in
sbb
and
les
push
inc
das
mov
pop
dec
cmpsl
fildll
xlat
push
lods
call
sub
pop
jmp
ret
push
mov
jno
outsl
sub
mov
add
daa
mov
fucomp
mov
jae
dec
nop
xlat
adcb
mov
sbb
xor
push
out
dec
sub
jle
push
popf
xlat
push
nop
call
fistps
out
jecxz
pushl
jae
aad
or
or
jl
adc
jnp
dec
xchg
pusha
dec
test
daa
pushf
clc
dec
cmpl
dec
repnz
lea
and
mov
dec
adc
daa
xchg
subl
in
cmp
stc
je
push
ss
and
movsl
and
negl
loopne
pop
lds
inc
push
mov
jle
fmul
ja
frstor
dec
arpl
cmp
gs
push
popl
lret
mov
lea
sbb
inc
pop
jecxz
or
add
enter
lds
ds
ljmp
fwait
pop
add
inc
add
push
jp
dec
jo
mov
sub
rorb
pop
adc
enter
lods
test
mov
mov
inc
add
jne
imul
pop
mov
or
imul
dec
daa
loop
std
mov
nop
jl
test
add
pop
outsl
xor
sub
mov
movsb
adc
push
jle
cli
xchg
divb
adc
daa
fwait
cwtl
mov
stc
pop
push
push
dec
mulps
inc
xchg
lods
adc
jp
fnstenv
push
cwtl
sbb
dec
mov
push
or
cmpsb
nop
into
mov
jg
sbb
es
cs
sub
mov
insb
nop
icebp
into
lret
arpl
pop
xor
roll
xchg
test
pop
test
dec
scas
xchg
loopne
dec
adc
pop
push
cmpsb
mov
add
sbb
mov
and
jmp
not
or
mov
pop
and
inc
jg
in
cltd
cmpsb
in
repz
cwtl
push
jnp
pushf
sbb
out
cmp
fmuls
repz
lea
push
je
es
xor
push
or
push
iret
sti
add
cmp
cmp
pop
adc
sbb
push
adc
mov
or
clc
movsb
test
popa
pop
xor
or
bound
push
mov
mov
mov
and
lock
dec
jbe
jg
imul
jl
mov
rol
lret
fwait
xor
mov
in
sbb
inc
in
sub
dec
fs
in
test
mov
push
sbb
push
lock
test
icebp
mov
insb
push
mov
lock
pop
jo
pop
or
leave
loope
inc
mov
lds
std
shll
lods
jle
add
imul
adc
add
aaa
cmp
mov
adc
and
pextrw
jle
adc
sbbb
mov
es
xor
aas
jo
call
iret
imul
adc
aas
xchg
xlat
xchg
adc
mov
sbb
insl
add
cwtl
xchg
in
add
adc
ret
inc
int
pop
add
lret
les
ret
add
push
mov
push
outsl
add
cmp
jae
xchg
add
lods
adc
jl
or
leave
in
rcr
rcl
add
inc
jno
sbbb
mov
cwtl
cmpsl
sub
insb
jno
dec
mov
sbb
mov
hlt
mov
adc
push
ret
inc
and
aad
lock
sbb
xchg
pusha
cmp
mov
lret
lock
nop
pop
aaa
pop
push
or
or
dec
call
xchg
xchg
test
std
jle
and
adc
mov
mov
and
gs
lock
add
adc
xchg
pop
cmp
jne
ret
stos
js
xor
and
mov
test
pushf
sbb
fstpl
jo
jmp
mov
push
inc
xor
les
int
push
test
inc
in
lret
clc
dec
push
into
cmp
inc
jge
iret
cmpsb
fs
call
cli
les
inc
cwtl
pushf
popa
jo
popa
cmpb
pop
imul
xchg
inc
jmp
xchg
add
or
and
fidivrs
cmp
dec
push
cmp
mov
es
stos
xor
lea
add
dec
faddl
jl
js
lret
test
pop
cmp
push
cld
inc
insb
push
mov
mov
jbe
ucomiss
cmp
pop
sub
das
dec
mov
push
lcall
ja
push
mov
mov
scas
stos
into
add
ret
popf
test
xchg
mov
outsl
imul
sbb
xor
and
fnclex
sub
push
outsl
pop
xor
setne
imul
mov
les
pushf
jno
cmp
inc
pop
dec
cmc
mov
jmp
or
out
repnz
aam
dec
rsqrtps
push
xor
aad
mov
add
std
push
aam
push
fistpll
mov
push
int
xor
daa
push
test
fcoml
jns
push
in
jno
sahf
cmp
and
mul
mov
out
inc
dec
leave
dec
mov
sbb
int
fadd
movsl
pusha
fsubrs
lods
fcmovnu
mov
and
cli
in
push
mov
out
in
xlat
bound
pop
call
push
cmp
lret
mov
jle
or
push
in
dec
sahf
std
xchg
sbb
mov
inc
out
scas
jp
sbb
xor
xor
out
arpl
cmp
mov
pop
cmpsl
jg
hlt
imul
xchg
repz
mov
clc
xchg
pushf
pop
and
add
pop
pop
jo
dec
bound
ret
and
push
mov
mov
addr16
testb
fwait
mov
aam
les
dec
pop
push
mov
xchg
jp
insb
les
xor
push
in
in
push
mov
cmpsl
jp
pop
subl
jp
push
add
inc
lahf
imul
hlt
scas
jge
leave
imul
pop
xchg
pop
mov
jge
dec
jnp
push
subl
lds
pop
push
lods
xchg
shlb
je
push
push
push
mov
add
cs
mov
xor
aam
fcmovb
test
ja
es
das
mov
test
fists
fiaddl
gs
sahf
mov
aas
inc
xchg
inc
bound
imulb
push
fimuls
scas
test
cli
add
imul
jb
push
and
mov
push
int3
and
add
ret
xchg
es
dec
pop
or
stc
cmp
mov
mov
sbb
loope
or
rol
cwtl
test
mov
ss
mov
sti
je
inc
inc
paddusb
bound
adc
xchg
cmc
insl
jp
xor
sub
xchg
in
sbb
ficoml
xor
mov
or
pushl
add
xlat
stos
out
addb
cmp
jge
je
out
out
loopne
jg
mov
push
les
xchg
pop
inc
jle
inc
push
dec
lock
jbe
xchg
mov
jbe
aas
push
xchg
inc
push
repnz
mov
mov
lret
outsl
sti
xchg
jl
test
mov
sbb
xor
push
fildl
cmpsl
std
and
aas
addr16
insl
push
addl
out
das
dec
rcll
mov
out
push
add
inc
data16
negb
les
aad
and
data16
repnz
jne
out
mov
xchg
ljmp
dec
das
and
or
sbb
ds
inc
pop
xor
mov
jl
adc
in
test
mov
imul
mov
jne
fnsave
stc
daa
call
call
sar
jmp
outsb
inc
jge
outsb
push
leave
call
pop
pop
out
xor
jl
rclb
dec
in
jns
pushf
dec
sub
dec
jp
lea
sbb
call
push
fstpt
sub
mov
inc
mov
clc
adc
cld
jp
insl
pop
jg
loope
lock
ss
push
ret
cwtl
dec
dec
jmp
dec
or
mov
mov
or
add
sub
and
mov
andb
repnz
sahf
or
and
mov
stc
xor
mov
sub
xor
sbb
push
mov
in
ffree
inc
loopne
jns
std
and
aas
jl
subb
or
lods
lahf
out
adc
sub
into
and
in
pop
out
clc
jge
rcrl
aad
dec
ds
inc
xlat
mov
call
in
jo
iret
stc
xchg
mov
sub
mov
inc
dec
push
jecxz
in
iret
adc
imul
into
add
xor
rcr
mov
sti
add
inc
lret
inc
test
pop
repz
push
pop
dec
icebp
fisubl
sbb
xor
or
mov
jo
idiv
sbb
jp
pushf
mov
push
movsbl
add
jecxz
jmp
mov
push
cmpsl
push
lods
cltd
sbbb
xor
sbb
fdivs
lret
xchg
cmc
and
jne
fildll
pop
fstps
xor
faddl
sub
outsb
rcrb
outsl
jecxz
xchg
enter
xchg
addr16
add
jbe
mov
push
mov
fwait
xor
xchg
sub
shll
sub
daa
out
cmp
mov
adc
in
dec
or
in
in
cmpsl
out
adc
clc
stos
jl,pn
in
mov
out
dec
insb
enter
mov
sbb
and
test
in
inc
sbb
iret
sub
sbbw
ds
dec
fwait
psrld
int
iret
mov
jns
insl
stc
bnd
int
and
repz
xor
or
cmpsl
fwait
sbb
loopne
or
mov
and
std
push
aas
xor
in
mov
enter
movsb
fbstp
pop
add
push
popf
pusha
into
and
lahf
jg
sahf
jbe
inc
shlb
fs
cmpsl
jle
mov
std
bnd
dec
cmp
fs
mov
cmp
loop
ficomps
std
pop
ja
or
int3
cmp
sbb
pop
fdivl
movntps
loope
pop
mov
xchg
call
bnd
xchg
xlat
add
mov
xchg
ret
fldl
jecxz
jno
dec
sti
std
les
mov
xor
jecxz
fsubrl
mov
js
mov
and
repz
xchg
mov
add
cmp
out
in
stc
xchg
mov
cmp
mov
inc
outsl
lods
mov
sbb
cli
dec
add
sbb
dec
orb
jb
mov
popf
imulb
mov
pop
jl
fiaddl
out
push
iret
xor
push
xorb
jp
push
dec
adc
pop
and
pop
or
in
push
sarb
xchg
pop
in
xchg
sbb
call
shr
inc
push
pusha
aam
jae
mov
cmp
push
push
and
push
int3
dec
xlat
femms
jg
mov
xor
dec
mov
xchg
cmp
add
movsl
popf
or
mov
push
mov
pop
scas
repz
fwait
in
mov
mov
stos
sbb
test
insl
cmp
in
dec
dec
mov
aaa
divb
push
adc
jp
fdivrs
lods
mov
jp
xor
xchg
hlt
lret
std
adc
pop
pop
mov
aaa
or
sbb
adc
cmpsl
imul
rorl
and
inc
jne
and
lahf
scas
imul
or
jo
ret
xor
rcrl
shll
mov
xorl
sub
inc
fcmovnb
movsl
and
sub
xchg
jecxz
pushf
xchg
or
loopne
mov
jmp
inc
add
stc
into
push
int
xchg
pusha
cmc
insb
pop
lcall
xchg
leave
sbb
cwtl
sar
aaa
mov
dec
mov
stc
pop
pop
enter
stos
cmpsb
jp
xchg
and
mov
lret
sbbb
and
jo
lea
sbb
das
push
mov
xor
add
ss
mov
mov
mov
add
imul
test
sub
mov
jmp
ljmp
mov
mov
jg
xor
aam
mov
adc
adc
pop
and
xchg
or
mov
mov
mov
int3
push
enter
ss
dec
dec
int3
ror
pop
int
ficompl
rclb
pusha
daa
bound
aas
mov
cmp
cmp
fbld
sbb
jno
push
add
mov
test
jbe
sub
bnd
insl
inc
mov
cmp
testl
clc
out
gs
adc
fists
xchg
ds
pop
xlat
ret
jns
mov
and
repnz
and
sub
jle
aad
repz
jae
stc
std
mov
ret
inc
cmc
subb
mov
or
insl
mov
jns
mov
xor
push
ja
or
and
test
sbb
clc
imul
mov
inc
add
nop
mov
mov
lea
sar
sub
daa
stc
gs
mov
clc
scas
sub
arpl
std
jle
sub
and
stos
lret
dec
pop
pop
pop
jl
ja
jge
pop
sbb
jp
push
lret
push
into
add
cli
xchg
stc
in
cs
sarl
sbbb
jnp
arpl
cs
dec
xchg
sub
cmp
push
and
jne
xchg
lock
cli
and
je
pusha
dec
shll
add
jne
add
xchg
fmuls
fcmovbe
cmp
xchg
stos
mov
inc
int
inc
pop
jbe
nop
adc
or
addr16
fdivrs
mov
inc
test
mov
in
jne
add
xchg
adc
mov
xchg
cmp
push
fs
mov
xchg
mov
cmp
loopne
pop
pop
xchg
aaa
mov
mov
sarb
dec
cmp
push
fstpt
sarb
xchg
std
jbe
xor
add
lret
and
lods
mov
in
or
push
cmp
popa
mov
enter
cmc
into
es
jno
xchg
push
pop
adc
insb
sub
adc
lea
xor
cmpsb
cmp
aaa
push
inc
cmc
dec
jns
aaa
cmc
xchg
in
dec
cmp
push
loop
ret
jae
pop
das
jbe
mov
insb
rorb
pusha
cbtw
jmp
mov
sahf
xchg
jg
iret
sbb
jp
andl
add
pop
leave
xlat
mov
dec
sbb
cmpsl
mov
shl
cmpsl
xchg
sbb
jns
fisttpl
mov
sub
out
jbe
cmp
data16
sar
fadd
dec
xor
shr
mov
in
push
sbb
aaa
sbb
xchg
std
push
pop
aaa
xor
cmp
pushf
inc
inc
cmp
and
adc
push
xlat
mov
out
insb
insb
cmp
aam
push
pop
push
enter
pushf
xorl
inc
mov
xchg
pop
mov
sub
xor
imul
stos
jbe
sbb
mov
sarb
mov
mov
mov
lret
cmp
repnz
xor
or
jae
pop
inc
and
mov
xchg
push
mov
cli
push
inc
jns
in
addl
leave
xlat
hlt
test
mov
push
sub
sbb
aam
ret
sub
mov
cmpsb
mov
or
notl
sub
mov
jnp
push
jb
sub
jl
dec
jg
add
mov
out
jl
aaa
cmp
scas
cmp
gs
rol
rorl
xor
jle
or
inc
push
inc
ficoms
jns
cld
inc
sub
sub
rorb
repnz
xrelease
mov
mov
dec
cmc
mov
fisubl
inc
call
popf
xchg
pushf
popa
or
enter
jae
jge
loop
cmc
inc
sbb
dec
xchg
or
loopne
sbb
lret
inc
inc
jle
sar
pushf
mov
popa
pop
jle
jns
rclb
sbb
sub
push
ss
pop
and
xor
dec
and
jns
stc
ljmp
xchg
imul
jno
inc
cmp
imul
mov
icebp
or
clc
add
mov
mov
sbb
cmpb
or
push
add
hlt
xor
cmp
dec
in
in
jmp
outsl
mov
fistpll
cltd
inc
call
test
mov
jne
rorb
add
rorb
test
mov
or
aaa
jae
cs
and
scas
dec
push
jge
bound
push
outsb
dec
xor
out
push
mov
push
adc
ds
pop
lea
dec
and
jae
add
ret
dec
inc
mov
js
movsl
stc
push
cs
cmc
sub
je
jnp
cs
cltd
je
divl
sbb
pusha
push
or
xchg
rcl
ljmp
mov
dec
add
fwait
gs
xlat
addl
fists
rclb
sar
jmp
imul
push
out
mov
cmc
add
adc
mov
pop
les
jg
or
dec
mov
cmp
sti
push
addl
dec
jle
adc
repz
mov
popa
cltd
adc
mov
in
stos
imul
sbb
push
dec
icebp
lods
mov
add
push
lea
loop
or
aad
clc
pop
mov
sub
pop
or
cwtl
mov
lcall
icebp
shll
imulb
out
call
hlt
gs
stos
sub
mov
leave
cmpsb
ds
gs
aaa
add
sbb
cmpsb
cwtl
push
sub
out
lahf
call
ret
pop
scas
add
ds
pop
loop
mov
xor
lret
or
sbb
mov
dec
xor
ljmp
aam
adc
adc
or
loope
mov
mov
push
jmp
fsubl
dec
shl
lock
enter
cmp
cmp
mov
inc
add
dec
aam
add
dec
sub
sub
mov
out
shl
insl
xor
addl
xchg
lea
sbb
adc
cmp
push
cmpsl
aas
pop
iret
sub
xchg
lret
push
and
pop
loopne
cmp
mov
sbb
pop
adc
jo
negl
xchg
lea
pop
push
in
mov
xor
mov
cs
scas
adc
add
cmp
jne
adc
push
mov
stos
out
inc
nop
mov
je
cmpsl
dec
lcall
jnp
fsubrl
imul
pop
stc
jo
lcall
popa
aas
and
add
xor
mov
cs
sbb
cmp
xor
sbb
sahf
in
data16
cmp
shrb
adc
mov
arpl
dec
push
inc
jmp
add
arpl
mov
test
mov
incb
sub
out
dec
fxch
cmpsl
xor
xchg
sub
rcr
mov
call
mov
pop
cmp
in
mov
or
aam
and
insl
fwait
stos
xor
dec
cmpsl
adc
addb
and
out
hlt
data16
mov
jno
lret
xchg
std
rcll
cld
fisttps
jno
mov
sbb
mov
jg
inc
cmp
ret
movb
test
je
xchg
sub
jnp
shll
sbb
adc
xchg
bts
mov
js
mov
std
lds
inc
loop
or
cmpsb
mov
movsl
push
add
pop
sub
outsl
jmp
or
jne
hlt
xchg
mov
flds
pop
cmpsl
shl
jns
iret
out
repnz
dec
nop
xchg
add
mov
sbb
cwtl
add
and
jmp
inc
decb
negl
jp
adc
dec
xchg
adc
push
xchg
scas
movsb
lods
call
or
push
or
xchg
in
sarb
mov
mov
movsl
test
pop
out
das
adc
cmp
push
into
push
xorb
mov
mov
sbb
push
dec
and
xchg
cli
ret
push
je
sahf
jmp
data16
cld
sbb
cmc
sbb
cmp
rcrb
adc
xor
loope
je
cmc
mov
jae
pop
test
flds
out
popa
leave
sbb
mov
mov
lcall
inc
cmp
add
xlat
push
xchg
ja
mov
cmp
ret
cli
xchg
gs
nop
jp
das
arpl
out
cmp
das
xor
or
push
inc
repz
push
in
dec
mov
sub
repz
pop
addr16
mov
icebp
cmpsb
mov
add
adc
gs
fstl
int
pop
shll
dec
popa
or
jne,pn
nop
or
mov
cmpsb
push
mov
leave
int3
sbb
mov
sahf
dec
xchg
ja
pop
sub
mov
jne
imul
sti
dec
js
dec
dec
inc
xlat
xor
pop
and
xchg
fiaddl
mov
mov
pop
or
fidivs
test
or
je,pn
les
dec
or
adc
popa
mov
xor
pusha
sbb
jb
mov
pop
adc
adc
out
fmuls
add
popa
add
fsubl
data16
dec
push
rcl
xlat
test
jge
in
jbe
ficomps
push
dec
std
imul
out
sbb
insb
repz
dec
sbb
sbb
stc
and
movsl
xor
js
cmp
gs
fdivrp
es
mov
xchg
pop
loop
jle
sbb
je
inc
divb
adc
fdivr
cmp
mov
test
movsl
cs
arpl
aam
pop
or
out
leave
mov
mov
pushf
fsubrl
negb
jnp
outsb
sub
dec
jnp
or
push
mov
stos
pop
icebp
loop
sbb
or
xor
mov
lock
mov
lock
and
and
push
dec
cmpb
inc
cmpl
xchg
cld
sbb
pop
aam
sbb
jb
add
sar
mov
push
ret
ljmp
ss
dec
in
adc
sarl
notb
icebp
mov
popa
loop
jmp
and
mov
lods
jmp
das
mov
push
cmp
xlat
mov
in
negl
xchg
pop
scas
ds
add
cmp
stos
imul
jo
adc
std
mov
sbbl
or
das
inc
adc
das
int
int3
lea
sub
mov
ja
add
popa
dec
sbb
lret
mov
dec
add
scas
out
stos
jno
test
add
push
cs
fisubrs
ret
cmp
in
or
and
jge
idivl
out
test
or
fdivrs
shll
and
mov
cmp
or
inc
cmpl
push
icebp
mov
sub
sbb
outsl
push
push
mov
inc
pop
mov
cld
pop
cmpb
sub
mov
xchg
jle
cmp
mov
js
outsb
jp
into
cmp
push
cmp
in
push
jne
add
adc
movsb
sbbb
adc
aad
sahf
loope
leave
cmpsl
jo
jno
jo
dec
add
cmp
rorl
cmc
adc
cmp
lock
fdivs
jmp
jg
pop
je
adc
icebp
stos
scas
lret
sbb
jno
sbb
lret
dec
adc
adc
jl
in
cwtl
je
lods
pop
decl
rorb
gs
fisubl
jne
xchg
push
in
inc
out
icebp
outsb
jmp
les
insl
and
lcall
cltd
int
imul
jnp
inc
in
and
movsb
sbb
js
add
cmp
push
lods
sub
xchg
loope
xor
test
mov
push
lock
clc
jp
push
mov
or
mov
lcall
repnz
ret
das
pop
into
cmp
adc
cmpsl
push
sub
push
test
add
xorb
cmpsb
mov
sbb
cmp
sub
inc
leave
sbb
pop
daa
adc
sbb
addl
push
notb
mov
ret
dec
mov
jns
mov
push
iret
jbe
addr16
into
sti
int
daa
mov
jae
mov
push
pop
into
inc
dec
aad
pop
rcl
or
mov
dec
push
enter
scas
jnp
notl
lods
adc
test
loope
jmp
mov
loopne
jb
loope
cltd
shr
dec
sub
dec
pushf
sti
xchg
insl
out
dec
movsl
dec
leave
js
mov
sbb
or
scas
sahf
xchg
xchg
and
lcall
xchg
ja
inc
stos
out
movsb
mov
sub
lds
push
pop
out
sbb
repz
xchg
mov
sahf
ret
dec
pop
push
inc
adc
inc
jge
sbb
sahf
repnz
mov
movsb
xchg
rorb
xor
adc
sbb
mov
popf
enter
out
xor
loop
je
xchg
pop
push
ret
pop
pop
add
inc
call
repnz
mov
ds
ja
pop
repz
or
mov
mov
jge
mov
cld
xchg
fistpl
ja
or
add
cmpsl
or
inc
push
xchg
inc
xchg
add
inc
pusha
arpl
pop
mov
pop
jle
insl
jl
int3
jmp
mov
data16
or
xorl
in
out
scas
sbb
xchg
ret
push
pop
sub
dec
sub
jecxz
repnz
fs
adc
and
sub
je
lret
stos
mov
jmp
xor
pop
ja
pop
mov
jbe
clc
lock
in
rorl
jo
jecxz
push
lods
neg
mov
or
mov
and
call
arpl
imul
std
sbb
jo
cmp
cmc
pushl
popf
outsl
lret
dec
mov
xchg
cmpsb
jmp
lret
xchg
add
cli
xchg
jb
jnp
push
mov
leave
mov
sarl
mov
inc
ret
jl
test
or
jo
cmp
jle
cltd
mov
inc
xor
mov
and
shll
out
jbe
or
lret
stc
dec
insb
xor
push
push
xor
xchg
inc
xchg
out
popf
movsl
cmc
fsubs
out
inc
sbb
loopne
and
jns
xchg
mov
xchg
push
fdivrs
inc
andl
aaa
rclb
gs
xor
cmpsl
push
mov
mov
arpl
jp
in
mov
ljmp
sub
pop
push
clc
or
fs
cltd
jg
inc
mov
pop
leave
xchg
sub
insb
pusha
adc
jns
push
clc
jmp
pop
inc
lcall
cmpsb
dec
repz
mov
sbb
xor
and
call
jbe
fsts
jbe
cli
jb
mov
and
inc
pop
mov
ljmp
inc
sbb
lret
add
aam
push
jmp
cmp
or
push
inc
mov
dec
decb
inc
sbb
pop
int
mov
ds
ja
adc
pop
mov
mov
mov
push
pop
add
cld
rorl
mov
xor
out
ficompl
dec
xchg
adc
pop
into
push
or
xor
stos
mov
icebp
add
mov
mov
das
push
jno
xor
cld
mov
xor
hlt
sub
movsb
or
lcall
icebp
out
jae
or
lods
enter
adc
cmovnp
add
mov
mov
shll
mov
jbe
push
sbb
mov
mov
hlt
aaa
cmpsb
stos
ret
jge
or
in
movb
jo
clc
dec
mov
sbb
add
stos
std
push
rorb
pusha
shr
test
popf
ret
int
movsl
shlb
and
mov
dec
incl
cmp
inc
mov
pop
lret
sbb
push
cmp
jnp
pop
shr
jns
andl
je
inc
pop
pop
je
fwait
std
xor
sub
add
xchg
xchg
sarb
inc
push
or
add
lods
pop
inc
mov
push
push
xchg
inc
movsb
aam
mov
cmpb
push
lahf
loopne
xchg
adc
xchg
cmp
dec
ret
cltd
jecxz
lods
jbe
sub
cmpsb
fs
aam
push
inc
js
pop
repnz
aas
lcall
pop
and
adc
testb
jbe
cld
xchg
xor
pop
add
fwait
es
and
loopne
aad
dec
subl
mov
aaa
xchg
sbbb
testl
in
push
jae
lahf
scas
gs
jg
test
ret
mov
adc
add
add
out
jnp
jp
mov
adcb
xchg
cmpsb
xchg
imul
mov
add
xchg
je
cmpsb
inc
xchg
xor
adc
fidivrs
mov
sbb
mov
mov
push
cmp
clc
adc
into
inc
addr16
aad
leave
cli
push
insl
mov
fisubrl
ss
jmp
cmc
jno
test
ret
outsl
out
jl
mov
dec
mov
inc
cmc
fwait
loopne
push
xchg
mov
or
sbb
sti
scas
mov
ljmp
mov
je
lock
cmp
je
lahf
mov
rorb
test
insl
and
ds
or
mov
jno
loop
psrad
std
sub
ss
adc
mov
vpunpcklbw
hlt
sbb
int
xchg
push
pop
ja
ja
sbbl
push
in
aam
loop
dec
mov
jb
pop
mov
stos
pop
add
pop
mov
mov
jmp
mov
shlb
hlt
xorb
dec
push
sbb
pushf
lods
std
add
gs
mov
repz
cmp
cs
xlat
or
sub
inc
test
lods
mov
ret
out
movsl
outsl
bnd
xchg
push
jae
pop
push
xor
mov
cmp
neg
insl
dec
js
mov
jmp
and
loope
cmp
xchg
nop
mov
push
jl
xchg
inc
pop
xlat
imul
mov
xlat
clc
sub
or
inc
push
nop
xchg
xchg
jbe
mov
mov
sbb
stos
push
ljmp
jnp
fsub
ficoms
add
ds
and
xchg
cmpl
dec
or
cmp
mov
shlb
cli
outsb
loope
mov
mov
call
cwtl
std
xchg
bound
incl
rcr
fidivs
jecxz
pop
sahf
mov
daa
in
cli
mov
test
scas
add
lods
add
daa
idiv
leave
xchg
jo
jmp
cld
leave
mov
jae
inc
push
dec
and
or
xchg
pushf
adc
mov
jmp
scas
pop
pushw
je
mov
iret
inc
leave
mov
enter
clc
xor
push
jmp
test
imul
cmp
and
iret
loopne
mov
neg
mov
mov
jl
push
or
or
jb
lret
and
inc
fwait
mov
stos
sub
pushf
cmp
pop
cmpsb
js
mov
xchg
dec
lret
cmpl
cmp
mov
stos
add
cmpsb
pop
inc
out
add
popa
mov
add
out
dec
sbb
mov
mov
push
xchg
cltd
lea
dec
adcb
mov
fsubl
jge
mov
xchg
cmp
jne
xchg
mov
cmpsb
lcall
insl
fwait
mov
xor
push
stos
pop
outsb
lsl
push
jmp
add
arpl
jno
out
or
dec
in
pop
jp
mov
and
movsl
jne
pop
xor
sub
fdivrl
inc
add
xchg
mov
push
enter
inc
push
mov
cmc
addr16
inc
movsl
lock
leave
repnz
imul
jp
dec
scas
fwait
sub
jbe
ss
dec
add
fdiv
sub
push
rol
sub
out
cmp
and
addr16
cmp
or
aas
push
xchg
adc
test
sahf
shrb
orb
xchg
mov
inc
stos
and
pusha
sub
xchg
aaa
mov
jge
mov
enter
std
roll
inc
mov
ja
cmpl
fmull
adc
sub
dec
inc
adc
xchg
iret
sbb
pop
int3
dec
pop
xor
stc
rclb
fwait
pushf
arpl
jbe
jge
xorl
dec
int3
daa
insb
shl
xor
shrl
sahf
ja
in
loop
inc
add
inc
sub
ret
inc
mov
ja
xor
fdivl
sub
ret
cwtl
ljmp
movsb
sbb
pop
fwait
xchg
adc
in
fdivl
mov
fidivl
repz
mov
mov
subb
xchg
pop
enter
dec
pop
xor
jnp
and
xor
mov
pop
adc
data16
test
arpl
not
sahf
push
cmp
sbb
push
sbb
andb
push
fsubr
mov
dec
and
xor
je
jnp
lock
or
and
cmp
xchg
cmc
mov
leave
push
lcall
mov
inc
or
mov
pop
hlt
jb
rol
jle
arpl
inc
xor
das
movups
enter
cmp
or
pushf
sbb
push
vmwrite
sahf
jle
push
insl
sbbb
mov
jbe
les
add
out
dec
lods
push
in
sub
xchg
fisttpl
cmpsl
mov
fwait
sub
jecxz
or
loopne
push
out
sub
hlt
cmc
mov
movsb
or
push
cs
leave
mov
mov
adc
xchg
cltd
into
xchg
in
inc
mov
js
push
mov
sar
pop
fdivrl
cmp
arpl
mov
test
repz
int3
into
dec
mov
and
pop
jp
inc
cmp
js
scas
xchg
sub
jecxz
and
stc
shrl
sub
test
outsl
mov
cmp
sti
adc
insl
push
in
int3
sets
mov
mov
movsl
sqrtps
mov
mov
or
add
test
mov
filds
jns
jge
adc
mov
orb
add
adc
hlt
sbb
xchg
mov
lret
enter
int3
cmpl
fcom
andl
aad
lcall
testl
mov
shrl
lods
push
pop
int3
mov
in
sti
and
pop
jae
mov
outsb
pop
sbb
sub
fwait
loope
jne
push
mov
cwtl
in
fs
cld
mov
cmpsl
sub
cmp
mov
mov
js
les
movsb
sub
jno
mov
ja
push
in
cmpsl
std
mov
lret
insl
shrb
xchg
mov
insl
cmp
xchg
test
cmc
insb
pop
inc
jo
cmc
push
shl
or
popf
xor
push
call
fnstcw
dec
insl
adcl
adc
mov
sbb
imul
subl
dec
or
mov
mov
movsb
dec
iret
outsl
mov
add
push
mov
inc
add
xchg
xorb
or
scas
pop
dec
add
cli
jg
pop
int3
mov
in
lret
inc
jb
lock
xchg
adc
je
sahf
adc
addr16
test
inc
push
lcall
pushl
lcall
add
mov
mov
in
cmp
in
xorl
lods
and
std
mov
inc
arpl
jle
mov
inc
push
out
mov
ret
mov
jmp
push
repz
out
push
rolb
push
jmp
std
jg
inc
ljmp
aaa
cld
idiv
or
stc
mov
ljmp
decb
or
push
xchg
test
ss
pop
jecxz,pt
cmpsb
out
mov
rolb
test
mov
mov
and
mov
cmpb
add
ss
cmp
addr16
or
sarb
push
fildl
mov
dec
ljmp
adc
fcmovne
insl
push
push
adc
and
lods
dec
sahf
aam
out
popa
xchg
xor
xchg
and
mov
xor
push
movsl
addr16
push
and
aaa
repz
dec
mov
mov
imul
jge
roll
jecxz
out
xor
xor
fcompl
and
dec
scas
sbb
mov
sbb
push
icebp
stos
je
inc
sti
or
jecxz
icebp
sub
sub
decb
int3
xor
cmpsl
loope
sbb
pusha
into
push
cmpsb
lahf
mov
jno
and
mov
cmp
sub
jbe
fwait
hlt
xor
aas
push
jns
cmp
push
cli
ret
sbb
rol
outsl
push
xchg
mov
dec
call
push
fwait
shr
inc
subb
sbb
ds
hlt
mov
push
ja
jns
push
push
aas
or
push
inc
insl
stos
pop
aas
dec
insb
scas
jno
fsubrp
add
xchg
out
dec
cli
fsubs
popa
or
mov
into
dec
jne
jnp
bound
dec
les
sub
and
push
xchg
scas
lock
outsb
fstl
jl
fadd
aam
and
mov
pop
daa
dec
add
or
addr16
gs
loop
test
xor
adcl
jge
sub
test
sub
nop
addb
adc
jl,pt
pop
pushf
lret
stos
sbb
inc
ja
bound
xchg
or
movsb
xor
add
fildll
shl
dec
xchg
jmp
mov
xor
and
sti
test
or
mov
jge
imul
xor
dec
mov
int
inc
inc
add
mov
pop
pushf
in
mov
in
inc
out
sar
mov
lods
pop
jg
jmp
jp
push
rolw
mov
das
call
push
std
int3
adc
push
or
xchg
pop
aas
aam
dec
cli
ds
mov
stos
ljmp
mov
fadd
mov
test
in
inc
rcll
mov
pop
inc
pop
stos
movsl
cs
jnp
rclb
push
dec
stos
sti
fucomp
and
sarb
xchg
jmp
push
add
lcall
in
out
aaa
mov
xchg
sbb
mov
xchg
sbb
lock
es
mov
cmp
cmc
in
sarb
icebp
push
sub
xchg
lahf
sub
out
cmpsl
dec
jmp
icebp
mov
movsb
les
imul
and
xchg
dec
xchg
bound
les
dec
mov
test
cmc
out
lods
cltd
out
inc
mov
and
dec
mov
lds
mov
imul
or
testb
push
mov
cwtl
push
mov
cs
xchg
jae
inc
mov
or
fidivrs
cld
ficoml
ficomps
dec
cmp
test
push
lcall
aas
sub
add
push
cwtl
fmuls
cmpsb
dec
stos
aam
cmpsl
xchg
cmp
and
push
inc
mov
imul
dec
imul
iret
jl
sub
rcll
push
or
cmp
test
mov
ficoml
mov
in
jns
scas
jle
bound
mov
daa
lret
call
lock
dec
and
scas
and
ds
insb
lcall
nop
mov
repz
jnp
sbb
pop
shlb
in
dec
sub
mov
sbb
sahf
xchg
ficoms
push
pusha
mov
lods
push
subb
pop
leave
cmp
icebp
adc
loope
mov
and
shll
adc
jmp
in
and
pop
dec
jae
out
mov
mov
rorl
pop
push
arpl
int
icebp
scas
xchg
xchg
pop
fdivl
mov
mov
lret
repnz
push
fbld
pop
ljmp
out
xor
pop
ja
jne
mov
ret
insl
into
fldt
xlat
mov
sub
jge
mov
maxps
pop
pop
xchg
sbb
and
popa
addr16
gs
push
std
in
pop
insl
stos
adcb
test
xchg
mov
scas
enter
or
or
adc
fisubrl
add
inc
enter
scas
xchg
stc
dec
mov
cmp
leave
repz
dec
cmp
inc
xor
aam
push
jo
movsb
xchg
push
lock
sub
adc
dec
stos
cmp
push
inc
xchg
add
daa
sbb
pop
cmp
lea
push
jl
pop
adc
imul
jge
sub
ret
imul
mov
or
xor
or
and
fwait
mov
icebp
xor
je
push
push
jne
lods
push
sbb
pop
jl
mov
nop
mov
cwtl
cmp
add
push
mov
adc
sbb
push
out
xchg
in
pop
ret
jl
bound
sub
shll
mov
lret
test
fisttps
stc
sbb
cmp
push
test
repz
movsb
movups
cs
xchg
fcomi
mov
pop
daa
aas
out
movsb
rcl
in
into
cmp
jmp
cmp
int3
sub
push
je
mov
and
jg
arpl
push
cmp
addr16
shlb
mov
ljmp
push
jnp
pusha
rcrl
mov
leave
cmp
adc
stos
cwtl
xor
dec
fs
xor
imul
das
or
ds
out
test
inc
mov
dec
adc
sub
xor
out
pushf
ljmp
jecxz
scas
test
cmpsb
push
gs
dec
jne
xorb
push
fidivrl
mov
dec
push
jns
daa
xchg
xchg
rol
scas
jp
mov
aam
outsl
lcall
in
cwtl
mov
dec
notb
hlt
movsb
stos
stos
add
xchg
lahf
mov
push
add
jecxz
fistpl
fidivrl
shll
mov
outsl
jle
popa
sarl
aas
das
rolb
dec
js
cmp
mov
outsl
stos
dec
xor
mov
jnp
fwait
mov
inc
jns
iret
or
mov
cmp
jg
xchg
sbb
daa
mov
adc
adc
in
jb
lcall
sbbb
leave
pusha
fldt
ja
cli
cmc
loopw
roll
jl
nop
shlb
bound
fisttps
add
dec
sub
ffree
or
xor
fwait
aam
cli
leave
cmp
dec
lds
mov
mov
fsubrl
daa
or
xor
mov
jae
jns
push
idivb
imul
push
or
imul
ljmp
mov
xchg
lret
imul
outsl
pushf
mov
inc
lods
pop
jg
cmp
sbb
in
or
daa
adc
cmp
int3
xor
aaa
inc
mov
std
lahf
mov
ficompl
lcall
dec
lea
imul
push
dec
hlt
gs
pop
xor
call
xchg
inc
repnz
jge
push
sbb
mov
enter
jo
cmpsl
adc
dec
sarl
fidivrs
add
jp
adc
adc
mov
adc
int
jnp
int3
call
jnp
jmp
fldcw
cmp
stos
mov
dec
mov
sbb
test
movsl
push
daa
jmp
or
adcb
xchg
push
or
cwtl
pop
dec
cmp
data16
daa
adc
je
jge
cld
das
fildl
dec
mov
inc
sbb
ret
jnp
lds
test
lods
mov
dec
out
les
mov
pop
adc
into
sub
mov
cmp
pop
aam
mov
sbb
or
jmp
and
inc
js
sub
fcmovbe
mov
insb
scas
ja
xchg
aad
cmc
add
mov
movsl
shlb
sub
mov
and
loop
xor
sbb
lods
out
and
enter
pop
fmull
out
inc
addl
mov
push
push
pop
mov
lds
int
stc
test
lods
orb
mov
ss
clc
sbb
pop
and
inc
xchg
inc
inc
xor
xchg
add
jne
xor
jmp
pop
enter
xchg
cmp
lret
mov
orb
sahf
sub
push
jl
jb
pusha
loope
xor
shlb
in
movsl
mov
mov
fisubrs
pop
jbe
imul
test
jg
mov
sub
adc
lods
push
rcrb
cmpsb
adc
dec
or
jns
std
in
mov
arpl
mov
mov
and
outsl
jae
add
push
ret
push
fwait
and
pop
adc
sub
mov
cli
addr16
push
jnp
xor
sbb
adc
movsb
lea
cmpl
mov
out
sub
fcom
xor
loope
rcll
cmp
dec
shrl
and
ret
rcll
jne
aad
mov
pop
adc
mov
push
jnp
lea
sbb
add
scas
pusha
inc
or
cmp
mov
add
cwtl
sub
or
daa
mov
add
push
cltd
jg
xchg
lret
sub
xchg
or
xchg
push
jge
gs
jg
cmpsl
jecxz
adc
ss
jle
ret
insb
sub
mov
ja
andl
fstl
sti
int
cmp
mov
mov
mov
mov
jb
mov
xchg
in
and
xchg
loopne
addr16
cli
xchg
mov
push
push
sbb
sub
push
mov
add
xor
push
mov
shll
imul
mov
xchg
sbb
push
aas
insb
lea
mov
fwait
push
jbe
push
xor
cmp
mov
imul
addl
and
mov
push
cmp
jae
push
in
fwait
inc
sub
jg
push
pushf
add
sbb
lods
sub
movsl
movsl
mov
lods
cwtl
out
inc
adc
inc
mov
jle
es
push
pop
or
jbe
mov
xchg
push
repnz
add
xor
jae
fsubl
xchg
jbe
jmp
out
fistl
clc
sbb
mov
add
xor
mov
xor
push
jb
lock
imul
fisubs
mov
mov
lea
cltd
bound
fnstcw
hlt
mov
push
push
mov
push
pop
dec
out
jbe
xorl
dec
push
enter
ja
cli
std
mov
aas
inc
stos
adc
xor
lock
repnz
jp
xor
jbe
les
in
popf
cs
or
sub
insl
pop
push
mov
popf
lods
mov
push
repz
mov
xchg
inc
insl
stos
sbb
xchg
cmp
sbb
cmpsb
mov
std
test
ret
mov
insl
inc
mov
cmpsl
pop
aad
aaa
ficoml
xor
call
shlb
adc
add
hlt
int3
jnp
add
push
cmp
adc
rorl
data16
jno
sbb
or
nop
adc
rcrl
sub
jl
lods
adc
rcl
mov
jne
jle
movsl
push
xchg
jle
pop
jne
fstp
mov
iret
sub
aad
mov
and
xchg
adc
jns
stos
nop
cmp
inc
orb
or
cld
popa
inc
adc
nop
xor
adc
pop
mov
cmp
mov
out
in
or
push
and
cltd
push
jp
push
and
fistps
fs
sbb
imul
pop
js
ret
mov
sbb
sbb
xchg
mov
popf
cmp
inc
xchg
adc
xor
xchg
clc
pop
sub
mov
leave
js
aad
cmp
push
loopne
pop
mov
andl
sbb
xor
dec
xchg
inc
shlb
clc
inc
xchg
dec
imul
in
adc
or
addl
mov
shll
adc
das
out
inc
int3
cwtl
adc
push
sbb
xchg
cmpsl
cmovne
mov
mov
push
sub
jns
test
sbb
mov
stos
outsl
jno
mov
xchg
scas
jnp
cmpsl
sbb
test
mov
mov
jecxz
inc
pusha
scas
xchg
push
dec
lea
push
gs
xor
or
in
mov
jb
mov
jl
mov
add
add
fwait
sbb
mov
mov
mov
in
jae
dec
out
cmp
lock
ffree
addl
int3
dec
mov
imul
xchg
nop
mov
pop
clc
cmp
mov
sti
inc
mov
push
inc
imul
xorb
imul
stos
fucomp
icebp
sbb
pop
adc
xlat
je
rorb
dec
inc
loop
push
call
push
test
xchg
xor
cli
out
test
adc
add
or
lods
inc
std
mov
sbb
or
mov
insl
sbb
mov
inc
mov
mov
jmp
sbb
dec
gs
jle
pop
out
iret
mov
rorl
stos
mov
lods
movsb
jns
pop
dec
mov
lock
ret
imul
adc
je
int
mov
push
xor
inc
inc
mov
push
mov
sbb
pop
sub
and
lea
dec
and
aam
mov
imul
mov
mov
fdivrp
cmpsb
fsubrl
mov
lea
mov
mov
xor
call
in
sub
mov
aas
int
nop
and
leave
mov
and
test
out
ja
xchg
loope
pop
jbe
int3
mov
lods
and
cmpb
pop
pop
mov
ss
fidivrs
xchg
push
cltd
mov
addb
mov
and
lret
add
aas
push
xchg
cmp
push
pop
fwait
mov
stos
add
test
lret
sub
in
xor
jl
lea
jns
hlt
xorl
popw
mov
mov
pop
lds
xor
sbb
fadd
xor
dec
jle
cld
test
sbb
pop
dec
lret
mov
clc
orl
mov
and
adc
or
add
movsb
push
scas
stos
jge
push
sti
mov
insb
jo
and
pusha
fcmovnu
lods
jae
mov
repnz
fcoml
xorb
xor
inc
scas
adc
xchg
xorb
inc
cs
mov
fucomip
jle
mulb
jnp
push
aaa
sbb
xor
hlt
mov
repz
push
loop
xor
fnstcw
lods
imul
test
cmp
inc
je
data16
out
jno
jl
sub
lret
fwait
shl
insl
std
dec
push
cmpsb
push
pop
in
imul
mov
pusha
xchg
out
jno
outsb
pop
sbb
pcmpeqd
cltd
mov
pushf
sbb
gs
dec
imul
sbb
jbe
repz
lret
sbb
push
mov
pop
movsb
das
cmpb
test
pusha
ds
mov
dec
add
push
push
push
cmp
mov
adc
and
sub
xor
je
scas
cmpsb
jecxz,pt
aaa
sub
xchg
adc
jns
pusha
fimull
xchg
hlt
ja
sbb
in
xchg
lods
addb
fcoml
shr
sbbb
in
xor
dec
mov
and
adc
sbb
test
adc
xor
out
sub
shrl
das
inc
dec
popf
js
dec
mov
int3
pop
scas
dec
lahf
in
dec
imull
int
sbb
sbb
hlt
fbld
cmovnp
ror
add
add
inc
pop
xor
lret
or
add
xchg
xor
jmp
pusha
jmp
xor
mov
push
dec
loopne
sub
arpl
sub
push
sbb
inc
sti
ljmp
lods
lcall
xor
mov
xor
lahf
imul
fsubrl
push
fs
fwait
dec
outsb
mov
or
mov
sub
ret
inc
mov
lcall
loopne
loopne
jno
jno
mov
shlb
mov
xchg
and
mov
cmp
fyl2x
and
push
jo
xor
cli
mov
or
cmp
cmc
test
test
add
adc
push
cmp
cmpsl
inc
xchg
sub
xchg
mov
cwtl
lcall
mov
mov
cld
push
push
jecxz
add
sub
xchg
sub
out
dec
data16
dec
mov
call
lds
push
cmpsl
sbb
sub
jb
inc
xor
cmc
loop
loop
stos
mov
vhsubps
enter
mov
inc
mov
mov
push
aas
arpl
shll
fidivs
orb
xchg
jle
add
sti
or
cmp
xchg
out
das
dec
or
cltd
push
sbb
sbb
jne
adc
xchg
je
mov
cli
mov
sbb
andl
and
mov
add
aad
pop
and
ja
push
fistl
or
out
imul
xchg
lcall
rcr
pop
sub
repnz
ficoml
cmp
lret
adc
std
mov
leave
imulb
xchg
loopne
imul
into
xor
push
sbbl
dec
sbb
push
mov
cmpsb
or
inc
xor
cmpsb
sarb
enter
pop
dec
pop
rolb
jb
mov
push
pop
ror
ret
lods
sbb
adc
test
mov
shrb
sub
or
aad
mov
mov
jae
sbb
jae
xchg
jp
cmp
rcl
xor
das
xchg
jns
in
ficoml
sbb
add
inc
popa
lcall
stos
inc
pop
adc
xchg
pop
xchg
and
mov
out
mov
js
sub
sti
cwtl
pop
in
out
pusha
sbb
fwait
or
xchg
lods
mov
rorb
dec
outsl
adc
fcom
inc
jbe
cli
or
xchg
add
aam
divl
fistps
aas
adc
xlat
jle
gs
mov
jno
dec
mov
ret
insb
in
mov
pop
icebp
loope
mov
mov
mov
jae
ja
mov
xor
decl
dec
pusha
xchg
push
push
mov
insb
xor
outsb
and
sti
cli
and
xor
inc
adc
sbb
test
xlat
xchg
lock
ret
or
es
mov
lcall
mov
arpl
push
out
sbb
adc
cmp
sub
and
ret
insl
push
hlt
hlt
out
insb
fwait
pusha
xlat
pop
leave
add
es
pop
js
out
adc
sbb
testl
lods
ljmp
int3
shll
scas
mov
repz
imul
fildl
push
cmp
or
xor
dec
rorb
sahf
lods
mov
out
xor
lret
lock
pop
lods
outsl
pop
aaa
push
insl
sub
xor
adc
lods
add
pop
aad
sbb
mov
or
xor
imull
pop
pop
nop
mov
sub
mov
in
mov
mov
mov
push
test
mov
cld
mov
sub
xchg
lods
insl
arpl
lods
test
cmp
pusha
std
push
adc
dec
imul
pop
and
int3
mov
mov
or
lret
fwait
inc
clc
inc
je
sahf
sbb
lret
test
in
mov
mov
mov
int
mov
mov
xchg
inc
pop
int3
sbb
imul
scas
dec
bsf
xchg
pop
inc
lret
es
jmp
sbb
sarb
call
sbb
adc
cmp
adc
and
push
pushf
xorl
or
aam
pop
lods
stc
clc
scas
pop
test
and
inc
inc
shlb
or
jb
popf
fs
jg
add
cmp
shr
data16
lods
fidivrs
addr16
mov
xchg
js
aad
inc
lret
push
xor
mov
xor
inc
xchg
pop
push
data16
in
cmc
xchg
cld
jnp
xchg
aas
lret
test
aad
aaa
clc
sbb
pop
movsl
enter
into
mov
scas
call
pop
or
loope
inc
mov
mov
into
dec
cmc
frstor
mov
idiv
push
mov
or
mov
sub
cmp
insb
or
cmp
mov
mov
mov
fucomp
popa
mov
push
insl
inc
stos
out
ror
push
jo
loopne
lods
cmpsb
mov
lds
call
fwait
jmp
es
rolb
jmp
je
call
push
mov
sub
push
inc
sbb
enter
cmp
inc
imul
pop
imul
int3
cmp
sub
enter
ficompl
cmp
mov
push
jbe
xor
or
xor
jmp
pushl
sti
sbb
out
dec
stc
mov
insl
mov
insl
cmp
push
jne
xchg
fistl
pop
jg
out
pop
call
push
push
lahf
insl
hlt
movsb
pop
mov
jne
dec
cli
lock
pop
push
dec
inc
aam
cltd
jl
popf
inc
mov
bound
dec
test
outsb
outsl
lods
repz
filds
xchg
or
xor
orb
cli
clc
dec
rcl
mov
xor
fisttpl
call
clc
pop
xchg
xor
sbb
mov
in
xchg
xor
mov
aam
bound
push
lahf
out
or
cmpsb
cmpsl
push
insl
push
adc
jle
mov
sti
pushf
cwtl
aam
xchg
arpl
jecxz
addl
add
mov
fisubl
xor
mov
xor
mov
xchg
sub
mov
hlt
pop
mov
xchg
repnz
xor
pushf
scas
mov
loop
inc
sbb
loope
add
stc
orb
xchg
lret
mov
in
dec
lea
loope
lock
adc
sbb
shlb
mov
push
out
add
push
bswap
cmp
push
adc
int3
sbb
les
int3
adc
sub
ss
mov
inc
mov
sbb
cmpsl
jo
cmp
jne
cwtl
enter
decl
fwait
cmp
xchg
sbb
adc
sbb
jp
adc
cmc
xor
int
adc
xlat
xchg
push
loop
jb
xor
mov
popf
adc
sarl
jo
sti
sbb
aad
push
dec
lods
cwtl
mov
imul
ficomps
cs
dec
das
jmp
loopne
sub
or
push
mov
hlt
outsl
ss
xchg
adc
sub
or
stos
dec
outsl
or
or
inc
mov
xchg
test
jge
sbb
outsb
cmp
adc
jle
imul
js
jne
ficoms
loopne
arpl
cmp
pop
sbb
dec
mov
pop
xchg
lahf
pop
xchg
loope
jmp
pop
test
mov
lds
sbb
inc
jb
jmp
sarb
std
sahf
sar
push
hlt
jae
mov
xchg
push
mov
imul
lret
inc
or
test
jae
mov
jp
ss
dec
clc
add
push
pop
dec
push
jns
ret
adc
push
outsb
inc
out
jbe
cmp
out
pop
loop
cmp
fistpll
es
mov
subb
adc
sarl
setne
mov
xlat
or
packssdw
sbbl
rcl
jnp
add
inc
data16
sub
aam
incb
test
jecxz
jne,pt
sahf
imulb
and
faddl
adc
mov
ljmp
mov
leave
mov
jle
xchg
test
jg
test
add
xchg
repnz
in
addr16
xchg
data16
adc
rorl
je
mov
adc
xchg
jno
pop
mov
inc
cltd
inc
xor
mov
pop
mov
sub
ja
sbb
push
mov
arpl
cmp
rorb
mov
push
push
out
outsb
lods
aaa
push
stc
cmpsl
adc
cmc
and
mov
and
jp
pusha
push
leave
das
fsubrl
mov
int
nop
hlt
inc
pushf
or
dec
lds
js
jo
add
lret
outsb
pop
aaa
pop
mov
not
rcrl
fwait
mov
jns
xchg
movsb
cmp
lahf
push
js
pop
pop
ss
xchg
movsl
mov
movsb
icebp
and
xchg
pop
mov
pop
daa
xor
pop
aad
xor
dec
push
rcll
jge
leave
rcrl
scas
loopne
imulb
mov
mov
inc
pop
in
scas
icebp
ss
leave
xchg
movsl
fldcw
test
add
dec
push
lahf
aam
mov
int
xchg
inc
cltd
icebp
mov
fcoml
push
and
fwait
and
xchg
sub
jbe
mov
fxch
les
mov
sahf
cli
arpl
dec
ja
pop
iret
adc
fwait
inc
cmpsb
jne
lret
subb
or
or
push
subl
push
sbb
jmp
repnz
rcrb
jp
movsb
pop
shrb
and
cmpsl
mov
subb
xchg
sahf
divb
or
push
jae
setns
out
push
out
mov
ficomps
sbb
rcrb
xchg
std
cmp
xchg
inc
and
or
push
test
ret
popa
jo
hlt
in
out
test
mov
sub
loop
out
mov
fstl
push
xchg
notb
pop
xor
lock
pop
push
xor
and
inc
jge
loop
xchg
sbb
mov
mov
mov
xchg
mov
roll
xchg
pop
mov
add
lcall
bound
dec
ljmp
add
rol
loopne
or
cld
push
add
cmp
pop
in
stos
push
cmpsb
jge
inc
fnstenv
or
lret
push
mov
icebp
adcl
outsl
roll
scas
cmp
xchg
mov
shl
xchg
mull
xchg
jecxz
jbe
cld
sahf
jmp
nop
cmc
xchg
lcall
loop
jg,pn
inc
jno
ret
jmp
rcll
mov
test
daa
push
jbe
push
out
xchg
jg
gs
outsl
xorl
mov
cmp
xor
add
mov
or
and
sbb
gs
cmp
into
mov
jp
mov
or
testl
xchg
js
test
sub
lock
push
sarl
addr16
lds
pop
xchg
daa
xchg
jne
outsb
cmc
arpl
pop
out
sti
std
mov
popa
sub
mov
enter
jg
into
pop
xchg
cmp
sti
movsl
lods
fcoml
cmp
sbb
inc
out
mov
push
mov
sub
dec
fisubrl
xor
inc
push
fdiv
mov
rcr
sarl
push
daa
jp
sbb
shr
lahf
ret
jns
sti
outsl
leave
xchg
sbb
sarl
mov
or
cwtl
pop
and
stos
jns
sub
inc
pop
cmp
sahf
out
bound
xor
int3
imul
or
sarb
cmpsb
mov
pop
das
sub
dec
sbb
pop
cmp
js
push
repz
arpl
adc
stos
shlb
shrl
leave
lahf
pop
int
push
push
xorb
add
jmp
xor
push
popa
shrl
xor
pop
movsl
mov
cwtl
testb
and
scas
mov
add
dec
enter
jb
scas
loop
lret
fildl
sbbb
lods
cld
imulb
inc
dec
xchg
pushf
in
xchg
xor
sbb
out
adc
das
inc
dec
das
outsb
lods
dec
push
cmpsl
dec
sub
lods
orl
data16
xchg
aaa
sub
sbb
pop
adcl
andb
mov
lcall
loopne
push
push
push
adc
push
pusha
lods
ret
adc
in
in
lock
imul
test
cmc
pop
mov
sub
ret
incb
incb
stc
nop
mov
jae
in
outsb
rcrb
push
xchg
jo
repz
sbb
int
out
daa
test
and
cmp
mov
xor
cmp
cmp
fistpl
sbb
mov
call
cmc
dec
pop
mov
push
fstpt
dec
enter
mov
scas
out
fidivrl
mov
add
jae
test
in
shr
mov
mov
and
push
sub
mov
fucomi
mov
clc
test
mov
cltd
test
insb
int
sub
mov
lea
or
fstpt
jne
aam
and
icebp
sbb
pop
cmpsb
dec
cmpsl
es
jno
jnp
test
cltd
mov
cltd
or
std
adc
in
xorb
add
mov
sub
pop
mov
pop
cmp
je
jmp
ret
mov
push
repnz
sub
mov
mov
cmpsb
mov
jno
push
hlt
xchg
cmpsb
cltd
xchg
sbb
jnp
adc
pop
and
clc
into
cmp
or
scas
xchg
or
sbb
call
jle
stos
and
push
push
stc
or
sub
and
or
sbb
inc
cmp
js
xor
or
jmp
and
sub
sbb
outsl
add
aaa
inc
fwait
adc
loope
les
mov
adc
les
and
int
pop
mov
mov
adcb
pop
or
loope
ljmp
incl
mov
mov
jge
call
icebp
ret
jmp
subb
mov
dec
ljmp
fstpl
mov
cmp
iret
rclb
sub
xlat
fxch
xchg
mov
mov
int3
lret
rorl
popa
lret
shll
mov
pop
mov
in
flds
popl
in
xchg
mov
xor
andl
jle
mov
shlb
cmp
xlat
int3
lret
xor
pop
adc
mov
popf
lock
cmc
pop
add
dec
loope
cli
inc
cli
out
ljmp
aas
lds
fisubl
fimuls
movl
rcll
push
les
pusha
in
dec
cltd
divb
sahf
in
sbb
mov
pop
and
push
cmp
cltd
add
sahf
sub
aaa
fidivs
add
je
stos
movsl
arpl
lock
jno
icebp
push
mov
mov
xchg
adc
movsb
pop
pop
jae
outsb
js
mov
cmpsl
outsl
jns
mov
push
inc
decl
xchg
push
popa
push
fists
clc
bnd
test
fidivrs
shlb
loop
or
or
adc
mov
les
iret
sub
sbb
xorb
insb
in
fs
sub
jno
in
xchg
or
xchg
out
sbb
adc
cs
cmp
mov
lret
jl
add
loope
cmp
cmp
add
mov
xchg
sbb
mov
in
jbe
daa
mov
jmp
sbb
data16
inc
push
ret
loope
test
jle
sub
sub
mov
imul
lcall
imul
cld
enter
push
lea
xchg
ja,pt
add
add
mov
fs
jecxz
enter
dec
out
xchg
push
push
int
sub
push
stc
loope
cmp
cld
shll
les
fldl2t
inc
addr16
notb
incb
nop
repz
xlat
pop
xchg
or
lods
push
jo
test
lret
pop
iret
xor
jne
pop
cmp
mov
mov
adc
dec
outsb
and
int
sub
scas
xchg
cmpsl
mov
leave
je
fstpt
jnp
mov
movsb
cs
popf
mov
gs
xchg
inc
stc
insl
and
jmp
sti
loope
stos
sti
sbb
lods
fistl
clc
mov
bound
mov
pushf
mov
clc
fiadds
ja
shll
je
mov
sbb
cltd
push
pop
push
xchg
movsb
jge
icebp
aam
xchg
dec
fisubrs
inc
dec
jnp
pushf
push
mov
pop
and
mov
sub
pop
dec
rol
pop
cmp
push
pop
mov
out
sahf
cmp
jb
mov
stc
mov
sbbb
xor
stos
stos
imul
cmc
jmp
nop
aaa
push
push
mov
into
mov
push
cmp
jbe
stos
js
cmp
jl
js
in
cwtl
rclb
lcall
ror
lcall
xchg
lds
mov
xchg
mov
imul
aaa
enter
xchg
mov
mov
mov
addl
sbb
icebp
push
lock
pop
push
and
outsl
jne
xor
or
pop
xor
jg
xor
fwait
test
mov
scas
cmpsb
mov
mov
add
or
sbb
mov
sub
pop
sub
cs
rorb
cmpb
out
mov
push
adc
inc
mov
xchg
fs
out
in
mov
sub
add
xor
dec
sbb
out
cwtl
int
dec
push
jmp
jle
or
mov
adc
sub
jl
xchg
aaa
jbe
movsl
in
and
mov
out
setle
adc
test
or
sahf
sbb
cmp
dec
fucomp
mov
mov
imul
dec
jl
push
xor
testb
add
fidivrl
pop
xchg
cltd
imulb
inc
adc
xor
sbb
lods
clc
mov
test
aad
cltd
mov
bound
inc
cli
dec
cmpsb
movsl
insl
mov
scas
clc
shll
push
scas
cmpsb
int3
push
push
and
mov
cmp
xchg
bound
dec
push
inc
xor
mov
iret
pop
ja
pushf
hlt
or
jmp
xor
ret
ja
aam
mov
aad
inc
test
fsts
in
fists
jge
scas
daa
and
movsb
jg
cmpsl
jl
cmp
ljmp
jge
ret
inc
testb
cld
sub
add
add
cmc
mov
into
mov
divb
sti
ret
adc
enter
or
mov
sbb
add
cwtl
sti
inc
xor
loope
rolb
mov
dec
add
subl
xrelease
xor
inc
cmp
cmp
xchg
rolb
add
pop
fwait
sub
push
mov
and
mov
sbbb
xor
stc
cld
mov
mov
and
or
stc
mov
in
cmp
fbld
lgs
mov
pusha
call
jnp
int
sub
mov
mov
cmp
inc
xor
xchg
adc
repnz
sub
fnstcw
jmp
cmc
jge
scas
fists
add
mov
and
imul
cltd
add
xchg
xchg
add
fldl
leave
fnstcw
in
push
push
fsub
movl
cs
sbb
imul
jg
adc
pop
paddusb
sbbb
add
ret
stos
xchg
xchg
mov
add
daa
mov
jbe
sub
imul
dec
sahf
dec
push
lret
cmc
push
cmp
mov
das
les
out
movsb
scas
push
bound
insl
mov
rcr
push
xchg
movsl
dec
mov
stos
sahf
aad
mov
or
add
mov
mov
fnstcw
sti
movsb
cmpsl
fnstsw
cmp
dec
and
loop
clc
ds
inc
mov
and
pop
cmp
sub
pop
enter
mov
std
into
xor
mov
lahf
xchg
repz
pop
rol
and
aaa
dec
cs
xor
daa
jbe
push
xchg
inc
add
lock
orb
jns
imul
mov
fimull
lea
cltd
dec
mov
inc
push
mov
inc
xchg
shll
adc
mov
dec
inc
xchg
inc
lods
aaa
xor
insb
adc
sahf
xchg
orb
je
inc
jo
rcrl
jae
test
xchg
fdivl
scas
int3
cmp
stos
ljmp
icebp
pop
add
xor
xor
cmc
xchg
jmp
push
pusha
xchg
inc
adc
xchg
fildll
aam
sub
jae
cmp
jno
int
pop
cmp
outsb
fdivr
inc
ffree
rorl
xchg
xchg
subb
sahf
aad
cmc
mov
jg
popf
xchg
das
jmp
pop
fwait
mov
nop
jp
push
mov
rsqrtps
jge
mov
adc
out
add
cwtl
cmc
out
rolb
pop
and
jecxz
sub
cmp
outsl
cmpb
xor
inc
push
shrb
dec
shr
mov
mull
outsl
push
cmp
mov
mov
xchg
or
shlb
jle
sub
xchg
imul
inc
pop
aaa
aam
or
and
jnp
sub
cwtl
cmp
subl
inc
or
decl
mov
sbb
lock
inc
jae
ljmp
imul
jbe
ljmp
mov
fs
or
jno
xor
ret
fsubrs
lods
test
cmp
dec
mov
push
xchg
push
dec
jae
and
repnz
out
sahf
pop
gs
out
mov
fsts
mov
test
hlt
shrl
aaa
pop
jb
lahf
cmp
popa
xchg
jl
icebp
push
jae
mov
stos
adc
out
in
fldenv
push
out
cmp
fimull
mov
pop
negl
int3
outsb
dec
int3
sub
jns
cmp
jbe
out
pop
inc
mov
pop
mov
stos
pop
push
pop
imul
jne
fildl
or
adc
add
mov
mov
sbb
jns
das
shl
ljmp
and
jbe
add
jo
out
stc
lret
das
cli
loope
ja
mov
arpl
insl
hlt
and
fisttpll
and
std
out
enter
faddl
dec
cmp
lea
xchg
aad
adc
push
pop
movsl
cmp
inc
aas
stos
imul
sub
sbb
mov
fimuls
push
das
repnz
mov
mov
xchg
into
addl
out
push
ffreep
stos
sub
mov
add
adc
cli
inc
jno
scas
push
fstl
jecxz
xchg
cmp
daa
scas
mov
and
loop
and
inc
jmp
xchg
cmp
out
ret
inc
cmp
lret
push
insb
jo
repnz
cmp
test
ljmp
add
rorb
ja
sahf
subl
sbb
push
lods
arpl
push
adc
lods
push
jnp
add
cmp
pop
or
and
pop
lea
and
pop
sbb
dec
xchg
lret
fstpt
repz
ja
cmp
roll
inc
mov
jecxz
add
rcrb
jbe
and
leave
mov
xor
mov
pop
adc
mov
cmc
adc
ds
fwait
in
test
gs
fs
or
xorl
test
xor
sti
or
adc
lret
lods
sahf
movsb
mov
es
and
mov
dec
inc
or
sub
std
inc
sti
xor
push
xchg
cld
mov
sbb
orb
int3
hlt
or
add
fimuls
sub
push
xor
push
sahf
mov
push
bound
push
dec
gs
popa
and
daa
push
rcrb
fwait
adc
fimuls
xlat
ja
or
pop
adc
imull
sahf
and
cltd
movsb
rclb
sbb
push
xor
int3
aaa
pop
lds
dec
and
dec
add
fcomi
jnp
or
xchg
cli
mov
xor
mov
and
inc
mov
mov
stc
wbinvd
ljmp
xor
orb
push
inc
fisttpl
jne
mov
ret
jb
inc
xchg
aam
test
out
sub
dec
or
or
into
pop
imul
outsl
iret
add
stc
imul
dec
xor
inc
or
and
stc
inc
xchg
and
cli
mov
ja
mov
mov
cmp
fcompl
pusha
lret
push
imul
push
pop
jle
test
outsl
loop
cld
int3
dec
inc
out
push
js
loopne
mov
ret
pop
stc
mov
fbld
mov
das
loop
adc
mov
xlat
inc
inc
push
xor
into
inc
jbe
icebp
pop
adc
xlat
inc
lea
sbb
stos
push
bound
jne
movsb
popf
sub
popf
fs
dec
loop
scas
call
push
cmp
and
add
fdiv
inc
out
xor
xor
lret
push
ret
inc
jne
xor
and
xor
inc
scas
inc
ds
adc
rcrb
jmp
pop
inc
jo
stc
jnp
push
loope
leave
add
or
push
mov
sarb
arpl
rorl
js
out
lea
dec
xchg
sbb
jecxz
push
je
scas
sbb
sahf
inc
outsb
push
push
shlb
cmp
push
dec
mov
roll
into
push
fistpll
lret
movb
lock
push
or
js
repnz
adc
dec
repz
cld
jp
out
rcrb
out
mov
cmpsl
je
adc
xor
scas
arpl
iret
decb
pop
cwtl
cmp
in
push
push
sbb
and
ds
leave
xchg
push
dec
adc
mov
push
sub
dec
dec
leave
dec
cmp
popf
mov
dec
ss
lds
inc
pop
or
dec
mov
fcoml
or
enter
and
xchg
dec
sub
lahf
lods
fsubrl
dec
xchg
orb
jmp
movsl
aam
xchg
dec
or
push
aaa
sahf
pop
lock
xchg
push
jno
inc
mov
inc
inc
add
sbbb
pop
pop
cwtl
fnstcw
popa
mov
add
jno
jbe
in
int
dec
cltd
iret
pop
sub
jnp
ret
out
xchg
jo
inc
decb
cltd
subb
int3
sbb
test
push
dec
xor
jo
mov
lret
ja
shrl
repz
jns
stc
or
adc
es
inc
shrb
inc
sub
loop
adc
sub
dec
push
dec
xchg
push
jecxz
jb
ja
aaa
ljmp
add
mov
in
jbe
out
mov
movsb
pop
mov
push
nop
out
xor
add
sahf
jecxz
and
lock
sbbb
scas
dec
fcmovnb
mov
mov
movsl
cs
stc
leave
add
inc
int3
arpl
mov
mov
push
enter
gs
inc
and
or
sub
adc
test
adc
mov
out
in
and
add
lods
push
jg
push
mov
mov
jno
cmp
mov
mov
in
mov
and
pop
ds
sub
in
pop
pop
pop
stc
inc
pop
xor
xor
aaa
dec
pop
adc
jmp
fimull
lods
lea
pop
scas
out
dec
jne
cmp
popa
jle
pushf
adcl
sub
jge
xchg
push
sbb
sbb
and
mov
aaa
cmp
sbb
aas
ja
sub
mov
cmp
sub
xchg
notl
inc
cmp
jle
out
mov
cwtl
dec
pop
pop
fistpl
push
ficoml
xlat
cli
jae
jb
mov
inc
ret
pop
mov
jae
cmpsb
push
adc
jae
inc
mov
cld
ljmp
cld
shrl
jp
add
mov
push
add
and
movsl
lret
mov
test
sarl
je
test
and
dec
enter
jne
jle
inc
jns
int
stc
test
mov
sbb
pop
inc
jne
fdivs
fs
scas
sub
sbb
scas
sbb
scas
push
out
ss
jecxz
cmp
xchg
sbb
inc
out
inc
pop
clc
nop
out
pop
pop
and
or
test
shll
jnp
jbe
xor
push
push
cld
out
xor
lret
lods
mov
mov
mov
mov
hlt
lret
int3
mov
into
or
mov
xor
cmpsb
insl
imulb
jl
ljmp
mov
lods
jbe
fs
pop
jmp
imul
inc
jno
int3
fsts
jmp
xchg
mov
dec
test
cmc
in
adc
xor
mov
fs
lea
in
jle
iret
movsb
pop
dec
add
daa
pop
add
mov
lret
clc
fimuls
lea
jae
ss
fidivs
rorl
cltd
sahf
pop
fistpl
fyl2xp1
cmpsl
lcall
mov
sbb
data16
mov
lcall
flds
loop
xor
iret
jl
lods
test
mov
lods
inc
xorl
aaa
stc
cmpsb
pop
sbb
xor
pop
popa
fmuls
pop
mov
push
dec
jp
stos
xor
dec
or
into
push
jns
xlat
or
xor
push
jg
xor
mov
cmp
push
mov
sub
out
mov
pop
and
scas
or
sub
es
fsubrs
xchg
push
pop
in
xlat
orb
aam
out
sbb
insl
call
push
or
insb
xchg
fisttpll
sbb
adc
jl
cld
mov
lods
inc
mov
sub
jl
lea
or
jno
sbb
gs
adc
lret
cmp
je
lret
xor
adcb
cmp
mov
add
sub
lock
xchg
cmp
scas
lea
add
in
or
jle
push
mov
dec
mov
push
fidivl
inc
lods
lcall
daa
cmp
pushf
cmp
fdiv
jmp
insb
stc
jg
ficompl
pop
push
mov
ret
leave
stos
and
stos
dec
jns
pushf
xchg
xchg
ficomps
fwait
psubd
jnp
xchg
test
addr16
and
test
sub
inc
and
cmp
scas
fcoml
arpl
inc
jns
xor
jl
mov
outsb
mov
xor
lahf
loopne
push
mov
cmpl
outsl
stos
jns
or
jne
scas
pop
loop
xchg
enter
inc
lods
fwait
pop
insl
repz
mov
pop
cmp
pusha
stc
jae
popa
out
jg
fsub
cli
mov
aam
adc
int
and
jmp
fistpl
loopne
out
push
mov
ret
mov
and
mov
pushf
xor
ror
scas
xor
jns
pushf
jae
rcr
jle
dec
cmp
aam
fildll
dec
arpl
mov
mov
imul
addr16
dec
inc
add
popf
lock
cmp
mov
ljmp
xor
bnd
loope
out
outsb
loope
inc
xchg
neg
paddw
lock
js
insb
roll
push
aas
ret
cvttps2pi
inc
mov
jbe
and
fs
sbb
aaa
pop
inc
mov
daa
and
mov
fwait
push
xchg
aad
and
mov
fwait
in
ret
adc
pop
repnz
stos
fildl
dec
lea
ret
in
fcmovnb
jge
int3
add
xchg
xchg
pushf
neg
and
test
cltd
inc
jle
pop
rclb
jbe
dec
lea
cmp
mov
sub
dec
dec
sub
push
adc
rclb
fwait
xchg
pop
adc
mov
inc
cmp
std
jmp
mov
in
fcomps
xchg
jge
pusha
mov
ret
mov
jo
insl
pop
je
and
addr16
lahf
push
mov
mov
mov
jl
sbb
mov
inc
lods
pusha
lock
push
pop
stc
loopne
sbb
ds
fbstp
pop
push
add
or
jb
loop,pt
cvtps2pd
jmp
std
fdivs
test
push
dec
lds
or
push
mov
pop
push
insb
dec
jb
push
sar
out
sub
loope
fimull
push
or
cli
lahf
insb
adc
dec
bsf
hlt
mov
jb
mov
ret
test
mov
cmp
ror
dec
inc
dec
xor
pop
xor
cwtl
mov
sbb
fucomip
adc
xor
push
out
and
divb
das
pop
xor
cs
imull
push
lds
add
in
pop
mov
and
or
mov
xchg
sbb
inc
ss
mov
lret
sub
push
adc
add
rcll
or
mov
gs
jge
stc
jnp
and
sbb
cmpsb
mov
sub
xchg
jp
xchg
add
ljmp
mov
jmp
stc
cmovle
jo
cmpsb
or
mov
mov
lods
scas
cmpsb
shll
mov
mov
rolb
iret
add
ret
jnp
mov
xchg
sbb
or
push
adc
dec
mov
or
pusha
or
bound
inc
pusha
pinsrw
lods
pop
mov
out
and
mulb
pop
aas
imul
adc
fbld
cmc
fxch
repz
adc
stos
push
jnp
ljmp
imul
out
bnd
add
inc
fldenv
subl
bound
and
mov
je
je
fldt
pop
cltd
int
jle
cld
scas
xor
imul
pusha
and
cmpsb
stos
adc
movsb
push
push
jl
pop
aaa
or
repnz
xchg
cmc
clc
add
pop
mov
nop
dec
and
ret
addr16
lock
mov
incl
mov
js
jmp
sub
jns
dec
push
push
push
loopne
jb
push
xor
dec
jg
sarb
add
xor
jecxz
stos
loop
jmp
mov
insb
je
lahf
leave
lods
leave
push
clc
sti
popf
data16
jne
cmpb
cltd
sub
gs
shll
clc
inc
lods
stos
cli
adc
xor
mov
mov
mov
xchg
cwtl
pop
les
scas
mov
lcall
orb
popf
pop
lods
mov
xchg
decb
negl
dec
dec
ss
and
sub
shlb
bnd
outsl
mov
add
sbb
jb
xchg
xor
fmuls
mov
add
mov
mov
dec
lods
negb
add
mov
or
mov
lods
push
cmp
bound
xor
and
xchg
adc
add
nop
jns
jne
add
int
aaa
pop
movsl
out
ja
xchg
sub
push
addb
lock
push
add
call
sbb
pop
mov
pop
je
int3
mov
int3
mov
fs
aas
cli
push
cltd
and
pop
push
or
mov
add
movsb
cmp
das
cmpsl
pop
fsub
pop
mov
ret
or
mov
xor
push
push
ja
mov
cs
and
push
mov
pop
fidivl
aaa
jle
mov
mov
inc
mov
mov
loope
xor
adc
xchg
push
test
testb
jge
sbb
incl
inc
mov
xor
sub
clc
jge
loope
jae
ja
xorb
bound
inc
in
jne
data16
ret
movsl
das
es
xor
lret
shl
jne
jge
js
enter
cmpsb
adc
xchg
mov
cmp
lret
lahf
adc
jp
test
mov
pop
loopne
pop
cmp
jp
and
imulb
xchg
push
mov
pop
xor
inc
lds
cmp
dec
js
push
sbb
jl
aam
push
fstpl
inc
shll
hlt
lods
gs
shr
xor
sub
jb
xor
jg
mov
xor
lcall
int3
jo
bound
mov
fistl
sti
scas
jnp
xchg
inc
adc
in
and
lea
push
daa
push
mov
fcmovnbe
and
sub
sbb
mov
aam
lret
cs
aad
jae
push
daa
sbbb
dec
ds
je
add
iret
outsl
mov
bound
ret
shrl
mov
dec
mov
sub
aas
mov
push
add
cmp
fidivs
cmpsb
mov
cmp
adc
mov
add
jne
jp
sub
pop
pushf
stos
sbb
jns
xchg
mov
pop
dec
mov
fistpl
jae
popf
jle
inc
test
jns
aad
call
or
xchg
sbb
test
iret
into
out
xor
pop
movb
fstpl
mov
clc
xchg
sbb
xorb
adc
hlt
pop
inc
mov
adc
pop
out
mov
loop
push
js
movsl
adc
xor
mov
push
sub
ss
incl
push
mov
pop
out
and
push
fists
xor
jne
lods
xchg
mov
rolb
mov
pop
push
call
or
call
inc
icebp
bound
sub
movl
int
xor
cmp
jmp
int
jb
loope
xchg
jae
or
lds
sbb
lcall
jno
je
fisubs
fcoms
imul
aas
or
fnstcw
and
shl
pop
jo
pop
mov
cmp
sbb
lret
insb
call
xor
popf
test
xor
mov
xor
inc
aad
mov
call
scas
arpl
test
pop
inc
jmp
mov
outsb
aaa
in
xchg
mov
sub
insl
dec
and
test
add
hlt
scas
mov
cmp
mov
fbstp
fstl
or
adc
ss
pop
add
loop
jne
fildl
ljmp
dec
sub
inc
test
imul
movsb
insb
cmp
push
xor
punpcklwd
sti
xor
mov
adc
fdivs
cs
notb
loop
cmp
stos
sbbb
xor
mov
call
push
js
jnp
insl
push
jp
insl
push
insb
test
call
jle
xchg
loope
loop
hlt
shrl
icebp
or
sarb
enter
jb
ss
enter
mov
sbb
push
call
mov
add
dec
sbb
sub
leave
xchg
into
cmp
xchg
adc
je
adc
xchg
pop
adc
imul
mov
cmp
mov
push
jnp
or
sbb
pushf
jp
push
xchg
mov
cmp
fsubrl
mov
cmpsb
not
jae
pusha
dec
shr
xchg
movsb
mov
fsubr
outsb
xchg
mov
push
clc
push
das
icebp
mov
mov
fildll
mov
loope
fnstsw
in
jb
sbb
insb
dec
lcall
adc
mov
lea
xchg
adc
inc
jns
xor
inc
jne
test
push
rcrl
leave
jmp
aad
cmp
cmp
mov
lods
fstp
imul
pop
cld
jo
or
dec
shl
xor
sti
insb
cmp
js
add
test
jnp
outsb
push
mov
dec
or
es
in
and
xor
subb
inc
add
in
insl
or
add
push
cmp
sub
movsl
dec
inc
aaa
sbb
adc
push
mov
inc
inc
mov
xchg
rolb
xlat
out
sub
mov
xchg
sub
int
jns
and
lods
pop
xchg
icebp
xor
outsl
adc
jge
jecxz
and
aas
dec
adc
stc
jle
lods
sbb
es
fcoml
movsb
pop
lahf
clts
mov
jecxz
and
push
and
sbb
or
fs
mov
mov
mov
cld
add
pop
dec
mov
aam
sub
imul
enter
aam
repnz
fnsave
jo
mov
nop
subl
dec
push
push
rcrl
rorb
lock
shll
or
and
mov
xor
hlt
mov
jo
lods
dec
xchg
in
gs
push
into
insb
push
push
jnp
push
pop
pop
xsaves
mov
and
pop
mov
loop
sbb
xor
mov
les
testl
mov
jmp
push
sbb
mov
and
jns
pop
push
arpl
inc
push
and
ds
pop
test
call
xchg
in
mov
and
repnz
addl
sub
dec
scas
lock
inc
fwait
pop
imulb
jg
repnz
rorl
ds
cmp
cli
rcrb
testb
or
jnp
sub
cmp
sbb
and
pop
gs
test
sbb
loopne
sbb
iret
pop
xchg
mov
mov
push
jmp
faddl
rol
inc
imul
push
push
mov
jae
sbb
jmp
mov
and
xchg
insb
jnp
push
pop
outsb
xor
lods
js
cmp
popa
icebp
adc
dec
scas
lods
jle
fiadds
stc
lret
lcall
les
sbb
push
mov
xor
adc
mov
add
lcall
in
mov
insl
mov
es
out
out
push
call
in
dec
jb
inc
das
push
cmpsb
dec
ss
mov
pop
and
dec
test
cmp
mov
paddb
mov
movsb
push
ja
fwait
mov
mov
orb
mov
xchg
cmpsl
lock
mov
adc
ffreep
dec
xchg
mov
das
pop
icebp
faddl
test
jp
mov
lcall
pop
std
pop
inc
pop
cmp
sub
or
adc
mov
pusha
mov
xchg
xor
popfw
std
push
adc
cmpsb
ret
jno
fdivp
fisubrs
out
cmp
in
jne
jb
sbb
adc
in
push
repnz
pop
mov
xchg
sbb
pop
popa
cltd
xor
jnp
popa
cmp
mov
mov
movsl
js
cmpsl
pop
icebp
dec
xchg
jae
push
sub
cs
pop
push
inc
pop
mov
mov
into
mov
repz
enter
push
ja
sahf
out
cmpsb
or
mov
jae
mov
mov
and
add
outsb
mov
lods
repz
add
sarb
jmp
sbb
es
mov
or
cmp
adc
mov
aas
and
or
jo
int3
sub
sub
xchg
cmp
lods
loope
fwait
push
jge,pn
sbb
cmc
rcrl
jge
shl
mov
push
push
test
mov
xchg
loope
pop
out
rcl
sbb
shll
sub
aaa
dec
xor
loopne
mul
lret
loopne
xor
mov
xchg
cli
es
out
rorb
pop
add
es
push
stos
adc
mov
inc
jo
push
test
leave
out
xor
ja
jg
out
pop
adc
int3
dec
xchg
xchg
lds
sbb
sbb
incb
or
cmp
js
out
push
mov
ret
add
out
xchg
sbb
mov
adc
sbb
add
mov
pop
xor
or
movsl
addb
mov
sub
jae
cmp
rcll
inc
inc
xchg
sbb
inc
jo
cltd
adc
fwait
add
mov
sbb
inc
pop
inc
scas
ds
jg
bound
and
jecxz
cltd
mov
sub
cmpsl
cmpsl
cmp
pop
xchg
mov
jmp
cmp
mov
push
js
in
xchg
mov
mov
adc
push
mov
outsb
push
out
jg,pn
sbb
xchg
scas
lock
pop
movsb
enter
push
je
mov
ja
sbb
mov
ja
and
arpl
mov
jmp
fiaddl
cli
sub
cmp
es
xchg
push
adc
fwait
push
daa
xchg
arpl
mov
cmp
loopne
jl
jae,pt
int3
jbe
enter
sub
mov
mov
sbbl
out
push
out
sarb
adc
pop
jne
jne
ljmp
or
jbe
mov
jnp
aad
xor
or
jg
sub
aam
dec
mov
or
test
aad
jae
scas
xchg
sahf
xchg
jle
insl
inc
xor
pop
pop
or
adc
adcb
inc
inc
adc
bound
lcall
add
pop
cmp
mov
sbb
scas
mov
dec
dec
pop
jne
stos
fisubs
loop
cwtl
dec
jae
enter
enter
movsb
xchg
mov
jae
repnz
or
fsts
mov
or
aaa
push
xchg
subb
lods
test
pop
xchg
jmp
mov
inc
scas
mov
lret
fists
and
cmp
push
mov
aas
dec
or
cwtl
mov
pushf
aas
loope
iretw
icebp
inc
fwait
sub
and
div
ret
fcomps
pop
dec
repnz
push
xchg
mov
inc
fbld
nop
out
mov
xor
sbb
xchg
add
push
sub
mov
xor
inc
imul
or
add
and
add
push
mov
aaa
sbb
in
int
and
nop
mov
push
std
xor
push
cmpsb
adc
push
ljmp
stos
adc
pop
sbb
subl
and
lea
pop
jg
mov
jnp
dec
xchg
lock
lcall
or
out
jl
xchg
rorb
sbb
gs
xchg
vaddsubpd
rol
and
mov
xchg
cli
je
push
bound
jl
movsb
mov
in
mov
cmp
nop
out
rclb
dec
pop
je
dec
fnstsw
mov
jbe
and
jo
adc
lods
mov
push
ret
dec
jne
sarl
shrl
imul
push
stos
cmpsl
lods
pop
shlb
xchg
inc
fmulp
int3
lret
fcoml
cmpsl
push
or
movsl
dec
push
jb
jno
fs
pop
dec
sbb
xchg
icebp
dec
or
mov
repz
in
shlb
call
xor
xchg
mov
xor
jl
cmp
jl
aam
outsl
stos
mov
decl
pop
cmpl
xchg
ret
sbb
mov
add
cmpsl
inc
enter
pop
mov
push
add
sbb
sub
mov
push
shll
ds
ss
ret
cld
aad
add
lods
ds
cwtl
jns
jp
popf
sub
mov
and
xchg
mov
inc
fiadds
popa
mov
sub
pop
mov
xchg
mov
into
in
rcll
in
jle
dec
fidivs
or
push
test
loope
icebp
mov
arpl
dec
mov
sub
jb
loop
sub
into
out
xchg
aas
imulb
dec
insb
cwtl
and
mov
mov
loop
and
sar
movsb
mov
mov
push
leave
push
cmp
insb
fdivrs
cmp
cmc
mov
movsl
sbb
mov
ret
je
mov
aam
mov
fwait
jp
jmp
cmc
mov
and
cmpsb
popf
ds
cmp
xchg
xchg
cmp
push
jo
dec
imul
rolb
in
ret
mov
or
sbb
push
mov
inc
jno
and
aas
mov
repnz
popa
ljmp
cmp
nop
add
or
adc
fsubrl
push
ret
insl
push
jns
and
inc
cmp
cvtps2pd
pop
cmp
jno
rcrl
scas
cmp
add
sub
mov
pop
jae
dec
mov
fwait
cmpsl
pop
add
repz
lock
sub
mov
or
xor
mov
fwait
stc
movsl
cltd
push
inc
es
cmp
xor
xchg
test
or
mov
rclb
mov
xchg
mov
neg
xor
imul
aas
insb
adcl
sbb
jmp
loopne
adc
les
lods
js
leave
or
lea
lods
mov
mov
xchg
pop
jne
fcmovnbe
xor
sub
fsubr
shl
lock
iret
sti
dec
or
lret
inc
jl
lahf
outsl
stos
inc
jge
xor
push
fisubrl
cmp
jg
pop
push
ss
mov
xchg
mov
jae
mov
iret
daa
popf
aaa
mov
add
mov
adc
pop
and
add
dec
test
pop
push
dec
out
sbb
imul
fwait
mov
mov
outsb
ret
sub
sbb
dec
daa
mov
std
jge
int
sub
cmp
xchg
dec
popf
jecxz
pop
stc
insl
mov
mov
and
imul
lock
cmp
pop
gs
lret
jno
inc
xlat
add
xor
inc
xchg
idivl
pop
jp
mov
std
sbb
mov
and
jno,pt
and
adc
jns
loope
loopne
sarb
sub
add
xor
lret
or
inc
and
jo
dec
pop
mov
xor
inc
test
sbb
adc
in
test
xor
jle
test
and
jbe
lcall
xchg
xchg
inc
mov
push
mov
insl
add
out
xchg
lds
xchg
movsb
xchg
shrl
xor
lahf
inc
push
aad
xor
pop
add
push
arpl
fbld
popf
rcr
scas
push
jnp
lret
popf
rcrb
je
and
jl
mov
sub
mov
adc
scas
inc
in
xor
pop
or
mov
in
and
inc
or
mov
lods
adc
repnz
popa
dec
inc
jg
push
or
movsb
push
cld
ret
movsb
cwtl
mov
movsl
mov
xor
and
sub
xchg
adc
jle
or
subb
add
or
mov
mov
subb
icebp
ds
fldl
lcall
shll
ficoml
stos
ljmp
cs
out
mov
or
or
cmp
push
into
call
cwtl
mov
cmp
or
imul
xchg
sbb
mov
bound
rcl
push
and
pop
cli
enter
out
aam
in
leave
pop
int
xchg
lahf
jns
mov
iret
andl
or
jo
or
bound
pop
adcl
in
cmpl
dec
adc
pop
lea
sbb
inc
out
sub
movsb
inc
add
jns
ja
fmull
jbe
and
std
sbb
xchg
pusha
jecxz
shlb
xchg
subb
cmp
push
mov
push
jns
je
inc
dec
or
ss
cmp
fwait
mov
dec
in
imul
shrl
add
sti
movsb
sub
ljmp
xchg
cmp
js
mov
inc
inc
xchg
loopne
enter
mov
popa
cmp
add
pop
mov
in
out
ret
pop
icebp
jmp
fwait
or
sub
jnp
fistpll
xchg
inc
icebp
sbb
cmc
jge
mov
mov
push
sub
aaa
inc
push
cmp
sub
inc
adc
cmp
mov
push
out
xor
mov
mov
lea
dec
xor
jb
rolb
xlat
rcr
loop
and
iret
repnz
pop
sahf
jl
lahf
sub
xchg
xchg
inc
cli
sbb
sti
xor
insl
dec
mov
roll
or
or
ja
mov
jp
and
dec
data16
xchg
test
inc
cld
out
mov
adc
dec
xor
je
sbb
test
in
sbb
icebp
inc
dec
push
jbe
lock
rorb
repz
ds
test
mov
jo
jge
sub
pop
movsl
ds
adc
fidivrl
pop
mov
jae
fsubp
outsl
in
orb
mov
sti
and
popl
jp
int3
fwait
add
es
mov
ja
sub
adcl
ds
xor
jmp
push
clc
fucom
addl
pusha
sub
xor
pop
dec
pusha
lods
jb
dec
xlat
xlat
rep
scas
arpl
clc
inc
mov
mov
pop
or
hlt
cwtl
sbb
jno
jecxz
mov
sbb
push
xchg
cmp
sub
pop
adc
pop
ja
stos
or
call
arpl
loop
mov
popf
push
dec
jns
scas
sub
outsl
js
outsb
pop
into
xor
call
or
pop
jae
test
mov
pop
aam
test
loop
xor
fstp
cmp
int3
repz
inc
fsubp
xchg
inc
aam
in
out
inc
imul
in
or
loop
cmpsl
or
jge
mov
insb
mov
out
xor
and
stos
fwait
jb
les
and
pop
pop
inc
push
pusha
mov
nop
pop
jno
jae
sbbb
repz
loop
dec
arpl
lods
ja
aad
ffreep
push
and
out
test
push
inc
orl
movsb
ficoml
dec
xchg
fistpl
mov
pop
in
jb
adc
loop
sbb
mov
js
in
or
mov
mov
adc
mov
stos
rorl
popa
adc
les
lds
mov
pop
aas
jno
sub
clc
lods
cmp
cmpsb
sbb
ja
aaa
fisubrl
mov
inc
jae
out
pusha
rcr
push
les
mov
and
shlb
xor
sub
xchg
push
cmp
mov
cmpsb
xor
mov
xor
pop
xchg
dec
into
stos
mov
mov
insb
cmp
andb
mov
je
xor
jne
dec
rorl
js
subl
pusha
xorl
ret
negb
cmp
das
sub
mov
cs
dec
lret
shlb
and
in
add
dec
sub
ljmp
mov
xchg
js
rolb
dec
dec
loop
sahf
sbb
dec
fwait
negb
mov
test
sbb
test
mov
push
xchg
or
aas
mov
icebp
sbb
movsb
fwait
cwtl
cmp
xchg
inc
call
and
xchg
inc
and
mov
ficomps
or
in
out
adc
jns
jecxz
lock
sbb
aas
push
loop
aam
adc
inc
je
andb
jbe
jge
incb
xchg
mov
mov
fidivrs
mov
and
pushl
dec
das
push
sbb
pop
insl
xor
aad
inc
push
shl
in
sbb
push
sbb
pop
sub
out
sbb
cld
add
ret
out
lea
sub
mov
mov
movsb
inc
mov
iret
mov
mov
subl
adc
adc
adc
insb
lds
in
out
mov
mov
add
xchg
arpl
lods
fsubrs
shlb
test
and
mov
sub
jl
aam
test
scas
add
test
stos
es
push
dec
dec
mov
jae
pop
sub
lds
in
and
lods
sbb
inc
js
xlat
xlat
pop
cwtl
pop
xor
cli
sub
push
cwtl
cs
jae
lret
push
hlt
sti
orb
xchg
sub
aas
xchg
sbb
jno
adcb
subl
xchg
insb
shl
dec
pop
lds
adcl
int
adc
push
bound
pop
es
sbb
and
lods
int
sti
push
mov
mov
fs
inc
dec
push
pop
inc
ja
aam
jge
mov
inc
mov
jnp
adcl
scas
xor
mov
mov
inc
add
cmp
popf
pushf
std
std
rolb
imul
mov
adc
mov
or
inc
pop
cmp
iret
int3
push
lcall
andl
cmp
shll
push
and
lahf
jl
stos
pushf
repz
sbb
push
jg
loopne
jle
push
pusha
sahf
aaa
push
jl
cmp
add
cmc
aam
std
addr16
out
dec
push
mov
repnz
stc
ret
and
mov
out
jl
in
lds
push
cmp
popa
mov
cld
jle
mov
out
neg
xchg
ret
sbb
fldcw
xchg
loope
decl
bound
cmp
gs
outsl
iret
jge
data16
adc
negb
add
xor
repnz
repz
and
mov
sbb
and
and
clc
enter
sbb
pop
insl
pop
mov
and
bound
test
leave
xor
adc
enter
iret
cmp
xchg
cmp
push
out
mov
xor
jl
push
lcall
push
jp
fdivs
iret
cmp
ret
xor
movsl
jno
xor
cmp
xor
lods
dec
js
mov
xlat
push
push
bound
icebp
test
hlt
mov
popf
pop
dec
push
in
pop
mov
adc
adcl
into
stos
pop
jl
ds
adc
daa
cmp
mov
push
enter
mov
pop
push
push
fistpll
sub
pop
jb
xor
mov
fs
int
bound
push
mov
sbb
pop
xchg
ret
mov
sahf
push
inc
into
inc
out
iret
mov
dec
js
mov
cmpb
mov
and
pop
xchg
xor
out
mov
jmp
jmp
repz
cmc
sti
or
xchg
xor
and
das
cmp
sbb
fnstcw
push
jge
test
fwait
sub
movsb
loope
jp
push
pop
dec
addl
pop
add
pusha
pop
sub
adc
add
cmp
js
out
in
jecxz
push
cli
orl
inc
pop
pop
aas
xchg
cmpsb
ret
sbb
push
pushf
int3
pop
fwait
or
or
cltd
adc
out
leave
rclb
add
push
repnz
test
dec
ret
and
cs
sub
xor
dec
mov
in
cltd
loop
pop
ficompl
xor
push
mov
cmp
int3
fxch
test
mov
mov
inc
push
or
pop
pop
je
add
enter
push
sti
into
je
add
cmc
xor
mov
pushf
iret
int
bound
in
shll
mov
xlat
addr16
in
lea
mov
inc
inc
dec
bound
fdivrs
aaa
add
jo
pop
testb
jae
cmp
add
and
ret
aam
loop
into
imul
mov
mov
dec
adc
into
ret
sbb
mov
or
pushl
push
scas
mov
jbe
fsubr
sbb
jae
arpl
ja
sahf
fwait
mov
dec
xor
cld
sti
call
lods
addr16
pop
aam
incb
pop
test
mov
cld
mov
adc
xor
cmp
insl
add
xchg
pop
nop
add
pop
lods
sti
das
lods
pop
imul
cli
or
mov
fcomi
hlt
and
out
xchg
fsubrl
push
cmc
fisubs
sub
or
push
push
loope
add
mov
cmpsl
scas
mov
aaa
cmpsl
leave
popa
pushf
test
push
and
xchg
popf
mov
jbe
xor
cmp
test
aam
or
out
in
dec
xlat
hlt
lds
rcr
aad
push
add
jb
sub
cli
mov
fwait
mov
inc
out
in
xchg
mov
jl
dec
test
push
mov
mov
cmpl
xchg
leave
push
adc
xor
jnp
inc
pop
call
std
das
xor
out
mov
sub
sbb
sub
cmc
pop
push
jl
int3
inc
mov
jne
test
push
add
push
lea
or
shr
test
xor
fsubrl
push
inc
dec
out
ja
pop
and
lcall
jns
lea
into
add
or
arpl
jbe
jg
sahf
not
dec
ss
imul
pop
filds
push
lret
push
jge
shrb
out
test
lods
in
push
enter
pop
cmpsl
sti
ljmp
xchg
lea
dec
xor
lods
add
or
adc
and
daa
xchg
shll
insl
das
test
inc
inc
mov
sbb
xchg
fwait
cli
jle,pn
and
mov
xchg
pop
loopne
dec
icebp
xchg
testl
jmp
stc
jmp
mov
lds
cmpsl
bound
clc
fcmovnu
jmp
popa
lret
xchg
sbb
hlt
test
adc
pop
leave
or
outsl
cmp
shr
jne
jl
mov
out
add
das
cmpl
add
cwtl
xchg
cmp
lret
inc
xchg
mov
push
sub
out
out
ret
inc
ds
xchg
mov
adc
cld
adc
in
rorl
adc
mov
daa
add
or
xor
cmp
mov
xor
xor
sarb
sti
pop
pop
out
enter
push
ret
jp
cmp
addr16
lret
insb
das
mov
loopne
dec
cmpsb
fisubl
xchg
and
xor
test
jb
jns
sti
dec
sbb
ret
add
cli
mov
sbb
add
ds
adcl
xchg
sbb
and
jne
fmull
lds
cmpsl
iret
insb
mov
lea
test
mov
dec
js
in
xchg
push
negb
loop
xor
push
jge
popa
push
push
pop
in
mov
xor
xor
xchg
mov
repz
stos
sub
push
jbe
pusha
aam
fnstsw
test
xor
push
sarb
lret
pop
xor
jmp
call
aam
fdivl
push
outsl
mov
das
mov
sbb
outsl
pop
jg
loope
daa
push
mov
ret
insb
out
jno
fwait
adc
jno
ljmp
cltd
mov
rol
and
bound
stc
jno
das
push
je
xor
dec
xchg
jmp
push
cmc
pop
test
sarb
jl
push
xor
push
or
jl
inc
sub
inc
sbb
out
stos
add
push
sub
pusha
inc
div
mov
les
pop
pcmpgtd
cmp
pop
push
inc
pop
outsb
insl
lea
jg
push
cmp
inc
lret
ror
jne
inc
jp
sbb
fmulp
mov
or
mov
mov
clc
xchg
ds
mov
stos
push
mov
jg
or
or
rcrb
dec
add
pop
rcll
in
inc
dec
int
je
inc
mul
lods
int3
xchg
repnz
data16
xor
stos
int
lret
jge
ret
arpl
rol
or
sbb
cmpsb
add
daa
push
dec
dec
xor
lods
add
jb
je
push
repnz
pop
test
adc
mov
aad
test
xchg
jno
push
jmp
sub
or
sbb
mov
push
loopne
shrb
fcomp
icebp
nop
cltd
or
mov
movsl
repz
icebp
lds
xchg
orb
in
aad
mov
cmp
pusha
inc
movsl
leave
sbb
jno
push
leave
pop
fdivs
or
add
stc
mov
dec
or
fwait
jl
fs
fs
sub
xor
adc
and
inc
push
bound
mov
pusha
outsl
mov
sub
pop
pop
add
popa
ret
out
sti
fmul
loop
fldcw
fstps
xchg
lods
mov
hlt
arpl
int3
lods
inc
shlb
ljmp
pop
pusha
aad
fs
inc
lods
aas
dec
pushw
pop
fcompl
pop
sbb
arpl
daa
dec
xchg
loopne
stos
loop
pop
xchg
ret
ss
test
cwtl
dec
or
loop
jb
or
xchg
pop
stos
sbb
mov
adc
push
dec
jg
les
lock
daa
pop
and
ja
and
xchg
mov
xchg
and
imul
inc
mov
fs
push
cmc
pop
scas
or
mov
jle
nop
fwait
mov
nop
xchg
xor
fdivl
shll
sbb
inc
fcmovne
push
pop
sbb
sti
add
daa
mov
jge
cmp
dec
jno
adc
sub
hlt
scas
mov
fs
stc
mov
xchg
test
push
inc
jmp
add
jo
stos
cmp
aam
sub
xlat
push
lret
mov
insl
enter
cld
shl
xor
or
xor
lret
test
cmp
jae
test
mov
inc
adc
popf
push
mov
xor
or
pop
cmp
xchg
out
push
lock
adc
sbb
ret
fdivrl
aam
in
aam
inc
mov
mov
repnz
lods
xchg
hlt
sbb
pop
jo
cmpsl
mov
lods
or
pushf
frstor
mov
adc
insl
sub
mov
movsl
mov
and
aas
test
insb
and
cli
fcoml
int
dec
jns
adc
adc
fs
sbb
sbb
scas
push
jne
push
push
mov
mov
adc
add
cmp
jbe
xchg
push
or
dec
inc
leave
push
sbb
stc
hlt
sarl
cmp
iret
cmpb
dec
xchg
repnz
dec
cmp
repz
push
leave
andb
shrb
pop
and
sbb
stc
test
movsb
add
loop
add
std
inc
sub
and
jl
pop
sbb
shlb
cmpsb
lods
arpl
add
mov
cs
dec
jmp
mov
push
xor
inc
and
xor
pop
and
push
xchg
inc
js
aaa
or
faddl
mov
or
pusha
mov
bound
sub
rcrl
into
xor
mov
out
lock
adc
add
cs
mov
sbb
nop
in
les
cmp
mov
stos
cltd
loopne
adc
mov
iret
sub
shll
in
les
push
iret
fld
sub
inc
inc
jo
stos
sbb
in
aaa
xchg
cmpb
out
mov
xchg
jbe
mov
lock
pop
nop
sub
popa
paddsw
aaa
jl
aam
cld
push
fnstcw
imul
push
loop
jl
xor
push
nop
out
xor
xchg
fstl
jg
ds
push
xchg
and
sbb
into
scas
rorb
and
test
mov
adc
sahf
fsubp
sub
and
enter
mov
adc
sub
cmp
adc
imul
lds
sub
lret
lea
pop
fidivrs
call
jb
sbb
fcomps
into
xor
imul
rcrb
jle
jge
cmp
and
aad
addb
loope
xor
cs
movsb
jge
mov
xor
sahf
mov
push
pop
repnz
or
outsl
mov
testb
cmpb
mov
mov
pop
aam
xor
imul
pop
sbb
push
adc
pop
xchg
pop
push
pushf
jmp
adc
jg
sub
jae
mov
cmc
cmpsb
fmul
adc
sub
sbb
dec
mov
pop
xchg
outsb
pop
add
pop
dec
sarb
int
int
inc
mov
aam
or
imul
jecxz
fnsave
cmp
jno
outsb
pop
leave
push
xor
adc
adc
imul
mov
cmpl
lcall
out
or
add
das
outsb
sbb
test
aam
int3
addr16
rolb
xor
sbb
psrlw
aas
or
inc
rorl
sub
sub
lcall
sub
out
test
gs
test
cmp
cld
sub
ljmp
sbb
sub
add
mov
cld
jbe
ret
cltd
mov
ljmp
fs
out
xchg
mov
pushf
sub
mov
add
or
subb
cli
mov
testl
jl
xchg
cwtl
mov
shlb
repnz
pop
sbb
pop
cs
mov
xor
out
lcall
addr16
pop
les
add
inc
lea
or
outsb
xchg
hlt
in
test
stos
cmp
repz
lods
push
loope
imul
ret
out
xchg
cltd
addr16
and
jmp
mov
sbb
popf
incb
popf
call
adc
stos
adcl
adc
sahf
pop
fucomi
mov
int3
test
ja
dec
les
cmp
add
clc
xor
dec
in
imul
inc
dec
dec
repnz
mov
rcrb
fcompl
pop
popa
adc
mov
mulb
movsl
jp
lods
jne
sbb
mov
call
push
jmp
stos
dec
mov
nop
rorl
mov
rcrb
ficomps
cmp
pop
loop
movsb
popa
ja
insb
push
sbb
sbb
pop
adc
lret
fldcw
arpl
popf
outsb
cmp
pop
or
sbb
adc
inc
rcrl
ret
outsl
outsb
ficoml
mov
push
sub
pop
cmc
pushf
ret
imul
ljmp
push
lcall
push
test
imull
push
inc
inc
jbe
fisttpl
popf
xchg
xchg
push
sbb
jmp
call
jmp
imul
mov
inc
xor
in
push
and
test
jne
out
add
and
fisubl
fs
orb
pushf
dec
sub
pop
gs
mov
fnstsw
fwait
adc
stos
shll
jae
adc
dec
clc
cld
in
fcom
xchg
call
pop
clc
mov
mov
jne
pop
sbb
pop
cmp
in
xchg
std
subb
or
mov
inc
jae
sub
jno
pop
sbb
add
cmp
mov
xor
lret
inc
imul
inc
lods
adc
loopne
clc
jno
jp
ds
inc
stos
xlat
andb
cli
and
sub
loop
into
adc
jae
fdiv
faddl
scas
or
lea
std
popf
fst
andl
adc
decl
notl
and
out
mov
xlat
das
dec
sbb
lds
mov
xor
lock
add
mov
daa
fwait
sub
cmp
push
xor
call
mov
or
gs
notl
lret
shll
xchg
sbb
sub
sbb
or
cwtl
mov
mov
or
test
sbb
dec
sti
xor
jmp
pop
popf
dec
jb
mov
add
lret
mov
jno
lds
lods
inc
and
pushf
jo
pop
adc
pop
mov
dec
adc
sbb
cltd
push
pop
nop
bnd
not
jge
adc
loope
xor
mov
jg
inc
in
andb
mov
shll
dec
sub
mov
and
cli
fcmove
mov
rcll
add
popf
mov
mov
push
pop
les
lahf
adc
in
mov
or
jne
push
in
and
dec
and
or
add
pop
dec
adc
repnz
dec
pusha
pop
jae
push
mov
mov
into
xchg
fidivs
or
dec
pop
mov
lods
aam
icebp
sti
jns
cmp
mov
push
pop
ret
idivb
cmpsb
xchg
cmp
stos
jne
fwait
mov
fistl
push
in
stos
into
out
aam
sbb
clc
push
sub
stos
mov
mov
test
adc
or
aam
push
xor
mov
fwait
cmp
jae
cmc
cmc
test
mov
push
inc
aaa
jge
les
icebp
push
push
xchg
std
fsubrl
shlb
or
iret
xchg
int
test
jno
inc
add
inc
scas
cmp
out
xchg
push
or
imul
and
or
into
jbe
mov
pushl
add
xchg
or
test
sub
sbb
dec
arpl
leave
push
jl
popf
mov
pushf
push
push
hlt
out
sub
in
mov
mov
rorb
insl
xchg
xor
dec
and
dec
adc
les
in
jo
and
push
and
cmp
mov
add
xor
cld
movsl
shrl
sbb
sub
or
test
xor
push
icebp
lds
cltd
lahf
adc
inc
cmpsb
or
daa
aad
cmpsl
decl
cmp
mov
and
xor
jnp
fdivs
imul
push
xchg
and
jno
mov
addb
mov
outsl
icebp
mov
aaa
sarl
es
pop
punpckhdq
cmc
sub
or
int3
sbb
roll
loopne
inc
inc
pop
rcll
out
xchg
test
cwtl
pop
fnstsw
dec
pop
mov
fld
mov
sbb
adcb
push
dec
push
inc
rorl
in
lods
jnp
push
jge
fs
adc
inc
cmp
jb
jge
insb
outsb
xchg
cmp
sbb
icebp
jmp
mov
mov
mov
leave
lock
or
jne
std
and
in
xor
pusha
mov
xchg
rorl
lcall
inc
ret
dec
adc
fs
sbb
sbb
and
dec
inc
mov
out
xchg
inc
dec
inc
ljmp
insb
loop
cmpsl
lea
add
pop
pop
stc
xor
lock
pop
movsb
xor
sbb
xchg
sbb
mov
clc
in
push
ret
dec
insb
mov
clc
sbb
pop
sbb
add
loope
pop
mov
xchg
mov
scas
cmpsb
mov
mov
je
cmp
dec
stos
inc
and
arpl
push
mov
pop
scas
shll
mov
mov
ss
pop
inc
sub
and
pop
in
subl
inc
push
shlb
lods
sub
pushf
xchg
lds
inc
lds
into
inc
fidivl
mov
cmpsl
fidivl
daa
mov
adc
and
mov
jp
sbb
inc
dec
lret
push
add
iret
sbb
iret
jl
fdivl
jle
insl
xchg
in
push
mov
in
jle
inc
call
or
bound
dec
xor
pusha
test
cmp
jno
outsl
into
out
lret
test
adc
je,pt
cli
mov
inc
and
pop
push
loop
outsb
pop
dec
imul
xor
mov
sbb
and
outsb
sbb
mov
adc
repz
es
repz
pop
fsubr
push
mov
mov
jle
idivb
push
cmp
nop
test
cmp
dec
dec
fsubl
inc
push
outsl
aad
clc
loop
loopne
jg
xchg
and
mov
je
push
cli
std
int3
and
cmp
sub
jno
mov
add
mov
lahf
lea
aas
jnp
out
push
ret
push
das
scas
iret
dec
push
testb
inc
test
cmc
adc
imul
repz
or
dec
dec
push
lods
mov
pop
mov
mov
fwait
mov
stos
inc
cmp
adc
cmp
dec
inc
mov
orl
std
push
in
push
sbb
sbb
std
pop
jle
lcall
sbb
sbb
inc
out
mov
outsl
jge
adc
in
movsb
iret
jle
jmp
aad
push
aaa
jg
sti
cltd
adc
or
xor
mov
mov
jge
test
insb
xor
nop
aam
jnp
add
mov
fimull
cmpl
dec
js
fsubrl
fwait
ds
inc
outsl
and
jb
sbb
cmc
outsl
cs
pop
popa
rcl
xlat
xor
stc
inc
xchg
je
sbb
outsb
fistps
mov
popa
out
jb
jecxz
fnsave
repz
inc
or
add
in
or
sub
mov
lret
dec
sti
cmp
sub
imul
ficoml
daa
cmpb
sbb
aam
push
pop
and
mov
rcrl
add
cmpsl
mov
add
enter
xchg
add
sub
lea
hlt
xchg
lock
sub
sub
jae
mov
rclb
jp
ja,pt
mov
inc
mov
jo
dec
mov
fs
mov
xor
pusha
xchg
or
dec
mov
add
sub
mov
int3
test
push
and
out
xor
mov
lahf
sbb
outsl
insb
mov
inc
bound
shlb
cmp
mov
sbb
sub
inc
jp
cld
xchg
int3
repnz
jp
and
lret
cmpsl
xchg
sub
sbb
stos
add
cmp
outsb
pop
les
add
add
sbb
sbb
sub
sarl
ret
lock
and
mov
adc
sub
and
cwtl
stos
push
cmpsl
ljmp
fnsave
dec
push
mov
adc
lret
mov
push
mov
dec
xchg
or
dec
movsl
push
push
jb
out
aam
scas
enter
fimull
ret
add
add
mov
jg
sbb
mov
push
outsl
mull
aam
std
out
jmp
test
ficompl
cmpsb
xchg
pop
dec
insb
push
iret
jne
mov
call
pop
aam
push
xchg
adc
lret
es
fldcw
jbe
or
rcl
enter
pop
mov
sub
shll
mov
and
mov
leave
add
int
inc
xor
add
pushw
add
sbb
sbb
into
lods
ret
std
cltd
dec
push
cmp
test
cmp
dec
fmuls
sarl
adc
xor
cmp
dec
clc
clc
mov
call
xchg
fldt
lods
sbb
add
mov
jge
jp
cmp
jl
mov
cmpsl
hlt
ret
call
into
mov
cmp
pop
mov
dec
jbe
xchg
mov
leave
and
repz
das
xor
insb
or
sbb
dec
xchg
rep
rol
or
jp
xchg
int3
adc
mov
xor
lahf
sub
clts
mov
and
mov
cmp
test
dec
mov
cmpsb
push
mov
into
aam
leave
sarl
ret
adc
push
mov
fsubl
inc
mov
shll
rcrb
lcall
dec
out
xchg
popa
mov
loopne
sub
test
xor
mov
cmp
jp
scas
push
shrb
xor
mov
and
mov
jne
fisttpll
ja
or
xlat
add
lcall
sub
stos
cmp
repz
push
clc
test
sbb
ljmp
ljmp
jae
pusha
mov
pop
pop
adcb
addr16
add
sub
dec
ljmp
add
movsl
jne
in
jno
out
das
movsl
into
mov
outsb
pop
add
pop
clc
ss
int
jbe
add
push
sub
pop
inc
lret
jl
and
mov
or
inc
movsb
sub
dec
push
stc
inc
daa
lahf
jg
push
mov
sub
mov
adc
cmp
js
dec
mov
aam
out
nop
mov
cmp
or
jo
stos
mov
push
dec
and
daa
mov
xor
dec
mov
add
shlb
cmpsb
jb
dec
filds
jmp
repz
mov
out
jb
mov
iret
push
cltd
outsb
push
std
and
push
imul
lcall
cld
mov
and
mov
adc
mov
xor
sub
aas
jg
jle
cmp
insl
lret
and
repz
xchg
inc
pop
and
aaa
in
cmp
jge
movsl
jno
sahf
or
mov
cli
js
mov
and
pop
add
and
das
sub
and
mov
lock
out
adc
mov
push
jle
rcll
out
sbb
inc
adc
fiaddl
out
shl
jns
jp
xchg
out
sahf
adc
or
iret
pop
mov
sahf
cli
test
push
adc
call
cmp
add
dec
out
and
decl
mov
daa
add
mov
ja
fisubl
lock
dec
pop
fists
mov
fcompl
add
pusha
mov
dec
cmc
stos
mov
shll
in
xor
adc
scas
call
outsb
test
lock
and
push
int3
dec
flds
pop
add
and
jecxz
dec
cmp
fwait
xor
and
jmp
inc
lea
xorb
cmp
test
jnp
dec
inc
adc
mov
notl
lret
movsb
mov
xor
add
or
dec
jp
mov
sub
inc
push
icebp
jb
mov
adc
xlat
outsl
jg
fsub
inc
cltd
pop
lds
jno
jno
mov
cmp
inc
mov
push
addr16
out
js
popf
hlt
or
or
das
inc
mov
popf
dec
popa
cmpsb
gs
add
arpl
pop
leave
pop
xchg
xchg
mov
dec
xchg
int3
jl
push
into
sbb
jnp
imul
lret
xchg
repnz
mul
add
aad
adc
sbb
add
repz
pop
add
push
icebp
loop
outsl
fmull
or
mov
dec
push
pop
lret
not
cmp
int3
jecxz
ss
dec
xor
push
imul
lret
mov
jle
div
adc
dec
jae
cmp
aam
fstp
std
outsl
sub
sbb
shll
data16
int3
push
sub
mov
mov
pop
test
in
ja
lods
daa
push
into
movsl
mov
outsb
pop
ret
mov
jne
jl
sbb
jbe
imul
xchg
insb
sarb
xor
jge
lcall
mov
xchg
ret
pop
outsl
sbb
inc
movl
inc
inc
cs
and
push
fs
pop
loope
fucomip
dec
sahf
dec
cmp
lods
cmp
dec
inc
out
jmp
pop
daa
dec
cmp
stos
push
sbb
mov
sysexit
add
sbb
data16
movsb
mov
ljmp
stc
xor
bound
call
enter
cli
jl
xchg
adc
cltd
inc
arpl
lret
pop
push
cmp
cmpsl
adc
inc
mov
cmc
int
xorl
inc
jnp
aas
xorl
push
fbld
fcoml
mov
in
mov
ret
cmpb
mov
dec
fs
push
push
test
sbb
xchg
push
outsb
pop
pop
add
clc
push
push
push
cli
ret
data16
shll
mov
pop
sahf
arpl
or
sbb
mov
popf
inc
cmp
cmp
xchg
fsubl
ss
pop
sub
jb
jg
xchg
jno
int
lds
ret
test
and
xchg
sarl
push
or
fidivl
mov
movsl
or
mov
ficompl
lret
or
or
scas
sbb
dec
rclb
xor
xor
ret
push
outsl
popa
data16
pop
sbb
int3
js
jns
jmp
mov
subl
cli
sub
nop
pop
mov
jno
dec
push
push
loop
or
sbb
ss
push
ret
push
pop
rcrb
rol
mov
mov
insb
stc
rcrb
addr16
mov
lret
push
jnp
jl
dec
dec
ja
fdivp
scas
jge
xchg
sbb
or
mov
mov
int3
out
push
xlat
arpl
shrb
bound
xor
mov
xchg
pushf
shrl
scas
lret
aaa
imul
loope
imul
add
hlt
adc
test
dec
test
sub
jp
pop
add
adc
lock
sub
inc
pop
cmpsb
imul
mov
in
orl
cmpsb
xchg
push
dec
lcall
js
movsb
mov
mov
scas
jg
aaa
mov
xchg
lret
aas
clc
sti
test
mov
jb
shr
dec
mov
stos
dec
cmc
fscale
add
jmp
mov
lods
out
lods
jo
ds
cmp
jbe
out
sbb
mov
mov
mov
dec
sub
xchg
or
inc
sahf
outsb
add
ret
lds
or
adc
xor
add
mov
lods
mov
sbb
and
testl
popf
jl
pop
xlat
shr
cltd
gs
mov
les
adc
ja
sbbl
dec
lods
ret
mov
lgs
aad
pop
repz
dec
enter
xchg
or
push
dec
add
mov
jno
adc
hlt
js
mov
xlat
mov
mov
or
nop
pop
or
adc
sbb
stos
add
mov
jb
sbb
rcrl
xchg
mov
fwait
stos
mov
xchg
add
push
scas
xchg
popf
cmp
and
sub
inc
js
iret
pop
jl
sub
xor
push
sub
sub
push
call
and
pushf
mov
adc
out
popa
aad
mov
mov
or
fbld
jg
mov
imul
out
push
sbb
xchg
imul
jle
jecxz
or
cmp
in
jl
push
xchg
xchg
rolb
cltd
dec
cmp
or
sahf
xlat
sti
loop
call
xorl
imul
test
cli
inc
fimuls
jecxz
orl
scas
sahf
push
push
inc
jle
aad
jno
jne
mov
jbe
outsl
mov
and
push
mov
frstor
mov
adc
test
xchg
and
and
adcb
test
or
inc
pusha
or
and
sub
push
or
sbb
mov
aad
pop
inc
dec
push
add
std
lods
mov
lea
negl
sbb
mov
rcrl
sarb
sbb
mov
in
jnp
sbb
mov
adcb
xchg
lahf
outsb
in
fmul
lds
js
jnp
out
or
sbb
mov
aam
sti
xchg
mov
push
leave
jne
cmp
aaa
jb
mov
dec
sahf
aad
lods
adc
xchg
inc
repnz
add
imul
cltd
pushw
insb
in
mov
mov
repz
test
sbb
mov
jb
or
dec
or
xor
cmp
and
call
loop
xor
push
sbb
sub
icebp
scas
push
cmc
sbb
dec
outsb
cmp
push
aaa
or
pop
inc
or
adc
insl
mov
pop
loope
xor
xlat
nop
movsb
lods
sbb
aam
cmpsl
sbb
sub
repz
insl
add
jge
shlb
pop
dec
xor
les
ljmp
lcall
mov
js
into
or
mov
mov
sbb
mov
lcall
xorb
mov
push
cld
lahf
test
pop
sahf
jp
fildl
mov
sbb
add
xchg
dec
dec
lahf
test
stos
mov
add
ds
mov
addr16
jl
push
jmp
jecxz
loopne
ss
cmpl
or
mov
mov
mov
mov
fadd
jnp
or
sbb
rcrl
inc
loope
mov
lahf
xchg
inc
sub
in
push
and
cmpsb
xchg
lods
pushw
imul
jmp
lcall
mov
scas
jp
mov
pusha
push
lock
mov
faddl
push
pop
lahf
jb
cli
dec
arpl
jnp
lret
pop
fucomp
jae
pop
jno
dec
fsqrt
sbb
pop
sahf
jns
outsb
test
and
stos
cmp
insl
fisubrs
jb
xchg
cmc
mov
mov
jg
adc
add
cmp
pop
fistl
pop
inc
or
mov
mov
jmp
mov
pop
cmp
cmc
and
aaa
int3
mov
iret
ret
lds
cmp
int3
inc
sub
icebp
sbb
subl
inc
cltd
lcall
js
stos
push
or
jno
sub
cmp
push
push
inc
mov
mov
mov
ljmp
mov
push
jne
data16
aad
sbb
in
xchg
call
addb
insb
dec
shr
sbb
adc
negl
mov
gs
test
test
ljmp
test
push
mov
xor
sti
mov
gs
loop
ficompl
dec
mov
dec
pop
cmp
div
ss
aad
xor
fcoms
addr16
jge
mov
mov
lock
xor
pop
lock
dec
jp
add
fwait
rclb
outsl
test
das
pop
es
sbb
cld
fmul
lret
and
negl
in
mov
out
adc
fcoms
jae
in
adc
inc
xor
pop
int
popf
mov
and
add
or
stos
pusha
adc
dec
mov
test
add
pop
xor
push
dec
xchg
mov
mov
jne
sbb
xor
test
addl
fiadds
pop
xor
xchg
mov
mov
stos
and
xchg
and
lea
inc
jno
leave
cltd
push
test
pop
dec
or
adc
or
aad
push
sahf
sbb
sti
pop
adc
call
add
aas
xor
enter
rol
in
fldcw
add
ds
inc
jne
sub
pop
sar
fistpll
dec
vpmuludq
movsl
adc
ret
pop
mov
pop
lcall
xlat
movsb
cmp
pop
xchg
adc
add
cmp
call
adc
sahf
in
mov
sub
lahf
test
mov
add
in
in
inc
out
push
jae
idivb
or
cli
nop
push
jmp
ffreep
push
adc
xchg
pop
and
ret
xlat
or
sub
ljmp
push
mov
mov
inc
ret
mov
pop
loopne
je
outsl
xor
jle
cwtl
fildl
push
or
adc
push
mov
sti
xor
ljmp
mov
out
gs
in
fwait
out
shll
arpl
xchg
inc
cmpsl
sahf
adc
sbb
fdivr
inc
mov
push
sub
xchg
xor
or
mov
pop
lock
mov
movsb
push
out
add
fidivl
cwtl
dec
add
jo
fucomip
loopne
mov
push
cli
cmp
insl
pop
dec
hlt
push
rorl
mov
mov
mov
out
aaa
pop
push
in
dec
adc
std
lret
dec
adc
sbb
mov
pop
scas
push
decl
stos
lods
fisttpl
pop
and
pop
nop
sarb
jno
test
xor
hlt
mov
lcall
repz
gs
sub
mov
pop
xchg
push
pop
mov
pop
shll
loope
push
or
cmp
xchg
inc
mov
jns
push
nop
mov
sbb
xor
adc
insl
and
loope
pop
jecxz
sbb
popf
and
jmp
loop
je
ljmp
addb
pop
inc
jle
je
repz
pop
mov
mov
jb
or
mov
icebp
out
shrb
mov
inc
sub
mov
js
mov
cmp
jo
or
add
push
push
movsl
cmp
popf
fdivs
in
xchg
cmp
gs
and
jecxz
adc
icebp
and
or
cltd
cmp
sbb
or
sbb
sub
jp
dec
pop
add
add
stc
dec
pop
pop
and
add
and
push
ss
jge
int
popf
pop
sti
push
mov
test
subb
dec
dec
mov
out
push
lret
repnz
push
cli
imul
loopne
push
int
xor
lods
daa
pop
mov
loopne
divb
popa
gs
or
imul
lods
cmp
mov
xchg
cmpsb
hlt
je
adc
and
cmpsb
hlt
cmp
call
js
sub
or
sub
push
dec
insl
add
push
fadds
xor
mov
or
mov
ss
sub
sub
mov
dec
stc
fwait
mov
mov
cmp
mov
xchg
scas
mov
jno
decb
imul
adc
cwtl
pop
mov
pop
insl
leave
mov
jmp
lds
sti
aad
adc
popf
int3
fcmovnbe
cwtl
xchg
cmpl
into
dec
dec
mov
arpl
fisttpll
loopne
xor
mov
sub
adc
xor
and
aaa
mov
push
add
and
pop
test
fistpll
jl
hlt
xlat
and
add
int
test
sbbb
xchg
out
add
push
inc
ss
push
dec
icebp
nop
sbb
sub
loop
sbb
lds
daa
out
in
repnz
cwtl
jb
push
addb
in
push
xchg
rcrb
fidivs
fidivrs
addr16
repz
fldenv
sub
push
xchg
inc
sahf
cmpsb
jmp
das
pop
popa
jb
insb
repnz
sbb
sahf
adc
inc
or
lds
js
and
sub
push
add
and
test
add
scas
jle
sub
jmp
sbb
mov
mov
dec
mov
int3
in
jbe
or
sub
pop
push
and
int
jge
inc
sub
or
bound
ret
fisttps
mov
nop
mov
gs
or
fsub
aam
decl
xchg
sbb
push
push
push
movsb
dec
adc
or
pop
ficompl
jno
mov
xchg
cwtl
in
aaa
xlat
and
xor
cmc
cmpl
outsl
or
inc
jo
push
pmaddwd
stos
adcb
mov
lea
cmpsl
mov
xor
aas
les
xchg
call
hlt
sub
mov
xor
lods
lods
inc
enter
pushf
in
add
sbb
jle
arpl
inc
mov
arpl
ss
sbb
lcall
sub
or
mov
sahf
test
pop
inc
gs
ljmp
mov
insl
push
mov
mov
mov
pusha
push
push
pusha
fisubrs
stos
jg
sub
cmp
out
andl
insl
fidivs
sbb
in
enter
lret
pop
test
out
add
mov
push
loope
xlat
inc
adc
shrl
mov
pusha
inc
les
sbb
mov
or
das
lahf
imul
adc
and
sbb
movb
lds
cmp
hlt
mov
pop
dec
dec
jne
fimuls
in
nop
and
xor
hlt
or
sbb
test
cwtl
dec
xchg
je
sbb
call
outsb
sub
jmp
sub
shrl
and
mov
mov
sub
xchg
fs
jle
outsb
or
scas
int3
push
out
sbb
scas
jl
fldt
adc
addr16
das
aam
xor
loope
adc
scas
jmp
mov
bound
pop
out
cmpsb
inc
jb
pop
and
jno
sub
lret
mov
cmpl
mov
aam
mov
jg
dec
push
inc
andl
jae
pop
dec
sub
shrl
add
scas
pop
test
cmp
jae
mov
movsb
loopne
inc
xchg
sub
in
jle
jae
xchg
fs
push
inc
sbb
and
cmpsl
sarb
mov
xchg
iret
pushf
ret
outsl
ja
cmp
dec
dec
and
ds
push
int3
repz
lods
sbbl
cli
mov
outsl
mov
ja
mov
xchg
addb
inc
dec
imul
mov
out
mov
inc
mov
call
mov
pushf
subb
mov
scas
inc
sub
sbb
add
add
pop
stos
dec
repz
adc
outsl
mov
pop
nop
mov
cmc
mov
or
in
sbb
andl
sub
cld
ja
js
or
and
mov
filds
leave
loope
or
in
xor
insb
inc
push
xchg
sub
in
adc
inc
cmp
mov
sbb
add
stos
mov
pop
inc
mov
imul
data16
xchg
lods
fildl
iret
pop
aam
and
xor
lods
mov
and
cld
add
mov
insb
sub
xlat
lods
shl
xchg
cmpsb
pop
pop
pop
xchg
bound
leave
mov
mov
out
bound
push
int3
mov
or
in
mov
sub
adc
sub
repz
or
mov
mov
notb
and
hlt
push
loopne
je
sub
sti
repz
cmp
popa
out
addb
xchg
mov
mov
bound
movsb
in
cmp
jne
aad
iret
xchg
xchg
push
xor
sub
imul
xchg
jae
pop
mov
scas
sbb
js
iret
add
stos
push
sahf
add
inc
rol
xor
js
test
jo
lea
mov
xor
sub
js
rcrl
jno
mov
aam
xor
fwait
shl
fisttps
inc
mov
outsl
push
aaa
sbb
addl
jl
push
push
add
sti
mov
dec
jmp
jge
addl
mov
movsb
mov
inc
enter
sar
mov
cld
insl
xor
out
push
insl
in
int
sbb
addl
movsl
mov
dec
in
es
xor
jge
cwtl
push
jo
adc
dec
out
mov
fldl
cli
mov
mov
mov
pop
and
adc
es
adc
sbb
repnz
jae
inc
xchg
insb
xchg
fs
cmp
dec
aam
push
adc
xchg
inc
imul
sub
gs
cmpsl
lods
lahf
sbb
push
out
and
in
adc
movsb
push
adc
out
movsb
lds
mov
adc
cmp
push
sub
cmpsb
xor
into
nop
push
mov
cs
or
shl
arpl
xlat
and
insb
fisttps
jecxz
aad
fcoml
xchg
jne
pop
mov
fistps
mov
sub
int
fistl
aas
push
pop
fimuls
leave
inc
test
test
dec
test
test
sahf
enter
jmp
or
pushf
inc
in
inc
and
lds
ret
shrb
in
lret
dec
xor
xchg
clc
lret
dec
nop
scas
pop
outsl
cmp
addb
fs
loop
mov
or
dec
adc
inc
lahf
and
leave
and
stos
test
pop
outsl
jmp
mov
cmp
loope
dec
adc
mul
sbb
mov
add
jl
aam
cmp
fistpl
pop
pop
xchg
ljmp
and
mov
sub
int
push
and
test
push
fsin
movsl
inc
or
pop
xor
cld
and
cli
outsl
sbb
hlt
leave
aaa
subb
fsubl
insl
xchg
ja
xorb
jns
ret
mov
xchg
shll
mov
dec
mov
jmp
shlb
push
lods
adc
stc
sub
loop
imul
or
lahf
push
add
fs
jbe
test
add
sub
adc
cli
sbb
jo
scas
xchg
xor
push
adc
or
jl
iret
push
push
mov
xchg
pop
cld
clc
push
sub
stos
xchg
test
popf
loopne
mov
sub
mov
mov
in
xchg
insb
imul
imul
ret
dec
sarl
mov
mov
adc
popf
mov
mov
dec
popf
cmp
sti
stc
out
cmpsl
bswap
fld
ljmp
andb
mov
mov
mov
imul
mov
mov
imul
sbb
movsb
pop
popa
call
inc
mov
or
or
lahf
xchg
mov
or
add
jnp
cmpsb
fldcw
lods
int
pushf
sbb
and
incb
arpl
js
or
push
aaa
shl
loope
mov
sub
push
shrb
jo
or
cltd
repz
jge
ljmp
push
mov
sub
xor
test
fistl
lods
sub
shr
sbb
pop
loop
cld
mov
adc
pop
fwait
arpl
mov
xchg
and
sub
fisttps
mov
xchg
mov
bound
punpcklwd
xchg
add
push
adc
out
mov
dec
sub
loopne
or
ljmp
push
add
and
push
test
sbb
int
jb
orb
je
mov
mov
mov
dec
or
fstps
or
xchg
stos
mov
and
pop
pop
mov
loop
movsb
push
enter
cwtl
and
push
mov
ds
pop
sbb
mov
xor
dec
pop
out
jle
call
jne
js
pop
subb
sarb
sbb
push
mov
mov
pusha
and
adc
test
and
movsl
jns
orl
popa
test
cmp
clc
adc
cmc
sub
mov
cltd
jmp
jno
push
adc
mov
push
out
es
sbb
jno
and
and
pop
mov
jb
sub
and
and
int
subb
mov
daa
jb
sub
sbb
pop
push
ljmp
or
mov
daa
xor
out
xchg
std
adc
insl
jp
inc
out
xor
stos
dec
outsl
int
inc
icebp
repz
jle
rclb
mov
imul
xor
scas
cmp
pop
mov
or
lcall
shlb
std
add
scas
mov
stos
adc
mov
sarb
jae
das
test
stos
sbb
cli
inc
mov
mov
les
sub
lret
mov
dec
daa
adc
push
cltd
jno
shlb
inc
outsl
xchg
adc
test
lret
lods
adc
add
movsb
std
inc
jg
test
fxch
add
sub
jecxz
shrb
jmp
jne
jl
outsb
pushf
pop
test
add
jb
mov
dec
mov
jl
mov
test
push
enter
movsl
mov
imul
lea
jecxz
cltd
xor
dec
and
inc
movsl
sub
pop
out
loope
int3
push
in
or
insl
cmpsb
cltd
pop
lret
push
cwtl
sti
jp
cmpsb
mov
dec
lea
cmp
ja
xchg
add
mov
mov
aaa
inc
shlb
jne
lret
sbb
addl
sbb
popa
ss
jp
mov
xchg
jl
das
mov
pop
repnz
bound
test
or
js
sti
push
inc
push
insb
add
dec
outsb
sbb
add
int3
lret
push
xchg
shl
xchg
xchg
or
add
imul
test
loopne
repz
and
aad
out
sbb
lret
jecxz
push
dec
ja
mov
enter
lds
daa
loop
pop
dec
test
push
xchg
mov
cltd
scas
rorb
jae
sbb
call
cmpsb
push
into
cmp
push
hlt
addl
and
push
lret
fadd
mov
addb
sub
add
mov
pop
mov
mov
push
cmp
lock
insl
jno
scas
stos
cltd
ror
iret
pop
sub
jl
xor
out
mov
stos
lcall
pop
push
lods
out
lods
and
xchg
mov
mov
lock
out
inc
push
insb
es
fsubrp
clc
cmp
in
xor
cli
fadd
test
or
mov
mov
or
out
mov
in
les
add
sub
pop
mov
pop
sub
mov
adc
scas
jo
in
dec
dec
lods
js
pop
std
cmp
insl
xchg
push
daa
faddl
adc
pop
out
dec
sbb
or
sbb
xor
inc
into
xor
push
insl
mov
push
out
lods
mov
or
xor
inc
add
lds
call
fisttpl
jne
pop
mov
cmc
jne,pn
push
fldcw
mov
into
insl
call
orb
sub
outsb
std
nop
jno
daa
inc
sbb
stos
out
test
lods
mov
pop
add
hlt
test
push
or
mov
adc
inc
jae
dec
adc
xor
fwait
inc
or
push
in
lret
cs
gs
bound
add
and
xchg
test
jo
xlat
test
jmp
mov
xor
notb
and
xchg
add
xor
sar
adc
cli
pop
jb
arpl
sbb
bound
shrb
push
hlt
mov
xchg
mov
sub
sub
pop
movsb
les
test
jbe
lret
pop
cmovae
mov
out
inc
xacquire
aaa
es
rcr
cmp
inc
sub
in
jns
xor
pop
jne
inc
call
clc
mov
or
lock
dec
hlt
adc
dec
inc
fnstenv
sub
push
add
dec
adc
add
jge
in
addr16
fwait
das
lahf
push
mov
jge
bound
xabort
rol
jnp
mov
test
xor
add
mov
or
lods
sbbl
lea
xchg
fnstcw
xor
jo
aaa
inc
subl
insl
mov
in
clc
nop
fildll
or
fstpl
std
adc
lock
pop
add
repz
lods
fists
jl
lods
addl
insb
jno
popf
dec
push
or
add
imul
pop
mov
xor
cmp
inc
xchg
shlb
inc
and
jbe
fwait
cmpsb
xchg
ja
inc
es
ret
xor
push
push
mov
iret
pushf
ljmp
arpl
push
and
jl
aaa
aas
push
ja
insl
shll
add
scas
jg
sub
popa
push
ds
xchg
sbb
mov
push
pop
or
test
mov
fimuls
jns
jmp
repnz
cli
xchg
sbb
popa
xchg
sbb
jecxz
mov
and
jo
sbb
push
mov
arpl
cmp
sti
mov
repz
imul
int3
lcall
cmp
dec
cwtl
dec
movsl
inc
in
pop
jo
out
push
fdivrl
cmp
imul
fdivrl
pop
push
stc
ret
pop
jp
mov
bound
xor
push
cs
pop
data16
stos
pop
add
jno
pop
cmp
ds
dec
sti
daa
or
mov
push
pop
push
dec
test
into
aad
dec
mov
notl
sbb
addr16
adc
xchg
inc
inc
or
sbb
fiadds
repz
ret
xlat
rolb
add
into
stos
rcll
shll
cmp
xlat
sub
pop
pushf
push
cmp
add
mov
adc
stc
push
pop
sbbl
xchg
jae
in
jmp
rolb
dec
mov
lcall
pop
loopne
cmp
ds
sbb
xchg
or
xchg
cltd
fcmovb
cmp
cli
mov
pop
sbb
inc
pop
repz
lds
stos
xor
add
mov
push
pusha
hlt
scas
into
sti
out
cmp
addr16
adc
scas
mov
lds
insb
int3
jle
cmc
lea
movsl
jns
lcall
pop
loop
push
mov
repnz
lcall
sub
sti
mov
lock
mov
jp
and
daa
xchg
addb
mov
xlat
mov
lcall
andb
sbb
or
outsb
mov
jmp
loope
sbb
ret
movsl
cmp
xor
xor
jge
mov
dec
sbb
aam
std
jne
sub
mov
js
sbb
out
ss
cmp
sub
adc
jnp
push
cs
inc
sbb
test
jno
push
das
push
mov
push
mov
and
inc
adc
mov
std
mov
jb
mov
fistpll
add
cltd
adc
and
and
push
pop
and
cmpsb
and
arpl
arpl
in
cmpsl
in
sbb
mov
adc
mov
jnp
push
jmp
cmpsl
push
push
sahf
mov
sub
fld
sahf
mov
je
int
add
cmpsl
mov
xlat
and
mov
mov
icebp
or
mov
jno
dec
mov
je
inc
je
movsb
fmul
cmp
mov
adc
push
pop
adcb
in
loop
sub
stos
int
or
mov
shl
in
loop
mov
pop
sbb
in
push
and
push
mov
sub
adc
addr16
push
ja
popa
insl
scas
sahf
mov
xlat
sbb
mov
inc
inc
pop
dec
in
out
addr16
mov
loopne
adc
ret
int3
lret
out
add
iret
mov
sbb
in
mov
xchg
xchg
pop
xlat
subb
sub
stos
mov
xor
push
shll
or
sbb
test
test
sti
aas
sbb
adc
hlt
in
je
sti
pop
rep
in
push
ret
cs
push
push
push
pushf
sub
mov
out
sub
mov
xchg
mov
pop
sbb
jge
dec
push
xor
cld
or
cmp
imul
pop
push
adc
pop
stc
insb
pushf
loopne
inc
and
xchg
pop
push
ret
push
dec
addr16
rcrb
rcll
cwtl
lock
mov
sub
xchg
dec
mov
mov
push
pop
vmovd
popl
push
xor
aam
loopne
mov
test
clc
inc
cwtl
adc
or
cmc
repnz
pushf
pop
popf
std
cmp
push
sbb
adc
adc
lock
xor
mov
in
sbb
lahf
jno
cmp
jmp
popf
loopne
xor
out
fucom
ja
int3
lret
jmp
pop
push
mov
mov
mov
scas
fidivs
loopne
sahf
jo
aaa
mov
test
pop
stos
dec
pop
xchg
jbe
arpl
xchg
sub
divb
mov
xchg
cmp
and
ss
cld
xchg
fcompl
bound
in
mov
aad
inc
arpl
call
popf
dec
sub
lock
push
fidivrs
arpl
dec
pushf
popf
inc
jecxz
mov
mov
xchg
insl
add
cld
movsb
out
fiaddl
repnz
cld
jo
ljmp
mov
rcrl
mov
push
lret
mov
xchg
jle
push
jnp
or
sbb
jecxz
jle
inc
and
popf
mov
mov
pop
aam
int3
aas
cwtl
and
jle
adc
fucomi
scas
xchg
mov
sbb
xchg
add
pop
addb
cmp
sarb
push
cli
sub
sahf
scas
mov
mov
sarl
cmp
push
aas
sub
mov
fistpl
aam
xchg
int
fcompl
decl
mulb
mov
call
xchg
inc
and
cli
nop
mov
sbb
jbe
daa
sub
push
in
fldt
in
and
mov
xor
cmp
aaa
cwtl
cs
lods
iret
jo
adc
push
pop
fidivrs
dec
jbe
or
test
lea
cmp
xchg
nop
dec
cmp
mov
test
dec
pop
cs
addr16
in
pushf
mov
cmp
push
jae
mov
push
push
iret
stc
lods
cmpl
xchg
and
shll
lret
xlat
fnsave
push
ret
cmpsl
test
cmp
repnz
mov
jo
ss
cmp
data16
mov
xchg
xchg
leave
fs
sbb
enter
adc
nop
push
add
ja
jae
dec
data16
adc
jp
mov
xchg
dec
icebp
fbstp
xchg
andb
cmp
ss
out
sbb
push
xor
and
push
arpl
inc
sub
adc
push
xchg
fs
fistl
lea
mov
pushf
mov
dec
bound
out
fs
cmp
out
cltd
mov
push
arpl
jns
stos
push
in
fcoms
add
sub
push
sti
out
mov
jmp
lds
jnp
pop
test
push
sbb
test
out
pop
scas
stos
push
mov
fsubrp
arpl
shll
add
es
sahf
or
loopne
sahf
jg
inc
push
rclb
add
add
adc
adc
ljmp
sti
jo
dec
xchg
jge
nop
add
dec
addr16
pop
jmp
sub
sub
stc
fistpl
and
inc
jne
pop
imulb
cmp
xchg
ds
and
out
adc
pusha
xorl
aaa
push
pop
cmp
aas
das
scas
lock
out
inc
push
orl
shrl
fsubrl
adc
icebp
sbb
hlt
mov
pop
cmpsb
inc
add
adc
test
sahf
xchg
jns
mov
sbb
push
enter
stos
test
sub
jle
pop
xchg
cmp
xor
sbb
and
lods
adc
xor
inc
jmp
mov
pop
movl
dec
and
pop
mov
int
dec
bound
sub
lock
push
push
test
outsl
fs
idivl
fimull
fucomi
adc
xor
add
push
mov
aam
xor
cmp
mov
push
jecxz
xor
sub
enter
out
roll
sar
iret
jo
enter
fcmovbe
ror
cwtl
addr16
inc
movq
mov
ss
pushf
imul
mov
cmp
add
pushf
sbb
fsub
push
call
insl
mov
inc
inc
adc
sub
imul
fs
and
outsb
pop
add
xchg
test
aam
popf
jecxz
dec
sub
xor
mov
jecxz
xor
int3
xchg
sub
lods
mov
out
jp
add
inc
lcall
push
xor
fwait
cmp
dec
mov
test
ret
pop
fsub
lods
jge
push
pop
mov
sub
adc
pop
or
in
stos
pop
shlb
mov
pop
push
mov
leave
add
out
popa
xor
cmp
xor
scas
inc
dec
pop
push
test
mov
inc
dec
ss
daa
in
ror
and
push
and
mov
scas
shlb
sbbl
push
jbe
pop
mov
xchg
inc
mov
rorl
add
test
out
repz
xor
std
jp
mov
cmpb
fdivs
dec
sbb
les
adc
pop
pushf
into
pushfw
mov
mov
add
sbb
ljmp
je
test
fistpll
xchg
out
inc
daa
cmpsl
pop
arpl
test
jp
pop
xor
and
mov
sbb
xchg
jp
movsl
outsb
enter
scas
mov
xchg
fldlg2
jbe
sbb
or
test
cmp
jae
mov
or
mov
mov
movsl
int3
jl
enter
js
inc
push
adc
int3
mov
pop
lahf
adc
and
push
aad
movsl
in
adc
and
or
outsl
mov
mov
cmp
mov
and
mov
mov
ror
sbb
les
jle
xchg
aas
roll
clc
jns
cltd
mov
pop
test
gs
inc
insl
dec
scas
lcall
xor
cwtl
adc
imul
push
lea
xchg
mov
leave
xchg
rorl
xchg
dec
rorl
mov
sub
ljmp
mov
mov
dec
lods
mov
sahf
pop
add
cmp
and
pop
scas
xchg
lock
cli
mov
lods
adc
cmp
decb
add
insl
ret
dec
scas
leave
fisttps
stos
mov
xchg
jmp
and
jmpw
ret
adc
lcall
ficomps
out
inc
mov
inc
shl
dec
pop
mov
push
arpl
rclb
test
fistpll
lods
bnd
lret
andb
jb
push
cmpsb
sbb
fmul
dec
cmp
daa
inc
jo
ret
jbe
pop
pop
loope
loope
jae
mov
add
ljmp
jb
push
and
out
outsl
leave
das
sbb
cmpsb
es
push
mov
dec
push
pop
call
shll
cli
mov
lret
decb
pop
jg
pop
sub
push
mov
imull
adc
sub
dec
adc
loop
xlat
xchg
js
test
enter
iret
test
jl
mov
scas
cmp
sub
xlat
push
jne
cmp
cmpsb
sub
out
sub
cmpsb
mov
dec
add
push
sti
push
pusha
movsb
mov
mov
mov
cmc
ficoms
push
les
add
out
test
mov
mov
and
dec
push
inc
scas
fldenv
and
push
jae
inc
and
jge
cmp
popa
aam
push
fidivrl
in
dec
mov
cltd
pusha
cs
mov
pop
sbbb
cwtl
add
mov
scas
mov
and
fldt
loopne
in
rorb
push
jb
lds
insl
dec
sbb
xchg
sub
arpl
sar
dec
cli
popf
or
inc
adcw
enter
nop
cs
out
mov
lcall
cmpsb
mov
xchg
xchg
mov
in
sbb
jg
scas
insl
mov
dec
fisubrs
xlat
add
mov
in
cmpl
jmp
nop
js
jle
addr16
and
dec
mov
out
jne
dec
jle
push
shr
xchg
add
jecxz
test
pop
rcr
enter
jae
ret
cmpxchg
pusha
ss
arpl
insl
cmp
cmpsb
mov
loop
dec
cs
dec
jb
fisubs
outsb
aaa
rolb
rorb
ficompl
aas
shl
jg
pop
add
sbb
add
sub
in
xchg
jbe
xchg
pop
push
aam
inc
shll
jb
sbb
pop
fs
cmc
sub
push
popa
add
dec
mov
movsl
xchg
loope
xchg
and
sahf
out
jno
das
add
dec
or
mov
xor
mov
push
mov
sub
sbb
xchg
push
add
sub
mov
dec
or
cmp
jge
pop
inc
mov
outsb
into
adc
mov
xlat
in
jecxz
push
mov
pop
inc
mov
gs
mov
mov
xchg
cltd
cwtl
ja
jl
iret
repz
xlat
flds
jo
xlat
addr16
movsb
pushf
push
fs
mov
pop
dec
subb
stos
xor
jecxz
mov
js
fstpt
loope
inc
aam
cmpsb
cld
dec
push
mov
in
bound
outsl
xchg
push
jae
inc
scas
xor
sub
pop
inc
jmp
jmp
mov
and
push
fxch
and
in
mov
jne
int
cmp
xor
mov
dec
adc
dec
sbb
mov
ret
pusha
and
lcall
aam
ja
push
cmp
xlat
xchg
aad
add
testl
sub
movsb
fdivs
cli
push
fnstcw
insl
push
cmp
loope
sub
mov
dec
sub
pop
jle
daa
mov
and
sbb
sub
cld
xchg
shll
lods
in
sarl
test
es
cmp
daa
or
ret
inc
inc
out
mov
pop
cli
pop
cwtl
sahf
xchg
hlt
in
in
pop
xorb
mov
jnp
es
lock
cmp
pop
imul
sub
daa
dec
mov
les
addr16
cli
fistpl
xchg
xchg
dec
js
mov
cs
xchg
fildll
and
shrb
xchg
imul
out
sub
repnz
sahf
xor
dec
sahf
jp
sub
sti
aaa
xorl
sub
inc
push
loop
and
xchg
fadd
das
je
addl
dec
bnd
movsb
push
push
and
push
mov
push
xchg
push
or
push
dec
pop
xchg
dec
into
jle
inc
test
xor
inc
shlb
xchg
or
jns
push
fmulp
adc
push
inc
repz
ss
xchg
fs
call
jge
fstpt
pop
push
dec
mulb
jbe
inc
pop
pop
mov
mov
inc
pop
mov
mov
rcr
pop
push
out
and
testl
pop
into
cmc
xchg
pop
lods
ret
jnp
or
imul
sub
jmp
test
jne
jl
out
xor
test
call
lods
lcall
ja
dec
dec
sub
aas
insb
sahf
std
push
stos
fcomps
rcll
xchg
mov
ret
pop
and
sbb
js
das
mov
mov
ljmp
inc
pop
mov
pop
sbb
cmp
jmp
push
cmpsb
lock
leave
xchg
mov
push
pusha
sub
adc
test
out
addr16
gs
enter
cmpb
dec
mov
sarb
leave
cmp
insl
nop
or
lret
sbbl
push
mov
adc
push
mov
ret
lahf
pop
ljmp
xor
mov
bound
mov
jne
std
mov
inc
adc
push
imul
xchg
pop
jl
pop
popa
sbb
cmp
sub
stos
test
fwait
mov
ret
cwtl
out
sahf
cmp
and
pushf
jns
lock
shr
lods
lock
xchg
stos
push
xor
popf
out
popa
rcrl
pusha
popa
mov
cmp
insl
jl
rorl
cmp
mov
mov
or
call
push
bound
inc
je
push
das
inc
shll
ffree
cmpsb
mov
push
xor
fiaddl
dec
dec
sub
inc
xchg
jmp
or
sahf
inc
enter
pop
xchg
fistps
jmp
adc
popf
add
cmpsl
xor
xchg
mov
jo
jb
and
sub
xor
xchg
sbb
push
mov
xchg
enter
xchg
test
or
mov
loop
jns
lret
jp
xor
gs
outsb
push
inc
mov
pop
movsb
jecxz
addr16
int
xchg
push
adc
fdivl
and
push
fisubrl
ret
jle
adc
adc
inc
mov
pushf
lds
xchg
loope
popf
stos
aam
aas
pop
nop
push
cmp
push
adc
cs
add
xor
out
jae
lea
aad
add
sub
adc
xchg
sbb
scas
cmpsb
pop
aam
mov
mov
push
aam
mov
in
sti
adc
sbb
mov
cmc
lahf
xor
pop
cmp
adc
cmp
loopne
lret
enter
movsl
xor
sbb
cmpl
shlb
inc
pop
loopne
and
inc
mov
sub
clc
lods
rorb
mov
leave
mov
call
add
mov
ljmp
rclb
dec
leave
mov
sbb
fsubs
adc
in
mov
cmp
pushf
mov
and
ret
inc
cltd
outsb
sbb
movsl
lahf
hlt
into
xlat
sbb
adc
sub
mov
pop
mov
or
sub
loope
fldcw
ror
sarb
or
pop
mov
mov
outsl
test
cmp
sbb
ja
pop
cmp
jo
je
sub
test
jmp
xchg
xchg
dec
dec
repnz
ja
mov
outsb
dec
adc
cmpsl
stos
jae
jne
into
scas
dec
push
out
clc
mov
xchg
or
repz
cmp
dec
jecxz
xchg
stos
mov
fsubrs
mov
sarb
stos
out
jl
popa
jmp
push
or
sub
xor
rcrb
inc
pop
cmpsb
push
xchg
cmc
pop
ja
adc
rolb
pop
add
rorb
jbe
cmc
sbb
mov
pop
outsl
lretw
pop
loop
mov
inc
inc
mov
mov
inc
out
stos
or
sub
mov
dec
cltd
add
stos
fwait
mov
in
in
push
test
xor
pop
in
divb
sub
pop
pop
addr16
cld
mov
adc
cli
push
loope
add
lahf
inc
lods
lock
sbb
pop
imul
in
pushf
mov
xchg
ss
test
scas
aam
xor
sub
push
jns,pn
cmp
adc
jecxz,pt
cld
sbb
inc
sbb
push
jne
inc
mov
sti
loopne
mov
and
jno
stos
rclb
imul
stos
sarb
test
mov
push
dec
xor
iret
out
sbb
push
lods
or
xor
loope
dec
xorb
xchg
mov
push
add
and
aad
daa
mov
dec
test
sar
mov
pushf
mov
push
push
add
add
mov
out
movsl
inc
sarl
and
mov
dec
jns
push
or
jno
push
jge
push
lret
sbb
divl
pusha
inc
adc
lahf
js
pop
sbb
aad
and
shll
fcmovu
xor
mov
test
jp
bndstx
sbb
test
sahf
or
sub
test
pop
dec
hlt
aas
xor
cmp
loopne
fldenv
adc
jmp
or
push
iret
fdivs
adc
movsb
push
cmp
mov
mov
adc
ficompl
add
push
or
add
add
mov
inc
aas
scas
mov
push
outsb
xchg
cmpsl
sub
movsb
in
inc
shlb
js
fdivr
mov
and
push
fidivrs
data16
cmp
outsl
ss
mov
ja
cmovl
stos
cmpsl
fadd
pushf
aad
in
lock
dec
mov
cmp
in
ret
dec
aam
inc
outsb
imul
out
mull
fcmove
jnp
je
xor
repz
sub
dec
iret
lret
lods
into
push
push
cmp
mov
ret
and
addr16
repnz
lods
push
push
mov
mov
cmp
jns
jae
sub
mov
cli
in
femms
aad
sbb
repz
pop
scas
adc
jmp
int
xchg
adc
mov
aam
or
stc
adc
add
xchg
sbb
dec
push
jmp
gs
outsb
xchg
int
scas
ret
sarb
inc
rcll
pusha
in
dec
jecxz
hlt
ror
push
and
push
aam
fcoml
mov
pusha
fcomps
inc
add
jne
roll
dec
sbb
stos
jne
sbb
das
mov
mov
mov
sub
out
cli
fidivrs
imul
cmc
mov
sahf
adcl
or
cmp
pushf
cltd
pop
fdivr
jne
jmp
add
dec
xchg
sahf
shr
rclb
xchg
push
in
inc
imul
aas
test
int
jmp
mov
or
fprem
loope
loopne
repz
add
shll
rclb
dec
mov
ljmp
pop
mov
adc
fcomi
pop
testb
mov
rolb
xor
push
xor
fsubrs
cmpsl
add
mov
movsl
popa
and
xchg
popa
jl
pop
cmp
mov
jnp
lds
xor
xchg
js
je
mov
push
push
testl
mov
cmp
push
or
dec
addr16
xchg
insl
aam
pop
or
inc
add
jo
pop
es
stos
or
add
add
push
mov
jg
inc
stc
testb
hlt
in
mov
jne
lcall
pop
fimuls
xchg
pushf
lea
out
or
or
cli
sub
mov
lret
or
ja
shrl
adc
mov
pop
jecxz
mov
imul
and
inc
sbb
cmpsb
push
int3
mov
sub
cltd
ljmp
insl
mov
or
dec
fcomip
sbb
mov
pop
add
in
shld
and
imul
es
mov
jne
mov
addb
add
mov
pop
pop
push
mov
xor
cmpsl
pop
test
dec
push
fidivrl
push
adc
ror
dec
mov
cli
xchg
mov
mov
out
and
pusha
lods
mov
cmp
sti
pop
in
pusha
or
sbb
ss
ret
fldt
cltd
add
sbb
div
mov
push
lahf
je
sbb
psubb
mov
adc
mov
sbb
imul
mov
sbb
pop
push
test
insl
pusha
stos
jbe
or
lret
and
xor
push
stc
xor
clc
cmp
pop
and
push
lods
fucomip
mov
xchg
or
bound
jg
aaa
add
filds
pop
ja
jecxz
sbb
enter
jle
or
push
popa
adc
daa
test
stos
jecxz
xor
cmc
mov
xor
sbb
inc
stc
dec
cmpsb
cwtl
cmc
sub
jecxz
pop
jp
dec
xor
divl
nop
pushf
dec
shr
jl
cli
add
in
sub
fsubrl
or
stc
lds
cmp
push
jb
lret
fcompl
andl
test
jp
cmp
pop
cmpsl
mov
dec
inc
xor
mov
or
pop
cltd
cmp
jno
xchg
xor
pop
mov
insl
sub
dec
jle
sbb
nop
xor
popf
and
mov
lods
mov
scas
jp
or
pop
and
jl
mov
or
rcl
mov
cmpsl
cmp
pop
call
xlat
cli
popa
rol
scas
aaa
repz
jne
bound
inc
cmp
cld
jne
cmc
sbb
ss
add
mov
loopne
jg
imul
jo
sahf
jge
mov
cmp
stos
or
shl
and
shrl
mov
adc
addr16
xlat
or
repz
sub
sub
mov
les
hlt
sub
enter
leave
cs
push
dec
imul
sbb
sub
in
mov
xchg
mov
cmp
movsb
je
int
dec
fcoml
iret
ljmp
mov
push
dec
mov
mov
mov
mov
push
je
out
lret
pop
frstor
pop
jp
scas
sub
mov
sbb
faddp
pop
fsubl
cld
idivl
xchg
loopne
add
inc
ja
outsl
and
aad
xchg
dec
int
adc
pop
out
sub
addr16
adc
jbe
test
rclb
in
addr16
and
mov
jae
xorl
sti
fcomps
int3
cmp
dec
mov
cmp
adc
in
cmp
nop
out
jp
push
lods
popf
cli
mov
cmc
loopne
rorl
adc
xlat
imul
idiv
jecxz
ret
test
cld
insb
in
in
dec
push
adc
lock
lods
inc
in
scas
test
lret
repnz
sbb
jns
sub
mov
pop
mov
mov
xor
push
pushf
push
inc
sub
cmp
mov
shrl
enter
stos
cld
mov
jle
inc
fistps
daa
and
sti
fwait
insb
adc
inc
mov
push
jg
inc
fistl
jmp
and
out
push
fdivrl
addr16
fdiv
mov
test
push
sbb
imul
sbb
fwait
jl
sar
cmpb
cli
in
cmpsl
pop
cmpsb
mov
test
push
add
lahf
push
or
cmp
inc
les
pop
and
out
push
imul
mov
jnp
cmp
test
rcll
dec
pop
mov
xchg
daa
test
clc
icebp
xor
push
movsl
mov
and
or
push
dec
in
mov
dec
orl
sbb
push
mov
add
shll
test
dec
mov
adc
sbb
out
bound
ficoml
outsl
test
cld
cwtl
xor
sub
add
and
lock
adc
jmp
daa
push
cmpsb
jmp
mov
es
or
rcrl
push
push
xchg
cltd
lea
enter
jl
sub
lea
and
mov
push
mov
ret
int3
repz
xchg
lret
es
dec
adc
pushf
sbb
divl
outsl
jnp
mov
mov
jge
shl
push
xchg
jae
rorb
outsl
mov
lret
mov
dec
pop
scas
inc
xor
jnp
pop
cmp
jle
jne
push
out
pop
mov
adc
enter
push
sbb
int
mov
cmp
roll
arpl
popf
test
ljmp
push
or
sbbl
int
cld
jb
cwtl
or
cmp
jmp
stc
sbb
rcll
dec
cmp
idivl
inc
xlat
enter
lahf
mov
out
push
push
jg
fistpll
and
and
mov
frstor
cmc
lret
mov
test
add
fidivl
xlat
sub
jb
push
mov
mov
mov
mov
cmp
in
stc
cmpsb
outsl
lods
sbbb
and
in
fs
sti
or
out
dec
jnp
fstpl
jae
imul
sti
jge
pop
and
jne
jne
sti
faddp
push
push
and
xchg
hlt
aas
mov
mov
iret
pusha
inc
push
mov
incl
push
lret
loopne
jp
ljmp
mov
and
mov
mov
test
add
aaa
imul
fistpl
and
in
xchg
xor
and
aad
mov
call
out
fisubs
pop
shrl
int
inc
mov
mov
pusha
cmpsb
pop
mov
scas
pushf
lahf
push
leave
mov
cmp
call
inc
daa
rcrl
iret
and
push
mov
dec
adcl
fst
or
jbe
out
ss
or
cmp
repnz
xchg
lahf
inc
loope
clc
sahf
jl
sbb
out
rorb
sbb
insb
sahf
pop
push
insl
jle
xchg
aam
addr16
jbe
stos
es
inc
lock
nop
and
jl
adc
leave
pop
push
pop
pop
int
pop
in
aam
push
inc
enter
dec
leave
aam
pop
outsb
insb
cmpsl
cmp
jmp
sub
imul
mov
into
in
jle
mov
push
jg
adc
mov
xchg
jne
inc
push
xor
jno
int
imul
mov
out
rcrl
imul
add
cmp
mov
adc
fwait
les
ret
xor
iret
subb
jmp
shrb
daa
mov
lds
dec
aaa
movsl
cmpsb
inc
shll
int3
xor
push
push
inc
maxps
jmp
sub
pop
je,pn
sbbb
fbstp
arpl
jns
xchg
mov
cmp
out
clc
mov
cmpsl
adc
xchg
push
jmp
icebp
ss
sbb
sbb
jle
or
mov
mov
sbb
mov
push
lret
xacquire
cld
mov
lods
adc
mov
leave
push
cmpsb
jno
push
mov
xorl
inc
lds
mov
pop
xor
test
stos
cmp
xchg
lret
pop
dec
sub
push
das
scas
data16
and
push
rcr
jbe
shl
jmp
les
sub
insl
or
scas
dec
mov
jg
pop
lahf
repz
xor
add
push
data16
out
and
int3
in
or
fwait
in
clc
mov
jns
cld
mov
sti
sbb
les
aam
or
adc
pop
nop
xchg
enter
addr16
daa
and
arpl
shlb
and
cmp
data16
sti
fwait
mov
mov
cmc
repnz
andl
push
jbe
popa
pop
shr
lea
adc
jae
dec
pop
not
fnsave
mov
xchg
cwtl
repnz
sbb
lods
test
in
das
test
mov
pushf
pop
add
mov
mov
mov
or
add
fwait
imul
jp
xchg
push
stos
cli
adc
jnp
fidivrl
xor
push
mov
adc
aaa
mov
and
jne
sub
dec
xchg
or
test
ret
mov
pop
mov
gs
lds
sub
mov
pop
jecxz,pn
rcrb
pop
sub
lods
sbb
fildl
jmp
in
jno
aaa
xor
ja
je
adc
push
lds
jp
jmp
jne
inc
aam
scas
push
test
inc
or
fcomps
jmp
inc
cs
adc
sahf
and
mov
outsb
dec
mov
pop
push
jle
push
xlat
push
mov
inc
sub
je
scas
sbb
fistl
xor
push
pop
imul
or
gs
out
cmc
popl
std
dec
dec
out
jmp
movsb
movsl
or
xchg
push
repnz
stos
scas
scas
cmc
std
xchg
loope,pn
jmp
mov
cmpsb
mov
mov
mov
mov
push
jle
insb
mov
cwtl
aam
in
pop
mov
fldt
bnd
mov
cmp
cmp
jge
jp
call
push
dec
lds
in
push
loop
ficomps
add
je
pop
insb
jo
les
pop
notl
js
fisubs
roll
dec
jmp
mov
repz
lahf
aam
hlt
jnp
or
jp
inc
lods
cmpsl
mov
add
sbb
mov
sbb
out
cmp
mov
pushf
dec
adc
and
ss
shll
test
inc
push
mov
mov
inc
cmpsb
int
inc
insl
xchg
lret
mov
or
adc
loope
stc
inc
test
movsl
movsl
or
xor
pop
sub
test
lock
push
and
addb
int3
arpl
in
jno
scas
cmc
and
jge
mov
sbb
scas
dec
mov
mov
out
cli
jbe
lret
cmp
adc
xorb
js
mov
jne
in
bound
pop
movsl
mov
xchg
and
adc
pusha
sbb
sbbb
pop
test
pop
push
xchg
cld
cmpsb
lret
loope
inc
pop
ss
orl
daa
shlb
xchg
jmp
in
jbe
cltd
add
cmp
mov
lock
and
dec
aam
clc
mov
cmpsb
aas
nop
pop
pop
inc
shlb
xchg
ljmp
shll
sub
sub
int3
jge
mov
xchg
jae
sub
int3
cltd
sub
pop
sbb
cmc
movsl
xor
fs
xor
pop
lcall
inc
cmp
into
loope
or
inc
sbb
test
lcall
mov
shll
cmp
addr16
fsubrl
aam
jp
jb
add
leave
les
ja
fsubrp
cs
add
mov
jecxz
andl
mov
and
testl
push
imul
pop
pop
mov
jl
fwait
or
imul
adcb
movsl
pushf
xchg
inc
pop
aaa
jo
jmp
xchg
cltd
push
xchg
push
jns
adc
clc
lods
mov
out
addr16
xor
loopne
outsb
push
and
mov
lcall
mov
mov
and
in
mov
pop
pop
and
sub
test
jae
shll
pop
inc
lret
dec
jecxz
jns
scas
test
cmp
aad
xchg
insb
ret
adc
or
fidivrl
mov
lahf
jnp
inc
sti
lea
mov
xchg
mov
out
iret
adcl
repz
cld
ja
xchg
fsubs
mov
test
inc
mov
ds
pop
pop
dec
or
cmp
and
repz
test
sub
loope
or
xlat
adc
cmpsb
dec
and
xchg
arpl
jl
dec
jo
add
xchg
mov
or
sbbb
shll
xor
stos
idivl
or
push
mov
fs
js
mov
xchg
and
cmpsb
call
nop
shll
push
in
fcmovnbe
jne
push
or
stos
mov
fs
jp
jg
cmpl
xchg
add
push
icebp
lahf
xor
mov
mov
push
jmp
sub
mov
push
cmp
fcoml
xor
jmp
mov
and
sahf
fisubs
fwait
ss
sub
sub
ret
jmp
xor
cmp
jb
and
push
lcall
sbb
pop
jl
lret
hlt
push
mov
aam
imul
inc
cmp
mov
push
repz
je
jge
mov
dec
out
mov
sub
sbb
sbb
jecxz
mov
fistpll
mov
fsin
jo
cmp
sub
pop
jle
sub
push
xor
shl
mov
fsubl
mov
jns
adc
pop
pop
stos
pushl
push
call
xchg
mov
outsb
xor
mov
mov
push
cltd
dec
push
add
aas
mov
ljmp
sub
ja
mov
js
mov
mov
fidivrs
iret
or
daa
mov
shlb
pusha
psubusw
or
cltd
sub
data16
pushf
mov
xchg
popa
push
sbb
repz
rclb
stos
fisubl
pop
pmulhw
or
push
arpl
cld
iret
sbb
cmp
ljmp
int
push
sbb
jae
ret
les
inc
sbb
or
sub
ret
out
jge
cmp
into
xor
pop
sbb
adc
sbb
fsubrs
sbbb
jmp
jbe
xor
outsb
mov
nop
iret
lock
mov
xor
mov
mov
movsl
aaa
aas
addr16
xchg
inc
mov
dec
dec
jge
setb
fidivs
or
push
and
sbb
pop
pop
cltd
mov
xor
jbe
cmpsb
sub
xchg
aaa
push
add
mov
lret
scas
shl
push
dec
stc
push
mov
fstpl
dec
mov
xchg
enter
pop
inc
dec
or
dec
xchg
sub
sbbl
outsb
mov
andl
xchg
jno
push
cld
loope
frstor
sbb
es
mov
adc
fwait
xor
shll
xlat
jb
sub
test
std
sub
xchg
rcrb
mov
cmp
mov
jle
jecxz
insl
xor
jmp
lods
pop
loop
out
arpl
xchg
mov
test
push
das
scas
enter
xchg
pop
cmp
mov
cmpsb
inc
roll
cmc
repz
jg
jle
cmpsb
arpl
push
leave
adc
les
sbb
mov
dec
int3
imul
enter
and
movsl
cwtl
pop
out
inc
movsl
fxch
bsr
sub
jb
test
add
out
dec
aas
ret
lret
add
dec
into
pop
add
mov
cmc
xlat
mov
cmp
dec
sbb
dec
dec
lea
xchg
sahf
bound
fcoml
rcll
aas
repz
popf
cmp
clc
mov
sti
cmp
sub
mov
fcomp
repnz
push
jge
sbb
jmp
jno
add
or
lock
sbb
cltd
mov
fsincos
lds
mov
sub
adc
lahf
aad
loopne
fwait
int3
add
outsl
nop
outsb
loop
into
cmp
les
scas
mov
fs
xchg
mov
dec
adc
icebp
sahf
mov
push
jp
mov
mov
xor
cs
lods
sub
fistpll
adc
xchg
cwtl
insl
xor
pop
cmp
xchg
pop
push
adc
nop
hlt
bound
xchg
push
mov
leave
fmulp
jg
fidivrs
cltd
in
cmp
enter
mov
and
ja
mov
popf
cmpsl
inc
nop
xor
fisubrl
cmp
xchg
pop
adc
sbb
mov
or
cmc
adc
and
jno
xchg
dec
fwait
xchg
jbe
adc
fstl
adc
jns
test
in
xor
sbb
out
cmpl
pop
popa
scas
add
jb
aam
xchg
mov
call
repz
test
shlb
js
lcall
mov
inc
jo
mov
add
mov
jle
aas
les
out
fwait
aam
sbb
cmp
test
cmp
insb
mov
jg
lds
fcmovnb
orb
dec
inc
push
and
cmc
mov
pop
lcall
aas
add
and
lret
jle
push
mov
sahf
jmp
js
subl
mov
dec
mov
xor
popf
push
dec
scas
push
dec
sub
popa
xor
filds
das
loop
cmp
sub
sbb
movsb
pop
push
jbe
xor
fxch
push
pop
jbe
cmp
pop
push
cltd
push
addr16
gs
out
sub
bound
insb
out
mov
or
mov
addl
add
in
adc
jmp
xlat
aaa
sub
mov
aad
stc
scas
pop
ss
pop
dec
cmp
mov
pop
cwtl
or
adc
jb
bound
int3
dec
test
mov
sub
jne
inc
push
push
arpl
mov
scas
sub
adc
enter
jecxz
outsl
cmp
sub
rorl
rcrb
mov
sbb
push
mov
imul
jle
sbb
bound
lcall
mov
aas
adcb
and
xor
lcall
es
xchg
sub
sbb
dec
in
repz
mov
repnz
mov
lods
cmp
sahf
ret
push
popf
push
cli
ja
xor
pop
fisubl
push
adc
adc
mov
xchg
inc
push
push
add
mov
iret
sub
outsl
adc
push
hlt
xchg
mov
jmp
sub
lods
psubusb
shrl
dec
mov
or
icebp
cltd
aad
and
inc
adc
imulb
jl
push
ret
mov
ret
ret
pop
jno
ret
sub
xor
test
fwait
cmc
push
shrl
js
bound
mov
int
sub
test
inc
push
dec
cmpsl
mov
jne
test
mov
jecxz
sub
sbb
cmp
sbb
fstpt
add
mov
fcoms
dec
test
icebp
xchg
ret
out
jmp
inc
test
into
gs
sahf
inc
lods
dec
add
mov
xor
sahf
aad
mov
mov
iret
loope
outsb
loope
into
push
and
cmp
int3
mov
cwtl
push
or
icebp
les
dec
jle
cmpsb
xchg
pop
scas
insb
insl
jns
test
xchg
ret
sub
dec
adc
sbb
out
test
mov
jns
xchg
jle
inc
loop
cld
test
jmp
adc
cmp
add
pop
cmp
xlat
inc
stc
into
add
xorb
push
insl
mov
dec
sti
cmp
jle
loopne
loope
iret
cmp
mov
or
fidivrs
mov
dec
das
xor
cld
and
xlat
mov
mov
in
dec
popf
gs
mov
and
lock
fbld
inc
xchg
xchg
or
add
popf
test
push
push
cmp
mov
jg
rcrb
and
sub
sub
cs
icebp
subl
jbe
mov
jnp
or
pushf
test
xchg
stos
out
jo
mov
les
test
and
cmp
pop
test
out
scas
dec
or
rclb
dec
rcrb
adc
pop
xchg
push
mov
mov
fdiv
gs
enter
clc
cmp
jle
lea
mov
push
sub
repz
inc
add
insl
lret
lods
jne
movsb
adc
pop
pushf
dec
adc
cmc
arpl
mov
push
xor
scas
stos
fsubrp
push
inc
cld
cmp
sub
xor
loopne
stos
cmp
sbb
cmpsb
inc
jl
aad
and
insb
and
mov
outsb
pop
addl
mov
data16
cmovnp
xor
imul
pop
call
cmp
pushf
test
mov
fcomps
or
push
push
inc
inc
scas
or
mov
lcall
cli
mov
push
pushf
mov
sti
mov
daa
or
xchg
loopne
mov
fs
out
dec
in
adc
mov
inc
das
or
scas
fstps
mov
jge
cmc
ret
sbb
lds
scas
cmp
pop
aaa
xor
test
add
fcmovnb
test
mov
js
lcall
arpl
stos
enter
out
mov
in
mov
cld
in
stos
cmp
loop
ret
arpl
subb
push
mov
cmp
pushl
push
sbb
int
adcl
inc
fisubs
lret
push
add
xchg
fmuls
sub
sub
pop
xchg
ljmp
xchg
xor
mov
pop
test
movsl
dec
mov
xlat
sti
or
pushf
mov
adc
mov
int
mov
push
jle
imul
xlat
fdivr
in
or
test
lahf
sbb
cmpsb
pop
and
mov
cmpsb
adc
pop
cs
pop
or
ret
decb
call
mov
dec
adc
lcall
roll
adc
scas
xchg
shlb
jecxz
jno
xor
mov
fdivs
push
mov
sub
xchg
xchg
int3
adc
add
mov
pop
push
add
pop
stos
sahf
and
pop
gs
mov
lea
sbb
std
repnz
sbb
daa
ds
mov
inc
pop
xchg
es
lret
int3
pushf
mov
or
sbb
push
jecxz
jp
hlt
dec
lods
mov
jp
aam
xchg
inc
mov
out
mov
jecxz
ss
or
repnz
in
test
cmpl
shll
sub
pop
fisttpll
aaa
ret
mov
cmp
dec
cld
fistps
push
add
popf
pop
xor
cmpsb
sub
jmp
push
imull
xchg
inc
dec
in
div
push
shll
xchg
jg
arpl
pop
fiadds
sbb
dec
pop
push
cmp
outsl
shrb
jl
lret
mov
fists
lahf
jb
mov
mov
xchg
loope
fs
into
test
movsb
call
leave
sarb
push
jecxz
xor
xchg
push
fsubrp
or
pop
xorl
push
pushl
push
lea
test
icebp
leave
xchg
mov
mov
outsb
sti
rcrb
push
and
stc
dec
pop
pop
xlat
sub
fistl
in
clc
mov
es
pop
inc
add
push
out
cwtl
xlat
cmpl
or
adc
sbb
rorb
cmp
and
and
shrb
sub
cmovp
lahf
fwait
in
shlb
xor
int
add
jmp
notb
inc
adc
jle
rcr
sahf
pop
inc
push
jne
mov
nop
dec
dec
lcall
enter
aad
cltd
add
add
clc
adc
aad
xor
adc
sbb
jl
cmc
jg
insb
test
lock
insl
stos
pop
out
out
sbb
pop
and
out
out
lret
pop
aam
mov
and
iret
and
push
or
pop
negb
test
pop
inc
mov
rcll
pop
aas
mov
xor
repz
mov
shr
lea
jns
pminsw
lcall
lret
sti
push
hlt
and
leave
in
sub
xchg
xchg
repnz
je
mov
sub
xor
movsl
lret
dec
fcompl
mov
stos
lret
lods
xchg
lret
divl
leave
or
dec
adc
cs
cmp
jg
imul
xor
xchg
movsb
clc
cld
push
sti
sbb
mov
fdivrl
or
ss
or
inc
sub
or
stos
inc
fwait
cmp
pop
outsl
inc
movntq
sub
aaa
cmp
add
mov
jge
sbb
mov
and
je
mov
push
rclb
add
lcall
inc
sub
jo
mov
ss
aam
jecxz
mov
dec
enter
out
nop
les
sub
stos
call
dec
fdivrl
sbb
rcrl
imul
and
sti
or
dec
cmp
leave
daa
scas
jge
ja
in
das
aaa
fld
lret
xchg
jne
dec
dec
ret
adc
xlat
arpl
fwait
out
fidivs
ljmp
dec
xchg
jp
jge
aaa
push
cmpsl
sbb
popa
jo
insl
sub
outsl
test
or
pop
add
fstps
or
lock
push
shlb
mov
push
pop
nop
loope
jle
mov
cmc
ret
add
jae
adc
jo
mov
mov
mov
test
cmp
push
call
das
jo
icebp
push
daa
dec
call
mov
popl
mov
out
lods
or
fldl
push
cmp
ss
push
nop
jae
aaa
mov
scas
cs
mov
push
subl
add
push
adc
cltd
cltd
sbb
enter
dec
pop
jmp
mul
inc
mov
dec
test
pop
int3
aaa
divl
ljmp
xchg
mov
mov
pusha
push
sub
movsl
cmp
mov
adc
stos
fildl
stos
fldpi
jp
imul
mov
es
push
push
or
push
push
loope
clc
arpl
sub
cmp
and
imulb
xchg
sbb
ret
fsubr
jmp
dec
repz
adc
cltd
push
mov
inc
cmc
jp
lds
mov
adc
and
cltd
xchg
clc
gs
cmp
dec
mov
scas
xchg
mov
mov
dec
dec
popa
jmp
push
movsl
xchg
adcb
leave
jbe
mov
es
imul
dec
test
frstor
jne
xchg
mov
cli
subl
sub
and
fld
inc
push
in
push
mov
fwait
pop
out
and
mov
jbe
les
and
aas
cmp
inc
outsb
xor
scas
pusha
and
cli
gs
xor
ljmp
dec
lcall
pop
fwait
lret
push
lret
sarl
icebp
and
sahf
xchg
fwait
movsl
jp
sbb
pop
out
jo
mov
dec
jmp
pop
push
push
pushf
stc
pop
fidivrs
jnp
scas
cmpsb
test
xchg
out
sbb
aas
or
adc
xor
jle
jb
call
pop
fcmovnbe
fistl
fsubl
and
fs
decl
cmp
mov
lods
mov
call
addr16
push
call
mov
sub
lods
pop
push
xlat
sub
in
inc
xor
xor
repz
scas
dec
xchg
lock
mov
sbb
movsb
inc
ret
pusha
or
divl
xor
jge
dec
enter
mov
xor
mov
adc
adc
loop
xchg
call
mov
out
xchg
insb
lcall
nop
in
xor
outsb
push
out
jne
push
dec
out
inc
insl
and
sahf
loope
lcall
inc
adc
cmp
cmp
sar
pop
mov
cmc
xchg
jns
out
fdivrs
gs
push
sbb
push
dec
loope
mov
inc
pop
xchg
inc
adc
mov
aas
in
mov
dec
movsl
out
add
sub
out
cmp
rclb
in
cld
adc
rorb
movsb
into
mov
or
es
cld
into
pause
adc
loope
icebp
clc
inc
sbb
fcmovnb
add
test
push
jbe
xchg
lock
aaa
sbb
movsb
xchg
xlat
stos
cmp
adc
sbb
pop
test
fwait
sti
dec
stc
test
fistps
and
and
mov
cmp
xchg
mov
fwait
hlt
jo
jecxz
cltd
sub
push
fdivrl
test
insl
dec
sub
adc
xor
mov
mov
add
adc
dec
dec
enter
iret
push
icebp
mov
xchg
pop
and
pushf
mov
mov
stos
call
mov
decb
adcb
outsl
addr16
xor
dec
adc
cmpsl
push
ja
hlt
hlt
push
cmp
xor
test
xchg
push
xorl
and
xchg
fimull
cld
and
inc
dec
or
sbb
in
xchg
popf
inc
rclb
add
xchg
cltd
mov
rorb
pop
insb
std
xor
scas
lahf
mov
add
ja
push
sbb
test
outsl
shrb
ds
fstl
cmpsl
adc
aas
fmuls
loopne
ret
lods
mov
mov
pop
mov
xor
cmpsb
jae
ja
repz
adc
loopne
lds
inc
lods
push
outsl
dec
in
mov
aad
enter
fmull
lock
je
and
popa
das
test
test
lds
ljmp
lret
and
fstpt
mov
mov
inc
ror
and
mov
pop
mov
sub
lods
sbb
cltd
fists
fwait
pop
inc
add
pop
xrelease
adc
orl
mov
pop
sbb
test
fimuls
stos
dec
inc
roll
pushf
rorb
mov
cmp
pop
adc
int
std
push
sub
shl
jp
adc
jae
pusha
jp
loop
sahf
nop
aas
adc
mov
push
xor
test
aad
lea
lret
jl
jmp
jp
mov
jg
in
mov
out
and
fisttpl
pop
test
imull
xchg
popa
enter
or
mov
nop
mov
aam
mov
inc
xor
aad
ror
push
cmpsl
or
sub
push
ss
jmp
push
lcall
xchg
dec
dec
adc
jmp
mov
pop
sub
mov
xorl
push
push
sub
fisubs
push
movl
dec
imul
inc
fsubr
lahf
jecxz
mov
rcrl
add
jno
adc
test
jmp
mov
lret
cmp
push
jbe
dec
push
fs
jg
adc
cmp
adc
jae
pop
test
add
sbb
or
dec
jbe
pop
cmp
loope
fidivl
adc
ljmp
popf
pop
rcll
js
dec
test
jecxz
pop
mov
outsb
cltd
inc
out
nop
sbb
stc
cwtl
or
jb
mov
and
jmp
orl
outsb
xor
fisttpll
je
sub
add
leave
push
mov
addr16
jae
pop
jne
in
sbb
cmpsl
sbb
into
arpl
jae
sbb
and
es
add
vmovntps
fldcw
mov
jecxz
cmp
xchg
fldl
repz
mov
mov
js
pop
and
mov
or
pushf
sbb
push
sub
popf
cli
xor
aaa
addr16
cmpsb
call
repz
pop
dec
nop
rcrl
sub
dec
cmp
je
cmp
aam
inc
rcll
add
jae
leave
mov
fmuls
fstps
jbe
sti
cmp
sbb
mov
loop
clc
inc
mov
into
push
testl
xor
subb
pop
dec
push
xchg
bound
out
adc
aaa
lea
lret
stos
fdivrl
scas
inc
in
sbb
outsb
loop
popl
adc
push
xchg
mov
dec
xchg
mulps
jge
incb
mov
aad
push
and
fisubrs
int3
jmp
push
inc
lret
xlat
imul
cld
pushf
push
fwait
mov
mov
adc
adc
lret
test
stos
dec
xchg
dec
lods
adc
pop
lret
mov
push
sbb
xchg
f2xm1
lret
xor
pop
addr16
push
inc
hlt
add
sub
xlat
sbb
inc
fs
inc
sahf
adc
xor
les
lret
in
push
scas
mov
jle
ljmp
and
jle
cli
push
test
out
jae
pushf
fs
dec
cmpl
daa
sub
cmp
jbe
out
scas
int
ss
sahf
repnz
mov
adc
fstl
or
cmpsb
mov
stos
mov
aam
xchg
xlat
addl
int
dec
outsl
je
jbe
mov
xor
aaa
out
enter
lahf
sarb
and
leave
adc
int
push
adc
and
jp
and
and
in
sub
aaa
sbb
or
xlat
jne
mov
sub
pop
push
cltd
and
push
cmpsb
adc
fdivl
push
jae
and
call
fmul
jmp
jno
push
inc
shlb
mov
das
dec
xor
fimull
sbb
mov
dec
pop
aad
lret
push
pop
add
cmpsl
sti
rcrl
push
daa
pusha
push
lret
shl
or
sbbl
arpl
js
add
sub
mov
loope
rolb
cmp
sub
aad
aas
jnp
pop
inc
scas
cltd
sbb
call
xchg
xchg
pop
iret
sbb
inc
dec
pop
pushl
aad
test
bound
mov
aad
outsl
inc
or
and
dec
arpl
cmpl
cmp
jle
or
aam
movsb
mov
xor
popf
mov
sbb
std
xor
dec
subb
out
xchg
scas
lock
cmp
cmp
mov
and
adc
xorb
jl
testb
ja
je
push
imul
rcrl
movsb
fidivrs
pop
movsl
lahf
movsb
push
sub
or
mov
mov
mov
push
dec
fdivrp
jbe
mov
dec
xchg
push
and
or
jp
and
jnp
les
sub
mov
outsb
sti
scas
pop
ljmp
or
sbb
fdivr
push
sbb
repnz
mov
test
arpl
mov
daa
jle
jecxz
sub
aad
pop
sbb
imul
sub
sbb
mov
outsl
sub
xor
lret
jecxz
pop
cmp
scas
dec
insb
ss
mov
les
mov
sti
mov
pop
pop
xor
inc
dec
repnz
jae
mov
and
shlb
dec
into
enter
pop
sub
js
rorl
lock
or
xchg
addr16
data16
push
clc
jl
dec
jecxz
dec
pushf
inc
adc
push
ret
icebp
fists
push
pushf
add
cmp
dec
pop
adc
jnp
inc
shr
xor
jl
mov
cltd
lea
aad
mov
call
dec
add
inc
cmp
pop
xchg
lock
or
dec
stos
mov
xor
xchg
xor
popa
lods
aam
shrb
xor
push
pop
mov
cltd
inc
fcom
inc
mov
nop
gs
or
lcall
dec
push
shl
aam
push
test
push
shll
pop
xlat
dec
xchg
pop
loopne
repz
iret
mov
dec
repz
pop
outsl
cli
fs
lahf
iret
inc
gs
cmpsb
adc
mov
fildll
push
mov
pusha
fxtract
or
aaa
xchg
lahf
dec
loop
xchg
cs
and
fs
int
pop
pop
inc
pop
pop
xor
das
lock
xor
ss
xor
sub
les
and
rcrl
push
jne
sarl
scas
js
es
inc
jb
mov
mov
mulb
imul
pop
mov
addr16
add
adc
icebp
popa
add
push
daa
stos
cmc
add
faddl
cld
jge
imul
jmp
pushf
pop
mov
bswap
out
test
orl
xchg
jnp
push
arpl
in
mov
mov
or
mov
lret
fs
mov
in
push
jmp
lret
popa
inc
jle
adc
gs
dec
cmp
or
or
mov
fimuls
mov
jb
xchg
inc
mov
push
dec
or
xlat
adcb
sar
stos
mov
inc
push
or
cmc
lret
dec
sub
push
aas
cmp
gs
aad
es
push
lcall
leave
out
and
aas
mov
pop
into
icebp
xchg
push
cmp
filds
lret
mov
add
repnz
or
lock
cmp
stos
movsb
push
bound
cmc
fdivs
inc
lret
mov
aam
sbb
test
sbb
jecxz
sbb
popa
addl
push
cmc
lret
jmp
mov
das
xor
dec
lret
movsl
les
sub
scas
push
fcmovnu
cmp
cmp
push
mov
adc
lea
je
cmp
mov
lcall
mov
out
imul
add
aaa
andb
push
add
test
cwtl
inc
push
bound
je
neg
cmpsl
xlat
push
rcrl
jo
cld
dec
repz
inc
mov
cltd
inc
mov
nop
out
stos
rclb
add
cltd
jge
sti
pop
pop
mov
stc
sar
sub
fildll
ljmp
xchg
sarb
pop
and
xor
pushf
dec
in
and
fsts
pop
or
cmp
mov
mov
inc
daa
sbb
jmp
or
lcall
push
mov
inc
hlt
sub
ja
pop
mov
mov
inc
loopne
int
push
and
stos
push
cli
cwtl
pop
rcrb
call
loopne
pop
cmp
test
push
jmp
mul
mov
ret
jae
mov
sub
into
pop
dec
lds
xchg
in
lret
jns
dec
dec
push
sbb
dec
jp
ret
or
aam
push
inc
fyl2xp1
and
adc
enter
scas
imulb
push
adc
sti
inc
or
nop
les
or
pop
mov
dec
or
sub
fisubl
mov
push
xchg
dec
cmpsb
scas
lcall
sbb
lcall
iret
dec
mov
push
sarl
clc
call
xor
jge
push
add
pusha
es
xor
inc
or
mov
jb
jns
push
repnz
sbbl
data16
inc
in
lcall
mov
add
stos
stc
add
in
pop
cs
jae
mov
clc
lahf
jl
sti
jl
or
and
sbb
xor
push
xlat
mov
mov
out
fsubs
add
fidivrs
adc
jbe
push
mov
cmpsb
pushf
pop
jmp
or
ret
sub
dec
add
dec
push
jle
adc
ret
push
push
jnp
mov
cmp
lds
cmp
shl
scas
jecxz
imul
dec
ret
mov
and
lock
inc
add
idiv
std
inc
arpl
fsub
jg
test
stos
test
push
jnp
ret
cmc
lods
mov
std
xchg
inc
cld
outsl
cmp
andb
or
xchg
imul
pop
add
cltd
xchg
adc
dec
push
jnp
jl
fadds
cmp
jle
lds
push
cmp
dec
int3
mov
push
sbb
int3
cmp
shll
out
in
inc
insb
lret
sbb
mov
push
inc
enter
test
push
mov
or
pop
xchg
mov
flds
fbld
insl
shlb
mov
outsl
fdivl
or
inc
clc
gs
arpl
sub
lret
sbb
loope
cvtps2pd
lret
fildll
push
cmp
xor
out
sub
push
rcl
cmpl
rorl
xchg
pushl
shrl
icebp
mov
cmpsb
add
les
xchg
add
repz
or
mov
outsl
fnstsw
mov
fcomp
lds
mov
call
test
pop
sarb
insl
adc
xrelease
jbe
sub
sbb
adc
ljmp
push
cmp
bound
push
sbb
cltd
and
mov
sbb
xchg
shl
pushf
les
jge
je
lret
inc
dec
lret
sar
popa
fisubs
cs
sbb
sub
addb
fst
imul
dec
test
stos
arpl
mov
push
arpl
or
shlb
outsb
in
add
iret
inc
push
push
scas
sbbl
inc
cld
punpckhdq
sahf
sbb
cmp
pop
rcl
movsb
pop
add
mov
insb
ja
dec
pop
fcompl
pop
jle
or
cmp
fwait
and
hlt
xor
adc
xchg
push
inc
jmp
cli
xor
andl
mov
xchg
cmp
cld
sbb
push
mov
loop
or
jb
pop
inc
sbb
add
ret
jle
add
nop
scas
cmpsl
mov
js
push
mov
mov
xchg
adc
jecxz
sbb
push
clc
jg
or
add
testb
mov
inc
fcomp
xlat
lret
mov
call
fst
ret
outsb
fcmove
insb
stc
aam
arpl
pusha
sti
pop
ds
jnp
xor
push
mov
xchg
hlt
adc
stos
and
mov
push
aad
sahf
mov
dec
or
and
jle
sub
movsb
cli
pop
mov
in
sub
add
out
inc
bound
pop
pop
cmp
cmc
or
stos
sub
mov
or
sub
add
sbbb
in
add
push
push
addr16
adc
aam
mov
jo
movsb
and
mov
inc
xchg
fwait
mov
fwait
stos
mov
lods
adc
or
in
add
mov
aad
addr16
clc
jmp
lahf
pop
inc
lcall
mov
mov
aam
mov
into
cmp
jne
ror
xchg
stc
cmc
subb
adc
shll
mov
daa
ss
pusha
repz
or
push
add
mov
adc
mov
xor
lock
xchg
lock
xchg
mov
inc
dec
lret
mov
mov
adc
cli
insl
loopne
aaa
push
or
add
addl
xchg
out
test
test
nop
test
test
adc
sbb
jno,pt
jnp
sahf
popa
dec
mov
cwtl
mov
roll
and
lods
and
aas
stos
or
adc
test
ret
and
out
insb
cmp
mov
cs
mov
sahf
push
int3
or
add
insb
mov
in
mov
add
cli
add
push
outsl
or
test
outsl
leave
aad
pop
jno
fildl
into
push
arpl
jb
in
test
mov
cltd
pandn
jo
mov
orl
cmp
adc
sahf
xchg
repnz
mov
ljmp
or
sub
fwait
pop
fcom
scas
xor
xchg
inc
mov
mov
lcall
mov
sbb
jbe
cltd
and
inc
sbb
jl
into
in
xchg
das
dec
les
push
loope
fisubs
lea
push
dec
mov
lds
mov
cli
out
scas
mov
inc
repz
movsl
jp
sbb
daa
adc
cli
xor
divb
and
lahf
push
and
and
jb
insb
cmpsb
add
dec
cmpsb
push
mov
add
in
xlat
push
and
cmp
push
add
repnz
flds
mov
mov
addr16
das
inc
push
fwait
movb
dec
mov
int
mov
cli
sbb
fimull
inc
or
lods
movsl
insl
mov
filds
push
loop
xchg
ret
add
rorl
adc
mov
out
xchg
jae
mov
or
in
pop
in
fprem1
or
iret
mov
xor
fwait
jbe
test
push
push
mov
lock
xchg
iret
out
jbe
fs
arpl
insl
movaps
mov
sbb
cmp
cltd
pop
cli
cmpsb
fisubl
dec
dec
js
xchg
loop
test
and
push
add
fdivl
insb
adc
repz
jae
or
mov
test
bound
cli
cmp
sub
stc
mov
mov
fiaddl
loope
fistpll
mov
dec
mov
adcl
addr16
idivl
loope
enter
fcompl
or
pop
adc
popa
loope
sub
orb
sub
fwait
test
je
lea
xor
pop
rcll
in
mov
scas
movsl
push
insl
lds
test
push
aad
stos
imull
fistpl
aam
jno
jg
outsl
sub
ss
inc
loope
sti
cld
cmp
lret
push
push
loope
repz
jmp
mov
xor
xchg
xorb
into
dec
inc
mov
jb
xchg
clc
lcall
pop
mov
pop
out
sub
add
shlb
cmp
pop
push
sbb
jmp
daa
rcl
sbb
mov
int
mov
test
adc
pop
push
jne
mov
popf
inc
ss
pop
cli
int
xchg
jl
sbb
cli
shrl
out
popa
call
in
out
xor
les
jmp
stos
cmp
cld
add
lea
fstpt
jmp
movsb
cltd
sbb
mov
in
cmp
mov
pop
jmp
pop
xor
and
pusha
inc
ss
rep
sarl
jo
inc
fadd
clc
jl
add
jo
out
imul
incl
dec
inc
lret
inc
pop
mov
add
arpl
and
mov
and
xor
aad
jge
pop
sub
mov
test
pop
and
adc
fs
repz
and
add
xchg
pop
sub
sbb
xor
pop
out
pop
inc
rcll
insb
cmp
sub
xchg
cmpsl
mov
rorb
lret
jae
clc
sub
movlps
sbb
sahf
insl
jo
pop
lahf
pop
stos
sbb
mov
outsl
call
mov
or
add
inc
test
add
cmpb
adc
or
aas
sbb
sub
xchg
or
stos
mov
leave
xchg
ljmp
cmc
dec
mov
scas
dec
clc
movsb
push
hlt
lret
test
cld
push
out
pop
stos
stos
xor
loopne
mov
jns
xlat
aaa
cmpsb
push
mov
popf
mov
in
movsl
fbld
pop
mov
loope
mov
stos
icebp
enter
outsl
je
mov
cmp
push
sarl
outsl
sub
inc
jp
dec
shll
mov
inc
or
mov
fbstp
push
scas
cmp
inc
clc
cltd
xor
test
cltd
frstor
sub
pop
test
pop
pop
pop
out
lods
push
lcall
mov
mov
cmc
sub
fmuls
sbb
pop
mov
icebp
mov
cs
inc
push
mulb
push
popa
mov
in
cwtl
sbb
daa
pusha
sub
or
pop
sub
cs
in
cmpsl
jo
xor
dec
filds
stc
out
add
fstpl
stc
loopne
xorl
lock
dec
xchg
mov
xchg
jg
and
pop
jg
pop
inc
ret
insl
das
sub
mov
nop
dec
add
sahf
xchg
jle
dec
movsb
dec
loope
dec
shll
dec
pushf
dec
rcrb
jg
es
xchg
jge
rcll
push
call
lcall
ds
popa
push
dec
into
push
sti
mov
add
loop
xor
xchg
xchg
cmc
and
pushf
in
inc
jg
out
cmp
int
jo
rorl
cmp
aaa
imul
insl
fisttps
xchg
pop
xchg
pop
aad
mov
lea
push
in
and
sahf
sbb
shlb
xchg
inc
call
aas
nop
mov
sbb
mov
and
mov
and
aam
roll
inc
ffreep
jno
xchg
jle
scas
mov
push
push
aas
aas
retw
roll
inc
inc
insl
or
mov
aaa
imul
sub
repnz
mov
sub
out
aaa
sbb
sbb
mov
loop
cmc
jl
das
loope
sbb
push
mov
ss
jb
fs
lock
push
mov
cmc
dec
add
mov
push
outsl
adc
jns
fisttpll
rcrl
sbb
inc
stos
push
and
ss
inc
and
inc
fstpl
xchg
mov
lea
add
jp
mov
or
rep
jl
pop
mov
repz
sub
fisttps
ds
sti
xchg
mov
sub
pop
mov
sbb
out
xor
in
cwtl
adcb
or
push
push
pop
inc
fstl
sti
mov
pop
mov
and
into
dec
leave
cltd
je
sbb
and
mov
jge
int
imul
pop
shrb
je
fs
pop
scas
push
jecxz
lds
lea
lret
xor
mov
sub
outsl
lahf
cmpb
lret
sahf
mov
mov
sbb
repnz
imul
mov
insl
cwtl
push
addr16
mov
lds
fsubr
imul
movsl
pcmpeqb
rorl
rcl
xor
adc
cmc
push
rcl
cmp
or
dec
lods
ret
inc
jbe
mov
mov
pop
sub
or
push
xchg
inc
scas
jbe
cmp
nop
iret
xchg
inc
fisttps
dec
pop
imul
jl
lock
or
out
adc
xchg
sbb
lahf
mov
add
loope
push
mov
pop
ljmp
rcr
mov
push
lcall
sbb
cmp
sbb
sub
push
inc
mov
cmc
scas
mov
xchg
mov
lret
mov
mov
or
in
dec
jnp
je
sbb
insb
sub
push
add
into
loope
test
xor
repz
xchg
jg
pop
mov
hlt
inc
mov
sub
test
and
adc
add
out
stos
ret
out
mov
daa
nop
mulb
pop
xor
sub
inc
jl
mov
xchg
fs
add
adc
popa
es
adc
pop
mov
in
in
subb
test
iret
mov
xchg
push
ret
sbb
mov
mov
and
andl
jbe
insl
xchg
dec
fmuls
and
pop
sub
xchg
or
ja
dec
daa
inc
cmp
ds
mov
std
add
pop
fs
imul
icebp
inc
mov
add
add
fistl
xchg
and
sarb
movsb
loopne
in
mov
data16
jbe
call
jmp
fninit
mov
xchg
push
les
jns
and
shl
mov
jmp
pop
jne
mov
push
xchg
int3
cltd
arpl
mov
pop
pop
push
xchg
call
outsl
mov
mov
mov
sbb
cltd
sarl
in
xchg
adc
push
lahf
xor
aad
dec
jle
fsubrp
clc
punpcklbw
test
dec
clc
movsl
sbb
mov
add
pop
insb
or
pop
mov
stc
jb
xchg
xchg
cmpsb
mov
fcmovnbe
push
lods
es
insb
inc
cli
xorl
call
test
outsl
and
rcrb
push
gs
fcomi
gs
or
imul
les
sub
das
jl
or
cmc
outsl
ja
lahf
fidivl
lds
loopne
push
push
cmp
jmp
xchg
dec
iret
mov
ret
cmp
lcall
or
adc
xor
pop
test
mov
push
push
aas
and
cmp
sbb
lods
cmc
cmp
pushf
popf
stc
jb
jge
call
fiaddl
dec
inc
lcall
hlt
inc
aad
push
fwait
cmpsb
stc
xor
enter
xchg
or
repnz
into
add
adc
pop
les
xchg
sarb
fimull
xchg
xchg
repnz
mov
dec
push
xchg
sub
dec
testb
push
rcrl
sti
cmp
pop
stc
in
stos
stc
int3
jecxz
xor
hlt
popl
fdivrl
icebp
pop
fidivrs
cmp
mov
shll
fisubrl
pop
sar
or
cmp
fnsave
aam
loopne
iret
xchg
lret
bound
xchg
add
leave
nop
outsl
sahf
mov
iret
stos
and
cmpsl
lret
or
sub
sub
nop
aas
adc
cltd
fidivs
outsb
pushf
negb
roll
or
push
adc
repz
test
mov
inc
jg
jnp
imul
call
aam
or
adc
arpl
fsubs
je
rorl
cmpsl
pop
or
pushf
push
mov
inc
xchg
ds
xchg
xor
cmp
std
xchg
clc
jbe
notb
inc
outsb
outsl
repz
shl
aad
movsb
in
movsb
xor
cmpsl
mov
ret
push
pop
push
jno
add
out
inc
sbbl
and
xchg
ds
lods
jnp
sub
test
cli
lret
pusha
adc
fisubl
xchg
popa
mov
jmp
lods
cmpsl
shll
cli
jl
sub
sub
cld
movb
lds
inc
and
dec
std
add
sub
xchg
push
or
or
cmp
push
xorb
arpl
les
pusha
in
mov
mov
sbb
mov
aam
aas
sbb
jb
movsb
push
or
mov
icebp
pop
mul
adc
loopne
add
mov
jge
and
jge
mov
fsubl
in
xchg
dec
push
sub
jg
aaa
sahf
incl
sub
std
sub
and
or
sti
gs
outsl
push
aad
fdivrs
sbb
sbb
pop
sub
lock
sub
movsb
cmc
pop
xchg
popw
movsb
leave
or
setb
in
mov
push
push
xor
inc
cmp
dec
sarl
inc
jne
mov
or
add
ss
cli
sub
xor
in
inc
in
out
mov
mov
push
cmp
cltd
fldt
arpl
pop
call
lea
mov
cld
cmc
jle
mov
mov
and
aad
ss
pusha
lahf
rolb
out
lods
hlt
das
lahf
lea
cmp
test
aaa
inc
mov
dec
jno
push
insl
scas
je
cmpsb
das
jne
cmc
stc
clc
outsl
orb
push
sub
lahf
sbb
sbb
insl
cld
jecxz
push
fsubp
mov
ja
out
lock
loop
mov
adc
adc
stc
and
xor
mov
stos
les
dec
das
jae
push
outsl
xor
sub
cmp
xor
adc
mov
xor
adc
fcoms
jge
insb
bound
scas
in
mov
adc
pop
fildll
or
mov
mov
inc
xorb
loop
ret
imul
fisubrs
negb
fisubl
jb
clc
call
pop
mov
mov
int3
mul
xor
mov
xor
stos
cwtl
add
fwait
es
repz
adc
jne
xchg
cmp
add
into
inc
pop
add
adc
ret
addr16
xchg
sub
mov
jl
sub
out
data16
xchg
cld
dec
mov
subl
mov
cmp
mov
mov
testb
fstpl
addr16
dec
lret
lds
mov
dec
in
sbb
cmp
and
push
test
mov
inc
mov
adc
imul
push
in
sbb
outsb
rclb
jbe
mov
sbb
je
test
jmp
pusha
lods
sahf
mov
mov
adc
test
sbb
subb
add
test
cli
inc
sahf
fcmovb
lock
dec
sbb
mov
push
aad
cmp
paddq
lds
movsl
cmpsb
adc
inc
mov
sub
rolb
xor
std
lock
cmp
cmovne
push
nop
sub
in
pop
cwtl
adc
mov
jae
ret
cmp
cmp
mov
inc
push
sbb
dec
int
loope
pop
dec
sbb
outsb
jl
fs
loope
sar
popa
into
enter
scas
pop
in
call
cli
push
lret
addr16
push
mov
adc
xchg
xor
jae
dec
xor
mov
xlat
je
out
test
jnp
ss
sbb
push
adc
mov
lods
lahf
mov
fdivrs
or
add
jae
ret
and
mov
push
lods
nop
je
repz
scas
aaa
stc
aad
sbbl
sbb
cmp
cmp
imul
xchg
mov
pop
ljmp
mov
mov
or
movsb
jae
daa
mov
xchg
xor
jmp
or
sub
cmc
inc
or
cld
sti
jns
movb
clc
add
mov
mov
test
jl
xor
ljmp
dec
mov
mov
mov
lock
pop
and
stos
mov
mov
jbe
test
xchg
cltd
outsl
inc
scas
rcr
mov
dec
pop
out
out
int3
fcoms
popf
jae
mov
dec
mov
lods
cmp
mov
sbb
mov
and
fcompl
mov
cwtl
add
xor
add
loop
lcall
call
inc
jo
dec
inc
bound
xchg
in
aam
jge
loopne
je
pop
ja
and
pop
loope
adc
shl
pop
pop
ljmp
insl
pop
pop
jns
or
dec
test
mov
stos
dec
cmpsb
mov
repz
push
in
xlat
sarb
movsb
sub
mov
cmp
xchg
enter
dec
fstpl
jb
push
push
out
repnz
cmp
arpl
cmpsb
in
pusha
out
adc
xchg
ljmp
cmc
shll
enter
aas
dec
mov
mov
xchg
jns
ja
test
dec
cli
movsl
add
in
push
cmp
and
or
jbe
call
lret
push
jmp
pop
mov
xchg
stc
cmp
nop
xor
dec
fwait
add
lahf
push
lcall
mov
or
add
lea
sub
dec
ret
mov
arpl
dec
or
int
dec
in
rcrl
incb
fstps
push
std
into
test
cmp
rolb
andb
dec
les
sbb
sub
xor
cmp
mov
add
mov
sbb
rcrl
mov
push
in
roll
iret
arpl
xor
icebp
dec
fmul
int3
fwait
ljmp
ljmp
mov
cltd
adcl
cmp
sub
xchg
jg
in
adc
imul
lret
pop
clc
enter
mov
insb
sbb
sbb
cmpsl
mov
push
mov
xchg
mov
aam
sbb
xchg
mov
add
xchg
mov
in
cmc
call
push
repnz
bound
aam
je
mov
add
sbb
or
in
cmp
lahf
push
les
out
leave
cli
sbb
dec
in
pop
push
mov
dec
popf
inc
mov
lea
adc
divb
push
lock
adc
call
int
fiadds
mov
add
cmpsb
dec
out
pusha
sub
fsub
iret
mov
pop
mov
pop
xor
pop
xchg
sbb
add
or
xchg
jae
shlb
mov
movsb
mov
inc
adc
into
into
pop
mov
push
push
xchg
or
mov
or
movb
insb
pop
int3
lods
xchg
jle
addr16
xor
sub
testb
mov
cmp
aam
xor
pop
and
xor
jp
inc
dec
or
adc
js
inc
or
pop
and
cmp
mov
push
in
add
lods
rcrl
add
xchg
outsb
leave
push
out
xchg
xchg
lods
leave
js
fisttpl
aad
xorb
aaa
inc
mov
add
sub
mov
imul
push
push
enter
call
das
jo
dec
movsl
or
cmp
push
movsl
xchg
rcrb
pop
lods
push
adc
dec
sbb
mov
mov
aad
mov
aad
in
xlat
fsubrl
int3
mov
inc
cld
fwait
out
data16
out
xchg
mov
sub
add
out
lcall
add
lds
imul
popf
inc
dec
movsl
test
jnp
and
inc
iret
test
hlt
xor
mov
js
adc
mov
sbb
push
insb
mov
fsubl
ljmp
mov
add
cmpsb
dec
inc
aam
ljmp
lods
dec
push
call
inc
out
lods
fsubrs
add
adc
iret
pop
into
ret
insb
outsl
stos
lcall
mov
sti
or
pop
sbb
lods
lds
inc
outsb
bound
xchg
lea
mov
ja
jb
dec
addr16
shl
js
mov
shrb
mov
leave
pop
shrl
cmp
mov
cld
mov
jo
cmp
jb
or
dec
xor
popf
negl
adc
rorl
mov
inc
pop
dec
movsl
jae
cmovo
cmp
mov
into
aam
imul
or
mov
lea
mov
jbe
xchg
add
sub
xchg
das
mov
push
sbb
sbb
and
jns
mov
cmp
mov
cmp
movsb
outsb
mov
jno
add
es
jns
adc
lea
shrl
pop
test
imul
push
fdivrl
mov
xlat
push
mov
nop
xor
mov
lock
jb
xor
ret
xor
mov
pop
ja
call
cmpsl
fnstsw
dec
int
jb
add
dec
push
add
in
mov
lea
jp
out
test
xor
adc
cmp
shlb
dec
or
movsl
or
xchg
push
mov
jo
ljmp
pop
test
fs
outsl
fwait
mov
pop
jb
or
add
cmpl
mov
xchg
mov
incl
or
xchg
mov
or
out
mov
cmp
sub
mov
mov
add
sbb
and
jl
dec
dec
and
xchg
ficoms
repnz
adc
mov
popa
lret
push
mov
mov
cs
adc
frstor
jo
dec
je
call
mov
int3
and
push
into
adc
dec
mov
cmc
jbe
push
xchg
stos
mov
test
out
lret
xchg
clc
mov
test
addr16
inc
fstpt
loop
mov
shrl
fs
lds
jne
push
fmull
mov
cmp
pop
pop
sub
sub
and
jp
xor
fcom
push
pop
cmp
add
or
and
pop
dec
mov
and
cmp
int
in
xchg
rol
mov
or
xchg
dec
aas
stos
movsb
mov
xor
inc
aad
stc
out
pop
sub
mov
cli
mov
mov
xor
xchg
repnz
and
popa
lods
aaa
scas
pop
cmp
lcall
test
push
pop
leave
pop
adc
cmpsb
cld
adc
or
loop
mov
xchg
lds
outsb
push
sub
sar
push
or
mov
xchg
inc
jle
sahf
mov
add
adcl
or
filds
fiadds
or
xchg
or
lea
xor
jo
pop
cmpsb
pop
movsb
push
fstpt
arpl
xchg
mov
mov
fwait
lods
dec
pop
ljmp
adc
or
mov
daa
and
inc
dec
mov
inc
xor
cli
cld
and
pop
negb
xchg
inc
xchg
sub
flds
shll
es
hlt
ficoml
or
aam
out
int3
test
loopne
push
push
jg
in
inc
mov
rorb
scas
mov
mov
push
cmp
orb
fildll
out
push
mov
cmp
in
inc
hlt
sbb
rcl
ja
pop
popf
divb
xchg
xchg
mov
jmp
jbe
dec
ja
jmp
andb
sub
jl
lret
cmc
push
andl
dec
dec
xor
pusha
jg
cmp
les
aam
bound
adc
inc
in
xor
sub
pop
popa
aas
mov
imul
inc
and
dec
mov
push
loop
and
pop
outsl
pop
dec
stos
xlat
test
adc
stos
jae
loop
cmp
mov
jmp
movsb
adc
cmp
and
add
adc
pop
jg
lods
jae
hlt
mov
add
pop
ret
or
push
jo
jno
lea
and
jb
push
dec
frstor
sub
add
sub
loopne
fxch
pmuludq
dec
xrelease
push
pop
mov
loop
push
in
cmp
movsb
fwait
jae
es
mov
fs
mov
xor
adc
dec
add
jge
scas
arpl
dec
xor
shll
mov
cli
int3
dec
lahf
imul
cmpsl
test
push
add
xor
mov
jle
test
test
sub
fwait
into
fmull
fidivs
enter
out
negb
jo
loopne
mov
xor
outsl
push
stos
pop
xor
test
mov
out
jl
mov
pop
cltd
adc
push
pusha
aam
or
jmp
loopne
lret
adc
ss
push
mov
inc
fwait
dec
idiv
pusha
fstpt
xor
xlat
mov
cmpsl
xor
push
dec
fistps
sbb
pop
fsubl
sbb
mov
ret
dec
jo
stos
fiaddl
adc
adc
sub
dec
or
push
lret
sbb
xor
inc
cmp
decl
inc
adc
loop
inc
push
push
mov
lods
jae
mov
mov
je
dec
xchg
enter
aaa
jmp
push
adc
int3
dec
jo
fists
push
icebp
xchg
lds
pusha
add
or
xchg
jl
cli
pop
push
or
sbb
sub
mov
shrl
int3
mov
push
push
pop
and
sub
cli
xor
popf
into
jmp
mull
mov
ret
aas
lds
push
jb
xor
cmp
pusha
xchg
insl
in
and
cli
jne
pop
cs
add
jl
ss
in
jg
outsl
mov
cmovbe
mov
adc
call
cmp
lds
and
and
aam
mov
cmp
adc
rolb
sub
out
mov
bsf
rclb
push
inc
fisubl
mov
xor
xchg
jb
push
dec
xchg
pop
dec
xorl
sbb
mov
test
and
sti
mov
adc
loop
icebp
mov
add
repnz
pop
into
loop
shll
mov
arpl
icebp
sbb
rolb
push
jo
out
mov
pop
push
dec
lds
mov
daa
sahf
arpl
out
inc
out
mov
push
lea
out
cmpsl
adc
sub
and
call
add
adc
test
test
xchg
mov
sub
inc
adc
jg
cmpsl
push
mov
cmpsb
shll
xchg
test
fcmovnu
mov
add
jb
test
das
push
lret
push
ficoms
push
repz
xchg
inc
inc
adcl
gs
adc
std
cli
mov
in
subb
fisttpll
xchg
jbe
push
lret
call
add
inc
pop
insb
push
mov
mov
mov
ret
cmp
push
mov
pop
mov
mov
jl
cmpsl
jne
add
ja
dec
mov
mov
lcall
mov
into
jns
es
pop
push
pop
xchg
dec
jo
pop
add
je
in
pushf
sbb
cld
popa
mov
sub
cmpsb
lea
ds
jmp
lds
adcb
sub
cwtl
push
mov
mov
aas
mov
push
faddl
fisubrl
cmp
sub
sbb
stos
sub
mov
jle
stc
dec
xchg
test
jg
pop
or
sti
pop
push
jns
pop
dec
mov
jb
jae
xor
add
sbb
popf
add
insb
mov
xor
jb
fdivs
push
stc
gs
outsl
in
cwtl
add
adc
aad
cmp
lcall
mov
mov
and
into
mov
sbb
add
xchg
test
jg
popf
mov
movsb
push
int
xchg
jge
sarb
xchg
es
mov
sub
jecxz
jge
and
xchg
or
mov
jg
inc
xor
dec
fsubrl
js
out
xchg
repz
push
mov
xchg
adc
cmp
hlt
sbb
pop
aas
inc
sbb
dec
mov
aas
cmp
mov
or
fsubrl
jg
in
call
push
icebp
push
mov
scas
mov
pushf
cmpsb
test
imul
addr16
jl
dec
movsl
cmp
add
ss
lret
ret
aam
imul
pop
and
scas
mov
in
xor
mov
sbb
lods
ljmp
push
add
scas
pop
mov
adc
cmpsl
gs
push
int3
fcomp
mov
add
jae
pop
sbb
push
fdivrs
pop
rcrb
or
pop
iret
xlat
and
mov
pop
dec
cmpsl
sbb
inc
jne
cs
rep
xchg
cmc
jl
xor
test
jo
adc
push
jb
in
and
aad
jge
mov
in
push
sbb
mov
cmp
movsb
fisttpll
xchg
inc
shrb
push
arpl
jae
imul
sbb
pop
repnz
jb
pop
mov
inc
and
and
imul
clc
movsb
enter
xchg
shll
popa
aaa
repnz
xchg
xor
cmc
imul
outsl
cld
sbbb
insl
and
pop
mov
xor
js
out
std
into
fs
adc
shrl
in
add
mov
lods
loop
jns
call
ret
enter
bound
ret
fs
add
mov
dec
sbb
fcomps
inc
ja
add
loope
mov
icebp
lock
jp
sub
test
adc
bnd
jl
sahf
in
mov
xchg
into
rclb
int3
sub
shrl
pop
loope
popf
int3
dec
jb
test
mov
fldl
sub
lahf
dec
imul
data16
fwait
js
xlat
dec
xor
hlt
fmull
push
in
outsb
jbe
cmp
ret
loopne
pop
inc
sarb
fs
sub
and
pop
pop
sbb
decl
adc
or
push
test
inc
jecxz
sub
stos
or
daa
lret
sahf
cmc
xor
dec
fwait
in
add
xor
arpl
xor
gs
sub
enter
xchg
cmp
mov
push
pand
aaa
and
fisubl
in
hlt
push
mov
add
push
cmpsb
xchg
in
aaa
or
xor
pop
fisubl
or
xchg
imul
xchg
cmp
ja
loopne
dec
cmp
lahf
push
jnp
lret
pop
fcoms
xor
and
cmp
sub
es
mov
and
cmp
jl
fcomps
or
aam
gs
dec
jg
inc
enter
fs
and
dec
pop
xor
mov
lds
xlat
adc
mov
mov
in
fs
jbe
or
jbe
mov
cmpsl
adc
jg
and
xor
ret
push
data16
inc
xchg
xlat
dec
mov
sbb
inc
cmp
popf
rcrb
fldenv
stos
sub
xor
push
popa
jp
fisttpl
xchg
cmp
in
out
pop
pop
leave
push
std
pop
jb
xchg
insl
adc
mov
mov
inc
rorb
enter
ja
outsb
dec
add
fdiv
mov
add
fdivs
cmp
cmp
add
aaa
mov
sbb
adc
push
into
cli
mov
fdivl
mov
or
jbe
popf
ss
fimuls
push
jle
dec
push
pop
or
int
testb
out
pop
stos
and
mov
icebp
les
imul
pushw
sbb
xor
test
leave
mov
jle
daa
cltd
add
add
mov
addr16
cmp
xchg
sub
and
jns
outsl
inc
dec
or
stos
aad
test
sahf
iret
xchg
ret
repnz
dec
or
add
rol
imul
lods
nop
idiv
inc
stos
inc
lods
fs
push
xchg
xchg
jne
jp
out
out
dec
inc
scas
fdivr
cwtl
hlt
cld
stc
insb
lods
dec
movhps
add
data16
lcall
sbb
xlat
push
shll
xor
xor
rcll
sub
mov
jne
mov
ds
outsb
imul
sbb
cmp
mov
shll
stos
sub
cmp
dec
jo
adc
les
jo
aaa
lds
pop
xchg
mov
cmpsl
fdivs
add
push
and
mov
jp
lea
fldz
je
repnz
mov
sbb
and
sahf
dec
lcall
gs
jno
fnstsw
add
adc
mov
push
push
push
dec
mov
cmp
jne
call
pop
add
push
add
lods
push
xchg
lock
clc
fs
mov
fsubs
movsb
test
sub
pop
adc
dec
add
aam
gs
ficompl
and
adc
or
cmp
sarb
inc
xchg
jle
cmp
in
lods
test
push
push
dec
test
sub
pop
mov
push
xor
insl
cli
mov
leave
out
adc
into
sarb
sbb
mov
testl
lock
dec
call
add
cwtl
in
sbb
outsl
mov
cmpsb
popa
xor
subb
xor
leave
xlat
daa
cmp
jae
and
cmp
std
fs
lods
test
jle
in
xchg
shrl
repz
mov
xor
sub
lahf
pop
xchg
inc
mov
xchg
xchg
cmpsl
jns
xlat
dec
sbb
pop
lock
cmp
hlt
jne
xchg
loope
out
aas
not
lods
add
cmp
fwait
lret
xor
mov
or
into
push
mov
fildll
xchg
in
jno
dec
xlat
test
mov
push
fsubl
jae
or
xchg
or
dec
jmp
mov
xchg
and
push
je
jnp
std
add
add
movb
jae
cld
jg
iret
cmp
push
fisttps
test
outsb
xchg
test
xor
jg
movsl
adc
xlat
xchg
inc
mov
ret
es
mov
roll
mov
push
cmp
dec
sbb
inc
mov
push
jg
xor
adc
mov
dec
xchg
jmp
xor
cwtl
ret
lds
jl
sbb
cmovg
jge
sbb
and
lret
pop
loopne
pop
test
aas
sar
je
test
sarb
dec
xchg
sub
lcall
pop
mov
cld
sbb
xchg
clc
add
xchg
jle
push
add
pop
loopne
out
fnsave
or
inc
dec
std
ficoms
test
sub
and
mov
adc
imul
cmp
xor
fstps
jmpw
inc
fs
xchg
repz
adc
mov
stos
pop
cli
shrl
jmp
cmpl
xor
pop
mov
mov
mov
pop
and
pop
sub
cltd
mov
adc
adc
or
pop
jmp
jp
jle
add
push
jno
sub
scas
pop
imul
push
cli
clc
pop
xchg
fsubrl
aaa
fstpt
cltd
pop
cld
dec
mov
not
mov
mov
xchg
xor
rclb
or
jae
sbb
cld
es
outsl
pop
inc
loope
push
mov
lods
mov
sbb
or
mov
fcoms
push
fs
cli
mov
popf
cmp
rolb
stos
mov
mov
addr16
push
sub
jg
test
xlat
dec
mov
rcl
filds
push
cmpl
xor
sub
or
dec
andb
jle
test
dec
insb
xchg
stc
push
std
xchg
sub
jae
je
test
cli
shrl
outsb
into
pop
andb
pop
push
aaa
add
std
add
pop
push
pop
cld
cmp
mov
inc
fisttpl
pop
cmp
mov
dec
test
divb
sub
sub
lods
sbb
push
push
sbb
xchg
mov
mov
and
cmc
dec
js
jns
push
xchg
jns
aad
adc
dec
and
sub
in
rclb
lcall
arpl
imul
sbb
imul
dec
sub
lahf
cld
push
pop
xchg
sub
jp
stc
adc
add
sti
out
xor
xor
xchg
loop
test
neg
push
test
mov
movsl
lods
sub
lods
in
gs
aam
mull
int3
hlt
cmc
add
push
pop
in
push
arpl
and
add
aaa
pushl
scas
rorl
aam
in
xchg
mov
aam
push
cmp
shll
xor
scas
xor
mov
cmpsb
insl
xor
je
fsubs
push
jge
dec
dec
popa
adc
xchg
push
test
dec
dec
jge
faddl
adc
nop
mov
rol
and
push
ret
lret
out
addl
lds
xchg
jbe
fld
int
jbe
xlat
cmp
orb
mov
jp
jns
test
test
xor
arpl
cmp
sahf
sbb
popf
jecxz
inc
fincstp
insb
adc
xchg
and
insb
push
ret
nop
fbld
cli
push
es
icebp
pop
jle
sbb
jo
daa
cmp
aas
xchg
nop
fwait
dec
mov
dec
jl
xchg
add
insb
mov
mov
jo
out
into
movsl
andb
cmp
rorl
stos
stos
out
cwtl
repnz
movsb
push
lock
stos
cmc
imul
test
rolb
cli
or
mov
lea
mov
adc
outsl
sub
xor
arpl
add
shrl
add
inc
cmpsb
fcomi
lahf
mov
stos
lock
pop
xor
xchg
and
mov
jmp
xchg
jg
cmpb
rcrb
data16
popa
in
lock
stos
dec
mul
cmp
div
mov
dec
xor
add
rorl
out
xor
outsb
pop
lods
inc
ljmp
add
repnz
subl
dec
push
mov
lock
xor
scas
mov
and
pop
movsl
mul
out
adc
sbb
cmp
or
and
mov
mov
pop
add
aaa
in
ds
dec
and
cmp
fs
aad
sub
and
push
mov
pop
into
dec
mov
sbb
jmp
xor
imul
sbb
mov
jne
jnp
sarb
sbb
dec
pop
jge
push
push
push
cli
sbb
sub
jmp
or
or
mov
sti
or
mov
cwtl
xchg
mov
inc
jl
test
icebp
adc
inc
mov
js
aad
sahf
mov
adc
fldcw
or
cmp
jo
mov
or
test
jbe
xchg
popf
push
mov
push
fs
mov
outsb
xchg
add
mov
mov
cmp
push
mov
leave
pop
xchg
in
in
test
fs
mov
repz
jge
sub
imul
shrb
je
jns
xor
jle
mov
out
lahf
push
inc
push
sahf
add
popa
jnp
push
bound
cmp
shufps
imul
pop
repz
xor
jae
and
jne
pushf
mov
xor
loope
mov
lea
fnsave
sub
ror
stc
push
loopne
add
or
divb
lods
jns
rcrb
outsl
iret
lock
inc
pop
push
sahf
imul
and
sub
scas
sbb
insl
and
decl
xor
test
lds
sbbl
mov
inc
push
mov
sub
add
mov
sbb
cli
sbb
mov
add
je
test
pop
dec
sub
aas
in
sub
mov
xor
adc
dec
daa
xchg
xchg
out
sub
adc
sub
sub
mov
dec
insl
ds
push
jno
push
lcall
rolb
cmp
movsb
mov
fmuls
adc
and
je
jo
cmpl
or
push
out
mov
sub
mov
pop
xchg
pushf
loopne
mov
pusha
das
scas
xchg
movsb
pop
mov
sbb
fisubrl
fwait
je
push
in
adc
clc
mov
lock
ja
pusha
add
pop
sbb
push
fistpll
push
pop
cmp
lea
cltd
xchg
int3
add
in
jecxz
mov
ret
sub
sbb
shr
pushf
jp
adc
ret
mov
and
dec
in
fdivrl
dec
pusha
mov
in
pop
bound
and
jmp
add
mov
inc
and
cmp
aaa
jl
and
jp
movsl
lcall
stos
jge
rcll
dec
push
xchg
push
ficoml
add
loopne
sub
pop
fstpt
mov
mov
les
fistl
pushf
xor
je
push
leave
mov
aas
pop
fcomps
lahf
fldlg2
or
outsb
hlt
push
movsl
inc
inc
dec
enter
mov
push
or
mov
push
and
cli
movsl
mov
lcall
xor
add
mov
mov
idiv
ja
dec
cmp
roll
stos
mov
clc
pushf
aam
je
adc
int
ljmp
add
cmp
adc
inc
testl
call
addb
dec
fists
sbb
popf
cmp
jl
test
test
mov
jle
pop
sub
inc
loop
xor
push
pushl
pop
cmp
iret
scas
je
xor
fldenv
mov
or
mov
stos
test
jmp
and
mov
lds
incl
and
cs
clc
ficomps
push
sbb
inc
or
cld
dec
mov
loopne
pop
scas
mov
fstpl
scas
and
mov
dec
sbb
pop
popa
jns
pop
jecxz
incb
inc
adc
xchg
int
in
xchg
xchg
lahf
push
mulb
inc
xchg
add
or
xchg
sbb
lds
mov
cltd
push
push
cld
cs
push
dec
pop
jns
movsbl
fldl
sub
jno
stos
cld
adc
mov
xchg
and
out
imul
push
fdivrs
xchg
popf
das
mov
in
cmovl
adc
cmp
inc
stos
clc
cld
aad
cld
lock
xor
sub
xor
mov
sbb
xor
mov
jno
inc
and
fisttps
push
divl
fcoms
outsb
stc
or
sub
sub
jp
push
sub
in
cmp
mov
es
cmp
fisubl
pop
aad
dec
test
inc
lret
dec
insb
mov
push
cmp
xor
inc
inc
cmp
xchg
nop
jle
dec
shll
jge
or
pop
jg
out
cltd
je
lret
sub
jge
sub
rorb
ret
pusha
inc
sarl
subl
insl
adc
cmp
adc
sbb
pop
mov
lahf
fmull
xchg
push
subb
mov
jp
sbb
in
loop
cmp
mov
xchg
mov
aad
jl
out
adc
lea
shlb
jmp
pop
lods
add
push
mov
add
push
xchg
push
pop
sbb
stc
iret
mov
pop
fsubr
mov
aam
arpl
cltd
lahf
fcmovb
mov
jl
sti
cltd
jnp
loope
jnp
push
es
pushf
adc
dec
dec
js
or
movsb
jbe
imulb
cmpl
sbb
icebp
lahf
jno
and
jmp
mov
mov
jmp
popa
test
scas
imul
inc
mov
sbb
hlt
scas
adc
mov
dec
xorl
inc
cmc
push
cmp
and
or
adc
sbb
sub
aad
pusha
movsl
add
movl
adc
push
imull
sbb
icebp
sbb
mov
inc
jns
ret
or
push
enter
fdivp
mov
pop
jle
imul
ficoms
jae
jbe
pop
sub
fsubl
fcomip
pop
jns
and
push
push
sub
shrb
or
shll
sub
cmp
ds
add
mov
dec
jge
nop
mov
add
jp,pt
mov
adc
jne
pop
and
jnp
push
sub
loop
fcmovne
add
dec
push
mov
inc
mov
cmp
adc
add
mov
xor
lods
mov
daa
xlat
test
xchg
xchg
out
mov
sbb
sub
add
add
push
mov
sub
fnstenv
sbb
and
test
stos
xchg
pop
test
dec
test
jae
push
or
push
sbb
in
or
mov
jecxz
xchg
aas
repz
out
ret
or
ret
push
in
loop
cmp
xchg
test
mov
out
dec
jg
test
fdivl
push
fstl
sahf
mov
add
insb
or
jl
adc
jno
sbb
mov
out
aad
and
cmp
inc
xor
mov
sti
movsl
loop
addr16
mov
ljmp
fwait
insb
sbb
fisubl
mov
mov
jae
mov
sub
mov
or
sahf
sub
push
ljmp
out
mov
dec
or
add
addr16
dec
scas
fstps
xchg
mov
int
sarb
std
pop
xor
cmp
imul
aaa
aas
xor
adc
jb
jmp
aad
jno
in
rolb
cld
sub
add
and
and
cli
jle
mov
pop
xlat
jae
or
scas
divl
sahf
add
jo
dec
lds
pop
cmp
std
pop
imul
leave
dec
cmpsl
sub
cmp
lret
movsb
filds
inc
ss
mov
pop
fcom
aaa
out
ja
add
sub
iret
inc
mov
jae
xchg
pop
mov
add
xchg
xchg
sub
js
xor
or
das
sarb
gs
out
xor
sub
in
xlat
push
inc
repz
sbb
xchg
ds
pop
lret
push
test
push
test
call
mov
dec
xchg
dec
xchg
mov
idivl
jns
in
fnstcw
fsub
xchg
jecxz
mov
inc
stos
jl
mov
sbbl
cmpsl
pop
in
xlat
inc
out
lahf
out
js
cmp
sbb
push
push
adc
not
mov
data16
push
pusha
loope
aaa
sub
jbe
scas
and
out
call
cmp
or
jne
outsl
mov
xchg
shll
push
lock
loopne
jns
pop
aad
push
div
bound
push
adc
lods
push
imul
mov
xor
testb
psllq
divl
fadds
dec
adc
scas
jo
popf
xchg
push
out
add
in
stos
lret
imul
push
xchg
jle
dec
ret
xor
cmp
testb
pop
outsl
cmp
loop
push
insb
lahf
ds
jno
and
fcmovnu
adc
xchg
aam
pop
out
fiadds
idivb
outsb
xor
int3
cmpsl
mov
sub
je
cs
cmc
rcl
add
pushf
ds
push
jge
outsl
adc
stos
ret
jl
sbb
fsubrl
rcll
sbb
mov
enter
outsl
jno
pop
pop
lcall
adc
movsl
popa
jb
and
push
push
cwtl
inc
sub
sub
dec
lds
jmp
popf
jge
fimuls
out
xor
daa
subb
std
shlb
lods
push
stc
xchg
bound
mov
lods
mov
push
daa
fisttpll
cwtl
pop
xor
loop
pop
test
daa
add
xchg
adcb
fcmovne
pop
sbb
inc
dec
ret
hlt
mov
xchg
ret
jp
outsl
or
push
mov
and
and
cmpsb
dec
push
xchg
xor
inc
mov
sub
pop
hlt
rolb
pop
stos
mov
add
inc
test
lods
sbbb
adc
inc
in
push
mov
mov
jns
jg
aaa
mov
mov
popa
mov
xchg
in
pop
in
push
sub
insb
imul
push
ljmp
out
cmp
fldcw
jo
mov
push
jge
mov
dec
dec
fsubrl
outsl
jl
push
inc
ret
adc
rcrl
fdivrs
pusha
pop
mov
std
dec
cld
adc
lods
fiadds
xor
cmc
out
in
cmp
out
pusha
adc
mov
pusha
ljmp
fwait
and
loopne
cwtl
mov
xor
lret
push
dec
fnstcw
filds
fdivrs
dec
orl
pop
scas
xchg
imul
push
fstpl
ror
pop
dec
xchg
ja
pop
je
outsl
and
jae
and
dec
inc
adc
aad
orb
dec
dec
ret
push
lcall
or
sub
adc
stos
les
push
inc
jmp
mov
stc
push
push
ficomps
or
mov
sub
xchg
inc
adc
sub
xchg
xchg
jg
fisubrl
push
jg
outsl
aam
imul
into
jae
sbb
pushf
aad
movsb
bound
mov
gs
push
xor
cs
jle
xchg
xchg
xchg
push
mov
fcom
sti
inc
sbb
cld
and
xor
xchg
inc
sub
cmp
push
outsb
lret
dec
cmp
pop
pop
xchg
jmp
mov
sub
ret
mov
xchg
jge
mov
out
das
in
popf
scas
call
add
sti
pop
xlat
xchg
mov
es
lods
adc
bound
jns
cmpsb
push
repz
mov
daa
into
cmp
ret
adc
dec
cmc
and
movsl
lods
ret
in
xchg
loop
insb
dec
mov
outsb
sti
dec
enter
inc
inc
jne
xor
loop
cld
jb
jae
mov
pop
push
mov
add
jo
sbb
ss
nop
pusha
inc
push
mov
mov
cmp
inc
mov
das
mov
pop
lods
popa
add
mov
ljmp
movsl
xor
pusha
andb
add
xchg
mov
pop
cli
and
pop
and
sti
hlt
rclb
and
xchg
scas
call
lahf
out
rclb
daa
inc
jl
xchg
inc
pop
mov
sub
js
arpl
mov
mov
pop
jb
adc
jb
pop
popa
mov
daa
push
pop
fidivrl
idivb
les
push
shll
add
xchg
jnp
push
loop
or
mov
movsl
stos
fsts
xchg
aam
jns
aas
cmp
int
cltd
fiadds
dec
in
shlb
ljmp
test
dec
loop
add
push
mov
into
loope
sti
int
sub
cmp
cmp
stos
pop
xchg
test
js
sahf
dec
cwtl
test
or
mov
mov
ss
lods
jge
js
push
lahf
lret
push
mov
or
jge
mov
lock
mov
pop
mov
push
mov
clc
arpl
ss
xor
push
xchg
aaa
sub
sbb
xlat
xchg
rcl
xor
dec
xor
rorl
call
mov
xchg
ficoml
mov
lar
pushf
lcall
pop
cli
scas
lret
ljmp
cwtl
das
xchg
das
std
mov
shlb
vfnmadd231pd
mov
cmpsl
es
adc
iret
test
xor
out
mov
aas
mov
enter
mov
lea
xchg
cmp
inc
jb
mov
mov
je
cs
dec
dec
inc
jb
pusha
mov
lsl
or
enterw
hlt
jae
repnz
aas
mov
dec
adc
mov
push
cltd
xlat
inc
stos
cltd
pusha
adc
inc
mov
push
and
rcr
out
sub
sub
cli
xor
push
xor
jl
ficomps
js
insl
aad
lods
bound
mov
outsb
pop
cs
lock
dec
fcoml
xor
ss
xchg
inc
mov
pop
popa
or
xchg
mov
lret
mov
fxch
mov
xor
lock
xchg
mov
sbb
mov
loop
shlb
mov
pop
arpl
arpl
fdivl
or
push
imul
and
or
loope
mov
ja
jo
inc
cmc
and
fsubrl
cmpsl
fwait
adc
sahf
ds
enter
or
and
insl
cwtl
lds
imul
mov
int3
dec
xchg
lods
jns
sti
cmp
push
pop
jp
sub
cmpsl
ret
ds
jge
dec
test
sub
inc
icebp
push
jg
lahf
xchg
jg
push
and
pop
pop
ret
mov
xor
imul
and
lea
int3
mov
in
test
push
pop
insl
popa
mov
cmc
sbb
pop
movsb
sbb
xor
jnp
dec
xchg
lods
neg
call
fisttpll
and
int3
rcpps
dec
jle
and
fnstenv
xchg
outsb
les
mov
std
xor
dec
adc
gs
cmc
outsb
in
test
and
jmp
repnz
fs
mov
imul
lret
mov
repnz
sub
mov
xor
push
mov
aam
pop
in
mov
icebp
pop
mov
dec
adc
inc
xchg
pop
xlat
call
xor
mov
push
push
cmpsb
mov
push
xadd
xor
jecxz
xchg
lea
mov
pop
into
adc
inc
or
xchg
push
or
push
mov
out
lcall
inc
fdivr
aas
mov
clc
jo
push
in
loop
lcall
enter
aaa
push
sbb
xchg
xchg
push
stos
std
cli
stos
mov
mov
fisubl
mov
sbb
push
ret
dec
aas
add
cmp
nop
icebp
mov
cmc
cmc
jno
xor
scas
fwait
push
pop
pop
loopne
push
push
test
xchg
xchg
jbe
mov
enter
sub
cld
int3
mov
push
lea
into
test
pop
shlb
jo
sub
add
cmp
into
sub
enter
jge
xlat
jb
sub
lods
mov
lods
mov
mov
push
fsubrs
mov
xor
cli
inc
and
and
je
jmp
cmp
sbb
and
add
outsb
icebp
aad
loopne
xchg
gs
jnp
repnz
jno
cmp
test
jo
xchg
and
inc
js
sbb
sbb
fld
mov
mov
push
fmull
jecxz
xchg
stos
out
dec
pop
push
iret
jns
mov
cmp
xchg
or
stos
aam
lahf
js
jnp
test
andl
rol
jae
inc
dec
orb
xchg
fdivr
dec
dec
test
pop
mov
aad
lahf
push
cmp
sbb
mov
lods
mov
outsb
popa
lcall
cwtl
cltd
ljmp
push
mov
test
into
movb
xor
cmp
adc
sti
inc
fwait
jno
adc
out
xchg
xor
pop
xchg
add
push
mov
xchg
push
je
mov
or
fmul
add
mov
test
jmp
push
or
add
inc
or
inc
fidivrl
ljmp
cmp
jno
xor
lea
xchg
leave
mov
xchg
popa
or
push
fwait
jmp
sbb
xchg
inc
xchg
nop
mov
hlt
pop
loop
cmp
adc
loopne
fwait
sub
pushf
push
jmp
push
jl
pop
xor
push
bound
fwait
cld
mov
test
js
xlat
into
ds
data16
jbe
ret
int3
push
xchg
cmp
pop
and
pop
cmp
jge
test
fwait
jg
inc
nop
dec
dec
adc
cmp
xchg
es
jbe
int3
mov
add
xchg
mov
clc
mov
mov
repnz
jbe
mov
sub
test
mov
int
push
sbb
adc
leave
push
push
popf
jbe
mov
je
ss
cli
cmpsl
mov
iret
mov
lahf
adc
sub
mov
mov
into
and
dec
sti
xchg
add
sub
sub
xchg
push
into
mov
xor
mov
push
mov
shl
aad
add
cmpsl
lret
push
outsl
mov
fldcw
mov
jae
push
imul
jl
xchg
inc
shlb
push
and
adc
das
addr16
fbstp
sbb
sbb
lret
dec
cmc
faddl
ja
dec
imul
cmp
adc
ret
outsl
sub
movsl
icebp
or
push
or
jmp
sub
jp
dec
scas
fs
jl
mov
mov
stos
test
add
cmp
jle
stos
stc
adc
and
pop
push
ljmp
in
fistps
lods
loopne
fwait
pop
xchg
or
push
idiv
shll
movsb
xor
ds
ljmp
pushf
jns
push
cmp
int3
push
shlb
mov
leave
jae
in
jb
pop
out
lret
push
mov
or
lret
sbb
mov
xor
mov
mov
cmp
mov
test
or
shll
loopne
dec
pop
mov
rcl
push
lea
popa
stos
mov
pop
mov
mov
inc
icebp
sbb
stc
sbb
dec
popf
rcr
outsl
push
lcall
call
xor
shl
mov
xchg
enter
sbb
jecxz
das
mov
push
pop
and
setnp
addl
push
in
iret
outsb
sbb
popf
int3
mov
mov
mov
out
mov
push
push
aaa
mov
mov
cmc
jnp
das
push
xchg
iret
or
push
stos
loope
movsl
mov
lcall
mov
jne
addl
adc
jns
test
inc
push
rcll
mov
in
pusha
mov
sbb
rcr
das
dec
xchg
or
int3
ds
ret
mov
fwait
testb
mov
cmp
lret
dec
xchg
push
sahf
add
dec
jmp
clc
fdivl
repz
cs
jmp
cmpsb
pop
ret
xchg
mov
and
stos
out
lret
push
mov
and
jle
jbe
xor
clc
loope
mov
fists
arpl
cld
sets
and
mov
and
call
add
sub
out
sub
fstp
xor
adc
xor
xor
push
adc
xor
jno
into
stos
inc
clc
and
lods
mov
xor
data16
repz
shlb
fsts
jp
xor
push
xchg
rcrb
shrl
jge
lfs
fadds
adc
cs
adc
pop
mov
pop
mov
aaa
fs
pop
add
pop
jg
mov
xor
mov
push
pop
or
cmpsl
xchg
mov
stos
xor
mov
test
mov
pop
insb
xorl
addb
ss
pop
pushf
jae
test
inc
cli
int
jne
dec
leave
jp
lock
xlat
add
sahf
add
out
std
inc
ss
xor
addr16
orb
xchg
mov
xchg
and
outsl
jae
je
add
icebp
fisttpl
es
mov
imul
sarl
and
mov
mov
pop
clc
xchg
rcll
mov
out
push
outsl
sbb
cmp
orb
mov
hlt
dec
imul
jo
int3
loope
stos
mov
mov
stos
push
iret
cmp
into
add
dec
mov
arpl
sub
std
push
js
push
inc
shl
pop
inc
shr
dec
into
xchg
mov
xor
sub
add
xchg
push
jecxz
mov
scas
mov
repz
loop
jns
cmpsb
or
rclb
out
jl
cmpsb
or
lock
cmp
xorb
xchg
iret
stos
sbb
sub
or
movsb
popa
add
in
jo
lock
and
pop
dec
push
ret
cmp
call
inc
xchg
xor
mov
leave
cltd
mov
sub
loope
jle
mov
add
in
mov
sub
add
pusha
cmpsl
imul
loopne
daa
mov
aaa
xor
push
int3
dec
cmp
in
sub
dec
or
jne
xlat
popf
fists
movsb
jmp
dec
fs
lret
arpl
arpl
rcrb
push
movsb
xchg
test
jo
int
daa
cmpsl
sbb
cmc
shrl
jb
xor
cli
cs
mov
pop
mov
sti
ds
xchg
jns
andl
mov
jo
js
fildl
mov
jo
add
les
mov
dec
pop
mov
add
icebp
test
movsl
movsb
cmp
mov
mov
pop
in
repz
testb
jb
idivl
pop
xor
mov
ja
dec
mov
xor
filds
xchg
and
pop
aaa
inc
and
leave
cmovp
pusha
xor
dec
ja
push
mov
sub
pop
outsl
icebp
dec
cmp
test
fwait
jae
and
leave
xor
popf
js
add
vaddss
rorb
stos
add
mov
jmp
pop
mov
ja
adc
lds
xor
mov
fldenv
push
push
stos
out
sarl
in
bound
iret
adc
sti
ret
mov
fcoms
jb
and
fsubp
or
sub
mov
addr16
xchg
adc
dec
pushf
shll
push
out
push
jne
push
lock
adc
sub
or
mov
mov
scas
mov
jl
aad
push
in
pop
push
inc
loope
insl
inc
rcll
in
movsl
fcmovbe
mov
mov
sbb
jmp
pop
jge
test
xchg
aas
addr16
cld
jne
xchg
inc
mov
or
mov
add
ja
sub
sbb
roll
xchg
xor
adc
cmp
filds
ficomps
mov
arpl
mov
xor
and
pop
or
je
es
push
sub
adc
cmc
pop
outsb
xchg
cmpsb
imul
outsb
in
dec
shll
lods
mov
inc
scas
iret
stc
and
mov
jge
out
push
pop
inc
scas
outsl
stos
inc
outsl
imulb
data16
and
rolb
pusha
adc
cmp
rcrb
sub
dec
test
sbb
adc
adcl
negb
fldenv
or
sahf
lea
adc
dec
sbb
jle
sbb
or
xor
cmp
push
push
pop
dec
inc
and
insb
fistps
aas
sbb
cmp
in
pop
jecxz
dec
inc
in
mov
leave
jne
mov
cmp
dec
jbe
rclb
scas
xor
add
mov
cli
lock
sbb
or
shl
xlat
cltd
sbb
mov
xor
out
sbb
test
out
xchg
fidivl
pop
in
hlt
fsubrs
aas
mulb
lahf
push
out
lahf
mov
push
push
sub
xorb
add
pop
xor
dec
push
ja
andl
int
dec
xchg
inc
das
push
pop
pushf
std
fmulp
inc
mov
xor
push
or
and
push
mov
mov
scas
xchg
add
cmc
sub
cmp
rcl
pop
mov
jb
fldl
js
fcmovu
add
stc
stc
inc
xchg
mov
cmp
leave
jmp
add
imulb
adc
or
push
xor
mov
mov
outsl
push
cmc
negb
sub
inc
sti
leave
pop
in
out
push
mov
push
into
or
jp
jecxz
arpl
sub
adc
lods
nop
jbe
push
rcrb
test
push
jo
xor
out
adc
fsubl
jmp
and
mov
jno
rclb
hlt
out
mov
loopne
cmp
pop
stos
xchg
idivb
pop
sbbb
push
mov
sbb
stos
mov
dec
jmp
cld
test
push
mov
test
push
mov
dec
bound
jnp
push
xor
pop
or
mov
mov
ja
push
mov
lods
jae
inc
push
fists
adc
xor
addl
movsb
sarl
cwtl
or
pop
in
loope
jnp
jb
sub
rcll
mov
add
orl
jge
mov
addr16
adc
shll
test
sub
add
fsubl
cwtl
and
fcom
inc
movsl
sub
cmp
scas
pop
sbb
sub
insb
dec
cld
outsl
icebp
mov
scas
xchg
std
mov
xchg
lahf
je
sub
push
adc
push
pop
xor
sti
lcall
loope
ucomiss
or
mov
and
shrl
xor
aas
sub
aaa
xchg
je
or
dec
nop
jl
cmc
sub
cs
lahf
mov
idiv
mov
movsb
lea
pushf
jle
out
into
inc
push
and
sbb
inc
xchg
cs
pushf
sbb
or
dec
pop
inc
xor
mov
ret
cltd
and
pushf
xchg
ja
into
jae
jge
lds
mov
shll
jno
jbe
int3
rorl
pop
jmp
mov
and
dec
andb
and
sub
xchg
mov
rorb
inc
dec
cmp
or
ja
jns
cmc
pop
or
push
arpl
xchg
enter
sub
outsl
pushfw
pushf
in
mov
push
test
scas
ja
mov
xchg
int3
sbb
repnz
sbb
insb
pop
inc
aas
jno
in
imul
add
int3
sub
and
cmp
dec
adc
xor
js
out
xor
add
stos
repz
mov
bound
into
repnz
outsl
jne
mov
js
inc
mov
pop
out
pop
cli
jb
inc
rorl
in
adc
push
test
sub
and
and
in
xor
and
sbb
aam
jno
dec
pop
out
aas
add
and
stos
jge
sub
mov
in
jmp
jno
xchg
mov
decb
xchg
mov
dec
xor
hlt
test
in
adc
rdmsr
sub
testb
imul
inc
int3
xchg
dec
mov
push
jmp
xchg
xlat
fimuls
in
mov
jne
push
insl
pop
test
xor
mov
cmp
aam
pop
incb
inc
cld
cmp
ja
jae
and
xor
cmpsb
mov
cmpsb
push
sarb
add
cmpsl
lods
hlt
lods
inc
inc
mov
loop
cli
cmc
mov
or
pusha
test
imul
int3
or
mov
bound
ret
lret
imul
fisttpl
orb
sub
sbb
xchg
push
popf
nop
js
addl
cmp
cmp
xchg
push
loop
inc
dec
test
add
inc
pushf
repz
inc
addr16
sti
nop
gs
jns
pusha
adc
lods
adc
mov
adcb
cld
mov
fsts
push
mov
add
cwtl
sub
out
in
fistps
decb
dec
movsl
push
lcall
adc
add
sbb
iret
cmpsb
mov
mov
xchg
inc
imul
adc
pop
ja
stos
out
inc
ja
test
inc
lods
mov
cwtl
inc
scas
pop
dec
jae
repz
clc
cli
lcall
or
add
aad
cmp
arpl
mov
xchg
cmp
push
mov
or
loop
aam
adc
cli
pop
add
fwait
je
mov
fsts
loop
ret
fcoms
cmp
mov
sub
shlb
sbb
addr16
inc
push
jp
imul
out
jl
int
mov
addl
adc
jle
jmp
stos
sahf
fildll
fisttps
lods
add
or
push
sarl
out
out
mov
jp
mov
xchg
clc
divl
pop
push
push
cld
mov
push
cmp
aad
aaa
dec
aas
imul
mov
aas
inc
cs
daa
pusha
call
sub
jb,pn
in
mov
in
cmp
lock
cmp
mov
mov
push
xchg
dec
and
lock
mov
mov
divl
mov
int
das
getsec
mov
mov
cs
pop
loopne
jge
mov
imul
pushf
popf
mov
js
inc
pop
sbb
aas
loop
fisubs
mov
mull
daa
test
dec
and
outsl
mov
push
std
jae
call
les
push
mov
outsb
ja
gs
leave
dec
xor
aad
outsl
sahf
fldcw
inc
mov
jnp
adc
or
push
std
jp
int3
xor
push
cltd
std
icebp
leave
push
add
add
pop
cmp
fisubl
cltd
xor
aaa
ss
ss
dec
dec
shl
dec
addr16
or
loop
dec
push
jecxz
adc
mov
icebp
bound
addr16
xor
or
sti
sub
ja
pop
rol
mov
sbb
mov
lods
push
mov
push
or
inc
call
rorl
xor
xor
push
lret
andb
gs
jne
imul
push
jns
push
std
mov
outsb
cmp
pop
add
mov
stos
or
divl
xor
stos
aas
dec
fidivs
mov
lcall
xchg
rcr
mov
cld
aam
icebp
ljmp
rclb
lock
mov
xor
jns
cmp
dec
hlt
popa
push
xlat
xchg
out
out
jae
out
hlt
jecxz
mov
ljmp
ljmp
push
lock
addl
imul
pop
dec
mov
mov
or
jmp
and
or
loope
add
iret
lcall
lods
je
sti
mov
xchg
sbb
loop
mov
out
stc
popf
mov
shlb
mov
out
mov
add
and
dec
hlt
inc
inc
push
orb
sbb
jo
lock
dec
mov
jno
sub
jo
nop
std
pop
xor
inc
push
sbb
cmp
cli
jne
lret
loopne
cmp
cmpsb
mov
and
or
push
inc
mov
popf
fldcw
adc
inc
jp
repz
fldenv
std
pop
fs
mov
es
in
cmp
and
mov
or
inc
insl
testb
imul
push
rcr
mov
fnstenv
in
inc
sbb
or
mov
cmc
mov
cmpsl
cmpsl
test
mov
in
dec
call
push
sbb
xchg
inc
or
mov
popa
jb
mov
add
fidivs
pop
push
dec
adc
push
lahf
jae
fidivrs
hlt
lods
bsr
pop
dec
into
shlb
out
adc
pop
stc
ss
mov
adc
aam
in
dec
dec
mov
lea
test
icebp
or
pop
pop
cmp
mov
pop
dec
or
add
mov
push
dec
imul
out
test
add
push
add
add
imul
mov
pop
mov
cli
adc
mov
and
mov
nop
mov
repnz
rep
inc
adc
stos
sbb
and
sub
sbb
xchg
bound
sub
fidivrs
loopne
xlat
jnp
aaa
scas
mov
scas
enter
or
fwait
addr16
mov
mov
out
jle
xchg
loopne
jo
js,pn
iret
nop
and
xchg
rclb
inc
xor
lea
sbb
dec
dec
pushf
pushf
hlt
push
fiaddl
cltd
divb
outsb
scas
scas
pop
xchg
lea
mov
xchg
pushf
xor
xor
mov
pushf
inc
arpl
dec
into
mov
imulb
in
push
and
sbb
imul
cmp
negl
jl
ret
daa
push
adc
push
faddl
jns
test
mov
or
cmpl
or
and
jae
mov
stos
das
stos
mov
or
push
or
mov
push
mov
mov
sub
mov
or
push
xchg
movsb
clc
mov
sbb
enter
clc
jle
jl
sub
push
jmp
popf
pusha
push
push
dec
xchg
imul
mov
popl
xchg
mov
xor
mov
lods
aad
sub
movsl
push
outsl
insb
in
sub
aas
lds
xchg
cmp
popf
jbe
mov
push
dec
pop
add
int3
mov
xor
push
xchg
je
je
xchg
lahf
ja
arpl
add
leave
push
push
subb
xchg
xchg
cmp
cmpsb
test
jae
sbb
mov
popa
icebp
xchg
cmp
imul
jge
cmpsl
inc
mov
sbb
jg
cmp
cmp
mov
dec
mov
nop
cmpsl
inc
inc
push
adc
movsb
rcl
xorl
pop
ficompl
pop
fldcw
std
mov
add
dec
dec
mov
sub
mov
addr16
nop
outsl
cmc
jl
sbb
xchg
lods
xlat
pop
pop
ffreep
pop
push
jbe
jnp
pop
shl
test
rcrl
and
testl
mov
fbld
lcall
adc
outsb
addl
adc
sub
outsl
xchg
icebp
sub
int
in
mov
ret
idivb
test
and
loope
imul
dec
es
sbb
and
fisubrs
mov
adc
mov
in
loope
cwtl
sub
bound
xchg
rol
and
mov
xchg
out
cmp
cmpsb
pslld
repnz
cmp
xchg
stc
sub
addr16
call
lret
bound
lea
mov
loopne
jno
pop
pusha
dec
xor
out
push
mov
or
in
cmpxchg8b
lret
xchg
icebp
out
lock
mov
sbb
out
movsb
addr16
cmpsb
cmp
pop
clc
filds
sbb
mov
fdivl
imul
dec
das
hlt
xchg
lods
nop
pop
fists
stos
rorb
inc
push
add
cmp
shll
fisubs
xchg
aad
mov
scas
mov
push
cmp
out
imul
lret
push
cmc
xchg
mov
sub
or
sub
adc
outsb
pop
or
movb
jp
dec
dec
pop
push
cmp
push
add
dec
jb
lock
dec
add
fmuls
insl
cltd
mov
inc
cmp
mov
aad
push
mov
cmp
cmp
sub
mov
cmp
pop
call
sbb
shl
movsl
aaa
jmp
xor
push
fsts
mov
in
cmp
add
arpl
dec
idivb
mov
popa
inc
imul
idivb
lea
cld
jae
imul
push
inc
mov
in
imulb
call
sub
lret
sub
mov
nop
mov
insl
or
add
push
cmc
inc
movd
mov
jnp
mov
into
jae
dec
loop
test
in
mov
inc
adc
jg
mov
repz
pop
dec
mov
iret
bound
das
push
inc
sub
mov
dec
mov
loope
lock
in
add
jo
pop
aaa
push
lcall
dec
gs
xorb
pop
xlat
lret
mov
mov
push
xchg
mov
mov
rcll
adc
aam
and
out
call
rcrb
rolb
adc
mov
xchg
and
lret
loop
popa
cld
sarl
bound
scas
bound
fcom
incw
out
or
pushf
or
adc
inc
rclb
outsb
leave
jae
xchg
and
mov
lret
bound
movsl
add
test
sbb
pushf
jns
loope
mov
cmp
mov
subl
inc
loop
outsl
fsubrl
dec
and
mov
mov
in
fadd
test
idivb
add
repz
mov
fadds
add
add
loopne
inc
xchg
pop
xor
push
cmpsl
push
lods
insl
push
rcr
inc
xchg
daa
mov
jp
pop
nop
xchg
rolb
into
movsl
adc
jnp
jb
jae
adc
mov
xor
mov
data16
dec
pop
cmp
jb
or
or
insl
lcall
fwait
vmovapd
sbb
add
stos
xor
sbb
out
sti
cmp
cmp
shlb
std
xchg
addr16
imul
and
popa
sub
out
mov
mov
insl
jae
push
ljmp
fldcw
mov
jae
fstps
cmp
or
or
xlat
lret
xlat
and
test
pop
js
js
cltd
sub
sub
loop
addr16
add
test
jl
lret
leave
icebp
repnz
in
pop
adc
incl
mov
mov
jno
adc
das
test
les
adc
mov
adc
and
xchg
cli
mov
push
leave
xchg
adc
sbb
push
cmp
lds
mov
loope
out
test
pop
repz
mov
xchg
mov
xchg
add
ss
mov
icebp
fldenv
movsl
fisubrs
gs
push
dec
push
jl
lds
mov
ss
cmp
cmp
pop
loop
push
jns
push
adc
jl
in
mov
dec
xlat
test
xchg
inc
push
sahf
cwtl
addl
push
aam
cmp
pop
mull
notb
fistps
pop
push
jle
mov
aaa
fs
mov
lret
xchg
fisttpll
push
loop
xor
adc
xchg
cmp
xor
mov
mov
cltd
and
in
mov
xor
out
es
sbb
or
xor
in
pusha
jns
insb
mov
popf
cmpsl
mov
dec
fnstenv
loopne
or
jne
stos
clc
inc
rcl
add
loope
sub
mov
cmpb
pop
mov
xchg
ss
cld
shll
lods
and
ret
xchg
fwait
inc
lret
mov
jmp
ror
popf
xchg
xchg
cmp
inc
fldenv
jp
push
ljmp
mov
stos
mov
fstpl
dec
imull
icebp
xor
inc
imul
aas
sti
jge
enter
add
mov
pop
bound
imul
ret
sub
mov
push
rorb
mov
arpl
ljmp
shl
adc
inc
ja
lret
and
push
scas
xchg
inc
mov
or
and
repnz
outsl
and
mov
imul
dec
ret
xor
xchg
push
sub
fdivl
std
scas
test
fwait
cmp
insl
cmp
pop
mov
sub
jnp
inc
movsb
jbe
lcall
mov
cwtl
int
pusha
sub
out
lds
push
add
xor
repnz
test
mov
jecxz
lcall
adc
mov
pop
ss
pop
mov
insl
lret
sbb
xchg
mov
out
xchg
inc
mov
xor
inc
mov
jo
mov
jne
sbb
cmp
xor
ljmp
lea
mov
sar
lahf
sub
adc
test
sbb
jg
sarl
mov
arpl
out
sub
jle
mov
pushf
roll
jns
mov
aad
jge
mov
sbb
mov
push
push
bound
inc
rcll
inc
sbb
dec
cmp
cmp
test
lcall
mov
cmc
add
jp
xchg
adc
pop
cmp
dec
js
scas
enter
cld
fcmovu
xchg
ret
bound
adc
sub
ja
shl
cli
sbbl
or
xchg
add
or
arpl
hlt
loopne
inc
push
xchg
sub
sbb
repnz
mov
push
mov
ss
popa
mov
or
fildl
cltd
inc
sub
nop
mov
and
cmp
ja
rcrb
push
mov
loopne
aas
inc
cwtl
jno
lods
jae
push
imul
mov
mov
aam
xchg
push
cmp
movsb
std
xor
add
jne
orl
addr16
pop
or
push
lahf
je
imul
jns
roll
hlt
dec
add
pop
lock
mov
iret
data16
push
xor
mov
testl
cmp
pop
or
rclb
sbb
mov
jns
loop
lock
fs
mov
pop
push
fs
mov
adc
cvtpi2ps
mov
add
dec
cmp
sub
test
pop
sbb
fwait
out
mov
pop
mov
scas
stos
in
or
scas
and
dec
xchg
or
jmp
shl
adc
out
jns
and
stos
call
out
aas
cs
xchg
xor
add
xchg
ljmp
cmc
or
in
push
mov
sub
dec
inc
jae
popf
aaa
jnp
shr
push
push
js
mov
insb
push
or
xchg
sbb
fwait
mov
and
mov
sahf
mov
int
loope
jbe
fistl
out
jb
and
call
arpl
push
je
ja
mov
enter
dec
push
shr
sub
clc
or
lret
cwtl
push
xor
mov
jle
jne
and
dec
cmp
fisubrl
sbb
and
leave
jo
jecxz
mov
jl
lods
rcll
lahf
jmp
push
mov
and
nop
lods
push
pop
cmp
outsl
mov
test
add
mov
lock
pop
fisttpl
mov
das
adc
xchg
rep
insl
cmp
std
jecxz
aam
push
lret
xor
pushf
enter
inc
test
icebp
mov
mov
jecxz
and
mov
pop
mov
loop
repnz
mov
iret
ret
jle
dec
and
cmp
add
mov
cmp
add
fs
or
or
jne
jbe
testl
push
es
rcl
sbb
hlt
imul
insb
dec
jno
cli
sbb
leave
and
push
lods
sar
sub
cmp
xor
mov
mulb
movsl
push
ja
push
push
mov
mov
pop
incl
daa
and
stc
mov
pop
jbe
xchg
ja
pop
testb
repz
rorb
add
add
xchg
jle
sti
insl
adc
push
xor
fstl
dec
pop
jns
lcall
leave
add
add
stos
add
enter
icebp
cmp
jnp
cmp
out
movsl
push
pop
jge
out
sub
mov
sbb
sbb
xor
into
bound
cmp
sbb
mov
inc
hlt
data16
rcll
fwait
or
or
jp
mov
sahf
dec
dec
shl
lcall
stos
and
xchg
shll
cltd
lock
sub
ds
and
fistps
xor
scas
cmc
std
mov
nop
sbb
lret
mov
push
adc
loop
inc
push
sbb
icebp
rcr
add
mov
jp
dec
jnp
xlat
lahf
cmp
push
pop
cmp
or
scas
dec
xor
push
mov
jl
jge
loop
sar
add
xchg
xorl
enter
pushf
push
adc
nop
mov
sahf
repnz
movsb
sub
ret
xchg
popa
ret
pop
or
cld
mov
push
ja
sub
inc
sahf
and
data16
fildll
rcrl
and
fnstsw
testl
subb
inc
inc
pop
roll
lret
jns
or
jno
imul
and
push
mul
pop
mulb
test
mov
out
jmp
fsubs
sub
dec
sbb
popa
mov
add
rcl
test
sub
pusha
jnp
sub
mov
xlat
mov
dec
inc
cmp
pusha
inc
jae
scas
repz
sub
sub
add
lcall
call
pop
cmpsl
les
repz
inc
fstl
push
cmp
popa
in
mov
outsl
lahf
xchg
lret
lahf
scas
outsl
sub
mov
pop
aaa
push
mov
pop
hlt
cmpb
insl
jnp
xor
pop
sbb
fcmovnu
xor
test
fmull
push
inc
cmpsl
dec
aas
daa
adc
cmp
ja
lock
lcall
call
cmp
cmpsb
inc
jae
push
sbb
dec
sbb
jno
testl
inc
clc
jmp
or
inc
filds
xlat
or
or
adcl
sbb
cltd
mov
scas
loopne
stc
or
push
and
add
cltd
xor
mov
or
les
ss
cltd
aas
fiaddl
adc
jbe
outsl
or
stos
leave
cltd
ljmp
xlat
lods
movsb
sub
ljmp
outsb
and
cmp
dec
cmc
je
jecxz
push
xor
and
fs
xchg
jl
mov
pop
inc
mov
xor
mov
cmp
fwait
pop
bound
xchg
jo
out
jge
in
cmp
mov
mov
xor
imulb
cmpb
popf
out
dec
push
cltd
imul
pushf
daa
xchg
add
pop
add
imul
mov
jno
cmp
jo
into
scas
cwtl
test
lcall
aaa
sub
data16
mov
or
xchg
ljmp
cmpsb
cli
aam
or
popa
add
lret
sbb
add
mov
sub
and
cmpsl
cmp
mov
mov
xchg
sub
nop
stos
fisubl
arpl
pop
loopne
jo
xchg
and
iret
pop
stos
mov
stos
xor
push
push
sub
push
int3
push
cli
out
adc
xchg
ljmp
adc
push
adc
inc
xchg
iret
bound
insb
aad
shl
fldl
cmp
divl
dec
mov
ret
fstl
jge
adc
sbb
sub
mov
push
jns
inc
push
or
sub
push
pop
ret
dec
push
popf
mov
repnz
adcb
cmp
stos
jno
mov
cld
sub
rcll
hlt
xchg
and
vmwrite
mov
sbb
jno
notl
inc
cld
dec
in
sbb
dec
xchg
mov
cld
loope
mov
mov
inc
mov
pop
dec
or
xchg
sarl
xchg
add
mov
shll
or
mov
and
mov
cmp
dec
ret
ret
mov
dec
test
inc
out
mov
jg
xlat
cmpsl
ljmp
movsb
movsl
inc
rclb
aaa
int
cmp
pushf
lret
xor
in
aam
mov
jbe
js
xor
outsl
push
std
and
in
shlb
jp
cmpsb
push
adc
mov
push
adc
iret
jb
jl
dec
mov
dec
xlat
or
shrd
jae
stos
subl
int
mov
sub
push
insb
add
cmp
lods
je
cwtl
or
lods
xchg
jg
cs
pop
sub
shl
repnz
mov
pop
lds
jle
inc
xchg
sub
mov
loopne
dec
sarl
aas
jp
pop
pop
jmp
int
lods
push
jbe
pushf
fidivrl
dec
xor
fldcw
push
sub
xchg
push
push
sbb
push
dec
xor
mov
mov
lcall
xchg
loope
mov
int3
mov
fildll
popa
ds
loopne
pop
xchg
pop
repz
mov
rcll
xorl
negl
jns
adc
jl
pop
push
stos
loope
shll
xor
mov
xchg
pop
pop
xchg
ljmp
mov
xor
mov
in
jg
ljmp
sub
mov
icebp
enter
cmp
fwait
push
or
lds
sub
subb
sbb
insb
xchg
sub
mov
inc
jbe
in
xor
pop
mov
xchg
shlb
cmp
lret
adc
aaa
mov
push
imul
xor
xchg
jmp
xchg
sbbb
js
ds
jle
mov
sbb
or
ret
or
ret
or
mov
pop
addr16
data16
mov
jbe
nop
ja
pushf
sub
and
fstl
test
pop
sub
and
dec
pop
sti
pop
iret
cmp
ds
dec
lret
dec
cmp
cld
add
pop
lret
in
adc
cwtl
mov
fstpt
sub
mov
xchg
add
je
sahf
lret
pop
sub
xchg
pop
adc
inc
dec
call
ret
andb
or
test
shl
in
les
insl
mov
ja
inc
add
pop
jge
fistpll
dec
hlt
jne
repnz
addb
dec
or
gs
out
inc
cmpsb
push
push
dec
arpl
out
shlb
jp
movl
pop
inc
lds
leave
xchg
sbbl
loop
push
movsb
popf
xor
andb
push
cltd
adc
subb
jp
xchg
cmp
push
pop
jmp
push
sbb
aaa
lods
lock
leave
add
push
lea
jecxz
or
cmp
fmull
stc
scas
mov
je
pop
pop
pmullw
adc
sub
mov
nopl
jae
add
loopne
int
xchg
data16
push
xor
push
mov
and
push
fisubs
dec
xchg
dec
in
mov
push
jns
sarl
in
and
rcll
sahf
pusha
outsl
cltd
add
dec
adc
hlt
scas
test
call
cwtl
outsb
mov
mov
inc
xchg
test
fisubrs
cmp
mov
sbb
fstpl
sbb
add
scas
insl
repnz
arpl
in
mov
loop
sahf
fwait
adc
inc
mov
xchg
lock
cmp
pop
std
and
mov
dec
jne
and
push
cmp
mov
jg
mov
imul
sub
xchg
add
sbb
in
shr
pop
es
or
mov
or
int
dec
sbb
add
and
push
jecxz
mov
int3
mov
mov
outsb
out
jg
aaa
xchg
add
mov
mov
cli
pop
leave
or
das
lahf
repnz
cs
jnp
push
jp
fidivrl
rolb
xchg
pop
enter
xor
imul
mov
cmp
push
pusha
xchg
popa
fbld
add
gs
lcall
imul
shlw
ja
subl
add
js
into
fwait
adc
mov
push
sbb
iret
out
repnz
pop
enter
mov
adc
xchg
and
push
fwait
enter
jg
gs
xchg
movsb
or
das
imul
ja
clc
mov
cmp
add
das
popf
mov
jb
push
cltd
sub
and
adc
pop
pop
clc
pop
aas
push
jge
cvttps2pi
shrb
out
inc
scas
push
and
outsb
mov
inc
int
fsubrl
jmp
or
inc
or
sbb
inc
inc
dec
mov
imul
xor
cld
xor
adc
xor
test
daa
fisubrl
nop
mov
jns
jno
scas
lods
jb
pop
scas
icebp
push
insb
test
data16
insl
or
mull
mov
and
popa
rorb
out
push
push
jg
test
dec
outsb
stos
inc
ljmp
sub
cmpsb
pop
sub
aaa
jmp
adc
sub
jp
cwtl
dec
pop
push
add
aam
sbb
mov
inc
bound
ja
ja
dec
sbb
sub
icebp
xor
xor
sub
xchg
pushf
dec
repz
nop
cmp
sti
insb
decb
daa
push
divb
gs
mov
sub
imul
push
out
aam
in
or
xor
in
xchg
xchg
int3
mov
dec
frstor
insl
lods
xchg
mov
cmp
dec
or
cwtl
repnz
adc
fldcw
notl
xor
clc
lock
sbb
inc
xor
mov
push
and
cs
adc
xor
pop
bound
push
mov
lret
or
mov
outsb
sbbb
lds
mov
aaa
bound
ret
pop
add
not
pop
out
lea
mov
pop
ret
lret
ret
inc
sub
cmpsb
cmpsb
jno
gs
dec
bound
add
icebp
test
movb
mov
mov
jg
arpl
jg
test
push
aaa
incb
jle
mov
push
pop
ret
mov
aaa
std
ljmp
ja
fsubl
cmp
xchg
mov
dec
jg
lcall
push
xchg
movmskps
xchg
adc
nop
sti
add
jg
jl
mov
mov
out
inc
pop
aaa
push
xchg
add
int
dec
lahf
test
fcmovne
adc
shlb
pushf
lods
mov
sub
lret
ficoml
and
xor
cmp
pop
jne
sub
mov
push
in
mov
adc
test
out
lcall
je
mov
mov
mov
repz
xchg
pop
ss
iret
gs
es
and
push
nop
sbb
ss
fisubl
xor
push
scas
push
mov
outsb
out
cmc
imul
sti
fsubr
movsb
in
mov
sahf
loop
outsl
js
dec
pop
sbb
les
rclb
aas
flds
fwait
cmp
or
mov
inc
movb
adc
xor
cmp
fadds
inc
lea
movsl
mov
mov
or
repz
icebp
xor
into
inc
cmc
test
adc
loopne
stc
rorl
pop
int
adc
call
ret
xor
dec
imul
push
popa
xchg
rclb
sub
and
xchg
mov
fnstenv
cmp
test
adc
int3
cli
mov
sub
add
pop
sub
sub
mov
push
sub
sub
mov
inc
sbbl
dec
mov
rcrl
sbb
and
mov
dec
push
adc
insl
and
jmp
popf
out
sbb
push
cmp
mov
push
and
and
movl
jb
lds
ret
fdivrl
das
pop
jl
out
dec
adc
dec
push
dec
test
and
jo
mov
mov
popf
and
test
inc
cld
lret
add
shlb
add
cld
jo
dec
adc
sbb
ljmp
jmp
sbb
add
jb
je
scas
dec
test
and
add
in
dec
out
mov
out
fnstenv
test
inc
sarl
dec
mov
imul
adc
jno
das
in
std
adc
movsb
mov
inc
aaa
pop
jge
lahf
mov
iret
inc
mov
add
jle
pop
mov
cmp
lds
mov
pushf
movsb
addr16
ds
xor
je
movsl
icebp
sarl
push
mov
add
push
aas
jno
or
and
aaa
sbb
dec
jbe
jge
out
cmpb
inc
movsl
in
xor
cmc
adc
loope
popa
nop
xor
rclb
jmp
push
cmc
push
mov
add
add
dec
testb
inc
inc
iret
jle
push
pusha
dec
adc
fildl
fsubl
jae
sbb
insl
pop
lea
adc
cmp
adc
les
jnp
es
push
push
mov
xchg
rol
testb
loope
or
aad
and
push
and
jle
sti
repz
movb
fs
stc
and
adc
enter
jo
daa
lods
sub
out
nop
ret
push
xchg
outsb
andl
mov
push
movsb
popf
imul
mov
outsb
and
cli
stc
pop
xor
jnp
je
fnstsw
ss
or
mov
xor
jne
xchg
xchg
mov
mov
pop
or
pop
xchg
out
dec
mov
push
and
sub
or
and
lret
fidivs
fnstenv
inc
pop
out
ret
mov
dec
leave
sti
xor
cmp
cmpsb
sti
cmp
jae
pop
xchg
and
xchg
stc
inc
pop
adc
pop
insb
push
mov
fcmovnu
cwtl
fchs
sub
cmp
clc
rclb
jnp
sahf
lea
cmp
xchg
enter
jg
jno
and
mov
or
jl
popa
imul
sahf
test
clc
icebp
dec
addr16
enter
fs
and
in
sahf
pop
ficoml
mov
sbb
and
popa
mov
dec
lock
mov
repnz
fwait
in
addl
call
lahf
xlat
adc
nop
ja
nop
xchg
dec
je
and
push
das
lock
sarl
jns
nop
mov
mov
add
xchg
push
lret
ret
push
arpl
js
sahf
xchg
mov
adc
jmp
lods
fbld
outsb
lret
insb
and
int
insb
lds
push
lret
cmp
fldcw
add
xor
add
int
sub
jae
je
loope
xchg
mov
clc
lret
nop
adc
movsl
sbb
jb
pop
xchg
ja
xor
and
jne
and
leave
pop
testl
cmp
add
out
adc
push
push
jle
lret
outsb
dec
xchg
fisubrl
or
dec
ljmp
decl
inc
jne
imul
inc
adc
cltd
pop
adc
ret
sub
mov
andb
inc
or
dec
clc
add
flds
push
mov
popf
loop
sbb
fisttpl
enter
push
in
sahf
in
leave
data16
jno
js
xchg
ljmp
jl
dec
das
mov
push
movsl
push
nop
sbb
xchg
popf
pop
adc
insl
inc
xchg
fsubr
pop
dec
inc
jmp
add
nop
and
cmp
aam
subb
sbb
jg
stc
leave
rclb
dec
pop
stos
cmp
lods
jb
adcl
adc
out
in
sarb
xor
daa
mov
dec
cmpsb
out
pop
loope
add
fbstp
subb
dec
js
ljmp
fsts
cs
movsb
cmp
cltd
in
lahf
push
mov
aas
sbb
lea
test
mov
sarl
jmp
dec
fistps
sub
jge
into
lcall
aam
ds
sbb
push
cmc
or
and
mov
cmp
push
subb
stos
test
aas
mov
insb
in
sarb
xor
add
mov
jmp
lahf
and
jg
mov
cmp
add
stos
sub
and
adc
aam
mov
xchg
int3
mov
test
xor
rcll
sbb
adc
cmp
iret
inc
xchg
lea
jle
cli
lret
sbb
pop
or
arpl
lods
ds
adc
cmp
jmp
mov
jbe
test
mov
test
xor
mov
repz
mov
add
pop
sub
shll
inc
imulb
scas
xor
cltd
dec
push
inc
inc
imul
nop
imul
sub
repnz
jp
loopne
fistl
jmp
or
adc
outsl
test
sbb
insl
jno
or
add
sbb
test
dec
stc
sub
adc
xchg
jno
data16
repz
int
xor
cmp
jns
into
cmp
hlt
aad
ret
rorb
ror
shr
sub
xor
jmp
mov
int
xchg
jmp
sbb
cmp
jne
sub
pop
jb
dec
and
inc
dec
and
mov
xchg
ret
pop
inc
fistl
add
inc
imul
addr16
lods
mov
stc
mov
popf
inc
mov
pop
mov
cmpsb
ret
add
filds
mov
mov
fsubrs
gs
mov
movsb
hlt
and
test
mov
push
jo
push
es
shll
pop
inc
ss
mov
mov
out
or
push
or
xlat
jo
mov
jb
mov
jbe
mov
fistps
sbbb
jb
xor
inc
cmp
clc
inc
notb
arpl
test
shrb
adc
scas
pop
xlat
ret
sub
dec
mov
loop
inc
sbb
xchg
shr
mov
fwait
out
jo
cmp
aas
jno
rcrl
sbb
sahf
incl
xchg
cli
ljmp
bound
ret
xchg
mov
gs
stos
fwait
mov
addr16
jne
aad
pushf
andl
mov
out
cltd
leave
in
and
and
pop
ljmp
dec
xchg
in
jmp
push
jge
fscale
push
test
add
mov
lods
stos
enter
lcall
xchg
cmpsl
roll
sti
mov
and
lret
and
xchg
scas
or
push
xchg
pop
inc
xchg
stos
pop
dec
mov
cmpsl
ret
dec
pop
pop
dec
push
repnz
sbb
mov
inc
mov
xor
out
insl
mov
ret
roll
popf
fwait
out
xchg
jo
mov
xor
fs
sbbl
adc
mov
xor
xchg
mov
sub
lods
jecxz
cs
sbb
and
mov
jecxz
mov
push
popa
popa
std
fdivp
aad
nop
lcall
popf
jle
jb
add
sahf
fistpll
xchg
shl
xor
imul
xchg
mov
int3
jg
mov
cli
sti
fisubrs
mov
xor
push
sti
cmp
xor
rorb
pop
adc
aad
adc
stc
mov
push
add
jns
cmpsb
fs
data16
rcrl
aam
pop
movsl
movsl
jge
mov
push
test
test
roll
xchg
dec
cmc
mov
mov
icebp
pop
mov
pushf
sahf
mov
xchg
iret
inc
mov
and
sbb
mov
inc
lret
lahf
push
push
add
imul
in
lds
jl
push
xchg
push
mov
inc
mov
pop
sub
daa
add
add
ret
mov
ds
loope
xor
cmpsl
xor
or
mov
ret
pushf
lea
cmp
test
sub
popf
and
mov
sbb
sbb
mov
pop
pop
inc
js
lods
ss
jb
cmp
jmp
dec
xor
ret
sbb
inc
mov
jge
push
fwait
adc
sub
xchg
inc
aas
or
lock
or
xchg
shrb
mov
int
mov
repz
pop
lods
cli
shll
call
aaa
fildl
cmp
add
shll
inc
aam
test
mov
imul
xor
int
sbb
arpl
push
mov
inc
jg
imul
or
jmp
cmpsl
cld
cmpsb
xchg
add
fwait
push
mov
add
push
sbb
sbb
std
inc
cli
push
repnz
loop
and
popf
ret
fistpll
or
xchg
mov
notl
mov
dec
push
jne
jae
mov
in
cld
mov
xor
popf
pop
add
mov
add
cwtl
cmp
pop
and
mov
dec
xchg
pop
mov
call
aaa
push
imul
push
je
fwait
ret
test
arpl
mov
pop
inc
movsl
mov
dec
or
jne
or
out
add
lea
out
add
mov
jae
push
dec
clc
adc
daa
mov
ss
jno
pop
push
imul
fnstcw
lret
std
stos
hlt
inc
and
outsb
aaa
ret
add
loopne
add
daa
lods
add
addl
test
rcrb
lret
lods
jp
pop
enter
sub
es
enter
sbbb
adc
in
stc
addr16
outsl
mov
push
pop
mov
lret
xchg
test
mov
jg
push
mov
dec
mov
or
jl
jb
mov
xchg
cmp
cltd
scas
pushf
pop
inc
lret
dec
lret
jl
and
pop
mov
mov
cmp
sbb
jp
shrl
pop
pop
test
xor
popa
mov
push
xchg
xchg
dec
or
cmovs
fs
lock
imul
dec
fcmovnu
or
inc
jae
cld
fmul
lods
pop
add
ret
adc
fmuls
and
xchg
push
dec
mov
testl
repz
adc
nop
enter
movsb
mov
pop
test
jnp
inc
xchg
xchg
and
faddp
shrb
iret
mov
mov
in
add
xchg
inc
push
sbb
push
push
std
lock
sub
out
pushl
test
cltd
add
sbb
hlt
or
adc
sub
mov
xchg
jbe
mov
ret
mov
cmp
jbe
dec
jle
mov
fs
in
int
push
fcmovb
mov
cmp
clc
mov
mov
fmuls
cmp
es
sarb
shlb
and
xchg
and
sbb
jae
push
add
sti
negl
aaa
in
enter
loope
stos
int3
mov
sub
add
or
inc
xchg
mov
inc
jmp
jp
push
push
cld
stos
or
sti
in
test
inc
sub
int
loopne
jmp
xor
lods
js
jne
imul
loope
jl
ljmp
push
fnstcw
xchg
cwtl
hlt
popf
and
xorl
push
dec
sub
dec
stos
inc
jo
call
pop
mov
int3
mov
aad
pop
fildll
add
inc
jne
lcall
adcl
dec
push
mov
cmp
pop
pop
add
bound
arpl
mov
jb
fneni(8087
dec
pop
cmc
add
mov
sub
push
dec
lret
cld
mov
or
push
pop
pop
inc
sbb
xchg
js
ds
rorb
in
jb
repnz
cwtl
sahf
jbe
cltd
xchg
sbb
and
jg
add
mov
mov
xchg
in
and
cmp
out
nop
rorl
shlb
fdivr
sbb
mov
stos
mov
cli
dec
outsb
push
add
or
cmp
mov
xor
fldcw
sbbl
mov
or
call
add
in
cmpl
lcall
dec
jmp
shll
or
pop
cmc
and
daa
jmp
bswap
lock
push
push
cltd
mov
inc
pop
inc
insl
xchg
mov
nop
sub
data16
pop
orb
mov
dec
jge
ss
cmp
jne
movsl
sub
ss
push
pop
add
push
xchg
sbb
test
jae
sbb
push
orl
lret
pop
cmp
popf
aam
jp
rorb
xor
lcall
adc
vsubps
jg
ret
roll
cmp
mov
insb
repnz
rorb
push
xor
inc
and
jo
popa
sbb
sub
jge
test
xchg
testb
in
mov
mov
rdtsc
loope
out
or
or
mov
movsl
insl
sub
rcrl
cmp
cmp
into
jg
ds
mov
cmp
dec
ret
jae
lret
cmpsb
pop
mov
sub
inc
dec
jns
pop
add
xchg
vpsubd
sahf
push
nop
enter
sub
xchg
insl
stos
icebp
mov
movsl
jge
push
into
call
sbb
shl
addr16
push
cmp
push
outsb
in
inc
inc
jmp
or
jp
decl
mov
jnp
fwait
xorl
inc
out
js
jns
in
cmp
bnd
sub
and
stos
cmpsb
insb
push
loopne
inc
mov
fsts
rolb
sbb
inc
test
xchg
dec
mov
data16
fcomi
loopne
xor
mov
stos
lds
nop
cmc
dec
fdiv
punpckhdq
pop
lods
push
xor
adc
cmp
repz
dec
mov
fdiv
cld
adc
pop
pushf
or
jnp
fldt
ret
outsl
pop
outsb
pop
push
insl
divl
jne
xchg
jp
mov
mov
fcoml
sub
adc
add
mov
stc
push
hlt
inc
pusha
and
push
ficomps
mov
in
test
pusha
inc
mov
fyl2x
pop
or
neg
add
out
ja
jbe
into
push
cli
jnp
fsubs
ds
mov
xchg
pop
data16
xor
sbb
incl
ss
fisttpll
in
mov
bnd
outsl
fwait
lods
xchg
and
jge
lock
fbstp
cwtl
in
and
pop
rclb
mov
in
inc
lods
jge
pushf
jb
adc
adc
pusha
mov
cmp
aad
fcomps
repnz
inc
jge
sbb
sub
roll
jb
cmpsl
add
jecxz
loope
pop
push
or
bound
sti
iret
loop
xchg
lods
adcb
mov
jb
sub
arpl
cmp
adc
jb
xlat
shl
gs
inc
add
sahf
or
shrl
pop
cmp
jmp
or
popf
mov
test
out
je
xor
cmp
sarb
mov
dec
subb
dec
pop
and
jae
push
pop
cmp
inc
bound
cmc
push
mov
mov
cmpsl
hlt
mov
fadd
pop
or
loopne
pop
dec
les
push
sub
cmpsl
fneni(8087
movsb
out
lds
fucomi
stos
sti
cs
shl
rclb
rorb
xchg
xorb
rclb
test
xchg
aas
jno
mov
stc
push
jl
mov
dec
mov
test
and
aad
mov
sbb
push
inc
xlat
bound
lret
imul
clc
movsb
or
stc
cld
fildll
mov
push
mov
fs
add
mov
mov
dec
arpl
imul
iret
cmp
out
inc
mov
inc
enter
or
imul
out
sti
push
push
jb
xchg
xlat
mov
xor
cmp
or
imul
or
cs
sub
xchg
mov
gs
ss
fst
jmp
jne
shlb
out
add
or
add
add
dec
push
and
xorb
pop
xor
cmpsl
xchg
imul
ljmp
mov
push
sbb
adc
cmp
ficoml
push
ds
xchg
or
dec
gs
aas
mov
dec
mov
repz
push
test
xor
and
lods
loope
pop
cmpb
mov
bound
lcall
add
mov
sub
push
xchg
in
push
sub
subb
subl
sub
dec
out
hlt
aam
cli
test
sarb
push
pusha
dec
xchg
mov
push
out
ud1
sub
and
mov
xor
ja
jnp
loope
sbb
out
sub
fs
push
sti
cli
pop
mov
ja
sbb
fbld
clc
js
js
xchg
sub
jnp
sbb
rorl
push
cmp
nop
les
rorb
dec
bound
lret
in
imul
not
mov
pop
lds
cmp
js
jle
pop
push
test
add
clc
out
jb
xlat
sti
xchg
movsl
inc
jo
push
leave
daa
dec
jg
cmp
dec
push
repnz
icebp
pop
mov
adc
dec
insl
scas
adc
imul
cmpsb
inc
arpl
test
je
mov
inc
mov
fdivl
lahf
xor
es
cmpsb
pop
icebp
in
inc
mov
rorb
aam
imul
and
jae
dec
hlt
mov
fwait
scas
dec
inc
cmp
sar
sub
xchg
push
bound
xor
cwtl
xchg
sub
aam
lret
mov
push
inc
aaa
cli
sub
mov
jo
jle
test
inc
notl
mov
inc
call
mov
das
or
addl
fucom
aaa
fucom
dec
insb
xorb
jecxz
into
nop
xlat
es
cli
or
mov
jg
cwtl
mov
push
mov
repz
loop
aaa
dec
sti
fcomi
stos
pop
sub
or
and
mov
pop
dec
push
mov
mov
call
mov
js
repnz
std
lods
ror
sub
or
aam
lcall
nop
cmp
sbb
push
ficompl
aad
sahf
fcmovb
xchg
xchg
push
in
loop
dec
test
popa
add
lods
rcrl
push
pop
fisttpll
insb
pop
cmc
dec
movsb
push
jge
mov
mov
mov
insb
arpl
and
pop
repnz
ja
enter
or
ret
or
xor
pop
push
rcll
xor
jmp
cmp
push
push
test
and
inc
mov
pop
dec
xchg
ljmp
cmpsb
mov
sub
cli
sub
push
in
fnsave
fbstp
cmp
jnp
push
sahf
orl
xchg
adc
and
mov
xchg
jne
xor
sub
xchg
mov
ss
mov
mov
js
jo
mov
scas
xchg
mov
lret
push
jmp
lcall
orl
into
sbb
icebp
mov
xor
pop
push
sti
push
daa
push
test
jbe
in
test
xor
cld
decb
lds
add
lret
pop
out
push
cmp
sbb
xchg
pop
popa
xchg
or
pushl
hlt
in
std
push
adc
pop
int
mov
mov
test
cwtl
mov
jae
lea
cs
pop
ljmp
adc
xor
fsubr
jg
mov
cmp
hlt
mull
inc
add
popf
or
enter
bound
cltd
pop
adc
cmpsb
inc
enter
jp
mov
mov
xor
into
repnz
ljmp
mov
fisubs
jge
lods
adc
mov
mov
loop
cmp
inc
scas
or
test
fistpl
push
and
inc
cmpsl
aaa
inc
mov
add
lods
ss
pop
mov
inc
lahf
js
fyl2x
ret
mov
jg
sarl
add
ret
sarl
cld
xchg
int
outsl
sub
and
xor
fstpl
imul
imul
pop
das
xor
mov
sub
lods
lds
pop
scas
jae
mov
cmpsb
mov
dec
pop
sub
ret
out
dec
ljmp
cld
mov
mov
push
fs
mov
cmp
das
mov
out
xor
lea
leave
add
jecxz
dec
xchg
jl
pop
fldcw
jnp
cld
inc
xor
jg
inc
gs
sbb
insb
pop
sub
aaa
xchg
bnd
mov
scas
sti
arpl
pop
fidivl
ret
xchg
pop
dec
insl
mov
adc
xor
mov
jne
out
je
mov
jo
dec
adc
push
mov
adc
jo
imul
sti
inc
bound
jmp
mov
out
xchg
outsb
setno
sub
aam
mov
aad
inc
fisubl
std
adc
xor
leave
stc
sbb
scas
call
pushf
adc
scas
fnstsw
or
xchg
movsl
inc
rcrl
int
in
inc
xor
pop
xor
xchg
adc
shrl
shll
mov
push
movsl
cmc
mov
pop
lods
cmp
mov
mov
in
xchg
ret
xchg
xchg
sti
jbe
adc
and
insb
shrl
xchg
adc
leave
adc
imul
pop
xchg
loope
daa
sahf
test
stos
mov
clc
cmp
jecxz
daa
push
sti
mov
push
dec
ficoml
mov
cmp
ret
cmp
jl
insb
sub
cmp
add
mov
lcall
loope
lods
xchg
jp
outsl
pop
xchg
push
dec
mov
mov
mov
in
push
fmuls
cmovl
jl
in
imul
lret
xor
or
das
cli
mov
rorl
mov
pop
cwtl
sub
imul
push
xchg
rol
adcl
in
loopne
add
pusha
pop
ret
aad
jbe
jns
dec
cmpb
stos
scas
int3
int
push
adc
call
fwait
hlt
inc
inc
cmp
or
loope
inc
popa
movsb
add
mov
lret
data16
cmpsl
ret
pop
decb
push
gs
test
push
sub
pop
lock
icebp
stc
sub
xchg
in
sahf
dec
in
xor
loop
lret
push
imul
jae
add
mov
sbb
mov
add
xor
addr16
out
test
sub
arpl
sub
jmp
mov
test
adc
xchg
repz
push
adc
outsb
addb
pop
leave
sbb
loope
sub
pop
in
inc
loopne
je
subb
mov
repnz
add
pop
shr
cmc
xchg
rcl
mov
ja
jbe
lea
push
dec
loop
arpl
dec
jmp
add
push
cmp
addr16
sbb
out
fisttps
xchg
aad
mov
mov
add
outsb
adc
fidivs
pop
jae
bound
push
scas
push
lods
mov
je
sub
cli
cld
stos
dec
mov
jne
stos
push
jb
cmpsb
cmp
lcall
jo
inc
jae
cs
add
roll
jno
sbb
mov
dec
sub
loopne
inc
or
jo
inc
jmp
cmp
push
jp
adc
iret
stc
fcoms
dec
pop
jg
inc
jno
sti
inc
insb
xor
mov
fcmove
jae
shrb
ds
inc
loop
icebp
dec
xchg
sub
rolb
xchg
lret
mov
push
in
push
mov
sarl
rcrb
mov
xchg
cmp
and
out
into
lock
sbb
or
arpl
jae
fisttpl
jbe
xlat
sub
stc
bnd
fdivrs
ss
dec
cmp
jo
sbb
icebp
movl
insb
jmp
in
sub
fsubrs
jl
stos
xchg
push
leave
add
stc
adc
pop
lcall
adc
and
push
mov
add
inc
push
faddl
test
mov
push
adc
adc
stos
fstl
dec
mov
mov
popf
pusha
pushf
pop
sub
test
call
nop
adc
or
jbe
pop
or
rcr
pop
push
xor
imul
sub
pop
add
jne
push
xchg
int
fisubrl
mov
mov
fsts
jp
push
add
pop
sbb
leave
mov
andl
mov
out
imul
xchg
sub
push
ret
and
scas
mov
lret
repz
shll
int3
and
push
sbb
ljmp
scas
out
and
pop
mov
jno
ud1
mov
inc
mov
shll
insl
mov
das
adc
int
mov
cmp
loope
sbb
inc
and
imull
enter
mov
inc
fcmove
ror
or
push
into
and
stos
fsub
sbb
inc
dec
jnp
lods
jb
stos
andb
iret
es
push
outsb
leave
aaa
jne
jmp
push
stos
es
jle
loop
loope
rep
aam
es
std
mov
pop
sbb
jg
push
cli
fadds
jne
aas
fsubrl
mov
jle
jno
cmp
clc
js
jecxz
imul
outsb
gs
push
push
aas
addr16
pop
fisttpl
sahf
lods
fs
cmp
dec
or
push
xor
add
addb
stos
mov
cmp
pop
mov
mov
out
insb
sbb
xlat
jl
pop
aad
stos
sub
je
call
push
pop
sbb
jbe
loopne
sbb
ds
sarl
fs
addr16
mov
lea
ljmp
jg
push
sahf
xor
pop
je
push
pop
cli
mov
cld
movsl
or
ret
andb
in
push
adc
gs
adc
lods
repnz
jmp
cmp
push
dec
dec
pop
into
ja
xchg
ss
js
cmpsl
xchg
mov
ret
arpl
xor
loopne
je
and
lock
adc
rorb
hlt
insl
mov
fldenv
push
pop
or
movsb
rcl
js
and
test
aad
xor
popf
lock
adc
into
cwtd
adc
pop
push
xchg
jo
mov
xor
mov
pop
jecxz
ret
xchg
int3
jno
out
fsubr
jne
lea
jne
push
dec
mov
sbb
nop
cli
or
xor
repz
add
jecxz
mov
push
sub
inc
mov
fwait
sub
shll
jmp
jg
ret
inc
xor
and
int
inc
jnp
addr16
xchg
add
jns
and
cmp
enter
or
xor
push
setbe
add
push
ss
mov
jns
dec
xchg
mov
pop
dec
mov
xor
dec
bound
in
push
iret
ror
mov
or
std
jle
sub
pop
icebp
into
push
movsl
loop
xchg
insb
mov
scas
cmp
sub
add
aaa
das
outsb
cmovbe
sar
dec
sti
mov
sbb
mov
sub
lods
imulb
sbb
iret
stos
dec
in
dec
sbb
out
mov
das
mov
movb
pop
lds
loop
adcl
cmc
lods
xchg
sub
mov
popf
mov
push
pop
xchg
inc
aad
push
cmp
mov
jb
and
fsubl
movsb
push
cmp
add
push
xor
cmp
les
lods
mov
ds
js
xchg
vminss
shl
cmc
dec
test
jle
inc
sub
xchg
mov
mov
adc
iret
dec
push
or
scas
or
leave
or
into
lods
lahf
mov
push
push
jmp
pop
outsb
sbb
out
rorb
push
push
adc
call
sahf
or
nop
add
pop
cmpsb
outsb
subl
push
adc
sar
or
push
cmp
inc
mov
sub
movsl
fucomi
in
pop
sbb
mov
ret
sbb
cmc
mov
scas
neg
or
test
js
xor
adc
push
ficomps
adc
nop
or
push
xlat
test
test
out
jge
cmp
sub
pop
pop
sub
or
push
push
cmpsb
jae
cmp
stos
pop
lods
xor
mov
popf
filds
insb
jnp
orb
or
push
aad
imul
push
mov
cld
sub
rcll
lea
insl
adc
lret
mov
imul
scas
hlt
iret
insl
push
jne
ror
and
dec
gs
inc
ja
mov
or
dec
lahf
mov
push
xchg
ljmp
scas
xor
adc
gs
jbe
mov
insl
adc
sbb
xchg
jae
test
outsl
imul
mov
push
jne
test
pop
insb
xlat
dec
loope
es
mov
lock
out
aas
and
rcr
fimuls
or
xchg
fiadds
push
mov
or
pop
idivb
movsl
scas
jl
pusha
std
pop
insb
lea
inc
loopne
icebp
in
int
xor
imul
cmpsb
adc
push
inc
cmp
pop
mov
add
shrb
mov
lea
add
cltd
daa
insb
in
cmp
pusha
dec
decb
and
cltd
rclb
hlt
fidivrs
fidivs
test
inc
and
inc
mov
outsl
shll
ljmp
rcrb
movsl
out
pusha
jae
dec
call
int
arpl
jo
push
out
ss
or
sub
fs
push
int3
call
and
add
pop
data16
fucomp
mov
lret
push
outsl
test
xor
push
hlt
data16
in
inc
pop
mov
sbb
xor
popf
cmp
push
jp
jmp
mov
fyl2xp1
ds
insl
std
lcall
sbb
cltd
or
mov
mov
xor
setne
xor
cltd
rcll
mov
pop
pop
pushf
out
fists
sbb
push
xor
add
lods
pop
xor
idivb
insb
cltd
stos
shrl
daa
mov
into
or
xchg
add
jns
ss
xor
daa
push
ds
aas
jge
mov
fwait
cmp
imul
iret
out
fimull
cwtl
mov
jle
je
xor
jne
dec
adc
mov
add
dec
aam
loope
cmpl
call
popa
jecxz
or
push
movsb
test
mov
pop
movsb
mov
insl
mov
mov
sbb
loope
cmp
ja
inc
jg
bound
ja
adc
int3
out
repz
es
mov
insb
xor
sbb
adc
jl
andl
stos
pushl
xor
pop
mov
bswap
addr16
ja
push
pusha
scas
stos
cmpsl
xchg
addl
lret
outsb
push
mov
dec
add
xor
and
ret
jno
mov
ja
mov
pushl
pop
gs
idiv
inc
push
shlb
int
sub
mov
pop
pop
push
lods
addl
jb
dec
sub
testb
bound
sbb
test
fwait
mov
push
inc
sbb
fldt
cmpl
dec
movsl
insl
in
pop
fcoml
xchg
xchg
mov
andb
test
movsl
mov
sub
jbe
and
and
mov
stc
int3
in
mov
add
sub
pop
imul
mov
movhps
stc
pop
adc
push
movsl
loopne
je,pt
xchg
inc
ja
jnp
push
in
push
push
and
sbb
sbb
add
mov
pop
int
js
outsl
and
xor
aas
cmpsl
mov
add
shll
cs
xor
mov
mov
imul
ret
xor
std
lock
iret
xchg
jl
test
jo
mov
imul
ret
sbb
nop
mov
aas
mov
mov
insb
pop
imul
outsl
jbe
adc
dec
rolb
ss
mov
test
mov
aaa
xchg
fdivl
xor
sub
mov
gs
add
jge
aam
imul
push
into
push
inc
ja
jnp
jecxz,pt
pop
mov
popa
sbb
outsl
mov
repz
mov
in
push
out
cmp
imul
cld
mov
dec
clc
and
pop
lahf
int
sub
mov
mov
mov
jge
lret
inc
jecxz
rcrb
sub
popf
sub
enter
mov
or
or
add
orl
jle
xor
mov
insl
loop
mov
mov
lret
or
cs
lret
adc
push
popf
shrb
addl
push
pop
incl
pusha
and
out
mov
mov
xchg
jns
inc
imul
adc
or
out
imul
cltd
pop
rcrb
es
dec
hlt
xor
mov
xor
ss
notb
outsl
aas
mov
inc
cmp
fidivrs
aad
cmp
jno
sub
inc
push
jne
jl,pn
or
es
ljmp
and
data16
push
and
daa
sub
data16
dec
xor
xchg
inc
sub
iret
mov
pop
and
push
jle
and
daa
mov
mov
dec
cld
arpl
les
sub
dec
sbb
push
test
jne
stos
jmp
sub
sahf
inc
inc
add
jno
inc
dec
jno
ret
outsl
adc
mov
out
rcll
in
ljmp
mov
decb
mov
aad
mov
jb
jbe
fdivl
and
arpl
call
insl
jns
mov
xchg
adc
mul
xchg
mov
xchg
ret
sub
mov
mulb
aaa
or
fcoml
mov
movsl
add
lock
out
mov
cli
in
and
cmpsl
dec
mov
lret
stc
mov
or
aam
mov
test
cmpsl
xchg
mov
testl
push
arpl
repz
jecxz
or
xchg
xchg
mov
sub
data16
mov
insb
lret
mov
pop
jp
dec
cmp
mov
leave
lcall
sub
lahf
xchg
imul
outsl
inc
shlb
inc
sahf
sbb
jne
cmc
int
stos
outsl
jl
ds
es
pop
xor
jo
and
cmc
pop
addr16
aam
pop
pop
mov
ficompl
test
cmpl
in
xchg
js
arpl
incb
or
mov
imul
fsub
inc
and
icebp
pop
sti
js
or
fcomps
push
sbb
mov
sub
xchg
dec
jnp
shr
or
jno
ret
das
sbb
sbb
mov
push
insb
pop
pop
in
scas
pusha
xchg
ljmp
sbb
push
loope
fistps
int3
cwtl
call
adc
leave
or
adc
int
and
mov
js
sub
cmp
sub
in
push
fwait
aaa
test
mov
bound
adc
movsb
ret
or
dec
stos
cld
cmp
xchg
mov
jnp
add
daa
add
inc
gs
ljmp
call
mov
hlt
mov
jne
jg
and
std
cld
arpl
xchg
add
sub
xchg
sbb
lods
jns
fistpll
std
lock
mov
imul
push
pop
sub
dec
and
and
fisttpll
jl
jmp
mov
sub
inc
roll
mov
mov
mov
pusha
in
jge
push
shll
push
sub
inc
xchg
pop
or
hlt
xor
jmp
pop
loop
adc
addr16
cltd
rcrb
jg
push
add
push
cwtl
push
or
out
or
jne
adc
into
jmp
pop
adc
mov
in
mov
mov
sbb
icebp
in
scas
nop
sub
sbbb
xlat
popf
dec
or
push
and
out
mov
mov
lea
mov
pop
clc
xchg
es
mov
fiadds
sbb
xor
mov
pushl
jge
push
loope
cmc
nop
test
mov
ja
cwtl
xor
dec
lcall
fcomi
mov
jmp
shll
mov
sub
stos
stos
and
cli
lret
mov
lds
or
push
jle
pop
out
lret
push
adc
arpl
pop
mov
jo
shrl
sbbl
pop
outsb
inc
sub
mov
sahf
or
popa
or
jno
jp
dec
cmp
inc
shll
inc
push
fwait
jb
imul
sbb
fdiv
js
out
push
push
ret
xor
add
cmc
jno
and
or
cmp
mov
xorb
shlb
dec
cltd
scas
adc
push
sub
adc
mov
insb
outsb
notb
jp
pop
shrb
test
xchg
daa
xchg
xchg
lods
popa
jnp
stos
mov
out
mov
jecxz
cmpl
sbb
popf
pop
aaa
lea
adc
les
ss
jnp
mov
push
or
inc
notb
cmpsl
ret
and
xor
xchg
push
shrb
mov
cmp
sbb
xor
cmpsb
in
sbb
mov
mov
jo
or
lcall
icebp
xchg
dec
pop
in
in
pop
add
out
lretw
orl
push
leave
or
mov
hlt
mov
add
mov
xchg
xor
xchg
mov
aad
loopne
fcmovnbe
in
mov
int3
and
shll
pop
stos
and
sub
dec
icebp
stc
lea
loop
cmpsl
push
fwait
cmp
dec
push
cmp
lea
xlat
xor
sbb
mov
sbb
xchg
xor
rcrl
pushf
mov
push
lods
push
mov
mov
test
add
lahf
imul
mov
xchg
sbb
add
nop
adc
enter
decl
jp
dec
sbb
xchg
dec
mov
mov
push
ds
cmc
mov
jecxz
jle
lahf
fnstenv
add
jb
jle
movsb
movsl
in
mov
push
cs
jo
lds
outsl
inc
pop
flds
pop
in
out
mov
mov
addr16
adc
leave
pop
insl
adcl
push
fsubrs
inc
std
lock
sub
les
and
in
adc
popl
mov
mov
in
mulb
int3
cmp
xchg
pushf
sub
popa
jns
push
hlt
mov
icebp
cmc
jmp
pop
sbb
sbb
clc
jns
shl
add
mov
push
int
sub
and
mov
xacquire
add
shlb
aad
mov
out
out
pop
or
stos
cli
fiadds
dec
jl
pushf
xor
push
adc
nop
leave
jmp
loop
sar
jne
mov
or
dec
sbb
loop
stos
add
mov
jg
cs
lock
inc
push
loop
or
mov
xor
rcll
test
lock
imul
or
cli
xchg
in
push
stos
mov
scas
fldenv
popf
ljmp
fistpl
or
cmp
jmp
gs
and
add
call
or
movsl
adc
into
daa
push
push
sub
or
iret
mov
cs
fimull
dec
xchg
pop
or
push
jae
sub
iret
ja
cli
mov
jns
punpckhbw
imul
adc
sbb
or
je
cmp
push
lret
imul
sarb
xchg
push
or
arpl
pop
ljmp
mov
pop
out
push
dec
mov
mov
popf
movsb
xor
push
out
in
popl
stos
mov
xchg
mov
cmp
test
push
jb
shlb
dec
data16
call
ffree
mov
aad
sbb
mov
pop
cltd
out
jno
and
mov
rolb
fdivrs
adc
adc
ljmp
xchg
jnp
sbb
jb
and
imul
leave
cltd
jo
cmp
jmp
and
cmpb
cmpsl
adc
dec
das
loopne
jg
push
sub
scas
jecxz
movsb
lock
iret
clc
adc
scas
xlat
in
sahf
pop
vphsubbw
out
dec
mov
ror
push
mov
push
add
out
and
pushf
pusha
adc
jmp
push
xchg
xorl
ret
in
xor
xor
adc
jno
sub
in
lret
cmp
jecxz
pop
add
add
push
mov
xor
outsb
cmpsl
out
push
mov
gs
test
ror
call
mov
enter
mov
pop
dec
and
push
and
sbb
dec
mov
mov
or
decl
lods
push
ljmp
imul
fs
dec
adc
or
mov
jle
insb
shlb
dec
cbtw
push
loope
pop
aam
shrb
adc
int3
xor
es
mov
inc
loop
inc
mov
pusha
cltd
or
xor
and
pmulhw
jg
outsb
mov
pop
ja
dec
inc
push
out
dec
cmp
sbb
incb
ds
rcll
or
jmp
imul
xlat
in
fists
lret
pop
mov
das
adcl
mov
mov
fs
ficoms
into
ljmp
jge
cmpsl
fcmovu
sbb
lock
cmp
xor
lret
pop
cmp
jl
jp
adc
aaa
inc
out
cmc
jb
cmp
cmp
cmpsl
fcoms
rcr
imul
std
cmc
shrl
xor
pop
xchg
jp
aas
jg
cmp
pop
inc
pop
addr16
out
ret
push
xchg
push
fsubl
mov
insb
inc
lock
shlb
jl
pop
mov
dec
mov
dec
or
pop
pop
jnp
pop
movsl
jge
and
jge
mov
fs
popf
fisttpl
lods
xor
cwtl
mov
aaa
mov
shlb
hlt
loop
iret
sahf
pop
cmp
test
mov
loope
into
push
insl
adc
jge
aas
jmp
out
test
push
pop
in
push
fistpll
rcl
mov
pop
cmpsl
jp
pop
jg
jae
mov
push
dec
xlat
fs
sub
mov
sahf
cmp
cwtl
xchg
imul
add
enter
inc
xor
add
hlt
add
dec
out
jo
jmp
daa
dec
xchg
pop
mov
sti
xor
jmp
push
insb
sbb
or
insl
or
in
or
popf
inc
loop
xchg
inc
mov
sub
aam
scas
push
stos
mov
jge
cmpsl
scas
mov
das
imul
jmp
lret
stos
mov
xor
lock
jne
and
nop
fisubrl
pop
lds
mov
mov
out
or
dec
jecxz
cmp
test
sbb
enter
xchg
cwtl
ss
sti
cld
xorl
fdivrl
fwait
lea
adc
gs
lea
pop
xchg
mov
adcb
popa
test
sahf
ret
xchg
mov
cmp
jne
xchg
cmpsl
dec
xchg
mov
rcl
inc
xchg
or
mov
cmp
in
xchg
mov
scas
mov
lahf
mov
pushf
lods
daa
push
mov
add
fwait
inc
pop
sahf
or
and
jbe
movsl
popa
ds
cmpsl
hlt
stos
dec
xchg
test
xchg
dec
fiadds
enter
repnz
cld
push
push
fwait
into
mov
loopne
mov
imul
loopne
dec
je
js
ret
jmp
out
frstor
push
cld
jp
cld
jne
sahf
xlat
xchg
jle
popf
lds
xchg
inc
icebp
clc
aaa
cwtl
imulb
xchg
and
adc
movsb
adcl
mov
cmp
push
adc
xchg
sbb
push
cmpsb
orb
xor
xor
dec
mov
inc
aad
ss
in
sbb
push
sahf
push
shlb
fidivrl
xchg
rorb
int3
push
inc
stos
int3
pop
int
push
fiadds
jns
not
testb
mov
and
push
jl
push
cmp
pusha
cmp
popf
leave
fcmovnbe
rcrl
outsl
pop
cmp
cli
icebp
mov
dec
repnz
pop
addr16
daa
paddusw
sbb
xchg
push
and
and
rcl
sub
sbb
sbb
pop
pusha
or
imul
mov
inc
push
lret
dec
cmpsb
push
andl
jb
cmp
push
inc
or
sub
mov
add
or
icebp
mov
in
test
sbb
mov
dec
or
mov
xchg
jle
outsb
rcll
icebp
pusha
sti
pop
adcl
xor
out
stos
loop
dec
and
mov
dec
insl
pop
sahf
or
xchg
outsb
jbe
mov
jmp
test
outsb
cmpsl
mov
into
cwtl
lret
push
add
mov
fcom
push
lret
movsl
sbb
popf
lods
repz
push
inc
lea
daa
adc
mov
mov
iret
scas
fidivl
and
arpl
loopne
imul
enter
mov
lods
jmp
fs
movsl
pop
jno
pop
cmpsl
data16
sbb
mov
movsb
push
dec
mov
je
jecxz
jnp
and
popf
sub
dec
fisttps
cld
push
push
stc
repz
loope
popa
dec
xchg
insl
cmp
imul
push
cld
mov
mov
xchg
lock
pop
inc
pop
lock
xchg
inc
idiv
into
cmp
jb
ss
jmp
jae
xchg
clc
mov
jmp
notl
fxch
and
int
outsl
iret
fcoms
mov
mov
insl
xchg
cmp
sub
cmpl
push
daa
ret
test
sahf
shll
adc
ljmp
dec
rolb
shll
rorb
sbb
gs
hlt
sbb
sahf
adc
or
xlat
dec
sub
xlat
je
in
or
cmp
mov
insl
rcrl
xlat
movb
les
sbb
jp
mov
push
push
push
dec
adc
and
sub
inc
push
in
push
pop
dec
adc
dec
jbe
mov
jmp
imul
cs
add
jle
jbe
xchg
les
xchg
out
lds
xor
push
dec
xchg
push
push
ljmp
xchg
dec
test
pushf
shll
mov
lock
mov
lods
lods
rolb
xchg
mov
aam
or
nop
mov
iret
and
out
nop
pop
xchg
adc
outsl
sbb
mov
out
rorl
idivl
push
lea
cmpsl
mov
dec
fucomi
xchg
cmp
pop
pshufw
mov
sbb
lcall
mov
and
rcr
pop
mov
and
push
out
aaa
test
out
test
cwtl
add
push
insl
mov
cltd
hlt
sahf
movsl
xor
aam
add
xchg
cli
sbb
jo
loopne,pt
mov
stos
jge
jmp
inc
lds
and
inc
lahf
das
in
adc
fdivs
lds
bound
mov
mov
stos
fistl
push
test
dec
jle
pushf
jbe
orb
pop
js
mov
int
test
jp
aam
insl
pop
in
jecxz
xchg
in
sbb
mov
repnz
ljmp
sar
shl
push
fldcw
sbb
iret
jb
add
clc
lret
mov
out
push
adc
fwait
xor
lods
fcmovbe
jle
call
xchg
leave
sar
js
rorl
fsub
icebp
loop
jb
lret
push
add
mov
andb
fimull
gs
cs
cmp
or
cld
xchg
dec
data16
loop
aas
std
pop
sbb
jo
or
stc
mov
jp
addr16
and
int3
es
fistpll
imul
mov
pop
push
push
jp
push
or
mov
push
push
ja
lods
mov
sahf
fidivs
bound
pop
jb
js
std
shrl
test
cwtl
inc
test
popf
ss
push
jo
xchg
and
xor
pop
and
lahf
xlat
dec
pop
mov
sbb
fwait
outsb
sbb
fisubrs
inc
push
das
gs
fnsave
and
pusha
test
mov
pop
mov
inc
test
jge
sub
shll
mov
cld
mov
in
sbbl
and
daa
inc
adc
xchg
pop
pop
ror
jl
push
fists
mov
xchg
in
mov
sub
sbb
mov
mov
lret
sub
mov
movsl
lods
call
or
add
sub
sub
clc
xchg
aaa
lods
mov
jnp
push
cmp
xor
push
xlat
in
pop
and
jl
outsl
shrl
mov
icebp
je
push
fsubrl
std
stos
movsl
xchg
in
sti
stos
mov
adc
push
ds
fnstcw
jnp
std
cmp
cli
mov
sbb
inc
mov
iret
push
and
inc
hlt
cmp
jns
in
xchg
shll
aas
sub
aaa
push
mov
xchg
inc
xor
sbb
addr16
fildl
mov
in
push
or
mov
mov
ret
stos
or
jbe
add
cmp
movsl
in
shlb
pop
cld
lahf
add
repz
aam
sbb
fidivrs
jg
inc
and
ljmp
cmp
cli
popf
test
mov
scas
enter
lods
xchg
xor
mov
sbb
mov
cli
pop
xchg
mov
out
mov
mov
mov
decl
dec
lea
or
xchg
sub
outsb
in
lfs
and
jmp
mov
clc
vpsllq
in
mov
mov
sti
or
inc
lock
mov
inc
mov
aaa
pop
scas
push
mov
or
sbb
mov
mov
pop
out
or
sbbl
xchg
push
mov
mov
xchg
fadds
dec
jl
lret
pop
mov
and
push
cmp
jbe
mov
lret
pop
pop
nop
or
jbe
mov
xor
mov
sub
jb
xchg
add
repz
ret
repnz
and
dec
xchg
lcall
xor
ret
xchg
push
mov
mov
imul
fs
or
push
out
outsl
movb
mov
lret
pop
scas
cmp
or
pop
test
jecxz
adc
popf
cmp
out
in
inc
pop
xchg
mov
ficoml
mov
add
push
dec
popa
jg
pop
nop
add
les
push
stc
sbb
in
jecxz
mov
lea
lret
cld
rorb
xchg
jo
aad
repz
push
daa
aad
in
clc
jp
or
add
scas
mov
or
mov
mov
adc
and
nop
fcmovbe
test
shlb
push
xchg
insb
sarb
push
cwtl
scas
fnstenv
pop
xchg
in
dec
in
mov
pop
addr16
aam
inc
std
filds
fwait
mov
imull
adc
add
int
rorb
adc
adc
jb
repz
rol
xchg
fbld
push
xchg
repz
jnp
mov
add
dec
or
or
mov
push
test
xchg
jbe
mov
popf
stc
xchg
mov
push
sar
std
in
pop
ss
rclb
fs
push
test
cmp
out
push
sub
fs
in
repz
push
fldcw
jnp
imul
push
sbb
je
fistl
les
mov
cmc
outsl
sub
sbb
fwait
or
dec
daa
ds
xchg
inc
lcall
arpl
jno
push
addr16
orl
repz
xor
dec
mull
mov
pop
mov
sub
lods
mov
pop
xor
sub
mov
int
mov
lcall
sbb
insb
inc
movsl
popf
lahf
sbb
jmp
and
test
out
xchg
outsl
popa
xor
lock
movsb
adc
and
test
dec
fwait
xchg
fildl
adcb
or
enter
daa
sbb
sbb
jbe
addr16
subl
xchg
adc
cmp
mov
fmuls
out
pop
ss
les
es
mov
xor
inc
lods
nop
xchg
out
aaa
lock
fnstenv
xchg
movsl
cmpb
adc
xchg
fsubrs
dec
jecxz
das
das
mov
xorb
loop
aad
cmp
and
insl
nop
add
jecxz
xor
mov
leave
sbb
stc
jns
std
mov
adc
data16
out
push
sahf
fldcw
push
ret
sbb
pop
mov
stos
push
cmp
aam
mov
into
jg
cmp
jns
jl
aam
aam
sti
push
mov
push
fs
mov
pop
arpl
push
stc
adc
and
test
out
mov
jge
gs
dec
fstl
popf
and
mov
dec
xlat
xchg
test
stc
sbb
add
into
adc
dec
imul
mov
jno
jg
mov
jne
in
push
es
aam
mov
aaa
loop
and
std
push
inc
sub
cmpsb
dec
pop
sbb
lds
cmpsb
pop
ret
mov
pushf
mov
stos
xchg
outsb
push
popa
cmc
push
mov
sahf
das
lock
jle
adc
sbb
xlat
scas
popa
xchg
xchg
aad
xchg
push
out
mov
roll
cmp
pop
dec
iret
mov
or
push
lret
xchg
dec
inc
or
mov
es
jbe
dec
add
fcompl
xchg
add
jle
mov
es
sahf
je
sub
ljmp
xchg
dec
push
jmp
out
fisttps
subb
bound
sbb
jae
divl
and
mov
ds
push
cmpsl
cmp
and
add
cmpsb
fwait
mov
leave
jbe
jb
test
data16
jno
aaa
aas
lods
loop
pop
je
push
mov
lds
sub
xchg
bound
pusha
jb
cmp
aas
aad
gs
popf
inc
mov
jle
adc
jbe
adc
in
cmc
cmp
xor
mov
enter
js
cli
or
jp
xor
push
pusha
test
insl
loop
gs
sbb
scas
out
push
jl
stos
mov
sbb
mov
in
lods
xor
and
mov
jle
cmp
outsb
mov
dec
test
rcrb
stos
addr16
jo
iret
subl
xor
popa
push
mov
ret
xlat
mov
into
test
lret
fcmove
sbb
xor
inc
cmp
dec
shlb
xchg
dec
mov
xor
js
xchg
sub
jle
addr16
out
cmp
mov
pop
aad
lods
sarl
sti
aaa
popl
stos
mov
pop
repz
jno
fisttpll
cmpsl
rcrb
je
mov
loope
mov
lods
fcompl
mov
mov
or
mov
mov
outsb
sti
and
lret
rcrl
dec
push
lret
incb
loop
in
mov
push
or
in
mov
xchg
push
push
and
pop
xor
push
movsb
dec
stos
mov
cmpsl
cltd
je
xchg
lock
mov
and
jle
mov
hlt
rorb
mov
test
sbb
enter
cmp
push
std
ficomps
jbe
push
add
inc
mov
fsubs
inc
rcr
adc
pop
fdivrs
dec
xor
xchg
imul
cs
bound
gs
aad
jmp
xchg
push
cmpb
and
sbb
inc
lds
repnz
jno
jle
int3
lret
add
xor
in
xlat
test
sbb
dec
mov
out
enter
mov
fldenv
repz
push
xor
in
lods
or
adc
das
enter
loop
jge
mov
xor
xchg
jns
les
call
push
sbb
or
jno
mov
xchg
aas
dec
pop
mov
ja
inc
mov
dec
pop
jo
cmp
cmp
fs
jle
loopne
add
leave
sub
push
int
push
jmp
pop
das
scas
mov
int
xor
scas
push
jp
sub
loope
roll
outsb
stc
sub
stc
sub
mov
mov
mov
cmpsl
mov
cs
push
stc
js
addr16
lcall
cmp
lods
popf
mov
mov
cmp
push
xor
mov
pop
into
lahf
mov
pop
lret
imul
ja
xchg
lret
pop
add
dec
popa
leave
pop
cmp
xchg
out
push
out
ret
mov
fsubrp
mov
lcall
sarl
xor
sub
fldl
es
or
es
nop
outsb
mov
xor
in
adc
jmp
insb
iret
cmp
cmp
stc
std
movsb
or
loop
loopne
cmp
or
stos
dec
stos
xchg
cmpsb
aad
fsubrs
sub
clc
mov
rclb
test
dec
ss
fs
mov
jne
das
adcl
or
outsb
stos
push
lret
outsl
mov
repz
xor
inc
das
push
test
mov
pushf
rolb
lret
mov
adc
insb
and
les
loop
sub
jno
sub
push
xor
in
out
repz
or
push
les
cs
and
movsl
jb
jno
mov
daa
or
mov
sti
stc
xchg
jl
mov
jmp
mov
bound
mov
xorb
jle
jo
popa
lods
arpl
andb
dec
mov
shrb
mov
enter
mov
xor
rcr
ja
jecxz
loopne
or
adc
fcomip
in
out
das
in
movsl
sbb
dec
jecxz
add
add
popa
mov
or
fcmovnu
cmp
jnp
gs
sti
test
insb
pop
sti
or
das
mov
xor
mov
or
push
mov
orb
stc
dec
xchg
xor
ljmp
mov
adc
adc
adc
or
and
clc
ret
out
roll
or
outsb
and
jmp
lahf
andl
add
or
push
scas
xchg
imull
arpl
cmp
push
js
arpl
ret
in
addr16
insl
fcoml
shlb
dec
cmp
cltd
aaa
and
sub
jmp
dec
insl
or
pop
out
mov
nop
das
pop
mov
xor
lea
cld
jle
inc
nop
sub
pop
jno
sub
push
pop
aaa
sub
lahf
popf
lock
aad
idivl
pop
sub
pop
std
fstpl
xor
mov
push
cs
dec
dec
xchg
add
or
int
ja
cmc
sbb
mov
clc
cld
mov
gs
pop
pop
gs
enter
inc
cmp
jecxz
sbb
sbb
insb
or
sbb
cmpsb
xchg
jae
mov
je
and
icebp
jge
dec
cs
repz
aad
in
scas
call
jnp
dec
sub
dec
fdivr
and
and
mov
jnp
inc
or
inc
mov
loopne
cmpsb
popa
cwtl
dec
clc
jns
repnz
shlb
ds
hlt
inc
pop
gs
xor
lret
inc
arpl
xchg
stc
jp
jnp
gs
sbb
and
lret
pop
cmp
jbe
jecxz
jp
outsb
fcmovu
pop
xchg
pop
sbb
mov
sarl
adc
icebp
inc
call
stos
push
in
ffree
xor
pushf
std
and
lds
mov
xchg
int3
adc
lcall
or
jp
sub
mov
and
dec
xchg
iret
in
dec
pusha
enter
cmc
ss
daa
leave
add
outsl
roll
cmp
or
and
xor
test
stc
jmp
pop
jno
jecxz
sbb
jno
adc
adc
shl
xor
call
pop
je
and
shlb
lods
sti
mov
mov
clc
movsb
and
push
or
loopne
popf
fdivrs
in
or
prefetchwt1
pop
in
and
adc
inc
ret
push
xchg
movsw
sbb
mov
jecxz
es
ds
cmp
pop
mov
jge
fildl
inc
mov
push
and
fadd
aad
mov
push
mov
es
jb
jl
cwtl
icebp
sub
mov
hlt
andl
or
jp
fnstsw
rorb
adc
adc
movsb
sbb
mov
sti
cwtl
dec
stos
mov
in
dec
popf
pop
jne
and
int
push
adc
jne
push
lret
inc
jl
loop
in
mov
flds
cmp
ljmp
pop
sahf
xchg
mov
inc
mov
lods
test
jns
xor
adc
sahf
and
stos
fwait
scas
inc
pop
enter
inc
jg
push
push
xor
fs
orl
stc
dec
and
mov
dec
add
mov
mov
sti
sbb
push
jbe
clc
jmp
jecxz
dec
dec
adc
xchg
repnz
xor
mov
mov
push
icebp
xor
cmpsb
lahf
out
xchg
sbbl
out
bound
jmp
in
mov
sarb
lret
outsb
dec
loopne
ja
cltd
pop
pop
data16
jg
leave
or
mov
xchg
out
dec
fists
lahf
and
xchg
aad
mov
mov
inc
xorb
add
xor
add
inc
xchg
mov
add
fadd
call
mov
pop
push
frstor
or
pusha
in
xchg
aam
mov
xor
in
enter
jmp
jp
lods
scas
js
mov
dec
and
mov
popa
cwtl
lcall
lret
jmp
and
std
and
xor
or
pop
xchg
mov
movsl
js
jne
sub
cmp
or
push
push
ror
jecxz
jg
fwait
inc
cltd
xchg
subb
mov
and
sbb
mov
jne
inc
push
or
adc
cmp
sub
xchg
rcl
mov
push
fiaddl
mov
push
aam
stc
popa
in
fs
jo
push
pop
rclb
mov
lock
cmp
cmp
inc
mov
jg
in
mov
xor
test
sqrtps
icebp
pop
cmp
and
mov
cmp
jbe
sub
fstl
mov
pop
ds
sub
push
pop
rcr
cmp
and
inc
imul
dec
insl
pop
mov
xlat
xor
insb
sub
rorb
mov
mov
sahf
xor
lcall
outsl
inc
aas
in
pop
xorl
mov
push
fistpll
jo
xor
jecxz
addr16
divl
dec
mov
push
cld
mov
add
fdivrl
cld
fsts
imul
inc
or
and
lds
subl
imul
push
mov
into
xor
or
jmp
mov
adc
shll
int
lret
testl
leave
stc
xchg
fidivrl
in
adc
cmpsl
xchg
add
xchg
or
ret
sbbb
adc
cmp
lds
push
xor
push
pop
jge
jns
and
sarb
jno
movsl
xchg
std
add
imul
mov
push
mull
mov
loop
lods
add
sub
xor
xor
inc
lock
pop
lret
push
fwait
or
inc
pop
fildl
in
sbb
in
gs
in
scas
lcall
xchg
jle
jge
push
aas
std
push
insl
inc
fs
mov
or
adc
dec
stos
ret
mov
inc
cmp
xor
mov
mov
out
sbb
sahf
mov
xchg
scas
int
adc
xchg
outsb
test
aam
adc
ljmp
adc
les
pop
sbb
enter
cld
push
xchg
insl
mov
loopne
add
and
stos
mov
pushf
cmp
jbe
insl
jecxz
xchg
adc
jmp
test
lock
pop
cmp
lret
cmp
fiadds
fcompl
lahf
lock
mov
jns
mov
lret
inc
sahf
ljmp
or
cmp
test
stos
jmp
cli
adc
cmp
and
fimuls
or
jno
loop
mov
and
pop
mov
jmp
out
inc
inc
push
fnstenv
mov
cmp
call
add
mov
cmc
push
fucom
lock
lock
sub
sbb
push
cmp
pop
lea
cmc
adcb
xchg
jp
lahf
shlb
lds
nop
sub
dec
inc
sbb
sbb
push
int
push
cli
in
pop
popf
gs
sahf
fsubl
mov
or
dec
mov
or
jno
xor
and
cmp
popa
enter
sub
dec
rorl
adc
mov
or
sub
cmp
rol
push
push
or
in
pop
pop
cs
xchg
in
cmp
cmp
push
push
sbb
mov
push
in
cli
cmp
insl
out
dec
lock
flds
stos
adc
gs
dec
ja
push
loope
push
mov
fisttpl
push
xbegin
loop
pop
pop
mov
push
jmp
add
cmp
adcb
jbe
dec
adc
es
jnp
mov
nop
imul
popf
mov
xor
pop
inc
inc
daa
popa
scas
cmp
mov
adc
cmpsb
lock
stos
orb
or
int
xor
sub
mov
sbb
pop
xchg
enter
cmp
inc
xchg
fisubrs
xor
mov
lahf
stos
xchg
ficompl
lock
enter
loopne
dec
test
popa
xchg
je
inc
cmc
out
fbstp
imul
mov
repnz
int3
test
mov
shlb
dec
adc
xchg
test
adc
jmp
sub
add
jecxz
jmp
push
push
and
mov
pusha
inc
push
sti
inc
dec
xor
imul
mov
pop
test
dec
or
xor
xor
adc
gs
xor
mov
adc
mov
inc
lods
gs
cwtl
into
lock
fildl
call
inc
mov
fstpt
inc
mov
jne
scas
jb
cmpb
or
push
pop
adc
xor
in
fdivr
lret
sbb
and
aaa
fwait
in
push
inc
insl
out
stos
mov
mov
xlat
push
loop
je
and
rclb
in
sbb
sub
test
sub
sbb
push
push
cmp
xor
mov
and
inc
enter
pop
pop
je
nop
loope
push
pop
loop
xchg
or
xor
bound
out
pop
dec
rcll
ja
loopne
sti
cmp
enter
lea
pop
jbe
xchg
shll
xchg
insl
adc
cli
test
scas
call
or
cmpsl
rclb
imul
add
js
pop
inc
mov
sbbl
push
cmpsb
lcall
xchg
push
loop
xor
imul
sbb
imul
inc
bound
loop
data16
mov
push
jp
iret
iret
int3
dec
mov
push
jne
fldlg2
mov
insl
or
movsl
and
insb
xchg
jecxz
mov
xor
dec
lahf
sbb
sub
xchg
xor
jo
and
mov
push
out
mov
aam
pop
loopne
mov
xor
mov
leave
cmp
testl
add
fsubrl
push
and
mov
mov
popa
insb
mov
xor
mov
aaa
adc
rcl
adc
sahf
ret
jp
mov
mov
mov
push
jle
les
shrl
jecxz
arpl
in
add
sbb
add
push
add
int3
rcl
je
add
pushf
add
dec
frstor
fwait
xchg
jle
pop
sub
into
xor
loop
jle
aaa
xor
xchg
inc
das
push
mov
lods
inc
leave
jmp
xchg
icebp
stos
pop
cmp
rcll
push
add
sbb
sub
mov
call
xchg
mov
push
mov
notl
xchg
cwtl
dec
outsb
mov
mov
push
dec
cmp
adc
mov
adc
adc
lret
in
adc
je
sub
mov
hlt
fadds
loopne
test
ds
cmp
dec
xor
popf
add
sub
jo
jo
divl
inc
xchg
dec
rcrw
or
jmp
ljmp
jmp
loope
testb
mov
pop
pop
shlb
scas
in
gs
push
imul
mov
mov
cli
dec
mov
mov
sub
dec
fistpl
add
adc
mov
push
loop
imul
cmp
in
enter
lds
js
mov
scas
cmp
push
cmp
push
das
push
lods
or
mov
testl
int3
mov
pop
decb
test
dec
xor
stos
nop
adc
fisubs
imul
into
adc
xchg
dec
or
cmpsl
inc
mov
cli
cld
dec
imul
insb
cmp
iret
mov
jnp
sti
ret
push
xor
aaa
cmp
test
pop
lods
ss
mov
int
and
pop
fcmovne
jge
hlt
and
loop
or
out
and
xor
iret
pop
push
inc
aad
into
sub
mov
xchg
mov
inc
xchg
hlt
sbb
add
inc
push
int3
inc
jb
mov
xchg
repnz
sub
xor
icebp
mov
add
sub
int3
sbb
andb
jge
je
xor
and
clc
fwait
mov
xor
fwait
jns
cld
aam
dec
hlt
xor
in
dec
sarb
mov
dec
in
mov
pop
adc
mov
lods
push
imul
xor
loop
clc
push
jne
push
or
divb
ss
adc
ljmp
je
lret
and
lret
cwtl
or
shl
inc
std
cmp
xchg
jecxz
mov
mov
cmp
cmpsb
repnz
cmp
mov
jo
sbb
fs
sti
fisubl
ficoml
ret
stos
lcall
pop
shr
and
mov
shll
mov
dec
in
sbb
dec
js
inc
cli
sbb
sub
repnz
mov
sub
js
jns
scas
jmp
cs
lods
clc
pushf
roll
sub
push
pop
and
in
jle
insb
sub
addr16
and
xchg
xor
int3
aas
getsec
mov
xchg
add
in
adc
cwtl
push
adc
push
in
jo
and
out
sbb
pop
addl
pop
add
or
mov
or
mov
test
sub
sbb
roll
jae
push
sub
or
mov
addr16
in
fs
mov
inc
add
pushf
push
or
mov
and
dec
ficomps
in
jle
adc
inc
sbb
mov
adc
fdivs
stos
pop
xor
testb
xchg
pop
outsl
outsb
push
xor
fstpl
enter
mov
push
jp
push
inc
inc
pop
cmc
mov
or
mov
push
pop
ror
hlt
outsl
add
dec
or
and
or
push
negb
dec
hlt
aas
xor
inc
jb
insl
sarb
pop
jl
mov
dec
roll
fs
mov
or
or
ljmp
fwait
jns
fidivs
inc
lods
enter
pop
mov
fmulp
scas
mov
enter
pop
sub
movsl
push
pop
pusha
imul
jmp
cmp
mov
outsb
scas
mov
jg
mov
push
lock
in
jo
and
insb
stos
push
aas
sti
lods
add
sub
stc
adc
mov
enter
lods
lods
inc
xor
repnz
mov
mov
push
test
dec
jae
pop
mov
fistpl
xchg
lods
jbe
inc
pushf
xchg
jnp
ljmp
pushf
xor
std
stos
add
inc
xchg
aam
jns
rorl
arpl
ss
cmp
std
fisubrl
jns
daa
pop
push
out
aad
sahf
lahf
xchg
mov
mov
push
clc
jg
pop
push
or
shr
leave
test
sbb
and
push
iret
pop
test
mov
pop
mov
outsl
mov
xchg
insl
repnz
adc
inc
pop
in
jle
inc
arpl
movsl
pop
lcall
xor
and
js
aaa
lret
shlb
add
stos
stos
in
rcrl
cmp
or
test
pop
dec
imull
test
in
mov
enter
cmc
popl
pop
xlat
add
and
out
sahf
push
or
into
adc
or
xor
mov
jbe
fxch
pushf
loop
push
shlb
cmp
cmp
imull
enter
or
cmp
push
fsubrl
pandn
push
jp
push
dec
inc
pop
lcall
es
test
test
mov
sbbl
and
adc
cmc
addr16
lea
inc
push
jge
mov
jp
repz
cmp
testb
addr16
in
movsb
mov
add
sub
cmpsb
jg
test
lods
nop
or
cld
pop
mov
push
addr16
fists
rolb
int3
lods
sbb
and
addl
dec
push
stos
jge
pop
repnz
or
and
outsl
repz
jmp
mov
pop
adc
mov
inc
and
fs
clc
js
sub
cmp
sbb
cwtl
push
out
xchg
or
test
ret
scas
push
or
and
and
es
pmuludq
push
in
std
xchg
adc
xchg
xor
jnp
push
addr16
mov
loop
test
enter
add
push
fwait
lahf
rcrl
nop
popa
inc
xor
repnz
cs
enter
std
imul
jecxz
jecxz
dec
cmc
and
xchg
ret
nop
mov
inc
cmp
jne
outsl
les
and
add
mov
sbb
cmp
cld
in
or
out
or
leave
popa
jnp
test
lods
leave
mov
sub
imulb
pop
loop
mov
rclb
adc
jle
sub
pop
add
inc
sahf
mov
lahf
cltd
xchg
call
mov
test
add
bound
bound
dec
gs
insb
mov
stos
dec
jno
aad
add
inc
mov
mov
sub
xorb
in
lds
push
out
sbb
fistpll
mov
orps
outsl
lods
subl
bound
jo
push
sub
add
daa
test
js
fdivl
cli
dec
pop
sahf
hlt
pop
xchg
mov
in
sbb
jne
call
movsl
imul
popa
lock
in
addr16
and
jecxz
insl
out
cmp
mov
and
mov
out
mov
inc
dec
fwait
or
or
loopne
dec
imul
dec
inc
cmc
sbb
repnz
add
sub
pop
adc
mov
jge
pop
mov
data16
cld
sbb
mov
xchg
pop
sub
jle
jecxz
roll
sub
imul
dec
or
lods
jo
rolb
outsb
or
push
dec
lret
mov
pop
divl
les
popa
and
xchg
icebp
add
and
cmc
mov
loope
mov
adc
inc
cmp
push
movsl
cmp
test
xchg
or
dec
bound
pop
mov
push
popa
add
negl
inc
call
pop
jne
mov
fidivrs
sub
loopne
sahf
scas
movsl
xchg
cmp
mov
gs
pop
lret
dec
out
mov
stc
fwait
shll
ror
jmp
out
inc
xlat
iret
mov
popf
popa
and
push
xchg
pop
mov
push
mov
adc
decl
aaa
xchg
mov
fidivl
mov
mov
jmp
sub
cltd
xor
pushf
pop
jmp
fadds
pop
jbe
je
ficompl
sarl
xchg
xchg
and
leave
cwtl
sbb
and
sub
outsl
push
pop
jae
test
push
mov
iret
jno
repz
fidivrs
jbe
sbb
aas
lock
dec
add
mulps
iret
lock
push
in
fsts
out
inc
mov
shrl
adc
or
or
out
adc
sbb
push
pop
cld
xor
add
fcompl
js
push
push
lea
testb
push
jae
mov
sbb
xor
mov
int3
mov
sub
cmp
sub
out
stos
fadd
movl
add
inc
jno
xchg
daa
ss
test
mov
leave
xchg
mov
std
inc
inc
enter
add
fisubrl
mov
or
ror
ja
les
lods
into
ds
aad
or
jl
inc
lret
sarb
lcall
movsb
pop
filds
and
sub
dec
dec
and
push
repnz
ss
pop
rorl
and
decb
fadd
lods
mov
mov
sub
lcall
icebp
fwait
mov
and
pop
popf
pusha
les
jge
lds
mov
add
test
dec
in
cmp
bound
add
dec
or
mov
add
inc
sub
push
int3
aad
lahf
sbb
lahf
imul
and
adc
imul
adc
imul
insl
jg
add
inc
pop
lock
xchg
lret
loope
icebp
ja
xchg
cld
push
mov
sbb
and
pop
fwait
dec
gs
arpl
dec
loope
mov
lods
push
movsl
add
and
push
std
inc
adc
add
fmuls
hlt
std
pop
in
mov
xchg
cmp
jp
add
out
xchg
mov
andl
sub
movsl
pop
fcomps
sub
fwait
out
cmp
dec
neg
ja
lret
dec
test
notl
mov
dec
dec
repnz
adcl
cld
insl
nop
pop
int
hlt
adc
xchg
mov
push
xlat
lods
pop
test
xor
mov
mov
push
inc
icebp
std
xchg
mov
push
xor
mov
xor
movsl
jno
int3
and
es
into
sbb
sub
pop
mov
add
add
xchg
jecxz
in
sbb
and
inc
repnz
fildl
jb
or
mov
mov
mov
pop
mov
adc
dec
inc
nop
xor
aas
sbb
bswap
xor
fs
jl
sub
jp
in
in
lcall
jns
mov
ficoms
push
cmpb
xchg
xchg
pop
and
sahf
ljmp
jbe
cli
dec
in
mov
cltd
add
jne
sbb
pop
pop
mov
sub
cmp
repnz
les
xchg
pop
dec
xchg
push
mov
sahf
pop
jbe
stos
imul
and
push
fdivl
push
cwtl
movsl
and
pop
int3
aas
dec
stc
ds
adc
and
lret
ss
pop
aad
push
jg
push
call
jne
lds
stc
push
and
and
cmp
es
adc
movsb
arpl
stc
cli
pop
faddl
loopne
or
nop
cmp
inc
test
data16
out
cli
mov
add
icebp
mov
aam
xchg
cltd
loope
pop
xchg
inc
call
cmpsb
lahf
adc
jle
ss
cmp
sbb
fdivr
mov
push
mov
jne
mov
add
pop
xchg
or
jl
mov
mov
outsl
jno
jmp
cwtl
aas
inc
sub
sbb
xor
aam
xor
imulb
and
pop
xchg
gs
outsl
inc
and
cli
scas
cs
sbb
xchg
dec
lods
call
push
test
test
call
pop
mov
mov
dec
psubusb
push
andb
iret
loop
fcmovnb
or
xchg
mov
sub
test
outsb
imul
xor
pop
mov
push
and
insl
loop
adc
iret
addr16
inc
dec
or
iret
popf
rcl
add
cli
aaa
mov
out
mov
cmp
fstl
mov
push
fs
jne
adc
and
sti
mov
mov
or
adc
stc
in
xor
mov
or
call
push
bound
push
cli
pop
mov
test
adc
loope
dec
adc
arpl
je
movsb
inc
xchg
push
dec
xchg
jg
insb
fildl
aad
sbb
adc
inc
jae
aaa
adc
lcall
cltd
scas
jl
loope
clc
sahf
lock
fists
sub
add
shll
mov
mov
cltd
and
sbbl
dec
pop
xor
or
arpl
push
dec
pop
pop
dec
inc
out
addr16
out
push
xor
cs
mov
cmp
lret
out
cmp
out
adc
xchg
test
jle
loopne
xor
outsl
cmp
ds
mov
rolb
sbb
sub
cwtl
xchg
xor
leave
test
sub
mov
insb
gs
movsl
inc
das
add
test
fs
cld
insl
je
pop
out
repnz
divb
std
shrl
pop
sub
test
data16
push
xchg
shrl
add
jmp
loope
stos
mov
pop
dec
fadd
mov
fs
and
cltd
jecxz
adc
inc
in
sbb
mov
movsb
loopne
add
fsubrp
push
push
aaa
je
dec
pop
xchg
sar
mov
icebp
cmp
in
jg
or
cmp
loopne
fildl
scas
or
aas
ds
jb
cmp
xchg
fcom
mov
xorb
fsubrl
fs
dec
fcoml
jb
dec
daa
lods
fsubr
jne
cmp
les
cmp
mov
bound
test
mov
sbb
add
imul
inc
sub
mov
movsl
push
aas
push
dec
and
shll
push
push
les
cmp
pushf
lcall
or
mov
adc
adcl
fsubrs
lods
rsqrtps
lock
sbb
inc
lds
sub
mov
xlat
inc
push
mov
cmpb
add
push
ljmp
out
mov
adc
dec
fidivs
adc
leave
decl
mov
or
xchg
pop
push
xor
sbb
stos
dec
sbb
rcr
stos
jg
jbe
add
xor
sub
push
test
incl
sub
pop
mov
scas
sub
notl
cld
outsl
pop
xor
xlat
xchg
out
nop
scas
xchg
adc
and
jp
sub
fildll
imulb
mov
mov
or
sub
xor
ror
divb
ljmp
cmpsb
pop
cmp
test
inc
std
inc
mov
xor
push
cmp
mov
sbb
jmp
imul
jmp
fsubl
shlb
or
hlt
mov
inc
fidivrs
jb
jbe
ficoml
xchg
add
outsl
stc
dec
mov
lock
js
fsubs
gs
scas
ror
aaa
pop
xchg
sbbl
testl
loop
mov
hlt
in
and
mov
jmp
mov
lods
les
push
pop
xchg
sbb
mov
cltd
test
dec
scas
dec
cmpsl
mov
lods
xlat
pushf
cmpsl
int3
cltd
popf
mov
addr16
mov
xor
lds
loope
sbb
incb
daa
inc
xchg
cmpsl
push
jo
xor
cs
std
popa
in
mov
test
or
out
gs
out
jns
mov
jecxz
jae
and
scas
mov
push
lret
mov
and
xchg
sub
pushf
xor
lea
insb
lds
sub
mov
mov
push
loopne
divb
jmp
dec
or
sbb
add
inc
push
fisubs
sub
imul
sub
xor
push
repz
mov
fcoms
cmp
mov
test
bndldx
out
mov
scas
or
xchg
pop
fldenv
adcb
ret
popf
jno
or
or
pop
mov
sub
jb
and
mov
jae
sti
ds
cs
out
mulb
sub
stc
bound
cmp
ret
shl
xchg
adc
and
pop
jg
jmp
dec
fisttpl
stos
jbe
sahf
cwtl
shll
xchg
adc
out
sub
out
arpl
inc
or
mov
mov
call
xor
roll
fdivrl
mov
in
outsl
or
lret
mov
lret
add
mov
lods
loop
lods
das
jbe
and
lock
or
sbb
outsl
les
adc
lods
xchg
sub
jmp
repz
jmp
fs
pop
loopne
hlt
mov
sub
scas
and
rcr
mov
stos
stos
cmpsb
xlat
mov
popa
lret
add
mov
xchg
mov
jge
and
mov
into
xor
movsl
loopne
xor
pop
push
scas
add
fs
out
pop
xchg
dec
mov
lds
xor
fmull
lock
jecxz
push
lods
adc
outsl
test
adc
loope
lods
jne
inc
dec
mov
idivb
cmpsb
xor
cmp
push
push
dec
aam
fisttpll
lret
jae
int3
into
andb
cli
xchg
ds
mov
test
adc
lods
adc
pop
mov
pop
xchg
lret
addb
adc
jno
mov
push
sbb
fnsave
shll
push
bound
inc
fidivs
test
imul
loop
xor
aas
push
jle
sbb
fs
test
imul
mov
xor
test
dec
je
aaa
leave
add
xchg
xlat
movsl
cmp
fidivs
jecxz
fbld
xchg
call
xchg
ss
sub
ljmp
in
inc
mov
test
jbe
adcb
rolb
fidivrl
inc
mov
int3
std
mov
dec
inc
xchg
pop
mov
out
das
into
fnstsw
lret
adc
mov
movsb
cld
out
andb
dec
fsubrl
into
popa
in
jb
jno
mov
shlb
xchg
mov
or
push
xor
push
dec
push
or
mov
mov
inc
pop
lock
push
and
scas
sbb
out
xchg
add
mov
push
test
xchg
push
insb
outsb
mov
dec
inc
bound
in
fsubrs
clc
daa
add
daa
xor
dec
and
dec
xchg
nop
mov
insl
pop
xchg
sahf
movsl
call
repz
push
adc
mov
sub
les
mov
inc
cmp
adcb
out
dec
dec
fwait
movsb
ja
inc
pop
inc
pop
sbbb
in
insl
stc
jae
orl
icebp
push
mov
pop
adc
jg
xchg
cmp
adc
dec
popf
xor
or
inc
shll
push
icebp
sarb
cwtl
cwtl
daa
movsl
cmp
pop
push
data16
cltd
or
pop
lea
mov
lods
pop
in
hlt
jge
add
add
int3
push
fbld
dec
sub
pushf
and
jecxz
inc
jnp
ret
les
pushf
jmp
xchg
cwtl
push
loope
sbb
in
fsubp
insl
jne
jecxz
pop
add
call
insb
jg
mov
das
dec
call
jle
dec
sbb
lods
imul
jo
loopne
xchg
sbb
dec
subl
xor
scas
and
add
cmp
sar
fnsave
jnp
gs
sbb
or
jo
cmc
jne
lahf
mov
into
mov
inc
pushf
mov
add
sbb
cmc
pop
adc
in
dec
pushf
mov
jb
test
adc
fisubs
lods
pop
outsl
fstl
hlt
stos
and
hlt
pusha
lret
mov
cmpl
loopne
and
stc
push
sub
shr
outsb
sbb
add
inc
xchg
xor
andb
xor
mov
adc
pop
jmp
sbb
push
cli
sub
or
mov
push
push
add
aam
pushf
call
mov
int3
test
add
in
pop
lcall
mov
fldcw
fcompp
cs
xchg
jge
lds
shlb
enter
pop
leave
stos
daa
std
jg
mov
xor
jno
fnsave
cmp
fwait
xchg
mov
movsb
stc
addb
loopne
inc
repnz
sub
lahf
movsl
fadds
mov
std
mov
push
hlt
dec
mov
dec
cwtl
addr16
repz
loop
mov
test
push
fadds
das
insb
sbb
pushf
jns
adc
sbb
and
and
cwtl
cwtl
mov
int3
aad
dec
xor
mov
lret
pop
cmp
mov
mov
paddusw
mov
cmpsl
sub
lods
xor
ficoml
adc
jp
lods
add
dec
add
out
mov
imul
loopne
bound
push
push
mov
outsl
push
pop
cmpb
jge
jmp
cli
jge
stos
and
push
lea
dec
pop
push
shlb
push
mov
adc
pop
or
cmp
jne
lret
aaa
mov
inc
mov
loop
cmp
pushl
lcall
mov
mov
jle
add
enter
adc
dec
std
ja
stos
push
jmp
cwtl
icebp
sbb
lods
idiv
int
sbb
in
lcall
mov
and
mov
cld
adc
pop
mov
add
add
sarl
sub
add
and
out
xor
aas
cmc
ja
stos
dec
subl
or
cmpsl
gs
jo
mov
dec
mov
inc
sahf
movsb
sub
fdivs
mov
scas
nop
adc
jae
negb
pop
xlat
shrb
cmp
sbb
sub
call
add
fdivrp
jg
fs
push
movsb
das
leave
repnz
mov
mov
iret
xchg
jecxz
paddw
out
add
outsb
imul
sahf
mov
in
sub
cmp
hlt
pop
sbb
cli
adc
mov
loop
pop
pop
sbb
mov
loope
ret
xchg
and
pop
push
adc
push
jp
pop
mov
pop
adc
in
hlt
mov
mov
test
sbb
ficompl
sub
mov
adc
jecxz
mov
loope
mov
in
mov
sbb
addr16
out
stc
push
lods
int
les
fisubs
adc
or
jnp
sub
ss
cmp
jne
std
mov
sub
mov
jecxz
gs
push
mov
add
cwtl
cmp
insb
imul
out
sbb
xchg
cmc
and
int3
les
mov
stos
jg
mov
scas
mov
push
fs
inc
pop
add
xchg
push
aam
out
mov
arpl
pop
es
pop
iret
push
je
nop
sub
fs
mov
movsb
out
cmpsb
cs
sub
jmp
add
inc
std
sarl
cmp
jb
dec
bound
dec
lds
data16
cld
cmp
or
mov
dec
je
cltd
incl
inc
pushl
push
inc
mov
scas
paddusb
mov
sbb
mov
sbb
adc
cmpsb
push
in
subb
jp
cmp
dec
xchg
push
cmp
dec
adc
push
cs
xchg
out
out
test
cmpsb
mov
sbb
inc
pop
int
popa
inc
dec
xchg
addb
aaa
add
out
out
pop
xorl
js
test
cmpsl
mov
in
add
cld
push
jmp
addb
iret
mov
fcoml
in
test
cmp
dec
imul
mov
test
jnp
aaa
std
fsts
fidivrs
stos
xchg
dec
cmp
aad
pop
popa
out
sub
sbbl
ljmp
sbb
jno
int3
add
cltd
xorl
xchg
sbbl
cwtl
mov
mov
pop
jmp
cld
sub
mov
and
outsb
jns
leave
daa
inc
xchg
dec
gs
sbb
adcl
jp
stos
mov
mov
adc
out
sahf
outsl
movb
insb
fstpt
popf
loop
mov
xchg
and
pusha
daa
dec
xchg
xor
pop
in
js
sbb
mov
out
pop
into
test
les
lahf
insb
lret
int
cltd
inc
das
testl
push
and
sbb
scas
xor
sub
push
xchg
cwtl
mov
and
mov
aas
fsubs
jnp
mov
in
or
mov
outsb
shrl
jecxz
aaa
loop
int3
idivl
or
aaa
jb
push
push
ret
ficoml
lds
jge,pt
jo
shll
jo
popf
mov
and
pop
cmpsl
dec
cmp
dec
adc
pop
lods
push
out
lds
lcall
dec
clc
sbb
leave
inc
lret
jl
push
xchg
repnz
notl
imul
leave
xchg
xor
js
and
es
icebp
mov
loop
andl
push
imul
pop
ds
ljmp
cmp
imul
push
sbb
fsts
cs
dec
cmp
cmpsl
mov
andb
jns
lcall
sub
cmpsl
aam
arpl
jecxz
jb
sarl
andl
aam
sbb
sti
pop
test
roll
icebp
test
stc
sti
pop
push
test
sub
sub
gs
pop
cmp
xor
push
rorl
pop
adc
jo
pop
or
add
lds
add
xchg
div
and
mov
mulb
loop
das
ja
adc
dec
out
decl
add
adc
mov
inc
sbb
jecxz
ljmp
push
push
mov
bound
std
jge
mov
push
test
int
pop
enter
ss
push
adc
jle
jp
fistpll
cmpsb
mov
mov
inc
lods
rcl
out
sub
int3
nop
dec
push
ja
lahf
fldcw
imul
loop
xchg
xchg
xor
xor
jg
lcall
popa
in
popf
lret
push
out
xor
cmp
fstpl
xchg
test
repz
mov
xchg
ds
test
iret
lret
jae
xor
dec
in
jns
mov
repz
and
sbb
push
mov
xchg
frstor
roll
jno
movsl
mov
fcoml
pop
pop
inc
icebp
les
test
sarl
lret
shr
jecxz
rcr
repz
cmpsb
xchg
icebp
test
ja
xchg
cld
push
sub
adc
aam
loope
ss
out
test
ror
jno
test
repz
stos
mov
sbb
test
insl
dec
lcall
fcom
dec
or
int3
push
xchg
ret
xor
ror
inc
mov
insl
popa
and
movsl
test
test
fucom
mov
and
pop
fmull
xor
out
jb
test
call
iret
and
scas
sub
dec
inc
clc
jmp
mov
mov
sub
inc
add
mov
pop
dec
xchg
paddd
and
mov
and
jne
sbb
mov
int
mov
fcomps
insb
rorl
incb
xor
fsubrs
jnp
test
push
jmp
mov
ficompl
lock
push
cltd
lds
sahf
cmpsl
repnz
cmp
clc
jg
loop
lcall
or
pop
add
mov
stos
out
mov
shlb
test
mov
js
call
adc
xor
into
ret
sub
fnsave
inc
dec
xchg
aaa
lret
mov
jmp
adc
xchg
notb
xchg
fwait
inc
fs
push
arpl
clc
loopne
movsb
inc
add
imul
inc
in
mov
out
clc
decb
cmp
jo
mov
lret
dec
push
jo
aad
dec
sbb
mov
sbb
and
and
cmp
add
jns
xor
cs
mov
adc
ret
push
lods
jnp
scas
fistps
mov
mov
xor
mov
ds
and
inc
and
pop
int
vandnps
jnp
sub
mov
out
add
push
fidivl
sbb
addb
cmp
icebp
imul
jbe
insb
pushf
mov
lahf
into
xchg
add
imul
lcall
in
lret
aas
out
in
mov
sub
push
negb
sti
out
test
sbb
aad
or
mov
or
aam
push
pop
xor
cmpsb
dec
inc
in
mov
out
loope
push
xchg
punpcklbw
xchg
es
les
pop
daa
jmp
xlat
adc
call
cld
push
rclb
std
arpl
or
into
mov
stc
leave
mov
push
mov
mov
xor
loopne
mov
mov
arpl
les
clc
movsl
ficomps
stc
or
mov
cmp
ja
movsl
jmp
cmp
pop
or
popa
mov
jae
cs
pop
repnz
dec
jno
int
lock
and
mov
xchg
mov
xor
push
inc
movsl
or
es
std
sahf
push
sbb
mov
fldz
pop
rorb
sub
rcrb
xor
mov
push
sub
mov
js
je
add
jns
iret
popa
sbb
jo
adc
add
adc
and
lret
int3
and
mov
xlat
inc
pop
mov
jg
adc
xchg
stos
fnstenv
rcll
pop
xor
xchg
xchg
negb
incl
xor
cmp
xor
rcrb
push
cs
into
mov
sbb
or
mov
cmp
dec
test
sbb
inc
sub
pop
mov
push
loope
shrl
jb
dec
or
cmc
sahf
and
and
arpl
sub
fcmovbe
aas
cli
hlt
int3
or
sarb
imull
add
xor
mov
xchg
and
sbb
sub
sub
jmp
lret
std
add
lds
adc
inc
xchg
mov
mov
cmp
inc
test
addr16
repz
push
ja
jno
pushf
fiaddl
push
out
ja
lahf
rclb
cwtl
in
adc
ret
adc
mov
insb
push
jmp
and
repnz
and
xchg
outsl
stc
sbb
cld
lret
sbbl
test
gs
not
mov
sbb
mov
cmp
aaa
sbb
fwait
pop
lea
pop
xchg
mov
push
mov
aam
fcmovu
iret
sbb
mov
outsl
dec
jl
inc
jns
fadd
lcall
out
or
seta
mov
add
stc
adc
test
rcll
inc
loope
sahf
iret
stos
push
cmp
imul
scas
ja
push
and
les
sbb
inc
sub
xor
or
add
js
add
jge
test
mov
and
xchg
test
mov
adc
sub
shll
popa
dec
call
int3
test
popf
iret
es
xchg
xchg
push
add
xchg
cmp
fdivs
sub
in
adc
gs
les
loop
or
push
mov
push
cmc
pop
sbb
out
push
cmp
and
adc
imul
loop
mov
mov
movsb
sbb
rorl
es
jne
mov
das
idiv
sub
xor
pop
dec
out
jne
dec
mov
movb
mov
popf
xor
inc
sub
cld
xor
mov
push
shll
and
inc
shlb
std
dec
test
mov
mov
mov
push
xor
mov
bnd
push
xchg
dec
sub
add
loop
push
inc
sbb
pop
insb
mov
jg
sbb
lcall
std
scas
mov
adc
fistl
test
sti
std
jle
or
xchg
jae
or
mov
and
pop
or
lret
cli
test
sti
dec
xchg
fistpl
mov
and
aaa
mov
adc
xchg
cmp
into
dec
and
and
shr
and
add
inc
loope
std
dec
and
cltd
pop
mov
jns
je
xor
cs
mov
mov
in
cmp
lock
orb
or
and
fisttpll
mov
cmp
xchg
fnstcw
cmp
or
xchg
pushf
lds
jb
packssdw
popa
inc
jno
enter
sub
ljmp
or
ja
sbb
push
mov
test
jae
lcall
lock
mov
add
inc
ljmp
mov
icebp
add
mov
in
cmc
xchg
scas
data16
mov
cmp
flds
ss
pop
cmp
mov
add
adc
jae
xor
pop
xor
cli
sti
ljmp
push
repz
pop
sbb
stos
pop
inc
ds
xor
sti
test
loopne
pop
iret
xchg
cmp
pop
pop
cs
cmp
clc
sahf
dec
pop
fisubrs
push
mov
data16
or
decb
dec
fisttpll
cmovnp
sub
pop
in
fcmovbe
rclb
dec
call
inc
test
mov
or
stc
movl
outsb
fisubrs
mov
cmp
mov
xor
mov
in
out
mov
xlat
add
pop
sub
mov
xor
pusha
push
pop
sub
pop
aaa
mov
hlt
das
lods
xchg
rcrl
inc
insl
push
sub
adc
pop
push
shlb
icebp
mov
sbb
mov
mov
sub
lret
inc
rorb
lods
and
fcoms
sahf
daa
and
push
jne
or
or
inc
mov
leave
push
or
loope
adc
push
cmp
mov
data16
adc
add
fyl2x
sub
jge
push
sbb
int3
cmpsl
push
adc
stc
xor
mov
jge
and
in
ret
test
and
lahf
add
pop
xchg
sub
ds
mov
xchg
shr
inc
int
inc
in
sub
fnstenv
sbb
mov
xchg
cmp
mov
adc
xchg
inc
call
jb
sbb
mov
jp
push
push
addr16
cli
mov
push
sub
adc
pop
sbb
sahf
mov
push
imul
inc
push
iret
sbb
lock
pop
paddsw
pop
push
inc
pop
testb
sub
bound
jo
pop
sub
arpl
cmp
lods
pop
and
outsl
jo
cmp
ret
cwtl
sbb
inc
outsb
outsl
test
sbb
aad
mov
or
mov
dec
push
cltd
sbb
ja
into
loopne
shld
jmp
test
push
pop
sub
cmp
cmp
xchg
pop
lods
fucomi
push
into
and
outsl
les
sub
inc
push
jae
mov
test
ljmp
lret
popa
push
scas
pop
aam
cs
dec
outsb
pop
ss
mov
subb
loop
fwait
movsb
jmp
leave
mov
dec
inc
adc
jns
imul
cmp
jge
cmpsb
icebp
sub
test
push
jb
mov
and
test
sub
into
insb
jo
imul
pop
cmp
dec
shrb
icebp
push
popl
adc
mov
cmpsl
shl
inc
mov
aam
testl
lcall
aad
add
outsl
fsubrp
pop
nop
xchg
outsb
push
jne
test
mov
jno
and
mov
lret
es
cltd
push
pushf
adc
js
and
aaa
adc
lds
xchg
lock
pop
mov
push
test
gs
mov
xchg
inc
pop
xor
xor
pop
mov
inc
test
cmp
pop
shll
fwait
stos
xchg
push
cld
arpl
fisttpl
pop
clc
je
push
sbb
adc
fcoml
xor
xchg
xor
sub
int3
inc
movsb
cli
lahf
sahf
jg
std
inc
dec
sbb
jmp
in
xchg
mov
pop
inc
pusha
aas
popa
fistl
push
nop
pop
lock
adc
mov
inc
adc
jb
lcall
jecxz
aad
in
and
push
daa
inc
fcoml
mov
cwtl
mov
dec
cmp
and
repnz
nop
xchg
out
fcoms
xor
mov
loop
in
add
repnz
ljmp
jmp
ds
pusha
int
cmpsl
sub
jns
in
push
push
adc
mov
or
cmp
icebp
nop
incl
pop
jle
fdivl
inc
adc
mov
arpl
jns
add
shl
imul
mov
test
xor
pop
pop
mov
push
rcl
jae,pt
loop
aaa
pop
rorl
loop
fcompl
stos
out
inc
cmp
jns
fwait
test
and
xchg
rolb
mov
inc
lea
jl
jl
xchg
mov
gs
dec
mov
lock
repz
mov
pop
sbbb
xchg
sahf
mov
sbb
outsl
pop
sub
int3
cmp
and
int
add
dec
xor
ret
aaa
add
sbb
cmc
imul
adc
call
push
or
or
into
in
mov
dec
daa
cmp
mov
cmp
ficoml
ret
out
idivb
bound
cmp
iret
sub
cwtl
orb
dec
dec
mov
dec
in
xchg
pop
cs
push
ljmp
dec
xchg
pop
add
lcall
mov
and
mov
pop
rcrb
gs
out
pop
push
adc
sahf
hlt
xor
sbb
pop
stos
cmp
les
movsl
lahf
or
push
sbb
ss
repz
cltd
and
loope
mov
sti
int
sub
adc
jecxz
mov
or
insl
adc
inc
add
adc
adcb
mov
cwtl
test
adc
stos
loopne
add
cmp
cmp
out
mov
add
scas
jg
dec
push
fcoms
mov
das
xchg
dec
mov
push
inc
and
cmp
add
and
rorb
out
push
std
adc
pop
ds
loopne
xor
dec
rclb
xchg
fdivrs
push
xchg
or
push
mov
or
dec
ficompl
popf
cmp
mov
xor
rclb
out
call
insb
sub
dec
in
shl
cli
stos
xchg
push
es
sub
mov
scas
cli
leave
dec
rclb
out
lret
int
sub
push
movsl
inc
pop
jae
repnz
mov
add
stos
pop
or
clc
pusha
dec
dec
pop
or
ret
aas
repz
loopne
jg
push
mov
or
daa
mov
insl
xchg
cmc
icebp
bound
mov
aas
popa
sub
rcll
push
mov
imul
xchg
mov
xchg
in
int
xchg
jl
push
push
and
lods
cmc
push
out
xor
push
xor
into
cmpsl
cmp
cmp
fcmovbe
dec
jl
and
nop
out
sbb
and
pop
mov
jns
mov
std
xchg
packuswb
and
ret
xchg
fs
scas
mov
push
scas
test
iret
mull
sti
jg
sub
imul
jns
pop
jg
pop
stc
insb
negb
inc
je
out
sbb
gs
adc
loopne
rcll
xchg
cmp
xchg
adc
xchg
cmp
aas
jmp
adc
pop
xchg
sub
xchg
push
loop
or
pop
pop
dec
lds
dec
fists
mov
dec
or
movsl
mov
or
jae
cwtl
jae
xor
in
cmp
sbb
cvtdq2ps
xlat
repnz
push
inc
in
out
pop
pop
imul
xchg
fs
lret
out
leave
repz
cmpsl
sub
mov
rcrb
js
lcall
mov
gs
hlt
shl
test
dec
sbb
push
xchg
jg
lock
mov
mov
mov
jl
arpl
push
les
add
out
dec
rep
xchg
xchg
cmp
repz
xchg
jbe
cmc
sarb
nop
mov
pop
shll
jle
andl
arpl
pop
xchg
pop
lods
icebp
int
add
test
and
mov
cmp
inc
andb
add
outsl
inc
mov
and
sub
sub
cltd
xchg
sbb
sub
jnp
shll
add
mov
lods
pusha
xor
adc
cmp
xor
inc
xchg
outsb
jnp
push
pop
repnz
pop
outsl
cmp
push
data16
in
xchg
mov
rcll
leave
ds
in
lods
imul
in
cmp
push
fscale
je
pop
repz
test
fmull
push
daa
outsb
shlb
inc
andb
inc
stos
jp
in
or
ret
in
bnd
ds
cltd
push
insb
test
daa
cmc
add
push
push
or
shl
inc
outsb
cmpsb
dec
shll
sbb
movsl
lock
dec
mov
lahf
push
mov
xorb
stos
and
nop
pop
dec
out
jl
xor
out
cmp
les
push
addr16
pop
push
popl
mov
pop
xchg
ret
inc
orb
ss
push
pop
sub
out
mov
cmp
movb
cmp
fs
dec
mov
mov
movsb
mov
popf
js
and
test
ret
sti
or
inc
popa
sbb
jbe
in
adc
das
repnz
cmp
roll
mov
div
cmp
inc
xchg
add
adc
int3
add
inc
sub
or
movsb
js
data16
ljmp
scas
mov
cmp
add
sbb
inc
cmp
out
sbb
repnz
cmp
xor
xor
push
mov
jmp
sbb
enter
mov
pop
xor
pop
pusha
xor
jg
dec
or
mov
inc
pop
leave
in
dec
lea
cmp
push
dec
push
into
mov
sarl
sbb
popa
jb
mov
inc
and
pop
inc
push
out
push
pop
mov
push
scas
cli
inc
inc
mov
mov
fdivrl
jns
xchg
push
fsubs
aaa
mov
mov
arpl
out
dec
cmpsb
cwtl
mov
in
pop
lea
xchg
incb
add
pop
xchg
popa
out
shrb
in
stc
shl
pop
inc
cli
hlt
dec
push
outsb
jns,pn
out
xor
int
xchg
ficoml
adc
adc
pusha
add
mov
out
rorl
push
addr16
mov
xchg
nop
inc
jl
es
shlb
popf
jnp
cmp
xorl
fistps
pop
paddw
mov
add
shrb
and
daa
shll
stos
sub
inc
sarb
sub
mov
test
jl
jnp
add
cli
iret
mov
imul
push
in
xor
and
fiaddl
imul
push
dec
pop
testl
add
fsubs
inc
jo
nop
loop
xor
push
rolb
rcrl
std
sub
dec
xor
stos
jae
dec
lret
jno
dec
mov
cmp
popf
inc
cmp
pop
out
xchg
adc
lock
mov
inc
testb
cli
fists
push
in
cmp
and
insl
dec
xchg
jl
sub
jnp
cmpsl
ret
addl
adc
lret
xor
in
adc
xchg
adc
push
dec
mov
sub
adc
sbb
inc
adc
lret
add
outsl
sub
ss
push
stc
sub
call
pop
sbb
cmp
enter
xchg
jno
pop
incl
lret
mov
icebp
ss
ret
pusha
stos
fwait
push
mov
and
inc
mov
xlat
add
fsubl
adc
jle
cmp
aam
mov
push
mov
add
xlat
push
sbb
fstps
leave
mov
inc
outsb
outsl
cmpsb
dec
jne
test
ror
push
mov
pop
mov
push
ja
insl
cltd
adc
outsl
cwtl
loope
cmc
push
cmp
sbb
aad
je
cmpb
aas
pop
adcb
in
ficoms
std
addr16
xchg
test
xchg
pop
scas
mov
lock
popa
in
cmpl
ljmp
mov
mov
adc
mov
out
xchg
int
pushf
jo
out
movsb
push
pop
in
sarb
mov
mov
sbb
rcrl
stc
mov
and
mov
sti
mov
sub
inc
daa
sbb
cmp
jg
popa
jne
xor
repnz
or
xor
mov
add
and
neg
scas
cs
in
std
cwtl
lret
scas
mov
mov
and
inc
pop
sub
pop
add
lods
aam
push
popf
mov
mov
jecxz
mov
push
insl
pop
mov
xor
sub
and
fnstcw
mov
pop
fcompl
mov
inc
sbb
movsb
fwait
xchg
sub
rorb
or
fimull
jno
or
int3
iret
pop
popf
stos
andb
xor
in
push
adc
test
xchg
sbb
sub
push
out
xor
cs
xchg
aas
fcmovb
mov
mov
xchg
aaa
xchg
stos
ret
inc
add
inc
xor
leave
and
fidivs
lods
add
dec
rcll
fstps
pop
aad
xchg
mov
and
push
gs
ja
out
stos
cmp
xor
xchg
or
xor
sub
popa
dec
add
test
cwtl
fsts
or
clc
mov
inc
pop
ret
test
ja
sarb
stc
push
push
fnsave
sub
daa
cmp
or
stos
inc
dec
push
pop
mov
mov
push
pop
lds
sar
mov
movsb
cwtl
gs
xchg
sub
movsl
add
cmp
mov
rcrb
ds
test
stos
push
inc
push
push
stos
mov
sbb
cltd
test
arpl
neg
xor
sbb
ffree
push
add
icebp
jl
sub
dec
xor
shl
dec
dec
mov
inc
sub
cmpb
jo
fidivrs
inc
sub
lods
mov
mov
loope
adc
push
and
or
mov
push
mov
push
imul
sti
jnp
stos
xor
xchg
fisubs
cmpb
mov
fists
mov
mov
jb
loope
loopne
sti
es
test
ret
int3
or
lret
xchg
pop
push
jecxz
sbb
ja
or
cmp
push
or
cmc
adc
fldt
test
jmp
jbe
or
rcrb
fildl
xchg
sub
pop
fldcw
cmpsb
loop,pn
fcoml
pop
mov
pop
outsb
aas
das
dec
sub
mov
int
xchg
lock
mov
jbe
ret
mov
mov
ffree
imul
mov
or
pop
sbb
dec
cmpsl
xorb
std
lret
jle
incb
jne
cld
xor
sbb
aam
into
and
mov
repz
or
into
sub
mov
mov
sub
into
xor
ret
in
ss
mov
and
pop
daa
hlt
cmp
xchg
packssdw
in
scas
mov
sub
adc
inc
sarl
and
aas
cltd
sub
scas
jo
popf
jl
das
int
sti
cmp
xchg
shlb
mov
mov
inc
test
out
xchg
sahf
rcrb
mov
mov
lock
fcompl
add
mov
in
es
mov
fwait
sub
dec
add
shlb
in
adc
fimuls
add
mov
sbb
adc
into
divb
or
mov
insb
ljmp
adcb
sarb
jmp
adc
inc
aaa
jno
inc
dec
in
inc
daa
and
pop
insl
push
sub
xchg
sbbb
dec
cwtl
inc
sub
xchg
notl
or
mov
repnz
iret
push
add
add
rcr
mulb
xchg
std
or
cli
test
sbb
jbe
loope
cmpl
mov
add
loopne
or
and
into
sahf
jp
sbb
mov
repz
fcompl
mov
mov
xor
jno
mov
cmc
imul
lods
push
mov
test
jae
fimull
push
adc
cltd
inc
movb
cmp
dec
ret
adc
adc
lret
adc
movsl
mov
das
insl
add
cmpsl
adc
or
fidivl
pop
jne
shlb
das
lahf
cmpsl
cmp
mov
imul
sbb
imul
insb
xor
js
cmpsb
or
sbb
mov
mov
and
sub
insl
fwait
leave
xor
dec
out
insb
cld
push
adc
in
cltd
mov
xchg
sbb
or
iret
pop
mov
pop
jmp
adc
fcmovnb
add
dec
xor
jp
pop
xchg
fstpl
add
inc
call
ret
aam
jo
push
mov
cltd
mov
es
cli
movsl
jne
xor
mov
not
imul
push
repz
and
push
repz
fwait
sbb
mov
icebp
in
adc
fptan
fcoml
push
jge
stos
mov
es
daa
arpl
js
daa
ret
inc
shl
xchg
xchg
out
notl
call
mov
gs
mov
cld
push
inc
and
ficoms
add
jp
and
cmc
pop
jnp
mov
pop
mov
aad
pop
adc
cld
xor
mov
dec
jo
pop
int
imul
dec
mov
jns
mov
mov
mov
fimuls
in
ds
xor
out
or
inc
outsb
add
cmp
lods
inc
add
or
bound
sbbl
push
adc
movsl
pop
dec
dec
lcall
cmp
out
or
mov
cmp
sbb
mov
in
inc
inc
jle
ret
clc
loope
fists
loop
adc
in
mov
clc
repnz
mov
sbb
lahf
xor
flds
mov
sub
jbe
cmc
outsl
sbb
fidivrl
ss
push
mov
imul
push
shll
dec
xor
arpl
sahf
iret
pop
cli
sbb
das
repnz
test
out
push
and
dec
sub
jno
add
pop
dec
mov
arpl
mov
adc
hlt
imull
and
stos
pop
jge
mov
sub
dec
push
dec
rcrb
xor
je
dec
es
mov
scas
call
or
outsb
and
outsb
adc
dec
cmp
and
subl
imul
xchg
mov
push
test
testl
data16
jno
in
inc
test
inc
push
and
cwtl
jl
in
ja
xchg
cmpsl
cmp
negl
xchg
jnp
xchg
movsbl
pop
xor
adc
cld
and
push
mov
jnp
pop
pop
mov
mov
pop
pop
repnz
sbb
addr16
pop
lahf
arpl
sbb
mov
push
arpl
test
push
popa
inc
sbbb
jae
in
imul
stc
andl
test
je
xlat
dec
lret
xchg
loope
sbb
lret
jp
test
add
lock
scas
in
mov
insl
jmp
lods
ja
in
fnstenv
aad
xorl
sub
sbb
jmp
add
push
dec
clc
bnd
cmp
sub
push
stos
fcmove
sbbb
sub
push
sub
jmp
push
mov
inc
movsl
sbb
repz
movsl
sub
jne
movsl
xchg
int3
mov
mov
push
cmp
pop
pop
into
sub
ret
stos
fmuls
mov
test
mov
daa
xlat
mov
add
sbb
sar
std
mov
mov
mov
iret
leave
adc
jno
cmp
pop
push
fucomip
stos
mov
dec
jnp
imul
arpl
cmpsl
and
repz
loop
dec
pusha
dec
insb
je
sbb
add
pop
popa
ret
aad
shrl
cli
push
mov
adc
pop
nop
enter
scas
jg
xchg
clc
push
test
sub
test
sub
fadds
mov
sub
cmp
xchg
add
cs
scas
out
aas
push
dec
inc
push
fimull
sahf
inc
cmp
out
cmpsl
add
mov
ret
ljmp
pop
cmp
cmp
jmp
je
add
out
or
mov
int3
test
and
rol
jl
add
add
lahf
insb
push
imul
jb
outsl
lret
rorb
pop
test
sahf
cmp
pop
test
inc
dec
jns
int3
adc
repnz
jge
sarl
fistps
and
push
mov
cmc
xor
icebp
mov
inc
sbb
sub
or
sbb
mov
push
pushf
jecxz
popf
movsb
sbb
add
pop
xor
sti
mov
dec
insl
xor
jbe
stos
std
fdivrs
fistl
or
adc
icebp
xchg
sub
movsb
xor
daa
in
lret
push
imul
icebp
je
cli
arpl
add
sub
cs
call
mov
sbb
mov
jo
jb
popa
fcomps
or
pusha
call
push
sahf
mov
fcomps
clc
iret
popa
adc
aad
pop
icebp
pop
dec
les
cmp
jb
cmpsl
hlt
fwait
mov
sbb
pop
mov
mov
sub
leave
clc
icebp
outsb
cmp
jnp
inc
jle
repz
stos
xor
lret
add
hlt
cli
jnp
xor
imul
lock
sub
xor
push
sarb
data16
stc
mov
push
fmul
push
sbb
out
in
add
xor
push
jb
fstpt
xchg
sbb
int
imul
mov
sub
mov
lods
jmp
mov
emms
sub
mov
sahf
cs
mov
ds
pop
in
mov
mov
mov
cmpsl
adc
mov
fwait
adc
in
dec
insb
sti
xor
mov
bound
daa
stos
ss
test
loop
mov
clc
int3
mov
test
cmp
cmc
cmp
dec
insl
mov
xor
dec
mov
mov
push
je
dec
jecxz
mov
lret
fadds
in
stos
xor
ds
in
mov
lcall
add
aad
repz
cs
and
adcl
pop
stc
xchg
scas
cmp
dec
repnz
sar
jl
inc
add
push
loopne
shll
test
cmp
jne
cwtl
out
push
aad
push
out
jp
loop
fmull
mov
jmp
xchg
imul
imul
fidivrs
scas
test
sub
cld
or
aad
std
fildl
mov
pop
scas
or
pop
test
ret
icebp
xlat
aam
jno
bound
lods
les
enter
outsb
and
repnz
or
jae
sbb
xchg
loop
lea
push
inc
aad
mov
add
das
fiadds
push
or
ss
sbb
lock
movsb
repz
lcall
test
jl
fs
movsl
push
jl
xchg
int3
lods
jmp
adc
push
pop
icebp
ss
cmpsl
ja
dec
dec
data16
or
mov
shll
imull
push
mov
jg
in
rorb
popf
outsl
xchg
clc
test
mov
loope
aam
xchg
fwait
push
sbb
or
divl
ret
mov
jg
pop
in
aas
clc
dec
mov
xchg
outsl
mov
mov
sub
subb
fs
pop
xor
cmp
jbe
cmp
dec
ds
pusha
mov
iret
nop
cmp
xchg
xchg
fdivrs
fildl
jp
xchg
mov
std
es
sub
adc
test
add
jl
das
pop
add
shll
pop
xor
out
dec
adc
leave
mov
sub
pop
scas
inc
rcll
push
pop
movsl
loopne
mul
mov
inc
inc
or
jbe
adc
out
out
cmp
mov
push
adc
push
push
icebp
hlt
mov
fs
roll
imul
in
dec
cld
loopne
ja
push
gs
jge
repz
insl
pop
jmp
mov
repz
repz
test
dec
insl
ss
mov
insb
xchg
pop
pop
fsub
mov
lds
adc
push
push
aas
sub
subl
pushf
in
imul
in
xor
imul
mov
test
inc
test
in
pop
sbb
mov
add
add
out
mov
cld
pop
aad
out
aam
xor
or
fdivl
mov
popf
lret
pushf
fwait
bound
mov
mov
sti
mov
inc
adc
in
leave
adc
in
cmp
xor
lods
sbb
pop
jl
sti
inc
arpl
xchg
movsl
arpl
scas
sub
xlat
fimull
mov
jo
inc
lods
adcb
adc
popa
xchg
fdivs
movsl
pop
gs
push
inc
jae
add
aaa
mov
nop
mov
cmc
jb
mov
adc
sbb
adc
add
inc
sub
cmp
push
out
in
scas
out
das
add
pusha
aam
dec
negb
adc
repz
dec
sbb
and
ret
cmp
int
xor
and
mov
add
jecxz
data16
pop
jne
sub
xchg
stos
sbb
inc
adc
sub
sub
add
pop
rcll
ficoms
jo
mov
push
pop
pushf
mov
sbb
inc
adc
nop
lcall
lcall
xchg
ds
scas
sub
inc
testb
fwait
mov
xchg
cltd
mov
out
loope
pop
fstps
cwtl
inc
pop
xor
sub
xor
scas
mov
repz
clc
mov
or
stc
fcompl
sbb
cli
inc
call
and
sub
xchg
fmull
xchg
adc
mov
push
je
dec
jge
popa
repz
mov
mov
scas
lret
dec
ds
sub
aam
or
fbstp
xor
inc
sbb
icebp
mov
push
test
les
adc
lcall
and
jp
mov
in
stos
sbb
add
decb
addr16
repz
lock
js
stos
movsb
mov
push
inc
nop
mov
sub
mov
cli
add
fsubrs
sarb
iret
lahf
ret
dec
push
and
ljmp
push
add
mov
out
jecxz
int
xor
pop
insb
andb
inc
or
rcrb
push
mov
mov
arpl
movsl
jecxz
movsl
add
adc
adc
or
enter
sbb
pop
dec
ficompl
hlt
mov
cmp
or
cltd
pop
fadds
mov
xorb
movsl
xchg
or
sbb
mov
inc
pusha
rcrl
cld
add
pop
imul
pop
jl
xchg
sub
fs
dec
pop
push
repnz
jo
lods
sub
insb
pop
scas
into
repnz
cmc
adc
xor
imul
push
jb
or
scas
ret
mov
push
cltd
scas
add
hlt
dec
dec
mov
or
dec
inc
insl
mov
push
and
or
mov
loopne
nop
shll
rcll
scas
adc
mov
push
xlat
loopne
sub
outsb
mov
push
repnz
imul
rol
aaa
sbb
jnp
xchg
and
push
cwtl
in
pop
xchg
sub
mov
xor
ficomps
mov
stos
pop
nop
pusha
and
push
cmp
sbb
arpl
ficomps
addr16
pop
mov
cmpsl
sub
in
mov
ds
xor
mov
das
repnz
xchg
or
sbb
mov
notb
dec
pop
adc
pop
fisubl
imul
mov
mov
lcall
xchg
mov
sbb
sbb
es
xor
mov
shr
xlat
call
out
mov
cmp
sbb
mov
stos
into
repz
inc
mov
es
mov
or
les
add
jge
lret
sahf
adc
rol
gs
mov
mov
pop
lea
scas
mov
ret
fisttps
fwait
and
ja
mov
adc
pop
ds
icebp
mov
jae
mov
or
rorl
or
cmp
mov
or
xchg
outsb
or
xchg
lock
pop
xchg
aas
and
in
test
push
insl
adc
mov
ud2
fs
adc
imulb
call
sbb
cmpsl
push
mov
add
bound
and
pop
fnsave
movb
ja
movsl
xchg
sub
xlat
stos
mov
mov
push
cli
jno
lods
lods
sbb
xor
sbb
outsb
or
stos
add
mov
mov
cmp
xor
inc
out
sbb
cs
in
mov
mov
jge
ja
pusha
inc
aad
cmp
shl
adc
ja
jo
sbb
mov
arpl
test
sbb
push
test
jl
pop
test
sbb
ja
push
into
mov
adc
jecxz,pn
inc
and
jge
cmp
push
movsb
stc
xchg
push
jno
insb
xchg
in
pop
xchg
xor
mov
test
cmp
sarl
cmpsb
jnp
mov
xor
jns
dec
sub
popf
sbb
add
pop
adc
adc
leave
mov
testb
xchg
mov
imul
cltd
pop
adcb
fld1
je
ljmp
jle
jno
mov
pop
leave
mov
push
daa
repz
dec
movsl
pop
lret
in
mov
push
or
mov
loope
or
inc
pop
pop
xchg
pop
adc
sbb
in
xchg
mov
push
cmp
leave
mov
mov
cmc
daa
pop
push
jns
stos
ljmp
rolb
cmp
enter
add
cmc
sti
cmp
jg
dec
push
adc
push
cmp
jnp
das
sub
mov
test
pop
lret
mov
out
popf
stos
js
cmp
and
scas
addr16
sub
jbe
cmp
ret
and
loope
test
xor
pop
lret
and
ss
inc
pushf
xor
gs
push
int
pop
dec
sub
mov
jmp
jno
jnp
pop
lret
jnp
out
ja
jb
adc
sbb
or
inc
into
outsb
adc
adc
mov
or
pop
jmp
sahf
push
sbb
pushf
cmpsl
adc
sub
cmp
xor
xor
enter
shlb
orb
pop
mov
pop
stc
stos
out
push
inc
mov
or
lods
lret
cmc
lea
xchg
and
dec
movsb
arpl
aad
je
mov
arpl
in
ljmp
ljmp
rorb
cmpsb
cwtl
xchg
cmpsl
je
jno
xchg
mov
or
mov
sub
and
adc
negb
mov
sbb
push
jg
xor
cmpsl
mov
pop
xor
jmp
ja
adc
rclb
ss
aaa
cmp
mov
arpl
ds
mov
std
push
adc
inc
dec
inc
push
sbb
in
xor
pop
fcmovnb
push
sub
repnz
leave
fstpt
in
rcrb
adc
cmp
xchg
mov
sbb
lcall
outsl
ss
xor
pushf
pop
pushf
test
pusha
or
mov
xor
addr16
adc
push
jp
cmp
cmpsl
fstl
add
sub
jp
in
add
mov
mov
fnsave
and
push
pop
cmp
xchg
inc
cmp
les
movsl
rcll
lret
sbb
repz
hlt
mov
mov
outsl
aaa
scas
arpl
fidivrl
lcall
mov
inc
xchg
out
sub
lret
mov
repz
mov
dec
xchg
outsl
imul
cld
mov
pop
jl
rsqrtps
iret
lods
sbb
xor
ljmp
pop
mov
pop
mov
xchg
mov
jbe
sub
nop
rcl
push
pop
mov
mov
std
icebp
pop
idivl
sbb
adc
enter
cmp
pop
inc
and
popa
add
mov
roll
or
loope
outsb
or
test
jmp
mov
movsl
mov
jb
add
sarb
gs
mov
lea
sbb
mov
add
cltd
test
jmp
adcl
jmp
flds
xorl
test
jnp
jbe
xor
rolb
sub
inc
jl
fdivs
rorb
add
mov
pop
jae
jno
pop
adc
mov
std
pop
cmp
popa
adc
push
jnp
mov
lods
sahf
loop
or
repnz
mov
test
ja
outsl
aam
push
add
jl
xlat
sub
cwtl
in
call
xor
push
ljmp
stos
ret
das
and
mov
jg
cs
insl
clc
lods
jl
ja
cli
sbb
imul
pop
das
aam
daa
adc
mov
jae
add
arpl
sahf
and
pop
iret
add
aam
insb
icebp
bound
bound
and
hlt
pop
sub
jae
xor
xchg
add
mov
pop
pop
decl
rcr
lods
mov
xor
imul
ja
inc
inc
or
mov
cmc
ja
in
sahf
imul
test
cwtl
jle
mov
cs
nop
enter
mov
xchg
rcl
cmpsl
push
adc
sub
xchg
aas
out
icebp
jbe
and
js
mov
mov
mov
fdivl
adc
inc
xchg
shll
cmovge
cmp
outsb
addps
push
or
and
loopne
rcl
stos
in
pop
sarb
dec
scas
lret
subb
sbb
imul
add
and
je
aad
repnz
in
sbb
int
sub
loopne
add
sub
pop
movsl
mov
int3
and
adc
jecxz
mov
bound
adc
icebp
loope
mov
xchg
lock
icebp
fwait
gs
stos
adc
inc
subb
int3
dec
inc
pop
add
hlt
repz
pusha
sahf
sti
xlat
or
push
cld
mov
sahf
dec
add
or
insb
pop
mov
rcr
mov
das
cmp
pop
fdivrl
push
xor
test
mov
add
xchg
jmp
push
hlt
push
mov
rol
mov
jl
lea
fstpl
call
mov
adc
mov
inc
leave
faddp
push
jmp
shlb
inc
dec
les
aaa
cmp
das
das
arpl
dec
lds
rcrl
push
nop
mov
push
xchg
add
shrl
or
das
hlt
out
adc
xchg
sub
popf
add
imul
inc
inc
add
repnz
arpl
xchg
cmp
cli
pushf
adc
pop
pop
jns
jle
push
loope
push
popa
sarb
lret
xchg
and
jbe
jp
pop
jno
xlat
out
out
or
hlt
insb
in
test
jmp
mov
jne
stos
dec
in
cmp
lds
into
jg
sahf
testl
cld
lret
push
push
subl
push
mov
xchg
out
icebp
subb
mov
xor
adc
stc
shll
pop
pop
xor
push
sahf
xchg
push
mov
adc
fsubr
jns
pop
in
add
mov
aam
js
pushf
movsl
xor
shrb
or
jmp
and
les
mov
mov
push
lret
pop
jno
jae
out
jmp
paddb
pop
ret
pop
imul
jo
mov
pop
push
pop
call
es
fstps
xor
xor
pusha
sarb
pop
stos
pop
clc
icebp
int3
xchg
fcmovnu
cs
jne
mov
adc
les
pop
mov
inc
pop
mov
sbb
sbb
jb
inc
dec
lea
out
es
jecxz
or
popa
sub
test
add
les
aad
in
stc
out
mov
stos
mov
dec
stos
pop
scas
fimull
or
call
or
popf
imul
sete
lcall
mov
cmpsl
jle
pop
xor
mov
jge
pop
daa
inc
imull
sbbl
add
push
enter
std
in
insb
addb
cltd
ret
dec
loope
inc
xor
fwait
fwait
adc
sbbb
bndldx
and
inc
push
xchg
and
pusha
mov
mov
adc
in
xor
movsb
loope
and
imull
xor
jne
fcoms
fsts
xor
mov
jo
fstpl
aam
mov
rclb
or
pop
int3
mov
loope
push
arpl
xchg
icebp
filds
loopne
aas
pop
jg
dec
dec
and
xchg
pop
lret
and
jbe
sarl
nop
cmp
push
aad
inc
faddl
xor
xchg
push
adc
outsb
push
sub
sbb
jmp
outsl
dec
and
inc
jl
push
cmpsb
sbb
add
xlat
cmp
and
imul
aas
mov
fcomps
push
pop
xchg
test
aas
sub
mov
mov
dec
dec
insl
xchg
mov
adc
mov
jge
push
mov
fnstcw
add
scas
mov
adc
shr
mov
call
cmp
push
or
xchg
call
jo
dec
add
push
cli
add
je
inc
cli
scas
mov
in
cmp
call
xorb
mov
cmpsl
xchg
and
faddp
mov
inc
lds
cld
mov
or
or
dec
scas
fdivs
loope
popa
cmpsl
xchg
jae
mov
mov
xlat
xchg
jmp
mov
and
jb
aad
xchg
cltd
add
adc
and
popa
jae
cmp
aaa
lds
js
inc
add
in
and
out
jmp
xor
jnp
dec
or
fimuls
icebp
mov
cmp
push
les
mov
jae
loop
in
xchg
mov
ror
pop
test
xor
mov
xchg
inc
das
and
orl
lret
loopne
jge
mov
ret
jns
shr
add
cmp
push
or
lahf
sbb
out
sub
leave
mov
push
popf
out
pop
aaa
mov
testb
jae
and
test
cmp
loopne
mov
jl
loop
mov
sbb
aas
or
shll
ds
xor
lock
jae
cltd
xorb
xrelease
inc
ljmp
stc
hlt
or
pop
mov
add
fdivr
cli
dec
pop
int3
or
fadds
pop
mov
mov
nop
pop
jno
inc
je
icebp
test
jmp
loope
push
pop
je
fwait
xchg
xchg
inc
loopne
loope
imul
cmp
lock
call
jmp
pop
jecxz
xorl
mov
fimull
sub
pushl
hlt
test
ret
mov
les
fisubrs
mov
shrb
cmp
cmp
enter
pop
bound
in
dec
ss
cli
and
sbb
das
inc
mov
cmpsl
inc
dec
aam
out
sbb
fisubrl
push
shlb
inc
cmpsb
pop
pop
pop
xchg
dec
sarb
les
pop
jno
sahf
mov
test
inc
sbb
jb
test
push
jge
nop
orl
mov
scas
mov
jb
insl
cli
jl
jg
loop
ret
outsb
mov
xor
and
fwait
icebp
cmpsb
rcll
jmp
enter
pop
or
div
test
ret
cld
xor
inc
jp
and
jle
gs
dec
icebp
leave
aam
dec
mov
dec
int3
iret
mov
cmp
xchg
test
mov
pusha
inc
mov
sbb
add
xor
pop
ljmp
mov
imul
mov
xchg
in
jae
add
inc
hlt
pop
es
mov
cmp
out
insl
xchg
hlt
or
adc
push
sub
lock
pop
xor
ljmp
inc
ret
adc
int
fdivrl
xlat
mov
stos
mov
and
mov
jge
mov
pop
mov
notl
and
sbb
jecxz
jne
test
push
and
lds
mov
mov
jae
fistpl
pop
ret
cmp
lods
in
pushf
lret
mov
loopne
xchg
roll
sub
and
mov
mov
shr
cmp
cli
mov
test
mov
sub
inc
fistpll
jp
movsb
xchg
clc
mov
fdivrp
mov
cmp
jp
fstpl
jae
std
and
xor
imul
jo
cmpsb
andl
push
mov
js
xchg
imul
push
cmp
inc
insl
mov
and
scas
push
call
out
push
push
mov
and
pop
sub
dec
pop
das
jl
paddb
loopne
cmp
xchg
sbb
adcb
push
inc
cld
inc
outsl
lret
or
lret
out
in
and
cmp
pop
xchg
jmp
cltd
mov
pop
mov
or
jae
adc
inc
or
sbbb
leave
in
mov
cmp
aas
pop
fucomp
pop
jbe
cld
cmpsl
les
das
or
sub
fldl
cmpsl
xchg
push
pop
enter
jns
jns
cmc
stos
imul
daa
dec
pop
xlat
push
mov
test
xchg
mov
bound
push
andb
and
mov
mov
push
mov
inc
insl
and
and
push
jno
mov
mov
shrb
scas
and
mov
xchg
sti
cwtl
pop
or
lds
ja
pop
bound
lds
gs
jno
lock
and
mov
ss
bound
sub
inc
lods
pop
shrl
jno
cmp
lea
pop
and
jmp
mov
jp
popa
xor
mov
sar
xchg
rorb
sub
sub
dec
std
adc
aad
rcll
je
dec
ret
aad
imul
cmpsb
jecxz
hlt
xlat
and
das
mov
fadds
inc
and
ss
fsub
aam
dec
adc
adc
and
cmovns
add
mov
icebp
gs
push
popf
pop
jo
test
aam
jne
leave
les
inc
adcb
jbe
mov
xchg
call
mov
cwtl
imul
sahf
mov
rorb
xor
fbstp
xchg
mov
adc
xor
jns
inc
popa
jne
gs
rcll
jbe
add
push
inc
out
dec
mov
shr
lock
pusha
call
mov
std
aam
mov
lahf
mov
dec
jl
std
jne
xchg
xor
dec
push
cmpsb
sahf
fstl
scas
sub
lods
xlat
xor
jbe
enter
add
jle
clc
sarb
lods
movsb
sub
lea
cmp
xor
dec
sbb
adc
inc
inc
cmc
sbb
cmp
popa
jbe
es
sub
int
js
xor
sbb
js
pop
out
inc
mov
inc
loope
mov
mov
mov
insl
mov
adc
and
pushf
in
sub
cld
scas
lock
adc
mov
mov
push
cmp
mov
int3
mov
mov
xor
or
sahf
loope
and
pop
subl
out
cmpsb
jnp
hlt
ret
cmp
outsl
nop
sbb
and
push
sbb
fstpt
and
dec
dec
fbstp
inc
xchg
mov
icebp
push
push
mov
cmpsb
dec
xchg
popf
stos
fs
jmp
mov
inc
pop
cld
mov
dec
jno
sub
test
inc
jge
fisttps
popf
shrb
test
add
push
ja
fcmovb
xor
and
inc
push
out
rcrb
pop
lods
pop
xlat
or
pop
out
and
popa
adc
int3
aas
pop
flds
jg
test
dec
stos
mov
les
inc
movsl
or
or
insb
sub
into
adc
mov
push
sbb
in
or
sbb
cmp
ljmp
jg
fsub
pop
pop
push
bound
out
xor
das
or
add
movsb
jo
mov
and
lret
push
mov
mov
in
pop
popa
dec
cmp
and
xor
outsl
sahf
mov
dec
sti
cmc
dec
xor
sub
push
insb
sbb
ljmp
add
xchg
and
aaa
inc
sbb
or
sahf
addr16
mov
mov
inc
inc
insl
add
cmp
adc
adc
cld
shl
ds
cmp
mov
sbb
adc
jg
cmp
mov
jo
add
push
repnz
inc
jno
rcrb
fdivr
pop
loopne
into
pop
andl
divl
cwtl
insl
aas
out
xchg
fcmovne
xor
loopne
test
cmc
in
dec
or
sub
cmp
les
add
sub
xlat
xor
xor
push
int3
xlat
inc
jecxz
and
sub
pop
xchg
jae
mov
lret
lret
mov
cmp
str
push
push
fninit
test
pop
nop
out
fnstsw
jmp
and
jmp
in
test
cltd
in
outsl
sahf
insl
mov
lret
mov
jp
lds
mov
push
cmp
xchg
lcall
fisubs
mov
cmp
dec
ss
or
pop
rcl
shlb
dec
add
dec
push
stos
pop
mov
movsb
pop
mov
scas
xchg
cmc
sbb
loopne
dec
xor
or
daa
adc
aaa
pop
insb
scas
shll
pushf
jle
pop
push
lret
jg
fdiv
or
and
add
and
es
xor
mov
jecxz
ss
cmp
xchg
clc
test
inc
add
mov
push
add
scas
sti
insl
mov
add
sub
pop
into
adc
pop
inc
add
popa
push
adc
push
sbb
dec
icebp
ficoml
sub
loop
pop
push
subb
test
shll
test
test
sub
scas
and
gs
imul
and
cltd
xor
jecxz
pop
and
roll
cmp
dec
popf
test
in
into
test
push
xchg
push
fimuls
loopne
or
sub
and
clc
push
add
mov
test
pop
mov
lds
jp
mov
add
aad
sbb
inc
cmp
dec
jae
loop
jbe
ret
xchg
xlat
test
loope
or
movntq
out
push
xlat
call
push
mov
aad
aas
sub
outsl
pushf
sbb
push
sbb
rcrb
cli
bound
push
jle
js
cmp
fistpl
mov
pop
cmp
mov
push
or
sbb
lahf
into
mov
mov
add
jb
outsb
int3
pmulhuw
inc
clc
jmp
cmp
test
sbb
push
inc
imul
push
call
out
or
push
aam
and
xchg
xchg
inc
cmp
pop
push
mov
into
outsl
sbb
addb
stos
out
cmpsl
mov
xor
sbb
inc
std
jno
out
mov
jb
mov
mov
inc
pop
lret
cwtl
scas
adc
std
jnp
fwait
mov
or
sub
jb
je
insl
adcl
fs
pop
ja
push
pop
cli
xor
inc
xor
mov
ja
xor
xor
mov
repz
sub
xor
test
xchg
sbb
xor
push
pop
add
xchg
sub
or
pop
pop
push
sahf
add
or
pop
mov
cmpsb
cltd
inc
lock
jb
jnp
mov
push
gs
in
fdivrs
pop
shrl
sub
xorps
addb
mov
test
sar
ljmp
mov
clc
jns
rclb
lcall
jmp
mov
adc
out
mov
sbb
inc
push
cmpsb
dec
fisubrl
sub
arpl
aad
movsl
jmp
cmp
sub
repnz
scas
xor
and
sbb
out
mov
flds
arpl
push
or
stos
xchg
lods
inc
dec
jmp
test
add
xor
jb
pop
push
cmpsb
gs
ficoml
fwait
outsl
jb
sbb
xor
push
mov
icebp
push
jecxz
mov
push
push
sub
repnz
cmp
sub
push
pushf
scas
add
mov
je
mov
mov
mov
mov
insl
xchg
xchg
cmp
inc
add
pushf
dec
inc
push
mov
adcl
adc
sub
std
into
ljmp
sbb
push
pop
ficoms
or
pop
jb
test
dec
retw
push
sub
ljmp
adc
js
jo
pop
cmpb
scas
pop
icebp
out
idivb
int
and
mov
xchg
jne
push
jbe
cltd
xchg
jmp
sti
test
clc
mov
dec
cmp
cli
stos
test
outsl
or
push
cmp
test
lahf
xchg
mov
call
push
push
orl
add
xor
cs
ret
dec
adc
sub
sub
or
cmp
xor
in
lock
lds
mov
in
hlt
cld
mov
xlat
or
push
rclb
jno
sub
push
and
std
cmc
arpl
push
inc
jecxz
out
jg
or
dec
and
insl
jg
stos
ljmp
mulb
out
dec
fldl2e
add
aaa
shrb
in
shl
lods
push
movsb
and
insb
xchg
out
jo
xlat
pushf
sahf
inc
loope
bound
xchg
gs
int3
es
mov
push
inc
lock
inc
fdivr
in
and
data16
outsb
or
popf
and
icebp
jbe
int
ret
mov
test
movsl
jns
and
shlb
or
jecxz
push
mov
lret
jg
dec
shlb
test
cmc
sub
stc
outsb
aad
hlt
adc
sub
int3
leave
and
adc
aam
jmp
std
sub
jae
test
dec
in
cmpsl
inc
sbb
leave
daa
mov
cltd
xchg
std
in
outsl
aas
dec
dec
pop
into
sbb
in
sbb
sub
shl
pop
sub
fidivrs
and
adc
xlat
push
bound
icebp
lock
imul
mov
test
mov
daa
pop
mov
xor
jo
jecxz
push
dec
bound
mov
jae
repnz
xor
outsb
xor
and
lods
test
iret
pushf
jbe
insb
inc
jl
js
imul
movsl
out
mov
adc
push
xchg
outsb
jmp
enter
push
pop
ljmp
cmp
inc
cs
fisttps
clc
and
gs
scas
cwtl
pop
and
sub
cmp
nop
xchg
in
sub
es
xchg
mov
fists
inc
ret
or
test
into
les
cs
out
pop
mov
xchg
sahf
adc
into
jae
stos
push
mov
add
mulb
cmp
sbb
out
and
xchg
push
sub
sub
jp
lret
xor
pop
dec
pop
xlat
fwait
in
mov
adcb
mov
iret
jne
int
insl
xlat
pop
add
cmp
iret
xchg
das
or
icebp
mov
mul
xchg
cmp
scas
out
and
xchg
mov
mov
imul
jecxz
sahf
mov
ljmp
into
push
adc
add
mov
inc
nop
out
push
adc
roll
and
mov
adcb
jecxz
imul
or
xchg
in
icebp
imul
or
subb
sub
mov
xor
sti
pop
push
stos
movsl
inc
mov
lret
sbb
sbb
insl
sub
stos
mov
cld
stc
cmp
mov
push
lret
mov
cmp
xor
pop
cld
mov
cli
loopne
mov
shrb
into
jne
xchg
cmpsb
ss
nop
lret
mov
xchg
and
jnp
mov
sub
mov
pop
dec
sbb
push
sub
mov
scas
cmp
fdivp
je
movsb
mov
cltd
sbb
push
xlat
std
xchg
hlt
mov
adc
rcrl
inc
pop
movl
mov
xchg
mov
push
push
push
les
push
gs
xlat
jmp
mov
fnsave
dec
push
daa
cmp
dec
fwait
xlat
push
outsb
sahf
sbb
ss
hlt
jle
jmp
stos
xor
mov
repz
dec
xchg
cmp
adc
push
cmp
test
mov
mov
mov
pop
mov
mov
iret
inc
sub
stos
lea
cmp
cld
divb
test
ret
negb
arpl
roll
xor
test
dec
arpl
sbbb
fcmovne
ja
or
add
inc
pop
lahf
repz
xchg
or
push
mov
sub
fld
inc
es
pop
mov
push
and
cmp
movsb
pop
mov
jns
push
fmul
lahf
loope
cmp
sbb
jg
mov
lea
pop
jg
xchg
mov
pop
dec
inc
adcl
fisubl
or
mov
jno
cmp
and
pop
lock
filds
sbb
xor
lock
daa
xor
jle
inc
add
mov
sbb
loope
in
add
cmpsb
leave
sbb
repnz
push
xchg
arpl
lret
push
sub
sub
aam
ljmp
sub
pusha
subb
lods
mov
imul
lods
cmpb
stos
cmpsb
sarl
adc
das
mov
mov
cmc
sub
lods
in
mov
pop
and
enter
and
push
jl
xchg
pop
loopne
jecxz
push
mov
push
xchg
leave
scas
cld
mov
repnz
inc
mov
fmul
lock
sbb
or
in
repnz
call
and
fisttps
sbb
and
mov
pop
mov
call
jg
add
dec
mov
int3
xorb
or
xlat
in
ss
in
rol
jmp
stos
scas
rcrb
aam
pop
sahf
or
test
mov
or
cmp
jecxz
sbb
xor
sti
lea
push
add
ret
mov
test
sub
loopne
lock
jmp
mov
gs
lods
lock
and
in
dec
cmp
push
std
xlat
stos
mov
cmp
jb
stc
jb
jb
imul
andb
pop
mov
lret
xchg
sbb
xor
hlt
dec
in
sbb
or
fs
pop
rcr
testb
outsb
frstor
lock
add
cmpsl
test
pop
xchg
sti
roll
sbb
xor
jnp
cmp
push
jo
dec
pop
dec
test
aas
sarb
mov
pop
in
cmpb
cmpsb
xor
std
sbb
ljmp
lods
je
popa
stos
mov
push
cmc
popl
mov
jp
test
iret
ficomps
push
dec
scas
mov
js
xor
cli
sub
scas
clc
xor
outsb
aas
dec
pop
push
ret
out
fmuls
scas
jbe
andl
dec
pushf
lcall
lcall
dec
jbe
lods
pop
outsl
sarb
add
push
mov
pop
cli
arpl
mov
xor
shlb
mov
and
or
dec
fsub
rorl
cmpsl
in
pop
add
xor
add
aaa
push
jns
subl
sbb
cmp
into
inc
sarl
pop
pop
xor
addr16
push
mov
mov
jmp
clc
cmp
das
cmpsl
inc
fldcw
lea
dec
test
inc
jae
prefetch
or
mov
in
mov
jg
in
cld
mov
sub
mov
or
push
xchg
pop
lock
call
jno
dec
mov
xchg
sbb
hlt
outsl
in
xor
ud0
mov
mov
add
mov
icebp
push
call
mov
xor
stc
cwtl
xchg
ss
gs
es
jp
andl
or
sbb
or
ficoml
pop
cltd
pop
sbb
sub
rcll
popf
sub
jecxz
adc
adc
mov
clc
in
jns
dec
dec
xchg
repz
xchg
les
ficompl
sarl
or
xchg
jne
mov
adc
xorb
mov
jl
pop
adc
adc
mov
push
sbb
push
push
xchg
mov
das
inc
rorb
jns
mov
outsb
add
pop
mov
push
xchg
loop
jl
repnz
cwtl
dec
addr16
out
cmpsb
add
mov
jne
dec
seto
xor
test
mov
and
stos
pop
xchg
sub
xor
shll
jge
and
mov
nop
mov
popf
xchg
mov
inc
std
inc
test
jbe
adc
dec
cmp
jo
leave
gs
push
mov
xor
xchg
in
and
xchg
lods
filds
jb
and
inc
adc
add
lods
adc
loop
aam
xchg
sbb
rcrb
push
stos
mov
sbb
inc
ret
xchg
sbb
adcb
fisttpl
jecxz
les
jp
nop
add
pop
xor
lods
or
and
add
mov
js
lret
push
mov
rorl
pop
xchg
hlt
call
sbb
in
test
mov
pop
push
insb
add
in
dec
nop
push
fisubs
repz
mov
inc
jp
add
orps
pusha
stc
out
cmp
push
ja
mov
lods
xor
sub
cmp
push
xor
les
sub
mov
inc
mov
xor
stos
cmc
in
mov
mov
je
hlt
or
dec
lahf
imul
lods
mov
push
lods
xchg
ljmp
stos
inc
jle
lret
and
lods
xchg
push
mov
push
inc
test
or
jl
lcall
hlt
sbb
test
lds
subl
pop
cmpsl
daa
mov
cli
pop
loope
aaa
cmp
cmp
add
sbb
dec
push
stos
sti
das
push
push
in
jae
ja
orl
sub
ljmp
cmp
stc
cmp
pop
sbb
push
inc
xchg
aam
and
or
stos
negl
leave
inc
das
stos
jno
add
push
add
aam
mov
imul
into
rclb
pop
pushf
push
xchg
js
inc
cmp
jmp
sub
pop
aad
loope
jg
jo
jp
movsb
jns
dec
push
sahf
xor
aaa
pop
fiadds
jle
fcmovne
pop
add
pop
icebp
inc
adc
movsl
inc
sbb
cmp
sti
adc
nop
jecxz
orl
add
sub
popf
jb
popa
shlb
or
or
add
repnz
cs
pop
adc
cmp
adc
test
pusha
and
add
test
adc
sub
mov
mov
divb
add
mov
mov
ljmp
imul
lea
mov
leave
inc
aas
data16
loope
rorb
add
jle
jo
out
cmp
push
fimuls
cmpb
add
xor
and
rcll
pop
xchg
ss
daa
popa
repnz
add
loopne
dec
mov
insl
adc
dec
inc
push
insb
aad
dec
in
mov
push
mov
jnp
jg
mov
push
push
mov
mov
inc
cli
xor
jo
ljmp
in
shll
sbb
fimull
push
xlat
out
popa
scas
pop
mov
pop
hlt
mov
inc
into
addb
cmpsb
and
out
push
mov
sti
and
lahf
cmp
jae
mov
imul
lahf
test
sub
jne
pop
shlb
xor
in
fldl
stc
xchg
xchg
push
add
adc
imul
xchg
pushf
pop
fimull
mov
loop
call
mov
mov
push
sub
cltd
sbbl
int
cmpsb
cwtl
scas
iret
add
xor
xchg
lods
pop
roll
adc
adc
idiv
adc
in
sub
or
dec
lods
push
jne
jl
popf
add
push
bound
cmp
mov
sbb
daa
mov
or
push
or
outsl
pop
mov
pop
mov
repnz
pop
dec
push
fildl
mov
mov
inc
fcoml
sub
mov
cli
xor
loopne
inc
stos
es
sahf
orl
cmpb
adc
addr16
mov
repz
out
sbb
or
lds
gs
mov
call
lds
sub
lds
fwait
loopne
dec
fdivr
jl
or
sarb
ficoms
std
xchg
or
in
data16
divb
cmp
sbb
mov
xor
fistps
mov
pop
mov
mov
loop
push
sbb
cmpsb
call
arpl
jnp
or
insl
daa
fcmovnbe
mov
mov
inc
jne
or
test
sub
cmp
shll
ljmp
jne
xchg
sbb
in
pop
jmp
push
loopne
aaa
mov
and
mov
mov
lahf
sbbb
add
mov
push
into
cmp
scas
test
or
std
rcrb
mov
and
sti
pushf
addr16
xchg
jae
cltd
mov
scas
cmp
std
pop
lock
sarl
sub
and
add
mov
fwait
adc
clc
int
and
int
push
xchg
mov
sbbb
fidivrs
mov
xor
repnz
scas
and
sbb
push
sbb
mov
nop
push
cmp
and
data16
jle
ja
std
xor
mov
fs
insb
nop
stos
pop
add
jbe
test
mov
mov
mov
cmp
lock
mov
xchg
xchg
std
sbb
push
ficompl
lods
jg
inc
mov
je
inc
mov
jg
adc
stos
xchg
repnz
pop
mov
inc
fisttpll
nop
scas
sub
jno
mov
mov
mov
pop
popf
dec
cmp
shlb
mov
mov
stc
test
mov
rcrl
sbb
loopne
push
pop
jg
and
imul
or
test
pop
ljmp
xchg
cmp
stos
pop
dec
xor
jmp
arpl
lret
mov
repz
pop
add
jl
jb
mov
mov
or
mov
enter
out
fisubrl
insb
mov
adc
aam
ds
pop
fmul
rcrb
stc
mov
jnp
sbbl
test
adc
add
push
inc
or
mov
loopne
push
mov
sahf
in
movsl
jne
jmp
cs
scas
mov
pop
dec
inc
and
xor
aas
jp
nop
cmp
cli
ds
xchg
iret
addl
sbb
loope
fsubrp
add
mov
xchg
push
inc
and
add
sbb
rcrl
jnp
cmpsb
stos
push
or
aad
jb
cwtl
ret
sub
sahf
outsl
dec
aas
and
jns
ss
in
pop
cmpsb
clc
fmulp
dec
sub
insl
push
sbb
xchg
out
adc
outsb
lcall
dec
xor
aam
inc
ret
push
adc
push
jo
cmp
adc
mov
ss
xchg
cmp
shll
adc
mov
adcb
inc
cld
jge
inc
dec
and
inc
adc
test
or
jge
loope
pop
clc
xor
pusha
ret
mov
push
je
add
adc
outsb
push
and
cmp
js
mov
mov
lret
data16
nop
jns
xor
lods
adc
push
dec
ret
arpl
sub
push
ljmp
adc
push
aad
enter
xchg
aad
inc
xchg
jle
cmc
cmp
xor
push
popa
js
rorl
loope
cltd
adc
mov
sbb
shlb
in
and
jecxz
imul
xor
das
or
or
call
int
movsb
jecxz
adc
xor
insl
stc
or
cmp
nop
addr16
stc
add
dec
das
xchg
push
mov
cmc
insl
test
jnp
das
or
adc
fdivrs
lea
shll
pop
mov
mov
pushl
or
cmp
aaa
xor
movsb
mov
sub
mov
sub
xchg
insl
or
add
jl
sti
push
cltd
fsubs
and
inc
push
ds
push
out
addr16
pop
lcall
inc
cmpsl
enter
popf
mov
jecxz
sub
jl
mov
dec
or
push
mov
xchg
aas
inc
lcall
hlt
xchg
fisttpll
pop
fisubrs
pop
imul
jbe
pop
jl
pop
and
mov
les
sbb
in
push
out
xchg
scas
sub
adc
lea
mov
jmp
in
mov
and
xchg
cltd
mov
xchg
sbb
leave
pop
push
fsts
cmp
jg
dec
sub
dec
popf
push
in
roll
mov
mov
out
incl
or
jp
push
inc
mov
je
mov
mov
loopne
pop
test
inc
cmpsl
or
insb
inc
and
add
xlat
mov
call
xorl
xor
mov
aas
inc
loope
and
cmp
sub
or
fldcw
scas
xchg
ret
inc
rcl
or
cmp
inc
push
or
aaa
jl
dec
jp
stos
mov
in
mov
bound
mov
push
or
mov
dec
xor
pop
jns
jae
les
mov
addb
mov
lcall
push
popa
movsb
hlt
adc
rolb
xchg
fimull
daa
or
inc
out
sti
cmp
cmp
pop
fiaddl
mov
scas
les
test
mov
inc
mov
push
push
inc
cwtl
cmp
loope
mov
mov
cmp
jno
das
xchg
lock
gs
repnz
pop
pusha
movsb
bound
cmp
pop
js
inc
stos
dec
push
pop
add
ja
mov
xor
cmp
or
mov
xchg
adc
add
sub
daa
or
pop
push
mov
fnstenv
sub
adc
xor
fldenv
pop
mov
mov
adc
pop
bound
xor
cli
and
lret
jg
jb
arpl
cmp
movsl
mov
and
lahf
cmp
cltd
mov
push
std
or
std
push
inc
pop
fsub
outsb
mov
filds
add
loope
dec
mov
mov
mov
dec
inc
mov
out
jnp
lea
in
cmp
call
aaa
lahf
nop
sbb
test
add
cs
push
loope
push
clc
jecxz
xchg
int3
inc
inc
adc
xor
mov
lea
leave
push
js
je
and
ss
cmc
rorl
out
fcomip
les
and
jnp
pop
cmp
lret
xchg
in
adc
push
push
push
adc
lcall
int3
data16
in
inc
push
stc
adc
cmpsb
addl
lock
sub
dec
mov
lea
daa
fisubrs
dec
shll
jmp
lods
lock
and
cmc
in
mov
notl
cmp
adc
testb
pop
pusha
lock
adc
mov
xlat
dec
outsl
push
sub
jl
inc
js
fs
fists
xor
xchg
popf
shrl
xchg
subl
xchg
add
in
xchg
ret
adc
pop
push
outsb
push
pop
scas
sbb
out
sub
test
in
mov
das
jno
xchg
dec
scas
rcl
jns
add
repz
cwtl
jmp
xlat
jecxz
in
sbb
cld
inc
ja
pushf
out
lock
push
adc
sahf
mov
adc
fs
or
or
xor
and
mov
adc
pop
mov
push
mov
clc
or
inc
lds
lods
xchg
jae
fcomp
out
aad
ja
movsl
aas
xlat
je
jne
cmp
sub
into
insl
lods
sbb
add
js,pt
xchg
mov
pop
pop
jne
cmp
hlt
jbe
scas
sub
mov
xlat
pop
lea
lret
mov
push
call
loopne
and
lock
jno
and
sub
xlat
and
ret
addr16
xorb
fwait
cli
inc
or
nop
nop
jb
dec
mov
out
jmp
dec
cli
cmc
or
ja
mov
out
and
jno
jg
dec
jne
add
out
lret
xlat
push
or
or
loop
aas
cwtl
mov
iret
sti
add
dec
std
or
insl
cs
repnz
fistps
jmp
lock
popf
lcall
dec
fdiv
pop
and
mov
out
mov
add
mov
lret
adc
add
fidivrs
push
sub
lock
arpl
popf
dec
bound
sbb
cmpsb
adc
pop
aad
fnclex
leave
mov
jecxz
mov
dec
sub
fsubp
adc
sbb
pop
outsl
jle
mov
rdtsc
fnstcw
push
mov
ficompl
nop
mov
cld
out
pop
fiaddl
pop
jecxz
adc
add
rcr
subb
jl
les
mov
jo
dec
lods
xchg
stos
mov
push
pop
mov
mov
xchg
or
subb
std
imul
sarb
pop
mov
mov
ss
js
xor
outsl
xor
sbb
mov
jo
and
jp
shrl
cmp
fidivs
rcl
daa
inc
inc
or
loop
movsl
fwait
insb
mov
cmp
cmpsb
sbb
test
mov
adc
sar
xor
sub
jmp
xchg
outsb
out
mov
adc
sub
add
lds
subl
xchg
or
addr16
test
sub
aaa
jne
outsl
aam
into
stc
inc
inc
pop
xlat
xchg
loopne
imul
sub
xor
ja
popf
jge
inc
decb
dec
pop
gs
sbb
test
popa
mov
sub
push
and
jmp
jns
adc
hlt
mov
jo
test
cmp
mov
filds
cmp
lock
mov
push
dec
mov
push
lcall
fsubs
and
outsb
jb
xor
fwait
stos
ret
add
pop
lds
and
add
hlt
mov
cmp
das
pop
out
adc
js
imulb
das
pop
iret
mov
cltd
popf
mov
dec
jge
mov
dec
or
xor
fmul
or
sbb
xchg
or
jae
pop
sarl
xor
arpl
xor
out
mov
rorl
out
in
mov
jmp
add
jae
jno
in
jb
rorb
xor
pop
out
lret
or
push
mov
push
sbb
add
es
xchg
add
mov
sbb
andl
cmp
sbb
lcall
add
adc
mov
test
inc
jge
movsb
mov
sub
push
sub
adc
insb
xchg
pop
mov
mov
lahf
test
cltd
icebp
cmp
lods
xchg
or
jle
mov
fistpl
stos
imul
jne
xlat
in
mov
mov
or
ss
push
xchg
xor
in
sahf
addr16
add
jne
push
xchg
rorl
pop
ja
push
mov
iret
bound
cmp
ficompl
push
movsl
xchg
shll
stos
lret
gs
xchg
cmp
dec
inc
movaps
mov
and
jl
add
aas
sbb
out
xchg
xor
sub
mov
mov
dec
mov
push
mov
push
fdivrl
jne
lret
push
mov
aam
adc
sbb
jg
mov
aad
ljmp
adc
movlps
xchg
cmp
xor
sbb
ljmp
push
int3
ret
sbb
xor
enter
sub
hlt
jle
nop
test
mov
sbb
and
inc
jecxz
imul
aaa
stos
jnp
ja
inc
inc
sub
cwtl
data16
mov
and
pop
int3
ljmp
sbb
pop
leave
enter
push
imul
cmp
push
ret
sbb
lea
sbb
jge
fwait
and
loope
xor
mov
jl
mov
fnstsw
sub
or
popa
sbb
sub
add
sahf
out
stos
das
stc
lea
jo
xor
bound
hlt
sub
and
call
lahf
enter
sub
or
cld
mov
jae
lret
inc
cs
mov
mov
mov
add
jne
sarl
fcmovnb
lds
pusha
rcl
mov
mov
fistl
mov
scas
cltd
dec
shll
hlt
icebp
out
in
inc
jg
inc
ret
mov
pop
pop
and
mov
or
or
sbb
and
mov
mov
mov
xorb
xchg
sub
cmp
icebp
jns
subl
add
inc
mov
xor
sbb
adcl
inc
sub
or
or
mov
cmp
xlat
and
fistpl
fidivrl
mov
repz
push
sub
jb
pusha
sub
mov
push
dec
popf
es
xor
lcall
negb
pop
imul
sbb
lcall
xchg
sub
shlb
enter
push
and
adc
pop
inc
aaa
ret
fwait
pop
outsb
adc
mov
mov
mov
test
push
add
repnz
out
loopne
pushf
mov
and
pushf
and
and
mov
sahf
mov
mov
jns
cmp
mov
inc
xchg
test
arpl
call
pop
jmp
mov
mov
push
sbb
dec
loop
sbb
das
sbb
ret
mov
fildl
testl
loop
data16
and
jle
mov
or
mov
mov
lcall
in
shll
push
outsl
lret
cwtl
repz
loope
aas
jns
mov
les
or
ret
ljmp
push
mov
and
add
repz
in
mov
and
cld
int3
jbe
and
xor
pop
xchg
and
outsb
outsl
popa
cmpsl
jnp
fidivrs
xor
fcomp
pop
or
mov
ret
fbld
inc
aad
gs
inc
xor
add
xchg
fwait
pop
rorl
mov
scas
fs
out
sbb
jg
lret
sti
test
or
cwtl
xor
cli
cs
repnz
dec
push
mov
sbb
out
test
out
mov
mov
mov
push
cli
mov
push
dec
sahf
xchg
cwtl
sbb
or
imulb
mov
insb
out
xchg
or
mov
jecxz
mov
cwtl
push
int
and
lahf
popa
push
and
xor
push
xchg
inc
xchg
enter
popa
popf
popa
fsub
inc
xchg
aad
and
push
sbb
mov
xor
pushf
push
dec
mov
cltd
xor
mull
fldcw
je
jae
mov
rclb
dec
movsl
fists
lods
mov
sbb
ds
sti
or
cwtl
and
stos
jmp
ljmp
insb
dec
pop
in
dec
jne
mov
es
xor
jb
pop
dec
mov
jno
pop
xchg
mov
out
mov
inc
test
pusha
paddb
or
mov
cld
sbb
adc
in
mov
or
pop
daa
or
sbb
fimuls
jl
fldcw
jl
loopne
push
add
repnz
std
mov
xchg
sbb
jp
dec
add
rcll
or
dec
cmp
les
rcl
iret
dec
movsl
test
xchg
inc
pushf
sub
add
test
movsl
mov
mov
cmpsl
pop
jne
out
lret
jnp
decb
inc
adc
test
movsl
out
mov
xor
mov
movsb
and
inc
or
lcall
jnp
hlt
and
hlt
pop
sbbl
test
inc
jg
mov
push
mov
aas
aam
push
cs
cltd
jbe
adc
sbb
gs
adc
in
lret
mov
int
add
add
xor
in
dec
jo
sbb
pusha
push
daa
jle
in
movl
push
jmp
scas
mov
jg
lods
add
dec
loopne
xlat
es
add
pop
popa
shl
pop
call
mov
and
inc
mov
jne
in
jae
je
and
xchg
adc
jno
or
sbb
push
jns
and
mov
dec
pop
aam
and
lods
push
cs
sbb
ja
fstpl
xchg
shll
or
mov
jecxz
fisubrs
or
arpl
jg
stc
mov
adc
sbb
mov
leave
sub
or
sub
or
es
roll
mov
mov
inc
fsubl
cltd
lods
or
rol
push
xor
mov
scas
or
add
inc
adc
movsl
int
pusha
in
addr16
lds
mov
inc
jmp
aad
test
jne
xor
ss
das
adcb
sbb
rcr
jge
push
push
fs
push
jae
call
arpl
cmp
enter
or
push
mov
jle
lret
aas
push
xchg
cs
jle
and
cmp
filds
xor
pushf
or
repz
cmp
addr16
outsl
rcr
scas
mov
idivl
movsb
ljmp
add
daa
cwtl
xchg
jl
sar
dec
push
roll
xchg
inc
pop
pop
test
push
rorb
jbe
aad
mov
mov
fwait
cmpsb
sub
push
cli
mov
inc
cld
fwait
cmpsb
mov
das
cmpsl
enter
xlat
mov
sub
push
das
xchg
mov
and
xor
aam
in
rcll
out
cltd
jnp
push
shrl
pop
std
cld
cmp
insb
mov
cmp
outsb
adc
sub
rol
lcall
cs
inc
dec
dec
mov
sbb
push
int
push
dec
dec
sub
mov
mov
cld
inc
push
int
and
adcl
dec
shll
js
xchg
push
xchg
and
sbb
sub
fs
mov
call
mov
and
jno
sahf
clc
outsb
fsubrl
cmp
push
mov
push
push
lea
xor
cmp
icebp
out
or
jns
mov
dec
mov
xor
inc
ja
in
lea
mov
jne
test
out
dec
xor
jle
xchg
fwait
inc
hlt
in
stos
call
add
push
xchg
in
jnp
pop
subl
cmpsb
f2xm1
mov
hlt
mov
addr16
int
jno
rolb
push
data16
mov
push
mov
or
pop
jmp
dec
out
popa
sbb
xor
push
mov
and
inc
xor
or
add
cmpsb
in
cmp
jecxz
sub
mov
sub
mov
cld
dec
sbb
es
mov
flds
cmc
pop
xor
mov
lcall
js
jns
jecxz
pop
push
rol
mov
mov
std
and
data16
cmp
and
hlt
call
insl
jae
xlat
xor
push
loopne
pop
sbbb
pop
repz
cmp
xchg
icebp
add
xor
sbb
mov
cmp
or
cmp
stos
dec
jnp
lret
popf
aaa
mov
lods
add
mov
les
inc
xchg
jo
out
pop
cmp
xchg
and
and
dec
rclb
xor
jle
inc
pavgb
fildl
data16
cld
and
notb
je
imul
lock
or
not
add
and
addr16
push
adc
movsb
mov
push
idivb
lods
push
lahf
nop
addb
das
mov
push
daa
mov
inc
jno
mov
mov
cwtl
lods
lret
mov
movsl
adc
jne
jno
or
push
aad
jg
clc
push
lcall
cmc
mov
jecxz
lret
and
ja
ja
mov
and
pusha
cmc
pop
push
es
sahf
cmp
push
aad
or
fistps
test
mov
dec
and
and
mov
pop
pop
gs
int3
sbb
fiaddl
fwait
repz
adc
sub
pop
adc
lret
mov
cmpsl
inc
fcoml
int
call
xchg
fcomp
lret
lds
xchg
or
scas
iret
adc
in
dec
mov
dec
push
adc
adc
xchg
test
lea
pop
xchg
sbb
repz
push
cs
aad
mov
xchg
lcall
cmp
stc
nop
sti
lds
aaa
movsl
fnsave
cltd
mov
inc
fisubl
ror
dec
ret
mov
dec
js
mov
sbb
push
pop
test
andl
xchg
jno
sbbl
add
mov
lock
mov
filds
pop
outsb
subb
shl
daa
xchg
pop
shrl
mov
sub
push
mov
aam
loope
aam
shlb
xrelease
loope
xchg
loopne
lahf
ss
stos
adc
jno
or
outsb
dec
movsl
mov
mov
fbstp
shlb
xor
jbe
lods
shl
jae
rorl
pop
int
sti
mov
xor
insb
ja
movsb
pop
push
mov
roll
mov
scas
pop
or
jae
inc
and
mov
cwtl
jno
mov
sub
jg
and
push
stc
cmp
inc
stc
and
mov
scas
es
repnz
mov
xchg
jae
int3
mov
push
add
xor
inc
icebp
pushf
int
dec
jmp
sub
in
fwait
dec
cld
hlt
mov
cmpsb
shl
adc
sub
mov
mov
fildll
rcrl
out
jge
mov
movsl
iret
mov
dec
mov
inc
cmp
add
rclb
push
pop
gs
dec
into
lahf
mov
jns
jl
mov
sub
add
cld
fbstp
mov
jmp
stc
dec
je
jo
or
pop
inc
mov
push
in
pushf
jmp
add
mulb
mov
sarb
dec
cld
sbb
int3
cmp
fdivs
jnp
mov
imul
lcall
in
mov
inc
pop
xor
loope
lret
movsl
je
pop
into
rolb
xchg
add
addl
pop
cmp
rol
outsb
mov
mov
adcb
or
cmp
cwtl
pop
sub
fisubrs
test
test
cmp
dec
imul
daa
addr16
xor
fmul
pusha
cmp
pusha
ror
xchg
push
fisubl
jne
jle
sti
pop
push
jecxz,pt
mov
jo
in
pop
cmp
mov
pop
fistl
shl
div
pushf
loop
push
mov
xchg
and
ucomiss
daa
xchg
std
push
outsl
add
add
aam
imul
fidivrl
jnp
xchg
loopne
dec
push
xchg
es
or
imul
jbe
lret
pop
jno
or
popf
cld
inc
xorb
jp
rcrl
mov
loop
xor
pop
pop
fsts
jbe
push
jbe
lods
xor
and
cmova
adc
dec
sub
push
push
mov
mov
ljmp
nop
jnp
mov
je
cli
fiadds
shr
dec
gs
mov
int
dec
imul
sbb
daa
or
mov
fucomip
insl
cmc
jae
cmc
or
sarb
sub
cmc
out
sub
test
negb
xor
adc
lret
repz
notb
shr
aam
ret
mov
xor
test
inc
xor
data16
jmp
mov
fisttps
xchg
test
ds
lret
pop
inc
mov
xchg
loopne
inc
pop
in
jns
sar
cmpsb
add
pop
mov
or
dec
push
rcll
push
movsb
movsb
ret
sub
xchg
popf
out
xchg
pop
bound
cmpsl
lret
xchg
mov
inc
test
xchg
lods
pop
arpl
jmp
push
and
xor
add
pusha
sbb
add
sub
std
cmp
cwtl
lcall
adc
iret
mov
pop
dec
gs
subl
inc
xor
push
jle
push
adc
outsb
andl
jno
mov
sbb
push
imul
test
faddl
rcll
mov
imul
int3
push
xchg
sti
sbb
mov
xor
decl
shrl
and
or
les
ss
repnz
dec
dec
cmp
pop
lahf
cmp
dec
sub
pop
mov
adc
jo
or
xor
mov
arpl
pop
push
mov
pop
lods
add
or
mov
mov
jecxz
xor
outsb
sub
adc
fisubrl
sub
inc
loopne
lret
xor
in
dec
jg
pusha
jns
jle
lds
pop
jns
aas
mov
inc
cwtl
jle
inc
inc
mov
dec
inc
xchg
adc
in
repz
nop
es
inc
or
negb
xor
test
inc
daa
loope
sub
in
mov
js
cwtl
dec
push
aas
jnp
jmp
push
xchg
xchg
testl
repz
mov
push
push
pop
jl
ficompl
inc
dec
int
push
xchg
mov
xlat
and
rcrb
addr16
loop
mov
dec
fucomip
movsl
dec
outsl
lock
xchg
add
aaa
cmc
inc
insl
add
push
outsl
jae,pn
push
fmuls
xchg
jbe
push
xchg
pop
pop
and
in
andb
sbb
and
loopne
mov
push
ljmp
mov
daa
xor
mov
repz
out
in
cld
cmp
or
add
cmpsl
outsl
or
aaa
cli
leave
add
into
stos
jp
or
push
xchg
sub
aam
ret
div
int
mov
into
cmp
lds
sub
adc
in
lods
cmc
pop
outsl
test
aas
jnp
and
mov
mov
arpl
lds
lret
adc
xorb
push
fists
out
xor
pop
gs
xor
dec
adc
and
pop
cmp
mov
dec
xchg
and
test
inc
test
cmp
add
xor
in
pop
dec
sub
lcall
xor
cmp
clc
in
out
repnz
mov
jl
icebp
add
fcmovne
leave
mov
loopne
test
cld
dec
gs
jne
jno
cmpsb
les
loopne
das
mov
jne
shrb
cmp
in
pushf
xchg
or
sbb
aam
mov
add
pop
mov
mov
dec
lds
int
das
loope
cs
push
in
xchg
pop
stc
mov
movsb
shrl
mov
mov
scas
adc
inc
xchg
ret
mov
push
adc
push
dec
dec
and
mul
sbb
ja
add
jns
jmp
push
cmp
cmpsl
xchg
imul
mov
out
xchg
insl
lods
pop
dec
out
insb
insb
sub
add
jo
cld
push
dec
and
dec
adc
mov
and
shll
cld
orl
out
mov
xchg
and
mov
pop
mov
jecxz
movsb
mov
rorl
in
xchg
stos
shl
lods
andl
sti
or
imul
into
push
jmp
lret
pop
sbb
insl
and
mov
in
xor
pop
fisttpl
arpl
push
mov
and
and
sbb
lea
pop
sbb
sbb
outsb
jge
pop
cmp
and
jb
rclb
mov
jge
and
out
inc
testb
xchg
or
gs
insl
cmp
das
test
idivl
or
mov
rcl
pop
pop
mov
adc
jne
addr16
subl
js
loope
std
sbb
aam
push
mov
andb
pop
xchg
fidivrs
jp
mov
test
dec
movsl
cmpl
sbb
sbb
arpl
fwait
stc
xor
nop
pop
test
and
push
outsb
sbb
or
adc
in
mov
int3
adc
dec
dec
repnz
ja
aas
scas
pop
mov
scas
arpl
pop
sub
fbstp
cmc
lret
add
test
jo
adc
mov
test
pusha
xchg
insl
incb
pop
int
push
lret
push
repz
das
dec
inc
push
add
pop
sbb
in
gs
jge
sub
sub
dec
jbe
lods
rclb
je
inc
cs
outsl
mov
psllq
push
bound
in
jns
xchg
mov
mov
popa
jp
insl
call
lock
xor
ficoms
paddusb
and
xor
jle
out
fsubl
je
push
inc
orl
dec
adc
pop
push
cmp
push
add
inc
test
pop
les
cs
stos
daa
lret
stos
push
mov
jmp
sbb
dec
aas
mov
test
inc
adc
mov
cltd
sbb
xchg
dec
inc
hlt
loopne
mov
inc
mov
enter
pop
jnp
jnp
dec
mov
loopne
mov
mov
pop
mov
push
pop
leave
xchg
fnsave
lods
or
jp
dec
push
sarl
cmpsl
sbb
cld
xor
xor
mov
dec
es
pushf
lret
daa
adc
mov
mov
inc
loop
insl
popf
aaa
inc
fs
adc
pusha
jnp
add
add
loope
pop
jnp
scas
outsb
add
ret
xchg
jg
inc
in
fiaddl
mov
loopne
fs
fstpt
pop
push
cld
int3
and
sub
dec
push
cmp
jle
push
sbb
sub
aas
nop
int3
xorb
call
pop
xor
sbbb
mov
jns
nop
and
and
cmp
and
xor
sbb
mov
fisttps
movsb
mov
push
and
pusha
int3
xlat
into
aad
ret
jge
mov
fs
sti
adc
pop
pop
pop
mov
xchg
pop
negb
enter
mov
lods
in
loop
sub
sub
cli
push
loope
in
pop
hlt
dec
test
cmp
orb
fs
stc
push
push
and
jmp
dec
fmuls
pushf
shll
lds
setb
inc
sub
cmp
cmp
xchg
xor
cwtl
or
push
dec
dec
push
cs
push
mov
std
scas
push
insb
xchg
pop
dec
sub
call
cmpsb
pop
sub
sbb
or
inc
inc
push
mov
push
das
mov
pushw
test
mov
xor
xchg
pop
push
cmc
pop
push
popl
shlb
xorl
or
lock
sbb
pop
scas
mov
fsubp
into
mov
rorb
cmc
ror
fsts
xor
lea
add
push
push
inc
movsl
pop
addb
js
inc
popa
insb
or
inc
add
sub
push
dec
aas
mov
mov
lods
lcall
adc
or
cmp
dec
lock
out
cmp
aaa
mov
dec
out
jmp
dec
leave
or
or
out
cmp
lahf
xchg
scas
inc
clc
cmp
lock
sbb
mov
or
in
pop
cld
hlt
adc
cmpsl
in
adc
mov
jp,pt
sub
lcall
jmp
inc
movsb
inc
ljmp
mov
cmp
lods
mov
cmp
inc
movsb
push
andl
xor
je
xor
lret
and
jns
std
fadds
xor
xchg
adc
sbb
cmp
xor
mov
sub
push
mov
mov
mov
cli
repz
cmpsl
jns
ds
fisubrl
cmp
mov
cmp
mov
mov
icebp
jge
rcl
decb
mov
sahf
cmp
mov
push
sbb
nop
push
jl
mov
jmp
sbb
outsl
aas
mov
bound
scas
push
jae
dec
mov
cwtl
cmp
stos
lret
jne
cmp
cmp
or
cwtl
ljmp
into
inc
xchg
daa
mov
cmpsl
test
dec
pop
loop
xchg
cmp
xchg
dec
cmp
ljmp
pop
and
aad
andl
xchg
xchg
jmp
or
push
or
ja
mov
sbb
mov
addr16
add
sub
xchg
xlat
orb
call
daa
iret
mov
or
lods
aad
aad
xchg
sbb
pop
add
jmp
arpl
pushf
mov
add
enter
jmp
sbb
addl
jnp
xchg
xchg
lods
sub
mov
shr
pop
adc
ja
stos
in
mov
inc
pop
push
lods
xor
repz
inc
jmp
in
lcall
fldcw
dec
movsl
lods
lods
aam
sbb
ljmp
cmp
ret
cli
rcrl
test
mov
and
inc
fnstenv
test
add
or
mov
icebp
xor
test
inc
lea
sub
and
and
sbb
orl
cmp
push
push
imull
sub
out
sbb
push
push
jl
cmc
jns
clc
mov
fcomps
push
mov
outsl
or
mov
or
loop
sbb
lock
into
mov
xor
or
lcall
inc
sub
sti
dec
push
rolb
das
sub
fisttpll
ret
in
sbb
xchg
das
ret
pop
into
inc
std
loop
jmp
cmp
test
lods
outsb
mov
cli
enter
rorb
dec
subl
inc
sbb
mov
fwait
outsl
aad
mov
fcmovb
roll
ret
into
xchg
out
sub
test
sbb
mov
mov
push
inc
pop
repz
sti
or
testb
and
inc
adc
xor
scas
psubusb
sti
dec
sahf
les
xchg
dec
mov
pop
xchg
push
push
fcoms
xchg
sub
insb
test
or
ja
idiv
icebp
aaa
lods
filds
icebp
fs
test
je
dec
or
icebp
jp
push
mov
dec
sbb
movsb
jb
out
daa
ja
inc
add
sahf
cltd
pop
sub
out
enter
fdivrs
and
ds
add
sbbl
out
and
jo
adc
mov
jmp
dec
push
dec
and
push
std
loope
add
movsl
fimull
out
mov
outsl
fistpll
test
push
jmp
sbb
cmp
mov
and
les
mov
nop
sub
stos
ret
sub
dec
jno
push
inc
push
cltd
fst
movsb
test
test
adc
add
rclb
sub
out
mov
cmp
adc
lret
les
mov
jbe
jmp
repz
out
mov
fdivs
shrb
cmpsl
mov
push
or
sbb
lock
mov
dec
in
test
mov
addr16
inc
ljmp
cmp
outsb
insb
cmpsb
test
push
es
hlt
std
sahf
adc
std
jp
repnz
ja
daa
nop
in
cmp
xchg
hlt
jne
mov
push
sub
and
jo
in
movsl
push
dec
mov
push
out
dec
ds
fs
mov
adc
fisubs
shlb
xor
xchg
or
fidivl
jg
loop
push
xchg
ds
sbb
das
cmp
cmp
ljmp
inc
adc
movsb
fisttpl
es
pop
adc
pop
and
push
rcrb
pop
call
jmp
addr16
aaa
pop
or
mov
jmp
mov
cmp
mov
pop
cmp
loopne
push
in
inc
sar
popf
icebp
pop
mov
inc
test
stc
out
into
dec
mov
test
dec
mov
loope
loopne
sub
cmpsb
addr16
adc
inc
test
xchg
pop
pop
lds
lcall
jg
sub
ret
inc
out
push
into
sarb
dec
adc
aaa
pop
enter
int
adc
adc
int3
pop
in
pop
cli
ret
mov
pop
cmp
dec
into
ljmp
aad
rclb
dec
mov
dec
push
loope
daa
subl
mov
cmpl
ficoml
cli
xorb
xchg
jno
mov
xchg
dec
jns
add
fmull
mov
rcll
loop
adc
inc
sbb
fs
sbb
outsl
push
mov
movsb
mov
pop
inc
outsb
stos
mov
push
push
out
pop
cwtl
jbe
xor
mov
in
xor
and
cmp
cmpsl
ret
lea
in
xchg
inc
stos
inc
mov
sub
jbe
inc
mov
add
ficompl
das
or
xchg
xchg
call
add
dec
mov
cwtd
andl
les
in
inc
jne
pop
in
jbe
mov
cmp
loop
ds
popf
dec
xor
sbb
mov
push
push
mov
ror
fdivs
fcmovu
cs
mov
loop
and
lahf
shlb
dec
rcrb
pop
enter
adc
mov
lea
xlat
iret
imul
mov
addr16
jecxz
into
jg
fwait
outsl
or
stos
mul
loope
hlt
adc
pop
mov
mov
mov
pop
mov
cmp
mov
stos
lods
cmpsl
jnp
or
xchg
xchg
cmp
dec
push
pop
adc
repz
sub
repz
push
leave
scas
jae
stc
inc
loopne
mov
sub
fisubrs
xchg
adc
ret
popa
aaa
mov
imul
inc
cwtl
fcmovnu
out
cmp
aam
ficoms
aaa
inc
mov
and
je
mov
pop
movsl
push
mov
xor
fwait
xlat
insb
andb
nop
xor
add
jnp
mov
outsb
clc
add
xchg
ss
lds
adc
cmc
icebp
das
jns
push
sbb
scas
jne
out
dec
cmp
out
push
push
xchg
cmp
test
cmp
jno
popa
sbb
lds
jl
mov
loope
push
int3
xchg
inc
cmp
sar
aaa
andb
dec
xor
inc
cltd
popa
testb
mov
inc
jecxz
aad
scas
sub
leave
sub
shrl
mov
outsl
out
fcmovnb
add
inc
or
xchg
cmp
nop
stos
cmp
test
leave
arpl
cmp
add
lea
cmp
mov
jle
stos
cmpsb
scas
movsb
in
stos
mov
inc
jecxz
imull
pop
sbb
int3
fistpll
or
mov
fmull
adc
push
int3
ret
das
repnz
jb
add
or
xor
cmp
push
pusha
or
stc
loopne
inc
sub
mov
arpl
incl
or
mov
stos
nop
add
movsl
mov
insb
scas
roll
fiadds
in
stos
mov
sub
pop
dec
ret
in
and
shlb
aad
testb
bound
call
and
dec
sub
push
xchg
shl
push
jb
inc
out
add
push
add
test
mov
subb
add
push
push
jmp
dec
jle
movl
lahf
sahf
mov
je
and
cmpsl
push
daa
xchg
xchg
sub
adc
stos
cmp
je
pop
loop
jle
and
int
insb
jo
mov
cmc
or
and
orb
out
out
jae
inc
adc
sarl
add
jne
addb
adc
sahf
outsl
adc
sti
imul
push
mov
sub
cwtl
lods
push
push
mov
fldcw
dec
lea
cmp
jg
or
pop
lahf
inc
adc
push
idivl
lock
jmp
xchg
cld
aaa
inc
cli
sub
ljmp
mov
aaa
imul
rcll
inc
pusha
cld
enter
fst
aaa
cli
and
adc
mov
dec
lret
adc
shll
leave
ss
dec
in
and
in
arpl
fidivs
pop
enter
cmp
cld
push
jb
sub
fldcw
std
sub
push
push
movsb
push
jno
je
lahf
adc
add
sbb
pusha
jns
push
pop
or
jnp
add
lods
cmp
adc
lahf
sub
in
gs
adc
sub
fwait
mov
addb
clc
pop
out
into
xor
jg
dec
mov
cmp
add
sti
aad
mov
sbb
stos
cmpsb
das
roll
pop
mul
add
orl
out
aad
cmp
out
lret
addr16
push
xchg
dec
and
ds
std
das
mov
lds
fimuls
dec
jo
and
popa
pop
or
sbb
sub
jno
jne
test
jp
xchg
xor
loop
stos
add
adcl
dec
shlb
sar
inc
pushf
add
xor
xchg
mov
push
ja
dec
adc
int
sub
inc
and
enter
mov
push
iret
sbb
pop
test
mov
jb
sub
sub
sub
sbb
push
cmpsl
sbb
adc
dec
enter
js
dec
mov
mov
enter
pop
mov
lret
xor
es
mov
inc
jle
xchg
cmp
pushf
cmp
or
in
lds
fstl
hlt
in
sub
ss
or
xorl
aas
inc
out
fdivrs
inc
stc
cmp
cmp
xchg
cltd
mov
neg
rcl
popa
inc
mov
subl
push
pop
cmp
lock
sbb
jge
shll
dec
adc
mov
dec
sbb
cmp
gs
xchg
popf
fdivrp
xor
scas
scas
sahf
push
cld
push
les
mov
das
adc
mov
pop
hlt
sub
mov
jnp
sbb
aaa
adc
push
inc
negb
xor
daa
jp
pop
es
inc
xor
pop
jno
add
add
sub
jl
cmp
push
insl
mov
push
inc
sub
mov
mov
cli
into
dec
cltd
mov
add
sub
jp
mov
dec
shrl
adc
pop
and
cmp
out
cmp
xchg
or
or
xchg
bound
mov
es
inc
jo
or
push
adc
bound
xlat
jmp
inc
dec
ret
leave
lahf
stos
pop
mov
mov
jne
xchg
sub
daa
daa
or
into
inc
insl
cs
jno
sub
cmp
iret
pop
ss
mov
mov
addl
or
mov
push
push
or
push
inc
pusha
ljmp
ljmp
daa
inc
repnz
inc
xor
popa
pop
push
or
and
sub
push
jmp
or
inc
dec
addr16
xchg
mov
push
in
mov
ja
fisttpl
out
sbb
clc
aaa
push
das
xchg
push
xor
push
fs
mov
push
cmp
sbb
gs
test
xor
and
rcrb
aam
and
xor
aas
lods
insb
stos
nop
add
mov
or
testl
daa
or
mov
xchg
dec
rcll
mov
ss
pop
dec
fdivrl
fsubr
movsl
icebp
mov
imul
cmpsb
xor
in
iret
mov
cmpl
sbb
in
outsl
xor
cli
mov
mov
mov
cmc
xchg
out
fcoms
in
add
dec
mov
cwtl
rclb
dec
sub
inc
rcr
cwtl
in
pop
inc
dec
and
in
and
xchg
mov
mov
insb
nop
fiadds
sub
push
out
jmp
repz
data16
xor
lods
movsb
shrl
pop
sbb
sbb
pop
sbb
add
adc
jmp
mov
test
loop
test
push
imul
inc
ret
push
cs
dec
mov
out
ss
cmpsl
repz
in
mov
mov
movsb
inc
mov
cmp
sub
imul
fadd
xor
out
pop
or
push
jae
jae
imul
pop
lahf
mov
inc
mov
sbb
xor
std
lock
adc
cmpsl
sahf
push
dec
jns
sahf
or
xchg
mov
xor
insl
inc
push
sub
jnp
std
add
dec
orl
push
dec
mov
mov
sbb
inc
sub
mov
adc
adc
cmp
shrl
out
lds
call
inc
insb
js
jecxz
insl
sbb
push
movsb
rcll
test
ret
jmpw
jg
mov
das
dec
dec
jbe
pop
idivl
dec
decb
fldenv
xchg
inc
pop
pop
sub
lea
fmuls
adc
jge
cmp
or
jmp
movsb
mov
cmp
sbb
xchg
jnp
cmp
mov
adc
sti
nop
xchg
shl
mov
cmc
std
sar
add
pop
jne
in
ret
insl
or
or
lods
pop
stos
je
out
aam
pop
fcomps
and
into
jnp
mov
sbb
repz
les
hlt
arpl
push
mov
int
sub
mov
rcl
rcrl
rolb
jmp
cli
sub
or
int
std
inc
xchg
sbbl
fs
psrlw
cwtl
push
mov
outsb
outsl
cmp
aam
pop
push
mov
cmp
inc
shr
test
ret
js
enter
popf
sbbl
je
ljmp
jmp
push
inc
push
xchg
cs
ret
mov
mov
mov
mov
sub
xor
sub
xchg
pop
or
into
mov
push
rcrb
sti
lock
cli
cwtl
nop
enter
bound
adc
leave
addr16
mov
cmp
aad
arpl
repnz
inc
push
push
lcall
out
cmp
add
xor
fwait
je
push
jp
in
cmp
xchg
fwait
dec
push
dec
mov
cs
add
loopne
lock
gs
imul
rorl
scas
jmp
add
pop
xchg
mov
in
in
cmc
sbbb
xchg
inc
or
pop
dec
out
cmp
iret
push
testb
sub
in
addr16
push
or
stc
lea
and
popa
sbb
ficompl
lahf
shrl
mov
popa
sahf
cmp
cltd
xor
lret
xor
add
inc
aas
loopne
add
cmp
pop
cmp
xlat
shlb
idivb
adc
mov
mov
cmp
jbe
fdivrs
test
push
xor
inc
cmc
mov
outsl
bound
testl
adc
out
negl
cmpsb
and
nop
dec
stc
xor
in
pop
add
mov
lock
sbbb
dec
mov
xor
xor
iret
dec
mov
mov
inc
insb
xchg
xor
repnz
mov
ret
movsb
inc
pop
mov
lods
sahf
xor
jp
pop
mov
mov
push
sti
bound
rorb
cltd
popf
ja
or
nop
ljmp
aas
loopne
xchg
push
jl
pop
std
push
out
movsb
je
enter
or
cltd
xor
insb
leave
cs
and
jae
jae
sub
cmp
sub
je
mov
inc
or
and
rcll
aaa
jno
or
mov
ret
xor
cmp
scas
bound
pusha
insl
shlb
sqrtps
fsubrl
xchg
out
sub
ficomps
dec
cmp
pop
mov
sbbb
or
push
imul
out
std
and
hlt
sti
mov
and
sbb
movsl
push
loope
call
in
pop
mov
xlat
sub
inc
mov
jge
cmp
adc
dec
mov
insl
mov
stc
mov
or
imul
push
push
and
mov
push
cltd
js
add
mov
ss
daa
repz
cmp
sbb
jb
jb
in
mov
js
mov
ret
jne
mov
clc
mov
test
adc
idivl
dec
outsl
push
orb
insl
addl
cmc
fwait
inc
shll
in
das
jp
out
bound
jbe
int
xchg
mov
aas
ljmp
pop
cmp
xor
dec
cltd
popf
shll
dec
pop
xchg
mov
popa
int3
dec
pop
mov
loope
dec
push
cmpl
push
jle
cmpsl
ja
cmp
mov
push
sahf
lock
pop
lret
mov
xorl
xchg
fdivrl
insb
aad
mov
and
push
fwait
clc
push
push
mov
pop
test
aaa
pop
dec
cmpsb
mov
mov
out
repnz
shll
scas
jne
pushf
fstl
sub
cld
mov
js
lds
lret
out
push
clc
inc
fwait
mov
xor
lret
xor
aam
mov
popa
adc
mov
mov
pop
sbb
cwtl
insl
sbb
daa
andl
ret
lods
sti
loop
inc
andl
mov
jb
jnp
push
rorl
jmp
and
out
leave
mov
leave
pop
mov
sarb
jns
test
cltd
pop
cmpsb
dec
test
or
sub
adc
or
jnp
pop
or
subb
rolb
inc
adc
loope
popa
mov
xchg
lods
subl
mov
movsb
jae
xor
adc
ret
push
inc
mov
sbb
rcrl
imul
mull
cmp
jns
or
push
stos
inc
cmp
stc
subb
shl
rcll
sub
mov
shlb
mov
daa
cmp
or
sbb
inc
xchg
pop
sub
xor
pushf
loop
js
jns
ret
push
pushf
pop
jbe
aaa
add
xor
lds
lock
scas
xchg
aam
insl
test
icebp
test
repz
adc
sub
mov
xchg
scas
adc
push
hlt
add
lret
repz
cltd
pop
call
inc
add
js
xor
sub
jae
test
sahf
ja
lods
pusha
test
subl
les
jne
xchg
lods
xchg
rolb
std
pop
adc
lret
insb
dec
mov
push
not
adc
add
loop
inc
pop
pop
jl
xlat
or
fwait
dec
jbe
gs
adc
leave
push
mov
in
std
mov
bound
aas
das
clc
mov
arpl
cwtl
xor
lea
popa
lds
xchg
rcll
mov
psubsw
popa
cltd
cmpsl
insl
mov
popa
or
repnz
aam
sub
jae
mov
leave
inc
xchg
pop
cmpsl
outsb
jne
and
push
push
sub
inc
int
xor
add
cmp
push
fimull
iret
insl
cli
cmp
or
daa
rcrl
and
inc
push
xchg
cmpb
add
add
sub
arpl
pop
mov
and
pop
fisttpll
inc
push
adc
xchg
and
imul
mov
repnz
fdivr
add
rcr
test
jecxz
lock
fldt
pop
rcrb
inc
lods
inc
cld
add
cld
lds
sub
and
scas
xor
aas
or
bound
xchg
shrl
sub
lds
nop
lahf
jne
fs
fpatan
sub
jl
inc
dec
hlt
push
inc
pop
ja
add
out
mov
ja
inc
xor
shr
jp
aas
repnz
es
jge
cli
and
dec
pop
mov
xchg
clc
icebp
movsl
cmpsb
out
xchg
sub
and
fs
pop
jae
imul
adc
push
pusha
pop
ja
xor
jecxz
lcall
ret
mov
xor
cmp
mov
in
cltd
into
sar
xor
mov
cwtl
inc
xor
xor
fs
clc
or
frstor
filds
adc
clc
lock
out
movsb
push
sarb
test
xor
add
pop
pop
jg
push
jmp
pop
aas
popf
fchs
or
mov
sub
repnz
js
repnz
mov
mov
jp
xlat
es
aad
dec
stos
cmp
imul
dec
lock
pop
jne
mov
mov
or
adc
fadds
out
jmp
aam
cmp
push
or
xor
dec
xchg
or
aam
test
and
push
or
mov
sbb
out
pushf
or
cmc
arpl
jl
lret
pusha
mov
cmp
aad
out
inc
leave
repnz
pop
push
bound
add
push
cli
add
fimull
scas
or
mov
adc
lock
loop
jno
jno
pop
cmp
notl
mov
xor
sbb
shrl
movsb
pop
mov
outsl
mov
out
mov
adc
in
js
pop
pushl
scas
push
sbb
lock
jge
js
pop
adc
inc
mov
pop
lcall
jae
popf
sbb
ja
clc
or
mov
or
or
push
out
mov
xor
fnstcw
adc
xor
push
xor
mov
xchg
movsb
lret
fwait
xor
add
mov
test
cmpsb
mov
test
cmpsl
pop
inc
push
mov
or
mov
lret
xchg
or
pop
iret
push
lahf
in
jo
cs
dec
out
push
sub
loopne
cmp
and
mov
jnp
mov
iret
fnsave
push
lret
xchg
into
or
out
iret
lret
adcb
jle
arpl
push
and
rclb
add
mov
adc
outsl
cmp
inc
or
ja
aas
or
pop
jb
insl
in
pushl
addl
push
inc
nop
mov
cmp
lods
leave
mov
cmp
cltd
lds
xchg
hlt
popf
mov
cwtl
jo
jo
or
sti
shrl
or
rorb
or
lock
mov
pop
sbb
mov
aas
xor
fst
ret
dec
test
xchg
xchg
stc
add
fwait
out
gs
pop
xor
getsec
dec
in
das
out
cmp
adc
bound
out
fstl
pop
fadds
ss
pop
adc
jne
add
jmp
mov
jae
in
std
mov
fisubrl
rclb
pop
and
sub
jae
mov
mov
add
push
ret
out
loopne
les
rcrb
adcb
pushf
sbb
bound
fidivrl
inc
dec
lcall
sbb
cmp
call
daa
or
test
in
out
mov
xchg
add
and
iret
push
sub
pusha
shlb
jecxz
sub
call
lcall
mov
movsb
push
out
popf
popa
lret
push
push
out
ljmp
jno
sbb
mov
shll
mov
or
push
inc
fimull
add
xor
dec
mov
push
xchg
lds
jl
pop
movsl
cmp
jg
lods
push
or
sbb
pop
movsl
add
stos
mov
shr
pop
mov
jae
mov
in
push
xor
and
ror
das
dec
pusha
int3
add
aas
add
mov
jb
fisttps
dec
mov
jmp
jnp
movb
sarl
cmc
adc
pop
andl
mov
adc
inc
loop
fimull
push
push
mov
mov
xchg
jne
orl
lea
mov
stos
jp
mov
or
ror
xchg
and
roll
lock
sbb
lock
popa
test
mov
pop
jle
add
xchg
rcrl
out
sub
imul
adc
push
add
mov
pop
mov
lods
push
mov
add
adc
dec
out
adc
inc
ds
stos
mov
jmp
sbb
hlt
btc
int
stos
pop
or
or
add
icebp
sub
aam
pusha
cmp
and
jns
loop
sub
xchg
sbb
icebp
cmp
repz
into
test
adc
aas
pop
adc
into
jle
scas
sbb
aam
scas
jmp
mov
das
jecxz
leave
or
dec
cmp
jmp
or
jns
xor
fsubr
and
pop
or
xor
mov
push
xchg
lret
mov
push
andl
popf
daa
addr16
sub
and
mov
jne
mov
lahf
pop
mov
jp
cmp
jl
sti
movsl
adcl
in
jo
das
jnp
sbb
lds
test
dec
das
mov
aad
dec
test
mov
aas
stc
sub
scas
inc
andl
jne
mov
pop
ret
repz
aam
ss
jg
sub
fcoms
push
mov
les
jo
or
fucomip
sub
hlt
shl
js
out
scas
ja
dec
adc
xor
or
insb
pop
push
gs
push
or
jp
ds
mov
xchg
adc
scas
adc
jmp
fwait
adc
aaa
xor
inc
jle
sub
xchg
dec
push
cmpb
jmp
mov
pop
lea
fistps
cs
sub
rorl
in
pop
imul
in
xchg
bound
xor
in
or
je
jae
inc
sbb
aas
hlt
pushw
mov
add
mov
pop
ds
cmp
pop
cmp
and
pop
inc
xchg
xor
aam
xchg
dec
arpl
in
inc
jge
push
es
cwtl
add
pop
scas
xor
in
enter
aam
jle
lds
cmp
dec
and
aam
mov
and
fs
es
pop
adc
dec
or
cmp
xadd
les
test
cli
bound
xchg
cmp
pop
xchg
jne
mov
fnstcw
ret
ret
repz
pop
sbb
cmp
jbe
int
push
push
ss
mov
test
mov
enter
lea
stc
js
fs
and
sbb
repz
aaa
sbb
mov
addr16
stos
cli
ficoml
out
das
ret
push
movsl
adc
push
inc
fistpll
mov
sbb
and
insb
xor
idiv
call
fidivrl
push
cli
test
jnp
add
push
lds
out
jno
loop
cld
and
ljmp
cmp
sub
jg
jge
test
fldt
scas
adc
jbe
mov
mov
mov
push
scas
cmp
cwtl
es
fwait
dec
lods
or
cmp
fwait
sbb
cmp
add
jecxz
xor
sbb
or
aad
jecxz
cmp
incb
push
or
sub
subb
shll
andb
lods
mov
popf
jg
insb
fcoms
xchg
jp
xchg
cs
cmp
sar
jecxz
push
push
mov
add
and
movsl
cmc
jmp
sub
mov
das
lret
mov
jl
roll
cs
in
js
sbb
aad
ja
test
xchg
aas
pop
les
cmp
cmc
mov
fsubs
stc
inc
orl
pop
push
mov
pop
push
push
shrl
xchg
xchg
pop
jbe
mov
mov
lds
mov
dec
adc
loope
push
pop
cld
das
ss
ja
pop
jecxz
popa
fistl
jbe
xchg
out
push
popa
addr16
loop
shlb
lahf
test
leave
sahf
sub
imul
inc
push
cmc
sbb
jl
cmp
pop
jmp
in
call
xor
push
shlb
test
pop
adc
push
dec
icebp
jo
mov
sbb
outsb
in
mul
loope,pt
mov
and
or
loopne
mov
xor
fcmove
bound
andl
cmova
insl
loop
fcmovbe
push
aad
int3
das
adc
mov
in
mov
mov
add
lds
cmpsl
or
popa
lea
sub
sub
cmpsl
mov
lret
in
sub
in
inc
sbb
xchg
sbb
out
test
fisttpl
dec
leave
andb
xor
jnp
call
dec
mov
out
mov
ds
pop
and
adc
int3
xchg
mov
je
cwtl
aas
jmp
test
pop
jle
aam
add
add
mov
ljmp
fcoml
ffree
test
dec
aas
mov
enter
aad
pop
loope
mov
push
stos
and
xor
aam
sbb
sti
sbbb
mov
push
mov
pusha
mov
outsl
push
mov
cli
ss
jbe
enter
aas
pop
cmpl
ds
icebp
js
add
sbb
frstor
sarw
xorb
ljmp
cltd
xchg
mov
dec
xor
and
xchg
ds
mov
jge
dec
push
dec
sarb
pop
jnp
cmp
adc
cmp
leave
movsl
clc
and
iret
fiaddl
js
and
xchg
cmp
andb
fwait
orb
test
imul
cmp
lret
xor
lock
or
lea
push
sbb
mov
ljmp
sbb
jmp
insb
xchg
negl
bound
out
cmp
nop
jnp
ds
pop
aam
popa
adc
push
push
sub
push
call
rorb
mov
mov
inc
jo
sbb
push
aam
cmc
sbbl
jecxz
jmp
clc
out
testb
aam
rolb
std
mov
fadds
test
sub
push
stc
push
dec
mov
lds
movb
fstpt
ret
and
sbb
ror
mov
popf
push
push
out
in
push
mov
lahf
dec
pop
sti
shrl
or
rcll
movsb
clc
ja
push
adc
loop
js
fwait
lret
ja
movsl
jecxz
incb
pop
mov
imul
push
out
pop
insl
xchg
and
adc
mov
ljmp
fiadds
mov
adc
into
popa
adc
cwtl
jle
adc
aad
mov
cmp
std
add
cmpsb
lods
adc
cld
ljmp
sbb
and
popf
into
js
xchg
pop
pusha
mov
nop
inc
lcall
out
sti
pop
or
sbb
xchg
ds
mov
mov
lret
mov
ss
cmc
in
cmpsb
pushf
enter
mov
cmp
mov
rorb
mov
cs
inc
leave
sub
lock
and
jns
push
stos
inc
js
push
loopne
cmp
popa
sti
idivb
bound
sbb
int
push
adc
popf
add
cs
shr
in
mov
mov
dec
lret
cld
sbbb
lcall
push
sbb
aad
in
mov
repnz
mov
cs
pop
outsb
xlat
je
cmpsl
je
pop
xor
in
pop
cmp
loopne
jge
imul
leave
jae
mov
add
mov
and
jns
pop
fists
jae
pop
mov
push
out
imul
sbb
push
fcmovne
cld
cmp
fisttpll
repnz
push
mov
inc
and
sbb
adc
sti
out
iret
sub
mov
ret
fsts
or
or
mov
xor
dec
dec
out
sti
mov
repnz
test
add
in
enter
out
mov
xor
push
es
pushf
sub
or
gs
test
scas
inc
xchg
into
jecxz
adc
ret
mov
fadds
cli
jle
stos
pushf
jo
jae
adc
arpl
jge
mov
lret
movsl
inc
clc
into
xor
xchg
aaa
mov
adcl
cmp
push
xlat
testb
mov
inc
mov
sub
gs
pop
rclb
xor
inc
stos
mov
arpl
xor
adc
imul
insb
sbb
loopne
movsl
sti
andb
fld
sarl
loope
lock
pop
pop
cmp
jecxz
cmpsl
aad
mov
inc
fldcw
ds
into
mov
inc
xchg
lret
popa
sub
in
xchg
pop
loopne
or
js
addr16
jle
and
add
shr
rorb
sub
sub
sarl
mov
out
cmp
dec
mov
fsubl
xor
add
scas
cwtl
add
cmp
lds
test
xchg
shl
mov
mov
jecxz
pop
jae
scas
push
pop
pop
xchg
xchg
adc
aam
bound
test
adc
xlat
jne
stos
outsl
pop
add
sahf
jnp
mull
push
jne
adc
and
xor
sub
mov
and
jp
fcmovne
push
push
jb
test
outsl
jne
pop
cmpsl
pushf
add
shrb
jns
fldcw
pop
xor
leave
lret
xor
xchg
add
ljmp
sahf
mov
outsb
jmp
insl
xchg
arpl
dec
jl
mov
fisubrl
fldcw
aam
pop
dec
push
push
xchg
inc
mov
out
xor
repz
fwait
inc
jg
call
mov
popf
cmp
cwtl
pop
or
out
push
dec
aaa
mov
movntq
lcall
push
xor
mov
mov
and
test
fisubs
sahf
push
sbb
xchg
imul
add
fwait
sti
test
aam
cmpsl
popf
xchg
push
aam
jl
aam
or
pop
cmp
jo
inc
adc
jbe
je
inc
push
mov
sub
pusha
jmp
pop
add
in
adcl
cld
jecxz
push
adc
imul
pop
sbb
rorl
sub
adc
cs
out
add
in
test
scas
addl
push
ds
shll
out
xor
push
ret
push
fsubrl
jmp
lods
loope
outsb
sti
pop
pop
mov
enter
sbb
sbb
and
in
pop
fbld
mov
icebp
xlat
insl
push
shl
adc
or
inc
frstor
popa
dec
inc
fisubrs
cwtl
ss
jle
xchg
sub
inc
push
or
jo
mov
sub
dec
cmp
sbb
out
xchg
mov
bound
loope
mov
ffreep
jno
push
mov
xor
sbb
jne,pn
loope
sbb
in
or
loope
lods
xchg
in
rolb
hlt
imul
test
data16
pop
shll
test
int
int
xchg
mov
lea
jge
fwait
mov
ret
rdpmc
sub
xchg
adc
mov
shrb
mov
mov
inc
xchg
fildll
data16
adc
pop
fsin
jmp
adcb
das
insl
insl
add
subl
inc
cmp
xchg
outsl
imul
test
mov
fistpl
in
pop
inc
mov
sbb
jl
stos
jg
sbb
stos
fbld
inc
sbb
rol
mov
mov
fwait
mov
cli
lahf
mov
push
mov
ret
lret
push
jecxz
ljmp
leave
cmp
sub
pushf
inc
jbe
in
cmp
enter
popf
addr16
test
aam
mov
clc
insl
xchg
push
repz
sbb
mov
mov
push
adc
cmc
dec
repz
cmp
or
mov
js
jg
dec
imull
cs
mov
push
ss
mov
dec
xor
nop
adc
pop
cs
xchg
inc
lods
lods
in
adc
mov
mov
stc
jns
adc
cmp
dec
ja
outsb
add
outsl
dec
sbb
push
or
cmp
cwtl
or
int
add
aad
pop
sub
mov
into
clc
testl
loop
icebp
outsb
mov
and
repz
orl
sub
hlt
mov
scas
cmp
lret
in
shr
int
cmp
daa
push
add
adc
outsl
sbb
dec
sub
push
pop
and
cmc
sahf
test
aam
sub
scas
adcb
in
and
inc
xchg
loop
sarb
jo
ret
das
push
ja
mov
push
sti
es
shlb
lods
shrl
inc
adc
pop
sub
icebp
and
icebp
in
enter
subb
lret
cmpsb
loope
jecxz,pn
pop
enter
jmp
and
pop
inc
or
es
mov
ja
or
push
cwtl
push
push
jne
inc
sub
lods
dec
pshufw
add
sub
mov
dec
or
or
and
or
mov
xor
inc
pop
pusha
test
clc
jbe
lret
sub
repz
inc
xchg
cmp
pusha
data16
cld
dec
add
fnstcw
adc
sub
push
cmpsb
cmp
pop
mov
lret
jns
push
cmp
in
cmp
push
and
fs
mov
js
idivb
sub
mov
adc
dec
mov
sub
mul
adc
shrl
push
in
pop
mov
dec
xchg
mov
sbb
xchg
arpl
mov
push
sbb
xchg
push
pop
sub
and
popf
sbb
insl
pushf
arpl
aaa
aas
ljmp
jmp
xor
push
cs
hlt
and
mov
addr16
stos
xor
jne
icebp
test
arpl
adc
xchg
lret
mov
sub
dec
orb
mov
xor
rorb
push
cld
jbe
hlt
push
lcall
jns
add
scas
push
popf
aad
jle
push
inc
xor
ds
xor
lock
jns
je
dec
sbb
idiv
jl
inc
pop
mov
test
rcll
cmove
cmpsl
repz
inc
jg
lret
pop
movsl
hlt
push
sahf
sub
dec
push
adc
lds
fnsave
push
push
lret
dec
test
dec
cmp
pop
cmp
jge
or
inc
xor
fcomip
es
lock
shll
in
adc
or
int3
adc
mov
jae
in
pop
xchg
movsb
daa
popa
negl
and
xchg
push
sbb
inc
jmp
sarl
nop
sbb
bound
lretw
lret
xlat
mov
xchg
mov
add
les
cmp
or
cli
daa
mov
int3
into
xor
dec
cltd
in
inc
sahf
lcall
roll
insb
pusha
cltd
push
pop
mov
ss
and
xchg
jl
outsb
fiaddl
dec
mov
ja
inc
xchg
and
shrl
scas
jp,pt
imull
add
or
sarb
out
das
xor
cmp
or
cmp
ficoms
inc
add
add
out
jle
shll
and
xor
fwait
and
and
xchg
mov
dec
loop
ficoms
pop
cmp
jno
ljmp
rorb
mov
js
pop
ret
into
adc
add
jmp
mov
xchg
subl
imull
and
lods
push
dec
jl
cmp
adcl
sbb
sbb
outsb
mov
jo
test
cld
shll
std
add
mov
and
fistpll
js
ret
jge
into
mov
mov
outsb
mov
test
sub
cli
jns
ret
addb
jo
stc
cmp
cs
movsl
gs
pushf
sti
dec
shl
xchg
leave
shlb
call
aad
cmp
sti
arpl
cmpsb
mov
iret
mov
imulb
stos
inc
xor
inc
cmp
popa
add
xor
jg
out
loop
in
push
jno
enter
adc
and
call
imul
lods
enter
jl
xor
icebp
and
xor
and
push
and
mov
shrb
imul
fwait
sub
in
inc
call
out
cld
add
xor
sub
push
test
dec
movsl
sbb
xchg
add
add
jp
xchg
push
ds
in
jecxz
mov
cmp
mov
cld
xlat
push
bswap
inc
sub
fsts
iret
cli
cmc
jns
or
dec
mov
movsb
add
adc
movsl
dec
lret
jp
pop
outsl
movsl
outsb
xlat
cmp
jp
dec
xor
aam
movsb
push
hlt
hlt
rcrb
stc
andb
push
pop
pop
mov
imul
xlat
mov
fdivrs
stc
push
iret
cld
popa
es
imul
sub
inc
lcall
ret
xchg
dec
pusha
cmp
pop
push
test
out
jecxz
push
xchg
andb
pop
jb
fmull
popf
lret
inc
daa
pop
inc
ss
stc
dec
sbb
xchg
mov
xchg
cmp
mov
lock
in
pop
sub
xchg
xchg
xor
pop
inc
inc
shl
loopne
inc
int
sub
sbb
jl
andb
in
cltd
das
push
outsb
jmp
or
daa
cmp
sbb
xchg
push
mov
into
enter
or
in
xor
pushf
jno
mov
stos
sbb
ss
cli
rcl
sbb
mov
out
fadd
jae
xlat
mov
js
ja
cmp
cmp
mov
cwtl
mov
jmp
add
adc
mov
pushf
pusha
sbb
jl
out
cmc
test
dec
ror
cmp
leave
xchg
and
xor
cmpsb
das
sbb
lds
repnz
pop
adc
mov
fs
fwait
ret
cmp
stc
lcall
ret
and
sar
loopne
inc
jp
cmp
fcmovnu
sbb
fldt
ja
loopne
outsl
dec
daa
rcrl
outsb
stc
sti
fdivrl
xor
in
icebp
icebp
das
jge
stos
arpl
mov
cwtl
dec
andl
dec
adc
into
out
inc
mov
popf
pop
add
dec
fs
mov
mov
jp
adc
mov
xchg
jle
out
lods
jae
cld
popa
gs
test
xchg
dec
inc
push
pop
repz
mov
jb
std
dec
std
mov
xchg
testl
dec
xor
mov
jnp
push
scas
movb
push
inc
aam
testb
call
xchg
jb
dec
add
or
cmp
or
aam
xchg
jg
or
cld
stc
movb
xor
sbb
ret
xchg
push
mov
sub
pop
mov
divb
inc
push
mov
sub
popa
shr
mov
adc
and
das
and
xor
jmp
gs
mov
insl
mov
or
dec
repnz
dec
repnz
bound
sbb
cmp
sub
xchg
push
jae
leave
cmc
sub
mov
mov
xlat
test
mov
mov
and
mov
mov
sbb
sarb
repnz
in
push
fildl
pop
idivl
mov
mov
dec
mov
lods
call
inc
xchg
sub
ret
pop
pop
ret
adc
ss
sub
dec
repnz
or
mov
push
pusha
arpl
cmp
pop
mov
int
icebp
add
pop
mov
addl
pop
pop
stos
sti
je
fsts
mov
loop
out
push
or
in
test
pusha
arpl
js
ret
jne
das
icebp
xchg
xor
inc
in
jno
imul
movsb
cmp
js
inc
pop
push
mov
addr16
inc
sub
pusha
dec
mov
in
cld
xchg
repnz
data16
adc
inc
jecxz
cs
push
into
ljmp
ja
jns
mov
lea
xchg
das
push
mov
daa
in
mov
sbb
inc
and
mov
movsb
out
dec
out
pop
clc
cltd
sub
mov
lods
fwait
adc
dec
jle
jle
and
sub
sbb
imul
push
cmp
dec
inc
ds
out
cmp
test
pop
dec
ficoml
inc
xor
inc
xchg
insl
inc
scas
add
setno
sbb
pop
ret
lock
pop
out
mov
mov
ror
xor
in
and
mov
push
movsl
xchg
xor
add
dec
pop
mov
adc
push
inc
mov
add
clc
adcb
shll
aad
push
mov
sub
mov
and
orb
xchg
cld
adc
and
int3
les
sarl
and
mov
mov
int3
in
push
pop
sub
addr16
imul
inc
es
cmp
mov
pop
xlat
sub
add
mov
pop
lret
adc
jg
cmp
xchg
data16
mov
xor
movsl
ljmp
and
popf
sub
jbe
xchg
loope
out
cld
mov
fldenv
lea
out
loope
outsl
push
inc
mov
adc
imul
jmp
sti
inc
lods
lret
jmp
jb
push
mov
jns
xor
xchg
mov
negb
dec
mov
adc
pop
xchg
push
cs
mov
pop
lea
pop
std
lcall
pop
or
popf
push
mov
push
ds
push
mov
inc
push
rcr
bound
out
popa
mov
sub
cmp
add
lcall
ljmp
jg
fists
jae
testb
mov
jmp
adc
push
push
hlt
push
mov
sbb
push
popa
sub
shr
icebp
hlt
popa
shl
outsl
repz
push
call
pop
iret
nop
cmpsl
xchg
mov
mov
mov
pop
js
je
add
xchg
add
pop
adc
pop
mov
push
pop
shll
adcl
jbe
dec
jmp
sub
or
xchg
push
pusha
pop
shlb
ret
xlat
add
ja
mov
mov
push
adcb
jp
push
and
dec
sub
pcmpeqd
out
test
sbb
mov
int3
leave
mov
loopne
and
sarb
inc
dec
push
mov
push
and
movsb
and
stc
or
mov
hlt
mov
mov
test
sub
fs
mov
loop
int
popf
inc
push
or
cs
adc
lahf
and
mov
push
dec
mov
adc
add
xor
ja
mov
jmp
pop
int
push
dec
adc
jns
mov
ret
push
cmp
popf
pusha
sub
adc
push
dec
mov
gs
sarb
xor
pop
push
pusha
icebp
les
mov
sub
mov
scas
psubsb
pop
cld
and
rorl
incb
push
subl
sub
mov
and
lea
shll
cmp
jl
push
insb
push
pop
fwait
pop
dec
add
cs
xchg
sbb
sahf
pusha
or
xlat
mov
outsl
pop
mov
shrb
repz
mov
lea
xchg
pop
fadd
or
lea
mov
mov
inc
scas
mov
push
pop
sub
rcll
inc
insl
dec
lock
push
mov
daa
pop
push
mov
popa
jge
jecxz
sbb
sahf
mov
sub
mov
jecxz
sub
out
nop
test
sub
je
inc
and
fcmovnbe
cmp
or
mov
xchg
push
xor
mov
rcrb
into
cmpsl
adc
sahf
pop
ret
adc
or
jmp
in
cmp
insb
push
mov
add
xchg
fbstp
jge
push
dec
mov
sbb
push
decl
mov
cltd
ret
and
fldenv
xor
cmp
nop
clc
add
sbb
fadds
push
or
mov
pop
pop
call
mov
pop
js
push
fldl
sarl
mov
sub
lahf
fldcw
fildl
cli
cmp
jg
aaa
cltd
clc
std
sub
xchg
iret
hlt
inc
out
pop
inc
pop
iret
popa
or
add
fdivrp
faddp
jg
mov
inc
fldl
mov
dec
iret
mov
scas
prefetchw
test
scas
or
out
out
sub
into
sysexit
std
rcll
cmp
outsb
cli
adc
xchg
push
outsl
jo
inc
mov
roll
rcr
xor
push
gs
lds
jg
mov
bound
jmp
adc
add
inc
ficoms
inc
push
insl
and
cwtl
pop
xor
mov
roll
outsb
dec
fists
push
in
sub
popa
sbb
subl
sub
mov
insb
imul
mov
or
mov
dec
cmp
fs
pop
mov
leave
push
sbb
in
adcb
mov
fisubs
sarl
xor
out
jo
jo
push
inc
popf
or
sbb
das
notb
xchg
pop
add
cmp
pop
dec
out
andb
adc
pop
xchg
lret
cmp
adc
adc
adc
pop
adc
stc
xchg
mov
fisttpl
lds
test
add
lds
pop
inc
xor
pop
add
daa
imul
dec
aam
cmpsb
pop
and
das
jbe
outsl
dec
pop
xchg
lods
ret
mov
fcoml
sbb
movsb
ret
mov
imul
mov
mov
sbb
es
and
roll
dec
pushf
rclb
push
sbb
dec
mov
pushf
movl
test
xor
or
scas
push
pop
pop
cmp
push
je
scas
movsb
out
xor
je
out
dec
and
xor
sub
sub
nop
cwtl
xchg
add
pop
leave
xchg
xor
pop
in
cmc
filds
cmp
mov
mov
sbb
cs
int
cmc
in
cmpl
insl
mov
in
lods
scas
in
and
and
adc
sub
adc
ret
mov
cmp
ja
test
mov
jo
adc
sbb
push
push
pop
lret
dec
xchg
sbb
sub
fistpl
xor
lahf
icebp
mov
xchg
mov
ja
mov
and
sub
inc
ret
xchg
test
sub
push
sahf
bound
xor
add
mov
sti
pop
xor
mov
aaa
add
xchg
and
lret
mov
or
stc
mov
outsl
jae
aam
inc
jae
pop
xor
jnp
rcr
and
add
mov
xor
std
and
jnp
or
adc
test
dec
add
xchg
mov
lcall
pop
and
jo
xchg
enter
xlat
fstl
mov
add
clc
inc
pusha
sti
jo
and
insb
cli
movsb
push
adc
daa
add
test
mov
jge
clc
ret
das
inc
dec
addl
push
jns
adc
cld
cmp
mov
out
adc
rcll
outsl
adc
test
test
dec
loopne
gs
icebp
scas
lret
inc
fwait
xor
aaa
fdivrl
nop
shll
loope
adc
dec
mov
dec
ja
sbb
or
inc
mov
sbb
jnp
jg
out
push
out
pop
mov
lret
data16
fists
jo
fcoms
es
jns
sub
dec
nop
shl
cmp
push
sbb
sub
loop
mov
pop
mov
push
mov
push
test
add
jae
inc
push
mul
pop
repz
pusha
aad
aam
incl
pusha
lret
flds
es
test
lret
dec
pop
test
mov
push
outsl
pushf
jb
mov
add
test
pop
sbb
adc
sbb
scas
es
sbbl
jo
adc
cs
sub
sub
lret
and
aam
add
pop
fmul
icebp
xlat
daa
mov
fildl
mov
ljmp
mov
sbb
cmc
fsub
jl
shlb
push
shrl
loope
dec
push
test
pop
dec
test
dec
mov
pop
sub
dec
sub
scas
inc
pop
mov
jne
mov
fcmovnbe
int
enter
pop
pop
cmc
inc
push
test
add
insl
in
daa
xchg
and
jmp
mov
xchg
adc
or
pop
and
fnsave
cmp
and
repnz
mov
notb
or
pop
xor
sar
gs
ret
lods
cltd
xor
dec
aaa
je
push
cltd
hlt
sarl
push
lret
imul
decl
mov
jae
frstor
std
sbb
loope
mov
mov
sbb
mov
pop
mov
adc
push
shl
sub
outsl
jae
mov
es
bnd
dec
aas
adc
imul
add
cmp
jae
jp
pop
int3
inc
push
jb
add
clc
xchg
mov
sbb
lret
sbbb
bsf
addl
pop
fadds
call
dec
iret
lods
rdmsr
xchg
test
xchg
fs
into
mov
sub
test
rcrb
aas
clc
adc
imul
cmp
bound
mov
js
pushf
mov
push
push
rcrb
lods
xchg
in
in
nop
jl
push
mov
add
hlt
pop
fldl
xor
adc
adc
lahf
sarl
subl
out
sbb
jg
jb
mov
adc
dec
lods
sbb
push
pushf
les
mov
inc
ret
shlb
stos
pop
scas
je
jg
shr
test
lahf
mov
iret
xchg
pop
xor
mov
sbb
mov
jnp
aas
xchg
movsl
call
xor
in
mov
in
sub
jnp
sub
xchg
add
mov
xchg
jg
fldt
outsb
push
xchg
mov
jnp
add
xchg
dec
mov
cmp
jae
push
fcomp
mov
daa
xchg
aaa
insl
dec
rcr
adc
stc
cltd
dec
push
out
jne
cltd
inc
fadd
gs
push
jb
into
xchg
mov
stc
jb
ljmp
cmp
ja
mov
cmpsl
ja
rep
xorb
sbb
idiv
xor
insl
pop
inc
loopne
pop
adc
inc
sbb
rorl
mov
xchg
test
or
push
icebp
test
sbb
mov
jmp
dec
loope
loopne
push
in
mov
inc
push
push
into
pop
shll
inc
jb
ucomiss
mov
xchg
xchg
lahf
jbe
xchg
int3
dec
cltd
adc
xchg
and
adc
mov
fwait
sbb
mov
gs
or
cmp
roll
out
inc
sbb
aad
adcl
fstps
xchg
lea
iret
jno
leave
je
push
fwait
xchg
mov
andb
xchg
out
jnp
mov
stos
icebp
lea
dec
and
loope
jbe
loop
inc
mov
cmp
mov
out
hlt
into
mov
xchg
inc
inc
pop
push
scas
inc
jno
out
mov
enter
cltd
ret
mov
testl
or
mov
mov
and
ja
repnz
test
pop
pop
lods
jp
addb
mov
mov
dec
lea
jg
or
notb
xchg
and
mov
in
cmp
loopne
daa
pop
dec
mov
stos
push
push
je
test
xchg
push
inc
xor
push
lahf
testb
aad
jl
ffreep
arpl
fucom
fcoml
xor
inc
pcmpeqd
js
xor
jecxz
scas
xor
movsb
adc
push
daa
or
mov
push
cmp
mov
cld
fsts
push
mov
mov
mov
frstor
into
inc
outsb
leave
adc
xchg
push
xor
or
fucomi
sbb
lcall
jp
sbb
mov
mov
hlt
mov
and
js
dec
arpl
insb
mov
dec
xchg
jp
inc
rol
push
sub
sub
jg
sub
cmp
lret
ficoms
sbb
dec
mov
pop
pop
pop
push
xor
sbb
jb
xchg
cmc
push
pop
sub
int3
pop
aaa
xor
sahf
pop
outsb
inc
pushf
sub
xlat
pop
mov
das
dec
and
adc
add
and
xchg
jns
mov
cmp
mov
adc
inc
sarl
insl
fcompl
pop
mov
jnp
sbb
adc
out
jae
inc
ljmp
outsl
cmp
pop
outsl
and
and
sbb
adc
or
faddl
inc
xchg
cmpl
mov
clc
lret
mov
cld
aam
ljmp
add
sub
jb
pop
mov
push
jmp
or
mov
loope
jmp
mov
mov
fwait
push
sub
lahf
pop
popf
or
and
pop
aam
jb
test
loopne
cli
stc
inc
add
leave
adc
rol
adc
subb
icebp
jb
stc
icebp
inc
sbb
sub
out
adc
push
loope
xchg
fists
or
xchg
adcl
imul
out
fwait
ret
in
jo
iret
in
cwtl
inc
sub
adc
mov
sbb
aam
jno
dec
dec
daa
sbb
or
xor
dec
aad
in
in
jns
mov
daa
adc
xchg
jp
sbb
insl
js
shrb
into
shrl
add
movsl
jmp
cmp
aad
sub
push
jo
sub
mov
aas
pop
adc
jmp
dec
arpl
add
cltd
outsb
lock
pop
gs
and
jp
and
jmp
lods
test
mov
mov
or
adc
or
addr16
push
xchg
cld
scas
fcmovne
imul
mov
outsb
es
addl
inc
outsb
dec
bound
mov
cmp
mov
cmp
inc
push
jmp
jbe
arpl
xchg
iret
xor
push
pop
test
ret
cld
popa
mov
or
lcall
rorl
xchg
fsubp
test
pop
adc
fucompp
enter
icebp
dec
in
out
push
pusha
out
negb
stc
jp
lods
bound
int
mov
js
cmp
and
and
or
movsb
mov
jb
mov
xchg
andb
icebp
ljmp
push
adc
outsl
int3
icebp
iret
pop
add
imul
inc
mov
repz
or
sahf
cmp
sbb
push
mov
adc
mov
adc
arpl
into
pushf
movsl
sub
push
test
jns
jne
mov
push
mov
inc
call
and
adc
or
gs
rorb
addr16
add
mov
pop
sub
popa
add
flds
mov
sbb
repz
pop
aaa
push
xor
pop
push
cmp
xor
mov
hlt
lcall
cmp
sub
or
sub
mov
pop
jo
mov
lds
push
push
fdivrl
mov
fidivs
repnz
arpl
popa
jmp
lock
idivl
sub
loope
cmp
repz
mov
jns
dec
lock
dec
cmpb
aad
int3
or
fidivrl
inc
pop
sbb
mov
adc
bound
stos
or
xchg
jns
jmp
addl
inc
adc
ja
pop
mov
pop
push
pop
imul
out
pop
testb
mov
in
aam
lds
stos
gs
xchg
cmc
jge
outsb
test
mov
sbb
jl
es
sti
mov
rorb
pop
add
sub
insb
data16
clc
mov
sub
dec
dec
mov
pop
fs
pop
sub
mov
adcl
xchg
and
lods
xchg
xor
push
jbe
inc
ret
repz
lods
movzwl
sbb
adc
or
gs
cmp
xchg
xor
scas
push
test
int3
push
jo
xor
aam
dec
xor
pop
rcrb
std
cmpsb
call
xor
rcrl
push
cmpl
mov
dec
into
sub
mov
jge
push
clc
xchg
push
and
nop
imul
and
push
mov
sahf
jg
pop
daa
movsl
in
ljmp
sbb
jp
adc
shl
test
xchg
daa
pop
lods
sub
rorl
pop
fwait
repz
mov
fldt
push
inc
jge
mov
push
sub
stc
mov
stc
dec
adc
or
mov
cmp
add
mov
insb
dec
sbb
pushf
jle
iret
pushf
sbb
and
cltd
xchg
in
dec
ss
mov
or
stc
std
mov
test
jg
sahf
ret
fsubrl
lret
xor
fwait
out
pop
push
stos
fs
insb
dec
lret
or
xchg
movb
ss
pop
dec
icebp
jns
aas
dec
xchg
mov
rorb
inc
ja
push
cli
jle
mov
add
in
stos
adc
xor
test
mov
lods
adc
mov
into
ljmp
bound
jg
out
in
xor
and
jae
jp
sbb
push
out
mov
imul
or
shll
cli
sbb
push
sub
add
and
mov
sbb
xor
mov
push
orl
shll
repz
stc
sbb
add
out
lea
cmp
int3
lods
xor
test
inc
icebp
dec
pop
imul
jecxz
push
pushf
add
aad
pop
lods
into
decb
add
mov
inc
arpl
push
mov
out
and
ret
jno
dec
sarb
inc
cli
ret
out
jnp
pusha
cmc
in
std
repnz
lahf
stos
push
cltd
dec
cmp
dec
dec
xchg
out
js
cmp
rclb
pop
cmp
pop
sub
lea
mov
push
stos
and
test
shl
outsb
inc
dec
mov
rcr
nop
nop
es
popa
repnz
js
jbe
lea
imul
rorb
je
cmpsl
add
push
cmpsb
push
xchg
jle
xchg
or
lods
mov
scas
jo
pushf
shrb
cmp
jae
std
add
in
fcom
in
push
pop
xchg
fildl
lock
xor
mov
pop
xchg
popf
in
sbbb
sub
push
pop
lahf
pop
mov
add
loop
ja
outsb
cwtl
xor
and
jmp
and
fildl
out
mov
adc
rol
enter
push
and
pusha
ror
lcall
fidivl
int
pop
and
sub
ret
mov
outsl
fwait
in
testb
push
inc
sub
das
and
mov
stos
and
cltd
mov
jmp
mov
xor
jnp
cmp
inc
pop
call
leave
mov
sub
and
cltd
aaa
or
push
xor
lods
inc
push
xchg
xchg
pop
mov
add
push
fadds
push
aaa
dec
mov
push
xchg
push
shrb
dec
cld
lcall
call
xchg
scas
mov
push
test
addr16
mov
data16
pop
ficoml
and
jl
in
es
nop
mov
jle
mov
sbb
fistps
mov
sub
adc
lahf
filds
xlat
pop
mov
dec
mov
cmpsl
sub
mov
add
and
sti
call
aad
and
jmp
test
mov
xchg
xor
adc
adc
add
mov
jp
cmp
xor
mov
add
lock
sbb
outsb
pop
xchg
mov
add
jno
rclb
mov
stc
pop
sub
stos
inc
jge
mov
cld
mov
aaa
mov
mov
jno
push
jle
mov
cmpsb
stos
jmp
cmp
pop
lds
pop
cmc
addr16
inc
mov
lahf
sbb
addr16
outsb
adc
mov
aam
andl
lcall
stos
mov
call
pop
sub
popf
imul
sahf
mov
pop
ficoms
lahf
sbb
xor
push
mov
and
repnz
jmp
mov
inc
xchg
mov
mov
jl
popa
xchg
inc
push
outsl
fisttps
pusha
data16
sbb
cmp
add
roll
shll
add
xchg
pop
lret
mov
or
or
lret
imul
ds
cmp
push
orl
jmp
rcl
sbb
dec
pop
mov
mov
ss
jae
mov
fwait
rolb
xor
sub
clc
jmp
sarl
mov
popa
movsl
fistpll
push
call
insb
xchg
jno
sarb
jae
sbb
cli
stc
mov
cltd
jb
jb
dec
jle
mov
sbb
mov
xchg
push
test
inc
ficomps
push
adc
dec
dec
mov
push
lock
mov
out
dec
add
xchg
scas
imul
rol
aaa
push
ss
adc
xor
je
push
add
cmp
pop
hlt
pop
sbb
push
jge
cli
pop
ret
push
push
stos
sbbl
repz
xlat
clc
push
or
xor
out
scas
stos
sub
loopne
mov
in
imul
mov
pop
xor
sub
sub
xchg
int3
fwait
pop
push
int
xlat
pop
int3
inc
cmpsb
ss
and
out
mov
xlat
cwtl
cltd
xor
xor
and
aaa
push
fwait
in
pop
pop
mov
hlt
daa
sbb
inc
xchg
and
cmp
push
aad
xlat
call
ss
mov
call
mov
popf
jecxz
pop
arpl
and
enter
sbb
sarb
pop
mov
sbb
mov
cmc
mov
push
divb
mov
add
fs
mov
push
adc
sub
in
add
adc
aas
sti
cltd
mov
jg
dec
dec
sbb
fsubrs
es
int3
inc
pushf
or
cmpsl
inc
enter
mov
sub
mov
pop
mov
addb
lret
cli
lds
ljmp
das
adc
or
mov
or
push
jecxz
shl
in
xchg
ret
inc
xchg
iret
cmp
or
jne
cmpsb
shlb
pop
sbb
inc
cmpsl
enter
sbb
cmp
rcrb
cli
mov
fstl
out
fsubrl
dec
mov
xor
sub
mov
jl
push
mov
aam
out
and
jmp
xor
mov
push
adc
ljmp
jmp
adc
jmp
mov
xchg
xor
push
imul
into
mov
jbe
aaa
or
xchg
lds
xchg
es
cmp
xchg
pusha
ret
xor
cltd
push
inc
cs
iret
loope
dec
jne
sti
pushf
inc
jg
add
sbb
rorl
std
jnp
sub
call
aaa
shlb
stc
outsb
jns
in
jmp
mov
jmp
cmpsb
je
test
cmp
mov
inc
sub
in
xchg
mov
lods
inc
jl
int3
jp
inc
cld
jmp
pusha
xchg
cmpsl
fwait
sub
or
mov
sub
out
aas
mov
add
push
sbb
jne
adc
push
movb
jecxz
add
rorb
cwtl
les
ss
lcall
push
sub
shlb
and
pusha
sub
sti
adc
jno
push
and
mov
push
push
cmp
mov
dec
and
in
dec
xor
cwtl
int
cwtl
mov
and
stos
fs
jo
fisubrl
pop
jb
sub
clc
push
jae
gs
push
outsb
jo
sbb
mulb
icebp
fnstcw
rorl
cmp
mov
jnp
add
jne
cmpl
or
add
out
outsb
or
sub
dec
std
int
aas
pop
lcall
sub
push
rolb
and
sbb
insb
cmp
mov
inc
sub
mov
mov
mov
pop
jno
cld
mov
out
out
fsubrs
jp
gs
loopne
iret
sub
jbe
in
add
push
repnz
shrb
push
inc
mov
and
mov
pop
stc
pop
xchg
repnz
mov
cs
lret
pop
in
jb
mov
cmc
adc
mov
test
dec
sbb
mov
inc
and
sbb
das
cli
inc
les
inc
stc
xor
and
adc
flds
cmp
sbb
sbb
or
gs
bound
push
lea
push
test
jmp
and
push
pop
add
dec
lock
test
adc
or
stos
jl
mov
mov
pop
push
fiadds
movsb
sahf
jge
aam
push
mov
pop
insl
jbe
add
outsl
jg
test
dec
fisubrl
enter
pusha
shlb
insb
cmc
out
dec
ret
push
ss
movsb
in
scas
addr16
sub
mov
in
mov
lods
fidivrs
sarl
cmp
bound
add
inc
js
jp
js
roll
pop
mov
pop
dec
mov
mov
cs
cltd
dec
lahf
inc
out
ficoml
sarl
adc
mov
rorl
sbb
pop
lods
test
js
dec
rol
dec
jae
stos
in
adc
das
inc
mov
inc
mov
ret
cli
out
mov
push
jl
fsubrs
inc
in
adc
fcmovne
ret
incb
mov
aam
and
mov
or
xor
jle
outsl
shll
cs
iret
push
push
mov
jb
rclb
jp
pop
jne
psubq
stc
cld
xchg
outsb
mov
cmp
sbb
adc
jo
pop
rclb
and
in
in
push
jle
push
add
sarb
pop
std
mov
scas
clc
insb
loop
test
and
jl
mov
dec
cmp
cmp
fnstsw
lods
lret
je
loopne
or
jmp
loope
mov
dec
adc
test
fnstcw
or
leave
call
or
dec
fs
cmp
loop
cwtl
test
and
sub
notb
mov
pop
mov
repz
jb
inc
shrb
cmpsb
cli
outsb
pop
xor
add
scas
inc
rol
push
imul
sbb
enter
loope
cwtl
fisttpll
test
inc
jo
cmp
cwtl
nop
push
outsb
into
fisttpll
cs
xor
push
pop
cli
xor
pop
adc
jg
mov
lods
xlat
and
cmp
and
movsl
fidivl
xlat
in
add
mov
sahf
mov
lock
mov
adc
and
test
iret
shrl
sar
push
mov
mov
mov
loop
testb
pop
scas
push
mov
shr
dec
f2xm1
dec
jne
andb
add
cmp
jmp
push
call
mov
cmc
cmp
cmc
push
mov
out
or
xchg
out
mov
jo
push
jb
xchg
imul
mov
into
pop
rol
shl
inc
pop
mov
pop
sbb
dec
mov
or
jae
sub
inc
shlb
cmp
imul
push
in
xor
sbbl
enter
xchg
push
push
sbb
hlt
inc
inc
jle,pt
loope
inc
adc
shl
insl
testl
shrb
sbb
push
push
push
mov
int
mov
fs
mov
aaa
fs
sub
mov
sub
cltd
pop
adc
mov
add
inc
out
rcrl
or
jae
outsb
xchg
mov
pop
repz
inc
jo
stos
and
and
pushf
xchg
xchg
incb
cmpps
out
shll
add
in
sub
and
adc
lcall
test
mov
or
cli
push
shrd
loop
jmp
jge
mov
ss
dec
popa
pop
arpl
add
inc
add
sbb
mov
aad
movsb
and
lcall
scas
jmp
lcall
imul
xchg
lods
mov
xor
rclb
movlps
sbbb
ret
incl
in
pop
pop
das
pusha
lds
insb
aad
cmp
jbe
jb
stos
cmp
mov
jbe
out
addr16
add
sbb
loope
mov
dec
and
jb
xchg
out
or
xchg
pop
dec
xchg
xchg
int3
pop
xor
mov
sub
push
mov
aam
add
xlat
popa
std
sar
push
mov
lret
xor
mov
jmp
in
pop
push
test
xchg
sub
xchg
jne
sarb
inc
enter
pop
aam
ret
in
inc
push
daa
inc
mov
mov
pop
shrl
lret
cmpsl
subl
mov
mov
push
fwait
add
xchg
imul
mov
pop
sbb
icebp
xchg
cltd
idivl
in
lods
arpl
mov
iret
xor
inc
and
mov
xor
lahf
cbtw
in
and
sar
mov
sub
lea
lcall
aaa
push
mov
in
sub
mov
out
sbb
mov
ljmp
insl
je
shl
outsl
sbb
out
out
repnz
movsb
xchg
mov
pop
lods
lods
imul
ljmp
fidivs
rolb
lret
ds
dec
movsb
mov
pusha
and
or
sbb
mov
xchg
or
jne
and
test
fwait
cmp
dec
and
pop
mov
and
and
enter
gs
add
sbb
xchg
jl
jg
mov
sbb
xchg
pop
jae
imul
subl
scas
add
add
push
outsl
insb
call
outsb
cmp
ljmp
adc
mov
add
cli
cli
stc
jmp
sub
xchg
push
int3
mov
jo
subl
jns
cmpsl
jl
inc
or
adc
xchg
rclb
and
or
ja
hlt
xor
clc
fimull
vcvttss2si
movsb
jle
nop
sarl
outsl
fmull
or
add
fs
sbb
int3
sub
nop
add
dec
mov
cmpsb
ljmp
xchg
lock
mov
pop
outsl
or
faddl
lds
test
test
scas
int3
bound
stos
sub
sbb
and
ds
fdivs
jmp
xor
xlat
push
divl
test
loope
mov
js
jb
xor
xor
pushf
push
cmpsl
enter
test
gs
sahf
jno
inc
lahf
lcall
movsl
xor
mov
push
or
mov
icebp
dec
cmp
loopne
add
and
add
fisttpll
fistps
sahf
rcr
or
inc
jbe
lods
sub
shll
test
stos
lret
jge
outsb
outsl
cld
popa
int3
cmp
int
push
je
repnz
popl
mov
jne
sbb
cmp
enter
adc
repnz
mov
pushl
and
orl
xchg
dec
and
sub
cmc
out
xor
and
test
and
xchg
mov
cmp
in
push
xlat
ss
adc
adc
test
push
dec
data16
push
ficoms
sub
stos
test
mov
xor
adc
inc
mov
fnstcw
loopne
cld
fsubs
mov
rol
adc
popf
shll
imulb
jle
inc
jp
dec
add
and
push
push
cs
in
xlat
sub
sub
mov
inc
inc
inc
pop
pop
pop
repz
lahf
popa
popa
or
stc
jno
mov
pop
add
add
xchg
inc
xchg
add
sub
mov
imul
je
mov
pop
sbb
mov
dec
adc
das
or
adc
in
xlat
mov
ja
pushf
loope
clc
mov
add
mov
xchg
fdivrs
or
je
mov
and
jge
adc
push
outsb
dec
mov
fnstenv
fwait
sarb
or
dec
in
xchg
cltd
xchg
adc
js
sbb
jge
stos
lahf
movsl
push
loop
xchg
sub
mov
lock
pop
cmp
rcr
sub
in
fistpll
ja
leave
xchg
sub
jnp
pushf
ja
cld
inc
push
or
cmp
push
outsb
mov
jmp
xchg
push
inc
aad
lahf
pop
or
out
pushf
sub
jae
xchg
or
mov
jns
lret
mov
pop
pop
repnz
mov
add
test
push
hlt
rorl
inc
xor
dec
es
loopne
add
aaa
loopne
or
inc
aam
shll
cwtl
mov
inc
ja
pop
add
jb
pop
js
rcll
cmp
xchg
cli
out
push
mov
mov
dec
or
mov
add
mov
xchg
loope
cmp
repz
xchg
push
mov
repz
pop
xor
ja
rorb
xchg
ss
testb
addr16
push
cli
js
mov
adc
inc
iret
inc
push
and
imul
pop
in
fisubrl
mov
pop
add
xlat
push
ss
loope
push
xor
icebp
sub
mov
enter
rolb
jmp
sbb
es
adc
ss
jmp
sbb
or
inc
dec
das
cmp
mov
dec
sbb
cmp
insb
test
cmpsb
in
ret
loop
and
push
js
mov
rol
enter
jne
mov
cmpl
pop
sub
pop
std
inc
movsb
mov
adc
leave
mov
pop
mov
jg
repnz
pop
or
loope
int3
pop
xchg
in
loop
test
lret
sub
hlt
pop
adc
mov
addl
inc
data16
fbld
add
aas
mov
or
aaa
jnp
stc
arpl
sbb
cmp
adc
bts
dec
pop
inc
in
fldl
testl
js
mov
cmpsb
adc
mov
cld
dec
int
cmp
int
adc
cltd
mov
cmp
insl
loopne
jns
add
insb
sbb
out
and
insl
call
pusha
testl
repz
ss
imul
push
jp,pn
push
push
movsl
mov
push
mov
cmp
cmp
mov
mov
cs
push
mov
rcll
sub
adc
jb
jge
add
inc
fld
jo
jne
sub
roll
in
loopne
add
imul
fidivl
adc
dec
push
lret
adc
test
add
or
or
sbb
xor
jle
xchg
out
icebp
and
xchg
fsubl
lret
cmp
sarb
inc
aas
sbbl
lcall
dec
sbb
ficoms
jmp
mov
daa
inc
jb
sub
push
int
inc
fistps
mov
ds
fisttps
dec
or
in
loope
sub
xchg
push
arpl
push
xor
cmp
dec
xchg
jne
nop
test
popa
sbb
inc
push
ficompl
imul
mov
icebp
call
pop
cmpsl
test
cmp
movsb
xorb
xchg
dec
les
and
rorb
rcrb
cmp
xor
leave
arpl
mov
fiadds
mov
pop
mov
jl
mov
aaa
and
mov
mov
push
ficoml
fbld
outsb
lret
jge
fwait
dec
sub
cs
mov
mov
lret
sub
jmp
add
push
sti
cmp
mov
and
in
mov
enter
sub
inc
pop
movsl
jmp
int3
cmp
adc
jno
ja
pop
movl
dec
daa
xor
xor
leave
shll
mov
adc
push
fdivrs
test
sub
sbb
adc
fistl
ret
jnp
mov
mov
pop
mov
mov
mov
pop
push
fsts
mov
fistpl
mov
dec
xchg
scas
push
into
xchg
xchg
push
jmp
add
push
sti
pop
pop
dec
iret
gs
xchg
xlat
and
pop
push
inc
cmpl
adc
sti
dec
bnd
je
les
or
xchg
cmp
imul
add
ja
leave
and
ss
mov
cwtl
pop
cmp
bnd
and
pop
add
push
jnp
movsb
xchg
ljmp
and
add
mov
sub
aas
test
loope
into
movsl
cmp
out
sbb
push
and
xor
out
mov
aam
addr16
fdivrl
leave
rol
rclb
gs
lcall
push
cmp
in
xlat
mov
imul
cld
and
and
iret
testb
fdivr
loop
cmp
test
cmp
mov
bound
fdivrp
je
dec
cs
es
jge
pop
movsb
arpl
test
xor
xchg
push
cmc
adc
inc
xor
xchg
fisttpl
leave
stos
cmpb
mov
jl
fs
enter
int
mov
pop
leave
sub
lcall
test
je
stc
mov
push
xchg
lret
andb
xchg
insl
mov
stos
out
aam
dec
fmull
scas
nop
jae
subb
jle
pop
lock
stc
pop
mov
movsl
push
mov
push
xlat
inc
push
mov
imul
int
pusha
and
pop
pop
lea
jge
imul
mov
or
into
movsl
add
jle
xor
inc
adc
pop
adc
insb
or
mulb
cmp
cmpl
and
xor
or
adcl
push
mov
inc
int3
cmp
push
lret
gs
call
je
popf
add
add
xor
stc
sti
out
jg
stc
aad
cli
inc
scas
retw
jecxz
into
mov
dec
into
loope
and
sti
shl
xorb
dec
fistpl
jae
dec
cmp
outsb
es
sti
les
mov
adc
inc
add
xor
enter
cs
scas
mov
jb
cltd
xchg
pop
fwait
popa
push
pop
das
or
and
xor
dec
movsl
jg
jmp
and
xor
clc
mov
jno
decl
ficompl
movsb
inc
adc
sbb
dec
addr16
xchg
push
movsb
not
jnp
mov
mov
pop
cs
and
lahf
roll
daa
jne
fmuls
test
mov
je
stc
shl
push
call
xor
mov
fwait
sahf
cmpl
xchg
dec
out
mov
es
gs
push
pop
add
js
movl
fsubrp
sub
enter
dec
xchg
push
push
jp
inc
icebp
jae
test
dec
roll
jns
xchg
rcpps
test
jecxz
adc
ret
adc
xor
inc
xor
in
in
sahf
mov
dec
mov
stos
sti
shl
mov
xor
cs
shll
pushf
xor
lret
jbe
fdiv
push
std
mov
jo
cmp
leave
ret
mov
and
std
sub
lods
pop
sub
jne
xor
mov
cmp
dec
mov
pop
cmpl
inc
inc
out
lods
lods
xchg
mov
andl
pushf
mov
cmp
in
sar
jl
push
jbe
repnz
mov
cmp
mov
cwtl
and
out
lods
jae
jmp
inc
adc
inc
call
movsl
mov
incb
andl
lds
sub
rcll
push
dec
rol
lahf
mov
sub
mov
repz
push
jmp
push
xor
pop
test
fwait
add
dec
and
mov
negl
inc
ficompl
push
stos
movsl
push
inc
xchg
clc
lret
mov
jecxz
je
pop
cmp
fbstp
bswap
or
push
lods
cmp
sbb
inc
push
sahf
mov
gs
clc
add
ljmp
push
fmulp
add
cmp
cmc
iret
adc
cs
mov
xchg
test
sub
and
out
cli
or
adc
mov
cmc
jne
sbb
mov
test
xor
dec
test
lods
mov
fwait
hlt
aam
js
add
inc
out
or
testb
cmp
mov
xchg
js
shll
mov
mov
shl
and
push
mov
imul
adc
sub
or
je
stos
mov
cmp
cwtl
aad
xchg
cltd
xor
adc
pop
popa
sbb
subb
std
gs
imul
cmp
scas
mov
or
jecxz
adc
mov
aaa
mov
adc
stc
adc
add
adc
rclb
das
dec
test
sub
psrad
nop
or
daa
sub
loop
add
jbe
subb
adc
jb
mov
ret
jmp
or
pop
dec
outsl
cld
push
sbb
lods
je
jbe
cmp
pop
test
mov
fwait
popf
dec
repnz
scas
popa
jmp
xor
or
push
mov
xchg
push
fs
and
notl
aam
les
out
sub
jb
push
inc
jbe
inc
add
fs
sbb
jno
je
arpl
out
sbbl
in
xchg
push
into
jecxz
push
shlb
cltd
mov
jno
jg
mov
cmp
sbb
mov
inc
inc
and
cltd
push
imul
rolb
ljmp
mov
mov
sub
dec
fs
lods
add
movsb
dec
xor
dec
mov
mov
movsl
dec
rclb
mov
gs
repnz
movsl
mov
push
adc
xchg
sub
mov
nop
and
rcl
mov
jo
stc
jbe
into
fwait
push
xor
or
pusha
mov
ja
xor
pushf
add
stos
adc
rclb
push
and
pop
sbb
dec
arpl
add
ljmp
fcompl
scas
or
dec
cwtl
lods
mov
rcrl
int
leave
mov
not
push
sub
mov
cmp
repnz
push
mulb
pop
clc
lret
mov
push
mov
cmp
inc
test
outsl
push
dec
xchg
add
rcrl
jmp
dec
inc
test
sahf
mov
adc
dec
hlt
lods
push
aas
orb
push
mov
outsb
jne
pavgb
enter
adc
stos
pop
pop
loop
add
pop
aad
inc
ret
imul
xchg
sub
icebp
call
arpl
jae
pusha
xchg
xor
test
outsb
notl
inc
idivl
mov
sbb
jns
arpl
loopne
arpl
jmp
test
add
lret
push
fbstp
out
dec
testb
jmp
sub
mov
jno
adc
cli
adc
xor
inc
lea
je
ds
pop
inc
push
lods
loopne
push
and
add
mov
add
js
xor
mov
test
rcl
mov
add
js
dec
jg
stos
jnp
in
push
jg
loope
in
filds
hlt
jg
sbb
xor
jmp
adcl
dec
fldcw
push
lret
cmpsb
dec
icebp
roll
push
sar
xchg
sbb
out
insl
xchg
push
mov
cwtl
clc
leave
out
xorl
rclb
call
pop
mov
movsb
sbb
inc
cmp
jns
mov
jle
cmp
sub
es
pop
adc
mov
cmp
sub
aad
and
inc
push
call
popa
sti
dec
dec
das
push
push
ja
jmp
jmp
pop
push
ret
data16
sbb
sarl
loope
addr16
outsl
mov
dec
or
mull
daa
cmpsb
xor
jns
sub
imul
loopne
ss
std
sub
lret
sub
or
das
aad
xchg
pop
and
cltd
lds
xor
xchg
ja
xor
push
lds
outsb
mov
cmp
ret
sbb
js
loope
push
ss
mov
and
cmp
arpl
cmp
lret
xor
test
adc
xor
test
cmpsb
cltd
mov
or
inc
jge
lret
out
jmp
nop
aas
cmpsl
or
popa
mov
push
mov
and
stos
mov
or
jnp
jecxz
aad
movb
cmc
lcall
notb
mov
push
movsb
and
pop
icebp
adc
lock
cmp
and
xchg
ds
sbb
pop
push
sub
lcall
ret
out
or
xchg
sbb
repnz
js
into
jle
daa
push
inc
outsl
cltd
iret
cwtl
scas
jb
xor
scas
pop
shlb
xchg
fnstcw
ss
mov
outsb
dec
mov
popf
in
mov
dec
fwait
jnp
dec
xor
rdpmc
mov
and
fsubrs
add
fs
sub
sar
daa
int3
or
les
sbb
xor
mov
add
jg
xchg
push
jge
mov
aas
inc
sub
movsb
add
imul
sub
mov
daa
push
sbb
es
or
xchg
pushf
add
push
cld
xor
je
pushf
scas
shll
je
gs
lar
lahf
mov
jnp
mov
fsub
bound
testl
add
pop
cmp
nop
ficomps
ret
inc
and
sub
popf
ss
jle
cmp
jns
push
ds
lcall
addr16
mov
xchg
cs
jnp
add
int
mov
xor
dec
std
push
mov
rol
add
loopne
icebp
dec
ss
pop
repnz
push
sarl
rorl
insb
xor
push
cmp
lret
mov
inc
xor
dec
clc
pop
pop
or
push
loope
out
popf
mov
cmp
cmpsb
cmpsl
shl
inc
call
adc
xchg
sbb
popf
mov
movsl
fstpl
ljmp
stos
data16
scas
clc
cmp
test
adc
mov
xor
pop
cltd
shrl
cs
insb
mov
and
stc
in
sub
jne
flds
jno
or
xor
dec
mov
fwait
xor
dec
cmpsb
shr
mov
ds
ret
adc
pop
movsb
sub
shll
repz
push
and
jns
mov
popf
std
push
shrb
cltd
cmpsb
xor
stc
or
jbe
popfw
pop
fs
push
jmp
mov
add
xor
dec
and
add
push
dec
mov
xor
inc
inc
aas
arpl
pop
dec
push
mov
xchg
mov
cmpsb
sbb
sbb
fildl
push
xchg
dec
mov
cmp
adc
loope
jecxz
cli
es
and
jmp
lea
push
gs
or
xchg
push
push
dec
imul
push
xor
xor
mov
mov
jb
xchg
dec
jne
jle
adc
inc
bound
fimull
adc
andl
dec
mov
push
jmp
fs
inc
adc
jp
lods
or
arpl
fcmovb
lods
sub
lahf
leave
jae
rorb
fistpll
lret
or
xchg
cli
rol
aaa
mov
pop
idivb
pop
add
adc
pop
inc
addl
add
sbb
loopne,pn
push
clc
loope
or
fs
xor
cmc
inc
and
push
sub
mov
test
clc
jle
les
mov
aad
jne
loope
in
and
out
push
aad
jmp
pop
push
push
sub
pusha
cltd
nop
mov
orb
test
jmp
cmp
shlb
pop
jno
jne
data16
pop
and
ja
push
testl
pop
jns
lea
inc
xchg
ja
inc
iret
cwtl
arpl
imul
dec
dec
mov
mov
lods
adc
xchg
pop
mov
inc
in
add
lcall
add
lret
pop
outsl
and
mov
scas
gs
pop
cmp
xor
pop
movsb
fimull
ror
jne
pop
or
adc
insb
adc
ret
mov
shlb
or
mov
lods
mov
test
or
ja
mov
shll
std
sbb
fcom
cli
inc
adc
inc
test
fs
pop
sarb
mov
rorl
lds
xchg
pop
ss
and
sub
cwtl
enter
lahf
xor
mulb
mov
jge
sbb
and
addr16
adc
mov
push
mov
jns
xchg
imulb
sti
pop
insb
in
jbe
push
add
lret
repz
loop
fs
inc
mov
dec
mov
lret
popf
shl
add
pop
ss
sbb
pusha
dec
addr16
loopne
popf
lea
pop
jb
dec
pop
xchg
cld
fwait
jae
xchg
scas
mov
imul
out
mov
loopne
loope
fists
out
inc
mov
ljmp
pop
and
push
fists
pop
sub
mov
ret
mov
ficoms
int3
sub
lods
add
test
test
in
mov
mov
and
mov
mov
mov
push
imul
sahf
pop
inc
pop
ljmp
inc
les
add
das
mov
mov
repnz
jnp
into
iret
fs
data16
loope
and
cmp
std
mov
das
pop
mov
test
or
add
fwait
sub
xchg
mov
xor
adc
aas
inc
mov
lods
push
je
pop
add
cli
sarl
loopne
stc
jbe
or
out
rcrb
loopne
in
sbb
arpl
inc
push
xchg
punpckhbw
mov
inc
repz
sbb
mov
pop
cmp
repnz
fs
je
sbb
add
inc
sbb
pop
iret
cmpsl
mov
xor
xchg
or
testl
pop
xchg
add
sarb
adc
or
push
fbstp
cmc
in
xchg
sub
ds
sub
movsl
mov
and
sbb
stc
xor
lock
dec
ret
pop
call
jmp
out
loop
add
pop
mov
outsl
ja
fcmovu
lock
push
loopne
cld
mov
addr16
add
pop
jns
pop
pop
or
fistpl
xchg
mov
scas
cmp
inc
mov
insb
loop
xorb
ljmp
in
fadds
xchg
fsubr
push
dec
sbbl
outsb
pop
inc
mov
xchg
sbb
push
sti
je
mov
add
xchg
mov
daa
jge
add
stc
sub
adc
pop
pcmpgtd
aaa
rolb
ljmp
rorb
or
lock
adc
mov
adc
dec
or
movsl
xor
sub
sarl
add
xchg
stos
fwait
addr16
inc
and
pop
mov
aas
imul
test
je
mov
lea
movsl
mov
int
jne
cmpsl
cs
decb
sbb
sub
cmpsl
nop
out
mov
pop
inc
js
dec
stc
jnp
inc
stos
push
fs
cltd
xlat
xorb
sbb
xchg
daa
add
jge
xlat
roll
loope
dec
stos
xor
sti
sub
jg
ficompl
adc
push
xchg
inc
ljmp
lret
int
xor
ds
call
into
movsl
push
jae
pop
push
push
jbe
test
mov
jnp
sub
sub
sahf
movsb
push
stos
mov
push
pop
repnz
js
cmpsb
lea
into
icebp
mov
std
mov
xchg
sti
sub
cmc
adc
add
mov
clc
ret
into
adc
pusha
rol
push
popf
shl
nop
fldcw
mov
idiv
adc
shlb
pop
out
imul
or
into
ljmp
xor
imul
rcrb
inc
push
jo
inc
cmp
das
filds
fsubr
sahf
mov
mov
cmp
mov
dec
call
add
mov
mov
stc
cmpsl
cmp
add
cmp
pop
jecxz
jmp
cmp
out
xchg
pop
push
xor
sbb
adc
jg
iret
out
xor
and
mov
push
cmpsl
cmpb
jns
lahf
shll
dec
je
push
xchg
mov
jp
push
xchg
ljmp
cli
inc
out
and
shll
fnstenv
adc
and
sub
cmp
ja
pop
pop
and
cmpl
mov
xor
push
jg
push
cmp
mov
pusha
neg
repnz
ljmp
movsb
cltd
inc
sbb
fdivl
pop
mov
push
sbb
lea
lods
cmpsl
cmc
and
sub
es
scas
enter
jns
pop
nop
ficompl
scas
fsubl
cli
mov
push
movsl
push
sub
loope
loope
imul
inc
mov
jo
cmp
mov
lock
push
ss
lea
sub
enter
ret
cmpsl
mov
cmpsl
adc
mov
adc
fucompp
sub
aaa
xor
add
xchg
mov
mov
pushf
lods
cli
sbb
mov
and
cs
xchg
push
sub
dec
jno
xchg
sti
xor
mov
mov
dec
pop
lahf
andl
test
cmp
pusha
inc
jp
in
mov
mov
push
push
scas
pop
mov
xchg
sbb
jp
arpl
fistps
adc
sub
xlat
sub
xchg
out
andl
lahf
in
mov
lods
xorl
aaa
ja
jne
mov
pop
fs
sub
and
in
xor
outsb
aad
daa
movsb
sahf
push
xor
jg
mov
mov
rorb
setns
rolb
jno
filds
add
push
fdivl
insl
xor
orl
inc
js
and
pop
arpl
xchg
xchg
roll
add
push
add
pop
insl
cltd
and
das
jae
outsl
xchg
push
rcll
push
xchg
cld
sbb
or
adc
movsb
xor
pop
xchg
sbb
sub
and
movsb
cmp
mov
push
push
dec
shl
jge
mov
aaa
mov
repnz
test
iret
aam
movsb
xchg
lods
fs
mov
call
push
out
push
dec
int
outsb
mov
or
mov
push
mov
inc
negl
ja
xor
stos
mov
ljmp
in
mov
outsl
fmul
stos
or
shrl
scas
loop
xor
cmp
addr16
xor
fsubr
aaa
loopne
ret
cltd
pop
rolb
push
xchg
enter
orb
int3
pop
add
xor
repz
xchg
sub
dec
cli
push
lret
rcrl
adc
vmwrite
push
enter
lds
jns
fmull
or
and
adc
lea
in
test
idivb
xchg
cmc
rolb
inc
xchg
or
sub
incl
stos
adc
xor
dec
mov
jb
xchg
fcoml
fwait
pop
imul
arpl
adc
cmp
sbb
test
inc
jno
imul
lock
and
mov
push
mov
push
loop
pop
rorl
pop
mov
lea
cmp
nop
shrl
and
and
nop
shl
mov
mov
mov
into
and
icebp
cmpsb
mov
sub
jb
pop
mov
pop
xor
jno
mov
add
xor
cmp
mov
ror
fisttpll
mov
int3
mov
stos
je
dec
add
ja
lea
jle
mov
stc
ss
cld
mov
add
lret
or
mov
cmp
push
sahf
loop
jno
out
jge
imul
adc
pop
pop
cmpl
repz
imul
sbb
call
push
orb
bound
into
ret
sahf
sub
scas
dec
add
or
xchg
mov
push
push
sbb
fmull
mov
stos
mov
je
stos
pop
sub
and
lret
xchg
psubsw
sbb
push
and
fdivs
fs
stos
pop
lahf
lods
jne
or
out
dec
fwait
decl
movsl
xor
adc
stos
mov
ljmp
fstp
push
aam
pop
mov
dec
pop
insb
cmp
add
ja
mov
cmp
jecxz
stos
xor
cmp
in
jno
sub
mov
loope
adc
fucomip
mov
push
or
sbb
out
xlat
test
cmp
push
lds
icebp
clc
jge
cmpsl
pop
jmp
or
sbb
dec
lret
ljmp
test
dec
jp
das
jle
lret
hlt
mov
gs
hlt
inc
neg
dec
inc
lret
loope
cmc
addr16
adc
jecxz
adc
pop
xor
les
rcrb
pop
or
loopne
andb
mov
decb
rclb
scas
or
xor
pop
xor
dec
or
loope
out
inc
movsb
pushf
cmp
or
in
mov
push
insl
ss
enter
popf
stc
in
dec
clc
lea
sahf
push
add
dec
aas
mov
sbb
subb
adc
inc
dec
cwtl
push
inc
xchg
scas
in
xor
sbb
mov
in
lea
fldl
call
lret
arpl
int
add
mov
pop
stos
and
lahf
pop
into
mov
cmp
pop
das
rcrl
push
test
dec
daa
daa
iret
cwtl
inc
lods
popf
adc
sbb
push
cmpsb
dec
pushf
aam
fcmovb
and
lret
idivb
lock
icebp
adc
imul
fs
out
jmp
jle
daa
inc
sahf
mov
stos
call
jb
jg
sbb
cmp
repz
xor
jns
pop
inc
stc
cmp
mov
xchg
test
aas
out
jg
and
and
xchg
and
ret
insl
or
movsl
jns
ret
ljmp
push
sbb
cmp
adc
es
add
mov
pushl
push
cmp
push
fisubs
stos
cmp
ret
xor
mov
xor
outsl
aaa
jg
xchg
add
mov
adc
xchg
stc
pop
test
mov
stc
clc
jecxz
fsubl
or
scas
inc
dec
xchg
mov
aad
push
cmp
outsb
pop
loopne
mov
shll
lds
jecxz
mov
xchg
ficoms
xor
pop
lea
mov
jg
mov
lret
negb
cwtl
sub
jmp
jbe
in
xchg
es
adc
movsb
dec
fstl
mov
imul
sub
mov
repnz
test
xchg
mov
jae
cmpl
jne
cltd
push
add
xchg
mov
dec
inc
adc
inc
aaa
xchg
stos
dec
inc
clc
sub
xchg
adc
pop
int
repz
pop
cmp
dec
ljmp
test
sub
adc
movsb
aam
or
push
xor
out
ja
shlb
jg
stc
pop
cmp
and
mov
jno
xchg
jb
pop
loopne
pop
sbb
jbe
test
or
and
xlat
cltd
push
mov
mov
movsb
xor
sti
push
push
lods
ret
cli
sub
fldenv
nop
pop
pop
out
sub
aad
or
out
cmpsl
xchg
add
imul
mov
adc
xor
stos
xchg
test
mov
inc
jns
mov
push
mov
lcall
in
pop
cmp
sub
enter
jno
or
inc
pop
stos
xchg
inc
call
jae
fs
mov
push
mov
mov
test
push
lret
push
or
daa
cltd
repnz
mov
insb
xor
jnp
adc
popa
gs
rclb
sbb
dec
into
mov
push
cwtl
fidivl
sti
lret
shlb
push
loope
mov
inc
mov
ret
pop
add
mov
push
sbb
ja
jo
inc
mov
out
mull
insb
adc
cmpsl
pushf
mov
pop
sub
xchg
jge
in
aad
cmp
jo
push
add
add
lret
xor
pusha
and
sti
or
mov
insb
mov
and
aas
movsb
sbb
mov
popf
jmp
pop
imul
call
jl
mov
cmpsl
rorl
sarl
mov
ds
jns
out
mov
xor
or
sub
dec
mov
pop
pushf
jl
jbe
cmpl
sub
out
arpl
mov
mov
cmpsb
dec
add
test
filds
sbb
out
lcall
clc
test
sub
shr
adc
pop
sub
imul
inc
popf
pop
fcmovne
adc
mov
dec
fmuls
inc
dec
test
xor
aas
hlt
cwtl
jne
insl
jge
imul
sbb
xchg
and
xchg
mov
sbb
and
js
push
cmpsl
hlt
mov
mov
pop
out
rorb
enter
cmp
add
sahf
and
pop
adc
pop
sbb
sub
clc
lock
push
lret
cmp
inc
faddp
js
dec
jge
je
stos
ja
xor
sbbb
or
lods
test
push
push
int
cmp
in
and
mov
dec
pop
xchg
lcall
sbb
adc
pop
inc
or
pop
test
mov
ret
mov
shrl
push
xchg
flds
push
pop
insl
mov
test
add
cmp
push
xor
push
aas
cs
pop
leave
popa
xchg
jecxz
adc
push
adc
fldenv
out
int
popa
pusha
add
loopne
rcll
lods
sbb
loop
repz
jnp
lret
mov
xlat
mov
in
test
and
and
addr16
popa
mov
movsl
pusha
das
mov
fildl
mov
inc
lret
sbb
mov
shl
sbb
clc
inc
xor
or
cltd
jnp
mov
lret
xor
push
gs
xchg
shll
jle
lock
push
mov
jne
aad
fmulp
mov
cmp
pop
iret
jge
fnstsw
loop
addr16
inc
mov
inc
pop
inc
mov
xchg
adc
daa
cs
mov
mov
dec
repz
movsb
lahf
mov
mov
mov
cmp
pop
jg
cmpsl
in
subb
mov
popa
push
xor
cmc
rorb
add
push
pop
aas
daa
clc
jge
loope
cwtl
jp
int3
pop
lahf
adcl
loopne
lock
nop
es
cmpsl
pop
sub
mov
push
mov
je
pop
test
frstor
mov
jo
aad
dec
and
cli
clc
ret
push
cwtl
out
push
cmpsl
mov
fdivl
in
dec
inc
xchg
push
cltd
jmp
and
jns
pop
sbb
mov
mov
and
repz
dec
pop
fldl
inc
cmp
ljmp
xchg
cltd
adc
mov
inc
xchg
bound
inc
popa
pop
sbb
and
scas
mov
push
scas
push
outsl
jno
mov
cld
dec
test
cmp
fidivrs
xchg
arpl
pop
enter
mov
mov
push
test
jo
sahf
mov
pushf
sbb
fmuls
jno
sahf
pop
fdivs
loope
ret
inc
insb
cmpsb
fsts
scas
adc
std
mov
adc
sti
repnz
sub
in
xchg
pusha
jle
and
sbb
ja
out
outsl
pusha
sbb
cmp
dec
cld
mov
xlat
ret
push
rolb
pop
mov
fstpt
jnp
adc
sbb
sbbb
inc
and
xchg
cmp
mov
fs
dec
ds
ret
fsubrs
and
insb
aaa
dec
call
inc
mov
daa
es
iret
mov
xchg
subb
outsb
sarb
sbb
pusha
jmp
push
je
push
mov
adc
mov
and
insl
js
or
stos
mov
inc
xchg
jl
hlt
mov
scas
int3
xor
mov
fisttps
pop
shll
push
mov
stos
std
dec
ret
and
jnp
sbb
int
push
jg
insl
jnp
lds
push
or
push
cmp
push
adc
lahf
push
xchg
xchg
call
mov
mov
mov
pusha
js
add
cmc
cld
pop
loope
rol
lods
adc
mov
pop
shlb
add
jno
push
popa
add
inc
arpl
daa
adc
push
cmp
pop
sub
and
fcmovu
pop
fimull
adc
and
addr16
mov
shrl
fildl
mov
jg
xchg
push
xor
jo
insl
nop
add
out
aad
loope
loope
arpl
push
push
dec
pop
popf
xchg
movsl
mov
aam
clc
ret
and
shl
mov
and
out
andb
mov
fs
dec
cmpsl
pop
push
inc
sub
loopne
pushf
loopne
scas
das
lods
pushf
shr
lret
in
mov
mov
mov
scas
cli
mov
imul
iret
push
fiaddl
pop
mov
or
repnz
or
ds
xor
mov
jle
sbb
mov
sbb
sbb
mov
xor
test
sub
stos
std
jo
sbb
cmpl
or
cmp
pop
sub
into
lret
adc
mov
insl
popf
push
int
sbb
int
sub
add
repz
jge
cld
pop
or
ret
out
jge
aad
xchg
mulb
push
jg
pop
mov
sub
icebp
arpl
outsb
pop
fidivl
mov
adc
pop
jl
fidivrl
mov
insl
rclb
pushf
popa
push
arpl
mov
je
fbld
test
pop
mov
testb
adc
xchg
daa
cmpsb
push
or
hlt
cmp
clc
and
sub
mov
dec
push
cs
ret
insb
in
loopne
jno
xchg
rorl
xor
cmp
sbb
stos
xor
les
push
gs
jnp
cmp
nop
fbld
js
or
jg
push
sbb
mov
adc
sbb
sbb
les
inc
loop
lea
mov
lret
xor
test
insl
cmp
mov
test
dec
aad
into
stos
lods
push
or
stos
lods
push
gs
cmpsl
scas
jmp
outsb
cmc
sahf
rcrb
aam
mov
mov
and
outsb
cmc
imul
clc
loopne
es
cmp
push
outsb
add
xorl
pop
out
sbb
aad
jp
xchg
xlat
push
sub
fisubs
fisubs
bound
jl
in
cwtl
sbb
rcrb
std
add
push
push
fstpl
rcll
stos
imul
fcmove
inc
sbb
dec
mov
shrb
mov
cmp
and
or
out
rol
push
pop
pop
cmpl
int3
movlps
shlb
mov
pop
pop
xor
jl
inc
cltd
test
fisubl
sub
xor
pop
subl
inc
aas
imul
dec
inc
pop
fisubrs
pop
pop
cmp
ja
out
leave
rcr
mov
aaa
xchg
std
cmp
fimuls
stos
test
mov
outsb
and
notl
inc
xor
int
pop
pop
mov
push
dec
or
pop
sbb
add
push
fcoms
sub
test
push
aas
fsubl
aas
sbb
daa
sub
and
pop
xor
lea
mov
xchg
add
sbb
mov
pop
outsl
sbb
out
inc
js
pop
fisubs
xchg
mov
loop
push
cmp
xor
add
insb
js
cltd
xlat
mov
inc
ret
jns
pop
pusha
aad
popf
andb
fsubs
idiv
inc
and
mov
jmp
insl
inc
jo
dec
pop
ret
sbb
add
xlat
inc
test
test
pop
js
or
dec
xlat
cwtl
adc
negl
repz
add
jge
rcrb
xor
cmp
arpl
bound
pop
sub
mov
sub
xchg
rcl
dec
shrb
loope
xor
cltd
aam
aas
cld
addr16
pop
lds
add
jecxz
adc
xor
adc
add
lcall
repnz
test
xor
jae
shlb
scas
mov
jnp
call
pop
add
push
jbe
dec
shl
jl
enter
cmp
mov
push
adc
mov
fucomi
mov
stos
inc
push
out
popf
lcall
pop
ja
pop
in
adc
sbb
xchg
jnp
and
es
pop
cmpsl
or
sahf
repnz
cmp
push
push
lock
std
mov
int
in
mov
dec
pushf
jl
push
xchg
mov
bound
fistpl
adc
mov
fnstsw
movsb
addb
divl
dec
lods
daa
push
dec
das
fcoml
dec
fcmove
mov
dec
dec
dec
pop
jg
inc
dec
and
add
mov
jae
pop
loop
add
sbb
bound
sub
shr
dec
or
dec
scas
push
mov
adc
in
push
lock
jae
in
or
push
cli
dec
inc
sahf
jge
roll
mov
pop
dec
jmp
std
out
jg
jo
ja
mov
push
test
das
adc
lret
bnd
arpl
mov
mov
jecxz
fucomi
adc
sbb
cld
xchg
or
adc
scas
pop
notl
ds
add
jmp
outsl
ss
out
push
addr16
mov
sbb
jb
xor
clc
outsl
xchg
xchg
sbb
xor
imul
idivl
add
mov
out
loop
dec
jae
pop
adcb
adc
imul
pop
pop
mov
cmp
push
push
push
push
pop
loopne
fildll
xor
mov
rcrl
addr16
dec
movsl
into
mov
rcr
ljmp
jae
out
jmp
lods
xor
and
jo
mov
and
xchg
aaa
ficoms
adc
stos
out
push
cs
sub
ret
jp
push
mulb
add
jno
and
jno
sti
daa
rorb
inc
jge
xchg
pop
pop
jg
mov
iret
insl
fwait
loope
cmc
mov
xchg
inc
icebp
mov
dec
mov
flds
pusha
mov
push
shlb
xlat
cmp
int
aad
cmp
int3
lahf
cmp
repnz
cmp
int
cmp
inc
inc
das
cmpsb
mov
clc
out
jnp
insl
pop
dec
jl
mov
jge
mov
popa
pop
lods
lods
sbb
add
ret
repz
movsbl
ljmp
ficompl
jmp
inc
inc
popf
pusha
pop
pop
movb
push
push
push
or
xchg
jecxz
lea
pop
jecxz
es
add
push
nop
inc
pop
lods
outsl
jae
and
or
xor
es
mov
scas
pop
and
push
pop
sti
sti
shll
subb
jb
cli
inc
enter
dec
adc
or
lds
in
xchg
or
das
pop
cmp
jle
ja
sti
aaa
and
add
cmpsb
jbe
mov
icebp
in
and
inc
or
xchg
gs
mov
aas
push
mov
clc
push
mov
sarb
mov
inc
fbld
fiaddl
cwtl
cmp
jl
sbb
cmp
lret
imul
nop
mov
cmpsl
loopne
test
rcl
notl
dec
sbb
insb
xor
xchg
push
xorl
sbb
fdivr
lea
inc
push
push
and
test
lahf
je
negb
add
inc
mov
jl
inc
sbb
stos
sub
add
mov
outsl
in
xchg
dec
pushf
in
aam
xor
in
lret
or
mov
mov
imul
movsl
inc
rol
or
dec
adc
pop
lret
loop
enter
xchg
sbb
sbb
mov
cwtl
fstpt
loop
subl
adc
orb
pusha
popa
sbb
and
mov
lods
mov
mov
ljmp
mov
adc
push
and
insl
test
subb
xor
in
aas
rcrl
stos
ds
sub
orl
dec
mul
fwait
xor
aas
push
or
inc
insl
ljmp
les
pop
add
jle
fildll
jle
out
and
pop
push
dec
lds
add
mov
xchg
nop
ret
cld
xor
xor
movsb
imul
dec
test
mov
pop
imul
cmpsl
hlt
cmp
loopne
call
and
sbb
xorl
dec
and
inc
rolb
lods
pop
ds
lcall
jnp
icebp
adc
or
xchg
push
daa
inc
xor
add
xor
add
xchg
xchg
dec
in
subb
xor
push
add
ds
adc
not
scas
sbb
ret
pop
popf
cwtl
fisubs
sbb
push
fidivs
js
cmp
sbb
adc
cmp
cli
pop
in
jno
adc
mov
sub
xchg
dec
push
std
dec
inc
test
rorb
adc
and
std
mov
adcb
stos
aaa
push
xor
lcall
ficompl
ja
dec
or
shll
adc
mov
and
inc
add
cwtl
aaa
pop
push
stc
and
adc
adc
mov
or
popa
or
cmp
lret
sbb
pop
fdivs
out
loope
push
jne
push
xor
enter
outsb
jp
sub
adc
push
shrb
cmp
int3
mov
dec
inc
mov
inc
jg
sbb
sbb
jne
sub
mov
cmp
fs
sub
in
mov
push
xchg
cmpsb
or
jae
mov
jl
mov
and
outsl
fisttpl
or
pop
sub
add
cld
xchg
jno
adc
cmp
js
lds
icebp
dec
xchg
inc
arpl
or
and
lahf
in
sub
mov
std
or
or
push
inc
push
pop
dec
cmp
and
push
cwtl
rcrl
lods
test
inc
fstpt
aas
cltd
xor
xor
out
sbb
addb
addr16
pushf
push
adc
outsb
adc
into
cltd
and
mov
add
add
dec
lahf
in
in
or
icebp
mov
mov
loop
cli
sub
mov
xchg
das
addr16
pop
lret
inc
sbb
pop
and
rclb
jecxz
lea
out
mov
add
icebp
stc
rol
into
push
mov
iret
cli
sub
cwtl
mov
or
push
mov
xchg
and
adc
cld
xchg
sbb
cwtl
lcall
adc
adc
cltd
in
shr
sub
xchg
das
mov
andl
xor
add
cltd
imul
mov
dec
aam
dec
push
clc
jp
adc
loop
lds
add
aas
mov
cs
xchg
daa
pop
pop
les
pusha
dec
jp
xlat
or
mov
movsl
inc
sub
jge
dec
cmp
lods
cmpsl
cwtl
out
aad
jne
cmpsl
mov
mov
rcr
imul
and
repnz
add
adc
adc
in
sti
sbb
call
pop
lea
into
popa
and
ror
out
adc
mov
cmp
std
int
mov
cwtl
rclb
popa
mov
fs
movsb
inc
test
cmpsb
mov
mov
int3
dec
mov
sbb
add
fst
sarl
pushf
mov
outsb
jne
mov
enter
and
pop
xorl
pusha
xchg
addb
imul
rcll
push
xor
or
adcb
icebp
lahf
jno
pop
mov
push
incl
push
jnp
jle
imul
sub
inc
mov
repnz
sub
jnp
int3
fmull
add
inc
mov
cs
push
mov
fs
and
adc
jno
jp
das
xlat
mov
push
inc
es
pop
aas
pop
or
add
jecxz
loopne
mov
pop
or
popf
jecxz
push
lock
fstpl
in
jne
or
inc
out
scas
add
sahf
or
pop
mov
push
xchg
mov
test
xchg
stc
jle
push
lea
mov
jecxz
inc
push
jl
aam
in
out
inc
les
lcall
sbb
jg
dec
aaa
sub
jge
mov
sbb
ret
sub
addr16
clc
call
fcmovne
gs
mov
mov
push
enter
sbbl
imul
imul
out
xchg
xchg
leave
mov
mov
pop
mov
add
rclb
ret
xchg
lds
popf
xchg
push
movsb
lods
fiadds
xchg
cltd
pop
jp
xor
dec
testb
xor
sub
or
xchg
mov
inc
xlat
scas
js
inc
lret
bound
sti
mov
orl
lahf
or
push
mov
roll
dec
xchg
ds
cmp
sbb
push
addb
mulb
jmp
cmp
jbe
cmp
mov
arpl
mov
push
xlat
xor
idivb
push
sub
int3
pop
jle
lods
inc
lret
jns
fs
test
repz
mov
dec
fsubl
decb
icebp
pop
mov
jl
fsts
jns
stos
arpl
xchg
xchg
inc
scas
aad
out
adc
inc
fwait
pop
pushf
sbb
fsubr
mov
cli
dec
rorl
js
shr
in
mov
scas
enter
sub
iret
outsb
mov
out
loopne
xlat
in
mov
int
popa
outsl
push
jbe
xchg
outsb
fadd
jl
aam
sub
stos
nop
aas
repnz
iret
lcall
in
cmovge
enter
inc
inc
int
shrl
loop
imul
repnz
pop
cmpsl
mov
mov
cmpsl
out
fxch
mov
xchg
out
xor
inc
and
jns
aaa
scas
fwait
arpl
cmc
pushf
jb
add
in
mov
cltd
mov
testl
xchg
push
adc
or
jmp
mov
jae
push
push
imul
xor
lds
inc
sahf
xor
push
sub
cmpsl
je
cmp
ds
xchg
pop
mov
loopne
in
sbb
xor
push
add
repnz
lret
aas
cmp
test
imulb
pextrw
js
xor
cld
fldt
sahf
mov
sti
hlt
lret
and
xchg
dec
xchg
cmp
xchg
mov
lock
inc
xor
xor
push
dec
roll
or
and
inc
mov
enter
bnd
adc
pop
fstps
cmpsb
adc
cmpl
cld
js
dec
filds
int
sbb
lods
fcmovb
mov
lea
rorl
mov
xchg
xlat
pop
sahf
aad
lds
daa
fsubs
pop
fwait
cld
dec
mov
ljmp
clc
dec
mov
pop
hlt
fcos
scas
mov
and
testb
shll
icebp
jae
push
lods
jmp
adc
lea
stc
cmp
lods
je
in
sbb
js
cli
sbb
scas
repz
pushf
scas
jp
cmpsb
fwait
clc
push
sub
push
popw
sti
cs
icebp
loop
repnz
int
fstps
pop
je
mov
inc
imul
mov
jno
out
pop
leave
pop
mov
outsb
jmp
shl
dec
or
push
pop
notl
jg
lcall
and
call
xor
pop
out
inc
fdivp
push
outsb
ret
jb
xchg
inc
stos
dec
sub
int3
test
sti
pop
push
add
sbbb
sub
jae
jg
addl
dec
push
jl
fsubr
mov
addr16
inc
fwait
out
xchg
nop
aad
cmc
sub
movsl
lods
adc
lret
clc
les
leave
addb
loopne
sub
or
pop
pop
movl
mov
and
mov
or
inc
cmp
pop
pop
xlat
dec
pusha
inc
cwtl
and
pusha
xlat
add
adc
mov
sub
or
aam
cld
mov
test
ret
cmp
xchg
push
inc
or
idivl
mov
fs
ss
int
stos
hlt
test
addr16
shlb
push
in
jae
adcb
push
fcom
das
cmc
jle
sub
jb
push
lcall
and
mov
push
jno
xchg
cwtl
push
es
in
bound
rcl
mov
sbb
sbb
test
jb
and
inc
inc
mov
lock
adc
shrb
cmp
out
mov
or
cltd
pop
cld
adc
ja
andb
in
mov
mov
fnstcw
popa
scas
xchg
stos
adc
xchg
ljmp
add
xchg
out
popa
scas
dec
sub
inc
sarl
cmp
rorl
sub
ret
mov
fsubrp
adc
sbb
cmp
jmp
pop
xor
mov
xchg
xor
jge
ja
inc
mov
xor
cmpsl
dec
xchg
int3
jmp
pop
or
push
or
pop
jle
add
enter
out
leave
adc
pop
jb
daa
lcall
shl
out
sbb
lret
lods
inc
roll
jnp
sbb
jb
test
das
push
orb
je
sti
shlb
mov
jno,pt
and
adc
test
les
rorl
js
mov
pop
ret
cmp
mov
mov
pop
cli
jmp
je
mov
movsb
movsb
mov
mov
repnz
mov
ss
test
jle
mov
inc
sbb
push
faddl
jge
mov
xsaveopt
mov
imul
cmp
push
movl
sbb
push
mov
mov
out
and
frstor
push
insl
icebp
xchg
or
push
sahf
cs
adcb
xchg
ja
orl
gs
adc
lods
pop
out
inc
xor
lods
mov
push
adc
subb
rorl
dec
fnstcw
enter
sub
arpl
xchg
jmp
into
add
pop
adc
dec
sbb
orl
push
mov
mov
mov
jb
pushw
test
mov
idivl
mov
pushf
inc
mov
pop
loop
push
pushf
cmp
sub
test
mov
xor
push
dec
mov
movsb
add
cmp
mov
pop
dec
nop
add
mov
aad
mov
cmp
lret
inc
mov
add
mov
in
sbb
cmp
adc
lock
es
test
pop
icebp
jmp
imul
arpl
lock
fwait
fwait
xchg
bound
pusha
sahf
fs
addr16
test
mov
mov
fsubrs
mov
in
or
mov
aad
ds
xor
and
rolb
or
xchg
jl
movsb
fcompl
lds
or
shrl
out
pop
push
ds
or
js
out
add
shlb
mov
insl
stos
dec
leave
in
mov
scas
mov
pushw
stc
rcll
rorl
aam
xor
xchg
mov
fxch
mov
fcoml
xor
push
mov
mov
push
stc
mov
ljmp
in
fistl
inc
rol
ja
cltd
outsb
scas
cmp
nop
fimull
loop
mov
repnz
mov
dec
mov
inc
cmp
pop
loop
mov
mov
push
cltd
push
loopne
inc
mov
push
mov
mov
loope
xor
rcl
in
fstp
testb
pop
pop
loopne
mov
pop
bound
xlat
pop
sub
xlat
push
outsl
and
cmp
out
xchg
ss
mov
push
lock
scas
dec
iret
gs
adc
aam
jb
outsb
mov
and
shll
shll
leave
push
pop
jae
pushl
mov
cmp
scas
cmpsl
sti
xchg
sub
into
pop
xchg
clc
push
cltd
pop
mov
dec
dec
les
cltd
ret
sahf
xchg
push
popf
sub
sbbb
push
insb
lret
or
rcr
rclb
pop
inc
xlat
mov
mov
movsl
mov
push
lret
mov
cmp
xchg
std
push
push
out
mov
aaa
push
mov
pop
rcr
cld
subl
or
mov
adc
push
or
movq
sub
push
mov
cmp
xchg
pop
jle
sub
jmp
pop
andb
sub
adc
jns
xor
or
and
scas
loopne
mov
ja
mov
pop
fsubs
out
mov
mov
fists
xchg
pop
xlat
pop
sarb
in
sub
call
or
sub
push
sbb
sti
icebp
mov
jge
dec
cmpsb
sti
xor
shll
fwait
repz
and
xchg
fildll
push
jmp
lret
fldl
in
push
dec
push
out
xor
imul
xor
ja
daa
adc
jno
loopne
xor
shlb
fwait
cmp
in
jo
iret
xchg
jecxz
dec
and
push
lret
fildll
stos
xor
in
testb
sbb
dec
xchg
pop
jns
test
push
sti
mov
test
sbb
addr16
adc
pop
xor
fdivrp
sar
mov
jne
test
in
jne
cmp
jp
ja
imul
mov
mov
inc
lea
jle
mov
inc
and
popa
lcall
xchg
pop
adc
cltd
cs
insl
push
push
das
sahf
push
aaa
inc
negb
das
pushf
xor
out
test
adc
cwtl
stos
lahf
lds
int
xchg
out
inc
or
adc
scas
adc
or
mov
cli
loope
btrl
mov
outsb
add
pop
xchg
daa
test
push
call
das
rol
mov
or
sub
push
fnstenv
pop
les
dec
roll
adc
push
cmp
insb
pop
xchg
jmp
push
mov
jle
movsb
popf
push
fidivs
ljmp
sub
rorb
pop
adc
aam
enter
addl
arpl
aad
fs
sub
mov
sbb
cltd
adc
test
popf
push
cmpsb
mov
add
addr16
cwtl
and
jne
mov
movsl
mov
addr16
inc
xchg
jmp
icebp
stos
sahf
lret
jp
mov
leave
frstor
out
sbb
insb
in
pop
imul
fwait
cld
jne
shll
scas
xor
arpl
push
addb
iret
rclb
mov
dec
mov
movsl
insl
daa
add
out
mov
out
ljmp
cmp
adcl
dec
push
lret
out
mov
and
xchg
adc
pop
sbb
rcl
aam
cmpsb
pop
hlt
arpl
xchg
xchg
push
jecxz
cwtl
jo
shr
or
repz
cli
push
in
mov
and
push
hlt
mov
pusha
xor
sahf
xchg
inc
fimull
fsubrp
out
das
xor
cli
hlt
sbb
fidivs
addr16
addr16
les
adc
mull
int3
idivb
and
mov
repnz
mov
push
cwtl
sub
addl
sub
es
fimuls
fistps
push
xlat
jecxz
mov
jae
or
gs
std
and
aad
into
daa
adc
xchg
shlb
jecxz
cs
cmp
loopne
in
push
mov
cltd
call
pop
popf
cmp
xor
jns
stos
or
xchg
into
clc
or
inc
sub
int
shlb
outsl
xchg
ficompl
and
and
insb
mov
sbb
xchg
dec
jl
sarl
gs
aam
call
jnp
aaa
sub
in
aam
hlt
ror
roll
sbb
push
mov
lret
push
pop
lahf
add
insl
pusha
add
ds
cs
iret
loope
pop
mov
cmp
sahf
dec
jle
sub
cmp
sub
in
mov
arpl
sahf
dec
mulb
cmp
loop
mov
dec
mov
fsubr
int
jl
rorb
call
fidivrl
cmp
mov
cli
and
xchg
shl
sub
adc
push
sarb
mov
insl
push
fdivl
ficoms
push
cld
sub
jnp
imul
push
out
sub
mov
fsts
push
push
mov
test
and
insb
push
movsb
ds
xor
in
gs
cmp
mov
nop
rorl
js
dec
cmpsl
fs
test
xchg
test
xchg
jge
mov
dec
inc
inc
push
jmp
or
pop
addr16
mov
mov
jne
mov
sbb
test
out
push
pop
lahf
shl
sub
or
and
cmp
insl
pop
stos
leave
jg
enter
mov
and
push
jo
enter
and
or
les
jle
repnz
je
xor
push
std
out
shll
cwtl
push
fwait
sub
lcallw
inc
and
mov
in
adc
scas
or
jge
test
insl
and
mov
xchg
andl
rcll
adc
or
xor
scas
dec
sbb
leave
imul
pop
xor
pop
sbb
scas
push
inc
test
rcrb
dec
in
sub
stos
fistps
push
inc
pushf
addr16
dec
out
lods
jb
rclb
call
int3
je
lea
lock
sbb
movsb
fistpll
xchg
jb
in
jo
lock
std
mov
cld
push
cltd
pop
or
and
sbb
jg
fsubrl
ret
pop
adc
sti
cmpsl
cltd
lret
adc
out
mov
and
inc
mov
xchg
dec
add
jp
in
push
xor
int3
pop
fsub
test
push
adc
push
rclb
fnstenv
sbb
leave
add
xor
subb
and
in
inc
lcall
adc
bnd
loop
sbb
inc
xchg
repnz
fistpll
sub
pop
outsb
je
pop
inc
mov
inc
je
xchg
ret
or
or
fildl
sub
mov
inc
inc
or
mov
push
aas
pusha
pop
lods
fs
sbb
adcl
xorl
cmc
mov
in
pop
sub
iret
jnp
inc
pop
or
scas
push
mov
leave
add
aam
test
idiv
js
jecxz
or
mov
ja
push
in
mov
cmp
add
inc
sub
and
mov
mov
shlb
mov
dec
call
push
jno
add
and
mov
adc
mov
jnp
or
ss
pushf
ja
leave
mov
pop
jno
in
and
outsl
and
data16
and
xchg
mov
add
mov
mov
mov
jnp
push
test
push
ret
pusha
push
sub
fmuls
andb
inc
jno
sub
xorl
inc
inc
jo
adc
push
jl
xchg
or
lods
sbb
enter
jge
out
negl
popf
adc
pop
jbe
mov
mov
mov
jp
mov
hlt
fldcw
push
push
and
movb
push
xor
popf
jo
scas
xor
je
sahf
aam
sub
sti
insb
push
cmc
out
cmp
int3
sub
jmp
jae
punpckldq
insb
cmp
mov
mov
ret
mov
lea
mov
lea
shl
insb
xor
pop
jbe
xchg
cmpsl
mov
jmp
mov
lock
stc
xor
es
lcall
data16
cmc
mov
idivb
stos
movsl
push
push
scas
xchg
icebp
add
jp
subl
pusha
cmc
cli
adc
inc
xchg
in
and
xorl
scas
ljmp
cmp
push
jo
xchg
jle
fadds
aas
jmp
mov
in
push
push
pop
add
adc
cld
jl
and
les
sub
or
or
ds
xchg
sti
enter
adc
out
std
ds
jmp
js
mov
mov
push
lds
inc
and
jnp
aam
roll
mov
rcr
in
adc
test
add
roll
sbb
xchg
loop
push
les
mov
cltd
outsl
sahf
popa
mov
mov
dec
sub
or
cmpsb
lahf
inc
pushf
jle
inc
jmp
lea
fwait
pop
mov
sub
cwtl
es
sahf
idivl
pushf
ret
lcall
xchg
sub
push
cmpsl
aaa
push
jl
fisttpll
inc
mov
pop
mov
sub
pushl
fcmove
rorb
stos
stos
test
jno
sarb
mov
inc
add
mov
inc
sbb
inc
ret
sub
shlb
fcmovb
lock
jb
push
insl
inc
mov
dec
mov
mov
push
adc
bound
adc
adc
icebp
xor
nop
mov
shrb
popa
mov
and
push
lds
push
adc
popf
imul
push
jo
mov
sbb
out
xor
or
sahf
shrb
sub
mov
mov
mov
divb
loopne
mov
or
cmp
dec
dec
shlb
outsb
cwtl
stos
add
sbb
xchg
add
mov
jg
mov
or
dec
mov
or
pop
push
cmc
mov
sbb
inc
cltd
cld
or
ss
leave
popa
sub
xor
sahf
mov
inc
adc
inc
loope
dec
in
sub
jp
test
fisttps
pop
push
adc
push
push
pop
fs
inc
jae
mov
sbb
lret
mov
or
es
movsl
push
in
dec
cmp
xor
ja,pt
bound
or
mov
push
inc
in
movsl
pop
aad
andl
mov
push
jne
and
es
adc
cmpsb
xchg
inc
leave
fldl
sbb
je
test
sub
mov
mov
loope
push
add
sbb
push
cmp
leave
jge
fcmovbe
insb
fldcw
ret
fsub
xor
ret
mov
je
aaa
and
mov
cmp
mov
mov
das
push
stos
test
out
xchg
mov
mov
hlt
xchg
inc
pop
sub
pop
dec
das
loop
adc
xchg
push
pop
icebp
inc
shr
jecxz
aam
inc
insb
cli
out
xchg
imul
push
mov
pop
ror
sub
mov
movsl
push
mov
push
ret
lret
dec
mov
in
les
loope
out
pop
jno
mov
pop
adc
ja
jns
or
xor
add
mov
out
and
xchg
std
ljmp
xor
jo
fimull
call
addr16
ljmp
xchg
cmp
inc
mov
repz
fstl
mov
faddl
loopne
mov
adc
cmp
xchg
mov
dec
jle
dec
insl
dec
inc
cmpsb
popf
or
sub
cmp
dec
xor
or
stos
lods
adc
sarl
adc
push
clc
aaa
xor
rcll
fldl
ret
pop
push
and
dec
sbb
or
in
loope
lret
icebp
mov
pop
stos
repz
fdivl
imul
jne
outsl
loope
add
mov
into
fdivl
mov
add
shlb
fwait
nop
or
inc
adc
inc
mov
outsb
jno
push
xchg
sbb
lret
out
jle
nop
xchg
xchg
idivl
or
gs
pusha
pop
btc
xchg
mov
pop
sbbb
jns
fucom
pop
rcll
jns
mov
or
out
out
aad
imulb
cmp
stos
jne
mov
test
dec
sbb
sub
cmp
ds
cmp
sub
filds
stos
mov
push
cld
out
cli
mov
test
in
leave
das
in
add
fcmovbe
xor
adc
jge
sbb
pushf
pop
test
add
sbb
xlat
ret
test
sti
jl
rorl
repz
movsl
adc
push
xchg
mov
dec
mov
push
xor
daa
inc
std
pop
jle
or
cmpsb
push
jmp
adc
xor
aad
pop
pusha
or
daa
cmp
test
sbb
sub
or
dec
into
clc
jle
jno
inc
pop
jp
push
dec
fnsave
mov
sbb
jae
test
xor
movsb
js
or
jge
nop
sub
sub
cmp
pop
test
clc
pop
dec
repz
xor
xchg
mov
fs
sbb
sbbb
and
shrl
push
das
imulb
stos
repz
insl
cmp
jp
movsl
aas
mov
sbb
imull
rep
in
clc
icebp
add
mov
popa
popf
gs
pusha
stc
imul
mov
shll
mov
aas
in
js
jg
push
out
fdivrl
repz
pop
push
lahf
mov
test
and
push
jge
mov
outsb
mov
inc
dec
push
fbstp
mov
rorb
scas
cmp
mov
js
arpl
and
sbb
sbb
mov
adc
jne
stc
movsl
dec
mov
sbb
or
repz
push
and
test
stos
add
fsts
xor
mov
inc
in
enter
jae
ss
and
or
push
sub
jns
push
repnz
dec
cmpsl
in
int
in
or
int3
aad
in
in
inc
test
cmpsb
pop
ljmp
mov
xchg
call
adc
xchg
mov
insl
adc
stos
xchg
outsl
imul
pop
imul
mulb
test
aas
jbe
mov
out
aam
test
sti
inc
sbb
mov
aad
sub
pop
inc
mov
jp
cmp
mov
xor
mov
jno
mov
sahf
fwait
and
push
cwtl
cmp
pop
xor
rcrb
pop
pop
int3
in
rcr
mov
mov
xor
pusha
pop
mov
lock
enter
dec
repz
mov
in
lock
out
aas
mov
lods
repz
lods
adc
loope
scas
orl
push
ds
neg
test
push
ljmp
das
cmpb
cmp
ds
lahf
or
das
mov
insb
loope
mov
adc
inc
pop
arpl
push
test
out
dec
out
jae
lock
pushf
leave
jcxz
mov
fadd
mov
imul
int3
mov
outsb
hlt
push
mov
scas
ss
push
into
mov
cld
mov
das
adc
clc
stc
mov
lret
aaa
je
scas
shl
fiadds
mov
ja
mov
add
popa
mov
sbb
xor
xchg
xchg
sub
cmpsb
rclb
jo
call
lea
cli
push
cltd
lds
dec
jae
xchg
lods
pop
mov
pop
push
sub
sbb
sti
and
loope
jnp
iret
out
rcl
arpl
sub
push
das
push
fsubl
loop
adc
xor
enter
adc
movsb
xchg
nop
jge
pop
sub
icebp
call
or
jg
icebp
jnp
aaa
cmp
fcmovu
jb
repz
scas
pop
adc
pop
and
jl
xor
das
mov
test
mov
daa
stos
lods
push
imull
pop
cwtl
adc
je
inc
pop
pop
movsb
cmc
jb
sub
or
aad
jl
xor
mov
movsb
out
ss
lahf
repnz
cmp
inc
clc
xor
or
mov
adc
xchg
stos
adc
jmp
sub
int3
mov
sub
sahf
jp
aam
mov
pop
mov
mov
inc
nop
cmp
leave
lcall
fadds
sbb
dec
pop
mov
fisttpl
xor
inc
xor
mov
icebp
int
rclb
cmp
pusha
mov
pusha
in
outsb
and
leave
je
add
cmp
pop
ret
movsl
xor
xor
out
enter
and
rcr
mov
jle
or
jecxz
dec
and
repnz
lea
imul
in
cmc
gs
push
dec
shrb
jge
sbbl
neg
repz
jae
pop
cmp
test
push
lds
addr16
push
xlat
and
xchg
cmp
std
rcll
push
sbb
aam
lret
jl
aam
mov
add
adc
mov
xchg
popf
mov
cmp
mov
xor
aas
sbb
add
clc
cwtl
and
push
fwait
xor
jo
cmp
mov
shrb
dec
jno
mov
pop
repnz
sbb
fisubrs
mov
jbe
push
test
lea
in
push
sbb
outsb
dec
pop
jp
das
in
xor
add
nop
and
dec
dec
iret
xor
stc
add
add
icebp
xchg
jae
cltd
cmp
mov
xor
or
mov
clc
fs
test
or
cmp
out
push
shll
push
fistpll
in
lcall
jns
out
sbb
cmc
test
or
push
inc
cmp
and
mov
movsb
or
cmp
sub
movsl
in
cmp
fcomi
call
inc
add
mov
sahf
xchg
dec
cmp
push
push
push
push
xchg
mov
jne
lcall
lret
mov
lock
mov
imul
cmp
psllw
and
ss
aad
adc
stos
mov
fucomi
in
pop
jle,pt
into
stos
sbb
test
jmp
insl
addr16
xchg
outsb
fwait
or
int
push
cmc
inc
mov
xchg
jg
enter
loopne
inc
xor
sbb
xor
lcall
xlat
pop
lahf
test
mov
pop
jnp
ret
loopne
and
popa
arpl
or
and
scas
aaa
sbb
or
in
mov
aam
test
jp
inc
sbb
adc
mov
dec
and
xchg
popf
push
inc
into
rcrb
repz
test
xor
pop
sbb
cmp
fcoml
sub
cmp
push
lahf
mov
in
sub
inc
test
ja
xor
rcrb
pop
adcl
mov
adc
add
push
divb
in
iret
imul
dec
xor
pop
arpl
dec
push
jmp
cmp
dec
fistl
sbb
push
sub
int
in
sbb
rorl
daa
and
add
xchg
or
xchg
push
sbb
jo
xchg
ret
adc
cmp
dec
add
cmpsb
insb
sbb
movsb
sbb
lret
pop
mov
fs
movsb
popa
cld
mov
dec
jne
pop
lock
in
dec
jmp
pop
adc
dec
in
fs
fmul
xchg
idivb
jo
nop
leave
popf
jae
sub
and
scas
add
lcall
xchg
push
or
out
das
or
adc
stos
setns
adc
sti
mov
or
xchg
mov
inc
dec
pop
sub
add
jg
push
stos
or
xor
push
pop
imul
je
cmp
mov
mov
in
xchg
adc
sub
xor
jmp
jbe
stos
push
dec
jg
cmp
mov
movsl
pop
mov
lcall
adc
pop
andl
adc
mov
aad
push
popa
dec
cli
mov
xchg
and
loop
mov
inc
mov
mov
sbb
xor
adc
sti
nop
aaa
ret
popf
mov
mov
cmp
lret
xchg
mov
jg
push
mov
cmp
push
push
lock
ja
lods
push
repz
mov
dec
lahf
and
js
or
jne
icebp
adc
jnp
nop
jg
out
pop
shlb
inc
push
sub
xchg
xor
sbb
push
jg
mov
aaa
sbb
add
int
cs
iret
sbb
add
mov
push
push
lods
add
mov
xor
lods
mov
xor
ja
clc
pop
mov
lods
aam
stc
in
push
hlt
lods
mov
mov
hlt
lcall
stos
mov
das
adc
aad
mov
popf
shrl
popf
and
pushf
cmp
outsl
add
in
fwait
imul
adc
dec
daa
stos
out
ret
int3
mov
stos
xor
jge
push
push
imul
add
xchg
xchg
mov
shlb
pop
mov
cli
inc
xor
sub
fyl2xp1
add
iret
jp
jmp
push
pop
mov
mov
cmp
stc
pop
sbb
cwtl
inc
rcrb
sbb
mov
inc
ss
sbb
jl
das
add
jmp
jle
pop
leave
stos
cmpsl
mov
xor
loopne
add
jnp
dec
cli
imul
repnz
dec
jecxz
cmpsb
repz
mov
push
mov
mov
es
lcall
jle
leave
iret
xor
je
dec
pop
test
mov
add
mov
pusha
lock
mull
aaa
ss
mov
sbb
mov
dec
fistps
ja
sub
or
jne
sti
out
fildll
sub
stc
adc
push
cmpsl
movsb
push
push
ss
cmpsl
dec
sbb
pop
push
mov
inc
mov
stc
pop
lods
add
sub
cmp
mov
dec
add
xchg
sbb
push
mov
cltd
cmpl
mov
cmp
gs
sub
push
mov
jnp
cmpsl
pushf
je
ja
push
xor
pop
push
dec
mov
cli
sbb
insb
fs
jae
push
inc
movsb
ds
sbb
xchg
push
es
xchg
pop
add
les
push
mov
outsl
lods
mov
lret
push
scas
bound
pop
pop
stos
and
adc
mov
ds
mov
lds
add
js
call
in
lock
jno
mov
subb
mov
push
mov
adc
rcrb
adc
push
sbb
cmpsb
push
add
ss
cld
mull
shlb
cmp
in
xchg
out
jnp
scas
ds
xchg
mov
addl
mov
push
jno
or
push
fsubrl
push
gs
jo
and
addr16
jmp
stos
aaa
pop
or
lods
movsl
fidivl
into
scas
pop
sub
loop
cmp
sub
sub
adc
jne
push
sti
fiaddl
call
popf
dec
pop
sbb
loopne
shlb
cli
stos
movsb
pop
inc
pop
adc
jae
and
or
mov
cmp
pushf
jecxz
push
test
push
sub
sbb
and
sub
mov
faddl
fwait
out
push
add
jg
mov
popa
adc
cmp
scas
pusha
mov
mov
and
add
dec
xorl
popa
push
push
push
out
daa
jg
cmpsb
xchg
sti
loope
popf
in
jg
cli
sbb
inc
clc
cmp
mov
xor
jne
dec
leave
call
sub
pop
icebp
cmpsl
fldl
xor
mov
cmp
pop
imul
xchg
pop
fidivrl
jb
das
and
mov
data16
jecxz
stos
fsubrs
cli
mov
push
jecxz
add
push
call
mov
add
clc
lret
fxam
pop
xchg
lret
xchg
divl
rclb
cli
mov
or
fistpl
cmpsb
in
mov
jl
ds
push
scas
stc
es
xchg
cwtl
xor
stc
shlb
ficoml
add
outsb
rolb
or
imul
xor
rorl
mov
cmp
leave
out
cmp
fldenv
xchg
jns
jle
and
test
sub
test
inc
pushf
in
jl
pushf
shll
add
cld
rol
xchg
mov
pop
mov
push
insb
scas
xor
lret
roll
xor
dec
dec
lcall
dec
outsb
data16
cmp
and
xor
ss
mov
cmp
xor
fnsaves
add
and
insl
and
cmp
adc
mov
adc
cmpsb
popf
das
xchg
adc
fisubrl
shrb
push
insb
push
jne
test
xlat
sbb
adcl
pop
out
push
and
mov
add
adcl
ja
ljmp
mov
into
mov
mov
push
int3
popa
rorb
aaa
dec
repz
mov
mov
jb
sub
push
in
js
aad
jmp
mov
test
xor
pusha
fsubs
leave
mov
inc
cmp
adc
lods
push
inc
mov
sbb
int
mov
jo
test
push
stos
dec
popa
xor
lds
in
or
sbb
ja
shlb
pop
push
mov
push
in
sarb
into
dec
mov
mov
inc
add
pop
sub
adc
and
aad
inc
inc
je
outsb
out
push
aaa
fidivrs
and
sbb
cs
mov
movsb
push
cltd
cmp
adc
outsl
xor
test
xchg
push
inc
pop
and
pop
out
popf
stos
xchg
push
dec
jp
movsl
test
jnp
sbb
lahf
cmpsl
in
lea
jo
fs
movsb
fstpt
jp
add
mov
pop
sbbb
stos
enter
pop
icebp
insb
sbb
repz
mov
cli
lret
in
sbb
divl
push
xchg
adc
popa
test
mov
jl
xchg
andl
out
insb
push
inc
inc
jne
or
sub
jecxz
mov
cmpsl
in
cmp
xor
mov
add
add
adc
dec
je
movsb
cmpsl
or
push
jo
cmp
push
insb
mov
adc
jne
inc
dec
addl
add
mov
pusha
mov
or
sbb
sub
add
cmp
ja
mov
xor
or
mov
dec
fdivr
imulb
cltd
push
mov
gs
pusha
ret
and
lock
mov
add
push
push
aas
dec
mov
sub
xchg
inc
cmp
or
adc
xchg
sbb
sarb
cmp
es
push
nop
xor
xor
jns
fisttpl
adc
push
cmc
std
mov
push
daa
aam
ret
push
dec
dec
sbb
popf
push
jp
mov
push
out
add
int3
rclb
scas
arpl
cmp
jp
adc
jno
jg
das
sbb
mov
cli
pop
pop
clc
in
fcomps
fucomip
insl
lcall
pusha
dec
mov
pop
adcb
negb
leave
add
loope
mov
popf
outsl
mov
sub
dec
sub
cmp
pusha
fcompl
mov
mov
enter
jecxz
lods
push
iret
xor
out
cli
inc
xor
aaa
call
dec
push
aaa
daa
bound
pop
bound
mov
in
mov
arpl
mov
imul
inc
rcrl
cmc
lock
xchg
pop
js
xchg
jmp
xchg
push
xor
jae
shl
shlb
adc
cmpsb
movsb
mov
dec
cmp
mov
and
loopne
jnp
xchg
lock
out
and
push
ret
push
lahf
dec
fldcw
cwtl
aad
push
ljmp
cmpsb
sub
ret
lcall
xor
dec
mov
out
sbb
sbb
outsb
int3
jge
xchg
xor
test
daa
sbb
push
lcall
fcoml
and
stos
add
or
mov
pop
hlt
pop
pop
xor
mov
add
mov
jecxz
std
pop
xlat
pusha
lods
push
adc
out
sbb
pop
push
int3
out
out
cs
lret
repnz
mov
adc
leave
push
mov
mov
inc
adc
jg
xchg
pop
adc
insb
in
jl
aad
in
xor
int3
data16
mov
ja
cmp
pavgb
imul
gs
in
in
sbb
repz
aad
stos
or
ja
ja
sbb
iret
les
jne
repnz
call
cwtl
cmp
or
outsb
sti
push
add
test
jecxz
sbb
pop
adc
rcrb
dec
jae
sbb
lcall
adc
push
push
xchg
push
jae
test
mov
push
nop
push
mov
xchg
out
call
dec
ljmp
and
dec
cs
cwtl
pop
sub
mull
sbb
cmp
rclb
xor
fcmovu
je
scas
ljmp
mov
jmp
icebp
add
jne
xchg
stc
nop
cmp
mov
xchg
sbb
enter
pop
out
push
pop
dec
push
pop
shl
xor
les
mov
or
sub
outsl
iret
into
rolb
dec
add
loop
mov
sub
mov
jo
stos
xchg
addr16
mov
jns
fistps
dec
fwait
gs
push
aaa
xor
jmp
adc
sub
sub
dec
adc
xchg
jo
ret
test
mov
aad
sub
push
sub
xchg
or
and
dec
ret
aaa
mov
stos
jno
push
add
jecxz
popf
mov
push
stc
and
test
xchg
es
sbb
adc
hlt
mov
sbb
negb
scas
sbb
pop
xor
nop
or
sbb
fdivrs
arpl
jmp
outsb
mov
stc
xor
jl
jecxz
mov
cwtl
xchg
in
mov
push
jecxz
xchg
cltd
int3
adc
jae
mov
loopne
repz
push
xlat
shrb
test
aas
iret
clc
jae
inc
push
inc
cmp
sbb
out
ja
xor
lret
orl
cmc
jg
iret
sbb
dec
pop
movsl
add
xor
faddp
mov
jecxz
mov
mov
flds
push
sbb
leave
loopne
sbb
xor
aam
mov
mov
push
in
dec
push
add
dec
call
orb
xchg
out
fiaddl
jb
lock
pop
mov
int
cmp
push
push
sub
ja
cld
dec
push
mov
lods
inc
out
imul
mov
add
jmp
cwtl
cmpsb
ljmp
jg
mov
mov
incb
inc
push
div
outsb
xchg
repz
fldl
inc
mov
sub
or
outsl
sub
mov
push
aad
mov
xchg
jge
sbb
mov
gs
iret
mov
xchg
xorb
in
in
or
cmp
jmp
push
jae
inc
andb
fldcw
testl
lock
arpl
shl
and
sbb
pop
mov
imul
add
or
jae
daa
fimuls
test
jno
fadds
scas
push
mov
cwtl
adc
sub
pop
mov
out
addb
shrb
call
and
rcll
inc
jp
pop
sub
push
pop
test
data16
sbb
push
cwtl
ret
int
cmp
mov
xchg
adc
test
jp
outsl
outsb
and
daa
mov
cmpsb
xchg
pop
push
lcall
adc
cmc
pushf
xchg
int
popf
mov
mov
mov
fs
divb
push
neg
dec
inc
push
fwait
jg
jecxz
dec
or
jno
sarl
pop
xchg
and
push
sub
jb
inc
pop
sub
sub
dec
hlt
leave
jg
xor
icebp
lds
bound
push
xchg
adc
mov
lock
lret
rcr
sarl
sub
sahf
lea
mov
add
sbb
sbb
push
inc
lea
mov
jmp
sbbb
xor
xorl
xchg
lods
pop
sbb
lcall
inc
xchg
das
popa
popf
psadbw
mov
push
addb
cmp
insl
jo
xor
pushf
fisttpl
adc
adc
adc
xor
cmp
cld
jns
xor
je
sbb
xchg
mov
movsl
jnp
mov
xchg
or
scas
or
rorl
outsb
mov
sti
pusha
jno
int3
sarb
mov
popf
adc
lea
mov
mov
pop
and
int
fwait
adc
aaa
insb
adc
xchg
jo
xor
ds
cmp
fstpt
xor
fs
cld
jae
stos
mov
push
mov
xchg
dec
add
sub
fs
mov
dec
shrl
sbb
push
push
lods
mov
xchg
sti
lds
add
push
sbb
movsb
cmpsl
stc
rcl
push
adc
mov
lods
insb
adc
xchg
inc
push
push
pop
jae
dec
pop
in
ds
fadds
daa
xor
and
dec
insl
jne
xchg
and
pop
xor
sbb
mov
hlt
sbb
sbb
lret
ja
xlat
adc
inc
in
popa
loope
and
pop
jne
sbb
out
push
push
mov
xchg
push
stos
jb
je
int3
or
and
sbb
fwait
xchg
lods
jns
cmpsb
dec
dec
movsl
std
or
jae
outsb
stc
xor
jb
daa
mov
inc
lea
inc
jl
xchg
xchg
xor
xchg
jle
cmpl
mov
mov
mov
std
mov
repz
gs
fwait
scas
pop
and
mov
fnstenv
ret
cwtl
sbb
and
mov
push
test
push
jp
and
cmp
int
cmp
adc
call
jns
mull
test
ret
xchg
movsb
mov
pop
test
inc
ja
loope
lret
dec
dec
lahf
sub
lds
cmp
cmp
jl
mul
mov
adc
ljmp
movsb
lahf
imul
dec
repnz
add
popa
imul
cmp
cmp
dec
mov
sub
inc
addr16
adc
mov
jne
insb
inc
push
dec
mov
mov
dec
xchg
mov
shrl
stos
pop
jo
pop
dec
or
xor
or
mov
je
shrl
in
jnp
ljmp
or
shlb
jle
push
fs
mov
dec
imul
nopl
inc
lahf
push
cltd
xor
xchg
test
pop
scas
mov
pop
push
xchg
leave
outsl
fcomps
push
rorl
cmp
lret
jns
stc
push
sbb
pop
xchg
jle
aam
xchg
mov
imul
jbe
pop
mov
mov
fsubs
jecxz
subl
cwtl
sbb
xchg
pop
popa
imull
push
pop
das
int
aas
mov
clc
in
loop
movsb
aaa
xlat
mov
lock
inc
mov
mov
cmc
or
aaa
xor
icebp
pop
and
gs
inc
nop
mov
ficoml
in
enter
daa
xor
sub
sbb
cs
jp
fiadds
das
test
push
gs
sub
jp
dec
pop
mov
ljmp
das
int
push
push
out
imul
xor
pop
xlat
lahf
mov
dec
sbb
mov
jge
out
or
mov
pop
aam
jmp
jnp
test
xchg
pop
and
js
inc
inc
cltd
scas
lret
mov
inc
jmp
mov
push
and
xor
insb
inc
out
push
fstpl
push
mov
inc
loope
cmp
outsl
or
push
push
nop
mov
gs
cli
hlt
sahf
js
pop
jbe
shll
cli
or
lods
cld
arpl
dec
sub
dec
fnstsw
xchg
in
sbb
lahf
das
jmp
inc
scas
icebp
mov
movsb
mov
frstor
add
imul
inc
and
inc
das
xlat
lock
xchg
cs
std
les
popf
push
push
cmp
popa
pop
enter
jno
nop
clc
shrb
jmp
jp
push
jae
pop
and
in
push
out
xor
iret
jno
adc
aad
push
sub
gs
sub
iret
out
loopne
dec
pop
fsubl
xchg
push
jnp
adc
xchg
cmpsb
sahf
xor
movsl
subl
ret
mov
icebp
notb
cmp
xchg
rcll
lods
jg
push
lret
or
repnz
inc
neg
push
loopne
xor
pop
mov
jmp
mov
mov
loopne
stos
mov
lods
xchg
xor
out
clc
xchg
sub
loopne
test
or
push
xor
adc
and
jae
mov
jl
fsts
jp
cmp
mov
inc
adc
jno
xor
sub
es
adc
aaa
jae
cmp
push
mov
xor
mov
test
out
movsb
int
push
mov
push
mov
mov
xchg
mov
imul
xchg
int3
shrb
pop
adc
mov
pusha
jp
sbbb
insl
xchg
out
jno
sbb
dec
les
arpl
add
pop
mov
js
mov
call
jo
pop
nop
lds
inc
jno
lods
adc
pop
arpl
mov
xchg
pop
xor
dec
inc
std
pop
and
add
gs
jo,pn
cmp
lret
jb
push
es
cmpl
mov
sbb
pop
lea
mov
dec
ja
aad
testl
pop
lock
popf
pop
inc
pop
push
fs
or
or
pop
sub
sbb
xchg
popa
jmp
mov
mov
mov
jno
gs
dec
push
adc
test
jbe
or
ret
xchg
add
cmp
xchg
adcl
daa
flds
mov
aad
pop
out
pop
dec
xchg
push
add
jb
repnz
or
mov
push
je
pop
sbb
aam
cmpsb
sbb
pop
movsl
aad
scas
cmp
xchg
lods
pop
push
imul
push
hlt
xchg
lods
pop
jmp
and
iret
xor
mov
lods
cmp
push
sar
mov
sub
push
ret
jmp
ret
int
mov
xor
aam
cmpsl
out
xor
inc
orb
test
dec
in
in
das
xchg
stos
sub
sahf
adc
inc
pop
je
cmp
das
faddl
pop
mov
mov
outsb
mov
test
add
repz
lds
jae
adc
daa
out
push
negb
insb
mov
ret
cld
push
ss
pop
loope
inc
test
cmp
add
and
lret
mov
sub
jecxz
adc
xor
adcb
shlb
fwait
add
out
in
and
sub
inc
nop
jecxz
out
lahf
pop
dec
push
xchg
inc
test
push
out
cmp
mov
xor
hlt
inc
out
cmp
sub
clc
jo
in
ss
xor
and
push
jnp
loope
push
aaa
int3
es
sub
and
sahf
adc
add
shrb
rorb
sbb
fists
aas
out
mov
loope
jbe
scas
test
in
and
in
mov
out
movsl
jg
fs
pop
add
pop
push
repnz
push
cltd
push
inc
enter
js
fisttpll
repnz
xor
cld
clc
sbb
jno
aaa
int
cli
jl
xchg
push
std
pop
addr16
andl
jae
adc
adc
gs
lea
into
fwait
aad
jnp
insb
gs
out
dec
test
jge
ja
and
pop
lods
lahf
mov
imull
cltd
mov
ljmp
jle
xor
sub
adcb
fucomp
mov
test
push
cmpl
mov
add
addr16
xchg
or
and
movsl
push
pop
test
das
int
xlat
mov
sbb
jo
or
sbb
lea
imul
add
mov
cmp
ds
xor
rorl
xor
stc
out
add
bound
cmp
ss
call
dec
lods
sbb
mov
fidivrs
cmp
insb
jb
xchg
adc
rorb
inc
jp
mov
push
adc
test
xchg
jecxz
pop
cmp
xchg
repnz
push
mov
or
jmp
sbb
nop
sub
jl
cltd
jb
lret
pop
jg
jbe
push
fs
mov
sarb
stos
inc
or
inc
cmpsb
adc
pop
cltd
les
scas
adc
fs
stos
cmp
divb
lcall
outsb
ds
dec
pop
dec
jnp
xchg
in
test
jnp
dec
inc
push
icebp
pop
scas
dec
cmp
sbb
imul
mov
gs
or
hlt
add
jbe
outsl
lret
js
mov
push
into
mov
mov
cli
shrb
div
sub
hlt
adc
dec
jbe
cltd
int3
sub
push
dec
jmp
jb
scas
jge
sbb
psrld
ret
dec
fidivrs
mov
xchg
pushf
les
adc
in
and
lods
scas
dec
and
outsb
xchg
push
mov
int
sti
sub
stc
outsl
mov
test
scas
pop
xchg
jmp
mov
das
lods
or
add
lock
addr16
je
mov
mov
lock
loope
xchg
inc
inc
imul
mov
dec
xor
pushf
push
mov
movsb
aaa
lods
push
or
cltd
movsb
pop
sbb
call
xchg
lods
jbe
cmpsb
mov
inc
push
aaa
in
rol
lcall
ja
cmp
xchg
fcoms
pop
xchg
hlt
and
jae
ja
test
cld
pop
mov
xor
or
cld
out
and
ljmp
mov
mov
mov
cmp
idivl
mov
xchg
cmpsl
xchg
adc
popf
or
inc
and
fbstp
dec
stos
addr16
int
ja
or
roll
mov
lret
jl
sbb
cli
jmp
pop
cli
jl
jmp
shrl
xlat
mov
add
mov
cmp
cmpsb
mov
call
jb
in
sub
ljmp
lds
push
jecxz
notb
gs
lods
dec
push
imulb
fwait
sti
mov
shr
pop
test
call
les
clc
or
cs
dec
loop
sbb
dec
sub
call
pusha
push
mov
sub
jp
test
push
sub
xor
movsl
dec
inc
pop
aaa
int
insl
xor
pop
outsb
xchg
mov
cmpsl
pop
neg
stos
cmp
movsl
pushf
insl
mov
dec
jmp
lods
flds
out
pop
stc
test
or
insb
loop
dec
xchg
sbb
popf
nop
aas
mov
sub
mov
or
loop
jle
addl
pop
stc
dec
popf
stc
out
mov
add
dec
inc
lret
sub
jbe
call
repnz
adc
mov
nop
mov
inc
fidivs
cltd
mov
inc
idivl
sar
sub
filds
addb
ret
xchg
cmc
cmpsb
push
push
mov
lcall
daa
cmp
ss
rolb
icebp
mov
push
aaa
push
cs
add
mov
mulb
dec
push
xor
pop
inc
xchg
dec
mov
ret
je
fsubr
sub
xchg
mov
rcl
jge
int3
dec
lahf
popf
add
jl
sahf
cs
lcall
fmuls
add
aas
roll
in
sub
add
ss
cmp
and
push
iret
add
inc
or
jge
jp
xchg
fwait
dec
jge
test
test
pop
test
pop
mov
push
jecxz
push
repnz
std
hlt
mov
movsl
aas
cmp
jmp
call
test
pop
sbb
add
inc
pop
sbb
adc
xchg
xchg
or
repz
jg
or
push
addr16
ss
jo
aas
sub
ljmp
data16
lods
pop
sub
es
shrb
adc
jbe
out
repnz
jb
adc
and
rcrl
rcrl
in
inc
jmp
fimuls
sub
push
insb
std
xor
push
mov
lock
sbb
push
pop
cmpsb
jbe
xchg
mov
sbb
je
lret
cld
cwtl
lds
insl
mov
jnp
cmp
rorb
fwait
push
add
lock
aam
cmpsl
mov
jo
add
jae
xor
or
jge
and
or
cli
repnz
mov
lds
insb
mov
std
stc
cli
adc
cmp
pop
loopne
insl
mov
mov
mov
sub
push
aam
push
shl
sub
sbb
aad
popa
dec
mov
mov
es
mov
lahf
std
cmp
push
aaa
test
cli
mov
pop
test
or
jle
xchg
cmp
ret
push
xchg
cmpsb
push
dec
js
out
and
scas
je
sub
aam
sarl
and
or
adcl
in
shrb
xchg
loop
sbb
enter
or
imul
jg
xor
xlat
popa
outsb
aaa
dec
test
mov
push
or
addb
mov
dec
loopne
mov
jg
sbb
shll
or
test
pop
jmp
mov
mov
adc
ss
lret
ret
in
movsl
cmp
es
xchg
xchg
or
push
xchg
push
sbb
sub
scas
lds
push
dec
mov
or
out
dec
jnp
adc
loope
jp
mov
cltd
frstor
adc
insl
dec
jns
cmc
push
sti
push
jge
lret
mov
xchg
or
sub
stc
cld
arpl
movsl
sbb
lcall
jl
push
pop
dec
adc
inc
and
xchg
xor
sbb
add
xor
jl
xchg
pop
fmull
shrb
push
jle
imul
jae
and
mov
neg
mov
mov
mov
das
jno
xchg
cpuid
push
movsl
arpl
mov
cmp
xchg
fldz
test
aaa
shrb
dec
and
mov
dec
lcall
and
mov
push
stc
adc
hlt
mov
dec
sbb
cmp
sahf
in
dec
and
push
mov
out
sub
imulb
xchg
jbe
push
sbb
mov
sbbb
stos
pop
idivl
adc
add
mov
adc
cmp
sar
dec
pusha
mov
leave
pushf
insb
mov
or
bound
mov
jge
pop
jne
and
clc
cmpsl
jecxz
adc
pop
and
lret
cld
outsb
sub
mov
cmp
pop
fcoms
jno
cwtl
scas
inc
enter
fs
inc
mov
cmc
sbb
add
dec
sahf
loop
xor
test
inc
hlt
sub
adc
pop
xor
jle
push
repz
stos
lcall
mov
add
ljmp
sub
mov
pop
push
dec
pop
adc
adc
cmpsb
pop
pop
sub
xor
fstl
bound
js
push
out
lods
in
lret
rcll
mov
ret
push
test
lock
pop
fsubl
lods
push
clc
or
jnp
mov
mov
sbb
pop
sbb
repnz
sbb
pop
xor
jo
lret
jge
loope
in
insl
mov
inc
test
mov
or
cmp
ja
sahf
bound
xor
sbb
xchg
push
out
jbe
outsb
cvtpi2ps
add
loop
xor
test
lea
nop
mov
pop
lret
lcall
test
aad
nop
insb
cmp
cltd
test
jnp
sub
stos
and
aad
lcall
fdivrl
lods
mov
mov
push
adc
jecxz
sub
jl
nop
lcall
fwait
jmp
and
inc
in
int3
add
adc
xor
ret
out
push
scas
fimuls
mov
jl,pt
mov
push
cmpsb
pop
mov
in
xlat
int
fs
mov
and
mov
jbe
sti
jl
fsubrs
inc
or
sbb
mov
pusha
mov
add
repnz
aad
cmpsb
aas
add
addb
pop
fcmovne
inc
jge
mov
roll
dec
push
and
xchg
push
adc
push
push
movsl
and
cmp
and
sub
jp
xor
xchg
push
mov
cli
lods
add
outsb
adc
push
push
cmp
cmp
jmp
mov
mov
sbb
xor
sub
call
xor
jecxz
jmp
dec
dec
push
lret
jo
sub
and
into
add
int
mov
ret
dec
pop
cmp
sbb
adc
add
outsl
daa
lahf
xor
and
je
xchg
ss
jmp
fdiv
sbb
shll
xchg
in
repz
lock
dec
xchg
jge
mov
loopne
mov
sahf
add
dec
adc
incl
mov
aas
repz
cld
add
sbb
loop
cli
data16
insl
mov
mov
aaa
push
cmpsl
mov
dec
fs
and
nop
xor
out
popf
pop
insl
cltd
sub
jmp
add
lahf
stc
jecxz
sbb
jnp
ljmp
adc
xor
jmp
or
mov
jns
and
cltd
insl
idivb
shlb
sbb
test
pop
leave
push
mov
or
xchg
dec
jecxz
sub
xor
mov
cmp
jbe
sub
xor
jge
movsb
movsl
push
pusha
cmp
mov
int
scas
pop
push
adc
loope
adcl
arpl
add
je
in
int
sahf
insb
fs
repnz
mov
in
int3
push
shrb
mov
adc
in
jno
jmp
mov
lret
insb
imul
mov
mov
clc
sbb
in
sbb
sahf
mov
stc
adc
jmp
fcomps
pop
lret
mov
mov
hlt
repz
orb
rcrl
push
jo
test
ret
cli
lods
mov
jmp
test
xorb
mov
xlat
movsb
cmp
fsubp
leave
insl
push
pop
adc
sbb
cmp
shlb
shl
das
loop
jecxz
out
dec
jg
inc
iret
or
sbb
addl
daa
xor
shlb
shlb
jns
aad
jl
cld
or
pushf
sub
js
outsl
xor
fsubrl
mov
sbb
and
out
sbb
cli
sub
push
enter
pop
sbb
sti
pop
xor
jns
jg
cltd
jp
jmp
movsb
leave
sbb
lock
push
jle
outsb
repz
push
enter
movq
stos
mull
test
int
insb
inc
jns
lahf
inc
repnz
imulb
push
cmp
jmp
ss
xchg
push
stc
sbb
fcoml
andl
and
cmp
push
or
cmp
scas
mov
xlat
aas
dec
lret
insb
dec
cli
xor
pop
shll
push
pop
ret
mov
pop
xor
cmp
jo
jle
inc
sbb
int
mov
sbbl
jecxz
adc
xchg
inc
lock
ret
fs
cmp
mov
mov
or
loope
xchg
shl
or
push
fidivl
cmpsl
es
sbb
sbb
mov
push
sub
inc
adc
pop
jno
mov
popf
out
pop
ret
leave
int3
out
or
aas
jno
mov
pop
xor
push
mov
pop
dec
int
aam
dec
and
ret
imul
inc
shll
adc
nop
stos
mov
mov
outsb
xor
movsl
inc
push
add
jge
xchg
popf
lahf
mov
xor
sti
mov
aad
inc
sub
jmp
iret
pop
insl
shl
mov
dec
pop
xchg
lcall
mov
push
mov
enter
arpl
insl
pop
fists
mov
popf
and
aam
pop
mov
adc
hlt
jmp
shl
addl
push
mov
sub
gs
pop
shl
bound
adc
mov
and
pushf
andb
loope
dec
adc
adc
add
or
fildl
stos
jp
inc
fnstcw
jge
int3
jge
adc
imul
xchg
in
je
in
fsubl
inc
call
sbb
pop
and
aas
or
lds
fs
dec
cmpsl
push
add
cmpsb
pushf
lock
mov
lret
push
xchg
sbb
jb
aaa
out
out
jno
mov
and
int
push
popf
push
or
mov
inc
je
stos
cltd
pop
inc
mov
and
add
and
popa
pusha
cmc
ds
add
push
mov
adc
or
mov
jmp
sbbb
int3
stc
mov
stc
insb
push
sub
ret
adc
jb
jecxz
push
in
pop
fdecstp
jns
add
add
dec
lret
in
adc
mov
cmc
inc
cmp
pop
repnz
dec
into
out
adc
ds
jbe
add
adc
mov
sti
sbb
jg,pt
cmp
shlb
aad
paddsw
cmc
dec
mov
mov
mov
in
lea
lods
inc
in
xor
cli
outsb
jp
push
mov
or
lahf
aad
and
push
mov
xchg
fiaddl
cmpsb
int
cmc
int
mov
jbe
jg
les
mov
cs
and
xchg
mov
nop
cmp
push
adc
mov
jmp
ljmp
call
out
cli
movsl
ss
cltd
imul
sbb
lods
into
mov
rcl
jmp
test
jae
inc
and
lcall
adc
test
enter
das
add
pop
jae
dec
sti
int
test
jg
imul
clc
push
cmp
sub
shl
lods
mov
in
std
push
mov
inc
push
or
fistl
jne
test
repnz
sbb
in
sahf
int3
lock
adcb
push
lds
or
out
arpl
mov
jnp
cmpsl
mov
jl
dec
push
iret
adc
dec
lcall
ficomps
pop
push
xchg
add
sub
add
mov
cld
cmp
inc
adc
clc
rcrb
loopne
adc
pushf
out
inc
dec
and
scas
lods
ret
jmp
mov
orb
repnz
rcrb
adcl
sub
push
mov
out
movsl
ja
adc
in
fwait
pop
dec
jmp
pop
outsb
orb
ss
sbb
add
sub
mov
icebp
divb
jle
fisttpl
pop
mov
dec
push
out
data16
jne
leave
rcl
cwtl
addr16
jno
cmp
push
gs
mov
cmp
negl
xchg
inc
andb
mov
mov
mov
adc
pop
mov
jae
add
push
stos
fisttps
ja
or
orb
addr16
mov
push
scas
dec
push
mov
sbb
sbb
push
fildl
mov
fucomip
inc
xchg
mov
sbb
cwtl
mov
mov
into
icebp
daa
xchg
add
dec
int3
in
pushl
xchg
fisubs
push
aas
scas
or
push
in
push
mov
jl
xchg
mov
mov
xchg
jo
mov
dec
dec
out
and
add
or
enter
xchg
jnp
lret
inc
adc
stos
pop
fmul
out
inc
inc
push
mov
xchg
pop
jno
adc
cli
lcall
pause
xorb
in
and
cmp
jp
arpl
mov
aam
lock
sbb
test
ds
xor
inc
or
idivb
cli
push
in
dec
roll
div
out
aas
inc
movsl
popa
mov
loop
ss
sub
jns
cmp
sub
mov
pop
mov
jbe
lods
cmp
mov
and
insl
xchg
or
ret
xchg
fcmovnb
daa
mov
mov
inc
stc
jge
jae
xor
lcall
outsl
pop
or
negl
enter
fcoml
call
jb
mov
sub
cs
int3
movsl
sub
repz
imul
and
sub
fidivl
pusha
mov
or
dec
dec
add
rcl
jmp
rclb
mov
mov
lcall
push
xchg
pop
testb
leave
cmp
ret
push
mov
inc
sub
add
outsl
into
lahf
adc
rorb
loopne
mov
repnz
mov
jne
xor
mov
push
cmp
mov
pop
and
mov
outsb
adc
scas
lds
loop
push
and
mov
cltd
ljmp
mov
mov
dec
sub
and
scas
push
cmp
outsl
repz
xchg
dec
insb
xchg
jae
fldl
add
in
mov
cmp
in
adc
or
test
and
jno
pop
lahf
mov
rclb
dec
sbb
shll
incb
inc
adc
pop
mov
or
mov
pusha
mov
imul
inc
mov
and
out
movsl
int3
scas
mov
add
inc
jge
push
mov
mov
stos
mov
jmp
sub
lds
sub
shrb
push
push
sbb
sbb
mov
cmp
test
popf
mov
sarb
cmp
inc
xchg
jg
out
dec
xchg
mov
lret
addr16
daa
je
pusha
daa
adcb
aad
xor
aad
fs
shl
fstpt
pop
xor
std
mov
and
jl
daa
cld
mov
rol
cmp
mov
or
pop
adc
and
mov
aaa
push
addr16
mov
cmp
pop
mov
jg
and
aam
xchg
int
fildl
ret
fcoml
test
and
and
push
test
push
sub
in
inc
fxtract
mov
xor
repz
cmp
jbe
or
xchg
xchg
mov
pop
push
dec
icebp
or
stos
pusha
addb
dec
jecxz
jo
sbb
addl
inc
insl
cmp
aad
jmp
xchg
enter
in
cmp
shrb
movsb
movl
push
xchg
mov
mov
lcall
add
flds
enter
push
pop
cmc
push
push
clc
push
fwait
adc
repnz
xchg
scas
push
sbb
inc
es
cs
nop
in
sahf
dec
jae
mov
cmp
movsb
mov
sub
aam
sahf
lds
dec
mov
fdivl
cli
mov
mov
in
out
push
cmp
std
push
fimuls
cmp
mov
or
pusha
rcl
imul
dec
adc
pop
push
jbe
push
jb
stc
imul
mov
movsb
fs
add
scas
das
enter
test
xchg
xor
outsb
insl
sbb
int3
add
fcmovb
push
ret
cltd
insl
popf
pop
lahf
dec
add
int3
lock
xchg
mov
mov
popa
dec
flds
repnz
push
stos
into
lds
push
lods
pop
scas
popa
test
addr16
mov
jmp
ror
jmp
out
xorl
cmp
xchg
pop
dec
sub
bnd
jecxz
xchg
mov
divl
xor
add
xchg
xor
mov
aad
test
mov
push
push
jmp
popf
loope
ds
lcall
iret
jnp
sahf
nop
mov
fidivrl
popa
add
outsb
pop
sbb
arpl
cmp
xchg
popf
imul
gs
rcl
push
ss
rclb
sub
sbb
cwtl
addr16
iret
xor
xchg
push
in
hlt
cmp
lods
push
enter
inc
lcall
sbb
scas
stc
insb
ret
jecxz
mov
xchg
icebp
dec
push
inc
jmp
arpl
push
cmpsl
jp
rcl
pop
mov
rorb
in
pop
xor
scas
mov
fisubl
gs
fisubs
add
cltd
dec
imul
jbe
test
ss
lea
push
or
mov
sub
jmp
in
xor
ja
mov
and
sbb
ret
pop
dec
gs
mov
jbe
mov
sti
xor
sub
cmp
int3
mov
test
mov
jne
dec
push
push
ja
add
inc
push
lods
and
lods
pop
mov
xchg
fisubs
je
in
add
nop
iret
out
pop
sub
les
mov
or
push
popa
sub
cmpsb
mov
leave
inc
push
daa
sbb
das
scas
test
cmpsb
sub
jo
dec
jae
test
mov
inc
pop
xchg
mov
jae
push
out
lods
or
pavgb
mov
mov
adc
ror
adc
mov
gs
mov
aad
in
std
std
ret
sub
mov
fs
pop
dec
sub
mov
inc
and
cmp
arpl
adc
or
pop
out
xchg
or
push
sbb
stos
add
mov
pop
inc
inc
das
xchg
mov
cmc
out
pop
cmpsb
jmp
mov
inc
in
sahf
xchg
jb
int3
xlat
iret
dec
js
or
sbb
xor
xor
inc
sti
test
jp
nop
mov
fsub
or
pop
lahf
pop
pop
test
lods
pop
push
std
jbe
adc
xor
cmp
les
cmp
lods
and
movsb
outsb
cmc
pusha
push
xchg
adc
std
cwtl
fistpll
or
outsb
sub
sub
jge
sub
loope
or
jle
nop
jno
imul
pop
sarb
cmpsb
gs
movsb
shll
sbb
pop
shll
into
cmp
push
inc
cmp
push
pushf
xchg
cmp
cld
lcall
adc
pop
jmp
enter
daa
mov
xchg
cmp
push
or
xor
inc
roll
out
stos
bound
sub
fdivrs
fsubrp
mov
aaa
loope
mov
sbb
xchg
pusha
mov
mov
push
xchg
dec
xchg
stc
int
rsqrtps
add
inc
mov
jnp
dec
or
int3
ds
or
adc
ds
pop
js
stos
lods
inc
test
scas
pop
xor
mov
movsl
fwait
orl
mov
sbb
loopne
pop
in
leave
andl
andb
inc
jne
imul
adc
push
rcll
fdivrs
aaa
pop
imul
sub
call
rolb
sbb
adc
lret
mov
sub
xchg
mov
xchg
xchg
xchg
mov
popf
mov
jmp
das
xor
xchg
inc
lock
and
divl
sub
out
mov
cwtl
and
sarl
nop
mov
hlt
xchg
mov
sub
test
int3
inc
add
push
xlat
jbe
and
mov
sti
pop
and
mov
xchg
adc
sar
push
mov
iret
mov
mov
push
push
ja
out
test
pop
mov
or
std
movsb
sbb
mov
daa
jle
insl
and
inc
pusha
mov
fists
je
je
cmpsl
imul
and
lahf
or
test
icebp
stos
aas
xor
inc
sbb
decl
mov
shll
mov
imul
mov
js
aas
sti
in
fsubp
dec
xchg
fs
dec
cmp
mov
punpckldq
stc
shl
pop
std
pop
pop
cmp
sbb
add
ljmp
lret
scas
mov
in
inc
jnp
mov
loop
adc
cltd
add
inc
inc
jae
inc
inc
mov
add
les
dec
std
fucomp
and
icebp
cmp
repnz
xor
hlt
mulb
xor
xchg
cmpsb
mov
lods
dec
xor
outsb
and
pop
aam
sbb
jns
xor
lcall
ljmp
and
jno
filds
sub
rorl
inc
inc
ret
popf
push
push
ds
scas
fwait
adc
mov
lods
or
mov
rcr
add
and
shll
mov
push
lds
dec
ret
aas
arpl
cmpl
add
sbb
mov
hlt
mov
in
lcall
adc
push
enter
cmp
dec
hlt
sbb
and
inc
or
cld
jecxz
pop
call
push
arpl
dec
push
jns
dec
xor
cmp
les
lcall
lcall
xor
pusha
dec
mov
mov
adc
sub
mov
adc
enter
cmp
push
inc
shll
cmpsb
xor
cltd
mov
int
xchg
pop
sbb
adc
pop
xchg
jae
mov
sahf
or
hlt
popa
mov
dec
and
inc
adc
das
rcl
test
rcll
std
in
or
xor
nop
inc
mov
std
jns
xchg
pop
xchg
std
rcll
into
xchg
cmp
inc
das
lds
pop
pop
mov
pop
ljmp
push
mov
jne
mov
cmpsl
jecxz
jo
roll
in
pop
in
ss
cmp
ret
jmp
loopne
mov
jge
je
push
mov
mov
int
lahf
jp
mov
rep
pop
dec
ficomps
insl
cwtl
cmp
mov
cld
arpl
xor
movsl
notl
lods
in
aas
fdivrp
xchg
out
cmpb
cwtl
les
or
aam
sbb
addb
xchg
xchg
cmp
sbb
cmp
stos
ret
and
ret
gs
jmp
outsl
or
xor
cmp
popa
mov
mov
cmp
sub
stos
dec
xchg
xchg
adc
xchg
xchg
in
and
test
add
sarb
pusha
lea
enter
ret
jp
sub
sar
cmpsb
out
outsl
mov
jnp
pop
call
rcll
adc
in
mov
inc
sbb
outsl
out
mov
call
xor
sbb
jne
adc
xorb
imul
loope
inc
int
mov
mov
loopne
adc
and
fcmovnu
enter
rolb
test
sar
xor
jo
test
sub
add
mov
and
mov
test
jl
sti
repnz
in
pop
jmp
push
aaa
cmp
enter
push
sub
jecxz
ljmp
iret
lods
xor
lds
and
xchg
xchg
aaa
and
pop
jp
fwait
insb
adcl
inc
cmp
add
scas
imul
or
sbb
jge
inc
gs
test
fldt
cmp
jmp
lea
mov
movsb
scas
push
add
sub
outsl
and
lods
mov
int3
lar
dec
std
pop
jno
inc
dec
xchg
cld
cmpsl
fmull
mov
pop
pop
insb
lock
push
lcall
jge
js
in
cmc
pop
mov
jle
cmpsb
sub
scas
out
out
inc
jmp
sbb
aas
jnp
adc
cmp
cmp
xor
cmp
lahf
in
stos
mov
bound
mov
out
inc
push
pop
push
mov
inc
ljmp
jg
pusha
xchg
dec
ja
daa
xchg
mov
fbstp
adc
sar
push
xchg
ja
out
xlat
rolb
fidivs
roll
sub
fnstsw
sub
addr16
push
push
sbb
aam
popa
and
jo
daa
shrl
dec
or
dec
push
jo
add
out
mov
mov
sbb
mov
xlat
fucomi
into
jno
mov
xchg
data16
arpl
or
cs
jb
push
sub
dec
sbb
push
inc
sub
cmpxchg
aas
imul
dec
cltd
jecxz
jns
stos
pop
cmp
cmp
sbb
sbb
or
jbe
inc
loop
adc
inc
fistpl
mov
sbb
pop
sbb
or
call
mov
ja
cmp
and
cmpsl
sarl
ret
and
outsb
jl
pop
fists
ret
les
js
and
or
sahf
aad
sbbb
pop
xchg
cmpsl
adc
push
sub
xor
dec
arpl
dec
dec
xor
mov
shlb
jmp
addr16
xchg
or
and
fucomp
mov
fcom
mov
in
dec
addr16
inc
popf
bound
mov
adc
jmp
movsb
rep
mov
dec
popa
inc
pop
jecxz
mov
into
jle
imul
icebp
sbb
inc
out
mov
imul
jnp
xchg
out
adc
cmpsl
sbb
rorb
cld
jns
aad
imul
dec
jne
sti
repz
sbb
andl
mov
and
ficomps
lds
sbb
push
push
cmp
das
loope
inc
sub
es
faddl
orb
sbb
push
pusha
jns
iret
adc
sub
aaa
mov
pop
xchg
aas
sbb
xchg
adc
cmp
push
aam
mov
in
or
inc
pop
add
sbb
pop
fs
sub
aaa
aas
sub
fnstsw
fldt
sahf
and
mov
and
mov
mov
js
jl
out
cmpl
cld
xor
ljmp
mov
test
xor
pusha
adc
and
sahf
dec
cmp
orb
cmpsb
pushf
jbe
ljmp
sub
cmp
fsubs
out
jge
mov
xlat
sub
bound
sub
or
rorl
loopne
jg
xchg
out
xchg
mov
bound
and
and
test
xchg
or
cli
fsub
dec
mov
jo
pop
les
leave
in
push
cmp
and
sbb
cmp
push
and
or
test
call
es
mov
loop
jbe
cld
add
and
cmp
inc
mov
test
test
add
lcall
or
sub
sub
scas
pop
nop
ret
mov
inc
and
mov
jno
pop
sbb
pop
cltd
xor
mov
and
iret
dec
fidivs
insl
movsb
xchg
iret
loop
sbb
leave
iret
cmpsb
fwait
pop
stc
dec
push
dec
xchg
add
adcl
push
cmp
je
lock
pusha
in
pop
xor
imul
das
push
test
or
cmp
or
mov
add
mov
xchg
inc
and
cli
push
lahf
pop
sbb
data16
lret
lcall
test
xor
aas
js
cld
aaa
fisubrs
mov
insb
hlt
aas
mov
adc
out
insb
mov
cmpsl
bound
pop
jp
mov
add
jo
push
mov
mov
dec
pop
and
jns
push
call
iret
das
dec
fwait
xor
push
fldl
fidivs
rcrb
icebp
jp
jge
dec
repnz
rcrl
fwait
lods
clc
or
fildll
pop
jb
push
out
into
push
test
xchg
adc
into
dec
cwtl
in
or
push
lea
in
loope
mov
enter
and
sub
fcmovnu
cs
add
push
pop
dec
add
sbb
pop
mov
repnz
inc
gs
mov
push
mov
loope
xor
jp
lock
out
imul
in
icebp
enter
jge
mov
xor
sbb
fistpll
movsl
sub
mov
mov
or
inc
andnps
mov
mov
adc
std
sub
cli
mov
aaa
call
mov
movsb
outsl
jg
orl
push
stc
shr
je
cmp
insl
into
push
lods
test
aaa
mov
mov
jns
xor
jo
cmp
notb
mov
insl
dec
mov
ffree
xor
and
jo
sub
cmp
inc
scas
lods
std
mov
fisubrl
push
stc
adc
and
stc
sbb
subl
imul
movsl
jbe
add
iret
dec
mov
sub
cli
adc
sbb
jb
sti
hlt
mov
mov
lds
idiv
imul
xor
jns
adc
loop
sbb
pop
cmp
adcb
pop
mov
je
push
das
movsl
push
xor
hlt
bound
ret
dec
mov
gs
popa
out
aad
cmp
mov
mov
popf
in
js
dec
sbb
jae
jle
and
movsl
xchg
ret
mov
inc
or
sub
inc
xor
inc
jno
dec
fsubrl
test
mov
pop
adc
sbb
and
test
cld
daa
mov
call
out
enter
dec
dec
cmp
arpl
jle
inc
inc
lods
out
rolb
mov
jno
inc
and
push
in
int
mov
test
xchg
subl
sub
lods
inc
xchg
adc
mov
aas
ret
scas
out
sbb
rcr
lods
daa
sbbb
lahf
ficompl
jo
out
mov
je
int3
mov
and
cwtl
shr
pop
adc
aam
lea
pushl
in
fdivr
jmp
aas
insb
or
cmpsb
into
call
cmp
stos
test
in
lea
xor
push
jnp
mov
cmp
hlt
mov
fwait
mov
sti
fxch
repz
cmp
jecxz
adc
movb
aaa
mov
cmp
sbb
aad
xchg
or
mov
push
or
and
sub
and
fisttpll
lret
pop
pop
mov
loop
jns
pop
jmp
imul
and
aam
sub
adc
ss
cmp
sti
mov
rclb
sbb
dec
in
ljmp
jle
mov
fbstp
mov
ljmp
cmp
mov
adc
int
mov
push
aam
mov
push
ljmp
insb
das
test
sub
or
aas
sahf
js
fisubs
push
aaa
and
insl
gs
cmp
sbb
and
mov
testb
les
das
or
out
or
add
or
lret
adc
jmp
or
cmp
xor
jp
cli
sbb
std
xor
xchg
in
cmpsl
test
bts
adc
add
push
jo
fcoms
popf
pop
lock
xor
sub
xchg
cli
push
rorl
jae
mov
cmpsb
mov
dec
nop
fwait
xchg
ljmp
sbb
add
ret
push
fistpl
out
xlat
dec
adc
ja
pop
dec
inc
dec
add
sbb
nop
mov
push
add
adc
fisubrs
jno
inc
lods
inc
adc
xlat
ja
test
dec
scas
js
push
xor
hlt
les
xchg
and
imul
insb
dec
test
xor
test
mov
dec
ss
xchg
iret
add
int
mov
push
lcall
add
mov
pop
cmc
aad
add
mov
pop
inc
shlb
sahf
les
xor
aas
cltd
bt
adc
lods
shll
arpl
xor
enter
xor
inc
aaa
pop
cmp
orl
addl
cli
cmc
add
xchg
scas
out
js
add
fistpll
cmpsl
inc
loope
adc
xchg
sub
mov
inc
addr16
cmp
mov
mov
add
rolb
clc
mov
xchg
arpl
push
and
imul
sbb
pop
jne
out
outsb
loopne
repz
and
int3
clc
mov
je
pushf
cmpsb
rolb
sahf
jg
imul
xchg
jp
gs
in
jbe
stos
mov
cld
call
int3
cmp
cmp
or
xchg
lret
xchg
cmp
lcall
pop
dec
sub
cwtl
pop
jb
mov
push
mov
pop
add
cmp
or
dec
push
cli
out
iret
es
dec
pop
pushf
dec
cmp
and
loope
jecxz
mov
fildll
test
aam
dec
paddusw
adc
inc
mov
movsl
mov
cmp
scas
mov
jle
push
cmp
adc
jnp
cmpsl
mov
popf
push
je
jle
and
pop
repz
nop
test
cmp
jbe
mov
pop
mov
pop
jbe
inc
adc
and
inc
out
mov
mov
jmp
outsl
out
push
jns
outsb
xchg
adc
test
aad
lds
je
outsb
pop
mov
jl
fs
add
xchg
jle
rclb
sub
stos
fdivl
clc
cmp
lcall
push
jp
fldz
arpl
mov
push
cld
inc
ss
push
fstpl
scas
pop
arpl
lret
pushf
dec
fdivs
ret
jmp
jb
or
stos
mov
and
je
xor
daa
pop
xchg
pop
test
xor
mov
push
cmp
sahf
push
jl
sbb
mov
cmpsl
incb
xchg
cmp
push
mov
rclb
and
mov
pop
sbb
adc
cld
pop
add
jns
insl
and
stos
sub
dec
popa
ficompl
sub
movsb
pop
mov
cmc
mov
or
loope
iret
sbb
lods
xor
pop
add
shrl
pushf
ljmp
cld
ds
push
cmp
sub
lods
lods
xor
ficoml
ss
je
in
mov
and
ret
pop
cli
mov
scas
inc
push
cltd
lock
test
mov
mov
les
ficompl
or
add
popf
les
mov
testl
outsb
lock
stc
mov
fstpl
mov
dec
repz
pop
mov
arpl
and
adc
mov
out
loopne
pop
pushf
mov
jg
andl
in
repz
and
out
add
out
xor
add
sub
adc
push
test
sbb
mov
flds
pmullw
inc
push
xor
out
cltd
and
pop
cmp
xchg
mov
cmp
lock
das
mov
inc
js
aas
ljmp
cmp
cwtl
mov
and
test
pop
addr16
repz
lret
rcl
mov
adc
ret
adc
jnp
mov
outsl
int
push
out
aaa
pop
pushf
pop
xchg
testl
test
cli
push
out
push
adc
sub
aad
xor
test
clc
mov
sbb
paddb
sub
xlat
fbstp
shll
jle
scas
fildl
xchg
and
std
shrl
cmp
adc
xchg
aad
enter
dec
jle
out
sub
add
sti
das
push
sarb
xchg
dec
push
cmpsl
push
or
xlat
cmpsb
pop
adc
adc
arpl
aas
in
mov
pushf
xchg
push
sarl
mov
lcall
hlt
scas
mov
cwtl
pop
ds
push
xor
and
shrl
rcll
mov
cmc
xchg
cmp
pop
push
arpl
fsubs
xchg
or
inc
xchg
dec
pop
jnp
mov
mull
or
mov
jp
xor
sub
pop
incl
lods
xchg
lea
test
push
xchg
ss
pop
xlat
fdivrs
aas
pop
adc
imul
imul
xchg
inc
out
sbb
xchg
xlat
mov
negb
or
adc
pop
push
push
jecxz
adc
rclb
insl
xlat
movsl
and
bound
or
inc
push
aaa
lret
int3
pop
mov
stos
mov
cmp
outsl
mov
clc
ret
cwtl
inc
rcrb
test
inc
data16
ret
sbb
stos
icebp
xchg
into
cli
enter
jb
ja
sub
xlat
sbb
mov
add
pop
test
loopne
arpl
mov
jg
clc
or
insb
inc
and
sbbl
mov
arpl
pop
add
fadd
sub
lods
jne
jl
addr16
cmp
movsl
dec
loope
andl
aad
pushf
and
xchg
push
divl
inc
mov
sub
fscale
mov
sbb
mov
push
outsb
imul
inc
repnz
and
xchg
adc
stos
push
mov
dec
push
es
push
sub
adc
sub
sbb
movsl
xor
dec
xlat
cld
in
jge
outsb
push
lret
push
aam
push
in
aam
in
add
mov
dec
scas
sarb
stos
mov
mov
leave
sbb
ds
aad
mov
dec
aam
pop
into
shll
add
mov
cltd
add
adc
cmp
mov
or
rorb
cwtl
in
stos
sbb
pusha
push
cld
pop
and
fsubs
addr16
cmpsb
xchg
ret
jns
lret
cmc
lret
jo
jns
xchg
aas
lret
out
cli
jae
pop
out
insb
in
xlat
add
xchg
addr16
jecxz
das
roll
adc
mov
add
xchg
iret
push
sarb
lods
outsb
icebp
push
mov
insb
mov
xor
adc
cs
adc
or
and
cwtl
xor
sbb
pop
and
inc
jp
xor
dec
mov
mov
jne
push
push
jmp
mov
cwtl
xchg
popa
sti
subl
adc
wrmsr
mov
out
and
push
pop
nop
stos
inc
or
xor
mov
cmc
iret
inc
cmp
pop
fmul
rcrb
popf
mov
xchg
cwtl
dec
enter
int
ja
add
sbb
push
out
aas
cmp
les
mov
dec
or
mov
cmpsb
pusha
pusha
push
cltd
pop
ss
cmpsl
outsl
popf
imul
ret
in
sbb
mov
cs
notl
xchg
and
inc
popa
sbb
dec
mov
inc
mov
pop
ljmp
cmp
lea
adc
ja
pop
cltd
add
insl
das
sahf
or
aas
ret
xchg
mov
fnsave
ss
bound
rcr
fiaddl
pushf
iret
and
dec
pop
pusha
pushf
xlat
mov
mov
and
push
mov
mov
iret
andb
out
add
loope
addl
inc
daa
pusha
outsb
mov
add
jmp
mov
lds
iret
test
mov
xchg
pushf
inc
push
jge
cs
lcall
sbb
pop
lds
push
pop
adc
pop
cmpsb
and
inc
mov
scas
repz
aaa
ret
orb
pop
out
xchg
mov
rcll
scas
cmp
pop
cmp
xor
test
outsl
sub
push
mov
loope
imul
adc
jle
or
fdivs
cmovle
push
out
icebp
add
pop
inc
mov
out
push
pop
push
sub
out
dec
test
sbb
into
mov
xchg
xchg
aad
jne
jge
sahf
gs
inc
aaa
scas
add
jb
push
inc
mov
rorb
pop
sub
mov
cli
mov
sbb
movsb
addr16
push
dec
cmp
fdivrl
nop
outsl
idivl
dec
mov
push
pusha
add
mov
mov
cmpsb
aas
cwtl
enter
sbb
andb
pop
notl
xor
pop
dec
and
mov
sub
inc
xchg
mov
mov
pop
ret
loop
jne
movsl
pushf
test
pushl
xor
push
jne
std
fs
leave
mov
lea
xchg
inc
ss
dec
sbb
xchg
or
test
cld
loop
sti
pop
in
out
pop
fwait
jo
dec
jns
sahf
pop
stos
insl
add
fcoml
stos
add
ljmp
mov
out
ja
aaa
adc
mov
into
mov
jne
orb
fwait
sbb
add
inc
add
pop
in
push
and
push
movl
jle
and
fbld
popa
mov
ss
outsb
hlt
sti
imul
push
inc
adc
scas
es
xor
test
sbbl
xor
mov
out
ja
arpl
jl
cmp
mov
shlb
sahf
push
mov
push
ret
loope
mov
scas
sbb
adc
out
test
mov
test
sbb
aaa
lods
mov
push
int3
push
cld
insl
xchg
scas
ret
rcll
imul
lock
and
fwait
mov
test
xor
mov
push
mov
jmp
ret
rcrl
mov
cmpsb
dec
or
cli
and
lds
loopne
fistps
add
sar
mov
xchg
ds
mov
and
and
pop
jae
rolb
aas
dec
pop
stos
outsl
imulb
enter
mov
jmp
xchg
and
ret
xor
pop
clc
push
sarb
int3
add
inc
shll
adc
out
test
adc
int
pusha
xchg
popf
mov
xchg
mov
outsb
adc
mov
jmp
js
sarl
mov
jg
jmp
cld
call
jge
adc
cmp
ret
rorl
out
sub
pop
dec
cmp
rcrb
push
sub
daa
shll
dec
add
xchg
icebp
lods
pop
js
pop
cmpsl
dec
fstpl
fmull
cli
mov
bound
and
sahf
mov
cmc
inc
bound
mov
out
out
fstl
push
sarl
mov
add
xchg
sbb
xor
push
mov
fdiv
pop
xchg
ficoms
iret
jns
xchg
pushf
fwait
mov
in
jmp
add
mov
mov
mov
sti
adc
sbb
sub
push
fildl
and
mov
ss
xchg
mov
adc
mov
dec
inc
les
xor
popa
in
js
jne
or
daa
cltd
test
in
add
mov
sbb
fistpll
xchg
xor
out
xchg
mov
adc
inc
lods
or
xor
xorb
scas
mov
out
or
pusha
jne
push
fistpll
adc
rcl
xchg
push
stos
test
lret
cmp
in
pop
pop
cmc
test
jne
or
pop
inc
sbb
jle
jo
std
push
lock
dec
inc
int
pusha
cli
fsubr
ljmp
es
aad
in
inc
pop
mov
fsubr
and
fbstp
push
or
jns
mov
or
aas
sti
inc
jmp
mov
push
push
cmp
mov
sbb
insb
ljmp
nop
call
pusha
inc
outsl
flds
lahf
dec
xchg
sub
push
subb
push
movsb
inc
mov
cmp
in
inc
sbb
fnclex
and
out
repnz
cld
ret
sti
shlb
mov
clc
xchg
inc
inc
shl
inc
and
shl
shrl
push
inc
mov
out
dec
leave
xchg
dec
mov
pushf
iret
dec
mov
or
in
jg
rorb
or
cs
ljmp
mov
dec
aaa
xor
pop
dec
or
inc
dec
adc
jg
xchg
lret
push
xor
lods
lret
das
xchg
aas
pop
test
cmpsl
and
rcrl
sbb
mov
ds
inc
mov
push
adc
xchg
push
scas
je
test
and
loop
inc
cmp
jo
pusha
fisttpll
dec
push
or
cwtl
fs
push
in
data16
cs
fnsave
decl
cmp
dec
cltd
rcrb
mov
pop
test
ret
stc
xchg
sbb
add
mov
and
pop
repz
fsub
push
push
cltd
xor
pushl
xchg
stos
and
xchg
mov
cld
testl
imul
push
jns
and
clc
iret
add
mov
jecxz
cli
aam
and
add
outsb
int3
sub
out
aad
jmp
pop
add
jg
add
pop
sbb
cwtl
sbb
outsl
lds
sbb
lahf
je
dec
or
fcomp
push
adcb
xor
addb
sahf
pop
lcall
jecxz
push
lcallw
push
pop
data16
js
pop
in
inc
addr16
mov
fistps
addr16
sub
outsb
stos
cmp
aam
sub
add
and
stc
sub
push
mov
mov
adc
xchg
jecxz
es
mov
mov
jo
xchg
data16
sbb
into
dec
mov
out
mov
les
and
mov
adc
fcoms
repz
sbb
shr
test
movsb
add
or
push
dec
cmpsl
adc
out
jle
mov
lods
adc
in
rcrl
cld
mov
les
adc
les
lds
push
aas
in
push
push
lcall
pop
aam
pushf
cmpsl
in
sbb
mov
mov
mov
mov
pop
sub
out
out
out
fucomip
adc
push
pop
adc
lock
sub
cmp
testl
ficoms
icebp
sbb
pop
cmp
bound
in
adc
jecxz
test
and
pop
cltd
dec
mov
sbb
test
sbb
xor
xchg
dec
push
push
fmulp
xchg
sbb
sub
xchg
lods
int3
or
xchg
xor
cmp
popf
lods
es
xlat
cmpsb
xchg
test
lds
rcrl
pop
push
push
adc
and
lahf
adc
xor
xchg
or
jo
arpl
mov
xor
adc
daa
xor
sub
or
les
arpl
les
sbb
movsl
leave
mov
mov
int
mov
jle
push
push
lods
mov
pop
test
push
andb
or
or
pop
imul
add
and
lods
jb
dec
jne
dec
dec
dec
aam
lds
imul
stos
mov
adc
int
ds
out
xchg
arpl
jne
pop
outsb
imul
push
enter
scas
push
jle
lret
idivl
push
call
push
repz
inc
dec
mov
hlt
sti
cmp
cld
jno
push
sahf
dec
aad
push
cld
mov
lret
xor
jg
cmp
stos
add
ljmp
scas
hlt
sti
mov
ljmp
ffree
cld
mov
jne
cmp
ljmp
adc
lret
adc
jecxz
xchg
mov
dec
mov
in
xchg
push
das
divl
mov
sbb
out
push
scas
js
test
push
hlt
push
jne
lahf
jmp
shlb
popa
std
xor
and
mov
xchg
pop
push
jl
test
push
cmc
not
or
in
xchg
mov
fimull
insl
mov
ja
add
xor
lods
jb
pop
adc
cmc
adc
or
sub
jno
lds
xchg
or
pusha
mov
sub
lcall
into
xchg
adc
stos
mov
push
and
mov
das
xor
fcoms
enter
imul
push
jo
or
jno
xchg
sub
popf
xchg
xchg
xchg
enter
lahf
add
xlat
pop
stos
xchg
daa
pusha
das
mov
mov
les
add
add
clc
js
jecxz
push
in
xor
xor
jle
test
jp
lret
or
icebp
lcall
jp
dec
notl
stos
sbb
les
jno
int
lret
sbb
in
outsl
dec
lret
rcl
repz
push
and
cmp
fdivrl
idiv
xor
push
adc
cli
pop
xor
dec
sub
inc
je
push
pusha
push
sbb
or
aam
enter
test
sub
shrb
xor
xor
idivl
pop
jecxz
test
jp
jb
insb
mov
mov
or
mov
xchg
jge
adc
pusha
mov
shrb
test
xchg
aaa
cs
add
jecxz
pop
rol
inc
ja
outsb
dec
or
lea
stos
mov
push
or
test
hlt
and
sub
inc
ljmp
xor
cmp
sbb
repnz
lds
sbb
jp
int3
xchg
int3
ja
push
dec
test
pop
bound
aad
push
stc
push
in
jo
sti
outsb
test
bound
lds
xchg
push
xchg
jle
push
sub
inc
xchg
or
sti
xacquire
ja
push
scas
xor
sub
fprem1
and
dec
cmc
loope
dec
addr16
dec
jne
cmp
mov
mov
popf
cmp
cltd
inc
mov
test
jmp
xor
negl
xchg
cmp
or
cmp
icebp
pop
xor
shll
xor
or
xchg
movsb
xor
pop
fcomps
push
inc
xchg
push
jbe
daa
ret
sti
push
xchg
lock
dec
rcrl
dec
imul
cmp
lahf
pop
cmp
imul
fidivrs
jmp
icebp
aaa
sub
xorps
jge
jns
xor
ljmp
xor
mov
scas
push
dec
outsl
jge
lods
and
mov
sub
or
cmpsl
sub
cmc
sub
mov
and
test
iret
out
jb
adc
jno
adc
jg
push
mov
adcl
mov
cli
mov
popf
push
in
lcall
pop
out
leave
sahf
movsb
mov
mov
jno
push
lds
sub
inc
ljmp
aas
movl
outsl
lds
jl
sarl
je
dec
cld
inc
pushf
les
popf
decl
push
movsl
dec
dec
clc
mov
and
mov
lods
lds
stc
inc
add
add
loop
cmp
cmpsl
in
mov
leave
mov
mov
orl
mov
es
adc
mov
out
and
ficomps
adc
sti
xor
and
shrb
push
imul
por
xchg
mov
pop
sub
dec
pop
xchg
xchg
mov
sub
pop
push
into
mov
or
adc
mov
adcl
mov
enter
out
push
xchg
adc
xor
sbb
out
cmp
push
and
push
ljmp
cs
jb
xor
addr16
xchg
aaa
sbb
test
test
dec
xor
inc
into
mov
jne
and
pop
xor
in
xchg
xlat
ficomps
dec
jmp
not
add
cli
insl
pop
mov
popa
pop
push
jg
dec
push
or
and
push
jnp
int3
cmp
mov
xor
and
mov
push
fldenv
mov
pop
xchg
test
and
mov
shll
push
lock
das
xchg
test
fiaddl
aaa
push
cmc
jecxz
mov
sbb
mov
jnp
mov
mov
call
xchg
xor
push
push
popl
dec
xor
dec
inc
das
cmp
sbb
pusha
dec
adcb
push
jo
sbb
push
lds
jae
out
cld
xor
push
les
cli
orb
add
mov
mov
push
lret
scas
push
sub
adc
inc
xchg
mov
aaa
push
lock
and
and
ret
mov
pop
sub
xchg
sub
cmc
fmuls
adc
arpl
xchg
jg
arpl
xor
mov
add
and
push
lea
cld
xor
mov
fs
cli
mov
xor
scas
js
and
call
lahf
jl
pop
mov
out
jp
cmp
push
stos
push
in
test
lods
xlat
jo
pop
rol
mov
mov
adc
imul
outsl
inc
xor
dec
test
adc
sbb
test
sbb
mov
call
mov
lahf
ds
loop
jo
jle
mulb
sbb
sbbl
shl
dec
insb
jecxz
sahf
lock
sarb
add
lahf
dec
outsl
lahf
rclb
mov
rorl
push
js
out
cmp
data16
or
hlt
and
push
adc
call
arpl
loope
xchg
icebp
outsl
xor
js
sub
adc
jg
pop
xchg
stos
int
enter
mov
jb
dec
xor
jge
cs
xchg
lahf
js
add
lret
shl
cltd
xchg
aas
pop
jns
push
loope
std
andb
or
dec
loope
sub
xor
sub
data16
jo
pop
and
dec
push
sbb
fwait
test
fmuls
popa
mov
xor
xor
lcall
insb
xor
lods
pop
mov
mov
or
movsb
es
sub
push
roll
or
mov
xor
sbb
stos
sbb
push
jno
pusha
jnp
push
out
adc
jo
xchg
testl
push
jmp
cld
pop
dec
rcrl
jecxz
or
mov
inc
pop
sbb
xchg
push
mov
mov
jg
push
sbb
sbb
cltd
lea
enter
push
and
or
sarb
mov
sbb
cli
stos
xlat
cli
pop
sbb
xlat
scas
aam
pop
mov
das
and
test
and
cmp
push
jnp
dec
mov
ds
xor
jae
dec
push
clc
ss
pusha
and
jno
in
aad
mov
pushf
push
mov
insl
sub
cmp
jge
sub
push
ljmp
xchg
xor
xchg
lods
loope
out
das
xorl
and
inc
gs
mov
pusha
mov
stc
cs
jnp
ret
sbb
cld
int
inc
lcall
je
dec
arpl
loope
js
scas
sub
std
je
cld
mov
or
xchg
jnp
adc
ja
cmc
mov
sub
fisttpll
jno
es
out
mov
arpl
int
sbb
push
pop
mov
xchg
out
mov
jge
dec
mov
push
adc
and
push
add
jno
xorl
ja
sbb
out
outsb
sub
scas
xchg
push
bound
stc
fxch
xchg
pusha
leave
xor
lds
cmc
outsb
ja
push
jno
mov
std
dec
stos
rorb
call
jae
cwtl
outsb
into
fsubr
cwtl
adc
imul
flds
cmp
inc
inc
into
mov
adc
es
mov
pop
dec
or
cld
test
inc
xchg
push
cmc
add
mov
mov
repnz
jno
push
mov
out
loope
push
sub
add
and
and
mov
fdivr
mov
mov
xchg
in
into
daa
into
iret
pop
jecxz
insl
push
arpl
jl
mov
ds
shlb
sbb
call
jmp
mov
adc
fsubs
roll
jle
addb
ja
orb
inc
negb
call
jo
movsb
fisubs
les
sub
push
shl
lret
jne
mov
scas
cmpsb
mov
adc
jmp
mov
hlt
repnz
scas
dec
cmpl
adc
xor
push
jne
cld
add
inc
push
dec
cmp
and
fs
inc
psrlq
mov
into
loop
xor
pop
mov
push
or
push
cmc
pop
xor
ss
test
lahf
mov
cltd
pop
dec
sub
push
inc
inc
stos
outsb
out
xchg
pop
fs
cmc
push
jb
xchg
cmp
fidivrl
mov
ljmp
je
dec
dec
movsl
cld
int
jg
push
lods
repz
aad
jbe
dec
mov
xlat
fcoml
ds
xor
inc
stos
sbb
orb
pop
out
push
nop
xchg
js
data16
out
shrl
sbb
repnz
xchg
jnp
push
pop
lock
sbb
mov
xchg
push
imulb
out
rcrl
cld
jns
das
imul
jge
mov
push
fcomps
inc
sub
cmc
test
xor
sbb
mov
call
push
inc
notl
or
ljmp
pop
rcll
cmp
inc
inc
mov
shlb
pop
jns
push
jb
inc
push
rcrl
xchg
add
jp
jl
cwtl
push
bound
and
or
mov
pop
sbb
lock
mov
outsb
and
cs
push
pop
cmp
vmread
hlt
or
mov
stos
out
mov
xchg
repz
loop
fsts
call
cmp
int3
stos
test
enter
adc
mov
repz
jnp
cltd
imul
lods
sub
adc
sub
adc
inc
aad
lcall
dec
pop
add
mov
mov
mov
jb
jne
mov
std
add
mov
add
sub
xchg
das
sub
push
add
stos
scas
mov
mov
aas
negl
repz
in
or
adc
clc
or
mov
inc
xchg
in
mov
sbb
sbbb
aaa
jmp
pop
in
mov
xor
int
leave
orb
psadbw
negl
test
push
push
subl
or
xchg
cmp
fldl
aas
mov
mov
mov
addr16
push
ds
dec
sub
aas
or
popf
loop
dec
loope
cmpsb
sub
call
lahf
sbb
cmp
mov
mov
cmp
pop
adc
dec
stc
pop
and
mov
jmp
repnz
stc
sub
rclb
rol
imul
xlat
xchg
repz
insl
dec
push
cmp
lods
adc
sub
out
std
arpl
or
popa
push
sti
das
adc
mov
bnd
jecxz
mov
pop
scas
movl
pushf
xchg
cmpsl
fsts
dec
aas
mov
cli
jg
sarl
or
fisttps
jbe
cwtl
xor
xchg
and
push
pushf
jmp
and
addr16
fs
push
push
inc
and
scas
mov
lods
sarl
pop
push
dec
test
icebp
xor
in
inc
dec
sub
jmp
gs
fs
jmp
cmpsb
adc
sti
rolb
jnp
jne
loopne
repz
cmp
xchg
icebp
mov
aaa
je
add
and
mov
adc
cmp
mov
clc
mov
sub
lea
rorb
inc
mov
lret
push
pop
jo
and
push
add
or
filds
pop
gs
iret
pop
inc
mov
aaa
and
push
fildll
xor
jecxz
out
mov
adc
push
pushf
push
jb
orb
add
mov
and
inc
shrb
hlt
out
movsb
je
lahf
and
lds
mov
mov
je
cmp
out
sbb
int
incl
rol
loop
cmc
arpl
lahf
movsl
mov
mov
inc
cld
lds
lret
add
adc
popf
or
scas
mov
popa
jp
ja
testl
cmpb
mov
xchg
push
out
pop
push
pop
lret
sub
shll
xor
int
sub
sub
sub
mov
pop
repz
push
push
xchg
cmp
rcl
jbe
xor
sbb
ss
mov
fwait
out
and
nop
pop
scas
data16
push
jbe
xchg
sub
aam
inc
sub
mov
xlat
enter
xor
mov
stos
pushf
pop
mov
sbb
loope
ja
adc
xchg
pop
je
add
icebp
fbld
dec
imulb
push
xchg
sahf
jno
jecxz
inc
adcl
js
insb
jb
inc
pop
int
jmp
adc
adc
leave
sti
jnp
bound
insl
lahf
push
das
xchg
sbbb
dec
lcall
and
and
cwtd
cmc
or
or
movsl
jl
aas
sbb
sti
pusha
xchg
sub
ja
adc
adc
xor
cmp
clc
aam
mov
mov
cli
in
adc
xor
je
mov
and
cld
cld
insl
inc
adc
stos
je
lcall
faddp
mov
jp
outsl
fidivl
lods
in
pusha
add
nopl
inc
mov
and
cmp
outsb
repnz
insb
pop
cli
xlat
mov
jbe
stos
les
mov
jl
add
idiv
cmp
scas
mov
adc
pusha
lods
sti
push
aad
lahf
mov
jns
cmp
xchg
or
lret
lcall
or
push
or
xchg
xor
mov
mov
dec
inc
push
dec
inc
or
lods
rcl
ljmp
sub
imul
lds
xlat
inc
mov
dec
cmp
icebp
lock
aam
loopne
cmp
mov
dec
cmp
data16
aad
xor
mov
sub
mov
pop
pop
sbb
loop
ds
dec
std
push
xchg
fnstenv
inc
dec
movsb
add
mov
xlat
push
mov
jecxz
dec
inc
imul
imul
aad
xchg
and
dec
push
rclb
cmp
aam
sub
sti
push
fdivrl
mov
add
or
jno
es
adc
and
mov
scas
push
mov
pop
and
ljmp
xchg
jns
xor
lods
loopne
data16
push
and
sbb
hlt
cli
data16
lcall
push
out
mov
push
sub
jne
mov
xchg
ret
push
mov
xor
xchg
add
lds
fsts
in
cwtl
sarl
push
or
in
push
push
xchg
and
in
push
ljmp
ss
fcmovnbe
fwait
pop
add
cmp
fdivrl
pop
es
push
addl
inc
inc
pusha
mov
push
sbb
pop
dec
aaa
push
outsl
inc
xchg
ret
sti
adc
push
mov
pop
xor
clc
fsubl
cltd
inc
loop
sti
mov
sbb
push
cmp
add
cmp
add
push
dec
pop
add
pushf
dec
xchg
in
movsb
lock
push
enter
push
dec
xchg
pushl
pusha
pop
dec
mov
enter
add
and
xchg
mov
jno
int3
inc
push
pop
sub
push
sar
dec
shlb
adc
fwait
xchg
cmp
sub
mov
and
adc
inc
sbb
popf
and
test
mov
sub
je
cli
sbb
mov
lahf
clc
fmuls
mov
nop
pop
mov
lods
cmp
pop
lock
and
out
cmp
mov
in
es
xlat
icebp
leave
xchg
imul
mov
cmc
fbld
push
enter
xchg
arpl
xor
mov
dec
ret
sub
sti
add
mov
inc
push
jbe
or
mov
dec
mov
and
jne
fdivrs
aas
sub
iret
icebp
dec
mov
inc
js
xor
loopne
loopne
sbb
mov
mov
sub
popa
adc
sbb
aas
xchg
pop
inc
jmp
int
sbb
mov
fdivs
lret
mov
and
cmp
sbb
imul
add
in
int3
mov
push
pop
inc
xchg
call
mov
popf
push
cmpl
xor
adc
repz
repnz
inc
out
leave
mov
shl
sub
jb
mov
mov
inc
cmc
adc
cltd
xor
push
cwtl
sahf
jp
mov
out
xchg
fcomi
adc
outsl
lea
insb
adcb
pop
ljmp
sub
les
in
ret
clc
mov
pop
test
addr16
sub
lods
sbb
nop
adc
lods
xchg
mov
pop
loop
inc
movsl
fsts
push
xor
add
insl
test
push
push
mov
push
adc
pusha
xchg
cmp
push
or
cmp
sub
aad
pushf
ret
insb
faddl
and
imul
dec
xchg
xchg
repz
loope
inc
shll
out
adc
out
dec
push
and
out
icebp
fs
stos
mov
sub
xchg
and
xor
jnp
in
cmp
orb
mov
std
xchg
cmpb
and
je
xchg
fsubr
lcall
xchg
add
xchg
lock
and
enter
stos
ficoms
leave
jl
repz
lcall
inc
inc
int3
mov
jg
xor
cld
mov
movsb
nop
mov
dec
pop
arpl
xchg
dec
bound
dec
cmp
cmc
repnz
and
mov
jnp
and
call
stos
xchg
insb
xor
lods
xchg
rcll
xchg
fsub
fcomi
mov
cmova
jo
pop
in
xor
jecxz
imul
stos
add
push
mov
inc
and
dec
and
xor
jl
push
cmp
scas
es
and
popa
arpl
or
stc
sbb
mov
fs
push
fildll
inc
mov
mov
inc
mov
int
repz
data16
je
fdivrl
push
clc
add
cmp
xchg
inc
aas
lret
testb
pop
iret
cwtl
ret
sbb
jle
pop
mov
jo
cli
fucomp
bound
fidivs
lretw
movsl
and
ror
lock
mov
dec
out
out
adc
xchg
xchg
jbe
sahf
mov
gs
inc
int3
mov
aad
jmp
ret
leave
mov
fs
adc
adc
sub
xchg
xor
mov
into
pusha
ja
loopne
clc
cmpsb
xor
push
imul
pop
jl
push
jp
push
icebp
cwtl
jle
xchg
jge
stc
pop
test
lea
mov
outsl
lea
int3
lods
sbbl
ja
fistl
mov
je
cmpsb
xchg
xor
xchg
fs
ljmp
lds
cs
sti
pushf
insl
xchg
out
push
loopne
out
mov
jns
xchg
imul
dec
adc
cmpsl
repz
cli
sbb
cmp
jne
add
sub
fnstenv
push
and
rorb
lods
push
mov
pop
lods
mov
inc
in
pop
push
push
dec
xlat
jmp
jae
call
sar
aam
inc
sarl
or
push
xchg
xchg
mov
ss
cltd
and
or
push
andl
pop
stos
daa
insb
dec
loope
dec
sbb
cmp
in
ret
pop
scas
out
aam
dec
pop
sbb
xchg
testl
and
xchg
dec
lahf
or
nop
loop
sbb
mov
rcll
pop
push
fnstsw
xchg
rorl
fildl
out
xor
cli
and
pop
pop
jnp
push
sahf
rolb
mov
push
scas
shrb
sahf
push
lods
nop
cmpsl
pop
aas
ja
test
cmp
inc
jmp
and
test
in
data16
add
xchg
xchg
xchg
movaps
mov
mov
std
xor
push
jecxz
repz
lcall
inc
movsl
imul
loopne
push
ljmp
mov
fisttpll
repnz
jmp
mov
pushf
clc
lret
or
fldpi
adc
or
cmpsl
pop
add
sbb
mov
icebp
ds
jle
ret
leave
and
mov
ror
lods
inc
std
sub
cmp
cmp
mov
inc
ret
pop
mov
stos
jne
inc
cmp
mov
sub
aam
dec
lea
xor
fisttpl
lret
pusha
adc
push
dec
mov
or
jns
or
test
in
mov
fs
add
mov
out
or
or
mov
xchg
adc
adc
aam
loope
decl
xor
out
test
repnz
lds
out
sahf
sbb
xchg
and
cwtl
negb
mov
xchg
jns
cmp
insb
subb
aam
lret
mov
pusha
jno
sbb
sbb
xchg
mov
add
mov
jp
jb
pusha
enter
shll
push
push
xchg
pop
xchg
outsb
xchg
push
cld
xor
hlt
rol
mov
sbb
mov
aad
mov
mov
dec
addb
push
xor
mov
das
jl
mov
mov
dec
xor
sbb
cmp
adc
ret
push
rcll
jmp
aam
xchg
mov
insl
adc
shlb
pop
inc
or
pop
out
mov
add
outsl
je
pop
jge
add
imul
or
es
jns
dec
cmpl
cmc
adc
out
imul
jo
les
shl
subb
ja
pop
jnp
inc
jbe
xchg
in
arpl
mov
inc
ret
adc
jecxz
push
out
pop
mov
shll
loop
sbbl
or
in
and
and
push
mov
mov
dec
push
mov
hlt
pusha
jp
pop
mov
jae
outsl
pusha
adc
inc
lcall
ds
or
ljmp
mov
adc
push
push
ljmp
sub
lea
enter
aas
mov
inc
fldenv
fldt
pop
ficoms
lods
lds
enter
push
pusha
into
mov
xorb
cltd
add
mov
insl
insl
sti
idivl
dec
pop
fdivrs
adc
addb
testb
dec
cwtl
sub
pop
fisubs
mov
or
in
xchg
mov
fcompl
sub
jg
mov
add
stos
and
and
sbb
xor
mov
dec
sbb
in
aam
fmull
cltd
subl
pop
test
jp
push
ja
push
pusha
fwait
jecxz
out
mov
stc
into
popf
stc
addb
add
outsl
xchg
cmpsb
mov
pusha
jae
insb
hlt
mov
mov
shrl
mov
add
inc
adcl
out
in
jmp
dec
cmp
mov
pusha
ficomps
mov
mov
arpl
jp
dec
xor
insb
pop
arpl
ret
rcrl
leave
fdivl
pop
cli
mov
sbb
ss
iret
xorl
mov
pop
dec
lahf
out
outsl
mov
gs
inc
push
lds
push
sbb
jbe
adc
xor
dec
jg
add
add
or
xchg
sbb
adc
and
mov
scas
rcll
rcrb
bound
xchg
ljmp
xor
shll
xchg
sbb
xchg
loopne
iret
stc
sbb
pop
inc
into
jl
cmp
push
int
ret
mov
jne
movsb
sahf
xlat
dec
xchg
ljmp
in
jnp
push
xchg
pop
add
mov
pop
ja
xchg
stc
mov
adc
xchg
mov
mov
inc
push
mov
sbb
pop
mov
push
hlt
scas
test
lret
sahf
jge
fdivrl
insl
pop
sbb
and
adc
pop
and
adc
add
rolb
pop
mov
test
and
mov
sub
int3
mov
adc
fistps
outsb
ds
sbb
jmp
lcall
fsubrl
lock
repz
les
icebp
mov
aas
decb
push
jnp
sahf
loopne
repz
inc
jbe
sbb
mov
jbe
xor
pop
xor
adc
xchg
sbb
mov
jmp
dec
movsb
mov
cmp
inc
xchg
and
xchg
movsb
jp
imul
sub
mov
popa
pop
jns
jl
out
mov
xchg
mov
mov
gs
std
adc
push
stc
mov
and
dec
push
pop
mov
clc
pop
xchg
sub
inc
jo
push
test
cmpsb
sbbl
dec
push
pop
xor
xchg
sub
cmp
pop
daa
addr16
pop
call
mov
jb
out
shlb
test
add
and
jp
jmp
mov
jmp
sbb
push
inc
xlat
outsl
xor
xchg
ss
mov
dec
cmp
push
daa
leave
cs
mov
xchg
xchg
xchg
jo
inc
fisttps
les
mov
mov
jecxz
adc
insl
adc
and
mov
in
or
int3
mov
sub
mov
or
clc
mov
or
in
dec
and
outsl
mov
nop
push
pop
jmp
in
add
add
out
xchg
cld
ljmp
popf
sbbl
pop
mov
xchg
pop
push
pop
adc
int3
roll
cmp
add
cmp
pop
movb
cmp
jg
and
push
and
shl
add
fwait
sbb
jae
repz
sbb
std
lods
and
insb
push
push
push
mov
dec
aaa
mov
cmp
insl
inc
jge
inc
ja
fstpt
nop
gs
mov
stos
or
mov
fisubs
pop
dec
inc
xchg
pop
imul
cs
test
loopne
cmp
or
mov
mov
iret
xchg
in
stos
and
outsb
pop
inc
inc
in
and
fmuls
sbbb
jl
mov
xchg
adc
outsl
jns
sub
call
jo
xlat
jnp
mov
scas
xor
loopne
cmp
mov
test
pop
inc
call
stos
mov
jge
dec
inc
mov
fwait
sub
stc
sbb
cmp
in
and
cwtl
cmpb
imul
imulb
ds
pop
neg
add
jp
test
jae
sub
mov
mov
push
daa
enter
mov
xchg
dec
pushf
mov
mov
cmc
jae
leave
and
jle
lahf
clc
fwait
imul
inc
push
imull
sub
icebp
imul
fsubr
pop
and
mov
sbb
aaa
and
jns
sbb
pop
adc
cmp
mov
xchg
out
andl
add
ja
sarl
in
xchg
mov
clc
sti
stc
lea
xchg
mov
xor
mov
push
dec
mov
int
outsb
leave
mov
fimull
dec
pop
xchg
push
xchg
movsl
mov
and
and
scas
sbb
add
jb
inc
and
repnz
and
cmp
mov
insb
xor
rorb
loopne
add
push
pop
push
inc
adc
rcrl
or
cmpsb
ret
shlw
xchg
icebp
or
dec
rclb
int3
mov
repnz
repz
clc
idiv
fbld
fsub
in
jl
adc
into
mov
icebp
lods
xchg
jge
inc
sti
mov
iret
test
adc
mov
jb
sbb
repnz
push
add
pop
mov
insl
lahf
sub
xchg
xchg
es
mov
lcall
jp
call
loopne
pop
jp
fs
int3
loopne
or
mov
xchg
adc
dec
mov
mov
fwait
nop
cmp
shll
jle
dec
push
bound
xchg
mov
jb
adc
popa
mov
dec
mov
adc
cs
scas
and
mov
jg
scas
imul
pop
ficoms
and
sarb
data16
push
xor
adc
pop
fs
cltd
xchg
hlt
test
mov
sub
out
mov
dec
nop
mov
sub
daa
lods
xor
mov
outsl
mov
rorb
adc
cmp
repnz
adc
das
mov
inc
or
add
lock
punpckhbw
cli
add
cmp
cmpsl
xorb
test
lret
aam
adc
test
mov
test
cli
test
stos
inc
adc
mov
frstor
or
or
add
testl
cmc
outsb
lret
jmp
mov
cli
pop
movsl
inc
cmp
lret
jecxz
sub
aaa
pop
jae
scas
push
push
pop
loop
inc
jns
pushf
arpl
fucom
xor
xor
out
sahf
and
xor
aad
xor
addr16
pop
and
mov
ljmp
pop
jo
mov
adc
push
cld
dec
jmp
mov
xor
xchg
cmp
add
out
fadd
js
daa
xor
enter
cmp
ja
sbb
fs
pop
and
outsb
dec
mov
pop
minps
push
rcl
aaa
lcall
shll
sbb
push
pop
stc
sbb
xchg
sbb
or
sbb
repz
clc
adc
adc
and
scas
lret
cmc
sub
leave
lcall
aam
mov
das
xor
jns
xchg
pop
add
inc
jg
daa
inc
ror
sbbb
pushl
int3
mov
xchg
pop
sbb
cmc
mov
cltd
push
int
ret
loopne
mov
mov
es
cli
and
jne
sbb
insb
pop
popf
mov
test
add
je
add
add
es
ret
negl
lcall
push
xchg
aam
mov
sub
inc
mov
faddl
sub
and
push
lea
push
mov
cmp
loopne
mov
push
or
sbb
sub
cmp
cmp
fdivs
stos
xchg
add
mov
push
mov
jb
std
xor
push
frstor
dec
sub
mov
cmp
cld
sbb
push
stos
in
shl
movb
sbb
mov
jns
mov
mov
imul
xor
lods
xchg
xor
out
xor
jo,pn
pop
lea
pop
setne
repnz
fwait
push
sub
jb
mov
hlt
outsb
in
adcl
push
int3
xor
out
sub
test
inc
loop
addr16
sbb
idivl
sbb
inc
inc
add
lea
cmp
cwtl
pop
pop
stc
push
cmp
xor
lahf
out
adc
addr16
mov
pop
mov
in
mov
lret
pop
inc
stos
and
jl
sbb
pop
int3
jl
push
adc
shll
sbb
adc
push
add
xchg
repz
xor
jp
pusha
xor
fwait
mulb
mov
sbb
push
cltd
cmpsl
sub
andb
test
jo
adc
loopne
in
mov
xor
testl
dec
dec
and
cli
ljmp
pop
scas
inc
imul
push
adc
sub
or
test
jae
js
adcb
push
in
mov
dec
xor
stc
cmc
movsl
mov
nop
iret
mov
sub
mov
lods
add
push
dec
iret
xor
and
ds
jne
or
xchg
dec
dec
cmpl
cmpb
out
fstpt
test
repnz
xorl
xor
popa
xchg
xor
and
sub
shlb
mov
clc
out
out
fcoml
popa
xlat
or
test
pop
data16
mov
out
jp
and
jo
movb
cltd
adcb
push
push
pop
cmpsb
mov
scas
pop
adc
push
dec
inc
test
cli
dec
mov
into
out
sbb
rorl
xlat
lret
mov
stc
mov
and
lods
push
rol
es
pop
push
loop
mov
int3
inc
inc
push
sbb
push
stos
inc
xlat
or
xor
shl
inc
add
js
sbb
rcl
sub
jno
shlb
mov
test
cmc
sbb
inc
sbb
jmp
and
enter
cmp
sbb
and
pop
hlt
clc
addb
sub
outsl
pop
mov
jge
jecxz
jge
rcrb
pushf
push
cmp
adc
neg
mov
pushf
ret
sub
pop
std
sbb
sub
fbld
sbb
pop
movsb
ret
push
arpl
int
inc
or
add
jae
add
mov
rclb
sbb
daa
adc
cmpl
sbb
pop
test
pop
sahf
inc
fs
push
pop
xor
push
pop
stos
jb
pushf
push
leave
in
pop
arpl
out
popa
cmpsl
mov
bound
cltd
shl
ja
out
shlb
push
pop
mov
sub
insl
std
dec
push
dec
mov
ret
mov
jb
clc
lret
mov
ret
sub
addr16
and
jo
insl
jmp
and
jl
mov
pop
jmp
cmp
sbbl
or
dec
jmp
rorl
mov
scas
pop
sar
test
enter
push
popl
sbb
pop
jb
sub
pop
lods
in
roll
bound
jle
or
or
cli
pop
cs
lods
pop
nop
jge
cmp
call
jne
lea
lods
rcll
sbb
cwtl
xchg
sahf
hlt
das
inc
repnz
or
imul
mov
lcall
xchg
cmpb
xor
dec
or
mov
xor
shrb
movsl
pop
and
loopne
add
mov
fldl
lods
test
sub
or
loope
pop
push
je
sub
jae
add
mov
enter
in
lods
mov
jnp
inc
je
mov
aam
add
sub
inc
mov
ret
and
jnp
dec
push
out
loop
cmp
enter
pop
imulb
mov
cmp
mov
cmp
mov
ss
ds
repz
lret
mov
pop
outsb
inc
jb
lcall
fs
out
out
fidivrl
mov
mov
xchg
cwtl
ljmp
sbb
pop
andb
and
popf
insl
push
icebp
ret
test
adcb
xchg
cmpsb
mov
inc
dec
pop
push
xor
mov
lret
or
push
in
jg
ss
hlt
cmp
cmc
outsb
mov
push
pop
daa
xor
cs
fidivs
push
stos
je
ret
lods
loop
and
add
dec
sub
movsb
pusha
dec
pop
jl
fwait
pop
notb
pop
inc
cmp
and
mov
outsb
push
mov
addr16
lock
shl
shlb
jmp
sahf
jmp
mov
and
inc
test
cld
sub
out
xchg
adc
sti
xor
hlt
imul
mov
pop
out
jae
fidivrl
xchg
mov
and
jae
imull
push
pop
jge
mov
pop
jle
push
pop
sub
in
jnp
ror
lahf
cmc
sti
fcoml
inc
fistpl
in
sub
jo
xor
cld
dec
scas
cmpsb
xor
mov
push
fidivl
mov
mov
xchg
subb
push
ret
in
cmp
mov
and
and
jo
loopne
jmp
scas
adc
pop
pop
pop
fsubrs
faddl
xchg
mov
inc
jge
leave
push
movsb
xchg
cs
jbe
add
push
in
push
cmp
mov
rcll
sbb
icebp
ret
fs
shrl
sub
outsl
movsb
ja
cmp
dec
mov
lcall
mov
fmuls
mov
dec
mov
das
ljmp
sub
aas
aad
sbb
lods
mov
cwtl
adcb
xchg
push
sub
popf
fwait
lds
testb
pop
push
mov
in
fldt
loopne
sub
or
adc
popf
sbb
jl
loopne
loop
push
loop
cmp
pop
sbb
mov
adc
sti
shrl
sbb
cwtl
add
aaa
loopne
cld
mov
std
stos
adc
inc
aas
arpl
lds
es
mov
add
xchg
push
push
call
pop
cmp
aas
adc
clc
add
push
xor
fwait
imul
lahf
stos
jno
test
gs
adc
sbb
mov
cmc
push
add
mov
xchg
loope
std
scas
and
sbb
push
sub
and
sahf
mov
dec
out
sub
lcall
and
repz
add
cmp
push
in
xchg
jne,pt
inc
push
ffree
and
cli
mov
xchg
mov
testl
test
iret
fs
aad
mov
lods
aad
pop
ljmp
into
les
jl
mov
loope
pop
mov
jl
sub
rol
dec
in
jne
inc
ret
mov
sub
dec
push
pusha
cs
cmp
movsl
jb
sbb
in
mov
lods
or
add
data16
mov
sbb
call
leave
add
shll
test
mov
xchg
or
in
das
cltd
push
mov
in
xchg
xor
stc
jge
sbb
in
mov
ret
mov
clc
ret
outsl
js
push
mov
gs
cmp
xor
popw
jae
stos
xchg
shl
stc
sub
inc
ss
push
sbb
das
mov
test
adc
les
in
enter
xor
pop
cmpsb
xchg
aad
js
std
stos
cwtl
mov
xchg
mov
test
mov
ffreep
movsl
dec
or
sbb
fnstenv
cmc
pop
sbb
fnclex
enter
pop
add
push
enter
loope
es
mov
mov
mulb
mov
pop
rol
and
or
bound
rcrl
mov
pop
push
out
mov
aam
cmpsl
addl
pop
cmp
and
jb
jecxz
int3
fld
or
insl
pop
inc
in
fs
or
aad
ret
mov
mov
shlb
mov
rcl
lea
dec
push
mov
xor
adc
jb
adc
adc
push
sub
mov
cmpl
or
adc
push
pop
mov
in
lods
mov
cs
sbbb
mov
xchg
std
test
imul
mov
fisttpl
sub
cld
sbb
rolb
or
outsl
mov
icebp
mov
sbb
sbb
aad
jnp
loopne
sub
push
inc
lods
int
rcll
aad
popf
or
sub
ret
es
dec
fwait
push
cmp
insl
mov
rcll
cmp
stos
sub
mov
pop
movsl
sbbb
loopne
lods
leave
inc
pop
stos
out
jb
add
mov
mov
mov
pushf
pop
popl
fcomip
sbb
imul
xor
sub
push
pushf
bound
sbb
xchg
add
add
adc
js
lret
jl
scas
fdivs
push
ficoml
jle
push
or
ljmp
sub
lods
xor
shrb
dec
mov
scas
inc
icebp
ficoml
lret
fisubl
push
cmc
sub
and
nop
cmp
aas
dec
scas
mov
cwtl
subb
outsb
xor
scas
ret
fiaddl
adc
cmpsl
aam
and
mov
mov
add
ss
xchg
bound
pop
scas
repnz
ss
cmp
test
lahf
dec
and
mov
sarb
movsl
adc
mov
ror
sbbl
adc
test
add
mov
push
mov
xor
cwtl
fwait
cli
pop
sbb
lahf
adc
sbb
sub
pop
add
ret
sub
and
ds
stos
push
out
outsl
or
in
xchg
stos
mulb
mov
inc
dec
jno
ss
sub
jmp
int
js
sbbb
negl
jb
testb
push
sub
dec
aas
lock
mov
sahf
in
stc
push
sub
pop
lods
ror
xchg
jae
ror
loop
and
inc
mov
std
aam
lock
sbb
dec
out
mov
js
xchg
dec
in
mov
dec
test
sti
pusha
xchg
pop
dec
sahf
sbb
mov
loopne
ret
pop
mov
sub
dec
pop
inc
ret
mov
rcll
mov
dec
sub
pop
push
or
lcall
push
mov
scas
pop
xor
fcoml
and
enter
jle
fadd
fwait
loop
imul
and
cli
pop
mov
sti
dec
mov
or
push
imul
add
hlt
xor
jne
xor
pop
jb
cmp
jns,pt
out
or
dec
xor
or
sub
adc
sub
aam
stos
imul
mov
mov
incb
das
repnz
aaa
outsl
das
sub
add
dec
mov
jg,pt
lods
jle
jmp
in
nop
es
nop
mov
and
push
pop
adc
aad
sbb
repz
mov
arpl
mov
adc
pushf
or
jnp
nop
fnstenv
mov
jae
leave
aam
out
cmp
loopne
cmp
cs
shr
jae
xchg
ljmp
mov
pop
notl
daa
fsts
out
mov
mov
jp
xchg
mov
xchg
push
sahf
in
push
sbb
jae
stc
fldcw
pop
mov
loop
xchg
rolb
mov
dec
jle
cmp
xor
sub
daa
inc
or
test
xchg
pushf
sbb
addr16
jp
pop
in
shl
pushl
pop
outsl
mov
mov
lret
jbe
mov
pop
push
roll
push
lret
push
ret
jecxz
sbb
lcall
enter
arpl
fstpt
add
adc
repnz
or
std
incl
fmull
std
repz
ret
xchg
out
mov
shr
testl
add
push
add
std
addr16
lret
lret
sbb
xlat
sub
jb
and
adc
sub
mov
jl
cmp
int3
pop
das
fists
jmp
add
xor
aam
sub
sub
pop
mov
xor
int
xchg
cmp
push
mov
cmp
or
mov
and
or
pop
and
or
roll
inc
sbb
push
cmpb
addl
les
andb
mov
push
in
cmp
sbb
cmp
stos
push
sti
loope
jecxz
xor
cmpsb
add
insb
std
mov
or
lret
dec
xchg
cltd
jecxz
push
fiaddl
jmp
loopne
lock
imulb
ret
sbb
or
mov
shlb
mov
lahf
adc
inc
adc
xor
stos
and
add
or
sub
mov
icebp
and
imul
cmpsb
or
jbe
push
inc
xchg
testl
movsb
lahf
dec
int3
pop
iret
lahf
stos
inc
int
xlat
ds
nop
inc
in
out
aaa
mov
mov
jae
mov
xchg
sub
jmp
cmp
pop
inc
push
scas
cmp
pop
xchg
sbb
mov
and
lcall
mov
jb
or
ss
scas
jle
test
cmpsb
sub
sahf
repz
aad
jb
inc
mov
push
movsb
std
sub
repnz
in
out
cmp
push
lret
in
insl
ficomps
mov
xor
jne
add
out
pusha
lret
cmc
bound
scas
pop
sbb
cmp
push
lcall
movsl
ja
lds
xchg
add
pop
mov
in
cmpsl
inc
lds
sbb
ja
push
mov
jge
mov
js
lds
shlb
fbstp
addl
jmp
ljmp
fidivs
add
negb
orb
sbb
sub
ret
enter
iret
xorl
inc
add
jg
adc
cli
movsb
fldz
shll
dec
or
icebp
sti
cmp
mov
inc
loop
sbb
sti
xchg
ret
loope
jp
fldenv
ss
and
in
out
pop
cmpsl
jb
shlb
mov
add
lahf
mov
or
pushf
gs
fisubrs
push
xchg
sub
fdivrl
push
in
lea
out
ds
jge
lcall
sahf
ljmp
lods
iret
xor
pop
shl
jmp
xchg
push
and
mov
insl
scas
mov
xchg
add
jmp
clc
jl
ret
cmp
mov
pop
adc
xor
outsl
ret
cmpb
jns
add
in
inc
push
int3
cmp
fsubrl
int
mov
insl
xor
mov
stos
inc
test
xor
and
sub
xchg
hlt
cli
cmp
push
arpl
mov
decb
inc
cmpsb
in
lods
loope
inc
and
stc
bound
scas
nop
jmp
into
or
sub
xchg
lret
push
adc
les
fidivrl
dec
mov
in
pop
enter
or
lcall
mov
in
adc
lock
ret
scas
sbb
xor
xor
jp
les
ss
cmp
push
cmp
int3
dec
or
xor
lock
pusha
daa
pop
je
cmp
in
mov
or
add
sbb
test
mov
mov
sahf
cwtl
rorb
xor
pop
test
jnp
dec
sub
push
cli
pop
std
lods
mov
dec
and
mov
rorl
mov
mov
jmp
test
lods
push
pop
test
bound
add
test
ret
jge
xor
push
mov
movsl
mov
outsb
or
mov
lret
rolb
mull
test
fcompl
les
daa
and
sub
jp
push
dec
cmp
mov
push
mov
cmp
adc
repnz
mov
sub
jno
add
push
or
and
lds
mov
icebp
jnp
mov
std
fstpl
or
ret
jo
std
loope
outsl
pushf
pop
mov
das
hlt
int3
hlt
aas
jecxz
int3
mov
clc
aaa
or
test
mov
je
pop
dec
bound
and
pop
lret
push
xor
sbb
or
movsl
and
cltd
nop
mov
xor
jns
clc
lret
xchg
push
mov
jl
mov
push
aam
inc
xchg
mov
sar
push
ljmp
cltd
add
clc
xchg
stc
les
mov
jnp
repnz
pop
jb
cld
idivb
adc
fdiv
pop
movsl
pusha
daa
xchg
adc
and
mov
jb
test
sbb
pop
xor
es
popf
mov
cli
push
mov
inc
add
xchg
in
push
test
sbb
jb
andl
xor
sub
mov
pop
mov
xor
push
xchg
pop
push
xchg
movsb
mov
inc
mov
mov
imul
cli
in
adc
xchg
sub
inc
pushf
mov
imul
fistl
add
mov
mov
pushf
lahf
jmp
mov
cmpsl
mov
add
push
into
push
scas
mov
stos
jae
add
jmp
cmc
adcb
sbb
xlat
mov
ss
shrl
and
cmp
pop
int3
cmp
or
push
inc
xor
mov
push
pop
adc
cmp
cmp
mov
ret
icebp
test
fcoms
sbb
mov
xchg
xor
stos
mov
aaa
ds
fists
insb
pop
sbb
in
test
stc
add
push
pcmpgtd
adc
xor
loopne
push
cmp
sbb
cltd
sbb
pusha
sub
jo
cmp
mov
mov
negb
mov
lcall
aaa
divl
push
insl
xchg
xor
sbb
cmp
adc
mov
or
icebp
cmpsb
xchg
mov
mov
sbb
and
add
push
in
push
lock
add
mov
shll
dec
adc
xor
jnp
mov
pop
push
mov
mov
pop
ret
notb
add
ja
push
cmc
and
dec
dec
js
xchg
sub
push
out
sub
imul
fs
enter
jbe
xor
jae
mov
bound
cmp
lods
imul
jecxz
dec
xlat
xor
repnz
mov
sbb
shll
mov
or
loope
mov
mov
mov
pop
or
into
sbb
and
cmc
dec
lcall
dec
jecxz
test
sub
cwtl
outsl
lret
addr16
lock
scas
std
push
push
mov
push
sbb
cwtl
cmpsb
stc
pop
and
jnp
jg
and
xchg
outsb
xor
lds
or
dec
pop
push
jmp
push
jae
sbbb
ret
lcall
jl
into
enter
lods
in
xor
cs
orb
mov
popf
lods
out
cli
lock
sub
or
sub
push
es
adc
lock
test
xor
shll
pushf
add
mov
xor
xchg
dec
test
dec
mov
mov
les
inc
sub
dec
enter
test
adc
into
mov
mov
mov
inc
inc
mov
jns
push
shrl
dec
xor
sub
std
xchg
cmp
cmc
fdivrs
push
dec
clc
push
dec
iret
nop
lret
inc
adc
dec
fsubrs
push
mov
aad
std
ljmp
sarb
push
cwtl
add
mov
inc
iret
lock
add
mov
in
pop
dec
jecxz
mov
mov
push
adc
fs
mov
push
sbbl
lock
push
inc
add
aam
js
into
imul
mov
fwait
jns
pop
inc
xchg
nop
or
jno
and
and
subb
xchg
mov
fdivs
cmpsb
and
test
fsubp
cmp
push
int3
cmpl
cmp
mov
add
aad
and
xor
mov
add
cltd
lret
adc
inc
adc
cmp
les
cmp
mov
pop
push
pop
sbbl
push
dec
out
fwait
push
sub
test
pop
mov
sub
int3
xchg
jns
xchg
daa
test
sahf
mov
mov
loop
cmp
ffree
xchg
test
ret
movsb
pushf
inc
lahf
mov
jmp
cmp
call
inc
clc
jle
das
mov
cli
shrb
xor
xchg
sarl
decb
push
or
aad
cmpb
into
dec
dec
pop
sbb
dec
push
stc
adc
inc
and
mov
xchg
cmp
mov
aaa
push
mov
sbb
push
fsts
sbb
fnsave
mov
xchg
aad
cltd
xor
dec
ds
jmp
popa
push
or
sbb
pusha
add
stos
adc
push
xchg
icebp
lods
jne
sub
loop
jo
pop
cmp
sub
outsb
testb
shll
fldenv
add
les
shr
std
cmp
lds
mov
int
jl
and
jle
push
sbbb
cmp
sbb
mov
jo
add
mov
testl
sahf
add
scas
stos
add
sti
sti
daa
push
inc
mov
push
cmpsl
inc
sbb
jne
and
mov
addr16
test
or
mov
cld
push
dec
cmp
popf
mov
cli
sbb
inc
push
pop
fdivrl
and
xor
push
aam
cmp
sub
fisttpll
out
pop
fldl
lea
or
cmp
dec
rorl
jb
dec
out
push
pop
fldl
jg
imul
cmp
ds
fcmovnb
bound
loope
pop
mov
rcl
test
test
fdivr
add
movsl
es
cltd
sahf
xor
xor
out
jg
insl
sbb
out
out
sti
or
adc
mov
jb
adc
lock
sbb
rol
and
imul
mov
rcll
fisubs
lcall
pop
jbe
repz
icebp
mov
pop
idiv
and
mov
mov
pop
inc
movsb
shrl
xchg
imul
stos
pop
js
lea
fsubrl
fistpll
out
loop
stos
adc
in
jno
enter
fwait
sbb
divb
repz
pop
daa
mov
repnz
pop
test
flds
add
les
dec
jns
pop
add
push
dec
out
add
mov
adc
sub
mov
push
mov
pushf
repnz
fsubrl
mov
test
jl
shll
push
xchg
shrb
lock
sarb
fisubrl
mov
jle
nop
ret
jb
jae
mov
mov
test
jecxz
push
in
aaa
sub
inc
mov
rcll
add
xor
fs
push
test
sti
mov
outsl
mov
push
icebp
xlat
cs
mov
nop
xor
shrb
iret
fadd
fwait
xchg
adc
test
cltd
mov
rol
push
in
xchg
jg
aam
xor
pop
sub
out
je
hlt
outsb
xchg
icebp
push
fs
pop
push
dec
mov
mov
and
mov
sbb
sbb
mov
xchg
cmp
stos
or
push
aad
push
add
or
test
popf
call
sub
popf
ficoms
cmc
addl
stos
rcrl
pop
and
xor
fs
mov
js
sbb
jnp
and
cmp
in
popf
mov
pushf
xor
sbb
stc
int3
inc
shrl
cmp
cmp
push
jp,pt
scas
outsl
fwait
aam
mov
cld
fcmove
pop
mov
sarl
or
pop
jecxz
aam
jp
in
push
xchg
sbb
mov
adc
xor
rcl
shlb
mov
mov
jnp
push
mov
lret
push
aam
mov
out
mov
jmp
mov
inc
push
mov
and
stos
es
aam
pop
outsb
cmp
insl
dec
lahf
fmul
hlt
cmpb
in
and
jg
bound
jge
jns
mov
cwtl
mov
and
int
push
jp
loope
or
xchg
aad
mov
push
shlb
insl
xlat
lret
jnp
icebp
rol
loopne
repz
fiaddl
jne
xchg
or
shl
inc
fst
stos
loope
xor
fcomps
pop
and
adcl
imul
and
sti
cmp
enter
or
loopew
jae
inc
sub
mov
cmpsl
sbb
pop
scas
jmp
lds
dec
nop
mov
jne
mov
jmp
add
cmpl
pop
rcll
adc
enter
jle
movsb
sysexit
shlb
imul
add
lret
daa
mov
insl
add
test
fisttpll
xchg
jbe
sub
je
mov
sub
mov
jns
mov
sub
push
dec
int
adc
std
mov
pop
mov
jmp
lds
imull
push
dec
inc
in
sbb
mov
loop
sti
out
and
mov
jp
test
sbb
mov
stos
mov
jmp
and
int
rorl
xorl
test
jo
or
xchg
daa
rcr
nop
sub
lcall
scas
xchg
jl
in
popf
inc
pop
jle,pn
es
fimull
cmpsb
sbb
mov
cmp
out
movsb
fadd
inc
pop
pop
pop
outsl
sti
push
int
adc
aas
ret
stos
pop
les
inc
in
fstps
push
sbb
ss
mov
fwait
xchg
inc
leave
insl
lret
mov
mov
or
xlat
hlt
mov
test
inc
in
and
sub
aas
pop
neg
or
pop
test
mull
fs
sbb
inc
dec
aad
fmul
xchg
std
addr16
xor
jnp
xor
cmp
aaa
mov
pop
xchg
xchg
aaa
ja
add
xorl
mov
adc
pop
pushl
jmp
cmpsb
inc
stos
jg
xchg
jne
std
dec
fbstp
out
inc
push
mov
add
lods
inc
mov
leave
cwtl
add
into
into
xchg
sbb
cmpsb
dec
mov
mov
and
es
jmp
cmpb
jbe
dec
adc
mov
outsl
sbb
arpl
adc
cmpsb
or
cmp
in
sbb
icebp
mov
mov
jmp
fbld
inc
in
or
sti
mov
mov
notl
filds
bound
mov
jnp
or
insb
fwait
bound
cld
shlb
hlt
jae
pop
mov
outsb
jge
movsb
aaa
sahf
mov
mov
std
dec
or
inc
addr16
add
icebp
aam
test
imul
jg
dec
loopne
xor
jns
shlb
out
cmc
ret
test
push
cmp
mov
fiadds
mov
out
pushf
pop
mov
jl
jmp
push
loopne
inc
xchg
lods
sbb
aam
insl
jle
push
fisubl
fwait
dec
and
push
imul
push
fs
pop
xchg
ds
adc
nop
xchg
pop
adc
mov
sub
ss
mov
imul
aad
push
jge
push
mov
mov
add
into
jno
jl
and
aas
jl
sti
fwait
aas
in
lock
pop
mov
stos
add
pop
push
pop
inc
push
and
shl
jmp
lea
add
fisttpll
mov
xlat
push
rcrl
sbb
into
push
sub
xchg
xchg
xchg
and
les
scas
test
movsl
and
pusha
lea
mov
sub
adc
loop
ror
dec
sub
int3
xchg
xchg
aas
cli
xchg
lea
mov
mov
cltd
sbb
lret
lret
add
pop
jbe
test
push
in
insb
push
add
push
aaa
add
shrl
xor
nop
adc
adc
outsl
iret
lods
out
cmc
sub
mov
cmp
lods
mov
or
lret
adcl
out
fidivl
inc
enter
or
xor
push
sub
jns
pop
inc
imulb
inc
fdiv
add
or
sub
push
js
mov
dec
jecxz
daa
arpl
in
dec
cwtl
mov
jl
sub
xor
jge
jp
icebp
jmp
inc
cli
nop
clc
test
mov
xchg
pop
rclb
and
push
iret
movsl
lcall
or
jg
orb
cmpsl
push
push
daa
xor
inc
jge
mov
mov
add
xchg
mov
mov
scas
das
xchg
cmp
in
fcmovbe
iret
sbb
fs
inc
sti
repnz
add
jb
ror
cli
add
sub
jg
lcall
outsl
cmp
lret
iret
cmpsb
shl
and
add
push
loop
add
inc
out
jge
jp
imul
leave
dec
or
jecxz
nop
jb
push
aaa
lret
push
mov
in
fidivrs
shll
xor
inc
cmpsl
dec
test
lock
lods
jb
pop
rcrb
inc
bound
repz
inc
inc
mov
arpl
xchg
push
push
sub
cmp
inc
test
mov
xor
js
addb
or
inc
push
pop
push
add
cmp
clc
and
adc
jno
fidivrs
outsb
call
ja
inc
shr
cld
lods
mov
xor
jl
nop
sbb
out
inc
fsubrl
dec
dec
mov
xor
int
mov
pop
test
jge
jecxz
gs
les
push
insl
xchg
popa
mov
repz
div
jae
lds
std
negl
xor
int
bound
fildl
adc
pop
xor
addb
xchg
add
out
xor
rclb
push
daa
adcl
jo
sahf
adc
subl
fsubs
dec
adc
ss
jecxz
or
mov
scas
jge
mov
and
movsl
mov
enter
sarb
ja
add
rcrb
rcrl
xchg
mov
dec
sbb
adc
mov
mov
mov
sahf
insl
fadd
push
std
notl
dec
or
push
stos
lret
cs
ja
push
jbe
aad
pop
inc
push
push
scas
scas
shll
fists
outsb
sbb
pop
and
inc
sub
out
inc
jo
loop
mov
sbb
cmp
enter
sbb
cmc
xlat
orb
xor
inc
dec
inc
fs
or
in
iret
cmpsb
aaa
in
adc
add
adcb
mov
lret
cmp
mov
into
push
add
test
nop
add
sbb
fisttpll
jge
push
xor
push
aam
push
rcll
adcl
cmp
dec
inc
pop
cltd
shr
mov
dec
gs
aam
xchg
and
or
mov
mov
mov
pusha
mov
sbb
data16
dec
add
cli
ja
ret
ret
insb
sbb
mov
aas
push
fld
shll
out
test
inc
ljmp
imul
and
loop
repnz
dec
mov
loopne
xorb
push
icebp
adc
mov
ja
les
mov
mov
fmull
frstor
mov
mov
push
shlb
xchg
ds
ret
cmp
aam
loope
add
xchg
in
es
shl
sarl
adc
push
adc
fimuls
xor
sbb
jae
test
xchg
andl
jp
sub
cli
cltd
int
xchg
gs
inc
mov
sbb
gs
push
jmp
mov
dec
arpl
mov
inc
repz
movsl
fiadds
outsb
mov
mov
loopne
mov
out
stos
imul
daa
jmp
xor
sbb
pop
pop
mov
cmp
popf
fimull
gs
pop
leave
sbbl
jecxz
in
pop
dec
sub
cmpsb
mov
loope
sbb
add
out
dec
or
lahf
lcall
cltd
test
cwtl
ja
pusha
gs
sarb
push
jb
lds
xchg
jg
movsl
sub
push
lea
pop
fimuls
xchg
xor
adc
mov
gs
into
iret
inc
les
pop
ss
push
sub
aad
jecxz
jo
cmp
or
xor
and
inc
out
cmpsb
into
xor
ja
ja
sarl
lods
sbb
dec
jl
mov
push
mov
pop
jne
and
ds
xor
jle
testl
xchg
xchg
repnz
xchg
les
push
push
lea
addr16
xchg
pop
push
sub
in
dec
int3
in
xchg
xor
mov
inc
ret
inc
dec
adc
fisubrs
out
jmp
xchg
cs
xchg
cmc
bound
insl
icebp
sub
mov
bnd
cmpsl
xchg
sub
aad
push
into
enter
outsb
fsubrs
inc
mov
mov
add
fisttpll
adc
xchg
dec
pop
xchg
sbb
inc
add
pop
pop
dec
fnstsw
lock
sub
movsl
shrl
sub
popa
es
push
popf
loop
add
mov
lcall
cmpsl
pushf
xor
shrl
inc
rorl
js
sbb
enter
xlat
shll
lds
inc
rclb
cwtl
push
and
and
cmpsl
mov
sub
mov
movb
mov
sbb
xlat
adc
jnp
movb
jne
push
sub
pop
push
mov
leave
mov
rclb
sub
adc
and
imul
ja
loop
or
dec
fidivl
sti
popa
push
push
sbb
mov
cmpsb
push
pslld
sbb
in
out
pusha
inc
dec
mov
pusha
sub
xor
out
ja
mov
xchg
adc
cmc
push
not
dec
or
ds
cmp
or
xor
fcomi
sub
lods
adc
pop
xchg
filds
sar
int
jg
sbb
or
fs
movsb
add
push
mov
or
dec
push
test
lahf
fldenv
repz
jb
loop
jne
adc
mov
and
repz
iret
dec
ss
test
loop
mov
jb
inc
adc
scas
push
ret
or
jo
xor
xor
stc
sarl
aad
jg
lock
sub
mov
xchg
add
add
subb
lret
push
test
lea
jno
ljmp
dec
fildll
push
cmp
cmp
movsl
jl
loop
loopne
adc
test
push
in
pop
or
push
mov
adc
idivb
addl
lods
dec
push
das
je
xor
or
inc
cmp
loopne
xchg
out
xchg
push
dec
data16
add
sub
xchg
jbe
mov
negl
dec
out
push
or
mov
jg
jl
cmp
sarl
pop
cmp
mov
dec
mov
push
adc
in
and
xor
or
cmp
push
ljmp
es
imul
add
adc
push
test
negl
sbb
inc
call
ljmp
push
mov
enter
sti
mov
push
mov
fwait
mov
out
or
in
ljmp
aaa
sti
jno
test
fimull
repz
jl
ds
and
arpl
lret
or
and
add
addl
jmp
sub
pop
dec
jecxz
dec
cltd
popa
fcmovbe
or
mov
jmp
and
jg
jbe
dec
stos
popf
jmp
les
lcall
sbb
jge
inc
cmp
adc
sub
aaa
fisubs
push
rclb
inc
scas
addr16
or
mov
xchg
mov
jbe
push
xor
call
jg
fsubrl
or
xchg
mov
dec
cmp
and
daa
nop
pop
push
das
rolb
push
pop
mov
dec
scas
imul
xchg
repnz
repz
and
lahf
jno
js
and
xchg
jne
jns
mov
stc
xor
sbb
push
mov
mov
xchg
jns
sbb
and
addb
imul
dec
mov
and
or
outsl
clc
clc
cmp
xchg
jae
sti
jnp
mov
push
shlb
add
lcall
or
dec
inc
in
or
fistps
lret
stos
test
pmullw
inc
push
fmulp
out
xor
bound
jle
fcmovnbe
sub
pop
movsb
cmp
shll
fld
push
cmp
aas
xchg
mov
jl
xchg
sbb
pop
stc
sbb
jl
pop
mov
pop
xor
xchg
push
call
mov
mov
add
mov
jp
insb
add
adc
stc
mov
mov
es
andb
ss
daa
mul
mov
arpl
imul
add
inc
mov
cli
sub
jg
loope
push
mov
negl
pop
mov
add
pushf
pushf
and
ja
mov
mov
cmp
cmpsl
push
push
xchg
shl
stos
insb
lods
cmp
inc
mov
lea
fldcw
jbe
add
lea
imul
jg
ret
adc
inc
add
aas
xchg
sub
fcmovne
and
push
test
pop
mov
scas
aas
faddp
push
push
mov
cmp
sbb
inc
out
fiadds
jl
mov
and
jecxz
rclb
inc
fists
add
sbb
jge
sbb
test
cmpsl
inc
pop
push
xor
xlat
xor
loopne
mov
xchg
inc
ficomps
sbb
mov
out
lcall
mov
rorb
js
inc
out
sbb
jl
pop
insb
lods
lods
xor
dec
mov
mov
repnz
mov
adc
push
gs
daa
int
adc
push
sub
dec
xlat
rcrl
hlt
fsubrs
mov
jle
push
js
lcall
sbb
test
cmp
pop
xchg
and
add
inc
jg
xorb
xchg
xor
lds
mov
mov
pop
dec
ds
mov
cwtl
jne
sbb
mov
inc
mov
dec
sbb
push
or
mov
lea
dec
out
mov
push
cwtl
cmp
sbb
cmpsl
lcall
popa
dec
push
shlb
shrb
mull
xchg
imul
sbbl
mov
mov
repz
mov
popf
ret
sbb
pop
mov
xor
movsb
and
push
mov
cwtl
mov
add
pop
inc
xchg
xor
sbb
fsts
push
jb
inc
pushf
cmp
mov
les
inc
aad
sub
mov
ss
imull
js
cwtl
iret
push
dec
decb
and
outsb
ret
mov
mov
dec
idivb
imul
loop
fcomip
mov
mov
cmp
mov
jge
movsl
mov
imul
sbb
nop
cmpsb
and
mov
adcb
mov
adc
jns
push
adc
aam
sub
fsqrt
push
sub
sub
lret
stc
push
push
stos
add
repz
scas
pop
lret
push
jecxz
aad
in
jg
lcall
jne
pushf
jno
fs
jne
adc
jg
and
cli
cmpsb
fistpll
popa
rcll
loopne
sub
jb
clc
stos
push
lahf
pop
aas
mov
test
fdivl
mov
aaa
in
mov
test
out
adc
push
push
js
push
sub
movsb
cmovo
mov
mov
pop
lahf
daa
push
stos
lds
dec
sbb
mov
inc
jmp
inc
packssdw
pop
std
out
or
mov
push
or
sahf
pop
lods
add
mov
icebp
scas
sbbb
inc
dec
jbe
imul
icebp
add
add
nop
pop
sbb
sub
dec
mov
xchg
fxch
inc
in
cmpsl
mov
js
or
or
and
arpl
inc
sbb
test
popw
in
dec
push
push
dec
bound
sbb
jp
fsubrs
das
lcall
xor
ljmp
hlt
cmp
inc
repz
daa
mov
fstl
shlb
icebp
push
push
jg
loop
data16
jmp
fwait
xor
xchg
arpl
xor
fdivp
xchg
xchg
imul
xchg
sbb
stos
add
popa
cmc
out
loop
jl
outsl
js
cwtl
push
add
popa
push
mov
and
mov
sbb
push
pop
int
fisubl
add
jl
fcom
loope
shlb
add
clts
cmp
in
xor
and
lret
xchg
into
push
push
push
mov
sbb
pusha
push
repnz
cs
daa
xchg
mov
adc
cli
push
fnsave
andb
pusha
popl
gs
sti
mov
std
push
mov
cltd
ds
negb
cld
lcall
mov
sbb
pusha
xor
sbb
fimull
xchg
mov
mov
pop
pop
or
lret
loop
adc
adc
bound
outsb
popa
dec
bound
dec
add
sub
adc
cwtl
stos
pop
daa
push
xlat
sub
jae
test
insl
data16
loop
stos
pop
in
jecxz
xchg
push
arpl
mov
stos
sbb
orb
jo
jmp
imulb
jl
sahf
jb
adc
and
push
and
sub
xchg
push
ljmp
cmp
cmp
movsl
xlat
lret
popa
mov
xor
push
js,pt
movsl
sti
xor
out
xchg
jg
mov
add
mov
mov
mov
pop
les
fxch
ja
aaa
out
int3
out
pushf
fnsave
adc
dec
arpl
push
cmp
loopne
test
arpl
and
push
imul
jne
orb
mov
lahf
ret
xlat
dec
std
fwait
jb
std
mov
cld
cmp
outsb
sbb
mov
cmp
shl
push
test
push
push
pop
adc
loopne
dec
xchg
sub
pop
pop
in
and
adc
push
and
sub
cwtl
xor
cmp
das
cmp
inc
imul
clc
add
pop
and
sub
cmp
dec
adc
loopne
push
std
cltd
lea
bound
jb
test
jbe
dec
push
inc
mov
mov
or
fistpll
movsl
or
shr
or
xchg
jg
mov
imul
mov
cld
mov
dec
lcall
test
xchg
sub
mov
lret
xor
mov
pop
pusha
mov
mov
outsl
ret
cmp
adc
imulb
jp
call
das
out
orl
cli
data16
in
xor
xor
pop
sbb
test
cmp
add
mull
dec
jge
and
cmpsb
push
subb
rclb
xchg
dec
roll
cmp
push
ficomps
pop
jl
stos
sub
mov
mov
lds
mov
push
xor
jle
outsl
cmp
jl
xchg
idivb
and
mulb
and
inc
sub
mov
movsl
das
sbbb
sbbb
dec
int
es
aam
les
mov
int
jne
xchg
imul
out
add
enter
outsl
or
fs
mov
cld
mov
in
jg
fstpl
cmp
sub
dec
test
mov
outsb
mov
inc
jp
pop
dec
cmc
cmp
pop
mov
sub
lahf
outsl
xor
cmpl
xchg
mov
push
add
je
or
lahf
ja
jbe
cmc
add
sbbl
push
cmp
mov
sbb
sub
imul
add
mov
adc
sar
mov
into
sahf
sbbb
push
cwtl
push
push
stos
cmp
or
js
cld
std
int
int
repz
dec
insl
lods
mov
fbld
pop
dec
ss
sbb
loop
cs
adc
or
fstps
out
push
idiv
push
pop
je
stc
movl
mov
dec
adc
mov
push
pop
and
and
inc
jmp
xor
sub
out
xor
imul
ss
or
andl
inc
sbb
cmp
add
test
mov
xchg
mov
xchg
andl
test
popa
imul
inc
cli
dec
out
pop
hlt
jmp
sbb
jl
add
data16
cmc
aaa
inc
mov
pop
cmpsb
loopne
push
ficoms
add
sahf
and
es
pushf
mov
jne
xor
dec
push
xchg
cli
mov
int3
fmuls
fnstsw
cmp
outsl
lods
lods
adc
mov
and
or
stos
fxtract
push
jb,pt
jecxz
push
or
ficoml
imul
xchg
pop
inc
mov
lds
icebp
or
adc
lea
jmp
pop
jns
arpl
push
mov
imul
test
setbe
les
pushw
adc
mov
dec
in
movsb
push
add
jbe
push
cwtl
cs
fwait
mov
xchg
cwtl
jnp
sbb
hlt
lods
jmp
scas
jmp
add
lret
push
mov
insb
outsb
andl
notl
push
sbb
test
mov
xchg
push
cmpsl
and
pop
mov
xchg
sahf
sub
add
add
and
xchg
adcb
or
xchg
daa
jecxz
fldcw
push
xorl
or
fcompl
out
fstpl
rcr
call
mov
addr16
xor
pop
adc
in
aas
adc
dec
xorl
outsb
mov
jge
mov
xchg
mov
lds
cmc
fdivrp
test
push
jg
mov
dec
dec
jae
mov
sarl
add
in
insl
cmp
mov
mov
pop
cmp
cmpsl
les
jbe
sbb
push
testb
pushf
addb
push
mov
gs
fsub
jmp
xor
or
mov
sbb
push
or
dec
cmp
push
jnp
mov
loopne
cltd
sbb
push
and
jecxz
adc
and
mov
jbe
out
aas
sahf
jp
lret
cmp
shl
and
sub
test
aas
cmp
or
mov
inc
mov
js
xor
in
pop
loopne
or
aam
mov
or
int3
xor
dec
cmp
daa
xor
dec
incb
iret
sub
push
lahf
icebp
mov
int3
pop
jno
and
out
mov
prefetch
repz
mov
out
rcrl
add
dec
xchg
in
popl
push
mov
mov
test
dec
icebp
jns
mov
mov
lock
aas
push
pop
jg
cmpsl
xchg
xchg
arpl
push
mov
push
dec
aas
bound
mov
je
mov
test
stos
pop
inc
mov
loopne
or
mov
sub
int
mov
xchg
mov
and
add
ss
loope
dec
mov
loop
sub
lods
out
push
xor
jle
outsb
scas
pop
out
pop
cmp
xlat
xchg
jg
sti
imul
mov
xor
popa
dec
data16
out
and
sbb
jo
inc
add
lcall
cmp
mov
cmp
fnstsw
push
jae
inc
pop
add
stos
adc
stos
cmp
dec
ss
nop
imul
scas
xor
xor
ljmp
subl
sbb
mov
cmp
sahf
pop
sbbl
and
xor
loope
jnp
jo
dec
mov
inc
adc
dec
iret
jno
outsl
mov
loop
in
sbb
sbb
adc
cli
les
arpl
lahf
int
inc
sub
mov
lcall
dec
mov
dec
test
jp
xchg
mov
inc
outsb
add
mov
and
mov
push
mov
shlb
mov
and
or
mov
sbb
test
lods
es
int3
orl
or
inc
adc
arpl
aas
shl
scas
jp
xchg
hlt
out
and
leave
stos
and
outsb
icebp
dec
enter
push
enter
je
lods
rcll
xor
fs
stc
or
and
loopne
xchg
mov
mov
xchg
addl
push
fwait
in
sub
mov
cmp
std
inc
roll
mov
cli
int
jne
or
call
add
out
addr16
cmp
shlb
popa
popa
cs
in
lcall
loope
lods
dec
in
pop
aam
pop
pop
xchg
sbb
pop
out
mov
pop
xchg
push
push
sbb
or
push
shll
and
add
roll
dec
fnstenv
roll
cmp
adc
je
xchg
inc
or
push
xchg
xchg
ja
shrl
loopne
add
shr
jae
stos
into
pop
cmp
xor
mov
push
xor
sub
push
daa
add
xchg
jae
enter
sahf
adcl
inc
outsl
sub
out
iret
lea
or
inc
xor
repz
inc
imul
adc
out
xchg
and
sbb
push
inc
pop
pop
sub
arpl
cmp
push
xchg
mov
cmp
and
clc
adc
inc
inc
xchg
or
cmp
cmp
pop
inc
lods
sarl
mov
rcrl
arpl
or
and
repz
sub
xor
das
aaa
popf
ss
jmp
pop
movsl
loope
outsb
iret
pop
inc
mov
sub
repz
or
je
movsb
cmpsb
popf
push
lods
sub
add
sbbb
inc
push
nop
cmc
arpl
outsl
arpl
sbb
sbb
loope
xchg
or
movsb
mov
mov
xchg
sub
mov
outsb
or
sbb
int
mov
ss
push
pop
xor
inc
xchg
add
pop
jecxz
ss
sbbb
push
icebp
jge
cmp
fistpl
sbb
data16
lods
and
insl
popa
rolb
pushf
or
icebp
mov
aaa
popf
lret
mov
jmp
push
cmc
mov
xchg
and
jle
adc
loopne
shr
or
lret
push
xor
movsl
cld
sahf
daa
stos
andl
xor
jecxz
adc
stos
inc
push
popa
adc
sbb
add
pop
mov
jge
jbe
sarl
adc
mov
test
mov
gs
ljmp
rcrl
les
sahf
in
aad
movsl
in
out
in
inc
stos
into
push
xor
lcall
add
jge
push
ror
jl
pop
mov
push
xlat
or
outsb
aam
jmp
test
pop
xor
or
xchg
fimuls
dec
pop
adc
stos
pop
mov
xchg
out
pop
mov
pop
cmp
cld
fs
imul
sub
mov
cmc
scas
jmp
adcl
insb
orb
bound
aam
test
xor
repz
ss
hlt
pusha
jle
jl
insl
lock
and
aaa
add
jmp
cmp
cmp
xorb
add
add
gs
xor
out
sub
jae
into
sbb
nop
gs
jecxz
sub
lahf
fwait
in
test
dec
loop
cs
and
mov
mov
mov
aad
outsb
jl
or
test
adc
sub
add
jp
ljmp
fldenv
fcmovu
push
cmp
outsl
add
push
sti
xchg
sub
xor
je
dec
es
cmp
in
mov
scas
push
pop
sbb
xchg
xor
sbb
and
leave
cmp
aam
imul
int
jecxz
jae
ljmp
dec
dec
adc
xor
xchg
mov
inc
jmp
int
push
fidivs
ja
jl,pn
lret
cmpsb
outsb
jmp
fsubrs
jmp
loop
aaa
lods
ds
leave
movsl
fdivl
pusha
add
hlt
adc
loope
jmp
xchg
mov
mov
push
popa
sub
push
fcmove
dec
lods
lret
jmp
add
loopne
push
inc
and
jbe
mov
frstor
ret
fisubrl
inc
scas
rorl
mov
outsb
cmp
inc
call
jae
sti
xor
xlat
test
lea
loope
ja
not
cltd
call
cmp
cmp
adc
sub
sub
push
popa
add
fmul
xchg
push
adc
stos
xchg
mov
fcmovbe
mov
aam
mov
sbb
lods
fisttpl
pop
xor
imul
adc
in
add
jl
rcrb
mov
mov
sub
nop
rorb
sbb
push
rol
in
xor
pop
aad
movsw
outsl
ja
push
dec
lcall
pop
push
or
mov
je
loope
fisubrs
xchg
out
clc
pop
xor
popa
pop
mov
mov
add
lds
push
push
jno
pop
mov
xchg
mov
inc
adc
inc
jp
rclb
adc
es
jne
shll
mov
sub
cmp
lea
leave
jecxz
movsbl
call
stc
add
adc
scas
xor
and
pop
das
dec
xor
test
jle
fs
test
movsl
mov
xor
loop
xchg
mov
push
lea
insl
cmp
aaa
test
mov
xchg
imul
andb
xchg
inc
iret
sarl
dec
lods
mov
out
add
sbb
shr
aad
movhps
cmp
push
jns
sub
push
inc
cmpsb
push
addb
movsb
cmp
mov
adc
mov
out
or
out
scas
icebp
aad
pop
mov
mov
adc
iret
cmpsb
fcoms
push
imul
push
cmp
or
in
vpcmpeqb
xchg
out
mov
xor
fcmovu
dec
or
xor
cmp
mulb
data16
popf
add
xchg
jl
movsl
fcoms
pop
scas
fstl
push
cmc
add
fildl
test
jbe
test
idivl
rclb
mov
adc
inc
stos
sub
dec
insb
aaa
test
sbb
cwtl
sbb
loop
cmp
xor
mov
mov
dec
roll
je
daa
jo
xor
shrl
adc
orl
sub
popa
call
inc
xor
inc
add
sbb
jbe
in
popa
mov
and
arpl
lahf
push
aad
out
stos
fistps
dec
mov
leave
test
mov
loopne
fistpll
out
cmp
fsub
jg
ja
cmp
bnd
mov
dec
das
lds
in
fstpl
ret
pop
andb
jns
jl
sarl
jb
sti
inc
repz
aad
popl
sub
dec
or
insb
test
add
loopne
jae
xor
mov
setl
sub
mov
dec
add
mov
mov
outsl
pop
push
pop
in
mov
ds
fnstsw
out
pop
mov
mov
les
loop
push
xlat
jne
out
stc
cmp
push
jl
cmpsb
test
scas
jg
aad
in
jmp
lds
push
sbb
daa
jl
cmp
jg
push
cmp
lcall
addb
mov
hlt
loop
ss
push
dec
jne
jbe
pop
inc
nop
pop
add
lea
xor
cs
popf
repnz
mov
xlat
push
pmaddwd
pop
and
xchg
clc
in
dec
scas
push
test
pushf
inc
push
imul
jb
imul
push
jb
push
outsb
icebp
sub
fstpt
push
lods
cmpsb
adc
cmpsb
loop
mov
inc
or
iret
push
jle
add
mov
call
shlb
adc
jle
xor
add
inc
aad
clc
into
xor
jns
xchg
inc
push
push
dec
jge
xor
lret
add
mov
cvtps2pi
jmp
rcll
cltd
add
jge
sub
inc
lods
push
jbe
into
lcall
xor
mov
roll
push
sub
cwtl
xchg
xorl
es
call
in
inc
cmp
mov
testl
cmp
scas
ja
mov
push
es
rclb
push
cs
movl
or
dec
loopne
std
hlt
jg
es
loope
sub
mov
xchg
lods
sub
mov
sub
xchg
push
shll
adc
mov
insl
push
jae
ss
push
iret
fimuls
xor
out
mov
int
cmp
loop
fstpt
mov
js
mov
mov
out
ds
add
aas
mov
mov
ret
push
insl
push
lcall
subb
stos
push
jne
and
in
pushf
shl
jmp
jns
and
pop
xchg
shlb
sbb
adc
dec
fdivl
or
push
push
es
mov
mov
cmc
pop
sarl
jp
jmp
mov
or
pop
test
adcl
or
bound
cmp
insl
mov
jl
sub
loop
push
mov
or
add
fisubl
mov
mov
or
xor
rolb
xchg
push
inc
pop
mov
mov
add
jns
jo
in
or
outsb
mov
sbb
in
push
mov
mov
jno
jae
and
aas
mov
jnp
pop
xchg
mov
shl
dec
repz
xchg
addb
fnstsw
xor
jnp
cltd
mov
xor
cmp
xchg
test
aas
mov
adc
outsl
and
pop
xchg
iret
xor
aad
cmc
sbb
fistps
mov
fmul
lds
notb
outsl
repz
push
mov
ret
dec
xchg
mov
dec
adc
push
push
adc
adcl
fs
fs
fiaddl
icebp
pop
xlat
les
pop
and
sub
int3
push
cmc
sub
jns
push
daa
sub
jp
lock
cmp
aad
jmp
and
mov
sbb
jbe
inc
sbb
fwait
in
mov
loopne
psrad
lea
loope
mov
popf
out
out
sub
or
cmp
inc
mov
lods
fsubs
out
pop
loope
arpl
pop
cmp
scas
mov
or
popf
out
push
aaa
push
test
sub
mov
fcom
jo
dec
call
pop
popa
pop
sbb
imul
xor
loopne
and
and
sbb
addb
xchg
loope
in
aaa
ret
mov
aad
xchg
inc
push
jb
mov
mov
addr16
or
mov
addr16
cmpsl
xchg
mov
cmp
aas
mov
or
rcrb
les
xchg
test
popa
rcrl
aas
mov
pop
loopne
pop
fsts
sbb
mov
push
es
add
jae
mov
sbb
mov
mov
push
out
mov
aaa
sbb
pop
push
jmp
in
add
push
arpl
mov
mov
in
movsb
mov
fsub
fninit
pop
hlt
sbb
sbb
pop
mov
mov
imul
loope
loopne
orb
jae
loopne
sbb
sbb
pusha
pop
and
rolb
fwait
push
cwtl
xorl
js
lods
pop
scas
bound
pop
cmpsb
adc
mov
in
loope
in
out
out
shll
cmp
cmp
cmp
lcall
jge
xor
mov
xchg
test
in
mov
stos
je
mov
int
jno
out
mov
cmp
jmp
adc
shrl
popa
std
fsubrl
jnp
ret
sbb
insl
and
mov
daa
xchg
xor
mov
cs
xor
xlat
push
inc
ret
hlt
adc
or
push
lea
xchg
pop
mov
in
adc
dec
lods
cmp
adc
sti
push
lret
stc
xchg
enter
jno
cmp
pop
in
aad
sbb
ret
add
sub
cmp
push
or
pusha
jmp
xchg
jnp
jbe
dec
xchg
adc
mov
stos
adc
inc
dec
in
data16
and
inc
test
xchg
mov
push
or
aaa
jbe
imul
fdivr
nop
push
pop
fwait
jl
jle
mov
daa
cmp
sub
ss
out
addr16
scas
arpl
lret
jbe
sarl
icebp
jnp
jl
jle,pn
mov
mov
mov
pop
movsl
insb
repnz
cmp
sti
rep
clc
pop
inc
xchg
imul
pop
inc
jmp
inc
mov
mov
adc
stos
lret
sbb
out
arpl
xchg
jnp
mov
aam
xchg
jne
shlb
add
cmc
movsl
sbb
xchg
inc
push
push
loopne
sti
hlt
sahf
outsl
js
mov
jl
clc
icebp
gs
push
push
loope
clc
adc
mov
outsl
lods
inc
xor
add
mov
jns
mov
mov
cmp
mov
inc
out
lock
sbb
xor
aad
out
js,pt
rcrb
mov
cmp
lea
push
push
scas
imul
fbld
nop
cwtl
iret
gs
cs
lea
xor
dec
dec
or
jle
sahf
adc
testl
and
push
ret
xchg
or
jg
cmp
or
dec
dec
insl
push
and
shll
orl
jg
test
mov
pop
out
cltd
inc
sbb
xor
push
adc
in
js
adc
mov
mov
push
fcoms
fwait
repz
lcall
out
cmp
xchg
pop
loop
add
rcll
dec
or
movsl
jp
insb
stos
dec
inc
fs
add
mov
in
fidivs
xor
jp
mov
xchg
xlat
or
cld
dec
stc
mov
dec
pop
cli
fnstsw
pop
pop
mov
fidivrs
outsl
mov
nop
rol
das
sub
push
ds
stos
ja
jl
sbb
jle
out
adc
or
pushw
loope
cli
adc
xor
sub
xlat
cmpsb
jle
xchg
sub
inc
dec
lret
sbb
hlt
jl
dec
pop
mov
popf
xor
and
inc
sarl
out
sub
sbb
xchg
push
arpl
jae
mov
mov
push
subb
imul
jle
push
mov
js
outsl
adc
lahf
sbbb
xor
aad
adc
xor
pop
jle
mov
cltd
push
test
jae
sbb
fwait
popa
dec
je
shrl
dec
ss
mov
sbb
mov
jns
ss
imul
loopne
scas
in
cmpsl
inc
setp
sti
mov
ficoml
push
xchg
mov
repz
mov
mov
pop
out
ss
dec
push
out
add
jl
lods
lcall
lds
mov
pop
fs
or
or
adc
cli
push
loopne
mov
adc
sbb
sub
pop
test
mov
fidivs
andb
cwtl
jp
inc
icebp
out
ds
movsb
aaa
pop
test
daa
pop
and
mov
lcall
pop
hlt
adc
jl
mov
mov
push
pop
dec
or
mov
jns
sbb
stos
ljmp
mov
add
les
adc
in
aas
fmuls
adc
pop
add
lods
and
insl
cltd
jno
test
or
arpl
mov
mov
fsubrs
movsl
mov
rolb
or
iret
in
push
sbb
dec
aad
je
adc
imul
lods
cltd
mov
pusha
mov
mov
popa
dec
and
fisubrs
xchg
jp
and
idivl
mov
stos
in
add
arpl
cmp
test
and
xor
xchg
lret
add
lret
dec
dec
xchg
xor
fnstsw
cmpsb
ret
fisttps
jno
mov
jnp
push
out
mov
ljmp
adc
into
out
pop
aad
xchg
push
cmp
cmp
jp
adc
jne
push
add
or
icebp
xor
add
bnd
cmp
fwait
inc
jl
push
sbb
inc
imul
xchg
add
test
and
in
cmp
mov
sub
push
scas
pop
jno
inc
jl
out
arpl
cmpsl
cli
sbb
and
sbb
adc
push
push
xchg
push
jnp
fwait
inc
rcr
sub
xor
xor
mov
add
leave
jo
icebp
xchg
lcall
fsts
mov
ds
xor
cmc
mov
and
orl
rcll
pop
add
sub
stos
dec
pop
mov
push
xchg
or
fildll
jne
push
scas
push
out
jmp
mov
enter
aaa
jp
cmp
sbb
xchg
ss
xchg
mov
dec
mov
ljmp
sti
push
jmp
adc
movsb
pop
ret
mov
fnstsw
pop
lahf
into
aaa
sti
inc
cld
roll
mov
add
loop
or
into
inc
gs
or
sub
and
pop
test
lret
fcmovne
inc
flds
pop
jne,pt
test
cli
pop
pop
xor
xor
repnz
pop
mov
iret
test
xor
icebp
cmp
adcb
rorl
test
mov
jmp
icebp
mov
lea
inc
or
iret
mov
in
subb
sti
xchg
in
xchg
out
je
add
and
adc
lea
push
nop
inc
mov
push
mov
test
xchg
aad
jne
push
lods
jg
call
in
outsb
or
adc
add
ficomps
aas
movsl
pop
cmp
div
lret
xchg
mov
jb
cs
inc
dec
inc
mov
lcall
mov
pop
shrb
xchg
data16
test
jl
cmp
imul
push
add
push
outsl
stos
stc
add
out
xor
jg
push
or
in
out
mov
inc
or
xor
lea
adc
xor
push
and
in
aas
shl
insb
loopne
daa
clc
pop
cs
ljmp
jp
cmp
addr16
cmpsb
lods
incb
imul
cmp
pop
fisttpll
js
aam
dec
popf
in
ret
lret
add
pop
push
int3
xchg
xchg
scas
push
mov
test
stos
mov
enter
in
addl
fucomp
sbb
fildl
cltd
imulb
stos
in
jae
ss
lock
or
dec
in
push
test
push
rorb
jmp
xchg
inc
push
ret
push
pop
dec
push
inc
in
jmp
cmp
sbb
push
or
gs
clc
xor
pop
cli
inc
push
sub
cmc
jge
popa
dec
xor
push
daa
xlat
jl
ficomps
in
xchg
lods
fiadds
adc
imul
pop
loop
ja
push
dec
jae
add
cltd
cmp
pop
out
test
jl
mov
test
mov
and
rcrb
inc
js
xor
mov
push
mov
pop
clc
mov
mov
inc
and
test
adcb
jbe
loop
push
ss
or
sbb
cs
inc
lahf
sbb
movsl
loopne
movsb
stos
inc
inc
sbb
add
pop
pop
inc
adc
insl
sub
add
xchg
xchg
std
xchg
and
and
xor
cmp
pop
out
fwait
xor
dec
mov
stc
cwtl
je
mov
adc
push
add
or
ficoml
inc
cmp
and
pop
xchg
imul
inc
jnp
cmp
mov
fisttps
test
and
xchg
pushf
pusha
sti
lock
pop
dec
enter
pop
outsl
filds
nop
sti
mov
add
inc
loope
cmp
sbb
inc
and
add
scas
mov
int
pop
pop
pop
fwait
dec
and
fwait
cmpsb
jp
push
mov
test
sti
lock
cmpsl
sbb
stos
lahf
xchg
jno
jns
out
imul
insb
faddl
sbb
jmp
test
push
mov
mov
in
sub
mov
call
sub
mov
mov
sbb
push
inc
pop
jne
lds
lea
jg
dec
daa
lret
mov
loop
jb
cli
adc
add
xor
insl
dec
das
dec
loopne
fisubl
ret
repnz
mov
imul
fs
xchg
bound
xchg
cmpsl
repnz
dec
pop
gs
ja
jle
fisubrs
push
mov
xchg
xorb
cmp
push
mov
int
out
imul
cmpl
mov
inc
dec
cld
cmp
das
les
adc
mov
sbb
aas
std
pop
imul
jbe
xchg
into
pop
mov
mov
gs
aad
aad
xlat
fildll
and
loop
inc
lcall
xor
push
and
test
sbb
int
loopne
aam
cli
mov
aas
push
cwtl
push
popf
pop
mov
repnz
adc
test
xlat
cmpsl
std
in
movsw
pop
aam
sub
dec
jg
ret
in
stos
ds
jne
xor
lret
lcall
hlt
adc
repz
aas
sarb
push
in
xor
inc
rcl
pop
cli
push
pop
out
aad
cmp
lcall
mov
leave
mov
mov
pusha
in
gs
mov
ja
push
jle
xchg
and
imul
mov
fwait
cmp
jo
xchg
addl
aam
sti
jae
ret
inc
add
ja
mov
sbb
jp
inc
cmp
aad
cmp
and
sub
mov
adc
gs
jbe
inc
mov
and
xchg
push
test
sbb
and
jb
fwait
test
sbb
into
and
jo
gs
daa
push
mov
push
add
fdivrl
inc
cli
mov
dec
popf
push
push
or
fcmovne
pop
out
ljmp
lret
mov
jl
xor
inc
mov
lret
std
aad
js
mov
scas
and
cmpsl
sbb
repnz
rol
lret
ja
scas
fsubrs
jle
inc
shrb
mov
mov
fdivp
sub
hlt
dec
sbb
push
mov
cmp
push
xchg
cmpsb
pop
mov
or
js
ds
imul
add
pop
push
clc
jae
pushf
ja
xorb
popf
les
sub
mov
lds
inc
sbb
sbb
mov
cmpsl
inc
jecxz
mov
mov
mov
fs
sub
cmp
push
mov
mov
sbb
out
neg
jns
rcr
xchg
mul
pop
in
jo
xchg
std
subl
ljmp
dec
test
and
mov
push
or
cmp
cmc
sub
inc
mov
sahf
push
js
fisubl
sbbl
lcall
leave
add
loop
or
ljmp
clc
and
push
stos
mov
lret
gs
ds
das
je
inc
pop
fcoml
jg
insb
push
ss
test
push
and
mov
movsl
cmp
lret
or
stc
les
xchg
pop
popa
int
fldenv
add
je
sbbl
jnp
push
dec
mov
xchg
cmp
cmp
scas
mov
cmp
mov
pop
jp
mov
subps
fwait
je
push
cli
test
je
xor
sbb
sub
mov
cmpsb
mov
insb
jmp
out
add
inc
aas
mov
loop
rcrb
xlat
xchg
lds
das
das
cmp
add
fwait
arpl
and
frstor
shll
sbb
stos
jno
push
negl
lret
js
nop
lcall
fsubrs
or
scas
xchg
imul
stos
arpl
and
jg
leave
sub
pusha
sbb
add
aad
mov
and
mov
sahf
mov
inc
and
arpl
in
mov
push
and
xor
cmp
rorl
xor
sar
push
and
inc
mov
cmp
lods
cmp
mov
sub
mov
or
ds
mov
fsubs
cmp
mov
mov
adc
jbe
or
mov
xchg
cmpsl
sbb
sbb
pop
cwtl
add
inc
add
push
outsb
mov
xlat
xor
sub
mov
jecxz
jmp
mov
sub
adc
fsts
rcrb
jno
pop
addl
popa
inc
test
fwait
cmp
adc
out
push
mov
or
xlat
push
push
mov
mov
dec
xchg
mov
out
cmp
les
and
mov
popa
scas
fsubs
stos
mov
mov
xchg
mov
dec
pop
cld
inc
dec
popa
mov
andb
mov
adc
dec
lahf
adc
mov
pop
lods
push
js
lcall
mov
daa
movd
mov
stos
pop
loop
je
arpl
push
pop
xor
rcl
in
inc
inc
inc
adc
cmp
negl
mov
add
in
sbb
repnz
repz
adc
mov
ret
mov
cltd
lahf
movsl
sub
dec
add
or
ja
outsb
push
mov
fldenv
popf
fsqrt
loop
rorl
dec
outsl
pop
sbb
inc
add
xor
imul
xor
add
inc
aam
mov
add
das
aam
lcall
or
imul
sbb
xor
imul
std
sbb
jb
shlb
adc
mov
inc
push
pop
xor
xchg
pusha
sub
and
mov
stc
imul
jle
test
mov
xchg
sub
cmpsb
cs
cli
cmp
nop
xchg
and
test
add
cld
push
push
clc
fs
ja
xor
mov
mov
mov
and
mov
cmp
loopne
ss
mov
fwait
ljmp
jns
fs
or
push
loop
out
mov
dec
call
lcall
hlt
fldcw
sbb
adc
cmp
outsb
loopne
cmp
mov
jnp
push
scas
lea
add
lea
push
faddl
sahf
mov
adc
sbb
lds
inc
dec
inc
mov
jmp
inc
mov
lods
pop
xor
jb
jb
nop
jg
fistps
jnp
movsl
enter
fisubs
sbb
aad
mov
add
add
stos
clc
data16
sub
icebp
es
mov
cmp
repnz
mov
popf
mov
adc
cli
adc
or
add
into
loop
sbb
xchg
push
stos
repnz
and
mov
testl
into
fwait
mov
call
or
pop
lds
orb
dec
and
aaa
jno
call
nop
es
cmpsb
jne
jne
in
shlb
xor
xor
out
stos
or
adc
mov
jno
into
add
ss
dec
mov
out
sub
inc
ret
xor
outsb
or
jecxz
sahf
aas
mov
mov
insl
or
loopne
repz
push
sbb
mov
mov
fimull
jmp
add
sarb
xor
scas
mov
jmp
push
inc
cmp
xor
mov
push
adc
aad
xor
cmp
mov
out
push
push
shll
sub
imul
in
repz
jbe
jg
pop
je
pop
dec
test
xor
mov
cld
xchg
test
dec
popf
mov
mov
mov
adc
iret
test
xchg
and
insl
stos
ret
ficoml
jbe
movsl
mov
rol
or
stos
add
popl
inc
cmp
mov
mov
pop
scas
enter
in
inc
ret
mov
loop
fildll
ds
arpl
lret
fwait
sbbl
mov
pop
vmovshdup
loopne
es
jle
and
insb
out
cmc
adc
bound
ds
dec
movsb
gs
jnp
sub
leave
or
aad
dec
sub
mov
pop
mov
loope
add
mov
pusha
cmp
mov
pop
lods
inc
xor
fdivp
arpl
xor
movsb
sub
inc
leave
xchg
lods
mov
push
sbb
mov
cmpsb
pop
pop
enter
aaa
jp
cmp
xchg
scas
sub
stc
sahf
push
incl
test
inc
or
mov
cmc
mov
jb
pushf
fidivl
rclb
mov
ror
or
push
out
jg
inc
xchg
inc
xor
ja
jae
push
cwtl
call
xor
sahf
mov
dec
mov
add
cs
dec
jo
pmullw
cmp
rolb
push
jns
sbb
lods
pop
into
xchg
mov
jae
sub
subps
sub
int
push
mov
and
outsl
cld
lods
sbb
mov
inc
adc
inc
stos
inc
sub
cmpsb
lcall
jno
mov
lds
pop
push
mov
dec
inc
or
adc
movsb
scas
dec
shll
jne
clc
xor
loopne
mov
jnp
or
mov
aam
inc
mov
pusha
iret
scas
add
repnz
or
in
scas
and
inc
jl
in
jmp
imul
dec
or
or
pop
loop
mov
sbb
inc
cmp
jecxz
scas
mov
das
lock
int
xor
popa
cmpsb
push
shrb
outsl
jmp
ret
mov
ds
jmp
fists
mov
enter
int3
mov
dec
insb
add
xchg
jp
int
data16
mov
in
push
jecxz
push
add
push
jmp
jne
xor
xchg
insb
push
imul
pop
push
pop
ljmp
enter
add
xor
xor
and
sbb
jnp
sub
lahf
adc
cmpsb
subl
push
test
cmp
adc
les
mov
mov
lock
subl
cmp
and
lcall
popa
repnz
ljmp
push
pusha
test
inc
inc
dec
jno
je
mov
mov
insb
les
shll
stc
cmpsl
cmp
ret
add
repz
xor
mov
leave
and
jnp
xchg
jnp
out
out
and
cmpsl
fsub
in
jb
or
lods
jmp
inc
adcb
std
pop
xchg
arpl
jno
adc
and
shrl
cmp
icebp
sar
loope
and
mov
iret
pop
adcb
jnp
jle
ret
inc
popl
dec
stos
dec
sti
js
jo
movsl
jp
shll
inc
subb
sahf
stos
mov
cmp
fsts
iret
xor
pop
fsts
rorb
or
into
xchg
aad
lret
test
push
int
inc
mov
fmuls
fdivrs
jg
icebp
rcr
ret
aam
adc
jp
rcrb
cmp
and
adc
or
pop
sbb
adc
push
jno
jmp
popf
and
rorb
mov
pop
fimuls
fucomp
inc
push
mov
sti
outsb
push
adc
xchg
aam
pop
pop
fistps
rorl
lds
jmp
or
ss
movsb
and
sbb
cmp
dec
pop
lret
jb
loopnew
xchg
mov
mov
push
adc
fdivl
cmp
jns
stos
adc
push
add
icebp
jbe
in
enter
sbbl
fwait
popa
or
pushf
pop
in
gs
dec
jnp
push
enter
mov
xchg
mov
enter
movsb
out
or
ss
repz
mov
test
cmp
pop
mov
inc
outsl
int3
add
or
sub
jp
int3
fnstsw
mov
cld
push
imul
out
jns
rcrl
cmc
jo
mov
mov
stc
iret
cmpsl
and
jle
mov
mov
dec
repz
push
xchg
push
loopne
pop
sub
int3
jle
and
aaa
dec
ret
mov
sbb
adc
idivw
shlb
mov
push
movsb
push
sbb
add
push
into
fsubs
rclb
mov
or
callw
ss
imull
dec
outsb
pop
lcall
stos
mov
fs
or
iret
jne
xor
push
out
pop
sbb
push
xchg
andb
lds
movsb
mov
test
adc
fldenv
push
leave
cs
lret
jp
fsts
stos
pop
or
push
inc
mov
push
inc
xor
cmp
insb
adc
arpl
mov
movsb
xor
test
jb
xchg
das
pop
aad
or
repz
lahf
icebp
jmp
pop
mov
loopne
mov
rcll
and
cs
insl
jle
pop
inc
int3
idivb
adc
mov
ficoms
cli
outsl
test
fs
mov
ljmp
ja
adc
aas
xchg
cmp
jl
pop
jno
int
in
cmp
inc
dec
xor
leave
insl
cs
daa
aad
clc
sbb
nop
dec
out
lcall
ljmp
aaa
cltd
xchg
lock
sub
adcl
lret
imul
inc
mov
andb
dec
fldcw
adc
inc
inc
imul
pop
and
adc
out
or
jae
fadd
sub
out
jl
outsl
sub
testl
jg
stc
bound
aam
imul
out
shrl
inc
fwait
jmp
or
push
outsl
mov
sub
mov
ljmp
dec
xlat
ds
dec
mov
mov
pusha
in
sub
dec
add
cs
and
outsl
cmpsb
scas
pop
fistpll
cli
mov
inc
or
adc
jg
and
push
mov
inc
call
insb
dec
insb
xchg
mov
sub
jb
fadd
fisubrl
lret
add
inc
clc
mov
and
jo
test
je
dec
shll
xchg
pop
push
mov
mov
in
loop
movsb
sbb
xchg
mov
cmp
xchg
sub
mov
sub
pop
sti
mov
divl
dec
imul
mov
in
in
ds
fs
pop
sarb
loopne
sbb
sbb
sub
and
xor
mov
xchg
fcmovne
insb
clc
pop
lods
xchg
and
ret
cmc
and
mov
gs
cli
mov
dec
stos
mov
ss
out
loopne
xchg
push
inc
add
cmp
sahf
stos
lods
jl
fdivl
lds
sub
pop
repnz
push
lods
mov
jns
jg
out
push
mov
movsl
sti
cmc
adc
mov
mov
cmp
xor
sbb
and
xor
sti
call
adc
popa
bound
insb
mov
sub
mov
jmp
pop
mov
imul
lods
scas
and
mov
test
mov
cmp
xor
push
stos
mov
aas
sbb
js
mov
inc
push
icebp
jnp
data16
mov
mov
pop
inc
aas
sbb
shrl
or
cli
ja
mov
xlat
sbb
pop
out
push
mov
sbb
sbb
movsb
mov
sbb
sub
pop
cmp
dec
dec
loopne
dec
jle
mov
mov
enter
shrl
pop
mov
adc
sbb
push
lret
mov
push
shr
mov
dec
inc
mov
jl
pop
ret
sub
sub
insb
dec
xor
lods
mov
mov
fadds
dec
addr16
adc
push
sbb
fildll
lods
mov
xor
lcall
and
or
xor
mov
push
movsl
dec
jl
mov
jns
or
gs
das
cmp
adc
push
fcmovnbe
insb
pop
lahf
repz
sarb
je
mov
rcrb
jge
leave
add
inc
nop
sbb
mov
jecxz
pop
xchg
lds
mov
sbb
inc
or
xor
jecxz
and
rorl
sbb
rol
xor
push
add
cltd
push
xchg
loope
mov
xchg
call
or
fstps
cmp
pop
cli
xchg
adc
mov
dec
addl
mov
or
mov
scas
in
test
ret
mov
stos
adc
mov
xchg
lods
mov
mov
sbb
insl
leave
lods
out
in
add
popf
pop
cmp
mov
jb
adc
mov
inc
xchg
push
out
fimuls
mov
mov
cmp
enter
fdivrl
icebp
inc
addr16
cwtl
mov
add
adcl
pop
mov
arpl
inc
cmp
or
ljmp
aad
mov
lcall
dec
dec
lea
pop
lods
mov
int3
add
and
sub
dec
and
sub
push
ss
jecxz
test
mov
movsb
les
sbbl
lods
cltd
sahf
jle
push
in
cli
lea
adc
out
jb
pusha
jmp
inc
cmc
lods
arpl
adc
in
stc
jb
jbe
aaa
rolb
dec
sub
push
add
sbb
rcrl
cmp
nop
hlt
pop
shll
repnz
and
inc
mov
fimuls
cmp
ljmp
ret
push
pop
or
fsubrl
mov
cmp
jge
cmp
xchg
add
xchg
jmp
lods
and
int
or
xchg
mov
daa
packsswb
mov
and
mov
sub
or
and
dec
xor
outsl
lock
mov
daa
arpl
xchg
mov
gs
stc
jle
mov
shl
out
icebp
jle
movl
popa
xchg
data16
adc
push
cwtl
arpl
mov
in
notb
jmp
div
xor
push
xchg
inc
lods
scas
aas
sbb
dec
xor
mov
not
ss
jns
adc
ss
and
mov
and
mov
imul
aam
in
cmpsl
dec
mov
aam
roll
insl
xchg
lea
cmp
in
mov
pop
cwtl
dec
sub
push
sub
mov
sbb
cmp
xor
pop
fstpl
out
fmuls
ljmp
ret
cmp
mov
mov
jno
aam
inc
loope
lds
push
cmpsb
jp
mov
pop
push
hlt
xchg
fnstenv
daa
xorl
fildll
and
fidivl
add
push
mov
sarl
lds
stc
in
popa
jp
int3
cli
push
cs
jecxz
loopne
aam
or
inc
pop
or
pop
cmp
sbb
call
stc
int
sti
nop
icebp
inc
cli
push
shll
fsubl
sahf
fs
mov
pop
lcall
mov
mov
loope
roll
nop
rcrb
sti
les
ss
dec
ss
iret
mov
dec
add
ja
out
push
subl
inc
pop
sub
mov
rcrl
pushf
outsb
ds
sbb
lret
fwait
lods
and
dec
in
xchg
mov
inc
cwtl
adc
into
subl
push
movsl
push
repz
insb
test
dec
jo
cwtl
gs
sbb
outsl
pop
or
enter
sub
aas
jl
inc
in
push
dec
mov
xor
and
mov
sbb
push
jp
mov
and
inc
push
jge
sub
mov
or
cmp
loope
cmpsl
les
xchg
cld
adc
add
add
repnz
xor
out
ret
push
xor
imul
jecxz
call
popa
push
xor
and
mov
call
idiv
adc
iret
mov
jecxz
insl
fst
adc
idiv
rol
dec
hlt
mov
fmull
push
pop
inc
rol
adc
pop
scas
push
loopne
xor
add
aad
adc
arpl
xchg
push
repnz
in
cmp
xor
stc
out
pop
dec
fcompl
int3
and
cmpsb
outsb
shl
in
repz
loopne
adc
sahf
fs
push
dec
add
xchg
call
popa
mov
jmp
into
bound
es
cmpsb
inc
inc
jns
and
inc
mov
mov
mov
je
add
cmp
cmovne
push
adc
clc
xchg
push
jnp
xchg
adc
cltd
push
repnz
fs
mov
adc
push
out
inc
sub
popf
sub
shrb
cmpb
cs
jne
and
push
sbb
jb
fimuls
jne
mov
mov
ret
imul
nop
subb
lods
outsl
int
push
xlat
lret
repnz
das
enter
popf
addr16
mov
add
adc
mov
outsl
adc
pop
jmp
sbb
sub
push
ds
pop
sbb
addr16
fiaddl
out
cld
sbb
fdivl
data16
add
pop
push
arpl
add
js
test
es
and
and
test
lods
jmp
inc
pusha
mov
inc
int
pop
push
fsubr
or
ret
insl
into
std
lcall
cmp
inc
mov
cmova
cmp
pop
lods
cmp
decb
or
push
add
jg
fdivrs
jl
add
inc
pop
loopne
orb
and
rclb
in
or
insl
js
mov
xor
push
clc
scas
push
jge
fdivp
dec
lock
push
lock
sbb
and
pop
xchg
cltd
sbb
add
inc
inc
mov
mov
out
imul
jmp
in
adc
cmpsl
outsl
or
repz
rorb
cmc
push
cmp
adc
leave
and
test
jbe
dec
shrl
icebp
aas
loope
pushf
nop
gs
dec
dec
adc
test
xor
push
add
sbb
xor
ficoml
lret
or
fsts
xor
lock
cmp
imull
sbb
in
cmp
es
rcrb
cltd
pop
rorl
fcmovu
and
sub
fcmovnb
sahf
rol
mov
mov
mov
lcall
scas
loop
mov
lock
adc
stc
test
movsl
inc
or
stc
lea
inc
insb
dec
xchg
shrb
ljmp
gs
mov
mov
jmp
icebp
xchg
push
stos
fxch
and
inc
mov
adc
pushf
xchg
cmpsb
mov
mov
mov
subb
jno
negb
lds
out
mov
dec
cmp
dec
xchg
cmp
xor
bound
sub
loop
loope
jnp
mov
xchg
repnz
inc
sbb
aad
ljmp
fisttpll
push
push
mov
sub
push
cmp
mov
fwait
pop
xor
pop
in
mov
and
pop
mov
or
pop
fs
addr16
xor
jne
xor
mov
push
xchg
les
lods
popf
outsb
out
cld
mull
mov
fnsave
push
jbe
jae
data16
repnz
cmpsb
popa
push
dec
and
push
outsl
es
jp
in
xchg
cmp
add
jl
shll
subb
dec
sbb
lret
daa
sbb
mov
mov
adc
jle
stos
cmp
sbb
lahf
or
inc
stc
jns
sbb
loopne
out
sub
or
fldcw
push
lds
andb
jge
mov
or
movsl
popf
cwtl
mov
dec
pop
mov
cmp
mov
sub
adc
mov
xlat
ljmp
cmp
dec
pushf
jns
xchg
fistpl
and
add
add
int
test
mov
dec
add
xchg
mov
jecxz
xchg
sub
push
lret
mov
inc
cmc
adc
mov
movb
jae
mov
in
lock
lods
xor
and
push
dec
mov
mov
cmp
push
call
adc
mov
aam
test
scas
pop
inc
mov
cmp
mov
jl
ud0
rcll
mov
sarl
adc
sbb
xchg
scas
aas
aaa
mov
push
xor
cmp
mov
jns
cmp
sbb
inc
orb
std
inc
stc
insb
add
ficomps
pop
clc
mov
jl
push
out
inc
and
fs
cltd
jecxz
pop
test
dec
jg
xor
jnp
js
adc
mov
pop
xchg
loope
fstps
jecxz
pop
into
xor
testb
sar
push
cmp
out
divb
jmp
jl
pop
xor
bound
lret
sub
sub
sub
fwait
jbe
sti
insb
cmp
xchg
and
cwtl
movsl
mov
stos
aad
orb
test
test
daa
mov
xchg
shll
jne
jae
add
xchg
loope
cltd
inc
ds
inc
mov
mov
add
xor
faddp
cmp
pop
fildl
pop
cmp
lods
in
jns
sub
or
aad
or
xchg
xchg
ja
cmpsl
cltd
aaa
or
xor
jb
loope
sbb
jb
xor
xor
adc
push
dec
jecxz
cli
ljmp
pop
int3
mov
lahf
ja
enter
in
cmp
mov
jne
es
in
jbe
arpl
sub
jge
ret
mov
stos
int
outsl
dec
mov
in
jns
or
xchg
ja
clc
popf
mov
jecxz
xor
int3
pop
mov
adc
mov
mov
sbb
dec
jne
jne
je
add
xor
fucomi
xor
insb
ret
ret
es
mov
pop
stos
and
xor
dec
fldl
repnz
dec
jne
test
jmp
inc
adc
push
adc
hlt
xchg
adc
and
sub
add
pop
jns
test
push
iret
sbb
mov
xor
or
add
mov
jns
sbb
mov
rcll
mov
movsb
jg
insl
sub
repz
pop
or
push
adc
xchg
pop
sti
xchg
jo
xor
mov
das
repz
jp
mov
inc
lret
stc
sbb
sub
push
loop
scas
jg
mov
xor
cmp
rcl
insl
pop
test
out
inc
inc
jmp
inc
xor
shlb
sbb
repz
mov
ljmp
push
bound
jbe
xchg
pop
repnz
jnp
sarb
das
dec
dec
fst
jle
data16
xlat
cmp
cwtl
xor
push
add
loope
push
inc
or
out
cmpsl
push
xor
mov
cmpsl
lret
cltd
mov
push
sub
cmc
jge
out
sbb
dec
ds
inc
addps
mulb
in
jmp
kmovb
mov
aas
les
lret
idivb
data16
add
inc
mov
push
lcall
insb
andl
inc
lods
mov
dec
jmp
pop
sbbl
pusha
mov
orps
jno
add
rcll
or
out
adc
leave
stc
mov
dec
ficoml
mov
sbb
stos
pop
xchg
test
push
mov
mov
cmp
loopne
addr16
add
sti
test
cmc
test
js
and
pop
scas
arpl
mov
mov
jecxz
dec
push
inc
outsl
jno
sub
inc
test
aas
cmpsl
cmc
mov
mov
sub
mov
jle
popl
out
sub
mov
lock
push
fcom
movl
insl
mov
lds
in
pop
add
mov
scas
add
lret
jo
arpl
push
inc
sbb
xchg
sahf
sbb
cwtl
cmc
imul
aam
cmp
sti
imul
inc
xor
mov
test
js
push
add
shl
imul
jmp
sbb
or
mov
push
or
add
ficompl
jp
or
rclb
ljmp
jo
fs
and
pop
sbb
aad
jle
jecxz
mov
push
stos
js
les
popa
dec
nop
out
adc
andb
push
pop
clc
adc
xor
and
les
outsb
adc
stos
sbb
call
mov
mov
rolb
mov
lret
push
dec
xor
and
call
or
jecxz
push
mov
push
je
push
das
out
movsb
push
mov
sahf
jl
loopne
push
iret
push
loop
mov
push
int3
push
add
or
and
loop
lods
adc
or
ss
sti
ret
sub
into
loope
sub
jg
aas
xor
push
inc
rcrb
lahf
jns
mov
lods
jnp
mov
bound
stos
decb
xchg
je
lock
and
enter
imul
adc
je
lds
out
in
lcall
mov
adc
fisttps
int3
cs
lret
xlat
adc
mov
pop
shlb
icebp
xor
pusha
pop
push
or
pop
jg
cli
test
mov
sub
cwtl
push
leave
loop
sahf
dec
in
scas
push
loop
mov
iret
mov
out
mov
mov
lock
push
aad
pop
push
test
jp
cmpsl
lahf
fldenv
repz
xchg
xor
stos
fdiv
call
cmp
jl
push
iret
cmp
clc
cs
into
fmull
and
sar
idivb
sarb
xchg
pop
xor
add
mov
and
shll
cmp
lret
dec
out
mov
dec
fcoms
pop
jle
cwtl
xchg
pop
inc
mov
test
and
xchg
push
push
or
or
adc
xor
sbb
sti
in
xchg
and
imul
sub
or
jg
xor
pop
lcall
xchg
gs
inc
cli
inc
pop
push
test
mov
mul
and
sub
js
sahf
int
push
cmp
repz
movhps
push
mov
dec
subb
lock
adc
mov
int
and
insb
cli
pop
xchg
in
fidivs
add
inc
mov
pushf
jmp
cmp
pop
popf
mov
lcall
xchg
pop
mov
out
xchg
lahf
jnp
jle,pt
jnp
adc
add
mov
mov
cmp
ret
or
imul
xor
sub
xchg
mov
push
mov
mov
xor
sahf
mov
dec
fisubs
sbb
loop
add
pop
push
not
xchg
ljmp
mov
mov
jmp
ljmp
inc
xlat
dec
outsl
pop
jns
mov
jg
in
jecxz
mov
push
rclb
mov
popf
cmp
ficoms
repz
add
sbb
shl
loope
cmp
inc
ficoml
pop
jge
shlb
and
xor
add
sahf
sub
inc
ret
insl
or
aaa
in
aam
pop
mov
mov
xor
push
mov
pop
out
dec
flds
pop
jbe
inc
dec
mov
push
mov
mov
sarl
dec
mov
mov
jns
aaa
outsl
or
pop
hlt
and
in
push
out
ds
jae
movsb
addr16
push
sub
xchg
jecxz
out
dec
mov
lods
cmp
aas
test
jns
jge
lea
push
dec
mov
repz
pop
ja
dec
mov
or
call
xorps
ss
pop
sbbb
clc
ds
int3
sbb
lcall
jns
rcll
shlb
rcrl
addb
pop
xor
and
cmp
add
pop
push
nop
mov
inc
cs
cs
or
outsb
test
pop
xor
repz
fiaddl
add
sti
adc
push
sahf
mov
xlat
cmp
add
inc
add
sahf
and
inc
push
call
xchg
insb
scas
or
pop
repnz
adc
jl
sahf
pop
push
mov
es
cmp
mov
in
add
out
out
push
add
inc
jns
les
pop
push
sub
pop
jbe
fidivrs
out
sub
or
shrb
sarl
add
pop
inc
mov
imul
sub
mov
icebp
test
in
sahf
hlt
shll
pop
lds
pop
cwtl
les
jbe
jae
xor
and
xchg
clc
pop
xchg
or
inc
pop
mov
sub
jns
or
cmp
sbb
xchg
lea
mov
sbb
addr16
sbb
mov
adc
mov
xor
ret
mov
jb
cmp
fcmovne
rorb
cmp
jle
jmp
mov
jle
lret
test
pop
aaa
arpl
outsl
jbe
mov
push
push
cmp
lahf
sub
jo
push
push
imul
push
aas
cmp
adc
rorb
pop
xchg
xor
dec
or
fs
xchg
add
arpl
sub
xchg
call
daa
outsl
sbb
out
loope
xor
leave
push
adc
xchg
rolb
cmpsl
mov
stc
test
dec
xor
xchg
sub
loope
cli
mov
lods
leave
adc
xchg
pushw
dec
or
movsl
cmpsb
pop
xor
mov
inc
xor
jo
or
sti
add
mov
sti
mov
test
mov
dec
inc
out
aaa
xor
in
test
mov
push
jbe
mov
push
jmp
fs
movsb
mov
push
dec
outsb
push
mov
inc
mov
imul
imul
pop
call
lcall
dec
jmp
in
or
sub
cs
sti
mov
popf
sub
int3
outsb
push
cmp
cli
gs
sub
pushf
cmpsb
into
sbb
jmp
mov
cmp
clc
fwait
sbbb
dec
pop
jp
scas
cmc
sub
mov
xlat
icebp
mov
adc
cwtl
movsb
xchg
out
inc
pop
mov
mov
push
in
imul
ljmp
sub
jo
ret
int
ret
sarb
mov
int3
sub
inc
lcall
dec
adc
mov
fcoms
std
push
jecxz
fs
fldt
and
les
imul
movsl
or
xchg
inc
loopne
sbb
cltd
jp
inc
repnz
or
inc
pop
mov
lea
movsb
in
dec
vpcmpeqw
fistpl
fisttpl
jne
fiaddl
popl
push
xchg
mov
inc
or
nop
xchg
jno
bnd
sub
xchg
shll
and
je
lret
push
and
jge
sub
decb
ja
push
orl
mov
arpl
popf
xchg
mov
mov
or
dec
ja
cmp
or
test
ret
xor
jnp
or
cmpl
fs
enter
sarl
push
cwtl
int3
imul
stos
mov
cmpsl
cmp
cmp
and
out
and
pop
rorl
insb
xor
aas
push
shl
test
push
fstpt
aam
hlt
into
adc
loopne
or
mov
hlt
out
iret
inc
popf
mov
jl
ficompl
aas
shll
mov
shrb
xchg
sbb
mov
mov
xchg
dec
or
out
lods
sub
hlt
mov
mov
hlt
negb
aam
ffree
mov
inc
cmp
jns
add
loope
movsb
pop
xor
and
frstor
xchg
test
negl
loopne
sbb
ljmp
scas
sbb
and
push
xchg
test
jl
mov
lret
ljmp
push
ja
jg
and
adc
pop
xor
dec
pop
mov
rol
inc
xchg
add
les
repz
cld
enter
dec
in
fsubrs
leave
push
int
in
cmpsb
rolb
jg
jb
out
cmc
roll
inc
in
les
jnp
sub
sub
lods
gs
dec
lahf
in
clc
jl
mov
stos
xchg
mov
push
popf
ljmp
inc
mov
sub
rolb
mov
pop
stos
add
cmp
inc
xor
mov
mov
jg
out
outsb
stos
jmp
pop
adc
xchg
scas
xchg
ljmp
lcall
mov
mov
notb
inc
sbb
pop
ficoms
xlat
icebp
lods
popl
sub
mov
shll
sub
sub
and
mov
outsl
pop
sub
lret
stos
or
mov
testl
fcoms
ret
jg
sti
fimuls
mov
mulb
test
mov
stc
mov
or
adc
shll
mov
fcmovnbe
dec
sub
das
mov
mov
xor
mov
xchg
daa
and
dec
stos
fisubrs
sarb
ror
pop
sarl
xchg
fwait
jge
bound
cmpsl
push
sub
rcll
mov
jns
orb
xor
mov
mov
push
stos
xchg
cmp
mov
add
push
add
jb
add
pop
enter
cmp
and
jbe
jl
add
sub
call
mov
xchg
cmpsb
sub
and
cs
pop
mov
mov
mov
sbb
xor
and
ror
std
orb
mov
cwtl
inc
inc
push
jecxz
ds
out
ja
add
mov
insl
xor
rol
das
and
push
repz
test
dec
int
rorb
jmp
and
iret
aaa
pop
xchg
xchg
mov
dec
pusha
mov
adc
gs
xchg
mov
push
adc
inc
pop
test
push
movb
mov
addr16
gs
insb
popa
adc
push
sarb
push
fmuls
cmp
mov
mov
ret
adc
gs
pop
sbb
cwtl
inc
sub
lcall
sub
sahf
mulb
mov
pop
inc
loopne
pop
insl
loope
pop
movsb
mov
dec
xor
push
scas
lret
cs
push
call
push
movsl
cmc
xor
loopne
shl
out
cmp
adc
lcall
mov
outsb
sti
xchg
xor
mov
jg
stc
mov
dec
adc
sub
push
mov
mov
cmp
lahf
push
dec
push
lods
iret
inc
imul
cmp
cmc
pop
adc
sbb
pop
out
mov
outsb
cmp
and
mov
sub
stos
outsb
inc
mov
pop
clc
lods
lret
or
jp
and
imul
dec
xchg
in
xor
into
out
popa
lds
xchg
notl
xchg
shlb
hlt
push
pop
sbb
movsb
out
divb
scas
test
or
in
int
inc
or
add
imul
lret
lods
sbb
test
call
adc
dec
mov
mov
jbe
imul
mov
ds
mov
daa
dec
jecxz
push
sbb
mov
cmp
or
ret
out
in
cli
mov
jns
mov
aaa
jno
into
and
mov
sbb
dec
dec
inc
lods
add
fcmovnb
add
dec
outsl
pop
sub
pop
out
sbb
stos
pushf
pop
adc
faddl
xor
inc
cld
sbb
sarb
jmp
jnp
mov
cmp
dec
test
movsb
sarl
lods
dec
mov
sbbl
mov
xchg
add
mov
lret
loop
lret
outsb
xchg
sbb
inc
imul
inc
movsl
fwait
rolb
cmpsb
jecxz
shrb
cli
push
inc
push
test
insl
loope
cmp
mov
movsl
adc
pop
int3
call
lahf
cli
cmovns
cli
stos
dec
gs
mov
pop
in
sub
or
xor
jge
iret
into
lock
jmp
and
mov
cmpsl
movsl
add
enter
sarb
stc
or
ret
insl
out
incl
mov
insl
add
pushf
xor
push
dec
jmp
popa
sahf
addr16
ss
loop
mov
dec
jle
repnz
into
dec
inc
inc
mov
push
mov
out
or
fidivl
divl
adc
push
and
lds
das
cmc
daa
nop
into
pusha
stos
int
nop
aad
xchg
xchg
adc
cmp
inc
jae
adc
lret
mov
and
or
inc
adc
popf
in
cmp
ljmp
loopne
mov
xorb
cmpb
dec
stc
sub
insb
ss
int
jmp
jmp
out
popa
lret
jns
in
adc
ficompl
xchg
mov
andb
stos
lret
es
in
push
loopne
scas
sarb
dec
js
insb
shlb
ss
mov
clc
aaa
jle
lahf
jecxz
ret
ljmp
aaa
dec
pop
xchg
or
adc
jmp
adc
rclb
and
fisubs
sbb
push
jge
and
loope
leave
stos
xlat
inc
repz
sub
push
push
jb
mov
shll
xchg
sbb
xor
dec
sbb
popa
divb
or
dec
das
and
pop
and
fmuls
adc
pop
mov
into
les
popf
lods
rolb
out
pop
mov
mov
pop
push
das
cmc
mov
addr16
mov
aad
dec
xchg
fcmovnb
nop
outsl
hlt
mov
pop
icebp
pushf
fucomp
movl
inc
adc
sub
les
sarb
sar
emms
pop
jns
stc
adc
pop
sbb
mov
jo
mov
xor
sub
out
and
jmp
sub
add
imul
mov
xlat
mov
mov
inc
andb
inc
jae
movsb
xchg
dec
call
imul
incb
jecxz
and
imul
xchg
jg
pop
mov
std
push
mov
movsb
mov
sub
xor
xchg
ret
cmp
add
sbb
inc
das
test
aaa
pushf
dec
dec
insl
adc
movsb
into
je
loope
push
push
ljmp
fpatan
fisubl
xor
inc
adc
jno
mov
call
xor
dec
mov
lock
xor
inc
xor
scas
jmp
add
mov
test
mov
mov
pop
pushf
imul
outsb
mov
xchg
pushf
lret
xchg
adc
pushl
cmp
mov
push
fwait
mov
inc
dec
xor
inc
mov
imul
inc
push
cmp
dec
jl
outsb
fildl
add
lahf
cli
pop
push
dec
lock
dec
outsl
xchg
sti
cmp
dec
mov
xchg
hlt
rorl
dec
incb
aad
fldcw
call
popa
inc
push
push
leave
xchg
lcall
mov
jle
out
pmulhw
cmp
sbb
mov
addr16
iret
cmc
cmp
adc
jmp
xchg
jnp
or
sub
pop
lods
dec
ret
mov
push
int3
xor
imul
in
and
ds
sbb
ret
pop
push
cmp
mov
xchg
sbb
cmpsb
loop
fidivs
sbb
sbb
mov
pop
dec
mov
stc
push
mov
fisttps
icebp
adc
repz
jl
push
push
xchg
inc
je
mov
in
mov
shrl
or
mov
mov
jb
cltd
jle
sti
fisubrl
dec
sbb
movsb
pop
add
iret
push
add
pop
imul
dec
inc
into
mov
fwait
mov
jg
or
jno
imul
jl
inc
add
pop
aad
test
outsb
pop
mov
sbb
cld
into
bound
xor
adc
cmp
aad
jg
xlat
negb
dec
lahf
ds
lods
or
aaa
testb
add
jns
clc
mov
add
mov
insb
fiadds
jb
in
or
inc
cmc
iret
std
fisttpll
in
xlat
inc
pop
loop
mov
aaa
or
pop
loopne
push
pop
pop
mov
mov
cmpsl
lret
daa
pop
popa
mov
aad
fists
xlat
pop
push
jns
mov
popf
mov
pop
mov
and
das
fs
lcall
or
aaa
mov
inc
fisttps
pop
push
cmp
inc
repnz
push
sub
arpl
mov
mov
jl
pop
xor
sub
jne
decl
add
mov
testl
lods
sub
stos
push
scas
fiaddl
cmpsl
test
out
repz
adcb
and
push
shrb
loop
cmc
inc
mov
jg
cmp
loope
imul
lock
adc
jmp
cld
cmp
mov
ret
mov
lods
test
mov
sub
or
dec
cli
push
imul
addr16
iret
aaa
pop
sub
push
leave
stos
push
movsl
jns
inc
and
mov
outsb
mov
xor
add
add
mov
push
rolb
add
lcall
ljmp
setnp
and
mov
mov
popl
mov
mov
rolb
lahf
sbb
call
js
mov
push
mov
or
jle
mov
nop
in
mov
mov
xchg
or
lret
push
fs
add
xlat
imul
jecxz
insb
cld
xor
stc
out
add
pusha
and
sub
pop
loop
stc
sbb
fistps
mov
fmull
jo
pop
movsl
sub
xlat
mov
add
enter
sub
pop
push
jmp
int
jl
imul
fcoml
dec
mov
js
daa
aad
sbb
stos
inc
lea
stc
je
inc
lret
dec
mov
add
js
jle
in
out
xor
sar
clc
out
push
jecxz
cli
orb
push
sub
ror
pushf
cmp
adc
mov
in
inc
out
into
jge
std
gs
xchg
je
jo
xor
jnp
lret
pop
add
cmp
and
ljmp
jl
leave
rcrl
dec
out
xchg
xchg
lcall
loop
mov
sbb
push
pop
sar
dec
hlt
jne
add
lock
imul
pop
icebp
push
or
bound
hlt
mov
repz
pop
imul
xchg
adc
shrb
dec
js
shl
gs
mov
fnstsw
fstp
xchg
imul
mov
pop
push
or
mov
push
mov
sub
aas
lret
daa
xor
inc
out
mov
divl
sbb
mov
je
mov
add
jge
outsl
jno
jl
scas
and
pop
insb
gs
arpl
inc
xorb
jnp
pop
insl
jl
sbb
mov
mov
std
mov
mov
adc
in
mov
in
jl
int3
stos
gs
fcmovbe
mov
insb
pushf
add
xor
clc
and
mov
jl
xchg
leave
add
mov
pop
pop
les
movsl
xchg
sub
adc
or
cmp
push
mov
mov
dec
mov
push
jge
ja
xorb
in
jle
push
push
out
lods
xlat
xor
add
and
fsubs
popa
call
xchg
adc
orl
outsb
adc
or
sub
push
pop
lea
push
push
push
mov
adc
mov
stos
mov
xor
mov
int3
fisubrl
les
inc
add
or
mov
sub
mov
in
pushf
push
inc
jmp
mov
mov
pop
roll
or
lods
rol
iret
pop
test
xlat
cmp
adc
outsl
pop
add
pusha
out
mov
dec
test
xor
fcmovb
jg
lock
es
ds
lods
ret
hlt
add
lcall
xlat
inc
adc
fidivl
ret
push
or
pop
jp
push
cmc
adc
js
push
mov
dec
adc
inc
jp
cmp
fsubs
cs
mov
fidivs
movsl
pop
pop
jnp
mov
addr16
add
xor
sub
int
xchg
test
movsl
fpatan
pop
mov
push
les
sarb
pop
add
mov
jnp
xchg
mov
push
js
lods
push
das
mov
mov
cmpl
call
fcmovb
adcl
pusha
loope
jo
sahf
xchg
ret
jne
or
lock
rclb
mov
add
outsl
clc
out
addb
test
insb
or
cmp
mov
add
mov
and
subb
call
push
arpl
and
aad
xor
fldt
and
out
popa
jae
push
iret
mov
jp
jg
add
jg
mov
mov
push
or
lods
divb
and
jns
mov
incl
xor
adc
mov
shll
and
mov
push
rcll
push
sub
and
shlb
adc
jecxz
jnp
lea
gs
dec
cmp
clc
je
mov
pop
inc
repnz
mov
int3
mov
je
clc
and
xor
sub
pop
mov
cmpsl
dec
rcrl
imul
xor
sbb
mov
jmp
insl
push
rcrl
xor
ret
out
loopne
lds
or
sub
mov
inc
outsb
inc
mov
and
cmpb
jo
add
sub
cltd
rcll
je
call
cs
pop
add
or
stos
jle
xchg
inc
mov
gs
call
add
int3
icebp
sub
push
push
mov
mov
lods
std
push
jecxz
xor
adc
lcall
or
call
shlb
sbb
mov
cmp
mov
mov
pop
adc
leave
fsubl
add
sbb
jae
lods
out
dec
movsb
inc
imul
jno
cmpsb
mov
jl
loopne
cmp
leave
repnz
leave
adc
fsubs
filds
pop
testl
ficoml
lock
js
hlt
mov
xor
and
test
inc
push
test
jae
cli
sahf
fs
pop
xchg
in
pop
pop
inc
mov
inc
or
mov
add
repnz
xchg
cmpsb
cs
mov
mov
inc
jmp
cwtl
loop
pop
test
mov
test
sub
sub
xchg
add
xchg
xchg
fadd
add
out
mov
insb
mov
cmp
adcb
int
or
pushf
mov
add
fisubrl
out
in
mov
cld
xor
dec
xor
pop
jne
lahf
cmpsl
sub
xchg
mov
mov
sarb
push
sub
jecxz
xor
mov
sahf
xlat
dec
push
sub
mov
jns
roll
mov
outsb
mov
pop
aad
dec
in
mov
dec
outsb
inc
aas
and
js
adc
daa
repz
mov
insl
lahf
xchg
sub
lret
push
mov
xor
xor
dec
lea
mov
insl
push
xor
jb
mov
adc
outsl
push
lods
cmpsl
pop
pop
mov
adc
loopne
pop
pushf
mov
sbb
inc
insb
jecxz
rorl
jecxz
mov
sbb
popa
add
jns
das
popf
icebp
push
fcomps
int3
mov
mov
lock
test
mov
das
mov
rorb
adc
pusha
imul
loope
mov
lds
cli
adc
and
cmc
mov
iret
movsb
ffreep
call
fs
into
push
imul
pop
push
call
pop
or
in
pop
into
sahf
mov
scas
xchg
cld
fwait
das
mov
testb
mov
jge
js
leave
jl
arpl
sbb
lock
fistl
inc
xor
fmuls
push
cmp
xor
gs
xor
gs
fisubs
jecxz
sar
adc
sub
mov
stos
sbb
rorl
push
add
pop
push
mov
lds
adc
aaa
outsb
jae
sbbl
test
into
pop
sub
mov
in
nop
lea
mov
mov
push
mov
mov
push
test
scas
mov
hlt
fisubs
jle
cwtl
out
mov
or
jb
lcall
ret
in
cmp
aas
cmp
popa
jecxz
movsb
pushf
xorl
cs
mov
testl
dec
out
lret
and
jle
sub
aas
pop
xchg
pushf
pop
adc
stc
xor
mov
or
es
shll
xlat
adc
push
std
cmp
pop
out
xor
push
mov
dec
mov
jns
stos
outsl
outsb
inc
or
pop
repz
mov
cltd
fsubrs
lcall
mov
sbb
xor
push
add
cmp
cmpb
cmpsb
call
lea
cmp
push
mov
bound
mov
subl
rcrb
or
lahf
inc
push
xchg
rcl
cs
or
and
stos
hlt
push
andl
movsb
mov
or
outsl
xchg
mov
pop
mov
popf
push
mov
js
inc
lods
push
roll
pop
nop
sub
sbb
outsl
xchg
xor
push
lret
mov
dec
cmp
or
imul
lret
sub
das
push
mov
dec
mov
addr16
imul
nop
movsb
enter
pop
add
mov
imul
mov
sub
lcall
cmpsl
cli
sbb
ficoms
and
push
xchg
or
push
lcall
xchg
and
popa
sub
decb
arpl
mov
iret
and
cs
adc
into
enter
daa
sahf
push
insl
mov
sub
cmc
in
xchg
mov
in
sahf
popf
popf
cmpsb
xchg
fwait
push
inc
add
sbb
xor
mov
sarl
ss
movsb
sub
popa
and
and
test
inc
cmp
je
outsl
cld
pop
push
xchg
in
inc
adc
enter
push
xor
mov
dec
movsl
dec
pop
ret
popf
test
fcom
xlat
rorb
popf
push
or
enter
sti
lcall
cmpsl
cwtl
xchg
cmp
shll
add
mov
lret
jmp
add
ss
or
pop
movsl
fcmovnu
xor
pop
or
fs
or
daa
xlat
inc
ljmp
pusha
adc
fs
adc
inc
lcall
mov
inc
dec
pushf
or
jg
or
add
dec
xor
cmpsl
call
ss
pop
jmp
push
arpl
mov
stos
andl
enter
sbb
hlt
xchg
jbe
out
shlb
and
out
lret
in
or
add
shrl
lods
add
int
mov
out
dec
fsubrs
cwtl
mov
inc
mov
inc
xor
iret
mov
xchg
sub
test
in
nop
push
mov
lds
inc
dec
push
ret
push
jae
or
das
jb
je
pushf
ret
jp
push
insl
jge
fbld
jnp
pop
lods
adcb
nop
mov
rcll
jge
insl
mov
jns
pop
es
xchg
or
popa
jne
push
cmp
pushf
cmpsb
jl
cmp
sbb
stc
rolb
xor
rcl
sbb
ss
jp
push
mov
pop
sub
lods
in
pop
inc
cmp
inc
add
or
push
aas
jb
fbld
jp
and
cmp
icebp
or
dec
or
pushw
insb
xor
jbe
arpl
pushf
test
pop
in
scas
das
pop
in
testb
adc
dec
fsubr
ja
repz
dec
shll
jecxz
sub
cmp
cltd
out
dec
push
rcr
cmpsl
dec
fs
pop
pop
ja
cmp
enter
js
cmp
jo
xor
ljmp
dec
je
out
push
cmpsb
sub
or
jp
add
inc
repnz
pushf
jp
sub
lahf
and
aas
adc
add
stc
cmp
sub
mov
add
adc
mov
or
ror
jnp
mov
pop
mov
out
imul
out
sub
sbb
inc
int3
and
push
addl
xor
push
std
scas
or
scas
adc
inc
das
lods
and
pop
aaa
pop
cmp
inc
test
pop
test
xor
sbb
mov
das
pop
testb
push
cmp
add
loope
aam
xor
ja
scas
lret
mov
adc
and
jecxz
int3
ja
mov
popa
stos
divl
adc
sbb
push
and
mov
mov
and
mov
pop
adc
pop
mov
jbe
add
mov
stc
xor
pop
test
movsb
jno
es
test
les
cmc
pop
dec
cmpsb
scas
cld
out
in
bound
mov
popa
mov
cmc
scas
cmpsl
loopne
add
pushf
ret
dec
inc
js
dec
enter
rcl
mov
cmpsl
les
dec
lods
movsb
scas
out
into
cld
enter
sbb
and
pop
mov
repnz
or
fcompl
jns
adc
insb
sub
sbb
and
jg
cli
inc
fisubrs
dec
add
jbe
lock
adc
jo
or
out
mov
sbb
add
xlat
imul
daa
aaa
aad
in
lods
rorb
add
xchg
das
jp
cmp
leave
test
dec
cmp
sbb
loop
xchg
jg
sub
cwtl
push
jnp
inc
fdivs
lret
fcmovnb
lret
pop
mov
xchg
fwait
pop
pop
sub
jge
inc
inc
imull
sbb
leave
mov
ja
wbinvd
sarl
or
mov
call
or
adc
in
fildl
mov
jle
mov
mov
lds
add
xor
push
and
mov
push
hlt
mov
jns
imul
xchg
mov
fldt
add
orb
jecxz
inc
cmc
inc
jp
cmc
xchg
mov
pop
dec
sbbl
pop
cmpsl
dec
fldl
repnz
dec
sbb
jb
popf
pop
pop
push
mov
scas
bound
fnsave
cmp
jg
mov
sub
push
add
push
fdivp
mov
notl
pop
inc
adc
xor
inc
pop
xchg
cmpsb
ror
stos
ret
out
pop
adc
inc
faddp
arpl
repz
ret
sub
lea
iret
xchg
in
mov
aad
cwtl
lds
nop
cld
ret
lods
cwtl
stc
lahf
jns
or
push
icebp
scas
js
sahf
add
add
inc
add
sbb
cmp
or
lds
xchg
jg
adc
pop
fisttpll
test
mul
xchg
mov
push
sbb
mov
sbbb
insl
mov
outsl
vmulps
mov
mov
ret
mov
lahf
jnp
sbb
das
imul
das
int
jno
jbe
xor
jg
inc
or
inc
call
les
xlat
and
leave
mov
sbb
clc
push
and
dec
push
sbb
das
mov
xchg
cmpsl
mov
negb
stos
push
out
fisttpll
mov
xor
adc
jmp
sbb
jl
addb
pop
xchg
ja
cli
repz
clc
sub
lds
cmc
xor
push
mov
sahf
scas
cmp
add
aaa
fisubl
cmc
or
gs
push
imul
push
in
inc
ret
push
pop
std
inc
pop
push
into
or
cwtl
into
mov
orl
jae
cli
fucomi
lods
mov
lcall
sbb
push
ror
cmp
jbe
xchg
cltd
mov
fcoms
fisttpll
int
inc
mov
dec
iret
mov
repz
mov
cmpb
push
imul
sbb
mov
fwait
sahf
mov
cld
lret
pop
lds
push
lcall
rorl
dec
outsb
fisttpl
fsts
xchg
dec
mov
lret
pop
movsb
movsl
sub
in
aad
pop
pop
mov
outsb
jbe
xor
inc
repz
add
sub
inc
dec
xchg
repnz
xchg
stos
mov
imul
mov
mov
or
push
push
aaa
negl
stos
test
rcll
ja
pop
xchg
ret
xor
xchg
mov
mov
leave
mov
mov
cmp
push
arpl
lds
jb
in
and
and
in
jge
add
mov
mov
push
add
inc
xchg
and
push
add
adc
sub
gs
pusha
adc
dec
xchg
fisttpl
push
mov
out
cmp
es
push
xor
push
sbb
sarb
push
xorl
int
inc
in
inc
adc
sub
mov
and
jg
in
lods
rorl
mov
push
adc
sbb
lret
lcall
dec
push
or
cmp
pop
test
sahf
fs
mov
mov
ja
or
rol
xchg
sbb
mov
in
push
mov
ja
loope
stos
xor
dec
into
or
cmpb
mov
test
push
push
xor
add
mov
je
xchg
fdivs
cmp
xor
adc
mov
mov
add
jo
dec
cmp
mov
addr16
jno
cmp
mov
out
je
cmpsl
or
insl
shll
xor
inc
std
jb
rcl
scas
jmp
adc
dec
std
and
js
push
cmp
scas
lods
fwait
mov
gs
test
cwtl
repnz
mov
pop
shlb
add
in
pop
outsl
push
and
push
or
mov
fcoml
sbb
out
out
jle
fdivrs
mov
mov
xchg
je
sbbl
and
xor
int3
cmp
push
push
push
hlt
mov
ja
mov
fnstcw
ret
jb
fbld
fcoml
jne
adc
adc
push
cltd
xchg
popa
pop
push
popa
cmpl
pop
jge
inc
vmovsd
mov
sub
jo
add
jbe
xor
pusha
sarl
les
push
xchg
jecxz
jnp
outsb
mov
pop
push
mov
shr
pop
ret
inc
and
mov
stos
test
repnz
stos
popf
fidivrl
icebp
or
inc
add
dec
mov
sub
mov
mov
leave
repz
jmp
loope
or
arpl
jle
pop
sub
xchg
jne
or
cmp
icebp
or
xor
mov
sub
fidivrl
stos
test
adc
mov
decb
dec
xchg
fsubrp
hlt
mov
gs
push
jp
push
imul
sbb
push
out
mov
inc
fwait
shl
cmovbe
fs
push
rclb
movsl
movsb
push
xchg
xchg
and
arpl
push
addr16
xchg
repnz
inc
mov
push
test
xchg
jns
dec
sahf
pop
cmp
dec
inc
adc
popa
rorb
sbb
je
or
aam
inc
js
shrb
sbb
and
or
imul
rorb
sub
adc
ds
fstl
stos
call
js
mov
inc
cvtpi2ps
subl
mov
rclb
xlat
rorb
mov
into
mov
ret
pusha
rcrb
loope
adc
add
xchg
pop
sti
jge
nop
stc
rcrl
xlat
xor
jmp
mov
icebp
jne
aad
lret
xchg
aas
mov
arpl
sbb
and
dec
movsb
dec
jae
ss
in
inc
or
pop
test
je
aas
popa
mov
and
push
dec
add
cltd
lds
lock
ret
ss
adc
lock
lods
push
push
mov
pushf
ret
orl
mov
jle
in
mov
add
lds
mov
dec
test
sub
inc
push
test
sub
mov
add
jmp
mov
lret
or
jne
or
xchg
xor
jne
mov
shlb
xchg
and
dec
and
xchg
rcll
es
cmp
jnp
lods
ret
xorl
es
dec
xchg
sub
addr16
jmp
xchg
gs
mov
lods
je
cmp
mov
xchg
and
xor
ljmp
jl
xlat
popf
mov
daa
dec
aam
xor
dec
push
adc
or
cmp
pop
dec
xchg
xor
jl
mov
push
fmuls
mov
mov
push
iret
push
mov
dec
pop
add
mov
cwtl
mov
gs
xor
dec
adc
xor
andb
ret
xchg
dec
aam
imul
sub
ffreep
jnp
dec
shll
inc
xor
or
sub
loopne
jne
adc
and
cmp
lods
mov
add
mov
dec
out
int
xchg
test
mov
mov
fnstsw
enter
pop
mov
sub
dec
mov
rol
lock
cmp
mov
ss
jmp
cs
inc
sahf
sub
jle
push
fidivl
pop
mov
dec
adc
outsb
lcall
mov
icebp
xor
idivb
xchg
push
nop
and
xor
aaa
leave
lret
mov
icebp
ss
or
mov
mov
adc
mov
lahf
pushf
or
pusha
lret
test
iret
and
sub
icebp
xchg
mov
add
lahf
sahf
sbb
and
inc
stc
incb
das
fisttpl
xchg
cltd
xor
xor
mov
xchg
rcr
push
push
mov
push
xchg
iret
mov
mov
mov
mov
mov
dec
adc
or
jmp
mov
mov
push
mov
jbe
sub
out
add
push
sbb
or
std
pusha
inc
les
adc
test
pop
pop
and
jnp
insb
mov
or
jns
jp
int
test
mov
insb
xchg
repz
pushf
shl
pusha
int
mov
mov
insl
pop
cmp
test
jmp
outsb
dec
jmp
in
imul
dec
jge
mov
popf
dec
push
subl
mov
js
loopne
dec
subb
test
and
inc
insl
push
lahf
mov
dec
push
iret
xor
pop
cwtl
fcompl
mov
iret
fidivs
or
loopne
jmp
mov
out
mov
fucomip
shll
mov
pop
mov
jecxz
cmp
jmp
rorb
lret
adc
jl
out
push
dec
gs
add
sub
inc
xchg
jmp
sbb
jl
jno
shlb
dec
mov
cwtl
or
mov
sub
cmc
add
xor
push
jl
mov
jge
sub
sub
scas
shl
icebp
adc
lods
outsl
dec
xchg
jbe
xor
addl
jmp
xchg
test
les
jo
xor
xlat
out
fisubs
data16
xchg
or
dec
xor
mov
ljmp
shlb
add
mov
mov
push
mov
setl
adc
fcmovbe
movsb
stos
push
jns
aam
pop
xchg
xchg
pop
xchg
cmp
lcall
in
mov
sbb
cli
cmp
mov
add
cmp
push
aam
push
xor
pop
xor
mov
dec
pop
js
lret
and
pushf
inc
push
stos
inc
add
xchg
push
xor
std
sub
ret
xchg
jle
and
add
inc
mov
in
adcl
imul
outsl
inc
cld
pop
push
hlt
inc
mov
dec
outsb
cmp
inc
adc
cmp
pop
stos
mov
and
icebp
je,pn
out
fimuls
sarb
jno
pop
mov
pushf
push
mov
ffree
outsl
dec
std
sahf
in
jnp
imul
jae
push
test
in
inc
fs
outsl
push
dec
cltd
ljmp
les
sbb
data16
test
mov
pop
sub
fdivs
outsb
xorb
adc
pop
push
shrb
pop
pop
outsl
cmp
or
push
fs
mov
pop
or
add
lret
jp
sahf
jo
stos
fwait
dec
inc
mov
adc
hlt
jmp
jge
xchg
mov
sti
iret
xchg
cwtl
dec
scas
or
icebp
imul
fisubrs
mov
dec
mov
fnstcw
lret
fadds
out
idiv
andl
xchg
hlt
ja
cltd
mov
push
mov
jns
or
scas
test
sti
ret
mov
mov
xchg
mov
pusha
push
leave
aam
out
test
push
add
jno
xor
frstor
outsl
rorl
ret
push
ja
jne
cmpsl
jge
leave
jno
push
pushf
test
jge
cmpsb
lcall
loopne
mov
adcl
cmp
pop
mov
pushf
add
dec
stc
mov
bnd
test
add
jecxz
int
scas
movb
pop
add
out
loopne
psubsw
add
jg
jns
out
gs
pushw
loop
fildll
fsubrl
push
jnp
imul
cmp
push
test
enter
mov
les
mov
shlb
movsb
in
push
outsl
in
inc
pop
cmpsb
push
je
nop
je
loop
jge
aad
imul
test
movl
xchg
add
sarb
data16
int
int3
jb
push
aad
xor
call
cmpsb
mov
mov
sti
ja
push
pop
hlt
mov
inc
dec
ljmp
out
push
or
out
scas
js
sahf
cltd
push
shrb
or
xor
xchg
push
mov
aas
sarb
or
clc
pop
xchg
roll
mov
in
mov
adc
pop
dec
jbe
aad
xchg
aaa
xor
mov
push
dec
jp
push
loope
movsb
les
mov
pop
push
bnd
enter
imul
mov
cmp
fidivrs
push
mov
jns
test
mov
and
push
push
cmp
fwait
sub
jbe
loop
push
out
xor
xchg
js
aaa
inc
push
aas
xchg
add
pushf
gs
add
stc
test
fstpt
fsubr
cmp
lds
push
movsb
inc
mov
loopne
js
mov
xchg
test
and
adc
inc
cmp
or
rcrb
sub
out
jno
outsb
dec
in
mov
lret
xchg
out
add
lods
into
pop
in
inc
imul
mov
or
and
cltd
sub
into
cmp
xor
lods
test
in
inc
sahf
shll
jl
add
inc
mov
repnz
call
enter
jae
outsb
add
push
add
sti
mov
sub
shl
stc
fdivs
push
jbe
leave
dec
addl
call
or
and
xchg
or
test
ret
mov
lret
xchg
es
loope
mov
test
jg
add
lea
xchg
push
push
aam
leave
inc
jp
sub
divb
movsl
mov
adc
adc
and
mov
popa
outsb
lods
pusha
addr16
jmp
mov
inc
lret
mov
outsb
inc
adc
jp
pusha
dec
push
mulb
in
sub
outsl
in
scas
orl
std
in
lods
mov
lret
and
cmpsb
xchg
xor
gs
lock
mov
and
repnz
rep
sbbl
dec
sahf
repz
mov
mov
xor
xchg
pop
jne
sub
and
push
imul
sub
lret
minps
fistps
cs
cmc
jecxz
lret
inc
push
xor
aas
outsl
test
push
mov
mov
vpsllq
mov
mov
nop
mov
sbb
loopne
pop
fisubl
mov
lret
dec
sub
aaa
adcl
int
adc
int3
inc
scas
xchg
dec
lea
sbb
leave
int3
add
arpl
int3
jg
xchg
dec
sahf
push
mov
sub
lods
xchg
xchg
loop
cltd
ficompl
insl
outsb
mov
xchg
push
cli
loope
push
push
pop
test
sbb
mov
jmp
bound
ret
mov
and
outsl
sti
jo
negl
out
pop
pushf
or
add
popa
xorb
adc
and
and
mov
dec
jl
xor
in
sbb
lock
call
pop
adcb
sub
push
inc
test
mov
sbb
sarl
push
addb
xor
leave
ss
ret
push
jmp
jb
repz
fs
aam
mov
pop
aad
test
sub
jle
or
mov
lcall
and
ja
ret
ss
sbbl
mov
push
jp
dec
test
leave
xchg
lods
imul
jb
sub
or
mov
aaa
loopne
test
adc
and
mov
xchg
pusha
jge
pop
in
insl
mov
pusha
das
int3
pop
sbb
cli
pop
and
insb
loop
cmc
lds
xchg
and
xchg
sarl
testb
pop
sbb
ret
mov
or
movsb
stc
test
cmpb
or
jo
pop
outsb
ljmp
dec
jo
jae
jmp
sti
jo
cmpsb
nop
clc
hlt
push
inc
testb
add
test
decb
pop
or
jle
jecxz
sbb
ret
and
pop
adc
adc
jp
in
loopne
movsb
and
push
ljmp
insb
cmp
mov
push
pop
add
imul
gs
inc
mov
sub
mov
sbb
ljmp
push
nop
jno
movsl
xchg
negb
dec
ja
cmp
mov
fwait
jp
sbb
sub
inc
sub
imul
lods
out
sbb
stc
and
les
cli
out
mov
hlt
rcrl
cmc
cwtl
sahf
std
dec
push
inc
addl
adc
and
mov
inc
aam
aaa
insl
cmp
jnp
sub
cmp
pop
rol
lock
inc
fmul
mov
mov
push
lret
sub
lds
jecxz
add
daa
mov
nop
sbb
pop
outsb
call
jge
insl
insl
push
in
jbe
mov
data16
mov
mov
sub
mov
lea
fwait
or
bound
dec
pop
stos
pop
xor
nop
pushf
sbb
add
inc
lret
icebp
iret
xor
xchg
lret
or
mov
pop
dec
in
xchg
or
mov
aas
pop
bound
dec
cli
call
xchg
or
fnstenv
aas
loop
mov
arpl
mov
mov
cs
jns
icebp
cwtl
mov
popa
scas
jge
dec
shll
dec
or
jle
xor
in
popl
jo
ret
and
and
outsl
popf
hlt
leave
jnp
xchg
insl
xor
pop
subl
mov
mov
and
pop
sbb
fisttpl
popa
push
jb
jbe
and
jl
incb
fnstcw
inc
xor
les
jl
lea
sarb
pop
xchg
sbb
adc
int
inc
sub
xor
outsb
xchg
adc
movsb
int3
pop
shl
push
jnp
int3
sbb
push
lret
ljmp
nop
movsb
call
mov
std
mov
cbtw
mov
jae
pop
mov
addr16
insl
mov
adc
push
cmp
jl
js
lahf
adc
push
mov
mov
lock
mov
dec
mov
dec
sub
shlb
pop
mov
inc
fdivrs
jmp
sbb
lea
dec
adc
cltd
pop
lods
jnp
add
xor
jl
cmpsb
jno
scas
xorl
je
stc
sbb
lret
pop
fistps
cmp
fsub
mov
aam
cmp
cld
test
pop
push
gs
mov
dec
ss
adc
xor
mov
les
pushf
adc
xchg
sbb
mov
xor
add
wbinvd
mov
loope
push
mov
adc
test
sti
inc
addr16
lcall
dec
lods
das
mov
fadd
or
lods
cs
shll
shl
in
aad
xor
hlt
push
aas
das
or
rolb
ljmp
xchg
mov
or
mov
push
xchg
add
jnp
sub
mov
dec
nop
jno
cwtl
ss
gs
lock
into
xchg
imul
jmp
insl
sbb
jns
push
and
dec
pop
jbe
aam
aas
xchg
push
pusha
les
xchg
shlb
mov
jno
frstor
jl
cmp
stos
cld
addr16
mov
test
xor
push
out
mov
adc
dec
lods
xchg
testl
mul
xchg
or
xchg
aad
aaa
pop
shl
pop
xchg
push
cltd
and
mov
adc
jno
dec
dec
sub
mov
jmp
nop
dec
adcb
jecxz
or
xor
mov
test
cmc
sbb
int
hlt
mov
sbb
testb
mov
mov
lahf
lahf
jg
stos
dec
fisubs
xlat
jge
and
cwtl
jo
mov
cmp
xchg
jno
leave
xor
je
sbb
adc
leave
or
mov
dec
jnp
push
dec
je
pushf
add
sbb
push
insl
sub
daa
or
lods
movl
jg
test
and
mov
dec
inc
xchg
in
mov
insb
and
adc
sbb
imul
shl
es
outsl
lret
push
popl
leave
jge
mov
inc
pop
icebp
fsubr
add
out
pop
mov
sub
xchg
mov
cmc
daa
inc
cwtl
jns
mov
fdivl
cmpsb
adc
cmp
aas
jno
xorl
xor
sub
mov
mov
out
cmp
push
cmpsb
xchg
mov
fwait
jecxz
dec
xor
idivb
psllq
sarl
pop
jne
xchg
insb
pop
xor
sbb
xchg
mov
incb
push
call
stos
rorb
or
inc
xor
cmpb
or
iret
insb
loope
popf
sbb
popa
xor
adc
dec
jbe
xchg
scas
les
jge
cld
fcoms
jbe
mov
aad
int3
dec
movsb
pushl
sbb
bound
add
add
sarl
sbbl
mov
xchg
add
push
mov
xchg
push
mov
dec
test
cmp
sbb
inc
mov
jmp
stc
arpl
pop
mov
xchg
mov
add
js
ficoms
mov
ss
cld
inc
xchg
pop
inc
dec
mov
mov
fsubrp
inc
ret
sbb
sti
data16
movsl
pop
xchg
mov
rcll
adc
loop
call
and
mov
insl
xor
sub
pop
cmp
cmp
mov
test
xchg
fnsave
add
pushw
and
std
sub
mov
push
push
pop
xchg
jle
or
push
or
ret
popf
mov
int
adc
add
sub
lock
int3
fwait
dec
inc
rcr
daa
add
fildll
int
pop
mov
mov
jge
mov
xchg
xor
mov
inc
fldt
push
mov
push
and
lods
add
cmp
fisubrs
pop
xor
jl
sub
shll
mov
push
pop
hlt
test
mov
mov
into
mov
push
mov
mov
clc
aad
and
mov
hlt
adc
cmc
mov
mov
mulb
js
std
nop
scas
in
fdivl
movsl
sarl
dec
sub
xor
movsl
xchg
shl
in
xor
sahf
lahf
enter
dec
inc
sub
insb
cmp
and
fs
adc
or
gs
sbb
cmpsb
add
ret
sbb
dec
scas
mov
loopne
mov
scas
or
repz
repz
cmp
xorb
inc
hlt
xor
call
je
testl
cwtl
add
and
movsb
test
dec
sbb
jg
jge
mov
fidivrs
loope
jp
xlat
imul
jno
xorl
pop
insb
cwtl
push
test
aad
test
inc
mov
out
jg
xchg
push
aad
pop
cmpsl
inc
lds
mov
sbb
and
mov
dec
jo
push
inc
inc
jno
adc
mov
and
xchg
mov
dec
clc
push
and
test
mov
adc
jmp
or
pop
mov
mov
cmp
test
ja
mov
sbb
jmp
fistpll
mov
lods
sub
insl
jnp
cmp
adc
das
stc
xchg
and
mov
addl
inc
out
into
adc
pop
hlt
adc
mov
cmc
cmc
xchg
fcoms
stos
enter
or
ja
jbe
pop
push
mov
fdivrp
inc
adc
jecxz
fstps
popf
mov
dec
fsubl
pop
outsl
les
addb
mov
inc
push
jl
faddl
dec
mov
push
loope
fdivl
pop
bound
inc
mov
icebp
ss
pop
das
fistl
xchg
push
push
pop
xchg
mov
cmp
ret
cmp
inc
sub
pop
xchg
mov
sarl
in
lret
bound
sbb
or
and
dec
dec
leave
cmp
mulb
sbbb
stc
xor
jb
sbb
push
sub
stc
pop
xchg
or
jmp
and
jo
scas
cmc
mov
pop
or
sbb
pop
dec
pushf
xchg
mov
call
adc
mov
pop
mov
mov
cmc
and
outsb
call
aaa
sub
add
mov
test
icebp
out
xchg
push
cmp
sub
movl
xchg
movsb
jmp
imul
pusha
aam
inc
and
xchg
stc
aad
cwtl
push
ljmp
sti
inc
psubsw
mov
mov
in
push
mov
js
adc
scas
hlt
adc
jo
dec
faddl
push
xor
and
daa
in
cmp
jb
mov
and
das
mov
outsl
or
jp
popa
inc
sahf
into
dec
arpl
dec
xlat
das
enter
iret
and
push
sub
sub
faddl
in
push
push
jbe
xor
inc
dec
inc
and
or
or
cltd
and
mov
shrl
mov
bound
sbb
scas
cmpl
sbbl
insl
jno
xchg
and
xor
psubsw
push
xlat
out
push
sbb
jns
xor
dec
out
mov
push
mov
jns
je
mov
notl
xchg
or
lcall
daa
sahf
inc
pushf
mov
in
cmp
stc
es
add
fwait
mov
mov
pushf
imul
ss
dec
and
int
or
call
mov
loop
mov
sbb
dec
sub
and
stc
test
test
call
xchg
lcall
popf
inc
fsubr
jbe
stos
test
daa
and
pop
mov
mov
test
push
fcoms
fwait
mov
sti
ret
jbe
fs
adc
out
mov
rcrl
ret
out
pop
cmpsl
cmp
cmp
push
lret
gs
imul
imul
xchg
and
pop
repz
popa
mov
xchg
mov
je
and
aaa
scas
popf
inc
cmc
dec
mov
push
sub
xor
add
pop
dec
adc
int3
jb
pop
cmc
jno
mov
cli
cs
cmp
mov
inc
inc
or
jmp
imul
in
mov
xchg
test
add
sub
pop
in
divb
xor
add
pop
rol
pop
filds
outsb
into
jl
cmp
scas
dec
popw
dec
mov
fcomps
jge
fcomps
xorb
test
test
mov
push
cmc
insb
lret
nop
mov
xchg
out
loopne
xchg
mov
mov
xor
in
aaa
lahf
sub
ds
insl
cmp
mov
pusha
sub
das
mov
movsl
aaa
mov
cmp
xor
hlt
aas
icebp
adc
jnp
sub
inc
push
cmp
mov
ss
icebp
sub
mov
cmp
mov
aaa
fwait
and
jne
jge
xchg
icebp
add
rol
rorb
es
repz
and
mov
mov
loopne
les
test
xchg
int3
nop
push
clc
movsl
rcl
test
dec
setbe
in
dec
and
jns
das
imul
cmp
mov
jle
stc
shrl
loop
shr
dec
nop
lea
push
cltd
mov
adc
shrb
inc
and
jecxz
pop
mov
add
adc
shlb
gs
rcll
fistps
addr16
jo
pop
lock
cmp
les
js
push
add
add
mov
xchg
inc
out
add
imul
es
pop
pop
outsb
ret
push
aaa
xor
push
xor
xchg
aad
push
enter
mov
les
int
pop
mov
inc
rolb
pop
fimull
dec
fsubs
adc
aad
adcl
pop
clc
mov
daa
jno
add
fsubl
adcl
mov
or
and
or
add
or
sbb
hlt
mov
lret
mov
lods
sub
outsb
sub
or
lods
data16
insb
jo
adc
sbb
dec
pop
xor
int
xchg
repnz
jnp
push
mov
cli
and
inc
shrb
fistl
es
das
cmpsb
xor
mov
fcomps
popa
loop
fwait
inc
or
jnp
out
hlt
mov
or
jnp
lret
in
aad
stos
cli
jbe
mov
sub
push
sbb
loopne
dec
jmp
xchg
lcall
movsl
in
lcall
es
sbb
pop
inc
and
xor
push
push
lcall
mov
icebp
stc
or
cltd
dec
repz
icebp
cmp
in
push
cmpl
and
push
add
fimull
xchg
xchg
inc
xchg
imul
xchg
hlt
sti
xchg
loope
xchg
adc
loopne
xor
push
stos
or
popa
mov
fwait
test
setge
jns
push
xor
adc
sbb
sbb
inc
test
pop
iret
ja
mov
and
cmp
aam
add
jno
cmpsl
mov
cmc
sbb
add
sbb
xlat
adcb
pop
sub
nop
test
push
xchg
cmp
jecxz
xchg
movsb
or
xchg
sbb
pop
icebp
pop
push
lret
jnp
sbbl
and
mov
dec
mov
sbb
fmul
sahf
rol
cwtl
push
mov
push
movsl
movsb
data16
mov
xchg
inc
bound
jge
ds
stos
jg
mov
enter
popa
xchg
or
push
xchg
push
jae
js
imul
push
inc
push
bound
push
iret
inc
mov
xchg
or
pop
cs
jp
mov
dec
mov
lret
add
rorl
jo
fpatan
movsb
iret
sub
xchg
add
and
enter
outsl
mov
lds
add
push
shl
jae
cmp
stc
lods
movsl
fsubl
jle
xchg
insl
inc
test
or
add
mov
loop
jnp
jp
adc
pop
jecxz
push
repz
in
add
int3
incl
movsb
fidivrl
les
je
pusha
std
into
push
or
repnz
dec
lret
repz
nop
xchg
inc
int3
lods
stc
stos
jbe
mov
jns
xor
iret
adc
cmpsl
jge
ss
insl
xchg
lcall
adc
jne
clc
popf
lret
mov
fnstenv
dec
lds
dec
push
inc
data16
adc
insb
addr16
cmp
mov
adc
adc
sub
lock
icebp
and
xchg
adc
out
insb
push
inc
popa
or
or
arpl
outsl
adc
iret
sub
mov
aaa
pop
mov
inc
xchg
insb
sbb
out
and
pop
xchg
and
mov
push
test
xor
cmpsl
outsl
gs
and
inc
arpl
pushf
sbb
rcrb
mov
inc
test
aaa
outsb
enter
add
lret
addr16
push
sub
inc
inc
loopne
push
mov
int
sub
sarl
popa
iret
lock
hlt
cmp
sahf
pop
and
cmpl
add
cli
pop
pop
dec
fidivrs
cld
xor
add
push
ds
out
bound
sub
sbb
adc
shll
icebp
mov
mov
jb
fcomps
add
sbb
adc
fs
pusha
mov
xchg
int
jbe
call
ret
fsubs
dec
xchg
shll
mov
pusha
pop
test
lock
mov
lods
mov
js
loopne
outsb
je
addr16
orb
and
pushl
push
bound
cmp
lret
sbb
push
arpl
jl
adc
add
push
lahf
inc
js
lahf
sbb
push
subl
sbb
lcall
scas
ljmp
adc
inc
jne
roll
mov
aas
fdivs
xchg
addr16
imul
mov
xchg
or
into
xor
and
dec
cmp
cld
pop
push
lds
cs
scas
xchg
insl
lcall
fwait
sbb
shrb
pop
inc
into
xor
imul
add
mov
cmp
pop
push
or
or
test
sub
xchg
pop
sub
xor
jg
ret
dec
pop
popa
in
jne
aas
mov
clc
adc
call
cmpsb
lcall
mov
testb
imull
rolb
arpl
outsl
setno
movsb
cmovb
sub
outsb
jns
test
jnp
jecxz
sbb
mov
insl
insl
aam
mov
cmp
jae
inc
cwtl
lods
inc
cld
out
dec
in
out
mov
in
adc
fistl
adc
sbb
dec
ret
xor
mov
push
fnstenv
cmp
sub
push
push
out
mov
mov
add
push
push
inc
faddl
lcall
sub
xorl
cmpsl
push
jecxz
adc
cltd
add
xchg
mov
sbb
mov
mov
incb
jge
mov
int
lock
cli
jmp
push
popw
fdivl
ret
inc
mov
lea
ret
sbb
cmp
mov
jae
cwtl
mov
add
mov
sti
stos
mov
cmp
push
shrl
mov
leave
ret
cmp
or
ja
jae
stos
mov
jno
jge
adc
ficoml
pusha
and
hlt
xchg
mov
xchg
imul
sbb
or
xor
hlt
pop
ljmp
sub
sbb
leave
push
pusha
xor
dec
adc
ds
add
fsubrl
repz
mov
insb
cli
popf
mov
cmp
push
cmpl
in
xlat
cltd
mov
mov
or
inc
loope
nop
test
jle
cmc
mov
fwait
and
inc
fs
popa
dec
add
shrl
mov
inc
and
and
aad
adc
push
push
sbb
insb
sbb
and
xor
push
sbb
add
nop
jns
jns
xchg
mov
sti
call
aad
sbbb
cmpsl
lds
ss
push
data16
push
inc
cmpsl
xor
fsubp
test
cmpsl
or
fstps
inc
xchg
movsl
pop
test
mov
push
push
rol
push
ror
mov
jns
and
push
jnp
inc
inc
bound
sub
xlat
outsb
ret
sub
in
push
and
jge
push
in
das
repz
mov
cmpsb
in
jno
in
dec
fstpt
popa
aad
test
popf
je
and
int3
cmpsb
push
push
fs
mov
rorl
in
push
nop
loopne
fs
fwait
push
imul
scas
incl
xchg
stc
cli
push
inc
popa
xor
jge
push
mov
xchg
mov
arpl
adc
xor
ret
mov
cmp
jmp
insl
sti
adc
repnz
ds
adc
sbb
in
adc
adc
xor
loope
sbb
adc
add
in
mov
xlat
sbb
clc
lahf
addr16
jge
fcompl
xlat
cltd
movl
scas
insl
fs
adc
stos
adc
sub
xor
lcall
mov
or
enter
sbb
subl
daa
cmp
adc
lahf
repz
js
pop
add
in
lods
cmp
imul
pop
imul
ja
jg
and
xchg
sti
rolb
dec
hlt
sbb
push
xlat
pop
pushf
xor
insl
mov
cmp
sbbb
mov
loopne
jge
outsb
pop
nop
jnp
and
addr16
mov
sar
shlb
sti
push
les
fmuls
jmp
pop
push
test
dec
dec
icebp
inc
ds
mov
in
hlt
out
sub
sub
rcrl
mov
movsl
fadds
movsb
icebp
jnp
jge
clc
sahf
jo
pop
out
outsl
push
dec
nop
jne
cmp
mov
mov
mov
leave
dec
xor
xchg
icebp
shll
stos
push
lods
lahf
in
xor
lcall
mov
cltd
iret
cwtl
mov
mov
notb
fimuls
and
mov
out
fldpi
jbe
loope
mov
ljmp
push
fcmovnbe
push
roll
in
mov
xchg
ss
push
xor
rorl
sub
push
dec
jnp
jo
add
loop
nop
jg
cwtd
pop
decb
enter
mov
call
jns
call
cmpsb
mov
in
cli
lods
aas
push
lcall
lods
dec
push
clc
fisttps
xorb
or
and
inc
cmpl
xchg
jg
push
lcall
mov
inc
xor
pop
mov
into
or
lcall
loopne
jl
lods
push
fimuls
dec
lds
lods
jmp
aad
in
je
cs
dec
dec
mov
out
popa
mov
sbb
pop
outsl
mov
mov
dec
xchg
mov
jne
les
loope
sbbl
icebp
sub
fldl2t
mov
daa
into
mov
mov
gs
or
fwait
hlt
xchg
roll
xchg
fldt
enter
frstor
xlat
daa
mov
outsb
scas
in
jmp
outsl
gs
xlat
mov
cld
sub
xchg
stos
push
jne
mov
fisubl
andb
cltd
ja
cmp
push
add
dec
xor
push
decl
cmp
fsub
push
cmc
es
xchg
push
push
int
cltd
cmpsl
pop
mov
inc
mov
lahf
adc
mov
inc
andb
fcmovu
lret
shl
mov
jl
mov
mov
push
insb
mov
in
movsb
mov
mov
ds
pushf
push
sarb
cmp
inc
fdivl
rcll
xchg
mov
fdivr
push
fcmovu
loopne
push
mov
lds
ja
clc
and
aam
out
ljmp
sahf
fisttpl
add
hlt
scas
fistps
or
outsb
or
add
push
scas
mov
je
enter
repz
ja
pop
push
das
enter
sub
fisttpl
xlat
bt
sub
in
insl
cmpsb
incb
rcrb
cld
adc
sub
hlt
arpl
inc
aad
sarl
cmp
adc
imul
lret
and
in
xor
inc
push
in
mov
mov
ds
cmc
cmc
test
mov
inc
into
mov
std
sub
scas
aaa
xor
push
and
movsl
movsl
jl
add
lock
cmpsl
test
in
out
jae
and
mov
pop
pop
adc
xchg
int
xor
sub
push
sub
bound
sub
pushl
ljmp
test
and
or
out
mov
int3
cmp
fisubrs
lods
pop
fnsave
add
add
sti
push
push
xchg
push
push
or
dec
aad
sbb
push
jle,pt
inc
or
cld
js
mov
push
shll
mov
cmp
fucom
dec
stc
mov
add
inc
js
test
sub
add
mov
xchg
pop
shrl
or
ret
inc
sub
add
in
test
jmp
cs
or
jae
mov
jne
cld
jne
mov
shrb
sub
cmp
ds
xlat
loop
clc
add
mov
repnz
jp
sub
outsl
jmp
inc
in
jmp
pushf
mov
pop
arpl
in
addr16
xchg
xor
push
roll
std
jb
pop
addr16
pop
cmp
sbbl
sarb
or
push
mov
xor
cmp
add
arpl
imul
sub
cmp
aam
sti
add
mov
mov
cmp
xchg
in
jns
pop
call
lahf
lret
cli
incl
push
jbe
pop
sub
add
mov
xchg
add
scas
gs
cltd
shr
movsl
arpl
cli
push
sub
shrl
jl
xchg
icebp
in
repnz
adc
out
cs
fdivrs
bound
gs
pop
dec
adc
cmp
iret
mov
cmp
jo
push
add
pushf
add
push
outsl
push
add
push
arpl
sub
mov
xor
adc
movsl
cli
pop
repz
iret
dec
xchg
rorb
jp
xor
mov
lock
jbe
cmp
mov
push
jns
cli
ret
mov
stc
sbb
pop
jno
mov
mov
stos
stos
push
dec
popa
adc
ficoml
mov
aam
lahf
or
mov
mov
pop
lock
xor
xchg
daa
stos
es
ret
and
fldcw
sub
xchg
xor
mov
aas
fdivs
sti
nop
add
ljmp
dec
sbb
shll
aad
push
lock
adc
sub
mov
and
sar
and
sti
ds
push
cmpsb
push
pop
mov
push
out
adc
in
mov
pop
sub
es
adc
andb
in
outsb
std
and
pop
cld
mov
pop
inc
inc
addr16
gs
jb
fcomps
ljmp
sbb
add
repnz
add
mov
jae
sbb
push
ss
test
pop
dec
rorl
add
bts
movsb
mov
or
inc
push
cmpsl
or
sbb
pusha
pusha
ja
sub
dec
pop
mov
xlat
roll
pop
cltd
mov
and
xchg
sub
push
scas
sbb
xchg
xor
je
push
dec
movsb
call
mov
out
dec
xorl
and
fldt
popf
adc
call
and
enter
shrl
sbb
dec
sbb
lahf
mov
push
int3
mov
mov
es
or
mov
xchg
mov
add
jno
xchg
add
pop
pop
stos
test
pop
inc
int3
scas
test
test
addr16
pusha
pop
daa
and
push
adc
lods
mov
xchg
stos
xchg
cmc
inc
frstor
jp
jl
xor
int
mov
mov
xor
push
add
dec
and
dec
lods
testb
aam
scas
sub
pusha
mov
daa
fbstp
push
mov
push
lods
pop
out
push
add
mov
pop
mov
pop
outsl
imul
lock
popf
out
mov
xor
jecxz
jl
ja
cmp
sti
xchg
or
mov
ds
out
cmp
lds
hlt
bound
cmp
adc
loop
xchg
pop
jno
inc
mov
cwtl
mov
arpl
push
test
rorb
cmp
loopne
pop
sub
and
mov
test
ffree
stos
jge
sub
jno
push
mov
jecxz
ljmp
add
xor
push
adc
dec
fisubs
loope
testl
cmp
mov
std
and
xor
sub
adc
scas
loopne
daa
icebp
inc
fidivrs
not
and
test
insb
sar
mov
jo
inc
xor
repz
jmp
sub
adc
add
fs
add
imul
push
jp
and
sbb
arpl
lods
pop
dec
jmp
jb
jb
fldl
cwtl
je
pop
stos
push
or
sbb
fs
xor
lods
add
outsb
xchg
mov
popa
cmc
dec
lds
jp
sub
stc
call
mov
or
jb
mov
push
inc
and
dec
call
dec
or
clc
xlat
popf
adc
jns
sub
inc
mov
leave
pop
repnz
scas
xchg
xchg
iret
std
negl
inc
icebp
or
daa
jg
dec
xor
imul
inc
sub
sahf
xchg
sbb
mov
sub
icebp
shrb
sbb
sbb
fists
popa
cmp
and
inc
enter
pop
stc
pop
int3
pop
loopne
fwait
or
mov
mov
ss
jle
xchg
imul
ret
ljmp
ret
push
pop
xchg
add
outsl
mov
popl
xchg
add
sbb
xor
xor
movsb
and
rolb
dec
fistps
sub
stos
int
cmp
pop
or
inc
dec
xorl
pusha
and
pop
ja
stos
xlat
xchg
inc
mov
mov
hlt
mov
or
sarb
int3
jle
xchg
or
outsb
pop
les
ds
das
xchg
movsl
sub
mov
gs
add
rcrl
ljmp
cwtl
aad
clc
insb
inc
in
scas
add
popf
xchg
fstps
nop
push
sub
insb
sbb
loop
es
pop
push
jecxz
das
inc
inc
add
jp
add
cmp
push
sub
lahf
jle
stos
mov
in
push
shll
imul
enter
mov
inc
xor
std
les
pop
push
les
xchg
data16
pusha
xor
push
incb
pop
push
pop
push
fisttps
xchg
adc
or
shr
mov
in
pop
loope
adc
lods
xchg
in
sub
mov
loop
lret
fmuls
inc
cmp
test
lret
test
insb
push
popa
push
les
dec
adc
xchg
lods
jmp
fiaddl
xorl
test
pop
notl
popf
or
divl
or
cmpsb
sbb
inc
stc
mov
lods
and
popa
push
and
fnstenv
sub
into
push
sub
mov
dec
out
inc
push
outsl
sti
sub
dec
push
push
lea
mov
sbb
xor
mov
xor
add
in
xorb
movsb
xor
ficompl
xchg
jne
or
call
hlt
pop
les
test
push
lods
test
int3
push
pop
imul
adc
xchg
sbb
popw
imul
jo
fisubs
adc
xor
hlt
mov
push
mov
loopne
popf
pop
in
or
jne
mov
jp
cmpsl
rol
jmp
sarl
or
cmp
lahf
scas
jp
gs
rcrb
inc
ret
sbb
loopne
inc
jecxz
xchg
jno
addr16
pop
and
je
lret
sbb
xchg
inc
insb
and
or
mov
cmpsl
cmp
inc
xor
lods
jecxz
shrb
fs
jnp
repz
sub
jb
arpl
mov
push
ja
pop
insl
flds
jp
fidivs
loop
leave
sbb
call
dec
and
jmp
sahf
add
nop
mov
or
xchg
xchg
sarl
jecxz
test
sarl
jno
xor
pop
je
jns
inc
divb
pop
push
jno
xor
push
push
orb
dec
daa
add
cld
mov
mov
loopne
jno
push
jne
cmp
enter
pop
pop
mov
cmp
test
mov
jno
cmp
push
sub
fbstp
js
push
pop
fnstsw
cs
mov
xor
das
arpl
mov
or
mov
rol
ret
mov
push
rcll
jo
cld
sar
jne
push
add
sub
or
xlat
movsb
pop
aam
jl
mov
xchg
out
lds
sub
dec
lcall
cltd
rcll
loope
lods
imul
jo
rcrb
cmp
or
xchg
mov
inc
push
jle
jbe
jl
sub
push
inc
pop
pop
jne
and
sbb
pop
pop
mov
dec
scas
test
int
aaa
and
insl
xor
inc
and
cmp
lock
cwtl
popf
mov
call
or
adcl
pop
leave
fmull
in
xchg
mov
and
sub
dec
addr16
sti
leave
cmp
push
push
leave
popf
jecxz
cmp
pop
dec
rcrb
testl
notb
cmc
lea
jo
fnsave
nop
lods
jbe
cmpsl
pop
xchg
mov
mov
xor
xor
xchg
fxtract
insb
jno
data16
pop
mov
jg
push
jl
inc
dec
push
sbb
mov
fstpl
sbb
mov
aaa
pop
push
div
sub
cmpl
sub
xchg
dec
and
outsb
test
dec
xor
in
push
xchg
out
or
or
push
add
and
mov
sbb
sarl
inc
out
push
js
clc
cmpsl
pop
xchg
pop
add
out
xchg
out
dec
loope
adc
pop
pop
sub
inc
pop
jg
xlat
sahf
jecxz
lds
lcall
jle
les
mov
sub
mov
popa
adc
push
fldenv
jmp
push
bnd
adc
roll
inc
mov
push
test
aaa
call
mov
loope
cmp
and
mov
ljmp
push
pusha
orl
je
add
sbb
sub
lret
mov
xor
adc
stc
cmc
mov
insl
xchg
pop
cmp
fiadds
enter
enter
pop
stos
adc
xchg
push
dec
orl
dec
sbb
mov
dec
pusha
jns
pop
sub
out
and
stc
loop
shr
movsb
test
fisubrs
lds
lea
push
xor
jecxz
inc
and
cmp
xor
faddp
inc
cmp
xor
xchg
nop
test
inc
rolb
xchg
mov
push
mov
pop
or
test
cmp
mov
xchg
mov
xchg
pop
inc
xorl
enter
mulb
fidivrs
outsb
int
call
imul
pushf
xor
inc
stos
leave
push
das
mov
adc
daa
shlb
hlt
rol
outsb
shll
sub
cs
push
rcrl
popf
outsl
cmp
sub
stos
mov
sub
mov
sub
test
fnstenv
pusha
repnz
add
or
pop
dec
or
or
das
jae
jo
adc
vpunpckhdq
out
mov
pop
xchg
shll
cmp
outsl
icebp
leave
mov
xor
mov
and
add
dec
xor
dec
dec
nop
in
dec
and
xchg
mov
adc
xlat
and
test
out
mov
xchg
mov
lret
negb
stos
out
jnp
push
and
sti
mov
push
pop
loopne
ret
pop
xchg
xor
das
lds
xchg
xchg
add
imul
xor
jb
add
popf
and
in
insb
out
cmp
fs
dec
lret
cld
fistl
mov
in
negb
out
add
adc
int
imul
int3
push
outsl
push
adcl
mov
jb
mov
push
or
jmp
jnp
push
stc
insl
sub
and
jae
dec
shrl
enter
cmp
adc
sbb
mov
pop
push
div
add
fstps
in
inc
cmpl
ds
cmc
add
xor
or
aas
decl
mov
scas
jns
fdivl
sbbb
subl
adc
daa
inc
and
out
add
in
push
inc
push
lret
inc
lods
pop
jb
jno
in
sbb
les
pop
pop
popf
pusha
scas
adc
loop
pop
inc
into
ret
sub
push
sub
fs
ja
sahf
stc
push
xchg
jae
ljmp
data16
inc
aad
mov
sub
push
cltd
pop
adc
jg
in
js
popf
and
mov
lahf
mov
aaa
xchg
mov
aad
xor
xchg
lock
leave
ret
les
daa
rcll
int3
int3
mov
adc
xor
mov
push
cs
leave
int3
scas
into
cltd
mov
mov
testl
pushf
push
out
xor
fs
push
rorb
test
sub
imul
cmp
push
lods
push
mov
ds
insl
pop
and
mov
in
dec
jp
sub
loope
add
lock
call
sahf
call
cwtl
daa
aaa
cltd
cmpl
xor
scas
mov
aad
dec
inc
orb
dec
mov
dec
dec
jmp
and
mov
mov
fadd
out
push
into
mov
push
cmp
aam
ds
stc
jl
mov
iret
pop
sbb
cmp
mov
mov
fwait
lock
mov
sbbb
int3
jae
mov
push
or
inc
dec
jmp
adc
loopne
add
jg
mov
sub
push
inc
ds
push
cld
push
cs
dec
cmp
dec
popf
cltd
aam
sbb
stc
hlt
pop
or
mov
aaa
push
lret
sub
and
sub
cli
pop
cmp
and
bound
stos
sub
xchg
dec
sbb
pushf
add
sbb
and
adc
push
push
jb,pt
pushf
sbb
and
jb
sbb
xchg
pop
inc
test
dec
je
nop
inc
insb
addr16
js,pn
ret
call
adc
loopne
cmp
sub
fdivr
lods
xor
or
and
xlat
bound
adc
and
pop
xor
jne
leave
mov
push
movsb
mov
shlb
hlt
mov
or
dec
mov
adc
xchg
out
mov
lods
or
mov
dec
pop
add
xor
stc
imul
cmp
mov
movsb
xor
shll
and
dec
mov
shrb
jecxz
jle
dec
fdivl
fimull
and
jecxz
fisttpl
les
fucom
rol
into
pop
xchg
mov
ja
loope
lods
pusha
jle
xor
push
aam
frstor
and
pop
push
inc
std
pop
dec
lods
ja
add
popa
sub
rcll
dec
add
in
pop
sub
xor
mov
and
mov
es
dec
ljmp
fsts
shll
flds
mov
jbe
dec
xor
imul
in
xor
mov
cltd
outsl
loope
movsl
sbb
cmc
aad
dec
mov
inc
adc
ljmp
push
xorb
cs
enter
mov
repz
and
ret
adcl
inc
out
jbe
and
stc
adc
mov
je
jmp
sti
dec
insb
aas
nop
or
mov
mov
icebp
clc
inc
sbb
inc
gs
mov
stc
cmp
mov
imul
push
push
adc
cmc
lcall
daa
scas
dec
add
add
inc
push
daa
or
pop
jbe
into
pop
and
inc
aaa
test
in
test
fidivrl
cmp
jnp
xchg
add
push
mov
mov
lods
stc
inc
mov
call
jmp
mov
movsl
jnp
out
popa
pop
mov
shrb
mov
cmp
lret
dec
adc
ret
adc
push
stos
and
cmp
andl
dec
jg
sbb
sub
lret
jb
pop
add
cli
xchg
popl
add
into
pop
add
pop
jns
pop
mov
cmp
call
sub
lds
inc
loope
push
sub
loope
add
fadds
loopne
aam
xchg
stos
inc
outsl
mov
cmp
shll
lahf
jmp
repnz
xchg
dec
push
insl
add
mulb
and
jge
std
mov
sti
inc
xchg
and
dec
adc
hlt
scas
iret
mov
pop
add
adcb
hlt
notl
aas
xor
insl
jmp
pop
jecxz
jbe
xchg
mov
adc
rorl
mov
outsb
xchg
jno
outsb
sub
sub
cmc
scas
icebp
jecxz
popa
std
cmp
mov
mov
jge
inc
push
inc
xor
mov
sub
ss
xchg
popf
and
cmp
aam
push
sbb
lock
adc
orb
and
xchg
imul
scas
pop
aad
lea
or
adcb
push
and
das
push
xchg
or
cmp
mov
pop
xlat
jbe
pusha
jns
out
movsl
fldl
mov
incb
jle
lea
xor
or
movsl
pop
fidivrl
das
push
imul
push
pushl
ljmp
in
jmp
xchg
enter
fwait
cmpsb
and
push
add
jns
cmp
mov
sbb
gs
or
out
es
ud0
jo
cmp
jnp
sbbl
rorl
add
insb
push
out
sub
cld
mov
add
jge
push
sbb
jge
cltd
es
mov
das
jno
mov
pushf
popa
mov
mov
jbe
jae
xchg
jg
fmuls
js
jle
or
mov
push
pop
mov
popl
inc
vmwrite
test
push
mov
push
push
adc
cmp
test
leave
test
repnz
cs
sub
pusha
pop
push
mov
push
pop
xchg
sub
jle
fsubl
addr16
or
jae
inc
jecxz
jp
fisubrl
adc
sub
cmc
xchg
shrl
fldenv
rclb
cmp
test
mull
dec
outsb
lock
mov
pop
insl
adc
sahf
add
push
pop
xchg
inc
xlat
xchg
xchg
mov
mov
cmp
xchg
adc
int3
xchg
cmp
enter
hlt
scas
sbb
repz
pop
ja
and
iret
stos
sbb
dec
push
jns
xor
xchg
or
fdivrl
fldt
mov
jb
insb
int3
and
out
jnp
jp
mov
inc
cmp
adc
push
cmp
stos
rcrb
mov
xchg
lods
int3
xchg
xchg
stos
sub
loopne
in
inc
dec
ss
lar
outsb
lret
push
shl
ror
sub
inc
sahf
repnz
fldl
cmp
call
arpl
pop
ret
addr16
sub
inc
leave
ljmp
into
lahf
sub
pop
push
sub
mov
and
add
test
and
and
inc
xchg
pusha
mov
addr16
add
mov
dec
xor
xor
loop
outsb
std
cmp
jg
cmp
jo
pop
jmp
inc
test
and
sub
loope
push
gs
adc
xor
and
movsb
cmp
into
jmp
mov
sbb
sub
xor
cmp
mov
mov
mov
dec
inc
sbb
lods
xchg
mov
sbb
lea
enter
xchg
ljmp
int3
shl
or
lea
xchg
in
call
rorl
dec
dec
xchg
jae
dec
clc
xchg
push
and
jg
jmp
dec
pop
cmpsb
xchg
inc
ljmp
popl
sbb
lock
jge
mov
sbb
aad
imul
lcall
pop
mov
imulb
std
pop
clc
cmp
cmpsl
fimull
imulb
jne
add
cmp
mov
push
dec
icebp
xor
mov
inc
cld
dec
or
push
cmp
fwait
jns
insl
jnp
test
imulb
and
into
sbbb
insb
icebp
pop
nop
mov
stos
arpl
xor
xor
scas
aam
mov
sub
lods
and
xchg
mov
sbb
pop
std
xor
test
xchg
enter
out
xor
cwtl
imul
jae
in
dec
mov
add
cwtl
and
mov
dec
push
nop
push
mov
dec
incl
dec
pushf
pop
sub
jno
not
dec
pop
int
push
stos
nop
cmp
stos
leave
pop
adc
rorl
jecxz
repnz
shlb
ja
jno
push
fs
rcrl
xor
rcr
orb
addr16
test
cmc
push
xchg
sub
cld
fdivrl
and
sub
std
arpl
inc
mov
lea
lock
jle
aam
pop
inc
xchg
inc
sub
sub
inc
adc
scas
outsb
bound
cmpb
mov
cld
xor
jl
xor
xchg
add
scas
dec
add
jmp
dec
ret
xchg
ds
mov
pop
loopne
add
xchg
mov
or
pop
xchg
mov
push
mov
movsb
push
andl
sbb
loop
enter
mov
xchg
aad
ss
add
inc
inc
push
xlat
pop
test
push
jge
into
in
iret
cs
es
sahf
jnp
out
push
adc
adc
or
xchg
xchg
or
sub
xchg
mov
rclb
jo
repnz
xchg
ds
cmp
push
add
dec
xor
push
lret
sti
inc
push
flds
push
dec
mov
jp
dec
shrb
push
test
and
and
xor
loope
jmp
mov
sbb
inc
ds
inc
cmp
loope
loopne
jg
pop
std
add
inc
mov
mov
push
inc
mov
adc
mov
imull
xor
mov
sbb
pushl
repz
orb
mov
mov
add
push
or
push
xchg
mov
popf
xchg
rorl
jmp
jge
pusha
incl
cltd
dec
mov
ss
scas
cmp
push
faddp
mov
add
adc
cmpsb
int3
mov
movsl
ss
mov
pusha
mov
and
fmuls
inc
jle
pop
data16
out
inc
mov
pop
sti
insl
fcmovnb
sub
xchg
or
push
inc
add
pushf
pop
scas
mov
icebp
ds
movsb
and
cli
xchg
inc
mov
lret
cmp
jl
add
fwait
adc
test
jge
imul
ret
xchg
pop
test
cmp
pop
loope
inc
mov
out
or
push
adc
inc
arpl
cmp
inc
inc
xchg
cltd
loop
jl
dec
add
mov
xchg
sub
inc
or
mov
push
lret
and
pop
push
pop
arpl
push
xchg
jno
dec
scas
popa
lods
cs
pusha
popa
adc
add
and
xor
xchg
dec
ret
das
xchg
fwait
sub
cmpsl
push
and
push
fisubrs
or
push
test
lea
js
stos
jns
dec
cmp
xchg
and
clc
pop
mov
cmp
jl
mov
hlt
and
mov
mov
cld
or
mov
mov
shlb
xchg
sub
mov
mov
pop
jne
cwtl
inc
mov
xor
mov
loop
pop
fisttps
in
push
sbb
aaa
out
lahf
mov
pop
adc
mov
movsl
push
jo
push
mov
push
inc
xlat
or
xchg
or
mov
pop
cmc
stc
mov
les
int
lret
fs
arpl
jns
add
xor
push
push
cmp
xchg
xchg
pop
pop
and
push
or
mov
sub
test
lret
pop
pushf
inc
adcb
rcr
arpl
lock
dec
enter
pop
popf
arpl
adc
push
popa
loope
or
xor
inc
loope
mov
stc
bound
xor
scas
mov
das
mov
xor
lahf
and
mov
pop
and
rorb
mov
lods
in
xor
imull
xchg
and
push
ss
sub
push
into
insb
icebp
xchg
repz
push
arpl
xchg
sub
add
mov
inc
inc
sbb
push
inc
add
push
xor
mov
cmpsb
les
sub
mov
fsubrl
insl
sub
out
cli
aam
push
sub
fmul
fcompl
in
adc
nop
push
and
jo
mov
lods
adc
outsb
sarb
xor
mov
jbe
outsb
adc
in
lcall
jb
mov
jbe
mov
cmp
xorb
mov
fidivrs
xchg
loop
mov
mov
ja
leave
aam
cmp
das
mov
jb
pop
jb
inc
inc
mov
dec
pop
pop
loope
inc
push
add
cmp
into
push
and
arpl
dec
jno
dec
les
inc
dec
or
add
mov
lea
sub
push
test
rcl
jg
pop
notb
mov
sbb
xorb
fisttps
cli
jp
ljmp
sub
fsts
js
sub
push
imul
addr16
mov
sbb
in
mov
push
fidivrl
push
dec
lods
sub
pop
hlt
xor
add
test
gs
outsb
iret
inc
shl
sbb
aam
stos
fmuls
dec
out
xchg
inc
mov
cli
out
inc
mov
cmp
push
mov
push
subb
shrb
and
ret
inc
shrl
pop
scas
push
mov
or
push
popf
mov
jle
sbb
in
pop
xor
pop
lea
adc
ret
cli
push
out
add
cmp
mov
xor
mov
inc
xor
into
lret
lods
sub
jns
sub
shll
mov
sbb
ret
lea
mov
dec
in
outsb
xor
pop
es
or
mov
imul
mov
inc
stos
pop
pop
push
jo
call
mov
out
icebp
jae
imul
ja
mov
fcmovnbe
jbe
sub
mov
mov
lret
test
fwait
repz
fsubrs
cmp
lret
pop
jb
icebp
lcall
dec
ds
xchg
scas
in
pop
adc
add
jmp
repnz
add
pop
fstpl
stos
xor
add
or
and
mov
pop
add
sbbl
test
push
rol
pop
addr16
cmp
lahf
vpor
imul
jmp
sbb
call
sbb
les
mov
leave
dec
pop
adc
into
add
mov
pop
clc
movsl
mov
adc
push
cmpsl
aam
in
movsl
mov
mov
push
push
xchg
and
les
pop
cmpsb
je
pop
xchg
push
dec
jne
inc
jg
and
dec
rcrb
cs
inc
test
inc
ja
or
mov
xchg
pop
xor
sbb
imul
pop
push
nop
sub
xchg
inc
xchg
callw
das
mov
inc
arpl
add
jno
aaa
pop
lds
mov
mov
jge
dec
mov
mov
test
les
pop
xorl
sbb
inc
sbb
mov
leave
sub
bound
clc
fwait
inc
cmp
rclb
data16
das
push
lds
xor
jmp
hlt
int3
and
out
push
adc
jbe
xchg
jl
call
mov
test
fstps
stos
cmp
pop
mov
fwait
cmp
jmp
add
lcall
es
mov
mov
jmp
data16
in
int3
sub
dec
jle
icebp
leave
mov
push
pop
add
jp
adc
or
jbe
jecxz
aaa
test
push
daa
leave
enter
loope
push
xlat
pusha
and
add
dec
mov
pop
pop
stos
call
dec
dec
inc
mov
xchg
mov
dec
mov
lods
inc
aaa
mov
push
pop
popa
add
fists
mov
fwait
xchg
jbe
nop
jl
cltd
inc
ja
jb
movsb
insb
inc
inc
je
lods
push
test
in
inc
push
mov
add
push
cld
pop
xor
push
jb
enter
inc
xor
insl
mov
jae
fcoms
xor
dec
repz
adc
stos
and
fstpl
or
rolb
mov
pusha
mov
sbbl
mov
and
sub
clc
jae
ja
or
add
xlat
inc
push
mov
xor
fs
loope
mov
or
lret
mov
push
loopne
push
mov
jg
inc
in
xor
js
add
insb
test
fwait
cmp
adc
imul
sbb
cmp
and
mov
shlb
jne
mov
pop
pop
push
jbe
and
aad
or
jno
out
xorb
lret
aas
fnsave
daa
inc
stos
fmul
lret
add
inc
xor
xchg
xchg
cmp
sbb
imul
push
add
xlat
ficomps
rorl
jns
lcall
and
cmp
cwtl
jne
cmc
fmull
jb
mov
jnp
jmp
add
fidivl
fidivrl
push
popa
inc
out
fwait
jne
test
adc
test
jge
dec
dec
popa
stos
sbb
lret
inc
mov
mov
sbb
adc
clc
ret
call
imul
outsl
test
and
rcr
dec
imul
pop
jb
xor
sub
lcall
mov
sbb
sahf
and
insb
dec
bound
dec
mov
mov
stos
cmp
test
and
loope
mov
adc
xchg
outsl
cmp
arpl
cwtl
mov
mov
rorl
mov
pusha
cmp
cltd
adc
push
sub
pop
cltd
sti
push
lcall
lret
out
dec
add
arpl
mov
sub
dec
add
cltd
mov
roll
jl
adc
cmp
aas
nop
ja
das
lret
sbb
add
jl
xchg
ret
add
cmpsb
sub
push
adc
out
lahf
mov
aad
fnstsw
sub
ja
cmc
push
stos
gs
lret
cmc
repz
push
and
cld
cltd
into
cmp
cmp
or
negb
call
adc
xchg
jb
pop
int3
cvtpi2ps
sbb
decl
push
cmp
lret
mov
push
or
push
dec
jbe
outsl
and
mov
scas
jle
sub
addb
inc
mov
xchg
pop
pop
mov
les
loope
arpl
in
xor
out
addl
jnp
sbb
mov
sub
fdivrs
adc
icebp
rol
movsl
mov
test
push
ret
mov
pop
xor
jp
pop
stos
push
pop
cli
arpl
sub
es
inc
fdivs
fdiv
jnp
and
inc
sbb
mov
sbb
xorb
sub
arpl
push
inc
fildll
sbb
negb
sub
add
xor
jae
mov
jbe
ja
jb
std
adc
inc
adc
add
daa
insl
cmp
addr16
jge
in
xlat
outsl
ffree
insl
in
jnp
ds
and
add
adcl
js
clc
pop
jae
or
add
jo
cmc
ret
xchg
push
int
xor
mov
arpl
stos
clc
mov
push
mov
int3
test
xchg
jle
sbb
xchg
lea
pusha
imul
fdivp
mov
shll
roll
inc
jmp
imul
shll
repnz
addb
pushl
mov
jecxz
xor
lret
inc
jne
push
mov
jl
daa
mov
int3
sub
pop
cmp
orl
fsubrl
int3
mov
mov
mov
test
aas
jp
xor
cmpsl
and
xchg
dec
jb
xchg
adc
pop
popa
mov
imul
mov
scas
dec
inc
cmp
sarl
jns
push
cmp
dec
scas
mov
rcrb
xchg
dec
mov
adc
mov
stos
out
and
mov
test
mov
ljmp
push
cld
outsb
jo
sbb
and
js
add
iret
popa
ret
push
xor
mov
push
hlt
out
std
push
sub
inc
mov
xlat
mov
outsb
mov
xchg
push
and
or
jae
cmp
pop
mov
and
loope
mov
mov
aas
fs
movsb
std
movsb
push
rcrb
pop
sbb
fidivs
enter
inc
insl
xchg
push
push
mov
aaa
sbb
mov
mov
xor
shlb
sbb
xor
and
adc
mov
mov
in
pop
je
and
sub
repnz
mov
out
lock
xlat
movsl
push
add
and
dec
pop
mov
mov
mov
lods
or
push
cltd
jno
xor
xchg
shlb
aaa
lods
stos
arpl
idivb
outsb
cmp
fdivrp
stc
xchg
dec
dec
cmpsl
dec
lods
jmp
add
xor
jmp
sub
cmpsb
das
sub
ljmp
sub
inc
xor
imul
cmp
aad
scas
mov
xchg
dec
cmpsl
add
ficoms
dec
or
adc
out
add
dec
and
and
testb
cmpb
loopne
add
push
mov
ss
aam
test
xlat
xchg
shrl
cmp
fdivrp
into
lds
ret
xor
js
mov
lock
popa
addl
movb
std
lahf
pushf
loop
dec
loope
scas
lods
pop
insl
push
movsl
or
outsb
jp
add
rorl
pop
or
addr16
mov
repnz
sbb
xchg
adc
js
imul
jmp
aas
push
and
xchg
icebp
adc
mov
xlat
pop
pusha
xchg
sbb
cwtl
aad
adc
jge
pop
mov
cwtl
stc
mov
sub
cmc
inc
and
dec
pop
push
in
loop
rorb
sub
pushw
jne
div
cmpsl
xchg
mov
mov
mov
movsb
ror
sub
fs
mov
and
stc
popa
cmp
mov
cmp
dec
push
and
sub
dec
leave
xorb
lea
rcrb
mov
or
add
scas
dec
xor
add
mov
adcl
jp
xchg
dec
es
jne
aad
mov
insb
in
pop
mov
xchg
push
adc
mov
std
and
mov
push
ja
jle
mov
jg
mov
mov
in
imul
dec
lds
pop
xor
push
xchg
mov
leave
imul
cmp
and
add
les
push
and
push
mov
dec
dec
call
push
stc
and
jl
cmp
adc
add
push
cmpsl
pop
scas
xchg
fisubl
sbb
mov
jo
addl
loop
insl
rorb
jne
dec
push
icebp
std
pop
in
mov
xor
test
es
addr16
or
sub
not
xchg
fisttps
ds
lret
iret
sbbl
cmp
stos
dec
mov
sbb
clc
xchg
call
sub
jne
scas
fimuls
lahf
mov
jns
mov
loopne
jb
std
test
out
dec
sbb
or
add
data16
out
movsl
pop
aas
fdivrl
sub
negl
pop
sub
xchg
jecxz
test
pop
arpl
push
push
jp
movsb
aas
xor
jge
and
inc
pushf
ficoms
xchg
test
imul
adc
aas
ss
mov
fmul
mov
and
push
fisubrs
in
jge
xlat
mov
lods
jl
cld
cld
push
or
pop
adc
mov
cld
cmp
xchg
rcrb
pop
xor
fsubs
sbb
xlat
xor
aaa
subl
stc
mov
or
lock
push
sbb
negb
or
sub
adc
xchg
or
shrb
in
push
dec
fwait
pop
arpl
sub
push
add
cwtl
inc
xor
int
pop
mov
mov
mov
fs
pop
adc
ss
das
jno
into
mov
int3
cmc
and
push
cltd
cmp
xor
call
ljmp
in
cli
inc
xchg
mov
push
nop
fcmovnbe
mov
aaa
ss
mov
aas
ja
mov
jbe
imul
cmp
clc
xchg
xor
int
ds
scas
xchg
bound
sub
sub
inc
pop
or
sbb
jp
dec
pop
and
sub
or
loopne
mov
ja
je
push
xchg
sub
adc
pop
or
mov
movsb
push
loop
cmp
shlb
sub
mov
les
push
pop
std
mov
in
inc
jl
test
inc
out
ljmp
or
or
rcrb
cmp
insl
lea
jecxz
inc
xchg
mov
das
stos
and
pop
cmp
mov
mov
pop
xchg
clc
pop
lcall
cld
jo
out
pop
popf
dec
mov
dec
lock
ljmp
jo
mov
bound
cmpsb
mov
mov
adc
push
pop
add
dec
sbb
jb
outsb
frstor
mov
mov
mov
add
mov
imul
sbb
push
fmul
gs
insb
cmc
mov
push
jmp
dec
adc
cld
rorb
shlb
out
lea
dec
mov
mov
packssdw
outsl
fiadds
inc
pop
aaa
into
inc
adc
leave
cli
xchg
xchg
cmp
xchg
ljmp
mov
imul
pop
mov
out
pop
mov
popa
lock
or
scas
fidivs
ffreep
imul
or
ljmp
fs
xchg
mov
mov
lahf
add
xor
adc
enter
out
loop
das
or
sub
mov
jne
mov
std
sub
je
int3
push
xor
into
pop
sarl
bound
or
test
jge
mov
jmp
cmpl
jmp
xchg
ljmp
rcrb
leave
dec
mov
push
add
imulb
inc
sti
aad
stc
rcll
sub
jge
mov
mov
xchg
adc
push
inc
int
ret
sbbb
push
jg
test
push
push
insl
dec
dec
add
mov
push
test
pop
adc
adc
divl
popf
push
shr
sub
in
push
mov
cmc
insl
push
in
mov
imul
test
xchg
das
mov
nop
jns
cltd
ss
sbb
inc
ljmp
fldt
and
fmull
ljmp
pusha
mov
movsl
popf
add
gs
jp
push
mov
sub
dec
add
js
iret
mov
xor
dec
subl
sbb
and
ljmp
nop
xor
pop
mov
mov
pop
insl
mov
xchg
or
daa
lcall
shrb
les
incl
cmpb
out
xchg
add
add
inc
sbb
xchg
pop
std
sbb
push
movsl
out
mov
sarl
daa
test
in
inc
mov
add
test
lahf
dec
cwtl
mov
xchg
sti
pop
mulb
adc
sub
mov
test
sub
push
lods
aad
mov
sub
jae
inc
or
xchg
add
push
or
cmpsl
dec
pushf
ret
aam
xchg
out
cs
arpl
jg
mov
xor
out
adc
bnd
mov
mov
stc
sti
sbb
sar
cmpsl
jge,pn
pop
pop
js
push
aaa
movsl
ret
xchg
inc
xor
sub
inc
or
pop
xor
jle
sub
and
mov
xchg
sti
adc
xchg
and
popf
mov
cli
cmp
mov
mov
xchg
push
xor
popa
faddl
jecxz
loope
imul
sarb
in
pop
add
sbb
dec
inc
mov
lret
and
popl
push
add
xchg
or
xchg
leave
and
cmp
repnz
jo
push
lahf
xchg
cmp
jmp
push
lock
das
shrb
dec
scas
repz
adc
lea
mov
shlb
inc
pop
pop
cld
outsb
jb
outsl
push
sub
ds
push
cmp
mov
sbb
hlt
push
leave
dec
jl
ret
negb
and
dec
test
fs
imul
data16
repnz
mov
je,pt
dec
test
adc
dec
mov
xchg
xchg
out
inc
call
stos
inc
sub
pop
mov
or
add
adc
movsb
imul
push
lahf
pop
in
cmc
xchg
scas
icebp
xchg
lock
shll
cs
inc
scas
mov
and
inc
into
or
push
cld
test
inc
outsb
loop
fldcw
ja
mov
or
fadds
xchg
xor
push
out
test
or
mov
daa
sti
imul
jle
fs
in
enter
lcall
cmp
cwtl
test
lds
push
leave
psrld
adc
push
pop
push
jle
pusha
pop
cmp
sbb
cs
mov
movsb
push
mov
lahf
push
lock
push
aaa
ja
adc
insl
movsl
pop
movsb
jg
xor
push
imulb
xor
adc
mov
stos
fs
ljmp
fiaddl
or
jecxz
adc
orb
cmp
push
mov
jg
fwait
sbb
mov
ds
add
fildl
movsl
into
ficoml
rcl
outsb
pop
outsl
push
dec
nop
cmpb
xor
std
push
sbb
rcll
fwait
int
push
sub
xchg
jno
push
roll
dec
mov
lret
aad
mull
into
mov
mov
push
mov
jl
aas
testb
push
or
repnz
aad
ds
mov
scas
push
mov
xchg
or
jae
adc
add
inc
cltd
pop
daa
int3
inc
fldenv
clc
sub
jg
lcall
mov
push
jl
jmp
pop
out
push
das
mov
shl
push
jecxz
shll
out
enter
fistpl
aam
pushf
fs
cmp
mov
outsb
xchg
cmp
lahf
sub
push
pushf
jno
jmp
or
cmp
cmp
mov
sub
data16
ss
push
pop
fldenv
mov
mov
pop
pop
outsl
ss
dec
outsb
cmpsl
inc
pop
add
mov
lock
jmp
pusha
lock
or
jae
pop
aam
fsubrs
leave
mov
and
xchg
bound
fcompl
vmread
lods
std
pushf
mov
jecxz
addl
rolb
int3
aad
xchg
mov
sub
and
addr16
orb
cld
xchg
mov
xlat
mov
int3
aas
enter
jo
or
adc
xor
js
mov
outsl
loope
sub
adc
mov
lock
fldenv
sub
sbb
cmp
das
mov
ret
lret
jb
lods
cmp
cmp
aaa
cmp
gs
aaa
adc
push
mov
aam
fsubrl
or
adc
push
and
repnz
mov
cs
pusha
movsb
inc
and
lods
shll
adc
adc
lret
jg
int3
cmp
xchg
pop
aam
testb
ja
xchg
enter
or
or
jp
popf
push
mov
out
ja
in
subb
cmpsl
and
lret
pop
jle
xchg
roll
push
adcb
andl
mov
data16
or
fnstcw
adc
outsl
stos
imul
ja
pop
ja
pop
nop
cmp
test
test
les
repnz
lret
iret
movsl
movsl
dec
ja
cli
fwait
cmp
add
aam
insl
sbb
fprem1
push
xchg
loop
andl
imul
iret
xor
fwait
enter
sub
xchg
dec
icebp
test
out
and
push
pop
out
sub
xlat
jno
and
adc
or
xor
cmp
scas
push
sub
cli
jp
jle
dec
insb
adcb
movsl
sbb
insb
imul
jecxz
xor
sahf
mov
add
leave
or
jnp
jae
mov
ret
mov
je
cs
adc
push
jns
mov
nop
pusha
jnp
mul
pop
mov
dec
cmp
cmp
mov
mov
fstpt
lret
or
mov
mov
into
aaa
in
push
cmp
out
mov
outsb
mull
adc
pop
adc
push
es
popa
push
in
sbb
int3
add
cmp
aad
sti
testb
or
push
xchg
push
movsb
or
pop
es
test
sub
mov
or
sub
imul
test
or
mov
cmp
pop
and
out
orb
dec
fimuls
loopne
movsb
stc
test
idivl
xchg
mov
stc
cli
push
sti
rcrl
testl
popa
rcr
out
in
and
sub
jle
or
push
cld
test
js
insl
adc
cmp
push
push
in
sti
and
inc
adc
cld
lods
xor
aaa
bound
pusha
test
stos
lcall
mov
jns
sub
call
mov
addl
xchg
jmp
or
mov
scas
jnp
adc
movsl
sti
lcall
std
cmp
pop
xor
dec
and
or
sbbl
cs
and
adc
jae
adc
call
cld
rclb
xchg
dec
or
jp
cs
lods
sub
cmp
lock
loop
mov
ret
xchg
jl
out
and
test
cmp
nop
popa
mov
addr16
iret
mov
enter
dec
ljmp
lret
lods
adc
push
sbb
sbb
mov
enter
scas
xchg
stos
rcll
je
loope
iret
ret
orb
xor
inc
push
cltd
fsubl
jp
mov
xchg
out
add
sahf
adc
mov
push
aad
sbb
dec
sbb
mov
out
or
jns
lock
cli
mov
or
sbb
xor
xor
dec
lcall
ljmp
inc
mov
sub
sti
xchg
test
insb
aas
jo
or
dec
jo
xchg
test
add
lds
aaa
xor
stc
subb
xchg
xchg
mov
cmp
nop
mov
dec
add
push
mov
push
pop
mov
or
scas
scas
pop
mov
mov
or
ja
push
bsr
jb
mov
mov
jp
xchg
cli
lret
mov
int
cmpsl
sti
into
popa
xchg
cmp
into
cs
fwait
push
and
faddp
push
sbb
or
and
jg
nop
test
xor
and
add
xor
dec
xor
test
fsub
fimuls
inc
mov
pop
mov
mov
sbb
mov
lret
add
cmp
xchg
loope
or
lods
pop
sbb
in
imul
out
pop
or
and
sub
popf
lahf
fnstsw
sbb
adc
cmpsl
lret
outsl
in
push
sub
jg
addr16
inc
lret
cltd
pop
imul
sbb
jnp
popa
xor
pop
lods
inc
shlb
inc
out
mov
addr16
mov
clc
fildll
sbb
lahf
jl
nop
cmp
daa
jmp
inc
or
adc
repnz
push
stos
jl
lcall
repz
xchg
jb
xchg
insb
or
push
imul
ret
data16
frstor
shl
mov
rcrl
imul
push
fsts
sahf
inc
xchg
mov
and
xchg
or
adc
xor
lods
or
dec
ds
jge
mov
cmp
int3
inc
cwtl
enter
jnp
inc
mov
mov
add
lahf
mov
repnz
mov
popf
ret
arpl
inc
stos
adc
xor
xchg
sub
push
loopne
push
mov
mov
and
cmpsl
jb
movsl
adc
je
fdivs
add
fcomi
popf
cmp
aas
push
adc
lcall
mov
xchg
test
pop
rol
enter
push
ja
mov
jnp
push
add
xlat
dec
inc
add
sub
jmp
mov
cmpsb
out
shlb
rolb
sub
add
push
xor
scas
ret
mov
mov
addr16
push
in
je
inc
lods
outsl
jbe
cmp
das
mov
ljmp
mov
push
jae
push
jmp
imul
and
or
and
sub
mov
pop
xchg
out
push
lcall
adc
mov
je
in
leave
adc
ja
cmp
mov
mov
pop
fs
and
scas
xchg
not
push
mov
or
cmp
jns
rolb
je
ret
fsub
jnp
or
imul
sbb
jge
push
cwtl
out
ret
mov
pusha
inc
mov
fisttpl
xor
jb
xchg
dec
int
scas
out
arpl
pushf
mov
add
sti
xchg
movsl
je
dec
fidivrs
mov
jnp
mov
pop
cltd
fidivs
jbe
pop
and
inc
loopne
in
lcall
js
adc
cmp
push
mov
lock
in
pop
dec
jns
mov
or
mov
shl
push
mov
add
cmp
jns
add
aas
lods
sarb
sub
in
cltd
or
fstl
repz
enter
sbb
pop
adc
ds
cmpsb
dec
push
imul
mov
fisubl
fsubl
repz
sbb
lret
xchg
std
std
mov
imul
inc
and
icebp
cmp
push
stc
sbb
dec
mov
pop
push
xor
inc
and
sbb
mov
adc
shll
pop
jecxz
into
sub
pop
pop
sbb
shll
fisttps
pushf
dec
jmp
aaa
add
dec
mov
fmulp
das
sahf
or
in
and
mov
add
lock
ja
or
iret
pusha
fistps
add
pop
clc
adc
loopne
lds
decb
cli
les
icebp
enter
repz
cmp
cmp
mov
sbb
call
and
stos
push
fisubl
sub
mov
push
or
leave
les
sub
push
daa
pop
push
jl
adc
arpl
into
xchg
jecxz
fldl
in
dec
mov
das
and
pop
mov
ret
or
pop
into
call
inc
lret
in
pop
push
and
out
jp
push
mov
mov
mov
mov
pop
ficomps
mov
fsts
adc
ljmp
aam
push
inc
mov
mov
rcll
push
sahf
and
jmp
push
mov
xor
dec
lds
dec
movhps
int3
jno
pop
jo
jo
ror
rep
pusha
inc
jo
in
mov
aas
in
jns
jnp
mov
cli
push
sbb
mov
dec
and
icebp
push
in
cmpl
add
mov
push
stos
outsb
cmp
repnz
push
push
push
sub
lret
add
outsb
in
ja
jmp
push
jb
cmp
dec
aas
xchg
lret
pop
cmp
int3
xchg
imul
aam
and
jl
xor
jo
or
push
mov
mov
repz
push
sub
or
pop
add
or
pushf
std
andl
fwait
push
fdivp
scas
push
mov
movsb
sub
je
cld
into
call
out
mov
testl
xchg
shll
push
mov
or
xor
test
das
add
xchg
inc
mov
cmpsl
and
and
pop
add
pop
jp
lcall
dec
push
imul
faddp
sbb
xchg
push
into
push
dec
lea
out
sbb
inc
fdivrl
push
dec
mov
sti
cmc
pop
jno
sub
fstp
push
outsl
sahf
jnp
pop
push
stos
jnp
lcall
shll
lock
jp
adc
daa
negb
inc
or
sub
pop
jno
cwtl
push
pop
push
jle
test
sbb
js
inc
dec
xlat
jns
das
sar
jge
and
mov
lahf
cld
dec
arpl
cmp
in
fldl
mov
adc
arpl
sub
jle
lds
mov
lds
ja
and
jg
out
filds
les
inc
cmp
mov
jae
outsl
call
sbb
or
fisttpl
lcall
sub
push
lds
dec
ljmp
cli
xchg
loop
insb
stos
test
and
sbb
xor
fldcw
sub
sub
mov
sti
and
loope
or
mov
mov
inc
jne
loope
push
mov
xor
mov
faddl
sub
jecxz
test
pop
sub
imul
push
cmp
test
mov
push
shl
push
jle
pusha
sbb
in
rorl
stc
push
fs
mov
xchg
pop
cmp
scas
sub
dec
sahf
jbe
imul
fdivr
aas
addb
mov
and
aas
sbb
push
into
cwtl
jecxz
je
mov
adc
sbb
dec
xchg
push
repnz
inc
pusha
fdivs
push
popf
dec
pop
insb
in
push
outsb
leave
mov
pop
fstpl
jbe
adc
sbb
push
ret
xchg
adc
xchg
sbb
mov
fildll
mov
test
inc
stc
test
cmp
lods
test
lahf
mov
jbe
cmc
imul
out
or
mov
into
xlat
in
dec
add
cwtl
stc
std
xchg
cmp
inc
jmp
dec
push
mov
sub
cmp
mov
ret
xlat
sub
dec
dec
dec
or
pop
stc
fnstsw
out
out
sbb
sub
jle
mov
mov
shll
shrb
nop
nop
aaa
in
jne
addr16
ficompl
cmp
adc
int
aam
sbb
xor
cmp
dec
adc
je
or
mov
adc
sub
inc
addr16
movsl
jbe
sbb
cmpsl
or
jge
add
outsb
add
jge
dec
or
bound
aam
int
mov
mov
movsb
adc
arpl
test
or
out
mov
movsb
loop
jge
mov
rcrl
mov
jns
out
in
inc
inc
mov
add
int
mov
xchg
outsl
outsb
mov
imul
add
into
movsl
bound
or
mov
pusha
mov
lock
lcall
cltd
shlb
arpl
cld
ret
mov
jmp
add
inc
mov
sbbb
mov
and
fstpt
xor
mov
cmp
dec
ljmp
fcmovnu
sub
add
push
lahf
sbb
jp
adc
add
inc
cmpsl
sub
inc
pop
pop
aaa
add
adc
pop
mov
sub
push
cmp
movsb
jp
flds
lock
gs
and
ret
push
sbb
daa
xchg
aaa
movsb
xor
gs
push
movsb
adc
sub
add
lods
lods
stos
mov
mov
sbb
daa
jns
lret
add
pop
lods
add
and
subb
leave
pop
jmp
in
sub
jnp
popf
scas
mov
mov
dec
jmp
pop
out
addr16
outsb
daa
cmpsb
sbb
sub
cltd
mov
dec
pusha
add
fisttpl
sub
outsb
repnz
imul
loope
mov
mov
es
jmp
insl
es
xor
cmpsb
loopne
sub
add
push
jge
jmp
cwtl
pop
or
insl
sub
pop
int3
cmp
add
hlt
ljmp
sub
push
test
mov
and
jns
out
rclb
push
jb
pop
cli
mov
sub
xchg
push
lcall
in
out
xor
icebp
pop
pusha
pop
mov
sbb
mov
imul
sub
or
adc
jp
sub
add
mov
pop
sub
dec
int
imul
movsl
shr
jb
mov
iret
mov
inc
push
mov
es
jnp
addr16
xor
clc
loope
das
fwait
push
mov
lock
je
xchg
jp
lea
mov
mov
jmp
jbe
sub
rcrb
dec
bswap
aas
movsb
daa
adc
incb
lret
jno
sbb
daa
adc
dec
dec
fwait
jno
stos
lea
and
inc
pop
xorl
je
jno
mov
imul
aas
pusha
movsl
jmp
pop
cmp
pop
jb
cmpsl
insb
pop
and
or
iret
inc
mov
pop
or
mov
testl
add
adc
adc
adc
incb
repz
pop
imul
push
lret
cld
mov
imul
lea
cltd
scas
imul
or
cmpl
imul
and
imul
shll
inc
movsb
icebp
enter
fsubrp
mov
stos
aad
sbb
bound
or
mov
mov
or
rcll
cmp
inc
test
cmpsl
mov
test
inc
and
mov
test
fidivrl
sbb
jns
lods
jno
jecxz
push
fistl
mov
pop
mov
hlt
in
add
loop
xchg
movsl
dec
cli
lret
sub
fwait
mov
or
dec
pop
in
enter
cwtl
and
aad
xor
lret
dec
push
iret
ljmp
inc
dec
aas
push
cmp
imul
adc
inc
adc
jo
adc
xchg
xor
dec
push
aas
add
xlat
push
mov
in
test
inc
or
xchg
add
jmp
dec
imul
and
sbb
fcompl
cmp
scas
dec
sub
inc
add
mov
fisubrl
out
add
sub
pop
es
mov
loope
xchg
out
lret
repnz
mov
sbb
cmc
lcall
js
cmpsl
in
fildll
adc
add
pop
imul
movsl
cmp
into
push
jecxz
int
sub
int3
xor
andl
fdivrl
push
mov
inc
mov
loopne
stos
and
xchg
mov
cltd
imul
loope
push
mov
jne,pt
cmp
out
sahf
jae
sub
test
cmpsb
pop
outsl
test
cmp
fcomps
cwtl
mov
mov
pop
pop
jno
repz
mov
jo
es
jbe
cmp
mov
jno
in
lock
js
cwtl
std
lods
mov
ss
push
and
push
int3
ret
mov
fs
or
aad
sbb
mov
repnz
xor
and
mov
pusha
jge
fstl
incl
xchg
test
inc
shrb
daa
nop
jae
shll
xor
xor
sbb
aam
mov
testb
or
sbb
jl
icebp
addb
scas
dec
cmp
fstl
mov
lods
jg
cmp
insb
out
xchg
imul
test
push
mov
jg
xor
xlat
inc
cwtl
mov
and
inc
pushf
sbb
std
pop
cmpsl
jl
out
jae
arpl
push
pop
lcall
in
lods
aaa
out
shrb
test
loope
clc
or
pusha
fdiv
mov
jmp
mov
sbb
or
ret
or
xor
sub
or
lods
es
fdivl
jge
mov
mov
fsubl
xlat
test
lods
test
sbb
mov
lock
and
xor
jnp
jmp
pop
in
inc
inc
sbb
test
mov
xor
dec
lds
out
lock
jge
shlb
adc
jp
outsl
xchg
std
push
and
cmc
fwait
mov
fcomi
or
push
xchg
std
sti
mov
xor
lea
sbb
jne
sbb
jne
mov
lods
cmpsl
xchg
mov
shlb
adc
push
mov
xchg
out
scas
and
xchg
sbb
pop
adc
cltd
or
jae
jb
add
je
jge
jl
inc
fs
aam
mov
mov
pop
add
mov
rorl
xor
push
addr16
xchg
lds
xchg
pop
sar
sti
je
in
jecxz
xchg
mov
std
xchg
fimull
mul
mov
jge
push
sti
or
repz
ljmp
ss
lcall
pop
fwait
sbb
fldl
mov
jbe
out
sub
add
hlt
lahf
xchg
jmp
clc
mov
adc
dec
sub
rcrb
or
mov
or
bound
and
sub
cs
xchg
std
xlat
xorl
xlat
negl
test
dec
dec
test
std
xchg
xor
not
cmp
scas
jbe
js
testl
out
push
addb
shlb
inc
adc
fistpl
icebp
test
push
pop
pusha
push
insl
mov
loopne
sub
add
int
xchg
cmp
add
sahf
sahf
je
pop
pop
fcmovbe
call
cmp
outsl
bound
stos
aaa
mov
push
cmp
jg
je
movsb
stos
and
shlb
fildll
mov
push
pop
sub
push
leave
subb
cmpsl
push
sahf
mov
add
hlt
je
scas
xchg
std
call
pop
push
xchg
jge
int
jnp
sbb
arpl
jge
mov
add
scas
push
imul
stos
test
dec
loop
jle
jns
pop
cmp
mov
test
jge
stc
sti
pop
data16
xor
das
pop
pop
push
cltd
xchg
dec
dec
jnp
mov
pop
jnp
or
out
imul
inc
sbb
xchg
and
inc
addl
arpl
cli
repnz
in
push
mov
es
mov
or
sub
imul
call
addl
pop
sub
neg
add
nop
sarl
adc
mov
ss
cmp
addr16
push
ja
jle
test
inc
sarl
sbb
lret
enter
xchg
out
push
rolb
or
fsin
pop
mov
clc
scas
push
lcall
cmpsl
mov
xchg
aaa
mov
dec
negl
inc
xchg
aaa
cmpsl
mov
mov
ficoml
cmp
ljmp
pop
push
jg
mov
mov
movsb
inc
sub
divb
aad
nop
pop
shll
cld
stos
test
mov
and
mov
cmp
mov
xchg
adc
sbb
jmp
xor
or
mov
out
mov
inc
in
or
mov
jmp
xchg
jp
insl
inc
pop
jle
dec
xchg
sub
adc
in
movsl
sarl
xor
jp
aaa
das
shrl
out
cmp
push
inc
popa
jg
stos
out
lock
ret
sub
push
int3
aas
in
jp
in
sti
sbb
lcall
inc
es
push
xor
movb
dec
mov
sub
cmp
sub
or
add
into
mov
pop
pop
pushf
jnp
sub
es
push
and
sub
sub
mov
ja
or
lods
dec
fninit
popa
out
aas
sub
int3
ret
jl
or
jge
aam
xchg
cld
sub
xor
inc
cmc
sbb
and
or
cmp
cwtl
add
xchg
push
dec
bound
pop
insb
shlb
insl
xchg
sar
scas
xchg
pop
shl
enter
iret
scas
mov
dec
adc
imul
push
shrb
or
cmp
push
call
adc
insb
mov
into
mov
mov
mov
inc
jmp
cmp
sbb
sahf
inc
cmp
dec
data16
nop
arpl
icebp
movsb
sbb
pop
adc
jo
cmp
xor
inc
or
inc
lret
stos
mov
mov
jns
jmp
cmp
andb
sbb
arpl
and
cmp
imul
jle
or
scas
int3
or
xchg
push
mov
insl
sbbb
outsl
jg
adc
sbb
iret
testl
lods
ja
mov
aam
cmp
push
adcl
jmp
clc
loope
push
ss
jecxz
test
jne
add
std
pop
int
mov
cs
xor
cmp
add
mov
dec
lret
add
push
bnd
out
xor
out
loop
fisubs
add
stos
cmp
mov
scas
imul
xchg
ljmp
xchg
mov
lods
ja
or
lahf
fs
cmp
lret
and
add
enter
jg
mov
cwtl
outsl
jne
sti
insb
ss
movb
in
dec
or
cmpsl
and
decb
test
xor
pop
fisubrl
xchg
pushf
loopne
notb
test
ret
inc
mov
mov
fs
xor
andl
test
std
scas
fimuls
mov
rol
push
je
push
dec
int3
lods
aam
lds
repnz
adc
in
testb
test
and
lock
xchg
pop
test
call
test
jmp
nop
fildl
xor
shrb
push
or
insl
in
pop
mov
sub
sub
pop
add
ljmp
cli
xchg
ds
xor
fiadds
in
out
cmc
fsubl
jnp
add
es
test
add
inc
push
inc
jnp
shl
les
or
mov
pop
scas
mov
push
cmpsb
jbe
mov
pop
add
push
adc
push
xor
mov
mov
out
dec
xor
or
sti
jne
inc
scas
xchg
xor
adc
add
das
push
sub
setns
or
call
xor
xchg
shlb
push
mov
rcll
push
les
mov
idivl
and
fimuls
pop
subl
ret
push
inc
sarb
ret
aaa
dec
out
cmp
cli
lock
loope
aam
sub
fs
pop
cmp
movsl
repz
jae
xor
jecxz
add
dec
push
data16
mov
or
int
jb
insb
jne
or
rcl
xlat
xchg
aaa
clc
pop
inc
loopne
adc
idiv
fmuls
mov
pop
lock
dec
mov
bound
mov
scas
aas
fnstsw
sub
push
int
dec
out
sub
mov
mov
shrl
push
inc
cmp
push
pop
pop
pop
or
insl
mov
movsl
stc
mov
xchg
fdivr
xchg
stos
mov
push
cmp
xchg
pop
push
jmp
bound
cmp
les
mov
arpl
add
sub
in
aaa
dec
mov
dec
pop
jbe
or
mov
push
xor
bound
adc
fs
mov
gs
cmpsl
stos
jo
sahf
call
fistpl
add
xlat
or
test
insb
push
cs
xchg
lret
sub
movsb
pop
out
add
idivl
aaa
stos
or
stc
jg
jbe
and
call
sbb
or
add
fidivl
sbb
mov
add
lahf
add
mov
cs
into
inc
sbb
scas
sub
inc
jmp
jmp
pop
out
mov
ret
data16
js
addr16
mov
push
pop
jecxz
int3
roll
adc
lret
test
cmp
cmp
sub
js
test
dec
mov
jmp
pushf
adc
stc
mov
inc
push
sub
fmuls
jp
int
call
scas
push
jns
or
fwait
mov
lret
xchg
in
sub
cmp
mov
jbe
out
mov
je
cmp
stos
xor
in
insl
mov
sti
icebp
push
mov
inc
cmc
lds
ret
loopne
insb
ret
push
or
test
fdivrs
fidivs
mov
or
mov
push
les
jne
adc
add
daa
mov
cwtl
aas
cmpsb
xlat
lods
fcom
ret
aam
lahf
movsl
xchg
popf
lods
popa
stos
hlt
int
adc
aam
jl
push
outsl
loopne
gs
repz
adc
cmp
popa
out
cmpl
addb
popf
mov
push
sbbl
test
xor
icebp
scas
into
hlt
mov
push
and
mov
int3
cwtl
pop
push
dec
subb
pop
or
push
or
dec
jno
aad
jae
adc
test
xchg
ret
dec
lds
data16
jl
xlat
insl
push
or
scas
xor
cmp
pop
or
push
test
mov
cli
cltd
and
sbb
lods
cmp
pop
push
push
pop
imull
pop
pop
sub
ss
inc
mov
loop
adc
mov
lret
push
mov
adc
and
aam
insb
xchg
add
xor
mov
ljmp
mov
xor
mov
test
mov
lret
pop
jle
jle
addr16
mov
fcoms
fidivrs
mov
lret
testl
mov
fsub
add
mov
sub
js
and
pop
repnz
andl
es
mov
lcall
stos
inc
mov
dec
dec
cmp
jg
cs
fs
push
cmp
mov
testb
mov
imul
out
and
shl
loopne
add
add
jne
mov
fists
jb
cmp
pop
arpl
lcall
add
dec
sbb
scas
xor
aaa
mov
jnp
adc
jecxz
push
fs
lds
push
mov
push
jb
orl
and
repnz
mov
xor
dec
pop
or
add
push
dec
cmpsl
xchg
ds
jg
nop
inc
imul
jno
ljmp
cmp
stc
and
and
mov
mov
cli
pop
inc
js
je
lcall
mov
out
je
ds
xor
xor
push
sbb
pop
vmovq
xlat
fmull
sbb
pop
pop
aam
lock
and
sbb
xchg
imul
int
jns
push
es
js
add
push
mov
sbb
jge
loope
leave
push
lret
mov
in
imul
cmp
dec
mov
xor
int3
jl
cli
test
xlat
lahf
fwait
iret
bound
std
sarl
jae
push
test
test
jge
sub
jg
mov
xor
cmp
test
testl
push
gs
mov
mov
dec
data16
mov
sub
and
xchg
hlt
repnz
adc
negl
dec
jns
aam
ficoms
gs
mov
add
xchg
aad
add
pop
add
fxch
jle
divb
xor
or
push
xchg
mov
pop
add
add
popa
inc
ret
out
xchg
mov
inc
cmc
mov
pusha
mov
gs
and
test
mov
xchg
dec
subl
sbb
mov
scas
push
mov
xor
mov
pop
add
adc
inc
xchg
scas
enter
fdivs
push
jle
aaa
sarb
mov
or
cltd
jmp
jle
cmp
dec
shll
cmpsb
jo
outsl
xchg
mov
lock
fstp
lock
and
and
aas
mov
in
mov
jp
nop
fucomi
pop
ja
sub
sub
cmp
jmp
mov
jno
mov
sbb
test
scas
lahf
mov
sbbl
mov
mov
lahf
fs
inc
or
repnz
loop
push
mov
xchg
cmpsl
add
inc
pop
xchg
call
jmp
inc
ss
jbe
and
aam
sbb
les
pop
push
mull
gs
dec
ret
rorb
fldenvs
and
daa
outsl
out
in
pop
hlt
stos
into
push
xchg
fs
je
mov
mov
xchg
sarb
sub
sbb
and
sbb
xor
adc
jnp
ret
and
and
lds
sar
fidivrs
dec
pop
sbb
xor
in
pop
je
adc
lock
pop
mov
mov
cmp
dec
roll
xchg
into
and
mov
in
pop
shrb
sti
shlb
adc
aas
dec
adc
lcall
dec
or
or
sti
fidivl
inc
pop
sbb
add
jns
sarb
sbb
icebp
repnz
and
and
mov
test
push
bnd
adc
fsubs
mov
sub
or
addl
sahf
mov
into
gs
in
jg
mov
xchg
mov
loop
mov
test
pop
pop
leave
cmp
and
inc
test
test
xor
lea
movsb
lds
jecxz
clc
jp
pop
std
sbb
pop
add
int
xchg
int3
sbb
pop
out
rol
je
scas
push
and
mov
cmp
je
inc
jbe
sbb
sahf
add
jp
xchg
adc
push
jno
xor
icebp
testl
mov
add
push
cwtl
lahf
cmp
push
cmp
pop
dec
mov
xor
mov
in
xchg
cmp
cltd
mov
and
add
sub
sub
mov
or
pop
ds
sahf
xchg
sbb
lret
push
scas
js
hlt
pop
sbb
fwait
in
push
das
mov
fstp
dec
sbb
out
pop
icebp
pop
lea
add
testb
test
enter
stc
mov
lcall
stc
lods
lods
mov
and
fimull
cmp
divb
pop
mov
fsts
add
mov
les
jnp
sarl
mov
std
pop
gs
jl
push
xchg
clc
fdivrs
xor
mov
mov
in
icebp
testb
test
subl
lock
mov
xor
jae
out
xor
xchg
xor
ljmp
pop
pop
leave
push
sub
and
pop
mov
xor
bound
cwtl
pop
push
inc
out
loop
cmpsb
shl
cld
jl
xorl
loopne
cmpsb
xor
cmp
pop
push
aas
xor
jnp
xchg
lds
jmp
cmpsl
decb
mov
pause
stc
mov
sbb
inc
jmp
add
mov
dec
mov
fsts
shlb
arpl
jmp
popa
movsb
push
xchg
mov
xchg
xchg
pop
push
xor
imull
cmp
add
xlat
mov
xchg
scas
test
ljmp
sbb
sti
scas
iret
jb
into
inc
jno
insb
aaa
mov
xchg
stc
push
jo
cmp
mov
push
xor
jmp
xchg
call
and
xchg
inc
lods
out
rorl
js
daa
lods
leave
push
stos
sub
dec
push
xor
dec
scas
std
inc
out
push
dec
add
xchg
jmp
leave
movsb
in
mov
outsl
adc
inc
flds
inc
pop
std
jb
pop
hlt
decl
aas
fbld
stc
dec
das
idivb
jle
ljmp
mov
or
inc
insl
dec
adc
or
or
sbbl
inc
xchg
sti
mull
in
in
in
add
sub
lret
shrb
xchg
mov
out
les
mov
test
xor
out
enter
mov
jnp
leave
sbb
mov
inc
sub
xchg
sbb
scas
mov
in
shll
in
and
xchg
dec
jo
sarl
sbb
lret
inc
insl
mov
orb
pop
mov
jle
dec
xchg
pusha
cs
add
dec
jno
pop
mov
and
inc
aaa
or
addl
or
add
push
fdivs
fwait
add
add
cli
or
pop
or
pop
mov
mov
xchg
ja
in
loop
dec
repnz
in
cwtl
push
popf
ss
sub
lahf
sbb
dec
js
fisubrl
sbb
fxch
enter
out
mov
out
cmp
sahf
ret
dec
dec
and
add
in
dec
jns
xchg
aad
dec
and
insb
mov
mov
cmpsb
sbb
dec
dec
frstor
rclb
mov
mov
inc
jne
add
jmp
lock
frstor
jne
sbb
xor
xchg
pop
movsb
inc
dec
add
dec
cmp
mov
pop
insb
sbb
cmp
push
daa
fadd
shrl
jge
add
ljmp
ficomps
outsb
ss
dec
push
inc
adc
push
add
xchg
hlt
hlt
iret
repnz
out
adc
or
push
sub
jle
test
or
mov
or
xor
test
push
out
sahf
xor
test
jecxz
or
ds
idivb
xchg
in
jp
lods
mov
fs
pop
aad
and
shll
mov
inc
pushf
fisubrl
icebp
lret
loop
inc
jge
lahf
and
mov
mov
or
or
int
ja
icebp
mov
xchg
jl
cmp
push
outsl
aam
or
push
sub
lock
ja
xchg
sub
push
or
arpl
js
mov
je
sub
mov
xor
mov
and
pop
jo
xor
stc
ds
ror
lods
decl
scas
pop
test
push
sub
adcl
dec
dec
add
inc
push
ja
xor
sahf
add
mov
lret
xor
push
loopne
popf
clc
pushl
pusha
mov
jmp
pushf
out
adc
outsb
xchg
or
sbb
or
and
push
push
mov
pusha
xor
popa
inc
stos
push
ljmp
pop
aaa
xor
insl
adcl
push
cmp
pushf
sbb
mov
daa
ljmp
mov
add
pop
xchg
push
mov
jne
xor
lods
push
ret
das
mov
mov
push
insb
arpl
lods
mov
je
test
scas
pop
fdivs
test
adc
sbb
into
lcall
pop
jge
ret
pop
or
aaa
or
xchg
adc
jns
icebp
push
jne
aas
repnz
cmp
sub
jl
scas
pop
fcoms
cmp
aas
mov
or
mov
inc
fadds
lods
sub
fisttpl
push
or
dec
inc
inc
js
fwait
dec
mov
icebp
test
xor
push
stc
movsl
xor
test
mov
stc
scas
pop
mov
xchg
mov
mov
insb
idivl
add
popl
ljmp
sahf
mov
je
mov
pusha
push
or
imul
xchg
adc
jb
cmp
mov
fs
or
pop
xchg
sub
xor
mov
outsb
pop
imul
and
and
jno
jo
lods
lods
mov
call
in
cwtl
mov
das
hlt
in
pushl
mov
and
inc
daa
xchg
loop
adc
pop
mov
xorl
push
cmp
lods
dec
xchg
hlt
cltd
and
or
jno
jb
mov
mov
out
in
sub
pop
dec
push
pop
test
imul
lock
lcall
push
mov
fdivr
xor
cmp
mov
cltd
outsl
pop
dec
sbb
ljmp
call
outsl
fsubrs
inc
and
inc
pop
jnp
mov
out
std
outsl
cli
popl
push
mov
out
xor
mov
xor
fwait
repz
cmp
jae
test
popf
lcall
dec
js
cli
xor
iret
les
cmp
out
mov
jle
and
jp
and
ss
mov
das
test
push
or
andb
es
xchg
xor
in
sbb
or
repnz
inc
jge
push
pop
jg
or
jno
jp
je
sub
ret
sbb
mov
inc
leave
add
and
and
test
loopne
roll
xor
notl
sub
pusha
jne
mulb
lcall
push
xor
mov
inc
jl
shll
aas
jg
outsl
pop
iret
dec
jnp
adc
cmp
pusha
adc
test
push
jb
xchg
out
push
push
loop
jl
cmp
ret
xchg
aad
std
lock
push
in
xor
mov
adc
vpavgb
push
aam
xchg
mov
cmp
scas
jle
cmp
sub
cmp
inc
cmp
mov
pop
xor
and
xlat
pop
iret
sbb
inc
je
das
enter
xchg
add
mov
jne
in
iret
jg,pn
inc
aas
pop
push
int3
mov
scas
dec
aam
mov
jp
add
push
dec
jo
cmp
stos
std
mov
insb
jae
mov
mov
pusha
mov
sarl
divb
mov
xor
xor
sar
je
fidivrl
adc
gs
inc
clc
scas
js
les
sar
out
xor
or
mov
pushl
ret
movsb
test
clc
rorl
fld
icebp
push
dec
out
sub
bnd
dec
int
loop
gs
mov
pop
loopne
and
push
inc
jns
imul
pop
cmp
test
xor
enter
push
jmp
xchg
xchg
loopne
sahf
gs
jb
or
jbe
mov
lahf
xchg
inc
pop
push
inc
pop
and
sub
loopne
mov
adc
push
into
mov
lret
mov
dec
mov
fs
mov
adc
mov
inc
mov
jle
mov
sbb
push
xchg
fucomip
fbld
xor
gs
rorl
nop
and
push
and
add
cmp
xchg
filds
jecxz
jae
lock
int
xor
dec
mov
bswap
inc
mov
movaps
insb
fucom
sbb
sbb
cmpsb
aas
mov
mov
paddusw
cmc
ror
jmp
cmp
cmp
xchg
mov
dec
mov
scas
jb
mov
shll
cmpsb
jmp
cmp
pop
sbb
rcll
adc
mov
add
std
or
push
mov
in
inc
fimull
pop
outsb
ss
mov
daa
mov
xchg
test
leave
scas
inc
push
sub
and
xchg
jp
xchg
mov
or
mov
and
in
xor
mov
andb
pusha
adc
inc
popa
inc
scas
stc
jns
sbb
popa
jno
jmp
cmc
test
sub
jo
test
pusha
sbb
mov
mov
rcll
outsb
pop
or
and
mov
jns
icebp
outsl
push
adc
aad
mov
mov
dec
imul
lret
xchg
adc
jge
test
icebp
cs
inc
and
push
in
push
fcoms
in
and
fwait
sbb
pop
push
outsb
pop
sbb
inc
fnsave
sub
cwtl
stos
out
cmp
mov
int3
mov
jnp
pop
test
sub
out
cwtl
lcall
fwait
insl
enter
mov
push
lea
xchg
scas
les
push
scas
and
cwtl
add
jle
fisttpll
decl
mov
mov
pop
inc
xchg
and
or
xchg
xor
and
pop
test
mov
adc
mov
mov
adcl
and
pop
test
sub
loopne
daa
sahf
imul
dec
les
mov
inc
test
push
test
aas
mov
std
imul
push
pop
dec
leave
add
push
test
pop
sub
cmp
cmp
mov
out
negl
js
and
dec
arpl
push
add
ja
mov
xchg
test
mov
mov
lcall
lret
pop
mov
flds
inc
fisubrl
loopne
dec
xlat
fwait
mov
hlt
clc
push
loopne
es
jge
sub
inc
add
stos
js
lock
mov
jns
cmp
lods
scas
pop
xchg
push
in
aad
out
pushf
std
test
add
ficomps
jg
pop
dec
pop
ljmp
push
sbb
and
out
adcl
cmc
jl
inc
sub
ljmp
fdivrl
shrb
int3
lock
jecxz
lcall
data16
mov
in
es
mov
inc
cli
aaa
pusha
add
jg
mov
and
pop
pop
fisttpl
pop
mov
xchg
popa
push
fistl
mov
push
das
lcall
ret
jmp
mov
lahf
sub
jge
or
ja
mov
xchg
out
push
cmp
rcrb
sbb
rclb
jge
jnp
sub
orb
test
cltd
lea
scas
pop
xchg
or
jb
call
icebp
fcmovnbe
in
sbb
mov
jl
pop
and
xchg
cmp
call
inc
data16
and
lods
lods
mov
or
xchg
cmp
or
mov
js
mov
jl
add
or
push
adc
jg
enter
jge
pusha
int
adc
shlb
jns
lahf
push
add
int
in
cmp
ret
lret
aam
xor
aam
rorb
je
call
aam
and
cmp
dec
xchg
mov
lods
jae
popl
add
dec
push
mov
push
cs
mov
mov
pop
cld
xor
sub
ficomps
cmc
sbb
lret
pop
mov
das
xchg
jnp
fstps
cmp
stc
cli
dec
shl
push
in
jno
cld
jns
jecxz
or
cwtl
ja
scas
arpl
loop
push
jp
rorb
cs
inc
xlat
mov
ret
cmpl
subl
xlat
xchg
fs
ds
mulb
test
push
lret
not
nop
test
dec
push
jnp
out
pop
jge
sti
mov
and
test
cli
fs
adc
outsl
push
divb
inc
iret
jge
and
inc
int
adc
pop
sbb
mov
and
mov
movsl
aas
out
add
lods
int3
jb
iret
cwtl
or
mov
mov
rolb
fists
xchg
cmp
mov
out
push
push
mov
pop
push
push
aad
test
adc
cltd
push
inc
fidivrl
mov
dec
pop
mov
movl
adc
out
jl
jae
push
aad
ret
inc
jne
imul
je
xchg
roll
inc
add
pop
sbb
or
fsubr
std
and
lods
jge
test
add
mov
jb
cmpl
cmpsl
addr16
mov
mov
test
test
cli
add
jnp
sbb
js
imul
in
dec
mov
pop
and
repz
add
push
addr16
std
mov
in
sbb
cmp
mov
popf
add
inc
aam
or
mov
jbe
lea
xchg
mov
imul
xor
dec
outsb
clc
xchg
push
loopne
push
repnz
int3
push
cwtl
mov
inc
mov
pop
add
jle
jl
clc
or
xchg
mov
mov
or
push
js
or
mov
mov
lahf
sti
out
or
mov
mov
inc
jp
scas
inc
out
jbe
popa
shl
mov
jl
push
adc
xor
xchg
movsb
xchg
mov
inc
movsl
shlb
out
cmp
cmp
push
lcall
cmp
std
inc
stos
add
mov
push
gs
cmp
jmp
call
add
pop
jbe
aas
addr16
adc
mov
cmpsl
popa
insl
xchg
jmp
in
mov
scas
in
mov
stc
stc
jae
jge
lods
pop
daa
dec
pop
fsubl
push
aaa
vpunpckldq
inc
mov
aaa
ror
cli
in
das
jmp
insl
jb
mov
setno
addr16
stos
insb
sar
test
xor
cltd
or
adcb
xor
inc
and
sbb
cmp
adc
fcomps
pop
jg
pop
ja
cmpsb
dec
cmp
push
inc
mov
pop
das
lods
jbe
jo
mov
add
cmpsl
cmpsl
inc
or
inc
ss
dec
movsb
fcmovnb
lods
mov
xor
in
idivb
in
out
adc
mov
add
je
imul
add
dec
mov
push
inc
testb
rolb
pusha
inc
or
pop
or
popf
adc
push
test
inc
in
ret
push
bound
out
cmp
or
mov
mov
and
adcb
movsl
dec
adc
jae
mov
fdivl
movsb
in
pop
cmp
mov
nop
and
mov
xchg
xchg
sahf
pushf
sub
jg
in
sub
xchg
cmc
mov
push
inc
push
jb
bound
and
xor
cmpl
test
sub
sbb
dec
outsl
mov
fiaddl
out
xorb
stos
fstpt
sarl
addr16
pop
out
aad
cmpsl
jne
xor
pop
insb
fildll
lea
adc
mov
lahf
sub
rorb
dec
xor
and
inc
jmp
enter
stos
cmp
sub
cmpsl
sub
push
repnz
aas
jo
aam
out
in
neg
cmpb
adc
adc
test
int
std
movsb
loop
sbb
popf
in
adc
shl
cmpl
in
ret
insl
fidivs
push
jae
idivl
data16
xchg
adc
or
pop
xor
pop
push
std
mov
ret
or
cld
jo
aam
shrb
or
and
or
rolb
or
add
lret
and
ja
addr16
dec
pushf
or
clc
or
int
testb
lock
es
xchg
cmp
jge
push
mov
out
fsub
pusha
test
lods
dec
cmpsl
cmp
lds
in
outsb
aaa
insl
inc
pop
repz
dec
xlat
pusha
stos
inc
or
or
xchg
sarb
sarl
mov
lret
mov
arpl
sub
adc
mov
dec
jmp
mov
scas
lods
push
call
and
and
sahf
or
lret
and
or
or
push
js
mov
mulb
cmp
notb
in
jmp
mull
and
adc
lahf
movsb
mov
xor
mov
aaa
sbb
xchg
shlb
insb
dec
fxch
adc
sub
jp
pop
mov
cld
scas
arpl
adc
js
or
aas
enter
or
and
scas
pop
push
rcll
in
in
push
icebp
in
sbb
mov
dec
inc
xchg
push
xlat
imul
lret
cmc
loope
pop
pop
cmpsb
clc
sbb
aas
fldl2e
mov
mov
or
cmpsb
inc
aam
js
mov
inc
add
les
push
dec
lcall
jbe
and
pop
arpl
lods
fidivrl
enter
cmp
push
out
sbb
dec
sub
mov
std
mov
jne
es
outsl
imul
push
push
les
out
stos
loop
adc
xor
push
lock
or
lods
and
inc
add
popl
lods
pusha
fistps
imul
std
xor
ljmp
out
and
rolb
jmp
mov
mov
adc
stos
idivb
xorb
test
and
les
adc
xchg
gs
aas
inc
xor
movsb
arpl
sbb
adcl
mov
or
sbbb
mov
sahf
stos
ja
and
fsubrs
fmuls
fdivs
or
pop
aad
aam
and
out
inc
je
push
aad
jl
data16
xchg
cmc
dec
cmp
sbb
jbe
pushl
xchg
sysenter
test
cmp
and
sti
enter
xor
insl
inc
dec
sub
inc
insb
loop
mov
and
pop
mov
jb
push
mov
cmp
repnz
dec
add
jnp
jecxz
dec
dec
cmpsb
dec
inc
loopne
pusha
out
adc
push
in
mov
stos
dec
lret
lret
push
bound
cmp
in
aam
icebp
dec
or
stc
int
js
sbb
leave
xor
leave
arpl
sbb
push
xchg
scas
or
les
add
xchg
xchg
or
fcoms
leave
movsl
mov
popf
pop
or
mov
fimuls
jge
sbb
dec
lcall
push
dec
jbe
cmpsl
xchg
jb
mov
shll
fadds
or
sbb
xchg
filds
test
out
aas
int
xlat
popa
inc
xchg
adc
pop
mov
push
sbb
aam
js
xchg
cltd
cmp
lcall
cs
stos
dec
dec
add
imul
mov
test
into
add
cmp
mov
inc
jp
insl
hlt
lahf
movsb
dec
mov
jle
sti
das
jbe
xor
mov
inc
aaa
jne
lods
js
out
pop
cmp
push
sub
xchg
hlt
mov
pop
and
sbb
mov
or
pop
rorl
lea
in
xor
mov
mul
gs
cmp
gs
lods
pusha
adc
add
in
add
fmul
push
xlat
aad
jp
jg
add
xor
scas
add
ret
je
ret
lret
cmpsl
test
cs
push
sbb
cltd
insl
sbb
rol
cs
mov
adc
add
or
sub
sbb
xchg
add
mov
pushf
xor
dec
in
jno
imul
loope
cmpb
add
repnz
adc
in
mov
ds
pop
pop
xchg
les
cld
sbb
mov
scas
xchg
lret
clc
mov
fisubrl
push
in
push
mov
negb
dec
iret
pushf
insl
xchg
inc
sbb
dec
in
and
push
mov
idiv
les
int
dec
imul
insb
cli
leave
jbe
fldenv
test
xchg
loopne
rcl
notb
mov
inc
fcom
dec
mov
push
pop
outsl
cltd
sbb
inc
mov
jp
add
stos
xchg
mov
int
cmp
adc
add
test
jl
or
mov
scas
push
test
dec
xchg
in
mov
xor
xchg
shrb
out
pop
dec
cs
hlt
mov
lods
lods
pop
je
imul
iret
jecxz
push
into
test
jnp
nop
add
jne
mov
movsl
or
push
iret
push
jge
mov
adc
add
vandnps
fldt
mov
daa
pushf
inc
jecxz
les
mov
xchg
ljmp
and
dec
add
inc
push
je
and
test
pop
adc
shll
ja
push
filds
xchg
cmpsl
mov
sub
sti
mov
sti
push
jns
sbb
in
clc
cmp
pop
pop
int3
push
lods
jno
test
ror
in
push
jno
ret
test
adc
sbb
xchg
aas
mov
cli
adc
out
sub
nop
mov
pop
cld
lea
mov
inc
push
cmpl
std
cs
fnstenv
sbb
imul
ja
mov
push
inc
je
add
push
jb
sub
and
pop
adc
sbb
dec
out
jge
dec
orl
jl
pop
negl
mov
repnz
jo
jmp
adc
and
sub
sbb
and
cs
test
or
and
shrb
sub
sbb
push
and
out
adc
pop
subl
sahf
je
jns
xlat
push
pushl
inc
xchg
mov
ret
or
xlat
jo
scas
aaa
adcb
add
icebp
sbb
mov
fwait
and
out
pop
aas
add
mov
jns
jae
pushf
xor
cmpsb
sub
and
jne
mov
add
insb
je
xchg
lock
xchg
xchg
lea
div
or
mov
hlt
movsb
adc
orl
push
out
loop
leave
loopne
adc
stos
mov
push
in
jno
or
loop
fimull
std
and
ja
sbb
push
jae
inc
inc
lret
xchg
imul
and
cwtl
pop
inc
test
roll
mov
nop
add
daa
aad
xor
cmc
mov
adc
pop
fmull
dec
mov
and
decb
in
xchg
loopne
lods
and
jmp
stc
mov
jl
hlt
ret
xlat
cmpb
mov
mov
je
or
mov
popf
rcl
lret
stos
aaa
inc
movsl
shll
xchg
mov
sub
sti
shlb
and
data16
cli
ja
test
aad
adc
out
movsl
mov
nop
xor
cli
cmc
jnp
ss
bound
pop
mov
push
mov
das
push
scas
mov
std
out
lcall
fs
aad
out
dec
lret
cmc
jg
imul
or
mov
sub
sahf
and
dec
icebp
out
mov
or
rorl
mov
fsubrl
or
add
sub
enter
pushl
in
sarl
sbb
xor
mov
jmp
std
xchg
hlt
sub
inc
lahf
and
mov
pop
jo
loop
jl
rcll
or
inc
xchg
push
pop
and
dec
cmp
shlb
jmp
xchg
sbb
push
sub
dec
xchg
inc
adc
adc
sbb
sbb
add
mov
ja
cld
mov
mov
addr16
mov
sub
sbb
bnd
ret
je
into
in
inc
push
pop
push
sub
or
mov
fdivrs
cwtl
add
pop
int3
rorl
clc
pop
test
mov
mov
fstpl
in
mov
pop
out
adc
fbstp
idivb
stc
pop
push
add
and
or
hlt
les
shl
stc
and
cld
pop
mov
push
push
pop
lock
add
aas
enter
call
ror
lret
fcompl
push
jge
push
mov
out
jae
jo
mov
xor
and
ret
jge
or
pusha
sahf
mov
mov
fs
loop
out
sub
cmp
idivb
popl
test
sub
fldcw
shll
push
sbb
out
mov
xor
inc
addl
sbb
jnp
cmpl
in
cld
pop
nop
repz
stos
add
push
jae
push
xchg
outsb
cli
sbbl
out
jle
enter
inc
aam
das
loope
jno
add
push
adc
push
push
xchg
mov
jge
icebp
inc
ret
imul
cmp
jmp
subb
and
cmp
mov
pop
mov
pushf
scas
xor
mov
lds
std
sub
aam
add
leave
daa
jb
xchg
jnp
ss
push
mov
test
and
out
mov
xchg
inc
es
jb
lods
stos
push
sbb
jg
xor
cmp
mov
int3
pop
insb
lea
cwtl
fmull
stos
dec
dec
and
mov
mov
int3
clc
pusha
call
rorb
pop
insb
ja
lea
sbb
cmp
mov
loope
dec
shlb
dec
sbb
add
jp
inc
mov
pop
pop
aaa
dec
fistpl
rcr
into
push
mov
and
or
aam
movsb
rorl
pop
iret
mov
pop
mov
loope
and
sub
sbb
fisttpl
mov
scas
add
dec
pop
adc
lret
pop
enter
stos
pop
ret
dec
sub
push
mov
sub
jle
mov
clc
pushf
mov
ds
adc
mov
xor
insb
jne
push
mov
adc
insb
cmp
fnsave
nop
pusha
data16
arpl
xchg
or
lds
fldcw
lods
leave
mov
mov
inc
ret
repnz
jmp
xchg
aad
xor
sub
outsb
pop
loopne
pop
out
cli
mov
decl
leave
add
and
sub
or
dec
push
lret
test
xchg
ss
push
fwait
push
ljmp
sahf
int3
in
ds
add
movsl
and
hlt
push
jno
mov
insb
test
add
sbb
std
mov
pop
aam
js
mov
mov
cmpsl
or
rolb
push
fmull
add
leave
ret
sub
cmpsl
sbb
aas
jne
inc
sbb
mov
add
inc
adc
das
stos
mov
lods
dec
dec
jmp
pop
sbb
sbb
push
fsubl
iret
xor
rcrl
mov
inc
in
cmpsl
lahf
mov
data16
clc
mov
addr16
test
sahf
add
jns
je
scas
dec
mov
aam
xchg
cld
mov
pop
pop
dec
incl
lea
lds
and
xchg
iret
jno
sti
xor
and
mov
mov
testb
or
bound
data16
into
fdivrl
orl
or
dec
bound
loope
dec
rcrl
mov
and
cmp
test
outsb
mov
or
jmp
int
mov
xor
inc
movsb
cmp
adc
test
mov
mov
jp
test
dec
shrb
in
fcompl
mov
sub
xchg
sarb
pop
dec
les
inc
shl
or
lods
insb
jb
xchg
push
pop
xchg
dec
popf
mov
sbb
scas
repz
inc
ja
push
mov
cmpsl
mov
int
push
jmp
pop
rclb
clc
aas
rorl
adc
mov
outsl
popf
or
xor
fs
jbe
das
mov
dec
es
inc
mov
subb
mov
pushl
xlat
pop
nop
sub
lret
xor
cmp
jnp
jne
pop
in
adc
add
cmc
sub
fidivl
push
and
jb
add
sbb
enter
outsl
in
cmpsb
movsb
scas
loop
pop
idiv
nop
stos
and
das
jle
jbe
rcll
adc
sti
cmp
int
xor
dec
cmpsb
and
stos
inc
dec
loop
std
dec
adc
aaa
movsb
jge
enter
pop
jae
and
pop
decl
loopne
pusha
xor
xchg
adc
jle
adc
or
test
sub
lea
lret
cmpsb
clc
mov
call
into
lret
add
mov
sbb
imul
mov
out
xchg
add
lea
mov
pusha
fs
inc
sub
les
adc
and
sub
xchg
jp
mov
movsl
xchg
mov
mov
xor
pop
xlat
adc
divb
hlt
add
fldt
add
mov
fmull
sbb
add
jbe
les
lock
insb
je
gs
lea
add
xor
out
sbb
mov
or
mov
pop
ficoml
fisubrs
mov
pushf
into
shll
mov
xchg
cmp
call
inc
out
decb
xor
dec
fnsave
fs
mov
sbb
lea
jae
lret
and
notb
mov
mov
inc
pop
cmpsl
mov
call
xchg
add
int
ljmp
mov
jmp
fs
dec
jg
addr16
sarl
push
or
cmc
test
andl
mov
leave
inc
sbb
andl
test
mov
adc
push
xor
popf
sub
orb
cmpsb
adc
std
jo
push
cmpb
inc
sub
shrb
or
cmp
mov
jp
aam
repnz
iret
hlt
movsb
mov
push
and
jmp
fistpl
call
cmp
icebp
add
jge
inc
in
xchg
and
sub
lea
mov
test
lea
jge,pn
mov
out
dec
leave
mov
insl
cs
dec
scas
lods
test
mov
popa
icebp
mov
ss
push
adc
movsb
out
out
dec
cmp
sub
or
mov
loopne
out
or
es
addl
add
movsl
and
mov
sub
xor
in
ficompl
push
jecxz
mov
fsubp
dec
xor
pop
or
xor
jns
fwait
mov
xchg
sti
jne
mov
sub
or
out
xchg
ja
das
jmp
cltd
xchg
loope
adc
mov
sti
bound
and
je
gs
mov
out
push
aad
jne
push
mov
pop
dec
sti
pop
std
ss
adc
and
xchg
lods
pop
add
movsl
clc
stc
add
xchg
shll
jae
outsb
nop
mov
dec
icebp
jnp
inc
std
inc
dec
xor
push
xchg
adcl
pop
jb
jge
mov
imul
lahf
iret
ss
iret
arpl
add
xor
xor
xchg
enter
shlb
xchg
arpl
mov
lods
lahf
mov
test
mov
je
mov
or
jb
sbb
sbb
jp
xchg
scas
mov
cmp
fdivrs
xlat
hlt
or
je
mov
sahf
shll
mov
popf
push
nop
mov
and
mov
or
sub
jmp
mov
sub
jp
loop
stos
sbb
jge
nop
aas
mov
cwtl
push
dec
sbb
xor
xor
xor
aam
enter
inc
fadds
dec
notb
pushf
sub
int
or
lret
dec
loope
imul
out
call
dec
js
jb
jp
andl
movsl
adc
int
fwait
movsb
cs
popa
sbbl
lea
pop
cmpsb
fbstp
adc
pop
add
scas
or
sti
roll
dec
pop
inc
jg
ja
pop
pop
icebp
sub
sbb
push
repnz
adc
scas
cmpsl
imul
mov
mov
idivb
add
xchg
std
cs
pop
add
sbb
ds
xor
scas
mov
mov
lods
rorl
jle
cltd
jl
inc
jle
xchg
adc
icebp
aaa
cmc
jns
imul
lds
test
sub
outsb
jo
movsl
push
test
cmp
pop
sbb
leave
loope
mov
icebp
sbb
pop
loope,pn
sbb
add
adcb
dec
data16
jp
dec
stc
loop
lods
int
insb
inc
inc
shl
add
aam
lret
mov
jg
jg
rcr
rcll
pop
add
in
cmp
push
push
sub
inc
outsl
sub
jb
jnp
nop
jecxz
dec
pop
lcall
in
cli
movsb
pop
jb
fsub
testl
pop
cmpsb
lock
lcall
ret
sub
icebp
mov
xor
add
mulb
gs
pop
xor
add
rclb
cld
jecxz
xor
jge
xchg
sti
jno
adc
cmc
push
fsubs
ret
sub
addr16
inc
popf
adc
and
ss
or
jle,pn
loope
sahf
inc
xchg
or
pop
jne
into
pop
add
mov
jne
and
sub
or
js
movsl
and
loopne
lock
aam
test
jl
mov
mov
mov
and
inc
sbb
sub
pop
xchg
lock
xchg
out
xor
outsb
xchg
xchg
fwait
insb
cmp
insb
sub
dec
mov
mov
orl
fstpl
cmp
rcrl
sbb
loope
lcall
inc
mov
mov
push
sbbb
mov
sub
adc
gs
and
test
jle
mov
push
leave
in
dec
xchg
add
add
sti
mov
pop
cli
iret
add
out
or
testl
add
aad
push
scas
add
insl
movl
ss
xor
mov
pop
mov
xchg
cmp
out
pop
rcrb
iret
xor
pop
mov
insb
adc
sub
jb
std
popf
and
mov
in
inc
in
mov
dec
fnstsw
and
sub
jmp
adc
pop
and
push
lahf
shrb
out
pop
mov
lds
stos
mov
mov
call
mov
frndint
mov
ljmp
jecxz
subb
test
and
es
fwait
je
das
mov
and
add
sbb
mov
xor
fistps
in
inc
inc
mov
cmp
daa
cmpsl
and
ja
fs
fs
jno
xchg
pushf
in
negl
jp
mov
adc
scas
cmpsb
sahf
outsl
cltd
repnz
dec
idivb
push
ss
imul
prefetchw
pop
cmp
lods
int3
cli
pop
cmp
ja
imul
jmp
mov
sbb
xor
xchg
pop
popa
sub
dec
pop
mov
daa
mull
push
xchg
dec
and
push
js
push
and
lea
jb
das
xchg
idivl
int
inc
test
scas
adc
add
xchg
xchg
mov
sub
mov
adc
int
mov
int3
jmp
dec
pop
sub
iret
rolb
inc
mov
dec
lret
psllq
sbbl
lret
mov
nop
jno
pop
lret
sbb
and
xor
cli
adc
sbbb
in
insb
mov
hlt
rcl
jb
shrb
add
xor
jnp
push
xchg
mov
js
scas
jle
push
hlt
xchg
push
outsl
cmp
lods
pushf
das
movsb
hlt
xchg
cmp
daa
mov
adc
rcll
lock
dec
xchg
ficoms
add
or
insb
mov
mov
sub
dec
or
pop
pushf
jb
or
movsl
imul
rol
negb
loope
sub
or
mov
lods
sub
and
ficompl
pop
pminub
mull
dec
rcrb
jb
js
dec
push
inc
mov
in
mov
lahf
or
and
aaa
xchg
ja
mov
loope
loop
in
mov
cmp
nop
stos
mov
jbe
inc
cmp
pop
sub
sahf
daa
hlt
sub
mov
add
mov
jle
jle
test
push
or
scas
sub
dec
insb
pop
sub
lret
in
jle
mov
je
fxch
xchg
dec
inc
movsl
mov
cmc
xchg
fs
loope
fcom
in
pusha
and
aaa
or
adc
sbb
mov
xchg
xor
or
xor
inc
lret
movsl
jne
imul
rcl
jbe
sub
adc
mov
outsb
fcomip
pop
push
sahf
pop
andl
loope
push
aad
sahf
adcb
loope
adc
insb
rcll
incb
and
lret
mov
popf
testl
mov
ds
out
icebp
imul
pop
mov
sbb
xor
rcrb
mov
cli
ftst
stc
mov
nop
or
mov
iret
sub
dec
sahf
loope
loopne
xchg
mov
add
sti
inc
scas
test
aas
lods
ficomps
add
lds
push
push
push
inc
or
fidivs
lcall
inc
movsl
and
insl
js
jg
push
mov
xorb
subl
lea
dec
add
xor
out
push
cmp
jmp
imul
adcb
lea
lret
mov
dec
cmpsl
clc
sub
nop
pop
in
pop
push
cld
sbb
je
cmp
fwait
mov
push
fdivs
mov
mov
je
mov
arpl
rcrb
mov
std
mov
sub
mov
pop
inc
daa
xchg
icebp
in
cmp
cltd
mov
push
pop
xor
adc
dec
or
into
hlt
xchg
push
in
fsubp
fists
xor
jne
pop
and
push
mov
shrb
cmpsl
mov
iret
movsl
nop
std
or
dec
mov
dec
jge
leave
xchg
dec
xlat
mov
jne
leave
or
int
cltd
push
xor
adc
insb
cmc
roll
mov
dec
and
enter
xchg
dec
push
mov
pop
xchg
mov
sub
loopne
xlat
out
imul
outsb
mov
add
adc
lea
jecxz
mov
aam
stos
stc
rorl
fwait
mov
jp
jmp
add
shr
into
arpl
mov
adc
sbb
mov
cmp
repz
mov
jno
pop
inc
pop
sbb
dec
lret
cld
sub
lcall
rclb
sub
sub
shll
fwait
jno
mov
imul
sub
cld
movaps
test
ds
jmp
idivl
pop
pop
ficoml
movsb
push
jne
xor
stos
or
leave
lods
or
leave
push
push
xchg
mov
ljmp
jns
pop
inc
stos
push
inc
shlb
mov
jb
push
cmp
cli
dec
push
push
outsb
and
dec
add
or
insl
push
inc
call
insb
enter
sbb
imul
cltd
push
add
cmp
repnz
cmpsb
mov
popf
sub
and
jns
fs
pop
jne
jae
cld
cmp
lcall
mov
aas
mov
leave
call
dec
add
xchg
push
adc
and
xchg
xchg
fs
repz
mov
test
dec
es
mov
enter
mov
sti
inc
rorb
sti
jnp
scas
sub
dec
movsl
inc
dec
xchg
movsb
into
or
clc
mov
inc
pop
mov
clc
push
adc
outsl
mov
dec
aaa
loopne
adc
int3
jl
arpl
test
and
adc
inc
mov
sub
sub
xor
dec
mov
fwait
test
sbb
mov
gs
sahf
les
loope
les
fnstsw
xor
and
fiadds
sbb
imul
push
add
mov
or
aaa
push
mov
cmp
dec
adc
std
outsl
lods
aas
jmp
cmpsl
aad
mov
test
in
mov
inc
enter
jo
div
or
sub
mov
xchg
xchg
adc
mov
jo
pop
dec
out
mov
sarl
in
or
cli
in
mov
mov
subb
cltd
pop
push
add
or
fnstsw
fstps
pop
cltd
cltd
cmp
jbe
sti
ret
cmc
jo
daa
inc
idiv
in
rorb
mov
jge
and
movsl
jae
and
rol
test
test
adc
inc
les
xchg
lret
xor
data16
mov
mov
push
fldenv
cmc
leave
arpl
sub
sbb
cmc
stc
lods
arpl
outsl
pop
mov
jp
xchg
outsl
dec
xchg
mov
call
cmp
pop
sub
lcall
xlat
xor
jo
imul
add
outsb
jno
jae
bswap
inc
popa
pop
lea
xchg
mov
std
stos
fwait
stos
je
mov
cmpsb
stc
stc
mov
iret
test
je
dec
jp
push
push
mov
jg
add
lcall
cld
jno
jne
mov
clc
add
hlt
lret
mov
push
adc
push
repnz
iret
je
jge
add
jmp
cwtl
xor
xchg
out
add
addr16
test
arpl
sbb
lret
inc
mov
cmp
jl
pop
adc
cmp
sbb
lods
andb
in
sbb
inc
std
xlat
sub
mov
and
inc
or
xor
shl
pop
out
xlat
sbb
xor
mov
xchg
popf
or
popa
insl
pop
movb
out
jo
sahf
lret
dec
arpl
out
fs
or
test
mov
dec
or
repnz
inc
xor
lods
pop
and
xor
in
dec
push
sbb
lcall
enter
mov
push
and
adc
jnp
insl
xor
je
xlat
out
lods
daa
sti
es
inc
pop
or
cmp
into
xor
dec
insb
pop
sub
pop
or
pop
insb
inc
divb
xchg
call
and
dec
inc
xchg
mov
pusha
hlt
push
dec
cmpsl
push
stc
cmp
mov
or
inc
cld
leave
aas
and
mov
call
rorl
jp
fs
push
sbb
dec
and
aad
jmp
sbb
sbb
scas
jno
inc
and
hlt
adc
or
jae
sti
add
enter
pushf
pop
mov
cmpl
imulb
pop
dec
mov
std
pop
repnz
addb
xlat
out
mov
idivl
or
je
lret
push
stos
fwait
adc
pusha
sbb
les
pop
cmp
rol
inc
inc
shrl
pop
xor
jno
addr16
push
xchg
mov
lods
adc
imul
sub
pop
and
rorb
and
push
in
adc
popa
adc
repz
mov
mov
adc
sbb
sub
in
sub
push
cmp
xchg
insl
mov
cli
xchg
xchg
sti
mov
xor
lods
push
loopne
int
jge
int3
pop
inc
push
dec
pop
stos
shll
icebp
int3
mov
mov
xor
movsl
js
fsts
xlat
jge
mov
stc
sbb
push
aas
into
or
daa
or
or
sbb
cmp
adc
cs
mov
mov
pop
sbb
loop
mov
xor
cmp
sbb
sbb
sub
scas
int3
mov
mov
xchg
pop
xchg
mov
lret
adc
sub
in
adc
mov
mov
jmp
xor
mov
xchg
int3
adc
dec
sbb
aam
loop
mov
jge
loopne
imulb
sbb
sbb
sbb
movsb
into
xor
add
lret
cmp
mov
cmp
push
pop
sbb
jo
out
in
sbb
pusha
dec
cltd
clc
sbb
dec
pop
pusha
sub
pop
or
gs
push
les
aaa
mov
daa
sbbl
or
shr
insl
into
jo
lds
mov
les
sbb
pop
aad
dec
mov
bound
fwait
xchg
scas
repnz
and
cld
jmp
or
pop
mov
dec
shrl
or
or
in
int3
or
sarb
fnstcw
mov
lods
mov
ds
pushf
mov
mov
mov
xchg
ret
add
jnp
les
mov
sbb
test
xchg
fistps
divl
rorl
jg
adc
push
rcl
jo
xor
fsubs
sbb
xor
shlb
add
push
fs
mov
dec
lret
iret
out
cmp
pushf
ret
jg
jno
xchg
out
test
orl
pop
mov
add
scas
push
mov
and
rcr
push
mov
ljmp
std
cs
jmp
dec
cmp
or
and
xchg
dec
test
sbb
xchg
es
add
call
dec
test
push
inc
das
pop
mov
icebp
cs
out
dec
imul
cmc
or
addr16
in
dec
mov
jne
pop
or
sub
xchg
insb
daa
cmpsb
pop
rorl
jecxz
cli
sti
lods
fstps
push
xchg
adc
aaa
fadd
xchg
scas
xchg
cmp
idivl
cli
mov
mov
cmpsb
jnp
cmp
sub
clc
and
dec
aad
aaa
cmp
lods
adc
ret
xlat
ror
cmpsb
mov
adc
out
sbb
mov
jle
aam
test
push
xor
dec
mov
jmp
lods
int
sbb
dec
testb
pop
xor
push
movsb
mov
mov
jo
cmpsb
test
mov
bound
and
inc
into
shlb
jnp
add
orb
push
pop
rorl
cli
cmp
cwtl
daa
ljmp
mov
push
pop
sbb
or
or
out
pop
pop
fsubs
fists
mov
cmp
mov
push
mov
sbb
sub
xor
mull
mov
vpmacsdd
fmull
xor
add
data16
mov
xlat
stos
movsb
adcl
lret
pop
mov
neg
into
push
pop
jnp
dec
aas
flds
popa
test
mov
sbb
lods
ss
or
loop
mov
xor
das
sub
loopne
pop
dec
dec
icebp
loopne
js
fildl
lcall
jl
and
pop
shll
cmc
or
xchg
mov
aaa
sbb
loopne
add
fwait
out
jecxz
mov
movsb
inc
push
cmp
sbb
ret
dec
fsts
filds
sub
fldcw
and
das
cld
sbb
fsubl
pop
adc
xchg
inc
lods
mov
in
gs
test
dec
subl
testb
out
icebp
inc
jae
popf
jmp
imul
sbb
mov
test
inc
pop
enter
fnstsw
xorb
lea
out
push
lock
aam
faddl
mov
test
push
jo
rcr
xor
pusha
cmc
ds
movsb
xchg
mov
and
sbb
cmp
mov
loopne
leave
push
xchg
dec
aaa
jne
add
lcall
push
fbld
pop
ljmp
pop
inc
mov
push
or
push
jp
das
inc
dec
jno
jg
mov
jbe
lds
in
cs
xlat
mov
fwait
lds
xor
lods
fisubrs
xlat
arpl
dec
mov
int
jmp
jnp
jl
pop
dec
out
push
lds
negl
out
into
nop
add
xchg
cmpb
cli
cmp
cmpsl
xor
sub
cmp
and
in
inc
rcl
movsl
add
lahf
pushf
lods
cmc
pop
push
jo
movsl
push
add
repnz
jo
mov
mov
aaa
add
lret
loopne
push
jp
data16
inc
jns
les
mov
pushf
iret
inc
adc
push
or
jmp
fstps
mov
push
pop
cs
pop
in
cs
jg
inc
int
into
lcall
int3
cmpsb
adcl
movsl
jb
mov
adc
sub
pop
pop
lods
nop
nop
jmp
jecxz
out
xor
cmp
or
sub
and
dec
add
mov
cli
mov
popf
jp
sub
in
mov
daa
rolb
shrb
cmp
out
out
fcompl
jae
loop
nop
cmp
xor
pusha
jge
popf
sbb
push
mov
and
jno
jle
mov
add
cmp
pop
push
push
call
fbstp
shlb
xor
cli
cmpsl
movsb
mov
mov
mov
mov
or
movsb
xchg
idiv
insl
popf
lret
add
out
dec
fcmovnb
arpl
mov
lock
jmp
loopne
imull
push
pop
cld
lcall
cltd
lea
xlat
xchg
sti
push
lret
sbb
lods
pop
test
push
popw
push
test
das
leave
push
js
xchg
mov
or
aam
xchg
mov
pop
mov
push
push
mov
stos
sub
cli
jg
lock
ljmp
aas
xchg
xlat
or
and
stos
std
add
adc
jbe
shlb
push
jb
fimull
hlt
sub
stc
sub
inc
jl
sub
inc
inc
mov
and
test
xlat
inc
sbb
and
mov
sahf
xor
adc
repz
cmp
sub
inc
inc
incl
mov
xchg
jg
rcll
jae
inc
push
mov
cmp
inc
dec
mov
and
sub
add
and
daa
xchg
push
add
xchg
clc
push
mov
cmc
mov
pop
test
scas
add
daa
xorl
inc
xor
mov
stos
iret
cli
fwait
in
andb
loope
hlt
cmp
mov
out
cmp
mov
cmpsb
in
sbb
stc
push
loop
sarl
xchg
fistpl
pop
dec
dec
adc
or
or
sti
stc
icebp
dec
xchg
das
ja
push
cli
enter
rcrb
add
inc
mov
ja
adc
fs
arpl
xlat
hlt
cmp
mov
pop
out
enter
xchg
insb
ljmp
insb
arpl
sbb
add
jns
addb
and
in
mov
sti
adc
movb
lods
shll
jmp
adc
mov
addr16
mov
insb
dec
cmp
jmp
js
loope
scas
aas
push
push
cmpsl
int3
ljmp
jae
bsr
outsl
xor
mov
and
push
fs
pop
es
arpl
fimuls
pop
add
scas
and
mov
test
mov
mov
mov
push
dec
push
xchg
js
ret
stc
lods
comiss
jle
mov
xor
idiv
ss
pop
push
pushf
adc
jo
in
fisubl
inc
fnstsw
mov
int
sbb
fsubs
addb
mov
call
call
leave
shl
sbb
iret
xchg
lcall
aaa
add
stos
mov
and
sahf
inc
test
pushf
sub
push
xlat
fsubrl
adc
dec
xchg
and
jbe
aaa
fistpl
jmp
mov
push
or
pusha
jne
sbb
inc
pop
ljmp
cmpsl
shr
loop
movsl
inc
mov
mov
and
dec
and
rorl
jb
sbb
jl
sbb
adc
jg
jmp
mov
push
orl
mov
or
pop
add
dec
pop
mov
sahf
mov
mov
test
xchg
leave
add
mov
clc
inc
repnz
flds
pop
mov
scas
or
or
pop
sub
mov
push
stc
int3
pop
lods
or
and
mov
jecxz
sub
int3
dec
cmp
or
mov
stos
or
cmp
mov
and
cmp
inc
int
aaa
fildll
fwait
aad
cmp
pop
js
adc
imull
dec
sti
dec
fsubl
pop
pop
xchg
std
push
in
rorl
jne
or
mov
mov
jb
mov
cmp
into
clc
es
push
jg
adc
inc
xchg
test
sub
mov
push
and
outsb
push
cli
xchg
xchg
cmpsl
arpl
roll
xor
pop
xchg
or
mov
loopne
in
mov
int
fmul
loopne
data16
xlat
pop
jnp
stos
xchg
ljmp
mov
pop
push
adc
xchg
imul
cmp
push
xor
fs
popa
inc
mov
loopne
fistpl
and
cmpsl
fdivrs
push
xchg
shr
or
mov
jo
push
fldl
adc
push
lock
and
dec
pop
movsl
in
cmp
in
and
mov
inc
adc
in
mov
popw
sbb
enter
stos
icebp
fstpt
push
sub
pop
jge
and
aas
test
loope
adc
ror
test
lret
xor
daa
sub
sbb
movsl
sti
pop
in
addb
mov
aad
out
mov
and
inc
js
mov
pusha
into
mov
lock
jmp
jle
mov
dec
aas
inc
mov
xchg
pop
ljmp
xor
out
or
adc
or
jne
testb
jge
int
inc
push
cmp
lret
dec
in
pop
adc
stos
shlb
sub
and
push
xchg
out
cli
sub
notb
sti
push
sbb
clc
pop
leave
ja
icebp
push
icebp
adc
push
scas
fidivl
dec
inc
sbb
std
faddl
inc
dec
aas
sbb
push
je
inc
inc
pop
fidivrl
push
mov
inc
jb
add
icebp
sub
cwtl
dec
enter
mov
test
mov
mov
loope
mov
pop
and
in
ljmp
cmc
jb
push
jle
or
adc
mov
cli
aam
js
sar
enter
mov
add
add
push
mov
adc
fsubl
in
imul
pop
in
mov
lahf
roll
pop
inc
aas
iret
mul
mov
mov
or
add
push
cmpsl
js
or
xchg
hlt
cltd
xor
call
mov
stc
xor
mov
loopne
pusha
loopne
sbb
lods
imul
pop
jb
lcall
pop
pop
mov
jge
fs
sbb
and
test
add
sbb
cmp
mov
pop
xorb
imull
ljmp
and
cmp
cmpsl
popa
sti
mov
push
cmp
das
push
pop
inc
int
arpl
and
jg
stos
leave
push
dec
mov
movsl
pushf
sub
lahf
jae
jecxz
cltd
setno
sbb
adc
lods
js
mov
shl
imul
outsb
push
scas
jns
movsl
and
and
jb
xorb
shr
xchg
inc
mov
lods
loope
sbb
test
shrb
dec
nop
dec
xlat
fwait
xor
adc
sub
fsubrp
adc
loopne
inc
xor
shll
xor
pop
add
lcall
adc
and
stos
and
adc
adc
int
enter
fldt
lods
jge,pt
jp
pop
add
push
mov
shl
jno
dec
jg
aaa
add
add
xchg
int
orb
sbb
jg
or
sub
add
in
jg
int3
dec
mov
lahf
pop
pop
push
adc
and
and
or
inc
gs
xor
inc
in
push
sbb
cmp
addl
add
mov
inc
ss
inc
fsincos
sbb
adc
loope
inc
movsb
fdivp
decl
dec
sbb
and
popa
push
xorl
pop
sub
jne
mov
or
popa
cltd
cmpsb
xchg
jl
insb
call
sbb
inc
gs
mov
sub
xor
std
insb
es
inc
hlt
and
pop
insb
pop
pop
addl
mov
cli
out
lret
dec
mov
inc
inc
call
adc
add
push
pop
xor
arpl
cmpsl
out
das
stos
cltd
mov
jle
loope
out
jmp
movsb
scas
cmp
add
pop
addb
or
jo
shl
mov
push
fs
fs
cld
in
or
pop
pusha
adc
lods
fcmovnu
inc
ds
and
inc
mov
ds
cwtl
test
bound
and
adc
xor
test
sbb
or
dec
sti
and
push
sbb
mov
adc
popa
cmp
out
int3
dec
and
lea
lea
insl
pop
push
test
ss
movl
fiaddl
scas
push
out
les
xchg
inc
in
loop
fs
ja
daa
cmp
dec
dec
mov
xor
les
test
push
nop
mov
adc
sub
and
adc
cmpsb
fdivs
inc
out
xlat
xchg
mov
jl
mov
ret
pop
jne
jb
mov
xor
push
jle
xor
xchg
mov
arpl
inc
pop
xchg
test
pop
and
push
mov
out
icebp
iret
mov
adc
cmp
mov
lods
adc
idivb
repz
outsl
repz
in
lret
push
call
ret
mov
aad
mov
jns
ss
out
outsb
ret
lock
inc
std
cmpsl
not
out
add
mov
mov
add
push
cltd
cmpsb
mov
jg
rcll
and
fcoms
sbb
adc
lahf
cli
fidivs
in
inc
icebp
and
dec
mov
jne
test
jbe
xor
push
nop
frstor
ret
sbb
sub
insl
xor
or
iret
leave
ret
cmc
rclb
in
and
xor
sbb
sub
jae
mov
leave
sbb
andb
and
mov
repnz
lock
jns
ja
jbe
jno
rcr
jg
mov
inc
sub
push
ss
or
inc
std
fbld
iret
sbb
adc
push
jmp
aaa
pop
mov
test
sub
rcll
pop
repnz
push
xchg
sub
adc
mov
lahf
sub
cltd
inc
arpl
mov
ret
adc
xchg
add
and
xor
cmp
fldl
xor
jb
movsb
push
fs
xchg
std
mov
push
clc
sub
jnp
cmp
fcomi
cltd
push
hlt
data16
xchg
dec
lods
xchg
push
mov
xchg
jge
out
aas
sti
jo
ret
mov
sub
add
ss
insl
movsb
mov
mov
mov
inc
add
fsubl
add
bound
lahf
xchg
inc
fbld
js
cmp
push
ja
scas
xor
or
test
pusha
shll
ljmp
jns
pop
xchg
lods
stc
andb
xchg
out
fstpt
popf
adc
repnz
test
sbb
aaa
hlt
pop
inc
test
and
dec
mov
sbb
jne
cmp
adc
icebp
into
inc
popf
insb
popa
pushf
push
xlat
sbb
xchg
push
repz
sbb
mov
ss
test
sti
loope
addr16
and
push
dec
cmp
stc
je
pop
pop
mov
stc
mov
arpl
push
test
cwtl
ss
insb
jne
add
xchg
pop
push
xor
mov
cwtl
jb
lret
xor
mov
or
mov
xlat
das
dec
div
lret
out
icebp
js
ja
out
cmpsb
add
and
xor
sbb
in
dec
sbb
roll
jnp
lods
gs
and
cs
lahf
push
inc
jnp
jmp
adc
xchg
mov
jb
inc
xor
and
lods
dec
out
jl
jae
mov
or
push
or
adc
inc
sbb
jnp
dec
cmp
jne
jno
test
dec
lds
push
ljmp
ja
jg
ds
mov
lret
call
imul
out
std
out
jo
xor
mov
cltd
daa
lea
aas
jge
lret
fidivrl
mov
rclb
popa
int3
jp
xchg
inc
adc
notl
cmp
les
pop
in
pop
lods
gs
pop
mov
imul
in
pushf
je
dec
push
clc
mov
test
mov
or
into
inc
or
xor
dec
pop
or
movsb
das
jb
aad
sbb
lea
fbstp
dec
test
lcall
scas
sub
jo
push
push
adc
pop
jmp
lahf
fidivs
xchg
lods
add
addr16
add
in
icebp
mov
inc
cwtl
fnstenv
adc
mov
test
aas
cwtl
xor
loopne
fwait
out
outsb
js
scas
daa
xchg
nop
mov
jnp
notl
mov
mov
mov
test
dec
clc
xlat
stc
aas
cmp
fidivrs
out
pop
in
sub
stc
out
pop
cmp
jae
mov
or
mov
inc
mov
out
jge
gs
and
js
fnsave
lods
cmp
mov
jne
mov
insl
out
call
jge
ja
movsb
arpl
cld
xchg
xchg
stc
in
repz
xchg
jl
in
fsubl
test
and
push
add
mov
aaa
daa
mov
mov
xor
das
push
push
mov
pop
imul
fcomip
cli
sub
mov
fmull
out
pop
inc
sbb
push
inc
xchg
sbb
in
sbb
mov
scas
sbb
xchg
dec
cmp
out
sarb
jbe
xor
mov
imul
ret
xlat
mov
xor
rorb
and
ljmp
push
int3
movsb
insl
iret
out
sti
inc
cli
fdivrs
in
dec
stc
shl
pop
add
rorl
leave
jno
sbb
mov
popa
test
rol
scas
pop
jne
sub
shlb
pop
insl
push
jb
repnz
sbb
je
insb
mov
mov
mov
jb
mov
lret
xchg
shlb
int
aas
rcll
in
push
fnsave
es
or
int3
cmp
js
roll
mov
mov
test
xchg
inc
cmpb
bound
cmp
jg
imul
daa
xchg
scas
dec
jp
out
xchg
mov
es
addl
pusha
hlt
pop
sbb
aas
jecxz
js
jg
xor
xor
mov
pop
mov
insl
and
daa
xor
jbe
jl
loopne
orb
mov
rcll
sti
lods
adc
xchg
imul
inc
jae
inc
or
inc
call
adc
lods
push
repz
lret
jl
sbb
inc
sbb
fimull
clts
mull
fdivs
mov
gs
xchg
adc
ret
dec
lahf
add
mov
jecxz
xchg
push
icebp
jb
jb
fsubrl
add
fildll
mov
in
push
cmp
jle
pop
dec
push
jb
and
add
pop
pop
or
inc
mov
lea
mov
mov
popf
cld
andl
jcxz
push
or
adc
ss
dec
add
data16
cmp
pushf
fnstenv
pop
adcl
lahf
pop
sub
addr16
mov
xchg
mov
jne
mov
jl
jp
hlt
push
lods
and
mov
int3
in
ds
test
repnz
sub
fcmovu
xor
inc
add
enter
ret
leave
cmp
mov
mov
sti
popa
mov
out
test
sbb
push
outsb
sti
inc
aaa
xchg
daa
movsb
push
mov
cmc
lahf
repnz
stos
cmp
mov
jmp
sub
sbb
pop
push
and
stos
xor
xlat
mov
add
ds
xchg
push
ret
adc
adc
and
cmp
add
cmp
js
sti
cwtl
and
movsl
aad
imul
push
jle
and
inc
jne
xor
sbb
aaa
sbb
stos
adcb
xor
andl
cmpsl
in
jg
addb
jg
ret
cld
loope
aam
mov
push
sahf
xchg
je
dec
gs
adc
loope
xchg
mov
fisubrs
outsb
jbe
insb
xchg
xchg
inc
es
xorl
outsb
lods
lahf
adc
sti
adc
adcl
push
inc
lods
call
rclb
mov
js
in
pop
jnp
add
gs
push
stc
inc
mov
adc
stos
sti
or
pop
cmpb
and
mov
popa
sub
ja
neg
mov
inc
jne
inc
sub
arpl
sub
mov
pop
iret
out
mov
xor
int3
insl
inc
xor
sub
mull
das
push
cmp
xchg
cmp
arpl
call
sub
out
icebp
repz
cmp
sarl
or
pop
mov
test
fs
xchg
sar
ljmp
jb
movsl
aad
in
pop
mov
mov
or
imulb
js
or
cs
daa
lret
xchg
in
lret
popf
or
push
jmp
inc
js
in
push
outsb
jns
fucomp
dec
shl
lea
sahf
adc
seto
jp
imul
push
add
insl
mov
cs
sahf
test
iret
aas
stc
lahf
in
mov
repnz
test
xchg
pop
xchg
jnp
fdivrp
fs
subb
addr16
je
and
sbb
mov
push
mov
mov
inc
out
out
add
mov
push
pop
mov
inc
jbe
mov
or
dec
or
psubd
scas
push
jg
jnp
insl
addb
or
sahf
jns
pop
fwait
aad
jnp
pusha
lret
fldenv
mov
shl
pop
adc
or
sarb
xchg
add
lcall
sarb
pop
push
sbb
push
xlat
mov
adc
cmp
pop
lret
mov
scas
in
xor
cmp
inc
sub
rorb
bound
incl
cmpb
jae
xor
pop
pop
pusha
cmp
add
lods
and
mov
mov
xchg
pushf
fwait
aad
fnstenv
or
lock
outsb
add
inc
leave
xchg
roll
out
dec
mov
xchg
ds
push
xchg
jmp
push
add
clc
bound
das
mov
push
lods
dec
pop
sub
int3
arpl
outsl
sbb
test
outsb
and
lret
cli
or
test
and
jl
cmp
sub
ret
test
cwtl
xlat
subl
nop
adc
cltd
xchg
ljmp
push
jne
dec
rorb
fidivrl
dec
bound
loop
cmpsb
pop
xadd
and
int3
xchg
xor
dec
add
pop
std
ret
mov
cmp
test
in
lahf
enter
add
fisttps
push
and
pusha
adc
js
mov
adcb
sub
fsubrl
and
sub
movsl
push
jae
mov
adc
jecxz
sub
outsl
enter
mov
imul
stc
ljmp
pushf
xor
xlat
movsb
cmpsl
pop
lock
jle
rcrl
shrb
mov
ds
cli
mov
push
jge
cs
ljmp
ljmp
and
popa
add
cmp
mov
shl
cmp
inc
popf
inc
sub
xchg
imul
sahf
and
adc
pop
jno
stos
mov
das
outsl
mov
outsb
and
mov
fwait
cli
add
and
sbb
mov
in
lock
xchg
push
lods
push
sbb
shlb
pop
xor
popa
or
and
outsl
sub
push
sbb
data16
cli
xor
xchg
mov
lcall
inc
jmp
mov
cmpsb
ficomps
add
mov
xlat
sbb
aas
cmp
cmp
inc
scas
push
add
add
xor
jne
jns
xor
mov
addr16
lret
pop
shll
sub
sbb
ret
aaa
test
xchg
aas
dec
stos
mov
arpl
sbb
in
pop
inc
ja
in
jns
jmp
xchg
jne
mov
xchg
and
ret
out
add
aad
fwait
jb
loop
pushf
mov
dec
int
cld
xor
stos
adc
cli
aam
cmp
fisubrs
rclb
popf
and
es
ret
imul
cwtl
cld
mov
jp
sbbl
aam
push
lahf
sbb
push
nop
pop
jge
pop
xrelease
jnp
bound
inc
lea
aam
mov
test
pushf
sub
cmpsl
data16
and
fs
aaa
jne
sub
lods
lea
sub
daa
in
xchg
pushf
adc
test
mov
dec
rolb
inc
lcall
add
sub
inc
and
xchg
or
push
in
pop
gs
into
xor
loop
stc
xor
lahf
call
cmp
xchg
adc
js
mov
andl
pop
and
ja
repnz
imul
cmpl
mov
mov
jno
cld
daa
or
ret
and
sub
fwait
dec
leave
sahf
xchg
les
and
xor
loop
cmp
mov
xchg
jns
and
add
xlat
or
mov
out
jb
cmpsl
cmpl
loope
mov
jno
dec
je
rolb
and
das
xchg
cmp
cmpsb
dec
jno
pushf
cmc
dec
pusha
add
cmc
inc
ss
cmp
fs
mov
cwtl
xchg
lea
sub
icebp
pop
iret
xlat
push
mov
out
jp
cmpsl
xlat
out
lea
sub
adc
pop
scas
push
ds
pop
add
cwtl
add
loopne
xor
push
loope
fldenv
cmpsl
mov
aam
mov
inc
mov
sub
sub
sbb
xchg
pop
xchg
xchg
div
dec
aad
or
pop
shr
insl
mov
rolb
hlt
lods
sub
dec
and
mov
insl
enter
sub
add
aas
adc
fcompl
ss
lret
lret
jmp
lret
cld
es
mov
xor
int
mov
es
mov
sub
push
xchg
mov
out
popf
inc
push
sub
repnz
add
sbb
xor
shlb
movsb
in
mov
leave
pop
sbb
xchg
repnz
xchg
loope
xchg
xor
dec
and
xchg
aam
cmp
ror
or
dec
mov
adc
lret
jge
enter
andb
imul
aaa
jmp
shrb
popaw
push
and
dec
cli
mov
lret
cltd
mov
stos
cltd
test
out
xchg
sbb
call
mov
jnp
dec
gs
mov
xchg
movsb
cmp
and
xor
push
adc
call
jns
or
mov
inc
inc
inc
xchg
in
cltd
hlt
imul
pop
mov
xchg
xchg
mov
cltd
shll
sarl
inc
mov
lods
imul
mov
xchg
push
outsl
fimull
jmp
pop
jl
xor
pop
and
push
and
stos
cmp
aaa
pop
pop
push
pop
mov
add
cmp
sahf
lods
movsl
jns
out
sub
mov
roll
ja
mov
adc
pop
push
pop
push
pop
shll
mov
in
popa
arpl
cmpsl
sti
shrb
fs
es
adc
cmp
cs
fucomi
or
pop
lods
ficoms
cld
cmp
push
and
in
cmp
jne
mov
push
pushf
inc
push
jae
xchg
and
inc
and
imul
iret
movsb
out
adc
movsl
fiadds
or
push
sarl
pop
rcll
and
lret
pop
xor
mov
cs
mov
sarl
cld
nop
adc
jns
aad
push
out
scas
lcall
imul
subb
cmpsb
negl
dec
es
xchg
push
mov
jecxz
mov
mov
dec
nop
mov
lods
cmp
stos
rolb
stc
ss
push
loop
xor
add
int
cli
movsb
sub
sti
cmpsb
xchg
push
int3
in
add
pop
cmp
adc
sub
push
inc
loopne
fimuls
dec
xor
stc
add
push
sti
mov
bound
pop
xchg
jl
adc
mov
sahf
jb
scas
lret
mov
ror
mov
test
repnz
sub
repnz
sarb
imul
mov
add
mov
lcall
mov
mov
in
into
inc
lods
mov
bnd
std
repz
mull
xchg
xorl
or
repnz
mov
or
xor
mov
jl
pop
cmp
mov
stc
xor
cwtl
push
pop
int
add
pop
mov
inc
inc
mov
xchg
adc
adc
sbb
aad
or
mov
xorb
push
sbb
mov
mov
rcll
xchg
and
gs
cmp
inc
jmp
sub
shlb
mov
test
fcmove
test
cli
mov
outsl
mov
fsubrp
add
cmc
inc
cmpsl
fsubs
adc
mov
mov
jo
jne
test
out
movsb
iret
clc
jl
xchg
lods
out
xchg
pusha
cltd
xchg
jns
ljmp
cli
gs
jno
adc
fs
mov
push
into
loop
add
jno
stos
insb
lcall
in
mov
jne
xchg
jl
loopne
mov
xor
andl
fisubs
cmp
aad
lahf
outsl
adc
xchg
cmp
add
int3
sbb
sti
and
daa
push
stos
pop
inc
dec
mov
rol
lock
fs
jae
jno
xchg
sub
pop
ror
loopne
push
mov
sbb
push
push
orl
lods
jno
clc
ljmp
jno
mov
add
and
push
add
add
sub
test
push
jmp
out
adc
or
cmp
iret
mov
std
mov
leave
dec
adc
cmp
push
in
mov
das
mov
push
inc
cmpl
in
cmc
sub
lods
push
lods
leave
xchg
push
test
push
aam
mov
in
adc
push
outsl
bnd
mov
arpl
out
int3
sub
outsb
gs
mov
enter
lea
jmp
pop
push
cmp
les
pop
jno,pn
adc
ret
cltd
and
mov
dec
scas
xchg
sub
cmpsl
fsubrl
sbb
jecxz
adc
mov
test
add
enter
sub
rcrl
xor
je
ds
sti
sbb
imul
ret
pop
sub
xchg
mov
mov
pop
jno
pop
jge
pop
sbb
add
or
faddl
imul
push
mov
aam
xchg
mov
mov
mov
xchg
cmp
push
into
cld
cmp
push
fnsave
test
es
into
clc
lods
insb
insl
je
add
cmpsl
inc
dec
inc
aaa
cltd
lods
xchg
lods
mov
sub
jo
test
popf
rcll
xchg
mov
enter
jo
ds
xor
out
xchg
xorb
inc
mov
jne
and
adc
imulb
sub
movsb
jge
mov
adc
cmp
add
les
sub
ficomps
xchg
cmpl
data16
mov
pop
ficoml
pop
fdivrs
int3
inc
rclb
sbb
cmp
mov
sti
jbe
popl
mov
mov
push
cmp
loopne
stc
fstp
dec
bound
pop
and
outsl
add
or
andl
push
push
mov
dec
cmpsl
aaa
dec
ja
xchg
push
dec
loope
rcll
add
cld
pop
in
lcall
js
xchg
mov
stc
push
sub
aam
lods
sub
je
cmp
lret
inc
scas
fisubrs
cmp
inc
fidivl
movsb
adc
add
loope
lret
lods
or
mov
sarb
push
fistpll
push
mov
mov
les
mov
pop
rorb
and
and
bound
push
mov
add
jno
push
movsl
test
jge
xchg
clc
test
xor
jnp
push
sti
xchg
repnz
jnp
lret
or
subl
push
mov
dec
and
loop
and
xlat
push
jmp
mov
fcoml
ficomps
or
in
xchg
mov
mov
ljmp
mov
inc
jge
or
push
adc
loopne
es
mov
jl
sbb
fdivs
push
and
dec
xchg
adc
hlt
ds
mov
lcall
shrb
sbb
fidivrl
data16
call
sub
rorl
outsb
aas
adc
mov
es
push
stc
hlt
cmpsl
test
mov
dec
or
jbe
push
rcr
je
sub
and
mov
data16
cld
cmc
dec
sub
mov
lahf
jb
mov
hlt
sbb
shl
test
sti
rclb
jge
outsl
mov
cmc
pop
jg
inc
stc
sahf
xchg
xchg
xchg
cli
mov
push
std
sbb
inc
cli
mov
jae
jnp
push
jg
rorl
test
icebp
pop
add
orl
js
mov
lret
test
test
push
fimull
mov
sub
jbe
xor
cwtl
jge
imul
call
add
adc
fisttps
sarl
pop
cltd
push
cwtl
add
or
lret
int3
xchg
cmpsl
repnz
lock
push
lahf
cmpsb
cmp
push
xchg
dec
and
sbb
pushf
push
cmp
xchg
call
xor
add
push
mov
stos
es
movsb
je
jae
add
xlat
lcall
xor
inc
xchg
add
lods
push
outsl
add
movsb
sbbl
les
adcl
xor
add
sub
fisttpll
fisttps
mov
fnstenv
mov
scas
cltd
xor
mov
ret
loopne
js
xchg
and
jae
add
adc
fcomps
rclb
and
imul
lods
popa
pop
or
pop
pop
mov
sbb
jmp
and
adc
dec
inc
dec
pmaxub
icebp
test
movsb
pop
push
clc
mov
pushf
stc
outsb
ljmp
cmp
pusha
popf
inc
jno
sbb
clc
stc
jl
shlb
rolb
xchg
stos
test
fwait
xchg
in
in
mov
push
or
mov
imul
lods
lea
notb
fcomip
call
movsl
imul
hlt
mov
or
bound
xchg
je
out
cltd
mov
adc
cs
cwtl
enter
outsb
filds
xor
dec
mov
mov
or
mov
pusha
fxch
inc
into
cmc
mov
sub
cmp
sub
sbb
insb
jp
xrelease
fwait
loope
jge
lcall
ljmp
vpaddd
mov
ds
pop
repz
pop
jg
sub
mov
fs
cmp
fildl
push
cmp
mov
dec
cltd
lea
jne
xchg
in
scas
jb
sti
inc
outsb
sahf
arpl
xor
mov
mov
xchg
insl
sbb
add
pop
int
pcmpeqd
mov
incl
popf
sahf
in
mov
ljmp
mov
adc
add
negb
nop
call
mov
imul
ja
sub
mov
ja
pushf
mov
lods
pop
lds
stc
xor
popa
lock
aam
jns
push
push
cwtl
in
xorl
dec
mov
enter
cmpsb
sbb
add
sub
inc
sahf
mov
test
sub
cmp
dec
stc
and
or
inc
imulb
das
xor
jp
adc
fs
adcl
lds
orl
adc
jbe
es
js
xor
jb
adc
inc
and
push
xchg
adc
dec
jl
push
add
js
imul
jg
adc
lret
xchg
lret
js
testb
cwtl
out
movsl
and
add
cld
pop
pop
push
lods
xchg
les
push
and
cmp
testl
insl
mov
mov
mov
dec
pop
xor
aaa
mov
int
cwtl
xchg
sbb
cmp
repnz
je
out
nop
movsl
inc
xchg
xor
jge
cmp
inc
jb
sbb
stc
stos
inc
pop
stc
stos
cmp
and
mov
pop
cmpl
in
mov
imul
xchg
jae
cltd
and
xor
xchg
fs
mov
add
pop
movsl
outsb
or
push
cmp
jle
xor
daa
pop
xchg
sbb
enter
push
mov
jbe
addr16
mov
lods
mov
aad
or
jo
andb
push
sbb
xor
cmp
rorb
sub
adc
rcl
cmc
sub
push
imulb
and
push
push
cli
mov
or
fcoml
test
fcmovb
push
dec
adc
ja
cltd
shr
sbb
jo
rcl
sbb
dec
mov
es
push
mov
cmp
or
cltd
or
out
ret
cmp
enter
add
scas
pop
je
stc
push
roll
xlat
sub
lret
or
inc
repnz
pop
inc
ds
cmc
adc
lcall
mov
jae
jl
cmp
in
cmpsb
mov
jl
lahf
jmp
xchg
rcll
xor
ljmp
cs
rcrb
jbe
xor
movsb
lahf
pusha
scas
into
ja
inc
mov
push
adc
sbb
pop
or
outsl
out
call
inc
push
jbe
clc
mov
pop
sarb
adc
dec
es
or
popa
rorl
or
outsb
or
stos
inc
mulb
fists
jl
push
into
jae
ret
xlat
popa
jmp
mov
jp
aad
in
pop
movsb
cltd
dec
xchg
pop
pop
inc
scas
fmull
pop
mov
push
inc
sub
push
inc
or
adc
pop
push
push
dec
mov
cli
mov
inc
jne
stc
pop
sub
lret
mov
push
in
push
jnp
fdivrs
out
out
les
mov
das
xor
inc
and
rcll
and
inc
cwtl
leave
mov
cmpsb
mov
push
dec
sbb
pop
sbb
xchg
sbb
mov
out
add
adc
test
int
in
pop
fnstcw
iret
adc
fimuls
popf
sarb
ret
and
repnz
add
loope
and
repnz
leave
stos
push
inc
cli
xchg
xor
fwait
fwait
sub
js
mov
mov
shlb
fbld
or
sbb
es
out
jbe
jnp
aaa
xchg
and
hlt
xor
or
mov
in
add
lods
sub
or
jbe
vpunpcklwd
shll
push
hlt
hlt
cmp
mov
stos
loop
mov
pusha
jo
cs
aaa
pop
pop
test
mov
fldenv
mov
jnp
mov
scas
inc
push
in
lret
shll
xor
cld
hlt
jbe
daa
xchg
sub
aad
test
xchg
sbb
jl
js
and
sub
stc
in
push
push
pop
in
fnstsw
js
ss
cmp
jnp
push
sbb
sbb
pop
outsb
sahf
pop
cmp
push
fstps
repz
pop
mov
out
hlt
in
es
pavgw
out
push
xor
jne
data16
outsl
sub
lds
sub
rcrl
pushf
test
mov
imul
xchg
mov
adc
cmp
sti
icebp
jo
sub
decb
adc
mov
lock
out
xor
or
xor
pop
mov
lret
xchg
push
in
out
dec
cmp
das
mov
movsl
xchg
sbb
fldl
mov
mov
dec
dec
cltd
xchg
in
das
in
insb
ficompl
and
or
xor
mov
movsb
test
xchg
sbb
add
sbb
lods
rcl
repnz
and
sbb
popf
ficoml
inc
dec
mov
sbb
stos
adcl
add
popl
adc
inc
int
push
adc
js
sbb
hlt
in
cmp
jbe
not
lret
leave
js
xchg
sub
sbb
and
movsb
push
adc
or
adc
push
lea
aas
xor
push
xchg
or
stc
test
imul
ja
mov
nop
jbe
jmp
cs
sub
bound
outsb
shr
inc
xchg
xchg
bound
mov
inc
jg
jmp
xchg
push
and
xchg
push
mov
icebp
xchg
add
add
cmp
cmp
jnp
cltd
cmc
cmpsb
sub
jno
mov
xchg
cwtl
adc
jmp
pop
and
and
cmp
jae
aas
ret
dec
sti
in
out
add
dec
xchg
notl
xchg
cmp
and
mov
pushf
movsb
xchg
xor
imul
add
mov
fwait
subb
inc
dec
shll
push
iret
and
and
arpl
and
pop
add
in
mov
aam
in
es
insl
scas
sarb
xor
dec
scas
mov
pop
pop
nop
fsubrl
outsb
shlb
adc
popa
sbb
ds
ljmp
stos
fisubl
push
mov
roll
lahf
pusha
xor
test
mov
xchg
mov
aas
ret
push
mov
pop
out
xor
dec
lds
xchg
out
lret
jbe
aad
insl
push
out
inc
sbb
sbb
push
adc
xor
add
jl
aad
les
push
jns
cmp
xchg
dec
mov
push
sub
adc
xor
adc
add
shl
sbb
lods
fldcw
stc
mov
or
aas
aad
jle
ret
xor
fldenv
mov
out
push
mov
jl
cmp
out
cs
jge
repnz
inc
xchg
mov
daa
rolb
rcl
mov
sub
jg,pt
dec
push
lea
outsl
pop
inc
repnz
jns
lea
test
add
pushf
mov
stc
mov
push
mov
sahf
movsl
xchg
imul
sbb
pushf
jo
rcrl
add
xchg
lea
mov
and
inc
lret
mov
mov
mov
das
in
fwait
sbb
insb
es
data16
scas
inc
ss
sbb
lods
outsb
adc
hlt
cmp
xchg
adc
into
cli
push
dec
pop
les
jg
ja
sti
outsb
lods
jne
lea
mov
or
or
pop
sbb
clc
inc
cmc
sub
cltd
xchg
pop
xor
stc
xlat
pop
mov
ja
lock
pop
pop
sbb
xchg
adc
sbb
test
mov
push
mov
inc
test
jno
daa
push
mov
sti
out
jae
add
push
ret
scas
mov
xlat
dec
add
mov
popa
lds
jecxz
dec
sub
adc
push
imul
movsl
pop
adc
loop
mov
test
or
scas
roll
imul
ljmp
cld
adc
xor
xor
mov
pop
mov
jbe
sbb
test
mov
mov
call
xchg
mov
mov
movb
push
addr16
push
fwait
loopne
inc
notb
xchg
fwait
dec
in
test
pusha
dec
mov
add
in
push
scas
mov
into
dec
mov
ja
shl
xchg
xorb
lahf
mov
inc
shl
mov
and
stos
sbb
sti
pop
or
jmp
fwait
add
xlat
xlat
and
sbb
testb
and
inc
mov
jl
mov
push
or
xor
xor
repz
jge
mov
les
pusha
add
sub
inc
mov
dec
sbb
sub
shll
ret
ljmp
adc
inc
cmp
adc
jae
push
popa
mov
pusha
int3
lea
cmpsb
movsb
inc
out
mov
stos
mov
push
mov
loope
or
negl
xor
pop
adc
std
ljmp
pop
shrl
dec
and
pop
push
xlat
rcrb
dec
jne
lret
mov
push
fwait
lea
arpl
dec
inc
subl
cld
pop
jecxz
push
mov
pop
movsb
dec
outsb
out
cld
outsl
aad
sbb
nop
push
mov
pop
std
ja
jl
es
loop
fcomi
lcall
mov
and
sbb
add
addb
dec
in
or
mov
popf
add
ja
repz
dec
jb
cmp
fsubrl
push
lret
pop
pop
adc
push
or
jb
cs
sti
dec
ss
jp
add
fucomip
xor
xchg
popf
js
rorl
lods
and
pop
xchg
push
out
jne
xor
ds
xor
fs
inc
xor
ss
dec
sbb
cli
test
shl
into
repz
pavgb
xchg
sarb
add
imul
popa
push
leave
and
std
sub
cmpsb
push
mov
jp
push
inc
adc
testb
test
dec
repnz
aam
iret
and
daa
and
lods
mov
repnz
in
add
and
push
push
add
sub
sarl
int3
xchg
lods
xchg
cltd
jmp
dec
inc
sbb
ja
mov
stc
adc
sbb
or
xchg
push
lret
xchg
or
and
gs
mov
bound
js
in
add
or
mov
adc
adc
push
cltd
dec
ret
jecxz
and
popf
mov
adc
xchg
fcmovb
inc
ret
and
sbb
xorb
cmp
mov
adcl
xlat
pop
cmp
cmpsb
and
shlb
pop
mov
sbb
sti
sbb
dec
je
loope
jae
or
popf
lret
pushf
xchg
cmpsl
dec
test
push
pop
shl
cmp
pop
add
out
int3
stos
push
sbb
cmp
rcl
fisubrs
mov
sahf
and
jge
roll
pop
push
cmp
repz
or
les
push
adc
xor
pop
test
lods
xchg
iret
inc
stos
pushf
mov
lret
dec
sbb
outsl
inc
enter
dec
cltd
sti
repnz
jae
inc
orl
lods
imulb
repz
decl
rolb
push
adc
mov
fsubs
rclb
ljmp
scas
jo
into
cwtl
inc
fdivr
test
inc
xor
inc
mov
mov
mov
mov
or
pop
in
and
inc
pop
in
dec
xor
dec
ds
cs
push
test
push
pop
or
sub
cli
ja
pop
sub
jge
bound
sbb
nop
aam
push
mov
out
outsl
xchg
push
inc
int3
jp
sub
mov
inc
xorl
pop
movsb
aam
popa
lea
outsl
add
xchg
xor
push
addr16
movsl
gs
mov
mov
leave
gs
inc
push
sub
push
cmp
bound
faddl
push
mov
dec
subb
xor
rcll
xorb
fiaddl
push
dec
lock
mov
xor
nop
out
push
sub
loop
loopne
adc
jge
mov
sbb
pop
or
rcll
pop
pop
sahf
sbb
out
leave
jmp
pop
push
loop
lods
and
push
dec
sbb
stos
mov
jb
cmc
push
sub
inc
call
mov
fmull
adc
or
js
cmp
sub
pop
inc
pop
lret
pop
xlat
add
roll
mov
and
test
hlt
addl
call
xlat
mov
mov
lcall
scas
xchg
popf
ljmp
or
sti
pop
cs
cmp
rolb
lds
enter
and
sub
cmp
dec
loopne
xchg
push
in
mov
pop
jnp
xor
rcll
pop
aad
in
or
and
lods
push
sub
sub
vmaxpd
jp
add
aas
pop
mov
iret
stos
lret
jecxz
jle
cli
xchg
scas
lret
cld
rorl
adc
fimull
in
aas
fsubs
psllq
xlat
out
sub
dec
adc
ljmp
data16
mov
arpl
sarb
pop
mov
jl
es
sbb
sub
sub
sbb
dec
lret
arpl
fmuls
xor
xorl
adc
lret
or
hlt
aam
and
mov
push
jmp
leave
cmp
add
bound
popa
sbb
sub
nop
inc
and
dec
lods
aas
sbb
xchg
sub
push
lret
lock
xlat
out
cmpsb
in
imul
mov
aam
pop
jmp
push
cld
jge
lods
cwtl
lahf
or
add
aaa
mov
push
jae
pushf
std
imul
ret
cmp
andl
xchg
cs
jle
adc
les
or
push
lock
add
loopne
pop
sbbl
xor
inc
xor
test
pop
dec
xchg
xchg
xchg
push
jb
iret
cmp
jp
stos
add
jp
sbb
cs
ret
cmp
push
aas
test
pop
out
mov
push
cmp
mov
mov
insb
std
gs
out
ja
cmp
in
aam
push
and
mov
mov
xchg
cld
mov
cltd
enter
enter
aam
xlat
mov
push
xchg
sub
mov
test
adc
loopne
sarb
adc
sub
adc
mov
pop
test
push
mov
fdivrs
shlb
cmc
xchg
cltd
insl
mov
dec
out
lods
xorb
ficoms
jae
xchg
aad
cmp
xor
sub
inc
in
lock
mov
std
fisubrl
test
lods
fwait
dec
adc
sub
inc
pop
push
inc
xor
mov
cmpsl
mov
fcompl
cwtl
ja
push
daa
imul
imul
xchg
push
and
inc
adc
test
fildl
push
aam
dec
pop
aam
insb
mov
outsl
and
inc
out
xchg
mov
cmc
add
inc
or
inc
cvttps2pi
xchg
out
je
push
je
xchg
inc
nop
lods
push
xor
pop
adcl
inc
and
push
jae
dec
push
lret
add
cmp
mov
rclb
and
fwait
jnp
xor
push
sbb
fld
jnp
dec
lea
pop
aaa
and
aam
jp
rolb
add
inc
xchg
cmp
and
cld
push
in
in
es
popf
cmpsl
pushaw
out
add
push
add
jne
xor
jno
outsb
adc
test
nop
repz
dec
outsb
jno
clc
sub
hlt
inc
rorb
sub
cli
mov
pop
sub
mov
lds
outsb
inc
lret
jns
xor
repz
rclb
xchg
xchg
cmp
add
push
add
inc
jge
jb
stc
or
jne
int3
leave
das
jecxz
pushf
mov
out
lds
sub
cmpsl
mov
push
xchg
shll
or
xor
lock
shrb
and
fisubs
fadds
fdivs
sbb
or
cli
xchg
pusha
cmp
inc
shlb
sub
jo
jle
xchg
fidivl
dec
push
pop
adcb
mov
cmp
ljmp
and
popf
aas
nop
dec
shr
loope
mov
lret
cmpsl
push
sti
fcomps
push
and
std
xchg
sub
stos
hlt
iret
fadds
mov
lret
jb
cld
lahf
popf
push
sub
sbb
dec
push
fisubrs
mov
and
jnp
mov
lock
cmp
in
sub
adc
rcrl
gs
jns
xchg
mov
sbb
xchg
push
out
and
outsl
cmp
pop
pop
cltd
xor
je
scas
addr16
cmpl
jo
xchg
jne
and
mov
dec
sbb
jmp
andw
adc
mov
lea
xchg
into
mov
mov
or
push
aas
push
xchg
emms
fsubr
dec
cld
pop
adc
push
cwtl
jne
test
call
push
adc
daa
mov
sahf
int3
or
das
pop
repz
sbb
adcl
scas
inc
int3
sbb
andl
mov
das
push
push
mov
mov
stos
jbe
int
lret
hlt
scas
lods
cmp
loopne
mov
pop
sarl
jge
or
lret
add
xor
mov
rcr
lret
pop
push
mov
fyl2xp1
pop
pop
aad
push
inc
sub
cmp
movsb
push
std
ss
inc
addl
jbe
cli
idivb
mov
enter
push
push
in
int
sub
adc
les
in
les
int
dec
xor
xor
xchg
adc
inc
cmp
notl
adc
xchg
mov
sarl
sub
ljmp
mov
xchg
pop
ror
lods
push
xlat
pop
push
into
adc
dec
adc
pop
dec
daa
inc
push
mov
mov
insl
jle
ja
adc
cmc
lds
push
mov
hlt
or
xor
mov
std
mov
rcll
cltd
xlat
jae
add
or
mov
sti
xchg
pop
rclb
sbb
bound
gs
cmp
mov
pop
jae
jmp
mov
rcrl
jno
mov
inc
pop
jl
cmp
pop
mov
sarb
or
in
pop
inc
xchg
sbb
push
and
ds
adc
inc
mov
fbld
sub
jge
enter
push
push
rcl
push
sub
xor
xchg
push
aad
or
outsb
sub
cmpsb
imul
fnsave
dec
movb
xor
and
imul
loopne
pop
dec
adc
repz
mov
movsb
inc
mov
dec
in
bound
mov
mov
pushl
sahf
fidivl
push
mov
and
lock
push
insb
adc
into
xchg
fldl
loop
mov
jg
adc
mov
cld
loope
fld
cmpsl
ljmp
mov
xorb
or
and
ljmp
pushf
or
jnp
das
push
das
aaa
mov
inc
lds
cltd
cmpsb
push
shr
imul
fwait
nop
test
mov
cltd
into
sub
sbb
mov
xchg
rorl
sbb
testl
cmp
xcrypt-ofb
cmpsl
sub
xchg
into
lahf
xchg
cmp
or
inc
sub
notb
mov
and
jmp
pop
push
dec
sub
outsb
cld
les
jnp
mov
insl
pop
sbb
aas
sub
jl
aaa
push
add
cmpb
mov
lcall
orb
cmp
or
or
daa
insb
cmp
or
movsl
sub
mov
fs
fnstenv
sbb
adc
fsub
mov
and
jo
cwtl
mov
into
data16
push
xchg
fldl
into
movsb
int
dec
lods
imul
popa
jge
mov
pushf
or
dec
jo
push
xchg
jl
je
add
xchg
gs
setl
aam
push
xchg
scas
mov
jp
mov
sti
inc
xchg
jae
inc
sahf
push
dec
scas
test
enter
div
xlat
fs
mov
lahf
jg
xor
sub
or
push
push
cld
ljmp
mov
out
lds
in
mov
js
pop
js
insl
arpl
int3
mov
pop
or
sahf
lods
jnp
mov
addl
xlat
sti
mov
dec
imul
push
cmp
mulb
nop
cmpsl
cwtl
mov
insl
mov
out
cmc
sub
stos
jno
mov
sbb
inc
cmp
mov
and
jp
aam
sub
jne
xor
dec
inc
sub
inc
inc
pop
sbb
pop
andl
or
cwtl
insb
mov
cmc
add
mov
data16
aaa
xchg
dec
push
outsl
sbb
xor
clc
xchg
les
mov
movb
add
xor
shrl
rcll
jo
dec
aas
xlat
jmp
pop
addb
je
repz
add
push
dec
loop
imul
xor
cmpsl
cmp
push
inc
dec
ljmp
hlt
pop
lret
jl
xchg
mov
shll
and
sbb
push
fidivs
pushf
inc
arpl
insl
decb
bound
xchg
inc
ss
loopne
pop
or
or
and
jb
into
xorb
or
rcr
call
clc
fwait
mov
dec
mov
jae
shlb
dec
pop
arpl
adcl
jbe
push
xor
leave
inc
sub
jno
testb
mov
add
div
sub
scas
mov
pusha
lods
mov
add
mov
jno
clc
stos
filds
ljmp
es
cwtl
push
adc
in
jns
fsubrp
out
loop
insl
insb
push
call
insb
rcll
jmp
xchg
je
add
xchg
pop
dec
dec
shrl
ret
insb
mov
lret
mov
xchg
std
lcall
stos
call
adc
mov
mov
movsb
sbb
iret
mov
xchg
push
call
and
in
xchg
lret
insb
in
in
lods
into
cwtl
sbb
adc
adc
in
popf
pop
flds
sbb
scas
imul
out
sahf
iret
mov
call
and
rcr
cmp
sbb
adc
ds
jmp
or
in
xor
push
sbb
into
xchg
test
adc
outsb
test
mov
xor
jl
mov
xchg
or
pop
jno
aad
je
inc
and
lret
push
sub
mov
addr16
jae
out
cmp
xchg
lcall
into
inc
shl
adc
mov
cld
ss
jo
xchg
or
daa
inc
sub
add
pop
or
outsb
mov
fbstp
gs
hlt
rep
arpl
in
jmp
xchg
xchg
fs
pushf
mov
and
cmp
mov
fwait
mov
xorb
xchg
out
repnz
ret
pop
sub
shrl
and
lock
popa
loopne
jno
std
sbb
mov
mov
mov
nop
jmp
sbb
lcall
iret
inc
hlt
fldcw
or
fs
insb
dec
add
and
push
sub
lahf
jg
sub
push
std
roll
shrb
inc
pusha
xchg
cmp
addb
aaa
out
arpl
mov
and
push
xchg
push
orb
or
pop
test
into
push
insb
add
xchg
mov
sub
cmpsb
pop
xchg
movsl
mov
cmp
loope
push
lcall
push
jns
or
push
cmp
popf
mov
push
push
pop
out
mov
xchg
fsubrp
rol
mov
imul
inc
popl
jo
out
jge
jmp
xchg
pop
push
sar
and
mov
jne
push
inc
int3
call
push
xor
push
popa
scas
cli
add
pop
vpmovw2m
xlat
adc
loopne
les
lods
xchg
in
cld
dec
push
insb
iret
cld
sub
jecxz
sub
inc
push
pop
out
fmul
xor
fnstenvs
lds
xorl
and
orb
out
or
cmp
cwtl
mov
inc
test
repnz
fcomi
push
fdivrl
and
sahf
inc
shll
push
or
repz
repnz
je
inc
std
pop
jbe
das
fsubl
dec
push
stc
or
and
in
int
pop
sbb
sti
xchg
xchg
cld
adc
dec
cltd
gs
insb
stc
fidivrl
iret
ds
sub
das
jl
fildll
cmpsl
and
test
push
aad
mov
inc
pop
pop
sbb
mov
les
xchg
xchg
xchg
jns
leave
stos
cmp
or
daa
xchg
bnd
jge
enter
jmp
ret
ds
inc
push
cmpsl
cmpsb
xchg
xor
call
out
mov
xchg
pop
or
mov
aas
jb
xchg
mov
dec
in
inc
adc
or
repnz
dec
iret
aaa
cs
shlb
sahf
and
iret
imul
sbbl
jg
or
jne
fisubrl
jmp
sub
sub
das
insb
dec
ret
mov
xor
mov
inc
mov
sub
xor
fisubrl
inc
sbb
dec
mov
or
ret
in
mov
call
adc
adc
enter
mov
xchg
sbbl
mov
xchg
imul
insl
lods
push
xor
mov
pop
out
and
xor
cmpsl
ret
or
insb
repnz
xchg
inc
mov
push
push
jle
out
fidivrl
jb
fdivl
dec
sbb
cli
in
mov
push
adc
sbbb
sub
insb
cwtl
pop
or
xor
cmp
adc
shl
xchg
in
adcl
mov
dec
stos
lods
push
loopne,pn
pop
push
fld
or
les
dec
and
js
sbb
shlb
jae
or
push
xchg
pop
mov
xchg
stc
dec
push
scas
shll
pop
aad
pop
jns
shlb
adc
shlb
fstl
js
sub
pop
add
jle
cmp
je
decb
cwtl
lods
cs
fisttpll
mov
aam
ja
mov
cld
mov
push
out
xchg
iret
cmp
adc
mov
test
lret
inc
hlt
imul
dec
mov
aas
sbb
fwait
nop
sbb
sti
jo
mov
test
or
mov
jbe
inc
sub
test
shll
out
outsb
jmp
jb
xchg
mov
add
int
pushf
imul
push
loop
ds
xchg
jae
dec
cli
pushf
cmp
iret
xor
aam
fiaddl
add
ficoml
fcmovne
cmp
push
inc
movsb
shlb
popf
sti
adc
push
mov
stos
sub
divb
pop
lret
test
sahf
testb
and
dec
lcall
dec
push
mov
push
int3
lret
int
pop
push
push
adc
pop
pop
frstor
xor
mov
inc
sub
jnp
outsb
push
test
call
jle
pop
xchg
jne
cmp
cs
ljmp
movsl
push
sbb
lret
int3
into
mov
jge
lret
pop
inc
int3
ret
mov
dec
addr16
repz
clc
repz
shrb
mov
push
cwtl
mov
push
dec
gs
outsl
push
clc
add
aaa
loopne
and
into
ret
adc
mov
jecxz
mov
mov
mov
mov
nop
aas
dec
jb
and
test
xor
fiaddl
xchg
sbb
mov
sbb
movsb
add
cmp
rcr
dec
shlw
mov
push
fiaddl
cmpsb
lahf
int3
xchg
in
shll
xchg
pop
add
mov
xor
pop
jmp
jns
push
notb
call
int3
mov
stos
mov
loope
push
mov
mov
mov
mov
sbb
mov
js
sub
call
inc
bound
push
dec
xchg
sbb
stos
pop
aad
aaa
mov
lret
push
xchg
test
in
dec
icebp
mov
dec
or
subb
mov
ret
sbb
lret
repnz
ret
pop
ljmp
push
sub
nop
ds
fwait
mov
sub
push
push
movsl
push
fwait
iret
sbb
add
gs
call
jno
inc
xor
pop
iret
fsub
push
repnz
inc
jmp
add
ljmp
bound
inc
mov
hlt
sub
cmp
xchg
test
xlat
sub
in
clc
orl
fldenv
mov
pop
xchg
push
cmp
inc
bound
outsl
movhps
int3
enter
dec
daa
pop
jno
jp
out
pop
mov
adc
xor
sub
imul
mov
jne
jmp
call
xchg
test
pop
out
mov
imul
test
cs
aad
inc
lds
xor
mov
cltd
mov
aad
jge
lds
xlat
add
pop
push
inc
std
sub
cltd
or
les
sub
push
incl
push
aas
fisubrs
push
xchg
icebp
call
inc
add
or
mov
out
pop
jmp
fstl
xchg
dec
popl
out
and
xchg
mov
sbbl
mov
add
decb
je
sub
cmc
shr
imul
sub
adc
cmp
jo
sub
sub
test
call
inc
adcb
mov
je
pusha
repnz
push
xchg
push
call
lcall
jp
mov
popa
hlt
fisubs
sahf
inc
add
lahf
pop
loop
imul
sub
lock
mov
dec
enter
mov
cmp
push
inc
jg
inc
loop
push
loope
stc
dec
sarl
sbb
out
mov
xor
push
or
andl
shlb
cmp
shlb
push
nop
adc
and
mov
cmp
jg
jns
arpl
sub
inc
leave
int3
lret
push
push
stos
roll
pop
sub
dec
ds
cmp
mov
cmp
xor
addl
pop
or
jnp
sub
out
pop
mov
or
fidivrl
xor
addb
loopne
pop
push
imul
jge
mov
pusha
xor
mov
lret
repnz
fstpt
int3
sar
aaa
push
or
xchg
mov
mov
pop
and
int3
mov
xor
repnz
cs
mov
and
scas
inc
test
mov
sub
adc
test
int3
sub
movsl
xorl
mov
mov
inc
lock
insb
adc
inc
mov
jecxz
mov
xchg
sub
adc
pop
fcoms
fwait
xor
pop
lds
xor
adc
xor
nop
cmp
and
jl
jno
daa
xchg
push
xchg
xor
mov
or
test
imul
mov
xor
push
aam
cltd
xchg
push
adc
adc
push
mov
or
lds
jle
mov
lods
es
lock
cld
mov
cmp
pusha
jnp
lock
pop
pop
sti
push
dec
cwtl
sbb
loope
mov
adc
ret
fbld
call
in
push
std
push
mulb
cmpsb
sbb
leave
dec
adc
fstps
loope
dec
or
pop
mov
push
loopne
in
lock
imulb
add
mov
mov
mov
cmpsb
xchg
or
test
dec
aas
or
inc
out
outsb
test
int
int3
dec
jo
hlt
add
xor
imul
xlat
insl
dec
sahf
jmp
in
xor
into
pop
pop
aas
xchg
pop
frstor
imul
add
das
push
jecxz
cmp
mov
push
push
test
repnz
xlat
xchg
movsl
cmc
push
pop
pop
imul
hlt
negl
inc
fsubrs
int3
pop
nop
aaa
cmp
es
pop
fst
int
and
loope
fwait
jmp
mov
filds
sbb
adc
je
mov
sub
pop
pop
repnz
or
push
or
jecxz
sbb
cmpsb
sbb
xor
cmpsl
test
sbb
inc
out
push
xchg
ljmp
xchg
pop
stc
je
je
cmp
shlb
fbld
sub
fidivl
xor
das
repnz
xchg
mov
scas
cld
add
cmp
lods
adc
adc
jg
in
fs
je
pushf
xor
cmp
push
jo
xchg
out
daa
or
rcrl
cmp
int
adc
test
add
cmpsl
popf
nop
bound
cld
inc
or
push
and
sbb
mov
stos
sbb
add
hlt
aad
sti
pusha
cs
xchg
inc
cmp
stc
add
xor
or
inc
mov
dec
cltd
pop
or
fistl
jb
push
fsubs
and
imul
pop
inc
daa
pop
add
in
sub
xchg
sub
mov
xchg
cld
scas
jmp
pop
imul
mov
hlt
mov
cwtl
inc
pop
or
flds
or
ret
sahf
xchg
test
jno
lahf
ret
stos
sbb
pop
ss
cli
cs
lods
inc
popa
push
adc
mov
aaa
jb
push
out
pop
mov
pop
jp
addl
outsl
shll
push
in
and
ljmp
mov
imulb
loope
jne
lahf
xchg
sahf
sub
inc
inc
push
sbb
out
pop
push
lea
not
aad
inc
int
cmpb
dec
outsl
xchg
jg
lcall
std
xchg
movsb
cmp
rorb
int
fidivl
mov
mov
jne
push
xlat
push
jle
stos
push
and
shll
testl
adc
call
add
stos
cli
lret
inc
sbb
shll
dec
sub
test
stos
jae
int
stc
lahf
int
in
lock
jg
jmp
lock
aam
cmc
push
cmpsl
inc
iret
jl
mov
dec
inc
jae
xor
daa
cmp
movsb
lods
aas
lea
jp
out
pop
sbb
leave
cld
in
cmp
test
pop
shl
lret
xor
jb
cmp
and
pusha
cwtl
or
repz
inc
int3
mov
jnp
xchg
outsl
sahf
mov
mov
call
cmovbe
xchg
cmpsb
and
scas
pop
aas
fldcw
cmp
aam
ljmp
scas
scas
fidivrl
mov
sub
xor
adc
mov
dec
ss
lock
jbe
pop
jno
xchg
xchg
cmp
scas
xchg
mull
movsb
movl
add
inc
inc
popf
ret
imulb
pushf
pop
icebp
lret
andb
adc
jbe
or
or
testb
adc
cmp
mov
add
repz
daa
jle
ret
inc
dec
outsl
adc
daa
test
das
jecxz
in
aas
lahf
sahf
or
pushf
mov
xchg
test
fsubs
pop
mov
loop
dec
xor
cld
nop
add
std
shll
adc
mov
in
sbb
fucomp
jge
or
fsts
scas
sbb
faddl
dec
pop
shlb
call
mov
lock
jnp
cltd
stos
adc
inc
sti
ljmp
cmp
loop
inc
cmp
mov
inc
rclb
lahf
mov
inc
cli
xlat
js
or
dec
movsl
sub
jmp
jle
mov
and
dec
rorb
pop
aad
lea
leave
mov
hlt
jae
mov
stos
je
sahf
test
out
and
call
iret
adc
gs
and
or
aad
out
or
dec
jo
sbb
add
or
repnz
hlt
orl
fildll
mov
mov
ret
fisubs
dec
les
pop
test
loop
pop
shr
fstpt
xor
ja
aaa
or
negb
jecxz
dec
test
negl
ja
sbb
out
inc
sbb
in
stos
jb
test
adc
ret
inc
push
mov
lea
dec
les
mov
fsub
imul
inc
stos
out
icebp
imull
and
sbb
fucomip
in
and
out
xor
data16
aas
jnp
imul
mov
int3
push
in
jecxz
push
pop
ret
std
sbb
adc
or
loope
fwait
rorb
mov
adc
mov
popa
jns
pop
jp
fidivs
std
jbe
xchg
mov
push
ret
aam
outsl
outsb
jge
mov
mov
in
scas
in
leave
shrl
aam
sub
dec
aad
or
popf
test
or
loop
lock
inc
rol
xchg
lods
or
inc
inc
aam
repz
mov
pop
sbb
inc
scas
in
sbb
negb
sahf
xor
lds
jmp
adc
addr16
jae
fidivrl
mov
fidivrs
push
loope
test
xchg
xor
mov
flds
mov
jg
adc
add
jbe
rorb
hlt
cli
cmpsb
lret
mov
lock
imul
test
enter
outsl
daa
mov
fwait
jp
scas
dec
mov
push
mov
call
aaa
outsl
outsl
pop
inc
mov
add
outsl
sub
mov
jb
je
jno
jbe
push
dec
mov
aad
mov
neg
hlt
jns
mov
adc
fnclex
or
push
pop
mov
and
popa
pop
push
insl
leave
movsb
adc
int3
ja
mov
rol
clc
ss
fisttpll
sbb
out
leave
push
aas
inc
icebp
out
mov
push
repz
call
pop
ret
jl
jg
dec
repnz
fldt
movsl
dec
add
subb
addb
iret
pop
lahf
lds
and
jbe
xlat
jb
lods
fisubl
cmp
in
mov
pop
dec
xchg
pop
clc
aaa
addr16
cmp
scas
and
sub
rorl
sub
push
mov
xor
jle
imul
fmulp
iret
push
inc
jmp
push
and
cmp
push
sub
stos
rorb
outsl
stc
scas
xchg
fcompl
stos
fcmovu
pop
xchg
das
daa
pusha
pusha
mov
ss
and
dec
ljmp
test
sub
ja
ss
aam
int3
jge
pop
sbb
xchg
mov
add
lea
fcmovnb
jge
repz
popa
push
stc
imulb
mov
addr16
mov
and
clc
cwtl
ret
out
cltd
lods
iret
xchg
call
repz
movsl
iret
add
in
cmp
je
out
sbb
dec
jne
sbb
pop
adc
push
jecxz
push
loop
cwtl
and
xchg
inc
cmp
lret
xchg
addl
les
pop
int
cltd
sub
jecxz
movsb
jo
mov
popf
test
dec
call
xchg
shlb
sub
in
outsb
pop
push
push
add
in
jnp
popf
fldcw
mov
adc
imul
or
gs
fistpl
subb
in
bswap
inc
ficoms
add
stc
mov
out
rcrl
roll
push
push
loop
scas
movsb
nop
sub
jle
pushf
ljmp
out
rorb
cmpsb
cmp
mov
mov
push
xchg
xor
push
or
cwtl
outsl
bound
pop
adc
and
sbb
or
pop
call
cmpsl
pop
jge
inc
xchg
out
addr16
testl
loope
cltd
pop
cltd
adc
pop
popa
pop
mov
lock
insb
aas
inc
ljmp
and
xor
out
mov
mov
int
xor
push
mov
das
ds
jae
test
roll
in
idivb
or
into
push
push
stos
mov
xchg
add
xchg
rorb
lcall
sub
sub
cmovl
sub
xor
in
or
jg
mov
fisubs
fisttpll
loopne
mov
or
cmp
mov
repz
enter
cmp
addl
jne
mov
scas
ret
not
and
mov
insl
xchg
push
pop
insb
rolb
aas
mov
ficoms
xchg
mov
inc
lcall
mov
adc
jle
insb
nop
es
sbb
sub
sahf
dec
faddl
mov
sbb
in
pop
xor
push
add
inc
push
movsl
lcall
in
mov
mov
repz
pop
push
roll
cmc
xor
add
fnsave
fwait
jne,pt
dec
paddq
aam
popf
repz
aas
push
xor
iret
or
dec
sub
cmp
dec
xchg
popa
jmp
and
and
add
inc
and
sbb
mov
aas
pop
dec
inc
add
pop
mov
daa
js
xorl
jle
pop
fcmovbe
imul
add
addb
pop
aas
std
repnz
clc
sahf
jg
pop
daa
dec
shll
push
dec
xchg
sub
jmp
and
in
xor
loopne
jp
xchg
outsb
dec
enter
fsubrp
and
cmpsb
ljmp
sub
shrb
or
mov
pop
push
mov
mov
mov
in
enter
in
or
movsb
jge
cltd
nop
sar
xchg
rorb
test
xorl
mov
je
xor
rep
hlt
pop
mov
bnd
out
dec
les
mov
mov
mov
leave
sbb
and
inc
iret
jb
and
imul
int
and
lret
pusha
and
bound
out
and
or
in
mov
xchg
daa
ret
jp
and
xorl
iret
incl
shll
mov
aaa
pushf
pop
sub
vmread
xor
rep
hlt
and
inc
aas
mov
push
subl
mov
push
sub
jne
adc
xor
pusha
sub
xlat
xorl
es
ja
out
ficoml
or
xlat
sbb
jl
imul
lret
nop
iret
cmc
fmull
dec
lret
loop
mov
inc
mov
sbb
inc
test
push
arpl
aaa
test
cmp
lcall
mov
sub
cld
inc
mov
insl
pop
jl
mov
jbe
and
clc
dec
push
movsl
adc
xor
jmp
lahf
out
dec
mov
sub
out
push
mov
pop
adc
bsf
xchg
mov
push
sbb
sub
sbb
and
sbb
jne
and
mov
les
repz
jb
jle
xchg
and
stos
cmp
sbb
ret
xchg
adc
insb
hlt
cmpsl
dec
fmul
aaa
roll
adcl
lock
sbb
jle
pusha
sub
jge
insb
mov
push
push
movsb
push
sti
lock
sbb
sti
sub
imul
inc
cmp
lret
sub
mov
or
adc
sar
sbb
jle
and
movsl
sahf
or
int3
sahf
or
adc
aad
subl
cmp
int3
mov
mov
xor
pop
mov
and
or
adc
cli
rcl
stos
push
test
cld
mov
pop
xor
testb
rclb
imul
pop
or
ljmp
add
ds
sbb
ds
xor
jp
lahf
arpl
into
in
sti
xor
pop
dec
xchg
fnstsw
data16
sub
mov
mov
lock
cmpsl
mov
stc
xor
outsb
movsb
and
mov
push
ds
dec
mov
xchg
repnz
stos
sub
cltd
adc
pushf
jmp
sub
pop
cmp
bound
cltd
mov
movsl
movsl
pop
int
xor
arpl
mov
shll
sbb
fcomi
adc
movsb
mov
adc
push
cmp
mov
sbb
hlt
aaa
xchg
fisubrl
loopne
shr
test
pop
lods
xor
xchg
jne
push
mov
adc
popl
ja,pt
std
inc
mov
gs
roll
cli
lahf
stos
outsl
loope
add
inc
ret
sbbl
xchg
xchg
cwtl
push
pop
jns
sbb
lcall
outsl
cmp
xchg
int3
pop
pop
aaa
jecxz
and
sub
jecxz
sub
inc
adc
int3
inc
push
pop
pop
arpl
faddl
mov
or
cmp
fwait
fs
and
xchg
push
push
or
push
lcall
loopne
dec
mov
dec
faddp
mov
add
pop
mov
adc
loop
adc
cmp
adc
in
sub
mov
mov
pop
in
mov
pop
fstpl
addr16
push
out
loop
xchg
push
mov
pop
or
add
inc
fcoml
ds
fimull
std
js
adc
or
push
out
fcoms
pop
out
inc
ret
cmp
mov
inc
cmpsl
pop
mov
out
inc
inc
push
lcall
test
sbb
add
inc
stos
mov
out
sub
sub
mov
shlb
pop
mov
add
lock
mov
fucomp
pop
xor
inc
and
loope
popa
xchg
and
mov
push
jp
out
ds
fisubl
out
xor
lods
outsl
xor
xor
shll
inc
xchg
push
sub
sub
pop
push
pop
dec
addr16
call
jo
ja
jnp
stos
ret
xchg
icebp
push
or
bound
test
xor
test
loopne
leave
add
fstpt
and
scas
adc
mov
mov
jno
pusha
lcall
mov
inc
es
inc
fs
lret
pop
sbb
cltd
pop
dec
scas
cs
sub
pop
mov
sahf
ret
cmp
pop
add
xlat
dec
fcmovu
out
mov
push
adc
jno
loopne
jg
xorl
inc
fdivs
pushl
ret
xor
ljmp
sub
cmpsl
xchg
jge
and
lock
insb
popf
dec
lea
pop
insl
pop
pop
sub
adc
xchg
cwtl
cmpsl
jmp
cvtdq2ps
adc
mov
gs
lret
add
dec
stc
lods
js
rolb
xchg
jle
jg
xor
std
orb
push
xchg
sub
arpl
push
dec
scas
sbb
adc
cmp
mov
loopne
pop
popa
mov
test
mov
and
add
in
bound
sub
cmpsl
xchg
jne
jmp
mov
or
lock
faddl
addr16
adc
cs
popa
lods
jbe
gs
inc
or
and
movsl
stc
mov
ljmp
cmp
add
push
mov
aam
icebp
aam
clc
pop
ficoml
push
pop
ds
rclb
mov
lret
xchg
pop
xor
mov
not
sarb
push
fldcw
fsubr
ret
or
lret
and
iret
cwtl
or
push
sub
push
cmp
inc
dec
ljmp
dec
das
sub
mov
push
bound
add
mov
stos
adc
jg
push
cmp
mov
unpcklps
repnz
xlat
mov
xor
loop
js
ljmp
mov
stos
pop
adc
cmpb
add
rcll
sahf
cmp
neg
scas
mov
cs
int3
xor
push
iret
add
inc
pusha
jle
insl
dec
or
mov
test
sub
inc
jp
or
mov
leave
push
loopne
idivb
mov
enter
and
mov
push
sbb
xor
int
call
ljmp
out
jle
not
outsl
call
std
adc
mov
in
add
sti
and
out
addl
dec
dec
rolb
pop
sar
ret
push
add
hlt
xchg
pop
push
dec
adc
push
sbb
out
mov
aaa
out
js
mov
popa
and
mov
sbbb
loope
call
push
mov
aad
imul
les
fisttpl
adc
sub
inc
lret
das
arpl
pop
sbb
xchg
jmp
jno
pop
xchg
xchg
scas
jp
mov
adc
inc
sbb
sbb
mov
scas
scas
aad
push
jb
pusha
add
cltd
jae
into
sbb
sub
or
das
jmp
outsb
js
sti
pop
add
test
sahf
xchg
mov
mov
or
shll
movsl
mov
in
movsb
pop
xchg
and
cmp
popa
and
repz
dec
dec
fs
clc
js
push
jmp
xor
push
jg
mov
push
push
adc
sbb
xchg
pcmpgtw
test
lret
push
les
pusha
in
fdivrs
add
mov
scas
jl
in
mov
pop
cmp
pop
test
cwtl
xchg
sbb
imul
sub
ss
xchg
mov
ja
sahf
gs
mov
cmp
stos
xchg
cld
pop
shl
out
aad
les
repnz
icebp
fmul
mov
stos
enter
jns
in
lea
jae
enter
imul
mov
sti
and
aaa
jmp
mov
dec
popf
push
mov
dec
stc
cmpsb
push
mov
lret
mov
add
xor
xchg
insb
push
loopne
aad
lret
pop
sub
adc
mov
in
pop
subl
push
shlb
lock
arpl
jne
icebp
sbb
lea
add
imul
jns
dec
sbb
push
mov
pop
sbb
fwait
sbb
sbb
mov
into
sub
iret
idivb
call
jnp
jo
lods
lahf
negb
fidivrs
cld
dec
mov
or
dec
mov
push
mov
mov
push
pusha
cmp
dec
das
ljmp
mov
lsl
lock
notl
mov
sbbb
outsb
ret
test
or
xchg
and
cwtl
xchg
xor
in
jl
xchg
cmp
lock
xor
pushf
or
add
jl
shll
sub
inc
adc
lds
xchg
mov
je
out
pushf
adc
mov
scas
mov
xchg
rcrb
dec
mov
out
push
xchg
das
xchg
dec
call
test
outsl
andb
movsb
data16
pop
daa
xchg
loope
push
sbb
mov
sbb
jp
jnp
dec
divl
in
imul
hlt
pop
insl
out
cmp
ds
jae
jecxz
jmp
scas
sub
inc
dec
adc
aad
nop
and
jge
mov
shlb
mov
fidivrl
xchg
jge
fs
or
cli
adc
jns
imul
mov
loope
adc
mov
std
sti
fcomip
xchg
rcll
pop
push
ja
filds
gs
jp
ds
hlt
and
and
adc
push
insl
jb
cmpsb
fildll
idivl
lods
inc
jecxz
fmulp
mov
mov
cmp
push
jne
pop
in
inc
jne
sbb
xor
jns
daa
push
fistpll
or
insl
lds
mov
cwtl
push
in
mov
cli
jmp
repz
sbb
cs
arpl
jb
pushf
cli
nop
sub
mov
push
and
mov
mov
mov
testb
inc
sub
jnp
lcall
lods
xlat
dec
test
fs
dec
lret
sbb
xor
mov
cmpb
push
mov
js
cmp
in
and
inc
and
xorl
jns
push
sbb
sub
mov
mov
div
lret
mov
mov
jecxz
test
aam
xchg
dec
mov
pop
mov
imul
in
fcompl
inc
imull
xchg
jecxz
lahf
clc
sbb
or
call
sub
pop
shrb
cmc
aas
xchg
into
xchg
divb
xor
cltd
xchg
movsl
adc
push
cmp
jl
nop
int3
mov
fnstcw
inc
push
adc
je
add
mov
mov
pop
cmp
cltd
sub
into
mov
aas
scas
jbe
and
xchg
lds
test
insb
sti
scas
into
sub
addb
stos
jb
les
jnp
xchg
inc
cmp
pop
addr16
jb
cmp
lds
xor
scas
cmp
cltd
jo
pop
dec
stos
pusha
xor
inc
call
iret
cmc
test
push
scas
cmp
and
das
mov
pop
rcll
dec
fstpl
add
imul
xchg
push
ss
lds
inc
xchg
mov
inc
jecxz
fistpl
ljmp
xlat
inc
push
fimuls
lock
ds
inc
out
lock
arpl
mov
mov
dec
mov
jb
repz
mov
shlb
test
sbbl
aaa
xchg
sub
xchg
inc
sub
stos
and
sub
xor
pushf
in
pusha
add
pop
cmp
pop
push
cmpsl
mov
lods
lods
mov
pop
scas
push
in
arpl
fwait
js
clc
or
push
rolb
xlat
pop
push
xor
sbb
jmp
iret
in
rclb
push
loopne
subb
fsubr
push
leave
xor
jl
sub
fisttpl
push
aad
not
ret
xchg
push
mov
add
push
test
push
fcmovb
sub
pop
aas
mov
mov
test
dec
pop
rorb
pop
xchg
aaa
loopne
insb
ljmp
cli
int
push
mov
pop
mov
repnz
subb
fsub
and
repz
in
loop
pop
push
cmpsb
push
loopne
mov
daa
jne
fisubrs
mov
repz
notl
sub
mov
mov
push
or
jge
loop
mov
pop
cmc
dec
mov
insb
xchg
loope
mov
cld
cwtl
test
fimuls
inc
insl
or
fwait
xchg
or
stos
dec
xchg
icebp
xlat
sbb
add
mov
dec
ss
mov
imul
inc
ss
ret
xor
inc
ret
adc
add
lcall
inc
clc
out
or
sbb
addb
dec
lea
xorb
loopne
rolb
stos
mov
push
or
pop
sbb
sbb
fsubrp
sbb
xchg
call
scas
pop
lret
or
shlb
xlat
add
xchg
jns
mov
cmc
outsb
sti
ret
dec
push
shrl
xchg
lock
adc
insl
fbld
push
in
sti
cmp
lea
loopne
xchg
pop
leave
fsts
push
shll
jecxz
rolb
xchg
dec
mov
cmp
jbe
mov
adc
loope
adc
popa
rorl
inc
test
push
in
pop
mulb
xor
idivl
rcrb
mov
xor
pop
sbb
scas
inc
jg
sti
adc
push
add
jne
jb
mov
loope
into
xor
enter
dec
lret
flds
pop
pop
pop
push
dec
ljmp
loopne
add
push
lret
arpl
call
iret
popf
or
jmp
loop
ljmp
mov
in
jecxz
xor
xor
pminub
pushf
mov
mov
shrb
int3
adc
rcll
add
sub
push
iret
xchg
shl
fidivs
mov
cmp
inc
cmp
pop
bsf
in
lret
inc
mov
push
ja
sub
mov
in
ss
lret
lret
jg
jl
mov
mov
add
mov
inc
add
les
pusha
mov
jns
pop
sbb
and
pop
inc
xchg
dec
clc
or
push
sbb
jae
adc
sbb
ret
lea
loop
xchg
repnz
jp
sbb
scas
xchg
and
outsl
test
xchg
dec
rcrb
loop
or
inc
and
push
movl
or
test
pop
push
insl
xchg
imul
insb
xlat
inc
addr16
int
push
out
inc
scas
dec
adc
xorl
sub
dec
and
or
or
xchg
shlb
fsincos
das
add
jmp
mov
lds
mov
cs
out
xchg
adc
jle
and
stos
cmp
pop
mov
popa
shl
sub
pushf
push
mov
sub
aas
pop
cs
gs
jns
scas
or
jo
insl
jo
pop
hlt
or
decb
pcmpgtb
ret
mov
aaa
cmovg
test
push
jbe
lahf
test
movsl
addr16
mov
xchg
mov
dec
std
mov
dec
movsb
xor
mov
stos
jbe
push
aas
es
pop
icebp
jnp
dec
or
inc
mov
loope
and
fadds
cwtl
cmp
movsl
in
inc
roll
rol
lods
fsubrl
int
xchg
lods
cmp
fiadds
xor
mov
cmpsl
push
stos
sbb
sub
pop
outsb
push
sbbl
sti
add
movntps
xor
lcall
mov
addl
aad
xchg
dec
int3
lea
std
and
sti
testb
call
inc
xchg
mulb
subl
pop
mov
sub
pushf
insl
loope,pn
cmc
fildll
push
in
xor
or
outsl
xor
sarl
nop
cmpsl
subb
movsl
add
jmp
test
mov
cmp
into
test
addr16
enter
test
push
ja
out
adc
push
dec
jnp
push
das
adcb
pushf
pop
sub
enter
sbb
and
mov
shrb
fstps
mov
in
or
fisttpl
test
imul
cmpsb
xorb
sub
sub
push
inc
outsb
jo
mov
scas
pop
es
xchg
negl
setns
and
jnp
in
push
mov
cmp
jp
pop
lock
mov
jnp
add
push
subb
adc
or
pop
mov
fadds
mov
hlt
arpl
cmpsb
call
aaa
shlb
mov
les
lock
and
cmp
mov
pop
sub
shl
stc
cmp
ss
push
les
pop
inc
pop
mov
inc
subl
aas
pop
xor
jnp
push
fsts
insb
in
aam
sbb
fmuls
cs
xchg
jnp
stos
sarl
fdivrl
push
lds
mov
cli
dec
out
stos
stc
fdivl
shll
pop
ret
pusha
lret
or
out
popf
adc
out
xchg
sti
sub
or
rorb
sbb
je
inc
in
adc
out
jb
adc
stos
aaa
inc
pushf
jb
pushf
mov
and
pop
pop
je
dec
adc
xchg
or
mov
pop
jno
cwtl
ret
jmp
and
repz
mov
mov
les
fwait
dec
movsl
and
lea
aaa
mov
gs
shlb
fsubs
negl
out
sbb
xchg
pop
mov
jbe
in
shll
ljmp
sub
gs
inc
loope
lods
pop
push
inc
pop
dec
xchg
jo
pushf
dec
sub
lods
mov
scas
and
cmp
ja
cmp
add
cmpl
in
lahf
loop
bound
test
in
mov
add
push
icebp
push
inc
je
ds
mov
repz
test
imul
sbb
xchg
fcmovnbe
jns
in
dec
add
fcmovb
aaa
or
lods
sti
addr16
pop
out
aam
sub
scas
sbb
mov
test
add
mov
jmp
aas
inc
mov
xchg
sub
dec
sub
mov
xchg
inc
sbb
xchg
inc
fmuls
js
or
jmp
mov
push
xchg
insb
jbe
sbbb
cli
dec
inc
cli
mov
aad
jnp
imull
add
add
out
outsb
dec
mul
test
out
movb
cltd
mov
leave
std
jle
movsb
in
push
or
out
les
xor
mov
sbb
mov
imul
fsub
repnz
std
sub
xchg
inc
sub
outsb
pop
cmp
xchg
mov
sub
pop
add
jbe
repz
aam
and
mov
xor
cmp
idivb
je
sbb
inc
jg
ja
mov
mov
inc
fists
xchg
and
cmp
push
push
mov
movsb
sub
outsl
pop
xor
dec
int
lods
lods
insl
adc
dec
popf
cmpsb
cltd
mov
aam
adc
mov
xor
push
fs
push
fsts
movsb
inc
leave
dec
add
push
daa
adc
cltd
les
sbb
shrb
adc
jecxz
add
mov
sti
jge
outsb
xlat
pop
xchg
or
add
mov
fiaddl
stos
or
push
mov
push
sbb
push
add
push
jb
lcall
sub
mov
lea
xchg
jge
cltd
lahf
out
jge
mov
adcb
sbb
mov
adc
sub
mov
mov
mov
xor
mov
out
cmc
enter
negl
lcall
cli
cwtl
stos
pusha
xchg
xlat
sub
and
insb
ljmp
or
fildll
inc
add
loope
icebp
leave
sarb
or
mov
push
lds
sbb
data16
xor
aad
xor
cmpsb
adc
scas
pop
mov
pop
xchg
ljmp
pop
test
les
jns
int
push
sub
cmovne
inc
xor
cs
in
cmpb
aas
fdiv
xor
popf
dec
jbe
out
pop
pop
aas
aam
fimuls
inc
sar
jae
test
cmp
sbb
movsb
in
dec
andl
sarb
test
das
cmc
addr16
push
push
stos
fidivs
xlat
data16
xchg
stos
decb
pop
test
incl
xor
pop
xchg
roll
pop
mov
pushf
pop
loopne
lcall
mov
push
push
adc
lret
out
sahf
fisubrl
dec
pop
jp
jmp
mov
cmc
ret
mov
push
xlat
jg,pt
test
jb
in
loopne
imul
push
aam
es
or
cmp
and
mov
cmpb
dec
dec
or
jo
mov
push
inc
arpl
sub
and
scas
repnz
cmp
push
pop
or
fcompl
shlb
xchg
testl
lcall
std
scas
movsl
mov
aas
mov
mov
aas
jecxz
sbb
or
ds
mov
cltd
test
insl
dec
fucomi
mov
inc
lcall
rolb
adc
push
sbb
mov
jbe
xor
aam
sub
scas
pop
mov
add
pop
divb
add
inc
adc
iret
daa
cmc
push
jae
fildl
sub
fnstcw
inc
dec
ret
icebp
cltd
sbb
sbb
cmp
std
xor
insb
inc
ret
movsb
inc
popa
push
sbb
adc
loop
xlat
sub
adc
es
sub
jecxz
add
inc
and
dec
mov
aam
jl
mov
or
or
dec
xchg
push
loopne
add
inc
sub
mov
stos
fs
or
bound
cwtl
push
push
fimuls
in
cmc
jnp
and
push
loopne
in
cmp
ss
leave
movsl
jmp
orb
cs
jnp
mov
call
xchg
mov
pusha
sub
pop
arpl
cmp
dec
or
les
stos
push
mov
scas
xchg
push
aas
popa
std
cwtl
xchg
sbb
or
xchg
cmp
flds
push
sbb
subl
repnz
sarl
clc
mov
dec
mov
pop
test
push
movsl
ljmp
mov
push
xor
test
pop
call
aad
jp
mov
mov
adc
movsb
lcall
push
test
lds
or
xchg
xchg
ss
jb
adc
mov
lret
mov
popa
add
jecxz
lock
mov
jbe
scas
mov
push
pop
inc
mov
lods
push
jno
jnp
test
out
test
dec
lahf
dec
mov
loopne
pop
lret
repnz
call
fwait
xor
cmc
xor
dec
add
out
inc
nop
int3
pop
test
jmp
xchg
in
dec
inc
fdivl
jecxz
jns
repnz
mov
push
push
push
jne
push
jno
jmp
stc
lock
mov
ds
sub
fisubl
out
jp
jge
loope
insb
cwtl
popa
popf
pop
cmp
push
addr16
inc
sarl
rorl
lret
popl
pop
jmp
mov
je
mov
push
sub
adc
or
mov
pushf
lret
subb
test
hlt
mov
mov
cmpsl
clc
in
outsb
adc
inc
outsb
mov
sbb
loop
sbb
inc
out
cmpb
jl
inc
bound
insl
ret
in
rolb
adc
cmp
mov
sub
push
dec
sbb
dec
and
outsb
aad
repz
clc
dec
rcrb
pop
loopne
sub
xchg
sub
add
shlb
adc
or
mov
in
sbbl
dec
gs
mov
xlat
rclw
cs
fisttpll
fldl
arpl
divb
mov
jg
pop
clc
cmp
lcall
movsl
cmpsb
cmp
push
adc
jecxz
enter
insb
mov
xor
addb
daa
add
inc
pop
cmp
jo
adc
jmp
fs
inc
or
outsb
cmp
ljmp
int3
test
and
lcall
stos
mov
scas
cmpsl
sub
pushf
not
xor
push
add
aad
sub
add
insl
and
orb
dec
imul
lods
lods
lcall
pop
xchg
stos
add
mov
into
inc
push
es
in
je
jge
lock
ficomps
mov
or
test
lds
popa
shrl
add
push
sbb
imul
js
add
cmpb
mov
sub
xchg
cwtl
or
punpckhbw
lret
scas
pop
mov
aad
inc
lock
xor
jb
fstpt
pop
xchg
jnp,pt
pop
mov
gs
or
xchg
or
or
jo
dec
rcrl
fcmovnb
xchg
jo
xchg
sahf
mov
ja
add
mov
imul
and
pop
fs
cmp
pop
mov
inc
dec
or
scas
or
orb
pop
mov
fs
cmp
lods
enter
pushf
cmpsl
sti
adc
in
iret
sub
xchg
jno
ficoms
or
xor
mov
insl
pop
jo
mov
hlt
ret
jnp
hlt
shlb
icebp
insl
cmc
mov
sbb
adc
shrb
add
mov
ds
xchg
mov
xchg
fildll
xchg
push
sub
call
stc
dec
shlb
push
int
xrelease
popa
sbb
ljmp
pop
or
scas
adc
or
pop
cld
cwtl
mov
insl
popl
pop
icebp
das
test
movsl
push
and
divb
stc
mov
xor
fdivrs
pop
add
out
xchg
mov
or
out
mov
shlb
jo
ss
jp
and
mov
xor
movsb
cwtl
roll
push
lahf
mov
jge
sbb
jne
daa
ja
sub
ss
xchg
js
ja
add
jle
jo
nop
pusha
in
xchg
rolb
or
or
insb
mov
lea
fs
ret
inc
jo
push
lods
mov
xchg
push
pop
sbb
xchg
ljmp
pop
and
je
ja
jbe
fistps
sub
add
inc
add
iret
jo
inc
cmc
pop
sub
inc
test
jmp
js
stc
cmp
stos
popa
lds
push
cli
stos
in
pop
adc
rorb
jns
jg
andb
out
cmp
mov
adc
push
sub
xor
lds
shlb
mov
inc
sub
dec
in
and
pop
shrb
dec
add
mov
lret
fwait
int3
dec
ljmp
adc
xlat
out
sub
lods
popa
stos
lret
sub
daa
scas
out
pop
imul
or
xor
push
sbb
mov
push
fwait
pop
imul
xor
div
fdivrl
fwait
mov
sub
inc
test
or
gs
out
xor
sbb
aas
imul
mov
mov
mov
add
jle
xor
lods
loope
xor
inc
xor
sbb
sub
lods
jmp
rcll
push
xlat
push
pop
test
rcll
insl
mov
ret
cld
xlat
or
pop
std
add
sub
leave
fcmove
rol
lds
repnz
xlat
jl
adc
sub
call
mov
aad
xor
lock
imul
aas
jnp
fildl
adc
mov
mov
test
rorb
lret
mov
dec
inc
out
sub
xlat
into
jnp
xchg
sti
fs
arpl
mov
fidivrl
mov
aad
fwait
popf
mov
sbb
jno
xchg
inc
push
imul
jb
inc
mov
or
pop
adc
add
imul
push
in
stos
stos
jb
pop
xchg
js
add
sbb
popa
jecxz
sbb
pop
pop
dec
aaa
fiadds
popa
push
test
jnp
mov
jle
bound
aad
inc
mov
insb
je
sbb
andl
push
and
xchg
xchg
cld
shlb
lods
inc
call
sub
daa
rcrl
outsb
xor
mov
push
rcll
test
popa
xor
and
iret
xor
idiv
pop
mov
pop
push
mov
mov
loope
sbb
mov
arpl
cltd
cltd
repz
dec
repnz
mov
sbb
and
mov
je
dec
add
push
pop
dec
push
stos
fnstenv
inc
dec
setns
sbb
fidivrl
push
notl
out
in
clc
aam
mov
call
pushf
add
pop
mov
pop
adc
pop
adc
data16
mov
jle
stos
jno
shll
lea
sub
sub
or
stos
iret
fcoml
cld
repnz
gs
mov
mov
stos
sbb
inc
mov
lcall
ja
icebp
mov
icebp
xlat
add
data16
mov
roll
mov
fucomp
mov
popf
pop
or
lcall
jnp
arpl
xor
xchg
imul
or
popf
sub
dec
mov
jno
pop
lods
and
mov
pushf
iret
rorl
jge
fcoms
inc
gs
adc
and
repnz
xchg
cltd
js
mov
arpl
add
ret
sub
inc
jbe
cmpsl
jmp
jle
cmc
insl
dec
sbb
xchg
push
jae
cmp
jo
loope
jge
jp
lods
iret
repz
add
lret
sbb
popf
rol
adc
and
ret
xchg
adcb
daa
add
jne
xor
fmuls
pusha
popa
pop
xor
or
mov
jbe
sbb
push
mov
sti
inc
rcr
adc
rorb
sbb
or
fstpt
dec
push
arpl
ljmp
fldl
mov
repz
dec
cmpsl
adc
das
and
cltd
lahf
jno
roll
mov
pop
dec
jns
inc
sti
insb
adc
inc
fsubrl
sbb
pop
divl
lods
sbb
sbb
push
fcomps
in
dec
out
jle
movsl
scas
jne,pt
fwait
je
jecxz
push
xor
inc
test
add
dec
pop
loopne
faddl
mov
add
mov
push
jnp
rcr
inc
fildl
dec
dec
or
pop
stos
mov
lahf
xor
inc
pop
call
and
les
jbe
ja
cmpsb
test
sub
cmc
adc
movb
mov
push
cltd
xchg
dec
and
in
adc
add
insb
es
sbb
mov
dec
push
in
test
js
scas
cmp
xchg
mov
arpl
pop
test
out
mov
cmc
cmp
dec
ret
mov
outsb
nop
mov
lock
cmc
jmp
mov
and
imul
scas
ds
adc
push
jl
rolb
fcoml
cmp
in
daa
push
xchg
mov
xor
jnp
xchg
pop
fisubs
popa
inc
jb
cwtl
into
xor
ret
inc
jne
or
dec
test
adc
or
cli
jp
and
out
call
daa
out
and
dec
hlt
mov
mov
jle
push
dec
in
nop
add
mov
cld
pop
push
sbb
push
fsubrs
and
adcl
insb
shlb
in
sbb
fldl
nop
insl
fdivl
push
jecxz
gs
lea
jmp
push
mov
jl
orl
lret
mov
mov
jno,pt
ss
inc
arpl
inc
jecxz
loope
add
lcall
lret
and
jle
into
aaa
ja
cmp
sub
or
mov
or
outsb
sbb
mov
push
dec
or
pop
mov
jnp
out
pop
outsb
loopne
mov
adc
pop
push
dec
xchg
repnz
sub
rcrl
js
jmp
es
movsb
add
movsl
popf
mov
dec
pop
clc
jge
or
jge
dec
mov
cmc
xor
stos
jl
xor
xchg
xchg
or
sub
jne
xor
lods
pop
adc
mov
push
call
in
jl
sarl
and
xchg
jns
push
sbb
xchg
out
out
add
test
fdivp
push
adc
out
loope
push
push
lock
std
lcall
lret
or
sbbl
mov
dec
adc
mov
mov
insl
ja
jecxz
xor
add
stos
jb
dec
adc
mov
and
aam
faddp
push
sahf
xchg
dec
xor
mov
leave
push
push
xchg
shrb
jnp
dec
faddp
les
ss
dec
or
sbb
mov
pop
adc
ret
stos
out
and
fisttps
cmpsl
jge
ficoms
addr16
test
aaa
pop
add
pop
jns
fstps
mov
cld
stos
add
dec
je
xchg
sub
adc
xchg
roll
inc
sbb
test
jnp
dec
lock
int3
fld
mov
dec
lcall
adc
and
cmp
pop
stc
add
xor
pop
push
dec
aaa
les
icebp
pop
push
movsb
push
jecxz
daa
push
xor
sub
mov
dec
dec
das
push
aas
xchg
ljmp
insb
leave
sbb
cmpsl
fisubrl
xor
int3
cmp
pop
iret
pop
cmpsb
add
sbb
ret
jecxz
sbb
mov
add
sbb
add
jmp
aam
outsb
cmp
mov
dec
scas
call
and
aam
in
ficoml
pop
xchg
cmp
mov
lods
mov
scas
mov
fistl
fisttpll
inc
leave
aad
and
mov
int3
pusha
sbb
idivb
cltd
push
iret
enter
loop
popf
mov
daa
in
push
dec
mov
mov
mov
add
popa
push
sbb
push
jo
pop
fisubrl
fistpl
gs
pop
lret
mov
stc
cmpsb
sub
inc
cmp
lcall
addr16
lcall
lods
dec
xchg
mov
inc
lahf
je
mov
pop
aad
jne
sub
movl
dec
lret
in
nop
adc
imul
mov
pushf
mov
xchg
addr16
nop
mov
std
pusha
jae
sti
ss
shrb
sbb
xchg
or
xchg
std
in
lret
popa
imul
cli
fnstsw
loop
call
add
test
sbb
bound
daa
pop
sarb
xchg
mov
add
mov
cltd
xchg
mov
jnp
cmpsl
mov
in
loop
insl
insl
jno
aas
sbb
leave
idiv
xor
scas
cmp
ret
icebp
mov
adc
imul
or
jbe
pop
xchg
pop
out
cld
mov
out
cmpsl
mov
push
dec
cwtl
xor
mov
add
jne
push
rcll
repz
push
cwtl
adc
gs
jns
and
push
mov
dec
jg
insb
add
jbe
es
jl
xchg
stos
mov
fwait
add
loopne
fwait
aaa
xor
test
sti
gs
clc
jne
les
mov
movsb
xor
je
dec
mov
lret
dec
adc
nop
jp
gs
and
icebp
xchg
xchg
je
push
push
jno
std
cmp
mov
dec
aas
sbb
icebp
cmp
pop
xor
jge
popa
cmp
add
cmpsl
jne
inc
pop
test
pusha
out
adc
popa
jae
inc
rcrb
call
mov
stc
jp
sbb
fcmovb
mov
jb
sbb
es
add
pop
int
push
arpl
and
clc
lea
mov
loop
gs
test
sub
cli
roll
mov
xor
add
imul
rorl
inc
mov
cld
adc
push
mov
pop
insl
js
or
or
jmp
jle
lods
outsb
xchg
jmp
or
adc
movsl
stos
mov
fdivrl
fildl
subl
cmp
cltd
js
test
mov
mov
add
cmpsl
inc
fidivl
cmp
gs
shll
cs
cmp
push
mov
xor
dec
mov
ljmp
nop
push
fadds
test
cmp
pop
cmp
mov
pop
push
pushf
mov
cmp
insb
dec
lds
mov
icebp
adc
mov
jl
inc
out
fsubr
jmp
or
mov
loopne
add
adc
jecxz
stc
js
fwait
push
xchg
or
sbb
insb
mov
jb
or
fnstsw
test
pusha
je
mov
dec
adc
xchg
pop
and
mov
xor
jo
or
stc
out
hlt
push
movsl
jmp
inc
ficoms
popa
cmp
repnz
cwtl
xchg
fimull
hlt
cltd
inc
jae
jno
mov
jmp
or
jp
scas
and
xor
push
jb
jecxz
stos
outsb
shll
ror
jle
ja
add
jbe
shrl
jle
iret
and
push
repnz
and
xor
imul
and
push
ds
dec
lahf
fildll
dec
ret
popf
call
ficomps
mov
jnp
jp
xor
cmp
jmp
mov
and
out
fbstp
mov
push
lret
add
ret
lahf
push
out
mov
dec
loop
cmpl
sub
fcoml
sbb
cli
cmp
inc
aam
pop
xor
or
push
call
adc
into
aad
or
insl
pop
sub
sub
stos
cmp
cmp
push
jns
pop
mov
inc
fldl
js
xchg
add
mov
in
out
lret
cmp
mov
ret
inc
sbb
xchg
dec
or
pop
adc
inc
cmpsl
andb
mov
mov
mov
push
sbb
adc
xchg
cltd
ds
xchg
in
out
jno
sarl
dec
mov
xchg
sbb
idivl
jae
jl
idivb
add
ja
dec
jnp
xchg
xor
mov
mov
push
js
mov
das
aad
pop
push
cwtl
mov
fcomps
ret
scas
cmp
pop
cltd
and
push
cmp
add
mov
in
in
rclb
notb
sbb
enter
mov
push
shrl
lods
les
jbe
xor
push
cmp
ja
mov
pop
leave
int3
jnp
mov
lret
scas
cmc
sbb
jo
test
xor
out
jo
push
sub
push
or
aaa
jge
sahf
call
xchg
push
shl
hlt
or
fisttpll
cmp
nop
mov
mov
mov
mov
inc
mov
repnz
push
add
ret
sub
xchg
jmp
loope
inc
loopne
adc
ret
in
dec
icebp
scas
pop
std
popa
jb
call
lds
clc
popf
jg
pop
adc
inc
and
inc
inc
jl
inc
test
clc
scas
jns
push
xchg
lea
add
fsub
call
or
fldcw
cmp
cmp
and
fmuls
nop
adc
mov
shll
pusha
aas
jge
mov
inc
xchg
jl
cmp
idiv
jns
jae
add
xor
cmp
cwtl
lcall
sbb
add
nop
or
test
cmp
mov
imul
lret
jae
shrb
mov
mov
push
mov
ret
mov
push
mov
dec
rcrl
mov
es
imulb
out
into
jne
mov
je
and
pop
in
dec
xor
out
out
pop
mov
js
mov
push
in
std
rcr
into
adc
jns
or
movsl
xor
push
push
fucomp
inc
mov
int
mov
jbe
and
decl
fldenv
pop
cmp
and
insl
xor
test
mov
stos
aam
pop
pusha
xor
xor
push
pop
icebp
adc
jp
js
mov
pop
mov
outsl
popf
mov
push
outsb
add
mov
gs
scas
pop
mov
push
xor
dec
sbbb
sbb
add
call
ficompl
and
bsr
lds
les
mov
ljmp
mov
push
dec
outsl
jnp
aas
xchg
addb
stos
adc
pop
orb
loope
sub
mov
pop
adc
lds
cmp
fstps
jle
loopne
mov
in
stc
dec
fimull
lret
sub
adc
and
inc
cmp
push
insl
movsl
inc
lret
outsb
jmp
pop
aas
lahf
lock
pop
jle
dec
scas
push
jmp
pop
dec
sbb
int3
mov
xchg
js
test
sti
xchg
das
gs
sbb
push
xchg
jl
call
out
ds
pop
cmp
xor
xchg
xchg
idiv
mov
push
adc
adc
in
jb
cmpsl
mov
mov
adc
cli
lret
pop
pop
pushf
dec
push
xor
fldt
fadds
hlt
enter
jns
lds
inc
xchg
pop
add
inc
stos
sub
stc
fmull
fcom
aad
mov
addr16
cmp
lret
icebp
test
add
mov
in
aad
imul
adc
test
mov
add
pop
xor
ret
add
insl
test
mov
sbb
nop
pop
mov
decl
xchg
stc
mov
or
cmp
cmpsb
cli
cltd
xor
adc
jne
and
popa
cmp
hlt
add
jne
out
fwait
pop
jecxz
inc
mov
pop
mov
divb
mov
shll
push
jle
aas
shrl
xchg
test
inc
pop
jno
ret
mov
sahf
psubq
add
sub
mov
ffree
jnp
mov
mov
jmp
mov
sub
mov
aam
cmp
insb
adc
call
dec
and
xchg
push
dec
cli
lods
adc
or
arpl
jne
aad
shrl
xor
xor
sti
lods
scas
push
bound
dec
sbb
lcall
repnz
cmpsl
or
sbb
mov
fildl
sbb
xchg
out
das
push
bound
ret
xor
rcll
or
cmp
and
movb
notl
push
fucomip
aas
lcall
dec
inc
xchg
mov
mov
imul
addr16
xchg
ds
dec
psubb
pop
pusha
lods
mov
out
inc
lret
stc
mov
icebp
stos
inc
jge
pop
mov
xlat
iret
xor
mov
dec
pop
pop
js
push
not
lods
sti
ljmp
fidivrl
or
inc
sbb
lea
out
xlat
xchg
orl
xchg
sbb
cltd
fldcw
mov
repz
fnstcw
mov
mov
push
or
mov
sbb
inc
push
adc
daa
add
add
xchg
xor
pop
lock
xor
stc
test
icebp
mov
xchg
ds
jae
mov
push
mov
fcmovne
xor
lret
pop
stc
fcmovb
inc
adc
xchg
fidivs
or
xchg
jns
mov
sub
stc
sti
daa
aas
cmpsb
mov
pop
cwtl
outsb
xchg
arpl
data16
lret
push
je
enter
fimuls
popl
enter
sti
mov
stc
punpckhdq
out
jb
cmpsb
imul
mov
mov
mov
in
mov
mov
cmp
pop
scas
gs
xchg
sbb
jne
lods
pop
jle
inc
notb
jb
cmpl
jl
test
sbb
in
sub
jl
test
push
xchg
push
in
mov
jmp
in
cmpsb
pop
movsb
mov
leave
daa
int3
aas
int
fidivrl
mov
lock
push
jno
fstpl
movsb
sbb
jne
addb
rcll
xchg
call
roll
fcmovne
jmp
out
stos
aam
jg
inc
mov
jecxz
loopne
mov
rorl
add
xor
inc
pop
outsl
rcl
adc
inc
fisubrs
mov
jmp
ret
loopne
push
out
mov
movsb
dec
mov
add
rcrb
xor
sbb
adc
or
jp
jle
sub
or
orl
mov
push
in
xor
imul
push
outsb
fcomi
xchg
push
mov
mov
leave
inc
xchg
repz
fnstcw
nop
xor
sub
cmc
or
push
fs
ret
cmp
fldcw
mov
enter
rorl
movsl
mov
sbbb
dec
sub
outsb
aam
aad
faddl
dec
push
jmp
adc
ffreep
inc
pop
mov
test
enter
push
mov
out
mov
lea
arpl
enter
stos
jg
into
cs
adc
mov
enter
addb
dec
jnp
dec
orl
cmp
fwait
movsl
cmp
jae,pt
ds
mov
jnp
nop
xor
stc
pop
jns
lods
cmp
mov
pusha
shl
jg
push
dec
sub
add
xor
pop
mov
jno
mov
jno
adc
xor
sbb
mov
fiaddl
cmp
cwtl
lods
mov
lea
add
pushf
pusha
fcompl
in
xchg
fildl
stc
lods
sbb
arpl
stc
sub
cmp
sub
cmpsb
div
outsl
ret
aas
mov
xor
sar
sbb
sbb
mov
outsl
lret
incb
jnp
pushf
dec
xor
mov
or
sbb
cmpl
sbb
sbb
pop
pop
or
sbb
push
add
jnp
mov
imul
inc
push
rclb
std
xor
or
out
add
jo
cmp
mov
add
cmp
xor
gs
xchg
add
mov
add
ljmp
es
imul
jle
test
or
insl
mov
push
pop
mov
cmp
push
mov
insl
mov
in
ss
icebp
orb
sbb
div
mov
jmp
pushf
cmp
dec
add
push
pop
lea
push
pop
scas
xchg
loop
lcall
out
fistpl
xchg
pop
test
or
xor
test
fildl
cmp
pop
stos
mov
outsl
cli
pop
mov
pop
and
mov
loopne
dec
sub
fstl
jbe
sbb
mov
data16
mov
dec
mov
inc
loopne
inc
mov
mov
scas
cmp
nop
mov
or
loop
or
mov
sbb
shl
mov
pop
pop
movsl
aam
inc
xchg
jge
test
mov
ret
fdivp
repnz
lods
cmp
sarl
int3
je
ficomps
sub
movsb
and
rol
dec
lods
leave
mov
sbb
or
mul
and
fs
jo
test
sbb
cwtl
aaa
jo
or
jl
mov
xchg
out
sbb
imul
sub
cld
inc
sbb
and
cwtl
stc
cltd
enter
pop
pop
inc
scas
int
mov
push
add
push
rcrl
push
int
push
in
push
aaa
lods
adc
lret
xchg
push
rorl
and
icebp
push
shll
test
mov
push
xchg
test
mov
cld
ss
push
rsqrtps
mov
sbb
push
adc
cwtl
mov
xorb
adc
popf
out
inc
lock
mov
outsb
cmp
fdivrs
adc
mov
enter
ss
mov
sub
and
pop
sub
inc
test
adc
sbbb
adc
jmp
test
push
adc
inc
fildll
fnsave
cmpsl
repnz
cmpsb
idiv
and
push
sti
out
and
fwait
popa
loopne
cmpsl
clc
sub
inc
insb
dec
push
sar
pop
jg
mov
jl
push
dec
mov
xchg
popf
aam
mov
les
lods
loop
sub
jle
sbb
cmpsl
mov
dec
xlat
sbb
inc
fstps
out
sbb
and
cmp
or
mov
dec
sub
sub
mov
mov
gs
fdivl
gs
xchg
sub
ret
fcoms
and
rcr
pop
adc
fisttpll
sbb
jmp
or
fmulp
mov
ds
bound
or
add
push
add
cmp
mov
pop
rclb
ret
jle
daa
xchg
mov
dec
pop
jbe
nop
incb
pop
xor
mov
mov
adc
mov
int
mov
test
ret
rclb
adc
clc
std
sarl
sub
cmp
jmp
mov
rcrb
dec
fiaddl
inc
loop
add
lods
xchg
inc
dec
stos
shlb
subl
repz
lahf
push
movd
in
shlb
cld
ret
push
jns
hlt
shrl
pop
stos
clc
fildl
sub
dec
iret
shlb
nop
dec
and
mov
jl
xchg
sub
cltd
wrmsr
sbb
mov
sub
mov
jne
lock
lds
jge
fdivp
pop
scas
gs
or
lret
xchg
mov
jmp
add
mov
pop
sub
adc
lahf
dec
sub
jo
insb
push
mov
repz
dec
sub
mov
fildll
int3
add
adc
xchg
mov
push
xchg
or
lock
pop
jno
and
inc
or
mov
leave
fnstcw
xchg
test
jae
dec
add
and
add
ljmp
in
fildll
aaa
jb
out
ss
scas
insl
cmp
inc
pushf
xchg
pop
xchg
and
push
dec
mov
push
jnp
ret
cmp
sbb
je
jne
insb
cwtl
outsb
sub
jbe
add
test
mov
test
aad
cmp
sahf
movsb
adc
popa
cmp
adc
xchg
or
stc
dec
push
xchg
jne
jg
jne
scas
aas
ljmp
dec
mov
or
add
imul
leave
shrb
mov
psrlw
ljmp
mov
or
mov
repz
dec
cmc
add
jns
inc
sub
ret
lods
adc
outsl
push
jmp
fistps
xor
fstl
mov
cmp
bound
aas
outsb
pop
test
sarb
mov
xor
push
fisubl
lods
pop
push
mov
jp
xlat
sbb
fmull
inc
stos
imul
push
mov
pop
fsubrl
xor
push
add
push
mov
sub
out
rcll
or
jge
sbb
sbb
cmpsb
lret
jge
jge
jns
sbb
inc
enter
cmpsl
ss
test
subl
inc
jnp
or
push
in
adc
insb
je
lds
pop
mov
or
and
dec
inc
les
lret
rcrb
pusha
aam
jle
int
sbb
jo
xchg
mov
stos
adc
mov
mov
pop
add
sbb
shrl
scas
ffreep
sub
cmp
test
sub
stos
inc
jp
sub
rclb
pop
jne
mov
daa
test
pop
push
add
add
fisttpl
ja
cmp
stc
frstor
jbe
bound
fs
sahf
ss
mov
stos
fdivl
in
mov
addr16
xchg
gs
pop
push
bnd
mov
sub
call
loop
addl
jo
cwtl
add
push
xor
pop
jne
loope
iret
loopne
adc
cmpsb
mov
test
and
sti
xchg
jmp
std
aas
ror
push
into
negb
or
adc
fwait
cmp
icebp
mov
mov
cmc
loope
sarl
mov
push
dec
sub
or
push
in
xlat
lods
pop
dec
outsb
fistps
addl
add
cmp
xor
lds
dec
ljmp
je
bound
in
push
mov
sub
fildl
popf
imul
push
in
sbb
or
clc
movsl
xchg
data16
mov
adc
fdivrs
cmp
out
jb
ret
adc
into
out
inc
mov
push
scas
add
jle
jno
mov
pushf
shr
dec
loope
jmp
inc
dec
sbb
bound
cmp
lods
pop
dec
aam
int
popa
lahf
cwtl
out
pop
js
push
std
dec
sbb
call
push
mov
adc
pop
sti
xlat
mov
inc
dec
add
out
jecxz
insb
adc
and
or
iret
xor
jae
sbb
sub
add
hlt
aaa
sahf
clc
jle
test
cmp
mov
push
jmp
pop
mov
lock
mov
cmp
sbb
rol
cmp
xchg
insb
cmpsb
add
cmpsl
iret
sub
int3
pop
in
push
sbb
dec
add
cs
sahf
pop
dec
stc
aam
shrl
dec
std
clc
mov
jb
lahf
sub
leave
mov
mov
test
mov
cmpb
or
add
add
in
add
outsl
fs
cmp
sbb
and
push
sbb
push
jo
jo
ljmp
test
int
dec
dec
mov
push
daa
imul
pop
jo
push
jl
and
dec
fwait
lret
icebp
imul
decl
clc
orb
and
mov
or
jmp
adc
jecxz
test
mull
mov
add
rclb
ljmp
shrb
jmp
jns
or
test
std
add
jno
sahf
je
push
jne
push
fcomp
sbb
jnp
mov
std
imul
repz
dec
cli
mov
int3
stc
into
fmull
jae
out
jo
insb
add
adc
xor
push
adc
in
xchg
sub
rclb
sbb
rcr
stos
mov
insb
or
sbb
cmp
xor
mov
ds
popf
jo
das
fisubrs
sbb
in
xchg
shll
subb
cltd
or
xor
mov
pop
negb
shll
mov
add
pop
pop
out
xchg
xlat
cltd
xor
add
out
les
sbb
sbb
fmull
rorb
and
insb
dec
pop
xchg
mov
loope
adcb
std
clc
cli
fstl
or
and
mov
sub
pop
out
aam
sub
jne
push
inc
mov
adc
xchg
and
dec
insl
mov
lcall
cwtl
insb
hlt
inc
enter
sub
and
lods
sbb
rolb
mov
aaa
mov
xchg
mov
ja
dec
in
outsl
jp
cwtl
fldenv
and
sbb
mov
xchg
pushf
and
aas
and
xor
fcoml
sbb
fwait
and
mov
push
jle
shr
mov
fadds
movsl
pop
mov
push
and
mov
pop
pop
and
adc
movsb
repnz
das
mov
mov
fst
jb
fbld
mov
cmp
popl
fiaddl
jp
popa
mov
sbb
js
pusha
cmp
mov
xor
aam
ret
lcall
mov
mov
lock
pop
push
or
mov
pop
or
out
jne
sahf
inc
in
inc
aam
xchg
pop
pop
mov
ds
in
stos
or
pop
adc
addr16
push
and
pushf
xor
fs
repz
or
das
inc
adc
xor
sbb
imul
out
movsb
inc
sub
or
cmc
dec
imul
inc
cmp
movsl
dec
in
pusha
mov
aaa
lods
sbb
stc
shrl
cltd
xchg
das
dec
in
fisubs
insl
aaa
iret
jno
pop
push
pop
fldcw
cs
cmpsb
cltd
cmp
push
insb
mov
fwait
push
cmp
enter
sbb
cmpsl
pop
adc
or
xchg
inc
or
adc
cltd
cmp
sahf
in
push
jl
mov
sub
cmp
mov
enter
mov
rorb
fsubr
out
xor
cmp
call
mov
dec
sti
pop
scas
test
mov
push
leave
test
leave
cld
mov
mov
inc
dec
push
orb
cmp
stc
fsubrl
or
popf
sbb
inc
filds
ja
test
mov
shl
inc
push
lods
lret
lret
shl
and
push
in
lods
lret
or
jl
leave
pusha
addr16
cltd
pusha
mov
xchg
cmp
push
xor
dec
nop
sbb
xchg
cltd
rorl
hlt
lock
push
cli
leave
and
cltd
inc
cmp
in
shll
pop
dec
sbb
lahf
dec
sti
rclb
bswap
cmpl
dec
loop
or
not
adc
mov
rcrb
pop
and
cld
sbb
jno
clc
cmp
insl
out
and
repz
js
add
cmpsb
jle
aam
pop
sub
mov
adc
arpl
test
mov
add
icebp
sbb
or
jno
jmp
clc
iret
push
inc
jae
ljmp
cmp
nop
sbb
mov
xchg
sti
mov
mov
sub
mov
or
cmpsb
adc
jo
roll
inc
in
sub
push
pop
scas
js
mov
add
into
sar
out
pop
add
dec
shl
dec
mov
rorl
ja
adc
cmpl
fs
inc
hlt
xchg
scas
pop
sbb
jae
mov
xchg
mov
insl
mov
mov
mov
arpl
sbb
outsl
jno
pop
pop
sti
aaa
pop
aad
sub
and
push
lods
stc
xchg
loope
rcrb
addr16
repz
jmp
mov
rol
push
or
xchg
aam
sub
cli
pop
mov
jno
sbb
ss
xchg
sbb
cwtl
int
sub
cmpsl
mov
daa
std
cmp
mov
hlt
sbb
add
subb
adc
cmp
xchg
movsb
push
pop
fnsave
movsl
ss
mov
jle
push
xchg
lds
xchg
jno
pop
jbe
xorb
leave
lds
jl
rorl
adc
fwait
std
sahf
loope
hlt
mov
inc
into
out
mov
outsl
pop
loop
jbe
daa
sbb
aad
sbb
mov
and
dec
in
inc
inc
mov
inc
jp
ljmp
mov
or
pop
cmc
daa
mov
xchg
push
push
loop
jmp
pop
or
push
fstps
inc
addr16
iret
mov
rclb
movsl
xchg
add
push
mov
orl
inc
and
ja
mov
xor
addl
test
loop,pt
std
mov
outsb
add
xchg
jnp
ret
mov
push
add
mov
mov
jmp
xchg
and
das
pop
fldcw
pop
and
dec
adc
fiaddl
pop
outsl
dec
aam
push
jno
jno
cmpsl
pop
and
gs
cmpsb
inc
jmp
mov
hlt
repnz
xor
and
cwtl
mov
pop
daa
mov
test
hlt
and
push
jge
adc
lret
fwait
xchg
mov
inc
outsl
sub
push
dec
je
gs
notb
sbb
xor
jl
sub
add
sub
xchg
mov
mov
daa
sub
cmpsb
out
and
in
mov
dec
sti
or
repnz
ljmp
in
js
pop
fbstp
pop
addb
mov
jns
xchg
mov
xchg
adc
test
xchg
clc
loope
jge
lret
push
mov
xchg
arpl
or
lock
pop
sets
dec
mov
sbb
sub
je
mov
imul
clc
mov
popa
inc
adc
xchg
adc
loop
shll
jmp
dec
xor
and
imul
fwait
xchg
push
inc
adc
js
push
in
mov
dec
mov
sti
rol
dec
js
jmp
popf
pop
push
push
aas
inc
test
cmp
jae
sub
adc
out
cmpsb
lds
xchg
dec
aad
sub
sub
flds
mov
popa
shr
shrl
repnz
pop
int
jne
scas
les
fadds
ret
sbb
fisttpll
jno
xor
rorl
mov
mov
cmp
push
pusha
xchg
push
inc
loopne
cmpsl
shll
dec
pop
jmp
gs
int3
loop
inc
inc
fs
orb
outsb
add
pop
jne
out
movsb
lods
mov
out
cli
mov
cmp
inc
mov
mov
aam
pop
sub
xor
mov
je
roll
xor
mov
mov
mov
or
test
out
sbbl
bound
jp
xor
testb
fisubl
dec
std
inc
rclb
and
xchg
pop
inc
dec
lahf
or
ds
dec
sub
jae
cmp
mov
mov
xor
or
in
and
mov
out
sti
sub
add
out
mov
fdivp
push
aad
jo
or
arpl
enter
out
sbb
out
js
mov
pushf
cwtl
sbb
mov
push
jo
iret
imul
aas
lds
cmpsb
scas
adc
jge,pt
sub
addr16
jae
fs
fldcw
push
xlat
push
mov
lea
cmp
out
mov
push
out
imul
mov
mov
jmp
push
in
cltd
or
cmp
mov
cmpsl
push
sbb
push
ss
sahf
repnz
adc
mov
add
sub
dec
push
mov
lds
xor
popa
cmpsl
adc
pop
cld
or
gs
loope
shl
bound
mov
lret
js
mov
cwtl
sub
inc
es
adc
pop
scas
adc
mov
test
and
das
sub
mov
mov
popa
movsl
gs
jo
xor
out
aad
ret
or
mov
adc
push
inc
add
mov
pop
push
fisubrl
sub
sub
xchg
pop
int3
sahf
mov
and
out
push
dec
pop
test
ret
and
push
dec
mov
jno
shlb
frstor
in
mov
hlt
jno
jbe
adc
cli
mov
xor
sbb
pop
mov
inc
outsb
adc
sbb
inc
pop
fistpll
fstpl
xor
inc
int3
inc
mov
or
or
je
adc
xchg
repz
jo
add
shrl
in
mov
sbb
sarb
add
push
jecxz
test
sbb
xlat
mov
xor
cwtl
aas
push
idivb
lods
inc
sbb
hlt
cmpsb
inc
out
ret
push
jb,pt
iret
clc
mov
fimuls
cmc
clc
adc
adc
mov
inc
pop
test
int3
xlat
imul
stos
arpl
add
sub
jmp
mov
setbe
push
adc
jle
push
lcall
addl
and
add
rcll
stc
lods
addr16
sbb
ret
mov
stos
sub
dec
test
cs
mov
stos
xor
inc
icebp
pop
lea
inc
enter
pusha
adcb
movsl
loopne
test
cli
cmp
into
mov
jae
inc
xchg
lock
imul
cmpsb
test
sub
cmp
in
sub
int3
mov
xor
ret
cmp
pop
out
mov
xchg
jl
sbb
in
dec
jo
pop
orl
sbb
cmp
adc
cs
jl
xchg
mov
dec
pop
adc
adc
sbb
insl
inc
jae
nop
bswap
adc
xchg
inc
leave
add
test
pushf
cmpsb
cmp
out
mov
sbb
pushl
push
das
popf
jp
jns
push
xor
xchg
cmpsb
mov
xchg
sbb
popf
inc
clc
ret
popa
imull
cmpsl
sub
call
popf
jg
push
aas
into
dec
mov
push
ror
iret
mov
lahf
jb
lahf
fcompl
sarb
push
or
ret
push
jo
push
xor
fisubrs
repnz
pushf
xor
xor
and
js
shrb
jne
stos
xchg
inc
fnstsw
jmp
js
xor
adcl
cmp
shll
and
inc
lret
in
xor
imul
or
addr16
xchg
adc
mov
sbb
dec
push
mov
mov
xchg
dec
movsl
psubd
jl
push
ret
jmp
dec
lods
sbb
iret
incb
xchg
jg
pop
push
mov
add
popa
mov
xchg
xchg
adcl
or
push
jo
mov
dec
jns
dec
xor
mov
test
mov
adc
xchg
ljmp
fsubrl
pop
add
out
inc
and
arpl
cmp
outsl
mov
ljmp
jno
es
ffree
ss
inc
fwait
repz
push
cltd
pop
out
leave
inc
fildll
inc
in
pop
pop
daa
mov
test
loop
sbb
mov
stc
pop
or
and
out
and
mov
push
fdivs
jb
shlb
dec
mov
testb
sbb
inc
mov
in
aam
push
sbb
into
xchg
ljmp
repz
fiadds
fisubrl
leave
shlb
sub
sub
jne
xchg
push
xchg
insb
mov
movsb
sub
xor
jnp
inc
andl
ljmp
mov
loop
pop
fcomp
pop
stos
pop
pushf
dec
add
bndldx
push
and
das
lods
lcall
in
add
rcrl
jg
decl
fsubrl
xchg
rolw
inc
push
imul
negl
addr16
ret
sar
popa
mov
push
dec
mov
cld
push
or
orb
mov
push
and
jbe
mov
xchg
push
jnp
jle
fstl
jns
cmp
cmp
xor
popf
daa
mov
mov
push
in
dec
call
int
inc
sti
pop
outsl
xor
add
test
push
add
das
js
or
addb
xchg
xchg
push
insb
cmp
sbb
or
sbb
adc
jne
dec
sub
aas
mov
das
cwtl
int
sarl
mov
nop
pop
fs
pop
mov
adc
add
aaa
nop
enter
fs
push
in
mov
pushf
add
cmp
xlat
push
int
nop
dec
shrl
sti
dec
mov
jb
dec
fs
mov
cmc
pop
lods
jbe
push
lahf
stos
push
adc
and
xor
push
in
ret
xor
and
add
sbb
and
out
xchg
andl
mov
mov
cltd
out
ret
lret
push
call
and
ret
movsl
popa
scas
into
dec
or
or
das
lret
fcomip
sub
ja
shrb
mov
aaa
iret
mov
pop
cli
cmp
pop
pop
xorl
je
or
fs
pusha
aas
mov
sub
adc
std
push
pop
adc
dec
push
mov
jl
push
and
scas
popa
inc
mov
sub
mov
pop
insb
xor
test
negl
rcll
faddl
sub
dec
fistps
mov
sub
mov
push
inc
jbe
push
add
das
aad
mov
test
fisttps
lcall
dec
iret
xorb
int
hlt
add
enter
jl
inc
sub
add
outsb
mov
xor
lods
xor
xlat
inc
test
mov
inc
xor
sahf
cli
mov
jmp
int
xor
push
mov
int3
cmp
or
jnp
mov
push
movsl
jno
addb
mov
dec
mov
mov
xchg
or
cmp
xchg
mov
pop
out
lods
xor
dec
shll
sub
jae
mov
inc
arpl
nop
mov
filds
inc
pushf
push
sbb
shrb
movsb
mov
popa
insl
pop
cmp
mov
sub
in
mov
dec
sbb
mov
outsb
std
outsb
nop
dec
ret
jno
in
call
push
push
inc
or
insb
popa
inc
fcmovnbe
lea
pop
add
loop
and
mov
ret
xor
scas
mov
rorl
add
cltd
cmpl
iret
push
jae
insb
adc
pop
ljmp
mov
add
hlt
xor
adc
push
mov
or
push
std
cmp
scas
lahf
sub
adc
test
cwtl
push
push
aaa
jecxz
ljmp
imul
mov
inc
mov
repz
cld
jmp
fwait
lds
fxch
dec
cmp
icebp
mov
jp
fimull
adc
push
jmp
jle
aam
test
icebp
in
ljmp
popf
inc
push
or
mov
iret
outsl
jp
sbb
inc
xor
test
aam
std
mov
decb
jle
push
cmp
cmp
cli
inc
out
mov
push
mov
lahf
insl
adc
sbb
mov
cwtl
into
and
pop
xor
mov
pop
fsts
mov
sbb
mov
or
scas
mov
mov
jge
dec
rep
push
mov
xor
icebp
in
out
ret
mov
mov
or
cs
jns
mov
ret
xchg
idivb
rcr
push
add
cld
lods
mov
xorb
sahf
out
cmc
outsb
addr16
loopne
mov
aad
test
rolb
out
pushf
add
ret
mov
sbb
add
orl
lods
in
in
lds
sahf
je
outsl
enter
test
xor
aad
xor
dec
pop
neg
imul
mov
lods
sub
jno
jo
inc
rcll
dec
scas
xor
lret
data16
cmp
cmp
mov
jge
rcll
aad
pop
mov
push
stos
jnp
inc
clc
pop
sbb
dec
xchg
sahf
adc
cmpsb
xor
ljmp
neg
les
mov
sbb
dec
or
lock
mov
jae
fisttpll
mov
sti
mov
add
test
xchg
xor
xchg
mov
sqrtps
leave
jbe
sub
sbb
lahf
daa
add
mov
inc
push
add
push
insb
cmp
mov
xchg
mov
xchg
es
orl
repz
jecxz
jb
mov
repnz
out
nop
jp
xor
fildl
sti
icebp
mov
popl
test
xorb
mov
xchg
pop
or
xor
or
outsl
arpl
je
jne
les
push
ja
xorb
enter
psrld
out
xor
or
imul
xchg
fisubrl
je
mov
repnz
je
ss
push
fdiv
lcall
jb
add
pop
and
pop
push
xor
and
push
shll
das
jns
pop
cmp
jno
pop
nop
mov
inc
cmc
test
sub
int3
stos
lahf
sbb
and
imul
outsl
pop
loope
inc
cli
sub
lcall
push
xchg
out
adc
mov
out
xor
dec
push
jbe
xchg
dec
xchg
mov
or
pop
mov
cmp
or
test
dec
push
cwtl
sub
fistl
xor
cmpsl
nop
and
aam
adc
adc
inc
insb
push
dec
mov
add
dec
lods
addr16
mov
daa
lods
lea
mov
gs
imul
test
sbb
sbb
xchg
shll
jmp
fisubl
jne
pop
sub
sub
and
pop
sub
les
xor
fsubp
jne
or
push
pop
jo
adc
inc
push
lock
in
rorl
adc
push
sub
mov
xor
push
aaa
add
jno
popa
mov
mov
repz
push
and
sub
popf
dec
push
inc
xor
jle
inc
clc
in
jl
sbbl
cmp
scas
outsl
lods
xor
adc
lds
les
aaa
sub
pop
pop
decl
pusha
mov
dec
add
mov
inc
leave
cmp
xchg
push
cmp
push
inc
xchg
fiadds
push
iret
push
sarb
pop
xchg
nop
push
insl
mov
push
jmp
sub
dec
pop
xchg
inc
andb
mov
inc
popf
push
sbb
dec
and
dec
scas
push
cltd
cmpl
lahf
stos
mov
insb
fcom
mov
mov
idiv
xchg
and
xchg
adc
shlb
sbb
in
push
icebp
mov
aas
jmp
cmp
ja
mov
pop
xchg
xchg
fcoms
cmp
in
rcrb
adc
push
mov
test
xchg
aaa
mov
sub
cmp
cld
ret
add
ljmp
push
push
leave
cmp
mov
subl
and
sub
jbe
fcmovnbe
cs
cmp
inc
aas
jl
cltd
push
xchg
sbb
sti
loopne
mov
outsb
dec
std
movsb
pop
lock
and
push
sub
mov
adc
sub
jnp
loopne
mov
sbb
shlb
xor
jno
push
push
fmull
lea
dec
int3
pop
adc
leave
mov
cmp
std
stos
jbe
push
loope
inc
cmp
cmp
cmp
pop
cmp
popa
mov
loope
dec
out
push
jg
jne
stos
and
int
xor
int3
pop
push
cmp
sbb
dec
adc
mov
test
mov
dec
and
sub
sbb
jp
jnp
lret
add
inc
outsb
or
cs
and
repz
cmp
push
orb
xchg
movsl
jns
aaa
cmpl
arpl
lds
jecxz
xchg
add
mov
popa
sbb
nop
aaa
sahf
dec
and
or
stc
inc
movsb
scas
inc
sbb
inc
mov
mov
inc
popf
dec
popa
inc
lods
popa
adc
popa
adc
addl
mov
insl
pop
addb
inc
jecxz
in
xlat
push
xchg
xchg
in
js
push
xor
lods
adc
rcl
and
or
test
mov
jl
mov
adc
sub
lcall
xchg
inc
pushw
xchg
cmpsb
or
dec
loope
repz
pop
popf
roll
jo
and
mov
rcll
mov
jecxz
out
out
loop
push
lret
mov
rcrl
dec
ret
mov
sbb
mov
movb
hlt
call
dec
repz
push
xchg
push
cmpsb
adc
cmp
mov
out
push
inc
pop
dec
repnz
inc
and
hlt
subb
push
adc
and
scas
mov
lahf
cmp
adc
dec
fs
sub
cwtl
or
push
lahf
int
inc
imul
cmp
pcmpgtw
or
lcall
pop
inc
or
jnp
and
push
push
sbb
je
or
push
push
insl
lret
push
pop
sub
ljmp
adc
test
je
push
pushf
mov
mov
and
fdivp
mov
dec
mov
imul
push
dec
mov
cmpsb
mov
inc
mov
mov
sub
mov
arpl
cmp
fwait
add
pop
sub
mov
xor
pop
jnp
scas
mov
enter
mov
pop
jb
cmpxchg
movsl
rorb
stos
aam
adc
subl
push
mov
sub
mov
mov
or
daa
outsl
in
xchg
push
scas
sub
mov
outsl
es
int3
gs
lds
push
mov
dec
das
adc
mov
mov
pop
jle
inc
xchg
iret
cmp
ljmp
lcall
ss
xchg
data16
idivl
insl
out
dec
ret
mov
pop
outsb
pop
mov
mov
scas
inc
scas
icebp
jmp
xor
push
daa
mov
inc
mov
sub
test
push
pop
cmp
mov
sti
lock
dec
xlat
mov
ret
xchg
and
pushf
mov
push
dec
pusha
sahf
in
dec
movsl
rclb
cmp
sar
add
pusha
mov
jg
cmp
mov
addb
mov
mov
mov
fcoms
jo
push
subb
sbb
jge
pop
push
lock
inc
inc
scas
mov
sub
gs
jle
xor
and
fldln2
xor
dec
push
dec
sbbb
sbbl
mov
test
cli
mov
jmp
in
inc
rcl
notb
push
iret
cs
insl
pop
or
data16
mov
pop
and
mov
aad
inc
push
sbb
add
shlb
aam
movsb
mov
jl
lods
ss
xchg
lods
jle
pop
fcoml
pop
inc
pop
rcll
jmp
je
jne
sub
stos
shl
imul
popf
pop
mov
imul
scas
adc
jnp
cmc
test
pop
xchg
mov
insb
movsb
sbb
fnstcw
aaa
in
adc
pop
cs
jecxz
jo
xchg
ja
sbb
movsb
mov
pop
dec
mov
daa
ss
mov
rcrb
jg
sbb
ror
divl
cwtl
cli
and
test
pop
sbb
and
sahf
sbbb
push
test
mov
push
jmp
ja
sub
jne
xor
addr16
lret
mov
jl
imul
neg
jo
jb
dec
aam
repz
mov
pop
mov
lods
out
mov
lds
bswap
cmp
shlb
fcomps
mov
sub
popf
into
push
sbb
jmp
cld
stc
rorl
ficomps
jo
ljmp
push
filds
jl
add
and
loope
inc
outsl
adc
mov
push
and
pushf
fwait
jns
pxor
shrb
jnp
pop
xchg
mov
and
or
adc
sub
lods
rcr
xchg
sbb
in
addr16
and
add
mov
push
xchg
dec
jmp
xor
iret
mov
pop
adc
mov
test
iret
xor
add
jmp
test
mov
cmp
dec
mov
dec
int
cmc
fnstenv
sbb
mov
imul
popf
iret
sbb
dec
lcall
cwtl
sbb
mov
stc
xor
orl
add
and
inc
cmpsl
cmp
iret
test
lds
shrb
cmpsl
jecxz
sti
mov
mov
arpl
or
xchg
divb
pop
jno
xchg
push
adc
cmpsb
test
inc
adc
xor
loop
aam
sahf
lods
adc
in
xor
out
movsb
xchg
rcrl
dec
mov
cs
stos
call
mov
xchg
lods
pop
cwtl
mov
and
and
or
mov
in
sub
or
call
ljmp
xchg
jae
push
xchg
jnp
sbbb
lahf
mov
mov
jne
addb
inc
mov
xor
lret
push
mov
aas
push
pop
pushf
mov
sbb
fldt
pop
xlat
fstpl
sub
pop
das
mov
inc
enter
jp
jbe
hlt
std
jecxz
mov
push
fs
test
das
mov
dec
aas
add
mov
push
inc
mov
sbb
fwait
or
mov
stos
and
jl
ret
sub
adc
stc
push
adc
popa
xor
enter
jno
push
push
jecxz
sub
aad
ret
lock
sub
xor
sbb
js
mov
into
sti
cmp
mov
cld
sbb
lret
jmp
daa
stc
push
inc
enter
nop
iret
mov
jne
popf
std
outsb
add
fnsave
ret
lcall
lds
mov
popa
inc
xor
jb
call
ja
cmpb
pop
adc
sbb
ss
adc
aam
js
push
mov
aaa
aas
pop
jg
inc
aas
lret
push
imul
or
cmp
dec
jo
pop
out
xchg
dec
or
outsb
lock
push
lret
out
aaa
icebp
jle
imul
test
adc
cli
idivb
lods
sarb
push
mov
xor
outsl
cmp
dec
jnp
inc
lea
dec
fadds
or
xchg
sbb
inc
dec
mov
mov
pop
sarb
adc
push
into
or
imul
ss
or
pop
icebp
stos
rcll
ret
fbstp
sbb
sbb
xor
aas
lds
outsb
pop
dec
inc
js
jne
pop
mov
cwtl
inc
imul
stos
mov
mov
cmp
cli
mov
jg
dec
ljmp
inc
fisttps
mov
scas
jp
pop
clc
mov
mov
cld
jmp
mov
shrb
ja
sarl
sahf
shl
mov
stos
adcb
out
adc
xchg
aad
push
lods
jns
test
mov
gs
lds
mov
xchg
stc
cmpsl
sub
add
push
jge
call
stc
hlt
inc
pusha
xor
int3
dec
mov
ja
or
sbb
lcall
les
das
pop
lds
pop
das
mov
in
repz
les
mov
xchg
mov
je
and
and
repz
call
dec
mov
mov
push
test
add
dec
inc
cmp
insl
rcll
into
shll
add
push
outsb
and
in
push
repnz
mov
push
repz
fdivl
icebp
stos
pop
or
ficompl
les
cltd
out
pop
sub
aad
pavgw
jne
mov
mov
jl
pop
push
dec
shr
enter
mov
push
mov
xor
loopne
dec
jg
sbb
call
xor
push
outsb
xchg
and
pop
je
hlt
jmp
stos
sub
daa
push
add
mov
dec
icebp
les
mov
test
jns
out
ret
inc
sub
mov
xchg
and
ja
shrb
jl
test
mov
aad
xchg
push
and
sbbb
cmp
and
jle
rorb
out
or
lret
dec
lahf
or
sbb
push
mov
and
clc
and
negl
push
sub
nop
xchg
or
ds
mov
callw
mov
js
vpminub
jae
adc
mov
or
sub
mov
pop
rorb
or
test
std
xchg
insb
push
int
repnz
add
and
mov
adc
pop
pop
push
or
icebp
in
xlat
subb
repnz
bound
jg
js
rcrb
cmpsb
cli
add
push
xchg
mov
shlb
dec
mov
pushf
pop
insb
in
sti
jp
test
lret
les
dec
fistps
inc
lcall
push
loope
mov
movsl
mov
mov
xchg
test
clc
dec
or
xor
pop
add
pushf
xchg
clc
sbb
mov
call
xchg
sbb
daa
pop
cmp
cmp
test
or
and
cmp
out
jb
rcrl
loope
ds
mov
cltd
or
sti
cwtl
dec
mov
or
cmp
out
rcrl
jp
iret
or
xchg
cld
cli
fstpl
stc
ljmp
out
dec
sub
pop
and
call
aam
add
in
jmp
xchg
mov
sub
cmp
and
lods
jp
mov
jmp
enter
pmulhuw
pusha
test
jmp
ret
fdivs
sbb
dec
movsb
cmc
cmp
push
pop
or
and
mov
out
f2xm1
sub
cmc
mov
dec
and
subl
mov
scas
cwtl
sbb
shlb
stos
jno
ficomps
lcall
fldl
fdivrp
sti
lods
filds
movsb
adc
div
or
push
das
das
jle
data16
xorb
cmp
scas
imul
or
dec
push
xchg
adc
imul
mov
dec
gs
scas
push
in
pop
les
mov
rcl
fwait
jb
mov
xor
cmp
fwait
lods
cmp
xchg
int
sbb
jg
mov
pop
bound
sbb
or
cmpsb
icebp
or
aad
popf
std
imul
mov
andl
fld
data16
je
jb
adc
pop
dec
jo
cmp
test
out
xchg
add
lcall
xchg
fldcw
pop
es
or
imul
or
jp
or
bndldx
sub
mov
js
push
push
mov
cmc
or
test
std
into
sbb
pop
adc
dec
clc
dec
xchg
stc
inc
push
fsubl
or
call
or
xchg
addr16
out
pop
xchg
lret
jne
addr16
out
fxch
or
in
jno
lcall
or
adc
adc
pop
ret
cmp
xchg
sbb
repnz
pop
in
xchg
ja
dec
or
pop
mov
mov
sub
cs
mov
pushf
loope
mov
mov
and
mov
fdivrl
out
pop
mov
add
je
stc
mov
mov
jnp
cmpsl
sbb
sbb
or
nop
pop
sbb
sub
ljmp
lret
lods
push
pop
scas
xor
loopne
movsl
sub
sub
jmp
insb
and
push
dec
nop
clc
sahf
in
dec
dec
add
fsubl
dec
and
dec
xor
bound
enter
mov
insl
xchg
nop
mov
xchg
jp
cmpsl
in
xchg
fs
jl
mov
pop
ds
xchg
mov
cmpsb
add
mov
and
pop
lods
shl
scas
mov
mov
or
imul
sbb
sub
lss
sarb
cmp
addr16
add
dec
jne
es
nop
sarb
push
scas
orl
dec
push
sbb
leave
pop
mov
aam
mov
jmp
adc
mov
mov
jnp
fcoms
mov
fadd
mov
sub
dec
push
xor
push
cmp
loope
dec
push
stc
movsl
pop
xor
cmc
xchg
mov
out
sbb
pop
sbb
mov
insb
fs
stos
jge
daa
jo
inc
jecxz
rorb
xchg
fs
jne
or
ret
sub
mov
scas
xor
jo
push
pop
inc
jno
in
jb
ds
stos
sub
mov
out
xor
daa
adc
arpl
mov
shr
int3
mov
nop
sub
insb
and
inc
mov
mov
sbbb
mov
cltd
mov
stos
cli
bound
sub
mov
mov
movsl
data16
jge
push
cs
repz
xchg
cmp
lret
sbb
loop
jmp
sbb
rolb
mov
movsb
std
stos
in
push
mov
data16
and
jbe
daa
cs
dec
cmp
push
xor
push
adc
xchg
iret
scas
pop
out
divb
xor
lock
lods
dec
fbstp
test
mov
push
jecxz
jecxz
stc
and
test
clc
sub
loopne
dec
inc
jge
pop
adc
jp
sub
mov
nop
pop
shrd
cmpsl
adc
jecxz
inc
rcrl
push
repz
popf
mov
jl
and
or
push
je
fcomip
testl
or
cld
add
pop
daa
jp
xchg
cmp
rorb
adc
add
mov
iret
mov
add
mov
mov
push
inc
pop
mov
mov
dec
rolb
mov
jp
cmpb
dec
add
push
shr
dec
sbb
cmp
fmull
jno
pop
dec
mov
cmp
mov
out
pop
pop
pop
sub
inc
xchg
jbe
pop
mov
jo
sbb
push
inc
ret
cs
and
cli
mull
jmp
clc
into
cltd
jmp
arpl
dec
xor
iret
dec
mov
addl
push
filds
das
mov
repz
dec
into
les
inc
jp
dec
out
outsb
and
xor
dec
les
lods
mov
outsb
rolb
inc
xchg
pop
ret
aas
iret
fists
pop
lea
cmp
sub
jge
push
cmpsl
push
mov
pop
scas
pop
push
and
ja
sahf
out
xor
push
sub
nop
adc
dec
cmp
mov
mov
addr16
pop
or
mov
or
sub
test
scas
out
subb
and
fiaddl
or
push
push
lahf
pushf
jns
sub
and
cli
imul
mov
pusha
mov
pop
aaa
test
repz
adc
orl
and
pop
lock
movsb
mov
jmp
stc
arpl
xor
pop
loopne
pushf
mov
repnz
rcl
mov
cmpl
mov
cwtd
call
dec
leave
mov
pop
fdivl
je
pop
and
les
push
ljmp
insl
es
xor
hlt
test
enter
pop
imul
orb
jbe
fwait
popf
xchg
mov
out
xor
jnp
fists
jbe
iret
fwait
mov
cwtl
rcrb
adc
xchg
data16
notl
mov
pop
lock
dec
mov
pop
aas
sub
lods
cmp
or
cwtl
test
adc
xor
addr16
fisttps
mov
test
jbe
mov
fwait
sarb
sbb
movsl
cs
xchg
dec
pop
jge
xchg
mov
cmp
int
xorl
arpl
fs
test
dec
adc
jg
cmp
in
inc
das
cli
shrb
mov
popf
push
ffreep
int3
ret
popa
bound
inc
fsts
sahf
rcll
jb
or
push
sub
in
popa
sub
lds
mov
jb
popa
test
icebp
jg
pop
dec
mov
fiaddl
push
mov
data16
test
scas
add
mov
shl
mov
mov
fstpl
xor
xchg
imul
mov
push
sbb
xorb
fimull
or
mov
inc
sahf
outsl
cmpsb
lret
mov
clc
sbb
cmc
mov
mov
or
and
mov
dec
add
or
popa
les
int
xchg
hlt
addb
jl
push
test
xchg
jge
ret
push
enter
inc
cmpsb
jne
imul
mov
rol
repz
outsl
push
dec
jo
sub
fwait
cli
mov
lcall
pusha
icebp
xor
std
mov
xchg
xchg
std
icebp
mov
iret
sbb
ficomps
aaa
fsubs
mov
sbbb
mov
pop
imul
jb
inc
fldenv
add
xor
es
cmp
scas
pop
lret
scas
imul
cmc
mov
jb
pop
mov
inc
mov
faddl
mov
jno
fisttpll
xchg
test
pop
loop
cmpsb
outsl
lds
adc
ja
pop
insl
mov
mov
popf
xor
push
std
xchg
int3
out
shlb
cmc
and
dec
loop
sub
and
add
adc
xor
cwtl
xor
out
mov
shl
movsl
jge
inc
jo
sti
push
cmp
push
sti
shl
or
and
and
jne
jno
jge
addb
xchg
and
and
pop
jno
mov
xchg
sub
mov
push
popa
mov
stos
ret
stos
pop
mov
loope
sub
shl
or
movsl
data16
and
xchg
inc
add
incb
sbb
mov
dec
push
jecxz
and
imul
je
cmp
pop
sub
fisubrl
cmp
xchg
insl
jnp
pop
cmp
add
dec
adc
pop
bound
inc
fmull
xchg
cmp
xor
adc
movsb
stos
into
sbb
ljmp
inc
leave
pop
int
sbb
xchg
push
pop
int
add
loop
mov
cmp
mov
xchg
popa
fisubl
cltd
inc
ficomps
jl
lock
push
cli
test
inc
mov
mov
outsb
mov
add
jge
mov
pop
pop
sub
or
push
out
xchg
sbb
icebp
divb
push
mov
aas
in
js
mov
pusha
inc
mov
mov
call
movhps
sbb
xor
in
sbb
adc
jae
xorl
pop
out
insl
loopne
daa
pop
sub
cmp
lea
movsl
push
xchg
mov
sub
ja
and
popa
push
push
lea
jle
mov
sbb
mov
pop
or
sub
sbb
push
dec
arpl
test
mov
arpl
cmpsl
cs
popa
pop
aad
std
movsl
divb
adcb
aas
or
je
xor
mov
jl
test
inc
mov
test
stos
and
add
sub
sbb
lahf
and
xor
repnz
dec
and
movsl
or
mov
inc
fldcw
sbb
xor
push
pop
mov
or
jno
movsl
loopne
imul
lods
jnp,pn
jns
aam
lods
and
inc
lds
pop
mov
jae
mov
push
in
std
movsb
rclb
aad
sub
xor
insb
lret
jnp
sti
out
mov
push
dec
movsb
outsb
mov
aas
outsl
dec
stos
xor
sbb
jbe
lahf
loop
sub
rorb
sub
cmp
inc
cmp
arpl
mov
pop
daa
dec
sub
rcrl
cmpsl
cmpsb
into
fisubrs
pop
lcall
mov
fiaddl
pop
adc
xlat
push
cmp
push
fldcw
sbb
dec
jecxz
js
mov
add
mov
mov
jne
pop
insb
inc
jle
xor
pop
push
fwait
xlat
mov
mov
cltd
lret
repz
and
push
cmpsb
or
pop
outsb
jg
push
sub
jmp
dec
jp
and
icebp
test
ss
dec
adc
insb
roll
mov
jae
outsl
adc
mov
jno
sub
aad
add
cmp
dec
or
push
loop
in
rcrb
pusha
and
push
and
std
sub
psrlw
sub
pushf
int
nop
xchg
pop
rorb
inc
stos
mov
dec
mov
add
push
dec
or
push
lock
cmp
xchg
add
xchg
stos
aam
lock
lcall
mov
sbb
shrb
push
lret
sub
xchg
cmp
enter
out
andb
bound
xor
mov
adc
rcrl
rcr
jne
fistl
mov
sub
subl
arpl
mov
and
loop
xor
mov
pushf
mov
out
jg
mov
cmpsl
bound
mov
inc
into
pop
or
aad
clc
xorb
jmp
mov
lea
sbb
cmp
enter
jg
mov
repnz
rorl
adc
sub
adcb
sub
je
lds
and
stos
inc
or
adc
fsubl
sub
add
aad
ret
xchg
addr16
movsb
gs
dec
mov
or
dec
test
jb
imul
nop
pop
jbe
stc
jae
xlat
pop
dec
test
stc
cmp
js
jns
cmp
aad
and
mov
stos
aaa
and
or
and
je
ret
mov
or
sbb
frstor
cld
repz
scas
cwtl
cmpl
xor
bsf
or
or
mov
and
scas
lahf
mov
push
lods
pushf
out
outsl
dec
lahf
test
adc
add
jbe
adc
cmpsl
or
idivl
outsb
sub
stos
sub
imul
mov
daa
xchg
repz
pop
add
sti
sbb
mov
mov
mov
mov
jo
divb
fwait
outsb
xchg
cmpsl
imul
and
push
push
pop
rorb
repz
jle
hlt
bound
in
pop
sub
leave
call
sub
cmp
jmp
mov
fucomi
xchg
dec
push
popw
mov
inc
cltd
push
xlat
pop
mov
insb
push
xor
push
push
jmp
loop,pt
dec
mov
jmp
icebp
ret
cmp
jb
movsb
sub
xchg
push
scas
sub
mov
mov
lret
movsb
lea
cmp
imul
std
push
dec
pop
std
mov
mov
icebp
mov
clc
xor
dec
fwait
ja
pushf
bound
sub
out
mov
push
or
push
push
jo
xor
push
negl
push
xor
fs
or
jl
push
cmc
popf
xorb
jmp
xchg
ss
enter
sbb
sub
mov
cs
sub
int3
es
xchg
add
jmp
outsb
mov
iret
icebp
repz
ljmp
mov
mov
insb
push
push
test
das
or
sti
cmp
rclb
icebp
cld
dec
cltd
int3
xchg
sub
jl
data16
sbb
stos
imul
xor
jo
mov
lcall
and
jo
arpl
or
push
clc
inc
xor
mov
xchg
adc
movsl
inc
fcoml
sbb
out
nop
and
bnd
fists
dec
out
in
sbb
clc
fwait
mov
mov
jg
out
aad
dec
addb
jnp
pop
les
popf
and
push
adc
out
repz
adc
ljmp
sub
dec
push
cltd
mov
mov
gs
fwait
dec
jecxz
mov
sbb
mov
scas
xchg
sbbb
push
je
out
loop
jno
repnz
fsubl
adc
into
xor
or
lret
dec
jae
jo
in
cltd
jge
add
adc
ret
gs
mov
xchg
cmp
mov
dec
fadd
imull
jl
pusha
pop
cmp
mov
sti
dec
mov
pop
mov
pop
les
mov
xchg
push
or
jne
xchg
sub
xor
mov
sti
in
mov
pop
fs
filds
sti
push
fucomip
sbb
jno
dec
sbb
xchg
dec
insb
push
mov
push
fwait
jmp
xor
ja
test
xchg
enter
mov
sub
ljmp
mov
cmp
pop
dec
xchg
loope
loopne
adc
and
push
cmp
cmpsl
mov
nop
jmp
or
pop
jne
mov
sahf
jmp
mov
push
testb
jno
ja
fdivs
sbbb
in
xor
push
pop
rorb
mov
gs
loop
cmc
adc
add
stc
in
jne
not
mov
cmp
adc
mov
jbe
dec
sbb
fnstsw
in
jno
je
stc
out
push
push
je
sti
jg
adc
xchg
xchg
lret
scas
pop
xchg
cmc
mov
pushf
outsb
and
push
push
push
mov
movsl
push
in
xchg
inc
jge
mov
or
xor
mov
xchg
addl
pop
jmp
out
shll
imul
rcrl
ror
lea
ja
clc
push
jno
lods
sub
jbe
and
in
aam
adc
aaa
fs
jge
xchg
arpl
adc
xchg
mov
cmpl
dec
pop
xchg
clc
fstpl
add
sahf
jns
js
addr16
push
xor
push
aaa
dec
lahf
and
or
sbb
jg
jb
ja
scas
out
sbb
jl
cli
xchg
lds
push
rol
and
pop
add
insb
xorb
movsb
adc
cmpl
scas
popf
rcrl
sub
sub
arpl
sbb
mov
frstor
jb
fcmovnb
sub
jg
xchg
gs
lahf
andb
inc
int3
scas
leave
adcl
dec
jle
inc
push
pushl
icebp
addr16
mov
fdivrl
in
ljmp
cmp
inc
xchg
aam
inc
imul
ret
dec
and
addb
stos
mov
jle
dec
and
cmpsl
dec
push
jb
mov
xor
lds
jo
out
push
mov
sub
ror
dec
repz
xchg
and
scas
out
push
subl
ret
test
mov
inc
loopne
mov
sub
mov
mov
jg
inc
xchg
imul
xchg
addr16
std
lret
fldl
notl
pop
jg
xlat
pusha
push
test
stos
negl
and
pop
inc
lret
insb
enter
fsubp
es
icebp
mov
mov
xchg
and
cli
ljmp
mov
fnstcw
pop
aas
cmpxchg
insl
sbb
repz
sbb
fdivrs
or
bound
test
repz
aam
insl
sbb
jno
inc
inc
pop
inc
push
or
clc
arpl
pop
and
hlt
out
cli
sub
aas
push
add
mov
out
scas
fdivrs
add
imul
imul
and
sub
dec
mov
test
jo
jecxz
or
add
xchg
mov
movsbl
xor
std
dec
lahf
sub
xchg
lods
cmp
or
add
jno
cmp
mov
je
sahf
subl
ror
or
fisubrs
push
inc
adc
icebp
xchg
jl
std
outsl
mov
add
test
xchg
ret
dec
cmp
in
xchg
test
sub
or
mov
stc
mov
xchg
pop
shll
pop
jle
repnz
lret
sbb
adc
jo
jge
cld
imul
lcall
aam
flds
or
icebp
mov
gs
sub
sti
cmc
and
rcl
inc
pop
and
mov
jg
fldenv
jbe
mov
push
fs
repz
jns
push
sbb
add
mov
dec
mov
adc
cmp
sub
xor
xchg
mov
jp
xchg
xor
push
imul
xor
mov
int
sub
in
jmp
or
std
jp
fwait
jge
mov
out
push
lds
dec
sbb
ljmp
out
pop
push
cmp
xchg
add
fabs
xchg
scas
pushf
lods
aad
ret
push
fwait
push
dec
jg
jg
sbb
and
push
insb
out
aaa
dec
adc
int
push
hlt
jecxz
push
or
inc
fsubrs
dec
jg
adc
xor
or
mov
sub
dec
shrb
jge
ret
inc
mov
inc
aaa
nop
pushf
outsl
daa
out
xchg
jne
fnstsw
popf
cmp
dec
mov
push
es
inc
add
loop
dec
icebp
fimuls
cmp
pop
sub
orl
movsl
data16
cwtl
jbe
imul
insb
out
je
xchg
xchg
pop
dec
cmpsl
shlb
dec
pop
in
or
adc
addr16
cld
shlb
or
sbb
mov
clc
jbe
sub
xlat
sbb
mov
inc
mov
push
adc
lock
pop
fidivl
data16
add
inc
push
lret
mov
xchg
dec
pop
sahf
jno
ss
movsb
and
insb
int
push
aaa
jge
adcl
dec
je
js
and
and
bound
int
test
fwait
xor
jns
daa
popa
adc
push
clc
mov
cmp
jae
dec
les
jo
pop
sbb
sub
or
mov
das
sbb
lods
pop
cld
lcall
sub
jns
cmpb
in
pusha
mov
push
xchg
fmul
dec
dec
jmp
inc
cmp
fwait
jne
movsb
push
sub
pop
xor
push
inc
popl
enter
xchg
popf
rcl
insl
adc
cld
imul
lret
mov
dec
pop
fdivs
xor
jae
es
es
int3
and
xchg
mov
mov
pop
rolb
rorb
jmp
mov
ficomps
leave
inc
or
cmp
xchg
lods
mov
out
mov
and
pop
sbb
xchg
jno
lds
call
jp
cmp
jb
aas
mov
ret
fimull
pop
stos
fmull
or
test
sub
xor
and
push
cmp
xchg
mov
or
dec
sub
fildl
leave
jge
js
cwtl
mov
inc
pop
mov
scas
outsb
add
hlt
mov
addr16
cmp
test
cs
icebp
icebp
pusha
and
xchg
push
jns
sub
fistps
and
fidivrl
inc
movsl
sub
push
in
call
jge
push
jle
jecxz
push
mov
das
sub
adcl
std
cmp
pop
pop
mov
xor
test
sub
xchg
adc
and
lock
cld
cltd
inc
dec
add
add
aad
and
adc
sti
xchg
mov
daa
sti
mov
push
sub
repz
shrl
push
push
cmp
out
inc
cmpsl
fldt
movsb
pop
mov
or
xlat
fwait
ds
mov
sbb
bound
roll
jb
bound
insb
loope
sub
js
and
dec
push
scas
aad
icebp
xchg
xchg
scas
pop
hlt
in
pop
jecxz
and
std
fisubrl
or
out
xchg
outsb
pop
shrb
pusha
mov
xorb
cmp
adc
ss
dec
es
jae
inc
jecxz
repnz
popa
orb
mull
add
inc
inc
mov
movsb
arpl
mov
in
movsl
dec
xorb
or
push
and
mov
call
xchg
pop
call
push
aas
xor
pop
sub
arpl
xchg
jge
adc
fdivrs
add
subb
ss
movb
push
outsl
xchg
xor
lcall
cmp
and
mov
ja
stc
add
sahf
mov
pusha
lods
bound
int3
out
xchg
data16
frstor
xor
imul
out
add
mov
cmp
aaa
mov
dec
out
mov
lea
xor
xor
je
cs
out
lret
mov
mov
jg
jae
popa
mov
fwait
int
push
pop
in
stos
xchg
mov
mov
inc
dec
mov
scas
lret
loopne
insb
jl
das
push
dec
cmpsl
jb
sub
inc
cmp
add
cli
cmc
pop
leave
int3
and
mov
push
jge
aas
fstl
clc
ret
jbe
stos
adc
push
pushl
arpl
outsb
in
mov
xor
in
fdivp
mov
and
sub
adc
dec
mov
add
insb
and
pop
pop
ja
in
out
dec
and
rcl
ret
outsb
sbb
mov
pop
pop
sarb
repz
pusha
jp
mov
fwait
inc
pop
adc
jae
jg
lea
cli
fildl
push
mov
mov
loop
lods
les
or
xchg
or
iret
mov
test
sbb
or
ss
dec
out
les
inc
pop
jbe
inc
mov
cwtl
sbb
mov
adc
das
fidivrs
lock
sub
repz
dec
mulb
push
fsubr
jmp
out
sub
mov
mov
mov
outsl
pop
inc
or
push
jle
jmp
cli
dec
shlb
jno
xor
bswap
push
xorb
and
push
mov
sarl
inc
xor
dec
std
xchg
jae
jns
in
mov
jmp
roll
stos
les
ja
jno
in
mov
aas
test
mov
gs
mov
pushf
iret
and
dec
int
or
add
cld
outsl
imul
lret
mov
lret
cmp
xchg
mov
ja
mov
daa
push
mov
sbb
mov
xor
xchg
push
push
pop
dec
mov
lahf
fbld
sahf
xchg
mov
aam
adc
fidivrs
sbb
ret
into
cwtl
icebp
icebp
scas
push
jne
sti
sub
xchg
movsb
jbe
adc
cmp
stos
push
cli
jmp
out
cld
sahf
js
pushl
sbb
cli
add
adc
cld
popf
mov
adc
mov
xchg
sub
push
sbb
ja
in
aad
pushf
dec
insb
sbb
popf
bnd
outsl
outsb
mov
mov
loop
fldcw
pusha
jle
cmp
inc
icebp
and
jl
rcr
insb
jecxz
cli
jg
maxps
cmpb
popa
aam
icebp
xchg
nop
inc
fsubr
bound
push
sub
lret
mov
aam
jns
lahf
lcall
aad
xor
add
or
in
xor
xor
sub
mov
xchg
add
adc
out
lods
xor
mov
fimuls
cmpsb
out
mulb
clc
dec
addr16
adc
shl
cmp
stos
aad
jmp
push
pop
mov
mov
aas
jbe
lock
aaa
add
add
out
xorb
add
rcll
push
push
push
pop
sti
mov
sbb
cmp
sbb
in
jecxz
fdivs
rcl
lds
xor
mov
xchg
dec
cmp
jb
aas
subl
ficomps
xor
pop
insb
mov
push
icebp
insb
sbb
jmp
cmc
ss
jns
stos
stc
mov
fistpl
fldcw
pop
cmpsl
mov
mov
je
dec
sub
imul
mov
mov
in
pop
popa
push
cltd
push
mov
imul
push
xlat
mov
into
ss
shr
jecxz
cli
aad
mov
jnp
bswap
movsb
sbb
inc
cmpb
lea
lods
out
jge
mov
ret
addr16
and
jb
push
fwait
repnz
mov
jge
cltd
inc
jp
lock
push
sub
push
push
lret
scas
inc
rcl
ds
jae
xchg
jne
push
orb
mov
jl
xchg
movsl
dec
inc
je
or
pop
mov
add
push
je
lcall
movsb
stc
out
jo
mov
mov
cmp
and
fidivs
popa
stos
ret
pop
sub
jle
add
xor
add
mov
repnz
daa
jne
or
jae
out
scas
pushf
jp
aam
xor
aam
cmc
cmp
aad
adc
leave
lea
push
lret
divb
ret
cmc
outsb
mov
dec
test
clc
sub
xchg
pop
shll
add
mov
dec
mov
cmc
insl
vunpcklps
ss
push
outsl
sbb
adc
lock
imul
mov
or
and
or
or
repnz
sub
icebp
ret
sbb
hlt
imul
lcall
aaa
cli
int
stos
xchg
cmpsb
push
test
mov
pop
cli
cli
or
mov
sarb
cmp
mov
jne
jl
xchg
sahf
pop
lea
inc
into
or
xchg
xchg
movsb
fsub
imulb
mov
and
dec
push
mov
or
sbb
or
xchg
push
pop
and
fsts
add
enter
mov
lods
push
aam
nop
adc
push
outsl
add
pop
cltd
lea
rcrl
xor
inc
bound
lahf
repnz
sbb
xchg
aad
ficompl
and
add
pop
shlb
jle
adc
xchg
pop
add
jo
push
cmp
fucomp
jg
scas
jecxz
pop
rorb
mov
lods
push
push
mov
add
out
adc
data16
das
ljmp
mov
popa
pop
add
mov
jo
cmp
jnp
cmp
cmp
out
push
lret
mov
cmp
cwtl
inc
or
mov
xor
add
push
inc
xchg
sbb
les
sbb
int3
test
xchg
sar
lds
ret
scas
mov
out
mov
mov
in
sbb
sub
jp
lcall
or
add
test
push
push
testl
out
mov
negb
pusha
popa
and
rcl
ds
fdivrl
sbb
xor
mov
jnp
jne
mov
sbb
pop
jl
sub
fs
jmp
push
mov
jg
adc
lret
add
fildll
xor
xchg
sub
insb
mov
push
xchg
xchg
lods
mov
xor
xorl
cmpl
in
lahf
adc
loop
jns
sub
push
cmp
aam
daa
xchg
gs
mov
xchg
stc
inc
lcall
xchg
jbe
ja
loope
jbe
xchg
or
cmp
dec
dec
mov
or
mull
adc
repnz
pop
fs
pop
sub
sbb
xor
lahf
sti
imul
ret
jno
and
sahf
js
xchg
movsb
in
push
mov
rclb
imul
jmp
in
sti
rolb
std
adc
mov
cmc
pop
add
fiadds
push
add
xchg
jb,pn
mov
mov
mov
or
scas
or
test
repz
lods
push
or
sub
mov
lea
mov
data16
mov
shrb
jo
dec
outsb
push
into
aam
fiaddl
scas
ljmp
add
inc
push
repnz
imulb
jp
stc
leave
dec
mov
insl
aad
testl
pop
inc
pop
sbb
adcl
lcall
xchg
popa
sbb
or
jns
xor
push
cmp
add
aam
imul
cltd
or
fnstenv
cmpsl
mov
outsb
dec
push
push
add
lea
ret
lock
adc
xchg
adc
push
pop
adc
out
pop
ret
pop
pop
lds
jb
mov
mov
lcall
jb
xchg
inc
sbb
out
sbb
mov
out
mov
ficomps
lds
in
out
lods
sarl
mov
jmp
mov
dec
int3
and
fdivrs
insl
cmp
cmp
sarb
test
cli
sbb
jbe
jg
sub
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
push
idivl
add
jp
ljmp
ljmp
xor
jl
sub
in
in
cmp
mov
pop
imul
into
pop
dec
push
insb
mov
ljmp
mov
clc
inc
mov
xchg
xchg
scas
cmpsl
outsb
xchg
popf
int
stos
dec
inc
xchg
pop
push
shrl
xchg
sub
imul
dec
sub
rcll
lahf
cli
lahf
jae
and
into
adc
fcomps
inc
icebp
cmp
stos
push
sub
lods
movsl
dec
js
add
nop
inc
sbbl
xor
std
mov
jae
mov
imul
cmc
push
jge
dec
xor
jbe
xchg
fwait
pop
fisubl
shlb
ficomps
and
dec
lods
fists
shl
outsb
push
adc
adc
rcr
sub
mov
jbe
adc
push
mov
fcompl
int3
pop
push
les
jae
sbb
les
or
sbb
xlat
dec
and
mov
popa
fldl
inc
out
inc
push
sarl
dec
add
jne
pushl
adc
mov
push
int3
scas
pop
mov
jnp
sub
adc
jns
lret
pop
mov
nop
leave
into
dec
in
or
inc
add
pop
pop
push
jmp
mov
es
adc
dec
lock
mov
mov
cmp
test
fimuls
mov
gs
and
push
mov
inc
scas
xlat
pushl
mov
js
inc
iret
dec
jle
das
inc
js
pop
lcall
inc
rep
mov
and
jae
and
jnp
inc
pop
sub
int3
pop
lods
sbb
out
mov
mov
mov
sub
mov
sbbl
arpl
shrb
out
icebp
lds
inc
aaa
into
mov
xor
stc
and
inc
push
push
sub
movsl
sbb
sub
jnp
dec
popa
mov
push
mov
dec
inc
or
sahf
cmc
sub
xlat
rolb
push
jns
rol
popa
and
sub
add
ss
std
xchg
adc
ret
shrl
divb
rclb
xor
inc
ret
push
ficoms
nop
pop
jl
imul
adc
dec
sub
xor
xchg
push
enter
mov
es
in
xor
xorl
into
and
nop
fsubrl
push
ja
ljmp
inc
inc
js
into
test
fs
cmc
dec
sbb
mov
lcall
aam
lcall
mov
cmpl
mov
pop
xchg
and
stc
lds
cmp
repnz
clc
call
xlat
mov
sti
nop
inc
call
xchg
mov
push
lcall
cld
test
xchg
adc
leave
cmpsb
jp
rep
aaa
mov
gs
movsb
cmpsl
addl
adc
sub
xchg
subb
xor
xorb
mov
add
xor
dec
mov
loopne
sti
aaa
in
in
and
jmp
fcomi
add
filds
jp
fs
mov
out
mov
lret
add
push
imul
sub
pop
and
sarb
dec
das
inc
test
jnp
stos
cmp
pop
push
hlt
pop
aad
mov
outsb
test
mov
mov
loop
push
mov
movsb
jecxz
sbb
add
pushf
ljmp
mov
mov
in
pop
dec
jbe
xchg
mov
call
bound
in
mov
cmp
in
pop
call
mov
jmp
dec
jp
lcall
test
add
in
test
out
xor
sub
repnz
dec
inc
mov
arpl
lcall
addl
dec
arpl
ljmp
loope
test
sti
jp
fsubrl
mov
mov
js
cmp
pop
mov
std
insl
push
pop
aaa
xor
out
push
icebp
test
and
cmp
insb
sub
xchg
out
xor
imul
xor
loop
subb
fld
out
test
mov
dec
leave
lcall
jmp
pop
fwait
loopne
mov
adc
xor
fildl
aas
lahf
jbe
sbb
xlat
xchg
pop
xor
jae
or
ret
or
orb
repnz
lahf
mov
hlt
mov
jne
into
daa
fidivrl
cmc
orb
movups
out
popf
roll
pop
loope
cmp
jbe
push
out
mov
scas
pop
cwtl
rcr
mov
mov
data16
dec
cmp
insb
jg
js
sahf
bswap
outsb
or
cltd
xor
add
in
loope
adc
popa
push
dec
test
sbb
aaa
pop
aas
ss
sbb
test
sub
fcomps
inc
jecxz
jmp
js
ds
mov
mov
cmp
rcrl
push
daa
jne
mov
xor
cwtl
insl
push
pushf
not
in
or
jmp
scas
out
outsl
inc
loopne
int3
adc
mov
push
or
rcrl
mov
lds
mov
fwait
lahf
pop
jmp
add
inc
xchg
test
jg
jmp
cmp
and
pop
mov
inc
out
and
sbb
clc
daa
jae
mov
icebp
data16
aaa
jo
cwtl
test
adc
xor
fistps
std
sbb
pop
cmp
ftst
and
mov
dec
sub
test
adc
cmp
and
pop
jg
ds
mov
add
mov
xor
and
mov
popa
icebp
out
mov
int3
mov
pop
and
fwait
daa
push
and
sahf
in
icebp
fs
and
nop
add
out
out
daa
jge
jle
scas
fistpl
push
jo
ja
fs
scas
test
mov
inc
or
sti
sbb
lret
aas
imull
pop
lods
gs
mov
jno
pop
arpl
sub
aaa
pop
insb
adc
lods
sbb
sub
icebp
rcl
adc
hlt
push
mov
fldl
test
pop
cld
jno
cmp
incb
pop
sbb
jl
lds
xor
pop
into
scas
fwait
xchg
in
dec
or
xchg
adc
jp
adc
add
adc
in
xchg
jns
cltd
rcrl
cmp
pusha
scas
clc
adc
out
int
pop
stc
cmc
jle
push
add
dec
fldt
fmuls
inc
inc
and
aaa
cmp
mov
pop
aam
iret
imul
pop
sbb
fsubrl
movsl
imul
xor
adc
push
popf
andb
insl
fildll
sbb
jecxz
and
in
pop
or
inc
or
stc
mov
hlt
nop
mov
cli
add
pop
int3
pop
sbbl
outsb
enter
bswap
aas
and
test
pop
lods
leave
mov
subb
in
inc
push
std
bound
ret
add
inc
mov
cld
push
aam
std
ljmp
rolb
dec
out
add
movsl
out
or
rcl
out
lcall
jecxz
das
push
mov
mov
lret
std
add
addr16
xor
or
sub
test
loopne
or
jecxz
popf
pusha
fucomip
ret
outsl
loop
aas
into
loope
lds
aam
mov
pop
lods
test
js,pt
lcall
xchg
fmuls
xor
xchg
stos
inc
mov
mov
jno,pt
jmp
dec
fs
mov
shrb
mov
loope
clc
push
lods
dec
mov
add
inc
mov
js
ret
insl
dec
in
cmc
inc
loope
ljmp
cmpl
jns
xchg
imul
cmpsb
in
pusha
lea
jmp
jg
repnz
mov
inc
pop
mov
inc
cmp
dec
pop
gs
ljmp
add
sbb
jmp
iret
mov
dec
mov
enter
add
xor
ja
dec
enter
in
and
scas
cli
mov
xor
cmp
mov
add
push
into
inc
call
xchg
insb
test
jecxz
push
add
mov
popl
orl
push
cmp
negl
pminsw
es
int3
scas
xor
dec
jbe
xchg
in
movsl
mov
sbb
stos
xchg
push
inc
mov
xchg
shll
aad
lods
sub
out
xchg
in
inc
mov
xor
lahf
add
xchg
test
js
add
pop
mov
jo
add
dec
pop
xor
les
xchg
nop
ja
mov
push
cmc
xor
out
xor
cmp
mov
or
push
mov
shlb
sbb
cmp
into
mov
add
mov
lcall
push
leave
sub
lret
loop
lock
xchg
adc
mov
sarl
cmp
dec
pushf
scas
jno
mov
lcall
mov
pop
jb
xchg
jne
and
fstpt
sbb
mov
mov
cmp
rclb
jb
out
movsb
add
loopne
in
nop
out
je
test
push
jle
cltd
pop
roll
out
scas
enter
in
push
test
sub
clc
bound
xchg
or
or
ucomiss
aaa
popa
and
lcall
adc
push
xchg
cmp
aaa
leave
or
pushf
sbb
pop
ds
xchg
mov
sub
ds
test
mov
cld
push
push
mov
dec
lahf
mov
scas
and
in
inc
jge
pop
xlat
fsubrs
shlb
inc
add
fbstp
ret
inc
ret
in
mov
repz
sbb
dec
sub
or
pop
dec
and
dec
mov
xor
mov
mov
mov
loop
in
dec
addr16
les
adc
mov
fstl
pop
jmp
ret
fdiv
jae
xor
xchg
mov
sbb
jp
gs
cmpl
insl
or
leave
mov
inc
ljmp
push
add
ret
sub
dec
xchg
jmp
test
inc
adc
mov
testl
out
push
mov
fld
mov
fisttpl
out
fdivs
and
pushf
mov
lss
popa
or
mov
pop
xchg
cmc
or
jne
sbb
pop
dec
mov
shl
ss
or
ret
mov
cmp
inc
and
lock
pushf
pop
ret
fisubrs
inc
leave
jae
cmpsb
adc
test
and
orl
xor
imul
sub
cmc
and
xor
mov
mov
cmp
mov
out
cwtl
xor
imul
movsb
out
push
push
mov
popa
adc
push
les
sub
sbb
imul
dec
jb
and
push
adc
sub
in
jo
arpl
add
fwait
aam
dec
scas
popa
xchg
pop
pusha
inc
mov
mov
in
aaa
pop
cmpsb
loope
ret
and
push
add
add
inc
sbbb
inc
mov
sbb
jb
out
push
sbb
vpcmpeqw
int3
dec
cli
adc
add
aad
or
inc
and
inc
inc
or
cwtl
leave
mov
insl
jmp
and
pop
lods
aam
sbb
outsb
imul
push
out
loop
cmpsl
test
mov
lds
dec
imul
add
cltd
mov
cwtl
cmp
in
xchg
add
jb
mov
push
jge,pn
pop
cmp
sbb
nop
lcall
scas
add
jmp
cli
mov
adc
xchg
push
jno
add
and
jno
jae
out
sub
sub
rcll
add
je
mov
test
add
test
in
add
sbb
or
cmp
and
lds
repz
dec
xor
sbb
fstl
cmpsl
out
mov
or
jp
dec
mov
insl
xor
inc
xchg
test
pusha
fmuls
jnp
pop
into
lret
outsl
ror
jge
fs
shlb
sub
lods
int3
cmp
xor
lret
movsb
xchg
adc
bound
pop
fucomip
mov
jno
dec
push
cmp
movsl
xchg
xor
fsubr
sub
vmovntps
mov
addl
cmp
test
add
lcall
cmpsl
mov
sbb
sbb
lods
sub
in
dec
add
add
and
loopne
mov
lods
jecxz
xor
sub
jecxz
popf
imul
adc
addb
pop
test
jge
es
xchg
lahf
sahf
pop
xor
inc
rolb
lret
and
iret
sbb
or
jl
loop
loopne
popf
sbbl
jbe
loopne
mov
and
xchg
mov
stc
jnp
lret
fucomi
or
aam
testl
or
adc
cmp
popa
mov
call
lcall
mov
insb
dec
in
mov
dec
popa
roll
or
int3
xorl
jl
jmp
mov
add
sub
sbb
adc
sbb
negl
fs
and
push
into
lret
cmp
psubb
aas
dec
arpl
xor
cmpl
popf
fisubrs
cmp
xor
movsl
nop
cmpsb
push
ret
mov
jecxz
gs
dec
aaa
pop
and
push
loope
popf
lret
ret
rolb
pusha
push
pop
cmp
or
lock
pop
pusha
ja
loopne
cmp
stos
push
or
and
lds
repnz
shll
mov
or
out
sarl
rcrb
outsl
rcl
push
inc
mov
fcoms
movsb
int3
or
mov
push
xor
int
mov
pop
jmp
arpl
ds
jl
and
aaa
mov
add
jmp
pushl
xor
or
imul
adc
and
popf
push
mov
icebp
or
mov
push
sub
xchg
jae
loop
dec
inc
xchg
mov
add
lds
out
push
into
mov
fcompl
int
je
sahf
mov
and
inc
cmp
jno
mov
daa
stos
jo
mov
adc
pop
pop
push
and
mov
or
insb
pop
mov
insb
mov
insl
adc
out
test
fidivrs
xchg
and
daa
sti
jns
push
arpl
mov
sahf
mov
push
push
outsl
sub
pop
mov
mov
outsb
push
lcall
sti
test
movsl
push
or
mov
mov
xor
push
cmp
sub
mov
js
sub
mov
jge
sbb
or
subb
aaa
or
dec
mov
fs
xor
dec
adc
jo
in
popa
jae
aad
add
mov
cmp
xor
xchg
jp
adc
jmp
ret
add
inc
call
pop
leave
ret
sub
dec
mov
scas
cmpsl
push
es
xor
out
gs
mov
lods
jnp
dec
mov
es
call
and
add
jmp
push
leave
jecxz
cmpb
xorb
mov
push
pop
dec
inc
pop
sbb
mov
and
aaa
rol
ret
aad
addr16
push
mov
aas
orl
inc
lods
aad
cs
lret
int
pop
or
xchg
js
in
xor
mov
loop
out
jg
cmpsl
push
cmpb
jecxz
push
jae
xchg
pop
fldcw
sub
mov
sti
cmp
in
pop
aas
fmulp
in
aaa
insb
mov
stc
mov
sub
into
mov
loope
dec
mov
cmpsb
dec
jmp
in
or
push
xchg
lds
push
mov
and
dec
andb
lds
cmp
pop
adc
pop
loope
jle
popa
pop
jnp
mov
xchg
jb
ja
fistl
test
pop
lock
repnz
lret
ljmp
sub
and
cmp
or
ss
sarb
js
je
pop
dec
out
add
and
out
jmp
inc
ja
loop
mov
or
lcall
and
jbe
cwtl
loope
fildll
clc
push
add
push
bnd
xor
pop
xchg
shr
cmp
cmp
xor
test
xor
movsb
dec
add
jb
pop
sub
inc
es
cltd
leave
movsb
int
mov
sub
fstps
mov
iret
nop
mov
or
es
sbb
sub
jae
bound
add
pop
ss
pop
sub
mov
pop
mov
fldl
lret
lds
dec
cmp
mov
xor
cli
pop
xorl
es
jae
sub
adc
ja
jg
push
dec
pop
xchg
adc
leave
cwtl
mov
cltd
mov
mov
popa
and
push
xchg
cmp
insb
push
sub
pop
mov
mov
dec
add
sbb
push
stos
xchg
aas
jp
push
xor
in
aas
dec
aad
mov
aas
jne
lret
rorl
fmuls
add
dec
movsb
in
mov
xor
ficoms
mov
xchg
xor
clc
scas
cmc
push
pop
sub
mov
test
xorb
rolb
dec
cmpb
lcall
inc
cmp
jge
lock
adcl
roll
cs
cwtl
jbe
push
out
int3
mov
xor
pop
cmc
lret
mov
insl
sub
mov
or
xor
sbb
jge
mov
jle
popa
aam
adc
sub
mov
jp
insb
and
vprotb
xchg
int
mov
divl
lock
lea
sti
jle
mov
and
jb
stos
lcall
cmp
mov
sti
dec
mov
jb
mov
pop
add
daa
adc
xor
clc
js
mov
xlat
jns
dec
cmc
sub
in
mov
test
jp
lret
mov
pop
cmpsl
ljmp
cmp
lret
xor
push
jp
mov
adc
ds
xchg
xchg
inc
insl
and
mov
xor
test
ret
inc
mov
inc
jecxz
les
adc
mov
test
filds
sub
dec
xchg
lea
popl
sbb
cwtl
test
mov
out
ljmp
stos
pop
xor
lds
push
sbb
imul
fwait
push
hlt
push
pop
xor
iret
int
sbb
jmp
dec
sbb
adc
mov
popa
xchg
fidivrl
scas
jns
jnp
out
pop
bound
lret
adc
cli
push
cmpb
repnz
push
xor
pop
xchg
and
push
lods
lods
imul
pop
dec
repnz
or
jmp
pushf
mov
cmp
idiv
and
sbb
mov
push
in
xchg
sub
shrb
xchg
maskmovq
idivl
push
inc
and
sbbl
pop
pusha
sarb
dec
push
xor
cmp
and
push
nop
outsb
loope
fcomp
cmp
subb
mov
clc
jb
iret
dec
sub
ss
adc
test
loop
pusha
mov
lds
pop
ret
movsl
or
mov
and
gs
and
adcb
cmpb
pop
mov
cmp
aad
andb
push
mov
sub
loop
mov
and
lock
cli
xor
and
insl
sbb
xchg
cmp
imul
lock
std
sbb
fbld
fwait
adc
sbb
pop
fdivrp
hlt
lock
jmp
inc
test
mov
fnstenv
mov
mov
test
scas
sbb
stos
push
mov
daa
aas
mov
mov
lcall
inc
or
lcall
rcr
and
mov
jecxz
nop
mov
jb
ds
shr
jg
pop
andl
push
adc
cmp
jge
or
ror
ja
dec
push
mov
insl
push
and
pop
and
imull
lds
clc
and
and
mov
adc
cltd
sti
insl
ror
faddl
lock
in
push
popa
adc
pushf
push
cmp
hlt
aas
adc
div
mov
mov
cld
cmp
aad
clc
jae
daa
cmp
and
jb
mov
sbb
jmp
inc
out
mov
push
xchg
sahf
std
lds
out
xchg
je
js
movsb
rcrl
lods
test
dec
mov
mov
push
push
rcrb
cmp
popf
pushf
dec
cmp
dec
mov
sub
push
pop
sub
out
repz
add
aam
or
popa
push
xchg
push
push
adc
popf
imul
jge
enter
pop
sbb
gs
sti
jecxz
push
sub
inc
lock
push
popf
add
mov
into
cld
mov
cmp
pop
jno
mov
test
fcmovnbe
adc
out
pop
andl
sub
test
in
sti
loop
inc
test
pop
enter
stos
pop
mov
lds
push
sbb
int3
stos
mov
push
cmp
adcl
pop
sub
orl
arpl
insb
cwtl
mov
bound
jno
inc
sub
loope
mov
jecxz
xchg
fsubrp
cld
inc
add
scas
lret
or
inc
xor
mov
push
inc
sbb
mov
pop
pop
mov
scas
mov
cmp
jo
fiadds
scas
orb
cmp
shrb
fnstenv
int
inc
and
fst
lret
addb
test
notl
lahf
or
insb
jecxz
sbb
mov
repnz
pop
pop
push
inc
dec
jnp
fwait
ror
rorl
add
rcll
cld
pop
inc
push
jmp
mov
push
stc
sub
sbbl
ret
xor
imul
std
pop
adc
mov
sbb
push
flds
add
jbe
jne
ljmp
notb
xor
mov
sub
jnp
insl
mov
xchg
sbb
sbb
push
movsl
and
dec
popf
ljmp
cmp
sub
rorl
cmp
xor
mov
outsl
add
sub
xchg
and
das
jp
xchg
and
jnp
icebp
test
mov
fdivrp
adc
push
addl
daa
mov
push
push
push
lods
arpl
sahf
adc
hlt
out
lahf
sub
jecxz
call
jae
inc
dec
pop
inc
out
xor
xor
mov
mov
inc
mov
mov
pushf
cmpsl
pusha
fisubs
mov
fidivrs
into
cli
jno
pop
mov
sbb
jno
addl
imul
outsl
jmp
or
js
das
mov
add
mov
into
mov
leave
adc
cmpsb
xchg
jae
or
neg
dec
test
clc
mov
sub
loope
jge
xchg
xor
sbb
testb
sbb
sbb
xchg
push
iret
movb
mov
pop
pop
out
adc
xchg
mov
add
mov
pop
xchg
imul
out
and
dec
inc
jle
xchg
imul
imul
sbb
and
or
mov
es
pushf
adc
loope
xor
and
in
outsl
lods
movsl
aaa
pop
fs
clc
out
bound
in
pop
in
cmp
and
sahf
loope
push
dec
cmc
ficoml
or
in
test
cmp
jmp
mov
jecxz
call
into
inc
mov
jg
ror
push
push
in
xor
lock
ffree
sti
loope
notb
shrl
push
sbb
in
daa
or
stos
sbbb
mov
es
fstpl
inc
out
fildl
aad
imul
mov
xlat
ds
sub
cmp
xor
ljmp
leave
jmp
push
data16
pop
rol
sub
xor
sbb
jmp
push
inc
mov
pop
in
insl
push
mov
push
add
out
sub
xor
clc
je
arpl
pop
mov
idivl
xchg
mov
call
and
cld
push
push
cmp
sub
or
sbb
jmp
or
imul
mov
mov
addl
sub
mov
xor
xor
mov
nop
inc
mov
dec
mov
and
mov
push
lret
push
rcrb
add
ds
sbb
fbstp
jo
sbb
inc
add
and
jo
test
icebp
mov
mov
mov
and
adc
aad
lahf
scas
or
clc
data16
or
xchg
xor
andl
ret
pop
pop
push
test
pop
and
pop
mov
pop
and
pop
pop
in
out
pop
mov
rol
shll
inc
loopne
sbb
jnp
pop
push
mov
jg
and
sub
add
add
pextrw
mov
sub
and
cmp
hlt
inc
sbb
or
xchg
cmp
fidivrl
cmp
mov
mov
insb
mov
or
lock
add
push
loope
sub
sbb
aad
rcr
jbe
ljmp
arpl
and
jmp
mov
cmp
shll
ljmp
pop
out
jp
lret
jmp
pop
jnp
pop
lahf
mov
fadds
sub
stc
add
sti
inc
sub
adc
std
into
adc
mov
shlb
adc
or
adc
in
jg
adc
sub
jnp
xchg
in
imulb
xchg
xchg
xchg
mov
xchg
loope
adc
or
mov
add
lods
sub
push
xchg
repz
test
test
into
into
jle
in
pushf
leave
imul
mov
ret
sbb
cmc
xlat
mov
add
mov
lahf
flds
pop
int3
outsl
cmp
test
sbb
cmpb
add
lret
popf
push
mov
scas
lcall
mov
cmp
mov
ret
rcrl
stos
movsb
pop
pop
movsb
mov
ret
adc
adc
shrl
mov
cli
lea
pop
icebp
dec
xorb
dec
pop
cmp
je
push
mov
jg
xor
mov
stc
lahf
fs
cmp
in
cmp
mov
scas
mov
xor
lock
decl
pusha
xor
pop
cmc
xor
mov
loop
int
rolb
fdivs
xchg
lcall
sbb
lea
and
dec
add
leave
insb
xchg
mov
adc
adc
jge
data16
jo
mov
jp
cltd
sbb
rcll
add
fsub
fdivrl
in
adc
insl
sub
insl
lds
inc
movb
pop
xlat
nop
aad
sub
test
shlb
inc
push
daa
popl
mov
sbb
fsubrp
adc
cltd
or
out
cli
gs
mov
fdivl
int3
jnp
mov
inc
mov
sbb
cli
mov
cmc
push
hlt
pusha
repnz
imul
mov
js
xchg
inc
int
repz
int3
ds
scas
pushf
push
bound
mov
insl
popa
shll
push
lret
negl
cmp
in
movsl
js
xchg
insl
mov
arpl
pop
flds
sub
jmp
add
stos
jge
sbb
mov
pop
outsb
in
ret
loope
jae
mov
call
imul
das
insb
add
loopne
jg
sub
push
add
adcb
xchg
mov
aad
lods
inc
nop
roll
or
je
rorl
jnp
mull
jmp
fs
sbb
das
mov
pop
stc
jns
mov
mov
xchg
sub
cmp
in
dec
ret
mov
mov
cmpl
pop
pop
out
addr16
jno
loop
js
out
dec
mov
and
shlb
pop
sbb
bound
or
mov
mov
lods
dec
cwtl
mov
and
ja
xor
mov
popf
stc
addr16
imul
jbe
in
fsubs
idivl
add
sbb
in
sub
shrb
add
and
fcmovu
fst
push
or
push
leave
xor
test
pushf
cwtl
add
mov
js
aam
lods
cmp
jb
repnz
add
add
stos
dec
lcall
and
outsb
push
mov
pop
cmpb
icebp
cmpsb
aad
xchg
pop
add
sbb
jp
outsb
imul
imul
lcall
and
ret
lcall
jmp
jns
inc
sarb
or
cltd
sbb
sub
jle
cmp
faddl
xchg
mov
in
lcall
jae
rcrb
inc
sub
inc
mov
inc
and
flds
call
xchg
lret
jae
jmp
incb
fcoms
push
pop
cltd
add
add
add
xchg
test
lods
lods
jnp
pop
adc
jae
sti
shlb
xor
out
dec
gs
push
loope
inc
outsl
jb
orl
fxch
faddl
pop
stos
mov
and
mov
mov
iret
jle
icebp
fsubrs
nopl
pand
sub
jo
mov
call
sarl
insl
mov
arpl
sbb
sarl
shrl
pusha
pushf
lret
retw
int3
int3
cmpl
jle
popa
hlt
ja
jne
fimuls
negb
adc
adcb
stos
adc
xchg
repz
xor
dec
mov
xchg
cmp
push
add
pop
pop
xchg
dec
lahf
and
cmpsb
jl
inc
pop
sub
and
mov
inc
jg
dec
or
gs
jo
mov
fucomip
into
cmpsl
push
and
xlat
sbb
nop
mov
jno
fs
adc
addr16
insb
push
ficompl
cmp
je
cltd
enter
pop
jbe
outsb
adc
mov
push
lret
inc
scas
cmp
jg
fs
shll
popl
xlat
inc
into
jle
sbb
dec
nop
and
dec
cmc
push
mov
xor
sbb
pop
jge
pop
imul
mov
in
jp
sahf
push
sub
test
adc
jne
into
arpl
mov
mov
dec
hlt
aaa
xor
add
mov
xor
lds
cmpsl
add
fdivr
aaa
sub
xor
test
pop
insb
ljmp
mov
iret
inc
jbe
or
mov
lcall
and
sub
fwait
inc
mov
or
dec
addr16
and
fs
add
cmp
and
sbb
mov
dec
cmp
mov
fcoms
orl
js
ss
push
and
inc
jle
out
jg
je
sti
dec
adc
xlat
pop
lods
mov
jbe
cmpsl
and
xor
jle
pop
xchg
rclb
addl
jle
cmp
mov
aas
aaa
cmpsl
mov
xor
les
jl
xchg
ret
ja
repnz
xor
add
and
iret
lcall
ljmp
popf
aas
fstl
das
movb
and
pop
pop
stos
divb
das
xchg
fidivl
dec
stos
mov
jge
lock
lds
jno
out
mov
inc
subb
out
push
inc
cmc
or
and
push
jne
addr16
jno
popf
repnz
cld
roll
mov
stos
pop
xor
jne
jnp
jl
dec
test
insl
inc
sti
shl
lahf
lock
shr
mov
cmpsb
jbe
mov
mov
mov
hlt
aaa
and
mov
mov
repz
enter
xlat
outsl
leave
cmpsl
push
das
xor
sub
out
cwtl
int
mov
test
loop
into
xorl
adc
std
imul
jp
insl
aas
inc
jmp
repz
mov
push
add
mov
xchg
bound
jmp
popa
dec
dec
fwait
dec
and
adc
test
nop
sbb
or
mov
dec
pop
xchg
sub
fsubl
cmpl
push
mov
add
imul
insb
enter
push
insl
out
add
out
int3
loopne
pusha
adc
ljmp
push
xchg
jecxz
mov
cli
fnstenv
xchg
pop
fstpl
ret
sbb
xor
cmp
scas
js
mov
out
nop
pop
or
mov
imul
loopne
loope
fdivrp
sbb
aaa
pusha
inc
clc
dec
pushf
ret
das
cltd
ljmp
cwtl
mov
loop
aas
lahf
inc
or
pop
pop
or
hlt
xlat
xor
fwait
sbb
mov
rorb
add
mov
mov
xchg
mov
popf
sbb
lods
out
in
xchg
cltd
stos
inc
dec
je
push
loopne
scas
outsl
pusha
push
mov
or
pop
fstps
sub
pop
sti
push
insb
mov
stos
pop
pop
scas
adc
sbb
fstl
sbb
loope
leave
dec
sub
cmp
cmp
jo
xor
dec
pop
add
and
xlat
aam
repnz
lahf
cmp
vpsllw
xchg
dec
xor
jecxz
and
cmpsl
or
cld
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pop
movsl
mov
add
