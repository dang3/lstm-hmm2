mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
mov
push
push
push
mov
mov
call
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
test
jne
mov
test
je
mov
mov
cmp
ja
mov
call
pop
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
mov
call
ret
jmp
nop
nop
nop
nop
nop
push
mov
test
je
cmp
je
mov
push
call
push
call
mov
push
push
push
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
mov
push
call
test
jne
mov
mov
cmp
je
push
call
cmp
je
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
push
cmp
push
push
mov
je
call
pop
pop
pop
pop
ret
call
cmpl
jne
mov
test
je
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
mov
mov
call
jmp
push
mov
call
test
je
mov
mov
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
call
pop
ret
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
test
je
push
lea
push
push
mov
push
push
lea
movl
movl
mov
mov
call
mov
push
push
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
push
call
lea
push
push
movl
call
mov
add
test
je
push
call
add
cmp
je
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
movl
push
call
add
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
lea
push
push
xor
call
mov
add
test
je
push
call
add
cmp
je
push
call
mov
add
test
je
push
push
push
push
call
mov
push
push
push
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
push
call
mov
add
test
je
mov
mov
push
push
push
push
mov
mov
call
add
mov
mov
pop
pop
pop
pop
add
ret
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
push
mov
test
je
mov
push
call
push
call
add
pop
ret
nop
nop
nop
push
push
push
push
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
push
push
push
push
call
add
test
jne
cmp
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
dec
push
cmp
push
ja
mov
mov
mov
jmp
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
push
push
push
push
call
add
test
jne
push
push
call
add
mov
pop
pop
pop
ret
mov
mov
mov
push
push
push
call
add
pop
pop
pop
ret
xor
pop
pop
pop
ret
fcmovnbe
and
fcmovnbe
and
and
fcmovnbe
and
or
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
ret
nop
nop
push
push
push
mov
xor
push
cmp
je
mov
mov
mov
push
push
call
add
test
je
mov
add
push
push
call
add
test
jne
cmpw
je
lea
push
push
push
call
add
test
je
mov
test
je
mov
inc
add
cmp
jge
push
push
call
lea
add
cmpw
jne
mov
pop
pop
mov
movw
pop
pop
ret
pop
pop
pop
or
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
push
push
mov
movw
xor
mov
test
je
and
push
lea
push
push
call
add
test
jle
push
push
push
call
add
lea
push
push
push
call
add
inc
add
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
mov
mov
push
push
movw
mov
push
push
call
add
ret
push
mov
push
movw
call
mov
mov
lea
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
mov
lea
push
push
mov
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
add
ret
mov
lea
push
push
call
add
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
mov
mov
mov
mov
lea
movl
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
push
call
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
test
jne
pop
xor
pop
ret
push
mov
lea
push
mov
push
lea
push
push
push
push
push
call
test
jne
mov
cmp
je
cmp
jne
mov
test
jbe
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
push
call
test
je
push
call
add
xor
push
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
mov
lea
lea
add
rep
mov
push
lea
push
mov
call
mov
mov
shl
add
mov
lea
lea
rep
mov
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
add
mov
mov
test
mov
jne
push
push
push
push
call
add
mov
push
call
mov
jmp
mov
or
xor
repnz
not
push
call
mov
mov
or
xor
add
mov
repnz
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
test
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
xor
movb
mov
test
je
push
lea
push
push
call
add
lea
mov
push
call
test
lea
jne
mov
push
call
add
mov
push
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
mov
call
mov
mov
mov
push
push
push
push
push
call
add
test
je
mov
test
je
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
xor
test
mov
jle
xor
mov
lea
push
push
call
add
test
jle
mov
inc
add
cmp
jl
mov
push
mov
call
mov
lea
mov
rep
mov
cmp
jl
mov
inc
xor
cmp
jne
cmp
je
push
call
add
mov
mov
mov
mov
jmp
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
mov
mov
mov
jmp
mov
cmp
jg
cmp
jle
mov
mov
shl
add
sub
push
lea
push
call
mov
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
add
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
sub
push
mov
shl
add
lea
push
call
mov
push
call
mov
mov
mov
mov
add
mov
mov
jmp
lea
push
push
mov
call
mov
mov
mov
shl
shl
add
add
shl
shl
sub
lea
push
push
lea
mov
shl
add
lea
push
call
mov
add
add
mov
xor
mov
rep
mov
xor
shl
add
pop
shl
mov
mov
add
mov
lea
add
rep
mov
dec
test
jne
mov
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
lea
push
mov
call
mov
xor
movb
mov
test
jle
xor
mov
mov
test
je
cmpb
je
mov
push
push
push
call
add
mov
mov
add
push
push
push
call
add
mov
inc
add
cmp
jl
mov
push
call
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
mov
lea
push
push
call
mov
add
test
je
movb
mov
inc
mov
test
mov
je
mov
mov
push
push
call
add
test
jne
mov
jmp
inc
push
push
call
add
test
jne
mov
cmpb
je
push
push
call
add
test
jne
mov
push
push
call
add
mov
dec
cmp
jne
mov
lea
sub
push
push
push
call
add
test
je
jmp
lea
or
xor
repnz
mov
not
dec
push
lea
push
push
call
add
test
je
mov
mov
add
test
jne
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
add
lea
push
mov
call
mov
lea
lea
mov
rep
mov
push
mov
lea
push
call
mov
mov
shl
add
lea
lea
mov
rep
mov
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
mov
add
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
not
test
je
mov
mov
shl
add
shl
push
push
call
pop
pop
pop
pop
add
ret
mov
shl
add
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
je
mov
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
pop
mov
mov
pop
pop
pop
ret
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
pop
mov
pop
pop
pop
ret
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
shl
add
xor
shl
mov
shr
rep
mov
and
rep
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
xor
mov
rep
mov
push
push
push
call
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
movw
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
test
je
push
push
call
add
lea
push
push
push
push
call
add
test
je
pop
pop
xor
pop
ret
mov
push
push
push
push
call
mov
add
push
call
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
test
je
mov
push
push
call
add
jmp
mov
mov
push
push
push
push
call
lea
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
mov
movw
mov
add
test
je
push
push
push
push
call
push
push
push
call
add
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
test
je
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
pop
ret
push
lea
push
push
push
push
call
add
test
je
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
push
call
mov
pop
ret
nop
nop
mov
push
mov
push
push
mov
push
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
test
je
mov
push
push
call
add
jmp
mov
mov
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
mov
add
movw
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
add
movw
movw
movw
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
mov
jmp
push
push
push
mov
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
pop
ret
mov
jmp
mov
call
push
push
push
lea
call
pushl
andl
pushl
pushl
pushl
call
mov
mov
mov
mov
mov
leave
ret
mov
ret
push
mov
push
push
cmpl
push
jne
push
push
xor
mov
call
call
push
push
push
mov
pushl
mov
call
test
je
call
mov
test
je
mov
mov
call
test
jne
mov
mov
call
call
jmp
pushl
mov
mov
push
call
push
call
test
pop
je
push
push
mov
call
movl
mov
call
pushl
call
mov
pop
pop
jmp
cmpl
jne
push
call
mov
call
mov
call
mov
test
je
mov
mov
call
call
push
call
call
push
push
call
jmp
cmpl
jne
push
lea
call
call
push
call
pushl
call
mov
mov
mov
push
pop
pop
leave
ret
cmpl
jne
push
push
call
test
je
push
push
call
call
push
mov
call
mov
pop
jmp
cmpl
jne
call
pushl
call
push
pop
ret
int3
jmp
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
jmp
mov
test
jne
cmp
jle
decl
mov
cmp
mov
mov
jne
push
call
test
pop
mov
jne
xor
jmp
andl
mov
push
push
mov
call
incl
pop
pop
jmp
test
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
mov
sub
jmp
push
call
andl
pop
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
int3
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
push
call
ret
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
push
push
mov
push
call
lea
xor
mov
movl
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
test
jne
movl
jmp
movl
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
test
mov
jne
call
lea
mov
push
push
push
push
push
push
push
push
push
movl
call
xor
pop
mov
mov
add
ret
cmp
jne
mov
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
xor
pop
mov
mov
add
ret
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
cmp
jne
call
push
push
push
push
push
push
push
push
mov
push
call
lea
movl
call
xor
pop
mov
mov
add
ret
mov
mov
pop
mov
add
ret
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
mov
push
push
mov
push
call
mov
mov
test
jne
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
mov
mov
push
push
call
mov
call
mov
neg
sbb
and
add
push
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
je
mov
movl
test
jne
movl
mov
mov
push
lea
push
push
push
push
call
push
call
add
pop
pop
add
ret
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
jmp
xor
test
mov
push
setne
mov
call
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
call
mov
add
jns
xchg
lahf
mov
shlb
xchg
arpl
repnz
add
add
in
scas
mov
add
mov
jp
pop
jl
mov
mov
call
add
stos
push
push
push
push
push
lea
push
lea
push
call
pop
pop
pushf
pop
jl
fadds
mov
jl
add
icebp
push
mov
pop
jne
fcmovne
popf
add
add
mov
add
add
add
rcrb
lret
test
add
fisttps
jo
popf
add
fcmove
stos
stos
add
fisubs
add
fdivr
lcall
inc
in
push
push
push
push
call
lcall
int3
mov
jne
add
mov
cld
jge
enter
mov
add
add
ret
add
pop
jno
cltd
leave
xchg
add
lcall
push
push
push
push
lea
push
call
add
mov
mov
jne
add
rcrl
xchg
add
cmpsl
jp
xchg
ja
nop
mov
arpl
not
rcl
add
aad
add
sub
pop
push
push
push
push
lea
push
lea
push
call
lods
add
add
push
add
jl
mov
add
add
push
aam
addl
xlat
pushf
movsl
cmpsb
add
lock
pop
push
push
lea
push
push
call
mov
cwtl
add
int
pop
pop
add
test
add
xchg
xchg
add
in
pop
xchg
icebp
add
fs
loopne
in
add
add
add
mov
jnp
mov
shr
sub
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
call
out
push
mov
add
pop
add
popa
imul
add
fistps
int
lock
mov
add
iret
add
in
fdivr
lcall
mov
add
push
push
lea
push
push
push
lea
push
push
push
push
push
call
testl
mov
add
xorb
movsb
add
mov
jecxz
in
add
add
callw
add
add
bound
cli
test
cmpsl
test
add
rcrl
add
jbe
add
push
push
push
lea
push
push
push
push
call
movl
cltd
add
addr16
fnsetpm(287
add
loopne
mov
push
nop
incb
add
jbe
add
add
add
add
movsl
lock
cmpsl
add
add
stos
xchg
data16
hlt
fcoms
add
add
add
add
add
sub
pop
call
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
pop
in
loope
sti
popa
push
into
mov
pop
mov
ljmp
push
add
negb
add
mov
add
add
sarb
jb
cltd
test
je
test
cwtl
pop
push
ljmp
add
add
lahf
add
add
jp
mov
add
mov
push
push
call
add
out
hlt
mov
into
data16
add
out
mov
add
mov
jge
call
add
scas
fwait
bound
add
jle
shll
movl
js
add
mov
add
add
add
pop
loope
movsl
add
push
push
push
push
push
lea
push
push
push
push
call
jge
add
out
mov
push
add
pop
add
mov
icebp
js
mov
add
add
mov
mov
fidivrl
push
sub
pop
mov
push
push
lea
push
lea
push
call
add
repnz
add
add
pusha
shr
stos
add
aam
mov
rolb
faddl
add
mov
add
mov
in
add
push
push
add
mov
rcr
jmp
mov
push
push
push
push
push
push
push
call
add
add
insb
jmp
add
add
add
add
add
add
xchg
pushf
add
add
mov
add
jo
cmc
fdiv
lods
mov
lcall
pop
in
push
lea
push
push
push
lea
push
call
xchg
add
add
add
js
add
add
add
add
hlt
frstor
test
in
stos
add
add
aad
hlt
add
add
add
add
mov
add
sub
pop
add
add
push
push
lea
push
call
fsts
add
test
fdivs
cwtl
out
push
add
out
sahf
add
push
push
mov
bound
cmpsl
push
rolb
mov
cltd
fnstsw
add
add
fisubrs
movl
in
add
addb
call
ret
add
add
add
sub
pop
mov
push
push
lea
push
lea
push
push
push
push
push
push
call
mov
add
add
jno
xchg
add
add
mov
add
add
add
jne
data16
insb
fcmovnu
jne
add
add
add
cld
add
add
jns
loope
test
add
add
loopne
scas
ljmp
jmp
jl
sub
pop
xor
push
push
push
lea
push
push
push
call
add
add
aam
jge
xchg
add
add
add
add
add
bnd
add
add
pop
xchg
push
add
int
cmpsl
add
mov
mov
add
pop
mov
add
pushf
add
add
add
jbe
add
add
rolb
add
mov
fadd
pop
add
add
lcall
les
icebp
jp
lods
push
rol
push
and
add
add
shl
add
sub
dec
xor
pop
not
ror
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
les
add
fucomip
lock
add
push
add
add
add
ljmp
xchg
add
leave
xchg
lds
call
movsb
jns
mov
roll
add
add
rcr
mov
filds
add
vpshufb
add
add
rolb
lods
add
sub
pop
pushl
push
push
push
call
mov
add
pop
cld
push
mov
outsl
mov
jae
add
movsb
cld
lcall
push
fwait
rolb
add
rcl
add
mov
in
xchg
leave
addb
xlat
jmp
mov
add
add
add
sub
pop
call
push
push
call
iret
jbe
mov
jno
js
call
mov
add
mov
shl
add
xchg
cwtl
jecxz
popf
add
add
aad
add
add
arpl
add
mov
pop
popf
add
push
lods
add
add
test
sub
pop
mov
push
push
push
call
add
add
test
mov
add
std
hlt
pop
aad
add
add
testb
test
scas
int3
lret
add
jecxz
add
mov
out
xchg
add
xchg
add
mov
jb
add
add
jbe
stc
idivl
push
add
push
sub
pop
movl
lea
push
push
push
call
test
cwtl
add
add
add
lock
jmp
mov
add
hlt
pop
add
add
add
mov
push
ja
mov
shl
jge
add
add
in
hlt
pop
push
pushl
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
mov
mov
pop
roll
add
mov
add
add
jno
repnz
jo
add
mov
add
add
add
jno
add
add
mov
pusha
popl
out
lret
add
add
add
add
iret
test
push
sub
pop
pushl
push
lea
push
lea
push
call
mov
add
add
mov
add
pop
add
jns
in
cmpb
out
push
in
sbbl
pushf
mov
fsubr
add
add
cli
add
add
add
add
add
add
push
add
add
add
add
lahf
add
hlt
lcall
mov
jne
push
push
lea
push
push
push
call
add
repnz
add
add
cmc
add
jne
popa
add
fldl
add
add
xchg
add
jecxz
data16
jmp
push
les
lcall
jbe
add
add
pop
add
pushf
fistl
test
jne
add
lret
aam
in
in
lcall
jne
push
lea
push
push
push
push
push
call
test
xchg
popl
popl
add
test
lea
mov
add
add
add
push
lea
mov
sarb
lcall
and
add
push
push
not
push
sub
add
sub
add
pop
sub
shl
pop
push
lea
push
call
add
add
std
add
pop
add
add
cmpsb
jle
int3
add
add
scas
cltd
add
jb
add
mov
mov
enterw
push
pop
loopne
mul
imul
add
pop
jno
in
fwait
bound
add
cmpsl
add
lcall
jne
push
push
push
call
leave
incb
fnstsw
imul
add
je
add
add
aad
add
shll
mov
mov
add
pop
cmpl
aad
add
bound
xchg
mov
jb
stos
add
sub
pop
call
push
push
push
sub
inc
add
push
and
add
sub
sub
pop
rol
pop
push
push
push
push
push
push
call
jmp
mov
add
add
notl
add
int3
add
add
enter
rolb
sahf
addr16
cltd
je
jl
add
add
movsb
push
push
push
add
push
rolb
test
lcall
push
lea
push
push
lea
push
push
push
push
lea
push
call
test
lcall
je
add
lods
cmpsb
add
add
pop
imul
roll
loopne
push
call
push
push
call
call
xchg
add
mov
ret
leave
jl
xchg
arpl
sti
push
data16
mov
add
rolb
add
mov
add
add
pop
add
mov
pushf
add
add
in
pop
lcall
sub
pop
mov
push
push
push
push
push
lea
push
call
add
test
leave
add
add
push
mov
shll
add
add
push
lods
jnp
add
add
add
mov
in
call
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
add
add
add
xchg
add
add
jnp
add
add
push
pop
add
in
add
filds
add
cmpsl
mov
jmp
fwait
cmpl
xchg
jo
add
add
mov
filds
in
jmp
add
sahf
fwait
nop
add
add
sub
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
sarb
add
mov
mov
clc
cmpsb
add
add
rolb
rcrl
cld
push
add
add
add
rcr
sub
pop
mov
add
push
push
push
push
push
lea
push
push
push
push
call
test
fldl
jbe
add
movl
add
call
mov
lods
add
add
mov
add
add
call
lock
add
jp
sti
nop
mov
add
mov
roll
ljmp
mov
fcompl
ret
add
add
push
push
call
loop
clc
add
add
add
jnp
add
add
lcall
add
mov
add
push
jge
mov
mov
fs
mov
lahf
mov
add
add
add
out
add
add
pop
add
mov
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
mov
icebp
add
add
scas
add
pop
add
out
add
fildl
mov
leave
mov
add
ljmp
out
test
xchg
aad
hlt
add
mov
add
add
pop
lods
fildl
movb
push
ficomps
sub
pop
xor
push
push
push
push
push
push
push
call
mov
shlb
roll
js
std
add
xchg
sarl
add
scas
lret
icebp
rorl
ja
cmpl
add
in
subb
jmp
in
in
add
push
push
push
push
push
push
push
push
push
call
add
add
pop
add
popf
add
add
filds
bound
mov
mov
ja
add
mov
add
mov
add
fwait
scas
pop
add
aad
cmc
add
mov
ja
repnz
fcompl
jne
push
lea
push
call
addr16
add
pusha
bound
mov
add
scas
mov
push
mov
add
xchg
data16
xchg
mov
mov
add
add
filds
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
call
rcrb
loop
out
xchg
add
addb
pusha
loopne
add
jae
loope
push
add
xchg
add
mov
pushf
sarb
pop
add
add
pop
mov
add
mov
add
sti
add
jb
cltd
add
add
fdivr
lcall
inc
or
jno
adc
push
jns
push
push
push
push
push
push
push
call
stos
mov
cmc
add
add
xchg
cmpsb
add
in
mov
mov
add
sti
bound
add
add
int
add
add
sub
pop
xor
push
push
push
push
push
lea
push
push
push
call
add
mov
mov
add
jmp
in
mov
ficompl
push
push
pop
rolb
leave
pusha
cltd
add
lahf
add
fldt
add
add
mov
loopne
add
push
lea
push
push
push
push
push
call
clc
add
add
mov
mov
hlt
add
cmpb
add
add
mov
add
add
xchg
add
add
mov
add
incb
lock
push
call
add
add
add
in
add
shl
add
add
lods
arpl
fldl
xchg
add
add
add
pushf
add
push
xchg
add
mov
imul
add
outsl
js
in
call
in
clc
lcall
mov
xor
push
lea
push
push
push
push
push
push
push
push
call
add
cli
add
ficompl
fstps
int3
add
mov
add
add
jp
add
pop
add
mov
jge
in
fdivr
lcall
push
push
call
push
mov
add
xchg
mov
xchg
pop
add
bound
xchg
movsl
insb
add
cmc
add
mov
ja
add
mov
pusha
movsb
rolb
add
xchg
sarl
mov
add
lcall
inc
or
jno
adc
pushf
push
mov
cli
xor
pushf
clc
movsb
stos
jp
push
call
add
call
add
mov
lds
add
add
add
add
hlt
js
add
mulb
aad
xchg
popf
rol
add
mov
add
js
add
add
mov
add
mov
jns
cwtl
imul
in
hlt
lcall
add
push
push
lea
push
push
push
push
call
add
rolb
add
add
leave
addb
incb
out
add
xorb
ret
not
jle
lcall
stos
pop
jge
sti
repnz
xchg
add
cmc
fadds
in
call
add
push
push
push
lea
push
push
lea
push
call
mov
add
add
jns
add
out
add
scas
lahf
sarb
lock
add
aam
mov
mov
push
faddl
xchg
arpl
add
rolb
jnp
mov
stos
arpl
mov
add
mov
flds
nop
add
sub
pop
sub
pop
push
lea
push
lea
push
push
push
call
add
add
out
add
add
add
mov
outsl
fldl
into
add
add
jecxz
add
jae
into
mov
les
loope
loop
add
add
mov
add
pop
scas
jne
mov
pop
cltd
loopne
add
int3
add
cmc
jno
add
mov
rep
push
lea
push
push
push
push
lea
push
push
call
add
mov
add
addl
add
add
add
mov
add
jns
sti
add
mov
jle
add
add
testb
sub
pop
pop
mov
push
shr
pop
add
add
push
push
push
lea
push
push
lea
push
push
push
call
add
imul
add
mov
hlt
fildl
imul
fnstenv
imul
popf
mov
loop
aam
add
jp
sti
add
leave
into
push
jo
add
xchg
add
add
push
xchg
add
add
mov
add
mov
push
cltd
mov
icebp
add
lcall
ret
sub
add
xor
adc
enter
and
repnz
adc
mov
push
push
lea
push
push
push
push
push
lea
push
push
push
push
call
ja
mov
out
mov
loop
add
scas
xlat
mull
cli
cld
mov
add
lods
add
add
add
add
movb
and
push
push
push
push
push
push
push
push
call
mov
add
out
data16
mov
mov
add
addb
add
pushf
sub
pop
add
push
dec
shl
pop
add
add
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
loope
push
les
add
add
js
add
add
jle
add
pop
add
data16
jo
mov
add
outsl
leave
filds
out
push
add
add
add
add
push
mov
call
pop
push
js
add
movsb
idiv
add
add
fsubrs
pop
mov
push
ror
ror
inc
add
push
and
add
add
rol
add
sub
sub
rol
shr
sub
pop
xor
shl
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
rol
add
add
cld
test
add
cmc
add
add
add
stos
add
add
add
add
add
add
jmp
push
pop
addb
sti
movsb
negb
movsl
mov
jge
sahf
add
leave
add
mov
push
add
lcall
jne
push
lea
push
lea
push
push
lea
push
lea
push
call
fadds
int
int3
add
jl
pop
add
data16
xchg
stos
movsl
push
fistps
imul
fldl
pusha
cltd
jle
inc
adcl
jp
jle
add
lcall
mov
add
push
lea
push
push
push
push
push
push
call
mov
roll
jns
push
add
add
add
add
aad
rcrb
movsl
add
sub
pop
push
push
push
shl
shl
rol
sub
push
sub
add
sub
dec
rol
sub
ror
dec
add
pop
add
pop
push
push
call
idivl
aam
add
add
fmulp
sarl
add
test
pushf
cmpsb
push
pop
lahf
loope
add
pop
add
jnp
xchg
add
add
sub
pop
push
push
push
push
call
add
jae
mov
add
addr16
add
add
add
add
iret
stc
add
mov
outsl
mov
testl
add
push
jb
jbe
xchg
push
pop
insb
add
add
in
clc
pop
call
push
push
push
lea
push
lea
push
push
call
mov
mov
stos
ljmp
mov
imull
int
pop
hlt
int
ljmp
add
add
sub
pop
mov
push
inc
dec
rol
pop
push
push
push
push
push
push
push
call
mov
repnz
push
fcmovnbe
add
mov
add
add
add
pop
movl
in
jl
std
data16
add
add
sti
mov
mov
test
in
jae
xchg
sub
pop
push
push
push
push
call
jns
add
mov
xchg
xchg
push
mov
nop
in
push
xchg
xchg
mov
ficomps
add
jno
add
scas
add
xchg
add
andb
scas
mov
in
hlt
pop
mov
add
push
push
push
push
push
call
fdivrs
add
mov
fcmove
mov
jge
push
add
add
add
loope
cmc
sahf
add
add
fwait
fwait
scas
add
push
add
sti
hlt
mov
add
push
cltd
mov
add
add
xchg
mov
mov
mov
sub
pop
add
push
rol
dec
sub
rol
pop
add
push
inc
pop
mov
xor
push
ror
pop
add
push
pop
push
mov
xor
push
ror
sub
pop
add
pop
push
xor
dec
add
add
pop
mov
xor
push
sub
pop
rep
push
push
push
push
push
lea
push
push
call
pop
add
xchg
mov
jle
bound
jns
push
pop
adcl
add
add
scas
mov
mov
pop
pop
stc
mov
mov
movsl
int3
movsl
add
sub
pop
mov
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
imul
sub
add
aam
add
fwait
add
sub
stc
fscale
add
std
clc
add
fldl
popa
mov
gs
push
add
mov
fdivr
lcall
or
push
push
lea
push
push
push
push
push
push
push
lea
push
call
lds
add
add
add
cltd
add
add
add
xchg
fadds
push
add
add
mov
std
xchg
lret
int3
push
in
sarb
bound
add
add
add
in
fcomps
les
add
push
sub
sub
lea
pop
or
je
mov
push
push
push
push
lea
push
lea
push
push
push
push
push
call
testb
stos
subl
add
add
mov
test
in
add
jmp
xlat
sbbl
jmp
add
add
xchg
cld
arpl
add
lcall
xor
push
push
push
call
addl
into
testb
pusha
incb
add
icebp
stc
scas
mov
add
add
addr16
movb
push
movsl
push
lret
add
add
out
add
rolb
fsub
add
add
add
fiadds
fadds
popa
push
fucom
jle
xchg
push
add
add
shrb
pop
outsl
xchg
scas
add
les
push
lea
push
push
push
push
push
push
push
push
call
push
add
jb
mov
cld
lret
mov
out
mov
add
add
mov
fwait
aam
add
test
add
xchg
push
enter
enter
add
push
faddl
mov
int
jmp
fs
pop
mov
xor
push
dec
add
pop
add
push
shr
lea
pop
add
push
ror
pop
push
push
push
push
push
push
push
lea
push
lea
push
call
pop
mov
rorb
add
add
rcrb
pop
add
mov
imul
pop
stos
sub
pop
mov
push
push
lea
push
push
call
addl
add
gs
leave
add
add
xchg
add
add
lods
add
mov
int
shl
mov
les
add
add
rolb
add
cld
add
add
jne
add
add
add
lds
cmpsl
lds
jp
add
testl
in
hlt
pop
xor
push
push
push
push
push
lea
push
push
push
call
addr16
add
sbb
jae
shll
int3
add
add
pop
popf
fst
add
hlt
in
mov
imul
lcall
les
add
push
rol
add
sub
pop
add
pop
push
lea
inc
pop
rep
mov
xor
push
push
push
push
push
call
mov
push
sbb
mov
stos
ljmp
mov
mov
pop
add
add
add
into
add
iret
mov
stc
fidivl
in
in
pop
or
je
push
push
push
call
in
add
add
leave
lock
add
add
movsl
lods
testb
add
mov
push
add
add
add
add
add
jne
add
lock
add
movsl
out
pop
mov
movl
shl
pop
add
push
sub
sub
shl
pop
add
push
shr
lea
pop
rep
push
push
push
push
push
push
push
push
call
add
gs
roll
push
mov
add
add
add
add
add
ja
popl
lahf
add
fildl
fwait
jle
mov
pop
cwtl
xchg
add
stc
add
addb
add
add
lret
sub
pop
pop
push
push
ror
ror
add
rol
push
or
inc
add
rol
shr
lea
sub
shr
pop
xor
xor
pop
push
sub
add
add
pop
pop
push
lea
pop
mov
push
push
lea
push
push
lea
push
push
push
call
mov
cmc
add
xchg
push
mov
add
push
in
mov
cli
ret
pop
add
add
in
fsubr
jno
jge
add
add
add
cld
add
sub
pop
mov
mov
push
sub
add
pop
jmp
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
jns
add
mov
mov
stos
lds
add
popf
pop
mov
cmc
add
xchg
movsl
divl
aam
add
sahf
mov
add
add
fiaddl
movsl
add
cmc
popl
mov
push
push
push
push
push
call
mov
idiv
pop
add
xchg
add
lods
add
mov
mov
add
add
add
add
xchg
add
add
pop
xchg
add
add
add
fidivrl
mov
mov
sub
pop
add
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
enter
pop
rclb
add
lret
fdivrs
jge
add
mov
add
cwtl
add
roll
out
add
in
loopne
push
push
pop
push
push
ror
pop
push
push
rol
pop
mov
pop
push
push
push
push
push
push
push
lea
push
push
call
add
mov
in
loop
cmpsl
add
add
jmp
stos
fidivl
mov
add
add
in
cmpsl
add
add
add
pop
pop
push
push
lea
push
push
push
push
push
push
push
call
int
jge
xchg
add
jo
add
add
out
imul
leave
in
add
add
mov
add
repnz
mov
add
imul
filds
add
int
pop
les
add
add
add
mov
jns
pushf
hlt
add
push
xor
inc
pop
pop
push
push
push
push
lea
push
push
push
call
shlb
add
add
rcrl
cld
add
mov
cmpb
aam
jmp
add
add
add
add
fs
mov
out
andb
add
pop
add
mov
int3
lcall
std
repnz
jnp
fs
lret
add
ja
mov
sub
pop
leave
push
push
push
call
pop
mov
pop
leave
fnstcw
jns
push
in
add
add
stos
mov
mov
pushf
imulb
lret
repnz
sub
pop
ret
push
rol
ror
lea
pop
push
push
rol
xor
pop
mov
push
push
push
call
add
sub
movsb
out
mov
add
loopne
add
popl
scas
pop
cld
fwait
add
push
mov
fsts
xchg
rorb
mov
pop
mull
sub
pop
add
push
sub
pop
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
fstpt
add
add
add
add
add
hlt
loopne
push
fs
movsb
imul
pop
add
repnz
mov
push
push
lea
push
lea
push
push
lea
push
call
add
add
lock
mov
fnsave
je
arpl
add
add
jl
add
add
test
mov
hlt
add
jno
add
addr16
out
add
add
pusha
jmp
mov
add
fldl
mov
lcall
push
push
push
push
push
lea
push
push
push
push
push
push
call
mov
add
add
add
add
mov
jb
xchg
add
ja
push
add
add
jae
add
lea
cmc
lahf
cld
filds
add
sub
pop
movl
push
rol
shr
shr
pop
addl
test
je
push
lea
push
lea
push
call
fwait
stos
add
fst
add
lods
lahf
arpl
mov
fnsave
add
fadds
add
fs
bound
push
add
xchg
loop
lret
add
add
add
test
loop
mov
add
add
xchg
addr16
add
lcall
inc
or
mov
xor
call
add
lea
add
add
push
hlt
cltd
mov
std
jmp
add
jnp
jecxz
jmp
add
stos
aam
add
outsl
mov
add
add
out
mov
mov
sarb
into
flds
jae
mov
into
in
jo
mov
add
add
push
add
lock
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
push
lret
add
pop
add
add
push
pop
add
test
add
xchg
enter
add
add
xchg
lock
stc
in
andb
pop
pop
push
lea
push
push
push
lea
push
push
push
lea
push
call
gs
arpl
in
fbstp
je
insb
pop
repnz
push
mov
mov
lret
add
les
std
add
rorb
lahf
add
fs
mov
add
add
test
push
add
add
js
add
jae
sub
pop
pop
push
pop
pop
leave
push
shl
shr
add
pop
ret
push
push
lea
push
push
lea
push
push
call
test
arpl
repnz
sahf
sti
je
add
pushf
add
add
jne
add
lods
add
gs
add
add
add
mov
mov
ja
add
add
pop
add
push
lea
xor
pop
mov
push
ror
add
pop
add
push
add
pop
push
push
lea
push
push
call
add
negb
movsl
pop
jae
add
loopne
xchg
xchg
pop
fisubs
in
add
jb
add
add
fwait
jmp
add
sub
pop
push
push
push
inc
sub
ror
ror
pop
push
push
rol
lea
pop
testl
addl
push
sub
pop
push
push
pop
call
push
lea
push
push
push
lea
push
push
push
push
push
call
push
mov
xchg
jle
jnp
lock
cmpsb
mov
scas
mov
test
gs
jl
test
arpl
add
fistps
add
mov
ljmp
js
mulb
fwait
add
lcall
inc
cld
push
shl
pop
pushl
push
push
inc
pop
push
push
push
lea
push
call
add
pop
xlat
lock
add
push
mov
jl
add
add
mov
xlat
fiaddl
add
mov
out
add
fucomip
mov
stc
mov
aad
mov
jnp
add
hlt
lods
mov
add
jmp
jl
jecxz
add
nop
sub
pop
call
push
inc
inc
lea
pop
cmpl
jne
push
dec
sub
pop
pop
push
sub
not
shl
pop
pop
pop
push
lea
push
push
call
adcb
add
add
cli
lods
jmp
movb
leave
pushf
loop
xchg
imul
add
add
add
nop
jmp
add
clc
add
xchg
ljmp
andb
roll
testb
add
add
out
hlt
add
imul
hlt
pop
pop
leave
push
push
push
push
push
push
push
lea
push
lea
push
call
add
imul
mov
mov
push
push
add
ja
add
add
add
xchg
add
xchg
add
cmpsl
mov
out
cmpsb
push
mov
add
jge
add
mov
pop
ret
push
dec
pop
push
mov
push
lea
rol
add
pop
add
push
push
push
call
movsl
jle
add
scas
ret
bound
nop
repnz
ljmp
add
push
add
lds
add
call
mov
mov
fsubrs
mov
mov
sub
pop
push
push
push
dec
sub
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
push
call
fldenv
addb
add
cltd
add
add
mov
mov
add
add
outsl
jmp
add
insb
sub
pop
push
movl
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
mov
add
add
push
rcrb
add
jne
js
imul
lock
pop
cld
add
jle
les
add
add
lcall
add
inc
clc
call
movb
or
xor
call
pop
cmpsl
push
call
jb
leave
fmulp
fsubrs
fisttpll
fstpl
pusha
lds
cmpsl
loop
push
add
add
cld
jo
add
roll
mov
add
lcall
insl
cld
add
pop
cmpl
jne
push
push
push
call
add
xchg
add
add
pop
add
test
xlat
jmp
scas
add
loopne
add
out
icebp
scas
add
sub
pop
pop
pop
push
sub
lea
shl
add
pop
pop
pop
push
dec
add
dec
pop
leave
ret
push
push
push
push
call
add
loope
pop
les
add
lcall
clc
shl
sahf
mov
add
pop
repnz
add
mov
in
push
xchg
in
icebp
repnz
pop
push
mov
push
push
push
push
push
call
push
add
repnz
push
clc
loop
jo
repnz
add
pop
pop
add
shl
hlt
shll
add
add
add
add
push
add
xchg
add
out
ljmp
add
add
add
ret
add
xchg
add
cld
push
shr
lea
pop
push
push
dec
shr
not
sub
pop
push
push
push
push
call
scas
lods
add
add
shrl
xchg
add
scas
shll
add
add
cltd
stos
imul
add
addb
mov
add
add
add
repnz
sub
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
push
addr16
add
jae
jns
ja
mov
in
fnsaves
pop
xchg
pushf
mov
out
stos
movl
fldcw
mov
lahf
sub
pop
mov
push
sub
add
pop
lea
push
push
push
push
lea
push
call
push
addb
add
add
xlat
add
stos
cwtl
in
push
add
mov
add
fiadds
fldcw
add
pushf
sahf
lods
add
add
lds
add
in
mov
push
xchg
add
in
hlt
out
stos
fldcw
add
add
hlt
mov
lret
add
add
add
add
sub
pop
sub
push
xor
pop
mov
push
xor
pop
shr
add
push
push
call
pop
fidivs
std
lds
loop
data16
out
push
add
add
add
add
jge
pop
movb
add
xlat
sub
pop
mov
push
rol
pop
mov
push
push
call
jge
iret
jo
add
in
cld
test
add
mov
xchg
add
jnp
icebp
add
add
jle
popa
add
test
add
ja
xchg
ljmp
insb
mov
xchg
aad
faddl
jle
gs
lea
je
add
stc
push
cmpsb
add
repnz
pop
mov
add
add
inc
or
lea
push
push
push
lea
push
push
push
call
add
or
stos
cmp
add
add
add
les
in
aam
mov
add
add
in
je
out
in
fcomp
lret
add
mov
jmp
jns
popf
lahf
std
stos
stos
mov
notb
mov
rolb
sub
pop
add
mov
push
rol
sub
sub
pop
mov
push
push
push
push
push
call
push
jle
jge
rcr
outsl
add
gs
into
pop
push
jns
fs
js
addr16
add
add
call
add
xchg
insb
add
iret
fnsave
add
sub
pop
cmp
jne
push
dec
rol
shl
not
pop
cmp
jne
push
push
push
push
call
aam
mov
add
cwtl
add
notl
mov
add
add
popa
repnz
sti
mov
jno
add
add
lds
xchg
ljmp
lcall
inc
adc
das
mov
push
lea
push
lea
push
push
push
push
push
push
call
jae
add
out
test
loop
add
pop
lahf
ret
loop
add
jbe
add
add
add
mov
popl
pop
add
jmp
lahf
in
imul
jb
leave
mov
add
arpl
add
mov
add
add
jl
mov
testb
add
add
addb
in
fcomps
add
add
add
inc
mov
sldt
push
lea
pop
mov
push
shl
pop
mov
sub
jne
push
push
push
push
lea
push
call
jl
roll
add
mov
mov
mov
aam
out
add
cmpsl
mov
add
add
jnp
cmpsb
mov
add
mov
lock
jge
add
xchg
sub
pop
mov
push
push
push
push
lea
push
call
loopne
add
jl
mov
add
pop
out
mov
add
add
test
incb
add
add
outsl
add
add
push
mov
mov
add
mov
in
mov
lcall
add
add
jmp
push
push
push
push
push
push
push
lea
push
lea
push
call
lret
mov
add
add
enter
mov
jae
fildl
add
jno
mov
into
pop
rolb
add
jae
out
int
mov
add
testl
lahf
in
lods
cmp
std
pop
add
add
mov
cli
add
fdivr
lcall
inc
cld
push
lea
push
push
push
call
add
test
out
push
stos
nop
push
add
pop
test
popa
add
gs
pop
rolb
test
cli
add
pop
mov
push
xor
dec
pop
cmp
jne
push
inc
sub
lea
pop
mov
push
push
push
push
push
push
lea
push
push
call
add
test
rcrb
lcall
lret
data16
bound
icebp
in
add
add
data16
in
cwtl
jle
mov
push
imul
mov
add
push
xchg
loop
add
in
add
jb
mov
xchg
jne
test
in
loopne
movl
push
push
push
push
lea
push
lea
push
call
add
add
jp
out
stos
roll
mov
pop
mov
test
lods
shr
stos
testb
test
in
stos
add
add
addl
lcall
xchg
or
add
lea
push
push
push
push
push
push
lea
push
push
call
add
shll
add
mov
loop
add
js
mov
pop
pop
add
shrl
push
stc
add
orl
fwait
add
lea
add
add
jae
add
add
sub
pop
cmpw
jne
push
add
pop
mov
push
dec
rol
ror
pop
movl
jmp
push
push
push
call
cmc
in
add
add
xchg
add
push
movsl
mov
add
mov
add
rolb
add
add
mov
sti
mov
xchg
jbe
enter
mov
add
cmc
add
sub
pop
pushl
pop
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
add
push
loope
mov
add
xchg
add
add
out
add
mov
mov
loopne
lock
mov
addl
fwait
add
add
shll
jle
mov
int
repnz
scas
push
out
stos
sub
pop
mov
push
add
pop
mov
push
lea
pop
mov
push
push
sub
ror
push
xor
add
lea
shl
sub
shr
pop
ror
sub
pop
push
rol
pop
push
push
push
push
push
push
lea
push
call
mov
jecxz
movsb
pop
add
outsl
mov
enter
lds
jbe
out
pop
add
jp
lahf
add
popl
add
mov
add
add
jns
add
add
lods
mov
scas
test
add
in
fsts
xchg
rcl
add
in
call
add
push
shr
xor
sub
sub
pop
cmpl
je
push
push
shr
not
add
push
or
not
add
sub
ror
inc
add
pop
inc
pop
push
push
push
push
lea
push
push
push
push
push
call
mov
add
mov
add
add
jmp
add
mov
mov
pusha
add
call
mov
stos
mov
mov
pushf
mov
pop
add
cwtl
fiaddl
fwait
add
movsb
ljmp
add
lods
jnp
loop
into
mov
mov
sub
pop
push
push
push
push
push
call
icebp
movsl
add
add
mov
mov
add
add
lcall
icebp
add
in
xchg
add
jl
clc
scas
add
cmpsb
add
add
mov
mov
add
add
imul
mov
push
mov
add
in
lock
call
push
not
pop
cmpl
je
push
push
xor
not
push
or
not
add
dec
sub
add
shl
pop
lea
ror
dec
pop
push
push
lea
push
push
push
call
mov
add
scas
in
movsl
add
add
add
jmp
mov
add
lds
push
add
add
in
in
lcall
push
push
lea
push
push
push
call
sarl
incb
add
add
jmp
rcr
mov
add
adcb
add
iret
xlat
lahf
lea
bound
push
add
jle
add
pusha
fiadds
cmp
add
push
lea
dec
pop
cmpl
je
push
push
sub
push
push
pop
add
rol
not
shl
sub
pop
sub
pop
push
push
push
lea
push
push
lea
push
push
push
call
push
mov
xchg
mov
xchg
movsb
add
add
mov
add
mov
add
mov
lcall
mov
add
cli
xorb
add
add
xchg
rol
add
lds
add
add
movb
lods
add
scas
popl
outsl
test
in
add
in
loopne
push
call
push
pop
cmpl
je
push
push
rol
add
push
sub
add
rol
shr
sub
add
shr
pop
pop
push
push
call
loop
add
add
movb
add
jo
add
add
add
jl
mov
sti
add
jecxz
add
not
xchg
add
nop
mov
filds
add
xchg
jb
in
bound
add
filds
mov
add
xlat
add
movsb
add
clc
lcall
push
add
add
add
pop
call
cmpl
je
push
push
xor
push
or
not
add
add
sub
pop
sub
dec
pop
push
sub
sub
pop
push
push
shl
pop
call
push
sub
rol
pop
cmpl
je
push
push
shl
push
or
not
add
shr
add
ror
sub
shl
add
ror
not
pop
pop
push
xor
pop
push
push
not
sub
shl
pop
call
cmpl
je
push
push
inc
add
push
sub
add
rol
sub
add
shr
pop
sub
pop
push
ror
dec
inc
pop
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
mov
mov
add
add
lods
jl
push
cld
add
clc
outsl
sahf
flds
pop
pop
repnz
mov
add
sub
pop
call
push
inc
xor
pop
cmpl
je
push
push
shl
push
push
pop
add
sub
sub
sub
not
inc
ror
pop
xor
shl
add
pop
push
push
push
push
push
push
call
fwait
out
push
movsl
je
jge
add
mov
add
popl
in
add
add
add
xchg
push
mov
add
into
clc
jno
icebp
popa
jbe
pop
arpl
adcb
jmp
addb
add
xchg
cwtl
sarb
jbe
roll
xchg
xchg
xchg
add
mov
nop
sti
shl
fadds
insb
jmp
in
jno
rcll
lcall
push
sub
add
pop
call
push
push
push
push
call
fildl
repnz
fistl
shlb
mov
mov
sahf
shl
add
cmpl
pop
add
add
add
add
fwait
mov
repnz
xchg
add
sub
pop
cmpl
je
push
push
not
push
or
not
add
add
sub
shr
pop
inc
pop
push
sub
sub
shr
pop
push
push
push
call
xchg
add
mov
iret
pop
add
add
add
sti
stos
add
add
enter
mov
add
push
jmp
nop
clc
loop
jle
clc
jae
mov
add
int
scas
aam
jo
faddl
add
cli
add
movsb
aad
insb
add
fldl
pop
addr16
push
stc
repnz
in
clc
pop
call
push
lea
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
xchg
add
mov
cltd
pop
add
xlat
scas
stc
shll
add
mov
add
mov
add
testl
cmpl
je
push
push
sub
shl
push
xor
add
sub
sub
add
ror
ror
pop
dec
pop
push
push
push
push
call
out
add
aad
add
je
add
add
fstps
add
popa
add
mov
cmpsl
jle
ret
mov
sub
pop
push
call
push
lea
xor
shl
shl
pop
cmpl
je
push
push
dec
ror
push
xor
add
shl
sub
add
shl
pop
ror
inc
pop
push
push
push
call
or
cmc
add
add
les
incb
xchg
add
jecxz
mov
out
roll
imul
data16
ret
add
add
push
push
in
add
lcall
push
inc
add
pop
call
push
push
push
push
lea
push
push
push
push
push
push
call
lock
mov
mov
in
movb
add
pop
add
add
mov
jb
je
jb
add
popa
les
push
cwtl
add
loope
fcom
add
xchg
jecxz
cli
add
cmpl
je
push
push
shl
push
or
inc
add
inc
sub
rol
pop
sub
pop
push
dec
shl
lea
sub
pop
push
push
push
push
push
call
add
repnz
cld
add
scas
addb
mov
aad
add
mov
insb
jge
add
add
imul
add
add
pop
xchg
add
add
add
pushf
popf
jl
sub
pop
call
push
pop
cmpl
jne
push
dec
rol
pop
mov
push
push
call
push
add
lahf
push
cmc
mov
add
iret
jmp
pushf
jno
add
pop
pushf
xchg
pushf
mov
mov
loopne
in
clc
pop
movl
push
lea
push
lea
push
push
push
push
call
mov
mov
mov
flds
shr
xchg
ljmp
js
cld
add
push
out
mov
incb
loope
add
imul
push
in
fildll
add
in
call
add
push
push
push
push
push
push
call
push
add
roll
lock
enter
movl
ljmp
add
sahf
add
into
mov
add
cmc
int3
mov
add
add
icebp
xorl
add
jmp
imul
cmpsb
add
add
add
pop
jecxz
in
call
xor
pop
push
dec
dec
not
pop
pop
pop
push
pop
pop
leave
push
push
push
call
jne
jne
addb
push
stos
adcl
add
add
loope
fst
flds
test
loope
lds
add
cmpsl
filds
add
fsubs
add
loop
add
mov
add
add
add
push
hlt
nop
push
fists
add
pop
add
call
add
add
lcall
or
push
push
push
push
push
call
mov
jle
roll
in
test
enter
cwtl
je
cmpsb
add
mov
add
filds
add
mov
jecxz
mov
mov
lcall
push
lea
push
lea
push
call
add
add
add
mov
jp
mov
add
mov
push
push
add
mov
add
xchg
mov
add
push
lcall
in
add
push
push
lea
push
push
push
lea
push
push
call
mov
add
fimull
lret
add
add
add
add
nop
mov
jb
loope
mov
pop
add
sub
pop
cmpl
jne
push
push
sub
not
shl
push
push
pop
add
add
sub
add
add
pop
shr
pop
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
cwtl
xchg
mov
lcall
out
add
mov
mov
pop
add
lret
mov
loop
fnstenv
add
cltd
out
mov
add
pop
mov
xchg
jne
push
add
outsl
add
bound
add
pusha
jbe
sahf
mov
js
add
cmc
xchg
add
add
test
lcall
jne
push
xor
pop
call
push
push
push
call
add
nop
pop
add
movsl
add
cmc
aam
pop
xchg
xchg
in
clc
pop
add
add
add
outsl
lcall
jmp
add
add
push
mov
add
add
push
rcrl
add
sub
pop
push
push
rol
pop
call
jmp
push
shr
add
pop
cmpl
je
cmpl
jne
push
rol
add
sub
dec
pop
mov
push
not
not
lea
pop
call
push
push
dec
sub
ror
push
push
pop
add
add
dec
sub
shl
sub
shr
shl
pop
shl
add
pop
push
push
call
test
add
pop
add
add
insb
mov
push
add
add
add
mov
test
test
mov
pop
push
cltd
addb
add
add
lcall
jne
call
push
push
call
mov
add
add
xchg
pop
nop
add
ret
shll
cmpsb
int3
mov
imul
add
add
add
mov
sub
pop
lea
push
push
push
push
lea
push
push
call
mov
js
mov
add
add
xchg
fptan
add
rolb
push
add
addl
lods
add
lcall
push
push
push
push
lea
push
push
push
lea
push
call
shlb
pop
add
mov
fldl
pop
xchg
push
mov
add
jno
add
test
in
mov
mov
mov
xchg
pop
fldt
sti
push
add
add
mov
out
add
imul
add
fidivl
pop
add
add
loopne
pushf
mov
test
cmpsl
sub
pop
push
push
push
dec
pop
push
push
shl
add
pop
call
push
rol
pop
ret
push
push
push
push
push
call
loop
add
mov
add
data16
add
push
push
add
mov
add
pushf
add
add
cwtl
add
add
add
stc
in
add
add
ljmp
lcall
cltd
sbb
add
pop
push
push
push
push
call
imul
ret
pop
add
rorl
add
sbbl
add
mov
add
xchg
loop
add
add
loop
add
ja
in
in
pop
cmpl
jne
push
push
shl
sub
add
shl
push
and
add
not
ror
shl
rol
sub
rol
pop
sub
not
rol
pop
push
push
push
push
lea
push
push
push
push
push
call
fcompl
xlat
add
jns
xchg
add
xchg
mov
rolb
add
loope
lds
xlat
hlt
add
add
add
mov
add
add
mov
add
loopne
fwait
sub
pop
pushl
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
js
add
add
testl
pusha
popl
out
add
sti
fildl
push
jne
add
clc
js
in
add
add
lcall
cvtpi2ps
add
push
push
push
push
push
call
add
and
add
add
addr16
ja
add
xchg
sarl
push
jp
hlt
ljmp
addb
add
in
in
lcall
rclb
ret
jge
pop
jmp
push
sub
pop
cmpl
jne
push
not
rol
pop
mov
mov
push
add
dec
add
ror
pop
jmp
push
not
pop
push
push
push
xor
push
or
not
add
rol
shr
sub
add
lea
pop
ror
sub
shr
pop
push
xor
pop
pushl
push
lea
push
push
push
lea
push
call
add
mov
pop
xchg
ja
xchg
add
pop
mov
add
mov
mov
mov
mov
add
in
leave
mov
lds
jl
in
hlt
add
pop
push
movb
lret
add
push
add
xchg
int
icebp
add
add
add
scas
push
sub
pop
call
call
push
push
push
push
pop
add
xor
not
sub
inc
pop
sub
shl
add
pop
push
add
shl
dec
pop
pushl
call
push
push
push
call
add
rolb
fs
push
add
outsl
push
std
add
add
fadds
fiaddl
incb
pusha
add
push
out
push
pop
add
add
add
lcall
shrb
dec
and
add
ror
inc
xor
push
sub
add
shr
not
sub
shr
pop
not
shr
pop
push
push
lea
push
push
push
call
add
add
add
insb
add
fisttpl
xchg
fs
add
add
jecxz
jae
add
push
lods
add
push
lock
pop
add
lods
mov
cli
test
aad
popa
add
pop
pushl
push
push
push
push
push
push
push
call
add
shlb
fdivl
stos
shr
add
add
scas
add
add
add
add
mov
xchg
pop
xchg
std
mov
add
xchg
jne
int
add
jecxz
sub
pop
call
push
lea
pop
call
push
push
not
push
and
add
add
shl
shr
sub
add
sub
ror
pop
sub
add
pop
push
lea
push
lea
push
push
lea
push
push
push
push
call
mov
call
add
add
addb
add
xchg
add
cmc
in
push
add
stos
add
add
ljmp
into
stos
add
lcall
jne
call
push
xor
pop
call
push
push
shr
xor
push
and
add
add
inc
sub
sub
pop
dec
inc
sub
pop
push
push
push
lea
push
lea
push
call
add
jecxz
cwtl
repnz
xorb
add
out
fldenv
cmpsb
add
mov
add
add
addb
into
add
flds
mov
add
push
arpl
add
xchg
add
add
js
add
popl
add
jne
push
push
push
call
add
lret
add
add
cli
cmpsb
data16
add
jnp
in
repnz
sahf
call
testb
fwait
addb
mov
pop
arpl
add
add
add
ret
out
hlt
add
push
aam
ljmp
sub
pop
call
push
add
sub
sub
not
pop
call
push
push
rol
shl
push
or
inc
add
sub
sub
pop
sub
not
sub
pop
push
lea
pop
pushl
call
push
sub
sub
pop
call
push
push
shr
shr
push
and
add
inc
add
rol
sub
add
pop
pop
push
push
push
push
call
add
js
mov
add
ret
add
xchg
iret
mov
addr16
mov
add
mov
roll
add
add
add
mov
add
xchg
add
add
add
in
lock
pushl
push
lea
push
push
push
push
push
call
add
add
add
mov
out
add
nop
add
call
les
sti
cltd
add
insb
add
mov
in
loop
jno
in
mov
add
in
call
add
push
push
push
push
push
call
jnp
popl
rolb
in
add
add
add
add
add
add
ja
rolb
mov
sub
pop
call
push
push
inc
push
push
pop
add
xor
sub
xor
sub
pop
sub
pop
push
push
push
push
push
push
call
mov
leave
popl
aam
add
enter
xchg
push
jo
ret
add
addb
push
add
mov
pop
lock
add
mov
test
pusha
add
movb
cmpsl
stc
ret
call
push
add
add
pop
call
push
lea
shr
ror
pop
call
push
push
lea
dec
push
and
add
xor
sub
shl
pop
ror
shr
add
sub
pop
push
inc
pop
pushl
push
shl
pop
call
push
sub
sub
add
pop
call
push
push
dec
xor
sub
push
sub
add
dec
sub
add
shl
lea
lea
pop
rol
lea
shr
pop
push
lea
sub
pop
pushl
push
rol
sub
sub
pop
call
push
lea
push
push
push
lea
push
push
push
push
push
call
bound
lret
add
jecxz
add
add
repnz
mov
add
fists
pop
test
lods
mov
mov
mov
fs
pop
xchg
nop
push
pop
add
arpl
push
jl
add
xchg
ret
add
add
add
sub
pop
lea
push
push
push
lea
push
lea
push
push
call
int
add
add
mov
lds
jne
in
movb
add
add
mov
mov
data16
add
mov
jo
popl
stos
add
pop
pushf
pop
cld
mov
add
xchg
add
in
call
adc
and
iret
dec
shl
pop
call
push
push
rol
push
or
not
add
not
xor
sub
lea
pop
sub
pop
push
push
call
mov
shl
fxch
add
add
mov
lahf
add
add
sahf
add
js
add
lea
add
scas
movsb
fwait
jb
add
add
clc
lcall
jne
push
shr
dec
pop
call
push
push
push
push
push
push
push
push
lea
push
call
mov
add
add
add
pop
push
mov
jo
pop
pop
shl
add
add
shlb
add
jmp
loop
add
mov
fcmove
rolb
add
in
fcompl
shrb
push
xchg
out
add
shl
push
sub
add
ror
sub
xor
xor
lea
dec
pop
shr
pop
push
push
push
push
call
lods
add
lods
pop
add
mov
clc
add
jns
mov
lods
jne
popl
mov
mov
add
add
add
stc
add
add
and
int3
stos
mov
stos
jnp
add
ret
add
in
in
add
add
in
add
add
fiaddl
stc
jl
in
lock
lcall
jne
push
xor
pop
call
push
lea
push
call
add
je
add
add
jl
fmul
outsl
add
add
add
push
popf
add
aam
cwtl
push
in
xlat
add
rolb
call
rcll
add
add
pop
add
add
cltd
mov
lcall
shrb
jp
stos
push
sub
lea
dec
push
sub
add
lea
add
xor
sub
sub
sub
pop
not
shr
add
pop
push
ror
add
pop
pushl
call
push
dec
xor
sub
pop
call
push
push
push
call
fsts
gs
add
add
lahf
push
std
add
jl
les
mov
mov
int
test
add
sti
mov
add
mov
test
out
mov
jnp
lods
add
push
rol
pop
dec
jne
push
push
push
push
call
mov
xchg
arpl
adc
add
add
loope
cltd
mov
mov
push
xchg
insb
add
out
out
add
testl
add
cwtl
xchg
xlat
popf
fcoml
jmp
fsts
in
lock
lcall
cmp
mov
dec
rol
push
sub
add
add
sub
dec
pop
sub
pop
push
pop
pushl
push
rol
pop
call
push
push
call
jnp
pushf
add
add
add
jle
mov
fwait
cmc
add
add
out
addl
test
leave
rolb
out
add
stc
add
lock
jecxz
fs
jge
sahf
stos
pop
add
lcall
add
push
push
lea
push
push
push
lea
push
call
ftst
mov
add
add
jge
add
xchg
push
mov
add
fbstp
add
add
mov
mov
xchg
mov
add
xchg
mov
add
mov
insb
lods
int
add
add
in
xlat
fcmovbe
test
jne
add
push
push
lea
push
lea
push
call
jnp
jbe
add
add
orb
jmp
jp
add
add
mov
add
mov
push
add
lock
push
add
xchg
add
stos
add
add
add
enter
aam
add
lcall
add
push
push
push
call
cmpsb
push
cli
add
mov
imul
stos
ret
add
insb
pushf
mov
mov
out
add
push
jl
add
add
add
mul
mov
add
fadds
xchg
add
sub
pop
push
push
lea
push
push
call
int
fcmovbe
sub
add
add
mov
ljmp
push
popl
pusha
lea
add
loopne
xchg
add
into
push
add
add
jge
jo
mov
add
stos
jo
xchg
add
arpl
outsl
push
mov
in
add
lods
add
call
call
push
push
ror
shl
ror
push
push
pop
add
not
sub
shr
sub
xor
pop
lea
pop
push
push
push
push
push
call
add
push
xchg
pop
add
aam
fadds
stc
push
out
add
add
iret
aad
mov
add
movsb
xchg
in
jge
push
in
addr16
add
stos
add
lcall
jne
push
lea
sub
pop
call
push
lea
pop
push
call
push
lea
push
push
push
push
push
lea
push
push
push
push
call
add
out
roll
rclb
repnz
mov
mov
xlat
lahf
pop
cltd
int
add
add
test
cltd
leave
lea
lds
jle
mov
fldl
cld
add
add
in
nop
out
jp
sub
pop
mov
push
push
sub
push
sub
add
not
shl
sub
add
dec
rol
add
pop
shr
pop
push
push
push
push
push
push
push
push
push
call
mov
add
jne
push
add
pusha
ja
fldl
mov
add
add
add
xchg
pop
add
call
fadds
sub
pop
pushl
call
push
dec
add
pop
lea
push
push
push
lea
push
push
push
call
pop
add
in
test
outsl
add
jl
add
hlt
je
add
loope
test
add
add
mov
add
add
mov
add
gs
add
add
add
sub
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
pop
xorl
clc
add
add
add
into
movl
cmpsb
lods
cmpsl
addr16
add
in
test
mov
in
add
add
add
ja
add
in
fdivr
lcall
add
lcall
add
jecxz
aam
call
addb
popf
pusha
add
add
xchg
mov
in
js
addl
jmp
pop
jl
xchg
add
add
add
lds
int
cmc
clc
fs
add
sub
pop
push
push
add
sub
pop
call
push
push
push
push
push
call
xchg
lcall
mov
add
xchg
push
fdivp
add
pop
xorb
xchg
jo
push
imul
xchg
add
add
add
clc
add
pop
lea
push
push
dec
lea
dec
sub
push
or
inc
add
ror
dec
xor
sub
shl
add
pop
not
rol
add
pop
push
xor
add
pop
pushl
push
push
lea
push
lea
push
push
call
rolb
loopne
push
int3
movb
mov
add
jmp
insb
movb
shlb
mov
mov
add
enter
add
lods
add
int
popa
aam
scas
fld
ficompl
sbbb
add
add
add
mov
loopne
add
ja
sub
pop
call
push
lea
push
push
call
add
push
mov
add
add
pop
push
add
insb
loop
add
jecxz
out
add
xchg
lea
mov
outsl
popf
add
add
xchg
add
push
push
add
add
mov
add
xchg
sub
pop
push
call
push
push
lea
push
push
pop
add
add
ror
lea
shl
sub
ror
pop
pop
push
push
push
lea
push
push
push
call
mov
mov
add
pushf
add
shrb
add
add
add
mov
add
add
add
xchg
mov
push
pop
mov
mov
mov
add
lcall
jne
call
push
push
lea
push
push
push
push
push
push
push
push
call
add
xchg
mov
add
fildl
aam
add
add
cmpsb
push
pushf
rcrl
add
popl
add
mov
add
leave
push
xchg
add
push
cmpsl
add
add
movsl
add
add
test
cmpsb
add
pop
lods
fiaddl
cld
clc
add
add
lcall
rclb
mov
lea
push
push
sub
shr
sub
push
or
inc
add
shr
inc
sub
dec
lea
sub
pop
rol
shr
sub
pop
push
push
push
push
push
push
call
add
mov
pop
lds
pop
aad
jae
jp
pushf
xchg
add
loopne
out
add
add
add
add
add
mov
add
add
loope
je
stos
loope
add
jmp
sub
pop
pushl
call
push
lea
add
pop
lea
push
sub
shl
pop
push
push
push
lea
push
push
call
out
cwtl
jbe
add
les
mov
add
out
loop
lahf
in
mov
mov
cwtl
fwait
add
add
mov
testb
mov
movsl
addr16
add
mov
add
add
jbe
sahf
mov
add
add
fwait
out
xlat
add
in
lock
lcall
add
int3
pop
push
pushl
push
push
add
shl
push
xor
add
dec
sub
dec
add
pop
add
rol
pop
push
not
sub
pop
push
call
push
push
ror
not
push
or
not
add
rol
sub
rol
sub
inc
sub
add
pop
dec
rol
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
call
fists
add
xchg
push
push
add
add
clc
add
stc
mov
add
std
xchg
add
mov
scas
in
push
mov
add
xchg
mov
add
int3
out
add
add
pop
mov
add
ja
repnz
pop
pushl
push
sub
add
add
pop
call
push
xor
pop
push
push
push
push
push
push
push
push
push
push
call
sti
add
add
mov
mov
stc
xchg
lods
rcll
add
add
hlt
push
add
add
add
add
add
add
int
frstor
add
lock
add
add
xchg
add
fidivs
insb
test
add
jl
add
test
testb
in
fcompl
shrb
hlt
fmull
xlat
sub
add
push
or
not
add
sub
sub
add
shl
not
pop
ror
shl
xor
pop
push
add
pop
pushl
call
push
pop
call
push
dec
inc
add
pop
jmp
push
add
xor
pop
pushl
push
inc
rol
add
pop
mov
push
dec
add
dec
pop
jmp
push
push
push
sub
add
add
add
sub
lea
rol
not
pop
add
not
add
pop
push
push
push
push
push
push
push
call
add
outsl
add
jnp
xlat
add
add
add
fwait
add
add
add
scas
jp
mov
xchg
jp
lock
call
test
incb
add
in
add
incb
pop
fiaddl
cld
out
jecxz
push
stc
add
push
outsl
jne
add
pop
add
cmc
enter
out
add
add
in
jbe
mov
in
pushl
call
push
inc
pop
push
push
shr
shr
not
pop
call
push
push
ror
shl
dec
push
or
inc
add
sub
ror
xor
sub
xor
sub
dec
not
pop
shr
shl
pop
push
pop
pushl
push
shr
lea
pop
call
push
push
push
call
loopne
add
test
add
pop
add
add
out
push
xchg
movb
je
add
add
jb
je
add
add
push
hlt
testb
add
test
cmpsl
add
movsl
mov
hlt
pop
push
push
lea
push
push
push
push
push
push
call
add
sbb
mov
js
add
call
test
pop
aam
cld
cmc
add
test
xchg
scas
push
fadds
push
add
add
rclb
pop
leave
push
add
shr
inc
pop
add
push
rol
pop
pop
push
dec
ror
not
pop
pop
pop
push
xor
sub
pop
xor
push
push
push
push
push
lea
push
push
push
call
jns
xchg
sti
std
add
add
xchg
add
sarb
popf
add
add
xchg
add
add
add
mov
fcompl
add
std
add
pushf
pop
mov
mov
add
leave
push
jb
add
sub
pop
inc
push
push
push
push
call
add
jge
ljmp
jp
cli
loopne
add
add
add
add
add
cli
mov
shll
stos
in
pusha
jne
mov
jge
jne
add
stos
add
cli
leave
stos
fadds
jo
add
nop
fcompl
mov
test
lret
add
lcall
or
push
shl
sub
pop
leave
push
shr
inc
rol
pop
ret
push
rol
rol
pop
push
push
push
lea
push
call
add
jbe
mov
shrb
adcl
cmpsb
push
fisttps
jp
add
add
lahf
xchg
add
add
add
pop
sub
pop
mov
cmpl
jne
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
lods
int3
add
ja
add
add
enter
push
add
jb
loop
mov
test
test
add
addr16
fildl
push
lock
fcomps
int
faddl
fcmovb
add
into
add
in
in
lcall
inc
and
push
lea
push
push
lea
push
push
call
mov
pop
push
pop
test
push
add
stc
jle
mov
add
push
int
jb
gs
xchg
mov
addr16
add
fildl
lea
add
mov
jp
sub
pop
jmp
mov
push
not
sub
pop
and
push
push
push
push
lea
push
lea
push
push
call
jl
xchg
jecxz
mov
add
mov
jb
ljmp
add
add
add
mov
mov
ljmp
add
add
jbe
flds
bound
std
add
shll
add
jmp
add
subb
add
ret
add
in
in
xor
push
push
push
push
push
call
add
shll
in
jmp
popa
pop
mov
jno
mov
jmp
add
lock
loopne
add
std
add
sub
pop
xor
add
push
push
push
push
push
call
add
cmc
add
mov
clc
lcall
push
add
cltd
add
add
jle
add
lret
lods
mov
push
add
xlat
add
xchg
add
add
cld
mov
push
add
add
add
stos
push
mov
add
lcall
dec
call
mov
addl
inc
add
add
lahf
mov
add
jecxz
xchg
sti
test
add
mov
scas
xchg
lods
jne
add
bound
aad
addr16
add
add
fsubs
add
mov
ljmp
bound
cmc
mov
aam
fcmovnbe
sub
pop
dec
push
pop
sub
push
ror
sub
pop
jmp
push
push
push
lea
push
push
push
push
push
push
push
call
fstl
roll
add
rcr
jmp
add
scas
add
add
fildl
jle
fwait
add
test
add
mov
mov
fildl
addl
out
add
cli
add
add
pop
add
icebp
out
add
xchg
ljmp
sub
pop
sub
push
lea
push
lea
push
push
call
add
push
rolb
pop
jge
add
add
add
fildl
outsl
pop
cmpsl
add
xchg
jbe
cmpsl
repnz
jno
jle
scas
xchg
add
add
add
mov
test
pushl
push
push
push
push
push
call
xlat
mov
in
add
add
add
popa
add
sbbb
stos
lret
mov
add
pop
lret
add
in
add
push
mov
fnstenv
lcall
push
add
add
pop
sub
cmp
jne
push
lea
push
push
push
push
push
push
push
push
call
xchg
idivl
movsb
add
add
add
add
mov
push
in
loope
add
jae
push
jp
flds
stos
pop
xorb
insb
jl
jnp
mov
jno
incb
in
add
test
add
jge
cld
hlt
add
mov
call
fcompl
enter
rol
aad
and
aam
aad
lea
push
lea
push
push
call
mov
call
add
add
add
add
loope
cmpsl
mov
clc
aad
lret
mov
add
les
test
pop
add
adcl
add
mov
sahf
add
cmpsb
mov
mov
add
add
cmpsl
std
clc
mov
add
add
add
add
add
add
or
sub
pop
sub
mov
push
push
push
call
add
add
imul
xchg
add
out
movsb
mov
add
mov
fxtract
cmpsl
xchg
sarl
in
jns
add
mov
add
push
add
add
push
jle
add
fs
sub
pop
shr
add
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
loope
add
add
imul
add
push
mov
push
add
add
mov
add
add
jmp
push
push
push
push
push
push
lea
push
call
xchg
add
icebp
pop
add
mov
fs
xchg
hlt
jmp
add
js
add
jae
mov
push
call
notl
mov
pushl
push
shl
shl
pop
pop
push
push
lea
push
call
outsl
xchg
add
out
push
push
fiadds
add
lret
add
data16
repnz
lcall
add
fcmovnu
loop
lret
movsb
stc
test
jns
add
xchg
hlt
cwtl
pop
add
push
add
mov
add
add
add
add
jecxz
add
stos
add
jge
add
in
hlt
lcall
jmp
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
stos
mov
mov
add
add
scas
add
into
add
mul
lods
rcrb
xchg
add
scas
xchg
clc
add
add
fldl
pop
rcr
xchg
shrl
add
add
test
jb
push
add
add
and
push
inc
shl
pop
sub
push
push
push
push
push
push
call
scas
add
push
add
jge
imul
mov
jbe
stc
mov
stos
add
jne
popa
xchg
add
fidivs
movsb
aad
fiadds
out
mov
push
in
lea
sub
pop
cmp
jne
push
not
pop
leave
push
lea
push
lea
push
push
push
lea
push
push
call
add
arpl
lcall
add
add
add
add
mov
pushf
out
cltd
add
jo
add
cwtl
popa
rol
mov
jne
add
lcall
add
push
push
push
lea
push
push
push
push
push
push
call
mov
add
int
add
add
add
pop
jl
cli
out
add
ja
out
gs
mov
nop
add
cmp
pop
push
ja
mov
pop
out
push
add
lcall
pop
pop
pop
lahf
cmpsb
push
rorl
mov
pop
jp
mov
mov
push
push
push
call
add
pop
add
mov
pop
std
int3
enter
mov
pushf
mov
je
scas
incb
mov
mov
mov
hlt
lcall
cld
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
shll
nop
loope
mov
add
add
add
add
leave
mov
add
push
push
mov
pop
add
std
fsubrs
xchg
mov
jmp
pop
mov
add
std
addl
nop
ja
into
pop
add
div
add
lcall
push
push
push
push
push
lea
push
call
jl
add
xchg
jge
std
add
pop
add
xchg
add
add
add
add
add
mov
jno
add
test
add
mov
aad
shl
aam
mov
push
sub
pop
push
push
push
push
push
push
push
push
call
add
int
add
pop
out
jo
jecxz
add
mov
add
mov
stos
mov
test
mov
lods
sub
pop
push
push
shl
xor
lea
inc
pop
push
mov
push
dec
add
sub
pop
lea
push
rol
add
pop
sub
push
push
push
push
call
add
mov
lea
xorb
jnp
mov
call
pop
rolb
cltd
nop
add
push
add
imul
add
pusha
add
mov
into
add
push
cli
lea
roll
rcr
in
lock
mov
shr
push
lea
push
push
lea
push
push
push
lea
push
call
hlt
idivb
movsb
flds
add
data16
repnz
lret
push
movsl
pop
rolb
add
call
add
mov
fidivl
add
mov
in
in
lcall
ficoml
out
lea
push
push
push
lea
push
lea
push
call
in
add
imulb
roll
fwait
add
mov
lcall
add
jecxz
xchg
fldt
loop
in
loopne
lcall
fwait
addb
add
xlat
sub
pop
add
push
push
push
push
call
add
out
xlat
jae
push
fsubrp
roll
add
lret
add
add
push
aam
add
movl
les
lea
out
in
add
push
data16
add
vpshad
add
add
add
xchg
lret
mov
lock
lcall
jnp
push
add
pop
add
push
inc
shr
shr
pop
xor
push
push
lea
push
lea
push
lea
push
call
add
add
scas
add
add
add
stc
scas
add
add
andl
pusha
int3
cli
add
add
jbe
add
mov
add
add
in
lock
aam
jp
mov
add
add
popa
andl
cmpsb
mov
mov
pop
add
in
pop
mov
push
push
lea
push
push
push
push
push
lea
push
push
call
push
add
bound
add
gs
mov
add
add
mov
outsl
in
xchg
cwtl
int3
rolb
lea
mov
add
ret
add
add
enter
mov
loop
mov
test
add
add
loopne
push
lea
add
pop
rol
push
push
push
push
call
popa
leave
scas
loope
add
cltd
leave
xchg
add
push
add
andb
pop
jmp
jnp
add
fsubrl
out
jb
in
lock
lcall
rolb
xor
not
pop
xor
inc
push
not
dec
dec
pop
cmpb
jne
push
not
xor
pop
add
cmp
je
push
add
add
pop
add
cmpl
jne
push
lea
push
lea
push
lea
push
push
push
push
push
call
rolb
iret
add
add
out
stos
add
stos
xchg
mov
add
sahf
jmp
add
pop
jo
jns
js
add
add
add
in
mov
jle
add
stos
add
jle
mov
add
add
imul
push
push
push
push
push
lea
push
call
add
leave
sahf
add
push
add
add
mov
jb
jle
add
add
add
add
outsl
call
test
add
rolb
adcl
call
faddl
cmp
push
push
push
lea
push
call
enter
mov
jmp
xchg
sbb
jb
add
jp
add
jle
add
push
fwait
push
out
xchg
add
add
jb
mov
add
add
popa
test
pop
add
gs
jo
pop
add
cltd
bound
cmpsl
pop
jnp
push
add
in
lock
pop
push
inc
lea
shl
pop
pop
push
push
lea
push
call
test
push
add
out
add
add
test
mov
add
std
mov
mov
add
iret
mov
ret
in
hlt
lcall
ret
push
sub
pop
mov
push
ror
dec
ror
pop
add
mov
push
push
lea
push
push
push
push
call
mov
int
add
imul
pop
add
add
mov
gs
jle
ret
push
push
add
fstps
xorb
ja
add
add
out
xchg
xchg
in
add
add
add
push
push
lea
push
call
push
shr
fstpt
stos
aad
fdivrl
scas
xchg
add
cltd
stos
add
std
add
addl
filds
add
jle
cmc
fidivs
stc
add
addb
add
add
rol
pop
call
push
push
not
rol
add
pop
call
push
sub
dec
not
pop
xor
push
push
push
push
push
push
call
jbe
add
scas
outsl
add
roll
std
push
mov
add
jp
add
cltd
aam
mov
xchg
movsb
add
jno
pop
lret
mov
cltd
add
imul
pop
cwtl
jl
lds
sub
pop
pop
pop
push
lea
push
push
push
push
push
call
ljmp
fistpl
popa
add
add
add
jp
mov
add
mov
mov
and
mov
push
arpl
add
push
cmpsb
pop
add
jmp
add
add
fwait
jge
mov
call
shl
dec
ror
pop
pop
push
lea
push
push
push
push
push
push
push
call
add
jmp
add
add
add
add
arpl
add
out
add
into
stc
add
mov
pop
into
lahf
xchg
add
add
add
add
add
in
sub
pop
leave
push
lea
push
lea
push
call
add
aam
push
add
add
addl
pusha
push
pop
add
add
jne
pushf
push
add
mov
add
roll
sub
pop
ret
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
pop
flds
xchg
hlt
add
add
cmc
add
mov
shll
add
add
add
add
add
pusha
mov
add
loop
add
ficompl
test
push
add
fildl
mov
outsl
jne
jp
add
in
add
xchg
fidivl
in
fdivr
lcall
push
push
call
mov
add
add
add
add
mov
test
push
add
add
add
lea
pop
iret
add
add
mov
lret
add
add
movl
push
fildl
pop
xchg
movsb
popl
mov
xchg
push
add
push
add
add
add
add
in
push
sub
pop
add
push
not
sub
add
add
pop
push
push
push
push
call
jns
lock
push
shr
jns
push
add
add
mov
push
lea
out
add
xchg
test
push
add
cltd
movsb
cmpsb
les
jnp
popl
add
jns
flds
sub
pop
push
push
ror
add
pop
push
push
xor
add
rol
sub
pop
push
push
pop
mov
push
push
sub
add
pop
pop
lea
push
sub
add
pop
sub
mov
push
rol
ror
shr
pop
shr
push
add
shl
sub
pop
add
push
push
push
lea
push
push
call
sahf
lock
add
test
out
add
add
mov
jno
pop
add
add
mov
mov
loopne
add
mov
movb
fiaddl
add
push
add
add
out
fldl
xchg
add
out
test
add
sub
pop
mov
push
add
ror
rol
pop
add
push
push
push
push
call
aad
xchg
imull
push
popa
pushf
mov
push
in
fiadds
lret
scas
aam
push
mov
add
fstpt
jne
add
test
add
add
pop
pushl
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
add
loop
cld
jle
rolb
mov
add
add
lds
scas
add
in
xchg
add
add
add
jmp
popa
add
add
add
pop
not
cmc
test
mov
in
in
popl
mov
push
shr
pop
add
push
add
pop
xor
push
rol
pop
lea
mov
push
lea
push
push
push
call
xchg
jle
js
iret
mov
repnz
add
shl
add
mov
add
add
negb
mov
add
add
repnz
xlat
roll
add
add
popa
mov
filds
pop
outsl
loopne
xchg
add
lahf
addb
add
sub
pop
add
push
pop
xor
rol
push
push
push
call
fisttpl
mov
data16
movb
xchg
in
push
lea
add
test
add
push
divl
add
cmpsb
popa
add
test
xchg
jbe
sub
pop
nop
push
inc
sub
pop
nop
push
push
lea
push
push
push
push
call
pop
add
je
bound
add
rcr
add
cmpsl
cmpsl
in
lret
scas
cwtl
popf
fwait
add
add
add
pusha
leave
add
add
jnp
add
add
lods
mov
call
push
push
push
lea
push
push
push
call
jbe
filds
nop
add
mov
mov
std
add
add
loope
add
mov
add
push
push
mov
add
imul
mov
xchg
out
pop
call
mov
add
xchg
in
fs
jo
mov
movb
roll
out
add
add
mov
enter
add
add
sub
pop
nop
push
push
push
push
push
push
push
push
call
fs
add
mov
adcl
fnstsw
xchg
add
insb
call
add
and
add
mov
mov
mov
xchg
loop
testl
add
add
sub
pop
nop
inc
push
push
call
add
add
add
lea
int
add
out
mov
xchg
gs
rcrb
jge
add
mov
push
ja
std
add
movsb
xchg
fcomps
add
xlat
add
data16
shlb
xchg
popa
add
add
rcr
add
insb
movsb
add
filds
mov
sub
pop
nop
nop
push
push
push
lea
push
push
push
call
lret
mov
int3
add
add
add
add
nop
add
out
add
pop
je
add
in
addl
add
jmp
cwtl
lret
out
push
cld
add
out
add
movb
add
pop
addb
add
call
jne
push
rol
rol
not
pop
add
nop
push
push
push
push
lea
push
lea
push
call
lea
mov
shlb
add
add
jmp
hlt
xchg
fwait
add
scas
jle
cmc
addl
out
add
stc
cltd
add
add
jle
in
call
nop
push
not
ror
pop
cmp
je
push
sub
xor
add
shl
pop
nop
push
push
push
call
imul
mov
lds
jne
add
mov
add
mov
add
cmpsl
pop
push
iret
add
add
inc
push
sub
pop
nop
nop
push
push
lea
push
lea
push
lea
push
call
xchg
std
add
push
pop
sbb
shrb
add
mov
add
imul
add
add
movsb
aad
sarb
add
hlt
addb
add
jle
insb
js
fwait
ret
add
push
add
sub
pop
cmp
jb
push
lea
push
push
lea
push
push
lea
push
push
call
jp
mov
add
jae
xchg
test
je
add
mov
imul
push
fisubrs
cmpsl
push
nop
push
jp
in
in
lcall
rclb
jmp
push
push
push
lea
push
lea
push
lea
push
call
shrb
rcrb
iret
pushf
add
sarl
mov
add
lock
lret
test
jo
add
mov
mov
add
mov
add
add
add
add
cwtl
add
lcall
push
and
push
call
add
cmc
loope
in
add
add
jle
add
movl
lahf
mov
add
add
gs
add
add
add
faddl
add
add
mov
sti
add
jb
imul
jnp
nop
addl
mov
sub
pop
add
movzwl
push
sub
pop
mov
push
push
push
push
lea
push
call
xlat
push
aam
clc
aad
arpl
add
jnp
add
leave
mov
add
test
lea
xchg
pop
arpl
xchg
add
pushf
sub
pop
add
push
lea
inc
pop
mov
xor
push
add
rol
pop
xor
push
lea
push
call
jne
xchg
add
xchg
jle
xchg
add
shl
add
hlt
jno
add
push
add
add
add
testl
add
fwait
addl
rolb
fldenv
add
jp
sub
pop
shl
xor
push
rol
rol
inc
sub
pop
shl
xor
push
ror
inc
ror
add
pop
shl
xor
push
shl
sub
pop
mov
push
push
call
add
add
xorb
repnz
test
lock
add
add
add
xlat
add
mov
mov
mov
mov
mov
add
push
sub
pop
add
push
push
push
lea
push
call
add
testb
test
in
add
adcl
jne
imul
add
add
add
add
mov
lods
add
lods
add
add
add
subl
in
lock
lcall
pop
push
lea
push
push
call
pop
add
mov
push
xchg
mov
add
arpl
cwtl
out
pop
pop
add
test
les
fadds
out
out
pop
mov
add
lcall
push
add
rol
ror
sub
pop
pop
push
shr
pop
leave
push
push
push
push
push
call
add
jb
push
add
add
add
add
add
fwait
pop
add
add
scas
push
add
loop
pop
fcoms
lods
add
cli
add
ret
push
xor
lea
pop
push
push
push
call
mov
add
push
add
mov
mov
icebp
push
flds
cmpsb
loop
add
add
add
xchg
xlat
pop
imul
mov
andl
xlat
mov
mov
pop
test
test
pushf
rol
cmc
add
xchg
add
add
add
sub
pop
mov
push
xor
inc
rol
add
pop
push
push
ror
ror
ror
pop
push
push
push
lea
push
lea
push
push
call
add
imul
test
add
cmc
mov
pop
popl
lock
add
mov
add
sti
add
lea
in
push
add
mov
add
add
add
in
push
lods
jns
hlt
push
fidivl
out
out
int
in
lock
lcall
push
lea
sub
ror
pop
mov
push
inc
sub
ror
add
pop
mov
push
push
push
call
add
add
loopne
out
fwait
xchg
add
in
cmc
je
adcl
lods
add
add
add
pop
add
cltd
pop
shr
add
add
shl
call
jne
mov
int3
sub
pop
mov
test
je
push
lea
push
push
lea
push
lea
push
lea
push
push
call
fidivs
jbe
add
les
xchg
fdivs
xchg
add
pop
mov
imul
movl
lcall
jno
push
push
lea
push
push
push
lea
push
call
add
fs
movsl
in
add
mov
ljmp
add
mov
push
add
xchg
pop
repnz
sub
pop
test
je
push
push
call
jae
add
add
add
icebp
fldl
xchg
push
mov
test
add
add
push
jp
xchg
pop
mov
add
popf
pop
add
movb
pop
mov
mov
push
dec
shl
pop
mov
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
jecxz
jge
je
rolb
add
fldl
mov
jb
cmpsl
in
mov
push
into
push
add
add
add
add
nop
loope
add
call
push
add
jle
hlt
push
addr16
or
xchg
lret
testl
fcomps
cmp
je
push
push
push
call
clc
mov
fisubrs
hlt
stos
cmpsl
in
add
mov
addr16
flds
addb
add
add
add
add
lods
add
popf
xchg
mov
add
mov
mov
sub
pop
test
je
push
shl
shr
pop
mov
inc
push
lea
push
call
xchg
outsl
movb
test
lods
fld
mov
fadds
lock
pop
add
add
lods
iret
push
add
add
insb
add
add
out
add
add
fwait
lcall
in
clc
pop
cmp
je
push
lea
push
push
lea
push
push
call
xchg
fldenv
data16
je
pop
add
shl
push
enter
fs
add
ljmp
js
mov
add
ja
mov
in
in
pop
test
jne
push
ror
add
pop
xor
push
add
lea
pop
pop
pop
push
not
ror
add
pop
pop
push
sub
pop
pop
leave
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
xchg
movsb
test
addr16
add
add
add
les
mov
add
scas
fiaddl
shrl
push
roll
rol
fcmovnbe
fiadds
jbe
add
lcall
or
push
push
push
push
push
push
push
push
call
mov
in
mov
test
pop
jmp
pop
test
stos
popl
aam
jge
xchg
add
mov
clc
jmp
cwtl
mov
add
js
insb
iret
add
cmpsb
push
add
xchg
addr16
rolb
xchg
xchg
add
xchg
in
loopne
mov
push
push
push
lea
push
push
push
lea
push
call
add
ror
fadds
pop
mov
fldl
add
div
rclb
fwait
out
arpl
scas
pop
add
add
add
cmpsb
popa
sub
pop
inc
push
lea
push
push
call
add
testb
je
mov
add
in
addl
add
out
popf
mov
jne
xchg
mov
add
andb
mov
ja
enter
add
add
push
add
cmpsl
add
fbld
add
lret
je
pop
sub
fiadds
add
nop
mov
lcall
lock
push
lea
push
call
ja
loop
add
xchg
xorb
add
jp
mov
rorl
mov
jo
hlt
fs
cli
add
lock
sub
pop
lea
push
push
push
call
rcl
sahf
add
add
add
pop
jne
jae
js
add
add
stc
xchg
cld
in
add
mov
mov
int3
add
in
hlt
lcall
popa
add
ljmp
pop
aam
push
add
add
out
pusha
lret
movsb
in
add
add
pusha
pop
out
fldl
pop
add
add
scas
stc
aad
mov
add
shll
push
mov
sahf
add
mov
add
add
movsb
in
pop
xchg
add
stos
add
pop
mov
pop
clc
pop
add
push
add
aad
sub
pop
test
je
push
inc
lea
shr
pop
mov
push
push
push
call
add
add
repnz
xchg
cmpsb
add
sahf
loop
add
fiaddl
lods
pusha
mov
push
xchg
add
popa
add
ljmp
add
movsb
lds
jle
add
lcall
movb
not
not
pop
cmp
jne
mov
push
push
push
push
call
andb
add
add
scas
xchg
iret
add
add
ljmp
lcall
jmp
add
add
cltd
mov
xchg
add
ret
add
add
add
stc
add
add
xchg
add
iret
lret
add
sub
pop
test
je
mov
push
shl
pop
add
cmp
je
push
shr
add
pop
jmp
push
dec
xor
lea
xor
pop
xor
pop
push
pop
pop
pop
push
push
lea
push
push
lea
push
lea
push
push
push
call
sahf
jle
aam
jbe
pop
orb
mov
fdivrp
add
add
addb
mov
add
add
add
add
in
mov
jmp
int
mov
pop
ja
xchg
lods
push
add
push
add
xchg
ljmp
lcall
leave
push
lea
push
call
outsl
add
xchg
lods
add
add
data16
enter
loopne
rolb
lea
push
loopne
push
add
or
lea
push
inc
inc
pop
pop
push
lea
rol
inc
not
pop
pop
push
push
push
push
push
call
add
movsl
fcomps
rorl
add
lods
mov
jp
push
add
jbe
fwait
js
add
sub
pop
pop
pop
push
push
push
lea
push
call
enter
lock
add
movb
jp
mov
add
popf
lods
push
add
jns
add
add
test
push
pushf
mov
add
xlat
add
call
cmpsb
xchg
shlb
pop
add
fistl
testl
sti
add
add
mov
in
lock
leave
ret
push
inc
pop
mov
pop
push
dec
lea
pop
pop
push
xor
sub
pop
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
jle
popf
mov
sti
add
nop
gs
sbbl
jne
add
idivb
out
add
lret
in
fcompl
push
shr
add
pop
leave
push
rol
ror
sub
pop
ret
xor
cmp
push
inc
cmp
xor
adc
and
adc
inc
cmp
and
cmp
stos
cmc
cmp
xor
adc
jb
adc
mov
add
repnz
xor
mov
mov
aam
xchg
divl
mov
popf
aas
loopw
inc
outsb
pop
lahf
int
sbb
out
or
mov
loop
std
imul
mov
cmp
aaa
lds
inc
inc
sarl
cwtl
or
fsubl
mov
bound
add
sub
shrb
jle
test
jp
sub
adc
jbe
jbe
pop
pop
xchg
cli
out
aam
xchg
xchg
lock
xor
fwait
rorb
fmul
cltd
outsl
xchg
sub
call
in
test
int3
int
and
call
loopne
aad
jne
scas
rcll
mov
pop
fists
int
insb
inc
xor
scas
lcall
add
xchg
adc
mov
xor
call
pop
bound
repz
stos
jge
cmpsb
dec
aaa
and
outsb
sub
out
repz
mov
push
mov
xchg
pop
mov
das
insb
jl
bound
fldcw
stos
ffree
test
imul
dec
bound
mov
push
xor
hlt
loop
std
cmp
pop
pop
in
xor
adc
jae
addb
dec
mov
cwtl
mov
sbb
mov
dec
andb
mov
arpl
nop
or
cmc
fstpl
test
cmp
mov
aam
jb
push
daa
cmp
ret
lcall
shll
bound
and
mov
test
in
adc
sub
add
cli
adc
sbb
xor
mov
cmp
sub
stos
push
adc
ret
jl
mov
pushf
cmpsb
or
cmpsl
scas
mov
sbb
sbb
and
daa
lret
pop
dec
xchg
inc
stos
aas
xlat
jno
jg
push
cwtl
sub
out
arpl
div
xchg
in
clc
dec
lods
loop
test
filds
cwtl
mov
and
lds
fcmovb
js
testb
mov
jecxz
pxor
rorl
in
xchg
mov
stc
push
mov
push
outsb
imull
data16
jle
xchg
mov
leavew
xlat
movsl
mov
or
push
dec
sbb
dec
aaa
jne
inc
push
cmp
pop
cmpsb
fiaddl
mov
repz
pop
imull
cmpsl
test
pop
sbbb
ljmp
gs
aaa
push
in
xchg
dec
test
mov
sub
ja
mov
push
int3
mov
jae
mov
test
ret
inc
out
jle
hlt
xor
inc
std
push
inc
add
jne
lret
sbb
dec
out
mov
inc
rcr
ret
mov
dec
adc
xchg
aam
insl
dec
repnz
sbb
xchg
add
movsb
out
xor
hlt
adc
push
dec
aas
push
dec
fidivrs
sbb
cwtd
fstl
add
push
fisttps
xchg
cmpb
jl
dec
mov
pop
push
sbb
stc
pop
mov
mov
popf
push
cs
push
mov
fwait
cld
std
add
pop
and
pop
add
xlat
pop
or
jl
stos
test
xchg
jne
cwtl
lea
jg
loope
pop
cmp
or
inc
mov
repnz
bound
pop
mov
inc
inc
push
mov
ljmp
xor
pop
movsb
hlt
stos
pop
repnz
mov
into
fstl
jmp
rclb
pop
jbe
addl
sbb
shll
mov
pop
clc
add
lea
pop
cmp
cmp
arpl
aam
or
mov
sub
mov
imul
lahf
jne
mov
jecxz
das
stos
inc
popa
insl
out
sbb
jae
mov
popf
dec
roll
out
mov
sub
xorb
sbb
add
xor
jns
inc
sbb
xor
jg
cmp
out
or
out
aaa
jnp
pop
outsb
push
jg
mov
fidivl
jecxz
addb
repz
pushf
pop
add
out
push
out
inc
fsubr
mov
mov
addr16
cli
add
mov
and
jne
stc
shrb
inc
or
lods
mov
lea
inc
dec
mov
cltd
and
dec
sub
clc
sub
add
popf
jb
movsl
int
mov
mov
aas
xchg
adc
mov
adc
add
add
roll
cld
push
jl
aas
out
push
sub
pushf
xchg
mov
sbb
jp
pop
std
gs
test
repnz
mov
lret
push
clc
fcmove
mov
daa
push
sub
add
adc
pop
dec
push
push
fldz
push
test
mov
in
push
cmpsb
push
jl
mov
or
inc
xlat
push
dec
mov
lret
cli
aas
ret
mov
cmp
push
jbe
pop
imull
and
mov
mov
lret
mov
add
pop
rorl
and
sbb
insb
adc
jmp
fists
mov
test
and
adc
and
cmpsb
cmp
popf
inc
popa
jge
mov
mov
push
dec
jmp
nop
sbb
pop
ja
sbb
test
repnz
push
adc
xchg
pop
ret
dec
cmp
cmp
insl
push
xchg
fcmovnbe
xchg
and
out
xorb
add
xorl
loop
shr
out
sahf
insb
das
push
inc
or
pop
nop
sub
pop
sti
mov
imul
aad
pop
arpl
imul
push
mov
out
andnps
je
aaa
shll
inc
lea
xchg
ja
fiaddl
aaa
lcall
mov
mov
cmp
jnp
sbb
prefetch
testl
lret
loop
pop
cmp
jl
aam
mov
mov
xor
xor
icebp
in
cmp
fsubl
dec
sub
gs
or
dec
fdivr
cs
cmc
mov
mov
mov
fdivl
cmpsl
xchg
cld
dec
std
insb
push
cmp
and
outsb
sub
pop
inc
lcall
subb
pop
lcall
jns
and
jno
dec
mov
mov
cwtl
fistps
cmpsl
repz
xchg
push
aaa
loop
cmp
and
lods
sbb
mov
std
or
fiadds
xchg
inc
mov
dec
nop
mov
add
sub
nop
clc
out
dec
adc
pop
ffreep
ja
fistl
sub
fidivs
fwait
pop
ljmp
pop
xchg
leave
js
loopne
adc
icebp
rorl
mov
mov
pop
cmp
imul
out
fcompl
push
fiaddl
lret
dec
inc
push
xchg
xchg
rorb
push
pop
mov
test
pop
sub
pop
push
sbb
push
or
pop
stc
adc
inc
sub
enter
jno
inc
loopew
jo
jne
or
mov
hlt
pop
hlt
adc
xchg
out
push
into
iret
pop
mov
cltd
jl
push
lret
mov
lcall
addb
iret
cmc
mov
out
xchg
adc
dec
in
pop
adc
arpl
sub
fmuls
and
mov
mov
push
add
and
lcall
mov
outsb
nop
push
out
sub
das
mov
loopne
pop
imulb
es
pushf
lock
adc
leave
iret
popl
outsb
cmpl
lods
cmp
loopne
jno
jae
ja
int3
sub
xchg
call
add
lea
enter
popa
mov
sbb
add
mov
or
pop
add
or
push
or
data16
test
xchg
xor
rolb
sub
jne
or
outsl
imul
mov
imul
xor
pop
sub
dec
lret
hlt
lea
pop
mov
int3
ds
in
and
icebp
pushf
and
add
icebp
imul
mov
fwait
pop
jecxz
imul
jp
aas
add
std
mov
je
push
ds
cli
out
ret
inc
jbe
daa
loopne
pushl
popa
adc
stos
mov
fcompl
mov
xor
rcrb
repz
mov
sub
outsl
xchg
sub
frstor
cld
vpsllw
mov
pop
out
push
mov
jo
dec
sub
mov
cmpsb
lods
xor
into
xchg
cmp
pop
movw
xor
inc
cmc
mov
test
add
jo
cmpl
jb
out
adc
lods
adc
mov
psubd
mov
jp
mov
push
je
out
add
fmulp
ds
xchg
add
popf
test
es
inc
shrb
mov
xchg
aam
dec
test
pushf
ss
ja
cli
repz
dec
rolb
dec
les
cmp
fdivr
cmp
jo
insb
jmp
adc
mov
pop
leave
push
adcb
pop
aas
push
stos
adc
in
adc
jl
jne
lds
jno
xchg
test
mov
push
test
adc
mov
sub
pop
jl
fstps
mov
pop
fisttps
add
jnp
sbb
mov
jae
dec
gs
adc
outsl
aad
andl
pop
mov
das
adc
nop
sub
mov
add
fstps
test
xlat
adc
outsl
adc
fbstp
popf
jnp
dec
ficomps
mov
push
out
add
or
inc
daa
movb
push
mov
xlat
jecxz
cmpsl
add
rclb
inc
cmc
pop
sub
jp
push
mov
mov
jmp
scas
rcrl
pop
insl
out
jg
in
loope
test
imul
cmp
adc
stos
enter
scas
cmp
and
jp
loope
cmc
xorb
in
andl
popa
xchg
dec
lea
push
les
dec
cs
xchg
mov
in
cmp
push
idiv
jmp
movsl
mov
mov
pop
lea
mov
cs
jno
jne
clc
popf
or
repnz
push
arpl
jl
push
idivb
scas
test
cli
xchg
loop
jecxz
pop
mov
es
mov
mov
mov
or
mov
xor
fsubrl
jns
mov
loope
mov
outsb
je
in
xor
fdivs
arpl
jnp
dec
sub
loopne
mov
adc
mov
fildll
lret
aaa
xchg
push
or
mov
sti
pop
aam
int3
jp
je
mov
cmp
dec
insb
ret
stos
es
sbbb
incl
mov
iret
rolb
out
es
pop
sti
jb
insl
sbb
jp
mov
push
adc
or
pop
stos
bound
inc
scas
out
cmp
gs
roll
call
jmp
das
das
jecxz
roll
inc
cmp
cltd
push
mov
addb
or
adc
adc
dec
jns
iret
rclb
xchg
mov
mov
or
int
push
repnz
dec
aaa
sub
mov
rcrb
loop
mov
push
or
push
xchg
lret
dec
insb
leave
xor
mov
adc
mov
sub
pusha
sub
jge
pop
push
lret
repnz
jae
adc
pop
add
pop
mov
or
rorb
ja
mov
lds
pop
rcl
sbb
jp
mov
movsb
movsb
inc
sbb
dec
popf
roll
repnz
mov
pop
jmp
les
sbb
pop
popa
jp
adc
mov
pop
dec
es
pop
sti
mov
bound
cs
sub
and
fisubrs
jbe
cmp
lahf
sbb
fisubs
int3
ljmp
ja
jnp
cmp
mov
and
dec
rcll
cmpsb
add
adc
mov
cmp
ret
dec
std
outsb
pop
mov
andb
jb
xchg
and
sub
mov
std
sti
push
in
lds
addr16
dec
rorb
mov
lds
fmuls
sub
mov
pop
test
mov
xlat
push
test
push
jne
xchg
outsl
jb
in
dec
mov
adc
mov
inc
sbb
cmp
mov
fadd
aas
cltd
dec
cwtl
jecxz
lret
sub
and
ljmp
into
arpl
mov
stos
add
in
push
add
test
sub
pop
movb
mov
push
and
sbb
popa
addr16
sbb
subl
lret
jne
jbe
mov
mov
fidivrs
lret
fs
aas
push
inc
xorl
cwtl
das
mov
adc
loop
mov
movsb
push
adc
rol
enter
jns
fadds
sbb
fwait
jp
or
push
cmp
sub
pop
jmp
push
dec
insl
outsl
push
cwtl
in
jns
aam
cmp
adc
pop
xchg
or
lock
dec
pop
stos
push
pusha
setnp
mov
mov
rcr
ljmp
icebp
mov
add
pop
adc
dec
jmp
imulb
leave
cmp
fisubrl
sub
and
shrb
mov
pop
das
mov
ljmp
gs
inc
dec
in
les
push
movb
mov
sbb
scas
std
mov
insl
dec
addr16
sub
push
je
lea
and
adc
iret
dec
inc
or
pop
push
mov
sbb
repz
or
fisttps
mov
inc
mov
insb
inc
inc
or
cmp
push
lret
in
fbstp
lock
popf
add
mov
inc
jne
jnp
xchg
shll
pop
mov
or
and
mov
bound
rolb
xor
outsl
sub
cmp
cmc
pop
push
xchg
cmp
lock
shl
addl
daa
iret
jl
fisttpll
test
sbb
lcall
and
jo
rorl
imul
xor
or
jp
inc
popa
int
scas
jo
cmp
std
shll
outsl
clc
rcll
into
call
push
xchg
and
add
loopne
not
je
out
dec
imul
test
push
in
inc
push
pushf
sub
cmp
js
inc
adcb
enter
cmp
push
mov
push
test
pop
mov
pop
lock
mov
add
icebp
insb
mov
lock
xchg
inc
xor
insb
pop
xor
pushf
dec
stos
cmp
push
test
jnp
push
int
movaps
imul
sbb
scas
xor
push
nop
imul
pop
mov
dec
jns
and
xor
fwait
or
inc
test
dec
in
xchg
push
sub
imul
add
or
cmpsb
mov
loop
push
loopne
pop
repz
in
mov
xchg
push
scas
nop
adcb
lds
nop
push
shlb
add
pop
mov
mov
xchg
gs
movsb
mov
in
fsubl
xchg
mov
mov
in
cmp
xor
push
jae
aaa
jle
pusha
sahf
push
mov
fs
fstpl
std
ljmp
test
push
rolb
mov
pop
adc
push
enter
or
or
mov
jnp
lret
inc
test
fnsave
dec
testb
loope
inc
push
adc
push
jmp
dec
daa
add
rcr
fxtract
dec
inc
iret
mov
fcompl
or
hlt
rorl
or
mov
mov
sbb
ret
cltd
sbb
inc
pop
jo
mov
cmp
subb
stc
orb
bound
mov
mov
sahf
jecxz
repz
mov
cmc
pop
pop
pop
cmp
lock
lcall
out
aas
mov
popf
or
inc
push
sti
xchg
inc
das
test
test
mov
mov
pop
repz
incl
cld
jo
inc
dec
out
push
xor
cli
and
gs
outsl
push
or
pop
lcall
push
scas
and
add
xor
mov
mov
mov
lea
adc
daa
jg
xchg
mov
hlt
icebp
loop
sti
inc
xor
sub
adc
out
mov
lods
mov
lret
and
sub
mov
add
xor
cwtl
or
call
and
xchg
pop
mov
popa
mov
sub
or
sbb
jecxz
cmp
or
fnstsw
js
lret
xlat
aad
sbb
ds
insl
jnp
rolb
pop
dec
pop
loope
jl
push
dec
das
setbe
mov
jl
jbe
rcrb
jmp
loopne
pop
push
aad
mov
mov
pushf
push
lahf
mov
addb
imul
mov
or
adc
sbbb
push
lea
pop
subl
insb
lcall
cli
mov
cmc
cmc
test
ret
sbb
pop
mov
jl
popf
inc
xlat
jmp
sbb
sbb
mov
mov
aaa
mov
or
jmp
pop
ret
mov
jle
adc
jne
sbb
or
xchg
jl
xor
scas
idivb
sub
iret
pop
lcall
or
hlt
bound
push
test
mov
mov
push
push
mov
fisttpl
adc
push
das
testb
push
pop
jns
dec
push
lods
shll
add
sarb
sbb
pop
ja
stos
add
push
inc
in
mov
jnp
inc
pop
loope
movsb
xlat
aam
mov
dec
adc
outsb
xor
adc
inc
ljmp
add
pusha
out
lods
aad
jmp
ret
mov
xor
push
outsb
cld
mov
cmp
aam
jg
aaa
push
ljmp
cs
daa
insl
mov
xchg
mov
sbb
mov
or
mov
stos
stos
iret
in
adc
pop
xchg
sbb
pcmpgtb
fs
ja
and
cltd
dec
sub
pop
xchg
pusha
es
xor
arpl
movsb
jmp
lea
loope
sub
arpl
inc
popa
pop
cwtl
xchg
scas
cmp
mov
push
es
je
ret
cmp
hlt
dec
imul
mov
aam
jne
cs
pmovmskb
jnp
push
mov
or
ljmp
jp
mov
push
inc
int3
dec
or
xor
imul
shl
mov
mov
orb
iret
pop
push
aam
xor
inc
adc
rcll
loop
stos
data16
cld
mov
orl
mov
out
mov
data16
xor
into
frstor
push
jno
push
divl
js
and
vorps
adc
ss
push
fisttps
imul
fisubrl
sarb
icebp
inc
xor
push
pop
push
push
mov
or
js
adc
aam
sub
mov
fcom
inc
pusha
mov
insb
cmpsb
imul
in
inc
xchg
test
in
ljmp
adc
xchg
cltd
fwait
sbbb
xchg
pop
fprem
adc
push
lods
stos
cmp
dec
inc
loopne
mov
aad
jmp
adc
mov
xchg
inc
les
pop
push
pop
gs
xchg
in
hlt
das
xor
pushf
sbb
mov
inc
add
sub
and
out
mov
fs
jo
clc
or
xor
push
lds
out
adc
xor
ja
cmp
jbe
je
inc
in
lcall
xor
stc
push
pop
ret
or
xor
and
mov
call
cmpsb
lods
fidivs
dec
fs
test
cltd
les
push
sub
out
test
shl
lock
pop
inc
aas
jl
inc
repz
add
adc
cmpsb
leave
and
mov
inc
cmp
jns
cmovb
mov
mov
pop
sarl
popa
inc
cmpsb
stc
in
inc
push
out
fidivs
and
push
addr16
loop
bt
std
inc
adc
mov
lret
dec
and
cmp
push
hlt
call
pop
jl
inc
lret
sbb
push
cwtl
out
push
call
jp
in
adc
les
in
mov
sar
dec
test
jle
push
insl
shll
push
ret
cmp
mov
loopne
daa
and
addr16
push
mov
and
push
cmp
loope
sbb
out
mov
decl
hlt
fcmovb
stos
sbb
mov
jmp
divb
decb
sar
and
jb
cs
sbb
es
sbbl
lds
iret
fimull
hlt
sub
shl
lds
arpl
dec
xchg
pop
int3
mov
xor
cmp
jo
pop
mov
xor
push
imul
jg
ret
xchg
ds
add
jg
inc
sub
inc
jne
sti
push
pushf
jp
jecxz
push
push
pop
movsb
push
idivl
gs
lock
pop
xor
inc
cli
inc
sub
mov
sub
xor
dec
out
lods
or
inc
jns
adc
xchg
nop
test
std
pop
and
adc
aam
fsubrs
push
xchg
mov
mov
sub
out
xor
jmp
xchg
leave
aad
andl
clc
pop
pop
stos
xchg
add
sbb
aaa
stos
cmp
outsb
in
xchg
movsb
js
adc
out
scas
testb
pop
mov
pop
test
add
and
cmp
lock
cmpsl
pop
and
mov
add
ret
cmp
cmc
adc
xchg
addr16
insl
fstl
xor
ss
or
repz
cmp
jp
mov
stos
and
push
negl
mov
jl
loop
push
dec
cmp
or
sub
inc
lahf
push
pop
cwtl
adc
fldcw
xchg
cmp
push
aas
jne
push
or
out
jle
pop
push
fcomps
or
sbbb
popa
pop
loopne
cli
sub
ret
test
test
jo
cwtl
xor
mov
push
xlat
lods
je
dec
push
xchg
out
or
dec
addb
shll
pop
cmp
stos
test
in
fstl
repnz
cld
stos
mov
xchg
push
adc
or
imul
mov
cmp
popf
lcall
adc
cmp
insl
stos
into
jmp
pop
pop
imul
sbb
mov
sub
push
mov
fdivrl
cld
push
ljmp
sub
inc
and
movsb
pop
lret
cmp
xchg
or
repz
js
jae
ret
jno
add
jae
lcall
or
sti
inc
push
pushw
sbb
adc
xor
push
xor
add
mov
sti
pop
push
dec
les
out
aaa
movsl
xchg
xor
ljmp
insl
jb
out
push
cmp
push
scas
mov
lret
enterw
nop
subb
stos
mov
stos
testl
mov
xor
mov
and
and
lea
jae
push
xchg
into
imul
sub
loopne
das
cmp
cmpsb
cmp
addb
or
imul
pushl
out
push
cmp
push
mov
push
leave
xor
stos
mov
aad
rcrl
cwtl
jp
out
cwtl
or
subl
mov
cltd
leave
cmp
ljmp
ja
fsub
or
and
mov
ja
push
jecxz
inc
int
fwait
adc
cmp
les
xchg
jbe
pop
aam
or
xchg
sbb
push
sbb
repnz
pop
pop
mov
out
jp
adc
push
addr16
fnstsw
xchg
ret
jno
not
ds
xor
int3
ret
jp
movzbl
jns
and
test
insb
and
add
test
push
mov
cli
add
insb
cmp
add
iret
mov
push
mov
push
cltd
cmc
mov
adc
jmp
test
daa
stos
inc
or
mov
jno
cmpsl
test
push
adc
mov
push
dec
repnz
dec
clc
js
icebp
daa
adc
xlat
mov
or
stos
pop
cltd
or
movsb
mov
push
enter
movl
sub
push
sub
adc
xchg
mov
mov
xor
dec
pop
loope
add
sub
mov
idivl
sub
mov
repnz
jp
or
insl
sub
lods
divb
xlat
pusha
aas
shlb
cltd
in
mov
cltd
sar
scas
das
and
push
mov
in
insl
sahf
in
adc
lret
shlb
cmpsb
sar
fwait
cmc
jge
sub
or
mov
add
jmp
push
js
into
or
xor
mov
int3
stc
rolb
aad
dec
push
xor
mov
lea
push
fsubrs
push
sti
push
flds
stos
xor
mov
xor
and
mov
pushf
shr
and
or
icebp
ljmp
sbb
mov
shl
add
xchg
ficoms
daa
cli
push
ljmp
push
push
js
stos
jns
jp
aad
sbb
jo
inc
xchg
adc
sbb
push
in
inc
mov
mov
dec
arpl
outsl
xlat
clc
pop
rcr
fidivl
xchg
jb
rclb
movsb
cs
in
mov
sarb
adc
lret
jo
xchg
out
repz
xchg
sti
sahf
and
jae
fcomps
bound
ss
imul
xlat
pusha
mov
out
mov
iret
mov
mov
das
jnp
push
and
push
adc
push
ljmp
sti
jne
mov
push
ds
lret
push
test
ror
push
cmp
sbb
fwait
gs
stos
mov
xchg
xchg
addr16
xchg
adc
and
pushf
push
daa
out
scas
clc
lods
push
orl
mov
mov
fsubrl
lock
push
dec
jge
mov
mov
je
sti
sub
sub
pop
mov
mov
fcomi
jl
or
call
out
out
stc
or
add
or
sahf
mov
mov
ja
sarb
fs
add
jae
xchg
jae
int3
andl
bound
jns
cmp
add
insb
push
dec
sub
mov
int
fcoml
add
ficoml
and
loope
lahf
ljmp
xchg
cltd
xchg
mov
jno
decb
cmp
jne
cs
shrb
pop
pop
lret
je
xor
cmp
or
ljmp
xchg
fs
lds
jl
sbb
sub
ljmp
or
fldt
aaa
or
or
bound
inc
adc
and
mov
sbb
pop
mov
xor
pop
lods
sub
fsub
ret
xchg
pop
mov
fistl
fldt
mov
push
scas
aaa
cmp
mov
cli
xchg
fidivrs
cmp
inc
lds
mov
adcl
sub
popf
outsl
ja
push
adc
out
ljmp
pop
in
test
jns
sub
ret
jbe
popa
jg
jo
mov
push
adc
add
mov
out
neg
fstpt
gs
add
xchg
mov
cli
lcall
cmpsl
in
into
xlat
fisubrl
push
ss
not
stos
ret
cmpsl
daa
push
inc
or
xchg
or
xchg
js
cmp
xchg
or
test
jns
scas
inc
push
jl
bound
scas
cmc
xchg
clc
std
mov
add
mov
lods
cld
add
pop
add
cmc
mov
mov
cmpsb
pop
cmpsb
fsubrl
cmp
les
cmp
jmp
imul
stc
sbb
cmp
xchg
ja
cmp
push
fst
lahf
sub
inc
in
sarb
xor
outsl
mov
pop
arpl
fmull
enter
test
pop
mov
fidivrl
enter
xchg
push
scas
nop
mov
push
call
xor
inc
addr16
add
cmp
xchg
push
aaa
jp
lea
xchg
or
mov
clc
inc
data16
into
dec
lods
push
rcr
movsl
sbb
mov
xor
cmp
mov
mov
mov
mov
es
jp
mov
icebp
cmp
insl
mov
jns
jb
test
gs
xor
cmpsb
mov
fs
jne
je
stos
fidivs
jb
fs
jl
lahf
faddl
pop
cmc
mov
or
mov
lret
and
pop
insl
pusha
adc
pusha
in
mov
dec
mov
inc
lcall
mov
adc
insb
imul
mov
ret
popl
sbbb
and
pop
adc
xor
fwait
ret
loopw
push
call
test
mov
xor
xor
pushf
xchg
mov
add
xor
or
aad
test
sti
dec
ret
cli
rcll
adc
arpl
fstps
arpl
aaa
xchg
pop
or
sub
ret
jae
xchg
and
add
jne
in
xor
ret
clc
xchg
xor
add
add
pop
ja
and
dec
sahf
push
fildll
cld
addb
lods
sahf
lahf
and
test
pop
mov
mov
push
scas
pop
dec
xchg
xor
adc
in
aad
fnstcw
add
cwtl
jb
xchg
pop
adc
fnstcw
mov
add
test
out
movsb
cmp
fadds
xchg
mov
cmp
fisttpll
xchg
sarl
xor
mov
jns
test
mov
addb
test
cmpsl
pop
aam
inc
andb
fcomps
and
lcall
or
xor
icebp
dec
loope
jge
adc
xor
enter
lret
mov
dec
push
lcall
adc
scas
fisubs
gs
dec
sbb
aaa
add
fstps
clc
movsl
imul
mov
bound
adc
lcall
inc
test
dec
jge
popa
mov
in
inc
mov
and
test
inc
lret
pushf
add
mov
and
cmp
ja
cli
popa
nop
xchg
jns
inc
aaa
jmp
pop
rcrb
xchg
mov
sbb
sub
add
dec
cmp
cmp
imul
cmp
cwtl
loope
sub
aaa
pop
mov
testb
add
jp
mov
sbb
mov
push
inc
ficomps
inc
mov
xchg
xor
in
jge
mov
dec
fnsave
push
out
sub
in
icebp
repnz
xor
test
stos
nop
push
pop
mov
inc
aad
dec
push
cmpsb
push
mov
sub
jge
insl
sub
mov
jge
aam
push
dec
xchg
lods
or
out
xchg
mov
xchg
in
rolb
and
pop
dec
xor
loop
in
and
jns
test
xchg
in
xchg
rorb
cmp
aam
rclb
or
rorl
jg
lods
decl
mov
pop
mov
movsl
inc
xchg
mov
popa
mov
jmp
dec
lock
pop
clc
sub
stos
das
dec
cmp
sbb
pop
scas
inc
clc
or
dec
jl
clc
xchg
sbb
pop
push
mov
orl
jnp
jmp
in
xor
add
or
ja
fbstp
imul
push
es
stos
jecxz
mov
and
pop
mov
jb
xchg
dec
add
rclb
mov
pop
pause
stos
arpl
xchg
mov
xor
and
jbe
lret
call
mov
cld
mov
push
dec
out
or
loop
jne
hlt
inc
rcrl
adc
sbb
adcl
cld
xor
ret
mov
jne
scas
push
cmpsl
shlb
lds
in
xchg
testl
inc
or
or
aaa
rcrb
lea
jae
ds
push
cli
data16
xor
add
dec
mov
add
addr16
jae
mov
daa
sub
pop
or
mov
mov
xchg
sarl
sti
push
or
mov
stc
mov
aad
cmpsl
jbe
mov
xor
jge
ret
das
jbe
add
pop
xor
das
jmp
test
sbb
xchg
popa
or
mov
dec
jle
fistps
xchg
popa
jmp
cmc
and
pop
pusha
insl
int3
cmpsl
xchg
xor
and
add
sub
xor
je
mov
pop
ret
and
stc
inc
shll
mov
xchg
cwtl
sub
and
inc
push
sti
iret
out
test
or
outsb
or
scas
lea
sub
xor
jl
sahf
clc
sub
ficomps
inc
dec
adc
out
and
sub
push
xor
mov
nop
negb
xor
jb
in
xchg
pushf
push
fcmovu
dec
push
pop
xor
test
sbb
or
inc
xchg
jle
xor
or
cmp
loopne
aam
and
lea
repnz
rcrl
xchg
icebp
ret
repz
loopne
sarl
xchg
cmp
test
mov
test
pop
in
cmp
repnz
call
ret
cmovge
cld
int3
pop
mov
call
outsb
mov
je
lea
cmpsl
or
cmp
stos
or
repnz
mov
xor
push
test
ds
repz
mov
adc
cli
pop
iret
xchg
push
mov
sbbb
repnz
mov
mov
cmp
dec
pushf
sbb
mov
pushf
mov
jl
xchg
push
cs
fldcw
mov
push
sti
fisubrl
shl
test
xchg
out
fldt
loop
dec
adc
aas
pop
scas
mov
push
sub
sbbl
sub
lods
mov
mov
movsb
sbb
fmuls
popa
inc
cmpl
jmp
sub
hlt
jae
scas
mov
inc
pushf
pusha
aad
cmp
xchg
insb
lret
lcall
cmc
jl
dec
xor
popa
rclb
xlat
jb
mov
insl
outsl
mov
mov
int3
mov
lahf
pop
lods
into
fbld
pop
idiv
inc
rolb
je
js
inc
xor
scas
sarb
push
add
out
out
jne
cmp
out
push
sar
xor
push
cmc
sub
mov
mov
repnz
xor
mov
out
popf
add
mov
out
xor
xchg
in
test
sti
or
out
dec
aad
and
inc
xchg
xor
test
jecxz
pop
push
add
shlb
xor
rclb
dec
mov
pop
mov
sar
mov
cmp
cltd
aaa
mov
cmp
xchg
push
pop
mov
mov
cmpsl
xchg
sbb
imul
out
jns
fcomps
push
adc
cmp
cld
add
cmpsl
jg
fisttpll
movsb
les
in
jp
dec
clc
leave
mov
adc
dec
sbb
mov
movb
fsts
loop
inc
das
faddp
mov
int
test
enter
int
clc
sub
jle
out
insb
fmull
aas
sbb
push
adc
sbb
xor
fildl
push
and
xor
jae
fiaddl
imul
cltd
xchg
jle
xchg
getsec
shrb
lcall
jnp
sbb
or
in
sub
cmp
aas
fisttps
jne
scas
push
ss
adc
inc
bound
ljmp
rcll
scas
cmpsl
and
adcb
dec
jge
jne
cs
fnstenv
push
cs
hlt
icebp
sbbl
jo
cli
adcl
and
dec
and
fcomps
dec
decb
shll
fwait
jecxz
test
mov
sub
inc
mov
popf
mov
and
enter
inc
addr16
inc
je
inc
adcl
inc
or
icebp
jbe
jmp
xchg
push
aaa
pop
sbb
push
xchg
jno
sahf
xchg
add
mov
shlb
hlt
outsl
aam
data16
push
pushf
lgdtl
or
pop
mov
loope
mov
test
push
call
in
sbb
imul
or
and
lcall
movsl
lods
inc
jge
in
test
dec
in
mov
xlat
cltd
add
out
ljmp
push
popf
divl
sbb
nop
mov
xor
enter
mov
in
adc
out
cmpsl
lret
repnz
mov
mov
hlt
sub
rcrl
sbb
push
clc
aam
xorb
je
loope
out
mov
loop
pop
popa
sti
cmp
leave
jmp
push
jb
shl
aas
out
test
hlt
mov
mov
mov
pop
sarl
insl
cwtl
pop
cs
stc
jno
divb
fdivrl
stc
loope
cmp
out
es
xor
inc
jmp
or
inc
dec
fcomp
cld
xchg
test
popf
rcrb
out
add
cmp
outsl
lret
mov
xchg
dec
push
lods
ds
orb
inc
mov
call
xor
jno
pop
pop
addl
xor
pop
xchg
call
add
mov
sbb
subb
mov
add
xor
and
std
sub
fmull
jnp
imul
pop
sbb
fdivs
js
pusha
out
adc
sbb
mov
add
sub
punpcklwd
loopne
mov
dec
mov
jg
imull
aas
adc
push
testl
jge
mov
mov
scas
aad
and
lods
jnp
ficompl
mov
pushf
mov
jb
inc
push
pop
or
insb
lods
ljmp
or
add
inc
sbb
iret
cmpsl
sbb
pop
ds
push
cmpl
sub
and
fwait
test
icebp
stc
ficoml
mov
fisubrl
out
stos
sbb
cmc
clc
test
mov
sub
sbb
or
mov
rolb
inc
sub
or
into
imul
jns
int3
adc
push
orl
inc
sahf
lahf
dec
mov
pop
jae,pn
push
mov
mov
fisttpll
ljmp
fdivrs
and
jae
iret
push
cmp
aaa
sbb
xor
and
xor
mov
sbb
dec
mov
addl
imul
movsl
push
inc
sub
or
mov
xchg
jo
out
cmp
aas
xchg
mov
cmc
jl
mov
imul
ja
packssdw
pop
cwtl
mov
cmpl
mov
int
daa
imul
fcomi
outsb
add
lds
push
sahf
pop
lcall
sbb
sti
mov
push
mov
jge
lods
stos
lock
xchg
lret
cmpsl
push
add
or
fdivp
sahf
sub
sbb
ret
loope
int3
outsl
int
jge
add
int
loopne
jo
mov
xchg
sbb
adc
rolb
shl
pop
jns
jae,pt
mov
sbbl
dec
mov
xchg
fcomip
mov
daa
and
pop
mov
dec
push
pop
jg
inc
pop
mov
inc
ret
mov
jae
popf
fmuls
jge
sbb
paddw
idivl
js
dec
fnstsw
pop
cmpsl
push
jno
inc
or
popa
shlb
lds
orl
std
cmpb
cmp
sahf
or
sbbb
test
xor
adc
mov
inc
ret
cmp
sbb
and
ds
cmpsb
mov
cli
mov
xor
int3
push
nop
inc
xchg
cmpsb
or
lds
xor
or
cmp
gs
aam
sub
mov
pop
mov
jle
push
fnstsw
sbb
insb
dec
xchg
call
xor
push
jl
cld
cltd
sub
add
jg
mov
loop
lea
ret
int
mov
outsl
lret
fistpll
or
icebp
aam
push
test
jl
sub
mov
pop
adc
mov
test
ljmp
mov
inc
dec
pop
jns
jae
xchg
fists
add
mov
pop
dec
stos
inc
mov
inc
test
xchg
dec
and
fnstenv
stos
push
lret
push
and
sti
ljmp
loop
inc
xor
aam
scas
test
mov
sub
dec
xor
cwtl
xor
sub
sbb
push
ret
popa
mov
dec
inc
mov
mov
pop
xchg
rcl
cmp
imul
in
test
nop
addl
jbe
rorb
adc
movsl
mov
dec
jg
rcrb
lret
mov
stos
aam
outsb
popa
adc
jbe
cmp
mov
mov
addl
add
icebp
pop
cmpsl
pop
imul
mov
aam
jecxz
mov
jbe
fildll
push
mov
mov
pop
dec
xor
fisttpll
jle
insl
jnp
xchg
and
inc
ljmp
into
xor
orb
gs
adc
aad
jne
push
in
or
lods
aaa
add
das
xchg
ret
jp
rorb
or
dec
or
inc
xchg
loop
push
aaa
inc
es
cmp
push
movsb
push
ror
inc
jecxz
add
add
dec
lcall
call
xchg
cmp
call
cld
jl
mov
fidivrs
lods
cmpsl
out
stos
inc
in
scas
xor
sub
xchg
cmp
mov
cli
mov
jne
xor
js
call
sub
jno
arpl
cmp
iret
andb
sub
ret
pop
dec
push
dec
je
add
mov
xchg
push
push
insb
mov
sbb
out
mov
dec
orl
sub
fsubrs
dec
aas
les
push
sbb
xchg
pop
out
mov
fcoml
mov
cmpsb
adc
sub
mov
aaa
shrl
mov
repnz
or
jb
popa
and
xchg
push
fiadds
dec
lock
daa
pop
or
icebp
stos
lock
into
dec
arpl
push
and
sbb
gs
cmp
cmpsb
mov
mov
ret
xor
loop
sbb
cmp
inc
shlb
fcomps
pop
orl
insb
mov
pop
pop
les
aas
and
jb
or
xchg
loope
test
jmp
xchg
jne
sarl
gs
push
lcall
cmp
xchg
aam
jb
repnz
rcrb
pop
or
clc
pop
sahf
test
adcl
pminub
lods
mov
pop
daa
inc
mov
dec
stc
jl
dec
xor
popa
fs
pop
pop
cwtl
je
mov
test
imul
xchg
push
or
js
or
sbb
fsubl
incb
push
shr
test
loop
push
div
out
in
and
mull
loop
add
arpl
out
adc
inc
sub
push
sub
ds
and
fisubrs
les
cmp
lds
jmp
inc
js
xchg
sar
lret
dec
xor
sub
lods
loop
fdivr
daa
insb
movsb
repz
lret
inc
cmp
stos
iret
adc
sarb
call
and
mov
sbb
ja
dec
out
std
lea
rolb
imul
pop
mov
and
xor
mov
mov
cmp
shrb
adc
push
in
mov
or
push
cmpsl
inc
push
pop
pop
insl
adc
pop
cmp
mov
push
cli
mov
xchg
into
mov
pop
ljmp
mov
sbb
dec
adc
push
mov
adc
mov
fisttpl
data16
or
push
mov
sub
stc
or
leave
xor
aad
cmp
push
loope
ret
cmpsl
mov
sbb
je
addb
mull
xchg
jbe
int
mov
nop
call
aaa
pop
addr16
mov
dec
dec
cltd
push
mov
push
into
adc
xchg
scas
adc
lods
adc
xchg
cmp
mov
push
lret
clc
ja
lret
xor
in
fistpll
lahf
push
adc
mov
sbbl
mull
mov
add
cmp
adc
push
imul
out
push
pushf
pop
rcll
cs
shrl
or
sbb
ljmp
add
arpl
cmpsl
add
xchg
fadd
xchg
push
xchg
loope
pushf
pop
dec
test
xor
mov
sub
cli
cmc
push
jne
jmp
cwtl
sub
call
nop
lds
mov
sbb
jmp
jl
adc
fistpl
js
es
cltd
jns
aam
loope
scas
out
inc
mov
cmp
dec
and
push
clc
cltd
rolb
andl
fbld
imul
lret
loop
push
lods
mov
mov
xor
push
data16
xchg
insl
mov
mov
stc
jbe
add
cmp
pushf
dec
in
insb
sbb
push
stc
fwait
mov
jb
mov
push
mov
add
ljmp
push
inc
dec
jmp
imul
sahf
popf
sbb
push
jmp
xchg
insl
ret
cwtl
mov
js
fnsave
or
outsl
das
fbstp
sub
and
scas
jae
jecxz
inc
mov
imul
in
dec
cmpsl
jmp
cltd
add
test
cmc
push
das
xor
out
lods
rolb
in
xchg
dec
push
je
jg
pusha
or
das
pop
sbb
pop
jmp
fs
pop
fidivrs
faddl
pop
imul
jl
popa
push
lcall
mov
inc
pop
stc
out
sub
ljmp
mov
inc
stc
push
repz
callw
mov
dec
arpl
sub
jns
push
popa
dec
or
stos
rclb
mov
push
std
rol
les
sbb
loopne
mov
xchg
push
inc
push
or
ljmp
pop
lret
or
sbb
mov
clc
pop
xchg
leave
jae
inc
leave
push
cwtl
ret
or
fimuls
push
and
icebp
dec
adc
pop
xchg
inc
int3
push
jle
push
mov
or
xchg
pop
jmp
mov
mov
push
mov
or
jmp
sub
add
dec
and
aam
pop
es
sarl
lret
stc
push
jb
mov
sahf
pop
xor
cmp
xor
sbb
iret
fwait
int
add
jmp
imull
xor
lock
fldcw
and
stos
shll
ret
or
pop
cmp
xchg
dec
in
in
adc
mov
lcall
inc
dec
cmpl
push
cmc
fs
aaa
xor
mov
mov
sar
in
mov
std
fcomps
stos
pop
stc
cmp
push
lock
movsb
mov
movsb
inc
std
jae
fwait
xor
add
dec
pop
inc
test
xchg
pop
addr16
sbb
es
push
mov
mov
mov
push
bound
dec
popa
int
mov
test
icebp
enter
inc
cltd
aaa
cmp
fimull
or
pop
mov
cmpsl
mov
sub
pop
cld
sbb
and
adc
push
mov
dec
daa
rcr
pusha
cwtl
sub
adc
daa
pop
push
shrb
inc
stc
aad
xchg
scas
pop
jg
push
lods
sbb
lock
shr
into
scas
mov
jle
jmp
pop
out
xchg
xchg
ret
aam
push
dec
in
push
inc
jno
dec
cmpsb
dec
int
popa
sub
cmp
std
or
ret
push
or
aas
and
stc
and
jle
fs
pop
inc
push
into
jecxz
sub
or
fmuls
add
scas
pop
xchg
mov
in
jg
test
addl
mov
mov
jl
mov
or
jnp
adc
cmpsl
stc
pop
sub
das
push
insb
cwtl
mov
jns
mov
or
out
mov
test
imul
loope
pusha
mov
mov
seta
and
jb
jmp
enter
out
jbe
stos
xor
dec
mov
movsl
push
sbb
and
scas
repz
cmp
std
cmp
sahf
sub
xchg
xor
mov
push
aad
popl
mov
imul
sbb
jmp
mov
xchg
aad
lret
push
stc
jnp
mov
rorb
inc
xor
pop
lods
sbb
scas
lahf
sti
aam
sub
sbb
rcrl
and
push
mov
repnz
mov
add
pop
pop
push
xlat
add
ljmp
in
sub
and
enter
repnz
mov
pop
push
adc
adcb
add
idiv
or
pop
fcmovne
jge
sub
sbb
adc
aaa
and
lret
das
es
pop
loopne
in
inc
jmp
mov
mov
jg
aaa
bound
sub
loope
repnz
and
mov
xchg
or
iret
mov
jp
xchg
cmp
sub
addw
fsubrs
sbb
std
fdivrs
push
out
sub
aam
test
fisubrs
and
xor
lods
push
insb
andb
inc
movhpd
jp
cmp
push
push
and
je
sarb
ret
loopne
pop
mov
xor
jne
dec
push
xchg
jns
pop
shrb
fstpt
test
push
dec
and
into
xchg
add
mov
lock
fisubrl
and
xor
imul
mov
cmp
xchg
cwtl
loop
and
push
jp
pop
adc
sub
dec
insb
mov
mov
fbld
xor
stc
faddp
or
test
mov
in
div
sbb
sub
ja
mov
shll
xchg
xor
add
and
jl
mov
push
fstpl
mov
xchg
in
mov
jne
xor
dec
mov
sbb
loope
push
push
or
dec
idiv
into
out
pop
mov
into
rcll
js
cwtl
add
push
fnstenv
add
cmp
mov
sbb
stc
cmp
adc
push
or
jle
adc
inc
ja
aad
cmp
xor
ljmp
rcrl
sahf
xor
outsb
stc
mov
xor
rorl
and
cmp
pop
les
sub
fs
pop
and
lahf
xor
cwtl
cmc
and
jb
xor
or
push
ss
fwait
pop
sub
lock
bound
sbb
outsb
add
push
or
icebp
pop
jg
stos
xchg
aaa
addr16
gs
sbb
adc
sub
sbbb
adc
ds
push
in
lea
hlt
mov
adc
pop
cmp
adc
pusha
aaa
mov
mov
jge
pop
sub
push
loope
imul
dec
adc
inc
push
aam
mov
xor
pop
sub
movsb
jb
jmp
xchg
push
out
mov
cmp
icebp
cmp
pop
stc
rcrb
orb
add
cmpb
inc
fildll
mov
ljmp
jbe
xor
add
ror
test
xlat
jmp
lods
nop
pop
cmp
inc
lock
ljmp
mov
dec
cltd
addb
mov
mov
cltd
jne
jbe
stos
aaa
push
mov
or
jae
push
out
sub
pop
add
daa
movsb
shl
les
rcl
or
fwait
lret
dec
sbb
pop
cld
andb
sbb
mov
mov
mov
xor
popa
or
lods
ret
stos
in
dec
xorl
inc
add
scas
adc
or
repz
push
push
popa
jmp
cmp
jle
mov
stc
ss
push
mov
cmp
mov
or
or
cmpsl
inc
inc
push
shl
adc
mov
stc
xchg
mov
fs
loope
push
aas
inc
cs
mov
ret
out
in
xor
cmp
or
cmpsl
loopne
fidivs
jb
mov
add
js
lea
insl
mov
xchg
sti
adc
repnz
pop
je
sub
iret
and
into
imul
cmp
jl
jg
ljmp
int3
add
jo
rcrb
xchg
mov
or
inc
dec
xor
fwait
les
cmp
mov
cwtl
pop
shll
and
int
test
sbb
cmp
and
fdecstp
push
pop
ljmp
mov
mov
jmp
jns
sub
test
inc
pop
mov
shll
movsb
cwtl
pop
push
push
scas
stos
adc
add
xchg
xor
add
out
lods
mov
movsb
insb
inc
imul
movsl
test
push
xchg
cmp
and
add
adc
clc
xchg
mov
cmp
les
jnp
sbb
out
in
xorl
insl
iret
cmc
ds
push
xchg
xor
in
loopne
mov
xorb
mov
mov
pop
jbe
lods
sub
fsubrs
pushf
xor
jae
cmc
lahf
sbb
mov
outsl
add
test
lea
arpl
ljmp
mov
mov
shll
xor
leave
and
cld
lods
fstpl
jbe
xchg
psubw
cmp
iret
xor
mov
ret
stos
mov
cmpsb
push
or
jne
lcall
jnp
xchg
int
les
mov
mov
pop
xchg
loop
shll
lret
data16
cld
cmp
add
sbb
in
cmp
pusha
push
bound
or
mov
pmaxub
stc
jg
pop
test
sbb
jo
mov
push
je
leave
xchg
mov
stc
jmp
adc
xchg
mov
mov
jbe
dec
jns
push
pop
es
pop
mov
push
inc
inc
es
roll
mov
lods
arpl
test
aam
push
jecxz
imul
dec
mov
and
mov
outsl
fwait
in
subb
push
inc
adc
sbb
scas
and
ss
push
pop
fsts
sbb
sbb
cmpsl
lock
push
lea
cwtl
pop
loopne
cmp
hlt
gs
sbb
insl
mov
ljmp
jbe
adc
scas
or
int3
jae
mov
push
repnz
cwtl
mov
mov
aam
inc
push
adc
pop
push
je
dec
icebp
pusha
or
lcall
xchg
cmpsb
mov
stc
jp
lods
and
loope
cmpsl
ret
mov
xor
outsl
and
flds
mov
push
inc
rolb
in
test
clc
and
and
std
xchg
mov
jbe
add
pop
inc
inc
and
adc
cld
add
inc
xchg
push
mov
filds
orl
dec
jns
test
add
cmp
stos
or
pop
and
test
pop
mov
icebp
pop
cmpsl
inc
stos
in
inc
and
dec
xchg
xlat
int3
psubb
imul
test
cmp
push
dec
pop
and
and
mov
or
mov
mov
in
adc
mov
inc
sbb
push
mov
fistpll
enter
push
iret
mov
fldl
hlt
xchg
dec
pop
dec
mov
fadds
sti
push
mov
jl
pusha
movsl
in
mov
lcall
or
inc
pop
sahf
pop
mov
sbb
fsubl
pusha
fs
stos
scas
imul
or
xchg
mov
pop
xor
mov
out
cmp
or
out
sti
fsubrl
xchg
push
iret
push
lods
jmp
mov
jae
imul
mov
jge
out
ror
jge
xchg
ss
lds
sub
out
jns
sti
ljmp
sbb
test
jle
push
loope
push
adcl
pop
lcall
jge
pop
fwait
test
insb
lea
mov
xchg
imul
sub
mov
fstp
and
movsl
xor
xchg
cmpsb
xchg
daa
or
pushf
pop
lods
stos
rcl
mov
jnp
xlat
cmpsb
cwtl
cmpsb
adc
dec
dec
sub
cmp
out
insl
push
popf
subl
sbb
push
fdivr
sbb
xor
dec
sbb
pop
gs
pop
pop
or
push
sbb
fincstp
inc
imul
movsb
cltd
rcll
dec
mov
sbb
adc
test
test
and
cmc
mov
aam
xor
pop
lods
cs
out
mov
clc
arpl
jmp
mov
in
rolb
hlt
popa
std
inc
flds
jge
or
pop
out
xor
jge
shrb
cmp
rorl
outsb
dec
pop
aas
insb
mov
or
outsb
aaa
sbb
jle
shrl
jne
rcrb
sub
xchg
clc
lret
mov
aas
cltd
mov
and
ds
sahf
idivl
sub
and
jecxz
loopne
rcrl
dec
cld
in
test
stc
add
mov
sub
nop
enter
scas
repnz
adc
pop
or
inc
mov
fcoml
xor
cmp
enter
mov
pushf
add
test
addr16
pop
adc
mov
loopne
sbb
inc
push
mov
jg
les
adc
out
lahf
cld
lods
xchg
inc
and
rcl
pop
jbe
mov
lret
jp
mov
lods
and
aaa
or
inc
push
xor
jge
cmp
stos
cmp
scas
ficoms
jmp
push
aaa
add
std
insl
fidivrl
frstpm(287
mov
mov
add
icebp
je
xchg
popf
adc
sub
push
jb,pn
test
and
mov
ficomps
mov
inc
and
icebp
and
mov
popf
jo
adc
add
mov
sbb
mov
popf
jbe
iret
lods
sub
xchg
fs
lock
in
fists
xlat
pop
jbe
data16
aam
adc
cmc
sub
jmp
data16
insl
xchg
outsl
dec
out
jle
sbb
jp
das
mov
push
arpl
fcomi
dec
out
arpl
inc
jg
cld
fs
mov
cwtl
sub
inc
shr
je
ds
sti
dec
mov
mov
mov
popf
lods
out
inc
jl
inc
js
repnz
pop
sbb
push
add
sbb
xor
xchg
daa
pop
pop
ret
sti
push
push
mov
xor
sti
mov
push
inc
ja
lahf
mov
in
pop
lcall
repnz
mov
or
jl
sub
push
xor
dec
pusha
out
in
push
mov
les
test
imul
jb
xchg
fadds
and
push
imul
enter
aaa
nop
repnz
pop
mov
sahf
jb
pop
aaa
lret
dec
sahf
callw
adc
hlt
mov
stos
andb
stos
mov
ja
xchg
xchg
das
stos
sti
adc
inc
arpl
push
fstpl
mov
das
arpl
fisubrs
sbb
lcall
dec
mov
les
sub
pop
jno
aam
lea
sbb
aas
push
mov
jno
pop
int
cmp
jns
mov
inc
enter
adc
hlt
adc
mov
pop
orl
loopne
dec
pusha
imul
rorl
push
repz
and
dec
cmp
or
scas
scas
sbb
mov
lahf
mov
push
pop
iret
dec
jp
pop
and
das
dec
jo
arpl
xchg
pop
mov
daa
fs
aad
mov
hlt
mov
adc
subb
xchg
data16
jg
mov
call
in
pop
sub
cmp
jae
das
xor
cmc
push
push
xor
or
push
mov
repnz
mov
cltd
sarl
shll
ss
push
dec
xchg
dec
stos
pop
iret
hlt
wrmsr
jns
dec
aad
imul
sarl
adc
fisubrs
scas
shlb
cmp
pop
hlt
push
mov
popa
jbe
sbb
push
js
fwait
xchg
inc
imul
jb
aaa
cmp
mov
rcrb
outsl
stos
aad
call
lahf
in
nop
loop
lret
ds
shrb
ss
rcrb
sti
mov
or
pop
into
in
sbb
in
adc
icebp
flds
fisttpl
in
jo
inc
xchg
mov
push
or
mov
hlt
repnz
xlat
xor
sbb
sbb
push
xchg
repz
loop
sbb
sbb
and
lahf
int
cmp
ljmp
add
mov
inc
out
xor
jg
pop
aad
cmp
shlb
dec
ja
inc
and
adc
addb
aam
xchg
sub
dec
rorb
cmp
adc
mov
jp
and
test
cmp
sbb
imul
fldcw
or
lcall
cli
scas
sbb
jecxz
movsl
pop
and
jnp
mov
lahf
add
push
adc
idivl
xor
test
movsb
stc
pop
add
ljmp
ficoms
cli
add
int3
adc
add
out
ret
xchg
fwait
dec
cmp
out
mov
iret
incl
pushf
pop
xchg
or
jae
add
ret
orb
insb
sub
and
mov
cwtl
ja
in
popa
lahf
jne
cmpsl
or
pushf
inc
loope
dec
decl
in
in
sbb
push
pop
in
stc
int3
jnp
push
jae
call
repnz
jmp
out
dec
push
je
or
inc
outsl
jae
dec
stos
cli
cmp
xchg
pop
outsb
sub
jg
pop
xchg
and
negl
push
in
push
test
stc
sbb
out
js
mov
and
or
xor
loopne
mov
loope
cmp
fnsave
sbb
mov
test
insb
dec
stos
addr16
adc
xorb
jno
cs
pop
mov
aas
sbb
into
lods
lcall
xchg
sbb
xchg
and
xchg
pop
movsbl
adc
inc
dec
shrb
icebp
scas
cwtl
test
int
cwtl
mov
cwtl
xlat
jge
arpl
and
loope
shlb
mov
int
loopne
sahf
xor
mov
ja
faddl
sbb
pop
xchg
decl
aas
mov
pop
push
mov
enter
scas
xchg
mov
test
push
lock
cmp
inc
scas
adc
leave
testb
inc
mov
loop
add
popf
and
js
ret
add
sub
inc
jns
loope
pop
mov
cmpsb
add
or
fimuls
out
mov
mov
cld
mov
aam
jnp
cld
and
add
or
sbb
xor
mov
popa
call
ja
stos
pop
jecxz
push
dec
pop
inc
es
loope
call
mov
inc
push
pop
mov
test
gs
cld
add
mov
mov
rorl
add
popa
sbb
subl
adcb
xor
push
bound
and
inc
std
cmp
pop
addr16
jbe
out
and
adc
arpl
sbbl
xchg
mov
inc
add
jle
pop
or
xchg
in
je
or
adc
mov
jecxz
jle
xchg
in
push
adc
leave
mov
jbe
push
fistl
add
pop
xchg
jge
jl
cmp
insb
mov
test
add
xor
insl
xchg
sar
push
stc
popf
pop
xor
inc
mov
adc
pop
sbb
subb
sti
outsb
mov
cld
in
add
adc
daa
or
mov
shrl
mov
fxch
adc
mov
mov
orb
ss
push
les
sbb
xor
shl
sbbb
jle
rorl
lock
xchg
call
sub
xchg
or
aad
jp
jecxz
xchg
adc
push
mov
mov
sub
sahf
popa
add
scas
ss
dec
inc
lock
xchg
cmp
push
jbe
in
or
or
ss
or
outsb
js
inc
jl
stos
jns
loope
ffreep
add
out
mov
ljmp
adc
xchg
cli
mov
adc
imul
pop
jg
jne,pt
add
scas
adcl
cmpsb
fdivl
outsl
and
test
dec
aas
xor
orl
ds
enter
in
and
dec
pop
es
lretw
pop
gs
pop
mov
mov
mov
out
popl
testl
cmp
mov
pushf
push
ja
cli
fcoml
insb
mov
pop
cwtl
adc
addb
jg
lds
jae
rorb
sbb
dec
mov
jae
roll
aas
notl
adc
xchg
xchg
fbstp
notl
dec
scas
mov
inc
add
xlat
loopne
adc
pmaxsw
add
sub
mov
stos
scas
push
outsl
aad
sub
insb
or
xchg
js
repz
lea
mov
sub
bound
dec
push
jle
loop
and
lcall
leave
dec
push
aad
adc
and
sbb
add
xchg
jg
fbstp
in
jge
shl
mov
adc
adc
mov
cli
psllq
adc
jmp
xchg
pop
push
add
ret
sti
push
cmc
pop
sbb
cs
mov
cmpsb
outsl
and
cli
or
decl
add
mov
pop
dec
inc
nop
popa
lret
repnz
in
push
fs
ficompl
mov
fiaddl
ljmp
sbbb
jmp
sub
mov
fneni(8087
push
add
test
mov
lcall
stos
js
daa
cmp
aaa
das
loop
adc
pop
jg
pop
add
shll
add
cmp
dec
jbe
mov
jmp
gs
dec
or
cld
xor
or
leave
ljmp
sub
jl
popl
push
and
lahf
jo
mov
sub
mov
adc
pcmpgtw
popl
xor
scas
pop
xor
jo
jp
jmp
in
jmp
fs
shrl
or
push
mov
cmc
cmp
sarl
scas
loope
cmp
sub
mov
loopne
mov
cmpsb
rcr
xorb
insb
outsl
lea
insb
and
fnstcw
mov
sti
cmc
out
cmpb
mov
add
cmp
ds
insb
push
xor
lea
call
adc
lods
or
cmp
and
rorl
std
out
adc
adc
cs
sbb
shll
inc
add
jae
lock
sbb
xchg
adc
leave
push
ret
nop
fwait
cwtl
xchg
outsb
xor
mov
lods
shr
aad
repnz
mov
adc
sub
insb
jmp
adc
sub
cmp
and
push
scas
outsb
mov
inc
mov
rcll
pop
jge
dec
loopne
xchg
cwtl
iret
xchg
imul
popa
mov
add
push
outsl
daa
xor
inc
lock
xchg
dec
std
jl
insb
mov
push
cmc
adc
fcomps
mov
add
mov
rcrb
mov
repz
out
fbstp
pop
mov
and
xor
sar
pop
mov
dec
lret
leave
add
test
or
movsb
fxch
add
push
clc
mov
adc
xor
jne
and
hlt
loope
imul
mov
cltd
in
xor
xor
inc
sub
pop
outsb
in
adc
js
pop
frstpm(287
adcb
stos
sbb
push
mov
sbb
sahf
es
cmc
dec
xor
das
pop
xor
mov
cmpsb
adc
jbe
add
xlat
or
inc
xchg
pop
jo
sbb
and
xor
ss
sbb
and
loop
dec
mov
imul
cs
ljmp
movsb
cmp
imul
mov
mov
cmp
sbb
push
mov
inc
add
dec
andl
orl
mov
jl
inc
ret
popf
cmp
adcl
inc
sbb
dec
xchg
inc
stc
mov
xchg
dec
mov
shrb
push
cmp
int
int
pop
lods
nop
out
aad
stos
jno
bound
shr
shll
loopne
and
pop
pop
sbb
mov
test
repz
test
aaa
jecxz
sub
xchg
mov
dec
mov
cld
or
pop
pusha
jg
xchg
hlt
xor
mov
push
push
aam
mov
cmp
inc
out
lahf
dec
adc
into
mov
pop
sbb
mov
jne
imul
jg
adc
ds
pop
pop
mov
jae
add
not
xor
cli
dec
dec
jg
mov
fwait
push
outsb
fdivrs
lds
outsl
loopne
mov
pop
fidivl
push
mov
das
out
movsb
cvtps2pd
xchg
mov
xor
xchg
ds
inc
sbb
jle
repz
mov
hlt
ret
and
jo
mov
leave
add
add
scas
mov
dec
inc
mov
loop
pop
xchg
mov
ret
lret
push
in
cvtdq2ps
sar
xchg
mov
pop
rorb
mov
out
repz
aam
outsb
add
shrb
aad
fistpll
mov
inc
fucomip
pop
mov
bnd
lods
rcrb
jle
lods
lcall
inc
cli
jmp
unpckhps
add
je
pop
imul
mov
mov
jno
jae
dec
add
in
stos
out
cmp
notb
mov
scas
jg,pn
outsb
xor
shrl
or
inc
out
inc
je
stos
cli
inc
pop
incl
cmp
jecxz
test
or
mov
divl
xchg
mov
sbb
fdivrs
pop
dec
or
insl
jg
add
loop
mov
frstor
sbb
sbb
jecxz
popf
leave
and
inc
in
or
daa
or
jne
mov
mov
adc
push
or
jle
sbb
aad
sbb
imul
jne
cmpsl
pop
sbb
push
add
push
add
arpl
mov
lea
lods
enter
or
mov
pop
or
lods
mov
loope
rcr
bound
pop
pop
popa
imul
fidivs
imul
out
lret
dec
jnp
add
out
cltd
es
sub
ficoms
xchg
loope
out
leave
jae
mov
js,pn
in
enter
lret
fsubrs
pop
in
lock
lods
scas
mov
push
sbb
adc
sub
mov
jno
xchg
std
es
mov
adcl
fnsave
fdiv
popf
bnd
mov
mov
lods
pop
aaa
xorl
clc
add
icebp
aas
cmp
dec
es
sub
push
les
faddl
sub
push
xor
int3
enter
jae
sahf
pop
add
js
cltd
sub
sub
mov
dec
sbb
or
push
push
rcll
push
nop
push
inc
xor
lret
fnstcw
push
xlat
mov
fildll
cli
sahf
push
gs
lock
add
ds
scas
das
cmp
sub
cmpsb
pop
xor
fiaddl
ds
rcrb
pop
mov
xor
jne
test
adc
clc
xchg
mov
cmp
adc
fsincos
call
cmp
mov
jns
sbb
in
fdivs
mov
rcrl
das
ret
call
mov
les
lods
and
pop
xor
dec
inc
pop
sti
hlt
loop
sti
and
sub
pop
mov
ds
mov
or
cmp
loope
arpl
pop
insb
aas
imul
dec
xor
jns
outsl
adc
shld
jle
and
inc
cld
pop
hlt
push
fdivrl
enter
push
xchg
xchg
push
out
and
mov
call
cli
mov
out
outsl
repz
imul
adc
adc
lahf
push
lret
and
pop
cli
mov
je
loopne
daa
pop
sar
rcrb
movsb
insl
gs
xchg
mov
pop
lds
and
xor
and
rcrl
cs
jb
fdivl
test
test
shlb
mov
mov
add
or
enter
push
mov
test
mov
ljmp
pop
jmp
arpl
ss
cmp
repz
lods
add
pop
test
sbb
fcoml
incl
jp
outsb
cld
cmp
sbb
mov
lods
inc
cmpl
out
in
jo
sarl
mov
inc
lea
movsl
mov
jg
insb
push
inc
xor
inc
mov
in
mov
or
mov
xorl
cmpsb
cmp
xchg
cld
mov
cli
in
push
sarb
lea
cmp
mov
mov
pop
mov
sub
adc
shll
jno
lcall
lahf
mov
pop
push
xor
stc
xor
aas
jne
clc
int
lock
sbb
sbb
push
testl
jns
mov
jns
adc
fisubl
loope
clc
inc
repnz
and
cld
sbb
xchg
jp
repnz
sub
lahf
add
lret
xchg
ja
adc
or
xchg
mov
aad
xchg
and
iret
sub
mov
push
aad
mov
dec
fistl
xor
cmpsb
jo
fwait
mov
dec
and
adc
and
test
mov
imul
mov
adc
mov
scas
movsb
popf
jge
std
push
imul
cmpsl
rorl
ss
xor
stc
add
add
sub
inc
mov
mov
stc
fwait
inc
je
or
pop
xchg
out
add
mov
out
mov
gs
fsubrp
mul
loopne
and
mov
cmc
dec
cld
in
mov
andl
popa
add
xor
jl
or
imul
adc
push
imul
ljmp
xor
in
push
inc
cli
orb
jl
mov
out
ds
pop
or
addr16
mov
mov
inc
push
add
adc
je
iret
js
mov
repnz
or
in
add
mov
xor
jle
sahf
movsl
mov
inc
inc
stos
jle
in
in
outsb
push
sbb
repz
insb
dec
imul
mov
jecxz
lret
out
xchg
dec
test
or
test
push
cmp
add
xchg
repnz
test
lds
cmp
hlt
dec
cmp
iret
jmp
dec
and
jns
nop
mov
jb
pop
xor
add
orb
addb
mov
adc
sbb
lock
in
xorb
jmp
scas
mov
stc
pop
fwait
mov
fadds
dec
nop
mov
mov
addr16
addr16
sub
orb
int
test
sub
jle
cltd
dec
roll
inc
xchg
mov
dec
fwait
mov
xchg
int
mov
nop
xor
mov
lret
pop
or
cmp
fstl
dec
cmp
cmp
push
outsl
mov
shr
sbb
cmpsl
lret
mov
mov
mov
xchg
out
xlat
adc
imul
or
leave
pop
addr16
pop
and
ljmp
adc
aam
jp
lock
inc
xor
insb
adc
jo
inc
sbb
mov
sub
mov
add
pop
or
add
add
xchg
adc
dec
xchg
inc
push
push
push
sbb
outsl
adc
rcll
jg
gs
push
add
movsl
lcall
or
xlat
push
push
jo
insb
cmp
xor
dec
cmc
sub
cmpb
dec
dec
arpl
fists
lcall
push
popa
sbb
xchg
arpl
mov
shlb
lds
cwtl
or
sti
std
jecxz
sbb
mov
movsl
ljmp
cld
ror
add
sub
aas
xchg
inc
out
shlb
cltd
and
sarl
in
hlt
cltd
in
loop
cmp
out
push
sub
mov
pushf
movsb
xlat
xchg
test
xchg
jns
shll
inc
adc
imul
sub
mov
or
pop
jp
jge
in
ret
sahf
dec
test
ja
fldt
ljmp
push
add
call
adc
arpl
adcl
inc
mov
mov
xchg
ss
lret
lahf
imull
adc
scas
fisubs
jbe
icebp
jl
mov
outsl
jg
xchg
jae
fdivl
cs
xchg
sbb
adc
scas
adcb
adc
sbb
call
loop
ss
or
mov
scas
lret
js
add
rdmsr
jno
adc
loopne
sub
rcrb
mov
js
mov
ja
sahf
test
dec
mov
int3
pop
jns
jp
outsl
hlt
repz
push
push
mov
adc
cmp
cmovae
outsb
or
jl
es
sbb
fadds
frstor
lcall
xacquire
add
bound
test
daa
xor
fneni(8087
sbb
lods
dec
pushf
sahf
icebp
pop
pop
pop
shl
dec
scas
mov
jg
jmp
in
xor
inc
jg
mov
mov
mov
out
inc
inc
stos
add
push
test
stc
aad
hlt
std
movsl
inc
test
inc
mov
push
lret
out
mov
push
xchg
pushf
cmpsb
stos
sbb
out
ret
inc
stos
repz
inc
daa
inc
pop
xchg
out
mov
dec
std
cmp
shlb
xchg
xchg
jle
and
mov
repz
in
es
in
ja
mov
cmpsb
cltd
test
lahf
mov
and
mov
sbb
push
jg
pushf
outsb
test
loopne
and
and
adc
mov
mov
add
push
lret
pop
cli
fisubs
mov
js
inc
lds
jmp
cmpsb
lcall
sbb
inc
in
xchg
clc
sub
sub
xchg
xlat
daa
ja
mov
or
out
lret
scas
les
sbb
sbb
test
and
imul
pop
in
ja
add
push
push
int
stos
je
dec
int
push
lahf
push
les
lcall
sub
pop
xchg
out
repz
dec
xor
adc
pop
repz
insb
jp
pop
rorl
scas
pop
jo
cs
cmpsl
cld
jb
push
scas
and
mov
sti
sub
std
js
or
nop
test
fcoms
clc
add
bound
movsl
leave
and
lods
sub
jnp
aad
stos
pushw
int3
repnz
mov
mov
ja
fnstenv
out
lock
adc
xchg
jp
xchg
fdivs
xor
inc
pop
jp
push
imul
lods
jne
pop
push
fs
repnz
adc
xor
gs
mov
aaa
fldenv
sub
xor
insl
lcall
push
test
ja
xchg
pop
test
imul
ja
insb
add
mov
es
xchg
shlb
cld
ja
and
xlat
pop
jb,pn
int3
out
mov
in
pop
sub
mov
ffreep
jl
jns,pt
dec
dec
in
ficoms
imul
adc
dec
loop
xchg
in
unpckhps
push
dec
xor
xlat
jmp
mov
out
lcall
mov
or
aad
adc
mov
addb
insl
add
pop
sbb
enter
sti
or
nop
xor
mov
in
in
jae
cmpsl
sub
test
icebp
outsb
and
out
mov
pop
test
push
cld
fcompl
mov
jmp
js
nop
sub
cmp
les
fwait
xchg
adc
insl
xor
fs
sub
sbb
aad
sbb
adc
pop
insl
movsl
and
sbb
or
jnp
cmc
xor
mov
les
aas
push
or
pop
test
mov
je
pop
xor
icebp
dec
into
xor
outsl
jge
loope
lds
je
inc
push
add
orl
cmpsb
mov
es
orb
mov
je
cmp
mov
push
cmpb
adc
lods
fwait
push
push
in
push
xorl
iret
sti
jge
das
addr16
mov
and
pusha
test
xlat
cmp
insb
mov
inc
das
pushf
lock
ljmp
jge
call
pushf
out
test
inc
cwtl
gs
jecxz
mov
sbb
or
cmpsb
push
loope
das
inc
andl
cmc
cmp
jne
icebp
push
js
xchg
jmp
les
cmp
enter
mov
cmpsb
ret
mov
inc
cmc
xchg
fdivr
mov
ljmp
cli
repz
arpl
sub
adc
dec
mov
cs
pop
dec
mov
adc
rorb
gs
mov
xor
xlat
adc
jns
jg
ljmp
aad
gs
aaa
push
cwtl
cli
pop
pop
loope,pt
std
push
rcll
ret
add
outsl
jnp
or
mov
loop
push
rclb
jle
popf
in
test
test
dec
pop
test
fcomps
addr16
mov
add
pushf
add
int3
dec
pushf
loop
aaa
sub
fisubs
ret
sub
dec
xlat
jo
lahf
or
cmpsl
out
add
pop
or
or
sbb
cli
loop
in
shlb
xor
mov
mov
lret
xchg
push
jecxz
sbb
cmp
rolb
out
push
push
xor
ss
and
xchg
outsb
adc
sbb
rcll
or
leave
movb
mov
push
and
lods
pop
fldcw
mov
iret
icebp
push
cmp
daa
push
fwait
mov
cmpsb
pop
mov
fs
into
sub
cwtl
pop
int
pusha
sub
jnp
add
pop
mov
cwtl
jl
cld
in
pop
mov
and
out
mov
rep
jo
xor
or
aas
mov
and
andl
xchg
stc
pop
in
push
popf
pop
aaa
pop
das
cmp
push
daa
cmp
push
xchg
inc
inc
test
adc
inc
aad
mov
xchg
cmpsb
mov
push
ror
inc
stc
dec
xchg
pop
stc
int3
xchg
dec
in
add
insb
add
inc
sbb
shrl
cwtl
ljmp
scas
mov
jge
push
cltd
mov
stc
mov
jne
cli
fisttpll
nop
pop
or
adc
out
addr16
inc
cmp
sub
es
lret
pop
xor
jb
mov
daa
mov
add
xchg
test
out
and
gs
lcall
dec
mov
out
cs
flds
gs
sub
test
je
add
cmp
es
adc
xor
sub
lods
movsl
insb
fisttps
xchg
xchg
push
inc
cs
push
mov
loopne
and
mov
inc
aad
pop
adc
sbbl
in
stc
xor
xchg
inc
push
sbb
adc
out
lret
xchg
sub
pop
jg
mov
stos
in
jle
add
mov
cmp
pusha
out
cmp
stc
pop
sub
arpl
outsb
mov
add
into
std
xor
int3
inc
xor
inc
or
push
jg
sbb
rcrl
ds
sbb
lahf
and
xchg
rcr
out
outsl
jb
hlt
int3
cwtl
test
push
lods
lods
aaa
cmp
jno
lea
mov
xor
sub
adc
daa
jae
ret
xchg
stc
mov
in
int3
xchg
xchg
movsb
pop
and
insl
xchg
jge
sbb
shll
xor
aas
xlat
xchg
cli
lods
in
lret
xchg
mov
or
inc
lcall
loope
fcmove
adc
sbb
ja
pop
in
loope
dec
sub
sub
jns
std
shlb
subl
push
test
jle
inc
push
jne
mov
aaa
jne
aas
mov
pop
xchg
aad
adc
int
mov
rcrl
scas
xchg
dec
dec
sub
cld
negb
xor
scas
popa
iret
or
repnz
lds
call
pop
adc
mov
push
xor
and
mov
jb
movsb
inc
push
pop
in
xchg
hlt
jno
inc
mov
mov
pop
imul
lds
stos
cmc
lock
sbb
push
pop
popf
repnz
xchg
pop
mov
xor
stos
and
sbb
stc
jmp
test
ss
pop
mov
sub
leave
loope
push
rcrb
lods
iret
dec
adc
mov
inc
mov
sub
inc
adc
lea
add
popl
das
mov
rolb
add
and
xor
jb
push
inc
lret
pop
sub
or
movsl
std
adc
lret
cmp
inc
lcall
xchg
push
js
out
pop
lock
cmc
outsb
xor
loopne
sbbb
sbb
sbb
aaa
rorl
iret
aad
shlb
cwtl
sahf
xor
cwtl
mov
dec
jno
or
in
arpl
mov
add
in
push
ret
jnp
pop
mov
dec
aas
jne
test
ljmp
push
mov
cmp
ficompl
stos
fwait
shrl
jne
cli
cmpsl
mov
pop
mov
sar
jmp
adc
fwait
test
dec
inc
lret
stos
mov
mulb
push
jae
add
xchg
lods
mov
shrb
int
mov
ret
test
test
rclb
jle
scas
sub
int
add
and
filds
pushf
mov
movsb
mov
aad
inc
into
in
mov
dec
cmpb
mov
jmp
notb
push
jb
hlt
in
das
dec
insl
pop
xchg
aad
add
jbe
mov
enter
xchg
cmc
mov
jne
out
mov
jne
ret
jns
lret
xor
fwait
cltd
and
push
or
dec
jp
les
lret
fists
mov
dec
int
mov
inc
les
fdivl
decb
das
lahf
int3
pop
mov
mov
into
daa
mov
dec
arpl
sbb
andl
add
repnz
or
aad
mov
icebp
pusha
stc
lret
mov
out
insb
xor
sub
push
std
dec
mov
test
sahf
jne
push
sbb
lcall
or
xor
or
arpl
xchg
push
pop
int
popa
xlat
in
push
inc
cmp
ret
testl
sub
pop
shl
loop
mov
jg
stos
cmpsb
xlat
mov
ret
cli
les
cwtl
inc
movsl
push
inc
popw
mov
insb
add
nop
mov
rclb
popf
pop
mul
mov
test
jo
cltd
rcrb
inc
lret
or
cmp
pop
in
fnstsw
or
test
sub
ds
or
cmp
mul
pop
data16
pop
lods
xor
sbb
je
sbb
mov
inc
push
imul
addr16
pop
pop
mov
mov
popf
repz
cld
dec
int
fstps
pop
popf
and
imul
xor
mov
cmc
adcl
jge
pop
outsl
mov
mov
mov
nop
push
and
jns
adc
jns
addr16
mov
xor
sub
test
jge
fwait
and
jmp
pop
repz
inc
cmp
mov
xchg
mov
bound
push
lods
les
inc
lods
pop
nop
xchg
stos
lods
out
adc
lods
mov
dec
push
mov
push
mov
repnz
add
ds
or
mov
xchg
jl
pop
mov
out
testl
mov
fisubrs
xor
imul
stos
icebp
mov
push
rol
fcmovb
xor
fistps
and
stos
mov
dec
mov
aam
icebp
int
cmpsb
cmpsb
test
into
mov
call
test
popa
ja
adc
xor
fsts
lods
adc
cld
imul
push
adc
shl
ret
and
add
jp
sub
push
out
push
idiv
dec
and
push
lahf
inc
inc
loope
jge
inc
repnz
std
test
or
and
sbb
xchg
lods
inc
sbb
adc
lret
lea
xor
jbe
xchg
sahf
mov
fwait
add
ljmp
daa
sub
mov
lods
add
adc
mov
pop
sti
loop
adc
test
pop
movl
insl
nop
jnp
int3
dec
rcrb
sub
outsl
sti
ds
jmp
jb
nop
inc
pop
pop
mov
fldl
xchg
inc
adcb
fidivl
shll
test
int
ja
daa
cwtl
lahf
or
mov
sbb
shrl
xor
call
cmpsl
cwtl
call
pusha
sub
xchg
xor
enter
call
cmp
aaa
in
jg
imul
inc
inc
lret
and
xor
xor
es
nop
lock
ss
dec
cmp
xchg
fwait
jle
lods
inc
or
imulb
lock
shrb
push
out
sub
push
adc
in
popa
hlt
pop
and
fadds
lret
or
xor
mov
cmp
inc
ret
mov
std
jo
stos
push
sub
nop
adc
enter
movsl
ss
mov
les
mov
lahf
push
mull
popl
cmp
lcall
aas
negl
push
jl
call
jae
je
mov
popa
ljmp
add
popa
enter
mov
mov
nop
subl
cli
pop
jmp
inc
jb
arpl
inc
cmpsb
cmp
int3
ljmp
jo
in
clc
sarl
scas
jle
pop
adc
aad
nop
jnp
lahf
data16
jge
leave
adc
inc
rcrl
xchg
xchg
mov
lea
push
push
jbe
fisubrs
push
mov
sbb
and
sub
xor
cmp
testb
test
das
push
and
fxch
cwtl
es
dec
adc
and
pop
mov
lcall
lods
mov
dec
ret
mov
fs
stc
lods
add
clc
aad
popf
and
pop
dec
adc
dec
push
and
xchg
popa
stc
scas
cltd
jp
push
test
in
in
dec
add
outsb
lret
xor
or
cmpsb
mov
pand
pop
xor
cmp
jno
xlat
into
xchg
mov
sbb
and
cmp
movsb
push
das
inc
add
pop
xchg
pop
lods
daa
jmp
cltd
xor
sbb
mov
movsb
sbb
imul
dec
cmpsb
push
inc
data16
loope
scas
call
out
in
jns
jno
outsl
test
inc
test
sar
mov
cmc
scas
cmc
jae
pushf
in
dec
scas
clc
movsb
mov
nop
pop
aas
or
add
ds
dec
lret
push
add
sbbl
ds
jecxz
adc
push
lcall
mov
add
into
loope
xor
mov
icebp
arpl
movl
add
sbb
sti
fld
jne
les
js
aas
pop
mov
fstp
mov
adc
mov
mov
push
cs
call
js
jge
xchg
mov
add
stc
xchg
mov
inc
mov
imul
ljmp
popf
inc
sbb
xor
push
push
addr16
outsl
dec
in
out
lock
aam
enter
xor
pop
jbe
les
fnstenv
dec
dec
push
jmp
cmc
jmp
outsl
and
fcomps
sahf
xor
cmp
jge
cmc
into
sub
add
stos
psraw
mov
jl
addr16
inc
jnp
jno
mov
mov
int
jecxz
nop
test
test
sub
popa
data16
fsts
divb
imulb
and
fwait
mov
mov
lods
cmp
xchg
js
rolb
push
sub
inc
add
das
je
jl
je
sbb
xchg
imul
mov
aad
jnp
les
sbb
int3
popa
and
mov
aad
repz
cmp
loop
mov
gs
stc
push
or
lods
jl
cmp
pop
out
xlat
fisubrs
insl
sub
xchg
xor
mov
inc
and
in
push
mov
pop
fcompl
ss
pop
xor
repnz
daa
push
cmc
push
adc
or
pop
repnz
dec
push
adc
mov
xchg
repz
and
inc
pminub
fwait
inc
ret
pop
cmp
mov
or
popa
mov
add
mov
and
das
sbb
mov
fsubrl
sbb
in
jge
fsubrs
sub
outsb
lahf
push
pop
mov
subps
add
out
cmp
xchg
and
sbb
xchg
inc
sbb
js
decl
jnp
pop
push
int3
cmp
or
cmpsb
les
lcall
cmpsl
jb
pop
and
insl
push
out
or
xor
push
mov
insl
jmp
lods
gs
dec
jp
push
xor
int3
cmpsb
inc
xor
push
fimuls
sbb
cs
jo
js
stc
int
mov
lods
inc
add
sub
cmp
fldl
adc
fmull
sahf
xchg
cltd
aam
xchg
es
filds
push
mov
jno
lcall
test
int
mov
dec
out
jnp
mov
ret
xor
and
cmp
dec
rdpmc
in
pop
cmp
aaa
or
dec
in
mov
jge
in
xchg
int3
pop
mov
push
lods
xor
inc
inc
test
and
lods
push
dec
call
cmc
cltd
push
add
insl
and
rcll
and
and
lea
stos
sub
sbb
pop
mov
xor
pushf
adc
das
lods
idivl
mov
sahf
mov
sbb
dec
imul
enter
pop
idiv
jmp
outsb
ss
mov
aas
test
jge
xchg
adc
jp
or
repz
addr16
test
and
push
adc
lret
jae
mov
lods
mov
dec
lods
mov
lcall
lods
sbb
ds
mov
mov
or
jne
sub
cmp
adc
mov
pusha
pushf
pushf
insb
repnz
mov
push
mov
pop
aam
push
xchg
sub
ja
cmpsl
sbb
out
xchg
mov
jg
mov
cmp
aas
dec
ss
xchg
xor
aam
xchg
divb
sbb
outsb
ret
push
sarl
aaa
mov
xchg
test
stos
mov
xchg
mov
int
cs
pop
es
xor
jge
sub
mov
xor
stos
pop
sbb
mov
stc
and
pushf
repz
cld
mov
pop
arpl
mov
dec
push
fdiv
inc
loope
shlb
fcompl
fmull
pop
je
fnstsw
push
lret
adc
add
cmp
gs
adc
js
mov
dec
cmpsl
insl
int
cs
and
hlt
sbb
leave
cmova
out
jbe
pmulhuw
loop
aaa
or
xchg
out
insl
testl
push
js
nop
imull
mov
hlt
out
loop
ret
mov
push
dec
sub
aas
pusha
leave
fsub
sbb
bound
scas
jle
imul
test
mov
sbb
rorb
in
jb
js
int
jno
in
jl
scas
push
xor
xchg
jge
cltd
and
jle
and
sti
dec
pop
cmp
sahf
sub
enter
jnp
fstpt
aas
movsb
xor
cmpsb
sbb
in
negl
enter
jo
inc
loope
pop
cltd
shl
or
jne
and
push
mov
cwtl
jbe
add
cs
into
sub
aaa
jl
test
cwtl
fs
adc
mov
cmp
lahf
adc
xor
shll
ds
dec
mov
cmp
andb
daa
movsb
adc
mov
je
mov
lds
stc
xor
pop
dec
movsl
shlb
xchg
xchg
movsl
frstor
push
mov
adc
sbb
cmpsl
es
adc
sbb
and
out
cmp
sbb
or
shrb
pop
repz
loopne
pop
rorb
outsb
fdivrs
xor
sub
and
fstp
out
adc
daa
xor
std
dec
test
mov
sbb
jl
in
push
daa
enter
leave
jne
jns
mov
mov
cld
jbe
les
or
rcrb
xchg
aad
jno
scas
cli
mov
and
pushf
mov
inc
push
mov
sti
imul
cltd
mov
into
inc
mov
daa
sbb
loop
pushf
lea
xchg
jecxz
fbld
pop
xor
lods
ja
inc
mov
call
dec
in
popf
xchg
aam
mov
push
jo
les
cmpsb
ffree
cmpsl
push
push
push
lock
mov
int
push
jge
push
pushf
imul
and
out
aam
rorl
and
movsb
sahf
rorl
mov
cmp
dec
xchg
aam
mov
xchg
in
pop
cmp
sbb
stos
inc
test
cld
mov
lret
rcrl
imul
cmp
mov
in
or
icebp
adc
aad
add
mov
ljmp
int3
mov
mov
inc
int
sahf
mov
add
lds
and
or
jecxz
call
lret
addr16
test
inc
sbb
dec
jae
fs
insb
test
mov
nop
ljmp
sub
or
and
in
cmp
pushf
std
ja
loop
inc
xchg
aam
mov
andl
iret
add
jno
jp
cmp
shrb
enter
nop
aam
ret
cmp
loop
mov
pushf
adc
pop
add
cmp
aam
in
das
or
mov
and
cld
loop
push
push
inc
imul
mov
dec
add
add
mov
icebp
xchg
mov
ss
cmp
push
jle
push
pop
fisubrs
popf
mov
fs
shlb
shll
cmp
inc
pop
mov
imul
push
cmpsb
dec
push
or
int3
movsb
jl
fisubrs
fwait
je
test
inc
icebp
and
adc
es
mov
pop
mov
ds
push
call
cmc
call
cmp
nop
xchg
dec
fsubrs
or
into
insb
mov
stos
inc
aam
into
xlat
cs
sbb
xchg
pop
into
lods
cmp
adc
mov
mov
ret
int
test
jl
push
pop
push
gs
daa
mov
icebp
ds
mov
push
adc
dec
imulb
decb
or
sub
mov
cmpsb
inc
fldenv
subb
inc
add
mov
and
cmc
arpl
enter
mov
jge
ss
in
mov
jo
pop
mov
dec
loopne
sbb
push
test
adc
push
iret
mov
sub
sub
xchg
pop
in
test
cld
addr16
and
test
push
out
sub
stos
and
test
ja
cmc
jmp
push
int
call
scas
cmp
sub
in
pop
insb
pop
fsubrs
and
inc
add
pop
bnd
addb
xchg
jno
lods
shll
shrb
fnstenv
repz
ret
ja
int
xor
into
mov
dec
sub
jo
jl
call
pop
gs
cmpsb
xchg
cmp
shlb
dec
or
adc
dec
mov
lcall
imulb
in
nop
imul
mov
jns
mov
or
int
jno
mov
sti
cmp
outsb
fmuls
push
jecxz,pt
outsb
push
sub
lahf
frstor
sub
test
int3
fidivl
push
pop
mov
jae
jae
jnp
push
pop
xlat
lahf
push
ror
sub
lahf
outsl
addl
cmpsl
out
push
xor
mov
mov
sbb
xchg
imul
shlb
mov
mov
jge
idiv
sub
mov
in
fistpll
in
test
jns
lea
push
pop
in
or
push
loop
out
stos
stos
pop
loopne
sub
fmulp
xor
sbb
das
loop
push
jo
gs
jg
xlat
lods
shlb
xchg
xchg
outsb
lds
and
insl
mov
out
in
icebp
jl
addl
test
dec
nop
iret
lock
jno
cmp
mov
repnz
imul
mov
stos
test
cld
inc
outsl
xchg
dec
inc
dec
mov
xchg
push
les
dec
js
call
xchg
xchg
push
iret
xor
mov
arpl
pop
adc
fnstsw
lea
pop
add
mov
repnz
imul
fsubrs
dec
dec
push
arpl
sbb
pop
mov
fisubs
or
mov
aas
add
xchg
push
pop
dec
inc
loopne
ljmp
imul
mov
xchg
and
mov
add
pushf
insl
inc
push
sbb
xchg
mov
shlb
jl
dec
or
popa
inc
sbb
in
or
jle
sub
lahf
arpl
hlt
inc
repz
jle
ljmp
pop
scas
add
or
test
es
ffree
add
xchg
sub
jmp
push
adc
das
daa
scas
ja
lcall
mov
mov
pop
lahf
push
sarb
mov
sarl
jp
adc
cmp
push
adc
sbb
cmp
add
xchg
int
xor
rcrl
and
push
pop
push
lcall
cwtl
movsb
jnp
hlt
hlt
pushf
dec
sbb
inc
cmp
testl
out
push
add
cmpsb
out
dec
mov
xor
data16
lods
sbb
movsb
in
xchg
je
xchg
or
aaa
lret
test
pop
repnz
addr16
punpckldq
daa
sub
xchg
bound
jge
fstpl
rcrb
pop
scas
mov
jno
lahf
jb
stc
pusha
rorb
xchg
ret
xor
xchg
jns
repnz
pop
push
stos
decb
pop
push
fbld
xchg
insl
out
sbb
insb
push
in
push
outsb
icebp
out
sub
cltd
ds
xlat
pushf
fldl2t
xchg
xchg
ret
cmpsb
call
dec
cmp
push
mov
mov
cwtl
mov
push
sarl
ret
les
stos
fldenv
imul
in
lock
jg
cmpsb
push
lods
push
xlat
and
loopne
mov
inc
insb
adc
add
jno
divb
pushf
test
js
inc
cmp
ret
push
push
and
ljmp
in
bound
jmp
aam
jle
loopne
out
movsl
fstpt
adc
mov
jecxz
pop
fidivs
test
jnp
into
movsb
adc
sub
mov
and
aam
rorl
sub
es
in
push
movl
shll
cmpb
test
scas
or
sbb
push
mov
push
mov
and
in
mov
jno
cwtl
sbbl
daa
add
int
jb
imul
xor
mov
pushf
es
jg
jle
mov
dec
mov
es
cmc
add
ret
mov
hlt
repnz
aad
outsl
insl
and
in
shl
and
pop
popa
add
xchg
das
and
mov
push
js
add
lahf
push
mov
pushf
push
pushf
adc
aaa
sbb
call
cs
add
and
repz
sbb
jbe
lret
and
pop
xchg
mov
jecxz
mov
ljmp
cld
fs
xchg
push
adcl
xchg
xor
es
jl
ret
adc
into
cmp
push
lods
mov
dec
xchg
xor
jle
shl
aaa
insl
fisubl
mov
test
cld
sahf
xor
movsb
stos
addr16
mov
fmuls
ljmp
xchg
jnp
mov
inc
ret
out
xchg
scas
lods
adc
jns
pop
imul
addr16
add
scas
pop
mov
xchg
and
and
int3
pop
inc
push
and
xchg
push
loopne
lcall
sbb
bound
jbe
mov
xor
jns
xchg
popf
jbe
sbb
dec
les
pop
clc
mov
and
out
test
cmpsl
mov
lods
mov
or
clc
daa
jnp
jle
addl
shlb
lret
xchg
jmp
pop
xchg
xchg
adc
cmp
sub
pop
ret
push
and
imul
cmc
shll
xchg
movsb
aad
xchg
or
sarb
adc
mov
mov
or
popf
fwait
jbe
fidivrs
mov
int
or
stc
xchg
inc
xlat
mov
add
popf
push
xchg
add
cld
mov
mov
int
push
aam
testl
sbb
mov
divb
lods
insb
scas
and
mov
mov
xchg
xlat
sbb
xor
cmp
adc
cmpsb
mov
xchg
sub
rorl
and
sbb
dec
sbb
push
or
sub
ljmp
out
push
loop
xor
daa
leave
xlat
test
loop
xchg
cld
fsts
stos
sub
test
push
dec
mov
sub
dec
cmp
add
es
sti
add
pop
mov
or
jp
jno
int
dec
xchg
pop
and
add
jb
cs
xor
mov
mov
sub
out
inc
loopne
push
xchg
in
xor
lds
xchg
pushf
inc
insb
lds
and
imul
inc
daa
imul
out
add
pop
dec
mov
out
mov
jmp
inc
addl
or
sbb
sub
push
push
pop
fwait
dec
xor
es
cmp
xchg
aad
add
add
sti
inc
pop
popf
push
jl
push
xor
jne
pop
divb
and
aam
cmpsb
out
adc
cmp
inc
push
push
je
jbe
cmpsb
cmp
ror
popf
add
inc
call
stc
push
mov
sahf
add
add
in
xor
ja
mov
subl
je
ret
frstor
insl
jae
xchg
int
mov
and
jnp
in
xchg
les
mov
mov
popf
mov
and
cmp
push
xchg
psubsb
cmp
sbb
xchg
mov
push
in
ret
jp
jp
sub
popf
jae
and
add
add
push
imul
stos
sbb
jg
or
popf
fcomps
and
pop
xorl
rolb
sub
xchg
mov
leave
xor
andb
xchg
jno
push
jl
sbb
fsubs
jo
icebp
js
fucomip
pop
lods
jnp
lea
cli
scas
sahf
lcall
or
lcall
adc
hlt
sub
push
pop
adc
aas
jbe
fsubl
mov
into
jge
xchg
dec
aad
lods
insl
dec
shl
xor
ja
repz
insl
sbb
jno
idivl
addr16
aas
mov
or
int3
test
fdiv
int
int
pop
pop
pop
test
sbb
ljmp
fwait
scas
int
pop
dec
mov
outsl
jl
loop
adc
outsl
mov
sbb
test
sti
in
nop
bound
pop
pop
orb
sub
cmpsb
shll
rcll
mov
jnp
sub
adc
mov
ret
cmpsl
cltd
pop
mov
dec
cs
repnz
push
xchg
inc
lea
in
dec
sbb
pop
adc
dec
add
sbb
adc
jmp
xchg
push
push
xchg
inc
pop
enter
xor
push
aam
std
lock
je
xchg
pop
jp
sahf
in
mov
cli
xchg
pop
fbld
jnp
nop
stos
jl
sub
adc
mov
js
clc
ljmp
pop
sti
je
imul
pop
dec
xchg
xchg
or
pop
int3
jl
sarb
push
scas
fdiv
sbb
push
lret
data16
popa
iret
inc
scas
dec
pop
and
xchg
subb
lret
ffreep
popa
cmc
mov
jge
nop
pushf
sbb
add
mov
imul
mov
mov
fincstp
xchg
mov
inc
enter
out
rcrl
mov
nop
adc
out
mov
jl
cmp
fmuls
dec
iret
add
cmp
sbb
stc
imul
xor
or
push
test
mov
jae
inc
or
data16
jno
cld
movsl
fmul
push
mov
jnp
in
jmp
add
mov
mov
aaa
lods
nop
subl
adc
insl
sbb
imul
addr16
sbb
lds
sub
pop
jb
inc
mov
cltd
pop
xchg
push
mov
repz
xor
clc
pop
mov
push
loop
push
dec
enter
sbb
lock
push
cmp
aad
shlb
lahf
ljmp
mov
testb
addr16
pop
mov
xchg
cs
je
cmp
jle
sbb
es
lock
jl
xlat
jo
jae
or
sub
jb
ljmp
xchg
jne
add
pop
sub
negl
push
das
insl
fbstp
adc
int3
loopne
sub
sub
xlat
gs
rcr
scas
jo
nop
jge
push
vshufps
ficoml
dec
pop
rorb
mov
mov
test
popf
mov
push
adc
cmp
daa
loopne
xchg
cli
hlt
rclb
xor
mov
push
sbb
loop
cmp
xor
dec
jns
and
cwtl
pop
fstps
sub
in
stc
outsb
add
add
hlt
cmc
pop
insl
insb
je
fcomp
fisubrs
xchg
nop
or
pop
xchg
std
movsl
shll
ret
add
rorb
mov
subl
sahf
adc
mov
fidivl
pop
adc
int3
push
cwtl
shl
jmp
outsl
rcrb
in
adc
xor
jnp
push
test
scas
aaa
or
scas
fiadds
test
divl
lock
mov
mov
mov
xor
or
jae
pushf
iret
xchg
push
sbbb
cmc
fwait
inc
dec
xchg
inc
arpl
es
ja
in
jae
repnz
cmp
out
sub
xchg
or
addr16
xor
outsb
mov
xor
sarl
je
loop
inc
dec
jge
loopne
sub
pop
ficoms
inc
add
mov
sahf
cmp
add
adc
ja
pop
jbe
and
in
mov
and
mov
stos
ljmp
mov
mov
repz
jmp
fisubrl
icebp
int3
and
xor
or
fwait
arpl
inc
lret
and
stos
adc
and
scas
ss
pop
xor
jne
pushf
fcmovnu
inc
hlt
out
cmp
xchg
sbb
mov
repz
jb
cwtl
repz
pop
fnstsw
and
out
xchg
int
add
cs
inc
push
mov
sub
mov
int
fildll
jae
mov
flds
xor
sub
dec
sub
shlb
mov
xchg
sti
push
cmp
sbb
adc
lret
jno
outsb
mov
cli
cmc
xchg
mov
out
repz
mov
sbb
movsl
jno
sbb
cmp
push
lret
dec
cli
stc
xor
adc
pusha
scas
sbb
jecxz
in
ud0
arpl
ja
ret
leave
rcrb
sub
pop
out
daa
fisubrs
mov
mov
and
jbe
jmp
les
ss
mov
in
addb
cli
lcall
xchg
adc
xlat
jmp
aad
cli
lret
inc
mov
int3
enter
cmp
adc
push
inc
jb
mov
adc
testl
sbb
into
jge
aad
dec
pop
pop
jl
pop
sbb
rcll
daa
pop
mov
pop
notl
xor
cltd
and
ljmp
inc
pop
push
xor
imulb
xor
ds
test
test
fwait
ljmp
jns
les
push
out
mov
divl
lock
xchg
and
push
scas
jecxz
adc
mov
or
inc
int
xor
movsb
lds
arpl
jp
xor
lcall
mov
in
or
clc
movsb
xchg
pushf
and
fdivrs
or
add
mov
xchg
sub
ljmp
adc
jg
scas
aaa
dec
popa
aaa
dec
or
jecxz
lcall
mov
fcoml
or
shrl
int3
jnp
mov
stos
repz
jp
mov
adc
addr16
test
inc
dec
inc
push
shrb
in
pop
cltd
push
bound
ljmp
cli
out
mov
adc
jmp
cmc
and
mov
orl
and
cmpsl
fcomi
jge
inc
leave
and
and
std
ret
andl
cmp
gs
or
cmp
popf
fisttps
imul
dec
cmp
pushf
push
lgdtl
xchg
sbb
pop
push
sahf
jle
inc
xor
scas
subb
add
fs
inc
xchg
push
data16
jbe
mov
lds
xchg
repz
cmpsl
or
orl
sbb
ljmp
fcmovne
js
dec
sbb
sti
push
mull
cmpb
push
jle
or
stos
xchg
mov
jle
ret
cmp
cmp
xor
cmp
inc
cmp
dec
and
rcll
fnstsw
xchg
and
or
mov
insl
lea
into
adc
cmc
adc
push
jns
fs
scas
mov
xor
pop
addr16
lock
ss
mov
mov
dec
jns
cld
jl
jmp
xor
popf
sbb
ficompl
sub
testl
xchg
popa
and
int
inc
lods
in
adc
inc
xor
xstore-rng
cmpsl
ret
sub
int
js
cmp
pop
xor
jmp
mov
cmp
repz
or
lds
fistps
dec
data16
mov
mov
mov
int
mov
in
xchg
pop
and
or
roll
stos
sbb
lock
js
push
sarb
and
cmovae
mov
sub
std
sahf
div
mov
add
cmp
pop
sahf
add
dec
in
fwait
add
icebp
ss
divl
out
add
adc
int
jge
and
cli
in
mov
outsl
shll
in
and
ret
in
sub
mov
movsb
sbb
or
add
push
ja
or
ja
jg
pusha
dec
test
and
lahf
sub
sub
mov
xchg
cmpsb
add
imul
outsl
popa
iret
jo
xor
clc
arpl
cltd
jb
inc
or
push
inc
mov
cld
es
push
int
sub
sub
jnp
stc
cmpsl
add
xchg
pop
andnps
shufps
lods
sbb
inc
xor
xchg
fiaddl
add
dec
jge
mov
jo
mov
sub
sub
daa
nopl
jg
adc
js
in
and
xor
int
jge
cwtl
push
xor
in
in
xor
push
dec
sbbl
jnp
lods
and
and
pop
sarb
pop
jmp
rorb
das
mov
call
es
popa
push
insl
mov
out
mov
outsb
add
xchg
inc
fs
pop
inc
pop
cmp
pop
rclb
in
adc
faddl
dec
lds
mov
inc
fwait
in
popf
in
nop
sahf
ja
or
andb
pop
into
inc
sbb
and
out
push
mov
out
pop
push
dec
jnp
testb
aas
adc
fs
jo
push
mov
inc
rcll
jge
in
dec
sbb
pop
dec
push
adc
pop
stos
mov
mov
into
inc
dec
xor
dec
jecxz
xor
jae
outsb
in
jle
push
sub
loopne
adc
mov
add
test
pop
and
push
pop
data16
int
out
aas
outsb
loopne
xchg
movsl
fildl
mov
xor
loop
adc
push
xchg
test
push
jge
mov
je
scas
dec
inc
fisttpl
shl
add
gs
push
mov
and
mov
sti
out
out
ret
sbbl
loop
sub
and
aaa
mov
jb
xchg
mov
out
pushf
daa
pop
in
das
out
test
mov
aaa
movsl
es
push
insl
mov
mov
outsb
mov
or
jbe
imul
out
push
add
test
out
push
fs
cwtl
mov
xchg
lret
and
push
sub
pop
ljmp
std
sub
fwait
inc
lcall
in
mov
xchg
mov
mov
into
addr16
js
sub
popa
sub
pop
mov
xchg
pushf
sbb
out
repnz
cmpsb
stos
mov
mov
xchg
xor
pop
pop
fnstcw
pop
adc
add
adcb
add
loop
test
inc
jle
nop
je
test
popf
pop
aas
pop
iret
cmp
add
inc
sbb
mov
pop
jp
outsl
inc
mov
xchg
push
ljmp
dec
sub
jmp
lahf
outsb
add
cld
icebp
push
aam
loopne
stos
cli
test
testl
imul
in
popa
aam
scas
fdivrl
dec
add
adc
jmp
js
roll
cmp
dec
sub
test
jb
ljmp
xor
inc
or
cmp
jae
fsubrl
adc
popf
rcrb
push
imul
andl
stos
jl
outsb
pop
sub
add
dec
xchg
lahf
lcall
and
pop
pop
lods
test
std
pusha
testl
repnz
jge
cmp
or
dec
test
and
sbb
sbb
pop
decb
sub
mov
or
test
sbb
aam
adc
pop
lea
ds
aas
inc
sbb
push
pop
sub
dec
rorl
mov
sub
mov
loop
xchg
rorl
jb
into
out
mov
push
into
pop
add
adc
lods
cmp
sub
mov
and
imul
xchg
sbb
cmc
insb
les
std
cs
in
int
int
add
movsl
pop
pop
push
or
les
sbb
fisttps
cli
fisubl
imul
leave
cmp
and
xor
hlt
adc
and
mov
inc
sub
sbb
cmp
mov
lods
or
aad
mov
dec
push
ss
mov
and
out
add
mov
pop
and
nop
xchg
add
mov
xrelease
add
fs
addb
jmp
jmp
mov
jmp
stos
xor
das
stos
fisubrl
mov
pop
mov
out
bound
xor
mov
lret
mov
test
add
scas
mov
es
pop
mov
adc
cmpsl
sbbl
push
push
mov
bnd
sbb
adc
sbb
jmp
pusha
movsb
mov
sbb
xlat
in
adc
imull
fiaddl
jge
orb
lods
ds
test
lods
mov
ds
mov
push
inc
out
mov
and
repz
jnp
test
dec
dec
loop
sbb
aaa
mov
xchg
filds
or
dec
rorb
repnz
mov
dec
int
sbb
xor
cmp
cwtl
cmc
mov
sbb
ret
mov
mov
je
mov
out
fsubr
sbbb
xchg
dec
outsb
es
mov
cld
nop
leave
fimuls
int
or
xlat
mov
movsl
mov
in
roll
arpl
xor
xor
stos
hlt
push
cmp
xor
shl
add
adc
jle
cmc
in
pop
xchg
lret
inc
adc
mov
mov
or
hlt
fwait
out
mov
test
jge
jae
pop
push
cwtl
jp
lea
mov
mov
lea
lret
push
ljmp
xchg
std
sub
and
popa
cmp
sbb
test
jge
insl
sbb
adc
mov
cltd
add
or
dec
out
push
inc
lahf
push
mov
sub
loop
or
out
add
pushf
in
aaa
adc
out
cld
sub
pop
jae
push
jl
sar
xchg
stos
cmp
jo
out
ljmp
sbb
fsubr
add
lock
jbe
pusha
inc
xor
popa
and
hlt
mov
insb
sbb
mov
cltd
shrl
cmp
xor
call
loop
in
push
out
pop
lea
push
mov
mov
mov
and
lret
dec
mov
ret
mov
in
and
fs
call
add
and
call
sub
rcrl
adc
pop
lds
das
out
or
cli
test
push
inc
mov
pop
aad
jl
sbb
pop
stos
adc
js
shlb
ss
pop
push
loop
jno
popl
int3
pop
addr16
jb
fwait
rclb
pop
mov
aad
cmc
mov
jg
daa
pop
dec
cmc
in
out
mov
ret
pop
mov
daa
inc
cltd
pop
out
push
jmpw
mov
mov
out
dec
sub
jg
add
sar
lods
lcall
xor
push
aas
in
cld
icebp
xor
pop
sbb
les
mov
inc
lock
rclb
out
xor
lds
push
ss
mov
stos
stos
jle
xchg
sbb
inc
inc
sar
xchg
repnz
popa
or
push
lods
and
lret
xor
stc
lods
adc
add
xchg
mov
dec
nop
pop
add
std
jl
dec
lcall
repz
mov
or
arpl
and
cmp
jmp
fwait
in
xchg
mov
ret
cmp
mov
or
aas
jbe
pop
or
add
loope
mov
fmul
or
xchg
aad
pop
scas
dec
movsl
movsl
mov
fcomp
xchg
cmp
ds
mov
jbe
fwait
pop
mov
jae
in
test
mov
mov
outsb
sub
mov
lods
pushf
repnz
icebp
adc
sbb
fdiv
repnz
push
in
and
sub
or
sbb
and
xor
aam
pop
sub
xchg
inc
aas
sti
sbb
jns
push
test
cs
dec
inc
push
testl
xchg
fldcw
or
and
fisttpl
sub
mov
shrl
inc
in
mov
cli
mov
xchg
icebp
mov
jb
push
dec
push
out
fcoms
icebp
dec
xchg
ds
dec
lcall
cmp
mov
push
sbb
pop
repnz
pop
popf
or
push
cwtl
lods
test
shrb
jne
mov
vcvttss2si
xchg
push
adc
jecxz
neg
adc
xchg
jno
sub
out
leave
push
cmp
cmp
push
add
shl
stos
scas
leave
add
jle
mov
push
and
and
std
addl
popa
int3
cwtl
adc
or
mov
cmp
popf
mov
push
fildl
sbb
sub
cwtl
in
xor
push
aas
xchg
adc
push
ret
insl
scas
leave
ss
cmp
cmp
jge
and
popa
xor
iret
lahf
push
sub
or
adc
rol
arpl
dec
adc
cmp
loopne
sub
jns
jno
stos
jle
rcl
or
dec
mov
mov
xor
inc
stc
loope
or
scas
sub
repnz
dec
cmpsb
xchg
loop
aas
loop
call
dec
js
lds
or
mov
adc
lock
je
sbb
jae
inc
stos
gs
inc
lret
in
int3
push
lcall
jle
lea
fs
loopne
xchg
mov
mov
shrb
nop
sbb
dec
cmp
jl
mov
sub
sub
mulb
jo
popa
cmp
cmp
inc
pop
mov
sub
ja
lret
stc
fimuls
enter
inc
aam
icebp
les
leave
or
sbb
push
adcb
xor
incb
pop
xor
fwait
gs
fs
inc
loope
adc
dec
insb
ljmp
shrl
mov
insl
sbb
ret
mov
or
mov
jg
mov
mov
popf
inc
lods
insl
mov
sub
ud1
xor
pop
adc
leave
scas
push
lds
sbb
and
aaa
mov
xor
jp
fsubs
fwait
imul
lea
dec
ja
xchg
lret
sub
rcr
cmp
jmp
and
daa
sbb
int3
dec
mov
dec
shrb
and
into
mov
jge
mov
mov
stos
addr16
ret
jg
xchg
fimuls
fists
sbb
cmpsb
into
mov
pop
dec
inc
add
and
stos
cmp
addr16
inc
jmp
xchg
xchg
adc
stos
in
sub
mov
in
push
xchg
cmp
push
mov
inc
je
fisubl
xchg
jno
cmp
dec
pop
sub
mov
xor
aam
cmc
jge
or
gs
mov
or
lret
mov
cmp
test
and
dec
sbb
inc
push
aam
jg
push
loop
xor
mull
aam
arpl
push
sub
popf
dec
outsb
push
xchg
mov
lcall
loope
xchg
fsts
or
xchg
jl
cwtl
mov
xchg
out
test
and
cmpsb
push
add
in
jnp
lahf
add
call
mov
sub
mov
xchg
mov
rcrb
rol
fldt
and
xchg
sub
lret
in
ret
insb
sti
inc
scas
inc
out
xchg
lahf
cmp
aam
adc
clc
xor
ret
std
sbb
push
push
pop
movsb
int3
xor
lds
cmp
push
sbb
cmpsl
xor
test
std
enter
sbb
cli
add
cmp
cltd
ret
dec
out
or
add
int3
js
mov
xlat
xor
sub
pop
mov
xor
frstor
add
cmp
ds
dec
cmp
movsb
sbb
sbb
cmpsl
addr16
cmc
and
sbb
mov
xlat
and
mov
sti
xor
insb
fbld
pusha
iret
femms
out
jmp
inc
std
xchg
fsub
mov
or
enter
cmp
jmp
imul
fcomps
pop
mov
sub
mov
cmpsl
popa
cwtl
scas
dec
jl
rolb
add
and
ret
jne
scas
movsl
shlb
jg
add
les
pusha
ja
push
fldt
sbb
in
rclb
addb
xchg
outsl
mov
mov
test
xchg
jmp
push
push
js
lret
fisubl
xor
das
nop
dec
xchg
sub
ss
mov
int3
in
pop
jge
inc
into
lods
cs
cld
scas
jb
mov
or
xor
push
scas
push
push
jg
test
jle
repz
pop
lret
lods
xchg
inc
mov
add
movsb
dec
mov
out
daa
aaa
push
mov
repz
out
mov
adc
xchg
int3
arpl
and
jl
lret
adc
mov
loop
test
imul
lock
iret
ret
addr16
neg
push
test
jmp
test
xor
lds
subl
sub
and
sub
add
mov
sub
outsl
dec
vmovdqu
shrl
mov
adc
aad
inc
push
or
divb
out
ljmp
cmp
mull
cmp
clc
fists
mov
mov
push
iret
xchg
inc
fdivl
push
stos
stos
and
xor
repz
jae
dec
xlat
js
sbbb
rclb
jae
sbb
fildll
xchg
scas
cltd
adc
mov
cwtl
jae
hlt
std
pop
popa
getsec
addr16
icebp
xor
cs
mov
jmp
test
jo
mov
scas
ss
jg
jl
stc
jb
repnz
jg
sti
repz
in
test
popa
mov
out
int3
cmp
out
loopne
in
push
pop
adc
adc
in
idivl
mov
mov
inc
and
idivb
out
dec
xor
adc
inc
inc
jb
mov
insl
dec
cltd
fnstcw
sub
fidivs
addr16
mov
xor
pop
jg
inc
cli
out
jle
mov
test
aad
push
fs
lds
cmc
jl
in
aaa
jbe
cmp
pop
mov
vminpd
inc
movsb
dec
inc
addr16
mov
push
clc
or
inc
fsubr
mov
iret
sbb
push
lahf
lock
add
rcrb
aam
bound
aad
leave
loop
movsb
sbb
mov
adc
dec
pop
adc
dec
dec
fsts
push
cmp
iret
shr
out
xchg
mov
jecxz
add
int
std
push
popf
and
add
dec
push
aam
pop
mov
push
fidivrl
sub
sbb
sti
and
sub
mov
lahf
dec
pop
bound
add
sub
incb
fnsave
adc
jp
lods
dec
jle
push
movsb
rcrl
adc
rcrb
lret
fstps
add
cmp
repnz
dec
xchg
adc
xchg
mov
sbb
loope
incb
addb
lret
movsl
in
std
fcoms
add
pop
sub
out
mov
sahf
fsubrl
test
or
add
sarb
aad
stos
lcall
mov
inc
push
in
mov
in
sti
hlt
leave
and
outsb
dec
jmp
ds
loopne
dec
iret
mov
out
shl
ljmp
loope
pushf
pop
shll
push
inc
rolb
jb
sub
int
lds
xchg
sbb
lods
xor
pop
lahf
add
mov
test
js
out
jg
cltd
xchg
mov
inc
fistpl
pop
rcr
dec
loope
pop
lods
fcomip
outsb
adc
test
out
and
add
push
push
cmc
repnz
add
aaa
fs
push
mov
inc
sub
mov
ljmp
flds
cmpsl
lods
je
dec
in
mov
insl
mov
lds
ret
xlat
stos
push
adc
sbb
lds
add
sub
out
mov
dec
pop
and
repnz
push
ret
aad
imul
in
add
add
ljmp
rol
aas
pop
pop
sub
lcall
cmp
or
xchg
hlt
aad
ja
out
mov
in
stos
sub
jnp
out
mov
adc
inc
mov
ljmp
ret
push
pop
push
xor
or
sbb
test
add
dec
sahf
shl
push
sub
jl
xchg
and
hlt
test
enter
dec
mov
jns
repnz
aaa
xchg
adc
in
stos
pop
sbb
or
ljmp
xor
std
xchg
ljmp
vrsqrtss
in
pop
scas
rcrb
adc
push
cli
test
test
fs
shl
mov
fs
aam
lahf
movsl
xchg
mov
jmp
mov
fistpll
xchg
push
xor
sbb
xor
mov
leave
mov
movb
pop
inc
lret
jge
bswap
add
shl
dec
ljmp
or
shrl
jecxz
dec
aad
test
dec
cmp
cmpb
xchg
jp
repnz
das
push
outsb
popf
call
push
cwtl
pop
cmpsb
cltd
xor
loope
aad
add
out
ffree
mov
pop
mov
movb
fisubs
insb
out
push
mov
push
push
mov
cmp
fs
lods
and
cltd
daa
jbe
and
addr16
fldz
pusha
cmpl
sti
xchg
mov
push
mov
arpl
cltd
mov
or
dec
push
xor
or
dec
mov
push
bound
fdivs
or
insl
mov
lds
rcrl
popf
imulb
jne
sbb
push
and
outsb
fisubrs
out
cmp
inc
and
test
ret
mov
and
xchg
jge
rorl
or
push
mov
fidivs
mov
mov
or
and
xchg
mov
fstps
xor
sbb
nop
ret
loop
bound
daa
cld
fdiv
fcompl
pop
js
mov
xchg
repnz
arpl
sti
sbb
cmp
mov
loope
std
cmovp
mov
loope
push
and
xor
mov
push
cltd
mov
inc
xor
ret
xchg
sti
lods
es
int3
pop
test
sub
fisttpll
pop
gs
or
fcomp
or
cmpsb
xchg
std
dec
xchg
mov
inc
mov
push
shrw
push
in
inc
cld
adc
push
cmpsl
cmp
jecxz
xchg
and
ficoml
or
push
mov
xchg
jmp
fdivs
lahf
pop
sbb
and
stc
lds
push
sub
call
test
iret
and
fbstp
pop
or
bound
aas
mov
adc
cwtl
cmpsb
movsb
dec
cmp
out
fsts
mov
push
int
stc
dec
scas
sbb
aad
sub
in
jne
out
repnz
movsb
push
xor
add
push
sbb
mov
out
insb
aaa
ret
mov
push
jne
lods
int
in
jecxz
mov
jmp
shr
std
mov
xor
fcmovnu
adc
lret
imul
mov
fsubrs
scas
pop
dec
xchg
lret
mov
xchg
push
das
xor
add
ja
movsl
pop
inc
jecxz
sahf
aam
mov
andl
int
pop
repnz
into
arpl
mov
push
enter
daa
mov
fcmove
lret
sub
mov
mov
inc
jno
push
movsb
arpl
push
lock
lods
xchg
in
fistpll
shrl
mov
mov
clc
add
and
and
mov
in
add
sbb
mov
pop
mov
clc
rorb
sub
movsl
enter
out
lds
pop
adcb
in
jnp
std
aas
push
js
lret
xchg
rclb
xchg
lahf
or
jmp
cmc
dec
xor
mov
call
ret
roll
adc
xchg
arpl
cmp
std
or
jo
inc
lea
fsubrl
mov
cmpl
xor
xchg
out
mov
adc
sub
lods
imul
fildl
xor
mov
dec
aas
dec
cwtl
fldt
fcmovnb
dec
stos
leave
mov
dec
shl
mov
ds
je
movsb
movsb
repnz
lock
lds
xchg
xlat
push
xchg
push
rcrb
rcrb
cltd
mov
rclb
iret
push
jecxz
stc
mov
mov
cmp
pop
add
dec
lea
pushf
rclb
inc
mov
insb
push
sbb
push
mov
imul
addr16
push
xor
fcmovbe
icebp
out
and
inc
shr
mov
cs
mov
rcll
int
repnz
gs
jle
xchg
js
cmp
rorb
ljmp
fadd
ror
insb
push
cmp
es
push
jnp
jne
insl
xor
shll
xchg
gs
lahf
sbbb
dec
insl
push
xchg
inc
into
les
push
scas
test
xor
in
andl
repz
jno
adcb
jecxz
icebp
jno
stos
insb
or
and
mov
out
sbb
hlt
add
leave
int
fcoml
jle
dec
jnp
mov
xacquire
pop
push
arpl
mov
nop
icebp
aam
aas
pusha
jnp
xchg
mov
or
xchg
aas
test
pop
fidivrl
je
pop
xor
xchg
xchg
sarl
mov
add
jp
pop
test
inc
xor
pusha
push
loopne
and
add
pop
pop
popl
movsl
push
cs
pop
scas
icebp
mov
sti
stos
dec
push
mov
dec
ficoms
push
mov
lret
mov
mov
pop
mov
pop
xorb
into
mov
in
dec
bound
fists
xchg
notb
mov
fldl
incl
add
jbe
stc
mov
xchg
cmpsl
loopne
test
movb
dec
sbb
mov
lret
out
cmpsl
push
mov
dec
aam
adc
test
xchg
stos
push
out
dec
fucomi
int3
mov
adc
jno
iret
cmc
cs
xor
or
add
and
into
jle
lret
ds
mov
xchg
dec
shrl
adc
lcall
dec
lret
pop
sub
jo
lret
adc
popf
loopne
pop
out
lods
popf
mov
add
mov
xor
cli
sbb
mov
jmp
addr16
pop
push
out
xchg
dec
and
inc
or
popa
xor
inc
out
dec
ds
insl
mov
add
mov
push
rclb
sub
divl
sbb
mov
jno
rcll
data16
rorl
test
or
es
sub
in
in
adc
mov
scas
or
xor
popa
insb
shlb
add
cmc
gs
fwait
xlat
mov
xor
ds
mov
clc
push
cs
sti
imul
jle
rorl
dec
jns
add
cmp
repnz
push
notb
fs
outsb
pop
adc
mov
jnp
pop
dec
mulb
aaa
and
xchg
in
xchg
movsb
sbb
notb
leave
xor
jg
ret
add
scas
sbb
pushf
xchg
adc
loope
pusha
dec
mov
sub
or
gs
push
adcl
and
outsl
pop
sbb
scas
jl
pop
jecxz
pop
mov
rcl
lods
pop
mov
aaa
push
pop
jne
xchg
fchs
add
test
xor
in
ds
pop
popa
je
fs
mov
and
xor
ret
inc
push
mov
push
mov
stos
pop
rclb
loop
aas
mov
icebp
fisttps
mov
pop
mov
jle
jl
notl
mov
and
dec
arpl
movsl
push
stc
test
out
icebp
sbb
pop
rol
fimull
add
pusha
adc
std
sbb
cmp
imul
and
les
sbb
mov
fstpt
lds
stos
in
sub
adc
xchg
inc
jmp
jge
insl
cmp
popa
popf
dec
cmc
mov
jo
loopne
inc
insl
adc
add
or
add
mov
dec
inc
and
add
xchg
insl
loop
scas
loopne
sbb
or
ret
test
jne
out
add
xlat
mov
or
dec
inc
mov
lret
xor
out
push
cwtl
jbe
cmp
mov
leave
xchg
aas
imul
mov
dec
data16
mov
mov
xchg
push
mov
mov
iret
dec
adcb
lret
pop
inc
mov
cwtl
leave
ficompl
scas
dec
xchg
loopne
push
mov
mov
or
imul
outsb
and
outsl
dec
cmpsl
cmp
ds
mov
xchg
dec
cmp
and
vpavgw
adc
inc
orb
fstpt
lcall
dec
jo
pop
test
mov
dec
test
in
and
sbb
jge
lret
jecxz
sti
dec
out
or
or
push
cli
sahf
nop
xor
shrl
in
sub
lret
std
push
adc
push
test
clc
xchg
and
fisubrl
jns
sbb
in
mov
test
clc
or
cmpsl
mov
ds
fistl
dec
idiv
add
mov
lods
imul
in
in
jo
push
in
je
sbb
stos
ds
mov
add
xchg
adc
mov
ret
cmovb
mov
push
shrl
jmp
pop
cmp
xchg
xchg
xor
lock
jg
test
and
jmp
in
push
iret
inc
jb
stos
in
test
jbe
xor
sub
outsb
outsb
mov
mov
lds
add
jecxz
xorb
mov
cmp
jns
xchg
jp
or
aaa
adc
mov
mov
out
dec
adc
xor
fbstp
outsl
xchg
enter
xchg
lods
mov
mov
mov
mov
push
sbb
cmpsl
mov
je
or
mov
rcr
xor
jo
mov
in
xor
imul
test
cmpsb
dec
mov
jp
fs
mov
sbb
inc
out
xchg
sub
ljmp
mov
shll
cmp
icebp
mov
push
cmpsl
stos
insb
divl
in
cmp
aad
cmp
mov
imul
or
sub
mov
test
icebp
daa
and
xchg
mull
pop
jecxz
imul
mov
add
jg
xor
in
loopne
push
mov
pushf
cmp
sub
xlat
mov
push
mov
add
in
popa
test
mov
cltd
xchg
xchg
das
frstor
push
jge
mov
fldl
stos
shl
js
jecxz
dec
mov
insl
cmpsb
push
ja
lcall
sub
icebp
and
mov
lret
popf
lods
mov
jl
push
mov
outsb
je
das
fiaddl
pusha
sbb
cltd
pop
push
jp
data16
cltd
ror
add
sub
sbb
push
insl
outsl
test
push
cmp
cmp
jl
aaa
push
sub
and
add
cmpsb
fwait
outsb
jbe
fs
mov
int3
imul
push
mov
xchg
jp
lret
pusha
ja
push
push
out
sbb
mov
xchg
cmp
fstpt
inc
or
pop
stc
sub
xchg
xchg
mov
popa
and
add
shl
scas
jo
shll
lahf
cmp
cld
addl
popl
mov
add
fsubs
fmuls
out
gs
push
test
adc
sub
push
adcb
lock
sbb
hlt
adc
mov
imul
push
decb
std
inc
push
movsl
mov
adcl
xor
jb
fucomp
fisubl
sbb
test
mov
push
test
arpl
in
inc
imul
xor
fdivrl
stc
out
cmp
insl
arpl
and
cltd
mov
pushf
std
mov
rolb
xchg
sub
std
in
cmp
push
mov
sbb
mov
stc
dec
in
jl
add
frstor
call
xorl
insb
push
pop
inc
push
push
stos
das
rcrb
in
sub
push
cmp
mov
addr16
mov
fs
aas
lcall
nop
mov
push
jge
cmp
sub
cwtl
mov
icebp
aas
rcrb
mov
call
cwtl
loopne
pop
xchg
dec
iret
push
sub
ficomps
sub
fisubl
into
and
pop
and
or
bound
iret
loopne
jmp
out
js
push
lods
ret
imul
je
lcall
dec
cmp
loopne
scas
ret
mov
xchg
jne
mov
icebp
jae
scas
adc
and
cmp
sub
out
sub
dec
and
int3
lods
lret
dec
and
jb
repz
mov
mov
movsl
cmpsb
xor
js
adc
fldenv
aaa
add
scas
dec
adc
and
in
mov
push
push
fbstp
cmp
popf
enter
lock
pop
out
outsl
xchg
nop
fildl
aad
sbb
mov
and
xchg
in
pop
mov
xchg
mov
lcall
pop
sti
mov
jecxz
insl
dec
rorb
mov
and
shlb
xchg
lods
or
lcall
mov
or
pop
dec
sbb
mov
jnp
add
fsubrl
jne
jbe
hlt
out
mov
sahf
cmp
out
jmp
jb
hlt
jns,pn
movb
mov
pop
xchg
push
pushf
daa
sbb
ret
sbb
inc
ja
rcll
int3
cmp
push
jmp
out
stc
insb
sti
aad
xchg
jns
jecxz,pn
mov
pushf
mov
push
lahf
imul
push
cmp
jnp
xor
mov
rcll
sub
dec
fdivrp
shrl
cmp
pop
xchg
leave
lea
imul
push
ja
into
loopne
mov
sbb
adc
jnp
xchg
test
loope
inc
jo
jns
lahf
dec
cmpsl
push
inc
aam
dec
je
mov
sub
negl
add
insl
xchg
or
data16
jmp
pop
mov
cmpsl
lret
movsb
movsb
jo
jmp
jge
mov
push
data16
mov
dec
xchg
fmul
pop
push
ret
inc
mov
mov
cltd
or
frstor
filds
dec
lret
fisubl
rclb
push
mov
jns
dec
jge
push
mov
cwtl
xchg
xchg
cld
xlat
aaa
hlt
cmp
push
inc
lods
out
lret
enter
mov
dec
popf
roll
cmp
sbb
push
movsl
mov
and
sbb
jg
ds
ja
or
stos
inc
cs
ficoml
into
inc
enter
sbb
mov
in
fdivl
pop
xchg
arpl
inc
inc
or
xor
adc
sarb
and
push
out
aam
ss
sub
dec
popf
or
mov
pop
sub
int
lahf
add
or
and
mov
in
push
jge
clc
jbe
mov
fldcw
add
xchg
push
dec
mov
xchg
imul
out
iret
into
dec
cmp
insb
push
mov
xchg
aam
jge
dec
loop
lahf
ret
leave
aaa
out
mov
mov
aaa
ds
imul
cmc
adc
jp
jl
nop
arpl
mov
and
shr
xchg
mov
mov
adc
cmp
call
dec
jns
rolb
lret
hlt
lret
cmp
sub
sbb
lods
xor
jne
push
popf
mov
jno
enter
mov
xchg
pop
adc
jle
dec
mov
pop
sahf
mov
sub
insl
xor
mov
cmp
cli
mov
mov
jg
loop
outsl
unpcklps
adc
in
stos
sahf
mov
daa
test
imulb
jnp
iret
ficoms
stc
mov
or
pop
aad
sti
or
dec
stos
xor
rcll
lahf
pusha
push
fcompl
les
imul
push
hlt
jmp
fucomp
mov
jnp
pushf
xor
pop
xor
mov
cli
jno
xchg
cmp
mov
cmp
das
mov
jmp
pop
test
and
mov
dec
pop
dec
push
fisttpl
mov
mov
cmp
rcrb
or
mov
adc
aas
rolb
sub
mov
add
sub
pop
jne
loopne
pop
xchg
cli
shrb
lea
loopne
sub
nop
sti
and
mov
lock
mov
in
sbb
sar
aam
jb
mov
js
dec
pusha
shr
loopne
jmp
and
imul
xor
rolb
ss
mov
fidivs
fldl
js
cld
lret
stos
dec
mov
pop
pop
xor
jnp
fsubs
aas
xor
out
push
lret
push
adc
push
pop
mov
dec
pop
mov
stos
inc
ljmp
out
xchg
sbb
mov
cltd
es
testl
stos
stc
cs
mov
loopne
movsb
xlat
ret
pop
movsb
xor
in
sbb
fwait
mov
dec
cmp
dec
sub
popl
xchg
ja
jo
mov
test
mov
ss
inc
sub
imul
out
fdiv
pop
loope
xor
icebp
jae
add
cmp
popa
jmp
push
or
dec
fs
shll
hlt
pop
dec
nop
pop
jecxz
arpl
int3
sub
xor
shlb
xchg
sub
pop
xchg
in
test
fildll
jae
xchg
sub
dec
aam
jbe
imul
bound
fistps
fldln2
gs
test
inc
push
mov
cmp
repnz
xchg
out
mov
insb
jge
add
mov
inc
aaa
pop
faddl
in
repz
lods
call
jecxz
into
enter
enter
leave
jge
in
xchg
mov
mov
sti
ss
xchg
ja
mov
test
insb
mov
lds
pop
jne
xchg
cltd
inc
outsb
rcll
out
mov
pusha
aam
iret
loop
in
xlat
mov
mull
xchg
out
mov
out
out
sti
cwtl
lahf
xchg
pop
out
mov
pusha
scas
or
push
xchg
gs
repnz
fsts
jno
push
dec
leave
dec
int3
lret
mov
cli
adc
fsubl
imul
test
into
cld
xchg
cmp
shlb
cmp
xchg
ljmp
loopne
sub
mov
mov
ret
js
hlt
cmp
fdivr
push
jo
fbld
sti
mov
jb
jge
mov
xchg
dec
adc
dec
push
xchg
mov
loope
jno
rorb
outsb
mov
or
jecxz
push
xchg
push
repz
push
push
mov
add
add
mov
mov
fists
icebp
jmp
in
cmp
pop
jle
mov
add
pop
push
sub
xchg
dec
rolb
into
into
cwtl
pop
inc
popa
cmp
decl
dec
test
pop
or
pop
out
xor
inc
mov
mov
jno
mov
js
ret
mov
mov
xor
adcl
inc
inc
cs
jae
fs
pop
and
sub
xchg
imul
lea
into
out
arpl
mov
mov
sub
fs
adc
out
pop
insb
add
cmpsl
gs
mov
daa
push
cmp
adc
mov
pop
std
xor
iret
lret
aaa
mov
mov
xchg
scas
xchg
jno
repz
and
js
dec
push
xchg
mov
jns
ljmp
inc
push
addb
xchg
and
orb
dec
xchg
adc
push
mov
leave
pop
lods
ss
and
mov
xor
dec
pop
jo
into
cli
es
sbb
pop
cld
inc
pop
dec
dec
ljmp
jbe
pop
mov
and
aas
ret
and
mov
movsl
arpl
mov
mov
rcrb
cltd
sti
dec
mul
push
aaa
hlt
inc
fs
and
cmp
inc
ficomps
inc
hlt
movb
mov
pop
sub
xchg
fistl
pop
rolb
rcr
test
data16
shll
test
adcb
cmpsl
sub
mov
repz
xchg
dec
and
sti
rclb
movsl
sub
lea
popl
ja
mov
sub
cmovae
xchg
mov
jnp
ja
gs
jg
jns
jno
push
lods
mov
fwait
roll
mov
adc
jns
add
dec
push
lods
scas
iret
ss
push
lds
jb
ljmp
xchg
xchg
push
lret
test
ljmp
ja
into
rcrb
stc
out
bound
psubsb
adc
scas
mov
fstl
insl
and
fabs
in
out
inc
movsl
dec
and
fnstcw
shll
xlat
pushf
cmpsb
ret
sbb
push
fcom
ror
push
jbe
cltd
xlat
sbb
adc
and
dec
rcrb
sbb
inc
mov
or
js
sqrtps
out
inc
xor
xchg
sub
and
xchg
loopne
imul
fwait
sbb
fmuls
negb
cli
movsl
xchg
inc
aaa
add
dec
pop
aad
mov
xchg
pop
sub
pop
xchg
mov
add
dec
or
sub
and
mov
xchg
mov
dec
cltd
mov
call
arpl
add
dec
imul
out
dec
repnz
adc
cwtl
in
std
ficomps
jno
or
dec
mov
das
push
aam
add
jmp
push
aam
and
aas
and
loopnew
imul
xchg
decl
dec
test
pop
pop
in
mov
add
popf
dec
add
cmp
mov
and
xor
stc
push
pop
push
sub
cltd
rorb
jp
shl
mov
cmovs
dec
fnsave
sub
mov
ja
lods
sti
out
stos
xchg
xor
cmp
mov
bound
dec
aaa
adc
push
loope
lcall
sub
cmp
dec
movsb
xor
cli
push
push
push
dec
dec
ja
test
scas
xlat
and
lret
call
cmp
in
jae
add
mulb
adc
pop
in
mov
pusha
cmp
scas
hlt
ret
jb
jge
xor
addr16
sub
adc
fwait
dec
ljmp
lods
mov
sbb
fstl
sahf
bound
dec
or
mov
mov
jge
gs
add
cwtl
ror
gs
psubusw
sbb
push
iret
or
js
insl
lds
fistpll
or
mov
mov
adc
data16
and
mov
cs
xor
mov
test
adc
popa
lea
fsubs
xchg
cmpsb
sbb
xchg
mov
xor
dec
insl
mov
aas
fbstp
cmp
mov
ficoml
adc
test
repnz
jp
data16
fdivrs
mov
mov
xor
dec
pop
inc
dec
sbb
mov
scas
lahf
jmp
xor
sbb
hlt
add
andb
daa
stc
jmp
out
and
xchg
xor
and
dec
icebp
mov
andl
adc
sbb
je
lods
sub
jmp
push
push
push
shll
sub
sub
outsb
pushf
aam
aad
sti
mov
cld
int3
stos
mov
pop
mov
inc
xchg
movsb
push
pop
shr
mov
lds
mov
addl
sub
pop
push
ficoms
pop
add
mov
out
pop
adc
cld
push
mov
pop
and
and
loop
jo
jne
dec
mov
ret
mov
inc
iret
out
jecxz
sub
adc
add
push
dec
cmp
adc
cld
ret
or
push
bound
inc
pop
std
in
bound
inc
pop
cmp
sub
adc
xchg
pushf
mov
lock
add
orb
mov
mov
mov
in
push
aas
jno
rcll
sub
fnstsw
enter
aaa
test
mov
push
jno
and
es
shl
out
jno
dec
dec
dec
daa
xor
cmp
mov
orl
sub
dec
into
dec
std
xchg
cltd
clc
fiadds
negl
jnp
push
dec
and
cld
xchg
mov
xchg
push
xor
sub
jmp
pusha
fsub
pop
repnz
pop
lret
mov
icebp
xchg
lret
sub
cmp
cli
and
lret
add
movsb
cmp
pop
pushf
mov
sub
mov
outsb
mov
sbb
sbbb
in
cmpsb
imul
lret
lret
addr16
add
ret
test
icebp
dec
jmp
adc
or
mov
jle
sub
popa
adcl
sub
call
or
test
std
scas
pop
fbstp
pop
add
icebp
ficoml
sbbl
xor
sahf
xchg
and
inc
cmp
sub
push
dec
js
mov
int
das
aad
mov
cvttps2pi
jp
and
dec
movsb
lock
cwtl
jmp
mov
fwait
in
cmp
outsb
sbb
ret
sbb
dec
mov
clc
inc
mov
les
andl
out
sbb
mov
xchg
xchg
sub
test
sbb
stos
movsb
inc
testl
lods
dec
pop
stos
pop
movsl
xor
jmp
mov
jo
xchg
jb
jnp
sub
and
mov
jns
push
stos
jbe
icebp
dec
dec
pop
fsts
inc
mov
in
fsubr
mov
mov
inc
sub
addr16
pop
fisubl
xor
out
jo
data16
outsl
lret
sbb
imul
fstpl
mov
jge
and
insl
out
push
adc
fistps
lea
pop
jbe
xchg
dec
scas
mov
lds
fcmovnb
aad
dec
inc
pop
icebp
ds
out
push
hlt
repnz
sbbb
outsb
adc
inc
mov
push
imul
repnz
or
jge
lods
add
jg
fildl
popa
cmp
out
xorl
leave
insb
sub
pop
sbb
lock
loope
and
mov
rclb
inc
lret
outsl
sbb
sub
xlat
mov
and
sub
adc
or
rcrb
loop
cmp
mov
enter
scas
lods
dec
stos
gs
xchg
shrb
fcompl
das
pop
lcall
mov
imul
add
imul
add
rcrl
xor
sahf
pop
and
ss
stos
pop
dec
lahf
mov
gs
and
cmp
sahf
cli
lods
cmpsl
push
iret
orl
lcall
aad
outsl
sub
loope
push
xchg
mov
into
pop
mov
insb
dec
push
or
rol
sarl
cmpsb
lcall
fwait
cmp
inc
ss
sarl
scas
stos
je
mov
popf
cmpsl
mov
xor
mov
jo
jnp
jl
dec
xor
push
jns
xor
cmpsl
mov
dec
mov
fistpll
inc
jbe
fwait
daa
xchg
test
xchg
adcb
jns
pop
ret
mov
cs
shll
into
jnp
push
and
mov
inc
sub
xchg
cmp
jno
cmc
push
ret
dec
adc
shl
xchg
mov
sbb
mov
in
rclb
int3
std
nop
and
roll
das
mov
ficoml
adc
jnp
test
cmp
mov
out
clc
jb
adc
adc
cli
sub
lods
lret
bound
or
push
xchg
mov
ffree
adc
jnp
repnz
stc
out
stc
aam
add
mov
out
enter
sbbb
dec
movsl
mov
jge
imul
mov
push
mov
fcmovnbe
cmp
int
cmp
cmp
ss
in
xchg
dec
sub
cltd
cmp
leave
ret
pop
shl
inc
sbb
mov
pushf
xor
add
dec
add
cld
push
push
xchg
ja
movsl
mov
mov
lods
sub
push
enter
sbbb
push
push
xor
cmp
xchg
icebp
cld
dec
data16
aad
repz
fcomi
test
pop
sbb
mov
fs
in
std
sub
in
fs
push
pop
mov
jmp
pop
push
and
xchg
mov
push
pop
adc
xor
add
xchg
mov
fnstcw
xchg
mov
xor
cld
dec
pop
nop
jno
or
mov
push
aad
mov
xor
dec
flds
stc
cmp
xchg
dec
insl
sub
repz
sub
jge
and
lock
and
and
xor
fstl
imul
pop
cmp
je
fstp
adc
movsb
adc
mov
fidivs
imul
inc
jg
jae
sub
inc
pop
mov
xchg
in
lret
or
jb
xchg
popa
fnstsw
insb
xor
add
dec
sub
bound
add
jne
rolb
nop
pop
cli
cmc
arpl
ja
in
test
mov
xchg
or
scas
sbb
lret
fcmovnbe
jns
addb
adc
xchg
push
and
inc
scas
cltd
inc
scas
mov
sbb
mov
rorl
add
add
ret
shr
xchg
xchg
sbb
dec
fisttps
test
add
mov
jge
gs
adc
inc
out
fs
mov
lret
sub
rolb
mov
xlat
jmp
mov
fldenv
pop
mov
inc
xor
adc
test
ss
xor
xlat
pushf
xchg
in
repnz
fucomi
mov
cmp
mov
sbb
fucomi
sti
das
add
jnp
addr16
incb
je
dec
ja
lods
or
adc
mov
lods
jo
pop
xor
fdivr
daa
test
in
fdivr
dec
cmc
jecxz
pusha
mov
mov
add
push
add
jo
sti
fs
jo
add
stos
xor
test
cmp
push
gs
mov
sbbb
andb
mov
sub
icebp
xor
xor
jb
mov
imull
cwtl
ret
xchg
call
or
inc
inc
sbb
stc
outsl
fwait
mov
mull
xor
mov
insl
adc
add
pop
test
or
int
jne
xchg
fidivl
lds
cmp
add
out
mov
or
adc
test
stc
test
pop
xor
shlb
scas
dec
es
adc
adc
sub
ror
ljmp
out
popl
mov
cmpsb
mov
add
test
out
xor
ss
popa
mov
or
pop
flds
in
pop
mov
imul
mov
loopne
out
cmp
jl
test
push
cmovo
mov
xchg
lret
test
jbe
cltd
cmp
pop
mov
aas
mov
push
jecxz
pop
xchg
loope
cld
xor
imul
pop
out
pop
lahf
shlb
call
jne
cmp
outsb
imul
inc
popa
jnp
sub
insb
in
lret
push
pop
cmp
test
jnp
faddl
mulb
jae
loope
adc
jb
inc
cmp
xor
cmpsl
xor
xlat
cmpsl
stc
lret
jmp
aam
xor
mov
mov
jl
sbbl
dec
or
ds
sbb
loope
imul
popf
push
sub
jb
scas
fcompl
aad
cmp
push
loope
insl
enter
dec
lcall
testl
stc
repz
push
es
push
mov
push
adc
lahf
mov
xchg
scas
xchg
aas
subw
push
ss
nop
xchg
jae
mov
xor
mov
andb
sbb
mov
pop
cld
aaa
mov
repz
xchg
adc
add
aam
ficomps
sub
scas
ret
cwtl
sahf
push
sbb
pop
fadd
push
ror
aas
push
cmp
mov
mov
inc
mov
scas
mov
and
cmp
sub
xor
popa
jno
int3
pop
push
inc
fwait
mov
jb
mov
pop
inc
jmp
mov
dec
add
pop
adc
das
subb
pop
cmp
xchg
std
cwtl
imul
pop
out
xchg
mull
push
mov
stc
dec
pop
into
inc
fimull
add
aam
lods
push
jo
xchg
pusha
leave
ret
das
and
pop
cld
nop
pop
dec
add
push
cwtl
ret
jbe
call
jg
dec
inc
imul
or
jns
sub
sbb
cmp
xorl
lods
mov
cmp
push
jge
sub
sub
icebp
adc
mov
lret
push
test
cmp
mov
mov
aas
cmpsb
and
cmp
mov
mov
ret
ret
movsb
sbb
mov
adc
dec
addb
fs
les
outsb
daa
jb
and
setbe
ret
in
mov
dec
mov
fdivrs
cmp
xchg
jmp
mov
pop
in
jle
fucomi
sub
xlat
pop
dec
sbb
push
push
mov
aad
jno
pop
mov
stos
xlat
pusha
out
pop
push
insl
mov
clc
mov
adc
inc
add
rcll
cmp
pop
pop
ljmp
mov
jp
inc
std
cmp
rcrb
in
out
push
pop
call
cmp
ror
jl
and
popf
xor
jmp
mov
cmpl
outsb
mov
rcr
pop
addr16
mov
ror
mov
popf
dec
loopne
inc
add
das
dec
push
jmp
addb
lea
or
jl
mov
cmp
jbe
daa
add
push
lret
sub
push
ret
or
inc
out
jge
arpl
shlb
cwtl
and
push
mul
inc
jg
fldenv
sbb
ret
jge
xchg
insl
pushf
pop
xor
push
cmp
mov
push
mov
scas
push
loop
mov
ret
xor
mov
xor
cmpb
das
ficomps
fildll
stc
jb
jne
imulb
popf
and
adc
cmp
xor
or
lcall
cltd
shll
popf
adc
add
adc
loopne
mov
addr16
cmp
repnz
data16
enter
or
inc
pop
int
ds
jnp
xor
inc
popa
cmc
shlb
mov
je
pusha
fcompl
les
jle
ds
and
adc
lods
add
lea
sub
cltd
and
mov
xlat
push
adc
ljmp
iret
pop
fidivs
mov
fisttpll
inc
rolb
inc
aaa
fsub
sub
jno
fs
vinserti64x2
jle
nop
push
lods
ds
mov
addr16
mov
add
out
nop
lods
push
mov
das
mov
mov
cmp
adc
popf
or
jb
js
sbb
jmp
mov
or
mov
aam
push
shrb
das
lods
jno
fwait
sub
rorl
mov
nop
insb
ret
mov
shl
ds
adc
jb
push
push
xor
js
std
imul
mov
enter
in
mov
js
jecxz
imul
pushf
in
scas
xchg
or
xchg
jmp
iret
pop
rorb
push
stos
out
movsb
imul
fwait
push
mov
rcrb
mov
call
dec
lret
xchg
add
cmpsb
or
sub
jle
jnp
shl
shrb
cmp
data16
test
pushf
ss
and
idivl
stos
fldenv
sub
dec
mov
lret
lret
fcompl
xlat
inc
push
mov
andnps
insb
adc
lock
ret
fdiv
ljmp
mov
mov
lret
call
leave
mov
pushf
jnp
iret
and
cmp
inc
dec
dec
and
and
inc
push
add
or
adc
mov
mov
repz
or
test
lods
outsl
mul
sub
sbb
inc
mov
push
bound
jnp
or
jecxz
pop
cmpl
pusha
cmp
das
cmp
add
pop
test
lds
clc
sbb
jg
mov
sbb
dec
pushf
in
mov
mov
out
gs
xchg
fiadds
xorps
cltd
mov
inc
in
pop
inc
out
push
push
and
cmp
xlat
mov
dec
adc
cltd
movsl
bound
jo
jb
add
clc
mov
xchg
mov
ljmp
fs
push
push
add
and
adc
into
call
and
pop
rclb
andl
subps
pop
xchg
aad
jae
mov
cmp
rcrb
add
test
add
pop
sti
dec
cmp
inc
ret
dec
je,pn
mov
lock
pop
or
mov
call
rclb
xchg
sbb
push
hlt
xchg
mov
sbb
xor
xchg
mov
call
sti
mov
test
aam
fcompl
xchg
mov
cmpsl
out
mov
les
das
xor
sbbb
and
iret
sub
daa
shrl
mov
jmp
jb
xor
int
test
or
jb
iret
mov
inc
ja
ret
jbe
imul
pop
xchg
adc
add
aad
cmp
inc
cmp
xor
fldcw
fsts
sub
lret
mov
inc
push
inc
das
arpl
icebp
cmp
inc
les
inc
in
pop
rcrb
mov
push
xchg
aas
mov
loope
lods
out
out
sbb
insb
scas
lods
fisttpll
cs
loop
mov
push
cmp
add
jmp
sti
pop
jb
fistpll
mov
shlb
mov
stos
push
sbb
lahf
jae
es
xchg
outsl
or
ret
test
mov
or
mov
fisttpll
inc
nop
cmpsl
js
inc
mov
mov
mov
or
mov
bound
fcompl
xor
lret
jo
sub
jnp
daa
sbb
ficoml
popf
call
insb
mov
push
push
xor
cmp
cmp
pop
pushf
mov
into
repnz
dec
xchg
mov
sub
cltd
cmp
aas
or
fs
xchg
fstpt
aam
xor
mov
adcb
dec
add
pop
sbb
jp
pop
xchg
fs
out
cmp
add
dec
push
add
mov
daa
enter
push
mov
aaa
mov
mov
fdivs
lods
sti
mov
or
push
add
push
adc
xor
leave
daa
cmp
ret
sbb
lret
and
fwait
ja
jmp
pop
cmp
pop
mov
arpl
pop
sub
es
aas
mov
jecxz
ds
sub
cld
mov
aad
pop
enter
cmpsl
push
fistps
shr
and
push
aam
add
pop
in
push
orl
aam
mov
pop
or
dec
ja
inc
lret
inc
add
adcb
imul
cmpsl
lock
sub
stos
xor
push
pop
lret
scas
sbb
outsl
mov
ljmp
xor
sub
aas
and
aaa
divl
inc
shrl
push
mov
and
xor
dec
adc
ljmp
insl
je
jmp
jns,pn
in
jp
inc
jb
pop
aas
xor
xchg
mov
mov
mov
xchg
cmp
adc
inc
push
or
movsb
fcoml
je
addr16
nop
fstl
aam
jg
jmp
pop
cmc
mov
ss
lods
jp
js
je
jae
cmc
cs
popa
out
mov
adc
pusha
in
lds
pop
mov
mov
scas
seto
ja
mov
push
sbb
into
sti
ljmp
inc
inc
pop
lret
cmp
div
pop
push
inc
fsubrl
pop
inc
jle
test
sbbb
or
push
inc
push
dec
into
xlat
out
sbb
mov
or
sbb
jl
loopne
hlt
sti
inc
pusha
in
int3
push
jecxz
mov
add
adc
fcmovnb
jecxz
mov
aad
inc
inc
sarb
xchg
mov
shrl
leave
mov
inc
mov
stc
sbb
and
inc
push
popf
pop
stos
and
ret
aas
pushf
pop
js
jg
xchg
sarb
in
or
or
inc
dec
pop
push
sbb
adcb
mov
or
out
sub
mov
hlt
xor
sub
jle
inc
inc
mov
xor
pop
lret
mov
popf
clc
mov
push
test
push
lret
stos
xor
inc
dec
cltd
pop
add
dec
adc
call
jg
rclb
xor
js
jmp
in
mov
mov
daa
add
dec
dec
out
dec
and
inc
adc
mov
mov
repnz
lock
add
call
adc
mov
mov
dec
aaa
pop
dec
sbb
stos
repz
enter
push
fnsave
mov
enter
test
push
ja
dec
xor
in
push
xor
push
je
aas
xor
and
push
and
xor
push
or
mov
std
sbb
and
or
int3
push
xchg
xchg
cmp
pop
rol
ficomps
popa
pop
leave
cmc
push
adc
addb
sbb
jp
sahf
pop
insl
xchg
mov
dec
lret
jmp
pop
ja
push
jl
or
leave
push
xor
jae
data16
jne
icebp
cmp
scas
xchg
push
lods
sub
fdivs
xor
das
mov
ja
aam
adc
inc
lock
or
add
jno
adc
mulb
inc
mov
out
popa
add
in
dec
mov
or
xchg
movsl
or
test
and
stos
shl
jno
inc
das
sub
mov
mov
andl
les
xchg
mov
cld
pop
adc
dec
cmp
jle
lret
push
xchg
adc
mov
dec
sub
or
cmp
dec
mov
fdivrs
enter
pop
xor
arpl
mov
adc
mov
hlt
hlt
clc
ja
icebp
xchg
js
loop
inc
mov
filds
hlt
sub
or
rolb
aaa
mov
jmp
pop
pop
loop
iret
adc
cmpb
and
pop
dec
sti
rcrb
pushf
cs
push
mov
mov
push
addb
or
mov
add
mov
inc
ljmp
jle
push
mov
sti
dec
push
scas
int3
cmp
nop
clc
xchg
lods
xor
dec
or
cwtl
dec
mov
mov
xchg
xor
or
outsb
mov
fidivrl
aaa
jg
popf
jmp
mov
xor
popf
add
cs
movsl
cmpl
rcll
inc
jmp
test
test
dec
je
jne
sahf
xor
daa
xchg
cld
and
adc
daa
movsl
out
loope
mov
in
int3
loop
push
test
call
mov
jae
mov
daa
shll
call
dec
lea
mov
jns
add
add
lahf
sahf
fstpl
and
in
and
dec
adc
push
sarb
sbb
xor
lret
stos
iret
cmp
sbb
mov
cwtl
xchg
inc
mov
mov
adc
rorb
adc
cwtl
scas
cltd
push
sub
add
stc
daa
lret
shrl
popa
push
sti
xchg
mov
pusha
repnz
push
jecxz
inc
cmpl
mov
xor
je
pop
jns
ljmp
jmp
xor
fcompl
push
dec
inc
and
mov
xlat
imul
dec
cli
ret
push
ss
out
aad
sbb
ret
add
sahf
and
sub
loope
lcall
sbb
mov
subb
negb
adc
lcall
xchg
push
addr16
aaa
mov
jg
aaa
jb
nop
mov
mov
sub
hlt
jge
add
icebp
sti
sbb
adc
and
scas
mov
pop
xor
cmp
call
lods
decl
lret
lock
or
rcrb
aaa
push
rorl
mov
movsl
sbb
fisubs
sub
add
test
fwait
addl
nop
in
jmp
leave
push
in
sub
in
inc
sbb
jnp
into
sbb
pop
icebp
mov
in
push
lea
or
inc
cmp
in
jg
fsubrl
lods
sbb
aaa
mov
jle
test
in
daa
jg
xor
stc
hlt
fsubp
push
in
pop
mov
ret
scas
rolb
inc
lret
into
loopne
sbb
shrd
aaa
subb
icebp
jo
fistl
lret
mov
jo
mov
push
ss
cwtl
jecxz
shl
and
out
lods
adc
aad
adc
cmp
inc
push
pop
jnp
imul
pusha
jge
jnp
mov
dec
or
js
mov
mov
leave
inc
mov
lods
xchg
popa
xchg
data16
pop
pop
jne
dec
loope
imul
adc
orl
ja
incb
out
xor
aam
inc
push
ret
add
fiadds
mov
outsb
push
mov
outsb
lret
push
pop
das
lret
dec
sub
mov
addb
push
aas
mov
fistpll
inc
mov
jge
jg
and
dec
pop
cmpsl
pop
dec
ds
add
fcomps
mov
cmpsl
ficompl
enter
mov
inc
add
ret
jbe,pt
scas
in
in
or
push
jno
mov
pop
jg
cmp
mov
inc
neg
orl
cmpsl
dec
cs
je
jns
add
ds
xor
rcr
cld
cmpsl
jno
pop
or
insb
adcl
fchs
push
pop
rcr
mov
xchg
mov
adcb
inc
xor
popf
adc
movsl
push
sbb
idivl
mov
mov
in
pop
lds
sub
loopne
dec
mov
lods
andl
sub
push
aaa
es
cwtl
mov
pop
xchg
movl
push
shll
data16
sti
xchg
pop
mov
sub
sahf
loop
ror
lds
int
dec
sub
in
enter
mov
ret
xchg
xchg
pop
into
test
sub
and
push
add
rcrb
xor
icebp
and
cmp
mov
stos
sti
ds
dec
dec
fs
gs
sub
popf
in
pop
sub
sar
jo
and
movsl
popf
push
arpl
popa
data16
mov
lea
loope
adc
fnstenv
bswap
fsubrs
rorb
loope
push
push
fists
mov
mov
bound
pop
jecxz
pusha
mov
jno
add
inc
icebp
scas
out
cltd
ds
repnz
pop
mov
push
mov
lret
push
pop
mov
mov
test
in
lahf
xchg
loopne
inc
and
pop
test
push
sahf
popf
pop
xor
fsqrt
or
cwtl
inc
movsl
jl
and
push
into
int3
call
jne
es
cmpsl
jp
pop
call
jne
test
pop
dec
out
push
inc
and
frstor
movsb
fisttps
sub
jne
std
js
gs
pop
inc
inc
daa
sbb
pop
out
out
or
xchg
jle
lock
popf
lods
test
inc
push
test
js
and
mov
movsb
and
xor
dec
adc
imulb
mov
mov
jg
adc
cwtl
repnz
fwait
mov
xchg
stos
jecxz
xchg
or
jl
ljmp
sub
std
js,pn
fcmovb
jbe
add
mov
mov
xor
mov
or
call
cmpsb
movsl
and
nop
mov
xor
lahf
cmp
and
insb
adc
shll
xor
gs
das
adc
mov
ds
pop
jmp
jge
adc
or
sub
fdivrs
imul
clc
pusha
leave
xchg
js
jnp
repz
outsl
aaa
and
shl
lret
lods
rolb
lods
and
js
mov
pop
mov
fs
into
mov
sub
loop
and
mov
and
inc
cmp
inc
mov
and
mov
arpl
sahf
jns
push
sub
lock
adc
imul
inc
sub
gs
sub
and
cmp
pop
icebp
xor
bound
inc
ficompl
mov
lret
punpckldq
lret
in
popf
push
xchg
xchg
xchg
jecxz
jp
repnz
ss
mov
enter
xchg
mov
out
daa
add
out
fdecstp
in
mov
cmpsb
xlat
sub
stc
jge
repz
test
mov
jae
adcb
vpsubsb
cmp
ret
or
xlat
cmc
das
sub
mov
jo
xchg
xchg
cmp
jns
xchg
mov
sahf
sbb
mov
je
pusha
sbb
insb
mov
cs
enter
cmp
loopne
jnp
pop
test
test
mov
repnz
dec
push
andb
not
inc
leave
adc
loopne
dec
test
loope
xchg
and
js
test
mov
dec
je
cmp
dec
or
mov
mov
cltd
bound
pop
lea
out
sub
into
inc
dec
mov
pop
and
mov
popf
mov
jno
les
lahf
fwait
mov
mov
repnz
or
pop
dec
dec
pop
es
into
jnp
dec
xor
jge
add
imul
xor
adc
adc
cmp
sbb
repz
jl
insb
inc
repz
orl
add
mul
cmp
daa
pop
adc
adc
sub
int3
popf
mov
push
cmp
cmp
push
popa
dec
int
fldcw
out
mov
mov
icebp
std
fcmove
pop
pop
adc
data16
rcl
mov
arpl
shll
pushf
out
and
mov
push
jnp
out
add
lret
jae
mov
mov
mov
orb
loop
push
pop
adc
fcoml
fs
cmp
call
xor
sbb
and
pusha
cmp
add
mov
popa
sbb
fwait
icebp
in
hlt
dec
push
jge
pop
dec
mov
mov
in
popl
dec
add
fmuls
cltd
fmul
div
xchg
ds
rcrb
jp
xor
sbb
bound
mul
xchg
xchg
mov
and
addr16
lret
adc
adc
sahf
pop
push
andl
sbb
mov
movsl
addr16
xor
cs
test
mov
cwtl
jo
jbe
add
sub
repnz
mov
push
les
pusha
dec
lahf
loopne
push
movsb
jmp
loop
insb
mov
jae
add
dec
mov
sbb
pop
scas
stos
into
in
or
add
or
inc
mov
gs
add
mov
dec
inc
aaa
js
adc
rcrl
es
lds
nop
out
pop
mov
jns,pt
and
inc
push
lods
mov
jns
test
pop
inc
lea
add
sub
jo
cmc
ljmp
arpl
ljmp
sbb
int3
pop
sbb
subb
fnstsw
or
popa
mov
loop
stos
popf
call
sar
sbb
cmc
pop
xor
mov
data16
inc
ss
popf
test
push
mov
xor
add
pop
inc
and
cmp
out
int
jnp
xor
jo
outsl
std
xor
pusha
push
int
dec
mov
pop
dec
jle
jb
popf
pop
fisubrl
hlt
xchg
jo
jns
stc
aas
adc
call
jo
in
insb
jne
pop
outsb
xchg
sysret
jmp
xor
iret
cmpsl
into
lahf
ret
pop
push
aas
ficompl
add
mov
push
adc
mov
mov
push
jg
sbb
mov
jmp
repz
sub
sub
jbe
lods
xor
das
aam
into
sbb
push
pop
pop
xor
pop
add
out
xor
jl
mov
out
sbb
pop
in
jno
lds
sbbl
insl
lock
mov
imul
popa
fnstcw
cli
push
and
mov
dec
cld
repnz
cwtl
mov
sbb
xchg
cmpsl
das
cmp
pop
xor
mov
cmp
sbb
cld
push
push
xor
adc
jge
shlb
jne
lcall
xor
mov
cmp
aaa
push
sub
mov
outsb
popf
pop
xor
cmp
cmc
movsb
and
daa
pushf
test
cs
dec
and
lret
popa
cltd
cmp
orl
cmp
test
fsubr
fstpt
faddl
mov
test
mov
lret
xor
stos
inc
and
repz
xchg
and
cmc
cmpb
xchg
scas
fidivs
stos
inc
movsl
pop
int3
sub
mov
iret
xchg
movsl
sub
jmp
inc
inc
fs
inc
xchg
cmp
dec
or
ret
or
lcall
enter
fidivs
aad
aas
gs
fs
sub
jp
negb
jo
lret
js
addr16
inc
mov
mov
cmp
cmp
aad
into
aaa
pop
in
sbb
jl
xchg
mov
mov
les
inc
push
jno
lret
xchg
dec
or
sbb
ret
adc
pop
imul
or
mov
pusha
fs
adc
pop
sbb
mov
mov
dec
nop
lcall
cmp
pop
out
and
adc
lahf
lret
or
andl
xor
sti
push
stos
and
jle
daa
fiadds
mov
loop
int
int
imul
cmp
or
stos
inc
ds
pop
int
fwait
jns
and
gs
xor
sbb
out
sub
ljmp
das
mov
cmp
inc
fcoms
insb
sbb
push
movsb
mov
jb
xchg
outsl
inc
pop
pop
ja
popa
pop
ss
insb
pusha
push
mov
add
lea
jecxz
mov
orb
sub
cli
mov
in
repnz
outsb
add
dec
hlt
out
sub
sbb
xchg
push
xchg
ljmp
in
in
pop
jo
jns
cmp
ret
jnp
cmp
push
out
adc
pop
pop
sahf
sahf
push
clc
push
out
jno
cld
int3
movsl
rclb
fcom
xor
shll
pop
lcall
sbb
cmp
sbb
gs
roll
stc
dec
cli
xor
syscall
cmpl
xchg
cmp
fnstenv
stc
enter
enter
stc
movsb
add
insl
test
lea
adc
ss
pop
mov
adc
outsb
xlat
cmp
cmp
cvtpi2ps
xchg
xchg
or
inc
push
push
pop
or
movsl
shll
xadd
pop
xchg
dec
jae
or
mov
ss
and
adc
dec
add
sahf
pop
lea
cmpsl
mov
xchg
data16
cltd
iret
mov
jg
aas
jb
pop
adc
test
test
mov
movsb
adc
xchg
pushf
imul
aam
sbb
test
iret
cmp
rep
dec
dec
fnstcw
xchg
jmp
jo
sahf
sahf
dec
clc
adc
and
loop
mov
je
imul
sti
mov
fcmove
push
adc
ds
addr16
daa
fwait
sarl
popa
adc
mov
mov
mov
in
or
fsubrs
ret
pop
sbb
incb
clc
pop
mov
xchg
aaa
mov
insb
pop
sub
dec
cmpsb
ss
subl
testb
jp
jg,pt
xchg
dec
jns
movhps
push
pop
mov
jg
jb
aas
getsec
cmp
push
pop
movsb
push
inc
pop
sahf
mov
lock
aaa
lahf
pop
pop
xchg
jae
cld
lods
jnp
jae
inc
push
cmp
fdivrs
xchg
mov
mov
inc
sbb
lods
jne
add
pop
push
mov
jns
sti
in
mov
mov
xor
xor
loopne
int3
bound
inc
out
adcb
add
mov
xor
sbb
inc
mov
or
out
and
pop
es
mov
loopne
sbb
dec
outsl
jmp
repnz
sbb
xor
xchg
xchg
xchg
or
lds
out
shr
iret
mov
mov
cmp
sub
sbb
cmpsb
push
nop
incl
in
mov
push
xor
arpl
push
in
repz
lcall
loop
jo
mov
out
add
mov
sub
pop
imul
mov
push
imul
fsubrp
add
lds
inc
jge
push
cmc
or
sbb
mov
jae
push
jg
cmp
xchg
fimuls
adc
imul
ret
nop
cmpsb
test
mov
es
adc
xor
inc
aad
divl
and
jg
aas
stos
sub
xchg
mov
sub
in
dec
rcll
xlat
jbe
fistpl
out
mov
icebp
sbb
or
or
xchg
dec
add
lcall
xor
insl
push
jl
outsl
testl
lods
xor
xchg
mov
mov
sbb
adc
mov
inc
xchg
push
scas
sbb
aam
out
pop
stc
mov
dec
iret
xor
push
jnp
orb
inc
mov
inc
xor
repz
in
aam
test
int
push
mov
jae
jl
push
inc
or
lret
xlat
mov
mov
popf
cmp
aam
std
pop
and
jge
das
xor
inc
push
js
outsb
inc
cmpl
cmp
push
adc
pusha
sub
mov
movsl
imul
pop
pop
sub
add
pop
sub
pop
push
lds
xor
jg
scas
dec
push
xor
inc
pop
es
mov
daa
shl
ficomps
sar
sbb
sub
mov
inc
pop
sti
popa
fnstcw
jnp
xchg
adc
cmc
adc
daa
jae
sbb
sub
mov
mov
mov
subl
movsb
aam
popa
xchg
ds
arpl
add
fcmovnb
dec
jnp
dec
jne
fcomps
inc
pop
pop
lods
enter
mov
pop
mov
adc
xchg
mov
cmp
xor
jecxz
inc
xor
movsb
inc
inc
insb
sbb
jne
dec
and
scas
int3
add
push
ja
adc
out
sbb
sbb
gs
fnstenv
aas
jg
push
ja
or
xchg
shl
and
fstps
popa
test
pop
stc
or
je
mov
push
adc
inc
outsb
lahf
es
in
dec
xchg
sub
int
pop
and
lahf
xlat
or
pop
addb
adc
xor
push
cs
bound
or
pop
pop
mov
add
mov
jne
out
sbb
pop
xchg
cltd
mov
out
sub
cmp
and
adc
xchg
xchg
pushf
pop
xor
jle
call
loop
push
jg
sbb
xor
test
xlat
out
scas
lods
pop
push
mov
and
sub
leave
in
in
mov
jle
push
fs
out
addr16
xor
mov
pop
sub
clc
jb
aaa
cs
mov
sbb
lock
jmp
cltd
push
xor
dec
enter
jge
mov
fisubrl
dec
icebp
adc
pop
push
pop
stos
lods
loope
sub
xor
out
into
cmp
aas
fwait
sbb
test
mov
pop
lock
repz
ds
paddusb
aaa
jg
cmp
test
push
pop
rcrl
xor
cmp
push
outsl
mov
aas
imull
xor
pushf
outsb
fwait
dec
xchg
mov
in
lret
mov
cmpsb
sbb
movsb
mov
in
outsb
dec
sbb
mov
push
dec
and
xor
dec
push
cmp
fsubl
inc
stos
mov
data16
mov
jecxz
jbe
lods
iret
int3
cmp
jo
sub
sbb
je
ljmp
cli
cs
test
aaa
sub
push
and
out
fst
jle
out
mov
fsubrl
xor
popl
or
outsl
push
ds
insl
jo
pop
inc
fimull
mov
out
dec
jbe
dec
cmc
out
cmp
mov
pusha
mov
das
push
xor
xor
lret
in
push
ror
mov
or
or
jne
jle
or
test
sbb
rep
aaa
enter
mov
clc
jecxz
dec
add
inc
pop
adc
dec
test
cmpsb
mov
jmp
xchg
mov
pop
mov
add
bound
and
lock
dec
dec
pop
lahf
xlat
add
imulb
mov
add
sub
dec
mov
push
cli
inc
sbb
fwait
cmp
mov
test
dec
pop
lcall
shlb
lock
sbb
jo
pop
xor
inc
mov
mov
jno
stos
pop
jo
mov
or
int3
dec
mov
dec
xor
mov
into
mov
jmp
mov
jb
and
inc
movsl
sub
inc
mov
pushf
clc
dec
pop
xchg
lea
jge
and
add
pop
cmpsb
jp
adc
inc
in
in
lock
sbb
inc
mov
push
mov
dec
and
sub
hlt
xor
lods
dec
xor
jmp
rcrb
subb
xor
fcoms
aam
divb
outsb
mov
pop
mov
pop
lods
pop
rolb
adc
adc
sti
jle
dec
lret
mov
mov
or
test
call
pop
pop
sbb
hlt
and
mov
push
mulb
pop
sbb
mov
adc
mov
jnp
cmp
sbb
sbb
rol
jb
mov
add
mov
add
imul
mov
sub
cltd
lock
clc
test
popf
add
shr
fwait
dec
or
mov
pop
pop
sbb
push
shll
mov
in
mov
mov
pop
fists
enter
std
iret
dec
cmp
in
xor
or
fwait
test
cmpsb
cmp
cwtl
scas
xor
cmp
mov
mov
xchg
mov
xor
jg
xor
leave
pop
dec
adc
xor
int
mov
add
pop
mov
pop
jbe
jmp
jae
sbb
cmpb
test
add
jno
in
sub
shlb
lea
fstpt
pop
sub
pop
mov
cmp
in
xchg
arpl
call
push
dec
mov
out
mov
inc
jmp
adc
imul
lds
sbb
and
arpl
loope
rcrb
leave
inc
cmc
pop
scas
xchg
out
xchg
add
adc
rclb
movsb
mov
int
mov
inc
xlat
push
lock
hlt
into
lds
push
sbb
add
cli
pop
xchg
jp
jns
sbb
lcall
or
scas
insb
inc
pop
push
adc
xchg
fsubl
mov
cmp
push
and
or
push
pop
xchg
xor
mov
sbb
dec
xchg
jge
mov
mov
out
cld
xlat
mov
lods
mov
in
dec
stc
clc
outsb
ret
sbb
inc
lds
jbe
or
adc
xor
mov
jbe
and
ds
ds
lret
mov
fs
adc
arpl
dec
repz
into
stos
adc
in
test
ror
sbb
mov
sbb
jg
push
lahf
outsb
lret
add
inc
xor
in
mov
call
push
fiaddl
jmp
outsb
jb
lods
push
and
sub
int3
cwtl
cmp
in
mov
fstpl
cmp
push
jecxz
aas
loop
xor
cmp
testl
js
aad
lock
jp
clc
insb
or
mov
sub
inc
call
add
inc
mov
dec
push
fld
clc
fwait
cmp
ret
and
pop
inc
addr16
sbb
addl
test
mov
sub
jnp,pt
push
cwtl
bound
jno
ret
add
scas
mov
push
pusha
fstpt
ja
imul
jne
dec
aad
mov
std
int3
jns
sub
sub
xrelease
or
sub
adc
testl
mov
dec
push
fwait
cmp
mov
push
xor
adcl
repz
mov
dec
out
cwtl
xor
in
call
cmpb
pop
add
pop
push
mov
insb
mov
rorl
mov
das
push
sbb
cmp
ljmp
pop
jge
stos
jg
sarb
rcl
loop
mov
mov
neg
cld
lods
or
xchg
dec
sub
xchg
call
mov
pop
aas
fldl
xchg
mov
test
popf
cs
shll
or
mov
shrl
dec
mov
jmp
pop
repnz
adc
and
test
jmp
sbb
call
cmp
movsl
and
jb
jbe
inc
cltd
cld
mov
inc
mov
je
push
mov
push
fnstenv
adc
add
mov
pop
daa
aam
cmp
pop
push
xchg
pop
push
xchg
lock
jb
cs
xchg
mov
cmp
and
stos
ljmp
push
loopne
movsl
rcr
sub
cmpl
in
gs
mov
dec
rcll
push
push
pop
lock
sub
xchg
xchg
mov
jae
pop
pop
dec
mov
mov
mov
push
or
push
xor
xchg
lods
pop
sub
inc
inc
arpl
in
add
jo
daa
shlb
test
xor
push
pop
ljmp
lret
pop
loopne
in
jle
inc
mov
mov
rcr
leave
adc
dec
sahf
push
xor
repnz
pop
aad
in
mov
pop
mov
nop
scas
xchg
leave
mov
aam
add
pop
lock
jb
add
arpl
loope
cld
mov
xchg
adc
divl
stc
xlat
imul
adc
addr16
jl
xchg
adc
ss
push
call
jne
adc
mov
shlb
mov
inc
imul
xchg
shr
or
lret
ficompl
bound
inc
iret
adcl
bound
xchg
popa
movsl
call
push
sbb
add
notb
pushf
jo
packuswb
add
mov
in
dec
leave
or
mov
jl
adc
das
aaa
push
cli
stos
mov
push
mov
sub
pushf
in
addb
iret
lds
bound
sti
nop
dec
jp
int
cmp
jae
test
andb
pop
popl
or
inc
mov
in
mov
popa
jb
cltd
mov
mov
cmc
inc
xchg
int3
and
push
xlat
inc
push
pop
xchg
adc
xor
popf
push
ret
mov
add
fbld
popf
stos
add
push
xchg
xor
cli
cmpsl
pop
mov
lods
out
adc
out
cmp
rcr
cmp
inc
loop
adc
stc
xchg
cltd
stos
or
pop
mov
mov
sbb
pop
xlat
adcb
lret
test
dec
out
adc
cmp
dec
leave
in
mov
sbb
loope
jl
pop
sbb
adc
insl
lock
scas
outsl
scas
jbe
imul
xchg
inc
repnz
mov
sarb
xor
sbb
int3
and
popa
inc
rclb
or
movsl
ror
xor
mov
test
or
nop
mov
sbb
sbb
mov
cltd
pop
ljmp
ret
jns
scas
mov
sbb
adc
cmp
int3
mov
inc
push
inc
mov
push
pop
rcl
mov
pop
aad
imul
and
outsb
popa
xor
ss
lret
cmp
js
ud1
mov
std
inc
dec
xor
mov
cld
movsl
or
xor
push
loope
cmp
dec
adc
lds
scas
inc
xchg
mov
mov
in
sub
cli
push
loope
mov
ss
push
push
and
andb
jno
cmp
adc
mov
lcall
gs
shlb
inc
sbb
dec
cmpsl
outsl
in
hlt
and
sub
stos
scas
sbb
push
outsl
xchg
pop
xabort
pop
jmp
enter
sbb
repnz
add
nop
mov
add
and
jae
lock
inc
jnp
arpl
repz
jno
decb
xchg
sbb
push
pop
sub
out
iret
add
fwait
fs
repz
pop
cltd
jmp
push
scas
cmp
in
and
sub
clc
and
cmp
cs
outsl
test
push
loop
fimuls
mov
mov
sbb
and
mov
mov
or
lds
mov
nop
ret
push
addb
push
adc
daa
loopne
jb
xor
hlt
mull
mov
pop
fdivrl
jmp
loope
lea
inc
jp
pop
ds
dec
rcrb
test
rcrb
lret
cs
adc
cli
jae
or
sar
sub
arpl
and
add
sub
jnp
pusha
push
jne
sub
dec
and
mov
lods
ret
xchg
add
mov
imul
orb
bound
xchg
rcl
mov
push
push
lods
cmc
fsubl
ret
jbe
leave
xor
dec
push
mov
jo
mulb
lods
test
pop
push
inc
pushf
jae
jns
pop
and
shll
pop
pop
add
insl
std
popa
jo
sbb
insb
rorb
rorl
mov
dec
cwtl
in
lcall
jp
pop
mov
push
sub
fimull
xor
fbld
ds
subl
push
mov
lret
inc
icebp
lahf
mov
pop
stos
data16
cmp
orl
outsb
repz
jg
push
xorl
or
ljmp
pop
out
dec
xor
pusha
stos
jle
stc
xchg
mov
inc
mov
sti
aas
lods
mov
push
iret
dec
imul
ret
inc
inc
pop
adc
mov
jge
xor
mov
xorl
popa
popa
ds
xorb
mov
jmp
inc
sub
sbb
sbb
mov
mulb
aam
xor
xchg
cmpl
mov
scas
incb
imul
xchg
ret
jb
add
repnz
mov
cmp
and
insb
lea
xchg
adc
mov
xchg
sbb
adc
enter
xchg
shlb
mov
cwtl
mov
mov
mov
std
mov
pop
icebp
inc
ja
mov
jg
sub
dec
cwtl
fnsave
shl
lahf
jp
pop
incb
mov
fcmovb
push
out
lret
into
je
sbb
xor
add
in
gs
iret
push
pop
fsts
xchg
sbb
dec
mov
stc
fdivrp
inc
sub
pop
scas
mov
jle
pusha
mov
imul
cmpsb
push
rorl
dec
mov
fisubrs
out
add
add
icebp
daa
sbb
jmp
test
push
mov
lods
and
sbb
pushl
sbb
cmc
icebp
loop
jp
test
outsl
icebp
sub
xor
inc
pop
push
stos
shl
xor
inc
lods
xchg
mov
outsb
mov
xchg
sub
repnz
sub
inc
sbb
sub
fstp
xchg
xlat
je
bound
addl
divb
mov
ljmp
cld
mov
mov
lcall
pop
arpl
mov
fisttpll
push
lock
test
xor
pop
lock
loope
leave
jmp
mov
adc
mov
ficomps
das
cmp
xor
sbb
movb
jmp
enter
pop
outsl
mov
xor
pop
out
mov
and
in
ret
les
bound
popf
stos
insb
into
jno
mov
jbe
fwait
fwait
jo
xchg
xor
test
push
or
in
aaa
sarl
repz
iret
ss
or
xchg
mov
in
out
movsb
sbb
mov
sbb
test
in
aad
adc
push
lea
out
movsb
sbb
testb
out
mov
int3
jbe
push
lcall
push
div
inc
sbb
movsl
cmp
adc
scas
cmp
mov
aad
scas
pop
inc
mov
shlb
test
lret
xchg
cs
je
cmc
fdiv
das
shlb
les
lahf
iret
mov
xchg
ljmp
dec
dec
stos
sbb
inc
in
jge
push
pop
sbb
and
xor
push
push
subl
test
rol
movsb
inc
ljmp
js
sbb
es
adc
inc
or
ja,pn
add
jo
mov
sbb
fiadds
jo
push
xorl
dec
test
rorb
dec
fwait
add
popf
mov
loop
data16
inc
or
mov
add
add
hlt
inc
sbbb
xchg
ffreep
gs
lods
adc
jge
loope
push
mov
and
les
fwait
sub
movsb
aad
xchg
pop
lea
mov
mov
out
stos
jp
mov
cwtl
mov
movsb
lret
sbb
loopne
or
hlt
mov
mov
aas
cld
repnz
jo
fidivrl
test
ljmp
sub
sub
inc
mov
in
out
adc
jne
lock
cltd
pop
push
int
inc
adc
aam
cmpsl
cltd
jnp
xchg
adc
adc
pop
std
and
jmp
in
daa
jecxz
sub
outsl
xor
jno
dec
jl
mov
inc
mov
xchg
int3
sub
jmp
pusha
push
in
push
adc
subb
pop
add
lock
imul
imul
imul
lret
inc
cmc
ret
scas
sub
jle
xlat
dec
loop
divl
and
jl
idiv
xchg
add
pop
cld
sub
test
repz
xchg
gs
lret
ret
adc
sbb
jb
xchg
sbb
mov
cmc
lahf
xchg
outsw
outsb
cld
xabort
inc
ficompl
xchg
fld
mov
inc
cmp
xor
push
imul
pop
inc
adc
xor
lcall
xlat
ret
incl
setb
mov
aad
adc
in
sti
test
sub
lcall
and
adc
jo
push
jg
pop
cld
push
inc
lds
and
cwtl
mov
jno
sub
shlb
adc
inc
cli
sahf
je
iret
jno
or
add
mov
push
jo
cmpsb
int3
jp
add
addr16
movsb
sub
popa
movsl
cmp
mov
cmpb
lahf
adc
test
loope
pop
sbb
mov
push
push
out
xor
hlt
test
mov
popa
jae
in
xor
mov
mov
pop
sbb
inc
pop
sub
push
out
js
xorb
push
xor
dec
data16
mov
int3
lods
jge
mov
and
dec
lret
insb
cmp
dec
sub
in
shll
sbb
jg
cmc
fiadds
dec
xchg
dec
or
or
arpl
repz
adc
imul
fsubrs
rorl
mov
es
repnz
pop
iret
fadds
int
aas
or
sub
and
mov
jmp
xchg
push
sbb
jl
jp
mov
andl
dec
adc
andl
pop
and
mov
and
cmpsl
mov
cs
mov
sbb
in
lock
es
sub
or
stos
or
adc
outsl
dec
push
aam
mov
mov
cmc
pop
sbb
into
repnz
jo
scas
cld
mov
xor
fnstsw
and
int
fildll
pop
lds
mov
and
sbb
cld
jg
mov
enter
les
sti
testb
jmp
jo
pop
int3
es
in
rolb
cltd
xor
jb
mov
in
xor
outsb
xor
inc
pop
push
mov
jbe
mov
inc
mov
adc
xchg
or
or
jmp
or
cwtl
xchg
jmp
sub
and
sbb
out
push
cmpsl
pop
les
push
adc
in
mov
inc
dec
pop
mov
pop
cmp
test
jl
loope
daa
insl
lods
clc
xchg
je
in
out
push
mov
dec
xor
mov
loope
fisubs
mov
inc
cmp
sub
inc
je
adc
push
sub
pop
fnsave
notb
popa
out
mov
push
pop
lahf
jns
aas
inc
enter
mov
push
sti
loopne
popf
pushf
pop
hlt
mov
nop
lea
insb
clc
std
lret
jl
xor
mov
jg
push
lods
inc
ss
pop
popf
out
sarb
rolb
mov
repz
fcom
mov
repz
mov
lret
stos
cmp
lcall
push
mov
and
or
shll
cltd
xor
inc
cmp
arpl
aad
mov
mov
in
xchg
pusha
jne
cmp
bound
xor
sub
mov
push
push
out
dec
shr
mov
out
jg
xchg
mov
mov
mov
xlat
xchg
shrl
lock
add
dec
sti
cmc
imul
jl
xor
mov
out
jp
inc
out
inc
jns
jle
and
fdiv
add
in
jle
cmp
or
mov
push
nop
mov
ret
xor
cli
mov
dec
inc
out
loop
and
and
cltd
xchg
dec
fisubrl
or
loope
loope
mov
sub
and
push
add
push
repnz
sub
push
inc
push
push
data16
push
add
or
shll
fst
fmuls
insb
add
xchg
xchg
push
adc
arpl
dec
sti
adc
pusha
mov
inc
mov
dec
stos
nop
ud2
cli
cltd
stos
repz
pusha
stc
or
int
xor
add
aad
divb
inc
xchg
subb
push
loopne
into
xchg
cltd
ljmp
aas
fs
pop
jle
add
out
inc
pop
push
push
add
repnz
xorl
cmp
mull
push
inc
jmp
fisubs
mov
and
insb
mov
fcoms
sbb
xchg
pushf
les
mov
xor
arpl
mov
jl
pushf
ljmp
jno
adc
das
js
push
gs
mov
push
rorb
ds
mov
mov
fiadds
xchg
stos
fisubs
cmc
add
cmc
inc
jo
fadds
dec
lret
pushf
push
scas
cld
jnp
or
push
outsl
jne
notb
add
sub
ja
dec
cs
jae
lods
mov
gs
daa
add
push
fstp
aad
cmp
addb
and
ja
in
xor
mov
int3
bound
add
fiadds
and
pop
inc
push
mov
add
scas
cltd
inc
mov
in
test
jb
xchg
xchg
stc
movsb
iret
iret
and
cwtl
xchg
sti
imul
push
insl
icebp
mov
loop
orb
arpl
cld
xchg
and
push
dec
hlt
pop
mov
dec
pop
scas
cmc
add
jne
pop
lret
outsl
adc
out
imulb
xlat
push
cmp
pushf
inc
xchg
rolb
add
icebp
mov
push
sub
adc
fmull
into
icebp
fdivl
ss
sbb
lods
and
lret
lcall
mov
lds
loopne
and
adc
call
pop
push
fs
jecxz
rcrb
rolb
lea
mov
or
outsl
incl
test
js
scas
add
push
jmp
int
scas
or
loopne
push
or
mov
xchg
in
nop
jg
pop
or
mov
or
mull
or
mov
dec
repz
cmpsb
push
pop
mov
call
cs
add
movsb
cwtl
push
sub
lds
into
in
xor
push
jmp
loop
testb
iret
int3
fidivs
dec
xor
stc
add
push
xor
addr16
leave
daa
pop
sbb
add
int
shll
inc
inc
loop
mov
jecxz
sub
cmp
repnz
cli
out
sahf
or
or
xchg
out
lock
and
lret
pop
je
mov
jge
fadd
mov
push
adc
inc
out
jp
fcmovnbe
clc
or
push
sub
mov
imul
das
sbb
adc
mov
mov
ficoml
sbb
pop
add
loope
mov
test
sub
lds
inc
adc
fcom
pop
inc
fstps
inc
mov
test
jle
in
or
xor
iret
and
sbb
or
inc
xchg
push
notl
outsb
push
mov
shll
fwait
dec
cmpsb
pop
pop
dec
sbb
mov
dec
repnz
mov
push
ljmp
fcmovne
xchg
push
adc
rorb
testb
and
jle
ret
xlat
in
jg
push
lcall
xlat
dec
fildll
mov
pop
scas
loopne
jno
or
sarb
jbe
pop
fstps
mov
shrl
xchg
dec
lods
movb
dec
mov
out
jle
ftst
repnz
xchg
inc
pushf
xchg
jns
add
pop
mov
scas
lock
iret
xchg
jne
inc
inc
pusha
jge
pop
adc
daa
lock
adc
xchg
outsb
adc
movsl
fldl
cmpsl
jge
mov
test
xchg
pop
aad
ds
or
rclb
mov
and
jb
pop
jmp
bswap
adc
or
adc
repnz
adc
xorl
loope
lock
inc
shrl
dec
mov
xlat
push
inc
aas
pop
leave
add
sub
mov
das
xor
test
mov
outsl
push
mov
pop
daa
jmp
and
mov
push
pop
test
mov
push
sub
sbb
gs
xor
loope
mov
shlb
int3
loope
pop
mov
xchg
push
cltd
mov
dec
push
push
jnp
push
sub
mov
jbe
hlt
aad
mov
cmpsb
dec
sub
and
jp
add
rclb
lcall
inc
mov
push
and
push
addr16
scas
sbb
adc
cs
shll
in
cli
rorl
xor
in
sbb
inc
mov
adc
nop
jne
shl
outsl
dec
aas
cmp
cmp
dec
inc
pop
in
loope
inc
mov
inc
out
aad
sub
pop
mov
cmpsl
aaa
jne
xchg
dec
mov
sub
dec
push
aaa
pop
cmpsb
add
or
rclb
push
xchg
xchg
aas
in
sbb
fsubl
mov
pop
arpl
je
or
xor
mov
icebp
add
imul
stc
xchg
inc
fs
mov
das
test
cltd
inc
lods
xchg
add
cltd
pop
xchg
mov
or
popf
hlt
mov
mov
dec
or
mov
cs
push
shrl
mov
clc
sbb
mov
popa
xchg
pop
je
es
cwtl
jl
fisttpll
out
pop
mov
in
xchg
movsl
js
pop
xchg
ret
add
adc
pop
shlb
popa
xchg
jnp
sub
shrb
stos
jne
jmp
cs
add
dec
jmp
test
mov
jne
ds
lret
fisubrs
mov
pop
pop
add
imul
scas
pop
cmpb
dec
in
mov
inc
push
adc
outsb
push
push
outsl
aam
ja
in
adc
js
inc
pop
cltd
int
adc
iret
subb
xor
cld
push
call
xchg
cmpsl
pop
fsubrs
jecxz
adc
dec
test
pushf
cmp
sbb
mov
or
sbb
mov
shr
pop
int
mov
int
mov
mov
add
and
xchg
fwait
add
jns
inc
xlat
xchg
xor
pop
mov
mov
into
add
cmp
adc
lret
out
fwait
daa
pop
dec
out
and
leave
cwtl
jbe
jb
outsb
adc
cmp
outsb
ja
pop
push
adc
jno
or
inc
inc
das
dec
lea
cmp
loopne
push
leave
call
je
sbb
inc
cmpsl
js
lods
outsl
inc
or
sub
into
xchg
dec
out
push
nop
loop
adc
mov
add
in
xchg
lret
xor
stos
ret
xor
dec
dec
jns
pop
adc
loope
ja
mov
mov
loope
cmc
push
inc
rcrb
jl
cmp
popf
jae
adc
cmc
int3
cmp
clc
cli
dec
aaa
inc
push
xorl
sbb
xor
std
or
mov
sbb
and
mov
in
inc
jb
test
movsl
in
or
loop
sti
push
jge
cmp
jb
aam
mov
pop
ret
testb
in
fs
sub
test
insb
scas
xchg
ret
mov
or
test
add
pop
das
rclb
dec
into
repz
shrb
push
pushf
and
ret
scas
xchg
mov
xor
testb
sub
js
push
xor
mov
fistl
or
xchg
push
mov
push
pop
leave
lods
dec
out
popf
lret
and
fcmovnb
push
sub
or
js
mov
scas
push
sub
fnstcw
js
cmpsl
pop
add
lock
push
rorb
dec
sub
mov
add
push
or
out
add
jne
mov
jge
add
jmp
ljmp
mulb
lods
mov
sti
scas
ret
pop
bound
push
hlt
inc
outsl
dec
cmp
jecxz
rorb
insl
ret
adc
inc
addb
and
jbe
ds
jno
and
push
mov
pusha
push
ss
mov
inc
lcall
divb
popf
xchg
sub
cmp
fwait
mov
insb
or
test
imul
insb
xlat
testb
arpl
or
lods
jg
aad
dec
mov
push
jmp
xor
movsl
cmc
shr
mov
inc
lds
jle
jae
stc
les
aam
sbb
in
dec
mov
mov
cmp
push
or
hlt
mov
daa
mov
add
pop
jg
cmp
or
add
sbb
lret
push
int
mov
out
rcrl
dec
mov
loopnew
stos
rcll
adc
dec
in
insb
jne
int
jae
and
es
pop
xchg
rep
xchg
orl
test
xlat
out
and
icebp
in
fistl
cmp
and
fldt
cmp
and
into
jns
adc
fcoms
out
adc
and
shll
xor
mov
sysenter
loope
fwait
sub
cmp
loopne
add
repnz
inc
fsubs
mov
roll
negl
inc
fisubrl
dec
fbld
shll
push
or
fs
dec
jp
mulps
aad
daa
xor
adc
sbb
add
in
mov
cmovbe
aad
icebp
les
sahf
sub
add
fcmovnb
fists
xchg
mov
pop
iret
ds
xchg
dec
lret
insb
pop
pushf
mov
ds
jns
lahf
jbe
sbb
arpl
xorb
cmp
mov
test
add
gs
or
ss
es
lock
xor
sti
test
add
popa
scas
adc
cwtl
or
mov
movsb
sub
or
or
and
leave
sbb
sub
arpl
pop
out
add
sub
add
xchg
sarb
js
jmp
ds
and
push
pop
push
sbb
rcrl
shll
ds
lock
xchg
push
push
scas
cltd
je
sbb
xor
stc
sub
out
xor
mov
cmp
mov
adc
test
adc
xchg
add
loope
fs
pop
data16
jae
xor
dec
mov
shll
loop
cmp
fcoms
inc
add
js
in
adc
jl
adc
mov
ret
jecxz
push
mov
adc
add
cld
call
inc
jle
rcrl
mov
push
adc
dec
aas
dec
daa
std
push
xchg
inc
and
pop
cmc
in
and
and
or
xor
scas
jecxz
xor
les
pop
adc
sbb
fs
rcll
mov
fmulp
pop
leave
insl
ljmp
stos
xchg
jo
shrl
ror
xchg
pushf
cmp
push
pop
lcall
jo
mull
sbb
aam
jo
lods
ljmp
add
push
jnp
fwait
cvttps2pi
adc
pcmpgtb
stc
lret
in
jg
push
jle
sarl
lret
inc
inc
push
scas
cld
jns
dec
iret
xchg
cmp
push
scas
out
ljmp
jle
stc
mov
inc
sbb
xchg
jle
shll
push
outsl
adc
les
or
scas
cltd
xchg
mov
jmp
inc
sbb
rcr
xor
stos
cmp
xchg
mov
pop
sbb
mov
and
cltd
jno
sbb
sub
fld
in
adc
sub
mov
jns
mov
xor
sub
popa
xchg
scas
movsb
xor
inc
mov
mov
leave
jp
cmp
add
lods
or
adc
mov
arpl
xor
test
and
adc
push
test
sar
movsb
jae
sub
pop
push
aas
xor
loopne
jp
and
cmpsl
sub
aad
out
mov
out
cmp
iret
repz
cli
aam
jmp
dec
fstl
and
andb
enter
hlt
icebp
loop
inc
dec
mov
das
fcompl
jno
mov
push
dec
fs
or
cmc
and
xor
fcoml
fstps
lcall
daa
adc
out
test
adc
mov
jb
sbbb
fwait
pop
jae
sbbb
loopne
fdivl
add
imul
fdivrp
fcompl
mov
testb
mov
fldl
push
xor
nop
out
add
or
adc
lahf
cmp
nop
lods
ficomps
inc
test
stos
pop
adcb
pusha
jle
xorb
out
adc
inc
shlb
fistps
pop
adc
mov
icebp
gs
repnz
jecxz
or
ljmp
je
daa
shlb
pop
xor
mov
adc
jo
jns
sbb
mov
test
addr16
jae
mov
dec
inc
pop
lds
lods
lock
repnz
add
xchg
ljmp
sbb
ret
pop
inc
in
adc
outsb
lret
jg
pop
inc
pop
ret
sub
std
mov
fdivrp
pushf
mov
jb
pop
jle
xchg
loope
cltd
push
inc
dec
pop
out
arpl
fildl
or
add
mov
cli
ja
shll
sub
fadd
xchg
jne
add
shl
loop
or
lods
scas
mov
jg
es
loopne
dec
mov
push
in
mov
adc
sub
lret
shr
scas
lods
add
xchg
shll
clc
cmpsl
pop
in
dec
cmp
es
cmpsb
stc
jbe
imul
and
lahf
shr
cwtl
int3
scas
testl
ret
and
cmp
mov
aas
aad
fsubs
xchg
sbb
inc
mov
rolb
push
lods
and
adc
mov
ja
scas
xor
jge
nop
popa
xchg
xor
cs
aas
sarb
pop
inc
sub
movsb
popf
adc
push
xor
std
aaa
leave
lahf
adc
cmp
mov
xchg
dec
cltd
leave
jno
out
and
fdiv
sub
lds
inc
jmp
icebp
mov
cmpsl
inc
jo
aaa
push
popl
or
xchg
cmc
and
pop
push
sbb
leave
out
je
dec
stos
pop
dec
lods
cmpsb
loop
addl
dec
sub
xor
pushf
in
xchg
adc
mov
inc
stos
loop
cmpsb
int3
stc
mov
dec
mov
stos
mov
mov
and
loop
cmp
lea
adc
push
jp
call
iret
mov
fdivrs
out
je
cmp
call
push
mov
in
jecxz
xchg
sahf
inc
cwtl
jle
das
cwtl
mov
mov
sbb
movsb
in
mov
pop
push
jae
mov
mov
adc
cltd
xor
add
test
push
pop
pop
sbbb
jne
addr16
das
mov
or
pop
imul
jnp
push
dec
push
subl
jp
cmp
movsl
jecxz
iret
mov
sbb
and
mov
pop
sub
sub
aaa
call
add
lds
rol
repnz
into
pop
jbe
jecxz
cmp
lret
mov
fldt
aam
pop
lock
enter
data16
sahf
mov
xor
aas
decl
jl
loopne
cmp
js
aam
dec
std
loopne
push
out
inc
dec
adc
rcrl
sub
ror
push
mov
adc
and
pop
enter
pushf
add
xchg
rorb
add
adc
aam
or
jo
and
and
mov
mov
sub
movsb
lds
sbb
adc
inc
mov
movsb
bound
dec
add
sbbl
stos
xor
mov
stc
shll
jb
cltd
jns
adc
push
mov
out
hlt
xchg
popa
mov
adc
xor
jle
rol
mov
test
sbb
dec
sub
ds
jl
add
adc
or
pusha
es
push
push
inc
pop
fildll
icebp
xor
sub
xchg
mov
jecxz
clc
movsb
out
sub
pop
pop
arpl
and
movsb
lret
aas
jle
std
mov
jmp
and
leave
mov
push
cmpsb
and
push
mov
and
dec
add
mov
xchg
mov
stos
adc
fstps
lods
adc
mov
add
xchg
mov
ljmp
scas
les
cmpsl
pop
and
dec
mov
push
cmp
lret
cmp
orl
mov
mov
adc
pop
and
call
xor
inc
and
cmp
lret
xor
mov
sub
jmp
inc
pop
ret
push
mov
push
cmp
and
lods
mov
xor
sub
and
inc
aas
adc
or
repz
sbb
rep
push
jae
jp
add
sbb
mov
jmp
pop
mov
xchg
ret
fidivl
pop
jge
xor
mov
repnz
aaa
loopne
xchg
pop
pop
sbb
jecxz
mov
pop
add
jle
inc
mov
mov
repz
es
cli
repnz
jns
pop
rolb
out
cmc
xor
jl
xchg
jb
mov
add
cmp
jae
testb
cmp
xor
pop
ljmp
jg
xchg
mov
scas
imul
cmp
test
add
faddl
mov
cmc
shlb
shl
push
addr16
or
sbb
xorl
loopne
and
fisubrs
mov
pop
sbb
adc
insb
cld
outsl
jg
add
push
aas
cmp
pop
mov
jbe
pop
push
sbb
fstpt
xor
test
pop
sbb
ret
adc
and
mov
sbb
push
das
sub
xchg
aas
mov
popa
shll
lret
sub
aaa
es
and
int3
out
aad
out
lods
je
lret
dec
pusha
lret
mov
stos
ret
dec
mulb
sub
jmp
std
adc
mov
les
arpl
lret
adc
mov
xchg
xchg
sahf
dec
das
add
xor
negb
dec
lds
fwait
or
pop
nop
push
mov
sbb
fcom
jne
push
push
mov
lret
pop
inc
adc
cld
lret
add
shld
mov
lret
in
out
lret
add
pop
in
mov
lods
clc
xchg
pop
das
sub
sti
mov
fstpt
adc
cmpsb
in
sbb
lret
or
lcall
pushf
add
inc
pushf
inc
fcmovnu
add
das
andl
pushf
xchg
pop
cmp
scas
call
popf
andb
rclb
jno
dec
aam
daa
or
xor
out
je
ljmp
jb
cmp
ljmp
cmp
adc
mov
add
data16
xchg
xlat
cmp
inc
fcomp
ljmp
imul
cwtd
scas
adc
sub
mov
xchg
mov
out
sub
ret
das
repz
fldcw
popf
adc
in
cmp
ret
sbb
xchg
aad
cs
arpl
or
push
adc
std
unpcklps
in
daa
arpl
insb
mov
loope
jge
sub
sbb
jp
pop
icebp
shr
ficompl
mov
ljmp
fs
adcl
into
out
adc
out
movsl
mov
out
xor
in
mov
push
sub
icebp
adc
mov
cli
sarl
sbb
stos
or
call
std
imul
arpl
ret
jp
xchg
mov
add
sbb
rcrb
jae
lock
les
inc
das
sub
inc
in
dec
cli
in
lods
inc
or
inc
loopne
inc
jae
inc
mov
jecxz
int3
in
jl
and
push
mov
ret
fstl
jnp
icebp
movsl
cli
movsb
fbld
mov
cs
insb
inc
popa
popf
std
jecxz
add
ss
adc
in
push
cmp
into
cmp
popa
xchg
sbb
fstps
fcmove
xchg
lret
fnstcw
and
sub
or
pop
jp
mov
push
es
xchg
xor
push
mov
ret
test
mov
icebp
mov
imul
ljmp
push
push
ror
mov
dec
aad
mov
push
add
test
and
sbb
leave
ds
or
xor
cli
gs
aas
fcmovnbe
dec
outsl
and
gs
mov
cltd
or
fisubl
sub
in
push
orl
aaa
xchg
insl
mov
out
inc
out
jbe
jno
mov
ret
cmp
xchg
xchg
popl
or
and
cmp
xlat
fwait
sbb
or
cmp
das
adc
cs
dec
jb
les
pop
mov
sub
sbb
push
ret
fldl
mov
or
rcll
pop
stos
mov
shr
jno
bound
dec
test
testl
out
loope
mov
in
xchg
mov
xchg
std
mov
test
xor
jo
pop
clc
pop
movsl
lods
sahf
mov
cli
xchg
push
sbbl
mov
pop
pop
or
imul
cli
test
adc
add
in
cmp
adc
add
and
push
pop
roll
mov
push
xchg
shlb
inc
inc
adc
pop
cmp
int3
mov
xor
popf
adc
addl
movsb
and
aam
push
push
ffree
fcompl
jae
cmp
adc
mov
and
mov
push
jp
and
xchg
mov
fsubrl
dec
shl
sub
inc
lcall
loopne
mov
sub
inc
and
fiaddl
or
orl
loopne
xchg
stos
jmp
push
mov
aaa
mov
mov
cmp
inc
dec
aaa
mov
mov
cmp
fs
push
xchg
dec
cmp
leave
mov
pop
add
and
stc
sbb
pop
idivl
pushf
add
mov
mov
jb
mov
lahf
aam
in
jbe
xchg
jo
pop
ljmp
xor
xor
mov
adc
test
push
push
xchg
adc
dec
mov
cmp
ljmp
test
push
inc
adc
stos
sub
neg
ficoml
out
pushf
xor
stos
pop
loope
xor
fimuls
iret
jae
lds
jbe
pop
add
jecxz
pop
add
xchg
rcrb
ret
or
and
add
lods
mov
sub
push
outsl
clc
call
adc
adc
or
mov
xchg
add
fldl
jg
rcrb
and
pop
in
or
pop
sub
aam
loop
out
mov
int
out
sub
mov
xorb
xor
xor
lds
scas
mov
sbb
or
jns
test
bsf
inc
imul
adcl
xlat
sbb
jl
fs
jmp
and
repnz
addr16
adc
sbb
sub
push
cltd
inc
neg
insb
lcall
or
jnp
push
or
mov
pop
sbbl
data16
movsl
xchg
mov
mov
and
dec
fldl
jmp
or
das
pop
cltd
xor
mov
idivb
cmpsb
loopne
push
pop
leave
iret
push
call
fmuls
test
mov
or
xchg
inc
rcl
pop
adc
andb
xor
or
mov
mov
push
shll
and
and
shlb
jno
push
add
hlt
mov
out
push
outsb
in
inc
sbb
push
dec
cmp
aaa
dec
xchg
cmovs
adc
fidivrl
fwait
jmp
push
jmp
adc
ficompl
sub
cmc
fdivrs
pop
pusha
ret
popf
fisttpll
sub
xlat
divb
cmpsb
and
lret
jnp
xchg
xor
mov
inc
and
mov
cmc
add
xor
mov
test
mov
push
imul
jbe
stc
and
scas
push
jne
test
jle
test
ja
cmp
xchg
popf
jg
or
clc
adc
std
into
adc
dec
aaa
push
sbb
push
sbb
push
movsb
scas
push
cmp
jl
mov
out
ds
mov
negb
test
mov
pop
movsb
faddl
mov
mov
jns
ds
mov
push
fldcw
or
mov
inc
inc
repz
stos
jo
mov
or
test
sbb
sbb
mov
imul
sbb
or
push
xor
lcall
test
push
mov
adc
fisubl
inc
sbb
js
jne
icebp
adcl
jae
insb
push
or
mov
clc
cli
lret
ret
fs
xor
data16
outsl
push
jge
inc
icebp
adc
pop
pushf
sbb
pusha
int
fistpl
dec
mov
mov
test
repnz
pop
mov
mov
xor
cmpsl
mov
rol
loope
loope
and
call
add
je
or
shll
pop
push
jl
mov
lods
outsb
xchg
lock
jbe
mov
mov
push
pop
outsl
mov
iret
out
scas
test
rorb
mov
mov
add
repz
shll
xor
repz
icebp
ret
cwtl
xchg
pop
je
jnp
inc
push
dec
jge
add
lods
mov
jmp
push
jg
aaa
xlat
call
mov
sbb
rcll
mov
pop
cmp
inc
fs
addr16
ret
mov
add
cmp
lods
sahf
stos
arpl
cli
lea
dec
or
outsb
cmp
into
in
cltd
jne
fs
js
sti
rorl
fbld
jb
std
in
ficoml
mov
fisubs
scas
cmp
ficoms
in
mov
mov
subl
jecxz
xchg
lods
push
in
jne
or
loopne
out
pop
les
inc
add
or
sti
xor
mov
insl
jo
and
out
sub
and
jbe
scas
push
lds
cmpsb
test
sub
xor
loope
sti
xchg
mov
in
cs
movsb
pop
push
pop
pushf
clc
movsb
sub
adc
insl
aad
int3
and
cmp
sbb
xor
xor
loopne
inc
pop
dec
cmpsb
pushf
in
adc
mov
cltd
addr16
mov
mov
cmp
aas
ret
aam
scas
cltd
cld
and
fs
cwtl
shll
aam
dec
add
mov
cmp
mov
lds
mov
or
lds
fidivl
lahf
xor
xor
fistpl
pop
pop
ja
movsl
fsubl
insb
call
sbb
imul
imul
ja
sub
inc
das
leave
jns
or
mov
lock
jb
dec
loope
arpl
push
mov
mov
je
add
mov
jge
push
jmp
int
out
adc
xor
jmp
dec
add
cmpsb
fisubrs
xor
fstps
cmpsl
xor
and
mov
cs
lods
es
ret
test
push
jle
addr16
or
sahf
sbb
addl
ret
fbld
lea
cmp
das
test
or
icebp
ds
xchg
and
das
addr16
dec
mov
std
cmp
arpl
dec
inc
sti
push
lds
arpl
push
clc
xchg
xor
xchg
imul
and
cmp
insb
fwait
xchg
mov
mov
pop
stos
cmpl
or
and
fdivrp
xorb
mov
enter
loop
mov
lock
dec
imul
ja
pop
fyl2x
outsl
pushf
outsl
int3
push
xchg
inc
mov
mov
jl
lock
mov
out
outsb
mov
icebp
sbb
mov
cltd
lods
outsl
cltd
ljmp
mov
jle,pn
fbstp
xor
jne
jp
push
gs
jb
or
xchg
stc
in
cmpsl
insl
lcall
lret
pop
mov
mov
dec
aaa
mov
shrb
nop
sub
jge
adc
fcoml
or
mov
cmpsl
jno
push
cmc
mov
les
push
push
mov
pop
hlt
dec
inc
cmpsb
cld
jno
subl
out
adcb
fwait
mov
sbb
inc
push
in
mov
roll
ret
adc
repnz
sub
aaa
cmpsl
scas
movsb
je
xor
xchg
pop
das
xlat
stos
fisttpl
stc
and
call
js
adc
test
mov
xor
sbb
jg
jp
xor
xchg
xchg
repnz
pop
kmovb
repz
shrl
rorb
xor
adc
aaa
int3
cld
push
cmpsb
cvtdq2ps
and
fstl
and
sbb
jnp
idiv
mov
aas
lods
adc
cmp
fdivr
add
into
inc
and
ljmp
cmc
dec
addr16
inc
cmp
xchg
sbb
cltd
pusha
add
lret
test
jp
inc
dec
in
das
push
ret
cmp
pusha
sbb
xchg
popa
xchg
inc
fwait
rcl
or
sbb
mov
frstor
enter
test
dec
data16
sbb
sbb
fs
xchg
fdecstp
sbb
aam
dec
sub
push
call
xor
sub
clc
sarl
test
das
scas
mov
aam
mov
jbe
xchg
cld
jno
fldl
js
mov
data16
mov
dec
shrd
pop
sub
bound
mov
ja
sbb
popa
push
mov
leave
movsl
sbb
sbbl
mov
aad
ja
ds
or
and
cmp
je
es
xchg
pop
xchg
shrl
popf
sub
mov
sub
pop
daa
jo
std
xor
testl
es
jmp
adc
xchg
or
out
pop
sbb
adc
je
bound
sbb
lods
call
xor
nop
scas
mov
outsb
aaa
not
jp
cmp
mov
push
pop
or
imul
pop
inc
lods
mov
insl
icebp
cmp
push
xorl
lods
pop
out
shrl
in
sbb
scas
scas
xchg
dec
cwtl
xorb
sbb
mov
adc
sub
arpl
jecxz
cmp
xchg
es
cmp
stc
push
lret
decl
rcrb
mov
sub
inc
or
sahf
pop
mov
dec
addb
xchg
xchg
or
gs
filds
fwait
cwtl
fucomp
clc
je
dec
pusha
mov
dec
test
pop
jno
nop
pop
andb
in
pop
jnp
mov
daa
xor
add
xor
adc
std
push
dec
fcoml
inc
iret
cmp
inc
aaa
dec
in
je
cmp
hlt
cmp
push
cmp
ljmp
xor
rol
mov
shrl
mov
ds
fs
sub
jge
push
popf
nop
andb
xchg
add
dec
filds
dec
jnp
lret
scas
mov
mov
jne
jae
xor
cmpsb
into
mov
xchg
add
sbb
cmp
and
jecxz
xor
testb
inc
adc
cmc
adc
inc
push
mov
ds
dec
and
in
xor
std
lahf
adc
sarl
dec
dec
jg
and
clc
movsl
pop
fisttpll
add
jmp
fidivl
adc
xor
xor
push
mov
outsl
xor
test
in
divb
jg
push
mov
pusha
pop
clc
popa
lds
push
and
movsb
pop
cltd
mov
addr16
imul
lds
or
in
out
ds
sbb
call
inc
push
inc
mov
mov
out
fcomps
scas
sub
enter
or
sbb
inc
fildll
jno
scas
xor
cs
pop
setp
pop
push
orl
xor
xchg
cmp
mov
push
mov
dec
mov
cmp
adc
or
xchg
sbb
scas
cmp
jae
cld
cmp
sar
rolb
call
cmc
pop
scas
and
cmp
sbb
sbb
add
mov
push
scas
cmpsl
fmull
in
out
lock
dec
cltd
push
decl
cltd
adc
dec
clc
cmp
dec
lods
inc
cli
push
cmp
aas
jbe
in
sub
sbb
jb
pushf
adc
cltd
xorl
lea
sbb
pop
inc
nop
leave
lds
mov
scas
add
jecxz
push
inc
push
mov
jl
in
pusha
sbb
mov
mov
xchg
push
in
repz
pop
mov
outsb
xor
dec
fisubs
mov
leave
xor
push
pop
rol
sbb
mov
mov
and
roll
pop
pop
add
outsl
jne
push
mov
push
mov
lahf
testl
aas
or
sahf
fnstcw
lahf
pop
dec
scas
loope
inc
gs
jmp
jmp
gs
push
loope
dec
adc
dec
cmp
aaa
mov
xor
sbb
fdiv
lcall
shll
cmp
bound
loope
loop
sub
jo
pop
bound
fiaddl
lods
je
lock
add
std
sub
dec
scas
stos
xchg
xor
jge
pop
bound
out
pop
sbb
imul
movsl
in
movsl
sbb
dec
pushf
lock
add
add
out
cltd
stc
imul
aam
fwait
add
sbb
mov
adc
fsubp
cmpsb
dec
dec
aam
cmp
idiv
rol
sbb
out
cmp
cmpsl
arpl
push
sahf
popa
add
cld
dec
fiadds
inc
jmp
sub
mov
adcl
mov
add
xchg
xor
lahf
ljmp
and
ret
jg
sub
xor
inc
cmp
inc
pop
sub
mov
mov
push
xchg
push
and
ljmp
sub
add
imul
adc
add
movsb
movsl
push
out
cmp
adc
insb
mov
mov
sbb
mov
loope
repnz
repz
daa
loop
xchg
xchg
dec
mov
js
scas
mov
mov
popl
or
ja
bound
fs
push
inc
lods
sar
shlb
mov
xor
sti
lcall
xor
cli
outsb
and
mov
outsl
ljmp
push
cmp
nop
push
rcrb
add
icebp
cmp
and
and
or
push
lds
aas
inc
sub
push
rcrb
jae
add
in
js
inc
ss
jmp
aaa
jnp
push
aas
std
call
add
test
pop
in
repz
pop
out
movsl
stc
lods
and
or
xor
sub
popa
ljmp
xor
ljmp
flds
adc
xchg
fisttpll
and
xchg
sbb
sub
cmp
inc
xlat
ret
mov
leave
dec
jnp
and
xor
vhsubpd
push
sarb
mov
hlt
jne
mov
push
addb
lds
xlat
into
mov
and
push
dec
stos
dec
scas
mov
add
fistpll
mov
push
lret
mov
cmp
adc
jecxz
test
xor
aam
insl
cmp
sahf
stc
cmpl
push
bound
imulb
sub
adc
hlt
stos
int
orl
jge
fisubl
je
int3
xchg
fs
sahf
das
xchg
xor
or
cwtl
xor
test
fsubrl
pop
mov
ss
jp
scas
pop
aas
mov
movsl
jbe
xchg
inc
loope
mov
outsl
addr16
jmp
jge
inc
mov
inc
pop
mov
lcall
dec
std
add
lods
push
xchg
cmp
add
bound
stos
icebp
jle
jle
shrl
mov
mov
es
xchg
push
xlat
ret
xor
pop
out
jo
push
stos
xchg
mov
insb
negb
nop
scas
jo
test
pop
or
xchg
mov
rolb
mov
test
scas
mov
std
jmp
pop
push
call
out
movsl
loop
push
inc
jge
or
mov
add
outsb
xor
jp
ficoml
jnp
dec
loop
push
jbe
jbe
addb
popl
jp
xchg
pop
push
cld
jbe
ja
pop
mov
dec
push
jnp
out
add
mov
stc
cs
push
out
lret
arpl
shll
dec
xlat
and
push
xor
incl
pop
or
jl
in
and
mov
fimuls
arpl
cmp
cmpsl
sub
push
mov
std
pop
pop
jl
aam
int3
cmpsl
lods
mov
or
sahf
inc
dec
fcoms
nop
data16
xor
pusha
pop
jo
pop
and
ss
dec
jbe
pop
lock
jmp
xor
inc
mov
iret
dec
fstps
lahf
pop
jns
scas
add
data16
xor
jg
xchg
aad
into
nop
push
repz
fstpl
lcall
add
js
int
dec
mov
repnz
mov
dec
push
jns
dec
je
sar
fs
or
pop
and
pop
dec
inc
lret
mov
jbe
lea
clc
dec
mov
ja
push
aas
mov
sub
cmp
iret
outsb
mov
dec
ret
cmc
fildl
sub
aam
gs
add
cmp
cmp
and
xor
pop
sbbb
shrb
and
aam
in
sub
stos
out
scas
dec
push
and
jns
aam
setno
push
jmp
jbe
insb
scas
pop
shrl
movb
stos
insb
shr
mov
outsl
sbb
mov
and
pusha
xor
movsl
add
adc
call
in
out
iret
shrb
insb
adc
fisttpl
inc
mov
jle
push
adc
fsubp
je
scas
movsb
add
cmp
mov
stos
rolb
sub
rorl
int3
or
inc
jmp
iret
pop
ljmp
sub
pop
in
popf
aaa
lret
sbb
jbe
lret
pop
sbb
jecxz
aas
incl
std
sbb
dec
inc
pop
cmp
or
xor
ret
lret
lods
fadds
test
xchg
dec
lea
cld
jae
lods
cmp
ret
or
sbb
les
xor
cmp
push
jle
std
mov
mov
lock
dec
pop
popa
lcall
add
xchg
fsubs
lahf
xor
loop
cmp
dec
ss
mov
out
mov
mov
and
push
lock
jb
aam
int3
int3
xchg
into
adcl
cmp
fwait
xchg
mov
cmp
mov
pop
pushf
or
daa
cmp
jle
stos
movsl
incb
insb
sti
rep
push
mov
cltd
dec
jae
jbe
lcall
jp
xchg
mov
fdivrs
pop
xor
dec
std
stos
xchg
das
in
dec
mov
add
add
xchg
shr
dec
mov
fists
inc
jmp
cmp
add
jmp
ror
ret
arpl
scas
pop
inc
loope
repnz
sub
rolb
adc
xor
in
mov
mov
mov
idivl
push
cmp
push
push
pop
mov
and
adc
adc
nop
pushf
adc
cli
jecxz
pop
sub
js
or
inc
test
mov
inc
testl
add
sbb
adc
mov
and
lea
ficompl
push
data16
sbb
push
sbb
jl
dec
push
push
loopne
outsl
out
mov
sbb
iret
mov
jne
add
aad
jo
popf
shll
lock
add
das
inc
cwtl
inc
jo
pop
aam
scas
xchg
push
adc
inc
or
mov
fwait
inc
in
mov
inc
mov
sub
std
add
imull
in
lea
pop
xchg
jno
rorl
repz
mov
or
or
xchg
test
add
mov
xor
insl
loop
aam
dec
adc
leave
jmp
cld
out
jae
adc
inc
inc
stos
mov
cwtl
jg
pop
adc
aam
scas
lock
nop
stos
jl
aas
loopne
sub
les
movl
stos
xchg
sbb
nop
rcll
ja
cli
pop
nop
push
cltd
push
lea
mov
mov
push
pop
test
sub
daa
xchg
mov
mov
inc
aam
mov
cmpsb
xchg
mov
lods
or
cmp
mov
mov
push
push
sbb
incl
xor
hlt
repz
mov
mov
mov
and
xchg
jne
mov
fnsave
pop
jp
xchg
mov
mov
inc
aam
sbbl
sbb
in
out
mov
insl
std
jno
out
call
cmp
in
scas
pop
in
dec
mov
inc
pushf
fdivl
cwtl
fwait
or
jno
or
test
call
fs
movsb
xor
int3
and
mov
sub
decb
mov
xor
dec
in
mov
ljmp
test
cmp
mov
or
movsl
jns
mov
or
dec
shr
mov
jb
pop
jge
outsl
inc
mov
outsl
push
pop
mov
and
dec
inc
sub
inc
movb
and
shll
or
rcrb
outsl
inc
and
iret
gs
fnstcw
in
outsb
arpl
out
cmp
sbb
sub
stos
and
stos
adc
jecxz
cmc
jp
mov
pop
and
pop
adcl
mov
rcl
xchg
xor
and
add
pop
popf
cmc
je
lock
int
scas
out
popf
test
push
aaa
addr16
xchg
xor
addb
ljmp
inc
sbb
and
ret
inc
mov
cmpsl
repz
leave
inc
push
mov
cli
lret
test
push
shl
cmpsb
add
xlat
ds
test
stos
push
imul
inc
pushl
jmp
sbb
sub
ret
add
add
inc
imul
xchg
push
psrad
lods
sbb
cmp
push
and
rcll
mov
aad
and
gs
repz
push
fstps
loop
lds
sbb
push
xor
mov
mov
ret
xor
mov
sbb
sbb
jno
leave
or
mov
sub
pop
inc
test
fimull
dec
mov
fists
into
add
mov
jp
cmp
cmp
push
sub
pushf
dec
popf
xchg
int3
pop
dec
sub
fdivl
addl
or
neg
and
jne
clc
mov
add
cmp
push
test
scas
sbb
out
mov
cmc
cld
or
hlt
lahf
hlt
pop
lahf
cmp
pushl
pop
cmp
add
mov
push
insb
mov
notl
or
push
inc
fimuls
jns
insl
push
sbb
push
mov
sub
sub
and
xchg
xchg
xor
sub
nop
out
bound
loop
jno
jmp
sbb
je
sbb
pop
cmc
push
pop
mov
cmc
cmc
lret
mov
lcall
in
gs
enter
icebp
add
decb
add
and
pop
mov
push
fbld
daa
cmc
ret
cwtl
adc
inc
int
test
ret
jp
mov
jno
daa
pop
cmp
les
sbb
push
int3
dec
xlat
shll
inc
mov
mov
scas
jmp
jge
insb
sub
xor
mov
pop
mov
shrb
mov
lds
inc
add
cmpsl
ret
mov
scas
push
mov
inc
jb
int
ficoms
clc
cmp
pop
stc
pop
ret
jle
sbb
sahf
call
out
sub
sub
xchg
ljmp
clc
rcll
add
jl
pop
sbb
pop
and
fldcw
movsl
sub
inc
mov
push
sbb
push
lock
mov
ffree
and
xchg
pushf
test
xor
add
sbb
aas
pop
ss
adc
lods
and
pop
fiadds
or
test
shlb
mov
adc
xchg
sbb
pop
fcoms
je
lret
jge
mov
sub
push
adc
inc
push
pop
mov
aaa
xchg
jno
ds
leave
xchg
xlat
add
in
xor
fsubl
push
mov
adc
fistps
inc
pop
daa
arpl
subb
enter
xor
loop
in
jb
rcr
cwtl
sbb
jg
xchg
sbb
jl
push
sbb
cmpsl
cmp
and
pop
clc
scas
aad
mov
dec
insb
jl
mov
popa
stos
addr16
mov
jg
push
test
mov
sbb
sbb
jp
ljmp
fidivl
mov
cmp
sub
add
dec
sbbb
dec
movsl
inc
dec
push
movl
jnp
sarl
jmp
pusha
fidivl
iret
mov
cs
addr16
pop
loopne
subps
adc
roll
mov
cmp
adc
jl
loopne
in
cmpsl
in
outsb
mov
shll
jmp
das
mov
pop
test
mov
arpl
loopne
fildl
int3
neg
push
jo
cltd
in
hlt
xchg
pop
sub
enter
push
jns
neg
jae
movsl
out
mov
mov
jno
imul
push
xor
mov
in
sbb
das
xor
xchg
rorb
sbb
cmp
add
mov
jle
dec
fnsave
jecxz
sbb
gs
scas
cmp
mov
jmp
lock
out
adc
cltd
ss
inc
push
sahf
aad
mov
pop
xchg
pushf
push
in
in
repz
jnp
and
int3
aad
cmp
or
sarl
push
test
push
and
cwtl
push
jb
and
ret
sub
popf
mov
and
movsb
in
cmpsl
xchg
jg
add
add
push
and
mov
sbb
movsl
jl
mov
pop
stos
stos
popaw
icebp
inc
mov
sub
cmpsb
mov
cmp
insl
inc
push
out
fwait
mov
iret
cltd
fst
fsts
aam
mov
cltd
lods
sbb
adc
cs
test
paddsw
pop
lods
jno
cwtl
jge
sub
xchg
mov
mov
popf
cld
add
or
pop
pop
lds
fwait
stos
jo
dec
mov
push
push
insb
xor
sbb
pop
mov
pop
xchg
jbe
adc
push
sub
test
gs
push
es
clc
sub
lea
cmpsb
push
push
in
ret
xchg
mov
xchg
xor
mov
popa
das
cltd
mov
push
out
jnp
cli
fdivrl
nop
lcall
fisubl
gs
cmpsl
negl
push
add
pop
xor
std
inc
or
sarl
mov
fwait
out
jge
mov
dec
lahf
mov
and
mov
fdivrl
fldenv
pusha
pop
test
pushf
or
and
mov
push
mov
dec
jbe
and
out
push
fwait
push
pop
xor
sbb
fsts
push
mov
sahf
jg
dec
add
add
add
leave
dec
loope
pop
fdivrl
enter
aad
iret
pop
arpl
aaa
sub
arpl
dec
jns
mov
jns
movsl
les
xchg
gs
xor
in
je
outsb
or
cmp
fsubs
pop
and
jecxz
inc
mov
mov
aas
mov
mov
testl
and
sub
pop
mov
or
mulb
das
xor
imul
sub
dec
addb
loope
push
sbb
shrb
xchg
sahf
dec
ror
xor
scas
add
and
outsl
jnp
je
dec
ja
test
add
xor
shrb
or
mov
mov
dec
mov
xor
mov
push
pop
outsl
mov
sub
mov
push
popa
add
mov
shlb
mov
movsl
adc
mov
mov
and
pop
pop
scas
test
jle
ljmp
lods
dec
js
mov
cmp
into
xchg
stc
jne
cltd
sbbl
jno
mov
mov
dec
push
fstps
lods
repz
test
loopne
in
gs
mov
rorl
fsubrl
out
icebp
imul
jb
aad
jp
in
aaa
jmp
mov
jg
mov
ja
pop
pop
popa
inc
cmpsb
aad
jp
lahf
push
and
jl
lods
dec
jo
hlt
push
push
test
xor
stos
push
sbb
cmp
mov
movsb
xchg
sub
xor
xlat
dec
aam
and
sub
dec
inc
mov
sbb
and
mov
and
xchg
fs
add
pop
mov
mov
ficomps
push
pop
movsl
gs
stos
mov
jge
cmp
rcrl
mov
dec
stos
or
dec
test
hlt
ret
pop
sarl
jge
inc
outsb
mov
sbb
call
push
push
popf
push
fcmove
rol
mov
inc
cld
mov
or
mov
cmp
gs
fidivrs
pusha
scas
mov
lcall
je
test
mov
movl
mov
xor
jne
nop
mov
jecxz
fs
stc
ret
loopne
mov
addb
xchg
cmp
ret
scas
jmp
mov
xchg
jne
icebp
sub
sub
add
adc
test
cli
mov
mov
lods
push
loop
cmpl
jo
nop
inc
iret
and
mov
in
lods
xor
movsb
ds
lcall
cmp
inc
dec
fidivs
jle
test
add
aaa
es
test
ds
inc
dec
pop
ret
xor
push
sub
jmp
insl
sbb
scas
scas
adc
daa
subb
pop
test
fbstp
mov
xlat
jge
orb
pop
mov
in
shrl
pop
lds
nop
lret
lea
sub
jl
imul
push
push
loope
sbbl
test
jae
inc
stos
push
into
dec
mov
cmp
jmp
mov
lods
hlt
movsl
cmp
sub
sbb
scas
mov
mov
cltd
pop
pop
shrb
mov
loopne
rcrl
pop
fisttps
sub
mov
out
cmp
jae
repz
pop
data16
sub
jnp
push
icebp
std
hlt
or
fstpt
js
pop
popf
pop
dec
jno
inc
out
and
loopne
jp
popa
and
adc
shlb
xchg
das
repnz
testl
push
sub
mov
mov
push
lods
call
sub
jnp
loopne
push
mov
jne
inc
mov
mov
sub
add
xor
call
orb
add
clc
adc
xchg
jns
rcll
push
jge
andl
movsl
jg
dec
sahf
xchg
cli
xchg
push
cwtl
fstpt
push
les
testb
or
cmp
mov
ret
xchg
fadds
push
test
enter
in
test
pop
add
leave
mov
cmp
xchg
mov
and
cmc
out
je
ds
aas
xor
aam
out
cli
leave
pop
add
cmp
popa
push
mov
pop
mov
sub
sbb
pop
add
sbb
jns
cmc
mov
mov
or
shl
xchg
and
mov
out
and
cmp
jbe
jl
inc
iret
outsl
repz
dec
and
aad
or
aas
mov
inc
rcr
or
pusha
pop
push
ljmp
xchg
sbb
icebp
mov
cmp
dec
addr16
fimull
and
and
cmp
subb
aad
adc
cmc
xchg
rep
push
xor
test
out
push
popa
dec
test
and
pushf
iret
sbb
dec
das
daa
lock
pmaddwd
dec
pop
and
xchg
hlt
push
adc
xor
movsb
xchg
enter
xchg
or
push
fnstenv
in
lea
pop
popf
ds
push
ret
pop
fisubrs
in
and
testb
stos
push
icebp
cmp
jl
cld
push
loop
xchg
sbb
pop
aam
push
xchg
dec
clc
es
fsts
and
fcmovnbe
push
imul
test
cmpsb
shlb
repz
jecxz
cmpsl
shr
jo
pop
ret
xchg
pop
daa
xchg
imul
dec
push
pop
mov
jg
fdivrs
add
fucomi
push
add
push
imul
les
add
mov
inc
and
clc
stc
xlat
lcall
mov
add
or
xor
lret
loop
data16
mov
sub
iret
push
shrl
cmc
sub
cmp
add
scas
int3
mov
push
pop
or
push
xor
or
xchg
and
fisttpl
sub
sbb
mov
call
add
scas
push
xchg
aad
add
mov
cs
movsl
loope
std
pop
or
enter
mov
inc
or
fwait
fwait
sub
iret
icebp
test
sti
pop
sub
pop
adc
popf
sub
cmp
mov
sahf
mov
sub
es
add
pop
dec
mov
dec
sub
out
dec
das
and
mov
rcl
jnp
xor
ss
push
andb
dec
bound
popf
iret
or
sahf
jne
rcrl
xchg
andl
cmp
repnz
jecxz
dec
outsb
jle
xchg
pop
mov
sbb
sbb
mov
ficoms
xchg
in
lods
test
jb
jae
sbb
sbb
xorb
xor
aas
cmpsl
arpl
sub
push
andl
mov
stos
lods
stos
mov
addr16
mov
jg
push
mov
imul
sbb
xlat
mov
xor
bound
fimuls
cwtl
mov
imull
or
add
movsl
xchg
imul
and
scas
mov
mov
pop
lcall
jge
fs
data16
movsb
push
hlt
sbb
sahf
xchg
mov
dec
divb
dec
mov
fdivl
pop
push
jae
push
les
dec
jmp
rol
fs
jl
xchg
aam
xchg
mov
inc
notl
inc
insl
dec
inc
and
outsb
xor
mov
scas
inc
mov
rol
sub
jmp
mov
jl
inc
mov
arpl
ret
cmp
cwtl
repnz
ljmp
aad
and
idiv
das
aad
xchg
rcrb
aam
ds
or
sub
data16
hlt
aas
dec
xor
pop
adc
fsub
adc
and
in
shrb
cmp
cld
cmp
cmpb
inc
rcr
sbb
pop
mov
outsl
lret
popa
rcll
inc
divb
ljmp
xchg
movsl
mov
int3
cli
push
cmp
push
daa
imul
enter
stc
xorl
mov
icebp
mov
fists
push
cli
sbb
inc
jge
or
inc
add
xor
mov
mov
mov
dec
push
test
cs
scas
or
and
push
add
adc
jno
popf
add
loopne
and
cmp
cmc
dec
mov
test
mov
subl
clc
sete
dec
inc
mov
outsb
or
jbe
mov
idiv
jmp
inc
cmp
ret
ficoms
adc
loope
subps
movsb
xchg
ss
ja
cmpsl
fnstenv
xchg
dec
xor
inc
repnz
or
popf
inc
cmp
aas
hlt
and
pop
mov
inc
sarl
add
icebp
fcomps
int
lods
enter
dec
repnz
adcl
xchg
loop
insb
xchg
xchg
pop
out
sti
adc
aad
and
fcmovu
popa
shrb
xchg
adc
jo
scas
lret
fsubrs
xlat
inc
je
ljmp
sbb
jo
test
and
gs
sbbb
shrb
push
sub
outsb
lock
jge
into
xorb
xor
icebp
std
sbb
cwtl
sbb
cmp
mov
call
and
dec
cltd
mov
cltd
pop
mov
xchg
jb
daa
iret
popa
dec
ljmpw
dec
out
in
in
aaa
in
sahf
sahf
push
in
ds
enter
jle
xorb
inc
push
movsb
mov
cmp
sbb
into
insl
mov
bound
sbb
sbb
xchg
cmc
fstps
adc
dec
aas
sbb
or
mov
xor
cmp
btc
dec
push
test
leave
sbb
gs
mov
fidivrl
imul
cwtl
mov
push
jmp
leave
pop
into
dec
and
faddp
fcoml
int
movsl
das
arpl
rclb
sbb
xor
test
push
mov
fs
enter
aaa
mov
inc
sbb
pushf
pop
inc
mov
enter
mov
repnz
xorb
pusha
xor
xchg
icebp
int3
mov
xchg
mov
xlat
fstpt
clc
lahf
aas
ret
mov
mov
dec
rorl
lea
cwtl
xor
shll
or
dec
add
test
lahf
sahf
jbe
mov
adc
inc
cwtl
add
jle
stos
or
mov
gs
mov
xchg
andl
jbe
iret
idivb
and
or
pop
shll
xchg
and
negb
xor
mov
dec
bound
mov
inc
cmp
mov
out
aas
dec
add
push
negl
push
fwait
jecxz
xor
daa
jns
add
mov
lock
dec
sub
ljmp
xor
cmp
clc
and
xlat
jno
push
jge
rclb
pushf
scas
mov
sahf
dec
inc
icebp
mov
dec
lcall
repz
push
adc
adc
out
es
test
mov
in
inc
push
and
jecxz
cmp
mov
xlat
mov
nop
xchg
jg
dec
pop
lds
ja
mov
mov
inc
fdivl
or
dec
es
dec
dec
mov
inc
add
movsb
xor
xchg
in
adc
inc
aaa
loope
inc
push
cli
call
lock
sbb
adc
and
inc
inc
jo
mov
sbb
inc
into
sbb
imul
aaa
rorb
pop
mov
fstl
jno
js
flds
adc
fidivl
add
inc
push
cmpsb
adc
add
push
mov
mov
loope
call
mov
stos
cmp
pusha
mov
nop
xor
shll
insl
test
cmpl
dec
lcall
out
std
jecxz
inc
jb
jge
cmp
adc
xchg
insb
adc
mov
bound
or
fisttpl
xor
xchg
dec
and
lock
mov
xor
sub
pop
in
es
dec
pop
pop
mov
push
push
cmp
mov
jmp
lock
ja
sbb
inc
loop
adc
or
movsb
nop
mov
cltd
and
pop
loopne
into
icebp
lcall
sbb
out
mov
or
mov
xchg
cmp
dec
add
popf
xchg
icebp
adc
fs
mov
shlb
inc
test
sbb
das
pop
test
sbbl
popf
lret
ljmp
push
sub
adc
push
mov
icebp
fistps
mov
loope
out
xor
cmp
icebp
add
jns
mov
mov
popf
daa
dec
cmp
mulb
push
rdpmc
xor
in
xor
mov
int
loopne
insl
fildl
sub
cmpsl
ds
int
jbe
and
push
pop
mulb
arpl
jb
sbb
outsl
fidivl
xchg
jecxz
inc
xchg
sar
push
inc
xchg
fadds
adc
push
pop
popa
and
add
pop
push
jae
insb
daa
adc
mov
ds
jmp
pop
movsl
mov
mov
addr16
cmp
flds
add
pop
rclb
dec
into
xchg
repnz
and
push
pop
add
xlat
sbb
mov
sarb
out
ss
mov
xlat
push
fs
in
hlt
xor
into
mov
aaa
ds
or
insb
and
cwtl
dec
sub
dec
mov
xor
cmp
jg
and
pop
lea
xchg
mov
fidivrs
iret
mov
or
jb
xchg
jecxz,pn
fisubrl
pop
add
aam
jp,pn
push
enter
push
xlat
scas
add
nop
xchg
adc
dec
in
push
mov
fdivs
aaa
mov
pusha
xor
xor
imul
int
lahf
push
mov
movsb
popa
xor
push
fimuls
jg
jae
leave
cmp
bound
sahf
lock
mov
test
inc
cmp
je
xchg
add
mov
fcmovnu
mov
popa
fs
and
cmpsl
int3
sbb
jbe
xor
in
jo
outsb
int
jbe
xchg
popa
je
or
scas
orb
mov
sub
mov
mov
jle
es
mov
inc
mov
out
sahf
adcb
iret
sbb
xchg
cs
sarl
lret
jp
pop
pusha
cmpsl
pop
lock
vmptrld
sub
mov
lods
in
lret
movl
stos
repnz
mov
cwtl
lock
add
sbb
jle
mov
cltd
divb
stc
je
mov
fstpl
loop
lret
loop
pop
pop
sub
push
and
divl
loopne
mov
add
repz
sub
fwait
enter
stos
es
mov
sahf
mov
leave
jno
jo
adc
jecxz
loop
jmp
mov
int
push
dec
mov
add
sbb
xchg
popf
add
popf
scas
hlt
iret
lods
imul
pop
repz
push
fldt
fbld
cmc
aas
pop
and
sub
push
ljmp
cwtl
repz
rol
adc
cmpsl
mov
sub
sbb
fadds
mov
pusha
data16
dec
mov
movsl
xor
sub
test
cmp
outsb
inc
xchg
repnz
insl
push
fnstcw
cmpsb
cli
mov
xor
push
pushl
xchg
test
in
out
aad
dec
int
scas
outsb
or
push
andl
in
mov
pop
mov
fwait
ret
inc
cmp
xchg
jae
stc
pusha
addb
jno
icebp
in
xor
inc
aam
in
push
add
mov
push
mov
push
and
jmp
mov
flds
shrb
push
ja
nop
mov
ljmp
repz
pop
inc
or
inc
je
mov
repnz
out
sub
cwtl
push
inc
or
mov
loop
icebp
and
fs
stos
pop
jg
pop
or
pop
fstpl
sbb
adc
insl
js
jecxz
xchg
lods
test
enter
pop
sub
outsb
and
dec
mov
aam
cli
rcll
fstpl
jb
and
stos
jb
enter
lea
push
out
movsl
loop
fs
mov
aad
dec
roll
in
push
test
fnstsw
lds
popf
iret
mov
call
sahf
and
outsl
mov
inc
push
ret
pop
add
mov
mov
add
and
dec
les
out
lds
test
test
int3
inc
cmp
xchg
push
sbb
sub
das
sbb
push
cwtl
dec
fdivrl
das
movsb
enter
in
stc
push
aas
ret
adc
adc
loopne
add
sbb
fmuls
jge
scas
lods
fidivs
dec
push
js
les
dec
out
imul
inc
mov
jecxz
test
or
and
cmpsl
inc
jp
mov
out
incl
dec
cmpsl
gs
cmpl
sub
mov
sub
loopne
movsb
testb
fidivrs
call
data16
pop
inc
movsl
or
mov
cmpsl
jp
push
fistps
popf
out
jl
dec
xchg
cmp
and
mov
stc
dec
dec
lret
mov
xchg
roll
and
push
or
sbb
or
jae
adc
cmpsl
mov
push
mov
bound
inc
cld
shlb
or
add
mov
leave
ss
test
aad
pop
lss
mov
inc
setl
inc
adc
cmpsl
in
xchg
xchg
mov
sub
cmp
push
sbb
iret
cmp
and
sub
loopne
mov
dec
das
outsb
imull
jl
imul
cmc
dec
mov
push
inc
sbb
jg
xchg
push
adc
or
xor
mov
mov
dec
xchg
sub
jp
cwtl
test
and
imul
nop
mov
cwtl
test
push
inc
push
mov
mov
out
rcrb
cmc
mov
mov
std
mov
test
std
xor
dec
jg
xor
jno
sbb
inc
dec
cli
mov
repnz
ds
loopne
xchg
push
inc
repnz
push
jnp
pop
jl
in
test
dec
repz
pop
push
out
mov
shll
ss
mov
hlt
mov
mov
jne
xchg
mov
pop
sbb
add
icebp
test
ja
pop
fimull
jne
xchg
cmp
lods
in
or
sbb
aad
or
stos
push
test
xchg
mov
pushf
xor
fadds
sbb
call
jb
stos
shrb
lods
sub
jle
enter
mov
sub
lea
cmp
arpl
sahf
mov
xor
dec
fs
and
jl
stc
sub
fistpl
pop
testb
or
popa
mov
hlt
cmp
ficoml
and
mov
arpl
xchg
inc
mov
jnp
jne
int
sbb
add
jle
fistl
sbb
fsubr
or
push
fincstp
out
xor
sbbl
inc
sub
out
dec
and
push
ret
cmp
and
inc
cmp
dec
push
dec
sub
adc
aas
lea
and
sbb
push
inc
xor
push
decb
push
into
in
add
pop
xchg
xchg
pop
stos
clc
pop
idiv
jb
sbb
or
cmp
sti
mov
add
xor
aad
mov
pushf
pusha
jne
pop
rclb
into
cmpsl
mov
cld
outsl
pop
ret
xchg
mov
test
daa
adc
inc
pop
shll
enter
sub
inc
mov
or
jle
cmp
xchg
sti
cld
push
sbb
lret
jmp
sahf
xchg
sbb
jnp
out
pause
sbb
ja
rcl
jp
push
sub
insb
push
mov
call
jle
xlat
pop
stos
aad
int
jne
adc
push
ds
ja
stos
push
rclb
jmp
stos
int
fs
outsb
jmp
icebp
sbb
out
iret
sub
mov
pop
mov
imul
push
jb
fldl
or
outsl
mov
xor
lea
das
icebp
or
sbb
pop
imul
or
mov
int
or
and
push
mov
call
mov
mov
jne
sub
ret
repnz
ja
inc
gs
mov
sbb
lods
xchg
out
aaa
xchg
repz
mov
scas
xchg
mov
aam
and
loop
mov
push
xchg
aas
cmp
int3
popa
adc
cwtl
push
outsb
sub
cmp
inc
dec
or
mov
stos
repnz
aam
push
aad
pop
push
imul
add
push
mov
dec
inc
jl
add
xor
fs
aam
pop
xchg
inc
mov
pop
cmp
push
in
sbb
cmpl
bound
sbb
pushf
popf
mov
nop
or
inc
lds
mov
test
ljmp
data16
popl
pop
mov
dec
and
pop
aaa
add
push
push
mov
inc
mov
mov
jl
and
jg
das
mov
jns
cltd
lret
mov
jmp
jl
ret
test
outsl
arpl
mov
mov
mov
leave
jp
dec
repz
out
fwait
cmp
push
mov
jo
mov
mov
mov
lcall
pushf
mov
imul
testb
xchg
xchg
aaa
mov
add
cmc
sub
mov
fstps
xor
ret
test
pop
inc
inc
fmuls
mov
outsb
mov
jns
or
in
push
pusha
sub
xor
insl
fdivrp
movsb
adc
cmp
sub
ljmp
mov
mov
mov
cmp
es
push
mov
or
cs
int
dec
jmp
shrb
rorb
aam
xor
sub
pop
popa
adc
mov
push
in
shrl
adc
pop
cmp
mov
mov
ret
in
xchg
xchg
xchg
jnp
jae
xchg
adc
cmc
cmp
mov
sbb
lods
jo
decl
jnp
sub
pop
iret
jno
pop
dec
push
xchg
outsl
mov
pop
ja
hlt
lods
mov
ror
ljmp
cmp
push
mov
pop
ficoms
sub
cmp
jno
fcmovnu
xchg
out
push
jb
mov
hlt
and
pusha
sbb
pop
fisubrl
mov
push
fstps
cld
pop
sbb
inc
enter
cs
dec
not
ret
aad
jp
movsl
inc
push
inc
inc
sub
les
data16
xor
mov
jg
jge
xchg
ljmp
into
xchg
pop
sbb
aam
mov
std
xchg
es
mov
push
jp
jb
mov
icebp
fsubl
movsb
mov
loopne
cmp
aam
fildl
push
jle
dec
xchg
add
sbb
mov
xor
mov
adc
cmc
dec
xchg
pop
in
mov
sub
ljmp
lods
cmpb
xchg
mov
inc
xor
jge
jmp
dec
push
pop
dec
pop
mov
and
mov
daa
cltd
mov
iret
out
stc
pop
dec
scas
call
add
or
sbb
fdivrl
xchg
and
mov
data16
nop
insl
cltd
push
cmp
push
cmp
leave
pop
sub
mov
push
xor
mov
and
add
push
movsb
loopne
cli
fprem
mov
cmpsl
cmc
mov
inc
leave
sbb
mov
cmpsb
clc
and
cmp
push
add
enter
xchg
mov
jecxz
sbb
nop
dec
push
cmp
filds
or
add
dec
lea
das
cwtl
mov
mov
dec
pop
dec
add
fwait
jo
xlat
sub
jge,pt
mov
flds
cli
jecxz
ret
adc
int
dec
fldenv
nop
cmp
shlb
insl
pushf
in
aad
es
inc
cld
pop
xor
mov
dec
adc
mov
hlt
jae
mov
mov
ds
add
jmp
inc
sub
es
into
sar
sbb
stos
stos
sbb
sub
adc
inc
pusha
movsb
cmp
sub
jg
repz
inc
outsl
adc
popf
hlt
sub
psubsb
syscall
or
xor
out
mov
cmpb
jnp
xor
xchg
mov
jle
mov
cmp
daa
inc
pop
pop
out
icebp
mov
pushf
loopne
neg
nop
add
push
jmp
rolb
adc
mov
or
stc
mov
adc
dec
mov
loop
bnd
mov
cltd
sub
cmc
inc
rcrb
scas
lcall
xor
or
scas
clc
js
outsb
add
lret
jge
jg
xor
hlt
push
addb
nop
int
push
mov
push
mov
push
imul
fsubr
inc
adc
js
dec
or
xchg
outsl
pop
jne
pop
sbbb
pop
sahf
or
adc
dec
inc
or
sub
pop
mov
jns
movsb
aad
push
ja
orl
jns
js
cmpsb
fs
das
mov
pop
scas
aam
cmp
test
xchg
ret
push
std
fdivs
mov
test
stc
shrb
adc
or
or
sub
inc
sub
push
test
imul
pusha
leave
lcall
repz
jae
mov
scas
outsl
adc
ljmp
push
int
pop
ficoms
jo
sbb
push
xor
out
mov
mov
idivl
ficoml
ds
push
cmp
je
test
hlt
jns
adc
fdivrl
sub
adc
in
aaa
fildl
gs
adc
xor
mov
adcb
jns
loope
rolb
dec
arpl
jecxz
icebp
mov
popfw
push
orb
jns
out
outsb
in
popf
jnp
lret
add
jnp
dec
dec
pop
addb
arpl
mov
pop
lds
in
mov
movd
fcmovnbe
mov
lcall
das
es
cmp
fstps
push
sbbb
pop
inc
pop
xor
mov
test
xor
sub
sub
and
pop
aam
sub
aas
mov
pusha
mov
daa
cltd
xchg
repz
idiv
pop
mov
push
xor
mov
daa
jns
pop
pop
ret
adc
test
cli
imul
xlat
fldt
in
cld
xor
out
adc
ds
sbb
sub
pop
lock
sbb
lcall
fidivs
pop
mov
das
lods
rorb
mov
mov
or
rorl
movsb
xchg
mov
lods
sar
mov
and
xor
xchg
out
xchg
int3
cmp
fcoml
dec
mov
aam
fildl
lods
fwait
sahf
push
xor
divb
repz
cwtl
call
cmp
icebp
lcall
sbb
popa
popf
fucomi
out
data16
std
das
fldenv
and
lea
ret
lods
push
data16
cs
jns
pop
cwtl
mov
pop
pop
lods
pop
sbb
mov
pop
or
cmp
int
xor
dec
rorl
subl
sahf
ja
inc
jns
push
push
outsl
aad
adc
and
inc
aaa
aam
les
inc
das
inc
sub
pop
inc
je
js
leave
rcr
xor
dec
in
test
mov
xchg
popa
cmp
inc
loopne
rorb
xchg
outsl
fwait
aam
loopne
out
add
cli
ss
push
jecxz
aaa
xchg
repz
jge
adc
arpl
pushf
cmp
andl
mov
jmp
in
mov
fstpl
stos
cmp
sti
test
mov
ja
inc
inc
sbb
fsubs
popf
push
inc
leave
nop
jno
push
cmpsb
sarb
jp
test
xor
push
or
push
push
test
js
jp
call
arpl
inc
push
mov
and
cmc
push
mov
movsl
call
call
test
cmp
push
or
out
jmp
or
js
push
mov
or
pushf
stc
test
lahf
je
in
inc
xchg
ficompl
adcl
push
sub
jb
test
pop
inc
jno
clc
lds
jne
or
outsl
and
cmp
flds
add
cld
nop
sbb
adc
or
mov
pop
push
push
insl
xlat
xor
sub
nop
ds
mov
or
mov
mov
popa
lcall
fdivs
inc
jbe
enter
jo
stos
add
mov
dec
xor
jne
push
add
inc
and
aam
push
xor
mov
mov
insl
pop
push
cmpsl
or
mov
inc
repz
mov
add
inc
fldt
pop
icebp
pop
jge
jne
popf
xorb
or
mov
pop
icebp
jmp
cli
leave
cmp
pop
fcoms
je
testl
jmp
jmp
test
cmpl
test
stos
loope
in
mov
mov
dec
jo
and
daa
sbb
adc
dec
scas
andl
xor
dec
fadds
xchg
lea
enter
idiv
sub
mov
sarb
mov
test
insl
popa
pop
jg
lods
lfs
dec
repnz
fistpll
test
movsl
mov
in
cli
lods
rsm
or
and
je
jnp
jmp
cmp
mov
loopne
pop
push
add
lea
fdivs
mov
fbld
mov
jle
gs
rorl
aaa
push
mov
into
outsb
je
xchg
movsb
and
cmpl
jns
mov
jmp
lret
fcom
addr16
xor
clc
xor
push
js
std
pop
pop
dec
xchg
nop
mov
jnp
jbe
cmpsb
cmpsl
pop
out
ja
mov
cmp
hlt
lods
inc
pop
popf
mov
adc
fstpl
mov
xchg
push
ret
pop
xchg
adc
cmpb
push
push
jmp
dec
inc
movsb
movsb
js
mov
push
sub
bound
fldt
add
mov
fistl
sub
pop
in
and
mov
icebp
push
pusha
int3
mov
insl
outsl
rorb
mov
xchg
push
mov
ret
jle
jbe
ds
jl
cmpb
mov
and
ss
mov
stos
inc
cltd
fwait
adc
xor
loop
pop
push
jns
cmp
imul
jb
mov
xor
idivb
gs
mov
mov
ror
rorb
xchg
pop
xchg
pop
scas
int3
popa
call
sbb
pop
loope
enter
cmp
in
fsubr
push
cwtl
je
add
rolb
sbb
pusha
sub
decb
pusha
pop
and
lods
loopne
mov
xor
nop
sub
xor
dec
enter
push
insl
xor
sub
jns
cwtl
negb
fs
dec
es
fcoms
sbb
push
and
jg
aas
vpsubsb
push
nop
nop
sub
test
bound
insb
in
filds
mov
leave
es
mov
pop
jmp
icebp
repnz
push
xor
sub
and
mov
or
jge
pop
test
jo
inc
mov
ljmp
cwtl
enter
aaa
xchg
mov
sarl
daa
adc
stos
lods
pushl
stos
mov
dec
out
jp
inc
mov
cmc
dec
pop
in
out
test
lret
inc
or
outsb
sub
andl
popf
push
xchg
dec
cmpsb
icebp
pusha
pop
pop
add
dec
jp
into
cmp
ret
pushf
scas
test
and
call
in
mov
repz
push
adc
mov
mov
xchg
mov
addr16
repz
int3
cmc
aaa
mov
rcll
mov
jge
imul
sub
rcl
pop
mov
xchg
icebp
pop
cs
dec
shll
pop
xor
shll
aad
inc
mov
sbb
push
leave
cmp
ret
pop
xchg
stos
insb
mov
fs
xor
cmpsb
inc
and
cmc
mov
cmpsl
xchg
lcall
gs
sbb
or
mov
sub
mov
shl
xchg
out
ljmp
lahf
fldl
test
dec
jmp
lea
stc
jl
and
cmpsb
sbb
xchg
rorb
cli
lahf
pop
pop
dec
xlat
repz
mov
and
mov
push
xchg
jg
cwtl
int3
jge
cmpsl
scas
xchg
cltd
fdivp
sub
xor
mov
push
cmpb
pop
mov
mov
aas
add
je
daa
fidivl
fucomi
sub
cmp
in
add
lock
lcall
xlat
scas
push
adcb
test
aam
rclb
xchg
adc
and
dec
xchg
jg
or
lret
mov
sarb
lret
ljmp
sahf
sub
push
adcb
arpl
inc
add
insb
jecxz
cmc
loope
sbb
mov
xchg
mov
pop
add
and
mov
fstpt
inc
ficoml
mov
rcrl
leave
test
leave
add
ljmp
repnz
xchg
lret
sbb
mov
sub
pop
mov
jne
data16
mov
add
adc
sti
hlt
dec
fstps
shr
xchg
inc
fcmovbe
addl
dec
ret
inc
rcll
inc
inc
xor
cs
mov
lret
iret
push
add
cmp
mov
pop
out
pop
dec
pusha
cs
push
stc
pop
pop
cmp
mov
xor
pop
push
jge
out
fisubrs
cmp
sti
fistps
leave
ret
arpl
add
lds
dec
dec
add
mov
mov
orb
push
cmpsb
lea
cltd
test
adc
lds
adc
sbb
cmp
mov
or
gs
sub
popf
ja
sbb
loop
ret
and
mov
jle
lods
popa
aad
int
mov
je
fbstp
and
daa
out
add
test
int3
fs
push
stos
lods
lea
es
xorl
adc
or
sti
orl
nop
sbb
cli
mov
push
mov
rcl
push
and
leave
adc
pop
inc
push
sub
or
adc
cmp
cs
dec
xchg
and
xchg
pop
neg
pop
test
push
cwtl
fcoml
and
insb
insb
gs
cli
cwtl
clc
cmp
aam
mov
rcll
subb
sbb
sub
push
in
pushf
data16
fwait
mov
inc
dec
mov
or
mov
in
xorb
mov
inc
dec
addb
mov
adc
in
mov
adc
test
push
mov
in
jnp
inc
mov
loop
xchg
aam
and
lods
cltd
fcoml
imul
in
sub
dec
fbld
pop
mov
lahf
mov
jmp
loope
jae
pop
pushf
sub
ljmp
test
adc
mov
loope
or
mov
test
xor
inc
call
aam
js
jns
add
sub
adc
imul
lods
outsl
call
and
lcall
cmp
aam
roll
pop
rcrl
or
pop
orl
dec
iret
push
mov
pop
mov
jecxz
and
pusha
das
sbb
sub
jl
pop
mov
adc
mov
dec
mov
xor
leave
fsubrs
sbb
mov
sub
and
out
and
gs
mov
dec
cmp
xor
imulb
push
mov
jmp
fbld
lret
mov
fucom
out
repnz
outsb
cmp
mov
addr16
and
and
fistpll
and
pop
fadd
xor
mov
mov
jo
cmp
jge
inc
or
adc
pushf
inc
jo
sub
dec
fstpt
cltd
inc
test
mov
and
cmc
inc
adc
leave
les
and
stc
pop
cmp
out
pop
push
fstpl
loope
ret
pop
xor
ja
adc
outsl
fldt
or
stos
jmp
cs
adc
loopne
add
das
push
jecxz
inc
rcrb
jo
mov
jle
cmc
fstpt
sarb
scas
loopne
or
cmc
xchg
dec
lcall
jb
int
pop
sbb
mov
sbb
push
sti
sbb
mov
in
mov
scas
adc
mov
and
xor
icebp
and
sub
fs
inc
inc
or
xorb
or
movsl
push
rorb
call
mov
fbstp
mov
dec
sub
dec
shl
sbb
cltd
jb
clc
cmp
cltd
or
add
dec
es
clc
inc
mov
je,pt
mov
mov
jmp
jns
pop
push
cmp
sbb
mov
bndldx
xchg
inc
xchg
inc
adc
pop
stos
les
cmp
push
xchg
andb
and
dec
pop
lods
popf
mov
push
xchg
ficomps
fcoml
flds
xor
mov
mov
outsl
inc
out
fisttps
jg
fdivl
jo
sbb
aam
mov
out
jbe
cmc
popa
lods
inc
sub
insb
daa
loope
sbb
sub
mov
out
lcall
pushf
mov
insb
dec
jno
or
imul
std
add
mov
test
cmp
pop
or
sub
arpl
cwtl
pusha
cltd
pop
pushf
mov
dec
in
outsl
mov
nop
ret
sti
mov
cmpsl
xor
jmp
imul
lcall
mov
mov
xchg
jmp
xor
push
dec
xchg
adc
loope
cmp
cmpsb
add
push
stc
sbb
psubw
lock
mov
add
xchg
mov
lcall
and
cld
add
lahf
insl
jb
repz
xchg
cltd
cmp
in
xor
jp
jnp
xlat
loop
imull
sbb
xchg
jno
pushf
add
aaa
push
xor
in
lret
movswl
pop
aad
sub
mov
je
int3
push
pop
out
movsl
push
call
insb
mov
push
xchg
push
cmp
adc
mov
push
jne
sub
jo
je
movsb
sub
and
out
lcall
fdivs
mov
dec
sahf
adcb
cmp
dec
mov
cmpsb
fimull
dec
popa
xchg
cmc
bound
mov
addr16
out
mov
sbb
enter
xor
addr16
or
mulb
sbb
fwait
xor
fldt
insl
add
mov
push
or
int
mov
push
sub
hlt
dec
add
fldcw
lds
lea
div
add
and
mov
xchg
les
push
fwait
es
mov
enter
jo
jecxz
aad
xor
mov
xor
dec
mov
lcall
mov
sub
push
je
jns
mov
cmp
ss
arpl
cld
xchg
mov
push
cmp
mov
push
mov
pop
insb
pushf
sbb
push
movsl
mov
cltd
xchg
lahf
cmc
loopne
mov
mov
mov
arpl
iret
cs
lds
dec
popa
imul
mov
pop
bound
aas
jmp
sub
cmp
add
sub
outsl
pop
mov
repnz
shlb
jle
jmp
mov
popf
sti
pop
mov
les
lea
mov
mov
pop
loope
or
pop
jp
sbb
pop
adc
or
cmp
shll
mov
outsb
cmp
cmp
jge
lcall
stos
negl
jecxz
mov
sub
jmp
lahf
fsubr
cmpl
inc
and
or
gs
loopne
loope
test
mov
dec
stos
scas
push
dec
jge
add
jne
jbe
stos
mov
mov
push
nop
and
jmp
xchg
cld
dec
dec
mov
push
test
mov
mov
aaa
shll
jbe
mov
ljmp
mov
fmull
mov
mov
cwtl
jp
and
dec
ficompl
push
movsl
popa
ss
inc
imul
xchg
loopne
xchg
insl
xor
or
pop
sub
push
lret
jns
clc
mov
cld
pop
or
addr16
jge
cwtl
ljmp
out
adc
les
shrb
popa
cmpsb
or
push
hlt
xchg
negl
sbb
inc
mov
lock
jle
int3
mov
mov
xor
jb
mov
jno
popf
sub
addr16
scas
or
pop
xor
pusha
push
shrb
jl
dec
inc
inc
jbe
or
das
and
push
cmpl
out
popa
rorb
xchg
mov
rorl
icebp
arpl
sahf
outsb
fmull
idivb
cmp
sub
xchg
or
sub
daa
adc
cmp
mov
mov
mov
inc
cwtl
jge
sbb
loope
into
rorl
xchg
xchg
in
subl
js
mov
daa
stos
enter
fsubl
aad
arpl
mov
std
insl
movl
and
sbb
xchg
sbb
jbe
dec
xchg
mov
push
aaa
movsb
inc
clc
push
scas
aas
fnstcw
aad
jecxz
lret
shll
push
jae
or
dec
imul
mov
xchg
xchg
cmp
pushf
mov
mov
jae
mov
dec
in
pop
mov
cltd
jno
les
xchg
and
pop
inc
fisttps
mov
leavew
mov
sub
call
inc
cli
sub
xchg
mov
inc
incl
pop
lahf
jge
dec
sarb
andl
pop
xor
jne
outsb
iret
push
imulb
loop
or
loope
pop
ljmp
mov
ja
jnp
pop
jne
pop
dec
outsb
pop
lret
je
and
ret
sbb
add
out
js
enter
pop
fcomps
stc
mov
stos
js
fbstp
ret
mov
pop
mov
lret
adc
fidivrl
mov
out
out
sarb
sub
jp
cmpsb
shll
enter
lods
cltd
mov
icebp
mov
jg
mov
pop
cmpsl
repz
mov
and
jl
outsb
add
mov
rcll
pop
repnz
shlb
jg
pop
pushf
pop
jae
in
in
hlt
enter
add
es
mov
cmpsl
inc
rcrb
ret
push
ljmp
xor
fstps
loop
and
xor
push
insl
loop
out
movsl
jb,pn
pop
jg
push
insl
cli
in
push
fsubr
cmp
mov
scas
sub
shll
pop
repnz
stc
mov
loope
cld
test
imul
jle
inc
pop
mov
outsb
cmp
mov
xchg
pop
rdtsc
les
xchg
and
js
pop
cli
cmpsb
cmpsl
in
inc
gs
rorl
adc
push
mov
mov
rorl
adc
inc
mov
lret
nop
jb
cli
push
aam
jg
mov
adc
dec
xor
out
fists
popa
or
mov
jbe
inc
imul
push
jg
xchg
es
cmp
mov
or
fs
jmp
sti
sbb
out
das
enter
shlb
jno
inc
cmpsl
sahf
jp
xchg
lods
les
mov
gs
std
lods
leave
push
sbb
in
sbb
mov
loopne
dec
sub
sub
das
jp
mov
jecxz
xorb
cltd
dec
sbb
xor
mov
movsb
cli
pop
mov
pop
addb
mov
adc
loop
mov
inc
repz
and
xor
call
mov
notl
cmpsb
sub
pop
in
mov
daa
mov
or
and
or
mov
and
xchg
stc
ljmp
mov
das
sub
mov
mov
mov
imul
push
aas
cmp
xor
ret
dec
cmp
pushf
sbbb
data16
push
add
out
xor
fiadds
clc
sub
clc
jmp
mov
insb
mov
leave
sbb
and
aas
or
add
pop
pop
and
mov
enter
out
push
lret
mov
imul
jmp
inc
int
cltd
fs
push
jmp
pop
jo
push
test
sti
test
xchg
out
js
iret
and
loopne
inc
lods
jns
lods
in
sub
mov
gs
push
orb
fmull
bnd
lahf
mov
les
sub
inc
push
dec
fistpll
mov
jae
out
mov
mov
mov
inc
push
mov
adc
sbb
jns
mov
std
outsl
dec
aaa
jl
out
andl
xchg
pop
sub
lock
mov
cmc
testb
adc
popa
or
mov
out
jbe
stos
icebp
add
xlat
scas
cltd
or
mov
roll
dec
or
sahf
inc
and
jbe
andl
inc
shrl
orl
dec
test
psubsw
xor
cmp
fists
push
mov
inc
in
xchg
jns
jge
fldl
mov
push
popa
enter
arpl
scas
xor
add
pop
dec
push
xlat
cmp
gs
add
outsl
jns
adc
cmp
dec
insl
enter
subl
pop
mov
jne
icebp
jbe
jne
push
jo
dec
mov
pmuludq
movsl
lret
idivb
jmp
mov
cmc
and
lahf
leave
loope
rorl
xor
ds
aad
sbb
stc
mov
jb,pn
jno
cmpsl
mov
mov
inc
cs
fdivs
dec
icebp
imul
pop
cwtl
pop
jle
and
cmp
imul
push
or
jae
test
add
cltd
aaa
adc
adc
les
out
xorl
ret
xchg
iret
jmp
call
xchg
ret
xor
fcoms
cmp
rorb
push
and
movl
jmp
xchg
push
outsb
pushf
ret
jmp
ss
add
or
xchg
mov
outsb
or
xor
and
cmovge
fwait
je
daa
push
xor
scas
insb
mov
nop
dec
int3
cmp
sbb
cli
push
fs
and
xchg
notl
mov
sub
xchg
jns
dec
inc
into
mov
out
pop
rclb
mov
mov
lds
pop
or
stos
outsl
test
xchg
mov
push
xchg
idivl
or
lods
push
dec
cmp
inc
mov
xchg
jo
xchg
mov
and
pop
cmp
xchg
lds
lock
incl
scas
xchg
imul
enter
sub
test
pushw
push
pop
imul
jl
dec
mov
mov
das
inc
jo
jnp
mov
sbb
cld
push
mov
imul
sbb
bound
jmp
and
out
inc
dec
or
sbb
lret
inc
add
stos
out
jl
mov
lcall
outsb
push
aad
in
adc
mov
mov
mov
mov
lods
push
push
in
mov
pop
ror
movsb
lods
lods
bound
pop
xchg
fildll
subb
or
dec
inc
jbe
imul
nop
jecxz
cmp
xor
mov
xchg
in
fmulp
adc
adc
push
pushf
jbe
shlb
lock
inc
pop
loope
sbb
clc
or
mov
mov
out
enter
push
mov
fsubrp
jp
xchg
dec
les
insl
leave
pop
int
jecxz
or
out
mov
mov
mov
in
bound
jecxz
fists
sub
fs
pminub
adc
push
call
aaa
fldl
ficompl
xchg
pop
testb
pop
icebp
cmp
push
nop
out
aas
out
push
out
mov
add
xor
pop
test
mov
in
aam
lock
in
in
xchg
ljmp
jae
push
mov
aam
out
jnp
clc
es
movsl
mov
mov
cmp
adc
lahf
lret
xchg
in
lahf
pop
imul
mov
sbb
cwtl
addr16
jns
ljmp
xchg
add
xchg
push
jns
jb
xchg
cmp
add
adc
sbb
fs
inc
repz
fstpl
cmp
adc
xchg
mov
lds
inc
sbb
clc
outsb
out
repz
xchg
or
jmp
loope
incl
jbe
and
add
jbe
add
lret
or
out
sbb
cmc
xchg
addr16
dec
fdivr
cmp
pop
hlt
mov
dec
and
adc
mov
and
inc
negl
lahf
ds
inc
popl
outsb
mull
push
ljmp
negb
sbbl
lds
cmp
shrb
jno
movsl
ds
stos
ja
pop
or
lret
test
out
lock
jg
inc
cmpsl
arpl
xor
xchg
fisubrl
pop
fxch
test
or
int3
jge,pn
inc
ds
in
insb
push
sarb
sub
mov
cmp
mov
aam
cltd
rorb
cmp
push
pop
sbb
cwtl
lret
fdivrs
dec
imul
mov
add
fnstenv
jb
test
into
addr16
sub
insb
mov
rcr
popa
shlb
fstpt
pop
repnz
lahf
jbe
jno
out
mov
inc
popf
shll
mov
jmp
mov
inc
popa
sub
lds
dec
cmp
repnz
cmp
push
stc
ret
call
and
xor
push
sub
mov
dec
ja
pushf
mov
and
ds
lret
js
mov
and
rclb
sub
sub
int
ficomps
paddd
mov
xchg
out
clc
push
mov
out
xchg
dec
fsubs
cmp
iret
stc
xchg
mov
je
cmp
mov
sbb
jno
out
jno
mov
jb
mov
loop
insl
ds
cmp
cwtl
test
aas
push
ds
imul
mov
jmp
mov
stc
sbb
push
fldl
or
mov
out
rcl
and
and
in
shll
xor
add
push
sahf
add
mov
xchg
mov
decl
jle
test
inc
subl
lods
cmp
xchg
and
xchg
dec
sbb
cmp
lds
test
fisubrs
ret
sub
cmpsl
loopne
push
clc
test
pop
divl
arpl
xchg
pop
movsb
mov
pushf
movsl
and
data16
movsb
out
sarb
pop
int
push
push
sahf
cmp
sub
shl
pop
stos
fcom
dec
xor
clc
test
andl
int3
sbb
mov
call
mov
mov
dec
repnz
jno
push
fisubl
and
arpl
stc
test
repnz
js
test
enter
xchg
in
ja
repz
and
mov
clc
lret
and
xchg
push
mov
or
icebp
or
testb
adc
mov
es
or
mov
pop
dec
rorl
sbb
or
sarb
mov
xor
movb
insb
and
or
inc
jmp
push
roll
mov
jno
cmpsb
inc
in
inc
fs
test
gs
testl
add
repz
in
mov
rolb
sbb
test
sbb
sbb
clc
dec
xor
push
push
adc
push
push
rcll
and
cmp
dec
pop
xchg
and
lret
fwait
cli
data16
cmp
xchg
sti
xor
mov
imul
adcb
test
adc
fsubrs
mov
call
sysenter
dec
xor
in
popa
sbb
xchg
sub
cmpb
out
mov
mov
xlat
mov
and
movsl
outsb
scas
lret
xchg
fcmove
fisubrs
imul
sub
rcll
bound
mov
push
mov
bound
add
push
movsb
mov
inc
dec
scas
push
mov
gs
cmpsb
int
jp
aas
xchg
and
pop
cmp
sub
dec
mov
mov
dec
dec
xor
push
or
pop
movsb
arpl
pop
add
data16
nop
in
lahf
inc
aas
cmp
cmc
shll
into
ret
adc
shrl
aaa
xchg
push
mov
fwait
adc
sbb
fisubl
jo
adc
xchg
in
clc
aaa
or
fwait
mov
js
fisubrl
sub
pushf
orl
mov
push
mov
leave
xchg
popa
push
inc
add
dec
out
jp
dec
cltd
ss
testl
mov
lret
sub
cli
jg
pop
insl
in
stos
dec
mov
bound
dec
ss
ficomps
loop
mov
leave
outsb
and
test
in
push
popa
sbb
cmp
imul
dec
lods
mov
lret
jbe
mov
cld
aas
mov
mov
push
mov
ret
mov
or
jnp
push
lods
shr
clc
pop
or
or
sbb
xor
ds
jnp
jo
sub
sahf
pop
pop
push
or
dec
mov
sbb
leave
pop
sub
in
int
cmc
dec
mov
mov
mov
inc
addr16
jno
lret
clc
xor
and
out
or
dec
lock
pop
insl
rorb
data16
cmpsl
or
ds
pop
xchg
cli
cwtl
sbb
pop
sub
std
lods
cmpsl
xchg
fnsave
inc
ja
sub
cli
sbb
and
ds
mov
mov
fsubrs
sbb
test
fs
dec
jle
add
xchg
loopne
and
repz
sub
addr16
push
adc
aaa
adc
sahf
xchg
dec
sbb
or
push
sub
fiadds
enter
sbb
and
js
mov
xchg
in
ja
outsl
test
test
inc
mov
fs
cmpsl
jmp
pop
and
dec
push
xorb
movsb
lea
cmp
in
cmp
xchg
inc
pop
fwait
inc
stos
pusha
std
mov
sti
repz
test
aas
add
cld
cmp
adc
mov
inc
xor
int
aad
dec
in
pop
fldcw
cmp
jge
insb
push
add
dec
dec
jmp
in
pop
fidivrl
fmuls
divb
jae
movsb
push
mov
lock
sbb
mov
clc
sub
pusha
ja
cmp
div
jns
in
mov
pop
repz
stc
aaa
or
add
aas
mov
mov
xchg
pop
xchg
sbb
lods
paddd
pop
outsb
ss
in
sahf
cmpsb
fcom
js
xor
lret
lds
inc
aas
aad
es
push
push
inc
push
push
lods
ss
and
out
mov
push
and
and
adc
fsub
shl
sub
push
test
shlb
outsb
loope
mov
lret
xor
add
daa
loopne
and
idivb
sub
test
push
js
inc
pop
cmp
aaa
and
push
push
or
and
pop
mov
jnp
adc
in
test
mov
repnz
or
jae,pn
imul
mov
push
add
lcall
mov
in
cmp
pusha
lock
push
outsb
xor
ja
hlt
mov
mov
mov
shl
push
push
xchg
dec
dec
test
fimull
aam
shl
test
mov
insl
mov
mov
inc
jo
cld
pushf
test
clc
xchg
lahf
ds
outsb
and
iret
scas
es
lret
mov
jae
sub
and
test
pop
fnstsw
sti
dec
jbe
ss
sbb
mov
mov
lods
push
add
aaa
ljmp
mov
dec
xchg
mov
dec
inc
repz
push
shrd
mov
sub
outsb
mov
push
in
and
push
imulb
cmp
dec
jp
inc
push
lcall
es
sub
jbe
nop
in
sti
xchg
adc
sbbl
iret
adc
pop
dec
or
hlt
lock
push
dec
mov
jge
ss
sbb
mov
xor
sar
cld
mov
fwait
test
cwtl
scas
push
js
mov
xor
mov
adc
sbb
push
xor
ret
push
imul
sarl
pop
xchg
notb
sub
out
mov
test
ljmp
sbb
pop
sub
adc
and
xchg
sahf
xchg
dec
sub
rolb
stc
lea
mov
rcrl
mov
sub
not
dec
adc
jnp
jp
int3
mov
stos
pop
shrb
scas
xchg
clc
jns
mov
mov
nop
mov
and
xor
scas
adc
adc
mov
dec
xchg
test
mov
out
mov
inc
inc
push
sarl
mov
sbb
lods
ret
repz
pop
into
lret
add
pop
push
sbb
arpl
test
mov
pop
lret
mov
push
mov
inc
jge
or
pop
inc
jecxz
imulb
scas
addr16
arpl
xchg
push
fdivrl
rorl
imul
lock
jnp
rcrb
jns
sbb
out
dec
dec
in
ret
pop
pop
and
lea
hlt
test
jg
xchg
jl
call
sbb
pushf
cmpsb
fisubs
sbb
in
sub
fiaddl
mov
in
ret
sbb
xchg
out
and
sbb
and
mov
cmp
jne
pop
test
data16
pop
mov
inc
inc
cmp
mov
pop
arpl
cmp
shrb
sub
insl
rcr
dec
pop
push
enter
push
xor
xor
xchg
mov
pop
ja
nop
sbb
ja
insl
push
ljmp
mov
mov
in
jne
adc
lcall
mov
cmpsl
cmp
mov
jbe
nop
adc
xchg
out
jmp
xchg
mov
in
xor
xchg
dec
dec
aaa
sbb
inc
push
jno
push
testl
fnstenv
push
sub
mov
mov
sub
adc
adc
addb
inc
call
in
mov
lret
jnp
adc
call
das
lds
xchg
into
repz
pop
xlat
rcll
xchg
or
loop
aaa
into
mov
testl
adc
hlt
iret
push
aas
mov
pushf
pusha
cmp
xor
popf
ret
push
inc
sbbl
push
xchg
push
stos
sbb
xor
or
imulb
mov
iret
fldcw
pop
jge
mov
mov
outsl
mov
mov
in
xlat
mov
roll
sbb
inc
inc
jno
mov
sub
mov
cmpsl
pop
and
jns
mov
add
ret
pop
jl
es
mov
sbb
push
dec
jge
cmp
jb
pop
cmc
movsl
scas
jecxz
pop
js
jb
dec
jmp
lcall
mov
in
inc
mov
push
xlat
in
lret
sub
stos
clc
adc
cmp
rclb
insb
mov
dec
out
loope
or
sub
stos
cmp
aad
jnp
fwait
cmp
in
xchg
orb
xor
jle
add
mov
es
and
add
iret
sahf
syscall
int3
dec
in
lcall
xor
mov
mov
cmp
mov
nop
cmp
sub
cmp
shll
aas
and
mov
scas
cmp
nop
in
ret
inc
sti
insl
pop
cmp
inc
pop
ljmp
push
jg
sub
insl
js
dec
orb
or
in
aaa
jo
in
cltd
dec
dec
mov
sti
out
xchg
dec
es
add
push
pop
jmp
xor
jnp
or
mov
insl
jp
pop
stos
pop
cltd
inc
clc
int3
ljmp
cmp
sbb
push
ret
add
pop
rclb
dec
push
sub
sbb
adc
out
push
out
test
xchg
jnp
insb
sub
xchg
hlt
aam
pop
and
call
ret
movsl
cmovb
mov
and
cltd
mov
insb
aad
mov
call
fnstsw
jbe
in
inc
sahf
lahf
repnz
loope
test
loop
outsb
cmc
jae
hlt
adc
xor
jge
mov
out
mov
sub
cmpsl
shrl
stos
arpl
push
push
leave
scas
sub
fmul
repz
sti
push
gs
push
jg
adc
fiadds
fadd
addr16
int3
into
push
out
in
cmpsb
dec
std
rorb
push
mov
lods
jae
outsl
pop
mov
out
xor
inc
movsb
or
mov
mov
sbb
cmp
gs
je
mov
out
fisttpll
daa
pop
mov
pop
pop
sub
push
cmp
sbb
sub
pop
xor
cwtl
arpl
in
rol
and
jns
addl
sti
in
pop
pop
rorb
stos
ds
xor
loopne
jb
bound
lcall
icebp
mov
pop
ret
std
pop
inc
cmp
stc
lahf
mull
mov
loope
mov
stos
lds
loope
adc
mov
pop
lcall
mov
popf
lock
fadd
popf
cmp
lds
pop
mov
imul
cmp
push
pop
cmpsb
push
mov
scas
add
sbb
insb
mov
hlt
adc
xchg
jl
push
mov
dec
pop
sti
push
es
xlat
call
sahf
leave
ss
fildll
rcl
pop
fidivrl
jnp
clc
cld
push
insb
mov
xor
es
push
insl
sbb
jae
sahf
and
outsb
mov
dec
mov
cld
and
lcall
xchg
inc
fsubrp
jne
sarl
mov
js
mov
and
xchg
jl
push
xchg
cmp
mov
sbb
mov
xchg
add
xchg
jmp
aas
or
mov
jecxz
imul
or
push
insl
dec
pop
loope
aas
cmp
sbb
xor
xor
js
outsb
adc
fs
pop
add
in
out
or
or
or
cld
or
enter
xchg
iret
test
movsb
or
inc
add
adc
aad
or
lock
lahf
test
xchg
fidivrl
lds
clc
or
sbb
fwait
stos
sbb
mov
dec
sub
cmp
aaa
mov
out
mov
add
mov
or
shl
dec
push
add
inc
mov
mov
ret
orb
dec
add
daa
mov
sahf
dec
data16
cmp
mov
dec
cmp
push
xchg
jmp
push
xchg
xchg
or
jnp
popf
sub
dec
stos
mov
push
inc
cmp
cltd
or
push
jo
push
dec
loop
testl
pop
mov
mov
pusha
mov
repz
fstpt
sub
inc
loope
add
cwtl
gs
inc
lcall
sarb
sub
and
loop
in
into
or
xor
xchg
dec
jecxz
stos
add
je
hlt
and
dec
adc
jp
sub
jmp
xor
push
sbb
ljmp
out
aad
sub
inc
sub
mov
adc
pop
lahf
rcrl
add
xchg
inc
sbb
cld
adc
bound
data16
jnp
push
sub
jae
addr16
push
jecxz
imul
mov
mov
sub
xchg
pop
add
fmull
sub
imul
xchg
mov
cmc
jns
or
mov
outsl
outsb
sub
jle
fldt
fcompl
mov
data16
mov
ljmp
jno
movsw
cmpsb
mov
icebp
repz
push
lret
stc
pop
push
adcb
addr16
out
push
xchg
pop
mov
stos
xchg
mov
mov
jge
pop
les
rcrl
call
push
scas
pop
and
insl
leave
arpl
push
xlat
je
in
fs
dec
test
inc
mov
insl
sbb
inc
xchg
subb
in
cmpsb
lcall
dec
fisttps
lock
mov
icebp
icebp
xchg
das
jne
arpl
pop
outsl
or
aaa
cmp
subl
std
pop
mov
std
loope
dec
in
and
or
into
pop
and
jle
jle
call
push
dec
test
xchg
daa
incb
scas
hlt
dec
fwait
dec
stos
out
push
dec
mov
xchg
xchg
jbe
or
xor
ja
popf
fistpll
out
mov
lret
test
daa
xchg
ret
jmp
mov
mov
fwait
divb
mov
mov
mov
out
mov
lea
pop
movsl
xchg
xchg
outsl
mov
jnp
std
pop
jo
orl
out
pop
jo
rolb
cld
pop
pusha
lret
pop
xchg
xchg
sbbb
add
clc
push
aaa
std
dec
lods
int3
adc
sub
xchg
adc
xor
cmp
insl
sbb
inc
lock
aam
mov
cmp
cwtl
shll
arpl
cmc
jp
or
jl
push
push
repz
lcall
repnz
add
dec
loopne
inc
pushf
scas
sbb
cld
push
jmp
push
inc
mov
push
jno
mov
pop
sbb
mov
aaa
addr16
cmp
and
mov
dec
gs
in
inc
ds
xchg
cmc
mov
xchg
jae
and
cmp
mov
pop
fisttps
or
jne
mov
dec
mov
xor
jl
mov
jo
xor
std
shl
mov
mov
jo
ficompl
clc
in
pop
jb
inc
mov
stos
mov
enter
test
insl
push
repz
mov
push
and
push
add
jle
adc
xchg
sarl
mov
jo
cmpsb
mov
or
loop
xchg
lahf
mov
add
mov
ror
sbb
fwait
les
cli
imulb
insb
xchg
add
sub
mov
inc
pop
inc
mov
sbb
test
movsb
fiadds
push
cltd
imul
and
stos
xlat
and
movsl
and
movsl
rcl
dec
out
or
cli
xor
das
xor
cmpsl
jl
adc
rorb
not
add
mov
dec
xchg
imul
leave
aam
cmp
das
int3
gs
popa
insb
mov
sub
mov
iret
and
sbb
sbb
or
mov
add
stos
push
leave
mov
stos
mov
mov
sub
inc
sub
clc
leave
addl
pop
cmp
popf
pushf
add
fildll
mov
push
adc
iret
and
push
adc
popa
movsb
repz
ror
cs
bnd
out
and
aaa
jle
mov
aad
out
ds
jo
das
lcall
enter
push
xor
jno
aad
cmp
push
mov
push
xor
movsl
xor
icebp
push
pop
mov
add
push
rclb
mov
mov
shrl
sbb
faddp
pop
jae
jae
scas
cwtl
pop
cmp
mov
or
mov
out
cwtl
mov
xchg
mov
dec
in
xor
mov
test
xchg
mov
cmp
pop
mov
push
lret
adc
inc
daa
dec
int
xchg
mov
jmp
cmp
imul
ja
mov
arpl
mov
jg
lods
add
dec
or
or
add
sbb
cmp
popa
xchg
and
add
decb
loope
sbb
dec
cmc
daa
add
add
push
mov
xchg
mov
mov
fprem
cwtl
ret
daa
rclb
push
int3
mov
add
jmp
pop
xor
jo
pop
fcompl
xchg
vsqrtps
in
xchg
fwait
fwait
shll
xchg
sahf
dec
sbb
in
pop
jae
push
aas
push
out
pushf
sti
pop
daa
jge
add
stos
aad
fsubl
out
movsb
cmp
pusha
or
sarl
in
out
push
movsb
pop
jmp
lret
jno
ret
adc
ret
loope
mov
cmc
inc
push
or
bound
xor
mov
cld
cmp
sub
sbb
pop
lcall
push
jmp
popf
clc
adc
mov
sub
les
test
and
outsl
add
ss
cmp
ds
mov
xchg
sbb
xor
dec
xchg
andb
dec
lock
push
outsl
xchg
inc
lock
ret
call
shll
lock
lock
mov
or
mov
cwtl
mov
adc
in
test
test
push
int
inc
test
shl
shrb
mov
repz
stos
lods
add
add
out
sbb
popa
inc
test
jne
movsb
ret
cmp
sbb
xor
mov
mov
into
xchg
stos
insl
outsl
iret
and
lret
rdmsr
fs
flds
ret
sub
aad
shlb
aas
and
idivl
and
jmp
lds
mov
jo
lret
loopne
rorb
clc
flds
pop
fistl
lds
inc
nop
iret
xor
mov
repz
cmpsl
mov
lods
xor
sub
popa
mov
ds
jg
jnp
or
add
xchg
sbb
adc
add
inc
arpl
ljmp
xor
popa
push
inc
push
or
mov
inc
enter
pop
or
and
cli
dec
cmp
into
pop
or
mov
imul
aas
frstor
rcll
movsb
lahf
jae
hlt
and
and
lea
pop
icebp
add
lds
xor
lcall
fistl
or
jne
and
leave
cmc
jnp,pt
loope
mov
movsb
add
stos
rolb
add
lock
outsb
sbb
psraw
mov
add
pop
mov
mov
or
rcl
push
popf
fsubr
adc
xchg
push
jne
jmp
xlat
bound
aad
aas
adc
test
dec
sbb
std
mov
ljmp
and
mov
mov
jp
fs
ret
cs
mov
xchg
fistpl
cmp
mov
das
add
idivl
adc
stos
jo
shlb
in
jmp
shr
add
mov
dec
mov
scas
daa
cltd
mov
lret
push
or
imul
arpl
pop
sub
push
add
fdivr
xor
mov
rorb
mov
subb
inc
in
insl
sub
addr16
mov
inc
inc
popf
sahf
mov
sbb
jmp
or
inc
mov
jmp
jno
addb
add
rclb
mov
add
mov
lds
shll
sub
ficoml
outsb
fbld
into
mov
mov
andb
loope
xor
into
mov
mov
xor
jbe
adc
sahf
lret
movsb
or
int
mov
lret
pop
push
push
push
in
push
mov
call
rcll
jns
xor
jo
bound
stos
add
cmpsb
jle
adc
xchg
mov
jbe
imul
jle
outsl
rcll
pop
inc
xor
out
cmc
popf
add
xchg
adc
mov
je
or
mov
pusha
cmp
sarb
lcall
mov
pop
aad
adc
cs
ficomps
or
push
add
and
scas
pop
jg
dec
std
add
lea
scas
js
aas
jnp
add
ljmp
jno
lcall
xchg
test
aad
subl
dec
ss
ds
les
ret
push
add
cmpsl
cs
sub
pop
pop
fdivr
cmp
mov
xor
cmp
test
jo
mov
xchg
shll
jne
cmp
dec
adc
push
data16
std
pop
pop
repnz
lock
cmp
adc
ljmp
push
jecxz
fcompl
outsl
outsb
loop
push
rcll
jle
fisubrs
lock
ja
cmp
int
jae
imul
or
xorl
sub
lods
in
jg
cwtl
xchg
leave
pop
xchg
sbb
inc
mov
cmp
iret
out
fidivrs
lret
loopne
lods
add
pop
xor
fidivl
scas
insb
mov
cmp
lock
rcll
scas
jl
mov
and
in
push
lock
cmc
jnp
scas
mov
test
shlb
cmp
icebp
and
lret
mov
aad
lds
fdivr
add
test
fsubrl
xchg
into
and
addr16
int
fmulp
sbb
jp
lock
adc
xor
pop
andb
inc
mov
ret
arpl
xorl
div
cwtl
es
xor
in
cmp
adc
add
arpl
outsl
iret
dec
push
sti
cmp
adc
mov
push
lea
aad
cltd
mov
ror
dec
aam
mov
or
imull
pop
mov
push
fwait
adcl
jge
sbb
ret
add
push
dec
mov
push
dec
mov
outsb
mov
xchg
les
lock
xchg
push
loope
in
and
inc
push
lock
not
push
lret
jmp
and
xor
ret
loopne
into
fwait
sub
mov
shlb
idivl
mov
outsl
pop
sbb
mov
push
fisubl
add
cmc
arpl
xchg
adc
adc
inc
jmp
push
mov
pop
pop
leave
dec
or
cmpsl
inc
push
xor
rolb
popa
and
jle
xor
aad
cld
push
mov
xor
lcall
mov
mov
fidivrl
bound
sbb
jns
push
push
or
test
jae
popf
add
jns
mov
xchg
pop
push
jne
jnp
movsl
jmp
cmp
cwtl
jge
pop
stos
lret
sub
cmp
dec
and
aas
std
pop
xor
fstpl
mov
sbb
inc
xchg
xchg
fs
scas
fstps
pop
pusha
cmp
push
stc
cld
and
shr
or
std
shlb
gs
scas
sbb
dec
mov
jle
dec
nop
push
pop
aas
in
ds
pusha
ljmp
jae
mov
scas
xchg
das
outsb
pop
mov
cltd
and
inc
leave
sub
add
movsb
stos
stos
adc
fcmovb
out
sar
test
xchg
adc
mov
out
test
dec
je
loopne,pt
mov
jmp
xor
es
add
aaa
fcomps
fs
call
dec
jmp
mov
inc
cmp
dec
std
adc
pop
jmp
mov
insb
or
and
sub
add
movsl
xlat
xlat
dec
inc
cmp
out
bound
xchg
jecxz
push
enter
fdivl
and
repz
mov
pop
mov
mov
ret
hlt
pop
fimuls
fs
jnp
insl
pop
shll
fadds
push
and
ret
sub
xlat
sbb
cmp
frstor
mov
iret
sarl
cmp
mov
or
mov
pop
inc
cmp
es
addr16
and
mov
push
dec
ror
mov
xchg
xor
add
xor
insb
mov
xchg
jae
fs
lcall
int
ret
popf
jl
adc
imull
int
lock
call
xor
popa
fldt
notb
cmp
pop
lea
push
mov
push
int
clc
ret
and
push
adc
cmp
cld
xchg
cmp
cs
mov
mov
std
inc
ret
adc
push
jb
or
sbb
lcall
xor
jnp
outsl
xor
iret
dec
bound
or
ja
pop
dec
daa
add
push
xchg
enter
pop
movsl
inc
popf
jge
mov
xchg
add
xchg
das
fbstp
ret
pop
sub
jmp
cli
inc
sub
inc
xchg
add
lods
shr
adc
lock
loop
cmp
push
inc
xor
or
test
das
push
jle
cltd
fstl
add
jl
xchg
dec
adc
mov
pop
rolb
sbb
or
mov
data16
jmp
int3
pop
or
pop
push
mov
icebp
fmull
or
pop
leave
pop
mov
call
filds
mov
sbb
mov
int
inc
cwtl
pop
gs
dec
vpmaxsw
out
loope
test
lods
fs
mov
dec
sbb
nop
sbb
dec
jmp
sub
mov
scas
xor
add
xor
mov
cmpsl
jo
popl
mov
out
shrl
mov
scas
arpl
neg
xchg
cwtl
dec
ljmp
inc
lock
cs
xchg
sbb
xor
test
xchg
pop
dec
leave
xor
inc
addr16
add
aam
fcom
cmc
adc
imul
push
cmpsl
fists
je
push
or
cwtl
rcrb
inc
enter
scas
mov
je
js
xor
jnp
jo
sub
ret
xchg
xchg
js
das
pop
insl
mov
mov
push
gs
mov
jnp
repnz
ret
lahf
mov
xchg
repz
mov
mov
iret
mov
movsb
mov
mov
lock
imul
popa
sub
sbb
mov
stos
fnstsw
mov
ljmp
lock
jnp
sahf
push
sahf
movq
ds
lret
sbb
push
lcall
cmp
data16
jnp
out
out
pusha
jmp
sub
pushf
push
xor
xchg
push
pop
pop
into
insl
jns
adc
cmp
ss
lods
jnp
test
outsl
xchg
pop
jbe
cwtl
jle
out
jb
mov
sbb
jnp
cmp
or
mov
adc
mov
jecxz
fsubs
rcrb
je
mov
sbb
pop
push
jg
fcmovb
pop
mov
jl
repnz
push
push
scas
insb
dec
pop
gs
rcl
sub
xor
lret
jp
inc
ss
mov
jmp
call
out
subl
int3
fdiv
stos
pop
dec
rcll
shll
pop
fistpl
aam
mov
mov
add
push
or
aam
iret
mov
out
sub
adc
push
arpl
mov
push
aaa
mov
mov
sbb
dec
je
insb
mov
cmc
add
inc
aam
cld
jmp
push
out
adc
mov
push
bound
jecxz
add
enter
mov
cld
jnp
mov
inc
es
jbe
push
mov
inc
add
stc
imul
fdiv
testb
mov
pop
aaa
sbb
sbb
fldenv
ljmp
add
scas
bound
dec
movsb
loopne
dec
inc
rol
cmp
sbb
cmp
jbe
dec
pop
lods
fidivrs
divb
sub
push
inc
adc
jne
out
lret
mov
pop
dec
popa
movsb
out
mov
inc
mov
cmp
jecxz
xor
mov
fwait
das
pop
inc
lods
and
ljmp
popa
mov
inc
mov
sbb
xor
and
adcl
mov
mov
cltd
dec
or
rclb
cmp
lret
popl
aam
adc
test
lea
jl
ret
cmp
xchg
fs
pop
sbb
sub
sbb
mov
lods
adc
cmp
mov
fildl
jp
lret
sbb
and
xchg
xlat
add
in
xchg
mov
shrl
lods
int3
imul
lcall
dec
nop
fwait
inc
adc
pop
adc
mov
mov
je
inc
adc
stos
xor
and
out
cmc
cmp
cmp
cld
mov
mov
daa
in
outsl
push
lret
mov
and
pop
inc
mov
pop
mov
leave
sub
imul
sub
adcb
cmp
ret
sbb
dec
aad
mov
cmp
or
and
push
mov
nop
test
sub
push
pop
test
or
imul
es
aam
sbb
movsl
sub
lods
in
cmc
or
jns
mov
fimuls
and
pop
in
lcall
mov
lcall
push
idivb
test
mov
xchg
add
inc
sahf
mov
jp
and
sbb
addl
inc
inc
or
sbb
cmc
xchg
enter
ret
and
outsb
movsl
lods
lods
pop
or
iret
pop
adc
lods
push
or
fmuls
loopne
loopne
fistps
xor
mov
lods
cmc
mov
fidivs
dec
dec
pop
loope
movsl
push
jmp
mov
out
shrb
popl
pop
mov
xchg
js
sub
in
and
pusha
loopne
jmp
mov
sbb
movl
push
test
xor
out
lcall
aas
lds
push
pushl
mov
cld
adc
push
xchg
outsl
cmp
stos
xchg
mov
insl
nop
inc
or
cld
aad
xchg
shrb
jae
and
inc
scas
cltd
push
insl
add
add
pusha
test
dec
inc
adcl
leave
daa
dec
clc
adc
mov
cwtl
dec
adc
subl
xorl
pop
mov
mov
das
sarb
push
push
and
jmp
and
stc
cmp
push
mov
cwtl
notl
inc
add
push
out
or
bound
adc
mov
dec
mov
insb
jle
ja
rcrl
push
mov
jle
sub
das
loop
sub
pop
mov
push
fstl
push
loop
pop
and
mov
add
mov
add
cmpsb
jbe
sub
movsb
scas
adc
ret
add
adc
xlat
pop
xchg
mov
xor
cmp
adc
pop
insb
push
push
icebp
ljmp
dec
outsl
mov
pop
ret
or
lret
repz
into
mov
xor
jmp
out
int
and
xchg
int
fucom
jne
iret
mov
hlt
lods
adc
pop
jge
out
ja
andb
stc
adc
call
pop
outsb
ljmp
out
pop
in
lcall
outsb
push
cmpsb
jne
xor
mov
mov
pop
ds
sbb
or
mov
fadds
jg
popf
sbb
ret
les
cmp
mov
lret
orb
fwait
divb
test
cld
xchg
push
dec
clc
lret
mov
mov
subb
mov
push
add
addb
pusha
mov
fildl
inc
add
fcoms
int3
int3
je
lods
ror
jge
add
xchg
daa
or
jns
xchg
mov
jb
mov
xchg
push
ror
sti
push
int
jnp
adcb
push
inc
iret
out
and
push
aaa
jecxz
xchg
dec
scas
xchg
les
inc
cmp
dec
sbb
sahf
cmc
dec
pop
pop
push
shlb
and
xlat
repnz
lret
scas
out
adc
movsb
jno
xchg
ja
lock
xchg
imul
mov
push
pop
outsl
les
adc
xor
sub
imul
push
jecxz
popf
xor
push
inc
pop
mov
mov
sbb
inc
jmp
jle
adc
nop
lods
adc
jns
cmp
xor
out
push
scas
test
es
rcr
arpl
push
and
add
outsl
pop
imul
imul
add
adc
xchg
lods
icebp
out
cmp
xchg
or
sbb
sahf
lods
jbe
mov
mov
dec
scas
sub
test
push
mulb
js
pop
imul
inc
xor
and
cmp
adc
test
stc
push
sub
pop
dec
enter
ficomps
cmp
jb
and
mov
cmp
cmp
mov
xchg
inc
imull
in
btc
ficoms
insb
enter
push
out
adcb
and
sbb
push
repnz
jge
mov
jecxz
cmp
or
enter
xchg
mov
or
mov
fwait
xchg
and
sub
pusha
fcoml
jb
les
mov
je
cmpsb
loope
mov
inc
mov
mov
xlat
push
pop
adc
xor
movsb
pop
dec
aad
sub
aad
sbb
ljmp
fidivrs
sub
mov
push
arpl
shl
push
icebp
cld
bound
mov
lods
movsl
pop
repz
fidivs
nop
push
inc
stos
sub
fdivl
int3
sbb
add
insl
lods
insl
cmp
shr
push
rcl
rcrl
int3
add
aaa
jg
jo
mov
sub
xor
aad
out
popa
stos
mov
mov
add
pop
enter
aad
lret
mov
or
in
enter
hlt
daa
dec
add
jne
mov
inc
xchg
push
scas
add
add
imul
dec
xor
adc
jge
mov
shrb
aam
sbb
xchg
xchg
popf
push
fisubrs
dec
xchg
int
pop
cmpsl
imul
cwtl
hlt
sub
or
adc
jmp
push
xor
data16
sbb
and
mov
arpl
xor
dec
pop
mov
xchg
xchg
leave
rcrb
push
dec
dec
jle
shl
ljmp
lret
xlat
cmpsl
cmp
mov
cmp
jne
inc
xchg
pop
jns
mov
std
add
int3
mov
shrl
test
mov
mov
adc
add
push
mov
sarb
mov
aad
add
adc
lock
ror
lds
pop
sub
mov
rol
mov
xor
push
jecxz
pop
cmp
aas
mov
mov
icebp
pop
movsl
mov
sbb
cmpsl
xchg
jg
xchg
call
adc
dec
leave
jl
or
mov
jns
cmpsb
cmp
testl
inc
mov
inc
test
notw
ret
push
pop
jle
sbb
xchg
push
popa
test
inc
ja
aas
and
iret
pop
xchg
cs
xor
repz
and
and
cmpsb
push
or
loope
jmp
mov
ja
in
jmp
adc
stos
inc
shrl
mov
nop
xchg
fadd
mov
das
xchg
aas
pop
out
pop
xchg
je
cli
or
enter
aam
jbe
xchg
or
repz
ja
sub
sbb
loope
ret
sbb
out
pop
das
or
inc
xor
shrl
dec
pop
push
and
ss
cld
pop
cmp
lret
add
outsb
mov
leave
daa
iret
std
mov
loope
push
mov
ljmp
into
es
xchg
push
push
lahf
das
out
mov
addr16
jbe
sahf
ret
mov
jo
or
dec
or
lock
push
cwtl
jl
mov
or
cmc
mov
inc
jmp
shrb
jae
xchg
in
mov
mov
lea
dec
stc
push
xor
jnp
loope
popa
out
pop
stos
jle
cltd
movsb
ss
data16
push
lcall
imul
mov
xor
in
pop
mov
loop
and
and
hlt
xchg
pop
cmp
push
lock
pcmpeqb
dec
rcl
jns
push
and
iret
ficoml
fisttps
inc
cmc
jne
outsb
movsl
sub
daa
xchg
or
xchg
fstpt
adc
call
loope
pop
nop
mov
inc
cmpsl
xor
inc
mov
fdivp
insl
lds
add
lock
jg
scas
push
scas
jl
outsb
xchg
add
adc
insl
popa
ficomps
or
lret
jae
adc
jno
and
mov
xchg
mov
sub
and
add
hlt
xchg
mov
sub
insb
dec
jnp,pn
pusha
adc
jne
out
imul
sub
stc
add
mov
test
jp
sbb
ret
lret
or
sub
fwait
mov
dec
aaa
in
mov
das
repz
in
xchg
push
mov
sub
ret
loop
or
or
xchg
cmpsl
aam
arpl
dec
add
out
lea
push
pop
jle
shl
or
add
jmp
xor
outsb
jge
push
ss
push
std
mov
or
cmc
cmp
imul
xor
mov
repnz
mov
in
adc
add
pop
add
ret
jg
movsl
iret
stos
jno
lds
movsl
adc
aas
cmp
cmpsl
mov
pop
incb
inc
iret
loope
ret
jmp
inc
daa
nop
and
dec
push
push
pop
mov
pop
or
aas
xor
cmc
test
mov
jmp
stos
inc
add
dec
aas
fcoms
dec
cmp
push
insb
aas
jle
xchg
jg
ret
mov
mov
stc
xchg
sarb
test
push
xor
lret
loope
nop
mov
cmp
mov
mov
sbb
jmp
add
cmpsl
or
add
in
fstps
inc
xchg
adc
push
cmp
ja
out
sbb
paddsw
push
inc
push
mov
fbld
adc
lahf
sub
out
xchg
das
int
or
jmp
sbb
call
mov
cwtl
andb
cltd
cmp
pusha
jmp
or
out
add
nop
addl
mov
sub
in
in
leave
nop
mov
out
adc
fsubs
stos
scas
xchg
xchg
add
mov
cmpsl
sub
xor
cli
mov
push
sbb
idivl
push
daa
or
xchg
pop
inc
rolb
stos
pop
das
rolb
push
push
adc
lods
dec
or
mov
sbb
in
xchg
and
imul
fisubl
jl
fstp
dec
fwait
subb
pop
fisubrs
insb
cld
jnp
ss
pop
notl
or
es
jns
sbb
pop
scas
xchg
fsubr
inc
mov
aas
imul
or
testl
or
sbb
and
cld
and
and
fsubl
int3
lahf
pop
mov
es
add
sub
divb
jnp
or
sub
scas
lret
in
or
push
sbbl
adc
xchg
cmp
xor
dec
push
stos
insb
inc
cli
pop
insl
and
mov
fcomp
mov
aad
jae
jl
xor
jecxz
sub
cmp
mov
lods
loope
mov
mov
jle
push
in
test
adcb
lods
test
std
add
sahf
fimuls
outsl
ljmp
out
icebp
pushf
ftst
mov
addr16
pop
mov
jmp
pop
push
not
stos
lods
pop
int
insl
jnp
pushl
mov
dec
cli
aam
dec
movsl
pop
data16
mov
jns
testl
mov
insb
lret
jnp
out
inc
pop
and
add
push
sbb
rorl
and
pop
push
sbb
sbb
or
das
pop
push
dec
and
iret
adc
into
mov
xchg
in
sub
dec
adc
shll
std
push
pop
mov
dec
idiv
es
repnz
aam
push
mov
rclw
push
ljmp
sbb
add
ret
add
scas
or
rcll
addr16
clc
sti
sbb
fstps
testl
push
lods
gs
cmpl
xlat
daa
push
leave
dec
xchg
cld
aam
xor
cld
stc
lods
dec
test
fcmovne
adc
insl
xlat
sub
pop
ds
xchg
cmp
inc
int
and
push
xor
mov
ds
dec
jecxz
adc
or
test
jmp
xchg
shlb
fistps
adc
rol
and
adc
sahf
lret
in
add
out
inc
pop
push
jle
inc
jns
subb
and
fsub
daa
xchg
sbb
lret
les
xchg
in
push
cmp
jae
test
sbb
rorb
adc
pop
dec
sub
mov
mov
push
dec
andb
mov
sub
add
sub
cwtl
adcb
loope
fnstenv
cmp
xor
inc
push
fsubl
adc
xchg
out
fisubs
sbb
xor
out
dec
fidivl
das
fistps
ret
xchg
cmp
sahf
aaa
inc
xchg
inc
aam
jno
ret
sub
insl
sbb
imul
fisubrl
inc
das
jne
push
xor
fwait
sub
test
sub
jg
clc
sbb
sbb
cwtl
push
lret
add
out
orb
rcl
dec
xchg
fs
xor
fsubs
mov
sub
fmuls
std
cld
hlt
int3
cmp
mov
jne
nop
aas
cmp
xor
add
hlt
stc
cmp
pushf
movsl
call
sti
out
jae
adc
insb
iret
int
pop
bound
dec
icebp
mov
rcll
lods
cli
mov
inc
cld
and
mov
push
movsl
add
stos
add
jle
adc
jne
cld
xchg
mov
sub
dec
stos
mov
in
imul
jno
dec
outsb
out
inc
cli
jns
hlt
fiaddl
cmp
mov
add
gs
push
fsubrl
ljmp
insl
and
mov
fstpt
imul
popl
cmp
or
mov
test
push
loope
mov
push
aad
dec
adc
sub
mov
push
jp
imul
insb
jns
ret
imul
insb
fiaddl
push
adc
mov
mov
por
dec
je
stos
jp
add
lret
sub
clc
iret
lods
push
out
lahf
lods
mov
insb
lahf
push
dec
scas
push
xchg
jnp
mov
pop
and
dec
inc
jmp
and
fsub
cmpsl
lea
popl
fiaddl
pop
enter
popa
xchg
xor
bound
bound
pushf
mov
xlat
mov
jl
push
dec
inc
repnz
aas
jg
dec
cmpsl
stc
sub
mov
sbbl
ljmp
mov
xor
out
jmp
ret
sub
cmpsb
push
iret
adc
scas
add
adc
aas
xchg
sbb
insl
lret
jmp
repz
or
xchg
mov
mov
jbe
gs
mov
add
jecxz
aam
dec
inc
jge
adc
mov
std
mov
mov
cmc
mov
int
test
dec
xor
jne,pn
pop
jno
popa
das
stos
fsubr
scas
xlat
loope
sub
xor
bound
lods
fwait
or
imul
imul
mov
je
dec
or
mov
les
xchg
xchg
pop
dec
xor
ret
mov
cltd
fsubrl
rcrb
pop
leave
out
cmc
cmc
jno
pop
lcall
sahf
mov
jbe
call
pop
dec
int
sarb
pop
testl
pop
pop
daa
ja
xor
xchg
adc
inc
lcall
mov
adc
add
dec
adc
out
mov
push
sar
rcll
lret
out
xor
adc
int
mov
cli
sbb
pop
pop
mov
es
xor
mov
mov
adc
mov
cmp
das
out
adc
js
push
ret
mov
adc
in
rorl
mov
mov
mov
ja
pop
repnz
cmp
mov
lods
mov
xor
xchg
push
or
std
mov
and
jmp
mov
push
into
mov
mov
lahf
inc
jnp
and
jne
mov
sbb
mov
or
out
sub
mov
roll
push
push
test
lods
adc
and
imul
popa
and
lret
aad
insl
xchg
push
jo
loop
js
mov
jb
enter
sar
sbb
subl
sub
repnz
adc
stc
ljmp
push
jne,pn
std
and
iret
xchg
pop
cwtl
mov
lret
sbb
pop
in
test
jns
adc
shrb
arpl
push
cmpsb
in
pop
into
test
ret
sub
shl
ret
fs
adc
or
sti
sub
fimull
jbe
scas
fstpl
sbbl
mov
pop
enter
mov
pop
pop
fwait
sub
or
jnp
mov
lock
add
outsl
mov
xchg
cmp
mov
in
jg
mov
movsl
lods
or
rolb
pushf
sbb
mov
fdiv
rorl
sbb
ret
add
ffree
dec
in
repz
and
pop
push
jl
jge
xchg
push
leave
add
add
xchg
sub
icebp
lods
mov
and
dec
test
adc
icebp
add
test
call
pop
pop
js
std
jno
mov
roll
xchg
lret
cmp
ret
mov
sub
lcall
mov
cmovg
xor
popa
out
dec
dec
mov
or
ds
adc
ljmp
test
sbb
xchg
dec
xlat
and
adc
mov
cmp
clc
aam
lea
andl
push
rcrl
rcr
lcall
pop
sub
or
mov
inc
push
mov
push
das
aaa
push
lahf
ret
dec
mov
mov
cs
sbb
icebp
adc
out
xchg
nop
jecxz
inc
test
iret
inc
pop
sahf
mov
pop
arpl
add
cmp
int3
mov
mov
xor
lea
popa
fidivl
test
and
xchg
ss
ror
pusha
in
inc
bnd
stos
sub
sub
mov
mov
jecxz
jle
fsubl
inc
ljmp
cmpsb
add
pop
leave
enter
in
js
loope
xchg
or
cmp
jbe
stc
jnp
popf
xchg
ljmp
xor
cwtl
sbb
pop
pop
movsb
insb
int3
cmp
jl
mov
jne
push
into
out
repz
add
stos
xchg
jl
xlat
pop
cwtl
jo
outsb
cmp
clc
mov
xor
loop
cmp
jp
scas
sbb
or
mov
mov
xchg
dec
cld
cmpb
mov
dec
xchg
add
out
jnp
hlt
jne
jl
sbb
adc
paddsw
sub
pop
inc
xchg
setp
cwtl
bound
pop
sub
pop
cmp
inc
aad
iret
mov
out
add
jle
xchg
imul
or
sbb
pop
iret
push
or
test
push
xor
jle
mov
loopne
std
sub
mov
adc
test
push
mov
add
int3
inc
dec
adc
lds
ret
jns
lea
mov
or
jno
inc
sbb
cld
mov
mov
cwtl
shlb
rcll
ret
subb
in
or
cmpsl
lea
inc
push
js
std
aas
int3
fs
es
push
sarb
movsb
jne
outsl
sbb
mov
es
into
jg
jns
cwtl
mov
lock
inc
push
ja
mov
pop
fsubrp
mov
fsubr
dec
leave
pushf
bound
xchg
adc
test
sti
addr16
mov
insb
jge
push
xchg
pop
cltd
cmp
test
jecxz
mov
nop
icebp
leave
mov
fsubrl
aam
jg
ss
fsubrs
or
mov
push
dec
adc
xor
fwait
dec
mov
dec
icebp
test
xor
inc
jp
sub
push
xchg
ss
notl
mov
lock
call
js
mov
or
pop
mov
loop
and
xchg
jno
icebp
js
rolb
frstor
test
je
addl
inc
pop
pop
out
outsl
test
dec
cmp
inc
shr
mov
cs
jbe
es
sbb
cmpsl
ds
pop
add
mov
xor
out
mov
mov
repz
jp
jecxz
or
nop
lea
dec
xor
data16
gs
mov
pop
jg
push
mov
hlt
aad
mov
mov
adc
lea
dec
out
pop
push
pop
mov
or
daa
mov
sub
dec
test
orl
popf
jle
xor
mov
insl
mov
jmp
xchg
jno
insl
out
sbb
cld
shll
push
mov
dec
test
push
lret
fwait
movsl
dec
ljmp
in
and
repnz
inc
dec
lea
and
fnstcw
jmp
dec
test
lods
js
push
popf
lds
sub
je
out
adc
add
in
mov
pop
add
idiv
adc
cmp
sub
out
xchg
or
dec
in
adc
dec
clc
xchg
inc
test
inc
sahf
jge
stos
std
push
adc
sti
aas
aaa
and
lock
pop
repz
sahf
mov
icebp
lds
xor
xchg
stc
mov
adc
mov
in
and
cmp
mov
mov
das
cs
push
imul
cmp
pop
inc
mov
lahf
fstpl
add
cltd
jecxz
inc
inc
in
mov
aas
adc
lcall
push
xchg
sbb
clc
incb
adc
adc
das
mov
fxch
xchg
les
aas
pop
inc
mov
jne
mov
das
es
mov
mov
enter
addr16
stc
out
test
or
pop
addr16
test
jo
loope
pop
sbb
jl
movsb
mov
xchg
mov
test
mov
mov
dec
xor
notb
pop
or
inc
out
add
pop
arpl
jecxz
rclb
mov
jecxz
outsb
xchg
jecxz
and
adc
sub
daa
pop
pop
nop
fs
jl
mov
mov
jne
push
ljmp
and
shlb
cmp
leave
mov
xor
fwait
jle
aam
orb
or
test
into
shrb
jb
mov
pop
hlt
cmp
fnstcw
jmp
jecxz
popa
addb
inc
or
dec
jmp
enter
in
adc
xor
and
insl
pop
cld
push
push
xor
fstpt
adc
mov
mov
fnstcw
out
mov
in
shrb
mov
xchg
xchg
mov
dec
lock
popa
add
sahf
loopne
jnp
mov
imul
and
sti
int
cmpsb
in
inc
sarl
xor
sub
lret
cmp
or
jge
cmpl
inc
inc
xor
test
ds
cmpsl
add
aas
pop
cmp
fldenv
jg
mov
push
cmpsb
icebp
adc
incb
mov
cld
mov
stos
adc
pop
in
shl
xor
xchg
mov
inc
sub
mov
stos
cmp
add
sub
aaa
and
fnsave
lahf
jg
cmp
jg
xchg
dec
scas
or
aaa
imul
and
fmul
movsb
pop
mov
lods
inc
popf
jl
inc
dec
adc
pop
aad
mov
xchg
jp
fwait
add
pop
sti
sbb
add
dec
mov
mov
sub
push
fldenv
push
jmp
cltd
jns
jmp
pop
aaa
or
hlt
out
icebp
mov
ret
jp
and
mov
aam
cmp
add
into
nop
and
mov
mov
dec
bound
jecxz
insl
pop
push
push
lods
ss
add
int3
sbb
jmp
orb
rcrb
inc
imul
fisubs
popa
jg
mov
insb
pop
push
mov
iret
lock
push
outsl
hlt
inc
adc
cwtl
mov
add
xchg
lds
cmpsb
mov
pop
mov
movl
fwait
mov
or
push
dec
repnz
mov
cli
ds
mov
repnz
int
jp
int
insl
lds
adc
rclb
repnz
data16
fiadds
insb
mov
push
sub
add
fimull
das
stos
pop
clc
inc
sub
inc
jmp
std
enter
xchg
bound
adc
cmp
hlt
sbbb
imul
xor
or
push
sbb
pop
and
clc
pop
cmp
jo
dec
lods
data16
lahf
test
xchg
adc
jmp
les
sbb
pusha
pop
mov
dec
adc
push
jo
ss
mov
inc
pop
test
imulb
xor
or
ret
outsl
int3
or
push
dec
sub
mov
ljmp
movzwl
inc
in
ljmp
arpl
inc
popa
and
jmp
jge
fnstenv
popf
inc
out
orl
mov
jmp
sub
nop
dec
push
adc
cmc
xor
xorb
scas
push
dec
and
and
pop
inc
sbbl
jbe
fistl
dec
lret
stc
fisubrl
jb
mov
mov
mov
cli
fdivl
scas
xchg
pushf
and
inc
jb
int3
mov
push
push
jl
xchg
jmp
cmc
xchg
sub
sub
test
bound
xor
push
pusha
icebp
xor
ret
enter
fimull
and
fdivrl
jb
adc
pop
push
cmp
dec
outsl
jns
sub
ds
push
and
cmpsl
jb
addr16
jecxz
adc
lahf
pop
js
inc
and
dec
push
testl
jne
mov
mov
mov
mov
std
jo
lahf
fmulp
xor
aam
pop
repz
nop
sbb
data16
jno
sar
push
stc
cwtl
rolb
inc
jb
jo
inc
popf
and
jl
cmp
js
test
sti
scas
mov
mov
fistps
es
ljmp
ljmp
xchg
icebp
mov
inc
in
push
or
mov
into
into
in
or
push
inc
cmp
inc
lods
ja
lcall
add
shll
mov
jno
test
arpl
sub
sbb
popf
mov
sub
push
xor
push
insl
outsl
mov
dec
mov
rorb
andb
cmp
int
push
add
test
aaa
test
out
decl
scas
filds
pusha
inc
push
pop
cmp
loop
cmp
dec
inc
push
lcall
and
inc
mov
xchg
jp
outsl
out
pop
cmp
mov
stos
gs
jmp
aas
fcomps
sarl
out
mov
mov
xor
push
adc
les
cmp
dec
jge
lcall
ret
dec
out
rcl
sahf
mov
cmp
sub
xchg
xchg
add
xchg
pop
pop
js
cmc
out
mov
inc
sub
add
xor
cmc
aam
push
pop
cltd
jl
fldt
xor
mov
std
popf
dec
sahf
xchg
mov
or
jp
cmpb
jmp
lods
mov
data16
lcall
flds
add
push
in
xchg
xchg
add
add
push
push
leave
pushf
and
push
dec
lret
repnz
add
inc
jg
enter
mov
fsubrl
mov
push
push
ja
inc
sahf
cmpsl
xchg
sbb
mov
xchg
sbb
and
mov
adc
mov
pop
cmpl
das
jg
mov
lret
jg
loopne
hlt
mov
insl
push
push
cli
lods
ss
jns
lahf
aam
orb
cs
jge
arpl
enter
fidivl
mov
int
rcr
push
mov
divl
mov
cmpsl
test
sub
push
pop
mov
cld
arpl
lahf
stos
push
mov
xchg
leave
sub
jns
out
aam
add
ret
lea
cli
dec
loope
add
mov
pop
mov
xchg
mov
sahf
add
xchg
jle
dec
imul
jns
sub
or
daa
movsb
xor
insl
xor
cmpsl
pushl
js
mov
insb
sub
sti
xor
lcall
sub
push
mov
movsl
ljmp
cmpsl
dec
shll
push
ss
jno
jnp
push
mov
mov
int3
daa
mov
pop
imul
jno
movsb
test
clc
ds
or
sbb
inc
jb
adcb
mov
xchg
xchg
or
fdivrs
js
adc
xchg
movsb
leave
sbb
and
scas
outsl
shrl
notl
aaa
out
call
jb
jge
xor
daa
jmp
add
adc
out
stos
pop
inc
jmp
call
fcomps
xchg
shrl
repnz
jbe
push
pop
in
or
mov
cli
outsb
aad
add
scas
mov
jnp
iret
fcoml
out
sub
mov
mov
mov
stos
jmp
mov
ret
cs
lea
inc
movb
neg
xchg
inc
bound
xchg
jno
xchg
push
add
lods
jno
int
fdivl
ret
mov
inc
xchg
scas
enter
popf
rcrl
shr
scas
cwtl
dec
sub
imul
xchg
pop
adc
mov
and
popf
ret
fidivs
pop
and
dec
test
lods
ljmp
call
enter
push
push
movsb
jb
mov
xlat
addb
add
dec
movsb
das
es
or
xchg
push
push
stos
lret
movsl
arpl
pop
jg
ret
lret
mov
imul
sbb
pop
insb
enter
inc
cmp
mov
int
js
mov
push
pop
jge
cld
xchg
cld
fstpt
and
push
imul
pushf
mov
mov
pop
add
or
lods
xchg
sub
fidivs
sbbl
insl
dec
cwtl
inc
mov
cmp
mov
faddl
xor
addr16
loop
out
orb
int
ficoms
mov
fistps
out
jo
mov
sti
loopne
dec
insb
movsb
fcomp
cmpsb
sbb
sub
push
pop
es
gs
sub
test
sub
dec
lcall
rorb
aam
dec
xor
in
xchg
mov
mov
sub
loopne
xor
inc
rolb
int
lods
xor
xor
push
dec
mov
cmp
jne
push
push
push
scas
xor
mov
mov
jmp
xchg
adc
out
mov
notb
into
pop
ja
fstpt
jno
xor
lcall
stos
filds
mov
add
nop
mov
mul
lds
repnz
jbe
pop
repnz
outsb
push
movsb
addl
rsqrtps
dec
insb
mov
dec
push
stos
cmpsl
xchg
cli
ret
inc
stos
jg
or
aad
outsb
ja
ret
into
movsl
mov
repz
testl
adc
and
dec
pushf
mov
es
mov
dec
mov
arpl
nop
je
xor
adc
sbb
pop
jno
mov
inc
flds
dec
outsl
cli
push
decl
add
mov
ds
adc
jle
iret
sub
imul
ljmp
insl
pushl
leave
add
add
enter
stc
pushf
jecxz
mov
nop
inc
pop
adc
imull
popa
mov
jne
inc
insl
xchg
mov
sti
das
cld
lock
xlat
sub
cwtl
cmpsb
clc
hlt
pusha
jge
and
dec
out
ss
pop
jp
in
xchg
out
lret
out
mov
push
jbe
ljmp
adc
stos
pop
cmpsb
in
adc
aas
jle
pop
mov
data16
lods
stos
pusha
ret
repnz
imul
hlt
mov
mov
ret
jae
scas
cmp
icebp
subb
lods
and
mov
cmc
xchg
aaa
test
adc
mov
bound
mov
testb
add
mov
cmp
arpl
mov
mov
push
mov
xlat
and
ret
lods
aam
ret
add
ss
pop
jno
push
imul
movb
push
lock
pop
cmp
data16
sub
cmpsb
nop
gs
pop
das
mov
and
fsubr
pop
adc
ds
pusha
xchg
rorl
imul
push
loop
jle
mov
mov
test
scas
cmp
fs
mov
addr16
xor
cmc
xchg
jae
fbstp
dec
rclb
push
fyl2xp1
push
pop
stos
pushl
or
pop
repnz
jae
pop
cmpsl
jecxz
cmc
bnd
jo
mov
push
test
sub
xor
push
add
test
loope
ss
das
outsb
ds
inc
lods
rcrb
mov
inc
sub
icebp
mov
pop
lds
jae
gs
inc
clc
mov
push
dec
inc
jno
jle
sbb
add
jg
and
xchg
mov
in
mov
sub
nop
adc
inc
mov
and
add
pop
dec
pushf
fisubrs
pop
sarb
dec
jnp
pushf
pop
inc
dec
hlt
pop
cmp
sbb
add
aam
lds
in
stos
sub
ret
inc
iret
xlat
mov
push
mov
add
add
clc
sarl
mov
insl
jge
jne
stos
movsl
rcrb
jae
push
sub
or
adc
xchg
push
mov
stos
jb
testb
push
fwait
xor
cmp
scas
cwtl
xchg
fucom
repz
and
xchg
out
mov
xor
inc
pop
jns
inc
fiadds
das
dec
sub
lock
std
xor
sbb
cmpsl
push
daa
pop
sub
insb
movl
scas
pop
mov
and
cmovb
cli
cmp
inc
sub
fisubrl
sahf
pop
cmp
sub
dec
pop
xchg
xchg
jae
jb
or
punpckhdq
add
imul
jge
push
dec
ret
push
push
out
cmp
ljmp
push
xchg
aas
push
movsl
or
push
xor
sbb
xlat
mov
sbb
cmp
mov
sub
pop
rol
fcompl
cmpsb
test
sub
faddp
fisubrs
adc
movsl
clc
in
cli
insl
or
dec
pop
stc
insb
mov
jl
mov
jge
mov
rcrl
adc
outsl
dec
frstor
negl
mov
mov
insb
jle
and
sbb
cli
sbb
xchg
hlt
sub
and
jl
fbstp
daa
mov
or
push
dec
ds
mov
sahf
sub
jge
xchg
inc
dec
cmpsl
fsubp
pop
setb
rcr
inc
stos
fdivl
fidivl
mov
mov
jno
subl
lds
subb
sti
cmp
mov
dec
adc
dec
lock
cmp
ss
rcr
sbb
lret
mov
xor
jno
int3
mov
into
mov
fbstp
jo
jecxz
pop
xor
dec
decl
inc
pop
and
lret
sbb
push
scas
cmp
dec
aaa
call
enter
fstpt
lea
je
pop
pop
xor
jecxz
mov
shll
pop
mov
shlb
or
xlat
out
dec
mov
nop
ljmp
sub
out
gs
in
mov
dec
adc
xor
or
out
fisubrl
stos
dec
adc
jne
sub
cmp
xor
adc
cltd
xor
mov
lcall
cmp
sub
jno
xorb
push
xchg
lret
mov
vhsubpd
and
jb
imul
push
inc
js
cmpsb
sub
adc
add
sub
cmp
dec
test
lahf
inc
int
pop
mov
sahf
jl
movsl
mov
mov
sub
mov
sbb
sarb
dec
popa
mov
stos
xorl
psraw
sbb
jo
jl
jge
lods
push
ror
jmp
sub
ror
scas
cwtl
insl
or
clc
call
and
outsl
inc
fisubs
fdivr
push
call
sbbb
lcall
pop
jecxz
mov
call
cmpsb
in
pop
jo
into
test
test
xor
pop
lret
sbb
fcomps
add
adc
mov
cmp
lahf
mov
xor
mov
sub
mov
mov
and
leave
roll
decl
add
les
negb
cltd
pop
dec
xor
sub
fistps
pop
xor
fcomp
push
les
fsubs
aas
movb
popa
stos
lret
pusha
pop
adc
push
sti
xchg
xchg
hlt
cmpb
mov
ja
addr16
aam
inc
cmp
mov
imul
mov
mov
stos
insl
int3
into
dec
addb
mov
out
cmpl
push
lret
out
mov
mov
pop
inc
dec
xchg
lods
enter
jno
or
out
inc
ds
cli
mov
jecxz
enter
mov
or
fidivrl
pop
mov
xchg
shrb
and
xor
ljmp
sbb
or
cmp
push
int3
pop
cli
mov
cmp
sbb
and
push
sbb
scas
or
jmp
pop
mov
xlat
fdivrl
outsl
jns
push
cli
jecxz
clc
mov
mov
inc
aaa
cmp
mov
jbe
ret
mov
push
pop
ret
mov
inc
cmp
add
inc
or
sub
dec
jecxz
xor
xlat
mov
cmp
inc
mov
das
mov
out
jl
loope
cmc
push
cmpsl
stc
jnp
xor
bnd
aad
lcall
or
call
outsl
jo
popf
xor
imul
dec
pop
ljmp
fisttps
fdivrl
scas
inc
mov
das
add
cwtl
pop
data16
not
add
mov
cmp
movsb
inc
mov
pop
fnsave
aad
ret
lods
xchg
or
push
shll
dec
jns
cmpsb
sar
push
les
push
aas
jb
pop
ja
xchg
and
add
or
mov
add
leave
mov
imul
jg
stos
outsl
lds
outsb
mov
mov
sub
or
stos
fisubs
out
mov
lahf
sbb
push
shrb
adc
lods
mov
jne
addr16
mov
movsb
out
push
in
xchg
or
or
outsb
mov
ss
data16
jo
jecxz
push
je
mov
sbb
pop
jbe
pop
sbb
mov
stos
pop
mov
mov
pop
pop
jl
icebp
jl
cmp
int3
mov
xchg
push
pusha
sahf
pop
aam
xor
test
pusha
push
mov
cmp
das
cltd
cmpb
xchg
and
add
test
mov
mov
mov
mov
icebp
ret
mov
or
hlt
jo
insl
sbb
out
jo
mov
test
inc
jbe
xor
xor
and
movsb
xchg
sbb
adc
mov
arpl
adcb
cmp
dec
adc
mov
pop
push
sub
xor
cs
mov
inc
and
xchg
cltd
sub
scas
leave
test
jbe,pn
insl
adcl
hlt
mov
test
imul
das
xchg
inc
test
jmp
daa
gs
in
inc
mov
cmpsl
fs
xchg
dec
jg
call
test
push
fadd
mov
not
or
inc
rolb
dec
cmp
fisubl
or
mov
pushl
pop
test
lea
adc
or
scas
mov
xor
dec
mov
sbb
arpl
pminsw
pop
jnp
loopne
bound
xchg
or
mov
je
lret
pop
sahf
push
lret
or
sbb
stc
mul
and
fxch
or
sub
inc
into
in
cmp
ret
movsl
icebp
test
mov
aas
fiadds
test
jae
cmpsl
add
mov
fcmovne
jle
movsl
sub
jl
sbb
sub
push
rcrb
dec
sti
cs
mov
mov
ds
div
shl
sarb
dec
jae
ret
mov
jmp
enter
mov
push
push
decl
push
push
mov
outsl
push
xchg
or
mov
jge
cmp
popf
rcrb
jne
mov
test
gs
out
in
xor
push
mov
jo
aam
or
inc
cmpsl
fcomp
dec
lea
adc
leave
sahf
sbb
cmpsb
pop
adc
jno
sbb
out
test
sub
addl
in
hlt
inc
push
rol
pop
int
sbbl
mov
mov
push
mov
push
sbb
scas
shll
imul
hlt
insb
in
ja
add
jg
repz
lcall
mov
xor
daa
mov
sub
and
jle
mov
mov
xchg
sub
mov
divl
mov
repz
fwait
or
or
and
jbe
mov
mov
fnstsw
shrl
push
popa
xlat
in
mov
out
aaa
popa
je
fwait
jl
js
lods
insb
ret
inc
mov
mov
and
lahf
jb
push
push
xor
pop
arpl
dec
test
xor
add
gs
jp
xor
sbb
dec
mov
xor
lret
jmp
inc
lret
ds
sub
es
movsl
lahf
fildll
mov
push
inc
arpl
jbe
dec
sbb
cmpsl
mov
fsts
test
dec
les
mov
pushf
addr16
gs
xor
fwait
inc
frstor
jb
cmp
loop
push
inc
add
mov
mov
jbe
fldt
cmp
cmp
dec
mov
adc
adc
movsb
dec
je
sbb
je
sbb
leave
aas
push
mov
loop
int
dec
inc
out
out
in
sub
and
cmp
jmp
loopne
andb
and
xchg
lods
xchg
sub
mov
cmp
imul
fistps
shrl
movsl
cmpsb
and
sbb
and
insb
fstps
push
lock
inc
push
leave
stc
jle
mov
adc
dec
fnstenv
pop
data16
jbe
leave
mov
test
or
mov
sbb
dec
dec
mov
adc
sub
xchg
fmuls
push
outsb
add
ja
pusha
inc
popf
jne
mov
and
insl
mov
mov
xor
jnp
inc
xor
or
xlat
inc
mov
out
inc
dec
push
jp
js
sti
xchg
xchg
aas
jo,pn
loop
push
out
mov
mov
adc
cmp
je
bound
inc
jo
loop
or
dec
mov
insl
test
pop
out
mov
int3
jbe
bound
adc
push
xchg
loop
shrl
stos
mov
clc
aaa
jae
movsb
add
daa
adcl
dec
mov
inc
movl
and
fists
sbb
inc
dec
call
cltd
or
xor
mov
dec
jl
dec
movsb
repz
add
jmp
dec
mov
pusha
mov
sahf
popf
jb
or
or
adc
fstpl
bound
mov
push
xchg
enter
mov
mov
xor
pop
aas
sub
xchg
neg
adc
mov
out
arpl
xchg
cmpsl
fs
cld
jno
push
xor
xorb
daa
push
cmp
fidivrl
sbb
outsl
inc
dec
stc
iret
nop
ljmp
xchg
jbe
sarb
push
inc
fdiv
lret
in
jg
inc
out
movsb
cmp
xchg
sbb
adc
push
xchg
out
imul
out
mov
inc
movsl
add
xor
std
lret
pusha
sbb
sbb
cmp
fsubrp
mov
fucomp
fisubrs
shrl
pop
decb
ja
ss
xor
adc
sti
ja
xchg
mov
divl
xchg
lahf
fnstcw
jg
inc
das
cmc
out
mov
xchg
ror
or
sub
out
inc
addr16
ret
and
xor
dec
das
pop
jb
enter
sub
loopne
popf
repnz
popa
jnp
mov
je
sti
in
xlat
xchg
and
call
dec
aam
mov
mov
pusha
dec
imul
xchg
insl
xor
xlat
pop
xchg
mov
mov
mov
xchg
xor
fwait
dec
stos
scas
push
scas
pop
push
fistpll
mov
jl
ja
cmp
cmpb
mov
xchg
or
adc
inc
fwait
cmpsb
sub
inc
or
cmp
jae
push
sub
xchg
insl
je
rcll
daa
out
test
and
enter
test
ss
fnstenv
icebp
push
mov
jmp
pop
out
arpl
ret
adc
xchg
rcll
and
lea
outsl
push
push
jmp
inc
push
pop
or
out
mov
jmp
testl
lea
or
jle
adc
fidivs
je
sub
push
enter
outsb
out
repz
xor
sub
andb
xchg
dec
outsb
clc
aaa
and
shlb
push
mov
inc
mov
pop
inc
stc
add
aam
mov
idivb
dec
or
repz
faddl
pop
or
in
fwait
adcl
cld
outsl
ss
clc
and
test
es
mov
jno
sub
js
fisttpll
pushf
ja
or
loope
adc
ds
mov
jp
icebp
add
testb
aaa
out
fwait
sbb
fs
sub
cltd
sub
movsl
fcmove
xchg
out
pushf
lock
std
mov
nop
stos
mov
adc
and
mov
pop
test
mov
imul
leave
push
and
inc
sub
mov
aam
dec
mov
iret
ljmp
push
inc
xchg
and
je
stos
xchg
push
rcl
push
addps
rolb
or
add
push
jecxz
orb
pusha
inc
ja
or
sbb
enter
iret
jecxz
stc
cld
dec
cmp
arpl
leave
inc
daa
sub
mov
popf
nop
clc
test
adc
ljmp
adc
inc
jne
dec
mov
rcl
outsb
xchg
xchg
ss
xchg
mov
daa
dec
add
cli
rorl
dec
jg
shlb
push
mov
lret
rcrl
jmp
ret
out
into
mov
in
ds
jns
push
in
mov
or
jmp
or
enter
ret
fidivs
mov
add
loop
mov
sarl
repz
or
add
sbb
inc
jb
and
out
sub
mov
cmp
out
xlat
dec
add
pop
cs
repnz
xchg
jecxz
jmp
imul
and
xor
push
mov
fsts
rorb
daa
push
jp
add
jl
sub
repnz
pop
test
xor
lods
cmp
jnp
int
push
aas
or
jns
out
cmp
add
push
mov
push
xor
inc
xchg
push
incb
push
push
leave
gs
jecxz
mov
fs
xchg
mov
mov
dec
in
testl
jle
jge
mov
js
mov
iret
mov
push
xor
mov
mov
jnp
xchg
lret
push
jbe
sahf
push
out
mov
fsubr
fsubrs
mov
jns
mov
rcrl
js
add
add
jecxz
ret
xor
push
jns
aas
pop
and
stos
jns
sub
sub
sahf
mov
testb
icebp
data16
addl
movb
xor
mov
ds
mov
cltd
fwait
data16
dec
push
xor
jmp
mov
pusha
xor
movsb
mov
mov
aam
push
es
lods
call
cltd
mov
or
jo
push
mov
xor
cmp
push
jge
jb
cmp
mov
popf
inc
cmp
adc
push
loope
out
or
lahf
scas
cmpsb
and
das
pop
xor
xchg
adc
sbbl
mov
gs
jne
shlb
stos
xor
sbb
or
shll
adc
fs
mov
fcompl
or
jo
dec
loopnew
dec
aaa
lahf
decb
xchg
add
es
in
fisttpl
sub
int
inc
adc
lcall
jbe
mov
in
imul
sub
xlat
test
hlt
sbb
jne
xchg
cmc
inc
push
mov
fdivl
add
fstpl
jne
mov
cmpsb
cwtl
push
xor
push
jg
xchg
pop
add
inc
divw
cmp
je
jb
das
clc
mov
dec
es
ljmp
repnz
sub
adc
mov
dec
and
adc
shrb
loope
dec
xor
or
sub
lds
es
sub
adc
je
sbb
mov
test
add
js
jnp
loopne
insl
rcr
mov
pop
xor
jg
jl
out
cmp
pop
inc
pop
stos
mov
popf
iret
add
popa
cmc
xor
pop
cmp
pop
xchg
push
adc
fisubrs
adc
insl
shr
dec
mov
jge
nop
pop
es
mov
jmp
fcoms
fistpll
aaa
lds
test
jp
lds
adc
fiadds
push
movl
adc
fwait
lods
in
pushf
rcl
xchg
inc
lds
xchg
jno
test
adc
pop
fdivl
pop
scas
shll
sub
std
dec
xor
aad
pop
enter
sbb
dec
arpl
in
dec
add
ds
sbb
aas
ret
adc
subl
pop
out
in
out
jno
cld
int
rcr
cmp
mov
iret
inc
mov
mov
daa
jg
pop
sub
in
push
mov
addr16
das
incl
dec
repnz
inc
cmp
inc
mov
pop
xor
or
dec
add
push
mov
mov
cmp
xchg
stos
repz
mov
xchg
and
or
fdivs
insb
outsl
xor
stos
ss
adc
and
add
sub
adc
inc
js
aas
dec
sbb
cwtl
jg
popf
inc
adc
pushf
nop
mov
aas
mov
mov
scas
daa
js
aam
dec
dec
ljmp
dec
xchg
cwtl
bound
xor
out
mov
imul
and
xor
inc
or
xchg
fistpll
inc
push
or
lds
fwait
jl
pop
pop
int
pusha
repnz
div
nop
aas
arpl
pusha
pop
popa
mov
in
outsb
test
into
dec
pop
in
imul
or
sub
enter
test
pop
imul
mov
cmp
mov
in
adc
shrb
sbb
popa
pop
fcoml
lea
mov
add
shl
dec
dec
jb
mov
mov
dec
test
cld
pop
shrl
icebp
scas
popf
adc
out
sub
popa
sbb
mov
cmp
lret
push
or
or
outsl
flds
inc
outsb
add
jbe
imul
fbstp
sbb
jo
clc
cmpsl
add
sbb
or
out
or
pop
pusha
jp
cmp
mov
lret
sub
inc
jmp
fsts
or
pop
mov
and
scas
xor
fildll
sahf
push
push
cli
clc
cmp
mov
in
ficoml
push
aas
xchg
mov
cmp
in
add
in
repz
inc
lahf
enter
push
xor
xchg
stc
or
pop
sub
scas
xor
cmp
mov
pushaw
push
aas
xor
sbb
in
leave
sahf
mov
inc
pop
rclb
and
push
add
sbb
hlt
xchg
sarl
adc
in
and
push
inc
cmp
and
subl
add
dec
js
mov
mov
cmp
in
inc
stc
stc
std
push
cli
and
mov
cmp
jb
mov
adc
inc
or
subl
pusha
pop
mov
sbb
into
dec
pop
push
repnz
bound
lods
es
xor
pushf
movsb
push
insl
inc
dec
cmp
frstor
pushf
fcomi
negb
and
ret
ljmp
fdivrp
mov
insl
pop
sarb
incl
cmp
cmpsl
data16
cmp
scas
data16
xor
cmpl
inc
aaa
xorb
mov
cmp
mov
out
jno
add
imul
outsb
mov
inc
int
fwait
add
dec
pop
popf
jne
in
dec
or
xor
cmp
sbb
sbb
cmpsl
xchg
aas
icebp
sub
and
rcll
fdivl
push
nop
icebp
xchg
pop
dec
mov
outsb
sti
dec
loope
add
dec
push
lods
les
cmp
adcb
lahf
xor
and
cmc
lahf
outsb
push
xchg
es
mov
jo
sub
mov
scas
jns
inc
lods
cmp
xorl
in
add
test
gs
cli
in
aam
lret
fistl
mov
mov
xchg
loop
insb
notl
and
sbb
xor
lcall
or
pop
out
push
adc
loop
ja
lods
cmpsl
rolb
push
mov
mov
jns
dec
sbbb
push
jbe
pop
loop
add
clc
inc
pop
pop
fidivs
adc
mov
inc
jecxz
scas
shrb
xchg
or
adc
ds
outsl
stos
fwait
push
in
into
dec
fidivs
mov
lea
fdivl
out
xor
mov
inc
and
ret
cmp
lods
jae
inc
in
dec
das
pop
mov
inc
push
add
fwait
dec
jl
xchg
ljmp
mov
lret
test
es
imul
mov
adc
sti
nop
iret
jns
iret
inc
push
inc
dec
fiaddl
jno
pop
dec
js
jp
push
mov
push
fildl
cmp
sub
xchg
and
push
pop
fs
test
pop
imul
cmovs
lock
sahf
jmp
call
inc
out
nop
xor
lds
xlat
cmpsb
inc
push
mov
shlb
jne
test
loope
dec
inc
fsts
jg
and
loop
mov
xor
jb
inc
and
pop
cmp
sbb
pop
es
call
mov
inc
movsl
lahf
and
mov
out
lcall
negb
fpatan
dec
add
xor
lock
and
rorl
imul
xchg
into
jno
cmpl
xor
xchg
imulb
inc
mov
pusha
lcall
imul
stos
fimuls
cwtl
les
gs
or
js
jns
test
jbe
dec
xchg
scas
pop
pop
popa
add
stos
in
aam
sub
icebp
mov
or
adc
cmc
fs
xor
fistps
sub
and
pop
andl
sub
pop
jnp
adc
dec
jl
out
push
jl
mov
loop
loope
fisubrs
xchg
outsl
jb
loop
dec
js
jl
sahf
cmp
mov
pop
xor
cmp
mov
xchg
sbb
push
pushf
jg
sarb
scas
jns
jp
mov
mov
mov
les
jnp
jne
cmc
push
outsl
repz
pop
push
jge
popa
adc
iret
jge
ficoms
xor
xchg
sahf
cmp
dec
test
lods
or
push
xchg
push
outsl
fs
cmp
sbb
inc
scas
sbb
iret
mov
enter
addr16
test
or
nop
sub
add
jmp
in
sbb
dec
ljmp
push
mov
xchg
and
xchg
sbb
icebp
jae
je
lods
test
icebp
inc
lahf
pop
out
gs
imull
sub
imul
mov
fsubr
popf
mov
rol
mov
push
call
fcompl
faddl
dec
inc
cltd
push
pop
mov
mov
pop
cli
les
pop
cmp
stos
loope
dec
ja
aad
pop
inc
add
mov
pop
mov
lcall
push
mov
mov
ret
cmp
div
fstps
clc
dec
add
subb
mov
mov
rclb
xor
jmp
and
jmp
jne
mov
push
test
inc
dec
fadds
rolb
dec
fcmovnu
and
add
lods
roll
aas
cmpsl
and
daa
stc
shl
vaddps
lcall
sub
mov
and
mov
xchg
outsl
push
and
aaa
pusha
std
fiaddl
decb
pop
cmp
insl
rclb
fwait
cltd
ret
pop
outsb
mov
jne
cmp
adc
xchg
rcll
jg
arpl
je
push
pop
sub
cmp
repnz
push
sbb
mov
inc
stos
icebp
pop
sub
out
mov
and
out
mov
or
inc
pop
or
gs
js
inc
sub
loopne
cmp
gs
or
xor
sbbl
fucomp
ficoms
adc
repz
out
and
cmp
and
lret
repnz
or
ret
inc
mov
mov
inc
cmp
pop
insb
xchg
push
rclb
iret
mov
adc
push
inc
adc
test
mov
outsl
js
jmp
sub
data16
daa
xchg
pop
stos
pop
or
xchg
sbb
xchg
cmpsb
xor
ds
rorb
inc
cmp
movsl
cmp
xor
in
pop
pavgw
push
cmp
movsb
push
cmp
aaa
data16
jnp
nop
and
sub
mov
in
idiv
mov
lea
xchg
sbb
and
movsl
jo
fsubrl
popf
mov
and
xchg
pop
fildll
jecxz
inc
push
xchg
xchg
jnp
in
or
fistpll
push
mov
js
mov
inc
jns
xor
mov
mov
je
test
jne
add
jp
repz
jle
dec
sbb
loop
mov
fs
aaa
sbb
jp
push
and
pop
push
pop
sarl
and
inc
mov
iret
sti
je
scas
adc
add
fnstcw
pusha
mov
aam
shl
inc
sbbb
push
xor
and
pop
insl
ljmp
jo
xchg
mov
aas
inc
mov
lret
sbb
mov
pop
les
mov
out
sbb
outsb
icebp
inc
fisubrs
xchg
call
les
jo
sub
adcl
jp
push
arpl
push
xchg
jno
mov
mov
jle
sbb
sbb
outsb
adc
leave
lock
cmp
mov
add
sbb
push
dec
mov
jl
or
scas
data16
mov
sbb
and
jmp
sbb
sbb
lret
std
sahf
clc
pop
mov
xor
mov
sahf
jmp
inc
lds
insb
js
dec
xchg
push
shll
es
sub
xchg
sub
inc
jle
lock
push
dec
mov
xor
pusha
inc
cmpsb
movsl
jle
sbb
pop
and
sti
adc
mov
xchg
out
cmc
pop
mov
dec
mov
les
ret
mov
ficoms
xchg
jecxz
mov
incb
lcall
adc
rcll
jo
movsl
mov
cmpsl
mov
sbb
adc
insb
dec
adc
xor
inc
jae
ficompl
loopne
icebp
mov
int
cld
nop
inc
lea
cmp
inc
gs
cmp
push
lods
in
jge
sahf
mov
fidivs
int3
outsl
jg
mov
std
push
pop
jp
xchg
inc
jp
cld
dec
leave
iret
int3
fldl
inc
jne
inc
mov
das
mov
or
dec
inc
jge
or
or
cmpl
call
and
sbbl
subl
sahf
jmp
dec
cmpsl
sahf
sub
cmp
imul
je
pop
inc
nop
loopne
fnstcw
lret
ss
out
sbbb
push
in
das
in
or
xchg
mov
shrl
aaa
add
add
orb
push
es
push
inc
loop
inc
pop
lahf
sub
mov
stos
pop
jnp
xor
adc
inc
insb
cmp
mul
pusha
bound
xor
fucompp
fstpt
aaa
gs
adc
sbb
scas
movsb
pusha
jmp
push
cmp
je
lahf
xchg
xchg
adc
je
sbb
data16
xor
fistl
inc
xor
mov
jge
icebp
repnz
or
popf
int3
incl
jp
push
adc
jg
lret
testb
lcall
ficomps
pop
lock
xor
int3
push
push
adc
and
cmpsb
test
inc
bound
mov
mov
inc
push
xlat
sbb
xchg
inc
push
es
int
pop
mov
add
clc
fcompl
popf
and
insb
xchg
push
stos
leave
nop
lret
mov
jge
dec
decb
mov
xchg
stos
pop
cmc
xor
mov
dec
jb
es
gs
sbb
jl
insb
mov
dec
mov
and
dec
jecxz
mov
inc
cmpl
lea
leave
icebp
mov
fwait
jle
xor
sbb
push
je
adcl
dec
sarb
or
pop
cmp
or
mov
dec
shrb
leave
sub
imul
lret
insl
mov
mov
sbb
scas
pop
roll
in
or
adc
mov
jmp
shll
dec
cmpsb
mov
mov
or
out
pop
ljmp
stos
pop
rcrl
test
inc
fldenv
lahf
loopne
int
mov
jecxz
sbb
notl
mov
fcmovne
mov
mov
mov
jno
divb
repnz
dec
push
jo
add
adc
mov
mulb
fs
and
int
push
pop
xor
add
sub
sbb
dec
insb
adc
jnp
sbb
jg
xchg
mov
inc
lds
jge
mov
mov
cld
aam
mov
lods
dec
insl
pop
imul
xchg
scas
lea
incl
push
ret
fs
mov
sti
orl
xchg
xor
ret
flds
xor
ljmp
jae
in
addr16
mov
push
and
flds
lods
into
fdivrs
adc
mov
inc
fcmovnb
pop
in
rcll
jp
das
and
mov
jnp
fbstp
xchg
insl
pop
lcall
adc
sahf
jl
vrsqrtss
dec
outsb
or
push
fisttpll
add
call
mov
out
lcall
jns
out
cmp
mov
jp
inc
jmp
test
pushf
mov
outsb
aaa
call
push
popa
ror
inc
nop
or
addr16
mov
int
xor
in
fs
xchg
inc
faddl
inc
inc
adc
pop
je
or
mov
sub
fcompl
inc
lahf
jbe
mov
jae
arpl
jecxz,pt
shll
outsl
or
cmc
dec
dec
xlat
out
lods
or
adc
mov
adc
jnp
addb
je
xchg
cmp
popf
mov
jmp
jg
mov
mov
hlt
aam
sbb
sub
iret
int
add
push
out
cwtl
ret
adc
out
filds
fadds
xchg
pop
shrb
dec
push
dec
sarb
pop
gs
aaa
dec
out
hlt
adc
mov
sbb
mov
xor
gs
and
fcos
lea
mov
xchg
shll
rol
inc
or
xor
cmp
xor
filds
pusha
sbb
mov
jp
loop
sarb
test
push
dec
stos
jp
stc
sub
lds
iret
sbb
cmp
in
in
ss
mov
ret
cmp
cmpsl
add
fimull
pop
add
jge
aas
xor
mov
mov
adc
adc
pusha
mov
dec
xchg
xchg
mov
aas
out
jl
mov
lret
adc
les
and
outsb
shll
xor
lds
repz
pop
fbstp
and
lock
es
rcrb
imul
dec
and
jne
shlb
idivl
test
add
and
repz
adc
mov
pop
popf
xchg
inc
dec
fnstenv
add
jb
mov
lods
mov
mov
jae
jge
mov
mov
pop
cmp
sti
mov
scas
jle
mov
sub
pop
int
fdivr
jl
rcrl
xchg
add
jbe
mov
jmp
enter
inc
push
lds
ret
aad
mov
cmc
mov
test
imul
fidivrl
pop
fcmovu
xchg
hlt
ret
push
sub
clc
enter
shrl
jo
cmp
mov
in
lahf
nop
das
jnp
lret
arpl
repnz
popf
loope
dec
stc
frndint
xchg
popf
dec
loop
fs
js
outsb
lret
sti
cmp
dec
pop
aad
movsl
xor
sbb
or
lock
dec
or
cs
movsl
mov
rcrl
movsl
push
pop
mov
jo
imul
insl
xchg
xchg
nop
pop
imul
mull
mov
ret
mov
sbb
xchg
loop
lret
or
or
xchg
push
pop
fcomip
jbe
jmp
call
int3
rcl
push
pushf
stc
imul
aaa
int3
xchg
clc
mov
movsb
rcrb
dec
xor
dec
fistpl
bound
scas
ljmp
repz
adc
xor
add
stos
lret
loop
push
cmpsl
xor
mov
test
jmp
call
pop
mov
scas
or
push
sub
mov
cli
jp
daa
gs
inc
xchg
fsubl
dec
inc
test
icebp
pop
enter
rolb
pusha
mov
adcb
rcrb
adc
adc
push
or
and
push
xchg
mov
cli
das
sub
pop
mov
loop
and
sbb
and
or
pop
fwait
in
mov
sti
xor
push
scas
push
int
mov
outsl
mov
mov
loope
aas
imul
movsl
movsb
jbe
icebp
setge
stc
gs
dec
adc
dec
ja
sbb
inc
and
fistl
inc
and
pop
jg
shl
xor
mov
add
popa
and
xor
cltd
push
and
fstps
add
in
pop
xchg
lods
fdivr
sti
inc
test
sarl
jno
aad
pop
nop
insl
jne
sbb
stos
loope
inc
daa
inc
jmp
mov
daa
adc
scas
mov
sbb
push
aas
fidivs
test
leave
jb
sub
sahf
daa
shr
add
stc
enter
nop
jecxz
aaa
push
jmp
movsb
loop
rcll
push
mov
fs
fiaddl
jno
xor
push
sbb
pop
cmp
bound
fimuls
xchg
lahf
iret
xor
jae
cmc
jbe
andl
in
mov
repnz
rcll
and
loope
mov
mov
je
ss
leave
and
sub
dec
cmpsb
movl
add
adc
sbb
in
add
dec
mov
addr16
lret
les
cltd
ret
xor
xor
sti
inc
jne
mov
pop
test
pop
aam
aas
and
gs
mov
jmp
xor
into
xor
test
sbb
mov
stos
test
shll
imul
inc
add
bound
push
xor
outsb
or
xchg
add
leave
lret
jp
cmp
and
loope
js
aam
repnz
inc
repz
adc
je
or
fidivrs
mov
repz
lret
shrl
ja
lret
sub
mov
sarl
cwtl
pop
mov
into
push
fldcw
push
adc
ret
jecxz
mov
or
pop
xchg
ret
fdivs
mov
dec
and
jmp
fwait
test
lods
loop
pop
cmpsl
sbb
cmp
sti
mov
stos
dec
rcrb
pusha
xchg
sbb
es
cmp
xchg
sub
and
les
jecxz
mov
insb
push
test
test
out
pusha
jnp
stos
adc
je
rcrb
mov
fwait
popf
arpl
cmp
push
sub
std
leave
ret
mov
adc
arpl
aas
aad
mov
imul
bound
xor
les
pop
fldenv
mov
jo
imul
cltd
and
in
lods
sub
stos
fwait
roll
cmpsb
lret
dec
psubb
clc
das
aaa
push
dec
or
push
insb
test
adc
jb
bound
jge
sbb
push
popf
xor
cmp
sub
lods
mov
sar
rcrl
popf
or
dec
hlt
add
push
add
sub
ja
ljmp
or
adc
fistpll
icebp
je
popf
or
xor
sbb
sarb
jmp
adc
mov
scas
rorb
repz
scas
or
movsb
jo
xchg
adc
insb
mov
enter
inc
mov
pop
inc
data16
ss
push
and
mov
pop
add
arpl
std
push
sahf
pop
mov
adc
jl
into
sub
lods
loopne
cmc
daa
or
pop
adc
call
lock
add
xchg
stos
dec
xchg
and
scas
mov
mov
gs
mov
pop
cmp
mov
xchg
pop
pop
frstor
mov
into
cwtl
xchg
xor
mov
out
inc
out
mov
push
int3
sub
xchg
push
outsl
adc
jmp
cmp
adc
pop
cmp
enter
mov
popa
mov
sarb
xchg
dec
sbb
dec
outsb
lcall
pop
sahf
data16
dec
fnstenv
pop
xlat
cmp
insb
cltd
sbb
or
mov
jmp
scas
outsb
and
push
push
mov
inc
adc
xchg
add
push
jecxz
enter
in
bound
pop
sub
cmp
in
or
aad
push
sbb
xor
push
ret
inc
inc
xchg
and
stos
pusha
cwtl
mov
movsb
jno
adcl
mov
jmp
xor
jl
push
sbb
dec
pop
cmpsl
inc
push
ret
xor
and
cmp
test
xchg
fistl
mov
add
or
push
jb
cs
xor
xor
pop
or
sbb
clc
add
pop
cmp
pop
fnstcw
negl
xchg
inc
xchg
push
xchg
jae
mov
mov
das
mov
dec
test
cmp
jnp
mov
loopne
sbb
pushf
sbb
mov
rcl
push
xchg
rcrb
jmp
call
test
xor
sub
jecxz
jns
pop
mov
add
imul
iret
sarl
les
int3
out
mov
popf
xor
js
aas
rcll
xlat
jecxz
mov
or
xchg
adc
lock
add
divb
jae
addr16
out
lods
leavew
jecxz
xchg
adc
cltd
sub
dec
test
icebp
mov
sbb
sub
shrb
es
mov
adc
xchg
xchg
and
loopne
mov
lret
lahf
in
sbb
xchg
inc
add
jnp
jne
scas
test
mov
popa
test
and
xchg
adc
pop
fwait
cmpsb
adc
mov
int3
cmp
mov
mov
rol
sub
cmp
std
rclb
or
ret
xor
push
cmp
popa
mov
pop
xchg
sub
xchg
sar
cmc
and
jecxz
xchg
sub
xchg
inc
mov
xchg
dec
pop
adc
ljmp
or
jecxz
xlat
jl
ficoms
or
sti
inc
inc
cld
fsubrl
push
fstpl
cmp
loope
mov
nop
cmp
fcmovu
cmpsl
ret
xchg
pop
imul
pop
mov
jecxz
test
std
pop
xor
out
pop
int3
mov
outsl
pop
testb
jecxz
adc
push
pusha
hlt
and
jge
fsubs
xchg
mov
repnz
lds
mov
xchg
aad
cmp
js
jbe
jae
mov
aad
outsb
cli
imul
negb
pop
jo
ljmp
orb
mov
push
sub
test
imull
mov
test
hlt
scas
add
cli
fidivrl
push
mov
lahf
lods
mov
js
shrb
jle
movsb
inc
in
pop
ret
fisttpl
scas
ret
sub
outsb
into
inc
pushf
fdivrs
add
jns
rcr
outsl
jecxz
xchg
int
adc
sub
xchg
xlat
push
test
rorb
das
xchg
ja
rcl
mov
popf
xchg
sbb
dec
movsl
ret
repnz
sub
or
add
dec
ja
adc
mov
mov
push
dec
xor
je
xchg
push
xchg
dec
mov
das
flds
xor
popa
mov
xchg
in
addr16
fs
xor
cmp
idivl
insl
sub
addb
pop
xchg
mov
fstps
les
stc
xor
cmp
imul
imul
loop
out
mov
push
sub
cmp
mov
aad
sbb
lret
outsl
faddl
mov
ret
popf
stos
mov
xlat
sub
or
unpcklps
cmc
lfence
push
aad
jbe
inc
sub
mov
pop
sbb
add
mov
xchg
sar
xor
stos
push
dec
jg
movsb
cmp
adc
lcall
cmp
out
and
je
imul
lock
sbbb
jnp
popf
push
jge
bound
loopne
or
push
pop
idivb
pop
and
int3
inc
pop
shlb
mov
dec
icebp
imul
movsb
pop
clc
in
cmc
add
cmc
lahf
shrl
sbbb
jae
push
push
push
imul
sbb
or
out
daa
ja
cld
push
shl
test
and
mov
or
push
dec
xor
mov
push
inc
stos
movsb
pop
lcall
jns
pop
stos
imul
or
or
mov
adc
sahf
push
shl
fld
mov
dec
shrb
pushf
mov
icebp
pop
adc
movsl
push
ret
mov
inc
inc
cmpl
cmpb
sub
test
jg
cs
xor
daa
ret
adc
adc
dec
pushf
pop
es
push
pushf
push
bound
mov
aad
in
sub
pop
add
fwait
movsl
add
loop
adcl
data16
shrl
inc
cmp
mov
sbb
push
out
or
rorl
mov
sbb
xor
loope
cltd
shrl
daa
popa
cld
xchg
sub
push
out
mov
pop
into
in
or
loope
push
outsb
adc
int
add
mov
push
inc
popf
in
push
into
and
sub
xchg
decb
in
aaa
enter
sbb
cmp
push
es
push
dec
sti
cmp
aaa
fwait
add
push
jbe
stc
test
mov
lahf
out
pop
hlt
popf
jle
mov
push
jp
call
xchg
pop
xor
mov
jle
mov
add
pop
lods
inc
call
cmp
push
xor
andb
ds
popf
stos
enter
pop
pop
lods
inc
xor
sbb
adcl
insb
sar
ds
es
gs
lret
mov
insl
pop
rcll
dec
or
inc
add
cli
push
into
out
push
fcomps
xor
sub
xchg
lds
jo
inc
test
fidivl
pusha
or
outsb
outsb
xchg
adc
pop
xor
cli
js
scas
add
ret
xor
xchg
cmp
dec
lret
push
sbbl
and
inc
inc
push
outsl
adc
xchg
pop
dec
mov
sarb
sarb
inc
fwait
mov
insb
test
enter
pop
test
cmpb
out
repnz
push
andl
imul
xchg
cmpsb
mov
xor
push
cmp
pusha
adc
in
jno
and
hlt
cmp
mov
outsb
xor
sbb
and
mov
call
xchg
pop
mov
stos
ret
loop
sub
addl
hlt
sarl
enter
aam
aad
push
out
aad
dec
mov
popf
sbb
pop
cli
sub
inc
jle
outsb
add
mov
push
cmp
insb
xchg
mov
arpl
mov
cmp
sbb
dec
xchg
int3
mov
pop
sub
sub
ficomps
adc
lea
insb
push
pop
cmpsb
loop
inc
fistpl
mov
lds
pop
push
aam
pushf
lcall
adcl
xor
idivl
aaa
pusha
pop
ljmp
test
imul
add
nop
add
rorl
xchg
mov
jge
and
dec
or
or
adc
iret
sub
mov
cmp
inc
rorb
cmp
pop
sbb
xor
rcll
insl
sub
jecxz
xchg
lea
lcall
lods
push
cmpsb
fmull
xchg
cmp
lock
ja
cmpsb
addr16
add
fwait
pop
shll
mov
mov
je
insb
in
ficoml
sub
ljmp
sbb
lods
xchg
scas
dec
jae
ret
mov
mov
inc
inc
add
mov
sarl
push
and
rcll
mov
mov
mov
inc
mov
pop
movsl
xchg
inc
jo
aas
pop
pop
mov
std
inc
negl
push
push
inc
ficomps
pop
push
mov
pusha
nop
les
and
jp
dec
pushf
enter
or
dec
sub
dec
sarb
push
inc
jle
clc
cwtl
icebp
aas
lret
outsl
push
mov
sarl
xchg
xchg
imul
and
out
out
clc
jne
cmp
jmp
push
inc
gs
ret
je
adc
ljmp
mov
pop
mov
mov
sti
aaa
rclb
or
rclb
ja
sbb
mov
out
dec
jne
mov
sbb
or
jbe
xor
push
dec
nop
sbb
out
push
sbb
sbb
pop
jge
mov
jmp
frstor
cmc
dec
mov
add
add
mov
push
dec
pop
movsb
fsts
aaa
sub
push
data16
repnz
jecxz
xchg
mov
int3
les
push
xor
inc
sti
mov
dec
leave
pop
and
mov
adc
in
dec
xchg
lock
sti
jp
cmp
int
xor
sub
ljmp
dec
inc
jge
aas
sahf
cli
ret
xchg
ja
rolb
lds
jl
or
pop
xor
call
jle
scas
je
test
push
xchg
jns
fidivrs
mov
aaa
test
in
cwtl
or
dec
push
ja
mov
sqrtps
and
sbb
or
pusha
lock
decl
je
in
or
shr
repnz
adc
sub
sbb
mov
scas
subb
jae
fbld
pop
std
aas
pop
fnstenv
or
mov
mov
iret
mov
xchg
push
pushf
subl
pop
or
outsl
push
pop
xlat
mov
inc
jno
scas
fnstenv
add
fisttpll
adc
or
sub
push
adc
jbe
xchg
jle
andb
dec
repz
and
jb
sub
cld
in
test
pop
or
rorb
pop
lods
jle
xchg
or
lds
scas
imull
mov
aad
or
imul
dec
push
pop
call
lret
inc
push
ds
jae
mov
mov
arpl
jae
adc
and
add
mov
or
mov
in
lret
jae
mov
push
jbe
insl
add
ss
insb
mov
daa
mov
sub
inc
xor
fldenv
adc
mov
mov
cmpsl
dec
testb
pop
mov
cmp
inc
aad
mov
ds
std
pop
iret
dec
icebp
repz
out
sub
fsubl
jp
jl
xor
sub
xor
shlb
fldt
in
add
jge
and
mov
xor
fidivrs
add
rol
and
add
mov
xor
jmp
sub
cwtl
jae
mov
jno
out
std
iret
stc
nop
or
mov
cmp
ret
out
orl
push
inc
push
aam
rorl
pop
insl
jb
icebp
jbe
mov
loopne
sub
push
xor
pop
xor
jne
insl
xchg
lcall
push
fistps
bts
daa
aas
inc
data16
add
dec
or
and
and
mov
btc
stc
outsb
rclb
and
mov
jbe
push
test
icebp
fsts
xchg
aaa
jnp
cs
dec
into
and
adc
stc
pop
movsb
iret
xchg
shlb
mull
outsb
cmpsl
aam
dec
es
jo
jbe
rol
sbb
fwait
pusha
stos
cs
in
mov
or
into
rcrb
sub
dec
mov
mov
sbb
rorl
push
or
cld
sub
push
in
and
xchg
adc
inc
cwtl
cld
outsb
fstpl
add
cmp
jnp
out
sbb
jle
or
roll
add
jno
add
jp
push
push
inc
xor
xchg
fwait
cmc
sbb
add
rcr
sbb
daa
out
popl
fldl
std
sbb
dec
cmp
stc
pop
adc
sarb
jae
sbb
lahf
shlb
and
inc
shrl
add
push
test
cmpl
cltd
or
mov
xchg
sub
test
or
inc
dec
andl
push
adc
data16
aas
into
pusha
sub
imul
mov
ja
rcrl
add
es
adc
cli
pop
inc
jle
gs
fwait
and
lret
sub
dec
dec
or
push
mov
ljmp
or
ret
aas
repz
cmc
lds
pop
aaa
push
and
sbb
cs
xchg
fnstenv
xor
add
iret
fisubrl
jge
test
test
xlat
mov
or
lods
mov
divl
popl
dec
sub
into
mov
jp
dec
adc
mov
call
adc
repnz
scas
dec
loop
lods
fldt
mov
jle
push
jnp
icebp
scas
andb
movsl
stos
daa
js
xchg
iret
sub
in
fmul
cmp
push
push
inc
mov
aam
mov
jge
adc
sub
push
sub
fmull
insb
jns
mov
insb
inc
scas
clc
or
jl
sbb
stc
sub
js
iret
inc
xorb
jbe
ret
mov
push
mov
xchg
scas
cmpsl
pop
pop
push
mov
xor
pop
test
mov
addl
xlat
or
or
outsl
pop
arpl
add
rclb
sbb
loop
cmp
loop
movsb
ret
xchg
imul
mov
mov
loopne
loopne
mov
jne
inc
adc
cmp
add
insb
inc
xor
sti
js
cmc
movsb
dec
pusha
mov
fisttps
js
fmull
add
test
mov
push
mov
jno
mov
outsb
cmp
lods
xchg
int3
call
push
mov
xchg
mov
aad
jno
mov
pop
pop
xchg
sub
or
mov
in
push
cs
aaa
outsl
jmp
sub
mov
cmp
dec
mov
js
outsl
dec
sub
add
and
cmp
sahf
push
cmp
mov
xor
push
dec
inc
repnz
cld
inc
add
mov
test
jl
or
pop
or
xchg
fwait
adc
xor
fiaddl
mov
lock
xchg
pop
pusha
xor
mov
pop
add
sub
inc
pop
aas
sub
xchg
repz
outsb
sub
cmp
cmpsl
cltd
lahf
pop
icebp
pop
lods
lcall
push
in
es
cmp
sub
cmp
xchg
aam
pop
or
jne
dec
inc
mov
les
cmc
jmp
jne
xchg
aaa
dec
add
xchg
aad
add
test
mov
jl
mov
arpl
and
lahf
and
sbb
sbb
xlat
inc
mov
sub
sahf
lock
jne
xor
testb
mov
repz
in
xor
xor
mov
faddl
sti
call
xor
jo
outsl
inc
xchg
cmp
std
cli
adc
pushf
jle
divb
fwait
test
sub
and
jp
pop
mov
int3
push
jle
mov
mov
push
call
ja
adc
loop
inc
movsl
loope
lock
dec
inc
push
mov
mov
or
sub
testb
in
xchg
inc
jnp
in
notb
add
cltd
scas
push
jne
mov
in
adcl
cwtl
arpl
fwait
mov
pop
lret
mov
jecxz
sbb
cmp
fiaddl
xchg
sbb
in
or
movsb
aam
dec
pop
mov
sbb
ljmp
rcrb
mov
xchg
imul
mov
lds
movsl
xchg
push
sub
push
xchg
pop
or
mov
lock
mov
outsl
andl
mov
xchg
xchg
adc
fdivrs
fistl
cmpsb
je
sub
fistpl
aad
ja
std
push
pop
mov
push
or
aaa
mov
nop
ljmp
movl
mov
nop
push
aas
jno
je
inc
test
icebp
out
ficompl
loopne
jmp
loop
xchg
outsb
fnstcw
mov
and
mov
push
neg
outsb
fidivrs
xor
not
xchg
mov
fwait
stc
lret
and
shll
pop
outsl
mov
lods
sbb
inc
popf
lahf
sbb
push
movsl
jne
popa
mov
push
xor
loopne
int3
xor
roll
es
push
arpl
movsb
xor
bound
insb
cmp
xor
adc
notb
jae
js
imul
mov
dec
adc
mov
lods
lahf
add
mov
mov
shlb
jmp
mov
mov
cltd
mov
aad
inc
insb
xchg
push
js
inc
mov
int3
sahf
dec
jno
imul
fsubrp
pop
out
call
xchg
mov
ljmp
dec
push
ljmp
adc
push
stc
popl
cli
dec
xchg
cs
push
int3
and
imul
arpl
sub
ret
push
incl
jl
cmp
adc
mov
xor
in
inc
add
ror
das
push
inc
aad
lret
repnz
lds
imul
mov
repz
lods
pop
xchg
imul
pusha
int3
push
and
adc
push
loope
dec
inc
xor
sbb
mov
test
mov
insl
inc
lods
sub
mov
cld
testl
sti
test
mov
jbe
mov
push
cmp
push
xchg
push
hlt
or
pop
pop
into
xchg
loope
shll
scas
inc
cmp
rcll
fs
inc
aam
popf
dec
ret
lods
lea
pop
mov
fsubrs
leave
or
and
cmp
adc
push
push
imul
fwait
sub
dec
rcrl
test
sbb
cmp
in
mov
cmp
addr16
and
or
and
mov
jecxz
jmp
lahf
andl
lock
and
mov
sub
xchg
jmp
sahf
loopne
ja
js
fidivs
and
and
lret
ljmp
xchg
rorl
and
adc
jo
dec
fldcw
stos
pop
inc
xor
fadd
xchg
xchg
fstps
inc
jae
xor
testb
cmp
into
scas
dec
dec
and
sbb
sahf
idivl
and
sub
repnz
popa
sub
xchg
or
arpl
mov
pop
imul
mov
push
mov
cmpsl
cmp
rcl
cmp
out
aam
xor
scas
inc
adc
call
cmp
mov
das
test
lods
pop
imul
or
lock
or
xchg
inc
xor
dec
inc
xlat
push
pop
je
icebp
add
test
push
mov
jbe
adc
cmpsl
jg
mov
enter
xor
aas
pop
shll
fildl
scas
xchg
and
push
push
sub
int3
lock
cmp
ds
xor
in
fwait
xor
mov
pop
mov
fists
lcall
fbld
arpl
add
jo
push
mov
das
arpl
push
jp
pop
scas
je
xchg
fwait
nop
daa
cmc
rorb
and
movsl
sbb
mov
jb
cmpsb
rclb
mov
hlt
inc
out
cmpsl
or
pop
lods
mov
add
mov
dec
cmp
pop
in
dec
lahf
xchg
adc
xchg
push
in
sarb
jbe
cld
lock
roll
sub
out
addr16
inc
xchg
jns
mov
je
add
push
lods
push
clc
xchg
ret
mov
in
loopne
push
pop
mov
cmp
xor
mov
sbb
adc
mov
jmp
pop
sub
icebp
ja
arpl
or
inc
sarl
jg
xor
xchg
add
lret
jl
lret
popa
ficoml
cwtl
hlt
and
mov
mov
inc
adc
lock
mov
jge
cmp
jne
and
xchg
adc
mov
jo
cltd
inc
out
lret
dec
and
and
sar
sub
mov
repnz
mov
and
add
and
popf
lcall
lret
cmp
lds
xchg
lods
xlat
jb
test
and
mov
jmp
pop
adc
or
push
aad
rcrb
orl
test
sub
and
push
mov
jge
call
movsb
btr
xlat
push
fld
lods
fs
sahf
mov
mov
xor
ret
jl
adc
pusha
inc
insb
cli
adc
push
fsqrt
mov
ficomps
pusha
and
cltd
cs
sub
pop
push
xor
rcr
pop
test
pop
cmp
roll
dec
arpl
inc
and
daa
ret
iret
push
push
dec
aam
bound
xchg
xor
dec
add
mov
orl
push
jb
in
sarb
inc
int
dec
ds
lcall
add
and
fs
into
lock
pop
or
fadd
mov
jl
scas
mov
aaa
push
xchg
and
xchg
daa
adc
sub
push
xchg
sbb
pop
sti
clc
popa
cli
mov
xchg
popa
pop
jge
imul
xchg
jg
mov
mov
xchg
dec
pop
mov
out
sti
pop
mov
iret
dec
mov
test
and
and
call
ret
sahf
mov
mov
jge
cmp
call
leave
sbb
pop
adc
adc
sarb
inc
pop
outsl
icebp
jo
into
dec
push
pop
rolb
xchg
inc
dec
add
imul
divb
or
dec
sbb
inc
call
jecxz
test
fsubrl
xchg
push
aad
xchg
mov
out
mov
lahf
insb
pop
mov
in
and
adc
popl
or
test
mov
sbb
push
negl
sbb
lods
sti
dec
mov
lahf
es
fnstsw
sbb
mov
in
outsb
xchg
jle
mov
loop
shll
fdivp
and
or
andl
sub
dec
inc
stos
push
test
sub
jmp
dec
mov
sqrtps
dec
fwait
movsl
pop
test
fimuls
pop
arpl
pop
push
mov
inc
in
xchg
inc
xor
push
stos
lret
mov
push
movsb
xchg
pop
add
pop
filds
add
xchg
and
es
test
call
ja
lods
lods
pusha
mov
imul
adc
shr
add
add
lods
ss
push
add
mov
inc
xchg
pushf
aas
loopne
lea
or
sub
loope
jp
mov
and
or
and
icebp
pusha
or
dec
xchg
dec
inc
dec
aaa
sahf
cmp
mov
lcall
dec
arpl
pop
sub
stos
push
push
stos
xchg
fwait
jecxz
test
or
loopne
pop
push
cs
adc
mov
xchg
hlt
push
lds
jmp
inc
dec
sub
test
faddl
loopne
add
push
inc
xlat
pop
scas
jp
aas
jecxz
sbb
pop
sbb
cmp
mov
cltd
ja
dec
jmp
repnz
fildll
cld
and
jo
and
mov
aad
push
push
cmc
mov
xchg
rorb
xor
xchg
xchg
lods
mov
aaa
outsl
xor
cmp
mov
sbb
js
and
add
sbb
rep
mov
xor
jbe
std
mov
mov
push
int3
and
pop
adc
fwait
adc
push
mov
mov
bound
out
jecxz
loopne
pop
dec
rcrl
push
aad
fldl
idivb
out
cmp
imul
stos
mov
mov
sbb
mov
scas
xchg
fst
into
mov
mov
out
rorl
int
mov
and
mov
and
mov
xchg
sbb
test
das
push
pushf
sub
dec
aaa
popf
hlt
andl
movsb
jmp
push
jno
andl
xchg
imul
orl
xor
fiaddl
out
or
test
push
xchg
cmpl
push
fs
shrb
mov
xchg
std
add
stc
cmp
push
add
mov
roll
push
jmp
adc
js
fstpt
inc
divl
adc
loop
icebp
inc
pop
cmpb
mov
inc
inc
pop
sub
stos
add
fwait
lea
push
xchg
jnp
dec
decb
and
divl
adc
dec
jno
dec
in
out
subl
jmp
adc
sub
out
ljmp
out
lcall
adc
cwtl
xorb
pop
lahf
test
inc
addl
pop
add
dec
insl
clc
add
mov
push
movsl
insl
pop
ds
xchg
cmp
fnstsw
xor
jo
cmp
jmp
popa
out
sub
mov
aam
bnd
je
mov
fwait
jne
enter
testl
mov
aad
cmpsl
xor
es
outsb
mov
and
push
pop
or
iret
lods
xor
outsl
and
std
mov
scas
jb
mov
int3
mov
mov
daa
addr16
mov
pop
lds
pop
dec
jno
jle
add
push
mov
outsl
mov
or
cmp
dec
mov
sbb
xchg
adcl
xor
aas
rorb
inc
inc
stos
push
aaa
repz
adc
ret
jbe
dec
sbb
xchg
and
mov
lret
pop
xlat
sub
shll
ret
sbb
mov
iret
mov
jecxz
push
and
fisubs
fcomps
out
movsl
xor
dec
leave
cltd
inc
xchg
out
shlb
lea
mov
cmp
cmp
pop
fidivs
mov
fs
addr16
mov
mov
cmpsl
adcb
or
das
or
popf
loop
out
stc
jcxz
inc
inc
mov
jno
add
cmp
and
mov
mov
and
dec
imul
push
test
cmc
sub
pop
jp
add
xor
xor
mov
movsb
push
cmp
mov
cmpsl
pop
sti
dec
aaa
fsub
push
out
adc
iret
and
fs
sti
pop
jg
push
cmp
jl
pop
mov
movsb
push
mov
jge
ss
and
pushf
mov
rclb
into
and
ficompl
push
icebp
ss
xchg
add
push
outsb
shll
mov
xchg
and
adc
push
out
cld
push
ljmp
cmc
mov
fsubrl
adc
outsb
mov
loop
jns
aas
adc
xor
fcoml
mov
push
pop
jl
aam
inc
adc
add
gs
push
and
mov
pop
shll
mov
das
aas
pminsw
lret
inc
mov
movsl
insl
cmp
cs
xchg
lahf
push
dec
out
out
xchg
push
mov
clc
and
ja
sub
xchg
adc
add
pop
scas
add
add
lret
jae
push
lods
inc
push
lret
mov
mov
inc
cmp
in
cmp
dec
jmp
xor
jecxz
jge
loop
cs
hlt
jle
or
in
inc
aaa
adc
test
cs
push
popa
aas
dec
cmpsb
xor
movsb
jg
fistpll
jg
out
cli
mov
ror
mov
jmp
fnstcw
dec
xlat
pusha
push
movsl
or
mov
inc
sbb
jnp
lahf
mov
cmp
jmp
inc
cmp
mov
pushf
push
xchg
sbb
lret
cmp
stos
std
cmc
jbe
ret
mov
repz
mov
mov
out
push
jbe
sbb
mull
sbb
rcr
stos
imul
fsubrl
daa
mov
cli
lock
and
fisubrl
cmpsl
loopne
loop
xrelease
add
mov
mov
repnz
dec
test
ds
mov
or
cmp
fisttpl
ljmp
addl
popf
inc
xchg
add
cmpsl
cltd
inc
test
cmpl
sbb
aad
clc
or
out
ficoml
incl
mov
sub
ret
add
cmp
xchg
fwait
pop
dec
fs
mov
aad
cltd
xor
imul
mov
xchg
out
mov
xchg
jns
in
js
sti
sub
loope
fsts
cs
mov
in
fcoml
jle
ss
sbb
adc
ljmp
in
cld
mov
insb
or
lcall
cmp
xor
pop
cmp
push
sarb
lds
xor
in
fnstcw
mov
jae
aam
mov
ss
mov
pop
jb
adc
sbb
in
ret
pop
mov
jecxz
add
jl
popa
mov
pop
push
bound
test
andl
xchg
flds
insb
nop
or
jnp
lock
mov
ret
jnp
sub
arpl
push
cli
xchg
inc
mov
test
or
aam
loope
sub
pusha
push
cmc
xor
push
push
ja
sub
or
enter
xlat
add
leave
out
int3
xor
iret
sub
adc
lahf
and
fidivrl
std
mov
xchg
rorl
pop
jnp
pop
push
cmpsl
adc
xchg
sub
add
in
pop
stos
filds
in
ret
out
repnz
mov
dec
add
ret
xor
cmp
repnz
shl
fstpl
loop
cld
fcmovne
fcmovnbe
dec
dec
loope
sbb
push
jmp
addr16
test
int3
or
adc
xchg
dec
mov
cli
int
addb
data16
pop
sti
mov
int3
aas
sub
les
leave
repz
shlb
xor
repnz
in
and
pop
sbb
sub
mov
addl
mov
fstpl
cld
inc
dec
xchg
movsb
pop
pop
jecxz
mov
test
add
out
push
shll
pop
aam
es
inc
jne
out
mov
jno
bound
int3
mov
loope
addr16
test
jne
add
sbb
cmp
dec
dec
and
or
mov
call
ficoms
mov
pop
jbe
lcall
and
out
test
scas
mov
loop
mov
je
cmpsb
jno
or
subl
stos
pop
sub
inc
je
fs
lods
popf
add
fsubrl
stos
repnz
mov
int3
adc
int3
les
mov
cli
mov
rcl
in
repz
int
jp
arpl
xor
fistps
icebp
ret
fwait
mov
jle
sub
in
add
pop
rorb
arpl
xchg
cld
xchg
lcall
clc
leave
or
fwait
aad
xchg
shlb
lock
pushf
jns
sub
ss
rcrl
xchg
jo
mov
inc
sahf
shll
or
orb
jg
inc
fiadds
mov
orl
jae
and
jl
and
aas
sub
xor
in
test
push
mov
push
jge
mov
pop
cs
pop
loope
call
inc
push
inc
clc
mov
jl
pop
arpl
hlt
jmp
fwait
ss
add
sbb
xchg
cld
mov
mov
in
jns
dec
mov
ljmp
jecxz
push
js
cmc
addr16
sbb
popf
ja
data16
fisubrl
clc
push
sti
jne
lock
sub
rcl
mov
sbb
shrl
ret
lods
jnp
mov
dec
ficompl
es
cwtl
mov
ds
push
push
pop
mov
mov
or
push
repnz
cli
lea
add
sbb
mov
data16
mov
aaa
xchg
xchg
vpcomb
xchg
add
cmp
pop
dec
addr16
xchg
push
inc
sbb
jl
std
adc
mov
lcall
in
rclb
out
sarl
xlat
jp
cmp
pushf
adcb
inc
inc
mov
dec
faddl
ret
andl
mov
jns
shrb
int
aaa
xchg
jp
push
int
repnz
adc
movsb
insb
push
and
xor
out
aas
orl
add
add
movsb
jg
adcb
test
xlat
push
sub
sbbb
jns
clc
push
lods
jge
adc
rcrl
or
jae
lret
ret
and
lock
dec
mov
sub
add
pop
subl
adc
xchg
outsl
sub
cmp
cmp
xor
movsl
cmp
movsl
fwait
std
out
scas
sbbl
aaa
insb
adc
nop
sub
out
mov
xorb
sub
test
pop
add
addl
xchg
mov
cmp
addr16
outsb
push
cli
add
pop
nop
mov
cs
cmpsl
fldenv
mov
test
outsb
loope
int
orb
push
adc
inc
xor
jmp
es
and
lret
cmp
dec
xor
inc
xchg
add
cmp
pop
out
and
out
push
sub
outsb
jnp
pushf
mov
sbbl
mov
inc
scas
pop
push
jo
mov
test
jge
add
and
popf
adc
jo
cmc
vmovss
jb
jb
jmp
pushf
mov
xlat
lcall
mov
sbb
mov
pop
in
fistpll
xlat
fistps
cmp
mov
lods
fstpt
mov
jp
rolb
cmp
mov
cwtl
mov
mov
icebp
jge
mov
mov
or
xchg
sar
sub
rcrl
hlt
mov
enter
fists
push
insb
fwait
ret
lods
out
push
xchg
jae
or
pop
mov
sbb
xor
test
jmp
cmpsb
sub
mov
push
push
add
das
fists
in
iret
sub
add
repnz
fs
mov
ret
add
addb
or
or
daa
jmp
divl
adc
std
and
and
cmp
jmp
pop
sbb
repz
leave
dec
jmp
into
data16
pop
mov
sbb
pop
push
and
add
mov
mov
or
das
sbb
testl
jle
pusha
xchg
cmc
xor
cld
es
popf
rcll
add
mov
mov
std
cltd
mov
outsl
mov
lret
jg
inc
adcb
xchg
inc
int
or
and
fs
ficoml
xor
lock
pop
adc
mov
jnp
cmp
adc
sub
jge
int3
loop
mov
sub
xchg
ret
test
std
pop
or
xor
cmp
sub
out
stos
mov
pop
ret
cmpsb
es
push
jg
pop
add
pop
popf
incl
loop
testb
hlt
inc
xor
aas
xchg
jae
pushf
sub
fucomip
outsl
aaa
pop
mov
test
out
inc
adc
cmpsb
mov
adc
das
into
pop
call
pushf
es
test
jecxz
dec
pop
int
pop
jle
push
jecxz
ja
jl
loop
mov
mov
sub
je
add
push
jo
imul
popl
cli
xchg
ret
adcb
out
test
enter
mov
mov
inc
pop
es
imulb
das
push
adc
ja
lea
xor
jmp
scas
popl
push
mov
and
sub
inc
scas
insl
out
xor
leave
pop
sbb
mov
pop
and
movsl
jnp
mov
addl
cmp
loope
jbe
push
jp
inc
inc
jnp
es
shl
scas
scas
add
ljmp
and
out
ja
push
push
addl
mov
in
add
xchg
add
rolb
xor
inc
push
xor
ljmp
push
mov
push
push
jnp
or
pop
lds
cli
fisubl
cli
xchg
pop
scas
and
pop
sub
push
xor
scas
fucomip
push
sbb
dec
enter
xchg
popa
fcompl
ds
into
mov
sub
sub
add
movb
mov
hlt
or
inc
popf
sbb
fst
cmp
dec
jnp
sbb
mov
fistl
jmp
int
lret
cmpsb
push
ret
cmp
sbb
sbb
inc
xchg
hlt
data16
cwtl
sub
test
and
sbb
and
xchg
or
dec
cld
dec
movsl
jae
cmp
cltd
shlb
pop
pusha
icebp
add
push
mov
outsl
scas
cmpsb
stos
scas
loopne
sbb
sub
imul
mov
shl
pop
jae
sbb
aas
sahf
fnsave
adc
fcomi
mov
xlat
loopne
clc
mov
mov
push
frstor
inc
xor
outsb
stos
cld
bound
lret
pop
lret
scas
aaa
and
fsub
loop
fistpl
jne
stos
xorb
divb
sub
sub
fidivrs
xor
pop
cmp
adc
fdiv
mov
cmp
mov
orl
and
jnp
mov
fs
pusha
cmp
lods
push
int
jne
mov
pop
mov
add
gs
jge
cmp
cmp
jbe
mov
mov
cmc
out
testl
dec
mov
cmc
lds
and
nop
dec
punpckhwd
sub
adc
inc
mov
ret
sub
xor
mov
adc
dec
nop
mov
stos
std
stos
sbb
popa
fldt
xor
xchg
or
mov
mov
ret
into
mov
or
aas
aam
mov
and
out
mov
out
pusha
pop
mov
xor
xchg
fmul
popa
repnz
cwtl
mov
mov
scas
insb
pop
push
pushl
rcrl
stc
inc
cmp
mov
inc
outsb
test
xchg
mov
in
add
add
loop
lock
inc
out
lcall
outsl
ds
dec
mov
xor
add
mov
mov
insl
xor
push
xchg
into
jnp
mov
or
inc
in
adc
jns
rclb
repnz
pushl
data16
jp
mov
fsubrl
or
loopne
mov
push
cmp
mov
pop
xchg
sbb
shrl
sbb
or
jae
push
scas
pop
mov
or
mov
cmc
aas
xor
outsl
lds
mov
rcr
inc
xlat
inc
jle
fxch
test
and
mov
mov
dec
mov
cmpb
aad
pop
dec
aad
or
sbbl
lods
insl
js
insb
xchg
icebp
push
push
add
mov
fstps
add
mov
out
sub
mov
jno
add
lcall
inc
adc
bound
das
or
mov
cli
lahf
in
add
add
js
stos
lods
popf
or
mov
xchg
loop
and
icebp
mov
or
mov
xor
in
leave
xchg
inc
mov
xrelease
cmpsb
push
push
fsqrt
cltd
mov
inc
in
and
push
xchg
push
pop
outsl
mov
stc
dec
sub
sbb
aad
imul
movsb
cld
jp
sub
xchg
int
insl
jmp
sbb
mov
sbb
arpl
test
dec
fistpl
popf
dec
mov
pop
mov
imul
fwait
xchg
mov
repz
add
xor
adc
in
and
stos
repz
or
ficompl
aam
or
addb
mov
xchg
iret
xchg
push
outsb
sahf
push
shll
inc
mov
jne
les
repnz
pop
mov
mov
mov
arpl
in
inc
icebp
lds
data16
iret
xor
add
leave
and
cmp
lods
xchg
aas
out
add
push
and
ret
xor
xchg
jbe
pushl
mov
je
sbb
pop
jb
jg
add
sahf
mov
mov
repz
int3
xor
repnz
mov
sahf
sbb
test
nop
xchg
inc
and
iret
mov
xchg
ret
je
stos
fs
cmp
cmp
pop
push
or
in
pop
call
outsb
clc
adc
fwait
sbb
xor
scas
cmpl
jo
push
push
fstpt
pop
adc
dec
roll
and
cmp
xchg
or
cmpsl
mov
adc
add
lods
mov
outsb
mov
inc
jo
mov
pop
int
push
out
pop
jecxz
inc
mov
xor
cmpsb
daa
lret
pop
mov
jle
inc
dec
xor
arpl
xchg
mov
testb
cmp
push
insb
fistpll
cld
mov
mov
outsl
stos
jl
mov
cld
test
xchg
xchg
jmp
repnz
roll
out
out
call
jmp
test
js
push
stos
aam
jbe
mov
sahf
mov
fistpl
fbstp
cltd
xchg
lea
add
dec
bound
jbe
fisubl
imul
xchg
fldcw
mov
fnsetpm(287
lods
pop
das
inc
in
std
pop
pushf
jno
enter
adc
out
pop
push
jo
jmp
jne
es
or
movb
mov
sbb
lock
cmc
iret
inc
rorl
cld
in
push
push
or
jmp
scas
sub
popa
inc
adc
push
push
sbb
jge
jb
dec
mov
cmp
cltd
adc
and
out
nop
repnz
pop
push
push
xor
lea
shrl
xor
jae
mov
adc
mov
mov
add
repnz
insb
add
add
xchg
push
dec
shlb
xor
imulb
dec
mov
shrb
dec
popf
loop
rol
dec
add
mov
lock
inc
scas
orl
fstpt
dec
sub
or
mov
movsb
lds
mov
ret
inc
arpl
or
movsb
and
imul
push
mov
push
out
outsl
inc
aas
aad
xchg
jae
inc
jl
inc
dec
and
fldl
pop
push
inc
dec
es
aam
adc
ror
mov
es
hlt
sbb
jo
cmp
xchg
mov
divl
inc
pusha
mov
mulb
xchg
mov
dec
fildll
and
scas
jle
mov
sbb
jns
inc
pop
mov
in
iret
mov
fsub
and
or
and
cmpsb
pop
adc
jecxz
dec
psllw
push
jne
add
push
dec
orl
loopne
push
pop
push
and
fnsave
inc
mov
enter
jle
test
or
xchg
dec
xchg
xor
jl
loope
pop
je
fiadds
mov
lret
cwtl
arpl
adc
and
mov
mov
test
jae
jne
sbb
dec
mov
jge
push
call
fdivr
movsl
jmp
loop
pop
add
cmp
lcall
cmc
inc
push
push
jo
mov
and
sub
je
lret
fstps
xchg
mov
aad
popf
cmp
sub
inc
sarb
xchg
fiaddl
mov
sub
pushf
push
fdivrp
sub
shl
push
ret
lahf
mov
rclb
cli
and
cmpl
or
fdivs
xchg
fmuls
hlt
adc
cmp
dec
mov
aaa
add
xchg
pop
stos
pop
xchg
rcr
mov
imull
mov
andb
mov
cmc
pusha
pop
in
cmp
mov
push
addl
or
or
sbb
orl
das
cmp
pop
arpl
xchg
into
push
jge
cmp
jb
data16
mov
mov
xchg
gs
xchg
imul
mov
mov
push
add
mov
dec
mov
loope
ss
adc
mov
fs
clc
imul
pop
or
adcl
arpl
jp
dec
inc
ds
xlat
add
adc
xchg
xor
and
jl
or
xor
add
flds
scas
icebp
loope
icebp
jns
fidivs
mov
aaa
add
push
dec
fidivl
jnp
pop
sbbl
push
cmp
je
cltd
jns
or
push
ret
sbb
in
dec
and
imulb
in
jnp
outsl
in
clc
enter
pop
test
inc
or
int
push
bound
xor
cwtl
rcrb
sub
test
xorb
data16
sbb
mov
mov
loope
pop
shll
inc
pop
jle
push
push
add
ror
jne
fidivl
pop
pusha
push
jl
test
out
and
je
int3
adc
es
leavew
sbb
in
fsub
cmpsb
cmp
pop
push
pop
lcall
imulb
xchg
cmp
arpl
sbb
push
out
mov
ljmp
jbe
imul
push
pop
jp
jp
movsl
imul
dec
sub
insl
jl
xchg
out
ficompl
mov
adc
in
rcll
mov
push
arpl
popf
sub
mov
push
inc
sbb
jmp
pop
add
lock
mov
fcoms
add
mov
adc
adc
mov
mov
adc
into
xor
mov
aas
movsl
insl
rcrb
lds
in
adc
fmuls
cmp
cs
jmp
les
mov
or
repz
pop
mov
pop
adcb
test
xchg
lret
adc
aas
push
fstps
inc
and
std
int3
mov
add
insb
pop
fs
add
mov
daa
mov
rclb
pop
incl
xchg
aam
lea
loope
and
jmp
fldl2e
or
mov
push
test
dec
push
mov
xchg
fwait
lock
mov
adc
stc
cltd
lods
sbb
adc
notb
xor
shrl
push
mov
fists
mov
cli
inc
icebp
inc
pop
jg
mov
out
push
rorl
cmpb
cmpsl
pop
mov
call
int3
sub
mov
subl
xchg
and
movsl
or
xchg
mov
dec
xor
shlb
xor
negl
mov
xchg
mov
sub
mov
push
fimuls
cmpsl
xor
inc
shlb
xchg
into
aam
or
mov
leave
adc
pop
xchg
fnsave
jg
push
xchg
shrb
gs
insb
xchg
insl
mov
sub
mov
sti
sbb
in
and
fstpt
or
xchg
inc
inc
mov
inc
dec
mov
in
cmovl
mov
push
in
nop
jl
push
in
adc
inc
in
cmp
mov
hlt
adc
adc
inc
push
dec
sub
xchg
nop
inc
repz
mov
xor
mov
int3
hlt
nop
sbb
scas
fildl
loope
shlb
and
jg
mov
cmp
and
imul
push
das
mov
cmp
pop
cmp
sub
in
jg
inc
lret
pop
stos
cs
fisttpll
scas
and
mov
mov
mov
lahf
fsubs
insb
sbb
push
mov
or
inc
test
sti
lcall
and
mov
fidivrs
sbb
cs
in
loop
lea
addr16
cltd
sub
pop
aam
int3
inc
lock
xor
inc
xchg
sub
movsb
mov
and
mov
jp
sbb
xchg
clc
xor
fincstp
xchg
pop
insb
neg
iret
hlt
pop
jg
cli
in
jecxz
addl
pop
lods
sub
push
mov
cs
cmpsl
push
xlat
in
rclb
push
cltd
push
jge
pushf
mov
test
xchg
xchg
aam
es
lret
adc
push
ret
dec
or
dec
mov
ret
or
dec
mov
fnstsw
mov
arpl
jp
xorb
mov
jnp
in
fstpl
int
popf
jne
xchg
fwait
hlt
sbb
out
bound
mov
andb
jp
cmp
inc
in
adc
ljmp
fcomi
xchg
sub
loope
lods
mov
xor
adc
or
bound
imul
aad
xchg
in
rcrl
cltd
aad
imul
push
mov
pop
add
mov
mov
cmpsl
lret
and
or
or
dec
mov
stc
cmp
hlt
outsb
mov
jg
pop
xchg
out
call
and
sbb
enter
and
fsubl
popf
sub
into
and
imul
cmpsb
enter
fildll
and
in
aad
push
loop
dec
inc
cmp
clc
shll
mov
lret
sub
xchg
in
and
popf
outsl
popa
imul
adc
adc
jge
ds
pop
pop
push
xchg
jecxz
cmp
dec
ja
and
fsts
imul
dec
adc
loopne
clc
sbb
inc
inc
sub
pop
popa
jp
iret
mov
jmp
cli
inc
js
gs
int
dec
add
icebp
add
movsb
jno
bsr
sub
sahf
sub
xchg
lret
test
cmp
sub
jl
lret
insl
fdivr
jge
inc
pop
xchg
mov
mov
popa
fwait
cmp
cmp
add
rorb
mov
xchg
sbb
add
ret
mov
jne
inc
pusha
sbb
mov
sub
xorb
mov
in
aad
hlt
adc
cmp
mov
push
lea
stos
jnp
add
pusha
fcmovnbe
scas
into
sub
xor
mov
push
add
arpl
adc
test
inc
stos
push
push
cmc
js
pop
jae
incb
test
mov
lret
sub
out
sub
pop
push
mov
loopne
dec
inc
out
stos
or
rolb
sbb
xlat
movsb
int3
fs
mov
add
sar
and
adc
ljmp
jno
push
dec
jmp
dec
outsl
insl
jns
stos
cmp
je
jnp
aaa
ret
jnp
or
adc
repz
cli
cmp
and
mov
pop
pop
and
outsb
hlt
push
sub
call
fnstcw
pop
adcb
mov
or
adcb
icebp
jae
and
je
je
inc
jbe
mov
sahf
mov
adcl
xchg
in
orl
in
pop
sti
into
xor
clc
aad
or
push
imull
int
std
lds
out
lret
pop
addb
rorb
cmp
cmp
movsb
fistl
pop
xchg
leave
mov
imul
addr16
pushf
or
bound
jge
fsts
stos
xchg
lea
sub
popf
mov
shll
in
lcall
icebp
push
jmp
adc
mov
lret
jecxz
sub
aad
jecxz
rcl
pushw
push
cmp
cmp
fisttpll
xchg
jne
xor
movsb
mov
mov
xor
enter
aas
stos
imull
aam
push
mov
fs
lea
subl
test
mov
cmp
popf
lar
imul
jnp
or
and
xor
adc
imul
cs
push
or
inc
cmp
mov
xchg
ja
cli
mov
leave
push
imul
adc
cmp
std
fwait
rorb
test
aas
shlb
mov
insb
lret
jecxz
fwait
call
mov
sub
daa
sbb
pop
push
jo,pn
js
cmpsb
add
repnz
lcall
ds
inc
dec
dec
jb
andl
pop
xchg
inc
jge
loopne
aaa
out
or
data16
mov
dec
jecxz
in
in
imul
inc
mov
scas
xor
sub
inc
loopne
data16
into
cs
sub
mov
lret
lret
cwtl
enter
aam
push
iret
xchg
addr16
add
popf
cmc
lods
jo
mov
xlat
jl
cli
or
cmc
add
xor
jae
mov
cmc
scas
add
mov
push
xchg
push
mov
lea
and
test
inc
lret
sub
sbb
mov
es
cli
inc
push
fsts
popf
mov
rol
cmpsb
outsb
mov
adc
add
mov
cmpl
orl
inc
mov
ja
loopne
movsb
data16
fcmove
loopne
inc
or
mov
imul
jg
scas
repz
mov
add
xchg
pop
aam
dec
fstpl
mov
insl
inc
or
inc
mov
or
fiadds
pop
in
cmpsb
dec
int
ds
push
movsl
xor
adc
push
ljmp
sarb
dec
inc
std
dec
push
call
imulb
mov
adc
sbb
adc
sbb
in
xor
fldenv
dec
loopne
inc
out
les
jp
fwait
sub
pop
mov
mov
out
insl
push
pop
fs
stc
xchg
cmpsl
test
cmc
call
outsl
jg
shl
nop
xlat
xchg
inc
jnp
fwait
sbb
cmpsl
incb
xor
aam
fld
daa
xor
xchg
xor
scas
outsl
jge
lea
aam
pop
mov
cltd
and
adc
in
mov
fsubrp
mov
mov
pshufw
inc
xchg
cld
dec
add
dec
or
das
jmp
scas
insb
and
cmpsl
ss
stc
and
sbb
icebp
push
mov
dec
les
jb
ja
gs
imul
jbe
mov
movsl
fwait
shrl
loopne
sub
in
sub
pop
stos
ja
and
inc
ret
stos
xchg
ss
add
negl
pop
pop
into
sbb
scas
rcrl
sub
inc
pop
aaa
mov
sbb
fldl
ds
inc
lock
cmp
cmpsl
out
mov
inc
push
fmul
xchg
enter
xchg
add
mov
push
fsts
andl
jle
leave
xchg
es
inc
add
iret
rolb
cmp
test
adc
mov
inc
int
xorl
xor
in
stos
loopne
cmp
jle
pop
outsb
xor
xchg
add
cmp
aam
pop
inc
mov
mov
js
movsb
sub
lds
dec
xor
popa
and
mov
pushf
and
int3
fdivr
sub
lahf
std
out
jg
orl
cmp
call
fdivl
lcall
cmpsb
pop
repnz
add
int3
adc
stc
cs
int
jge
daa
cmpsb
xor
sub
hlt
das
lea
fnstcw
xchg
cmpsb
sbb
jno
fldl
cltd
cmp
ret
pop
test
mov
lcall
es
xor
popa
in
lock
mov
or
orl
dec
jmp
add
push
fnsave
fcoml
sbb
shrl
fsub
lock
fsubrp
inc
or
stos
mov
js
cmp
das
sbb
or
lods
les
data16
jl
insl
xlat
nop
popa
sti
xor
push
mov
lock
in
mov
enter
loope
pop
adc
or
jge
insl
dec
push
or
mov
mov
sbb
sub
cmp
lods
xor
int3
stos
mov
addr16
mov
fs
arpl
adc
jo
bound
daa
test
adc
out
ss
pop
leave
data16
jl
cld
xchg
sbb
push
fiadds
jl
push
insl
stos
aad
cwtl
fiadds
cltd
adc
xchg
xor
pop
pop
ret
dec
ja
jp
sub
je
into
fimull
fwait
and
sub
pop
negb
in
repz
wrmsr
sbb
cmp
jmp
inc
mov
adc
and
gs
popf
or
mov
nop
xchg
mov
add
ljmp
divb
add
pop
dec
mov
mov
cmp
jo
jb
mov
push
pushl
iret
aam
mov
dec
xchg
and
scas
and
lods
jecxz
mov
xchg
out
jae
out
sbb
add
inc
in
inc
push
fmull
push
loop
fwait
jp
imul
pop
add
xor
stc
cmp
sub
icebp
test
jne
fimull
xchg
dec
push
jb
out
inc
mov
loopne
or
sub
mov
gs
pop
movsl
popf
lea
les
sbb
mov
aad
xlat
out
dec
push
jecxz
jmp
sbb
pop
add
mov
cmc
adc
je
and
mov
sti
pop
ret
data16
aam
fildll
shrd
or
lods
cmp
xor
hlt
jns
xchg
and
dec
dec
mov
mov
dec
ret
ljmp
mov
nop
inc
adc
jl
cli
shll
je
or
jns
cmc
or
dec
imul
loope
and
mov
lret
mov
cmpsl
stos
xorl
push
inc
lea
sahf
sbb
push
sbb
fwait
cmp
push
mov
nop
push
add
roll
dec
negl
mov
loop
daa
ja
inc
xchg
sub
ljmp
fidivs
and
sub
lahf
insb
mov
rcr
mov
cmp
and
mov
add
out
sbb
test
loopne
hlt
mov
subb
or
js
adc
mull
movsb
shl
repnz
in
xchg
xchg
int3
mov
lea
jge
fwait
mov
test
in
xor
js
mov
jp
pop
dec
cmpsb
daa
repz
xor
lcall
mov
fstp
xchg
fsubs
int3
loope
pop
dec
adc
inc
xchg
sbb
cmp
push
push
push
pop
out
mov
adc
aas
lods
jge
jb
add
inc
cmp
leave
pop
cwtl
xor
cmp
sub
inc
leave
das
insl
inc
pop
scas
jp
fwait
pusha
xchg
hlt
shlb
xor
push
or
push
or
sbb
sub
cmpl
bound
call
add
clc
fcmovnbe
movsb
pusha
sub
xchg
scas
popf
repnz
aas
sahf
sbb
jbe
push
out
data16
xlat
push
sub
cmp
xlat
cmp
movsl
dec
cmpb
push
xchg
mov
cmc
dec
incb
cmpsb
scas
and
jge
jecxz
cmp
jnp
sbb
stc
jns
pop
dec
rol
insb
mov
cmp
imul
into
or
sbb
dec
subl
dec
add
jno
test
test
dec
aad
dec
in
pop
stos
jmp
aas
sahf
push
xchg
push
out
pop
mov
fstpl
popf
pop
test
cld
movl
pcmpeqd
mov
and
fmull
push
sub
xor
in
mov
aam
cltd
inc
add
pop
sahf
mov
xor
ret
add
sahf
into
adc
mov
xchg
cmpb
add
sub
pop
mov
mov
jge
js
mov
inc
outsb
iret
add
aad
mov
xchg
fldenv
or
sarl
jns
leave
add
rcll
cwtl
notb
dec
sbb
sbb
inc
pop
mov
repnz
pop
outsl
in
loop
test
push
pop
cli
imul
inc
mov
ljmp
adc
and
daa
cmc
push
decl
xor
pop
jp
cs
scas
jo
lds
mov
lahf
jmp
xchg
push
scas
test
or
xchg
sub
mov
or
push
pop
outsb
xor
xor
push
mov
repz
hlt
mov
push
jne
lea
adc
jp
jl
fadd
test
inc
push
divb
jmp
jno
or
xchg
je
add
lret
cmp
sysret
dec
stc
scas
xchg
popa
sub
pop
push
jl
ja
mov
sbb
push
outsl
andb
and
xchg
test
pop
add
inc
ret
pop
pop
das
daa
lea
mov
xor
jmp
lea
cmp
jle
add
mov
lea
inc
bound
dec
adc
lods
mov
shlb
adc
xchg
test
lods
xor
mov
jae
mov
adc
pop
pop
xor
jae
inc
dec
add
mov
or
mov
imul
jno
mov
dec
sar
fisubrl
sub
pop
mov
xor
and
lahf
or
fld
mov
xchg
std
inc
lret
in
sarb
xor
push
mov
jns
sub
dec
fbld
inc
jmp
mov
movsl
dec
sub
sub
out
les
mov
imul
frstor
mov
rclb
sbb
aas
mov
dec
and
movsb
xor
sbb
cmp
adc
pop
or
cmc
mov
roll
cmpsl
lahf
cwtl
insl
les
dec
fistps
jae
mov
popf
push
push
xchg
decb
adc
xchg
icebp
fadd
push
test
mov
push
and
xor
jnp
xchg
jne
add
js
pop
out
mov
ret
les
pushf
dec
add
adc
les
rcr
sub
and
adc
xchg
out
or
jl
out
xor
jns
sbbb
xor
je
mov
adc
movsl
sbbb
into
jns
mov
popf
mov
adc
mov
adc
sti
xchg
mov
lods
pop
jns
scas
je
push
jne
inc
xor
sub
fidivrs
jmp
inc
jmp
jp
out
lcall
and
mov
nop
sub
push
lods
rclb
jmp
xor
jmp
mov
xor
or
push
adc
imul
mov
pop
xchg
xchg
xchg
jmp
aad
movl
test
insb
mov
scas
cmp
sysenter
ljmp
mov
test
dec
enter
fmull
andb
ret
test
mov
imul
push
sbbl
jnp
jnp
mov
or
jae
pop
and
xchg
insl
mov
frstor
fs
movl
push
fdivs
xor
stos
xor
test
fdiv
iret
clc
xchg
fisttps
por
sbb
mov
idiv
addb
jns
push
jle
push
mov
pop
cmpl
lret
jmp
mov
push
jae
sbb
jns
icebp
jle
sbb
cmp
xchg
sbb
adc
bnd
test
dec
repnz
add
inc
rcll
shl
mov
jge
inc
inc
scas
mov
xor
jle
pop
out
daa
xor
pop
bound
stos
ss
icebp
call
push
ds
sub
cwtl
jle
mov
mov
push
in
les
insb
mov
jmp
scas
xchg
inc
push
adc
inc
sbb
xchg
test
mov
push
adc
or
sbb
mov
rcll
cmpsb
or
test
in
mov
and
cmpsb
jge,pt
jge
or
mov
rcrb
arpl
mov
pop
jns
inc
lea
or
lcall
xchg
add
xor
imul
pop
lods
dec
jae
xchg
outsl
and
fadd
rol
xchg
pop
adc
mov
jns
mov
mov
movl
mov
fists
ljmp
dec
cltd
sbb
adc
dec
mov
loopne
dec
jbe
movb
rcll
je
cmp
dec
and
adc
adc
push
push
js
jl
jne
rclb
dec
jmp
inc
dec
pop
lea
cmpsb
out
push
adc
lea
push
pop
sub
adc
xchg
cmc
xor
stos
adcb
out
fbld
divl
adc
xchg
call
and
xor
ss
or
mov
lret
sbb
lret
outsl
out
add
fnstenv
out
mov
mov
or
push
cmpsl
in
das
lcall
popa
mov
mov
mov
or
subb
pop
or
sub
cld
fistps
adc
fldenv
adc
sub
adc
enter
daa
cmpsb
int
into
loopne
outsb
out
loop
mov
jno
add
and
adc
test
fwait
aam
js
and
pop
pushf
cmc
inc
cmc
adc
sti
pushf
lea
inc
scas
push
pop
out
mov
mov
popf
gs
xchg
mov
sahf
mov
dec
leave
sbbb
inc
sahf
loop
call
fwait
sub
lods
sbb
icebp
xor
push
and
scas
es
aad
pop
daa
adc
inc
add
sub
and
out
sub
sub
int
movsb
into
xor
jg
add
jecxz
pusha
sub
lds
push
xor
jl
inc
stos
imul
inc
mov
dec
dec
loop
and
push
fists
into
mov
movsl
mov
mov
leave
xor
gs
mov
inc
cmpsb
push
cmp
iret
sbb
stos
or
imul
aas
pop
lea
addr16
dec
inc
lret
into
cmovnp
addr16
adc
fimull
cmp
cmp
orl
push
pminsw
sbb
rorb
dec
stos
nop
sub
mov
clc
movsl
outsl
aam
outsl
dec
jne
loope,pt
mov
adc
fisttps
loopne
lock
and
cld
mov
pop
pushf
nop
and
adc
out
lcall
data16
and
mov
int
mov
sub
jg
and
pop
push
leave
and
outsb
dec
mov
outsl
int
shll
cli
loope
dec
out
movsb
and
andl
mov
in
pushl
mov
inc
or
hlt
addb
jno
push
mov
jge
outsl
cld
bound
popf
pop
cwtl
loope
je
jge
imul
mov
adc
ficompl
hlt
push
push
jecxz
in
mov
inc
pop
popa
das
shrl
repz
mov
pushf
out
dec
inc
jp
jne
adc
dec
lcall
push
and
and
lea
push
inc
pop
cmp
ficompl
popa
add
js
ret
mov
push
dec
inc
xor
ds
fsub
mov
jge
jle
gs
pop
arpl
xor
jle
sbb
fmuls
push
jnp
sbb
insb
pop
add
xchg
jge
shrl
arpl
jnp
and
mov
fisubl
mov
ljmp
lock
idiv
push
pop
out
insb
add
adc
pop
jns
dec
int3
ret
sub
sbb
lods
jne
fs
or
jns
add
into
fisubs
aad
jmp
adc
je
xor
dec
shrb
inc
inc
mov
mov
dec
xor
loop
mov
xchg
and
adc
push
sub
lahf
push
push
lret
inc
out
fiaddl
out
loopne
add
jmp
jae
xor
cmp
jno
das
mov
stc
pushf
mov
jg
fsts
jle
das
pop
out
and
pop
pushf
xor
sbb
rol
add
add
adc
pusha
sbb
lret
stc
test
pop
loop
mov
aas
fsts
iret
lods
pop
mov
rolb
xchg
xchg
mov
xlat
das
addr16
ljmp
mov
out
jecxz
add
test
push
test
pushf
cmp
lea
jge
sbb
push
sbb
add
sti
mov
pop
js
test
ret
pop
and
fwait
loope
imul
sbbl
shlb
push
icebp
and
cmp
hlt
dec
mov
adc
jmp
adc
mov
sub
repnz
insl
adc
mov
in
std
fcmovb
lret
repnz
adc
xchg
imul
inc
jbe
es
xor
cmpb
inc
and
mov
dec
mov
xlat
popa
roll
jbe
add
rclb
pushf
mov
sarl
sub
fildll
and
leave
xor
loope
or
div
lahf
repz
jo
cmc
add
and
mov
and
shll
std
xor
mov
jae
xor
sar
loope
mov
push
out
outsl
out
leave
daa
pop
int3
sbb
mov
stos
mov
fwait
jns
pop
push
jne
fidivl
cli
pop
inc
popa
cmc
fildll
imul
out
or
push
scas
sub
imul
fmul
fsubs
test
aaa
and
les
xchg
cmp
sub
outsb
push
mov
xor
lds
insb
outsl
rcr
out
dec
xchg
jae
orb
or
lock
cmpsb
adc
loop
jne
push
aam
jbe
xor
mov
or
ret
negb
cmp
inc
mov
in
or
mov
or
dec
add
or
jo
dec
mov
aas
xor
or
test
out
dec
jb
imul
pop
out
jbe
ss
mov
loope
add
jno
cld
jmp
push
push
sbb
arpl
mov
sbb
int3
cwtl
fildll
cmc
sub
into
jnp
mov
mov
sub
insb
jg
into
insl
jbe
xchg
popf
or
cli
shr
mov
out
xor
add
add
xlat
daa
mov
addr16
push
daa
sti
inc
lea
sbb
dec
cmp
cmp
fwait
mov
ret
jae
pop
jecxz
push
mov
pop
insl
add
loopne
mov
add
mov
mov
cld
mov
pop
sub
inc
dec
push
pop
mov
jns
xchg
in
jg
add
insl
les
stc
mov
sub
fistpll
insb
pop
sbb
vorpd
mov
gs
sahf
cmp
js,pt
xchg
sbb
and
mov
and
in
bound
negl
loop
sub
xchg
jle
inc
cmpsl
loope
jmp
clc
incl
pop
nop
ja
add
popa
inc
popa
test
xchg
lret
jecxz
push
movsb
mov
xchg
pop
arpl
jg
jp
jmp
popl
int
jo
ljmp
sub
insb
inc
mov
outsl
lcall
mov
test
sti
imul
xchg
inc
loopne
pushf
lods
and
or
test
test
shll
pushf
movsl
movsb
mov
stos
pop
ds
xchg
pop
stc
inc
fs
loope
mov
or
aaa
imul
mov
test
ljmp
cmp
dec
jne
sub
jp
cwtl
fldcw
test
outsb
pop
movsl
fbstp
lea
mov
push
ljmp
rcll
fists
adc
cld
repnz
inc
shlb
stos
js
cld
push
repz
insb
add
xor
sub
push
xlat
aaa
push
add
pop
jg
mov
mov
and
sarb
fbstp
adc
out
mov
push
dec
jae
ja
sub
sbb
jge
pop
mov
jb
pop
pop
cmp
cmp
jno
pop
mov
iret
pop
decl
xlat
rcll
sub
imul
and
or
and
shlb
push
icebp
stos
dec
lcall
adc
aad
cmp
xchg
xlat
mov
and
out
outsl
fcmovnu
and
adc
stos
push
mov
mov
nop
pop
aam
call
push
mov
aas
sbb
mov
addb
or
ss
enter
push
fdivrs
sub
sahf
cmp
dec
fists
inc
aas
mov
push
lea
dec
cmp
pop
lret
mov
test
sub
in
sub
scas
xchg
shrl
test
and
and
xor
sub
idivl
xchg
out
dec
mov
adc
lret
testb
cmp
pop
xor
ljmp
mov
pusha
stc
pop
push
push
xchg
sub
jne
mov
pop
and
sarb
jne
pushf
dec
shlb
mov
dec
outsl
jp
out
mov
add
dec
or
divb
dec
pop
mov
mov
mov
xor
jnp
xlat
sti
cmp
pop
andl
into
arpl
dec
mov
testl
mov
aam
push
adc
ja
sbb
cltd
insl
pop
dec
sbb
xor
aam
in
subb
into
sub
lret
or
sbb
jmp
mov
cmp
and
std
add
xchg
dec
loopne
push
pop
nop
push
enter
jne
push
addr16
mov
bound
inc
xor
mov
sti
dec
mov
jge
lods
enter
push
xchg
adc
xor
lret
ds
mov
pop
xchg
mov
aam
out
mov
mov
sbb
fcomps
mov
sbb
pop
into
mov
movsb
push
cmp
sub
lret
aam
mov
subb
fsubs
pop
mov
cmpsb
inc
xor
scas
jno
ficompl
or
xchg
call
push
push
out
stc
add
loope
adcb
xor
arpl
ftst
push
js
mov
adc
pop
fidivrs
dec
jo
push
mov
sub
inc
ffree
sbb
lcall
adc
mov
es
pusha
clc
pushf
sqrtps
and
and
dec
imul
sbbl
loop
jnp
pop
xor
jnp
xchg
or
dec
aam
jae
ljmp
das
lods
cltd
mov
jno
stos
out
mov
insb
loopne
sub
fidivs
mulb
push
repz
push
pop
push
xchg
jp
mov
sahf
enter
sahf
push
lcall
shrl
jg
pop
icebp
push
push
cmpsl
scas
mov
insl
fwait
xchg
gs
mov
xchg
adc
test
and
inc
cmp
repnz
nop
xor
pusha
fwait
rolb
repz
ljmp
push
addb
shrl
mov
fildl
cmpsl
rcrl
xlat
stc
xchg
push
xor
pop
in
sti
sbb
push
scas
cmp
push
mov
push
push
ljmp
xchg
jmp
loop
cmp
adc
xlat
add
fimull
testb
jl
dec
adc
inc
cmp
sbb
mov
jnp
jae
push
inc
addr16
xlat
mov
sbb
test
adc
subb
daa
jae
xchg
mov
addr16
ss
jae
and
sub
jns
jp
jo
pop
shlb
ss
js
pop
negl
lods
pop
cmp
mov
pop
cltd
push
fsub
xchg
sbb
jns
stc
pop
bound
fsub
inc
sbb
shl
jmp
decb
add
or
xchg
in
xchg
cltd
loopne
jmp
ja
ss
insb
ljmp
and
mov
or
bound
addr16
lea
mov
testb
in
hlt
ljmp
xchg
jbe
mov
xchg
insl
mov
and
mov
mov
push
mov
dec
and
and
clc
dec
sahf
mov
lock
int3
fs
xlat
pop
dec
fwait
mov
dec
mov
mov
mov
push
dec
cmpsb
repz
call
fistpll
mov
xchg
cmp
add
rorl
sarb
les
mov
fisubs
int3
mov
dec
test
mov
mov
mov
sub
leave
sbb
in
xor
mov
pop
dec
mov
adc
push
out
xchg
rcll
cmp
cli
or
adc
in
xlat
push
pop
pop
lock
das
cli
add
mov
mov
icebp
push
xlat
aas
xorl
pop
jle
dec
les
inc
ds
rorl
scas
add
cmp
imul
and
jmp
dec
inc
aaa
out
lret
adc
inc
hlt
or
xorl
fiadds
call
mov
cmp
iret
mov
xor
mov
rol
in
hlt
jg
aad
and
xchg
pop
ret
div
mov
pusha
nop
push
push
jl
andl
leave
dec
adc
clc
pop
mov
xor
xchg
jae
leave
mov
xchg
icebp
stos
jno
mov
in
or
push
jp,pn
out
test
popf
enter
pusha
cmc
rolb
out
mov
cmp
js
jle
inc
sub
loope
mov
movb
mov
ss
inc
push
add
or
js
mov
xorl
outsl
xlat
int3
xor
or
aaa
push
inc
sub
adc
xchg
xchg
adc
dec
pusha
popa
mov
cmpb
sbb
xorl
out
and
and
push
loope
pushf
enter
pop
hlt
mov
mul
sbb
mov
sarl
dec
dec
push
sti
nop
xor
jns
inc
sbb
add
dec
inc
add
fnstenv
pop
ficompl
mov
test
inc
mov
call
lds
jp
xchg
pop
xor
pop
test
call
movsl
jbe
cmp
fsubrs
xchg
cmp
mov
xchg
cmp
mov
mov
fstpt
push
das
scas
repnz
stos
stc
xlat
cmp
pop
cmc
add
push
dec
mov
add
push
fwait
mov
aas
xchg
loope
mov
or
jns
adc
dec
mov
lods
test
jg
pop
adc
imul
jnp
aam
mov
movsl
jmp
repnz
fnstcw
mov
ljmp
test
add
stos
fs
jmp
xor
sbb
and
xor
rorl
fwait
dec
insl
adc
xor
jp
or
cmc
mov
mov
mov
cmp
dec
jg
dec
jg
or
add
mov
in
push
jnp
in
sbb
mov
mov
imul
shll
popf
jns
add
sub
hlt
lods
fnstenv
inc
jmp
sbb
and
xorl
push
aam
outsb
aam
rolb
sarb
daa
push
mov
and
rol
stos
mov
inc
mov
and
mov
mov
jbe
push
dec
dec
in
and
mov
out
cs
daa
icebp
and
dec
pop
jp
push
sub
mov
add
mov
push
sub
lods
in
aaa
sub
xor
and
mov
xchg
add
out
dec
jo
rcll
pushf
mov
adc
popa
movsl
add
test
jge
sti
mov
mov
pop
sub
mov
inc
imul
xor
pop
push
sbb
mov
mov
imul
jne
dec
pop
shrb
imul
jle
push
mov
rcll
mov
cmp
or
mov
rclb
jge
pop
jge
mov
xor
enter
inc
inc
lret
pop
adc
inc
test
popa
sub
repz
notb
xchg
outsb
mov
flds
or
sub
notb
push
aam
popf
mov
xchg
and
or
loope
xorl
inc
icebp
iret
xor
dec
jb
sbb
frstor
aas
imull
push
fsubr
add
lea
aaa
call
or
cmpsb
pop
shll
mov
testb
pushl
scas
loope
arpl
out
aaa
xlat
xchg
and
imul
xchg
clc
push
mov
jecxz
sahf
sbbl
mov
bound
jmp
jl
fisubrs
or
dec
movsl
push
shll
jbe
pop
jecxz
pop
pusha
or
cmpsb
je
fwait
push
fsubrs
xchg
dec
hlt
or
fnstenv
inc
or
cmp
aas
lods
mov
mov
sbb
jae
insb
test
ljmp
aad
std
push
adc
lret
out
mov
add
xlat
leave
fidivs
or
xlat
mov
push
or
push
insb
notb
jns
stc
in
cld
addl
add
stc
add
jno
int3
inc
fcompl
inc
jge
jnp
dec
pop
xchg
loopne
xchg
aas
mov
and
adc
lahf
rclb
cmp
lret
xor
sarl
aaa
inc
jge
dec
adc
dec
loopne
mul
push
gs
mov
add
mov
adc
lds
cmpsl
or
mov
movb
cmp
inc
shld
dec
pinsrw
mov
add
frstor
in
js
xchg
cmc
pop
sub
dec
out
incl
icebp
mov
sub
lahf
lret
dec
dec
mov
mov
add
add
fs
loope
pop
inc
stos
repz
xlat
subl
movl
pushl
test
and
nop
lods
fldt
lods
mov
or
push
or
shll
xchg
loope
pop
test
dec
movq
in
xchg
js
push
shlb
fcoml
cmp
mov
cmpsl
dec
rcrl
repz
dec
mov
xlat
insl
dec
mov
add
and
sbb
int
lock
test
mov
xor
fcom
push
xchg
sbb
cmpsb
inc
movsb
out
lock
aas
inc
inc
jb
sarl
or
pop
loopne
mov
arpl
sub
or
outsl
outsb
sub
in
pop
inc
inc
mov
bound
jne
ds
xchg
lahf
leave
pop
inc
std
inc
xchg
out
adc
fs
mov
fiaddl
add
mov
jbe
sbbl
inc
xchg
test
push
adc
pushl
jle
jnp,pt
in
pop
lods
lahf
mov
jne
jle
out
jle
or
mov
xchg
push
mov
xor
mov
cmp
and
jns
cs
repz
xchg
pop
arpl
loopne
addr16
jle
mov
movsl
mov
dec
loop
popf
fists
pop
and
jno
mov
pop
jl
lock
outsb
xchg
and
jnp
in
or
mov
mov
das
inc
xchg
sub
pusha
pop
inc
and
jle
into
sarb
imul
je
sbbb
pop
mov
insb
sub
and
jbe
loop
ss
arpl
orb
lret
movsl
clc
daa
mov
add
xchg
jl
pop
and
mov
in
mov
inc
and
mov
call
adc
pop
sub
ss
addr16
outsb
fcompl
mov
sub
fcoms
sbb
lret
sub
xchg
test
ss
cmp
repz
aas
faddl
mov
inc
mov
bound
jae
jmp
pop
xlat
cli
scas
push
mov
jge
xchg
push
inc
mov
add
mov
ja
jne
popa
outsb
mov
testb
inc
ret
lahf
insb
adc
inc
lcall
jecxz
cs
inc
jmp
icebp
pop
lret
jle,pn
int
inc
or
icebp
test
mov
xor
push
clc
dec
and
scas
ds
xlat
pop
aas
mov
aad
cmc
cmpb
or
cmpsl
mov
adc
loope
xchg
or
cmp
pop
dec
in
mov
and
xor
mov
jle
mov
mov
jg
out
testb
test
push
pop
test
sbb
mov
push
in
lods
pop
enter
mov
pop
inc
and
jae
hlt
xchg
and
popf
fs
sub
jle
adc
loopne
in
div
out
mov
sub
enter
mov
adc
sub
movsb
inc
inc
sbb
enter
addr16
push
test
orl
and
or
or
inc
or
push
xchg
insb
mov
adc
pusha
mov
dec
push
mov
pop
xchg
mov
pop
fiaddl
sti
mov
mov
jns
mov
xchg
dec
leave
mov
sarb
pop
xchg
int
fwait
add
mov
jp
jle
cmp
lock
jecxz
fidivl
cmp
icebp
mov
inc
cwtl
imul
pop
mov
xchg
mov
push
inc
repnz
jecxz
jp
add
mov
mov
pop
xchg
pop
shl
push
js
cmp
nop
fildll
inc
push
fwait
jl
inc
jg
in
sub
pop
lock
jecxz
popf
aad
out
xor
roll
push
das
xor
jge
outsl
adc
lret
adc
xor
shr
jle
or
add
or
xor
jns
dec
leave
mov
pop
sub
rcrl
xor
xchg
gs
inc
mov
sbb
arpl
loop
movsb
or
sbb
sub
sub
pop
cmp
cmp
add
push
ljmp
cmp
mov
jne
fwait
andl
lods
or
dec
mov
jb
fldenv
sarb
jnp
jae
loope
mov
add
mov
lcall
xlat
xchg
xchg
std
ficomps
xchg
outsl
xor
cmc
into
cmp
lret
xor
in
imul
xchg
dec
mov
pop
imul
std
sub
arpl
adc
xor
dec
sub
jmp
lock
mov
cmp
rcrl
mov
or
mov
inc
jo
rol
sub
add
insb
xchg
jp
lods
xchg
int
lock
xor
hlt
xlat
mov
push
leave
inc
push
jno
data16
cli
enter
addr16
xchg
ljmp
mov
arpl
ret
dec
pop
jg
decb
or
repnz
add
xor
sbb
out
cwtl
mov
jmp
xchg
jae
push
ljmp
mov
mov
pop
mov
inc
repnz
sbb
inc
cmp
call
lock
ret
stos
shrl
test
dec
pop
shrl
fwait
mov
mov
adc
and
push
mov
ljmp
es
and
fildl
sub
or
sbb
push
fcoms
jge
jbe
pop
mov
int
mov
enter
mov
mov
xor
andb
mov
jne
add
mov
mov
pop
nopl
imul
movsl
into
sbbl
fwait
xor
enter
repnz
mov
pop
loope
aam
cmc
call
cmp
sbbb
ja
dec
daa
pusha
stos
fs
mov
hlt
repz
cwtl
data16
lds
lock
cmpsb
int
cltd
test
adcl
push
pushf
test
lret
inc
pop
dec
out
pop
lock
fdivl
rorl
lret
pop
mov
sbb
sub
inc
xor
pop
mov
movsl
xor
fdivs
mov
inc
adc
jg
inc
mov
xchg
js
jge
adc
xchg
mov
fldl
pop
addr16
mov
sbb
lret
xor
push
add
mov
data16
jle
sub
mov
test
sub
push
int
pop
mov
push
mov
fadds
cmpsb
and
aam
mov
and
pop
cwtl
fbstp
jne
push
adc
jl
js
cli
in
cli
ss
inc
mov
add
xchg
pop
out
mov
insl
xchg
adc
lds
lret
jne
jg
or
aaa
lock
notl
jns
add
pop
cmpsl
popf
xchg
les
enter
and
or
icebp
fwait
repnz
fwait
sbb
sahf
mov
icebp
mov
jmp
aam
push
fbstp
push
xor
mov
inc
test
xchg
int
jecxz
xorb
nop
jp
das
xchg
inc
or
push
stos
aaa
ljmp
aad
mov
xchg
sub
mov
add
push
mov
mov
mov
xchg
shrl
adc
xchg
add
mov
std
xor
mov
and
inc
leave
mov
pop
sub
dec
dec
mov
lahf
mov
call
pop
inc
leave
dec
iret
test
movsl
and
in
jg
inc
sahf
aad
jp
push
jle
lea
ret
add
cmp
cmpsl
lds
lods
fwait
int3
xor
mov
mov
iret
lahf
mov
into
dec
jp
dec
imul
sbb
cs
adc
popf
imulb
and
xlat
test
mov
mov
lods
push
sub
sbb
out
adc
xchg
nop
push
stc
lcall
push
lahf
pushf
icebp
movsb
xor
add
add
fdivp
or
mov
jl
jae
pop
jmp
inc
lret
jae
xchg
mov
insb
push
mov
out
mov
cmp
test
sti
jns
ljmp
mov
mov
jno
movsb
dec
loop
fstps
jne
leave
inc
xor
int
sbb
adc
out
rcrb
test
int3
imul
push
sbb
mov
aam
cmc
jp
lea
push
ss
and
pusha
and
adc
mov
nop
movsl
and
push
inc
popl
in
in
mov
loopne
adc
test
xor
leave
sub
cmp
mov
inc
fdivrl
ret
clc
mov
pushf
mov
fists
cmp
dec
mov
cmpb
mov
cs
fldt
mov
testb
movb
pop
pop
movsl
and
sbb
mov
mov
out
sarb
mov
clc
loop
mov
xchg
add
inc
jl
loopne
fmul
jnp
adc
shrl
cmp
cmpb
mov
jg
dec
lret
adc
mov
mov
adc
leave
fwait
xchg
adcl
icebp
push
mov
jmp
lret
dec
pop
lret
fildl
xchg
xor
jmp
mov
or
xlat
ret
dec
hlt
leave
outsb
jl
ret
push
push
insb
movsl
mov
rcrl
lret
xor
addr16
icebp
fsubr
sti
sarl
subb
pop
mov
or
xchg
cmpl
lock
fcomps
add
mov
mov
pop
test
fnstsw
jl
arpl
in
mov
fldenv
dec
jmp
pop
out
sub
xchg
imul
icebp
dec
push
ret
imul
sahf
insb
pop
pusha
es
jmp
pop
dec
xor
sbb
pop
in
in
icebp
aam
xchg
clc
mov
das
cltd
mov
jge
fwait
push
jmp
mov
fnstenv
inc
xchg
test
sub
add
inc
lret
leave
push
or
push
push
sub
sub
xchg
push
movd
pop
subb
inc
sub
dec
jns
cwtl
lods
ds
popa
xor
bound
cmp
fwait
nop
cmp
jne
ret
into
sub
out
test
dec
outsb
into
dec
repnz
enter
icebp
sub
clc
clc
or
inc
pusha
loope
out
testl
inc
push
push
shlb
xor
or
push
loopne
jnp
enter
test
stos
mov
out
aad
mov
jne
mov
imull
fimuls
add
sbb
ficoms
push
fcomps
lds
add
dec
jecxz
cmp
jle
jae
mov
lea
mov
jle
push
and
cld
push
cmp
xchg
mov
pop
mov
out
dec
cs
fucomi
or
ljmp
insb
cmp
add
ljmp
pusha
push
add
fwait
pop
mov
pop
adc
xchg
mov
sub
es
lods
je
xchg
das
lcall
lret
pop
xchg
dec
fs
xchg
les
add
dec
cmpl
dec
cmpsl
imul
lahf
insb
cmp
cmp
jbe
or
add
dec
insb
jne
push
movsb
cmp
push
int3
inc
lcall
cmp
and
fwait
mov
lds
adc
lock
rorl
lea
loopne
and
xchg
push
mov
pop
pop
ret
pop
in
xor
mov
mov
add
cmp
xor
data16
test
fwait
xor
cli
jmp
out
inc
pop
fsubrs
adc
fistl
scas
push
sbb
jae
jno
jge
fdivr
xor
or
in
jl
mul
popf
inc
clc
rorb
xor
pusha
xor
sub
in
lock
rol
dec
loopne
aas
lcall
and
lahf
mov
jno
rcl
sahf
rorb
xor
sub
arpl
sbb
inc
mov
scas
or
and
sbb
inc
ja
in
pop
outsb
inc
in
push
pop
out
in
fnstenv
sbb
imul
test
cmpsl
mov
sbb
jno
test
jb
stc
lcall
dec
cmp
insl
xchg
mov
mov
sub
cmpsb
mov
sahf
push
mov
fld
xchg
jae
loope
sbb
jl
inc
inc
in
int
sub
pushf
je
js
out
and
add
xchg
mov
mov
fistps
in
ss
mov
cmc
es
lret
mov
aam
mov
xchg
ja
xor
inc
push
sbb
out
mov
ret
jmp
data16
push
push
push
adcl
jmp
inc
push
sub
out
rclb
cmp
fisubrl
push
or
push
or
imul
lods
pop
fldl
mov
out
movsb
and
out
jle
test
lds
je
test
cmpsb
fistl
mov
paddsw
sub
mov
mov
xchg
and
xor
test
sub
fwait
cmpsl
sbb
cmp
sub
out
lret
lock
mov
repnz
leave
and
int3
shl
mov
sbb
shlb
insb
pop
lods
js
aaa
add
in
shl
rorb
mov
adc
inc
movsl
fs
hlt
inc
jp
pop
and
aam
jno
imul
mov
add
jbe
jne
add
push
mov
out
or
call
lods
pop
repz
or
cmp
mov
cltd
adc
mov
fcomip
pusha
dec
mov
vaddsubpd
imull
sbb
test
jb
xchg
xor
mov
mov
sahf
jmp
in
dec
in
jmp
xor
mov
dec
xor
out
and
sahf
push
mov
jae
loop
xor
stc
dec
mov
adc
jl
popf
fldenv
add
data16
pop
fistl
mov
lcall
mov
mov
fwait
mov
mov
and
xchg
jb
sbb
test
sub
mov
sub
inc
push
add
or
jno
ret
repnz
lea
mov
bound
dec
cli
fidivs
cld
dec
xor
cli
sub
icebp
inc
mov
jecxz
add
sub
fildl
dec
adc
inc
popf
cmp
cmp
sbb
xor
jge
and
inc
push
cli
mov
mov
in
loope
repz
inc
fistl
jge
xchg
leave
add
dec
and
sbb
roll
in
inc
inc
mov
adc
stc
sti
iret
shlb
addb
mov
fidivs
add
cwtl
fistpl
std
ret
inc
jo
xchg
push
and
out
ja
cmp
enter
dec
out
int
dec
cmp
loope
in
xchg
adc
sub
iret
lea
mov
imul
insb
adc
jbe
xchg
jne
dec
nop
sahf
dec
adc
shl
and
enter
and
icebp
pop
or
sub
sbb
cmp
jl
push
push
arpl
sbb
lods
push
cli
mov
adc
dec
fbld
cltd
push
mov
inc
push
sub
outsb
xlat
cmp
fs
aaa
pop
into
sub
das
add
jmp
aam
leave
adc
push
xor
leave
vpshlb
fbld
or
cwtl
jle
or
xchg
popf
adc
pop
jae
xchg
leave
cwtl
mov
or
pop
adc
xchg
addl
xchg
enter
jb
add
add
pop
inc
dec
ds
push
pop
sarb
movsb
cmp
rorl
enter
bound
jp
enter
push
push
imul
pop
lea
sub
xchg
movsl
add
jge
outsb
sub
xchg
mov
out
xor
mov
aaa
and
shr
scas
inc
jb
push
ror
out
movsb
aam
pop
push
ror
in
pop
decl
adc
and
out
lods
lea
and
push
outsb
and
mov
dec
negb
mov
loopne
pushf
test
sub
xor
test
repnz
fcomps
xor
out
inc
jb
sti
aaa
in
jmp
mov
xchg
pop
dec
lock
mov
gs
mov
fistl
shll
dec
ds
movsl
orl
mov
mov
mov
adc
push
xchg
in
xor
int
mov
sub
mov
cltd
push
or
xchg
fbstp
cli
aam
scas
addr16
ja
mov
inc
shlb
jne
arpl
jae
mov
push
shll
sahf
das
lret
pop
scas
es
fsubrl
push
sbb
sarl
mov
mov
sub
jne
add
clc
repz
lock
int3
jnp
std
jns
ja
loopw
int
ficomps
bound
lock
cld
cmp
jecxz
jbe
add
dec
outsb
inc
roll
cltd
jmp
or
sbb
jae
daa
sub
mov
or
fs
pop
imul
loopne
loope
cld
gs
lahf
inc
mov
inc
stos
xor
loopne
jge
enter
movsb
inc
mov
xlat
iret
leave
mov
cs
idivb
imul
xchg
mov
pop
lds
andl
cmp
mov
arpl
fmuls
adcl
ds
jp
pop
repz
pop
sbb
lock
or
and
pop
xor
addr16
xchg
mov
push
icebp
gs
mov
xchg
movb
js
cmp
shll
jmp
das
xor
clc
lock
call
es
in
pushf
fcoml
repnz
cwtl
and
xchg
push
xorb
out
fiadds
mov
and
sub
inc
stc
push
rolb
outsl
cmpsl
sbb
jns
xchg
arpl
sahf
mov
rcrb
jnp
sti
lcall
outsl
adc
xchg
ret
les
inc
dec
and
pushl
pop
adc
scas
dec
add
pop
scas
jmp
or
ret
stos
fcomip
and
sbb
jnp
pop
mov
insb
pop
add
repz
xor
aas
push
cmp
mov
loopne
jae
pop
xchg
add
jne,pn
jecxz
mov
add
and
sti
cli
movsb
sahf
mov
or
mov
loopne
inc
or
ficomps
add
jns
insl
shl
daa
rclb
xor
mov
jae
nop
dec
inc
sub
fsubl
sbb
aaa
scas
and
inc
xchg
sti
ds
push
inc
sub
sbb
lods
cmp
xlat
jecxz
jle
xor
sbb
mov
mov
cmpsb
xchg
sub
in
xor
cmpsl
rcll
mov
push
gs
fdivs
adc
inc
in
push
call
push
or
fcomip
int3
dec
sbb
mov
shlb
data16
push
push
push
sbb
xor
call
and
jge
ret
sub
dec
insb
inc
jge
pop
and
sub
adc
xlat
push
aaa
add
test
mov
jl
adc
mov
movsl
test
outsl
push
insb
out
and
jecxz
das
mov
xlat
lods
adc
js
es
jl
lds
pop
into
ret
dec
mov
or
push
sbb
mov
mov
movsb
shl
sub
rcrl
cli
clc
fs
xchg
out
in
lahf
lret
add
fistl
xchg
mov
cs
loope
mov
pop
xchg
jmp
push
pop
addr16
test
jp
mov
mov
mov
xchg
sbb
add
dec
jmp
sub
pop
adcl
hlt
push
sbb
cmp
test
jg
inc
sbb
call
mov
out
lahf
shrl
sub
xchg
mov
fnstcw
test
jecxz
cmpsl
test
lahf
cmp
jmp
lret
inc
adc
mov
inc
xchg
push
pop
mov
loopne
fs
add
and
aaa
xor
adc
lahf
cli
call
xchg
js
mov
sbb
clc
rorl
mov
popa
xor
dec
lret
xor
mov
fcomps
in
mov
sub
enter
mov
jl
jno
push
jle
inc
xchg
push
ljmp
pop
sub
push
hlt
and
sub
scas
in
jle
cltd
fldl
dec
test
pop
adc
fnstsw
mov
test
sarl
stc
inc
test
js
and
dec
push
mov
xchg
pop
push
insb
push
sub
nop
sbb
push
push
movsb
scas
aad
lds
mov
inc
mov
dec
in
shr
mov
pop
aas
iret
jl
ljmp
pushf
filds
adc
popa
jnp
imul
push
cmp
je
cld
mov
pop
pusha
and
cmpsb
sub
xor
rcrb
xchg
rorl
mov
outsl
hlt
xchg
xchg
adc
notl
dec
lcall
movsl
cmpsb
leave
imul
mov
xchg
mov
sub
add
jne
test
cmp
xchg
xor
in
inc
mov
out
mov
lret
xchg
cmpsb
pushf
movsl
test
jne,pt
push
pushf
sub
cmpb
jle
testl
add
leave
mov
sbb
es
shr
adc
add
dec
pop
cmp
cmc
stos
jl
jp
pop
dec
sub
arpl
in
sbb
stos
add
repnz
nop
and
push
std
sbb
or
sub
scas
in
push
adc
out
into
int
inc
sub
adc
addr16
clc
out
imul
sar
imul
je
test
cmpsb
push
mov
std
xchg
mov
incb
fs
mov
cmp
je
call
cmc
adc
movsl
pop
sub
pop
sbb
mov
scas
stc
inc
fcompp
sti
push
push
pop
enter
scas
icebp
jmp
imul
push
push
test
movsl
ljmp
jg
mov
and
sub
or
dec
lds
adc
stos
imul
in
jmp
cs
cs
fildll
fdivl
jae
fistps
mov
add
or
cmpsl
pushf
stc
cmp
xchg
fsubrp
mov
pop
jae
test
stos
xchg
cs
imulb
push
dec
stos
lret
mov
mov
cmc
inc
cwtl
sbb
pop
xor
sbb
scas
pop
enter
enter
aaa
shll
lock
pop
sbb
loope
push
pop
push
mov
jno
aad
pop
pusha
repz
dec
outsb
cld
cs
mov
cmp
mov
mov
stos
mov
jmp
insl
sub
sbb
add
insb
mov
inc
leave
xchg
xchg
inc
push
inc
sub
push
sbb
popf
jb
jo
add
shrl
mov
mov
or
adc
adc
loope
fcoml
mov
dec
mov
or
aas
pop
pop
push
ljmp
mov
rorl
in
test
mov
inc
add
xor
xchg
cmp
xchg
leave
mov
js
aad
hlt
sub
jl
dec
iret
pop
cmpsb
rclb
pop
xor
jne
les
lahf
sbb
mov
or
pop
cmp
fsubrl
adc
mov
stos
les
jl
ret
mov
out
aaa
icebp
mov
dec
aas
inc
xchg
fadds
pop
fimull
or
iret
out
jecxz
lret
pop
inc
fwait
imul
sub
sbb
mov
jae
dec
inc
daa
push
imul
inc
jge
push
mov
cwtl
popa
pop
test
out
push
sbb
mov
and
test
sti
push
fimuls
or
loopne
xlat
xchg
dec
mov
jl
jle
push
or
mov
add
mov
cltd
mov
fstpt
and
pop
lcall
hlt
fs
cmpsb
push
ja
lds
stc
loopne
es
mulps
adcb
cmpsl
mov
std
movsl
cmp
jo
lret
jb
cmpsl
lock
mov
or
divl
mov
sar
jg
mov
les
out
xchg
add
int
push
xor
or
xlat
je
mov
or
arpl
stos
jo
push
mov
xor
test
hlt
scas
shll
mov
movsl
jmp
out
dec
fstpt
pop
scas
dec
mov
sbb
aaa
data16
and
loope
mov
cwtl
mov
push
mov
loope
or
mov
mov
cmp
das
pushf
outsb
dec
mov
lods
pop
imul
push
stos
jge
push
and
dec
lret
jae
lock
xchg
fs
fistpll
pop
or
mov
fsubrs
inc
decb
xor
shrl
mull
and
cmc
xor
dec
mov
mov
daa
adcl
inc
in
add
xchg
mov
scas
adc
sub
test
shll
jns
mov
arpl
and
je
xchg
adcb
xlat
xchg
pop
lahf
scas
popf
pop
fnsave
cmp
adc
mov
pop
inc
sub
fisttpl
cmc
push
jecxz
mov
notb
sub
insl
sub
lods
jge
arpl
js
push
dec
add
xor
int
jb
push
popf
add
imul
shrb
insb
and
sbb
movsb
cwtl
cmp
into
or
jae
addr16
dec
fldl
push
xchg
adc
ss
jbe
fldcw
cmpb
out
jmp
ds
lahf
mov
pop
pop
sahf
movsb
in
ret
aam
jbe
pop
jle
bound
jnp
dec
push
lods
ss
jecxz
jb
fidivrl
mov
mov
rcrl
lds
rol
xor
icebp
xchg
aam
pop
jne
mov
pop
xchg
sub
push
mov
mov
leave
push
mov
cld
mov
fldt
sub
pop
cmp
adc
or
lds
lea
sub
xlat
push
fcmovnb
xor
popa
xor
inc
push
icebp
sbb
or
cmp
inc
xor
sub
xor
outsb
int3
push
cmc
mov
repz
sbb
and
cmpsl
ja
adc
jmp
xchg
adc
mov
outsb
test
dec
pop
and
mov
push
aam
sub
cmp
mov
xor
pop
pop
xchg
aas
loopne
sub
xor
dec
test
outsb
add
and
imul
sub
repz
xor
mov
test
push
testl
dec
sbb
mov
pop
sbb
into
add
inc
pop
rcll
sti
stos
ja
sti
int
sbb
popa
pop
xor
fsubr
popa
mov
jge
pop
int3
jne
bound
in
cwtl
add
or
and
inc
jg
and
outsl
mov
sbb
xor
mov
nop
outsl
sub
xchg
data16
mov
cwtl
lret
mov
cwtl
jnp
dec
int
jns
mov
lods
xchg
pushf
mov
or
arpl
ja
jmp
pop
mov
orb
xchg
jne
mov
jne
addr16
insb
clc
sub
xchg
push
xchg
add
push
add
pop
ds
jg
gs
inc
dec
ret
pushf
jno
icebp
scas
add
fisttpll
ret
out
xchg
push
cmpsb
cmp
repz
mov
pop
xor
lods
repnz
repnz
je
pop
dec
or
aas
pop
enter
js
push
movsl
adc
jg
flds
in
add
cmp
ljmp
sbb
outsb
lcall
mov
add
fidivs
jl
mov
dec
jmp
jmp
jnp
mov
out
fidivl
lods
loop
stos
cltd
push
jl
sbb
fidivs
test
cltd
rorl
xchg
push
popf
ss
or
cmpsb
adc
adc
cmpsl
insl
or
aas
add
clc
or
or
stc
roll
sub
jg
xor
in
data16
data16
jnp
jle
jns
add
repnz
xor
mov
cltd
in
cmp
cs
test
test
loope
pushf
rclb
ds
outsb
jnp
test
jle
jl
cmpsl
sahf
mov
fistps
mov
dec
dec
ja
shll
jg
push
dec
xchg
aam
lods
cmc
fwait
xchg
or
in
aam
addr16
in
rclb
add
sub
rcrb
outsl
jnp
push
repnz
add
or
mov
cmp
pop
nop
loop
xchg
cmc
adc
popa
pop
int3
xor
dec
inc
ja
fstl
jle
jecxz
inc
loop
xchg
and
gs
sub
mov
mov
sub
dec
test
rcll
test
pop
mov
mov
data16
sub
xlat
sub
pop
adcb
je
es
mov
mov
std
mov
mov
jge
fstl
and
dec
jb
inc
pop
lcall
insl
xchg
jecxz
sbb
mov
lcall
fistps
and
xor
mov
mov
mov
inc
and
lret
das
mov
mov
jmp
and
fbstp
pusha
dec
ret
cmpb
shll
jo
sub
mov
xor
aaa
sub
push
mov
std
sbb
pop
popf
shrb
leave
not
and
repnz
test
fwait
js
lret
and
push
push
pop
fsubrs
pop
rcrl
sbb
xor
xlat
mov
sarl
scas
aas
lret
dec
ss
or
inc
xor
dec
xor
into
mov
pop
fwait
push
jns
jno
lcall
mov
mov
mov
and
mov
mulb
pop
imul
divb
mov
xor
fisttpll
jmp
cmp
repnz
ret
je
push
aaa
dec
cmp
cld
rclb
adc
and
fstpl
pop
fwait
and
adc
fwait
stc
into
filds
es
cmp
mov
pop
push
push
cld
add
and
mov
mov
divl
sub
jmp
lret
in
das
xorl
cmc
jge
pop
out
in
movsl
xor
adc
and
push
pusha
rcrb
into
inc
clc
or
loop
pusha
es
mov
xor
fistps
sbb
enter
sbb
popf
stc
mov
movsl
dec
daa
clc
push
push
add
lea
insl
std
add
cmpsl
shrb
xchg
enter
and
mov
push
add
sbb
sub
sub
loope
fbld
or
cwtl
mov
sbb
lods
jle
inc
fildl
pop
bound
je
rolb
mov
sub
push
ds
and
push
gs
push
or
cmp
xor
push
mov
outsl
loop
mov
insb
dec
fsub
lods
xor
jno
push
in
es
or
cltd
cmp
cmc
movsb
les
mov
sub
out
sbb
jns
push
add
pop
jle
lcall
lret
push
js
mov
mov
xchg
push
les
js
in
fnstsw
scas
sub
pop
xor
or
push
jge
sub
jno
cltd
mov
jbe
sbb
jae
sub
xchg
stos
fdiv
mov
mov
das
repz
insl
stos
shl
scas
mov
add
mov
movb
lea
fsubrs
and
cld
outsl
push
mov
loope
sbb
cli
add
mov
mov
push
xor
xor
jo
lods
movsl
and
cmp
test
out
insl
jno
cmpsl
iret
enter
inc
repz
mov
mov
pop
arpl
adc
cmc
sub
stos
inc
scas
lahf
ja
jno
dec
cmp
mov
dec
add
das
out
lret
outsb
dec
push
rdmsr
lock
adc
jmp
es
sbbl
data16
test
jge
mov
into
int3
dec
shlb
add
insb
mov
pop
xlat
jno
sub
xor
pushf
aaa
pop
sti
arpl
or
inc
aaa
mov
xchg
rolb
xchg
mov
pop
out
push
or
insl
add
lds
sub
movsl
or
xchg
mov
dec
jns
lret
imul
adc
adc
push
negb
mov
jnp,pn
xchg
cld
scas
mov
mov
mov
xor
mov
bound
pop
cmp
jnp
xchg
and
or
mov
not
push
lss
lret
mov
and
sbb
push
mov
rcrb
push
and
test
mov
xor
sub
dec
aas
shlb
mov
outsl
test
dec
ficoml
std
inc
cmp
insb
fstps
xor
scas
fcompl
xor
aas
sub
ftst
xchg
sub
aam
adc
je
add
incb
out
mov
push
inc
outsl
and
mov
outsb
rcrb
fnstenv
mov
sbb
popf
out
sbb
mov
push
ret
xchg
movsb
inc
outsb
sub
test
jno,pn
mov
popa
aaa
inc
into
negb
arpl
cli
movsl
stos
outsb
cld
imul
inc
mov
rcll
aas
jmp
dec
mov
dec
rcl
sub
mov
call
loope
out
pop
lea
popa
xchg
dec
in
test
fcomp
mov
dec
and
mov
mov
cmp
aas
adc
xchg
test
adc
jo
sar
test
mov
jp
jge
aaa
out
les
jns
mov
add
pop
movb
inc
notl
mov
inc
lds
push
cmpsb
inc
inc
jns
sbb
jge
xchg
stos
or
in
adc
jge
sub
push
mov
and
std
adc
lds
aad
ret
xor
mov
cmp
sub
dec
mov
pop
pop
imul
push
hlt
or
mov
jae,pn
inc
and
arpl
daa
cmp
adc
xchg
pop
imul
iret
adc
jge
popa
xlat
and
pop
push
arpl
shl
in
xchg
push
or
lds
lds
inc
sub
test
push
mov
pop
add
pop
jo
dec
sbb
mov
lcall
fbstp
sbb
lods
out
jecxz
mov
dec
jl
stos
jnp
cmp
mov
popf
repz
cmp
int3
pop
leave
pop
ret
test
insb
std
add
pop
xor
push
lret
mov
push
cmp
dec
dec
adc
out
pop
pop
push
jno
pushf
cs
pop
xor
or
dec
push
adc
jae
jle
outsb
mov
cwtl
bound
mov
int3
inc
in
rolb
lret
andl
mov
pop
push
insl
test
jo
mov
clc
xor
stos
push
loope
test
sub
push
lds
arpl
jecxz
mov
mov
mov
pop
es
out
jmp
repz
std
jge
and
into
test
aam
mov
jb
pop
lahf
arpl
mov
mov
xchg
or
ds
push
test
mov
xor
stos
sub
sbb
or
xor
fildl
sub
ret
push
xchg
cwtl
pop
mov
dec
jp
mov
mov
lahf
aaa
sbb
sbb
je
xor
shlb
pushf
add
fimull
or
mov
aam
insl
add
fldenv
cli
jle
sahf
test
je
testl
out
push
mov
xchg
adc
clc
inc
add
pop
mov
lods
mov
outsl
int
popa
sub
out
lcall
xchg
sub
jnp
inc
in
outsl
xchg
dec
ja
fiaddl
and
push
sub
faddl
add
xchg
dec
nop
out
mov
push
mov
dec
sbb
sahf
insb
imul
cmpsb
test
cwtl
ljmp
mov
sbb
adc
sbb
and
les
scas
dec
in
sub
rorb
mov
jns
push
jge
mov
in
insb
pop
aad
sti
loop
sbb
fs
jne
jp
pop
imul
movsb
incb
add
test
icebp
sub
lock
or
xchg
xchg
daa
ret
orl
cli
lahf
push
icebp
push
mov
cmp
in
add
icebp
lcall
lods
mov
sbb
aas
and
xchg
out
fsubrs
andl
loop
fsubrl
sub
xchg
xor
push
mov
cmpsb
lods
mov
or
int
or
movsl
shrl
adc
add
mov
adc
out
xchg
pushf
stos
dec
sub
push
jno
mov
scas
or
inc
jmp
fistl
or
mov
add
mov
outsb
imul
scas
mov
mov
pop
out
sbb
jmp
inc
pop
add
sub
es
sub
jp
add
mov
dec
cmpsb
leave
dec
mov
lret
jbe
inc
test
lods
adc
inc
add
add
dec
pop
sub
adc
mov
mov
aaa
xor
mov
and
and
dec
mov
push
xor
sbb
js
push
int3
inc
jp
inc
cmpsb
jg
jne
mov
cli
jecxz
das
and
aam
or
mov
imul
or
test
pop
mov
flds
sub
aas
stc
pop
jl
outsl
lods
fsubl
shl
inc
and
mov
scas
mov
mov
inc
rorl
pop
clc
and
fbld
mov
test
faddl
ret
rcr
test
add
adc
inc
xchg
aaa
xchg
sub
and
mov
xchg
dec
clc
nop
insb
xor
sbb
pop
and
ljmp
clts
mov
mov
cmc
pop
inc
xor
push
pop
push
hlt
jo
add
dec
add
mov
inc
ja
pop
xor
and
xchg
and
cmp
mov
xchg
push
test
lahf
jp
push
nop
cmp
leave
sti
pushf
xchg
mov
cmp
sbb
sub
mov
insl
cmpsl
outsl
loop
sahf
cwtl
xor
rep
mov
mov
mov
lret
mov
test
jg
mov
cmp
cld
repz
and
stos
sub
mov
out
push
push
add
lods
out
inc
jp
push
xchg
or
push
inc
adc
jg
dec
int3
or
shll
cltd
popa
and
dec
int
cmp
sbb
xchg
push
es
or
fisubs
and
jmp
fists
xor
movsb
mov
push
sbb
xor
icebp
cmc
xor
and
xchg
into
jno
inc
lock
or
les
loopne
fistpll
loope
xchg
les
jge
cmpsl
add
lods
cmp
mov
out
incb
push
sbb
roll
mov
xor
rcr
popa
mov
mov
xchg
popf
sub
filds
nop
cwtl
mov
nop
je
mov
lock
add
imul
sbb
lea
insl
lock
mov
out
push
inc
loope
ljmp
pop
outsb
inc
push
rcl
gs
daa
test
sbbb
or
mov
daa
ja
mov
in
dec
sbb
call
test
lods
mov
xor
sbb
sbb
xchg
lods
push
xchg
repz
xor
aam
add
loope
mov
mov
fsubrs
dec
xor
stos
dec
adc
inc
jae
push
adc
jb
aas
mov
mov
sub
mov
mov
mov
out
pusha
jmp
fcoml
add
es
or
repnz
arpl
jo
roll
push
cmp
dec
cmc
sbb
lods
roll
cs
jp
adc
mov
insl
xchg
les
xchg
jl
pop
cmp
jb
jb
and
std
int3
sub
out
push
xorl
jmp
or
jnp
cmp
xchg
out
pop
movsb
aaa
pop
addb
or
sub
xlat
aas
arpl
add
out
or
mov
and
mov
xor
sbb
jbe
pushf
imul
lcall
add
popf
sbb
cmp
adc
in
mov
ja
jo
mov
ret
jle
push
pop
mov
popl
imul
dec
pushf
xchg
mul
jbe
mov
and
pop
mov
test
add
cwtl
es
push
adc
sub
sub
add
out
not
pop
repnz
testb
outsb
jns
mov
cmc
or
xor
adc
xor
pop
cmp
adc
xchg
xor
push
shl
sub
out
sub
jae
arpl
pop
test
mov
push
cs
je
mov
mov
mov
xchg
ljmp
xchg
clc
push
cltd
xor
inc
mov
add
ds
push
adc
inc
andb
add
push
jo
jo,pn
push
cli
out
out
mov
ss
lea
lock
lret
mov
rcrb
or
rcll
mov
imul
add
push
out
mov
sbb
subl
cltd
jge
loope
jo
je
in
stos
mov
inc
aas
push
dec
scas
jp
push
sub
ret
push
les
cmpb
ret
and
sahf
jne
or
aad
repnz
and
jns
ljmp
mov
int3
sbb
repnz
fs
pop
repnz
dec
cmp
xor
jmp
stc
gs
sub
xchg
lahf
outsb
out
jno
aas
pop
xchg
dec
dec
push
sbb
add
push
inc
inc
test
and
cltd
add
faddl
lock
mov
jge
lods
and
sbb
shlb
sbb
loope
sets
fsubl
ja
and
lahf
leave
addr16
pop
inc
push
mov
aad
jp
mov
loop
mov
add
pop
aad
fwait
push
test
jmp
insl
cmp
push
xor
repnz
mov
jmp
push
ret
push
mov
test
inc
xor
dec
test
xchg
push
insl
jmp
push
cwtl
inc
scas
inc
mov
lahf
out
mov
in
iret
std
mov
cmc
mov
inc
cmpsb
inc
jecxz
jl
inc
mov
xor
add
lods
push
dec
push
test
ret
ljmp
cld
les
stos
int
int
or
jg
in
push
shll
pushf
rorl
test
mov
add
sbb
and
fbld
push
mov
pop
in
or
xor
xchg
mov
scas
xor
dec
clc
cmpsl
dec
in
in
popf
xchg
aaa
icebp
cs
jge
cmp
mov
jno
pusha
pop
pop
mov
rcll
mov
push
cvttps2pi
fisubrs
sbb
mov
dec
sbb
iret
scas
adc
and
insb
mov
mov
cmc
addb
out
inc
outsl
adc
inc
or
mov
shll
mov
paddsw
jl
out
test
repnz
test
jbe
bound
jp
push
mov
in
push
add
imul
mov
and
adc
mov
mov
in
adc
hlt
ds
xchg
cmp
or
sbb
mov
pop
sub
cltd
test
lods
imul
loop
repz
lahf
int3
test
out
or
pop
repnz
adc
push
sub
scas
sub
hlt
mov
pop
fdivl
dec
xchg
sbb
cmc
ljmp
popa
pop
jp
xchg
lahf
mov
mov
mov
imul
mov
jns
sbb
dec
int
shrl
pop
subl
daa
fsubrs
leave
inc
pop
stos
rolb
mov
repnz
push
lds
add
out
shll
roll
xchg
enter
pushf
ljmp
mov
inc
jno
adcl
cmpsl
sar
mov
test
pop
shll
xchg
push
pop
and
ss
jge
or
fnsave
mov
in
or
fistpl
push
sbbl
mov
shl
or
pop
fdivrl
cmp
cltd
mov
mov
int
sub
adc
and
sbb
in
sub
jae
add
flds
add
cmp
mov
mov
lret
faddl
mov
push
jl
and
int
std
stos
mov
in
lock
mov
inc
mov
in
int3
leave
jnp
jp
xchg
mov
cmc
insl
push
mov
pop
es
shl
xchg
push
mov
nop
orl
add
fildl
jne
rcrl
aas
dec
ja
lods
mov
inc
imul
sub
ds
loop
inc
aaa
dec
xchg
pop
push
pop
ret
xchg
sub
or
xchg
jo
lock
sbb
lahf
add
lahf
lret
add
mov
ret
cmp
xor
pop
jmp
push
mov
cs
ds
insb
or
or
dec
dec
sbb
pop
xor
rcr
les
idiv
mov
addr16
jmp
loope
and
adc
xchg
xchg
jp
sub
dec
je
mov
jae
lea
sbb
jo
push
mov
pop
ret
inc
cmc
das
movsb
shlb
pop
inc
insl
pop
cmp
xchg
fucomi
fnstcw
fistpl
pusha
scas
stos
rorb
sbb
aas
cmpsl
and
adc
jne
jp
push
icebp
mov
or
mov
movsl
mov
add
xor
filds
ret
pusha
fldl
dec
mov
in
dec
mov
das
rclb
cmp
mov
jb
push
pushf
jmp
repz
jmp
aaa
sbb
enter
loopne
popa
inc
cld
movsb
insb
data16
xor
sahf
add
repz
ja
push
insl
test
sub
pushf
jno
ss
dec
es
xor
adc
rorb
cltd
int3
in
leave
shld
sti
hlt
rorb
cmp
in
cmpsl
aaa
xor
mov
lret
repnz
mov
inc
mov
xor
test
jo
or
fcmovnbe
into
mov
sahf
or
push
jb
mov
int3
cmp
dec
pop
xchg
fwait
push
add
adc
scas
jb
dec
dec
imul
xchg
scas
or
and
mov
jge
imul
push
sub
sub
pop
jecxz
and
sbb
pop
or
push
out
cld
jge
mov
pusha
iret
outsb
or
mov
mov
sti
push
aas
pop
pop
mov
push
test
stc
lea
inc
push
mov
das
clc
mov
pusha
jle
addr16
pop
sarb
cld
adc
and
xor
divb
xchg
int3
push
and
inc
jecxz
jb
inc
mov
imul
pop
gs
and
inc
mov
scas
fisubl
leave
adc
ret
add
fldl
mov
test
int
add
movsl
push
outsb
fistpll
rcrl
in
jp
mov
cmpl
cmpsb
xchg
sub
nop
mov
out
outsb
adc
xlat
arpl
pushf
ret
shrl
dec
inc
les
loopne
ret
sub
inc
inc
bound
mov
in
lods
js
mov
or
pop
adc
or
in
push
test
rorb
lahf
mov
int
fnstenv
pop
or
sbb
jmp
cmp
jecxz
pop
test
into
sbb
xchg
int
sbb
add
mov
ds
dec
inc
out
je
mov
testl
mov
push
dec
xchg
in
inc
sub
jnp
xor
gs
in
out
in
inc
leave
xor
imul
divb
out
xor
dec
mov
gs
ss
jno
lret
mov
in
xor
cmp
mov
xchg
inc
in
loope
push
int3
aaa
inc
jne
adc
jne
in
dec
cmp
mov
inc
in
and
sbb
jo
arpl
in
stc
movsb
mov
in
les
xor
jle
or
arpl
mov
mov
add
in
aaa
mov
fdivl
mov
xor
ret
aas
mov
pop
pop
mov
scas
jo
mov
dec
push
jle
hlt
mov
stos
in
dec
fidivrl
xor
movsb
mov
bound
mov
sub
adc
divl
ret
fsubl
sub
inc
sbb
push
hlt
jns
jg
push
enter
cmc
rcr
push
push
add
js
inc
ss
int
cwtl
or
push
stc
xchg
adc
mov
mov
push
popa
pusha
es
cwtl
imul
into
divl
mov
mov
mov
pop
cmp
ss
mov
shrl
mov
das
adc
icebp
in
mov
push
or
call
fwait
in
push
mov
lds
je
aam
mov
dec
and
jmp
cli
cmc
shrl
rcr
xchg
aad
inc
loopne
mov
inc
pusha
mov
in
lahf
adc
mull
or
push
mov
call
add
rcr
pop
sahf
dec
sub
aas
dec
xchg
lods
dec
inc
adc
cmp
pop
rclb
and
call
cmp
scas
fcoml
das
fwait
shlb
popf
xor
mov
push
test
jl
push
adc
xor
stos
pop
fisubrs
imul
and
iret
inc
or
fmuls
jne
inc
xchg
cmp
hlt
mov
in
dec
dec
ret
mov
mov
faddp
xchg
push
dec
sub
xor
scas
sbb
sbbl
cmp
dec
aam
adc
inc
adc
icebp
lret
mov
into
jecxz
jl
popa
std
mov
subl
mov
int
mov
mulb
scas
lds
fs
pop
or
and
das
clc
and
je
notb
cmpsb
arpl
dec
int3
sbb
call
jle
inc
outsb
test
emms
das
inc
mov
shrl
mov
ret
pop
dec
out
cmpsb
arpl
repnz
cmp
and
mov
pop
adc
jmp
ret
mov
xchg
xor
xchg
out
and
mov
cmc
ss
jle
mov
xchg
into
out
sbb
pop
clc
inc
cmp
ret
jnp
invd
cli
lods
mov
pop
test
add
push
int
aaa
xor
or
jge
aam
cli
lret
rcll
jg
sti
pop
or
outsb
mov
dec
aam
cmp
addr16
mov
int
xchg
mov
call
mov
repnz
and
es
cmc
cmp
shrb
out
mov
mov
push
cmp
or
pusha
xorb
cld
cwtl
aas
and
test
jne
push
pop
fbld
xchg
out
mov
movsl
dec
or
adc
xchg
imul
stc
hlt
jg
loop
push
fnstcw
neg
sub
add
arpl
xchg
lock
je
aas
mov
cmpsl
icebp
push
sub
sub
outsb
xchg
jnp
cltd
dec
adc
push
rcl
sbb
fisttps
test
sub
or
sbb
les
arpl
daa
sub
pop
fmulp
divl
sub
clc
insl
mov
fimull
test
notl
add
push
cmpsb
fildll
mov
pop
or
int
lods
push
test
mov
daa
ds
icebp
in
mov
loop
fimuls
int
mov
dec
out
and
popa
notb
jbe
jl
or
mov
sub
cmpsl
filds
xchg
add
add
in
fcmovnb
jg
add
and
mov
jbe
pop
out
or
inc
jle
movsl
mov
addr16
jp
or
mov
adc
xchg
and
stos
mov
mov
mov
bound
inc
xor
lods
cmpsl
in
bound
xchg
xor
sub
fistl
inc
adc
mov
xchg
mov
testb
in
jbe
jno
fsub
das
pusha
inc
mov
xchg
adc
call
dec
es
sub
cmp
push
mov
mov
ja
movsl
jecxz
xor
mov
xor
pop
xchg
mov
fldt
std
mov
lret
loope
cltd
fnstcw
jg
jmp
ds
sti
pop
sbb
mov
stos
adc
popf
cmp
dec
orb
lret
xchg
repnz
outsw
mov
mov
adc
aaa
repnz
and
or
cmpsb
mov
and
pop
movsl
out
jecxz
mov
xor
xor
pop
inc
test
cmp
mov
test
and
cmc
addr16
out
in
test
gs
sub
and
shll
sub
or
stos
stos
clc
cmp
ror
imul
push
test
or
stos
fistps
cli
insb
sub
je
sbb
push
adc
imul
mov
pop
scas
xchg
add
inc
out
sti
in
lods
mov
mov
jg
pop
and
push
fstps
iret
jno
insl
jle
repnz
lahf
mov
push
pushl
xchg
xlat
aam
insb
jne
repnz
fbld
jno
jle
xor
push
mov
insl
fwait
jl
mov
jmp
mov
xor
jbe
dec
dec
push
and
mov
shrb
ret
cwtl
mov
mov
adc
test
mov
push
dec
rcl
sahf
stos
loopne
stos
mov
adc
pop
pop
xchg
in
or
mov
inc
fists
cmp
xor
jb
cltd
out
out
adc
cmp
cmp
inc
loope
scas
orb
fildl
adc
in
dec
push
repz
ficomps
push
cmp
sub
add
dec
jecxz
sub
cld
cmpsb
jnp
mov
dec
popf
xor
repz
mov
cmpsl
out
jo
popf
faddl
enter
pushf
mov
iret
mov
fs
add
and
or
mul
dec
pop
pop
cmp
aaa
mov
ja
xor
inc
js
pop
leave
sub
cmp
sbbl
pop
pop
add
pop
out
inc
imul
jb
dec
mov
in
mov
lock
jae
sub
lods
roll
inc
lods
cltd
sbb
add
sub
test
sub
scas
pop
or
pop
mov
fs
mov
pop
pop
prefetch
push
xchg
sbb
pushf
mov
ret
dec
test
xor
insl
int
xchg
ds
jbe
mov
loop
fbld
jge
pop
xor
loopne
int
repz
mov
push
aam
out
adc
xor
das
or
pop
stos
adc
setle
aad
mov
sahf
mov
push
push
out
out
mov
out
xor
lds
jb
test
out
jnp
es
lock
test
div
iret
icebp
xlat
outsl
adc
in
dec
fwait
mov
sbb
adc
lods
sub
pop
adc
sahf
sbb
ret
push
mov
repnz
ljmp
pop
jb
mov
add
add
xlat
push
fsubrs
loope
test
push
inc
out
idiv
or
xchg
outsl
ds
mov
add
inc
rorb
sbb
sbb
lahf
ja
cltd
je
mov
sub
daa
add
cmp
and
sahf
inc
mov
bound
pop
adc
jecxz
xor
sar
cmpsl
ja
clc
inc
lods
dec
fimuls
test
xor
lahf
es
mov
inc
fs
mov
testb
sbb
arpl
ficoms
jb
cmpsl
rcrb
fwait
inc
and
out
sbb
xor
aad
push
sbb
cli
je
cmp
push
and
stos
adc
and
in
mov
sub
pushf
dec
loope
ljmp
push
testl
jp
xchg
divb
push
jecxz
sub
cmp
mov
adc
mov
and
push
cmpsb
mov
and
stc
out
mov
pop
sbb
pop
push
sbb
push
repz
mov
or
dec
adc
or
lea
jnp
pop
pusha
fs
out
lret
shrl
lock
nop
mov
fldcw
mov
leave
sarl
or
mov
mov
icebp
lea
pop
repnz
movsb
mov
ds
or
xlat
jnp
sub
pop
in
popf
sub
sbb
add
nop
adc
mov
or
pusha
xchg
cmc
add
sbb
push
jge
sti
adc
jl
inc
dec
dec
pop
mov
sub
or
rol
test
sbb
lods
pop
test
insl
fwait
xchg
sbb
add
pop
repnz
imul
jnp
in
xchg
movsl
mov
push
jmp
testl
fwait
stc
and
xor
pushf
outsb
and
or
add
mov
std
cmp
loopne
fs
adc
scas
xchg
repz
ret
xchg
or
cmc
dec
call
push
dec
xchg
int
outsl
into
call
pop
mov
fbstp
mov
dec
stos
imul
jmp
pop
push
fs
loop
es
push
dec
test
pop
je
adc
mov
dec
arpl
pop
xor
lods
ret
in
in
inc
adc
pop
pop
inc
or
push
inc
pusha
cmpsl
loope
inc
jae
ljmp
test
mov
fcoml
sbb
push
movsl
data16
dec
repz
xlat
pushf
mov
cltd
jmp
repnz
mov
adc
out
cld
or
push
or
inc
xor
xor
aad
xor
ret
add
jbe
xchg
mov
adc
stos
add
std
dec
lcall
and
int
push
mov
loope
xchg
inc
pop
out
xchg
lods
out
sbb
cld
aaa
sub
out
imul
rcll
test
jne
ljmp
sub
cmp
xor
sub
adc
mov
push
icebp
nop
mov
sbb
mov
mov
pop
jmp
shlb
test
mov
jno
inc
sahf
mov
arpl
test
popa
mov
adc
std
andl
ljmp
frstor
popf
lahf
std
out
enter
add
sbb
stos
jbe
lds
bnd
sub
cltd
js
outsl
dec
out
mov
jl
loopne
push
test
xor
ret
mov
call
mov
jbe
nop
bound
imul
call
adc
ret
int
mov
imul
ret
lea
xor
mov
cmpsl
add
jns
cltd
cli
inc
aam
aaa
sub
cmc
lahf
sahf
popf
fimuls
sti
jae
pushf
loopne
sub
jno
add
ja
fcmovnu
inc
push
jb
dec
loope
gs
popa
sbb
cli
dec
popf
push
jg
sub
sbb
outsl
lock
and
rcl
cmp
pop
test
and
test
fstpl
add
aad
popf
test
xchg
les
cli
push
fisttps
icebp
movsb
dec
ds
stos
clc
push
insb
push
or
sub
cmc
ficompl
js
fildl
adc
adc
xchg
jmp
mov
xchg
dec
loopne
jae
test
inc
cmpsl
popa
nop
push
xchg
fsubr
xor
cmp
out
adc
inc
sbb
jne
xchg
ss
inc
aaa
and
xlat
add
shll
jbe
xor
cs
in
jbe
dec
stos
lods
mov
mov
popf
jns
adc
jne
cmpsl
into
mov
lahf
xor
loopne
repz
mov
xor
push
insb
push
push
xchg
sbb
sar
mov
daa
inc
hlt
cli
je
cmp
scas
mov
add
push
sub
jg
cli
push
jb
push
shlb
popf
imul
sti
xchg
movsb
clc
jecxz
jne
mov
popf
and
push
lahf
insb
inc
cmp
nop
lahf
push
fsubrp
outsl
and
popa
cmp
jns
mov
mov
ret
xchg
adc
xor
inc
mov
and
cmp
es
ja
pavgb
sbb
insb
mov
lahf
sbb
pop
push
pop
mov
cld
rclb
jg
lahf
jno
lret
xor
mov
imul
xchg
sbb
loope
popa
adc
cmpsb
and
fcoml
repnz
sbb
sbbb
jg
mov
pop
fsubs
or
test
scas
push
jne
nop
and
jno
roll
or
das
dec
cli
pop
fmull
imul
mov
adc
bound
imul
popa
js
leave
mov
stos
jnp
mov
jp
ljmp
or
orb
jae
push
test
imul
dec
gs
mov
dec
xor
das
push
lret
push
int3
loope
pushw
testb
and
sbbl
aam
sub
pop
cld
imul
cmc
aam
sar
shl
push
push
sub
and
xor
in
mov
pop
jecxz
adc
dec
sub
std
js
pop
pop
jbe
xchg
inc
sub
xor
int
jle
inc
push
jno
ret
sbb
aaa
lcall
xchg
clc
hlt
fwait
or
pop
addr16
outsl
mov
pop
and
dec
jns
jmp
xchg
dec
cmpb
xchg
ja
jnp
jg
jo
xlat
dec
popf
mov
je
lahf
push
cmp
pop
sbb
xchg
rolb
add
test
lcall
ret
daa
dec
xchg
andl
xchg
outsl
lret
cmc
xor
lods
cld
inc
in
push
mov
loop
dec
rcr
or
negl
and
or
mov
rolb
lods
out
lahf
loope
dec
jo
push
stc
mov
icebp
xor
pop
das
out
ss
xchg
xchg
pop
sbb
add
hlt
stc
cmp
sbb
adcl
mov
sahf
out
sbb
mov
dec
lods
sbb
stos
out
mov
sarl
repnz
in
mov
jmp
xor
sarl
pop
mov
lods
fsubl
dec
push
sub
fidivrl
repz
sbb
nop
cmpsl
jle
xor
rcrl
lcall
mov
add
repz
add
ror
cmp
scas
cmp
filds
sahf
ret
out
mov
lret
lock
or
mov
clc
pop
xchg
or
pusha
vpxor
xlat
lods
ret
mov
pusha
mov
cmp
dec
sarb
mov
in
push
or
cmc
mov
mov
mov
nop
lret
cs
int
add
mov
sub
xor
loop
ds
xor
adc
xor
jecxz
inc
cmp
jecxz
push
and
pop
and
add
jmp
out
test
jns
test
fs
dec
pop
add
push
adc
sub
les
test
lea
mov
dec
das
mov
and
call
addr16
mov
rol
testl
dec
repnz
inc
popf
lcallw
xchg
or
iret
das
dec
mov
xchg
jl
sbb
gs
push
in
mov
mov
ja
hlt
gs
jecxz
imul
movsl
ss
hlt
jl
adc
fcmovbe
and
sbb
ja
lock
xchg
adc
addb
mov
cmp
jnp
dec
ret
ds
loop
sub
and
xchg
scas
mov
sti
std
out
scas
and
lret
mov
mov
sar
push
inc
pop
outsb
nop
outsl
xor
jno
xor
mov
aas
mov
leave
mov
andl
outsb
pop
rcll
adc
push
or
popa
cmp
rorb
loop
and
cmp
addb
aas
sbb
mov
push
xor
stos
and
cltd
aad
jne
fsubrs
and
adc
nop
mov
enter
sbb
rol
push
aaa
js
int3
mov
lret
mov
xchg
icebp
mov
or
cmp
popf
and
xor
xor
orl
jl
or
cmpsb
jnp
test
jg
loopne
shl
sahf
mov
mov
iret
sub
mov
cmp
add
jae
std
mov
movsl
jle
push
mov
outsb
mov
xor
xchg
xor
push
or
jecxz
mov
cmp
lods
pop
jge
dec
call
inc
orl
mov
push
fcomi
and
sub
adc
scas
popa
loop
ficoml
dec
addb
ss
addl
mov
jge,pn
pop
int
or
push
test
mov
xlat
fsubr
cmp
push
sub
adc
cmp
mov
xchg
pop
imul
mov
fnstsw
orb
icebp
add
jne
mov
pop
scas
or
js
xchg
pop
dec
push
fildl
jae
mov
js
pop
outsl
mov
icebp
push
adc
mov
and
adc
mov
sbb
aam
fstl
clc
jp
push
arpl
and
jns
adc
jecxz
daa
push
mov
dec
mov
inc
cmc
ret
jae
mov
inc
out
cmp
je
lahf
ss
cwtl
jb
sbb
aas
into
jne
xchg
jmp
push
insb
xchg
stc
repz
xor
orl
dec
dec
sbb
mov
adc
mov
paddusw
push
lret
ficoms
add
fstpt
and
popf
pop
mov
inc
mov
mov
cmp
roll
push
das
fnstsw
aam
out
pushf
pop
mov
sahf
sbb
sub
adc
movsb
pusha
mov
inc
sbb
rolb
fmull
lea
negb
mov
dec
push
mov
xchg
js
push
push
lock
lret
imulb
and
mov
push
mov
or
lea
mov
push
lock
pusha
push
scas
insb
shll
bound
sbb
in
adcb
and
jo
dec
xor
ljmp
addl
and
mov
push
or
adc
jle
mov
mov
mov
pusha
sarb
sub
add
out
cmpsl
fld
insl
push
cmp
xlat
addr16
stc
sub
inc
leave
lods
clc
mov
xchg
jo
std
jle
mov
mov
add
pop
pop
addl
jae
lods
fbld
pop
cmpl
mov
popa
sub
or
mov
push
into
cs
stos
dec
mov
jbe
aaa
mov
fisubl
push
push
aaa
cmp
fldcw
xor
aam
xchg
fst
hlt
cli
xor
push
std
je
orl
neg
fcoml
sbb
cmp
lret
aam
mov
popf
pusha
pop
jmp
inc
jmp
jp
clc
jb
mov
cmpsl
sti
aad
call
or
jle
pop
or
xor
xchg
xchg
sub
push
jbe
xlat
ret
lret
mov
addr16
pop
jl
xor
es
xor
jp
dec
sbb
shrb
outsl
cmpsl
fidivrs
and
imul
hlt
inc
popf
in
fcmovbe
sbb
inc
fldt
ffreep
inc
cmp
daa
sti
loopne
jb
xchg
mov
sbb
add
push
lret
mov
lea
sbb
and
inc
es
pop
mov
mov
data16
adc
dec
dec
test
push
ja
pop
mov
out
stos
dec
cmp
scas
pop
jge
adc
mov
daa
mov
and
nop
sub
pusha
loop
rcll
fwait
sahf
addr16
hlt
and
mov
push
out
inc
js
lahf
xchg
out
sub
scas
ret
xchg
jecxz
push
arpl
jl
pop
push
inc
xchg
iret
inc
lock
arpl
mov
je
pop
jmp
sub
clc
idivl
int
cmp
mov
mov
in
mov
leave
cmp
out
inc
jno
lods
cmp
enter
inc
fs
nop
add
pop
inc
pusha
push
sahf
xlat
mov
mov
sub
push
sbb
imul
in
sbb
fldcw
jmp
add
movl
call
mov
aam
mov
subl
jmp
js
jmp
push
fnstsw
adc
loop
sbb
cld
fnstsw
mov
or
loopne
xchg
roll
mov
std
inc
daa
xchg
push
lcall
mov
mov
imull
aad
dec
mov
jge
pop
mov
inc
sub
sub
mov
andl
insb
repz
adc
stc
cmp
out
jp,pt
sub
cmpsb
sar
lret
push
fiaddl
sahf
movsb
loope
lcall
out
fwait
insl
xor
pop
add
mov
mull
inc
or
cmp
test
pusha
bound
dec
xor
clc
xchg
inc
pop
pop
mov
nop
cmp
inc
mov
sbb
jl
cmpsb
scas
iret
in
ljmp
stos
ds
int
leave
call
lods
icebp
aad
cmp
pushf
pusha
out
mov
adc
imul
dec
addl
xchg
addr16
sbb
js
fidivrs
fadds
insb
jge
sbb
ljmp
insb
outsl
mov
sbb
stos
xor
or
mov
xor
mov
lods
fsubl
nop
jmp
clc
enter
xlat
jns
xchg
das
jbe
jge
mov
mov
mov
cmp
add
jnp
xor
outsl
sbb
push
and
repz
sub
mov
in
xlat
pop
dec
aaa
jbe
loope
cmc
outsb
xchg
mov
push
ds
ds
loop
out
test
outsl
bnd
jnp
sbb
sbb
jne
mov
das
xchg
jns
mov
xor
aad
sub
or
pop
dec
mov
mov
mov
pusha
psubsw
aad
xor
add
movsb
subb
mull
iret
mov
out
mov
or
xor
xor
mov
popf
in
mov
and
xor
sbb
jl
shrb
cmp
pop
push
aaa
jns
inc
mov
imul
faddl
ret
adcb
imull
ss
xchg
xorl
dec
nop
and
daa
adc
inc
fadds
mov
sbb
sbb
mov
inc
sbb
popw
repz
pop
sub
jnp
popa
push
test
mov
jle
sub
mov
mov
in
and
ljmp
lahf
mov
ret
leave
add
js
sarl
clc
jmp
jl
test
call
sub
jp
daa
pop
pushf
push
lahf
das
jae
in
sar
xchg
push
in
sbb
adcl
push
jg
add
lds
int
push
mov
push
cmc
int3
push
jo
xchg
outsl
shrl
xlat
pop
mov
mov
jp
adc
movsb
sahf
sbb
mov
imul
dec
mov
mov
in
inc
decb
mov
mov
mov
mov
mov
shll
jge
pmuludq
out
fsubrs
or
and
mov
mov
inc
xchg
loope
push
mov
je
cmpb
cmp
std
mov
mov
ja
sub
mov
mov
push
pop
and
add
daa
roll
mov
cmc
inc
icebp
sub
sbb
je
dec
insl
jno
pop
and
xorb
xor
mov
in
aas
das
std
scas
add
lea
adc
jmp
in
mov
call
aaa
mov
repnz
je
jns
pop
xchg
pop
mov
adc
divl
imul
mov
iret
cmp
xchg
hlt
mov
loopne
cmp
add
sub
fldt
xchg
mov
xchg
mov
cwtl
cld
sbb
mov
ljmp
dec
outsb
inc
xlat
movsl
insb
adcb
adc
xor
xor
scas
test
inc
adc
xor
leave
add
push
cltd
ds
sti
push
inc
push
popa
cld
mov
lahf
std
push
rol
aas
mov
push
insl
xor
sub
pop
jl
cmpsl
lock
lret
mulb
fwait
jmp
cmp
std
add
push
inc
decl
or
jbe
fdivrl
push
imul
mov
popf
pop
adc
adc
cmpsl
inc
aam
sub
mov
lods
int
xchg
adc
aas
push
je
dec
clc
dec
jge
push
dec
int
push
push
lods
mov
push
push
jecxz
or
lret
lock
mov
xchg
mov
sub
in
and
mov
inc
xor
ret
jbe
mov
add
cmpsb
lret
adc
add
cli
dec
xchg
pushf
lods
inc
aaa
lahf
ljmp
out
scas
cmp
das
roll
loop
popf
mov
xchg
xorb
lods
xchg
lret
clc
aas
mov
sbb
mov
sbb
notl
inc
daa
lret
push
jecxz
cmp
inc
push
mov
xlat
or
cmp
mov
mov
lahf
jns
cmp
nop
jne
cmp
pop
mov
rorb
dec
pusha
cmpsb
outsb
int3
jmp
mov
ljmp
xchg
or
and
out
xor
addr16
fstps
cmc
adc
pop
loope
cltd
pop
ds
test
stos
sub
xorb
sub
and
fucomp
ret
test
stos
leave
and
shlb
stc
xor
xchg
mov
lret
xchg
xchg
mov
int
inc
dec
xor
jmp
test
add
sub
sbb
mov
mov
fdivrs
jno
jl
in
sahf
push
test
push
mov
mov
adc
bound
mov
sti
inc
or
mov
ja
push
jns
mov
adc
outsb
push
imul
xchg
push
sbb
sub
xchg
lods
adc
sti
sub
mov
sahf
xchg
or
or
fists
pop
xor
sbbb
sbb
imul
inc
jbe
xchg
ds
mov
jmp
sbb
mov
push
out
adc
pop
imul
fidivrl
fstpt
int3
pop
cmpsb
shl
in
enter
stc
mov
mov
sub
sbb
xlat
fstps
mov
xchg
out
in
shll
dec
mov
pop
ret
or
mov
and
jl
mov
or
cmp
push
loop
push
mov
fisttpll
sarb
add
mov
sarl
imulb
subb
mov
jg
xchg
jl
cmp
inc
pop
scas
cmp
addr16
js
mov
pop
add
imul
hlt
test
repnz
call
mov
test
in
ret
sbb
cli
add
mov
stc
mov
leave
adc
addl
xor
fidivl
pop
fldl
mov
xchg
adc
lods
lods
xor
inc
pop
jbe
inc
cmp
sbb
xchg
mov
imul
imul
xlat
dec
adc
les
mov
int
adc
mov
adc
mov
test
xor
outsb
sahf
jl
sub
or
outsl
push
loopne
jecxz
jae
adc
loopne
push
stc
cmp
mov
inc
arpl
aam
cmc
push
shrl
dec
ds
push
jg
lock
fsub
pop
or
jne
or
and
mov
inc
push
icebp
mov
add
icebp
push
andb
pop
rcrb
lods
aas
xchg
add
ds
push
addr16
sbb
add
inc
and
cmc
fsub
in
mov
lret
aaa
movsb
out
aaa
inc
ljmp
out
and
in
imul
cmc
sti
imulb
sub
xor
cmc
jg
pop
js
cmp
int3
rolb
xchg
mov
inc
enter
stos
mov
lods
mov
adc
xor
and
mov
mov
and
cmpsl
dec
sub
outsl
dec
pop
std
inc
sbb
nop
lock
mov
xor
cmpsb
xor
jmp
mov
xchg
inc
pop
imul
push
push
jns
mov
test
cmpsb
repz
sbb
mov
cmpb
mov
aad
sar
loopne
push
stos
imul
dec
stos
pop
jg
xchg
push
jl
cli
aam
cmpsb
push
dec
addr16
inc
test
addr16
int
ss
test
xchg
addr16
mul
jle
adc
loop
pop
leave
inc
ret
popf
out
cmpsb
inc
xchg
push
jl
int3
mov
push
iret
mov
push
adc
xor
shl
add
and
adc
mov
inc
loopne
push
jnp
mov
push
and
into
std
cmp
inc
mov
test
ss
insl
mov
dec
loop
fcoml
push
pop
pop
dec
inc
or
jecxz
stc
xchg
sub
data16
push
inc
repnz
and
ret
cmpsl
pop
push
push
cmp
xchg
xchg
push
fidivrs
mov
sub
ss
push
aas
sbb
rcr
push
cmp
icebp
fmul
ret
test
jecxz
inc
dec
ljmp
arpl
lods
decb
shll
loope
adc
sti
shrb
and
aaa
pop
dec
stc
mov
idivl
aas
cmp
pop
dec
popa
jnp
bound
sbb
imul
pop
pop
aaa
das
out
sub
pop
psllq
lock
cmp
mov
popf
rolb
pusha
dec
mov
push
jl
xchg
das
mov
mov
mov
pop
or
cs
jle
jae
xchg
sbb
shlb
pop
pop
sbb
icebp
ret
push
fldlg2
movsl
imul
out
arpl
insl
xchg
mov
lock
cmpsl
mov
or
fstpt
call
loopne
shlb
ljmp
mov
xchg
shlb
int
and
inc
push
pop
push
push
xor
into
enter
aam
add
imul
mov
pop
and
dec
repnz
clc
and
cmp
inc
js
mov
mov
jmp
mov
sahf
cmovae
sbb
cmp
xor
xchg
mov
adc
push
xchg
xor
adc
inc
test
sti
aaa
ret
fdivp
hlt
mov
sub
mov
pushl
dec
push
mov
in
enter
cmp
cwtl
sub
jge
sbbl
jns
out
or
push
stos
pop
jbe
push
dec
and
dec
jg
repnz
jle
dec
push
shrb
mov
xchg
mov
mov
stos
popa
xor
pop
cmp
pop
xor
fcos
inc
or
pushf
sub
icebp
cwtl
pop
popf
in
adc
int
mov
pop
push
mov
imul
sarl
into
inc
and
in
out
adc
icebp
aam
and
sti
push
mov
shr
out
dec
in
dec
sbb
jo
push
addr16
dec
negl
jb
jae
fsts
add
pop
jno
inc
mov
cld
stos
cmpsl
mov
xchg
jl
out
xchg
mov
lret
das
repnz
aad
xchg
std
cmp
cmpl
pushf
fcompl
jbe
out
mov
addb
push
scas
sbb
cmp
pop
xor
sub
ds
int
and
jg
sbb
sub
aam
jnp
add
or
mov
mov
insb
js
rclb
out
mov
jg
or
sbb
mov
pop
rcrb
mov
mov
adc
inc
xor
cli
sbb
push
enter
fdiv
jmp
pop
into
sbb
iret
xor
inc
sbb
test
push
gs
test
das
mov
mov
jl
fmuls
xchg
sbb
cmpsl
std
push
ljmp
into
out
mov
test
test
mov
xor
cmp
aas
aam
add
cs
out
out
xchg
fnstenv
cli
jns
or
and
ret
cli
jns
cli
ss
and
dec
mov
pop
push
in
out
push
dec
sub
pop
push
mov
loop
cmp
fiaddl
daa
sbbb
lret
xchg
test
pop
sub
dec
xor
jbe
lods
ret
adc
je
jnp
dec
pop
test
jp
fsubl
sbb
sub
add
addl
dec
xchg
jl
daa
out
jge
lret
cld
fs
movsb
jecxz
stos
xor
jl
mov
jle
mov
or
loope
arpl
sbb
mov
mov
adc
ror
xorb
add
mov
mov
dec
fmuls
dec
jns
push
mov
lods
in
push
mov
loope
insl
stos
mov
aas
mov
adc
sbb
mov
push
add
sbbb
pop
sub
sub
ror
xchg
insb
cmp
sbb
je
mov
in
les
or
cmp
jmp
lahf
jb
dec
inc
push
dec
popf
aaa
mov
sti
xor
mov
clc
pusha
cs
loopne
sbb
fdivrp
addb
xchg
xchg
bound
pop
das
xchg
cmp
shr
cmpsl
push
jo
inc
push
lahf
cli
xorb
ret
xor
xchg
xor
dec
sti
mov
fstpl
and
imul
int
scas
cmpsb
add
sbb
cltd
stc
mov
clc
xchg
mov
and
inc
jmp
imul
clc
mov
xorl
and
cmp
or
xlat
icebp
loop
add
cli
xor
mov
fdivr
into
dec
sub
cmpsb
add
xchg
fwait
mov
ljmp
stos
out
dec
mov
jle
lret
xchg
mov
jl
mov
mov
into
lahf
xor
push
mov
lea
repnz
ljmp
stos
ret
adc
pop
lds
leave
test
mov
mov
adc
leave
add
std
cmc
icebp
lds
cs
add
jo
imul
sub
add
or
in
call
sahf
add
push
xchg
or
das
insl
dec
sbb
inc
mov
out
mov
push
lock
cmp
xlat
sub
leave
aam
push
in
dec
fwait
imul
jp
mov
sub
or
lret
mov
sub
fwait
cmpl
pop
mov
jp
cmpsb
push
lods
fbld
test
xchg
mov
aad
xchg
lret
outsl
popf
aad
repnz
xchg
int3
xchg
add
add
decb
leave
push
sti
mov
push
mov
dec
sbb
push
call
ss
les
sbb
out
bound
sub
cwtl
mov
mov
sti
nop
into
xchg
cwtl
dec
push
sbb
nop
push
inc
popa
add
mov
add
xchg
add
xchg
pop
mov
xor
mov
not
stos
adc
popf
jbe
lret
xchg
xchg
aas
fidivrl
cmc
fucomp
adc
scas
or
rorb
ljmp
xchg
mov
sbb
jno
cmp
lds
adc
jbe
inc
pop
jge
cmpl
fiaddl
sarl
inc
push
imul
push
rcll
iret
sbb
inc
mov
dec
mov
mov
das
pop
adc
je
xchg
inc
lds
ret
movb
mov
jg
in
stos
aaa
jns
test
sub
mov
gs
scas
pop
cld
push
jge
xchg
pushf
add
andl
adc
fsubl
xchg
aad
sub
mov
jae
call
les
adc
aas
adc
mov
lods
lea
sti
or
fbstp
pop
xchg
sub
fsubrl
jp
lods
xor
jp
add
and
scas
jo
lret
cs
sub
notl
repz
in
pop
jbe
arpl
lret
jge
lds
test
aas
and
fwait
pop
jbe
sbb
sahf
mov
adc
push
icebp
lds
pop
push
adc
cltd
sti
sub
and
imul
loop
mov
mov
ret
fs
cmp
add
fldenv
adc
movsb
xchg
ret
mov
jmp
mov
inc
sti
insb
push
ret
jb
adc
jle
call
pop
imul
lds
dec
ds
add
hlt
loope
sbb
add
pusha
and
mov
cmpsb
pop
adc
push
dec
faddl
and
dec
inc
pusha
xchg
push
mov
pop
fiadds
lods
ds
add
and
jae
mov
sbb
int
ss
adc
adc
daa
ror
test
subb
loopne
cmp
imul
loop
and
insb
imul
scas
insb
out
add
iret
scas
icebp
sub
jg
jecxz
xor
jmp
rclb
cwtl
pop
adc
jo
xor
hlt
ret
movsb
and
cmp
mov
rcrl
sbb
pop
cmc
mov
sbb
shr
shlb
add
add
xor
pop
lcall
add
push
aaa
xchg
cmp
arpl
ds
dec
cmpsb
test
out
incl
movsb
mov
jns
enter
ljmp
lods
dec
mov
scas
adc
adc
mov
movsl
testl
inc
ret
dec
adc
add
pop
jns
inc
or
pushf
push
cld
cmc
repnz
dec
loope
push
mov
xor
mov
dec
fsubl
xor
repnz
xor
mull
outsl
mov
push
loopne
mov
fs
test
insl
inc
repz
js
popf
fwait
test
jl
nop
ja
or
nop
pop
mov
xchg
je
inc
sub
aad
nop
js
xor
stc
aam
mov
insb
mov
or
rcl
pop
fsubl
repnz
insb
sub
cltd
out
jbe
ror
push
dec
ret
lret
movsb
cs
sub
xor
jbe
fimull
popa
scas
data16
ror
or
lock
mov
cmp
mov
inc
xchg
lock
push
xor
mov
insl
add
jnp
mov
jecxz
jne
fimull
push
fwait
popf
mov
sbb
and
sti
cmp
sbbb
out
sub
pop
mov
inc
in
xor
add
fwait
push
pop
adc
fcomip
shlb
popa
out
sub
ja
lods
mov
popf
sub
mov
imul
xchg
sbb
ret
aad
xchg
push
mov
mov
or
or
scas
std
ss
inc
mov
inc
insl
adc
dec
push
pop
dec
mov
hlt
loope
or
or
push
mov
xchg
sbb
roll
and
xchg
pop
inc
sbb
sbb
add
inc
cmp
pop
mov
loopne
insb
fdiv
push
shll
cmp
insb
loopne
inc
sbb
xor
mov
lods
stc
outsl
jg
mov
jg
pop
aaa
sbb
fldcw
cli
or
movsb
dec
jne
lcall
pushl
and
push
pop
aad
mov
push
inc
mov
test
stc
jno
sub
cltd
mov
daa
aam
cmp
cmp
lret
rclb
xchg
jp
inc
sub
fsubrl
test
xor
out
cmpsb
iret
je
pusha
icebp
je
xchg
out
cmp
jae
hlt
cmp
aas
fldt
sub
or
sub
jae
sbb
jno
std
mov
adc
test
jl
clc
jle
loope
push
sbb
mov
push
mov
xchg
mov
inc
adc
cmp
xor
add
leave
clc
xor
or
push
lds
adc
nop
and
mov
shrb
cwtl
or
ret
mov
js
pop
ficompl
mov
cmp
pop
ret
test
daa
rorl
imul
cmp
mov
jb
lods
pop
sti
add
push
imul
pop
inc
in
int
fwait
stos
fsubrs
pop
ljmp
nop
fmul
in
adc
imul
or
insl
mov
test
push
add
or
gs
stc
test
jns
inc
xor
in
or
push
push
fistl
in
mov
aaa
jns
pop
xor
xchg
xchg
popa
or
pushl
es
cltd
xor
loop
xchg
iret
sbb
mov
test
sbb
xor
jno
pop
fs
push
out
iret
hlt
push
enter
sarb
dec
test
test
push
mov
bound
xchg
fbstp
pop
jns
mov
clc
stos
dec
sbbl
mov
shlb
fninit
call
rorb
push
mov
pop
nop
push
jae
mov
and
pop
sbb
jne
xchg
cmc
or
rclb
jo
xor
pop
sub
and
sbb
cmpsl
dec
or
sub
rolb
xor
mov
pop
pushf
pop
push
jnp
adc
icebp
add
mov
icebp
mov
stc
scas
jmp
push
mov
aam
fisubrl
dec
mov
loopne
lret
dec
sbb
bnd
aaa
inc
iret
sti
jns
xlat
aam
xchg
and
cmp
cli
shll
mov
test
scas
sbb
sub
xor
jns
xor
mov
mov
or
bound
cmp
imul
mov
je
and
pushf
sub
andl
aad
lods
call
insl
mov
xchg
push
dec
or
fildll
jg
xor
iret
pop
lahf
decb
sarb
pop
das
xchg
clc
and
insb
push
mov
adc
fisubs
mov
mov
leave
add
jmp
pop
sarb
ds
je
jl
push
sbb
or
add
loop
jbe
mov
adc
inc
or
movsl
push
cmpsb
mov
insl
sbb
inc
lahf
je
cmp
cli
xor
jnp
rcl
fdivr
sti
inc
push
jge
mov
dec
jl
push
pusha
pop
dec
or
jns
pusha
insl
orl
mov
movsb
jle
mov
call
ret
push
aad
je
insl
or
mov
ja
dec
mov
and
fistps
mov
push
int3
mov
push
adc
ret
jge
inc
sarb
stos
dec
pop
adc
push
jbe
mov
mov
leave
ljmp
cmp
xor
cwtl
fwait
mov
jo
icebp
cld
mov
jle
inc
cmp
xor
andl
adc
dec
mov
rorl
push
push
ret
mov
aas
xchg
jp
xlat
daa
adc
aad
pop
in
outsl
mov
insb
xor
xchg
push
movsl
jmp
push
mov
xchg
and
sbbb
sti
dec
jmp
enter
das
fucomp
lea
xchg
cmpsl
fiadds
pop
sub
dec
ret
push
mov
jb
clc
sbbl
mov
les
daa
xchg
pop
pop
inc
into
loop
mov
pop
dec
lahf
adc
or
mov
cmpsb
push
jge
cmp
test
inc
leave
ja
cmp
cmc
mov
fisttpl
jnp
pop
pop
add
add
stc
inc
sti
jne
repz
leave
pop
shr
adc
roll
and
pusha
cmpsb
loopne
push
push
push
jmp
mov
nop
hlt
inc
dec
stc
cltd
in
lret
roll
jmp
and
out
jno
jecxz
int3
ja
jne
idivl
pop
push
in
sub
add
test
fistps
add
adc
jg
aas
in
mov
idiv
out
loope
adc
movsl
mov
aas
jns
jnp
lret
in
out
jg
mov
inc
test
ss
xchg
mov
mov
pop
or
inc
test
ljmp
mov
daa
into
stc
fimull
push
lahf
loop
jae
cli
rclb
fwait
xor
lret
push
inc
lods
mov
fadds
pop
nop
std
mov
insb
dec
dec
or
flds
gs
xor
in
jg
mov
movups
scas
mov
push
mov
int3
push
pop
cltd
into
hlt
je
lock
enter
cmc
cmpsl
mov
mov
lret
mov
into
and
enter
or
xchg
pop
inc
mov
cmp
xchg
loopne
stos
in
sbb
fpatan
push
push
mov
ds
xchg
stos
cmp
hlt
mov
mov
xlat
xchg
dec
out
pop
add
push
jns
into
cmp
mov
ss
stc
lcall
mov
jno
cli
or
loop
lea
pop
outsb
subl
and
cmc
cltd
lds
in
mov
shlb
xchg
mov
push
sub
imul
xchg
dec
dec
addb
push
jmp
mov
test
aaa
outsl
int3
sarl
outsl
push
sbb
insl
mov
ljmp
ret
xlat
outsl
jmp
pop
sbb
lcall
lahf
or
mov
repz
sbb
lcall
pusha
dec
out
ret
push
dec
push
mov
push
sub
dec
cmp
insb
jne
aaa
sbb
pusha
xchg
outsl
mov
inc
fnstenv
ret
jl
mov
pavgw
push
xchg
lods
cmpsl
mov
call
jb
mov
aam
mov
rorl
push
imul
jnp
push
inc
push
aas
xor
cli
push
mov
xchg
dec
repnz
inc
daa
loop
mov
cltd
ret
fstp
xchg
pushf
xor
lea
imul
jp
inc
scas
hlt
add
xchg
sbb
push
inc
xchg
mov
inc
out
sti
push
scas
cli
cli
call
sbb
in
repnz
popf
mov
inc
popa
aam
aaa
frstor
mov
sub
lods
and
rolb
divl
xchg
adcb
notl
stos
jno
loope
pop
sbb
jb
das
lret
xchg
and
fistpl
sarb
orl
add
add
arpl
je
pop
and
adc
xchg
cmp
test
arpl
je
ds
enter
jo
stos
dec
xchg
out
ss
call
add
movsl
loopne
rorb
inc
xchg
dec
lock
gs
push
jl
inc
loop
and
mov
and
push
add
test
add
pushf
sbb
cmp
fisttpll
jmp
jb
xchg
mov
cmpb
popa
pop
ror
xchg
mov
mov
xchg
jl
xorb
repnz
and
fucomp
cli
incb
loope
lock
into
loopne
sbb
cmp
ret
mov
sbb
xlat
cmp
fistpl
fcomps
and
insl
loop
inc
out
cmpsl
mov
and
rcll
scas
ret
mov
loop
push
aas
pusha
icebp
mov
mov
fimuls
clc
out
test
jo
les
popf
repz
mov
mov
push
mov
int
dec
into
cmp
sbb
dec
gs
sbb
mov
push
repnz
std
je
fldcw
or
dec
out
dec
les
in
shrl
jbe
inc
enter
sub
cmpsl
mov
mov
mov
int
push
mov
pop
bound
int
iret
out
jmp
fxch
outsb
rcr
loopne
add
ret
push
addl
and
add
aaa
sub
mov
nop
mov
xor
fwait
xorl
loop
fisttpll
bound
xchg
mov
mov
in
pop
daa
lods
out
sub
insb
arpl
or
xlat
js
stos
rcrl
push
sbb
outsb
mov
lcall
das
push
pusha
add
pop
xchg
fsubs
xchg
adc
mov
add
lret
out
clc
shrl
mov
push
daa
mov
arpl
push
xchg
mov
shrl
pop
mov
cwtl
lods
lret
mov
fidivrl
jp
hlt
or
in
jle
sbb
lret
jno
lock
ja
xchg
pushf
les
rorb
mov
lea
lods
xor
inc
pop
dec
xchg
push
jl
lods
movsb
mov
out
push
in
mov
add
iret
push
xchg
push
in
testb
add
xlat
xchg
cmc
jae
sbb
or
pop
mov
lds
aam
arpl
test
mov
cwtl
push
cmpsb
push
pusha
mov
xchg
in
adc
xor
inc
repz
loope
dec
je
xchg
mov
lret
pop
hlt
adc
mov
inc
jae
sub
out
sbb
test
mov
loopne
jns
imul
mov
popa
mov
dec
je
mov
pop
xchg
sti
cmc
cltd
iret
mov
dec
movsb
push
ds
sbb
out
adc
cmpsb
pop
jp
push
mov
repnz
bound
jge
mov
mov
insl
and
cmp
or
add
xor
cmp
dec
xchg
xlat
xor
jo
jp
add
adc
iret
and
rcll
outsl
outsb
mov
and
xchg
ret
inc
loope
xor
stos
cmc
jmp
jne
or
cmp
xchg
mov
lods
movsb
iret
pop
int
cmp
iret
inc
xchg
lods
xor
pop
scas
push
pop
or
fisubs
xchg
jae
fbld
repnz
jo
xchg
mov
mov
out
jecxz
cmpsl
sarl
nop
pop
jno
lods
std
scas
ret
mov
jmp
shr
lds
mov
bound
insl
fs
out
stc
xor
xor
inc
dec
repnz
subl
or
pop
arpl
mov
push
lahf
jg
inc
jmp
push
test
jb
mov
test
cmp
mov
or
notl
inc
push
mov
andb
inc
bnd
mov
mov
push
jo
in
mov
push
pop
adc
pop
js
mov
pop
push
or
xor
aas
xchg
les
dec
push
mov
adc
push
imul
pop
cld
mov
push
push
jb
shlb
push
mov
push
push
push
mov
in
rcr
push
stos
imul
lods
push
mov
push
jbe
adc
clc
aam
sub
dec
dec
in
fadds
xchg
movsb
xor
push
aas
cwtl
jl
idivb
mov
pop
and
repz
sbb
icebp
xchg
faddl
int3
pop
xchg
sbb
push
shll
fnstcw
push
mov
aad
jns
inc
dec
mov
outsl
cmpsb
mov
or
js
ret
out
inc
fildl
outsl
mov
add
ljmp
pop
sbb
push
nop
pop
xchg
cmpsb
push
outsl
mov
mov
mov
mov
jb
pop
lds
pop
sbb
push
mov
into
or
mov
pushl
call
fwait
sbb
add
arpl
push
mov
push
jge
stos
mov
sbb
inc
popf
push
push
push
lea
bound
adc
orb
stc
dec
sub
push
xor
imul
push
outsl
sbb
xor
inc
dec
in
jge
push
out
imul
pushf
xor
sbb
popf
dec
jae
adc
imul
xor
cld
pop
and
sarl
jnp
jb
loop
int
mov
lock
shll
sahf
loopne
mov
int
lret
add
fildl
loopne
sahf
sbb
mov
xchg
insb
and
scas
imul
xchg
jae
movsl
add
pop
in
jecxz
insl
and
xor
jnp
ficoms
mov
out
push
repnz
testl
mov
inc
sbb
shl
mov
dec
inc
int
lahf
dec
lods
mov
adc
mov
cli
push
dec
test
stos
outsl
dec
sub
mov
xor
mov
fwait
scas
lret
xor
mov
or
inc
xchg
stos
xchg
out
and
mov
out
mov
inc
mov
mov
sub
gs
xor
pop
les
pop
nop
ds
push
loopne
cwtl
mov
adcb
mov
mov
push
adc
jge
lcall
aas
les
fsubrl
inc
inc
dec
adc
mov
fistpll
xor
cmpsl
pop
popf
pop
xchg
dec
mov
jno
fcompl
cmovno
pop
testb
add
fwait
inc
pop
js
loopne
push
imul
xor
push
lret
adc
xchg
inc
inc
dec
iret
push
hlt
cmp
dec
out
aam
loopne
dec
cmc
mov
inc
mov
mov
rclb
mov
pop
mov
xor
and
fcom
push
or
pushf
and
pop
out
decl
test
push
mov
mov
cli
xor
mov
ljmp
push
mov
mov
in
pushf
fists
push
aas
mov
loopne
dec
mov
imull
mov
jecxz
jp
and
mov
lcall
loope
arpl
mov
pop
dec
dec
xor
push
or
out
sbb
cmp
push
mov
xchg
pushf
and
pop
mov
mov
pop
xor
and
rclb
sti
ljmp
fs
jae
lcall
mov
cmpsb
iret
dec
xor
xchg
mov
xchg
push
or
xor
hlt
lahf
fs
or
add
dec
mov
cmc
movsb
loopne
in
scas
xchg
test
les
lea
scas
jg
xchg
loop
push
and
sub
xchg
cld
push
push
pusha
adc
icebp
cmpl
stos
aas
outsb
test
fs
ljmp
adc
aam
lcall
rcrl
rcrb
mov
pop
cmp
cmpsb
js
xchg
aad
mov
sub
mov
movsb
test
dec
pop
xor
ret
lods
test
lret
repnz
mov
cltd
mov
inc
xchg
dec
and
mov
mov
adc
push
shrb
xor
repz
add
add
es
and
loopne
adc
xchg
inc
push
adc
and
outsb
push
sbb
mov
pop
and
or
push
out
mov
cmp
xor
jmp
scas
sbb
out
sub
hlt
mov
hlt
fsubs
in
pop
sub
inc
add
test
repz
test
scas
data16
cld
imul
loop,pn
data16
rcl
int3
cli
js
xor
in
add
bound
ficoms
loop
fdivl
add
lret
mov
cltd
mov
add
cwtl
out
icebp
in
xchg
jno
mov
mov
jle
push
inc
xor
icebp
cmp
shrb
out
mov
and
add
repz
inc
push
jle
shl
and
pop
adc
notl
push
lock
cli
into
outsl
pop
int
cmp
mov
ficomps
shll
cmpsl
and
cmpsb
in
loope
into
sbb
movsb
pop
push
or
into
sti
popf
loopne
movsl
dec
cs
divl
mov
cmpl
ret
or
jns
ds
dec
xchg
inc
adc
jl
pushf
xchg
mov
loop
lcall
add
aas
inc
aas
and
ljmp
jg
xor
push
mov
ss
ror
bound
imul
adc
dec
fstl
adcl
pop
leave
jno
sti
push
int
cmp
scas
outsl
jmp
lret
xor
mov
lods
sti
fs
sub
or
fwait
push
shlb
cmp
push
rcrb
push
test
mov
stos
jnp
int3
insb
pop
faddp
xchg
xor
dec
xor
jmp
bound
cs
aad
mov
cmpsb
repnz
gs
sbbl
cli
fiadds
imul
xchg
pop
mov
mov
movsl
in
fistpll
imul
cmp
or
enter
scas
xchg
ret
cmpsb
push
and
mov
popa
repz
fwait
xlat
dec
mov
xchg
movb
lcall
aaa
fstp
loop
iret
dec
fimuls
popa
loope
jno
insb
push
rclb
xor
idivb
sbb
fcompl
cwtl
mov
push
int
adc
add
fs
stos
loope
sarb
sub
push
subl
icebp
cltd
iret
mov
dec
mov
insl
sbb
mov
loope
shlb
inc
add
jnp
scas
lahf
inc
xchg
pop
ds
insl
fiaddl
movsb
stc
loopne
cmpsl
and
repnz
sub
lret
and
sbb
pop
jle
in
pop
popa
jbe
sbb
outsl
fwait
pusha
push
mov
cmp
jecxz
fsubs
inc
jne
sub
and
xchg
xchg
xchg
test
jns
pop
xchg
lds
rorl
xchg
fstpl
jno
in
fisttps
out
xor
lcall
cmpl
or
test
lods
xacquire
shll
sbb
and
sub
dec
aam
les
push
fisubrl
scas
jmp
inc
bound
xchg
and
es
scas
cmp
pop
test
repz
popa
mov
jecxz,pt
aas
cs
jle
sbb
sbb
sbb
xor
add
mov
xlat
sbb
out
loope
and
or
sbb
aad
cltd
jmp
addb
repz
push
mov
sub
push
out
jle
shrb
popf
ficoml
and
call
fnstenv
lock
ljmp
sub
roll
sahf
popf
les
bound
addr16
test
call
pop
imul
lods
mov
out
sbb
adc
ret
push
pop
loop
adc
decl
das
cs
in
mov
outsb
gs
xchg
add
cwtl
cmp
leave
and
jge
and
sbb
cmc
lahf
and
outsb
jb
push
daa
cwtl
lods
mov
adc
fs
test
dec
fldl
mov
mov
lret
sub
pop
mov
mov
fsub
test
push
pushf
pop
lahf
ljmp
ror
subl
ret
out
outsb
or
std
in
mov
in
bound
jno
and
xor
cltd
and
fnsave
test
inc
test
pop
loopne
repz
jge
add
inc
push
insl
and
ljmp
jmp
sbb
sbb
xchg
out
push
mov
mov
xchg
sub
adc
bound
aad
adc
shr
mov
imul
js
mov
mov
in
stos
xchg
sbb
mov
fs
push
jbe
push
out
pop
add
and
popa
sbbl
pop
pop
inc
clc
sbb
test
inc
flds
loopne
lods
enter
fcompl
inc
sti
sbb
add
and
pop
and
fsubrs
std
dec
rcll
fnstenv
pop
sbb
cmpb
fists
jae
push
or
jne
mov
clc
xor
std
sub
jp
xchg
sbb
push
out
mov
mov
sahf
pusha
adc
mov
and
dec
aaa
push
adc
xchg
scas
jbe
ret
xchg
mov
xchg
and
jl
mov
pop
ret
int
mov
or
mov
and
push
sbb
xchg
jnp
fadds
cmp
lret
push
pushf
push
int3
out
test
xlat
in
mov
adc
lea
xor
unpckhps
ja
mov
adcl
cwtl
inc
xlat
sahf
dec
pushf
mov
jle
mov
jns
pop
ds
dec
out
jo
or
dec
mov
pop
push
aaa
inc
cli
add
cltd
sbb
mov
cmp
incb
pop
jno
in
push
inc
rcrb
add
dec
jae
xchg
loopne
mov
xchg
jae
or
jl
loopne
mov
test
mov
and
or
inc
out
adc
rcrl
ds
data16
scas
xor
dec
sbbl
push
jns
mov
mov
inc
mov
mov
scas
mov
mov
mov
outsl
jnp
adc
scas
pop
xor
adc
mov
cs
loop
adc
mov
cmp
xlat
adc
push
mov
push
int3
mov
sbb
jne
subb
cmp
ljmp
and
jecxz
pop
rcrl
test
test
xchg
mov
pop
lock
movl
pop
jg
and
mov
aas
outsl
xor
or
or
push
sahf
dec
lods
and
xchg
mov
jno
int3
test
push
std
leave
jb
cs
imul
add
clc
sub
enter
dec
cmpsl
cmp
idivl
fwait
es
outsb
sti
pop
pop
das
inc
push
pop
cmp
ret
jbe
mov
add
add
in
jmp
sub
xchg
xchg
push
loopne
int3
in
jle
jecxz
mov
ror
push
cmpsb
test
xor
jne
lcall
fstps
xchg
mov
scas
push
rolb
addr16
push
sub
mov
or
cmpsl
addr16
adc
ja
imul
aad
insb
out
jne
out
push
or
cmpsb
push
shlb
mov
popf
mov
je
adc
movsl
sbb
insl
sbb
aam
add
aas
or
insl
dec
dec
gs
fcmovu
js
jo
leave
xchg
pusha
adc
lret
cmpsl
pop
imul
xchg
insb
xchg
fcoml
add
movsb
and
iret
add
mov
mov
test
int3
mov
add
stc
je
int
add
daa
hlt
pop
mov
pop
xchg
leave
xchg
or
pop
roll
push
and
shll
or
jmp
xchg
jno
lea
xchg
jp
pop
repnz
xchg
in
clc
stos
nop
int
lods
call
repz
jp
xor
sarb
dec
jmp
fmulp
mov
push
cmp
lret
xchg
repz
cmc
push
jae
pop
add
je
add
or
or
sbb
insl
fucomp
mov
out
xor
sub
aam
cmp
sbb
subb
pop
loopne
jl
sub
jnp
les
mov
fsubrl
arpl
push
dec
cli
ds
test
or
jg
inc
cmp
pop
inc
pop
movsl
inc
mov
std
scas
stc
mov
out
xor
inc
sbb
into
movsb
scas
addr16
pop
adc
adc
popa
fisttps
fmuls
xchg
leave
inc
mov
aad
dec
dec
out
loop
inc
adc
xor
bound
inc
dec
jecxz
movsb
pop
push
addb
ss
mov
pop
jge
add
decl
lret
inc
jle
fisttpll
sub
or
test
arpl
js
das
mov
mov
cmpsl
add
decl
inc
jmp
loopne
out
lret
les
sbbb
mov
xchg
es
out
pop
mov
out
push
enter
xchg
rorl
adc
push
ret
adc
mov
adc
mov
jecxz
add
adc
lods
or
shlb
aam
lret
and
cmpsl
push
mov
fsubl
xor
mov
pop
shrl
test
pop
sahf
outsl
hlt
jno
in
sbb
push
sub
xor
std
testl
sub
movsl
fildl
push
cltd
fdivrs
jns
ret
fs
push
or
scas
aaa
sbb
test
pop
dec
dec
mov
xchg
adc
loopne
je
ljmp
pop
enter
jnp
xchg
cmp
add
aas
dec
xchg
mov
js
nop
lret
sti
or
push
xor
pop
xor
ret
mov
lock
pop
test
add
ret
movsb
test
enter
mov
repz
push
xor
lods
cmp
mov
sub
testl
xor
xor
pop
adc
sbb
and
inc
push
jo
icebp
push
jns
adc
sbb
and
adc
pop
adc
and
mov
ret
add
mov
aam
xor
xchg
jmp
outsl
xchg
inc
pop
stos
lods
pop
xchg
lret
xor
or
mov
in
jnp
mov
xchg
jno
movsl
mov
adc
xor
mov
xlat
sub
sbb
xor
insl
rcl
mov
cld
push
imul
int3
or
sub
cs
data16
lea
mov
cmpsb
scas
mov
imul
ror
mov
jl
cmc
jo
cwtl
es
je
pop
cmp
hlt
iret
add
mov
divl
lea
fdivl
ljmp
addr16
lret
dec
je
mov
add
insb
xchg
inc
scas
jl
fsubs
push
das
daa
push
jbe
mov
idivb
pop
out
mov
mov
sbb
popa
jmp
pop
scas
insb
cltd
orl
movsl
in
lods
jge
fdivrl
lcall
out
push
xorl
inc
mov
shr
jae
pushf
inc
mov
sbb
das
lds
lcall
test
ja
lock
dec
pushf
outsl
outsl
lcall
andl
ret
xchg
push
addr16
and
shrb
push
sbb
out
flds
push
cld
movsl
pop
fs
cltd
fnclex
inc
into
adc
loopne
ds
push
add
ss
pop
inc
mov
rolb
cmc
inc
shl
mov
out
sub
inc
push
or
mov
mov
or
iret
jp
daa
sub
sahf
sub
ds
bound
scas
or
stos
pop
mov
sbb
lods
fsubl
je
adc
pop
outsl
and
mov
cmp
lods
mul
xchg
push
pop
scas
pop
sbb
and
mov
mov
iret
xor
sub
and
data16
dec
shll
sar
adc
cwtl
or
lods
pop
bnd
mov
jo
mov
or
loope
jge
and
fbstp
int
add
xor
fnstenv
cld
inc
mov
into
cltd
or
cmp
pop
sub
popf
inc
xchg
sub
cmp
jae
push
xor
aad
mov
and
sub
jge
insl
lea
out
push
cs
jns
loope
add
mov
xlat
jle
mov
aas
xor
repz
cmp
pop
lret
sbb
iret
mov
jae
lods
pop
shlb
mov
iret
mov
scas
pop
clc
sub
call
adc
popa
ds
xor
lret
stc
xchg
shrl
insl
repz
popa
sbbl
mov
adc
and
xor
add
lcall
xorl
add
xchg
dec
shrb
sti
xor
repnz
adc
clc
inc
jne
jo
sahf
sbb
sahf
call
sbb
mov
xchg
fdivrs
stc
mov
loopne
loop
xchg
xchg
jge
push
inc
test
inc
xchg
arpl
sub
sbb
shrl
fiaddl
inc
push
daa
xchg
jmp
out
adc
lds
sti
dec
push
xor
push
fcomps
xchg
in
jno,pt
xor
call
fcomip
jns
mov
push
leave
imul
lret
pop
pop
push
jp
lcall
cs
lods
idivb
xor
in
sub
adc
jnp
mov
push
jecxz
or
mov
aas
sti
or
xlat
dec
mov
fwait
pop
test
pop
inc
stos
out
lcall
pop
ja
xchg
sbb
shll
mov
mov
mul
sbb
mov
adc
adc
push
inc
xor
mov
insl
inc
js
loop
or
push
cli
incb
insb
cmc
dec
mov
fcom
xor
pop
jg
mov
pusha
imul
cmp
adc
xchg
leave
pop
cmc
lods
cli
loope
mov
mov
fldenv
push
lret
flds
cmp
and
outsb
dec
daa
fildl
lock
dec
ss
dec
movsl
adc
dec
pusha
and
cmp
jo
nop
xchg
xchg
jno
mov
out
jnp
jp
push
mov
and
adc
cwtl
ret
xor
mov
adc
in
add
pop
xor
adc
jb
icebp
cmp
xchg
out
jnp
sbb
cwtl
adc
and
sbb
std
cmpsb
xor
ds
push
std
stos
cmpsl
mull
ficoml
shr
xor
js
test
sub
jl
mov
test
pusha
mov
outsb
les
pop
push
cmc
out
dec
push
push
xchg
andb
inc
pop
push
mov
ja
xchg
sti
adc
jle
adc
or
mov
out
xor
xor
dec
push
xor
out
mov
add
adc
pop
mov
roll
dec
insb
sub
outsl
imul
jg
dec
xor
fwait
push
cwtl
fldt
out
stc
test
push
hlt
push
cwtl
sbb
mov
cmpb
mov
imul
mov
sarb
ja
xor
cmp
push
movsl
data16
ljmp
mov
sub
adc
push
nop
andl
cli
pop
pop
sub
or
fcompl
popf
and
inc
sub
xchg
inc
mov
es
dec
and
clc
push
push
mov
cli
jmp
and
dec
dec
repnz
aam
rolb
and
daa
jne
add
mov
adc
xor
hlt
mul
and
dec
push
lods
xchg
fstl
filds
out
shll
push
loope
mov
cmp
out
mov
pop
stos
stos
bound
fisubs
clc
and
jnp
sti
or
push
sbb
dec
aas
pop
xchg
sbb
sbb
sbb
sbb
sbb
adc
cmp
imul
lea
clc
lods
aad
mov
xlat
outsl
mov
xor
rcr
xchg
lock
sub
mov
dec
out
fiaddl
xchg
lcall
xor
test
jle
je
cmp
je
cmp
hlt
stos
cmp
ljmp
hlt
lcall
cld
std
or
ret
cwtl
push
or
mov
les
pop
dec
mov
dec
aaa
mov
sahf
dec
xchg
ja
and
imul
dec
cmpsl
push
push
mov
cmp
enter
jb
and
outsb
aam
test
imul
cmpsb
cli
xchg
fwait
mov
cmc
jno
out
les
xor
std
add
adc
lock
jb
dec
int
dec
insb
mov
aaa
add
cld
sub
les
lret
mov
sbb
enter
mov
sahf
shrl
ss
fwait
push
bnd
inc
movb
ds
cmp
sbb
jge
ljmp
inc
xlat
mov
cmp
and
mov
sub
push
fst
fldt
mov
cltd
fstpt
cmp
insl
cmc
adc
xor
popf
mov
into
mov
repnz
lahf
add
dec
lret
xchg
dec
mov
adc
sub
mov
arpl
adc
sub
or
xchg
sahf
jl
add
scas
and
pusha
shl
adc
mov
sbb
mov
std
push
pop
sbb
adc
add
cmp
xchg
sub
add
dec
xor
pop
mov
mov
ret
sub
int3
mov
sarl
daa
data16
mov
push
push
xor
xchg
sti
loop
sbb
xor
and
movsl
inc
dec
inc
repnz
jne
xlat
ja
in
push
cld
ror
inc
repnz
movsl
pop
push
inc
pop
lret
insl
mov
out
mov
push
xchg
mov
and
das
test
pop
and
mov
cmp
cwtl
jge
adc
daa
xchg
fwait
loope
mull
push
mov
adc
flds
fwait
lods
dec
mov
jmp
ss
and
push
xchg
in
dec
push
ja
inc
stos
iret
outsb
repnz
cld
lods
popa
xor
jg
sub
sub
test
scas
pushf
lock
pop
mov
xchg
pushf
jns
or
xor
adc
movsl
xchg
sbb
aas
jb
add
dec
addb
dec
mov
out
imul
xchg
cmc
lret
cmp
dec
sub
xchg
fbld
pop
mov
cli
mov
xchg
aad
cld
push
icebp
aas
and
mov
push
push
das
mov
scas
push
dec
xorb
sti
aaa
or
and
add
in
dec
sub
and
dec
cmp
test
imul
xor
add
xchg
jne
hlt
sbb
ja
cmc
pop
hlt
lret
lahf
int
inc
imul
dec
icebp
jle
lods
sub
jne
sub
mov
enter
xor
add
cli
loopne
das
cs
push
inc
xor
or
mov
push
test
mov
sbb
pop
xor
aaa
sub
xchg
jbe
sub
leave
sub
mov
xorl
out
stc
sarl
cmc
pop
adc
loop
cmp
mov
mov
jo
xchg
incb
dec
cmp
mov
clc
mov
popa
jg
stos
mov
pop
hlt
icebp
sub
loop
mov
mov
insb
xchg
arpl
lret
clc
testb
clc
adc
add
mov
sub
cmp
mov
enter
push
sub
aam
xchg
fildl
loop
adc
and
insb
js
test
xchg
pusha
clc
in
adc
das
xor
and
cmc
loop
mov
rol
jecxz
ficompl
test
pushf
sti
lock
sub
mov
movsl
dec
xorl
dec
in
mov
icebp
pop
push
xor
push
das
mov
cmpsl
mov
mov
movsb
push
lea
cmp
mov
test
test
cmp
scas
cmpl
fsts
clc
jmp
movsb
sbb
clc
and
les
fidivrl
jbe
out
xchg
rcll
fstps
ja
movsb
arpl
aad
xchg
sub
sti
mov
cmp
inc
out
and
std
pop
pop
mov
ljmp
out
cmpsb
and
lods
push
les
negb
es
aas
rcl
std
pushf
xchg
in
ja
sbb
cmp
ror
shll
jge,pt
or
sub
dec
gs
cmp
int3
insl
ret
mov
iret
hlt
pusha
pop
aam
in
sub
and
xchg
sbb
or
adc
pusha
std
shl
scas
in
sub
push
xchg
jmp
es
xchg
pop
cmpb
xor
inc
inc
repz
out
fwait
lds
sahf
out
mov
cmpsl
into
aas
mov
xor
test
mov
dec
inc
jecxz
stos
and
inc
jbe
loope
cs
in
push
test
sbb
dec
and
sti
xor
out
xchg
inc
add
out
fdivrl
or
out
mov
fistpl
mov
push
push
fdivrs
dec
stos
das
inc
clc
jg
je
xor
cmp
and
adc
imul
inc
pop
jp
mov
dec
mov
xchg
xchg
int3
sti
cmp
xor
jl
mov
dec
sbb
out
add
sbb
and
cmpsl
mov
sbb
jecxz
popa
pop
cmp
int3
lock
jnp
insl
arpl
adc
out
adc
mov
mov
insb
insl
or
adc
dec
stc
imul
arpl
sub
or
jle
fcoms
out
movsl
popf
shl
adc
xor
hlt
jo
inc
pop
outsb
inc
xchg
shll
mov
cltd
adc
inc
dec
call
jns
pop
add
out
cmp
popa
mov
or
and
push
add
addr16
and
pop
sti
add
stos
testl
lods
xchg
dec
mov
xchg
rclb
mov
das
dec
shll
push
jno
fadd
push
or
pop
leave
test
pop
inc
pop
ljmp
cmpsb
fsts
push
nop
imul
jbe
jns
xchg
jae
push
sbb
xchg
xchg
ret
and
mov
ss
stos
ret
or
jno
inc
jg
inc
icebp
fstpt
mov
pop
mov
lret
xchg
xor
mov
pop
pop
jo
jle
inc
lds
adc
inc
mov
fs
sub
rcl
decb
orl
jmp
paddw
out
jmp
and
orb
cld
push
insb
pop
repz
lds
cmp
loope
dec
push
mov
add
ljmp
mov
nop
xlat
and
jp
lds
jae
lret
jecxz
adc
flds
test
fisttpll
xchg
adc
stos
mov
and
adc
les
popf
inc
dec
mov
imul
jg
inc
jle
out
in
movsb
lcall
mov
lock
adc
mov
in
jnp
push
and
fists
popf
aaa
adc
imul
cmp
lcall
push
das
add
ds
ficompl
dec
mov
push
mov
xchg
sbb
fs
dec
icebp
cltd
cmp
fsubrs
sbb
add
cld
rorl
adcl
sbb
mulb
cwtl
mov
jecxz
ds
pop
rol
cld
into
fldenv
push
fcmovne
sbb
add
in
mov
pop
inc
dec
aad
rorl
lret
popf
mov
cmp
in
jbe
popf
mov
push
xor
pandn
sti
and
adc
inc
in
xor
add
xlat
aas
shll
clc
or
mov
inc
lds
mov
ret
dec
aad
adc
fldenv
xor
cmp
dec
rcll
xchg
les
cmpsb
mov
and
and
adc
sti
inc
popa
leave
and
cmp
add
aam
jmp
add
or
and
std
mov
lods
stos
nop
rcrl
out
mov
push
inc
jns
mov
inc
out
std
push
mov
jl
dec
lods
lods
add
int
xchg
ds
sahf
push
lock
flds
fldl
and
test
adc
jbe
or
aaa
std
subl
push
mov
inc
sbbb
xorb
add
dec
cld
decl
xor
test
lea
lods
mov
outsb
and
pop
inc
pop
pop
mov
add
sar
stc
loop
je
icebp
sub
lret
lret
test
lret
scas
pushf
cld
movsl
and
test
pop
sbb
adc
imul
rcrl
out
mov
cmc
sbb
shlb
adc
daa
push
into
lods
in
subb
sub
enter
js
push
and
and
add
push
cltd
mov
push
mov
sahf
popf
push
lds
mov
xor
ds
add
cli
inc
xchg
adc
in
ljmp
fdivrl
pop
movsb
or
mov
test
and
addr16
repz
fnstcw
mov
and
adc
cmp
and
pop
addr16
aad
out
push
in
lret
cmp
arpl
mov
addr16
cltd
insb
sub
dec
mov
mov
inc
sahf
cwtl
jle
cmp
add
arpl
iret
sbb
out
xchg
mov
jns
fnstcw
aas
jne
adc
das
mov
push
in
push
mov
jnp
mov
push
cwtl
pop
scas
add
xchg
idiv
xor
and
insl
repnz
push
xor
cmp
adc
add
mov
sub
data16
jge
lret
sub
outsb
scas
sbb
cmpsb
adc
cmpsb
pop
shll
mov
aad
movsl
std
frstor
xchg
xor
push
xchg
gs
xchg
and
xor
inc
ss
xor
loopne
addl
jl
es
js
pop
mov
jmp
ja
xchg
test
xchg
mov
imul
and
scas
inc
push
inc
pop
sbb
cmp
or
or
lcall
jns
adc
out
cmp
shlb
push
xchg
adc
daa
mull
and
sbb
data16
test
fcmove
sahf
sub
mov
pop
lods
add
mov
jb
jl
popf
xchg
dec
jg
lods
adc
mov
rcrb
and
xchg
gs
nop
xchg
shrl
in
push
loope
adc
addl
repz
hlt
in
jns
mov
xor
sub
xchg
push
sub
add
pop
xchg
sub
rorl
xchg
push
fildll
xor
dec
cmp
shlb
sahf
and
out
or
inc
adc
adc
in
push
pop
hlt
mov
dec
fstpt
les
dec
pop
mov
or
xor
mov
mov
daa
nop
sti
fisttpll
shr
jno
fistl
andl
aad
movhps
xchg
dec
insb
mov
mov
in
inc
jmp
ds
xor
test
andb
iret
and
and
fwait
lret
mov
sbb
mov
mov
adc
push
push
sbb
out
mov
inc
stos
mov
push
mov
or
into
fstpl
in
lock
xor
enter
bound
jg
add
sti
push
das
fwait
ret
je
lcall
nop
test
jbe
add
dec
ficompl
adcb
dec
jp
xor
fsubl
aad
sub
repz
je
xor
pop
inc
nop
sbb
jnp
lock
mov
fstl
sbb
test
jo
clc
in
sub
mov
xor
sbb
neg
jb
sbb
pop
es
stos
adc
push
mov
stos
pop
push
sub
cmc
jg
inc
jns
iret
fcoms
arpl
xchg
iret
and
dec
cmp
call
test
or
pop
mov
outsl
dec
mov
inc
fldln2
xchg
into
and
in
adcb
add
push
add
daa
call
lods
call
or
jmp
mov
cmp
inc
icebp
pop
cld
add
sub
out
call
jp
fidivl
push
mov
lods
hlt
xchg
mov
cmp
lds
inc
ficompl
mov
cmp
stos
dec
mov
or
lcall
cmpsb
enter
push
push
sahf
hlt
mov
mov
stc
jns
and
lcall
pop
lock
jg
xor
sbb
shll
ffreep
in
cmpsb
addr16
insb
inc
mov
cvtps2pd
out
mov
mov
clc
add
sbb
pushf
inc
fmul
or
mov
popa
or
ret
cli
jns
loopne
popa
orb
or
cmp
mov
pop
xchg
stos
sti
int
and
aam
dec
pop
in
inc
out
xchg
cmpl
fs
sbb
cmpsl
es
dec
idivl
out
cmp
iret
jg
test
pop
push
cld
jbe
mov
scas
push
add
test
es
testb
movsb
mov
rolb
dec
sahf
add
std
pop
and
pusha
cmp
jle
or
adc
sub
and
pop
inc
cwtl
movsb
rorl
mov
imul
sub
add
ja
and
adc
rclb
push
xor
fwait
jae
mov
pop
int
adc
xor
xor
je
xchg
pop
push
lock
mov
mov
mov
cmp
in
notb
sub
dec
dec
arpl
fwait
mov
cltd
movsb
push
pop
out
outsb
sub
mov
insb
sub
fildl
xlat
pop
sbb
dec
push
cltd
cmp
mov
hlt
dec
pop
mov
dec
xchg
sub
ret
xor
aaa
jbe
adc
roll
popf
fimull
fimuls
xorl
inc
adc
pop
out
in
jecxz
hlt
dec
mov
mov
je
nop
inc
std
repnz
jg
aad
jmp
ret
sbb
sub
aad
mov
cwtl
push
and
pop
push
xchg
cwtl
and
int
dec
mov
push
in
xchg
push
dec
and
push
sbb
icebp
pushf
in
gs
adc
and
lret
movsb
stc
aas
adcb
sahf
sbbl
outsl
xchg
sub
mov
inc
mov
cmpsb
icebp
inc
insl
cltd
notrack
jecxz
popa
iret
sub
and
lret
jb
aas
cmpsb
das
mov
cmp
jecxz
stos
dec
fmuls
outsl
cmp
cwtl
xchg
jg
mov
sbb
mov
xchg
icebp
jae
fisubs
mov
sub
add
int3
mov
repz
stos
inc
js
aas
mov
divb
cmp
inc
mov
fsubr
loop
sbb
pop
pop
in
jmp
jl
mov
push
jmp
inc
lods
imul
lods
add
lock
push
lds
pop
xor
push
into
call
mov
loopne
ds
lret
gs
xor
xor
lea
out
bound
jne
sub
ret
pop
out
movsb
mov
xchg
loopne
loopne
pushf
rcl
push
mov
test
iret
ffreep
stos
lods
sbb
mov
xchg
sti
mov
stos
stos
push
jle
inc
mov
daa
xor
mov
inc
pushf
and
frstor
inc
scas
enter
in
std
sub
push
in
in
or
or
ja
das
adc
lods
pop
cmp
inc
cmp
gs
lock
xchg
push
ret
lds
mov
rcrl
out
std
xchg
outsb
shll
sbb
xor
and
push
or
dec
push
stos
mov
out
push
dec
add
or
lods
aaa
cmp
mov
stos
insb
pop
mov
aad
je
mov
add
cmpsl
mov
fcomip
push
xchg
movsl
inc
mov
inc
test
jg
pop
std
inc
and
iret
das
sarl
xor
push
lods
in
testb
sti
test
push
add
les
lock
icebp
mov
pop
inc
lods
mov
push
fnstenv
cmc
aam
add
mov
cmpsl
and
popf
scas
mov
cmpsb
loopne
outsl
xchg
jg
dec
ficompl
pop
mov
sub
sub
or
add
cmc
test
cmp
leave
loopne
and
pop
ds
mov
push
aaa
jne
inc
loopne
mov
insl
std
insl
dec
rcr
jae
sub
and
pop
mov
and
daa
jnp
jecxz
push
xor
mov
shrb
sbb
push
out
pop
adc
pop
fdivl
mov
pop
dec
adc
mov
or
popa
push
cmpsb
ret
inc
in
inc
jg
mov
adc
jge
inc
ds
cmpsb
jmp
cmp
cwtl
daa
lds
in
cwtl
xor
lret
mov
nop
cmpsl
pop
push
icebp
adcl
xchg
dec
out
pushf
es
out
mov
sarl
out
mov
sahf
sar
adc
aam
push
sbb
push
cli
add
xor
cmp
xchg
stos
inc
xchg
lea
jl
pop
inc
out
call
sbb
pusha
or
adc
mov
clc
mov
push
arpl
test
das
ret
or
cmp
pop
and
out
mov
lret
ret
in
push
test
push
insb
add
inc
out
aad
or
xchg
leave
pop
pop
push
jne
lods
mov
adc
mov
add
jmp
jecxz
dec
movd
stos
rol
stos
or
cmp
dec
frstor
mov
stc
mov
adc
out
in
lahf
call
sub
fwait
mov
fists
jle
jae
incl
jg
mov
mov
dec
or
int
shl
jg
mov
mov
stos
cmpsl
push
popf
pop
mov
sbb
sub
and
lahf
xchg
jne
stc
and
scas
inc
test
aas
pop
or
add
sahf
gs
adc
les
stos
mov
sub
sub
mov
pop
pop
stos
push
mov
out
scas
mov
adc
sahf
adc
in
iret
pop
mov
push
adc
push
xor
or
or
jb
mov
popf
cmp
sub
push
push
out
inc
je
xchg
pop
cmc
lods
in
mov
ss
movsl
rol
jb
pop
sbb
bound
iret
ret
push
mov
add
in
aad
ss
fcomip
jecxz
mov
fidivl
fnstcw
cld
mov
add
pop
jns
or
or
push
cwtl
lock
and
add
mov
inc
xlat
jns
mov
sub
loopne
mov
aam
mov
adc
dec
enter
lret
pop
das
mov
loopne
imul
imul
aad
mov
les
in
xchg
aas
stc
mov
add
mov
sub
mov
pop
inc
mov
subl
and
ss
dec
imul
js
push
jae
pop
cmpb
sbb
sti
or
dec
mov
out
ja
inc
xchg
jg
ss
rorl
mov
pop
add
stc
dec
jbe
adc
xlat
pushf
xor
ret
mov
addr16
fdivs
jl
call
cs
cwtl
push
inc
jo
repz
or
push
pop
ret
dec
xchg
xor
cli
loopne
and
sahf
mov
mov
push
sbb
in
out
mov
cmp
lock
mov
jmp
mov
xchg
rcl
mov
inc
push
jp
aad
pop
jmp
xchg
gs
pop
cltd
sub
dec
or
xchg
ljmp
cmp
scas
cmp
ljmp
fistl
loopne
shrb
pop
adc
pop
out
inc
mov
push
pop
add
cmp
push
lret
imul
dec
imul
dec
bound
adc
xchg
mov
push
inc
push
addr16
sbb
leave
insl
clc
insb
pusha
fadds
je
in
ret
sub
jne
cltd
loope
push
loope
inc
gs
in
shrl
in
mov
mov
add
xorb
loop
xchg
inc
cmp
loopne
cmp
pushf
inc
inc
mov
push
rorb
dec
shrl
imul
jo,pn
adc
outsl
pop
nop
stc
jle
mov
mov
sti
sbb
jle
dec
sbb
xchg
leave
je
cmp
jecxz
pop
xor
pop
push
sub
and
insb
pusha
shr
jnp
xchg
mov
cmp
inc
loop
add
xor
pop
outsl
add
cmp
add
inc
cmp
mov
ficoml
mov
in
cmc
int3
xor
add
xchg
adc
sub
jns
add
les
sub
outsl
mov
xor
cld
