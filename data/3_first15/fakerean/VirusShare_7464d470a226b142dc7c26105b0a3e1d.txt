jno
add
divb
rorb
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
popa
mov
mov
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
pop
mov
add
and
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
iret
stos
inc
add
adc
insb
cmp
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
add
inc
add
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
mov
inc
add
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
shrl
add
add
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
add
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
mov
add
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
in
inc
add
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
fwait
inc
add
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
lcall
and
call
add
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
add
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
add
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
cli
pushf
inc
add
push
and
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
dec
mov
add
add
add
xabort
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
pop
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
mov
and
rcr
loopne
fdecstp
les
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
pop
ret
add
call
and
and
lea
mov
push
mov
lea
movl
movl
cwtl
inc
add
mov
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
cwtl
inc
add
mov
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
fdivl
and
test
jne
test
jne
lea
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
cmp
and
lea
mov
movl
movl
movb
movsl
inc
add
inc
push
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
add
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
add
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
add
loop
add
add
call
mov
roll
out
add
test
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
xor
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
inc
add
sbb
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
push
push
call
mov
nop
enter
pop
rolb
add
add
xchg
add
mov
push
add
mov
test
scas
mov
jbe
mov
test
add
hlt
movsl
add
test
imul
add
xchg
cld
loop
add
data16
push
add
std
rol
add
pop
in
jmp
jb
test
out
faddl
push
cmpsb
xchg
ficoml
add
imul
xchg
add
hlt
test
mov
mov
cmpsb
add
imul
mov
mov
add
bound
add
jnp
add
fstpt
add
clc
add
movsw
shll
mov
add
add
add
cmpsl
imul
in
add
push
push
push
push
push
push
push
push
lea
push
push
call
filds
mov
add
add
add
scas
pop
ret
add
movsb
pushf
pop
add
push
in
add
int
add
add
mov
add
insb
mov
add
add
xchg
nop
add
add
add
add
jno
in
mov
scas
add
add
mov
lea
mov
lea
pop
movl
push
lea
push
push
push
push
push
push
lea
push
call
mov
mov
lea
add
xchg
add
imul
add
push
add
add
loopne
add
jbe
mov
add
jmp
roll
add
add
in
add
mov
mov
add
add
leave
add
shrb
mov
into
shrb
lea
pop
popl
push
push
call
push
pop
add
lock
cli
add
mov
lahf
mov
call
ret
add
add
add
in
add
add
add
add
cmpsb
add
mulb
movsb
stos
mov
add
add
xchg
add
stc
flds
sarl
enter
shll
lea
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
add
xchg
add
add
xchg
fildl
add
clc
add
in
add
fadds
xlat
mov
mov
mov
push
jge
lods
add
add
pusha
fstpt
add
mov
add
xor
add
leave
in
lock
add
out
fcmovnbe
add
add
add
add
pop
lods
in
add
hlt
mov
lea
pop
push
push
push
push
lea
push
push
lea
push
push
call
mov
xchg
add
mov
add
subl
lahf
add
shrl
rcrl
add
mov
subl
xchg
add
add
mov
push
xchg
add
cwtl
jmp
pusha
cld
jne
stos
jo
ret
add
test
jbe
mulb
addl
push
call
call
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
mov
sahf
add
add
add
mov
ret
idivb
lret
add
add
add
add
add
add
add
push
mov
stc
lods
mov
test
lock
int
push
add
add
ja
test
xchg
insb
add
call
pop
fisubrl
and
add
sbb
add
hlt
add
add
rclb
lea
push
push
call
in
lahf
mov
add
lock
nop
in
add
frstor
movsl
mov
push
add
add
add
pop
push
lods
add
pop
add
fadds
jno
add
add
mov
pop
mov
loopne
mov
add
into
loope
push
fstps
add
xchg
fisubrs
xchg
mov
lea
pop
ret
push
push
push
push
push
push
call
imul
jnp
jb
movsb
les
mov
lret
pop
add
out
add
jno
jle
add
repnz
int3
add
push
add
add
add
stos
add
add
push
add
push
add
pop
add
mov
test
out
add
pop
mov
mov
add
push
push
push
call
add
rolb
lahf
mov
clc
shr
mov
scas
andb
sahf
cli
rcll
fwait
add
push
add
fs
add
add
add
cmc
mov
lea
into
add
add
add
mov
mov
mov
popl
jmp
pusha
movsl
in
add
add
add
into
cmpsl
mul
push
mov
into
fiadds
mov
lea
pop
add
add
push
lea
push
lea
push
call
shlb
add
loope
add
cli
into
rclb
out
jnp
test
out
mov
int
add
sar
add
xchg
mov
add
add
mov
fisubs
xchg
add
add
popf
add
jge
add
test
scas
roll
cli
mov
add
cmpsl
sti
iret
push
pushf
test
jnp
fldl
scas
mov
lea
pop
mov
xor
push
push
push
push
call
add
loop
stos
lcall
int3
popa
add
mov
fidivrs
loopne
mov
mov
push
pop
add
fiaddl
ljmp
add
cld
jne
jb
adcb
cmc
mov
jmp
fldt
mov
xchg
out
js
rolb
add
push
add
xchg
std
mov
lods
int
mov
stos
sti
add
iret
rcrb
cmpsl
fcomps
mov
lea
pop
add
push
lea
push
push
push
push
lea
push
push
push
push
call
add
add
cmc
add
out
loop
flds
add
add
add
push
add
test
add
lret
add
add
add
mov
add
add
push
add
add
add
jmp
add
push
add
in
arpl
out
repnz
add
lock
jbe
aam
add
xchg
add
cld
lea
pop
call
mov
push
push
push
lea
push
push
call
mov
je
add
loopne
push
push
add
out
stos
mov
data16
xlat
push
faddl
push
add
cwtl
rolb
jle
mov
test
add
add
add
popf
add
lahf
add
aam
aam
add
push
add
bound
add
ja
jecxz
pop
add
add
mov
add
pop
xor
push
push
push
push
push
push
lea
push
push
lea
push
push
call
xchg
add
scas
add
add
mov
in
mov
add
mov
popl
add
loope
cmpsl
iret
xchg
popf
add
bnd
fcomps
movsl
loop
mov
add
add
int3
jge
mov
lahf
arpl
andb
add
add
add
int
les
les
add
push
push
sub
sub
push
sub
add
sub
add
shl
shl
sub
ror
shr
xor
pop
pop
push
push
push
push
call
test
add
sarb
scas
add
mov
add
add
add
add
add
popa
add
add
test
in
add
out
add
icebp
lea
push
add
mov
add
push
mov
add
hlt
insb
int3
add
outsl
mov
fmul
push
add
popf
fwait
add
lea
data16
jne
call
push
push
push
lea
push
push
lea
push
call
test
mov
leave
push
mov
xchg
add
call
je
in
insb
test
mov
jne
addr16
mov
leave
pop
repnz
add
and
add
add
loopne
add
std
in
add
data16
gs
mov
fiaddl
add
pop
add
push
movsl
push
xchg
add
mov
lea
pop
mov
push
push
push
call
pop
mov
incb
mov
add
xchg
rorb
add
mov
add
add
popa
insb
add
add
xchg
addb
imul
add
add
fisttpll
add
add
imul
xchg
mov
jns
out
mov
add
push
mov
jmp
xchg
aam
add
popa
or
movl
lea
push
push
lea
push
push
push
call
add
in
shrb
lret
test
sahf
rcl
addb
out
mov
add
add
sahf
jno
jmp
loop
in
lret
jge
add
fwait
add
jecxz
outsl
mov
add
mov
mov
add
stos
stc
cwtl
mov
add
fldl
movsl
iret
add
lods
add
bound
jnp
add
add
fs
lea
pop
push
push
push
push
push
push
lea
push
lea
push
call
add
leave
leave
add
ret
add
mov
movsl
jle
clc
repnz
jge
in
fldenv
fdecstp
cltd
add
mov
cmpsl
out
add
add
pop
arpl
movsb
pusha
lea
add
movsb
add
pop
addb
add
add
test
iret
add
in
mov
push
shrl
icebp
add
pop
pushl
push
push
call
lcall
add
xchg
add
jno
roll
add
add
push
add
add
xchg
add
fdivs
fdiv
jl
push
add
lret
add
mov
cmpsb
add
mov
xchg
add
add
add
add
add
into
add
aam
ret
fildl
fimuls
or
jne
call
pushl
push
lea
push
push
push
push
push
call
add
movsb
add
add
mov
add
add
add
add
addr16
add
add
jno
mov
add
push
aad
add
push
loope
stos
push
add
add
addb
add
lods
mov
mov
faddl
iret
add
push
repnz
inc
arpl
movb
gs
mov
add
mov
sbb
jne
call
push
push
xor
shl
push
sub
add
add
sub
shr
not
sub
add
shr
pop
add
add
not
add
pop
push
push
push
lea
push
push
push
push
push
call
cli
addb
mov
cmpl
jp
push
enter
add
add
int3
popa
xlat
movsl
add
add
fadds
scas
pop
arpl
push
out
mov
jp
add
jbe
lret
cmc
cld
mov
xchg
add
aam
insb
insb
add
jl
out
mov
add
add
cli
fwait
add
add
je
mov
mov
add
mov
add
int
int3
lea
pop
pushl
push
push
push
call
jecxz
lcall
out
add
mov
add
push
add
fstl
mov
pop
add
jle
fs
add
add
pop
add
add
test
movsl
add
mov
xchg
add
mov
add
jl
mov
mov
xchg
add
iret
push
add
outsl
lcall
fdivrl
mov
lea
pop
call
push
push
push
push
call
add
add
add
add
push
add
add
in
add
add
flds
add
fs
fldl
add
roll
popl
add
push
data16
add
pop
pop
add
hlt
add
call
mov
in
mov
mov
push
int3
je
push
add
scas
sahf
add
add
add
add
out
add
pop
push
push
push
push
push
pop
add
rol
add
sub
rol
xor
pop
rol
pop
push
push
push
push
lea
push
push
call
push
push
add
mov
xchg
rcl
pop
addl
add
pop
bound
add
js
push
add
jns
js
fistpl
add
mov
shll
jo
add
data16
add
add
imul
mov
add
add
roll
cmpsl
add
add
mov
lea
pop
push
push
lea
push
lea
push
push
call
test
add
jecxz
mov
push
pop
add
out
fldl
jle
add
leave
mov
neg
add
add
mov
mov
movb
test
negb
add
nop
addb
add
mov
clc
pop
add
add
add
add
add
pop
test
mov
lea
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
cmc
add
jle
add
arpl
pop
std
cmpsl
fnstcw
add
add
jp
add
mov
add
jns
mov
rcll
jb
pop
std
cli
push
decb
jno
pop
fistl
add
jge
sbb
rcl
hlt
jae
stc
add
add
in
movsb
push
movsb
add
pusha
mov
lods
jnp
imul
aad
mov
lea
pop
call
mov
push
push
push
lea
push
push
lea
push
call
add
add
fwait
in
add
add
add
lret
add
add
lret
add
add
fs
addl
mov
xchg
lds
ja
mov
xor
add
mov
add
jns
movb
add
add
mov
mov
lea
pop
push
push
push
push
push
lea
push
push
call
mov
add
mov
in
test
jecxz
add
hlt
lods
and
lahf
add
add
add
mov
test
test
add
stos
jle
add
faddl
mov
rolb
outsl
nop
pop
test
add
add
out
xchg
add
add
pop
jge
lds
push
add
mov
lea
pop
mov
add
push
push
push
call
add
add
add
nop
add
js
rolb
add
jae
xchg
insb
fnstsw
add
sti
push
add
addl
push
add
stos
cltd
add
ficoms
insb
add
jecxz
add
out
jae
xchg
add
addb
add
loope
in
push
pop
jge
nop
sti
mov
lea
pop
add
add
push
push
push
call
out
add
mov
aam
in
add
std
fnstenv
add
fldcw
shll
out
xchg
add
add
fwait
add
add
add
rclb
mov
add
add
push
iret
in
cmc
sahf
lods
jne
mov
add
pop
mov
push
push
lea
push
lea
push
lea
push
call
add
enter
adc
add
push
add
add
sahf
add
les
add
push
add
jp
jno
add
add
ja
add
add
mov
add
jns
jmp
add
add
mov
mov
mov
add
frstor
ja
mov
xchg
mov
add
mov
lea
pop
xor
push
push
push
push
lea
push
push
call
movsl
add
scas
loop
shrl
call
popf
xchg
add
jmp
pop
jb
add
add
out
add
add
out
in
add
clc
add
add
fiaddl
enter
add
mov
push
movsl
add
add
add
clc
add
add
loopne
testl
bound
pop
add
push
push
push
lea
push
push
lea
push
call
arpl
mov
lea
xchg
mov
add
jmp
push
cmpsl
push
in
lret
push
add
popl
add
int
add
xchg
add
rcrl
add
out
add
add
mov
add
clc
cltd
add
add
cltd
add
push
fiaddl
add
jge
pushf
loopne
out
loop
enter
lea
pop
add
push
push
push
lea
push
call
add
pop
add
add
icebp
lret
cld
add
imul
pop
lahf
add
add
pop
add
add
mov
jge
xchg
add
outsl
scas
add
lock
lea
add
add
add
xchg
out
add
nop
popf
loop
arpl
add
flds
add
add
add
mov
adc
mov
push
push
push
call
in
add
add
mov
add
mov
ja
add
fiadds
add
xlat
add
fdivp
mov
in
mov
add
add
add
in
in
jb
jb
enter
add
add
add
out
add
add
mov
pop
fmull
add
add
pushf
add
xchg
mov
mov
lea
pop
xor
push
push
push
call
icebp
pop
nop
imul
in
add
add
add
add
mov
jle
fcmovu
imul
add
jnp
add
add
jo
aam
shll
lods
add
jmp
pop
out
mov
faddl
arpl
mov
add
pop
push
push
add
mov
shrl
add
add
icebp
cltd
popa
add
add
push
cmpsl
out
sahf
add
lea
pop
add
push
push
lea
push
push
push
push
call
mov
add
add
fs
add
add
loope
add
iret
push
add
add
pop
int
add
mov
push
out
add
add
jb
add
add
sti
add
pop
mov
pop
cltd
jle
jns
fists
aam
push
jecxz
ret
add
pop
add
cld
lea
pop
add
push
push
lea
push
call
jecxz
jbe
mov
cld
jl
pop
loope
pop
add
add
pop
add
out
add
test
filds
add
je
add
lret
add
mov
aad
add
fwait
add
and
add
lret
lods
ljmp
push
into
xchg
fsts
add
nop
add
add
mov
jnp
lcall
xchg
add
add
add
int3
lea
pop
pop
push
lea
push
push
push
push
push
call
cwtl
addl
loop
mov
add
leave
add
add
mov
add
xchg
lods
add
pop
lods
fadds
rolb
add
loopne
pop
add
add
mov
sti
xchg
add
mov
add
jmp
add
mov
add
data16
xchg
jecxz
popl
jp
push
xchg
mov
shrb
add
fistpl
pushf
sahf
mov
pop
mov
push
push
push
lea
push
call
cmpsb
add
add
xchg
add
xchg
add
leave
add
add
add
out
jecxz
add
cmpsl
pop
lahf
sahf
add
in
add
add
jbe
add
add
lock
add
xchg
mov
out
into
outsl
jp
test
lret
test
std
push
leave
lds
cmpsl
fdivs
xchg
push
pop
mov
lahf
test
cld
lea
pop
xor
push
push
lea
push
push
push
lea
push
push
push
call
cwtl
add
push
push
iret
add
jl
mov
add
jecxz
mov
add
xchg
lods
pop
xchg
add
mov
xchg
add
add
lahf
addr16
pop
pop
mov
add
popf
add
mov
out
add
sar
aam
cli
andb
pushf
push
outsl
pusha
add
add
add
ret
add
fildl
mov
mov
stos
jge
add
scas
fcmovu
add
add
mov
lea
pop
add
push
push
push
push
call
add
add
add
adcl
jnp
je
outsl
add
add
add
add
add
fadd
xchg
add
add
stc
loopne
add
insb
add
add
xchg
add
push
std
test
in
add
add
mov
lds
ja
add
add
roll
add
add
add
or
mov
xor
push
lea
push
push
call
add
int
add
loope
mov
mov
test
enter
add
mov
xchg
add
mulb
incb
mov
in
test
js
push
movsb
in
stos
out
rcrb
mov
mov
fs
push
cltd
xchg
add
xchg
sti
imul
enter
add
add
cli
ljmp
adcl
lea
pop
sub
pop
rep
push
push
push
push
push
push
push
call
add
add
add
jns
add
add
jl
arpl
add
mov
add
add
push
lret
fidivs
scas
add
mov
test
add
xchg
outsl
jo
add
add
orl
pop
mov
add
je
mov
xchg
jecxz
jmp
test
add
add
add
pop
loope
add
mov
lea
pop
pop
mov
push
push
push
push
lea
push
lea
push
push
push
call
icebp
adcl
mov
stos
add
fstpl
js
roll
add
movsb
arpl
loop
into
add
fistl
add
add
sahf
cwtl
push
stc
adcl
outsl
mov
jnp
fiaddl
add
call
cltd
mov
mov
xchg
mov
xchg
jnp
cmpl
arpl
int3
jae
loopne
out
add
xchg
add
pop
add
push
push
call
jl
out
cli
add
add
mov
fiaddl
roll
xchg
out
stc
mov
fiadds
call
add
add
add
cmpsb
mov
add
outsl
mov
iret
imul
pop
add
into
add
jb
out
mov
mov
imul
mov
jnp
fmull
ret
add
add
add
mov
xor
push
push
push
call
add
add
add
fldl
lods
mov
add
xchg
test
rclb
mov
in
add
shrl
mov
add
add
add
add
movl
add
mov
add
add
add
add
add
pop
add
mov
mov
add
sti
add
add
scas
mov
lea
pop
mov
push
push
push
push
push
push
call
mov
pop
push
add
icebp
add
hlt
add
add
add
add
add
cmpsl
add
cmpsb
push
jmp
addb
add
pop
fs
cli
add
mov
mov
sti
pushf
add
add
add
add
xchg
add
add
lds
in
hlt
int
add
cmc
sti
mov
mov
cltd
in
aam
bound
xor
push
push
push
push
lea
push
push
call
add
mov
bound
mov
out
add
in
jmp
cmpsl
add
jbe
add
add
pop
add
idiv
scas
aam
mov
incb
in
je
add
push
add
add
pushf
call
int3
mov
mov
xchg
mov
xlat
jp
add
xchg
incb
mov
rcr
add
loopne
mov
xchg
add
xchg
add
jb
rorl
add
push
push
push
push
push
push
push
push
push
push
call
add
push
add
jns
add
pop
jae
add
add
add
jge
jno
add
add
add
mov
pop
lret
jp
fsubl
push
add
add
rcrb
ficompl
add
mov
mov
stos
mov
add
jns
add
addr16
add
addl
lea
pop
mov
xor
push
push
push
push
call
add
add
lds
add
add
add
add
arpl
add
add
fdivl
les
add
call
push
cld
subl
scas
clc
lds
sti
add
add
add
mov
out
add
mov
add
add
add
add
mov
add
pop
pop
fistl
xchg
add
fmull
ret
pop
add
push
push
lea
push
push
push
call
int
add
add
push
add
push
rolb
add
add
add
cmpsl
push
aad
add
je
add
loope
add
fucomp
mov
in
int3
add
scas
jecxz
add
add
jnp
stc
add
add
cli
jno
stc
add
mov
add
add
lods
mov
xchg
add
fcmovu
shr
mov
lea
pop
mov
push
push
inc
ror
push
or
not
add
sub
lea
add
pop
lea
not
sub
add
pop
push
lea
push
lea
push
push
call
jl
ror
xchg
shlb
in
mov
add
lret
div
mov
mov
add
mov
cltd
add
jge
test
add
lcall
sarl
push
jecxz
add
sar
xchg
neg
add
iret
iret
add
add
roll
lret
je
mov
add
lods
lahf
add
movsl
mov
bound
aad
rcl
in
sahf
mov
lea
pop
pushl
call
push
push
push
shr
add
shl
sub
push
sub
add
sub
add
sub
dec
sub
sub
xor
pop
ror
xor
pop
push
add
pop
push
push
call
push
ror
inc
not
pop
mov
push
push
push
shr
dec
pop
mov
push
push
lea
push
push
call
bound
mov
jnp
add
push
mov
std
pop
add
add
lds
add
pop
add
add
add
add
xchg
add
sahf
xchg
enter
lods
jne
rolb
add
aam
add
add
cli
ror
mov
add
fisttpl
add
xchg
mov
pop
pop
add
push
test
add
add
add
iret
pop
stos
push
mov
adc
pop
in
ret
add
add
push
sub
dec
pop
add
mov
push
push
push
call
call
lahf
in
add
add
push
add
int3
subl
add
add
xchg
pop
cmpsb
jo
push
jl
add
lods
shr
enter
mov
stos
push
stos
jno
add
lods
add
mov
outsl
movsb
add
add
popa
add
cld
add
loopne
add
lea
pop
xor
push
lea
push
push
push
push
push
push
lea
push
push
call
in
shll
pop
add
stc
add
lret
add
scas
in
xchg
add
add
rorb
movb
add
add
add
std
add
add
ja
add
add
push
loopne
mov
push
sahf
xchg
test
movsb
add
push
add
loope
add
movsb
stc
mov
lea
pop
add
push
push
push
call
jbe
pop
add
add
arpl
add
roll
add
into
jnp
shlb
add
add
add
add
pusha
add
add
xchg
mov
int
mov
icebp
insb
popf
in
pusha
add
ja
add
fcmovnbe
add
mov
add
mov
mov
add
hlt
lock
mov
lea
pop
add
push
push
push
push
push
push
push
push
lea
push
call
add
fldln2
gs
shr
cli
sti
lret
mov
add
int
add
in
add
add
add
cmpsb
push
mov
add
in
jl
add
movsb
js
add
xchg
add
add
ja
add
add
mov
mov
jae
add
xchg
add
push
mov
add
mov
add
cmpsl
aad
cmpsl
pusha
mov
lea
pop
push
push
push
push
push
push
push
push
push
push
call
add
add
add
push
add
lock
jo
lds
sti
lds
push
pusha
addr16
cmpsl
add
pop
test
cmpsb
jno
scas
mov
add
pop
add
mov
imul
add
xchg
add
add
add
lods
mov
testl
add
leave
fsubrs
shrl
testb
mov
xor
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
cli
add
add
imul
mov
push
add
mov
mov
add
pop
test
add
add
jmp
add
mov
add
add
mov
addb
add
pop
add
je
pop
add
add
out
add
add
xchg
mov
lea
pop
add
push
rol
pop
pop
push
sub
not
pop
mov
xor
push
inc
lea
add
shr
pop
rep
mov
push
push
push
push
call
pop
lahf
loopne
add
jmp
jnp
pop
lcall
add
add
add
add
jge
scas
cmc
stos
mov
xchg
neg
add
loop
sarb
xchg
jecxz
test
add
lahf
js
add
add
xchg
push
lret
jae
jno
add
pushf
add
add
test
lods
jmp
mov
cmpsb
mov
jbe
add
pop
xor
push
push
push
push
push
push
call
add
add
cmpsl
add
add
add
add
imul
adcl
into
stos
mov
cmpsl
add
add
insb
pusha
add
loope
add
std
add
fwait
add
nop
xchg
loop
jmp
addl
add
add
add
add
int3
push
fwait
add
testb
in
add
add
add
flds
test
call
add
push
add
fcmovbe
or
add
add
xchg
pop
cwtl
mov
lea
pop
add
push
sub
pop
or
je
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
fstl
les
add
mov
call
add
add
test
mov
push
lahf
add
shrl
add
add
mov
add
add
lock
add
add
push
in
out
add
out
pop
add
add
add
mov
movsb
push
add
jecxz
lods
cmc
cld
test
ljmp
sarb
mov
mov
lea
pop
mov
push
push
push
push
push
push
call
aad
xchg
lds
icebp
add
imul
fildl
add
push
stc
insb
fnsave
out
push
add
test
outsl
jmp
add
jmp
add
add
roll
add
insb
faddl
aad
add
add
pop
push
bound
bound
add
test
arpl
xor
push
push
push
push
call
sti
add
mov
add
rolb
add
add
push
mov
add
fistl
hlt
add
add
xchg
add
aad
add
into
fadds
mov
fbstp
add
add
xchg
call
xchg
test
pop
add
repnz
add
lcall
add
pop
add
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
andb
xchg
lods
add
repnz
insb
add
cwtl
add
shll
rclb
add
jo
mov
add
ret
mov
jl
add
add
sarb
add
mov
add
vhaddps
test
add
pop
loop
hlt
outsl
add
insb
lods
mov
add
pop
mov
push
push
push
push
push
lea
push
lea
push
push
call
add
add
mov
add
add
add
xchg
jmp
lahf
add
lea
add
add
in
testb
mull
add
add
repnz
out
rcrb
lods
fdivs
jno
add
loope
icebp
addr16
lds
movsb
add
jmp
cli
in
add
fiaddl
mov
jns
sahf
add
add
ja
add
push
imul
cwtl
mov
push
test
add
mov
lea
pop
xor
push
lea
push
push
call
mov
add
add
cmpsl
cmpl
add
add
add
add
add
add
add
add
faddl
add
mov
stos
lods
fs
cli
xchg
les
add
lret
add
int
stos
add
aad
pop
repnz
cmc
out
out
in
cmpsl
mov
add
add
or
add
push
push
lea
push
push
push
call
cld
clc
xchg
out
jl
jbe
add
jb
pusha
add
mov
jno
add
jb
add
jae
jb
jbe
out
add
lods
add
jne
xchg
lahf
add
repnz
mov
xchg
add
xchg
push
xchg
andb
popa
add
fwait
add
add
pusha
adc
add
push
add
pop
add
push
push
add
sub
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
jmp
notb
jo
add
stos
add
jle
int3
in
push
cld
loopne
add
add
add
out
in
add
pop
pusha
add
add
call
into
push
mov
add
mov
sahf
add
add
lret
add
add
add
cmpsl
pusha
bound
add
and
xor
push
push
push
push
push
lea
push
push
push
call
into
add
outsl
jge
mov
xchg
add
cwtl
mov
pop
iret
sahf
cwtl
add
xchg
add
add
add
lahf
fiadds
add
clc
add
add
add
add
lea
out
add
add
aad
mov
sahf
add
add
mov
mov
add
pop
imul
add
add
add
mov
lea
pop
add
add
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
add
pop
mov
add
mov
movsb
loopw
jns
mov
add
mov
mov
mov
idiv
add
add
add
imul
cltd
add
add
xchg
xchg
pop
icebp
add
cmc
add
add
add
add
add
lea
pop
pop
rep
push
not
rol
xor
pop
mov
xor
push
shr
shl
pop
or
je
push
add
sub
pop
mov
add
push
lea
push
call
xchg
movl
mov
add
nop
jbe
jp
mov
jmp
add
out
add
jp
bnd
rolb
hlt
in
push
jmp
mov
add
xchg
push
fistpl
out
add
mov
in
push
pop
add
add
in
out
add
xchg
stc
mov
add
add
jae
lods
add
add
or
movb
add
push
push
call
out
add
jbe
in
mov
add
mov
pop
icebp
add
add
add
mov
push
fistps
imul
add
add
js
sti
out
pop
rolb
and
push
sahf
mov
lods
add
add
add
add
mov
add
add
into
pop
roll
add
in
pop
add
pop
jo
add
idivl
mov
lea
pop
rep
pop
push
push
sub
shl
dec
push
xor
add
inc
sub
dec
rol
xor
sub
pop
pop
push
push
push
push
push
lea
push
call
xlat
addl
add
add
rcrb
lds
add
add
jne
add
test
mov
movb
jb
add
lret
add
cmpsb
add
jo
mov
add
add
enter
test
push
mov
rolb
filds
nop
add
addr16
add
arpl
pop
pop
mov
mov
push
push
push
push
push
push
call
mov
xchg
mov
mov
ret
shll
xlat
lds
imul
add
jp
add
add
add
out
movsb
stc
jns
add
add
push
xchg
add
std
add
add
add
jge
hlt
incb
jo
add
rolb
add
iret
mov
push
jb
add
add
out
jp
fisttpll
pop
mov
push
push
push
lea
push
push
call
push
add
mov
rcl
add
add
mov
add
xchg
jno
fcmovnb
flds
jo
mov
xchg
fldl
add
cld
into
repnz
add
icebp
rolb
mov
add
add
rcrl
mov
pop
jmp
int
jge
loopne
aam
add
add
rolb
pushf
jp
notb
mov
push
mov
adc
jmp
push
lea
push
lea
push
push
lea
push
push
call
int3
add
sahf
mov
add
jns
pop
mov
lret
add
bound
add
test
cmc
add
out
je
bound
add
push
jne
add
add
addl
mov
shlb
movsl
arpl
mov
add
shll
add
push
sbbl
sbb
push
push
push
push
lea
push
lea
push
call
mov
mov
add
pushf
lods
mov
insb
jae
loope
jno
std
fnstenv
add
in
jo
in
push
mov
std
loope
aam
out
roll
xchg
add
add
add
jo
pop
jne
pushf
fwait
hlt
fistps
movl
add
gs
xchg
fsubp
add
add
add
test
int
loop
cld
lea
pop
mov
push
dec
add
pop
add
push
push
push
pop
push
push
mov
push
push
push
push
push
push
lea
push
push
push
call
addl
add
fistl
add
out
pop
call
shlb
pop
in
enter
mov
add
popf
cwtl
mov
addr16
fldcw
jne
test
out
int
nop
mov
imul
add
addl
add
add
fsts
xlat
pop
mov
addr16
pop
push
lea
push
push
push
call
jmp
insb
mov
shlb
aad
mov
leave
add
add
add
pop
pop
add
add
xchg
mov
push
add
add
add
leave
add
add
add
push
nop
aad
add
xchg
jge
add
add
fwait
xchg
ret
lea
jnp
jns
pop
in
scas
stos
cmpsb
repnz
mov
lea
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
into
add
push
jo
mov
iret
xchg
add
cmpsb
lret
add
jmp
add
fxch
stos
add
pop
fiadds
cmpsl
sbb
add
pop
add
icebp
push
lds
jecxz
addl
insb
mov
add
pop
xchg
out
rcr
loop
clc
add
out
add
add
add
repnz
xchg
pop
add
add
add
cmc
out
sarb
jo
push
popf
mov
lea
pop
pop
pop
leave
push
dec
not
pop
ret
push
add
pop
push
mov
push
pop
add
push
push
push
rol
shl
shr
dec
pop
push
push
dec
add
add
pop
push
push
sub
xor
pop
movl
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
jle
add
lods
test
xchg
jp
lahf
add
add
add
add
fmul
add
add
jp
add
xchg
mov
rcl
cmc
enter
add
xchg
push
sti
pop
mov
cmpsl
into
mov
add
pop
add
lret
testl
push
out
jmp
ja
mov
add
pop
faddl
add
add
mov
lea
pop
addl
test
je
mov
push
push
push
call
flds
arpl
add
xchg
add
leave
jno
add
add
mov
push
pop
pusha
stos
add
pop
fwait
add
mov
stos
add
mov
jne
sarb
repnz
out
push
xlat
movl
add
add
push
add
push
add
in
add
pop
add
add
mov
lea
pop
pop
push
sub
shl
dec
shr
pop
pop
pop
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
out
mov
in
add
mov
ret
loop
enter
push
sahf
pop
add
xchg
lret
aad
scas
add
out
mov
clc
popl
xchg
cmpsb
add
add
add
add
jmp
cmpsl
mov
jmp
cwtl
ret
jae
add
popa
mov
add
add
pusha
leave
jp
fmull
ret
push
push
push
push
lea
push
push
call
add
add
add
iret
add
or
loopne
rolb
negb
push
add
lahf
test
fiadds
xchg
popa
clc
retw
aad
jecxz
addb
addr16
imul
pusha
mov
add
add
add
popa
call
jno
add
xchg
xchg
mov
add
mov
add
mov
mov
loope
stos
add
jne
mov
lea
pop
mov
push
add
pop
add
push
push
push
push
push
push
push
push
call
add
add
mov
out
cwtl
mov
push
add
in
add
jbe
lods
push
add
add
add
out
std
lcall
jl
push
mov
into
bound
jle
add
add
add
cli
into
jns
add
jmp
add
addr16
add
add
sahf
add
mov
lea
pop
push
push
lea
pop
push
push
push
push
dec
lea
shr
pop
testl
push
pop
addl
push
dec
sub
add
pop
push
push
dec
pop
call
push
lea
push
push
push
push
push
lea
push
call
lahf
add
addr16
push
test
faddl
push
fadd
jmp
add
push
rclb
add
add
add
jne
add
in
bound
popf
add
in
fwait
roll
jne
enter
into
add
mov
int
fsts
jns
jp
add
jo
add
mov
cmpsl
je
add
add
add
js
xchg
add
sbb
mov
push
push
push
push
call
add
add
pop
call
in
add
add
scas
add
arpl
push
add
fdivrl
mov
enter
lods
ret
add
add
out
add
jge
imul
add
add
add
add
add
stos
lcall
shlb
jmp
add
push
arpl
cwtl
bound
popf
add
xchg
pop
pushl
push
add
pop
push
push
push
push
push
push
push
lea
push
call
fcmovnb
sbb
mov
add
add
push
xchg
xchg
mov
add
out
push
sarb
pusha
enter
add
jge
add
int3
mov
enter
aad
add
cmc
add
add
add
mov
mov
mov
mov
pop
loope
add
lds
fldenv
jnp
shlb
add
iret
add
orb
pusha
add
mov
lea
pop
push
push
rol
shl
add
pop
call
cmpl
jne
push
push
push
push
push
push
lea
push
call
jle
ror
add
jns
je
hlt
mov
pop
loopne
cmc
cmpsl
add
movsl
gs
add
push
loop
add
add
mov
insb
jbe
add
add
push
add
lea
icebp
testb
test
xlat
mov
addl
jmp
add
mov
add
add
add
add
add
add
add
jmp
mov
lea
pop
pop
pop
push
pop
pop
push
lea
ror
add
pop
pop
leave
push
pop
ret
push
mov
push
push
push
push
push
push
lea
push
call
add
mov
pop
xchg
add
mov
aam
xchg
scas
xchg
faddl
add
jne
add
cwtl
add
insb
jnp
add
add
add
fistpl
mov
in
rolb
add
mov
mov
add
jo
xchg
popa
jp
add
mov
jge
mov
pop
add
add
iret
add
lret
fs
add
gs
mov
stc
add
push
mov
lea
pop
add
push
add
inc
add
pop
push
push
lea
push
call
jne
hlt
mov
pop
stos
mov
int3
test
popl
push
jle
ljmp
repnz
nop
lods
mov
mov
xchg
int3
add
add
add
test
add
mov
into
pushf
shlb
xchg
mov
add
imul
popf
roll
roll
into
fwait
add
add
idivb
arpl
push
add
mov
mov
lea
pop
push
push
push
push
lea
push
push
lea
push
call
push
js
add
imul
into
add
add
in
add
mov
mov
adcl
scas
mov
fwait
movb
add
xlat
add
mov
scas
fs
aad
add
add
push
add
add
fincstp
mov
add
add
add
stos
add
add
cld
add
loopne
add
loopne
add
push
add
add
mov
lea
pop
push
push
push
sub
rol
pop
movl
push
add
add
ror
shr
pop
push
call
push
add
shr
pop
push
push
not
lea
xor
sub
pop
call
subl
push
push
push
push
push
push
push
push
lea
push
lea
push
call
in
add
fistpl
mov
add
hlt
add
out
mov
call
add
add
add
xchg
add
push
mov
mov
xchg
test
xchg
pushf
add
push
je
add
xchg
push
mov
xchg
add
add
cltd
add
mov
lret
gs
lret
in
xlat
add
scas
add
out
add
add
enter
add
mov
lea
pop
cmpl
jne
push
xor
not
sub
pop
pop
pop
push
rol
pop
pop
push
pop
pop
leave
ret
push
add
not
add
pop
push
mov
push
lea
push
push
push
push
push
call
mov
jmp
jge
sahf
add
fwait
pop
scas
divl
add
add
add
int3
jecxz
add
movb
imul
iret
mov
enter
jp
mov
movsb
out
hlt
add
mov
iret
push
and
mov
add
pop
add
add
push
iret
std
shl
add
push
iret
faddl
neg
add
pop
add
push
shl
pop
push
push
push
push
push
call
jb
mov
add
xlat
test
add
push
addl
out
jge
add
mov
jecxz
ljmp
add
jp
out
cwtl
mov
add
cld
popf
mov
xchg
mov
jae
fnstsw
xchg
add
jno
bound
lret
clc
mov
add
js
imul
pop
push
addb
popf
mov
add
mov
lea
pop
push
push
add
not
pop
push
push
dec
ror
pop
push
mov
push
push
push
push
push
lea
push
push
call
ljmp
xchg
imul
aad
mov
ja
add
jb
mov
loop
add
lcall
mov
add
mov
aad
add
cmpsl
push
lds
pop
add
xchg
add
add
xchg
lods
mov
push
stos
add
add
xchg
add
pop
mov
add
test
add
add
xchg
mov
lea
pop
lea
sub
mov
push
push
lea
push
push
lea
push
call
mov
xchg
mov
add
loope
ljmp
add
add
add
jb
add
add
out
fidivrl
mov
jl
add
roll
sar
push
mov
add
add
mov
pop
movsl
add
mov
fs
jle
jae
test
aam
shll
mov
lea
pop
shr
add
mov
push
shr
xor
pop
mov
push
inc
rol
inc
pop
add
add
mov
push
lea
push
push
push
call
fsubr
jne
int
push
pushf
lret
fwait
add
add
mov
add
out
data16
cmc
cwtl
add
add
add
add
add
fnstsw
mov
rcr
add
add
mov
mov
cmc
add
fstpt
add
cwtl
mov
cwtl
add
mov
mov
lea
pop
mov
push
dec
not
add
pop
cmp
jne
push
lea
pop
cmp
jne
mov
push
pop
movl
jmp
mov
push
sub
pop
mov
push
not
shl
inc
pop
sub
jne
push
rol
pop
mov
movl
push
rol
sub
pop
jmp
mov
push
sub
pop
mov
cmp
jne
mov
push
push
push
push
push
push
push
push
push
push
call
loop
out
mov
add
mov
jnp
jo
xlat
pop
pusha
add
push
add
mov
push
add
shrb
add
ljmp
data16
push
je
filds
add
lret
cld
jbe
notl
stos
add
add
imul
rorb
sarl
add
leave
add
add
test
add
jle
jbe
add
test
mov
add
mov
lea
pop
movl
jmp
mov
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
add
add
mov
add
outsl
mov
stos
add
jo
aam
add
jge
add
pop
in
scas
lock
in
add
add
lock
je
add
iret
add
pop
add
test
add
jns
add
pop
and
jge
xchg
add
add
add
add
lods
lea
mov
test
add
xchg
add
xchg
not
add
lret
sbbl
and
cmpw
jne
push
sub
pop
mov
movl
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
xlat
pop
stos
call
bound
xlat
add
jle
add
xchg
add
mov
add
insb
subb
in
add
add
shl
in
jns
add
add
add
add
add
mov
out
in
add
sbb
jns
add
push
adcl
mov
mov
add
testl
mov
add
clc
mov
popa
and
jmp
pushl
pop
push
xor
lea
lea
pop
mov
mov
mov
push
push
dec
not
xor
sub
push
or
inc
add
add
add
sub
sub
sub
pop
ror
pop
push
push
push
call
mov
test
pop
add
stc
lahf
mov
test
fiaddl
filds
out
add
xchg
test
mov
add
mov
popf
hlt
add
fcoms
scas
pusha
icebp
pop
xchg
stc
add
cltd
add
data16
mov
addb
jne
cwtl
add
add
xchg
mov
or
push
call
push
push
lea
push
push
push
push
push
push
call
add
add
push
mov
js
fldl
add
lods
add
fstpl
rorb
lods
push
jle
jge
nop
jecxz
jmp
mov
xchg
xlat
fldl
mov
fidivrs
pushf
in
add
pop
xchg
out
mov
add
in
xchg
cmp
in
fwait
push
mov
mov
lea
pop
cmpl
je
push
push
dec
dec
push
and
add
sub
sub
sub
ror
pop
sub
pop
push
push
push
call
lea
loop
pop
add
jle
loop
push
pop
fwait
jecxz
add
push
add
out
out
jge
ja
in
add
mov
mov
jbe
fiadds
pop
mov
mov
add
stc
mov
mov
sahf
add
std
scas
pop
mov
out
addr16
mov
aam
add
xchg
lods
stos
add
add
insb
push
add
aam
js
testl
or
into
xor
add
fldz
ret
mov
dec
stc
xchg
imul
add
sub
shl
not
dec
sub
lea
sub
pop
not
shl
pop
push
add
pop
push
push
xor
pop
call
push
shl
shl
pop
cmpl
je
push
push
lea
shl
dec
shl
push
or
inc
add
not
rol
sub
shr
pop
shl
sub
ror
pop
push
push
lea
push
push
lea
push
lea
push
call
pop
adcb
add
push
add
add
pop
test
test
jmp
rolb
add
stos
pop
mov
roll
add
lret
pop
xchg
incb
loopne
cmpsl
mov
add
sahf
add
mov
stos
add
pusha
add
add
fdivp
add
mov
push
shrb
fs
cltd
jo
enter
add
push
add
pop
push
call
cmpl
je
push
push
shl
dec
sub
push
push
pop
add
dec
shl
dec
sub
sub
xor
lea
pop
lea
pop
push
lea
push
push
push
lea
push
call
lret
add
add
add
stos
add
add
cld
pushf
fisttpl
add
add
xchg
jge
rolb
add
push
add
mov
jp
add
push
xchg
add
push
add
add
add
cmp
cli
test
add
sarb
xchg
sarb
mov
lea
pop
push
call
push
add
ror
rol
pop
cmpl
je
push
push
shl
ror
dec
add
push
or
inc
add
add
ror
sub
pop
shr
rol
xor
pop
push
shl
pop
push
push
push
push
push
push
push
lea
push
call
lcall
add
roll
iret
mov
add
push
mov
add
stos
addl
leave
xchg
mov
aad
add
add
add
mov
add
mov
add
stc
je
add
add
addr16
aad
test
pop
lret
add
add
mov
add
repnz
add
icebp
insb
in
fs
pusha
sbb
call
cmpl
je
push
push
dec
add
ror
rol
push
or
not
add
add
sub
shr
shl
xor
pop
lea
xor
pop
push
ror
add
pop
push
call
push
lea
push
push
call
outsl
add
add
ret
add
push
add
out
in
aad
lret
push
clc
test
add
fistpll
out
shlb
mov
add
cli
add
add
add
mov
add
into
add
jne
add
fildl
add
jl
fwait
jmp
add
ja
in
mov
pop
add
pop
cmpsb
pop
xchg
mov
lea
pop
cmpl
je
push
push
shr
sub
rol
push
push
pop
add
sub
shl
sub
add
dec
pop
rol
pop
push
shl
shr
pop
push
call
push
push
push
push
lea
push
push
call
xchg
add
xchg
cltd
add
add
mov
mov
mov
add
add
mov
loopne
lea
add
in
jne
add
enter
mov
out
lods
add
add
add
add
push
add
incb
incb
push
popf
orb
cmpl
je
push
push
add
push
or
inc
add
shr
shr
add
sub
inc
lea
not
pop
shr
sub
shr
inc
pop
push
push
push
push
push
push
push
call
jecxz
js
add
cli
add
add
mov
jnp
stos
fwait
cmpsl
scas
mov
mov
leave
int3
add
int3
xchg
mov
add
mov
filds
cli
lock
loope
add
nop
jne
mov
out
add
add
add
add
add
xchg
int
mov
lea
pop
push
push
push
lea
push
push
push
push
call
add
add
jns
mov
push
cmc
jb
pop
push
enter
jo
flds
jne
add
add
mov
add
sbbl
add
ljmp
mov
aad
add
rcl
loope
std
add
mov
add
filds
lret
lds
pop
lods
add
data16
mov
add
cli
popf
mov
lea
pop
call
push
sub
pop
cmpl
je
push
push
shr
push
sub
add
shl
sub
shl
inc
inc
rol
pop
not
not
lea
pop
push
sub
pop
push
push
add
xor
pop
call
push
push
push
push
push
push
push
call
add
scas
fildl
mov
jp
add
sti
add
add
repnz
xchg
xlat
out
cmpl
add
mov
loopne
out
mov
lahf
jno
pop
add
call
int
ret
in
fwait
out
add
movb
popa
out
add
mov
lcall
add
testl
lea
pop
cmpl
je
push
push
sub
rol
shr
push
sub
add
lea
sub
pop
shl
add
pop
push
push
push
push
push
push
push
call
add
in
mov
xorl
add
int3
out
add
add
jnp
mov
cmpsb
test
pop
add
in
mov
add
loope
add
fcmovnbe
roll
add
xchg
mov
out
rcl
cmpsb
add
notb
xlat
mov
int
test
jo
mov
lea
pop
call
cmpl
je
push
push
sub
xor
lea
push
push
pop
add
inc
sub
not
add
lea
shl
pop
add
shr
pop
push
push
push
push
push
push
push
push
push
call
add
add
out
push
add
add
add
add
hlt
add
push
out
add
les
add
add
std
fnstsw
test
bound
xchg
mulb
mov
add
stc
xchg
pop
xchg
movb
cwtl
push
mov
imul
rcrl
add
add
xchg
cmpsb
mov
jecxz
cmpsb
pop
add
lds
fimull
pop
push
call
push
shl
sub
dec
pop
cmpl
je
push
push
xor
push
xor
add
inc
sub
add
inc
dec
pop
add
xor
inc
pop
push
push
lea
push
lea
push
push
push
push
push
call
add
xchg
test
mov
add
add
jl
add
xchg
add
mov
in
add
pop
add
sarl
add
add
fwait
aam
stos
add
add
add
mov
add
xchg
xchg
mov
imull
arpl
clc
mov
add
pop
push
push
push
push
push
push
push
push
call
add
xchg
mov
jmp
nop
mov
fwait
out
jmp
add
nop
push
jae
insb
add
add
push
loope
add
add
icebp
pop
add
add
add
add
add
mov
popl
movsb
mov
fs
mov
hlt
mov
xchg
add
jo
pop
add
add
rorl
add
mov
lea
pop
call
cmpl
jne
push
shl
inc
ror
add
pop
mov
movl
push
lea
push
call
push
sti
int
out
pop
lds
filds
in
pushf
mov
pop
fldl
fmul
add
ja
std
sarl
add
add
jne
add
add
add
add
add
testl
std
add
add
add
add
add
xchg
add
ret
lea
pop
jmp
push
not
pop
xor
push
dec
pop
pop
pop
push
push
lea
push
call
int
scas
mov
add
push
jmp
int
xchg
add
shl
add
push
mov
in
sbb
add
arpl
mov
jp
push
pop
add
movsl
popa
movsb
test
enter
jge
adcl
roll
add
fcomps
sahf
add
add
in
pop
scas
mov
pop
fwait
mov
xchg
add
pop
pop
push
push
lea
push
push
lea
push
call
lods
add
add
add
divb
mov
pop
int
in
mov
iret
add
push
add
mov
xchg
fldenv
add
push
fdivs
add
mov
add
add
add
xchg
add
push
ljmp
add
xchg
jb
add
add
add
jp
mov
lea
pop
pop
leave
push
rol
pop
ret
push
push
add
lea
pop
mov
push
push
push
push
lea
push
call
fcmovnbe
add
mul
add
call
jo
stc
add
outsl
lahf
test
out
add
out
stc
lods
xchg
mov
add
out
rcr
pop
in
pop
fstps
add
cmpsb
xchg
add
add
mov
outsl
add
push
jo
add
mov
pop
fadds
push
jecxz
into
add
mov
mov
ljmp
push
movsl
cltd
test
pop
add
push
push
push
call
lret
add
loopne
add
add
add
lds
fimull
jno
mov
rol
add
add
add
mov
mov
adcb
imul
add
add
xchg
add
std
jle
add
cmpsl
fildll
mov
add
jb
out
xchg
shll
scas
insb
fsubrp
add
pop
cmpl
jne
push
push
dec
push
or
not
add
not
shr
sub
add
pop
not
add
pop
push
xor
not
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
call
add
add
in
rcll
loopne
push
pop
pushf
out
add
clc
mov
add
mov
fwait
add
addb
mov
mov
add
mov
lea
add
push
lods
add
add
jno
imul
xchg
mov
jmp
outsl
add
add
mov
lea
pop
call
push
not
pop
push
push
push
lea
push
push
lea
push
push
call
add
add
add
fisubrl
outsl
xchg
add
add
add
add
bound
shl
aad
lcall
add
mov
scas
xchg
addb
xchg
xchg
cltd
add
scas
repnz
add
bnd
mov
fdivr
mov
int
add
fiadds
imul
mov
pusha
sbb
shr
mov
add
cmpl
je
push
push
push
push
push
call
add
pop
add
mov
jge
push
add
add
add
out
push
call
mov
mov
jne
je
mov
lret
arpl
add
ret
lock
hlt
addr16
sarb
add
jne
push
out
jo
add
test
add
lods
add
mov
lea
pop
cmpl
jne
push
push
push
push
push
push
push
push
call
ljmp
clc
add
mov
add
jecxz
push
jb
add
jmp
repnz
loopne
add
add
addr16
test
pop
add
cmpb
mov
in
add
mov
pop
mov
cwtl
sahf
add
add
xchg
add
sarb
fidivs
popl
pop
add
addl
add
mov
lea
pop
leave
add
push
push
push
push
lea
push
push
push
push
push
call
lock
lea
jbe
add
add
mov
add
icebp
xchg
jmp
pusha
pop
in
add
mov
add
add
aam
add
ffree
lret
jnp
jne
mov
cld
out
add
jnp
add
add
int3
add
add
lret
loope
add
add
shrb
pop
jns
add
lock
mov
mov
add
pop
pop
pop
pop
push
add
not
pop
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
add
icebp
into
popl
xorb
add
push
add
add
stos
cld
add
fiadds
add
xchg
add
add
add
out
insb
add
test
add
add
jns
lret
scas
add
jle
test
sti
add
add
add
mov
icebp
add
mov
lea
pop
leave
add
ret
push
lea
add
pop
jmp
cmpl
jne
push
push
dec
ror
shr
push
push
pop
add
sub
rol
sub
xor
add
add
sub
pop
pop
push
lea
push
lea
push
call
clc
add
subb
add
jge
add
roll
add
fwait
push
add
add
addr16
add
push
jge
mov
add
call
add
clc
add
test
add
popa
int
add
lret
lods
add
sti
add
add
lea
pop
pushl
call
push
push
shl
lea
pop
call
push
lea
push
push
push
push
call
cmpsb
add
push
nop
add
add
add
jb
jne
add
xchg
mov
popf
pop
rolb
mov
aad
mov
add
push
call
add
nop
jo
out
add
xchg
add
aad
mov
pop
add
add
push
xlat
mov
test
add
scas
add
enter
lcall
mov
lea
pop
jmp
push
shl
rol
ror
pop
cmpl
jne
push
push
push
lea
push
push
call
fstp
mov
int
mov
pop
popa
popf
mov
js
pop
loopne
jne
pop
add
add
stos
mov
mov
mov
lods
add
test
add
roll
add
adcb
add
mov
add
insb
add
xchg
mov
add
add
imul
add
add
add
sarl
les
add
add
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
rolb
mov
pushf
pop
add
icebp
imul
nop
xchg
movsl
int
roll
jnp
fcomps
add
mull
loop
fiaddl
add
scas
xchg
test
add
mov
addr16
cltd
andl
lods
scas
add
cltd
add
sahf
xchg
mov
mov
pushf
mov
ja
lahf
mov
lea
pop
mov
push
push
push
dec
ror
push
or
not
add
add
add
sub
sub
shl
dec
rol
pop
xor
ror
inc
add
pop
push
push
push
lea
push
call
stos
add
push
push
clc
add
add
add
add
add
add
jle
add
call
add
add
add
jge
add
add
cmpsb
add
jnp
add
mov
mov
add
mov
ja
add
mov
add
add
jno
popf
add
out
outsl
js
int3
lea
pop
pushl
push
push
push
push
call
add
jbe
int
jmp
fucom
fxch
ret
mov
add
add
out
add
cmc
pop
add
add
clc
mov
test
jae
sahf
push
nop
add
add
mov
mov
jmp
add
iret
je
add
jp
lret
nop
out
add
add
pop
call
call
push
push
push
and
add
sub
shl
pop
sub
shr
shr
pop
push
not
xor
pop
pushl
call
call
push
push
shr
add
add
push
xor
add
xor
inc
shr
sub
xor
pop
inc
pop
push
add
shl
dec
pop
pushl
push
push
lea
push
lea
push
lea
push
push
push
push
call
loop
pop
lock
add
mov
add
ljmp
leave
jge
xorb
add
add
add
mov
add
jnp
add
shr
add
arpl
je
add
leave
add
mov
add
jns
add
icebp
into
add
call
popa
jbe
push
xchg
add
add
sar
mov
lea
pop
call
push
push
push
call
pusha
xchg
test
mov
add
add
add
add
rolb
aad
hlt
add
fbld
add
sub
jbe
fildl
mov
add
add
jp
std
shl
fdivrs
shr
cli
pop
iret
add
fwait
int
cwtl
mov
xchg
lock
lds
add
mov
or
call
push
push
sub
shr
dec
push
and
add
not
ror
sub
sub
pop
lea
not
pop
push
push
dec
push
sub
add
not
xor
sub
add
pop
add
add
inc
add
pop
push
sub
inc
add
add
pop
call
pop
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
ljmp
fiadds
pop
test
ljmp
mov
add
outsl
add
push
add
jmp
enter
jecxz
mov
subl
fsub
lret
int
cli
rcr
add
add
add
add
add
into
xchg
mov
bound
popa
lea
jnp
movsl
fmulp
pop
mov
pusha
sub
jne
call
push
inc
add
rol
pop
jmp
push
add
dec
shl
pop
call
push
push
shl
lea
push
or
inc
add
ror
sub
ror
add
dec
add
pop
add
add
add
pop
pushl
push
rol
sub
add
pop
call
push
lea
push
push
push
call
add
mov
add
loopne
jl
xchg
add
aad
nop
faddp
add
lds
pop
aam
add
add
test
jmp
mov
testb
add
xchg
cltd
xchg
add
add
add
add
test
add
add
add
data16
mov
into
add
add
out
in
add
pop
push
push
lea
push
call
loop
incb
pop
add
loopne
in
xchg
add
rolb
cltd
sar
lret
mov
pop
ljmp
jne
fcmovne
scas
jno
add
les
ljmp
cwtl
add
pop
mov
add
in
jnp
add
mov
jl
add
pusha
mov
mov
add
mov
add
add
add
add
pushf
mov
mov
lea
pop
call
mov
lea
push
push
xor
inc
shr
inc
push
sub
add
sub
sub
shl
xor
pop
dec
pop
push
shl
inc
pop
pushl
push
add
pop
call
push
lea
push
push
lea
push
call
add
fcoms
add
add
mov
js
push
add
mov
js
mov
add
add
mov
mov
stc
add
add
pop
cltd
add
subb
add
add
js
stos
add
add
push
add
mov
lret
shl
jmp
add
testl
inc
pop
call
push
push
rol
add
push
or
inc
add
sub
add
sub
pop
rol
shr
pop
push
add
shl
dec
pop
pushl
push
rol
dec
dec
pop
call
push
push
push
call
add
add
push
cmpb
mov
mov
scas
mov
add
sti
mov
mov
mov
movsl
add
add
add
add
pusha
mov
add
push
add
jo
test
add
scas
add
add
mov
lret
imul
test
lock
mov
add
bound
pop
iret
mov
lea
pop
call
mov
push
sub
inc
pop
lea
push
push
dec
shl
push
or
not
add
add
sub
pop
sub
shr
pop
push
rol
pop
pushl
call
push
push
push
push
lea
push
lea
push
lea
push
call
add
popl
add
add
cmpsb
add
add
mov
lahf
jge
add
out
aam
add
sahf
jbe
mov
test
xchg
add
add
pusha
lds
addb
add
push
jae
add
andl
push
mov
add
add
ret
out
lret
jnp
add
add
lret
cmc
push
add
jecxz
mov
lea
pop
lea
push
add
dec
pop
push
push
push
push
push
push
call
push
out
add
imul
add
fsubl
push
les
cmpsl
roll
roll
out
jle
lods
add
mov
jns
mov
pop
add
mov
add
rol
push
test
add
add
in
fidivl
mov
xchg
add
add
call
mov
sahf
sti
add
xor
add
les
jne
push
push
not
push
or
inc
add
xor
sub
shr
pop
ror
pop
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
incb
mov
xchg
xchg
icebp
jp
jns
repnz
push
add
iret
imul
add
push
in
add
mov
lds
add
push
fs
mov
push
add
mov
add
add
pop
stos
js
xchg
jp
add
jge
jecxz
push
add
fadds
arpl
pop
movsl
push
fildl
adcb
sub
push
add
dec
dec
pop
call
push
push
lea
shl
xor
rol
push
and
add
add
sub
rol
not
pop
add
pop
push
lea
push
call
add
add
movsl
xchg
add
shrl
fwait
addr16
add
add
test
ret
arpl
xchg
add
mov
xchg
rorb
xlat
mov
add
jge
out
jmp
add
jge
add
add
rcrl
out
mov
add
add
popa
xchg
add
mov
lea
pop
pushl
call
push
push
lea
push
lea
push
call
mov
out
flds
add
pop
in
add
arpl
mov
shlb
fsubrs
add
pop
mov
jecxz
fwait
jmp
xchg
int
pop
mov
add
add
leave
add
add
sarb
out
push
fadds
xchg
add
cltd
rol
mov
add
add
add
add
ret
add
xchg
rcrl
repnz
pushf
add
cmpsl
cltd
jnp
fmull
shrb
les
push
and
add
dec
not
dec
sub
sub
add
not
pop
add
shl
not
sub
pop
push
sub
pop
pushl
call
push
lea
push
push
push
push
lea
push
lea
push
push
call
cmpsb
push
add
add
push
add
jp
add
stos
push
add
add
cwtl
mov
aam
add
add
add
fstl
test
add
stc
add
mov
lea
outsl
mov
add
test
pop
pusha
add
imul
xchg
sarb
cmc
lds
add
add
mov
mov
lea
pop
call
push
push
push
push
push
push
push
lea
push
push
call
add
xchg
jae
cli
xchg
push
repnz
jle
add
mov
add
arpl
add
xchg
jae
sti
add
lock
mov
add
jno
add
mov
add
hlt
add
mov
lret
rolb
jb
in
xchg
add
test
mov
jns
add
mov
mov
lea
pop
jmp
pushl
push
push
call
mov
push
mov
out
add
add
add
ret
mov
add
fcmovne
push
movsb
add
add
insb
add
addr16
add
mov
test
add
mov
lahf
jecxz
jnp
icebp
lret
jp
out
add
out
add
push
fs
add
in
call
fisubs
insb
add
out
mov
stc
repnz
int
add
add
push
push
scas
lret
xchg
fisubl
hlt
lea
pop
mov
jmp
push
push
add
ror
push
xor
add
sub
ror
rol
sub
sub
sub
pop
inc
dec
rol
pop
push
push
call
add
add
sarl
js
aam
add
pushf
add
add
add
add
pusha
add
rcrl
imul
add
add
add
add
mov
add
add
lods
add
add
jle
add
add
add
fcomip
fldl
jae
test
mov
push
add
add
enter
jle
add
jnp
test
hlt
lea
pop
pushl
push
not
dec
add
pop
call
push
push
lea
push
call
loop
popf
xchg
mov
test
add
in
add
popa
push
cmpl
push
mov
pop
in
add
add
jae
add
add
mov
add
rorb
jno
imul
pop
push
stos
scas
add
mov
add
pop
sarl
add
jb
mov
add
pop
add
addl
arpl
push
push
shr
add
dec
shl
pop
call
push
push
lea
sub
push
sub
add
dec
not
sub
xor
not
sub
sub
pop
inc
pop
pushl
push
not
shr
pop
call
push
shl
ror
inc
add
pop
push
call
leave
push
push
push
push
push
push
call
add
add
add
add
add
add
mov
in
add
add
scas
lret
add
addl
mov
fcoml
add
lods
add
int
mov
loope
ljmp
stos
add
add
push
outsl
mov
lea
pop
add
pop
pop
push
push
lea
push
call
mov
mov
add
cmc
shlb
lds
cwtl
fiaddl
mov
add
mov
cltd
repnz
add
je
int
ret
out
add
sub
loope
out
movb
mov
loope
mov
shll
aad
movsl
scas
fwait
into
add
add
add
loop
add
add
add
mov
lea
pop
pop
push
sub
inc
sub
pop
pop
push
push
lea
push
call
mov
add
add
mov
leave
cli
cmpsl
add
add
add
popf
outsl
add
xchg
add
subl
ljmp
loope
mov
enter
mov
movsb
pop
add
add
add
add
add
mov
add
enter
rorl
cmc
cli
shr
mov
lea
pop
leave
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
test
imul
jge
hlt
add
jmp
flds
loope
scas
in
add
gs
gs
mov
fadd
fucomi
lahf
gs
popa
adcb
fiaddl
add
out
add
mov
js
ja
lret
fcom
push
incb
add
add
mov
lea
pop
add
ret
push
lea
push
push
call
add
in
jle
add
add
add
add
in
pop
add
pop
xchg
mov
add
in
add
add
je
mov
add
stos
mov
add
add
push
jecxz
add
lcall
add
add
cltd
mov
xchg
mov
lea
pop
leave
push
push
push
push
push
push
push
push
push
push
call
pop
add
add
int3
add
add
imul
fucomip
jmp
mov
mov
fwait
lea
sarb
pushf
fists
addb
add
ret
add
vpmacsdql
add
aad
jp
mov
iret
add
add
int
xchg
add
add
fcoml
fiadds
addl
mov
fmull
or
push
push
sub
ror
shl
inc
pop
mov
push
push
push
call
shll
ljmp
cwtl
mov
notb
mov
push
xchg
lret
add
jns
jo
testl
jp
add
cmpsl
fiaddl
mov
mov
mov
pop
cmpsl
mov
add
add
data16
sti
lret
mov
int3
arpl
addr16
add
mov
add
iret
pop
mov
lea
pop
cmpl
jne
push
push
push
push
lea
push
push
push
push
push
call
leave
in
imul
addb
lods
sti
addb
add
add
push
rolb
ljmpw
mov
repnz
iret
add
push
add
fistpll
data16
mov
add
pusha
add
in
std
repnz
enterw
add
mov
add
jge
xchg
add
add
call
add
mov
jno
and
mov
jmp
mov
push
push
push
call
add
lods
sarl
xchg
xchg
add
js
lcall
pop
add
add
add
add
pop
cmpsb
add
push
add
add
jp
incb
jns
in
jbe
add
add
add
add
mov
push
in
mov
mov
add
add
push
add
clc
add
data16
mov
lea
pop
and
xor
xor
push
sub
xor
pop
add
xor
push
not
pop
dec
push
shr
sub
pop
sub
jmp
push
push
push
push
call
add
xchg
jge
add
in
fiaddl
jecxz
pop
add
push
out
push
add
popf
add
xchg
add
add
add
add
add
imul
add
cli
ja
lahf
jle
add
aad
pop
pop
into
int3
mov
add
add
jns
test
xchg
add
imul
add
pop
popf
add
bound
pop
sub
pushl
push
push
lea
push
call
pop
add
out
jno
les
movb
loopne
push
add
mov
mov
add
mov
rolb
addl
mov
add
aad
pop
out
push
add
mov
jmp
add
bound
add
clc
pushf
add
add
mov
test
mov
imul
jmp
cmp
jne
push
push
push
lea
push
lea
push
lea
push
push
push
call
ja
mov
jge
push
in
cmc
mov
add
roll
stos
mov
pushf
add
cli
push
int3
cmpsl
add
mov
addb
add
pop
mov
filds
imul
roll
cmpsb
push
faddl
cwtl
push
jecxz
add
lods
cmc
insb
add
add
add
js
ljmp
cld
lea
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
lds
jecxz
lods
add
add
add
add
mov
jb
ja
add
push
lock
jae
movb
jae
mov
add
mov
add
fsts
jecxz
add
rolb
rcl
add
mov
lea
pop
lea
sub
push
push
lea
push
lea
push
call
add
imul
add
in
add
lcall
nop
add
jne
mov
mov
add
adcb
pop
push
add
mov
add
add
add
add
add
faddl
push
push
iret
pop
add
pop
jns
jno
popa
enter
mov
pop
xchg
pop
add
fdivl
leave
insb
jb
imul
add
add
add
pop
mov
shr
add
push
add
add
pop
sub
push
push
push
push
push
push
lea
push
lea
push
call
fsubl
out
nop
lods
aam
idiv
fildl
fisubs
add
mov
pop
add
fstp
cmpsl
lret
add
add
orl
sarl
xchg
pushf
xchg
add
xchg
testl
add
mov
loope
test
sahf
loope
add
push
add
add
fwait
add
add
add
data16
xor
out
push
push
push
lea
push
push
lea
push
push
call
jns
loopne
loope
pop
add
jecxz
add
testb
add
cmpsl
mov
add
lods
jbe
loope
addl
lods
add
pop
mov
xchg
cwtl
push
in
flds
add
in
sti
xchg
add
out
add
add
push
ret
add
add
lods
imul
add
movsl
add
add
loop
cltd
test
add
into
mov
lea
pop
pop
push
not
lea
pop
shr
and
sub
push
ror
shl
pop
cmp
jne
push
push
push
push
push
push
push
push
push
push
call
into
mov
fiaddl
gs
add
add
add
loopne
xchg
mov
jecxz
mov
add
add
add
in
jmp
add
subb
outsl
add
add
add
loope
pusha
popa
mov
add
jecxz
fyl2x
add
add
lds
add
clc
mov
mov
lea
pop
leave
ret
push
lea
push
push
push
call
xchg
popa
roll
mov
mov
add
jnp
cltd
stos
shrb
lea
add
mov
jbe
add
js
lret
add
out
shll
sbbb
xchg
add
lock
mov
add
mov
fldl
nop
icebp
add
cmc
mov
add
add
sahf
in
lret
add
stos
mov
pusha
stc
movl
add
loop
int
mov
lea
pop
push
mov
add
push
push
push
push
push
push
push
push
push
call
mov
mov
push
add
xchg
les
addb
pop
add
xchg
jp
add
je
mov
rcl
loop
cmc
scas
add
add
add
push
add
lcall
in
addl
negb
mov
push
lods
std
loop
sti
lds
add
add
out
jge
iret
jl
xchg
add
push
popf
mov
les
push
push
push
add
lea
pop
push
push
push
add
not
not
pop
mov
lea
sub
push
push
push
lea
push
lea
push
push
push
push
push
call
add
popa
in
add
add
addb
add
ficomps
aam
les
add
add
xlat
add
add
jo
mov
push
adcl
xor
loop
add
bound
add
jmp
xchg
push
int
movb
popa
lret
sti
xchg
push
out
imul
cltd
sarb
nop
out
add
movsl
loope
add
add
out
xchg
into
mov
fisttpl
hlt
lea
pop
mov
push
lea
pop
shr
push
push
push
push
lea
push
push
push
push
push
call
nop
hlt
cmpsl
jecxz
mov
movsw
loopne
mov
add
mov
fildl
in
out
scas
add
popl
lock
add
mov
sti
add
fs
jno
add
loope
add
add
aad
sar
add
stc
rolb
faddl
lahf
cmp
mov
gs
bound
push
jl
add
jne
cbtw
test
hlt
lea
pop
add
mov
add
push
sub
ror
pop
mov
push
push
push
call
cmpsb
cld
lahf
jo
flds
lahf
jge
loop
test
stos
add
jne
pop
mov
jmp
mov
roll
add
jnp
mov
in
std
clc
test
loope
add
cmpsb
outsl
arpl
fs
rcl
lea
add
insb
mov
jb
mov
mov
gs
add
out
mov
call
movsl
mov
lea
pop
add
push
push
lea
push
lea
push
call
leave
shll
add
cli
cwtl
add
pusha
pop
add
arpl
add
mov
push
add
pop
add
icebp
add
mov
popf
test
add
add
xchg
fistl
fucom
jne
roll
add
mov
loop
xchg
mov
loopne
rcr
add
mov
stc
add
add
add
imul
adc
notb
lea
push
push
push
push
push
push
push
lea
push
call
clc
cli
lea
stc
aam
add
add
add
std
clc
add
jle
leave
pushf
add
sti
test
add
add
add
mov
int
add
add
je
out
in
add
push
leave
aad
add
aam
faddl
fstl
in
test
aad
jecxz
mov
mov
push
jo
aam
bound
pop
mov
and
call
push
push
lea
push
lea
push
push
push
lea
push
call
jmp
add
mov
add
hlt
add
push
add
mov
add
xchg
out
add
jns
add
pop
mov
std
mov
push
mov
fimuls
add
add
out
add
push
jmp
lret
push
push
push
addb
add
outsl
add
std
mov
arpl
movsl
cltd
add
sbb
add
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
ljmp
pushf
in
clc
add
jb
add
addl
add
sti
mov
cli
jl
add
add
add
lahf
add
add
mov
xchg
add
add
mov
mov
mov
popf
add
add
mov
jecxz
loope
add
jmp
push
pop
addr16
mov
lret
add
out
add
pop
cmp
je
push
push
call
leave
add
out
add
add
pop
lds
add
in
fs
mov
xchg
jge
add
jnp
jecxz
add
leave
pop
fcmovne
je
add
in
rcrl
lea
push
xchg
mov
add
rcr
lea
imul
push
fcomp
push
into
addl
pop
add
add
add
lea
pop
add
cmpl
jne
xor
push
shl
lea
pop
pop
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
into
dec
roll
loop
lahf
cld
fists
in
add
add
add
repnz
arpl
fildl
fldl
pop
add
pop
add
lret
cmpsb
movl
loope
scas
arpl
mov
in
add
lea
outsl
mov
xchg
push
lods
pop
add
add
mov
add
add
pusha
add
add
mov
lea
pop
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
cld
hlt
imul
add
jbe
add
add
cld
sbbb
xchg
add
pop
shlb
add
mov
rcr
add
add
rolb
movsb
scas
add
popf
lods
fadds
add
add
cmpsl
mov
jne
add
mov
imul
jnp
ficoml
add
add
add
movsb
stos
add
add
mov
lea
pop
pop
leave
push
push
push
call
mulb
add
mov
mov
add
mov
add
mov
pusha
add
cwtl
test
movsl
add
shl
pop
arpl
fnsave
add
push
add
faddl
add
add
add
add
addl
iret
add
cmpsl
cltd
jge
pop
add
push
mov
add
popa
add
add
mov
test
push
iret
mov
ror
in
mov
add
push
rorb
pop
ret
push
lea
push
lea
push
push
push
push
push
call
clc
add
cli
xchg
in
push
in
add
add
add
sti
shlb
mov
lret
push
hlt
add
add
bnd
pop
andb
ljmp
push
add
rolb
je
add
push
add
add
add
jmp
add
push
push
add
iret
xchg
add
add
add
pop
mov
add
push
push
add
shl
inc
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
xchg
jecxz
sahf
add
add
add
popl
out
add
fneni(8087
divb
roll
cmp
rcll
mov
hlt
in
add
add
lea
popf
add
mov
xchg
mov
imul
jecxz
mov
std
add
mov
mov
cltd
hlt
ljmp
lcall
add
iret
fldl
int3
lea
pop
pop
pop
push
rol
pop
mov
push
push
push
push
push
push
call
mov
test
mov
neg
roll
push
push
add
jmp
les
pop
mov
add
mov
fildl
add
push
rolb
call
loope
imul
loope
add
movsb
cmc
out
add
jl
add
fmulp
ja
adc
xlat
xchg
mov
cmpsl
fiadds
cwtl
add
mov
rol
add
xchg
push
jnp
fcomp
out
enter
mov
lea
pop
push
push
add
pop
call
xor
pop
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
add
cld
leave
add
add
movb
add
insb
mov
cli
add
addb
in
add
mov
icebp
add
fidivrs
rolb
add
testl
ljmp
ljmp
adc
loope
jge
fsubl
mov
add
mov
filds
nop
lock
bound
add
push
mov
arpl
add
lea
pop
pop
pop
pop
push
sub
inc
xor
pop
pop
leave
push
add
sub
pop
ret
push
push
lea
push
push
push
push
push
call
add
add
jbe
sti
hlt
shrl
lock
pop
outsl
out
add
cmc
sahf
add
out
fdiv
xchg
movb
cmpsl
add
fistl
ja
push
pop
add
in
out
scas
repnz
add
lods
xchg
add
addb
pusha
jecxz
jbe
add
jns
add
add
jno
aad
shrb
mov
add
int3
lea
pop
push
mov
add
push
lea
push
push
call
pop
loop
add
int
add
add
in
add
add
lods
out
add
mov
out
pop
add
cmpsb
add
add
add
int
add
insb
jnp
jl
mov
add
shl
add
fldt
cwtl
mov
mov
std
cli
data16
add
shrl
cltd
jle
add
push
add
fninit
add
jae
push
lea
pop
push
push
push
add
add
add
lea
pop
push
push
push
push
push
push
push
call
test
lcall
jl
hlt
std
lcall
jbe
insb
add
mov
add
xchg
subb
fdivrs
add
add
leave
xchg
loopne
add
mov
xchg
mov
add
lahf
mov
add
jle
cmpsl
add
js
stos
xchg
aam
test
add
addb
xchg
add
pusha
add
mov
lea
pop
mov
push
pop
push
push
push
push
push
push
call
test
mov
arpl
pushf
test
sub
add
add
scas
leave
add
add
xchg
pop
testl
mov
jmp
lds
mov
jb
jmp
add
add
sti
ljmp
xchg
fidivs
add
insb
jecxz
aad
rcl
mov
add
loope
pop
add
in
int
add
lea
nop
std
add
arpl
pop
lea
sub
mov
push
add
pop
shr
push
push
lea
push
push
push
push
push
push
push
call
lods
lahf
les
add
faddl
mov
in
add
stos
add
mov
add
mov
add
xchg
sti
mulb
add
ficompl
lret
add
add
lahf
add
adcl
addb
xchg
xchg
add
jge
push
cmpsl
pusha
jns
mov
lret
iret
xlat
imul
add
push
push
lea
push
lea
push
push
lea
push
push
push
call
icebp
scas
loop
mov
iret
xchg
lods
std
js
nop
call
test
add
lds
add
test
add
xchg
push
jb
sti
ljmp
add
lcall
cmpsl
fs
mov
int
add
add
popa
pop
icebp
addl
add
fs
add
in
push
mov
and
pop
js
fcos
jae
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
nop
add
clc
mov
add
add
popa
mov
shl
add
add
cltd
iret
addr16
jmp
jbe
pop
mov
loope
pop
pop
rcrl
mov
mov
add
aad
mov
add
add
mov
add
nop
push
data16
add
sti
add
jecxz
add
stc
loop
add
lea
mov
cld
pushf
xchg
out
aam
xchg
jb
jmp
add
mov
lea
pop
popl
mov
add
push
sub
not
pop
xor
push
shr
pop
lea
mov
add
push
push
push
push
push
push
push
call
lahf
add
add
mov
push
add
in
add
call
add
add
jl
add
in
xchg
jecxz
xchg
add
lret
sbbl
add
je
add
add
add
add
jle
add
in
lods
hlt
push
push
xchg
add
xchg
fs
popa
sbb
xor
call
add
push
shl
pop
nop
push
lea
push
push
lea
push
push
lea
push
push
call
pop
add
div
popf
ret
add
nop
rclb
in
mov
imul
rolb
fcmove
add
mov
pushf
add
out
cltd
push
add
add
add
sarb
cwtl
mov
outsl
add
add
stos
shrb
pusha
roll
add
out
mov
faddl
out
call
xchg
lods
ja
cmpsl
leave
push
xchg
pop
nop
cmp
je
nop
push
sub
shr
pop
nop
inc
nop
push
push
push
push
push
call
fs
add
add
add
xlat
add
loope
add
arpl
add
jge
add
add
add
aad
pop
fsubl
add
ja
test
testb
ljmp
add
in
add
cld
add
enter
xchg
jle
lret
jl
add
add
imul
testl
pop
xchg
jne
add
xchg
ja
outsl
xorb
int3
lea
pop
nop
push
inc
pop
cmp
jb
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
out
add
std
add
fcomp
add
clc
xchg
add
push
cmpsb
pop
add
add
ror
movsb
data16
pop
mov
mov
add
test
rcr
mov
push
mov
add
pop
push
add
add
add
push
icebp
mov
push
loopne
mov
lea
pop
xor
jmp
mov
push
sub
pop
add
movzwl
mov
push
lea
push
push
push
push
push
push
push
push
lea
push
call
xlat
ja
in
movsl
les
out
xchg
add
je
xchg
test
mov
jnp
testl
add
add
pushf
mov
add
int3
jns
test
popa
jecxz
lcall
mov
mov
rolb
into
movb
add
add
subl
loope
add
add
push
lock
mov
add
mov
add
pop
add
push
dec
add
pop
mov
push
shr
pop
xor
push
push
push
lea
push
lea
push
lea
push
call
push
xchg
add
call
ret
fwait
add
mov
repnz
adc
xchg
aad
filds
insb
add
int
mov
std
add
pop
popf
add
out
cmc
add
add
hlt
mov
aam
mov
add
add
in
cli
leave
mov
arpl
pop
xor
push
rol
shr
inc
pop
shl
xor
push
sub
sub
pop
shl
push
shr
shr
pop
xor
push
inc
add
pop
shl
push
lea
push
lea
push
call
add
add
mov
jl
mov
jmp
rolb
test
cld
add
icebp
scas
mov
pusha
aam
cmpsl
in
fdivrl
add
mov
add
pop
pop
fwait
adcl
repnz
loopne
add
fsubrs
mov
add
add
mov
sti
sar
add
add
sti
add
add
add
add
add
mov
cmpsl
add
mov
lea
pop
xor
push
lea
push
push
call
stc
addb
add
aam
add
sti
add
xchg
jl
mov
je
add
loope
add
lea
add
push
rclb
cld
mov
cli
jmp
add
jb
fadds
nop
add
add
lods
add
je
push
add
cmc
insb
pop
les
add
nop
add
xchg
add
jo
out
add
cld
lea
pop
mov
add
push
inc
add
pop
pop
push
push
call
arpl
leave
add
xchg
xorb
add
mov
xchg
mov
jns
add
add
scas
mov
mov
lcall
add
enter
push
add
add
ljmp
push
add
clc
mov
xlat
add
mov
add
movsl
adcb
push
jp
fildl
jp
in
clc
xchg
cmpsb
into
mov
lea
pop
pop
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
pop
add
fadds
add
pushf
mov
add
add
shll
add
add
addl
add
xchg
out
test
mov
add
push
mov
add
cwtl
cmpl
add
add
xchg
data16
jge
data16
add
add
mov
add
add
in
ljmp
pop
pop
leave
push
pop
ret
push
push
push
call
cwtl
lea
add
add
add
add
test
add
add
mov
out
add
mov
fcomps
test
add
mov
idivl
xchg
add
add
rolb
mov
repnz
mov
add
push
add
xchg
add
add
pop
add
mov
lea
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
mov
add
add
cmpsl
xchg
add
mov
pop
cli
jp
add
xchg
xchg
hlt
addb
mov
mov
push
jl
cwtl
in
int
enter
mov
add
add
add
into
add
mov
in
push
movsb
jmp
add
clc
pop
addr16
mov
ja
xchg
xchg
mov
push
cltd
xlat
push
fmull
jo
add
xlat
int
mov
lea
pop
mov
push
push
push
push
push
lea
push
push
push
call
hlt
lcall
add
add
add
lds
mov
mov
add
mov
add
add
add
push
xchg
add
add
jl
jbe
add
jle
mov
add
mov
add
stos
add
xchg
add
add
add
mov
add
cmc
add
pushf
fsubs
add
stc
push
jmp
add
mov
lea
pop
push
push
push
push
push
lea
push
push
lea
push
call
push
add
cld
add
mov
add
pop
lock
add
add
nop
jb
mov
add
jno
add
jae
int
in
icebp
cltd
add
pop
lahf
add
add
bound
stc
push
jmp
add
add
leave
nop
jl
add
add
add
add
add
cld
lea
pop
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
jne
add
xchg
in
pop
stc
add
add
jbe
fwait
add
lahf
lahf
add
xchg
add
xchg
fsubrl
add
add
mov
pop
nop
jne
enter
add
add
add
rolb
add
jo
in
lock
add
add
push
add
add
push
fiadds
add
leave
mov
lea
pop
mov
mov
push
shr
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
add
mov
in
stos
xorb
enter
add
pop
fs
enter
lcall
mov
lods
rol
mov
xchg
addb
add
add
stos
add
mov
add
add
cmpsl
add
lds
pop
call
imul
add
add
mov
add
mov
test
add
add
scas
add
add
pop
mov
lea
pop
test
je
mov
test
je
push
pop
mov
mov
push
push
push
lea
push
lea
push
push
push
push
push
push
call
movl
jbe
lods
xchg
in
add
loope
mov
mov
pop
add
out
add
add
add
testl
cmpsb
add
add
add
xchg
stos
add
mov
cmc
add
add
mov
add
mov
pop
call
jns
shlb
fnstenv
les
pop
push
push
lea
push
push
push
push
push
lea
push
call
mov
cmpsb
add
sti
add
mov
add
push
out
lcall
repnz
into
out
jl
popa
add
add
add
addl
add
mov
add
add
add
mov
mov
add
negl
push
aad
push
add
jae
mov
lea
pop
inc
push
push
lea
push
lea
push
push
push
lea
push
push
call
in
stos
mov
shrb
add
rol
cmpsb
add
add
add
add
mov
aam
nop
jno
cltd
cmpsl
leave
xchg
add
add
mov
iret
jbe
mov
in
add
out
pop
out
pop
add
add
enter
push
ret
fiadds
add
mov
lea
pop
cmp
je
test
je
mov
push
push
push
lea
push
push
push
push
call
add
add
ret
xchg
pop
add
add
data16
mov
mov
add
add
jbe
not
mov
jno
lea
mov
add
add
jmp
stos
call
mov
mov
call
add
add
jle
add
add
out
fwait
stos
add
leave
rcr
mov
lods
into
add
stos
jo
hlt
push
mov
fidivrs
lea
pop
inc
cmp
je
test
jne
push
push
lea
push
push
push
push
push
push
push
push
call
jno
add
add
add
cld
out
repnz
mov
ljmp
mov
arpl
loope
add
call
aad
add
into
hlt
add
mov
add
jl
jge
repnz
add
pop
add
fstps
xchg
pop
jo
roll
imul
out
test
push
popa
stos
add
pop
xor
pop
pop
push
push
lea
push
push
lea
push
call
mov
mov
movsl
push
sahf
pop
mov
in
add
add
add
mov
mov
jmp
popf
mov
test
add
mov
add
shll
cltd
push
add
add
lds
lret
flds
push
test
mov
fs
pop
xchg
mov
mov
lea
pop
pop
pop
leave
push
lea
push
push
call
add
in
xchg
add
lock
cmc
ficompl
int
vaddss
add
add
mov
add
jnp
rclb
mov
add
xchg
lcall
enter
mov
jecxz
add
testl
imul
mov
fmull
or
push
dec
shr
sub
pop
mov
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
movsl
add
ljmp
mov
fimuls
add
mov
add
add
mov
mov
pushf
ret
add
addr16
jl
mov
lods
jmp
mov
add
lock
pop
add
ja
lods
mov
mov
lea
pop
inc
cmp
jne
push
dec
lea
pop
lea
push
lea
pop
mov
push
inc
ror
lea
shl
pop
test
je
push
ror
ror
pop
mov
add
push
push
lea
push
call
data16
xchg
add
mov
mov
add
add
add
add
mov
cmc
js
add
add
pop
xchg
pop
roll
add
pop
add
mul
add
mov
add
add
add
iret
add
add
xchg
jmp
jge
add
add
mov
roll
mov
iret
sbbb
cltd
add
add
scas
jns
int
repnz
int3
lea
pop
cmp
jne
mov
push
sub
sub
pop
test
je
push
lea
push
push
push
push
lea
push
push
push
call
js
movsl
add
add
add
add
add
fistps
add
rcrl
mov
add
add
xchg
add
outsl
sub
push
add
add
add
cli
data16
fwait
add
ja
icebp
movsb
xlat
aad
push
add
mov
fildll
enter
add
mov
loope
add
rolb
mov
in
add
lea
pop
mov
add
cmp
je
push
ror
pop
jmp
xor
pop
push
push
call
lds
shl
mov
aam
test
xchg
stos
arpl
jnp
add
mov
mov
fadds
rcl
mov
movb
add
cmpsl
pop
rolb
jmp
add
stos
lods
add
repnz
push
imul
push
lcall
xchg
push
jbe
add
idivb
popl
ficomps
mov
add
rclb
add
pop
pop
pop
pop
push
sub
pop
leave
push
shl
xor
pop
ret
lea
push
lea
push
call
mov
jle
test
add
pop
jnp
add
in
mov
add
stos
add
iret
add
add
stos
into
add
add
add
jns
mov
jno
les
int
pop
mov
push
add
cli
add
add
fwait
stos
mov
add
mov
shll
jmp
add
in
add
fldl
mov
push
mov
lea
pop
pop
pop
pop
push
inc
pop
pop
push
shl
pop
leave
push
inc
rol
shr
pop
ret
mov
pop
push
push
call
mov
push
add
in
add
icebp
addl
add
ljmp
mov
add
lock
xchg
out
ret
add
add
add
add
add
mov
add
jb
add
fdivrp
add
add
add
andl
aam
add
add
add
andl
xchg
fisttpl
pop
pop
pop
push
sub
shl
pop
pop
push
inc
sub
pop
leave
push
push
push
call
movsl
mulb
add
mov
push
pop
mov
add
in
cli
stos
add
adcl
push
cld
add
add
add
add
scas
into
push
add
add
add
pop
jle
add
add
push
jno
aam
add
ret
mov
and
lcall
add
addr16
ret
push
xor
add
shl
pop
rol
rol
push
push
lea
push
push
push
push
push
push
lea
push
call
lds
movl
xchg
add
bound
leave
add
jle
test
sub
popl
add
jmp
add
scas
mov
push
xchg
add
jb
fcmovu
jns
rcr
pop
mov
add
jp
scas
add
mov
mov
add
add
add
push
add
mov
and
xor
inc
push
push
push
lea
push
push
push
call
pop
add
add
aam
mov
add
pop
mov
add
push
add
addl
lret
add
stc
xchg
add
add
add
cwtl
add
add
fldl
mov
mov
add
test
add
add
arpl
bound
jp
in
std
add
push
popa
mov
int3
lea
pop
cmpb
jne
push
push
push
push
push
push
push
push
call
add
add
add
pop
add
add
add
ja
mov
mov
movsb
rcrb
add
add
cmpl
mov
add
add
lods
lods
in
lds
push
add
sti
stos
add
add
jmp
ret
aam
movsb
add
add
pop
lock
add
outsl
add
movsl
jo
add
add
mov
and
mov
shll
sti
movsb
shll
sti
movsb
shll
sti
movsb
add
sti
movsb
mov
sti
movsb
xchg
mov
sti
aaa
push
mov
sti
movsb
sub
sti
lods
push
mov
add
insl
lods
push
ret
adc
pop
lret
jae
imul
repnz
mov
cmpsl
out
and
add
xorl
mov
jmp
xchg
jbe
pop
xchg
inc
jno
cwtl
insl
adc
and
out
xchg
mov
insl
mov
mov
lahf
mov
stos
dec
adc
fstpt
shlb
xchg
jge
hlt
jp
xlat
cmp
mov
arpl
push
sbb
nop
pop
aaa
add
dec
push
arpl
pop
xor
dec
pop
mov
cmp
pusha
inc
mov
sbb
push
dec
push
sbb
mov
adc
popf
lahf
pop
and
out
lret
sub
mov
ffreep
movsl
pop
cmpsl
xchg
mov
scas
imul
sbb
dec
mov
xor
test
sbb
pop
jecxz
cmp
dec
into
fsubp
or
ja
sbb
in
jnp
adc
xchg
jmp
je
test
cs
dec
mov
and
enter
sti
aam
push
bound
hlt
add
imul
mov
stos
fs
dec
push
scas
xchg
iret
jbe
frndint
sbb
aas
xchg
push
xor
fnstcw
jp
rorl
mov
dec
std
aaa
sub
hlt
and
inc
fs
or
enter
mov
scas
lds
xchg
and
sbb
sbb
orl
mov
aaa
fcoms
out
mov
mov
inc
jp
psrad
pop
cmc
in
ret
mov
fmull
dec
sbb
push
mov
loopne
push
ret
movsl
mov
in
xor
in
ror
sbb
push
ds
and
mov
test
pop
fisubrs
xchg
js
mov
mul
loope
loop
add
dec
xlat
jne
fwait
inc
sbb
es
fs
mov
and
das
iret
fs
mov
cltd
lret
idivb
dec
cltd
repnz
xchg
pop
mov
mull
je
fbstp
lds
jne
fstpl
adc
sbb
out
repz
cli
sbbl
fmul
sub
nop
mov
stos
add
repz
pop
scas
adc
xchg
les
mov
popa
dec
jecxz
jmp
cmp
je
and
adc
cltd
mov
fists
push
cmc
rclw
psllw
or
jl
aas
inc
rolb
jmp
lods
sbb
int
pop
adc
xchg
cmp
mov
out
jl
mov
and
out
outsb
sbb
loop
add
movsb
pop
sbb
lea
xor
arpl
push
adc
or
shlb
xor
notl
pusha
ret
inc
test
shrb
loopne
ficompl
cmc
cmp
outsb
xor
adc
jae
jmp
call
les
jae
nop
fwait
mov
jnp
mov
movsb
or
imulb
push
mov
push
pop
xor
repz
or
sub
xor
fdiv
cwtl
enter
insl
jl
je
inc
mov
mov
jns
mov
xchg
es
cmpsl
pop
mov
sbb
stos
push
lahf
popf
cmp
mov
sbb
mov
out
pop
inc
shr
or
mov
icebp
sub
mov
cmp
sub
movsb
movsl
and
std
repnz
push
sarb
inc
pushl
xchg
xchg
adcb
out
pusha
pop
clc
inc
sbb
pop
scas
xchg
shll
scas
cwtl
fisubrs
jmp
movsl
dec
mov
outsb
xchg
cli
cltd
sbb
aaa
or
push
cli
adc
and
push
xor
add
mov
fidivrs
movsb
mov
into
mov
adc
addb
addr16
insb
aaa
das
sbbl
jge
inc
push
fldcw
mov
ds
push
xor
or
subb
addr16
xchg
jae
iret
movsb
cmp
ror
repz
pop
leave
sbb
gs
push
mov
xchg
mov
in
jl
xchg
pop
add
cltd
lock
inc
adcl
or
inc
testl
sbb
nop
jmp
das
pop
pop
add
push
or
mov
jle
sbb
mov
fisttpll
pop
sbb
xor
cli
data16
xchg
pop
in
sbb
push
jecxz
rorb
xor
inc
pop
inc
add
pushf
xor
cs
outsb
cwtl
xor
repnz
fsubl
cmpsb
dec
mov
jne
pusha
rolb
daa
sahf
mov
cltd
cmp
add
test
jecxz
sub
sub
mov
mov
jbe
inc
cs
in
pop
mov
cld
sub
xor
ljmp
dec
cmp
in
movsb
mov
repz
pop
loopne
in
xchg
inc
mov
dec
jecxz
cmp
push
out
pop
xchg
dec
gs
dec
push
inc
addr16
pop
cmp
jl
lret
add
pop
sbb
xchg
mov
mov
mov
xor
push
or
push
pushl
test
add
cmpsb
pop
gs
push
stc
mov
adc
lods
mov
adc
shrl
clc
lds
imul
add
cmp
mov
jns
imull
lock
push
fisttpll
sub
mov
mov
sbb
sub
fnstsw
pop
aam
mov
and
pop
sbbl
mov
lcall
push
xchg
dec
jno,pt
jge
pop
test
inc
or
daa
pop
repz
fprem1
lahf
data16
popa
cltd
and
adc
cmp
data16
fstpt
in
lock
mov
and
dec
add
or
xlat
insl
mov
nop
mov
inc
insl
insl
pop
mov
shll
leave
mov
fs
and
je
fisttpl
push
rcrb
jbe
test
enter
je
mov
cmp
in
push
bound
mov
jo
ja
pop
xor
mov
cmc
test
push
mov
push
ret
orb
mov
adc
sub
push
mov
push
xor
xchg
test
pop
push
and
stos
adcb
clc
jp
adc
jle
out
or
dec
decl
fnstcw
outsb
adc
xchg
out
lahf
das
mov
mov
mov
inc
sbbb
xchg
aaa
orl
stos
jge
imul
jmp
or
xor
xchg
punpcklwd
dec
or
stos
jo
pusha
and
push
mov
push
bound
pushf
insl
fsubl
adc
sbb
lahf
and
andb
lret
or
bound
adc
dec
xor
pusha
test
popa
adc
adc
stos
mov
aam
fsubrl
mov
stos
pop
arpl
inc
test
xor
sub
scas
in
jno
dec
pusha
mov
lahf
push
notl
out
scas
mov
shlb
int
test
pusha
dec
leave
jbe
inc
dec
dec
mov
mov
cltd
ds
jns
adc
or
outsl
lret
adc
pop
jl
jo
sub
mov
aad
lock
mov
push
shrb
les
sarb
push
pop
mov
dec
cmp
mov
pop
xchg
dec
inc
popf
push
cli
les
popf
into
nop
push
ret
pop
arpl
xchg
incb
xchg
xchg
or
dec
cmp
popf
decl
dec
add
movsb
sub
shll
sub
inc
js
sbb
daa
mov
dec
mov
inc
dec
fwait
scas
and
adc
push
inc
movsb
loopne
push
call
stos
sub
out
fs
in
loop
nop
adc
cmc
dec
xor
hlt
andl
jge
jmp
adc
push
xor
jle
jne
add
push
decb
scas
in
aam
mov
shlb
bnd
sbb
push
push
push
gs
pop
sti
xor
das
ja
leave
outsb
pushf
popa
add
cltd
data16
sbb
cwtl
sub
arpl
sbb
inc
cmp
mov
mov
dec
push
sbb
mov
sub
mov
loope
pop
das
test
mov
dec
mov
pop
fistpl
sarb
xor
pop
enter
xchg
roll
sub
adc
adc
jg
and
icebp
in
into
lahf
dec
cmp
mov
cwtl
int3
loope
lods
sbb
cli
dec
sti
outsl
aas
fxch
dec
push
sbb
outsl
pop
ds
xorl
mov
inc
mov
fildl
sbb
in
pusha
gs
es
adc
adc
jle
mov
pop
cmp
imul
push
lret
inc
sub
jmp
pop
xchg
mov
lahf
pop
imul
ret
jecxz
js
orl
pop
dec
jnp
pop
dec
andl
test
jno
and
cmp
push
mov
and
fstl
out
mov
xor
faddp
xor
mov
adc
jns
dec
jnp
decb
xor
mov
int3
push
popf
mov
mov
push
rcll
mov
jne
popf
dec
jl
push
and
jge
jge
sbb
xlat
stos
jle
pop
mov
out
inc
lahf
inc
mov
xchg
shlb
cwtl
insb
jle
push
scas
ss
stos
pop
lret
mov
jo
addr16
insl
cmpl
xor
int3
imul
jmp
inc
cmpsb
mov
jle
add
jno
xchg
xor
std
pop
push
loope
repnz
rcrl
and
dec
pop
adc
cmc
pop
mov
in
xlat
int
xchg
scas
push
sbb
sub
jecxz
and
cmp
test
mov
mov
mov
adc
mov
push
mov
mulb
cmc
mov
fsubrl
mov
faddl
dec
popf
adc
std
mov
imul
call
sbb
loopne
loop
adc
je
push
lret
cmpsl
cmpb
cwtl
bound
adc
add
pop
mov
push
adc
fidivl
inc
add
pop
dec
jp
out
mov
mov
icebp
dec
fsubrl
mov
ret
fadds
or
inc
adc
cmp
inc
cli
mov
mov
test
pop
xor
sub
jl
push
je
divb
fs
ja
adc
and
cmp
addr16
sub
dec
mov
adc
inc
push
orb
scas
mov
adc
lods
lret
mov
mov
cmpsl
mov
fs
mov
fidivl
arpl
mov
push
xor
movsb
roll
push
sbb
and
xchg
mov
mov
sub
push
mov
xor
outsl
loope
xor
loope
xor
push
insl
std
outsb
sub
test
subl
add
and
sub
fsts
mov
and
push
push
mov
ret
mov
lods
int
xor
inc
pusha
sbb
insb
cmp
pop
cltd
add
push
pop
pusha
icebp
int
xchg
int
cld
push
pop
idivb
pop
jg
push
rclb
dec
mov
or
pop
aas
and
stos
mov
mov
dec
orb
lds
cmp
int
pop
ret
mov
stos
nop
push
cltd
sub
xchg
cmp
adc
loop
fidivl
test
iret
and
jae
aas
xor
xchg
dec
pop
adc
lret
out
jmp
out
and
mov
pop
test
scas
or
cmp
cmp
cmp
jmp
addr16
insb
sub
inc
inc
pop
fs
out
int
lock
outsl
ret
sti
jmp
clc
popa
xchg
daa
push
jns
adc
jmp
sub
imulb
ror
mov
rcr
mov
leave
rcrl
cltd
adc
bound
mov
cmp
and
ret
mov
fidivs
je
and
loopne
xor
xchg
mov
shll
xlat
mov
dec
pop
lret
xchg
push
stos
pop
rcl
ja
fsubl
pop
cld
dec
imul
push
imull
pushf
jl
add
xchg
mov
stos
mov
mov
enter
lods
jg
mov
push
adc
cmp
xor
loope
fdivs
add
inc
inc
das
jb
scas
dec
sbb
aas
inc
push
andps
and
pop
add
dec
stos
cmpsb
dec
mov
push
rol
mov
test
aas
out
pop
jp
lcall
jmp
xor
pushf
add
jnp
mov
fcmovu
lcall
scas
sbb
nop
mov
and
cmp
pop
inc
sbb
pushf
push
mov
lcall
lea
jge
cmpsl
ja
mov
lcall
pop
inc
xchg
enter
sub
jecxz
es
or
mov
push
negb
test
xchg
mov
sar
lock
xlat
outsb
lods
pop
icebp
sbb
fnsave
jne
or
test
lds
mov
js
sti
jge
leave
mov
sahf
adc
xor
cld
sarb
jns
int
sub
mov
mov
mov
inc
and
ret
clc
pop
in
test
out
mov
mov
cmp
loopne
xor
cmpb
xchg
mov
dec
rorl
repnz
add
rorl
jns
mov
test
into
test
mov
xorl
iret
sahf
scas
push
test
addb
inc
xor
sbb
nop
and
js
into
test
clc
add
aam
ja
sub
popa
and
add
xlat
mov
imul
dec
mov
dec
adc
ja
mov
sbb
xor
xchg
xchg
push
mov
imul
lret
mov
jg
pop
inc
aas
std
scas
leave
mov
sub
lods
fiaddl
adc
pop
mov
arpl
xlat
xor
sbb
adc
cmc
stos
dec
bound
pop
cli
sub
xchg
fstpl
stc
dec
jl
gs
aam
xchg
push
jecxz
add
icebp
sub
ret
and
adc
dec
mov
ss
dec
hlt
jle
push
xor
pop
inc
out
push
in
loop
and
mov
cmp
lods
notl
jmp
addr16
mov
jge
pop
and
addb
clc
in
fstps
negl
xchg
popl
mov
into
add
mov
jne
cmpsl
sub
mov
leave
sbb
ss
mov
leave
inc
jmp
add
movb
xchg
dec
das
pop
mov
fists
xchg
test
pusha
test
lret
nop
pop
jg
cltd
aad
cmp
xchg
popf
xor
outsl
pusha
gs
cmp
dec
or
pop
in
mov
stos
jae
xchg
dec
cli
shrb
jae
or
adc
xor
inc
mov
pop
lock
inc
mov
sahf
adc
int
lods
test
sbb
leave
xchg
test
dec
cmp
dec
subb
sbb
loopne
dec
mov
leave
xchg
fsubs
out
std
rcll
pop
fs
fimull
aam
sahf
jp
jp
sub
cld
mov
pop
arpl
mov
das
xchg
jg
xlat
mov
xchg
icebp
fnstenv
mov
ja
mov
inc
push
clc
pop
cmp
and
xor
jmp
enter
aas
pop
push
out
test
sbb
dec
rclb
inc
jl
pop
in
dec
fisttps
pop
cmpsl
lds
testb
fists
stos
imul
sub
addr16
xlat
xor
mov
daa
aas
push
cmp
arpl
fsubr
sub
fcom
mov
adc
lea
sbb
mov
pop
int
popa
jge
fmulp
mov
sbb
inc
js
xchg
and
ds
add
cmp
clc
test
xor
fisubrs
adc
cmp
push
fiaddl
push
pop
xchg
pop
inc
subl
pop
push
adc
fwait
sub
cli
adc
xor
mov
jns
inc
mov
sbb
xor
in
cmp
mull
shr
sub
in
aad
lds
pushf
pop
mov
lods
and
in
loop
addr16
and
jbe
in
push
insb
test
dec
iret
add
pop
push
mov
jne
push
xlat
pop
pop
dec
inc
xchg
or
cmpsl
enter
clc
std
push
sbb
imul
stos
popf
xchg
cmp
inc
cmp
stos
loopne
cltd
flds
pop
into
in
xchg
stos
sbb
sub
push
sahf
sub
stos
fwait
test
sub
add
push
xor
shrb
test
cmp
outsl
in
dec
mov
sub
jl
int
lcall
and
mov
push
xchg
int3
jmp
es
je
ds
rcrb
cmp
sub
mov
or
pop
in
gs
mov
imul
loopne
mov
insl
in
mov
jns
das
mov
out
mov
mov
cmp
jmp
popa
or
das
loopne
push
int
and
loop
xor
xlat
insb
cmpl
rorl
leave
stos
fisubrl
fadd
mov
pushf
sub
mov
mov
aaa
dec
xchg
jmp
jge
xor
arpl
daa
js
aas
xor
dec
insb
jo
imulb
test
cmp
mov
jg
push
sbb
arpl
pop
sahf
jp
repz
and
cltd
std
stos
daa
fsts
cltd
xchg
xor
fsubs
lods
adc
popf
je
pop
lahf
mov
cmpsl
pop
stos
jo
dec
mov
lahf
inc
std
sbb
test
pushf
out
aaa
sbb
cli
jo
in
mov
sti
jae
fmulp
fdivs
add
hlt
inc
pop
je
xor
imul
and
pop
out
adc
sub
inc
arpl
jg
push
dec
mov
rol
cmpsl
loop
xchg
pop
pop
loop
xchg
dec
jno
ds
push
xor
in
cmp
cmp
mov
xchg
dec
insb
jle
xorb
ret
pop
mov
cmp
nop
sahf
mov
pop
mov
rcl
ss
lcall
xorl
adc
mov
mov
cmp
xchg
popa
test
inc
inc
cs
or
adc
and
pushf
sub
sbb
sbb
adc
stc
xor
jnp
mov
into
stos
inc
and
rorb
in
cmp
jecxz
or
movsl
imul
ljmp
inc
dec
mov
cmpsb
cwtl
daa
aaa
mov
cs
add
push
cmp
sbb
mov
xchg
shlb
push
and
std
lods
cmpsl
loope
fucomip
xchg
cmpsl
stos
test
and
in
sahf
das
inc
sub
mov
cld
xchg
pop
lock
push
jmp
xchg
push
lock
mov
pop
jg
lret
adc
sbb
or
and
mulb
leave
in
mov
xchg
sub
pop
orb
aad
adc
fidivl
test
sub
add
js
fcmovb
popa
stc
jmp
push
xchg
jp
push
jmp
insl
data16
jmp
out
and
cmp
sub
push
add
mov
subl
je
fcmovu
dec
subb
xchg
stos
and
ficompl
push
mov
xchg
sub
and
pop
das
into
ss
cli
lahf
cmpsl
mov
ljmp
lods
xchg
bound
sub
sub
push
out
clc
xchg
pusha
and
mov
lods
xchg
mov
push
dec
aaa
and
mov
daa
loopne
mov
loopne
push
mov
xchg
sbb
sti
bound
outsl
rcrl
xor
xor
std
push
nop
insl
jnp
lea
dec
cld
cs
pushf
sbb
pop
mov
shrl
mov
and
jo
xor
inc
push
outsl
inc
push
sbb
dec
fnsave
popf
movzbl
sub
sbb
mov
aam
xchg
inc
adc
sub
orb
add
xor
dec
sub
fadd
jmp
imul
test
sub
je
test
out
repz
sub
inc
cmp
adc
mov
outsl
pushf
sti
stc
and
mov
adc
lea
and
or
pop
xchg
jo
lods
int
mov
shr
je
add
sub
jmp
nop
aas
mov
adc
jl
push
xchg
sbb
loope
fcomp
sahf
mov
adc
sub
sbb
bound
xchg
sbb
pop
mov
mov
mov
mov
cmp
test
xlat
pop
or
mov
test
mov
xchg
int3
rorl
inc
add
inc
mov
jg
adc
or
sbb
pushw
stos
cmpsl
std
xlat
xor
sbb
sub
dec
out
add
imul
stos
mov
inc
jp
in
movsl
push
test
sbb
jns
fldt
sti
loop
mov
add
and
mov
cwtl
subb
dec
jbe
push
fcompl
pushl
mov
and
dec
mov
or
sbb
xor
es
sahf
je
and
mov
or
fidivrs
ret
in
add
stc
add
mov
lret
xor
cli
pop
stc
enter
scas
movsb
push
cwtl
pop
mov
xchg
sbb
out
jae
ja
mov
in
imul
or
repnz
lret
out
int
inc
in
xchg
inc
dec
aad
dec
or
push
outsb
nop
sbb
aam
insl
xchg
ljmp
sub
mov
loopne
int3
mov
cmpsb
push
adc
mov
mov
aas
adc
push
dec
aam
adc
pusha
mov
push
mov
cmp
les
dec
nop
push
clc
loop
push
stos
push
add
cmp
adc
jg
adc
sub
xchg
jae
mov
icebp
out
sbb
adc
adc
xor
mov
sub
jno
into
dec
in
rorb
adc
std
cmpsb
addr16
std
insl
push
aaa
xchg
mov
mov
loope
and
add
div
jl
icebp
jo
jbe
cmc
pop
cmp
and
orl
shr
sub
jbe
lock
dec
cli
push
aaa
inc
cmp
jne
sub
mov
in
out
mov
mov
jg
sub
inc
sub
mov
test
outsb
xchg
es
mov
jbe
xchg
aad
adc
xchg
lcall
clc
xlat
xor
inc
xchg
pop
dec
push
push
aad
test
xchg
shlb
lds
and
add
sbb
dec
std
adc
cwtl
mov
or
out
pop
lcall
inc
xor
xor
jbe
lods
lock
bound
fwait
push
cld
jecxz
mov
stos
mov
pop
ja
sub
add
fwait
jae
enter
mov
stos
adc
dec
mov
in
pushf
push
std
adc
iret
lods
xor
outsb
mov
imul
nop
xor
sbb
xchg
loop
test
hlt
fs
add
std
dec
jbe
aaa
push
fsub
pop
loopne
mov
jo,pn
mov
jp
movl
data16
aas
pushl
xchg
push
cmp
push
cmp
outsl
scas
daa
mov
inc
iret
xorl
roll
mov
inc
sub
ljmp
ds
xchg
lods
mov
das
jo
cmp
aas
hlt
sbb
xor
shld
sbbb
lock
in
cmp
sub
movsl
fisubl
push
bound
in
cli
fwait
inc
mov
aas
adc
xchg
and
inc
shll
aad
fsts
dec
sbb
pushf
lret
imul
jo
lahf
repz
push
pop
and
pop
mov
mov
jo
inc
insb
and
hlt
in
ret
das
popf
mov
out
mov
push
xchg
mov
and
cmp
pop
fisttpl
cld
ror
daa
mov
adc
cltd
addr16
test
mov
push
fldenv
fnstcw
sub
dec
enter
in
fs
jae
js
adc
push
jne
sub
adcl
lret
add
push
aam
mov
test
mov
adc
leave
dec
jp
xchg
arpl
jmp
jo
ret
pop
push
mov
push
jmp
jae
enter
mov
test
xchg
mov
pop
xchg
cld
pop
inc
insl
lods
mov
subl
dec
pop
iret
cmp
jecxz
jns
mov
dec
insb
mov
mov
xor
xchg
mov
cmp
iret
pop
mov
fcmovnu
mov
sbb
mov
mov
pop
mov
xchg
sbb
movsl
cli
or
lods
in
add
xor
push
ret
dec
and
scas
sub
int
mov
jnp
iret
or
fcoml
jbe
lret
jmp
and
in
pusha
lret
aaa
fisubl
xor
lret
outsb
or
sub
adc
pushf
mov
lods
cmovne
inc
mov
xor
fwait
addr16
jg
xor
cmp
jl
or
call
into
mov
loop
pop
hlt
rcrb
push
push
ror
clc
and
setl
in
loop
jp
fiadds
test
dec
add
sub
pop
xchg
mov
cmpsb
in
push
rcl
sbb
jno
mov
ja
xchg
cwtl
and
stos
jne
xor
cmp
mov
mov
adc
test
js
push
loope
ljmp
dec
filds
in
mul
aaa
push
mov
lods
in
sbb
cmpsl
add
jge
or
pop
iret
or
test
adc
int
shrl
dec
mov
mov
mov
rorb
add
enter
unpckhps
push
sbb
pop
pushf
xor
int3
xchg
adc
adc
repz
fisubrs
ret
push
call
aas
in
sbb
pop
shlb
daa
lret
pop
inc
mov
cltd
lret
inc
jl
pop
adc
fists
test
sub
pop
ss
dec
jl
mov
filds
es
cmp
cmp
xchg
or
fistl
sub
in
dec
and
cmp
out
mov
stos
inc
cwtl
jle
aas
sahf
shll
jp
inc
and
or
fbld
pop
adc
sti
dec
pop
inc
dec
or
clc
sub
rol
js
inc
fdivrl
aaa
es
iret
cmp
ret
sub
into
ror
lahf
dec
jmp
mov
aam
push
add
in
fsubrs
cmp
adc
pop
inc
decl
gs
outsb
aam
push
or
mov
mov
data16
inc
test
int3
jl
fldl
jmp
lock
jge
xchg
pusha
xor
addl
mov
mov
xor
add
in
jnp
inc
add
ret
outsb
inc
stc
mov
loop
and
cmp
jecxz
pusha
dec
xorl
adc
addr16
test
sub
ss
aad
mov
mov
addb
fwait
xchg
mov
pop
ffreep
xlat
lcall
jg
push
xchg
push
or
ds
test
and
movsl
mov
iret
popa
push
push
pop
gs
insl
scas
push
popf
pop
lcall
xchg
xlat
mov
pop
les
inc
push
sub
jne
mov
add
movsb
fcompl
call
pusha
nop
stc
inc
sbb
mov
push
sub
inc
push
andl
or
mov
insb
mov
jl
dec
into
add
push
pop
jbe
lret
mov
mov
ret
roll
test
stos
mov
int3
inc
in
jmp
and
andl
cwtl
lds
mov
lcall
xor
mov
loopne
xor
jns
push
pop
jae
jno
clc
lods
repnz
scas
xor
sub
bound
jb
xchg
fdivl
and
in
xchg
mov
mov
in
stos
fdivl
aad
push
sbb
arpl
mov
in
mov
xor
dec
push
ja
out
outsl
push
ret
xor
adcb
and
push
repz
iret
or
or
or
adc
popf
out
idivl
aaa
incl
mov
orb
mov
xchg
add
sub
pusha
or
push
pop
and
scas
lahf
movsb
cmp
inc
add
cmp
push
mov
adc
outsl
stos
sahf
dec
rorl
adc
arpl
outsl
push
imul
scas
cld
in
mov
pop
sub
repz
adc
and
shrl
cli
pop
loop
loope
test
iret
adc
adc
popa
add
and
ds
repnz
iret
fadd
sahf
mov
dec
ret
adc
cmp
iret
inc
mov
aaa
xchg
xorb
cltd
icebp
pop
rorl
xchg
xlat
adc
inc
clc
test
jno
push
bound
loope
imul
fwait
sbb
or
sub
out
dec
mov
push
mov
inc
push
insb
std
add
repnz
add
adc
pop
enter
dec
dec
sti
lock
xor
push
mov
in
mov
add
lret
outsb
xlat
push
mov
mov
sbb
mov
cltd
mov
jbe
add
in
loop
roll
fcoms
sbb
push
mov
outsb
stos
cmpsl
in
mov
insl
mov
mov
mov
mov
mov
cli
getsec
jbe
dec
mov
sbb
in
lods
ficoml
dec
add
subb
into
jge
filds
dec
aaa
ljmp
sbbl
shlb
push
xor
movntps
mov
cmp
sahf
pop
shld
xchg
adc
cmp
cmp
dec
cs
jle
lods
pusha
or
push
and
add
jb
test
mov
popa
les
add
jmp
fcompl
jno
jmp
test
cmp
adc
cs
scas
rcrb
mov
xor
sub
pop
lods
dec
lahf
push
movl
adc
mov
pushf
fstl
add
mov
xchg
xchg
pop
cs
mov
push
mov
fimuls
jp
xchg
pushf
cmpsl
sub
inc
cmp
xchg
test
push
sub
aam
nop
sbb
xor
mov
fldcw
insb
pushf
pop
stc
push
movsb
mov
and
cli
mov
out
lret
ss
mov
xchg
fcmovnbe
popa
ds
hlt
fisttps
popf
adc
andl
jmp
mov
cmp
jmp
insb
mov
fs
lods
push
mov
ja
mov
daa
gs
xlat
mov
pop
sub
decb
mov
push
push
pop
sub
aas
mov
and
adc
aad
pop
inc
inc
dec
mov
stos
adcb
push
aam
adc
jl
or
lods
and
or
pop
scas
data16
cmp
add
lea
adc
jp
loop
popa
clc
inc
test
add
mov
sbb
add
or
hlt
dec
cld
pop
jbe
shld
sub
sub
fsubrl
sbb
mov
out
ret
dec
scas
dec
imulb
mov
loopne
dec
xchg
shlb
scas
daa
pop
rolb
mov
fs
data16
cwtl
loop
into
inc
fistpll
dec
pop
ret
scas
cwtl
stos
fisttpll
mov
xchg
mov
cmp
add
pop
orb
push
dec
lret
test
pop
and
and
mov
clc
sub
push
fidivs
or
pop
mov
arpl
loop
icebp
lods
jo
or
jg
mov
mov
sub
xchg
fcomps
aaa
loopne
aas
inc
fbstp
or
jo
fists
mov
dec
inc
push
mov
enter
out
adc
sub
and
rclb
push
push
in
test
xchg
jle
adc
or
mov
cltd
pushf
test
outsl
xor
dec
xchg
scas
loope
jae
or
sbb
fidivl
movsl
xor
add
push
mov
mov
mov
lcall
out
in
leave
iret
push
jge
orb
dec
push
push
pop
es
arpl
lods
adc
add
xchg
mov
rolb
sub
mov
rolb
dec
int
adc
popf
push
es
aad
les
popa
movsl
dec
cmpsl
mov
mov
pop
adc
xor
sbb
lds
xlat
mov
shrl
lahf
mov
lds
push
mov
and
mov
ret
stc
inc
cmp
sbb
stos
std
and
data16
loopne
mov
ja
cmp
mov
fcoms
sbb
repnz
xor
jae
jns
cmp
push
dec
aam
dec
cltd
cwtl
cmpsb
and
aad
out
fmull
xchg
mov
pop
inc
iret
repz
sbb
mov
jmp
jg
movsl
mov
out
inc
iret
xchg
and
adc
push
scas
jo
mov
cwtl
arpl
in
mov
xchg
jp,pn
fldenv
inc
jns
aaa
xchg
adc
dec
cli
pop
sub
mov
push
lahf
inc
lahf
mov
jle
sbb
xor
sbb
mov
inc
adcl
je
mov
xor
fiadds
fcoms
insl
mov
xchg
lahf
sbb
cmpsb
movsl
mov
aad
sbb
xchg
inc
dec
inc
push
js
pop
nop
lret
inc
lods
push
test
sarl
pop
inc
adc
test
mov
pop
stos
adc
jp
mov
sbb
fsub
mov
xchg
xor
xchg
adc
mov
jo
adc
mov
mov
insb
cltd
inc
fsubs
shr
test
std
cmp
mov
sarb
cmpsl
mov
ret
inc
lret
imul
or
sub
movsb
jnp
cwtl
daa
inc
push
xchg
pop
aas
out
adc
adc
inc
xor
faddl
pop
fs
sub
cmp
dec
ljmp
sub
leave
mov
test
cmp
fidivl
sbb
xlat
into
lret
adc
rorl
ficoml
sbb
mov
or
inc
icebp
pop
cmpsl
mov
daa
lea
sbb
sub
ret
mov
push
xor
shll
inc
inc
clc
ds
lock
scas
sub
outsl
mov
xor
and
mov
and
test
push
rorl
mov
je
push
pop
xchg
cmovl
jnp
push
loope
negl
sbb
jl
xor
mov
pop
mov
inc
xchg
rolb
push
sbb
je
test
aaa
arpl
incb
mov
push
sahf
fdivs
inc
pop
cmc
xchg
lahf
jnp
push
cmp
cmpsl
xor
dec
loopne
cmpb
jmp
pop
cmp
rorl
mov
cmp
dec
sbb
xorl
jb
scas
adc
int
push
aad
mov
scas
xor
ret
mov
sbb
mov
fdivs
dec
push
stos
mov
mov
arpl
pusha
jg
and
pushf
inc
adc
out
hlt
loop
pop
inc
pcmpeqd
in
addb
out
push
inc
xchg
push
cmp
adc
in
jb
daa
in
cmp
mov
cmpsb
sbb
lea
aaa
fs
sub
xlat
cmp
insl
inc
adc
dec
popf
mov
xor
fadds
pop
addb
dec
mov
add
cs
bound
cmp
add
ret
mov
pushf
dec
imul
and
adc
push
mov
ja
pavgw
sub
je
lahf
add
movsl
jb
push
mov
test
cmp
push
gs
std
ss
add
dec
mov
inc
pop
sbb
scas
lret
mov
xchg
popa
sub
lock
xlat
adc
ret
sbb
cmpsb
dec
sti
mov
dec
push
pop
and
push
out
nop
sub
jge
push
push
std
movsl
push
movsb
lcall
repnz
out
cmp
push
dec
iret
and
movsb
sub
inc
clc
xor
dec
xlat
popf
mov
mov
mov
movsl
dec
fdivrl
and
push
jno
add
test
push
add
jecxz
push
push
add
shrb
mov
cs
mov
sbb
push
repnz
or
or
cmp
adc
clc
inc
das
and
ret
pop
or
dec
std
mov
sbb
pop
adc
insl
push
adc
mov
clc
jbe
das
cmpsb
jo
jns
pop
out
jno
fmul
lahf
xor
and
mov
add
add
mov
rcr
lock
scas
add
cs
mov
shrl
fcom
mov
mov
sbb
sbb
cwtl
dec
ljmp
int3
jnp
fcmovnb
push
cmpsb
cmp
aam
lods
or
mov
int3
adc
xor
and
add
scas
lods
sub
add
sarb
jl
lock
jae
cs
or
xchg
insl
test
inc
xor
pop
test
dec
xchg
and
fmul
fiaddl
imul
push
sub
clc
xchg
out
xor
es
add
insl
mov
rcl
pop
pop
dec
push
inc
sub
lea
aaa
pop
cmp
stos
dec
jnp
pop
inc
cld
inc
shrb
push
das
aas
sbb
cwtl
mov
fucomip
pusha
push
mov
push
test
cmp
outsl
jne
jbe
jecxz
cmc
mov
mov
or
adc
fmull
or
adc
cmp
xor
pop
daa
scas
ljmp
rcrb
lds
insl
scas
add
rorb
in
mov
xchg
mov
or
fidivl
mov
jle
sahf
arpl
imul
clc
xchg
push
popf
sarl
pusha
test
push
pop
push
jnp
cltd
js
mov
scas
std
jo
aaa
dec
imul
inc
jno
push
push
iret
popf
jnp
dec
ljmp
testl
in
and
sti
add
mov
sbbb
ja
ret
lret
adc
idivb
push
pop
pushf
aas
push
push
out
pushf
push
sub
jg
jns
and
ret
mov
sub
sahf
xor
out
movsl
sub
mov
in
rolb
mov
mov
xlat
or
ss
jle
push
mov
jnp
in
mov
rclb
je
lcall
mov
or
add
dec
mov
loop
aaa
test
test
loopne
cmp
pusha
xchg
lahf
xchg
jecxz
popf
mov
xchg
mov
stos
mov
in
jne
pop
pop
pop
call
inc
add
ret
out
or
push
jae
ljmp
xchg
lahf
mov
mov
cmp
inc
fsubl
rcrb
mov
test
notl
pusha
sbb
ret
movsl
lods
lahf
subb
sbb
daa
ficomps
xchg
cmpsl
testl
add
jmp
sub
mov
jae
jmp
mov
fcomi
mov
pop
lret
pop
popa
call
sbb
sbb
sub
add
test
loopne
shr
mov
jmp
lahf
movsl
nop
aas
adc
out
repz
out
sahf
jecxz
or
mov
mov
dec
mov
xchg
add
mov
lcall
roll
jp
cld
push
jl
mov
cwtl
xlat
iret
test
push
cmp
pop
lock
lock
mov
push
push
pop
mov
iret
cmp
int
adc
test
fldl
pop
mov
daa
sub
sbb
xor
push
and
adc
xor
pop
mov
lcall
inc
add
je
mov
insb
jne
xchg
addl
xor
sub
pop
pop
das
xchg
addr16
jmp
out
ljmp
pop
or
into
sbb
inc
fwait
sub
push
push
rcll
push
jmp
frstor
aas
loope
je
xlat
cmp
xchg
mov
sarl
mov
call
nop
subl
pop
stos
mov
fstp
push
dec
icebp
inc
mov
push
sub
jno
test
stc
push
dec
mov
pushf
push
test
cwtl
dec
popf
push
push
out
mov
lahf
xor
rcr
push
fimuls
mov
mov
inc
mov
in
push
inc
mov
inc
xchg
fcomp
ffreep
mov
in
add
push
sub
mov
mov
lret
loopne
dec
pop
lods
ljmp
ss
les
daa
loopne
sar
adc
and
inc
in
mov
icebp
lds
mov
xchg
ljmp
lret
sub
or
jno
push
dec
xor
bound
jne
and
lock
adc
outsl
mov
xabort
jnp
xchg
fdivl
lret
pop
cmp
xor
scas
sbb
push
cmp
lods
out
enter
adc
cmpl
stc
push
mov
mov
add
and
and
xchg
push
push
ljmp
addr16
push
stc
add
popa
sahf
xlat
cmp
leave
sbb
cmp
cmpsl
xchg
inc
cmpb
fs
and
dec
cmc
out
in
ret
loopne
add
in
icebp
enter
popa
lret
sub
push
cmpsb
repz
sbb
push
jecxz
ss
shll
dec
or
push
inc
mov
mov
int
push
cmp
xor
xor
cmp
jbe
mov
pop
icebp
xchg
pop
pop
pop
aam
in
mov
mov
jl
fsincos
pushf
inc
jp
push
aam
movsl
lret
rcrl
arpl
sub
jns
cmc
out
les
push
sti
mov
or
mov
sbb
jmp
mov
pop
push
dec
push
and
inc
ficompl
inc
cmp
fdivr
sub
mov
xchg
repz
inc
popa
inc
cmp
aad
mov
xchg
addl
sbb
lret
cltd
scas
inc
in
xchg
aas
aaa
adc
dec
jno
jle
rcrl
sbbb
and
inc
push
ljmp
xchg
xchg
inc
sbb
dec
and
inc
les
mov
jnp
jecxz
mov
in
pop
cltd
ret
loopne
stc
sub
repnz
gs
and
and
cmpsb
xor
pop
cmp
rol
scas
rorl
jle
ficoms
sub
stos
mov
nop
jmp
and
push
aas
xor
cmp
ret
test
cmpsb
pop
movsb
outsl
stos
bound
sub
sbb
pop
imul
int
inc
push
ret
test
data16
pop
fsts
or
xchg
fiaddl
lret
pop
sbb
sub
push
sti
popf
add
pop
pop
mov
mov
push
jo
mov
mov
sarb
add
jno
add
cmp
lahf
mov
roll
orl
xor
shl
add
mov
gs
xor
lods
lret
push
sub
adc
rcll
push
or
imul
clc
jae
cwtl
fcoms
push
shrb
xor
push
xchg
mov
popf
filds
fnsave
sub
push
inc
push
call
jae
mov
jae
pop
sbb
mov
xchg
add
iret
inc
sti
mov
inc
aam
inc
adc
fidivrs
aam
cmpsl
movb
mov
cmp
mov
add
mov
divl
ret
add
lods
pop
lcall
divb
mov
push
sub
icebp
pop
add
dec
sub
lahf
mov
push
jmp
daa
push
andb
mov
push
lret
fwait
pop
cli
adc
cmp
in
or
not
sub
inc
loope
les
outsl
sbb
inc
aam
dec
mov
cli
sub
sub
lret
stos
inc
in
pop
mov
out
insl
arpl
inc
addb
add
shrl
mov
outsb
lods
pop
xlat
mov
sbb
dec
out
cwtl
sub
lcall
xchg
sti
add
bound
js
sti
add
push
out
lea
cmc
or
subl
dec
gs
lahf
sbb
arpl
adc
or
mov
data16
sub
outsl
movsl
nop
in
pop
cli
stc
cmp
imul
icebp
hlt
mov
cld
cld
sbb
push
dec
push
mov
ror
jb
lods
iret
mov
push
pop
jns
mov
mov
repnz
jle
out
pop
clc
pop
xlat
popf
lret
and
ja
cs
aad
dec
or
xchg
or
fs
sub
jmp
hlt
stc
sub
dec
xchg
push
aas
outsb
mov
pshufw
jb
xchg
cmp
lods
jns
sub
in
fstps
mov
dec
jo
cmpsl
inc
cli
jbe
jg
cmp
sub
add
push
push
pusha
mov
jnp
loop
xor
pop
or
mov
inc
stc
xchg
mov
arpl
mov
aaa
dec
stos
sbb
fs
jg
fcomp
add
lcall
cmp
loopne
xchg
mov
jmp
push
mov
mov
sahf
jl
icebp
sbb
push
sub
cmp
pop
leave
mov
sbb
push
sub
movsb
stos
je
rorl
xchg
dec
int
mov
xchg
cmpsl
mov
xor
fstpl
roll
mov
popf
sti
pop
xchg
in
jge
jmp
sub
negl
ficompl
pop
push
jnp
dec
loopne
out
sarb
jbe
mov
push
icebp
mov
mov
and
xchg
inc
xor
inc
jmp
cmp
clc
shll
jl
stos
inc
or
xchg
sub
mov
arpl
lret
popf
scas
add
mov
and
sbb
add
sbb
mov
sar
call
mov
cld
mov
movsb
cli
or
xchg
std
add
push
fcomps
shl
jg
sbb
push
stos
repz
cmp
sbb
out
test
cmp
sub
jmp
xchg
push
shll
cld
xor
out
jo
push
pop
mov
mov
leave
stos
cmp
daa
nop
push
insl
lods
inc
cmpl
dec
gs
icebp
xchg
push
insb
sub
xor
and
or
popf
inc
xchg
cli
xchg
test
cmp
int3
pop
outsl
jne
jl
mov
cmp
sbb
mov
stos
jmp
mov
outsl
xchg
push
gs
rorb
jns
cmp
mov
jnp
mov
das
je
ret
mov
sub
adc
iret
mov
xchg
aaa
int
sub
leave
stos
test
inc
out
add
mov
or
loop
pop
imul
inc
inc
mov
push
xchg
fs
or
shll
mov
mov
sub
and
push
bound
xchg
and
mov
push
push
daa
fwait
jmp
xor
mov
inc
aas
loop
lcall
or
and
cmp
subl
inc
inc
out
and
xchg
adc
mov
mov
inc
inc
jle
adc
sub
mov
lods
fwait
sarb
in
sahf
out
or
dec
cmp
mov
jne
icebp
jne
std
mov
push
sub
mov
jmp
xchg
pusha
cmpsb
xchg
pop
push
xchg
fidivrs
pop
sbb
popa
jl
call
loopne
imul
xchg
add
loope
cltd
xor
push
lret
mov
and
inc
ds
repnz
jl
lret
lods
inc
add
wbinvd
add
jae
int3
rorb
lds
xor
mov
jae
add
popa
movsl
pop
jae
daa
divl
xor
xor
pop
fldl
pop
je
loopne
addr16
cmp
test
adc
xor
ss
cmp
cvtpi2ps
in
ja
or
ljmp
jne
inc
outsb
in
push
test
cmp
cs
xchg
mov
ret
add
lret
pop
popf
int3
cmp
sub
lret
and
ror
fwait
int
mov
and
popf
sbb
push
jo
mov
fsubr
call
test
gs
mov
add
aas
mov
in
dec
cmp
sarl
mov
push
stos
cli
dec
cmp
loop
psllw
jnp
cmp
fwait
jo
add
mov
scas
stos
and
subb
jns
shll
lods
fisttps
and
test
cmp
fbld
repnz
inc
mov
rolb
movsb
jno
flds
push
add
cmpsl
mov
aam
cmp
or
popa
lea
lods
push
and
fwait
cmp
adc
fidivs
sbb
or
mov
add
insl
jmp
int3
mov
clc
fwait
ljmp
cmc
stc
sbb
in
out
sahf
xor
or
cwtl
push
dec
aad
mov
xor
sub
add
mov
sbbl
pop
mov
dec
call
jb
xchg
xchg
pop
inc
sbb
dec
and
or
mov
cmpsb
dec
mov
popa
or
or
fs
outsl
icebp
push
push
cmp
fistpl
lcall
push
loope
jge
sbb
jmp
inc
orl
sbb
xor
adc
sub
pop
adc
fcoms
ja
hlt
or
icebp
neg
xlat
out
push
ljmp
mov
jp
popa
cmp
push
out
ror
mov
repz
fisubrs
daa
mov
add
and
cmpl
mov
sahf
ficomps
mov
jg
mov
out
jo
std
cmc
mov
int3
cli
cmp
shlb
xor
pusha
mov
add
ds
mov
mov
aas
mov
jnp
jbe
orb
sbb
xor
mov
repnz
js
mov
push
ljmp
adc
lds
or
mov
scas
pop
pop
pop
inc
aaa
dec
idiv
inc
mov
mov
inc
aad
or
mov
and
dec
xchg
out
jle
ja
and
sub
push
jge
xorb
xorb
xlat
fdivs
add
xor
push
dec
testb
std
sub
ret
lods
pop
mov
jg
cli
xor
mov
push
loope
pop
mov
or
fmuls
orl
into
push
cmovnp
jg
cmp
lret
xor
inc
adc
cmp
insl
mov
and
adc
xchg
cld
movsb
xor
out
aad
sbb
mov
xor
mov
stos
jbe
mov
xchg
push
dec
adc
push
push
cltd
xor
cmp
or
nop
mov
nop
pop
jg
pop
js
es
push
lret
xor
int
ljmp
clc
mov
or
in
test
out
das
pop
mov
stos
add
xchg
imul
notl
xchg
out
scas
enter
loopne
rclb
or
movsl
repnz
out
cld
ret
push
mov
fcmovu
xor
cwtl
cmp
sub
insb
and
int3
fbld
lods
sbbb
rorb
sahf
add
pop
cmp
push
ficoms
mov
jbe
jmp
rcrl
push
sarb
insb
sbb
insl
enter
push
push
daa
add
or
sbb
mov
fisttpll
cli
divl
cmpb
xchg
in
fwait
call
jae
push
ret
xor
lahf
add
lret
ror
test
jb
test
lret
cmp
call
push
rclb
adc
mov
loop
jecxz
in
out
orb
dec
cmp
xchg
aas
cmp
lods
test
mov
cmp
xor
sbb
and
or
lds
xlat
mov
mov
sub
dec
ja
int
lock
loope
xor
add
cmp
mov
xor
add
leave
je
out
enter
or
push
push
pop
pop
sub
pop
cld
addr16
or
in
push
out
je
xchg
xor
xchg
outsl
add
bound
pop
addps
jmp
dec
xor
shlb
push
push
xchg
mov
jns
add
jns
int3
pop
pop
fstps
pusha
lods
xor
std
icebp
inc
adc
rorl
ds
pop
xchg
push
sub
fs
cmp
cmp
in
fs
jno
cmp
cld
pop
cmp
xchg
push
in
and
pop
aad
adc
mov
lahf
js
jne
add
gs
lods
adc
sbb
out
fwait
mov
arpl
ret
dec
jb
daa
push
in
inc
mov
ljmp
mov
jmp
testl
adc
lahf
ljmp
pop
mov
fldenv
dec
lock
pop
hlt
subl
subb
mov
enter
sbb
in
mov
mov
pusha
xchg
jle
and
jno
inc
mov
adc
cmpsl
scas
push
movsl
in
insl
dec
adc
cmpsb
and
xchg
adc
jmp
fwait
scas
aas
mov
and
scas
jb
and
sbb
ret
scas
add
sbb
dec
mov
mov
lcall
push
test
push
push
movsl
fistpll
imulb
cmpsl
sbb
lcall
fdivl
sbb
mov
pop
das
aas
pop
cli
sbb
das
jl
dec
inc
jae
imul
dec
int3
xchg
inc
std
jl
data16
sub
insb
fcoms
rolb
sub
jns
xchg
inc
jecxz
or
or
in
imul
sub
call
mov
or
mov
inc
in
cmpsb
sbb
and
fbstp
jl
gs
mov
jnp
jl
inc
pop
and
loopne
inc
stos
jp
inc
sbb
xor
mov
add
inc
lcall
aam
pop
pop
out
mov
mov
test
iret
dec
shrb
push
in
leave
pop
js
sbb
lods
lods
shlb
add
pop
push
xchg
aas
mov
ror
dec
mov
jecxz
nop
pop
sarl
push
push
jb
lock
lret
xor
mov
pop
push
adc
icebp
insb
cltd
cs
in
cld
dec
add
sbb
loopne
sahf
in
lret
pop
cli
sbb
test
sbb
cmp
jge
push
or
adc
loopne
push
sti
xchg
rcr
or
mov
mov
xchg
fidivrl
pop
inc
cmp
mov
and
clc
rcrb
pop
jo
xorl
dec
and
adc
lds
cmpsb
jo
sbb
jp
outsb
and
fdivrs
jle
ss
sar
ret
in
mov
stos
test
sub
sbb
adc
add
mov
mov
imul
pop
push
cmp
addr16
movsl
nop
imul
adc
ret
jae
aad
test
sub
xlat
lret
adc
test
out
xchg
inc
xor
jb
or
dec
mov
xlat
push
outsb
outsl
pop
je
cmp
xor
idiv
mov
dec
sbb
pop
lret
or
or
xchg
sub
xchg
or
pusha
addr16
jae
cmp
stos
enter
sahf
repnz
mov
xlat
or
sarl
mov
adc
aad
xchg
fisubs
inc
mov
dec
fisttpl
push
or
cmp
int3
decl
and
sti
es
sbb
repnz
fstl
in
testb
addb
cmpsl
mov
in
xchg
ret
outsl
sahf
xchg
mov
dec
ljmp
jp
iret
flds
fidivl
fsubs
fs
push
mov
fcomps
stc
sub
mov
xor
sbb
sbb
out
dec
mov
mov
push
sbb
jp
fsts
xchg
inc
dec
mov
and
lock
adc
inc
int
dec
fildl
cli
cmp
lcall
test
add
add
mov
mov
ja
and
dec
fdivrl
push
mov
sbb
adc
mov
jo
inc
mov
lods
orb
lcall
bound
out
cwtl
clc
in
pop
jno
fisubs
mov
mov
shlb
add
cmpsl
rol
push
jbe
push
jl
orl
xchg
sbb
stc
push
push
in
arpl
adc
xchg
fiaddl
ja
pop
pop
ret
fisttpl
jp
sub
mov
sbb
aas
adc
mov
lret
cli
icebp
jecxz
add
or
sub
xor
xchg
hlt
mov
inc
hlt
shrl
inc
mov
lcall
test
mov
popf
js
out
imulb
push
ds
cli
call
push
lahf
mov
cmpsl
fidivrs
pop
adc
xchg
pop
mov
dec
pop
popf
stos
adc
fsubrs
pop
sbb
cmp
mov
push
xor
push
jmp
jl
scas
leave
xor
pusha
sbb
loope
ds
mov
popa
sub
mov
hlt
js
shl
lret
out
fildll
lea
add
sbb
shr
icebp
jp
out
je
xchg
aad
fldln2
ds
push
xchg
mov
mov
inc
in
or
add
lock
xchg
mov
in
dec
mov
sti
mov
ret
sbb
imull
sub
mov
jge
xchg
mov
jmp
xor
repz
push
dec
sub
test
dec
fnstsw
loope
push
pop
xchg
adc
dec
or
mov
sub
mov
and
mov
cmp
dec
outsb
dec
xchg
sub
push
jo
add
lahf
inc
xor
loope,pt
push
lods
inc
push
decl
jns
lods
fwait
jmp
fdivr
xchg
lods
ss
cmpsl
pusha
sbb
in
mov
pushf
mov
movsl
ror
jg
test
add
xchg
insb
lahf
adc
mov
cmp
and
mov
pop
aam
jge
cmpsl
xchg
je
repz
movsl
imul
lret
mov
std
mov
ljmp
shrb
ror
mov
mov
sub
gs
pop
push
into
cli
ljmp
sbb
adc
shrb
mov
pop
sub
xchg
mov
adc
out
lock
insl
daa
adc
xchg
or
repnz
inc
loop
dec
pop
xchg
aas
aas
lods
pop
ds
jp
jo
test
das
ja
push
test
addb
repnz
das
add
iret
stos
shll
mov
in
add
fidivl
add
push
outsb
push
shlb
arpl
inc
sar
cmp
lcall
cmpsb
inc
inc
cmp
fsub
xchg
jmp
mov
lahf
push
lahf
jns
cwtl
mov
addr16
mov
cwtl
xchg
pop
out
jge
add
adc
lods
sub
shl
pop
fdivs
xlat
xchg
test
mov
popl
jnp
pop
xchg
repz
mov
or
data16
fcoml
dec
sub
mov
inc
mov
sub
out
jo
addr16
or
xchg
xor
outsl
lods
mov
scas
mov
subb
cmp
dec
push
ljmp
xor
mov
or
loopne
lea
rorl
push
and
jg
push
pop
jae
vmread
bnd
sbbl
inc
pop
lea
cmpsl
outsl
mov
pop
lret
lcall
mov
dec
jecxz
pop
lret
lahf
sbb
imulb
fdivrs
cmpsb
push
jmp
sbb
push
fstpt
imul
pop
xor
test
push
movsl
pushf
xchg
and
jle
jp,pt
cltd
dec
hlt
out
inc
and
pop
xlat
push
loopne
cli
fnstenv
rorl
push
pushf
ja
mov
fdivr
out
jns
push
dec
popf
aam
xor
sub
pause
push
push
sub
cmp
pop
sbbb
std
or
sbb
loop
ret
xchg
mov
and
mov
xor
shlb
push
repnz
ret
cmpsb
push
jno
inc
out
mov
push
enter
dec
sub
mov
pop
inc
add
mov
dec
push
es
add
scas
push
jge
fmuls
xchg
sub
dec
xor
icebp
mov
sbb
jmp
lcall
xchg
hlt
xchg
jecxz
fisubl
jbe
jmp
cmpl
punpcklwd
mov
and
or
adc
mov
stc
sub
arpl
mov
arpl
je
jnp
pop
pusha
js
je
pop
scas
xor
sub
add
sbb
cmpb
in
dec
js
jns
cmp
repz
cmp
inc
jo
jb
cwtl
xlat
rcr
pop
jns
mov
xchg
cs
mov
sbb
sbb
sar
popa
xor
xchg
test
loopne
jo
sbb
mov
js
mov
mov
add
dec
ljmp
loope
mov
enter
mov
in
push
sub
call
xor
gs
sbb
adc
mov
or
cmp
rclb
xor
pop
jne
clc
cs
lea
jmp
fwait
xlat
outsb
pop
xor
sub
mov
mov
fmuls
sbb
outsb
pop
dec
flds
xchg
sbb
cmp
imull
add
lods
lods
movb
add
jo
or
fimull
mov
es
repz
scas
jg
push
insb
int3
cmp
cmp
imulb
test
hlt
sarl
enter
fisttps
jp
pop
push
xlat
mov
sbb
add
mov
push
or
cli
adc
mov
mov
dec
and
adc
adc
sbb
dec
dec
inc
faddl
or
sub
and
push
mov
les
xchg
mov
jle
std
iret
in
ret
out
pushf
sbb
pop
in
push
es
push
xor
lea
push
test
pop
dec
dec
pop
xor
sbb
or
popa
fwait
dec
cwtl
mov
jne
inc
in
outsl
dec
pop
rol
inc
pop
or
gs
movsb
or
call
xchg
out
jns
clc
scas
leave
mov
test
orl
sbb
jae
pop
adc
stos
out
jg
xchg
outsl
int
fcomps
dec
push
jl
test
pop
dec
jne
inc
dec
xchg
test
shl
or
ret
stos
and
daa
jbe,pn
pop
dec
jno
imul
pop
jmp
dec
mov
in
insb
dec
inc
adc
dec
cmpsl
aam
jbe
adc
adcb
jl
sbb
ret
dec
loop
mov
scas
in
sbb
dec
inc
dec
push
push
or
xchg
inc
dec
pushf
out
sti
dec
sub
mov
enter
cwtl
nop
sub
cmp
cltd
add
and
ret
dec
xchg
inc
mov
int
mov
adc
rcrb
ja
mov
testl
insb
mov
mov
jl
mov
shl
adc
test
js
lods
decl
arpl
iret
rorl
jl,pt
ja
inc
fcmovnu
fcoml
dec
out
aas
loop
and
bnd
xchg
jecxz
repz
into
stc
aaa
das
leave
mov
mov
adc
leave
lods
jge
int
subl
iret
test
push
popl
pop
shr
je
sbb
inc
addl
jno
jp
ss
adc
sti
pop
xor
mov
add
or
shl
mov
aad
inc
pop
xchg
test
mov
lret
iret
pusha
test
dec
add
or
cmc
out
and
hlt
jle
push
loopne
imul
cmpsl
gs
adc
cmpl
dec
je
cli
call
es
xor
hlt
sub
inc
fwait
push
mov
popa
mov
pop
cli
xchg
xor
cmp
test
das
pop
lahf
mov
pusha
or
push
jb
addl
and
mov
inc
cmp
cmp
push
jno
sbb
dec
cmp
fiaddl
les
repz
pop
outsl
push
js
in
mov
pop
inc
mov
jnp
mov
outsl
mov
sub
xchg
ss
xchg
push
fdivrl
sarb
adc
mov
jb
and
mov
xor
ret
sub
ficoml
iret
daa
insl
adc
or
dec
and
adc
insb
lods
push
push
testb
pop
push
stc
mov
popa
jb
clc
lods
fcoms
outsb
cltd
push
jg
fcomi
int3
sub
xchg
mov
out
and
scas
fcmove
flds
in
mov
xor
test
jns
mov
xor
mov
in
ja
lahf
out
jg
xchg
rcrb
jg
sub
aad
add
out
lahf
sub
repz
inc
cltd
cmp
out
clc
xor
mov
mov
loopne
and
jl
sub
push
jg
lea
xchg
popf
out
jg
jnp
cmp
cmpsb
fstl
jbe
sub
mov
test
in
jp
scas
outsb
inc
inc
xchg
outsl
int3
gs
pop
jno
jp
add
sahf
xor
lods
nop
lods
or
cwtl
jl
cmp
loope
std
test
pop
adc
orb
daa
fcomip
fwait
sub
lcall
dec
shll
jp
mov
pop
sahf
mov
mov
dec
and
fidivrl
outsb
inc
outsb
mov
mov
pop
hlt
or
dec
jns
sbb
std
and
xor
mov
adc
jmp
div
fsubs
add
adc
jp
notl
arpl
das
aaa
or
imul
xchg
add
dec
add
pop
aam
aad
call
lcall
int3
es
int
subb
pop
aas
mov
pop
cwtd
push
sbb
dec
mov
stos
lret
insl
loopne
das
sub
sub
rcr
or
xlat
push
out
push
test
fdivl
lahf
lods
nop
shrl
add
paddusw
sbb
lahf
mov
sar
sub
nop
push
daa
push
outsl
iret
mov
push
xor
pop
sarl
ss
dec
mov
jge
sub
jno
fsubrl
std
andl
xchg
jmp
je
xchg
dec
clc
jb
ficompl
mov
or
add
lods
bound
fistps
mov
sahf
movsb
mov
cmpsl
xchg
lds
or
add
iret
gs
adc
mov
or
push
jg
lods
pop
enter
mov
xchg
cli
add
xchg
jmp
sub
mov
je
lock
mov
pop
aas
add
add
adc
arpl
xor
popf
xor
cmp
outsb
enter
dec
jmp
xchg
xchg
inc
icebp
push
cmp
ret
pop
faddl
lea
mov
daa
loope
cld
test
fiadds
ficompl
xor
ret
mov
rolb
adc
cwtl
test
inc
sub
cltd
sbb
dec
mov
rcrl
cmp
mov
sbbb
xor
mov
ja
push
repz
mov
mov
stos
ret
pop
cmc
mov
sbb
mov
stos
subl
ja
rcrl
jo
pusha
loope
add
aad
fsubrs
shll
mov
cmp
fldt
xchg
bnd
cmp
inc
cwtl
adc
in
imul
sub
pop
je
ret
ja
fs
ljmp
loop
xchg
mov
leave
or
cmc
xchg
lea
mov
jbe
ljmp
cmp
popf
mov
add
add
call
stc
push
lods
add
push
cmpsl
int
add
push
pop
xor
and
fsts
sub
or
cmp
mov
jne
cltd
xchg
call
clc
mov
jle
ljmp
mov
into
lcall
xor
mov
pop
lret
adc
cmp
add
mov
or
mov
out
lea
test
call
pop
mov
mov
bound
clc
insl
lods
and
push
jb
sahf
pop
pusha
push
jb
jns
mov
pusha
xor
je
or
cmpsb
adc
sub
shlb
shl
hlt
or
clc
mov
int
push
fisubs
push
xlat
lret
push
arpl
into
in
rolb
loope
mov
jmp
iret
ror
popf
inc
mov
ud1
jb
or
pop
inc
mov
cmova
aaa
add
jge
xchg
mov
das
std
pop
stc
cmpsb
mov
ficomps
mov
jmp
or
add
addr16
enter
mov
loope
inc
in
jns
ljmp
icebp
mov
das
jg
shl
imul
sbb
loop
xor
push
sub
mov
pushf
jne
mov
ja
xchg
gs
pusha
pop
inc
jns
iret
out
push
test
cld
mov
rclb
add
push
push
andl
leave
mov
sub
pop
iret
cmpsl
mov
mov
inc
sbb
add
nop
dec
testl
mov
adc
in
mov
and
mov
lds
jp
mov
push
mov
out
xor
push
cmpsb
repz
pop
loopne
pop
xchg
in
and
mov
lret
sub
xor
addr16
add
pop
mov
xlat
fnsave
mov
sub
mov
pop
inc
int3
mov
jmp
outsb
push
dec
fnstcw
jg
in
ret
adc
xchg
shll
add
out
cmp
or
mov
mov
sbb
xor
cli
mov
pop
inc
push
rol
jb
xchg
xchg
xchg
cld
lock
inc
jge
jno
shll
in
mov
testl
loope
mov
pusha
xchg
cmpsb
mov
sub
aaa
sub
pop
dec
mov
sub
cli
push
int3
bound
addb
mov
pushf
repnz
xor
lock
scas
mov
sub
xor
or
outsl
clc
xchg
xlat
mov
lret
xchg
add
add
pop
mov
stos
fs
mov
repz
leave
lahf
adc
stos
daa
in
ja
int
mov
pushf
cli
mov
cmc
fadds
sti
xchg
in
out
pop
dec
loope
and
ss
lock
pop
dec
jbe
cmp
imul
fs
mov
sbb
ss
fstpl
lahf
sub
mov
jnp
xor
lcall
pause
add
std
pop
test
adc
jno
xchg
hlt
std
mov
cmpsl
movsl
pop
lret
mov
cmpsl
adc
add
push
lds
fwait
lods
rcrb
dec
shlb
mov
jecxz
or
pop
inc
and
cmp
mov
in
popa
inc
lock
jle
xor
and
roll
jmp
add
icebp
pushf
mov
lret
cli
push
adc
sbb
arpl
lods
mov
sbb
adcl
test
imul
xlat
jo
adc
pop
in
xlat
jmp
cmp
cmp
enter
inc
stos
jbe
dec
pop
dec
dec
dec
adc
lods
imul
sub
lcall
adc
cmp
clc
mov
das
mov
sub
mov
vunpcklps
mov
clc
jne
mov
and
add
in
dec
lea
shl
lock
dec
mov
inc
shl
lods
inc
fdivr
int
xorl
mov
cld
mov
or
ror
daa
sti
pop
addr16
xchg
ret
shrl
adc
aam
stc
movsb
xor
das
int
mov
outsb
dec
sti
cld
mov
shll
insl
fistpll
fcmovb
cmp
nop
repz
jg
dec
pop
pop
adc
and
imul
sbb
add
mulb
movl
in
push
dec
addr16
jg
and
jb
call
or
push
insb
jp
das
mov
mov
pop
jg
ret
and
mul
sbb
mov
rcll
rcrb
sbb
clc
lods
sarb
add
or
loop
xchg
jnp
mov
loop
jmp
gs
add
in
pop
pusha
jnp
mov
cwtl
or
xchg
jnp
xchg
jle
sub
insl
dec
sbb
cmp
mov
adcl
xchg
ja
insl
movsb
inc
js
jbe
stos
sbb
adc
sbb
cld
fistpll
dec
es
and
repz
aam
mov
movl
mov
xchg
mov
and
inc
push
pop
add
cmp
fwait
clc
cmp
add
push
add
movsl
fiaddl
aad
pop
or
dec
stc
sti
test
stos
loop
mov
outsl
add
add
xor
scas
xor
out
cs
mov
test
mov
sub
jnp
insb
popf
rcll
lcall
and
mov
cli
imul
or
and
pop
add
test
push
sub
decb
xor
popa
cltd
mov
add
or
out
mov
xor
push
addr16
mov
jnp
sbb
pop
push
mov
outsb
pop
xor
adc
aas
sbb
aam
sub
sarl
cmp
sahf
and
repnz
imul
test
jnp
or
dec
loopne
repnz
push
ljmp
inc
mov
repnz
sub
xchg
sub
mov
push
jne
cwtl
mov
outsb
jo
mov
sbb
enter
fs
jne
jmp
pop
test
lods
push
cltd
lock
pop
push
add
pop
push
sahf
cmp
hlt
fidivrs
repnz
pop
add
pop
fmul
lret
and
push
sbb
into
mov
sbb
negb
das
sub
or
in
es
or
push
sti
mov
inc
fldcw
cmpsb
in
xor
out
cmpsl
stos
mov
mov
sbb
popf
fisubrl
mov
fs
mov
ds
add
roll
cld
sub
lret
adc
jmp
das
mov
repz
lcall
push
add
loope
inc
subb
sub
push
test
clc
pop
jb
sti
pop
push
jmp
inc
loopne
lea
mov
pop
bound
add
sahf
sbb
pusha
ljmp
and
imul
jg
sbb
mov
push
inc
sbb
insl
insb
dec
xchg
jb
add
add
xor
cmp
push
push
pop
jg
lds
call
in
ret
lods
xor
adc
inc
in
fisttpl
out
repz
mov
sar
xor
test
lahf
fsubrp
or
loope
jmp
lea
dec
std
cmpsl
test
cmpsb
mov
repnz
push
xorl
xor
sahf
mov
stos
adc
xor
jnp
mov
and
sub
sub
mov
push
outsb
add
and
add
ret
push
std
xchg
addr16
push
fisubrl
or
enter
mov
adc
xchg
mov
incl
clc
mov
iret
clc
repnz
xchg
jge
xlat
xchg
sub
jge
shl
popa
mov
movsb
push
cmpsb
mov
sbb
lahf
repz
dec
mov
sub
push
jl
xchg
neg
pop
mov
xchg
or
sbb
and
out
pop
push
xchg
mov
mov
xor
ret
lock
pop
sub
pop
pop
push
cltd
stos
mov
jl
and
mov
je
popa
lcall
add
lods
push
fnstenv
dec
test
clc
cmc
and
std
pop
lods
adc
ljmp
sub
rorl
filds
inc
dec
arpl
out
js
data16
mov
lods
test
icebp
sub
mov
push
das
cmpsb
jl
jp
rcl
dec
mov
sub
dec
sbb
fldt
mov
loope
xchg
js
push
jb
imul
or
dec
data16
pop
mov
into
mov
push
inc
and
push
scas
stc
js
mov
and
jae
loopne
gs
clc
dec
sub
repz
loope
or
insl
add
mov
jb
popa
inc
and
jle
inc
cld
dec
pop
sbb
leave
adc
add
sub
inc
mov
or
test
adc
mov
jne
push
daa
scas
fs
pmaxsw
adc
jnp
dec
imul
idiv
iret
mov
leave
push
mov
cmpsb
push
push
or
ret
out
test
aad
js
push
add
inc
push
add
mov
negl
mov
fisttpl
dec
arpl
lea
imul
or
ficompl
jnp
cmp
and
fwait
add
xor
pushf
cmp
sub
pop
rcrb
fdivl
or
push
sub
or
shrb
and
and
mov
and
mov
mov
shlb
div
jae
pop
inc
stos
dec
and
xchg
ret
mov
pushf
dec
out
mov
pop
inc
popa
sbb
pop
aaa
out
and
movsl
push
or
loop
sub
adc
inc
repnz
mov
hlt
out
dec
js
repnz
addr16
mov
mov
clc
jns
aad
add
call
movl
inc
push
mov
fcoml
loopne
data16
sub
pushf
pop
dec
or
push
out
fildll
cmp
fs
sbb
addr16
xor
loopne
or
cltd
mov
jb
inc
xor
int
test
ret
cmp
cmpsb
stc
or
jg
adc
jl
mov
cmpsl
mulb
jmp
jno
daa
pop
into
mov
xchg
xchg
push
out
inc
ficoml
push
or
inc
jmp
adc
leave
sbb
lret
or
stos
mov
fnstcw
in
jno
cltd
adc
lock
or
xchg
pop
lcall
sarb
cmp
movsl
stos
or
sbb
and
ret
xor
mov
adc
clc
gs
mov
test
dec
mov
lock
mov
out
leave
push
or
test
and
adc
aam
aaa
xor
cmp
leave
xchg
lahf
push
mov
pop
xor
into
mov
xor
adc
or
xchg
mov
rcll
and
inc
js
or
aas
lahf
cld
xor
daa
pop
jno
incl
inc
jnp
jle
orl
mov
pminub
aas
dec
add
cmp
jmp
add
cmp
jns
mov
outsl
inc
cmp
sbbb
dec
aam
rcrb
add
daa
int
inc
xchg
mov
xor
enter
bound
imul
aam
xchg
stc
cmp
test
pop
outsl
pushf
or
add
cmpsb
fwait
push
xor
jmp
dec
mov
mov
push
xor
dec
pop
ss
inc
pop
lods
pop
in
xchg
inc
mov
ja
insb
or
mov
shrd
mov
ja
cmc
cmpsl
mov
cmp
cmp
mov
cmp
cmp
mov
mov
adc
adcl
sub
in
pop
and
mov
shll
call
popa
and
mov
mov
insb
aas
scas
ja
std
insb
outsb
aas
jns
andl
cli
jle
lods
inc
std
cmp
test
aaa
push
data16
clc
out
test
or
dec
mov
loope
cs
outsl
push
scas
mov
adc
inc
ja
ljmp
shll
mov
inc
sub
aaa
xor
cltd
push
pop
xchg
ficompl
xlat
mov
or
cmp
and
mov
add
jmp
in
sub
xor
adc
push
or
push
dec
ljmp
cmc
mov
push
mov
and
inc
stos
dec
mov
sbb
loope
std
adc
cwtl
leave
xor
adc
sub
add
dec
fwait
cmpb
ret
das
lret
dec
fmul
mov
into
cld
rcrl
rcrb
outsl
je
dec
out
in
pushf
mov
fstpt
les
xor
je
sub
cmp
mov
outsl
adc
iret
popf
push
fdivs
or
xchg
and
shl
nop
xchg
std
fimull
mov
jp
mov
stos
add
movsb
cmc
push
dec
hlt
mov
adc
int
jecxz
push
scas
jg
push
pop
rcrl
jns
shrl
inc
sub
int3
or
mov
adc
rol
popw
popa
add
lret
xlat
and
daa
and
in
iret
jmp
cmp
ret
pop
test
clc
xchg
xchg
aam
jae
sbb
imul
aad
xchg
mov
das
and
xchg
lret
aad
jmp
lahf
jg
mov
sub
hlt
ret
cmp
repz
inc
mov
repnz
cmp
sbb
nop
rclb
int
xor
stc
push
or
xchg
dec
test
loope
imulb
jo
xchg
fisubs
cs
xchg
xor
cwtl
cmp
pushf
scas
cmpsl
daa
test
mov
jle
out
or
test
inc
je
xorl
int3
jb
mov
xchg
pop
negl
outsl
mov
addb
mov
xchg
xor
xor
popf
sbb
stos
cmp
scas
mov
cld
and
inc
xchg
lret
mov
cmp
rcrl
push
dec
add
ficoml
dec
enter
pop
stos
xor
movsl
or
cwtl
inc
jg
outsb
mov
xchg
push
les
scas
in
pop
xchg
push
sub
mov
sbb
xchg
fidivrs
outsl
push
push
ds
fcompp
gs
sbb
push
test
aam
adc
mov
cmpsb
lods
cld
mov
jle
outsb
lret
sub
out
jnp
sbb
fbld
call
aaa
jnp
or
cmp
pop
pop
pop
mov
hlt
fwait
push
enter
mov
pop
push
ss
pop
mov
addr16
jbe
sub
mov
lahf
sti
jecxz
xchg
daa
adc
fdivrs
mov
push
stos
xor
add
ss
dec
jno
subb
enter
push
mov
cs
shll
add
fiaddl
sahf
inc
rorb
fyl2xp1
push
pop
in
pop
pop
jp
test
pop
roll
cld
addb
mov
lds
flds
pushf
add
cmp
cmc
lret
dec
lds
or
add
pop
and
jl
inc
mov
insl
or
pop
xchg
adc
outsb
xchg
repz
xrelease
mov
popl
or
jno
lock
sbb
xchg
pusha
and
loope
push
enter
aam
adc
adc
pop
in
jmp
sbb
push
stos
mov
repz
push
adc
or
lcall
in
push
dec
cvttps2pi
mov
cld
test
pop
lock
and
js
xor
inc
pop
ret
das
sub
fucomp
pop
arpl
pop
cmpb
scas
and
cld
fwait
cmp
add
inc
aaa
fbld
test
int
gs
clc
mov
push
shrb
xchg
arpl
inc
lcall
ss
inc
jl
or
nop
lds
mov
xorb
rorl
daa
pop
aaa
jp
mov
dec
lds
jl
sar
add
fistps
mov
mov
incb
mov
or
adc
sub
fs
mov
jno
mov
pop
cmp
add
or
cwtl
shll
jl
cmp
or
sbb
xchg
shlb
es
cmc
out
sub
add
mov
ds
je
bound
push
daa
xchg
std
bound
lock
sarb
xchg
scas
mov
mov
add
aas
cmp
cmp
outsl
outsl
loop,pn
xorb
imul
adc
stos
in
cmc
in
ret
fidivrl
fisubl
aam
mov
dec
cli
cs
dec
movsb
inc
fsubrl
or
js
daa
test
scas
jb
xchg
cmp
push
es
jae
inc
das
add
sti
leave
mov
and
mov
mov
mov
xchg
sarb
xor
lret
leave
dec
daa
inc
out
inc
daa
push
lret
mov
sbbb
mov
test
mov
imul
mov
dec
cmc
and
stos
ljmp
icebp
adc
shlb
cwtl
clc
push
mov
mov
mov
adc
or
inc
iret
jb
stos
jno
xlat
jne
dec
mov
and
lret
xchg
imul
add
jle
push
mov
inc
aaa
push
add
aad
mov
cmp
mov
lret
mov
pop
jecxz
mov
in
jg
sub
cmp
std
test
xlat
mov
jb
jb
pop
mov
out
ffree
pop
xchg
enter
xchg
mov
and
mov
movsb
adc
int
adc
mov
inc
cli
mov
fsubr
xor
out
lret
inc
jl
clc
insl
lret
xchg
lods
xor
cltd
popf
lcall
sbbl
ficoms
adc
and
or
or
lock
push
xlat
sti
pop
inc
stos
mov
cli
cli
sar
jmp
cmc
adc
xor
sbb
repnz
push
adc
add
sbb
cmpsl
pop
orb
pop
adc
push
mov
sarl
int
pop
sub
xor
xchg
addr16
mov
pop
jecxz
outsl
ss
pop
pop
jo
cli
or
cwtl
lret
cmp
fnsave
jg
mov
push
inc
jno
cmpsl
cs
rorl
cs
mov
sub
sbb
cmp
pop
es
xchg
mov
outsb
aam
push
sbb
cmc
lahf
mov
sbb
rcrl
or
jmp
iret
daa
push
rorl
cmpl
lock
pop
scas
mov
mov
jg
daa
repz
mov
and
push
jno
jp
push
mov
sub
rcr
loop
out
xor
inc
xchg
lret
xchg
in
pop
mov
lods
xlat
popl
in
test
mov
stos
push
jne
push
faddp
mov
ss
mov
cmp
mov
aam
lock
cs
pusha
outsb
stos
push
or
jle
jo
lret
mulb
clc
test
jb
adc
das
ret
cmp
mov
push
inc
dec
fdivrs
pop
xor
sub
insl
insl
pop
xchg
and
mov
mov
mov
push
fs
decb
mov
mov
mov
pop
sahf
clc
adc
lcall
mov
sub
pop
cltd
or
xor
popa
lock
pop
outsb
mov
aam
mov
pop
scas
xor
repnz
xchg
ss
lods
add
pop
add
popf
in
out
pop
jecxz
or
dec
bound
and
cmp
movsl
sub
ret
xor
xchg
out
movsl
sbb
fisttpl
les
test
insl
movsb
add
out
pop
push
mov
call
lds
lea
sub
enter
jle
inc
scas
push
loop
pop
or
mov
push
inc
call
lret
mov
and
mov
leave
sub
dec
push
or
push
iret
addr16
jae
mov
enter
dec
xchg
xor
or
jno
push
jbe
push
in
cmpsl
inc
and
or
push
jns
test
dec
sub
outsb
xor
aaa
cltd
es
adc
adc
inc
mov
inc
and
fs
sbb
xchg
push
or
sub
roll
jmp
outsl
inc
xchg
xor
pushf
fimuls
sti
cmp
sbb
mov
scas
mov
jae
xchg
mov
cmc
mov
shll
dec
in
pop
dec
mov
adc
stos
add
popf
mov
dec
lret
sub
sub
aad
bound
out
pop
cmp
push
push
fidivs
pop
pop
mov
mov
cmp
loopne
mov
push
add
shrb
addr16
decl
aad
pop
out
mov
adc
sahf
jne
mov
sbb
in
jo
or
xchg
or
xchg
pop
mov
xor
subb
adc
dec
inc
mulb
bound
shlb
sub
or
outsl
rcll
imul
push
and
popf
dec
movsb
jp
push
push
xor
xchg
jbe
cmp
and
pop
sbb
aam
sbb
negl
sbb
cld
jmp
mov
mov
inc
fldenv
sbb
lret
jno
in
scas
pop
es
pop
sti
xchg
gs
or
jl
out
mov
ret
jns
xor
ds
sbb
fwait
xchg
ret
push
daa
paddusb
xor
iret
fiaddl
imul
testl
stos
and
bound
adc
push
addps
cmp
scas
popf
mov
xchg
ljmp
sti
adc
and
push
cmp
int
mov
in
lcall
leave
mov
dec
subl
mov
repz
mov
clc
sub
sub
fiadds
dec
cmp
cs
mov
lods
sbb
outsl
fsubrs
inc
sbb
lcall
fimuls
stc
push
xor
shlb
bound
jno
jbe
inc
push
xor
xchg
lcall
mov
adc
mov
pop
adc
and
fwait
sbb
out
xor
cld
outsb
mov
test
test
andb
cmpsl
and
std
repz
inc
pop
sub
arpl
mov
fiadds
hlt
cld
mov
mov
mov
cli
mov
std
mov
cmpsb
inc
jns
ljmp
jp
out
sbbb
jecxz
lock
fmull
ja
xchg
mov
movsb
sbb
jle
pop
adc
push
repz
push
dec
negb
sub
and
ret
adc
movb
sub
adc
dec
dec
add
test
ret
jmp
aas
pop
dec
push
insl
frstor
dec
stc
xor
dec
daa
aaa
in
std
add
pop
fidivl
int3
add
icebp
add
xchg
sub
and
jge
push
push
mov
push
cmpl
movsl
jle
push
add
adc
mov
mov
dec
in
ja
inc
jge
xchg
in
add
es
jp
dec
out
push
pushf
fwait
inc
push
in
notl
outsl
aad
push
inc
lods
mov
cli
mov
fsubrl
and
movsb
addr16
sti
and
mov
inc
cmp
fchs
shll
jge
jo
addr16
jns
mov
sub
movsl
icebp
int
mov
sbb
mov
leave
lock
std
arpl
fsubs
movsl
cwtl
repnz
push
icebp
in
push
pop
cs
ss
dec
sbbl
mov
fisubrs
inc
hlt
jbe
in
scas
jecxz
inc
pop
pop
push
pop
gs
into
xchg
leave
addr16
jno
pop
adc
pop
dec
add
cmpsb
xchg
jbe
mov
sbb
jno
jp
aas
xlat
xchg
xchg
cmp
call
xchg
cmp
test
outsl
jl
out
mov
lock
adc
sub
sti
sub
add
jl
jno
cmp
imul
or
out
jle
pop
lock
jno
sarl
xchg
adc
js
adc
mov
cltd
in
fwait
xchg
int
nop
and
sub
nop
enter
push
mov
scas
lcall
out
cmp
mov
adc
fdiv
inc
test
testl
mov
add
and
pop
sbb
mov
cmp
outsl
pop
push
in
inc
jbe
mov
cmp
adc
mov
adc
or
xor
adc
lock
xor
stos
call
and
mov
stos
arpl
inc
mov
movsb
in
iret
aas
jo
fwait
pop
cmpl
sahf
lods
outsb
cmp
cli
out
lret
aam
pop
movsl
xchg
xor
les
sbb
popa
ret
cld
shrb
mov
loop
xor
mov
mov
pop
push
adc
daa
xor
xchg
pop
pushf
jns
inc
ffree
mov
jo
ljmp
leave
fisubs
mov
stc
or
sbb
push
sahf
gs
or
mov
cltd
dec
nop
xlat
push
inc
pop
inc
subl
mov
js
push
mov
int
xor
ja
test
cmc
pushf
stos
sub
sub
and
in
adc
adc
cmp
mov
xchg
sbbb
addr16
out
ja
sub
jo
sub
mov
in
push
fsubrs
shr
jnp
jmp
cmp
popl
add
sbb
mov
sbb
jb
int3
sub
xor
lock
pop
stos
lods
rorl
push
stos
xor
pop
out
sub
lods
dec
fwait
jbe
or
add
adc
in
enter
pushf
clc
pusha
adc
fstpt
lret
movsl
jg
mov
lock
sbb
push
clc
movb
shlb
repz
aaa
data16
push
popa
push
je
lea
jb
adc
pop
insl
jno
cmp
mov
jle
repz
push
push
repnz
jecxz
scas
imul
orb
repnz
jl
xlat
cmp
movsb
pop
sbb
sahf
les
iret
inc
xchg
xchg
insl
bound
jge
adc
aam
dec
lahf
push
cmp
in
cltd
push
dec
ret
aaa
jnp
dec
xlat
gs
fbld
mov
mov
imul
add
sub
rcrb
iret
push
call
aam
xchg
enter
pop
cmpsb
lods
cs
xorl
subl
or
adcl
adc
fucomip
cmp
iret
jns
ljmp
inc
es
jge
mov
lcall
hlt
sti
daa
mov
imul
int3
daa
sbb
mov
loopne
out
das
dec
sar
dec
mov
outsb
mov
dec
inc
push
mov
mov
jecxz
xchg
scas
inc
or
fsubr
push
aad
sbb
loopne
shr
sbbl
sahf
data16
push
sarl
mov
sub
shl
cmp
inc
pop
test
aam
mov
pop
and
andl
movsb
outsb
mov
fistpl
mov
fstp
pop
out
pop
lods
xor
push
out
mov
push
dec
push
xor
movsl
push
loopne
test
push
gs
stos
and
insb
mov
fwait
popl
sbb
pusha
pop
movsb
enter
inc
insb
sub
loope
test
scas
in
cs
mov
inc
jmp
mov
loopne
dec
pop
jmp
pop
out
and
xor
inc
mov
pop
cld
pcmpeqd
lds
insb
mov
sub
imul
mov
aas
inc
pushf
xchg
push
push
stos
jecxz
je
and
and
pop
flds
sbb
xor
push
add
lds
dec
popa
push
mov
mov
pushf
lods
jns
pop
nop
xor
mov
sbb
ret
aam
or
psubusw
das
in
out
iret
mov
or
pusha
inc
iret
outsl
push
add
jg
ret
xchg
std
bound
out
push
lcall
fwait
out
imul
mov
cmp
frstor
adc
mov
jp
and
ljmp
in
mov
cwtl
out
cmp
adc
adc
rolb
repz
xor
cmpsl
cmp
scas
pusha
cld
pop
mov
ret
ja
sbb
mov
sub
xchg
add
fwait
xchg
pop
push
popa
inc
orb
jmp
and
push
jmp
sbb
into
fisttpl
iret
jecxz
lcall
push
sti
popf
fs
jno
sbb
adc
mov
outsb
fisubrl
lods
setb
sub
aad
jp
out
test
loope
insl
mov
mov
mov
divl
aad
xorb
lock
mov
xlat
fimuls
in
dec
xchg
outsl
sbb
push
repz
add
pop
push
imulb
cmpsl
and
inc
or
fs
out
imul
dec
and
ja
adc
mov
pop
xchg
push
xor
ret
in
xlat
aaa
sarb
mov
pop
or
mov
pusha
and
jno
cltd
ljmp
dec
mov
nop
shrb
pop
test
pop
jo
je
mov
call
int
adc
dec
mov
es
mov
lret
lods
sub
in
mov
out
in
lds
ret
shl
jmp
shlb
mov
das
or
xchg
pop
imul
movsl
cmp
int3
cmp
cmp
xchg
xor
cld
jno
arpl
les
mov
pop
outsb
lahf
ret
and
aad
jge
sub
inc
xchg
mov
adc
leave
pop
or
sub
xchg
mov
and
in
in
in
jo
or
lock
and
idivl
shlb
sub
cmpsb
andb
bnd
xor
or
std
fldt
cmp
mov
cmp
cmp
cs
cmp
fxch
xchg
xor
jmp
push
sbb
pop
sub
je
cwtl
xchg
and
enter
and
add
lahf
sbb
int
pop
inc
cli
push
adc
iret
fs
stc
add
mov
lret
add
jge
sbb
pop
ret
das
adc
pop
cli
mov
push
xchg
cs
divl
gs
mov
in
clc
test
adc
push
scas
adcl
incb
popa
xchg
cmp
pop
dec
mov
in
in
cmpsb
aad
hlt
mov
inc
repz
mov
dec
or
push
add
cwtl
xor
hlt
pop
sbb
add
dec
nop
mov
lret
lea
frstor
les
cs
and
fistps
inc
es
pusha
jge
in
jae
cmpsb
aad
xorb
push
push
outsb
mov
mov
mov
add
lret
jp
xor
mov
mov
mov
mov
xchg
insb
add
rsqrtps
and
jle
adc
cmp
xchg
mov
hlt
and
stc
loopne
ss
addr16
mov
or
stc
sbb
sub
push
xchg
stc
nop
or
inc
repz
jbe
xchg
jecxz
ud2
sub
rcrl
aad
push
add
adc
cmp
scas
lcall
mov
ret
xchg
movsl
dec
inc
dec
push
sbb
cmpsb
add
xor
dec
arpl
pop
dec
jg
pop
or
imul
adc
add
outsb
icebp
mov
divb
sub
jb
mov
jns
jg
int
pop
lret
in
stos
test
add
dec
cmc
aas
test
pop
add
sub
fimull
dec
jecxz
xchg
daa
pop
leave
aam
std
jge
dec
push
movsl
sbb
inc
sahf
rcrb
mov
cld
add
push
dec
in
xor
xchg
test
call
xor
mov
dec
lcall
cmpsl
mov
fbstp
es
fbld
test
stos
mov
or
mov
lret
sub
inc
loop
loopne
fimuls
call
scas
fnsave
loopne
pop
stc
pop
xchg
inc
into
mov
leave
imul
xor
in
out
xchg
aaa
aas
inc
mov
stc
repnz
and
mov
ror
mov
add
je
ja
cmc
mov
leave
jno
or
es
fiadds
sbb
and
imull
sbb
pop
in
pop
pusha
adc
arpl
clc
ljmp
fisubrl
shrl
lahf
in
pusha
xor
lods
mov
push
neg
sahf
ss
jge
or
cmpsb
mov
pop
cmp
add
movsl
in
sbb
mov
sbb
insb
cmp
push
xor
jbe
push
iret
shrb
push
push
aad
jmp
lods
jecxz
mov
popa
das
xchg
ficoml
scas
cmpsl
enter
inc
rcrb
push
ljmp
in
call
mov
imul
adc
adc
pop
jnp
dec
dec
lahf
sti
fistpl
sub
sbb
imul
adc
xorl
aaa
sub
fldenv
enter
inc
int3
shll
mov
xchg
or
not
mov
into
bound
stos
fdivrl
es
lret
xor
addr16
data16
adc
mov
out
fiadds
rcr
sahf
daa
mov
or
pop
scas
movsb
gs
sahf
mov
scas
add
push
cld
iret
inc
fiaddl
mov
fmuls
sub
add
pop
insl
fmuls
scas
into
pop
cmp
xchg
jnp
adc
mov
test
sbb
push
add
mov
and
adc
pop
add
arpl
shr
or
fidivl
and
xchg
pop
gs
adc
jo
sarl
push
mov
dec
pop
push
lock
jl
push
scas
pop
cmp
pop
es
test
mov
js
out
insb
dec
clc
pop
mov
dec
push
aad
sbb
mov
dec
cmp
movsl
adc
sbbl
fwait
mov
insb
push
dec
and
stc
lock
or
popf
into
lret
inc
scas
lcall
and
aas
pop
push
lods
dec
lods
mov
push
stos
adc
arpl
or
inc
shrb
inc
cld
dec
xchg
popa
subb
inc
and
sub
and
pushf
insb
inc
dec
fs
jl
mov
pop
xor
ss
xor
sarl
xchg
push
pop
add
inc
pop
fidivrs
movsl
push
dec
sub
test
push
mov
lret
mov
or
shll
stos
sbb
gs
test
stc
sub
fldl
cmp
cmp
pmaxsw
sti
loopne
out
sahf
sbb
cmp
and
in
inc
xchg
push
push
outsb
outsb
test
cld
or
add
fwait
clc
pop
imul
cmp
jmp
in
add
jge
sbb
das
xchg
dec
push
and
pop
or
loope
add
cmp
std
sub
ror
int3
inc
mov
pop
int3
fsubs
int3
fs
cmp
dec
out
mov
push
andl
xor
pop
in
sub
mov
xchg
mov
pop
div
mov
jmp
add
mov
inc
push
adc
sahf
mov
fadds
mov
adc
jnp
pop
bound
repz
pusha
pop
or
xchg
testl
inc
cmp
xchg
dec
mov
xchg
sbb
pop
add
clc
adc
in
xor
dec
push
call
push
sbb
stos
leave
shrb
das
in
jecxz
sbb
sub
xchg
inc
mov
adc
mov
push
fbld
add
add
das
cmpsb
adc
cld
movsl
xchg
push
or
mov
rcrb
jnp
jbe
repz
mov
mov
push
mov
sub
pop
out
and
jmp
add
cmp
mov
mov
sub
dec
mov
adc
push
data16
cld
pop
clc
inc
xchg
lret
inc
mov
aas
fnstenv
adc
inc
ficomps
or
out
test
in
pop
push
mov
lods
dec
mov
and
out
push
mov
movsb
aad
fcompl
mov
dec
pop
scas
pop
xchg
mov
int3
sbbl
cld
mov
ret
les
cld
cmp
inc
test
or
or
push
dec
lahf
sarl
cmp
sbb
call
addr16
pushf
inc
shl
dec
mov
dec
daa
fiaddl
outsl
xchg
in
loope
fst
push
pop
jmp
jp
inc
mov
jle
pop
popa
adc
xor
add
sbb
cld
cltd
or
and
es
aam
jecxz
mov
xchg
js
in
imul
fwait
comiss
gs
and
jb
xchg
cmp
loop
or
mov
stc
push
aam
adc
loopne
lcall
inc
adc
addl
xchg
mov
mov
bound
js
fsubrs
ret
aaa
xor
pop
setne
into
adcl
xchg
sbbb
dec
and
pop
lret
cmpsl
rcrb
stos
jo
ret
push
fwait
aas
test
push
jno
call
push
fcmovu
enter
mov
push
movsb
add
fstpl
or
cmp
ja
std
and
xorl
std
icebp
push
mov
add
loopne
dec
inc
rolb
lods
add
xchg
es
out
je
addr16
pop
shl
lds
adc
push
mov
ljmp
insl
ja
stos
xchg
xchg
dec
mov
add
outsl
nop
dec
in
popl
test
sub
inc
or
dec
out
add
es
push
cmp
hlt
fistps
pop
push
sbb
out
divb
imul
inc
nop
or
sbb
sbb
nop
fwait
cli
imul
or
cmp
pop
xchg
mov
jo
add
adc
das
xchg
ja
sub
lock
mul
adc
aaa
jp
shlb
or
imul
cmp
dec
mov
ljmp
pop
test
and
sub
and
cmpsl
outsb
xchg
or
xchg
imul
cmp
sub
jmp
pop
add
stc
or
insl
test
fdivl
pop
imul
push
push
int3
pop
sbb
mov
shld
inc
int
gs
outsl
aaa
inc
xor
jp
sbb
mov
out
bts
ds
push
xchg
cmp
inc
pop
mov
mov
pop
jp
and
shlb
das
ja
jle
outsb
ljmp
sub
mov
imul
fsubrs
adc
cmpsl
int3
lea
cltd
dec
cmp
xor
sbb
pop
adc
dec
add
and
mov
test
push
inc
orl
pushf
pop
xor
push
scas
xor
imul
mov
lahf
jns
pusha
test
xchg
mov
ss
add
repz
in
fldcw
xor
jno
int3
in
jnp
fcompl
mov
jle
cs
fisttpll
in
push
fdivrl
adc
add
cld
insb
je
out
stc
add
push
mov
repnz
xor
stos
movsl
clc
popa
xlat
mov
mov
enter
call
cmp
mov
int3
fisubl
mov
cmpsb
loop
fimull
gs
mov
fisttpll
xor
xor
push
jbe
cli
inc
push
mov
inc
lahf
cmp
jmp
lahf
pop
xchg
add
cli
out
xchg
aam
xchg
xor
pop
mov
outsb
jp
scas
fs
mov
rcl
mov
pop
jmp
imul
sahf
insb
not
ds
pop
mov
test
xor
and
vmread
mov
dec
inc
es
fisubrs
push
cmpsl
cmpsb
mov
mov
aaa
stc
jns
or
icebp
jns
or
xor
inc
ss
push
dec
lret
aam
movsl
insl
xchg
mov
int
add
adc
mov
fists
sub
daa
pop
pop
cmp
add
in
les
add
iret
fwait
dec
fnstsw
mov
dec
cmp
incb
mov
bound
adc
jae
fmulp
jns
jmp
push
icebp
push
dec
hlt
or
das
arpl
xchg
or
ret
imul
adcl
scas
sub
out
clc
stc
dec
leave
jb
das
js
outsl
xchg
sub
push
ljmp
inc
inc
jg
js
sub
sbb
in
cmp
ret
testl
inc
sub
mov
int3
xlat
mov
jbe
rolb
rcl
lds
jmp
sub
jl
cmpsl
insl
or
out
push
fcmove
add
jle
fisttps
sub
pop
insb
and
add
sub
jo
inc
cwtl
out
jecxz
xlat
cltd
sub
adc
int
aad
mov
xlat
cmp
xchg
xchg
jle
pop
jns
push
sbb
and
insl
hlt
test
iret
jle
rorb
loop
add
push
sbb
inc
in
inc
test
in
out
sbb
ficomps
mov
jbe
mov
popf
inc
clc
adc
shlb
lods
stos
std
inc
mov
jne
mov
fdivl
scas
jno
es
ficoml
xchg
in
fmuls
jg
rcl
mov
jno
test
imul
pop
iret
push
test
mov
ljmp
inc
xchg
adc
and
daa
adc
push
mov
add
insl
or
mov
sub
xchg
push
xchg
pop
push
ret
and
fs
popf
xor
stc
jge
test
push
rolb
jne
loopne
les
test
mov
stos
cmp
xchg
scas
js
xchg
push
xor
mov
push
lock
jns
sub
ds
xor
xchg
jmp
mov
insb
push
hlt
adc
adc
aam
addl
xchg
mov
sbb
fs
mov
pop
mov
add
mov
push
xchg
cmp
inc
repnz
mov
shrl
lahf
icebp
iret
arpl
inc
notb
add
outsb
mov
inc
in
test
jns
xchg
jl
inc
movsb
xor
jp
popa
ljmp
mov
scas
sub
lret
mov
sub
out
xlat
aaa
xorb
stos
jnp,pn
push
mov
push
stc
sub
decb
fs
scas
add
inc
pop
fsubs
loop
fs
pop
ja
icebp
lods
jle
lods
xchg
cmpsl
jnp
sbb
scas
xor
add
or
mov
int
xchg
mov
ja
int3
push
fldcw
cmp
fnsave
cmp
enter
and
sbb
clc
fadds
enter
es
cmp
dec
fmulp
jbe
in
jle
scas
dec
or
cmc
add
imul
stos
or
mov
ja
push
cli
push
add
dec
popf
dec
jp
mov
pop
and
test
push
mov
push
pop
aas
or
gs
loopne
aaa
fmull
push
inc
xor
aaa
mov
imul
xor
mov
pushf
push
fsubrl
ja
call
add
or
pop
add
xor
and
sbb
shll
mov
sbb
pop
setge
fdivs
dec
inc
jno
ret
hlt
adc
fldl
jae
and
es
imul
jp
icebp
fcoml
and
and
dec
or
jb,pn
cmpsl
push
add
leave
arpl
cld
dec
add
movsb
ljmp
dec
testl
xor
push
scas
gs
stc
or
xor
sets
push
mov
adc
cmp
adc
std
enter
pop
into
daa
insb
out
les
sbb
adc
std
mov
movsl
js
lock
hlt
sub
add
add
sub
notl
popa
dec
inc
xchg
mov
rclb
inc
cmc
push
or
inc
jns
inc
jmp
push
or
out
lret
pop
fidivrs
xor
add
mov
cmp
pop
or
jecxz
aas
add
mov
ret
mov
fs
lret
addr16
xchg
cli
rclb
inc
popa
sahf
push
or
mov
leave
out
rcl
popf
clc
dec
sahf
sub
pop
pop
hlt
push
jne
gs
mov
and
or
jno
loopne
shll
mov
jns
stos
xor
push
stos
shr
imull
icebp
into
sub
pop
jecxz
lahf
jno
xchg
fimull
pop
fdivs
mov
adc
out
push
mov
insl
test
into
sbb
fstl
outsl
dec
jge
pushf
mov
xor
cld
sub
xchg
adc
add
xchg
std
loope
mov
or
sbb
enter
movsb
shrl
fucomi
arpl
xor
and
pusha
enter
repz
push
mov
inc
inc
dec
jns
jecxz
push
mov
daa
push
push
loop
imul
inc
nop
xchg
mov
mov
nop
xor
out
out
ret
fsub
sbb
jecxz
pop
movsb
push
sbb
push
fwait
mov
xor
or
outsl
fiaddl
push
filds
ss
adc
sbb
mov
gs
add
pop
sbb
xchg
cmpb
xor
bnd
mov
sarb
addl
inc
out
ja
cmp
xor
jo
sbb
int
dec
aas
mov
inc
mov
lods
leave
xor
and
addr16
ljmp
insl
push
inc
fmulp
stos
shrl
inc
add
xchg
mov
iret
mov
test
jno
xchg
or
add
arpl
sub
lea
cmpb
jmp
xor
mull
add
add
fistl
sbb
ljmp
push
jecxz
jbe
loope
or
xchg
negb
hlt
ss
test
movsb
push
pushl
and
sbb
cmc
ja
loopne
mov
pop
decl
fildll
popf
push
mov
and
andb
push
mov
scas
add
inc
mov
pop
mov
movsb
in
mov
cld
mulb
add
insb
cmp
enter
lcall
fnsave
push
add
dec
xchg
repnz
lods
dec
sub
dec
fsts
and
adc
mov
mov
jmp
loopne
ljmp
test
into
dec
stc
dec
sub
test
arpl
fs
mov
sbb
mov
arpl
and
in
sub
fdivs
sub
jne
sub
bound
aam
dec
xchg
or
out
jo
mov
xchg
in
notb
lock
dec
xor
jae
push
pushf
in
sbb
and
fwait
push
scas
add
mov
pushf
pusha
and
mov
inc
mov
or
xor
adc
sbb
sti
stos
mov
or
mov
xchg
aam
mov
int
xchg
cmp
insl
sub
cs
add
jo
mov
out
mov
outsb
add
cmc
rorb
dec
shll
jp,pn
cld
data16
sbb
ret
xchg
push
fiadds
inc
test
sub
mov
mov
xchg
xchg
fprem
inc
nop
pop
cmp
aas
imul
add
pop
subl
sbb
sub
test
inc
movsl
adc
xlat
xchg
add
mov
and
sub
int
lcall
negl
sti
sarl
xchg
jl
sub
leave
icebp
pusha
inc
stos
sub
lret
adc
push
leave
lods
dec
movsb
pop
cmp
repz
shrb
or
xlat
add
or
xchg
cmp
xchg
cmp
addr16
sub
push
popf
sbb
push
xor
mov
adc
data16
lods
stc
cmpsb
mov
jns
pop
stos
cmp
xchg
imul
mov
push
test
pop
pop
xchg
stc
sub
shll
or
jecxz
shlb
test
or
mov
sub
lcall
mov
pop
add
mov
sub
adc
pop
in
push
jmp
aam
test
xchg
add
push
jl
dec
cmp
dec
mov
in
xchg
adc
mov
lcall
std
cs
aas
test
es
aad
adc
jo
iret
les
in
inc
outsl
dec
dec
insl
arpl
dec
add
in
lret
adc
lds
mov
push
pushf
sbb
pop
push
sub
iret
repnz
or
mov
sbb
clc
mov
lahf
sbb
addr16
je
out
orb
aam
jne
jecxz
repz
loope
sub
clc
pushf
sahf
movsl
lods
push
xchg
insl
sbb
aam
aad
ret
daa
fsubrs
in
xchg
ret
imul
adc
mov
je
pushf
mov
das
rcrb
xchg
cmp
rcll
jl
jge
cmp
pop
stc
xchg
cmp
xor
mov
pop
in
sub
inc
test
jmp
adc
cmp
jb
jmp
lea
insb
mov
cmpsb
inc
inc
jo
mov
bound
pusha
pushf
outsl
sub
sets
sbb
ljmp
lock
and
push
pop
movsb
cmp
std
adc
dec
shrl
cmc
mov
add
dec
stc
aam
imul
jle
cli
push
aaa
iret
stos
xorl
fwait
mov
adc
cltd
mov
dec
push
cmp
or
das
gs
pop
out
rorb
mov
or
cmpl
jg
ret
jge
mov
cs
cld
xor
cli
sbb
pop
fimuls
sub
or
lods
stc
adc
xchg
inc
jnp
mov
xchg
pusha
clc
es
sub
cltd
popa
xchg
inc
pop
and
mov
ds
add
mov
ret
xor
dec
sub
push
xchg
pop
mov
or
push
stc
cmp
mov
mov
cmp
and
das
add
in
mov
dec
lea
mov
cmp
aad
ret
fldt
fidivl
xchg
es
addr16
inc
pop
jmp
and
add
fistl
mov
repnz
dec
or
and
das
adc
or
mov
jb
shlb
stos
lret
xchg
je
add
and
jecxz
jecxz
pop
fisubs
fistl
fsin
sbb
sub
mov
xor
ss
imul
cli
adc
mov
notb
aas
in
test
loope
or
sti
stos
nop
mov
add
int3
lds
pushf
pop
sahf
int3
outsl
sahf
mov
push
mov
lods
lea
adc
ss
add
inc
repnz
inc
xchg
in
pop
dec
lahf
mov
sbbb
mov
xor
dec
aam
sub
sub
xchg
jmp
sbb
call
lock
stos
xor
jp
pusha
or
outsb
sub
outsb
dec
xor
aam
inc
add
adc
test
adc
mov
int3
cmp
int3
packuswb
out
popf
xchg
add
popa
ljmp
out
push
dec
lods
cmp
loopne
adc
mov
sbb
add
adc
out
dec
xchg
pop
pop
sub
rclb
pop
xchg
inc
sbb
pop
or
mov
shll
push
arpl
jno
mov
jle
jbe
cmp
in
xchg
xor
xlat
lods
imul
sbb
popa
lret
jae
add
cmpl
push
rol
push
or
adc
out
push
fucom
and
inc
cwtl
out
adc
and
icebp
cmpsl
lcall
lret
out
sbb
mov
mov
popf
jp
pop
addr16
cmp
js
mov
add
push
and
mov
shll
mov
mov
mov
int3
push
sbb
mov
add
and
sbb
aad
ret
outsb
and
rol
pop
inc
out
movsb
and
out
jnp
and
test
enter
cmpsl
popf
mov
jmp
xchg
and
pushf
lret
repnz
imul
dec
cs
jp
ja
jge
lock
cmpsl
jne
and
jle
pop
aad
or
in
xor
imul
fsubrl
mov
mov
mov
or
rcrl
add
aaa
test
mov
fstpt
sub
xchg
mov
mov
inc
mov
and
sahf
fsubs
mov
push
lods
arpl
push
mov
lods
xchg
loop
xchg
mov
ss
or
rcrb
test
mov
lods
cltd
push
sub
ja
push
and
ljmp
movsl
jns
rorl
and
xorl
repz
push
outsb
es
fwait
xchg
out
cmp
ljmp
jne
cmp
xor
push
rcrl
fsubrp
xchg
fidivs
stos
in
and
repnz
inc
xor
pop
popf
or
orl
fistps
or
cmp
aad
les
test
loop
lcall
stos
sbb
pop
pslld
mov
or
jo
push
mov
fsts
iret
in
and
mov
mov
cmpsb
rolb
xchg
ljmp
push
mov
stos
loopne
daa
mov
aad
add
jbe
bound
mov
pmuludq
push
xchg
xchg
push
push
insb
cwtl
adc
cwtl
je
loop
cmp
pop
jnp
insb
lret
add
arpl
fwait
sub
sub
enter
jle
daa
or
push
mov
sub
pusha
cwtl
pushf
pop
mov
out
jo
push
scas
daa
jo
imul
stos
pop
mov
mov
push
lods
vfnmsub213pd
aad
test
or
cs
bound
rcrl
cmp
sub
out
es
push
xor
lock
add
push
xchg
ss
in
mov
test
sub
call
bnd
and
add
in
push
out
clc
dec
sar
jp
jae
int3
addr16
or
mov
mov
or
pop
push
jbe
out
movsl
or
data16
lret
mov
and
cltd
test
mov
enter
mov
ficoms
fisttpl
mov
enter
jae
sbb
sahf
xor
mov
daa
or
add
shl
jmp
xchg
jmp
dec
aad
repz
mov
pop
insb
aam
or
pop
mov
xor
loope
mov
lock
scas
or
cmp
push
lahf
inc
popf
test
ja
pop
push
lea
pop
push
sahf
or
add
scas
repz
inc
pop
cmp
lahf
cmpsl
out
sub
jo
aad
add
scas
jmp
ret
cmp
mov
inc
les
ss
fmull
fdivp
pop
mov
repnz
lret
push
and
xor
cwtl
cmpsb
xchg
and
out
das
xor
add
sbb
mov
adc
push
out
push
lock
out
in
mov
push
mov
xlat
test
iret
add
sub
pop
arpl
mov
int3
xchg
icebp
mov
popa
sbb
cs
sahf
ficoml
into
inc
mov
mov
xchg
movsb
dec
pop
inc
pop
push
push
loopne
sub
loop
jae
pop
mov
popf
xor
and
aaa
xchg
outsl
cmp
push
mov
add
add
push
add
pushl
out
nop
loopne
cmp
xor
inc
loopne
repnz
or
inc
sub
sub
gs
scas
cld
into
push
hlt
jmp
movsl
add
ret
sbb
bound
push
frstor
adc
mov
in
or
pushf
adc
sti
jo
bound
pop
ljmp
outsl
mov
fldenv
out
adc
in
sbb
mov
adc
lods
incb
cmpsl
cltd
push
mul
and
int
mov
gs
test
lret
cltd
push
add
in
cmp
dec
mov
fistpl
mov
jbe
je
gs
jno
clc
xlat
inc
int
and
add
je
or
neg
pop
pop
pop
lret
lret
or
insl
dec
pusha
sub
or
push
inc
das
fdivl
xchg
and
pop
imul
cmp
xchg
insl
nop
mov
inc
cltd
add
dec
sarl
add
loope
stos
fdiv
sbbb
xor
movsb
add
pop
sub
stos
out
cmc
cmpsb
jmp
add
loopne
lcall
sbb
cltd
outsl
test
cmp
das
mov
add
dec
popa
sub
sbb
cs
lods
int
jno
hlt
cltd
imul
gs
mov
cmp
pop
jo
and
addr16
xchg
fists
add
dec
push
inc
mov
cmp
jl
jnp
inc
jno
and
inc
aas
jmp
mov
outsl
out
xchg
out
mov
arpl
or
mov
fwait
push
test
nop
cld
mov
jns
lret
cmp
lcall
push
cld
pushf
addr16
jl
call
scas
cmp
dec
fdiv
sub
mov
bound
repz
push
fscale
ret
int
mov
and
es
push
ds
je
mov
orb
xchg
ud0
xor
jae
mov
xor
cmovs
lret
add
add
and
aam
pop
inc
mov
rolb
rolb
lods
insb
repnz
rol
lret
pop
jne
and
lods
pop
mov
out
mov
inc
cmpsb
xchg
and
and
mov
sub
sub
lahf
ljmp
pusha
xor
ret
loopne
loopne
fistpl
lock
scas
inc
popf
sub
sti
push
out
xchg
arpl
adc
sarb
pushf
mov
push
sub
xchg
mov
push
xchg
jno
clc
js
les
xlat
repnz
cmpsl
addr16
pusha
adc
ret
cli
aas
adc
jb
fisubl
dec
rcl
cmpsb
cmp
das
aas
mov
nop
daa
dec
mov
imul
stos
mov
cmp
mov
adc
es
xchg
fmul
jae
push
cli
daa
xchg
inc
fs
dec
sbb
rcll
sub
sahf
pop
xor
jbe
xlat
fwait
pop
mov
test
int3
loop
nop
popf
inc
sub
adc
dec
mov
lods
push
popa
push
mul
jmp
or
popf
out
dec
stos
es
xor
sarl
sbb
clc
cmc
mov
and
pop
mov
cmp
mov
lods
fisttps
cmpsl
push
dec
fldcw
lret
das
lds
jo
xchg
adc
out
insb
jp
mov
stc
add
out
mov
adc
repnz
scas
divps
or
cmp
add
adc
jl
insb
mov
lock
push
pop
mov
pusha
sbb
xor
std
fcoms
shll
dec
lret
stos
jbe
notl
hlt
sar
jp
popf
dec
sbb
pop
enter
sbb
cmp
in
jge
mov
pop
or
js
xchg
add
pavgb
push
adc
ja
insl
inc
push
jecxz
inc
sarb
pop
movsl
pop
stc
dec
addr16
push
idiv
push
cmp
aaa
xor
test
pop
sub
out
fwait
dec
enter
decb
ds
adc
inc
xlat
xchg
adc
andl
pop
inc
fmuls
fmuls
iret
adc
gs
inc
sub
lret
pop
cmp
dec
rclb
imulb
xor
inc
cmpb
push
inc
xchg
sbb
cwtl
fldcw
sbb
out
inc
jno
jmp
mov
mov
add
adc
push
imul
in
lahf
mov
lods
sub
push
mov
subb
adc
cltd
or
push
pop
sbb
xchg
sti
adc
iretw
xchg
outsl
icebp
jne
xor
ffreep
dec
sbb
xchg
add
pop
push
movsb
test
out
lods
jae
add
ret
jns
hlt
lods
xchg
jno
inc
insl
pop
aas
push
repz
jmp
mov
shrb
pop
pushl
out
jmp
mov
pop
jae
or
addr16
sbb
mov
pop
push
mov
mov
ja
adc
pop
jl
xor
adc
test
lahf
mov
jmp
setp
jo
sub
lods
je
cmp
arpl
js,pn
cmp
nop
xor
ss
xlat
push
lret
out
aam
push
aad
dec
jno
xchg
fiaddl
mov
sbb
pop
fidivl
jno
or
outsb
cmpl
fs
mov
pop
lret
shlb
popa
dec
into
repz
fcomps
lahf
push
negb
je
dec
jo
cwtl
pusha
xor
push
in
addl
and
mov
clc
sub
xchg
fldcw
test
pop
fildll
cli
xchg
jp
inc
push
xchg
cmp
lahf
sahf
test
aaa
in
xchg
pop
mov
push
jl
mov
xchg
add
xor
sahf
bound
fistl
fdivrp
out
sbb
int3
xor
sbb
mov
push
xor
cmp
lret
xchg
pop
push
hlt
rolb
sbb
mov
jp
and
repz
xchg
mov
mov
push
sub
std
lods
loopne
jns
jecxz
test
test
movsb
rcrb
or
push
rolb
ljmp
aad
lods
mov
cli
adc
loope
mov
or
stc
imul
dec
push
repz
mov
cmp
notb
inc
push
pop
fsubrl
stos
mull
mov
and
cld
aaa
fs
jmp
cwtl
dec
hlt
rorb
mov
mov
fildll
jg
mov
mov
mov
or
jmp
arpl
pop
xor
adc
mov
and
dec
pop
mov
in
xor
push
ds
adc
ret
lea
shrl
jle
xchg
or
sti
insl
pop
xchg
ret
mov
mov
push
xor
dec
mov
fmulp
in
add
fwait
push
adc
pop
sbb
sub
aaa
or
and
pop
pop
and
cwtl
in
je
jns
mov
xor
mov
mov
mov
cmpsl
mulb
mov
push
bound
lret
aaa
into
sarl
andl
jbe
sbb
jecxz
mov
clc
dec
lds
sbb
xor
jle
lret
js
gs
sti
jne
movsb
pop
cs
sub
mov
adc
inc
rorb
mov
shlb
dec
mov
jecxz
pop
fld
inc
and
int
jecxz
js
jp
mov
int
add
push
fldt
fucom
xor
fwait
sbb
pop
mulb
jno
test
les
xor
sarb
jnp
int
jne
ljmp
mov
aam
mov
and
or
popf
jmp
mov
dec
xchg
xor
sarb
mov
pop
mov
cld
mov
in
xor
aad
mov
xchg
xchg
ss
orps
shlb
sbb
stos
xor
hlt
mov
shll
scas
or
inc
loope
jo
aas
xor
cmp
cmpsl
push
and
enter
adc
call
or
lea
loopne
rorl
sbb
inc
cmpsl
jmp
adc
std
inc
outsl
sahf
add
fistpl
in
mov
sbb
cmp
sub
out
or
pop
jae
mov
add
aas
jns
insl
stos
pop
in
int
push
das
jne
in
dec
jnp
jb
aam
je
leave
cltd
pop
xchg
mov
test
ja
mov
test
icebp
mov
mov
insb
scas
shlb
cmp
dec
inc
add
rcr
pop
and
cmp
or
dec
jg
mov
and
cmpsl
and
mov
xchg
loop
pop
inc
jl
mov
mov
add
hlt
fsubrl
jg
sarb
pop
sub
cmp
add
rorl
xchg
js
jnp
sbb
inc
sti
movl
insl
xor
jo
rcll
pop
mov
mov
pop
xchg
cmp
jmp
jecxz
mov
jge
push
leave
out
xchg
ret
or
aad
lods
xor
in
mov
jecxz
lods
xchg
insl
insb
popa
adc
clc
xchg
cld
stc
cmpl
xchg
fcmovne
test
inc
aad
push
lcall
pop
jmp
inc
cmp
inc
das
loopne
cmc
jmp
and
mov
mov
loopne
sbb
pushf
adc
jbe
aad
shrb
sbb
insl
out
or
jb
mov
jge
jp
addr16
sbb
aad
sub
mov
sbb
int3
mov
je
fmuls
lahf
mov
xchg
loop
imul
add
pop
lock
and
xchg
mov
ljmp
shrb
rcr
jge
enter
jb
sbb
out
push
sbb
push
jmp
jo
icebp
add
test
pusha
mov
pop
dec
cs
jmp
pop
xchg
sbb
lcall
inc
push
mov
adc
neg
lods
lods
filds
jmp
jbe
fsubr
popa
lahf
adc
jo
in
mov
aad
loopne
hlt
adc
dec
sub
mov
inc
cmp
mov
arpl
mov
sub
mov
pop
jmp
adcb
bound
sbb
ss
dec
test
in
dec
roll
inc
ret
repnz
push
push
mov
pop
xor
nop
lods
jmp
xchg
clc
fucomip
ljmp
pop
push
aaa
loop
leave
fcomps
mov
std
xchg
mul
mov
ja
pop
rcl
dec
jnp
outsl
pop
imul
shll
js
and
nop
insl
popf
inc
call
mov
in
fistpl
mov
push
cmp
xchg
pop
dec
push
call
loop
ret
ljmp
test
inc
pop
xchg
cmpsl
mov
arpl
dec
movb
and
sbb
cmpsl
test
icebp
in
pusha
pop
push
rcrl
mov
js
daa
int3
dec
add
fmull
js
pop
push
cli
es
mov
adc
jmp
cs
movsl
lods
scas
js
pop
gs
sti
fistpl
or
xchg
xchg
out
pop
push
xchg
leave
leave
mov
xchg
lcall
or
cmp
rolb
subb
pop
loope
jle
out
xor
lea
xchg
pop
aas
loopne
out
dec
pop
add
fwait
and
or
mov
jno
test
xchg
xchg
ds
insb
mov
je
aad
rcrb
mov
dec
jmp
xchg
stos
cmpsl
jb
sbb
repnz
into
and
and
mov
mov
aad
cmp
xchg
daa
test
rorl
or
or
xor
insb
xchg
or
or
add
gs
imul
pop
mov
or
fwait
out
stos
dec
sub
pop
in
mov
mov
sarb
ret
add
add
pop
cmp
in
mov
or
popa
jnp
addr16
insl
jae
sbbb
shl
ror
inc
and
scas
jb
mov
push
cltd
shll
or
sub
call
or
pop
mov
or
icebp
adc
mov
repz
and
cmpb
les
cmp
xchg
cmp
xor
sbb
jnp
add
push
testb
cmc
adc
pop
sub
xor
inc
shlb
cmp
int
mov
cmp
test
push
loop
cwtl
push
add
dec
popf
in
popa
loopne
cld
and
mov
push
ss
and
push
ret
outsb
add
inc
pop
pop
call
or
push
push
out
cwtl
adc
pushf
adc
mov
or
fidivrl
lret
add
loop
xor
test
sbb
mov
mov
outsb
cmp
test
fmuls
sbb
push
add
outsb
pushf
jge
cltd
out
lds
xchg
cmpsl
test
aas
fwait
cmpl
int3
mov
add
mov
lcall
decb
add
clc
push
andl
mov
mov
insl
mov
xchg
adc
std
add
mov
adc
adc
scas
cltd
setnp
add
test
sahf
movsb
in
xchg
xor
outsl
sar
mov
and
dec
push
out
and
int
dec
bnd
push
mov
adc
out
arpl
repnz
sbb
je
mov
test
jo
pop
test
idivl
rcr
into
popa
faddl
cmc
xchg
das
test
aam
sbbb
inc
repz
test
in
cmpsb
aaa
repnz
adc
insl
rclb
in
sub
adc
push
lods
or
inc
pop
test
sbb
xor
cmpsb
test
dec
je
stos
shll
ret
xchg
enter
dec
jae
insl
aas
fists
shrb
fisttpl
inc
shr
mov
icebp
jns
mov
es
mov
push
stc
bound
das
loope
or
push
cmp
loopne
xor
and
sub
push
data16
add
sub
clc
adc
dec
sti
pop
xchg
jne
out
mov
sub
out
cmc
cmc
rolb
or
out
test
movsb
clc
xor
mov
lcall
mov
out
jae
cmp
bound
mov
fisubrs
xchg
ret
clc
insl
test
ret
adc
lret
in
xchg
jbe
ret
inc
imul
add
iret
sbb
call
arpl
add
pop
xchg
sbb
out
out
xor
push
cmp
cmc
adc
inc
sbb
sub
add
dec
repnz
xchg
je
mov
ret
inc
push
or
mov
inc
cmp
or
jmp
lock
or
mov
repnz
lds
inc
xchg
push
push
mov
mov
sbb
mov
xor
adc
mov
bound
stc
add
insl
aaa
out
popa
mov
add
dec
pop
stos
adc
dec
cmp
rsm
jne
stc
popf
cwtl
inc
pop
jb
inc
inc
mov
fidivrs
popa
test
fsubs
or
cs
shll
mov
popf
gs
pop
push
jnp
mov
dec
mov
adc
inc
and
xchg
jp
xlat
pop
int
mov
stos
sbb
mov
ljmp
pushf
pop
lret
push
in
int
xor
and
and
cmpb
inc
stos
add
stos
push
cmp
dec
addl
sbb
sub
xchg
lods
repz
popa
pop
mov
lock
imul
cmovo
out
lock
lods
stos
cmp
clc
repz
js
fs
jmp
cmpsl
pop
das
mov
or
lods
iret
popa
mov
cmpsl
inc
or
inc
xchg
mov
aaa
test
pop
cmp
lods
and
cs
jmp
mov
xor
fwait
ret
es
mov
cli
mov
pop
subl
mov
adc
popa
xlat
mov
cltd
out
popa
aaa
out
pop
cmp
icebp
sub
insl
or
aas
add
jge
dec
add
imul
lods
jmp
push
aaa
jg
jne
pusha
paddd
push
mov
pop
mov
jne
aad
jg
mov
jecxz
mov
dec
out
in
cltd
lock
fildll
add
divb
mov
jecxz
xchg
jo
push
mov
jne
xor
adc
int
pop
mov
test
cmp
lods
xchg
ja
cmp
ss
and
push
cmp
jl
lods
xchg
outsb
mov
or
lea
insl
adc
std
dec
leave
enter
or
sub
jmp
inc
scas
jle
sbb
jg
std
lds
ret
cmp
stc
ficomps
dec
and
pop
mov
pop
imul
pop
xchg
dec
mov
cmp
test
sbb
mov
int3
sti
mov
cld
sub
cmp
cmpsl
test
out
or
shlb
mov
es
pop
shrb
mov
xor
mov
test
inc
fdivrp
rep
mov
gs
adc
aas
rorl
test
test
xchg
cmp
add
lcall
mov
out
aad
dec
cmp
stc
ja
dec
sbb
push
int
dec
mov
jle
dec
or
jne
sti
or
mov
ss
rorb
xor
inc
jle
push
jg
mov
sbb
cmc
nop
ds
imul
test
or
xchg
aaa
popl
pop
and
dec
lea
or
push
xor
mov
cmp
xchg
les
sub
jmp
movsb
subps
mov
jns
stos
dec
out
js
cld
mov
shll
jno
adc
jne
or
stc
std
pusha
sbb
mov
divl
add
mov
jmp
xor
ss
pop
jg
test
outsl
mov
mov
out
loop
call
add
mov
push
dec
je
outsl
je
cwtl
mov
nop
pop
pop
out
mov
xor
push
mov
sbb
mov
sbbl
or
test
jecxz
ljmp
mov
adc
mov
xchg
mov
push
push
push
add
cmp
imul
clc
push
dec
jns
xchg
cmc
popa
xchg
jne
hlt
fucomi
mov
les
loop
call
lods
shrl
adc
adc
leave
scas
mov
xor
mov
xchg
mov
lods
mov
int3
testb
push
push
inc
in
pop
cmp
cmpsb
xchg
enter
cmc
lahf
lea
add
sub
call
sub
ljmp
pop
out
outsl
mov
mov
pop
scas
fnsave
lds
push
pop
mov
mov
inc
aaa
or
test
dec
xchg
pop
loopne
clc
repnz
jmp
and
cs
lcall
loop
fistps
push
dec
xchg
mov
rol
lret
js
je
adc
xor
cmp
push
push
enter
jmp
push
xor
fsts
push
push
xor
push
add
inc
pop
dec
jno
sub
push
jecxz
push
xchg
nop
daa
cmp
inc
mov
push
fadds
out
cmp
push
cmp
ljmp
imul
sub
sbb
outsl
cmc
cmp
mov
lret
repnz
jae
sbb
push
sahf
sub
inc
jp
cmp
sub
adc
stos
or
or
xchg
je
jb
popa
roll
cmp
xchg
sbb
xlat
rclb
repnz
push
mov
inc
push
xor
jl
std
ljmp
test
int
jmp
mov
into
aam
cltd
popa
stos
or
insl
sti
add
xor
daa
popa
scas
inc
mov
out
jmp
shll
mov
call
loopne
push
dec
push
movsl
jg
pop
mov
call
ficoml
mov
mov
xchg
mov
pusha
ss
lcall
jae
sub
test
mov
loop
es
mov
lahf
dec
addr16
nop
icebp
mov
aaa
lcall
or
movsb
push
movsl
test
out
adc
sub
lcall
pushl
inc
pop
push
mov
sti
cmp
fdivl
imul
inc
cmp
and
rorb
or
jns
jecxz
push
ja
mov
icebp
sbb
into
icebp
loop
push
fwait
into
pop
dec
jg
out
shll
or
add
mov
out
push
push
dec
mov
or
add
inc
fcom
mov
sbb
mov
out
repnz
mov
movsl
push
sbb
dec
xchg
cltd
mov
test
pop
xor
or
mov
push
out
jecxz
call
fcom
adc
and
fadd
sub
sub
pop
adc
or
adc
sub
adc
subb
out
fdivr
mov
mov
out
lock
mov
fdivrs
inc
mov
push
aas
push
sti
pop
dec
in
mov
xchg
les
in
jge
div
jb
mov
outsl
out
lret
xchg
mov
pop
dec
add
cmp
cmp
ret
fistpll
mov
into
out
loope
imulb
icebp
xchg
and
test
add
out
jl
mov
jb
gs
jae,pt
xor
scas
std
pop
icebp
xchg
movsl
cltd
mov
dec
ja
loopne
lods
sbb
jecxz
inc
ss
lods
cmpsb
pop
jno
loopne
imul
mov
sbb
testb
lods
test
lods
inc
dec
xor
ja
adcb
sti
repz
or
pop
dec
push
mov
mov
lods
inc
das
mov
jecxz,pt
lcall
cltd
jge
push
and
mov
imul
adc
mov
aam
fistl
dec
pop
cld
std
cs
inc
cld
xchg
mov
jne
leave
in
cld
jp
cmp
pop
filds
sbb
sub
in
sbb
repz
cmp
or
adc
dec
int3
test
fcompl
out
pop
inc
mov
fcoms
movsb
mov
cwtl
mov
mov
xor
test
cmp
pop
add
lcall
lret
sub
push
mov
mov
push
inc
sbb
mov
mov
mov
mov
mov
mov
shrl
mov
mov
in
jge
and
dec
ljmp
fldenv
cmc
and
pop
pop
lods
lcall
cli
pop
pusha
scas
xchg
pop
jmp
and
fucomip
jecxz
sbb
inc
dec
xor
dec
loopne
xchg
popa
push
sbb
pusha
or
mov
pop
jg
sub
std
hlt
pop
shlb
test
mov
xchg
insb
test
cmp
arpl
xor
sbb
ja
leave
add
mov
and
xor
push
bound
shrl
jmp
push
cli
dec
fcomps
popf
popf
inc
push
or
push
sarb
fdivrs
ss
xor
adc
lods
dec
call
shl
mov
notl
xor
fucomi
test
sub
add
fs
mov
daa
fidivl
aas
xor
loopne
cmp
cmp
das
loopne
cmp
inc
je
mov
in
cli
sub
data16
sub
popa
inc
lcall
xor
pop
cmp
adc
pop
mov
jl
popa
push
pop
je
lods
sbb
sbb
lea
or
dec
test
push
sbbb
cmp
aas
pop
mov
pusha
sub
push
jo
lcall
pop
stos
out
lods
cmpl
in
cmp
push
and
aam
in
lret
inc
cs
imul
out
aaa
mov
cs
dec
je
pop
stos
insb
lret
stos
das
cmp
pop
cltd
sub
scas
andl
outsb
cs
imul
jl
push
aam
outsl
fisubrl
and
arpl
xchg
orl
shrb
add
divl
into
pop
lret
mov
filds
ret
sbb
je
imul
fdivr
cwtl
and
bound
ss
scas
lods
into
outsb
cli
lods
sarb
adc
mov
mov
cmove
sbb
push
lods
sbb
popa
add
inc
iret
mov
mov
dec
inc
lock
push
rolb
sahf
jno
cmpsl
ljmp
ja
pop
scas
cmpsb
testb
sub
mov
jmp
rorb
mov
or
push
mov
dec
movb
das
sbb
xchg
xor
in
addr16
fidivl
mov
xchg
sub
push
mov
sbb
push
adc
xor
flds
fwait
movl
dec
bound
dec
repnz
out
cmp
inc
pusha
test
sarl
popw
cmc
inc
clc
sbbb
movsb
jbe
cmpl
bound
dec
loop
jecxz
jge
adc
push
ss
and
lds
inc
decb
daa
push
add
daa
lsl
mov
xor
pop
leave
loop
dec
rcrl
test
cmc
lods
mov
sbb
pop
fistl
xchg
int3
cmp
cmpsb
or
nop
push
mov
sub
shrb
or
mov
es
sahf
cmp
dec
psrlw
outsb
lcall
xchg
jmp
inc
das
je
pop
adc
scas
imul
cmp
aad
fisubs
dec
sbb
xor
stc
push
cmp
adcb
insb
imul
imul
sbb
mov
les
sbb
push
aad
clc
cltd
push
repnz
insl
xlat
or
xchg
sbb
push
pop
cmpsb
lahf
bound
xchg
outsl
addr16
test
mov
mov
mov
bnd
das
lret
js
jl
jno
cli
push
mov
push
mov
mov
pop
rorb
xchg
mov
adc
fstps
mov
in
pop
add
fidivl
sahf
xchg
jp
mov
es
pop
xchg
xchg
add
xchg
pop
enter
gs
loop
mov
imul
push
dec
test
icebp
movsl
adc
movsl
es
cmp
jp
push
fcoms
aas
int3
cld
pop
ljmp
cltd
push
pop
xor
fucomip
ja
inc
pop
out
aad
pop
in
leave
clc
pop
iret
sbb
sub
adc
lods
sbb
xchg
into
inc
insl
mov
stos
les
out
adc
aaa
push
cmc
push
notb
mov
push
inc
adc
aas
stos
call
mov
out
fbstp
mov
dec
xor
lods
or
hlt
xchg
movsb
fwait
sub
jnp
scas
daa
fbld
loope
jg
push
leave
add
in
shrb
int3
daa
lock
inc
dec
dec
mov
and
xchg
or
enter
inc
fwait
out
push
pop
mov
clc
faddp
jg
add
dec
sub
sbb
in
pop
lock
and
jge
outsb
std
sbb
adc
push
call
ja
shrl
or
bound
xchg
mov
sub
stc
inc
pusha
adc
enter
dec
cmpsb
movsb
lods
test
mov
sti
dec
pop
in
cmp
scas
outsl
lock
mov
pop
imul
cmp
pop
enter
cltd
fbld
js
inc
push
sarb
jbe
sahf
mov
into
jbe
jno
shlb
icebp
call
inc
mov
pop
add
push
mov
imul
mov
imul
jno
addl
int3
addr16
jbe
push
imul
jo
sub
mov
fwait
mov
xor
and
in
pop
adc
add
and
pusha
jae
sbb
out
jp
mov
mov
or
ret
repz
rcr
jo
ja
dec
dec
xor
mov
test
dec
in
cli
mov
jmp
cwtl
jle
mov
or
jo
push
inc
les
adc
xchg
ret
or
dec
addr16
fwait
mov
insl
shr
in
shlb
push
jb
mov
in
rcrl
fbld
add
daa
loop
push
inc
or
js
ljmp
sub
fdivs
test
rol
jno
push
inc
dec
xchg
je
or
xchg
scas
xlat
cmp
mov
mov
add
jecxz
cmc
jnp
loopne
nop
mov
test
test
mov
lret
cwtl
mov
addr16
aaa
fisubl
xchg
mov
cmc
xor
sub
push
sarl
and
add
movsl
std
xor
add
inc
gs
icebp
sub
stos
cmp
inc
xchg
cmp
in
hlt
int3
xor
push
pop
shrb
cmp
push
mov
lock
lcall
lahf
les
popf
cmpl
stos
popf
test
fdivr
sbb
jg
adc
sub
add
xchg
lea
loop
push
pop
push
xor
sub
cmpb
and
push
xchg
jp
mov
dec
jnp
push
jbe
adc
sbb
repz
aad
cli
push
cmp
jb
movsl
js
sub
push
pop
push
inc
bound
xorb
scas
jmp
stc
stc
xlat
cmp
aaa
in
push
xor
lahf
mov
cmpsl
sbb
pop
mov
mov
jb
xor
jle
lea
pop
add
dec
popf
adc
lods
mov
pushf
pop
xor
adc
pop
pushl
int
sub
jmp
mov
sub
sub
insb
outsb
cmc
lahf
mul
les
ret
mov
adc
sbb
cmc
fistl
arpl
popf
popa
mov
sub
fs
pop
mov
mov
or
out
sarb
iret
jmp
xlat
hlt
xchg
push
movsb
inc
and
movnti
xchg
les
add
outsb
mov
in
cmp
fisubs
push
xor
mov
icebp
dec
dec
ljmp
out
sub
ja
mov
cmp
jmp
inc
dec
fcoms
fidivrs
pop
sbb
push
iret
outsl
enter
bound
loope
jns
pushf
xchg
cli
xor
cmpsb
incl
ja
lods
insb
in
dec
pop
out
popf
and
mov
adc
in
cmp
push
mov
cmp
pop
test
mov
pop
cli
cmp
mov
lahf
push
sbb
mov
or
cmpb
and
scas
mov
into
lds
jnp
pop
push
jne
xorb
adc
mov
pop
or
dec
cmp
subl
adc
lock
scas
shrl
mov
test
jb
inc
cmp
shlb
sbb
test
leave
and
mov
negb
inc
xchg
jge
int3
cmp
mov
push
adc
cld
lgs
xor
out
add
js
scas
cld
xchg
jae
std
sub
add
jae
mov
or
push
push
jl
add
xor
sub
rolb
mov
dec
out
shl
add
jge
lock
pop
fidivrl
lcall
pop
push
stos
fwait
dec
sbb
int3
addb
jmp
bound
or
stos
repz
out
push
pop
out
sub
mov
push
lret
cs
jecxz
insl
sbb
push
jl
rcll
jb
leave
mov
lock
movntps
adc
loope
ss
mov
sub
push
addl
add
popf
mov
js
stc
outsb
faddl
in
jbe
test
mov
stos
jle
ret
stc
js
lahf
push
movsl
xor
mov
or
rorl
mov
and
fs
in
in
loopne
and
adc
dec
dec
fnstenv
push
insl
lods
and
xchg
fldenv
add
fprem
xlat
pusha
mov
nop
or
xor
loopne
mov
sar
lods
fucomp
pop
int
mov
pop
jb
sub
cmp
push
mov
lds
or
push
pop
and
sti
ds
jmp
daa
jne
test
inc
fwait
push
aam
lods
inc
mov
xor
pop
or
cltd
cmpl
scas
pushf
sub
cltd
mov
jecxz
and
mov
push
aaa
test
push
mov
xor
imul
adc
hlt
cwtl
addl
jl
int
cmc
in
jecxz
out
pop
fistl
pop
ja
xchg
stc
stos
xor
imul
jge
lods
xor
repnz
popa
lahf
std
sbb
outsb
xor
fwait
sbb
call
scas
xor
rcll
or
mov
mov
stos
dec
shrl
mov
inc
mov
imul
or
cmp
xor
aas
pop
dec
sahf
jp
ja
mov
mov
and
dec
shlb
rcrb
push
in
pop
lods
test
mov
or
inc
or
adc
lds
dec
add
adc
xor
inc
push
xor
xor
dec
mov
mov
mov
jb,pn
sbbl
repz
jae
or
test
cmp
fstpl
sbb
or
les
arpl
push
mov
add
and
add
sub
mov
xchg
mov
cs
xor
incl
pop
idivb
ret
imul
pop
sbb
lret
bnd
sub
cwtl
mov
in
scas
call
inc
pop
ret
mov
popf
fbld
push
push
xchg
or
jle
xchg
in
fmuls
ds
imul
or
clc
sub
call
xchg
push
stc
mov
push
icebp
sub
jl
pop
mov
mov
push
jae
mov
aam
aaa
fdivrs
and
jb
out
push
xor
repnz
aas
mov
sub
ret
mov
mov
adc
mov
cmp
or
mov
mov
adc
or
add
mov
jbe
xchg
out
push
mov
test
pop
pop
shlb
stos
adc
mov
frstor
cmp
int3
repz
jmp
addr16
jecxz
jne
sbb
fcomps
push
mov
adc
jne
jae
addr16
cmpsl
out
cmpb
mov
out
gs
dec
sub
mov
or
sub
and
adc
mov
mov
add
inc
push
and
dec
jl
andb
loop
es
dec
pop
and
cli
or
test
divb
adc
cs
stos
stos
sub
pop
jge
imul
icebp
xchg
aam
pop
pop
jle
inc
imul
sub
es
repnz
fs
stos
jnp
test
jl
pop
pop
push
cs
sahf
push
cmp
xor
dec
jmp
push
lea
pop
mov
dec
out
mov
xor
insl
cmp
mov
mov
fadds
xchg
push
mov
xor
xor
adc
dec
and
sarb
or
inc
mov
lcall
pop
pop
push
adc
inc
dec
mov
orl
int
movsb
gs
int3
sub
cmp
sbb
dec
jmp
push
cli
ret
int3
stos
and
shr
je
push
mov
lods
cmp
fbstp
nop
std
imulb
dec
mull
fistps
test
xlat
andb
push
pop
adc
mov
loopne
repnz
inc
xchg
and
dec
aad
jle
cmp
or
aad
inc
pop
xchg
pop
inc
pop
dec
adc
aas
push
mov
loope
ja
pop
jcxz
or
and
cmp
jne
insb
insb
je
fidivl
mov
jle
xchg
aaa
stos
and
leave
mov
add
push
push
out
bnd
mov
cld
cmp
xor
fwait
xor
mov
mov
jge
xor
adc
mov
rcll
dec
mov
ss
imul
pop
cmp
cmp
fisubs
mov
insl
lahf
add
mov
xchg
lods
stos
aas
push
or
dec
push
xor
lock
daa
scas
adc
outsb
nop
bound
imul
adc
push
lock
sbb
sub
jge
sub
movsb
pop
movsl
sub
cmc
cwtl
mov
in
push
and
incl
daa
dec
dec
add
repnz
inc
cli
pop
les
cld
and
xor
aam
jp
fmul
pop
mov
mov
popa
mov
cmp
push
or
mov
cwtl
push
push
push
mov
fldl
jg
mov
xor
mov
popa
inc
sbb
jl
adc
clc
dec
mov
add
mov
icebp
pop
imul
scas
push
adc
dec
adcb
sahf
jne
test
push
mov
sbb
out
dec
imul
xchg
in
pop
in
insl
push
jo,pn
mov
in
push
daa
pusha
and
arpl
sub
sbb
add
pushf
jbe
push
push
mov
divl
imul
bound
cmp
std
icebp
xor
adc
jb
or
stos
adc
xchg
dec
inc
faddl
pop
inc
clc
rcll
dec
lds
lock
test
xchg
push
ja
call
enter
mov
lods
jbe
into
scas
push
icebp
ret
and
mov
pop
or
or
lahf
push
xor
into
pop
loopne
daa
pop
mov
push
mov
lods
cmp
inc
cld
repz
push
mov
cltd
outsb
orb
nop
stos
xor
add
mov
add
pop
adc
push
pop
hlt
dec
cmc
cmp
mov
daa
je
test
or
xor
fiadds
jle
mov
outsl
xchg
pop
add
xor
xor
test
nop
mov
xor
mov
adc
pop
or
dec
jbe
cmc
dec
imul
ljmp
test
dec
mov
hlt
ret
pushf
adc
mov
shlb
aas
or
test
test
jg
mov
cmpsl
sbb
and
ds
add
dec
adc
jl
jo
out
cmp
push
pop
jb
add
sub
xor
in
orb
sub
sti
nop
aad
lock
sbb
pop
sub
les
mov
nop
ret
fisubs
int
adcl
loope
add
mov
dec
mov
ffree
clc
add
cmp
ret
shlb
jno,pn
in
icebp
test
dec
inc
sub
mov
cmc
jne
int3
in
leave
push
jae
cltd
sub
push
or
pop
in
mov
testb
fs
cmp
fstp
pop
mov
push
inc
shlb
mov
sub
js
in
or
mov
pop
dec
test
lcall
cmpsl
fidivrs
flds
xor
int3
cmp
lret
int3
sub
inc
rolb
lds
in
dec
mov
arpl
jnp
sbb
mov
sbb
pusha
enter
leave
push
shlb
mov
cmp
sub
add
fsts
cmc
jmp
or
call
mov
xor
cmpb
lret
jmp
stc
add
dec
icebp
jb
xor
or
lcall
movsl
or
xchg
lods
into
andl
cmp
jmp
andb
add
pop
fwait
xchg
adc
xchg
aas
ret
cmpsl
cld
aam
adc
xor
jae
or
scas
mov
and
xchg
je
dec
adcb
adc
jmp
sbb
stos
out
or
mov
popf
imul
in
and
jle
ja
scas
mov
in
lods
mov
cmp
xchg
pop
adc
movsb
xchg
ret
insb
out
jp
es
sti
loopne
test
je
fcmovbe
dec
dec
out
jg
repz
push
mov
in
rcrb
cwtl
adc
cmp
mov
adc
xlat
dec
lret
jb
cwtl
test
dec
in
jbe
pop
mov
sub
xchg
pop
les
adc
pop
out
hlt
daa
loop
lret
xchg
test
adc
into
push
pop
cmp
int3
jns
or
and
cmpsb
push
mov
test
xor
addr16
xor
aaa
dec
setg
or
ss
jns
mov
xor
insb
cmpsl
add
xchg
and
movsb
or
sahf
push
mov
xor
scas
pop
mov
pushf
test
lock
sbbl
cmp
adc
mov
inc
mov
lods
loop
lods
cmp
loope
out
sti
into
push
lcall
int
cmp
lret
sbb
das
outsb
aam
out
test
rdpmc
xlat
rcll
pop
gs
es
in
jb
and
cmp
mov
add
inc
out
or
xor
loopne
sub
and
pop
cld
stc
or
gs
hlt
pop
mov
cmp
ret
pushf
and
mov
mov
subl
cmc
jecxz
push
shlb
adc
js,pn
push
pop
loopne
stos
hlt
cmpsl
xchg
adc
scas
insl
pop
sub
cmp
aad
pop
test
orb
fcmovnbe
dec
dec
mov
mov
iret
mov
dec
inc
pop
jo
add
xchg
into
repnz
int
inc
stos
jne
xlat
arpl
jno
inc
inc
adc
or
inc
dec
loopne
push
push
xor
iret
dec
pushf
bound
imul
mov
rclb
shll
xchg
jns
adc
je
inc
mov
jns
inc
lea
jecxz
push
jb
fistpl
and
movsl
inc
out
jge
mov
popa
stos
bound
adc
pop
adc
mov
pop
xor
ret
data16
movsb
push
dec
adc
or
insl
mov
adc
adc
and
and
andl
cmpsl
int3
mov
sti
cltd
and
shl
sub
jge
je
xor
outsl
nop
cmp
js
leave
mov
fdivr
jne
lds
adc
jle
ret
stos
mov
je
pop
mov
cli
stos
scas
add
lods
jb
sbb
cmp
adc
mov
lods
pop
add
test
dec
push
mov
in
adc
fmuls
mov
fldenv
mov
orb
inc
out
mov
add
lods
sbbl
ja
inc
je
cmp
jne
and
icebp
daa
pop
aad
and
push
out
mov
adc
test
js
cmp
insb
mov
bound
fs
in
mov
test
daa
jmp
mov
jmp
pushf
cli
pop
data16
xchg
addr16
mov
lahf
mov
ss
lea
and
add
cltd
push
clc
cmp
xor
push
ja
scas
sub
leave
xchg
and
jns
out
mov
cld
out
xor
and
adc
and
dec
xchg
std
arpl
repnz
aaa
jl
xor
cmp
pushf
dec
insl
xlat
push
cltd
or
lock
iret
je
cltd
lods
sub
test
enter
out
mov
lock
in
leave
aad
mov
es
xchg
sbb
xlat
mov
and
fldt
mov
mov
xlat
fistpll
pop
movsl
pop
xor
jo
push
mov
inc
sarb
rorb
sti
dec
cmp
sti
xor
mov
gs
scas
or
cmp
insl
cld
mov
ja
jnp
mov
push
fbld
addr16
daa
mov
mov
popf
pushf
sub
test
mov
xchg
stos
inc
mov
cmpsl
pusha
mov
jge
shl
rcr
sub
outsb
add
fistpll
stos
in
imul
movsb
cmpsl
sti
xchg
cmp
mov
dec
cmp
and
push
inc
dec
sbb
jmp
les
sub
fiadds
ja
push
mov
xlat
or
andb
xor
add
jle
movsb
divl
xor
push
fistpll
lret
xchg
add
push
sub
into
scas
mov
jnp
push
popl
daa
loop
adc
mov
sbb
andb
sbb
push
mov
pusha
data16
aas
pop
out
mov
call
or
adc
dec
jae
dec
imul
inc
ror
lea
fcoms
ds
and
js
scas
or
sub
into
aaa
mov
std
loopne
insb
mov
loope
push
stos
ja
fstpl
mov
lods
testb
std
xchg
adc
pop
push
push
or
popf
mov
dec
scas
mov
xor
xor
pushf
add
mov
add
cmp
mov
fadd
inc
scas
push
dec
lcall
cmp
xor
inc
jmp
inc
cmp
jecxz
adc
shll
jne
fnsave
test
sbb
lock
or
mov
addr16
lea
sub
rclb
dec
sbb
xor
les
and
negb
cltd
lods
or
mov
insb
mov
mov
xor
gs
ficompl
mov
mov
stos
mov
js
hlt
call
fnsave
pop
ret
test
or
in
mov
dec
insb
lcall
jecxz
fwait
int
sub
add
lahf
mov
push
dec
pop
in
rcl
fiaddl
clc
sti
enter
and
push
or
pop
fcoms
xchg
arpl
packsswb
push
inc
cmp
ds
iret
jmp
sbb
rorb
lods
mov
lcall
mov
add
xchg
xchg
popf
loopne
push
mov
out
popf
cmp
out
rorl
dec
sahf
shlb
bnd
jp
jl
sahf
sti
xchg
pop
lods
cmp
dec
pop
aad
icebp
sbb
pop
pop
testl
cwtl
or
inc
pop
inc
lcall
enter
insl
xchg
add
aas
in
stos
add
sahf
adc
lcall
hlt
into
sahf
aad
cltd
sbb
negl
loope
test
pusha
mov
inc
jp
or
shll
mov
insl
pop
or
sar
push
aam
ss
cmpsl
clc
sbb
sahf
leave
xchg
push
ljmp
fmul
dec
js
insb
jp
adc
addl
ficoml
mov
ud2
dec
pop
jl
mov
mov
and
jns
mov
adc
jl
xlat
push
pop
fs
mov
sub
pop
sub
mov
push
sbb
push
cltd
xchg
xor
cmp
into
popf
dec
loopne
push
imul
pop
mov
pop
jne
cmp
jns
sbb
daa
push
std
jmp
out
aas
lret
pushf
sub
jb
push
adc
pop
mov
stc
lahf
push
pop
xlat
clc
xchg
cli
inc
popa
cmp
sub
pop
popa
xor
and
pop
pop
cs
xchg
and
mov
mov
addr16
pop
and
jnp
mov
jo
int3
sbbl
js
ret
inc
mov
cltd
mov
lods
cmp
adc
jle
jbe
pop
mov
pop
daa
or
sti
inc
popf
inc
rorb
rclb
imulb
jle
ss
lods
add
cmp
fadd
push
xchg
push
ss
sbb
lret
test
jp
sbb
iret
inc
outsb
xchg
les
xor
lock
xchg
popf
dec
movsb
push
cmp
hlt
pop
mov
lcall
stos
inc
push
xchg
insb
stc
add
mov
rcrb
cli
mov
dec
xchg
sbb
aaa
mov
shll
mov
and
test
or
imul
inc
sbb
cli
adc
pop
popl
lods
sahf
fdivrs
push
arpl
xchg
mov
out
mov
in
pop
pop
mov
lcall
inc
mov
sub
mov
or
rorb
push
mov
cs
xor
xchg
cs
in
gs
std
lret
or
mov
testb
mov
xlat
mov
mov
test
xchg
push
push
int3
xor
xor
cmp
cmc
cmpsl
das
add
jl
out
aad
jecxz
xorb
es
mov
test
jno
lcall
call
and
mov
mov
pop
push
sbb
pop
cmpsb
leave
pusha
es
aam
push
dec
or
mov
mov
mov
sub
icebp
popa
jecxz
pushf
pushf
sbb
clc
lods
psubusb
mov
xor
push
movsb
out
mov
mov
inc
clc
jae
mov
pop
arpl
jae
negb
jnp
fs
frstor
add
imul
shlb
out
mov
addr16
adc
jecxz
mov
xchg
push
adc
clc
cmp
cmp
imul
xor
adc
or
mov
cmp
mov
sub
add
inc
mov
pusha
jl
in
test
nop
xor
mov
subl
in
adc
repz
xor
push
mov
pop
outsb
push
mov
xchg
hlt
ljmp
xchg
cld
test
fwait
cmp
mov
stc
cmp
lahf
add
inc
and
mov
jmp
rcrl
jns
out
jecxz
xchg
out
pusha
xor
ja
lock
dec
stos
sbb
arpl
and
and
cwtl
aam
jmp
jne
insl
mov
mov
cs
sub
push
sub
sbb
sbb
test
aad
mov
adc
sub
push
dec
daa
adc
mov
pop
adc
jae
jp
lret
fnstsw
test
xor
in
cltd
ficompl
sub
das
mov
mov
adc
clc
sbb
mov
cltd
push
testb
icebp
hlt
sti
in
dec
dec
sub
push
or
ja
stc
sub
js
movsl
stc
pop
or
sub
adc
mov
mov
add
aam
sub
rclb
sub
pop
pop
repnz
mov
mov
test
sbb
push
aas
mov
and
insb
adc
xor
inc
shlb
push
push
adc
in
aas
cs
add
push
or
leave
xchg
sbb
push
sbb
fcmovb
and
pop
adc
xchg
fisttpl
mov
inc
add
mov
data16
das
jecxz
push
add
mov
push
test
cmpsl
pusha
add
xchg
cmp
jbe
leave
push
rcl
lret
dec
mov
push
enter
sahf
imull
lret
cmp
lret
ljmp
ljmp
hlt
scas
dec
lret
xchg
in
imul
pop
jbe
aad
mov
cmp
popf
mov
fidivs
in
test
cmp
push
pop
pusha
jno
movsl
divl
and
lret
loope
loope
add
sbb
in
push
push
mov
push
dec
inc
test
xor
push
cmp
std
sbb
in
mov
out
in
je
pop
cmp
inc
push
les
lcall
sbb
push
xchg
in
sbb
cmpsb
shll
rolb
pusha
add
loop
mov
add
aaa
in
inc
shrb
jno
xlat
ret
pop
movsb
out
cmp
daa
mov
mov
pushl
cmp
ss
mov
pop
push
sbb
xchg
leave
sbb
imul
mov
rcrl
xchg
in
movl
push
jno
insl
stc
mov
pusha
add
adc
xchg
adc
insl
lret
lds
sub
lea
adc
loop
cli
mov
sub
pop
cmp
inc
sub
adc
lods
or
mov
imul
inc
and
addl
mov
mov
mov
ja
insb
imul
mov
jl
jne
pop
in
cltd
lods
dec
xor
out
lret
test
add
sbb
push
iret
aas
sbb
in
mov
cmpsl
adc
insl
xchg
jmp
add
stc
mov
out
scas
jb
push
cltd
cmpsl
push
cs
data16
out
lea
and
adc
push
loopne
loopne
mov
fwait
push
push
aaa
ljmp
push
cmpsb
outsl
insl
outsb
jbe
dec
xchg
add
int3
stos
fucomp
nop
push
jbe
pop
xchg
jbe
mov
jbe
movsl
or
fstpl
xchg
xor
fdivrs
fsts
les
jp
mov
std
sbb
push
push
scas
sarl
jae
xchg
pop
inc
jmp
cmc
in
jae
lret
loopne
add
cmp
inc
rcrl
shl
push
fisubrl
daa
test
xor
xchg
aaa
jo
mov
sbb
mov
inc
and
mov
test
add
aad
lock
minps
or
or
fnstsw
mov
pop
addr16
or
stos
adc
imul
outsb
mov
push
cli
sub
cli
leave
inc
dec
in
or
lret
shlb
xlat
push
push
arpl
ret
fwait
ja
jbe
push
test
test
sbb
iret
aad
pop
ljmp
iret
fnstsw
xor
lret
bound
ret
pop
push
pop
jno
add
cli
cld
pop
movsb
mov
add
xchg
jno
jo
fldcw
push
nop
scas
bound
lock
xchg
sub
loope
lret
pushf
mov
gs
jo
and
push
jo
loopne
dec
mov
ss
aas
lock
sub
repnz
xchg
cltd
es
adc
mov
push
jne
addb
loope
jne
rcll
and
cmp
jbe
add
cltd
idivb
or
rorb
arpl
and
mov
lcall
inc
xor
cmp
add
adc
rclb
xchg
cmp
jmp
hlt
inc
hlt
out
pand
inc
inc
dec
dec
push
lock
and
incl
lahf
enter
icebp
pop
test
insl
adc
jno
out
and
lret
push
jg
adc
shll
and
xchg
rorb
mov
pop
loop
test
sub
push
sub
dec
push
frstor
mov
mov
push
jge
dec
push
cs
sbb
mov
jecxz
jp
std
jge
dec
push
out
test
in
xchg
push
mov
cld
es
test
roll
and
leave
or
jmp
xchg
pop
pop
ss
cmp
ret
imul
insb
loope
inc
mov
sub
sub
ljmp
sti
es
mov
test
nop
outsb
inc
push
jmp
cld
shrb
fisubs
mul
sub
mov
shlb
pop
ss
adc
cmp
mov
pop
xchg
jmp
add
pop
jge
mov
pop
js
mulb
adc
or
inc
out
data16
and
fisubrs
popa
xor
cmc
das
mov
je
jle
mov
cmove
into
int3
or
bound
xchg
mov
loope
hlt
negl
cs
loopne
into
xchg
mov
mov
sbb
cltd
pushf
jno
mov
in
dec
adc
and
sti
push
inc
outsb
push
test
iret
xor
out
das
sbb
cmp
or
sbb
imul
aad
ret
cwtl
sub
outsl
push
ljmp
push
aam
out
loope
nop
aaa
ljmp
jecxz
daa
jns
dec
mov
or
push
pop
and
dec
adcl
mov
push
mulb
mov
xchg
pop
push
divb
adc
inc
push
cmp
pop
lds
and
popf
sub
out
jb
lahf
loop
idivl
jle
and
movb
call
adc
mov
add
jnp
repnz
jecxz
cld
call
sti
imul
leave
add
cmpsl
or
ret
cli
add
inc
adc
cmpsb
inc
imul
sti
fcomps
aas
jp
mov
cwtl
mov
mov
jle
xor
mov
call
mov
pop
lods
ss
stos
ljmp
jge
adc
clc
adc
sbb
or
mov
in
pop
dec
add
outsl
in
dec
lret
ljmp
fdivl
popf
mov
lret
sub
xorb
fdivrs
adc
jle
shrl
addr16
sub
and
sbb
rclb
inc
sub
fisubrs
movsl
or
mov
cmc
sub
inc
enter
mov
ret
mov
mov
pop
repnz
cli
mov
aam
fs
ficoml
aas
sbb
jb
leave
lods
push
push
sahf
es
sahf
push
imul
push
or
cli
pop
cmp
loop
in
fisubs
xchg
push
adc
arpl
add
sbb
sbb
push
adc
sub
shl
bound
in
aam
and
test
loopne
jnp
sub
xchg
and
fs
pop
sbb
sbb
mov
jo
xlat
leave
inc
outsb
arpl
xor
in
in
lods
pop
inc
dec
stc
cmp
out
push
daa
fistps
pop
xor
das
icebp
mulb
mov
jl,pt
ficoms
stos
addb
aad
xchg
insb
loop
pop
sbb
mov
popa
cli
ret
mov
loop
movsb
jo
bound
cmpsl
lods
xchg
xor
into
stos
imul
sub
mov
pop
stos
pop
loope
and
jmp
push
ffree
lcall
imul
lds
mov
push
imul
dec
ja
fldl
push
push
leave
cmp
daa
cmp
xor
leave
add
xchg
sub
bound
jmp
mov
dec
push
daa
addl
push
bnd
mov
push
mov
pusha
test
push
cmp
mov
adc
bound
or
xorb
mov
cld
inc
aas
sbb
mov
or
pop
rcrb
stc
adc
call
pop
je
push
or
lods
dec
data16
adc
inc
aam
jge
mov
jae
cmp
fnsave
fsubrl
scas
cmc
std
les
cmp
mov
push
xchg
orb
mov
push
adcb
push
ja
inc
pop
int3
and
scas
loop
call
adc
inc
dec
into
or
push
ljmp
sbb
inc
test
out
adc
adc
int
or
outsb
dec
stos
sbb
or
rcrl
pop
sub
add
mov
cmpsl
add
jl
add
jl,pt
mov
mov
inc
lods
and
cmp
pop
arpl
sub
cld
roll
pop
mov
jnp
xor
aas
mov
das
cld
iret
cmp
or
xlat
mov
push
dec
adc
testb
out
jb
jmp
sbb
flds
adc
sarb
or
sub
jle
fnstcw
xchg
add
roll
cmpsl
adc
xor
loopne
bound
test
fwait
push
test
add
pop
sbb
fwait
push
rol
add
inc
aaa
into
push
stos
es
repnz
push
lods
pop
dec
pop
or
sbb
add
sbb
cwtl
push
sar
sahf
inc
call
mov
jnp
xlat
call
adc
inc
mov
setae
mov
lcall
ret
scas
shlb
test
push
aas
aad
or
pop
and
es
sbb
pop
test
data16
sub
fld
add
xor
and
sbb
mov
mov
fptan
loop
pop
std
mulb
jae
sbb
mov
cwtl
dec
mov
mov
jecxz
mov
push
out
fidivrs
test
shrb
jb
mov
repz
and
mov
adc
fnsave
adc
mov
pusha
pop
leave
dec
jmp
add
popa
push
cmp
sbb
and
fs
sbb
pop
jle
push
fstl
fbld
pop
jp
xor
and
aad
test
stos
inc
push
jle
mov
fdiv
rcrl
dec
or
xchg
in
push
popf
jle
xchg
call
cmp
cmpsl
xchg
scas
mov
out
adc
adc
xor
incl
daa
into
and
or
aad
mov
mov
cmp
lock
nop
fistl
and
in
fdiv
xor
inc
inc
mov
ja
popf
and
push
jnp
add
xor
fcompl
xchg
adc
into
loopne
inc
mov
jb
pop
insl
mov
dec
enter
inc
icebp
jae
es
test
imul
adc
subl
cmp
push
outsb
popa
sub
out
pop
icebp
pop
cmp
outsb
shlb
sub
stos
push
sub
je
sub
mov
adc
test
xchg
outsl
lock
aas
aam
icebp
movsb
stos
lea
dec
daa
mov
imull
push
cmp
inc
std
xchg
sbb
xor
adc
std
or
and
and
dec
sbb
cmp
sub
add
adc
cmp
mov
cmc
out
xchg
pop
adc
xchg
add
sbb
jne
push
jae
push
sbb
andl
mov
dec
jle
push
mov
js
mov
insb
movsb
nop
mov
mov
sub
addr16
cmp
sub
cld
out
in
ror
stos
fdivs
subb
pop
outsb
jne
pop
or
mov
shrl
test
pop
cmp
adc
arpl
dec
add
mov
xchg
xchg
mov
fisubrs
sub
arpl
push
jle
jae
jge
jo
mov
icebp
mov
jmp
mov
subl
js
loop
int3
jns
or
sub
das
add
jae
fists
add
lret
fstps
pop
or
gs
dec
xchg
dec
inc
pop
out
mov
sub
imul
xor
and
out
dec
in
sar
repz
cmp
sbb
sub
popa
pop
aas
mov
test
fistpll
mov
clc
pushf
inc
jno
adc
mov
xchg
xlat
xor
fisubrs
test
add
hlt
jg
aas
inc
dec
sbb
lea
jp
cmc
mov
insl
iret
insl
popa
nop
insb
push
arpl
pop
inc
jecxz
int3
mov
jecxz
dec
sbb
aam
jo
and
ret
push
mov
push
push
add
fwait
hlt
pop
lret
dec
sti
in
aam
mov
lret
xor
shl
dec
ss
or
xchg
cmc
pop
xor
inc
mov
lds
xor
fcoml
and
xchg
ret
push
xlat
lock
dec
notl
xlat
jecxz
mov
cmc
dec
call
push
gs
dec
xor
jmp
notb
add
fcomps
mov
mov
cmp
bts
dec
aam
jns
std
mov
dec
mov
test
dec
pop
add
or
loope
fidivrl
clc
daa
outsl
xchg
cmpxchg
dec
jns
idiv
jge
xor
es
jns
into
sub
mov
xchg
xchg
fimull
inc
mov
sahf
pop
stos
mulb
outsb
sbb
inc
sub
test
push
cmp
fdivrl
push
cltd
inc
ds
subb
mov
pop
and
push
mov
ljmp
dec
and
mov
test
jb
xor
inc
lret
sbb
inc
dec
into
dec
fwait
mov
ds
adc
pushf
fwait
nop
rcll
push
mov
mov
xchg
push
loope
addr16
scas
lahf
push
daa
in
or
movsb
dec
dec
pop
and
clc
jbe
or
adc
testl
or
add
fsubr
pop
je
fsubr
adc
mov
adc
sbb
xor
lahf
mov
jns
adc
push
push
in
lods
andl
dec
ret
xor
sub
aas
add
inc
inc
divl
out
mov
mov
shll
cmpsb
sbb
leave
xchg
icebp
repz
cmp
xchg
push
scas
xor
xchg
pushf
mov
scas
sub
push
lret
adc
icebp
jp
xchg
cmpsl
lret
lock
das
push
xor
jbe
or
inc
hlt
loop
addb
sti
and
incl
rorl
and
and
sahf
fdivp
xchg
mov
mov
xor
mov
jnp
call
dec
lea
lcall
adc
push
sbb
stos
mov
xor
outsl
in
insl
sub
cwtl
push
jbe
lret
xor
divb
sbb
mov
mov
mov
fsts
inc
pop
out
sbb
and
jmp
add
loope
aam
and
test
mov
pop
loope
fs
flds
aam
js
pusha
lcall
xchg
loop
mov
mov
mov
roll
inc
imul
and
setb
in
fimuls
jmp
ja
jne
pushf
leave
xor
jge
mov
mov
cs
jbe
je
fistpl
fwait
rcll
mov
out
in
dec
sbb
mov
mov
push
xor
cmc
shl
adc
sbb
mov
push
daa
add
scas
nop
sbb
cmp
movsl
je
lcall
and
leave
jp
dec
rorl
and
movsb
clc
pop
repnz
movhps
mov
mov
dec
xchg
xor
mov
inc
sub
fwait
andb
int
push
jns
jmp
fs
jle
cli
jp
repnz
pop
jbe
add
mov
mov
xchg
inc
mov
xchg
int
mov
sbb
jb
cwtl
pop
jmp
mov
loop
cwtl
push
mov
push
jecxz
xchg
je
push
pop
sbb
mulb
lock
and
in
iret
add
outsl
enter
dec
inc
and
ss
ljmp
movsb
clc
stos
cmc
xor
mov
daa
xchg
ljmp
outsl
lret
xor
sbb
gs
loop
mov
cmp
cmp
mov
stos
bound
pushf
dec
rclb
sbb
fucomp
xchg
adc
lcall
nop
js
push
andl
pop
cmpb
sub
add
sub
xchg
inc
or
push
mov
aaa
repnz
movsl
lea
clc
loopne
add
push
ret
lcall
sub
pop
rorl
push
mov
pusha
mov
and
and
push
push
jg
imul
les
cs
or
adc
stos
push
ds
xor
dec
lods
loop
sbb
add
push
notb
and
out
jl
pop
cmp
scas
mov
int3
test
sbb
fcoms
dec
shll
dec
xor
and
inc
icebp
cmp
lds
pop
cmpsl
adc
test
into
jne
leave
hlt
andb
ds
mov
push
dec
mov
sbb
out
add
lds
jnp
out
daa
pop
inc
movsb
push
lock
loop
movsl
fnstenv
subb
add
adc
shll
dec
ret
sahf
lods
bound
shlb
inc
push
ret
mov
inc
test
mov
xchg
loopne
dec
push
bound
imul
fidivrs
cli
sbb
mov
push
scas
pop
inc
aad
inc
push
repz
mov
addb
js
inc
cmp
in
add
ds
xchg
mov
or
sub
jbe
xlat
xchg
int
add
inc
test
mov
cmc
push
mov
mov
dec
xor
out
dec
cwtl
mov
js
je
lock
push
test
jle
cmp
or
mov
sub
mov
lea
fistps
or
dec
cmp
dec
in
mov
mov
dec
fldcw
or
dec
mov
push
pop
or
or
aad
jp
adc
popa
push
dec
add
arpl
xchg
cmpsb
mov
push
mov
mov
pop
push
push
imul
popa
lea
shll
mov
or
int
xor
neg
xchg
lods
push
push
adc
inc
inc
call
jge
mov
in
or
lock
out
sahf
push
jne
cld
mov
pop
insb
popf
add
testl
inc
jmp
rcrl
add
push
add
out
negb
jae
cmp
sub
push
mov
and
push
push
addr16
clc
aam
pop
xchg
imul
xlat
adc
push
sbb
pop
mov
pop
call
pop
frstor
xor
jmp
push
out
xchg
or
into
push
mov
in
pop
cmp
insl
dec
add
push
outsl
aas
pop
rclb
add
stos
and
rcr
xchg
scas
aam
gs
mov
cltd
xor
insb
popa
cmp
mov
jne
sti
pop
sbb
sbb
xchg
lahf
push
icebp
mov
sarb
mov
movb
arpl
sahf
imul
mov
inc
lods
repnz
and
add
adcb
int
scas
mov
push
pop
imul
aam
daa
mov
adcl
imul
clc
daa
mov
push
aaa
testl
mov
xor
dec
loopne
sar
fcomps
push
push
loopne
cli
push
cmp
dec
ja
scas
inc
cmp
in
lea
or
mov
jnp
push
jne
repnz
rolb
mov
stos
cwtl
xor
and
xchg
out
mov
cmpsb
push
stos
push
invd
mov
adc
imul
jns
add
cmp
pop
add
push
pop
jae
lods
js
dec
lret
inc
adc
mov
bound
insb
mov
jnp
or
pop
ds
cli
add
add
outsb
mov
lods
and
out
sarb
and
bound
and
jg
sti
mov
jle
rcrb
pop
xor
pop
insl
and
and
ljmp
cs
dec
addl
out
sarb
scas
pop
loopne
or
jl
inc
pusha
ret
bt
mov
insl
mov
ds
xor
lahf
add
xchg
in
mov
xchg
push
push
mov
lret
dec
bnd
daa
cmpsb
push
sbb
fistpll
add
pop
push
push
xor
add
or
and
ffreep
js
enter
dec
xchg
cmp
or
sti
gs
cmpsl
repnz
add
mov
cld
and
sbb
adc
lds
imul
addr16
xchg
cmpsl
sbbb
jo
mov
ja
sbb
dec
and
or
mov
lock
and
push
fcompl
lahf
scas
fildl
testl
lret
in
repz
popa
xor
rcr
ljmp
xor
lods
scas
and
inc
insl
jne
pop
and
mov
and
add
add
cmc
cmpsb
stc
jne
fisttps
loope
imul
in
mov
xchg
cwtl
pop
call
movb
je
and
mov
mov
adc
scas
popa
xorb
mov
push
dec
or
in
or
je
movsl
jge
hlt
dec
push
add
push
add
jbe
rcrl
sarb
add
pop
jl
loopne
push
jp
jae
dec
cs
ljmp
icebp
data16
xor
pusha
mov
inc
inc
stos
xchg
cwtd
or
inc
mov
xchg
in
or
cwtl
outsb
inc
pop
fsubrs
lds
scas
push
cmp
push
fildl
xchg
lods
mov
adc
mov
pop
jle
pop
dec
pop
push
mov
popf
xchg
or
js
int
ret
jmp
je
idivl
cltd
mov
xor
lock
and
push
hlt
rcl
aaa
call
cwtl
aam
mov
icebp
int3
jmp
pop
sti
pop
jecxz
rcl
repz
ds
popa
jae
inc
xchg
enter
push
cmp
push
xor
dec
mov
rcll
ret
fs
out
adc
lahf
inc
cmp
push
arpl
and
jg
sub
loopne
out
inc
mov
test
nop
xor
sub
jecxz
mov
in
inc
sub
sti
in
inc
mov
xor
or
cwtl
add
fnstenv
xor
arpl
movsl
pop
lock
lahf
fs
mov
mov
test
int
sub
pop
push
std
inc
iret
inc
ja
enter
or
dec
or
cmp
pop
push
stos
jmp
pop
mov
mov
sbb
mov
loopne
pop
test
cs
movsl
fcompl
cltd
xor
out
sub
pop
inc
outsb
scas
dec
mov
push
inc
gs
xchg
pop
out
mov
xor
xchg
adc
xchg
das
dec
fstl
ljmp
inc
mov
jmp
les
fstpl
ficoml
mov
aaa
mov
push
hlt
adcl
xchg
cmp
add
xor
icebp
nop
xor
rcr
mov
addl
mov
push
jp
das
icebp
pop
mov
aam
and
dec
daa
daa
mov
jo
iret
aam
in
jbe
and
je
jne
frndint
test
cmp
mov
roll
test
imul
or
jecxz
inc
fptan
cli
xlat
xor
loope
dec
push
dec
mov
pop
xchg
push
mov
pop
xlat
and
xchg
and
mov
xchg
inc
xchg
je
loope
rolb
das
jbe
in
clc
scas
inc
fadds
inc
push
call
or
xchg
je
jbe
cltd
cli
cmpsl
not
or
push
fists
lods
sbb
lcall
sbbb
cmpsb
sub
push
xchg
mov
jnp
cld
xor
xchg
nop
mov
xor
xor
or
pop
jae
imul
das
outsb
and
jle
inc
inc
dec
std
cmp
out
je
inc
data16
mov
or
mov
jae
nop
sub
xchg
dec
push
movsl
pxor
loopne
push
jne
and
fbld
cwtl
sbb
push
aam
cwtl
dec
and
js
cmp
pushf
into
dec
roll
pop
jle
sti
pop
testb
sub
sbb
cs
push
xchg
adc
mov
sub
xchg
addr16
pop
dec
mov
add
jne
cmp
cmp
sbb
daa
das
add
fcmovnu
adc
dec
jp
xlat
and
in
in
loopne
cmp
hlt
inc
in
jbe
jns
inc
xchg
inc
pusha
pop
inc
xchg
and
stc
fistpl
mov
stos
scas
dec
adc
or
add
cmpsb
add
out
sub
movsl
sbb
shlb
sbb
mov
sbb
push
fsub
es
and
insb
xchg
rcrl
imul
push
xorl
rorl
push
lret
repnz
push
and
rcll
sub
xlat
mov
mov
ljmp
aaa
dec
push
sub
xchg
iret
adc
ja
das
ds
insl
popa
mov
pop
lea
xchg
xor
imul
aas
sbb
jp
mov
dec
dec
out
add
sbb
mov
jl
cmpsb
xchg
push
or
push
jle
add
rcrb
pop
push
movb
push
andb
cmc
jns
push
outsl
jl
fisttpl
xor
data16
pop
lcall
stos
push
movsl
xor
mov
sbb
mov
or
push
adc
out
inc
jbe
jae
push
mov
adc
mov
cmc
jo
jmp
xchg
jns
call
and
sbb
jae
and
fldenv
inc
push
push
iret
cmp
xchg
add
mov
dec
out
ret
inc
lret
mov
hlt
int
pop
lahf
xor
popa
dec
cmc
in
push
push
lret
call
lret
dec
inc
pushf
testl
jo
or
mov
jl
dec
test
push
mov
dec
or
popf
pop
jecxz
mov
push
add
mov
call
in
imul
sbb
mov
clc
xchg
movsl
push
bound
das
dec
shlb
xchg
push
sbb
rorl
cmp
inc
lahf
mov
sub
lcall
adcb
fldenv
clc
hlt
sub
xchg
arpl
and
std
mov
add
stos
mulb
loope
sbb
mov
rclb
in
xchg
pusha
push
in
xorl
jne
lods
jp
cmc
orl
jmp
test
jecxz
stc
mov
fstps
les
nop
repnz
cwtl
sub
sahf
shll
jae
xchg
lret
push
cmc
in
push
je
or
dec
xor
les
jecxz
imul
mov
adc
call
adc
fcompl
xchg
add
cmp
mov
divps
orl
inc
nopl
cmp
jmp
lods
fcomp
dec
imul
in
vphadduwd
bound
jecxz
inc
sub
je
mov
cltd
cmpsb
js
push
mov
pop
sti
and
mov
popf
scas
shlb
sbb
notb
mov
sub
add
push
negb
push
cmp
mov
test
adc
nop
cli
adc
xchg
mov
mov
cmp
fcmovbe
or
jnp
cmp
loopne
lcall
hlt
clc
xlat
daa
rorl
mov
mov
je
call
mov
lgs
xchg
jno
mov
insb
dec
lds
cmp
in
stos
std
sub
adc
pop
test
jmp
cmc
push
cmp
ret
push
push
jp
pushf
stos
pop
xchg
js
loopne
inc
jecxz
test
cwtl
mov
xchg
inc
jns
xor
pusha
push
or
adc
mov
hlt
push
fs
jo
dec
xchg
sti
gs
dec
mov
mov
inc
mov
push
mov
cmpsl
adc
xchg
mov
xchg
out
incb
imulb
cmc
sub
and
pop
out
inc
movsl
cmp
cmp
insl
popf
aas
out
jae
dec
adc
lret
cmc
dec
cmp
fdivr
xor
clc
cmp
mov
xor
mov
fs
cwtl
lock
push
popf
xor
mov
adc
rcrl
lds
arpl
pusha
push
rclb
cmp
test
cmp
in
pop
sub
sbb
mov
das
movsb
adc
push
and
xchg
repnz
ret
jno
mov
fstpt
xchg
enter
mov
movsl
into
inc
movsb
jo
xor
cmp
adc
fstpt
lock
adc
mov
or
push
pop
cs
inc
rorb
xchg
mov
int
ja
mov
hlt
outsb
cmp
add
jnp
out
mov
cwtl
fwait
mov
push
pop
out
out
call
adc
dec
sahf
fisubrs
adc
js
pop
mov
sub
inc
out
outsl
lods
mov
shrb
rcrl
xor
xor
cmp
cmc
adc
mov
dec
lret
and
sub
daa
jecxz
inc
pop
lods
push
sub
cmpsl
addl
xchg
mov
int3
add
cmp
and
lret
ss
in
mov
mov
cmpl
sub
jnp
inc
pusha
sub
imul
inc
shrl
je
dec
jb
mov
mov
pop
inc
nop
outsb
cli
adc
add
lods
cmp
dec
ss
loopne
lahf
aaa
loop
jbe
sbb
stos
jg
roll
insl
cltd
sbb
mov
xchg
jmp
imul
xor
movsl
in
lock
shlb
cmpsl
mov
sbb
cmpsb
fcoms
or
push
shr
cltd
add
and
add
push
mov
jns
mov
and
jbe
xor
int
clc
mov
ds
sbb
inc
js
pop
jmp
scas
punpckhwd
enter
jecxz
adc
scas
fcmovnbe
adc
sub
sub
cmpsl
pop
mov
scas
pop
or
pusha
insl
imul
xor
or
in
inc
push
xchg
inc
or
movsl
xchg
mov
enter
jecxz
scas
xchg
pop
cmp
aaa
movb
aas
loopne
in
xchg
insb
sbb
add
mov
stos
sub
ss
test
cltd
push
rcll
push
xchg
inc
popa
pop
inc
lret
stos
or
ds
mov
push
loopne
jns
cld
in
popf
fdivrl
loope
fs
push
mov
inc
xchg
adc
andl
jl
arpl
cmpsb
push
sbb
xchg
aas
push
sbb
push
jb
das
jne
jle
sbb
xchg
rcr
mov
test
pop
xor
jae
les
jmp
add
stos
mull
xor
jge
outsl
sub
mov
aad
in
out
movsl
jecxz
aam
std
push
call
jp
jp
mov
pop
adc
insb
mov
and
ss
jae
xlat
inc
test
sahf
lret
pop
sbb
not
mov
mov
je
in
mov
std
or
push
fsts
jno
lods
psubsw
mov
mov
and
xor
jl
dec
xor
rclb
sub
add
dec
fdivp
sbb
mov
fistps
cmp
mov
mov
pop
mov
dec
cmp
cld
pop
mulb
pop
xorb
cld
adc
outsb
and
bnd
int
jno
pop
xor
jle
fistl
push
aas
fwait
aas
push
mov
pop
sub
or
dec
shll
mull
cmpsb
das
pop
aam
mov
push
ret
icebp
sbb
push
ja
pop
test
jo
stos
mov
das
ljmp
adc
push
and
leave
or
adc
js
fidivl
loop
mov
and
shrl
and
jp
jnp
movsl
push
mov
lds
mov
add
scas
inc
xchg
xor
sbb
insl
daa
jbe
cltd
cmp
jle
dec
mov
push
dec
arpl
pushl
dec
fnsave
fmuls
aas
test
push
add
imul
dec
popa
push
push
out
imul
mov
adc
mov
outsb
loopne
in
fnstenv
pusha
jno
pop
int3
or
test
jecxz
outsl
stc
or
cmp
jb
sbb
scas
cwtl
shl
stc
rorb
mov
xchg
dec
dec
fsub
sbb
ljmp
mov
popa
jnp,pt
sub
es
out
dec
push
sarb
insl
adc
dec
jo
pusha
jns
subb
mov
jne
and
jge
int
sub
in
mov
and
into
fildl
popa
dec
icebp
mov
xchg
add
in
push
dec
ret
dec
and
iret
adc
mov
cmp
js
sub
dec
push
cwtl
xor
sbb
sahf
scas
push
fs
bound
xlat
mov
and
add
add
lahf
test
pop
test
dec
gs
and
lds
sub
cmp
cmpsb
rcr
lcall
cwtl
pop
fldt
cwtl
fisttpl
xor
and
mov
adc
enter
jae
shrb
popa
mov
push
daa
add
jb
in
cmp
cmc
cli
xchg
js
test
pop
sahf
mov
pop
pop
mov
es
mov
repz
fst
ss
pusha
inc
subb
adcl
fildll
enter
dec
cmp
shl
mov
ss
inc
push
sahf
push
pop
pop
add
mov
mov
xor
or
insb
les
push
jp
lcall
ja
mov
sub
cmp
jle
jecxz
mov
adc
sbb
sbb
and
xchg
mov
adc
pop
fcomps
sub
fcomps
fldenv
in
jp
or
outsl
sub
lahf
mov
movsl
or
sbb
ljmp
cltd
sbb
fs
insb
pop
cmp
xchg
xchg
popf
sbb
aam
xchg
cmp
pop
and
jge
and
ret
fldenv
adc
popa
fmull
ljmp
inc
sbb
jmp
dec
and
sbb
mov
mov
push
cmpsb
ret
inc
out
stos
jo
mov
dec
mov
loope
pop
mov
in
xlat
sbb
jmp
mov
and
dec
idiv
push
fimuls
add
mov
fstpt
in
adc
lahf
out
pop
cmpsb
jg
stos
push
test
adc
dec
notl
ffreep
mov
xlat
xchg
out
ret
iret
mov
xchg
pop
mov
cmp
addr16
cmc
jbe
and
int3
mov
sub
rorl
mov
inc
int
inc
mov
jle
xchg
lods
mov
add
adc
shlb
push
jo
inc
and
jae
popf
aaa
int3
sar
mov
lods
cmp
xlat
fldt
test
daa
mov
neg
ret
jnp
rorb
mov
add
jmp
push
cmp
push
cmpsl
out
int3
jns
cmp
jb
pop
pop
adc
aad
or
pushf
cmc
push
fsubrs
pop
and
jg
cltd
ret
scas
call
lock
nop
jge
sub
xor
mov
sbb
pushf
ret
mov
mov
incl
cmpsb
fbld
push
dec
aaa
jae
fmuls
xchg
sub
aas
fidivl
lods
out
inc
cmpl
xchg
sub
mov
fidivs
addl
gs
out
test
enter
sbb
xor
repnz
movl
aad
and
sub
hlt
enter
cmp
xchg
xchg
xor
test
jl
in
leave
ds
insl
mov
enter
fs
outsl
int3
sub
leave
imul
enter
xchg
lods
bswap
sbb
imul
mov
or
xor
cs
lret
inc
jp
out
in
in
push
test
fwait
fs
dec
lret
movsb
pop
lcall
cli
pop
inc
adc
jp
fs
stc
pop
outsl
sub
xor
cmp
jno
sub
xchg
mov
ds
pcmpeqd
scas
ret
ret
inc
arpl
xor
sub
ljmp
loop
sbb
sub
xchg
jb
inc
cmpsl
sarb
lock
pop
out
int3
std
lods
or
pop
and
aad
ljmp
push
leave
sbb
in
xlat
cmc
mov
clc
sbb
push
and
es
ret
hlt
call
andb
xor
addb
shl
push
in
pop
cltd
es
or
lahf
jno
in
push
test
lahf
mov
xor
add
mov
dec
or
arpl
jo
cmp
cmp
lahf
out
xor
incl
mov
and
cmpsl
mov
jmp
and
sbb
fistl
das
mov
xchg
mov
dec
cmc
jns
pop
in
and
adc
adc
ja
stc
xchg
xchg
arpl
xlat
add
imul
push
or
dec
push
cmp
mov
cmpsl
rcrl
sti
or
cmovne
adc
fstpl
mov
xor
jl
adc
add
push
cld
fidivrs
leave
jne
cmp
into
lahf
fisttpl
repz
mov
imul
lds
or
insl
mov
sub
xchg
dec
sbb
pop
pop
add
lods
or
imul
cmp
xchg
lcall
aas
movsl
not
jb
xlat
push
pop
xchg
adc
xor
je
push
mov
movsl
mov
push
jmp
mov
cld
xlat
and
xchg
push
push
out
call
cmp
scas
xchg
dec
pop
sbb
cmp
jp
outsb
push
rorl
scas
xchg
cmp
sub
and
js
sarb
cmp
mov
dec
jle
cmp
mov
fidivl
pop
xchg
xchg
push
mov
inc
mov
sarb
jo
xchg
in
pop
aas
inc
lods
pop
push
pop
loopne
lret
add
adc
mov
and
imul
inc
test
sbbl
xchg
inc
add
pop
push
mov
inc
jecxz
push
sub
shll
or
inc
fdivrl
xchg
pop
ljmp
nop
or
or
pop
mov
into
jbe
jo
mov
fcmovbe
enter
lds
ja
and
lds
push
jns
push
push
push
and
je
jno
cmp
aas
xchg
icebp
mov
stos
pop
or
fisttpll
pop
cmp
add
lods
in
mov
adc
test
dec
paddsb
xor
push
jl
movsl
inc
mov
loop
cmp
jmp
outsb
sbbl
add
insl
push
cwtl
sbb
in
lods
or
iret
fcoml
roll
sarb
in
stos
jg
xchg
dec
hlt
lds
dec
mov
arpl
fidivrs
jg
mov
ret
or
xor
and
adc
std
lock
inc
pop
or
mov
dec
push
filds
cmp
imul
imul
inc
adc
cmp
pop
fs
add
ret
cmp
inc
or
adc
fcomps
mov
mov
popa
dec
lds
jns
cmpsl
mov
pusha
sbb
jns
hlt
sub
inc
in
decb
ja
mov
scas
xor
pop
lods
outsl
outsl
xor
loop
iret
repnz
jle
iret
call
inc
sbb
sub
xlat
movsb
or
or
enter
insl
jle
fstpl
pop
stos
xchg
into
inc
inc
in
fs
es
scas
push
aad
jo
xor
xor
jnp
flds
pusha
push
mov
push
popf
adc
inc
notb
jnp
cltd
ja
mov
adc
inc
das
fidivrs
inc
loop
rolb
mov
lods
push
in
mov
sarl
cmp
jo
lea
jo
es
mov
dec
dec
movsb
mov
mov
push
into
into
jge
sbb
jmp
pop
xorl
daa
push
dec
xor
or
pop
sub
sbb
add
rolb
lock
xchg
outsb
out
bound
dec
add
mov
push
sub
jg
cwtl
xchg
pop
adc
pusha
mov
test
mov
sbb
xor
fs
test
aas
mov
adc
je
cmp
xchg
js
push
sub
cmp
mov
pusha
push
loop
inc
jns
dec
jge
sbb
arpl
adc
sbb
shrb
mov
pop
mov
aas
mov
or
xor
lahf
ja
mov
mov
push
es
push
sub
outsl
movl
ss
mov
push
dec
and
sub
fisubl
ret
divb
mov
out
repnz
mov
push
or
and
jnp
enter
push
adc
dec
and
pop
outsb
ret
pop
cmp
cmp
js
xchg
pop
mov
addr16
fisubl
cmp
ror
enter
or
adc
add
mov
inc
sub
lret
sbb
sbb
mov
dec
mov
pop
jno
test
jecxz
inc
and
push
lock
int3
xchg
icebp
xchg
dec
push
push
sbb
flds
xchg
push
mov
pop
mov
mov
jmp
push
roll
mov
sub
xchg
xlat
pop
jnp
cmp
jne
and
fisttps
data16
and
push
mov
in
pop
push
cmovb
sub
jnp
ja
hlt
mov
adc
lods
pop
inc
lea
inc
mov
cwtl
shrb
xchg
out
scas
xchg
mov
mov
xlat
and
iret
imul
fsub
or
roll
fldcw
fs
in
or
or
ret
sbb
push
int3
or
shll
or
cmpl
sahf
std
icebp
jb
cli
inc
ds
scas
pop
int
mov
push
and
adc
push
mov
fnstsw
int3
sub
adc
or
outsb
in
sub
hlt
mov
flds
jg
dec
jmp
iret
mov
push
mov
pop
mov
popa
mov
mov
adc
fcoms
jnp
dec
dec
mov
stc
ds
mov
out
xchg
mov
sar
dec
dec
fiadds
imul
mov
in
cmpsl
movsb
int3
pushf
pop
add
dec
push
inc
sub
sbb
and
repz
lss
imul
aas
mov
push
test
loop
push
adc
mov
out
mov
imull
pop
loop
sub
sbb
inc
xor
fildll
mov
sub
jb
and
dec
outsb
sbb
inc
in
test
sub
shl
mov
popf
shlb
popa
imul
into
jge
cmp
mov
sti
xchg
shrb
xchg
sbb
popa
xor
sub
stos
lea
add
mov
sub
emms
add
xchg
dec
les
and
dec
jno
dec
fistpll
jg
mov
dec
stos
pop
enter
mov
fnstenv
movsb
addl
stos
pop
sub
pop
pop
mov
std
xor
fsubrs
ret
jle
pushf
sub
or
inc
mov
rol
push
xchg
fwait
mov
add
cmp
mov
sub
and
push
and
mov
data16
push
lret
dec
rcrl
xor
rcr
cmp
push
rolb
lods
xchg
pop
sarl
imul
ret
mov
clc
xchg
cs
test
cmp
adc
pop
bound
mov
cld
repnz
jae
cmp
xor
push
mov
sbb
jl
gs
or
push
mov
imul
xor
loopne
outsb
mov
hlt
push
xor
dec
push
sbb
popa
xchg
push
call
je
dec
mov
sbb
loope
mov
cmp
mov
mov
xor
divb
dec
xchg
sub
out
cmp
repnz
cmp
icebp
inc
in
jge
fwait
pop
mov
or
ljmp
ret
jae
scas
xchg
push
in
enter
xor
js
sub
push
mov
dec
negl
call
inc
mov
nop
rclb
jl
repz
in
addr16
shl
pusha
pop
out
xchg
fistpl
in
lret
sub
mov
add
add
push
adc
lret
fcmovne
aam
clc
mov
insb
mov
imul
inc
and
xchg
mov
imul
sti
lds
stc
push
jmp
xchg
or
loope
in
xchg
push
fiaddl
ja
outsw
movsb
call
clc
leave
sub
and
push
repz
outsl
fucomi
xchg
pop
stos
mov
loop
cmp
cld
cwtl
jg
and
mov
mov
int
pusha
decl
push
cs
ret
xor
mov
mov
adc
jns
jae
adc
sub
sub
sub
jno
mov
bound
cwtl
jae
dec
das
enter
les
adc
add
popa
dec
test
push
cmp
xlat
xlat
inc
jae
popf
jbe
icebp
add
call
insl
push
mov
movsb
pop
jge
shll
jnp
push
jg
xorl
dec
add
xchg
cwtl
xlat
fisubrs
push
shl
jmp
pushf
lock
and
jns
and
outsb
push
mov
rcrb
je
jle
shll
lcall
cmp
in
or
popa
cmpsb
xchg
iret
xchg
mov
mov
jge
mov
fdivp
mov
adc
and
insb
push
out
sub
or
daa
mov
mov
sbb
out
push
fldcw
fnstsw
sbb
inc
mov
mov
in
mov
adc
jb
shll
add
push
cmp
cmp
and
movsl
jle
imul
das
scas
scas
fdivrl
or
fists
mov
inc
sub
dec
and
arpl
shrb
jge
xor
in
ret
push
push
mov
pmulhw
inc
pop
lret
xchg
xlat
test
int
mov
adcl
movsb
cmp
or
jno
je
fnstenv
inc
iret
mov
dec
cwtl
jne
aad
in
mov
mov
mov
cmp
daa
pop
mov
push
enter
jmp
iret
inc
sub
jecxz
push
xchg
mov
bound
test
faddl
xchg
shlb
clc
fnsave
pop
ret
repz
pusha
fldt
adc
dec
jl
lcall
notb
mov
gs
mov
dec
mov
xor
lods
in
dec
movsb
dec
jns
cmp
inc
inc
xor
mov
cs
adc
mov
outsl
mov
iret
mov
xchg
xchg
lcall
jle
repz
pop
leave
out
sub
adc
lea
push
lea
push
adc
and
and
loopne
mov
pop
lock
outsb
sub
xor
icebp
mov
dec
iret
stos
test
mov
shr
mov
sub
pushf
or
sbb
add
mov
mov
insl
mov
or
mov
loopne
mov
sub
leave
test
add
inc
mov
inc
out
stc
dec
aaa
mov
outsb
pop
dec
imul
dec
sub
mull
sbb
or
sbb
adc
xchg
pop
xor
pop
xchg
ljmp
scas
inc
mov
inc
inc
sbb
sti
jmp
inc
mov
data16
test
jno
mov
sub
rcrb
dec
fstl
push
inc
aad
scas
mov
pop
nop
inc
xor
mov
jecxz
sub
stos
mov
push
dec
and
cmpsl
mov
mov
lret
int
repz
push
bound
jl
mov
jle
mov
inc
xlat
and
sub
add
stc
mov
add
add
mov
ret
test
clc
fwait
inc
out
dec
jp
push
movsl
sarb
stos
jns
loope
inc
mov
jle
sub
cs
push
sbb
adc
popf
pop
push
inc
enter
loop
fcom
dec
nop
inc
add
test
mov
dec
icebp
notb
sub
jo
push
pop
sahf
jmp
fmuls
sbb
ss
cmp
lea
in
adcl
pusha
cmpl
cmp
lods
and
in
enter
sbb
icebp
mov
sub
mov
sub
xor
push
imul
jecxz
out
pop
in
adc
push
dec
mov
sbb
pop
or
xor
pop
dec
or
test
mov
imul
je
jns
and
scas
movsb
scas
test
imul
icebp
lea
out
mov
inc
jnp
js
out
movsl
sub
mov
xor
insl
ficoml
push
inc
push
shr
xor
pop
ja
or
outsb
iret
lcall
jb
cmpsl
xlat
inc
test
mov
les
dec
stos
stos
hlt
jb
pushf
push
cmpl
fistpl
push
mov
and
rcrb
loopne
out
jo
sbbb
add
jp
shrl
add
cmp
jecxz
mov
push
sbb
jg
loopne
push
xchg
sbb
jno
cltd
dec
xor
jno
imul
stc
outsb
out
jecxz
fisubrl
imul
stos
dec
das
dec
xchg
mov
sbb
ja
inc
pop
inc
pusha
cmp
mov
movsl
sbbl
push
push
in
imul
inc
xor
cmp
dec
ljmp
fnsave
xchg
jge
int
mov
lods
aam
pushf
mov
scas
mov
sbb
movsl
hlt
sub
daa
loopne
and
xchg
jbe
sbb
jp,pt
lods
lds
mov
push
sbb
xchg
jg
loop
jae
push
and
or
xchg
lret
inc
inc
and
push
fbld
mov
xor
jne
sbb
loopne
mov
push
jne
push
sbb
mov
pop
insl
icebp
test
fcomps
mov
dec
in
pusha
idivb
xchg
lock
dec
jge
sbb
sbbl
andb
or
jno
hlt
sti
mov
push
out
test
movsb
mov
mov
fs
popa
xor
jecxz
sbb
ja
mov
arpl
pushf
jecxz
mov
add
lea
lods
aam
xlat
pop
jmp
test
out
std
jl
repnz
and
lahf
or
adc
cld
dec
mov
and
or
sahf
in
jbe
aas
cmp
out
mov
mov
bound
loop
dec
jmp
pop
pop
bound
xor
jae
inc
mov
daa
fwait
xchg
mov
outsb
jbe
cltd
push
mov
pop
pop
jne
lock
stos
inc
andb
dec
bnd
loopne
push
mov
inc
es
in
mov
stc
inc
mov
inc
pop
push
cmp
in
jecxz
lret
xor
addl
roll
lock
gs
sbb
adc
sub
xor
adcl
mov
adc
mov
fstp
lcall
incl
pop
ljmp
popf
pushf
in
test
cld
test
stos
mov
cmp
xchg
mov
fnsave
neg
jle
or
xor
xor
xchg
imull
fidivrs
sbb
cmp
inc
mov
das
add
xor
adc
mov
xchg
test
dec
ds
dec
push
in
in
fnstenv
outsb
cld
cmp
imul
or
add
xchg
push
movsb
mov
inc
jg
mov
test
nop
cmp
out
imul
pop
jle
pop
sti
adc
inc
sbb
flds
push
data16
sub
pop
stc
jmp
repnz
mov
outsb
sub
inc
fists
loope
pop
push
add
push
mov
lock
lods
lds
sbb
fs
pop
mov
jge
xor
lods
call
jb
dec
mov
xor
dec
push
and
loope
add
xchg
mov
mov
fisttpll
cmp
mov
pop
jbe
subl
shr
xchg
es
mov
leave
jb
rorb
lock
test
adc
push
sbb
sbb
mov
dec
ds
push
xor
nop
aad
loop
mov
adc
in
mov
fwait
aaa
and
ficoml
mov
adc
stc
push
jno
in
dec
mov
mov
xor
shlb
push
imul
jns
das
fs
add
fnstcw
jne
mov
mov
sub
ret
adc
jg
divb
rolb
dec
fmuls
imul
out
cld
cmp
shrb
push
icebp
popf
clc
ja
pop
test
inc
dec
ror
lock
or
stos
xor
pop
cmp
and
pushf
xchg
cmpsl
and
mov
mov
dec
xor
inc
je
or
aam
rolb
xor
dec
lds
adc
sub
adc
loopne
js
dec
sub
inc
shl
mov
cmpb
jp
push
fldenv
xchg
fistpll
rsqrtps
xor
repnz
jl
jecxz
mov
push
xchg
xchg
scas
add
nop
test
addr16
faddp
in
lcall
add
dec
push
sbb
fisttpll
mov
sbb
dec
push
fs
adc
sti
xchg
cmc
sbb
and
lea
jle
push
mov
notl
and
ficoms
and
push
sbbb
mov
jnp
out
sar
ja
pop
sbb
xchg
stc
icebp
mov
out
jb
dec
cmp
cmp
add
popa
cmp
popa
leave
push
sub
adc
push
int
mov
sbb
leave
out
or
xchg
sub
adc
in
or
jne
test
test
popa
mov
aaa
pop
or
pushf
adcl
loope
add
inc
pop
jmp
nop
rorl
test
xchg
xchg
sbb
cs
stos
jp
push
rcl
hlt
cmpsb
push
rolb
fsubl
jo
push
sub
cmpsb
sub
roll
and
std
loop
sbb
lret
fisubrs
and
cmp
test
je
push
scas
hlt
xchg
add
js
js
arpl
jmp
push
mov
pop
and
cmpsl
sub
fisubrl
pop
flds
adc
sub
lods
aam
mov
lret
shlb
adc
sbbl
add
ja
mov
fdivrl
dec
mov
lcall
pop
push
cwtl
jo
cmc
jbe
inc
or
je
mov
pushf
inc
rcrl
xchg
notb
repz
sub
pop
adcl
shlb
sub
pop
push
push
adc
inc
inc
sahf
ror
xor
or
push
mov
aad
lds
outsl
fisubl
or
daa
mov
hlt
inc
cmpb
test
inc
ljmp
fisttpll
mov
std
push
adc
push
je
and
mov
es
jnp
popl
out
pop
xor
inc
jne
or
lret
test
dec
and
ret
pusha
jp
in
hlt
mov
xchg
or
mov
and
rclb
add
cmpsl
mov
pop
out
adc
outsb
lret
mov
repnz
push
scas
aaa
dec
int
adc
jmp
pop
call
or
or
jg
js
sub
insb
cmpsl
cwtl
repnz
cs
in
and
mov
xchg
sub
and
outsb
jmp
ficomps
cmc
test
mov
dec
jg
add
popa
cli
rep
xor
lcall
push
pop
iret
mull
jle
sti
rcrb
std
sub
ja
sub
fnstenv
inc
imul
and
daa
pop
lds
std
out
popf
sbb
cmp
dec
fists
movsl
sub
xchg
ffree
stos
cmpsl
int3
movsb
inc
and
ret
scas
fmull
xchg
aas
es
dec
popa
lods
ja
xchg
js
lahf
push
int
sti
out
mov
iret
inc
push
inc
sbb
out
xor
mov
mov
push
loopne
jne
jmp
mov
mov
xchg
inc
std
push
fnstcw
pop
cltd
sub
adc
jbe,pt
pushf
xchg
push
adc
test
xchg
cmp
mov
push
push
cmp
in
pop
scas
enter
aas
stc
push
push
enter
fdivrp
bound
push
imul
adcb
dec
mov
test
fists
adc
leave
pop
popa
push
call
fstps
hlt
cmp
out
cmp
in
jno
inc
aad
jl
push
add
cmp
inc
jecxz
loope
mov
mov
jle
or
test
orb
pop
mov
mov
addl
int3
stos
imul
adc
mov
sub
inc
adc
pop
mov
jmp
fimull
cmp
stc
mov
das
mov
jb
sbb
das
jp
fcoms
rcrl
jnp
out
jo
test
shlb
pop
push
mov
insb
adc
notl
mov
sub
aas
mov
and
pusha
adc
ljmp
ds
sbb
pop
or
shr
fs
jno
jp
fnsave
cmp
cmpsl
inc
pop
pop
cmp
mov
jecxz
shlb
mov
out
fldl
cmp
mov
mov
inc
sub
enter
pop
push
jo
daa
add
mov
push
or
sarl
cmp
test
and
pop
idivl
dec
out
enter
ficoms
jne
std
aad
das
movsb
jns
pop
jbe
imul
push
xchg
fstpt
pop
cmpl
dec
in
lret
xlat
lea
fildl
sub
popf
std
push
jo
push
aaa
push
cs
push
rolb
call
adc
xchg
mov
mov
and
xor
addr16
cli
lods
xchg
pop
push
inc
fimuls
outsl
loop
xchg
pop
iret
les
rorl
out
mov
lret
mov
inc
movb
loope
xchg
int3
cmpsb
arpl
lret
add
add
fistpl
mov
adc
pop
std
rcr
dec
imul
or
out
push
jl
xor
and
test
dec
and
insb
aaa
mov
dec
xchg
mov
inc
enter
lret
xchg
and
push
xchg
pop
xor
aad
lods
jp
mov
pop
inc
inc
pop
adc
xor
mov
je
imul
pop
mov
sbb
sbb
test
push
mov
mov
lea
addl
popa
and
clc
ret
jo
call
jle
and
lret
pop
sbb
sbb
cmc
mov
cs
push
pop
sub
rolb
xchg
jae
xchg
pop
xor
cmp
or
jo
jg
jb
xchg
es
adc
enter
rolb
shrb
notb
xchg
xchg
xor
sbb
divl
je
leave
pusha
and
xor
das
enter
ss
loope
jle
das
shl
sti
mov
sub
int
jae
or
sbb
in
xchg
leave
inc
and
push
repz
mov
and
sub
pop
dec
sub
loopne
inc
adc
xor
pop
nop
adc
jecxz
ds
adc
mov
add
loopne
popf
leave
jg
jbe
mov
jmp
sbb
daa
pop
mov
mov
add
sahf
mov
mov
push
idiv
popf
and
pop
sub
popa
sbb
stc
lods
cmp
add
sbb
rcrl
js
cmp
xchg
push
push
push
jl
ljmp
je
and
rcl
rcrl
dec
pusha
cld
fsubl
xchg
aam
mov
adc
stos
aas
pop
xchg
xchg
aaa
sbb
test
push
mov
add
mov
jno
jge
es
ret
in
mov
mov
jl
push
mov
jg
aaa
jne
add
loope
and
add
movsb
call
mov
cmpsl
decl
hlt
cmp
daa
in
mov
pop
cmpsl
popf
sub
inc
cmp
out
bound
lods
test
rorl
xchg
test
or
lret
mov
ljmp
cmp
popf
pushf
jo
mov
add
fildll
fidivl
mov
out
mov
lret
cmp
call
jno
in
push
mov
je
ficoml
call
aad
roll
dec
mov
sahf
cwtl
inc
xchg
cld
push
sbb
and
in
mov
mov
sbb
adc
dec
mull
cmp
sbb
outsl
jle
adc
int3
dec
rclb
std
pop
loopne
faddl
dec
xor
or
adc
sub
enter
aaa
cmpsb
cmp
adc
mov
dec
cmp
sub
or
nop
mov
lret
push
adc
sbb
jne
test
jb
mov
mov
rorb
jne
lods
call
bound
inc
scas
ret
mov
sub
shrl
jb
shrb
add
dec
sahf
push
ljmp
pop
xchg
sub
or
ljmp
pop
sbb
jp
dec
shll
push
out
das
movsl
jno
movsb
inc
dec
jne
in
push
xchg
mov
push
imul
cmp
int3
push
fsubl
call
jecxz
dec
cmpsl
xchg
sar
roll
pop
and
mov
xchg
lcall
jl
pushf
icebp
lock
ljmp
adc
mov
shlb
test
movl
mov
imul
cli
push
xchg
jg
sbb
test
out
insb
loop
fisubrl
push
adc
cmpsb
add
sub
inc
lds
pop
insb
pusha
sbb
mov
push
out
xor
dec
aad
add
adc
xor
jnp
sub
push
aaa
add
enter
xor
ss
fdivl
add
ficoml
repnz
mov
daa
inc
test
xor
outsl
movsl
adc
icebp
mov
xlat
jbe
mov
out
bsf
push
ljmp
inc
movsb
cmp
in
outsl
hlt
popaw
scas
mov
pop
stos
xor
mov
jns
int
aaa
sub
lret
push
sarl
mov
cmp
sbbl
cmp
pop
aam
mov
imul
pop
mov
lret
pop
sbb
es
outsl
movsb
mov
ret
cmpsb
sub
repnz
sub
outsl
loope
pop
aaa
fimuls
cmp
std
dec
bound
ja
insb
mov
std
cmpsl
adcl
and
pop
inc
arpl
sub
jo
in
ss
leave
cmpb
xchg
hlt
mov
sub
testl
cs
lock
pop
dec
cmpsb
cmp
add
les
mov
push
xor
dec
cmpsl
arpl
loop
jae
fld
mov
jns
and
jae
sti
stos
inc
ljmp
test
or
aad
punpckhdq
dec
mov
mov
mov
subb
roll
dec
lods
and
push
fs
es
aaa
push
jne
pop
cld
jae
dec
push
mov
xchg
sarl
mov
lret
xor
pop
add
ds
mov
testb
cmp
inc
icebp
adc
sbb
jmp
stos
jo
adc
ss
cmpl
cmpsl
mov
and
js
addb
sahf
mov
lea
push
inc
sub
xchg
xor
pop
cmp
push
xchg
pop
repnz
icebp
sub
sub
ret
jnp
jns
cwtl
mov
jnp
jo
adcb
push
ss
pop
fcoml
mov
shrb
pop
lds
mov
ror
cld
test
fnstsw
rcll
js
sub
push
xchg
push
or
shrb
and
mov
push
dec
mov
and
xor
jnp
pusha
enter
addr16
adc
mov
lahf
jb
push
lock
push
inc
mov
push
and
mov
and
in
pusha
int
in
pop
xor
outsb
sub
ss
cli
lret
loope
sub
jno
push
mov
sub
js
and
inc
pop
stos
into
sub
fs
ds
ja
push
jmp
fcmovnu
jae
mov
sub
mov
insb
lock
mov
rol
and
mov
inc
mov
cmpsl
cmpsb
add
sub
pop
push
push
sahf
xchg
dec
xchg
xchg
fsts
leave
jg
test
sub
jne
insb
pop
xlat
cli
mov
cld
fmuls
out
int3
pop
jbe
dec
mov
sbb
stos
test
sbb
data16
dec
push
ds
inc
xor
xor
add
bndldx
dec
scas
jge
sbb
mov
push
mov
cmp
imul
jbe
or
dec
movsl
jb
subb
fildll
inc
push
stos
popa
cmp
push
and
sbb
jmp
pop
cmpb
cmp
jecxz
cs
and
lods
xor
xchg
xor
inc
xchg
jp
cmp
rcrl
aas
pop
sahf
and
test
int3
popa
mov
jmp
inc
imul
mov
enter
cmc
aam
scas
xor
jge
aaa
shlb
pop
fwait
xchg
push
push
xrelease
movsb
push
push
mov
enter
push
adc
test
pop
arpl
lds
jecxz
push
shrl
mov
icebp
cli
push
sbb
mov
inc
jge
movb
inc
xor
pop
jo
push
dec
jne
xchg
repnz
lock
sub
out
adc
push
jg
or
aas
scas
mov
jnp
push
pop
in
ljmp
repnz
in
or
fistpll
adc
inc
pop
add
and
pop
sbb
andl
repz
push
imul
or
ret
jge
jp
mov
loop
sahf
addr16
shl
call
mov
pop
xor
psraw
movsb
test
outsb
sub
cwtl
aad
jo
push
in
fisttpll
mov
emms
out
cmp
in
jbe
test
inc
mov
jmp
inc
pop
mov
divb
xor
jae
call
hlt
js
sub
cs
outsl
jb
pusha
cmp
sub
pushf
xchg
and
pop
iret
hlt
inc
fisubl
enter
dec
fisubrl
sbbb
fmuls
ret
sub
sbb
push
out
hlt
adc
push
in
jno
in
adc
jecxz
jne
jl
mov
jb
pop
mov
push
out
adc
xorb
enter
jne
pop
mov
inc
inc
mov
movsl
int
xchg
mov
or
inc
insb
xor
ljmp
or
adc
ss
out
out
xchg
mov
mov
xorl
incb
sbb
sbb
leave
add
outsb
mov
bound
mov
cmp
in
and
xchg
mov
and
cmp
sbb
xchg
xor
jmp
rcll
mov
push
xchg
addr16
aaa
push
bound
dec
fistpl
das
and
sub
mov
dec
and
pop
out
std
mov
aam
cmpsb
or
xchg
mov
scas
scas
scas
int3
xor
adc
jnp
out
mov
and
pop
scas
inc
mov
roll
lcall
or
orl
loop
lcall
lcall
in
and
in
insl
cli
inc
ret
aas
stc
mov
scas
addr16
xchg
int3
add
outsl
lret
fisttpll
pop
inc
cmp
pop
imul
bnd
icebp
xchg
sbb
xchg
dec
or
loopne
cmp
jae
jnp
push
std
cmpsl
hlt
xchg
aam
xchg
mov
in
sbb
mov
push
stc
xchg
jl
cmpsb
pop
aam
mov
pop
ljmp
sar
jmp
cld
and
jecxz
dec
sub
nop
push
loop
fidivrl
mov
lock
ss
test
rclb
in
cs
mov
int3
scas
popa
mov
gs
xchg
mov
lcall
ret
pop
imul
cmpsb
popa
pop
hlt
loope
subl
inc
push
pop
jno
cmp
mov
js
cmp
loopne
fmull
dec
jb
rcrl
mov
xor
popf
fdivrs
mov
sahf
xlat
jo
gs
mov
adc
out
xor
mov
adc
call
sub
cmpsb
fimull
adc
pop
cmpsl
push
stos
ljmp
adc
popa
pop
mov
es
mov
cs
in
mov
sbbb
pop
mov
mov
jge
iret
adc
mov
decb
add
jmp
pushf
inc
fnstenv
xor
mov
fdiv
cmp
add
lea
push
dec
inc
cmpsl
arpl
add
arpl
int3
mov
sbb
dec
es
cli
scas
pop
aad
adc
addr16
or
stos
mulb
dec
sahf
mov
pop
sub
mov
mov
fwait
sbb
repnz
lahf
mov
mov
cmp
out
lods
lahf
adc
fstps
push
add
out
test
sub
insb
es
xchg
fisubrs
mov
add
sub
inc
jle
bnd
mov
xchg
cmc
loopne
xor
push
div
outsl
add
ds
std
inc
call
cltd
adc
sbb
cmp
fisubs
out
mov
mov
inc
jmp
sti
push
imul
in
push
xchg
aaa
adc
push
jnp
add
xchg
push
pop
cmp
pushf
and
xchg
stos
or
mov
sub
xor
jl
sahf
dec
xlat
insb
xor
iret
adc
sahf
pop
sbb
cmp
xchg
dec
cmp
lret
sti
xlat
std
movsl
int3
push
insb
pop
ss
rclb
mov
inc
dec
fwait
add
inc
hlt
jl
mov
adc
lods
xor
push
mov
mov
mov
cmpsl
add
and
adc
popf
push
xlat
cmp
push
sbb
cmpl
movsb
inc
in
sbb
jge
mov
adc
dec
imul
lods
pop
push
and
push
pop
xchg
rorl
xlat
imul
sahf
adc
and
pushf
xchg
imul
jno
cmp
pop
and
std
cmp
xor
cmp
mulb
out
push
and
frstor
and
push
sbb
gs
mov
jno
cmpsb
into
stos
sahf
test
jne
daa
mov
xor
in
std
and
jnp
repz
sub
mov
shlb
cmp
into
inc
lods
jno
or
in
repz
and
js
outsl
mov
and
out
inc
lcall
ljmp
int
dec
insb
mov
pop
out
mov
xchg
mov
loop
cld
mov
pushf
cmp
repnz
jnp
mov
cli
push
push
pop
xor
pop
push
jmp
dec
jo
cwtl
shrl
aam
out
cltd
es
add
lods
inc
add
mov
ret
dec
pushf
dec
mov
push
ljmp
jnp
xchg
jb
xor
in
add
cmpsb
pop
xor
or
mov
or
pop
and
and
mov
fnstsw
push
das
cmp
dec
pop
lret
dec
xor
xor
add
leave
data16
and
cmc
leave
xchg
xchg
push
int3
fisubl
and
jne
push
insl
push
aaa
dec
push
test
dec
inc
lea
iret
scas
xor
ljmp
pop
dec
mov
icebp
mov
sbb
mov
add
in
mov
add
add
stos
std
sbb
adc
jnp
and
xchg
mov
add
divl
sti
jae
push
and
add
dec
xchg
inc
repnz
pop
sahf
fistpll
stos
hlt
imulb
aaa
sub
out
xchg
pop
mov
mov
shrb
mov
mov
cmp
sub
adc
xor
lock
out
jmp
movsb
ss
push
and
pop
movb
in
out
dec
ss
lcall
sti
int
xchg
shll
mov
out
lods
xchg
std
xchg
loopne
arpl
xchg
mov
in
outsl
fcomps
inc
out
mov
test
fstpt
cltd
js
mov
adc
loopne
not
aas
testl
iret
sbb
or
push
lret
sbb
in
xor
js
add
xor
scas
callw
movsl
cmp
xchg
push
push
lret
iret
xor
jmp
out
push
fnstcw
adc
mov
mov
push
jmp
push
mov
sbb
mov
gs
mov
cmpsl
push
gs
mov
jns
sbb
adcl
jnp
cli
mov
rol
divl
mov
or
xchg
mov
mov
push
inc
std
push
fsubr
mov
xor
in
aam
mov
xchg
push
pushl
nop
imul
es
jecxz
dec
fistl
jns
mov
sbbb
jmp
cmp
dec
sub
in
out
or
fs
or
std
jg
mov
or
into
or
scas
jns
push
mov
dec
push
adcb
push
clc
fstps
rcll
and
pop
adc
fdiv
out
add
movsl
inc
test
jo
int3
cmp
cmpsl
sbb
mov
mov
es
sbb
jecxz
fldcw
jns
mov
insb
insl
jns
xchg
nop
or
xchg
mov
dec
push
push
fwait
mov
add
mov
lods
inc
jne
shlb
in
sub
hlt
add
xor
cltd
xchg
jnp
outsb
lret
add
sub
repnz
add
and
jp
int3
push
arpl
push
mull
dec
jno
jl
mov
fst
pop
xor
dec
loope
imul
inc
daa
dec
sub
push
and
movsl
mov
mov
sbb
cmp
ffree
stos
leave
ficoms
stos
rorl
ds
cmp
xchg
adc
mov
pop
cmp
lods
mov
lret
pushf
sbb
xchg
mov
xchg
mov
dec
mov
jns
mov
ret
dec
sub
add
cmp
dec
xor
inc
scas
xchg
pushf
lods
shlb
or
loope
orl
gs
sbb
pop
xor
add
in
sahf
or
sub
and
hlt
ret
add
shlb
adc
cmp
ljmp
mov
or
push
mov
add
leave
pop
dec
inc
outsb
pop
adc
sub
mov
mov
pop
jns
mov
fwait
dec
iret
outsb
fdivl
verw
pop
fcmovnb
cmp
sub
mov
inc
adc
fists
lret
out
mov
inc
cmp
and
push
xor
addr16
dec
dec
dec
or
shl
scas
push
pop
repz
cld
std
and
daa
sub
sub
inc
mov
jae
pop
dec
xor
sbb
adc
inc
cs
sub
popf
or
lea
push
aad
leave
inc
jl
repz
mov
fmull
cmp
or
data16
sbb
mov
aam
mov
sahf
outsl
jns
push
mov
pop
sbb
adc
xchg
adc
push
mov
out
repz
cmc
mov
paddd
mov
insb
pop
popa
sbb
stos
push
aad
cmpsb
push
cmovbe
fcomps
fmull
push
mov
push
add
lea
dec
les
call
pop
jno
bnd
pop
dec
xchg
lea
repnz
add
mov
cmp
ret
aad
xlat
mov
ljmp
arpl
lds
xor
subl
mov
xor
lock
call
lahf
ds
es
fldenv
out
pop
cmp
cmp
enter
icebp
stos
xor
lahf
icebp
movsb
out
cs
pop
sbbl
sub
xchg
and
jle
adc
sub
je
mov
rclb
or
fs
dec
push
mov
or
xchg
inc
icebp
fidivl
pop
repz
jo
outsl
mov
mov
mov
push
push
mov
mov
pop
loop
mov
or
dec
push
imul
daa
lods
mov
out
adc
into
jle
pop
sar
repz
or
push
mov
push
orb
pop
outsl
or
or
faddl
push
aas
push
fldcw
divb
add
mov
sarb
pop
mov
mov
dec
pop
arpl
xor
mov
cmpl
lods
cmp
ret
inc
pop
cmp
add
aaa
mov
and
jmp
out
fs
ret
or
xor
cli
sub
and
sti
cmp
sahf
jmp
daa
or
add
xchg
es
jae
xor
fdivl
test
imul
repnz
pop
xorb
lods
jns
xchg
cmc
repnz
inc
push
jb
pop
scas
popf
dec
in
pop
mov
sti
cwtl
or
cmp
adc
int3
jbe
into
add
add
loope
fstl
jno
push
cltd
pop
insb
orl
cmp
daa
mov
sub
xchg
stos
cltd
cmpl
fucom
mov
cmp
adc
out
or
cltd
jne
and
sbb
xchg
insl
push
and
sub
add
inc
mov
aam
mov
dec
std
lods
jp
popf
std
aas
inc
std
mov
iretw
outsb
inc
dec
cmpsl
ljmp
popa
jl
sub
mov
sarb
daa
and
xchg
iret
jmp
pop
popf
mov
xchg
bound
jns
outsl
push
xor
addr16
lret
aaa
mov
and
xchg
in
mov
push
mov
sbbb
adc
mov
lret
jp
mov
ret
in
into
mov
test
push
cmp
or
xchg
dec
cmp
mov
lahf
dec
dec
aad
jns
aad
pop
mov
mov
dec
sbb
in
dec
sti
ret
mov
xchg
mov
sub
lds
and
cmc
cwtl
sub
cltd
cmp
dec
stos
mov
xchg
pavgb
mov
or
inc
mov
sbb
stc
adc
sarb
rcll
pop
in
addr16
shlb
or
and
ja
movsb
push
aad
out
sbbl
xchg
lret
das
jo
insl
push
scas
mov
sbbl
pop
aas
cs
sub
in
push
xor
pop
jmp
or
adc
scas
sub
sbb
insl
cmp
xrelease
data16
add
inc
outsb
mov
sbb
sub
add
outsb
pop
dec
daa
jp
lods
add
xchg
popf
mov
xchg
xchg
or
mov
push
ret
rorb
je
add
sbb
adc
xchg
shll
mov
push
icebp
mov
dec
lret
ja
mov
addb
ret
insl
mov
in
add
andl
cmp
cltd
loopne
push
push
sahf
testb
hlt
outsb
sbb
das
stos
sub
push
add
mov
and
iret
fidivl
cmp
test
xchg
dec
pop
mov
leave
cwtl
ficomps
insl
dec
add
pop
ret
dec
pop
inc
in
scas
mov
gs
pop
pusha
sbb
fmuls
and
pop
pop
jbe
stc
ficompl
mov
add
push
mov
push
xor
icebp
ret
pop
shrb
ret
pop
push
dec
ja
and
fldt
nop
cmp
sbb
cmp
cmp
dec
add
sbb
out
mov
in
jns
xlat
add
in
jb
mov
jp
int
add
mov
bound
cmovns
xlat
adc
fs
pop
scas
xchg
mov
add
cli
dec
jns
insl
call
jae
loope
repnz
mov
cmp
and
in
inc
test
dec
jbe
dec
lds
loope
or
pushf
stc
mov
mov
lds
push
dec
jnp
fs
pop
and
xchg
icebp
cmp
movb
adc
lea
ficomps
rcrl
mov
jg
lret
repnz
jno
adc
jg
xchg
test
js
in
dec
add
pop
add
es
dec
lahf
daa
sub
adc
mulb
xchg
xlat
push
ror
mov
xchg
mov
and
test
aas
popa
loopne
jno
stos
ret
js
or
push
pop
add
jo
fcmovbe
fwait
mov
lods
es
mov
movsl
sub
pop
cltd
std
aas
and
incl
inc
cmc
stc
clc
mov
xchg
xchg
lret
je
mov
pusha
iret
sub
jno
in
scas
test
mov
xorl
dec
push
mov
mov
aas
xchg
push
clc
int
fldenv
cli
ljmp
mov
push
push
imul
fcoms
mov
xchg
cmp
scas
rorl
sbb
mov
decb
xchg
ret
andb
adc
xchg
aas
fwait
xlat
dec
lcall
es
lret
or
repz
aaa
xor
pop
out
stc
mov
pop
cmp
pop
pop
int3
xchg
mov
mov
mov
push
sub
stos
cmp
mov
jb
pop
mov
cmpsb
lret
loopne
shl
cmp
jae
or
pop
insl
or
pop
push
stos
cmp
sti
arpl
mov
mov
andl
insl
xchg
adc
pop
shl
and
mov
stc
fsts
sub
inc
fnstsw
aas
jo
adc
inc
pop
lret
nop
jns
orl
and
frstor
ficomps
pop
sbb
add
jns
mov
scas
int3
cwtl
arpl
pusha
sbb
popl
push
mov
and
aad
or
mov
xchg
mov
xor
add
dec
pop
loopne
leave
mov
fsubl
sti
notl
mov
loopne
lods
mov
or
rcrl
inc
ret
sarb
jbe
call
mov
xchg
test
int
xor
sbb
and
ret
popa
and
dec
cwtl
int
pusha
push
cwtl
mov
mov
lea
push
pop
xor
sub
rclb
test
mov
inc
dec
cmp
out
sbb
xor
adc
inc
pop
pop
lea
push
jmp
fisttpll
mov
cmp
sub
sbb
lds
xchg
xchg
fistpl
xor
scas
lea
jle
ds
xor
enter
mov
movsl
sub
fs
pop
mov
mov
cwtl
cwtl
enter
sahf
mov
xor
pop
mov
xchg
mov
lahf
aaa
and
add
dec
aas
insl
stos
mov
mov
mov
popf
xchg
pop
jp
sahf
cmp
ja
fmull
inc
cmpsl
fisubs
mov
add
push
push
test
pop
ficoms
nop
icebp
xchg
fistl
sbb
xlat
and
in
cmp
aas
xchg
or
cmp
shlb
mov
and
std
inc
fldenv
and
arpl
ffree
jl
mov
mov
shlb
cmpsb
xchg
mov
insb
test
in
lret
push
cmp
sahf
add
inc
add
movsl
outsb
divb
sub
cmc
mov
cmc
push
es
xchg
jae
dec
jns
mov
popa
and
mov
add
mov
xor
mov
or
dec
insb
dec
cmp
out
aad
pop
dec
lahf
testb
xor
add
popa
movsl
mov
mov
inc
loop
pushf
dec
pop
sahf
mov
xor
ss
cmp
fstl
lret
cmpsb
out
aad
push
and
subb
mov
mov
xchg
mov
in
lahf
cmp
and
pop
push
xchg
jle
js
movsl
call
or
sub
mov
jg
andl
xor
iret
shl
int3
lods
les
scas
sbb
jae
jo
ret
rclb
sti
jge
jecxz
cs
sub
fstps
adc
lock
xchg
inc
inc
subl
adc
std
in
insl
adc
mov
scas
xchg
dec
movsb
unpckhps
cmp
xchg
cmc
or
incb
fsubl
lcall
loop
roll
adc
test
push
mov
inc
xchg
push
jns
cwtl
xor
or
fs
inc
cmp
enter
aaa
ja
jle
insl
or
inc
xor
mulb
outsl
mov
aam
loopne
and
mov
xchg
cltd
push
call
adc
dec
call
pop
xor
clc
es
into
push
sub
stos
jge
roll
sbb
scas
loope
scas
jnp
pusha
or
push
sbb
inc
mov
vpacksswb
mov
out
xor
or
mov
pop
mov
sbb
push
mov
mov
mov
imul
std
loop
or
cmp
aaa
lcall
push
jge
and
mov
pop
movsl
or
mov
add
daa
out
repnz
stc
xor
pushf
lret
pop
push
in
lcall
out
loopne
and
push
pushf
insl
dec
inc
scas
pop
xlat
pop
mov
xchg
xor
test
jmp
aam
jbe
mov
add
data16
jp
adcb
xchg
sarl
cwtl
mov
loope
push
fcomip
inc
fwait
rorb
pop
fsubrs
inc
xlat
or
sbb
das
pop
and
mov
jns
or
aad
jmp
xor
mov
fmulp
shlb
or
inc
outsl
movsl
jecxz
xor
push
inc
cltd
mov
int
pop
hlt
dec
push
cltd
clc
inc
stc
leave
jmp
and
cmp
pop
enter
or
pop
lds
mov
daa
pop
add
cltd
mov
mov
push
or
flds
div
sbb
mov
pusha
bound
fmulp
aas
nop
inc
xor
xchg
aad
lods
scas
add
xchg
jo
test
pop
push
stos
xor
clc
pop
pusha
xchg
push
popa
jge
dec
andb
pop
push
mov
mov
lods
ret
leave
inc
mov
jp
nop
adc
stc
daa
hlt
lcall
stos
aas
sysexit
and
dec
ljmp
push
lea
out
sbb
into
les
jl
xchg
aam
outsl
popf
scas
call
fnstcw
add
stos
cmp
pushf
mov
cltd
mov
ljmp
sbb
sbb
ja
cltd
out
and
cmp
sub
mov
mov
stos
push
push
and
lock
movsw
sbb
outsl
inc
les
repz
push
ss
mov
push
js
mov
faddl
out
sbbl
dec
mov
call
jbe
std
push
scas
call
push
push
in
int3
xor
mov
ss
jno
lods
jno
dec
jns
mov
jmp
dec
xor
loop
ret
xor
pop
mov
sub
add
shrl
pop
dec
fldt
or
cmpsb
imul
pop
jg
addl
nop
je
out
xchg
scas
clc
outsl
xchg
sub
sub
mov
and
lret
adc
xor
jge
lea
jnp
or
xchg
sub
jne
xchg
dec
jg
sti
push
std
call
push
xlat
and
jb
mov
cmpsl
mov
scas
xchg
pusha
fnstenv
or
lods
push
popf
loopne
test
cmp
mov
gs
nop
sbb
loope
das
cli
adc
pusha
outsl
cmp
shlb
push
xchg
mov
xor
int3
cmp
outsl
xchg
push
xor
pcmpgtw
lcall
mov
mov
imul
test
adc
pusha
adc
adc
push
xlat
sbb
and
dec
movb
lcall
and
mov
add
stos
jae
xchg
into
jno
adc
inc
cmpsb
and
mov
cmpsb
pop
outsb
or
imul
sub
movsl
jge
std
aaa
movsl
fdivl
cli
adc
fwait
and
pop
mov
rcrb
sbb
xor
repnz
cmp
fcomip
sub
ficoms
and
mov
fildll
roll
mov
aam
data16
mov
pop
mov
add
ljmp
aas
popf
ljmp
dec
rcll
jmp
lahf
loope
mov
je
stc
call
xlat
inc
sarl
xchg
push
es
pop
adc
or
jns
mov
sbb
mov
inc
adc
jp
rcl
subl
inc
mov
cmp
dec
clc
imul
xor
dec
dec
imul
popf
outsb
mov
cmpsl
add
xor
mov
std
sbb
xchg
mov
pop
jo
xlat
jb
mov
lods
pop
shlb
mov
ret
add
dec
hlt
xchg
inc
mov
fcmove
icebp
outsl
and
add
adc
pop
in
addb
inc
scas
cs
push
mov
mov
inc
enter
in
movsl
and
dec
dec
mov
dec
icebp
popf
cmp
adc
pop
into
push
jne
sub
xchg
enter
jbe
sahf
in
mov
jae
ja
dec
cmpsb
rol
pop
mov
jp
jp
cmp
aas
dec
xchg
cmp
mov
andb
pop
das
stos
test
xlat
or
insb
test
out
add
lret
imul
fldt
adc
push
cltd
adc
push
mov
movsb
mov
adc
fwait
sub
push
into
jecxz
cmpsb
lock
popf
aaa
mov
nop
movsl
stc
cmc
jg
push
popf
push
mov
cmp
aam
xchg
popf
sbb
int
adc
mov
xchg
xor
xor
mov
data16
popa
mov
les
loopne
mov
mov
nop
xor
ror
outsl
stc
insl
cmp
call
lcall
mov
push
mov
stos
out
adc
jecxz
data16
mov
in
mov
jecxz
mov
xchg
jbe
fmull
lods
push
and
out
push
push
jp
xor
cmc
pusha
shl
lcall
sub
popl
imul
jno
and
jle
add
dec
popa
out
std
jbe
lea
outsl
nop
dec
fsubl
sub
mov
jae
mov
mov
scas
lods
cmpsb
xor
cmpsb
test
mov
ds
lcall
lret
sahf
cmp
cmp
adc
sub
std
into
mov
mov
and
inc
lods
aas
sbb
repnz
sub
iret
dec
jl
mov
jnp
xchg
mov
es
sub
in
jbe
or
or
dec
sbb
aam
add
test
mov
jle
jge
mov
insb
shll
movsl
xor
adc
movsb
divl
lods
add
xchg
adcb
lds
test
cmpsb
int3
lock
push
jo
xchg
js
loope
adc
sub
testb
xlat
cwtl
pop
add
adc
push
insb
or
sar
arpl
jl
subb
imul
movsl
mov
push
cmpsb
mov
mov
sahf
sub
ret
cltd
jnp
jbe
lcall
push
sbb
pop
aaa
and
jnp
loopne
add
cmp
sahf
xlat
insl
push
gs
clc
sti
or
pop
shrb
shll
out
lret
fldl
and
mov
dec
push
outsl
push
xorl
movsb
mul
jae
cli
mov
cli
std
outsb
inc
jp
aam
sub
jle
idivl
cmp
mov
mov
fcomps
add
sbb
enter
mov
xor
ljmp
ret
push
out
in
idivl
sub
mov
out
fldt
push
push
cld
inc
push
or
mov
sbb
and
in
scas
into
jns
or
shr
push
testb
subl
xor
pop
add
out
leave
jge
imul
mov
xor
xchg
xor
and
lods
or
xchg
and
sub
mov
sub
pop
repnz
inc
lahf
neg
aas
mov
mov
adc
pop
sub
orl
pushf
add
sbb
out
mov
std
pop
adc
adc
fstps
cmp
cli
es
call
xchg
adc
mov
and
pop
cmpsl
push
add
and
into
in
xchg
push
sbb
dec
cmp
lea
hlt
pop
ja
cmp
dec
sub
and
shlb
ja
movsb
arpl
jle
mov
pop
mov
lds
sti
xor
lods
cltd
and
ret
int3
push
mov
dec
out
lods
ss
sbb
xor
xlat
sbb
pusha
pop
mov
stos
add
ds
lea
push
xor
fimuls
cmc
loope
jb
out
pusha
shrl
cmp
sbb
js
adc
jae
dec
je
xchg
push
dec
cwtl
movsb
and
cmc
sbbb
inc
in
pop
mov
add
rorl
std
xor
arpl
lods
sub
cs
popa
cli
test
fstpl
sahf
sarb
mov
lcall
ds
mov
pusha
incb
and
aad
loopne
das
xchg
cmc
movb
adc
mov
sub
push
pop
shrl
mov
mov
shll
pushf
push
and
sub
rorl
add
fcmovnbe
jl
repnz
aaa
xorb
jae
inc
mov
mov
hlt
sub
push
stos
xchg
mov
and
fxch
insl
cs
push
mov
xchg
lret
popf
scas
sub
popf
xor
sbb
scas
sub
xchg
rclb
fsubrl
mov
add
jnp
test
or
mov
out
dec
or
sbb
dec
pop
daa
lret
lea
aad
daa
inc
pushf
inc
cmpsl
xchg
jge
dec
mov
out
mov
imul
sbb
lods
sub
hlt
rcrb
pop
aam
cmp
pop
in
insl
sub
clc
inc
pop
lds
and
js
jns
test
and
mov
dec
jo
mov
and
negl
mov
in
mov
push
stos
jecxz
mov
arpl
out
iret
dec
push
mov
rcrb
pop
xor
xchg
inc
push
push
jl
and
dec
cmc
add
cmpsb
insb
cltd
jne
arpl
sbb
xor
xchg
inc
sbb
push
push
in
loope
es
push
test
xor
repnz
inc
in
loopne
cmp
mov
loopne
mov
loop
push
push
in
push
pop
xchg
ret
push
jge
sub
popf
ficomps
test
sahf
cmp
ret
mov
sbb
cmc
and
test
mov
iret
sti
idivl
fidivs
push
out
push
cmp
fcoms
adc
stos
xchg
out
orl
or
pop
fisttps
pop
xchg
repnz
sub
subb
aaa
lods
add
iret
mov
mulb
les
jns
dec
incl
push
movsl
jns
dec
aam
dec
enter
fimuls
xchg
lods
lret
mov
push
in
pop
ss
lahf
mov
notb
leave
int
nop
mov
repz
inc
cli
movsb
mov
inc
mov
mov
test
adc
in
icebp
xchg
fidivs
lds
fwait
jb
test
dec
subb
les
pop
jns
int
jnp
sub
dec
jmp
push
in
faddp
mov
or
test
jmp
xchg
mov
outsb
jmp
mov
stc
mov
test
pop
mov
out
xor
push
xchg
push
pop
or
lea
jg
xor
loope
or
ja
pushfw
mov
nop
fstp
or
dec
lcall
rorb
lret
jnp
mov
in
out
clc
bound
fisubs
sub
scas
jge
rcrb
mov
add
xchg
insb
xchg
sbb
push
popf
ds
cmp
pop
inc
scas
ja
inc
jmp
mov
lea
testl
das
pop
sahf
filds
lahf
mov
cmp
push
push
in
pop
out
mov
gs
adc
mov
mov
das
xor
jno
dec
sbbl
call
fimuls
std
mov
sbb
jp
lret
lret
xchg
pop
mov
cmp
insl
popf
xchg
sub
mov
sti
pop
test
ror
and
lcall
mov
or
pusha
shlw
pop
adc
pop
pop
inc
sarb
hlt
adc
fwait
out
fmull
sub
ljmp
mov
scas
pop
out
clc
xchg
push
out
leave
xchg
pop
arpl
stos
xchg
inc
ja
mov
mov
jecxz
lock
bound
add
add
in
push
and
data16
cld
popa
push
push
add
cmp
xchg
mov
add
sub
pop
out
pushf
aad
dec
push
jns
cmpsb
fwait
push
stc
insl
xchg
fidivrl
pop
push
les
mov
popa
mov
push
shll
dec
jl
add
sbb
sarl
in
gs
dec
imul
loope
mov
sub
stc
mov
ret
divb
in
push
xchg
in
sbb
aam
jl
fs
dec
cld
xor
mov
mov
rorb
and
lea
xlat
mov
jmp
xchg
mov
or
pop
cmc
mov
shlb
cmpsb
pop
enter
sbb
xchg
xchg
add
sub
outsb
clc
ljmp
fnstsw
xlat
int3
aam
or
mov
inc
dec
fisttps
push
add
icebp
gs
cli
xchg
pop
in
mov
ja
fdivrs
cmpsb
lds
nop
inc
adc
pop
mov
and
jg
adc
ja
xor
and
adc
jbe
mov
xchg
ds
xor
notl
adc
adc
test
rorb
mov
ret
sbb
faddp
pop
dec
test
das
mov
and
movsl
pop
aad
movsb
xchg
pop
in
in
xlat
fimull
pop
pop
lds
adc
imul
adc
jno
or
sbb
mov
lahf
gs
bound
rol
in
lahf
adc
int
lods
mov
enter
jp
fisubrs
push
sbb
jae
enter
sidtl
sti
dec
jecxz
insb
fisttpll
mov
stos
jb
lret
push
rcrb
dec
push
fldcw
fwait
cmp
mov
mov
dec
fs
mov
adc
mov
xchg
mov
add
je
pop
icebp
or
into
dec
pop
sbb
lcall
mov
pop
stc
adc
es
mov
and
rcrl
repz
leave
ss
hlt
test
push
mov
fdivs
sbb
cwtl
sub
js
jo
lret
aam
xchg
inc
sbb
push
cmp
push
mov
mov
mov
popl
hlt
pop
and
out
jb
jge
jb
sbb
pusha
shll
cmp
or
icebp
cmp
inc
jecxz
arpl
push
testl
mov
jg
test
mov
lret
and
fistps
loop
fsubs
add
dec
leave
cmp
push
sbbb
or
mov
fs
pop
jae
orb
daa
xlat
popa
inc
loope
lds
push
xchg
fists
in
mov
shrl
fcmovnb
popa
lret
cmpsl
mov
loop
popa
sbb
jo
hlt
mov
fs
shll
dec
or
inc
mov
inc
mov
adc
icebp
lahf
or
dec
out
scas
hlt
aam
out
jb
sahf
add
sbb
push
dec
and
imul
in
add
sub
je
add
xor
cltd
pop
add
lds
or
lds
subb
in
rcl
or
repnz
enter
jmp
xchg
push
jnp
ljmp
aas
leave
sti
jmp
mov
jnp
jbe
sub
lret
push
jg
mov
mov
mov
lcall
push
pop
scas
test
inc
jecxz
mov
divb
lods
add
mov
mov
iret
sbb
sub
aaa
mov
ficoml
push
jge
mov
lds
aam
xlat
sub
push
push
or
lods
push
popf
mov
push
popf
pminub
test
jp
out
test
xor
and
not
mov
sub
sub
movsl
adc
mov
mov
pop
frndint
mov
and
gs
cmpsl
mov
cmpsb
push
xchg
mov
outsb
lret
repnz
mov
jmp
or
mov
subb
into
cs
mov
dec
sub
ret
and
test
jbe
or
mov
lods
movsl
fisttpll
aaa
into
mov
inc
lods
mov
xchg
iret
dec
lcall
pop
xchg
jns
jmp
add
in
mov
mov
in
bound
lahf
notl
cmp
data16
imull
add
dec
or
mov
shlb
and
and
or
xor
or
inc
jmp
stos
jbe
pop
xor
dec
inc
sub
xchg
add
pop
sarl
adc
ret
rcl
mov
jmp
jmp
adc
lods
pop
inc
in
mov
jne
pop
sbb
out
test
xor
mov
sti
mov
xchg
xchg
repz
lcall
rolb
in
mov
lahf
stos
dec
hlt
sub
pop
ds
or
cld
test
in
push
iret
popa
shl
lcall
inc
adc
fs
mov
sbb
xchg
pop
cmp
inc
push
into
mov
xchg
add
push
fsts
adc
iret
fnstenv
jmp
in
enter
cs
add
in
add
jno
sub
mov
jg
loope
jecxz
inc
and
push
rol
pop
pop
push
push
pop
daa
jbe
jge
sbb
in
xchg
int3
push
sbb
and
dec
jnp
into
loope
and
shrb
xchg
mov
iret
and
pop
cld
pop
pop
xchg
lds
sbbb
lods
das
jnp
mov
sbb
sub
scas
aad
popf
pushf
insl
cmp
xor
or
fisubrs
or
cmp
adc
daa
xor
push
lock
xchg
dec
inc
dec
icebp
sbb
mov
mov
adc
enter
cmp
aad
stos
mov
mov
pop
push
push
jecxz
jp
aas
jbe
xchg
push
cmc
add
adc
ljmp
aam
jnp
cmc
ds
ficomps
popf
lcall
shl
nop
xchg
pop
cmp
sub
cmp
lds
lods
stos
push
add
sbb
dec
jecxz
and
clc
xchg
cmovno
mov
xchg
insb
mov
mov
shlb
icebp
jno
adc
or
lea
jge
ja
iret
cld
push
pop
and
imul
push
inc
cltd
sub
aam
clc
or
mov
and
cltd
cltd
jp
adc
mov
adc
repz
adc
rorl
dec
pop
dec
xor
mov
outsb
pop
jno
inc
fcoml
cmp
popf
jne
dec
inc
mov
mov
cmpps
sti
popa
sbb
xor
xchg
and
or
cmp
fldenv
mov
mov
orl
inc
xchg
dec
cmp
hlt
adc
xor
test
bswap
pop
jmp
imul
xchg
xchg
faddl
inc
lds
pop
xlat
push
and
nop
add
icebp
pop
cmp
push
cli
jo
stos
mov
test
lcall
dec
imul
mov
ds
push
mov
mov
lahf
popa
rcr
in
aaa
std
enter
popl
fiaddl
jne
xlat
xchg
outsb
xor
and
idivl
sub
push
fmuls
xchg
mov
scas
imul
mov
outsb
mov
out
xchg
clc
iret
int
mov
scas
xchg
data16
insl
fistpl
arpl
or
jmp
lea
ret
mov
sbb
dec
in
jns
je
mov
mov
js
dec
jo
pop
lcall
gs
dec
addl
mov
xlat
fldcw
and
int3
insl
xchg
and
push
pop
test
sbb
mov
inc
push
mov
push
inc
mov
cwtl
and
dec
xchg
jl
gs
mov
xchg
add
dec
cmp
rcll
pop
inc
jmp
sub
std
aam
mov
data16
jp
jne
mov
mov
mov
adc
cmpsb
lods
add
xchg
loop
fldl
push
icebp
xor
push
mov
data16
nop
xchg
xchg
xor
dec
or
mov
mov
cmpsb
dec
add
aaa
sub
xor
aaa
pop
clc
cmc
xchg
and
or
ljmp
dec
xchg
mov
push
xchg
add
addb
repnz
mov
aad
inc
stos
cs
or
pusha
xor
lods
xchg
xchg
inc
outsb
push
jge
stos
repz
cmp
stc
ss
inc
loopne
sbb
shl
hlt
sub
insb
lock
add
sub
mov
mov
jmp
mov
cmp
push
jl
sub
sbb
pop
movb
clc
cmpsl
sub
sub
stos
mov
inc
pop
mov
popa
mov
aas
into
xchg
das
into
out
dec
mov
xchg
mov
mov
int
xor
bound
lods
xchg
and
sbb
mov
mov
aaa
popf
out
mov
xchg
movsl
testb
push
jne
aad
add
mov
xlat
jbe
loope
dec
cmp
mull
in
push
cmp
lret
ficoml
cmp
mov
gs
add
mov
gs
or
sub
cmpsb
mov
fcmovnu
cmp
mov
scas
loop
lods
add
sbb
es
and
lds
lret
add
mov
xchg
pop
and
in
push
scas
out
out
aad
or
out
jne,pn
popa
xlat
int
xchg
dec
test
push
inc
out
pop
push
xor
bound
sahf
or
insb
and
shll
mov
dec
mov
xchg
dec
mov
push
arpl
pop
or
jp
sub
sbb
xor
test
fwait
test
pusha
fisubl
popa
push
cmpsb
inc
in
or
mov
inc
insb
push
cmp
ss
rep
int
mov
iret
cld
mov
and
xchg
mov
ret
js
pop
lock
adc
sti
jle
sti
adc
sub
mov
mov
jno
nop
cli
adcl
pop
frstor
mov
sub
jne
jnp
sbb
pop
sub
loopne
mov
daa
sbb
in
or
lods
xrelease
xchg
and
push
xchg
xchg
xor
add
ja
pusha
je
pop
negb
in
outsl
hlt
add
mov
rorb
xor
leave
sub
mov
stc
roll
insl
pop
jb
pop
leave
mov
pop
mov
cmp
mov
sub
out
icebp
adcb
push
dec
in
xor
es
add
fwait
sub
sub
shlb
mov
cwtl
ret
rcl
lret
loop
int
mov
notb
aas
cmp
add
adc
mov
push
mov
jmp
in
mov
faddl
cwtl
push
data16
pop
and
mov
mov
out
mov
fisttpll
push
jge
addb
sbb
ficoml
jno
mov
sbb
cli
fnsave
test
add
test
pushw
stos
shlb
cmp
dec
stos
inc
mov
mov
dec
mov
jne
mov
or
hlt
arpl
cli
pop
repz
fs
es
aad
test
cli
mov
sbb
dec
lds
cmp
sbb
movsl
rcl
inc
shrl
add
push
xor
mov
xor
add
dec
dec
xor
movsb
push
sti
xchg
aad
pop
repnz
ljmp
ror
pop
stos
repz
dec
cli
scas
push
inc
in
xchg
and
test
and
fs
fmuls
mov
sti
aam
push
sub
jecxz
stos
dec
cwtl
fxch
sub
xchg
jnp
add
movsl
fsub
les
mov
jno
stc
pushf
and
pop
insl
inc
sub
add
pop
leave
push
fisttpll
and
push
stc
adc
xchg
das
push
inc
mov
movsl
test
out
loopne
test
pop
int
fldenv
dec
or
mov
arpl
mov
inc
adc
int3
and
and
jle
and
pop
dec
ja
inc
test
and
mov
enter
stos
incl
rolb
rcll
outsl
cmp
inc
inc
into
imul
cld
dec
inc
cmp
adc
xchg
leave
cs
lret
pop
negl
aad
lods
jecxz
xchg
mov
enter
sbb
fsubrs
jl
gs
sub
hlt
inc
adc
in
inc
fldl
test
mov
nop
xchg
loope
push
movsb
mov
adc
fisubrl
jmp
xchg
and
sti
xor
nop
decb
faddl
fisubrl
stos
sarl
shl
dec
inc
push
cmpl
pop
clc
jo
inc
jecxz
aas
mov
lods
jnp
mov
stos
or
movsb
cmp
int
pushf
stos
popa
push
movsb
jp
in
cli
fs
xor
or
push
lock
jbe
xlat
movsl
mov
int
mov
mov
popf
push
in
push
stos
icebp
call
sub
xchg
sbb
sub
movsl
push
sub
fwait
pop
gs
dec
outsl
pop
enter
cmp
inc
xchg
xchg
leave
inc
dec
mov
pop
bsr
and
out
mov
mov
icebp
xlat
ds
and
mov
jo
add
mov
out
in
cld
fistpll
pop
cmpsb
sub
in
inc
aam
popl
loopne
mov
push
je
orb
and
imul
pop
mov
inc
xchg
xchg
inc
add
stc
test
sub
pop
inc
aam
into
dec
test
testl
jl
sbb
sbb
int3
sbb
movsl
outsb
xor
mov
add
sbb
sarl
mov
dec
mov
lret
iret
jl
xor
xchg
add
push
xchg
xor
xlat
jp
aas
dec
scas
push
test
cld
into
fwait
inc
sub
aas
out
jl
push
cltd
dec
dec
jno
movsl
xchg
roll
or
add
mov
fistpl
out
jp
jl
nop
bound
or
mov
repz
stos
adc
mov
int
mov
lcall
cld
daa
lret
jecxz
sub
pop
push
add
and
int
add
xchg
dec
scas
js
std
adc
and
mov
insl
xor
lods
stos
repnz
push
pop
sti
pop
xchg
pop
dec
in
fsubrs
add
sub
jmp
lea
or
jb
repnz
dec
jns
rcl
sub
test
mov
sub
and
xor
rcrl
or
lret
jns
sbb
or
es
adc
fisttps
and
cltd
ljmp
cmp
loop
mov
mov
test
push
daa
xor
xchg
xchg
aas
xchg
imul
lcall
movsb
inc
sub
aaa
test
lock
pop
mov
scas
jo
jl
les
jp
xchg
sub
leave
jae
mov
pop
pop
rorl
inc
cltd
scas
inc
testl
jb
sub
xor
ds
dec
cmpsl
fstps
lret
or
dec
sub
dec
mov
into
popf
push
pop
mov
scas
cmpsl
or
mov
push
jnp
xor
jp
cmpsl
pusha
xor
inc
fdivr
cmp
mov
sahf
popa
ret
mov
insl
inc
fstps
bound
ja
jp
xor
cmc
xor
dec
js
loop
pushf
cmp
jl
sub
hlt
ljmp
add
shll
shl
pop
aaa
and
xor
movsl
or
stos
iret
push
mov
divb
mov
hlt
push
rolb
cld
push
aaa
inc
pop
popf
mov
je
inc
divps
popa
ret
fldt
push
stos
jae
xchg
outsb
inc
and
ret
popf
cmp
cli
sub
mov
and
mov
and
dec
xchg
mov
adc
or
add
mov
out
inc
pop
mov
jmp
cmp
out
jl
push
inc
jp
cmp
ror
rorb
mov
jge
or
scas
insl
jg
push
cs
or
inc
add
or
sub
mov
cmp
pop
lds
and
jae
into
int
dec
inc
stc
xchg
add
movsb
sub
enter
sub
xchg
inc
data16
cld
pop
inc
outsl
sbb
or
jge
cmc
outsb
mov
imul
xchg
jne
push
inc
loope
outsb
push
out
sub
xchg
pop
mov
mov
push
aam
inc
icebp
lods
pop
repnz
loopne
enter
jg
dec
or
and
push
add
movsb
iret
cmp
xor
mov
insl
xchg
fbstp
sbb
cmpl
daa
pushf
mov
xorb
in
xchg
cmp
pop
mov
fdivrs
pop
adc
sbb
mov
sbb
clc
sahf
mov
xor
xchg
mov
or
pop
mov
pushf
gs
bound
inc
xorb
int
mov
inc
add
ss
in
lahf
loop
adc
jmp
mov
out
test
mov
pop
add
adc
lahf
sti
aas
outsl
xor
mov
movsb
lods
xchg
and
push
pop
mov
adc
lret
outsl
push
dec
fsts
jp
pusha
decb
push
add
test
jge
jecxz
sbb
ret
push
xchg
bound
inc
aam
adcb
and
sub
mov
js
xchg
outsb
mov
mov
push
mov
aas
rcrl
push
push
imul
repnz
sahf
cmpsl
pop
in
sub
insb
mov
addr16
imul
lock
lcall
imul
das
out
mov
iret
enter
mov
inc
iret
jl
int3
inc
test
jmp
inc
xchg
out
outsl
xchg
and
or
fwait
lcall
push
push
push
jnp
int
xchg
test
outsl
inc
hlt
mov
pop
cmp
fiadds
popf
add
lods
mov
xor
pusha
sub
das
loope
and
ljmp
fcoml
test
jge
stos
mov
in
rolb
pop
movsl
mov
stos
xchg
es
cs
pushf
mov
sahf
pop
cltd
fistl
aas
inc
pop
je
mov
lcall
insl
mov
fucomip
cli
in
adc
sbbl
mov
mov
jp
mov
out
jne
enter
pusha
mov
fadds
ss
les
in
mov
mov
lcall
leave
loopne
daa
stos
pop
fdiv
sub
dec
imul
dec
int3
push
rep
xchg
add
movsl
and
js
je
sbb
mov
xchg
dec
bound
shll
cmc
sub
lcall
es
repnz
lret
nop
mov
out
cmp
xchg
push
test
addr16
rcrl
aam
mov
mov
lahf
mov
inc
clc
js
jg
cmpb
sub
jb
loopne
xor
into
pop
pusha
xor
jp
aaa
sahf
xchg
xchg
aad
mov
mov
push
push
aaa
and
repnz
movsl
mov
lods
push
or
cmpsl
pusha
add
data16
xchg
sbb
andb
pop
jne
lret
sbb
sub
pop
insl
dec
mov
sti
je
pop
mov
pop
mov
jne
push
je
inc
add
mov
and
and
std
adc
cmpsb
sbb
sub
or
ds
mov
inc
adc
fnstenv
daa
mov
or
mov
insb
subb
inc
pop
lahf
add
xor
cld
fidivl
ret
out
shl
jl
pop
loope
andl
pop
mov
sarb
sbb
subb
pushf
movb
out
jl
mov
xlat
pop
mov
cmp
ljmp
loopne
push
lea
sbb
les
popf
lahf
insb
xchg
pushf
xchg
push
mov
cmp
imul
or
cs
pop
sbb
imul
jmp
mov
cmp
rcll
jecxz
sub
test
mov
pop
lcall
std
fs
lret
mov
subb
cmp
jmp
bound
cs
cmp
push
cmp
cmc
insl
push
xchg
jle
add
sarb
loope
mov
aam
aam
push
mov
jno
test
out
jbe
cld
je
fsubrl
xchg
fistpl
lods
ret
ds
punpckhdq
in
inc
xor
and
mov
je
jge
push
cmpsl
inc
ret
pop
xchg
fsubrs
push
jecxz
dec
shrb
hlt
fdivp
cmc
or
sahf
adc
cmp
mov
push
fwait
std
inc
flds
sbb
or
jns
or
cmp
xor
jnp
sbb
orb
xor
testl
sub
ret
add
sahf
in
cmp
sbb
cmp
sarb
stos
and
in
pop
push
cmp
xchg
enter
sbbb
sub
inc
xchg
insb
jo
lds
daa
dec
aad
hlt
inc
jne
popl
inc
pop
mov
fwait
insb
pop
sti
hlt
insb
push
out
mov
out
repnz
testb
mov
mov
xor
sbb
dec
dec
adc
mov
jbe
gs
scas
fsubl
pushw
test
adc
mov
rcrb
or
mov
in
int3
jecxz
sbb
sub
adc
jne
jne
cltd
pop
xchg
arpl
mov
xchg
jne
pop
out
xor
addr16
cltd
pop
mov
lea
inc
sub
push
stos
pop
jmp
ss
pusha
push
sub
scas
jecxz
pop
addr16
mov
add
mov
rorl
adc
jmp
mov
stos
mov
icebp
jp
jg
and
mov
ja
xchg
js
mov
sbb
std
and
push
xchg
pop
sub
add
xchg
test
orb
pop
pop
repnz
adc
adc
cmc
pop
test
clc
xchg
das
into
mov
add
cmpsl
pop
mov
into
mov
jb
push
orl
xor
sub
push
xor
loopne
push
mov
pop
inc
leave
mov
push
je
pop
sub
cmp
lea
pusha
xchg
push
xchg
cwtl
pop
mov
scas
arpl
pusha
xchg
addb
dec
test
in
outsb
lcall
push
cmpsb
ret
call
mov
dec
jns
dec
out
and
mov
xor
push
xor
xchg
cmp
mulb
rorl
push
sahf
je
lahf
sti
shl
in
cmpsl
cmp
cs
test
inc
es
mov
test
xchg
outsl
pop
cmpsl
jge
push
sbb
outsb
xor
or
and
stc
push
fwait
pop
lods
sbb
lea
fbld
leave
xor
sub
in
shlb
addr16
mov
xor
popf
inc
ret
punpcklbw
fld
aas
mov
xlat
push
xor
shlb
leave
ret
inc
dec
xchg
das
idiv
shrl
pop
ss
sub
and
mov
int3
lcall
push
push
jns
push
push
dec
lea
cmp
mov
pop
cltd
sub
xchg
dec
je
fdivp
xor
sub
push
loope
xchg
sbb
fs
aam
repnz
inc
sub
and
push
sti
inc
xor
pop
sub
and
pushf
bound
out
pop
pop
out
dec
lods
imul
enter
cmp
push
pop
arpl
sarl
jne
test
and
add
inc
mov
adc
jmp
aam
hlt
and
imull
repnz
jns
fisubs
mov
jmp
push
push
jmp
call
int3
mov
hlt
or
sahf
js
lret
or
ret
jne
adc
fidivrs
in
jns
mov
fs
push
push
fcmovnu
add
cmp
stos
scas
cld
bnd
movzwl
xor
loope
mov
mov
xor
mov
fldt
and
mov
xchg
popl
inc
and
xchg
and
popa
enter
out
scas
mov
push
inc
lds
jb
push
dec
mov
imul
in
mov
in
movsb
push
and
cmpsl
out
pop
mov
and
icebp
mov
push
and
pop
testb
jmp
inc
into
mov
mov
push
stos
jnp
xchg
in
fildl
cld
out
cmp
imul
inc
insb
daa
lcall
push
fldcw
push
xorl
or
call
jg
mov
or
ljmp
dec
jo
in
mov
nop
mov
cmpsb
sbb
clc
xchg
in
gs
jae
jge
inc
cs
int3
into
cmp
xor
jmp
fadds
add
push
out
and
lret
lods
mov
daa
jbe
mov
inc
xorb
sub
in
test
fwait
movsb
imul
fldt
sub
outsl
rcrl
dec
mov
jno
push
nop
bound
stos
adc
or
xorl
movsb
xchg
push
mov
xchg
addl
adcl
loopne
ss
daa
adc
enter
fistpl
push
test
pop
cmp
push
dec
or
cwtl
enter
cmp
xlat
scas
in
data16
xchg
xchg
movsl
orl
icebp
adc
pushf
fucomi
call
out
and
push
in
in
pop
push
push
push
setbe
xor
addb
add
pop
sbb
sbb
leave
sbb
jno
or
mov
add
pop
out
sub
jl
stos
ja
out
mov
sub
cmpsb
cmc
sbb
sbb
imul
cmp
cli
adc
sub
fcomps
leave
xor
xor
xchg
aam
mov
movsb
or
push
xchg
mov
jae
jle
mov
and
inc
jmp
scas
jle
nop
loopne
into
in
fildl
arpl
ret
ret
pmaxsw
dec
into
gs
adc
dec
or
cmpsl
sbb
outsb
lret
pop
add
mov
cmp
dec
xor
lret
push
push
mov
jge
cli
clc
pop
das
mov
lods
inc
push
ret
arpl
mul
cld
push
dec
int
mov
sar
inc
add
ficoms
sub
fcoms
insl
pop
push
icebp
jb
fwait
adc
xlat
add
cmpl
test
sub
cli
jnp,pn
cmp
stos
add
test
leave
in
das
loope
cld
cmp
cwtl
inc
fldt
jns
jg
pop
in
jmp
pminsw
shll
jecxz
push
mov
inc
sub
dec
xor
pop
push
xor
pushf
dec
jmp
jl
pop
cld
ds
or
stos
sub
push
or
cmp
imul
pop
jg
out
in
scas
xchg
cmp
ljmp
out
addr16
pop
sbb
or
pop
aaa
frstor
xor
inc
mov
adc
mov
in
lds
fldenv
jne
fs
push
inc
lods
daa
cmc
cmp
gs
mov
dec
jecxz
ljmp
decl
dec
adcb
cmp
sarb
push
pop
inc
imull
adc
cmp
enter
pop
xorb
shll
add
sbb
fiaddl
insb
jns
jecxz
pop
enter
jbe
mov
imul
lret
and
cs
incb
sarl
imul
mov
icebp
popa
test
mov
inc
scas
mov
in
sahf
sub
inc
xor
jb
out
sub
bnd
mov
cwtl
imulb
push
sti
imul
xor
and
sahf
cli
pop
fs
xor
inc
xchg
adc
jmp
jbe
sub
and
decb
pusha
ds
jo
aas
mov
mov
ja
pop
sbb
xchg
cmp
aaa
sbb
stos
repz
movsl
mov
call
xchg
jmp
push
ret
out
lock
daa
mov
leave
repnz
mov
pusha
push
xor
push
and
les
mov
pop
push
shlb
push
icebp
dec
aas
rcrb
fcmovnb
dec
cmp
xchg
ja
inc
xor
dec
dec
mov
leave
bound
xchg
mov
call
rolb
in
mov
mov
mov
hlt
cmc
jno
adc
sbb
xchg
mov
shll
mov
mov
mov
jb
jb
mov
xchg
or
jp
test
lods
test
xchg
cltd
sti
cmp
in
pushf
out
sub
pop
ja
dec
adc
pop
push
mov
fwait
jbe
push
lods
push
in
js
fmuls
jge
xor
cmpsl
call
lock
shll
jbe
inc
ljmp
ret
bound
clc
test
dec
cld
inc
jns
rcl
mov
push
jnp
pushf
fldt
test
in
dec
andl
cmpsl
and
dec
mov
adc
inc
cwtl
xor
jg
movsl
jne
dec
adc
mov
fs
and
gs
pop
mov
pop
adc
adc
pop
in
push
xchg
adc
out
rolb
shl
ds
hlt
pop
ss
xchg
lods
sbb
adc
out
mov
or
push
pop
pop
in
mov
out
mov
xor
pop
xchg
test
pusha
das
fwait
xchg
rorl
sbb
dec
inc
fildl
int
sub
push
leavew
loopne
jp
jp
ss
or
adc
pop
xlat
popf
push
fwait
push
sbb
clc
dec
jecxz
cli
jecxz
fwait
dec
out
lods
mov
neg
xchg
jbe
mov
dec
call
iret
push
in
jl
ret
lret
or
xchg
sti
mov
dec
aam
push
jg
sub
push
pop
pcmpgtw
mov
inc
sub
push
sub
mov
bound
movsb
test
adc
push
push
test
call
jle
xchg
mov
jno
imul
fidivrs
imul
add
dec
and
jl
subl
movsb
pop
ret
stc
cmpsb
xchg
sbb
pop
nop
lret
cmp
mov
int
scas
ljmp
lods
and
daa
and
sub
xchg
cli
mov
inc
cmpsl
out
mov
or
ds
fildl
in
popf
sub
cmp
push
nop
sti
mov
stos
cltd
fbld
sbb
ds
pusha
fildl
imul
shr
repnz
dec
ss
iret
lock
stos
loopne
mov
orl
mov
push
mov
xchg
add
sub
adc
cmc
aad
cmpsb
shrd
push
cli
test
ds
inc
xchg
or
xchg
mov
jne
stc
cmpsl
cmc
or
movsl
sub
or
roll
push
out
movsl
lods
int3
jbe
jmp
lds
dec
addr16
pop
mov
cmc
dec
lcall
je
and
fisubrs
and
dec
inc
jno
mov
adc
jmp
and
xlat
fmulp
or
loop
call
cmp
fisubrl
jnp
inc
dec
mov
sti
add
ds
ds
add
imul
xchg
mov
dec
and
lock
mov
test
les
std
adc
stc
cmpsl
lcall
sarb
mov
fs
lock
add
dec
adc
pop
cmpsl
sbb
pushf
popa
dec
lods
cltd
aad
jg
inc
mov
jmp
cmp
add
mov
and
jl
mov
lcall
je
and
mov
movsl
adc
nopl
inc
cmpsl
cmpsb
jbe
xorl
dec
inc
loope
adc
cs
test
rclb
mov
negl
fmuls
pop
popf
lods
popa
dec
daa
fstpl
jecxz
psrlw
sbb
call
xor
ret
jge
push
roll
in
outsb
xor
jae
ficoml
js
push
sbb
std
enter
cld
std
shlb
add
jg
stos
stos
and
push
inc
pop
loop
sbb
or
jge
inc
cwtl
jnp
ss
sbb
rol
push
lret
jge
xor
cmp
inc
dec
dec
cmp
jae
rclb
js
or
jno
iret
into
int
out
sbb
xlat
adc
imul
push
out
push
push
mov
mov
jmp
addr16
adc
inc
mov
mov
cmp
outsl
sub
lods
dec
mov
int
mov
and
jbe
rcrl
mov
pop
aas
sub
and
fs
sbb
add
mov
xchg
pop
inc
daa
pop
push
sub
pop
pusha
dec
mov
cmp
aam
push
mov
pop
rolb
cltd
and
mov
scas
leave
xor
xor
faddp
xchg
shl
jle
push
mov
scas
push
adc
dec
mov
pop
imul
mov
pop
cmpsl
mov
fucom
call
shl
xorl
es
mov
popa
hlt
fsubrs
xchg
dec
mov
push
mov
xchg
cmpsb
mov
lods
ret
jl
sahf
bnd
jno
out
icebp
jno
mov
imul
icebp
and
and
xor
ret
aaa
daa
pop
jp
dec
add
ja
dec
int3
push
shl
icebp
das
xor
lods
es
das
aas
jo
push
xor
loop
push
mov
wbinvd
jg
addr16
adc
xor
lds
pop
pop
frstpm(287
inc
xor
xchg
pop
mov
mov
mov
add
push
das
xor
out
andb
jbe
idivb
push
and
lcall
enter
out
pusha
lock
pop
ret
ret
leave
std
xor
sub
lret
xor
dec
sub
inc
or
or
mov
mov
dec
cld
test
xor
pop
rcl
test
cltd
dec
ss
ss
mov
push
scas
pushf
sbb
adc
ffreep
adc
jne
dec
jmp
pop
stos
cltd
mov
jp
pop
sbb
dec
xor
sub
dec
add
jne
cwtl
fs
aad
xor
lea
xor
inc
add
add
lret
push
adc
stc
in
mov
mov
out
arpl
jge
je
enter
jecxz
sbb
adc
ss
rorb
and
in
push
shrl
and
xor
out
test
pop
and
ds
inc
cwtl
pop
jnp
outsl
push
out
dec
xchg
gs
cmpb
je
sub
mov
jg
fdivrp
xchg
push
fimuls
xchg
xchg
and
pop
lret
cmpsb
dec
adc
js
cmp
and
lds
mov
pushf
out
adc
dec
gs
push
add
xchg
jo
inc
aas
or
ljmp
or
mov
jb
mov
xchg
add
in
push
les
or
push
xor
test
arpl
popf
or
mov
sub
dec
outsb
adc
push
sub
xchg
lret
mov
xchg
cld
or
shll
icebp
inc
cmp
pop
xchg
mov
mov
ds
lods
cmc
hlt
and
cmp
adc
mov
roll
outsb
dec
push
leave
or
sti
xor
stos
or
pop
xchg
mov
or
dec
nop
iret
sahf
das
mov
lods
scas
adc
push
leave
in
cmp
in
subb
pop
or
xchg
fimuls
and
pop
sbb
stos
stc
push
xchg
mov
push
pop
or
ret
dec
fsubrl
cmp
aas
add
fadd
pop
add
gs
mov
adc
fcmovnu
scas
mov
jmp
mov
stos
ljmp
lcall
jae
sbb
jbe
ss
mov
test
jae
lods
dec
test
sahf
pop
jbe
mov
cs
out
je
fnstsw
jo
mov
dec
xchg
scas
packssdw
je
repnz
xchg
mov
mov
outsb
mov
push
inc
bound
test
add
cs
sbbb
loop
push
and
sbb
xor
nop
pushf
sbbl
mov
add
pop
sub
pop
xor
dec
aaa
leave
arpl
xchg
mov
out
roll
nop
inc
in
xchg
imul
fs
adc
lds
shr
outsl
dec
mov
repnz
shll
les
out
xchg
or
pop
push
repz
push
dec
aas
push
lods
pushf
xchg
adc
xlat
mov
ja
lahf
or
push
sbb
loope
sbb
rcrb
int
xchg
inc
pop
pop
dec
mov
mov
test
mov
mov
hlt
fwait
xor
jle
ss
push
or
dec
sahf
lds
lea
inc
cltd
ss
push
sub
stc
and
pusha
mov
inc
outsb
lock
test
cmp
and
mov
outsl
cmp
ds
mov
xchg
imul
and
rcrb
mov
incb
mov
ljmp
dec
adc
xchg
inc
mov
pop
inc
jg
fnstcw
outsl
add
adc
inc
mov
dec
clc
or
fwait
dec
pop
pushf
dec
jmp
add
mov
out
mov
push
shlb
in
test
and
mov
fldl
stos
test
test
and
inc
lret
lidtl
cmp
test
xchg
jl
inc
sbb
andl
pop
repz
pop
pop
xor
ficoml
lods
andl
xor
loop
sbb
mov
jp
out
mov
clc
push
xor
insb
fcompl
insl
and
xor
mov
cmp
test
outsb
or
adc
sbb
xor
pop
mov
int
push
ficoml
std
fnsave
movb
sub
push
pusha
inc
je
scas
adc
inc
dec
pop
adcb
mov
sar
xchg
subl
push
adc
pusha
add
cltd
xor
outsl
imul
dec
jae
xor
mov
out
lret
inc
fistps
mov
lret
outsl
imul
lret
dec
jne
mov
es
xchg
xor
xchg
enter
incb
test
jge
mov
or
cmp
mov
adc
xor
push
nop
enter
cmp
aaa
mov
pop
inc
cmp
inc
xchg
call
lcall
cwtl
xor
iret
mov
inc
xchg
iret
addr16
or
xor
jecxz
sub
mov
mulb
ror
cmp
adc
idivl
jno
xchg
push
mov
hlt
cmpsb
ret
adc
mov
jo
into
push
adc
pop
xchg
mov
dec
xchg
mov
popf
push
xor
in
push
xor
inc
dec
rcll
mov
pop
xor
jno
cmp
lret
je
enter
enter
mov
andl
jno
lods
sbb
xchg
mov
mov
sub
xchg
das
test
lods
outsl
xchg
lcall
add
add
pop
xchg
pop
pop
jns
outsb
shrb
and
sbb
jne
ds
or
jecxz
cld
movsb
mov
in
cwtl
dec
popl
push
ret
lock
cmpsb
xchg
decl
mov
jecxz
cwtl
call
mov
sbb
pop
jbe
and
imull
repnz
insl
jns
sbb
jp
fdivrl
mov
sbb
jp
sbb
rcl
nop
push
xchg
cmc
pop
dec
mov
or
cs
and
in
lock
jg
mov
cmpsb
and
mov
popf
cli
sbb
jmp
or
or
jg
ljmp
loope
mov
mov
jl
add
mov
rcll
test
in
sarl
sarb
jne
das
decb
int3
xor
daa
ss
addr16
add
jo
dec
rolb
rorl
adc
mov
dec
push
jno
xor
outsb
push
cld
daa
hlt
cwtl
imul
xchg
sub
in
shl
or
xor
xchg
cmp
sahf
cmpsl
les
dec
xchg
jo
daa
lds
lods
push
adc
testl
inc
stos
fucomp
divl
jo
movsb
scas
subps
and
and
mov
rcl
or
adc
adc
mov
jg
mov
mov
xlat
leave
daa
sti
or
push
pop
insl
out
icebp
fdivs
cld
fildll
and
add
call
mov
pop
and
push
push
loopne
lahf
jb
icebp
psubusb
stos
sub
ljmp
shl
xchg
sti
mov
sub
mov
cmovo
lret
add
pop
stos
mov
icebp
push
pop
ja
add
dec
push
push
pusha
jae
push
jmp
out
mov
scas
test
push
ljmp
dec
out
push
sbb
xchg
pop
shll
stos
cmp
rorb
es
das
inc
sub
out
out
push
movsl
inc
or
add
inc
push
mov
ret
jl
or
mov
mov
das
or
inc
insl
jmp
push
adcl
gs
dec
dec
dec
in
lcall
push
insl
mov
shr
sarb
cmp
push
pop
out
ja
mov
adc
and
inc
addr16
out
adc
jle
gs
scas
popa
cmpsb
imul
push
ret
jno
push
outsb
mov
mov
iret
pop
sbb
nop
mov
dec
dec
ljmp
ret
sub
nop
fwait
hlt
push
cld
push
ljmp
sarl
push
adc
pop
fwait
ds
xor
push
pop
dec
push
xor
jns
lock
negb
xlat
clc
je
xlat
ds
call
adc
jle
xor
xchg
icebp
fmul
mov
data16
mov
in
adc
push
pushf
jmp
stc
push
into
rclb
pop
dec
call
fs
add
xor
cli
std
pushf
cli
loope
movsb
dec
sahf
adc
xor
imul
iret
push
dec
dec
pop
cmp
mov
sub
sahf
cmp
jge
pushf
subl
sbb
mov
decb
cmp
rorb
in
test
sub
test
aam
or
xchg
sub
xlat
mov
adc
je
subl
push
mov
ficoms
xor
xchg
push
add
ds
mov
jecxz
push
push
repnz
in
les
pop
aad
adc
cmp
adc
in
jmp
jb
scas
cmp
push
pushf
jmp
push
adc
xor
jae
or
sti
jge
mov
add
sbb
out
outsb
and
movsb
cmp
imul
lds
xchg
out
fs
shrw
jmp
test
mov
jne
jne
aas
jle
jo
sbb
xor
pushf
lods
cwtl
mov
xchg
test
aad
mov
cmc
or
addr16
enter
mov
sbb
jecxz
int3
lea
sub
fmuls
adc
pop
mov
cmp
sarb
pushf
addr16
push
repnz
mov
add
jne
bound
inc
mov
and
subl
ds
inc
pop
push
sub
das
push
pushf
scas
push
stc
out
fiaddl
daa
scas
mov
cwtd
rol
adc
mov
jp
inc
pop
outsb
cmp
loop
adc
mov
jge
repz
mov
inc
mov
cmp
inc
push
sbb
and
xor
out
int3
xchg
and
xor
push
popf
gs
xor
mov
cmpsl
mov
test
aad
adc
cld
sub
or
popf
and
dec
or
pop
mov
sbb
ljmp
mov
loopne
fldcw
mov
subb
ljmp
std
sub
and
push
jnp
lret
mov
lods
xchg
cmp
pop
dec
lods
ljmp
mov
pop
out
jle
ljmp
xor
popa
jbe
xor
out
mov
shll
sbb
iret
je
mov
daa
lahf
data16
jmp
push
pop
mov
sahf
outsl
mov
push
xchg
popa
lret
mov
jo
sahf
xor
mov
es
sub
adc
je
stos
pop
jp
shl
or
ds
or
sar
stc
sub
and
pop
stc
mov
stos
dec
or
sahf
mov
xchg
xchg
fbld
addl
pop
or
cltd
hlt
bound
insl
adc
mov
cmc
jno
inc
jp
lea
je
es
add
test
sbb
out
std
shrb
and
scas
sub
mov
adc
xlat
xchg
cmpsb
jmp
cwtl
test
mov
sub
adc
sbb
iret
mov
popf
icebp
cwtl
arpl
fdivrs
sbb
fiadds
mull
testl
jo,pn
sub
xchg
sbb
jbe
push
shlb
loop
jbe
sbb
push
jo
imul
mov
ds
addr16
cli
or
jl,pt
out
int
dec
mov
push
scas
xchg
sahf
or
pop
fcompl
jmp
add
add
es
ret
fsubrs
dec
sub
sub
mov
xlat
adc
cmpsb
dec
js
int3
pop
hlt
mov
xchg
iret
fisttps
ja
jmp
cmp
pusha
cmp
popw
lock
and
mov
pop
out
pop
pop
test
sarb
lcall
mov
cmp
fdivp
lahf
enter
js
cs
jge
and
std
out
mov
test
stc
pop
xor
insb
in
ss
aaa
sti
lret
xchg
inc
out
sub
es
outsb
sbbb
pop
pop
or
scas
iret
inc
cwtl
leave
movsb
push
xor
leave
inc
lock
jmp
loop
and
add
ss
xchg
cwtl
xchg
mov
jmp
sbb
mov
repnz
xchg
lods
jmp
xchg
fisttpl
es
xor
inc
or
stos
daa
push
nop
ret
push
mov
sbb
or
jb
cmp
repz
sub
cmpl
xchg
sti
loopne
in
pop
das
shlb
in
flds
fcmovnbe
stos
inc
sbb
jecxz
ds
mov
push
dec
or
xor
addb
std
mov
shlb
aad
sbb
dec
mov
add
xchg
orl
fdivs
pop
out
add
scas
shll
xchg
jg
add
icebp
ret
int
xchg
cmc
sub
lds
fcmovu
mov
std
call
mov
andl
dec
sub
mov
adc
adc
rcrl
mov
jno
repz
jmp
push
push
pop
ror
popa
notb
mov
call
pop
and
push
loopne
out
or
pop
push
cmpsb
pop
sbb
sahf
test
into
mov
and
hlt
daa
cmp
mov
insl
popl
jbe
lahf
cmp
xor
je
div
imul
sub
subb
adc
inc
cmp
add
dec
lret
lahf
pop
push
adc
out
fistpll
and
sub
xor
mov
lret
sub
ficoms
pop
mov
xchg
fs
jmp
inc
out
lcall
hlt
loopne
jbe
push
movsb
sar
test
mov
aas
mov
sub
movsb
cmp
decb
inc
xor
pop
cmpsb
fsts
shll
inc
fidivrl
inc
mov
adc
mov
jb
in
stc
aas
es
call
mov
pusha
das
sahf
ljmp
mov
in
cmp
mov
popf
push
cltd
pop
sbb
shr
icebp
dec
pop
cwtl
cmc
or
aas
xchg
add
adc
iret
ror
cmp
sar
stos
pop
jne
pop
movsl
loop
int
or
xchg
push
mov
popf
mov
mov
pop
sbb
push
cmp
dec
lods
adc
mov
in
mov
repnz
fadd
add
ja
es
sub
xor
dec
ss
cmpsl
es
sbb
mov
xchg
out
jp
ret
push
push
jmp
sti
xor
xchg
insl
cmp
mov
imul
inc
inc
jne
cwtl
cmp
jae
xchg
push
sbb
lret
adc
mov
je
jp
sub
push
das
xor
mov
je
jne
xor
pushf
or
cmp
mov
mov
daa
cld
lea
jle
or
daa
lret
push
pop
cld
push
into
inc
mov
fwait
adc
addr16
and
es
fs
lock
lds
popf
push
aad
into
adc
inc
jbe
push
mov
mov
fistl
in
xor
in
dec
aas
mov
push
fisubrl
and
xor
sbb
xchg
test
cmp
sub
aas
pop
jb
mov
xor
xor
and
cli
xor
cmpsl
sarb
fwait
sti
mov
and
pop
mov
movsl
xor
cli
mov
lret
adc
inc
jle
lret
fs
dec
mov
jb
cmp
dec
mov
sbb
iret
rcrb
jle
cmc
mov
pop
cwtl
loope
pop
scas
lock
jg
cwtl
ss
sbb
inc
and
stos
jmp
pushf
cmpsb
jae
mov
repnz
pop
gs
sahf
inc
jne
mov
nop
push
fisttpl
pop
inc
cmp
ss
push
out
ja
cmp
cltd
test
loopne
pop
push
dec
imul
clc
out
push
sub
leave
jmp
jecxz
decb
inc
adc
aas
sahf
pop
rsm
ror
push
mov
push
pop
inc
test
pop
jecxz
aas
cld
mov
popa
add
lea
sti
sub
dec
push
out
in
andb
pop
pop
mov
pop
ret
fsts
sti
js
aam
xchg
jae
lods
adc
jne
pop
jbe
out
jmp
leave
xor
icebp
adc
and
jno
jp
movb
out
xor
outsb
push
dec
sbb
cmpsb
sbb
fwait
adc
fistl
pop
fwait
data16
inc
lcall
out
inc
xchg
jl
jno
rorl
xor
dec
jecxz
imul
mov
push
sbb
cmp
dec
cli
push
adc
out
popa
mov
or
sbb
adc
pop
aam
repz
idivl
pusha
inc
push
cs
pop
dec
jl
or
aam
sub
enter
cwtl
cli
cmc
mov
dec
es
cmpsb
inc
inc
movsb
fwait
sahf
iret
mov
aam
enter
push
sbb
pop
xlat
mov
dec
jb
lock
in
scas
idivb
pop
mov
pop
es
cmp
decl
bound
aas
ret
enter
adc
loope
ret
push
cwtl
rclb
sbb
dec
lret
repnz
int3
rorb
sbb
mov
fcompl
test
sbbl
xor
and
jmp
xor
addl
roll
xchg
movsl
rcll
lods
loopne
lods
cmovge
ficoml
and
pop
lret
sarb
lods
push
dec
dec
mov
repz
jg
xchg
std
pop
sahf
mov
adc
and
push
scas
pop
or
dec
xor
mov
movsl
fidivs
movq
aaa
out
cld
icebp
cmp
xchg
sbb
adc
pop
sbb
mov
cld
push
cmp
addr16
xchg
bound
add
add
xorb
pop
jne
loop
mulb
dec
cmp
sub
mov
addr16
dec
or
add
aam
cmpsb
mov
js
jecxz
shll
adc
sbb
fwait
push
mov
hlt
jnp
fmulp
inc
out
loopne
std
gs
push
jg
in
popa
addr16
dec
or
add
or
outsl
fs
jns
or
es
fcoms
sbb
mov
pop
mov
lods
inc
sbb
in
cmp
ret
je
add
push
movsl
pop
fsubp
mov
dec
mov
jb
ret
adc
sbb
add
mov
dec
ljmp
out
inc
and
sbb
scas
mov
sub
jo
pop
or
outsl
cmp
push
dec
adc
fsqrt
daa
roll
adc
gs
loopne
clc
cwtl
or
mov
sub
cmp
jno,pn
iret
sub
out
cmp
add
mov
xor
sti
movsl
push
sbb
ret
test
dec
cli
into
ret
movsl
cmc
out
push
xor
xor
adc
xchg
loop
xchg
repz
inc
gs
and
mov
cmp
xchg
adc
push
cmp
negl
jmp
movsb
jae
lret
cwtl
xchg
loop
shr
insl
and
fimull
out
push
test
cmpsl
push
add
mov
leave
out
stos
mov
cmp
sbb
shlb
dec
adc
push
jp
xor
divb
out
jae
lods
jge
jns
add
les
push
pop
dec
test
out
idivl
loop
fiaddl
adc
pusha
sbb
dec
cmpsl
adcb
aas
test
je
movsl
dec
push
hlt
negl
imul
pop
pop
testb
fs
xchg
mov
sub
pop
rcrl
xchg
or
sub
sbb
and
loopne
idiv
lods
ds
cmp
sub
imul
lds
mov
aad
repz
pop
imul
lret
repz
fdivrs
adc
stos
repnz
inc
test
cli
int3
aaa
or
pop
or
movsb
hlt
dec
cmp
mov
aas
xor
push
scas
sub
xchg
sbb
xchg
mov
pop
out
outsl
pop
pop
jno
sub
adc
js
divl
in
cmc
lods
in
push
dec
sub
sub
lret
cld
sub
dec
push
int3
sub
sbb
adc
mov
inc
stc
add
insb
daa
jne
fistpll
test
add
xchg
adc
sti
xor
sahf
add
rep
add
cmp
and
and
jno
cld
decl
xchg
jge
mov
xor
pop
shrl
scas
arpl
lea
sbb
xchg
adc
les
mov
sahf
and
pop
sahf
sbb
mov
out
ss
and
pop
cltd
ds
or
sub
xchg
inc
sarl
inc
mov
outsb
gs
add
pop
lock
subb
addl
pop
mov
pop
adc
lods
adc
cmp
pop
pop
add
push
lahf
push
xchg
popf
pop
andb
pop
ja
rcrb
hlt
sti
fnstsw
xchg
fabs
fidivs
into
fs
pcmpgtw
ds
adc
out
pop
pop
cwtl
inc
nop
sbb
pop
imulb
sbb
pop
lahf
jmp
movsl
dec
push
pop
mov
inc
bound
pop
push
push
sbb
xlat
out
shrb
xor
aad
int3
les
push
in
lret
sbb
and
inc
jae
push
pop
push
or
out
sbb
add
cmp
fistpll
push
add
sti
and
ja
fisubrs
dec
fmuls
pop
sbb
je
sub
sbb
arpl
push
xor
sahf
inc
sub
inc
pop
mov
scas
in
rcrb
test
xchg
cmpsb
sti
rcr
mov
stos
das
out
in
pop
sti
ss
dec
push
lcall
push
pop
nop
dec
data16
dec
rolb
xchg
jge
xchg
aad
push
mov
aad
pop
sbb
xlat
push
daa
arpl
daa
fcom
popa
icebp
push
jbe
dec
sbb
pop
jge
lret
xchg
pop
test
inc
inc
sub
outsb
out
add
or
and
punpckldq
and
sbb
gs
pushf
leave
dec
push
les
xor
inc
push
int3
push
aaa
xor
lcall
out
outsl
pop
test
repnz
scas
cmp
pop
lods
je
lock
repnz
pop
jg
cmp
fwait
lret
inc
adc
mov
and
inc
sub
push
adc
in
jecxz
aas
sbb
push
jne
cmp
cmp
icebp
mov
mov
sbbl
add
push
ret
cld
int
jne
test
int3
int3
and
xsavec
adc
xlat
pop
mov
lea
xchg
ret
jp
dec
in
mov
aad
mov
lock
mov
lods
adc
insl
jle
fiaddl
and
mov
jnp
sarb
fadds
add
stos
push
mov
and
stos
inc
and
inc
ret
lods
test
sbb
mov
mov
sbbb
bound
bound
inc
hlt
test
icebp
inc
out
stos
mov
loopne
out
popf
inc
outsl
es
lret
xchg
movsl
xchg
in
fists
sub
fdivrs
je
or
stos
pushf
outsb
add
in
je
pop
stc
jmp
test
inc
push
arpl
lgs
out
mov
push
scas
and
pop
push
and
jb
movl
addr16
xchg
call
shll
fistpll
and
fmuls
mov
xlat
imul
cld
and
jbe
pop
fwait
cmp
pop
je
mov
xchg
jns
pop
pop
xlat
xor
xor
in
sbbb
and
or
fnsave
jp
inc
mov
call
xor
je
je
dec
sbb
mov
loopne
inc
push
and
cs
xchg
xor
popf
jb
mov
adc
pop
icebp
dec
pop
fiadds
dec
lods
mov
dec
mov
jecxz
addl
dec
mov
and
cmp
inc
mov
out
stos
xchg
jmp
mov
movsb
and
mov
mov
adc
lock
lods
jmp
sbb
in
adc
ljmp
lret
std
cmp
mov
push
loop
subl
shrl
xor
or
jnp
and
fdivrl
add
into
inc
jne
cs
jne
sahf
adc
mov
mov
ljmp
xchg
cld
je
das
f2xm1
mov
or
loopne
stos
jle
ret
insl
pop
faddl
data16
sub
sub
lods
out
push
dec
std
icebp
mov
shl
in
lahf
outsb
jne
pushf
sub
popa
dec
pop
shlb
pop
icebp
adc
ljmp
and
loopw
leave
sbb
jle
arpl
inc
push
or
test
outsl
mov
in
repz
ljmp
stos
stc
sbb
xchg
lods
testb
cmp
push
inc
repz
xorb
fs
icebp
adc
nopl
lcall
sahf
scas
movsb
in
xchg
xchg
fsubrs
or
cmp
xchg
popf
sub
xchg
lds
pop
shrb
or
cmpsb
dec
jno
push
mov
xchg
add
stos
ret
sbb
xorb
adc
fmulp
mov
sbb
cld
sbb
adc
in
jo
popf
xchg
int3
mov
mov
lods
push
fcomps
sar
xor
xchg
rorl
push
bound
cmp
mov
js
adc
xabort
pushf
mov
fcmovbe
cmp
fucomp
sub
lret
push
mov
cmpsl
xchg
enter
mov
sbb
data16
test
ja
pop
into
out
jge
push
movsl
sbb
ffreep
mov
mov
stc
cmp
bound
mov
outsl
add
pop
adc
push
mov
imul
sbb
cld
add
jmp
or
clc
push
lcall
jno
shll
hlt
insb
imul
popa
push
mov
mov
mov
mov
daa
mov
lahf
aam
and
in
and
mov
pop
xchg
jl
cmp
mov
inc
icebp
rcrl
inc
mov
jnp
xor
and
lock
std
inc
gs
iret
mov
sbb
shrb
jne
and
sub
lds
test
cli
je
rcrb
lods
scas
lds
mov
xchg
pop
arpl
push
test
or
ja
es
add
inc
fcmove
mov
pop
cmp
add
or
push
and
mov
inc
inc
inc
jbe
ja
jge
jecxz
and
xchg
lret
int3
ret
mov
int3
xchg
sub
push
sbb
dec
adc
mov
sbb
push
std
dec
movsl
inc
jmp
icebp
inc
mov
aad
mov
add
int
hlt
shll
mov
pop
jae
jle
ds
add
mov
push
clc
decb
loopne
sbb
sub
inc
push
sub
and
push
jle
ja
mov
jg
data16
add
sub
outsl
cli
and
in
add
dec
add
cli
test
push
push
xchg
hlt
dec
inc
xchg
push
sbbb
xchg
in
mov
ss
fiadds
mov
jle
stc
insl
push
sbbl
sahf
xchg
ljmp
orl
dec
sbb
sbb
mov
adc
push
push
push
jo
cmp
xchg
cld
sar
test
popf
jb
pushf
cld
out
mov
or
aas
jg
cltd
jg
sub
stos
pop
sub
push
stos
ds
test
pop
into
dec
jo
mov
mov
pusha
sub
scas
push
mov
push
mov
jle
xchg
bound
push
inc
stc
mov
faddl
add
push
mov
mov
fsubl
sbb
pop
pusha
xor
jg
sub
bound
xchg
dec
ficoml
xchg
insb
jnp
sbb
pop
mov
mov
int
mov
sbb
mov
ret
mov
insl
scas
adc
mov
or
inc
sbbl
stos
aam
addr16
aam
jecxz
inc
lret
outsb
cmpsb
loop
dec
addr16
jp
int3
test
mov
sahf
fs
es
dec
dec
fcomps
shrb
jmp
push
data16
out
push
ret
fldt
pushf
xor
sub
add
stos
jecxz
sub
jp
js
or
sub
adcb
fildl
jecxz
xor
and
sarl
sub
jno
cltd
mov
adc
mov
add
insl
aaa
cmp
sub
out
dec
mov
enter
lock
idivl
sbb
xchg
jb
testl
adc
dec
andl
pusha
aad
adc
ret
imul
nop
movsb
mov
cmp
jno
mov
lea
fstpl
xor
dec
add
mov
fsubrl
lret
add
repz
in
cmp
stos
sbb
ret
xor
push
bound
and
inc
mov
jmp
fcoml
mov
adc
cmp
out
leave
adc
xor
mov
int
js
push
xor
and
push
or
fcomi
inc
movsb
jbe
cld
subb
cmp
xchg
mov
add
mov
jb
movsl
sbb
push
jns
pop
lock
sbb
mov
mov
inc
xchg
mov
fistl
fs
cmp
in
mov
mov
das
add
push
scas
stc
sarl
mov
lea
jae
push
gs
sbb
popa
fwait
xor
push
dec
or
stos
in
int3
out
ret
out
cmp
arpl
inc
icebp
mov
rorl
cli
lods
or
push
push
sub
cli
nop
fsubrs
xchg
fstl
push
pop
sbb
mov
mov
xchg
cwtl
jl
mov
data16
adc
jmp
daa
sti
data16
stc
cmp
xchg
xor
out
xchg
rcr
sub
jge
aam
or
stc
push
lret
subl
inc
int3
call
mov
jno
popa
sub
int3
xchg
fmuls
add
or
push
sbb
fmuls
add
imul
fstps
inc
jbe
mov
dec
mov
xor
adc
pop
mov
int
lret
fstpt
cmp
mov
mov
push
rorb
sahf
xor
mov
inc
test
fildll
stos
in
jae
sbb
fs
clc
ss
fpatan
cmp
push
sbb
sbb
flds
pop
jne
stc
add
aam
rep
xchg
fimull
push
jge
jae
ficomps
add
inc
push
clc
mov
push
dec
push
pop
jl
cmp
lahf
cld
repz
jb
xchg
push
fdivr
ror
dec
into
fcmovu
in
pop
jle
in
xor
mov
rcll
loop
jno
xchg
push
mov
sbb
dec
in
imul
in
xlat
clc
xchg
jecxz
cmp
push
add
sub
lahf
mov
pop
xchg
js
push
lret
adc
inc
mov
scas
pop
lods
jp
or
xchg
out
xor
into
test
sbb
mov
addb
inc
pop
xchg
mov
add
mov
jo
pop
or
mov
mov
pop
shlb
in
xchg
push
pop
sub
and
jbe
fadd
push
mov
pop
cmp
or
pop
dec
jns
lods
lods
fucom
loopne
or
sbb
loop
mov
dec
insb
add
and
or
faddl
fs
add
std
movsl
xorb
mov
sub
fsubl
push
fmuls
imul
lea
and
ret
mov
adc
mov
xor
mov
sti
and
stc
mov
cmp
arpl
xchg
jbe
fs
test
shll
cld
sub
xchg
call
test
mov
push
repz
or
test
mov
inc
sbb
outsb
sarb
and
inc
mov
pop
xor
lcall
add
lds
fcmove
movsl
add
cmp
popf
in
popa
aam
push
jo
dec
movsb
imul
push
repnz
repz
sbb
or
mov
test
leave
data16
test
imull
cmp
and
lahf
dec
fwait
sbb
les
movsl
enter
and
xor
cmp
sbb
xchg
rcll
mov
aam
insb
ljmp
and
inc
icebp
cmp
pusha
cld
xchg
outsl
in
pop
push
out
lods
in
shlb
in
pop
stc
addr16
mov
popa
ret
add
xchg
push
js
add
cmp
