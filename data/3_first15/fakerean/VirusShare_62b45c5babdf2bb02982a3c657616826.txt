sbb
add
pop
scas
fisubl
fcmovnu
cmpsb
shrl
jmp
pushf
cmp
sub
outsl
or
xchg
and
mov
push
fcmove
enter
dec
neg
inc
or
iret
std
xchg
jge
out
mov
jns
pop
outsb
or
adc
xor
sub
xor
xchg
jp
loop
jo
xchg
in
dec
mov
push
pop
fs
iret
lcall
add
fldt
int3
cmpsl
xchg
popa
insl
std
popl
jp
add
fs
pop
xor
mov
jmp
push
shl
add
rolb
sub
inc
nop
push
scas
adc
adc
or
mov
mov
add
loope
pop
jae
inc
loopne
dec
mov
out
repz
das
adc
adc
push
sub
add
mov
sub
jae
insl
dec
pop
xchg
add
add
shrl
in
push
jge
jg
jns
sbb
pop
push
dec
sub
cltd
jae
lret
pop
shll
in
inc
int
imul
testb
rep
pop
pop
or
leave
lods
and
xchg
fidivrs
inc
in
xchg
scas
jb
dec
sub
insl
out
lods
xchg
sub
cld
adc
aaa
pop
ret
in
out
xor
dec
lcall
mov
nop
aas
and
out
pushf
loope
pop
add
dec
jne
mov
or
xor
stos
jae
out
lret
inc
pop
icebp
jmp
xor
cmp
xchg
mov
push
jg
movsb
lcall
popf
mov
xchg
cli
cltd
mov
cmpl
repz
test
add
data16
scas
arpl
cmp
pop
jl
pusha
int3
xor
inc
sahf
dec
pop
jb
jmp
sahf
mov
shl
in
mov
push
xchg
add
das
mov
repz
fcoml
sbb
inc
imul
mov
lret
cmp
lahf
add
scas
mov
fildl
cltd
jecxz
cs
out
cld
pop
arpl
sahf
jnp
out
stos
int3
adc
stos
iret
fists
pop
push
or
mov
dec
insl
mov
jno
or
loopne
add
sbb
mov
inc
push
sti
adc
aaa
pushf
icebp
in
push
movsb
je
and
or
or
push
gs
lret
mov
mov
fldcw
pop
add
ja
mov
sub
out
push
pop
push
or
cmp
jne
inc
int
pop
push
and
jns
push
xor
inc
cmp
add
test
dec
jecxz
pop
xor
pop
pop
repz
lcall
loop
pop
mov
ret
imul
hlt
stos
and
je
test
fcmovu
enter
xor
negl
aam
push
dec
notl
cmpsb
cmp
dec
jl
sub
jl
rcrl
sbb
mov
mov
mov
mov
inc
out
xchg
add
mov
fcomip
shl
mov
mov
dec
jmp
inc
in
cmp
sub
aad
js
out
or
adc
inc
sahf
push
pop
leave
cmp
or
xchg
or
aam
jmp
ljmp
mov
xchg
sbb
adc
xor
nop
adc
jb
test
test
jae
aad
adc
push
loop
add
fistps
out
xor
inc
cmpsl
fcomps
pop
push
mov
in
jb
and
mov
rorl
or
out
cmpsb
push
loop
lret
adc
adc
enter
inc
in
sub
ljmp
or
stos
mov
negl
movsb
stos
std
imul
inc
cmp
in
int
inc
cmp
adc
int3
mov
mov
push
cmp
mov
hlt
mov
insb
pop
jmp
sub
sbb
mov
mov
mov
dec
repnz
pop
push
pop
jbe
dec
sub
mov
pop
xor
dec
adc
les
aas
movsb
and
cmpsl
jae
movsl
lret
popf
or
mov
jns
sub
mov
or
add
xor
cmp
cli
push
and
xchg
ljmp
cmp
cmpsb
imulb
cwtl
test
xchg
xor
xor
adc
mov
cmpl
mov
adc
nop
mov
or
jecxz
mov
adc
push
bound
inc
pop
jo
mov
mov
out
xor
pushf
adc
es
shlb
dec
hlt
dec
cltd
sahf
pop
push
mov
scas
outsb
lods
out
cmc
stc
orb
in
test
in
inc
sub
mov
stc
mov
add
cmp
mov
push
sbb
mov
jns
loopne
ss
test
ret
movsl
mov
sbb
ret
inc
push
and
js
cmp
bound
xor
mov
shrl
mov
shll
add
imul
pusha
xor
mov
jmp
mov
pop
xor
lcall
and
sbb
and
fcomi
mov
out
xchg
push
jecxz
jp
xorl
and
pop
jl
mov
mov
mov
xchg
or
in
jle
or
pop
ret
adc
cli
clc
and
rcrb
lods
pop
outsl
cs
jns
cmp
pusha
ds
out
mov
sub
stc
xor
clc
imul
mov
dec
sbb
es
mov
loop
sbb
mov
addr16
cli
pop
cmp
cwtl
int3
repnz
iret
pop
sub
xchg
in
dec
popf
push
cmp
mov
js
jb
cmp
xor
xor
in
ficomps
out
or
leave
dec
out
inc
lahf
jns
outsb
into
movsb
mov
nop
in
dec
xchg
cwtl
jns
pop
jne,pt
mov
adc
add
repz
xchg
ja
inc
push
lea
pop
fisttps
add
dec
and
add
push
mov
push
test
xchg
lahf
nop
dec
dec
mov
xor
stos
hlt
push
cmpb
dec
mov
imul
stc
imul
mov
mov
jne
aam
or
daa
lods
mov
dec
mov
mov
inc
xor
mov
jns
lds
shr
inc
jno
xchg
or
xor
daa
cmp
xchg
jg
adc
das
jge
gs
fcomi
aaa
imul
pusha
jo
fistl
mov
fs
sar
xor
mov
dec
sub
int
mov
cmp
cmpsb
das
push
mov
call
mov
mov
cmc
jecxz
sbb
divl
xor
lods
ficompl
aas
mov
and
test
jnp
ds
arpl
push
das
xor
shrl
repnz
in
rol
and
movsl
fildll
sar
stos
arpl
cltd
filds
int
xor
ret
ret
dec
xchg
aam
testl
push
jl
sahf
movsl
sub
int3
cmp
xchg
mov
xchg
lds
shl
push
loopne
fisttps
loope
sub
mov
mov
inc
fidivs
clc
inc
data16
dec
lcall
pop
pop
jl
ljmp
push
lea
inc
xchg
outsb
pop
out
xlat
repz
jle
push
pop
std
and
pop
sub
sub
lods
lret
aaa
popa
push
popf
in
lea
cmp
mov
push
push
in
ds
cmpsl
pop
ret
popf
xor
in
lcall
mov
arpl
sbb
stc
divb
xchg
lock
subl
pusha
xor
addb
rol
je
and
out
add
in
inc
outsl
test
lret
pop
stc
cmpb
testb
or
cmp
cmp
and
mov
mov
xor
push
add
add
xlat
mov
jl
jge
sub
xchg
xor
mov
mov
scas
dec
inc
mov
in
cwtl
mov
sbbl
push
mov
lret
data16
push
add
movsl
dec
cwtl
fsts
mov
mov
repz
pop
sub
int
lahf
mov
xchg
test
out
aaa
sbb
mov
mov
jmp
dec
push
push
push
pop
pop
subb
jl
fcmovne
fnstsw
xor
lcall
popf
inc
aam
out
notl
mov
pusha
pop
or
push
hlt
adc
aam
mov
dec
shl
fwait
aad
out
lods
mov
mov
mov
pop
test
imul
and
adc
push
or
jmp
cmpsb
push
mov
pop
call
mov
mov
mov
and
cmp
enter
stc
mov
mov
fisubrs
clc
outsb
mov
mov
sti
loopne
ret
mov
stos
sub
dec
mov
xor
push
dec
pop
jg
adc
mov
movsb
out
cs
and
jne
in
inc
or
loope
add
add
adc
sbb
cmp
cmpsb
call
clc
push
jmp
iret
push
pop
shll
adc
push
jg
mov
mov
xlat
fistl
inc
pusha
int
dec
or
and
push
js
aam
adc
mov
pop
xlat
int3
adc
push
or
mov
adc
adc
add
dec
mov
cmc
ficompl
jnp
adc
mov
sub
dec
sahf
dec
and
fadds
jbe
sub
out
mov
dec
jmp
repz
test
mov
in
pop
pop
lahf
push
cmp
out
out
xor
cmp
mov
js
popf
int3
xchg
aaa
stc
add
sub
add
jne
mov
out
mov
push
shlb
popf
sahf
jp
scas
push
jge
sbb
iret
xor
dec
pushl
inc
xchg
cmovb
cltd
xchg
adc
mov
idiv
mov
out
mov
or
push
cwtl
lock
xchg
sahf
and
xor
push
mov
jp
in
xor
add
lret
mull
mov
inc
adc
mov
xchg
loop
arpl
xor
fmull
mov
mov
js
and
pop
jne
sbb
hlt
inc
add
shl
shr
mov
jo
test
outsb
js
jge
mov
clc
push
fdivp
ret
mov
ljmp
test
sbb
movsb
ret
mov
mov
dec
or
ljmp
mov
sbb
mov
cmpsb
sbb
rorl
mov
mov
push
hlt
stos
cmpsl
mov
xchg
xor
adc
add
sub
inc
mov
push
add
cmp
add
rcrl
shlb
push
cmpsb
in
sbb
jns
fiaddl
sub
adcb
mov
xor
cmc
rcrl
xchg
call
jl
popa
mov
js
clc
and
inc
and
mov
cmp
jl
inc
jl
in
inc
js
mov
jne
in
call
test
es
mov
fimull
scas
ds
push
xor
jecxz
in
push
mov
xchg
cmp
and
imul
nop
add
dec
sbb
mov
dec
dec
pop
js
lret
xor
lret
int
push
int
popa
popa
in
pop
pusha
jno
push
xchg
gs
mov
xchg
dec
hlt
loop
sub
sbb
or
pop
pop
or
adc
idivl
push
lret
jg
out
sbb
addb
cmpsl
mov
lods
enter
xchg
or
std
fsubp
xor
arpl
jae
dec
pop
lods
test
movsl
insl
sbb
aad
rcll
jae
cmpl
es
xchg
push
scas
bound
in
js
pop
add
xchg
jmp
mov
add
push
mov
movsl
test
adc
shrb
mov
jg
inc
mov
test
jb
mov
sub
cmp
dec
ds
dec
inc
dec
pop
nop
inc
out
add
jae
stos
in
inc
not
movsb
mov
inc
pop
adc
cld
jns
xchg
mov
adc
dec
mov
int
fdivrl
in
xchg
testb
jnp
cltd
xor
mov
sbb
shrl
sub
push
sbb
fs
sbb
ds
inc
fisubs
fmul
insb
fadds
fcoms
xchg
pushf
stos
mov
dec
cmpsl
jp
sub
mov
and
or
push
sub
jecxz
outsl
cld
rclb
mov
and
in
xchg
xchg
int
xchg
sete
aaa
aaa
jle
pop
out
xchg
cmp
test
jecxz
roll
mov
xor
or
xchg
pop
mov
xor
and
pushf
imul
pusha
dec
cmpsl
and
and
push
sar
lds
in
sub
cmpsb
sar
cli
push
bound
imul
lods
push
mov
scas
or
fsubrl
fcomi
push
bound
sahf
imul
sti
mov
test
repz
in
insb
inc
hlt
xor
jb
dec
and
nop
push
push
dec
push
cltd
adc
fistps
mov
and
dec
inc
xor
dec
xchg
leave
mov
testb
dec
push
nop
in
mov
push
test
add
add
inc
jno
or
push
jp
fs
das
fldcw
icebp
dec
cmp
lea
pop
fwait
cmp
icebp
add
movsb
orl
add
inc
inc
pop
lret
fstpt
cwtl
jecxz
shll
sub
ret
test
and
rcrl
enter
pop
push
flds
mov
aaa
inc
in
push
dec
lahf
inc
sbb
inc
or
mov
adc
stc
sub
mov
in
adc
jae
call
hlt
dec
sub
mov
sbb
mov
pop
pop
pop
inc
mov
fs
mov
or
stos
mov
sbb
stos
aas
adc
push
stc
incb
lret
vpmacssww
rorb
push
push
sbb
cmp
push
mov
pop
dec
fdiv
movsb
add
pusha
push
gs
fwait
lds
test
idivl
sub
sti
add
nop
out
fisttpl
divb
in
pop
fs
and
loope
mov
nop
lock
push
call
jnp
or
push
dec
cmpl
lret
push
sarl
lret
outsb
cmc
add
imul
cli
jo
shl
dec
xchg
add
fstps
test
add
in
dec
mov
adc
jmp
fistpll
sbb
xor
and
stos
push
cmp
push
cmpb
and
lcall
mov
fcompl
and
jle
das
ret
mov
and
mov
xchg
inc
sbb
mov
int3
pop
mov
out
aam
daa
pop
and
mov
cli
inc
stos
cmp
jmp
repnz
icebp
mov
lods
call
sahf
dec
jmp
sti
add
push
push
sub
xchg
in
pop
xor
in
sbb
mov
pop
or
add
fistpll
push
ret
or
iret
or
pop
orl
fsub
push
leave
jb
jno
loopne
cmpsb
jne
dec
jne
sbb
out
aam
aaa
mov
jl
inc
enter
cmp
sub
lods
xchg
ret
or
loopne
sarl
and
outsl
loope
insb
and
xchg
inc
insb
adc
mov
add
imul
xchg
sti
ja
mov
ds
leave
mov
pop
sub
cmp
int
fisubs
inc
sbb
shll
jae
les
or
adc
or
inc
cld
js
into
sub
adc
inc
int3
fnstenv
scas
repz
ret
jnp
cld
xchg
scas
lret
xchg
jno
lods
cs
ljmp
cmpsb
into
push
ret
add
test
insl
or
adcl
push
mov
mull
cmp
arpl
inc
pop
sub
xchg
or
clc
cmp
sub
in
orl
sub
orb
ss
mov
pop
cli
rolb
test
mov
mov
dec
push
call
lds
subl
pop
mov
xorl
adc
push
ret
adc
xcrypt-ecb
push
sbb
in
dec
int
stos
cli
jecxz
test
cmp
mov
int
mov
mov
decb
xchg
stos
jmp
push
orb
fldcw
loop
sub
outsb
cwtl
aam
mov
inc
xchg
imul
dec
jecxz
imul
loop
xlat
stc
stc
push
movsb
cwtl
jbe
int
xchg
and
and
stc
adc
mov
xor
lds
cmc
sbb
sbb
lock
add
push
jmp
dec
clc
dec
loope
or
add
or
mov
test
enter
imul
pop
push
push
pop
inc
sti
or
fimuls
xchg
add
cmp
aad
arpl
fisubrl
sbb
jmp
add
xor
stos
add
mov
ja
push
mov
cmpb
pop
aas
cmp
sbb
pop
test
mov
or
xchg
je
outsl
shrb
cli
and
cmpsl
add
pmullw
idiv
pop
clc
jno
iret
pop
shr
lret
jo
stos
mov
dec
dec
or
gs
aaa
and
inc
jecxz
js
jno
inc
mov
test
cmp
scas
mov
lea
sar
mov
leave
clc
cmp
lods
cld
fld
mov
xor
lods
sbb
dec
fucomp
mov
ficomps
loope
sub
dec
xor
sbb
cmp
or
adc
sub
cs
xchg
insb
imul
cmp
jecxz
push
inc
cld
orl
adc
aaa
add
dec
dec
adc
fldl
push
loope
ret
lds
lret
fdivr
push
fistl
xor
fisttps
lea
cltd
adcl
pop
movsl
cmp
xchg
and
je
cmc
int3
cld
inc
fistpll
lcall
fsubrp
bnd
xorb
repz
jb
ret
daa
test
push
les
lret
and
jae
outsb
xor
cmpsl
mov
xchg
cs
outsb
mov
cmp
xor
ljmp
push
push
scas
stos
add
sub
add
in
enterw
cmpsb
test
or
lret
and
cmp
cmp
adc
cmpb
adc
jbe
std
test
push
mov
decl
push
dec
ljmp
cld
out
es
sub
icebp
mov
idivb
shrl
jne
xor
pop
dec
or
xchg
cltd
test
mov
pushf
pop
pop
popf
pop
jmp
and
adc
nop
and
es
fwait
test
mov
cmp
shl
fisubrl
imul
emms
in
and
dec
adc
icebp
dec
sarb
lret
scas
push
inc
fwait
or
dec
inc
pop
dec
xor
jg
push
jmp
in
adc
lret
or
in
js
std
in
sbb
dec
xchg
pop
xchg
movsl
mov
movsl
aad
cmovne
add
dec
cli
scas
mov
shr
outsl
push
push
inc
cmpsb
xchg
jp
jbe
sbb
scas
jge,pn
sub
mov
pop
and
and
cld
jle
fldl
mov
in
cmp
pusha
rcrb
adc
test
lahf
dec
jns
xlat
ja
dec
daa
fists
sbb
add
sbb
movsl
pop
sub
sub
stos
push
out
jne
sbbl
dec
mov
popa
outsl
jge
mov
mov
jmp
dec
sbb
xchg
cltd
add
nop
daa
push
test
loopne
lods
sbb
xorl
in
sbb
pop
jecxz
pop
js
adc
stos
icebp
test
mov
fidivrs
pop
jno
dec
mov
orb
push
fisttpll
sub
cmp
or
aas
in
inc
shll
lahf
lahf
inc
das
mov
sbb
fists
js
and
cmp
inc
pop
inc
jmp
shrb
aad
jl
in
cmc
xor
xor
sbb
ret
push
aas
or
and
sub
test
clc
int
add
xchg
cwtl
mov
push
inc
adc
sbb
ss
mov
outsl
shrb
dec
dec
leave
call
xchg
xor
lock
fs
roll
mov
jge
mov
clc
mov
sub
push
add
inc
sub
sub
sbb
mov
jne
ret
and
pop
ret
sub
sbb
dec
aas
dec
fcmovnbe
mull
xorb
cmpsb
jae
popa
andb
in
add
cltd
je
pop
mov
incb
sbb
add
shl
popa
jecxz
mov
mov
cmpsl
pushf
and
jnp
and
divb
roll
and
inc
rcrl
cltd
jg
xchg
mov
cmp
fs
pop
stos
xlat
push
sti
hlt
loop
add
jge
adc
mov
movsb
fildl
add
fidivl
aad
push
mov
adc
or
jecxz
dec
imul
ds
scas
lcall
fcmovu
sub
shll
inc
das
cwtl
out
mov
inc
mov
rcrb
test
scas
sahf
out
pop
arpl
add
jo
pop
imull
pushf
je
std
scas
mov
jbe
data16
clc
mov
add
and
cmpsb
daa
mov
mov
in
jecxz
pcmpgtw
into
clc
pop
out
dec
sbb
push
lods
test
pop
out
callw
mov
movsb
cli
cmpsb
mov
ds
out
insb
jne
pop
push
addps
int3
iret
xchg
or
enter
or
cmpsb
jp
jmp
and
sub
loop
cmp
jns
xor
aam
pop
and
hlt
filds
mov
insl
jns
sub
leave
in
lock
pop
nop
stos
ja
push
sub
leave
pop
pushf
sub
loopne
fsubs
stos
imul
pop
add
clc
jg
push
ja
addr16
mov
xchg
xchg
ret
lcall
stos
cmc
sbb
andb
sbb
lds
sbb
sub
push
push
dec
orb
xchg
lods
test
jge
psubq
out
ret
sbb
call
dec
test
ja
push
dec
fwait
out
outsb
add
inc
pop
jg
xchg
out
sbb
notb
cmp
out
flds
jnp
sbb
movsl
sti
dec
lahf
pop
jl
mov
scas
xchg
into
push
mov
lds
pop
lcall
imul
cmp
scas
xor
mov
stc
mov
lea
es
and
loope
adc
test
or
mov
lret
repz
sub
add
pop
call
repnz
popa
rcrl
aas
pop
test
cmp
in
jnp
adc
enter
jg
in
imulb
lock
ficomps
je
dec
lods
jno
icebp
push
lret
push
cmp
mov
lds
in
test
fisubl
jmp
sub
jecxz
pop
push
push
imul
push
cmp
enter
insl
dec
mov
mov
push
inc
mov
xchg
pop
push
es
adc
dec
insb
dec
testl
iret
pushw
mov
push
xor
loop
inc
and
inc
xchg
lret
lock
pop
pop
movb
imul
sub
sub
cwtl
cwtl
pop
jne
test
xrelease
inc
aad
dec
push
call
sbb
lea
dec
in
adc
shlb
jns
mov
cmc
sahf
mov
add
imul
cmpsb
sahf
jns
xchg
jo
xchg
cltd
jb
mov
mov
insl
std
shrl
xchg
frstor
sub
frstor
xor
pop
popf
cwtl
or
ljmp
wrmsr
ret
in
scas
ds
ljmp
jle
xchg
imull
pop
test
and
repz
hlt
jno
data16
icebp
lret
sub
xchg
cmc
adc
adc
push
jne
div
mov
cwtl
jo
inc
fsubr
cltd
jl
adc
mov
mov
mov
sbb
std
fsubrs
xchg
mov
into
ficoms
and
or
into
es
scas
mov
nop
scas
rorl
sub
sti
mov
cmpsb
xor
nop
jo
call
sbb
inc
outsl
in
mov
je
push
mov
loope
mov
stc
rolb
aas
xor
sub
push
out
cmp
pop
mov
dec
cmpsb
adc
aam
sti
mov
sbb
sub
ss
push
adc
jns
les
sub
and
xor
xchg
inc
sbb
xor
jl
sbb
ret
jge
or
sub
pop
ja
lret
push
movsb
test
pusha
int
and
sub
ffreep
jl
loope
adc
mov
cltd
inc
sti
pushf
aad
push
sbb
shlb
dec
imul
sub
push
jns
es
and
push
in
lods
mov
mov
mull
stc
add
popf
pop
test
movsb
pop
jmp
xchg
or
cmpb
or
sti
ss
or
sub
lcall
inc
jo
ret
dec
aaa
outsb
lret
pop
jno
xor
lds
mov
mov
dec
arpl
push
scas
mov
bnd
stos
sahf
jo
sbb
int
xlat
inc
push
mov
in
fbstp
pop
js
loop
mov
mov
and
insl
adc
ljmp
jbe
sub
or
insl
loope
and
movsb
cmp
cmp
and
in
jl,pt
push
push
pop
jb
sub
xor
loope
shl
inc
push
clc
sub
out
iret
pushf
inc
add
mov
cmpsb
push
mov
mov
nop
icebp
mov
cltd
push
xchg
xlat
je
aaa
sub
and
cmc
sbb
lock
dec
jbe
jb
mov
mov
shrl
pop
xchg
out
cltd
xchg
push
adc
repnz
inc
inc
and
sub
into
out
push
scas
jns
adc
sbb
ja
cmpsb
sbb
in
add
cld
pushl
mov
pop
cld
inc
shll
jns
pop
popf
inc
push
mov
iret
fidivrs
out
cli
ret
std
test
xchg
int
ret
dec
cmp
int3
in
sub
xor
mov
push
scas
sbbb
jnp
mov
enter
and
inc
mov
jb
out
dec
iret
or
aaa
and
mov
fisubrl
pushf
adc
cmp
fnstsw
xchg
dec
imul
outsl
and
andl
inc
dec
or
sub
jg
push
stos
or
mov
in
lret
push
stos
daa
jb
cmp
sahf
sbb
shrl
add
jae
push
int3
or
push
push
out
insb
cmp
outsl
clc
cwtl
push
outsl
int3
or
aam
psubd
xchg
sahf
movsb
cltd
mov
cld
fstpt
and
pop
mov
and
outsl
and
cmp
mov
xor
cmpsl
ss
sbb
jmp
xor
fisubrs
shl
sarb
lods
ret
popa
push
cmp
popa
rorb
dec
mov
mov
aas
cmp
les
setge
nop
sub
loope
int
lea
add
sub
xlat
xor
adc
adc
cmp
mov
sbb
cmp
in
mov
lret
add
adcl
sub
xorb
mov
sti
into
xchg
push
bound
fucomi
sbb
rclb
pop
pop
sub
or
cmc
push
pusha
adc
push
xchg
push
ljmp
mov
les
daa
inc
adc
sbb
stos
daa
mov
repz
lret
cwtl
icebp
push
pop
rep
popa
mov
cwtl
popf
xchg
sahf
cwtl
pop
bound
into
loop
mov
push
sbbl
dec
push
xor
adc
ret
dec
or
ret
shlb
cmpsl
outsl
jmp
pushf
sahf
adc
daa
push
aad
mul
inc
iret
jbe
inc
xor
sbb
imul
jbe
inc
jle
push
mov
cld
pop
xor
test
mov
sub
sti
sahf
xchg
and
ret
loop
mov
cmc
sbb
jo
pop
mov
mov
pop
adc
aas
sub
lret
cmp
fsubrl
outsl
inc
and
imul
xchg
inc
in
xor
jl
mov
clc
dec
adc
ja
decl
lret
mov
outsb
loop
lret
sbb
iret
and
lret
popf
pushl
add
add
inc
aas
cli
les
cmp
pop
out
cs
scas
loopne
xor
push
stos
loop
add
test
popf
xchg
adc
xchg
jnp
mov
or
jbe
rep
cltd
pusha
mov
xlat
sub
xchg
inc
jae
mov
call
adc
lea
test
lret
rcrl
lock
add
pop
xchg
jbe
hlt
pusha
sbb
pushf
stos
sahf
mov
js
or
or
lcall
xor
add
pop
stos
into
ss
adc
shll
inc
loope
jbe
dec
rolb
mov
inc
mov
leave
rcr
mov
call
and
and
imul
loope
scas
pop
jne
dec
lret
push
mov
mov
xchg
es
push
addr16
xor
or
push
add
in
pop
sub
aas
jecxz
das
das
push
movsl
jnp
xchg
roll
sub
fcmovu
andl
or
gs
mov
addr16
inc
pop
rorb
jle,pt
or
add
pop
lahf
mov
popa
add
enter
loopne
cmp
repz
cmc
sarl
pop
jmp
popf
xor
cmp
jno
lock
xchg
adc
mov
dec
or
push
cmpsb
repz
stos
push
cmovnp
xchg
xchg
sbb
jp
xchg
lahf
cltd
iret
sbb
jns
jl
lcall
push
dec
movsb
adcb
sub
mov
fsubp
cltd
lock
stos
icebp
insl
dec
xchg
push
negb
out
sub
test
jge
aam
mov
xchg
jo
push
ret
bnd
into
jae
jnp
test
dec
dec
inc
or
pusha
aaa
out
fmull
test
repz
cmpsb
test
mov
pop
xchg
js
push
fildll
mov
movsb
ret
repnz
add
fwait
and
inc
or
mov
loopne
aas
adc
in
sub
push
ja
xchg
cmp
popa
dec
aaa
lret
mov
lea
test
mov
inc
cmp
sbb
xchg
std
call
pop
mov
push
sbb
jge
cwtl
jne
into
jl
sub
push
clc
insl
dec
and
leave
bound
mov
cwtl
dec
cli
ljmp
mov
xor
sbb
outsb
mov
decl
sub
idivl
xorl
stc
daa
daa
daa
push
fmul
add
movsl
xchg
or
mov
xchg
cli
int3
ret
test
and
add
stos
sarb
dec
push
in
xor
mov
sub
pusha
daa
mov
sub
ldmxcsr
xchg
mov
push
jnp
push
data16
xor
mov
sbb
imul
outsl
pop
pop
out
mov
pushf
rorl
into
in
jno
inc
jno
sarb
mov
fisttps
xchg
pusha
imul
xor
adc
pop
jl
adc
aam
pop
jne
push
loop
aam
xchg
fldt
inc
dec
pushf
sub
inc
cmp
cld
pop
xor
push
jo
jl
mov
stos
pop
push
cmp
or
mov
xchg
and
pushf
insl
int
push
inc
fisttps
push
adc
loope
je
jae
push
mov
jbe
test
cwtl
sub
in
inc
repz
sub
stos
cmp
push
inc
arpl
repz
enter
add
int
inc
sbbb
sub
outsl
aaa
jno
orl
mov
jo
sbb
or
jnp
xchg
and
insb
test
dec
mov
pop
sahf
lock
mov
out
sub
adc
and
into
mov
lods
mov
pop
pop
fs
mov
inc
push
out
xlat
sub
idivl
pop
mov
mov
nop
cmc
arpl
push
adc
jecxz
sub
or
test
or
mov
loope
xor
outsb
mov
scas
add
lret
mov
out
pop
lds
ret
adc
mov
hlt
pop
sti
dec
jo
test
scas
pop
mov
enter
mov
add
pop
enter
mov
and
mov
xchg
inc
arpl
add
pop
and
loope
mov
cmp
popa
and
mov
rcrl
push
sbb
push
jae
fwait
pop
mov
hlt
pop
repz
push
lock
and
push
mov
mov
aad
imul
dec
mov
and
inc
or
dec
and
sarb
add
stos
xchg
add
sub
mov
setne
or
mov
mov
in
test
fisubrs
pop
sbb
or
cmp
ret
out
mov
test
add
mov
loop
mov
aaa
mov
push
paddusb
push
pop
mov
rep
push
add
add
test
out
push
popa
push
xor
insb
xor
shrb
sbb
scas
sahf
iret
sbb
in
mov
loope
fwait
xchg
xchg
mov
sbb
mov
std
es
popa
fwait
bound
movsb
mov
jmp
jno
test
inc
push
rclb
test
inc
sub
std
or
push
stc
xchg
jg
dec
test
je
xchg
dec
or
inc
cld
fsubrs
setg
xchg
mov
mov
scas
cmp
lds
sbbl
adc
loope
popa
cmp
mov
xchg
lods
dec
xor
sbb
out
hlt
les
dec
fwait
js
icebp
and
arpl
sti
in
cs
loop
shrl
dec
ljmp
das
cmc
xchg
xor
dec
aam
es
sbb
sbb
nop
lods
cmp
adc
adc
xchg
cmc
and
lret
adc
push
mov
lea
stos
subl
in
rol
mov
add
cmp
push
xchg
push
out
add
adcb
imul
outsl
lock
cmpsb
xor
outsl
popa
add
and
jg
mov
hlt
das
xor
push
mov
std
pushf
andl
adc
les
jae
mov
push
mov
test
or
xchg
ficompl
fcmovnb
jle
inc
jae
dec
or
pop
ret
mov
xchg
push
in
clc
add
fldenv
push
lahf
sbb
xchg
ss
and
xor
xchg
adc
dec
out
ret
in
inc
and
cwtl
cmp
sub
jmp
sbb
pop
dec
ret
hlt
scas
jle
jge
fstp
jl
mov
lret
in
cld
pop
push
decb
adc
mov
out
movsb
js
loope
inc
lcall
push
subb
in
daa
xchg
mov
mov
cwtl
inc
mov
push
lret
outsb
adc
stc
outsb
shrb
loop
add
cmpsl
je
xchg
arpl
mov
popa
outsl
repnz
daa
dec
and
scas
xchg
sub
stc
pusha
sub
pop
push
std
mov
call
pop
push
cmp
lret
out
xor
mov
inc
out
mov
sbb
mov
jae
call
sbb
sub
mov
push
mov
aas
or
and
sub
add
cmp
mov
xchg
and
in
jo
xor
sbb
jnp
xor
add
push
rcrl
jl
xchg
insl
pop
fnstenv
fmull
cmp
dec
aas
pop
gs
or
jp
xor
push
fmulp
push
sbb
and
inc
push
enter
lcall
cmp
and
mov
or
jmp
cli
sub
sti
data16
ja
hlt
dec
ss
mull
outsl
loope
enter
xchg
ret
pop
jb
lds
and
hlt
cmpsl
pop
mov
ret
jnp
jle
and
bnd
dec
pop
lds
push
sbb
outsl
sub
sub
push
pop
push
ja
push
mov
jbe
testb
dec
inc
mov
jnp
outsb
cli
add
fmuls
inc
enter
stos
sub
sti
pop
sbb
aad
out
add
pop
gs
push
dec
sbb
cmp
xchg
sahf
mov
inc
insl
jno
lcall
xor
xor
imul
nop
sar
mov
pop
sub
mov
push
into
mov
mov
mov
mov
sbb
jl
push
jns
insb
and
or
cmpsl
or
xchg
test
fcoms
jo
int
sbb
outsb
fistps
cmp
pop
or
cmp
cmp
sbbl
or
or
mov
test
pop
sbb
sub
popf
imul
cmp
fisubrs
arpl
stos
mov
test
jmp
adc
mov
cmc
das
mov
gs
inc
fimull
inc
lcall
pop
test
cmp
fdivl
inc
bnd
enter
jg
in
popl
inc
lret
pop
and
or
ljmp
cmp
jns
std
add
lret
sbb
dec
pusha
jp
int3
insl
adc
insb
fildl
sbb
mov
ret
push
pushf
enter
mov
mov
shl
and
cmp
fiaddl
es
add
push
stos
jp
pop
test
ljmp
mov
dec
iret
insb
mov
mov
fwait
sbb
mov
scas
pop
inc
add
fsts
pop
js
xchg
add
cmc
jmp
lea
mov
scas
shrl
lcall
jl
in
pop
push
inc
divb
jecxz
in
scas
xor
dec
mov
addb
rol
std
out
popf
sub
cltd
fs
and
daa
je
xor
sbb
jmp
scas
aam
lret
mulb
popf
jge
aam
lcall
jle
dec
or
dec
and
cmp
xchg
andl
mulb
lcall
in
push
sbb
pop
and
pop
mov
ljmp
pop
push
inc
cmpsl
shr
pushf
adc
scas
dec
xor
fcmovnu
and
das
inc
jmp
xor
push
mov
js
rolb
or
jnp
icebp
mov
stos
insl
mov
stos
ffreep
rcr
mov
or
mov
pop
in
or
daa
or
sbb
inc
mov
sub
inc
sbb
popa
push
into
or
mov
lret
mov
test
adc
cmp
xchg
jb
mov
ror
aad
pop
pop
adc
adc
xor
imul
cmp
pop
and
mov
popa
mov
inc
cli
in
jle
mov
mov
inc
mov
sahf
ljmp
mov
cmp
fildl
sub
sahf
push
or
inc
inc
stos
shld
jp
stos
sarl
mov
jo
cmpsb
jmp
cmp
popf
adc
xor
aad
push
push
dec
mov
sub
shlb
sub
shrl
idivb
mov
call
scas
clc
fisttps
fistpl
xchg
js
in
stos
mov
ret
out
xchg
and
mov
xchg
mov
scas
xchg
jns
adc
ficomps
mov
cmc
add
ds
inc
push
andl
scas
aad
or
loopne
and
xchg
mov
ss
imull
loope
outsb
cmp
loopne
add
xchg
xchg
xlat
test
push
stc
mov
pop
dec
sbb
mov
shll
cmp
add
and
lret
inc
mov
push
scas
andl
xchg
insl
loop
inc
and
mov
sbb
out
fwait
cs
cmpl
xor
mov
out
sbb
push
lock
jnp
test
jecxz
mov
jg
ss
fiadds
sbb
mov
sbb
pop
and
mov
lahf
subb
into
test
xor
jae
aaa
push
or
addb
xchg
add
sti
push
and
scas
div
xlat
icebp
gs
outsb
xor
cmp
sub
int
sub
sarb
stos
fiaddl
sub
outsb
mov
repz
xor
leave
rol
mov
cmp
in
cmc
mov
bound
fstps
pushf
add
mov
ficoml
fisubrs
jle
sbb
mov
pop
in
jne
mov
mov
push
movsb
mov
cmc
mov
jl
incb
cmpsl
scas
inc
int3
mov
xor
add
jle
xor
fcoms
xor
xchg
add
mov
cmp
enter
jnp
pmaxsw
push
stos
pop
dec
lds
cmp
inc
adc
dec
mov
lods
mov
arpl
or
sbb
clts
cmp
inc
and
test
push
lret
in
lods
cmp
pop
jno
sub
pop
inc
js
jmp
nop
inc
add
mov
mov
jo
xchg
pop
or
lds
mov
inc
lret
xor
test
das
adc
xor
call
out
cmpsb
fbld
xor
rcrb
jmp
mov
sub
inc
ljmp
xchg
inc
ja
push
popf
notb
inc
cs
repnz
adc
inc
sub
inc
pop
and
inc
mov
pop
inc
inc
adc
inc
sub
ret
imul
push
rorb
pop
cmp
mov
xlat
sbb
aam
mov
mov
fxch
fcompl
sub
mov
pop
mov
lret
adc
lods
jmp
into
ljmp
mov
test
adc
cld
mov
or
arpl
and
jne
pop
into
aad
mov
add
mov
and
cwtl
push
mov
std
out
dec
push
mov
lret
push
mov
test
or
mov
js
rclb
mov
fcoms
ja
jmp
test
push
sbb
mov
ja
cmpsl
gs
fistpll
sbb
insl
xor
xchg
and
or
push
mov
xchg
mov
pop
xor
sub
xchg
icebp
outsl
jmp
iret
outsl
imul
add
les
test
out
outsl
ret
out
insl
sub
pop
notl
stos
pushf
inc
mov
ret
loopne
dec
loopne
mov
sbb
pop
mov
notb
xchg
dec
shl
movsb
cmp
push
xor
xor
push
lea
sub
mov
sbb
xchg
and
in
push
add
or
jo
pop
loopne
cmc
idivb
push
and
pop
popa
fildll
jg
mov
inc
popa
iret
jge
dec
lahf
sbb
or
fdivs
mov
mov
and
sbb
loop
loopne
dec
sahf
mov
mov
test
mov
add
or
in
insb
std
gs
stc
pop
mov
add
dec
out
fcmovnu
xchg
mov
mov
adc
jle
sub
sub
jns
sbb
lea
sub
daa
int3
xchg
cmpsl
adc
fadd
inc
and
push
lret
mov
xor
mov
mov
xor
cmc
test
iret
jp
xchg
mov
leave
lock
add
ret
nopl
push
push
add
mov
cli
ss
inc
das
xor
jmp
test
orl
js
in
les
insb
mov
aam
aam
test
imul
inc
xchg
fsubrs
mov
or
outsl
fcompp
mov
shlb
mov
popa
mov
mov
aad
mov
scas
cmp
testb
mov
insb
data16
imul
mov
insb
push
stos
ret
mov
lods
adc
test
mov
das
in
fidivrs
in
add
shrb
xor
pushf
ret
adc
mov
ret
sub
test
das
jle
in
or
mov
mov
mov
and
clc
jnp
out
lahf
jo
pop
push
pop
xchg
stc
add
cltd
pop
jb
fisttpl
fcompl
jno
sbbl
jmp
outsl
mov
adc
mov
or
and
lcall
out
and
gs
bound
mov
dec
repz
js
out
dec
xor
mov
repnz
mov
dec
jle
add
inc
jmp
push
jbe
movsl
mov
pop
inc
mov
or
arpl
out
insl
aas
xchg
mov
pop
sbb
xor
int
lahf
jmp
xchg
ss
mov
push
xor
dec
push
daa
or
mov
sbb
push
ljmp
movsb
popw
sub
mov
iret
in
inc
jg
push
push
sarl
and
arpl
les
fisttpl
xorl
sub
mov
jns
pop
nop
rclb
loopne
xchg
mov
or
mov
call
or
and
push
popf
cmp
and
insb
xchg
mov
fidivrl
gs
mov
enter
dec
in
add
in
adc
dec
dec
sbb
aam
dec
std
add
test
and
orb
jmp
xor
icebp
ror
daa
fcmovnb
mov
jb
cmp
call
stos
jno
fidivs
dec
xchg
cmp
iret
ret
lock
sbb
lahf
loope
dec
outsl
sbbb
inc
jp
lret
aam
xor
xor
out
inc
push
or
push
pop
push
pusha
xchg
pop
pop
in
push
arpl
xchg
jmp
nop
mov
into
adc
inc
adc
mov
dec
push
fwait
dec
and
aas
xor
out
and
xchg
xor
cmc
push
data16
popa
inc
enter
jae
jae
sbb
mov
aad
inc
dec
outsb
mov
lods
aas
sahf
shl
push
jg
jle
icebp
dec
mov
mov
adc
cmp
push
shl
jb
jecxz
fs
jne
mov
loopne
fistl
and
in
aam
daa
idiv
ds
xchg
xchg
out
mov
outsb
ret
sub
add
mov
mov
dec
out
and
data16
lods
mov
aaa
sbb
lds
lahf
int3
cli
or
jge
loopne
jl
addr16
in
aas
call
pop
jne
into
orl
sbb
sub
ss
sbb
cmp
sbb
pop
fdivp
fsub
jmp
dec
inc
mov
mov
fcomps
push
loop
sub
stos
call
mov
inc
push
and
lret
dec
fisttps
pop
sahf
sub
test
jecxz
pop
into
mov
movsl
movsl
push
inc
add
repnz
loop
cltd
pop
fdivrl
jb
add
daa
pop
gs
cmc
stc
imulb
mov
addr16
xorl
mov
ret
rcrb
popfw
pop
fwait
test
add
and
adc
adc
sub
mov
pop
dec
jecxz
sub
mov
mov
mov
push
repnz
int
outsl
pusha
mov
xchg
shl
insl
sbb
sub
test
jg
push
mov
clts
in
pop
jb,pn
incl
hlt
cmp
xor
adc
mov
pop
jmp
insb
mov
add
mov
cltd
mul
or
sahf
sbb
jl
mov
hlt
lea
pop
push
mov
pushf
aad
lock
test
lret
scas
add
aad
aas
fisttpll
adc
in
inc
nop
mov
pop
lods
mov
popa
mov
shlb
jne
mov
test
mov
cmc
ret
and
pop
aaa
mov
fsts
dec
movsb
mov
shlb
cltd
xor
and
out
lock
shrb
repnz
xor
das
stos
inc
lahf
mov
imulb
cmp
arpl
mov
sub
js
mov
mov
and
jmp
lods
repz
mov
add
adc
dec
sbb
cmpsl
push
jmp
mov
aas
adc
sub
xlat
into
dec
jl
cmp
cwtl
addr16
in
push
lcall
push
arpl
stos
adc
cmp
sbb
ret
or
adc
shll
mov
inc
insl
pop
mov
pop
dec
jb
or
sbb
xchg
dec
movsl
ljmp
cmp
cmp
pop
stos
xor
test
xchg
lahf
imul
pop
sub
or
test
daa
pop
cmp
pop
push
xor
cmp
sbb
pop
xlat
push
add
cmpsl
lcall
in
jg
orb
lret
outsl
lahf
nop
mov
mov
ret
jo
cmp
sbb
stc
sbb
sub
mov
insb
in
dec
mov
mov
adc
insl
aaa
psrld
mov
push
lcall
sub
cmpb
sub
adc
call
and
mov
xrelease
jnp
call
mov
call
mov
or
in
dec
lret
ret
jl
testl
lahf
push
es
inc
test
daa
sub
jle
add
in
jecxz
cmp
mov
adc
repnz
push
rol
outsl
icebp
xchg
icebp
jne
cmc
lret
scas
dec
xchg
std
call
adc
jl
xchg
es
ds
jmp
pop
push
push
inc
adc
dec
xor
sub
mov
inc
mov
adc
les
sbb
sbbl
daa
or
and
into
dec
mov
pop
jl
mov
mov
cmp
mov
fwait
adcb
fildl
xor
push
sbb
cmc
call
sub
stc
xlat
mov
xor
pop
sub
inc
lea
sbb
dec
inc
cmp
loope
lahf
hlt
out
pop
mov
mov
and
mov
xor
testb
push
push
lahf
hlt
pop
dec
icebp
lods
fnsave
fistpl
pop
jb
cmpsl
dec
stos
pop
fidivs
fmuls
leave
fldcw
outsb
lahf
pop
mov
imul
fildl
mov
mov
mov
rorb
fsts
jns
and
dec
sar
fisubrs
xchg
mov
fistpl
pop
daa
outsl
loopne
jg
push
jle
gs
jmp
sub
scas
jle
sarl
int
dec
gs
sub
mov
lcall
js
mov
and
dec
push
mov
pop
xor
jns
sub
sbb
pop
clc
dec
pop
into
push
sbb
xchg
not
mov
cli
adc
push
mov
int
xor
outsb
adc
cmpsl
mov
sub
push
ss
cmp
pop
cs
ja
pushf
jp
cmp
sarl
fstpl
xchg
and
jg
in
mov
adc
stos
fcoml
out
loopne
pop
jns
addr16
or
jmp
icebp
sub
sahf
jmp
dec
test
sub
jg
in
dec
sbb
xchg
arpl
sbb
sub
into
icebp
jmp
xchg
std
gs
mov
daa
mov
dec
cld
push
mov
sub
mov
and
daa
mov
mov
inc
adc
or
out
sub
and
mov
push
adc
int
sub
ds
iret
add
mov
imul
xor
rorb
mov
push
test
xchg
mov
insl
rolb
jge
and
mov
fwait
adc
inc
js
cltd
aas
mov
pop
jp
sbb
or
xchg
pop
mov
lea
test
push
mov
sbb
jge
pop
lret
ss
leave
stos
roll
shll
aad
mov
xor
repz
in
push
loop
popa
js
mov
xor
xchg
repnz
hlt
aad
xchg
clc
jge
add
adc
dec
sub
inc
add
icebp
add
push
out
or
push
and
repz
loopne
movsb
and
xchg
and
and
jae
bound
xor
inc
lock
dec
or
arpl
imul
inc
dec
lret
inc
cmp
jmp
mov
out
and
xor
pop
sub
and
inc
scas
jae
cmpsl
fwait
pop
xor
imul
cmp
test
dec
inc
jno
mov
aas
fsubrl
sub
push
adc
enter
ret
ja
add
xchg
pop
fldt
das
jb
sbb
sbb
imul
ss
rep
insb
in
push
stc
cli
jmp
daa
adc
cmpsb
add
inc
jmp
scas
mov
fldcw
push
cmc
push
pusha
idivl
fs
mov
sbb
sti
mov
dec
mov
repz
repnz
daa
mov
xchg
xchg
out
mov
adc
es
mov
adc
cmp
dec
mov
jae
jle
mov
adc
ds
pause
inc
inc
cld
das
pop
mov
sub
lret
mov
shll
inc
mov
leave
dec
loopne
movsl
sub
cmpsb
stc
inc
xchg
repnz
out
xchg
or
sbb
fimuls
xchg
addb
scas
fwait
subl
xor
int
mov
pop
in
mov
enter
or
push
mov
jmp
mov
lret
jnp
mov
xchg
rol
fs
jb
sar
xchg
std
nop
insb
jge
mov
sbb
lock
dec
lahf
pop
mov
cmp
shll
mov
jbe
jae
add
out
or
sub
jae
and
mov
sbb
in
leave
out
push
sbb
push
jmp
pusha
jae
popf
lret
outsb
cmp
mov
xor
popf
in
push
sub
jle
cmp
push
xor
insl
outsl
fs
add
ret
pop
fadd
cld
dec
push
test
pusha
mov
lock
lea
cmp
xchg
call
mov
test
fnstcw
stc
and
dec
jns
aam
fwait
pop
out
push
add
dec
pop
or
jg
cmpsb
out
xor
pushf
xor
scas
inc
adc
mov
and
inc
out
push
stos
lds
pop
xchg
lret
dec
add
dec
in
mov
inc
xchg
jecxz
movsb
cmc
hlt
mov
mov
ja
popa
sub
scas
shl
lret
pop
dec
shrl
adc
mov
aaa
adc
cmpsb
add
push
prefetcht0
mov
mov
and
push
push
lret
and
jbe
sti
fcompl
xchg
mov
mov
movsl
adc
push
mov
sbbb
xchg
push
movsl
sbb
ljmp
gs
add
add
sbb
loope
pushf
mov
sahf
mov
jae
rcl
jo
call
mov
jb
sub
out
xchg
push
push
sti
xchg
nop
das
into
mov
insl
push
dec
cmp
ljmp
pop
or
lahf
ror
or
push
jno
mov
jns
and
and
repnz
ret
pop
add
add
sub
std
fcompl
iret
jg
hlt
pushf
testl
sbb
mov
push
pop
add
cmpsb
xchg
sbb
pop
btr
loop
jae
jb
shlb
shll
cmp
daa
cmp
mov
jns
xor
shrb
mov
pop
jae
mov
and
mov
jbe
mov
cmp
stos
pop
test
repnz
ret
outsb
inc
imul
or
xor
rorb
jbe
js
clc
push
mov
js,pt
jmp
jl
test
addr16
push
mov
adc
clc
and
sub
out
pushf
movsb
xchg
push
jnp
pop
push
sbb
mov
push
sbb
jge
aaa
cmp
lcall
popa
push
jecxz
jg
scas
mov
ja
test
notb
cmc
lcall
mov
or
xlat
mov
jne
pop
xor
insl
dec
das
nop
dec
lods
push
shrl
pushf
mov
or
lea
out
mov
fadds
fwait
xor
fs
popa
cli
fisubrl
dec
xchg
outsb
mov
fldt
add
sti
in
bnd
in
sti
push
or
imul
sarl
mov
inc
mov
and
aaa
inc
xlat
xor
shlb
imul
les
pop
mov
add
stos
and
cmpsb
das
es
sti
fcmovnu
and
call
jae
mov
movsl
mov
lods
mov
jnp
aas
mov
les
and
ds
cmp
flds
dec
cmp
je
fcoms
stos
dec
cmpl
push
and
xchg
gs
pop
jp
adc
push
xor
pop
push
adc
mov
cmp
mov
or
in
lea
sbbl
pop
sub
mov
xor
xchg
mov
rorl
mov
ljmp
push
ds
inc
mov
xor
fistl
xor
or
mov
rorl
dec
adc
and
mov
addb
out
data16
je
lock
pop
xor
fs
cmp
mov
mov
xchg
testb
mov
imul
inc
dec
dec
dec
test
aam
hlt
test
push
and
jecxz,pn
mov
push
lock
stos
fstps
inc
jecxz
scas
cmp
jmp
mov
sbb
add
leave
shl
mov
les
and
inc
sbb
data16
aas
clc
icebp
add
fisubs
pop
and
dec
dec
insb
xor
enter
add
mov
rorb
fstpl
add
test
or
sub
in
sub
xchg
inc
repz
negl
xchg
cmpsb
std
jg
hlt
test
enter
nop
cwtl
fucomip
fwait
add
pop
add
mov
push
jg
movb
ljmp
push
adc
xor
or
mov
cmp
das
loope
notb
inc
std
xchg
lea
pop
int3
int3
xchg
iret
dec
xchg
mov
mov
in
or
xchg
cmc
lock
outsb
push
je
rcrb
push
mov
mov
lods
xchg
inc
hlt
xchg
and
or
sbb
mov
lret
mov
jge
aas
inc
cmp
in
xor
pop
inc
cltd
inc
scas
or
rolb
mov
xlat
lcall
push
sbb
stos
loop
jecxz
outsl
push
ds
hlt
xchg
push
xor
push
push
stos
dec
iret
mov
outsl
adc
retw
dec
mov
iret
push
xor
dec
cmp
pop
adc
insl
push
or
aas
sbb
mov
hlt
insl
div
ja
inc
or
xchg
or
pop
hlt
adc
cmpsl
sbb
mov
mov
lcall
mov
mov
adc
pop
jmp
adc
shr
cmc
popf
adc
ret
push
ja
xchg
inc
pusha
fwait
test
shrl
daa
inc
inc
push
aad
mov
or
scas
xor
cmp
push
fbld
mov
and
mov
cmp
pcmpeqb
leave
arpl
jg
pop
ret
cli
iret
loopne
fbld
mov
sbb
pop
ds
filds
xchg
loop
and
aam
cvtdq2ps
loopne
cmp
sti
enter
insb
mov
ljmp
mov
test
pushf
xchg
ret
fildll
arpl
aam
or
test
jae
data16
mov
ja
inc
cli
pop
xchg
dec
mov
jno
loopne
fnstenv
xchg
ret
test
cmp
outsb
or
sti
test
or
jle
push
or
scas
fmuls
inc
lcall
call
jge
cmp
jp,pn
cmp
xchg
add
aam
cli
jge
pop
jno
call
mov
lods
xlat
sub
negl
xchg
xor
sbb
xchg
push
lret
fnstcw
fldcw
repz
bswap
or
push
or
and
cvtpi2ps
rol
cmp
rcrb
in
jle
sub
in
ds
scas
sbb
pusha
jne
pop
adc
pushf
arpl
out
mov
xor
xor
xchg
fcmovnu
push
xchg
and
addr16
push
lods
cmp
push
call
loope
aad
and
cmpsb
xchg
and
pop
out
and
xor
inc
ret
pop
pop
mov
aas
dec
addr16
adc
mov
iret
jno
mov
std
out
push
scas
stc
pop
inc
mov
mov
outsl
mov
icebp
xor
sbb
xor
fs
adc
xchg
inc
loop
xor
stos
xchg
dec
adc
xchg
sub
cmp
shll
and
inc
das
icebp
lea
je
test
pop
mov
inc
sub
dec
inc
push
jecxz
add
xorl
jmp
xchg
scas
test
lds
sahf
or
dec
ss
add
push
xlat
jle
sbb
add
and
push
jle
clc
or
in
aam
sbb
inc
jnp
es
sbb
lea
push
or
pop
jl
xchg
inc
popf
adc
add
and
xor
lods
jb
dec
or
inc
repnz
stc
sbb
fidivl
das
mov
out
lret
scas
mov
je
xchg
inc
daa
aaa
dec
sti
idivb
mov
rol
shll
aaa
mov
sti
and
in
inc
dec
movsl
leave
lea
sbb
sub
pop
mov
adc
aam
int
ljmp
data16
movsb
pop
dec
idivb
ret
cld
push
push
scas
pop
cmc
ds
push
ds
mov
notl
mov
sahf
ja
dec
leave
dec
imul
int
ret
sbb
inc
push
cmp
mov
lea
shlb
lds
cmp
mov
jg
movsb
or
rorl
push
movb
sti
sub
int3
hlt
mov
xlat
cmp
hlt
aaa
jnp
jo
cmpl
mov
std
sbb
dec
or
jo
mov
aaa
insb
nop
dec
lea
jnp
insl
adc
sti
lret
test
pop
pop
dec
out
cmp
sub
cs
dec
jle
fldt
fucom
mov
clc
or
add
mov
sahf
insl
and
cmpsb
bound
icebp
aaa
repz
lahf
add
fadd
insb
pop
adc
ss
ja
call
stos
stos
inc
incb
in
fs
mov
mov
cmp
inc
jg
pop
mov
je
push
mov
test
push
out
out
jle
or
pushf
ficomps
sahf
in
mov
inc
add
rorb
lods
mov
mov
push
pop
push
push
or
in
cmpsl
xchg
imul
sub
imul
xchg
rorb
mov
js
and
je
xchg
aad
cmpsb
sbb
push
sbb
jns
cltd
push
cmc
in
mov
aad
push
adc
and
popf
or
rolb
andl
mov
push
sub
lahf
mov
in
jbe
xchg
add
je
push
outsl
cmp
cmp
stos
fcoms
pop
cs
ret
lret
mov
mov
loope
mov
mov
leave
dec
shll
mov
out
sub
and
jno
push
shr
ret
mov
sahf
shrb
mov
or
sbb
cmp
je
push
pop
mov
jg
jmp
adc
sub
xchg
mov
fwait
hlt
mov
mov
ret
sbb
push
dec
and
or
ret
sub
xchg
mov
and
push
jp
adc
mov
fsubp
xor
push
and
dec
lret
add
xchg
gs
inc
mov
lea
add
jg
pop
pop
and
pop
out
jp
scas
aas
pusha
inc
out
lods
xor
dec
out
cli
imul
xchg
pop
or
andb
cmp
and
sbb
in
aaa
rcll
in
pop
loop
repz
xchg
push
push
mov
or
jnp
bound
outsb
dec
add
push
cld
out
mov
push
scas
les
jl
mov
addr16
jle
and
xor
pop
enter
mov
mov
pop
inc
sahf
xor
dec
outsl
jno
jo
jg
xchg
push
push
sbbb
movb
and
or
add
push
jmp
stc
pop
mov
scas
int3
push
cmp
pop
inc
pop
inc
fstps
or
fnstenv
xor
xor
sbb
sbb
inc
xor
mov
xchg
imul
mov
push
cmp
xor
jge
and
xor
dec
lock
popf
xchg
xchg
lods
dec
and
cmc
dec
push
ljmp
jecxz
std
sub
cld
scas
lock
ret
mov
shl
xchg
mov
jecxz
jno
nop
rclb
xor
cmc
js
ss
lea
and
cs
std
push
cs
je
rolb
out
xchg
adcl
xchg
add
aaa
std
fisubs
or
repnz
inc
and
mov
add
inc
pop
mov
lcall
inc
mov
and
and
sbb
lcall
push
icebp
or
push
testb
push
shll
jo
adc
gs
push
jle
repz
cwtl
sub
lret
push
ds
scas
and
aad
sbb
cmp
push
push
push
jnp
fnsave
xor
rcl
inc
aad
inc
dec
mov
cmp
aam
jbe
adc
into
mov
add
push
rcrl
mov
or
filds
pop
lds
add
imul
lahf
popa
jl
sbb
adc
ja
cld
outsb
test
fwait
rcrb
out
negl
arpl
imul
dec
movsl
nop
push
pop
mov
pop
ljmp
or
adc
xor
sbbb
addr16
jmp
xor
lcall
xchg
stos
cmpsb
loope
subl
cli
adc
cltd
inc
sub
mov
push
fnstsw
or
or
xorb
add
leave
push
jmp
sub
xchg
mov
enter
jne
jmp
push
sbb
in
leave
fmulp
sahf
or
pushf
je
jbe
test
mov
push
and
and
xor
and
jnp
sahf
jb
inc
es
scas
test
lret
xchg
mov
xchg
xor
inc
loope
movsl
jle
xchg
fsubl
sar
test
pop
sub
rolb
or
mov
cld
ds
pushf
out
ret
lcall
adc
inc
or
pop
scas
sub
cmp
aam
mov
xlat
pop
mov
xchg
callw
cwtl
pop
fnsetpm(287
bnd
data16
or
fucomi
int3
lock
xchg
jg
mov
pop
jbe
mov
push
lock
outsl
lea
push
cmpsl
lcall
ficoml
jns
loop
push
xor
mov
sub
sti
fnstcw
into
aam
mov
mov
scas
xorl
cld
mov
jnp
fiaddl
pop
out
add
arpl
shlb
mov
cmc
sub
in
push
je
mov
xorl
pop
ss
shrb
sar
into
outsl
out
shrl
jg
aaa
sub
gs
test
test
mov
push
sub
dec
push
iret
pop
cmp
imul
dec
enter
inc
lds
mov
fadds
jb
into
lahf
dec
mov
add
mov
xchg
addl
test
mov
sbb
cmp
fmul
insl
xchg
lret
je
sahf
idivl
jo
lret
inc
popl
imul
bound
lret
mov
dec
push
pushf
lock
xor
push
sti
pop
mov
lock
pop
pop
hlt
jg
adc
mov
ss
ljmp
push
push
popa
ja
mov
dec
add
sub
test
jb
push
clc
mov
mov
xor
xchg
cmp
lods
clc
ficompl
push
mov
das
inc
pop
scas
xchg
sub
call
popa
ret
outsl
sub
orl
or
sub
fstps
and
test
roll
or
ret
aaa
xlat
inc
adc
nop
imul
sbb
xchg
jecxz
rolb
push
sub
out
xor
mov
and
push
or
rorl
cmp
bound
cmp
adc
les
and
or
sub
mov
lahf
jle
lods
and
out
dec
jp
xchg
lret
xlat
ja
gs
mov
jns
sti
sbb
js
xchg
icebp
mov
jle
dec
cld
sub
out
push
xchg
rolb
pop
js
shll
mull
sbb
mov
and
dec
sbb
mov
xor
xor
xchg
push
add
mov
in
fcoml
roll
js
xor
inc
or
inc
mov
lret
hlt
mov
fs
std
aaa
sub
stc
cld
fistpll
sub
pop
mov
adc
inc
loop
int3
pop
push
insb
js
cmp
mov
leave
add
push
loopne
sbb
sub
xchg
loopne
or
xchg
stos
in
inc
cmc
fcoml
push
cmpsb
adc
in
dec
mov
pop
int
mov
outsb
inc
adc
iret
cmp
stos
les
xchg
or
mov
push
sbb
les
lds
pop
dec
scas
cmp
cmp
ds
idiv
cmpsb
fcomi
or
jmp
daa
inc
and
insl
sbb
push
lea
lahf
popa
int3
test
mov
test
sbb
push
loope
lods
hlt
sbb
into
xchg
xchg
lcall
inc
jle
cld
fcmovnu
lds
add
fmul
imul
das
lret
dec
mov
adc
add
or
aam
cmp
sub
xchg
sahf
out
and
add
push
js
xor
jg
fcmovu
bnd
mov
and
dec
rcll
jle
xchg
push
scas
mov
out
dec
jbe
dec
xchg
pop
cmp
bound
fldenv
shll
lods
push
adc
push
aaa
ds
pop
dec
shrl
std
dec
imul
int
adc
and
inc
in
into
leave
outsl
pop
loop
mov
cmp
insl
test
int
xor
fimuls
pop
xchg
pop
lret
push
sub
inc
mov
lret
imul
jns
adc
jbe
xchg
mov
push
inc
mov
jmp
pop
push
push
push
xor
stos
jnp
movsl
loop
mov
call
inc
or
jp
iret
push
jbe
inc
xor
xor
xchg
cmc
jno
xor
push
push
pusha
out
rorb
mov
jp
stc
sub
or
sub
out
pop
jae
leave
dec
jbe
jne
int
iret
lods
iret
sbb
push
shll
cmp
pop
xlat
and
outsl
xchg
jb
lods
lret
sbb
and
rclb
fldcw
or
call
or
xchg
or
pop
lods
scas
loop
rclb
xchg
ja
jb
fdivrl
xor
int
fisttpl
scas
mov
stc
std
imul
test
sbb
repz
fmuls
or
cld
inc
cmp
push
adc
int
xchg
pop
mov
fstps
leave
mov
call
stos
loopne
ja
adc
or
inc
pop
sahf
push
fwait
mov
addr16
imul
or
jmp
into
cmp
jecxz
sub
fadd
sti
lcall
inc
adc
dec
das
test
mov
push
mov
adc
xchg
dec
std
push
scas
xchg
inc
mov
lcall
jbe
xchg
jbe
jb
mov
fsts
clc
leave
hlt
jle
sbb
orb
xchg
subl
xor
imul
sarb
ret
xor
ss
push
xchg
inc
mov
fisttps
xor
dec
divb
and
mov
out
loopne
cwtl
imul
aas
mov
fisubs
or
cmp
loope
mov
loope
out
xor
das
ja
mov
mov
sbb
out
or
cmpsb
mov
cmp
xchg
jae
mov
jb
cli
mov
andb
mov
xchg
mov
xor
jmp
shlb
cld
sbb
sbbb
xlat
jb
stc
sbb
fdiv
rorl
testb
shll
jp
pushf
mov
test
cwtl
xor
or
cmp
mov
leave
xor
xor
and
jnp
mov
std
sub
fidivrl
jp
stos
push
shr
xchg
out
stos
leave
aad
or
dec
lret
jmp
insl
or
sti
aad
push
inc
test
stos
stos
hlt
into
mov
push
scas
or
in
arpl
sub
mov
push
dec
jno
rcrb
jbe
imul
and
lahf
push
sub
cmpsl
push
or
test
push
andl
push
push
push
push
xchg
xchg
inc
cmpw
and
push
mov
fwait
inc
xchg
lret
movsl
pop
cmp
jbe
popf
xchg
fstps
cmp
mov
fsubrl
aad
sbb
outsl
sbb
lds
sbb
leave
std
adc
pop
sbb
and
cli
jl
mov
jne
sti
dec
cmc
adc
clc
sbb
imul
fstl
sahf
pop
sahf
test
int
stos
test
js
push
mov
mov
sbb
call
arpl
in
ror
out
pop
imul
cmp
js
and
loop
pop
sbb
mov
jle
test
ret
repz
ja
jge
ljmp
cmp
data16
dec
js
mov
push
andb
aad
and
mov
addr16
cmc
loop
aas
test
cld
jg
jns
push
lahf
adc
mov
mov
jb
dec
adc
cld
fs
pop
aaa
mov
and
sbb
ds
insb
or
jnp
test
xchg
je
pop
dec
into
sub
and
xchg
scas
xor
cwtl
loopne
sti
andnps
xchg
pop
movsb
pop
fmull
fisubl
test
jmp
mov
in
cld
or
in
dec
enter
sbb
enter
push
inc
mov
mov
dec
lods
sarb
xor
fnstcw
jo
sub
stos
lcall
shlb
inc
xor
nop
add
xor
cmp
inc
sbb
xchg
adc
frstor
scas
lahf
mov
fimull
push
mov
into
inc
inc
and
andl
mov
test
or
add
xor
daa
xor
int3
cld
jns
sti
je
mov
and
inc
nop
sarb
stos
mov
arpl
sahf
leave
popa
cmp
lea
xor
pop
jbe
icebp
xchg
adc
mov
imul
int3
iret
push
fwait
cmp
aam
sub
sti
out
mov
add
test
pop
mov
push
mov
push
xlat
jecxz,pt
scas
test
aad
pop
cmc
cmp
pop
jne
xor
sbb
cmpb
cmpsl
or
ret
lea
or
jb
rcrb
mov
leave
sub
in
test
fadd
fcom
aaa
adc
jnp
mov
insb
popa
add
lds
or
stos
in
movsb
push
push
jo
js
xchg
dec
adc
loopne
xchg
fildl
and
js
mov
in
dec
std
push
fs
bnd
pop
aad
xlat
sahf
test
sbb
scas
movsl
and
sahf
aam
mov
or
add
pop
adc
fbstp
icebp
les
and
jbe
add
das
nop
fnstcw
cmp
addr16
pop
add
lods
fsubp
int
pusha
jl
aaa
sub
lock
mov
ffree
sbb
and
adc
int
adc
mov
insb
jmp
pop
and
mov
pop
cmp
jbe
mov
jo
bound
cmp
pushf
add
aam
dec
lock
mov
sub
dec
dec
pop
jle
stc
adc
push
mov
sbb
shrb
sbbb
int3
mov
loop
fwait
nop
out
movsb
adcl
cmp
iret
or
inc
mov
outsl
pop
out
test
jne
adc
push
stc
xchg
out
sub
in
nop
andb
pop
int
sub
in
into
mov
scas
movl
aaa
cltd
mov
mov
daa
or
int
mov
dec
fs
xchg
adc
int3
mov
jmp
inc
out
movsl
and
pop
test
cmpsl
cmp
push
or
jge
roll
xchg
add
nopl
or
pushf
mov
xchg
nop
rcl
and
shl
imul
les
xchg
mov
inc
out
xor
sbb
repnz
push
or
call
add
sub
testb
int3
push
mov
cmc
pop
mov
imul
pop
aad
and
imul
imul
push
lahf
and
push
ror
mov
xor
loopne
jae
je
inc
cs
cmp
cwtl
pop
sub
in
pop
push
jno
jno
pop
xor
dec
ljmp
mov
xchg
push
mov
into
xchg
jp
add
push
mov
adc
pushf
popa
add
mulps
idivl
loop
jmp
inc
mov
leave
jo
dec
cmp
daa
in
jne
lahf
out
cmp
sbb
xchg
jmp
xchg
pop
jmp
mov
sub
inc
aas
ja
ret
stos
testl
ret
xchg
mov
fmul
jle
cwtl
sbb
int
mov
pop
sub
mov
fbld
mov
in
jle
test
xchg
jge
inc
repz
fs
xchg
xor
mov
std
push
jns
clc
sub
push
mov
sub
rolb
xorb
adc
sub
popf
imul
int3
add
xchg
pop
adc
dec
jg
popa
sti
fstpl
push
sub
cmp
mov
mov
xor
mov
mov
int3
inc
testb
rcrl
pop
cmp
cmp
andb
inc
and
inc
outsb
jge
les
enter
stos
incb
insl
push
push
jo
mov
or
xor
jg
add
cmpsl
outsl
adc
fmuls
adc
add
sbb
pop
push
pop
mov
shll
bound
adc
push
cwtl
pop
lods
mov
rol
call
xchg
lea
add
inc
xchg
push
xor
enter
and
out
pushf
and
sahf
add
test
loope
lahf
or
cmpsl
into
dec
js
dec
loopne
xchg
fsubl
dec
jne
and
or
scas
mov
iret
push
sbb
in
push
mov
pop
xchg
inc
in
jl
sub
mov
dec
dec
pop
loopne
cmp
mov
iret
jge
insl
psrad
mov
stos
testb
push
inc
inc
mov
int
or
mov
data16
dec
inc
pop
adc
scas
jb
mov
sbb
jns
std
out
dec
cmp
addr16
dec
adc
or
adc
xchg
fwait
inc
jg
clc
mov
mov
pushf
popa
push
cld
sbb
outsl
pop
cmp
std
xchg
dec
ss
stos
lcall
add
and
ficompl
and
adc
dec
fwait
pop
pop
adc
test
bound
mov
ja
in
mov
outsb
outsb
pop
push
test
mov
jl
and
push
les
fldcw
xor
mov
inc
add
sahf
test
jnp
pop
push
xor
pop
scas
hlt
sbb
fsubrl
jae
mov
ffree
push
lret
imul
pop
jl
pop
inc
xor
xadd
mov
mov
dec
mov
in
xchg
icebp
and
sbb
push
std
mov
andb
pop
les
jno
je
fisttpll
mov
cwtl
aaa
push
fwait
sub
insb
movsb
aas
repnz
andl
aam
dec
in
mov
jno
sahf
ficoml
pop
sub
inc
push
cli
fistpl
pop
pop
pop
outsb
mov
fwait
les
iret
cs
xchg
inc
xor
into
jae
jmp
fcomps
xchg
xchg
mov
xchg
mov
hlt
shlb
movsb
jmp
adc
mov
jp
shlb
mov
adc
hlt
xor
add
mov
ss
mov
or
add
mov
jb
push
or
repnz
faddp
xchg
push
jns
cli
rorb
dec
insb
in
push
out
xor
jnp
dec
xchg
jecxz
push
mov
xchg
mov
jbe
sub
adc
adc
jno
lds
push
nop
jno
push
jp
loop
fisubrl
icebp
or
jge
pop
push
mov
inc
iret
inc
idivb
faddp
arpl
filds
sub
add
test
mov
addr16
jg
movb
pushf
test
dec
andb
and
dec
add
and
push
lock
ficoms
int
pop
pop
lock
call
or
jo
iret
fisttpll
enter
inc
cmpsl
pusha
jo
push
int3
jbe
pop
mov
mov
imul
pop
or
push
jns
es
xchg
lds
frstor
cmpb
xchg
lods
sbb
cmp
or
cmp
sbbl
dec
addr16
xor
iret
test
and
scas
in
pushf
mov
out
jnp
and
add
clc
dec
mov
mov
pop
mov
inc
jg
test
cmpb
cmp
xchg
push
lock
push
lods
dec
out
arpl
ds
imul
std
xor
jb
xor
xchg
fisttps
jb
jns
shrl
cmc
aam
fdivs
jns
sti
dec
mov
loop
inc
decb
sbb
jecxz
pop
and
jle
adc
js
idivl
or
push
vpaddsb
fucom
bound
cmp
mov
test
sbb
adc
shr
out
inc
mov
fidivs
mov
je
inc
bound
out
sub
icebp
inc
jp
rolb
add
stos
ja
scas
outsl
cli
mov
cli
add
sbb
xchg
cmpsl
jp
jge
loope
inc
push
push
sbb
lods
loope
pop
and
add
insb
pop
sub
rcr
stc
sti
addr16
mov
or
jle
arpl
lcall
and
and
xor
mov
mov
adc
mov
sbb
pop
xor
sub
xor
popf
and
mov
mov
dec
inc
in
sahf
int3
bound
repz
inc
test
shll
xchg
out
dec
imul
cs
out
lret
jbe
lds
inc
fsubr
bound
mov
dec
mov
mov
push
inc
in
out
aam
lahf
clc
loopne
imul
in
pop
and
aaa
lds
out
fs
or
dec
adc
mov
and
rcrl
inc
in
push
cmpsb
inc
clc
add
pop
xchg
sbb
fisubs
xlat
cmp
addb
cmp
je
mov
mov
sti
add
jge
scas
cmp
push
mov
es
xor
dec
inc
push
sub
fucom
in
in
mov
ljmp
std
sbb
outsb
test
mov
lret
shl
add
inc
test
stc
xchg
dec
jmp
or
push
inc
dec
aas
fbstp
test
cs
cs
jo
dec
jmp
mov
mov
cltd
adc
loope
cmp
push
mov
ret
vmaxsd
out
out
in
cmp
mov
or
pop
xchg
data16
lret
scas
mov
out
xchg
push
int
je
mov
rol
cmpsb
xchg
arpl
jle
dec
cmp
lret
lret
xchg
pop
mov
or
and
dec
ds
outsb
xchg
cmpsb
jmp
jmp
fnstenv
pop
adcl
cld
and
pop
imul
add
jnp
not
sub
shll
push
push
mov
dec
sub
mov
loop
xor
inc
nop
jnp
or
testb
or
addb
adc
cmp
icebp
cmp
push
add
pop
pop
pop
pop
and
outsl
push
cmpsl
sbbb
leave
push
jl
adc
inc
push
sbb
or
adc
add
lods
test
sub
mov
fbld
mov
cmp
repnz
push
xchg
mov
dec
js
cmp
pusha
push
cli
cmpb
sbb
movsb
mov
adc
jae
xchg
test
mov
and
cld
lods
jmp
push
adc
dec
adc
jbe
lahf
mov
inc
xchg
push
pop
push
repz
pushf
in
sbb
mov
adc
cmp
pop
std
mov
or
test
int3
lea
ret
jle
mov
sbb
lret
dec
faddp
xchg
insl
mov
les
in
xchg
iret
ds
push
mov
dec
popa
adc
arpl
pop
add
pop
mov
fwait
mov
outsl
or
les
cli
pop
adc
ljmp
clc
loop
or
outsl
push
mov
mov
cmpsl
ret
xor
dec
push
movsb
rcll
pop
iret
xchg
or
xor
push
push
inc
mov
jb
jae
jno
sub
and
out
pop
ja
pusha
aas
addr16
rorb
scas
adc
rclb
dec
mov
das
into
cmpsb
jae
and
mov
push
push
scas
leave
leave
cld
ret
scas
out
das
rcl
or
push
test
inc
dec
hlt
adc
adc
lret
and
lret
and
arpl
into
imul
add
test
jl
sarb
pushf
mov
and
fincstp
pushf
xchg
sbb
pop
mov
push
pop
mov
mov
xchg
aas
or
mul
sbb
rorl
and
push
sub
sub
sub
jg
pop
lahf
push
into
stos
scas
mov
or
jns
sub
stos
mov
aam
lret
add
pop
and
lea
mov
hlt
jns
scas
xchg
shl
sbbl
imul
fbstp
or
inc
or
sbb
mov
movsl
push
pusha
add
xchg
sub
int
mov
icebp
and
push
or
xchg
out
push
sbb
fidivrl
xchg
lret
mov
cmpsb
jge
ss
mov
jg
mov
inc
ret
xchg
and
and
stos
shlb
mov
inc
jmp
xor
sti
data16
hlt
dec
clc
mov
adc
pop
je
mov
das
mov
mov
push
cmpsl
push
sub
mov
nop
sbb
cmpb
add
push
xor
loope
lods
and
std
mov
and
fisubl
push
xchg
adc
stos
inc
lea
push
add
dec
cld
lea
hlt
push
adc
sbb
sahf
mov
push
repz
xlat
dec
cmpsl
mov
cmc
dec
sub
shl
mov
popf
pop
pop
dec
sub
lea
fldl
ret
out
xor
and
xorl
roll
jno
pusha
push
push
into
and
adcb
sub
scas
insl
bnd
pop
fimull
cmp
icebp
cmp
cmc
sahf
mov
pop
loopne
cmp
ret
push
sbb
jge
and
lcall
mov
repz
data16
jno
addr16
call
jns
dec
xor
jb
adc
stc
popf
shr
xchg
cmp
jno
cmpsl
cmp
fwait
inc
movsl
addb
mov
mov
aad
mov
decb
out
sub
xor
jbe
mov
rorl
divb
cmp
sbb
push
adc
test
xchg
cwtl
xor
mov
and
inc
xor
or
out
xor
add
js
sbb
inc
push
lds
fsubrl
push
ret
push
rol
cmpsl
cltd
and
inc
mov
push
dec
dec
sbb
mov
adc
cmc
adc
mov
and
xor
shr
or
rorl
mov
jl
arpl
repnz
inc
cmp
lods
jbe
fwait
inc
insb
xchg
mov
fsubs
clc
xor
adc
mov
or
inc
outsb
popa
xchg
xlat
rorb
sub
push
adc
dec
mov
je
jns
int
jle
inc
mov
mov
jne
push
push
jae
dec
sbb
ljmp
mov
loop
into
xchg
sti
fidivs
movsb
inc
and
pop
ss
add
dec
and
jae
sub
or
cmpsb
cmp
xorl
xchg
popa
xor
jns
mov
jp
ja
icebp
ds
pop
mov
mov
fldt
loope
mov
out
cltd
mov
xor
and
xchg
aas
imul
ret
js
cmpsl
mov
mov
fwait
dec
lods
mov
mov
mov
xor
xchg
mov
sub
xor
scas
movsb
imul
stos
pushf
ss
inc
xchg
pop
and
add
daa
imul
xchg
cmp
push
jb
sarl
test
mov
jae
fucom
and
inc
pop
adc
mov
inc
adc
mov
xlat
leave
inc
sahf
push
sbb
cmp
jge
pop
enter
dec
jge
imul
xor
adc
pop
ljmp
sti
xor
mov
lds
stos
out
fs
in
sbb
ret
das
push
rcr
ds
push
xchg
dec
shlb
test
or
or
mov
fstpt
mov
pop
mov
pushf
pop
pop
pop
in
sti
mov
jb
inc
xchg
jo
pop
leave
or
sbbb
pop
cwtl
dec
rcrl
cmpb
mov
loopne
mov
lret
jne
or
push
or
add
mov
and
dec
push
out
cli
int3
stos
mov
dec
xor
mov
adc
in
enter
or
cmp
jb
repnz
div
dec
push
push
xor
cmp
pop
clc
mov
gs
add
push
loope
jmp
fldcw
dec
pop
lods
das
enter
pop
lcall
fldt
jne
mov
xchg
push
mov
mov
lock
adc
push
rorb
icebp
mov
adc
sub
mov
scas
mov
adc
push
adc
movzbl
xlat
test
popa
repz
idivl
shl
jne
out
sbb
mov
mov
jnp
cmp
push
pop
clc
inc
test
push
test
mov
clc
cltd
inc
out
pop
pop
mov
and
jb
clc
inc
js
dec
dec
clc
push
mov
sti
js
sbb
sub
inc
cmp
dec
jnp
stc
popf
xchg
orb
mov
movsl
sahf
mov
mov
add
jns
sar
ret
pop
sti
popf
adc
mov
test
xchg
mov
ss
imul
fstpl
inc
negl
mov
dec
cmc
lret
or
xchg
inc
clc
xchg
repnz
pop
jns
lahf
int3
rol
jae
and
adc
dec
nop
sbb
lret
das
xchg
mov
cmp
mov
pop
and
adc
call
mov
add
inc
dec
push
fiadds
in
fisubs
push
push
push
sbbb
test
les
mov
adc
ss
mov
or
jne
nop
push
rorb
xor
mov
xchg
mov
mov
adc
daa
dec
popa
bound
lret
add
mov
icebp
push
and
add
dec
cli
shlb
sbb
out
lds
rorl
test
adc
pop
lods
pop
sub
dec
push
int
add
aaa
xor
push
lcall
lret
xchg
or
mov
cs
jp
lods
ljmp
mov
popa
mov
pop
dec
aas
cli
int3
gs
jae
fdivl
push
cmpsl
hlt
lea
daa
push
jne
xor
outsl
loope
in
divb
push
jg
adc
add
loopne
xchg
movsb
std
xlat
test
icebp
aad
jns
iret
mov
inc
in
or
push
jl
mov
xchg
push
mov
adc
xlat
or
outsl
mov
push
loopne
jbe
cmp
movsb
xor
loopne
xchg
add
jge
add
fiadds
movsl
xchg
xchg
sti
mov
andb
fildll
jp
testb
cmp
stos
mov
jo
adc
pop
push
aas
sub
inc
js
sarl
inc
cmp
lcall
dec
inc
pushf
mov
jecxz
inc
aad
int3
dec
shll
push
cmp
or
inc
mov
fcoms
ret
movsb
fadds
dec
mov
push
aas
out
xchg
filds
lds
ret
pop
lock
dec
push
mov
stc
lds
sbb
adc
or
sub
inc
mov
and
push
xchg
sbb
sbb
int3
add
neg
sti
enter
adc
and
jae
xlat
cwtl
add
add
andb
dec
arpl
mov
lods
adc
or
and
pop
lret
fldl
jecxz
cmpsb
ret
mov
cmpsb
jnp
int
push
js
loope
add
cmpsb
xchg
mov
jns
je
addb
pop
mov
cmpsl
test
testl
shrl
adc
das
stc
push
rol
dec
mov
ja
dec
daa
js
data16
adc
push
sub
jmp
jge
jecxz
enter
aas
addb
outsl
push
test
outsb
and
push
rcl
lret
xchg
imul
leave
std
pop
icebp
fs
ja
push
jnp
stc
xor
enter
add
incl
arpl
and
mov
clc
or
loopne
cmp
mov
call
daa
hlt
or
in
jmp
imul
pop
sbb
mov
mov
and
jmp
icebp
xchg
sbb
mov
mov
fstps
into
pop
mov
sbbb
rorl
dec
insl
cmp
cmpsb
outsb
cmpsl
dec
and
les
adc
mov
mov
jp
scas
pop
rcl
clc
xchg
stos
jbe
insl
fidivl
hlt
mov
leave
mov
andl
daa
pusha
push
mov
xchg
pop
xchg
aam
es
mov
int3
pop
push
lea
fcoml
pop
mov
pop
insb
push
aad
fcompl
test
ret
pop
xor
and
adc
fwait
jb
nop
lcall
pop
jnp
gs
lret
mov
pop
lret
and
and
cld
push
test
sbb
cltd
xor
ret
cmp
xchg
aas
push
push
and
push
roll
and
incb
sub
inc
icebp
push
imul
into
sbb
popf
cmp
xor
mov
mov
add
lret
movsl
xchg
imul
sub
call
in
out
sub
push
mov
fimull
fcoml
add
cmp
adc
out
enter
add
pop
sarb
jle
cmpsl
ud1
dec
mov
xchg
jb
sub
jno
pop
mov
cmpsb
cld
push
inc
ret
and
cmp
cli
jno
adc
cs
mov
adc
out
lret
ja
push
pushf
es
les
outsb
sbb
lret
jle
dec
xchg
dec
cmpsb
repz
push
sbb
dec
mov
pushf
pushf
ret
cmc
jecxz
ss
push
push
adc
incb
pop
add
in
bnd
mov
push
lret
lock
xchg
inc
out
push
sbb
pushf
cmpsb
pop
aas
add
je
push
cmpb
in
les
ds
lcall
leave
mov
mov
sahf
insb
mov
sbb
xchg
xor
pop
leave
ss
hlt
int3
sbb
test
div
dec
push
mov
mov
sbb
fcmovnbe
or
mov
mov
in
jle
sti
std
jecxz
scas
sub
jl
jp
clc
cs
xor
inc
push
into
xor
sar
arpl
or
pop
in
xchg
fnstcw
incb
jge
xchg
cld
rorb
mov
lret
jo
sbb
mov
add
in
out
inc
xor
js
adc
ret
inc
or
les
inc
dec
xchg
dec
pop
sub
sub
adc
push
inc
cli
ret
sti
mov
and
sbb
cmp
mov
fsubl
cs
pop
xor
xlat
cld
inc
arpl
mov
mov
data16
dec
push
fstp
ret
inc
mov
imul
jno
out
dec
jne
or
sbb
adc
jno
and
ret
aas
fisttps
addl
call
cltd
pop
rcrl
lea
dec
xchg
cmp
movsl
push
sarb
loope
rcrl
push
inc
cmp
jns
movsl
iret
rcl
pushf
jp
jg
sbb
aad
fsubl
scas
pop
jno
cld
insl
jge
sti
std
sub
and
jp
out
imul
xchg
add
jecxz
outsl
cmc
stos
and
mov
or
stos
sbb
repnz
jmp
jecxz
aaa
imul
xchg
jg
add
lcall
xorl
xchg
xchg
int
sarb
out
gs
cmp
xor
fwait
and
sahf
out
out
cmp
imul
fidivrs
sbb
or
je
and
imul
xchg
mov
lock
adc
pop
and
or
dec
hlt
mov
adc
test
lret
movsl
lret
into
pushf
addr16
stc
xorl
lds
pop
mov
addr16
jle
jle
push
arpl
inc
mov
mov
or
push
inc
jns
inc
ljmp
push
and
jns
adc
push
jae
pop
loope
je
adc
push
mov
orb
cli
vmread
lahf
pop
mov
rolb
das
or
shll
lcall
movsb
sub
subb
mov
mov
enter
ja
jp
nop
enter
dec
mov
adc
test
rcrb
in
cld
pop
roll
pop
push
stc
insb
imul
mov
testb
fadd
jns
push
jne
fbld
aad
push
in
fsubs
and
mov
cli
lret
add
or
xchg
pushf
and
cmp
aam
rcrb
shlb
sbb
push
pmaxsw
je
xchg
rcrb
jmp
xchg
cs
cwtl
dec
sub
push
mov
dec
decl
stc
push
test
add
xor
sti
fdivrs
push
mov
stos
and
movsb
loop
out
mov
repnz
adc
adc
movb
lea
js
cli
js
xchg
lods
mov
jle
loopne
and
and
dec
paddw
popf
push
stos
dec
sub
jmp
xor
jo
xor
and
push
mov
aam
or
pushf
imul
mov
dec
xchg
cmp
and
add
xchg
pop
jb
xor
mov
mov
leave
imulb
in
cmp
imul
dec
inc
test
sti
js
mov
ja
repnz
popa
in
test
mov
push
xor
fbld
sbb
pop
inc
sub
jl
ds
aad
inc
inc
in
testl
and
int
or
loop
and
cmp
imul
aaa
inc
testl
fists
dec
dec
leave
repnz
inc
iret
fwait
push
cld
imul
das
movsl
dec
negb
xlat
mov
rcll
and
aas
clc
fwait
loopne
and
cmp
pop
insl
call
mov
adc
jne
imul
outsb
pop
jnp
leave
pop
or
mul
iret
add
push
jo
mov
sbb
fisubrl
adc
stos
data16
or
clc
fisubrl
ret
sahf
hlt
push
aas
jns
rcll
aad
sub
mov
cmp
jno
or
lea
add
out
sahf
call
aad
aam
and
lcall
push
sbb
sarl
in
mull
loope
aas
jno
mov
fs
adc
adc
push
dec
lock
xchg
lock
sbb
mov
aam
mov
push
gs
divl
xor
jno
mov
sub
dec
test
adc
int3
addb
pop
cmp
xchg
xchg
shll
out
sahf
aam
or
or
daa
inc
clc
ret
ljmp
aaa
push
adc
sub
idivl
push
aam
out
addl
ljmp
jle
fwait
in
fsts
sbb
sbb
js
mov
jae
push
icebp
inc
pop
and
mov
sbb
fbld
mov
dec
cld
push
mov
xor
aad
mov
adc
jmp
jg
fdivrs
pop
in
lret
dec
sub
frstor
push
repz
data16
out
cmp
cltd
and
sbb
aad
aad
cmp
aas
mov
imul
aad
xor
cltd
mov
jnp
jno
aam
or
and
out
addr16
ljmp
mull
jae
xchg
sub
cs
sti
les
insb
mov
gs
sbb
lret
fdivs
push
and
sti
mov
in
test
fidivrs
fisubrl
adc
pop
and
outsl
popf
mov
adc
pop
sbb
push
stos
push
int3
sub
add
ret
inc
dec
push
das
inc
mov
pop
shrb
lea
push
movsl
movsb
lahf
pop
cmp
jb
and
and
aam
fcomps
xor
test
or
bound
pop
sub
stos
adc
dec
jp
jg
push
or
mov
sbb
pop
js
xor
dec
cli
push
inc
add
imul
mov
mov
jmp
pushf
mov
push
outsl
aam
xchg
insb
mov
and
insb
aas
jge
mov
sub
rorb
xchg
int
xchg
xor
xchg
iret
es
and
out
popf
ds
jle
or
icebp
shrl
mov
in
jns
inc
in
mov
fcomi
push
fisubrs
add
add
mov
push
es
andb
cmp
lock
or
subb
xchg
sbb
xchg
mov
data16
xchg
push
inc
ss
xor
lcall
popf
add
sahf
dec
push
rorb
negb
das
sahf
push
inc
mov
xor
push
testb
sbb
mov
pusha
andl
loope
mov
pop
cmc
sub
rcrb
dec
xor
pop
fistpll
lret
cmp
xor
jo
stc
ja
and
lahf
std
push
cmp
push
clc
test
lods
idiv
ror
xlat
bound
cmc
jb
mov
out
xchg
movsl
mov
inc
testb
ret
cmp
or
jle
mov
dec
in
inc
pop
mov
and
addb
xchg
sub
add
test
sti
push
and
mov
sub
sub
add
test
add
sub
hlt
stos
movsb
cmp
vpsadbw
push
inc
dec
lret
add
outsb
push
mov
in
repz
cmp
add
lods
test
xchg
pop
jno
scas
and
outsb
cmp
push
push
jbe
cmpsl
mov
dec
mov
jno
sbb
js
mov
xlat
aas
leave
insb
cs
mov
add
hlt
pop
jb
cmp
lods
repnz
mov
jecxz
sarb
pop
ljmp
push
push
into
repz
xchg
mov
mov
jns
and
movsl
jg
jo
outsb
pop
lahf
outsb
fsts
inc
call
call
nop
lods
mov
mov
jb
loope
xor
and
mov
ja
gs
std
out
out
pop
mov
push
dec
out
mov
in
out
mov
cmpb
scas
inc
cltd
xchg
outsb
add
pop
jle
push
xor
fcmove
jo
sbb
xchg
lret
in
into
xor
push
cli
cmc
mov
mov
dec
mov
movsb
and
or
mov
pop
push
cmp
mov
or
cmp
push
shr
es
add
pushf
mov
in
sahf
out
lret
dec
xor
dec
mov
sub
testb
mov
repnz
aaa
js
sub
loope
lret
ss
out
cmp
push
in
test
sar
data16
testl
lret
pop
int
xchg
je
and
out
mov
ja
dec
data16
jo
scas
dec
addr16
pop
ja
es
adc
inc
mov
mov
inc
out
les
add
pop
enter
xchg
mov
xor
jge
dec
inc
scas
fcomps
pop
jecxz
push
xor
inc
dec
xchg
iret
dec
sub
xlat
push
jb
lock
std
icebp
adc
pusha
pop
dec
sarl
aaa
fisubl
push
popf
clc
sbb
in
push
push
xor
je
inc
scas
loop
mov
push
mov
push
in
rcr
fs
sahf
or
mov
cltd
mov
stc
aam
gs
pop
pushl
fs
sarl
test
cmc
jmp
ret
add
inc
mov
jp
jmp
jmp
mov
test
es
inc
xor
mov
lret
dec
pop
iret
jge
incl
mov
fidivs
sbb
and
gs
add
xor
adcb
sbb
dec
xchg
addr16
mov
sbb
shll
jmp
pop
mov
mov
cmc
add
jge
mov
mov
aam
pop
push
fcomps
shrl
push
xchg
xor
push
jo
mov
jns
aaa
or
or
and
leave
xchg
ljmp
movsl
lret
xlat
mov
out
mov
out
mov
jo
cltd
and
mov
adc
and
pop
arpl
ja
cmp
stos
jge
push
xchg
adc
ds
jne
fs
movl
push
aam
fucomip
mov
push
sbb
cs
jo
and
mov
jg
js
push
pop
xchg
jp
xchg
cmc
nop
mov
imul
hlt
add
cs
cwtl
push
mov
mov
fisttps
xchg
lahf
and
dec
xor
jae
sbb
fisubs
inc
jnp
add
std
xor
cs
out
das
aam
mov
arpl
aad
mov
lcall
cltd
sbb
fcmovbe
lcall
adc
insl
sub
cld
das
cwtl
pop
push
lahf
lret
dec
xor
stos
daa
xchg
mov
push
cmp
mov
xorb
pop
dec
sarl
iret
enter
sub
mov
in
sbb
add
jbe
mov
xchg
add
or
sti
ds
xchg
rolb
xor
cmp
leave
mov
movsl
andl
push
push
mov
fcmovb
dec
sysret
mov
mov
shl
icebp
sub
xor
out
out
movsl
aaa
mov
jl
mov
les
dec
jge
mov
mov
sbb
jecxz
jle
and
ja
inc
mov
sub
icebp
xchg
mov
mov
xor
andl
nop
xorl
pop
ret
shll
cli
rcll
cmp
add
loop
or
outsb
and
sbb
test
daa
pusha
xchg
cmp
and
push
fcompl
iret
or
sbb
in
inc
mov
dec
cltd
test
mov
xchg
fistps
push
testl
cmp
cmp
rolb
add
pushf
push
mov
push
popa
mov
mov
add
cmpsl
adc
mov
xlat
ljmp
fs
cmp
inc
xchg
mov
popf
loopne
rorl
testl
inc
cmpsl
out
adc
lahf
dec
data16
outsl
xchg
pop
fsubs
imul
std
popf
or
dec
push
pop
lahf
pop
daa
adc
sub
loopne
mov
sbb
inc
mov
inc
nop
call
fyl2xp1
push
lret
pushf
lods
cmp
mov
sbb
add
call
sub
mov
dec
inc
pop
dec
jge
pop
sub
aas
call
mov
sarl
or
jae
mov
xchg
test
add
pop
push
bound
adc
cmp
sub
test
lret
jge
arpl
xchg
fs
iret
mov
lret
and
fldcw
dec
negb
sub
mov
fisubl
rorl
popf
adc
mov
mov
mov
imul
push
sbb
cmp
test
add
cld
or
push
nop
pop
mov
or
xor
clc
insl
bound
pop
scas
jge
inc
add
sub
dec
push
cmp
test
out
loope
xor
in
fsubl
dec
xor
out
pop
jnp
push
bswap
shrb
mov
sahf
push
stos
cmc
mov
mov
pop
call
jmp
mov
dec
adc
dec
mov
rcrl
jae
mov
cmc
dec
clc
or
dec
gs
sub
jmp
xor
xchg
hlt
pusha
data16
adc
icebp
pop
mov
test
insl
mov
dec
add
cs
out
fwait
push
xor
inc
pop
out
aad
stc
cmc
test
or
pop
push
cmp
dec
movsl
lds
pop
adc
xchg
or
xor
add
aad
sbb
fisttpll
loopne
fwait
add
inc
pop
ds
es
push
sbb
pop
xchg
mov
push
rcll
xchg
shr
jge
lock
fnstsw
jbe
outsl
jl
cmp
push
jno
sub
xor
or
xor
movsl
icebp
mov
jae
cmp
ljmp
imul
ja
sub
mov
add
pusha
repz
sbb
lret
mov
cld
dec
test
lea
fisttpl
pop
lods
cmp
sbb
out
pop
outsb
ljmp
leave
mov
addr16
mov
mov
cli
addr16
ficomps
push
mov
lret
sysexit
and
outsb
sbb
inc
aas
lcall
cltd
jecxz
cs
inc
int3
mov
addr16
dec
cmpb
mov
mov
mov
or
scas
cs
push
fwait
pop
sub
dec
ds
fsubrl
xchg
test
test
test
jae
mov
popa
and
pop
mov
lock
sub
or
mov
adc
xchg
xchg
sahf
and
jmp
aaa
jo
mov
out
icebp
test
les
mov
movsl
inc
xor
adc
xchg
pusha
and
pop
mov
inc
lock
pop
fstps
mov
ret
loope
jge
push
sub
loope
pop
fildl
imul
jl
pushf
xor
les
mov
out
test
dec
push
xchg
jmp
lret
fcomps
in
cld
jbe
mov
std
loopne
stos
pop
cmp
sbb
lcall
mov
pop
jnp
push
addr16
out
call
mov
stos
lds
testb
in
sub
shl
dec
jg
js
sub
sbb
add
inc
mov
ja
insb
lcall
push
das
push
jl
outsb
repnz
jbe
sub
dec
dec
pop
mov
sahf
clc
ja
mov
adc
cmp
jae
push
popf
in
cmpsl
lea
scas
or
inc
pop
int3
push
movsl
inc
lret
rorl
inc
push
std
into
jg
xor
jae
int
xor
cmc
xchg
mov
mov
js
pop
es
je
imul
mov
ds
nop
jg
ret
pop
or
outsl
mov
adc
xchg
lea
pop
mov
jmp
cmp
lds
xchg
ret
jnp
jns
adc
mov
loope
inc
adc
add
push
rcll
add
inc
jl
jnp
in
std
mov
add
mov
aaa
sbb
adc
mov
loope
sbb
jmp
xchg
lds
addl
and
mov
dec
cld
pop
jb
test
jecxz
cmc
icebp
push
mov
leave
aas
dec
stc
pop
push
sbb
loopne
testb
adc
dec
xchg
daa
dec
jb
cmp
mov
jg
clc
mov
sub
sbb
mov
sbb
testb
rclb
dec
inc
push
mov
cmp
call
push
pop
sbb
xchg
inc
push
xor
cmp
push
sbb
out
jge
dec
cmp
fiaddl
and
jbe
push
loopne
adc
sub
dec
cmp
movsl
inc
shl
sub
sbb
icebp
sbb
and
xlat
push
dec
mov
dec
test
sti
inc
mov
mov
mov
out
xor
ret
pop
vsubsd
jb
xchg
pop
pop
pusha
sub
mov
aad
jg
pop
call
jp
lea
inc
mov
test
rorl
xchg
int3
cld
and
lea
out
cmp
sti
ss
int3
fincstp
pop
mov
hlt
or
jae
leave
aaa
dec
shrw
dec
icebp
cwtl
add
cli
xchg
dec
sbb
and
xchg
leave
xor
stos
mov
cmp
pop
and
test
and
into
mov
data16
xchg
insl
test
insl
cmp
out
mov
sub
adcb
inc
popf
aad
movsb
jae
mov
xchg
xchg
lods
pop
xor
inc
lcall
cmp
cmp
push
or
xchg
hlt
or
flds
je
in
outsl
test
dec
sub
cwtl
mov
pop
push
mov
xor
es
mov
xor
js
lods
jg
cmp
mov
or
sbb
mov
cmp
cmpsl
pop
movsl
dec
enter
jmp
test
xchg
sbb
mov
jne
push
cmp
mov
jno
fisubrs
xchg
sub
pop
mov
fdivp
dec
jecxz
xor
or
subb
and
push
fdivrs
shlb
leave
mov
add
aaa
sbb
fsubrl
loopne
pushf
jp
push
pop
adcb
fwait
cmpsb
lret
inc
lret
mov
jmp
pop
jae
adc
out
jae
jno
pop
push
add
pop
cmp
dec
push
mov
aam
repz
shll
fistpll
pop
ss
cmp
aam
popa
daa
mov
int
push
stos
movb
shlb
push
cld
cmpb
jbe
push
jbe
mov
lods
pusha
mov
lods
shl
roll
imul
std
jbe
lcall
dec
adc
adc
adc
xchg
push
adc
and
rolb
lock
cmp
ds
mov
pusha
mov
mov
popa
aas
pop
aas
mov
mov
mov
mov
lods
push
es
mov
xor
xchg
xchg
xchg
xchg
xor
sub
inc
enter
cwtl
sahf
mov
fdivp
sub
leave
jns
jne
mov
mov
pusha
fs
hlt
mov
testl
into
ds
mov
int
int
sti
ljmp
pop
or
pop
sub
lcall
add
jbe
sub
xchg
push
shrb
cmp
pop
xchg
adc
lahf
icebp
imul
xor
jnp
lahf
xor
mov
subl
jo
arpl
ret
xor
inc
imul
arpl
jno
jno
jmp
xor
mov
psrlq
push
cs
pop
jnp
pop
push
bound
cld
xor
mov
leave
cld
cmp
mov
paddb
scas
adc
loop
dec
dec
pop
mov
cltd
scas
and
fwait
and
jg
add
jns
iret
xor
jne
call
outsl
imull
or
cmc
lock
and
xor
adc
adc
sub
jle
xchg
adc
cwtl
push
idivb
test
adc
lahf
add
xchg
jb
lods
ds
add
adc
repz
sbb
cmp
sti
lea
std
and
scas
movsl
xlat
iret
inc
enter
mov
jo
mov
roll
push
and
jg
mov
outsl
insl
xchg
rorb
xor
outsl
dec
jmp
shll
cmpsb
cli
sub
pop
xchg
cmc
push
mov
inc
scas
ljmp
mov
jg
mov
sub
fs
cmp
test
jg
fmulp
insb
mov
in
stc
cld
notl
cmovs
call
scas
jg
inc
repz
incb
and
push
fmulp
fnstsw
fisttpll
mov
mov
mov
sub
movsl
std
rorl
jb
je
mov
dec
mov
jmp
jne
scas
mov
xchg
dec
repz
fdivs
ret
call
sub
out
lea
xchg
stos
jae
push
or
pop
mov
adc
int3
or
or
and
and
cltd
sbb
adc
jo
fstpt
imul
push
sarl
inc
std
and
mov
or
aas
orl
icebp
flds
push
xchg
fdivrs
cmp
lahf
roll
mov
into
and
cmp
cmpsl
mov
jnp
mov
insl
ret
sub
imul
ret
rol
push
xchg
aam
fidivl
inc
roll
add
sbb
jne
setae
adc
and
jp
push
xchg
repnz
ss
hlt
inc
pop
jnp
push
jns
xor
fists
cmpsb
shll
fistpll
test
sbb
push
sar
xorl
xchg
lods
test
push
mov
jle
sbbl
iret
cmpsb
sbbb
push
das
jl
cltd
stos
xchg
pop
pop
cmp
fnstcw
or
mov
stc
push
fnsave
mov
imul
mov
pop
outsb
sbb
cmp
fs
shlb
movl
jmp
cld
mov
xchg
jg
jecxz
mov
or
mov
push
hlt
push
xor
fmuls
xchg
loop
add
cmpsl
sbb
stos
stos
fsubr
cmp
mov
insb
ret
sbbl
leave
je
fsts
xor
and
dec
lods
addb
int
jmp
arpl
mov
iret
sbb
movsb
ret
push
out
and
in
jae
add
pop
sbb
ftst
xchg
call
or
mov
or
ja
shlb
xlat
add
insb
sbb
stc
inc
cmpsl
daa
xor
shll
dec
adc
rcll
shlb
in
jmp
dec
adc
mov
cmp
decl
stos
addr16
test
hlt
lods
das
and
daa
push
dec
loop
xor
dec
and
push
ljmp
push
jae
call
pop
push
pop
scas
lret
xchg
setno
into
cmp
orl
out
icebp
outsb
cmpsb
adc
aad
mov
inc
jae
aad
jmp
into
mov
sbb
mov
lock
add
pop
aam
orb
test
shl
push
cltd
adc
pop
or
fildl
mov
xor
cwtl
xchg
shl
push
jbe
push
out
pop
jle
jb
cs
xchg
mov
adc
dec
xorl
sbb
jb
lret
cld
cmp
aad
pop
or
shll
cmp
outsb
cmp
xor
dec
or
inc
cmpsl
pushf
ljmp
xchg
ja
push
stos
lock
stc
mov
subb
loop
pop
psllq
cmp
mov
rcr
cld
andb
cmp
in
pop
push
mov
hlt
push
pop
jmp
mov
cwtl
cmpsl
in
sub
sbbl
in
clc
stc
dec
sbb
pop
lods
jnp
aas
scas
iret
cmpsb
cmpsl
xchg
push
pushf
aad
jl
scas
dec
adc
mov
or
mov
mov
dec
js
fsubs
sub
fstcw
mov
jge
fimull
jno
xorb
test
sub
outsb
loope
adc
inc
sub
out
mov
mov
adc
xchg
dec
insl
sbb
pop
cmp
in
push
iret
out
mov
pop
pop
push
lret
je
push
imul
and
addb
cli
outsl
or
push
cmp
pop
mov
mov
jo
cmp
sbb
inc
jbe
scas
sub
sub
xor
fmull
mov
in
les
push
mov
push
movsl
imul
add
sar
fcomps
pop
negl
cwtl
adc
aad
xchg
stos
jl
ror
fimull
and
cmc
testb
mov
lods
jecxz
outsl
mov
hlt
fcmove
cli
popa
or
addb
inc
mov
outsb
dec
stos
testb
mov
cmpsl
xor
push
sbb
mov
lock
fldcw
mov
into
adc
mov
xor
aas
jmp
push
int3
jl
imul
dec
into
imul
popf
call
mov
ja
jae
stos
mov
lock
aaa
inc
clc
sub
mov
imul
inc
stc
ret
lea
call
aas
dec
dec
out
test
gs
insl
sti
imulb
jge
loope
add
out
push
jmp
test
cli
stos
and
into
adcb
enter
enter
gs
mov
mov
and
jne
lcall
mov
leave
push
jmp
das
cmpsb
test
dec
lds
pop
xchg
enter
mov
mov
xchg
dec
jp
inc
push
jns
arpl
mov
push
stos
pop
ror
mov
cmp
pop
inc
or
fcoml
shr
cmpsb
cs
ljmp
in
adc
push
cmpsl
test
fwait
sbb
outsl
fs
mov
les
inc
and
jne
cmp
or
push
pop
ja
xlat
adc
fucomp
js
inc
stc
bound
push
pusha
bound
mov
xor
pop
sti
ds
jmp
into
movsl
fndisi(8087
adc
clc
ss
fld1
lcall
add
mov
pop
add
push
cwtl
test
mov
enter
pop
dec
and
add
jle
jo
add
pop
sub
pop
lcall
sbb
fsubrp
push
outsl
mov
add
xchg
mov
mov
mov
stos
jmp
xor
shlb
lcall
fcom
outsl
mov
stos
mov
push
mov
add
sub
jp
ss
push
pop
ss
pop
dec
psubusw
dec
mov
and
cmpsb
and
xor
mov
outsb
addr16
test
sti
mov
fiadds
xchg
sub
or
aam
mov
sti
inc
pusha
jl
repz
std
or
test
jecxz
ss
loop
mov
mov
xor
fwait
je
mov
jl
dec
sub
ljmp
jno
jno
fwait
xchg
mov
cmp
lret
pushf
fldcw
xlat
out
mov
mov
ret
mov
push
jnp
mov
bound
call
rorb
fnclex
out
daa
cld
mov
hlt
push
sub
popf
sahf
push
xor
rorl
cwtl
xchg
repnz
cmp
shrb
xor
and
fcmovnb
bnd
push
mov
cli
repz
shrl
fcmovne
sbb
leave
and
lahf
push
popa
jp
and
idivb
or
inc
sub
dec
repnz
inc
sahf
xchg
aad
jb
ret
sbb
cmp
jne
jecxz
mov
aam
mov
mov
fsubs
dec
mov
cmp
dec
orb
add
scas
test
popf
xor
mov
dec
inc
and
nop
std
cmpsl
jg
ficoml
or
in
mov
sbb
push
push
mov
insl
cmp
pop
push
pop
xchg
adc
jg,pn
outsb
mov
inc
rol
subl
stc
lret
das
popf
and
push
iret
mov
inc
push
mov
mov
int
ds
in
lods
sbb
jp
lahf
mov
push
loope
gs
mov
mov
notl
out
mov
pop
inc
mov
aaa
in
pop
rolb
and
adc
dec
pushl
xor
and
shl
pop
mov
or
mov
mov
sbb
xchg
and
xchg
pop
lcall
mov
lock
les
insb
sbb
in
imul
cltd
mov
pop
pop
mov
mov
out
and
jns
call
in
push
sub
movsl
cmp
orb
xor
clc
rorb
cmpsl
mov
in
pop
das
mov
xchg
xor
popa
testb
cli
and
add
sub
mov
mov
data16
mov
lock
aad
inc
pop
nop
push
rorb
jbe
fisubrl
adc
add
arpl
adc
sub
sbb
out
mov
mov
push
and
cltd
mov
mov
cmp
es
sahf
cmpsl
dec
xadd
mov
stc
jno
sbb
add
js
imul
punpckldq
les
sub
lods
bound
push
xlat
scas
xor
xchg
and
into
test
pop
sbb
mov
inc
fidivl
aaa
xor
and
pop
add
sbb
xchg
divl
and
jle
jno
dec
jl
mov
mov
jb
xchg
int3
inc
cmpsl
add
mov
out
aam
or
xchg
shrl
jne
daa
sbb
inc
add
and
push
int
xchg
rcll
dec
pop
dec
xchg
inc
xorb
push
dec
push
cmpsb
scas
pop
test
scas
lods
js
in
aas
jns
xchg
push
test
cmp
push
cmp
adc
dec
outsb
sub
ret
movsl
jmp
sub
jmp
sbb
sub
test
adc
hlt
mov
add
pushf
ficomps
test
daa
outsb
pop
dec
pop
and
and
push
sub
pusha
daa
xlat
inc
das
test
and
xchg
inc
jge
add
or
loop
fistpl
push
in
outsb
movsl
xchg
pop
fbstp
pop
mov
and
and
jbe
adc
cmp
cmovb
mov
call
add
and
in
adc
sub
loopne
imul
xchg
jne
sysenter
xor
into
fbstp
mov
and
push
lock
mov
popa
sti
jbe
test
sub
bound
xor
sahf
sti
jae
inc
mov
pop
bnd
xchg
add
or
or
dec
imul
repz
lea
lcall
mov
mov
push
gs
movsl
out
pop
push
lds
ljmp
pop
jb
or
lcall
jg
in
lods
fwait
test
in
daa
out
xchg
jmp
xchg
pop
sahf
int3
aas
cmpsl
cltd
fstp
mov
imul
dec
outsl
pop
xor
mul
mov
outsb
jmp
dec
rolb
ja
cmpsb
decb
sti
mov
xor
sub
cltd
mov
xchg
fidivl
jg
aad
loop
popa
mov
mov
xor
enter
xor
push
das
shrl
fs
sbb
mov
lods
dec
sbb
pop
loope
in
mov
in
jne
mov
repz
pop
dec
pushf
inc
xor
cmp
inc
rcr
cltd
es
and
mov
xchg
fimull
repnz
pop
adc
stos
pop
and
jno
cmpsl
xlat
mov
lods
test
loopne
or
sbb
pop
out
add
xor
in
dec
stc
fcomps
negl
xor
mov
scas
ss
dec
mov
lds
pop
xlat
pop
or
xor
xchg
cmp
stos
xchg
jne
inc
pop
mov
sarb
lret
jl
dec
imul
je
adc
jmp
sbb
cmp
movsb
pop
cmp
nop
and
aam
daa
shll
js
jbe
scas
jns
xor
xor
aas
pop
jb
scas
fsubl
leave
and
andb
sub
loope
and
outsl
add
push
leave
sub
movsl
iret
insl
push
outsl
pop
fwait
inc
and
rorl
lock
mov
hlt
push
xor
adc
mov
or
das
push
iret
add
mov
nop
push
xchg
jge
pop
dec
dec
lcall
jo
lods
cmpsb
in
jae
or
add
sqrtps
shlb
ja
lds
fcomps
cmp
test
mov
pop
lock
adc
lea
mov
mov
push
add
ja
push
arpl
aas
call
inc
push
fistps
cs
inc
cs
push
test
aad
xor
push
pop
mov
cmp
in
or
inc
neg
stos
cld
pop
push
ffree
xlat
push
sub
xchg
into
push
adc
mov
ss
xlat
mov
popf
push
popa
jg
daa
sub
mov
pop
in
daa
push
leave
sub
lahf
popa
icebp
xchg
mov
add
jle
pop
xchg
and
add
das
jp
fmul
fabs
pop
inc
loop
sarb
jne
inc
xchg
cmpsl
cmp
icebp
add
es
enter
cmp
mov
into
fstps
mov
lcall
and
sbb
sti
out
jecxz
testl
jo
pop
loope
ret
lods
and
cwtl
sahf
or
add
pop
pushf
shlb
pop
stos
mov
movsb
mov
and
daa
push
mov
imul
dec
aam
dec
mov
out
push
mov
lahf
fisttpl
adc
mov
ret
jecxz
dec
sub
rcrl
pop
inc
mov
repz
lods
das
ja
inc
test
jbe
test
fdivp
fldt
xchg
sub
inc
push
dec
mov
cmc
scas
fldcw
xchg
es
hlt
scas
mov
sub
xchg
inc
push
adc
sub
or
pop
ljmp
or
out
repz
sbb
cmp
stos
cmp
js
jl
xchg
push
mov
inc
or
add
aam
mov
and
aas
mov
xchg
adc
icebp
je
and
stc
xchg
and
add
xchg
divb
sub
cmp
arpl
jl
pop
push
pusha
xor
and
pop
fcoms
arpl
adc
enter
test
cmp
adc
xchg
aad
cmp
icebp
inc
mov
leave
xor
adc
inc
subl
push
push
adc
sub
or
cld
popf
sbbb
pop
stos
or
cmpsl
xchg
xchg
pop
push
inc
adc
push
add
jbe
mov
fimull
adc
imul
in
pop
leave
clc
out
mov
jb
cmp
and
insl
lock
and
dec
out
xor
jno
and
addr16
scas
xchg
and
shll
cmp
and
jae
cli
xor
test
in
test
imul
or
insb
jae
dec
ret
jnp
xchg
in
add
pop
or
add
pusha
pusha
scas
fdivrp
test
mov
mull
cmpsl
adc
cmp
jle
cmpsb
mov
addr16
shr
gs
es
bound
std
adc
pop
shrb
jne
jo
mov
and
xlat
aas
add
jl
gs
enter
gs
test
push
pop
jecxz
ret
cmc
xor
cld
jg
mov
push
adc
add
jle
call
gs
pop
leave
mov
cmpsb
dec
test
cmp
in
pop
mov
nop
andb
stos
mov
lcall
lods
push
cmp
mov
inc
add
push
je
mov
les
dec
jecxz
stc
or
ficomps
sub
test
imul
iret
mov
daa
pop
lret
mov
dec
mov
stos
test
rolb
jnp
or
in
mov
mov
adcl
mov
inc
jns
jecxz
fcoml
aaa
xchg
and
xchg
out
fucomip
mov
jae
add
ja
imul
or
sub
les
mov
jmp
in
int3
and
fildl
sub
inc
xor
jmp
and
test
ja
sub
bound
inc
rorb
add
jmp
int
movsl
pop
bound
sub
sbb
shrb
addr16
scas
inc
in
jns
daa
cmp
sbb
movsl
fwait
mov
jae
inc
cmp
sub
and
push
and
or
js
jb
lahf
adc
inc
or
ret
js
adc
repnz
mov
movsl
insl
inc
jp
pop
leave
pop
xchg
dec
xor
jbe
pop
adc
add
enter
out
mov
adc
adc
or
cwtl
ds
adc
negb
jp
gs
jmp
mov
int
fisttpll
pop
cmp
aaa
xchg
add
out
mov
jns
mov
fisttpll
cwtl
lahf
ret
rorb
xchg
into
inc
pop
iret
push
mov
mov
lds
mov
adcl
fstpl
pop
add
push
mov
push
repnz
xchg
mov
in
in
daa
cmp
fmul
std
push
push
sub
out
je
hlt
jae
mov
stos
xchg
cwtl
pop
adc
arpl
mov
dec
idivb
jp
pop
in
test
insl
xor
out
and
cmp
jbe
mov
push
push
dec
pop
inc
sub
je
mov
inc
popl
inc
dec
cmp
into
xor
jns
aam
test
test
mov
data16
ja
je
sbb
fs
pop
mov
cwtl
and
repz
push
mov
jns
lods
cmp
push
mov
sahf
xor
cmp
pop
sub
js
pop
cli
cmpsb
cmp
mov
rcrl
stos
pop
clc
outsb
movsb
or
push
mov
xor
jge
mov
mov
or
test
mov
les
clc
mov
add
pop
or
leave
std
and
loope
sbb
mov
fidivrl
les
or
mov
stc
arpl
fmull
sub
mov
jecxz
xchg
or
es
jg
fsts
nop
loop
icebp
movsl
mov
leave
cmpsl
pop
and
and
adc
xchg
push
jne
pop
and
pop
aam
push
test
dec
out
enter
or
lret
xor
adc
andl
cli
and
daa
loopne
mov
mov
or
cmpl
bound
and
cwtl
stc
sub
pusha
in
cmp
mov
scas
xor
pop
jae
icebp
mov
sub
loope
pop
imul
lds
inc
stos
xchg
ljmp
xor
nop
out
add
ja,pn
pop
add
lds
sbb
ja
mov
jmp
outsl
popa
mov
mov
aam
mov
push
cli
dec
ja
test
mov
enter
lret
repz
cmp
loopne
pop
mov
insb
cmp
int
notb
fucomi
xchg
popf
ds
sbb
iret
mov
mov
xchg
rorb
sbb
das
repz
test
sbb
or
push
pop
cmpsb
aas
sti
add
test
cwtl
inc
leave
fcoms
pop
mov
in
and
push
xor
sbb
lods
cmc
mov
inc
cmp
insl
mov
jmp
rol
dec
mov
push
fistpll
mov
ja
pop
push
xchg
call
mov
jo
loopne
push
insl
push
in
fs
dec
scas
push
in
scas
mov
sbb
pop
or
mov
gs
aas
jnp
xor
insl
push
ficomps
aaa
push
lret
in
cmp
js
ficomps
stos
std
lret
enter
sub
rolb
jnp
xor
popl
push
dec
mov
lret
int
int3
std
sub
or
cld
jae
inc
das
xchg
adc
fstpt
popf
cs
mov
or
aaa
js,pn
nop
daa
adc
out
lret
outsl
inc
imulb
push
stc
icebp
jg
xchg
add
mov
cmp
sbb
test
push
pop
cmpsb
jg
sub
lods
xchg
mov
lret
ljmp
loopne
data16
je
xchg
sub
add
sub
cmp
or
inc
mov
subl
lods
jecxz
cmp
mov
or
loop
les
xchg
mov
test
popa
dec
add
in
shr
mov
fimuls
movsl
cmpsb
insb
add
and
mov
push
call
clc
adc
ret
pop
icebp
negl
cltd
xchg
rorb
scas
dec
repz
movsl
mov
call
mov
mov
test
mov
sub
mov
loopne
popa
ss
mov
ljmp
popf
cwtl
popa
mov
cmpsb
int3
movb
lock
mov
xchg
mov
adc
hlt
rcl
into
pop
fsubl
rcl
pop
sbb
pop
sbb
sbb
adc
inc
aad
lds
pop
fs
inc
ror
call
dec
adc
xor
ret
jo
and
in
xchg
rolb
pop
aam
mov
mov
mov
in
insl
mov
enter
xchg
jne
mov
push
cmp
cmpsl
pop
jns
in
dec
adc
jb
or
xor
push
ja
dec
int3
jg
pop
push
test
outsl
addr16
sbb
cmp
xchg
dec
mov
pushw
hlt
inc
ja
aas
sbb
add
daa
icebp
cmp
dec
out
sub
in
jge
mov
push
push
xchg
fldt
pop
cmp
sti
enter
insb
sub
xchg
enter
sbb
inc
fdivl
loope
out
clc
sbb
dec
cmp
frstor
cmpsb
std
insb
jbe
cwtl
mov
mov
ljmp
dec
push
dec
stos
mov
adc
call
hlt
sbb
mov
sbbb
pop
dec
out
cmp
addb
and
add
pop
jbe
ret
mov
inc
fcoms
pop
and
jns
jnp
xlat
sub
sbb
push
push
fwait
add
inc
dec
ret
cmp
into
adc
pop
jae
mov
gs
cmc
jl
jne
sahf
aaa
stc
aaa
adc
test
stc
ds
push
push
scas
add
sbb
mov
push
test
out
les
cmp
aam
ret
mov
sub
lods
imul
je
jne
lock
sbb
mov
sbb
popf
std
push
cmp
dec
leave
pop
in
fisttpll
inc
or
or
mov
mov
shr
inc
fadds
test
lahf
test
and
adc
inc
arpl
sbb
push
repnz
inc
push
f2xm1
xchg
data16
jmp
pop
pop
aas
xor
or
mov
cmp
and
mov
popf
inc
ja
shrb
sub
orl
addl
aad
adc
lods
fldt
pop
inc
inc
or
jb
call
sbb
loope
mov
add
jo
into
xchg
les
shll
cmp
jg
add
push
adc
jle
jbe
clc
subb
lea
aad
popf
or
fsubs
repnz
stos
imul
es
mov
adc
mov
sti
sbb
add
ret
stos
adc
jae
or
xchg
xchg
stos
push
stos
test
mov
pop
push
sbb
xchg
ret
cwtl
scas
pop
jb
int
xlat
shl
rorb
inc
pop
stos
test
fdivrp
clc
ljmp
xor
push
mov
jae
rcrl
or
fbstp
mov
imulb
pop
jecxz
das
jge
cmp
out
lds
fstp
aad
cld
pop
xchg
xor
inc
loopne
int
mov
fucompp
dec
adc
fwait
adc
jbe
stos
in
push
ljmp
sbb
mov
cli
flds
dec
sbb
aaa
lret
jo
xorl
adc
dec
jp
push
pop
fistps
mov
xor
mov
lods
imul
mov
jno
mov
lods
inc
mov
mov
mov
ffree
cmc
scas
inc
inc
lcall
push
mov
in
or
jns
or
sub
xchg
fwait
mov
jns
inc
iret
add
push
push
into
or
lea
cmp
cld
and
and
xchg
push
in
in
loopne
mov
push
cli
ret
lods
bound
push
xlat
or
dec
sbb
in
xchg
ret
movsl
mov
dec
cmp
jo
jnp
or
outsl
add
std
cli
cli
sbb
inc
mov
jo
aam
imul
adc
getsec
mov
jmp
xor
add
xor
test
mov
icebp
inc
add
xchg
or
rcll
dec
mov
and
cli
jno
inc
repz
outsb
ljmp
adc
mov
into
stc
jmp
xchg
jnp
stc
push
xor
mov
fisttpl
or
push
sti
mov
aas
scas
test
adc
ljmp
and
fwait
ret
mov
xor
gs
adc
scas
js
ds
outsb
int3
pop
ficoms
lds
cmp
outsl
sbb
inc
xchg
jg
add
sub
jae
mov
daa
aam
movsb
cmp
adc
popf
mov
out
add
and
jnp
cmpsb
mov
adc
xchg
stos
push
insb
mov
sar
mov
icebp
xchg
xor
mov
pop
lahf
movsb
jle
jnp
or
xchg
or
adc
int3
inc
pop
mov
dec
in
jle
mov
ja
inc
call
out
inc
rcrb
cli
add
ficomps
pop
fnstcw
jo
into
push
cmp
inc
aaa
mov
in
ljmp
and
test
shlb
ds
fabs
mov
pop
int
xchg
and
cwtl
sub
cmpsb
test
repz
repz
dec
adc
inc
cmp
push
inc
jge
jns
jg
xor
test
pop
fwait
mov
dec
xchg
lds
aaa
xor
mov
sub
fnstenv
ljmp
movsl
ljmp
lods
das
dec
xchg
xchg
push
shlb
push
and
hlt
pop
dec
test
nop
adc
cli
xor
pusha
in
loop
add
dec
push
cwtl
sub
jp
xchg
lods
xchg
xor
pop
sub
mov
scas
aas
in
jle
jle
push
mov
sbb
or
outsb
fs
cld
mov
or
mov
js
jns
lods
push
pop
adc
mov
jbe
stos
jb
repz
lcall
lods
sub
outsl
dec
insl
jb
sbb
nop
sub
xor
mov
cmpsl
out
fistps
push
sub
push
pop
xchg
test
push
outsl
cld
sbb
jmp
aam
faddp
addr16
adc
lea
inc
imul
sbbb
lods
sbb
or
insb
dec
sbb
scas
loop
mov
mov
ret
pop
fistl
negl
mov
push
shrl
sub
jge
out
insl
mov
aaa
push
mov
jl
imul
inc
cmp
adc
mov
push
fcoms
pop
shlb
stos
in
adc
fldcw
mov
lcall
xor
pop
push
adc
inc
cmpsb
cmp
and
jge
mov
ljmp
sbb
sbb
les
inc
fbld
and
rolb
and
jmp
pusha
cmp
in
sub
fcmovb
fiaddl
lods
and
dec
mov
pop
push
push
in
pop
movsl
das
aas
xor
insl
popf
sti
push
pop
push
pop
and
sti
mov
or
push
xchg
jae
loopne
movsb
inc
sub
out
and
outsb
dec
add
push
adc
push
mov
and
es
int
cmp
jns
jb
sar
push
inc
mov
sub
and
push
adc
loop
les
add
ret
aam
cmp
cmc
adc
xchg
push
fsts
outsl
int3
mov
inc
addb
movsb
push
cli
mov
or
add
push
jb
xchg
aas
mov
mov
imul
ret
inc
mov
mov
repnz
faddl
sbb
dec
jns
lahf
int3
cltd
cs
xor
shlb
and
push
inc
outsl
inc
or
pop
cmpsl
sti
imull
or
push
lods
arpl
cmpsl
outsb
cmp
dec
sbb
adc
stos
add
leave
cmp
inc
jns
push
jle
xor
xchg
leave
cltd
jnp
pop
sub
adc
pop
enter
adc
inc
ja
movsl
xchg
fcoml
push
push
xor
or
lods
sar
pop
out
xchg
imul
mov
dec
cmp
sbb
or
dec
mov
les
lret
push
adc
aam
jbe
pop
in
sbb
xchg
test
icebp
push
push
adc
call
xor
jb
mov
lds
in
loop
in
add
enter
xchg
pushf
inc
sti
mulb
mov
fstl
mov
xor
push
aad
jge
inc
cmp
pop
neg
mov
inc
mov
pop
repz
sub
sbb
xchg
scas
push
cltd
int3
and
subb
jo
inc
cmp
mov
int3
jp
jecxz
xor
xchg
out
xchg
test
cmpps
push
into
sbb
cmp
mov
pop
loope
test
pop
or
sub
inc
xor
test
pusha
mov
xchg
xchg
mov
mov
inc
jecxz
aam
or
out
or
hlt
cs
nop
rcr
int
fbstp
adc
incb
sarl
ficoml
into
sub
mov
add
jge
pop
pop
mov
adcl
daa
cmpsl
and
sbbb
cmp
js
stc
lea
dec
mov
adc
jmp
xchg
or
in
iret
out
cltd
das
pop
aaa
mov
inc
sbb
aad
adcl
repz
mov
jp
cs
adc
cmp
xchg
andb
push
mov
aaa
inc
sbb
dec
jb
aaa
sbbl
mov
push
push
mov
stos
pop
ror
add
stos
pop
aaa
pop
fisubrl
jo
mov
add
ljmp
adc
and
idiv
aas
insb
xorb
js
mov
idiv
mov
stc
rorl
push
out
pop
stos
pop
inc
pop
mov
mov
xor
pop
mov
out
mov
into
jmp
jo
test
mov
int
push
add
sbb
cli
inc
jno
test
ficoms
adc
ds
xchg
icebp
daa
sub
pop
cmc
xor
sbb
push
xor
cli
cmp
cld
xor
xor
sub
pop
dec
add
add
adc
bound
call
push
cmpl
xchg
dec
sahf
int3
inc
push
mov
and
outsl
cmpl
inc
fisttps
lcall
out
mov
dec
stos
push
pop
mov
sub
scas
mov
ret
clc
add
xor
or
sbb
es
push
or
adc
push
jae
inc
jns
add
mov
and
cwtl
mov
or
fimull
push
mov
xchg
imull
pop
int
mov
out
es
addr16
sub
jnp
lds
inc
jle
fildl
into
push
rcr
jae
arpl
and
push
and
jnp
div
lcall
lret
testb
outsl
jns
fmuls
xchg
mov
enter
mov
xor
aam
bound
fidivs
imul
inc
pusha
pop
ljmp
lods
mov
xor
push
cmp
repz
mov
pop
arpl
in
xchg
jl
das
rcrl
cli
cmp
lock
es
dec
and
leave
sub
enter
xor
xchg
ror
subb
mov
movsl
jmp
mov
xchg
pop
cld
orps
repz
out
ss
add
jl
sahf
out
shrl
stos
call
enter
jecxz
mov
out
push
out
imull
lods
pop
lahf
push
scas
dec
add
imul
mov
fildll
fcmovne
rorl
jbe
movsl
insl
and
mov
add
add
aad
leave
stos
and
sarl
add
inc
jl
lret
adc
cld
xchg
jl
mov
xchg
icebp
fwait
repnz
jg
inc
jmp
testb
not
andl
jns
ret
inc
jno
jg
jne
add
sti
les
loop
movsb
push
mov
sub
push
ds
dec
repnz
into
jno
shll
fdivr
jp
fmull
inc
cmp
pop
mov
addr16
loopne
push
pop
cmp
loope
mov
std
push
mov
lret
dec
fisubs
cmp
cli
cmp
dec
push
in
in
gs
jb
bound
js
stc
lods
in
adc
les
push
sbb
sub
repnz
lods
cmp
scas
sub
lahf
scas
xchg
push
fwait
movsl
orb
adc
push
js
jbe
fs
and
divl
pop
xchg
pop
int
ficoms
mov
ss
dec
lea
inc
cwtl
pusha
xor
mov
insb
int
aas
les
cmpsl
mov
iret
test
loope
jne
or
jno
cmp
sarb
ja
aaa
add
jno
pop
and
aas
pop
mov
mov
roll
sbb
push
sbb
lret
jle
sti
fsubrs
and
test
js
dec
aaa
push
dec
outsb
xorl
inc
fisubrl
mov
call
add
mov
scas
ds
nop
cmp
sbb
test
rol
int
imul
scas
xor
popa
adc
sbb
dec
and
sub
inc
push
cmc
sub
add
inc
add
and
xor
out
add
repnz
sti
daa
hlt
pop
add
lods
icebp
cmc
hlt
pop
sub
mov
fcos
mov
fistpl
mov
mov
inc
mov
lods
xor
mov
pop
and
dec
iret
test
dec
push
pop
add
jns
xchg
push
jnp
ret
push
mov
fdivl
jne
fistps
scas
insl
das
fdiv
fiaddl
insl
pop
mov
insb
ss
lcall
xchg
add
inc
into
dec
insl
sub
xor
lcall
add
mov
imul
mov
lods
sbb
mov
fdivrp
popf
clc
sub
pop
iret
push
adc
adc
jnp
mov
out
imul
xchg
mov
or
dec
pushf
popf
loop
pusha
fistpl
sub
sub
les
cwtl
js
mov
ss
stos
out
pop
inc
sub
xchg
xlat
sarb
add
mov
mov
ret
into
sub
push
add
leave
jnp
mov
lds
xor
shrb
fisubs
jnp
dec
mov
mov
repz
loopne
and
out
inc
add
lahf
insl
pushw
or
fmuls
jge
aam
and
jo
add
xor
push
ret
scas
mov
xlat
out
adc
popa
sti
loop
jp
outsb
jp
mov
jmp
repnz
dec
mov
fwait
jns
xchg
sbb
dec
lods
movsb
roll
js
out
adc
cs
sbb
je
imul
insb
or
repnz
lcall
dec
addl
adc
mov
and
incb
and
push
test
lea
ret
jge
adc
lods
std
jge
pop
rolb
jbe
dec
sahf
fsts
fildll
cmp
or
jb
scas
dec
mov
sub
dec
test
js
jo
add
add
rorl
xor
jmp
repnz
mov
icebp
ret
outsl
popf
jno
scas
inc
sbb
mov
inc
popa
lods
movsb
xchg
dec
lret
mov
sub
ljmp
inc
jo
sbb
jmp
test
repz
in
ljmp
adc
xchg
js
xor
lds
and
clc
mov
sti
jle
mov
mov
mov
sub
pusha
jp
mov
jp
and
mov
jo
pop
scas
mov
jp
shr
icebp
adc
add
xchg
es
xchg
popf
mov
push
or
ret
jg
mov
dec
test
pushf
or
mov
push
pop
fcompl
mov
mov
mov
cmp
jmp
shll
sbb
test
inc
in
sbb
push
xchg
mov
xor
in
xchg
fisttpl
rcr
dec
cmp
shll
jmp
popa
xchg
incl
pop
mov
jb
mov
popa
adc
fstpt
pop
mov
jge
out
imul
fidivrs
rclb
jo
incl
loopne
inc
sahf
pop
imul
adc
jmp
adc
je
and
add
jb
adc
and
insb
lret
xchg
ret
push
loop
pop
ss
rcl
imul
xor
inc
clc
xchg
shrb
call
lret
inc
stos
popf
and
enter
mov
inc
dec
pop
push
hlt
cmpsb
jo
xchg
stos
stc
add
lcall
or
xchg
out
and
xchg
mov
scas
icebp
int3
hlt
mov
sbb
xchg
sbb
hlt
pop
daa
fistps
imul
sub
xchg
dec
popa
addb
pop
pop
adc
pop
mov
mov
cmpsl
push
fstps
lods
std
pop
ds
sti
cmp
add
das
jge
inc
sbb
sub
inc
cld
cli
imul
test
dec
test
cmp
shlb
push
sub
ja
repz
or
in
or
nop
lds
xor
cs
inc
aam
sarl
mov
mov
inc
sbb
add
jmp
dec
jo
jb
pushf
push
jmp
cmp
sub
sti
mov
fsub
ror
pop
fidivs
bound
inc
jge
mov
jbe
cmp
imul
inc
mov
sahf
cli
bts
adc
dec
or
or
rcrb
jno
test
xchg
xchg
aam
fwait
fs
cwtl
xor
cmp
insb
dec
sub
pop
push
cli
test
xchg
cld
outsl
inc
xchg
dec
pop
sub
pop
sub
or
pushl
push
mov
sub
mov
cmc
mov
jecxz
and
nop
inc
push
fldenvs
and
jbe
mulb
ret
in
xchg
cld
push
out
push
xor
mov
rorl
and
fwait
inc
xchg
and
into
nop
mov
call
rolb
xor
and
push
adc
lahf
pop
lcall
cmp
inc
pop
insb
add
in
jbe
sbb
lods
fstl
popl
pop
sbb
add
xchg
cmpsl
jno
mov
dec
aas
mov
mov
sub
shll
jl
out
jns
and
mov
outsb
loopne
cmp
repz
and
jns
roll
mov
addr16
push
add
into
add
mov
xor
test
adc
or
call
jmp
push
or
movsb
jle
aaa
aad
call
clc
mov
int
xor
ds
test
adc
out
les
test
or
and
aaa
adc
push
lods
adc
movb
shrb
inc
cmp
or
xchg
cmc
or
cmpsb
xor
mov
fsts
xchg
adc
mov
dec
mov
int
adc
or
in
push
lock
xlat
jp
cs
jns
or
sahf
enter
lods
lods
push
lods
and
lds
notb
je
std
fisubs
mov
cmp
insb
mov
fiaddl
pop
adc
push
lods
mov
rcrl
adc
pop
shll
pop
mov
mov
aas
arpl
xlat
xor
aas
xchg
or
lock
xor
dec
push
cwtl
jb
pop
aaa
and
sub
fwait
sti
xchg
pusha
rorl
fisttps
mul
sbb
dec
fildll
jno
cmpsb
adc
sbb
clc
adc
push
dec
xchg
nop
cmp
loopne
cmp
and
and
loop
or
mov
cltd
sub
adc
jge
and
stc
arpl
sub
jb
sbb
pop
and
push
sub
mov
inc
push
pop
sub
or
cmp
xchg
push
pushf
jle
jmp
mov
addl
js
jo
jns
mov
gs
repnz
adc
or
pop
stos
outsl
push
mov
mov
andb
add
jmp
dec
pop
outsb
bound
push
adc
rolb
sbbl
scas
dec
popf
fsts
inc
rolb
xchg
push
mov
pop
pop
mov
cld
andl
rcl
pop
lea
sub
inc
cmp
sbb
mov
sbb
pop
cwtl
push
sbb
mov
shll
push
and
push
filds
inc
inc
negl
cltd
in
pushl
adc
loopne
aaa
lahf
je
cmp
fidivrs
lds
xor
out
lret
jmp
dec
mov
andb
cli
daa
inc
data16
insl
xchg
xchg
xor
pop
sbbl
xchg
enter
dec
or
insb
xchg
and
hlt
mov
fsubs
in
je
idiv
cmp
xchg
insb
xchg
add
mov
das
xchg
in
subb
aad
dec
lods
fisubrs
pop
pop
and
fsub
sbb
mov
push
mov
xchg
and
xor
testl
outsl
sbb
pop
sub
and
xchg
mov
lods
cwtl
leave
pusha
xor
call
mov
lock
push
lret
fisubs
xchg
mov
sub
push
sbb
rcll
out
fnstcw
ret
pop
inc
xchg
aam
cmp
sub
mov
adcl
mov
sbb
test
jnp
je
mov
addb
cmp
scas
out
add
xorb
push
jg
push
adc
dec
stc
mov
lock
cli
fcomps
sbb
dec
lock
in
nop
in
subl
rorb
test
sub
sbb
imul
cld
repz
ds
clc
mov
out
call
ficomps
cmp
movsl
rcrb
sbb
mov
lahf
test
pop
cwtl
xor
ret
gs
sub
xchg
lret
pusha
in
out
mov
xor
jnp
pop
xchg
push
jb
adc
das
xchg
test
icebp
stos
xor
in
hlt
or
pusha
gs
movsl
insb
sub
mov
and
add
in
pop
inc
cmp
in
or
mov
inc
jmp
es
xchg
xor
push
ja
jnp
ljmp
out
lods
hlt
xchg
pop
ss
mov
adc
in
adc
js
lret
dec
dec
mov
nop
test
dec
out
adc
orb
insb
pop
push
pop
sahf
out
arpl
movsb
jno
dec
sbb
fcomip
jno
push
jns
jns
jle
add
insl
pop
movsb
or
in
pop
mov
sbb
div
aaa
push
es
movups
sub
data16
sbb
xchg
stos
push
or
stos
and
out
push
inc
push
jnp
movsl
mov
lods
or
cli
mov
testl
sub
lret
jge
pop
lret
pushf
cmp
cmpsl
lret
daa
mov
sub
inc
mov
sub
pop
cmp
mov
mov
push
cmpsl
pop
push
jnp
add
shl
adc
or
mov
mov
mov
jb
test
into
xchg
mov
push
sbb
fdivl
cld
xchg
dec
repnz
inc
inc
mov
pop
push
out
shlb
icebp
aas
xchg
fs
xchg
jae
push
stos
inc
call
repz
js
fxch
mov
jmp
jae
cli
jno
add
push
mov
jecxz
xor
lods
fisubs
mov
xchg
jo
mov
mov
inc
stos
sub
sti
and
sbb
sub
daa
sbb
scas
pop
sbb
pop
push
mov
fwait
enterw
repz
dec
mov
daa
sbb
lcall
mov
and
sarl
inc
jmp
fldcw
xlat
sbb
push
push
mov
imul
mov
cmp
inc
jbe
mov
ljmp
jne
xor
jns
xchg
int3
and
xor
lea
ret
jg
add
repnz
xlat
std
ja
data16
jbe
shl
pop
lods
pop
lds
xchg
jg
inc
outsl
mov
out
je
test
push
mov
mov
call
mov
inc
xchg
arpl
into
popl
xchg
adc
dec
sbb
sub
add
mov
addr16
mov
cli
xchg
inc
insb
jg
pop
sub
add
mov
jo
loopne
cmp
sar
mov
and
fdivs
dec
jb
jecxz
cmpsb
pop
into
ja
in
or
jns
mov
inc
mov
popa
lock
jo
aaa
push
xor
in
stos
jge
pop
les
scas
add
or
ja
data16
pop
out
or
mov
cs
sti
lods
addr16
cmp
es
sbb
pop
xchg
fstpl
test
test
movsb
xor
insb
and
cli
mov
or
cmp
xor
test
jne
loopne
pop
js
pop
int
adc
sbb
xchg
in
mov
xchg
or
xchg
xor
daa
aad
lods
or
mov
or
xchg
adc
sar
test
dec
and
xorb
cli
lods
adc
mov
test
or
jmp
sets
jle
xchg
and
test
cli
rol
inc
mov
jbe
leave
popa
pushf
dec
repz
mov
fldenv
out
lods
xchg
sbb
lahf
jmp
mov
std
je
sbb
notb
and
inc
and
in
xchg
pusha
fldl
xchg
cmpsl
dec
lds
stos
popf
out
adc
cltd
imul
es
xor
or
sub
stos
ljmp
cmp
ret
xchg
jo
daa
pop
loope
lret
jg
push
push
int
daa
inc
inc
sub
xchg
fwait
test
divb
js
pop
lcall
pop
jne
scas
dec
out
aam
jae
or
add
xchg
stos
subb
or
sub
mov
fwait
adc
inc
push
push
mov
popa
sbb
pop
das
jne
in
cmp
add
fcomps
loope
inc
xor
mov
mov
pop
int3
pop
cmpsl
ljmp
xchg
stc
jp
add
sti
push
xchg
xchg
push
mov
loope
inc
xor
enter
jle
sbb
stc
mov
fcomi
mov
movsb
movsl
test
mov
adc
test
push
in
sbb
mov
pop
and
adc
jecxz
jmp
add
scas
mov
xor
test
bound
sbb
or
sbb
push
rolb
mov
fidivrs
adc
aaa
repz
cmp
arpl
or
je
mov
rcll
dec
stos
cmp
xlat
cli
sub
xchg
pop
or
sbb
insl
mov
addb
sahf
push
dec
mov
jnp
ret
xchg
mov
loopne
mov
inc
sub
int3
std
insl
es
cmp
cltd
mov
push
pop
add
and
pop
cwtl
ss
leave
stos
mov
cmpb
je
sub
mov
mov
roll
inc
mov
das
rcr
sbb
sbb
inc
ror
pop
aad
push
xchg
testw
test
mov
mov
jecxz
cs
cmpsl
adc
outsb
sub
xchg
mov
xchg
pop
jl
cmp
push
es
add
mov
xchg
cmp
add
sub
sahf
decb
bound
out
cld
mov
jle
or
push
sub
insl
in
xchg
fcoml
ss
push
push
daa
sbb
test
push
imul
orl
sub
out
fcomps
pop
jne
dec
subl
mov
inc
mov
pop
sti
pop
ret
lahf
mov
test
pop
inc
lods
jl
sub
or
repz
repnz
movsb
fldt
lret
mov
pop
mov
movsl
std
cwtl
iret
inc
insb
cmp
mov
punpcklwd
mov
mov
mov
lea
add
movsb
mov
bound
dec
test
pop
outsb
adc
adc
aad
dec
sbb
jg
and
mov
rorb
cld
or
cmc
and
cld
push
dec
faddl
mov
rcll
cs
dec
push
and
stos
test
das
insb
dec
test
mov
lret
push
sbb
lock
repnz
rcl
pop
xchg
xorl
insl
ficoml
mov
jb
pop
mov
mov
or
dec
pop
xor
int3
cmpsb
sub
lock
inc
lea
mov
pop
movsl
xchg
xchg
and
shlb
jnp
repnz
lret
clc
mov
inc
out
shl
push
je
leave
pusha
mov
popa
hlt
lods
pop
cmp
xor
out
in
insl
hlt
sbb
outsb
pop
and
fldt
mov
pop
and
mov
scas
scas
mov
fidivrl
icebp
dec
es
push
je
fldcw
pop
in
xor
fiaddl
xchg
and
sbb
rclb
das
lret
add
mov
pushf
add
xchg
sub
mov
push
mov
or
incb
pop
aam
movsl
pop
xchg
lea
dec
adc
cld
and
mov
push
mov
xor
scas
jno
pop
shlb
pop
pushf
mull
inc
jp
sub
stc
enter
dec
inc
jl
xor
jmp
es
mov
mov
ljmp
cmp
push
loope
sbb
adc
xchg
lahf
adc
jge
daa
xor
into
ss
or
frstor
mov
stos
lods
mov
test
inc
pusha
sub
popf
jno
aad
xchg
jnp
sbbl
fs
and
sub
or
xchg
xchg
and
mov
out
mov
pop
lds
mov
out
shrb
in
mov
inc
jb
cmpsl
sub
add
push
into
add
ja
mov
mov
sub
xchg
lret
pop
nop
push
mov
mov
imul
cmpsl
mov
jns
pop
push
ret
lret
add
cmp
dec
stos
jne
mov
nop
inc
mov
xlat
mov
fimull
scas
mov
mov
test
stc
test
mov
mov
xor
xor
xor
adc
jle
test
mov
cwtl
mov
lcall
mov
ljmp
lcall
dec
repz
lods
aam
xchg
cmpsl
outsb
int3
and
cmp
inc
lods
out
mov
out
xchg
jp
ret
mov
push
imul
add
cs
mov
lcall
repz
in
out
cmp
mov
cmpsl
jb
jne
inc
and
subb
cwtl
ljmp
dec
dec
push
das
mov
xchg
movsl
insb
fimuls
outsl
sbb
or
mov
sub
pop
ds
outsb
xor
mov
jp
sub
insl
popf
dec
dec
outsb
stc
popf
popa
push
clc
out
ret
pop
inc
addb
dec
jne
vaddsd
pop
adc
adc
icebp
pop
leave
out
aam
sub
int3
ja
loopne
aad
ret
popa
pop
aam
test
dec
add
xchg
or
cmp
adc
inc
fcompp
icebp
iret
outsw
push
inc
scas
daa
data16
ret
mov
hlt
lea
push
lahf
negb
ja
jnp
or
xchg
in
insb
push
pop
rcll
jmp
in
stos
cwtl
roll
inc
aas
lcall
fisubrs
and
adc
cmpsl
push
psubusb
mov
adc
ret
mov
fdivs
xor
inc
pop
lods
bound
stc
push
mov
pop
rcrl
jl
arpl
or
pusha
and
xchg
dec
pop
insl
fdiv
mov
orb
sti
sbb
lahf
sub
xchg
mov
das
stc
mov
iret
cwtl
cwtl
add
mov
sbb
lds
test
fs
jae
lods
popa
inc
pop
mov
pop
cwtl
ljmp
cmp
add
xchg
xchg
insl
insb
outsb
shrl
mov
mov
or
sbb
mov
cmp
xchg
xchg
ss
lods
mov
arpl
sub
fsubrs
mov
ret
jne
pushf
pop
test
cli
mov
mov
aam
mov
cmp
cmp
fidivl
stc
jp
pop
inc
mov
or
lea
cmp
in
xor
std
adc
stos
ljmp
hlt
rcr
movsb
fisttps
adc
or
stc
adcb
adc
adc
shlb
xor
cmp
dec
mov
sarl
mov
dec
lcall
sbb
and
sub
jmp
xchg
pop
ret
fisttpl
test
aad
sub
mov
xchg
xchg
mov
mov
pusha
in
pop
outsl
ljmp
mov
pop
cmc
arpl
test
jns
or
fstl
dec
jge
scas
mov
cli
repnz
add
cmpsl
fsts
cmp
sub
sbb
cmp
sbb
adc
mov
fnstcw
nop
shrb
mov
lret
pop
adc
pop
xchg
pop
out
sub
inc
ss
outsl
jno
jmp
lds
add
mov
aad
shll
mov
out
inc
iret
sbb
sbb
jo
mov
ret
pop
stos
in
push
fdivrp
and
scas
fmulp
aad
lret
stc
mov
inc
stos
jnp
xor
pop
pop
jl
orb
pop
pop
mov
dec
xchg
push
ret
into
push
jle
out
jl
or
or
scas
jge
call
fdivrs
mov
xor
cmp
jns
in
adc
pushf
jp
sti
lods
aam
and
and
and
mov
aaa
hlt
ret
add
aam
leave
adc
repnz
outsl
push
push
hlt
inc
cs
cld
adc
cmp
cmp
cmp
mov
and
sti
xor
in
daa
mov
add
jnp
jae
pusha
imul
nop
adc
xchg
sbbb
sbb
or
inc
inc
rorl
adc
daa
or
adc
insb
movsl
cmp
nop
enter
push
mov
sbb
cmp
cmc
xor
icebp
add
movsl
fcoml
push
shll
cmpsl
xchg
dec
out
subl
push
adc
adc
into
xchg
cmc
stc
mov
and
jl
inc
dec
pushl
sub
push
add
lret
mulb
xor
mov
cwtl
cltd
insl
sub
dec
dec
out
fadds
loope
daa
xor
jg
in
cltd
fidivs
shl
cmp
ret
aas
add
sbb
and
test
leave
clc
mov
arpl
sti
lods
int
cmp
pop
stos
and
into
out
add
insb
fnstcw
push
je
dec
xorl
rcr
repz
sbb
shll
shll
cmc
out
cmc
dec
loop
inc
xor
xor
mov
pop
repnz
fwait
sbbl
sbb
mov
jg
jnp
test
jmp
jg
testl
xchg
sbb
or
outsl
jb
scas
add
in
clc
jp
movsl
cmp
movl
iret
mov
pushl
insb
cmp
popa
mov
popf
es
pop
stos
inc
jb
push
inc
inc
xor
push
std
fcoml
fidivrl
orl
mov
fadds
sbb
mov
jnp
test
dec
fisttps
loopne
sub
push
add
ljmp
push
rorb
xchg
adc
fwait
jge
pop
movsl
xchg
xchg
ja
lods
fst
lods
lods
sub
or
je
lcall
mov
ja
pop
cmp
loop
add
mov
adcb
xlat
mov
int3
in
push
add
insb
jge
dec
dec
mov
mov
mov
adc
rcrb
or
cli
adc
jae
sbb
loop
subl
ja
in
xor
fwait
imul
in
jae
movb
popa
or
mov
lods
dec
loope
sub
lock
xor
mov
jle
cmc
sbb
in
xchg
lcall
hlt
arpl
xchg
mov
test
std
and
cmc
js
outsb
add
dec
dec
aam
mov
lea
mov
out
xchg
jns
lods
movsl
out
cmc
add
enter
in
dec
ljmp
pushf
enter
add
fs
std
aam
inc
js
push
or
je
push
and
fdivl
pop
cmp
fldenv
mov
lods
jo
clc
int
and
stos
hlt
stos
sub
lea
test
push
jge
outsl
stos
push
mov
xor
add
and
pop
mov
mov
mov
ret
xor
inc
pop
sub
mov
add
pop
lea
es
aad
pop
mov
es
and
pop
imul
ret
jge
push
xor
mov
pop
jbe
repz
testl
xchg
pop
imul
xor
test
push
cltd
inc
ja
test
shll
scas
push
sub
fadd
sub
dec
test
xchg
cmp
mov
and
mov
xlat
jae
sbb
mov
xchg
sbb
icebp
fcom
in
test
arpl
imul
push
pop
jp
es
jb
divb
popf
push
mov
aam
aaa
or
push
inc
pushf
push
clc
pushf
cmc
dec
aaa
jl
leave
add
xor
shrl
push
adc
and
sbb
pop
xchg
mov
lea
scas
inc
xchg
mov
std
out
dec
roll
cmpsl
cmovns
notl
idivb
pop
inc
and
push
sbbb
rcll
cli
cmpsb
pop
call
fcoml
mov
shll
xchg
mov
int3
lcall
cmp
out
mov
jmp
fidivrl
aad
ficoml
jg
lods
lret
xlat
jp
ja
es
scas
mov
dec
adc
data16
lds
or
sti
xchg
sbbb
or
mov
mov
cwtl
mov
into
fists
mov
idivb
inc
lods
stos
bound
arpl
mov
pop
sahf
fsubl
test
inc
jae
pop
mov
roll
jae
jnp
loope
fcmovnbe
test
add
or
je
imul
fistpll
pop
mov
adc
in
aam
cmp
and
mov
sub
inc
mov
cli
or
mov
in
icebp
fiaddl
negb
rolb
call
jne
xor
cwtl
pop
inc
xor
dec
mov
lds
mov
or
aam
roll
hlt
aam
jmp
mov
sbb
sbb
mov
add
fbld
pcmpgtw
adc
sbb
cmp
inc
loope
sbb
neg
dec
imul
lret
pop
inc
int3
or
xchg
xor
ret
jl
sarb
psubusb
pushf
jge
jns
sbb
mov
mov
les
aas
outsl
dec
cmp
in
stos
xchg
mov
notb
jns
jne
mov
dec
cmp
jp
push
outsb
jp
int
testl
cli
cmpsb
pop
adc
jle
clc
and
out
push
rcl
ljmp
xchg
mov
adc
jae
pushf
popa
mov
stos
dec
pushf
or
fnstsw
sub
sbb
mov
stos
xor
add
call
dec
push
mov
push
imul
shll
test
xchg
push
mov
adc
hlt
aam
push
push
scas
mov
sti
xor
cmp
iret
lret
or
outsb
xor
cmc
push
push
jl
mov
xchg
push
lcall
iret
stc
cmpsb
and
push
inc
shr
dec
out
inc
adc
adc
enter
sub
xchg
pop
push
and
jmp
in
int
sub
pop
jg
cmpsb
call
in
add
jecxz
shrl
jle
ret
clc
pop
or
cmp
mov
cmp
inc
outsb
mov
xchg
dec
fwait
push
leave
pop
pop
inc
xor
cmp
ret
jo
outsb
or
loopne
ds
add
jmp
lahf
sahf
inc
out
pop
popa
jae
gs
std
sub
push
adc
loope
inc
pusha
inc
shl
sub
jbe
add
mov
add
and
xorb
inc
jmp
popf
inc
or
pop
pop
sub
outsb
ret
rolb
dec
je
inc
test
repz
hlt
pop
les
or
call
mov
inc
mov
fbstp
test
insl
sbb
loopne
jp
or
scas
pop
repnz
push
enter
dec
shll
mov
mov
pop
ja
adc
dec
ret
int
push
add
xchg
fwait
xor
nop
ret
fnstsw
sbb
lods
stc
push
ret
adc
insl
mov
dec
aaa
mov
sub
add
add
js
jns
add
pop
sub
cmp
jl
push
mov
mov
cld
repnz
test
lahf
fldt
sbbl
fs
cmp
les
mov
jne
push
imul
sub
jp
xchg
repnz
insb
pushf
push
leave
sbb
sbbl
sub
adc
sub
and
dec
pusha
test
sub
sub
mov
jb
xor
fnstcw
xlat
xor
pop
sbbl
in
xchg
mov
mov
mov
pop
lret
mov
mov
gs
ret
movl
jle
xchg
sub
add
not
add
and
pop
loope
mov
add
das
mov
ds
cmpl
xchg
mov
xor
xor
in
xor
mov
daa
mov
mov
insb
shrb
inc
ss
adc
addr16
jle
cwtl
pushf
cs
adc
int
test
fildll
loope
and
into
adc
pusha
cltd
push
jmp
push
dec
das
sbb
push
xor
xchg
mov
and
sub
cltd
ljmp
or
fiaddl
lods
jne
std
ret
movsl
sbb
jge
pop
clc
sub
xchg
pop
xchg
subl
add
inc
inc
hlt
iret
cmc
aas
mov
and
shr
push
push
ret
out
es
sbb
outsb
sub
cld
push
movsb
xor
lds
ficomps
testb
xlat
dec
mov
fsubp
dec
into
jle
dec
mov
jmp
leave
loopne
mov
test
jmp
mov
push
aas
sar
fnstenv
lock
mov
xor
test
test
add
lcall
inc
adc
or
xchg
push
or
pop
test
lret
mov
xchg
jp
idivl
pushf
mov
mov
aam
add
xchg
and
dec
inc
imul
mov
loope
out
dec
push
add
xchg
pop
es
pop
sub
sub
mov
cld
dec
xchg
add
mov
daa
test
adc
dec
mov
mov
insb
test
mov
inc
insb
nop
add
sbb
and
pop
push
test
dec
repnz
out
out
cmp
iret
and
sub
fisttpl
testb
test
jg
push
add
rorb
imul
pusha
cwtl
fcoml
mov
or
pushf
out
rcll
mov
mov
jecxz
movsl
and
int
call
mov
fcoml
lds
sub
mov
cltd
inc
sbb
mov
or
nop
mov
xchg
xorl
or
sub
stos
lcall
stos
add
add
test
xchg
jl
add
jb
push
addl
xchg
mov
je
test
sbb
jnp
and
xor
out
popa
push
cmp
push
dec
pop
mov
test
mov
add
dec
lods
and
frstpm(287
mov
js
push
sbb
adc
in
pushf
mov
aas
adc
mov
xchg
sub
or
ret
out
lods
push
stos
gs
iret
popf
fsin
sbb
rorb
push
adcl
jb
sbb
das
jmp
je
push
jae
in
fbld
pop
push
adc
add
push
filds
lea
or
xor
pop
xchg
js
push
xchg
jb
cwtl
imul
pop
popa
mov
adc
outsl
pop
mov
insb
outsl
add
sbbl
adc
adcl
and
icebp
inc
cs
and
jle
inc
lds
das
xchg
sbb
mov
addr16
test
rcl
ret
push
mov
aad
lea
dec
les
pop
fiadds
jbe
scas
int
mov
outsb
inc
test
mov
pop
in
ret
addl
scas
jmp
movsb
cmp
je
push
or
loopne
ljmp
sbb
aas
mov
into
cmpb
jle
add
nop
leave
or
lods
adc
std
lcall
ret
es
stc
dec
sbb
xchg
call
xorb
jns
xchg
jmp
stos
mov
inc
test
xchg
mov
xchg
and
inc
shrl
and
push
mov
enter
xchg
jno
hlt
push
arpl
xorb
pop
mov
cli
pop
xchg
push
clc
pop
lods
insl
xor
ret
scas
add
mov
mov
je
daa
cmpsl
xchg
notl
ret
mov
lea
popf
push
jns
xor
mov
push
cltd
out
and
jno
les
jb
ror
bnd
loop
shr
sahf
or
es
pop
out
nop
std
inc
xchg
fbstp
daa
xchg
dec
inc
icebp
dec
test
popf
jno
jne
das
imul
lret
fs
imul
jb
outsb
add
ss
nop
xchg
aas
cmp
push
int
iret
testb
push
mov
std
and
movsb
in
rclb
popf
push
jo
out
or
mov
push
fcmovnu
push
rclb
push
imul
dec
xor
add
xchg
sbb
stos
inc
mov
xchg
js
into
push
fstps
push
cmpsl
das
pop
mov
xchg
dec
xchg
fs
in
add
mov
out
inc
xchg
push
stos
push
cwtl
aas
push
scas
jl
and
test
fstpt
mov
sbb
out
cwtl
lret
inc
aam
adc
pop
aaa
dec
xor
mov
xor
outsl
loopne
ss
cmpb
stos
call
xor
bound
sub
xchg
pop
pop
andb
and
sub
addr16
jecxz
lods
aaa
in
lds
cmp
outsb
jb
out
or
popl
hlt
ret
push
and
fstpt
jo
push
ja
cmp
and
shll
adc
adc
lea
imulb
jns
js
xchg
and
mov
data16
shr
outsb
dec
mov
sbb
scas
dec
lar
sbb
daa
leave
inc
lcall
xor
mov
sbb
js
and
in
ret
out
aad
fstpt
xchg
mov
ss
arpl
repnz
vpaddsb
int3
lcall
insb
sub
jb
xor
add
push
shl
subl
jg
sbbb
push
mov
jno
sub
icebp
mov
popa
setnp
mov
or
data16
or
out
mov
fwait
jecxz
stos
cmp
sbb
aad
mov
xlat
std
inc
and
call
out
jl
mov
stos
inc
cmp
sub
ds
xor
xor
in
pop
mov
test
dec
adc
es
orl
mov
push
cmp
hlt
pop
dec
aad
cltd
lock
push
jb
or
lods
dec
cmp
imul
fcompl
icebp
push
push
mov
gs
nop
mov
shll
or
inc
enter
dec
int
jg
jo
adc
pop
jmp
pusha
test
ss
mov
adc
into
bound
mov
jno
cmp
xor
xchg
push
test
push
scas
cmp
inc
jbe
out
jno
dec
scas
jbe
pop
data16
lods
mov
adc
outsb
adc
test
rorb
or
cmp
and
ds
inc
sub
pop
sbb
sbb
cmp
fisubs
pop
push
xchg
add
gs
std
mov
fisubrl
xchg
and
xchg
xchg
mov
sub
ret
jb
imul
hlt
fbstp
push
nop
into
dec
loopne
negb
test
sbb
jne
inc
repz
stos
test
mov
aas
add
inc
cmpsl
call
mov
xor
nop
sahf
in
mov
enter
dec
or
pop
push
cmp
test
adc
enter
pop
in
mov
mov
pushl
push
mov
incb
push
sub
cwtl
cmp
mov
out
add
out
sub
in
and
lret
inc
daa
into
jmp
mov
stos
les
mov
cld
loopne
lock
adc
cltd
notl
adc
jo
jl
dec
lods
mov
rcrl
and
aas
and
call
cmp
dec
push
outsb
shll
enter
adc
jmp
mov
pop
dec
lcall
insl
dec
inc
jne
jne
push
int
xchg
imul
pusha
xor
nop
push
das
push
out
mov
inc
fmuls
fsts
hlt
int
pop
js
loopne
mov
roll
xchg
jle
xorb
pop
jp
ja
mov
jne
pop
jge
sbb
push
scas
cmp
xchg
scas
out
cmpsl
sub
jne
lds
cs
pusha
in
mov
mov
inc
jl
outsb
test
dec
js
add
movsb
ret
sahf
aaa
fidivs
and
test
pop
sub
je
adc
dec
cs
mov
xchg
jl
shlb
xchg
jo
out
idivl
mov
popf
add
mov
int
mov
das
xor
pop
add
or
ss
loope
ja
xorb
cmp
mov
popa
mov
mov
add
add
and
jp
fcomps
xchg
mov
out
xchg
or
sbbl
sub
xor
mov
dec
shl
fdivr
cmp
jle
mov
push
loop
mov
mov
sbb
clc
dec
push
movsl
ret
ret
xchg
aas
pop
xor
xchg
test
mov
inc
xchg
add
out
inc
fistl
mov
push
test
loopne
shll
std
ret
mov
scas
push
sub
out
pop
fstl
fwait
loop
ja
pusha
xor
movsb
pmaxub
inc
xchg
jl
xor
sarl
push
shlb
pop
fsts
xchg
cmp
and
stos
pop
add
fistps
fs
jle
jp
add
addl
sti
in
dec
lods
push
xorl
fnsave
ret
mov
cmp
bound
adc
testl
out
dec
pop
outsb
pop
test
pop
mov
mov
cmp
in
sti
dec
xchg
adc
incl
mov
inc
jne
lods
cmp
adc
sub
push
fisubrl
mov
lret
dec
xor
cmp
jnp
in
fnstenv
and
outsl
int
js
pusha
mov
xchg
cmp
push
cmc
rcll
jge
popa
mov
adc
pop
push
fwait
pop
jmp
adc
jno
iret
sbb
orl
xor
or
ljmp
loopne
inc
sbbb
jle,pn
push
push
or
sbb
lods
imul
ja
push
hlt
sub
orb
hlt
adc
loopne
mov
sub
lahf
jl
imul
or
pop
in
sub
movsl
and
push
mov
dec
cmc
fwait
inc
pop
sub
shll
xchg
adc
les
mov
call
mov
lret
leave
cld
push
push
nop
mov
cmp
mov
pop
fstpl
adc
or
sbb
test
xchg
cs
enter
sbb
sub
mov
outsl
cmpsl
arpl
sub
inc
lods
cmp
loop
stos
sahf
adc
mov
dec
push
xchg
add
mov
pop
jecxz
push
out
nop
cwtl
or
popa
sub
or
mov
pop
pop
xchg
clc
mov
pop
pop
ret
xchg
jno
movsb
pop
test
dec
mov
int3
fimuls
stos
outsl
and
imul
test
pmulhw
fs
push
jmp
mov
jecxz
mov
dec
in
enter
out
jle
orb
mov
rolb
dec
mov
fldt
push
daa
fidivrs
adc
pop
outsl
push
or
add
push
stc
jb
je
inc
xor
cwtl
mov
mov
fcomip
clc
imul
push
and
lods
ret
loope
jae
xlat
loope
push
sbb
mov
sbb
xchg
push
xchg
pop
int3
popf
shll
lods
cmp
shrb
adc
xchg
out
sbb
push
cmp
rcrl
arpl
sarl
fs
in
insl
fimull
insl
xorl
and
inc
sub
iret
sub
je
sub
jnp
dec
iret
xchg
mov
jle
outsb
enter
pop
out
addr16
push
fstpt
int
or
gs
jl
fcomps
ret
inc
fsts
lds
cmp
inc
xor
inc
push
push
loop
aam
int3
jne
out
jne
pop
mov
add
imul
inc
xchg
pop
sbb
call
mov
mov
jg
jmp
adc
ds
mov
dec
dec
out
ss
fistl
dec
lods
lock
pop
inc
dec
or
addr16
cwtl
sub
lods
dec
cmp
adc
mov
cmc
push
loop
pop
push
ret
pushf
std
sbb
inc
push
cmpb
xchg
mov
jl
push
and
ja
into
ficomps
in
cmp
push
in
sub
in
in
xlat
inc
test
arpl
leave
jmp
dec
dec
lods
mov
in
cmc
out
and
loop
xor
iret
sub
and
in
adc
lcall
xchg
cs
cmp
and
fisubrl
pop
popf
cmp
inc
dec
jae
inc
jnp
xchg
xchg
jmp
jmp
lock
inc
xor
fimull
add
sub
push
mov
xchg
push
addr16
cmp
mov
in
push
cmp
jns
ss
push
jge
call
xchg
into
pop
xchg
popl
and
outsb
into
sbb
adc
dec
add
mov
or
sbb
and
fsts
push
add
imul
fisttps
popa
js
arpl
lcall
fidivs
sahf
jge
xor
stos
adc
cmpb
repnz
aam
sub
pop
fsubr
loop
das
jnp
inc
jmp
and
cmp
xor
clc
idiv
mov
ss
mov
jle
dec
imulb
adc
and
lahf
dec
test
fidivrl
movl
push
push
push
mov
sbb
lea
jecxz
ret
pop
inc
ret
cmp
sbb
mov
dec
push
in
inc
aaa
mov
lahf
icebp
rorl
jmp
int
xchg
cwtl
sub
xorl
mov
out
roll
or
mov
xor
and
pop
push
pop
inc
sub
idivb
test
jnp
das
mov
aam
idivl
xor
hlt
testb
or
add
sub
or
sub
addr16
stos
mov
insb
mov
movsb
push
xchg
push
cmpsb
das
xchg
pop
jbe
dec
or
popf
sub
out
mov
addr16
xchg
cltd
dec
cmp
out
cmpsl
lods
mov
jne
js
adc
push
loope
adc
xor
leave
and
push
mov
and
dec
pop
pop
loope
jns
jbe
int
andl
ret
mov
xrelease
loope
imul
icebp
lock
cli
les
fists
or
arpl
xor
and
cmp
jmp
adc
mov
std
ficoml
and
sti
sarl
xlat
push
and
sahf
pushf
mov
nop
jne,pn
test
hlt
sbb
pop
js
jecxz
xchg
filds
cmpl
shl
or
adc
dec
gs
pushf
sbb
push
mov
ja
inc
dec
mov
stos
dec
mov
out
sub
mov
popf
std
loope
or
mov
rcrb
or
inc
testb
imul
leave
sahf
faddl
jne
mov
repz
movsl
mov
int3
fwait
ss
shrd
pop
and
stc
mov
scas
or
xchg
pop
jmp
in
xor
negl
das
inc
stos
mov
std
or
or
adc
pop
pusha
pop
add
rorb
fsqrt
leave
hlt
cmp
fistpl
jbe
add
xlat
push
jns
in
outsl
jbe
or
jge
mov
cmp
loopne
mov
sub
jnp
rorb
pop
fnsave
cmp
bnd
push
es
clc
out
push
fcmovb
push
cs
cmp
inc
or
xchg
shll
pushf
xchg
leave
pop
call
lcall
loop
nop
fimull
movsb
in
scas
jnp
mov
add
aad
cmc
adc
arpl
inc
and
sub
mov
lahf
xor
inc
push
mov
add
pop
daa
sbb
outsb
dec
push
jo
icebp
pop
xor
aam
mov
xchg
jge
shl
mov
jbe
call
mov
ret
dec
mov
xchg
adc
dec
adc
insb
int
pusha
push
test
or
and
and
ja
xchg
subb
js
movsb
mov
mov
sahf
and
jmp
sub
stc
xor
cmp
push
add
cwtl
add
pop
xchg
push
fisttpl
mov
mull
popa
hlt
lcall
pop
shlb
or
stc
stc
adcb
add
cmp
xor
rcrl
xor
xchg
dec
loopne
pop
popf
pusha
xchg
and
repz
int
sbb
lret
mov
leave
sub
sarl
push
adc
adc
gs
sub
mov
aam
sti
test
dec
inc
cmpsl
push
add
insb
in
jnp
add
push
mov
xchg
jge
int3
jmp
xchg
int
mov
mov
in
test
cmp
or
xor
fisttpl
jne
mov
or
roll
lahf
popa
imul
pop
test
push
push
notl
add
inc
mov
xchg
lods
push
mov
stc
add
jg
les
adc
push
test
adc
dec
test
or
arpl
xor
mov
mov
imul
adcb
clc
jle
adc
test
pop
je
xor
dec
inc
sub
dec
clc
insl
fadds
xchg
sbb
mov
hlt
popf
xor
cmpsb
imul
jno
into
insl
in
imul
test
jecxz
inc
sub
push
xor
shlb
adc
shrl
inc
in
roll
fxch
int
jg
test
lret
data16
std
jp
rclb
fdivrs
xor
inc
add
jmp
pushf
jmp
sub
insl
mov
mov
push
fucomp
pop
pop
call
adc
dec
jecxz
mov
jecxz
jp
or
sub
push
dec
sub
xor
addr16
das
push
fcompl
mov
add
cwtl
stc
cld
scas
pop
popf
pushf
ja
movsb
xchg
rorl
pop
mov
mov
lds
add
mov
out
jae
ret
mov
cmp
inc
sbb
pop
adc
ss
add
jl
shll
push
mov
ficomps
call
cli
clc
int3
adc
mov
jmp
cmp
lea
cs
cmp
shr
xchg
pop
push
int3
and
xchg
out
xor
lret
imul
cmp
dec
cmp
lret
in
jae
sarl
in
aam
int
add
jae
and
or
jmp
push
add
or
pop
negb
xchg
push
les
gs
icebp
pop
andl
push
insb
jae
pushf
pop
cmpsl
rcrb
or
lret
int3
arpl
fldl2t
adc
movsl
mov
mov
or
mov
jns
arpl
push
xchg
add
dec
jae
aaa
xchg
adc
push
xchg
pop
add
sbb
gs
push
arpl
xchg
and
jp
and
mov
ljmp
cmp
je
nop
ljmp
loopne
cmp
rol
sbb
flds
jb
pop
mov
jge
add
xor
push
cmpsl
rclb
and
cmpl
cmp
cltd
xchg
cmp
xchg
and
fxch
mov
mov
xor
add
scas
pop
adc
nop
sti
jbe
xchg
jnp
icebp
and
adcl
test
fisttpll
lret
push
jl
addr16
cmp
aam
pop
in
decb
pop
ds
icebp
cmc
stos
cmp
subb
xchg
je
or
pop
jno
out
mov
js
mov
mov
cld
in
sahf
cs
inc
jne
stos
and
mov
sub
into
xor
jbe
outsl
jo
ss
sub
ret
xlat
int3
popl
ss
mov
fsubl
loopne
mov
imul
leave
mov
call
inc
and
fdivr
jp
mov
mov
cltd
daa
je
and
sbb
imull
sbb
je
shrl
pop
daa
xorb
xchg
lods
ret
loopne
les
fstpt
sbb
into
addr16
pop
mov
ljmp
insl
adc
sti
mov
stc
push
mul
ret
fldt
dec
fistps
hlt
cmp
mov
insl
bound
jp
leave
cmc
jge
mov
cld
mov
mov
xchg
in
rcr
daa
jmp
out
mov
jbe
mov
pop
xor
and
push
mov
pop
xor
cmp
push
mov
fidivrs
lcall
stc
lahf
xchg
call
pop
jnp
jbe
lock
fsubrl
in
aam
cmp
adc
xor
insl
xlat
adc
ss
repnz
into
push
sbb
mov
rorl
cld
cmp
add
jnp
push
notl
frstor
lret
push
ret
test
cmp
adc
push
insb
mov
hlt
xlat
lods
xor
add
lods
mov
loopne
cmp
mov
sbb
fwait
lea
daa
scas
mov
test
adcb
push
pop
pop
pop
ret
idiv
repnz
icebp
bound
lea
stos
arpl
fcomi
mov
mov
hlt
jb
arpl
stc
in
sub
sub
fists
jno
pop
stc
mov
loope
jno
cmp
ret
push
push
hlt
inc
fimull
push
loop
cmpsl
in
loopne
push
lret
dec
mov
jl
sti
pop
jge
out
adc
cmp
pushf
ror
ret
xchg
adc
lods
test
inc
int3
cld
lods
xchg
nop
sub
lods
or
imul
nop
xchg
imul
jmp
lds
movsb
mov
sbb
cwtl
and
cli
es
out
je
and
push
cmp
call
les
daa
dec
add
test
in
insl
xchg
sbb
jo
fscale
mov
dec
adc
hlt
push
iret
jge
divb
mov
or
fistpll
cmp
dec
xchg
mov
fcmovnbe
lods
jge
lods
fisubl
xchg
test
fiaddl
hlt
iret
inc
and
pushf
data16
int
mov
cmp
divb
push
xor
jp
lods
adcb
xchg
jp
jne
jecxz
push
imul
dec
adc
sub
sub
imul
loop,pn
bound
push
xor
sti
imul
xor
sub
dec
push
fcomps
xchg
fisubs
inc
fildll
cld
dec
and
mov
sub
adc
push
lock
push
jl
out
aam
dec
divb
adc
out
lahf
insb
into
shlb
mov
dec
imul
lret
ds
sti
and
xchg
pop
sbb
addb
cmp
inc
sbb
xchg
mov
sti
enter
sbb
push
shrb
lock
add
mov
push
adc
aad
mov
sub
jg
filds
rclb
test
icebp
pop
stos
lock
inc
sub
call
aas
add
fisttpl
pop
pop
outsl
lahf
out
adc
and
cmp
fstpl
fstp
psrld
out
jns
add
add
loopne
sarb
fcos
nop
movsb
mov
test
leave
shrb
cmpsb
mov
fstl
cld
mov
mov
push
neg
push
dec
lods
mov
leave
das
jae
add
sub
pop
ror
mov
out
xlat
movsl
test
in
xchg
out
fcoms
shr
or
or
adc
mov
sub
pop
lods
clc
fwait
sub
cmp
gs
sub
mov
inc
test
data16
movl
insb
add
jle
mov
sbb
mov
ret
lcall
pushf
mov
pusha
jg
lcall
pop
das
inc
nop
push
inc
mov
in
in
out
sbb
or
stos
movsl
add
mov
cmp
rcl
cmc
xchg
lea
addr16
mov
lods
les
loop
outsb
jnp
aad
mov
fadd
daa
into
imul
cmp
jne
xor
jge
push
push
scas
mov
aad
push
inc
sub
jmp
movsl
repnz
mov
sahf
adc
lcall
inc
mov
insl
outsb
ret
mov
add
std
and
je
add
xor
mov
adcl
test
pusha
test
mov
stos
adc
ficompl
lods
sbb
sub
xor
cld
js
jle,pt
ljmp
insl
cmp
pusha
and
lahf
mov
push
in
pop
cs
lock
fmul
push
sbb
pop
push
mov
into
adc
lret
hlt
pop
push
add
divl
cltd
imul
pop
adc
push
mov
cltd
push
jecxz
inc
fcomip
or
cmp
sub
aas
mov
lods
cmp
fsubs
jae
jo
mov
lock
mov
jne
adc
push
adc
sbb
pop
sub
mov
shlb
jmp
pop
push
fldcw
ljmp
aaa
pop
shlb
mov
xchg
loop
pusha
sbb
sub
cmp
cmpsb
lret
jmp
add
dec
fsubrl
aam
ficompl
fsubs
jg
addr16
in
cmp
les
push
xor
xchg
jno
push
incb
pop
cli
adc
pop
test
sahf
mov
shlb
mov
add
pop
jge
rcll
ss
add
add
dec
pop
ret
cmpsl
pop
outsl
aam
pop
imul
in
sbb
cmp
sahf
sbbb
push
lret
mov
dec
aas
xor
sub
sbb
or
jo
and
pop
addr16
adc
test
test
je
sbb
notl
ret
ja
mov
repz
in
sbb
cmp
or
pop
andb
and
mov
push
movsb
fnstenv
int
ficoms
popa
test
and
mov
push
pop
rolb
outsb
xchg
hlt
pop
loopne
fildll
cmpsb
setp
aad
mov
sbb
mov
fsubrs
repz
xor
stos
dec
jl
daa
das
push
xor
pop
mov
scas
sahf
ds
xor
dec
aam
push
fisubl
push
pushf
hlt
pop
jp
fwait
je
jns
mov
movsl
mov
daa
mov
out
jge
xlat
jno
pop
push
aas
sub
mov
inc
xchg
pop
lock
call
jns
in
test
in
imul
xchg
in
xchg
mov
imul
cmp
cmpsb
or
push
icebp
std
ret
cwtl
scas
test
add
dec
xor
ss
aad
testl
jmp
push
xchg
and
pop
push
loopne
cli
call
aaa
call
xor
fcmovb
imull
divb
cmpsb
sub
lahf
sub
mov
dec
loopne
test
and
rcrb
fnstsw
es
pushf
push
cmpsb
hlt
imul
shl
aad
mov
cli
lock
and
cmc
in
jae
enter
sbb
pop
hlt
ret
sbb
int3
repz
pop
ror
jae
cmp
outsl
mov
fldl
fs
jns
and
aaa
lea
inc
orl
ret
lahf
jecxz
add
mov
add
and
or
adc
push
fisttpl
jno
xor
mov
loope
inc
es
and
fldcw
add
dec
hlt
lods
loopne
sub
nop
jl
das
pop
out
lds
jns
push
or
or
insb
loope
cli
test
in
cmp
rcrl
out
jbe
mov
addr16
sbb
roll
xchg
test
inc
jns
sbb
dec
sub
aas
addr16
mov
pushf
out
sub
clc
repz
out
sti
jo
xchg
ljmp
stc
mov
xchg
addr16
stos
aaa
mov
lods
adc
pop
or
fs
xor
je
and
jns
sbb
xchg
push
pop
pushf
sub
das
bound
sbb
cmp
sbb
or
adc
jmp
pop
adc
inc
stos
push
push
mov
in
rol
ja
cwtl
pop
insl
inc
and
xchg
push
icebp
add
loopne
scas
aad
and
ficompl
decb
mov
test
out
ret
sarb
sub
lahf
push
insl
out
daa
ljmp
cli
cli
adc
xchg
mov
mov
imul
dec
and
dec
lret
mov
imul
mull
out
fcoms
sbb
sahf
inc
mov
je
in
sub
dec
sbb
xlat
sbb
jecxz
pop
fadd
popf
aaa
stc
add
lock
pop
sbb
lea
iret
jb
lds
sbb
fisubrl
jg
pushf
ds
xchg
mov
stos
dec
sbb
fs
xchg
inc
shr
ljmp
jp
pop
js
mov
cmp
andb
jae
lods
test
cmc
cmpsl
mov
cmpsl
inc
daa
lahf
and
cmp
pop
adc
xchg
dec
sbb
push
pop
push
movsb
mov
jle
lock
adc
fwait
cmp
repz
and
xchg
pop
sbb
orb
xchg
cwtl
loopne
xchg
das
aaa
sti
loope
mov
add
xor
pop
and
out
fistpll
mov
fnsave
shrb
test
cli
push
fdiv
out
lods
cli
addr16
test
nop
jecxz
test
fwait
divl
outsb
xchg
pop
repz
xchg
lock
lock
inc
mov
data16
das
inc
es
push
mov
stos
jns
cs
mov
in
aam
mov
das
and
popl
sbb
xchg
rol
ljmp
jae
popf
lea
pusha
leave
mov
call
sub
mov
add
xor
push
pop
lret
je
jg
mov
jl
cmp
test
xchg
cmp
jge
outsb
popf
cmp
push
sbb
call
mov
out
rcr
cmp
insl
adc
add
mov
lcall
push
inc
cli
mov
loop
hlt
sub
fwait
pushl
xchg
sarb
mov
inc
xor
cmp
outsl
and
in
daa
jl
fnstenv
shlb
xchg
push
leave
inc
cld
mov
fildl
cmc
pop
rorb
push
cwtl
pop
lds
fidivrl
adc
repnz
fidivrs
mov
popa
in
xlat
mov
mov
mov
jg
adc
xchg
cmp
nop
in
jne
repz
jns
aaa
xlat
mov
inc
pop
push
stc
aas
sbb
int3
sub
cld
jno
mov
push
adc
in
mov
mov
jae
fistpll
cmp
cmp
pop
clc
out
hlt
lcall
adc
pushf
xchg
js
mov
adc
shrl
fxam
push
inc
xchg
lods
popf
inc
mov
movsb
pushf
mov
lret
or
push
mov
icebp
stc
lods
jnp
or
push
inc
pusha
test
dec
in
xlat
pop
mov
xor
push
repz
and
repz
dec
sbb
loop
adc
fsubr
add
dec
dec
pusha
mov
clc
cmpsb
and
iret
mov
cs
dec
cld
ficoml
mov
call
inc
repnz
or
sbb
dec
jbe
add
pop
pop
or
jo
pop
sub
call
mov
mov
mov
pop
daa
jae
cmc
and
stos
aaa
push
xor
loopne
cmpsb
in
dec
xor
lds
aas
insb
pop
sbb
shll
xchg
mov
jmp
xchg
loop
mov
popf
outsl
andl
add
inc
inc
daa
adc
test
mov
scas
jle
std
adc
xor
pushf
popf
dec
imul
push
dec
mov
sub
mov
sbbl
mov
jmp
scas
xchg
mov
xor
jb
add
out
in
insb
and
out
in
pop
dec
xorl
jg
and
mov
mov
pop
jne
outsb
jp
pusha
outsl
movsl
ficoms
add
int3
stc
into
sub
dec
jmp
dec
adc
jae
cmp
push
iret
sbb
jnp
fsubrs
call
mov
or
lret
jmp
sbb
mov
sub
repnz
and
sub
xlat
xchg
sbb
mov
dec
mov
sbb
iret
iret
push
shll
pop
jg
mov
and
bound
loopne
into
mov
jb
pavgw
dec
and
mov
and
pop
xchg
jbe
xchg
add
nop
insl
cmpsb
jb
push
jl
push
mov
aad
pop
jae
adc
xchg
mov
mov
int3
out
ja
jo
enter
in
cwtl
into
mov
int3
sub
test
aas
ljmp
inc
clc
mov
pop
scas
shrb
ret
fidivs
pop
adc
and
mov
xor
xor
mov
mov
jge
lcall
jo
psrad
inc
imul
or
outsl
lahf
jecxz
repz
popa
pushf
clc
cmpb
jecxz
fnsave
frstor
inc
jbe
fstpl
lock
subl
bswap
mov
inc
or
arpl
loopne
inc
cmp
in
mov
sub
jnp
sbb
or
jne
jmp
jbe
jp
dec
out
movsl
leave
or
add
test
push
ret
pushl
sub
insb
pop
out
and
mov
sahf
pop
push
add
push
les
je
xor
jne
jge
aas
push
fdivrl
pop
sbb
insl
test
mov
cmp
lcall
pop
ja
cltd
jne
push
mov
ret
jmp
and
dec
fstps
aam
xor
cwtl
mov
xchg
adc
push
scas
xor
and
shr
rclb
scas
push
pop
stos
push
pop
test
sub
out
cld
mov
iret
aaa
push
pushf
in
xchg
rcrl
xchg
mov
xchg
xchg
pop
xor
xchg
gs
inc
and
mov
sahf
mov
xchg
cmp
jle
lock
jg
fstp
pop
xchg
ds
fcomp
roll
cmp
into
ss
aas
sti
test
cmc
pop
into
cli
fwait
nop
jb
ror
rorl
adc
cltd
cmpsl
test
lret
dec
dec
add
and
loop
cli
jno
loope
popa
pop
dec
loope
jl
or
sbb
neg
enter
clc
jl
cmp
ja
sbb
inc
mov
dec
repnz
call
popf
pop
adc
dec
inc
sub
push
dec
xchg
ljmp
ss
hlt
jl
cmp
scas
sbb
ret
and
imul
subb
mov
faddl
xchg
sti
dec
icebp
leave
aaa
and
sub
filds
inc
outsl
fs
inc
add
fnsave
mov
aas
jmp
int
lods
lahf
pop
scas
hlt
es
and
andl
cmp
call
adc
loope
cmp
outsb
sub
sub
inc
movsb
fsubrl
mov
fnstcw
xchg
jge
mov
and
fbstp
xor
dec
out
lret
enter
subb
and
rorb
jmp
in
je
fs
dec
arpl
push
xor
pop
fsubl
xchg
mov
popf
bound
ret
js
bound
fprem1
cli
adc
int3
and
aam
xchg
add
mov
ljmp
pop
lods
nop
inc
std
mov
pop
add
dec
adc
jne
cltd
or
ror
in
cmp
cli
ss
cmp
icebp
pop
jbe
inc
cmpb
dec
and
dec
push
mov
sahf
jnp
outsb
xor
cmpsl
sub
xchg
rcrl
test
push
or
hlt
sub
sub
sub
pop
cli
inc
adc
inc
pushf
fldcw
xor
aas
push
bound
gs
dec
mov
sbb
adc
pop
xchg
inc
pusha
test
cmovp
movsb
or
ret
shll
jb
ja
cmp
popa
es
or
into
sbb
adc
push
cwtl
out
popf
pop
mov
mov
cmc
push
sub
cmp
pop
ret
call
pushf
adc
xchg
inc
dec
sti
pushf
test
sbb
sub
dec
dec
push
xchg
jl
jae
sti
push
mov
mov
lock
es
inc
pop
fisubl
rep
xchg
add
rolb
dec
adc
dec
fists
cld
jns
lds
pop
ret
adc
xchg
addr16
or
or
add
js
sbb
enter
out
les
int3
mov
dec
dec
or
outsb
test
push
pop
mov
dec
mov
icebp
xor
jae
inc
ja
test
push
sbb
dec
jge
mov
or
cmp
mov
jecxz
xorb
div
arpl
lods
icebp
sub
xor
mov
stos
repz
dec
cld
sub
cli
add
pop
push
nop
jge
pushf
ror
pop
add
dec
xor
dec
je
scas
rdtsc
xor
mov
push
fcoml
push
xchg
test
pop
in
lods
mov
rcr
xor
jg
xchg
cs
nop
push
lret
cmp
xor
sub
loopne
out
adc
push
bswap
lret
dec
pop
mov
lcall
add
push
ss
mov
ficompl
lods
movsb
pop
mov
fwait
sbb
jmp
xor
inc
fsubp
mov
cmp
pop
adc
inc
pop
add
mov
pop
mov
lock
stc
das
pop
sub
rcll
mov
push
push
int
or
loop
sub
cmp
push
aas
aaa
jb
popa
dec
and
inc
scas
push
cmp
jae
mov
mov
jmp
fimuls
cwtl
inc
xor
jmp
mov
in
push
daa
pop
jne
mov
add
clc
cmp
pop
add
push
hlt
xchg
mulb
adc
inc
add
push
test
inc
dec
xor
repnz
jp
sahf
shrl
mov
and
int3
xor
rcll
popf
icebp
imul
mov
sub
in
das
mov
lods
lret
or
and
mov
mov
jbe
es
popf
mov
cmp
xchg
aad
or
mov
ds
push
test
daa
imul
ljmp
loope
insb
cmp
leave
stos
movb
pop
add
in
jmp
sub
inc
outsl
adc
cwtl
test
out
mov
push
push
sbb
sub
push
xor
push
add
xchg
mov
inc
jle
gs
les
iret
push
sub
imul
leave
lret
inc
mov
adc
inc
dec
pop
sub
xchg
adc
sub
or
add
loop
sub
mov
adc
gs
idiv
fmull
xor
daa
pop
cmc
pop
inc
jmp
push
cmp
fstps
xchg
push
in
dec
inc
rcl
insl
inc
dec
jp
adc
in
scas
sbb
ljmp
test
sub
add
gs
scas
cmp
mov
adc
xor
or
popl
dec
cmp
pop
adc
stc
inc
add
ret
sahf
icebp
lret
or
push
paddsb
cwtl
fwait
push
out
testb
inc
mov
cmp
sub
das
mov
mov
mov
mov
cwtl
xor
cmp
stos
aaa
lahf
sub
outsl
and
mov
xchg
ret
popf
sbb
int3
sbbb
dec
push
lahf
jecxz
lock
xor
faddl
mov
cmp
cmp
and
jbe
data16
aad
sbb
mov
cmp
lret
sbb
jnp
mov
test
push
inc
loope
xchg
sub
push
mov
loopne
xchg
repz
fimull
inc
popa
mov
fwait
add
push
lods
loope
sbbl
fwait
lea
push
out
jbe
outsb
jne
leave
pop
and
cmc
ja
mov
dec
xchg
inc
frstor
lea
dec
push
push
and
jnp
insl
sti
adc
out
jecxz
mov
or
into
lret
out
leave
ret
fstpl
loope
leave
pop
xchg
sbb
sub
leave
xchg
repnz
sub
adc
js
out
mov
sub
fcoml
loop
les
test
arpl
imul
cmpsl
sbb
mov
test
dec
filds
and
insb
mov
adc
ficoms
cwtl
adc
sub
es
and
ret
out
xor
xchg
cmp
push
cmp
jb
adc
lea
fnstcw
or
lods
mov
jb
or
cmp
ljmp
add
pushf
gs
mov
mov
dec
adc
loope
hlt
mov
xor
sbb
ret
lcall
movsb
and
adcl
adc
sbb
cmp
add
imul
stc
cmp
std
jle
pushf
inc
sub
mov
jecxz
xor
movb
lds
jns
scas
jne
pop
push
ds
ds
pop
push
pop
cmp
add
push
test
ds
pop
in
cmpsb
mov
ds
pusha
ljmp
cmpb
cld
lock
inc
xchg
push
or
jne
icebp
cltd
mov
dec
cs
rcrb
dec
jle
dec
and
add
and
push
or
fs
xor
bound
out
jbe
dec
fsubrs
ljmp
leave
xorl
repz
lahf
out
inc
dec
ret
or
xchg
insb
pop
movsb
inc
mov
mov
cli
dec
test
mov
jge
and
outsb
ja
xchg
inc
pop
sahf
in
sti
pop
loope
lock
jnp
int
push
mov
lahf
mov
push
rcrb
inc
shll
ja
out
add
mov
mov
shrl
mov
ss
mov
xor
or
push
xchg
popa
adc
push
pop
push
jecxz
dec
jnp
xor
xchg
xor
jno
inc
xor
inc
scas
inc
lahf
xchg
push
xor
cmp
mov
movsl
jae
loop
pop
call
inc
cmp
add
mov
inc
add
dec
dec
inc
mov
cmp
push
cmpl
js
mov
xor
into
je
jns
leave
pop
negb
lods
pushw
pop
jge
mov
jg
fimuls
xchg
xchg
rorb
pop
push
hlt
mov
pusha
inc
inc
push
imul
xor
xchg
negl
xor
mov
int
cmp
mov
and
jmp
jbe
dec
xchg
outsb
add
aad
repz
sub
filds
js
out
aad
sti
jp
push
xor
inc
pusha
inc
adc
out
push
jecxz
dec
xlat
pop
dec
xchg
jp
xor
adc
fisttps
pop
shrb
adc
aam
test
out
or
into
fsubrl
xchg
mul
adcb
fcompl
out
cltd
mov
nop
jo
sub
or
shrl
jne
pop
sbb
addl
pop
jle
push
inc
loop
loopne
mov
iret
sti
inc
jns
xchg
stos
add
cmp
push
fcmove
adc
push
aam
stos
or
pop
pop
xor
xchg
jnp
loope
out
int
add
ret
push
push
mov
inc
jle
xchg
mov
pop
mov
pop
es
popw
insb
out
mov
cmpsb
adcl
repnz
mov
pop
sub
mov
adc
shr
xchg
movsb
xor
es
call
and
or
lods
xchg
clc
lret
mov
inc
xor
out
inc
jg
dec
dec
xor
fisubs
xor
stos
pop
cltd
sub
ljmp
insl
rorl
inc
adc
push
xchg
mov
pop
test
mov
daa
outsb
lret
mov
pop
call
mov
inc
add
pushl
std
dec
fdivs
aam
mov
adcl
fsubs
and
insl
aad
pop
xor
out
mov
push
ljmp
shlb
insl
inc
push
inc
je
add
cmpsl
stos
cmpsl
fidivrs
mov
shlb
out
idivb
xchg
sub
sti
dec
mov
into
cmpb
lret
aaa
and
fcompl
lea
lods
jbe
orb
pushf
and
cmp
pop
sub
xor
leave
push
scas
sarl
psadbw
cwtl
les
pop
insb
fsub
push
pushf
andl
and
test
das
out
xchg
mov
jnp
pop
add
cld
dec
std
cli
mov
or
push
jb
mov
jnp
inc
scas
in
sbb
stc
xchg
dec
call
jns
fmul
mov
sahf
int
jo
xchg
or
in
mov
or
mov
add
hlt
push
je
xchg
lret
outsl
push
xor
sbb
xor
or
pop
fwait
push
mov
repnz
notl
ret
lret
fsubrs
dec
mov
inc
xchg
xchg
sti
loope
lret
push
repz
or
mov
out
enter
sbb
movsb
jnp
mov
dec
ljmp
cmp
xor
jns
in
lahf
shll
xchg
aam
enter
cld
rcl
ds
mov
cmp
int3
mov
inc
arpl
imul
mov
dec
sub
test
mov
sbb
movsl
pop
xchg
ljmp
cmp
jbe
sbb
mov
or
cmp
push
xchg
adc
lods
adc
add
mov
xchg
add
mov
adc
orl
add
or
out
cmpsl
in
push
jg
xchg
inc
test
loop
lret
cwtl
incb
int3
mov
cmp
ret
arpl
pop
aad
int
inc
jo
in
pop
or
inc
xchg
std
mov
jns
test
rorl
mov
neg
mov
pop
mov
fiadds
sarb
push
mov
test
add
jle
jg
jmp
dec
aam
xchg
inc
test
or
dec
idivl
cltd
shlb
xor
loopne
inc
cmpsb
and
orb
jmp
inc
jns
out
data16
imul
mov
repnz
push
hlt
aam
mov
les
icebp
mov
push
mov
test
push
scas
mov
add
inc
stos
aaa
in
bound
iret
in
lret
mov
shl
inc
and
inc
hlt
mov
out
iret
aam
cld
insl
jge
or
leave
mov
out
shll
jne
adc
hlt
subb
push
pop
adc
std
mov
shlb
xor
push
push
int3
add
ret
aas
shll
xor
popf
jb
inc
sub
repz
lahf
cld
mov
sti
xchg
pushf
cmpsl
mov
mov
pop
dec
mov
cmpl
inc
nop
add
sbb
fists
mov
aam
aaa
sbb
test
sahf
scas
or
cmp
push
shll
sub
jb
jno
je
add
and
lock
xor
sbb
bound
imul
fisubrs
int
lock
ss
push
mov
xor
mov
ror
mov
mov
pop
and
shll
sti
dec
ret
sub
sub
fcoms
mov
sti
push
pushf
mov
mov
xchg
inc
mov
aad
add
sarb
sbb
cmpsb
ds
cmp
mov
mov
push
cmpsl
add
mov
push
loope
cmpsl
ljmp
cmc
jp
xchg
add
dec
shll
clc
mov
or
xor
or
jo
out
inc
cmp
xorb
shl
popa
push
in
ret
loopne
cmc
cmc
repnz
insb
mov
jl
outsb
pop
divb
mov
cs
decl
in
fs
outsl
xlat
fwait
cmp
or
mov
xchg
pop
mov
shlb
xor
rcrl
je
psrld
cmp
dec
popl
stos
and
cmp
xor
insl
adc
test
mov
or
or
rolb
ficoms
lretw
mov
mov
in
mov
mov
mov
daa
xor
out
shl
lahf
int3
xor
loopne
jp
xchg
jno
es
imul
jmp
pop
xor
stc
lds
xchg
inc
push
cmp
roll
jg
or
test
mov
gs
add
js
sti
mov
aaa
pop
ret
loope
loopne
test
cmpsl
sbb
adc
enter
popf
dec
sbb
and
lock
call
jno
xor
adc
movsl
shrl
and
and
imull
inc
cs
test
leave
xchg
sbb
scas
mov
pop
into
in
add
push
data16
jecxz
mov
shrb
out
cltd
imul
sub
arpl
cltd
or
xor
xchg
sahf
dec
in
dec
fwait
jae
dec
and
push
and
lea
pop
aad
lea
jns
stc
daa
dec
ds
inc
cmc
mov
xchg
rcl
mov
jecxz
xchg
jb
pop
sub
sub
stc
int
xchg
iret
repz
xor
xchg
sbb
add
out
loope
xchg
cltd
hlt
icebp
test
fnstenv
lods
nop
outsl
stos
cmp
ljmp
xchg
dec
call
xor
cli
aaa
inc
jmp
jne
mov
sub
lret
outsb
inc
clc
cmpsl
lods
andb
mov
test
push
adcl
pop
or
adc
mov
call
and
enter
pusha
xor
adc
sbb
movsl
lret
dec
mov
dec
mov
sti
popf
cltd
xlat
pop
dec
sbb
mov
fidivs
jbe
cmp
push
jg
lea
dec
inc
nop
fisubrl
mov
sbb
adc
jmp
stos
outsl
mov
lods
popa
adcl
mov
popf
aam
add
jae
cltd
xchg
pop
movsb
movsb
in
aaa
mov
add
and
xchg
pop
aas
xchg
rol
arpl
add
movsb
rclb
test
fnstenv
cmp
in
mov
into
aad
mov
mov
add
mov
or
and
lock
pushf
ja
and
jo
addr16
jg
rclb
fdivrl
movsl
mov
arpl
adc
inc
sbb
add
icebp
shll
mov
fsubrl
leave
arpl
push
jne
xor
xchg
sub
sbb
sub
jae
jp
and
mov
xchg
mov
dec
jne
gs
xchg
xor
push
jp
int
and
cmpsl
push
xor
push
lcall
inc
lcall
mov
pushf
jle
xor
lret
jbe
jnp
or
fwait
pop
gs
cmp
mov
dec
insl
into
popa
mov
stos
loopne
outsl
mov
and
dec
or
lcall
jmp
xor
outsl
dec
mov
mov
std
push
outsl
pusha
rcll
push
xchg
pop
cli
fists
or
fistpll
in
sub
aam
cmp
sub
pop
out
mov
test
int
jl
mov
bound
into
arpl
jmp
ja
pop
jl
jl
addr16
push
insl
dec
addr16
mov
lods
sub
iret
adc
mov
jae
mov
dec
sub
repnz
call
in
arpl
ret
movsb
mov
push
mov
jmp
daa
xchg
sbb
pop
mov
lcall
andb
xlat
inc
stc
sub
orl
adc
xchg
xlat
fwait
daa
out
imul
ja
jp
mov
bound
dec
rcll
test
pop
rorb
cmp
mov
inc
sbb
and
lcall
in
mov
test
imul
xchg
rclb
aam
jb
sbb
adc
mov
ficoml
jmp
lahf
cwtl
cmp
lods
js
daa
je
jecxz
mov
cmp
add
mov
mov
fsubs
shll
mov
xchg
mov
or
fldl
or
push
add
push
shlb
xstore-rng
cmpsl
add
add
or
push
sub
ds
jmp
ss
xchg
or
push
aas
dec
dec
push
lcall
add
shrl
cmpsb
jp
push
mov
cmp
insb
inc
jl
adc
add
pop
roll
lahf
sub
popa
adc
std
jmp
gs
les
call
mov
mov
xor
push
hlt
in
and
xor
fsts
ja
jns
push
fyl2xp1
cs
jnp
pop
mov
lods
in
mov
lret
out
adc
cmp
movsb
div
xchg
xor
push
testl
popa
mov
jl
shll
cmp
test
nop
js
test
ret
sbb
test
jo
cmp
jne
fidivs
leave
fcomp
rol
add
jmp
mov
sub
xor
mov
movsl
push
or
adc
inc
mov
push
sbb
inc
cld
jg
add
xchg
jbe
aaa
addl
sbb
fldcw
adcb
in
xlat
fidivl
repz
fistpll
lret
xor
mov
xchg
call
pop
js
iret
jmp
pop
outsb
xor
loopne
mov
shr
fistl
sbb
hlt
xchg
mov
pushf
xchg
sub
push
cmp
dec
es
test
aad
cli
jge
out
lock
lds
and
in
push
xchg
test
fnstenv
ljmp
test
andb
dec
push
daa
mov
in
mov
test
cmp
out
xor
adc
pop
pop
pop
and
mov
pushf
or
push
or
jbe
push
jns
mov
cwtl
loope
movsb
xchg
jae
mov
dec
sbb
sbb
jne
inc
test
lret
xchg
out
pop
add
sahf
mov
sub
sti
mov
nop
sbb
cli
inc
jno
mov
hlt
xchg
imul
xchg
ret
dec
cmp
out
iret
in
pop
arpl
aam
jo
jge
mov
sarl
push
cmp
pop
mov
imull
sub
leave
out
and
je
xchg
data16
mov
jmp
jae
pop
pop
mov
daa
mov
xor
les
xor
hlt
rcll
xchg
xor
pop
cmp
jp
inc
je
mov
outsl
lock
xor
stos
insl
cmpsl
int
cltd
xor
xor
inc
arpl
pop
inc
and
lods
iret
loopne
sub
out
mov
movsb
cmp
jecxz
mov
jns
jle
leave
xchg
jge
das
cmp
addr16
fwait
push
test
rcr
add
mov
out
pop
xchg
cmc
enter
adc
test
or
sbb
mov
lret
adc
xor
negl
mov
ss
and
in
fistps
mov
scas
aaa
icebp
mov
or
push
or
sbb
cld
mov
xor
cmp
fucom
mov
cmp
das
jmp
stos
ss
mov
sbb
adc
push
dec
out
push
sbb
movsb
fmulp
lods
fwait
loop
adc
sbb
dec
and
add
not
cmc
subl
push
enter
lret
lock
mov
jmp
daa
mov
cmp
or
sahf
popf
arpl
stos
data16
sub
pop
mull
mov
cmc
fstpt
or
jp
movb
adc
push
std
push
push
out
mov
mov
sahf
movsl
dec
sub
fcmovnb
sub
neg
xchg
pusha
mov
scas
inc
mov
cmpl
pop
into
xorb
add
loop
jle
xor
out
cwtl
xchg
sbb
test
jp
add
and
dec
mov
in
or
mov
or
push
jge
in
rcll
es
pop
jp
call
ficoms
das
and
movsb
pusha
mov
xchg
int3
mov
outsb
and
lock
sbb
std
cli
add
ljmp
mov
xor
push
dec
jge
rep
aad
insb
sbb
inc
mov
pop
inc
push
icebp
orb
cld
cs
jmp
lea
mulb
pop
rclb
in
mov
sar
fisttpl
and
pop
lods
pop
pop
call
adc
or
test
iret
push
sbb
orl
dec
orb
mov
dec
push
mov
pop
loope
mov
add
sub
aad
inc
ret
lock
jg
es
sbb
mov
xchg
add
shlb
jmp
sub
adc
int3
jmp
xor
push
pusha
call
iret
jmp
adc
and
std
push
push
scas
mov
popf
mov
stos
cmc
cmpsl
sbb
insb
arpl
repnz
xchg
and
and
xchg
mov
jmp
push
xchg
std
flds
pop
push
cli
movsb
mov
fmull
or
mov
pop
push
mov
mov
and
dec
adc
sahf
je
xchg
ljmp
fbld
das
mov
add
sub
mov
xchg
push
mov
xor
sbb
inc
lret
adc
cmpsb
pop
divb
ret
push
sbb
cmp
call
push
mov
movsb
scas
jle
test
mov
sub
out
xor
or
cli
push
adc
repnz
cld
mov
sub
test
jmp
jae
popa
mov
sub
stc
into
inc
pushf
cmc
jb
push
lods
lock
cltd
es
mov
sarb
cmp
adc
out
sbb
dec
adc
push
xchg
xor
sbb
push
xchg
scas
jl
jno
pop
pop
push
stos
arpl
mov
sub
jmp
or
dec
and
push
imulb
fiadds
jne
cmpsl
aas
movsl
sbb
sub
aaa
pop
lahf
repnz
fcoms
inc
sub
das
add
scas
clc
push
inc
scas
cwtl
sbb
in
jecxz
les
pop
rol
add
or
jp
test
in
xor
mov
sbb
out
and
ja
out
xchg
std
xchg
xchg
ficoms
rcll
dec
mov
mulb
repz
lahf
jmp
in
pop
hlt
sub
or
mull
lock
cmp
enter
xchg
cmp
testl
test
pop
cmpb
sbb
sti
cs
jl
pop
jbe
adc
jp
pop
or
pushf
mov
mov
enter
cli
insl
lea
mov
mov
enter
aad
in
adc
leave
fistl
vmovaps
sbbl
jne
sbb
imul
imul
mov
iret
loopne
dec
jmp
mov
lcall
js
cmp
sbb
mov
stos
sub
xor
jnp
icebp
into
stos
movsb
jl
inc
pop
popf
popf
dec
stos
fiaddl
sbb
aaa
and
push
pop
lcall
mov
icebp
daa
cmpsl
mov
push
shr
pusha
push
jle
xchg
lea
popf
push
mov
adc
mov
add
jecxz
add
mov
sub
inc
push
fsubs
add
mov
and
pop
fimuls
fisubl
in
daa
leave
jle
mov
pop
push
add
adc
out
push
fstps
cmp
dec
or
hlt
pop
inc
cmpsb
add
add
data16
std
inc
cmc
push
fnsave
lock
xor
push
add
adc
ficomps
lods
sbb
lods
xchg
jnp
mov
clc
out
inc
notb
dec
pop
jnp
call
mov
repz
aam
ss
add
pop
out
shr
lock
xorb
jp
fidivrs
daa
inc
inc
add
stos
stos
imul
xor
imul
mov
dec
xchg
ljmp
xchg
jg
repz
mov
out
add
push
stc
cs
aas
lds
scas
push
testl
fsubr
mov
ror
inc
nop
pusha
adc
call
scas
lahf
es
lret
or
imul
push
fidivrs
push
dec
decl
jle
jbe
xor
popf
lret
mov
inc
out
pop
ss
and
fmuls
and
cmp
mov
inc
mov
cmc
into
data16
gs
stc
xor
jb
cs
in
or
lds
or
bswap
hlt
cmpsl
pop
sbb
out
lds
daa
push
xor
cld
cmc
sub
les
mov
out
mov
sbb
adc
xchg
pop
and
mov
es
xchg
xor
lods
push
jge
int
out
mov
xor
mov
ja
pop
repz
cli
call
inc
inc
scas
add
cmp
xlat
outsl
xchg
stos
lahf
sub
ret
jle
pop
in
jp
arpl
shll
adcb
sbb
cmp
dec
xor
mov
aaa
lods
inc
shlb
inc
cli
fcompl
pop
adc
std
jecxz
data16
sbb
inc
insl
sub
lock
xchg
popf
mov
xsha1
cmpsb
or
dec
sub
jmp
sahf
mov
sbb
xlat
mov
imul
stos
mov
push
push
aad
pop
inc
add
scas
int
dec
xchg
lds
pop
jno
xlat
scas
mov
fs
lods
inc
mov
movl
or
lahf
mov
push
cwtl
add
aam
push
outsl
adc
fbstp
mov
cs
inc
or
sti
sahf
imull
cmpsl
ds
xor
fs
out
cld
mov
push
or
sti
xor
divps
cs
or
cmp
fcoml
jae
mov
data16
shl
es
shl
test
push
and
lcall
addl
mov
imul
stos
pusha
lds
pop
mov
jge
xchg
arpl
and
pop
cmp
mov
and
sbb
dec
mov
push
dec
dec
stos
inc
icebp
mov
or
repnz
not
cmp
mov
xchg
scas
sub
jecxz
sahf
inc
jle
dec
push
mov
testl
dec
add
lods
and
test
and
aad
mov
fmull
and
sbb
js
ret
int3
mov
movsb
xor
movsb
push
cmp
pop
lods
xor
mov
jbe
xchg
in
test
test
add
js
movsl
faddl
push
iret
jns
mov
lock
mov
adc
pop
pop
les
push
inc
sbb
out
jmp
inc
insb
mov
xchg
pop
lahf
shll
in
pop
add
push
out
je
lds
mov
push
mov
insl
xchg
lcall
push
shll
add
lret
mov
sub
jo
mov
lea
push
popa
daa
mov
test
repz
sti
xor
ret
ficompl
fucomp
scas
scas
or
enter
and
test
dec
dec
mov
inc
fsubrp
push
lock
insb
sub
in
cmp
pop
jns
inc
insl
pop
cwtl
cmp
aam
fsubrs
data16
xor
fimuls
xchg
and
jp
jbe
jmp
adc
dec
ret
adc
xchg
inc
pop
popf
pusha
jle
or
hlt
jge
add
repnz
mov
popl
and
jmp
mov
jmp
test
fwait
xchg
and
cmp
jo
int3
int
fwait
xor
jae
dec
in
cmp
fidivs
int3
shlb
push
test
pop
xchg
bound
mov
pop
mov
or
aas
push
cmpsl
mov
outsb
mov
andl
inc
int3
mov
mov
ret
push
jns
fdivrl
mov
testl
outsb
jne
out
jno
inc
pop
mov
icebp
js
mov
aam
xor
insl
push
cmp
stc
sahf
ja
inc
sti
jns
xchg
mov
sbb
icebp
pushf
daa
sarb
das
pop
fdivrs
push
js
cmpb
nop
pop
lea
lds
loopne
pop
push
imul
dec
cwtl
mov
cmp
lock
lds
mov
outsb
and
mov
and
mov
cmp
dec
sbb
pushf
or
int
fistpll
mov
sub
into
stos
and
stos
icebp
or
dec
cmp
test
in
sbb
sbb
jecxz
aas
arpl
jp
cmp
xchg
and
mov
mov
mov
mov
sub
sti
adc
cmp
and
jmp
fdiv
lcall
pop
je
fs
insb
test
inc
push
je
mov
mov
cmc
clc
add
inc
stos
imull
mov
mov
xor
cltd
mov
and
xchg
adc
pushf
adc
sbb
lahf
jne
loopne
scas
mov
fs
dec
push
ss
mov
es
fbstp
xchg
fdivs
test
jle
test
jbe
subb
xchg
cmp
dec
xor
lods
push
cli
fistpll
jnp
adc
pop
aaa
sub
xor
mov
in
jle
rorl
fidivs
inc
fisttpll
test
test
insb
pop
call
gs
sub
outsb
adc
lret
xor
out
xor
jb
push
shll
add
xchg
out
in
cmp
in
aas
icebp
enter
or
mov
jbe
jg
xchg
sbb
cmp
push
xor
fcmovnb
test
lret
insl
movsb
stos
imul
push
lods
adc
push
dec
jge
cli
repnz
xlat
xor
inc
push
push
rorb
and
hlt
push
xchg
fs
cwtl
std
xchg
jecxz
lea
mov
mov
addr16
xchg
push
mov
pop
sub
push
pop
add
out
shrb
mov
icebp
ror
xor
xchg
hlt
push
cmp
adc
xchg
lcall
xchg
jne
push
xchg
insb
shrb
inc
jb
sub
mov
bound
ljmp
cmpl
mov
daa
or
loope
mov
pushf
and
in
pushf
daa
das
jge
and
stos
cmp
cmp
sub
hlt
dec
add
inc
inc
pop
mov
pop
imul
dec
jle
mov
int3
fs
push
ss
movsb
aaa
pop
jge
push
xorl
jno
cmc
sarb
insl
or
or
xor
jp
dec
xchg
sbb
movsb
cmp
inc
popf
dec
inc
dec
pop
pop
jo
jg
stos
stc
adc
dec
inc
jl
dec
pop
shrl
hlt
jns
pop
hlt
mov
add
popf
cmpb
mov
pop
pop
aad
sbb
inc
js
adc
fwait
mov
pop
call
shrb
jecxz
int3
xor
inc
shrl
pusha
or
push
jecxz
mov
pop
pop
into
stos
sub
and
add
pop
loopne
add
xor
jb
scas
fcompl
add
ss
leave
pop
aaa
aaa
loopne
pusha
or
xchg
and
sbb
int
adc
xchg
and
xchg
out
sub
jae
mov
arpl
bound
out
sti
xchg
cli
xlat
mov
lods
dec
fwait
cmp
sbb
jno
xchg
out
pushf
xorl
pushf
or
out
out
popa
movsl
cld
add
mov
xorl
jg
fwait
loope
and
imul
fistpll
adc
aam
mov
jl
pop
into
imul
xchg
and
xchg
imul
mov
adc
das
test
push
stc
mov
inc
jns
les
in
cmp
xchg
jno
outsl
nop
out
imul
or
xlat
pop
lret
jmp
in
or
jecxz
mov
in
add
dec
jmp
ret
push
xchg
dec
in
sub
cmp
mov
imul
add
loopne
pop
dec
adc
andb
jne
jp
lahf
addb
es
lock
xchg
xchg
fmull
call
jmp
sub
jle
sti
out
add
aam
test
dec
mov
xchg
movsb
test
push
cmp
pushf
mov
lods
mov
xor
shll
sahf
xor
pminub
leave
jg
xchg
stc
fimuls
shll
test
inc
call
mov
adc
sub
sbb
mov
add
sbb
fiadds
test
mov
mov
push
je
aam
jae
mov
inc
out
lods
aas
sbb
inc
andb
insb
add
test
sbb
andb
push
push
nop
cli
pop
in
stos
enter
xor
ffreep
jecxz
testw
in
call
xchg
mov
and
shlb
mov
dec
daa
cmpsl
fnstcw
cmp
add
lret
xor
dec
lahf
or
shrb
lret
sbb
rcl
fcomps
js
lcall
or
jne
push
or
jle
mov
call
int
stos
jmp
dec
adc
adc
outsl
jecxz
xchg
js
les
sbb
jns
and
int
in
jecxz
lret
fs
mov
mov
mov
lods
bound
sahf
xor
fcomps
insl
or
test
sub
sub
rcrl
int
mov
adc
movsb
fwait
inc
sub
call
cmp
cmpsl
sti
std
adc
cmpsb
aad
call
lahf
xor
cmpsb
lret
mov
inc
mov
sti
push
sub
imul
xchg
int3
push
imul
dec
and
shll
inc
sub
inc
add
or
lcall
dec
out
xchg
mov
pop
adcb
adc
dec
arpl
subb
xor
cmp
inc
xchg
mov
xchg
gs
movsl
pop
mov
mov
repz
pop
icebp
insb
scas
xchg
add
inc
loop
ret
pop
push
jle
push
sub
mov
clc
out
aam
push
popa
dec
iret
sub
call
push
inc
sbb
lret
nop
out
push
add
es
mov
or
ja
dec
fwait
rol
mov
and
cmp
push
imul
mov
les
outsl
add
test
mov
pop
jns
lods
mov
jae
jmp
out
add
call
cmp
jp
lods
cmp
sub
and
inc
dec
push
pusha
add
sub
cmp
cmp
rorl
pop
mov
sarb
and
pop
push
mov
mov
popf
push
insl
cwtl
leave
mov
jl
addr16
aas
call
sbb
push
sahf
pop
cmpsb
and
jb
clc
mov
lods
cmp
pop
sbb
aad
inc
push
mov
cli
inc
test
push
aam
jbe
sub
xchg
stos
test
shll
ror
movsb
scas
sub
jg
adc
imul
jbe
xchg
test
xchg
xchg
jle
or
and
lahf
in
sbb
jns
das
nop
push
loope
inc
and
test
lret
fstl
or
mov
cmc
and
sbb
mov
aaa
sbb
pop
popf
aaa
and
aad
jns
lcall
ficomps
xlat
fldl
xor
scas
jo
pop
inc
jns
sub
xchg
jno
adc
hlt
pop
pop
pusha
dec
rcl
int3
popf
mul
pushf
cmpsb
xor
jge
jg
adc
out
adc
mov
cmp
mov
fdivrs
lcall
int3
xor
mov
hlt
les
sbb
pop
or
rorb
pop
push
xchg
push
jnp
loope
lea
adc
movb
sti
pop
test
or
lods
imul
mov
lret
movsb
pop
inc
out
scas
das
jge
dec
iret
cmp
mov
dec
cmp
cmp
sbb
leave
out
mov
and
jp
nop
ret
inc
xorb
push
push
mov
sahf
ljmp
jns
mov
add
imul
gs
mov
into
outsb
jle
sub
inc
insb
popa
pop
dec
outsl
add
movsl
jbe
push
mov
pop
mov
ss
push
mov
push
sarb
fdivs
mov
adc
je
xor
adc
sti
xor
gs
icebp
and
rcll
adc
scas
or
shll
cmp
cmp
lods
leave
xchg
loope
fs
push
js
notb
mov
jl
mov
dec
aad
pop
push
imull
lea
jl
mov
xchg
xchg
xchg
cmpb
inc
mov
pop
js
push
sbb
pop
jbe
xchg
xchg
popf
and
mov
inc
jbe
jae
pop
mov
mov
pop
mov
loop
insb
mov
pop
jb
aas
jge
rclb
outsb
adc
cmpl
cwtl
cmp
out
or
shrb
imul
lock
fwait
or
add
dec
xchg
call
sahf
in
or
mov
in
adc
pop
das
sbb
test
adc
cmp
dec
jae
mov
dec
push
pushf
mov
add
and
sub
outsl
mov
addr16
sbb
cltd
pop
jae
jbe
adc
cmp
xor
out
dec
cmp
push
sbb
dec
fisubrl
sbb
sub
add
dec
test
xchg
push
test
mov
sub
enter
aaa
xor
out
daa
pop
lret
mov
cld
and
xchg
insl
out
fwait
clc
push
add
jmp
sub
mov
int
mov
mov
push
cs
lret
xchg
sqrtps
cmp
adc
push
dec
mov
and
insb
notl
in
sub
and
negl
lahf
mov
insl
mov
pop
outsl
inc
and
adc
jmp
sub
push
in
pushf
sub
xlat
pushf
jp
pop
lahf
fisubs
rolb
jp
cmp
mov
inc
add
push
pop
std
loope
and
je
pop
lret
and
hlt
scas
and
pop
pop
fbld
push
or
pop
xor
adc
hlt
push
roll
cmp
cltd
inc
mov
aam
insb
pop
jg
xchg
inc
pop
mov
pushf
sub
xorb
dec
fadd
xchg
pop
mov
movsb
and
shlb
pop
cmp
jno
or
outsl
cmc
mov
jge
mov
shll
cwtl
add
arpl
and
sbb
mov
xchg
jns
popf
sbb
ficompl
pop
cmp
fidivrl
dec
pop
icebp
or
xor
inc
add
jne
lds
sub
jle
lcall
in
dec
outsb
mov
push
ja
pop
fnstenv
dec
ret
xlat
rcll
shlb
cmc
and
fldln2
inc
loop
jle
add
dec
outsb
aad
mov
sub
jns
shrl
sub
xor
lret
inc
cmpsl
push
pusha
cmp
clc
int
es
lds
nop
pusha
lret
fisubs
cmpl
lret
in
sbb
pop
push
insb
pusha
ficompl
xor
cmpsb
jo
inc
mov
fcoml
adc
lods
rcrl
je
push
out
pushf
ret
inc
ljmp
mov
test
adc
xor
fildl
mov
adc
fidivrl
pop
jp
mov
push
dec
sarl
outsb
xor
rcrl
js
sar
pushf
ss
jge
mov
jecxz
dec
fimull
pop
scas
sub
roll
adc
sbbb
fs
test
cmc
dec
sbb
je
nop
lret
fisubl
scas
shll
mov
pop
cmp
sub
aam
addl
leave
inc
and
pop
xor
loopne
mov
mov
mov
inc
sbb
or
mov
pop
push
pop
hlt
cmp
ljmp
push
mov
adc
sbb
inc
xchg
aas
mov
bound
cmp
mov
insl
test
mov
push
push
ret
addl
mov
test
add
push
sub
icebp
mov
or
lea
enter
jl
dec
lods
add
pusha
xchg
aad
bound
xor
jno
mov
sbb
inc
push
test
inc
pop
ret
lea
cmp
pop
rclb
out
and
adc
jl
xor
sbb
xlat
cmp
add
or
bound
xchg
sub
mov
push
and
shll
jnp,pt
cli
adc
fwait
ret
pusha
push
xchg
and
outsb
lods
sbb
pop
pop
adc
xchg
mov
int3
das
outsb
jo
scas
int3
push
add
out
sub
and
in
clc
nop
jge
mov
push
lret
push
dec
fs
cmp
cmp
cmp
cmp
dec
lret
add
enter
js
sub
inc
fidivl
adc
jmp
xchg
sti
fwait
popf
test
cli
mov
lds
lods
adc
clc
cmp
mov
loopne
mov
loopne
xchg
clc
cld
aaa
pop
shrb
insb
inc
mulb
jns
cmp
aas
aas
outsb
dec
jnp
insl
mov
in
xor
inc
xor
inc
and
imul
mov
xor
add
or
sbb
lods
push
sar
mov
xchg
hlt
fistps
lcall
jae
mov
cltd
stos
insl
jno
sub
scas
jecxz
mov
lock
cmp
or
imul
sbb
notl
jg
cmp
test
mov
fdivl
lds
add
fsubs
loop
push
loop
cltd
decl
dec
and
int3
inc
sbb
clc
sub
in
ja
in
jp
push
dec
mov
ret
nop
imul
ss
push
lods
jb
add
movl
add
cmpsl
pushl
cmc
push
fidivs
stc
pop
fs
in
js
mov
jns
xchg
pusha
xchg
scas
and
stc
xchg
dec
cld
push
pop
push
movsb
rcll
jecxz
push
xor
mov
mov
les
mov
pop
or
daa
cmpsl
adc
adc
push
push
inc
xchg
imul
mov
sbb
mov
pusha
pusha
jle
movsl
cmpsb
lcall
loop
das
test
shlb
and
stos
xor
dec
xchg
mov
sub
sub
xchg
inc
xchg
mov
pop
je
enter
clc
lods
adc
sar
dec
cmpsb
push
mov
loop
jbe
cmpl
fwait
jge
fiadds
dec
xchg
push
mov
test
dec
ret
pop
pushw
mov
pushf
outsl
loop
fdivs
sub
ljmp
test
mov
adc
ds
xor
mov
jg
xchg
xchg
pop
stc
movsb
sbb
mov
aad
xchg
push
xor
mov
flds
pushf
cmpsl
adcb
outsb
bound
xor
rep
test
pop
cld
movsb
into
push
addl
movsl
js
add
jbe
or
jnp
sbb
js
dec
stos
out
jmp
mov
mov
out
dec
push
dec
pop
in
xchg
mov
inc
pop
pop
dec
adc
xchg
imul
aas
sti
inc
movsb
aad
loopne
mov
and
jns
arpl
xor
and
in
inc
mov
incb
inc
jb
mov
repz
xchg
pop
ljmp
gs
notb
cmc
add
sti
cmp
std
mov
adc
dec
dec
dec
inc
sti
push
rcll
push
call
clc
ss
inc
dec
mov
ds
and
insl
lds
hlt
rolb
push
xchg
cmc
fwait
mov
gs
add
jge
jns
mov
ret
ret
push
ja
mov
push
pusha
or
push
cmp
rclb
in
inc
cmpsl
in
dec
pop
mov
inc
inc
xchg
in
ds
lcall
jae
iret
jb
mov
movsb
sahf
cltd
std
shr
mov
mov
and
rcr
lods
outsl
lret
mov
stc
js
xchg
jl
out
sahf
add
xchg
mov
hlt
push
jbe
ret
mov
sti
or
mov
sbb
mov
mov
mov
sti
xor
add
sub
outsb
data16
scas
jle
ficoms
vpshufd
mov
pushf
push
lcall
data16
out
sbb
jecxz
popf
clc
stos
incl
sbb
mov
push
mov
in
jb
in
mov
add
jnp
je
inc
mov
shll
jb
divb
cs
test
aam
outsb
movsl
and
loopne
push
mov
adc
out
adc
lods
icebp
mov
imul
mov
xchg
fidivrs
xor
sahf
insl
test
rcrb
sub
call
sbb
int3
dec
push
mov
cmp
shll
sub
add
call
pop
add
int
adc
ljmp
xchg
sub
pop
cmc
daa
shll
repnz
sub
lods
imul
jmp
jge
fwait
adc
in
sub
mov
test
jle
mov
stc
mov
iret
insl
push
and
push
ret
mov
xchg
dec
cwtl
add
movsb
xchg
movb
and
dec
in
sbb
sbb
cld
lods
mov
bound
les
add
not
scas
test
dec
mov
sbb
xor
jnp
test
pop
pop
popa
dec
rol
idivb
frstor
sbb
pop
cmp
mov
cmp
xor
add
adcl
jno
testl
pusha
test
jns
insb
daa
sub
push
dec
inc
or
mov
loop
push
lahf
jb
int
daa
and
xor
xchg
cmp
xchg
rorb
jns
cmpsb
and
aaa
lcall
call
pushl
stos
xor
or
xchg
jl
and
and
mov
jle
mov
pushf
adc
mov
mov
lret
ret
adc
cmp
mov
lds
stos
mov
or
dec
push
sbb
mov
imul
testb
pop
xchg
sbb
movsb
shrb
xor
lcall
mov
cmp
inc
sub
add
cmp
sbb
out
xor
test
sub
scas
cmp
push
cmp
sti
insb
add
mov
pop
adc
sbb
sub
dec
jb
dec
push
mov
mov
int
add
jb
repz
cld
test
or
mov
jno
outsl
or
ret
into
pop
push
les
shll
push
sar
insl
fidivs
and
sub
mov
jp
ret
add
fcmovu
adc
pop
xchg
stos
adcl
aad
mov
push
pop
and
cmpsl
and
inc
jge
pop
test
lods
pop
fisubl
sbb
pop
adc
js
adc
aad
jle
sbb
xchg
pop
or
imul
bound
ret
sbb
ret
inc
or
and
orl
fldcw
stos
je
mov
aam
mov
loopne
or
iret
mov
or
and
cmp
mov
sbb
sahf
mov
dec
movb
rcll
into
dec
cmp
fsubl
or
mov
push
int
clc
adc
sbb
fcompl
das
cmp
and
add
aas
cmp
xorl
bnd
inc
adc
and
enter
arpl
xchg
jns
mov
lret
stos
add
insl
xchg
xchg
mov
rclb
mov
icebp
ljmp
xchg
les
test
andl
mov
and
int
shlb
adc
jmp
mov
cli
inc
jns
rorl
push
scas
sti
jp
mov
push
dec
xor
push
xor
popf
cmp
xchg
cmp
or
sbb
pusha
cmp
mov
push
fcomps
ds
mov
aam
inc
imull
aaa
ror
icebp
or
lock
xor
loopne
arpl
pop
and
jo
inc
int3
add
or
mov
and
jge
mov
push
sbb
cli
dec
cmp
push
jae
add
clc
loopne
cmp
or
ss
mov
jmp
aas
add
ja
adc
fdivl
xchg
adc
rcr
dec
pop
sti
fisubrl
or
sbb
and
movsl
fsts
pusha
hlt
pop
mov
repz
mov
js
aas
orl
and
stos
dec
jge
flds
push
adc
mov
fwait
lods
cmpsb
and
int3
adc
xchg
cmpl
mov
frstor
xchg
or
sbb
xchg
mov
in
js
scas
rcrb
sub
add
push
inc
jno
adc
je
dec
stc
int3
jmp
add
xchg
dec
rcrl
into
mov
aas
js
inc
ret
inc
cli
sub
icebp
xorl
in
jp
push
mov
aas
jmp
lds
dec
mov
cs
shrb
cmp
iret
mov
out
incb
mov
cwtl
pop
fisttpll
sbb
hlt
mov
std
testb
jmp
push
add
sub
sub
sbb
mov
dec
js
jecxz
shl
dec
shrb
clc
adc
lds
jg
movsl
pop
jmp
icebp
sub
lret
js
rcll
mov
jge
stos
cltd
insb
and
adc
rorl
dec
jl
push
and
arpl
aas
lret
fnsave
pop
inc
ds
cmpsl
or
aaa
arpl
sub
dec
sbb
mov
pop
push
mov
jl
cmc
mov
fnstcw
and
mov
mov
or
fistpl
lods
sbb
lret
lds
add
add
test
push
jb
lea
mov
dec
stos
or
mov
push
pop
sar
sbbb
test
and
lock
xchg
stos
dec
fwait
add
das
std
cltd
mov
cmpsb
mov
mov
add
cmp
fadds
cmp
out
rcrb
pop
test
mov
dec
and
pop
arpl
sarb
mov
push
xor
push
leave
insl
cmpsl
test
popf
add
adc
fildll
mov
mov
xor
jno
shlb
in
jmp
pop
pop
icebp
mov
bound
jbe
dec
imul
bound
cmpsb
jg
into
and
adc
push
jp
mov
lea
into
mov
mov
pop
xor
inc
add
insb
popa
in
and
mov
cmpsl
mov
enter
repz
cli
xchg
or
int3
arpl
enter
sub
pop
std
iret
fs
bound
loop
or
sub
insl
adc
pop
stc
cs
roll
xor
frstor
sub
cli
cmp
ror
rcl
jle
out
shlb
in
xchg
pop
pop
jle
loop
add
inc
idivb
imul
xchg
jns
outsl
repz
aaa
scas
imull
call
adc
js
sub
arpl
xchg
repz
data16
jno
push
push
xchg
xchg
pop
pop
loope
ja
xorl
sbb
xchg
pushf
xor
ja
and
mov
repnz
stc
bound
and
rclb
pop
or
icebp
mov
xor
add
and
inc
jge
dec
js
sbb
push
aad
das
jp
inc
or
cmp
addb
dec
outsb
jl
aaa
xchg
mov
dec
mov
push
hlt
mov
stos
cmp
fsubs
mov
call
movsl
lea
xchg
jge
inc
stc
orb
pop
mov
orb
cmc
fbld
iret
push
or
xchg
add
sbb
xchg
int3
test
daa
sti
mov
pop
call
in
jne
repnz
repnz
test
scas
out
pop
dec
lea
sbb
idiv
mov
lods
pop
nop
xchg
popl
jbe
xor
ja
outsl
mov
je
ljmp
es
dec
push
push
test
sarb
test
jp
repnz
dec
jle
and
pusha
andl
imul
insl
jno
sahf
in
mov
mov
mov
xor
fs
movsl
fwait
xor
and
bound
rcll
lods
mov
std
or
shll
lock
sub
loop
pop
mov
adc
stos
mov
xchg
xchg
sarb
inc
mov
and
int3
or
jl
xchg
fwait
sbb
push
add
xchg
jecxz
push
inc
lcall
ljmp
adc
sbb
mov
in
inc
dec
loopne
adc
adc
add
jge
ja
jae
fdivrs
and
xchg
push
mov
shrl
xchg
not
pop
mov
out
in
and
mov
test
lea
data16
or
lea
mov
pop
movsb
add
sbb
cmp
sbb
cwtl
call
push
xchg
add
jmp
mov
cmp
sub
mov
daa
std
xchg
mov
xchg
scas
xchg
lahf
fmuls
leave
pop
aas
push
push
scas
fisubrl
jl
pop
test
jle
je
xor
or
mov
jo
mov
fcmovb
xlat
cmp
dec
mov
sbb
incl
mov
dec
push
push
add
mov
int
fcoml
shll
out
orl
xor
pusha
mov
enter
xlat
enter
stos
test
push
sub
jb
aas
cmpsl
add
cmp
inc
mulb
xor
lea
xor
add
mov
in
mov
shlb
js
lock
dec
xor
push
xchg
jbe
cmc
popa
jns
dec
cmp
cmp
sbb
mov
jg
xor
sbb
xlat
movl
sbb
sbb
cmpsb
push
ds
mov
or
insb
test
shlb
popa
test
in
lods
sbb
imul
mov
mov
dec
movsl
repnz
push
sub
sbb
dec
testb
add
inc
or
cmp
mov
in
jns
test
in
ds
cmp
ficomps
ljmp
insb
jnp
hlt
out
sahf
xor
cmc
sub
mov
cltd
daa
cwtl
add
leave
mov
shr
cmp
icebp
or
mov
pop
push
pop
mov
iret
and
minps
add
cs
sbb
xor
push
fsubrs
lock
mov
adc
je
jecxz
add
incb
shll
cmc
out
push
inc
cwtl
add
and
pushf
mov
and
push
cmp
push
into
movsb
iret
movsl
push
mov
add
or
pusha
inc
imul
mov
cmpsb
in
test
jbe
fwait
mov
add
adc
arpl
lcall
xchg
insb
dec
and
rorl
decl
call
aad
fistps
push
filds
nop
xchg
loopne
pop
adc
out
shll
ja
push
sub
sahf
mov
sbbl
cmp
dec
divl
enter
or
mov
dec
push
add
fiadds
mov
mov
push
test
cld
fisubs
jp
sbb
sbb
mov
scas
aaa
mov
xor
jb
arpl
andb
sub
push
scas
mov
pop
test
mov
lahf
sub
sbb
sub
pushf
jnp
push
or
inc
push
mov
enter
mulb
scas
inc
lret
push
pop
leave
icebp
add
aad
push
pop
jmp
out
test
fstl
insb
neg
adc
dec
xchg
cwtl
inc
add
popa
les
xlat
ss
iret
idiv
xchg
dec
scas
clc
pop
xadd
inc
xchg
les
xor
movsl
adc
push
mov
dec
push
adc
mov
pop
ja
lock
ljmp
loopne
jmp
shll
fmulp
xchg
add
dec
dec
shr
nop
loopne
xchg
outsl
lahf
pop
js
popa
adc
jb
mov
inc
pop
or
sub
lahf
std
movsb
push
pop
jl
mov
mov
push
out
mov
pusha
pusha
adc
loope
neg
add
decl
int3
add
icebp
hlt
pop
rclb
dec
xchg
gs
or
and
stc
shrl
insl
fisubs
adc
test
loope
cld
es
das
and
push
dec
call
sub
gs
dec
cmc
sub
inc
out
in
add
or
cmp
stos
jmp
sub
rcr
jne
jl
es
mov
push
or
test
mov
fnstsw
jle
inc
cmovns
in
mulb
mov
imull
and
xchg
mov
sti
adc
dec
pop
xor
mov
bound
lahf
les
dec
jnp
adc
sub
ja
inc
fstpt
inc
std
in
jp
out
nop
pusha
sarb
fs
jmp
mov
fidivrl
mov
push
inc
mov
mov
lret
jo
jmp
dec
mov
cli
xchg
lea
subb
mov
in
and
mov
jl
out
xor
lret
inc
cmpsl
dec
pop
add
push
add
mov
push
orb
pusha
leave
pushf
pushf
dec
dec
movsl
scas
dec
inc
enter
in
push
push
clc
and
xchg
sub
lods
sub
xor
out
sub
scas
iret
and
out
jge
mov
jns
leave
and
mov
sahf
fs
dec
lcall
jmp
jno
push
xchg
nop
pop
sbb
test
jae
mov
or
fcoml
xchg
inc
dec
push
ss
and
adcb
ljmp
pop
in
mov
pop
dec
or
sbb
mov
sub
mov
push
fidivrl
jmp
fbstp
inc
mov
push
or
xchg
jle
enter
pop
je
sbb
stos
xchg
or
jb
popf
imul
aam
ja
xor
pop
insb
add
and
loop
push
xor
arpl
test
push
das
test
cmpsl
cmovl
push
mov
dec
and
cld
inc
xchg
xor
cwtl
pop
dec
mov
sub
ret
xor
and
push
xchg
dec
outsb
jg
insl
add
add
dec
aad
push
gs
aas
push
lds
aaa
test
add
or
jl
cmp
add
pusha
stos
jle
imul
sbb
inc
push
jge
adc
addr16
pop
lods
pop
test
popf
dec
jmp
sahf
ret
pop
push
cmp
andl
pop
das
cwtl
sub
mov
rolb
xchg
mov
cmp
jl
adc
fucom
loop
out
jnp
push
mov
mov
jecxz
mov
in
mov
or
sahf
mov
lods
fs
sbbl
push
mov
fs
pop
ljmp
rolb
std
into
movsb
mov
lock
inc
jle
cld
xor
mov
ds
cltd
movsl
inc
inc
jg
cmp
sti
mov
imul
test
movsl
mov
ja
add
ja
leave
mov
outsb
pusha
xchg
repnz
jmp
out
inc
leave
jl
push
mov
sti
test
into
lcall
rol
sarl
mov
iret
cli
xchg
fbstp
out
shlb
xlat
inc
adcl
pop
daa
stc
xlat
dec
cltd
push
repz
std
imul
popf
add
mov
addb
push
lea
dec
jecxz
mov
lcall
xor
stos
lods
out
mov
jae
dec
jne
add
adc
mov
cmp
lods
sub
pop
mov
stc
or
or
imul
adc
dec
lds
mov
and
dec
sub
add
pop
shl
fdivp
dec
sti
jo
in
cmc
push
or
and
cmpsb
movsl
je
test
mov
xor
cmp
add
cmpb
xlat
push
fimull
fcmovb
mov
fdivrl
sbb
mov
push
dec
pop
adc
sub
xchg
mov
shlb
loope
movsb
adc
xor
fs
call
sbbl
and
or
stc
ret
inc
jbe
movsl
lcall
fsubrl
jle
sbb
pmuludq
mov
int
mul
fldcw
in
andb
sbb
divl
les
stos
inc
push
push
mov
loopne
adc
test
ljmp
cmp
and
xadd
test
and
popf
xor
jecxz
mov
mov
mov
jecxz
fimull
xchg
test
pop
sub
filds
stos
int3
mov
dec
sub
push
sub
hlt
ficompl
add
adc
xor
adc
mov
aad
jp
sbb
add
push
xchg
mov
iret
daa
sbb
popa
pop
fdivrs
xor
and
dec
repnz
and
imul
dec
in
jbe
adc
mov
mov
dec
daa
add
test
sbb
pop
xor
mov
inc
in
dec
imul
jb
push
pop
push
test
mov
addr16
mov
cld
hlt
jecxz
or
fisubrs
stos
les
nop
lods
dec
jae
cmpsb
mov
pop
jno
sub
add
popf
dec
out
or
mov
jecxz
pop
out
dec
enter
inc
sub
push
mov
dec
outsb
cld
repnz
sbb
or
sbb
sbb
adc
aaa
movsb
sub
fst
lods
pop
shl
cmp
mov
in
out
aaa
sub
lret
jmp
xchg
xchg
ret
out
and
adc
ljmp
rol
fabs
ffree
pop
nop
fcomps
push
es
imul
hlt
push
dec
je
lret
jge
pop
jmp
mov
repz
inc
out
ss
mov
xor
iret
shll
mov
push
sub
aaa
mov
cli
stos
dec
loop
loop
mov
out
inc
xchg
dec
add
sub
pusha
mov
dec
data16
lcall
insl
pop
mov
or
jmp
aam
sub
mov
lret
sub
inc
sahf
lods
and
inc
jg
lods
andb
popa
mov
cli
pop
and
or
loop
adc
sbb
out
jmp
sub
cmp
mov
rcrb
loopne
pop
push
xchg
cmp
jle
data16
fdiv
jp
cmp
jae,pt
push
fs
lods
in
adc
out
ret
inc
clc
orl
scas
xchg
pop
insl
jo
pmaxub
jae
jge
jl
xor
loopne
xchg
pop
push
or
inc
sub
fcoml
push
and
or
fsts
loop
push
popa
pop
sub
scas
add
fs
mov
mov
js
out
pop
xchg
jo
fistpl
sbb
andl
rcrl
jmp
sbb
mov
pushf
and
xor
add
subb
pop
inc
jle
hlt
lret
movsb
popa
adc
mov
leave
inc
repz
jl
adc
or
fs
jo
dec
and
ret
mov
movb
jo
mov
and
daa
aad
inc
imul
lahf
daa
push
adc
shll
insl
mov
adc
shll
scas
das
sbb
pop
jno
sbb
pusha
pop
loope
pop
ret
sub
sub
pop
stos
pushf
mov
pushf
xor
xor
mov
lods
mov
mov
das
mov
push
cmp
dec
xchg
inc
sti
jmp
rcl
dec
adc
gs
jns
jno
mov
fnstcw
sbb
repz
push
sbb
cmpsb
pop
sbb
mov
fs
ret
mov
fstps
fildl
iret
mov
mov
mov
sub
movsl
iret
mov
std
loop
push
jp
stos
xlat
adc
pop
insb
push
mov
inc
ret
add
cld
cmp
dec
scas
sti
sbb
dec
movsl
jg
push
jmp
fbstp
loop
lcall
cmpsb
push
mov
clc
jnp
sbb
outsl
dec
fwait
inc
cli
incb
out
fisttpll
push
cli
imul
or
push
ret
mov
cmpsl
mov
jno
bound
sti
mov
pop
out
faddp
loopne
loopne
es
mov
and
jae
scas
inc
call
call
add
xchg
jg
out
ret
and
mov
clc
imul
shrl
insb
jne
inc
add
mov
mov
push
add
data16
das
mov
gs
jmp
sahf
ja
xor
in
sahf
outsl
insb
in
js
testb
mov
into
dec
xor
or
fwait
lcall
lock
push
or
fstpt
cli
cmp
test
rorl
rcr
imul
cmp
jg
inc
pop
and
xor
dec
adc
mov
bound
mov
and
jo
xor
test
inc
cltd
fdivr
jo
mov
sub
repz
xchg
aam
cmp
mov
sar
push
sbb
test
lcall
movsb
popf
mov
aam
push
bound
jp
pushl
daa
decb
mov
mov
ds
aam
es
xchg
push
add
inc
mov
je
test
mov
bound
mov
adc
imul
xchg
addr16
scas
mov
xor
pop
mov
pop
testl
xor
pop
fstl
insb
loopne
out
pop
lods
aaa
in
mov
into
mov
mov
xchg
or
mov
in
push
andb
sbb
cwtl
inc
pushf
pop
iret
cmc
pushw
xor
push
test
mov
inc
mov
cmp
das
ja
pushf
loope
cmp
out
xchg
aam
push
lcall
loop
mov
shlb
cli
fmuls
in
mov
adc
cmpsb
jge
imul
notl
adc
cmp
mov
mov
test
lret
arpl
xlat
push
and
pushf
mov
push
cmp
pop
scas
ljmp
subb
xor
mov
insl
mov
inc
push
mov
cmp
mov
fisttpl
lret
xchg
rcrl
cld
xor
imul
jge
fildl
enter
stc
js
push
push
in
xor
xor
mov
sub
mov
and
add
dec
test
inc
mov
sbb
xchg
mov
fnstcw
sub
sbb
rcll
jle
sub
test
mov
pop
push
lret
cmc
loopne,pn
call
loope
sbbl
push
mov
push
pop
mov
bound
je
loop
loope
and
cltd
dec
pop
mov
mov
cmp
and
dec
nop
fsubrs
and
pop
and
stos
lods
mov
das
pop
and
test
cld
out
insb
sub
adc
push
gs
sub
adc
mov
data16
aad
loopne
jle
stos
cmp
sahf
subl
cmp
ss
dec
xor
xor
sub
outsb
enter
xor
mov
mov
aaa
stos
call
push
pop
inc
xor
push
push
jecxz
cmp
outsl
negl
dec
je
int3
add
mov
fisttpll
xchg
lock
call
mov
std
inc
imul
or
jge
mov
dec
aaa
fldln2
push
out
xorb
jbe
xor
inc
jne
xchg
cmp
or
sub
push
pop
popa
mov
int
add
inc
mov
and
cli
jne
xchg
cld
cmp
jmp
or
pop
nop
push
cld
enter
pushf
mov
stc
or
fwait
cwtl
mov
ja
aam
mov
gs
sbb
mov
adc
fiadds
pop
loopne
popa
leave
subl
hlt
jnp
scas
sbb
fistpl
sub
dec
je
data16
and
or
fsts
jno
push
jb
sarl
add
negl
mov
mov
jnp
adc
push
mov
ds
dec
pop
ljmp
xchg
adc
call
ja
mov
std
iret
dec
pop
jb
add
push
xor
pop
arpl
imulb
or
push
sub
pop
pusha
adc
jl
cmpsl
imul
stc
mov
test
mov
and
fcoms
adc
jno
test
sub
imul
stos
ret
insb
adc
jp,pt
call
push
mov
xchg
xor
and
sbb
jecxz
std
lret
mov
fcmovb
xlat
repnz
mov
stc
jp
popf
lods
dec
imul
imul
sbb
daa
lret
push
push
rcrl
lcall
fisttps
mull
enter
sti
mov
mov
pushf
xchg
and
adc
popa
or
ja
int3
mov
cmpsb
pop
adc
test
xlat
jecxz
addr16
jnp
xchg
xor
test
push
adc
das
stos
mov
ficompl
and
addr16
shr
add
jl
add
push
pop
test
int3
test
pop
outsl
mov
stos
cmp
adc
fisubl
dec
xor
out
sarb
or
decl
test
jno
adc
das
jne
cmpsl
mov
xor
in
int
movsl
pop
jae
push
xchg
jge
rolb
lahf
inc
lds
sti
push
inc
mov
mov
sbb
inc
mov
mov
stos
je
or
mov
and
add
les
push
cmc
jae
ffreep
adc
or
xchg
push
iret
mov
leave
mov
mov
add
clts
popf
scas
mov
push
nop
cmpsl
or
jb
jmp
movsl
push
sahf
leave
test
mov
pop
mov
enter
movsb
xchg
push
scas
stos
adc
jecxz
xchg
imul
lods
jp
pusha
pop
repnz
mov
mov
sub
outsl
adc
ret
pop
lret
fsubrs
pop
push
sub
and
scas
xchg
popa
jo
adc
fmull
jno
push
sub
pop
or
pop
dec
fsubl
jecxz
push
imul
jmp
sbb
stos
stos
sub
dec
out
outsb
call
push
addr16
fwait
mov
jns
rorb
push
xor
std
shrb
mov
jmp
sbb
ror
pop
jge
out
xchg
dec
xlat
push
jg
sbb
sti
or
or
test
imul
loop
dec
mov
mov
fmull
xlat
std
or
adc
xchg
shr
cmpsl
sub
sbb
lods
fstps
cld
jl
orl
cmc
pop
fcmovbe
or
mov
dec
inc
push
jg
jbe
fsub
outsl
xchg
pop
aad
jg
push
ljmp
adc
add
mov
mov
mov
ret
dec
adc
jmp
mov
adc
pop
lretw
sbb
ret
sbb
adc
icebp
sub
into
mov
sub
lret
pusha
fimull
test
jne
andb
mov
dec
add
insb
ss
cmp
mov
sbb
cmp
push
int3
jno
cmp
popf
roll
and
mov
adc
bound
dec
and
mov
cmpsl
pushf
mov
jg
jge
jge
or
jae
movsb
xchg
movsb
sbb
shl
call
pop
sar
mov
adc
lods
loope
out
dec
ret
in
mov
push
inc
inc
jo
js
repz
cld
mov
daa
dec
stos
jae
pop
xchg
xchg
test
sub
dec
jae
lret
mov
lret
gs
jbe
clc
loop
cmp
mov
xchg
dec
inc
arpl
add
in
cmp
mov
sub
inc
pop
add
daa
lock
or
push
xchg
les
xor
push
icebp
das
jo
cwtl
jae
mov
jecxz
sbb
push
jecxz
sbb
adc
push
sub
xor
sbb
lret
lea
xchg
sbb
mov
imulb
sub
fisubrl
cmc
inc
sti
insb
dec
data16
das
mov
and
xor
les
dec
mov
cs
inc
shrl
cmp
enter
jmp
test
addl
lea
test
scas
aam
jo
inc
decb
lock
pop
mov
test
loopne
cmp
push
sti
fs
push
aaa
and
popf
push
add
xchg
cs
int
mov
pop
mov
dec
dec
cmp
pop
sbb
pop
xlat
xchg
jb
push
jno
mov
insb
loope
inc
and
adc
test
es
adc
lcall
sbb
push
fstps
orl
cmp
xlat
push
inc
push
dec
xchg
mov
int
mov
jo
sbb
gs
movsb
outsl
push
lahf
xor
flds
ss
stos
cwtl
pop
aas
sub
sub
sub
jecxz
call
jge
sti
lret
sub
cmpsb
loopne
leave
cli
pop
sub
jae
sbb
mov
pop
sbb
push
inc
xor
lret
xor
xor
add
dec
xor
mov
jns
mov
decl
cmpsb
or
fcoml
pusha
test
lods
daa
in
sbb
lahf
sub
iret
pop
and
adc
jnp
daa
and
test
in
test
jo
xchg
sarb
mov
mov
push
xlat
mov
mov
imulb
hlt
pop
sarb
adc
jmp
and
cmc
roll
cmpl
mov
mov
shl
cmc
xor
jecxz
or
add
sti
jne
add
aam
pop
push
lods
add
nop
test
add
fsqrt
add
daa
imul
movswl
andl
gs
or
dec
add
fs
int
cwtl
mov
jp
and
jecxz
pop
and
push
cli
stc
or
fstpt
dec
inc
xorb
scas
cmpsl
jnp
out
lods
mov
icebp
insl
inc
fdivrs
jmp
push
inc
cmp
sti
jbe
psrad
insb
adc
fisubl
ret
mov
out
inc
pusha
shrl
jle
std
sahf
int3
xor
addps
add
pushf
jg
mov
xlat
adc
inc
pop
sub
or
mov
xchg
in
jmp
or
and
cltd
or
ret
js
arpl
pop
fiaddl
pop
cmp
lret
movsl
hlt
pop
adc
sub
cmc
xor
dec
push
push
or
sbbb
inc
xchg
xchg
popa
mov
aaa
or
and
dec
lods
mov
bound
shll
jne
das
mov
xor
lods
sub
xor
sub
jp
repnz
jmp
nop
push
dec
fstpt
sub
mov
and
rcl
into
imul
clc
cli
stos
ja
push
xchg
jp
cmc
gs
add
sbb
lret
ret
xchg
jno
push
lds
das
xor
test
adc
lock
es
stos
fwait
xchg
stos
std
mov
shll
pop
pushf
in
gs
scas
jne
call
cld
jp
mov
repz
test
std
jge
push
stc
repnz
sub
fs
in
mov
xor
mov
mov
cmp
push
cli
sbb
mov
sub
insl
push
fdivrs
insl
adc
int3
cmp
add
and
jl
pop
test
out
fstpt
rorl
filds
pop
sub
and
daa
fsubr
push
pop
dec
xchg
cld
jne
add
ljmp
maxps
int
xor
shll
push
call
subl
stos
out
jns
cmpsl
pop
sbb
push
xchg
pop
xchg
stc
jb
inc
cwtl
inc
movsb
xchg
pusha
loop
mov
mov
and
movsl
adc
pop
add
idivl
pop
mov
hlt
adc
enter
inc
ret
int
mov
jne
adc
jae
xchg
push
scas
jb
mov
mov
sub
out
pop
pop
cwtl
sub
push
stos
iret
cmpsb
xor
loop
push
popa
out
mov
xlat
xchg
scas
lret
ffreep
jge
lods
rclb
xor
or
mov
sub
pushf
mov
sub
test
jp
pushf
push
in
movsl
jbe
fdivrs
pop
hlt
inc
push
adc
cmc
data16
xchg
add
pop
mov
mov
scas
int
mov
aaa
ljmp
jae
pop
cltd
cmp
mov
push
ret
lret
stc
shrl
pop
jb
out
xchg
pop
jae
mov
outsl
lahf
cmp
imul
lods
les
in
adc
jb
sahf
leave
xor
sbb
adc
imul
or
ret
jecxz
mov
adc
jl
or
andb
xchg
hlt
jns
test
cs
faddl
mov
xchg
addr16
push
popl
cmc
nop
pop
and
inc
mov
mov
and
out
and
scas
push
add
sub
fisttps
and
scas
inc
lahf
neg
sbb
loopne
mov
orb
xor
movsb
fpatan
sbb
lds
out
cltd
inc
lods
adc
push
dec
push
lret
int
outsl
test
dec
scas
or
jbe
shll
andb
add
mov
cmp
mov
mov
les
leave
insl
clc
or
cmp
xchg
negb
shrb
sub
jp
and
in
pusha
mov
inc
mov
jne
mov
add
fisubrs
sbb
jmp
or
push
lea
cmp
int3
jae
pop
adc
je
adc
dec
stc
dec
cmp
or
ret
fiadds
daa
or
cmpsl
mov
repnz
pop
call
xchg
cld
gs
repnz
xchg
test
sub
or
mov
push
adc
or
or
aad
and
ds
ret
movsb
mov
xchg
pop
xchg
aad
pop
jne
adc
adcl
push
iret
fnstenv
pop
mov
sub
test
fldt
ljmp
mov
mov
into
aaa
cmp
test
icebp
dec
jmp
xor
sahf
sub
cmp
sub
xor
push
dec
pop
in
push
ljmp
mulb
jmp
pop
sub
ja
jnp
fstp
and
rolb
nop
mov
shlb
call
cmp
loop
mov
jp
sub
mov
pop
lods
aas
fmuls
mov
aaa
icebp
rol
pop
xchg
jg
jnp
imul
ret
mov
popf
xor
cs
push
lret
xchg
lods
es
sbb
imul
jbe
cmp
xlat
mov
fucom
pop
fidivrl
push
or
je
repz
cld
imul
rcrb
dec
and
cwtl
icebp
sbb
fdivrs
movsb
add
les
pushl
es
int3
data16
mov
mov
push
test
jl
jg
xor
adc
mov
cmpsl
cltd
or
add
cli
pop
push
adc
xchg
pop
push
lods
out
shrl
mov
repz
fbld
popf
out
pop
mov
jp
inc
or
or
inc
enter
fs
jae
pop
cli
xchg
add
and
bound
lds
pop
jno
test
popa
adc
leave
sti
les
xor
mov
aam
es
scas
call
mov
mov
push
aam
add
add
dec
lds
les
jp
sub
arpl
roll
jmp
push
insb
lret
pusha
ret
out
jle
xchg
push
jbe
das
addr16
jp
rcll
mov
das
je
cmp
adc
enter
jb
push
and
push
idivb
hlt
mov
sub
subl
rolb
lock
sarl
inc
scas
cmpsb
sti
and
test
dec
mov
gs
js
rcrb
push
addr16
out
popa
dec
sbb
adc
fistl
mov
push
stos
mov
pushf
popf
sbb
das
cwtl
call
mov
jmp
dec
movsl
push
push
daa
dec
negl
mov
lcall
nop
and
push
and
lahf
xchg
push
fcomps
sub
and
jl
ret
mov
or
and
sub
cmpsl
and
sub
stos
jp
test
jne
jmp
jnp
incb
je
mov
hlt
roll
loop
bound
repz
inc
push
aaa
inc
xor
ret
orl
cwtl
lods
imul
jmp
mov
cwtl
xchg
aad
lock
int
adc
dec
jp
shrl
ja
mov
into
int
das
fimull
pop
push
lret
dec
mov
jb
cmc
in
mov
push
adc
loopne
imul
jbe
sub
loope
sub
jp
mov
dec
sub
xorb
push
shlb
adc
inc
mov
push
fcmovbe
cmp
aaa
fnsave
or
int
sbb
iret
mov
mov
jns
arpl
in
in
adc
or
lcall
mov
clc
adc
sbb
jae
mov
out
in
cmp
xchg
lods
jno
jp
xor
mov
and
mov
out
repz
pop
psubsb
or
cmp
dec
lcall
xor
pushl
imul
push
adc
push
mov
jg
push
jmp
stos
addr16
je
sbb
xchg
lds
dec
lods
mov
mov
scas
pusha
sub
sarb
pop
movsl
push
add
xor
cmp
mov
sbb
in
and
mov
fs
dec
scas
loope
mov
cld
inc
lret
imul
arpl
fdivs
jns
add
stc
xchg
sub
in
mov
adc
mov
nop
cmpsb
inc
lods
cmp
je
mov
sub
bound
push
lock
adc
jp
mov
pop
pushf
ret
mov
xchg
cld
adc
orl
sub
xchg
pop
in
in
adc
mov
int
inc
sub
mov
jae
mov
jg
loopne
mov
fs
sub
test
imull
mov
dec
adc
aad
adc
test
stos
inc
outsb
mov
lcall
dec
test
mov
xor
ret
jno
clc
pop
inc
sbb
movsl
movsl
dec
ror
fldcw
adc
mov
loopne
mov
jns
cmp
repnz
dec
pop
sub
iret
pop
jg
pop
rorb
fldenv
shlb
sub
scas
mov
xor
mov
in
int3
inc
maxsd
xchg
push
add
orb
push
xchg
add
jge
or
insl
pop
fidivs
push
mov
out
in
cs
sub
cltd
lods
dec
inc
or
rorb
shr
fwait
xor
xor
xor
xchg
dec
pop
and
adc
dec
insb
out
mov
loop
sbb
rclb
out
and
xor
fisttpll
call
jmp
cltd
popa
push
and
push
dec
xchg
xchg
sti
or
clc
jo
pop
cmp
imul
lods
sarl
mov
xchg
movsl
inc
xor
mov
xrelease
jns
or
pop
xor
sbb
pop
lret
lret
jne
mov
mov
hlt
jno
loopne
or
cwtl
popf
outsl
push
push
ret
pusha
pusha
repz
outsl
mov
test
mov
subl
movsl
and
inc
out
cmp
pusha
push
sti
jg
jno
jge
xor
xchg
sub
lret
sti
inc
jns
push
jno
gs
fcoml
jo
enter
movsb
rcll
repnz
dec
out
cmpb
sbb
mov
adc
xor
inc
sub
sub
test
pop
sti
dec
sub
fistpll
sbb
test
das
or
mov
push
cmpl
or
sbb
dec
les
movsl
xchg
xor
or
pop
rorl
add
insb
mov
mov
push
pushf
jb
mov
push
jl
lret
out
sbb
or
xor
inc
cmp
xor
sbb
cmp
ss
or
arpl
clc
mov
sbb
std
cmpb
fs
ss
jle
xor
cmpsb
ficomps
or
idiv
rcrl
lret
pop
dec
jl
loope
int3
iret
cmp
adc
mov
xchg
pop
lods
iret
int3
and
lea
das
shll
mov
dec
push
push
lds
jns
movsb
push
inc
mov
add
mov
push
out
or
sahf
ss
fstpl
sub
bound
pop
outsl
popa
mov
jg
shrb
daa
and
stos
mov
pop
addr16
jge
sub
orb
adc
fsubrs
lods
pusha
pop
jns
adc
insb
add
data16
cmpb
and
push
pop
push
aaa
adcb
add
shll
clc
inc
pop
jne
mov
add
adc
sbb
in
dec
test
repnz
test
and
xchg
in
aam
jp
push
repz
pop
jnp
lea
aad
iret
out
aas
push
pusha
shlb
or
jp
inc
popa
adc
aad
insl
jb
js
jecxz
mov
or
push
rcrl
pop
lret
je
insl
popf
pop
pushf
jle
or
and
adc
or
adc
pop
xor
adc
cmpsb
pop
clc
fcoml
popa
rcrl
mov
push
sub
sub
addr16
out
in
jnp
leave
jbe
xor
and
sar
push
mov
xchg
shlb
xor
pusha
ja
outsl
mov
movsl
adc
pop
mov
das
inc
imul
mov
loope
sbb
mov
jmp
push
in
or
in
fstpl
cli
inc
test
push
mov
adc
imul
aas
movsl
enter
fisubl
loop
dec
mov
add
lods
xor
xchg
mov
fcomps
add
jo
dec
lock
xchg
jbe
or
sbb
pop
inc
jo
and
cld
ret
dec
inc
dec
arpl
dec
and
daa
mov
push
xor
adc
shrb
mov
adc
mov
test
imul
lods
das
int
jge
shll
scas
aad
fstpt
push
cli
ret
aaa
cmpsl
add
leave
insb
mov
cmpb
ljmp
icebp
pop
jmp
fldenv
xlat
fs
lds
xchg
fdivs
push
fnsave
les
xor
enter
test
add
jnp
xchg
fisubl
jp
jnp
dec
mov
out
pop
mov
dec
xor
xor
cld
cmpsl
pop
test
add
int
push
push
into
imul
loopne
das
cmp
mov
cmp
hlt
or
add
movsb
mov
inc
insb
cmp
jl
add
sbb
push
cwtl
mov
pushf
pop
rclb
cmp
xlat
test
lcall
and
inc
cli
dec
jg
scas
outsl
or
add
incb
popa
sbb
fiaddl
stos
jnp
daa
push
rol
and
ja
movsb
mov
ss
dec
and
xor
nop
pop
adc
enter
jo
fdivrp
rcl
call
mov
je
pushf
int3
dec
lcall
ja
hlt
lods
jno
in
xchg
mov
add
dec
idivb
inc
fdivrs
pop
push
xchg
pop
add
cmp
dec
xor
pushf
dec
mov
push
and
lret
mov
dec
int
lea
cli
jl
and
push
ljmp
movsl
insl
ds
cmpsb
dec
adc
xchg
fidivs
mov
in
add
ss
enter
push
ret
lods
lds
pop
add
lahf
push
in
mov
ds
fidivrs
jle
xchg
push
filds
sbb
in
mov
cmp
imul
outsb
mov
cwtl
mov
mov
test
xchg
popf
xchg
cmc
fistps
ret
mov
xor
aad
and
cs
xlat
xchg
push
push
or
clc
sbb
pop
int
in
or
test
mov
scas
rorb
popa
lcall
outsl
adc
add
aad
enter
mov
sbb
stos
sbb
sub
mov
cmp
add
in
adc
jb
add
sbb
imul
xlat
adc
xor
inc
test
xor
mov
fcmovnb
cld
stos
sub
lock
in
jmp
enter
ret
mov
adc
loop
in
adc
cmp
jo
in
js
mov
fisttps
ds
push
sub
mov
lea
jecxz
jae
ds
shr
jnp
xor
cld
out
in
bound
pop
pushf
push
cwtl
imul
sub
lret
pusha
pop
pop
pop
lods
inc
jmp
xorl
sbb
xchg
inc
lahf
stos
xchg
xchg
das
repnz
scas
hlt
out
dec
in
jl
mov
jle
out
stos
test
and
mull
jae
xchg
fldenv
adc
loope
insl
bound
lret
das
pop
gs
or
mov
mov
out
sbb
rcrb
xchg
shr
add
adc
js
pop
jno
inc
and
je
sbb
inc
aas
add
pushf
mov
repz
jmp
adc
mov
mov
inc
cmp
mov
mov
stc
enter
jne
int
nop
jns
xchg
mov
pushf
cmpsl
fcomps
test
and
sub
out
pop
imul
inc
mov
pushf
cmp
cmp
xchg
pop
cltd
insl
xor
mov
xor
sarl
cld
aas
out
and
test
addb
push
into
mov
push
mov
pop
xor
icebp
or
daa
iret
pushf
insl
cmp
push
test
fistps
pop
bound
sbb
pushf
push
add
cli
adc
mov
inc
rcrb
or
jp
add
aaa
or
add
outsb
jmp
sub
dec
ja
stc
lock
pop
adc
mov
mov
mov
xchg
jg
into
xchg
pop
scas
dec
cmp
pop
cmp
lea
mov
add
xor
mov
xor
xchg
stos
mul
rcr
adc
test
mov
shrb
cmpsb
or
rorl
lods
pop
push
pop
aad
cmp
imul
movsl
divl
push
mov
or
ret
sub
les
jne
imul
dec
mov
xor
pop
and
imul
mov
and
mov
mov
jae
push
ja
paddsb
addl
orl
into
fnstcw
addr16
cmp
sub
and
andl
jmp
cmc
sub
arpl
rorl
lock
xchg
pop
add
pop
call
and
data16
outsb
sahf
lret
mov
shlb
xor
js
cmp
xchg
lods
mov
mul
lds
mov
dec
or
jecxz
cmp
mov
stos
aam
stos
insb
test
mov
sub
inc
mov
mov
cmp
and
ds
adc
cs
jbe
or
aas
mov
mov
pop
loop
fimuls
sbb
subb
daa
pop
mov
in
fst
sub
ret
inc
lds
push
adc
fiadds
icebp
sub
mov
iret
stc
popf
and
test
aam
and
push
lock
mov
js
daa
lea
aas
push
jmp
les
or
pop
ja
lcall
xor
xor
fwait
xor
stc
jb
jno
ss
mov
push
js
repz
imul
movsl
stos
pushf
xchg
push
mov
push
dec
repz
xlat
mov
add
push
call
mov
dec
test
cmp
and
rolb
mov
mov
popa
imul
ja
mov
inc
addr16
movsb
into
lret
dec
cmp
mov
cs
pop
and
daa
cmp
and
and
dec
cmc
out
outsl
mov
pop
imul
ds
pop
jae
roll
xchg
xchg
rorb
xacquire
ja
test
inc
mov
inc
inc
xor
test
call
cli
out
pop
cmpsb
fldenv
sahf
cmp
xor
pop
jnp
jmp
jmp
push
insb
insb
xchg
mov
gs
bound
mov
sbb
popl
clc
daa
lcall
mov
lods
rclb
fsubp
mov
add
es
and
dec
lret
push
iret
out
mov
in
jg
imul
cmp
pop
insl
sbb
xchg
mov
cmpsb
pop
push
adc
sub
fnstcw
push
pop
in
dec
dec
mov
push
jmp
stos
push
mov
mov
das
jns
lret
ret
cmpsb
xor
sti
jp
adc
adc
cmp
scas
std
fwait
lods
cli
adc
inc
gs
add
mov
mov
inc
cmp
pop
xlat
push
add
repnz
negl
pop
in
push
xchg
xor
push
ret
fwait
dec
ja
fildll
mov
out
cmc
xchg
xchg
repnz
mov
ror
fidivl
iret
sub
test
sbb
pop
add
sbb
adc
test
or
adc
or
stc
icebp
pop
sub
shlb
and
pop
cmp
mov
sahf
loopne
and
addr16
daa
push
mov
lds
add
repnz
xchg
lret
lret
push
jno
fcoml
add
sbb
xchg
push
arpl
int3
lock
pop
mov
cli
lods
shlb
enter
push
cltd
sub
xor
int3
cmp
xor
add
mov
pushf
sbb
enter
cs
jge
neg
fcmovb
or
push
mov
outsl
and
adc
and
mov
jl
sarl
and
and
jne
push
add
push
fnstenv
aas
mov
enter
hlt
or
mov
dec
fidivrl
js
push
sbb
orb
out
sbb
mov
cmp
or
lcall
mov
lret
out
std
xor
inc
sbbl
add
ret
arpl
out
inc
push
xchg
test
pop
xchg
les
jl
les
push
dec
sub
imul
dec
call
sub
ljmp
mov
scas
or
jns
or
pop
mov
adc
jecxz
add
mov
pop
gs
out
roll
sbb
in
sub
ss
addr16
dec
jmp
rolb
add
fisubl
daa
jnp
push
add
sub
mov
mov
xchg
and
inc
xchg
sub
push
cli
mov
sub
pop
jbe
sub
mov
sbbl
fsubl
mov
sub
push
cmp
push
jecxz
les
repnz
and
sub
insl
push
add
sub
pop
mov
mov
sub
jb
pop
scas
mov
and
cmp
push
push
mov
sub
sub
adc
pop
cmp
out
mov
mov
add
xlat
lea
xor
xchg
js
ret
ljmp
pop
pop
iret
dec
test
xchg
xchg
add
push
and
shll
orl
jae
or
mov
and
imul
mov
sub
inc
xchg
push
sbb
cld
jb
mov
ja
lods
test
in
mov
bnd
xchg
push
icebp
test
bnd
adc
sub
cmpsb
mov
fs
add
dec
imul
test
pusha
andl
inc
stc
ljmp
xchg
shr
scas
xchg
ja
mov
jge
pop
lds
lahf
cmp
insb
mov
ss
movsb
sub
ret
in
movsb
inc
fprem
xchg
ficoml
and
sub
lea
rclb
in
add
jecxz
cld
mov
dec
inc
in
data16
js
das
jb
sub
mov
add
test
sub
ret
push
mov
ljmp
scas
je
adc
ljmp
sbb
add
and
push
pop
xor
sbb
cmp
mov
inc
ret
mov
inc
jne
enter
jno
mov
and
lcall
movsb
adc
xchg
dec
ret
loope
pop
cwtl
das
and
cli
pop
cld
mov
cmp
add
call
or
push
outsl
cmp
inc
stos
mov
imul
mov
pop
fs
pop
cld
jg
sbb
xor
xchg
test
jbe
out
dec
xchg
push
xor
outsb
xor
pop
or
sbb
stos
and
xchg
int3
push
cmc
pop
adc
sub
aad
out
repz
ret
ds
subl
fstpt
fdivr
scas
push
mov
lcall
mov
mov
imul
cwtl
mov
call
dec
jl
push
mov
repnz
mov
push
dec
ret
add
int
mov
stos
dec
pushf
stos
sub
loop
cmpsb
xor
jb
or
jno
fwait
rcrl
out
jge
sub
fwait
inc
dec
rcrb
std
cmp
jo
mov
cmp
and
jle
ret
push
popa
mov
jo
sbb
jmp
sub
lahf
inc
mov
mov
mov
addl
jmp
inc
dec
pusha
cmp
repnz
ja
mov
pop
mov
lcall
imul
mov
adc
push
cmp
jae
lds
jns
sub
cmp
push
dec
inc
xchg
and
popf
xchg
loop
loope
mov
roll
ret
in
cmp
lock
xchg
das
pushw
movsl
sbb
fwait
into
sbb
and
lds
adc
loope
lods
ret
idivb
je
in
pushf
adc
std
xorl
mov
push
imul
ret
outsl
lock
insl
pop
xlat
test
aas
nop
mov
scas
stc
dec
pop
jl
sbb
fs
in
and
popf
xchg
ret
mov
pop
dec
loopne
dec
popf
rolb
imulb
pop
mov
and
mov
xor
add
add
fs
jbe
jae
mov
and
insb
lods
in
adc
push
mov
sbb
popf
dec
jmp
cmpsl
mov
adc
sub
jp
sti
jbe
xor
sub
jns
orl
adc
test
daa
push
and
jp
iret
or
mov
mov
pop
out
push
sub
or
test
mov
lahf
loop
shll
dec
loopne
std
inc
dec
lds
inc
mov
ss
ss
push
hlt
adc
mov
jo
mov
pop
or
dec
and
movsl
dec
rcrb
insl
jge
icebp
jns
mov
arpl
addb
outsb
xor
ljmp
sub
or
mov
mov
call
out
pop
inc
push
push
adc
lods
xchg
test
pop
aam
jae
in
sub
inc
cld
ds
cltd
sub
push
xlat
mov
sub
cmp
xchg
cmp
push
pop
mov
cli
jg
cmp
movsl
ss
loop
lahf
push
sub
addr16
pushf
mov
frstor
lods
cmp
mov
mov
imul
inc
loope
push
or
or
push
iret
dec
imul
mov
imul
pushf
xchg
enter
lock
mov
stc
and
xor
mov
cld
repz
rorl
jae
jg
hlt
stc
outsl
movsb
js
divb
and
ljmp
orb
or
in
adc
ljmp
push
fnstenv
xchg
fucom
stos
dec
je
leave
and
cmp
jb
jbe
pushf
push
lea
gs
ds
insl
cmp
testl
mov
jg
mov
leave
and
imul
cmp
xchg
lcall
dec
sbb
dec
add
stc
lods
jecxz
xchg
sbbb
sub
and
inc
fcom
in
addr16
jle
sub
fdivrl
push
stos
cltd
mov
fidivrs
jmp
decl
data16
jne
adc
mov
jp
clc
bound
jnp
lods
xchg
js
hlt
loop
dec
sbb
aas
jecxz
data16
mov
push
je
iret
clc
iret
loop
mov
mov
jbe
xor
data16
jbe
stos
pop
dec
loope
sbb
movsl
jb
test
mov
inc
adc
sbb
in
and
dec
xchg
xor
pop
rcrb
fcmovnbe
push
mov
ss
les
call
aam
pop
test
stc
xchg
add
nop
loope
sti
cmp
mov
shlb
arpl
loop
mov
push
sbb
cli
popa
test
xchg
mov
add
inc
mov
test
or
or
sbb
inc
mov
int
pop
or
hlt
fwait
mov
roll
push
xlat
sbb
ljmp
jg
cs
lcall
adcb
shll
shrb
ret
js
sbb
rorb
push
cmpb
push
pop
data16
push
cmp
inc
jbe
movzbl
push
test
inc
outsb
jns
push
adc
xchg
repnz
aad
and
popa
aas
idivl
adc
jg
popf
mov
xchg
lret
rcll
jae
xchg
inc
je
ss
inc
imul
pop
test
scas
mov
mov
mov
jno
adc
call
mov
mov
xchg
inc
add
test
lahf
jnp
sbb
push
lahf
jns,pt
mov
fs
pop
mov
ret
jbe
mov
ljmp
jnp
xor
test
and
test
add
push
mov
ds
testb
in
imul
xlat
jnp
add
cli
jne
sub
sbb
ret
mov
icebp
test
push
adc
xchg
es
mov
clc
ss
jnp
movb
lcall
inc
push
ret
enter
mov
sbb
jb
pop
mov
imul
pushf
cmp
xor
sahf
fadds
es
and
jo
std
sbb
mov
inc
shlb
xchg
leave
jb
xchg
jmp
xor
shlb
mov
and
sqrtps
xchg
push
int3
imul
jg
or
shrb
add
ret
sub
sub
cmc
xor
test
dec
call
in
icebp
jnp
call
cmpsl
int
or
call
js
dec
or
inc
std
xor
arpl
jle
add
mov
test
xchg
pop
inc
stc
mov
dec
fmull
hlt
popf
mov
lcall
adc
scas
xchg
sbbl
and
sbb
popa
push
mov
inc
xor
inc
lds
dec
push
scas
pop
aas
gs
dec
or
push
ds
or
imul
out
pop
adc
jge
std
jbe
aam
iret
add
sets
mov
jge
jo
fistpl
mov
stc
add
vmread
fwait
xchg
pusha
dec
cmp
popa
inc
mov
stos
arpl
jle
andb
dec
xchg
jge
inc
push
and
jb
in
push
outsl
sub
data16
movsb
out
ljmp
push
icebp
pop
movsb
cmp
pop
adc
fcomps
addr16
dec
mov
xchg
pop
and
fs
stc
cld
mov
push
ljmp
fdiv
xor
imul
xor
xchg
sar
sub
std
lcall
dec
inc
push
stos
and
icebp
out
sbb
sub
enter
nop
xchg
loope
adc
jns
pop
mov
jne
aas
mov
push
das
xlat
stos
cmp
push
or
jmp
shll
adc
push
movsl
pop
add
insl
jmp
cmp
sbb
mov
cmp
adc
pop
inc
scas
sbb
xchg
out
fcmove
adc
xchg
sbb
add
add
pushf
mov
add
sbb
add
or
inc
xchg
mov
mov
sbb
cmpsb
mov
std
add
fdivl
sub
mov
movsb
push
fwait
push
decl
cmpb
pop
mov
inc
cmpsb
sub
jo
lahf
lock
cmc
dec
ret
jae
or
pop
push
pop
orl
jbe
sub
mov
dec
nop
mov
add
push
xchg
jae
adc
sbb
adc
cwtl
mov
pop
dec
loope
addr16
outsb
les
mov
outsl
pop
dec
lret
fmul
sub
fistl
dec
add
fstpl
push
or
int3
push
sbb
inc
jmp
sbb
loop
adc
push
clc
nop
loop
scas
jmp
mov
cmpsb
jns
mov
dec
and
push
js
lret
lock
out
cwtl
sbb
rorl
sarb
fists
pop
pop
adc
pop
and
adc
clc
xor
stc
roll
push
inc
filds
push
test
dec
dec
mov
cmp
roll
arpl
xchg
mov
clc
aam
xor
dec
xor
and
stos
sti
or
loope
clc
daa
into
sub
sub
sub
mov
xchg
sbb
xor
into
in
xchg
mov
cmp
adc
pop
sub
nop
loop
or
mov
sahf
push
ret
insl
inc
adc
rep
mov
xor
add
es
leave
popl
sahf
xchg
inc
loope
mov
add
mov
call
push
dec
add
test
pop
fwait
hlt
les
xor
gs
aas
pop
dec
shrd
outsl
jecxz
pop
xor
in
xor
sub
fistpl
xchg
dec
js
loop
pop
test
dec
adc
add
dec
mov
stos
lods
and
je
push
xor
or
js
or
mov
insl
lea
inc
push
xor
xchg
rcrb
in
pop
aas
in
hlt
cmpsb
cmpsl
mov
cmp
sub
icebp
jno
nop
or
cmp
daa
xchg
repnz
imul
mov
testb
dec
pop
ret
push
movsb
popa
mov
xchg
cmc
loop
mov
pop
inc
addb
xchg
push
mov
jg
rol
adc
iret
test
or
xor
or
and
jo
inc
mov
adc
cmp
add
lods
int
mov
sarl
les
jg
push
lea
loopne
fimull
mov
mov
add
dec
mov
push
pop
arpl
inc
in
and
je
dec
mov
jne
pop
mov
inc
cmc
jb
repnz
inc
cmpsb
pushf
scas
pop
clc
pop
cmc
jge
cmp
pop
adcl
test
and
cmp
mov
stos
stc
jns
jl
xor
adc
add
mov
pop
or
xor
fwait
lea
mov
inc
fistps
jb
ror
mov
and
xorl
mov
int
in
add
aam
fldl
rcl
in
mov
dec
scas
add
pop
std
into
mov
or
mov
xchg
mov
inc
pop
xchg
mov
insl
int3
push
das
xchg
mov
leave
loope
xchg
and
xlat
mov
adc
or
push
movsb
jmp
push
cmc
dec
ret
sub
mov
movsb
mov
test
add
scas
sub
js
test
push
pop
mov
xchg
sub
mov
je
inc
aas
in
sbb
cli
pop
cmc
dec
mov
cmp
cmpsb
cmpsl
daa
jo
push
sbb
data16
aas
mov
jmp
xchg
enter
add
xor
jns
xor
jge
pushf
inc
add
mov
fsqrt
ss
test
mov
imul
out
cmpsb
xchg
or
push
inc
sti
mov
filds
in
out
cmp
push
fimull
pop
out
imul
cmp
or
mov
add
pop
outsb
lock
and
aad
in
mov
mov
stos
insl
ds
ljmp
inc
out
mov
repnz
or
nop
in
popf
pop
mov
inc
outsb
test
ret
jne
mov
enter
sub
sbb
cmc
mov
shl
mulb
xor
pop
lods
sub
inc
and
jno
fisttpl
xor
mov
mov
cmc
jne
jne
popa
push
pop
cmp
push
stc
rorb
xor
xchg
jge
add
xor
flds
pop
loop
jnp
popf
rcrb
cmp
lea
je
xchg
bound
inc
sbb
mov
dec
xchg
sub
inc
mov
jecxz,pn
syscall
lods
cmp
gs
cltd
test
mov
mov
stc
sbb
mov
dec
stos
int3
sub
aam
xchg
mov
aam
mov
dec
pxor
mov
add
out
int3
outsl
and
or
and
js
pop
add
lock
outsl
ror
sahf
shll
mov
in
in
jno
and
sub
ret
sbb
test
cmp
push
mov
pop
inc
adc
icebp
aaa
push
cmp
push
mov
inc
add
push
popa
lock
out
cmp
loope
and
mov
sbb
sub
push
insb
jl
loop
cmp
or
mov
push
cmp
imul
pop
inc
pmuludq
sub
adc
inc
cmp
lcall
or
jo
jns
sub
scas
lret
ss
adc
sbb
xchg
mov
jns
cwtl
mov
imul
jl
dec
push
insb
dec
in
pop
sub
leave
dec
in
lods
enter
mov
les
or
rclb
xlat
in
stos
sbb
and
mov
scas
mov
or
sbb
push
pop
and
lods
data16
sbb
or
adc
jbe
cs
mov
or
mov
adc
dec
push
push
std
push
sub
sarb
test
push
nop
fsubs
mov
notl
out
mov
mov
pop
shll
and
add
mov
pop
jno
aaa
rcll
call
inc
out
les
ja
out
ret
pop
stos
and
and
sti
lahf
arpl
jmp
mov
jbe
arpl
sbb
movsl
lods
or
add
sti
sbb
jne
xor
jp
dec
push
repnz
xor
sbb
arpl
pop
enter
aas
jg
xchg
aas
mov
ficomps
in
mov
arpl
push
dec
je
adc
add
lods
xchg
addb
mov
cli
xchg
xchg
adc
cld
cmc
inc
mov
sub
adc
imul
inc
sub
jl
jae
cs
int
mov
inc
xchg
and
fisubrs
insl
inc
movsb
int3
add
push
dec
and
hlt
pop
jmp
mov
xor
xchg
push
sahf
cmp
mov
push
sub
pop
icebp
loope
ds
cld
cld
fbld
sbb
pop
mov
dec
hlt
cmp
cwtl
cwtl
pop
and
xchg
lret
std
dec
ss
cli
mov
xchg
jmp
push
ja
nop
cmc
cli
pushf
push
je
jecxz
fsubrs
fwait
ret
pushf
es
lahf
shl
pop
cmc
push
scas
sarb
cs
fucomi
lods
sub
addr16
dec
push
add
add
mov
mov
push
inc
add
addl
xchg
sar
jl
ret
xor
jmp
sub
or
cmp
push
push
pop
clc
cmp
sti
rclb
mov
jb
scas
xor
movq
push
fildll
jge
adc
ljmp
dec
sbb
pushf
js
rorl
ja
lret
les
xchg
movsl
dec
imul
test
add
mov
mov
sbb
notb
sbb
imul
inc
ljmp
mov
push
repnz
stc
push
daa
jecxz
push
mov
and
xchg
sbb
aad
in
movsb
jmp
and
add
gs
aaa
add
xor
mov
mov
mov
sbb
gs
add
inc
icebp
push
out
sub
xchg
je
and
jge
clc
adc
test
aam
pop
or
addr16
push
add
sbb
lret
cmpsb
loop
fs
scas
out
cs
push
and
dec
andl
mov
sbb
pop
cmpsl
addb
pop
loope
push
pop
mov
popf
movl
popa
fadds
repz
sub
iret
add
push
add
shlb
in
sub
and
sbb
mov
out
sbb
mov
arpl
loope
test
movsb
add
inc
sbbb
mov
push
movsb
fiaddl
dec
jmp
xchg
call
xor
jnp
push
test
dec
lret
cmc
xor
lahf
not
imul
shll
loop
out
arpl
jecxz
dec
imul
and
adc
and
popf
cmpsb
jbe
fs
pop
or
mov
add
movl
in
mov
nop
mov
les
incl
sub
add
xor
jecxz
jmp
cmc
jge
xor
fwait
xchg
fistl
out
mov
sbb
add
push
rclb
jno
push
ret
jmp
pop
jbe
dec
push
mov
ret
sub
fwait
cli
xor
ja
mov
adc
pop
jecxz
fldt
and
pop
and
jns
stos
xchg
jecxz,pn
mov
add
mov
sbb
ljmp
inc
xor
cmpsl
cmp
imul
cmp
mov
outsl
mov
lahf
je
jnp
dec
jns
gs
loop
call
dec
xchg
dec
pop
aam
mov
add
lods
mov
add
and
dec
hlt
mov
roll
mov
add
test
out
jmp
mov
and
je
mov
jl
lods
xor
fs
pop
dec
mov
sub
and
sbb
test
jp
lock
push
or
test
enter
sti
mov
mov
dec
daa
push
or
movsw
fdivs
ja
data16
push
sub
int3
jle
jne
imul
into
inc
xchg
fmuls
loop
inc
cmpl
add
push
fnstsw
push
fcoml
mov
stc
sbb
cli
ds
fwait
mov
lahf
fwait
test
insl
jmp
add
and
sub
adc
push
stc
and
push
mov
sbb
add
push
into
call
and
les
adc
or
lock
adc
rcr
mov
inc
adc
sub
aaa
mov
sbb
pop
dec
adc
pop
inc
xchg
int
mov
sti
mov
subb
clc
push
fdivr
inc
les
sahf
enter
mov
cmpsl
push
fstpl
in
clc
out
xchg
inc
xchg
dec
loope
jbe
sub
outsb
ret
leave
cld
lret
push
popl
outsb
or
jne
arpl
fs
or
mov
dec
mov
adc
addr16
mov
rorb
rorl
loopne
push
rolb
dec
cmpsl
adc
pop
test
clc
or
mov
sub
movsb
mov
mov
dec
inc
les
cmp
fimull
cmp
xchg
add
or
cmp
into
mov
daa
mov
mov
lcall
into
fisubrs
lods
fldl
pop
jo
add
jecxz
inc
mov
sbb
adc
loop
je
or
pop
mov
popa
cmpl
add
sbb
jne
lret
js
fwait
in
in
inc
leave
sbb
sbb
addr16
inc
ss
loope
test
test
sbb
fs
push
scas
js
fists
loope
xchg
idivb
jmp
inc
scas
or
mov
fnstcw
lea
aaa
and
int3
fidivrs
jl
pop
test
ror
arpl
mov
xchg
cli
cmp
shrb
pop
movsl
push
jb
popa
lods
cmp
sub
jo
jp
scas
adc
xchg
sub
in
sub
jnp
out
call
push
xor
push
ljmp
xchg
rcll
sahf
add
sbb
and
jp
fisubs
lock
xor
xchg
jle
in
data16
sub
push
adc
ret
xchg
push
outsl
out
mov
lods
xchg
add
jecxz
fisubrl
xor
push
popf
ret
fwait
xchg
cmp
mov
jns
ret
repz
call
mov
or
in
out
adc
lret
pop
rol
pushf
jns
scas
push
dec
push
into
mov
ljmp
mov
adc
and
pop
pop
aas
xchg
push
mov
and
fmull
cmc
inc
in
shrl
mov
filds
or
pop
sarl
lahf
or
ljmp
add
repz
xchg
stc
mov
pop
loope
mov
xchg
jl
inc
xlat
lret
cmp
faddl
das
mov
icebp
xchg
mov
inc
xchg
jne
mov
xchg
inc
in
pop
shr
aad
sbb
arpl
push
rclb
mov
mov
mov
cmp
testl
cmp
test
sub
ds
addr16
xor
out
imul
push
inc
lock
xor
inc
sbb
cmp
insl
jecxz
aam
mov
sub
mov
mov
jno
rcrb
mov
gs
ja
adcb
sub
test
insl
out
jno
ret
adc
scas
or
cmp
xchg
pop
iret
jmp
push
sahf
sub
xor
out
cwtl
mov
divl
adc
loopne
movl
lret
leave
or
cmp
std
cmp
frstor
cmpb
xchg
cli
cmc
cmpsl
xor
xlat
pusha
xor
xor
shll
mov
mov
lea
in
shll
adc
mov
and
cli
test
loopne
test
dec
cmpsl
into
insl
test
sub
sbb
or
imul
sub
sbb
repz
stc
mov
sbb
ss
mov
orb
xor
aaa
ljmp
push
iret
and
cmp
cmp
sarl
fsubp
idivb
jnp
std
xchg
sahf
jecxz
or
push
cmp
hlt
xchg
bound
in
cmpsb
sbbb
push
sbb
sub
es
jne
cmpsl
pusha
outsl
jbe
insb
test
cmp
pop
inc
and
test
ds
int
push
loope
cmpsl
xchg
sti
les
pop
or
rorb
jle
cmp
push
ljmp
inc
pop
adc
das
push
int3
or
sbb
rorb
and
or
mov
fnstenv
sbb
clc
push
ss
fs
mov
dec
add
jl
dec
push
dec
pop
mov
aad
dec
sbbb
or
test
decb
inc
inc
add
leave
decb
jmp
add
out
fdivrl
fwait
dec
mov
jnp
add
fst
mov
and
dec
sub
lods
dec
sti
cs
pop
sbb
add
add
mov
arpl
mov
imul
push
fstl
inc
je
push
stc
int3
push
lock
in
cmp
cmp
mov
dec
mull
adc
getsec
mov
jg
fdivs
dec
or
dec
add
xchg
xor
ret
lods
cli
sub
and
sbb
inc
outsb
sti
cmp
xlat
movsb
inc
sub
adc
cli
push
cmp
jmp
cmp
pushf
jnp
ja
clc
ds
les
cmp
test
cmp
or
or
dec
scas
aad
inc
lret
sub
pop
into
jecxz
inc
lea
ljmp
loop
ds
dec
popa
push
or
dec
sub
and
or
rcrl
adc
inc
jae
pop
shrl
jg
push
jo
sub
jecxz
sub
add
cmp
repz
cwtl
or
out
xchg
dec
mov
lock
push
cmp
cmpb
jg
jmp
xchg
cmpsl
mov
adc
fdivs
lds
test
out
shlb
xlat
fstl
mov
in
ja
pop
mov
sbb
jae
cmpsb
lahf
ret
push
jl
es
insl
call
daa
sub
push
dec
mov
scas
add
and
repz
cltd
not
stos
mov
iret
mov
bound
mov
test
pop
fstps
mov
js
mov
das
sbb
fsubrs
add
fsubr
push
int
fsts
and
mov
xchg
and
adc
cmp
xor
clc
pop
fidivs
in
xchg
sub
in
mov
dec
mov
dec
out
adc
rcrb
stos
movsl
mov
adc
nop
pop
pushf
jb
push
roll
out
dec
daa
in
leave
cwtl
pop
dec
int
cmp
lock
jo
cmpsb
pushf
lds
mov
xchg
jmp
pusha
mov
stos
out
arpl
notl
daa
push
icebp
push
dec
cmpsl
push
push
xlat
sub
sbb
out
addr16
dec
das
cmc
jne
repnz
out
xchg
ss
loop
rcrl
pop
mov
jmp
and
aas
xchg
lahf
sbb
lea
imul
push
dec
ficoml
and
adc
xchg
jge
pop
movsl
jns
or
xlat
cs
pop
xchg
popf
push
jecxz
movsl
addr16
insb
stos
cmp
adc
lcall
loope
and
in
cmp
push
jae
pop
jg
jp
push
push
repnz
cmp
jbe
outsl
aad
pop
dec
int
add
mov
pop
push
sti
push
xor
fisttpll
dec
or
es
jns
xchg
mov
or
insb
les
insb
mov
cs
andb
mov
gs
jmp
and
mov
sub
mov
add
imul
sbb
fisttps
push
aad
data16
imull
cld
pop
add
and
das
sub
cmp
jns
inc
jno
rcl
nop
shl
cmp
addb
push
insl
mov
jmp
mov
sahf
sub
inc
jmp
mov
push
mov
rcrb
jecxz
pusha
shlb
pushf
xchg
add
mov
arpl
mov
pop
incb
dec
inc
xchg
popf
in
adc
movsb
add
add
fcompp
mov
fnstenv
mov
dec
dec
in
jge
mov
sub
add
jl
les
jge
xlat
fimull
les
hlt
cmpsl
mov
mov
out
adc
es
cmp
ja
fisttpll
aad
jns
in
popf
adc
std
outsb
aas
fwait
xchg
stos
stos
mov
and
and
pop
and
dec
incb
inc
sub
and
and
xor
dec
frstor
stos
iret
insb
mov
enter
je
rcrb
nop
push
jl
sbb
add
fbld
jle
cltd
adc
sub
xor
stos
es
les
dec
push
dec
mov
icebp
sbb
inc
xor
hlt
sbb
cmp
leave
jns
cmp
fldcw
aaa
mov
cmp
jns
push
add
mov
cmp
push
and
ja
sub
popf
add
sub
cmp
fidivrs
cmpsl
sub
push
bound
test
data16
sbbb
cmp
pop
push
jle
cmp
push
pop
bound
idivl
dec
jns
in
and
subb
jp
dec
out
sbb
or
mov
add
rol
and
ljmp
insl
sub
adc
jmp
sbb
jb
push
imul
jno
mov
rcrb
andl
and
fwait
pop
shrl
xlat
and
out
sar
mov
iret
mov
inc
sub
test
loop
iret
out
jo
dec
xchg
jo
mov
sbb
cld
pop
push
push
inc
sahf
test
insb
mov
ret
clc
or
jnp
enter
sub
cmp
aas
cs
insb
sbb
imul
push
popf
xchg
dec
jl
lea
mov
pop
inc
xor
add
es
xchg
outsl
outsl
test
sub
and
outsb
in
loop
mov
sbb
pop
mov
cmp
stos
outsl
icebp
xorb
xchg
insl
cld
popa
test
nop
push
data16
sub
aad
outsl
aad
xchg
daa
xchg
cmp
sbb
in
inc
fsubrl
xor
int
loopne
pusha
cld
in
out
adc
xchg
xchg
push
in
or
cld
mov
lcall
sub
xchg
aam
icebp
lret
cld
into
jg
pop
andl
stc
lds
pop
bnd
mov
test
stos
std
sub
pop
lods
mov
push
pop
mov
sahf
jb
ljmp
movsl
mov
jecxz
enter
call
cld
or
pop
dec
out
repz
add
bound
adc
imul
idivl
imul
test
lods
and
or
cltd
in
adc
je
mov
push
push
in
sub
inc
pop
test
mov
test
jae
scas
dec
xchg
mov
xor
fmull
outsb
lock
fisubl
subl
mov
sbb
add
pushl
icebp
ficompl
jl
jb
jns
js
jg
int
sbb
mov
adc
hlt
hlt
mov
jecxz
mov
push
push
sbb
mov
push
pop
sbb
popf
push
push
sbb
scas
in
or
push
jne
arpl
pusha
popf
dec
das
mov
mov
ds
jo
enter
xchg
loope
push
je
xor
xchg
add
stc
sbb
scas
add
add
jno
xchg
push
cmpsl
stos
je
jae
or
jp
dec
and
mov
push
push
sbb
pop
mov
sub
scas
out
mov
popa
arpl
and
out
mov
ror
div
inc
jno
xor
dec
ret
jne
xchg
push
jecxz
arpl
mov
int
push
movsb
mov
push
lret
xchg
call
mov
mov
repz
and
cmpsb
mov
pusha
sbb
jmp
cmp
xor
inc
jae
pop
xchg
xor
mov
cmpsl
outsb
xorb
out
lea
pop
into
adc
arpl
inc
aas
inc
test
xchg
and
sbb
sbb
adc
jb
inc
pop
pop
inc
pusha
mov
addl
shrb
inc
and
int
jns
pop
repz
cltd
sub
dec
pop
aas
fdivs
dec
cmp
cmpsb
jg
cmp
stc
mov
pop
aad
pop
inc
add
movsb
add
mov
stc
push
pop
add
cmpsl
mov
fistpl
inc
daa
fcompl
adc
cmp
shlb
mov
loop
lods
cmc
adc
into
xor
bound
cmpsb
movsl
in
pop
cmp
dec
dec
or
shl
xchg
stos
lods
add
mov
pop
subb
jns
push
mov
arpl
mov
mov
fcmovu
pop
outsl
cmp
fisttpl
bnd
outsl
pop
mov
adcb
sti
jae
fcoms
cs
push
sub
lahf
cwtl
faddl
sbb
xlat
dec
int
jo
into
setno
ret
into
mov
mov
jg
push
xchg
repnz
loope
loope
test
aas
rorb
mov
cwtl
push
push
insb
cltd
or
adc
pop
popa
and
ljmp
popf
mov
xchg
mov
movsl
jns
and
int
adc
cmp
mov
dec
inc
ljmp
hlt
sub
inc
stc
sub
adc
pop
movsb
out
in
jl
clc
lock
clc
ljmp
cmpsb
stc
sub
loop
jl
stos
push
add
fidivrs
dec
sbb
jp
cltd
or
pusha
movsb
mov
sbb
test
dec
cltd
add
in
out
cld
aam
push
rorl
icebp
test
pop
sub
inc
add
out
int3
aad
ret
arpl
fldcw
cwtl
mov
sti
jmp
loopne
jno
insl
lds
adc
dec
cmpsl
mov
andb
test
test
stos
repnz
das
jle
mov
loopne
in
gs
jo
mov
or
mov
mov
aaa
mov
ret
insl
pop
and
mov
das
add
sbb
enter
jb
push
test
das
cmp
jo
xor
lea
pop
cmpsb
mov
cmp
daa
jl
arpl
pop
scas
jnp
xor
es
push
dec
jle
lods
inc
push
mov
insb
cltd
shl
push
jnp
adc
dec
mov
popf
decb
jne
cmp
ljmp
aas
xchg
push
jno
test
mov
cmpsb
inc
hlt
jns
popf
scas
lods
aad
adc
mov
outsb
call
lock
lods
xor
insl
lret
xlat
pop
xor
mov
jl
fldenv
insl
and
insb
xchg
add
std
jmp
js
mov
or
int3
ja
mov
xor
xor
fsubl
lds
hlt
xchg
addr16
std
mov
or
mov
pop
out
call
and
mov
mov
jmp
add
mov
ror
mov
xchg
sbb
mov
movsb
mov
dec
xor
and
iret
pop
sahf
mov
mov
or
rorb
and
sbb
lahf
xor
push
inc
push
jns
cli
lcall
xchg
test
popa
pop
or
add
iret
mov
aaa
fistpll
cld
stos
pop
mov
fldcw
dec
test
je
repnz
jo
shll
insl
xchg
stc
adc
in
test
push
frndint
jmp
mov
xor
add
cmp
xchg
jb
xor
xchg
orl
cmpb
push
pushf
cmp
mov
push
pusha
xchg
into
imul
inc
xchg
mov
test
sahf
inc
out
xchg
jo
leave
pop
ficomps
add
rol
rorl
mov
jbe
and
xchg
test
insl
insb
dec
jo
sub
and
jno
aam
test
in
popf
fstp
cmpsb
aad
lret
imul
aaa
movsl
pop
mov
lea
or
test
adc
loope
jl
mov
daa
mov
dec
inc
or
cs
and
out
mov
pushf
sub
dec
or
push
lds
dec
or
iret
pop
adc
mov
sub
fwait
dec
jle
jnp
lds
lret
pop
fwait
add
jne
loop
clc
sarb
adc
arpl
mov
sbb
icebp
mov
mov
jne
pop
out
loopw
iret
imul
aam
sarb
fstpt
push
xlat
or
cmpsb
xchg
pushf
xchg
int
sub
scas
push
adc
cmc
xchg
dec
ror
rolb
adc
dec
lret
loop
bnd
jmp
mov
cli
out
lcall
jg
jb
in
pop
inc
fdivl
adc
mov
fcoml
push
jb
push
daa
pop
adc
jns
fsubs
and
pop
xor
cmp
out
add
aam
int
cwtl
cmp
lret
cs
insb
lcall
aam
out
jae
test
or
stos
stos
out
xchg
cmp
insb
mov
imul
fs
xchg
notb
jecxz
fs
loope
push
scas
xchg
jo
test
fldlg2
push
sbb
pop
test
push
test
in
fdivl
lcall
adc
or
xor
and
outsl
cld
adc
mov
stc
jns
add
fbld
sub
cs
cs
leave
lcall
icebp
mov
cmp
les
pop
lods
sbb
repz
lods
inc
xchg
xor
inc
lret
mov
sub
mov
add
sub
insb
cmpsl
lret
sahf
adc
test
enter
data16
rcrl
pop
lahf
xchg
mov
ret
imul
sub
je
out
adc
pop
in
lret
mov
out
mov
mov
inc
xor
nop
pop
dec
std
push
test
jle
lcall
inc
call
sub
push
es
xchg
mov
push
xlat
ds
mov
int3
mov
push
or
push
add
sub
mov
lods
ljmp
dec
cs
ficoms
push
inc
std
cmp
punpcklwd
jl
jbe
cmc
test
adc
mov
ds
xchg
adc
cwtl
sub
xchg
sub
sbb
leave
lahf
outsl
mov
add
xchg
xchg
pop
mov
xchg
aam
xchg
dec
jge
add
loope
mov
xlat
inc
or
dec
ds
fldenv
jge
xor
repnz
scas
pop
sahf
cld
pop
mov
xchg
sbb
jg
sbb
push
push
mov
adc
inc
or
movsb
jle
jmp
xor
fists
add
mov
addb
xor
ds
pop
int3
lret
push
scas
adc
pusha
xchg
xor
stc
jmp
sbb
cmpsb
repz
jecxz
movsb
push
push
shlb
jg
andb
inc
outsl
lea
and
inc
xor
dec
in
lret
andb
cli
repnz
enter
int
lea
jb
cltd
adc
imul
push
mov
adc
ja
push
mov
test
pop
inc
leave
cld
pop
pop
scas
loopne
shrl
push
push
xor
popa
sbb
movsb
shll
cmp
data16
lods
xchg
sub
stc
adc
push
push
add
filds
dec
jp
cli
add
iret
int3
test
test
pusha
pusha
mov
jecxz
push
push
mov
sbb
ficoms
out
mov
inc
adc
icebp
cmp
sub
mov
out
shrl
add
stos
xorb
cli
adc
cmpsb
jne
or
das
or
nop
mov
scas
into
mov
mov
sbb
fwait
sub
iret
lds
pop
inc
pop
sub
xor
ja
sub
inc
mov
dec
xorl
pop
rclb
lock
pop
inc
enter
mov
fbstp
push
dec
das
mov
xor
bound
sbb
cmp
jmp
sbb
mov
push
mov
das
jae
xorb
idivb
bound
ficomps
in
pop
in
stos
ja
std
out
dec
sbb
add
sub
test
into
and
push
and
enter
popa
mov
mov
je
pop
cmpsl
jp
sub
frstor
jge
imul
xchg
and
add
cmp
or
jmp
push
adc
outsb
leave
mov
jns
pushf
stos
xor
push
aaa
test
mov
test
mov
inc
pop
jnp
inc
aas
push
sub
repz
mov
fstpl
cmp
insb
xchg
mov
dec
add
jns
cmpsb
sub
and
dec
inc
movsl
sub
and
adcb
push
dec
jmp
adc
jae
sarb
dec
repz
jns
jecxz
and
inc
aad
outsl
xor
repz
ret
repz
xor
out
add
push
push
and
xor
xchg
mov
aaa
insl
ror
fldenv
fwait
pop
xor
ja
lret
adc
gs
cmp
lcall
xor
push
insl
arpl
aad
sub
jno
sbb
xchg
cld
es
test
jae
or
mov
dec
dec
test
mov
push
adc
cld
jb
push
out
leave
aaa
daa
clc
fisubrs
notb
push
adc
iret
pop
pushf
sbb
xchg
jo
mov
xor
mov
int
das
ljmp
loope
les
add
mov
fsubrl
or
jae
xor
and
or
addr16
jns
movsb
dec
cli
xchg
mov
inc
fs
inc
push
pop
lahf
fs
cmpsb
sarl
pusha
clc
sub
xlat
and
sahf
std
dec
dec
cmp
sbb
lods
pop
add
sbb
cmpsl
call
je
pop
mov
fcmovbe
xchg
inc
or
cmp
test
mov
sbbl
push
sub
lds
mov
lea
popa
js
push
daa
push
out
dec
xor
iret
jl
cld
shrl
ffreep
push
iret
ficoms
outsb
inc
aam
test
sbb
imul
into
in
je
inc
or
out
push
cmp
in
push
xchg
jb
ljmp
sbb
pop
xor
pusha
js
int3
dec
icebp
je
mov
je
xor
fnstcw
in
sbb
ja
sub
push
sbb
mov
fptan
fdivp
jae
and
ret
jns
enter
pop
loopne
adc
pusha
inc
xor
cmc
sub
ret
mov
std
mov
cmpsb
sub
sbb
and
arpl
jle
in
inc
xchg
and
rcrb
push
adc
pusha
pop
rcll
ds
adc
lock
mov
repz
jg
xchg
in
out
repnz
add
xchg
scas
outsb
mov
jbe
jle
iret
mov
add
fldenv
in
pop
push
and
mov
fidivrl
sbb
mov
leave
adc
and
mov
cmpsb
push
nop
lahf
icebp
pop
cli
mov
aaa
mov
adc
cltd
repnz
sub
sub
push
out
orb
dec
fldl
ja
push
int
or
dec
jl
mov
fwait
xor
dec
xor
pusha
scas
dec
loope
orl
in
pop
sub
orl
add
fwait
mov
xchg
jge
or
pusha
xor
idivb
stc
cmp
sub
cmpsb
and
dec
push
cmp
bound
test
and
mul
scas
inc
popf
inc
lock
fsubrl
cmp
sahf
sub
mov
insl
sahf
jmp
push
mov
fcomps
arpl
insb
mov
inc
and
mull
and
and
cmpl
ljmp
popf
mov
leave
push
xor
or
mov
lahf
movb
ret
int
mov
dec
pusha
lcall
sbb
into
push
cld
cmp
imul
xor
pop
loope
aad
xchg
insb
sbb
jb
mov
xor
subl
and
sub
shlb
or
pushf
mov
je
popf
int3
jg
in
pop
test
test
push
xor
mov
push
rcrb
inc
clc
pop
out
icebp
sarb
cmovne
jbe
fidivs
sbb
mov
or
pushl
mov
and
hlt
or
data16
cltd
lds
mov
dec
and
lret
mov
stc
nop
daa
repnz
orl
jnp
ljmp
cmpsl
cmp
add
aas
mov
adc
popf
cmp
adc
xor
gs
stos
fcoms
push
stc
cmp
negb
sbb
adc
add
test
insb
stos
sahf
mov
cltd
cmp
sub
stos
push
dec
xchg
push
cmc
stos
rol
xchg
adc
inc
lret
std
cli
or
jl
bound
in
dec
mov
int3
jnp
mov
jmp
js
aad
mov
rorb
rolb
sahf
ss
adc
or
movsb
cmp
cltd
jno
cmp
jge
test
xchg
clc
sub
mov
push
fcoml
cmpsb
fimuls
mov
test
mov
xchg
xchg
jmp
mov
mov
fildl
push
dec
arpl
fidivrs
bound
gs
test
sub
aaa
stos
xchg
inc
loopne
aam
adc
push
lret
call
xor
incl
ret
add
jmp
shll
push
dec
stc
sub
mov
xlat
mov
filds
add
cmp
pop
or
push
xchg
jp
cmp
sbb
lahf
orl
add
cmp
push
lret
cltd
cltd
push
pop
shlb
push
add
scas
call
dec
push
xor
cli
xchg
xor
hlt
mov
cli
xchg
jno
pop
roll
adc
mov
cmpsb
and
in
js
cli
rol
scas
xorl
arpl
stc
mov
std
pop
jp
sbb
aaa
mov
pop
mov
rolb
les
push
orl
inc
hlt
stos
mov
je
lret
les
inc
pop
ljmp
push
sub
mov
dec
fdivl
lods
xor
and
xchg
mov
mov
push
rolb
mov
jmp
loopne
mov
dec
repz
jmp
fnstsw
in
flds
ja
mov
adc
xchg
fs
cltd
dec
and
jb
shr
arpl
push
ret
jge
inc
push
jl
fucomp
fmull
icebp
and
xchg
xor
jmp
shll
mov
fwait
sbb
or
es
lcall
lock
push
mov
daa
mov
and
mov
jo
xchg
into
aas
pop
pop
add
dec
jnp
scas
sti
pop
push
call
mov
imul
sub
leave
lock
adc
push
lret
inc
pop
jo
scas
or
cli
mov
je
or
adc
inc
out
cltd
fsubs
sahf
fldl
sub
and
shll
jb
movsl
mov
inc
idiv
rcl
test
push
in
mov
stos
sbb
sub
push
push
and
cmpsb
or
stc
pop
sbb
lods
je
jmp
push
movsb
lock
outsl
or
loope
inc
pop
pushf
xchg
push
adc
xor
xlat
sub
cmpl
or
pop
inc
lahf
mov
aas
pusha
inc
jl
ret
and
jecxz
js
pop
mov
insl
es
in
xor
inc
iret
in
test
adc
ljmp
dec
mov
sub
mul
jl,pn
xor
mov
repnz
and
ljmp
xchg
sti
call
inc
add
lods
clc
subl
rorl
sub
or
sahf
sub
filds
inc
punpckhwd
sahf
shrl
adc
insb
push
mov
jo
sbb
ss
cmp
stos
jnp
cmpsb
dec
loope
scas
outsb
mov
into
jne
cli
dec
cld
dec
inc
xchg
fsub
xor
add
inc
or
imul
fisttps
in
fsubrl
shlb
jmp
and
int3
push
xchg
jge
add
adc
or
push
adc
rol
mov
sub
push
adc
inc
inc
je
sbbb
lock
inc
out
int3
cltd
cli
int
insl
cli
adc
xor
jl
sbb
stos
mov
inc
test
push
pop
mov
xchg
pop
mov
lcall
and
inc
stos
cmpsb
roll
pop
xlat
mov
mov
jne
mov
cld
jb
and
mov
cwtl
aad
repz
gs
addr16
and
pop
jno
adc
movsl
or
loopne
pop
mov
dec
dec
das
jecxz
aad
dec
pop
or
dec
out
fbld
repz
sub
mov
inc
mov
push
mov
sbb
cwtl
pop
in
and
sbb
pop
stos
and
mov
outsb
cmp
xchg
pop
jne
shll
aad
rclb
xchg
rolb
or
in
testb
and
adc
scas
or
and
xchg
add
xchg
lret
ljmp
je
movups
das
xor
cmp
call
mov
adc
testl
lea
testl
adc
xlat
jns
push
stos
aaa
test
sbb
pop
out
mov
add
roll
inc
inc
xor
mov
dec
aam
dec
pop
nop
pop
cmp
pop
sub
mov
mov
out
adc
nop
xlat
lea
xchg
fildll
jecxz
mov
mov
cmpsb
das
inc
sti
je
xorl
stos
push
jae
leave
mov
mov
ds
adc
ret
xchg
sbb
add
cld
in
test
loope
in
xchg
test
icebp
into
ret
sub
lea
out
test
and
into
mov
mov
or
mov
fdivr
pop
and
mov
mov
xchg
add
jle
pop
stos
adc
push
icebp
cmp
pop
mov
stos
cmc
or
iret
call
push
push
mov
loope
shrb
enter
push
pop
test
sbb
or
je
pop
sbb
mov
loop
add
and
or
push
dec
rcll
xor
in
lods
inc
fdivrs
dec
test
jb
jg
test
or
mov
inc
mov
hlt
movsl
call
test
inc
dec
pusha
jno
push
lods
cmp
cmpsb
add
loopne
lret
dec
mov
addr16
enter
adc
cmp
subl
mov
mov
xchg
and
adc
ljmp
aas
fidivs
dec
add
das
add
ds
cmpsb
jle
inc
pop
sub
xchg
inc
jo
ret
mov
xchg
cld
stc
xchg
imul
add
xchg
lods
mov
mov
popf
lret
pop
and
mov
rcrl
hlt
test
sbb
push
or
test
hlt
pop
jp
mov
xor
je
out
sbb
mov
test
out
mov
scas
pop
aad
jg
pushf
gs
xchg
push
mov
pop
imul
es
push
dec
dec
push
test
mov
adc
in
inc
int
cmp
sub
shll
lods
adc
dec
popa
ret
imull
mov
mov
jno
js
leave
jle
ds
sbb
popa
pop
pop
mov
xchg
mov
imul
sub
scas
stc
adc
les
inc
clc
sbb
addr16
cltd
dec
lods
sub
inc
xchg
pop
pop
aam
sbb
int3
pop
lods
pop
mov
xchg
lods
jge
pusha
inc
inc
mov
pop
add
mov
dec
sbb
or
cmp
scas
cmp
adc
insb
lret
mov
inc
roll
dec
idivl
movsb
insb
pushf
and
ret
inc
loop
add
xchg
popf
inc
cmp
adc
ljmp
sub
cld
cmp
jp
cmpsb
push
xchg
in
or
sub
push
push
popw
daa
insl
cmp
mov
cmp
movsl
pop
jmp
xlat
dec
jg
push
in
popa
xchg
test
and
jl
cltd
outsl
pop
je
test
xchg
sbb
ss
pop
jl
jb
mov
push
dec
adcl
gs
mov
pop
cmp
mov
xor
sbb
mov
inc
cld
ja
into
adc
jno
push
imul
inc
xor
xchg
insb
pop
imul
or
fcomip
ja
addr16
push
fwait
jecxz
gs
mov
push
sub
jp
les
sbb
sub
cs
hlt
or
out
mov
out
leave
push
mov
popf
in
stos
das
addr16
xchg
xchg
jg
pop
ret
xchg
sub
xchg
mov
mov
mov
movsb
and
enter
aas
imul
push
insb
and
mov
fldt
xor
inc
repnz
test
mov
push
fcomps
add
push
es
subl
call
andb
hlt
popl
dec
mov
jne
push
cpuid
add
jg
lret
iret
cli
push
jnp
popa
mov
sub
jge
repnz
inc
xchg
mov
std
xchg
ja
jg
fnstsw
or
or
xchg
sub
inc
add
rcrb
addr16
iret
rolb
inc
sarl
adc
test
enter
je
inc
pop
arpl
or
inc
ficoml
xchg
inc
insl
push
jge
jb
mov
and
add
aas
ds
lcall
aad
mov
insl
fldl
or
imul
xor
hlt
or
add
push
lods
enter
mov
pop
dec
sahf
mov
pop
in
add
lock
jnp
dec
inc
sub
int
lea
sbb
xchg
in
jecxz
ljmp
sahf
pop
in
imul
mov
mov
rcl
xor
jbe
test
pop
aaa
iret
ljmp
mov
inc
sub
push
popa
clc
jne
mov
push
mov
xchg
mov
mov
cltd
fcoms
mov
call
sbb
ljmp
lret
das
ret
pop
stc
ds
inc
inc
pop
xchg
mov
stos
fwait
icebp
mov
lret
repz
frstor
add
shll
push
in
push
call
pop
in
or
push
jp
push
or
pop
cltd
inc
jb
pop
push
push
mov
ja
pcmpeqw
sti
fisubrl
jno
rcrl
fisttpl
inc
lret
mov
cltd
xor
dec
pop
ljmp
cmpsb
out
push
nop
sti
daa
stc
xor
loopne
jmp
fisttpll
push
in
push
inc
xor
out
das
movsl
ss
lea
lcall
ljmp
inc
call
push
jmp
bound
cli
std
adc
adc
sbb
mov
imul
sub
inc
inc
push
test
call
lahf
sbb
das
aas
movsb
outsb
ret
rorb
mov
insl
in
lret
mov
fadd
xor
or
add
imul
add
nop
movsb
mov
fldl
mov
sti
jae
mov
loopne
fmuls
lods
push
mov
sub
cmpsb
and
std
xchg
dec
lea
sub
push
jge
hlt
pop
dec
add
imul
into
xchg
imul
pop
test
dec
add
xchg
adc
aad
cld
clc
xor
mov
xor
add
pop
addl
bound
cmpsb
cmpsb
pop
xorl
add
iret
repnz
dec
insb
xchg
rcrl
adc
dec
in
aam
xor
jge
imul
push
das
xchg
xor
es
ds
divb
clc
lock
mov
jae
mov
sub
ror
push
int
mov
push
stc
sahf
pop
stos
mov
cmp
iret
or
cwtl
rcr
mov
xchg
xchg
aas
push
stos
pop
sbb
add
xchg
lret
adc
or
cmp
cmp
add
xchg
in
test
orb
pop
lds
add
or
cmp
or
add
jmp
and
jp
mov
or
out
aam
mov
stos
sahf
popa
adc
or
inc
xchg
arpl
adc
inc
adc
jecxz
lret
inc
out
xlat
jmp
mov
xor
int3
out
lahf
lds
out
addl
arpl
mov
mov
mov
les
or
jnp
in
xor
addb
add
xchg
add
lods
mov
mov
inc
xor
imul
popf
gs
sbb
jge
inc
sbb
push
notb
sti
dec
int3
fsts
sbb
sbb
cmp
cmc
jge
pushf
imul
cli
or
cmc
cli
add
lds
or
cmpsl
lods
xchg
pop
pop
xchg
dec
xchg
pop
or
lock
stos
sbb
and
and
or
mov
imul
and
jmp
pop
in
mov
mov
dec
and
mov
dec
nop
stos
addr16
gs
pop
orb
cltd
pop
adc
mov
ljmp
xor
sbb
ret
pop
mov
pop
or
js
pop
movsl
mov
cmp
jnp
outsb
hlt
stos
push
jo
cmp
cmpsb
cmp
popa
bound
push
or
stos
or
shll
mov
xor
leave
lret
imul
ljmp
js
out
add
stos
xchg
or
mov
add
push
adc
aad
xchg
adc
dec
adc
cmp
sbb
adc
cmp
sarw
mov
popf
cmp
mov
dec
ja
cmpsb
xchg
addl
fsubrl
out
mov
sti
movsl
lahf
push
inc
enter
and
mov
mov
jns
push
cld
imul
cltd
dec
xchg
jl
mov
sub
push
adc
xchg
out
push
and
inc
jb
add
hlt
idivb
std
les
out
lahf
push
push
lds
sub
sub
sbb
scas
pusha
daa
outsb
jno
mov
sub
sbb
push
movsb
lea
imul
xor
push
pop
call
ss
inc
mov
repz
cmp
out
dec
dec
push
jle
mov
cli
or
inc
add
ss
test
pop
cmp
imul
sub
and
sbb
dec
imul
push
enter
sub
push
mov
cmp
pop
jnp
sahf
push
mov
out
xor
lret
jns
add
push
add
xlat
out
loopne
call
jb
mov
adc
mov
stos
ficompl
jmp
mov
add
sub
cmp
inc
lcall
orb
jg
adc
and
sbb
rcrb
mov
fwait
sub
leave
hlt
or
fwait
out
mov
fsts
scas
pop
dec
pop
xchg
ret
add
sbbb
loope
pushf
xchg
andl
lds
sbb
xchg
sbb
dec
cmp
scas
out
mov
int3
pop
push
pushf
inc
mov
mov
mov
lcall
push
fildll
xchg
jns
fs
adc
add
mov
jno
add
in
jmp
pop
ljmp
and
out
adc
fcmovnu
enter
xorb
mov
jecxz
dec
fisttpl
mov
ret
fistpl
arpl
andb
mov
sbb
aad
fisubrl
push
push
scas
add
pusha
ds
fisubrs
push
push
iret
push
pop
js
loop
mov
rorl
shld
negb
jnp
not
xchg
dec
push
inc
jmp
rorb
jmp
add
mov
mov
mov
in
das
icebp
jae
push
lock
jne
cmp
push
dec
test
cld
mov
loopne
add
xchg
mov
clc
adc
rorb
sbb
stos
js
mov
cmpsb
add
dec
dec
mov
outsl
call
xchg
dec
and
popf
roll
and
mov
popa
shll
call
push
mov
dec
xchg
inc
mov
inc
clc
jmp
dec
cmp
mov
xchg
pop
push
lds
cmpsl
cmpsl
incl
xor
jno
fldln2
into
fidivl
ljmp
sbb
cs
and
cld
pop
leave
add
inc
xlat
pop
cmp
loopne
mov
std
shlb
call
adc
xor
shrl
dec
sbb
adc
mov
push
pop
push
ficoml
pop
dec
jbe
jo
repz
insb
imul
loope
cli
xor
ret
in
adc
mov
mov
sbb
pop
call
iret
pop
int3
movsb
jmp
movsb
in
nop
jb
clc
sahf
test
pop
inc
push
les
test
pop
push
or
mov
pop
lods
ja
bnd
ret
push
xor
mov
mov
cmp
mov
xor
add
cmp
hlt
sti
shlb
pop
addb
arpl
aad
cmpsb
aaa
xor
push
adc
bound
sti
mov
roll
cwtl
bound
push
sbb
xchg
and
lret
xchg
je
xchg
or
inc
ds
sbb
cli
out
repz
ficompl
stc
xchg
mov
test
and
mov
pop
adc
pop
mov
insl
pop
orb
sbb
or
rcrl
imul
mov
mov
push
insl
lods
cmc
mov
push
jo
adc
xchg
xchg
push
push
mov
jecxz
rcll
push
inc
mov
or
adc
dec
pop
stos
add
push
pop
cmp
xor
sub
iret
popa
sahf
add
push
adc
lahf
rcrl
mov
push
dec
lods
adc
in
in
fisubrs
or
or
sbb
push
pop
xchg
shll
daa
jp
push
pop
sub
pop
leave
jecxz
mov
adc
call
sub
js
loope
les
into
xchg
shlb
in
mov
pop
je
scas
fiaddl
je
push
icebp
xchg
out
int
xchg
push
aam
sbb
xlat
add
add
stos
dec
jp
cli
movsb
fs
cmpsl
xchg
cmp
int3
and
pop
out
jnp
in
lret
mov
push
dec
jp
push
scas
mov
push
lods
pusha
inc
push
out
sub
and
into
inc
pushf
outsl
test
mov
mov
inc
pop
sar
test
clc
adc
stc
outsb
push
lret
adc
in
xchg
ds
rolb
push
daa
ja
gs
mov
inc
or
neg
add
shl
fistpl
testl
push
pop
or
pop
xchg
cmp
scas
loop
xor
xor
sbb
inc
ja
xchg
loop
lock
or
shl
mov
into
inc
data16
test
push
cmpsb
imul
stos
pop
dec
je
das
pop
lahf
pop
lock
sub
and
mov
and
dec
lret
push
outsl
xor
inc
rol
int
ret
jnp
sbb
pop
sub
int
cmp
test
mov
xchg
shll
shlb
cmpsl
js
aas
jb
inc
loopne
pushf
pop
and
rcrl
push
fldenv
mov
ret
or
daa
movsl
and
mov
lcall
cmpsl
or
fistpll
xchg
outsl
call
fsubrl
das
dec
xchg
sbb
inc
in
pushf
mov
icebp
xchg
in
stos
lret
in
pop
sbb
xor
push
sahf
cmpsb
lods
mov
fcmovbe
lahf
and
mov
push
push
bound
jle
mov
inc
sub
and
pop
or
xchg
scas
inc
mov
push
pop
lret
sub
cld
in
std
test
or
pushf
je
jb
out
mov
jo
push
mov
and
jne
insb
sbb
cmp
int3
xchg
iret
xchg
addr16
mov
imul
rolb
add
pop
clc
lahf
mov
stc
push
jno
repz
nop
push
sub
xchg
mov
insb
aaa
mov
mov
dec
mov
popf
pushf
or
sahf
fidivs
jb,pn
push
js
cwtl
lahf
fs
inc
sbb
sbb
mov
dec
adc
pop
dec
aaa
jecxz
dec
dec
mov
and
outsl
jecxz
sbb
push
push
cli
sbb
fwait
cli
aas
rorl
shl
add
cmp
orb
in
jns
repz
sahf
pop
sbb
sbb
dec
mov
cmc
scas
or
dec
pop
mov
imulb
fmulp
repnz
gs
fcompl
out
mov
sub
out
push
lea
test
insb
add
sahf
xchg
mov
into
sub
sub
inc
adc
rcl
pushw
xor
sub
stc
dec
pop
jo
daa
outsb
jae
int3
js
mov
add
jb
fldt
and
add
outsl
dec
pop
mov
stos
out
push
ret
lret
mov
mov
dec
stos
daa
fidivrs
fcoms
in
mov
mov
mov
mov
xchg
dec
ljmp
daa
mov
pop
das
mov
inc
adc
pop
fmulp
out
xchg
mov
out
push
in
dec
mov
popaw
xchg
cs
sbb
into
or
push
jecxz
repnz
push
into
test
stc
out
shll
daa
sbb
and
dec
mov
outsl
sub
mov
jl
add
cmp
add
mov
or
rol
fildl
adc
jg
xor
cld
inc
pusha
lock
sbb
ljmp
nop
and
out
mov
mov
add
andnps
std
jbe
or
pop
mov
inc
fcoms
adc
add
and
xchg
das
mov
out
jl
lods
fildll
insb
adc
sbb
xor
jno
cli
mov
mov
fisubrs
sti
xor
jp
imul
aad
sbb
sub
inc
adc
repnz
push
cmp
and
inc
out
test
mov
sbbb
dec
lahf
movsb
lods
push
sbb
gs
sbb
or
or
lock
dec
cli
and
leave
sub
ljmp
test
xor
lock
iret
test
mov
cmp
mov
lods
jmp
fldenv
cmpsb
mull
pushf
jecxz
mov
xor
xchg
and
inc
inc
cld
ret
outsb
gs
out
adc
mov
mov
stos
sarl
stc
popa
dec
jne
push
cmc
cmp
pop
jae
idivb
push
loope
push
dec
cmp
push
push
cmp
decb
lds
sub
cmc
adc
rclb
add
add
add
outsb
and
xchg
out
pop
call
aam
cld
mov
push
inc
hlt
xchg
clc
pop
stos
hlt
fbstp
jae
out
mov
data16
sarl
sbb
jle
scas
lods
xor
je
icebp
mov
jecxz
fisttps
xchg
cmp
sbb
mov
inc
push
cwtl
int
std
mov
jl
push
mov
sub
lea
adc
imul
ret
xlat
pusha
adc
ja
filds
lcall
jns
dec
sbb
mov
and
jge
and
and
or
inc
sub
scas
mov
jl
jbe
sbb
fstpl
add
pop
pop
roll
and
insb
xchg
mov
cmp
jbe
mov
push
ja
sbb
nop
inc
iret
mov
clc
mov
out
and
lock
mov
push
scas
push
add
mov
mov
xor
fs
jns
mov
dec
pop
daa
or
mov
insb
enter
mov
dec
adc
sbb
packuswb
es
xchg
out
dec
das
pop
cmc
sarb
data16
sti
repnz
dec
ffreep
jno
pop
inc
gs
loop
pop
icebp
insb
sub
lock
mov
xor
xchg
jmp
mov
inc
arpl
and
movsb
or
movsl
push
mov
pop
dec
test
xor
nop
mov
sub
and
cmp
imull
bound
mov
dec
ret
inc
out
push
sub
cltd
dec
mov
enter
stos
add
movsl
mov
jle
outsb
and
mov
in
mov
dec
adc
dec
fwait
loope
loop
loope
das
xor
dec
cld
sbb
sbbl
jbe
xlat
hlt
adc
adc
call
ret
aam
pop
in
fcmovne
out
xlat
mov
pop
js
add
icebp
or
sub
mov
dec
outsb
testb
daa
mov
push
outsl
in
mov
jecxz
sub
xorb
pop
fdivs
mov
add
orb
lret
mov
mov
mov
cmp
cmpsb
xor
scas
xor
outsb
or
add
outsl
push
test
out
pop
mov
pop
out
imul
aam
jne
inc
fsubp
aas
xchg
mov
or
jecxz
ret
add
pushf
fistps
dec
inc
push
pop
and
fisubs
push
add
movsl
add
inc
mov
dec
push
mov
in
cmp
pop
movsl
scas
adc
sarb
mov
mov
sbb
fs
xchg
mov
negl
repz
bound
mov
add
mov
cmpl
xlat
fldt
ret
xorl
in
or
mov
mov
sbb
outsb
fcoml
xor
movb
aaa
pop
push
test
inc
in
imul
and
jge
xchg
rcr
lods
jne
and
mov
lret
push
push
pop
aad
lahf
and
sbb
jno
cmp
add
push
in
int
int
mov
mov
mov
sub
jp
sub
pop
mov
js
mov
jne
push
pusha
add
cmpsb
mov
sub
xchg
loop
cmpsb
dec
test
xchg
pop
std
cltd
sub
pusha
mov
fimull
popf
nop
dec
daa
xchg
jg
jmp
adc
mov
cs
add
jle
repnz
dec
insl
and
push
inc
xor
repz
test
pop
cmpsl
mov
mov
into
push
minps
dec
xchg
out
push
ss
mov
mov
jne
xchg
aas
outsl
je
data16
in
jns
lock
imul
push
jle
jg
fwait
push
mov
jp
outsb
mov
scas
cmp
in
std
dec
das
push
lcall
outsl
shll
dec
fcmove
addb
pop
pop
jmp
pushf
xchg
mov
popa
test
or
test
pop
mov
mov
and
push
or
inc
leave
into
call
xchg
ds
repz
xlat
lods
fimull
push
inc
xchg
push
or
test
lods
mov
dec
fists
and
sahf
and
arpl
data16
dec
enter
fs
mov
int3
push
lock
adc
rorb
daa
push
mov
xor
sbb
lahf
and
xchg
pop
in
jp
in
imul
or
sbb
inc
jbe
jae
addb
mov
or
seta
xchg
dec
jb
sub
das
notl
jb
push
dec
test
loop
stc
jno
into
pop
and
in
cmp
sbb
jb
add
sahf
mov
int
add
push
testb
jg
pop
loopne
cmp
ja
in
sbb
loop
add
lock
aam
push
js
test
xor
push
inc
inc
pop
leave
jno
outsl
and
lods
push
out
testb
pushf
loopne
cmp
movsb
and
pusha
mov
sub
ljmp
inc
jge
in
call
imul
orl
faddl
fisttps
out
mov
imul
fildll
pop
stos
jmp
pop
xor
out
or
xchg
fstl
cmc
pop
lods
dec
inc
mov
pop
mov
push
xchg
adcb
out
adc
mov
cmp
xchg
pop
mov
ds
adc
enter
cmpsl
pop
cs
daa
mov
xchg
push
jmp
push
inc
insb
or
xchg
cmp
insl
mov
mov
sub
stc
and
inc
or
fsubl
imul
nop
pop
add
fisttpl
cwtl
nop
fadd
mov
adc
dec
pop
and
adc
aaa
mov
jg
and
enter
js
pop
movsl
cltd
lahf
cmc
loope
rcll
test
stos
sahf
mov
cmp
enter
out
xchg
je
sub
cmp
lock
inc
je
inc
xchg
pop
test
loope
pop
sti
loope
insl
mov
push
leavew
and
add
mov
movsl
andb
repnz
mov
sbb
sbb
fsubrl
mov
xchg
mov
jp
js
sbb
mov
add
sub
shll
imul
mov
pop
inc
mov
popa
or
fs
inc
sbb
int3
add
rclb
mov
pop
push
cmp
jp
jle
test
add
lret
xor
test
cmpsl
xor
mov
cmp
jno
mov
jno
out
jg
test
mov
lds
inc
and
xchg
or
test
jo
add
inc
in
or
mov
loop
aaa
pop
pop
adc
hlt
test
pop
adc
inc
inc
lret
dec
bound
xor
outsl
lret
data16
inc
cmp
add
aad
sti
imul
in
adc
pop
push
pop
shl
push
addr16
sbb
pop
stc
push
outsl
jns
fisubl
fmuls
sbb
push
pop
pushf
out
cmpsl
imul
sbb
bound
mull
les
mov
jle
cmp
and
jns
je
jb
dec
or
aam
mov
xchg
xchg
or
andl
rolb
lret
mov
sarb
fs
pop
inc
sti
dec
aaa
rorb
cmp
mov
cltd
in
mov
stos
out
ds
xchg
mov
mov
idivb
das
xlat
roll
or
xor
sbb
cltd
sbb
xor
ss
xchg
shl
jnp
push
jp
push
and
push
cmp
inc
rcr
insl
movl
sbbl
xor
fnstcw
les
jnp
std
mov
loope
xlat
push
fldt
lcall
loop
cltd
jl
cld
adc
pop
add
xor
fwait
pop
mov
add
andl
call
lcall
aam
outsl
inc
jge
leave
fisubs
push
xchg
push
mov
in
dec
mov
cmp
into
mov
in
cmp
lahf
mov
xchg
pop
push
out
sti
cli
fmulp
mov
sbb
dec
dec
dec
mov
lods
fisubrs
cmpsb
mov
jmp
push
push
popa
cmp
jae
adc
ret
lea
cmpsb
jo
mov
mov
outsl
push
xchg
jbe
ja
lock
push
add
sub
add
outsl
jne
mov
xchg
xor
cli
mov
mov
pop
pop
imul
std
pop
pop
jbe
and
mov
cmp
inc
cmp
cld
xchg
das
push
aad
mov
filds
mov
subl
inc
mov
push
std
sbb
dec
sub
aas
movsl
int
outsb
and
nop
jne
shr
ss
pop
stos
jle
cmpsb
jns
ss
mov
negb
lea
lcall
out
xchg
ljmp
push
bound
cltd
mov
xchg
scas
jle
outsb
xor
jmp
enter
add
sbb
ss
xchg
mov
xchg
add
pop
enter
iret
mov
cmpsl
xor
pop
jmp
outsl
mov
test
mov
ret
sbb
outsl
cmp
call
stos
push
dec
jge
mov
mov
rcr
inc
mov
push
mov
hlt
or
or
mov
lea
push
loope
aas
or
jo
jl
cld
and
or
fisubrl
adc
test
stc
cmc
sub
lahf
scas
insb
loopne
scas
lret
xchg
push
mov
or
sarl
jmp
ja
nop
xcrypt-ofb
cmpsl
insl
test
adc
repz
xchg
test
cmp
pop
mov
cmp
das
or
test
sbb
xor
movsl
xchg
xchg
jbe
cmp
push
mov
js
movsb
push
out
push
daa
cmp
sti
inc
fsub
popl
pushf
cmp
push
fdivrl
push
dec
pop
mov
dec
pop
xchg
sub
jg
mov
xchg
repz
adc
push
jmp
ds
fmull
dec
pop
data16
enter
daa
ret
xchg
dec
push
jg
shrl
shll
adc
outsl
testb
paddusw
mov
jnp
xor
and
push
dec
sti
and
popa
sub
ret
shll
or
push
loope
xchg
xchg
dec
add
mov
mov
pop
push
popf
sub
ficoms
xchg
stos
jp
add
push
xchg
das
cmp
cmp
rorb
sbbb
lahf
push
mov
mov
mov
movsb
push
bound
xor
lret
dec
jp
xlat
leave
pop
enter
sub
out
jnp
and
imul
es
xor
fsubr
repz
adc
pushl
subl
mov
inc
fs
mov
into
in
sbb
mov
ret
nop
ja
jbe
out
scas
jl
mov
bound
inc
xchg
and
stos
and
xchg
adc
cmp
fcomps
ret
addb
aas
mov
jns
es
mov
jne
push
outsl
jmp
adc
fstpt
mov
and
aaa
and
fadd
xor
loop
sub
not
mov
std
shll
inc
lods
int
push
or
in
scas
das
sub
int
jne
push
or
or
cs
aaa
fldl
es
mov
sub
cs
mov
adc
jo
bound
xchg
sbb
sbb
sub
xchg
scas
adc
std
aas
mulb
mov
pop
cmpsb
aas
scas
dec
add
mov
fnsave
cmc
pushf
scas
push
or
add
push
pop
das
xchg
sahf
add
imul
ffreep
out
xchg
pop
pop
insl
sub
js
pcmpeqb
pop
inc
scas
jmp
mov
lds
or
mov
mov
hlt
adc
shll
aam
inc
inc
sbb
enter
ffreep
add
inc
dec
mov
out
or
lcall
dec
icebp
xlat
into
fwait
inc
xchg
jo
or
das
xor
imulb
icebp
popf
pop
cmp
push
jo
stos
sub
sub
jmp
xor
or
pusha
std
xchg
fstl
dec
add
adc
ret
adc
push
push
inc
add
sub
or
ss
pop
and
jne
icebp
sub
pusha
mov
test
stc
mov
out
outsb
cltd
fdivrl
js
pusha
lods
mov
aas
adc
and
out
or
push
dec
jecxz
loop
lea
loop
sub
and
ret
bound
xor
ret
cld
cmp
rcrb
add
mov
fisttpll
or
repz
cmp
push
mov
aas
test
jle
adc
bound
icebp
dec
lods
mov
cmp
jbe
sbb
stos
je
pop
out
jp
jge
mov
les
push
orl
loopne
addr16
das
push
dec
sub
movsl
pop
out
test
cmpl
mov
aaa
incl
sub
sub
xor
movsb
mov
push
je
lods
mov
orl
sub
push
les
lret
cmpsl
mov
xchg
or
inc
mov
mov
lahf
test
fucomi
pusha
cmovb
lret
pop
mov
or
xor
fmull
out
movsb
xchg
shll
push
arpl
xor
xlat
rclb
jns
mov
and
js
fstl
test
leave
test
loop
push
pop
movsb
and
fld
adc
jmp
cmpl
pop
shr
push
jo
ljmp
add
shl
call
push
cwtl
xor
push
in
mov
jp
cmp
lods
fsubrp
adc
jp
aas
mov
lahf
inc
inc
sarl
aas
pop
ljmp
into
pop
cmpsl
jo
cmp
imull
inc
daa
jp
test
and
fldenv
adc
inc
sub
cmpsl
bnd
scas
and
daa
mov
bound
int
xchg
mov
ret
pop
pushf
mov
lcall
fcoms
cmp
and
lcall
mov
xor
inc
push
ja
sti
inc
enter
aad
sbb
arpl
sti
fimuls
mov
jle
adc
lods
or
ja
xchg
lds
xchg
cmpsb
xor
add
cmp
inc
pop
xchg
xchg
into
mov
mov
iret
stc
sti
aad
andb
cmp
nop
aam
sub
xchg
pop
dec
je
jbe
xor
jo
or
cmpsl
in
xchg
sahf
fstpt
xor
repz
sub
fistl
mov
or
adc
mov
mov
cmp
mov
or
rclb
repz
dec
in
add
add
mov
test
nop
and
xrelease
mov
cmpsl
dec
test
inc
sbb
fsts
aas
push
inc
mov
sub
stos
add
jbe
ds
fisttpll
jge
or
mov
daa
std
cli
test
adc
ds
repnz
imul
cwtl
push
ljmp
xor
cmp
lahf
fists
popa
fldt
cld
mov
push
out
addr16
js
hlt
inc
jbe
shl
mov
add
lret
imul
adc
mov
outsb
dec
sub
std
jnp
push
push
mov
jg
popf
mov
jb
xchg
loop
add
ret
mov
mov
xor
inc
js
xlat
mov
pop
mov
das
pop
lods
fs
adcl
mov
repnz
push
in
mov
dec
adc
pop
mov
nop
inc
jge
cmp
cs
xor
mov
push
push
or
cltd
mov
pop
hlt
xchg
clc
aaa
lret
cli
fistl
dec
lcall
not
je
movsl
pop
loopne
int
inc
xor
pop
std
mov
imul
dec
push
sbb
imul
mov
hlt
inc
jnp
lret
adc
in
sbb
push
ret
adc
adc
divl
pop
inc
fldt
jo
rclb
adc
pop
mov
sub
rcl
and
mov
pop
cmp
cli
fcomps
fldl2t
js
js
and
pop
inc
mov
repnz
ss
hlt
in
nopl
stos
rcrb
adc
sbb
scas
pop
adc
int3
addr16
jg
in
fs
inc
cmpb
test
sbb
mov
mov
sub
inc
sarb
sub
pop
movsl
and
sahf
jg
cltd
test
sbb
test
add
cmp
cld
xor
arpl
fimull
stos
jmp
and
dec
cmp
enter
xchg
mov
xchg
and
dec
dec
addl
and
sbb
inc
xchg
add
dec
fistps
mov
dec
or
sti
mov
stos
jae
jae
mov
jle
xchg
xchg
cmpsl
loope
inc
in
xchg
jecxz
mov
dec
stc
adc
push
aam
mov
rorl
fildll
mov
mov
js
dec
fwait
out
cmc
add
stc
pop
adc
cmp
xchg
push
sub
jmp
push
hlt
sub
enter
push
je
pushf
and
mov
push
and
lods
push
sbb
test
xor
push
sbb
jle
insl
jecxz
push
insb
jecxz
and
rol
sub
out
enter
ljmp
mov
stos
dec
jb
test
and
mov
jbe
mov
or
cmp
ds
cltd
loop
ljmp
ret
mov
fdivrs
pop
mov
push
jns
mov
stos
push
cmp
inc
in
ss
dec
mov
pop
pop
jo
xor
mov
out
jle
subb
jnp
fs
cld
stc
ss
cmpsl
cmpsb
push
jmp
loopne
or
stos
lahf
push
fsubrs
xchg
push
sub
mov
xorb
cmp
xor
jmp
in
lret
or
ss
mov
out
dec
stc
es
pop
clc
out
lret
pop
out
lea
mov
rcrl
adc
popf
xchg
decl
mov
xor
xchg
mov
loop
test
push
mov
xor
push
mov
mov
in
inc
fildl
sti
lahf
nop
fs
push
int
loop
and
mov
mov
mov
inc
nop
lods
cmp
xchg
in
mov
jg
add
lret
mov
jecxz
aad
jmp
je
fnstenv
call
fcmovbe
testb
or
in
out
mov
cltd
cmp
call
leave
sub
sub
and
outsl
jbe
sbb
fldt
xchg
xor
hlt
pop
pop
mov
cltd
pop
pop
mov
test
cmp
mov
xchg
sti
mov
jmp
xchg
pop
jns
test
pop
scas
jmp
fstpl
out
in
and
and
or
mov
inc
fprem1
mov
mov
pop
outsl
fucomi
inc
and
aad
js
repnz
mov
jge
mov
scas
inc
out
add
stc
insb
daa
dec
and
int
je
add
jecxz
aam
mov
push
test
and
mov
stos
fs
cld
ds
mov
mov
push
fs
mov
dec
enter
aaa
insl
mov
inc
mov
cwtl
mov
sub
jae
ret
mov
bound
mov
pop
xchg
pop
jns
sti
repnz
out
dec
add
into
sbb
ljmp
in
add
lods
repz
xor
jge
sar
xchg
bound
xchg
shrl
jg
fidivl
push
sbb
mov
ljmp
out
sub
pop
in
mov
push
push
ss
xor
pop
push
xchg
test
rcl
aad
or
push
test
test
movsb
sub
fistps
movsl
mov
ja
stc
mov
enter
hlt
data16
mov
shrl
int3
repz
fsts
mov
jmp
jecxz
add
stc
faddl
dec
dec
aas
movsb
or
xchg
int3
out
aaa
xor
dec
jge
sub
push
arpl
icebp
mov
not
addr16
adc
rcrb
add
mov
popa
repz
subl
popa
sub
and
mov
in
jbe
dec
sbb
jl
inc
push
popa
outsb
fs
mov
icebp
into
fwait
repz
pusha
and
mov
ja
pop
jmp
push
cwtl
jne
lret
mov
hlt
andb
xor
repnz
rcrl
pop
mov
mov
daa
pop
popf
and
int3
sbb
inc
cmpsb
movsl
repnz
pushl
and
mov
jg
or
add
cmp
loop
adc
mov
mov
sbb
xacquire
cli
fsubs
and
faddl
push
jae
jge
loope
sub
in
and
sbb
les
in
gs
aad
jno
add
loopne
pop
into
repnz
xchg
pop
iret
mov
push
into
adc
sbb
sub
mov
notl
xor
lahf
sbb
cmp
cmp
outsb
fs
jecxz
adc
cmp
in
jmp
mov
pushf
dec
mov
cwtl
add
les
mov
enter
jecxz
or
jecxz
ljmp
dec
rcl
fsub
and
test
imul
dec
sbb
fcmovu
dec
ja
sbb
pop
test
jnp
mov
aaa
xor
jbe
mov
shll
cli
sbbl
stos
xor
pusha
out
xchg
and
dec
or
ret
data16
adc
clc
fsubs
jmp
pop
mov
incl
sbb
push
mov
cmp
inc
mov
scas
or
mov
mov
sahf
adc
cwtl
out
imul
cs
adc
xor
jb
pusha
push
fdivrl
adc
mov
dec
mov
sub
jl
inc
nop
jl
stc
icebp
out
jns
or
stc
mov
imul
dec
add
xor
inc
nop
cmc
pop
fbstp
sbb
test
nop
jnp
insb
movsb
arpl
mov
cmpsb
sub
jnp
ret
mov
and
dec
or
lods
xchg
aad
sub
push
shrl
movsl
addr16
into
stos
fnsetpm(287
mov
sub
divb
and
test
jno
fcomp
sbb
xchg
jo
fs
mov
xchg
mov
cmp
jne
repz
jo
fs
insb
out
in
mov
jnp
mov
adc
cmp
dec
mov
or
dec
pop
mov
xchg
mov
ficoms
outsb
and
aas
cmp
add
cmp
lret
sbb
fisubl
pusha
jno
lahf
pushf
nop
inc
pop
clts
leave
push
xchg
subl
and
cmpsl
dec
jne
jb
lret
dec
int
test
add
mov
inc
int
call
push
cmpsl
js
cmp
fidivrl
cmp
out
insl
sbb
cs
dec
xor
and
adc
out
sbb
les
inc
sbb
leave
into
xor
int
cwtl
arpl
imulb
int3
sti
shrb
inc
adc
or
fbstp
cmp
fidivrl
loop
scas
xchg
mov
das
out
sti
inc
cmp
out
aad
hlt
inc
in
sahf
add
push
dec
fimuls
mov
lret
loopne
pop
ds
sub
xchg
push
xchg
add
mov
pop
arpl
jmp
faddl
jnp
test
cwtl
push
mov
sbb
rorl
mov
test
jl
lret
jg
pop
and
sbb
out
aas
jle
or
sbb
xor
test
jbe
mov
push
mov
icebp
sub
scas
and
movsl
decb
xchg
lcall
xchg
cld
call
xchg
rcrl
mov
fistpll
repz
sbb
cmp
std
mov
into
push
fcoms
lcall
xor
xchg
mov
jecxz
or
std
in
je
adc
or
mov
fdivrs
lods
pop
cmp
incb
in
xor
lock
divb
or
sbbb
push
leave
mov
cmp
lahf
pop
mov
pop
mov
xor
dec
nop
dec
pop
jo
fists
mov
aam
jmp
outsb
lea
lahf
adc
arpl
xor
stos
mov
jbe
cld
pop
xchg
sti
or
cmp
adc
stc
xor
pop
xor
dec
mov
adc
push
test
subb
sub
in
mov
pop
jo
jmp
mov
movsb
or
mov
pop
std
mov
cs
pop
sti
cmp
adc
add
push
jne
adc
jbe
and
adc
mov
data16
int
inc
test
jmp
cmp
mov
dec
push
mov
push
enter
xor
mov
or
mov
lcall
mov
mov
dec
js
dec
outsl
xlat
adc
out
inc
dec
mov
stc
cld
pop
mov
addr16
jle
std
movsb
jmp
lret
gs
jl
fisubs
dec
jbe
jl
in
jno
xchg
xchg
xor
mov
in
sbb
push
mov
insl
and
jmp
es
movsb
pushf
jo
jno
incb
sub
sub
dec
mov
mov
hlt
outsl
sub
bound
adc
mov
pop
pushf
jle
mov
fsts
imul
cmp
adc
test
dec
inc
add
stos
negl
enter
adc
in
jns
lret
xor
int3
cli
fwait
faddp
sbb
push
lods
xorl
pop
adc
out
jle
test
pushf
cmp
inc
ds
xchg
std
cmp
sub
fstpt
icebp
aas
and
bound
out
lret
pop
arpl
adc
and
out
jnp
dec
xchg
mull
jecxz
jle
push
mov
mov
pusha
push
dec
and
jbe
add
jmp
movsl
xchg
outsl
jae
popa
or
push
adc
mov
xchg
roll
cmp
pop
xor
fcomi
pop
lds
dec
dec
orb
jbe
lea
out
cli
addr16
jmp
add
iret
test
sbb
jo
xchg
jmp
xchg
repz
sub
test
xchg
add
push
adc
cmc
in
ss
js
ja
cli
cmp
lock
jbe
or
lods
inc
or
orl
js
dec
pop
dec
and
adc
les
cmp
adc
mov
push
dec
jne
inc
pop
lea
push
in
js
mov
dec
add
jle
jmp
xorps
scas
cmp
inc
push
jae
lods
dec
stc
adc
int3
je
loope
fwait
add
add
icebp
inc
push
push
in
xor
push
mov
loope
add
cmp
push
fsubrl
jmp
pop
inc
mov
test
mov
sti
fdivrs
outsb
mov
adc
clc
andl
add
ret
jmp
call
jae
fidivs
jne
xchg
pop
insl
mov
add
push
mov
mov
in
mov
pop
int3
cltd
lods
inc
adc
and
les
dec
rcrl
out
in
cmp
push
lods
lret
mov
aam
push
add
aas
sub
add
aam
xor
faddl
scas
push
dec
mov
pop
cmp
les
aam
fs
gs
scas
push
and
shld
push
in
sub
xchg
daa
into
ljmp
fisttps
and
scas
push
inc
adc
sub
cmpsl
add
lret
jge
mov
inc
out
popf
insb
mull
mov
rorl
pop
ds
loope
mov
pop
into
push
repz
fcoml
repz
lods
andb
in
outsl
repz
pop
mov
sub
mov
test
cmp
loope
out
jmp
sub
xor
sbb
mov
lahf
cli
int
push
in
pop
mov
sbb
pop
cmp
pop
jg
scas
dec
cmpsl
sbb
mov
dec
sbb
sbb
mov
add
mov
mov
dec
ret
andl
loopne
jne
adc
push
les
inc
nop
lock
movsl
inc
in
rcll
call
mov
stos
push
cmp
fistl
mov
fisubl
xchg
orl
mov
mov
jne
push
fnstcw
cmp
cmp
iret
mov
dec
int
repnz
mov
popf
or
jecxz
xchg
adc
jg
adc
stc
and
aad
out
or
fistpl
testl
push
pop
les
cmp
test
repnz
insb
inc
mov
scas
push
loopne
rorl
xchg
xchg
cmc
xchg
adc
mov
incb
inc
in
cs
daa
enter
mov
jae
aaa
inc
lods
xor
lcall
cmp
mov
push
call
movsb
xchg
lahf
add
imul
push
cltd
sbb
roll
test
popa
daa
adc
jae
rclb
cmp
mov
shl
ljmp
shll
dec
push
fadd
jmp
sbb
pusha
inc
push
mov
sbbb
loope
add
notl
cli
mov
les
stc
into
addr16
inc
pop
nop
jmp
inc
loope
mov
mov
cmp
sahf
push
pop
test
xchg
fildll
loopne
clc
ss
insb
mov
push
xlat
sbb
xor
mov
ret
push
push
ret
adc
rorl
xor
jge
ret
sbb
adc
enter
sbb
or
insb
shrl
pop
pop
xchg
xchg
add
subl
mov
sub
loopne
mov
xchg
inc
sbb
xor
xor
xchg
repnz
lds
cmp
or
insl
mulb
dec
addr16
sbb
and
fwait
xchg
loop
inc
inc
out
movsb
cwtl
cmp
sub
pop
div
push
lcall
xchg
push
adc
shl
xchg
sub
popa
shlb
adc
psrld
push
push
xchg
adc
jns
dec
pop
jb
loope
inc
cmp
dec
jmp
test
int
int
pop
adc
dec
shl
pop
rcr
cmp
fnstenv
test
roll
pop
mov
sub
xor
pop
jp
mov
or
dec
pop
cmc
or
data16
cmpsb
out
notl
fcmovbe
enter
xchg
out
cmp
mov
das
mov
sbb
mov
or
sub
and
ljmp
and
jl
out
repz
pop
sbb
mov
outsb
jne
lahf
pop
jns
push
adc
jmp
insl
sbb
mov
hlt
stos
cmp
pop
loopne
fcmove
sahf
pop
cmp
dec
jb
lock
in
jle
jno
aam
mov
test
dec
rclb
fwait
test
cltd
adc
loop
pop
shl
mov
mov
mov
inc
fcomip
pop
pop
inc
dec
mov
pop
daa
dec
ficoms
jnp
and
mov
icebp
ja
pop
cmpsb
adc
dec
pop
leave
mov
mov
jnp
dec
in
xor
popa
hlt
sub
xchg
cmp
or
pop
fwait
lret
ljmp
pop
bnd
cld
cmp
ss
rcll
sbb
stos
movsb
add
push
mov
push
aaa
xlat
sbb
ret
jno
xor
int
dec
repnz
test
in
sahf
aas
xlat
push
xor
mov
addr16
cmpsb
aam
and
sub
imul
add
push
in
push
insb
fwait
dec
dec
jp
cmp
pop
or
pop
jge
rcl
jmp
sbb
sub
mov
inc
jl
xor
xor
in
push
sbb
mov
cli
push
xchg
imul
lret
maxps
inc
pusha
out
inc
in
push
test
fwait
lcall
adc
not
test
arpl
cmp
outsb
ja
push
repnz
pop
out
xchg
push
insl
mov
dec
mov
insb
mov
fidivrl
push
cs
orl
cmpsl
in
jle
loope
push
hlt
test
mov
scas
sbb
cmp
cwtl
xchg
jg
or
mov
add
mov
push
jns
dec
bound
cmp
push
push
cmpsl
call
lret
mov
xchg
add
shl
imul
xchg
sub
mov
lds
dec
mov
dec
sbb
push
add
sub
xor
enter
and
ljmp
mov
pop
mov
mov
add
jge
icebp
in
jo
lahf
cmc
das
mov
mov
fsubs
lret
mov
mov
aam
push
jno
scas
test
adc
imul
mov
jle
mov
mov
add
daa
int3
sbbb
mov
add
push
mov
jl
xchg
fcompl
popa
int3
icebp
out
xchg
jecxz
fs
and
ja
stos
and
cmp
adc
cs
dec
mov
aad
outsb
sub
adc
hlt
in
jg
je
sub
cmp
mov
in
dec
sti
jb,pt
cmpsl
add
mov
dec
push
sbb
mov
mov
cmpsl
in
lea
mov
movsb
addb
je
cmp
mov
cmp
adc
adc
add
jp
ss
mov
mov
aad
xorb
adc
mov
test
pop
push
pop
mov
push
and
inc
insl
xchg
ret
into
push
scas
jno
cmp
lcall
push
jno
lea
mov
push
fwait
loope
mov
imul
and
push
popa
mov
in
out
and
mov
imul
lret
popa
rolb
sub
outsb
fiaddl
sbb
xor
mov
adc
add
aaa
pop
rcrl
add
mov
ucomiss
sub
ror
data16
insl
cmp
loop
cmpl
xor
xchg
mov
jnp
sbb
sbb
loopne
mov
mov
aam
or
in
adc
fidivl
cmpl
pop
rol
pop
mov
repnz
jg
sbb
or
and
cmc
shll
xor
sahf
pop
cwtl
testb
mov
mov
cwtl
push
sbb
mov
or
jp
xchg
repz
in
mov
sbb
xchg
dec
xlat
cmpsl
mov
cmp
roll
push
pop
push
inc
mov
mov
insb
cmp
rcrl
imul
ss
sbb
or
lds
jnp
ds
xchg
lds
lods
jns
dec
inc
jne
cmp
jne
hlt
jmp
mov
cwtl
movsb
stc
lods
mov
or
dec
push
lcall
lods
stos
enter
scas
fdivr
jbe
mov
xchg
adc
xlat
cmp
repz
sbb
nop
jno
sub
push
jns,pn
jbe
jno
adc
or
out
lods
pop
in
adc
lds
pop
lcall
cli
fadd
enter
pop
iret
xor
lea
mov
xchg
xchg
iret
in
repnz
imul
cmc
adc
sub
sahf
xchg
mov
movsb
jecxz
rclb
xchg
sub
jl
cmp
mov
cmpsb
and
mov
sub
scas
xchg
push
int
fsts
and
xchg
test
adc
and
ss
mov
popa
in
xchg
and
push
pop
sub
fldt
add
lds
cmp
sbb
std
test
sub
pop
cmp
mov
dec
dec
pop
dec
adcb
xor
insb
pop
push
bound
sub
xchg
iret
insl
xchg
push
adc
shl
sub
addr16
pop
dec
dec
or
test
sub
cmp
xchg
cld
push
lret
fmulp
out
pop
xchg
call
test
mov
jb
xchg
test
sbb
in
arpl
lods
scas
popf
call
inc
fs
or
outsw
add
adc
jp
stos
jg
cltd
out
sarl
xchg
popf
test
stos
mov
jl
xchg
ljmp
mov
push
xor
mov
gs
into
cmp
xchg
into
inc
in
sub
roll
xchg
jne
inc
insb
jae
jnp
xor
cmp
dec
out
orl
pop
sbb
test
xchg
jmp
iret
gs
adc
ss
mov
nop
inc
xchg
cmpb
es
lock
mov
bound
in
ja
lahf
in
jp
cmpsb
lret
mov
xchg
fwait
pop
push
test
lds
xor
pop
xor
dec
inc
pop
daa
movsb
fiaddl
imul
ret
adc
jle
nop
sbb
jns
fstl
ja
iret
je
push
dec
fisubs
and
jecxz
mov
testb
fistpl
dec
fwait
bound
push
xchg
dec
push
inc
cltd
call
jp
pop
ret
fdivr
inc
stc
push
jnp
mov
mov
in
xor
jnp
push
xor
std
nop
sbb
mov
mov
jnp
fdivl
aas
jecxz
and
jle
cmp
jle
fcmovnu
shlb
xor
xchg
mov
mov
push
outsl
pushf
and
pushl
mov
div
xchg
jl
mov
cmp
outsl
sub
loopne
icebp
push
mov
imul
dec
pusha
jp
popf
adc
insl
push
dec
inc
or
das
or
jge
inc
mov
sub
andb
xchg
cmp
and
adc
and
push
cli
sti
je
pop
inc
add
lds
inc
mov
aad
movsb
sti
mull
and
pop
stos
fwait
xchg
scas
or
clc
xchg
cmp
test
xchg
sub
mov
jb
ss
mov
inc
ja
jbe
push
mov
push
pop
xor
or
fwait
pop
outsb
pop
clc
pop
add
push
mov
roll
es
mov
fs
pop
es
pop
lock
mov
xchg
jo
push
leave
jecxz
lret
stc
out
das
aas
and
cmp
xchg
daa
imul
repz
pop
adc
cmp
enter
adc
mov
mov
inc
mov
rcrl
inc
cld
imul
mov
out
data16
mov
dec
test
mulb
sar
imul
daa
std
mov
cs
mov
mov
jo
dec
mov
loopne
insb
daa
fistpll
adc
or
lods
cmpsb
lds
xchg
pushl
adc
dec
mov
clc
paddw
xlat
loopne
lea
dec
push
fmul
test
movb
out
add
inc
es
inc
fwait
rorb
and
stos
mov
mov
nop
sub
jbe
jl
push
lds
out
jb
mov
push
mov
insl
call
stos
adc
stos
push
daa
mov
rorb
dec
adc
aaa
dec
mov
ss
roll
or
jbe
lea
cmc
mov
in
adc
leave
xor
jecxz
cmp
in
popa
xchg
ss
push
inc
rcr
in
mov
loopne
mov
jmp
mov
xchg
int3
mov
call
icebp
negb
out
cltd
cmp
fnstsw
push
xor
dec
stos
xor
test
or
flds
xchg
int3
into
addr16
sbb
je
inc
fdivl
fcmovne
push
inc
push
cwtl
or
lcall
mov
dec
test
dec
fstpt
dec
test
and
mov
sbb
nop
lods
xor
mov
sahf
das
push
leave
mov
mov
mov
scas
push
in
in
pop
pop
in
add
mov
or
lock
mov
pop
or
cmp
test
mov
pop
cli
mov
mov
add
into
les
push
cmc
jne
cmp
xchg
and
js
pop
cld
mov
sub
dec
test
lods
das
jp
in
jmp
test
mov
movsl
pop
dec
add
pushl
jmp
mov
adcl
or
xchg
icebp
out
shl
mov
roll
icebp
fldenv
add
pusha
loope
cli
ja
sbb
inc
dec
shll
fsubl
in
push
mov
or
fidivrs
push
repnz
addl
dec
xor
mov
cmp
cmp
jae
sbb
pop
int
fadd
call
andl
rcll
stos
clc
jno
jb
movsb
fcmovbe
mov
add
jbe
xchg
mov
jbe
cmpsl
pop
jnp
pop
pop
mov
xlat
and
mov
mov
and
push
push
sti
mov
mov
or
mov
xchg
mov
ret
sarb
jp
in
add
xchg
xor
xchg
add
pusha
jmp
lea
xchg
push
loop
mov
mov
inc
and
fnstsw
and
dec
aam
pusha
cmc
stos
cmp
push
jmp
inc
or
outsb
sub
pop
addr16
in
mov
mov
enter
cmp
dec
jle
mov
pop
dec
into
je
ja
in
jle
cmpsl
inc
jg
pop
dec
jl
jo
pop
lds
cmp
repnz
xchg
pop
sbb
stos
lcall
jb
jbe
fs
ret
mov
mov
out
add
jecxz
inc
xchg
lds
cli
ljmp
jae
dec
pop
adc
xorb
sub
xchg
jecxz
cs
ss
gs
ds
loop
rorb
insb
cmp
lock
mov
fdivrs
movlhps
xchg
sbb
mov
std
mov
pop
sbb
cmpsb
jmp
scas
mov
movsl
jg
jmp
mov
ret
dec
jp
ljmp
jns
add
pushf
inc
scas
sub
cs
dec
sub
jle
sub
jmp
gs
ja
popa
dec
fmull
push
pusha
pop
push
shll
addl
xchg
xchg
push
add
mov
cltd
or
mov
cmpsb
insb
mov
imul
push
add
aaa
pop
jbe
lret
or
sbb
or
mov
inc
jo
dec
dec
xchg
test
out
lcall
addr16
pop
inc
cmp
call
mov
in
imul
push
pop
mov
das
adc
nopl
stos
push
idivb
mov
adc
xchg
inc
mov
movsl
bound
mov
icebp
int3
sbb
out
dec
or
or
mov
inc
or
lock
push
in
mov
mov
jecxz
mov
loopne
xlat
inc
aad
mov
xchg
jmp
add
out
jae
ljmp
scas
mov
pop
jmp
lds
xchg
inc
popa
cmpsl
gs
cmp
adc
outsl
cli
mov
incl
and
push
pop
sbb
imul
testl
lret
stos
mov
loopne
lea
add
push
fnstenv
dec
push
push
inc
andb
enter
lods
lahf
dec
repnz
add
xchg
pop
jg
add
in
jp
add
mov
repz
push
xchg
bound
sbb
stc
stos
dec
cmc
aad
mov
xchg
addb
sti
pop
cli
xor
scas
lret
jle
ror
cmpsl
pop
movsb
jmp
movsb
lahf
sbb
xchg
sti
jo
sbb
xchg
jecxz
and
xor
outsl
push
fistps
add
push
roll
shrl
pop
fistpll
cmp
sbb
cvttps2pi
fwait
xor
xchg
loope
push
adc
enter
stos
xor
fstl
xor
nop
andb
lret
nop
stos
std
add
mov
addr16
fistpl
cmpb
xor
mov
sbb
push
mov
pop
add
fdivrs
xlat
inc
frstor
das
aad
repz
adc
pop
lret
sti
push
fwait
mov
sbb
push
lea
add
mov
arpl
aam
testb
cmpsl
in
pushl
std
pop
adc
mov
or
lret
jp
scas
ret
mov
in
inc
add
es
sub
xchg
and
lahf
gs
pop
push
rcrb
mov
les
ret
xchg
nop
inc
ljmp
mov
push
lods
pop
aad
movsl
lret
outsb
cltd
dec
xor
sti
pop
pop
jno
test
movsb
xor
ds
xchg
sarb
std
adc
icebp
or
jo
imul
ret
push
rolb
scas
sub
das
das
sarb
outsl
iret
push
xlat
sub
mov
in
pop
jg
cs
push
inc
mov
fldenv
pop
mov
cmp
adc
bound
pusha
int3
add
rcrb
cmp
mov
scas
sbbl
shrl
cmp
out
je
pop
push
mov
mov
or
pop
fs
in
cli
mov
adc
ja
mov
test
mov
rol
mov
push
sbb
mov
and
insl
ret
ja
bound
test
ret
cmp
push
push
adc
jo
sbb
add
jne
mov
sub
rcll
mov
adc
and
cmp
fwait
aas
and
jmp
cmp
jno
jp
test
fstp
pop
sbb
inc
cmc
push
xor
cs
add
fwait
lret
jle
scas
xor
std
popa
mov
loop
dec
shll
mov
push
adc
or
mov
jmp
and
inc
dec
pop
clc
ret
int3
in
dec
cmc
or
add
adc
and
daa
xor
mov
loop
fdivs
xchg
imul
into
mov
xor
mov
inc
xchg
mov
popf
das
sub
or
test
dec
out
js
lcall
mov
xlat
iret
push
push
out
push
ret
jl
mov
jle
mov
jmp
or
insl
cmp
sub
pop
pop
imul
mov
movl
into
xchg
cmpsl
mov
lods
idiv
lahf
push
fstp
ljmp
or
xorb
jno
cs
adc
or
and
jmp
or
mov
leave
lcall
cmp
stos
mov
push
in
xor
push
sbb
lods
mov
mov
test
stos
movsl
jbe
ficoml
mov
jae
and
fisubs
fisubrl
and
stos
adc
mov
insb
iret
subl
inc
sub
cmc
pushf
mov
and
mov
xor
stos
mov
insl
push
push
mov
ja
pop
add
and
push
loop
sub
enter
in
cltd
dec
scas
fwait
popa
cmc
cmpsb
int3
aas
mov
mov
inc
inc
insl
jo
sbb
je
fiadds
push
orl
fadd
insl
outsb
jecxz
sbb
cmp
cmpl
sub
jno
into
add
push
cmp
sbb
dec
or
push
jmp
push
mov
aam
scas
mov
test
roll
xor
mov
sub
in
ljmp
inc
lods
sbb
dec
dec
in
shrl
add
mov
lods
orb
sbb
call
xchg
fs
sbb
dec
cmp
sub
cli
js
sti
inc
mov
fistpl
sar
rolb
dec
dec
repz
lret
and
test
rol
pop
hlt
xacquire
xchg
sbb
lret
sub
push
mov
gs
dec
push
fiadds
sbb
sub
outsb
cmpsl
push
xor
xor
xor
icebp
leave
scas
in
fbld
clc
int
and
jecxz
jns
sub
aas
jle
inc
or
inc
and
stos
pop
jns
mov
push
dec
xchg
jmp
insb
rclb
inc
push
pop
mov
dec
push
sub
cltd
mov
adc
mov
pusha
jle
adc
pop
sbbb
nop
jne
ficoml
pop
pusha
cli
mov
push
addb
icebp
mov
push
and
push
scas
mov
aas
hlt
pop
sbb
lret
dec
or
call
mov
sarb
imul
jp
cli
ret
rolb
xchg
movsl
pop
repnz
mov
aas
aas
and
bound
and
ds
lock
rorb
add
push
loop
mov
push
xchg
cmovns
mov
sub
pushf
push
cli
xor
and
in
clc
add
jge
jmp
pop
addb
ret
dec
mov
imul
mov
fcompl
pop
mov
sbb
sub
xchg
pop
aaa
sahf
dec
pop
mov
fcmovne
loop
push
lock
call
xor
aam
icebp
add
into
xor
cmpsb
or
adc
mov
mov
scas
jno
sbb
lds
mov
sahf
insb
jecxz
mov
in
sub
ret
out
mov
push
jbe
jb
fadds
pop
sub
stos
clc
sbb
inc
sub
fisubrl
enter
mov
cmc
scas
or
sub
insl
jle
jnp
mov
pop
jecxz
out
mov
rcl
orb
in
adc
push
push
jae
push
jl
xchg
lret
stos
sahf
mov
hlt
or
adc
js
shlb
ret
inc
andl
imul
fisubl
mov
roll
repnz
shlb
push
popa
lret
ja
dec
outsl
out
mov
sbb
aam
pop
jne
add
mov
in
movsb
push
pop
and
mov
push
sbb
andb
stos
sbb
popf
mov
mov
jmp
jns
sub
mov
push
int3
lahf
or
or
popf
inc
adc
inc
cwtl
int
or
jge
dec
test
iret
scas
jbe
pop
xchg
orb
rorl
sub
mov
add
xchg
les
mov
push
push
fwait
xor
and
mov
dec
jno
push
cld
adc
jo
push
pop
add
andl
sbb
jnp
fsubs
pop
jmp
addps
mov
idivl
xchg
pushf
outsb
cwtl
and
aad
sub
stc
mov
dec
je
fs
push
sbb
jle
sub
das
push
movsb
or
aam
jp
out
test
sub
adc
sub
cs
mov
sti
int3
mov
mov
mov
addr16
inc
jle
out
sbbl
gs
scas
inc
and
jb
jmp
jmp
out
jl
cmp
add
inc
movhps
xchg
add
mov
inc
cmp
lds
mov
mov
pop
mov
jo
fsubrs
xchg
cld
mov
loopne
mov
dec
es
jge
dec
add
push
les
mov
cmp
inc
mov
cld
dec
test
add
sub
add
in
out
insb
xchg
outsb
cmp
jns
jno
xor
into
aad
xor
adc
popf
and
in
xchg
adc
std
dec
stos
push
dec
or
dec
push
push
stc
jecxz
pop
push
in
pop
loop
cld
add
or
mov
aaa
data16
sub
int
out
into
je
lea
call
sub
jo
pop
xchg
dec
xor
sub
addr16
and
repnz
mov
cmc
sub
push
andb
sbb
xorb
or
lods
jp
stos
imul
and
aaa
adc
lahf
dec
cmp
pop
daa
daa
pop
jo
push
mov
scas
cmp
outsb
fadds
sahf
mov
xor
mov
jg
pop
in
jns
sbb
clc
lock
xchg
mov
and
sub
mull
ss
cmp
pop
dec
div
sarl
cmpl
xor
mov
daa
mov
mov
xchg
das
clc
ja
adc
in
jno
dec
shlb
xchg
mov
mov
dec
gs
xor
ja
add
xchg
ljmp
cmp
stos
into
jp
fadds
ljmp
or
add
lcall
adc
fisubrs
lods
cli
add
out
bound
add
mov
cmpsb
test
hlt
push
push
mov
inc
xor
push
xchg
jnp
rorb
lea
inc
dec
loop
pushf
or
mov
gs
daa
sbb
hlt
sbb
test
aam
sub
imul
adc
enter
dec
or
scas
xor
mov
mov
popa
jns
fcmovb
sti
pop
mov
or
stc
pop
icebp
fwait
pop
aaa
test
inc
mov
js
out
sub
adc
inc
movsl
shl
pop
into
sbb
outsl
lods
cwtl
cmp
adc
xor
mov
bound
lds
inc
ret
rclb
pop
sbb
out
sbb
je
hlt
leave
ret
addr16
sub
mov
add
loope
sarl
loop
bswap
jmp
outsb
mov
rol
jnp
clc
mov
cmp
sti
xor
mov
repnz
ret
bound
decb
push
push
add
sbb
iret
adc
dec
aad
dec
lock
lea
mov
jge
add
mov
in
pop
cmp
imul
mov
cmpsl
push
jno
mov
mov
hlt
jp
mov
push
dec
aaa
sbb
xchg
mov
pop
mov
in
or
out
test
pop
xchg
cld
jp
mull
lods
psrlq
ja
jge
dec
push
fcomps
or
mov
push
and
mov
pop
and
ret
adc
lods
aas
pop
cmp
sbb
cmp
dec
mov
test
imul
repnz
outsb
push
dec
push
rol
loope
and
add
pop
pop
pop
or
and
outsb
mov
pop
cmp
add
icebp
ja
adc
add
int3
sti
ds
jmp
dec
aaa
test
fists
jnp
or
in
jo
adc
sub
sub
aas
mov
lods
mov
pop
add
xchg
js
mov
icebp
ret
mov
xor
xchg
and
movsb
mov
push
mov
cmpsb
gs
jo
dec
sbb
daa
leave
scas
sbb
imul
pop
rorb
dec
lods
adc
mov
cmp
bound
xor
sbb
pop
jno
fsubs
xchg
das
pop
jge
fsubr
outsl
stos
xor
loopne
out
jae
popa
movsb
out
nop
insb
cltd
popa
incb
mov
inc
mov
aaa
sbb
fnsave
push
out
pop
xor
sbb
push
pop
sbb
mov
xor
mov
scas
sbb
mov
repnz
jg
dec
movsb
and
push
cmp
lret
mov
adc
stc
mov
loop
mov
mov
mov
mov
cmpsb
es
mov
mov
push
push
in
push
mov
xor
mov
mov
cmpsb
lahf
xlat
add
xor
enter
int3
pop
fistpl
mov
mov
clc
mov
cmp
cmpsb
icebp
pop
and
jecxz
push
add
xchg
or
cltd
out
cltd
adc
pop
jne
push
bound
lods
popf
mov
push
or
cmpsb
jne
iret
fidivs
fcoml
out
add
and
pop
mov
test
test
cmp
pop
and
sub
jg
sahf
add
out
and
js
ljmp
out
lods
mov
jno
xchg
in
fldcw
gs
sub
daa
push
or
sbb
nop
test
inc
adc
movsl
inc
push
ss
mov
call
lcall
dec
stos
cmp
xchg
ret
out
jmp
fmull
and
pop
and
jmp
stos
int
sub
mov
roll
push
lds
cli
and
das
sub
in
imul
push
mov
loope
xor
popa
jns
or
data16
das
and
lcall
jmp
cmp
iret
sbb
sbb
ret
pop
mov
shrl
pop
ss
pop
dec
adcb
fnstcw
adc
fidivl
add
add
pop
enter
js
dec
sbb
and
sarl
sub
pop
scas
or
scas
cmp
jge,pn
scas
cmp
pop
cltd
and
pop
push
push
into
xor
xor
xchg
ds
inc
sbbl
scas
imull
xor
cltd
mov
jmp
scas
mov
dec
sahf
lcall
mov
fsubl
jo
mov
xor
popf
sub
fwait
and
ficomps
nop
aam
loope
orb
ljmp
xor
loop
pop
test
inc
pop
push
je
mov
and
shll
push
outsb
sbb
xchg
dec
pop
lods
sti
cmpsb
fwait
dec
aas
insl
std
adc
mov
addl
cmp
pop
jo
sub
and
cmpsb
seta
and
test
cwtl
or
shll
cltd
lret
repnz
and
lods
idiv
mov
push
scas
ja
sub
xchg
cld
test
sbb
popa
mov
or
pop
jle
fsubrs
sub
xor
push
fwait
ss
or
rorb
mov
pop
movb
sub
sbb
push
cmp
push
or
test
shr
xlat
aad
leave
dec
push
movsl
xchg
or
es
hlt
cmpsl
push
lcall
cmpsl
xchg
push
and
les
out
mov
divl
sub
test
lods
xchg
mov
rcrb
cmc
jecxz
sahf
out
cwtl
pop
pushf
mov
dec
loopne
pop
inc
push
jnp
outsl
fidivrl
leave
add
mov
daa
bound
shr
loopne
jp
mov
fdivrl
push
fmuls
fldcw
cmpsl
sub
jo
and
data16
sub
in
xor
outsl
inc
call
push
mov
push
addr16
stos
inc
cwtl
fadd
cmc
sbb
hlt
pushf
jmp
jecxz
pop
leave
ror
lahf
test
mov
ret
push
mov
ljmp
push
hlt
xchg
pop
rorl
dec
in
aas
movsl
pop
add
push
pop
fdivrp
pop
xchg
pop
adc
add
cltd
outsl
out
pop
movsb
mov
aam
sti
popa
loope
iret
cli
and
xchg
cmc
push
ja
int
out
mov
xor
mov
into
dec
mov
push
jbe
mov
jecxz
mov
lret
inc
cmp
xlat
jle
enter
xchg
sbb
push
test
inc
jmpw
je
data16
push
pop
mov
lret
stos
add
imul
pop
jecxz
in
mov
adc
bound
jno
enter
cmp
mov
mul
xor
sarb
dec
lods
imul
mov
sbb
xor
push
add
addr16
sub
repnz
pop
loopne
push
test
sbb
push
xchg
test
sub
cwtl
sub
add
loopne
int
stos
lock
pop
sub
leave
adc
xchg
pop
inc
xor
and
xchg
sub
cmc
mov
cmp
lock
addr16
fstpl
dec
popf
lods
sbb
into
cmp
inc
mov
dec
jno
bound
jne
pop
xor
out
inc
push
pop
jmp
mov
das
arpl
sub
in
xor
jg
or
jge
stos
jbe
dec
adc
sub
repz
or
pop
popf
jbe
stos
aad
push
and
fidivl
sub
mov
xor
out
dec
rclb
addl
and
jmp
cmp
push
stos
sbb
xchg
dec
jecxz
sbb
dec
popl
mov
mov
aad
cmp
lret
inc
das
aad
sub
pusha
aam
fmull
out
cmpsl
cs
ret
xchg
adc
outsb
aad
andb
sbbl
mov
rcll
push
in
sub
pop
movsb
std
movb
jg
jb
out
cmp
repnz
aaa
and
mov
dec
add
jle
mov
sbb
sahf
or
cli
loopne
scas
pop
cmpsl
xchg
sbb
les
insb
nop
dec
out
test
out
sbb
jle
sub
cmp
insb
je
loop
mov
aad
jne
enter
dec
adc
stos
scas
pop
rolb
mov
dec
dec
sbb
stc
mov
loope
mov
add
psrld
call
inc
mov
xor
popa
test
test
push
xor
les
cwtl
and
mov
adc
das
push
insb
jbe
jnp
inc
jo
mov
push
sub
sahf
cmpl
mov
inc
fbld
or
adc
xor
into
icebp
movsb
mov
jg
test
lret
bound
js
cmpsl
mov
cmp
lods
sub
or
cmp
fdivrp
sbb
push
xchg
ret
xor
movsb
js
or
dec
out
das
aad
xchg
loop
out
hlt
jp
aam
iret
and
sub
xor
ja
imul
lods
pusha
lea
std
dec
mov
addr16
push
cld
fcoms
jne
cmc
notb
dec
leave
inc
leave
cltd
dec
std
or
inc
mov
mov
and
dec
xchg
lcall
mov
pop
leave
je
push
mov
adc
pop
imul
dec
inc
mov
pop
push
adc
push
adc
sbb
pusha
xchg
mov
pop
or
jl
sub
mov
inc
inc
or
int3
xorl
inc
std
cmp
andb
cld
mov
sub
enter
jecxz
jo
push
mov
dec
rclb
xchg
shlb
fstps
adc
in
lea
int
fadds
sub
clc
mov
shlb
push
push
xchg
pusha
and
pop
aas
loopne
shll
sub
daa
jb
lcall
frstor
xchg
ja
not
loop
pop
sub
popf
dec
pusha
outsl
xor
inc
xor
test
pop
pop
pop
add
repz
mov
dec
cld
pop
sub
jb
sbb
fs
push
jae
out
lea
unpcklps
adc
push
inc
shll
test
lahf
inc
in
dec
push
movsl
xchg
ja
mov
dec
ds
cmc
adc
stc
out
xchg
mov
outsl
push
xchg
lea
dec
mov
pop
mov
push
jo
int3
jne
jp
mov
dec
sub
out
notl
mov
push
nop
fucomp
cmp
es
xor
sub
sarl
xor
add
pushf
push
sbb
mov
lret
mov
loope
xor
or
ret
jp
mov
stos
sahf
popa
pop
fimuls
add
mov
mov
stc
in
lret
jb
dec
push
out
mov
sub
dec
in
sbb
or
out
mov
add
sub
and
add
ds
mov
push
xor
lods
xchg
bound
sub
test
cmp
pop
jmp
sbb
lds
divb
dec
repz
inc
cmc
add
add
jo
mov
out
sub
add
rorl
movsb
push
les
fadds
xchg
jle
and
mov
jb
cmpsb
push
fldcw
sub
push
int3
dec
das
push
pop
out
rcl
js
cmpsb
or
and
mov
punpckhwd
push
sahf
xchg
xlat
popf
dec
les
jmp
cs
dec
shl
adcb
dec
out
in
sar
jb
push
sbb
sarl
ljmp
jno
and
nop
add
fstps
aas
call
or
data16
scas
mov
mov
pop
pop
sub
and
insl
push
jg
inc
mov
jbe
jbe
fs
movsb
sarl
movsl
cmp
call
cmpsb
adc
mov
imulb
lret
and
adcb
adc
mov
mov
insb
xor
inc
shll
out
xor
mov
into
jmp
out
out
lods
decl
sub
xchg
push
adc
push
xlat
xchg
les
pop
mov
inc
and
xchg
jns
mov
jns
lea
mov
outsb
bound
out
loopne
addr16
inc
sbb
je
mov
lods
mov
stos
popf
mov
incb
add
push
sbb
out
cli
pop
jge
or
and
or
mov
enter
inc
mov
jl
sub
lret
add
jno
negl
pop
test
loopne
cld
adc
int3
dec
inc
push
dec
jg
jae
mov
popf
in
movsb
pop
sub
mov
icebp
inc
cltd
jo
fstpt
mov
push
xchg
push
dec
cmp
pop
aad
andb
cmpl
jmp
jp
popa
sbb
sbb
dec
sub
mov
test
cmpsb
ss
mov
insb
sbb
xor
dec
aas
ja
pushf
out
fs
daa
subb
dec
inc
insb
flds
sbb
in
test
mov
pop
daa
inc
jns
je
add
sbb
addr16
dec
sbb
jle
jecxz
jle
jge
out
push
jno
adc
faddl
add
sbb
mov
into
notb
jns
je
sub
mov
dec
les
mov
test
loop
and
inc
leave
test
das
lds
out
int
pop
ljmp
in
sbb
jb
add
insb
pop
in
test
and
cwtl
or
loope
aam
testb
mov
test
out
xchg
push
pop
insl
sbb
pop
ja
mov
ljmp
cmpsl
sbb
or
sbb
data16
inc
adc
sarb
testl
shlb
inc
xchg
lret
lcall
and
or
sub
inc
jmp
scas
mov
ljmp
notb
pushf
int3
les
push
das
mov
movl
jle
repz
or
adc
test
sub
fsts
mov
call
sahf
xor
jmp
fucomi
sub
fiaddl
jne,pn
mov
dec
shr
jmp
imul
jnp
jg
std
mov
cmp
lret
ret
pop
mov
dec
dec
subb
negb
inc
push
daa
wbinvd
jae
xor
inc
roll
popa
sbb
movl
in
orb
shl
ret
and
xor
xor
fisttpll
adc
mov
testl
ret
aad
push
mov
fstps
add
mov
sti
pop
imul
out
mov
sbb
mov
pop
scas
mov
mov
call
mov
repnz
inc
or
in
or
bound
inc
mov
jge
mov
mov
out
or
sub
mov
fidivrs
mov
stos
and
xchg
push
adc
shlb
fisttpl
xor
stc
fdivrs
pop
rorl
cltd
mov
mov
mov
sbb
pop
and
imul
rcrb
stos
dec
sbb
fcoms
out
nop
xchg
shlb
mov
jle
xor
pop
fidivl
sbb
ja
mov
add
mov
adc
pop
lret
dec
dec
fiadds
fbstp
push
scas
cmpsb
lods
repnz
aad
out
jnp
in
ficomps
mov
sbb
repnz
xchg
cmp
cmovb
mov
mul
and
int3
fmul
ror
pop
xchg
sbb
and
add
ljmp
es
and
fistpl
jno
mov
leave
or
sbbl
push
push
jne
ss
stos
mov
jns
movsl
hlt
lods
push
insl
dec
xor
and
push
out
dec
pop
fwait
sbb
sbb
xchg
shrb
cli
mov
mov
xorl
ja
mov
dec
or
pop
test
movsl
jns
push
xchg
mov
mov
aaa
clc
and
out
das
pop
out
add
xchg
push
mov
cld
incb
outsl
loope
xlat
mov
and
sbb
lods
push
add
out
cmp
adc
cltd
shl
xor
dec
imul
mov
or
ljmp
ljmp
nop
mov
addb
arpl
push
nop
jnp
mov
dec
je
cltd
test
adc
pop
movl
cmp
int3
jecxz
clc
movsl
in
mov
mov
cs
or
clc
xchg
test
xchg
dec
pop
or
xchg
mov
inc
psubw
push
arpl
adc
ficomps
test
and
push
ja
push
mov
bound
cmpb
shlb
outsb
hlt
xor
sub
push
cli
lods
mov
lods
lds
mov
cmpsl
icebp
cmpsl
sbb
jbe
pop
clc
cli
js
in
push
sub
stos
push
sub
xchg
ss
adc
xor
into
sbb
stc
cmp
mov
ffreep
in
sbb
dec
cmp
aas
or
popf
rcrb
xorl
rcr
add
stos
add
int
or
fmul
mov
push
not
and
push
add
mov
stc
leave
aam
std
loopne
jo
pop
jno
dec
mov
jnp
cmp
movsl
jp
fmull
mov
and
jae
xchg
aaa
insb
pop
cmp
adc
fstps
xlat
insb
pop
push
test
stos
in
push
cltd
mov
ret
mov
dec
cmp
dec
xor
cs
mov
in
add
fistpll
jnp
jnp
pop
mov
pop
out
loopne
jae
cmpl
enter
dec
cmc
shll
sbb
push
movsl
push
into
pop
incb
int
jmp
dec
xchg
add
sbb
test
clc
es
sub
ja
ljmp
cmp
fnsave
sub
insb
mov
adcb
pop
fcmovnbe
inc
jb
sbb
sahf
test
push
xchg
mov
inc
outsb
js
pop
add
pop
cmp
ja
jno
push
xchg
sub
mov
adc
pop
pop
xchg
dec
arpl
js
ljmp
rorl
and
mov
js
cmp
popf
lods
arpl
ret
xchg
je
nop
sub
cld
imulb
cmp
test
insb
pop
fadd
in
mov
dec
push
mov
sub
orl
mov
jp
or
sahf
out
sbb
mov
ret
lahf
xlat
std
pop
lock
dec
xor
je
fsts
cmpsl
adc
sti
pop
cmc
in
pop
cmp
test
dec
jg
mov
cmp
or
push
test
push
pop
mov
pop
fisubrs
lods
push
int3
aaa
mov
cmpsl
add
mov
jne
mov
xor
loopne
adc
nop
cmp
adc
stos
push
cli
mov
dec
sbb
pop
stc
pop
adc
dec
das
jne
mov
aas
add
cmp
sarb
mov
int3
lret
dec
xor
dec
shl
adc
clc
adc
adc
cmp
sub
les
mov
movsb
out
fs
mov
movsb
outsb
mov
pop
scas
or
movl
jmp
lret
cmp
cmp
mov
mov
rep
dec
loope
and
sbb
out
leavew
les
leave
sbb
lret
cli
add
orb
lods
mov
mov
or
xor
add
xchg
inc
jno
sub
std
sub
jae
dec
mov
adc
je
fldenv
into
sti
cltd
pusha
pop
fldt
nop
mov
loope
or
decl
sbb
and
push
push
jge
roll
rcll
into
jg
mov
icebp
dec
es
lds
scas
enter
xchg
add
cs
test
push
in
dec
es
je
gs
add
imul
fistl
sub
cmp
sbb
mov
or
in
xor
data16
xor
mov
and
mov
js
adc
xchg
in
bound
loopne
and
lcall
pushf
jo
mov
addb
push
aas
cmp
std
or
inc
cmc
aad
leave
and
cmp
lret
imul
xchg
dec
xor
test
pop
jp
jge
or
mov
lods
out
sbb
repz
insb
xchg
fwait
leave
fwait
inc
scas
xchg
mov
mov
sahf
lahf
ljmp
test
pop
movsb
sub
int
cmpb
sub
adc
int
loop
insl
addb
inc
cmp
cltd
push
and
ss
pop
sbb
mov
lea
sbb
jno
or
in
stos
xchg
jnp
outsl
shl
add
add
out
mov
insb
fcmove
add
and
pop
scas
out
inc
mov
adc
or
mov
pop
or
mov
cltd
or
cwtl
xor
and
cwtl
mov
les
and
mov
mull
sbb
cli
popa
iret
sub
adc
daa
lods
ret
add
inc
mov
add
mov
es
loope
push
stos
loop
mov
fwait
inc
iret
repnz
pop
out
or
add
mov
pop
push
popf
rcll
aam
xchg
xchg
dec
movsl
push
ret
insb
call
xor
and
cld
ret
mov
in
and
jl
add
int3
sub
inc
jno
lahf
sarl
or
or
shlb
cs
or
and
mov
pop
inc
dec
mov
inc
enter
pop
mov
sahf
xchg
idivb
and
inc
sbb
sar
sbb
mov
inc
pop
and
pop
adc
push
pop
pop
xchg
pop
push
inc
les
jmp
pop
dec
test
movsl
lds
push
and
clc
xchg
das
mov
es
mov
push
cld
fldl
jb
inc
xchg
mov
cmpsb
push
mov
pushf
pusha
lock
test
sbb
ljmp
mov
mov
mov
adcl
inc
cmp
arpl
bound
push
data16
adc
xchg
xchg
les
push
xchg
mov
jno
adc
sub
ja
add
js
mov
sub
leave
pop
jl
mov
into
push
das
jo
push
push
mov
mov
fldl
xor
ljmp
jle
jbe
adc
aam
inc
add
jge
xchg
into
push
movsb
pop
pop
jp
xlat
int
sbb
repnz
loope
test
rcll
mov
jo
imulb
mov
pop
jne
jmp
push
imul
in
push
out
sbb
jp
xchg
jg
scas
push
and
mov
cmp
addb
aad
push
xor
and
sar
inc
mov
xor
test
fisttpll
cmp
fisttps
fdivs
add
xchg
out
cmp
add
pushf
stos
in
cwtl
sub
into
push
adc
inc
loop,pn
xchg
xor
lods
xlat
push
mov
lock
mov
mov
push
dec
push
shlb
sub
or
mov
ret
mov
fs
or
xchg
loope
push
mov
lds
jb
mov
loopne
push
or
fst
iret
and
imul
jmp
adcb
and
push
fstl
mov
mov
push
fsubr
test
test
test
and
dec
adc
test
cmp
rorb
push
xchg
push
sarb
push
out
mov
fldenv
mov
and
lcall
mov
fdivrl
aad
cltd
sbb
dec
addr16
mov
inc
fwait
pushf
pop
xor
xchg
ret
outsl
std
inc
adc
cmp
sahf
mov
mov
das
sub
mov
xchg
mov
fimuls
pop
dec
xchg
adc
sub
fsubrp
mov
cmp
mov
dec
pavgb
and
insl
outsb
adc
sbb
jns
sub
insb
xlat
mov
xlat
subb
aas
sub
test
icebp
dec
add
mov
mov
pop
bound
clc
cld
xor
dec
mov
div
push
pop
push
sbb
rcrb
mov
cmpsb
xor
cmp
lret
movsb
outsl
shlb
mov
popf
dec
iret
add
es
mov
sti
jle
loope
nop
in
fcomip
int
aad
lea
add
sbb
out
inc
inc
lcall
sbb
adc
stos
cmp
jle
sbb
fidivrs
inc
xor
push
mov
hlt
adc
mov
push
in
out
jl
add
lret
xchg
mov
mov
pop
jae
and
cli
gs
dec
ret
pop
inc
mov
cmp
fwait
jne
aad
icebp
test
lods
ds
imul
mov
xchg
and
aas
pop
adc
das
push
sub
and
lds
jo
lods
add
jge
cmp
push
das
data16
sub
jg
cmp
sub
loope
jmp
pop
stos
in
mov
mov
jae
rorl
pop
sub
xchg
int3
int3
push
push
mov
leave
push
pop
push
shlb
add
mov
leave
test
pop
mov
scas
jo
cmp
pop
std
push
dec
lods
fstpl
arpl
pop
jp
inc
sbb
fucomip
mov
fwait
shl
dec
lods
xchg
loop
aad
inc
and
mov
xor
dec
xchg
sub
add
cmp
imul
mov
imul
add
cmpb
in
fs
xchg
and
fsubl
push
shlb
and
xchg
or
fdivrs
inc
cmpl
pop
scas
es
popf
lcall
shlb
lods
lds
xchg
jno
insb
jae
ljmp
ss
push
clc
shrb
call
lods
mov
mov
xor
mov
mov
mov
push
in
dec
fidivl
xchg
xor
sbb
in
mov
bound
in
cltd
lret
jg
ss
jle
ret
mov
arpl
pop
xchg
mov
sbbl
push
movsb
jle
stos
sahf
mov
out
out
xor
push
add
dec
in
dec
dec
and
pop
add
mov
push
lret
pop
mov
push
jnp
push
mov
jno
or
f2xm1
add
sub
icebp
xchg
aad
inc
mov
inc
test
xchg
lds
lods
stos
sbb
aas
pop
cmp
dec
aam
scas
es
scas
movsl
jnp
stc
add
sbb
or
rcrb
lods
push
sub
div
int3
inc
sbb
inc
cmp
js
repnz
gs
test
or
mov
mov
or
out
mov
lahf
inc
push
and
mov
scas
or
xlat
jmp
es
mov
repnz
lods
movsl
jnp
jb
push
jno
in
data16
xchg
out
cmp
adc
dec
inc
fbstp
test
imul
or
jmp
lcall
pop
inc
icebp
jge
fisubrl
fisubrs
arpl
jae
lods
jbe
add
xchg
outsb
dec
adc
inc
jb
cmpsb
adc
movsl
jb
dec
scas
sbb
cmp
arpl
mov
cmp
rorl
das
in
leave
call
mov
sbbl
xchg
pop
dec
movsb
sub
aad
leave
jle
mov
fidivs
data16
jecxz
gs
mov
outsb
jmp
inc
fstl
jae
scas
adc
daa
and
mov
xor
mov
sub
push
mov
test
push
stc
int3
fisubrs
gs
lds
cmpl
xchg
pusha
bound
jae
mov
add
inc
inc
in
mov
iret
cmp
and
call
push
xlat
push
and
and
icebp
rorb
sub
pop
clc
push
sbb
mov
xchg
adc
xchg
fsubs
inc
loope
mov
loope
xchg
xchg
pop
and
or
call
add
pop
andb
inc
dec
dec
mov
jb
incl
and
imul
xor
lea
mov
repz
es
movsb
cmpsl
lods
lds
xor
js
add
fisttpl
fcoms
icebp
stos
fwait
jnp
stos
aad
pop
out
cltd
xchg
push
add
mov
and
bound
sub
cltd
mov
shlb
push
pushf
out
cmp
dec
arpl
mov
push
push
and
cmp
cmpsb
inc
movl
mov
lcall
jno
stc
mov
loop
mov
or
call
movsl
sub
mov
push
js
dec
and
andb
fisubs
add
nop
jmp
in
add
inc
push
xchg
mov
inc
push
mov
leave
out
fs
mov
sbb
subb
divb
lods
mov
sbb
mov
inc
leave
xorb
fstpl
clc
push
sbb
cli
sbb
inc
jb
je
xchg
mov
ficoms
negb
insb
pop
ja
aam
mov
or
ljmp
sbb
xor
jp
jbe
xor
xchg
ljmp
cmpsl
lret
inc
sub
sub
movsb
pop
sub
cmp
outsb
mov
cmp
dec
in
push
lcall
arpl
push
xchg
xchg
fwait
jle
dec
stos
testl
pushf
xlat
mov
mov
outsl
adc
out
sbb
lcall
lods
mov
dec
ffree
cmp
push
fcomp
shl
sbb
movl
mov
cld
sbb
mov
sbb
push
in
mov
adc
stc
imul
stc
ja
mov
or
pushf
sub
or
data16
ds
test
sbb
and
cld
aas
jb
imul
push
popf
jmp
jp
sbb
test
lret
lret
nop
mov
lods
scas
dec
jp
repnz
mov
mov
cmpsl
imul
bound
dec
dec
int
fldl
mov
inc
lods
in
pop
pop
and
mov
lcall
or
xor
inc
lods
aas
bound
sahf
jge
fldl
mov
movsl
sub
ret
in
cltd
mov
cmp
sub
test
dec
sbb
xor
dec
mov
push
mov
inc
imull
aam
and
cmp
and
jb
adc
or
jmp
or
jno
jmp
inc
sub
inc
out
cmp
or
shlb
iret
and
sbb
dec
and
inc
in
js
jnp
pop
fistpl
or
add
and
cmp
cmp
dec
add
mov
mov
ja
ret
dec
ret
cmpsb
sub
mov
cmp
in
andl
pop
xchg
popa
sti
sti
adc
and
jnp
dec
ljmp
out
sbb
inc
pop
sub
jecxz
pop
rcl
popf
arpl
aad
rorl
iret
jge
ret
push
test
movsl
pop
adc
dec
daa
jle
sbb
mov
jle
repnz
fwait
js
aaa
sub
pop
xor
hlt
push
xchg
icebp
mov
fildl
testl
pop
shrb
cs
mov
fistps
sbb
sahf
ds
test
xchg
leave
in
test
out
aam
jge
push
or
or
stos
out
lea
repz
nop
jle
xor
push
xchg
xchg
pop
and
jg
les
outsb
popa
jbe
or
aad
cmp
jnp
ret
cmp
out
pop
mov
mov
push
xchg
and
out
loopne
fstps
leave
mov
into
cmp
stos
xchg
sahf
sbb
jecxz
scas
sar
push
and
mov
sbb
aaa
lds
push
adc
xchg
out
sbb
or
mov
or
mov
cltd
outsb
dec
pushl
pop
xchg
mov
pop
xor
mov
lock
daa
push
and
insb
insb
sub
leave
xchg
sbb
xor
and
scas
ret
cmp
xchg
cmp
test
ss
dec
jns
test
out
ret
sbbl
leave
mulb
stc
sbb
sub
xchg
push
addr16
repz
mov
icebp
adc
and
sub
out
icebp
mov
lods
aad
mov
rol
mov
into
stc
xlat
pop
inc
cmp
jmp
dec
push
aas
aaa
xchg
mov
jno
xor
inc
icebp
sub
fbld
rorb
sub
stos
fwait
scas
pop
fdivs
loope
pop
push
fisttpl
fdivs
popf
repnz
xchg
xor
hlt
pop
dec
mov
lcall
xlat
sub
inc
idivl
inc
leave
adc
push
xchg
fsub
jecxz
aam
or
std
pop
xlat
adc
ficomps
jl
cmp
sbb
lret
sahf
into
push
ss
inc
pop
sbb
out
push
ret
push
sub
in
scas
lret
mov
push
dec
adc
and
leave
out
mov
divl
push
lea
sbb
lods
pop
add
push
out
adc
cmp
and
jne
lret
dec
aaa
xor
jge
aas
mov
or
dec
jae
mov
xor
inc
pop
pop
add
jle
insb
sub
mov
push
mov
sub
add
nop
dec
enter
js
cli
mov
aad
aam
or
lods
jmp
imul
cwtl
xor
js
mov
cli
xchg
adc
add
dec
pop
outsl
jmp
jno
fsubs
xchg
sahf
mov
and
xlat
addr16
pop
jno
mov
inc
xchg
ret
cli
test
sbb
in
int3
jbe
or
mov
mov
jecxz
sub
sbb
inc
cmc
cmp
lret
lods
add
and
stos
lea
repz
pop
inc
push
gs
inc
in
lahf
mov
sub
cmp
sbb
repz
lret
insl
cmp
ja
movsb
mov
sbb
adc
out
popa
ret
das
cmp
adc
pop
fs
test
ret
test
sarb
inc
addr16
mov
or
fmull
lcall
inc
push
pop
mov
leave
adc
jo
out
rclb
daa
lret
xor
mov
ja
jg
mov
inc
out
lods
ss
lahf
inc
imul
cmpsl
jne
aad
jecxz
mov
subb
rolb
cmpsl
hlt
sbb
stos
insl
js
into
testl
dec
sbb
mov
stc
stos
inc
ljmp
js
dec
cld
push
in
cmp
ss
jmp
stc
nop
add
cmc
dec
lahf
icebp
jnp
dec
jecxz
mov
sahf
sub
ret
loopne
pop
in
or
push
jp
add
pop
pop
sahf
sbb
and
in
rcl
ret
mov
adc
cli
xor
mov
dec
lahf
test
and
mov
add
sbb
loope
sbb
push
dec
loopne
in
xor
nop
push
lock
data16
inc
cmp
shrb
pop
jmp
sub
lock
ret
pop
inc
or
sub
push
leave
lret
int
imul
jb
xchg
lds
rcll
fstpl
stos
adc
cld
add
xor
hlt
rol
addr16
std
jne
repnz
mov
inc
std
scas
mov
dec
in
pop
adc
lods
add
lea
mov
lret
sbb
scas
push
xlat
dec
pushf
xor
fs
ljmp
cmp
leave
fidivrs
aad
sbb
movsb
xchg
push
mov
push
and
xchg
xchg
add
pop
hlt
in
bound
adc
mov
dec
inc
or
aas
sbb
test
sbb
je
dec
lods
roll
push
adc
inc
fiaddl
sbb
and
outsb
dec
sub
mov
mov
xor
mov
sahf
jnp
jbe
inc
pusha
sub
lea
dec
adcb
insl
sbb
pop
push
add
lods
stos
outsl
cmp
leave
push
pop
arpl
mov
js
push
add
out
sbb
add
imul
rolb
and
xchg
sbb
adc
inc
inc
cmp
xor
lret
lcall
shrd
ja
rcrl
lret
movsb
inc
xchg
stos
aas
mov
lea
js
add
sub
cwtl
sbb
mov
lods
or
jmp
sti
test
sti
xchg
bound
cmc
out
xchg
push
or
add
or
jnp
in
out
fdivs
imul
lock
inc
das
imul
mov
cltd
enter
jns
add
sub
cmp
divl
arpl
leave
sbb
and
mov
test
pop
movsl
pop
mov
nop
pusha
fwait
and
xor
cmovae
rcrl
imul
test
xchg
loopne
pop
ja
cmc
pop
fisubl
adc
mov
jae
adc
sbb
hlt
pop
shrl
pushf
adc
sub
pop
fimuls
das
mov
jecxz
sub
mov
sbb
out
xor
inc
mov
cmp
sbb
js
jl
sbb
sti
in
aas
stos
adc
data16
ret
inc
add
icebp
xor
scas
xchg
pushf
pusha
push
in
mov
nop
mov
ret
fiadds
int3
dec
and
lods
fisubrs
cli
aaa
ljmp
xchg
xor
push
cs
and
xchg
popf
les
xlat
adc
mov
jbe
in
bound
ret
mov
xchg
sbb
mov
jl
les
pop
iret
scas
jae
pusha
mov
jp
lcall
jo
cmp
imul
cli
xchg
or
std
ss
cltd
cwtl
pop
enter
fisttpl
popf
inc
dec
xchg
stc
lret
arpl
test
scas
mov
out
mov
push
sub
test
xchg
push
cmpsl
adc
push
das
je
pop
push
imul
orl
jne
cmpb
arpl
xchg
ljmp
inc
mov
in
lret
aaa
cwtl
and
jp
aad
fmul
adcl
nop
sub
cmp
mov
cmp
movsl
arpl
loope
ficomps
push
cltd
pusha
xor
xchg
xor
test
and
xor
rorb
insb
cwtl
pop
sbb
clc
test
movsb
xor
add
iret
int
cmp
inc
rcll
test
adc
shll
bound
clc
push
movsl
mov
sub
push
fcom
loope
jbe
sbb
leave
std
mov
daa
or
lods
enter
xchg
mov
sub
xchg
std
orb
mov
adc
dec
out
and
jp
scas
lahf
xor
lds
jo
mov
jo
je
sti
sub
dec
inc
cs
loopne
mov
fsubs
repz
cld
and
test
das
and
add
imul
push
fnsave
jb
pop
mov
lahf
push
or
jo
xor
mov
faddl
push
mov
pop
cwtl
xor
movsb
dec
cmp
imul
dec
push
jp
cmpsb
sbb
mov
push
lcall
arpl
pop
push
push
or
cmp
fbstp
pop
inc
pop
fmuls
jno
fisttpll
sub
jno
cltd
pop
and
js
fwait
mov
ss
fnstcw
dec
aam
dec
pop
loopne
pop
sub
lods
cli
cmp
mov
aad
inc
aad
les
jle
mov
mov
dec
pop
mov
jbe
dec
dec
xchg
stos
inc
jle
into
cld
dec
in
xor
or
mov
int
pop
mov
add
out
pop
push
mov
stos
mov
aas
aaa
mov
mov
mov
test
movsb
lods
int
mov
sbb
mov
dec
es
lahf
xor
out
sub
mov
icebp
jne
pushf
mov
stos
mov
sti
dec
cmpsb
out
xchg
mov
sub
in
outsl
sbb
lea
mov
sub
dec
orb
jge
xor
or
dec
jg
aam
mov
lahf
xlat
es
outsl
dec
cmpsb
cli
add
lods
ss
imul
mov
mov
xchg
pop
cmp
pusha
xchg
imul
jo
and
mov
push
iret
dec
mov
outsb
scas
jge
test
jmp
inc
push
mov
out
data16
popf
rclb
push
push
mov
imul
ljmp
mov
or
xchg
xchg
push
andl
shl
inc
push
pop
cmp
push
loopne
jle
dec
mov
xor
inc
dec
lea
jno
pop
and
mov
dec
xor
fcoms
sbb
xor
sahf
stos
xor
repnz
sbb
repz
rcrl
aas
and
pusha
inc
pop
jmp
std
jno
dec
mov
inc
in
jle
mov
push
pop
sbb
das
push
data16
mov
test
outsl
cmp
cld
outsl
outsl
nop
iret
addr16
push
fists
out
mov
mov
adc
or
xlat
popf
fadds
mov
addr16
mov
jmp
jle
push
iret
xor
orl
xchg
ret
jnp
pop
cmp
and
xorb
jb
and
and
lock
test
mov
je
jmp
or
data16
cmp
dec
sarl
jb
in
xchg
inc
inc
inc
int
lods
xchg
out
push
jle
pushf
push
xchg
int
adc
test
fsts
inc
xchg
das
and
inc
sub
mov
sbb
mov
stos
pop
sbb
mov
repz
xchg
mov
add
jne
lods
mov
xor
mov
mov
dec
jmp
notl
jae
mov
mov
loopne
sbb
jae
stos
mov
or
and
nop
push
inc
es
sarb
hlt
sbbb
movsb
fcmovb
pusha
add
mov
push
mov
test
mov
loope
pop
and
xor
iret
xchg
je
pop
bound
and
inc
mov
pushf
cmp
lret
xor
lret
push
nop
lcall
or
sub
jo
popf
xchg
popf
pusha
mov
mov
or
ret
dec
dec
ds
jge
push
loope
test
add
lahf
jge
mov
inc
sahf
sahf
fwait
inc
in
rcrb
inc
cli
ss
les
cmp
div
adc
pop
jp
shll
push
scas
bound
inc
jo
mull
inc
test
test
andl
mov
int
mov
jge
aas
mov
sbbl
ficoml
fdivs
movsl
mov
aam
jb
lret
push
xchg
xchg
lods
pop
outsb
sub
std
add
or
scas
imul
xchg
add
xor
or
in
pop
insl
mov
lods
xchg
mul
and
es
pop
jmp
fucomip
push
adc
popf
nop
pop
push
add
les
cld
or
xchg
popf
aam
add
pop
je
es
push
bound
dec
cwtl
lock
mov
loop
jae
adc
push
pushf
mov
jbe
cmpsb
ret
mov
cs
movsb
out
push
xor
inc
iret
clc
into
and
jl
push
ds
lods
int
pop
outsl
daa
sub
bound
sahf
sub
xchg
mov
cmp
das
scas
out
scas
test
sbb
mov
lret
jecxz
addr16
sbb
sahf
mov
adc
push
cmp
cld
test
xor
sub
ret
incl
mov
outsb
sub
or
scas
pop
jg
fnstsw
pusha
xchg
ret
dec
fists
xchg
and
mov
add
xor
xor
and
or
scas
rcr
mul
sarb
mov
pusha
push
shll
in
lahf
push
cmp
scas
adc
cltd
sub
xchg
repnz
out
loopne
insl
sti
sbb
in
mov
add
pop
ss
xor
xorl
inc
data16
shl
fdivs
sti
mov
or
dec
push
xor
pop
gs
push
adc
or
loopne
roll
xchg
and
pop
jno
roll
scas
or
adc
inc
cmp
or
add
push
dec
sub
jo
jmp
lret
mov
sub
rorl
mov
pop
sbb
mov
mov
rcrb
mov
in
lret
sbb
add
lea
sbb
addr16
jge
mov
pop
fiadds
xor
or
cld
test
and
bound
into
inc
movsl
pop
fisubrs
aam
fdivrs
dec
fsub
lret
jo
test
fs
outsb
in
sub
sbb
mov
pushf
dec
fwait
stc
pushf
in
sbb
push
pop
push
push
inc
mov
cmp
inc
push
pop
add
mov
sub
and
mov
in
imul
pop
cwtl
sti
imul
dec
cld
sub
lret
gs
aam
and
in
loop
data16
xchg
xlat
insl
fistpll
sahf
jl
shll
xlat
mov
jns
out
inc
ret
inc
es
dec
cs
nop
aam
testb
ds
fiadds
push
sub
dec
test
fcomps
jle
data16
add
aad
std
xchg
and
mov
aas
or
insl
pop
inc
ffreep
outsb
xchg
cmpsl
cmp
dec
xchg
add
sar
xor
add
movsl
leave
cwtl
pop
inc
aaa
mov
cwtl
call
push
sarl
daa
shl
sub
inc
push
fwait
test
mov
inc
pop
out
or
xchg
push
mov
js
or
add
ret
leave
mov
jmp
dec
nop
subl
subb
pop
xchg
stos
inc
movsl
mov
and
push
das
pop
loopne
pop
cli
mov
xchg
jns
sbb
push
dec
xchg
push
pop
cmp
add
xchg
into
fwait
push
fnstcw
jecxz
cmp
push
mov
xchg
xchg
adc
shrl
mov
rcr
cmp
fiaddl
adc
lock
cmp
push
mov
mov
fbstp
fbstp
or
mov
adc
dec
push
jmp
adc
test
pop
cld
pop
loope
jnp
lods
mov
mov
jle
mov
ja
inc
xlat
jge
xor
repz
dec
dec
jo
pop
test
popf
outsb
int
pop
test
xor
pop
mov
in
cmc
call
xor
jae
dec
sbb
jnp
imull
icebp
pop
or
cs
cmp
xor
xchg
in
dec
or
jns
iret
ficoml
inc
addr16
mov
orw
mov
xor
mov
and
push
stos
adc
inc
enter
iret
inc
lock
sahf
repz
dec
or
pop
iret
pop
mov
sbb
addr16
cmp
repnz
test
stos
scas
sbb
call
sub
pushf
inc
jmp
mov
push
sub
jne
cmpl
xchg
inc
add
loope
jl
push
movsl
mov
enter
rcrb
mov
jns
mov
test
cmp
adc
sahf
cmpsl
xlat
push
aad
dec
mov
adc
sbb
js
adc
xor
scas
cmp
jnp
stc
push
pop
aaa
into
jae
inc
mov
inc
pop
push
xchg
das
das
je
cltd
addl
movsb
add
pop
pop
in
stc
and
cmc
rolb
iret
das
mov
lahf
aaa
mov
movsb
sub
int3
mov
cmp
insb
push
in
test
jp
adc
popf
das
sti
shll
enter
pop
and
out
ficompl
cmp
mov
inc
jl
in
in
mov
repz
push
jne
out
xchg
lods
mov
cld
dec
inc
xchg
lcall
in
sbb
cwtl
xchg
mov
add
push
lret
add
out
push
push
add
popf
pop
fnclex
sti
aam
inc
hlt
insl
xchg
lods
fldl
insl
and
cld
jbe
inc
mov
cmp
cltd
cmc
jno
jo
and
add
xchg
pop
mov
adc
mov
xor
int3
movsl
out
iret
jmp
aam
lret
fisubs
js
movsb
inc
inc
adc
pop
shr
xchg
mov
ljmp
mov
aaa
test
fcoms
cmp
mov
fdivl
imul
das
cmpsb
xchg
push
aad
subb
and
dec
mov
and
push
jmp
fistpl
mov
sub
ljmp
ficoml
pop
add
jmp
sbb
mov
dec
ret
nop
hlt
pop
xlat
out
mov
bound
fs
sub
movsb
and
cmpsb
imul
jo
clc
mov
adc
pop
adc
enter
ret
mov
push
testl
data16
std
outsl
add
cwtl
mov
fs
cmp
mov
int3
add
mov
fsubl
fstpl
dec
sub
mov
aaa
repnz
cli
xor
incb
dec
mov
add
mov
cmp
mov
pop
add
stos
jne
rcll
scas
sbb
in
add
popf
sarb
xchg
mov
mov
imul
idivl
popa
xor
shlb
sarb
int3
pop
and
popf
test
jle
jge
out
cld
dec
sbb
lock
xchg
jbe
sub
mov
into
cld
pop
stos
lods
int
xchg
xlat
xor
cltd
push
push
dec
daa
push
fisubl
pop
add
pop
fwait
inc
or
jg
fisubs
ja
stc
in
stc
std
daa
add
imulb
lods
pop
mov
adc
lods
jmp
push
xchg
push
pop
jno
mov
xor
xor
loopne
test
imul
popa
shrb
rclb
lret
push
addb
jbe
jecxz
sbb
xor
pop
pop
jg
and
out
inc
mov
xchg
punpckhdq
ficoml
lret
orb
cmp
sub
xor
jb
lahf
pop
mov
lds
out
push
cwtl
mov
push
rol
stos
dec
inc
test
sti
int3
jp
jg
dec
sbb
icebp
jl
pop
sub
jmp
jo
out
pop
xor
or
mov
sub
adc
bound
inc
inc
and
dec
lods
cmp
filds
mov
and
ror
jo
and
jmp
mov
clc
cltd
jp
int3
and
cmp
insl
mov
test
add
imul
and
adc
mov
add
push
enter
push
loop
pop
sub
or
sbb
push
adc
fiaddl
jecxz
and
jge
xchg
mov
fwait
inc
mov
or
mov
push
mov
add
adc
ds
mov
or
hlt
xchg
xchg
js
sub
jnp
inc
fadd
add
jae
xchg
adc
dec
in
dec
mov
fldpi
cltd
cmc
ficoms
jecxz
or
dec
std
jno
lcall
scas
jnp
repz
iret
cs
sub
or
nop
cmp
xchg
arpl
xchg
jl
jp
mov
daa
pop
inc
adc
lss
rcl
and
mov
idiv
mov
sub
mov
test
stos
lahf
mov
inc
and
xor
add
fists
pusha
jbe
js
mov
add
mov
test
sti
scas
jnp
mov
or
hlt
addl
fnstsw
adc
fcmovu
xor
popf
dec
adc
lea
shll
push
popa
xor
and
fisubrs
ret
je
test
jp
push
cwtl
inc
jne
in
xor
dec
imul
andl
or
inc
loope
mov
push
pop
cli
adc
sarl
insl
std
ljmp
enter
ret
jp
ss
jns
aas
sub
jae
mov
sub
roll
fsts
rolb
mov
cli
adc
dec
arpl
fists
ret
insb
xor
xor
pop
push
or
loopne
aaa
push
cli
in
xchg
jl
cmp
cmp
or
dec
mov
shlb
add
cmc
icebp
xor
xchg
cwtl
stos
jle
js
xor
jo
jne
arpl
imul
aaa
in
ja
dec
jg
shll
shrl
dec
push
insl
xor
lahf
push
fildl
push
mov
popf
out
mov
cwtl
inc
test
out
std
pop
mov
jmp
inc
push
ret
adc
cmp
add
and
js
xchg
mov
pop
and
in
fsubr
add
mov
mov
push
pusha
mov
and
sbb
dec
inc
jno
idivl
or
cmpsl
inc
sbb
mov
aaa
pop
xchg
mov
mov
sub
pop
inc
sub
addr16
repnz
ljmp
out
push
scas
add
out
pushf
mov
lods
aad
ljmp
jmp
cmpsl
mov
imul
and
cmp
xlat
pushf
inc
mov
stos
fistpll
push
test
xlat
push
xor
mov
fisttpll
mov
fldlg2
push
xorb
sub
and
sarb
push
aas
pop
loopne
stos
jae
mov
sbb
mov
adc
outsl
ret
cmc
lret
add
xor
andl
jl
adc
in
cmp
stos
jmp
jns
nop
or
sbb
push
orb
cmp
push
dec
loopne
push
mov
clc
mov
clc
in
cli
pop
push
out
add
push
add
scas
pusha
mov
stos
imul
push
imul
jnp
rcl
seta
mov
jl
orl
stc
std
jl
pop
jnp
ljmp
sahf
rcrl
xchg
fistpll
sbb
test
scas
gs
lods
cli
xchg
push
cmp
out
scas
xor
jbe
aad
or
in
xchg
push
mov
mov
gs
push
xlat
lahf
in
sbb
jmp
stc
addl
and
jo
enter
mov
les
mov
imul
mov
push
mov
adc
cmp
pop
and
cmp
loopne
pop
sbb
mov
ja
mov
jmp
cmp
in
call
addl
mov
stos
jmp
repnz
int3
dec
jge
iret
je
or
loope
push
jno
adc
or
data16
popf
loope
int
sub
mov
out
nop
nop
out
stos
or
outsl
add
fwait
mov
mov
mov
adc
popf
pop
sbb
loop
rcrl
pop
in
aam
and
int
repnz
fwait
add
es
pop
adc
daa
sbb
adc
inc
stos
fwait
outsl
es
add
loop
lods
iret
jno
mov
fiadds
out
cmp
xchg
push
sbb
in
push
inc
xor
jmp
or
pop
test
aam
sub
sbb
xor
lcall
xchg
jp
enter
aam
dec
cmp
rdtsc
dec
pop
lea
jo
jns
and
call
dec
in
pop
stc
pusha
fidivrl
lahf
call
out
jmp
push
sbb
rolb
jno
in
add
shrb
or
pop
mov
add
xchg
les
nop
pop
test
pop
lea
movsl
stos
popfw
and
push
cmp
push
loop
or
outsb
scas
adcb
inc
dec
mov
or
lock
clc
add
mov
add
jl
or
push
jg
js
mov
dec
std
clc
ret
jne
adc
ret
das
pusha
cmp
sbb
push
dec
add
inc
repnz
sbb
jl
in
jle
xor
and
jmp
js
mov
std
outsb
push
jecxz
enter
shl
rcrl
dec
testb
scas
imul
aaa
scas
push
pop
outsb
dec
mov
loop
cmpsb
add
mov
fildl
sub
aas
insb
xor
adc
fs
add
pop
xchg
cmp
shrl
xchg
dec
dec
pusha
int
cmpsb
jl
shl
mov
sub
sub
loop
push
xor
cmpsb
fpatan
sub
xor
mov
sub
shll
jb
sbb
imul
push
cmpsb
mov
xor
adc
or
into
xchg
inc
les
add
push
push
jp
xor
in
xchg
sti
fstl
add
addr16
cmp
dec
data16
stos
xchg
or
fs
cli
sbb
cli
iret
mov
insl
xor
addb
dec
ficompl
lea
test
test
pushf
jae
fdivrs
shrl
push
jnp
lahf
int3
loopne
xchg
pushf
std
pop
sahf
xor
adc
push
cltd
cli
add
loop
ret
lock
and
xorb
fs
mov
out
xchg
jbe
add
test
inc
stc
cmpsl
dec
cli
mov
fnstenv
pop
xchg
ss
inc
jae
push
testl
leave
movsb
imulb
shrb
mov
dec
adc
inc
push
mov
les
mov
jp
outsl
cmpsb
mov
dec
add
xor
dec
call
aad
int
andb
out
sub
imul
jno
dec
xor
rcr
outsb
lea
rolb
or
ret
pop
loop
imul
push
repnz
js
inc
mov
clc
cmp
adc
inc
jg
dec
or
push
shrl
mov
mov
mov
dec
in
into
outsl
ficompl
mov
add
daa
xchg
cmp
push
cs
mov
push
rolb
fwait
sbb
dec
dec
xchg
imul
mov
mov
dec
mov
insl
pop
inc
fdiv
adc
inc
push
sub
inc
cmp
xchg
adc
mov
mov
fdivs
cmp
jg
dec
mov
and
rcrb
jp
clc
std
sbb
stos
popa
shrl
push
xor
mov
in
inc
pusha
xchg
dec
xchg
test
and
aaa
mov
leave
jbe
push
dec
les
mov
adc
sbb
or
inc
fcmovnu
xchg
ret
pop
cwtl
call
inc
lcall
jp
add
pop
pop
addb
add
int
gs
mov
aaa
cmpsl
int
push
fisubs
cmpsl
imul
jns
stc
sbb
fidivs
push
clc
fisubl
ss
sub
jge
mov
xlat
push
cmp
pop
or
dec
jb
aad
pop
stc
mov
xor
fstl
and
sub
stc
lcall
lds
cmp
hlt
push
adc
pop
imul
daa
pop
arpl
push
sub
xadd
inc
dec
sub
adc
inc
ja
push
add
pusha
movsl
imul
mov
mov
aad
test
cmp
fsubl
jge
jne
jno
ret
jmp
sub
enter
sbb
mov
jns
loop
adc
stos
pop
iret
negb
mov
and
sbb
mov
mov
push
ja
jnp
addl
sahf
aas
repz
dec
jno
addr16
xlat
insb
add
scas
inc
add
jae
pop
jo
pop
pop
inc
pop
xor
mov
ja
adc
jg
nop
sbb
fwait
lock
ud0
dec
and
pop
out
mov
std
ljmp
outsl
pop
test
adc
and
xchg
das
out
cmp
dec
push
das
dec
std
add
push
adc
lcall
cltd
sbb
pop
je
xchg
mov
divb
lret
out
hlt
adc
mov
mov
jg
cmp
push
mov
int
mov
mov
nop
js
inc
inc
inc
dec
jmp
pop
or
stos
hlt
push
mov
jo
std
ret
stos
sbb
mov
mov
add
mulb
xchg
sub
ja
loopne
cmp
daa
mov
sub
shl
pop
mov
adc
push
iret
stos
fs
push
mov
mov
fnstenv
xchg
push
or
sub
imul
jp,pt
jns
repnz
mov
push
push
loopne
lds
repz
pop
add
fadds
call
jle
jl
and
sahf
mov
xchg
icebp
inc
or
jbe
mov
div
mov
sub
icebp
jnp,pt
mov
jo
cmp
xchg
es
mov
and
add
pop
jecxz
popf
xchg
dec
movsb
inc
mov
lahf
and
bound
add
out
leave
sahf
mov
add
mov
jns
call
in
stos
loope
dec
or
outsb
aam
fdiv
xor
out
lock
push
mov
or
xchg
loop
leave
fwait
repz
lret
les
xchg
dec
std
movl
mov
mov
fdivrs
imul
and
lahf
out
push
into
sarb
xchg
lret
imul
or
jge
div
and
leave
in
shll
push
lahf
addr16
pop
ret
xor
sbb
mov
rcrb
adcl
arpl
push
pop
pop
mov
adc
pop
mov
jbe
iret
fisubl
add
sbb
pop
mov
pop
out
das
in
push
daa
jnp
dec
cmpsb
fisubrs
or
pop
and
int
lret
loop
sahf
adc
cmpsl
int
cltd
cltd
lods
mov
aaa
popa
jbe
push
or
cmp
mov
sub
pop
lds
mov
cmp
cwtl
mov
xor
jns
mov
add
mov
in
test
pop
xchg
cli
dec
test
clc
xlat
stos
mov
and
cld
push
enter
in
fsubrs
xchg
dec
je
push
xchg
xor
cmp
inc
pop
dec
fldt
rcrb
repnz
shlb
jmp
leave
add
sub
lds
mov
or
cmpsb
mov
cmp
test
xchg
les
xor
pop
hlt
out
add
sbb
xlat
pop
fwait
pop
lods
add
xchg
orb
stos
and
add
scas
push
iret
fcomps
mulb
aam
mov
daa
sub
mov
lock
scas
aas
adc
dec
mov
sbb
int
iret
jge
dec
cli
inc
fdivrs
pop
iret
fcomip
mov
xchg
mov
jp
in
fldl
cli
inc
mov
cmp
xchg
cmp
mov
pop
out
hlt
lea
sahf
jb
mov
pusha
and
add
mull
jbe
stos
add
cmp
xor
mov
shll
push
les
int3
mov
sarl
jle
xorl
ret
cmp
and
repnz
stc
into
loop
shll
je
mov
mov
xchg
mov
sbb
imull
mov
pop
lcall
mov
out
outsl
shl
pop
mov
insl
js
pop
push
popf
push
inc
add
das
cmp
push
fwait
aad
push
or
dec
xlat
adc
scas
and
xchg
loop
fldl
mov
dec
push
ja
fisubrs
cwtl
shrl
in
add
or
rcr
push
lea
int
je
mov
aaa
pop
in
mov
mov
fmuls
mov
test
inc
jo
insl
inc
sub
mov
iret
nop
xchg
hlt
xchg
pop
push
adc
xor
jl
mov
shrl
adc
stos
mov
sbb
cld
mov
imul
xor
arpl
insl
mul
lock
cmp
adc
sbb
mov
or
xchg
jl
mov
mov
dec
mov
test
int
daa
add
out
and
addr16
fsubl
sbb
clc
xchg
dec
ret
sub
mov
lea
test
ret
rorb
loop
pop
scas
mov
js
out
inc
pop
sbb
repz
xor
hlt
pop
ljmp
je
sbb
gs
fisubrs
pop
ficoms
xchg
pop
iret
mov
cmp
out
out
adc
clc
inc
gs
dec
sub
cmp
fcoms
cmc
in
into
int
mov
push
test
push
fiaddl
lcall
fsubs
pusha
scas
inc
aam
daa
into
sbb
movsl
adc
popa
test
xchg
popa
adc
jge
jmp
leave
lea
shufps
in
call
in
dec
insb
dec
jge
inc
push
adc
ljmp
push
push
ss
aaa
pop
pusha
fistl
mov
roll
ljmp
subl
es
jnp
pop
imul
mov
inc
cltd
arpl
sbb
push
lods
cli
mov
jne
xchg
adc
jo
dec
mov
push
push
shr
pop
xorb
jns
outsb
xor
scas
and
outsl
lods
xor
sub
inc
idivl
cmp
enter
lret
xchg
and
mov
adc
pop
fldt
shll
test
push
push
ror
mov
pop
cmp
xchg
cmp
push
mov
mov
bound
gs
mov
into
movsb
stos
mov
pop
insl
ret
arpl
push
scas
xchg
cmp
add
add
cmp
xchg
xchg
lods
adc
hlt
push
pop
or
add
ja
ja
mov
inc
sahf
loop
cli
mov
pop
mov
mov
daa
jbe
cmpsl
xchg
in
ja
jg
jae
loopne
sub
pop
lock
mov
inc
mov
aas
cmp
or
hlt
orl
daa
pusha
ss
and
repz
outsl
cs
jl,pt
loop
sub
cmp
add
lahf
lcall
insb
mov
jae
stos
cwtl
adc
jp
xchg
inc
mov
lret
inc
iret
fldt
xchg
ljmp
push
mull
mov
add
mov
pop
jl
lds
shlb
mov
adc
push
mov
aad
negb
shlb
lret
mov
lcall
mov
and
xor
outsl
mov
jae
bnd
enter
jle
push
movsl
push
leave
xchg
shl
cmpsl
test
lock
add
cld
jne
ds
add
out
mov
dec
jo
add
mov
pop
sub
test
in
addb
dec
xchg
sbb
cmpsl
outsl
std
mov
xchg
and
add
ljmp
icebp
xchg
xor
in
daa
jmp
mov
pop
setae
dec
cmp
sub
sbb
mov
push
loopne
lret
and
imul
jp
lret
stos
insb
sub
jp
imul
je
std
movlps
jp
aaa
xchg
cwtl
repnz
mov
rolb
pop
fdivl
negb
xlat
addr16
and
scas
xor
ffree
movsb
movsb
test
inc
sbb
inc
outsb
push
mov
test
rcll
sbb
movsb
jmp
pushf
pop
lods
pop
and
sbb
loop
xor
xor
inc
cli
test
adc
and
pop
pop
xlat
xchg
lock
out
aaa
pop
fcomps
or
lods
icebp
cs
pusha
mov
mov
xchg
xor
loope
adc
dec
sbb
fisttpl
fistpl
fmuls
fldl
ret
xchg
imul
js
mov
in
test
jne
sub
loopne
jo,pt
shl
inc
jmp
lds
out
add
mov
shlb
cmp
fsubrl
mov
scas
mov
or
pop
adc
gs
leave
nop
scas
jns
add
out
movsl
and
test
fdivs
jmp
and
sahf
pop
loop
xchg
scas
inc
pop
lcall
cmp
mov
cmpsb
jne
xchg
call
cmp
mov
xchg
lcall
js
fwait
push
cmp
nop
bound
xchg
push
shll
xor
cmpsl
lcall
in
cmpl
movsb
lods
cltd
aaa
xchg
and
int
dec
repz
mov
xor
push
nop
xchg
jae
out
adc
in
divb
pop
gs
imul
adc
mov
inc
sub
push
or
aaa
pop
jp
popf
mov
pop
popa
jle
xchg
dec
mov
scas
jne
push
data16
mov
jb
ja
rclb
mov
shll
popa
shlb
mov
add
fsubrp
cltd
lahf
ficoms
in
fsubl
jp
dec
popa
pushf
push
repnz
jno
jge
push
sar
fdivrl
mov
and
or
test
lods
inc
pop
cmp
sbb
mov
sub
outsb
inc
in
scas
jb
jbe
jl
dec
rol
ljmp
xor
sub
add
add
push
xchg
sbb
jmp
sbb
aad
aaa
mov
dec
inc
mov
ja
fcmovb
mov
push
out
out
mov
jmp
das
mov
dec
daa
sbb
xchg
mov
mov
out
inc
cmp
sahf
push
jnp
test
cmp
mov
inc
outsb
adc
cmp
pop
movsl
int3
lcall
pop
xchg
in
jmp
fmuls
mov
int3
push
xor
mov
sbb
xchg
mov
mov
xchg
clc
sub
pop
xchg
jge
shl
pop
and
adc
iret
adcb
pushf
inc
push
mul
adc
lds
div
out
loopne
push
xchg
mov
adc
int3
dec
adc
bound
push
stos
fcoms
add
xchg
and
test
mov
lods
in
or
xchg
pop
or
push
dec
dec
into
xchg
sarb
mov
shll
dec
cmp
jnp
mov
insl
jnp
je
xchg
push
cs
sub
dec
mov
movl
mov
data16
push
xchg
mov
int
xchg
das
cmp
dec
nop
cmp
jnp
pop
in
push
jo
or
lds
add
cmp
call
xor
call
ja
aas
lods
add
adc
mov
pop
jno
lret
add
sbb
stos
outsl
adc
cwtl
or
push
sti
jg
call
xchg
add
sbb
pop
outsb
aad
fiadds
movsb
pop
fcos
add
and
sbb
and
jecxz
xor
pop
std
fisubrs
int3
shll
add
int
pusha
or
and
sub
add
adc
outsb
sbb
pop
dec
inc
add
repnz
subb
cmp
add
pxor
sbb
dec
and
sbb
and
xchg
es
push
push
and
add
insb
repnz
cmpsb
inc
push
mov
or
dec
cmp
icebp
and
adc
xchg
loope
out
pop
cmp
lods
dec
imul
rcrb
sub
sub
icebp
push
and
inc
shlb
jg
fnstenv
aam
cmpsb
pop
push
push
enter
push
mov
int
sbb
pop
mov
cmp
xlat
jbe
sti
mov
rorb
rolb
cltd
sub
add
insb
scas
mov
aaa
loop
arpl
lock
lock
dec
clc
int
xchg
shr
jl
lock
test
push
cmp
leave
sti
repz
and
fidivrl
push
test
xor
cmp
xchg
xchg
les
jno
cltd
int
test
pop
fnstenv
lds
xchg
mov
enter
jecxz
shrl
sub
hlt
push
push
adc
lock
rclb
xor
fwait
pop
and
inc
or
mov
movb
sarl
cmp
data16
dec
notl
nop
cmp
adc
fidivrl
pop
int
jl
lea
jl
mov
bound
scas
jne
rorb
jb
data16
stos
push
cmp
pop
dec
inc
pusha
pushf
push
pop
inc
lcall
sub
fildll
pop
jl
xchg
aaa
dec
bsf
jmp
mov
pop
mov
hlt
jmp
loopne
sbb
out
fs
cmp
dec
mov
adc
mov
mov
and
sub
mov
jb
testb
jge
cmc
add
aam
enter
pop
inc
sub
cwtl
xchg
sarl
xlat
leave
sub
mov
je
dec
jae
inc
inc
icebp
rol
adc
add
ds
mov
xor
cmc
pop
or
addl
xchg
sub
fs
loop
scas
and
cli
xchg
int
jp
inc
push
mov
aad
dec
test
call
xor
in
inc
jmp
mov
scas
xor
pop
and
test
jge
orl
dec
mov
fiadds
popf
and
add
cli
add
mov
or
jae
ljmp
push
and
xor
ret
insl
rcl
xchg
movsl
lock
not
lods
add
fldcw
mov
sbb
aam
push
dec
sub
sbb
sbb
fmulp
push
sub
mov
imul
or
or
and
shr
aaa
add
cmp
dec
adc
xor
jge
and
mov
add
inc
hlt
and
push
and
jnp
jge
pop
push
push
mov
lcall
test
pop
jecxz
mov
pushf
inc
ja
adc
adc
es
dec
popf
leave
aaa
and
stos
repz
lret
stos
inc
ret
or
lret
inc
scas
mov
inc
mov
mov
and
loop
jbe
xor
adc
mov
or
int3
adc
or
mov
jmp
hlt
insl
and
repnz
mov
push
dec
repnz
lret
imulb
mov
ljmp
lcall
xor
xor
xor
xor
arpl
dec
ja
xchg
jbe
iret
cmp
orl
pop
sbb
adc
loope
sti
imul
pop
inc
int
xor
mov
jns
sbb
nop
sbb
pushf
bound
xlat
popa
add
xchg
or
xor
cmp
sbb
add
push
xchg
mov
add
adc
jns
jbe
jbe
mov
imul
clc
adc
ret
lock
cmpsl
outsb
mov
mov
jge
rol
dec
or
sarl
inc
cmpsb
test
jae
nop
mov
stos
cmpsb
jp
cmp
fdivrp
hlt
cwtl
mov
shrl
xchg
sbb
pop
loopne
and
faddl
mov
cltd
test
xchg
into
dec
mov
lahf
cwtl
sbb
das
sub
or
jg
test
push
cmpsb
adc
jns
cmp
dec
or
mov
call
mov
jne
dec
push
mov
mov
js
int3
xchg
out
push
int3
mov
or
and
cli
mov
sbb
xchg
iret
js
pop
or
mov
or
test
mov
mov
mov
pop
xchg
mov
jmp
inc
dec
test
jmp
in
cmpxchg
fs
sbb
outsb
mov
xchg
stos
fcompl
cmpsb
mov
movsb
fwait
mov
aam
inc
ss
pop
cmp
out
jnp
into
dec
pop
adc
pop
and
jmp
inc
jg
mov
xor
faddl
je
jmp
add
ss
push
ljmp
lcall
fsubr
mov
jbe
jg
xchg
je
icebp
sbb
inc
dec
fnstenv
mov
enter
pop
hlt
xchg
xchg
cmp
js
cmp
inc
outsl
xlat
mov
movsb
jmp
loopne
fstpt
movsb
mov
stos
in
ret
jnp
in
mov
movsb
fdiv
shrl
sub
xchg
ljmp
cs
repnz
stc
jnp
add
pop
cltd
mov
xchg
das
xchg
jp
sbb
out
mov
jne
push
and
xchg
test
cmpsl
int
imul
and
pop
push
das
adc
mov
push
jge
add
int3
dec
jg
adc
xor
out
jmp
inc
add
jb
aas
inc
pop
inc
pop
test
movsl
jle
cmp
test
cmp
insl
js
fbstp
out
movsl
and
mov
pushf
dec
sub
xor
mov
dec
mov
bound
mov
cmp
mov
and
inc
scas
push
inc
and
loope
mov
adcl
int
sbb
push
xchg
adc
test
lods
out
xchg
lret
jl
int3
push
clc
cmp
push
mov
xchg
xchg
xchg
loop
adc
dec
cmpb
xor
mov
vmovdqu
mov
mov
xchg
mov
iret
out
ret
rcll
push
sti
mov
lods
ss
sbb
faddp
inc
dec
push
pop
das
mov
mov
data16
inc
xor
js
and
dec
sbb
inc
mov
popa
pop
lret
daa
mov
aaa
aas
dec
lds
shl
mov
and
xchg
add
cmp
insl
mov
jl
ljmp
out
mul
ss
ja
fs
and
inc
in
push
inc
lret
dec
inc
fistpl
imul
ja
mov
cmp
dec
sbb
popa
mov
inc
lea
movsl
xchg
stos
lcall
and
imul
int
inc
or
rcrl
je
xor
ret
mov
xor
xchg
mov
mov
enter
jmp
incb
out
push
pushf
sbb
cmpb
cmpsb
ret
sbb
fmul
jle
jo
repz
test
scas
pop
add
push
in
push
into
and
int
lock
pop
mov
aad
lcall
inc
mov
pop
scas
jns
sti
mov
out
cli
inc
sub
int
gs
fwait
call
into
adc
inc
out
outsb
jmp
adc
cwtl
das
data16
jne
enter
out
cltd
inc
xor
dec
mov
pop
ror
rcl
mov
and
bound
test
pop
mov
fildll
jp
pop
jae
lahf
mov
outsl
in
stos
push
jo
mov
imul
sbb
addps
lods
mov
cltd
stos
inc
loopne
push
subl
mov
popf
test
pop
sbb
mov
sub
call
mov
sub
jg
push
icebp
sbb
mov
outsl
xchg
cmpl
aad
hlt
out
ss
sbb
cmp
arpl
mov
dec
mov
repnz
mov
lret
and
and
xorb
jnp
jecxz
mov
fildl
cmp
xor
and
movsl
nop
cmpsb
cmp
fwait
pop
sbb
insl
dec
xchg
fwait
movsl
std
mulb
cmp
out
insb
pushf
std
fwait
mov
xchg
mov
aad
or
inc
jbe
imul
or
dec
xchg
pop
push
hlt
movsl
mov
std
nop
sarb
mov
add
pop
aam
inc
std
pop
jb
jmp
cmp
aam
addr16
cmc
jg
add
leave
fcomps
jae
cmc
out
lods
mov
lret
push
adc
stos
dec
or
and
lret
and
rcll
cmpsl
lods
cld
sub
rcr
mov
cmp
rcr
add
sbb
xchg
pop
sbb
roll
aaa
mov
pop
dec
das
mov
pop
pop
xchg
mov
sti
mov
bound
dec
outsl
insl
int3
mov
mov
cmp
cs
jg
xchg
sub
jb
outsb
adc
jge
scas
mov
outsl
popa
pop
loop
push
cmpsb
subl
outsb
xlat
jns
pop
inc
mov
xchg
sub
js
lret
inc
mov
push
insb
pop
and
lock
loope
dec
cmp
fwait
jbe
in
out
mov
xchg
cmpsb
cmpsb
cmp
in
imull
sub
jo
hlt
fs
ss
lahf
adc
fwait
js
mov
call
xchg
or
scas
or
shr
cmp
mov
lahf
jge
repnz
enter
xor
xor
push
xchg
daa
add
mov
ret
imul
and
mov
out
dec
push
jnp
sbb
mov
mov
andl
mov
je
lock
orb
data16
in
mov
xchg
jecxz
addr16
mov
mov
stos
inc
mov
cmp
pop
adc
cmp
jbe
test
scas
xchg
add
xor
jge
rolb
pop
inc
and
stos
cmp
xchg
orb
and
or
int
outsl
ljmp
js
mov
repz
inc
and
loopne
mov
mov
cmp
and
aaa
arpl
or
lahf
js
shr
mov
fbstp
aad
mov
inc
adcl
data16
out
cmp
push
mov
sub
ret
push
std
mov
ljmp
fwait
in
dec
sbb
andl
lahf
nop
mov
jae
mov
lret
stc
sbb
dec
loop
pusha
int
pushf
fisubs
icebp
fsub
ret
pop
aam
pop
subb
dec
popa
bndstx
jo
push
dec
cmpsb
jne
add
push
xchg
int
ret
test
lcall
std
push
push
adc
push
cmc
push
aas
pushf
jno
sub
sbb
mov
xchg
out
xchg
inc
pop
sbb
cli
cmc
or
or
fmull
mov
hlt
push
out
mov
movsb
mov
out
pusha
sbb
ficoms
adc
xchg
push
dec
cmp
shlb
inc
jo
add
mov
push
inc
loopne
add
push
sbb
pusha
hlt
jmp
lods
ds
sarb
jne
push
std
dec
cli
add
mov
shlb
fadds
jmp
je
js
adc
xlat
loop
aaa
push
dec
push
sahf
sbb
lcall
inc
fsubl
sbb
stos
mov
xchg
icebp
lahf
ljmp
in
stos
movsb
mov
cmp
xor
xchg
lret
mul
push
pusha
in
das
imul
push
lock
dec
inc
in
xor
sarl
and
pop
popa
xchg
ret
adc
xorl
sbb
cmpb
fstpl
xor
sbb
inc
mov
enter
adc
xor
incb
js
or
andl
jg
popf
bound
scas
jne
xchg
ret
mov
out
xor
xlat
xor
popa
imul
xchg
popa
inc
fwait
das
xchg
sbb
cmc
pop
xchg
sbb
nop
or
imul
jno
or
js
xchg
fsubr
enter
jbe
or
sub
frstor
fstps
dec
divb
cmp
mov
lcall
or
test
jle
jg
lahf
and
jmp
xor
jae
shr
xchg
pop
std
shrb
dec
sub
cmc
mov
cli
aaa
xor
nop
dec
or
in
jbe
out
push
cltd
xor
into
das
sahf
push
add
fistps
dec
lds
pop
add
pop
mov
mov
xor
sbb
push
jle
popf
xchg
mov
jecxz,pt
into
sti
add
jle
mov
stos
adc
add
mov
mov
dec
decl
pop
mov
and
insb
in
mov
mov
jb
xchg
leave
adc
push
cltd
bound
xlat
mov
stos
fsubrs
and
repnz
sbb
inc
scas
sub
arpl
cmc
sub
sub
and
inc
mov
sub
inc
adc
mov
jb
push
daa
fs
xlat
lcall
xchg
dec
sub
push
adc
mov
lock
jno
subb
lods
ss
icebp
dec
pop
sbb
test
jp
test
fs
cmpsb
lock
or
loop
jbe
and
and
jecxz
inc
leave
mov
js
or
sub
push
pop
sbb
loopne
mov
or
add
pop
push
lcall
loopne
adc
xor
js
ret
fstpt
and
mov
rcll
adc
movups
add
jo
mov
xlat
mov
in
outsl
loopne
dec
adc
or
mov
cmpsb
int
or
pop
xor
push
inc
dec
aad
sub
inc
mov
jge
add
fmull
aaa
push
sbb
lcall
das
cli
jmp
pop
rol
int3
cmp
in
daa
dec
add
mov
repz
in
in
mov
push
cs
test
clc
push
out
mov
outsb
or
dec
push
out
je,pt
mov
mov
push
mov
sbb
add
imul
sub
loop
iret
sub
jmp
sarl
fstps
or
and
adc
pop
test
aas
stos
sub
pop
sub
out
inc
sahf
rcll
jecxz
cmp
mov
mov
sbb
int3
shr
xor
push
push
xor
pop
mov
lret
fidivl
add
sti
out
aad
cs
push
int3
mov
inc
sub
rclb
sub
jecxz
fstl
subb
mov
mov
fnstenv
pop
jg
sarl
imul
arpl
cmp
lret
test
fnstsw
mulb
push
adc
into
nop
xchg
mov
pop
inc
or
mov
mov
sbb
and
call
sub
popa
cwtl
adc
jae
lahf
inc
mov
test
cmpsl
leave
dec
sbb
pop
sbb
les
iret
inc
out
fwait
adc
mov
mov
cmp
or
xchg
les
fistpll
adc
dec
das
es
inc
and
pop
pop
mov
cmp
enter
cmp
push
aad
stos
xchg
mov
dec
dec
cwtl
mov
push
pop
jmp
arpl
lea
cmp
mov
and
repz
mov
dec
sbb
ja
adc
push
mov
fdivrs
insl
das
xor
sbbb
adc
insb
mov
inc
into
imul
lds
pop
pop
add
pop
or
clc
ljmp
push
lret
inc
mov
mov
clc
clc
lret
outsl
and
jmp
js
es
pushf
js
mov
jmp
insl
adc
and
cmpsb
gs
int
adc
pop
dec
jae
call
rolb
cmpl
loope
movsb
mov
push
cld
aad
movsl
dec
pop
push
cltd
dec
xor
dec
movsb
movsl
push
mov
fs
insl
notb
add
or
push
je
fsubl
and
cli
roll
inc
outsb
push
rcrb
rol
xlat
mov
lock
jmp
add
xor
fsubrs
jno
push
shrb
mov
daa
xor
rolb
push
add
scas
mov
mov
cmp
and
pop
es
out
lds
sahf
das
add
cwtl
mov
ret
cmp
sub
mov
aam
inc
imul
xchg
shll
aad
and
mov
aaa
inc
pop
lods
hlt
xor
mov
or
sarl
dec
insb
je
lret
idiv
gs
cli
mov
popf
mov
inc
add
sbb
cmp
gs
mov
bound
arpl
mov
or
cmp
es
fwait
pop
or
cwtl
out
ss
out
xchg
pop
inc
jbe
jmp
jle
pop
sub
orl
sbb
sub
dec
loopne
out
fldl
fwait
adc
jge
mov
xchg
xor
sbbb
repnz
sarl
psrld
sbb
mov
mov
loope
outsb
ficompl
fmulp
jbe
adc
jmp
ss
daa
cmp
clc
mov
lea
mov
cltd
test
rcr
dec
fcompl
ljmp
aam
or
divl
cmp
pop
jg
jp
test
or
lds
scas
ret
lahf
in
lock
jmp
shl
mov
inc
sbb
adc
jl
cmpsb
mov
xor
adc
cmpl
cltd
pop
popf
adc
cmp
in
xorb
jbe
and
fcoml
fsubrp
adc
or
push
and
outsl
mov
aad
mov
push
sub
es
in
mov
xor
clc
adc
add
arpl
or
lock
jb
add
jg
jbe
dec
push
xchg
or
rorb
in
and
push
inc
cwtl
sub
mov
and
int
int
addb
ret
cs
sahf
mov
aad
mov
fsts
and
and
mov
sti
rorl
pusha
cwtl
cmp
lret
sti
and
inc
mov
jne
xchg
xor
adc
jecxz
jmp
push
imul
xor
daa
divb
repz
fwait
in
std
pop
xchg
push
jb
mov
cmpsl
and
xor
repz
mov
test
sbb
js
cmc
inc
xchg
and
add
xor
insl
mov
stos
or
jae
jge
in
ret
insl
xor
mov
dec
rclb
cmp
xor
das
daa
or
cli
pop
sbb
adc
jecxz
clc
call
mov
cld
cli
arpl
fisubrs
ret
scas
aaa
roll
fldl
pop
jo
mov
xchg
cwtl
mov
fisttpl
ret
lahf
adc
mov
adc
and
sub
xchg
fs
mov
test
xor
out
stos
lods
xor
mov
dec
repnz
pop
sbb
inc
rcrl
lods
mov
fsubr
leave
dec
pop
mov
lock
aaa
std
mov
pop
push
in
sbb
add
sarb
cli
jbe
mov
jbe
mov
ret
sbb
loopne
das
mov
mov
clc
xchg
and
xchg
mov
outsl
sbb
das
in
sbb
stos
cwtl
test
fldcw
mov
mov
and
jp
push
xor
pushf
imul
hlt
rcrl
fs
test
push
rcll
lods
movsl
ljmp
mov
push
rcrl
arpl
repz
jmp
pushf
xor
scas
push
or
and
into
cmp
ja
adc
xchg
xacquire
stos
cmpsb
push
iret
stos
xchg
dec
into
std
xchg
std
adc
dec
dec
in
and
mov
dec
jns
mov
aam
adcb
or
pushf
push
imul
cvtdq2ps
mov
and
inc
in
xlat
xor
cmp
mov
lods
aam
inc
imul
mov
jno
mov
jl
push
and
sbb
fwait
in
mov
aam
cmpsb
dec
fimull
mov
scas
or
andl
jge
sbb
jg
imul
outsb
pop
sub
mov
test
inc
movl
bound
out
bnd
pop
sti
ds
repnz
ror
adc
into
mov
or
push
inc
enter
pop
jg
pop
out
pop
or
gs
xor
xor
jno
jbe
sub
pop
fcompl
jp
cli
aad
jg
test
loope
enter
mov
dec
add
imul
cmpsb
into
inc
dec
rcrl
cmp
test
pop
mov
pop
push
dec
add
and
adc
cmp
pusha
ds
hlt
pop
fidivs
lahf
mov
int3
cmc
dec
int3
jae
push
mov
sbb
xlat
lret
ret
add
inc
push
mov
roll
pop
lcall
or
cmp
xchg
sub
push
or
shl
or
repz
js
or
xor
adc
nop
aas
subl
fistps
mov
ret
add
les
adc
scas
popf
sahf
push
jae
sub
jg
negb
dec
testl
xor
lret
sub
xor
mov
xor
aam
ss
and
jmp
cmc
test
or
add
jnp
pop
sub
push
outsl
sti
mov
std
in
sahf
aam
mov
insb
std
call
fwait
out
imul
in
lock
shll
aaa
adc
scas
fs
jmp
inc
dec
decl
sbb
dec
fmuls
and
fs
add
loop
sub
xchg
shll
test
out
je
xchg
in
sub
add
cli
fwait
es
iret
cmpsb
dec
testb
mov
gs
cmp
sahf
lret
icebp
push
ljmp
inc
mov
cmp
cmp
insl
adc
xlat
sub
cli
leave
int3
sahf
daa
call
add
mov
rorl
enter
stc
stos
stos
fnstenv
dec
ret
mov
push
les
xchg
shlb
jmp
pop
mov
pop
out
mov
jns
call
lock
xor
in
add
repz
fisubrs
add
sbb
sahf
fcomps
outsb
aaa
xor
jne
or
pop
lock
jnp
adc
int3
jl
push
mov
inc
xchg
xor
inc
fucom
mov
push
add
cwtl
push
int3
repz
lea
mov
mov
mov
popa
cwtl
push
fisubrl
jae
xor
out
sbb
jecxz
imul
movsl
mov
jae
xor
xchg
leave
sub
iret
dec
inc
in
arpl
and
scas
and
mov
pop
mov
out
jo
test
and
inc
mov
pop
xorb
hlt
into
xor
jno
adcl
aam
lea
push
mov
jecxz
aam
sti
mov
sub
ss
push
push
or
fs
mov
outsb
push
pop
fucomp
and
out
jmp
es
sbb
js
cmc
mov
jno
push
fisubrs
and
adc
ljmp
out
gs
in
out
jl
out
xor
jmp
pop
inc
daa
push
ljmp
insl
push
pop
pop
sbb
cmpsl
fldcw
fadds
dec
or
jp
add
imul
ja,pn
and
sbb
jbe
aam
and
add
and
or
cmpsl
xor
pop
fsubrl
arpl
into
int
push
cmpsl
aad
mov
es
sub
lods
jge
sub
mov
sub
add
sub
lcall
xor
cmpsb
adc
shlb
jns
aas
cmp
pop
xor
xchg
mov
movsbl
cs
or
es
into
fcomps
aaa
push
negb
add
xor
dec
xchg
pusha
jae
push
mov
jae
lea
dec
pop
and
scas
mov
dec
or
pop
inc
cmpb
cwtl
mov
mov
ja
jnp
fimuls
add
movsl
pop
xor
fimuls
mov
add
or
jbe
cmc
sarb
sub
push
mov
sti
ret
jb
pop
add
jle
int3
xchg
pop
xchg
pop
mov
aam
popa
sub
sahf
push
pop
fisubrs
mov
push
xor
add
aad
pop
insl
mov
mov
aaa
pusha
shl
pop
in
xlat
stc
stos
inc
je
std
jp
push
jo
outsb
push
xor
adc
pushf
mov
mov
rcrb
les
or
sti
sar
or
je
adc
ljmp
add
mov
dec
mov
inc
mov
push
mov
out
lret
fsts
sub
sub
test
adc
and
addb
mov
inc
push
cli
cmp
scas
idivl
push
sub
mov
xor
out
cmc
cltd
rcll
ret
cltd
outsl
dec
jnp
xchg
jecxz
sti
mov
rcr
std
test
movsb
sub
add
scas
sbb
pop
pop
fsub
push
imul
dec
xchg
jmp
cmp
inc
cmp
ds
out
mov
adc
xorl
scas
testb
scas
cmc
popf
into
adc
int3
inc
lcall
cli
pop
repnz
cli
push
pusha
decb
cmp
pop
and
dec
lret
repnz
andb
push
sub
mov
inc
js
dec
mov
inc
add
sbb
daa
cwtl
test
hlt
sti
push
xor
mov
cmc
push
mov
or
dec
test
mov
cmp
loop
stos
cmpl
jmp
and
scas
lods
or
aad
fcomps
push
jle
imulb
div
cmp
aad
jle,pt
and
push
mov
add
clc
es
mov
inc
jno
ljmp
in
dec
daa
mov
xor
aad
jle
xlat
mov
insb
xchg
rcrl
fldl
adc
xor
cltd
push
jecxz
jg
bound
incb
sarl
mov
jnp
les
add
mov
and
inc
cltd
adc
cmp
cmpsb
mov
ret
lods
jbe
addl
push
push
aad
xchg
stos
outsb
insb
add
mov
call
dec
lcall
sub
jg
lahf
cmc
fmuls
mov
mov
or
mov
enter
les
lock
repnz
lock
jecxz
mov
gs
cmp
mov
jo
inc
fdivrs
mov
pop
scas
pop
mov
dec
sti
sti
adc
push
mov
es
mov
mov
lea
insb
dec
sbb
int
loope
and
mov
loop
mov
dec
mov
sub
push
int
or
xchg
and
bswap
push
push
push
call
xchg
cmp
pop
mov
ret
and
push
dec
jno
orb
inc
clc
outsl
adcl
mov
mov
xchg
lcall
mov
dec
cld
add
xor
mov
aad
xchg
jmp
sbb
lret
mov
popa
jge
adc
jle
insl
shl
repz
cmp
xchg
mov
cmp
lahf
int3
sbb
cmc
adc
sbb
fcmovu
jmp
es
inc
xchg
js
aad
fistpll
adcl
mov
leave
or
dec
xchg
aam
mov
xchg
jne
fidivs
inc
push
add
jb
xor
adc
xchg
mov
mov
dec
out
mov
das
xchg
push
jnp
movsl
fs
xor
mov
inc
push
lea
gs
jg
or
sub
add
orb
adc
and
push
jnp
inc
adc
cmp
sbb
mov
movsl
test
dec
cmp
push
cltd
pop
cld
push
stos
push
xor
pop
pop
mov
frstor
and
or
insb
ljmp
pop
cmp
std
testb
rclb
shlb
and
sbb
icebp
repz
pop
jecxz
loope
inc
add
mov
clc
int3
hlt
cltd
sub
das
scas
inc
iret
mov
test
insl
cmp
add
lret
jns
jno
int
bound
js
pop
notb
rolb
pop
and
out
div
push
addb
pusha
push
ds
cli
outsb
rcrl
cmpl
iret
movsb
das
and
sub
cwtl
sti
add
leave
mov
dec
shlb
icebp
andb
in
mov
int3
les
jge
xchg
jl
adc
fs
je
call
rcll
pop
jg
sahf
imul
inc
xchg
cmp
repnz
mov
adcb
and
aad
imul
dec
or
inc
sub
mov
insl
sbb
pop
cmp
xchg
sbb
fnstcw
bsr
xchg
fdivs
mov
faddl
or
mov
jge
roll
pop
pop
movsl
aam
or
inc
sub
js
lods
ljmp
cli
out
aas
inc
xchg
out
dec
mov
mov
lods
es
daa
sahf
pop
sahf
orl
pushf
clc
push
stc
cwtl
add
xchg
jp
mov
cld
in
scas
jge
pop
and
add
lods
sub
pop
daa
dec
xor
testb
xchg
sub
adc
pop
add
fcompl
je
sbb
push
roll
jge
jnp
imul
sub
mov
inc
pop
push
imul
scas
out
sub
pop
or
push
push
int3
je
mov
les
sahf
add
jb
pop
nop
sub
pop
sti
pop
inc
mov
mov
shll
jle
subl
cmpsl
cmp
xchg
sarl
or
ja
ret
cmp
data16
or
xlat
jo
mov
fisubs
insl
adc
jne
aas
lods
push
cld
mov
or
dec
in
and
inc
lods
mov
out
test
lock
push
ja
sub
mov
repnz
mov
dec
inc
pop
sub
xchg
push
inc
out
je
sarl
mov
jle
ja
mov
scas
popf
rolb
inc
lcall
cwtl
push
fsts
aad
sbb
fbld
sahf
jp
dec
push
inc
mov
scas
xchg
ffree
das
rcrl
or
inc
jp
adc
fistl
hlt
pop
scas
mov
sbb
ficoml
shrb
ja
mov
push
sbb
ds
test
mov
adc
xchg
mov
sub
jns
xchg
int3
jb
xchg
pushw
adc
repnz
lret
repnz
subb
jnp
mov
add
jmp
std
in
or
lcall
loope
mov
hlt
jge
fsub
push
lock
icebp
dec
out
movsl
xlat
sub
or
xlat
add
mov
fildl
cmp
mov
push
icebp
cmp
call
mov
je
shrd
insl
xor
pop
jnp
pop
es
pop
cmp
test
lcall
mov
rcrb
or
dec
pop
incb
lea
mov
mov
mov
fcomi
cmpsl
add
and
or
cs
push
jl
push
push
xchg
sub
inc
push
xchg
incl
mov
mov
bound
or
xor
cmpsl
cmpl
mov
cmp
out
pop
pop
aaa
mov
and
push
jecxz
scas
xchg
jmp
inc
rcrb
mov
xor
mov
out
xchg
es
cld
jbe
imul
jne
imul
int3
cli
push
xchg
mov
call
inc
xchg
push
jge,pt
xor
outsl
and
push
fcmovu
sahf
jmp
loope
sbb
lods
popf
mov
mov
push
sub
jge
addr16
mov
into
faddl
mov
xor
xor
xor
fadds
inc
fstpt
repz
cli
movsb
jecxz
arpl
jo
mov
fsubrl
mov
jnp
ficomps
sub
lret
mov
or
push
and
inc
outsb
inc
lahf
out
mov
je
xchg
jo
jmp
dec
cs
inc
or
sbb
sbb
push
fmul
fsubr
xchg
ja
popf
cmp
incb
repnz
cwtl
outsl
cs
inc
test
and
mov
jo
sahf
push
sbb
cmp
and
ss
jmp
or
repnz
enter
or
or
xor
adc
lea
inc
sub
sahf
push
popa
movsb
adc
outsb
or
cwtl
jg
sbb
popf
dec
inc
sbb
ja
int
cwtl
out
stc
daa
lods
xor
lahf
in
stos
sub
jae
leave
dec
call
shrb
xor
icebp
add
jge
sub
shlb
enter
fwait
mov
ljmp
nop
mov
scas
mov
push
mov
cmp
loopne
stc
and
call
lods
rclb
mov
push
mov
mov
loop
enter
cmp
jg
jb
loop
cmp
sbb
jbe
mov
daa
mov
adc
data16
push
pop
aam
mov
into
call
addr16
mov
loope
sbb
cltd
int3
arpl
fmulp
mov
adcl
pop
mov
arpl
enter
pop
mov
add
and
and
dec
fcmovne
add
movsl
aas
hlt
xchg
sub
mov
inc
sbb
pushf
push
adc
call
aaa
repz
or
add
out
xlat
mov
add
sub
sub
neg
mov
and
clc
insl
push
and
repz
roll
mov
fnstsw
cmp
stos
in
sub
or
aaa
subl
adc
dec
nop
inc
cmp
add
test
rcl
inc
jno
push
xchg
cmc
xchg
jb
pop
cs
cmpl
adc
insb
test
sbb
stos
cmp
mov
outsl
adcb
fstpt
ljmp
dec
lods
xchg
pop
aad
mov
into
dec
dec
mov
xor
xlat
cs
push
aad
mov
fcoms
aad
jne
and
xchg
and
loopne
mov
push
jb
outsb
clc
jle
mov
jno
push
mov
add
sbb
xchg
push
mov
pop
sub
aas
mov
nop
mov
dec
sub
sbb
and
jae
addr16
aam
mov
test
fcoml
fmulp
jnp
mov
iret
sti
xchg
rorb
pop
adc
bound
pop
mov
dec
pop
ret
xor
push
add
xchg
pop
dec
popa
push
and
daa
inc
jnp
in
loopne
jno
outsb
lcall
nopl
xchg
in
dec
jg
imul
aad
sbb
push
fildll
leave
add
fidivrl
pop
imul
or
rolb
notb
pop
daa
mov
cld
cmp
aam
xor
imul
ret
stc
nop
mov
scas
sub
aaa
outsb
adc
clc
xor
nop
xchg
cld
es
mull
jg
rorb
sub
adc
mov
fldt
gs
adcb
loopne
inc
cwtl
cmpsl
bound
xor
mov
xor
xchg
flds
jnp
je
xchg
aam
in
ss
fiadds
orl
fcmovu
jecxz
dec
or
andb
pusha
and
mov
fs
pop
mov
mov
and
aam
jmp
test
lret
or
aad
es
daa
frstor
cmp
sbb
cmp
mov
pop
pop
out
xor
nop
push
mov
out
loop
into
mov
test
lods
xor
mov
inc
sti
jae
sbb
sub
mov
and
iret
cmp
dec
sbb
mov
out
or
push
push
mov
add
inc
fstl
push
jge
popf
ja
jp
lods
mov
and
mov
dec
adc
loop
xchg
inc
lds
and
jae
push
mov
pusha
int
push
mov
leave
stos
fs
loop
test
lret
jnp
mov
sbb
mov
loopne
aad
inc
jp
mov
lods
push
mov
xor
mov
repz
mov
cwtl
test
xchg
xor
push
sbb
pop
mov
es
mov
jge
pop
cmp
dec
aad
rcr
push
xor
adc
insb
dec
pusha
pop
inc
mov
stos
jae
xchg
lret
adc
or
xchg
inc
enter
repnz
movsb
sahf
add
jmp
std
push
nop
mov
push
test
or
xor
xor
inc
mov
es
mov
lock
jecxz
aas
shrl
jle
imul
adc
adc
mov
popf
and
inc
sbb
add
loop
arpl
cmp
mov
popa
fs
inc
addb
and
pushf
pop
inc
icebp
xchg
out
mov
ds
sahf
or
movl
pusha
stos
pop
pop
push
insb
jp
pop
movsb
mov
icebp
dec
pusha
test
cs
stc
ja
xchg
fildl
jbe
fsubl
sbb
adcb
pop
dec
addr16
repz
loopne
cltd
ficompl
inc
pushf
pop
push
jnp
lea
cmp
jge
negb
cmp
test
out
lock
stos
rorl
sbbb
dec
in
push
adc
inc
decl
pushf
scas
shl
in
and
xchg
pop
sbb
xchg
push
cltd
jp
sub
sbb
outsl
add
leave
addr16
adc
mov
or
pop
sti
mov
imul
mov
rcll
lret
jns
or
jne
insb
fs
pop
daa
lret
adc
inc
imull
xchg
cmp
stos
push
jg
insb
dec
lret
xchg
mov
stos
frndint
push
inc
pusha
adc
fidivrs
cltd
ret
cmpsl
jmp
xchg
fnstenv
outsw
mov
out
popf
mov
cmp
sbb
xor
mov
lret
lds
out
outsb
jnp
adcb
ljmp
iret
popa
xchg
gs
repz
inc
cltd
and
lods
push
adc
imul
inc
lcall
sbb
pop
dec
xor
mov
xchg
pop
push
mov
add
push
adc
shll
les
xchg
leave
cmovae
lahf
repnz
mov
sbb
stos
dec
les
lret
pop
cs
mov
or
cmp
lret
jno
mov
pop
rcr
cmpsl
in
lret
imul
sub
push
dec
push
jbe
dec
rol
mov
push
movsl
jg
jg
shrl
pop
push
test
inc
sub
movsl
inc
cwtl
inc
push
fldcw
mov
lds
frstor
push
push
rcl
fstl
or
dec
xchg
jmp
imul
icebp
or
jl
mov
pop
in
push
call
dec
pop
mov
sti
loopne
or
aam
and
push
sahf
nop
cmpl
repnz
into
inc
push
push
ffree
jecxz
les
loope
adc
push
and
fs
repnz
push
lahf
stos
xor
fs
sarl
div
adc
iret
aaa
rcl
aas
lds
mov
aam
aaa
xchg
cli
jo
xchg
fwait
imul
loope
dec
or
xchg
adc
mov
xchg
sub
icebp
stc
inc
sbb
adc
cmpsl
dec
outsb
add
mov
cmp
lcall
cmp
int3
xchg
inc
push
xor
lods
test
repz
adcb
or
int
jae
dec
movsb
ret
leave
test
lds
nop
sub
das
sbb
add
pop
mov
dec
cmp
adc
sub
insl
mov
push
pop
mov
jle
push
jge
popa
fstpl
dec
and
scas
sbb
stos
sub
test
cmp
push
pop
pop
out
stos
adc
and
sahf
out
pop
mov
lahf
mov
xchg
je
jl
in
xchg
mov
mov
mov
outsl
xchg
or
stos
sti
mov
sti
xchg
ret
jp
scas
std
pop
inc
iret
jp
add
inc
cld
push
mov
pushf
or
leave
cld
jnp
verw
fs
push
fdivrs
sub
test
dec
jno
sbb
mov
lret
js
dec
shrl
sub
int3
mull
push
fs
and
icebp
jns
mov
les
inc
scas
mov
hlt
cmpsb
out
inc
sahf
ss
mov
inc
mov
dec
sub
mov
je
cmpsl
stos
fdivl
repnz
xor
or
adc
lahf
mov
outsb
rorl
ja
in
gs
xchg
bound
in
and
push
repz
push
push
cltd
roll
arpl
mov
out
mov
or
sbb
cmp
sbb
ss
loop
cmpl
mov
in
jle
pop
mov
shrb
xor
mov
clc
fxch
xchg
jge
jnp
es
jno
cmpsl
mov
fwait
xchg
mov
les
dec
lods
sub
mov
push
ud2
pop
cs
sbb
pop
mov
icebp
cmp
sbb
bound
sbb
dec
mov
cltd
nop
xchg
cwtl
sti
lahf
adc
inc
lods
sbb
int3
test
inc
jge
negl
lret
add
cmp
bound
iret
cmc
pushf
data16
outsb
addr16
aas
dec
or
stc
mov
pop
jmp
dec
inc
mov
push
mov
cs
inc
inc
repz
cwtl
cmp
iret
test
scas
int3
mov
xor
cmpsl
out
daa
fisttpl
pushf
je
sbb
fstps
add
stos
and
mov
mov
insl
mov
repz
cmc
xchg
pushf
es
lret
sub
imul
bound
mov
lret
jne
stc
jb
adc
xchg
cmp
int3
data16
cli
lea
mov
xor
cmp
lods
dec
fbstp
push
shrl
mov
out
lods
popa
add
jmp
leave
sub
mov
aad
mov
fsubr
cmp
pop
pusha
pushl
in
and
sbb
jge
mov
inc
pop
ljmp
bound
pop
pop
outsb
push
push
adc
sar
push
mov
xor
mov
cmpsl
je
or
inc
pop
sbb
cld
mov
pop
cld
xchg
lret
xlat
sub
push
test
or
es
add
sbb
ret
lods
mov
xorb
jns
mov
inc
enter
test
add
ret
fildl
jl
loopne
cmp
push
cli
add
fbstp
xchg
inc
addl
xchg
push
loope
mov
mov
fadd
mov
inc
mov
dec
stos
jno
repz
in
adc
lods
push
stc
inc
arpl
movb
sub
insb
push
cld
push
enter
inc
bound
xchg
jmp
inc
and
dec
leave
add
mov
shl
ss
xchg
ret
inc
pop
mov
loop
inc
test
std
jg
shll
xchg
dec
hlt
push
sti
sti
jno
loop
cmp
movl
jge
fwait
shrb
mov
pop
ds
pusha
mov
adc
loop
aaa
xchg
daa
pop
add
inc
lock
popf
insl
dec
dec
mov
xchg
scas
xchg
mov
ljmp
in
inc
clc
mov
fs
fdivp
mov
js
aad
sub
inc
aad
cmpsl
mov
jo
push
sbbl
xchg
jg
inc
mov
cli
lock
test
xor
rcrl
pushf
pop
fcom
js
movsb
xor
andb
mov
dec
adc
pop
pop
jle
add
hlt
nop
std
push
xchg
aam
add
xor
xor
or
pop
filds
sbb
mov
out
jmp
push
and
fidivrl
adc
imul
mov
inc
gs
xor
cmp
ficompl
test
sbb
fwait
popf
fidivrl
and
test
lret
lret
sub
cld
jnp
fcoml
jbe
jmp
dec
ds
inc
loope
pop
push
imul
xor
clc
pop
loope
in
lock
repnz
test
inc
mov
cmp
lods
lcall
sbb
mov
ret
mov
cli
sar
movsl
xor
or
aad
sbb
es
dec
mov
and
and
outsb
xchg
test
notl
orl
std
and
jl
mov
adc
jmp
nop
sti
add
pop
pop
push
push
mov
or
jbe
pop
adc
leave
sbb
jne
pop
lds
or
sbb
out
sub
sbb
in
mov
and
sbb
cmp
les
adc
addl
or
sbb
mov
shlb
ljmp
xchg
cmpsb
cmpsl
push
lret
aam
lock
xchg
cmp
pushf
outsl
mov
mov
sbb
testb
inc
jne
mov
incl
pop
jae
loop
add
aad
rorb
mov
push
addl
adc
in
ljmp
das
getsec
mov
or
pop
xor
add
addr16
adc
xor
ss
cmp
dec
sahf
and
loop
lods
insb
stos
ret
or
or
pop
push
jle
int
xchg
adc
cltd
mov
cltd
arpl
push
loope
call
lcall
fdivl
add
dec
dec
movsl
dec
lahf
pop
mov
and
mov
and
aas
jg
xor
push
loop
icebp
insb
add
jne
out
mov
lods
push
add
mov
dec
cmc
sahf
mov
jg
sbb
sub
mov
mov
pop
repz
pop
stos
fadds
push
mov
sbb
sahf
fnsave
mov
dec
adc
sbb
sbb
push
mov
mov
dec
mov
adc
dec
mov
sub
mov
cmc
sub
push
mov
js
das
outsb
inc
xchg
jp
faddp
mov
out
pop
std
mov
fsts
cltd
pop
push
fisubs
or
jecxz
dec
imul
into
repnz
int3
lods
fistps
mov
mov
push
fwait
aad
pop
lret
adc
jno
or
addb
repz
rcrb
sub
mov
je
push
mov
xchg
inc
scas
mov
adc
inc
mov
loop
dec
push
jp
cmpsl
ficomps
cld
mov
push
dec
cld
xchg
mov
test
dec
stc
iret
xchg
jp
xchg
mov
jp
xchg
pop
mov
ja
pop
dec
adc
loopne
popa
sahf
mov
xor
insb
mov
mov
cld
lahf
popf
jmp
mov
test
adc
jmp
lock
xor
cmp
mov
in
dec
add
arpl
cmpl
fwait
push
mov
sbb
divb
ret
faddl
nop
jmp
mov
xchg
int3
push
repnz
incb
dec
nop
and
xor
inc
add
pusha
and
add
push
mov
xchg
ljmp
pop
movsl
add
int3
ret
cltd
and
mov
cmc
testb
repnz
and
sub
dec
cmp
pop
mov
mov
scas
insb
in
xchg
dec
push
sbb
or
mov
outsb
xchg
bound
push
cld
mov
nop
inc
popa
repz
stos
sbb
or
cmp
addr16
adc
push
inc
or
scas
add
cmp
push
fcmovnu
cltd
stos
fnsave
aas
push
cmpsb
outsb
jg
sbb
sub
push
test
lret
mov
icebp
movsl
mov
jns
mov
es
aas
push
jns
scas
mov
sbb
and
fisubrs
dec
cmpsb
mov
lcall
mov
push
mov
jns
add
loop
das
xchg
push
not
test
pushf
or
xchg
int3
mov
mov
or
pop
movsb
mov
pusha
je
pusha
arpl
cmp
sbb
arpl
addr16
push
xor
or
push
fidivrl
xchg
popl
fstpt
insb
jl
fmul
in
xor
es
mov
adc
out
loop
insb
add
fmuls
jecxz,pn
pop
xchg
out
sub
hlt
adc
rorb
clc
mov
adc
mov
mov
cwtl
pop
cmp
mov
cmp
inc
shll
in
xor
cmp
decb
repz
repz
xor
ja
adc
add
into
or
lds
or
jo
test
jmp
push
lea
imul
adc
mov
cmp
push
dec
push
inc
popa
push
nop
aaa
aam
loop
rorl
bound
sbb
inc
iret
pop
fldt
ret
mov
push
stos
and
xchg
xor
add
out
dec
or
orb
xlat
fmuls
adc
pop
mov
adc
xchg
mov
xchg
es
push
movsb
lods
jecxz
jle
and
loop
pushl
inc
cltd
dec
aam
or
imul
mov
faddl
enter
aam
or
xlat
repnz
push
rcll
scas
sti
mull
jbe
fdivrp
mov
cs
or
nop
mov
arpl
sbbb
push
fisubrs
ja
cli
xor
mov
in
aas
subb
push
lret
and
pop
jl,pt
stc
arpl
in
js
jb
fistl
mov
loop
sub
arpl
and
ja
aam
cli
out
loopne
mov
xor
loope
pop
aaa
das
repz
xchg
xor
add
sub
test
jnp
xlat
cmp
sub
add
xchg
push
rcrl
pop
out
rep
mov
adc
jb
insb
xor
or
pop
aam
out
xchg
ss
arpl
divb
pop
or
aas
add
and
aam
mov
in
mov
or
iret
mov
adc
aam
mov
xchg
and
dec
or
push
adc
inc
shlb
loop
fs
sub
xor
loope
fnstenv
xor
and
jne
xor
hlt
mov
mov
xor
pop
adc
mov
rep
mov
hlt
outsl
loopne
aaa
cli
shll
aas
sub
adc
ret
jmp
outsl
mov
aas
das
inc
sbb
arpl
push
and
lea
ret
imul
fcompl
mov
mov
sub
sub
jo
cmp
mov
shll
outsl
jge
sbb
imul
loop
xlat
or
lret
jmp
cmp
cmpsl
out
pop
fisubrs
pop
xor
fstpl
inc
xchg
mov
inc
cmp
mov
out
loop
fwait
cmc
scas
xor
xchg
xor
push
xlat
testl
xchg
les
pop
in
inc
loop
inc
dec
jo
sbb
mov
xor
push
sarl
push
mov
mov
dec
or
push
rcl
lea
mov
dec
in
inc
rcrl
xor
dec
out
int3
adc
push
mov
test
in
adc
cmpsb
xchg
jne
sti
sbb
mov
cmp
mov
scas
icebp
xchg
scas
lock
lods
lds
push
mov
fs
dec
pop
fidivrl
jp
adc
xchg
ljmp
paddsb
cmp
into
leave
out
insl
xchg
lcall
loope
xchg
jb
lahf
shlb
mov
jb
cli
sub
jno
iret
cmp
stos
out
and
scas
adc
imul
hlt
ret
xchg
aam
es
cwtl
inc
hlt
mov
sub
ja
or
or
test
cltd
insl
dec
xchg
aad
iret
and
lods
xor
fstp
lods
jno
push
mov
xor
or
sub
mov
repz
xor
into
jae
xchg
push
hlt
jb
out
call
or
shll
unpckhps
push
cmc
out
int3
mov
inc
mov
dec
mov
lcall
test
push
cld
push
outsl
mov
sub
hlt
mov
jge
hlt
lret
pop
inc
adc
xor
and
xor
bound
pop
pop
addb
lods
into
adcb
push
lcall
adc
mov
pop
loop
sub
and
testb
in
adc
pop
stos
movsb
lahf
movsl
jl
leave
sbbb
inc
adc
xchg
jno
cmpsl
mov
cmpsb
xor
test
paddsw
pop
aad
sbb
pop
or
dec
mov
jae
sbb
movsb
add
mov
adc
dec
cmp
dec
jb
sub
jl
inc
daa
popf
nop
push
iret
mov
jne
rorb
out
xlat
jb
add
aam
pop
and
add
jo
mov
daa
adc
imul
inc
loop
or
in
loope
in
mov
cmc
adc
insb
pop
dec
fimuls
popf
ljmp
scas
adc
out
or
jnp
mov
roll
sbb
xchg
daa
mov
in
xor
xlat
clc
pop
mov
into
mov
jo
jp
cwtl
or
push
push
scas
aad
es
out
inc
xchg
cmc
mov
sarb
add
xchg
ljmp
pushw
fadd
or
push
outsb
sub
outsl
lret
aas
loope
or
xor
bound
dec
pop
leave
sbb
ds
mov
jno
or
jb
cld
sbb
jnp
pop
push
shrb
in
lahf
pop
les
popa
in
nop
fwait
dec
or
sarl
shr
mov
out
bswap
xor
aas
sub
and
adc
xchg
fs
mov
dec
jo
sub
std
mov
sbb
inc
sub
mov
push
into
cvtdq2ps
jnp
fs
push
mov
pop
sbb
lret
pop
out
pop
push
inc
das
push
xor
rorb
insb
imul
lods
cmp
imul
cmpl
xchg
push
push
mov
lock
jnp
pop
add
lret
and
jno
mov
sarl
bound
test
dec
xchg
iret
out
cmp
mov
inc
jle
xchg
call
jl
xor
sti
lods
jnp
jno
mov
test
sub
jae
or
imul
push
je
cmc
jo
push
push
mov
lcall
push
imul
or
in
icebp
rorl
inc
lret
sub
xchg
int3
insb
fistpll
or
shrl
jae
jmp
mov
xchg
mov
stc
push
cmp
sbb
notl
and
push
adc
repz
inc
fiadds
xor
jecxz
mov
cmpsl
loopne
cmp
sbb
and
ss
pop
daa
mov
in
andl
aaa
cmp
loopne
daa
shll
push
ja
xchg
sbb
leave
xchg
xchg
sub
gs
mov
mov
xor
pusha
fs
sub
jmp
shrb
jb
dec
pop
loope
scas
mov
ljmp
loopne
int3
mov
mov
push
add
adc
cmp
xor
shlb
out
das
nop
sar
aam
repnz
je
xchg
jl,pt
xorl
out
icebp
fldt
mov
sub
dec
fidivrs
fwait
pop
cmp
dec
and
jo
and
lods
and
or
cmp
insl
mov
push
jl
aam
data16
jmp
rcrl
add
cmp
sarl
and
insb
hlt
shl
push
scas
sub
mov
mul
or
jbe
nop
sub
push
ds
sub
or
xchg
mov
popa
pop
out
fcoml
insl
mov
xor
mull
xlat
sub
adc
dec
inc
push
out
adc
dec
or
gs
add
jmp
nop
pushw
add
into
jae
push
test
pop
mov
fadd
pop
xchg
jo
std
mov
inc
lea
rorl
push
fcoms
sti
andl
shr
fisubl
lcall
mov
mov
xor
stc
or
dec
lret
fwait
insb
sub
lret
cmp
pushf
lods
nop
nop
push
in
imul
mov
push
call
push
popf
mov
jo
sub
in
xor
loop
fldl
mov
push
mov
divb
xchg
sbb
rclb
dec
in
and
sub
loopne
clc
cmp
negl
cmp
bound
lahf
adc
and
data16
mov
sbb
xchg
fistl
cwtl
pop
sub
hlt
jnp
pop
inc
aad
jae
jl
push
outsb
dec
in
pop
mov
mov
add
roll
lds
imul
mov
shrb
mov
int
add
repz
cmpsl
scas
mov
jnp
iret
rolb
out
mov
mov
adc
mov
scas
dec
jo
int3
cld
test
mov
jecxz
outsl
and
and
or
je
enter
testb
mov
pop
ja
lahf
push
jecxz
push
in
mov
jge
shr
out
insl
test
movsb
inc
clc
js
in
or
addr16
push
xor
jne
or
xchg
jp
adc
xchg
orb
inc
sarl
out
dec
mov
xchg
inc
xor
into
sub
mov
cli
sbb
push
fwait
and
es
dec
jo
jbe
int
dec
and
hlt
loop
roll
gs
xchg
test
push
mov
in
cltd
hlt
or
or
mov
jb
lret
jne
imul
nop
push
adc
daa
out
out
scas
out
cli
idiv
fsubrs
or
out
enter
lret
jmp
sbb
shrl
push
dec
sbb
adc
in
sbb
cwtl
int
pop
xchg
adc
xchg
repnz
nop
cmp
adc
jae
mov
add
adc
out
sbb
aas
xchg
mov
lahf
fdivl
dec
xlat
test
inc
loope
loop
push
xor
cmp
jo
and
mov
movsl
lcall
ja
inc
and
sbb
imul
rcl
and
or
icebp
push
xor
or
sub
sbbl
in
int3
das
adc
mov
lcall
loop
inc
out
pop
xor
fwait
xchg
xchg
lds
sahf
out
test
in
lcall
pop
dec
stos
jbe
push
fwait
nop
pusha
pushf
repnz
je
pop
jb
push
mov
push
das
out
dec
lcall
pop
add
fsubl
jbe
push
xchg
and
dec
shll
pusha
push
xchg
pop
cmpsb
pushf
mov
int
inc
mov
cmp
bound
lret
pop
ret
add
aas
flds
adc
jecxz
push
lret
pop
int
sbb
jp
int
and
mov
xor
sub
mov
sbb
and
xor
and
inc
enter
pop
enter
daa
repnz
cwtl
loop
lea
and
insb
and
push
popf
hlt
sbb
cld
mov
add
insl
mov
das
cmp
xlat
pusha
adc
cld
outsb
cmp
fldenv
jno
inc
add
mov
imul
dec
dec
roll
cmp
jno
adc
js
lock
push
pop
aas
push
iret
sbb
mov
mov
adc
loop
mov
add
aad
mov
mov
jl
scas
cmpl
stos
lock
sbb
jp
mov
push
add
stos
lock
adc
loope
pop
jns
push
icebp
dec
sbb
pop
pop
out
orl
insl
inc
and
test
les
xor
bound
pop
inc
cmp
loop
push
jns
lea
fs
cwtl
or
insb
jns
inc
popa
sub
mov
pop
pop
notb
lahf
and
imul
adc
nop
cmp
ret
out
pushf
xchg
add
jp
scas
imul
mov
cmp
push
mov
fcompl
jae
js
sbb
cs
mov
rcrl
insb
adcl
iret
push
fisttpl
mov
pop
pusha
inc
decl
jo
iret
mov
mov
xor
mov
inc
dec
mov
jb
outsb
sbbb
and
xorl
out
mov
aas
push
jae
js
push
sbb
pop
dec
add
daa
and
stos
add
out
setg
clc
out
cmp
adc
sub
cmp
stos
testl
test
addb
adc
into
sub
mov
aad
pop
dec
sbb
push
lcall
loopne
pop
cwtl
cmp
mov
lea
dec
pop
movb
fiadds
mov
dec
inc
mov
scas
mov
daa
cmpsl
out
addr16
les
and
push
insl
loopne
push
inc
and
push
notb
cmc
stos
pop
insl
ss
mov
stc
jp
xchg
adc
adc
inc
mov
mov
push
roll
das
mov
arpl
addr16
xor
test
cmp
dec
mov
mov
and
mov
daa
fwait
mov
orl
push
sub
mov
movsb
xchg
test
fidivs
imul
mov
jo
sub
aam
enter
push
adc
lret
jo
dec
sbb
mov
das
mov
icebp
add
inc
in
ja
jno
mov
test
add
xchg
xchg
sahf
in
pushf
pop
scas
mov
mov
push
mov
push
xor
push
cmpsl
adc
jno
fbld
push
psubsb
or
mov
mov
push
pop
fcmovbe
mov
or
pop
sub
iret
cmpl
pop
mov
sub
fisubl
push
mov
dec
inc
movsl
scas
lret
cmp
or
repnz
xchg
leave
mov
cmpsl
xor
pop
xor
das
jne
jbe
push
repz
and
jp
icebp
dec
fiadds
enter
hlt
mov
push
int3
pop
mov
mov
fwait
xchg
mov
test
cli
sbb
pop
dec
mov
cmpsb
dec
ficomps
xor
inc
mov
add
gs
pop
sahf
xchg
mov
movsl
loopne
out
sar
and
pop
jns
add
jbe
ja
and
push
push
xchg
cld
icebp
cmc
jne
mov
fstps
dec
pop
js
fstpt
push
sbb
inc
jge
ret
push
push
cltd
inc
push
mov
sti
cltd
andb
cmp
mov
push
and
or
dec
xchg
xlat
jno
sub
scas
cs
pop
ss
xchg
sbb
sbb
nop
jae
sbb
call
scas
inc
ss
jns
out
inc
out
aaa
mov
dec
bound
cmpb
repz
dec
lock
cmp
mov
jl
or
aas
jle
int3
sbbl
sub
fildl
jecxz
rcr
sbb
inc
gs
lret
les
repz
imul
ret
and
sbb
mov
arpl
lahf
mov
push
lods
adc
xor
jge
or
jnp
jne
add
sbb
iret
mov
xchg
pop
mov
cmc
fwait
test
sub
mov
dec
jne
cli
data16
mov
push
inc
xchg
loopne
push
or
xlat
push
sti
push
push
repz
cmp
sub
sbb
dec
dec
and
xor
das
lcall
jge
push
aas
bound
movsl
rolb
dec
inc
js
aad
or
pop
mov
add
pop
and
ss
mov
bound
insl
out
sub
jmp
arpl
mov
pop
add
pop
sbb
scas
bound
dec
in
push
iret
jb
xchg
fsubrs
push
xor
xchg
xor
adc
test
movsb
xchg
dec
mov
jnp
mov
mov
ja
xchg
aaa
fsubs
xor
mov
push
or
movsl
cwtl
push
mov
mov
inc
loope
inc
mov
out
ret
pop
stos
dec
sub
mov
mov
pop
je
ljmp
shll
adc
rorl
dec
lea
jle
mov
cwtl
jns
cmpsb
inc
cmc
mov
fildll
sarl
dec
ja
sti
dec
jo
pop
xor
addr16
sbb
dec
mov
iret
test
sub
pcmpgtb
test
icebp
jns
mov
mov
mov
movsl
sti
push
repz
testl
loope
add
stos
std
icebp
push
jecxz
aam
adc
and
sti
sbb
cmp
inc
stos
xchg
cli
call
dec
cmc
cmp
cmp
dec
sbb
ljmp
mov
incb
mov
sahf
inc
jnp
ja
mov
jmp
xchg
sahf
push
cmpsl
adc
mov
jl
push
lock
sub
and
aad
out
sahf
popa
lds
js
ret
cs
jmp
mov
sar
movsl
cwtl
xchg
add
js
or
lock
lret
push
cmpsl
aaa
jns
jno
shlb
push
icebp
loope
cmpsl
scas
mov
out
jecxz
push
dec
push
xchg
mov
push
nop
das
mov
mov
pushf
jg
sbb
push
nop
or
push
xor
cltd
stos
jl
in
add
test
push
push
cld
int
dec
sub
dec
daa
mov
int
aaa
jbe
push
jge
dec
mov
iret
cmp
ficoml
jecxz
xor
pop
enter
jecxz
mov
sarl
dec
sbb
add
addr16
out
xor
arpl
ficoms
add
fsubl
jno
lret
mov
mov
lcall
dec
mov
xor
or
jecxz
push
sub
sti
push
jmp
mov
or
mov
and
or
in
shlb
cwtl
mov
xor
pop
std
xchg
inc
stos
mov
dec
nop
xor
sbb
xchg
ds
sbb
loopne
aas
or
fists
add
daa
rorb
mov
arpl
mov
pop
leave
lock
fdiv
and
out
repnz
loope
push
ret
pop
inc
dec
sub
fcomi
push
cmp
fisubs
pop
es
add
cmp
lret
je
out
jns
sahf
fwait
cli
in
repz
fs
xor
xor
sbbl
outsl
pop
jb
fiadds
push
insl
dec
or
mov
in
sub
cli
cli
xlat
sbb
in
insl
and
push
lret
imul
cmp
insl
push
mov
jnp
cmpsb
mov
or
dec
push
aad
cwtl
lret
sbb
insb
push
pusha
cmc
sbb
lcall
add
push
cmpb
and
aad
add
adcb
and
cltd
push
testb
cmpsl
push
inc
sub
test
push
je
pop
lock
pop
push
adc
fdivl
loop
pop
dec
mov
adc
or
sbb
icebp
ss
inc
jns
fldenv
scas
push
lods
jne
sahf
daa
push
rorl
scas
add
movsl
in
fs
cli
clc
icebp
pushf
dec
jo
cmp
inc
or
scas
out
pop
jno
or
icebp
jne
in
push
xor
jo
jp
or
pop
nop
enter
pop
jne
movsl
movsl
cmp
loope
lods
sbb
sbbb
ret
or
outsb
into
jle
add
and
adc
push
jl
test
rorb
push
cmp
sbb
in
jg
test
add
sbb
or
ljmp
xchg
lea
fcoms
je
cmp
adcl
mov
mov
mov
orl
repnz
out
ljmp
mov
adc
in
sub
fs
cmpsl
and
inc
test
fwait
cli
push
je
jle
lret
clc
adc
cltd
fcomip
test
add
mov
sbb
pop
mov
mov
and
push
push
fisttpl
sbb
loope
jecxz
cmpsb
adc
or
testb
shlb
sub
mov
mov
inc
or
xor
dec
xor
add
fisubrs
dec
and
or
rclb
aas
notl
mov
pusha
test
fdivrs
inc
fidivs
call
shlb
mov
fsubs
mov
pop
sub
pop
cmp
adc
jle
lods
jmp
js
xchg
shll
cmp
adcb
pop
or
in
cmp
mov
pushl
cmpsb
fcomps
lahf
dec
fdivrl
add
dec
mov
jae
dec
mov
dec
dec
mov
fcoms
and
lock
cmp
fsts
cli
enter
add
cli
dec
mov
pop
addl
mov
int
mov
sub
out
out
jno
jecxz
fistpl
sbb
rcll
aam
adc
xchg
xor
add
test
sub
lods
mov
inc
pushf
jp
xchg
xchg
movsb
outsb
xchg
pop
outsb
or
push
nop
lahf
cmp
cmpl
rol
das
fcmovnb
ljmp
or
fidivs
data16
pop
sbb
inc
inc
jns
mov
mov
xchg
push
enter
aas
lods
cmp
add
mov
cmpsl
dec
sar
xor
faddp
fs
mov
xchg
sub
ret
ss
jnp
out
adc
ss
dec
mov
inc
xor
scas
push
cli
dec
hlt
pop
jne
pop
addr16
clc
pop
and
scas
lock
int3
imul
lods
cmp
fidivrs
fs
into
sub
pop
movsl
hlt
push
sbb
sbb
pop
sub
roll
mov
push
mov
gs
mov
sbb
fimull
lcall
dec
add
cmp
pop
add
pop
push
ss
xchg
out
cs
test
scas
fsubl
xor
sub
xchg
sub
in
shlb
test
mov
repnz
cld
xchg
mov
jne
sub
lock
lods
pslld
shlb
cmp
out
and
xchg
movsl
pop
and
or
sub
sbb
sbb
sbb
fstpl
sbb
test
mov
hlt
sub
dec
out
push
push
cmp
xlat
mov
into
fst
into
cwtl
mov
out
mov
shrb
incb
push
imul
dec
adc
enter
call
xor
cltd
sti
adcb
mov
arpl
cmp
push
mov
or
mov
cmp
and
sub
mov
adc
adc
adc
xor
gs
push
dec
push
sbb
jmp
scas
sub
mov
push
pop
jl
sub
shlb
or
insb
in
cmp
std
ja
dec
mov
xchg
shrl
dec
scas
pop
jae
mov
out
mov
pop
or
dec
mov
insb
and
sbb
adc
pop
push
or
dec
test
push
ss
pop
aaa
pop
or
xor
push
outsl
int3
mov
cwtl
mov
push
repnz
cmp
mov
xchg
mov
jo
cmp
xor
call
test
lcall
aad
rorb
add
in
pop
fnstenv
sbb
cmc
lcall
stos
mov
xchg
fdivrl
xchg
clc
add
dec
movsl
ds
int3
xchg
jne
sbb
mov
lcall
mov
pop
jp
insl
aam
cmp
sbb
call
inc
into
and
addr16
and
xor
dec
jo
push
inc
ds
xchg
xchg
adc
add
aam
jge
fwait
xchg
and
xor
test
test
pop
mov
pop
je
push
data16
xchg
dec
addr16
mov
pushf
lods
inc
push
gs
push
pop
jns
cmp
negb
xchg
mov
sub
cmp
int3
cmc
jg
mov
leave
data16
je
icebp
inc
hlt
stos
movsb
hlt
pop
in
xor
cltd
mov
scas
add
push
and
cmp
test
popw
enter
shrl
and
movsl
in
and
mov
es
sbb
ret
push
out
jg
push
jmp
adc
add
mov
mov
loope
pop
add
pop
mov
rcll
mov
dec
or
sbb
cmp
mov
aad
js
add
testl
mov
push
xor
dec
and
mov
subb
iret
popf
dec
and
fldt
cmpb
adc
pop
inc
cmc
jmp
pop
dec
add
pop
leave
jg
inc
mov
push
jbe
pop
or
and
clc
insb
pop
xor
lret
sarb
clc
inc
sti
insb
hlt
mov
out
sbb
arpl
test
inc
sbb
dec
scas
fwait
xchg
loop
mov
sahf
repz
cwtl
xor
inc
lock
sbb
repnz
fsubs
stos
je
stos
stos
adc
clc
pop
jecxz
aaa
push
and
adc
aam
and
mov
xchg
stos
inc
pusha
cmp
sbbl
pop
add
inc
fcomps
jnp
cld
jle
sbb
mov
outsb
cwtl
pop
mov
outsb
sahf
fcom
ss
imul
jecxz
adc
xor
enter
icebp
push
ljmp
popa
jmp
adc
loopne
pop
shll
inc
out
cmp
ds
cmp
mov
scas
out
loopne
cltd
hlt
pop
pop
out
decb
sub
cld
xor
adcl
jg
fcompl
sub
jbe
popl
idiv
mov
cwtl
aaa
sahf
dec
movsl
lret
cmpsb
outsl
sbb
scas
or
mov
inc
pop
mov
outsb
je
jle
les
inc
je
cmp
or
mov
xor
or
sub
push
lea
sbb
push
lods
imul
add
loopne
ficoms
inc
cmpsl
aas
cmp
data16
jecxz
mov
inc
addr16
dec
nop
push
jge
and
mov
mov
out
xor
xor
sti
ss
pop
loopne
inc
sbb
je
mov
inc
or
sbb
sub
repz
push
stos
sub
push
out
jg
je
lock
pop
push
adc
fld
aas
jecxz
mov
pop
cmp
inc
xor
pushl
fstpt
jp
scas
add
mov
enter
rcrb
dec
jae
ja
mov
sub
lret
lock
nop
mov
fstl
subl
in
imul
or
sbb
sbb
jnp
jle
mov
xchg
xor
lock
cmc
mov
xor
inc
leave
push
sub
mov
xchg
cwtl
cwtl
fcomi
add
sub
cmp
scas
inc
pushf
or
in
mov
push
pop
push
adc
cmp
test
insb
or
mov
add
fiaddl
inc
jge
push
cmc
xchg
dec
in
push
mov
sti
lahf
call
inc
fsts
cmp
in
pop
mov
jb
inc
das
xlat
fcoml
cmp
cmc
call
lcall
xchg
push
xor
icebp
imul
xor
xor
and
xchg
mov
clc
add
insb
mov
call
jg
popa
jmp
sahf
adc
jbe
in
movsb
push
jp
inc
jecxz
mov
or
sti
pop
push
sti
and
movsb
mov
jnp
pushf
mov
xor
repnz
sarb
mov
fnstcw
js
mov
imul
arpl
lret
jmp
shlb
cli
adc
es
icebp
mov
cmpsl
popa
dec
cmp
adc
sbb
mov
jle
std
test
std
call
push
lret
or
jnp
xorb
loope
jg
bound
in
sub
or
push
cs
mov
mov
cmc
fs
cs
out
add
mov
cmp
xchg
and
adc
pop
mov
test
cmp
nop
outsl
addr16
in
pop
aaa
gs
xlat
push
test
xchg
out
jns
mov
inc
je
int3
pop
aam
sub
addl
pop
aas
pop
sbb
inc
cmc
push
mov
mov
in
push
shrb
lcall
popa
imul
xorl
add
test
xor
hlt
mov
hlt
imul
xchg
inc
mov
je
push
sbb
pop
push
rolb
rorl
mov
jnp
mov
icebp
lea
arpl
cmp
scas
and
mov
xchg
repnz
pop
and
sbb
mov
sbb
mov
jmp
mov
mov
notb
test
xchg
loop
clc
and
outsb
mov
pop
xor
dec
pop
popa
sub
pusha
push
cld
and
cmpsb
shlb
repnz
notb
xor
lock
inc
ds
enter
aam
mov
mov
imul
std
jnp
adc
ja
test
pop
cmp
insb
fs
xor
lock
lcall
xor
or
mov
cmp
cmp
xchg
fnstcw
aad
es
insl
xchg
push
stos
sti
push
nop
test
div
gs
cltd
cmpsb
or
push
inc
popf
xor
jae
jne
adc
pop
xlat
es
clc
or
jecxz
lret
xor
jno
xchg
mov
shr
popa
in
inc
outsb
popa
xchg
or
test
mov
mov
dec
mov
into
push
sbb
pop
bnd
pushf
mov
mov
shl
adc
cmp
in
jns
in
int
inc
add
xlat
setg
int3
outsl
or
pop
add
cmp
int
bound
inc
add
out
push
cli
dec
aam
pop
fldenv
insl
push
sti
inc
lock
nop
mov
mov
insl
lds
jno
and
jg
xchg
test
lds
stc
ss
shlb
aam
cmp
xchg
lret
mov
xchg
gs
loop
fsubs
std
sub
jg
in
mov
das
rcrl
mov
xor
gs
imul
fisttpll
repnz
aaa
jg
cmp
movsb
jl
mov
loope
icebp
jae
sbb
mov
in
repnz
in
inc
mov
mov
adc
or
verr
ret
xor
es
popf
mov
mov
js
out
mov
scas
push
xor
enter
add
push
fs
push
pop
std
adc
push
lea
pop
fbld
pop
and
daa
cmc
xor
outsl
testb
ret
adc
mov
dec
jno
mov
loopne
dec
mov
arpl
mov
fwait
add
aas
pop
add
outsl
fnsave
jae
adcb
add
incl
inc
loope
push
addr16
cmp
out
or
mov
das
pusha
rorl
enter
les
cld
ret
sbb
inc
jno
push
mov
sub
cmpsb
jmp
imul
or
and
dec
dec
pop
and
xor
push
sub
fwait
inc
and
mov
xlat
mov
cmc
rcl
push
fbld
push
mov
fidivs
mov
dec
mov
inc
es
cmp
and
mov
mov
lods
sub
add
mov
data16
fucom
aam
adc
mov
icebp
movsb
inc
jmp
dec
adc
ds
jmp
mov
add
inc
ljmp
mov
lods
das
ret
sub
shl
xchg
jle
inc
xor
push
test
pop
add
cmpsb
pop
test
add
insl
mov
pop
loop
push
je
mov
mov
xor
shlb
dec
xchg
shlb
push
jmp
dec
cmp
sbb
nop
lods
mov
xchg
sbb
push
iret
inc
cld
fs
mov
mov
jne
xor
cmp
push
push
jge
popa
xor
lret
out
loop
test
jge
cmp
mov
into
mov
in
push
xchg
ss
out
mov
aaa
inc
data16
je
mov
jno
loopne
aad
lods
xchg
sub
xchg
in
stos
dec
push
in
mov
pushf
cwtl
cmp
sbb
and
mov
fistpl
sub
lret
aad
popa
jb
pop
mov
loopne
out
into
mov
push
mov
and
je
push
sub
insb
add
inc
test
out
call
jge
pop
hlt
jg
lock
cmp
je
mov
dec
insl
and
lds
cmp
mov
bound
sub
loop
xchg
pop
andb
jmp
lahf
sub
lcall
loope
cwtl
cmp
lds
mov
xor
in
adc
test
fs
mov
shll
cs
xchg
inc
jle
mov
repnz
dec
dec
hlt
cltd
xor
in
mov
add
ss
cmp
pop
loop
mov
popf
movsl
xor
mov
inc
ds
pushf
cltd
jp
xor
pop
cmp
adc
das
and
les
mov
mov
lcall
or
xchg
inc
sub
ds
push
lods
mov
mov
inc
adc
pop
push
mov
shll
jns
push
sahf
cmovnp
icebp
jecxz
ror
sbb
xchg
addb
xor
shlb
dec
pop
cli
ja
int3
test
shrl
sub
mov
mov
fstps
int
inc
stos
iret
dec
outsl
push
jne
add
mov
movsb
shrl
xchg
shll
cmp
rcrl
loop
mov
add
xchg
and
ja
xor
dec
mov
xchg
fwait
jo
inc
nop
sub
ljmp
pop
jmp
jmp
or
lds
test
fstl
hlt
xchg
call
and
push
aaa
cmp
mov
add
xor
jmp
push
xor
dec
pusha
or
addr16
lcall
pusha
or
ror
sub
inc
fmuls
cmpsb
and
or
nop
shl
cmp
mov
jg
test
mulb
adc
add
movsl
push
lcall
xchg
cmp
xchg
pop
loop
jnp
jo
test
sbb
jmp
into
pop
xchg
imul
mov
mov
pushf
lcall
jb
push
add
je
jmp
cmpsw
adc
roll
jo
jge
push
rorb
leave
add
fwait
and
lea
adc
jns
movsl
mov
subl
push
test
bound
or
jae
gs
push
xorl
test
or
aas
jbe
mov
jo
shrl
cmp
in
loopne
adc
inc
scas
xor
jo
sub
rorb
push
or
jns
xor
aaa
mov
out
mov
fdivl
mov
jb
xorl
lock
add
lods
inc
mov
pop
dec
in
test
add
pop
or
xchg
lret
push
inc
sahf
xor
gs
lcall
xchg
mov
sbb
pushf
cmc
lods
fidivl
and
bound
test
outsb
fisttps
shl
aad
add
sbb
add
mov
xor
test
pop
out
pop
in
movsb
repz
shlb
xor
inc
xlat
roll
and
add
cltd
inc
lea
jge
dec
cld
or
cli
mov
mov
fwait
or
mov
or
mov
aaa
and
mov
int3
repz
dec
lret
adc
push
add
test
shll
aad
push
popf
nop
adc
in
xchg
push
fucom
mull
inc
mov
das
mov
xchg
aas
mov
cmp
sbb
in
dec
fidivrs
inc
lods
fucom
push
leave
rclb
or
pop
out
out
xor
lods
push
stc
and
push
lret
fyl2xp1
test
mov
rcl
inc
jmp
in
xor
pop
enter
or
in
or
popf
lahf
add
mov
ret
pop
clc
frstor
setns
adc
in
inc
inc
mov
cmc
andl
dec
push
xor
ja
in
or
push
cwtl
adc
fidivrl
jae
gs
jg
or
enter
aam
dec
jle
and
scas
sbb
jbe
jmp
adc
mov
push
sub
adc
sub
roll
add
dec
adcl
lds
inc
cmp
sub
xor
dec
xchg
mov
xchg
bound
jmp
lods
test
popf
or
adc
icebp
mov
cmp
inc
test
gs
cld
outsb
call
adc
pop
mov
push
jmp
int3
push
xor
lret
jmp
pop
add
jl
iret
and
xor
push
imul
movsl
xchg
leave
imul
mov
int
cwtl
stos
popa
cmp
int
loop
arpl
cli
imul
cmp
sbb
dec
lret
sbb
push
inc
aam
pusha
adc
jecxz
repz
lea
xchg
repnz
xchg
inc
mov
arpl
arpl
ss
pushf
std
lret
inc
test
push
aad
fsubl
mov
in
xchg
imul
insl
in
fisubl
jle
aaa
jbe
lods
inc
add
aaa
and
inc
xor
add
arpl
lret
xor
das
lret
fnstcw
xor
and
ret
and
sub
cltd
xchg
mov
xor
daa
sub
shll
xchg
test
push
std
cmpsb
andl
dec
sbb
out
adc
pushf
jmp
sahf
pusha
push
xchg
cmp
pop
fs
shlb
xor
lret
jo
cli
inc
pop
jne
fisubs
cmp
fstpl
add
shrb
ja
cltd
or
pop
pop
pop
jg
jb
popf
pop
mov
gs
les
push
adc
adc
mov
subl
jo
sbb
pop
push
cli
inc
add
cmc
push
out
and
xchg
test
out
cmp
pop
insb
sub
dec
xchg
jp
jg
in
xor
xchg
cmpsb
test
pop
and
inc
fstpt
mov
rol
lret
arpl
jge
addr16
insl
push
fidivs
std
adc
dec
lods
cmpsb
lock
jl
or
std
or
inc
outsb
std
and
jnp
fimuls
push
ficompl
shlb
insb
ja
leave
adc
les
xchg
ret
popf
insl
and
lods
cmpb
stos
mov
aaa
or
jb
cmpl
push
mov
pusha
inc
dec
rol
xchg
pop
imul
hlt
pop
push
fldt
movsl
jle
push
mov
pop
or
xchg
jbe
sub
int
pop
gs
cmpsl
jmp
add
cmp
add
cmp
xchg
lock
push
aad
pop
xor
inc
in
add
xchg
bound
ja
fcoml
dec
out
jae
jnp
pop
mov
test
pop
or
push
cmp
pop
xor
aaa
scas
jle
push
cwtl
ret
jo
mov
fwait
aam
clc
addr16
rcll
push
cs
pop
or
pop
rcrl
push
popa
out
sub
cmc
dec
inc
jno
int3
das
and
movb
scas
rol
outsl
testl
leave
fisttpll
cmp
setl
jmp
and
repnz
jb
ljmp
sbb
sub
push
rol
sub
push
shrb
cmp
push
mov
inc
cs
into
mov
sub
dec
mov
inc
mov
add
das
fadd
push
jae
dec
push
sti
subb
insb
nop
or
outsl
mov
lea
xchg
aam
nop
sub
orb
fisubrs
or
jmp
out
lahf
popf
or
clc
xor
xor
xor
andb
loop
push
xor
call
rcr
adc
stos
adc
imul
sbb
push
test
lcall
and
dec
push
push
xor
jbe
stos
aad
scas
or
push
xor
test
lock
int
and
in
dec
adc
dec
or
and
jecxz
push
inc
sub
lret
push
scas
hlt
mov
sbb
rcrl
or
add
adc
insb
xchg
mov
cmpb
outsb
sti
adc
cmp
nop
and
lock
pop
fcompl
cld
int3
adc
sub
inc
mov
jo
out
xor
lcall
or
push
dec
movsb
add
hlt
jne
mov
ret
fistl
and
sbbb
and
jno,pn
mov
leave
fisttps
xchg
cmp
push
jp
lcall
dec
movsb
or
lret
loopne
hlt
test
pop
cmp
dec
cltd
push
nop
and
call
inc
pop
inc
mov
push
jmp
mov
jmp
pop
dec
cli
lret
gs
xor
jbe
lcall
cmp
movsb
cmp
and
push
add
test
xchg
add
jbe
lahf
pop
fucomi
sub
inc
inc
out
inc
sub
or
jbe
dec
mov
and
cmp
adc
es
fmull
xor
daa
lods
aad
mov
cmpsl
dec
movsl
dec
adc
jle
js
dec
sbb
fdivrl
ds
pop
sub
add
mov
outsb
inc
inc
test
and
mov
jo
push
pushf
imul
inc
dec
push
jecxz
lock
divb
insb
std
or
cmpl
mov
test
cwtl
stos
pusha
mov
sbb
scas
imul
lcall
repnz
pop
add
test
xchg
insl
faddl
cmp
fimuls
aaa
xchg
mov
mov
ficompl
adc
scas
ds
negb
mov
out
imull
leave
movsb
xchg
subl
push
xor
mov
ret
inc
es
or
sahf
pop
xor
jmp
adc
jns
lcall
pop
dec
push
out
insb
jg
jmp
movsb
fiaddl
mov
dec
or
xor
xchg
mov
push
mov
ret
dec
push
inc
or
in
xchg
pop
xorb
lock
xchg
sub
pop
popf
push
into
mov
jg
jg
ja
dec
cltd
aam
outsb
cmp
xor
inc
cmp
pop
xchg
data16
loop
fstpl
and
out
das
pop
cwtl
sub
inc
imul
outsb
xchg
pop
xor
add
xchg
jmp
into
pop
xchg
sub
jecxz
test
stc
sbb
add
mov
pusha
lock
pop
jae
mov
testb
scas
pfcmpgt
lahf
dec
and
dec
add
pop
dec
lahf
lds
cmp
ss
js
cmp
test
fadd
pop
popf
ret
ficoms
popa
cmpb
sbb
fdivs
push
scas
lcall
sahf
sub
lods
add
push
mov
jp
jp
popa
out
test
popf
jnp
js,pt
adcl
inc
jae
adc
pop
test
ficompl
or
ret
lods
mov
and
enter
cmp
ror
hlt
cmp
outsl
jbe
outsl
sbb
dec
jge
lret
rcrl
push
xor
call
imul
jmp
xchg
jmp
daa
fldl
popf
inc
mov
push
pushw
push
ret
negb
add
adc
xor
jge
arpl
mov
aam
outsb
fsubrl
mov
jne
mov
sub
cs
and
movsb
sub
mov
or
movsl
cmpsl
daa
jne
ljmp
int
mov
mov
jb
sbb
dec
jmp
xchg
inc
fsubr
scas
jge
call
outsl
cltd
pop
dec
stos
mov
push
movsb
mov
pop
add
cltd
cmp
notl
or
gs
int3
pop
xchg
dec
rorl
les
fisttps
mov
lds
jno
adcl
xor
jmp
or
mov
int3
dec
xor
fistps
addb
pop
lcall
push
subb
es
inc
mov
es
je
push
std
mov
cli
jbe
cwtl
jl
call
push
inc
stos
arpl
dec
loop
sbb
pop
scas
sbb
add
shrl
shlb
mov
mov
jae
pop
inc
popf
test
pusha
cltd
or
mov
aaa
xchg
cmp
cmp
or
mov
or
mov
inc
cmp
dec
and
and
pop
cmpsb
push
sarl
subb
jecxz
insb
ja
mov
mov
leave
aad
xchg
and
xchg
cli
xor
pop
lcall
icebp
int3
cltd
xor
pop
add
repnz
fldt
pop
xchg
repnz
mov
movsb
aaa
jle
movsl
mov
fsubrs
imul
sbb
push
jle
in
jne
sbb
movsb
fwait
and
ljmp
mov
ret
andl
mov
lods
lret
or
setnp
xchg
pop
and
xor
inc
xchg
adc
test
fisttps
jne
xor
repz
dec
popa
or
fsubl
insb
xlat
daa
dec
jmp
popa
enter
lods
xchg
rorb
es
mov
pop
mov
xchg
test
test
dec
aaa
int3
lods
xor
jg
add
sbb
sub
fisttps
xchg
aaa
xor
sbb
fmul
jg
aas
jmp
mov
mov
push
sahf
test
daa
pusha
fmul
repnz
js
es
in
mov
test
sbb
ret
in
stc
inc
daa
and
cwtl
out
jle
bound
pop
adcl
jns
or
fcmovne
neg
jne
inc
pop
add
jno
cmp
mov
jmp
mov
or
pop
sub
inc
mov
mov
jno
daa
mov
fsubr
shll
test
stc
xor
jns
xchg
adc
pop
or
test
xor
je
pavgb
enter
outsl
icebp
fabs
clc
pop
mov
outsl
jo
lea
dec
ljmp
in
loope
jbe
jne
inc
ljmp
pop
mov
mov
sub
and
repnz
cli
outsl
lahf
idivl
and
repz
das
out
dec
fadds
leave
adc
pop
inc
add
mov
mov
int
jo,pt
pop
xor
and
fwait
mov
pop
cltd
adc
imulb
push
cmp
movsl
lea
cmp
mov
mov
fdivs
loop
mov
xchg
pop
xor
sub
movsl
int
fsubrl
inc
mov
outsl
mov
xchg
test
cmp
imul
ss
lcall
pushf
test
clc
mov
jp
sbb
out
int3
lahf
lcall
out
in
mov
jl
xor
mov
cmp
fisttpll
data16
dec
inc
adc
mov
xchg
icebp
xor
and
fildl
stc
mov
out
adc
and
fs
mov
filds
mulb
fistl
xor
std
jno
rcrb
or
pop
or
fdivl
adc
lods
mov
aam
imul
mov
into
lds
lods
or
sbb
xchg
test
adc
aaa
inc
adc
jg
sub
test
mov
jbe
adc
lahf
pop
xlat
pop
or
les
aad
ret
dec
add
mov
loope
cmp
mov
das
adc
hlt
cltd
adc
xchg
inc
ljmp
aam
push
mov
and
dec
dec
cmp
push
jecxz
fld
leave
fiaddl
dec
test
movsl
mov
and
ljmp
shrl
jmp
and
test
mov
clc
mov
lahf
push
xor
mov
je
rorb
pop
inc
mov
dec
mov
sbb
xchg
add
xor
pop
sahf
jbe
or
ja
ficompl
cvtpi2ps
jns
cmp
dec
outsl
adc
and
rcrb
fsubrp
push
cmp
ret
or
mov
jl
pop
loop
mov
push
mov
xor
imul
push
imul
sbb
mov
dec
pusha
imul
cmp
inc
jo
mov
call
sub
sub
pop
dec
jb
rcll
out
jp
lods
sti
and
push
jns
pop
sub
dec
lods
aam
mov
es
push
fchs
subb
cs
adc
and
repnz
aad
and
sti
sbb
in
jle
sub
lret
fs
mov
shll
bound
mov
dec
sti
mov
cmp
mov
or
xor
cmp
inc
cmc
stos
rolb
lods
jns
sub
xchg
cmp
mov
jg
repz
and
int3
lds
fwait
test
movsl
fs
xchg
outsb
inc
cwtl
lret
jg
jg
push
cmp
fcompl
xor
imul
pop
out
daa
sahf
loop
pop
mov
leave
dec
mov
test
ret
enter
pop
jne
fcmovnb
xorb
test
or
jns
test
addr16
sahf
push
lret
push
in
mov
pushf
rcrl
xchg
lret
add
jl
insl
int
lea
push
jbe
and
addr16
cld
push
imull
stos
hlt
push
adc
je
push
push
push
fcomp
jp
rclb
add
pop
xchg
sti
mov
xchg
out
aam
cs
mov
xchg
jl
lock
adc
fidivrs
mov
push
outsl
lock
mov
mov
mov
ret
pop
jb
fsubr
shlb
mov
enter
std
jmp
add
mov
cmp
icebp
jae
out
test
pop
pop
sub
inc
imul
jb
lods
std
dec
clc
xchg
xchg
cli
flds
mov
cltd
or
fbld
add
dec
or
jmp
movsl
cmc
push
cmpb
rcr
cwtl
pop
sti
lock
cmp
outsl
cmp
fcmovu
mov
dec
dec
test
sub
lock
nop
call
inc
repnz
repz
dec
jnp
in
dec
test
test
cli
push
dec
xchg
in
test
xchg
pop
mov
pop
cld
stc
scas
mov
jg
lret
mov
imul
pusha
mov
test
adcl
inc
mov
mov
clc
rorl
push
lret
les
pushf
mov
and
imul
jg
into
mov
clc
outsl
rclb
roll
jp
dec
dec
loopne
mov
jp
push
clc
mov
xor
sahf
push
cmpsb
hlt
xchg
jge
mov
icebp
test
xchg
jo
jp
pop
sbb
lods
in
into
aaa
push
jge
fstl
jae
inc
mov
clc
ficoml
pop
psubd
and
sbb
call
mov
jnp
jnp
or
push
sarl
or
mov
out
ss
into
inc
and
rorl
sti
cmp
cmc
mov
push
shl
jle
ljmp
pusha
aad
in
repnz
jmp
cli
pop
scas
hlt
iret
out
xchg
clc
enter
or
not
shrb
and
test
mov
mov
xor
or
xor
xchg
sub
push
inc
inc
cmp
add
push
outsl
push
into
mov
jb
push
push
xchg
inc
cltd
dec
push
cmp
push
imul
clc
lea
sbb
andl
jno
or
sarl
addb
jb
cld
scas
popa
pop
scas
xchg
pop
bound
jle
xor
cld
inc
jne
adc
js
or
adc
mov
and
in
and
push
out
add
test
jae
cmc
fstl
inc
jb
pop
in
jne
xchg
pop
fdivrs
lret
mov
and
ds
mov
push
sbb
mov
mov
test
aas
cmpsl
dec
js
pusha
xor
add
sbb
pcmpeqw
add
jge
jle
movq
lahf
push
dec
mov
xor
mov
push
movsb
jp
mov
mov
repz
add
jbe
inc
lret
push
pop
inc
popa
jo
ret
ja
insl
mov
stos
mov
in
insb
xchg
mov
pop
insl
cmp
int
xchg
pop
inc
mov
inc
xor
test
movb
jbe
aaa
popf
jae
pop
cmp
xor
test
out
ja
xor
push
jno
hlt
js
and
fsubs
sar
and
mov
pop
rorl
popf
xlat
les
cmp
mov
dec
ret
xchg
and
fldcw
aad
loopne
nop
in
sbb
and
test
cmp
int
add
jne
loope
int
test
pop
mov
into
inc
into
dec
stos
and
jbe
sbb
inc
rcll
adc
inc
sbb
lds
jbe
daa
mov
push
cli
jb
int
test
adc
sbb
xchg
mov
pushf
jmp
clc
movsb
cli
outsl
mov
es
test
sahf
xchg
mov
pop
dec
xchg
pusha
ds
mov
add
addr16
sbb
jno
cs
cmp
and
mov
aas
adc
shll
andb
imul
inc
pop
push
sub
push
xor
stc
xchg
fadd
je
cli
daa
push
adc
sti
pop
push
lcall
test
cmp
aaa
arpl
inc
test
out
popa
dec
jecxz
rolb
pop
insb
xor
rorl
cmpsl
push
pop
lock
int3
mov
pop
adc
mov
mov
pause
idiv
inc
mov
dec
xchg
aaa
insl
xchg
xorb
jmp
push
xchg
or
cmp
inc
outsl
in
mov
dec
mov
lds
clc
les
jno
sbb
jbe
div
sub
out
cmpsb
jb
icebp
inc
pop
inc
ljmp
pop
and
int
dec
mov
mov
ret
jecxz
adc
das
mov
fldcw
mov
fdivrs
push
pop
test
dec
lock
ja
in
add
mov
test
and
push
shlb
mov
sub
sbb
loopne
test
repnz
jno
aad
mov
pop
test
adc
roll
xor
movsb
push
insb
cmp
pop
mov
or
ljmp
push
cmpsl
add
mov
aas
push
js
mov
push
cwtl
push
mov
inc
sub
sbb
mov
stos
imul
push
inc
cmpsl
test
aaa
pop
sub
dec
enter
imul
inc
inc
xor
ds
ret
pop
pop
jne
and
cmc
sti
xchg
movsb
daa
dec
fisttps
mov
push
fs
into
sub
xchg
pop
std
xlat
jbe
hlt
cmp
sbb
test
pop
add
int
popf
cmp
and
mov
mov
add
mov
mov
mov
jo
and
test
inc
mov
cltd
xlat
pop
call
data16
push
aam
lods
add
add
insl
fidivrl
les
mov
jg
push
enter
dec
sub
pushf
imul
jg
cwtl
lea
ror
inc
out
push
fcmovbe
adc
sahf
push
lahf
pop
and
cmp
mov
aam
int3
mov
push
jmp
xor
popf
push
lods
test
and
pop
std
mov
insb
or
inc
fndisi(8087
mov
mov
cmp
fs
lods
daa
sbb
jnp
add
mov
push
sub
mov
stos
in
mov
mov
jno
sbb
inc
ja
pop
cmp
out
pop
adc
adc
dec
xchg
mov
sbb
mov
jecxz
jb
cmpsb
fimull
adc
pop
scas
fldt
cmpsl
mov
imul
ret
jecxz
nop
test
dec
pop
sbb
add
pop
inc
aas
dec
mov
mov
out
in
mov
inc
std
jbe
inc
adc
dec
jnp
test
or
cmp
cmp
add
and
mov
repz
push
int
lds
xor
clc
jo
dec
jle
inc
aam
jnp
push
add
xchg
cli
adc
sbb
andl
sub
fisttps
je
push
icebp
outsl
pushf
jecxz
adc
into
sbb
icebp
push
xor
popa
clc
js
das
leave
push
arpl
or
cli
popl
insl
mov
dec
mov
cmp
cmpsb
leave
fwait
pop
loope
mov
push
push
mov
es
lods
cmp
data16
push
jecxz
shll
sbb
adc
std
adc
addr16
loopne
inc
and
ds
notl
ret
bound
data16
push
subl
pop
rcl
push
rorb
adcl
bound
frstor
jo
pop
or
mov
xchg
inc
and
jno
push
and
gs
cmp
outsb
jmp
call
add
and
ljmp
ds
xchg
enter
cli
mov
out
lahf
es
push
int3
mov
clc
pop
pushf
fstl
outsb
ds
into
scas
and
mov
pop
fbstp
out
idiv
out
dec
aam
or
jmp
aam
xchg
test
add
adc
xor
pop
scas
xor
mov
push
mov
or
lods
xchg
cltd
stos
outsl
fs
jge
mov
je
fwait
mov
cli
xor
mov
and
add
aas
mov
and
and
sub
jb
push
aas
pop
jo
fmull
stc
out
cmp
movsb
adc
pusha
das
insl
cltd
cmp
cwtl
adc
aaa
adc
jnp
jle
pop
xor
out
add
aam
mov
mov
mov
push
sub
in
bound
mov
les
add
push
je
fwait
lahf
mov
bound
out
mov
lds
outsl
mov
fidivs
mov
mov
mov
pusha
jp
inc
inc
adc
jo
test
mov
push
or
xlat
push
adc
arpl
jns
enter
stos
std
aas
cmp
xor
nop
dec
add
sub
mov
adc
fdivr
pop
adc
sub
rcrb
and
sahf
ret
movsb
mov
rorb
dec
xchg
pusha
dec
push
sub
lret
outsl
cltd
dec
push
pand
shrb
pop
imul
mov
sahf
js
test
or
cs
ljmp
ret
cmpl
call
neg
mov
out
dec
nop
adc
loop
shlb
int
nop
sahf
stos
pusha
lahf
inc
mov
or
in
fst
in
pusha
iret
and
xchg
or
gs
mov
std
mov
fstl
call
add
out
dec
scas
mov
sub
das
lock
push
es
rorl
jge
and
mov
jno
inc
mov
mov
add
loopne
lret
sbb
jo
insb
xchg
mov
scas
lret
cmp
sbb
dec
testl
and
mov
pushf
inc
sub
ret
stos
andb
inc
mov
shll
cld
or
cld
push
xchg
dec
insl
or
mull
sub
lock
xchg
xchg
in
imul
in
sbb
cmp
in
jmp
push
xchg
insl
std
rcll
sub
mov
xchg
xor
pop
mov
mov
ss
popl
pop
loopne
sbb
fnstsw
dec
and
scas
pop
mov
or
jns
inc
cmp
mov
xlat
lea
icebp
adc
ficoms
in
push
repnz
movsb
xor
add
inc
stos
hlt
fbstp
dec
jecxz
mov
call
insb
xor
and
cmpsl
push
mov
aaa
adc
stos
mov
cs
shlb
clc
lcall
sbb
jnp
fs
or
jle
fcoms
ss
cmp
aad
inc
fwait
cmp
rcr
jne
cmp
addr16
xchg
rcl
in
jbe
jp
jmp
or
xchg
test
xor
xlat
dec
movsl
insl
xlat
jecxz
int3
mov
cmp
cld
sbb
push
repnz
jge
cmp
mov
lea
jae
dec
icebp
xchg
fists
scas
cmpsb
inc
xor
out
test
das
mov
jmp
dec
movsb
mov
sub
push
scas
shrl
or
cld
jg
xorl
jmp
and
push
xor
in
mov
pop
jns
inc
rcll
jae
std
aas
cmp
xchg
pop
lods
in
movsb
out
aaa
fcoml
mov
jne
pop
imul
dec
and
ljmp
cmc
popa
and
jno
inc
test
jbe
incl
mov
mov
jno
cmpb
push
ja
push
jbe
and
das
or
cmp
jmp
sub
and
and
sarb
sti
cmp
fwait
and
xchg
daa
lds
lcall
and
aaa
lods
mov
mov
insl
mov
les
mov
shrb
sub
fdivrp
xchg
ljmp
cmp
mov
sub
adc
pop
mov
adc
jmp
in
cld
fildll
and
cwtl
in
xchg
mov
inc
mov
ss
insb
pop
cmp
inc
lock
inc
fcmovnbe
jg
clc
inc
pop
inc
mov
sbb
mov
mov
movsb
ss
push
mov
ja
xor
loop
dec
nop
les
jae
fwait
mov
outsl
push
fstpl
pop
es
mov
into
mov
das
cmpsl
gs
clc
repnz
mov
ljmp
outsb
mov
jns
pop
ficomps
cmp
fisttpl
mov
push
jge
add
aam
sbb
insb
pop
lcall
sub
pop
hlt
mov
sbb
xchg
stos
pop
mov
leave
cmp
int
sarb
aas
leave
lret
sbb
int3
jle
aam
mov
lahf
pop
push
mov
mov
leave
push
dec
xchg
arpl
in
push
pop
out
test
xchg
jmp
lcall
and
in
push
out
and
jno
add
int
into
stos
cmp
insl
out
sbb
mov
rcrb
sahf
xlat
scas
pop
cmpsb
mov
add
add
xorb
cs
cmpsl
push
shlb
xchg
and
adc
add
cltd
cmpsl
daa
and
jp
iret
cmp
xor
mov
repnz
rcr
inc
cs
in
jno
lcall
fidivs
jbe
xor
push
mov
sub
int3
sub
bound
imul
sub
xchg
icebp
cmpsl
mov
stc
lods
and
je
cmpsb
sbb
sbb
jge
divb
je
adcb
xchg
mov
sti
shll
jns
aas
xor
inc
hlt
insb
incb
movsl
mov
add
or
insb
decl
lret
mov
les
in
sti
clc
sbb
lods
repz
wbinvd
sub
sub
popa
push
into
ret
and
es
push
test
pop
out
dec
sbb
in
jno
fimull
jnp
fnstcw
stos
sbbl
adc
lea
and
cmp
lret
adc
repnz
xor
cwtl
out
xor
pushl
pop
mov
inc
loope
test
push
jae
out
std
sub
repz
mov
nop
aaa
int
repz
scas
hlt
out
test
and
or
aaa
mov
rcrl
pop
and
jge
imul
push
fimull
loopne
repnz
cwtl
add
les
sbb
sub
lahf
sbb
cmpsl
mov
cmp
or
cltd
fisubrs
adc
lcall
fnsave
sbb
rorl
push
out
adc
mov
out
sbb
stc
mov
mov
imul
jecxz
xor
fnstsw
hlt
jecxz
or
xor
cld
or
sub
outsl
psubw
add
out
pop
mov
clc
jne
mov
lcall
cwtl
xchg
add
cld
rorb
insb
pop
mov
addr16
mov
ja
pop
pop
test
int3
cli
mov
mov
rcr
bound
add
pop
ljmp
push
mov
divb
jbe
cwtl
xchg
dec
fcmovne
pop
jno
in
lret
sahf
pop
add
sbb
hlt
push
mov
rcl
xor
inc
mov
lahf
shl
add
aad
subl
repnz
adc
sub
dec
jl
sbb
pop
scas
adc
test
sub
cmpsb
xchg
pop
sub
mov
ljmp
inc
push
fnsave
or
int
cmpb
out
jne
sti
sbb
cmp
stos
cmp
ret
inc
mov
mov
dec
mov
leave
jno
loop
rolb
xor
mov
add
or
add
push
imul
mov
jl
cld
adc
ss
jmp
jne
std
dec
aaa
inc
hlt
cli
es
js
mov
push
or
sbb
fidivl
cmpsl
sarl
cmpsl
or
lods
mov
xor
push
xor
xchg
push
cwtl
lahf
adc
iret
inc
cwtl
dec
xor
roll
cmpb
jne
lahf
mov
jae
sub
adc
pop
mov
adc
cmp
dec
xor
jne,pn
and
aaa
cmp
icebp
outsb
fst
jecxz
movsl
mov
ljmp
sahf
push
lea
xor
fimuls
shlb
les
mov
js
or
aas
aas
movsl
mov
xchg
sub
daa
xchg
xchg
sub
dec
xor
outsb
adc
mov
jmp
outsb
movsl
mov
into
in
je
and
jbe
in
test
pop
nop
loopne
push
mov
adc
fimull
loop
loope
dec
das
pop
sbb
add
out
mov
pusha
pop
test
and
jbe
cmp
fcmove
push
popf
mov
xor
inc
rcrl
push
fisubrl
cmpsl
push
xor
dec
xchg
push
inc
xchg
mov
jo
jns
in
out
fisubrs
fldl
sub
cmpsb
pop
xor
and
or
roll
xor
pop
das
daa
mov
jbe
dec
fscale
or
mov
sbb
imul
xchg
nop
xchg
je
les
pop
xchg
and
gs
fadd
xor
test
add
dec
adc
lahf
adc
js
add
clc
lahf
test
ja
fisubs
adc
cmp
sti
pusha
and
push
ret
enter
icebp
loopne
jmp
pop
out
add
loopne
mov
add
outsl
add
rclb
mov
xchg
ss
outsb
mov
mov
es
or
loop
pop
fisubl
push
dec
lret
out
daa
rcll
loope
mov
sti
es
mov
add
and
in
xchg
fstl
or
inc
sub
addr16
dec
pop
cmp
mov
stos
inc
pop
mov
orb
inc
push
repz
fisubs
sahf
add
ds
push
adc
xor
ljmp
pop
push
sbb
xor
jl
jge
xor
and
fisubrl
cmp
jne
sub
inc
jne
and
test
mov
outsl
jae
xor
xor
push
inc
call
pushf
mulb
or
xor
pop
test
mov
inc
in
cltd
mov
shlb
enter
test
mov
fidivrs
cmp
test
jno
cmp
jno
lret
xor
mov
sub
loope
xchg
pop
pop
lea
shl
cmpsb
inc
cmpsl
ret
pop
rol
std
mov
dec
ja
sti
jg
xchg
mov
or
xor
jae
add
jo
sbb
jp
xor
add
mov
and
insb
insl
out
loopne
mov
push
popf
test
mov
jae
decb
push
inc
aas
aad
xor
aad
stos
jl
sar
scas
movntq
imul
enter
mov
or
gs
in
negl
mov
add
ret
dec
add
pop
test
test
xchg
inc
mov
xor
ret
adc
imul
jne
sbbb
repnz
test
adc
loopne
xlat
xorb
mov
rol
mov
imul
sbb
xor
push
jl
jmp
mov
popf
sub
jmp
fstpl
push
sbb
out
movsl
into
inc
gs
and
xchg
mov
push
adc
imul
das
lret
jo
mov
mov
clc
and
lret
add
and
notl
pop
jp
xchg
sbb
and
test
pop
push
jge
daa
test
ret
nop
push
loop
or
dec
or
aad
dec
in
inc
add
add
dec
push
clc
sub
cwtl
jl
jmp
sub
push
je
push
mov
dec
mov
lret
mov
and
mov
and
or
inc
xchg
jnp
push
add
out
jecxz
int
xchg
jle
mov
daa
pop
xchg
add
and
push
xor
jg
fnsave
xor
inc
mov
cld
repz
movsl
inc
stc
fldcw
loopne
fsubl
xchg
imul
pop
jns
inc
loope,pt
pop
aas
cmpsb
xchg
mov
insb
jbe
cltd
push
and
es
jecxz
xchg
fistpll
adcl
stos
mov
and
pushl
gs
out
cmp
jge
and
imul
cli
adc
push
mov
stos
cmp
mov
inc
inc
ljmp
add
fisttps
push
jmp
movsl
and
out
pop
roll
inc
cmpsb
insb
pop
cmpsb
sti
dec
rorl
push
in
push
mov
add
dec
scas
data16
fcoms
scas
push
mov
dec
mov
mov
mov
pop
jno
rorb
orl
test
push
daa
jns
xchg
popf
out
fldl
fcoms
outsb
pop
cmpsb
adc
bound
xchg
pop
insb
int3
push
jo
mov
jge
mov
js
push
cmp
sub
mov
inc
inc
xor
lea
push
adc
cmpsl
mov
pusha
lods
andl
push
sub
cltd
daa
add
inc
test
sub
xchg
sub
jp
xor
inc
dec
and
sub
stos
pop
test
add
lahf
ljmp
pop
or
push
lret
lahf
push
lahf
adc
mov
mov
dec
mov
rcrl
repz
daa
jbe
sub
in
test
sub
aaa
push
sti
xchg
xchg
push
and
or
js
imul
dec
jns
movsb
xchg
jns
cmp
xchg
adc
adc
dec
imul
popa
push
cmp
and
cltd
cmp
out
cmpsb
mov
jl
mov
mov
lock
push
in
in
and
lds
pop
outsl
push
test
mov
inc
inc
xchg
ds
stos
data16
cmpsl
out
pop
cmp
sub
icebp
adc
inc
jb
push
pusha
lods
gs
in
rcl
gs
mov
repz
pop
test
aas
xor
ja
and
xor
push
mov
cmpsb
pop
loope
mov
mov
sahf
stos
xchg
dec
out
in
jb
mov
es
movsb
inc
jmp
push
les
repz
shrl
xchg
xor
lods
cmp
imul
inc
int
es
aaa
lock
in
sbbb
mov
fadds
inc
dec
mov
push
and
sub
pop
push
fistps
cmp
fldl
cmp
jge
mov
jmp
subb
xor
mov
add
inc
outsl
jg
cli
out
enter
mov
jl
inc
dec
push
jb
repz
in
test
std
gs
xchg
push
pop
repnz
and
push
add
enter
insl
mov
dec
sti
pop
xchg
test
inc
pop
xor
insb
mov
push
addl
mov
or
and
xor
insb
test
pop
lods
sbb
cwtl
xor
inc
xor
fildll
sub
dec
mov
test
das
movsl
dec
push
mov
add
adc
popf
push
out
shrl
xor
sbb
mov
xor
daa
faddl
sarl
jno
cltd
loope
pop
movsl
add
or
mov
cld
fidivrs
push
jecxz
pop
and
xchg
add
cmp
jl
in
adc
adc
cwtl
xor
push
jnp
mov
lcall
or
jge
push
push
into
fsubl
pop
jge
and
xchg
test
les
loop
mov
scas
sbb
mov
fs
mov
adc
nop
xchg
js
jne
mov
imul
cs
fcomps
js
jp
out
in
cmp
pusha
add
sbb
cmp
sub
in
ud1
cmp
lret
and
add
and
sub
jae
loop
sbb
mov
dec
test
and
aas
add
ret
xor
das
shrl
rcrl
cwtl
inc
jl
jns
xchg
jb
lret
jbe
jno
pusha
cmpl
jb
notl
mov
push
jmp
push
mov
fsts
fcmovne
mov
inc
mov
lret
pop
cmpsl
xor
mov
test
ret
lahf
fcomip
jo
jno
inc
mov
sbb
xor
sbb
push
mov
mov
mov
popa
dec
xchg
pop
pusha
jno
out
mov
pop
inc
inc
adc
jg
mov
dec
movsb
fstpt
dec
xchg
mov
jmp
cmp
mov
xchg
roll
xchg
or
pop
push
mov
movb
repz
pusha
gs
fisttpl
ds
pop
adcb
popf
and
aas
mov
mov
repz
aam
and
jnp
scas
das
mov
mov
mov
jle
pop
rcrl
outsb
repz
sub
adc
mov
aam
push
jmp
nop
xor
sahf
loope
imulb
js
inc
out
fsubrs
or
das
cmp
inc
decl
imul
xchg
mov
orb
lock
and
jns
les
add
xchg
sbb
dec
lret
mov
subb
or
fisttpll
in
das
lret
test
stos
inc
mov
outsb
xlat
pushf
icebp
std
jp
add
outsl
out
mov
mov
repnz
jl
aas
sbb
lcall
addr16
sub
pop
inc
in
nop
xchg
out
add
roll
pop
rcrb
cmp
rcrl
popf
ret
push
fsts
mov
add
or
enter
or
pop
pop
sub
jne
or
sub
test
test
mov
push
rorb
test
rcll
mov
and
sbb
mov
js
fsubrs
push
out
pop
pop
sti
xchg
push
cmp
or
sub
fcoml
mov
mov
dec
repz
pushf
cli
xchg
adc
xor
xor
or
pop
mov
scas
sbb
sbb
pop
repz
sub
int
or
mov
into
or
cmc
sbb
fmul
imul
sub
inc
mov
dec
lock
test
mov
mov
int
dec
popf
sti
jmp
pop
into
js
push
arpl
popa
imul
clc
sbb
bound
dec
mov
stos
jnp
mov
push
add
outsl
cmpsb
stos
mov
lcall
cwtl
ret
dec
lods
xor
sbb
andl
adc
mov
out
je
lods
mov
pushf
enter
sub
jo
sbbb
fisubrl
out
dec
in
lock
loop
or
inc
idiv
icebp
je
faddl
mov
test
iret
pushf
roll
testb
call
cld
repnz
add
enter
sub
jnp
roll
mov
loopne
cmp
mov
dec
cmc
or
xlat
repnz
push
sahf
adc
dec
lret
xor
jmp
je
dec
mov
xchg
pushf
pop
je
mov
add
dec
xchg
pop
fildl
push
stc
and
daa
jb
sahf
sub
fs
sarb
sbb
pop
mov
adc
in
mov
or
repz
ljmp
cmp
shrb
je
mov
jae
movsb
int3
cmpsb
scas
test
and
xchg
bound
fidivrl
pop
aad
mov
je
leave
jl
adc
mov
shll
ds
push
daa
xor
mov
int3
push
mov
jmp
jl
xchg
in
adc
xor
mov
sub
xor
repz
subl
xorl
imul
or
lods
push
xor
stos
adcb
adc
jo
xor
pop
shlb
fcmovbe
es
scas
or
jge
sub
lret
mov
inc
xor
sahf
jb
sbb
jnp
lret
ds
jmp
divb
push
aaa
jne
popa
adc
loopne
xchg
popa
sub
pop
stos
test
sbb
jecxz
sbb
insl
js
test
lcall
stos
scas
lcall
mov
pop
push
jle
cli
mov
cmc
pop
shlb
push
inc
xor
aam
xchg
xchg
imul
popf
cmp
leave
sbb
jle
inc
mov
jp
add
ret
addr16
add
xchg
into
inc
jp
outsb
jae
adc
xor
lods
shlb
out
dec
jbe
pop
aad
mov
mov
inc
adcl
mov
out
mov
jno
gs
gs
mov
push
call
loope
stos
imul
loop
jae
jl
mov
mov
dec
push
mov
ret
aas
sbb
or
pop
push
add
sub
mov
nop
jp
jp
cmp
mov
insl
inc
je
daa
or
mov
out
inc
lcall
imul
inc
jg
xor
in
sbb
and
or
mov
jg
inc
stc
cmpsb
in
lahf
je
das
and
cmp
jl
scas
hlt
popa
xchg
cmp
es
outsl
in
adc
mov
mov
sub
push
popf
sbb
mov
jg
negl
mov
cmp
xor
cmp
sbb
nop
loop
fisubs
pop
test
add
add
jle
call
hlt
gs
adc
gs
or
adc
pop
jbe
scas
mov
imul
sbb
test
adc
in
mov
jno
scas
pop
dec
xor
pop
or
jbe
xor
push
scas
xchg
mov
jb
xor
fidivs
fwait
stos
aas
ljmp
bound
pop
cli
imul
mov
fstps
paddsb
adc
pop
test
xor
fstps
cmp
mov
mov
or
repz
and
jnp
mov
push
or
xchg
and
jns
fiaddl
loope
insl
jge
adc
mov
test
fcmovbe
cltd
xchg
jg
jne
in
xor
xor
fst
or
dec
push
or
push
or
add
gs
mov
push
mov
adc
sub
lods
jnp
mov
fmul
jge
inc
into
mov
xor
xor
adc
and
js
loop
or
mov
push
mov
sub
pop
xor
stos
sbb
les
or
test
xor
filds
xchg
xor
scas
adc
sub
cmc
push
pop
addr16
or
jmp
jbe
sub
adc
jns
pop
aas
std
push
jns
cs
mov
push
repnz
addb
push
cmp
xor
inc
fistl
repnz
aas
jb
push
ret
imul
jnp
loopne
mov
mov
or
cmp
cwtl
clc
fcoms
outsb
mov
sub
filds
out
cmp
cmp
xor
sbb
xchg
hlt
notl
in
aam
mov
xor
sbb
rcrb
push
mov
sub
jo
inc
mov
jl
jmp
test
and
inc
cmp
jle
pop
mov
mov
and
add
jmp
adc
add
es
mov
cmc
mov
cmc
test
push
hlt
xchg
pusha
popf
mov
mov
push
fsubrs
xchg
pop
lods
xor
sbb
inc
test
mov
xchg
adc
lods
mov
out
xor
dec
scas
cltd
sub
adc
sahf
adc
sbb
fwait
xchg
xchg
rcll
dec
rcrb
inc
int
imul
xchg
or
sub
ja
clc
loopne
push
lcall
lods
add
dec
insb
dec
ret
jo
pop
test
mov
je
adc
loope
add
or
divl
movsb
jle
es
sbb
test
stc
lods
and
mov
insb
push
dec
jge
mov
sub
inc
push
aaa
cmc
or
nop
sub
loopne
daa
xor
xor
pusha
aad
mov
ret
iret
xchg
mov
in
mov
add
gs
outsl
gs
xchg
fldcw
pop
pop
outsb
add
and
lret
aad
les
ja
fwait
mov
xor
or
cmp
and
lahf
and
pop
stos
iret
sub
mov
lret
pop
cmp
stos
and
fwait
push
mov
stos
fbstp
sbb
add
push
or
or
add
push
or
pop
addr16
push
repz
scas
ret
mov
mov
test
jl
stc
nop
addb
pop
mov
lds
adc
push
cmp
mov
inc
addl
xor
orl
adc
test
int
or
addb
mov
loop
mov
mov
ficoms
sbb
lods
jo
jle
bound
inc
add
adcl
cwtl
pop
or
pop
jb
inc
stos
aam
add
out
mov
imul
addr16
dec
push
jmp
es
and
cmpsl
or
iret
inc
push
loop
ja
repz
rorl
fnstsw
xor
mov
adc
add
pop
add
sub
sbb
push
or
shll
in
adc
out
add
cs
addl
dec
stc
mov
ljmp
cmp
inc
lods
les
mov
adc
divb
inc
cmp
mov
sbb
xchg
cmp
in
mov
dec
js
adc
les
repz
cltd
pop
jne
add
movsl
inc
fidivs
jns
push
pop
pushf
lret
mov
xor
pusha
add
js
xor
cltd
outsb
hlt
pop
jbe
sub
int3
xor
push
arpl
jns
gs
cwtl
aad
cmp
mov
cld
cld
jge
pop
jae
frstor
lods
pop
jb
insl
mov
sbb
sbb
inc
negb
add
scas
mov
mov
xor
push
test
xor
push
rcrl
mov
nop
xor
push
inc
das
sub
pop
inc
pop
xorps
ret
jmp
les
andb
jecxz
mov
jmp
xor
stos
mov
cmp
repnz
push
outsb
add
movsl
call
ret
subb
push
cmp
ret
pop
mov
in
sbb
sub
push
or
add
mov
mov
jmp
shlb
stos
scas
sbb
adc
aam
pop
pop
or
adc
addr16
cmc
mov
pushf
shr
movsb
fiaddl
ds
mov
insl
dec
mov
fbld
jo
scas
lahf
movsl
xchg
cltd
out
push
inc
cmc
xchg
xlat
or
stos
fbld
insl
call
mov
push
cmpsl
push
and
fisttpl
inc
std
ljmp
cmp
fnstsw
out
pop
xor
lahf
testl
lods
push
add
push
mov
es
sbb
dec
push
rorb
popa
int3
sarl
cmp
mov
sbb
addl
ret
sbb
or
mov
lret
rcr
pusha
push
adcb
ss
cs
jmp
in
jns
in
sbb
mov
adc
hlt
jg
out
mov
jnp
xchg
add
stos
dec
xchg
mov
lods
xchg
mov
out
scas
add
mov
outsb
dec
leave
movsb
mov
pop
xor
mov
shrl
mov
xchg
andl
shrb
adc
bound
mov
mov
out
gs
adcb
test
adc
aad
push
or
pop
cmp
pop
sti
adc
cmc
and
inc
dec
jbe
stos
jae
call
dec
cmc
fucomi
es
inc
lret
sahf
sub
mov
mov
fmulp
mov
mov
ret
sbb
jl
add
mov
add
lods
enter
je
pusha
lods
ror
and
enter
in
int3
push
pop
mov
push
pop
pop
lahf
cwtl
nop
dec
in
imull
daa
sbb
loope
inc
jae
push
insb
add
mov
xchg
gs
mov
test
dec
mov
mov
push
repnz
daa
out
cmpl
das
idivb
adc
inc
mov
insb
pop
clc
in
and
test
in
mov
cmp
jne
mov
test
mov
push
jmp
aad
lods
pop
sub
aaa
cmp
jle
ds
sbb
ds
sbb
roll
adc
inc
and
pop
jns
cmp
jle
ficoms
testl
mov
sahf
or
xor
xchg
ffreep
aaa
scas
dec
fidivrs
sbb
lret
adc
pusha
xchg
sub
je
lcall
cmp
test
call
inc
cltd
imull
dec
scas
mov
out
jns
popa
loopne
dec
subb
int3
pop
cld
inc
mov
jb
mov
lahf
lahf
push
jp
shlb
jns
and
std
sbbb
sub
inc
sub
movsl
xor
fistpl
or
gs
js
decl
mov
push
mov
sub
mov
cmpl
hlt
fcmovnb
or
push
sbb
fcmovbe
lahf
mov
jge
push
outsb
dec
xchg
and
cmp
out
push
and
jmp
insl
loop
out
out
xor
mov
into
lea
jo
ret
lds
js
jmp
mov
mov
add
lods
dec
add
push
inc
jne
outsb
xorl
jmp
mov
inc
loopne
push
aaa
jl
mov
dec
fsubrl
and
adc
sbb
sub
xchg
pop
xor
ljmp
or
and
dec
adc
adc
cltd
stc
dec
cmp
cmpsb
outsl
cmp
adc
arpl
cmp
jl
jmp
jo
cwtl
xor
out
addr16
add
int3
sar
jg
jne
cld
and
mov
loop
sbb
xor
into
mov
mov
fucomip
push
adc
mov
movsb
xorl
aam
data16
push
sbb
push
shlb
int3
or
test
mov
mov
sbb
cmp
mov
mov
adc
or
into
add
inc
mov
lods
dec
jl
test
push
lahf
adc
mov
cmpsb
mov
aad
je
test
cmp
es
fisttps
push
inc
fsubl
xor
or
dec
lock
or
xchg
stos
or
jne
ficomps
xchg
mov
mov
xor
mov
inc
icebp
arpl
nop
jns
gs
bound
outsb
movsb
mov
sar
nop
dec
cmp
jb
fisttpl
xchg
insl
add
leave
mov
mov
mov
pop
aad
mov
cmpsb
inc
jmp
test
adc
jo
xor
xchg
push
es
inc
cs
xchg
xchg
xchg
push
lods
sti
je
fldl
and
int
push
stos
mov
repz
movsl
popf
dec
cmp
jl
div
data16
adcl
jg
sbb
daa
push
adc
sbb
push
pop
out
xchg
fildl
sbb
loope
sbb
push
pop
sbb
jge
sbb
nop
fnstsw
xchg
mov
movl
dec
sbb
adc
push
jo
xor
and
pop
pop
xchg
xorl
pop
inc
or
inc
jl
sub
push
push
fdivrl
popl
pop
cli
cmp
jecxz
arpl
in
mov
out
sbb
lret
jne
cmc
pusha
mov
es
ds
mov
jns
leave
xchg
rorb
cmpsl
popf
jl
ret
jl
out
and
pushf
or
into
sar
push
sbb
fildll
ret
scas
sarl
jae
fucom
inc
movswl
movsb
sbb
nop
scas
std
sub
or
cmp
insb
in
xchg
add
repnz
ds
fidivrs
mov
repnz
cld
andl
fdivl
cmp
pusha
mov
pushl
dec
mov
fwait
or
idivb
xor
or
lret
dec
jbe
stc
imul
cli
jae
push
jle
pop
movsb
ja
dec
cli
and
jns
in
movb
iret
adcb
mov
jl
movsb
roll
inc
lods
notb
les
adc
inc
call
xchg
call
fildl
jb
push
jle
mov
cmpsb
lret
inc
inc
sti
adc
cmpsb
inc
jnp
jecxz
cmp
mov
aad
push
mov
scas
subl
ljmp
pop
addps
fcomi
ret
and
bound
xchg
sub
test
dec
out
push
je
outsl
cmp
xor
and
and
test
xchg
std
and
jno
stos
mov
sahf
add
inc
jo
int
push
mov
test
ret
cs
aaa
jge
and
pop
ljmp
testl
sbb
out
in
stos
sub
cmpsl
jb
daa
lret
in
mov
mov
stc
mov
shll
sub
fistl
sbb
rorb
jnp
cmp
mov
in
sarb
ljmp
xchg
sub
iret
cmc
sub
and
cs
push
lods
lret
icebp
lahf
push
xor
adc
cmp
add
add
mov
mov
jnp
iret
mov
adc
inc
mov
mov
push
clc
push
jno
cltd
add
cmp
adc
or
sbb
insl
mov
fwait
into
mov
insb
mov
fs
int
add
ss
dec
shll
xor
bound
inc
mov
or
inc
out
jo
test
mov
out
inc
jge
ror
push
jge
pop
dec
adc
loopew
mov
inc
push
fwait
mov
adc
cmc
mov
add
jo
or
mov
lret
jb
stos
push
pop
mov
sbb
sub
mov
cmp
cmpsb
xchg
leave
loope
cmpsb
xchg
fisubs
push
jnp
or
jg
js
daa
fstpt
add
jns
mov
sti
cmp
repnz
loope
ret
and
mov
arpl
push
inc
add
fcomi
imul
fcompl
pxor
mov
jl
add
and
pop
add
test
das
cmp
fwait
in
insl
jne
out
mov
lret
sbb
out
xor
push
jecxz
popa
sbb
push
subl
or
cld
mov
mov
ret
sbb
leave
fnstenv
mov
jge
and
cwtl
outsl
xor
out
mov
cs
xor
loope
lret
add
test
inc
scas
jns
inc
dec
pop
test
jge
bound
inc
adc
cmpsl
daa
mov
mov
add
stos
inc
xor
ret
inc
add
repz
hlt
mov
pop
popf
sub
aas
cmp
sbb
push
daa
insl
mov
cli
jae
mov
lods
mov
mov
mov
sti
sub
insl
mov
mov
stos
push
inc
loop
xor
rorl
hlt
std
sbb
int3
push
outsb
mov
ret
and
adc
fwait
jg
or
dec
outsb
mov
xchg
clc
mov
inc
je
jnp
jg
fisubrs
adc
dec
xchg
adc
pushf
dec
out
jae
jne
out
mov
aas
hlt
lock
cmp
shl
pop
pop
mov
mov
xlat
fcmovnbe
pop
xchg
sbb
jp
mov
push
aaa
adc
mov
das
push
jp
cmp
cmc
xorl
insb
lods
pop
or
jp
inc
dec
pop
lods
ljmp
mov
enter
dec
add
ret
fdivl
out
push
xor
iret
jnp
je
imul
adc
xchg
jnp
lock
shl
cs
cmc
mov
enter
inc
sbb
jno
cmp
jecxz
scas
leave
es
jecxz
fucomi
inc
or
and
out
pushf
xchg
dec
into
mov
cmpsb
aaa
js
and
pushf
mov
sti
xchg
popl
shl
cmc
arpl
lcall
xchg
cmp
lock
cmpl
ret
jmp
mov
or
insl
test
cli
push
mov
cmp
jbe
jmp
ret
pop
xchg
pop
imul
pop
movsl
adc
xlat
and
orb
push
cltd
jns
div
sbb
dec
scas
mov
std
jno
adc
cmp
imul
dec
push
or
fmul
cmp
movsb
xchg
in
lea
mov
addr16
push
add
cmp
lret
std
jo
fnstsw
cmpsb
test
lea
ret
xchg
dec
int3
aas
and
sbb
test
mov
call
mov
mov
mov
sub
or
mov
ret
xchg
mov
daa
sbb
dec
lock
dec
jnp
clc
jae
es
mov
dec
test
ja
jge
push
aas
mov
lcall
movl
test
dec
stc
fdivp
lcall
out
movl
adc
pop
rcl
pusha
inc
xchg
mov
jp
dec
in
test
mov
pop
scas
mov
in
and
mov
aam
dec
jno
in
jge
and
call
scas
jno
push
out
les
dec
mov
mov
aam
into
int3
jb
push
jecxz,pt
jae
jne
inc
dec
inc
mov
dec
pop
popa
repz
loopne
jbe
pop
test
pop
enter
rcrl
mov
mov
push
mov
movsl
jbe
leave
inc
mov
aas
mov
icebp
xchg
xor
jge
xor
push
mov
sbb
and
mov
push
or
cltd
mov
add
inc
addr16
mov
arpl
xor
xchg
sub
addr16
fstpt
gs
jae
dec
aam
adcb
outsb
rcll
fbld
mov
sbb
xchg
jle
and
fdivrs
nop
sbb
in
fsubrl
in
mov
jmp
or
or
shll
jno
fs
sub
mov
push
sbb
addl
lea
loopne
jo
xchg
shrl
fs
dec
rcl
jg
pop
daa
out
into
dec
jnp
outsb
and
stos
aam
dec
cmp
clc
fldenv
hlt
cmc
and
lret
add
into
jmp
sbb
fsts
pushf
lds
sub
jmp
and
mov
test
shll
pop
lahf
lea
pop
popfw
jbe
cmc
cli
mov
hlt
pop
push
push
arpl
mov
data16
sbb
push
out
gs
aaa
mov
or
inc
add
xor
jns
popa
dec
mov
pop
gs
in
xor
sarb
push
adc
jne
pop
dec
jae
dec
mov
xchg
add
stos
push
cmc
hlt
adc
das
xor
push
rorb
mov
inc
push
cmp
jnp
push
cmp
das
fs
dec
push
adc
push
add
push
or
pusha
xchg
into
in
mov
pushf
mov
js
mov
ret
push
sub
jo
loope
in
ret
add
popa
popa
rorl
mov
aas
fidivs
in
mov
push
add
xor
adc
dec
icebp
xchg
inc
test
inc
daa
push
loop
pop
lret
clc
mov
test
cmp
nop
xchg
mov
jle
insl
dec
mov
imul
movups
sub
jle
mov
pop
cwtl
jae
lods
lret
fisubl
jl
and
insl
jmp
push
mov
shlb
dec
shl
jnp
into
bound
fidivrl
test
or
mov
stos
dec
cmc
pop
repz
jl
in
lret
rcll
test
xor
test
adc
jecxz
xor
fs
inc
push
mov
arpl
add
xor
icebp
int3
or
mov
addb
push
xor
inc
pop
mov
fsubrs
push
in
bt
sub
push
stos
sbb
and
lds
push
push
loope
jge
mov
pop
push
test
xor
insb
pop
pop
mov
stos
xor
sub
test
or
jmp
inc
xor
cld
mov
hlt
call
sub
dec
clc
cmp
call
xchg
mov
ret
inc
push
mov
shrl
fstl
sbbb
orl
nop
xchg
scas
sarb
jnp
cmc
jg
and
repnz
lods
aas
aad
mov
aaa
cmp
push
add
xchg
scas
pop
mov
rcl
icebp
fidivrs
mov
rcl
lods
mov
inc
in
adc
push
dec
das
mov
and
or
verr
lock
inc
jle
xchg
in
xchg
cmpsb
jmp
in
pusha
sbb
push
andl
jl,pn
ret
push
lcall
jp
das
mov
and
and
stc
push
add
add
or
dec
mov
mov
and
dec
imul
pop
mov
pop
lea
imul
mov
ds
ss
sub
movsl
cmp
add
jp
push
jbe
mov
add
ss
push
or
push
ret
or
fnstcw
mov
push
or
es
out
push
cmp
scas
xchg
push
and
sub
stc
and
dec
fadds
xor
mov
test
les
jno
sti
lds
orb
xchg
inc
imul
mov
out
cmp
push
andb
and
jo
popf
push
call
pop
sti
sub
adc
jecxz
cwtl
mov
movsl
xchg
inc
aaa
mov
aas
test
inc
subb
shrd
iret
dec
and
imul
das
dec
cwtl
mov
jo
mov
rcr
imul
mov
out
in
sbb
jecxz
mov
xchg
ljmp
inc
add
repnz
dec
dec
out
movsl
xchg
ror
lods
rolb
push
push
data16
out
mov
subl
jb
out
loope
andb
add
ret
mov
mov
out
sbb
sbb
xchg
jb
pushf
jecxz
adc
or
xor
xor
cwtl
inc
insl
lahf
int3
pusha
scas
sub
sub
ret
loop
cld
and
stos
icebp
ret
mov
push
jmp
mov
pop
xor
mov
inc
or
call
out
sub
lea
jnp
dec
cmp
add
and
push
aad
jle
jo
sub
leave
mov
mov
data16
adc
scas
jns
inc
xor
inc
sub
imul
mov
pop
inc
aas
jbe
add
adc
or
adc
andb
sub
xor
cmc
jg
addr16
jle
push
pop
push
es
add
popf
inc
dec
pusha
cmpsl
std
cwtl
jecxz
xor
pop
mov
push
packsswb
xor
xchg
gs
into
jb
imul
test
or
pop
cs
pop
jg
jo
je
je
movsl
xchg
xor
adc
dec
jb
cmp
mov
push
aas
add
mov
cld
push
mov
xor
mov
insl
lds
ret
sbb
inc
dec
imul
inc
pop
movsl
lods
shl
cmpsl
bound
or
subl
xchg
aas
mov
ds
lods
int3
adc
cmpsb
mov
js
dec
mov
add
insl
xor
shll
fistl
add
mov
ror
shlb
pop
push
cs
aas
sbb
push
push
data16
lods
push
mov
stc
addr16
mov
cwtl
ja
xor
xchg
push
add
xchg
mov
pushf
je
nop
repnz
sahf
mov
jp
popf
sbb
jmp
and
mov
fmul
mov
adc
sbb
pusha
cmp
or
jg
ljmp
pop
sub
out
push
insl
mov
clc
repz
jl
mov
xchg
mov
add
xor
push
jns
fs
inc
dec
int3
popa
pop
add
push
xchg
cmp
inc
shrb
test
push
lods
cmpl
dec
das
enter
push
push
scas
inc
xchg
mov
mov
push
fucomip
ja
aam
mov
sarb
fiadds
xor
subl
mov
int
filds
jne
test
xchg
pop
test
mov
repnz
popa
xlat
loop
dec
shlb
sbb
fwait
add
xor
mov
repnz
pusha
fstl
bnd
xor
pop
pop
jge
test
add
insb
ret
loop
mov
fcmove
or
fisubrl
jecxz
pop
aas
adc
xchg
pop
cmp
mov
jno
and
add
stc
xchg
loop
addr16
lods
xorb
jo
vpsubq
mov
insb
scas
ret
push
movsl
stos
loope
adc
into
add
in
jne
pop
es
sbb
push
imul
gs
out
imulb
leave
sub
fmuls
dec
xchg
pop
aaa
jg
or
sub
xor
xchg
xchg
jg
fidivl
push
mov
ret
adc
jle
test
and
loopne
cmpsb
or
cld
xchg
arpl
test
dec
mov
sbb
adc
sub
enter
gs
icebp
leave
leave
xor
push
jl
stos
psubsw
test
and
loope
repz
test
xchg
aas
push
pop
adc
in
loop
jg
sbb
aaa
mov
out
in
mov
cmp
jno
mov
and
mov
inc
insl
pusha
sbb
fsubrp
and
sub
adc
ret
push
sub
ficomps
adc
outsl
xlat
rclb
stos
push
jns
inc
and
shrl
das
jle
mov
call
jns
ror
mov
int
jae
mov
stos
arpl
dec
movsb
outsl
or
fwait
mov
insb
repz
sbb
mov
les
cmp
add
xchg
data16
fwait
adc
xor
pop
inc
popa
rcrl
clc
jns
jl
or
push
push
lret
arpl
bound
cmp
pop
jbe
ja
out
das
xchg
fnstsw
mov
dec
lods
dec
pop
pushf
or
das
adc
cmp
or
pop
mov
lcall
adc
test
mov
out
push
clc
test
mov
cli
adc
ljmp
pop
lods
pop
inc
loope
dec
and
cs
js
and
cmpsb
daa
in
cmp
mov
cmp
mov
popf
push
mov
movsb
rcrl
aad
mov
dec
inc
gs
fnstsw
mov
mov
inc
repnz
imul
pop
cmpsb
enter
test
add
or
rcrb
in
dec
insb
xor
sub
jne
xor
add
mull
dec
shrb
pop
cmp
enter
mov
sub
lods
js
add
fstp
sub
iret
out
nop
mov
loop
cmpsb
iret
mov
sar
xor
int
pop
cwtl
lods
repz
adc
movsl
es
fnsave
lods
push
ret
cmp
shll
push
loope
mov
cmpsb
fbstp
adc
rcrb
insb
xchg
xchg
outsl
in
xchg
push
mov
jcxz
xchg
push
scas
jg
jle
or
xor
stos
inc
xlat
inc
add
dec
aas
mov
mov
add
daa
shll
pop
mov
xchg
fists
adc
push
int
arpl
pop
jge
lcall
inc
xchg
aas
push
xchg
xchg
pop
stos
aad
pop
and
jg
stos
leave
bound
out
jne
das
rcrl
nop
inc
addr16
adc
orl
seta
fneni(8087
and
orb
inc
repnz
jg
push
mov
ljmp
xchg
repnz
outsl
push
es
lcall
cmp
cmp
leave
mov
repnz
mov
pop
aaa
fcmove
cmp
aad
mov
cltd
out
cmpsb
out
call
inc
scas
sub
pop
jg
or
hlt
in
aaa
mov
cltd
cmpsb
shl
push
push
mov
pop
add
cld
cwtl
and
enter
ljmp
leave
mov
fisttps
ret
and
mov
adc
iret
out
push
lods
lock
cmc
ss
dec
mov
mov
divl
pop
push
out
loopne
jl
inc
xor
jb
sbb
sub
pop
mov
xchg
inc
popf
pop
jl
dec
fmull
add
or
mov
adc
das
jno
and
insb
aaa
and
xlat
icebp
loopne
lret
pop
and
and
stc
cli
je
and
inc
sbb
pop
cmc
mov
adc
or
sub
movb
ja
sbb
sub
shrl
dec
ss
arpl
out
loope
adc
jp
sbb
loop
adc
pop
mov
lcall
inc
cmp
adc
ss
out
cmp
xchg
dec
pop
cmp
sub
imul
cmp
cmpb
and
flds
nopl
fisttpll
jp
test
add
sbb
xchg
sub
jnp
mov
fists
cmc
jmp
hlt
dec
sbb
arpl
mov
adc
cmpsb
icebp
scas
push
cld
jg
mov
lods
fiadds
jmp
jnp
add
sbb
xor
fcomps
ret
mov
ds
push
in
cmp
arpl
bound
arpl
cmc
jb
lret
adc
in
push
pop
insl
lret
loop
mov
dec
aam
xor
je
push
xor
nop
cltd
pop
call
cmpsb
aam
cli
je
dec
mull
add
cmp
jbe
shrb
mov
shrl
dec
push
mov
sbb
xchg
mov
ficompl
ja
pop
push
movsb
sub
add
fcompl
sub
shlb
push
jns
inc
push
sub
mov
and
dec
adc
sbb
jmp
cmpsb
jp
or
add
cwtl
idivb
nop
mov
sub
call
lods
cmpsb
inc
mov
scas
les
sti
bound
mov
cwtl
cltd
cmc
push
in
sub
lds
pusha
cwtl
call
or
sbb
mov
lock
imul
cmp
test
dec
jmp
sbb
pop
test
pop
test
inc
jl
testl
in
cli
dec
test
push
dec
pop
dec
lods
mov
sub
ficomps
pop
mull
loopne
xorl
je
xor
adc
push
rcr
lea
xchg
sub
jl
ror
add
data16
push
mov
or
xchg
jne
dec
mov
jmp
mov
fsubr
out
add
insl
clc
mov
mov
out
add
pusha
es
dec
or
enter
lods
pop
mov
pusha
popf
adc
loop
or
lcall
enter
mov
movb
mov
jl
lahf
stos
adc
enter
negl
inc
xchg
ret
les
pop
sarl
sti
cltd
or
es
jmp
lds
adc
aas
add
popl
sar
cs
bound
test
movsb
inc
adc
xor
movsl
scas
jae
dec
movsl
adc
movsb
divb
sub
sbb
jl
xchg
jns
shll
les
shlb
mov
sbb
stos
in
mov
sub
jmp
sbb
rcll
popa
push
xor
jbe
sar
ret
dec
or
dec
insl
push
inc
xor
pushf
dec
xor
lods
hlt
adc
cli
popa
bound
sub
adc
outsb
sbb
sub
ret
in
adc
fcompp
fcomp
inc
iret
nop
xor
or
pop
je
sbb
aas
xor
pusha
lret
push
dec
push
adc
out
mov
pop
inc
stos
or
lret
dec
push
test
jb
outsl
sub
jae
sub
inc
std
shlb
xchg
stc
pop
lds
pop
jmp
addr16
pop
dec
mov
das
mov
std
test
pop
cltd
and
sbb
cltd
addb
sub
out
cltd
inc
lcall
and
xchg
or
mov
add
pushf
mov
in
repnz
es
repz
jb
xchg
loop
xor
push
insb
pop
in
fisttpl
sbb
es
pop
mov
pop
or
cmpsb
into
jge
mov
dec
mov
inc
movsb
inc
in
ret
xchg
cmp
aas
xchg
xchg
hlt
outsb
loop
xchg
std
cs
mov
ret
mov
repz
insb
and
jnp
out
mov
cmp
jp
inc
lahf
fs
fcompl
push
mov
bound
jo
rorb
xor
aam
in
lcall
xchg
loope
and
jecxz
addl
adc
pmulhw
adc
xor
mov
cli
addl
mov
rcr
sbb
adc
repnz
int3
jno
fldt
push
gs
or
mov
outsb
mov
rcl
jae
pop
lods
sbb
sbb
lods
jne
fs
and
jecxz
cmpsb
pop
daa
sti
push
jne
sahf
aam
mov
sub
rcrb
mov
dec
xchg
scas
push
mov
jno
or
inc
dec
repz
jns
ss
ret
inc
sbb
xchg
mov
dec
std
in
mov
adc
cmp
mov
xor
cmpb
aaa
leave
and
shrl
add
das
cltd
push
add
stos
xor
pop
cmp
pushaw
sahf
insb
fmul
and
mov
call
lods
dec
test
outsb
inc
je
sbb
call
aaa
jnp
imul
cmp
jbe
inc
xchg
shlb
mov
and
stos
add
ficoml
mov
pop
out
or
cmpsl
or
push
sbb
xor
in
and
insl
in
xchg
fwait
push
outsl
iret
inc
dec
or
mov
movsb
mov
lds
xor
mov
and
pop
or
mov
xor
xchg
add
xor
loope
cwtl
and
shr
pusha
aad
mov
jle
jmp
xor
movsb
push
push
or
jbe
aaa
pop
xchg
hlt
jl
lea
test
and
sub
mov
mov
inc
fnstenv
hlt
or
xor
inc
rolb
ja
enter
xor
and
jae
mov
xor
out
jnp
sub
and
maxps
sbb
outsb
sbb
stos
pop
pop
lret
or
dec
cmp
mov
ret
addr16
pop
cld
fwait
pop
pop
pop
outsb
loopne
out
pop
cmp
sbb
getsec
push
test
aam
add
pop
xor
das
push
mov
rcrb
in
adc
cs
into
stos
nop
jbe
xchg
xchg
and
outsl
stc
ss
das
and
xor
mov
mov
fsubrs
jno
push
aaa
jg
ja,pt
dec
and
sbb
add
daa
cwtl
call
sub
pushf
dec
int3
and
imul
pop
addr16
jl
sbb
movsl
cmpsl
out
cli
push
jg
mov
mov
shrb
cld
mov
push
inc
inc
push
rorl
hlt
sahf
xchg
or
xchg
pop
aas
pop
ds
mov
je
loopne
ljmp
xor
fucomip
inc
dec
xchg
shll
push
popa
cmp
sti
jl
add
mov
out
pop
add
xor
xchg
cmp
mov
xorl
fsubl
popa
and
popa
cmp
gs
pop
fsubrs
xchg
and
dec
and
add
inc
mov
inc
test
mov
inc
insw
xchg
cmp
xchg
and
lods
int
fisubs
push
sub
ljmp
ss
push
addb
mov
mov
cmp
adc
cmp
andl
mov
fwait
sbb
les
cmpsl
scas
xor
jmp
test
jle
mov
sti
push
aas
or
cmp
hlt
push
inc
das
jecxz
fistpl
cmpsb
daa
notb
pop
inc
cmpsb
pop
cmp
jg
jp
xchg
jg
subb
and
ds
movsl
pop
xorl
add
je
std
pusha
adc
test
fstl
inc
mov
xchg
arpl
test
into
jae
shrl
inc
lods
dec
cwtl
cmc
xchg
jmp
mov
pop
imul
popa
loop
lret
decb
mov
pop
into
lret
std
mov
int3
xor
mov
push
sbb
mov
loopne
jnp
push
push
cltd
push
imul
jp
loop
add
adc
xor
addl
jns
int
imul
fstpt
outsl
sti
stc
mov
dec
ret
cmp
jns
cmpsb
call
push
fs
jno
sub
dec
cmp
dec
dec
les
adc
sbb
jp
inc
jno
loop
inc
xor
xchg
gs
pextrw
insb
xchg
mov
inc
lea
rolb
popf
mov
add
int3
out
pop
mov
inc
adc
mov
cmp
fimull
bnd
lcall
push
mov
xor
dec
loopne
addl
inc
test
mov
popf
rorb
addr16
scas
push
jmp
hlt
test
jae
and
int
push
add
cmp
xchg
mov
jmp
imul
xor
inc
inc
lods
sub
adc
ret
testl
jmp
lods
sbb
mov
das
daa
lods
push
fildll
or
xchg
add
out
cmp
in
xor
pushf
sbb
shll
xlat
ja
gs
dec
sbb
fiaddl
xchg
push
dec
out
cmp
clc
fnsave
cmp
jl
dec
into
arpl
movsb
push
int3
and
dec
dec
call
addr16
mov
pop
mov
sub
jnp
inc
loope
push
pop
adc
xor
jne
xorb
insb
pop
sbb
nop
daa
das
adc
decb
jecxz
and
ljmp
inc
jb
and
push
and
add
lret
mov
stos
jmp
in
pop
mov
mov
out
add
dec
pop
rcrl
xchg
push
cmp
push
bound
fcoms
int3
lret
xor
scas
pop
in
fstl
add
loope
pop
mov
repnz
test
test
xor
pop
mov
enter
idiv
cltd
push
push
jp
lock
cmp
fxch
sbb
arpl
repnz
xchg
inc
movsl
andb
enter
jecxz
inc
gs
addr16
sahf
dec
fldt
iret
sub
xor
imul
out
cmp
cwtl
rcll
sbb
insb
lods
jo
jg
cmp
and
push
mov
sub
mov
shll
shll
mov
stos
cmp
fcmove
jb
mov
inc
imul
popa
enter
dec
or
push
jns
xor
jno
cs
je
push
into
mov
jl
xor
mov
icebp
je
clc
xor
and
movsl
dec
imul
popf
shl
mov
icebp
int
movsb
scas
mov
call
xor
cmpsb
mov
js
fldt
es
cmp
cmp
jecxz
ds
jo
in
inc
xor
add
cwtl
nop
data16
jae
cmp
mov
and
js
mov
push
sahf
stos
add
ret
or
mov
jl
icebp
xor
scas
push
cmp
mov
sarl
add
xlat
icebp
shlb
mov
mov
adc
jle
dec
aam
roll
xor
aam
or
test
pop
pop
sub
pop
in
adc
adc
outsb
pop
icebp
sbb
lods
mov
test
and
aad
pop
inc
in
test
inc
iret
lret
jo
dec
inc
or
lcall
inc
mov
mov
adc
movsb
add
push
add
mov
pop
jae
dec
mov
fs
and
frstor
out
and
pop
jo
pushf
mov
mov
jae
inc
insb
dec
enter
loopne
repz
adc
mov
add
fincstp
and
xchg
mov
gs
mov
stos
insl
ja
pop
lods
hlt
add
in
cmpb
inc
rolb
rcr
xchg
arpl
outsb
or
leave
and
popf
popa
mov
jge
push
gs
enter
je
aad
das
inc
es
cmp
nop
mov
or
icebp
stc
js
addr16
pop
add
repz
mov
lock
iret
push
loope
daa
add
addl
addr16
shl
ret
pop
insl
xchg
mov
das
lods
push
or
insb
jp
adc
daa
in
cwtl
popf
imul
les
lret
aam
sub
rcr
or
mov
mov
push
aad
lret
or
ficoml
sar
mov
sub
cmp
mov
jb
stos
inc
sbb
lcall
sarl
adc
pop
mov
xchg
or
jg
cli
cmpsl
add
addr16
test
add
xchg
test
loope
pop
sub
pop
enter
dec
pop
push
clc
pop
cmp
stc
call
xchg
icebp
int3
lods
rorl
fwait
call
mov
mov
into
sbb
test
and
fisubrl
sbb
aam
aad
sub
sub
pop
jbe
cli
rcrl
adc
ljmp
scas
iret
pop
lock
negb
insl
adc
test
in
cwtl
mov
fimull
xorl
nop
mov
mov
lret
jp
lret
pop
push
mov
das
and
xchg
clc
test
sbb
fldenv
mov
in
mov
stos
into
or
imul
movsb
shr
cld
xchg
and
ud0
mov
test
xchg
sahf
jge
clc
mov
dec
loope
enter
iret
test
int
sub
idivb
fs
fcoml
pop
aaa
cmp
scas
xor
out
ss
in
fdivs
xlat
push
adc
jecxz
out
loopne
popf
mov
or
jle
push
and
pop
inc
jge
sub
and
ljmp
ds
and
and
or
mov
inc
pop
mov
arpl
addr16
sarl
pop
mov
jno
dec
rorb
mov
add
hlt
xchg
add
stc
cmp
push
push
or
shl
pop
out
fiaddl
pop
std
inc
pop
mov
jge
mov
daa
pushf
mov
loope
enter
les
xor
or
roll
xchg
add
push
roll
push
mov
shl
xchg
insb
movl
lahf
sbb
push
adc
insb
add
push
push
dec
or
rorb
shl
bndldx
push
jle
xchg
scas
shl
scas
sbb
jp
sub
push
push
pop
ret
mov
push
inc
and
icebp
jnp
jo
rcll
ljmp
cmp
pop
popf
fildll
imul
mov
fwait
pcmpgtb
aaa
aaa
mov
imul
lret
and
into
add
sub
cmpsb
push
dec
frstor
inc
movsb
ja
flds
add
fiaddl
enter
lock
mov
or
pop
xchg
stos
gs
fnstenv
lea
lcall
dec
push
sbb
mov
push
cmp
add
push
popf
or
and
cs
lcall
inc
or
f2xm1
sti
int3
cmc
or
loope
scas
icebp
test
pushf
insb
dec
mov
in
mov
dec
jbe
sbb
shll
cmc
jo
hlt
aas
test
xor
sbb
mov
add
insb
push
dec
sahf
int3
fstp
dec
mov
sbb
js
add
adc
adc
pop
mov
jle
or
idiv
icebp
ret
sti
cli
sbb
or
inc
mov
adc
aad
push
xchg
push
xor
lods
in
mov
repz
pop
imul
mov
shlb
pop
das
push
push
cli
adc
push
rolb
dec
add
pop
into
cmpsl
sub
or
lret
imul
add
fadd
push
cmp
jecxz
pop
rcrb
xchg
imul
lcall
cmpsb
jmp
mov
sub
and
sbb
loopne
je
xor
dec
mov
pusha
gs
pop
insl
lds
jge
lock
sbb
jecxz
popf
add
fwait
pushf
mov
mov
test
xor
loopne
mov
mov
icebp
loope
mov
test
test
xor
mov
and
xor
sub
std
pop
xchg
out
popa
sub
pop
sbb
movsl
and
fcoms
es
fistpl
lret
pop
scas
mov
popa
or
inc
inc
push
jl
out
mov
pop
cmp
ucomiss
jno
jle
cmp
scas
xchg
or
jnp
hlt
mov
push
mov
jp
dec
xchg
adc
ds
sub
xchg
bound
sub
mov
pop
mov
mov
adc
and
xor
and
int3
jns
mov
xchg
sarl
fwait
push
dec
or
sub
loopne
jp
sub
out
pop
sbbb
mov
mov
jno
jne
das
loop
add
jo
sti
mov
leave
inc
add
and
cltd
js
pushl
inc
xlat
pop
or
pop
stos
pop
jo
outsl
add
mov
int3
pop
rorl
test
xor
ret
out
mov
jecxz
cmp
adc
loope
insl
xchg
pop
jno
jge,pt
or
pop
adc
cmpsl
xchg
movsl
or
pop
mov
dec
dec
das
mov
xor
xor
lahf
lods
push
cmpsl
into
pop
pop
push
mulb
push
xchg
dec
test
and
add
out
adc
inc
mull
test
jmp
int
dec
mov
sbb
lods
dec
enter
cli
jne
and
je
push
xchg
sub
test
inc
repz
into
push
or
shlb
xchg
sbb
and
inc
and
cmp
push
push
hlt
leave
aas
clc
dec
dec
sbb
push
shll
jl
or
mov
xor
jg
stos
pop
cmp
and
in
push
cmp
sahf
cmc
and
cmpsl
loopne
and
rcl
adc
mov
loope
jl
lock
or
jecxz
push
push
mov
sbb
fstl
test
dec
bound
xchg
sbb
lcall
sbb
mov
andl
pop
repz
daa
xor
or
rcrl
nop
dec
xor
sub
pop
ljmp
cmpl
ds
aas
pop
aas
mov
pop
out
sbbb
cli
lea
repnz
cli
sarl
inc
leave
aas
data16
mov
and
add
mov
pop
jle
xchg
lfs
sub
sub
scas
ss
mov
faddl
clc
loope
mov
call
popf
sub
sbb
ret
mov
cs
cwtl
push
mov
mov
or
pop
movsb
pop
repnz
adc
pop
pop
mov
jne
daa
cltd
int
dec
sbb
test
fsubrs
sub
pop
mov
dec
add
mov
mov
cmpsb
testl
popa
aam
xchg
jo
push
cld
iret
scas
out
int
loope
adc
mov
dec
and
cmpsl
inc
xchg
cmp
stc
sub
fs
mov
mov
loopne
mov
rolb
sarb
or
adc
dec
jbe
mov
add
xchg
push
popf
or
in
fwait
xor
stos
out
outsb
cmc
mov
es
ljmp
repz
ds
xor
add
in
out
into
cs
ret
mov
jne
mov
imulb
and
add
jecxz
pop
mov
hlt
test
fwait
clc
jnp
jne
aas
xor
dec
sbb
cmc
and
movsb
movb
xchg
movsl
pop
roll
es
repnz
xchg
push
pop
iret
cltd
xchg
js
inc
fiaddl
jg
lahf
mov
xchg
test
push
lock
leave
test
incb
xchg
in
popa
mov
je
stc
sbbb
test
stos
add
push
cmp
and
shll
adc
cmc
or
mov
dec
into
cmp
addr16
data16
test
cwtl
loopne
call
fstps
pusha
in
cmc
xchg
out
jp
gs
jle
icebp
popf
addb
or
addr16
xchg
mov
ret
adc
xchg
push
aam
jo
call
cld
inc
add
fndisi(8087
fs
sbb
in
cmp
icebp
xor
outsl
jmp
mov
jmp
mov
into
cmp
pop
adc
and
jge
das
aaa
fidivrs
pop
int3
adc
das
clc
popf
adc
das
xlat
or
mov
mov
popa
lock
mov
dec
pop
xor
aam
popf
sbb
out
inc
xor
in
mov
enter
add
repz
mov
je
sbbl
xor
int3
jns
lds
mov
or
push
dec
lds
lret
scas
es
jbe
popf
insl
fs
cltd
ret
roll
or
jl
or
add
mov
pop
es
xchg
or
pop
les
mov
pop
aam
xlat
push
xor
add
add
loopne
call
push
and
or
add
je
dec
push
xor
adc
imul
addr16
xchg
inc
ds
xor
or
mov
adc
xlat
jae
mov
out
stos
xorb
dec
xchg
js
xchg
flds
rcrb
out
lods
pop
repz
xchg
mov
push
add
push
xchg
in
addr16
icebp
fldcw
pop
lds
xchg
das
and
sti
lcall
arpl
xchg
je
mov
and
loope
sbb
test
mov
in
mov
cs
testl
adc
add
dec
jge,pn
leave
pop
js
stos
repz
movsb
bnd
mov
mov
jns
adc
ds
xlat
xor
inc
lahf
mov
gs
icebp
loop
pushl
dec
test
add
push
mov
fbstp
xor
lods
sarb
jp
negl
lret
cs
frstor
sti
adc
hlt
dec
insl
push
add
int3
clc
and
ret
movsb
ror
add
aaa
fwait
and
mov
inc
pop
adc
icebp
push
and
sbb
cmp
mov
cmp
cmc
or
outsl
scas
and
inc
js
rcll
push
call
les
adc
out
sbb
shrl
pop
xor
push
test
inc
pop
xchg
cmp
mov
inc
cmpsb
jb
test
ljmp
xchg
cwtl
repz
mov
mov
dec
paddusw
mov
and
fmul
cld
in
std
mov
add
lahf
insl
mull
subl
mov
adc
and
mov
xor
and
xor
inc
sbb
mov
mov
push
lods
xor
insl
cmp
jne
cmp
dec
adcb
push
or
negl
jl
insl
dec
nop
mov
leave
sbb
mov
fists
sbb
and
dec
push
mov
stos
xor
inc
in
adc
hlt
push
sbb
mov
ljmp
pop
xor
inc
xor
jne
test
pusha
es
dec
ds
pop
jmp
stos
add
and
cs
mov
push
mov
adc
and
das
aaa
sbb
enter
xchg
fsubl
enter
mov
fwait
mov
push
xor
adc
pop
push
data16
cmc
mov
mov
inc
loopne
into
es
push
push
jae
add
mov
dec
leave
mov
ds
xchg
scas
shrl
fwait
dec
cmc
push
add
imul
add
ds
movsb
or
outsl
popa
and
outsb
int
ret
sahf
sarl
jne
in
push
ret
fs
or
mov
je
or
call
push
mov
mov
sub
push
adc
mov
push
add
push
pop
clc
jmp
sbb
add
lcall
mov
mov
sub
inc
add
push
mov
inc
mov
push
mov
mov
xchg
popf
and
je
repz
mov
xchg
pop
mov
iret
daa
mov
sbb
cltd
mov
push
imul
jmp
add
xchg
lcall
adc
sbb
loope
jmp
in
dec
stc
pop
dec
nop
inc
mov
loopne
cmc
lea
sub
stc
jns
add
adc
push
ret
pop
cmp
es
lcall
lock
push
fsubl
pop
xor
pop
mov
bound
mov
inc
into
or
sbb
push
jp
cli
das
aam
movsb
jg
pop
mov
mov
test
add
lahf
mov
or
dec
sbb
push
aad
mov
loope
adc
shrl
insb
xchg
pushf
cmp
std
stc
xchg
das
push
push
dec
or
andnps
cmpsb
sub
jmp
ret
popf
test
fldlg2
pop
nop
out
icebp
mov
out
push
add
jp
lock
test
imulb
xor
cli
rorb
sub
xchg
inc
jbe
and
xor
daa
outsl
ret
int3
jae
gs
ret
jg
cwtl
lahf
inc
sarl
iret
scas
mov
movsl
gs
dec
cltd
loopne
mov
sbb
cmp
sbb
sbb
push
push
mov
pop
test
fistpl
mov
ljmp
shlb
dec
inc
jge
sub
in
test
les
lahf
dec
push
movsb
lods
lahf
xchg
adc
mov
lds
or
push
adc
ds
xchg
xorl
popf
lds
pop
insl
adc
ss
lcall
mov
or
mov
ret
or
out
add
aaa
rcll
adc
pop
cmpsb
int
lock
and
int
js
mov
pop
jmp
data16
adc
add
jne
cmp
icebp
popa
leave
iret
mov
mov
pop
inc
xchg
mov
mov
insb
repnz
xchg
scas
add
sub
outsl
cmp
and
sub
sbb
mov
in
aam
or
lcall
inc
mov
fs
data16
pop
xor
fidivrs
or
mov
jbe
jp
std
fs
pop
cmpsb
and
cmp
stos
sub
data16
pop
cmpsl
push
dec
push
popf
add
ret
mov
outsl
xor
data16
cmpsl
imul
adc
in
sub
sbb
sub
xor
pop
loopne
xchg
aad
test
in
cmpsb
outsl
cmpsl
scas
pop
sub
add
ret
fsub
lcall
mov
pop
sahf
cmp
push
iret
fistps
repz
sqrtps
push
dec
cmp
leave
leave
loopne
test
stos
inc
test
loopne
call
adc
loopne
cmp
clc
xor
popa
sahf
jle
rcl
adc
pop
mov
lahf
or
push
ret
add
cli
mov
pop
fs
lret
xchg
fimuls
mov
scas
mov
dec
sub
adc
xlat
dec
fidivrs
pop
nop
mov
xchg
add
add
mov
sbb
ja
popf
shlb
mov
pop
mov
lret
mov
dec
mov
lods
imul
sub
push
push
push
jb
dec
in
pop
push
into
push
dec
pushf
movsl
xchg
pop
enter
jmp
jno
mov
push
jge
or
movzbl
push
xchg
stc
inc
jge
aad
sub
ret
sarl
push
xchg
push
xchg
es
loop
testl
push
in
add
cli
movsb
into
add
dec
lcall
mov
push
pop
jp
loopne
jno
xor
pushf
inc
sahf
icebp
cltd
cld
xor
inc
and
mov
jg
dec
sbb
test
or
mov
out
rcl
pop
add
inc
pusha
clc
outsl
dec
mov
iret
clc
out
rcll
loop
imul
push
push
outsb
push
mov
inc
mov
jne
int3
test
in
and
sbb
fs
push
and
jo
imul
sbb
shl
xchg
and
add
pop
pop
mov
insl
das
mov
pop
shrb
jbe
pop
sbb
sub
popf
pop
mov
aas
movsb
push
loopne
repnz
iret
inc
lods
inc
xor
and
cmp
mov
pop
xlat
cmp
or
jp
dec
dec
cmp
xchg
mov
imul
int
jne
push
orb
rolb
or
mov
sarl
cmp
fcompl
fdivl
pop
dec
and
add
fadd
xchg
rcrb
xchg
icebp
mov
cmp
ljmp
cmp
ja
pop
cmp
popa
mov
push
cmp
hlt
scas
mov
lock
push
mov
jle
popa
dec
add
bound
and
mov
std
scas
in
popa
movsl
pop
xchg
push
dec
pop
dec
fisubs
xchg
jecxz
out
push
mov
shlb
imul
xor
jb
dec
cmp
inc
das
lcall
cmp
lcall
pop
xor
stos
int3
mov
pop
leave
imul
stc
adc
popa
xor
inc
dec
cmp
or
inc
mov
testl
into
cmp
insl
or
test
adc
adc
out
rcl
out
sub
mov
push
and
stc
idivb
sti
dec
lret
mov
lds
or
hlt
dec
dec
int3
cmp
pop
pop
mov
cld
test
adc
shrl
scas
push
adc
xchg
adc
xor
xchg
outsl
inc
into
sub
adc
or
fcompl
xor
pop
jns
dec
out
push
push
aas
sbb
push
pop
out
cmp
aaa
shll
insb
out
out
push
and
repz
nop
sbb
sub
lods
data16
insb
inc
xor
cmp
or
mov
adc
sub
xchg
in
sub
popa
nop
outsl
hlt
sbb
mov
les
into
push
fmulp
cltd
cmp
aaa
jbe
rolb
hlt
movsl
cwtl
push
push
popa
test
mov
xor
push
or
add
mov
fildll
jge
aaa
es
hlt
mov
push
dec
cmp
mov
mov
pop
mov
ffreep
movsb
mov
mov
popa
jnp
jb
push
movsl
inc
imul
xchg
sbb
add
pop
add
mov
pop
jg
rcr
rcl
cmp
jnp
mov
lds
pop
div
xor
xorb
cmp
cmc
ds
rcrl
jbe
fsubl
jecxz
push
sahf
dec
xchg
flds
mov
lock
lock
jg
mov
push
outsb
jno
ret
jge
pop
sub
sbb
cmp
stos
inc
jns
sub
rcll
ret
mov
mov
adc
popf
xor
push
inc
xor
rcr
xor
cmp
cmpsb
in
jge
jb
cltd
aad
clc
outsl
in
adc
call
int3
dec
jmp
stos
sub
xchg
xor
clc
sub
inc
out
lock
add
in
lahf
mul
inc
jmp
pop
xchg
insl
cmp
data16
inc
int
xlat
mov
movsb
lods
enter
sub
mov
push
fidivrs
inc
jae
out
push
push
movsl
test
and
adc
aam
or
adc
jno
das
dec
sbb
pop
scas
std
push
cmp
cld
jecxz
fistpl
movsl
jno
pop
lret
xchg
mov
das
push
jb
mov
mov
enter
xor
dec
fsubp
sbb
inc
aaa
loop
jns
stos
gs
sbb
lret
inc
sarb
popl
lods
push
xor
nop
ljmp
outsl
rcrb
mov
dec
xor
mov
push
bound
adc
dec
inc
mov
or
inc
rcll
jae
jl
push
les
shrb
out
mov
xlat
jle
mov
jnp
cli
jne
cmc
mov
jae
rcrb
adc
add
sub
jge
mov
push
pop
mov
or
enter
dec
mov
mov
jl
inc
mov
lock
movsb
movsl
cmp
inc
pop
xchg
arpl
addr16
jecxz
mov
int3
mov
push
arpl
pop
cmc
test
xchg
fists
data16
out
adc
imul
fldt
int
out
stc
inc
adc
mov
pop
pop
sti
clc
cmp
cmp
mov
iret
lret
mov
dec
jnp
jp
hlt
ret
xor
xlat
imulb
sbb
fsubl
push
out
test
sarb
xchg
lds
pop
stc
lds
js
pop
dec
adc
jnp
pop
cmp
inc
callw
and
enter
cmp
in
outsl
adc
stos
in
add
push
ret
enter
pop
cmp
stos
cmp
mov
sbb
addb
and
jle
ljmp
sbb
sub
out
sub
xchg
subb
xor
aas
lods
jo
jg
adc
fucom
sub
and
push
insl
sbb
cmp
ja
test
mov
mov
frstor
into
inc
jecxz
int3
loop
das
xorb
jnp
mov
push
xchg
cmpsb
call
or
ja
inc
add
jle
shll
adc
jns
xchg
testb
cld
bnd
lret
jae
or
cwtl
xor
jmp
fwait
cmp
and
push
cmp
popf
popa
loope
mov
insl
addb
cmc
shlb
imul
lds
aam
adc
cmpsl
js
pop
pop
mov
daa
mov
out
bound
cmp
sti
add
insl
fwait
imul
jg
add
divl
scas
cmpsl
add
cmp
adc
call
aaa
mov
cmpb
and
pop
sub
lods
inc
fisubrl
add
aaa
cmp
out
outsb
inc
sbb
jae
out
outsb
popf
pop
inc
icebp
negb
dec
lret
mov
sub
shlb
mov
lret
cmp
daa
push
cli
lea
std
hlt
arpl
fldl
adc
ja
loope
mov
jnp
subb
jae
push
dec
dec
stc
cmp
xor
ret
cs
add
cmpsb
icebp
ret
mov
xchg
xor
cmpsb
push
push
je
add
lock
mov
push
push
sub
out
push
jmp
push
int
jmp
mov
cs
arpl
repz
lahf
cmp
push
fstpt
cmpsl
sub
xchg
jge
sub
add
enter
bound
xchg
in
jmp
pop
adc
and
push
pop
shlb
sbb
mov
iret
cmp
insb
mov
mov
rorb
jbe
sbb
sti
ret
xchg
mov
loope
shlb
jns
and
pop
sbb
sbbl
jae
je
loop
push
jbe
imul
orl
cmp
inc
jmp
jecxz
stos
cmp
outsb
or
sub
insb
push
js
jge
and
and
test
dec
test
jmp
sub
bound
test
aad
data16
orl
xor
xchg
jmp
daa
xlat
adc
xchg
leave
push
push
shlb
div
sub
add
pop
pop
or
mov
call
gs
fidivrl
out
mov
out
fsubr
jb
dec
je
enter
add
loopne
dec
xor
xchg
lahf
cwtl
sub
dec
fsubs
pop
push
add
and
movsl
pop
xlat
lret
lcall
lsl
rolb
and
or
dec
sub
mov
xchg
adc
xor
mov
mov
fwait
movsl
retw
mov
inc
jp
add
dec
cmp
and
lock
sbb
cmpl
mov
fwait
mov
ds
adc
js
and
cmp
pop
aam
mov
clc
jnp
bound
fidivl
and
mov
in
roll
push
sbb
adc
inc
int
push
or
cmc
lcall
loop
xlat
inc
push
sbb
mov
mov
outsb
into
mov
js
push
pop
cmp
in
push
push
mov
xor
mov
jns
mov
cmc
repnz
mov
pop
pushf
sub
jb
jns
push
bound
pop
shr
lods
out
rolb
std
sti
mov
lahf
in
xchg
mov
ficomps
js
enter
fcompl
jb
mov
xor
xchg
aad
jns
mov
ret
or
mov
jo
pop
stc
xchg
jbe
mov
sbb
test
in
iret
cmp
jns
int
jno
cs
mov
push
mov
or
and
inc
gs
and
data16
sub
data16
rcrb
push
mulb
jmp
jbe
loope
dec
mov
and
jp
stos
aam
ficomps
add
push
daa
push
pop
sub
pop
dec
ret
mov
icebp
test
push
out
repnz
lds
mov
or
sarb
xchg
aaa
add
adc
jae
mov
mov
sub
xchg
mov
push
and
fmuls
bound
fwait
pop
imul
pop
outsl
data16
add
xchg
sub
push
mov
mov
mov
mov
aam
push
cltd
mov
loope
push
fstp
call
adc
pop
cmp
mov
or
mov
cs
jge
add
xor
int
popa
pushf
das
popa
dec
pop
mov
mov
jno
xchg
pop
push
adc
popf
pop
cmp
sti
fs
inc
sbb
data16
push
int3
or
in
int3
push
into
popf
mov
jmp
shlb
or
mov
or
adc
mov
push
cli
aas
or
inc
out
aaa
mov
sbb
movsl
pushf
in
test
mov
lret
and
loopne
ss
mov
inc
jae
mov
inc
mov
xor
cli
jb
popa
es
mull
or
repz
paddsb
push
lcall
cmp
pop
rorl
add
lret
mov
inc
jnp
and
push
inc
mov
cmp
push
sbb
pop
out
pop
jmp
pusha
addr16
in
pop
push
xor
sub
aad
inc
popa
dec
xchg
inc
call
scas
add
ret
dec
and
mov
cmc
lds
adc
daa
jmp
mov
push
adc
stc
xchg
imul
pop
sti
mov
dec
out
dec
or
out
rcl
outsb
stos
add
mov
clc
test
pop
sub
fildl
push
ss
and
jmp
hlt
pushf
and
jg
adc
xlat
fwait
xorl
and
adc
push
xchg
aam
mov
scas
nop
std
mov
inc
mov
std
pop
in
inc
std
cmpb
mov
arpl
or
add
outsl
xchg
xor
jb
div
movsl
push
shl
clc
sbb
push
xchg
jge
mov
out
lahf
mov
mov
dec
repnz
add
push
or
jne
cmp
pop
lock
loop
test
ss
aad
fs
inc
pop
repz
sub
imul
jae
mov
lret
cmpsl
sub
xor
mov
fs
inc
lahf
add
xchg
addl
jmp
pop
imull
xor
stos
mov
xor
jns
mov
je
inc
xchg
or
pop
fadd
sbb
in
orl
repz
mov
ljmp
dec
movsb
jmp
push
sahf
push
ffreep
lock
neg
rcrb
cld
movsl
call
pushl
mov
ja
sub
cmpsl
sub
mov
pop
adc
jae,pn
xor
outsl
mov
or
push
xchg
cmp
aad
leave
mov
inc
pop
scas
and
mov
pop
or
xlat
push
mov
enter
mov
popa
push
xchg
outsl
push
and
aaa
mov
cli
push
mov
nop
arpl
cltd
inc
inc
int
icebp
cwtl
loop
jg
adc
fldl
lods
mov
test
sbb
and
jp
out
fidivl
jno
push
subb
testl
sbb
xor
dec
pop
dec
call
js
xor
outsb
inc
ljmp
cmp
bound
popa
inc
pop
pushf
sbb
out
pop
mov
and
enter
xor
es
xchg
push
xlat
and
inc
insl
xchg
mov
fstl
mov
pop
mov
xchg
jmp
xor
iret
loope
dec
mov
insl
shrl
cmc
scas
fcoms
adc
filds
pop
std
scas
ret
adc
mov
repz
mov
bound
sbb
popa
mov
xor
xchg
fs
ret
ret
push
ljmp
jo
cmp
dec
in
test
xchg
cmc
das
imul
scas
aaa
test
xor
lret
fstpl
mov
xchg
sbb
fisttpll
jb
int3
pop
arpl
inc
xchg
outsb
in
in
idivl
fsubl
inc
js
inc
pop
out
clc
cmp
fldt
sub
xchg
pusha
xchg
mov
jp
data16
negb
fldt
push
test
mov
cmp
int
pop
insl
pop
jo
cmc
in
leave
push
sbb
push
push
jno
movsb
sbb
xor
sub
lods
sub
mov
sub
xchg
pushf
int3
mov
dec
rcr
shrb
mov
sub
sbb
mov
dec
xchg
sbb
add
call
push
pushf
nop
cmpsb
sbb
and
pop
aad
dec
ljmp
dec
cld
mov
ret
pop
xchg
in
fwait
and
mov
add
shll
jnp
push
add
dec
dec
cmp
arpl
inc
mov
jmp
push
cwtl
dec
lret
cmp
or
dec
xor
cmpb
push
js
jecxz
outsb
mov
sbb
bound
dec
movsb
lock
ds
dec
mov
mov
adc
add
pop
jmp
sub
shlb
mov
mov
test
int
push
dec
and
scas
xor
mov
loopne
call
push
dec
rcll
ret
xor
leave
or
stc
or
vmread
xor
and
mov
fistl
leave
pop
dec
test
lds
dec
inc
sbb
mov
sub
mov
push
cmpsb
mov
sbb
push
jecxz
or
sbb
fsubp
or
rol
dec
into
push
jge
jae
pop
dec
adc
sbb
test
imul
jne
in
into
stos
mov
divl
xchg
in
subl
cmpsl
xchg
cld
or
addb
mov
test
push
mov
enter
mov
out
or
adc
std
jl
mov
sbb
pop
cmc
xchg
test
mov
gs
in
jno
sbb
xchg
mov
cmp
inc
jnp
xor
ja
leave
addr16
daa
sub
jns
sub
cmp
popf
in
out
push
in
fisttpl
mov
lret
loope
cli
imul
fstps
pop
cld
ljmp
or
out
mov
mov
ror
dec
add
xchg
push
lcall
fistl
bnd
popa
push
lea
sub
lea
mov
aaa
xchg
mov
jmp
loop
cmp
scas
pop
les
fidivs
sbb
shlb
sbb
movsb
in
push
adc
fadds
out
aad
test
loop
rorb
or
in
jne
adc
rsm
or
insl
dec
mov
jns
pop
ja
mov
repz
ret
outsl
inc
mov
push
mov
push
hlt
pop
out
sbb
or
and
adc
mov
mov
sahf
mov
jl
add
jecxz
cmpsl
in
jae
dec
push
xlat
push
pop
adc
subb
les
inc
sahf
xlat
frstor
sub
ficoms
xchg
imul
mov
jae
xchg
sub
mov
stos
add
add
gs
pushf
scas
repnz
jmp
cltd
inc
sbb
mov
into
jae
push
std
xchg
cld
hlt
sub
call
sti
mov
test
push
cltd
dec
test
pop
add
loope
sub
mov
bndstx
and
sti
xchg
mov
lret
jo
rcrb
sub
imul
lret
dec
pop
jle
jbe
jns
jae
mov
xchg
and
test
adc
ret
mov
aaa
nop
mov
outsl
push
sahf
jbe
add
sar
sub
mov
jle
cs
push
xor
push
jne
inc
cmpsl
xor
mov
mov
fisubrs
cmc
lods
push
pop
mov
bound
hlt
cmp
add
xor
push
psllw
stos
stos
mov
mov
adc
inc
mov
inc
jecxz
call
mov
test
loop
repnz
in
xor
insl
loop
iret
outsl
push
mov
movl
sahf
daa
xor
pusha
pop
test
popa
and
stc
adc
mov
mov
pusha
xor
add
leave
pushf
shlb
add
xchg
sti
jbe
sub
push
lret
lea
add
ljmp
mov
or
insl
insl
sub
out
pop
sbb
cmp
int3
outsb
or
push
ja
mov
popa
flds
fsubl
icebp
pop
cmp
xchg
std
mov
data16
aam
test
or
je
ret
mov
test
loopne
bnd
clc
mov
inc
add
int
loopne
or
pop
adc
xor
cmp
mov
lcall
mov
pop
ret
adc
jl
add
pop
and
mov
xor
and
xor
jmp
lcall
mov
mov
xor
mov
xor
out
mov
fstpl
cld
dec
inc
xchg
iret
stos
sub
sbb
cli
stc
roll
fprem
xchg
gs
pop
jecxz
push
xchg
pop
lock
jne
mov
xchg
jmp
aaa
inc
xor
cli
loope
pop
das
arpl
jmp
pop
gs
jmp
sbb
sub
xchg
cwtl
jno
ret
xchg
scas
inc
or
or
lahf
mov
dec
add
push
iret
or
sub
pop
ds
xchg
cli
insb
lods
rclb
orb
xchg
popa
call
shl
loopne
jae
aaa
je
arpl
sarb
xchg
adcb
cmp
jo
push
mov
ret
sar
mov
mov
pushf
dec
scas
sbb
pop
fildl
iret
imul
cmp
gs
stos
mov
ja
push
inc
ret
shl
cli
movsl
mov
cmp
mov
xchg
and
add
scas
jnp
pushf
pop
in
sbb
push
rorl
dec
xor
aad
push
movb
pusha
cmp
jo
xor
sbb
xor
mov
mov
cmp
sbbb
xchg
xchg
cmp
jbe
adc
jecxz
popf
int
push
adc
in
mov
cld
in
nop
adc
push
cmp
xorb
adc
mov
pushf
cld
fisubl
adc
clflush
mov
pusha
or
jae
leave
repnz
mov
add
push
into
and
and
mov
mov
pop
sbb
cld
jl
cld
test
pop
fs
mov
lcall
mov
cwtl
add
pop
mov
cmp
mov
cs
push
xchg
lods
loopne
xchg
xor
xor
and
jns
or
add
push
andl
jmp
loope
stc
jns
loop
xchg
sbbb
decl
dec
scas
out
pop
rcrl
dec
mov
leave
mov
ss
aas
push
lock
ret
adc
icebp
call
cmpsl
cmp
insb
xchg
in
inc
dec
dec
rorb
mov
divb
push
mov
call
dec
xchg
enter
pop
arpl
or
jns
loope
xchg
leave
xchg
push
test
jge
mov
inc
jge
pop
mov
jg
jb
outsb
movsl
mov
lds
shll
pushw
inc
mov
sub
test
call
mov
int3
inc
jne
imul
mov
sbb
aas
jne
cld
pop
addr16
nop
mov
push
cmp
cmpsb
mov
jl
inc
mov
xor
jno
pop
js
cmpsl
adc
out
push
mov
sub
jmp
fcmovu
adc
push
xchg
icebp
cmp
add
sahf
add
push
addl
push
mov
xchg
scas
call
lret
mov
sbb
out
sbb
sti
aaa
insl
loop
inc
fisttpll
pop
sub
ljmp
mulb
mov
push
push
shl
adc
mov
mov
sbb
insb
adc
pop
mov
xor
dec
add
mov
cmp
andl
je
adc
jge
mov
mov
jge
xchg
outsl
pushl
iret
stos
jl
ljmp
push
sbb
imul
jmp
movsb
adc
insb
mov
je
pop
inc
fstpl
cmp
pop
xor
add
shll
mov
scas
cs
xchg
jnp
dec
cmc
pop
add
adc
mov
sbb
lahf
clc
jbe
in
cmc
orb
push
mov
shlb
movl
es
xchg
push
xchg
std
lds
aam
enter
outsl
push
dec
and
cmp
je
imul
xchg
inc
xchg
jne
fsubrl
ret
iret
sub
jae
pop
clc
insl
mov
das
mov
lea
adc
adc
stc
hlt
push
xchg
rcrb
pop
xor
fmull
loope
mov
rorl
push
scas
xlat
faddp
nop
jg
inc
fmulp
out
push
int
das
leave
sub
sbb
jb
mov
mov
dec
mov
leave
stc
cmp
notb
xchg
mov
es
mov
xor
add
pusha
mov
jo
imul
stc
out
test
or
inc
repnz
out
cmpsb
cmovle
or
cmp
jo
nop
inc
leave
xor
pop
push
pop
mov
aas
add
scas
jl
cmp
or
sahf
mov
leave
sbb
cmpsl
test
adc
sbbb
fadds
faddl
mov
int3
pushf
inc
outsl
dec
adcl
dec
test
pop
mov
aas
mov
sub
stc
jne
inc
xor
imull
lret
adc
mov
add
aam
outsb
fists
pushf
in
movsb
ljmp
xadd
jecxz
or
jno
sub
mov
pop
xor
xor
push
lret
loopne
pop
fs
daa
adc
add
mov
mov
adc
push
pusha
call
dec
or
fistps
js
mov
or
jecxz
or
stos
ljmp
jno
push
sbb
jg
add
jae
movsl
mov
sbb
cmpsl
sub
adc
and
test
cmp
xchg
pop
add
sti
push
shl
enter
out
outsb
xor
or
call
mull
imul
dec
pop
rolb
shrb
out
or
xor
mov
or
push
int3
cmpsl
fcomps
ret
dec
mov
xchg
xor
dec
add
dec
jae
lea
and
test
aas
dec
cmp
mov
mov
fmuls
testb
je
rcrb
hlt
xrelease
aaa
or
out
jns
xor
mov
out
insl
adc
rclb
cmp
jno
xor
or
pop
mov
dec
out
add
es
lds
dec
sahf
xchg
repnz
cmp
punpcklwd
adcb
or
or
sub
or
int
jne
es
dec
xor
test
out
push
xchg
leave
push
jmp
mov
into
inc
inc
inc
or
fnstenv
ret
xchg
sub
jbe
add
test
sub
add
mov
xchg
pop
mov
and
sbb
and
fildll
jg
xor
lods
sbb
and
dec
sub
nop
mov
cmp
lds
or
roll
loopne
addr16
lahf
mov
mov
scas
jns
dec
inc
aad
fisubl
loop
icebp
xor
jg
mov
scas
push
mov
pushf
loopne
push
mov
icebp
mov
jl
sarl
fcompp
lock
movb
imul
xchg
or
add
cmpsl
push
insb
gs
bound
stc
adc
test
dec
rolb
loopne
daa
add
xchg
shl
roll
dec
idiv
cmp
leave
mov
shlb
add
clc
sbbl
sub
popf
pop
push
mov
adc
xchg
stos
nop
mov
add
inc
xchg
mov
pop
js
jnp
inc
aaa
jae
xor
lret
icebp
orb
out
out
iret
stc
add
fwait
stos
in
mov
mov
xchg
adc
arpl
cmc
fwait
jnp
rep
fisubs
scas
jmp
lahf
mov
subl
add
xlat
sbb
in
and
cmp
push
sbb
rorl
lret
ffreep
add
mov
fists
lret
pop
dec
lock
je
push
insb
lods
adc
aam
in
add
push
movsb
aas
ljmp
stos
push
inc
push
scas
jmp
jb
insl
inc
cwtl
adc
inc
add
dec
movsl
aam
std
lea
or
in
out
leave
mov
and
add
mov
daa
and
test
dec
ss
ret
shll
mov
sbb
adc
pop
cmpsb
rcl
jb
mov
loopne
rol
sub
jle
popf
pop
inc
lods
jnp
in
push
stos
fwait
pop
je
jo
pop
lret
sahf
js
dec
in
fsts
jnp
insl
sub
test
test
add
and
sarb
enter
cltd
es
jecxz
xchg
cmpsl
lea
sbb
xchg
fisubrs
shl
xor
add
lcall
ffreep
mov
ds
push
fwait
mov
adc
add
mov
or
jae
lss
mov
pop
es
mov
test
sti
jl
and
ljmp
xchg
sbb
pusha
test
ljmp
add
les
xor
leave
pop
rolb
push
insl
pop
dec
adc
mov
rol
push
data16
call
flds
adc
ds
add
pop
dec
and
lret
or
xchg
push
push
xchg
push
loop
or
mov
push
pop
rolb
push
mov
pop
push
xor
cmpsl
dec
mov
nop
iret
hlt
loope
or
in
out
sahf
scas
repnz
pop
sbb
loopne
mov
inc
int3
fildl
add
arpl
rcrl
add
sub
aas
mov
dec
pop
add
fs
fisubs
out
inc
mov
sub
aam
cmp
push
testb
negb
sub
mov
sub
jne
push
and
lods
pop
sbb
iret
jecxz
lret
and
mov
mov
cmp
jne
scas
jo
cmc
aas
mov
pushf
jbe
out
push
sub
sbb
mul
outsb
adc
xor
loop
cld
cmpsl
fbstp
push
xchg
sbb
dec
lock
add
imul
mov
ret
dec
stos
jbe
xor
daa
push
jp
mov
daa
sbb
mov
sub
sub
mov
outsb
cmp
mov
rcr
mov
fimull
popa
sarb
adc
xchg
into
pusha
xchg
test
mov
xor
mov
arpl
in
push
jne
xchg
js
pop
movsb
lret
mov
mulb
pop
mov
popf
enter
cmp
mov
pop
fadds
dec
jl
ja
stos
pop
das
pop
cmp
adc
jbe
mov
jg
mov
bnd
fwait
adc
push
icebp
test
or
cmp
jno
fnstenv
stc
addr16
xor
pop
jl
jmp
cld
inc
enter
cmp
dec
lcall
jnp
jmp
xor
iret
call
pop
loope
xchg
pusha
mov
cmp
aas
rcrl
inc
aas
cltd
or
lock
data16
adcl
in
movsb
fs
adc
pop
jae
dec
dec
outsl
pop
sub
test
in
leave
std
xor
or
cld
mov
rolb
mov
push
cmp
test
mov
inc
mov
cmpsl
mov
daa
add
lds
add
loop
mov
inc
pushf
shll
arpl
call
mov
movsl
test
rcrb
and
jmp
push
pop
and
aam
cmp
mov
sub
mov
mov
mov
ds
jmp
jo
into
ss
repnz
stos
xchg
add
es
dec
jl
sbb
push
aaa
stos
pop
push
data16
leave
xchg
loop
xor
cmp
dec
fisubs
mov
adc
xchg
mov
xchg
nop
mov
das
cltd
fldt
shrl
ret
mov
jp
adc
pop
subl
xchg
test
in
sbb
shlb
sti
je
push
mov
inc
sub
ss
andb
inc
dec
scas
gs
ret
fistpll
jle
mov
jo
fimuls
push
lds
mov
lds
imul
xchg
and
cmp
shll
ja
push
adc
mov
call
adc
fadds
pop
gs
and
push
pop
inc
mov
xlat
pop
xor
popf
mov
sbb
sarb
mov
or
dec
pop
add
or
push
repz
mov
mov
sub
mov
sub
in
test
and
sbb
mov
xchg
xor
jl
lods
cmp
insl
push
xchg
add
in
cli
mov
xor
ret
pop
adc
roll
cmp
jbe
and
clc
cmp
repz
in
cmp
pop
mov
xlat
or
xchg
cmp
or
jns
orl
fadd
xchg
xor
push
cmp
add
adc
arpl
xrelease
dec
arpl
cli
test
faddp
lock
sbb
pop
mov
hlt
repz
or
mov
js
out
cld
adc
orb
imul
ficoml
and
or
lret
insl
mov
sbb
inc
jle
scas
or
iret
cmp
mov
jge
pop
mov
shl
test
inc
push
pop
sub
cmp
mov
into
jnp
push
loope
mov
jno
mov
push
popf
jne
loop
fdivrl
lds
or
or
daa
dec
es
je
inc
push
dec
lret
cli
aad
fldenv
orl
cmpsl
aam
sti
or
pusha
inc
dec
iret
stc
fiaddl
dec
or
mov
test
jmp
jae
fildl
push
push
mov
pop
test
repz
sbb
cmpsl
mov
mov
push
push
add
add
inc
mov
push
dec
sub
push
mov
jne
jnp
xchg
or
pop
pop
mov
add
sbb
fisubrs
or
sub
inc
imul
add
popf
ss
rcl
or
lcall
pop
cmpsb
add
xchg
data16
les
push
lret
xchg
pop
cs
cwtl
jnp
cli
dec
adc
mov
in
add
lret
or
sbb
addr16
incl
cmp
cltd
lret
inc
inc
imul
ja
and
mov
pop
dec
push
and
hlt
scas
dec
loop
ljmp
ss
into
mov
push
xor
shll
pmaxsw
xchg
inc
fisttpll
mov
cld
mov
hlt
cltd
push
sub
mov
cs
xor
push
dec
xchg
and
test
pop
or
int3
push
shlb
loop
mov
cwtl
mov
mov
sbb
out
sub
jmp
push
in
rorl
cmpsl
push
je
sbb
lcall
out
add
xorb
xor
pop
nop
neg
or
cwtl
mov
and
pop
xchg
cmp
xor
and
cmp
pop
jle
or
add
dec
popa
fisubs
sub
cmp
sub
or
iret
loop
add
add
int
jge
not
push
loope
incb
mov
leave
fdivs
add
sbb
jmp
xor
test
test
shr
inc
mov
mov
out
sub
orb
pop
jecxz
or
ret
jl
xor
mov
mov
std
idivb
je
dec
xchg
js
inc
xchg
inc
sub
cltd
jne
shll
popa
cltd
orb
stos
jecxz
and
stos
cmpsb
xchg
push
adc
out
pop
mov
jne
in
inc
aam
cmpsl
lea
inc
xchg
cmp
cmp
jne
ljmp
mov
rolb
loop
jnp
inc
in
sbb
cs
fnstsw
mulb
or
and
js
ja
nop
mov
push
call
jg
xor
and
arpl
jno
mov
cmp
inc
and
in
push
dec
mov
mov
and
and
ss
jnp
dec
das
jp
pop
mov
xchg
leave
shrl
mov
xor
mov
cli
jg
out
mov
js
in
pop
cmpsb
pop
int
inc
cmp
mov
repz
jbe
clc
stc
in
inc
jns
push
dec
jge
movsb
test
jp
dec
inc
cmpsb
insl
test
nop
pushf
mov
or
mov
enter
fwait
mov
push
scas
push
stos
rorb
jmp
pop
mov
pop
stos
jne
push
mov
and
cmp
shlb
out
jp
or
aad
repz
imul
adc
jmp
int
push
sub
dec
mov
mov
jno
fdivp
sub
lds
mov
imul
sbbb
lods
push
jae
push
push
push
mov
clc
mov
lea
pop
sbb
icebp
pop
fs
mov
imul
pushf
mov
lret
das
les
lcall
imul
enter
outsb
and
cmp
lods
sub
fcompp
sub
and
xor
inc
sarb
mov
movsb
add
call
lods
add
xchg
push
pop
push
or
jmp
loop
les
xchg
jg
adc
das
mov
xor
xchg
cltd
jns
cld
push
jbe
fiaddl
fists
sbb
into
push
jb
cmp
iret
push
pop
cmp
and
outsb
push
fsubr
nop
lods
push
into
in
ds
mov
mov
aas
sub
in
and
in
sbb
sbb
imul
jmp
imul
pop
push
push
ret
or
inc
xchg
addr16
out
shr
fistl
test
cmp
outsl
not
jmp
sub
mov
jmp
dec
clc
inc
bound
rolb
lds
fnsave
jl
adc
mov
shl
repnz
scas
pop
dec
scas
cmpsb
jns
dec
xchg
in
ret
add
cs
xor
jae
jle
in
out
lret
int
sbb
fcomps
sub
std
and
jae
mov
scas
mov
add
or
lahf
adc
mov
inc
adc
popf
cmc
stc
dec
popf
andb
xchg
ss
adc
jb
dec
ds
add
jl
lcall
int
jb
xchg
push
inc
xor
cmc
dec
mov
addl
sub
out
pop
dec
push
adc
ficompl
stos
xor
and
ficomps
out
jle
imul
adc
jg
sub
mov
ficompl
pop
or
stos
test
sub
xor
mov
cmpb
in
out
xchg
sbb
pusha
mov
ds
subl
mov
mov
jns
mov
rolb
sub
mov
jae
out
xchg
and
std
lea
inc
fwait
js
xorb
add
in
dec
jmp
mov
loop
sub
sub
jo
mov
mov
cli
dec
mov
cld
adc
fs
in
xchg
clc
adcb
or
jmp
dec
lods
mov
in
out
adc
mov
or
gs
push
in
mov
clc
mov
add
sbb
or
mov
and
aad
sbb
andl
bound
add
or
shrl
cli
lods
mov
jmp
jo
imul
imulb
pop
iret
sbb
cltd
mov
popf
dec
insb
dec
mov
mov
dec
and
xchg
xor
adc
cmp
scas
jl
mov
sub
inc
xor
jns
lret
fcmovu
mov
or
pop
inc
fpatan
insb
shrb
dec
insb
shrl
fwait
cwtl
push
fcmovne
hlt
inc
xchg
or
xchg
add
scas
fildl
aas
adc
nop
mov
push
outsb
and
leave
test
mov
xor
aam
mov
cmpsl
movsb
aas
sbb
cmp
sub
int3
mov
add
xchg
and
push
pusha
imul
push
imul
adc
or
mov
and
adc
sub
loopne
enter
xor
int3
inc
sub
dec
and
test
push
enter
push
addl
mov
dec
js
jge
mov
mov
decb
data16
lods
in
into
rcrb
fcoms
test
ss
cli
add
jb
out
jmp
aam
arpl
lods
lds
lret
xor
inc
push
pop
xchg
mov
ljmp
fidivrs
mov
push
push
incb
out
lcall
neg
push
dec
xor
into
push
xor
push
or
jmp
aas
pushf
arpl
push
dec
mov
xor
loopne
lock
mov
int
xchg
mov
hlt
dec
or
in
mov
bound
call
cmp
jnp
mov
mov
push
push
nop
loop
pop
mov
test
mov
mov
fistl
xor
test
addl
jo
pusha
push
jle
sbb
faddl
sbb
pop
adc
gs
inc
test
xchg
lcall
mov
lret
rcrl
adcl
and
cmp
aas
negl
add
pop
or
test
lds
dec
jo
jle
ret
das
mov
add
xchg
ljmp
xchg
call
nop
dec
add
cmp
lock
mov
cmpl
adc
inc
sbb
movsl
adc
test
outsl
imul
idivb
in
adc
jg
out
cmp
ret
fisubrl
fstpl
lret
xchg
hlt
enter
xchg
push
cmpsb
push
movsl
loope
and
jo
sti
fnsave
aam
sbb
or
cmp
in
repz
cmc
int3
outsb
xchg
sub
pop
addb
add
add
fwait
out
ljmp
clc
cwtl
xchg
xchg
mov
xchg
int
mov
adc
inc
lods
cmpsl
mov
idivb
pop
add
insl
stos
loopne
je
or
pop
pop
in
stos
jnp
in
clc
jns
mov
adc
movsb
xlat
out
xor
js
sbb
mov
mov
les
xchg
ljmp
test
dec
outsb
clc
rcr
sbb
pop
sub
and
adc
mov
lock
cs
bound
jb
cli
lods
jne
out
loop
or
pop
xchg
icebp
mov
jp
dec
xor
into
cltd
xor
test
bound
ret
jno
mov
scas
rolb
jmp
pusha
or
fldcw
inc
cmpsl
mov
icebp
cmp
sbb
sub
mov
add
sti
paddb
jg
sub
sub
lret
ret
pop
ja
std
jmp
movsb
lods
test
ds
test
clc
out
pop
cs
in
fwait
xchg
cmp
or
out
cwtl
mov
jae
mov
cmc
or
or
mov
jp
dec
and
jae
mov
add
inc
mov
sub
dec
stos
cmp
adc
push
xor
jecxz
dec
mov
stc
adc
cmp
adc
add
popa
jbe
dec
pop
jl
dec
pop
inc
sahf
sti
int
inc
nop
sub
xchg
and
les
pop
fwait
sub
mov
icebp
mov
mov
and
or
movsb
mov
dec
aad
pop
jg
into
dec
aad
push
and
int
lahf
xchg
daa
cmp
imulb
jo
sbb
lds
iret
leave
mov
xchg
leave
loopne
out
cmp
sahf
arpl
push
jmp
push
jbe
mov
xchg
in
pop
addb
lret
pop
jg,pt
ror
stos
insl
cmpsb
push
negb
es
push
loopne
mov
mov
rclb
pop
loopne
push
or
push
and
cmp
in
data16
push
sbb
aaa
or
fs
xchg
rcll
add
dec
adc
cli
loop
pop
xor
xchg
xor
es
shlb
mov
jmp
lcall
cld
or
or
jp
repz
mov
cmp
or
sbbb
test
dec
and
sub
mov
shlb
lcall
cmp
repz
adc
popf
push
out
arpl
aaa
scas
cli
mov
and
inc
xchg
xchg
aaa
cmp
scas
vcvtss2si
dec
faddl
sbb
jge
sbb
es
popf
jmp
not
add
enter
in
cmp
sbb
add
cmc
push
sbb
jmp
shrb
mov
jne
das
mov
outsl
mov
jbe
fadd
cld
push
jmp
cmp
mov
pop
add
fsubl
insl
jbe
cmpsl
dec
add
jecxz
mov
mov
repz
pop
fidivl
dec
add
add
jg
stc
fwait
hlt
or
fcomps
loope
inc
popf
xchg
xchg
xor
daa
mov
stc
cmc
cltd
into
jae
popf
and
hlt
jp
pop
add
sti
adc
in
and
cmpb
add
es
stos
inc
lds
mov
lcall
idivl
inc
mov
es
mov
das
test
scas
sub
inc
inc
stc
cltd
das
adc
data16
and
jbe
jecxz
out
ja
daa
movb
outsl
adc
jno
fists
push
sarl
cmp
ss
lcall
pusha
xchg
out
add
jns
fdivrl
and
add
das
in
mov
and
add
xor
test
call
ja
out
inc
lods
push
loopne
jbe
repnz
adc
sbb
sbb
daa
and
push
inc
or
xchg
jno
rclb
dec
push
xor
push
test
je
or
dec
cmp
add
sbb
sahf
scas
jbe
stos
inc
or
movsb
cltd
pop
lcall
mov
cmp
sub
cmp
adc
cmpsb
xchg
shll
leave
clc
xor
cs
adc
fnstenv
add
adc
adc
jecxz
add
or
sub
ds
pop
adc
loope
lock
std
jecxz
mov
jecxz
mov
imul
int3
subl
xchg
push
add
cli
inc
fadds
pop
pop
enter
outsb
scas
push
mov
push
test
sub
fadd
in
icebp
mov
je
lret
pop
inc
pop
mov
sti
pusha
bound
mov
sbb
loopne
inc
popf
shr
mov
sub
xor
inc
dec
mov
cmpsl
fnstcw
mov
xor
and
cmp
jnp
mov
call
lahf
es
repnz
sbb
cmp
and
adc
les
aaa
movsl
adc
sbb
mov
test
cmpsb
lret
push
xorl
sub
sbb
add
pop
mov
mov
faddl
add
loop
aaa
data16
add
aaa
loop
outsb
clc
xor
push
insb
mov
in
fnclex
out
mov
lcall
pusha
jae
push
jmp
lfs
mov
mov
into
stos
jg
dec
jno
pop
rorl
inc
jg
push
xchg
shlb
lret
negb
nop
push
inc
xor
pop
outsb
aad
xchg
sub
data16
mov
and
call
scas
dec
outsb
addr16
ss
dec
in
adc
test
das
mov
inc
xor
push
dec
mov
cmp
xchg
sbb
cmp
and
rcr
faddl
fsubs
adc
stos
test
mov
jns
into
dec
enter
lock
pop
out
sub
ljmp
jle
sub
aaa
movsl
out
jo
xor
add
shr
aaa
mov
jge
mov
xlat
call
sbb
hlt
stos
sbb
pop
mov
inc
stos
pop
daa
out
xchg
rolb
in
or
xor
mov
and
adc
clc
cltd
enter
fcoml
jle
cld
sub
adc
sarb
and
pop
cmp
dec
sbb
mov
scas
mov
cmp
dec
andb
insb
fstl
jp
cld
icebp
mov
out
sbb
and
sahf
sub
out
xor
jbe
mov
cmp
loope
ret
out
and
imul
daa
dec
jl
dec
fcoml
aas
xor
sub
loop
leave
push
mov
push
mov
jne
xor
mov
jne
addr16
adc
pop
out
mov
inc
in
shlb
data16
and
ret
or
mov
aad
xor
stc
out
push
mov
mov
cmpsb
lds
jge
repnz
mov
mov
pop
enter
enter
mov
dec
mov
and
or
imul
and
inc
loop
in
push
jp
mov
cmpl
mov
mov
push
sub
cld
imulb
shlb
xor
dec
mov
mov
jecxz
or
aad
jno
push
sbb
sub
cmp
adc
mov
mov
mov
mov
dec
cmp
loopne
push
lahf
pop
mov
xchg
jp
out
mov
xor
add
mov
jle
mov
test
lret
sbb
ret
stos
push
push
subl
insb
push
push
out
and
xor
sbb
cli
std
cmp
and
les
ja
mov
das
push
pop
pop
rol
dec
mov
cmp
or
es
scas
xorl
cmp
aad
pop
outsb
push
xor
frstor
int
cmc
cmp
xchg
push
and
arpl
sbb
jo
mov
ret
mov
repz
ds
test
sub
ds
mov
ret
loope
push
mov
dec
out
scas
ret
pop
imul
dec
dec
jmp
adc
mov
dec
ret
cmpsl
or
movsl
gs
test
dec
mov
or
into
dec
push
sub
cmp
aaa
adcb
mov
pop
lret
sub
sbb
in
mov
and
outsl
std
out
mov
lea
xor
xchg
in
cltd
sbb
mov
mov
rorl
jmp
loop
dec
outsl
inc
icebp
fucomip
shrb
mov
adc
fnstenv
xor
ljmp
movsb
movsb
xchg
sbb
sub
cltd
nop
hlt
insb
push
sahf
shrb
dec
ja
cli
sti
adc
addl
xchg
lea
sub
fcomi
and
lods
push
cltd
push
sbb
push
ret
cmp
mov
out
mov
cmpsl
or
xchg
lahf
inc
popa
out
fidivrs
sbb
mov
int3
lahf
test
sbb
cwtl
cmp
adc
test
loop
aam
lea
inc
insl
inc
pop
jnp
fidivl
cld
jecxz
aaa
shl
xor
ja
mov
inc
test
push
inc
and
fwait
push
inc
outsl
das
sbb
pop
ret
jnp
xor
jbe
mov
loope
mov
lret
or
pushf
xorl
sbbb
xchg
fdivrs
mov
xchg
bound
push
xor
ret
hlt
fists
push
jecxz
cmc
ja
xchg
mov
js
jg
outsb
fs
test
inc
pop
push
cmpsb
loopne
repz
jo
scas
dec
add
sarb
rcrl
and
es
add
mov
aad
mul
and
cmp
lock
fcomp
lret
or
lret
popf
fwait
and
ret
dec
out
push
sbb
xor
sub
popa
sub
out
pusha
cmp
cmp
in
xor
hlt
cmp
add
daa
or
mov
pusha
hlt
sbb
out
jo
les
push
fildll
gs
gs
adc
test
iret
sbb
mov
jmp
push
mov
xchg
sub
dec
ret
push
lcall
stos
out
pushf
fs
cmp
pop
clc
adc
lret
dec
or
push
jmp
mov
cmp
pusha
fdivl
add
int
xchg
xlat
and
adc
rcr
push
ja
dec
or
in
jmp
cmp
push
xchg
add
dec
mov
xchg
xchg
enter
arpl
sbb
mov
es
push
mov
push
scas
jbe
add
lods
sub
cli
testl
repz
cmp
sub
sub
pop
fdivs
shlb
sub
stos
dec
repnz
push
pop
ljmp
cmc
in
jle
bnd
push
push
and
cmp
xchg
xor
sbb
xchg
clc
in
xchg
xchg
fwait
jne
add
pop
cltd
aam
push
fwait
xchg
shlb
out
dec
scas
loop
jno
jl
inc
add
leave
scas
adc
cmpsb
fs
push
xor
push
adc
aaa
gs
dec
cld
and
pop
mov
pop
ja
mov
pop
pop
fisubs
fisttps
imul
sub
es
sub
in
add
stc
sbb
daa
pop
jno
stos
fisttpl
lods
push
cs
into
jp
push
fwait
lds
xchg
into
cld
sub
or
enter
shlb
xchg
rorb
pushf
in
mov
xor
jo
and
or
mov
mov
int
int
jge
out
or
js
mov
push
out
fmuls
and
xchg
lods
mov
xor
scas
or
adc
cmp
lahf
loopne
xor
sbb
dec
lds
or
cmc
xchg
js
cmc
mov
icebp
mov
pop
mov
cmpsl
adc
lahf
ss
pop
adc
add
imul
mov
adc
xchg
stc
aas
sub
fisubl
ds
rcll
std
dec
test
roll
xchg
jmp
imul
mov
mov
mov
mov
jnp
dec
hlt
sbb
sub
sub
and
xchg
xorb
ss
or
outsb
jns
insl
add
rorb
hlt
xchg
cmp
adc
push
fistpl
xor
pop
out
sbb
add
fidivl
popa
rorl
stos
mov
inc
pop
push
sbb
fcompl
int3
jnp
push
out
xor
jmp
ds
in
adc
xchg
fwait
jae
lahf
subb
add
pop
adc
and
nop
sbb
out
jmp
ficomps
mov
inc
addl
shrl
andl
and
push
sbb
sbb
shll
addr16
push
push
and
push
xor
je
jne
subb
iret
pop
fisttps
inc
imul
mov
mov
mov
adc
ror
rolb
les
jmp
int3
fsts
xchg
fisubrl
pop
xor
add
adc
loope
inc
inc
cmp
shll
and
adc
popf
add
dec
js
js
adc
clc
xor
mov
lock
ror
or
mov
daa
orb
mov
mov
and
mov
fcoms
mov
fwait
pop
hlt
shll
jmp
inc
in
jo
scas
cli
test
dec
cmp
mov
mov
mov
dec
imul
faddp
sub
movsl
pop
or
andb
cmp
lock
mov
movsl
cmp
pop
mov
int
repnz
xchg
mov
dec
or
push
add
pusha
adc
push
sub
mov
jge
call
fwait
cli
jecxz
add
jge
scas
add
push
movsl
movl
in
dec
mov
inc
into
pushf
sbb
adc
mov
stos
sub
or
stc
jge
mov
data16
pop
cmp
sbb
movsl
xchg
dec
jmp
hlt
pop
arpl
push
sbb
dec
imul
push
mov
das
mov
jno
xorb
rorl
xchg
out
and
in
and
adc
add
aad
sbb
out
xor
xchg
repz
ret
rsm
fisttps
outsl
mov
mov
inc
aas
inc
xchg
add
sub
shlb
mov
jge
sbb
outsl
lret
mov
sbb
addr16
mov
xor
test
arpl
fisttpll
mov
nop
fadd
clc
inc
cvttps2pi
adc
arpl
aas
aaa
movsb
mov
rcll
mov
mov
out
adc
aad
pop
loop
mov
outsb
ja
outsl
jg
xchg
cli
sub
inc
fcoml
cli
imull
push
pop
lods
sub
push
cltd
movl
addr16
outsl
pop
or
sbb
out
andb
cli
insb
mov
fldl
cltd
adc
push
lcall
or
loopne
sbb
decl
mov
int3
and
movsl
notb
popa
ds
lds
pop
xor
leave
cmpsl
push
inc
loop,pt
stc
sbb
lahf
mov
ret
les
xor
test
xchg
test
mov
pop
test
pusha
fisubrs
push
or
dec
push
enter
mov
xor
and
inc
movsb
xchg
imul
fwait
lret
adc
mov
xchg
or
xor
ret
cmp
xchg
push
loope
es
lahf
jecxz
test
or
sub
jo
aad
ficoms
popf
inc
cwtl
lea
and
lcall
sti
inc
out
mov
test
lret
bound
dec
and
cmc
stos
lea
xor
mov
nop
dec
push
push
pop
cmp
test
push
lahf
inc
inc
push
out
in
jne
arpl
and
daa
xor
inc
dec
aam
pop
xlat
or
xlat
in
xchg
daa
aad
sbbb
fsubl
jp
lahf
sub
in
push
sub
xor
cmpsb
jg
movsb
cld
fcmovbe
fdivl
adc
syscall
xor
mov
sub
dec
out
inc
jp
add
push
push
push
ja
ja
cltd
std
xor
push
mov
pop
pop
test
dec
fadds
lahf
mov
imull
stos
and
lcall
sub
das
imul
jnp
inc
mov
lcall
cmc
adc
insb
in
push
jp
dec
icebp
dec
adc
outsb
add
xchg
mov
insl
push
xor
es
xchg
xchg
dec
out
jl
call
dec
jge
ret
inc
jmp
fnstcw
fcmovne
cmpsl
xor
jb,pt
sti
or
pop
out
inc
mov
scas
or
repnz
mov
inc
and
cmp
fcomps
cmpsb
mov
aaa
jmp
stos
jle
push
aad
add
xchg
in
add
lea
mov
imul
mov
lods
mov
mov
mov
icebp
sub
jecxz
loopne
lret
loop
push
mov
int
imul
inc
scas
les
cmpsb
sbb
sbb
gs
das
pusha
xchg
stc
lret
mov
mov
and
in
jge
pop
fcom
pop
push
mov
inc
and
sub
mov
push
cmp
pop
loopne
mov
xchg
cmp
fcompl
xchg
insb
xor
sub
inc
jb
sub
fildll
inc
fstpt
add
or
dec
and
js
adc
scas
and
pusha
cmp
mov
repz
jb
push
arpl
imulb
imul
cmpsl
lret
xor
aad
or
std
dec
cmpsb
and
movsl
mov
pop
inc
mov
sahf
imul
push
pop
loop
pop
daa
pop
push
xchg
dec
push
ja
pop
out
dec
dec
or
iret
sbb
subb
stos
mov
popf
lahf
inc
nop
push
addl
xor
es
lret
adc
lret
add
inc
mov
sub
dec
scas
inc
cmp
leave
mov
fildll
cmp
mov
jae
ljmp
xor
mov
xorb
mov
fnstcw
jg
pop
lret
sub
out
ret
mov
addr16
icebp
ret
ret
and
rcll
fidivrs
and
adc
pop
jge
xor
or
fwait
dec
and
into
sbb
pop
mov
dec
mov
xchg
cmpsl
das
sub
daa
fistpll
repz
loopne
jo
sbb
loop
sarl
xor
mov
psubsw
arpl
xchg
push
fmuls
insl
stc
xchg
sub
inc
out
inc
lock
out
push
dec
xor
sub
mov
nopl
mov
pop
xor
mov
jg
mov
push
repz
and
mov
popf
push
scas
iret
sbb
fnstsw
insl
in
jbe
xor
ds
xchg
pop
lock
inc
das
subl
sub
inc
rcrl
rolb
outsb
shll
or
mov
pop
inc
pushf
jbe
fs
lea
in
addl
repz
repnz
mov
pop
in
xchg
inc
test
imul
pop
imul
popf
std
sbb
jg
fiadds
mov
std
fistl
imulb
addl
cmc
lock
std
dec
mov
fsub
push
sub
jae
bound
popf
mov
and
shrl
adcb
cwtl
imul
jge
jne
js
or
pop
and
mov
fsubrs
add
mov
lods
movsb
jmp
test
xchg
and
cld
and
mov
iret
subb
jae
mov
fists
xchg
cld
and
add
lods
xlat
data16
jo
cmc
testl
jecxz
cmpsl
mov
lock
aaa
adc
loop
mov
roll
lods
scas
int3
cmpsl
add
pushf
mov
adc
ds
inc
jae
fidivl
lret
les
test
les
xor
mov
lock
jno
test
addb
push
stos
pop
cmp
push
cld
xchg
push
dec
rcl
in
push
dec
aas
cmp
jp
inc
adc
pushf
inc
iret
nop
and
xor
inc
sbb
dec
xor
xchg
addl
mov
nop
xor
jecxz
loope
jnp
inc
xlat
cmp
xchg
iret
ljmp
add
nop
jb
jmp
aad
lea
std
push
movb
movsb
pop
jno
mov
nop
sahf
or
xor
repz
mov
das
dec
movsb
inc
hlt
imul
and
mov
ret
leave
cmpsl
inc
rolb
movsb
cmpsb
out
or
outsb
jns
cmp
sub
stos
mov
or
cmp
jmp
push
fsubrs
jbe
nop
cmc
or
or
jae
xor
sub
cmp
imul
jne
mov
pop
les
jmp
xchg
lock
or
dec
das
das
pop
imul
int3
pushf
lcall
dec
or
enter
jne
addr16
xor
sbb
push
and
repnz
sbb
inc
mov
sbb
sbb
out
jnp
jne
into
sub
xchg
mov
jmp
jle
cmp
pop
cmp
add
inc
and
js
push
shll
fwait
xchg
pop
insl
fsubrl
inc
data16
mov
sbb
push
pop
pop
imul
xor
bound
xlat
xor
or
dec
adc
push
outsl
and
xchg
or
mov
lcall
arpl
and
fsubrs
rorb
loope
push
lcall
cmp
lret
cmc
imulb
xor
push
inc
sarb
sarl
popa
nop
out
pop
rep
mov
loop
add
jbe
popf
in
jne
mov
daa
adc
inc
xchg
mov
xor
and
mov
inc
or
lods
jns
pop
repz
scas
fs
push
mov
push
pop
pop
enter
in
push
adc
push
int3
and
pop
subb
lahf
repz
das
add
lret
mov
push
lods
mov
dec
out
mov
int3
jno
ficomps
add
mov
xchg
repz
mulb
push
das
pop
int
ror
jnp
repnz
daa
cli
in
arpl
or
jbe
mov
sub
jp
pop
jg
jmp
inc
pusha
mov
adc
icebp
push
mov
insl
imul
test
and
pop
push
in
stos
and
or
push
enter
xchg
fcomps
xor
push
add
cwtl
pushf
scas
jae
jge
ja
sub
add
push
loop
aad
in
cmp
jae
mov
xchg
xorl
movsb
cmp
popa
or
loope
sub
jne
push
cmp
cld
inc
xchg
dec
xchg
imulb
scas
cwtl
pop
out
aad
je
ja
push
adc
negl
shll
clc
sub
push
lea
inc
sbb
fimull
xchg
adc
int3
fisubs
inc
fistpll
dec
outsl
push
mov
dec
arpl
ds
lds
aaa
and
add
lret
aaa
mov
inc
xor
mov
sbb
mov
xlat
cmp
mov
sub
xor
and
mov
xchg
jle
jecxz
cltd
sub
fcompl
inc
mov
jmpw
mov
rcrl
aas
xor
ds
jg
add
loopne
xor
add
lods
out
pop
add
sahf
pop
dec
sbb
loope
mov
mov
loopne
in
pop
mov
jnp
mov
stos
mov
insb
pop
jmp
dec
adc
stos
and
sti
inc
dec
dec
mov
aaa
pop
popf
in
int3
jle
mov
test
aam
insb
leave
push
push
mov
out
fs
push
and
cltd
adc
add
out
sub
adc
mov
fwait
icebp
add
aaa
and
mov
movsb
cmp
loopne
push
lret
mov
jns
pop
fildll
or
outsl
sbb
xor
pop
into
ljmp
or
ret
xor
je
sarb
jo
xchg
xor
das
stos
je
hlt
scas
jno
push
and
and
sub
test
das
sbb
gs
or
jg
cmpsl
cmpsb
mov
in
pop
jle
outsb
leave
jl
sub
imul
imul
pop
inc
testl
pop
mov
adc
hlt
and
dec
mov
push
cltd
aad
fildll
sbb
mov
imul
rcr
jae
testb
cmp
clc
cmpsl
andl
adc
faddl
push
mov
scas
stos
add
push
dec
and
mov
movsb
scas
and
lahf
lods
inc
je
add
sbb
scas
push
shrb
mov
in
insl
test
xchg
pop
xchg
lods
nop
clc
xchg
cmpsb
sbb
scas
sbb
jae
sub
test
popa
xor
pushf
sub
loope
incl
or
scas
out
fstpt
pop
mov
adc
jle
sub
sahf
push
test
cmpsb
fildl
ja
test
xor
gs
push
cld
aam
and
sbb
inc
push
xchg
cs
sub
push
sahf
imul
shrb
mov
add
jle
mov
xor
mov
cmp
nop
pop
jl
movb
fcompl
fstpt
das
mov
ss
mov
pop
cltd
enter
add
pop
sbb
insl
cmp
ds
aam
jns
scas
cwtl
fld
sub
mov
pop
sbb
xor
aas
test
mov
xchg
push
jo
cmpsb
data16
int3
push
xor
jecxz
xor
or
scas
movsl
leave
adc
mov
adc
pushf
sbbb
push
arpl
jae
add
mov
int
negl
mov
adc
jmp
pop
inc
pop
cltd
out
mov
mov
loop
mov
into
or
std
es
pop
jecxz
sub
or
imul
cmp
adc
adcl
xchg
xorl
xchg
fimull
sub
and
pop
push
data16
mov
xor
mov
mov
fadd
sub
mov
pop
test
testb
and
jns
jnp
loop
jns
jbe
pop
mov
jnp
xlat
out
call
addr16
js
mov
dec
andb
cmovg
test
mov
xor
add
inc
nop
call
add
cld
out
cmp
mov
jne
popa
adc
in
mov
push
stc
repz
sti
in
ss
int
lods
jmp
scas
roll
stos
cltd
hlt
int3
sbb
cli
inc
fcmovnbe
sti
mov
ds
cld
test
and
stc
push
loopne
rcrb
cmp
sbb
loop
push
cmp
mov
pop
xchg
pop
push
fnsetpm(287
into
into
rcl
mov
pop
and
jmp
hlt
mov
cmp
test
xchg
push
dec
xchg
fiadds
inc
sbb
cld
cwtl
xor
add
push
out
add
and
cmpsl
lret
icebp
gs
loopne
mov
add
sub
or
lret
outsb
cmc
clc
lcall
stos
xor
cmp
xor
pushf
js
add
and
cli
xchg
cmp
inc
fwait
pushf
insb
test
mov
rclb
jnp
pop
loopne
lods
repz
das
cmp
clc
xchg
imul
inc
fs
mov
insb
aas
cs
xchg
sbb
movsl
rcr
or
mov
inc
xor
stos
cmp
inc
cmpsl
mov
or
jne
mov
leave
inc
or
xchg
cmp
rol
daa
sbb
packsswb
js
rol
and
sbb
pop
cmpsb
inc
or
jae
fdivs
insb
aas
jo
jge
fnstsw
enter
add
mov
jecxz
and
notl
sub
mov
xor
cmp
xchg
cmp
lds
adc
lods
jecxz
add
testb
pusha
and
int
dec
fnsave
test
and
inc
xor
xchg
int3
bound
mov
jo
test
pusha
test
fcoms
xchg
add
cmp
clc
sbb
sub
sbb
mov
sub
dec
or
out
and
je
lret
sub
std
std
dec
mov
mov
cmp
lret
mov
or
rcl
xor
push
enter
dec
jmp
inc
repnz
fstl
or
cs
jns
ljmp
and
addr16
mov
sub
ret
gs
cmp
pop
cmp
jge
sahf
fcoms
or
jle
xchg
adc
and
outsb
cld
add
lret
mov
jp
pop
sub
loop
out
push
int
push
add
push
xchg
aam
sti
les
and
cmpsl
aam
cli
fistl
push
int3
scas
dec
call
dec
xchg
call
fistpl
mov
or
test
and
repz
pop
mov
pop
jne
stos
pop
addb
jae
test
pop
jecxz
ss
push
mov
scas
aam
ja
jb
addb
mov
lock
sub
add
sbb
jge
mov
sbb
xchg
or
cli
adc
cltd
mov
jge
mov
mov
mov
je
enter
cmp
jb
or
fildll
xor
pop
mov
popf
cmp
es
andb
lret
insl
jp
xchg
cmpsl
clc
adc
mov
adc
jne
notl
sar
cmpsb
inc
adc
in
xor
mov
mov
adc
loope
in
negl
mov
stos
adc
push
push
ret
hlt
sub
dec
mov
sub
cmp
icebp
and
outsl
pop
pushf
inc
push
mov
xchg
inc
xchg
cwtl
scas
dec
mov
push
lock
mov
pop
bound
sub
inc
cmc
or
orl
mov
mov
jns
insl
mov
mov
or
cmp
push
test
mov
stos
mov
mov
push
pop
int
dec
pop
jns
xor
cmp
dec
push
movsl
pop
and
divb
mov
or
xchg
push
int
xor
mov
mov
sub
mov
pop
inc
nop
enter
test
adc
cmp
pop
sahf
jo
jmp
adc
jbe
mov
std
cmpsl
ljmp
pop
cmpsb
xlat
add
xchg
sbb
add
xor
int
adc
in
add
dec
dec
jnp
or
fs
jecxz
push
xchg
enter
jmp
mov
ja
fcomp
in
inc
sub
fnstcw
jmp
iret
mov
mov
push
popa
or
or
repnz
xchg
dec
scas
mov
and
jnp,pn
fdivs
or
out
ss
push
lods
adc
push
scas
icebp
aaa
push
xor
mov
out
loopne
pop
ret
jmp
push
mov
and
bound
mov
and
sbb
fs
jle
fs
xchg
in
mov
fisubs
add
jle
adc
test
xchg
jmp
fsubrs
mov
xor
xor
mov
ret
mov
push
xchg
xchg
rcr
inc
iret
xchg
ja
insb
xchg
jbe
push
push
or
rcr
push
stc
pop
adc
mov
mov
inc
xchg
cmp
xor
sub
pop
sub
adc
mov
xchg
movsl
ds
into
imul
or
enter
sub
mov
cmp
or
clc
ds
and
mov
mov
cli
xchg
ss
jnp
insb
mov
not
xor
bound
push
push
jne
arpl
mov
dec
pop
xor
xor
adc
out
or
push
jmp
ret
dec
lcall
jo
xchg
cmp
ljmp
push
inc
jle
fisttpll
pop
inc
jg
rol
xchg
test
sahf
aas
jb
ljmp
loop
mov
imul
out
aas
faddl
pop
mov
addl
add
push
jmp
and
test
mov
and
gs
ljmp
jbe
mov
pop
adc
in
xchg
xchg
add
sti
call
lahf
out
xchg
jmp
mov
cs
push
xchg
rclb
push
pop
pop
pushf
push
aad
addr16
shll
out
dec
hlt
dec
inc
nop
lret
outsb
pop
sti
aas
test
inc
pop
das
and
xor
cwtl
test
cli
xchg
sub
mov
ljmp
sub
xchg
scas
xor
in
movsb
xchg
or
leave
aad
lcall
fnsetpm(287
jae
mov
cmp
jns
jg
loope
mov
test
in
jecxz
push
mov
mov
adc
lea
jnp
pop
icebp
int
movsb
cwtl
xor
out
sub
cmpl
icebp
movsl
mov
inc
sub
pop
mov
subb
inc
sbb
rorb
cs
pop
int
in
xor
push
rolb
xchg
cmp
insb
test
jb
mov
rcrb
and
push
dec
or
mov
sub
sub
aam
jo
xchg
pop
ljmp
inc
jmp
pop
gs
mov
testl
lock
mov
cmpsb
adc
jmp
mov
add
lock
sbb
push
gs
in
adc
pop
daa
out
dec
adcb
nop
or
sub
sub
lret
mov
push
mov
push
jge
inc
in
stos
gs
push
popa
outsl
xchg
or
iret
int3
in
sbb
test
adc
fidivrs
add
and
in
cmpsb
outsl
cli
imul
xchg
cmpsb
cmp
pop
and
loop
adc
call
test
jb
ret
test
mov
std
dec
ds
lahf
jg
add
test
sbb
icebp
jl
pop
mov
dec
pop
fdivrl
cmp
stos
mov
pop
jmp
fldl
sub
xor
out
dec
adc
data16
incb
cld
fwait
mov
and
in
int
stos
mov
loope
mov
xchg
fsubrl
cmp
cmp
cs
dec
aaa
xchg
xor
adc
mov
je
bound
cmpsb
inc
or
cli
sahf
jge
pop
cmpsl
or
fidivl
inc
lret
add
sub
mov
pushf
mov
hlt
ja
inc
popf
stos
pop
stos
rcl
push
cli
mov
je
jg
into
xor
fs
mov
imul
xor
xchg
jns
cltd
xchg
pop
sbb
dec
push
test
popa
dec
decb
sbb
out
cltd
cmpl
mov
sbb
pop
scas
dec
add
add
sbb
mov
rcrb
mov
subl
test
repz
mov
imul
inc
int
push
pop
test
divb
dec
add
movsb
mov
lock
in
or
mov
out
and
bound
xchg
or
out
inc
ds
xor
cmp
ja
sbb
enter
sahf
pop
mov
dec
or
lcall
pop
addr16
xchg
jecxz
xor
sbb
pop
dec
scas
negb
fucomp
or
movsb
mov
sbb
xchg
pop
xchg
frstor
mov
add
pop
dec
inc
sub
push
sbb
stos
sbb
icebp
xchg
inc
mov
cmp
jl
sub
sbb
sti
hlt
inc
inc
push
test
xor
jl
lds
cmp
repnz
cwtl
sahf
fbstp
mov
mov
and
sbb
aaa
fs
adc
icebp
aad
xor
clc
sbb
xchg
lock
mov
std
int
mov
add
dec
or
inc
fiadds
arpl
mov
outsb
jle
bound
sbb
and
les
dec
fnstcw
movsb
mov
in
dec
mov
addr16
jge
bound
jne
repz
sar
aad
or
jmp
push
nop
cli
in
adc
push
std
jecxz
popf
inc
mov
in
jecxz
cmpl
push
mov
push
pcmpeqb
dec
dec
pop
repnz
push
shlb
fstp
dec
push
jp
data16
sahf
mov
into
inc
or
sbb
insl
xchg
sub
lret
mov
mov
enter
aad
int3
inc
lds
push
jo
fwait
xor
mov
fldenv
cwtl
jbe
bound
jmp
mov
pop
stos
bound
fwait
in
fnstcw
mov
decl
adc
fstps
std
lock
mov
or
push
movl
loopne
xchg
and
push
imul
xor
and
cmc
xchg
or
mov
xchg
push
dec
pop
das
ja
les
xor
movsl
or
cmp
in
in
mov
xor
and
imul
dec
cli
js
out
add
jnp
repnz
adc
cs
adc
cmpsb
push
daa
negl
pop
jl
xor
push
in
push
mov
shll
jp
cmp
je
jne
cmp
aas
lret
push
shll
or
aad
mov
jno
out
pop
sub
mov
addb
pop
inc
iret
int
ret
mov
mov
dec
inc
es
loop
dec
sub
rolb
adc
outsl
jle
lds
xchg
dec
in
sub
cmc
lret
add
leave
inc
je
add
dec
pop
push
lahf
add
je
adc
lds
arpl
int
in
inc
loopne
cmpsl
push
scas
cld
outsl
das
rorb
mov
mov
fwait
adc
lds
clc
lock
subb
je
not
adc
mov
sti
aas
inc
jg
mov
fwait
or
aas
test
mov
cld
fsubs
and
or
jb
adc
pop
cltd
inc
jge
xchg
sub
cmpsb
cmp
pusha
cmp
sbb
subb
stos
popf
cmp
in
dec
test
mov
mov
push
dec
cmc
aaa
out
rclb
imull
mov
mov
bound
aas
push
add
cli
dec
pop
or
movsl
mov
cltd
xor
cmp
fisubl
sbb
mov
dec
mov
inc
mov
sahf
sub
lock
mov
out
pusha
mov
push
or
repnz
addr16
nop
mov
mov
inc
push
jbe
pop
xor
sarl
or
in
lods
xchg
call
lock
shll
loope
push
inc
stc
jne
xchg
mov
das
sub
pusha
inc
mov
sbb
fstpt
shrl
arpl
test
call
icebp
icebp
int3
cmp
xor
adc
loopne
into
mov
fcoms
sar
jp
cs
fdivrp
repnz
daa
mov
inc
ss
or
dec
stos
stc
outsl
lds
or
pop
mov
divl
add
std
mov
xchg
jmp
and
and
push
out
and
cltd
addl
and
or
clc
inc
rcr
out
inc
adc
fcomi
mov
cmpsb
xchg
ret
inc
and
cmp
xchg
dec
sub
subl
hlt
aam
dec
movsb
arpl
add
add
in
sub
pusha
test
mov
repnz
fwait
cmp
aas
test
sbb
mov
ds
daa
lret
popf
jmp
mov
js
add
push
or
dec
sub
aaa
cmpb
cltd
sbb
cld
mov
cmp
push
mov
cmp
push
mov
adc
loope
and
pop
adc
mov
and
mulb
adc
jmp
hlt
inc
push
hlt
or
push
adc
mov
test
mov
jae
je
mov
push
dec
popf
sbb
mov
ja
dec
mov
cld
pop
pop
gs
dec
mov
adc
pusha
sbb
mov
aaa
inc
jl
cli
inc
into
insb
ja
pop
movsl
cld
pop
stos
mov
cld
xchg
adc
mov
lds
mov
xorl
mov
jb
mov
gs
dec
jo
mov
inc
dec
dec
je
ficompl
imul
nop
mov
int
cmpsl
xor
push
and
mov
cmp
repz
xchg
inc
test
popf
popf
inc
sub
sub
push
outsl
or
jno
stos
int3
cmp
inc
fwait
mov
fdivs
mov
mov
sub
dec
or
adc
jg
sahf
das
popf
mov
std
lock
aas
aad
jl
popa
sub
cmpsl
stc
out
cli
cld
sbb
stos
rorl
std
inc
push
pop
mov
cmc
scas
jae
call
insl
adc
mov
mov
pop
jae
mov
add
aad
sbb
popf
mov
pop
sub
xor
mov
pop
lods
xchg
out
and
inc
sbb
inc
bound
jmp
or
jmp
pop
je
mov
insl
cmp
jl
leave
sub
lea
pop
nop
sti
pusha
sahf
jb
adc
outsb
jb
pop
mov
mov
add
push
insb
xor
mov
dec
prefetcht2
and
jle
mov
pop
adc
adc
mov
cmpl
xor
leave
sbb
mov
and
add
cmp
mov
arpl
sbb
fisubrs
sub
dec
frstor
enter
pop
mov
push
inc
leave
scas
xchg
fistpl
decl
cmpl
dec
push
pop
xor
sub
sbb
jge
outsl
add
out
outsb
xchg
mov
iret
xor
lret
orw
xchg
mov
arpl
aas
aas
dec
gs
cmp
push
int
ja
mov
mov
cmp
pushf
sub
and
rol
incb
and
xor
cwtl
or
shlb
scas
mov
loopne
xor
xchg
idivl
and
scas
sarl
jmp
sahf
cs
push
xor
jmp
rcr
sbb
scas
mov
out
scas
mov
aas
inc
push
xchg
push
out
pop
out
ja
and
lahf
sbb
notl
sbb
jmp
pushf
mov
aad
mov
outsl
cmp
iret
test
mov
sub
pop
ljmp
das
ja
pop
iret
daa
mov
cmpsl
shrl
jecxz
lock
pop
mov
mov
int3
dec
xchg
xchg
shl
lods
adc
fcmovnb
jp
sub
mov
in
cmp
push
in
aas
or
mov
sub
cmp
out
mov
sub
int3
jae
jns
dec
iret
shl
out
jb
dec
mov
fldenv
pop
mov
lret
push
aam
js
mov
adc
ror
adc
loopne
lods
mov
or
pop
push
rolb
movl
rclb
push
nop
pop
push
jmp
js
dec
outsb
cmc
push
add
mov
and
cmp
gs
subb
mov
sahf
or
and
out
popa
pop
andl
stos
pop
dec
jb
dec
cmc
push
nop
mov
shll
lcall
jns
lret
shlb
mov
mov
movsl
xlat
mov
imul
mov
xchg
in
cld
mov
cmpsb
mov
roll
xor
sbb
xchg
cmp
je
subb
xor
movsb
int
movsb
push
shrl
pop
mov
add
push
lret
cmp
imul
or
popf
mov
and
pop
leave
adc
pop
mov
lods
rol
pop
inc
mov
sahf
fcmovnu
jle
inc
stos
xor
sbb
push
cwtl
bound
cmc
add
mov
rcll
sbb
fs
or
mov
jmp
pop
adcb
push
mov
pusha
inc
inc
sahf
sbbl
rol
cmp
push
sbb
and
pusha
cmp
inc
rclb
sahf
dec
cmc
lcall
mov
mov
repz
sub
rdmsr
sub
int
sbb
pop
lea
xchg
jno
pop
jnp
and
dec
iret
and
dec
loopne
jp
nop
test
adc
mov
mov
lret
lea
mov
lds
and
lahf
inc
pushf
or
or
jmp
or
lahf
scas
dec
ror
leave
stc
pop
pop
pushf
cltd
mov
mov
lea
cli
cs
test
in
ror
int
sub
icebp
je
pop
stos
mov
sbb
mov
test
adc
xchg
add
in
jmp
push
jno
or
rcrb
rcrb
pop
scas
pop
mov
imul
repz
xchg
and
mov
jo
mov
rcl
pop
out
sub
xlat
lods
gs
sarl
sti
sub
push
inc
in
ret
dec
push
imull
cmpsb
enter
push
inc
jae
xor
xchg
and
fldl
cmp
das
mov
jno
push
mov
jnp
addb
or
push
cmpsb
loop
pusha
mov
mov
and
cmp
push
xor
popa
sub
fwait
or
fidivs
inc
jnp
enter
mov
xabort
stos
test
fs
jp
pop
sbb
jge
cmc
jmp
clc
shll
dec
leave
pop
cwtl
mov
mov
int
or
jb
sbb
add
xlat
rclb
test
mov
or
mov
cld
cli
sbb
pop
mov
enter
jae
add
in
cmp
std
pushf
pop
popf
notb
or
lods
push
incb
jp
dec
push
mov
xchg
add
mov
adc
adc
fiadds
mov
icebp
xor
sti
mov
in
xor
mov
xor
jge
addr16
je
ljmp
jb
enter
cmp
jmp
jg
in
arpl
jno
inc
sub
mov
stos
jne
jb
push
or
shl
jp
pop
lret
das
mov
pop
cmpsl
addr16
or
mov
add
aad
jo
or
or
sbb
lods
cli
push
inc
leave
dec
rcrl
inc
adc
scas
imul
add
inc
add
fsts
or
lods
sub
fistl
pop
mov
dec
insb
mov
cmp
jmp
aas
daa
stos
mov
repz
shrb
sbb
lods
inc
xchg
ds
subb
inc
scas
daa
shll
adc
leave
cmc
xchg
mov
push
sub
mulb
ljmp
mov
and
xchg
xlat
std
lods
cli
pop
out
xor
dec
pop
in
outsl
or
pop
cld
out
xor
add
stos
mov
int
movsb
jmp
inc
lcall
leave
add
enter
and
cmp
sbb
loope
cltd
stc
hlt
jmp
je
je
pop
fimuls
imul
fsubr
jo
dec
xor
xor
mov
aam
mov
or
pause
mov
out
testl
repnz
fiadds
xor
bound
and
add
hlt
decl
pop
dec
cmp
push
xor
hlt
paddusb
sti
xor
xor
add
pop
jle
jg
bswap
xor
shrl
pop
iret
popf
insl
movb
mov
fwait
mov
inc
pop
ret
arpl
sbb
inc
data16
or
pop
mov
roll
inc
fistps
pop
sbb
cmc
mov
outsl
int
dec
mov
int3
mov
pop
cs
cli
out
jae
push
mov
or
jne
xchg
shl
dec
or
dec
cltd
movsl
or
lret
adc
cld
scas
sbb
scas
mov
or
test
rcl
or
lahf
xor
roll
xorb
xchg
sbb
shrb
mov
pusha
push
mov
fcompl
xchg
lods
negb
xchg
mov
inc
pop
cmp
mov
inc
insb
fsubrl
ljmp
push
mov
aaa
jmp
pop
mov
loopne
std
mov
cmp
fnstenv
inc
enter
dec
out
rcll
lret
les
aad
imul
cld
xchg
xor
inc
xchg
fmuls
adc
cmpsb
add
clc
repnz
popf
ljmp
rol
adc
mov
in
scas
mov
scas
sbb
outsb
ss
sar
js
push
sbb
sti
out
xchg
stc
xlat
inc
jle
stc
inc
cmpsb
jle
fidivs
push
mov
xor
push
addr16
mov
mov
fists
cmp
std
nop
stos
int3
inc
push
and
adc
div
or
ret
inc
mov
adc
das
mov
inc
sbb
cs
cmc
ret
scas
out
cmc
mov
mov
sub
pop
or
mov
push
mov
out
dec
stos
das
mov
mov
mov
notl
je
jecxz
in
jns
movzwl
int3
mov
add
mov
out
inc
jg
in
xlat
cmpsl
pop
mov
movsl
cmp
inc
sub
repz
xor
mov
shl
in
cmpb
sub
mov
fcomps
mov
inc
hlt
repnz
rorl
mov
xchg
pop
inc
push
sub
sahf
mov
cs
scas
gs
mov
fldcw
dec
jne
fiaddl
push
mov
fs
add
in
xchg
adc
daa
jo
mov
into
enter
sbb
arpl
xor
push
std
nop
adc
push
mov
cmp
cmpsl
insb
and
sbb
xor
insb
sub
push
pop
scas
idivl
cmp
mov
fdivrl
lds
jnp
and
fld
fsubrl
push
sbb
sub
je,pn
xor
and
mov
inc
cmp
mov
add
dec
sahf
sbb
dec
pushf
xor
cmp
in
adc
stos
or
mov
push
inc
icebp
sub
scas
jae
mov
jae
je
out
cmpsl
adc
adc
xor
adc
in
xor
sub
cwtl
aad
cmc
adc
and
icebp
push
fmuls
insb
mov
sbb
out
bound
xchg
cmp
fdivp
int3
pop
jo
lret
jmp
jp
icebp
arpl
aaa
mov
add
das
in
sar
pop
out
jb
movsb
cs
jae
lods
mov
fsub
xor
xor
inc
jmp
icebp
cmp
mov
sbb
mov
inc
sbb
inc
inc
fwait
stos
xchg
std
and
nop
cmp
mov
mov
add
call
mov
pop
popf
pusha
adc
jnp
insb
dec
mov
xorb
xchg
sbb
mov
jp
inc
and
out
mov
mov
pop
shrb
mov
mov
sub
lahf
movsl
int
jecxz
js
sarb
int3
aaa
dec
dec
std
and
inc
sbb
test
mov
jno
ret
add
fbld
jnp
adc
jb
je
and
das
push
mov
add
mov
popf
xlat
and
sbb
stc
flds
jne
jne
stos
in
popa
push
mov
add
or
jmp
xchg
cwtl
pop
mov
jb
ret
adc
pop
aaa
or
rclb
mull
pop
int
cmp
outsb
bound
jl
push
ror
push
mov
cmpsl
loope
mov
movsb
lock
mov
cmp
mov
cs
dec
call
pushf
bound
jno
push
repz
mulb
scas
dec
mov
testl
fstpl
or
mov
fdivr
jno
inc
ds
xlat
mov
jbe
call
std
and
sbb
imul
mov
and
mov
js
adc
push
jg
pop
xchg
sub
loope
jb
es
dec
sbb
mov
inc
out
repnz
or
gs
je
out
pushf
jnp
ds
insl
aad
adc
and
xchg
in
xor
dec
mov
inc
push
sub
xor
push
or
pusha
push
sub
mull
or
xor
aaa
lret
push
icebp
mov
cmp
ja
rolb
jnp
cld
or
in
cmp
add
pop
pop
int
pop
lret
scas
stos
rdpmc
in
cwtl
fcompl
insb
and
push
add
mov
addl
lock
xchg
push
icebp
and
cmp
dec
mov
stos
iret
mov
ror
xor
mov
jge
idivl
fcmove
aam
pop
imul
dec
repz
xor
push
std
mov
orl
subb
aaa
adc
sub
gs
mov
add
lea
lret
inc
lods
sti
test
push
fs
and
loope
mov
scas
mov
outsl
dec
popf
rolb
push
sti
clc
xchg
mov
imul
daa
pop
iret
out
mov
jno
cmpsb
jmp
sbb
or
andps
sbb
lea
or
fst
cltd
sbb
mov
jmp
or
outsl
xchg
ljmp
push
int
insb
cmp
inc
stc
popf
idiv
jb
repnz
jae
or
lret
mov
sahf
push
andl
or
ljmp
push
dec
insl
cmc
shrb
xchg
jge
imul
adc
xor
hlt
ja
jp
insb
lahf
xchg
mov
xchg
lret
xchg
mov
in
mov
arpl
aas
jg
push
fsubrp
pop
mov
fimuls
cmp
roll
in
adc
std
pop
icebp
push
xchg
fidivrl
or
jbe
iret
repz
popf
pop
adc
push
adc
test
push
sbb
mov
fsubrs
cli
les
mov
cmp
inc
jmp
loopne
or
imul
sahf
sbb
push
test
out
inc
bound
dec
jns
imull
xchg
test
xchg
jecxz
into
in
inc
test
inc
cs
inc
cmp
cmp
adc
lahf
add
mov
add
jecxz
out
cmp
xor
test
gs
icebp
cli
clc
daa
pop
pushf
lds
shrl
jno
popf
lahf
add
leave
scas
sub
jmp
mov
jmp
rorl
sub
outsl
mov
jne
insb
mov
sahf
pop
sub
repz
dec
lret
mov
in
insb
xchg
xchg
sub
jb
out
dec
sub
shrl
cld
jge
stc
loope
dec
jbe
pop
cmp
enter
mov
fxtract
inc
dec
xor
out
imul
inc
jp,pt
cmp
sbb
shlb
stc
xchg
sub
sahf
mov
fiaddl
xchg
movl
divb
sahf
xchg
ja
mov
daa
insl
jmp
pop
out
add
pop
mov
jg
xchg
inc
push
xchg
lods
pop
out
sub
test
add
mov
test
jg
pop
loopne
mov
fdivl
pop
adc
push
or
test
cld
inc
xlat
dec
push
pop
nop
mov
sub
js
xchg
sub
adc
pop
cltd
in
cs
int3
dec
repz
in
pop
or
aas
push
xchg
mov
mov
jp
rclb
pop
xchg
xor
sub
lods
cmp
jge
movsb
xor
orb
jg
ja
jmp
cmp
xchg
cmp
xchg
add
jns
mov
xorl
nop
out
jns
int
sbb
jp
loop
mov
es
movsb
outsl
sbb
adc
gs
adc
movsl
ficomps
sti
cld
dec
sbb
imul
push
xor
add
inc
xor
dec
mov
inc
arpl
imul
aam
sub
jmp
jle
and
add
repz
aad
test
pop
arpl
leave
and
cmp
out
jg
jae
shr
iret
out
faddl
ss
xor
xchg
stos
mov
mov
cmc
pushf
test
repz
lret
lea
cmpsl
insl
mov
add
sbb
pop
or
and
mov
clc
mov
cmp
xor
or
fisttps
mov
js
scas
pop
dec
cmpsl
mov
cmpb
sbb
popf
xchg
add
mov
fldcw
cmp
arpl
and
sbb
fcomi
pop
loop
pop
popf
mov
sub
imul
jo
lods
les
add
in
xchg
enter
cmpsl
aaa
rcl
or
aaa
outsl
dec
pop
lret
cmp
lods
and
lcall
xor
subl
cmp
lock
pop
jb
out
ret
imul
mov
movsb
test
or
mov
call
scas
push
adc
test
outsl
sub
ss
ja,pt
or
fwait
mov
test
jmp
jno
sbb
outsb
xchg
adc
mov
push
mov
and
lods
push
aaa
js
stos
mull
sbb
pop
cltd
pop
pop
xchg
and
les
dec
xlat
sbb
in
lock
jns
push
cld
aaa
cmp
push
jbe
xor
or
pop
or
dec
int3
cwtl
inc
pop
sbb
iret
jmp
jbe
outsl
add
xchg
pop
jecxz
scas
shrb
or
mov
sub
and
mov
adc
fsubs
push
addr16
lcall
sub
pop
xchg
cli
mov
mov
call
cwtl
leave
xchg
rolb
popf
jle
sub
addr16
cli
fadds
mov
cmp
jb
dec
iret
das
frstpm(287
and
roll
lds
pop
sti
out
int
shl
cli
clc
xchg
fsubrs
in
sbb
icebp
or
testb
jnp
mov
cmp
jmp
mov
jmp
repz
push
cmpl
sbb
cs
ss
sub
es
dec
mov
push
bndldx
adc
xchg
xor
repnz
ds
fs
adc
and
push
sbb
fldenv
sets
inc
inc
aad
cwtl
das
xchg
mov
jecxz
xchg
add
and
lret
das
iret
push
les
cmpsb
sub
ret
es
mov
sbb
mov
cmp
addb
sbb
or
inc
les
mov
push
cmpsb
test
inc
shrl
cmp
dec
out
jmp
and
popa
mov
add
adc
outsb
rorb
mov
lods
xor
xchg
mov
pop
cmp
out
movsb
fwait
in
add
add
lret
fwait
test
pop
insl
sub
repz
mov
push
sti
je
icebp
pop
ss
add
sbb
andb
enter
pop
jno
inc
aad
movsb
loope
ret
shr
push
mov
adc
mov
mov
cmp
outsl
dec
sub
push
mov
mov
cld
mov
outsb
cmp
lds
dec
mov
mov
mov
in
in
sbb
ret
iret
in
mov
jmp
insl
mov
mov
in
pop
mov
and
lods
add
or
cmp
divl
adc
or
jecxz
add
mov
or
mov
and
mov
stc
mov
cmp
push
pop
dec
out
pop
stos
cld
lcall
xchg
xor
sbb
mov
or
sbb
fwait
sar
xor
add
incb
roll
pop
insl
stos
int
call
inc
or
lds
decb
test
jb
call
xor
in
cmp
lock
imul
insb
inc
push
rep
imul
cmp
in
xchg
cmpsl
outsl
xlat
xchg
shrl
fwait
xchg
sti
sub
cli
nop
xlat
and
add
mov
mov
insb
or
push
pop
adc
pop
aad
cmp
mov
leave
inc
pop
stc
in
sbb
in
sbb
push
mov
jb
fisttpll
add
adc
cmp
or
mov
inc
push
or
call
push
adc
or
pushf
scas
cwtl
negb
dec
mov
outsl
das
std
push
enter
fbstp
adc
jns
adc
and
jg
scas
inc
inc
js
mov
or
cmp
in
arpl
sbbl
stos
sbb
cwtl
sbb
add
push
lods
mov
xchg
lock
ss
icebp
cmp
mov
std
dec
pop
dec
cwtl
mov
pop
push
in
adc
adc
or
jg
cmpsl
out
xor
call
mov
sbb
xlat
pop
sub
inc
xor
popa
push
mov
jle
xchg
rcrl
scas
repz
jno
xor
inc
addr16
sbb
fnstcw
jns
ljmp
add
mov
inc
add
jo
aad
out
push
inc
xorl
inc
orl
cmp
xchg
add
mov
xchg
pop
repz
scas
popa
pop
gs
enter
clc
mov
cwtl
into
inc
arpl
pop
jnp
dec
pop
test
rorb
cwtl
in
fpatan
repnz
lds
xor
test
out
adc
fdivl
pop
pop
cmp
out
cmp
xchg
lret
leave
jg
and
out
loop
mov
iret
xor
mov
es
fcomip
xor
add
dec
loop
div
imul
call
cmp
adc
inc
adc
xchg
lock
mov
pusha
push
mov
dec
mov
jae
inc
inc
loop
push
aad
jge
jle
repz
ljmp
fimull
movsl
sbb
fcoml
fsub
jle
scas
or
sbb
jge
popa
bound
gs
adc
mov
subl
mov
or
je
imul
pop
sarl
xor
cmc
cmp
pushf
lahf
xchg
test
add
call
or
out
in
pop
adc
test
jns
push
sub
xchg
dec
and
out
lods
out
in
and
pop
mov
sbb
sbb
cmp
add
push
adc
cmp
std
and
lds
add
js
int
add
rcrl
orl
jbe
orl
or
mov
das
pop
push
and
sbb
or
imul
mov
dec
ss
repnz
mov
rorb
imul
add
imul
and
test
xchg
push
out
das
pop
lds
inc
xchg
in
dec
mov
mov
rol
dec
and
push
xchg
int3
inc
xchg
aaa
pusha
xchg
and
mov
imul
cmp
xchg
movsl
mov
adc
pop
cs
pop
popa
decl
and
fstps
outsb
dec
je
push
mov
test
aam
xchg
int3
in
pushf
aam
jno
adc
mov
mov
mov
mov
aad
xor
cld
mov
mov
cmc
sub
in
push
push
push
sbb
mov
cmp
mov
xchg
push
loopne
xchg
les
xor
mov
cmp
fidivl
add
out
mov
fldcw
push
call
sbb
or
and
fbld
decl
icebp
xor
adc
jle
cmp
mov
inc
inc
jo
sbb
push
lock
or
ja
ja
jb
clc
ficompl
pusha
mov
dec
popa
pop
data16
mov
dec
sbb
add
sbb
lret
xor
fmull
clc
sub
outsl
aaa
cmp
cmpsb
jecxz
xor
sub
or
sarl
call
jb
sbb
jnp
fidivrs
sbb
inc
push
pop
mov
mov
rcr
lcall
mov
imul
sbb
notl
inc
lret
in
xlat
mov
mov
push
call
int
int3
fucomp
mov
jo
xor
xor
ds
shl
inc
testl
mov
lods
dec
into
xorb
cmpl
xchg
out
mov
pop
repnz
pop
push
xor
xor
inc
stc
sahf
cmp
iret
xchg
mov
fsubl
inc
dec
rclb
cmp
aam
popa
sti
rcll
in
enter
or
inc
mov
lret
mov
mov
test
or
add
loope
push
hlt
pop
fwait
mov
add
adc
subl
jne
shr
or
xchg
xchg
inc
cwtl
insb
cwtl
xor
repz
or
sub
std
sbb
sbb
pop
sbb
cmpsl
in
loopne
ljmp
ret
mov
subb
insl
inc
xchg
adc
dec
fucomi
fisubs
and
mov
cld
fs
std
lods
aaa
jg
outsl
iret
push
xor
jmp
add
xchg
rcll
adc
sub
leave
push
icebp
add
jp
jbe
sub
leave
add
aad
mov
or
neg
fiadds
mov
sbb
sub
incb
add
jo
dec
jp
mov
add
outsb
leave
movsb
mov
cmpsb
jl
and
xor
clc
inc
pop
adc
pusha
rorb
pop
fcmovbe
lahf
lods
inc
push
addr16
push
fldcw
xchg
mov
mov
inc
push
sbb
sub
enter
mov
shrl
in
push
jmp
lods
jne
in
mov
sahf
int3
sbb
icebp
lods
mov
cs
mov
psraw
fwait
push
fdivrl
call
test
mov
dec
cld
je
add
insl
call
xor
xor
dec
inc
out
loopne
mov
cltd
jns
ret
out
lret
jecxz
push
jl
jbe
or
push
mov
jns
push
jl
sbb
mov
adc
into
mov
sbb
aas
pop
adc
sub
cmp
mov
inc
lret
in
jmp
mov
xchg
fildl
in
mov
in
pop
inc
push
dec
mov
pop
mov
in
mov
xor
and
popa
outsl
mov
xchg
cmp
pop
pop
ret
jno
sub
fs
stos
add
sub
jae
dec
int
jp
popa
xor
add
imul
and
jg
jmp
shrb
dec
incb
mull
inc
jbe
jecxz,pt
in
xchg
pop
ja
lods
jg
jmp
cltd
mov
and
insl
sbb
jg
mov
stos
push
mov
push
mov
mov
push
jl
cmc
xchg
int3
and
mov
pusha
outsl
lock
in
push
pop
pop
xlat
out
or
cli
jecxz
push
cmp
pop
adc
sbb
ret
inc
mulb
adc
pop
pop
pop
jne
add
je
popa
loop
lcall
adc
ret
xchg
lock
sarl
add
sarl
mov
push
in
fcomi
loopne
out
int3
in
sbb
ret
mov
out
mov
fisubrs
stos
or
mov
leave
mov
adc
sub
cwtl
shrb
push
inc
icebp
sbb
sub
mov
mull
in
adc
test
cmp
loop
push
movsb
mov
jns
out
fistps
pop
adc
xor
mov
or
scas
cltd
fmull
enter
cmc
sbb
fdivl
leave
lahf
scas
jno
mov
and
mov
sahf
adc
cmpsl
in
add
or
stos
or
jmp
adc
lods
push
or
popa
test
fldt
xchg
aam
ja
ljmp
jo
das
dec
loope
outsl
outsl
adc
sbb
nop
lock
out
int
stc
and
sbb
jecxz,pn
popf
aad
inc
mov
aas
in
add
sub
mov
insb
das
push
out
inc
sbb
jae
hlt
cltd
xor
fwait
mov
sub
insl
xor
xor
push
mov
ret
and
adc
loopne
add
xor
enter
xchg
daa
mov
mov
sbb
dec
and
sahf
call
jl
pop
xchg
test
lds
into
pop
adc
sbb
xor
mov
xorl
jne
stos
fwait
loopne
mov
popa
lcall
lock
daa
pop
or
fs
cmp
adc
fcoms
std
out
in
iret
ficomps
push
sub
xor
repnz
add
movsb
es
mov
inc
mov
pusha
std
arpl
outsl
xchg
sbb
xchg
jns
xorb
cmpb
or
loope
sti
xor
mov
imul
xlat
loopne
pop
pop
shlb
pop
lods
ljmp
icebp
or
inc
mov
out
pop
mov
ror
sarl
mov
pop
xchg
lret
out
mov
aad
js
adc
xor
icebp
dec
scas
xchg
dec
inc
push
test
push
mov
xchg
or
pushf
fmull
mov
ss
adc
jecxz
cld
push
and
or
stos
xor
push
add
test
xor
movsb
fists
aam
ficomps
mov
pop
icebp
sbb
xchg
das
fmul
or
mov
and
ljmp
in
pop
les
loopne
shll
addr16
and
and
cltd
iret
lret
insl
adc
and
adc
cwtl
jno
push
lahf
test
and
int3
xor
or
cwtl
jnp
push
jb
in
das
jno
adc
xor
mov
xchg
dec
mov
xchg
mov
cmp
mull
mov
dec
daa
in
testl
adc
lock
jle
mov
and
stos
out
ffree
movsl
icebp
mov
mov
lods
mov
out
sub
xchg
pop
sbb
and
xor
dec
je
xor
popa
mov
adc
pop
xor
arpl
cmp
mov
lret
outsb
ds
cltd
cmp
scas
mov
xor
pop
dec
push
inc
popa
jnp
add
popf
aam
les
repnz
sti
mov
adc
inc
mov
dec
data16
bswap
inc
dec
lods
jnp
pop
inc
xchg
lcall
or
in
in
imul
jo
push
add
cmpsb
cmp
icebp
inc
repz
mov
aas
out
push
jbe
cmp
rcll
test
xchg
pop
xor
cmp
adc
cmp
mov
ret
imul
sub
into
fldt
cwtl
in
add
xchg
lods
xor
cmp
shl
add
mov
mov
stos
loope
lahf
adc
sbb
imul
adc
outsb
movsb
sub
jb
xor
call
inc
aam
mov
push
je
sbb
push
je
mov
fwait
out
lock
mov
in
and
xchg
xor
in
addr16
in
flds
pop
pop
adc
mov
jle
lods
bound
xor
cli
xchg
in
mov
leave
inc
femms
jecxz
shll
jnp
insb
mov
sbb
inc
pop
fldt
add
jmp
mov
sub
adcl
js
cwtl
xchg
push
inc
aad
sti
pop
cvtdq2ps
jne
icebp
xor
pop
outsb
jo
pxor
sbb
pop
pop
and
xchg
xlat
sbb
shlb
push
jns
icebp
mov
or
vsqrtsd
loop
into
pop
or
xchg
iret
pusha
dec
xchg
inc
iret
cmpsl
inc
push
js
imul
lcall
rol
xchg
add
xchg
rcrl
jmp
mov
pusha
pushf
andl
pushf
andl
hlt
mov
jae
adc
cmp
pop
mov
sbb
adc
cli
cld
icebp
sub
mov
leave
push
mov
jne
xor
pop
outsl
push
and
sub
mov
into
clc
dec
lock
and
cld
notl
sbb
arpl
lcall
shll
cmp
and
fwait
cmp
or
in
fmuls
rorl
test
inc
ret
mov
xorl
stc
pusha
fs
mov
ljmp
lods
notb
pop
sbb
jge
xor
xchg
clc
aas
jmp
mov
xlat
push
push
dec
loopne
fisttpll
jbe
jl
adc
and
cmpsl
cli
mov
aaa
jmp
add
addb
loope
das
xchg
pop
dec
rcll
push
aas
imul
mov
out
lret
mov
cmp
fcoml
lret
pop
iret
jns
adc
pop
or
push
aam
cmpsb
dec
fistpl
sbb
int3
xchg
jbe
repnz
arpl
bound
mov
add
pop
push
ret
xor
jno
xchg
jbe
jecxz
pop
sub
sbb
jle
or
xchg
mov
sbb
test
ret
pop
adc
aad
shrl
adc
inc
scas
mov
popa
cwtl
je
add
dec
push
fs
outsl
ja
mov
sbbb
in
mov
loop
ficoms
int
lds
int3
cmpsl
xchg
xchg
sbb
int3
stos
jmp
jle
cli
mov
mov
mov
ljmp
fnstsw
sbb
call
aad
pushf
mov
cmpsl
int
cwtl
rorb
loop
jne
xor
sahf
mov
push
lods
cs
jo
mov
jmp
xchg
fstl
into
sub
fnstenv
cmp
jno
adc
jae
inc
jns
out
inc
jp
inc
mov
inc
mov
shlb
faddl
or
or
or
mov
daa
enter
negb
cmpsb
es
adc
cli
jbe
pop
incb
push
sub
mov
iret
mov
add
stos
dec
push
add
push
mov
aam
bound
jb
lods
leave
adc
ja
xchg
popf
add
enter
scas
add
scas
xor
jne
xchg
and
inc
in
jl
das
aaa
xlat
test
cmp
outsb
insb
mov
stc
dec
dec
stos
pop
and
mov
into
add
adc
dec
fwait
push
sub
lods
pop
mov
rcl
inc
scas
repnz
and
int3
insb
xor
mov
notl
rclb
dec
mov
sub
rcl
jmp
push
int
xchg
jnp
fwait
and
inc
repnz
adc
stc
push
cmp
push
xchg
push
jbe
or
les
imull
xor
stc
sub
scas
les
dec
sub
add
push
or
fs
pop
cmp
push
hlt
in
mov
repz
mov
loopne
pop
cmp
test
adc
mov
pushf
insb
xchg
in
sahf
ret
pop
sub
adc
movsb
jns
cwtl
inc
push
popf
mov
rcrb
jns
mov
jo
in
xor
das
dec
push
adc
ss
inc
inc
inc
push
adc
cmovnp
imul
adc
push
adc
mov
mov
bnd
cmpsl
int
pop
add
mov
cmp
sbbl
mov
mov
dec
out
cmpb
in
and
or
adc
dec
and
rorl
rorb
cwtl
movsb
inc
mov
idiv
mov
test
ret
std
pop
dec
test
push
push
mov
mov
jo
inc
pop
adc
pop
rcrl
hlt
repnz
ficompl
imul
push
insl
push
orb
add
adc
into
sbb
xchg
cmpsb
pop
pop
xchg
push
xchg
and
out
mov
inc
out
lods
popf
and
js
je
sub
enter
jne
jg
pop
pop
inc
adc
xor
xchg
pop
stos
xlat
dec
mov
cmp
or
pop
xchg
hlt
scas
test
or
xchg
cmp
jnp
in
popa
outsb
push
mov
push
iret
mov
jl
imul
cmpsb
fldcw
cmp
daa
cmpsl
jg
push
dec
jnp
loop
js
adc
inc
dec
lahf
xchg
stos
lock
int3
dec
mov
or
in
bound
jl
mov
or
stc
bound
jmp
subb
inc
andl
and
fs
pop
pop
mov
cs
cwtl
addr16
mov
out
add
sbb
mov
adc
add
imul
push
test
stos
data16
in
movsb
shrl
jle
outsl
shll
int3
push
test
jp
incl
mov
xchg
pop
pop
jle
fisttpl
leave
aam
sub
mov
mov
push
lock
pop
cmp
ror
push
or
add
stc
jmp
adc
push
shl
or
jp
mov
push
push
sbb
cmp
push
adcb
mov
call
cmp
adc
jle
adc
sub
inc
inc
push
insb
and
fisttpl
icebp
outsl
scas
push
mov
ret
mov
inc
out
or
jae
push
pop
sbb
cmp
ljmp
xchg
xor
pop
sbb
xor
sbb
push
cmp
lds
outsb
adc
pop
jns
sub
sahf
js
cld
popa
mov
pop
cld
ret
jle
movsb
sbbl
ss
xor
mov
cltd
push
push
lock
add
sub
sbb
rcl
nop
lea
jle
mov
rcrb
dec
sbb
loop
mull
call
and
sub
repz
cmp
mov
fsubs
rcrb
inc
pop
push
xchg
cmpsb
aam
jno
ror
dec
ficompl
mov
add
ja
inc
insb
xchg
and
push
cmpsb
sti
lret
or
push
cmp
mov
cmp
dec
adc
jnp
andb
push
mov
stos
insl
mov
xor
sub
int
mov
mov
lret
push
bound
inc
pusha
cmp
fnsaves
xchg
fists
lret
loopne
clc
cmp
int3
cmp
cmp
add
sub
negb
gs
les
in
flds
sbb
shrl
jno
push
mov
pop
cli
fldenv
ja
cmc
or
or
jno
dec
mov
jge
adc
shlb
sub
mov
addr16
pusha
xchg
fisttpl
adc
mov
push
popa
or
adc
mov
fnstsw
aas
adc
fcoml
lcall
pop
sti
sub
movsb
cmpsl
xchg
insl
xor
push
das
daa
out
sbb
push
testl
test
push
dec
addb
stos
inc
push
xor
mulb
test
jp
sub
dec
jae
add
pop
pop
or
out
into
je
xor
push
sbb
jno
mov
xor
lock
out
add
testl
clc
push
pop
and
lcall
and
add
pop
outsl
rclb
jno
pop
cltd
lods
add
std
lds
sti
pop
dec
mov
xchg
cmp
and
lret
repnz
sti
test
dec
add
pop
dec
and
mov
call
mov
js
push
adc
push
cld
std
iret
dec
lock
scas
mov
cmc
enter
or
ret
stos
adc
pop
imul
cmp
or
stc
inc
cmpsb
leave
cwtl
pop
lcall
sub
inc
and
clc
lret
push
push
mov
inc
fstpl
cmpsl
mov
fcomps
inc
daa
sbb
xchg
flds
cltd
divb
sbb
or
sbb
out
lret
aas
out
xchg
lret
pop
mov
jecxz
in
add
icebp
adcb
addr16
sbb
enter
sti
fwait
jmp
xor
outsb
mov
mov
push
sbb
orl
adc
lahf
jo
cmpsl
popf
dec
fistpll
adc
shl
jno
iret
ficoml
mov
mov
adc
push
cmpsb
sbb
xchg
xchg
add
hlt
push
push
lret
out
gs
scas
sub
pop
sub
out
inc
xchg
outsl
subl
std
insl
pop
sub
in
xchg
push
ret
out
imull
out
mov
pop
jo
cmp
inc
pop
cmp
push
cltd
les
loope
imul
aad
sbb
lret
ljmp
xlat
mov
adc
out
xor
notb
mov
jo
jbe
outsl
xlat
mov
and
pop
faddl
inc
int
sub
or
jno
push
test
pop
or
push
push
pop
out
shll
iret
cld
pop
or
iret
lret
xor
add
outsb
orl
xor
pop
or
lds
xchg
cs
dec
xchg
add
jg
and
imul
fst
ja
xor
mov
daa
or
in
sub
rcrl
fldt
addl
fstp
dec
jnp
or
push
jo
dec
sub
mov
push
pop
aam
jb
cld
jno
adc
scas
jmp
cmp
xor
in
shll
inc
mov
lret
sub
jle
cmc
dec
test
rcrb
hlt
test
mov
mov
daa
mov
push
repz
cld
add
jge
dec
inc
xor
jmp
mov
cmp
jmp
andl
mov
jge
mov
inc
ror
and
sub
pop
mov
imul
cmpsb
mov
ror
movsb
jbe
sub
inc
xor
cmpb
ret
push
xchg
or
icebp
mov
xchg
fwait
mov
jg
popl
negl
imul
nop
cltd
inc
inc
pop
add
sti
lock
and
inc
sub
in
inc
mov
mov
call
jbe
xorb
xor
bound
sti
test
dec
rcll
int
outsb
xor
jle
repnz
push
pop
and
nop
sbbl
ss
xor
and
fsts
test
rcll
jge
sbbb
and
or
mov
pop
xor
mov
or
sub
js
test
icebp
mov
add
mov
sub
repnz
sub
cs
adc
popa
int
push
xchg
into
xchg
sub
cli
mov
lahf
push
hlt
cmp
dec
or
or
enter
pop
jge
add
adcl
aas
xchg
or
aam
dec
jg
dec
test
or
les
mov
arpl
decb
andnps
daa
cmp
xchg
hlt
mulb
or
xor
lds
mov
mov
or
insb
adc
adc
and
adc
movsl
mov
pop
pushl
add
or
int3
inc
jmp
pop
aad
enter
leave
adc
fstps
ret
sbb
sbb
pushf
mov
into
push
mov
test
sbb
jno
sbb
aad
mov
fldenv
jbe
loope
hlt
and
imul
mov
scas
cmp
andb
or
and
out
dec
mov
cli
add
ret
enter
movsl
hlt
adc
jae
popf
les
xor
mov
test
xchg
inc
enter
inc
mov
imul
lock
mov
mov
and
loopne
push
lahf
cs
nop
jbe
dec
push
fildl
cltd
adcl
imul
adcl
jmp
aaa
mov
jecxz
clc
ds
pop
jae
mov
call
cmpsl
dec
sub
inc
jecxz
es
add
adc
dec
add
push
xchg
xchg
xchg
out
repnz
shll
fsubr
scas
add
cltd
scas
mov
mov
xor
mov
mov
sbb
rcll
xor
test
ficoms
xchg
xor
stos
add
lret
or
pushf
sub
fidivrs
adc
inc
push
mov
add
sbb
ret
sub
push
ljmp
dec
mov
mov
xor
ss
fucom
dec
mov
imul
in
and
jmp
cmpsl
push
jne
cmp
jge
xchg
clc
mov
imul
arpl
sub
test
ja
mov
leave
jmp
dec
mov
daa
movsl
iret
sub
mov
sbb
pop
outsl
cmp
cmp
inc
imul
or
pop
cmc
out
pop
push
daa
cld
sarl
add
bound
fiaddl
xchg
jp
jmp
cmp
jle
or
iret
add
jle
aad
clc
leave
pop
push
daa
sub
sahf
inc
pop
and
sahf
icebp
testb
pusha
mov
arpl
mov
lcall
mov
fdecstp
repnz
mov
das
xchg
and
mov
sub
push
inc
sbb
pop
sub
icebp
call
mov
icebp
add
add
push
fwait
adcl
sub
hlt
mov
cld
sub
sub
mov
xchg
cmp
xor
outsb
int3
cmpsl
mov
jo
mov
sbb
sub
lret
in
dec
repz
pop
insb
pop
loopne
aad
sbb
jb
jnp
pop
xchg
add
sbb
pushf
aas
lds
push
test
ljmp
insb
mov
inc
or
or
repz
pushf
andb
jge
iret
jo
mov
vmread
idivl
mov
rcll
loopne
popf
lret
loopne
fsubr
stos
inc
adc
push
jmp
and
pop
sub
aas
je
mov
inc
cmc
aaa
stos
leave
int3
push
or
xlat
mov
ret
add
cmc
inc
dec
std
repnz
xchg
and
jb
mov
xchg
fcmovne
aad
xor
fisttps
jmp
dec
or
fistl
push
hlt
mov
std
outsb
xchg
push
shl
loop
test
lret
stos
jno
popf
or
in
shrb
popa
bnd
scas
loopne
js
ja
insl
xchg
rcr
leave
xchg
cmp
xchg
in
aad
cltd
push
push
cli
into
cmp
shll
dec
imul
jne
into
or
pop
jg
cmp
mov
sub
push
inc
lcall
ret
mov
or
test
inc
jmp
wrmsr
je
sub
mov
popa
enter
pop
fstpt
xchg
idivl
hlt
jbe
shll
push
clc
fwait
sub
push
mov
fildll
icebp
lods
outsl
shll
fidivrs
ds
movsb
shll
dec
cmp
push
sub
inc
inc
fbstp
pop
adc
add
sbb
movsl
rcrb
sahf
call
or
add
fmuls
sahf
loope
repnz
pushf
cmpsb
mov
inc
int
sub
mov
push
sub
mov
or
gs
mov
inc
jbe
jo
xchg
out
movsb
in
in
jge
test
pushf
bound
lods
popf
mov
add
inc
add
pop
xchg
fcomps
ret
mov
imul
out
xchg
jb
mov
cmpl
int3
mov
and
dec
lret
sub
mov
sbb
dec
out
mov
lret
pop
mov
pop
jae
push
mov
xchg
mov
mov
fstl
mov
add
add
fistl
insb
daa
xlat
loopne
popf
gs
cmpsl
dec
dec
hlt
sub
aas
int3
pop
insb
imul
enter
stos
mov
xchg
aam
rolb
jne
pop
push
sub
inc
jg
test
adc
js
push
xlat
pop
jmp
push
cltd
sub
cmp
jbe
shlb
jecxz
mov
test
mov
clc
data16
sbb
sub
rolb
xchg
xor
repz
fistpll
ficoms
nop
leave
movsl
lcall
mov
or
repnz
mov
aad
cld
dec
mov
stos
adc
subb
shr
cmpsb
mov
movsl
loopne
fildll
out
cmp
pop
ss
lcall
or
inc
pop
jecxz
xchg
decl
es
push
xor
pop
test
enter
cmp
mov
movsb
xchg
jle
add
ss
jb
out
enter
and
lea
test
jg
jg
and
or
movsl
push
add
sbbl
push
jp
push
shr
mov
mov
mov
in
cmp
cmp
ljmp
ret
movb
mov
add
xchg
xchg
pushf
sarb
xchg
rolb
ss
pop
mov
push
fnsave
clc
clc
push
xor
add
fsubs
inc
in
mov
and
outsl
mov
ret
imul
mov
enter
dec
sub
ss
fcmove
lret
aaa
loopne
pushf
pop
push
je
and
inc
cmp
sub
push
dec
rcll
test
ret
push
dec
bound
sbbb
stos
mov
call
mov
mov
sub
ret
pop
push
push
loope
pop
pop
or
xor
cmp
lcall
xchg
dec
push
test
adc
pop
iret
cmpsl
add
and
stos
shll
insl
mov
adc
lahf
push
cmpsl
dec
cmp
lahf
adc
test
xor
mov
inc
dec
jns
jmp
sub
data16
pavgw
mov
sbb
mov
mov
xor
ret
imul
xor
cmp
xor
add
xchg
xor
lock
xchg
cmp
and
sbb
inc
out
aaa
cmpsl
in
cmc
adc
or
ror
call
mov
mov
pop
enter
outsl
bound
lea
in
pop
rorb
pushf
shrl
sbb
ret
mov
xchg
hlt
mov
lret
mov
rolb
or
les
mov
cmp
adc
jecxz
add
aaa
ret
ja
cmp
je
test
mov
jns
pop
leave
aam
xor
pushf
mov
aaa
mov
shlb
sbb
mov
sbb
pop
xchg
jecxz
mov
loop
fsubrl
flds
cmp
or
gs
or
and
out
fs
sbb
popa
xor
push
cs
test
pop
cwtl
mov
add
and
xor
sbb
and
fimull
rorb
iret
push
push
push
cltd
dec
insl
clc
mov
and
dec
repz
mov
int
icebp
adc
lret
insb
dec
inc
movsl
dec
scas
pop
mov
clc
mov
mov
repnz
jecxz
jno
repz
pop
int
sbb
fistl
sbb
lret
push
les
sub
fwait
pop
cmp
out
and
ret
add
loope
push
sbb
adc
stc
faddl
jecxz
push
jns
movsb
and
jg
test
and
dec
adcl
int
cmp
js
pushf
push
test
div
lds
repz
cmpb
in
nop
repnz
mov
aam
shl
stos
xor
pop
jns
fstps
out
mov
dec
cli
incb
mov
jns
push
mov
test
lcall
test
daa
in
mov
cmp
and
icebp
xchg
mov
out
loopne
jno
sbb
and
sarl
mov
cli
xchg
mov
pop
push
mov
lcall
jle
lea
rcr
push
sbb
push
fucomp
adc
jbe
pop
or
lret
stos
addr16
dec
xchg
cmpsb
pusha
leave
xchg
pop
dec
rcl
adc
mov
insb
xchg
xchg
test
lock
int
push
cld
push
cld
nop
jns
inc
inc
les
or
insb
insb
nop
stc
std
cmpl
idivl
xchg
xchg
xor
icebp
fdivrl
sub
dec
sahf
mov
pop
mov
inc
repnz
addr16
mov
adc
ror
pop
or
arpl
repnz
cmp
or
fucomip
flds
or
inc
jg
aas
idiv
adc
sub
or
mov
sub
push
adc
imul
xor
rol
mov
mov
add
dec
in
clc
add
push
mov
gs
fdivp
clc
movsl
adcl
push
insl
popl
dec
js
mov
jne
lock
loop
hlt
pop
inc
add
in
mov
jbe
fs
cli
fcompl
orb
cltd
imull
iret
not
xchg
stos
js
mov
sub
sub
cmpl
nop
pop
inc
xchg
push
xchg
fdivrs
adc
in
xor
sub
mov
cmp
in
lods
push
stc
shl
push
sub
lock
insb
scas
cmpsb
repz
sub
cld
cmp
mov
dec
dec
mov
xchg
sub
pop
enter
loop
mov
xchg
or
test
lret
inc
xchg
sub
into
push
adc
pop
mov
jnp
xor
rcll
fimuls
sbb
push
cwtl
jp
push
lret
lcall
xlat
adc
cmp
mov
mov
push
sbb
fdivl
mov
test
cmp
in
rorl
dec
mov
mov
push
addr16
sub
cli
in
jmp
call
scas
jge
ret
js
stc
cltd
test
and
push
out
fwait
cmp
xchg
sbb
es
aaa
sub
lock
test
pusha
inc
mov
pop
shlb
push
sti
inc
inc
out
fsub
enter
stos
stos
xor
adc
xchg
cmp
add
std
es
xchg
ja
rorb
mov
test
bound
lods
mov
lret
iret
adc
insb
xchg
jecxz
loope
mov
mov
daa
jmp
ljmp
inc
fnstcw
sub
stos
rolb
add
push
inc
mov
push
push
mov
mov
dec
outsb
push
test
clc
jb
fwait
std
xor
ljmp
xchg
fst
arpl
outsb
fstpl
imul
cli
sub
mov
popf
je
xchg
xor
xchg
cmp
sarl
mov
push
loope
test
notl
add
mov
lea
lret
sbb
clc
sbb
or
or
rcll
mov
pop
or
daa
lret
ja
push
push
adc
or
dec
xor
lea
insl
pop
dec
mov
sbb
hlt
pushf
mov
scas
xor
pop
and
jae
movsl
inc
fsubl
pusha
roll
push
es
leave
jnp
dec
movsb
sbbl
cmp
std
fiaddl
loopne
in
jb
movsb
inc
adc
jbe
jns
in
cld
or
sub
and
stos
jmp
mov
adc
xchg
push
ljmp
xor
pop
pop
and
push
push
movsb
mov
lods
sahf
ss
pop
ret
and
sbbb
mov
pop
pop
xchg
shlb
pop
and
mov
xor
pushf
js
frstor
cmp
inc
lds
push
dec
aas
std
adc
ljmp
push
pop
or
and
mov
and
ret
out
lods
jl
inc
dec
cltd
mov
dec
loope
push
add
mov
jb
cwtl
mov
lods
inc
cld
mov
mov
and
jae
fldl
mov
push
movsb
mov
sti
into
mov
or
mov
push
inc
pop
insl
push
das
adc
test
pop
insb
add
and
cli
sub
pop
xchg
xchg
test
arpl
pop
out
xchg
jb
inc
adc
aad
enter
mov
aam
leave
cmp
outsl
bound
mov
push
icebp
rcl
adc
cmp
jmp
mov
call
dec
je
push
jae
rcll
sarb
jns
xor
pop
add
jg
or
lods
dec
push
push
xor
or
ds
adc
cmpsl
imul
mov
dec
sbb
mov
push
mov
mov
dec
movsb
xchg
pop
lock
pop
inc
cld
fwait
imul
xchg
bound
jno
mov
jmp
jb
push
cmp
lret
inc
or
mov
mov
adc
hlt
data16
mov
les
sbb
test
int
in
lock
lea
lods
aas
push
mov
and
push
aad
inc
pop
cmpsb
cwtl
out
jle
sbb
call
in
dec
pop
pushf
loopne
pop
push
unpckhps
jns
and
mov
inc
push
add
sub
jp
mov
mov
cltd
or
sub
cmp
inc
xchg
shll
fdivs
aas
sbb
adc
add
xor
ss
icebp
ficoml
lods
dec
inc
push
out
stos
mov
jl
pop
adc
jg
jmp
cmp
pop
inc
mov
pop
loope
dec
pop
cmp
push
nop
addr16
or
and
in
notb
jno
mov
rcrl
cmp
and
lcall
jl
stc
sub
clc
sub
cmp
add
jbe
repnz
mov
enter
jmp
jg
enter
push
icebp
sbb
in
in
xchg
mov
divb
aaa
mov
out
mov
insb
jp
stc
mov
push
xchg
sbb
aam
inc
or
push
lahf
xchg
std
lea
lds
sub
je
lods
dec
sub
sarb
in
mov
mov
addb
inc
xor
and
add
sub
sarl
pop
pop
xchg
fwait
ret
outsb
shl
jmp
add
cmp
push
pop
cmp
pop
stos
popa
add
pusha
xchg
lock
or
sub
ret
stos
hlt
sbb
jae
adc
stos
popa
and
es
arpl
imul
sub
lahf
lret
dec
sub
cmp
push
sbb
or
pop
mov
sti
or
cmp
pop
movsb
sub
loop
mov
mov
lods
stos
mov
push
mov
jae
cmpsb
adc
shrb
mov
xchg
aam
pop
lcall
jmp
rcl
dec
add
je
dec
push
sbb
outsb
sub
fdivs
jne
mov
inc
pusha
fwait
subb
pop
sbb
fldl
dec
mov
aad
add
repnz
sbb
xorb
addr16
sti
test
dec
add
mov
stos
lods
mov
push
hlt
movsb
clc
int3
sub
jo
xor
xchg
leave
push
repz
pop
pop
cmc
pop
mov
jns
mov
into
ljmp
jno
xchg
or
icebp
nop
test
pop
fimuls
movsl
pop
mov
fcmovu
js
lret
xchg
test
decb
cmpsl
fldt
test
push
jle
dec
into
push
jae
jne
add
enter
jge
mov
pop
mov
ret
fsubl
and
inc
xchg
inc
pop
fisubrl
out
mov
or
ret
test
xor
rcll
xor
or
cmp
mov
adc
xor
mov
push
fiaddl
addb
mov
daa
or
xchg
jbe
push
arpl
pop
mov
aas
inc
push
je
sub
adc
push
bound
adc
cli
sub
dec
pop
mov
sbb
xchg
movsb
mov
mov
xor
daa
test
repnz
lods
add
fcoml
incl
mov
cmp
out
sub
cmc
jo
mov
iret
das
mov
jb
popa
in
sub
push
das
setne
xchg
adc
lahf
in
cmp
dec
ds
fdiv
dec
test
stc
add
cltd
stc
movsb
dec
inc
fisubl
rolb
jmp
sub
out
xchg
insl
add
mov
add
cmp
dec
mov
cmpsl
add
sub
mov
sub
lret
xor
ljmp
cmp
xor
inc
pop
jno
adc
inc
aas
imul
mov
scas
ret
outsl
mull
ja
mov
cmp
out
fildll
dec
sub
and
test
je
push
aas
jne
adc
ljmp
ss
xchg
loop
inc
call
and
xor
lods
pusha
pop
movsb
stc
mov
cmp
xor
pushf
aam
sbb
xor
fucomi
rclb
cmpsb
mov
add
xlat
mov
cltd
rclb
cmc
xchg
sub
call
jno
xchg
xchg
dec
cmp
mov
pop
loopne
add
xor
push
mov
sbb
cmpsl
cmp
inc
sub
imul
jae
jmp
add
push
jb
mov
mov
cmp
sub
push
outsl
xlat
cli
repz
jecxz
shr
or
popf
movntps
in
xchg
loope
popf
jle
add
inc
cltd
shr
pusha
out
xor
dec
sub
xchg
popa
mov
or
test
push
mov
sti
fcmovnb
test
dec
sub
clc
bound
pushf
xlat
mov
hlt
movsb
frstor
dec
repz
mov
sarl
out
stc
xchg
addb
sbb
cltd
mov
sysret
inc
and
aam
rcrb
aas
test
hlt
rclb
adc
rcrl
jo
sub
cmc
gs
dec
imul
repnz
scas
mov
adc
sub
rcrb
inc
mov
xor
dec
test
or
jns
jo
adc
sub
kmovw
jmp
cmp
test
or
sub
sbb
repnz
test
jns
imul
inc
jne
sub
cmp
or
push
mov
rcrl
push
test
fxch
jg
repnz
xchg
pop
cmp
or
inc
dec
pop
sbb
cmp
mov
pop
pop
adc
sbb
out
and
rorb
cmpsb
daa
mov
scas
mov
pop
imul
and
mov
inc
xor
and
popf
xlat
jmp
mov
xlat
mov
mov
rol
mov
loope
xchg
inc
aam
cmp
and
or
scas
push
bound
xor
adc
dec
fwait
movsb
xor
push
mov
fwait
loopne
rcll
aad
pusha
lcall
lret
jmp
out
and
xchg
aad
les
es
rcrl
jle
fmuls
xchg
in
adcb
inc
sbb
jecxz
lea
pop
mov
test
jecxz
je
push
ljmp
in
adcl
fldenv
std
add
ret
mov
and
jl
cmpsb
add
sti
lret
or
out
lret
shr
pop
adc
push
ja
mov
or
sahf
dec
mov
fisttpll
cld
pop
pop
push
roll
movsl
ficompl
jecxz
dec
pop
ds
xchg
ja
sbb
mov
in
inc
and
mov
adc
dec
mov
pop
xchg
mov
subb
cmp
mov
fwait
or
and
ficoml
pop
scas
or
ss
and
cmpsl
and
fidivrl
es
lret
adc
or
call
into
xor
add
mov
es
xorl
push
push
in
dec
pop
inc
pop
jg,pn
inc
outsl
mov
bnd
aam
sbb
and
movsl
loop
mov
sbb
mov
lods
jne
dec
dec
dec
lods
adcb
mov
popa
sahf
pop
addr16
test
jg
mov
pusha
lret
lds
rclb
mov
popf
inc
sbb
adc
fsub
jp
pop
icebp
bound
ret
lahf
push
cmp
mov
shlb
mov
xchg
add
out
cmp
add
fwait
push
movsl
stc
pop
inc
in
out
add
sub
jmp
or
in
movsl
mov
sbb
fisubs
popf
das
movsb
pop
or
mov
popa
push
rorl
and
or
nop
ret
xchg
inc
sbb
cmp
add
inc
ss
stos
xchg
push
js
rcl
cmp
addr16
stc
mov
popf
jns
sub
cld
inc
movsl
mov
inc
stos
cmpsb
xchg
cmc
out
movsl
out
mov
add
pop
in
icebp
popa
testb
test
jae
xchg
push
fnsave
or
iret
push
xchg
and
sub
jno
repnz
xor
sub
lret
mov
pop
pushf
stc
jmp
jl
mov
cmpxchg
mov
add
cmp
insl
inc
scas
push
jnp
and
movsb
daa
xchg
mov
push
jmp
mov
xchg
sub
xor
sahf
popf
xchg
inc
adc
lods
cmc
scas
loope
add
jge
xor
outsb
mov
xor
adc
mov
fldl
gs
sub
arpl
cmp
or
scas
add
hlt
fisubrs
mov
imul
mov
pop
jae
mulb
jmp
lahf
mov
sbb
bound
idivl
dec
cmp
xchg
arpl
lcall
mov
cwtl
xor
mov
stc
jno
shlb
in
mov
lret
ret
ret
scas
jnp
jb
dec
and
fs
push
lds
rol
test
cmpsl
jmp
push
in
loop
jp
add
cmpsl
cs
clc
cmp
dec
push
jns
stos
push
sti
hlt
fxch
imul
mov
inc
leave
inc
into
fistps
cmp
out
dec
scas
test
adc
push
push
mov
xor
inc
jmp
inc
or
dec
pop
mov
mov
cld
test
scas
aad
out
inc
or
pushf
mov
ja
mov
dec
and
lcall
inc
mov
jle
pop
sti
mov
rolb
test
push
les
and
mov
rorb
arpl
mov
or
jl
loope
pop
xchg
mov
jbe
mov
stos
sbb
inc
cs
add
mov
pop
sub
push
xor
dec
adc
lret
pop
push
jae
jnp
sbb
add
cmp
ja
sub
push
pop
sbb
hlt
xchg
ret
rol
movsb
jle
ret
mov
loopne
int3
stc
je
imul
or
jns
adc
ljmp
or
ja
lods
push
test
mov
arpl
mov
das
out
and
adc
cs
cs
test
je
daa
shr
call
fwait
push
pop
inc
push
pop
adc
int3
int3
pop
rcr
xchg
cld
pop
test
sbb
lds
add
sub
adc
adc
decb
pop
sbb
insl
ljmp
pusha
adc
xor
ja
cmp
and
jmp
rorl
add
pushf
inc
sahf
sub
xchg
test
shl
adc
push
add
mov
push
rclb
imul
rcrl
aaa
int3
cwtl
icebp
adc
jmp
mov
push
xchg
mov
repnz
jmp
mov
adc
inc
adc
push
or
inc
pop
repnz
mov
mov
cltd
dec
iret
not
mov
test
dec
or
xchg
pop
bound
xor
jmp
inc
cmp
je
ficoms
xor
jns
sub
sbb
push
mov
jns
cld
push
ja
mov
adc
les
sbb
ret
jnp
mov
cmp
test
sbb
movsb
push
out
lods
lcall
dec
stos
aam
arpl
shlb
jmp
and
fwait
mov
cmp
daa
lret
pop
pusha
push
pusha
shrb
jle
inc
mov
sub
adc
loopne
adcb
adc
insl
push
repnz
rorl
nop
mov
xchg
sbb
jno
rolb
xor
ds
jg
mov
int3
mov
mov
fstl
cwtl
mov
pop
repnz
rclb
dec
pop
mov
fistps
lds
sbb
add
rcrl
ret
outsl
adc
sub
hlt
jbe
fmulp
ljmp
cmp
mov
arpl
dec
cld
jo
add
scas
push
add
jbe
and
std
sbb
push
and
jns
mov
call
and
fnsave
inc
rclb
insb
sahf
dec
setb
mov
xchg
addr16
jl
test
cmp
int3
leave
test
and
cmp
out
stos
fwait
mov
ja
sub
xchg
mov
out
aaa
inc
add
jge
or
out
lods
mov
ficoml
mov
pop
mov
jo
pusha
pop
inc
in
loopne
mov
cltd
adc
pop
mov
cmpb
mov
sbb
xlat
rolb
cmp
lods
aam
mov
je
adc
std
leave
inc
imul
sbb
mov
cmpsl
cmp
sbb
pop
pop
adc
fbld
dec
popf
mov
push
jno
push
lods
sbb
pusha
jbe
cmp
xor
adc
gs
fldz
mov
subb
xchg
mov
sub
sub
sahf
out
dec
mov
mov
mov
or
jp
xor
sbb
lods
mov
rol
outsl
flds
mov
fmul
or
cli
mov
mov
mov
fstps
ficompl
mull
push
xchg
mov
and
push
xchg
shll
fldl
js
lds
and
call
dec
sbb
flds
xchg
cmp
andb
imul
shl
enter
bound
jge
sub
daa
dec
subb
mov
dec
add
push
in
jl
push
push
pop
sar
fsts
or
cmp
mov
outsb
cmp
aas
jecxz
xor
ljmp
in
adcl
mov
sub
and
iret
stos
int
add
repz
pop
jnp
ficoml
mov
push
sub
inc
scas
pusha
or
loop
mov
add
das
lods
sub
iret
js
gs
loopne
add
pop
mov
mov
mov
xchg
add
jp
push
movsb
mov
cmp
cld
add
jo
adc
lret
mov
cmc
stc
fisubrs
lahf
jb
ret
xchg
push
jl
cwtl
and
inc
jb
cltd
push
out
jno
sbb
jb
mov
stos
push
add
mov
les
dec
loop
push
xor
adc
dec
sub
mov
jecxz
popa
sub
lsl
inc
dec
adc
jle
into
inc
mov
xchg
cmpsl
and
lds
jmp
mov
push
in
aas
jbe
xor
ret
pop
mov
mov
pop
inc
sub
jp
sub
mov
imul
js
push
insl
out
popa
inc
in
push
ret
rorb
cmp
popa
popf
fs
std
scas
adc
mov
jl
adc
scas
or
or
mov
loop
fwait
push
insl
xor
leave
fidivrs
dec
stc
pop
mov
sbbl
add
jb
enter
xchg
add
aaa
mov
fwait
push
pusha
dec
aad
jge
shl
sub
repz
adc
mov
dec
fisttps
int
mov
mov
adc
xor
pusha
lea
xchg
push
ss
in
pusha
jmp
jg
jecxz
sub
fs
push
fcmovnu
decl
xor
pop
mov
ljmp
push
icebp
leave
les
sub
inc
xchg
shll
daa
jnp
push
dec
out
test
cmp
dec
xor
cmp
xchg
arpl
loop
sar
push
dec
mov
ret
cs
or
mov
std
sub
mov
leave
dec
adc
fisttps
gs
addr16
jne
mov
sub
inc
lahf
sbb
std
insb
stos
ds
push
test
fldt
push
add
insb
fists
adc
dec
xchg
notl
vmovupd
push
das
push
add
jge
dec
filds
jns
js
daa
and
std
out
mov
mov
lcall
cmovnp
sbb
minps
pop
aas
in
pusha
bound
stos
mov
loopne
call
mov
push
mov
or
push
sbb
pop
xor
adc
sbb
fisubl
inc
mov
jle
mov
into
jle
mov
rep
or
xchg
push
in
push
xchg
fwait
add
subb
push
insl
shll
js
sbb
imul
push
push
pop
or
in
xor
lock
dec
fdivrs
mov
ds
mov
in
cmp
scas
jne
and
lods
stos
lea
andb
cmp
ja
adc
adcb
fists
pop
imul
cmp
pusha
jbe
lret
adc
cwtl
sub
cmpsl
cmpsb
jl
and
xor
or
and
lea
mov
adc
call
dec
js
dec
dec
loopne
mov
jmp
mov
out
psrlw
popa
movsl
enter
jl
mov
dec
lret
mov
xchg
jnp
jb
repz
jp
mov
stc
dec
push
enter
dec
scas
dec
push
out
ljmp
xor
or
call
nop
iret
fsubrs
xchg
mov
ljmp
leave
shll
fbld
mov
outsb
insl
xchg
sub
call
mov
das
je
ja
jecxz
das
push
cld
dec
leave
inc
cs
ffree
into
cmp
push
dec
push
dec
cmp
and
sbb
hlt
push
mov
in
pop
mov
mov
divb
ljmp
lods
push
pop
sub
xor
in
movsb
xor
stc
pop
jmp
les
xor
add
adc
xor
mov
inc
mov
mov
push
fldl
dec
or
scas
mov
test
sbbb
dec
cs
jae
add
aas
mov
dec
mov
insl
int
mov
and
mov
imul
jbe
pop
push
mov
fwait
test
adc
cmp
jl
adc
fisubl
adc
mov
aaa
and
sbb
cmc
push
insb
add
ja
das
sbb
sahf
popa
ss
int
sbb
mov
push
ret
pop
mov
outsl
push
or
lods
cld
mov
scas
cmp
xchg
mov
lret
jno
mov
push
push
lods
js
sti
adcb
cmpsl
lds
repnz
or
add
btc
fcoml
xor
mov
loopne
cmp
cmp
and
addr16
mov
push
popl
push
iret
pop
fs
push
jge
addb
jae
push
popf
rcll
popf
lock
sbb
clc
and
jg
jge
push
mov
xor
jl
repnz
push
sbb
fwait
cli
pop
in
xchg
sar
cltd
cld
dec
xlat
test
outsb
xorl
imul
div
inc
test
dec
add
adc
pusha
cmp
dec
sub
loopne
push
or
adc
shl
imulb
or
dec
and
es
int
xor
cmovp
cmp
jnp
cmpb
into
mov
add
cs
jbe
gs
mov
inc
xchg
xor
lea
rcl
mov
je
mov
push
sub
sub
xchg
test
dec
jne
aam
es
dec
push
mov
loop
xchg
dec
mov
push
dec
xorl
mov
sbb
aad
sbb
mov
jle,pt
std
add
lock
aad
xlat
fwait
mov
std
orl
mov
mov
push
mov
cmp
cmp
ljmp
sahf
cs
aas
mov
imul
sbb
cs
cmp
inc
dec
in
jnp
cmp
dec
push
sub
cmpsl
push
cmp
adc
out
xlat
xchg
cmpsl
and
add
ret
push
addl
pop
dec
inc
dec
sub
fistpl
jg
out
mov
stos
nop
xlat
repz
mov
jae
and
out
or
xlat
lret
jo
adc
clc
adc
pop
adcl
lret
mov
pop
xorb
sbb
pop
inc
add
jg
mov
shr
call
or
and
outsl
out
ret
repz
shlb
ror
dec
test
cmp
sbb
mov
inc
dec
inc
incb
jnp
out
mov
dec
push
cmp
int3
imul
test
pop
fcmovne
mov
adc
cmpsb
xor
fdivrs
iret
aad
inc
dec
or
pop
mov
inc
add
movhps
dec
das
inc
sub
sarl
shl
repz
mov
lock
or
pusha
orb
cmpsl
dec
add
inc
push
inc
xor
push
xchg
in
add
lods
push
lahf
fldenv
int
insb
mov
mov
adc
push
aad
xchg
pop
inc
jb
sahf
cmp
out
adc
lea
or
in
xchg
push
insb
or
filds
mov
sub
push
mov
sub
jl
cld
xchg
rcrb
gs
xor
mov
popa
loope
loope
mov
push
ret
lret
maxps
pop
stos
and
lcall
add
test
inc
ud1
sub
in
pop
loop
cwtl
add
test
sub
inc
lea
fcoms
out
sbb
jae
jmp
outsl
stos
bound
dec
pop
inc
clc
or
inc
enter
fsubl
jmp
cwtl
in
jg
cmc
mov
mov
mov
lods
repz
sahf
stos
xor
ja
sbb
ja
sbb
add
pop
aam
mov
inc
cmc
mov
or
xor
and
pop
fldt
mov
js
sub
add
ss
aad
fimull
sbb
int3
sub
lods
jl
mov
adc
push
xor
into
sub
shlb
pusha
sbbl
xlat
mov
aam
std
sti
lock
adc
pop
xchg
or
xchg
imul
xchg
out
xchg
sub
adc
cmp
fsubr
pop
mov
jp
icebp
xor
pop
push
mov
ljmp
xor
xchg
repz
aam
adc
je
sub
int
lock
sub
in
ja
imul
in
adc
mov
arpl
shrl
mov
or
mov
int
jge
stc
or
or
inc
sbb
sub
xor
stos
imul
rorl
lods
lea
push
pop
out
aaa
notl
cmpsb
pop
into
sti
inc
arpl
sarl
mov
mov
add
and
mov
fwait
or
pop
mov
jmp
out
divb
push
fildl
cs
jnp
dec
dec
sbb
gs
adc
out
movsl
js
dec
fldl
lea
out
xchg
lret
outsb
xchg
nop
push
mov
das
rcrb
xchg
cmp
fstps
lods
loopne
xchg
pop
inc
scas
cltd
out
js
xor
mov
sahf
lret
cmp
jns
cmp
clc
mov
test
rcpps
adc
jbe
cmp
aam
xor
jmp
shll
dec
cs
mov
adc
sbb
aaa
js
sub
lahf
mov
mov
adcl
mov
xor
insb
sahf
jne
aas
les
bound
das
cmp
sub
mov
cld
inc
ds
sahf
cmp
fbld
int3
jne
pushf
jae
stos
cmp
push
mov
cmp
dec
push
sbb
ss
adc
adc
lock
int
ret
popa
cmp
push
jp
pop
adc
inc
lock
loopne
or
subb
inc
sub
outsl
mov
pop
dec
sbb
xor
lcall
dec
jnp
pop
mov
push
inc
push
adc
xor
rcrl
add
lcall
jge
push
ret
cmpsl
push
jne
out
or
inc
movl
xor
push
dec
jbe
xchg
xchg
push
cmp
popf
lea
lods
add
sbb
daa
adcl
mov
mov
idivl
stos
mov
stos
das
mov
bound
push
scas
mov
adc
pop
in
popa
inc
cs
data16
lahf
ds
sti
popa
pop
xchg
lea
sub
rclb
or
cli
adc
mov
cld
jg
dec
sub
push
add
clc
test
xchg
or
mov
mov
stos
adc
xchg
xor
imul
nop
dec
mov
imulb
mov
mov
jl
pop
mov
popa
pop
mov
sahf
outsl
pop
into
sti
xorb
dec
fldl
jecxz
repz
dec
mov
cli
sub
pop
out
sbb
jmp
xchg
inc
add
sub
je
pop
cs
lret
lret
icebp
popa
inc
das
imul
sub
outsl
cmp
lods
or
arpl
divl
xor
out
sub
dec
fwait
or
mov
xchg
dec
xchg
sarl
inc
nop
lret
jb
mov
and
pushf
aas
push
popl
or
cmp
dec
dec
out
sbb
out
mov
mov
push
pop
outsb
mov
aas
push
push
test
sub
loop
lods
add
adc
repz
push
fidivrl
ljmp
push
aad
push
popa
jge
sbb
out
sarl
pusha
mov
scas
sti
sub
ror
aaa
adcb
stos
adc
mov
and
dec
rcl
lahf
sub
xchg
xchg
pop
sub
mov
idiv
test
jo
pop
mov
mov
and
dec
jne
ds
fdivp
insl
xor
and
inc
lret
iret
aad
imul
es
lcall
in
inc
dec
sub
cmp
or
stc
repz
orb
jae
fnsave
mov
mov
xor
dec
push
gs
and
repnz
add
pop
loopne
fisttps
adc
int
cmpb
aas
jge
ja
xor
into
dec
cmp
ljmp
aam
and
lods
add
mov
jg
pop
sub
dec
test
sub
push
imul
out
inc
mov
sbb
pop
ret
test
mov
and
mov
and
jle
jge
js
xchg
jl
int
sbb
rcrb
movsb
sbbl
xchg
fstpt
pop
pop
cmc
insb
mov
int3
pop
test
pop
sbb
aas
jmp
in
cmp
lds
jne
lds
inc
xchg
add
and
add
xchg
js
mov
push
or
inc
lock
xchg
or
and
cbtw
iret
add
dec
dec
xor
or
outsl
push
mov
add
push
xchg
pop
adc
cmp
movsl
cltd
mov
add
pop
lret
sbb
repz
xchg
data16
inc
outsl
jmp
mov
add
sahf
sub
mov
push
xor
cmp
addb
stc
shrl
repnz
rolb
fmul
xchg
pop
loope
mov
shrb
adc
and
ret
pusha
fimuls
pop
xor
ja
xchg
fstl
or
data16
in
repnz
push
sbb
push
test
je
mov
cmp
or
mov
xor
ret
xor
inc
jp
push
mov
test
cmp
mov
add
shl
pop
notb
mov
mov
jns
jmp
mov
jp
lods
adc
jae
push
inc
sub
pop
icebp
adc
adc
pop
mov
cmp
cwtl
sarb
push
or
mov
inc
out
mov
enter
test
sbb
mov
dec
mov
add
out
test
pop
mov
ret
mov
lods
add
es
sbb
outsl
adc
and
push
loope
fidivs
mov
adc
dec
push
scas
push
cmp
and
in
ss
add
ret
xor
dec
enter
lock
and
dec
inc
lea
cmp
fimull
or
test
pop
sub
push
xor
xchg
pop
cmpb
outsl
leave
adc
pop
sbb
cmp
add
mov
shrb
iret
cmpsb
in
dec
jmp
roll
jl
adc
cmp
mov
pop
or
arpl
outsl
fcomip
xlat
into
cmp
mov
push
lods
ret
sub
ja
cmp
imul
mov
push
jmp
test
sti
fimuls
cmc
jecxz
pop
adc
xchg
pop
repz
dec
iret
sub
fmuls
push
cmp
ret
jmp
mov
cvtps2pi
cmp
adc
jb
jp
cmp
push
sbb
loopne
mov
xchg
sub
dec
xchg
cmpsl
push
push
leave
mov
or
or
pop
xchg
and
sub
adc
mov
push
sbb
icebp
cmp
or
inc
out
ja
fnstsw
mov
pop
pop
out
adc
cltd
adcl
fidivs
xchg
jbe
jno
rcl
cmp
or
int3
mov
daa
lahf
fdivrs
fimull
mov
je
jne
jmp
or
popa
lock
jecxz
mov
mov
loopne
xchg
mov
pop
xor
dec
cmp
loope
testb
mov
nop
and
mov
mov
test
cltd
mov
and
push
dec
mov
mov
es
xchg
jne
pop
dec
aam
mov
mov
mov
jne
loope
sahf
push
lea
or
shrb
or
push
or
lds
add
push
inc
cld
gs
push
sbb
pop
cmp
in
out
cli
cmpsb
push
push
in
or
int3
clc
stos
push
arpl
push
jnp
movsb
cmp
enter
lret
ret
pushf
pusha
popa
outsb
testb
xchg
jbe
lods
test
mov
and
aam
cmp
das
divl
or
in
sbb
and
into
repz
push
xor
cwtl
divl
or
xor
adc
cld
dec
add
xor
clc
lock
shr
stos
aaa
push
cli
test
push
scas
sahf
lea
imul
das
inc
mov
ljmp
mov
pop
mov
push
mov
iret
or
cmp
push
outsl
xchg
inc
cmpsb
loope
std
sbb
xor
lret
pop
mov
lret
push
mov
cld
inc
inc
out
pop
sbb
popf
sbb
cltd
pop
aaa
mov
enter
lods
popa
jns
jne
fdivs
dec
mov
pusha
dec
push
lret
fnsave
sub
mov
add
xor
xchg
lds
and
lods
push
popf
lock
negb
pop
cmpsb
dec
jae
adc
icebp
out
xchg
aas
inc
sbb
mov
outsl
loope
ljmp
int
or
and
cmpsb
cmp
iret
lret
pop
and
push
push
adc
rolb
ret
lds
mov
mov
nop
xor
adc
jl
push
sub
fists
xor
sahf
push
shlb
mov
cld
gs
arpl
lods
adc
fptan
sarl
lds
out
mov
adc
xchg
repnz
mov
add
inc
lods
lds
adc
addr16
push
push
rcll
call
add
xlat
mov
test
mov
mov
adc
lods
xor
jb
std
and
shlb
ljmp
mov
adc
cmp
mov
and
add
pop
int3
std
das
mov
aaa
popa
sub
dec
fdivr
xchg
fbld
push
adc
xor
fstpt
mov
xchg
call
push
das
mov
aaa
dec
dec
or
stos
pop
xchg
mov
sub
aam
jae
aam
mov
leave
jecxz
loop
testb
inc
jns
push
bound
adc
jns
lea
js
fsubl
mov
mov
push
inc
push
xchg
inc
jns
dec
pop
jb
mov
push
push
popf
out
aaa
shl
add
inc
cmp
ljmp
jae
in
mov
push
or
out
movsl
add
fsubrs
mov
mov
in
sub
sub
dec
sbb
inc
jbe
mov
cmp
outsb
jle
sub
es
decl
fsubl
mov
and
jge
mov
addr16
mov
shl
pop
jo
cmc
adc
adc
sbb
adc
jmp
mov
xor
mov
jno
sbb
cmpsb
mov
pop
jb
sbb
cmpsb
xchg
adc
inc
popa
mov
faddl
pop
icebp
jae
pop
loope
dec
xor
fidivrs
sbb
es
xchg
pop
cmpb
dec
mov
xchg
ret
icebp
fbld
aas
mov
mov
mov
dec
ss
and
mov
dec
repz
adc
inc
addl
sub
jmp
add
icebp
lds
scas
xchg
sarl
inc
mov
or
lea
mov
cmpsl
je
iret
nop
add
cmp
pop
lods
cmp
ljmp
sbb
xchg
shlb
inc
sub
aas
dec
cmpsb
sbb
sbb
fisubl
cmpsb
loop
lds
int3
xchg
iret
lock
and
lds
push
out
xchg
sti
sub
or
mov
xchg
adc
sahf
daa
xor
or
inc
lock
xchg
in
sub
mov
jnp
lods
shll
mov
push
sbb
lcall
fmuls
adc
push
out
fcoml
jl
xchg
mov
jns
jns
inc
push
rcr
push
cwtl
mov
inc
add
adc
xor
in
sbb
add
outsb
push
dec
lahf
and
xchg
adc
cmp
fisubs
test
scas
jg
and
lret
xchg
adcl
in
test
jb
jmp
inc
add
daa
mov
xchg
in
sub
sub
push
jecxz
iret
push
lock
cmp
jl
mov
out
pop
and
mov
inc
mov
xor
jmp
sbb
aaa
movsl
adc
jb
dec
insb
jp
mov
mov
dec
xor
in
lret
add
mov
or
cmp
inc
test
test
sbb
push
pop
into
dec
jae
jbe
xorb
pop
test
iret
pop
inc
jns
jns
sysret
mov
dec
stos
lea
iret
jg
adc
sbb
jge
pop
pop
aam
jns
cmp
cld
aam
rorl
cmp
jbe
aaa
jl
xchg
nop
pop
cmpl
pusha
mov
insb
sub
inc
mov
mov
lea
loop
aad
jae
iret
cmc
jns
stos
inc
lahf
cmpsb
sbb
mov
pop
pop
push
xlat
add
idivb
and
xchg
adc
dec
cli
fldl
into
jno
pop
in
popa
cmp
sbb
test
mov
jecxz
popa
ret
jbe
sub
jecxz
mov
and
mov
das
jnp
or
je
push
push
xor
pop
and
loop
mov
sbb
lret
ja
mov
mov
movsl
push
je
ja
add
rcrb
cli
fadds
sub
sahf
lahf
pop
nop
pop
out
popa
data16
lret
ret
add
jge
jb
pusha
jle
sarl
xor
xchg
inc
outsl
dec
mov
cltd
les
inc
daa
xchg
pop
push
iret
and
das
sti
lock
inc
xchg
movb
popa
pusha
ficoml
xor
dec
or
mov
cmp
dec
addr16
das
pop
sub
push
das
adc
push
mov
push
sahf
jl
seto
xor
pop
xor
and
cltd
sub
iret
lods
jmp
sti
loopne
sub
lahf
inc
rclb
sub
dec
sti
je
push
cli
std
dec
ljmp
addb
sub
adc
imull
fld
mov
jbe
xor
xor
dec
jb
mov
push
cmp
cli
push
xchg
inc
movsl
cmp
add
shrb
mov
jg
fisttpll
cmc
stos
mov
in
inc
aas
icebp
inc
mov
mov
cmp
pop
call
mov
aaa
fstpt
in
cli
push
fidivs
loopne
das
add
dec
repz
mov
cmp
daa
subb
sbb
out
or
leave
sbb
das
movsl
jg
push
int
loop
addr16
clc
cmp
push
pusha
lret
mov
mov
ja
xchg
mov
rcl
insb
lahf
lock
or
adc
cmp
sub
xlat
out
mov
and
push
pop
pusha
and
addb
int
addr16
cld
lcall
add
cld
enter
out
js
or
cld
gs
frstor
lock
and
pop
dec
test
or
mov
dec
sahf
sub
xchg
sub
popf
in
icebp
jns
cmp
xor
xchg
mov
mov
out
inc
cmp
or
mov
jl
pop
xchg
xor
fs
insb
fwait
ja
adc
test
stc
dec
dec
lds
icebp
and
inc
popa
push
daa
push
into
jmp
jp
shlb
data16
mov
out
and
push
and
add
jae
fisubs
leave
jmp
ljmp
icebp
ret
frstor
push
aam
iret
cmc
pop
in
inc
js,pt
adc
cwtl
fsubl
and
out
nop
and
push
aam
xor
jmp
and
fistpll
ljmp
arpl
push
lahf
outsl
inc
push
scas
stos
les
loop
mov
inc
cmpsl
mov
sti
jl
inc
xlat
enter
xchg
sbb
and
mov
xor
push
adc
mov
dec
sbb
data16
xor
xor
scas
cmc
test
or
sub
dec
stos
lods
lods
push
fsts
xchg
bound
sub
test
outsl
aaa
pop
test
les
daa
inc
or
mull
adc
rcrb
loope
jecxz
dec
xlat
jbe
mov
movsl
insb
and
loope
andl
push
cmp
jle
fnstsw
arpl
push
jg
sbb
dec
stos
xchg
dec
or
shl
js
or
loope
bound
sbb
inc
shl
in
stos
and
jecxz
xor
icebp
daa
cltd
std
test
arpl
add
xchg
rcr
mov
pop
mov
mov
ret
push
and
call
mov
add
das
je
mov
scas
fmuls
mov
xchg
jecxz
loope
xchg
xchg
sub
push
popf
cmp
push
xor
pop
sub
and
jg
sub
ret
insl
dec
xor
sbb
jb
push
xchg
hlt
std
pushf
shl
jbe
xchg
call
pop
adc
and
es
fwait
inc
outsb
jg
js
negl
mov
lods
arpl
jl
sbb
loopne
into
cmpsb
sti
xor
sbb
clc
lods
or
or
out
faddl
outsl
mov
adc
shr
mov
cs
fildl
mov
xlat
in
mov
ret
add
xor
xor
mov
and
pop
leave
in
shld
and
into
cmp
xor
insb
xchg
out
out
dec
mov
xchg
sub
or
nop
add
aaa
loop
daa
ret
sbb
int
mov
cwtl
or
aaa
into
mov
xchg
push
and
push
addr16
call
lret
mov
push
fsts
cmpsb
pop
ds
lock
jns
push
push
dec
fistpll
out
int
pop
pop
sti
xchg
xor
or
xchg
sar
jno
xchg
roll
adc
inc
hlt
jae
sbb
popa
inc
rorb
push
mov
and
ss
cs
sbbl
sbbl
sub
mov
icebp
and
pushf
sarl
sub
scas
call
jg
sbb
pop
outsb
sub
ja
je
and
mov
popa
jb
lcall
mov
dec
adcl
subb
or
test
sub
cmp
jb
mov
shlb
sub
jp
or
sbb
pop
push
enter
push
or
pop
pop
add
out
gs
inc
cmc
lret
sti
fidivrl
xor
pop
sahf
push
sbb
inc
mov
mov
adc
push
push
pusha
data16
out
inc
outsl
cmpsb
mov
out
mov
xor
push
lret
sbb
ss
sub
mov
rorb
mov
jmp
dec
adc
cltd
pop
insb
jl
dec
ss
xor
mov
pop
jg
mov
adc
movsb
or
jle
dec
xchg
mov
inc
pop
mov
xchg
stc
inc
jecxz
mov
pop
cmp
pop
pop
or
jns
inc
scas
adc
xor
fsubl
mov
mov
pop
jp
inc
fldcw
pop
add
arpl
mov
xlat
xchg
jmp
repz
xchg
cmp
es
sbb
cmp
jecxz
cltd
das
sbb
cli
and
mov
icebp
mov
lahf
iret
lods
sbb
into
push
fistps
dec
jns
inc
mov
mov
in
sti
outsb
xor
inc
popa
jo
fisttpll
jg
rclb
fbstp
pcmpeqw
jb
lods
loope
mov
push
cmp
jne
mov
pop
cld
sbb
imul
cmp
cmp
jl
or
mov
clc
and
adc
sbb
pop
jecxz
push
sti
jb
out
mov
xchg
loopne
in
or
xor
stos
push
ja
insl
loopne
mov
ds
imul
fs
xlat
mov
mov
int3
or
pushf
movsb
push
iret
mov
add
adc
xchg
cwtl
sbb
mov
sub
in
jge
push
nop
mov
insb
pop
arpl
int
addr16
xchg
fiaddl
xchg
mov
lahf
les
ljmp
sbb
ss
dec
rcrb
test
push
inc
gs
out
add
inc
add
xchg
in
push
rcrb
popa
dec
mov
rol
push
sbb
pusha
jl
xchg
pop
mov
out
test
fmul
inc
mov
sub
xor
push
xchg
xchg
sub
aad
xor
stos
push
popw
add
xchg
push
xor
fmulp
push
jb
mov
jo
repnz
sbb
mov
int
xor
loop
lods
mov
outsl
or
xchg
xor
ret
jge,pn
mov
insb
je
stc
xchg
test
stc
xor
and
nop
stos
or
or
and
xor
jl
out
lcall
sbb
add
movsl
cmpsl
in
adc
lea
sub
lock
addb
insb
lcall
cmpsl
dec
pop
sbb
insb
sub
and
jg
adc
mov
fmull
cld
pushf
sub
daa
push
push
out
fnstsw
mov
mov
push
nop
stos
movsl
or
xor
push
push
jmp
std
xchg
rcrl
push
xchg
push
push
mov
inc
pop
pop
dec
ja
xchg
jno
dec
push
mov
lret
jae
pop
repz
inc
in
jle
cmpsl
push
scas
data16
xor
jmp
xchg
inc
hlt
jno
jns
sub
and
mov
inc
pop
aas
repz
imul
loopne
xor
jge
xlat
rol
jb
outsb
and
and
mov
loopne
gs
mulb
es
sti
mov
lock
imul
jne
mov
push
mov
or
inc
leave
lret
ss
les
add
cld
pushf
bound
add
push
loope
lods
call
cmc
test
je
out
movsl
je
fistps
ljmp
mov
jecxz
in
cmp
roll
cli
and
push
pop
ja
sbb
add
adc
icebp
sbb
adc
outsb
cmpsb
xchg
mov
mov
in
inc
sbb
fsubl
mov
pop
imul
sahf
jecxz
pop
test
sbb
test
inc
pusha
add
mov
pushf
cmp
in
mov
inc
adc
or
lcall
dec
cmc
daa
push
push
das
and
sbb
outsl
inc
sbb
cmpsb
test
enter
jecxz
and
sbb
add
cltd
xor
mov
jmp
leave
cmpsl
lods
fisubs
or
dec
push
add
jle
or
mov
mov
mov
cltd
leave
fiadds
jmp
in
sub
leave
out
lods
lods
jp
or
call
cmp
sar
mov
push
xchg
fildl
add
inc
xor
sbbl
sub
cmp
cli
out
shll
adc
popf
dec
aad
in
push
test
lahf
ja
imull
cld
and
and
scas
into
js
push
xchg
jl
arpl
xor
test
adc
push
out
dec
out
lret
and
mov
arpl
clc
sbb
inc
add
inc
mov
sarl
cmp
push
lret
push
add
adc
addl
mov
cli
lock
fildl
stc
sbb
fstps
jecxz
fnsetpm(287
mov
and
mov
ss
jge
fs
jmp
xor
lret
or
in
push
adc
stos
dec
imul
push
andl
int
jle
aad
adc
mov
mov
ret
jno
mov
ret
popf
sahf
jo
sub
loope
adc
push
xlat
mov
xor
fildll
cwtl
xor
dec
dec
jp
or
mov
mov
pop
push
jo
outsl
cmpsl
or
lds
insl
iret
or
imul
sub
dec
loopne
repnz
mov
shlb
in
rcrb
fldt
mov
sub
in
pop
lret
iret
cwtl
and
cmp
or
jge
xchg
push
dec
ss
mov
aam
shl
int3
jmp
push
mov
dec
or
insb
dec
enter
shr
push
push
pop
dec
mov
add
cmp
out
and
call
je
add
adc
cmc
push
ret
add
pusha
lods
iret
dec
insb
mov
std
add
sti
pushf
adc
movsb
ja
push
lock
mov
fistpl
scas
mov
mov
add
inc
sarl
and
cmpsl
push
test
outsb
push
sbb
out
mov
xor
pop
and
mov
test
in
push
je
enter
in
mov
aaa
das
mov
mov
mov
pop
sub
push
aas
adc
lock
push
loop
mov
mov
std
push
sub
jecxz
adc
fldcw
cmp
aam
ret
dec
shrb
pushf
lds
sub
mov
inc
loopne
lahf
mov
sarb
cmp
repnz
loope
aaa
xchg
inc
loopne
stc
in
sbb
xchg
dec
and
std
push
xchg
incl
xor
lcall
jl
pop
mov
gs
daa
decl
xor
es
cs
sbb
mov
imul
enter
xor
push
pop
in
insb
cmp
inc
iret
mov
cwtl
jns
pop
stos
movsl
loope
gs
jae
arpl
adc
dec
xor
xchg
neg
test
pop
dec
stos
iret
rcll
enter
and
shl
xchg
pop
jbe
dec
pop
mov
pop
fs
jno
add
jge
int3
scas
sti
and
sub
mov
fstpt
loope
dec
punpckldq
push
mov
jg
push
enter
shll
mov
fidivl
fimuls
mov
sub
jl
xor
pop
push
sub
mov
push
iret
and
mov
xorb
in
sbb
and
les
dec
dec
push
test
in
mov
jnp
in
test
fs
jae
jbe
add
loope
mov
loopne
loop
mov
lea
cmp
fistpll
aas
fbld
jno
jmp
adc
nop
dec
js
mov
adcl
xchg
jno
outsl
cmp
test
stc
negl
sub
out
inc
imul
sarl
or
cli
arpl
cmp
mov
jge
adc
adc
aad
mov
push
sbbb
adcb
jb
push
mov
pop
mov
ds
xor
jno
aam
test
daa
insb
mov
mov
mov
xorb
cmpsb
add
call
pop
inc
cmc
cld
test
adc
push
mov
dec
and
sbb
popa
pop
call
xchg
xor
xor
fucomi
fwait
leave
xor
push
xchg
lahf
call
jbe
call
xchg
cltd
push
daa
xlat
ficoms
fdivrl
nop
int
jl
out
push
adc
mov
cmp
push
out
ja
call
aaa
pop
rcll
mov
sbb
and
adc
jmp
movsl
call
addr16
add
pop
sbb
ljmp
push
push
in
push
add
lcall
mov
popa
in
cli
scas
movsb
adc
lea
mov
or
lock
inc
int3
sub
outsb
add
movsb
or
clc
xchg
adc
bnd
sbb
ja
lods
clc
dec
shr
adc
jns
lods
stc
je
lock
jl
cmp
shll
adc
clc
loope
add
repz
push
push
mov
lods
and
mov
jp
cmc
lods
cmp
add
jl
sub
fildl
xchg
dec
push
inc
mov
xor
add
push
sbb
cmpsl
mov
in
and
xchg
push
int3
mov
pop
lret
adc
or
mov
fnstenv
dec
icebp
testl
push
shll
dec
filds
aaa
and
and
test
mov
jae
pop
xor
imul
lock
stc
push
jge
ljmp
daa
enter
add
xchg
adc
jne
pop
xchg
or
xor
les
sahf
out
jl
pusha
inc
test
test
fsts
cmp
fdivr
stc
jle
mov
xorl
xchg
ljmp
popf
dec
dec
into
arpl
out
mov
rcrl
xchg
je
in
insb
jbe
mov
cmp
loop
mov
stc
shlb
and
sub
add
and
int
and
mov
pop
mov
mov
aaa
push
inc
lock
test
mov
xchg
test
xchg
adc
repz
adc
cmc
mov
mov
add
stc
xchg
jp
mov
mov
and
aaa
cmp
aam
nop
adc
test
sbb
mov
adc
mov
daa
stos
mov
data16
push
mov
add
lret
jo
cmc
push
inc
and
test
testl
out
inc
mov
cmpsl
fisttpll
ret
pop
xor
and
lods
cli
addr16
push
or
push
inc
adc
jno
shll
mov
mov
out
inc
and
ror
mov
inc
push
jl
add
and
ficompl
lods
dec
lahf
insb
jno
out
and
cmp
push
add
scas
addb
ret
sti
enter
pop
and
cmp
imul
loope
push
cmp
xorb
push
push
ret
mov
ja
mov
insl
sbb
ja
or
shll
fnstcw
adc
and
xchg
or
dec
pop
push
or
idivl
stos
mov
or
ljmp
jae
adc
and
negl
pop
mov
daa
cmc
add
jmp
dec
incb
scas
and
int
push
mov
inc
push
push
mov
mov
mov
test
clc
cmpsl
mov
push
xor
jnp
and
outsl
add
addb
inc
push
hlt
cmc
xchg
mov
pop
call
into
iret
jmp
sbb
fwait
mov
aad
mov
xchg
dec
adc
loope
shl
stos
xor
push
mov
decl
xchg
xchg
aad
vmovapd
shll
xchg
loop
cmpsb
test
mov
jmp
or
xor
xorl
test
push
dec
mov
mov
push
and
push
lahf
pop
add
sbb
or
mov
push
shr
fcoms
stos
loop
insb
sub
hlt
movsl
scas
bound
or
jg
idivb
xor
and
pand
inc
cmp
mov
gs
mov
sbb
sub
test
cmp
lret
loope
in
xchg
add
pop
clc
dec
test
into
clc
pop
inc
test
cmc
insb
aaa
out
out
fcompl
arpl
sbb
ljmp
das
icebp
das
and
jno
pop
je
repz
pop
mov
ret
sbb
test
push
movsl
sub
cmp
cmpsb
mov
pmuludq
or
add
or
add
push
xchg
pushf
cmp
leave
xchg
xor
lods
outsl
data16
jns
mov
sub
aam
icebp
in
sti
sbb
andl
xor
xchg
adc
mov
push
mov
call
outsl
mov
gs
inc
loopne
in
js
push
mov
dec
shll
jge
add
popa
popf
out
inc
dec
mov
xlat
outsb
aam
xchg
xor
adc
cltd
repnz
mov
ljmp
sbb
clc
mov
and
popl
mov
mov
xchg
push
add
fidivs
aam
out
mov
sub
movsl
ljmp
mov
cmpsb
out
push
cmp
inc
mov
shl
lret
push
jmp
daa
sub
dec
push
sbb
rolb
repz
mov
inc
rol
test
data16
mov
inc
xor
ret
xor
loop
loop
mov
jb
add
dec
mov
cmp
xchg
or
fwait
push
mov
xor
xchg
mov
push
push
sub
push
lahf
and
mov
js
jp
push
fistps
or
xchg
loop
scas
test
scas
mov
sbb
push
jae
jae
icebp
xchg
outsb
shl
pop
test
dec
sbb
clc
inc
mov
xchg
inc
lods
call
jnp
repz
cs
cwtl
xchg
mov
push
or
in
scas
iret
xchg
lcall
mov
mov
mov
sub
inc
mov
lret
or
sbb
jno
filds
imul
xor
jo
inc
popf
lea
dec
xchg
push
ret
inc
in
adc
fs
adc
inc
push
push
dec
imul
pop
out
hlt
and
stc
sbb
jle
inc
ds
mov
pop
mov
xor
movsb
add
mov
add
int3
std
fwait
orl
scas
fcomi
mov
add
orb
pusha
push
insl
divl
fadds
dec
cmp
insb
test
adc
mov
shll
inc
pop
add
xlat
test
cld
out
cli
movsl
pop
dec
hlt
add
adcl
mov
scas
push
xchg
jge
arpl
mov
call
pop
repz
fwait
cmp
imul
mov
les
setb
es
ret
cmp
sbb
jbe
lods
sub
adc
cmp
iret
xchg
stc
shrl
or
sub
jnp
push
into
push
or
and
lahf
pop
ret
imul
sbb
clc
sub
shr
push
daa
mov
pop
daa
xor
xor
sahf
inc
ficoml
enter
jno
pop
push
out
mov
lds
cmp
test
loope
xor
das
adcl
mov
es
loop
jg
test
cmp
sub
arpl
loope
sbb
mov
push
test
call
call
fcompl
int3
push
pop
xchg
lods
lcall
mov
ds
stc
and
mov
mov
mov
test
pop
pop
inc
dec
fstpl
iret
icebp
mov
pop
mov
jecxz
and
lock
repnz
mov
cwtl
sbb
fdivs
bound
test
push
aas
cmp
mov
mov
hlt
es
pop
mov
sahf
xor
xcrypt-cfb
cmpsl
addr16
mov
push
mov
inc
cmpsl
sub
imul
or
ficoml
bound
mov
or
stc
mov
and
fimull
pop
call
and
jns
cltd
add
cmpsl
je
es
scas
roll
mov
inc
adc
pop
std
cmp
jb
out
or
rolb
fists
or
jmp
lret
loopne
add
push
test
mov
dec
nop
xchg
in
dec
mov
out
pop
mov
jo
inc
xchg
cmc
push
xchg
push
loop
jge
xchg
sub
mov
cmc
or
cmp
std
test
in
jbe
fdivrl
adc
push
adc
leave
push
fisubrl
push
add
in
xor
test
shll
in
mov
pop
mov
mov
in
xchg
mov
xor
clc
jns
xchg
sahf
icebp
lods
adc
sub
jmp
test
jbe
mov
fsubr
cli
fnclex
mov
repz
cmpsb
pop
sbb
xor
mov
pop
sbb
sarb
xchg
idiv
sub
pop
mov
aad
push
shl
lret
sbb
mov
adc
lea
leave
daa
mov
in
adc
push
mov
mov
js
xchg
out
fnstenv
pop
cmpsb
mov
test
cmpsl
or
pop
inc
insb
jbe
jae
stc
shl
mov
test
rcrb
mov
ds
retw
loopne
stc
inc
lods
pop
mov
cmp
and
pop
mov
mov
add
adc
sbb
in
jmp
jmp
inc
mov
or
cmp
jmp
xchg
mov
xor
jae
call
aam
add
dec
pushf
xchg
dec
roll
xor
ret
cli
or
ja
pop
je
fimull
sahf
mov
or
outsb
adc
lods
pop
in
out
xchg
lret
xchg
in
jge
sbb
add
repz
stos
push
inc
or
sbb
pop
or
push
cmp
dec
aad
cmp
cmpsl
into
jo
gs
outsl
mov
stos
repnz
inc
out
rorb
mov
ja
in
xor
mov
jb
push
cmpsl
mov
xor
or
mov
fsubrl
ljmp
sub
cli
or
xchg
repz
pop
cwtl
das
or
inc
call
lock
sarl
dec
sti
mov
or
xor
pop
xchg
fwait
mov
pop
or
ss
and
xchg
lret
gs
xor
fdivrl
mov
lea
push
adc
inc
lret
paddusb
rcrl
add
jae
push
gs
push
cmp
inc
in
or
mov
mov
mov
inc
lea
fstl
xchg
repnz
mov
push
imul
lret
cwtl
out
or
dec
sub
repnz
cmp
gs
or
xchg
adc
js
aaa
mov
xchg
in
mov
adc
testl
mov
pop
int3
cmp
dec
xor
nop
inc
vmaxss
mov
stos
imul
sbb
jno
xor
add
popa
inc
xchg
pop
ret
lcall
adc
js
pop
rcl
xor
dec
jno
jmp
push
aas
pusha
push
push
hlt
out
hlt
hlt
mov
mov
push
rclb
mov
cli
dec
je
jno
jae
inc
push
push
fwait
or
in
add
gs
push
dec
fdivr
jbe
stc
mov
jno
push
and
das
in
pop
popa
lret
dec
cli
jp
jecxz
ret
fsubr
bound
data16
pop
dec
jle
ret
pop
dec
mov
cwtl
das
shll
dec
fisubl
test
enter
movsl
mov
leave
xor
subb
rcl
inc
mov
jg
sbb
out
push
xabort
push
push
xor
stos
dec
dec
jl
mov
xor
iret
shll
adc
std
xor
mov
cmpl
int3
adc
cmp
repz
lods
aas
jne
xchg
lret
xchg
dec
pop
jle
loope
xor
add
lahf
jl
shlb
mov
lcall
pop
in
out
dec
mov
push
mov
repz
xchg
hlt
in
call
dec
fcomps
int3
jae
std
mov
daa
addr16
mov
xchg
ja
fdivp
or
int
mov
push
xor
pushf
arpl
jl
xor
cmp
push
mov
jns
mov
imul
pop
data16
stos
inc
test
nop
pop
sub
pop
popf
arpl
rcrl
mov
cltd
pop
cwtl
add
push
cli
ss
popa
xor
dec
xchg
dec
into
pop
xchg
out
push
and
or
lret
push
in
sbb
cmp
cltd
mov
cmp
daa
fs
arpl
mov
cs
sahf
aad
mov
js
jle
jne
sbbb
das
inc
out
sqrtps
xor
sbb
jo
xor
cmp
mov
or
mov
cmp
ret
pop
fdivrs
add
mov
subl
in
call
xchg
lds
hlt
adc
xor
jnp
pop
jns
nop
xchg
mov
rcl
adc
je
call
fdivl
stos
loop
sarl
clc
xchg
daa
mov
pushf
outsl
dec
hlt
xchg
xchg
xchg
gs
out
fs
jge
and
pop
jg
xchg
out
fimuls
jo
ret
lods
cmovnp
xor
pop
push
xchg
sbb
mov
mov
dec
in
jnp
popa
jl
sub
scas
jo
pop
mov
sub
sbb
jae
jns
daa
sbb
mov
pop
inc
out
dec
fsubl
cmp
popf
fwait
pop
in
xchg
mov
and
shlb
or
fcmovnbe
iret
call
jmp
mov
xchg
push
shlb
adc
add
pop
div
into
mov
popa
cmp
jb
xchg
test
push
imul
sbb
aas
icebp
out
dec
ficomps
cmp
ret
ret
into
movsl
cltd
sbb
into
popa
gs
jp
lret
int
clc
bnd
addl
lret
sbb
scas
xor
lods
lret
ds
into
adc
arpl
repnz
mov
ds
adc
cwtl
outsb
std
lock
xchg
jl
mov
push
sub
mov
mov
aam
mov
mov
dec
pop
push
cmpb
xor
or
and
jb
pusha
mov
add
cmpsl
sbb
nop
int3
incb
stos
jmp
push
outsl
pop
bound
or
out
add
jae
nop
call
push
xor
les
adcl
loopne
and
dec
fbld
aam
xchg
xchg
fiadds
sbb
cmovb
fldcw
setge
adc
call
insl
dec
cmp
ja
stos
xor
mov
mov
int
cwtl
jl
aad
xchg
pop
jno
push
inc
xchg
mov
push
push
fcomi
pop
push
or
shll
cltd
in
inc
hlt
std
daa
fmul
mov
jmp
test
scas
and
and
sti
jecxz
pop
sbb
lahf
bsf
push
and
xchg
cmp
or
jbe
in
test
jecxz
pop
jl
divl
es
cmp
cwtl
jnp
or
repz
jmp
icebp
push
mov
jle
jb
cmc
sub
rol
sub
xor
cmpsl
loope
push
jg
pusha
int
test
imul
roll
jecxz
daa
sahf
es
jle
ret
xchg
ss
lods
push
and
fisubs
dec
stos
sbb
adcb
dec
pop
loopne
dec
mov
stos
mov
sub
jb
movsl
sti
pop
xchg
push
jecxz
ljmp
sbb
inc
movsb
jle
jmp
test
arpl
sub
inc
or
add
jmp
lahf
icebp
push
jge
inc
push
fsubrl
xor
lahf
push
cmpsl
add
imul
mov
and
xor
xlat
pop
lret
out
dec
gs
mov
cmp
or
xor
add
inc
lcall
leave
int
scas
scas
es
test
or
cmc
xchg
lods
push
pop
xchg
hlt
jle
roll
lods
insl
test
mov
sub
adc
shlb
or
fwait
ljmp
ret
sub
call
push
or
dec
push
lret
in
mov
andl
mov
sub
incl
and
sbb
adc
dec
and
pop
push
push
and
inc
sbb
popa
xor
repnz
cmp
aam
stc
jp
sub
mov
scas
push
jae
push
mov
xchg
push
shrl
test
mov
enter
lds
mov
insl
aad
cmp
lods
int3
mov
pop
nop
fwait
in
js
add
sbb
push
jo
lds
adc
lahf
jno
jge
aad
pop
xor
aam
cmc
pop
mov
sbb
push
out
jbe
add
inc
push
mov
sbb
xor
cmp
push
dec
and
inc
aaa
mov
data16
push
cmc
mov
xchg
mov
xor
lods
push
cld
push
push
push
call
xchg
pop
test
jae
push
pop
sbb
icebp
lds
add
and
jno
inc
push
push
xchg
cmp
sub
lret
stc
jno
js
arpl
mov
or
repz
mov
push
test
inc
mov
sub
push
loope
mov
cs
test
pushf
andl
lock
jae
adc
add
sbb
js
push
in
or
cmc
scas
mov
sbb
test
scas
xor
and
fcmovbe
arpl
and
jle
dec
add
xchg
fstpt
push
xor
jno
and
sbb
pop
mov
adc
lods
in
ss
xor
loope
xor
ljmp
sti
sbb
idivb
or
stos
test
addr16
shrb
mov
test
jle
push
xchg
aas
and
mov
fsubr
xor
and
sub
cvtps2pi
rclb
jp
cmp
push
imul
and
adc
fidivl
popf
mov
xlat
ret
aaa
sub
ror
push
xlat
ljmp
mov
movsb
mov
aaa
popa
xor
dec
push
cmp
filds
xor
outsl
mov
std
xor
cmp
push
adc
lret
sub
roll
std
sbb
cmc
inc
mov
sarl
sub
jo
pusha
stos
push
ds
push
rcrb
sub
stos
in
jle
dec
xor
push
dec
mov
adc
lods
push
dec
popa
pop
xchg
adc
int
xchg
out
stos
dec
int
int3
jns
icebp
add
pop
call
clc
xor
orl
cmp
fisubrl
idiv
sbb
sub
cmp
jp
call
aaa
sbb
fwait
mov
and
add
mov
jnp
repnz
inc
cs
iret
pusha
pusha
insl
sti
mov
icebp
mov
dec
in
jle
das
mov
add
shlb
xor
inc
out
xchg
jg
mov
pop
mov
mov
pop
jo
orb
sbb
inc
push
test
ljmp
xchg
pop
test
and
int3
xchg
dec
pusha
into
mov
push
test
jp
xor
movsb
cld
out
xchg
fistpl
loop
loop
ror
mov
sub
xchg
push
cmpsb
xchg
sub
push
sub
xor
mov
push
pop
mov
js
adc
mov
xchg
stc
inc
sub
cmc
mov
push
dec
xor
push
push
out
or
lods
ds
mov
mov
notb
inc
push
push
push
scas
jmp
mov
sti
sti
push
or
clc
and
and
faddl
sbb
jmp
lahf
test
xchg
int3
leave
push
xchg
ja
scas
sbb
lret
mov
jne
cmp
insl
inc
fisubrl
mov
xchg
add
loop
xchg
sbb
cmpsb
cmp
mov
fwait
cltd
pop
test
inc
repnz
ret
push
stos
repz
ret
int3
scas
adc
fwait
js
xor
cwtl
pop
push
in
mov
stos
sub
mov
negb
test
outsl
inc
popa
mov
or
lock
pop
pop
inc
and
dec
bound
mov
or
insl
adc
fidivrl
ds
pushf
stos
adc
cwtl
jns
test
bound
jp
adc
and
testb
lds
out
outsl
xor
dec
sub
pop
pop
inc
xchg
sbb
dec
xor
fcoml
out
jg
mov
jno
push
enter
leave
outsl
ret
xorb
out
dec
xchg
cmpsl
and
xlat
xchg
jecxz
push
cmpsb
pop
mov
loopne
mov
outsl
sub
outsl
fisttpl
loope
xchg
ret
jmp
aam
cmp
aaa
cmp
mov
imul
loopne
sbb
adc
add
xchg
jecxz
sahf
lock
pop
ss
inc
and
je
pop
mov
ja
dec
test
cmpb
stos
js
pop
int
add
rorb
push
lret
push
cwtl
pop
aad
test
pop
test
test
das
mov
pop
popa
and
cli
add
adc
mov
cmp
imul
arpl
pop
lcall
loope
ja
dec
int3
dec
xchg
je
ljmp
sub
push
and
pop
pop
aad
xor
pop
stc
dec
in
sub
pusha
add
or
loop
mov
andb
adc
push
loope
sahf
test
adc
pop
mov
pop
pop
xor
daa
test
out
cli
pop
mov
mov
xchg
sub
int
aas
enter
inc
push
cltd
test
inc
scas
xchg
aas
jb
push
pavgw
cmp
out
sbb
int
mov
or
mov
insb
stos
roll
lods
push
push
adc
push
adc
or
popf
rorb
xchg
pop
push
fwait
push
mov
ret
aam
inc
and
jb
jns
push
push
lock
insl
test
or
out
push
mov
jge
loope
movhps
dec
sbb
pop
and
jle
inc
frstpm(287
imul
inc
xchg
xor
scas
and
mov
out
add
icebp
lea
fldenv
xor
ds
and
sub
aas
jge
sub
jae
jge
repnz
mov
bound
pusha
fwait
testl
dec
ja
and
jb
xchg
inc
push
xchg
movsl
xchg
pop
ret
add
cmp
icebp
push
and
popf
popa
jo
imul
je
sbb
pop
push
inc
daa
mov
sub
cmc
cmpsb
xor
enter
push
xor
mov
mov
mov
push
cmc
jns
int
xor
shlb
dec
adc
cmp
mov
test
add
mulb
movsl
and
test
push
mov
lcall
jecxz
stos
pop
mov
jne
push
push
add
int3
jmp
sub
xor
cltd
mov
xor
bound
mov
xlat
imul
enter
and
mov
cmp
mov
in
sbb
mov
pop
mov
ja
addr16
lret
int3
xor
pushf
push
push
dec
or
dec
rorb
add
movsl
stos
adc
rcl
outsb
pop
xor
imul
jp
mov
jo
repz
daa
mov
stc
adc
push
pop
ror
pop
arpl
and
data16
mov
pop
or
add
xor
and
adc
bswap
pop
mov
outsl
mov
rcrl
add
mov
in
mov
into
lods
jne
xchg
test
mov
xor
mov
mov
adc
into
pushf
addr16
jae
push
pop
lahf
pop
mov
mov
popf
adc
popf
cltd
adc
cltd
ret
subl
mov
fcomp
js
shr
xor
sbb
inc
push
pop
xchg
jbe
add
addr16
pop
push
sub
sub
stos
out
xchg
cld
or
dec
jge
push
test
cmp
pop
mov
imul
and
cmp
insb
xchg
adc
mov
pop
jo
and
mov
inc
sti
jae
jns
pop
ror
dec
or
jnp
dec
fs
in
and
outsl
jp
sbb
loopne
xor
fcomps
adc
hlt
mov
pop
adc
repz
and
ljmp
es
mov
pop
dec
mov
mov
mov
fldcw
loop
pop
aas
adc
sub
sbb
cmp
and
repnz
dec
xchg
sti
cs
mov
popa
movsb
adc
scas
sub
cmp
sbb
test
xlat
jns
adcl
pop
and
enter
xor
inc
inc
add
aas
or
or
pop
adc
jno
int3
in
push
pushf
mov
inc
mov
cmc
btc
mov
add
mov
mov
sbb
pop
icebp
insb
and
inc
stos
mov
sbb
cmpl
mov
jb
in
sahf
sbbb
sbb
xchg
pop
mov
sub
lret
scas
add
sbb
iret
stc
cmp
pop
mov
xlat
push
mov
push
cmpsl
lea
dec
xchg
or
in
xchg
inc
nop
cmp
sub
dec
inc
cmp
lock
mov
into
test
cs
push
out
mov
rclb
mov
stc
mov
pop
xchg
filds
test
mov
push
jno
add
dec
call
dec
sub
inc
dec
xchg
add
push
stos
dec
adc
mov
jecxz
icebp
jl
sbb
xorb
sbb
out
mov
int
cmp
xor
in
testl
lds
push
mov
nop
jp
dec
jb
mov
or
inc
xchg
adc
aas
int
cmpsb
lods
add
and
mov
ljmp
jne,pt
mov
xchg
cmp
pop
ficoms
dec
loopne
idiv
jg
int3
mov
lea
ret
mov
fildl
pop
addr16
or
mulb
rcll
lods
adc
or
psubq
repz
repnz
xorb
mov
fadds
and
inc
pop
enter
or
test
mov
orb
imull
in
in
sbb
mov
sbb
insl
dec
loope
test
push
bound
negl
sbb
js
outsl
xchg
movsb
jecxz
rorb
cli
jae
jns
inc
or
cmp
mov
inc
aas
lret
mov
cmp
movsb
jb
mov
lret
xorl
mov
outsl
xchg
dec
outsl
jecxz
or
int3
xor
int
scas
adc
dec
jmp
cs
in
jp
and
hlt
cli
cwtl
ret
mov
test
loopne
xchg
xchg
nop
pop
mov
push
mov
jmp
adc
imul
mov
adc
out
lahf
fidivrs
cmc
dec
jo
ljmp
mov
popa
jo
test
enter
mov
fucomi
fs
add
cmpsl
mov
mov
test
pop
mov
fwait
adc
adc
sbb
adc
cwtl
loopne
cld
dec
xchg
adc
orb
test
incb
mov
adc
fdivl
ja
repz
lret
cmpsl
nop
xchg
pusha
mov
mov
jecxz
xchg
shlb
pushf
or
dec
cmpsl
fdivrl
mov
xor
popa
mov
dec
adc
les
std
xchg
arpl
out
mov
aad
fs
xchg
add
xchg
insl
inc
push
xchg
xchg
lock
es
jb
push
and
xchg
jmp
jne
jne
sbb
pop
xchg
mov
mov
out
std
mov
push
mov
pop
jge
xor
or
hlt
jb
sub
add
add
sbb
lahf
stos
cli
xor
pop
sub
or
dec
test
xor
xor
xor
mov
cmp
stc
dec
frstor
push
arpl
lds
cmc
out
out
mov
loopne
sub
push
adc
mov
cmp
jns
xchg
inc
xor
mov
in
inc
pop
mov
out
es
dec
hlt
cmp
or
int3
sub
test
sub
aad
mov
sbb
out
ja
xor
aam
sahf
cwtl
bound
cltd
sub
sub
cli
test
inc
and
test
pop
xchg
scas
outsl
lcall
jmp
mov
cmp
fisttpl
dec
mov
repnz
cmpsl
push
sub
jbe
lahf
vmaxpd
xchg
sbb
push
xor
shll
sub
adc
test
out
aam
sub
cmp
and
aas
adc
mov
xchg
pop
out
xor
fbstp
pop
push
fs
cmc
mov
pop
into
jge
daa
xchg
arpl
mov
inc
and
stos
mov
mov
push
fwait
lock
mov
pop
sub
sub
fs
mov
jns
and
or
bound
cmpsl
mov
mov
fmulp
dec
xchg
cs
dec
dec
pop
mov
pop
mov
aas
mov
lock
adcl
shl
push
into
aam
lret
insl
andb
clc
push
pop
cmp
jg
jb
dec
sbb
iret
es
out
insl
and
add
fiadds
jne
sub
mov
mov
clc
dec
xchg
rcl
pop
jo
sbbb
sub
pop
mov
pop
fidivl
mov
push
fs
subb
adc
pop
cmp
pop
inc
jns
mov
mov
cmp
shll
and
cltd
sbb
mov
les
mov
pop
in
pop
leave
pushf
sbb
and
mov
dec
icebp
sbb
jo
sub
jnp
pop
lea
lret
sub
in
xchg
popl
push
jl
std
sarb
fcoml
pop
icebp
mov
adc
insb
call
jp
ja
cs
mov
cmc
shl
aas
push
ds
into
xor
mov
xchg
jne
mov
lods
adc
in
dec
lds
mov
pop
mov
into
nop
sbb
push
mov
loope
test
stc
inc
loopne
ljmp
add
out
and
mov
xor
and
inc
lahf
jno
add
mov
popf
leave
sub
add
stc
sub
mov
mov
mov
and
push
mov
sbbl
xor
sbb
or
inc
loope
aaa
pop
fcmovnu
aaa
mov
pop
push
mov
clc
adc
pop
dec
adcb
int
and
jbe
fucomp
push
out
mov
lods
jle
cld
adc
aaa
xor
jge
cmpsl
mov
popf
dec
xchg
out
pop
sub
lea
ss
in
sub
arpl
flds
sub
lret
adc
mov
xor
cmp
pop
inc
dec
test
push
outsb
add
jp
int3
cmp
push
hlt
add
ds
ja
movsb
push
test
fimuls
ds
xlat
mov
scas
pop
notl
test
mov
jbe
ret
stos
inc
imul
into
xor
bound
and
and
call
adc
fnstenv
imul
sub
cli
sbb
lods
or
daa
inc
jecxz
dec
adc
hlt
mov
mov
mov
repz
pop
and
popa
fmulp
pop
out
add
mov
dec
popa
aam
ja
loopne
pop
dec
cmp
sbb
add
fimuls
push
jne
mov
sbb
jp
notb
rcrb
add
sbbl
lahf
adc
push
jge
jnp
das
rolb
xchg
jp
dec
or
cmpsl
ljmp
cmpsb
sti
add
inc
push
mov
sub
mov
push
arpl
mov
add
shrl
pop
inc
jge
cmc
sub
fcoms
lahf
xchg
cmp
adc
cmp
pusha
out
sbb
jp
cli
mov
dec
aas
ds
ret
in
test
sub
inc
mov
mov
or
dec
test
or
jecxz
jnp
stos
or
and
sahf
repnz
sbb
dec
and
add
les
jecxz
or
insb
xor
push
das
ret
sub
sub
add
aam
and
out
pushf
repnz
leave
lahf
les
mov
xor
mov
jl
lods
fmull
pop
notl
and
fcomps
sbb
adcb
bound
imul
jmp
inc
cvtps2pd
inc
xchg
stc
mov
mov
sub
idivw
fs
xor
mov
adc
push
test
insb
jns
les
adc
cltd
push
in
inc
pop
xor
mov
icebp
ds
jl
xor
scas
sub
out
dec
push
mov
xchg
or
xchg
inc
int
fcomps
jnp
and
shr
pop
xor
aad
xor
dec
cmpsb
mov
addr16
mov
arpl
ss
mov
mov
cmpsb
xlat
pop
scas
mov
lahf
xchg
dec
or
int3
mov
mov
fldenv
movsl
inc
aam
xor
or
xor
push
cmp
jmp
mov
rol
jno
jns
sbb
push
imul
stos
push
mov
jbe
shrb
inc
nop
sub
pop
inc
insl
xchg
add
xchg
pop
roll
fwait
inc
mov
movsb
pop
out
test
inc
add
adc
sub
daa
sub
testl
icebp
xlat
cli
call
rcr
pop
pushf
in
lods
fsubs
arpl
mov
mov
lods
ja
outsb
cmpsb
loopne
aam
out
mov
lahf
into
lods
xor
aad
inc
sbb
std
imul
test
xchg
jmp
popa
rol
js
xor
xorb
cmp
ds
inc
jo
pavgb
jne
incl
xchg
inc
gs
bound
push
mov
pop
dec
not
das
shll
fcomps
insb
test
loope
push
mov
lods
mov
mov
pop
nop
divb
subb
adc
ficoms
pop
jbe
jg
movsb
mov
bswap
jns
mov
xchg
sub
out
mov
mov
stc
insl
ss
cmp
cltd
add
mov
xor
sti
add
inc
xor
sbb
pop
out
les
scas
push
stos
adc
sbbl
adc
push
or
insb
sarl
bound
mov
dec
fistpll
jg
push
lret
std
stos
stos
inc
add
add
cmp
add
add
ret
cltd
adc
lret
mov
adc
popa
xchg
add
dec
lret
pop
ljmp
xchg
dec
push
pop
arpl
push
repz
js
rcr
cld
jecxz
cmp
push
sbb
in
jbe
in
out
into
data16
loop
sbb
jne
xchg
in
je
shrb
adc
mov
data16
push
icebp
cltd
pop
push
out
xlat
idivl
lds
sub
ret
xor
sub
mov
xchg
cmpsb
and
pop
pop
inc
iret
outsb
scas
loope
movsl
fsubl
sub
cmp
imul
cli
and
clc
push
ss
fisubrl
outsl
in
movsl
pop
subb
xchg
mov
cmp
stc
aaa
test
int
jmp
icebp
and
mov
lds
test
fcomp
dec
cmpsl
lret
imul
xchg
out
insb
xchg
and
sub
loop
adc
cmp
mov
daa
leave
js
mov
or
mulb
test
xor
fs
pop
lahf
mov
jg
lcall
sti
jb
and
outsb
scas
mov
lea
cmc
loope
jp
jecxz
div
inc
js
adc
test
stc
gs
jo
and
mov
dec
in
mov
loope
dec
outsl
mov
lods
inc
or
scas
lret
sub
loopne
xlat
push
pushf
ret
mov
xor
bound
shrb
add
lds
mov
inc
adc
scas
xchg
movsl
in
and
jo
inc
enter
iret
xor
pop
jp
sbb
lods
mov
pop
es
jl
je
pushl
sub
aas
test
into
clc
mov
loope
mov
movsl
nop
mov
repnz
pop
mov
int
mov
jmp
jno
loop
ret
cmpsl
push
mov
rcrb
movsl
jecxz
das
js
sub
rcrl
inc
push
sahf
ljmp
cmp
nop
andl
int3
inc
das
push
jbe
and
in
add
add
roll
add
mov
add
mov
and
cmpsl
and
jge
movsl
dec
or
adc
test
outsb
jg
and
mov
and
push
iret
adcl
jnp
xchg
dec
clc
jle
mov
push
enter
xlat
scas
jecxz
out
sub
loope
sub
loopne
loop
jne
stc
pop
mov
jb
inc
push
mov
sbb
movntq
out
loopne
stos
push
xlat
or
loopne
roll
addr16
ret
shlb
push
mov
push
xorl
fcomps
repnz
cltd
bnd
leave
push
aaa
cltd
insl
scas
addl
jp
cmpsb
in
stc
xchg
aas
push
adc
loopne
jbe
movsb
push
jg
cmp
cmp
or
inc
and
lahf
inc
push
repz
outsb
test
xchg
inc
aad
enter
lea
dec
shll
sub
sbb
outsl
or
adc
cmpsl
fsub
movsb
mov
iret
add
les
andb
pop
inc
dec
imul
aad
or
gs
dec
push
mov
lcall
push
enter
push
push
pop
std
xor
aas
jae
pop
sbb
sahf
pop
jl
ss
inc
push
jo
nop
add
push
mov
or
and
jecxz
out
add
jecxz
inc
and
shrb
mov
and
mov
jmp
mov
scas
xchg
adc
mov
jne
push
das
jp
or
push
inc
inc
out
mov
in
mov
lds
dec
mov
dec
cmp
pop
ja
xchg
fsubrl
divl
scas
xchg
repnz
pushf
dec
insb
cli
shrb
fadd
addl
in
stos
dec
out
mov
jb
cmpsb
cmp
push
repz
xor
dec
test
mov
pop
inc
repz
into
pop
adc
test
xchg
jne
inc
pop
jle
xchg
ljmp
lock
fbstp
leave
imul
dec
rep
stos
lds
pop
pop
sub
cmp
mov
loop
pop
les
mov
xchg
add
add
add
sar
mov
mov
clc
out
or
fwait
mov
aad
cltd
stos
adc
mov
fdivs
lods
push
xchg
in
cmp
sub
pop
mov
mov
xlat
jmp
fs
mov
cmpsl
imul
inc
sbb
stos
mov
xchg
dec
lcall
sub
jnp
in
xlat
aam
int3
dec
pop
into
mov
stos
iret
sub
jp
sbb
scas
movb
jo
pop
shrb
jecxz
stc
fs
jge
out
loope
test
jg
iret
push
outsb
mov
cmp
mov
out
mov
in
cmp
fists
cmpb
dec
stos
cmpsl
adc
aam
inc
insl
shl
cmp
filds
jno
stos
hlt
gs
mov
jo
mov
adc
or
loope
or
dec
movsb
jecxz
dec
dec
push
int
popf
cmp
push
lret
or
imulb
in
pop
aaa
cmp
gs
fsubr
xor
pop
mov
mov
stc
mov
hlt
inc
iret
cmp
orl
jp
or
leave
rorb
mov
adc
mov
loopne
leave
inc
mov
enter
pop
lret
cwtl
inc
cmp
pop
cmpsb
add
cltd
and
push
mov
pop
sub
xor
mov
push
aaa
dec
out
mov
jmp
sbb
xchg
repnz
dec
xor
test
in
xchg
sub
fiaddl
or
push
stc
dec
sbb
scas
jns
fdivs
fsub
dec
mov
test
xor
es
pop
shr
pusha
push
ret
lret
xor
inc
scas
imul
mov
es
mov
ja
out
fwait
jno
dec
ret
inc
jmp
push
jp
movsl
xor
mov
push
and
adc
cmp
jns
test
sub
imul
adc
mov
inc
push
sub
jge
sbb
dec
in
mov
push
inc
mov
push
cltd
pop
js
mov
adc
xchg
jp
push
fmuls
ficompl
pop
ret
dec
hlt
cmp
shl
adc
cld
sbb
jp
cmp
mov
xlat
ljmp
xor
sbb
and
inc
es
adc
or
lcall
iret
or
mov
shr
fdivl
daa
xor
out
xchg
lahf
adc
push
jae
cwtl
sub
jle
xchg
push
lret
jbe
jnp
daa
call
dec
mov
xchg
or
push
aaa
mov
push
adc
test
in
pop
dec
and
dec
fisubs
fmul
sbb
xchg
mov
out
in
jge
mov
sbbb
in
or
and
jle
imul
test
adc
dec
push
jb
subb
ret
sbb
cmp
repz
mov
sub
mov
sub
xor
shr
jnp
sub
not
ret
push
inc
mov
cmp
out
cmp
adc
and
mov
jno
sub
fimull
cmp
hlt
out
dec
loope
mov
lret
dec
jge
out
jns
sub
pop
ja
cs
xor
adc
rcll
lahf
ss
loopne
cmp
test
and
cld
mov
pop
inc
pop
mov
xchg
xchg
repnz
inc
jbe
adc
mov
jo
sbb
dec
jno
sub
xor
insb
or
mov
pushf
imul
les
in
leave
lods
adc
jle
cmc
scas
std
adc
or
xchg
cmp
loop
mov
jnp
outsl
popf
enter
mov
fnstsw
adc
xor
add
out
test
inc
ret
lods
and
hlt
add
push
outsb
xchg
and
xlat
push
mov
xlat
std
jl
adc
or
sub
add
adcl
mov
pop
dec
mov
hlt
mov
call
sbb
shl
mov
pop
xchg
dec
fcompl
mov
aam
cltd
iret
nop
inc
lret
int3
cmpsl
aad
lahf
ficomps
push
sbb
sub
and
mov
pushf
push
paddq
sbb
pop
cmp
fmul
rorl
jns
ss
hlt
push
xchg
lret
outsl
jb
mov
scas
loope
jns
repz
push
dec
push
lods
pop
rclb
ljmp
inc
add
ret
mov
jns
cmpsb
mov
pop
out
jge
test
imul
mov
loopne
js
mov
outsb
divps
xchg
je
in
jo
cmp
cmp
add
lods
fs
lahf
test
inc
mov
ret
lods
out
lds
stc
xchg
sbbb
xor
xlat
fsubrl
xchg
push
or
push
test
push
xchg
jle
dec
dec
mov
inc
lds
sbb
pop
imul
mov
cs
ret
cmp
jge
es
jno
movl
mov
adc
cmp
inc
mov
sbb
shr
loopne
mov
sub
cltd
fisubrl
adc
call
mov
pushf
lea
jae
push
nop
jle
pop
lock
bound
jnp
hlt
xor
push
test
out
out
enter
loop
dec
incl
scas
jle
iret
out
shll
les
push
fdivs
out
dec
aaa
jo
ss
scas
mov
mov
int
call
mov
popf
cs
jecxz
je
mov
and
js
and
mov
mov
mov
pop
das
mov
pop
movsb
jo,pt
lods
je
loope
jmp
xchg
in
lahf
jae
mov
stc
pop
insl
mov
sbb
adc
add
es
fisubrs
or
shlb
out
vmread
stos
xchg
loopne
mov
jge
add
int3
mov
lds
loopne
rclb
push
mov
enter
push
cmc
jmp
out
clc
push
int3
lret
mov
cmp
lret
mov
out
push
add
setle
js
ret
outsb
int3
scas
mov
pxor
lods
inc
daa
fcomps
push
jo
and
nop
and
add
push
test
insl
stc
and
mov
push
xor
test
repz
push
shlb
call
sub
outsb
call
fcoml
mov
push
and
cmp
push
mov
mov
leave
jae
aas
mov
cmp
loope
ja
testb
inc
dec
out
add
and
xlat
xchg
add
or
movsb
or
shl
movsl
rol
jecxz
paddq
xor
sahf
add
es
loop
inc
out
mov
out
mov
or
sub
xchg
xlat
rol
js
adc
decb
movsl
les
scas
imul
adcb
insl
add
fsts
pop
xor
or
jne
jb
inc
xchg
repnz
jb
aas
push
and
shr
jmp
fistpll
xchg
dec
push
fadds
into
std
sub
int
xchg
insb
inc
lea
roll
jecxz
and
test
shrl
and
xor
inc
mov
aam
aas
hlt
jp
adc
dec
push
dec
xchg
sbb
int3
add
repnz
int3
sbb
arpl
push
inc
popa
jl
rolb
push
fnsave
fmull
shll
repnz
xor
test
pusha
pop
push
mov
leave
leave
insl
jg
lret
js
or
dec
adc
test
lea
jge
sbb
lock
mov
ljmp
sub
lods
in
in
mov
add
out
test
adc
xlat
outsb
jo
xchg
movsl
inc
movl
mov
jp
aam
in
leave
das
jge
or
mov
adc
sti
jg
fcoms
fs
imul
scas
dec
push
fisubrs
les
std
inc
xchg
sub
test
insb
scas
test
je
jecxz
mov
aaa
neg
sahf
aaa
and
mulb
out
movsb
das
mov
mov
push
or
pushf
int3
inc
rorl
pop
fisttpl
lock
mov
iret
gs
es
loope
mov
testl
imul
or
and
xlat
push
pop
fisttpll
xchg
cmp
mov
outsb
inc
push
ja
lock
lock
nop
and
push
mov
call
pop
mov
es
ja
fiaddl
addr16
push
lret
in
fiaddl
in
pavgb
icebp
adc
test
xchg
arpl
daa
fmull
lcall
and
mov
insl
mov
inc
mov
pushf
movsb
inc
add
scas
adc
adc
adc
cmpsl
stc
testb
ss
lahf
loop,pn
jp
cmp
xchg
call
fnstsw
jp
repz
cmpsl
push
rcrl
aaa
xchg
cmp
popf
outsb
mov
lahf
imul
clc
stos
inc
popf
cmp
sbb
jp
mov
loope
gs
push
lahf
jnp
inc
xor
adc
out
ret
sti
bound
les
push
push
sub
sub
dec
lock
lea
mov
pop
and
fdivl
cmp
movsb
outsb
or
out
clc
pop
aaa
out
dec
test
outsb
jg
clc
stc
pop
sub
pop
mov
fisttpll
xor
pop
into
jae
xor
push
enter
push
cmp
and
jl
fsubl
jnp
pusha
cs
push
jge
scas
xchg
test
popa
fnsave
test
jl
test
cld
dec
lret
imul
lret
sub
out
sar
pop
pop
jne
mov
rol
lcall
cmpsl
inc
cltd
popf
add
inc
pop
mov
cld
fldcw
mov
test
out
negl
leave
add
je
and
fisubs
sub
mov
clc
out
cmpsb
cmp
add
out
lret
push
mov
add
out
dec
mov
gs
adc
fidivl
out
xlat
xchg
addr16
mov
cmc
subb
xchg
icebp
push
sub
loope
das
pop
mov
fldenv
enter
cmpl
loopne
pop
insb
lods
scas
mov
insl
adcl
sub
xor
aam
add
mov
scas
pop
repz
pop
das
jno
xchg
adc
bound
scas
inc
dec
lret
inc
push
push
leave
pop
cmp
faddp
and
jle
push
aas
imul
xorl
mov
mov
xor
leave
inc
pop
dec
cmp
jnp
out
push
push
mov
les
cmp
fwait
xor
and
hlt
pusha
add
mov
imul
int3
ret
jg
add
push
ja
sub
jne
divb
lods
push
xchg
cmp
pop
mov
cmp
push
loopne
ror
aam
xlat
mov
or
test
jns
or
cmp
mov
sti
imul
bound
js
pop
xchg
addr16
cld
fwait
inc
cmp
aas
cmp
jo
ja
pop
mov
push
pop
aas
rcrb
jae
popf
ret
adcl
sbb
pop
and
push
sti
sbb
repnz
cwtl
fldt
fdivrs
mov
sbbl
out
outsb
adc
imul
popa
js
fists
sub
mov
add
jae
inc
mov
adc
cs
aam
ret
dec
out
add
rcrb
push
fdivrs
pop
divl
pop
test
test
lahf
adc
addl
mov
dec
jne
test
flds
jno
lds
xor
stc
jns
int3
hlt
pop
xchg
outsl
adc
gs
cmp
das
decb
adc
sbb
icebp
and
stc
mov
sub
ds
std
ja
jno
into
push
inc
mov
xchg
jb
jp
aam
scas
sarb
ja
arpl
lret
cmpsb
jecxz
xchg
cmp
loop
out
lock
lret
mov
sti
dec
les
in
mov
rolb
adc
hlt
cli
push
lea
cmpsl
lea
ja
shlb
push
jmp
dec
pop
repz
ror
stos
push
in
adc
mov
in
aad
jo
fbld
mov
fsubrp
mov
ljmp
mov
stc
mov
sub
iret
xchg
loope
jg
cmp
imul
mov
pop
and
inc
cmp
inc
mov
xor
in
addr16
int
mov
rorl
call
sahf
push
xchg
cmp
ljmp
inc
or
pop
xchg
movsl
jno
dec
call
sahf
mov
sahf
dec
sbb
adc
push
adc
outsb
imull
add
mov
push
jp
clc
cli
inc
dec
lock
fidivrl
sub
clc
aaa
iret
jecxz
push
orb
stos
mov
pop
movsl
jo
fistpll
insb
je
xor
mov
popf
loopne
fsubs
aad
mov
mov
dec
push
fisttps
sahf
pop
jbe
leave
adc
andl
into
enter
and
lcall
xor
mov
ficoms
movsl
lods
daa
in
and
jle
pop
insb
mov
out
mov
mov
xor
adc
pop
pusha
in
rolb
cmp
movsb
fistpl
push
jg
sub
or
movsb
mov
inc
mov
xchg
dec
jg
ljmp
test
jecxz
in
push
push
int3
mov
movsb
mov
pusha
mov
std
adc
push
sub
rsqrtps
adc
into
inc
out
xchg
fwait
mov
pop
dec
mov
repnz
movsl
inc
fwait
sbb
les
hlt
mov
inc
xchg
lcall
ds
lret
or
fwait
cmpsb
sub
ljmp
aaa
stc
inc
pushf
data16
or
adc
lods
xor
in
and
dec
mov
sub
cmc
and
mov
adc
ret
insb
fisubrl
lret
cmp
add
adc
dec
fwait
leave
lock
xchg
bound
pop
cmp
loope
sub
fcmovnbe
mov
jno
sub
xor
pusha
ljmp
xor
enter
mov
push
fldcw
dec
fidivrs
push
push
cs
imull
cmp
pop
daa
jmp
enter
ja
jb
mov
pop
push
cmp
dec
repz
and
sarl
mov
cmp
nop
mov
add
cmp
or
insb
sbb
add
lret
xchg
mov
jno
cs
adc
push
shlb
gs
push
dec
ret
mov
test
and
sbb
jne
hlt
hlt
fadds
ret
in
or
shrb
lea
mov
jno
popa
leave
gs
mov
inc
cmc
cmp
mov
dec
fwait
xchg
scas
cmp
jns
xchg
sub
mov
pop
mov
push
push
ret
movsb
enter
jmp
push
sub
cmp
jnp
sbb
or
pop
xchg
mov
jns
pop
cmp
int
fdivr
sub
add
inc
cmpsl
js
mov
aad
xor
adc
push
lods
inc
adc
das
cmp
dec
sub
test
mov
aas
mov
and
mov
js
pusha
test
push
mov
sbb
push
dec
sbb
ja
pop
rol
push
xor
push
cmp
or
mov
ret
cmpsl
movsl
fwait
mov
fidivrl
xor
pop
repz
rclb
ds
ret
cmp
bound
push
aam
inc
inc
adc
sar
psrld
ret
mov
sbb
sub
int
push
push
pop
shlb
dec
push
and
cmp
iret
ja
inc
pop
sub
iret
mov
sub
inc
out
mov
lretw
testb
mov
sbb
and
out
pusha
fldenv
in
sbb
jge
mov
lea
outsb
inc
or
or
cltd
aas
int
std
insl
mov
popa
pop
aas
mov
popl
dec
ret
xchg
cmp
lods
popf
jbe
ret
scas
fdivrp
insb
lcall
cmpsl
bound
and
notb
in
dec
xchg
in
xor
gs
sbb
mov
jmp
icebp
call
jne
fdivrl
adcb
sahf
cwtl
pop
push
dec
sub
cmp
dec
mov
cltd
mov
enter
movsb
iret
push
cmp
sub
repnz
push
inc
aaa
outsl
jne
cmpsb
dec
pushf
cmp
mov
cmp
das
shlb
dec
cmp
xor
push
sbb
mov
xlat
mov
fcmovbe
add
call
icebp
sbb
xlat
inc
test
pop
testb
pop
aad
mov
push
jp
sub
subl
aad
sbb
pop
pushf
popf
call
jl
push
xchg
pushf
adc
jp
mov
sbb
out
lea
and
pop
es
push
lret
movsb
lock
inc
ja
xchg
std
sub
ljmp
push
addb
dec
push
xor
pop
and
cmp
mov
xchg
and
cli
cmp
lahf
movsb
push
rorb
icebp
or
mov
lcall
inc
lods
jl
shr
pop
in
adc
stos
xchg
mov
push
mov
mov
clc
call
inc
les
xchg
cld
in
test
cwtl
xchg
fmull
enter
inc
bound
add
or
xchg
cmpb
out
jecxz
iret
mov
fstl
sbb
mov
jecxz
mov
or
call
fnstsw
mov
test
dec
or
xchg
outsb
inc
in
jge
loopne
sub
dec
cs
ret
sub
fistpll
cltd
xchg
aad
scas
xchg
movsl
cmp
xor
imul
jo
push
shrb
xchg
shlb
lahf
loop
int
or
clc
int3
shl
and
rclb
or
repz
inc
mov
and
xchg
jo
pop
pop
jns
inc
aam
mov
inc
push
out
mov
pop
xor
stos
sarl
xchg
xchg
mov
aad
mov
mov
leave
fs
push
pop
fmuls
add
inc
add
ret
insl
int
ret
mov
test
in
cmp
xlat
loop
push
outsl
ja
data16
adc
ret
jae
mov
ret
iret
mov
jecxz
jg
imul
js
dec
jo
jle
sbb
add
mov
sti
lahf
pushf
or
lahf
dec
mov
insl
mov
lahf
fnsave
dec
mov
or
sub
pop
xchg
das
and
inc
jb
dec
sbb
or
sub
push
cli
push
loope
leave
clc
repnz
xlat
ljmp
pop
mov
pop
xchg
add
pushf
cmp
negb
mov
in
mov
addb
mov
insb
or
jge
lds
dec
fwait
int3
xchg
in
sti
add
rcrl
xlat
sub
mov
xchg
int3
sub
push
jecxz
push
mov
jns
jns
pushf
or
jo
cs
dec
or
push
iret
aad
out
add
out
jae
adc
xchg
rol
lret
insl
jbe
pushf
loope
and
sub
movsb
popa
out
out
xchg
outsl
lods
repnz
sub
cld
push
ss
call
inc
sub
cmp
lret
pop
sar
push
and
cmp
movsb
lret
pop
pop
mov
jmp
and
jl
or
adc
cmp
daa
outsb
call
inc
lret
push
pop
jbe
das
pop
cli
orb
and
lahf
pop
sub
nop
outsb
jns
rolb
ja
push
pop
js
stc
sub
pop
mov
fisubrs
repnz
and
jae
jl
push
mov
push
fiaddl
rol
rcrb
int
mov
repnz
pusha
jo
cmp
and
or
loopne
push
inc
rol
rcrl
xor
lock
ja
ss
cld
xor
mov
inc
or
int
pushf
lret
fwait
stos
inc
arpl
aam
mulb
repz
jne
mov
mov
inc
out
fwait
dec
mov
dec
and
sbb
mov
ror
or
sub
dec
adc
lea
jmp
repnz
xchg
dec
ret
lock
scas
mov
insl
repz
loop
mov
mov
add
sbb
movsb
inc
pop
xlat
cmp
dec
dec
sub
jge
dec
inc
ljmp
mov
pop
xchg
mov
mov
test
int
inc
push
jae
sub
inc
mov
inc
push
mov
jl
xchg
xor
jp
in
cwtl
or
scas
icebp
ss
xchg
insl
adc
cli
addr16
xor
lret
and
pop
ljmp
pop
push
and
lahf
sti
dec
push
inc
cmpsl
sti
jnp,pn
lcall
add
stc
sbb
cmpsl
dec
xchg
push
mov
xchg
loopne
jo
je
xchg
ret
mov
mov
xlat
gs
and
les
rolb
dec
lahf
mul
dec
out
ret
mov
shrl
pop
in
adc
push
pusha
test
or
and
imul
stos
outsl
iret
mov
xor
fwait
cmp
xchg
int
mov
ss
xchg
sbbl
insb
pop
and
xor
mov
sub
loopne
sarl
sub
movsb
pop
cmp
mov
dec
cmp
call
jae
hlt
jl
ljmp
jns
jns
popf
in
jl
sbb
lret
jmp
xor
cli
into
or
cld
negb
cmp
pop
mov
inc
movsl
mov
rcr
repz
sti
js
imul
jmp
dec
leave
cltd
lds
cmp
aad
mov
subl
je
xchg
mov
cmpl
ja
add
inc
test
aas
jne
movsb
ss
scas
divl
std
mov
jle
pop
mov
sarb
cmp
in
cwtl
mov
mov
and
mov
jmp
loop
icebp
ja
push
sbb
fcomps
sbb
sub
sahf
leave
cmpsb
call
cmc
push
es
xor
int
cmp
popa
loope
test
inc
out
sbb
mov
clc
sti
xor
xchg
jl
int
loopne
out
cld
ja
test
gs
lahf
add
pusha
push
shr
dec
lret
loope
ss
jmp
push
loop
and
add
xlat
jnp
aaa
mov
inc
stos
jmp
sti
sub
mov
push
jle
pop
pop
inc
mov
bound
jb
mov
loope
mov
cmp
and
dec
lock
stos
cmpsb
in
mov
into
sti
repz
aam
shll
inc
jg
inc
and
pusha
adc
adc
mov
adc
ja
fwait
imul
sub
repz
in
or
adc
mov
in
sbbl
cmp
leave
mov
cltd
shlb
add
jnp
pop
add
xchg
sti
cmpsl
mov
lock
aad
sbb
imul
es
dec
xor
add
inc
pop
jecxz
into
xchg
fs
cmp
cmp
in
out
fcoms
mov
push
lahf
cwtl
jmp
jmp
mov
lahf
push
mov
test
fwait
and
dec
mov
and
cmp
jno
pop
movsl
jmp
cmp
pop
jne
outsl
and
shrl
add
mov
adc
rcr
ds
fwait
xor
ss
push
dec
mov
or
cmpsl
ret
pcmpeqw
mov
fisttpll
lret
xlat
push
push
lods
daa
xor
out
movsb
or
cmp
add
sbb
xchg
xor
push
fsubrp
mov
pop
sub
cmp
pop
dec
inc
outsb
rcrl
push
lahf
movsb
scas
xchg
pop
ljmp
mov
jnp
jno
jge
xor
sbb
mov
mov
test
or
test
cmp
mov
stos
loop
jle
shlb
pop
jns
rorl
xorl
test
adc
jnp
enter
shrb
jae
stos
xchg
jmp
jno
jmp
jno
imul
add
cmpl
aam
incb
fistps
leave
jo
popa
mov
jae
cmp
dec
sub
ss
mov
loopne
xchg
mov
inc
cmp
sahf
in
sub
sub
lret
jb
outsl
lcall
cmpsl
pop
inc
inc
in
aas
daa
clc
push
icebp
data16
or
arpl
lods
jne
sub
enter
mov
adc
dec
and
jno
ja
pop
dec
inc
add
imul
movsl
adc
mul
pop
shrl
pop
cmp
and
pop
pop
fsubrp
and
and
in
movsl
nop
fsubl
fidivrl
insl
lea
adc
inc
shll
sbbb
pop
adc
movsb
and
out
mov
orl
inc
sbb
and
lahf
mov
scas
and
ds
fsubrs
push
push
data16
add
test
sub
mov
leave
jo
dec
mov
adc
repz
aad
or
xchg
add
stc
sahf
and
repz
or
sbb
ja
cmc
popa
sarl
cltd
in
add
in
sbb
aas
jne
popa
in
sub
xor
adcb
and
inc
mov
call
push
into
mov
jb
cmpsb
in
repnz
lahf
push
adc
cmc
cmp
pop
shll
xlat
add
jmp
dec
add
jle
dec
mov
mov
sti
and
xor
aaa
pop
pop
outsl
pop
sub
mov
sbb
loope
inc
sbb
adc
or
daa
sbb
xchg
loop
fidivl
into
jbe
cmp
jo
mov
outsb
repnz
sub
outsl
sahf
ljmp
mov
shr
mov
sub
inc
sbb
xchg
adc
mov
pop
lea
imull
mov
sub
rol
sub
daa
int3
add
ret
sti
cmp
cmpsb
cltd
cwtl
or
or
push
lcall
mov
inc
out
adc
jae
pop
push
vhsubpd
div
push
mov
arpl
repnz
pop
mov
xchg
push
push
jecxz
iret
pop
jno
cli
cltd
data16
xchg
arpl
sub
rorl
imul
jge
ret
xchg
scas
dec
dec
cmpsb
xchg
push
test
mov
xorl
aad
data16
sub
adc
inc
mov
ret
lods
rol
or
stc
mov
leave
xor
add
sbb
call
adcb
adc
movsl
dec
jl
dec
sti
add
aam
cwtl
push
mov
int3
mov
clc
jb
out
mov
bound
sahf
jns
hlt
cltd
add
movsl
and
jns
stos
mov
aaa
arpl
mov
and
or
lods
sti
cmp
fisubl
add
sbb
mov
cmp
sbb
sahf
add
cmpb
insb
rclb
push
stos
pop
test
inc
ja
sub
stc
mov
dec
push
iret
jg
lahf
loop
xor
scas
shlb
pop
sbb
dec
lret
cmp
mov
out
sbb
cltd
bound
mov
movsl
and
fcoms
jp
fs
pushf
push
sub
jle
test
mov
cmpsl
mov
aam
push
jnp
jecxz
loopne
std
push
movsb
cmpsl
cs
loope
js
dec
in
pop
rorl
sahf
incb
dec
jae
xor
sub
imul
add
cmp
mov
ljmp
out
cmp
xor
idivl
movsb
out
add
push
popa
test
and
subb
sbb
leave
in
cltd
icebp
cmp
aaa
gs
in
test
or
jecxz
pop
or
push
std
inc
fsincos
xor
inc
out
lret
jbe
icebp
xchg
out
mov
es
add
jg
xchg
push
inc
and
sub
fs
je
std
rcr
or
in
xlat
std
hlt
test
dec
addr16
push
popa
jl
adc
cmc
xchg
cmpl
sub
inc
insl
mov
sarb
sub
fsubl
scas
sbb
inc
std
or
testl
mov
shl
dec
cmp
xchg
insb
xchg
stos
test
sbb
dec
push
sub
or
cltd
je
push
cmpsb
rolb
shrl
jnp
pusha
divb
outsb
bound
hlt
data16
mov
daa
xorl
cmc
inc
icebp
xor
push
sbb
sub
enter
roll
jg
or
mov
popl
push
int3
shll
jge
notl
push
mov
sbb
arpl
cld
xor
fcomi
dec
or
sahf
xchg
ret
test
loopne
jo
ljmp
sbb
push
or
ss
pop
call
cmp
pop
or
pushf
ljmp
push
addr16
inc
cmp
add
pop
push
lahf
mov
mov
dec
jl
add
mov
ja
pop
dec
xor
dec
mov
cmp
and
adc
imul
cld
and
cmp
decb
add
fildll
aaa
xor
rol
dec
fsubrs
jns
andl
cs
cld
aad
nop
or
cwtl
popf
lret
inc
popa
test
sbb
xchg
out
lods
in
push
xlat
xchg
push
sbbl
ror
shll
scas
or
inc
sahf
pop
clc
scas
xchg
loope
mov
lea
add
add
in
test
dec
test
mov
jnp
icebp
dec
test
sarl
xor
adc
push
push
and
stos
ss
sti
cmp
leave
inc
cli
mov
pop
sbb
fnsave
mov
inc
sub
and
add
popf
xchg
mov
xchg
pushf
inc
adc
xchg
cli
mov
jnp
mov
adc
stc
adc
sbb
cwtl
icebp
sub
repnz
les
and
decl
dec
arpl
sub
mov
cltd
lea
jno
and
xchg
mov
test
cmpsl
mov
inc
add
frstpm(287
test
faddl
clc
test
repz
iret
or
mov
bound
movsl
filds
cwtl
out
xor
aaa
out
sub
pop
adc
mov
popf
shlb
int
mov
outsb
pop
dec
or
hlt
mov
cmp
pop
sub
adc
imul
movsl
dec
mov
pop
mov
popl
je
in
inc
dec
imul
std
bound
out
repnz
js
xor
mov
in
aas
adc
stc
add
mov
daa
jbe
sbb
pop
nop
pop
test
aam
repz
cs
push
add
divl
add
mov
pushl
dec
xchg
dec
sub
lods
ljmp
mov
or
inc
or
dec
rcll
mov
insb
jo
jl
push
pop
dec
cmp
aad
xchg
pop
data16
les
gs
xor
or
test
dec
stc
pop
movsb
lods
ret
push
rolb
mov
insl
insl
test
jnp
mov
test
adc
cmp
mov
xchg
dec
enter
flds
aaa
add
add
arpl
jle
xor
mov
ficoml
mov
pop
scas
inc
xchg
loopne
es
jno
cmc
stos
fmulp
inc
sti
cmp
xchg
subl
dec
ljmp
dec
aas
call
and
bound
dec
les
and
fistpl
push
ficomps
jnp
add
dec
call
lahf
out
or
cmp
imul
xor
and
pop
inc
pop
cmp
imul
int
xor
cwtl
out
jp
imul
push
es
popa
out
sbb
pop
insb
adc
in
shrl
mov
inc
pop
cmp
mov
popa
inc
rcrl
sbbb
stos
fisubs
add
fmul
mov
adc
rorl
jl
pop
mov
sbb
cmp
movsl
jne
stc
cwtl
and
negb
loopne
sub
fwait
cs
add
cs
jmp
cld
mov
xor
das
fnsave
sbb
jle
jle
lea
jae
dec
pop
movsl
inc
pop
pushf
cmp
sub
scas
les
inc
out
xor
add
pop
inc
cmp
jno
sub
lret
pop
int
adc
or
adc
or
aam
movsb
repnz
push
in
adc
call
loope
lea
movsl
fisubrl
xchg
xor
pop
pop
push
mov
cmc
leave
jp
sub
hlt
rolb
jmp
mov
push
int
mov
pop
aaa
cmp
inc
aaa
dec
fldl
sbb
rdmsr
mov
dec
addb
xor
push
pop
out
jne
push
jae
inc
mov
subb
test
push
mov
cmp
mov
mov
hlt
ljmp
lds
out
inc
psubq
rolb
cli
push
inc
push
mov
jl
inc
and
loop
mov
pop
lods
hlt
mov
cmc
mov
push
repz
xchg
and
inc
arpl
mov
mov
lods
fwait
jmp
adcl
sbb
lcall
jb
jmp
mov
mov
mov
adc
imul
data16
out
shl
jecxz
xor
test
sahf
xchg
iret
movsl
cmp
test
popa
jb
and
push
adc
cmp
push
sbb
dec
lds
xchg
outsl
pop
enter
aad
mov
pop
cs
lea
lods
push
outsl
lods
mov
cltd
scas
and
cmp
movsb
adc
mov
notb
in
das
daa
je
fwait
pop
ds
pop
sbb
jne
insb
ret
or
push
jb
pop
cld
ds
inc
in
push
jg
or
jge
jp
icebp
cli
scas
stos
rcrl
lods
shll
pop
mov
inc
sub
aad
andb
xlat
sti
dec
pusha
mov
or
xchg
je
xchg
stos
xchg
in
jne
add
push
sbb
scas
pop
cmpsl
movsb
les
push
test
movsl
aaa
jl
aas
mov
sbb
je
cld
aas
xor
fwait
inc
mov
imul
jo
add
xchg
stos
adc
popf
outsb
enter
mov
faddl
xor
nop
lret
ss
mov
stos
fcmovb
mov
repnz
mov
mov
scas
icebp
je
je
xor
jne
xor
sti
or
mov
jae
dec
mov
jp
aaa
out
adc
popa
std
sub
jns
cmc
xchg
xchg
ljmp
or
bound
or
cmc
jb
lret
es
stos
rorl
push
lods
neg
test
negl
int
pop
jns
ds
lods
stos
pop
cmp
movsl
or
mov
fld
xor
dec
add
xchg
imul
pop
into
int
and
mov
lods
and
pop
fcoms
jns
xchg
loopne
dec
xchg
lahf
call
mov
cs
faddl
push
mov
sti
scas
sti
or
lock
leave
inc
jge
lcall
das
out
sbb
mov
imul
jae
arpl
icebp
neg
into
jl
push
lods
push
pushf
dec
je
cli
cmp
pop
xchg
lods
jle
sub
xor
cld
imul
jp
call
imul
xorl
push
add
rcrl
in
xchg
lret
fdivs
lahf
inc
daa
mov
fiadds
xchg
int3
xchg
add
je
push
iret
cld
cmp
lcall
push
cmp
pushf
cmpsb
mov
popl
out
and
js
push
jno
lret
and
dec
mov
mov
mov
mov
pusha
xchg
ja
xchg
fsubrs
xor
cmpsb
add
xchg
imul
xchg
das
dec
dec
lea
ljmp
xchg
cmp
inc
cmp
mov
int
repnz
dec
cmovp
imul
sub
fimuls
ret
stos
shlb
repnz
sahf
push
push
nop
sti
jge
fsubrs
lcall
dec
push
ss
fimull
lock
push
fwait
cmp
lea
jnp
mov
xchg
ror
in
mov
jg
adc
outsb
add
repnz
ja
sbb
inc
mov
stc
rdtsc
sub
outsl
pusha
mov
cmpsb
cmpsl
repnz
add
insb
or
xchg
adc
or
dec
addr16
in
jmp
shll
dec
sbb
inc
sbbl
jno
pop
cld
arpl
gs
mov
or
daa
ss
jp
pop
fnstenv
xlat
mov
out
lret
inc
pushf
popf
cmp
incb
sbb
push
sub
repz
shlb
and
pop
xchg
scas
sbb
jl
lods
mov
adc
seto
xor
sahf
jae
add
mov
jb
stos
mov
sub
xchg
xor
testb
inc
or
sub
dec
sbb
mov
mov
or
xor
add
lods
out
lock
iret
dec
adc
and
xchg
pop
maxps
shlb
in
add
add
hlt
test
inc
mov
imul
push
xor
in
shll
test
jl
lds
cmpsb
repnz
inc
aad
dec
cmp
xor
stc
enter
jge
popf
test
mov
adc
inc
sahf
jae
mov
stc
jg
jbe
dec
cld
jo
adc
shl
xchg
push
add
cmp
rorl
xchg
cmp
sarb
lcall
in
xchg
push
mov
mov
sub
aas
dec
shl
push
ficompl
int3
pop
shlb
add
sahf
inc
dec
push
pop
and
pushl
nop
mov
icebp
xchg
mov
xchg
cmp
mov
hlt
push
add
dec
roll
dec
sbb
sbb
insl
xorl
inc
test
and
out
inc
mov
add
inc
test
fcomps
adc
fimuls
stos
hlt
xchg
push
pop
inc
movsb
sub
mull
inc
ljmp
cmovp
sarl
fists
mov
lret
es
push
push
sub
ja
push
pusha
cmp
xchg
mov
cld
add
sbb
les
in
xorb
xchg
push
lahf
outsl
cmp
adc
out
add
push
rcl
sub
iret
push
fcompl
or
push
add
add
orl
adc
fcoms
es
xor
fists
mov
inc
adc
test
aad
sahf
dec
mov
inc
insl
je
cmpsl
sbb
insb
orl
in
in
push
sub
aam
xchg
rolb
imul
into
pop
inc
xchg
and
add
xor
inc
int
adc
sbb
test
aas
mov
lret
pop
daa
mov
adc
mov
out
insl
add
inc
mov
inc
sbb
js
adc
xor
es
leave
int
mov
mov
repz
or
mov
and
jecxz
scas
mov
jb
mov
mov
test
mov
scas
scas
dec
cld
mov
mov
mov
push
pushf
or
sub
mov
pop
test
sbb
lods
cmp
sbb
cmp
ljmp
lahf
ss
push
pop
xor
rclb
pushf
or
idivl
dec
adc
rorl
jmp
xor
loopne
and
arpl
push
aad
dec
adc
sub
cmp
imul
mov
lods
out
stc
scas
mov
or
add
xor
lea
mov
adc
rcll
in
xor
data16
sbb
fisttpll
mov
test
aas
lahf
push
ss
add
std
jno
and
pop
leave
mov
sub
outsb
push
call
dec
mov
lret
mov
loopne
aaa
mov
xchg
jae
or
cmp
in
dec
loop,pn
cmp
ljmp
ljmp
add
dec
loopne
sub
sbb
cmp
xor
push
ret
jp
dec
addr16
cmc
std
scas
insl
cmp
push
xchg
aad
lret
sbb
jnp
xor
xchg
aad
into
mov
cmp
mov
test
sbb
std
test
cmc
nop
loop
hlt
push
sbb
cmp
out
mov
mov
mov
jae
cmp
shl
mov
and
shrb
mov
xor
negl
testl
mov
ds
xchg
xor
gs
mov
pop
push
cld
mov
scas
subb
mov
es
push
push
xor
mov
sub
js
out
fisttps
movsb
push
andb
mov
repz
imul
cmp
outsb
ja
jnp
and
sub
jae
push
imul
arpl
in
xor
mov
mov
aaa
mov
mov
fadds
xchg
aaa
ss
in
mov
lods
xchg
xor
outsl
add
cmp
push
fcoms
dec
addr16
or
jge
ljmp
mov
jge
push
mov
or
pop
push
pop
data16
or
add
push
pop
lcall
push
pop
pop
fildl
xchg
stc
jnp
xchg
dec
stos
insb
adc
add
inc
adc
out
inc
repz
inc
jmp
movsb
push
jg
cmp
adc
and
sub
adc
mov
mov
aam
insb
in
clc
imul
pop
xor
movb
gs
mov
dec
and
or
mov
adc
lret
push
imul
stos
adc
pop
xchg
or
dec
push
test
mov
dec
push
sub
in
ss
notl
fwait
lret
stos
xorb
mov
jae
cmp
xchg
dec
orl
cli
jb
pop
pop
mov
push
push
addl
andb
inc
push
jg
push
adc
push
mov
xor
inc
dec
fldt
pop
int
lods
xchg
dec
mov
inc
mov
fcompl
imul
aas
pop
sub
push
aaa
jae
imul
inc
mov
sub
mov
loope
mov
jnp
pop
pop
aas
enter
fcmovnb
inc
pop
sub
or
or
sub
fnstenv
scas
jge
repz
mov
pushl
mov
fnstsw
cmc
imul
dec
cwtl
push
repz
icebp
mov
mov
sarl
jae
fcomps
jno
divl
xor
idivl
test
xor
outsl
mov
dec
cltd
fbld
data16
xlat
fcoms
and
cmp
pushf
in
cltd
mov
in
popf
cmpsb
es
scas
lret
adc
mov
add
pop
mov
aas
add
add
outsl
dec
mov
jo
xchg
in
cmp
adc
sbb
repnz
hlt
jns
pusha
insl
add
aam
lahf
dec
enter
rolb
push
jb
jbe
sub
cwtl
sbb
flds
adc
mov
out
mov
push
imul
aaa
das
xchg
push
sbb
pusha
aaa
ja
repnz
fnstsw
inc
fcomps
rol
cmp
inc
push
lcall
out
clc
lock
jge
mov
cltd
xor
sbb
push
fstl
arpl
cmp
mov
fcomps
xchg
dec
je
scas
frstor
push
insb
mov
addl
mov
das
in
int3
sub
shrb
pusha
out
gs
insb
add
jo
out
jbe
ret
pop
and
push
sahf
popa
je
mov
sub
inc
cmp
xor
jmp
fwait
pop
fbstp
mov
pop
dec
adc
jno
pop
lea
sbb
adc
sub
inc
xchg
into
sbb
cli
nop
mov
mov
fdivrs
lds
lret
lret
push
cmpsb
push
sub
int
push
jo
sbb
lret
pop
inc
aas
push
push
in
into
push
iret
xchg
mov
ljmp
mov
push
mov
pop
gs
sti
cmc
add
jno
clc
cmc
add
stos
inc
test
loop
mov
fcoms
sub
out
and
mov
pusha
or
or
push
test
sub
jle
mov
test
imul
pop
or
sub
repz
lret
sbb
test
cmp
xchg
sub
cmp
xor
and
jmp
or
stos
mov
setnp
orb
inc
adc
dec
pop
test
ret
mov
jge
lcall
scas
and
mov
or
leave
add
fmuls
or
leave
add
aam
dec
and
cmc
mov
pop
lods
flds
je
cmpb
pop
in
dec
lods
adc
mov
sbb
cwtl
imul
pop
fwait
mov
nop
xor
xor
pusha
mov
stos
push
inc
lods
sub
sub
ret
mov
mov
outsl
xor
cmp
flds
mov
pop
mov
sub
and
call
int3
jns
xchg
mov
xchg
bound
cld
mov
jge
jne,pt
imul
fsubrs
mov
movsb
repnz
xchg
sub
fwait
xchg
out
fnstenv
decb
cld
lcall
loope
clc
adc
mov
std
int3
cmp
popa
pop
jae
inc
mov
and
sbb
sbb
dec
scas
dec
xchg
add
stc
or
jno
adc
stos
int3
xor
es
fwait
push
pop
stos
pop
jecxz
popa
sarl
je
sti
xchg
cltd
dec
addr16
decl
cmc
js
or
out
out
stos
xchg
push
adc
or
add
xor
mov
inc
sbb
sbb
mov
push
xchg
mov
cmc
and
scas
rclb
insb
dec
aad
jno
imul
and
movsl
test
outsl
jnp
sub
lahf
in
jnp
xchg
aad
push
dec
mov
call
push
mov
aad
les
xor
sub
sub
cld
xchg
psrad
push
jb
and
out
add
inc
insb
ret
fildl
xchg
insl
repnz
cmpsb
pop
lods
fwait
bound
nop
rcrl
lock
out
pushl
pop
jae
xor
dec
in
or
cld
push
shlb
add
int
push
out
adc
or
sbb
mov
fmull
push
pop
sub
jns
inc
cltd
movlps
mov
xchg
hlt
lock
pushfw
pop
movsb
jns
dec
sbb
mulb
stc
and
mov
lret
mov
dec
bound
or
lods
imul
sbb
icebp
icebp
scas
xor
dec
push
mov
imul
xor
cmc
inc
dec
std
or
cmp
sbb
or
add
imul
lahf
subb
mov
repnz
cmpsb
mov
popf
adc
mov
sbb
sub
pop
out
test
and
sbb
and
adc
jns
and
loop
ds
mov
popa
roll
mov
inc
icebp
enter
addb
mov
cmpsb
fdivs
ficoml
inc
data16
sarb
mov
pop
stos
jp
cld
cs
addr16
iret
ffree
fucomp
loope
push
jb
fyl2x
ret
mov
dec
push
or
inc
mov
lahf
je
call
mov
add
out
inc
jecxz
cmp
sbb
call
mov
dec
pop
sbb
int
mov
dec
test
cmp
pop
mov
jle
call
int
jo
cli
arpl
stos
lret
push
mov
aam
loopne
aaa
jae
sbb
incb
insb
sarb
rcll
inc
icebp
push
sub
xchg
adcl
pop
aas
ret
lods
mov
addr16
mov
cmpb
dec
std
mov
xchg
add
push
cli
cmp
sti
fiaddl
data16
icebp
std
insl
mov
mov
cmp
push
data16
sub
movsl
enter
lock
mov
xor
add
popa
shrl
sbb
xchg
das
hlt
mov
adc
jb
push
insl
sbb
sub
xor
add
dec
cli
sbb
out
push
xchg
add
movsb
adc
popa
imul
ds
nop
arpl
out
sbb
mov
mov
icebp
lcall
outsb
adc
shrb
test
or
cwtl
sbb
fcomip
pop
or
sbb
rolb
push
lods
dec
mov
sarl
xchg
lods
pop
pop
mov
loope
dec
loope
cmp
idivb
adc
daa
lock
or
cli
test
ficoms
push
jnp
jmp
popa
stos
and
jp
xor
lahf
mov
inc
lret
cwtl
into
in
cvtpi2ps
enter
xchg
rcl
pop
mov
cld
int3
lock
rcl
in
pop
das
rolb
dec
mov
inc
fwait
push
jp
pop
out
push
js
test
cmp
sbb
push
cmp
pop
and
cld
iret
mov
cwtl
mov
hlt
and
inc
sbb
lock
xor
dec
pop
inc
jae
inc
gs
mov
xor
add
add
inc
jge
and
mov
cmp
push
popf
jne
mov
xorb
sbb
mov
jmp
popa
es
pop
push
lahf
mov
in
mov
mov
push
testl
and
cmp
mov
shlb
adc
cmp
aam
rclb
das
in
mov
or
orl
sti
clc
dec
dec
lods
and
fcmovne
pop
mov
scas
xchg
jb
adcb
xor
xchg
xchg
cmp
lahf
enter
clc
jl
stc
cmc
cmc
xchg
cmpsl
sub
add
aam
sub
pop
adcb
add
int3
test
pop
gs
bound
sbbl
stc
adc
xchg
jl
aaa
jl
std
rolb
jb
and
xchg
notb
mov
adc
call
test
pop
jl
push
idiv
xchg
inc
data16
xchg
mov
cmp
in
mov
dec
out
xchg
jg
sub
ret
loop
add
cmp
flds
pop
gs
adc
add
mov
dec
jg
test
push
sahf
sti
insb
fiaddl
imul
sub
loope
cmpsl
cmc
out
stc
int
pusha
aad
or
ret
push
hlt
adc
xchg
leave
sub
pop
and
mov
lea
xor
sub
fcomps
pop
into
ss
jns
je
push
push
add
cmp
adc
mov
cmp
lods
or
in
lods
in
jle
xchg
nop
xor
jae
out
ljmp
adc
sti
mov
repnz
mov
xchg
sbb
pavgb
lcall
fstpl
imul
push
adc
lea
pop
insb
jge
inc
adc
mov
and
or
andb
out
mov
cmc
mov
ljmp
loop
jl
popa
das
ja
call
iret
xor
mov
imul
dec
stos
rclb
pop
das
dec
xchg
xlat
sbb
push
xor
or
out
mov
fstpt
addr16
cbtw
ror
adc
test
lea
in
xchg
dec
cmp
test
sahf
inc
mov
add
and
cwtl
stc
jg
or
imul
cmpsb
cmc
push
cmc
popa
mov
scas
dec
cld
sub
add
dec
adc
fistpll
ja
inc
and
lock
leave
mov
int3
inc
cmp
data16
pop
lret
sub
movb
push
sub
decb
sub
mov
iret
cmc
or
mov
nop
xorl
sahf
cltd
push
push
mov
push
push
sbb
cwtl
adc
ds
das
xchg
cs
jge
pop
imul
movsl
rclw
imul
int
pop
shll
stos
mov
cmp
testl
cmc
std
push
xchg
cmpb
in
sbb
shlb
mov
push
nop
mov
sahf
mov
adc
outsl
add
xor
adc
cs
rcl
fwait
stos
push
and
add
mov
push
pop
mov
push
aas
adc
lcall
xor
lcall
nop
push
pop
in
pop
xchg
aaa
emms
add
pop
setae
cli
or
mov
ret
insb
test
scas
dec
sub
xchg
push
mov
leave
mov
push
jge
xchg
adc
sbb
addr16
cmp
sub
and
out
icebp
push
mov
mov
cmp
sahf
int
jle
mov
jns
out
xlat
sbb
mov
pop
mov
push
iret
cmp
dec
pop
fdivl
or
test
loop
jno
pop
or
xor
pop
or
adc
and
bound
mov
and
pop
sub
lret
int
outsb
ret
jae
jl
imul
push
cli
jne
and
push
sbb
cld
cmc
loope
cmp
mov
inc
or
xchg
inc
mov
and
adc
or
cld
xlat
call
pop
scas
cwtl
and
push
sti
lcall
clc
aam
lds
mov
stos
pusha
sbb
aas
push
imul
lret
and
mov
sbb
outsl
lret
mov
or
mov
pusha
daa
inc
das
rorb
dec
sub
popa
ds
pop
movsl
lea
inc
test
cmp
cmp
jl
test
daa
pop
inc
mov
xchg
mov
clc
xor
ds
je
and
ljmp
daa
adc
enter
xchg
adc
pop
test
data16
rol
cmp
mov
call
xchg
mov
push
cmpsb
mov
sbbb
daa
test
js
jp
scas
stos
pop
rcrb
iret
mov
push
jae
dec
pop
test
pop
and
add
sbb
andl
sbb
xchg
cmc
inc
jmp
push
dec
imul
in
dec
je
cmp
ljmp
or
inc
adc
pusha
lods
cmpsl
pop
test
mov
nop
js
inc
int
sbb
push
lock
adc
xchg
mov
dec
or
push
retw
jmp
mov
add
push
mov
pushf
or
or
es
popa
push
mov
jnp
pop
push
xorl
stos
popf
add
jbe
sbb
add
fists
jg
sub
mov
sarl
and
cmpsl
fldl
xchg
sbb
and
sub
jmp
and
ljmp
pop
scas
mov
push
mov
test
cld
cmpsb
out
cmpb
aam
dec
add
fstpl
adc
out
subl
cld
arpl
dec
jecxz
rorl
mov
popf
cmpl
xor
xor
test
or
into
cmc
fisubrl
lcall
dec
js
xchg
push
test
lret
stos
pop
int
cmpsl
jbe
lret
jl
sbb
sub
and
repz
jmp
push
loop
mov
movsl
xchg
lea
sub
hlt
mov
xchg
lods
out
inc
or
stos
jge
scas
inc
add
fnsave
cmp
movsb
std
adc
scas
cli
bnd
scas
stos
cs
xchg
push
fidivrl
push
lahf
jo
add
cmp
jnp
std
pushf
mov
ja
lea
inc
call
pop
xchg
add
push
mov
lret
jp
add
dec
cmpsl
or
fsubl
lods
xchg
mov
popf
jmp
imul
fimuls
mov
mov
mov
mov
push
int3
fisubrl
mov
nop
mov
je
add
mov
leave
pop
fidivs
cld
push
pop
icebp
pop
inc
pushl
push
cmc
and
dec
bound
lods
fisttpl
pop
sbb
push
jp
jno
mov
push
das
dec
and
or
xor
and
movsb
punpcklwd
dec
enter
adc
adc
pop
jp
sub
lods
aad
push
test
mov
sub
mov
loop
mov
loopne
xorl
loope
out
jne
push
cmp
and
jl
xor
addb
xchg
adc
xor
addr16
mov
pop
andb
imul
popa
mov
sub
dec
hlt
or
mov
mov
rolb
es
out
inc
push
addr16
dec
leave
and
outsl
test
lock
out
mov
fsts
push
sub
ficompl
and
inc
das
nop
rclb
dec
cld
mov
push
imul
mov
add
data16
mov
mov
mov
jge
sbb
lods
and
push
mov
pop
adc
sti
fsubrl
pop
ljmp
test
inc
ret
mov
scas
cmp
call
xor
mov
push
mov
aam
xor
inc
xchg
cli
out
idivl
add
or
xchg
xor
mov
xor
xchg
add
into
outsl
pop
mov
mov
lods
inc
cmp
shlb
incl
outsl
inc
ds
jne
dec
xor
cmp
lcall
rcll
sub
or
loopne
aaa
cmp
stos
sbb
jmp
mov
mov
in
mov
es
inc
icebp
push
aam
dec
nop
fnstcw
lret
ror
cmpsl
ret
daa
xor
cmp
dec
adc
lcall
std
ret
inc
in
xchg
sbb
jecxz
outsl
dec
jl
add
sub
inc
inc
js
mov
sub
add
repz
mov
dec
pop
push
cwtl
add
jmp
sbb
mov
ficoms
pop
sub
inc
mov
cwtl
push
xor
in
pop
xchg
mov
inc
scas
or
sub
ret
or
cltd
and
dec
sbb
inc
cmp
cltd
shlb
mov
mov
mov
pushf
lahf
mov
fistl
adc
sub
dec
popl
sub
insb
arpl
pop
add
mov
movb
jg
dec
adc
push
aam
cmp
insl
mov
insl
ret
sbb
xor
and
js
testl
sub
mov
jge
xor
mov
push
sahf
loop
enter
jns
mov
push
repz
icebp
fnstenv
loope
push
dec
and
fisttpl
into
movl
andl
inc
and
insb
enter
test
dec
cmp
mov
iret
and
mov
loop
imul
in
cld
pusha
mov
test
jle
add
lret
push
mov
shl
adc
insl
fidivl
jg
pop
loope
sub
adc
or
push
xchg
std
jg
lods
adc
sub
xor
les
lcall
mov
cmpsl
inc
rorl
icebp
dec
sub
jge
mov
scas
xor
push
cmp
mov
or
mov
mov
rorb
out
push
cmpsb
sbb
push
and
cmpb
push
adc
mov
mov
cmpl
cmp
xor
jno
mov
fstl
icebp
js
add
enter
inc
jg
or
cmp
lret
cmp
pop
out
imul
fwait
xchg
mov
in
test
push
enter
add
shlb
scas
enter
xor
jmp
inc
and
adc
out
cld
xor
pop
leave
scas
stos
loope
test
setne
xor
jg
insb
ljmp
into
popa
sti
test
dec
pop
fisubl
or
test
xor
mov
call
adc
xor
enter
sbb
lock
lods
dec
xchg
clc
outsb
loopne
jbe
xchg
fldl
test
cmp
rcl
je
xor
pop
fwait
scas
cmp
jp
xchg
inc
add
loopne
add
lods
lods
push
scas
ljmp
xorl
jecxz
sub
xchg
mov
jg
loope
mov
gs
notl
push
sub
push
adc
and
mov
enter
and
mov
sub
xor
arpl
adc
out
lcall
popa
ljmp
jge
mov
and
ror
sub
adc
add
test
stc
or
cwtl
idivb
lcall
mov
subl
pop
mov
ds
dec
mov
mov
mov
fnsave
lock
movsl
lods
cli
push
mov
insl
aaa
mov
outsb
jg
xor
add
jns
dec
test
cli
popf
das
xor
sub
stos
or
adc
or
int3
cmpsl
sar
arpl
jno
jns
loope
cmp
sub
or
popa
jg
jmp
dec
popa
or
lret
outsb
inc
mov
sarl
mov
lock
push
mov
lods
hlt
push
adc
mov
pop
sub
sarb
jp
fstpt
insl
arpl
pop
cmpsl
mov
push
xchg
push
inc
cmp
mov
jle
cmp
jb
push
or
out
sbb
in
and
aaa
inc
pop
push
jo
xchg
and
in
shlb
push
dec
sbb
sbb
sub
inc
xor
adc
jne
jg
mov
dec
std
mov
mov
inc
jae
cs
addr16
xor
cmpl
mov
shrl
repnz
scas
test
inc
mov
ret
std
xor
mov
and
ret
leave
and
cwtl
push
fmull
push
mov
push
xorb
sbb
xchg
mov
movsl
sub
jo
xchg
roll
enter
and
nopl
mov
scas
and
cmpsl
mov
nop
jo
and
cli
and
aas
inc
inc
adc
pop
dec
and
ds
cli
nop
leave
push
xor
xchg
push
stos
negl
pop
test
outsb
bound
pop
inc
leave
into
ffreep
dec
js
push
add
xchg
add
std
clc
les
lahf
in
pop
imul
sbb
test
xchg
mov
rcl
test
ss
lret
fwait
push
test
loop
xchg
cld
jge
fnstcw
loope
mov
iret
mov
testb
xchg
push
mov
cmp
xchg
mov
clc
les
stc
or
xor
cmpl
mov
loop
xor
xchg
push
xchg
or
out
sub
jle
mov
xchg
xor
dec
pop
push
sub
stos
and
loop
adc
enter
je
stos
sub
xlat
outsb
in
mov
icebp
dec
fisttps
les
sbb
xchg
in
mov
scas
rcr
push
push
or
int
push
mov
icebp
adc
pop
outsb
iret
arpl
es
push
fwait
and
cmpsb
nop
movsb
or
lcall
or
fldl
xor
xor
add
adc
out
jo
fcomps
sarl
jl
xor
in
sar
pusha
and
lods
cmpsl
xor
test
and
cmp
add
fsubr
scas
gs
flds
cmc
and
lret
pop
add
fdivs
jmp
cld
mov
pop
xchg
xor
push
scas
loop
daa
push
out
lret
pusha
clc
jno
insb
shl
popf
filds
fisubrl
je
adc
add
xchg
shll
jl
incl
test
adc
sub
scas
mov
cli
lret
or
push
and
loope
das
xchg
das
ss
bound
std
mov
xchg
std
push
loopne
cmc
xor
dec
jbe
repz
nop
js
loope
das
lock
dec
sti
aaa
xlat
aad
cmp
addr16
ret
jnp
stc
mov
test
push
arpl
mov
mov
push
mov
in
outsb
out
in
daa
test
mov
mov
sahf
loop
mov
ds
mov
jl
cmp
leave
push
lods
icebp
mov
test
jb
xchg
xchg
or
xchg
dec
ja
push
xor
or
dec
pop
push
clc
mov
loope
pop
mov
shr
sub
mov
lahf
ss
cmp
imul
arpl
out
ret
jno
mov
in
std
cmpsl
cmp
subl
and
mov
ret
add
add
fsubrl
dec
mov
xchg
insb
inc
int
std
xor
sub
fisttpll
adc
fs
sbb
pop
rcrl
fisubrs
sub
lret
add
adc
test
mov
shl
mov
stos
scas
in
sbb
mov
pop
rclb
mov
inc
test
xor
add
aaa
daa
rorl
pop
or
ja
lds
mov
pop
jmp
not
push
adc
fs
push
push
in
lahf
sub
aam
int3
cmp
ja
push
jno
imul
push
mov
jno
jae
adc
pop
add
int3
push
cmp
lods
adc
ret
sbb
mov
in
sbb
push
shrl
lea
inc
xchg
hlt
dec
add
mov
insl
add
mov
xchg
adc
cmc
mov
pop
arpl
jl
popa
mov
ret
push
aad
je
movsb
aad
loope
shrl
jp
pusha
rcr
inc
iret
jg
int3
dec
push
mov
lods
daa
arpl
ret
push
addb
movsb
btr
xchg
sub
aad
out
ljmp
repnz
or
mov
xchg
lock
mov
aam
xchg
out
psrad
sbb
sub
mov
addr16
jecxz
test
outsb
add
fs
or
movsl
add
xor
mov
sahf
mov
cmp
push
ja
shll
adcb
ret
in
xor
xor
jp
dec
dec
adc
adc
mov
and
adc
out
fcomps
push
mov
cwtl
sbbb
stos
into
inc
cmp
push
imul
test
dec
jg
xchg
ret
adc
push
dec
dec
rolb
testb
xchg
fwait
in
sti
movsl
push
mov
mov
mov
adc
xchg
pop
jmp
stos
loop
xchg
xchg
mov
pop
pop
mov
sub
bound
mov
jecxz
add
lock
mov
dec
icebp
adc
lds
sbb
in
out
out
mov
cmp
xchg
or
sub
sbb
fdivs
cwtl
and
lods
rol
inc
pop
ret
add
movb
push
dec
mov
and
jecxz
std
and
out
dec
fistpl
and
in
pusha
jno
enter
cmp
mov
jecxz
and
inc
xchg
dec
mov
in
shlb
fs
aam
outsl
sbb
lahf
jno
imul
mov
ja
cmc
pop
loopne
sar
sbb
jl
dec
push
sub
movsl
dec
pop
add
call
loope
jo
sub
push
adc
jl
sbb
lret
adc
and
cli
add
mov
shlb
test
lock
in
xchg
out
mov
mov
xor
fdivl
outsl
loop
mov
inc
cli
push
sub
jmp
push
test
mov
push
sub
and
shlb
push
mov
cmp
adc
rorb
cwtl
xchg
push
movsb
jmp
dec
lods
push
jecxz
and
mov
mov
xchg
or
mov
jnp
jp
inc
mov
xchg
pop
nop
sbb
cli
lret
ja
or
mov
dec
ficoml
xchg
in
shl
bound
jg
icebp
mov
lods
out
jle
cmc
jg
xchg
bound
stos
adc
pop
std
xchg
xchg
sbb
sub
or
and
jge
nop
sub
pop
or
sarl
xor
popf
es
add
mov
xor
bound
sub
test
sub
jmp
js
fucomp
incb
mov
mov
mov
shrb
stos
dec
mov
inc
xor
outsl
fnsave
pop
ja
mov
mov
lock
test
sub
not
inc
dec
xlat
in
enter
std
cli
aam
mov
mov
xchg
and
xchg
push
jl
icebp
roll
ror
adc
push
mov
out
push
jb
mov
push
xor
cmc
sbb
rorb
call
add
mov
mov
stc
jl
test
xchg
insb
aas
negl
js
ljmp
rclb
movsb
and
jae
sub
cmp
int
xchg
dec
ficomps
jp
lock
addr16
js
stos
jecxz
insb
adc
mov
add
shll
sub
insb
dec
xchg
sbb
cs
fstpt
test
fistl
cmp
xchg
rcr
rorb
repz
mov
lods
mov
push
out
lret
cmp
lret
cltd
inc
sub
mov
mov
ja
pop
subb
lcall
and
lret
mov
outsb
add
incb
fistl
dec
cs
daa
adc
adc
xor
lcall
add
int
cli
inc
jae
sbb
xchg
pop
adc
cmpsl
jecxz
xchg
or
xor
std
andl
inc
aam
xor
jne
mov
jp
data16
mov
xlat
les
xor
mov
dec
aad
mov
adc
ljmp
cmpsb
sbb
outsl
lret
cmp
pushf
dec
pop
das
add
iret
lcall
rolb
imulb
cmp
adc
ds
jb
mov
add
call
xchg
pop
sub
clc
fstpt
repz
or
int3
in
fs
mov
stos
rcrb
dec
mov
jp
dec
repz
shrb
and
fldpi
pop
cs
fildl
in
aam
aaa
enter
sbb
push
inc
fisttps
pop
adc
xor
popf
xchg
je
mov
and
jae
das
sarl
popf
lcall
mov
inc
addb
sbb
inc
leave
mov
cmc
xchg
mov
cmp
inc
mov
stc
mov
cltd
mov
inc
popl
lods
lcall
das
pop
daa
les
pop
dec
push
add
push
insb
dec
addr16
cmp
outsb
xchg
int3
push
push
shr
loop
roll
ljmp
aas
mov
imulb
stos
aad
xchg
and
pop
mov
fsts
fstl
das
fists
xor
or
andl
adc
inc
lret
push
push
fsubs
push
mov
adc
pop
inc
and
int
ja
mov
mov
pop
icebp
fnstenv
inc
push
add
cmp
fmuls
add
repz
xor
divl
out
and
cs
testl
dec
movl
aad
sub
jno
scas
lea
pop
fistl
icebp
push
dec
arpl
sahf
test
repz
mov
jns
into
and
xor
shlb
jmp
rcrb
jbe
push
ds
call
push
mov
pushl
xchg
sub
pop
das
mov
stc
pop
jae
lret
xchg
sbb
lahf
ljmp
je
xchg
ret
xchg
fistpl
jne
aad
mov
xor
adc
into
ljmp
sbb
xor
fbstp
inc
lret
add
fsubr
fiaddl
xchg
rcrl
imul
rcrb
pop
sbb
movsl
or
jg
sbb
in
aas
inc
xchg
push
jbe
mov
scas
adc
icebp
push
in
or
jmp
hlt
es
popf
dec
push
add
pop
xchg
scas
insl
and
cmp
pop
test
push
into
hlt
inc
imulb
jo
dec
aad
out
jae
cmp
test
lcall
cltd
or
mov
std
mov
push
mov
popa
mov
mov
xor
cmc
cli
arpl
shl
repnz
loopne
cmpsb
jnp
aas
pop
sub
xor
aaa
add
adc
add
xchg
out
push
fwait
sbb
or
mov
cmp
mov
mov
repnz
mov
rcll
mov
push
mov
add
cmovo
add
mov
or
xchg
xchg
pop
fld
and
int3
xor
adc
lahf
dec
jb
add
shr
stc
mov
lret
shlb
shl
cmc
fiadds
adc
jns
dec
mov
mov
sub
les
mov
lcall
rorl
inc
scas
xor
mov
mov
xchg
cmp
stos
push
ja
mov
insl
jnp
fs
ss
mov
je
cmpps
dec
fwait
adc
and
jge
push
in
subb
or
pop
stc
nop
jle
lds
int3
pop
scas
outsl
subl
stos
testl
aad
addr16
repz
ljmp
rcll
mov
lds
mov
mov
clc
pop
cs
pushfw
inc
cmp
fnstsw
popf
pop
sub
lea
dec
insl
ja
ds
pushf
dec
lahf
mov
sbb
cmp
movsl
push
cs
push
call
xlat
dec
push
leave
cmp
int
add
pop
subl
push
scas
cmp
mov
pop
rclb
xor
xchg
sub
jbe
sbb
sbb
jmp
push
movsb
mov
lcall
lods
inc
xchg
je
add
iret
xchg
addr16
mov
jne
test
xor
mov
cs
outsb
mov
lds
or
ret
fidivrl
daa
and
mov
jno
push
test
dec
je
xor
cmp
cltd
add
add
ret
mov
mov
shl
lret
push
push
add
lret
cmp
rcrl
adcb
cwtl
xlat
mov
xchg
mov
adc
pop
dec
and
mov
sub
xchg
int3
sub
jno
xchg
ljmp
adc
xchg
ret
xchg
iret
pop
addl
les
imul
dec
test
push
pop
mov
jmp
sbb
dec
sub
mov
notl
int3
mov
ds
mov
ja
cmc
cmp
jp
pop
jmp
insl
xorl
les
ret
and
or
in
mov
adc
jnp
out
cltd
icebp
inc
mov
pop
out
dec
lods
push
lcall
call
sbb
test
jp
pop
sarl
movb
cmp
push
in
cmp
scas
je
add
or
sbb
sub
xchg
push
or
jb
rclb
pop
movsl
pusha
jle
jge
push
mov
call
movsb
bound
and
cmp
push
cwtl
pop
rorb
push
add
ljmp
addr16
bound
rorb
into
fldlg2
sub
xchg
cmp
outsl
in
jne
mov
loope
mov
xchg
add
pop
sub
cmp
adc
repz
rorb
and
sub
sarl
push
cmp
jle
jbe
mov
mov
bnd
mov
popf
jns
mov
adc
loopne
fisubrl
mov
xorl
in
mull
inc
fstpl
stos
lret
test
pop
push
lret
push
inc
or
push
inc
psubb
cmp
in
adc
jmp
sub
outsl
sbb
mov
mov
aad
mov
mov
add
push
sbb
pop
inc
mov
dec
xchg
xchg
mov
insl
scas
jp
sub
fldl
sbb
lcall
dec
test
and
popf
dec
push
xchg
adc
jg
aaa
orl
cmp
pop
out
shrl
cmp
adc
xchg
dec
or
shrb
incl
and
outsb
push
mov
aad
mov
and
cli
xlat
shlb
out
jb
out
loopne
imul
jge
enter
pop
loop
inc
jns
cmpsl
sbb
shr
imul
lods
andb
mov
jecxz
test
adc
push
inc
inc
adc
push
cmpsb
adc
cmp
jle
jmp
faddl
clc
fiadds
or
out
add
lods
aaa
call
fisubrs
adc
js
pusha
je
or
cld
int
jle
aam
movsb
les
add
adc
movsb
adc
dec
sbb
hlt
jl
shll
pop
rcll
sub
fidivrl
adc
aad
cltd
and
mov
cltd
pop
arpl
or
test
and
fsubl
pusha
out
push
cmc
in
mov
mov
ja
iret
cmpl
xor
sub
mov
add
push
jle
add
roll
xor
aam
mulps
or
xor
rcl
push
scas
popa
gs
jno
sub
adc
shlb
sub
jge
add
jmp
daa
inc
movb
int
scas
jle
dec
mov
loopne
test
jg
mov
push
aaa
sub
lahf
data16
mov
add
lock
jge
jb
jbe
call
out
pop
mov
mov
aad
insl
pop
cmp
repnz
outsb
xor
sub
jns
inc
cmp
ja
or
or
adc
sub
in
xlat
stc
and
insb
fadds
imul
repnz
cmpsb
in
push
lea
push
inc
loop
xchg
into
adc
int
icebp
fldcw
pop
int
test
rorl
arpl
inc
add
js
out
mov
xor
fistpll
add
std
data16
mov
adc
jno
xor
insl
inc
push
ja
mov
pop
xor
push
lods
sub
and
in
sub
jae
nop
loop
jp
ja
test
in
es
xchg
cli
mov
push
cmp
xor
repz
lods
or
movsb
jp
cmp
jo
xor
es
lea
push
jp
dec
aam
push
jmp
xrelease
cld
arpl
mov
cmp
clc
aam
mov
lods
jo
fisttpl
cmpl
stos
leave
xlat
lahf
sub
push
or
dec
dec
fcomps
inc
insb
arpl
mov
jg
push
stos
cmp
scas
cld
mulb
jle
dec
adc
xchg
orl
dec
cmp
lret
and
dec
sub
or
dec
add
hlt
cmp
xchg
pop
jl
pop
mov
cmpsb
lock
xor
and
int3
ss
fiaddl
subb
inc
lea
jb
daa
pop
push
and
test
sti
insb
cs
outsl
mov
and
add
and
stos
or
dec
inc
fcmovbe
insb
inc
in
jb
rorl
or
cwtl
into
lds
dec
xchg
fdivl
out
mov
jge
aas
sarb
ljmp
mov
ficomps
cwtl
fnstcw
adc
in
or
fstpl
mov
push
ret
xchg
fistl
scas
add
test
daa
movsl
cmp
cmp
in
pop
jecxz
loop
xchg
mov
mov
inc
inc
call
inc
shrl
scas
rcl
icebp
add
inc
jp
pop
in
fsqrt
cs
cmpsb
inc
pop
js
imul
mov
je
lods
loopne
nop
mov
fdivrs
and
push
push
mov
cmp
mov
pushf
lcall
sahf
cli
movsl
mov
push
sti
mov
jb
pop
lcall
outsb
mov
jo
adc
add
int
add
mul
jb
jno
daa
ret
sbb
cmpb
lahf
ds
jg
push
call
xchg
pop
add
push
shll
fwait
nop
cmp
imul
cmpsb
add
jnp
arpl
mov
mov
movb
pop
inc
aad
adcl
mov
cmovp
insb
pop
push
int
lods
bnd
mov
xor
xchg
jo
stc
dec
sbb
pop
push
push
jno
scas
std
lea
std
sahf
outsl
faddl
shl
or
push
test
mov
sub
xor
or
inc
ret
jp
jg
sub
jl
clc
or
and
adc
push
shr
push
dec
cmc
cld
cwtl
outsb
cwtl
mov
pushf
pushl
or
popf
jg
orb
sar
sarl
xchg
jp
push
lods
mov
aas
push
pop
bound
popf
mov
dec
ds
mov
xchg
push
pop
sarl
adc
and
add
test
mov
in
aad
repz
cmp
iret
loop
lods
mov
icebp
mov
mov
push
in
sahf
je
cmp
jne
xlat
out
push
rcrl
jle
jmp
dec
into
xchg
test
repz
stos
enter
lods
push
addr16
ljmp
negl
sbb
daa
daa
jp
pop
jo
test
lods
call
clc
ret
xchg
imul
sbb
fadds
add
call
imul
lret
jns
dec
insl
sub
cli
lods
sarl
scas
popa
nop
jge
xor
or
mov
hlt
daa
pop
int
xorb
jo
sub
adc
repz
inc
mov
push
je
cmp
pop
cmp
mov
cli
pop
mov
into
inc
sbb
pop
add
adc
gs
subb
xchg
clc
adc
nop
ret
sub
or
jcxz
les
or
adc
mov
sahf
xor
mov
fwait
lcall
and
jle
cmp
mov
cmp
xchg
shrb
xlat
jns
cmp
cmpsl
inc
inc
xchg
cwtl
fcmovb
decb
pop
cmpb
fbld
aas
mov
and
cmp
roll
fldenv
enter
inc
cmp
mov
and
cs
insl
mov
xor
push
xchg
int3
fidivl
imul
in
addr16
and
pop
es
sub
jbe
inc
bound
test
cmpb
out
adc
pop
fwait
cld
daa
cli
jbe
dec
cmp
jbe
outsb
pusha
sbb
test
xchg
xchg
and
cmp
mov
cmpsb
xchg
dec
imul
mov
mov
xorb
push
popa
xor
inc
mov
iret
aam
push
jge
repnz
int3
mov
dec
sti
jecxz
dec
sub
jnp
ret
std
int3
shll
inc
repnz
xchg
les
push
jbe
dec
aam
dec
pop
movsb
lods
mov
lahf
dec
fmull
and
sahf
adc
test
cmpsb
scas
lret
mov
xchg
inc
ljmp
insb
sbb
adc
jae
out
and
sbb
jne
adc
or
lahf
loope
jne
ficoml
int3
push
xchg
data16
mov
add
or
inc
filds
mov
out
aam
cmp
imul
je
es
pop
pusha
pop
push
cmp
sub
ds
cmpsl
sub
imul
out
arpl
icebp
or
mov
dec
xchg
xchg
lods
dec
imul
ljmp
int3
mov
xchg
mov
cmp
xchg
push
pop
les
dec
mov
pusha
dec
dec
pop
frstor
cmc
in
mov
xor
or
movsl
mov
cmp
call
cmp
stos
mov
inc
pop
cld
mov
push
pop
fwait
inc
dec
and
out
pop
mov
cmc
daa
mov
and
lods
bound
mov
aad
add
jl
mov
or
pop
insb
sub
push
mov
sbb
pop
icebp
mov
ljmp
mov
pushf
pop
mov
adc
cmc
mov
rorl
mov
jle
popf
pop
in
out
rcrb
cs
mov
decl
push
scas
xchg
or
int3
icebp
cwtl
out
es
lock
data16
inc
cmp
push
ret
lret
rcrb
lods
jnp
dec
js
push
rorb
movsb
xor
add
dec
sbb
xchg
mov
pop
cmp
cmp
gs
fbstp
out
aam
mov
or
jp
mov
sti
dec
add
movsb
andl
and
and
jg
js
pusha
popf
pop
and
das
inc
out
arpl
fsubrs
fcomps
jmp
enter
sbb
add
adc
xor
push
adc
pop
mov
fs
insl
mov
sarb
mov
fwait
insl
push
addr16
or
pop
in
pop
xchg
mov
xor
ret
push
out
testl
lock
aad
adc
outsb
xchg
test
cmpsb
dec
inc
andnps
enter
mov
stc
push
imul
mov
mov
rorl
add
adc
movsl
fidivrs
mov
insl
or
mul
sub
into
lods
rcr
xor
insb
add
sbbl
xor
call
in
sub
or
rcrl
mulb
ret
loop
mov
gs
mov
push
imul
sbb
hlt
icebp
cltd
dec
imul
mov
scas
xchg
aad
ds
in
pop
and
shl
pop
pop
mov
pop
bound
cmp
and
frstor
nop
rcrb
cmp
mov
fbstp
sbb
jmp
in
pushf
inc
sub
sub
insl
rolb
cmp
scas
out
ljmp
sbb
add
inc
cmp
movsl
dec
sub
fstps
and
xor
inc
mov
add
add
jne
and
dec
aas
xor
jbe
and
xchg
in
xchg
add
and
jno
add
push
fidivl
imul
test
scas
sarl
pop
into
mov
sbb
push
xchg
xor
dec
mov
xchg
push
aad
dec
adc
and
xlat
shll
mov
xchg
cmp
loope
xchg
mov
pop
lds
out
push
loop
popa
mov
mov
mov
leave
shll
out
fdivr
jnp
outsb
fildll
les
lcall
mov
cmpsb
out
jae
mov
icebp
sbb
into
leave
adc
and
and
mov
mov
cmpsb
cmp
lret
jecxz
icebp
lods
sbb
out
push
jnp
popa
in
ljmp
adc
out
jle
and
sbb
inc
pop
shl
dec
nop
xor
subl
cwtl
push
dec
mov
out
loopne
adc
sub
mov
ss
data16
mov
or
dec
push
das
or
xchg
lods
pop
iret
setns
and
movl
femms
cmp
xchg
jo
movb
mov
pop
dec
cld
and
push
sti
mov
mov
int3
out
int
sbb
sub
addr16
fs
jg
out
out
pop
xchg
dec
mov
call
loopne
adc
add
add
in
jb
xchg
fs
sahf
lcall
inc
fwait
mov
ds
in
push
xor
xchg
stos
xchg
pop
or
lock
jnp
mov
loopne
imul
mov
push
loope
dec
movsl
icebp
jno
mov
mov
add
dec
cmp
add
mov
bound
cmpl
aaa
cld
mov
popa
sbb
xor
cmp
sub
sub
jbe
mov
out
push
call
pop
and
push
stos
shll
pop
jo
mov
int
cmp
mov
movsl
mov
les
cmp
mov
push
cwtl
dec
mov
push
jno
ja
mov
jbe
xchg
push
push
aam
arpl
mov
js
push
xchg
xchg
xsha1
cmpsb
or
mov
fwait
dec
rcrb
mov
pop
scas
push
sbb
jmp
insb
insl
scas
mov
mov
xor
imul
pop
push
or
add
jmp
inc
lods
aas
sbb
sahf
xchg
sbb
inc
scas
sbbl
jl
out
aaa
xchg
std
bound
ds
andl
sbb
cmpsb
add
xchg
jbe
shrb
add
pop
repnz
insl
test
and
mov
pop
cmp
adc
jnp
fucomip
cmp
adc
jns,pn
jbe
push
or
lcall
inc
xor
mov
mov
test
cwtl
pop
leave
push
and
xchg
mov
dec
fildl
enter
dec
push
aas
fs
sbb
pop
cmpb
xchg
or
lret
mov
fisubrl
mov
mov
cmp
shrb
jecxz
je
adc
std
inc
push
inc
pop
test
or
test
push
mov
xorb
sbbl
enter
dec
insb
cmp
mov
jae
lods
test
popf
xchg
mov
mov
fdivp
mov
outsb
jg
scas
ficomps
repz
aaa
bound
mov
shrl
or
mov
or
leave
adc
cmc
cmp
inc
cltd
sbb
xor
mov
std
gs
push
ret
inc
push
dec
stc
mov
lahf
mov
or
fdivs
jo
movsl
ss
std
push
popa
mov
cmp
cs
cmp
insl
iret
cs
gs
pop
mov
mov
addb
inc
mov
cmp
hlt
xor
data16
jecxz
ficoml
sahf
ja
sbb
cmpsb
cwtl
in
mov
mov
fsts
iret
or
mov
ret
push
mov
outsl
or
ds
xor
hlt
pusha
sarl
ss
inc
loope
popa
aam
aas
push
sub
pop
mov
and
lcall
jl
test
mov
mov
sub
push
aam
daa
nop
mov
repz
or
pop
mov
inc
mov
notl
adc
scas
lahf
add
popf
test
ljmp
mov
call
test
cmp
das
xchg
push
pushf
stc
sbb
ficomps
out
negb
loop
movsb
daa
sub
jle
sub
hlt
pop
mov
andb
jl
mov
mov
mov
or
adc
sbb
pop
sub
or
out
repnz
inc
sbb
or
push
out
je
and
pop
and
inc
xchg
jb
pop
movsl
sub
push
sbb
shlb
adc
pop
xchg
mov
adc
pop
popa
sub
jmp
loop
sub
dec
mov
shrl
xor
inc
in
mov
ret
mov
mov
pop
cmpsb
es
rol
cld
lcall
dec
jae
xchg
loopne
sbb
mov
jns
and
cmp
mov
lret
push
mov
sahf
jmp
mov
stos
mov
aas
lods
in
sahf
cmpsl
jle
mov
add
push
roll
mov
add
xchg
cmp
dec
sbb
lock
lret
ret
jne
loope
out
mov
mov
xor
jno
cld
loop
into
pop
std
mov
mov
xchg
and
aam
js
add
xor
jno,pt
inc
fucomp
push
in
fidivl
jg
adc
push
es
xor
lds
roll
inc
mov
adc
pop
lea
sahf
xchg
mov
iret
cmp
aaa
xlat
shrb
adc
sahf
jb
mov
lds
aam
ret
test
adc
jbe
call
lcall
xchg
or
mov
lret
sbb
xchg
lcall
cwtl
mov
jge
test
fs
mov
jle
pop
out
fsubl
addl
push
mov
pop
mov
cs
xorl
adc
mov
push
roll
push
mov
xchg
push
imul
aas
fisttpll
cmp
pop
loopne
bound
call
adc
mov
pop
popf
lret
mov
test
push
pop
sub
int
mov
jns
sub
je
ljmp
in
gs
sbb
xchg
adc
jne
add
cmp
ret
xlat
hlt
imul
js
add
mov
imul
mov
sbb
rcl
inc
xlat
jmp
adc
fists
mov
shlb
lds
adc
sub
adc
lcall
movsl
xor
push
rcrl
cld
mov
hlt
push
jp
daa
mov
xchg
pop
and
fwait
or
and
scas
or
cltd
dec
mov
movsb
rorb
add
das
cmp
add
andb
push
dec
xchg
add
aas
aaa
and
xchg
outsl
xchg
jmp
xor
cwtl
call
insb
pusha
jae
push
out
sub
and
out
dec
push
jo
insb
ss
pop
test
mov
jl
imul
ss
lahf
stos
sub
mov
cmp
lret
ror
fucomp
aas
dec
and
mov
xchg
sbb
lock
movsl
jne
mov
imul
mov
fistps
lds
jg
vsubss
sub
mov
fcoml
xor
imul
imul
xchg
lods
and
mov
aas
dec
sub
and
icebp
test
add
fs
fwait
icebp
xchg
lcall
lods
dec
out
mov
repz
scas
daa
in
adc
pushf
mov
fwait
sub
cs
mov
add
in
mov
lgs
andl
popa
adc
jns
xchg
daa
repz
in
sahf
xor
call
scas
enter
adc
nop
ljmp
fiadds
jge
jbe
xchg
adc
dec
icebp
pop
or
and
ds
add
stos
enter
fsubrs
insb
jl
dec
sub
fsubr
mov
pop
xchg
sbb
popa
xchg
mov
fnstsw
xorb
ret
shlb
hlt
movsl
mov
scas
sub
in
adc
mov
and
lds
rolb
loopne
mov
pop
xlat
sahf
loopne
adc
insl
rol
loope
adc
or
cmp
xchg
jnp
dec
outsb
and
test
scas
shlb
xchg
loope
and
xchg
xor
stos
loop
rcr
adc
leave
mov
mov
sub
subb
ja
cltd
das
out
lock
fbstp
loope
xor
mov
and
jle
shrb
rcl
fsubrl
xchg
adc
iret
pop
jg
or
dec
adc
les
cli
imul
jp
mov
cmp
repnz
mov
imul
cmp
cwtl
shrb
add
pop
pop
push
daa
lea
push
divl
push
ds
je
sbb
das
add
rcr
aas
dec
mov
cmp
xchg
int
jns
outsb
and
adc
dec
sbb
xor
dec
push
scas
cmp
stos
sbb
imull
mov
enter
lcall
orb
pop
mov
sub
push
mov
sbb
sub
gs
jecxz
jae
dec
adc
cld
xchg
dec
ret
cwtl
mov
push
aam
out
push
hlt
ja
pop
or
jno
xor
iret
outsb
mov
stc
data16
gs
aad
mov
lcall
sarb
push
add
pop
pushf
nop
jnp
mov
jge
xchg
add
xor
and
sahf
push
mov
lret
subb
popl
xchg
js
leave
push
xchg
cli
stc
dec
subl
adc
adc
popa
sub
in
push
lcall
cmp
xor
jns
loope
inc
dec
jp
out
dec
rorb
repz
inc
nop
pop
xchg
ds
movsl
mov
mov
icebp
or
fucomi
or
sub
ja
mov
movsb
or
mov
gs
pop
imul
stc
scas
xchg
push
outsb
jne
data16
mov
mov
xchg
mov
adc
sbb
icebp
jne
jle
and
fst
in
adc
pushf
cmc
aaa
mov
jbe
jnp
imul
sahf
xlat
lods
das
movsb
fwait
bound
mov
jge
sub
fists
xor
xor
xor
bound
dec
xor
or
xchg
in
sti
xor
mov
stos
lahf
loope
cmp
enter
dec
xor
ret
push
sub
test
adc
aad
mov
movsb
lock
mov
add
xor
inc
fwait
movhps
leave
test
aas
and
lods
sti
mov
inc
ret
push
testb
pushf
dec
xchg
ficompl
sub
jns
shl
ljmp
hlt
negl
in
mov
dec
jnp
cmpsl
mov
in
in
shlb
mov
pop
repnz
or
xchg
cltd
mov
xlat
repnz
icebp
cmp
jle
xchg
fiaddl
xchg
mov
sbbl
ja
sub
popa
loopne
cmp
insb
push
mov
mul
jno
dec
cmp
sarb
aas
inc
pop
insl
scas
clc
or
rcr
loope
pop
lret
dec
sub
pop
dec
hlt
aas
sbb
jmp
flds
push
dec
xchg
sub
and
adc
cmp
outsl
add
xor
arpl
xchg
push
push
in
push
popf
out
mov
sub
mov
jnp
jae
andl
sub
idivb
or
pop
loope
dec
sub
inc
sbb
xchg
lcall
les
jo
clc
cmp
enter
xor
sbb
adc
or
lods
mov
mov
test
mov
or
cs
mov
and
flds
mov
dec
icebp
mov
dec
and
sbb
cld
fistpl
shl
popa
fmull
fsubl
mov
push
xor
mov
call
ljmp
push
cmp
in
stos
mov
ljmp
stos
dec
rorl
ficoms
xchg
cmp
mov
fists
js
adcl
out
xorl
lahf
into
hlt
pop
mov
icebp
mov
in
mov
adc
cmpsl
std
adcl
push
or
inc
push
and
mov
xchg
roll
loopne
mov
cwtl
dec
inc
mov
rorb
push
shlb
sti
gs
insl
sbb
rcl
fbstp
js
push
inc
loopne
mov
cmp
imul
fadd
and
mov
test
in
mov
push
loopne
mov
push
push
xchg
rclb
test
repnz
xor
out
xor
icebp
sub
adc
es
inc
imull
sub
in
mov
push
les
mov
sarb
icebp
incl
das
mov
push
xchg
stc
and
jnp
cmp
and
stos
xor
das
mov
lods
fildll
stos
inc
rol
mov
mov
cmp
push
cli
lret
mov
mov
stc
cmp
pop
insb
je
popa
or
pop
leave
jae
cld
out
imulb
and
cmp
mov
popa
nop
mov
fs
push
xchg
push
and
inc
mov
out
aad
mov
dec
mov
add
stc
addr16
imull
sbb
mov
invd
cmp
scas
xchg
and
or
lret
and
pop
inc
mov
cld
clc
lret
mov
sarl
adc
aas
sub
dec
insl
stc
mov
cltd
xor
in
or
mov
pop
lea
adc
add
xchg
sbb
or
ret
lods
shl
cmp
dec
test
cmp
add
pop
addr16
inc
sub
mov
jno
and
cmp
or
adc
and
aas
sbb
pop
xor
jae
cmp
pop
leave
iret
aam
out
je
xchg
fnstsw
sbb
mov
jnp
les
xchg
imul
enter
into
xchg
movsl
adc
adc
xchg
add
adc
xor
insb
jbe
sub
outsl
mov
insb
movsb
mov
movsl
xor
scas
ja
jnp
ret
sub
push
nop
adc
fs
bound
xlat
repnz
pop
lret
adc
test
test
arpl
cmp
stos
in
dec
dec
dec
fwait
cmp
mov
or
mov
mov
lret
cmc
mov
cmp
clc
sub
push
or
lods
add
scas
cmc
push
popa
mov
cltd
dec
lea
sarb
js
sbb
and
adc
xchg
gs
xor
sahf
cmp
lods
pop
stc
sub
cmp
shl
xchg
popa
aad
stc
adc
sub
or
dec
push
sbb
aaa
and
loope
cmpsl
cmp
pop
sbb
push
dec
mulb
gs
xchg
jecxz
mov
xchg
xor
sub
cmp
ret
sub
push
std
inc
repnz
dec
lret
sti
stc
jae
fcoms
sti
push
out
clc
mov
fsubrl
pop
lea
in
jmp
lret
jp
aas
add
movsl
sbb
cld
xchg
pop
mov
mov
dec
repnz
cmpsl
outsl
dec
jns
lahf
jecxz
js
ds
push
cmpsl
cmp
xor
pop
leave
ljmp
push
scas
dec
adc
sbb
ret
push
test
cmc
cmp
inc
jb
sub
jg
call
mov
mov
into
out
loope
xlat
pop
ja
imul
mov
mov
pop
cmp
adc
pop
push
inc
out
cwtl
push
xor
xor
negl
rcr
pop
fiadds
shl
fildl
sbb
and
xor
push
stos
sti
hlt
aas
sub
jo
js
aam
enter
dec
add
push
inc
pop
out
jmp
in
int
mov
mov
out
pop
add
mov
mov
test
jne
cli
pop
jno
mov
divb
sbb
lret
enter
or
xor
and
into
fwait
sbb
mov
or
repnz
or
cwtl
cmc
inc
loope
stos
jmp
shll
outsb
ja
das
pushf
cli
popa
xchg
lret
ret
fcomp
mov
rolb
fdiv
sbb
popa
nop
mov
inc
lock
mov
pop
out
mul
jns,pn
sbbl
jecxz
adc
ret
rep
repnz
cmp
testl
xchg
push
pop
xor
mov
and
mov
jo
ret
mov
xor
out
xchg
adc
pushf
jmp
mov
clc
pop
out
mov
movsl
push
mov
sbb
cwtl
and
in
lods
ds
adc
push
xchg
ficomps
pushf
std
sub
or
ss
pop
cmpsb
sub
pop
subb
cmp
mov
mov
jae
or
in
fs
ds
push
inc
imull
lods
shll
out
cmp
mov
daa
jle
sahf
push
jne
aam
cmp
rcrl
pop
xchg
ds
filds
sbb
movsl
lds
mov
push
imulb
xchg
mov
push
mov
stos
pop
inc
mov
xor
insb
sti
aas
xor
stc
aad
push
and
mov
les
xchg
sbb
cmp
dec
cwtl
mov
cmp
mov
sbb
adc
sbb
das
cwtl
in
cwtl
repnz
xchg
xor
int3
in
pop
or
add
push
pushf
jns
pop
jo
cmc
cli
lcall
cmp
mov
repz
ss
inc
sarb
popf
pushf
addr16
push
cmc
loope
rcr
ret
incl
mov
mov
cmp
loope
cmp
sub
int
out
fmull
adc
and
mov
pop
subb
or
mov
push
shl
dec
xorb
pushf
out
ja
add
es
jle
clc
xchg
jae
lret
xchg
mov
jg
hlt
outsl
cmp
xchg
mov
sub
pop
xor
scas
inc
lret
xchg
push
les
call
jle
ret
inc
sub
jl
shll
mov
or
cmp
pop
neg
mov
std
dec
jle
mov
loop
push
loopne
mov
ror
jmp
add
dec
pop
out
xor
xchg
cmpxchg
out
jbe
push
int
andl
in
jae
dec
mov
test
lahf
mov
sub
rcll
cmp
mov
dec
jo
loope
ret
out
sbb
jmp
out
mov
imul
jmp
outsb
sub
inc
call
mov
out
xor
sub
inc
jmp
push
dec
iret
adc
jne
scas
int3
add
and
xchg
inc
sbb
shll
stos
and
sub
sti
push
scas
mov
and
jno
popa
cmpsb
inc
xor
movsb
or
push
ret
push
or
inc
inc
xchg
xor
mov
mov
lea
mov
mov
inc
add
jecxz
stc
ja
mov
add
scas
fildll
mov
data16
fdivs
push
pop
xor
repz
repnz
pop
xchg
and
mov
mov
std
movsl
movsb
jno
fs
int
aad
and
or
cli
pop
adc
data16
shr
arpl
hlt
mov
pop
jecxz
xchg
es
insl
repz
aas
repz
das
mov
push
pusha
pop
cmp
aad
sbb
dec
sub
mov
icebp
int3
cli
std
call
enter
inc
cmp
outsb
outsb
mov
cld
xor
pop
call
push
add
mov
mov
dec
pusha
jg
out
jle
adc
sbbb
or
inc
push
fdivr
push
add
inc
xor
out
cmp
pop
jmp
sbb
pop
popa
bswap
clc
lds
adc
adc
std
jp
negl
pop
mov
nop
popf
push
pusha
cmpl
fsubs
cmpsb
scas
addr16
pop
fsubp
jl
insl
xchg
and
add
add
test
inc
mov
mov
xchg
cmp
dec
sbb
idivb
test
sub
pop
xchg
imul
push
and
push
fs
idivl
fistl
rcrl
adc
test
xor
or
push
jg
arpl
dec
xlat
dec
sub
xchg
addl
icebp
out
or
mov
fcmovnu
popf
adc
cmc
jbe
mov
pop
test
test
cmp
or
sbb
pop
jmp
pop
or
pop
cmp
mov
push
icebp
aaa
cmp
ljmp
das
in
aam
xchg
inc
iret
dec
dec
loope
inc
or
pushf
bt
out
jge
scas
or
xchg
jecxz
sub
movsb
icebp
insb
mov
and
jl
xchg
jg
stos
mov
enter
push
test
fstp
sub
lea
jne
jle
test
popf
dec
mov
mov
insl
xchg
in
cltd
fnstsw
pushf
jns
scas
or
repnz
mov
or
cmp
push
add
add
outsb
pop
cltd
imul
jnp
outsb
inc
scas
adc
test
and
scas
sbb
jnp
ljmp
out
push
mov
movsl
dec
push
pop
fwait
popf
push
pop
jecxz
lahf
mov
sbb
lods
dec
addl
or
mov
sub
dec
sbb
push
mov
movsb
cwtl
sbb
mov
and
aad
add
and
mov
sub
add
gs
and
nop
jecxz
inc
push
cmp
call
outsl
xchg
jae
je
dec
pop
cmpsb
jl
sub
ficoms
scas
sti
cmpsb
js
pop
push
and
mov
cmp
cltd
popa
das
mov
sub
and
sub
add
mov
mov
sub
and
daa
mulb
in
js
sarb
mov
ja
push
ret
push
loope
sub
lea
dec
dec
std
mov
xor
rcr
sub
neg
pusha
aam
dec
xorb
test
repz
push
mov
inc
lahf
mov
loop
jecxz
or
imul
mov
lret
cmp
inc
mov
aas
int
sbb
call
sbb
mov
aaa
xor
arpl
fwait
jns
fdivrl
scas
in
lret
test
inc
xor
pop
out
out
je
andl
push
or
xchg
cmp
inc
outsl
pop
les
mov
lock
dec
sub
push
ss
mov
pmaxub
mov
outsl
in
js
test
mov
mov
mov
add
sti
push
lret
mov
lods
jo
enter
inc
cwtl
and
adc
dec
lea
xchg
and
mov
repnz
inc
popa
push
sarb
lahf
push
aaa
loopne
movsb
jecxz
jbe
or
ret
int
or
fucomi
pop
in
cmp
in
cltd
inc
rorb
cmp
cmpsl
dec
sbb
push
and
mov
popf
push
stc
sub
gs
test
inc
pusha
rcll
jecxz
jmp
xor
pusha
add
xchg
add
movsl
mov
fisttps
int
lods
and
movsb
cmp
cmp
pop
jo
aas
into
leave
cmc
inc
fdivrl
das
jg
in
mov
mov
push
ficoml
sbb
shll
addb
cwtl
mov
xlat
xchg
mov
cs
mov
incb
mov
stc
adc
lcall
hlt
add
cmp
dec
mov
mov
pusha
fninit
push
stc
pushf
ljmp
ficompl
movsl
gs
mov
aad
xchg
xor
xor
std
fsubs
xlat
push
pop
stos
dec
dec
loop
roll
cmp
fdivrl
xor
insl
stos
xchg
fistpll
lahf
lods
addr16
pop
and
sarl
push
mov
or
pop
mov
fdivs
jg
mov
jne
mov
xor
or
ficomps
and
ret
test
add
divl
das
cmp
int
iret
ja
push
test
adcl
fcompl
movsb
pushf
cmp
enter
lock
add
test
and
lret
xchg
dec
fwait
jp
lahf
test
scas
pusha
sbb
notb
and
shll
push
test
mov
sbb
xchg
ja
xchg
loop
mov
jmp
xlat
pushf
sbb
insb
dec
pop
or
lea
inc
pop
jmp
aam
int
pusha
push
xor
stc
insl
xor
dec
xor
ja
push
faddl
jp
fsubrs
shr
lods
xor
mov
mov
out
xor
and
or
mov
outsb
cli
and
mov
test
and
jecxz
fnstcw
jo
fisubl
add
push
lcall
sub
mov
movsl
scas
mov
mov
aam
or
inc
cwtl
jge
in
jle
les
cltd
gs
rcrb
xor
push
dec
pop
out
stos
add
sbb
lret
divl
mov
mov
popl
fisttps
arpl
adc
dec
lret
mov
std
xor
pop
jle
in
mov
adc
push
push
sub
pop
adc
dec
lahf
loopne
sbb
imul
test
mov
daa
dec
jno
mov
add
push
test
loope
dec
pop
cmp
add
ja
add
icebp
sbb
mul
jmp
jb
add
mov
cld
sub
or
int3
test
add
and
jb
xor
aaa
out
xchg
mov
inc
popf
jge
inc
xor
or
out
xor
and
mov
out
flds
fcmovbe
xchg
mov
xor
add
jg
mov
add
and
mov
adc
sub
or
xchg
and
nop
sub
in
pop
mov
and
mov
in
cltd
cli
in
in
lea
push
fs
push
pop
sbb
scas
pushf
add
les
lods
leave
fsubrs
in
iret
xor
inc
jns
popf
add
xor
add
dec
es
push
or
or
jl
or
in
or
imul
ffree
ds
mov
enter
test
lret
shll
mov
jne
push
out
loope,pt
inc
in
pop
je
or
sbb
pop
mov
xor
inc
clc
or
into
pop
aam
cmpb
cmpsb
adc
dec
push
and
inc
cmc
incl
pushf
in
stos
pop
inc
in
adc
jns
push
lret
mov
fistpl
sbb
repnz
jge
adc
push
dec
out
cmp
add
jg
and
and
pop
lock
mov
cmp
movsb
iret
or
push
add
push
cmpsl
lds
and
daa
es
add
loop
push
add
inc
aaa
push
xchg
mov
mov
data16
fisttpl
push
mov
loop
jb
fildll
aas
push
shlb
sub
push
out
out
popa
pop
cld
xchg
nop
sub
das
repnz
loope
mov
in
aad
sbb
insb
adc
popa
dec
adc
out
popf
insb
shll
enter
xchg
test
xor
stos
add
fidivrl
out
cli
mov
mov
stc
sti
or
mov
push
cmc
lcall
das
xchg
adc
xor
xchg
mov
lds
add
inc
push
mov
fdivrp
gs
xor
xchg
mov
and
mov
fdivs
cwtl
push
daa
push
sets
cmc
loop
inc
xchg
hlt
pop
punpckhwd
popa
sbb
imul
in
dec
dec
sbb
sti
pop
cmp
test
fwait
rorl
xor
arpl
cwtl
frstor
sub
outsl
adc
aad
jmp
ret
or
sbb
jmp
sti
xor
inc
ret
scas
scas
jo
xchg
xor
and
lds
dec
aad
dec
sub
adc
cmp
pushf
pop
sub
pop
jae
arpl
imul
out
or
mov
jns
sub
outsl
cmp
mov
scas
fisubrl
fs
stos
mov
cmpsl
pop
in
cwtl
stc
inc
mov
mov
aam
daa
out
lcall
nop
shlb
stc
loopne
scas
xchg
inc
cmp
lret
mov
adc
bound
ret
xchg
in
ja
aad
hlt
inc
xor
xchg
jmp
cmp
pop
gs
sti
fs
cmpsb
jnp
cltd
vunpcklps
je
test
add
movsb
push
add
scas
add
insb
rep
pop
mov
cmp
sarb
add
pop
and
jnp
out
xor
fsts
std
je
and
loop
or
imul
leave
lods
sub
cmp
pop
jl
jmp
cmp
out
rorb
or
and
cmpsb
iret
inc
pop
xchg
pop
je
fdivr
xlat
jp
out
daa
push
sub
pop
cmpl
lret
outsb
push
xor
in
sarl
add
jns
xor
inc
lret
push
pusha
inc
inc
mov
out
mov
loope
into
aas
push
dec
in
xor
add
daa
push
int3
sub
jb
pusha
jg
lahf
mov
in
inc
shll
pop
in
cli
cmp
testb
push
aas
outsb
in
mov
mov
mov
mov
mov
inc
rcr
sub
cmpsb
inc
and
inc
fimuls
repnz
fcomps
sti
dec
dec
movl
mov
mov
add
add
pop
mov
dec
inc
cmp
xchg
mov
mov
pop
rolb
cli
mov
mov
pushf
and
adcl
pop
lods
push
dec
jmp
mov
sub
test
testb
cmp
popa
addr16
and
add
jecxz
fwait
xchg
popa
mov
jns
out
icebp
mov
sbb
pop
dec
jno
mov
lock
cmp
jmp
mov
mov
sub
dec
rorl
imul
gs
add
insb
inc
aaa
jns
push
xor
cltd
dec
addb
add
xchg
mov
push
and
push
mov
dec
xchg
subb
cmpsb
jb
push
jno
jl
or
inc
ds
and
jne
fisttps
fldenv
xchg
mov
or
and
test
sbb
sub
inc
jae
inc
sub
xor
adc
pop
fimull
out
mov
push
shr
frstor
sbb
out
mov
mov
lret
fcmovne
pop
push
cld
inc
jmp
cmp
scas
aad
stos
pushf
add
mov
nop
in
lock
ja
fdiv
jb
enter
cltd
xor
rclb
push
jp
and
loope
xchg
lret
jbe
pop
sub
nop
mov
push
and
adc
cmp
and
xchg
adc
inc
cmp
fdivs
push
ja
cwtd
and
ds
mov
leave
ficompl
pop
cwtl
cld
pop
xchg
mulb
mov
and
lret
pop
push
mov
lods
cld
sbb
or
pop
das
sti
inc
out
mov
ds
lds
insl
scas
and
mov
fwait
outsl
iret
cmp
sbb
push
add
sub
jmp
add
test
sbb
sbb
dec
pop
pop
pop
jmp
add
hlt
sbb
and
mov
fwait
xor
add
out
xchg
imul
lcall
mov
loop
std
sub
dec
xor
or
mov
scas
push
dec
aaa
cltd
enter
mov
pop
cmp
lahf
incl
adc
or
xor
mov
inc
bound
out
cs
and
xchg
pop
rcrl
xchg
aaa
mov
in
and
jno
fdivr
push
pop
cmpsl
lods
inc
roll
das
stos
adc
adc
push
push
dec
in
and
mov
call
xchg
mov
or
mov
jp
jmp
scas
scas
push
push
aas
daa
or
outsl
sbb
mov
push
popf
test
mov
inc
mov
clc
add
inc
movsb
add
dec
add
xchg
pop
and
fs
add
inc
jge
lods
push
cmp
sub
test
outsb
ljmp
pop
xorl
sub
push
std
xabort
inc
dec
push
inc
js
pop
mov
into
mov
bound
aaa
xchg
leave
sarl
mov
sahf
pavgw
je
mov
adc
rcrl
sub
inc
call
cmp
sub
xchg
and
adc
fdivl
cmp
das
cmpsb
mov
sti
xchg
jns
lcall
jb
mov
cmp
and
scas
out
jmp
pop
inc
incb
out
call
push
fstps
pop
cmc
pop
xchg
aad
cmpsl
cmp
movsb
mov
mulb
jle
loopne
shrl
and
flds
pushf
push
mov
jo
mov
lcall
dec
insl
pop
stc
gs
or
sub
add
iret
repz
loop
sub
add
loope
adc
mov
inc
dec
imul
popa
push
add
ficomps
push
ret
mov
push
sub
imul
or
pop
aas
sahf
outsl
or
jle
dec
push
test
into
dec
push
or
jnp
cs
sbb
sbb
pushf
mov
and
sub
sti
sbb
lods
cli
xor
inc
cmp
and
xlat
scas
stc
dec
add
fwait
xchg
pushf
fbstp
pop
jae
popf
fisubrl
bound
fimull
imul
sbb
mov
pushf
test
pop
sti
loope
mov
and
jecxz
test
jmp
inc
mov
lods
test
jb
sahf
adc
scas
test
call
adc
sbb
shr
mov
inc
sbb
int
mov
xlat
mov
jns
out
cmpxchg
shlb
and
xchg
mov
mov
and
xlat
push
int3
jle
arpl
ret
iret
je
or
mov
jmp
lea
and
scas
leave
dec
icebp
push
daa
add
adc
insw
pop
dec
sbb
cmp
ret
sbb
or
push
push
enter
ljmp
add
data16
pop
xchg
push
push
or
andl
jne
or
mov
and
jmp
mov
adc
adc
in
movsl
pop
fwait
jne
in
fcmovb
loop
and
cwtl
cmp
call
or
mov
stos
addr16
nop
lods
aam
out
insb
mov
into
sti
lret
sbb
call
jb
ljmp
xchg
dec
aam
push
mov
push
jge
xchg
add
xor
mov
add
into
sbb
out
pop
int
int
stc
sub
sahf
dec
sbbb
xchg
xchg
dec
dec
icebp
inc
sbb
enter
pop
lock
mov
and
cmp
mov
sub
in
popf
pop
dec
mov
out
repnz
pop
sbb
sbb
pop
add
push
idivl
andl
xchg
sub
dec
xchg
mov
outsl
cli
mov
mov
jns
gs
push
shr
ja
pop
gs
dec
xchg
mov
inc
pushl
add
xlat
out
sub
es
jle
xor
pop
cmc
lea
aam
add
outsb
push
enter
repnz
and
imulb
add
in
out
je
sbb
fcoms
add
cli
mov
inc
dec
push
push
cmpsb
sbb
scas
push
pop
xorb
pop
loope
push
loope
scas
pop
aad
mov
pop
outsl
mov
dec
ret
out
fldenv
mov
push
and
mov
ljmp
test
push
xlat
jne
dec
pusha
shr
enter
shlb
popa
push
mov
je
or
or
sub
xor
jae
pusha
mov
pop
mov
dec
jl
in
add
adcl
or
mov
movsb
adc
pop
inc
adc
call
popa
jnp
sub
mov
ret
jbe
movsb
out
scas
adc
das
jnp
stos
rcrb
addl
scas
jl
sahf
cltd
jecxz
int3
push
jl
push
and
pop
jns
xchg
xor
pop
mov
xor
repnz
pop
sub
gs
cli
or
int3
and
xchg
insl
xchg
mov
addr16
mov
mov
and
pop
test
loopne
and
and
mov
pop
lock
dec
fimuls
or
mov
and
insb
das
jge
cmp
adc
jbe,pn
rorb
aas
inc
popf
jb
add
mov
leave
test
push
and
mov
xor
cld
adc
in
mov
mov
mov
sbb
fs
cmpl
pop
arpl
rolb
leave
sub
or
cmp
popf
inc
mov
test
inc
jge
fbld
push
mov
mov
pop
add
inc
lods
lods
insb
insb
sub
cltd
xor
xorl
dec
push
icebp
test
insb
cmp
sarb
mov
inc
lcall
jmp
test
jmp
fnstcw
xor
mov
cmpsb
pop
cli
insl
xlat
lret
xchg
loope
xchg
pop
and
shl
ja
sarl
shrl
out
push
outsl
movups
or
in
dec
leave
popf
push
sbb
or
call
jmp
lods
pushf
sub
or
cli
mov
inc
and
test
roll
gs
mov
out
jnp
xchg
je
push
mov
xchg
insb
sub
mov
sub
mull
xchg
add
push
and
push
mov
jne
aad
bound
push
fldl
pop
push
ret
mov
xchg
jmp
push
scas
xchg
mov
xor
lea
mov
icebp
movsl
stos
push
popa
stos
mov
pop
or
pop
add
inc
insb
add
adc
mov
lcall
repz
test
movsl
add
add
mov
jmp
lret
mov
into
add
inc
mov
push
scas
test
jg
out
sbb
add
mov
call
dec
fistpll
inc
rolb
xor
imul
and
aad
xor
cli
xor
push
pusha
sbb
and
mov
adc
pop
mov
scas
dec
insb
sub
stc
out
mov
roll
pusha
pop
ds
mov
dec
lcall
stos
mov
sarl
jns
push
daa
sub
pop
fwait
loopne
sti
cltd
mov
sub
push
sub
xor
jno
dec
popa
popl
lret
adc
ja
mov
pop
sti
pop
xor
pusha
aam
dec
cmp
into
xlat
stos
add
jge
jl
data16
push
jbe
inc
sarb
jge
pop
pushf
clc
xchg
aaa
insb
pop
push
mov
in
pop
pop
das
and
push
pushf
xor
mov
pop
popl
push
mov
xchg
dec
bound
xor
adc
inc
xor
js
fsubs
xor
mov
arpl
pop
add
sarb
out
inc
mov
sbb
xor
cmpsl
call
fwait
and
xor
cmp
ficoml
or
sti
fimull
call
xchg
sbb
pop
lods
enter
jge
xor
xlat
mov
icebp
and
mov
and
lcall
imulb
lret
sub
je
gs
dec
jl
jmp
and
pop
int3
div
push
jmp
imul
lret
sub
lcall
and
dec
mov
cs
bsr
adc
inc
shlb
push
call
testb
ds
mov
arpl
insb
and
aas
adc
subl
mov
mov
pop
pop
dec
sub
pop
sub
jecxz
mov
pop
loope
outsb
je
rcrl
pop
mov
adc
clc
insl
xor
or
and
jmp
jbe
cli
adc
je
aaa
and
xchg
dec
rcrb
and
pushf
int
inc
mov
sub
fimull
dec
fdivs
push
jb
imul
xor
sbb
leave
push
mov
or
aam
cmpsl
idiv
in
mov
shlb
pop
mov
in
fbstp
das
mov
bnd
pop
das
fwait
inc
repnz
loopne
or
xor
dec
mov
xlat
push
fwait
mov
loop
sub
inc
cld
lret
out
mov
mov
mov
call
je
movsl
in
cmpl
jp
add
lock
aaa
mov
fsubp
ret
add
stc
lret
xor
leave
cmp
stos
in
scas
and
shll
add
clc
into
outsb
inc
dec
lds
ja
sub
jne
test
jbe
loopne
or
xor
mov
pop
cwtl
pushf
mov
mov
loop
popa
xor
scas
xor
sbb
shll
xor
jmp
out
ss
mov
cmpsl
ffreep
sbb
dec
scas
int3
icebp
adc
into
inc
jg
call
push
dec
or
xlat
cmp
inc
and
adc
lcall
cmpb
mov
popf
mov
jp,pn
repnz
push
push
orb
dec
rol
mov
pop
mov
incl
sub
adc
or
adc
xchg
sar
imul
shll
pop
push
pop
cmpb
sub
in
push
aaa
imul
bound
pop
push
adc
scas
inc
pop
mov
stos
div
out
push
fdivp
jge
or
imul
mov
sahf
orl
push
fbld
xchg
xchg
adc
stos
or
insb
sbb
dec
jmp
sbb
pop
xor
lret
push
clc
push
adc
imul
push
nop
mov
add
sbbl
cltd
fmull
imul
insb
and
mov
add
lcall
or
outsb
mov
or
push
mov
out
sbb
and
cmp
mov
add
stos
stc
outsb
mov
xchg
aas
and
mov
scas
push
push
cmp
push
jge
mov
ja
test
fs
insl
xor
lcall
jg
aas
jecxz
mov
push
push
pop
daa
mov
adc
lds
mov
pop
mov
aas
jbe
sub
pop
jns
adc
outsl
and
xlat
push
lret
inc
js
xchg
adc
adc
aaa
mov
rcll
adc
jae
dec
in
orb
dec
sub
adc
sbb
adc
test
xlat
add
popa
and
cmpsb
sbb
and
and
cwtl
popa
jnp
push
lods
mov
aas
cli
mov
pop
jnp
or
push
shlb
fsubrl
movsl
mov
sub
ds
push
pop
movsb
inc
dec
frstor
xor
sub
mov
lods
push
jle
call
outsl
sbb
nop
mov
jmp
push
adc
sub
popf
stc
pop
js
xchg
or
lret
test
push
lret
cli
mov
jnp
aas
and
shl
add
clc
pop
shr
das
mov
mov
mov
xchg
push
lss
sub
bswap
push
fldt
repnz
js
dec
fnstenv
in
xchg
outsb
jne
cli
jecxz
out
inc
add
add
leave
in
in
fwait
jmp
jae
stos
out
fs
vcvttsd2si
add
push
xor
out
insl
mov
movsl
or
dec
test
test
inc
dec
mov
dec
lea
jecxz
fwait
aam
jo
lahf
dec
or
stos
mov
nop
fwait
sbb
cs
mov
dec
loopne
int3
cld
sti
lods
cld
inc
xor
cmpsb
jg
jmp
push
mov
test
outsl
mov
cmc
pop
jg
pop
loope
xor
insb
pushf
mov
idivb
shrb
sbb
ds
ljmp
arpl
adc
lods
inc
dec
xchg
sbb
popf
int
inc
int3
ret
lock
sti
mov
xchg
imul
cmp
addr16
adc
jo
repnz
mov
xchg
xor
and
jmp
jmp
cmp
jmp
adc
bound
push
fsubl
das
gs
in
cmp
pop
push
jp
push
rorl
hlt
test
mov
jmp
aaa
and
push
mov
fcom
inc
popf
hlt
push
test
push
mov
cmp
outsl
jno
push
and
cltd
or
mov
sub
shl
mov
out
popf
into
ret
je
cld
sub
mov
mov
adc
insb
in
rclb
test
sub
repnz
ja
jno
outsl
cwtl
repnz
into
testb
sub
lret
mov
xor
pop
das
adc
cwtl
xor
or
inc
sbb
mov
jmp
and
enter
xor
stc
loopne
xor
jmp
js
push
in
ficomps
push
movsl
loop
ljmp
and
fdivrl
lcall
jle
in
test
ds
sahf
sarb
fldenv
jmp
cmpsl
rorl
testb
jnp
fcompl
cmp
and
xlat
cmpsl
dec
sbb
mov
jne
push
mov
inc
shl
inc
inc
fwait
mov
movsl
js
shrl
rcrb
pop
or
push
cli
push
mov
imul
jecxz
push
inc
dec
cmp
lods
int3
cli
pop
or
fstps
jle
mov
int3
xchg
std
mov
add
ljmp
pop
mov
mov
xchg
cmpsl
test
je
js,pn
mov
xchg
and
leave
fbld
clc
adc
aad
push
jl
mov
ret
push
fstp
xor
lea
xor
cmp
jns
stc
xor
mov
jb
adc
ret
add
mov
add
mov
mov
mov
cli
mov
or
mov
loopne
mov
lcall
mov
dec
jnp
addr16
mov
xchg
cmp
dec
shll
pop
xchg
mov
sbb
pop
outsb
sahf
int3
and
js
test
scas
fisubs
sub
popf
adc
ret
push
pop
je
dec
les
es
adc
mov
lahf
push
lods
and
or
stc
scas
sub
negb
lcall
movsb
and
cltd
pushf
gs
pop
outsb
imul
or
mov
imul
sbb
mov
adc
paddq
in
mov
mov
sbb
or
add
jno
xor
roll
data16
outsb
inc
add
sti
inc
sbb
or
add
sub
dec
mov
test
mov
cltd
xchg
dec
mul
sbbl
and
out
dec
or
fucomi
sbb
shlb
push
cwtl
mov
xlat
inc
jnp
popf
pusha
add
in
push
fldz
dec
rcrb
xor
mov
aam
inc
lods
inc
sbb
cld
imul
fcompl
pop
fisttpll
push
push
mov
repz
mov
outsl
test
bound
inc
in
mov
xor
gs
loopne
cs
pusha
sub
in
pop
imul
pop
aas
mov
or
in
stc
sbb
cmp
mov
mov
push
les
pop
push
dec
cmp
jecxz
inc
mov
fs
lods
aam
pop
bound
mov
add
nop
inc
rorb
mov
insb
fwait
mov
fstpt
outsl
mov
in
imul
cmp
dec
gs
and
lea
sub
iret
xchg
ret
lea
leave
les
dec
jbe
sbb
add
sbb
adc
stos
in
ss
inc
cli
cmp
sub
lahf
mov
filds
mov
add
add
stos
aam
insb
jg
xchg
add
push
ds
adc
pusha
repz
and
int
in
push
loopne
sbb
inc
mov
fldl
ret
rcrl
inc
push
jecxz
ljmp
pop
fstp
test
divl
add
fsubp
mov
fidivl
dec
lods
mov
es
xchg
notb
push
dec
sbb
fadds
mov
cmpl
js
popa
mov
loope
or
xor
pop
inc
xlat
xor
xor
cli
pop
and
into
dec
pop
sub
jbe
pop
in
incl
imul
ficoml
cmp
imul
int
cwtl
or
imul
and
in
push
inc
xchg
mov
pop
mov
and
jge
push
lahf
xchg
out
inc
jle
shr
gs
or
out
mov
cs
xchg
scas
outsb
jb
fbstp
jmp
out
pop
pop
in
cmp
xchg
vmaxsd
xor
xor
addb
push
loop
into
inc
mov
mov
pop
shll
jle
cmpsb
idiv
jo
jno
or
repz
inc
mov
int3
xor
in
shlb
adc
lret
or
aaa
iret
jb,pn
sub
stc
xchg
bound
insb
enter
shlb
or
mov
adc
lods
xchg
jmp
call
mov
pop
jmp
jb
jne
push
sti
sub
dec
add
in
sub
jnp
repnz
pop
push
es
call
std
add
ror
pop
ret
lcall
fiaddl
and
out
pop
fstpt
addb
std
ss
xor
inc
mov
in
pop
or
nop
jae
test
fisttpll
jecxz
pusha
pop
cmc
cmc
es
inc
adc
push
jae
lods
cmp
cwtl
sbbb
and
cmc
aaa
shll
sub
dec
push
sbb
stos
rol
inc
sub
fbstp
iret
cltd
imul
and
pusha
sbb
push
pushf
imul
aad
cli
stc
ja
mov
jnp
xchg
add
add
loope
addr16
stos
dec
or
cli
jecxz
xor
inc
mov
dec
dec
xor
cli
into
add
lahf
lods
pop
sbb
jmp
out
aas
clc
or
arpl
push
dec
add
fcompl
int
movsb
sub
push
push
enter
outsl
or
in
nop
dec
out
lret
cmpsl
mov
mov
js
outsl
idivb
cmpsl
cmp
jle
nop
sbbb
add
or
arpl
iret
mov
cld
sub
dec
sub
jne
or
fisttps
mov
jnp
idivl
jae
leave
icebp
inc
mov
faddl
jnp
push
sbb
loope
mov
loope
gs
movsl
cmpsb
repz
xchg
push
xchg
add
add
cmpsl
into
lods
xor
xchg
es
ja
push
dec
dec
arpl
movsb
nop
psubw
adcb
pushf
jecxz
sbb
adc
das
and
xor
test
cltd
cli
movsb
pop
in
push
fst
xchg
lods
cmpsw
je
outsb
aad
pop
aaa
data16
iret
push
cmpl
subl
sbb
in
xchg
mov
pop
mov
js
push
lret
notl
leave
cmp
cmp
inc
jno
mov
jb
push
insb
adcl
out
nop
and
inc
cs
lods
xchg
data16
aad
rorl
adc
adc
stc
ljmp
cwtl
cmpsl
pusha
movsl
jp
pop
aaa
aad
xor
nop
jbe
lods
lcall
pop
fs
mov
sarb
addb
sbb
lahf
std
cld
addl
outsl
lds
jg
lods
sub
inc
xchg
push
sub
add
shlb
ja
fldenv
aam
push
aaa
scas
fiadds
sbb
pop
popf
dec
xchg
pushf
lcall
filds
adc
and
call
pushf
aad
mov
dec
mov
and
mov
or
cmp
fidivrl
xchg
cmp
mov
dec
pop
inc
sub
or
bound
js
pop
push
jbe
sbb
test
movsl
std
jge
dec
push
mov
xor
and
daa
das
roll
das
ljmp
imul
inc
mov
sbb
jle
clc
xchg
cmpsb
ss
and
add
ljmp
out
mov
dec
das
push
sub
mov
dec
mov
lret
mov
mov
xor
mov
hlt
pop
push
mov
fwait
ljmp
rcl
push
pop
push
hlt
jb
jle
mov
sti
lcall
sbbl
and
mov
jbe
cmp
sbb
mov
iret
or
popf
pop
es
rcrb
idiv
int3
clc
inc
lods
loopne
xchg
pop
cmp
push
loope
adc
add
addl
shll
les
or
test
jge
orl
push
pusha
jnp
push
adc
adc
cmc
and
inc
pop
outsl
iret
mov
push
leave
imul
xorl
or
xor
mov
or
data16
mov
push
ss
test
sub
test
fcoml
clc
push
insl
mov
pushf
sub
scas
xor
mov
mov
fs
mov
stc
adc
popa
adc
sub
cmp
fmull
shl
mov
imul
xchg
mov
imull
cli
outsb
mov
stos
and
cmp
ficoms
incb
outsb
lds
imul
and
sub
push
push
lret
jnp
cmp
xchg
ljmp
jmp
jecxz
cmpsb
mov
cltd
xchg
cli
ret
sbb
pop
lock
jno
jbe
dec
roll
int
cmp
fcomps
and
push
js
adc
adc
mov
add
shlb
pop
add
xlat
movsl
mov
sub
sub
hlt
cmp
cmpsb
mov
sub
cld
sub
jbe
jg
fimuls
addr16
int3
sub
stc
arpl
les
inc
push
xor
lcall
dec
cli
pop
add
dec
and
mov
jno
test
or
jle
insl
add
aad
cmp
pop
out
shll
rol
adc
jmp
jno
cli
jle
arpl
push
mov
inc
jp
clc
es
and
out
fisttps
out
jge
popf
pop
scas
repnz
inc
mov
and
or
shrl
adc
xchg
jae
arpl
inc
call
ret
ret
add
mov
adc
push
or
pop
iret
sarl
sbbl
jl
and
ret
mov
cvtpi2ps
pop
outsl
mov
hlt
arpl
mov
add
jnp
ja
fucomip
push
dec
int3
sbb
enter
clc
stc
push
jmp
cmp
aaa
jno
adc
jecxz
or
inc
mov
into
loopne
aaa
mov
jmp
cmc
in
mov
int3
xor
lahf
fwait
scas
mov
pushw
fcoms
cs
mov
push
ret
xor
and
cmp
sub
mov
inc
rorl
inc
int
pop
test
adc
xor
jne
ret
xchg
mov
push
pop
aaa
sbb
lods
stc
shrl
jnp
out
mov
push
fldt
cltd
mov
pop
into
sub
cli
inc
or
hlt
sub
push
sahf
stos
pop
xor
cmp
add
jle
lods
mov
mov
xor
xchg
testl
dec
daa
and
loop
mov
lods
sarl
aam
or
or
add
mov
das
inc
clc
or
sub
push
sbb
xor
imul
mov
pop
test
imul
call
add
or
mov
pop
pop
imul
adc
push
xchg
in
add
data16
imul
add
mov
sub
fbstp
fnstenv
es
fcoms
aam
or
mov
mov
call
pop
mov
xchg
std
and
cmc
jns
mov
sti
dec
clc
xor
rdtsc
xchg
adc
movsb
js
inc
stos
test
inc
jecxz
imul
cmpsb
mov
dec
cmpb
cmp
inc
fcompl
push
inc
loop
jb
sbb
or
cmp
cmpsb
and
mov
jle
mov
dec
scas
jmp
add
lret
pop
arpl
fcompl
inc
adc
xor
shrl
push
gs
mov
cmovns
in
mov
push
rclb
pop
sbb
rclb
ljmp
pop
jl
adc
mov
xor
sub
and
ret
dec
mov
push
fimull
push
fwait
int3
sub
notb
popa
add
sub
mov
and
fsubrs
lds
dec
or
scas
cmc
pop
push
xchg
mov
jp
sbb
das
fcomip
ds
dec
sub
movsb
sub
sti
ja
mov
xor
aas
xor
scas
and
stc
or
xchg
arpl
mov
mov
push
js
jmp
in
repnz
mov
lcall
dec
nop
adc
pop
jns
lods
mov
arpl
lahf
rcll
out
aaa
idivb
insl
jno
xchg
idivb
enter
mov
jge
sbb
fcoms
dec
mov
pop
pop
push
sbb
push
add
int3
fimuls
jbe
jne
cmp
cmp
mov
sbb
add
rcll
outsb
jmp
xor
xchg
mov
aaa
sbb
scas
les
pop
stc
jno
popl
jb
addr16
pop
stos
mov
jecxz
lret
pop
dec
movsl
das
loope
push
jno
cmpsb
sbb
shrb
enter
lods
pop
mov
mov
ficoml
dec
fs
sub
push
push
push
aam
or
mov
insb
push
popl
ficoms
lahf
dec
or
ljmp
inc
sub
lret
sti
mov
inc
lock
cs
aam
cmpsl
shlb
and
mov
test
mov
or
outsb
scas
sub
or
inc
adc
movsl
xor
xor
sbb
cmpsl
ret
and
mov
mov
push
xchg
xor
pop
mov
sarl
xchg
mov
pop
lock
pop
push
and
sbb
inc
cmpsb
mov
mov
sbb
cwtl
push
stos
xor
sbb
and
push
xlat
test
sub
push
movsl
add
jbe
sti
shrb
mov
xchg
and
insl
hlt
xchg
mov
xorb
mov
xchg
pop
adc
xor
push
pop
iret
and
int
cltd
jecxz
in
test
js
sub
sbb
cmp
lods
popa
mov
movsl
icebp
insb
sbb
push
out
fistl
aad
push
arpl
add
xchg
push
outsl
add
pop
cltd
or
clc
mov
repnz
inc
sub
fbld
cwtl
inc
adc
pop
and
fs
rcll
scas
push
out
inc
inc
fistpll
xor
add
jo
ret
popf
xorb
sbb
mov
pop
enter
inc
lahf
pop
cltd
mov
iret
rorl
jmp
pop
cmp
and
and
call
aas
rorl
mov
sub
lods
arpl
movl
roll
mov
mov
mov
jg
sub
mov
cmc
mov
add
jb
mov
gs
pushf
insb
xor
mov
and
sbb
lods
aam
jmp
aas
sub
clc
dec
inc
stos
inc
std
pop
js
or
hlt
mov
sub
cltd
enter
inc
cmpsb
cmp
xor
add
inc
sub
inc
lods
ds
les
sub
fmul
mov
sbb
popa
in
and
sti
and
dec
xor
jae
aas
lret
lea
dec
jmp
xchg
inc
orb
fcomp
arpl
ds
dec
fisttpl
or
ja
adc
fwait
and
mov
ss
test
lock
or
cmpsb
jl
ret
push
popf
cmpl
adc
mulb
mov
das
push
push
add
nop
inc
inc
and
adc
pop
std
inc
cwtl
bound
out
push
test
lea
jl
fs
fnsave
stos
sbb
adc
push
imul
or
xor
xor
scas
adc
xchg
push
fwait
cwtl
push
fcomp
xor
daa
cwtl
lea
popf
mov
inc
pop
pop
inc
lret
cmp
out
dec
mov
sahf
pop
cmp
pand
mov
movb
int3
cmp
lods
loop
cmp
cmp
jno
inc
in
pop
push
cmp
mov
cmp
mov
cmpsl
push
push
outsl
shr
push
cmp
hlt
insl
lea
jge
jnp
xlat
adc
cmc
adc
test
xlat
inc
movsl
aam
sti
aaa
mov
int
jg
adc
aad
cmpsb
popf
shlb
mov
xchg
cmpsb
lods
pushf
call
mov
and
cmp
int3
mov
cmpsb
in
xor
mov
les
xchg
in
imul
repz
gs
jmp
icebp
pop
pop
pop
mov
mov
sbb
jecxz
sarl
aam
xchg
hlt
mov
push
xor
test
into
insb
jmp
outsb
and
push
and
les
movlps
lret
imul
outsb
or
aad
inc
jb
out
rolb
xchg
fldcw
divb
outsb
shrb
sbb
or
push
add
xor
pop
or
test
adc
add
ljmp
je
mov
or
dec
cs
pop
repz
stc
cltd
jnp
sub
outsb
pop
sti
sti
sub
imul
loope
out
scas
mov
jge
loopne
aas
fimull
jmp
std
jmp
imull
add
out
cli
sub
mov
dec
dec
add
or
outsl
fmuls
cvtpi2ps
xchg
mov
xor
imul
std
and
mov
out
cld
iret
mov
push
push
pushfw
fucomi
fs
pop
add
nop
push
aam
sbb
cmp
cmp
sbb
jns
mov
sbb
dec
mov
test
lret
xchg
dec
pop
dec
loopne
stc
mov
aam
jp
aaa
jbe
mov
adc
mov
pop
or
or
je
cli
test
and
pop
pop
dec
outsb
sbb
fmuls
pop
ljmpw
push
inc
xchg
push
mov
jl
adc
out
cmp
addb
adc
repnz
dec
rcrl
sti
cmp
addr16
dec
xchg
aad
cmc
cmp
shlb
mov
dec
orl
xchg
xchg
sub
ja,pt
adc
jns
mov
jne
dec
inc
repnz
aas
adc
dec
lods
dec
cmp
sahf
sarl
cmpsb
out
lods
daa
dec
adc
shrb
lcall
addr16
adcl
push
cwtl
shlb
mov
add
neg
inc
push
jae
mov
shll
dec
ret
stos
inc
lods
lock
into
pop
jns
mov
mov
lds
cmp
aad
sub
fwait
jl
and
xorb
rcll
xchg
jp
jb
dec
insb
or
jl
nop
popa
fwait
adc
sub
xor
jb
adc
les
sbb
filds
repnz
mov
xor
sbb
mov
and
icebp
dec
lcall
sub
sahf
insb
cs
inc
lea
out
mov
jge
lcall
cld
dec
fmull
adc
xorb
push
sbb
jb
fisubrl
mov
dec
popa
das
negb
jo
add
popa
test
and
xchg
nop
push
xor
push
in
inc
cmp
mov
inc
scas
fcompl
outsb
push
cmp
fcompl
push
xor
xor
pop
daa
xor
cmc
or
pop
inc
jno
jg
or
sub
and
sbb
sbb
cltd
rclb
jo
cli
andl
sub
sbb
popa
xor
pop
aas
popa
cwtl
xor
lds
pusha
adc
mov
fisttpll
das
test
dec
int
pop
mov
and
mov
jae
xchg
inc
movsl
cmp
or
cmp
mov
jne
cmpl
fildll
dec
popf
in
inc
mov
ja
popl
or
loope
mov
idiv
add
movsb
xrelease
sbbb
sbb
popa
push
xchg
sbb
repnz
loope
push
imul
out
mov
shlb
in
mov
imul
and
jno
sti
push
shrb
mov
lcall
jb
mov
jg
test
add
fcmovnb
arpl
cld
xchg
xor
cmp
daa
jns
sti
xchg
cwtl
scas
flds
nop
pop
cmp
mov
dec
sbbb
sub
xchg
in
repnz
sub
icebp
popa
pop
out
push
and
std
mov
xor
mov
daa
ret
jl
lock
add
cmpb
insb
pop
xchg
adc
clc
repnz
dec
ds
mov
or
cmp
cmpsb
dec
sub
and
push
sbbl
iret
xor
add
insl
inc
ja
pop
repnz
out
jle
inc
jb
repz
jne
mov
add
mov
ds
lods
xchg
shlb
outsb
jo
hlt
pop
clc
lds
popa
stos
sub
mov
mov
mov
jg
adcl
ret
mov
leave
xchg
adcl
shlb
enter
ficompl
or
inc
adc
dec
push
sbb
jbe
movsl
loope
ds
jae
cmp
xchg
add
js
les
jb
scas
xor
sbbl
mov
cmp
int
push
mov
adcb
inc
mov
push
fisubs
cmp
bound
insl
xor
cwtl
or
lahf
scas
data16
movsb
es
sub
and
cwtl
addr16
into
int3
dec
call
inc
xchg
mov
imul
xor
pop
mov
xor
xchg
loopne
arpl
fbstp
lock
sbb
cmpsl
movsl
in
mov
add
mov
mov
lods
mov
stos
stos
inc
in
xchg
mov
lcall
xor
jecxz
mov
cs
std
mov
xor
or
arpl
sub
out
std
push
shll
call
or
push
out
sub
cmpsb
add
jno
mov
mov
or
push
xchg
out
leave
adc
fnstsw
push
shl
jl
pop
sub
fs
push
popf
cltd
data16
out
xchg
jg
mov
or
movsb
fdivrl
cmp
jecxz
xchg
mov
test
out
bswap
gs
push
xor
inc
idivl
mov
cld
mov
adc
insl
mov
push
jle
sbb
std
mov
clc
dec
mov
push
xcrypt-ecb
cmpsl
iret
mov
xor
arpl
mov
adc
movsb
add
dec
jo
aad
fistl
mov
arpl
adc
adc
popf
xor
pop
jmp
inc
mov
sbb
sbb
addr16
fld
inc
adc
sti
into
mov
mov
jge
adcl
dec
cmp
fcom
ds
xchg
push
pushf
data16
jge
pop
in
jge
aad
mov
int3
add
add
or
xchg
jecxz
vmread
inc
dec
fwait
leave
add
push
sub
mov
out
jns
dec
je
mov
dec
dec
dec
sbb
pop
jnp
addr16
cli
aas
clc
ret
pop
das
xor
pop
dec
hlt
xor
jae
dec
pop
or
add
sbb
sub
lds
or
test
push
jp
mov
loop
pop
pop
insb
and
or
icebp
rcll
add
jle
aas
mov
jp
mov
aam
jo
mov
les
data16
jmp
xchg
rclb
sub
sub
sbb
mov
dec
jo
jnp
dec
rolb
inc
cmpb
cmp
adc
cwtl
dec
inc
jp
push
sub
mov
xchg
stos
sbb
in
xor
add
mov
sub
or
lods
mov
pop
jne
mov
push
shlb
mov
call
cli
jecxz
push
bound
pop
pop
mov
sbb
mov
imul
adc
pop
pop
cli
shlb
or
dec
jne
insb
ret
jmp
pushf
add
cmp
mov
dec
mov
outsb
mov
dec
add
in
cmp
pop
in
xchg
loope
inc
js
mov
mov
push
lcall
scas
mov
daa
test
mov
sbb
in
test
add
insl
jp
add
mov
pop
arpl
inc
filds
push
stos
dec
xchg
scas
adc
inc
out
bound
stos
lods
dec
pop
mov
fstl
xchg
pop
aam
mov
pop
mov
fwait
inc
or
push
sbb
sub
insb
test
mov
mov
sub
out
and
inc
lods
dec
xchg
sub
leave
xchg
push
out
mov
mov
hlt
inc
aad
inc
fnstenv
daa
xor
stos
and
int3
push
arpl
cmp
pop
add
jl
cltd
xor
dec
inc
rol
je
mov
insl
mov
js
mov
adc
testb
rcr
jmp
cli
jb
fs
inc
xchg
std
daa
mov
dec
fcmovu
ret
sub
jmp
out
push
jae
mov
dec
pop
sub
jl
sub
sahf
int
sbb
sub
pop
loope
fcmovu
pop
test
mov
cmp
and
sub
dec
push
sahf
popa
fdivrl
outsb
aaa
push
mov
adc
ss
icebp
fucomp
inc
pop
or
sahf
sub
out
shll
pop
mov
mov
xorb
adc
imul
mov
nop
sbb
xor
sbb
jp
test
mov
filds
or
jg
cmp
pop
mov
mov
mov
lahf
in
dec
aad
ss
xchg
push
add
sti
lcall
fisubs
nop
pushf
int
loope
clc
scas
inc
mov
pop
inc
out
mov
in
push
push
ret
ljmp
or
xchg
xor
and
adc
jmp
cmpl
ds
or
push
rcr
mov
scas
xor
and
fmul
or
mov
loopne
addl
addr16
std
cmpl
repz
enter
insb
or
hlt
pop
scas
out
punpckhbw
mov
add
push
mov
ds
mov
sub
shufps
mov
jno
sarl
dec
mov
xor
xor
fucomi
xor
fucom
xchg
ja
pop
dec
rcll
outsb
test
dec
cltd
cmc
dec
xchg
pop
je
movsl
aaa
and
adcl
xor
and
fcom
outsl
mov
aaa
loope
push
cmp
repz
es
sbb
cmpsl
fs
icebp
sub
sub
add
mov
shl
addr16
pop
adc
sbb
rcrl
repz
push
jmp
mov
aam
rorl
mov
inc
and
push
mov
mov
sbb
mov
mov
vfrczss
and
cmp
bound
das
mov
cld
in
loopne
jae
aam
mov
dec
movsb
pop
xor
in
loop
call
loope
aad
addb
mov
dec
dec
jno
out
push
mov
xchg
sarb
mov
nop
dec
push
xchg
in
fimuls
xor
pusha
xchg
iret
scas
adc
xor
add
enter
mov
aam
cwtl
lods
and
icebp
loope
pop
adc
or
incl
sub
dec
add
ret
cmc
xchg
jns
movsb
jnp
jle
jae
scas
pop
in
push
adc
std
mov
adc
inc
ret
out
bound
clc
int
pop
mov
cmc
adc
enter
xlat
insb
and
push
xor
addl
arpl
cmp
dec
loope
inc
orl
rcrl
idivb
call
push
mov
mov
push
mov
hlt
xor
inc
jecxz
insb
push
icebp
movsw
jnp
mov
jnp
fdivrs
movsl
sahf
rcrl
xchg
fs
fnstenv
or
popa
cwtl
out
jae
sub
dec
cmpsl
push
pushf
scas
sti
xchg
and
sbb
xor
cmp
fs
cli
mov
lret
and
sub
fsubp
jmp
neg
xchg
inc
lods
dec
mov
cld
xchg
scas
mov
cmpsb
icebp
inc
add
scas
push
pop
cwtl
in
ds
pop
lret
das
jecxz
pop
imul
stos
mov
imul
jbe
jo
mov
or
jp
or
data16
jle
loopne
lret
lea
cld
cltd
in
test
rcll
shl
or
je
in
into
cwtl
out
xchg
inc
mov
sub
xchg
or
xchg
mov
in
mov
int3
mov
xchg
adc
stos
jno
rep
jl
xchg
in
icebp
aam
jl
fidivrl
pop
xor
xchg
push
sub
add
aad
or
lods
jmp
outsl
mov
fistpl
jmp
dec
cld
das
hlt
xchg
orl
loopne
mov
fbstp
jnp
js
in
jns
cmc
or
testb
mov
or
dec
movsb
pop
cmp
sbb
loop
dec
add
mov
sub
dec
jb
adc
leave
sahf
sub
ds
int
inc
fnsave
lock
sar
mov
cmp
and
daa
test
push
inc
into
lcall
roll
adcl
addw
scas
shrb
iret
xchg
push
fwait
adc
mov
ret
stos
iret
int
inc
es
sbb
xchg
flds
pusha
mov
nop
push
sahf
jb
loope
in
out
cmpsl
or
scas
push
inc
icebp
pop
and
mov
cmp
insb
je
sbb
js
mov
mov
jp
lds
sbb
cwtl
jmp
popl
cmp
and
mov
scas
dec
icebp
cmp
xor
or
popa
cli
lock
mov
stos
sub
sub
in
stos
popf
push
arpl
scas
sub
sub
popa
jbe
mov
nop
cs
jns
jg
ss
dec
push
xchg
inc
cmpsb
enter
mov
movsl
pop
mov
dec
scas
xchg
insb
aas
es
sbb
sub
fsts
hlt
and
mov
pop
inc
push
pop
jmp
sbb
cmpb
xchg
nop
cmpsl
cmc
inc
xlat
xorb
sbb
jbe
lods
jg
xchg
mov
inc
and
dec
andb
stos
push
lea
pop
pop
out
rcrl
xor
jmp
lea
jns
ret
fnstenv
pop
mov
adc
and
stos
or
and
loop
adc
rcr
in
dec
jbe
lret
and
or
fdivrl
jb
pusha
stc
and
mov
push
jle
dec
into
pushf
dec
movsl
inc
imul
pop
mov
or
rorl
aad
imull
adc
cmp
push
insb
aaa
stos
loopne
jge
sti
insl
lret
sbb
inc
insl
clc
xlat
jne
mov
adc
push
call
daa
pop
stos
pop
imul
test
hlt
lahf
pop
sbb
jne
cmp
cmp
cmp
cmp
das
cli
jae
fists
adc
shlb
shr
mov
fsubr
xchg
leave
rcrb
les
mov
pop
mov
lret
out
inc
hlt
ret
jg
lret
popa
push
dec
mov
lods
jecxz
aam
addb
test
aad
add
les
sbb
mov
les
pop
xor
jno
jne
mov
and
in
repz
daa
cwtl
test
jge
cs
pusha
dec
enter
dec
cmp
jns
dec
sahf
sbb
mov
cmpsb
dec
xchg
pop
jmp
inc
nop
mov
popa
xchg
daa
inc
jge
pop
cwtl
pop
cmpsl
xchg
loope
lods
pop
aas
jbe
xchg
adc
out
arpl
jo
pop
arpl
imul
shll
xchg
sub
test
mov
rorl
jbe
adc
cmp
mov
pop
and
jmp
and
add
xorl
mov
sbb
sub
movsl
outsl
mov
pop
mov
lds
mov
mov
insl
lret
push
daa
int
xchg
mov
mov
popa
jns
sbb
inc
pop
push
inc
xchg
or
pop
jp
jp
push
xor
and
mov
outsl
out
pop
jge
daa
add
cmc
or
loop
cli
imul
lahf
mov
lods
orb
ret
cmp
cltd
loopne
or
out
sub
shrl
add
push
rorl
ja
aad
mov
ret
mov
test
stc
push
bound
ficoms
repnz
pusha
pop
inc
cli
or
cmp
daa
sub
push
dec
xchg
lods
cmp
sbb
xchg
mov
push
nop
xor
adc
add
jae
inc
frstor
pop
push
and
cmp
lock
stos
and
xchg
jae
int
rolb
jbe
adc
sub
xchg
jmp
mov
fmul
mov
ss
xchg
push
and
inc
clc
inc
or
xchg
mov
outsb
dec
sbb
xlat
mulb
sbb
xchg
bound
jmp
out
mov
sub
shlb
mov
pop
pusha
sbb
mov
test
bnd
lds
scas
and
hlt
xor
aam
in
leave
in
jo
and
int3
mov
and
pusha
pop
and
push
and
imul
test
call
test
cwtl
push
cmp
sub
in
cs
mov
inc
mov
push
enter
or
insl
jl
xchg
mov
push
add
cmp
loope
mov
adc
mov
dec
mov
xchg
push
xchg
out
and
pushf
lods
repz
jne
cltd
popf
push
or
lods
enter
add
adc
sbb
and
jnp
or
mov
testl
push
ror
out
bound
and
dec
fs
in
scas
dec
cmp
ss
or
xchg
mov
jnp
mov
pop
push
dec
test
shlb
and
mov
idivl
adc
mov
mov
stc
xchg
push
lea
push
shlb
movsl
sbb
mov
fcmovbe
pushf
pop
arpl
stc
push
push
xchg
das
dec
add
push
cmpsb
int
add
sarl
and
push
jmp
pop
fs
data16
out
rcr
outsl
mov
cmp
je
subb
das
push
pop
cmp
mov
jne
mov
dec
dec
push
jmp
scas
sub
icebp
shll
inc
mov
push
mov
mov
lret
dec
xor
push
xchg
push
sub
inc
sub
xchg
or
sbbl
in
les
cmp
xchg
rcrb
shrl
jle
dec
jne
test
xlat
mov
rcrl
bound
xchg
fs
loope
popl
outsb
push
push
mov
inc
mov
aaa
jb
cmp
dec
orl
lahf
mov
jno
movsl
sub
xor
das
xor
jbe
call
mov
mov
ljmp
lret
jns
jo
loopne
in
movsl
jecxz
fmuls
fcoms
jl
add
jo
insb
xchg
fcmovnbe
xor
pop
out
std
pop
inc
inc
dec
push
jecxz
adc
mov
add
arpl
repnz
jne,pt
popa
xchg
and
inc
mov
add
in
and
cmpsl
pop
mov
in
or
push
mulb
rorl
xor
subb
enter
in
icebp
imul
es
inc
sarl
in
test
movsl
into
xor
xchg
sub
or
adc
test
out
cmp
and
push
jbe
stos
scas
and
cmc
je
push
xor
sub
addr16
push
call
sti
ret
fnstsw
test
or
stos
mov
xchg
call
sbb
fistl
cs
sub
fndisi(8087
xchg
mov
and
iret
shrb
mov
adc
fs
pusha
jae
jge
pushf
mov
stos
jae
daa
icebp
test
ret
out
outsl
bound
or
xor
cmp
lahf
or
push
jne
mov
dec
jae
cmc
xor
repz
mov
cmp
arpl
sahf
je
mov
xchg
mov
lea
mov
xchg
insb
rorl
cli
lahf
jns
lods
inc
inc
mov
and
loopne
add
push
mov
movsb
aad
add
aaa
movq
mov
push
sub
mov
push
dec
push
int
pop
push
adc
scas
dec
jl
movsl
sub
mov
adc
pop
ffreep
lcall
or
xor
xchg
outsb
repz
inc
adc
mov
lods
mov
fidivrs
mov
mov
push
sub
push
or
jnp
pop
push
sub
mov
sbb
mov
cwtl
adc
imul
es
mov
jo
fcmovne
push
mov
fs
jg
cwtl
call
and
mov
ret
add
sbb
fistps
in
pop
and
or
mov
push
andb
inc
pop
sub
outsb
dec
aam
clc
push
add
jnp
xrelease
mov
fmuls
fnstsw
dec
adc
mov
test
in
fnstcw
fildll
sti
xor
add
pop
or
mov
jno
push
cmc
loop
lret
push
scas
jle
and
dec
dec
mov
push
cmp
aas
dec
push
xchg
rcr
insl
out
sub
imul
sti
sub
pop
adcb
xchg
mov
dec
sub
push
test
mov
or
loop
clc
sbb
lock
test
shrb
out
and
jo
jae
ret
sbb
mov
pop
sahf
cmp
sub
push
sbb
fisubs
dec
pop
or
aaa
pop
ficompl
mov
jne
and
xchg
mov
and
jecxz
adc
arpl
push
push
inc
popf
cmc
outsb
das
imul
ja
jmp
mov
testb
pop
dec
sbb
jo
stos
and
or
and
mov
xor
cmp
fidivrl
dec
call
mov
pop
cmc
shlb
mov
out
pop
in
dec
stc
push
rorl
adc
rorl
xchg
lods
loopne
mov
adc
pusha
outsb
pushf
pop
pushw
popa
mov
stc
clc
mov
outsb
pop
cmp
jb
mov
out
adc
insb
test
dec
cmp
repnz
clc
jl
mov
pop
mov
popf
out
mov
adc
shr
sbb
xlat
fisttpll
adc
incl
inc
daa
jbe
popf
cmpl
jnp
addr16
stos
dec
adc
cwtl
es
jae
ds
in
movsb
loope
stc
jae
nop
push
sub
pop
call
fcmovu
addr16
ss
sub
mov
cltd
mov
sbb
mov
xchg
pop
lahf
jno
pushf
pusha
lds
sbb
add
jne
ficoms
push
jmp
popa
cld
push
vshufps
into
sub
adc
push
xchg
sub
rcrl
cld
loop
dec
lods
test
repz
andb
inc
jl
arpl
rorb
lock
lret
pop
dec
sub
cmp
loopne
xor
testl
mov
scas
xchg
lods
pusha
pop
push
ret
test
cmpsb
ficoml
add
lods
cs
bound
mov
data16
adc
rcrb
jmp
push
push
test
popf
imul
mov
and
pusha
push
or
jl
ss
pop
sub
and
jae
sbb
xor
in
sti
pop
sub
dec
scas
push
out
gs
mov
mov
mov
sti
fucomip
sub
vphsubwd
sahf
adc
mov
sub
loop
outsb
xor
outsl
subb
lcall
dec
push
inc
mov
add
icebp
dec
sti
icebp
push
cwtl
rcrb
dec
call
psubd
add
push
push
xor
mov
pop
insl
popa
out
xor
cs
js
push
movsb
bound
test
xchg
sahf
mov
cltd
inc
aaa
out
sti
mov
dec
ret
out
dec
lahf
iret
aam
inc
pusha
in
lcall
out
mov
mov
jb
movsb
adc
jne
cmc
mov
scas
insl
int3
xchg
loop
dec
push
aaa
rclb
fisttpl
or
sub
sbb
or
inc
sbb
std
sub
fisttps
mov
ror
pop
push
and
mov
mov
or
lcall
faddl
out
mov
outsb
loope
add
xlat
cli
dec
test
jnp
mov
push
mov
enter
loopne
inc
pop
or
mov
mov
push
xor
push
push
adc
cmp
push
add
std
cwtl
lret
cwtl
shr
sahf
pop
push
and
push
or
push
mov
add
and
xor
cmp
mov
insb
jns
daa
cmpsl
inc
mov
dec
fcomi
sub
das
inc
jle
arpl
in
ja
iret
add
lea
and
lods
xor
cmp
push
clc
ljmp
xchg
xor
sbb
add
sbb
decl
or
shlb
add
xchg
scas
in
adc
jle
jl
or
cwtl
sbb
inc
push
pop
iret
mov
adc
xlat
test
jle
dec
sarl
sub
fisttpll
fildll
cmp
stos
popf
hlt
inc
aas
xchg
jg
push
loope
scas
mov
pop
mov
loopne
mov
xor
xchg
mov
dec
jne
xor
int
out
into
imul
jbe
mov
movsl
mov
push
xchg
lahf
push
dec
push
nop
add
loopne
jecxz
stos
and
adc
cmp
outsb
add
lret
mov
push
out
fistpll
pop
pop
or
cs
pop
adc
in
dec
push
jns
sbb
aaa
push
and
loope
out
dec
popf
mov
mov
cli
ds
mov
pop
jnp
pop
push
jecxz
les
aaa
push
cltd
out
outsl
hlt
xchg
xchg
xor
jge
fidivrl
aam
inc
cmp
inc
mov
inc
jae
test
mov
cmp
data16
in
xor
repz
mov
add
push
cwtl
in
in
rcrl
loop
les
cmp
xchg
iret
pop
data16
ficoml
jo
add
jno
jbe
mov
ret
rol
adc
pop
lahf
cmc
or
mov
xchg
cld
ret
adcb
pop
pop
mov
mov
inc
fmulp
dec
shrd
data16
jb
pushf
inc
inc
dec
pop
push
test
aaa
xchg
lret
lds
sarl
sbb
mov
lret
andl
mov
pop
adc
xor
push
add
fcmovne
sub
mov
sbb
adc
inc
inc
jne
mov
lahf
xor
mov
mov
sbb
and
out
mov
jo
inc
push
pusha
sti
cld
call
jmp
fsub
je
cmp
loope
cmp
xor
int3
xor
fisttps
sarl
lret
ds
ljmp
mov
stos
mov
shll
loopne
nop
not
sub
cltd
jle
adc
aaa
popa
push
testl
daa
inc
inc
mov
repnz
mov
sub
pop
cmp
push
xor
sub
push
sbb
mov
mov
and
fnstcw
std
jp
popf
jb
cmc
popf
jle
sbb
lea
scas
idivl
dec
test
shll
fsubrl
push
add
xchg
jg
push
stc
fwait
mov
mov
push
ret
mov
push
out
nop
and
inc
jns
stc
pop
out
xchg
fstp
out
sub
call
inc
ja
fsubrp
push
or
lods
sahf
and
subl
addr16
xchg
inc
popa
jns
sub
dec
fisubrl
sub
test
cld
in
and
loopne
push
xchg
lret
xchg
mov
xor
adc
lea
pushf
ljmp
mov
mov
push
cli
pop
push
jl
popa
inc
sahf
pop
mov
mov
cmp
mov
jae
in
clc
dec
add
inc
push
outsl
push
pop
aaa
ljmp
push
inc
stos
movsl
repnz
movsb
insb
dec
jle
mov
cmpl
lret
adc
daa
jno
jb
cwtl
in
mov
mov
popf
jge
out
push
mov
pop
stos
mov
lcall
popf
pop
int
addl
jbe
xchg
mov
ret
cli
add
fs
adc
hlt
or
lea
fisubrl
lock
bound
data16
loop
pinsrw
cltd
jo
fildl
les
mov
dec
mov
push
mov
xor
xchg
push
jb
aam
addr16
bound
cmp
loope
add
jmp
pop
or
repnz
mov
lods
insb
sub
add
add
movsl
mov
push
test
fstpl
xor
dec
das
mov
test
xchg
inc
dec
movsb
in
add
in
loopne
das
jmp
xor
xchg
stos
jmp
subb
mov
rorl
mov
data16
jge
add
hlt
push
and
and
in
lea
pop
mov
iret
call
jg
rcl
fsubrl
jle
push
mov
mov
fistps
mov
mov
add
popf
xchg
inc
and
xlat
mov
in
cmpsb
js
fildll
dec
mov
xchg
lcall
mov
jo
lahf
push
push
mov
adc
pushf
jmp
out
pop
xorb
rolb
loope
cmp
cmpsb
in
dec
aaa
cmc
or
add
jge
pop
xlat
movsl
sub
push
pusha
test
dec
mov
fidivs
jmp
xchg
adc
gs
scas
icebp
jbe
fstl
das
cmc
jno
pop
xor
xorb
aad
pop
push
sbb
dec
jnp
stos
adc
mov
cmpsb
add
jo
push
roll
testl
mov
in
roll
sahf
stos
sbb
cmp
pop
loope
jp
jg
fldt
xchg
push
je
loopne
outsb
pop
lock
rolb
loopne
jecxz
push
int
fsubrl
lahf
add
xor
or
daa
in
js
xchg
adc
fs
pop
repz
frstor
fsubs
jge
push
pop
popa
or
xlat
xchg
dec
push
and
int
mov
pop
or
lods
mov
je
mov
inc
cmp
sbb
dec
xlat
add
add
ds
mov
repz
insb
daa
aad
xlat
cld
ret
in
mov
iret
push
loop
popf
adc
js
dec
mov
sbb
sub
fcomps
cwtl
out
ficompl
inc
pop
push
jo
int3
stos
je
out
imul
mov
loopne
and
jbe
sbb
outsb
int
xor
mov
pop
push
pusha
push
loopne
or
lcall
xchg
inc
out
test
xor
shlb
cmc
ja
daa
stos
shll
mov
xor
cmc
out
adc
cmp
mov
push
add
in
scas
push
jae
xchg
lds
jns
outsb
xchg
cmp
cmp
or
pop
rorb
push
mov
fmul
dec
jecxz
jge
outsb
push
jo
and
push
mov
jecxz
push
popa
push
fldcw
cmp
pop
imul
loop
or
pop
mov
movsbl
mov
adc
xor
mov
lret
cmpsl
xlat
cmp
jnp
xchg
inc
or
es
repnz
es
inc
cmp
call
mov
fcoms
fwait
dec
and
jp
roll
test
inc
or
lods
cmp
mov
fsubrl
ds
jle
and
std
mov
pop
sbb
dec
inc
inc
cmpsb
pop
jns
pop
aam
lods
push
sub
mov
inc
popa
mov
xchg
jne
loopne
hlt
push
push
jp
in
xor
cld
jge
adc
jle
dec
jb
mov
mov
jge
push
push
scas
xlat
mov
aam
ds
adc
leave
les
mov
loope
mov
inc
push
cmp
fwait
jne
xchg
jne
pop
cs
mov
or
scas
mov
and
clc
fidivrl
xchg
jbe
inc
mov
inc
pop
mov
bound
add
adc
into
adcl
cwtl
mov
sahf
inc
sti
hlt
sub
out
push
add
icebp
sub
mov
popa
and
rcr
outsb
pop
pop
stos
sbb
sbb
mov
lcall
fisttpll
dec
cmp
push
lods
mov
jns
sahf
rcrl
cmp
mov
add
jne
inc
jne
jmp
addl
xchg
or
jmp
aaa
mov
sbb
cmp
or
adc
cld
pop
push
lock
repz
icebp
nop
stos
lock
call
and
xchg
push
cmp
mov
adc
add
into
out
inc
and
scas
jle
aad
pop
pop
es
push
mov
mov
icebp
stos
adcl
jge
cmpsb
sahf
and
cmp
into
in
jns
jmp
xchg
test
imul
cmp
subl
cmc
leave
push
pop
cs
cmp
cmp
roll
jl
lahf
cli
lods
sti
outsl
shlb
or
dec
lods
push
call
loope
xchg
jmp
sub
scas
pop
sbb
xchg
dec
scas
ljmp
lea
sub
bound
dec
jbe
pop
pop
mov
out
mov
shrb
shl
xchg
adc
mov
xchg
leave
or
mov
loop
push
iret
cmp
mov
jnp
sub
stos
idivb
iret
mov
and
sbb
mov
iret
insb
leave
ret
jnp
push
fdivs
pushf
sti
mov
dec
repnz
outsl
and
and
mov
or
sub
xchg
movsb
or
fucomip
into
mov
add
pop
imulb
mov
xchg
mov
sub
and
mov
xlat
sarb
sbb
pop
daa
lret
shlb
pop
fldcw
test
daa
mov
hlt
daa
imul
sbbb
mov
ss
pop
gs
in
mov
push
cmpsl
mov
fstpl
pop
fdivr
sub
test
adc
mov
sub
lahf
adc
push
add
cmp
mov
sub
jle
popa
mov
sti
push
sbb
sub
xor
enter
repnz
mov
mov
shr
add
xchg
add
pop
sub
fimull
loop
mov
xchg
xchg
xor
sbb
std
dec
insl
addr16
ficomps
push
loopne
mov
push
call
pop
push
or
loop
clc
or
pop
mov
pop
or
pop
fwait
push
or
sbb
imul
sbb
adc
rclb
pop
int
rcl
push
aam
repnz
gs
sbb
daa
add
sbb
mov
cld
dec
push
stc
sub
push
mov
mov
xor
imul
sbb
divl
lahf
mov
jecxz
fldenv
xchg
cwtl
and
pop
and
xor
lods
loope
xchg
sub
popf
mov
out
scas
fwait
mov
push
xor
imul
test
mov
aas
inc
sbb
jb
fs
jns
gs
mov
push
or
insl
lahf
push
iret
push
mov
int3
cli
sbb
xor
xor
sub
push
sub
xchg
jmp
mov
cmp
inc
mov
aas
push
push
adc
xchg
shr
aad
in
out
into
xlat
jl
ja
xchg
movsb
scas
adc
inc
stc
fsubs
push
or
aam
or
shll
sbb
clc
pushf
rcrl
add
xor
icebp
mov
lcall
arpl
scas
mov
inc
push
out
iret
roll
xchg
lahf
mov
push
pop
jl
adc
jg
sbb
inc
stc
mov
movsb
in
ds
je
scas
ror
and
lods
add
int3
fisttpll
xor
mov
test
cmp
mov
inc
inc
xlat
js
and
xchg
dec
cs
mov
imul
xchg
mov
or
push
lods
std
fdivr
inc
adc
push
xor
rcrb
fwait
out
movsb
aad
in
sub
ljmp
cs
shrb
and
inc
sbb
mov
adc
testl
xor
xor
mov
push
andl
movsb
adcl
or
sub
fcmovnb
xor
adc
mov
ret
push
mov
ret
dec
cmp
movsl
pop
outsl
or
lds
nop
lcall
add
jl
dec
dec
sub
mov
cmpsl
es
daa
cmpsl
xchg
ja
roll
push
mov
addr16
fcomps
addl
addr16
sub
or
leave
in
dec
jmp
pop
jle
std
xor
pop
ffree
lcall
cmp
in
shll
dec
bound
dec
repnz
mov
cmp
cld
jo
das
scas
movsb
daa
daa
ror
addr16
aas
xchg
mov
add
test
stos
out
fisubl
push
jmp
leave
out
xor
repz
and
mov
popf
test
pop
mov
push
mov
add
mov
ficomps
fwait
addr16
pop
pop
inc
nop
xchg
mov
add
jp
popf
add
outsb
cmc
adc
sahf
ret
icebp
aam
xor
jge
inc
xchg
adc
pushf
or
mov
push
xor
pop
cmpsb
clc
ret
fwait
ss
test
int3
and
mov
ds
sub
mov
dec
pop
sub
pushf
repnz
int3
inc
sub
adc
dec
and
out
push
fsubl
insb
and
lods
loopne
and
insb
fldl
adc
jne
cmpsl
mov
sahf
pop
repnz
mov
cmp
insb
ret
and
ss
adc
adc
cmp
push
aaa
lcall
or
fcoml
jo
jl
dec
out
push
idivl
out
ds
sub
mov
mov
test
jae
dec
dec
or
mov
pushf
lock
inc
jge
xchg
popf
inc
fisttpll
popf
and
inc
int
xchg
adc
std
dec
dec
pop
shrb
jp
or
sub
dec
jae
dec
xchg
add
dec
adc
ja
xor
mov
or
mov
inc
xor
add
mov
cli
inc
stos
inc
orb
push
inc
or
ret
sub
add
movsl
movsl
add
lret
cltd
cmp
sbbb
inc
por
push
inc
sbb
mov
push
stos
iret
xchg
xor
dec
jle
jg
out
sub
mov
std
mov
dec
add
ja
mov
mov
lcall
in
lock
jmp
push
push
scas
es
push
inc
mov
and
sub
test
jne
jecxz
aad
pop
inc
lret
push
das
scas
mov
mull
pop
cmpsb
and
adc
lods
sbb
and
add
sub
push
call
dec
jno
add
xor
dec
movsb
adc
pop
and
and
sub
pop
pop
mov
push
xchg
and
cmp
ljmp
arpl
pop
int3
pop
xchg
cmp
or
inc
lods
inc
mov
xor
insb
push
mov
lods
std
cmp
in
dec
bound
and
imul
dec
inc
lahf
cld
cmp
ja
adc
pop
jle
jno
or
pop
push
mov
in
lret
loope
lret
sbb
fstpl
push
shrl
pop
cmp
push
fsubp
popf
cwtl
cmc
xchg
cmp
test
fstpl
loop
mov
ret
sub
cmp
mov
push
adc
dec
pop
mov
hlt
sbb
shrl
push
and
push
ljmp
clc
stc
or
mov
daa
lcall
arpl
sar
push
adc
les
push
lea
cmp
and
clc
mov
xor
sub
mov
dec
and
int3
and
add
aaa
xchg
rorb
xor
or
or
adc
mov
add
ja
popa
adc
call
add
or
inc
cmp
repz
and
inc
cmp
sub
in
pop
sub
lds
inc
mov
loopne
pop
pop
or
movsl
xor
push
sub
jge
lock
stc
lahf
push
inc
jb
pop
out
cmpsl
dec
loop
aaa
and
sahf
dec
mov
lea
test
dec
jbe
cltd
lods
push
btr
sbb
mov
dec
mov
fmuls
fldenv
and
xlat
fstl
into
iret
lds
sub
add
xor
negb
dec
fsubl
es
sbb
bound
mov
sbbl
pop
sbb
bound
push
test
push
inc
mov
add
fs
or
xor
dec
jle
fs
hlt
dec
inc
inc
xchg
dec
mov
mov
jno
mov
test
mov
inc
jecxz
pop
xchg
push
mov
popfw
xchg
or
jne
lea
jge
ret
repz
movsl
dec
pop
xchg
push
scas
loop
adc
and
cs
std
orb
jg
ja
icebp
les
mov
sub
je
xchg
sub
inc
cmp
inc
or
imul
stos
sub
pop
cmp
push
rorb
dec
xchg
or
in
cmp
mov
sub
jle
movsb
mov
mov
sti
sub
movsb
outsb
adc
repz
cmp
inc
xchg
orl
sub
inc
adc
mov
inc
cli
cmp
cli
push
pop
add
loope
add
jns
jno
sbb
cld
inc
jo
inc
addr16
dec
mov
inc
stc
test
lds
punpckhbw
or
into
lcall
gs
test
les
mov
push
lret
sub
outsb
xor
and
jl
add
dec
push
in
push
test
pusha
cli
pop
loope
data16
xchg
and
cmpsl
movsl
lods
ficomps
fucom
or
insb
jmp
push
push
push
into
mov
sub
js
xor
sub
push
add
rcrl
loopne
adc
dec
sbb
jo
cmp
add
test
xor
xchg
push
shl
xor
int
lds
or
push
cmpsl
push
lret
push
mov
jne
adc
jae
mov
ret
js
repz
add
repz
jae
test
xlat
sub
mov
mov
aas
xchg
into
cli
sti
adc
dec
pop
icebp
je
std
dec
cltd
xchg
mov
shlb
push
js
mov
fcoms
inc
aam
cmp
adc
jl
fwait
nop
loope
mov
popf
aam
push
inc
fcoml
gs
cwtl
lods
add
leave
lret
xchg
mov
out
add
movsl
ss
std
fisttps
inc
ljmp
lock
rclb
shrb
and
and
ljmp
pop
push
sub
sbb
test
lret
ss
and
mov
aas
movsl
gs
fwait
adc
imul
sub
lock
adc
inc
gs
sahf
or
and
fisubl
out
mov
pop
xchg
add
dec
dec
int
ljmp
jecxz
jmp
pop
stos
and
jecxz
mov
dec
es
cmc
sub
sub
mov
sbb
sbb
rolb
fidivl
cmp
sti
mov
outsl
push
jg
outsl
xor
jns
std
push
subb
pop
pop
fcoms
sub
imul
mov
js
shrl
insb
loope
lods
adc
push
or
popf
ret
in
dec
orl
or
xor
push
inc
sbb
sub
sbb
jecxz
pop
xchg
cmp
leave
and
push
lahf
jg
mov
inc
arpl
mov
iret
cmp
lcall
dec
or
cmp
or
dec
mov
pop
cwtl
adc
inc
mov
inc
test
mov
or
inc
inc
push
push
push
mov
mulb
cltd
cld
mov
dec
nop
sub
jl
dec
add
lods
fdivs
push
mov
outsb
iret
mov
push
sbb
sub
adc
iret
cmp
and
xor
mov
lods
xor
jnp
pusha
das
add
sti
xchg
mov
in
jge
jno
imul
sti
aas
push
les
into
mov
repz
pop
xor
scas
inc
xchg
inc
fsubrs
fxch
lret
inc
loopne
lods
repnz
adc
nop
pop
push
mov
xor
jg
aaa
ja
movsb
ret
repnz
enter
clc
out
test
lcall
add
mov
push
mov
mov
inc
mov
jnp
pop
mov
jb
jne
mov
jg
movsb
sub
mov
mov
out
fstpt
cmp
dec
mov
addr16
mov
xlat
loop
and
incb
xlat
test
inc
or
mov
and
icebp
pop
arpl
icebp
sub
cmp
in
mov
or
sub
push
pop
lahf
xchg
xchg
lds
adc
clc
xchg
mov
es
imul
cmp
inc
sbb
jp
adc
in
xchg
dec
cmp
shlb
je
test
jb
mov
sbb
in
out
pop
into
sahf
jns
aad
aas
call
ret
inc
in
out
loopne
pusha
xor
outsl
movsb
mov
les
gs
bound
aas
repz
jne
push
dec
notb
add
repz
xchg
adc
in
adc
ss
pop
and
mov
sub
xor
lret
sbb
cmp
sbb
shl
jg
mov
sub
jle
add
lea
adc
mov
jp
push
or
leave
rcr
int3
mov
dec
mov
fildl
subl
push
stos
cli
push
ret
bound
cli
push
rcrb
mov
xchg
sub
data16
bound
sub
cli
test
or
mov
out
in
andl
das
into
pop
out
fwait
xor
lcall
adc
aad
sti
fisttps
div
xor
icebp
repnz
xlat
xchg
mov
add
adc
and
jle
or
enter
popf
xlat
ret
adc
arpl
xor
sbb
lahf
fcomp
aas
stc
push
push
add
adcb
push
rorl
fwait
sub
je
sahf
sub
lea
cmp
lods
popa
add
mov
cmc
bound
inc
ljmp
lahf
leave
sbb
nop
mov
out
hlt
jno
adc
jb
outsb
fnsave
sti
lahf
out
mov
dec
imul
iret
sbb
jns
cld
adc
mov
shll
xchg
adc
jmp
lock
jnp
sarl
cwtl
out
and
add
push
sub
daa
insb
div
sti
ds
cwtl
mov
cpuid
adc
sub
jecxz
pop
gs
mov
mov
xchg
ja
sub
xor
aas
aaa
daa
stos
hlt
int
iret
mov
mov
push
shl
jno
repnz
mov
popa
cmp
test
jns
sbb
mov
add
mov
cmp
sub
mov
xlat
push
dec
mov
and
mov
ret
sbb
lea
jae
mov
outsb
fimuls
adc
xor
xor
push
sbb
jno
add
in
orb
pushf
adc
mov
pop
xchg
subb
fcomp
pop
loopne
popf
xor
and
jmp
arpl
lahf
shll
fists
jne
sti
cmp
sbb
mov
shr
add
shl
ja
cmpsb
out
inc
xchg
imul
fs
dec
jo
sarl
add
jl
loope
mov
call
sub
out
mov
jae
and
fimuls
adc
jecxz
mov
imul
sti
xchg
push
cmp
xchg
lahf
fwait
out
jae
jle
mov
subb
push
mov
lahf
pop
push
test
dec
arpl
mov
jnp
dec
and
xbegin
mov
jl
xor
mov
cmp
sti
push
imul
xchg
es
mov
jbe
lods
orl
pop
mov
mov
fisubs
or
push
xchg
out
sub
mov
inc
inc
lock
pop
pop
sub
mov
xchg
mov
jne
push
adc
rol
mov
lret
dec
lret
int3
shl
out
andl
fsubl
je
mov
push
test
xchg
sub
mov
mov
call
mov
std
std
or
jl
aad
fisubl
push
daa
push
adc
clc
push
jns
das
das
mov
mov
div
std
les
addb
mov
jl
push
dec
fcmovb
out
push
pop
dec
mov
push
dec
mov
xlat
inc
inc
adc
cmp
mov
jae
lds
out
aaa
data16
int
jne
scas
mov
sbb
sti
or
xchg
pop
adc
inc
popf
js
mov
xchg
adc
loop
sub
xchg
stc
movsb
cmc
rorb
bnd
adc
mov
stos
mov
and
pop
fildll
subb
std
or
add
or
into
and
push
jecxz
dec
dec
sub
les
pushl
cmpl
lods
mov
xor
dec
add
and
mov
sub
add
roll
mov
cmpsl
jle
cwtl
sub
lahf
push
push
jecxz
pusha
fstpl
cltd
testb
popf
jle
jge
lcall
sub
xor
jbe
dec
testb
data16
mov
mov
sahf
in
scas
repnz
ss
lods
mov
push
dec
fdivl
insb
xorl
push
jle
call
mov
or
push
cmp
inc
fisttpll
mov
popf
sub
aaa
out
fwait
stos
fiaddl
orb
rcrl
call
jge
fists
mov
or
lcall
mov
inc
adc
dec
jge
lret
inc
cs
cmpsb
ljmp
les
dec
pop
sub
push
pop
loop
pop
add
mov
loope
fisttpl
xor
sub
clc
dec
mov
inc
insl
or
addr16
stos
jge
cmp
xchg
shr
in
fwait
ret
add
sahf
xor
aam
lea
pop
scas
sub
call
add
ret
jge
dec
rolb
inc
rcll
add
push
addl
pop
scas
jo
sub
test
fistpll
lock
subb
pop
inc
nop
xlat
mov
pushl
rcl
pop
or
repz
jns
dec
sub
int3
sub
sub
std
dec
push
or
rcll
fimull
jge
jecxz
insl
pop
jg
dec
cmc
xor
mov
cmc
cmp
pop
and
dec
add
shlb
fisttps
in
push
test
add
ret
fiaddl
mov
subl
xchg
ds
xor
and
arpl
xchg
xor
shll
mov
std
inc
inc
into
sub
inc
jg
sbb
mov
mov
insl
es
inc
xor
adc
cmp
xchg
out
out
push
out
lahf
idiv
mov
jecxz
adc
or
insl
cmc
add
bnd
adc
int3
stos
movsb
ret
xchg
test
arpl
sub
js
jp
mov
adc
or
enter
aam
xor
adc
sbb
ds
dec
or
insl
arpl
push
lods
outsb
rol
cs
jecxz
push
or
mov
jb
adc
xor
adcb
dec
rolb
out
adc
cmp
mov
pop
pop
ljmp
movsl
adc
out
mov
sbb
movsb
pop
and
fcom
dec
mov
xchg
dec
cmp
popa
testl
cmp
xchg
cmp
jne
bndldx
xor
pushf
jg
jp
orb
push
jnp
mov
pop
cli
dec
outsb
pop
sbb
add
push
ret
cmc
adc
mov
adc
out
enter
push
jp
jno
mov
sbb
das
push
mov
jl
enter
test
outsl
inc
or
dec
fidivrl
xor
add
sub
xchg
pushf
fwait
jne
mov
cld
mov
dec
dec
push
jmp
lock
setnp
outsb
rcrb
call
sub
enter
sub
jo
mov
in
subl
inc
jmp
cwtl
mov
out
xorb
pop
shrb
pop
in
and
jmp
pushf
int
aam
mov
lods
stos
add
jl
movsl
adc
mov
sbb
cmpsb
dec
lahf
add
mov
mov
or
iret
xor
jne
mov
push
test
and
into
and
ja
cmp
xchg
and
cmpsb
pop
jge
inc
inc
push
dec
dec
push
outsl
add
push
lret
imul
mov
mov
enter
mov
xchg
js
daa
dec
sub
xchg
or
std
stos
push
loope
in
lahf
push
popf
xor
pusha
outsb
hlt
jnp
add
ljmp
sarl
dec
dec
or
insb
ret
jno
lea
push
add
movb
or
mov
imul
sahf
pop
push
pop
add
insb
shlb
addr16
mov
or
mov
mov
inc
fstp
test
loopne
mov
jo
cmc
sbb
sub
cmp
push
dec
dec
in
inc
jno
and
mov
rol
ja
mov
dec
jnp
mov
dec
pop
adc
sti
les
mov
adc
jg
cltd
jg
shll
lock
inc
dec
adc
ljmp
and
shrl
nop
lret
mov
aaa
into
popf
cs
cmp
out
jp
xor
pop
iret
cltd
sbb
mov
dec
cli
ja
push
fiaddl
dec
icebp
fidivs
cmp
xorl
jnp
xor
cmp
xchg
popf
and
call
mov
dec
out
pop
jnp
imul
cld
dec
imul
or
in
push
movl
jecxz
leave
adc
cltd
jg
mov
into
dec
push
scas
push
insl
shrb
inc
cmp
mov
fs
std
cmp
xchg
lock
leave
dec
add
add
ja
test
mov
jae
jle
ds
jnp
jmp
and
push
jb
and
cld
xor
imul
mov
cmp
mov
lods
push
imul
popa
divl
adcl
sbb
ret
movlps
xchg
add
cmp
rclb
mov
ficomps
dec
shrl
shlb
pushf
jae
push
int3
negb
pop
testb
xor
call
adc
push
sbb
or
call
enter
push
jle
cld
cs
pop
mulb
mov
push
gs
cmpsl
pop
addl
sub
push
dec
xchg
sti
int3
repnz
dec
sti
ret
sbb
jae
into
jl
sub
jge
stos
pop
xchg
sahf
mov
pop
pop
ds
fisubs
mov
leave
js,pt
loopne
adc
dec
stc
or
jmp
es
sahf
or
xor
testl
arpl
imul
test
fucomi
cltd
sti
and
and
sub
pop
push
fsubl
clc
cs
stos
sbb
pop
imul
aad
jno
push
jle
xchg
aas
push
fistpl
fiadds
loope
mov
cmpsl
icebp
and
push
sbb
mov
xor
sti
inc
mov
cmp
jo
ljmp
das
xor
mov
add
lahf
push
lds
data16
into
xchg
push
xchg
jge
hlt
lret
cmpsb
jp
mov
lret
sar
rcll
mov
lahf
dec
iret
in
inc
cmp
jp
mov
dec
mov
mov
push
mov
mov
stc
and
jb
push
pop
xchg
xor
push
sbb
sbb
push
imul
mull
loope
mov
mov
fcoml
pop
cmpsl
sbb
inc
sbb
pop
imul
push
call
ret
or
ds
stc
hlt
mov
ds
xchg
pop
cmpsb
fcomi
sti
push
pop
out
jo
dec
ja
mov
push
pop
cmpsb
outsl
inc
mov
xchg
mov
fsubr
in
mov
sub
inc
in
rcl
xor
test
adc
or
movsl
out
and
inc
inc
add
stc
popf
mov
add
les
ja
add
mov
test
mov
lds
hlt
out
xchg
in
push
sub
adcb
cli
subl
int
inc
lods
mov
ficomps
pop
mov
xor
adc
je
cs
lret
jbe
adc
or
mov
xorl
insb
xor
xchg
dec
mov
cmp
scas
enter
ret
addr16
lds
in
push
xchg
dec
xchg
nopl
imul
mov
cltd
cmp
xlat
cmp
adc
push
repz
mov
adc
sahf
jecxz
test
mov
roll
in
sbb
mov
sbb
out
shr
pop
ficompl
lods
sbb
aam
push
mov
cld
sbb
mov
in
xchg
mull
stos
adc
mov
dec
add
push
int3
xchg
add
in
fsubrl
lods
sarb
fmul
cmp
cwtl
mov
es
mov
mov
lods
ljmp
pusha
popa
xor
ds
lret
dec
cmp
leave
push
lock
and
jmp
xchg
xor
pop
dec
cmp
imul
fidivrs
inc
lods
or
fldl
mov
decl
mov
out
stc
insb
cwtl
fisubl
adc
ljmp
xchg
mov
or
rorl
test
push
and
cmp
sahf
hlt
fstl
shrb
jmp
je
adc
cmp
fs
add
loope
clc
sbb
out
fists
sub
fildl
aam
cli
data16
and
mov
xor
data16
pop
int3
sub
pop
leave
bound
repnz
jle
xchg
stos
sti
repnz
fisubl
add
or
and
sbb
fistps
iret
imul
add
cmp
push
inc
mov
mov
mov
pop
push
sbb
sub
idivl
cmp
sub
pop
lock
or
out
hlt
xor
sbbb
push
or
push
add
mov
dec
popa
jl
dec
or
fnstsw
xor
outsb
jb
dec
push
mov
movsl
incl
and
push
sbb
push
ja
sbb
popa
repnz
mov
inc
pop
dec
adc
aad
cwtl
push
or
sub
leave
push
stos
sub
aam
cmp
das
push
xchg
pop
ficomps
lret
cmpsl
and
lea
mov
jle
dec
pop
mov
clc
cmpsb
or
aad
adc
fildl
mov
cli
lcallw
cmp
outsb
test
lret
inc
sbb
mov
out
cmpb
stos
xchg
mov
jno
xor
mov
scas
cltd
repz
aas
xchg
mov
adc
aaa
mov
lea
rcr
and
push
xchg
ljmp
rclb
ljmp
adc
out
jbe
xor
stos
gs
mov
movb
js
fldt
mov
xchg
cvtps2pi
xor
jle
dec
sti
xor
insl
fucomip
or
mov
aad
mov
test
push
adc
sub
dec
int3
jne
mov
mov
in
sbb
jle
nop
fisubrl
test
and
mov
sub
or
add
imul
bound
jle
and
pop
mov
rcrl
movsb
mov
ret
lahf
and
leave
xchg
gs
or
in
sub
lea
add
insl
pop
aad
mov
lcall
out
push
dec
stc
xor
and
inc
xor
cmp
repnz
sahf
daa
in
xor
aaa
movq
addr16
mov
call
or
and
sub
xorl
icebp
nop
lds
lret
cltd
gs
lea
movsl
mov
ret
jmp
and
stc
outsb
xchg
pop
xor
add
mov
mov
sbb
mov
lea
adc
inc
ret
or
push
rcrl
aam
repz
inc
lds
imul
cltd
es
insl
xor
fs
add
mov
cmpsl
or
into
rclb
aas
je
rorb
loopne
stos
call
xchg
cmovne
jns
aad
add
loope
js
int3
add
movsb
cmp
mov
bound
dec
sub
call
xchg
add
loop
xor
pop
mov
ja
xor
out
fcom
in
jp
jo
or
mov
lahf
xchg
stc
dec
inc
loope
ja
insl
xor
leave
inc
test
pop
and
cmp
sbb
aad
mov
xlat
add
int
loope
pop
insl
add
push
cwtl
setg
mov
xor
mov
scas
js
arpl
mov
std
jmp
push
out
out
dec
pop
and
sbb
xor
in
stos
incb
movb
into
sarl
mov
jno
popf
mov
lea
hlt
cmpsl
out
fdivrp
je
adc
xchg
inc
bound
mov
bound
repz
xchg
xchg
insl
lret
fcompl
into
rclb
mov
adc
jnp
push
adc
xor
mov
cltd
push
sbb
fcmovu
hlt
fiaddl
cmp
dec
jmp
mov
mov
dec
testl
mov
stos
andl
arpl
das
mov
push
push
sbb
xchg
lcall
or
repz
nop
sbb
test
jo
sbb
cmpsb
add
test
addr16
pop
pop
sarl
mov
mov
dec
test
mov
into
jb
mov
cmpl
int3
cs
adc
in
dec
mov
adc
and
ds
fisubs
pop
or
push
dec
sub
adc
sbb
mov
cld
dec
sbb
fists
jecxz
shll
jg
inc
mov
std
enter
jp
push
jo
lods
sbb
add
inc
fwait
mov
push
movsl
mov
add
jp
ret
or
push
sti
mov
leave
mov
inc
cwtl
popa
jecxz
mov
fldl
daa
test
das
xchg
je
imul
test
pop
mov
ror
xor
dec
mov
xchg
rol
repz
and
rol
xchg
jp
les
mov
sbb
test
xchg
in
in
jmp
mov
mov
push
sahf
and
mov
dec
jno
adc
test
cmpsl
fisttps
jne
cmpsl
out
pop
inc
ret
mov
jb
in
nop
cmp
shrb
mov
xor
and
xchg
mov
test
lcall
or
popa
xchg
mov
cltd
dec
add
inc
pop
push
pop
dec
jb
cltd
or
xor
jecxz
cli
mov
movsl
mov
fistpl
xor
iret
cs
lods
mov
push
sbb
je
and
cmp
sub
jne
out
lock
fadds
arpl
das
idivl
sbb
sub
gs
es
jmp
in
push
add
movsb
ret
adc
in
xchg
hlt
adc
jp
int
pop
cmp
xchg
sbb
lahf
lds
mov
outsb
testl
popa
frstor
add
mov
jge
mov
scas
nop
lret
dec
inc
ja
shrl
out
pop
xor
sbb
jno
ffreep
rcrb
mov
jmp
or
xlat
sub
xor
sbb
push
loopne
mov
fidivs
loopne
lea
fiaddl
xchg
gs
xorb
jb
fcmove
addb
sbb
dec
pop
mov
push
inc
fistps
inc
lcall
sti
pushf
into
sbb
jb
scas
xor
test
and
or
jecxz
rcrl
xchg
inc
sbb
lahf
jmp
or
leave
sbb
lods
pop
mov
pop
into
enter
add
add
stc
fs
lds
push
and
inc
dec
imul
test
out
fsts
lret
stos
stc
pop
dec
jae
xor
xor
or
arpl
stos
ds
and
xor
repnz
jg
mov
fbstp
out
or
push
pop
pop
into
les
mov
and
xchg
insb
inc
lods
cli
movl
loopne
aad
push
iret
mov
call
outsb
fadds
pusha
flds
mov
pop
sub
push
test
loope
lret
adcb
in
lret
xchg
clc
dec
loop
sbb
xchg
imul
aam
lea
fstl
xchg
sbb
cmp
out
or
sub
mov
lea
sti
leave
loop
ret
dec
out
pusha
cmc
pop
aaa
push
fcompl
lea
imull
sbb
xlat
dec
adc
dec
in
ja
xor
adc
rorl
jle
xchg
adc
ljmp
daa
push
push
dec
cmp
aad
pop
dec
ds
cmp
cltd
fwait
and
adcb
xchg
inc
lcall
xchg
ret
lods
lret
je
repnz
add
dec
adc
rolb
cmpsb
outsl
add
mov
ljmp
bnd
adc
jmp
stos
xlat
inc
push
mov
call
mov
xor
sbb
push
cmp
ds
xchg
or
addr16
mov
adc
cmp
ret
mov
ds
cmpsl
iret
je
mov
fucomip
jmp
jns
mov
hlt
mov
test
clc
xorb
xor
cmp
sahf
xor
idivl
jnp
pushf
mov
mov
cmp
fnsave
dec
push
shll
mov
fbstp
jl
imul
or
cli
scas
incl
xchg
add
add
jb
out
neg
aas
fs
mov
icebp
mov
xchg
popa
or
mov
mov
xor
fcompl
mov
loop
ficomps
cmp
lahf
mov
xchg
je
sbb
adc
jg
push
dec
adcb
fdivl
imul
mov
or
lods
dec
lods
xorb
cmp
push
imul
fistps
xor
mov
scas
or
outsl
shll
fidivs
addr16
inc
xlat
leave
jns
imul
lods
add
sti
cmc
movsb
adc
pop
dec
mov
sbb
push
cmp
rcr
gs
les
movsb
aam
adc
sub
add
inc
insb
or
imul
mov
jmp
bnd
ljmp
push
add
negb
hlt
test
mov
push
mov
jmp
cli
mov
fldt
xor
aam
and
xchg
push
loopne
cltd
leave
sub
mov
lcall
adc
in
mov
push
jmp
pop
add
sub
push
les
inc
jno
pushl
fistpl
lret
ficompl
popa
aam
mov
xlat
push
lock
jnp
ljmp
mov
push
xor
daa
lret
arpl
pop
cmc
push
cmp
mov
xchg
jnp
fs
pop
inc
psraw
push
xchg
inc
dec
movb
or
xlat
inc
jle
push
lret
lcall
fwait
enter
cmp
adc
ficoms
mov
jp
xor
jg
ds
mov
mov
pop
lea
popl
out
add
cld
insl
mov
aam
jns
adc
sub
xor
pop
das
inc
clc
scas
cltd
fsub
cmp
leave
inc
inc
das
stos
pop
push
nop
lock
sbb
out
xor
or
cli
int
repnz
aaa
lret
jb
orl
in
test
xor
gs
add
mov
xor
mov
imul
popf
mov
add
push
push
lret
das
add
cmp
add
movsb
lock
call
lods
or
ss
and
idivb
mov
in
pushf
iret
push
addr16
adc
add
cmpsl
bound
ret
in
imul
cmpl
pop
movsb
pop
jnp
sub
dec
add
mov
push
icebp
and
sub
pop
sahf
pop
jno
cltd
lret
into
pushf
and
or
pop
stos
lret
je
jbe
loop
fmul
cmp
lcall
mov
inc
adcl
test
clc
lock
cmp
xchg
pop
negb
lds
cltd
mov
mov
xor
pop
int3
mov
call
notl
clc
fdivrl
aam
lcall
mov
aas
sbb
dec
arpl
call
scas
sti
scas
jmp
mov
test
sti
adc
mov
fisttps
push
pop
test
add
mov
jge
lock
pop
jb
out
lock
pop
cli
push
je
push
mov
or
inc
mov
xchg
cmp
and
bound
les
sub
in
adc
add
or
xor
mov
aam
cmp
pop
mov
test
gs
cmpsl
data16
or
add
fmuls
push
les
in
inc
sahf
out
mov
sub
pushf
inc
aad
lods
adc
sbb
and
jne
insb
pushf
inc
ret
es
sahf
xchg
ret
out
mov
mov
imull
fidivs
arpl
shll
ljmp
fmull
cmp
cmp
sub
rclb
cmpsb
sub
test
or
aad
pushf
aam
mov
push
fwait
lcall
lret
outsl
stc
enter
cmpsl
xchg
push
mov
icebp
sbb
xchg
mov
shll
in
clc
xlat
sbb
and
lods
pop
add
idiv
fcmove
fistpll
and
xor
sub
lock
jo
jg
cmc
add
cmpsb
push
ret
sub
push
inc
push
cmp
lret
ds
aam
xor
xchg
iret
mov
mov
dec
pushf
xchg
xor
mov
jp
sbb
mov
lods
imul
ljmp
push
insb
push
int3
shll
jl
sub
adc
jmp
mov
aam
stc
mov
test
std
and
notb
push
cld
hlt
jmp
daa
fnstcw
dec
addr16
sbb
mov
inc
mov
mov
cmp
push
fcmove
mov
arpl
mov
mov
mov
push
sub
and
int3
xchg
enter
fcoms
test
or
cmp
push
mov
je
mov
lods
sub
sub
push
out
xchg
inc
outsl
int
cmp
push
cli
into
xchg
inc
popa
test
pop
inc
stc
lret
sub
jae
test
sub
inc
sub
and
fnstcw
cmc
xorb
mov
andb
jae
and
lcall
or
push
dec
test
mov
xchg
cwtl
xchg
bound
rcrb
sahf
or
insb
push
dec
or
and
ret
mov
xchg
test
cmp
xor
dec
stos
insl
adc
mov
jmp
cmp
mov
in
rolb
jns
arpl
scas
or
aas
or
cmp
sbb
inc
subb
movsb
je
mov
mov
pop
cmc
lds
daa
jne
pop
hlt
mov
jle
pop
and
in
pop
push
lea
mov
jmp
pop
mov
lods
data16
cmpsb
scas
rcrb
xchg
dec
sbb
and
lret
sub
xchg
jmp
add
sbb
rolb
mov
sbb
loopne
lret
inc
adc
mov
cltd
jnp
add
ja
test
push
pop
xor
movb
mov
inc
ja
insb
cmpsl
mov
sti
mov
sti
dec
adc
je
enter
lds
stc
lret
rcrb
arpl
pop
inc
pusha
loopne
lret
jno
jne
sub
loope
gs
arpl
mov
in
jns
push
cld
pushf
enter
jl
inc
push
paddb
mov
xchg
push
in
dec
inc
inc
cltd
pop
sbb
jle
jae
out
hlt
cmp
jecxz
test
enter
push
lcall
and
add
mov
jne
cltd
imul
imul
and
pop
addr16
mov
push
test
cmpsl
fbstp
xor
cmpsb
push
outsl
rorb
test
inc
cli
out
mov
icebp
out
mulb
lea
xor
repnz
and
shll
testb
mov
in
mov
dec
inc
and
jns
push
xchg
cli
mov
sbb
outsl
out
js
fbld
cmp
mov
xchg
mov
ja
test
jne
adc
sahf
inc
iret
xchg
jne
jecxz
rcrl
xchg
pop
push
lock
jae
push
xchg
bound
cmp
xchg
or
pop
jo
xchg
fstl
cwtl
popf
lods
in
mov
mov
sub
mov
cwtl
jae
or
aaa
ds
in
pop
sbb
lcall
push
cmp
jg
popa
add
and
jp
add
popf
and
jecxz
in
push
cmpsl
cltd
xchg
pusha
lret
cmp
in
dec
cmp
in
cmpl
andb
hlt
or
shlb
idiv
loop
push
int3
cmc
cmpsl
rorb
into
inc
lock
xchg
outsl
ss
pop
pop
aas
cmp
mov
mov
push
int
adcl
insb
adc
add
jo
or
pop
in
mov
mov
loopne
scas
dec
cmpsl
nop
dec
mov
fistps
sub
add
sbb
fdiv
inc
sbb
mov
sbb
ljmp
adc
shl
push
loopne
cmp
jmp
jbe
dec
pop
adc
stc
fsubrs
adc
sbb
xor
jb
fs
leave
hlt
frstor
xchg
dec
subl
clc
xchg
leave
inc
in
loop
push
jbe
jb
sub
mov
fdivrp
subb
sub
cmpsl
mov
subb
pop
jl
mov
cmovle
mov
jmp
gs
std
pop
jb
jo
inc
and
sarl
xchg
xchg
sbb
mov
dec
mov
stos
push
setb
call
icebp
test
dec
sti
jp
out
jl
nop
addr16
mov
push
in
pop
test
push
cmp
add
movl
daa
cmc
mov
lret
mov
cmp
aas
adc
enter
dec
testb
mov
sub
xor
repnz
les
fdivrl
fadds
out
mov
aad
in
mov
lods
mov
mov
int3
movsb
lahf
out
jbe
dec
inc
jne
enter
rorl
mov
sub
jae
lods
call
sbb
into
mov
repz
add
out
pushf
loope
jl
stos
cs
outsb
inc
leave
mov
aas
rorl
dec
xchg
ljmp
ret
and
lea
jmp
dec
mov
mov
pop
dec
push
mov
xchg
cli
test
inc
jmp
jle
adc
sbb
inc
lods
add
loopne
andnps
mov
sahf
scas
push
or
call
insb
fcmovnb
daa
mov
gs
popf
jns
jmp
or
adc
cmp
pushf
rcrb
ss
std
pushw
test
test
int
cmp
push
aad
arpl
or
jns,pn
push
out
or
pop
adc
nop
in
cli
sbb
fisubrs
lret
inc
or
in
pop
dec
cwtl
xchg
inc
popf
out
pop
mov
dec
out
fwait
lods
pusha
call
cmp
xchg
xchg
push
push
jl
lcall
stc
or
ret
mov
push
aam
outsb
and
or
loopne
jbe
pop
jns
sub
adc
pop
xor
jae
adc
push
mov
cmpsb
xlat
loopne
enter
push
jmp
pop
jg
mov
sbb
push
mov
xor
inc
mov
mov
adc
or
jecxz
test
or
pushf
test
add
inc
scas
lods
cmpsl
aad
in
push
repnz
sbb
leave
mov
ror
xchg
ja
loopne
cmp
push
inc
xchg
pop
push
inc
pop
inc
insb
jmp
ss
es
jg
fidivrs
jb
movsl
mov
sub
mov
jl
xor
cs
mov
outsb
fidivl
ret
mov
daa
xchg
cltd
mov
cmp
fisubrs
mov
std
mov
out
sbb
mov
inc
cmp
vmwrite
fsubrs
ret
je
icebp
pop
insl
xchg
testb
cwtl
loopne
into
push
sub
xchg
mov
clc
pop
mov
add
pusha
ja
loope
inc
inc
jno
outsl
insl
cli
mov
rcl
in
clc
sub
cli
mov
or
incb
jno
mov
fcmovnb
cs
shrl
xor
mov
or
mov
adc
sub
out
scas
push
aas
mov
jmp
mov
jae
fisubrl
add
or
aas
push
mov
jbe
imul
lahf
dec
push
mov
ljmp
mov
fcomps
popf
jo
jl
mov
mov
hlt
inc
inc
faddl
xor
xor
xchg
cmp
adc
inc
fistpl
or
shl
lods
hlt
movsb
push
int3
lcall
vpcmpgtb
addr16
or
iret
shll
pusha
lock
std
pop
sub
daa
scas
lds
ds
cld
js
cmc
loope,pt
out
test
jecxz
test
push
adc
rcrb
fnstsw
dec
mov
push
iret
pop
js
cmc
lcall
pusha
enter
fcompl
insb
sub
cmp
repz
mov
jl
add
stc
stos
fwait
cmp
fwait
vmovsldup
mov
fldl
fiadds
push
add
std
clc
outsb
push
and
cmp
out
aam
in
ja
jl
inc
mov
push
inc
movsb
je
inc
out
xor
sbb
push
shrb
lods
ds
sbb
cmp
sbb
out
lock
push
pop
and
xchg
cmpsw
sub
dec
jno
adc
and
pop
and
lcall
dec
mov
out
sub
movsl
mov
mov
test
fdivs
xchg
es
xor
jg
push
imul
pop
scas
mov
ljmp
outsl
pop
add
push
call
xor
add
ja
lret
out
xchg
test
push
orb
aad
loopne
sbb
dec
fimull
jo
xor
mov
test
lret
add
mov
mov
jecxz
daa
shll
xadd
aas
xor
push
push
clc
std
lahf
rorl
mov
test
mov
xchg
std
xor
outsb
and
fs
or
aaa
fimull
push
cli
hlt
shlb
dec
in
xor
fstps
jne
fiadds
popf
test
test
dec
sbb
add
test
scas
xchg
fwait
pop
ja
js
jb
incl
dec
test
sub
pushf
push
mov
fstl
lea
mov
jle
pop
xchg
aas
imul
js
aas
sub
cmpsl
out
mov
mov
les
xchg
pop
xor
or
inc
test
dec
xchg
lods
push
push
mov
push
das
out
icebp
out
js
mov
and
xchg
inc
adc
cs
bound
scas
daa
inc
sbb
inc
jns
lock
lds
inc
fistpll
sbb
mov
adc
inc
hlt
ss
je
ficompl
repnz
mov
mov
nop
addr16
in
ffreep
std
ds
fwait
mov
jecxz
in
cltd
push
mov
notb
sti
in
clc
nop
or
pop
data16
cltd
inc
cmp
cwtl
bound
in
sub
icebp
out
xor
lret
cwtl
inc
dec
test
ss
rorb
ds
stc
add
in
and
jmp
push
fisubrs
cmpsb
jae
mov
in
mov
jle
pop
xor
and
cmpl
xlat
mov
xchg
outsb
stos
adc
xlat
out
movsl
pop
pushf
fsubl
fwait
inc
adc
test
cltd
xchg
orl
sbb
cmp
dec
fs
out
bound
add
into
dec
pop
jae
add
sbb
push
xchg
call
mov
out
in
cmp
add
sbbb
mov
out
int3
mov
repnz
out
or
pop
add
mov
hlt
dec
or
sbb
int3
sbb
scas
mov
mov
outsb
loope
jo
test
or
add
push
nop
icebp
into
das
mov
mov
adc
sub
xor
pushf
and
mov
pushf
ljmp
push
cltd
xor
cmp
or
jmp
lret
jmp
sub
repnz
lds
jb
fimull
mov
insl
test
rclb
pusha
sbb
mov
mov
aad
sbb
fistl
xchg
push
cs
sbb
les
fidivrl
out
pop
jecxz
repz
xchg
and
add
cmp
or
xor
jnp
filds
mov
int
cli
test
repz
sub
xchg
or
insl
adc
adc
jg
das
mov
lret
mov
aam
sbb
dec
clc
xor
clc
push
inc
xor
ds
add
and
arpl
jle
enter
and
movsb
push
in
sbb
loop
outsl
and
lret
cmpsb
mov
sbb
repnz
fwait
mov
cwtl
sub
sbb
movsb
mov
in
aas
mov
xor
je
and
sub
lods
jae
push
in
inc
iret
inc
int3
mov
aad
test
aaa
adc
jns
pop
ds
pusha
icebp
addr16
sbb
out
lcall
js,pn
push
int
or
mov
pop
pop
pop
xchg
pop
mov
jp
mov
or
pop
add
pop
jge
mov
int3
aaa
mov
insl
mov
shll
iret
std
iret
add
xchg
arpl
les
jbe
popa
mov
jo
nop
push
xor
jmp
mov
jecxz
leave
adc
cmp
xor
xchg
xor
sbb
adc
std
mov
pop
popl
add
sub
cld
xchg
pop
jb
or
movsb
ds
ja
mov
movsb
sbb
push
mov
cli
in
xchg
aad
sub
repz
stos
adc
orl
jae
notl
fisubrs
and
imul
dec
js
je
movsb
jno
pop
iret
hlt
pop
shlb
stos
pop
or
dec
das
pusha
lods
dec
dec
xchg
jmp
cld
sbb
adc
mov
cli
sub
loopne
outsb
adc
bound
sub
bound
ret
sbb
movsl
xor
push
sub
mov
push
out
lds
jp
xlat
out
push
lahf
enter
filds
js
stos
mov
mov
jg
jno
mov
ljmp
sub
stos
fldenv
mov
dec
insb
jg
xor
xchg
leave
xchg
sbb
lods
into
lret
or
mov
dec
jmp
iret
std
ja
lahf
sti
repz
lahf
loope
mov
rcrb
int3
lret
mov
fs
jge
cmp
loop
jl
daa
pusha
popf
bound
add
loop
and
daa
jl
outsb
xor
and
cmp
ds
outsl
sbbl
sub
dec
es
out
rolb
aas
xor
iret
xchg
sbb
test
popa
mov
add
popa
mov
pop
inc
pop
insb
add
mov
movl
popa
das
pop
sub
pop
cmpsb
call
mov
push
movsl
insl
cltd
lock
aam
push
pop
orb
pushf
bound
fldenv
cmp
inc
or
scas
sub
and
insl
sahf
call
and
enter
mov
jbe
cmc
ficoms
rcll
push
in
insl
sub
pop
in
dec
add
push
mov
push
lret
pop
pop
xlat
sub
xor
add
push
inc
pop
xchg
mov
movsb
cmp
lret
movsl
inc
push
jecxz
je
stc
mov
mov
inc
inc
push
sbb
scas
cmp
push
jge
adc
std
and
push
sbb
push
sub
cmp
xchg
repz
testb
movsb
popf
imul
and
insl
les
and
mov
ljmp
and
fistpl
xor
sub
subl
pop
mov
ja
add
and
ljmp
cmp
mov
andb
shrb
sbb
sub
rcll
cmp
xor
fdivl
or
sbb
mov
in
and
lcall
lds
mov
fimuls
cli
pop
sub
shlb
outsb
popf
mov
and
jp
scas
pop
jg
popa
mov
xor
jo
mov
stc
xlat
xor
addr16
daa
call
and
in
xor
sub
mov
cld
mov
and
mov
stos
lret
call
scas
inc
adc
lea
xchg
pop
mov
mov
testb
adc
insb
pop
xchg
shll
std
outsl
xor
cmpsb
jb
jl
aas
sub
pop
out
sub
cmp
xor
mov
pusha
testl
sbb
mov
adc
or
push
fnstenv
out
aas
lods
cmp
scas
add
jns
xor
fstl
dec
test
das
pop
es
ss
clc
addr16
inc
ljmp
cmp
xlat
loope
dec
mov
das
ja
bound
push
ds
adc
mov
lock
faddp
cmpsl
add
mov
clc
lock
jnp
stos
enter
stos
scas
addr16
mov
mov
movsb
inc
out
mov
popf
mov
jge
push
inc
dec
mov
rorl
movsl
fnstenv
int
push
pop
std
or
lret
lcall
pushf
mov
add
lret
mov
test
push
push
pop
inc
fistpl
or
pushf
xlat
cli
pop
xor
sub
inc
cmpb
push
ficoml
push
iret
daa
stos
out
lea
scas
lods
movsb
stos
jne
ja
and
mull
insb
push
mov
sub
jl
stc
jg
arpl
add
cmpsl
lea
push
sbb
lods
inc
xor
mov
adc
xor
pop
std
mov
xchg
inc
test
or
dec
push
in
push
mov
dec
test
jns
fbld
sub
pop
mov
das
push
mov
and
lds
adc
jnp
pop
daa
pop
int
mov
iret
add
ds
shrb
dec
add
lds
arpl
arpl
push
push
jg
pop
out
fsubrs
cmpsb
ljmp
outsl
movsb
pop
aad
arpl
sbb
pop
dec
adcl
sub
out
sti
sub
aad
mov
xor
jnp
sub
push
fdivrl
or
out
dec
sti
fisubs
mov
bound
cmp
push
pop
outsb
sbb
inc
mov
xor
lahf
xchg
rcr
jnp
adc
insl
xlat
pop
repz
popf
movsl
sbb
adc
xor
cmp
into
fs
fwait
mov
dec
cli
xchg
pop
pusha
std
in
cwtl
aam
scas
sub
dec
and
addb
ljmp
les
ja
jae
pop
inc
pop
jae
cmpsb
ret
xor
sbb
cli
stos
out
rcr
add
and
fdivl
std
jb
out
in
mov
mov
insl
inc
ret
push
mov
test
mov
jp
call
mov
add
mov
out
repz
cltd
push
cmp
cmpl
xor
pop
cmpsl
lods
push
gs
mov
movsl
xchg
mov
jo
movsl
inc
sub
leave
cmp
test
pop
sub
inc
xor
pop
xchg
cli
jecxz
jecxz
enter
inc
jnp
scas
cmp
jb
xchg
lcall
dec
mov
fwait
jl
adc
rdpmc
mov
xlat
dec
repnz
jmp
xchg
inc
jge
sbb
xchg
jno
sub
lea
in
xchg
gs
aad
xchg
outsl
stos
add
into
add
out
push
mov
mov
or
das
xor
test
adc
push
loope
je
mov
sbb
push
jle
shr
jne
rclb
sbb
je
push
int
aam
sahf
add
aam
jbe
repnz
leave
lret
pop
out
fmuls
mov
jmp
jmp
ljmp
aad
and
mov
inc
push
push
cli
test
ds
bound
push
fldl
loop
cmpsl
cmp
or
mov
or
das
cmpsl
cmpsl
adc
rorb
mov
and
test
stos
sbb
push
movsl
push
adc
test
in
stos
cmc
adc
loop
fdivs
xorb
pop
inc
fwait
adc
inc
inc
jp
cmp
call
jno
cltd
icebp
xchg
adc
aaa
movsl
daa
xor
hlt
cwtl
shlb
xor
mov
mov
jl
mov
insl
cwtl
cmp
xchg
addl
and
fcompp
outsl
mov
jl
add
in
sub
arpl
pop
gs
and
fsubrs
xchg
lods
decb
mov
mov
or
pushf
jo
or
adc
mov
sub
rep
scas
push
xor
test
rol
mov
or
jne
lcall
mov
loop
push
popf
popf
adc
fisttps
jbe
inc
popa
cltd
ret
mov
inc
push
mov
pop
repz
mov
mov
loop
and
jbe
adc
push
sti
and
lock
fadds
push
pinsrw
lret
pop
inc
pop
cmp
jne
lahf
pushl
sub
cli
ja
js
or
les
mov
stos
ds
lock
and
sbb
adc
mov
les
mov
les
or
mov
bound
fs
jns
mov
jle
or
inc
pushf
imul
aaa
mov
inc
xchg
jge
add
gs
sbb
aas
pop
pusha
fld
arpl
or
xor
cmpsl
packuswb
or
jp
sub
jle
mov
mov
fwait
and
mov
mov
icebp
pusha
push
mov
adcb
dec
mov
jns
cltd
xor
ret
nop
call
lods
in
jp
lea
rclb
xlat
push
sub
fidivs
lret
inc
dec
repz
rcrl
add
fisubs
xchg
ds
mov
sbb
stos
mov
cmp
insb
mov
andl
cmpl
add
movsl
adc
xor
stc
ret
or
and
xchg
cmp
sahf
adc
loope
add
loopne
pop
push
pop
repnz
ret
leave
cmpsb
js
add
mov
or
fs
out
es
das
test
jbe
shrb
lret
push
data16
lcall
lock
es
push
mov
push
and
sbb
pop
xlat
dec
repnz
cmp
fsubrp
sub
or
and
bound
jmp
xor
xor
bound
pop
in
lods
sub
sbb
fcoml
cmp
xchg
stos
fwait
pop
inc
stos
repz
xor
hlt
mov
mov
mov
xchg
sub
xor
daa
push
push
test
mov
pusha
pusha
jl
mov
inc
sub
jle
dec
mov
mov
jecxz
in
int3
pop
in
dec
repnz
pop
lock
ss
xchg
aas
lcall
nop
cld
mov
jae
test
push
xor
js
sub
push
xchg
inc
cmpsl
cld
in
jae
shrb
inc
je
add
mov
mov
mov
push
push
mov
jge
mov
scas
cmp
inc
push
imul
test
adc
cmpsl
or
dec
pop
xchg
pop
mov
xchg
lahf
fwait
and
adc
leave
inc
lds
pop
inc
pushf
data16
and
xchg
movsb
stos
or
jp
arpl
and
and
insb
bnd
icebp
loope
adc
mov
push
jg
push
jo
pusha
or
add
and
rorl
nop
jge
cmp
test
and
xor
sbb
push
mov
push
fsubl
xchg
jge
mov
sbb
sbbl
and
xchg
imul
adc
and
test
stc
lahf
std
push
icebp
xchg
jg
out
ljmp
lock
lcall
adcl
stc
dec
lods
jl
cs
flds
dec
fnstsw
in
gs
testb
orb
or
ss
scas
mov
xlat
xchg
jne
das
pop
adc
comiss
xrelease
cmpsb
dec
dec
sbb
nop
arpl
mov
xchg
arpl
mulb
add
dec
jl
or
jb
or
sbb
push
cs
mov
jecxz
push
imul
mov
push
mov
add
jb
inc
push
jno
dec
sub
xor
or
gs
inc
xchg
lods
or
pop
lahf
stmxcsr
popf
cwtl
repz
xlat
in
xlat
dec
xchg
daa
lcallw
imul
sub
stos
sbb
or
xor
dec
mov
adc
inc
icebp
push
sub
adcb
cmc
push
xchg
ret
xor
pusha
xchg
cmp
and
jge
lds
dec
sti
pop
sbb
mov
aad
fndisi(8087
adc
pop
movsl
jge
js
imul
push
jbe
fimull
sbb
mov
xor
repz
pop
jmp
mov
xchg
mov
inc
and
out
fldt
loope
push
stc
cltd
dec
mov
outsb
push
adc
add
add
testb
rcrl
add
inc
sub
enter
outsb
cmp
jmp
sbb
sub
mul
mov
mov
mov
push
sub
pavgb
mov
fs
adc
bnd
xchg
push
inc
data16
enter
ds
adcb
xchg
mov
pop
div
dec
ja
mov
xchg
pop
cmp
les
outsl
push
push
inc
repz
mov
adc
pop
sub
sahf
add
pop
insb
jae
ss
es
xchg
mov
cmp
ljmp
mov
mov
sub
xchg
sub
lods
stc
mov
in
cmp
out
movsl
jnp
gs
push
sub
and
xor
ds
add
insb
inc
fs
nop
and
sbb
or
adc
sbb
test
add
int3
stc
mov
push
or
scas
mov
bound
cmc
cmpsb
mov
jb
repz
popa
psubb
mov
je
dec
adc
mov
mov
rcll
pusha
sub
inc
fbstp
fistpll
subb
pop
push
inc
jbe
pop
out
lret
test
cmp
pop
jge
data16
and
push
orl
cmc
dec
imull
movsl
add
lea
fstps
jo
dec
rcrb
jno
cmp
negb
lock
cmpb
subl
sub
mov
pop
fistps
mov
mov
loop
add
mov
mov
or
les
in
adc
cltd
lea
and
es
das
lods
lea
std
mov
outsb
jbe
jno
cmpsl
mov
jno
mov
cmpsb
sti
jle
pop
pusha
incl
add
push
or
jp
repz
add
faddl
cli
xor
shrl
mov
outsb
dec
mov
aad
dec
lock
fdivs
sbb
inc
mov
push
ficompl
lds
inc
push
addr16
or
fwait
bnd
pop
pop
addb
and
xchg
lods
mov
std
push
je
dec
sbb
cmpsb
ljmp
xor
movsb
pop
push
add
scas
xlat
jge
in
fldcw
mov
jae
sti
mov
pop
inc
mov
js
xor
mov
into
fistpl
sbb
push
hlt
or
mov
mov
cltd
pop
jnp
stos
sti
adc
je
data16
es
rorl
pop
arpl
es
mov
add
out
fcoml
cmpsl
movsb
mov
xchg
cmpsb
mov
pop
mov
dec
mov
add
dec
imul
push
ficoml
mov
popa
cmp
sbb
rcrl
mov
das
hlt
or
jbe
frstor
pop
sbb
lret
std
mov
lods
out
js
push
popf
in
lea
inc
jns
lods
lock
iret
adc
sbb
cld
or
aam
xchg
cwtl
leave
loop
popa
repz
repz
push
mov
sub
xchg
icebp
ret
cmp
aaa
adc
fstpt
in
ret
mov
ds
cli
pop
sbb
mov
push
inc
fisttpl
pop
jl
call
jp
aas
pop
and
pop
jg
out
repz
cmc
mov
sub
pop
adc
fwait
lds
or
xlat
sbb
jmp
jb
mov
sarl
xor
push
inc
jb
xchg
aas
call
or
adc
add
lret
and
or
insl
dec
idivb
dec
jb
mov
shl
pusha
sub
lret
in
mov
dec
jp
out
cmpsb
aas
mov
mov
fwait
aaa
mov
cmp
mov
cmp
stos
xor
repnz
stc
add
sub
pop
xchg
adc
sub
imul
sbb
sbb
xor
pop
pop
repnz
and
mov
add
fists
adc
mov
stc
adc
hlt
in
jmp
mov
movsb
xor
dec
outsb
adc
aam
push
adc
xchg
roll
xchg
cmp
dec
sarb
sbb
daa
xchg
jnp
or
mov
inc
cmc
mov
mov
idivb
inc
sbb
dec
outsl
cmpsb
inc
mov
loop
or
xor
pop
dec
push
into
cmp
xor
addr16
xor
mov
mov
mov
ss
push
xchg
test
and
inc
fcomps
pop
xor
data16
mov
jbe
pop
lea
ret
inc
and
jno
mov
es
push
jg
and
call
jnp
fdivr
jp
lea
int
cmp
data16
stos
aas
dec
cltd
shlb
pop
lret
sub
es
lret
dec
std
icebp
sarb
je
leave
or
mov
pop
or
mov
sbb
hlt
loopne
dec
mov
movsl
inc
repz
mov
mov
mov
fiaddl
pop
leave
mov
leave
hlt
into
arpl
int3
lds
call
jo
fsts
adc
xor
push
dec
push
loopne
add
pop
sub
mov
scas
das
mov
and
fcompl
iret
mov
addr16
jno
pop
dec
dec
shll
iret
into
xchg
mov
xor
pop
in
dec
cmp
fistpl
adc
dec
cwtl
jmp
add
aad
pop
jae
fs
jl
push
sahf
mov
out
add
cltd
sub
inc
push
mov
add
xor
cmp
loopne
adc
jns,pn
daa
add
imul
mov
sbb
sub
mov
ds
xor
cmc
outsb
or
sub
mov
lcall
sub
data16
cmp
mov
dec
adc
insb
fs
rorl
cltd
dec
rclb
or
push
lahf
pop
fsubrl
test
push
jl
out
mov
scas
and
or
mov
sub
cmp
rcrb
or
jl
cmp
add
inc
ret
or
movsb
dec
inc
fists
pusha
and
test
fs
cmpsl
mov
push
sub
hlt
pop
and
fildll
shrl
cmp
mov
daa
mov
adc
fcoms
xor
test
mov
repnz
push
push
mov
inc
fnstenv
clc
ljmp
xchg
outsl
jecxz
leave
ljmp
sar
insb
lcall
push
aaa
xchg
imul
xor
mov
mov
sbb
fcompl
pop
rcrb
fwait
or
into
bound
mov
adc
aaa
or
mov
leave
sub
push
pop
cmovle
push
and
cld
aaa
icebp
mov
push
push
not
dec
sub
adc
rorl
cmp
popa
add
imul
lock
mov
es
xor
lods
clc
mov
xchg
sbb
in
imul
or
test
inc
xchg
dec
imul
mov
out
cs
jo
aad
in
mov
mov
in
insl
andb
clc
ret
push
pop
or
test
inc
cmp
mov
in
xor
test
xor
aam
shrb
adc
or
push
jne
roll
jne
mov
lret
pop
lods
add
ja
repz
mov
test
inc
mov
jnp
dec
enter
xchg
sti
and
add
repnz
nop
test
in
aam
mov
fisubrs
mov
add
and
mov
push
in
push
mov
adc
insl
xchg
inc
jl
bound
dec
dec
and
mov
shrb
clc
shll
or
shr
mov
cmp
xor
test
inc
orb
test
mov
jge
jb
sbb
aaa
jo
loopne
push
add
out
fdivp
lcall
loop
sbb
inc
stos
clc
mov
mov
push
dec
lahf
mov
mov
cmp
loopne
xchg
mov
fbld
xchg
jno
imul
push
ret
dec
addr16
add
enter
adc
push
xchg
xchg
imul
dec
add
out
push
and
sbb
dec
and
mov
dec
add
hlt
push
mov
outsl
clc
lock
and
jl
ss
mov
ja
pop
in
jne
out
mov
out
cld
addl
mov
xchg
jnp
xchg
jl
out
pop
lods
es
add
and
sbb
add
pand
sub
xlat
out
lret
adc
out
gs
xor
or
out
inc
inc
push
cmp
jo
or
sti
aaa
test
out
xchg
popf
mov
cmp
lret
int3
mov
mov
sbb
pop
scas
adc
cld
mov
adcl
fs
add
jmp
xor
lret
enter
mov
mov
mov
popf
gs
fcoml
fbld
or
and
sbb
adc
dec
inc
xchg
bound
sahf
sbb
add
inc
daa
dec
pop
lahf
lods
int
mov
gs
cs
cmp
mov
mov
push
push
or
jmp
push
pop
inc
push
or
sbb
inc
loop
mov
cmp
int
dec
hlt
dec
xor
or
pop
clc
out
loop
int
test
nop
mov
add
add
clc
and
jne
sub
ja
cmp
call
jae
inc
cmpsl
pop
sub
xor
imul
enter
int
test
inc
ja
notl
js
fstpt
inc
ret
mov
and
dec
div
rcrl
push
pop
stc
xchg
add
mov
not
loopne
push
lea
jns
fucomi
and
jno
lods
jo
xchg
imul
sub
add
es
push
shll
add
sarb
cmpl
jae
xchg
addr16
push
or
icebp
jl
mov
test
jns
cmp
jne
ljmp
movsl
mov
xor
xlat
ljmp
adc
jecxz
ret
repz
sahf
cmp
or
cmc
fildll
and
sbb
push
adc
sbbb
pushf
xor
jb
ret
dec
aam
orl
and
xor
outsb
stc
jno
pop
js
jp
aad
sub
jnp
rclb
xchg
daa
sbb
xchg
dec
dec
testl
mov
jg
mov
or
cmp
and
or
pop
dec
mov
stos
repnz
push
sbb
cmp
lret
and
jne
mov
push
in
scas
out
rorl
and
mov
xor
sti
and
cmp
sub
dec
repz
and
sti
fdivr
jo
sbb
cmp
adc
inc
cmp
and
pop
mov
ret
ljmp
mov
pop
cltd
pop
test
icebp
cmp
ror
lods
sbb
lea
jmp
push
jecxz
add
addr16
mov
fldcw
fimull
aad
call
lods
cmp
test
sub
or
mov
movsb
xor
sti
dec
cmp
xchg
hlt
sbb
nop
mov
mov
pop
push
cs
bound
insb
push
cmpb
pop
dec
or
xor
add
pusha
adc
jecxz
lods
dec
popa
adc
dec
imul
xchg
js
jecxz
cmp
out
rcll
mov
adc
pop
roll
cli
std
mov
and
out
movsl
int3
and
shlb
dec
mov
fucomp
arpl
or
push
int3
aam
mov
outsb
out
and
gs
sub
jb
in
roll
out
mov
cs
popf
pop
fldcw
ja
xchg
fcomps
insb
mov
lods
sub
lock
inc
inc
mov
adc
popf
fs
imul
fwait
in
vmwrite
repz
in
lret
xor
push
ret
jl
xchg
cmp
sub
sbb
das
iret
inc
ss
lahf
fcompl
add
mov
pop
fisttpll
cli
and
push
hlt
imul
and
and
sbb
and
jb
pop
loope
pop
call
aad
mov
mov
sub
outsl
imul
sub
cmpsl
je
imul
push
insl
inc
dec
jno
cmpsl
jge
xchg
or
mov
xchg
push
mov
mov
shlb
cmp
xchg
jmp
dec
adc
in
shl
aas
jns
jecxz
push
push
out
fnstsw
or
rorl
fsubrl
leave
insb
rcrb
lahf
pushf
fdivs
dec
cltd
loopne
fs
pop
addr16
mov
mov
xchg
in
cmpl
or
rcll
dec
lret
ret
or
mov
aas
inc
test
mov
scas
les
shlb
dec
mov
test
imul
fbstp
mov
dec
je
xchg
sub
xchg
in
idiv
xchg
cmp
sub
sub
mov
pushf
and
addr16
lds
mov
sbb
jle
fistps
xorb
lods
cmc
mov
arpl
lods
nop
lret
pop
adc
fstpt
stos
icebp
mov
ds
push
scas
cmp
mov
outsl
sti
inc
dec
repnz
or
push
into
sub
std
push
cwtl
jg
vshufps
xchg
jge
dec
vsubpd
inc
cmp
imul
je
mov
dec
repnz
iret
das
stos
adc
dec
out
pop
sub
lock
inc
popa
inc
mov
mov
scas
xchg
dec
loope
adc
call
jge
cmp
xchg
mov
push
shlb
push
adc
scas
inc
imul
xchg
cmp
scas
sti
jns
sub
enter
add
and
in
repz
cmp
mov
stc
pop
insl
lcall
mov
cmp
and
mov
aad
jecxz
mov
add
lods
fdivrl
js
ret
or
cmp
cld
pop
lods
dec
rorl
in
pop
jnp
jmp
std
subb
sbb
inc
fcoms
fcoml
push
add
sahf
das
mov
jecxz
out
ljmp
andl
xor
jnp
inc
add
xor
ja
mov
pushf
xchg
adc
jmp
lret
int3
iret
adc
into
jnp
popf
ret
pop
sbb
mov
add
add
mov
jecxz
or
test
fstps
lret
test
pop
sarl
adc
pushf
pop
sub
jp
in
and
xor
popa
xchg
mov
push
lcall
sub
sbb
mov
mov
mov
into
xchg
faddl
fimull
mov
dec
pop
daa
cwtl
push
mov
mov
jbe
sbb
in
pop
dec
push
repnz
stc
jl
jae
pusha
pop
bnd
fistpll
out
rclb
and
inc
xor
enter
lods
daa
and
data16
call
mov
lock
stc
mov
xchg
nop
stos
js
dec
pop
sbb
addb
cmp
and
loopne
das
mov
in
mov
jecxz
fcomps
mov
inc
xchg
pushl
jle
in
ljmp
ljmp
ret
stos
popf
mov
or
daa
pop
add
in
jmp
push
imul
aad
ss
sbb
addb
pushf
mov
cli
or
test
lret
or
xor
orb
cmp
cmp
into
push
jbe
xchg
mov
dec
lahf
mov
jmp
xor
ss
cmovge
push
mov
mov
and
jp
jl
in
or
pop
push
inc
jmp
push
mov
pop
mov
push
adc
xchg
jg
and
dec
jns
leave
mov
ret
insb
imul
push
hlt
mov
cmp
adc
enter
pop
out
add
pop
popa
stc
wrmsr
iret
test
fwait
pop
adc
push
cmpsl
xchg
cmp
fs
insl
adc
jae
lea
add
inc
pop
cwtl
pop
or
xchg
mov
in
mov
or
add
lcall
lock
sahf
xchg
jae
dec
scas
inc
das
mov
cli
push
aad
xchg
shr
push
imul
sbb
adc
inc
dec
adc
adc
and
ds
lret
dec
add
stos
xchg
cmp
cmp
inc
lcall
mov
aam
ret
mov
cwtl
xchg
scas
jecxz
lea
mov
or
int3
xor
dec
lock
and
jp
adc
loop
ret
in
jecxz
xor
xlat
scas
dec
xor
sti
mov
pushf
jae
clc
add
dec
xor
sub
xor
sub
pop
test
fsubrs
lock
jbe
sub
imul
xor
aaa
inc
subb
push
pusha
mov
jbe
ds
add
mov
add
andb
or
mov
aam
out
div
imull
scas
dec
pop
push
xchg
jne
mov
cld
cli
mov
lss
pop
ret
pop
add
xchg
mov
fwait
xchg
and
call
insl
adc
insl
xchg
mov
out
and
or
mov
sub
adcb
fstpl
div
push
adc
dec
adc
mov
in
out
adc
std
clc
in
jns
mov
jg
pop
pop
adc
fcomip
dec
mov
fnstenv
push
stos
pop
jg
mov
fstpt
mov
inc
mov
sub
push
in
test
mov
adc
add
loope
mov
fdivs
add
shlb
je
lock
jne
or
sub
jne
dec
dec
pop
jns
mov
std
sbb
jno
gs
in
jne
jne
dec
popl
insl
ret
inc
push
cmpsb
fcmovbe
popf
les
push
addr16
adc
std
jmp
lret
pushw
insl
xchg
icebp
pushf
lahf
aad
into
pop
pop
cmpsl
cmp
and
pop
pop
adc
lods
mov
xor
or
xor
lret
into
fisubs
movsl
push
bound
xor
adc
jno
xchg
dec
idivb
lock
mov
stc
sbb
xchg
ftst
icebp
cld
sub
mov
xor
cmp
push
pusha
xor
sbb
pmulhw
sub
or
xchg
mov
mov
mov
sbb
out
mov
jo
mov
or
push
add
dec
jbe
and
mov
or
fidivs
mov
ljmp
xchg
sub
lret
xchg
pop
addb
mov
and
mov
pop
pop
cmpsb
sbb
mov
xchg
cmp
mov
or
mov
mov
jmp
xchg
cmp
add
iret
lods
test
jmp
xchg
popa
imul
rcrb
enter
mov
enter
jbe
or
shll
test
jo
xchg
cltd
xor
fs
pop
xor
enter
repnz
jp
pop
mov
and
add
cld
aad
cmp
mulb
xor
push
pop
sub
add
xchg
sub
mov
pop
pop
mov
dec
and
test
repz
shlb
je
push
mov
mov
pop
flds
hlt
push
adc
aad
push
inc
pop
test
dec
mov
push
xorb
jno
les
out
lds
adc
add
xor
call
out
and
sbb
ss
shrb
lcall
pushl
decb
add
fs
das
xlat
stc
push
sub
cs
jge
std
mov
add
push
clc
in
aam
adcb
js
mov
inc
scas
sahf
orb
sbb
jle
or
mov
add
cmc
mov
sbb
shlb
push
iret
xchg
js
fdivrl
call
nop
in
jecxz
leave
sbb
add
outsb
inc
in
pop
in
pop
in
push
clc
and
jbe
into
lock
test
jnp
mov
out
popf
mov
or
outsl
adc
dec
jmp
repnz
xor
insw
add
pop
inc
jge
cmp
inc
push
or
shrl
lret
or
test
popl
mov
outsl
sub
stos
arpl
dec
ss
add
pop
pop
cmpsb
xchg
in
call
or
mov
pushf
ds
shl
sub
mov
nop
xchg
xchg
adc
fildll
ds
pop
mov
cmpps
movsb
insl
mov
inc
out
pusha
cmc
sbb
jo
dec
scas
inc
cmpsb
cmc
jbe
cmp
jp
xchg
add
fidivrl
scas
xchg
enter
dec
test
and
mov
js
ja
pop
icebp
dec
ja
cwtl
arpl
jecxz
xchg
sbb
cwtl
fwait
mov
sub
aam
or
lods
je
and
or
pop
ret
jge
imul
cwtl
in
or
addb
add
rol
dec
fistl
scas
push
stc
mov
mov
and
mov
lods
mov
aam
out
pop
jge
into
fisubs
insl
jne
pop
dec
mov
pop
xor
je
mov
sub
mov
jae
mov
leave
cmp
icebp
lret
inc
jle
xchg
push
xchg
or
mov
jmp
popf
popa
inc
add
pop
popf
rorl
xchg
xor
xor
enter
and
sahf
cld
mov
mov
fwait
dec
cmpsl
and
mov
mov
test
dec
lods
sti
jbe
aas
clc
or
jno
dec
rcll
hlt
aas
addr16
inc
daa
add
loop
cli
out
or
dec
push
sbb
test
adc
out
cmp
iret
xor
sbb
in
inc
adc
xchg
jb
pushf
js
test
jp
cmp
sbb
push
lret
mov
xor
or
cmp
shll
mov
xlat
jo
sti
hlt
push
aaa
or
sahf
sub
aas
mov
mov
lds
xchg
ss
stos
stos
xchg
rcrl
leave
mov
inc
std
mov
fisttps
loopne
stos
rcrb
bnd
in
lcall
sti
repnz
lods
xchg
and
pusha
xchg
mov
jnp
xchg
insl
mov
cmc
je
and
mov
cltd
clc
jp
int
jg
call
jae
mov
mov
ficomps
sbb
imull
sbb
mov
jae
rorl
iret
lods
test
sub
pop
cmp
daa
mov
push
sub
push
sbb
int3
gs
shl
lcall
push
push
xchg
jecxz
add
jns
insl
test
lahf
cmp
adc
dec
iret
pop
hlt
pop
xchg
stos
hlt
pop
mov
jne
cmpsb
xlat
aaa
pop
mov
jns
lahf
mov
sbb
rorl
push
sub
ljmp
leave
push
loopne
fwait
orl
cmp
xorb
dec
mov
mov
and
and
rcr
push
loopne
xchg
pushf
nop
rorl
fwait
jo
lock
call
cs
mov
mov
mov
xchg
and
jp
repz
cmp
fmuls
rclb
and
add
dec
in
je
add
daa
and
xlat
mov
and
daa
add
jbe
imul
mov
jnp
stos
insb
jg
jg
cmp
out
mov
int
inc
repnz
push
add
sbb
fidivrl
inc
fnstcw
incb
dec
sub
inc
outsl
outsl
outsw
popf
fisubs
rorb
sub
js
push
mov
xor
gs
imul
lahf
jl
mov
push
mov
imul
faddl
mov
data16
js
pusha
dec
xchg
or
imul
mov
fs
out
sub
push
mov
repnz
fs
test
stos
popf
dec
mov
ds
add
jecxz
fdivs
cwtl
and
dec
addb
adc
test
jne
dec
cmp
sbb
test
les
sbb
pop
dec
fildl
dec
or
in
in
stc
push
pop
fstpl
in
stos
cmp
add
jl
fisubs
pop
into
aam
pusha
mov
pop
sub
inc
mov
out
cli
shrb
mov
fsub
add
jmp
sti
popf
and
cwtl
pop
scas
jp
mov
int3
enter
insb
mov
sbb
push
idivb
inc
mov
gs
adc
test
push
xchg
add
repnz
sahf
rol
xchg
fcomp
pop
in
push
xor
rclb
dec
xchg
cltd
mov
mov
push
mov
popf
mov
aas
push
pop
pop
push
adc
cmp
inc
stos
cs
and
insb
stos
and
push
loope
addb
pop
adc
jnp
mov
and
sbb
and
mov
pusha
rolb
sbb
fs
out
movl
or
cli
and
and
sbb
and
add
mov
mov
jg
mov
jae
mov
fsubr
fisubrs
loope
sahf
sub
jge
gs
xchg
testl
ret
add
jo
xchg
push
or
or
or
sbb
hlt
jnp
jns
stos
xor
xchg
ja
subb
push
stos
popf
mov
pop
out
sub
sub
push
inc
lods
mov
ret
sbb
jmp
adc
cmp
lods
sub
out
or
mov
push
xchg
inc
cmp
cmpsl
mov
add
mov
out
add
imul
and
add
stos
scas
jg
imul
mov
fadds
cmp
iret
inc
out
jno
lods
fisubrl
sbb
jae
lods
jge
jo
xor
xorl
lret
push
dec
rclb
mov
sti
repnz
push
enter
ficompl
pop
fnsetpm(287
dec
add
int3
sbb
push
test
call
push
sbb
inc
jge
xchg
xchg
addr16
insb
push
mov
xchg
sbbl
aas
in
xchg
stos
leave
add
mov
adc
int
inc
dec
dec
ljmp
fisttpll
cmp
aaa
adc
jb
push
ret
or
mov
mov
xor
lahf
lea
xlat
ljmp
cmpsb
sarb
inc
mov
into
cmp
sti
and
test
pop
sub
icebp
movsb
jno
rolb
cmp
fistl
push
jmp
insl
iret
cwtl
gs
in
or
sub
pop
mov
stc
or
scas
bound
ret
or
cmp
xchg
or
scas
jae
cwtl
inc
sbb
sbb
mov
outsl
inc
gs
int
mull
xchg
addb
jl
adc
sbb
loope
hlt
dec
mov
dec
icebp
add
inc
sub
call
add
mov
inc
aam
stos
mov
aas
dec
js
mov
xchg
pop
aas
sub
push
call
outsl
xor
fsub
and
lcall
pushf
jp
icebp
out
arpl
jbe
cli
loop
shlb
adc
adc
pop
int3
int
daa
loope
sar
and
mov
scas
iret
and
xchg
and
or
dec
sti
movsb
cmp
cmp
arpl
lret
inc
pop
lods
sahf
pop
xor
xadd
out
mov
pop
loopne
dec
rcl
mov
push
shll
bound
pop
dec
test
shll
mov
push
pop
mov
les
push
dec
decl
test
mov
hlt
and
jmp
ror
cmp
aad
sahf
mov
or
sbb
adc
add
ds
adc
push
aas
xchg
clc
in
adc
xchg
pop
sub
inc
adc
add
out
mov
jp
or
xchg
sub
pop
out
fmul
cs
in
movsl
lods
hlt
in
stos
xchg
push
push
nop
dec
mov
aad
scas
pop
sbb
movsb
mov
out
dec
inc
pushf
and
or
cmpsb
mov
dec
pop
jmp
test
sti
adc
rcr
scas
adc
inc
dec
or
pop
adc
inc
jo
arpl
inc
mov
inc
cmp
sub
dec
mov
ds
ss
jmp
cmp
push
jecxz
xor
jae
nop
ret
shrb
fcmovbe
mov
testl
inc
mov
mov
lahf
rolb
inc
dec
mov
cwtl
aad
scas
sahf
push
add
push
out
or
out
sbb
clc
jl
fdivs
dec
pop
add
pop
xor
xlat
mov
jae
pusha
mov
loope
das
jle
mov
jmp
cli
stc
add
lea
in
fcomps
cmpsb
ret
pop
xchg
pop
mov
inc
aad
or
push
push
adc
test
or
mov
sbb
mov
ret
dec
dec
or
xor
scas
cs
notb
sub
xchg
stos
sub
add
xlat
lock
and
mov
ret
pop
xor
outsl
movsb
mov
xchg
pop
xor
fwait
arpl
jle
test
dec
mov
movsb
mov
mov
cld
pop
sub
xchg
dec
hlt
int3
ja
pop
cmpsb
push
arpl
xchg
xchg
mov
sbb
mov
insb
les
mov
xchg
mul
stc
cmpsb
fisttpll
aad
mov
mov
mov
pushf
aad
ljmp
imul
nop
mov
mov
mov
mull
mov
jp
sub
dec
and
test
push
ss
add
scas
mov
and
and
xor
mov
lock
cmp
scas
mov
jns
or
aad
mov
mov
jo
inc
lods
inc
sahf
or
add
ret
test
fwait
mov
clc
call
mov
and
add
inc
add
adc
sbb
xchg
testl
xor
xchg
mov
divb
movsl
xor
xchg
xor
add
insl
sub
xorb
rcrl
jle
dec
mov
xchg
add
mov
andl
xor
push
aaa
cmp
lcall
mov
fnstcw
test
mov
dec
dec
xchg
mov
jb
insl
push
add
inc
lret
lods
orb
sub
dec
insb
int
movsl
sub
negl
out
test
loop
dec
fidivs
cwtl
xor
dec
xchg
mov
add
or
xchg
roll
jno
lods
jp
imul
add
cmp
mov
mov
cmp
aas
add
movsl
sbb
cmp
rorb
cltd
sbb
mov
repz
fcmovnu
adc
hlt
and
mov
shll
out
or
sahf
std
xor
pop
add
cmp
inc
mov
push
call
mov
jns
dec
js
hlt
xor
adc
sti
mov
and
insb
mov
out
dec
movsb
movsb
scas
outsb
aam
je
js
enter
loope
test
add
aam
out
insl
push
fdiv
int
push
shlb
add
outsl
jbe
or
xchg
inc
jno
in
minps
lods
mov
inc
xor
cmp
data16
clc
mov
ret
dec
push
loopne
push
adc
arpl
mov
jo
pop
dec
test
or
je
enter
cmpsl
push
loope
sahf
ret
mov
mov
jg
jg
cwtl
jl
jbe
sbb
leave
mov
into
xor
es
push
mov
lret
mov
lahf
push
addr16
push
and
xchg
add
pop
pop
mov
movsb
jg
hlt
inc
dec
cmp
daa
push
xor
std
dec
or
xchg
mov
bound
ficomps
and
adc
out
pop
psrlw
inc
or
push
call
lret
mov
fisubs
and
out
push
jns
xor
imul
lock
aad
inc
pop
push
into
popa
les
lcall
clc
jnp
jmp
mov
test
shll
jno
jl
mov
push
add
sub
sbb
popa
and
lahf
xchg
stc
dec
and
push
out
inc
dec
mov
push
insl
fstps
mov
jnp
inc
dec
cmp
push
sahf
sbb
pop
int3
jnp
lret
jnp
jnp
mov
cmp
inc
mov
decl
int
jp
test
mov
add
cs
out
mov
and
hlt
std
pop
out
inc
push
jecxz
sar
testb
test
aam
adc
xlat
jle
outsl
fwait
jb
js
and
cmp
xor
xchg
cmp
movsb
repnz
loop
fldl
adc
test
mov
shrl
lahf
jge
ret
mov
clc
iret
sub
out
jb
xor
jp
sbb
aam
repz
pop
dec
adc
lcall
cmpsb
dec
push
bound
mov
push
jecxz
add
into
jns
push
sub
pop
outsb
push
call
or
cmpsl
jb
dec
into
push
mov
cmp
in
pop
jmp
rep
clc
pop
cvtps2pd
sti
movsl
pop
loope
arpl
adc
lahf
push
cmc
mov
pop
mov
scas
mov
pop
sbb
lcall
int3
adc
adc
rol
fsubrl
inc
or
enter
jbe
jns
push
clc
and
sub
or
push
cmp
das
test
sub
push
adc
mov
repz
or
mov
rep
out
lods
xchg
push
sub
mov
cmp
mov
push
std
les
testl
mov
popf
sbbl
pusha
and
and
inc
cmpsb
je
mov
add
pop
mov
into
sarl
cmpsl
outsb
loop
aad
pusha
stos
mov
aam
xor
sub
lods
jbe
or
or
push
push
or
jg
aas
jmp
movsl
push
imul
xor
repnz
leave
adc
jo
mov
push
js
repz
mov
sbb
stc
movsb
or
ja
push
or
push
xchg
mov
arpl
scas
dec
sbb
imul
cmp
pop
xor
add
sarb
pop
push
cmp
xlat
cli
aaa
std
shlb
push
lahf
into
xchg
sbbl
or
cmp
jmp
es
test
cmp
out
pop
test
inc
aas
adc
add
out
adc
jnp
sbb
push
enter
pop
mov
lock
test
mov
mov
das
inc
pop
jno
jne
ds
add
repnz
in
dec
and
inc
mov
ja
aam
outsl
add
aad
daa
rcrl
add
lock
xchg
sbb
mov
push
in
xor
roll
push
insb
pop
dec
fsubrp
sbb
testl
or
mov
dec
mov
sbb
rcrl
pop
xchg
stos
add
in
popa
mov
dec
xchg
xchg
xchg
sbb
xor
ljmp
or
xor
xor
rcrl
xchg
jno
add
ss
fisttpl
cmp
xchg
lods
arpl
inc
sar
jns
mov
push
push
cs
addr16
xor
push
jle
mov
mov
mov
mov
movsl
inc
lret
nop
mov
sahf
ret
push
push
xchg
and
sub
loop
mov
aad
pop
jge
sbb
dec
aam
xchg
call
out
out
pop
test
lods
pop
jg
mov
mov
mov
push
adc
push
sbb
jbe
test
inc
test
xchg
mov
stos
and
arpl
cmp
or
or
push
cltd
xchg
add
push
mov
adcl
les
sbb
mov
push
mov
pop
mov
arpl
mov
lds
sbb
lret
imul
mov
and
sub
push
push
insl
jo
out
add
push
fwait
movntq
xchg
rolb
jmp
push
jae
mov
aaa
aas
data16
sbb
push
adc
sub
dec
in
out
mov
inc
lea
pushf
or
mov
ficomps
jg
loop
inc
and
inc
mov
test
mov
jo
lret
lds
and
js
inc
mov
mov
or
pop
subl
scas
adcl
lock
xchg
orl
push
mov
repnz
lods
ja
mov
jb
xor
cmp
sar
add
mov
jb
out
cmp
jmp
dec
push
lds
sbb
jmp
je
mov
and
xor
sbb
jnp
lret
in
mov
push
push
fisttpl
flds
sbb
cmp
fwait
je
rolb
daa
jno
ljmp
inc
fmull
inc
jg
sub
xor
push
out
inc
sub
lret
lret
loopne
jmp
or
mov
mov
inc
inc
lahf
shll
jnp
popf
adc
mov
cltd
push
in
cld
and
in
test
push
cld
repnz
aad
mov
jmp
and
mov
ret
movsb
xchg
and
mov
into
jb
add
idivl
or
daa
je
sti
adc
sar
or
pop
mov
jno
shrb
scas
mov
jl
rcrb
or
shll
ffree
test
jle
mov
lahf
add
jns
jg
jle
call
jae
or
mov
int
push
mov
and
pushl
mov
sbb
sbb
test
mov
pop
sbb
push
aaa
cmp
mov
dec
jb
mov
shlb
mov
nop
sbb
jmp
les
jge
xor
clc
int
dec
das
add
mov
mov
loope
in
pop
sub
push
push
sbb
dec
das
xchg
fadds
lahf
sti
push
adc
xor
sahf
add
shll
mov
daa
fmull
dec
push
nop
lret
adc
pop
aaa
je
cmp
sbb
imul
inc
fstps
rol
addr16
and
enter
add
imul
xchg
cmp
push
lods
adc
stc
sub
mov
mov
mov
or
mov
dec
push
and
fcoml
pop
xchg
aaa
or
mov
or
mov
xor
popa
daa
xor
sub
popa
xlat
rcll
mov
insl
movsl
jle
cmpl
inc
xchg
pop
xchg
mov
loopne
mov
sbb
lahf
sarl
pop
mov
dec
out
iret
outsl
movsl
inc
pop
mov
mov
ret
push
sub
mov
enter
mov
faddp
cmpsl
push
rcl
lds
test
sbb
mov
lcall
pop
bound
mov
shr
adc
mov
mov
mov
es
adc
add
jmp
sub
inc
inc
jb
or
cltd
inc
jo
mov
je
repnz
mov
mov
cmp
andl
mov
cmp
cmp
into
adc
es
mov
add
add
xchg
fadds
inc
xchg
xorb
les
push
orl
dec
push
mov
inc
test
rcrl
fildl
sub
push
sub
imul
cmc
mov
jbe
pop
add
cmp
fwait
pop
dec
movsb
jnp,pn
jle
in
push
loopne
push
or
jo
push
pop
cmp
ret
fwait
push
xchg
jle
call
mov
stc
xor
mov
cltd
test
and
cs
xchg
pop
dec
push
subb
jne
insl
in
or
sub
scas
adc
or
ss
lretw
aaa
js
mov
xchg
in
dec
xor
jb
insl
cmp
add
dec
repnz
insl
adc
dec
ja
xchg
sbb
movsb
push
lret
add
lods
and
sub
sbb
pop
xchg
inc
mov
sub
jns
xlat
pop
or
test
cs
out
inc
cmp
dec
js,pt
ja
jne
adc
aam
pop
loop
xor
sbb
mov
and
xor
insl
negb
cmp
and
mov
movl
jp
jo
cs
shlb
xor
xchg
jnp
das
aas
lcall
mov
xchg
aad
test
mov
ds
lret
addr16
adc
push
push
cmp
leave
ss
sub
rcrl
idiv
jbe
xchg
idivb
movsb
aas
repz
mov
incl
or
and
pop
jns
shll
stc
lcall
pop
decl
inc
js
or
jbe
sahf
addr16
pusha
push
inc
rclb
lahf
popa
loopne
pusha
adc
adcl
subl
movsb
cld
mov
movsb
adc
lock
and
mov
push
adc
in
aaa
lods
jb
aas
popa
mov
addr16
cmp
mov
negb
cmp
cld
inc
adc
inc
xchg
push
daa
adc
fadds
mov
sub
insb
adc
scas
xchg
ss
jecxz
jb
pop
sub
lds
aas
out
test
js
in
ret
aam
repnz
bound
inc
test
mov
ret
shrl
clc
pop
push
jne
adc
mov
cld
jge
push
mov
adc
jns
ja
mov
ds
sbb
push
insb
cld
dec
loop
das
mov
es
loope
addr16
scas
pop
lods
ja
call
stos
shlb
out
cli
add
les
mov
out
push
push
pop
mov
dec
dec
lcall
push
or
pop
xchg
gs
gs
dec
ja
jg
jbe
insl
cli
stos
mov
jle
outsl
outsb
scas
stc
pop
mov
test
aad
bound
inc
and
jb
add
mov
cmc
dec
insl
cld
cmp
pop
int
pop
rcrb
sbb
mov
test
jp
pop
cld
imul
and
sti
scas
xchg
mov
fldl2t
cmpsl
stos
xchg
ljmp
cltd
cmp
gs
stos
xor
dec
push
imul
and
xor
mov
push
les
lock
xchg
fistps
cmc
pop
into
inc
lret
add
scas
push
jg
in
out
add
sub
push
or
ret
cmp
mov
in
aam
sub
and
pop
les
jle
dec
xchg
inc
fstps
sub
fwait
cmpb
add
sub
leave
push
pop
fldl
jg
ficoml
mov
stos
dec
loope
mov
jg
icebp
dec
js
cli
clc
sbb
mov
push
gs
jmp
dec
xchg
inc
pop
mov
out
mov
xchg
pcmpgtd
add
sti
out
xlat
movsb
xchg
imul
pop
sahf
xor
sbbb
add
jne
aas
cld
es
pop
jecxz
inc
pop
add
add
inc
xchg
pop
mov
xor
add
mov
fsubrl
lret
lea
inc
shll
sbb
clc
inc
adc
mov
sbb
daa
adc
aam
enter
xchg
mov
xor
cmp
sbb
jae
out
push
fldl
outsl
push
or
mov
repz
mov
sub
mov
mov
outsl
daa
fimuls
pop
popa
jge
dec
leave
pop
fisttpl
cmpsl
dec
dec
pop
xchg
mov
inc
inc
dec
mov
fisttpll
arpl
fadds
movsb
cs
out
jge
mov
imul
mov
push
sub
adc
sub
popa
jmp
and
fildll
and
fcompl
pop
jae
adc
inc
cmc
dec
enter
lock
test
and
xchg
xchg
dec
add
leave
xchg
hlt
or
scas
subl
call
sub
or
and
mov
cli
lock
daa
xor
les
cmp
mov
outsl
cmp
add
xor
orb
cmp
stos
jae
add
daa
cli
lret
aam
andb
sub
xorb
insl
mov
push
pop
xor
daa
rolb
addl
jae
shl
sub
jb
cli
clc
cs
mov
rclb
sar
add
lret
cmpsb
or
data16
jne
mov
jns
and
or
movsb
mov
lret
xchg
xor
jecxz
inc
je
in
loopne
mov
sub
repnz
nop
mov
clc
jno
sti
xor
jecxz
daa
xchg
lcall
and
jmp
js
or
mov
clc
rcr
in
pop
inc
jmp
test
mov
hlt
mov
mov
outsb
adc
cwtl
shrl
rcrb
cwtl
mov
push
cwtl
xchg
cmp
nop
lcall
adc
pop
sub
lret
in
cmpsl
clc
lahf
sub
insl
mov
adc
push
test
push
je
fadds
stos
push
shl
push
mov
and
adc
mov
or
dec
pusha
aad
cmpsb
or
mov
lcall
lahf
stc
adc
lods
or
push
das
sbb
mov
add
aad
fcmovnbe
and
pushf
xchg
stc
stos
mov
xchg
xor
or
pushf
stos
stos
popa
jne
mov
js
jns
inc
jge
pop
lea
lcall
scas
or
mov
mov
cs
insb
add
sub
and
inc
xlat
jb
inc
lahf
in
inc
push
icebp
scas
mov
jb
cwtl
in
xchg
out
shlb
xchg
adc
hlt
ds
mov
xor
xlat
mov
add
shrl
les
pop
fs
jg
and
sarl
adc
or
add
loop
lods
adc
inc
mov
sbb
or
adc
xchg
cmpsl
push
lods
mov
cmp
pop
sbb
mov
or
sub
dec
mov
fnsave
test
sub
xchg
stos
or
imul
push
daa
sahf
or
and
add
scas
ds
mov
fsubrl
pop
lods
xchg
mov
cmpsl
rolb
inc
cs
imul
mov
mov
shrl
stc
ja
movsl
clc
sahf
lock
inc
jp
mov
push
into
xchg
pop
hlt
push
in
aam
jne
mov
lcall
ret
jle
pop
pop
mov
sub
mov
ljmp
pop
sahf
andl
pop
jecxz
pop
mov
lret
mov
jne
inc
lods
into
xlat
scas
fbstp
dec
or
adc
imul
add
pop
push
fs
pop
jae
in
xlat
pop
jl
push
sbb
add
aad
loope
mov
cwtl
into
bound
push
pop
xor
andb
cmp
inc
repz
sbb
out
stos
xchg
sbb
popl
or
push
or
rorb
je
ss
mov
push
je
ret
pop
inc
popa
fs
call
fisubrl
ljmp
push
test
ja
enter
enter
xlat
xchg
loope
dec
faddl
fimull
jge
in
frstpm(287
loope
pop
xchg
jae
frstor
adc
clc
or
incb
push
inc
sub
aas
cs
dec
cs
dec
lcall
cs
and
sub
pusha
iret
jae
mov
fldenv
fisttpll
sbb
fcmovne
cs
aad
hlt
addr16
in
insb
inc
addb
into
out
rorb
pop
cmp
ror
ret
popf
out
pusha
mov
fdivl
jecxz
loopne
mov
push
dec
pop
shlb
mov
imul
cmp
mov
pop
cwtl
int
inc
adcl
int
out
xor
ja
inc
test
dec
inc
xor
dec
dec
jle
loop
into
es
inc
cmpsl
andb
cltd
inc
xchg
or
jp
pop
xchg
pusha
push
in
xchg
out
int3
movsl
mov
push
mov
je
stos
mov
das
cmpsl
in
xor
clc
fs
fsts
in
adc
mov
dec
adc
push
push
mov
dec
mov
clc
jl
xor
xor
in
popa
je
scas
inc
mov
inc
or
mov
jno
leave
lret
cmpb
xorb
sbb
cs
insl
arpl
or
or
xor
popf
test
jbe
sub
imul
xchg
xor
rcl
ret
xlat
lret
iret
push
ljmp
and
mov
test
rcrb
lret
mov
in
adc
fistpl
repnz
and
je
sbb
cmp
subl
pop
jge
sti
arpl
adc
dec
das
roll
mov
cltd
push
out
lahf
stc
outsb
mov
mov
cmp
push
inc
mov
push
push
add
imul
dec
and
leave
pushl
mov
pop
add
inc
out
scas
dec
movsl
adc
imul
mov
test
sub
pop
imul
adcl
pop
lcall
gs
in
push
cmp
add
into
data16
mov
scas
mov
sbb
aas
fcmove
xor
stc
xchg
cmp
lods
or
lret
mov
inc
xchg
push
pusha
out
push
jmp
outsl
lahf
call
das
dec
mov
out
sbb
pop
add
outsl
mov
pop
mov
adc
addr16
aaa
dec
daa
sbb
scas
arpl
sub
popa
mov
daa
cmp
xor
sbb
jae
cwtl
outsl
lods
fsts
dec
data16
out
add
repz
mov
jp
fistps
imul
not
lahf
jno
add
and
pop
shlb
mov
mov
jnp
adc
sub
inc
daa
arpl
xchg
mov
ret
dec
loop
xor
cld
insb
ficomps
fwait
mov
jno
sarl
stos
sti
jae
stos
inc
sub
outsb
cld
ret
push
jns
jnp
dec
pop
jne
jmp
movsl
push
xor
cli
jnp
mov
ret
mov
adc
scas
and
aam
inc
test
mov
jb
cmpsb
inc
mov
stos
push
fdivr
sub
jle
cmp
scas
xor
push
in
xchg
add
es
pop
ja
mov
inc
inc
ret
push
jmp
gs
push
push
in
cmpsb
es
push
repz
and
push
jbe
xor
xchg
in
push
addr16
lds
in
imul
std
mov
cmp
insb
pop
aaa
jnp
cmpsb
push
stos
scas
in
dec
cmp
pop
mov
push
fsubrl
xchg
movsb
dec
addr16
inc
out
mov
jecxz
sub
xchg
mov
sahf
ja
mov
aaa
fs
mov
jae
or
sub
icebp
mov
jb
push
sahf
adc
xchg
inc
sbb
aad
pop
clc
jle
push
push
push
cmpsb
mov
cld
sub
xor
fsubrs
jg
jo
mov
and
dec
popf
mov
mov
xchg
das
rclb
sbb
pop
dec
cli
and
jecxz
dec
iret
inc
mov
xorb
popa
das
rorl
jecxz
fcoml
scas
xchg
cwtl
or
test
daa
sarb
and
mov
mov
xorl
xor
fwait
int
imul
imul
out
mov
arpl
lods
mov
loope
xchg
stos
shrl
dec
sahf
loopne
ds
xlat
push
ret
lock
jae
sub
gs
stos
lahf
xchg
fdivrl
hlt
and
rcll
fmul
ja
test
sub
add
fcomip
and
cmp
cwtl
stos
movsb
jle
je
cmp
mov
iret
or
sbb
adc
xchg
jecxz
dec
test
push
fstl
jecxz
imul
jecxz
mov
or
std
push
fisttpl
rorb
mov
cli
and
xor
jb
fwait
push
imul
inc
and
push
mov
jmp
addr16
or
adc
std
pop
xor
fwait
push
mov
jge
add
rcll
mov
push
nop
jnp
ss
pop
out
or
inc
addr16
mov
fwait
push
and
adc
fistps
inc
sbb
mov
sbb
push
fwait
mov
add
add
scas
out
loop
cmp
cmpsl
push
fistl
fldcw
push
mov
lcall
inc
or
shl
std
fwait
jo
insl
lea
mov
pop
jns
pop
fidivrs
cmpsl
fisubl
mov
popa
pop
mov
int
loop
mov
ds
cmp
push
pop
push
pusha
push
lret
xchg
sahf
push
bound
and
pop
mov
ja
call
test
push
adc
pop
andl
outsl
mov
popf
pop
adc
test
daa
and
mov
popf
scas
repnz
in
sub
jno
dec
into
xchg
sub
or
or
shll
xchg
outsl
mov
pop
push
lcall
dec
std
jo
pushl
mov
jp
xor
pop
pushf
pop
clc
mov
ss
addr16
pusha
push
jns
mov
sub
cwtl
ss
add
jne
sbbl
cmp
xchg
je
xlat
test
lahf
out
ret
sub
movsl
lods
pusha
xor
jns
jmp
pop
stos
xchg
jl
fisttpl
pop
mov
jmp
je
mov
outsl
mov
dec
mov
fdivs
cmp
mov
jns
sbb
lret
cwtl
pop
adcb
mov
insl
push
aaa
js
into
jmp
jbe
inc
jnp
jmp
adc
mov
pusha
scas
imul
ret
test
out
adc
jl
gs
jge
mov
out
sbb
pop
popf
sbb
out
sbb
cmpsb
js
stc
popf
and
dec
movsl
out
add
cmp
push
insl
mov
inc
push
sub
sahf
inc
loop
jbe
mov
and
enter
jge
cwtl
pushf
out
lods
repnz
adc
xchg
add
lea
mov
mov
add
sub
test
inc
cmp
rorb
add
dec
adc
jnp
pushf
cmp
jnp
xchg
add
sbb
jns
mov
into
data16
in
pop
lcall
jb
pop
pop
mov
jns
int3
cmp
sbbb
jl
jg
mov
inc
fimuls
dec
sub
out
stos
jp
jmp
roll
lahf
cwtl
mov
push
pop
jo
aam
jns
shlb
mul
xchg
jae
or
add
adc
inc
ret
dec
mov
adc
test
xchg
movsb
scas
mov
add
mov
mov
out
int3
shlb
jl
push
xor
fsts
inc
hlt
ret
out
mov
add
mov
pop
mov
add
insl
inc
xor
xlat
mov
xchg
subb
cmp
inc
adc
inc
sbbl
cmpsb
popa
dec
mov
std
je
pop
inc
scas
fsubrs
jecxz
loop
in
iret
jne,pn
test
jns
push
mov
dec
stos
pop
push
sbb
mov
fdivr
jbe
int
fnstsw
jmp
mov
xor
jmp
cmp
int
push
ret
lcall
sub
and
fnsave
js
lds
push
js
insl
mov
mov
movsb
mov
sub
les
xor
pop
or
movsb
pushf
arpl
sahf
jecxz
das
ss
pop
push
mov
xor
outsb
sbb
sahf
imul
jne
nop
and
idivl
lea
daa
xchg
mov
mov
inc
outsb
movsl
push
fs
mov
popa
outsl
repnz
stos
fdivl
into
inc
and
jecxz
lret
test
ss
out
xor
xchg
pop
inc
addr16
push
mov
test
mov
pusha
cmp
xchg
push
sbb
dec
adc
jge
inc
sbb
iret
or
mov
add
dec
push
xchg
inc
jle
xchg
es
add
pop
das
sarl
sahf
ds
add
pop
xor
dec
and
mov
nop
mov
mov
test
jmp
test
cmc
stos
enter
in
jno
jl
repnz
shrl
jae
mov
jne
mov
and
ljmp
fdivs
mov
cmpsl
lret
fiadds
out
lahf
loopne
jecxz
mov
sbb
jo
adc
xor
xchg
push
xor
mov
lock
imul
test
aam
pop
cld
mov
mov
pop
adc
iret
rorb
fiadds
push
pushf
jo
loopne
mov
stos
sub
push
jne
imull
xchg
jae
mov
jb
sub
aam
sbb
sbb
scas
leave
ja
push
popa
pop
mov
aam
int
cmp
dec
sub
xchg
pop
and
jp
xchg
sub
cmp
fiaddl
ss
das
insl
stos
int3
outsb
xchg
fldt
add
pop
lods
bound
rcr
or
loop
je
add
data16
push
imul
or
inc
xchg
mov
cmp
incb
in
aaa
pop
dec
mov
sbb
cmp
or
and
clc
outsb
mov
fisubrl
cli
enter
in
lcall
push
or
fcoml
add
call
or
ja
fsubrl
push
mov
mov
mov
cmp
pop
inc
and
jo
fdivrs
push
scas
ds
lock
fwait
stos
and
sbb
mov
bound
sub
cltd
adc
jmp
js,pn
out
aad
divb
inc
cmp
stos
inc
pop
cwtl
std
mov
popa
sub
cmpsl
repz
xchg
daa
inc
pop
lea
pop
jp
aas
xchg
dec
jne
cs
ss
sbb
push
movsb
inc
push
adc
ss
mov
mov
xor
cltd
es
xchg
dec
cmp
out
xchg
pop
icebp
mov
lock
or
jg
sar
sbb
inc
push
gs
hlt
aaa
and
and
or
push
mov
dec
mov
sti
jl
arpl
scas
mov
je
rcrl
aaa
xlat
add
loop
push
add
outsb
xchg
mov
pop
stos
test
pop
dec
outsl
mov
push
jbe
add
inc
adc
and
cmpsl
leave
das
punpckhbw
mov
cmp
jno
sub
mov
mov
cltd
in
push
push
pop
in
jns
xorb
idivb
add
jmp
add
inc
pop
lods
mov
dec
xchg
push
xchg
sti
mov
test
dec
xor
dec
xchg
xchg
sub
push
mov
aam
adc
lar
xor
jg
cmpsl
and
adc
dec
es
inc
dec
sarb
fnstcw
call
cmc
sbb
or
and
xor
dec
or
inc
loop
inc
jae
xchg
mov
fstl
lret
push
into
xor
mov
call
jno
mov
test
addr16
xchg
lcall
jne
mov
in
int
push
movsl
jle
xchg
jp
rcl
loopne
push
push
jecxz
popa
xor
sbb
cmp
fcmovu
out
int
clc
addr16
sub
push
ss
add
pop
mov
cmpsb
mov
jbe
cmp
sub
not
lret
or
adcl
xchg
lcall
outsl
mov
fs
push
dec
cli
lret
aad
push
or
mov
icebp
jmp
cmp
push
aaa
mov
xor
out
lea
iret
or
dec
imul
pop
scas
xor
in
cmpsl
addr16
lods
ror
insl
mov
jne
adc
or
mov
mov
call
xchg
or
dec
test
call
cld
sub
inc
adc
iret
call
mov
mov
imul
adc
movsb
pop
push
in
mov
xchg
out
cmp
dec
push
sbb
in
sub
stos
sub
sti
dec
rcrl
iret
cmpsb
mov
push
and
jge
outsl
js
push
fisubrs
push
push
sub
data16
xchg
stos
test
push
arpl
in
xchg
ja
dec
or
cmc
pop
pop
inc
test
adc
hlt
xchg
xor
jns
sbb
pushf
dec
repnz
adc
cmc
adc
jge
pop
dec
ret
adc
aas
fdiv
arpl
iret
fwait
jbe
or
lock
xchg
clc
inc
fadds
popf
testb
xchg
xchg
test
push
clc
jae
push
add
jo
pop
mov
cli
popa
sbb
inc
inc
mov
movl
or
sub
in
pusha
sub
cmp
icebp
test
out
pop
mov
mov
pop
push
insl
and
xor
xor
out
iret
loop
int
adc
push
and
rep
lret
ja
push
sarb
cmp
rclb
nop
imul
adc
push
icebp
out
ja
lock
xchg
dec
cld
fisubl
xorb
mov
cs
and
in
lret
pop
shll
xorb
push
cmp
jl
test
pop
mov
xchg
enter
popf
mov
out
mov
mov
sbb
mov
sti
sarl
out
xor
mov
scas
gs
pop
cmpsl
cmpsl
xor
add
adc
adc
arpl
and
jno
inc
xchg
jle
xchg
fnstcw
mov
sub
loope
mov
popa
mov
ljmp
cmp
iret
movsb
xor
cmpsl
pop
and
subb
mov
out
push
mov
rclb
das
loop
add
lcall
inc
dec
mov
push
ss
cmp
adc
imul
scas
jns
push
pop
add
mov
ror
sti
rclb
out
std
mov
xchg
ret
fbld
sbb
dec
adc
test
fs
xchg
ljmp
js
mov
jo
xor
fdivrl
xchg
jmp
test
dec
movsl
in
xor
fisubrl
pop
test
cmpsl
lcall
in
cld
std
movsb
test
push
mov
sahf
in
lea
out
cltd
mov
jb
cmp
xor
mov
mov
int
aas
ljmp
xor
mov
mov
dec
adc
and
mov
or
cli
adc
testl
ret
add
in
in
insb
pop
or
sbb
ss
inc
mov
add
xor
out
lcall
mov
pop
cmp
std
pop
test
std
adc
jp
fcoml
aas
arpl
jmp
sbb
cltd
ret
je
cmpb
mov
in
push
xchg
lret
xchg
lds
adc
push
and
jae
mov
pop
xchg
xchg
inc
push
pop
add
aaa
or
ljmp
loope
push
inc
les
imull
arpl
mov
daa
push
stc
outsb
and
jl
xlat
xlat
pusha
ljmp
or
and
jno
xor
out
xor
jecxz
divb
imul
mov
ja
leave
cmp
pop
icebp
inc
dec
pop
adc
ja
xor
and
mov
loopne
sub
and
push
push
incl
popl
push
inc
scas
repnz
sbb
outsb
sbb
loopne
adc
jg
decb
ds
movsl
cmp
bound
out
cs
pop
push
mov
test
xchg
push
je
inc
pop
sub
ror
sbb
xchg
int
incb
ror
xchg
std
movsl
out
mov
dec
mov
int3
jns
adc
outsl
inc
data16
adc
dec
lcall
push
jg
outsb
pop
pop
push
and
xchg
lret
in
mov
lret
and
sti
pop
cmpsb
pmaxsw
or
inc
int
ljmp
xor
xchg
mov
or
js
js
cwtl
adc
push
scas
add
xchg
mov
xchg
inc
out
daa
jle
cmp
mov
or
shl
mov
or
movsb
int3
lret
lods
dec
cs
sub
push
mov
lret
fildl
push
andb
fstpl
adc
fldcw
cmc
xchg
test
xchg
mov
or
mov
sbb
es
sub
mov
xor
pop
mov
or
cwtl
test
add
stos
push
cli
lahf
sub
mov
popa
xor
push
add
ffreep
xchg
mov
aam
out
testb
out
or
dec
lods
mov
cmpsl
xlat
sbb
jae
icebp
in
in
xchg
test
xchg
aad
imul
cmp
sub
xchg
push
or
mov
adc
pop
xlat
sbb
fcomp
scas
mov
das
mov
ljmp
xchg
repz
jmp
push
pop
push
adc
push
mov
xlat
pop
arpl
int
xchg
mov
les
push
into
sub
mov
or
scas
pop
mov
xchg
jae
in
loope
test
sub
lret
outsb
repz
lods
into
ljmp
cmpsl
aas
inc
cmpsb
sbb
pop
test
mov
sub
xchg
xchg
push
lcall
out
rcll
aaa
lock
and
aas
mov
jb
mov
lahf
add
int3
mov
cmp
stos
nop
bound
cltd
inc
pop
adc
in
add
dec
xchg
jp
fidivrl
rolb
jne
adc
repz
jb
hlt
test
mov
mov
stos
sub
aam
lahf
push
push
push
xchg
pop
cwtl
repz
fwait
sahf
jns
repz
mov
mov
repnz
sbb
adc
mov
cmpsb
pop
and
call
lods
mov
jg
push
jno
dec
decl
loopne
mov
jmp
xchg
inc
xchg
lret
lods
or
sbb
sahf
push
aam
mov
arpl
dec
cs
add
adc
insl
fnstsw
faddl
out
mov
test
bound
ljmp
inc
aam
mov
jns
sbb
mov
mov
jmp
fistps
cmp
insb
or
aad
xchg
mov
aas
dec
stc
jge
mov
stos
mov
or
pop
push
push
mov
fs
xchg
fisttpll
jg
lret
insl
lea
inc
stos
xor
iret
push
fwait
push
es
mov
sbb
adc
data16
or
cmpl
push
push
xchg
mov
push
xor
add
mov
out
push
popf
mov
sbb
mov
push
aad
out
test
not
ljmp
aas
into
pop
mov
mov
jmp
sahf
data16
sub
dec
pushf
aaa
mov
cmc
pop
dec
and
pop
mov
lods
in
mov
fnstenv
inc
sub
push
and
mov
jae
adc
cmp
imulb
dec
js
daa
jno
inc
nop
jle
mov
or
cwtl
mov
fs
sub
or
lcall
mov
int3
jge
lods
adc
add
das
dec
fcmovb
cmp
and
add
test
lods
pop
jmp
sub
shll
pop
in
sub
push
xchg
insl
cmpsb
push
popf
xchg
mov
mov
cmp
xchg
xchg
lea
or
xor
fisttpl
and
stos
fadd
lods
push
xor
jg
aam
xchg
dec
push
cmc
inc
adc
xchg
dec
and
idivl
dec
xor
push
in
add
fidivrs
xchg
cmp
lea
inc
setge
roll
mov
stos
hlt
xor
popa
fmull
pop
aam
push
dec
mov
insl
jge
insb
lcall
xchg
mov
sahf
in
test
aam
xchg
add
int
dec
into
dec
xchg
sub
lds
mov
inc
jne
repnz
int
dec
mov
icebp
sub
stos
cmp
mov
xor
sarb
inc
scas
or
lea
mov
shrl
test
enter
push
sbb
es
jne
ret
test
and
scas
xorb
inc
in
sti
loopne
push
and
cmp
in
add
lds
hlt
inc
pop
jp
ds
xchg
dec
and
fdivl
cmpsl
adc
inc
mov
jge
or
lahf
into
xor
lods
out
mov
xchg
adc
or
mov
xor
mov
pop
push
in
or
add
out
mov
sbb
scas
mov
or
add
jmp
add
sbb
mov
cmpsl
add
stc
jns
out
mov
rolb
mov
iret
pop
call
mov
dec
rcrb
sub
cmp
push
mov
lds
fstpt
pushl
adc
cld
mov
enter
push
bound
fists
cmovnp
repnz
sub
pop
dec
lret
sbb
ror
mov
lods
or
psraw
andb
and
cmpsl
leave
xor
mov
cwtl
lods
push
xor
repz
cli
push
jbe
jb
jle
xchg
pop
xchg
pop
lods
fwait
sub
aas
or
and
jg,pn
adc
and
dec
mov
push
inc
adc
in
cmp
call
cmp
mov
fcom
mov
sbb
loope
lea
add
push
call
push
cld
scas
repnz
outsb
loopne
lret
sub
iret
inc
jo
sbb
stc
xchg
jne
sti
cwtl
dec
xor
xchg
push
xchg
xor
sub
push
sub
or
lret
add
daa
loop
orl
je
or
fisttpl
push
outsb
shlb
push
xor
ret
pop
shll
pop
sub
xor
cmpsb
xchg
sbb
lock
dec
pop
test
jl
loope
nop
inc
mov
mov
imul
repnz
out
push
ret
out
xchg
cmp
stc
inc
clc
mov
mov
repnz
test
jb
sbb
mov
out
shlb
std
adc
jmp
mov
nop
push
ret
mov
xchg
dec
fsubrl
insl
push
mov
or
add
push
mov
roll
sub
imul
mov
xchg
test
sub
sbb
sub
mov
fists
mov
jmp
mov
dec
das
jp
cltd
push
int
push
adc
xchg
outsl
xor
cmp
dec
mov
mov
call
sub
loop
insb
mov
jl
sub
mov
adc
fmuls
rcrb
inc
adc
sbb
jnp
aas
repz
or
push
add
adc
jle
sub
push
pop
push
xor
push
sub
jbe
inc
dec
xchg
adcb
jp
fs
sub
frstor
fs
jbe
jg
bound
iret
call
push
pop
adc
mov
ficoms
sti
aas
inc
xchg
mov
adc
jmp
cmpsb
mov
mov
or
out
sbb
shrb
mov
movsb
sbb
mov
mov
cmp
das
mov
call
sbb
lret
insb
insb
mov
push
testl
cld
inc
mov
xchg
adc
data16
cmc
sub
adc
faddl
out
sbb
test
data16
ret
bound
leave
mul
add
xor
adc
mov
lods
into
dec
jmp
inc
nop
pop
push
jp
adc
rorl
nop
cmp
push
scas
std
mov
jbe
mov
cltd
nop
imul
icebp
inc
lea
gs
dec
mov
xor
lods
mov
nop
pop
rolb
adcl
push
pop
cli
or
xor
pushw
in
adc
pop
sub
sbbl
pop
pop
push
mov
pop
sub
int
fwait
pushf
stos
lret
loopne
shll
in
jne
lcall
gs
mov
cmp
mov
cmp
frstor
jns
movsb
or
fidivs
idivb
mov
repz
adcl
aam
ds
push
xchg
inc
rolb
das
outsl
int3
xchg
inc
mov
je
mov
shlb
jne
mov
sub
mov
adc
mov
cmpsb
sarb
xchg
fs
mov
inc
jo
ja
and
js
push
cld
shl
push
cmp
pusha
lock
lahf
out
cmp
mov
sub
lahf
cmp
jo
testb
inc
es
test
xor
jno
mov
sub
and
mov
dec
icebp
shrl
and
xor
and
xchg
jns
xchg
inc
sbb
pop
out
xchg
mov
jns
adc
ret
or
adc
push
inc
push
sub
test
cmpsb
lahf
cmp
lcall
repz
mov
imul
clc
sti
ja
loope
push
idivb
repz
das
cs
or
jecxz
stos
push
push
or
push
mov
mov
xchg
push
lock
bound
das
lret
xchg
hlt
cld
sub
shrl
xchg
push
inc
fsubs
sbb
dec
mov
sbb
dec
cli
adc
cmpsl
imull
js
mov
lcall
jle
push
std
dec
out
test
adc
jecxz
adc
popa
mov
es
addr16
arpl
jle
std
mov
int3
add
lods
mov
ret
add
je
xor
add
xlat
pop
jbe
pop
mov
adc
pop
sbb
push
xchg
bound
mov
pop
sub
cmpsl
lods
and
std
xor
fwait
icebp
sbb
xchg
out
fcmovu
clc
sbb
fistl
sbb
and
repnz
sahf
lods
sbbl
xchg
cmp
in
call
jg
ds
scas
mov
mov
cmp
imul
es
int
in
faddl
sbb
mul
add
xchg
sub
icebp
xor
pop
xlat
xor
ficoml
pusha
jmp
call
adc
hlt
mov
xor
xor
mov
clc
inc
int
lods
int
inc
xor
movsb
int
stc
xor
mov
dec
add
inc
sub
mov
cmp
pop
jno
adc
push
repnz
shlb
loope
push
je
jle,pn
jo
imul
mov
sbb
addr16
mov
jge
dec
and
fidivl
shrl
mov
inc
ret
sahf
inc
mov
dec
mov
push
mov
lret
fwait
add
mov
stc
fdivs
inc
xchg
pop
in
mov
das
push
fdivp
test
aad
xchg
sbb
lcall
hlt
rcr
mov
mov
jmp
movsl
adc
sub
cmp
adc
lahf
push
aam
shrb
xchg
xchg
cmp
lods
mov
xor
das
xchg
enter
inc
mov
aas
movsb
test
pop
pop
mov
jp
cmp
cmpb
outsl
lret
dec
mov
sub
lea
push
mov
fistpl
xorl
repnz
adc
mov
js
xorl
pop
cmpsl
fists
adc
in
roll
dec
push
xor
fidivs
rcrl
jne
out
sub
test
inc
dec
pop
mov
adc
lahf
imul
movsl
addb
inc
and
cwtl
pop
jp
sbb
das
inc
pop
pop
dec
test
jle
add
popf
push
aad
mov
stos
and
mov
leave
negl
add
inc
pop
push
pop
aaa
lret
adc
xor
sub
cmpsb
pop
dec
test
fwait
jg
push
mov
stc
dec
ud2
test
push
fldenv
clc
cli
enter
stos
flds
stc
roll
sbb
imul
test
aas
sub
loopne
sbb
imul
lock
aad
loope
lcall
jp
int
jl
dec
ja
sub
sub
adc
mov
push
arpl
xlat
mov
xchg
push
mov
in
and
jge
mov
jmp
and
jmp
enter
push
push
cmpsl
fwait
mov
sbb
mov
je
and
cmp
inc
xchg
lret
out
pop
jg
pop
xchg
iret
ja
outsb
mov
dec
imul
hlt
fnstcw
mulb
push
push
xchg
movsl
adc
ret
lds
inc
ret
sbb
aam
cmp
in
call
loope
pusha
loop
aad
imul
test
arpl
lea
push
push
add
lods
push
sub
out
cmp
or
or
push
mov
mov
iret
psllw
fucomip
aas
popf
sbb
sub
gs
mov
mov
push
in
lds
addb
adc
mov
add
or
test
push
inc
ja
push
sub
and
scas
in
loope
xor
fstpl
out
enter
repz
cmp
stc
dec
inc
lret
jg
test
add
or
add
or
lea
rdtsc
mov
adc
popf
notl
outsl
adc
imul
rorb
cmp
mov
push
fwait
bnd
out
out
inc
pop
outsb
inc
inc
sbb
cmp
adc
cwtd
mov
pop
sbb
dec
or
push
push
out
add
aaa
pop
add
cmp
mov
xor
bound
add
mov
pop
push
aas
push
movsl
inc
dec
mov
lret
inc
dec
add
xchg
inc
decb
sbb
mov
lds
and
pushf
stos
cld
and
mov
inc
cmp
dec
cmpsb
mov
out
fildl
popf
xor
mov
insb
int3
sarb
pop
clc
inc
and
sbb
and
push
push
bnd
cli
das
gs
xor
daa
not
xor
xor
push
scas
push
mov
inc
lods
add
addr16
sbb
inc
not
in
ljmp
stos
cmp
and
mov
ds
pushf
pop
sub
loope
cld
mov
lods
rcll
dec
ljmp
js
add
movsb
icebp
mov
pop
pop
xchg
mov
ret
inc
sub
mov
mov
cmp
pop
pop
xchg
sti
push
nop
push
xchg
mov
mov
call
push
jne
jle
in
stos
cmc
aaa
jns
mov
push
jae
loope
or
mov
mov
inc
dec
icebp
ret
inc
es
dec
inc
cmp
popa
mov
sahf
js
test
ljmp
and
dec
int3
or
jno
jbe
outsl
imul
xor
imul
dec
cltd
xor
mov
das
clc
rol
sub
xchg
in
incl
cmp
ljmp
hlt
lahf
rcrb
arpl
cmpxchg8b
fcmovnbe
xor
and
clc
bound
mov
xchg
divb
fcompl
lods
jg
in
adc
jmp
and
not
inc
lods
mov
outsl
popf
adc
mov
nop
testb
adc
movsl
sbb
fimuls
int3
mov
mov
cld
fildll
sbb
leave
push
fdivs
out
sbb
mov
cmp
ss
mov
popf
into
and
add
not
adc
nop
inc
leave
das
pop
push
xlat
std
sbbl
push
scas
push
lea
aaa
aad
sbb
insl
frstor
dec
aas
fsub
lcall
cmp
and
bound
push
push
xchg
scas
les
sub
inc
or
in
and
imul
xchg
je
jb
adcb
ret
cltd
mov
mov
inc
repz
jle
das
fbld
mov
push
xor
sbb
inc
xor
ja
loopne
dec
xchg
sbb
orb
pop
pop
lcall
aas
outsl
ljmp
je
cmp
cmc
mov
xor
cmp
xor
aad
add
xchg
add
aad
push
sbb
orl
xchg
out
and
jmp
loope
fsubp
or
xlat
or
testl
iret
jmp
insl
add
sarl
repz
in
or
mov
fs
addb
stc
aas
sub
cmc
into
mov
mov
cmpsb
and
jo
ret
jb
ret
add
aam
cltd
notl
cmpsl
enter
lods
and
sub
popa
roll
mov
push
cmpsb
enter
inc
mov
jmp
mov
insl
std
push
ss
and
cmp
cmp
popf
ficoms
popa
call
push
in
mov
sub
das
jnp
in
jg
imulb
push
mov
hlt
jl
dec
mov
dec
lcall
fmull
cmp
push
push
and
cs
jno
xchg
jmp
aad
inc
test
jge
addr16
xrelease
xchg
mov
pop
push
adc
in
ret
or
mov
sbb
jb
add
loop
inc
out
cmpsl
pop
cmpsl
addr16
imul
pop
aam
ret
jg
jne
and
sub
cs
xchg
add
mov
and
jne
jnp
sahf
cmp
push
mov
cmp
into
call
movsl
in
jo
filds
add
inc
test
fmulp
out
cmp
jg
imul
jg
mov
sub
pop
fs
xchg
rolb
xor
sbb
mov
mov
sub
push
mov
mov
pushf
fsubs
in
je
push
jns
xchg
arpl
call
test
pop
jb
shr
adc
push
roll
mov
sahf
and
add
imull
mov
push
mov
jo
faddp
in
scas
insb
cltd
pop
popa
clc
pop
les
es
xor
fmull
aas
sub
pop
ss
dec
je
out
lds
fwait
ja
sub
or
inc
cmp
daa
xchg
and
push
xchg
xor
out
cltd
xor
pop
test
in
jmp
cli
mov
or
test
sahf
mov
fs
mov
popf
inc
fucompp
js
jge
mov
dec
xor
mov
push
push
adc
fwait
in
insb
test
sahf
mov
inc
inc
dec
mov
mov
leave
jmp
pop
popa
xchg
add
adcl
lods
xor
test
lds
push
push
pushf
popa
mov
push
push
mov
addr16
jno
clc
and
arpl
adc
xor
jge
dec
std
mov
xchg
inc
or
sbb
sbb
mov
test
addr16
repz
popf
xorl
or
decb
pop
addl
aaa
xchg
push
sub
sbb
repnz
call
mov
into
fwait
cli
xchg
xor
dec
dec
jl
jge
jno
cmp
mov
add
push
dec
addr16
pop
jge
and
iret
xchg
fadd
and
and
ret
mov
sub
and
jmp
xchg
adc
mov
and
adc
xor
adc
popa
cmc
insb
repz
xor
push
adc
in
mov
cmp
mov
xchg
pop
or
xchg
pop
cltd
mov
popa
call
mov
adc
in
xchg
pop
or
dec
flds
adc
imul
in
push
cmp
pusha
push
icebp
ja
jge
adc
adc
iret
pusha
add
xor
add
jae
into
push
rcrb
or
cli
pop
lods
inc
iret
and
xchg
mov
popa
push
test
sarb
lret
nop
inc
push
xchg
or
ss
lea
mov
scas
mov
dec
mov
or
scas
dec
dec
push
mov
test
mov
push
fs
cs
sarl
lret
add
test
sti
dec
inc
lret
jns
jp
mov
add
fimull
cmpl
mov
cmp
cmpsl
add
jmp
inc
jle
push
jecxz
add
mul
add
insl
shr
fcompl
negb
mov
or
cmpl
add
adc
push
xchg
and
inc
dec
cs
daa
inc
or
mov
adc
jbe
int3
push
xchg
imul
sbb
hlt
mov
std
dec
das
fwait
test
in
add
pusha
daa
pop
xor
ss
mov
lret
mov
int3
mov
xor
xor
push
inc
jg
sbb
fld
sbb
and
pop
ret
std
and
pop
jg
cmp
mov
pop
shll
mov
pop
jmp
pop
popf
imul
cmpsb
mov
je
lret
ret
push
cmpsl
arpl
ret
sub
mov
ss
jge
or
add
ljmp
push
cmpsb
mov
fwait
inc
aaa
lods
cmpsl
dec
push
pop
push
and
mov
pop
and
or
lock
cs
cmpsb
lcall
mov
adc
lods
lock
sub
loope
mov
into
jl
popa
add
insl
xchg
xor
lahf
je
incl
dec
test
cmp
jecxz
mov
dec
pop
adc
mov
jne
jl
insl
sahf
lcall
out
xorl
jge
testb
std
call
sbb
inc
lods
dec
les
cbtw
or
out
jns
xor
xor
adc
out
jb
out
lods
stos
aaa
and
mov
jg
mov
xor
jmp
das
and
dec
das
cltd
mov
and
fmuls
cmpsl
cmpl
pop
pop
aas
out
addr16
sbb
movsb
xor
cmc
fsubl
push
or
dec
scas
or
and
ss
call
lods
inc
jge
aad
popa
xchg
or
clc
call
xor
dec
xor
fisubs
insb
cli
insb
fcompl
jbe
lock
sub
sub
dec
adc
push
xchg
mov
data16
jae
xor
inc
daa
fs
mov
mov
ficoml
inc
scas
test
outsl
or
sahf
mov
pop
sbb
icebp
fs
loope
jo
cmp
test
xchg
sahf
push
fdivr
cmp
push
ljmp
addr16
ljmp
idivb
adc
mov
push
into
nop
pop
push
out
inc
sub
push
xchg
inc
pop
pop
jo
cmovl
dec
adc
popfw
int
dec
xchg
call
jne
xchg
xchg
adc
push
cmp
add
jno
xor
jo
xchg
insl
or
mov
stos
pop
ja
mov
fnstenv
out
cmp
cli
jnp
push
add
mov
pop
mov
aas
adcl
push
inc
sbb
adc
cmp
jg
cld
sub
dec
nop
mov
adc
and
filds
ret
lret
mov
mov
in
push
pop
xchg
pop
sub
dec
out
and
movsl
lret
movsl
popf
ficompl
xchg
aad
pop
mov
fcom
decl
lea
subl
rcrl
loope
nop
push
rorl
add
xor
mov
cwtl
cmpsb
sub
pop
lods
cwtl
jne
adc
inc
mov
adc
gs
outsl
dec
mov
sahf
cwtl
ljmp
aad
int
es
xchg
dec
cmpl
jg
aas
adc
aad
xor
or
and
popf
mov
adc
mov
in
sbb
cmp
push
jns
xor
paddw
and
sti
pop
sahf
sbb
mov
jecxz
rep
dec
mov
cmc
into
loope
mov
and
ja
dec
and
loop
cltd
pusha
cli
pop
fimuls
das
fnstcw
dec
and
ljmp
fcmovbe
loope
jle
add
shll
daa
out
mov
loopne
stc
gs
sub
vpsubusw
xchg
popa
jl
fucomi
jnp
xor
cltd
lret
outsl
pop
jb
and
adc
pop
fcomip
inc
lahf
jge
inc
push
mov
in
inc
push
dec
cs
enter
imul
test
mov
es
test
andb
and
pop
js
inc
ret
push
or
cli
mov
lfs
or
dec
sbbb
ljmp
imul
xchg
bound
ss
lds
xorb
loopne
stos
mov
pop
into
xchg
and
or
xlat
add
insb
jecxz
repnz
jecxz
stc
lahf
jg
sbb
mov
rorl
in
jle
ds
std
fiadds
sub
push
xor
decl
jnp
and
or
dec
adc
xchg
stc
in
jb
sbbl
repnz
into
aas
dec
imul
jbe
loopne
test
stos
jle
jne
aad
repnz
mov
das
pop
inc
push
fmuls
fsubr
sub
xchg
movsb
ljmp
sub
repnz
enter
add
and
inc
xor
adc
dec
in
icebp
mov
movsb
ljmp
xchg
ds
jl
push
add
dec
bts
xor
daa
sarl
cmpsl
push
lret
pushf
xchg
loope
add
test
push
push
adc
lea
add
sub
xchg
mov
inc
scas
mov
pop
sar
push
out
dec
pop
xchg
stos
movsl
and
flds
jno
lea
sub
in
rclb
xchg
out
jl
aad
pop
mov
cmp
les
xchg
test
jmp
dec
sub
inc
mov
adc
push
sub
ljmp
pop
loopne
loop
inc
mov
jp
xchg
std
fsub
insl
insl
sub
jge
scas
xor
loop
aaa
lods
pushf
pop
outsb
inc
mov
push
mov
stos
ret
rcl
ss
dec
xlat
call
dec
and
test
pop
mov
mov
jnp
xlat
test
stc
fbld
fdivs
outsb
leave
or
add
cmpsl
adc
pusha
mov
andl
xor
mov
xchg
addr16
test
aas
ja
push
in
inc
lret
mov
es
popa
sbb
sahf
sbb
add
mov
fmuls
dec
divl
jg
push
or
mov
mov
ret
xchg
mov
out
adc
sarb
int3
addl
sub
jno
pop
cmp
sbb
mov
xchg
pop
jp
xor
scas
mov
in
dec
or
pop
xchg
addr16
pop
addl
pop
mov
cmc
es
xchg
mov
cmpsl
iret
xchg
nop
std
ja
sub
out
pop
adc
nop
shrb
xrelease
outsl
ds
sbb
cli
inc
mov
sub
dec
fcmovnu
cli
out
xchg
into
mov
push
in
rcrb
sub
outsl
lea
aam
jecxz
popf
jg
adc
test
iret
stos
roll
movsl
xor
sbb
push
and
pop
cmc
loope
les
int3
dec
push
cmpsl
mov
push
cmp
fmull
iret
jbe
in
inc
adc
pop
add
xchg
mull
icebp
pop
stos
stc
push
lods
sub
js
and
pop
jnp
cwtl
xchg
loop
subl
dec
xor
js
mov
sub
jns
and
insl
fmulp
andb
mov
inc
sub
sub
jecxz
mov
mov
mov
mov
insb
es
arpl
sub
mov
add
jmp
mov
sbb
testl
les
fcompl
ficomps
push
in
xor
dec
cmp
test
int
jns
pop
jnp
call
xchg
repnz
scas
shll
out
ja
cltd
pop
push
popa
push
repnz
movsl
pusha
sub
aaa
inc
push
icebp
mov
iret
push
insl
incl
mov
daa
call
ja
cmc
jne
jge
iret
add
mov
add
je
sarl
insl
outsl
rclb
or
les
adc
test
mov
repz
data16
ficomps
cmp
or
movsl
cwtl
subb
aaa
push
push
ljmp
out
popa
push
push
fistpl
nop
cmpl
ljmp
mov
jmp
stos
fmull
ljmp
sbb
imull
pop
stos
xchg
scas
add
fwait
inc
xorl
popf
xchg
inc
hlt
lock
pop
sub
jg
inc
std
pop
mov
mov
daa
in
adc
inc
pop
cld
push
insb
pop
jnp
cld
mov
movl
and
loope
insb
cmp
in
push
adc
repz
and
pcmpgtb
js
leave
mov
inc
push
in
or
fsubr
dec
cmp
adc
pop
adc
jns
add
rcrb
insb
iret
add
mov
loope
in
xchg
rcll
mov
mov
jmp
insb
push
pop
mov
pop
xchg
mov
or
mov
mov
je
fcmovnbe
leave
movsb
popa
inc
cmpsl
or
ja
bound
mov
jp
dec
test
dec
fisttps
sbb
stos
mov
hlt
in
das
lahf
push
mov
push
mov
push
divb
int
popf
push
lods
pop
pop
ja
mov
jae
lcall
xchg
repz
mov
add
or
add
mov
mov
fdivrl
ds
inc
not
add
pop
pop
shll
mov
mov
xlat
dec
pop
and
mov
cmp
addr16
pop
xchg
lods
outsl
gs
mov
xor
rol
jecxz
lcall
jle
iret
sbb
push
out
jge
jo
loop
mov
outsb
add
mov
push
sahf
xchg
or
push
mov
mov
mov
add
xchg
test
insb
push
mov
xor
cmp
insb
aas
stos
inc
stc
mov
fstps
jo
push
ret
scas
stc
pop
adc
aam
inc
mov
push
daa
xor
in
test
xor
lea
popf
pop
mov
inc
lods
mov
fcoms
lock
xor
in
fldenv
or
fstpt
clc
out
inc
add
sub
hlt
les
sahf
enter
mov
mov
or
and
and
jno
lcall
adc
push
ret
sbb
dec
je
js,pt
es
clc
dec
mov
dec
test
popl
popl
mov
push
fcmovnu
mov
stos
lods
xchg
jbe
lret
xchg
dec
add
or
inc
jg
test
mov
sub
or
scas
movb
test
imul
pop
test
test
ficomps
shlb
jne
sub
movsb
xchg
ss
fs
pushf
push
jp
fmull
xor
jns
nop
or
shl
or
and
jecxz
notl
rorl
mov
aaa
adc
aas
bound
fdivrs
mov
push
in
cltd
mov
push
out
aam
das
push
mov
repnz
lea
notb
mov
mov
iret
xor
xor
sbb
and
out
movsb
pop
pop
xchg
loope
cld
and
push
inc
sbb
out
scas
inc
and
hlt
subb
enter
push
fiaddl
idiv
dec
sbb
mov
xchg
ret
lock
imul
and
out
jae
movsb
inc
mov
pop
adc
pusha
mov
gs
aaa
sub
mov
and
in
rolb
sbb
jns
inc
outsl
js
call
aaa
pop
arpl
sahf
sarb
daa
push
and
ret
mov
inc
shrl
inc
or
mov
push
pop
dec
jg
out
subl
stc
in
or
mov
jno
cmp
sub
aam
inc
into
xchg
das
in
jle
mov
pop
nop
mov
ret
out
shlb
scas
or
pushf
dec
rolb
int
js
xlat
cld
xchg
xchg
movsl
or
pop
lods
fldenv
fiaddl
inc
test
push
inc
in
std
out
xchg
push
fwait
or
jp
jmp
fisttpll
insl
sbb
in
sahf
or
stc
jo
fs
xchg
jbe
stos
sub
clc
cli
pushf
mov
pop
cltd
nop
stos
lock
stos
sub
mov
inc
out
sbb
imul
je
cmp
out
or
je
decb
mov
sbb
mov
jge
and
adc
jbe
lock
fidivrs
inc
jle
jnp
out
push
push
bound
sti
ror
ret
inc
ljmp
xor
aad
push
sbb
pusha
fs
popf
cs
imul
mov
iret
inc
cmp
jmp
pop
fistpl
pop
sbb
cmp
imul
xchg
add
push
sbb
repz
and
inc
jl
pop
add
mov
arpl
mov
push
aad
iret
inc
sbb
cmp
push
lcall
sbb
faddl
sub
insl
or
xchg
stc
nop
test
mov
xorb
cmc
push
push
mov
jne
cmp
or
andl
push
insl
xchg
cmp
aaa
mov
push
fsts
inc
notl
add
fwait
mov
pop
aad
fiaddl
adc
sub
and
add
fwait
dec
imul
out
shrb
ds
sbb
das
mov
cmp
test
das
inc
jecxz
lahf
jecxz
pop
inc
xor
out
ret
push
fimull
pop
inc
outsb
or
into
push
nop
pop
xchg
pop
dec
adc
outsb
and
jnp
cs
mov
fbstp
mov
mov
jle
in
mov
and
iret
iret
mov
and
xchg
dec
and
adc
stc
fadd
mov
xor
sbb
dec
xor
xchg
cmp
movsb
cpuid
adc
mov
or
jle
stos
pusha
je
lods
mov
mov
aad
mov
mov
test
shll
lcall
gs
pop
cld
or
das
arpl
sbb
cmc
das
and
ss
mov
daa
push
pusha
fsub
lods
movsl
pop
aad
fisubrs
dec
adc
pop
scas
sub
icebp
shl
in
pop
dec
daa
testl
sub
xlat
mulb
lret
mov
ret
fistpll
fdivrp
cld
add
faddl
movsl
push
inc
fs
push
mov
cmpsl
cmp
in
pop
imul
orl
ss
cmp
stos
or
mov
jmp
sbb
mov
push
jbe
cmp
sub
inc
ret
and
add
gs
inc
nop
lea
loopne
leave
leave
sub
jge
push
inc
fidivrl
hlt
and
out
inc
test
ds
and
fmull
sub
out
pop
jp
cltd
leave
sbb
ljmp
bound
xlat
mov
test
or
push
sub
mov
mov
adc
aad
or
xchg
in
int3
sbb
test
daa
or
mov
rorl
sub
dec
lret
mov
jo
mov
in
mov
in
repz
xchg
push
mov
outsl
loop
sbb
or
pop
cmp
xor
xchg
cmpsb
test
mov
xchg
cmp
sbb
or
pop
fsubl
jecxz
jmp
xchg
adc
jns
sahf
xor
inc
xor
stos
icebp
adc
test
stc
or
lret
insb
mov
aad
pop
cmp
jb
or
push
sbb
sbb
test
inc
shrl
jmp
insb
shll
ror
push
ds
int
adc
aaa
subb
rorb
fsubrs
int
cmp
cwtl
sub
int
mov
ljmp
cs
out
cld
pop
jp
test
mov
pop
inc
add
or
or
pop
dec
les
mov
add
add
sahf
push
fwait
stos
inc
js
icebp
aas
loope
dec
mov
movsl
sbb
mov
mov
mov
xor
cmpsl
cmp
xchg
js
iret
scas
test
fdivl
cmp
es
and
pop
out
and
sbb
add
jecxz
sbb
mov
xchg
add
mov
repz
stos
insl
dec
push
mov
out
fdiv
int
dec
add
jbe
in
pop
mov
addl
jo
xorb
shll
jb
push
dec
dec
mov
push
mov
sbbl
movsb
int3
popa
aam
lock
mov
out
pushf
xor
cmp
hlt
cmp
sbb
mov
inc
sub
fwait
mov
daa
lea
pop
push
dec
in
sbb
or
test
mov
sbbb
and
xor
mov
xchg
mov
ds
jne
xchg
and
sbb
pusha
inc
fbstp
ffree
add
sbb
cmp
pop
push
sahf
pop
fcmovnu
xchg
push
adc
popf
cli
mov
mov
sub
push
ja
xchg
or
jb
adc
cmpsb
orl
sub
cmp
push
xchg
sub
and
mov
xlat
adc
sub
push
ss
cmp
mov
or
mov
inc
adc
cwtl
mov
or
and
adc
push
cmp
push
cmp
mov
mov
pop
or
dec
or
clc
daa
int
cs
jo
xlat
or
hlt
lret
nop
aas
mov
pop
add
dec
cmpsb
inc
icebp
loop
mov
mov
mov
mov
leave
pop
insb
lock
sbb
sbb
cmp
test
mov
enter
sub
lret
hlt
mov
jl
insb
lcall
jns
xor
aad
xor
sbb
pop
mov
mov
orl
add
mov
mov
inc
sub
add
iret
inc
out
xor
jle
ljmp
ficomps
jbe
cmp
adc
std
xor
xchg
movsl
or
mov
cmp
stos
or
cmp
incb
pop
jge
xor
shll
mov
inc
std
cmpl
or
stc
outsl
sbb
insl
sbb
push
ljmp
scas
xor
loopne
xor
dec
bound
push
clc
mov
ljmp
jo
popf
insl
xchg
dec
aas
sahf
mov
jb
sarb
pop
mov
aaa
in
mov
inc
adc
imul
leave
push
cltd
fadd
rcr
and
sub
mov
outsl
cmpsb
loope
mov
adc
mov
lcall
mov
insb
insl
push
movsl
imul
subb
sahf
dec
sti
ret
add
icebp
jecxz
ror
insl
cmc
mov
inc
test
dec
jmp
fwait
icebp
add
jbe
je
or
lds
cmp
mov
add
shlb
xor
and
ds
cli
ret
sbbb
stos
mov
cwtl
popf
push
xor
loopne
jo
pop
pop
cli
adc
sarl
push
jb
in
out
pop
push
addr16
cmp
dec
add
inc
push
stc
sti
std
fwait
inc
in
mov
pop
adc
ljmp
sbb
mov
icebp
add
imul
xor
mov
mov
mov
sar
mov
jno
cmp
mov
movsb
pop
adc
ds
jmp
les
mov
repz
ret
push
push
out
adcb
popf
loop
cmc
aas
outsb
repz
imul
outsl
into
pop
test
jge
xchg
pusha
push
stos
mov
pop
in
mov
in
out
mov
cs
push
sbb
negl
daa
pop
ret
into
xchg
or
or
push
cltd
xor
mov
loop
dec
jle,pt
adc
subl
fdivrs
jecxz
dec
xchg
subl
fucomp
mov
in
outsb
mov
ret
push
mov
orb
into
xchg
pop
xor
xchg
push
fisttps
push
cld
imul
xor
inc
cmpsb
cmp
push
aaa
xor
fistpll
xor
xchg
popa
pusha
sbb
test
out
sahf
mov
jne
mov
repz
pop
cmp
fidivrl
add
jmp
testb
movsl
shufps
jo
daa
dec
sahf
sahf
xchg
jae
lret
pop
add
pushf
and
pushf
int
cwtl
push
inc
xor
push
fidivs
xor
xlat
or
push
dec
jo
rorl
fwait
sub
lea
jno
aaa
and
sarb
inc
jbe
dec
fadds
cmp
mov
mov
jg
cs
in
aaa
pop
pusha
mov
outsl
lret
aad
insb
xor
cmc
cmpsb
nop
or
hlt
mov
push
shll
and
gs
sahf
xchg
clc
mov
test
and
dec
push
aaa
insl
les
cmp
shll
xorb
enter
pop
lods
loop
sbb
pop
fdivrl
arpl
pop
lcall
mov
jae
mov
and
mov
dec
popa
imul
mov
repnz
xchg
mov
xchg
rcl
mov
jmp
scas
aas
out
cwtl
or
adc
jne
adc
cltd
jnp
fisttps
jge
inc
pusha
lret
xchg
xor
push
pop
into
mov
add
adc
cmp
jmp
mov
inc
lds
mov
pop
add
xor
push
das
pop
mov
xlat
enter
mov
imul
aad
cmp
out
cmp
and
sbbb
fwait
adc
scas
mov
fldl
mov
mov
dec
lcall
jne
lahf
fstl
push
shll
jb
jne
dec
cmpsb
pop
scas
nop
mov
mov
in
inc
xchg
cmc
sbb
or
mov
mov
inc
sub
clc
cld
xchg
cwtl
mov
pop
ljmp
cmpsb
pop
push
insb
js
jge
stos
addr16
sti
pop
xchg
inc
jp
sti
in
pop
out
adcl
sbbl
inc
mov
test
pop
dec
or
les
hlt
daa
sub
int
sub
div
or
push
mov
xor
fcomp
jle
sahf
hlt
fst
call
push
addr16
mov
adc
jnp
ljmp
sub
cmp
hlt
push
mov
shr
mov
fbld
gs
pop
push
loop
std
inc
pop
or
ds
fisttpll
aad
lock
push
faddl
dec
addr16
pusha
push
fcompl
loope
iret
inc
rolb
sbb
mov
subl
mov
ja
fnstsw
dec
ss
lds
fwait
movb
xor
pop
orl
sbb
outsl
andl
xchg
icebp
xchg
repnz
adc
mov
clc
fisttpl
cmpsl
sub
shlb
loopne
jmp
sbb
sub
and
xchg
push
jnp
add
or
imul
jl
mov
sbbb
cld
or
jmp
add
sti
and
and
pop
movsb
lea
pop
pushf
lods
jle
fiadds
ret
and
jg
lods
fsubrl
ret
popf
int3
cmpsb
mov
inc
repz
adc
xchg
fisubrl
or
mov
repz
dec
mov
aaa
outsb
inc
pop
xchg
jne
and
push
mov
pop
movsb
rorl
xlat
jno
lock
mov
pop
jge
sub
add
in
imul
jl
shlb
cld
xor
leave
xor
xchg
int
daa
stos
inc
dec
imul
ret
cmpsl
sbb
movsb
push
fdivrs
mov
add
cmp
cmp
cld
pop
stc
push
subl
adc
mov
and
data16
adc
arpl
addr16
mov
shrl
stos
inc
pop
filds
pop
call
pop
ror
dec
gs
xor
cmpsb
pop
paddw
lahf
jp
cmc
and
mov
out
push
insb
popf
mov
xchg
cmpsl
mov
jmp
jb
out
push
xchg
push
mov
aad
shll
jmp
repz
or
xchg
scas
pusha
lock
in
xor
cli
sti
and
cmp
jns
pop
push
xlat
stc
in
pop
int
sub
mov
scas
mov
leave
xor
ret
push
mov
ljmp
jp
xor
sub
pop
iret
pop
icebp
mov
mov
nop
int3
mov
xor
cltd
popf
jae
mov
sub
icebp
push
dec
ds
cli
xor
stos
sub
xchg
adc
stos
jns
cmp
pushf
arpl
lcall
or
lahf
xor
into
decl
loopne
push
imul
int3
insl
gs
inc
addr16
les
cwtl
add
clc
cmpl
and
pop
lds
fs
out
ret
inc
add
push
popa
push
xchg
in
or
mov
subb
leave
cmpsl
mov
inc
inc
mov
mov
push
push
xchg
repz
insl
inc
ss
cld
fiaddl
push
sar
push
insb
call
xchg
dec
mov
movsl
fdivl
jb
fwait
push
jnp
sbb
stos
inc
or
inc
cmp
negb
mov
pushw
loop
jb
das
mov
mov
movsl
in
pop
push
push
loope
cs
cmp
in
add
xchg
mov
push
loopne
in
and
pop
jle
outsb
ja
add
xchg
hlt
jae
lock
into
and
test
sub
mov
stos
loop
jb
int3
fimull
lock
cmp
cmp
int
ja
leave
iret
fmuls
sti
dec
cmpsl
adc
cmpsb
sub
fidivl
lods
and
cltd
pop
pop
mov
loope
xor
out
xchg
in
test
inc
or
dec
sbb
cmp
gs
sbb
adc
data16
mov
test
jmp
cmc
mov
ret
lea
pop
out
aad
std
push
sbb
jp
aas
adc
dec
leave
popf
xchg
sub
push
and
fists
push
rcll
es
pop
mov
sbb
imul
or
dec
xlat
out
aad
mov
out
xchg
xor
rorl
push
nop
jg
add
stc
imul
push
hlt
pop
negl
adc
jle
inc
rol
out
pop
and
xor
aam
xchg
add
adc
cld
cmpsl
push
xchg
sub
sub
inc
fdivrs
sahf
insl
xor
lods
inc
out
sub
lcall
lods
lret
jno
movsl
scas
arpl
xor
mov
mov
mov
pmaxub
mov
cli
arpl
cmp
repz
pop
and
cmp
movsl
pushf
and
mov
stos
ds
mov
ret
outsl
fs
mov
das
or
push
mov
xchg
popf
lcall
divl
in
data16
jne
lret
dec
outsb
mov
pushf
mov
mov
sub
xchg
daa
add
push
inc
test
push
push
push
mov
subl
xchg
dec
adc
pop
lahf
andb
arpl
pop
and
call
fldl
jge
cmp
gs
fsubrs
outsb
dec
repz
call
jle
test
mulb
mov
pop
iret
cmp
sub
int3
pop
dec
jge
enter
or
dec
sahf
cmp
rcrl
push
cmp
aam
iret
xchg
cli
mov
jmp
inc
dec
jns
leave
fisttps
fwait
fs
data16
xor
mov
adc
xor
inc
push
jmp
jne
mov
pusha
mov
xchg
jle
mov
imul
rorl
and
inc
cmpl
cwtl
mov
jl
test
dec
in
test
inc
mov
insb
or
hlt
mull
andl
popa
cld
mov
test
push
loope
push
repz
scas
pop
cmp
jecxz
rcrb
stos
cmp
push
out
mov
sti
out
mov
pop
out
fmuls
sub
sbb
leave
aad
loopne
jbe
pop
std
lcall
daa
jnp
or
mov
xchg
mov
sbb
xchg
inc
cmc
add
push
and
fildll
add
mov
xchg
jo
cmpsl
lods
test
sar
stos
dec
fmuls
push
subl
cmp
mov
fisttpl
sbb
push
mov
es
ret
popa
or
push
ds
push
pop
lds
mov
jae
enter
pop
shlb
ljmp
push
dec
outsb
sarb
in
repnz
stos
cwtl
mov
push
inc
and
mov
cmc
test
inc
xchg
xor
push
and
in
shlb
push
push
inc
mov
roll
mov
sbb
mov
repnz
sub
xlat
in
mov
push
cwtl
lods
dec
imul
jecxz
movsl
adc
in
inc
jmp
mov
mov
xchg
out
and
adc
dec
adc
jle
imul
push
adc
bound
push
mov
roll
pop
lock
out
dec
cs
aam
push
mov
sub
inc
lret
test
adc
stos
test
push
outsb
xor
scas
sub
fmull
or
mov
pop
aad
shl
mov
rcrl
rcrl
adc
insl
and
xor
lcall
test
cmp
push
jp
and
xchg
adc
test
pop
pop
pop
mov
push
adc
mov
leave
mov
dec
call
adc
pop
lcall
dec
pop
sarl
ja
jns
jb
mov
rorl
cmp
sub
pop
arpl
stos
cmp
inc
lcall
mov
adc
pop
cmp
fildl
ja
mov
push
pop
inc
icebp
xchg
mov
gs
dec
nop
fs
push
js
push
dec
test
fxch
movsl
sbb
mov
pop
xlat
arpl
and
pop
push
jmp
xchg
push
mov
repnz
jg
lods
in
jge
fsubs
out
ss
cmc
and
xchg
cmp
xlat
xor
lds
xchg
lods
adc
sub
inc
js
sbb
mov
hlt
mulb
decl
inc
enter
mov
dec
xchg
fisubs
loop
mov
pop
adc
or
pop
xor
add
add
pushf
or
bound
in
fisttpll
repnz
popw
push
outsl
mov
or
dec
popf
mov
leave
jge
cmp
mov
xchg
mov
dec
xor
addr16
out
ret
mov
cmp
adc
dec
in
lahf
pop
es
out
andl
cmc
sbb
mov
dec
shlb
mov
pop
leave
mov
push
mov
popa
jae
mov
jno
pop
xor
loope
push
add
insb
fcomi
dec
je
xchg
fwait
inc
mov
pusha
xor
pop
jp
mov
and
xor
xor
dec
into
ja
mov
cmp
test
sbb
mov
adc
or
mov
sbb
fwait
loop
sub
jbe
mov
cs
cld
arpl
jmp
enter
das
test
mulb
xchg
daa
adc
loop
and
lahf
jge
cmpsl
fs
sar
add
mov
aas
js
sub
xor
imul
stc
or
inc
sub
lods
cmp
xor
jmp
movb
adc
push
adcl
mov
popf
or
sbb
bound
lcall
mov
lret
data16
popa
pop
xchg
decl
mov
or
and
in
mov
sub
cmp
outsb
div
cmpsl
pop
rcrb
enter
aad
pop
jecxz
loopne
mov
sahf
icebp
lcall
lods
sub
ja
icebp
into
mov
inc
push
add
adc
jmp
repnz
in
dec
dec
or
and
sbb
in
or
outsb
jg
dec
or
pop
loopne
jmp
push
sbb
ss
sub
cmp
clc
scas
mov
fmull
push
adc
cmc
in
mov
cmp
push
das
insl
sbb
sbb
cmp
rcrb
xchg
xlat
in
or
push
lcall
push
lock
xorb
xchg
cmpsb
stos
or
icebp
adc
push
and
lods
arpl
xor
push
push
hlt
push
jecxz
xor
cmp
icebp
sbb
lret
add
push
add
pop
outsb
cmp
inc
dec
fs
or
in
callw
movsb
int3
push
ret
icebp
adc
push
in
jle
insb
jge
jg
sub
repnz
inc
inc
xorb
mov
mov
add
je
sub
and
shr
arpl
jmp
xchg
aad
push
or
push
out
movsb
push
cmp
scas
mov
lods
scas
lahf
pop
bound
repz
je
xor
mov
mov
out
loop
dec
or
mov
es
add
cltd
pop
inc
inc
lods
call
das
xchg
loop
xchg
pop
sahf
pusha
insl
or
cmp
cmc
push
cmpsb
in
lds
mov
add
sbb
rol
jae
pop
inc
push
or
fstl
and
inc
inc
dec
inc
mov
nop
lock
cmpsb
add
sbb
xchg
out
outsb
dec
stos
mov
stc
mov
pop
lret
sub
or
pop
test
mov
mov
or
sub
mov
out
lods
movsl
push
stos
xor
jg
jecxz
sub
ja
dec
cmpsl
jg
into
dec
pop
push
add
xor
icebp
dec
xor
notb
cmpsl
movsl
rolb
clc
inc
int
popa
or
and
fstps
and
loope
cmpsl
loopne
ja
adc
leave
inc
push
pop
ret
mov
faddp
icebp
sub
daa
into
jp
scas
jmp
add
mov
jp
cltd
pop
lahf
dec
ljmp
loop
mov
push
enter
xchg
icebp
jbe
arpl
aaa
pop
sbb
test
pop
xchg
or
xor
xlat
sbb
or
popf
dec
pop
xchg
fildl
popl
in
sub
adc
test
sbb
sub
cmp
sub
jae
mov
ret
icebp
and
push
sub
push
test
scas
xor
gs
lock
mov
cltd
mov
dec
push
push
pop
pop
dec
shlb
shr
mov
jmp
adc
jp
ja
pusha
dec
xor
mov
mov
les
xlat
int
jb
xchg
jb
jge
lret
xchg
iret
xchg
adc
mov
add
mov
leave
mov
xchg
mov
incl
iret
jp
dec
ljmp
sbb
mov
inc
mov
aaa
pop
out
jp
xor
in
mov
repz
gs
fsts
jle
hlt
fwait
mov
bound
add
adc
sti
or
aad
mov
xchg
jp
mov
jbe
popa
or
push
and
mov
aaa
cmp
mov
mov
rolb
mov
shll
push
jge
lcall
sub
leave
shlb
les
cmp
fildll
imul
fstps
loopne
sbb
es
pop
orb
rorb
js
ss
adc
mov
xor
ljmp
bound
outsl
dec
dec
push
and
mov
outsl
mov
and
jg
xor
in
shll
cli
gs
dec
lock
gs
daa
sub
fstl
cmp
fdivs
and
xchg
outsb
fnclex
test
mov
fwait
popl
inc
xchg
push
imul
cmpsb
jmp
xchg
sbb
mov
sbb
adc
scas
loop
iret
jnp
jbe
adc
xchg
sbb
scas
stos
cmpsb
inc
ds
or
sub
push
cld
inc
shl
repnz
inc
stc
ret
cmp
mov
sub
push
call
out
imul
out
push
fisttpl
test
add
add
lock
mov
adc
sub
fldl
test
loop
in
addr16
xor
jo
jbe
imul
repnz
dec
push
jmp
pop
leave
imul
xor
bound
jecxz
not
xchg
es
sti
aad
xchg
sarl
in
bnd
hlt
out
push
push
test
mov
mov
pop
and
sbb
out
jp
arpl
jbe
fwait
les
movsl
fildll
rorb
into
fucomip
and
lock
lods
add
mov
adc
cld
fstps
mov
sub
sbb
inc
jne
push
xchg
add
repz
cltd
in
xchg
icebp
fidivl
insl
or
sti
push
popf
sbb
in
mov
out
cmp
stos
and
mov
out
cmp
xchg
mov
stos
xchg
xlat
shl
mov
movsb
push
inc
mov
call
cmpsl
mov
cmpb
aaa
jge
mov
dec
mov
pushf
xchg
cmpsl
jo
test
ljmp
scas
mov
into
and
xchg
bound
mov
jb
cwtl
push
aam
and
mov
push
lret
jecxz
inc
sub
or
sub
repnz
push
inc
fadd
addr16
and
adc
pextrw
xlat
or
add
cmp
stos
jno
dec
in
inc
mov
daa
jb
push
mov
out
and
push
fwait
ss
push
loopne
in
xchg
icebp
fadds
inc
in
stos
mov
lods
mov
in
fidivrl
mov
dec
fmull
push
faddl
imul
jmp
movsb
pop
mov
xchg
gs
jmp
int
push
mov
mov
inc
pop
ja
pop
test
out
and
shrb
rorl
mov
setp
pop
dec
out
nop
pop
push
shlb
xor
or
mov
popf
xor
xor
stos
cmpsl
in
pop
dec
aad
ja
popf
mov
mov
test
out
inc
jns
imul
popf
sbb
ss
aad
sub
inc
fwait
sbb
lds
jns
iret
push
or
mov
aad
lret
icebp
push
popf
pop
int3
mov
cli
jecxz
push
xchg
es
std
cli
cltd
pop
pop
lea
inc
movsl
ret
addr16
adc
adc
mov
mov
xor
mov
mov
jns
sti
or
fnstcw
rcrl
pop
loop
push
lock
lret
push
push
addr16
hlt
cmp
test
push
mov
fs
xor
push
vzeroupper
hlt
xchg
sub
xchg
adc
cld
push
push
mov
aas
out
pop
push
flds
aam
dec
scas
ljmp
xor
pushl
xchg
sbb
paddsw
imul
xor
sbb
icebp
es
jno
push
jg
xchg
fiaddl
jmp
leave
mov
pushf
sti
xor
dec
xor
xchg
mov
sub
dec
sbb
imul
out
pop
xchg
xchg
imul
push
repz
xor
jno
aas
sbb
jno
push
or
sub
in
add
lret
push
idiv
and
jnp
outsl
sub
mov
ret
les
lcall
cmp
insl
fisubs
cmp
push
mov
ss
out
mov
or
pop
fcmovnb
out
jns
scas
xchg
loope
cmp
or
inc
iret
dec
mov
dec
mov
push
mov
icebp
sub
xchg
clc
push
popf
pop
and
jns
loope
add
lret
cmp
subb
iret
pop
stc
adc
pop
pop
enter
sbb
js
or
insl
mov
sub
push
fcoml
adc
int
mov
cmp
cmc
ror
mov
pusha
ret
jb
jmp
rcll
mov
mov
and
push
loopne
inc
mov
xchg
mov
in
repz
inc
ss
xor
pop
mov
xchg
lcall
push
jmp
xchg
xchg
sub
pop
mov
sbb
xchg
scas
adc
test
loope
or
addr16
mov
mov
xchg
xchg
ljmp
push
repz
add
cmc
sbb
cmp
test
jbe
in
push
into
xchg
push
fs
jle
int3
cmp
out
xchg
inc
bound
cmp
jnp
sub
outsb
mov
and
fnstenv
or
push
xchg
xchg
fdivl
scas
dec
loope
mov
sahf
in
aam
inc
repz
scas
aad
jbe
out
lret
sub
jp
iret
in
bound
sarl
cwtl
shl
repz
add
cld
into
aad
sbb
sub
xchg
fisttpl
or
xchg
ss
mov
imul
or
lods
xchg
inc
lret
les
lret
adc
call
jl
test
daa
jnp
push
xor
sub
and
pusha
insl
adc
fistps
dec
adc
jge
xor
orb
xchg
cwtl
add
scas
in
and
jecxz
adc
mov
test
out
ds
jge
inc
or
xchg
frstor
jl
push
sbb
lods
cld
or
daa
scas
mov
mov
mov
xchg
or
or
scas
sbb
lock
sub
mov
adc
iret
insb
loopne
loopne
incb
addl
test
pushf
cmp
pop
scas
jmp
dec
pop
ss
mov
ja
test
jbe
aad
xchg
pop
jp
aaa
fisttpll
in
aad
outsl
xchg
jns
mov
sub
push
push
test
inc
mov
and
dec
in
push
dec
test
mov
xor
sbbl
sbb
fucomip
xchg
cmpsb
push
fxch
sbb
flds
jbe
cmp
dec
jb
dec
ljmp
xor
mov
rcr
ret
adc
mov
pop
mov
cmp
pop
out
inc
ljmp
insb
test
popa
test
mov
add
lock
dec
scas
xor
and
int3
std
jg
or
cld
inc
sahf
dec
std
movsl
lock
cmp
cli
fisubrl
pop
add
cmp
mov
dec
repz
push
insb
ljmp
add
inc
jns
daa
pusha
mov
pop
out
out
lods
iret
sub
pop
sub
sbb
aad
mov
fwait
nop
sbb
jbe
sbb
repnz
add
and
aaa
nop
xor
iret
stc
mov
mov
movsb
inc
loopne
fdivrl
rorl
inc
push
fldcw
and
loope
xlat
cli
test
mov
shlb
hlt
dec
adc
jle
mov
mov
pusha
test
and
loope
or
lret
fldcw
aam
js
pushl
add
das
mov
mov
xchg
test
inc
or
fdivs
je
addr16
cmp
fnstcw
push
mov
xchg
fimuls
out
xchg
mov
stos
icebp
dec
pop
push
mov
cmp
mov
imul
xchg
jns
mov
and
repz
xlat
cld
sub
push
sbb
xor
or
xlat
bound
je
es
push
mov
mov
xor
nop
rcrb
jno
lds
add
mov
rcrl
aas
xchg
repnz
cmp
clc
in
ja
gs
and
sahf
fildl
rclb
pop
les
jmp
arpl
stc
test
scas
mov
add
jl
shlb
pop
and
mov
pop
adc
xorb
jecxz
jno
mov
jb
or
push
or
insl
cltd
stc
stos
xor
fs
dec
xchg
xchg
aaa
or
sbb
out
idivb
dec
std
test
pop
call
call
or
out
leave
add
dec
insb
loop,pt
mov
and
ljmp
adc
imul
aaa
pop
add
push
inc
stos
xor
fistpll
mov
add
jecxz
or
out
adc
aaa
xor
mov
stos
pop
sbb
mov
xchg
add
out
mov
mov
adc
mov
fdivs
cmpsl
add
loop
jecxz
adc
mov
xor
int
mov
mov
pop
push
adc
pop
pop
iret
sub
jns
mov
inc
repz
jg
out
jge
mov
xor
fcoml
pop
mov
fimuls
sbb
dec
and
jnp
int
std
dec
stos
mov
ss
add
fdivl
into
subl
inc
and
fnstenv
mov
dec
fbstp
cltd
es
jne
pushf
mov
sub
int3
out
test
jge
mov
jbe
aam
fmul
dec
xchg
iret
ljmp
xlat
xchg
test
inc
sarb
dec
adc
or
xlat
test
pop
mov
mov
and
in
cmp
sub
out
add
repz
arpl
insl
scas
lea
clc
inc
loop
xor
es
cmp
dec
hlt
jae
adc
fiadds
adc
sar
sbb
enter
add
inc
mov
aad
lcall
add
pusha
ret
mov
and
push
es
dec
pop
aaa
ret
ret
aam
cmc
dec
imul
push
std
sub
test
mov
push
or
jnp
mov
cmp
mov
insl
into
and
mov
fisttps
icebp
outsl
push
inc
pop
int3
jg
ret
out
out
cmpsb
cmp
jg
mov
pop
mov
jns
or
sub
push
aad
jge
jno
cmpb
pop
mov
xchg
xor
lock
push
lea
scas
dec
in
push
inc
pop
mov
sub
loop
xchg
inc
fwait
mov
cmp
push
mov
lods
cmp
adcb
mov
jge
inc
inc
and
popa
pusha
inc
daa
mov
push
cmp
aaa
jns
pop
rol
js
dec
rcrl
subb
or
pusha
inc
out
fmul
adc
ret
test
stc
push
push
mov
pop
jecxz
outsl
inc
push
pop
out
adc
sbbb
mov
lea
adc
jno
aas
aam
loopne
sub
jo
out
lahf
fmull
lea
pop
pop
jnp
sbb
push
shr
mov
subb
ss
adc
inc
pop
repnz
sarl
and
pop
aas
cld
clc
mov
xchg
ja
jmp
xchg
fldenv
sbb
aas
repz
mov
aas
sbbb
push
push
je
ja
dec
ljmp
mov
repz
xchg
arpl
sbb
ss
mov
lods
dec
popf
pop
xorb
lods
ficoms
cmp
fwait
aad
xor
aam
aam
mov
and
loope
enter
xor
mov
out
mov
test
and
sbb
fstpl
daa
outsb
xchg
fucomip
xchg
mov
pop
je
scas
cmc
push
or
rcrb
fs
pusha
inc
scas
cmp
push
cs
packuswb
test
sbbb
push
imul
cmp
fidivs
fnsave
mov
out
adc
pop
in
mov
xchg
fidivrl
or
cmp
stc
fwait
lods
add
ja
jp
xor
xor
push
es
add
xchg
das
mov
pop
mov
insb
dec
dec
mov
cmp
int
jge
sub
call
ficomps
xchg
inc
dec
pop
xchg
inc
lods
or
aaa
loope
fwait
push
insb
dec
fmulp
imul
test
xchg
jb
ret
cltd
lret
add
mov
insb
or
dec
mov
aam
movsl
or
xchg
sub
cmpsb
mov
xchg
in
jle
jp
sub
pop
inc
sbb
mov
aam
mov
fwait
adc
bound
inc
adc
in
mov
loope
sbb
xchg
inc
out
add
sbb
mov
insb
je
pop
bound
aaa
inc
popf
fldenv
repnz
arpl
pushf
push
sub
aas
cmp
cmc
arpl
out
jbe
loope
mov
arpl
push
cmpsl
sub
sbb
out
xchg
in
hlt
mov
andb
out
adc
clc
fnsave
out
imul
mov
into
sbb
ret
pop
fwait
repnz
cmp
andl
mov
dec
adc
adc
mov
icebp
aam
mov
fidivrs
pop
cli
iret
loop
mov
xchg
orb
adc
popa
fldl
in
cmp
stc
push
sub
xor
shlb
mov
sbb
mov
call
aam
adc
cmpl
sub
push
popf
cmp
cs
int3
leave
or
dec
add
ljmp
negb
negb
push
dec
shl
sbb
mov
sar
cmpsb
add
push
add
bound
insl
adc
mov
cld
int
sbb
add
push
mov
shrb
add
push
or
out
xor
adc
cmp
mov
adc
pop
or
adc
or
mov
or
fidivrs
jae
popa
fistpll
sbb
inc
xchg
stc
aas
cwtl
push
pusha
cmp
enter
out
and
ja
imul
adc
or
outsb
outsl
std
inc
mov
push
dec
bound
frstor
or
or
fsubrp
mov
sub
pop
push
add
scas
push
pcmpgtd
sub
mov
mov
xchg
sti
lods
pusha
mov
mov
sub
xor
mov
xlat
addr16
aaa
push
cmp
outsl
xchg
mov
test
addr16
pop
fdivrp
fwait
cwtl
shl
and
lods
push
fistl
mov
mov
jns
inc
pop
mov
pop
sbb
jp
cs
sahf
leave
rorb
bound
xchg
or
jb
pusha
mov
cmp
adc
out
sti
mov
and
fnstcw
push
mov
daa
xor
jp
xor
nop
pop
push
cmpsl
sahf
ss
pop
lods
loopne
loope
sbb
or
insl
dec
pop
xchg
pusha
sub
fsubp
jbe
add
imul
push
and
mov
addr16
popf
imul
cmpsl
out
out
mov
sub
into
scas
adc
inc
dec
push
sbb
inc
cli
int
bound
call
cmp
popl
imul
repz
inc
mov
popa
dec
xor
sbb
ja
test
ds
or
mul
lret
inc
inc
adc
pop
cltd
mov
xor
pandn
xor
cs
or
push
test
nop
dec
rorl
and
rcl
push
outsl
adc
xchg
mov
push
arpl
adc
cmp
rcrl
push
fucompp
test
js
in
rcl
imull
mov
out
cltd
mov
hlt
jne
xor
je
adc
pop
adc
add
jno
sahf
adc
scas
and
ja
cmp
je
mov
jp
hlt
dec
in
jns
sub
fisttpl
push
loop
jo
mov
dec
cli
push
inc
es
sbb
dec
and
aaa
lods
test
std
mov
dec
inc
and
sbb
cwtl
xor
xor
loope
or
lods
shll
scas
outsl
mov
mov
add
adc
ja
pop
sbb
mov
mov
incb
or
push
adc
sub
inc
xchg
sti
hlt
cmpsl
xchg
fldlg2
in
or
lret
lcall
add
in
repnz
push
fcmovnb
adc
rcrl
into
fs
or
sahf
and
jnp
xchg
js
fdivl
add
push
pop
cli
enter
xlat
or
dec
lea
movsl
stc
daa
cld
iret
push
sub
jle
sbb
loopne
push
sbb
xchg
sub
fsubrs
adc
nop
jge
stos
push
xchg
xor
repz
push
jp
mov
addl
inc
jp
gs
fimuls
mov
test
pop
gs
adc
or
dec
cld
cltd
sub
and
and
in
cltd
mov
pop
adc
ds
push
push
imul
jb
cmp
xor
int
xor
cmpsl
xor
insl
jnp
or
call
mov
sbb
ret
in
popa
loope
es
xchg
cwtl
idivl
lods
sbb
ret
xor
pop
cld
xor
into
test
pushl
and
xchg
cmpsb
bound
iret
jg
movd
stc
testb
scas
pop
jmp
mov
jle
nop
js
fisubl
addr16
fwait
mov
outsb
ss
arpl
pop
mov
pushf
xchg
test
test
xchg
je
adc
scas
sbb
pop
aas
jecxz
pop
ret
jmp
xchg
inc
xchg
mov
or
pop
lds
xchg
push
sbb
jl
jae
stc
and
arpl
sub
xchg
cmp
pop
push
loopne
arpl
jle
xor
fimull
push
pop
lcall
loopne
pusha
cltd
andl
rorl
jns
dec
inc
loope
mov
lods
cmpsl
and
adc
and
scas
push
mov
out
push
inc
sub
imul
and
in
push
xor
hlt
loopne
mov
pop
imul
mov
pop
dec
add
and
lock
repnz
xor
inc
adc
dec
pushf
imul
mov
or
mov
add
insb
push
imul
fnstsw
fcoms
mov
int3
or
mov
mov
fwait
adc
cltd
xchg
outsb
outsb
loope
and
xor
adc
out
nop
mov
sti
cli
mov
cmpsl
xchg
push
out
adc
aad
mov
cmp
pop
stos
sbb
adc
cmp
faddl
jae
xchg
or
dec
out
loop
cmp
xchg
add
cmpsl
faddl
ret
sub
adc
test
js
jbe
xchg
mov
mov
inc
cs
sahf
inc
mov
dec
and
cmpsl
incb
movlps
nop
fwait
mov
dec
xor
mov
xchg
dec
xor
movsl
push
int
scas
ret
mov
xor
daa
jle
jns
and
lock
lret
icebp
pop
jns
pusha
ret
jmp
mov
inc
jmp
pop
and
push
xor
or
jns
sub
xor
and
jo
xchg
into
sti
push
test
xor
fsubrl
fldcw
scas
xchg
pop
cmpsl
pop
mov
jns
addb
xlat
sbbb
data16
pop
push
gs
inc
outsb
cwtl
dec
or
fdivl
adc
loopne
dec
ret
loop
add
sub
dec
outsb
clc
loop
call
clc
sbb
scas
mov
push
sub
sar
adc
data16
xchg
push
xor
xchg
imul
lods
nop
cmp
mov
jbe
mov
stos
cmc
arpl
xor
adc
jnp
dec
cwtl
push
out
dec
pop
loope
neg
mov
pop
adc
dec
cmp
sbb
cmp
aad
testl
mulb
dec
in
push
enter
fimuls
and
push
xlat
jle
mul
dec
inc
je
adc
int3
int3
fs
xlat
mov
xchg
dec
insb
jne
xchg
shll
cmp
add
pop
mov
adc
enter
mov
scas
add
ljmp
xor
in
lret
lock
mov
ret
lock
mov
push
shll
dec
cmp
jno
lcall
add
jno
cmp
aam
aam
xor
lret
jns
inc
ds
inc
inc
mov
test
mov
xchg
fstp
in
popa
dec
and
inc
lea
add
stc
fdivr
pop
loope
shlb
call
mov
lea
adc
adc
push
in
sub
add
mov
add
loop
je
mov
lret
pop
daa
stos
inc
daa
mov
cld
leave
adc
xchg
mov
fldl
adc
lea
push
sahf
repz
jecxz
xchg
inc
call
mov
leave
mov
int3
scas
xchg
pop
xor
dec
push
pop
dec
cwtl
mov
xchg
out
inc
jg
sub
in
popa
jo
lods
fstps
mov
xor
test
lea
xor
js
in
cmp
push
xlat
mov
pusha
decl
arpl
push
cmp
enter
not
sub
rorb
sub
out
adc
outsl
ljmp
adc
sbb
out
cwtl
xchg
insb
adc
xchg
jb
cmpsb
or
fwait
enter
mov
out
inc
lds
loop
dec
jns
xor
popf
movsl
fldcw
dec
or
int3
dec
repz
data16
loope
dec
push
adc
stos
inc
jno
mov
aas
fs
lock
ror
or
ss
cmp
mov
out
add
in
pop
xchg
mov
int3
adc
push
shl
mov
aam
sbb
dec
mov
fs
xor
or
jp
ret
xchg
xchg
xor
add
dec
mov
and
mov
xor
pop
dec
dec
scas
cmp
sub
inc
data16
sub
pop
mov
inc
pop
dec
and
lret
jl
xchg
clc
push
adc
push
mov
adc
mov
push
push
or
imul
stc
fisubrs
sti
xchg
lret
xchg
call
add
xlat
sahf
fsubrp
inc
cmp
in
call
cld
mov
ss
inc
loope
ret
jno
outsl
leave
cltd
push
fdivl
xchg
lret
or
into
mov
les
aam
sbb
jp
inc
mov
xor
push
push
jbe
les
ljmp
mov
mov
inc
scas
out
mov
jnp
add
xor
es
xor
into
push
clc
fiadds
in
movsb
inc
fdivrs
hlt
out
mov
add
movsb
shl
daa
sti
jnp
movsb
mov
or
fwait
mov
orl
pop
stos
xchg
jnp,pt
jecxz
fdivrp
mov
dec
outsl
lock
aad
test
adc
inc
fldcw
mov
mov
leave
sub
adcl
dec
mov
bound
jecxz
in
leave
jmp
or
jge
push
inc
mov
jle
testb
test
movsb
sbb
mov
leave
xor
xchg
cwtl
jbe
xor
icebp
mov
mov
push
addr16
and
dec
cmc
inc
jg
add
mov
fists
inc
push
aaa
dec
cmc
test
addr16
int3
mov
adc
sbb
icebp
cmpsl
jo
jne
cmp
lea
add
lahf
fldcw
fnstsw
sub
mov
xchg
adc
mov
xchg
and
cmpsl
push
inc
add
insb
insl
loopne
sbb
mov
ljmp
aam
stos
xchg
push
push
sub
in
mov
sub
rcll
push
xor
shlb
cmp
imul
pop
mov
scas
data16
mov
hlt
aam
and
int
std
sbb
push
insb
sbb
push
clc
sub
data16
loopne
push
popf
dec
arpl
adc
xchg
insl
cmpsb
clc
in
daa
aaa
xor
movsl
or
jecxz
push
sti
shr
lods
cmp
cmc
mov
mov
dec
xchg
pop
inc
sbb
in
dec
sbb
jo
sbb
sbb
push
insb
stc
xchg
insl
scas
clc
jecxz
cmp
and
xchg
dec
sub
test
adc
out
inc
clc
out
test
je
mov
pop
hlt
push
inc
ret
jp
dec
jmp
rolb
push
fstp
xor
mov
adc
or
mov
jb
adc
cmp
pop
inc
cli
faddl
fs
jp
xor
xchg
leave
cmp
lahf
pop
push
mov
mov
bound
xor
lds
test
lcall
xchg
pop
clc
ss
pop
outsl
cli
nop
jp
rorb
je
jmp
insl
hlt
shl
pop
sbb
jmp
xor
xor
mov
dec
cltd
cwtl
or
mov
cli
sbb
sarb
cmc
test
dec
std
or
sbb
test
fidivrl
in
mov
out
add
cmpsb
adc
stc
jno
lea
mov
inc
rcll
dec
push
lahf
inc
push
xchg
xchg
in
cmpsl
pop
mov
leave
inc
in
es
inc
inc
xchg
push
push
popf
dec
xchg
jmp
push
addr16
les
mov
pop
fadds
lods
scas
cli
dec
mov
add
adc
rorb
shl
ret
loop,pt
xlat
and
xor
adc
and
lret
sti
and
ja
xchg
push
rcr
mov
pop
xor
add
pop
bound
inc
mov
mov
lock
mov
sahf
insl
subb
jno
mov
pop
bound
sub
bound
jne
push
push
dec
mov
mov
out
xchg
loop
fists
lock
lret
sbb
sub
mov
inc
imul
bound
inc
push
push
sbb
ret
pop
ret
xchg
mov
xchg
xchg
dec
xchg
test
nop
insl
stos
mov
inc
push
ja
push
out
les
push
jo
int
fldl
mov
hlt
cmp
mov
mov
imul
xchg
sbb
jl
subb
cld
into
add
or
push
ror
sbb
add
sarl
test
push
mov
aad
scas
movsl
jp
repnz
mov
mov
hlt
bound
inc
inc
xor
jge
mov
jp
mov
pop
fs
xchg
cmp
insb
mov
dec
int3
pop
pop
mov
loopne
vmovss
push
jecxz
and
inc
adc
jecxz
jbe
stos
mov
mov
sti
fiadds
sbb
movsb
mov
xchg
fxch
hlt
lahf
lret
dec
xchg
sub
js
decl
pop
push
xor
sti
push
sbb
int3
adc
aaa
das
repnz
push
push
mov
and
push
dec
mov
mov
call
xor
lock
div
js
cwtl
jge
inc
movsl
push
aad
xchg
xchg
push
push
je
cmpsl
cmpsb
enter
fadds
es
mov
sub
adc
xchg
sbb
dec
mov
int3
sti
xor
leave
sbb
xchg
enter
pop
xor
pop
inc
popa
push
outsb
mov
mov
or
push
leave
push
or
and
popf
dec
nop
sub
rorb
xchg
xor
and
rcrl
js
mov
lods
rcll
mov
or
inc
cli
adc
push
or
out
jns
inc
push
pop
icebp
popf
dec
push
push
iret
lea
in
adc
iret
in
and
cmp
hlt
test
repnz
mov
jg
fidivs
add
cmpsl
mov
and
inc
sbb
xchg
add
icebp
add
out
push
mov
cmp
dec
movsb
ret
and
mov
flds
shlb
ds
xchg
push
cmp
xor
in
cmp
enter
push
jne
and
sub
fiadds
aas
mov
cmp
mov
mov
push
xor
sbb
pop
les
ja
sbb
mov
adc
jae
test
es
jg
js
add
push
dec
fdivrs
mov
aam
je
xor
inc
fwait
push
test
sub
pop
inc
sbb
add
in
lds
adc
mov
xor
pop
push
add
cld
jb
push
jb
mov
cmp
js
cld
xor
add
and
in
or
pop
jbe
push
fwait
push
call
scas
and
inc
rol
cmp
mov
popa
iret
insl
fmull
imul
les
cmp
and
or
or
pop
lea
test
cmp
or
cmp
call
push
xor
or
fisttps
inc
inc
repnz
or
lcall
xchg
add
pop
mov
xchg
es
dec
divb
rorl
push
mov
popa
std
fsub
movsl
sub
dec
adc
and
fucom
inc
in
fucomi
jmp
xchg
pop
jg
adc
lret
hlt
mov
xchg
add
pop
pop
nop
xor
jo,pt
xlat
sbb
pop
cmp
out
rcrl
les
test
jo
fs
jmp
pop
ds
notb
push
xor
or
mov
and
lock
xchg
outsb
push
mov
add
dec
rcrl
sbb
xlat
and
lahf
mov
sarb
or
fcomi
leave
out
mov
loope
js
sbb
test
lahf
js
notb
test
xchg
dec
leave
add
cs
jb
inc
add
scas
pusha
cmp
push
jbe
or
sbb
inc
jle
add
lahf
or
fiadds
ficompl
xor
jns
scas
clc
mov
push
outsl
push
sub
andb
mov
push
movsl
mov
xchg
sub
aam
mov
out
dec
and
test
scas
adc
popf
shr
sbb
mov
pop
ljmp
sbb
ss
sahf
mov
or
shlb
test
sub
loope
pop
nop
loop
ljmp
cli
mull
rolb
orb
shlb
lods
xchg
xorl
leave
nop
shlb
mov
lock
pop
sub
es
pop
mov
pusha
sub
jns
pop
and
and
push
jns
cltd
jne
repz
sar
in
mov
in
rol
xor
cmpsb
mov
gs
icebp
adc
sub
in
adc
test
in
sub
addr16
popa
or
adc
add
mov
jle
subb
pop
cltd
sbb
cmp
push
sbb
cmpsl
cmc
sub
fisubrs
insl
jmp
cld
js
rolb
mov
mov
addr16
stos
insl
lds
cmp
imul
movsb
add
bound
int3
jnp
add
das
mov
pop
rcr
dec
or
fwait
cmp
insl
cmp
out
or
and
mov
mov
insb
and
inc
mov
mov
dec
adc
pop
scas
pop
inc
sub
inc
enter
mov
push
sub
mov
popa
pop
fwait
loop
fs
sahf
adc
nop
jae
fwait
mov
xor
lcall
add
add
sub
jbe
sahf
es
push
rcl
dec
fistpll
ret
loop
push
pop
loopne
mov
sti
or
mov
pop
adc
and
push
and
and
scas
nop
mov
rorb
lahf
mov
adc
push
and
xchg
xchg
rcl
push
xchg
or
jbe
xchg
xorl
pop
loope
cmp
pushf
fstpt
lahf
cmpsl
xchg
jo
inc
mov
fbld
cmp
jb
pop
inc
dec
cmp
pop
arpl
in
pop
mov
sarl
inc
or
pushf
sbb
hlt
or
dec
loope
scas
pusha
pop
sbb
mov
repz
leave
mov
scas
adc
or
pusha
jge
jl
jb
lock
jp
scas
jl
pop
arpl
add
ret
jge
push
jge
test
jecxz,pn
pop
xchg
xor
loopne
cmpsb
movsl
insl
and
mov
scas
int3
xchg
jl
fidivs
xchg
mov
ljmp
sub
movsb
aam
xchg
xor
cwtl
pop
std
fucomi
inc
outsl
movsb
add
mulb
mov
out
mov
in
and
xor
loopnew
fnstenv
xchg
jnp
std
push
stc
loop
jmp
cwtl
jno
mov
es
pop
jp
cld
adc
pop
pusha
clc
outsl
out
out
in
in
mov
xor
xchg
rclb
inc
xor
aaa
jle
mov
pop
xor
xor
mov
dec
outsb
fwait
pop
out
sub
inc
push
push
xchg
ret
sub
lcall
push
mov
push
popa
sub
xlat
arpl
add
add
cmp
pushf
mov
adc
cld
sbb
sub
dec
movsl
stos
or
and
jbe
jnp
push
int
cmpl
repz
leave
mov
nop
movsb
push
mov
jl
int3
adc
std
ljmp
mov
negl
mov
cmp
lahf
popa
pop
sbb
arpl
pop
xchg
ss
xor
mov
mov
cmp
cs
inc
mov
sub
push
or
mov
xchg
mov
and
mov
comiss
jle
cmpsl
mov
push
imul
or
mov
das
adc
xor
insl
shrb
inc
sbb
sarl
fcompl
je
data16
xor
inc
push
rorb
lock
xor
dec
es
pop
call
and
or
inc
jns
int3
adc
lret
mov
int
mov
or
inc
and
repz
lahf
movsl
test
xor
dec
imul
mov
sbb
in
daa
icebp
popa
je
cmpsl
stc
lret
ds
out
fadds
adc
mov
loopne
subb
lds
fmull
dec
xchg
jno
xor
xlat
ljmp
adc
xchg
sub
lods
xchg
adc
xor
dec
daa
aad
mov
stc
lcall
push
in
cmpsl
push
mov
lret
popf
ret
aam
lds
mov
aas
repz
daa
xor
add
add
or
add
lods
daa
in
or
lods
popa
jmp
pop
aad
pop
xlat
cld
imul
inc
psadbw
cmpsl
push
mov
pop
mov
jb
sub
dec
wbinvd
pop
jg
push
push
mov
aam
int3
andb
mov
cmp
jle
int3
repz
in
xchg
ja
push
pop
sub
movsl
mov
dec
mov
cmp
sbb
lcall
jo
xorl
adc
call
mov
hlt
inc
psubsw
add
outsb
mov
mov
mov
jbe
lret
lcall
lods
fwait
xchg
mov
insb
adc
cmp
imul
inc
inc
push
stc
inc
xor
fimuls
ret
popa
mov
mov
xchg
sahf
dec
sub
paddw
add
iret
mov
cmp
cmp
popf
jo
cmc
icebp
inc
jo
sbb
hlt
leave
inc
gs
mov
pop
es
cmc
xor
mov
les
out
ljmp
sbb
push
imul
lea
sub
fst
inc
sub
mov
cmp
inc
filds
rcrl
jg
or
lcall
push
dec
push
dec
aad
lret
movb
xchg
jp
or
jmp
mov
jl
push
jae
sub
inc
sbb
add
xchg
shll
ret
adc
mov
std
leave
push
lret
call
in
mov
fs
and
clc
movsw
inc
pop
xlat
mov
push
jle
jnp
repz
icebp
hlt
dec
and
out
or
mov
cwtl
pop
outsl
push
jp
push
int
aaa
push
sub
sbb
push
rclb
fcomps
data16
repnz
in
pop
jge
sub
fidivs
jle
stos
loopne
dec
fsubs
and
out
stc
push
xchg
daa
mov
lock
push
bound
ss
out
jns
add
outsb
pop
xchg
xor
repnz
dec
push
or
rcrb
out
aam
pusha
jmp
jnp
mov
mov
pop
cwtl
out
adc
sub
popa
jnp
adc
jle
cltd
mov
dec
stos
and
cmp
pop
vmwrite
cmc
cmp
jmp
push
xlat
mov
lret
add
lret
leave
sbb
jbe
gs
push
mov
dec
push
dec
add
out
dec
rcrl
orl
setnp
data16
add
sarl
dec
push
popf
dec
dec
xchg
cld
inc
rclb
and
cmpl
sbb
mov
cs
mov
addb
sub
rcrb
cmp
mov
bound
fcmovbe
mov
loopne
pop
int
fwait
enterw
cmp
xchg
xor
sub
add
lods
push
aaa
fcomps
mov
out
mov
aas
add
iret
cld
cmp
test
jmp
jbe
xchg
lds
movsl
movsb
dec
popf
pop
cmp
mov
xchg
push
sub
aam
call
pop
adc
loopne
ret
mov
ja
pop
mov
pop
mov
cld
push
das
lret
into
rorb
movlps
dec
xchg
and
pop
bound
mov
int3
in
pop
xor
or
add
lahf
mov
cltd
inc
pop
dec
sti
and
ja
jle
cmp
xchg
cmp
sub
xchg
ror
fisubl
jmp
test
fdivrs
sbb
xor
adc
pop
sbb
into
add
int
jl
xchg
pop
push
repnz
insl
xor
and
mov
xor
inc
and
push
fwait
mov
xor
mov
xchg
xchg
mov
xchg
daa
lcall
movsb
inc
xor
push
adc
hlt
add
or
jmp
mov
icebp
sub
outsb
adc
push
sub
shll
cmp
das
in
out
in
or
jb
divb
mov
sti
pusha
xor
sbb
es
push
xchg
aaa
adc
sbb
add
pop
sub
cmpsl
xchg
cmpsb
cmp
jge
test
or
xchg
pop
fwait
mov
mov
xor
xchg
jge
cmp
xchg
push
out
push
lret
xor
mov
mov
dec
dec
test
mov
movsl
loopne
test
stos
outsl
xlat
adcb
ja
inc
adc
ja
cwtl
mov
or
lock
js
iret
push
repnz
add
test
test
cmovbe
sub
push
push
rcll
sub
sub
pusha
dec
mov
sub
push
fs
jno
shlb
outsb
mov
cmp
xor
pop
test
scas
and
pop
or
push
sahf
mov
in
mov
test
jmp
inc
inc
nop
add
movsl
adc
in
and
repnz
xor
pop
dec
add
xchg
adc
roll
add
arpl
lahf
outsb
push
mov
mov
rcrb
data16
jbe
sub
pop
jne
in
pop
xor
dec
pusha
fwait
ja
leave
ss
dec
xor
mov
xchg
lds
push
mov
outsl
test
orb
ror
pusha
dec
aam
xor
xor
fisubs
imul
scas
ficomps
or
pop
jno
out
and
dec
lods
jecxz
stos
xchg
mov
jne
push
ds
pop
je
mov
out
inc
mov
shll
loope,pt
loope
pop
adc
push
mov
dec
and
or
add
cmp
cmp
iret
lret
aas
xchg
sbb
mov
cltd
lret
stc
test
xchg
aam
and
loope
std
or
popa
and
push
cmp
mov
loop
xchg
mov
and
loopne
mov
lea
dec
jl
into
dec
jg
scas
xchg
or
mov
pop
xlat
push
add
inc
xor
jae
push
test
jnp
fucom
xor
fsubr
fldl
adc
in
enter
das
pop
decb
inc
fwait
mov
pop
xor
cmp
rcrb
jnp
cmp
push
lods
jbe
imul
repnz
ret
pop
pop
out
popl
cmp
je
lcall
cmp
dec
inc
inc
lock
imul
mov
push
xchg
push
xchg
jmp
adc
jg
sub
jge
adc
xchg
sbb
test
inc
das
cmpsb
and
cmp
shlb
insl
adcl
push
out
aas
xchg
outsb
inc
or
add
or
outsb
movsl
jo
out
repz
add
test
xor
cli
lock
dec
or
addr16
cmc
ja
out
aas
mov
lea
sbbl
add
jmp
fs
sbbl
daa
sbb
push
sbb
or
add
sub
loop
xchg
fildl
int
rorb
sbb
jl
test
outsb
jge
je
ja
in
out
or
adc
inc
fs
lods
andb
in
lret
movsb
imul
clc
aam
adc
pop
dec
dec
icebp
push
int3
xor
daa
xchg
inc
xchg
xrelease
adcb
inc
cmc
fwait
test
lcall
adc
inc
fistl
sbb
mov
clc
enter
pop
shrl
lahf
clc
insb
or
hlt
bound
es
orl
add
pop
repnz
mov
mov
ja
pop
cli
dec
or
mov
dec
pop
js
mov
mov
mov
pop
jno
cmc
daa
sbb
and
into
mov
jbe
mov
es
inc
mov
or
ja
add
inc
mov
dec
mov
pop
mov
enter
xchg
add
sub
bts
jle
and
ret
lahf
fiaddl
fbld
xor
push
sbb
add
ret
and
xchg
js
addl
sarl
andb
adc
ret
test
fidivs
rorl
mov
jb
div
arpl
in
jl
repnz
dec
mov
xor
js
mov
jecxz
inc
enter
aad
loop
shlb
adc
insl
mov
sbb
pop
lods
xchg
fucomp
pop
aaa
adcb
xchg
xchg
mov
shl
jae
mov
cli
mov
mov
sbb
or
xlat
and
dec
es
pop
pop
sub
aad
nop
sbb
loopne
scas
loopne
ss
push
cltd
div
mov
ds
movl
sahf
fsubrs
mov
stos
mov
mov
or
mov
pop
cmovae
ljmp
mov
sbb
mov
addr16
lea
jle
inc
mov
cmp
lret
xor
popf
mov
mov
or
pop
mov
das
jno
adc
cmp
inc
inc
mov
test
add
imul
sub
loope
scas
adc
sub
mov
or
pop
or
dec
loopne
pop
arpl
out
shl
shlb
faddl
sarl
lock
das
outsl
mov
lock
cld
add
xor
lret
popf
faddl
jno
dec
pop
push
leave
fdivl
out
mov
cmpb
pop
mov
sub
orl
cltd
mov
jmp
push
sbb
or
jae
push
pop
inc
hlt
push
push
stc
data16
push
ret
sbb
mov
faddl
add
sub
jns
cmp
lret
mov
add
mov
pusha
aas
scas
movsl
scas
sub
jne
rolb
sub
dec
je
mov
xchg
adc
in
push
repnz
mov
js
test
add
lahf
mov
pusha
js
lea
mov
outsb
xchg
pop
in
or
add
xchg
add
sti
sbbl
sbb
ds
add
pushf
ret
push
add
test
aaa
xchg
sti
fidivl
jo
loope
lret
add
imul
test
cmp
adc
pop
sbb
mov
jmp
mov
loopne
dec
test
cld
push
jl
inc
call
sti
shlb
fldenv
ss
les
out
scas
push
lock
movsb
nop
insl
ljmp
mov
cld
dec
xchg
xchg
ljmp
lock
pop
sub
mov
sub
test
sub
sti
push
jae
out
loopne
push
arpl
and
xchg
push
sub
pusha
mov
decb
mov
in
push
repz
xorl
mov
sar
stos
and
and
lds
inc
mov
dec
mov
dec
xor
sub
jne
fildl
push
out
push
loope
movsl
lock
inc
orb
cltd
mov
and
mov
mov
test
sub
cmp
inc
xchg
add
push
mov
cmp
out
mov
mov
nop
cli
in
scas
cltd
fidivl
pusha
adc
inc
mov
dec
and
les
pop
xlat
daa
addr16
inc
sub
pop
fwait
mov
in
jp
arpl
push
inc
hlt
sub
andb
push
aam
and
sarl
fstl
sbbl
call
cmpb
arpl
cs
cli
mov
test
pop
jae
mov
xchg
loopne
or
lcall
js
xchg
mov
clc
jo
std
jnp
js
out
out
outsl
aam
fistpl
lock
or
dec
mov
sub
fistl
push
fistl
jns
jl
mov
xchg
add
rcrb
sub
icebp
fidivs
pop
xchg
fadds
stos
or
xor
add
and
in
loop
or
nop
adc
nop
ret
pop
push
mov
push
xchg
inc
shlb
je
addr16
cwtl
xchg
fmuls
repnz
dec
dec
enter
pop
mov
push
xor
jae
pop
leave
nop
lock
pop
cmc
adc
dec
cltd
and
push
mov
repnz
mov
or
jno
std
adcl
mov
pop
mov
push
daa
clc
lds
inc
sbb
push
stc
add
add
test
dec
popf
fsubrs
pop
loopne
lock
daa
adc
js
pop
andb
outsb
mov
test
jecxz
jb
mov
cmpsb
enter
ret
jo
adc
jne,pn
push
jnp
loop
dec
mov
push
or
adc
sar
jne
cmp
lret
sarb
lock
popf
push
mov
jmp
add
insl
add
push
adc
scas
jnp
out
sbb
insl
loope
mov
lcall
adc
jae
push
mov
mov
add
sub
notl
cmpsl
pushf
int
clc
and
pop
nop
cmp
fstpt
dec
lds
int3
pop
mov
cmp
pop
shll
int
sbb
sub
push
ss
cwtl
cmp
and
lea
aaa
push
pop
jmp
rcrb
test
sbb
in
jae
in
and
sub
xlat
hlt
and
fcmovbe
dec
das
lcall
mov
push
xchg
loope
jns
test
mov
dec
pop
fiadds
xor
lock
loope
imul
fisttpl
pop
inc
dec
mov
notb
lea
pop
dec
mov
push
inc
cmp
rcrl
xlat
dec
xchg
xchg
out
cld
jg
outsb
jnp
push
xor
dec
xor
dec
sub
and
shl
jb
icebp
mul
bound
cmp
jg
push
inc
scas
enter
ds
int
icebp
or
cmp
sub
jl
lret
inc
push
lods
leave
pop
mov
mov
xchg
cs
shlb
sbb
into
mov
cmc
gs
arpl
fmul
cli
fidivrs
pushf
out
mov
nop
or
ret
mov
xchg
jle
test
loopne
mov
mov
icebp
sub
mov
cmp
pop
cmp
mov
aad
push
adc
in
cmpsl
loop
jnp
jb
fnsave
lods
inc
nop
setne
mov
aad
loope
enter
lods
fsubl
insb
aas
nop
fwait
rcrb
lods
jmp
cltd
cmp
jne
jb
sbb
jge
cli
mov
cmc
sti
lcall
xchg
xchg
sub
cltd
les
xchg
and
mov
push
push
and
negl
xchg
xor
inc
call
fbld
inc
mov
pop
mov
xor
xchg
sarl
mov
adc
jbe
enter
lea
cmp
ret
pop
pushf
inc
and
pop
push
mov
mov
and
mov
add
pop
cmpsl
pop
mov
mov
pop
in
data16
jnp
push
popa
repnz
xchg
xor
scas
cs
xchg
or
mov
stc
lods
or
mov
ja
pop
rcll
mov
es
test
outsl
fimull
hlt
sbb
cwtl
int
push
call
mull
call
push
rcl
push
enter
inc
imul
fst
pop
fs
aaa
xchg
xor
pusha
push
jae
aam
adc
sub
stos
hlt
insl
jmp
adc
sahf
pop
pop
jl
sub
fs
cmp
inc
dec
repnz
ffreep
sub
jnp
mov
mov
lcall
jno
pop
iret
xlat
enter
xchg
call
adc
pop
add
pushf
testl
cmpsl
xchg
cmpsl
adc
jge
ret
xchg
jp
inc
mov
call
xor
sbb
lock
and
int
fs
repz
shlb
sahf
inc
cmpsb
cmpsb
movsb
js
ljmp
andl
xchg
andb
xor
popf
insl
add
lods
and
rcl
mov
push
aam
sbbb
add
and
sbb
mov
test
outsl
scas
pop
dec
fst
sbb
adc
push
das
test
jno
xchg
xchg
stos
dec
scas
cli
or
xchg
mov
jo
cmp
jp
sub
push
pop
cmp
jp
das
push
mov
jmp
scas
mov
push
shlb
data16
daa
loope
adc
push
mov
out
cli
out
andl
mov
adc
loop
in
loope
xchg
push
fimuls
dec
aam
mov
push
ret
cmp
cmp
add
xchg
lea
iret
push
call
mov
sti
xchg
andl
mov
aas
in
mov
fstp
push
mov
aam
out
mov
push
andl
mov
mov
sub
rolb
and
pop
cs
mov
loopne
xor
stos
cmp
shr
test
cmpsl
mov
dec
cmpb
mov
inc
rcl
mul
out
jg
push
imul
jno
xor
mov
shll
insb
xchg
cltd
mov
andl
push
sbb
ret
dec
adcb
push
stos
adc
push
lea
das
notb
dec
cmc
jp
stos
jecxz
gs
stos
ss
jae
cmpsb
cmpsb
mov
cld
jne
dec
popa
push
ret
lds
sub
into
mov
mov
mov
jb
pushf
pop
cmp
cltd
xchg
lret
loopne
lods
fisubrs
aam
xor
data16
xchg
shrl
rorl
test
mov
fldcw
in
outsb
mov
xchg
dec
int3
pop
imul
push
xor
jae
xchg
ljmp
xchg
clc
xchg
in
ror
and
adc
mov
pop
sbb
push
out
mov
add
idivb
mov
xchg
idivb
aam
ljmp
xor
or
sbb
movntps
sub
xchg
sbb
push
sbbb
imul
fisttps
daa
cmpsl
jle
mov
mov
xor
xor
pop
testl
push
sub
and
add
pop
sbb
dec
into
fwait
mov
and
xor
lea
call
xor
jge
es
mov
in
xchg
jb
loop
or
es
out
sbb
pop
imul
enter
les
ja
aad
or
pusha
jnp
ds
pop
test
outsb
pop
lret
loop
jmp
adcb
cli
sysexit
inc
test
inc
idiv
lea
loope
fidivrs
or
sbb
lods
es
or
int
adc
jne
adc
popl
cmp
jb
movsb
jp,pt
pop
xor
insb
imul
jnp
adc
dec
add
adc
mov
push
pop
xchg
push
dec
cmovno
mov
js
out
inc
mov
enter
cmp
int
add
stos
ret
or
xchg
adc
inc
xor
ljmp
scas
repz
mov
mov
pop
fdivrs
push
sbb
mov
cmp
sbb
or
push
xor
mov
mov
cli
sbb
pop
sti
mov
sub
pusha
adc
adc
and
push
mov
jnp
ja
or
pop
inc
cmp
cmp
jecxz
push
dec
mov
lret
cmc
fimuls
adc
ret
and
sbb
rcrb
mov
movsl
fisubl
jns
test
sub
aam
mov
mov
cltd
pop
fisubs
push
sub
stos
mov
ret
jnp
xchg
mov
lret
push
and
sarb
cmp
imul
xor
movsl
dec
sti
test
push
ss
push
adc
or
sbb
dec
sub
dec
clc
fadd
sbbb
idivb
jno
stc
leave
scas
add
cmp
add
xchg
rcrb
inc
js
mov
jnp
cmp
xchg
mov
and
add
xorb
push
mov
andl
test
pop
ja
sub
xchg
leave
jle
mov
mov
jne
dec
jae
gs
aam
aad
or
cmpsb
pop
mov
push
fld
inc
jae
mov
jnp
add
push
mov
out
cmp
pop
xor
or
outsl
repz
adc
jl
push
test
sub
mov
xor
push
mov
sti
ljmp
inc
sbb
pop
dec
lahf
jp
push
or
mov
sbb
bound
pop
xlat
negl
mov
pop
cmpsl
dec
sarb
xchg
add
mov
clc
pop
cwtl
push
lret
in
pop
and
aaa
push
iret
mov
lahf
subb
mov
addb
repz
inc
loopne
test
pushf
test
mov
xchg
shrl
cs
xchg
dec
pop
and
cmc
stos
push
jae
xchg
xor
xor
inc
push
xor
loope
mov
xchg
les
xchg
mov
push
icebp
adc
dec
insb
adc
out
mov
lret
stc
add
xor
or
cmovno
and
xor
add
xchg
push
mov
lds
add
or
mov
shrl
xor
hlt
push
push
pop
fsubrl
lahf
aaa
fldt
lods
cmp
fadd
push
push
adc
jge
inc
sti
dec
scas
mov
pop
pop
or
push
sub
shll
fcoml
popf
gs
push
inc
scas
mov
test
mov
pop
or
xor
sarl
and
xchg
popa
mov
dec
scas
dec
pop
pop
shll
sub
mov
mov
mov
pushf
or
loope
and
pop
test
movsl
and
lret
inc
rorl
inc
in
shlb
fstps
cmp
or
daa
pusha
xor
fisttps
pop
in
xchg
adc
int
jp
adc
xor
jne
push
loop
gs
pop
sbb
pusha
xor
and
leave
adc
jnp
add
xchg
push
mov
lahf
pusha
pop
mov
imul
jle
lods
sub
pusha
dec
mov
pop
inc
mov
add
or
sbb
jle
push
int3
icebp
mov
pushf
push
jns
loopne
inc
test
mov
pop
and
adc
mov
sbb
and
jmp
mov
inc
jge
jbe
mov
cwtl
jge
mov
or
or
mov
cld
sbb
jae
insb
mov
cmp
push
mov
and
xchg
lahf
arpl
push
cmp
aaa
movb
pop
mov
xchg
or
inc
mov
and
mov
scas
aad
cmp
test
inc
and
lret
mov
and
xor
icebp
add
cmc
in
sbb
fdivl
sbb
and
sbb
mov
xchg
sbb
jnp
or
cmpsl
mov
cmc
sub
cli
dec
jb
aas
ror
test
sahf
imul
bound
or
adcl
aam
xchg
mov
ffreep
push
mov
loop
loopne
or
shlb
pop
and
adc
repz
adc
rcrl
fwait
inc
js
scas
repnz
bound
pop
add
lret
fcoml
and
inc
ret
mov
add
data16
mov
lock
fwait
jns
rcl
mov
scas
sub
js
adc
das
stc
xchg
jle
mov
in
icebp
pop
and
lods
pushf
pop
call
stos
andb
mov
ret
inc
mov
sbb
cmp
xor
incl
cmpsl
addr16
push
pop
sbb
mov
jl
out
movb
mov
dec
daa
adc
rol
cmp
sub
test
adc
dec
es
add
dec
mov
cmpb
ss
bound
test
or
mov
cmp
je
cli
mov
push
jmp
xchg
repnz
jnp
les
dec
aas
cmpsb
push
push
push
push
jg
ljmp
aas
nop
shll
inc
push
or
mov
cmp
xlat
rcrb
inc
pushf
jmp
or
xchg
adc
pop
mov
xchg
add
jp
es
xchg
in
jo
iret
imul
inc
das
pop
adcb
push
or
inc
inc
and
inc
arpl
mov
mov
clc
xchg
lret
es
sub
out
dec
iret
int
mov
sahf
mov
cmpsb
jl
adc
outsb
incb
sub
push
orb
stos
adc
mov
sti
inc
xchg
shll
jnp
stos
xchg
mov
sbb
inc
adc
xlat
pop
test
push
arpl
push
pop
clc
mov
mov
lds
shl
dec
out
mov
lds
adc
cmp
lods
sahf
lcall
mov
and
xchg
pop
movsl
and
xchg
into
jecxz
test
mov
cwtl
enter
shll
aad
xchg
aas
dec
js
jae
dec
outsb
xchg
sahf
js
ljmp
mov
call
in
xor
xchg
lods
std
push
sbb
sbb
test
fs
cld
inc
or
jno
inc
rcll
daa
das
das
test
lcall
and
out
mov
pushf
loop
cs
mov
mov
lds
mov
mov
mov
cmc
fwait
gs
dec
adc
cmp
insl
aas
sar
scas
xlat
negb
sub
sub
mov
add
out
imul
lds
cld
add
clc
popf
fisubs
ret
pushf
rcrb
loopne
and
and
sbb
xor
test
cmp
dec
jno
pop
pusha
das
out
mov
in
orb
or
pop
adc
add
jmp
xchg
movsl
or
rcrb
mov
orl
aad
sahf
jbe
push
sub
movsl
repnz
inc
push
inc
jae
or
xchg
dec
xor
jp
pop
or
mov
jecxz
aam
cmpl
jmp
lahf
xchg
lock
add
cmp
stos
vprotd
pop
adc
mov
push
arpl
movsl
mov
jmp
inc
jle
movsb
sub
and
nop
sub
push
jg,pn
pop
mov
sbb
in
dec
lret
mov
add
pop
scas
imul
inc
push
loop
jg
jae
ret
inc
stc
adc
pop
xchg
or
sbb
mov
fneni(8087
icebp
int3
in
jno
jo
sbb
jo
mov
jno
ds
mov
push
loop
jl
adc
scas
lock
pop
pusha
popa
pop
jl
mov
aas
fs
cmp
imul
ja
add
ja
out
cwtl
cmp
popf
imul
nop
sbbl
movsb
jb
pop
cmp
mov
in
or
imul
or
push
leave
std
pop
jge
rorl
mov
mov
pusha
popa
clc
fsts
mov
movsl
xor
push
lds
inc
lds
test
sub
clc
adc
shll
inc
mov
stc
arpl
pushf
xlat
mov
xchg
lods
inc
daa
mov
dec
jp
test
mov
push
repnz
hlt
bnd
inc
out
add
push
lods
adc
into
scas
shll
sub
rorl
scas
mov
cmp
cs
jmp
popa
lea
call
add
add
dec
mov
pop
popf
inc
test
adc
dec
push
lods
lahf
xor
icebp
lret
push
or
bound
push
add
push
sub
fisubrs
mov
lahf
int
stos
jns
hlt
jmp
xchg
cmpb
xchg
cltd
lret
in
repnz
xor
lock
mov
imul
adc
cli
pusha
aad
outsl
push
fldt
loop
xchg
xchg
dec
stos
test
ficompl
rolb
movsb
mov
mov
adc
mov
scas
mulb
cmpsl
push
mov
cmp
loope
sahf
nop
adc
jo
xor
jnp
push
mov
popl
arpl
cwtl
ret
gs
and
xor
mov
mov
das
lds
bnd
mov
imul
mov
shrl
lret
testl
inc
xchg
mov
jp
lock
inc
jne
test
imulb
clc
xchg
and
dec
sub
xor
fadds
jge
pop
mov
sub
lock
push
pop
dec
or
push
dec
popa
cmpsb
std
mov
or
mov
test
andb
inc
push
lret
cmp
subb
shll
imul
cmp
sub
add
or
mov
lds
lock
xchg
fnstsw
push
push
cmp
stos
inc
pop
scas
cmp
jmp
xor
dec
pusha
test
xchg
outsl
push
popa
notl
and
xchg
push
mov
mov
or
insb
push
ret
rcrb
and
mov
and
or
enter
orb
imulb
dec
inc
cmpsb
push
dec
add
ror
or
mov
mov
or
cli
or
js
xchg
push
rclb
cmp
lea
aad
call
adc
mov
scas
push
mov
orl
add
cmp
mov
pop
mov
lret
mov
mov
call
push
icebp
push
xchg
xor
scas
push
push
add
pop
pop
jmp
push
cmp
stos
rorb
ret
push
push
lods
add
imul
cmp
ret
push
xchg
dec
xor
or
mov
mov
mov
mov
mov
cld
jmp
fwait
push
cmpsb
imul
stc
rcrb
push
xor
into
fwait
adc
mov
cmp
in
sbb
xchg
cwtl
sbb
pop
sti
jb
js
dec
jbe
lods
jp
push
divb
dec
mov
je
fistpll
iret
adc
push
adc
fiaddl
push
jns
test
ret
jbe
mov
pop
sub
setb
push
das
dec
dec
outsl
mov
sub
mov
sbb
mov
les
mov
xor
aas
push
js
jns
xchg
int
pop
repnz
insb
cld
pushf
pop
pop
adc
pop
sub
jno
cmpsl
ds
add
xchg
push
push
test
imul
lea
add
pop
sbbb
ja
and
lea
push
test
add
or
je
divb
or
dec
sub
fbld
lods
subb
cmpsl
or
insb
ds
xchg
cli
cli
int
adc
xchg
addr16
fadd
mov
lods
fisubs
jle
std
lods
lret
cld
xor
adc
in
jecxz
cmp
mov
push
fst
lret
push
or
insb
lds
notb
xor
je
ss
add
or
xchg
cs
sub
inc
or
out
es
xchg
cld
xor
lock
inc
mov
sahf
stos
fs
das
jmp
push
push
mov
lret
push
pop
inc
dec
lods
mov
fdivs
scas
or
push
jb
out
dec
mov
test
outsb
stc
lds
jo
mov
cmp
sbb
push
dec
subl
adc
je
sti
rcrb
icebp
push
sbb
push
pop
mov
dec
or
out
jnp
aam
xorb
or
and
cmp
add
mov
pop
repz
popf
adc
repz
jno
inc
outsl
test
push
or
add
xor
clc
push
bound
push
stc
xor
iret
ss
in
rcrb
push
add
mov
push
inc
pushw
movsb
pop
pop
mov
sub
pop
scas
xor
sarb
jge
cltd
popf
pop
int
xlat
dec
pop
or
loopne
or
out
sbb
movsb
pop
pop
outsl
jne
aas
sbbl
aaa
jge
insl
inc
aam
mov
loop
rclb
mov
xlat
adc
jo
movsl
pusha
test
pop
insl
rclb
and
inc
inc
jbe
dec
rorl
mov
rorl
push
in
lret
jecxz
adc
or
int3
insl
fwait
mov
inc
out
fimull
cli
scas
in
lds
loopne
fbstp
out
ljmp
push
pop
outsb
inc
fidivl
jns
and
cltd
movsl
push
popa
fiadds
out
sbb
stos
push
ror
mov
aaa
scas
or
inc
jecxz
test
adc
cmp
cmp
sbb
jp
jl
pusha
addr16
lock
ret
sbb
jmp
cmp
xchg
mov
repnz
test
mov
dec
inc
ficompl
xchg
pop
into
or
inc
ret
loop
xchg
push
testb
adc
push
push
dec
inc
rcrl
add
jp
mov
movsb
loop
jae
enter
jl
push
pop
rcl
push
dec
jb
imul
cmp
xor
fiaddl
out
sub
fisttpl
add
popf
inc
xchg
aaa
popa
sti
aaa
mov
cmp
dec
mov
mov
sub
add
pop
sbb
gs
and
xor
test
xor
or
sub
outsl
or
test
fistpll
in
or
fidivs
pop
shl
cmovns
and
fs
add
mov
mov
dec
lret
lret
or
das
mov
cwtl
mov
sub
cli
arpl
mov
nop
pop
mov
or
aaa
xor
test
sahf
movsb
mov
pusha
nop
das
mov
popa
fldcw
mov
orl
hlt
dec
aas
lcall
push
enter
pop
mov
mov
push
xor
lea
cmp
pop
ss
mov
push
xchg
data16
xchg
aaa
xchg
cld
daa
enter
cmp
mov
mov
push
repnz
dec
nop
jbe
add
leave
xchg
mov
sbb
fwait
jle
daa
sub
fmull
mov
fisttpll
loop
and
mov
int3
icebp
adc
xchg
mov
addr16
push
or
and
out
call
and
int
jo
lret
addr16
xchg
sub
jnp
lcall
mov
ret
xchg
pushl
push
idivb
test
sub
mov
dec
enter
test
jno
in
and
pop
push
dec
and
xlat
in
jo
fs
mov
dec
or
push
cmp
dec
mov
jmp
in
mov
test
negb
je
pop
loop
rorl
ljmp
je
in
and
imul
fucomi
loop
jp
or
outsb
xchg
adc
pop
xchg
mov
inc
mov
xor
jbe
xor
lock
pop
jg
xchg
add
sarb
jl
iret
fstpl
enter
mov
mov
movsb
andl
test
sub
fistl
xchg
xor
pop
stos
sahf
xlat
fsubr
mov
sub
jno
or
mov
xor
arpl
cmc
ret
pop
mov
aaa
jmp
idivb
cmp
and
adcl
jmp
mulb
loope
rcll
movhps
rcr
nop
add
out
lds
jl
test
jbe
imul
cltd
enter
jno
cltd
es
and
add
data16
cmpsb
into
xor
jne
imul
andb
cbtw
mov
dec
aam
mov
add
fadds
xchg
jge
sti
mov
inc
ret
pop
mov
inc
xor
and
adcl
fimull
insb
add
xchg
arpl
in
mov
enter
fldcw
subb
dec
test
mov
jno
cmp
jnp
shrl
or
mov
gs
filds
xchg
scas
lds
popa
adc
push
and
mov
jp
cltd
fsubrs
mov
pop
cld
push
jb
fs
mov
sub
shlb
loope
je
xchg
inc
inc
outsb
cmp
cli
cwtl
mov
or
pop
sbbl
jg
push
int
pop
pop
dec
test
sub
or
inc
xorb
notb
stos
add
test
or
clc
call
xor
xor
fdivl
and
shrd
movsl
xorl
pop
fwait
inc
fcmovnbe
ds
jns
int
xor
xchg
aad
jl
nop
jecxz
cwtl
pop
mov
push
dec
daa
lret
push
addb
ret
add
mov
cmp
mov
cwtl
jbe
dec
xor
je
push
fwait
and
loope
shr
lcall
cmpsb
xchg
fld
int
cvtps2pi
mov
pop
lods
addr16
push
popa
fs
addr16
lret
or
add
dec
pop
or
xlat
repz
shrb
insb
loope,pn
les
jmp
jne
das
mov
lret
xchg
int3
dec
xchg
test
movb
xchg
mov
dec
cmp
mov
xchg
adc
das
lret
cmp
push
pop
std
pop
repnz
xchg
pop
pop
adc
pop
fidivrl
pop
rolb
add
add
mov
push
lret
in
cmp
in
in
mov
enter
jae
orb
jo
jmp
cmpsb
inc
rorl
out
xchg
pop
scas
xchg
fidivl
ucomiss
arpl
push
dec
cs
or
push
mov
iret
inc
lret
or
push
loop
test
fnstsw
mov
jp
push
sbb
push
inc
cmpsb
pop
dec
sahf
dec
push
andl
imul
icebp
jbe
shlb
push
cmp
mov
ficomps
mov
cmpb
xor
sub
xchg
pslld
lods
pop
fldcw
movsl
mov
jmp
pop
xchg
or
and
les
cmp
jp
clc
or
nop
mov
or
test
scas
adc
das
pop
jns
sbb
mov
mov
pop
push
jb
xor
jb
pop
les
inc
pushf
aas
cld
stc
adc
jmp
adc
out
lahf
fcomip
inc
aas
aam
adc
sbbl
stc
call
or
decb
or
jbe
dec
inc
fstps
mov
fcmovb
push
out
rolb
mov
stc
adc
jg
or
add
fmull
jo
lock
mov
sti
lahf
inc
xacquire
ret
pop
rol
or
xchg
mov
cld
jmp
push
jmp
jl
mov
mov
xchg
fcompl
and
aad
rclb
pop
jecxz
adc
push
addb
mov
outsl
mov
xchg
roll
inc
push
push
test
divb
cld
dec
stos
loope
or
xchg
xchg
mov
cwtl
in
dec
mov
sbb
pusha
pmullw
add
scas
jbe
icebp
sbb
lods
mov
inc
bound
cmp
outsl
mov
fcmovnb
ss
fcompl
lods
in
orb
dec
adc
pusha
push
test
mov
mov
add
fildl
and
call
xchg
sbb
inc
jno
cmpsb
cltd
xchg
cmp
rolb
push
sbbb
int
push
xor
adc
cmp
int
push
cmpsb
inc
adc
or
jns
enter
std
dec
jle
js
sub
orl
cmp
movsl
fwait
scas
pop
lret
add
dec
fistl
dec
lret
fldcw
iret
add
ficomps
pop
loope
dec
mov
and
mov
daa
jae
push
scas
push
xchg
add
cmp
mov
jns
addr16
or
scas
mov
stos
imul
sarb
dec
arpl
movsb
and
lock
or
jns
enter
xchg
pop
lahf
arpl
sub
inc
ss
dec
movsb
cmpb
push
xor
and
test
xor
addr16
in
outsl
mov
dec
add
cmp
rcll
xlat
imul
pusha
mov
xor
imul
mov
in
mov
mov
dec
pop
adc
adc
mov
enter
xor
cwtl
adc
inc
scas
stos
mov
jno
or
cmp
and
lret
leave
imul
mov
in
adc
fisubrl
push
cmpb
cmp
out
movsl
inc
push
gs
inc
and
cmp
test
adc
bound
sub
mov
xchg
and
hlt
dec
mov
and
call
push
call
data16
fisubrs
push
ret
pusha
sub
cmpsl
inc
xor
out
jno
jae
repnz
sar
cmpsl
stc
mov
xchg
mov
mov
sahf
aam
cmp
xchg
and
shr
std
xor
nop
or
push
mov
cld
out
mov
xchg
sbb
mov
mov
loope
cmpsb
sbb
push
sbb
pop
push
lods
rolb
rclb
mov
out
das
sbb
enter
ret
in
mov
inc
inc
add
mov
daa
test
adc
lret
jmp
sbb
sub
shrb
insb
pop
dec
pop
xchg
scas
pop
and
int
in
mov
aad
sbb
push
mov
out
adc
lods
pop
inc
popa
dec
mov
add
test
mov
test
dec
out
outsl
mov
and
sbb
test
pop
sub
mov
mov
pop
loopne
sub
push
xchg
mov
fmull
xchg
adc
jnp
and
jne
pop
mov
jl
mov
mov
inc
fidivl
and
popf
or
cmp
jle
loop
push
rcr
sub
adc
cwtl
jmp
stos
or
pusha
and
mov
push
push
push
push
push
or
inc
loopne
adc
pop
and
in
popa
push
cmpsl
cmp
rcll
lods
push
rorl
pop
sbb
loop
mov
fwait
sub
aas
xorb
mov
enter
xchg
lea
sub
sub
sbb
pop
or
adc
movsl
push
push
adc
xor
cmp
pop
cmp
sub
add
and
popf
out
dec
cld
and
push
stos
pop
mov
xor
test
add
lds
sub
mov
mov
outsb
cmp
rorl
pop
in
out
sti
ret
pop
jne
fisttpll
dec
cmc
int
lods
or
pop
mov
repz
adc
jecxz
ja
and
jne
jnp
out
or
xchg
adc
push
imul
mov
jecxz
mov
stos
or
and
dec
push
jp
xor
jae
push
loopne
movsb
scas
es
or
and
loop
sub
adc
outsb
jns
xchg
adc
xchg
movsl
jecxz
lahf
and
test
mov
outsb
mov
in
xchg
push
xor
mov
sbbl
inc
aam
mov
mov
push
add
orl
std
xchg
mov
xchg
nop
fidivl
pusha
push
jns
push
out
pop
inc
sbb
fisubrs
js
xchg
dec
xchg
mov
and
sti
mov
mov
jmp
movsb
mov
je
jmp
iret
xchg
daa
xchg
out
add
mov
testb
testb
shrl
arpl
sub
or
ja
stos
aam
or
out
pop
adc
sahf
clc
lret
ljmp
insb
cmp
jge
add
sbb
mov
cs
pop
inc
pop
sub
xchg
pushf
arpl
lods
push
jne
pushf
into
push
jae
jp
push
cmp
lcall
sbb
mov
cmc
fstl
pop
faddp
repnz
lods
sub
xchg
imul
mov
shll
arpl
push
sub
nop
je
cmp
mov
push
cmpsb
mov
add
jbe
lcall
shl
ret
jge
mov
inc
cltd
push
push
cs
ljmp
push
repz
scas
ds
adc
jb
icebp
sub
cltd
adcb
mov
mov
mov
jno
test
jne
sub
sti
loope
rclb
hlt
dec
add
push
subb
xchg
ljmp
call
into
xchg
adc
cmpsl
dec
pop
mov
das
and
pop
int
jns
pushl
ss
ret
pop
pop
movsb
inc
ss
les
dec
fwait
lds
xlat
mov
add
out
insl
mov
dec
inc
fcomip
xor
cmc
xchg
adc
push
imul
push
incb
inc
mov
or
loope
sbb
adc
xchg
pop
push
sbb
jecxz
rcll
add
and
sbb
or
cmp
mov
adc
roll
popa
push
push
cmp
pop
mov
mov
xchg
add
inc
xor
adc
pop
int3
sbb
mov
cmpsl
das
cmp
jle
jbe
lock
rcrb
cmpsl
jle
lcall
xchg
mov
adcl
jns
sahf
adc
fwait
scas
sub
and
dec
and
lcall
out
xchg
lcall
dec
push
adc
mov
or
in
push
push
add
ja
xlat
cmp
sub
xchg
data16
cmp
movsl
fs
addr16
cwtl
and
movsb
push
fwait
sbb
lock
pop
lret
rcl
mov
out
adc
scas
push
cld
sbb
sti
enter
pop
ljmp
dec
or
mov
cmpsl
xor
gs
rcl
shlb
test
leave
sbb
pop
sbb
aaa
aad
add
push
out
pop
jae
popa
fwait
movsb
adc
and
clc
xchg
jne
cmp
int
pusha
mov
xchg
rcr
mov
pop
je
mulb
and
imul
int
push
jge
cmp
push
or
sbb
mov
sbb
jg
in
push
lods
dec
adc
ror
mov
jl
out
pop
lahf
pop
sarl
bound
cmp
stos
lret
nop
fcmove
push
mov
out
in
jmp
pusha
push
ljmp
xchg
mov
out
jnp
mov
inc
test
cmc
mov
lcall
inc
jnp
daa
push
pop
ljmp
add
cmpsb
lcall
sbbb
cmc
loope
push
mov
jmp
or
cmpsb
mov
xchg
sbb
push
lcall
xor
icebp
mov
pop
xchg
mov
pop
xabort
push
lds
xor
roll
int3
repnz
movsl
aad
scas
dec
push
mov
mov
sti
int3
std
mov
jno
pop
mov
out
stos
push
cwtl
xchg
cld
dec
push
int3
fsubl
sub
fs
push
dec
mov
das
iret
sub
dec
xchg
cmc
add
scas
rolb
lock
sbb
ds
rcll
push
sbb
mov
jo
hlt
add
add
mov
cmp
popa
mov
mov
loope
sbb
adc
andl
test
fstl
fxch
bound
in
repz
lret
insb
frstpm(287
les
xor
sbb
pop
test
aad
sub
cmp
subl
add
lock
rorl
aaa
cltd
fistpl
add
stos
fisubrs
sbbb
int
jae
adc
pop
je
cmpsb
mov
ret
mov
or
sti
sub
dec
arpl
sbb
dec
mov
leave
mov
sbb
sbb
inc
cmp
movsb
mov
inc
adc
dec
cmp
sahf
inc
aas
imul
xchg
pusha
nop
ja
mov
loope
sahf
scas
sahf
scas
out
subb
ds
sarb
pop
and
imul
sbb
ljmp
aam
cli
divl
icebp
std
inc
bound
jle
sti
sbb
mov
loopne
sbb
jl
and
xor
sub
and
imul
arpl
mov
push
inc
xchg
and
aad
or
sbb
imul
pop
xchg
lds
sub
pop
sbb
push
clc
ja
je
jno
mov
or
xlat
out
ss
popf
orl
push
mov
loopne
mov
inc
cmpsb
jb
sbb
sahf
mov
xchg
cmc
lods
jne
je
pushf
shlb
xchg
jmp
push
mov
mov
lret
cmp
xchg
mov
xchg
std
das
ficoms
cmp
push
ja
bound
gs
mov
or
roll
push
jae
push
mov
fistpl
ret
popa
pop
cld
sub
sbb
xor
lahf
icebp
stc
icebp
add
add
mov
insl
adc
test
out
mov
inc
push
xor
mov
rcrb
les
mov
out
dec
jl
add
sar
negb
inc
push
cmc
or
daa
sbb
aam
pop
pop
push
mov
jmp
insl
xchg
inc
sub
xchg
xchg
add
adc
pop
lea
outsb
add
ret
or
sti
fcoms
dec
mov
adc
sar
xchg
jb
mov
loopne
jecxz
push
mov
or
mov
cmpsl
out
xchg
rcl
xor
inc
les
test
into
add
sbb
or
jae
sub
pop
or
push
sbb
push
notl
sub
adc
mov
dec
hlt
adc
icebp
pop
mov
aam
and
pop
and
in
aad
fcmovu
lcall
cmpsl
popf
and
mov
xchg
cmp
xchg
sub
mov
xor
jne
sub
sub
fildl
add
mov
js,pn
mov
dec
daa
cwtl
fcoms
aas
mov
jbe
loope
xor
sar
mov
cmp
andl
mov
pushf
lods
inc
test
xchg
rcrb
adc
ror
int
in
iret
sub
cmp
ret
vprotw
dec
dec
das
stc
push
mov
mov
cwtl
mov
or
jge
jno
leave
sbb
icebp
fists
cmp
or
dec
daa
push
xor
jns
xchg
xchg
or
or
sbb
cmp
pop
pop
mov
mov
cmpsl
nop
jns
leave
addr16
push
or
lods
pop
jb
inc
xchg
jp
pop
lret
and
into
cmp
mov
imul
push
arpl
mov
fadd
pop
cmpsb
jl
daa
mov
adc
or
leave
xor
movsl
xchg
fsts
mov
icebp
movsl
mov
movsb
test
into
push
xchg
push
xor
pop
xchg
and
mov
test
insl
aad
fidivrs
pop
aas
ret
clc
jbe
fisubrs
xchg
idivl
cs
dec
inc
out
xchg
xor
in
scas
mov
filds
imul
pushl
daa
mov
incb
outsl
aad
daa
inc
sbb
mov
shr
pop
iret
xor
rcrb
insl
icebp
movsl
sti
lds
xchg
stc
out
mov
mov
clc
xchg
clc
lds
ret
pop
fcompl
pop
sub
pop
push
fsubl
mov
jnp
xor
mov
adc
pushf
scas
adc
sbb
push
ljmp
rcrl
hlt
adc
mov
pop
fbld
jg
adc
ljmp
mov
mov
jns
xor
push
xor
cmp
push
mov
cwtl
sbb
add
push
sarl
aam
fwait
xor
stos
xlat
xchg
add
testb
mov
test
filds
and
jge
in
push
scas
inc
add
cs
pusha
lret
fs
test
sbbb
aam
mov
cltd
or
xor
sub
sbbl
lds
ds
ficomps
and
mov
call
cmp
loop
xor
jae
sti
pop
or
scas
cs
lods
xchg
or
loope
test
push
push
pushf
cli
mov
mov
aas
sbb
daa
dec
fidivrs
idivl
insb
mov
dec
loope,pn
push
pushf
pop
fnstsw
cmp
cmp
jns
adc
sbb
and
loope
push
add
cwtd
adc
sbb
std
and
stc
stos
jmp
push
in
mov
pop
jns
in
mov
push
jns
scas
nop
je
lock
mov
arpl
or
push
enter
push
or
in
xlat
mov
jne
cmp
pop
aaa
jae
je
mov
test
hlt
gs
cwtl
icebp
aam
mov
mov
xor
sbb
hlt
and
and
and
and
and
loope
jae
loop
out
add
and
popf
jne
nop
xchg
ret
jge
push
push
cli
arpl
mov
stc
mov
xor
cmp
shlb
sti
out
sub
cmp
and
aas
lea
adc
sub
and
add
int3
or
pop
cli
jae
outsb
cmp
inc
loop
push
xor
add
xor
inc
mov
dec
repnz
add
aaa
jg
and
in
mov
cs
pop
ss
lcall
stos
fwait
and
mov
xchg
cmp
stos
add
jle
lock
rcll
mov
int3
lcall
xchg
cmc
int
add
aas
inc
cmpsl
fdiv
mov
and
mov
cli
push
lock
push
adc
mov
movsb
loope
pop
aaa
xchg
cmp
mov
iret
mov
fcmovnbe
out
pop
mov
cwtl
dec
or
out
mov
mov
cmp
popa
loope
sub
fucomip
outsl
sarb
or
out
cs
outsl
push
mov
out
sbb
call
test
mov
out
xor
cli
mov
int3
adc
mov
cli
mov
pop
addr16
rep
push
inc
sbb
ds
adc
testb
lret
jno
mov
call
dec
in
bound
mov
imul
in
cmp
jne
sbb
pop
push
xlat
cmp
push
push
push
mov
ds
and
insb
gs
rcrb
outsl
fisubl
sub
ficomps
push
pusha
lret
xchg
lea
cltd
loope
test
adc
mov
or
je
cmp
std
int
call
inc
sub
loop
subb
pusha
xchg
lahf
jns
mov
cwtl
mov
sub
lcall
or
test
cmp
jmp
push
outsb
mov
addr16
mov
loope
pushf
mov
mov
loopne
pushf
xchg
jmp
repz
push
arpl
mov
mov
mov
sbb
add
std
test
fidivl
insb
pop
mov
imul
add
je
jno
rolb
lds
pop
addr16
dec
pop
lock
in
mov
aas
les
jns
pop
mov
pop
add
lock
loop
push
sbb
or
daa
dec
mov
pop
jmp
xchg
in
scas
mov
mov
add
imul
sbb
mov
pop
dec
xchg
aam
out
cmp
mov
gs
call
cmp
dec
mov
mov
jno
testl
or
inc
mov
jne
push
mov
pop
adc
xorl
out
loop
mov
rorl
adc
loopne
push
lods
and
mov
sahf
jns
fwait
push
out
call
in
lods
out
out
dec
inc
in
enter
xchg
push
and
cmp
jmp
addr16
dec
xchg
int3
cli
ret
in
sub
clc
outsb
add
mull
pop
test
add
scas
lea
in
int
adc
idivb
xchg
xor
cld
test
mov
sbbb
movsb
aas
inc
loope
fstp
popa
loop
ja
js
aas
jmp
sbb
jl
scas
cmp
out
xchg
orl
adc
jb
sub
push
jns
or
dec
sahf
jmp
pop
cmc
test
jne
les
mov
imul
sahf
mov
adc
jne
mov
adc
sub
pop
ret
push
inc
xchg
mov
add
mov
stc
imul
aaa
fwait
mov
cs
sub
shl
call
iret
mov
push
pop
pop
adc
push
push
cmp
cmpsb
mov
xor
adc
movsb
jae
xorl
xor
xchg
xor
lret
pop
cmc
push
pop
inc
shlb
xchg
int
or
fwait
lret
cmp
xchg
cmp
test
sub
push
ja
add
out
fdivrp
jecxz
std
mov
cmp
inc
adc
pop
sarb
int3
and
xchg
bound
xchg
xchg
je
lahf
jo
xor
pushf
std
mov
int3
pop
xlat
mov
or
movsl
imul
mov
fcoms
je
cltd
ds
cli
ljmp
insb
in
jno
outsb
mov
mov
pop
bound
jl
inc
movsb
repz
out
cmp
mov
and
adc
std
mov
lods
mov
add
add
shl
lahf
sub
popa
mov
sbb
and
adcw
fsubr
pop
xchg
repnz
test
and
or
mov
mov
std
testb
sbb
or
dec
push
decl
lret
mov
xor
sahf
lock
outsl
cmp
fistpll
cli
in
and
adc
hlt
or
add
imul
fcomps
mov
aad
mov
fisubl
fwait
dec
xor
sub
outsb
repnz
cs
inc
arpl
mov
imul
arpl
sbb
testb
mov
sub
pop
fnsave
xchg
add
stc
rclb
and
inc
outsb
add
test
rorl
test
dec
shrb
xor
loop
and
mov
xchg
mov
cmp
enter
push
out
jo
xlat
sti
cwtl
add
and
pavgw
or
cmpsl
pop
add
cmp
cmpsl
cmc
inc
and
ds
cmp
or
or
lds
bound
imul
xor
enter
push
push
or
adc
stc
mov
sar
fmuls
jle
inc
flds
dec
mov
mov
dec
imul
cmp
jmp
ficompl
sub
add
inc
push
lahf
int3
xor
out
rcrl
jne
clc
lock
popa
ja
cmpb
lahf
jp
jmp
pop
sar
ss
in
movsb
scas
xchg
xor
or
repz
and
or
cltd
sahf
xor
mov
mov
in
pop
mov
les
mov
pop
adc
arpl
pop
dec
out
push
mov
mov
sub
add
jge
daa
cmp
es
pop
negl
sti
cmpsl
setle
mov
add
xor
cli
jge
fists
daa
xchg
add
les
gs
cs
mov
sbb
lret
std
loope
push
movsb
pop
scas
or
loope
fidivrs
mov
jae
and
jp
scas
inc
popf
push
jle
pop
shr
add
rcrb
push
mov
pop
inc
jl
repnz
pop
in
and
xor
ret
subl
xor
inc
cmc
or
mov
cltd
mov
mov
or
pop
mov
fs
mov
cmc
fs
addr16
cmc
jp
mov
cmp
mov
aaa
sub
and
lcall
adc
xor
arpl
fsts
add
pop
clc
cs
icebp
jnp
nop
jg
lods
test
cmpsl
sub
imul
mov
jnp
fdivs
mov
insl
or
pop
das
repnz
negl
pop
xorb
in
stos
pusha
pusha
out
mov
ss
out
sub
pop
insb
rcrb
adc
popf
pop
jmp
xlat
test
out
jecxz
mov
and
insl
orb
or
pusha
mov
cli
icebp
pop
jb
and
pushf
inc
cmpsb
and
add
shl
hlt
push
in
or
mov
aam
ds
dec
inc
jge
push
loope
sti
faddl
int
mov
fwait
jno,pt
orb
lret
dec
loop
jo
addb
push
push
push
dec
data16
iret
xor
sbb
jne
ret
sub
ljmp
imul
jo
repnz
push
rolb
daa
xchg
popa
inc
mov
mov
mov
cwtl
cmp
sub
int3
xor
loopne
mov
xchg
sub
test
test
jp
mov
leave
mov
add
mov
inc
dec
jge
mov
dec
bound
jmp
push
jns
mov
inc
out
mov
sub
cmp
in
lods
mov
orb
sub
mov
imul
inc
xor
lods
sbb
push
int
inc
rcrl
xchg
popf
mov
test
mov
sarb
cmpsb
sbb
add
dec
dec
jnp
enter
in
daa
and
enter
jns
cmpsb
inc
sub
icebp
inc
xor
sbb
lret
cmpsb
mov
mov
into
gs
or
lret
lods
lcall
fnsave
sub
shrl
mov
enter
dec
push
lret
icebp
ss
add
push
inc
ret
in
dec
sub
outsl
jl
sbb
inc
cmp
jbe
jbe
xlat
scas
jl
bound
subl
and
test
jne
xchg
push
add
inc
xchg
adc
stos
mov
xor
mov
ds
je
cmp
loop
test
loopne
rcl
pop
stos
dec
push
dec
jle
outsl
dec
insb
dec
les
inc
mov
mov
sarb
fstpt
outsl
push
cld
sub
sbb
les
cli
and
mov
and
or
insl
pop
adc
xor
fs
jp
xchg
push
rcl
push
or
mov
roll
push
outsb
pop
ror
inc
icebp
outsb
sub
cwtl
sti
notl
inc
xchg
fwait
adc
cltd
mov
enter
cmc
sub
xor
nop
sbb
and
in
movb
xchg
mov
fbstp
repz
test
les
fldl
ljmp
lret
ds
add
mov
mov
and
inc
add
pop
int
pop
mov
arpl
add
adc
mov
pop
enter
and
cmp
call
inc
adc
aam
inc
fmull
cmp
icebp
call
or
xchg
adc
jmp
mov
push
sti
or
imul
nopl
loope
stc
movb
cmpsb
cmpsb
lret
test
add
stos
ret
jb
pop
push
push
ret
add
or
subl
cmp
jns
popa
ret
xor
and
jnp
adc
or
aad
loop
das
jae
fsubl
rcrb
rol
mov
xchg
cmp
xchg
push
andl
mov
pop
cld
add
pop
and
andl
xchg
pushf
push
jp
enter
pop
sbb
jecxz
imulb
call
adc
test
sub
scas
mov
sbb
jmp
addr16
dec
cmovle
inc
add
xchg
xchg
mov
sbb
xchg
popa
or
mov
inc
xor
dec
pop
pop
in
ds
sbb
push
xchg
sub
push
sahf
sub
ficoml
add
popf
sub
xchg
daa
jp
and
or
fiaddl
shll
insl
dec
es
ss
lret
mov
inc
add
jne
mov
enter
lea
dec
test
rcll
js
mov
aam
mov
into
enter
and
pusha
cmpsb
mov
pop
imul
and
jae
inc
mov
stos
incb
push
jecxz
int3
cld
and
ss
ljmp
test
fistpll
in
mov
mov
xbegin
push
jp
mov
aaa
inc
pop
repnz
cmpsb
push
cmp
or
cmp
pop
into
ja
mov
ja
lods
jo
lods
out
mov
dec
push
fisubs
pop
mov
iret
jae
push
out
inc
ret
pop
mov
mov
mov
ljmp
popa
aam
movsl
lret
in
pop
cmpsb
xchg
push
outsl
sti
scas
xchg
insb
das
cltd
ds
add
lcall
filds
inc
es
lods
or
std
inc
cmp
cld
imul
jns
mov
aaa
aad
pop
popf
and
imul
in
jo
mov
sbb
test
push
dec
aam
inc
out
and
sbb
wbinvd
mov
cltd
lea
xchg
into
pop
mov
mov
imul
sbb
jmp
push
or
dec
mov
pop
xor
jns
js
fidivrs
and
push
mov
adc
cmpsb
mov
xor
test
aad
gs
xchg
movsl
iret
push
jmp
cli
out
cmp
ljmp
jns
jle
addps
outsl
lret
adcl
fs
fiadds
insb
pushl
les
and
xchg
enter
dec
mov
sub
cltd
cld
push
test
mov
push
inc
and
cmp
mov
xor
dec
pop
fmull
jno
or
xor
xor
sbb
mov
loopne
outsl
push
leave
arpl
cmp
cld
movsb
push
stos
movsl
insl
push
sbb
xchg
pusha
mul
les
loope
scas
jmp
jno
int
iret
pop
mov
cmpsl
push
mov
inc
mov
jg
hlt
pop
inc
mov
sub
out
out
fisubl
cmp
sbb
inc
push
sbb
push
aam
pop
adc
enter
mov
mov
push
arpl
dec
xor
xchg
inc
xchg
sbb
pop
xchg
inc
mov
adc
sub
mov
sub
test
or
lcall
fsubrl
movsl
sets
in
cmpsl
adc
enter
xlat
jo
dec
fwait
add
pop
lea
jo
mov
add
scas
fsubs
iret
imul
dec
out
push
mov
scas
push
int3
push
rcll
and
cmpsb
mov
jle
mov
pop
ret
lods
call
in
pop
and
xor
hlt
xchg
into
insl
iret
cmp
cld
test
scas
sub
mov
mov
add
push
push
jne
cwtl
add
pop
sbb
push
shlb
mov
and
inc
je
lock
aas
ficomps
push
loopne
in
incl
fcomps
fsts
iret
adc
scas
loop
hlt
adc
or
pop
repnz
out
popa
mov
orl
or
add
cmpb
insb
outsb
push
cld
mov
aam
push
and
iret
outsl
in
ljmp
mov
push
insb
stc
les
js
xor
js
mov
pop
sbb
add
addr16
insl
outsl
aad
or
popa
fwait
xchg
sti
stc
sbb
out
and
ret
xchg
add
sub
push
add
jno
inc
inc
mov
add
cltd
mov
push
fwait
inc
xchg
and
push
lea
mov
jl,pt
mov
decl
mov
ret
xchg
arpl
ds
push
mov
gs
push
movsb
ret
cmp
sbb
adc
xchg
xchg
mov
push
mov
push
fwait
in
jne
ret
repz
mov
rdmsr
xchg
cmp
out
mov
xchg
push
inc
nop
xchg
insl
loop
push
adc
inc
scas
shll
add
mov
add
pop
dec
popf
add
cmp
dec
sbb
sub
push
add
jge
int
xchg
inc
call
push
pop
imul
idivb
repnz
pushl
stos
ds
add
loope
xlat
jmp
push
dec
adc
sub
fcoms
sbb
mov
fistpll
std
aas
add
lret
stos
scas
fldcw
pop
mov
mov
jg
mov
in
push
gs
nop
mov
xor
and
mov
in
pusha
dec
jg
cltd
inc
inc
xchg
adc
inc
shlb
push
loopne
push
jo
mov
and
test
mov
aad
mov
and
jns
lea
cld
jl
shlb
cltd
jne
repz
popa
std
mov
in
addr16
add
sub
mov
shlb
dec
sbb
mov
dec
add
push
push
ljmp
xchg
call
add
inc
mulw
dec
into
lods
sbb
adc
sbb
or
or
jns
jl
mov
lods
jae
movsl
xor
aas
dec
fnstsw
fdivl
pop
pushf
ficoms
sbb
cmpsb
xchg
mov
mov
cli
mov
lret
mov
mov
cmpsb
shufps
inc
pop
dec
mov
sbb
in
dec
aaa
test
bound
xchg
dec
out
push
mov
shl
aas
cmp
leave
xchg
mov
mov
mov
jle,pn
add
add
fcmovnbe
adc
pop
pusha
addr16
call
add
xchg
int3
das
xor
pop
mov
out
push
lret
pop
fimuls
dec
push
movb
pop
cmp
out
cmp
mov
in
jg
incl
and
test
lods
adc
call
int3
push
aas
stos
aaa
sub
inc
iret
stos
add
or
xchg
mov
xor
add
dec
stc
shrl
ja
and
roll
movb
adc
stos
mov
xchg
mov
mov
mov
xor
or
jo
push
adc
pop
leave
fcmovnu
mov
push
mov
and
jno
negl
or
and
and
add
fwait
push
xor
adc
inc
out
dec
out
test
cmp
scas
cmp
push
adc
push
xor
addr16
mov
test
xor
or
int3
cs
pop
push
insb
jnp
int
cwtl
add
mov
adc
lea
jns
fdivrl
push
mov
adc
enter
mov
jecxz
adc
shrb
dec
aam
stc
shll
cltd
mov
pusha
mov
add
lods
hlt
mov
xor
test
inc
notb
pop
rolb
icebp
xchg
dec
pop
lcall
or
arpl
push
mov
sub
leave
sbb
pop
or
loope
push
push
je
sub
or
pop
xchg
xchg
cmp
lar
cmp
sub
pop
dec
dec
pop
stos
cmp
aad
or
shrb
pusha
add
push
and
test
pop
jg
cli
cmp
sbb
xchg
mov
in
rcrl
sbb
or
fbstp
mov
xor
inc
repz
add
stos
jb
mov
push
pop
into
and
sbb
cltd
inc
push
push
sub
inc
mov
sub
cltd
and
xchg
cmpsl
imul
jbe
pop
inc
mov
sub
fsubrl
jle
movsb
ret
repz
mov
dec
ret
push
mov
sub
fsts
sub
ja
cwtl
sub
xor
mov
push
sbb
push
jae
pop
aad
jmp
mov
aas
adc
push
lcall
test
xchg
and
and
mov
jno
sub
aaa
daa
mov
push
mov
cmp
out
jmp
xchg
sub
push
adcl
lods
in
push
adc
loope
stos
push
push
xchg
rorl
cltd
fdivrs
jmp
adc
sbb
loop
orl
sub
cwtl
and
mov
jl
andl
addr16
into
inc
xchg
mov
sub
ficompl
pop
add
push
call
ret
or
mov
repz
mov
push
or
or
insb
adc
mov
jp
pop
inc
paddsw
rol
mov
call
fsubr
sahf
cld
jb
fldenv
xor
jbe
xchg
dec
jmp
mov
sub
xor
mov
or
xchg
lods
and
movsl
iret
xchg
movsb
add
xor
lea
mov
das
push
jp
mov
inc
outsl
das
pop
and
jb
push
sbb
pop
mov
mov
pop
xchg
cmp
adc
or
and
stos
inc
or
jmp
arpl
lcall
test
xchg
loopne
jae
stc
lret
sahf
mov
push
lret
lahf
mov
std
call
gs
cmp
dec
and
iret
fldcw
jecxz
pusha
lret
repnz
lret
sbb
lea
jecxz
mov
sub
push
dec
push
es
xor
enter
pop
or
adc
sub
mov
jb
daa
aas
outsb
fadds
add
loope
inc
push
cmp
push
inc
ret
inc
jmp
sub
and
jns
mov
mov
int3
insl
cs
and
movsl
cmp
mov
dec
pop
icebp
xchg
and
mov
fistl
and
adc
js
dec
xor
xor
loopne
mov
stos
dec
fwait
xchg
aaa
lcall
and
sbb
jae
call
xor
mov
loop
mov
clc
pop
inc
add
in
sub
sbb
pop
les
lahf
sbb
iret
pop
jno
add
js
js
xchg
and
push
fstps
cltd
test
mov
jo
out
pushf
sub
dec
adc
js
fdivs
jbe
out
imul
sub
adc
ds
stc
sbb
ljmp
cmpsb
mov
out
test
out
cmc
ret
and
rcrb
or
js
pop
xor
xor
jg
mov
fsub
push
xlat
push
sub
xlat
push
stos
cs
arpl
scas
xchg
dec
mov
ja
popf
in
lcall
lahf
outsb
sub
pop
mov
inc
pop
ljmp
repz
ret
out
fldt
imul
data16
rclb
mov
fwait
lods
adc
sub
sahf
or
or
movsb
dec
inc
inc
lcall
leave
xor
ss
xor
dec
cwtl
mov
xor
mov
lahf
mov
mov
lods
push
arpl
sub
int3
mov
sbb
fildl
imul
mov
dec
fcoml
daa
dec
es
push
adcl
arpl
add
push
jmp
jmp
and
cmp
mov
out
ret
pop
ret
das
mov
or
ss
push
push
cltd
mov
jno
sahf
sbb
mov
leave
and
inc
mov
cld
int3
xchg
mov
add
test
inc
and
xchg
insb
ja
std
out
in
repz
push
dec
add
mov
pop
sbb
and
add
sub
adc
movsl
sar
mov
inc
and
push
out
jbe
fdivr
movsl
lds
mov
gs
inc
lods
jne
pop
mov
push
mov
push
cmp
ret
xorb
loop
aas
out
lcall
nop
inc
add
enter
outsl
mov
and
sub
mov
dec
mov
push
ja
stc
add
pop
and
push
mov
xchg
je
mov
jmp
and
js
add
std
loope
xchg
stc
jbe
jno
xchg
aaa
ja
add
xchg
leave
shl
outsl
mov
loopne
imul
lock
mov
stos
jae
aad
call
inc
rorb
mov
pop
js
push
bound
aad
or
push
adc
mov
out
push
popf
in
mov
and
pop
mov
push
rolb
in
js
pop
outsb
sub
out
inc
sahf
aam
negb
or
outsl
fsubp
xchg
or
cwtl
xchg
lret
dec
sbb
bound
push
clc
repnz
jp
fistpl
test
lret
mov
and
aam
mov
add
jae
mov
cli
or
es
add
les
int
cmp
gs
mov
mov
dec
test
js
xchg
imul
push
rcrl
loop
movsb
sarl
lds
pop
popf
pop
cmpsl
bound
jle
js
popf
movsb
xchg
data16
jo
inc
rclb
add
insl
sbb
lret
xchg
aam
and
pop
add
cwtl
insb
jg
xchg
fstpl
jecxz
in
icebp
adc
push
ret
jecxz
dec
xor
lret
cs
adc
adcl
xor
mov
jb
repz
cmpb
fstpt
and
sub
xchg
cltd
cld
and
push
aam
jl
xor
and
in
cltd
mov
inc
scas
jno
jp
add
cltd
call
in
or
jne
jne
pop
mov
inc
pusha
push
push
fcomip
jg
idiv
rcll
jb
push
inc
mov
insb
in
push
imul
call
mov
scas
mov
lret
sar
lret
sbb
std
leave
lret
in
dec
testl
sbb
imull
aam
jg
in
mov
sbb
add
out
jo
mov
inc
fs
or
pop
fmull
sbb
mov
sbb
and
xor
mov
lds
mov
into
jl
sbb
pop
mov
mov
cs
xlat
jp
test
aam
mulw
cmp
sub
dec
cmp
and
dec
loop
ds
sbb
cltd
fwait
js
sbb
cmp
sbb
jne
sbb
fimull
mov
ret
insl
insb
pop
and
fisttpl
or
dec
dec
aaa
arpl
ljmp
inc
adc
mov
jmp
mov
adc
xchg
cwtl
jne
pop
adc
sbb
hlt
aas
in
call
negl
jns
cmp
mov
sbb
fwait
negb
inc
add
imul
test
pop
xor
mov
das
mov
stc
ret
scas
push
cmc
jl
xor
rcl
xchg
mov
sub
fildll
aam
jge
pop
inc
adc
movsb
mov
insb
mov
dec
out
xchg
add
xorl
dec
divl
cmp
je
out
jbe
stc
xchg
cs
test
cs
push
repz
std
add
aam
xchg
hlt
test
aas
pushf
sub
cmp
popa
and
test
jnp
jnp
jb
stos
into
imul
std
cmp
dec
dec
aaa
and
cli
jno
xchg
pusha
push
arpl
insb
in
daa
scas
push
insb
scas
and
push
pushf
push
and
scas
clc
xchg
lret
xchg
push
mov
sbb
add
inc
clc
nop
ficompl
jmp
sbbl
das
pop
sub
inc
fldt
inc
stos
in
jmp
inc
jns
pusha
sbb
inc
xor
lcall
cld
xchg
sbb
loop
sbb
sub
hlt
out
mov
mov
xchg
jmp
aaa
pop
in
add
mov
imul
mov
sbb
dec
stos
imul
pop
ret
jno
clc
jnp
clc
js
mov
icebp
pop
sub
fiaddl
lret
and
mov
pop
addr16
orl
testb
lret
adc
xor
rorl
mov
inc
mov
aas
and
xlat
pop
lods
ret
into
lcall
out
pushl
popa
inc
jle
shrl
adc
jl
sti
jo
or
pop
in
je
in
jecxz
sbb
inc
jp
mov
cmp
mov
call
xor
mov
arpl
clc
pop
xchg
das
loop
test
ret
mov
adc
or
sbb
addr16
int3
into
mov
xchg
and
cs
mov
rcll
es
cs
inc
decl
lahf
test
xchg
cmp
add
loopne
adc
jl
mov
es
int
insl
or
push
dec
mov
push
cmp
std
mov
mov
aam
push
mov
push
lods
push
lahf
lea
mov
jns
and
xlat
cltd
push
faddl
add
mov
lds
xchg
shl
adc
lds
or
jl
mov
mull
test
or
push
mov
sub
jmp
jl
cs
pop
pop
ss
test
pop
fs
push
popa
jns
loope
repz
mov
xchg
pop
jbe
es
pop
mov
inc
out
push
add
adc
shr
dec
lahf
xchg
dec
xor
out
mov
mov
jle
filds
jle
cmpsl
sbb
adc
inc
test
out
in
jne
push
dec
push
pop
cmp
je
sbb
shl
push
les
imul
mov
into
pop
xchg
ds
and
xor
sbb
out
incb
unpckhps
in
dec
sub
fildl
sti
into
xor
lods
cmp
jnp
add
pushl
scas
dec
pop
fstl
mov
cmp
add
sahf
ret
push
outsl
pop
clc
movsb
aam
push
div
roll
test
out
sbb
jnp
adc
ret
negl
xchg
dec
push
in
fdivrs
mov
shl
in
shlb
js
in
sbb
and
and
aas
jg
push
roll
mov
in
adc
jae
insb
test
nop
shll
pop
jo
or
in
insb
clc
insl
leave
sub
lcall
jge
int
xchg
cmp
int
pop
orb
movl
or
lods
mov
mov
scas
in
adc
adc
fstl
nop
cmp
mov
test
xchg
add
inc
push
cmc
mov
loope
xchg
sbb
ljmp
push
gs
test
frstor
xor
imul
mov
notb
dec
outsb
fs
sti
aaa
push
push
adc
xlat
mov
out
cmp
push
jne
add
lret
pop
xchg
neg
shrl
clc
dec
mov
faddp
add
push
cltd
jbe
xchg
push
sbb
cmp
jno
sub
inc
push
out
loopne
mov
push
ret
lock
leave
pop
lret
cmp
sar
out
test
jle
sub
not
pop
rclb
enter
pop
mov
pop
and
sbb
and
fildl
or
dec
cmp
loop
stc
add
loopne
negb
dec
xchg
lahf
mov
cli
hlt
aaa
xor
lods
dec
sbb
add
test
jnp
add
push
insl
xchg
lret
fs
mov
sbb
dec
stos
jl
mov
cmp
jl
cmp
rcr
test
les
aad
addr16
mov
push
movsl
pop
aam
test
dec
imulb
scas
popf
shl
fidivrl
mov
cmpl
fcompl
jne
aaa
lret
adc
movsl
ja
push
xchg
test
mov
ret
inc
clc
dec
hlt
clc
or
xor
arpl
loopne
test
sbb
lea
mov
xor
mov
cmc
jae
aad
das
fiaddl
insb
ret
add
adc
jb
lahf
call
cmpsb
rorl
push
mov
testl
xchg
sub
push
mov
aad
lret
jae
cmpsl
lahf
data16
ret
stos
mov
sbb
and
orl
cmpsl
push
dec
addr16
sub
or
lret
es
jne
inc
inc
lcall
in
mov
push
xor
sbb
lret
jnp
sbbb
lock
xchg
jle
xor
adc
out
add
mov
adc
cmp
lds
lods
pop
sub
add
sub
lds
mov
out
sbb
arpl
push
outsl
xchg
and
push
mov
pop
dec
adc
add
sbb
mov
popa
hlt
bound
mov
popa
mov
std
mov
scas
leave
minps
lock
pcmpeqb
mov
adc
dec
clc
lods
mov
lret
sbb
ret
or
push
jne
icebp
sbb
clc
inc
fistpll
sub
test
jl
jae
lcall
jne
add
xchg
inc
cmp
pop
or
jb
inc
xchg
lahf
js
fildl
iret
icebp
mov
adc
je
cltd
je
mov
add
xor
imul
fnstcw
out
dec
fsubs
sub
sbb
pop
xor
jne
dec
enter
jne
mov
hlt
imul
dec
push
dec
movsb
gs
adc
xchg
fidivrs
mov
mov
es
inc
fs
or
pop
flds
call
ja
mov
mov
insb
jns
adc
sahf
stc
popa
mov
jecxz
shl
repnz
repz
lret
jnp
daa
jp
xlat
repnz
inc
inc
arpl
sbb
adcl
fists
sub
pop
mull
out
push
jge
aad
test
sub
jp
insl
mov
push
stc
push
nop
jne
push
scas
out
cmp
push
pop
and
addr16
dec
mov
sbb
ja
ret
arpl
addr16
inc
mov
jns
jg
aad
addl
ss
rcll
jmp
mov
out
daa
icebp
jno
and
daa
pop
stos
push
mov
jne
or
mov
in
mov
divb
inc
sbb
dec
stos
js
push
xchg
hlt
mov
jns
in
mov
fisttps
ret
dec
or
mov
xor
les
outsl
xor
int3
adc
mov
push
mov
sbb
jnp
xchg
leave
orl
iret
imul
jnp
insb
adc
cmpsb
fwait
push
inc
sub
or
out
adc
inc
andb
mov
push
stos
rorb
mov
xchg
or
out
in
dec
adc
inc
fstps
ljmp
mov
orb
aam
mov
mov
jg
stos
sbb
pop
dec
pop
mov
xchg
add
lahf
cmp
loop
hlt
sub
adc
popa
mov
jle
xchg
cmp
adc
sub
out
sub
jae
clc
mov
adc
pop
andl
dec
rcrl
xor
inc
xchg
add
cld
stos
jle
ret
popa
sarb
in
jge
and
mov
mov
sub
ja
xor
jb
add
test
xchg
pop
imul
adc
ja
stc
or
add
xor
push
mov
pop
les
stc
mov
ret
addr16
cmp
cmp
adc
push
and
sub
jns
out
scas
int
and
dec
jmp
notb
inc
lods
daa
lret
adc
fs
inc
je
pop
sbb
shl
mov
jno
mov
leave
mov
mov
imul
inc
imul
dec
jo
inc
adc
mov
mov
fstpl
sbb
jg
mov
sahf
mov
cmp
pop
pop
test
mov
scas
ret
dec
ret
or
test
scas
cld
cmp
lret
cmp
gs
pop
fs
or
pop
mov
popa
popf
loopne
mov
and
pop
test
inc
jns
xchg
shrb
jne,pt
mov
or
insl
cmp
jnp
push
adc
aad
fmul
mov
subl
push
pop
dec
scas
fwait
and
movsb
adc
addb
and
outsl
jne
into
cmpsb
mov
mov
mov
in
cmp
sar
cmp
mov
dec
mov
sahf
fcomi
lock
mov
js
sti
fld
cmp
mov
hlt
push
fstpl
pushl
jle
and
sub
adc
cmc
insl
xlat
jg
int
push
mov
cmp
inc
in
jne
clc
sbb
add
fsubl
shll
mov
fs
xchg
push
cld
inc
shlb
nop
inc
jo
inc
sbb
push
xor
lcall
adc
pop
cmp
inc
sbb
and
mov
lods
mov
sub
or
xchg
cmp
jb,pt
int3
fdivs
cmpsl
xor
or
je
outsl
dec
xchg
movsb
and
iret
push
loop
hlt
iret
mov
sbb
lds
mov
mov
and
insb
cmp
push
movsb
pop
es
mov
dec
jg
adc
addr16
or
gs
loopne
inc
dec
sub
loop
push
and
add
incl
ljmp
test
cvttps2pi
cmp
xor
into
cmpsb
mov
rorl
push
jge
mov
adc
xor
xchg
rorb
pop
push
testl
pusha
dec
or
loop
jbe
jl
inc
dec
jle
in
mov
push
fs
xor
ret
mov
xor
lods
xor
daa
bndldx
scas
loopne
shr
or
adc
pop
cmpsl
or
dec
sbb
push
lret
add
mov
jl
cli
ss
mov
jns
outsl
mov
xchg
sub
mov
jge
push
gs
loope
call
maskmovq
call
lahf
mov
mov
adc
es
add
ljmp
mov
data16
sbb
sbb
cmc
js
push
ret
and
lods
cli
jl
or
stos
xchg
sbb
aaa
sbb
mov
sbb
dec
push
cmp
loope
adc
addr16
loopne
jb
dec
in
lahf
daa
lret
out
pushf
xchg
or
sub
aad
pop
lret
mov
sbb
mov
dec
aam
pop
pop
sbb
bound
or
sub
push
sub
lds
sub
mov
or
lret
std
dec
mov
add
lret
aam
out
dec
imul
fstpt
daa
or
mov
popa
xchg
divb
test
lods
jns
pop
jg
dec
mov
lods
add
stos
cwtl
fidivl
jo
xor
mov
adc
add
push
jge
mul
cmp
mov
dec
sub
sbb
push
cmp
xchg
sbb
inc
arpl
loope
daa
js
add
mov
or
sbb
sub
pop
and
and
fstl
popf
fwait
mov
imul
pop
mov
out
push
xchg
add
mov
pop
nop
sbbb
add
testl
push
aaa
dec
dec
pop
xor
jmp
int
and
mov
aaa
mov
loope
fidivrs
das
xor
xor
sar
pop
or
movsl
xchg
test
mov
dec
das
pop
jns
mov
and
movsb
fisubs
mov
xor
lahf
jns
add
cmp
daa
xlat
or
out
imul
hlt
flds
ss
xchg
mov
cli
mov
xlat
std
cmpsb
out
lea
mov
mov
sbb
sub
dec
hlt
sbb
mov
pop
out
out
in
dec
test
mov
dec
push
in
lock
push
push
shl
stos
xchg
bound
ret
outsb
add
outsl
jnp
fs
push
cmp
dec
cld
dec
sub
hlt
scas
jne
mov
pop
adc
mov
nop
mov
xchg
cmp
sbb
add
lahf
push
shll
cmp
aam
fstpl
sbb
aad
jmp
scas
fmuls
out
lret
mov
movsl
filds
pop
fistpl
out
insb
inc
mov
mov
jecxz
cmp
mov
cltd
nop
lret
imul
inc
adc
rcrl
push
add
jmp
addr16
add
bound
ja
sub
mov
js
mov
ljmp
in
xor
mov
pop
and
xchg
mov
js
lds
inc
and
sbb
jo
inc
adc
out
out
push
mov
mov
inc
push
cmp
negl
lods
jb
pop
xor
fdivr
fwait
adc
xor
aas
cmp
gs
ficomps
ret
scas
xchg
mov
mov
mov
jno
mov
hlt
adc
and
mov
fdivp
shll
xchg
notb
stos
jmp
sub
test
xorl
pop
hlt
daa
and
jbe
in
lret
sbb
cmpsl
das
aas
insb
mov
mov
jns
fdivp
add
xchg
push
xchg
push
jae
add
arpl
mov
adc
cmp
fldcw
test
das
fbstp
sbb
xchg
jo
xchg
loopne
int3
inc
cmp
shrd
movl
out
lret
in
lret
sbb
sub
sar
divb
jle
add
add
addr16
dec
movb
orb
or
loop
inc
incb
popa
andb
pop
add
dec
dec
inc
mov
lock
jle
test
jecxz
sub
pop
pop
gs
pop
dec
sub
fsub
push
jbe
xchg
movsb
fs
mov
jl
stos
ljmp
sbb
leave
arpl
out
pop
aas
jle
pop
mov
pop
lods
lret
push
pop
jo
xchg
cmp
xchg
cltd
jmp
imul
mov
xchg
pop
clc
adc
mov
push
mov
into
rolb
loopne
js
xor
fcomps
push
dec
mov
mov
cmpsl
inc
and
lods
pop
sub
mov
xchg
adc
int3
add
adc
sbb
cmc
lret
add
xor
xchg
sub
dec
cmp
in
mov
sub
sbb
ret
test
imul
in
mov
or
adc
pop
test
mov
mov
mov
ss
clc
sbb
xchg
xchg
dec
push
test
sbb
mov
rcll
mov
sbbb
loope
or
test
das
adc
dec
and
dec
mov
mov
jl
stos
outsl
jo
test
lds
sbb
sub
nop
sub
cltd
cld
jne
imul
jbe
add
add
and
adc
push
xchg
xlat
fisubrl
add
movd
out
lods
jge
or
add
stos
sub
pop
jae
dec
cli
adc
pop
sub
push
pop
jne
repnz
xchg
loop
bound
add
dec
fildl
mov
sahf
lahf
xlat
icebp
in
div
xchg
or
add
and
or
adc
mov
jl
out
xor
dec
cmp
cs
lods
sbb
jecxz
stos
jne
inc
and
mov
inc
pop
popf
cmp
sarl
mov
rclb
shlb
addr16
mov
sbb
test
mov
lds
nop
xchg
push
cltd
xchg
jmp
and
in
mov
inc
dec
stos
adc
add
cmp
or
dec
jae
lods
cmp
ss
in
ret
mov
fwait
mov
xor
sbb
inc
push
or
push
lea
or
daa
xor
sidtl
xchg
jns
popf
mov
mov
lret
sub
mov
iret
xchg
adc
mov
rcrb
gs
popf
nop
mov
aas
pushaw
sbb
and
cwtl
sar
cmp
adc
dec
mov
repz
mov
fistps
dec
aaa
pop
inc
loop
sbb
call
pop
fs
in
movsb
dec
sahf
lds
xor
xchg
add
stc
adc
leave
jno
imul
decl
orb
add
in
fbld
mov
shll
out
shl
inc
jae
inc
push
adc
fwait
xor
stc
cs
out
dec
loopne
test
cmp
das
aad
pusha
or
or
fs
or
test
jbe
push
pop
addr16
leave
push
and
push
int3
sbb
xchg
xrelease
pop
repnz
mov
cmpsb
and
add
jecxz
lea
and
ja
xchg
sbb
sbb
stos
movsb
stc
cmp
stos
adc
fldcw
xchg
pop
rcll
xor
adc
xchg
loop
movsl
xor
push
jle
inc
mov
cmp
adc
push
xchg
mov
movsb
js
add
mov
das
jl
rcrb
mov
call
add
mov
jo
push
mov
in
stos
inc
xor
sbb
sub
dec
cmpsl
cmp
daa
jp
mov
pop
inc
or
sbb
insb
les
cld
jmp
add
push
mov
dec
sub
pop
lods
add
stos
sub
adc
out
imul
shrb
dec
movsb
out
lret
jb
xorb
xchg
ret
push
xlat
dec
xor
outsl
aam
jp
es
enter
jno
inc
xchg
cs
sahf
mov
adc
sbb
dec
push
mov
jle
mov
mov
mov
sahf
cmp
dec
add
sub
inc
mov
mov
push
int3
mov
jg
xor
dec
mov
repnz
mov
inc
mov
push
mov
insl
jb
lret
adc
daa
out
mov
shll
or
das
fidivl
xchg
adc
loope
xor
lds
hlt
dec
jle
jo
rcrb
jnp
leave
adc
dec
or
push
pop
bound
pop
leave
pop
add
repnz
gs
xor
aaa
enter
xchg
jecxz
inc
inc
insb
dec
fldt
push
fadd
mov
or
aad
imul
pop
sti
scas
es
push
jl
aas
enter
das
fcmovb
test
mov
adc
xchg
orb
sub
bound
xchg
mov
pop
push
pop
into
fdivl
sbb
out
xor
and
sahf
fistpll
adc
cmp
aad
jl
adc
mov
or
insb
sti
stos
mov
xor
sub
xchg
std
push
xor
cmp
cld
loop
lock
out
roll
out
mov
cmpsl
fwait
test
mov
xchg
lahf
outsl
ljmp
mov
dec
cmpsl
addb
jle
add
fld
xor
pop
mov
loop
in
insb
mov
clc
loopne
popf
jg
xchg
insl
aas
mov
add
pusha
bound
ljmp
adc
and
lods
sub
jg
cwtl
cwtl
xchg
add
leave
jb
mov
pushf
adc
adc
inc
repnz
out
inc
pop
inc
test
cmp
sbbl
jmp
lods
int
and
fcoms
sbb
add
jecxz
sbb
fwait
sahf
mov
add
mov
pop
add
cwtl
fsts
push
stc
xor
or
lock
or
and
loope
push
pop
xor
add
divl
int3
inc
aas
dec
xchg
sub
xchg
xchg
mov
ljmp
or
cmp
imul
bound
adc
dec
xor
jl
enter
pop
mov
ljmp
rolb
push
icebp
adc
xacquire
add
loope
arpl
push
sbb
sbb
pushf
mov
ret
pop
hlt
shl
xchg
dec
arpl
sbbl
stos
fistpll
push
sbb
aas
mov
jns
test
and
or
push
jae
sub
ret
addb
mov
pop
leave
sub
mov
push
arpl
cmp
mov
inc
dec
mov
inc
fwait
imul
aaa
pushf
cmp
in
outsb
fimull
loope
push
dec
frstor
and
aam
ljmp
ret
imul
fbstp
das
roll
dec
daa
cmpsb
ja
repnz
dec
inc
or
push
push
mov
adcb
mov
cmpsl
fldcw
cmp
xor
jg
push
push
sub
lods
mov
push
mov
loop
push
cmp
push
jo
mov
cmp
outsb
out
outsb
cmp
mov
outsl
in
mov
pop
int3
sahf
sahf
or
or
push
jp
call
popf
jecxz
add
icebp
adc
adc
mov
push
rolb
test
xor
sub
mov
shrb
lock
and
sbb
xor
mov
push
lret
fcompl
arpl
mov
repz
scas
dec
ret
push
dec
and
leave
pop
cmpsl
xchg
jle
gs
xor
imul
in
jg
pop
leave
out
xchg
mov
aad
shll
std
sub
fsub
outsb
test
icebp
cli
jbe
movsb
pop
add
ret
or
jmp
lea
call
out
xchg
and
fwait
dec
enter
mov
sub
mov
lret
push
mov
xchg
sub
fidivl
in
jno
inc
jecxz
shlb
xor
or
dec
adc
cwtl
and
adc
mov
mov
dec
push
out
mov
pusha
ret
fs
inc
jl
pop
and
enter
mov
push
mov
add
pop
in
pusha
mov
push
bound
sub
jbe
js
pop
jmp
xchg
aas
je
fimull
and
mov
pop
dec
mov
push
add
cltd
aaa
dec
adc
clc
inc
fisttps
rolb
dec
jp
aad
jl
out
mov
push
or
int
loop
add
in
subl
sub
or
mov
mov
inc
push
inc
sbb
in
inc
xor
inc
mov
push
inc
xchg
lahf
addl
outsl
adc
xchg
inc
test
cltd
or
mov
cmpsl
mov
jle
enter
fsubl
or
cmpsl
pop
cmp
add
dec
cmp
ja
mov
jb
out
cs
lahf
jp
test
dec
icebp
jecxz
xchg
adc
inc
ljmp
mov
inc
mov
lcall
das
mov
sbb
cmpsl
jae
shrb
data16
and
punpckhdq
xchg
dec
adc
xchg
cmp
add
sbb
jnp
cmp
jns
imul
test
pop
push
idivl
icebp
es
pop
hlt
stos
pop
and
popa
icebp
pop
xlat
sub
sbb
sbb
jmp
js
das
fisubrl
stos
movsl
cmc
inc
in
ret
cmp
or
loop
sar
pop
mov
fnsave
test
xor
aam
pop
push
cmpsl
int3
lret
push
lret
dec
loop
outsl
sub
fists
and
addr16
mov
pop
inc
inc
dec
cli
pop
add
sarb
lea
das
sbb
push
lahf
adc
decl
in
out
or
push
mov
in
dec
jp
mov
fwait
cli
out
inc
jp
jmp
xorl
out
xchg
push
jae,pn
cmpsl
lcall
cltd
aad
outsl
jbe
pusha
mov
push
cli
mov
aam
sub
add
fsubs
cmc
jle
aaa
adc
inc
mov
sbb
sbb
imul
in
push
ja
jge
cld
js
xchg
mov
lock
or
sbb
insl
scas
shll
mov
xlat
cli
imul
mov
pop
rorb
data16
xchg
jle
enter
dec
lahf
xor
dec
xchg
mov
mov
movsb
push
cmp
ret
inc
pop
pop
rcr
pop
movsb
mov
sbb
or
or
rcrl
dec
mov
mov
idiv
testl
xor
fdivrl
inc
aas
jnp
shl
out
repnz
sbb
mov
jae
add
xchg
stc
pop
add
mov
mov
sti
xlat
fisubrs
gs
pop
pop
fildl
sbb
test
sub
aad
and
sbb
pop
std
and
mov
repz
cmpl
xor
or
rcrb
nop
jl
inc
or
rorb
leave
mov
sbb
fisubrl
rclb
jnp
sbb
je
jbe
je
arpl
test
xor
lods
mov
mov
shll
test
mov
mov
push
adc
sub
loop
cmp
in
fisubrl
add
insb
jbe
add
xchg
mov
rorb
insl
std
mov
insl
pusha
push
inc
push
ds
cmp
and
aas
dec
jecxz
cltd
leave
mov
je
les
xchg
jnp
dec
mov
xchg
jp
fdivrl
push
mov
inc
xchg
in
pushf
push
and
mov
int3
or
outsl
sbb
push
jae
sti
jge
fs
cld
adc
fdivrl
mov
mov
lods
xor
movsl
test
ljmp
stos
jecxz
push
push
and
xchg
in
jp
mov
cli
sarb
lret
sti
cld
cmp
test
out
mov
and
cmp
sbb
jno
mov
mov
std
inc
add
mov
pop
fisttps
cmpsb
jle
and
clc
stos
add
or
subb
push
lret
pop
inc
push
in
sbb
outsl
fnstsw
fwait
repnz
fxch
rorl
repnz
test
call
or
fsts
sbb
mov
data16
mov
adc
push
sahf
cmp
mov
jbe,pn
outsb
adc
movsl
in
ficomps
mov
push
inc
and
mov
sarl
lds
rcl
dec
mov
xor
or
xchg
xchg
in
jb
push
xchg
adc
adc
ja
outsb
pop
xchg
pop
pop
pop
rol
out
xorl
call
mov
push
lret
sarb
xchg
out
push
or
popf
aaa
in
mov
data16
lcall
iret
xor
or
or
lods
bound
add
aas
jbe
push
add
fnclex
mov
fcomi
aam
sub
daa
xchg
and
cmp
test
push
cmp
and
frstor
out
scas
add
inc
pop
cltd
repnz
aam
or
jae
push
xor
add
sbb
cmc
test
jae
sbb
sahf
ret
sbb
and
das
add
loop
jnp
lds
dec
xor
test
es
jle
cmp
cmp
mov
scas
leave
add
lods
push
or
inc
xchg
xchg
add
sbb
out
cmp
cli
insl
add
lahf
xor
mov
ljmp
mov
es
or
or
stos
js
dec
aaa
pop
jae
mov
sbb
push
hlt
call
movsb
mov
movsl
cmp
xchg
test
inc
xor
lds
sub
pop
divb
das
in
mov
cmpl
movl
shl
xchg
lcall
lret
and
stos
jle
inc
insl
aad
cmp
sub
cmp
mov
aam
mov
pushf
outsb
gs
ss
stos
jb
fisubs
jmp
clc
mov
xor
mov
adc
into
jecxz
xchg
lods
lea
out
xchg
inc
in
ficoms
aad
jl
pop
sub
mov
mov
mov
jb
lea
jnp
adc
dec
shl
insb
mov
pop
rolb
aas
jmp
out
addr16
je
pop
push
push
ret
jg
das
dec
lret
sbb
shrb
mov
cwtl
icebp
lods
and
sub
nop
pop
or
cli
sbb
orl
ret
int3
dec
addr16
add
xchg
daa
push
sub
test
sbb
xchg
push
and
ret
xchg
mov
stos
push
cmp
jmp
ret
cli
fistpll
int3
inc
xor
xchg
ret
imul
cld
test
leave
xchg
jg
roll
xchg
and
mov
sbb
sub
jl
bound
insl
fcompl
sub
inc
sub
cltd
add
lea
rolb
cs
dec
div
mov
pop
jns
subb
xchg
xor
lea
outsb
aaa
call
cmp
or
lea
cmp
add
fstl
jl
jge
mov
push
mov
outsl
imul
add
push
xchg
cmp
add
out
mov
add
out
push
jne
shrl
adc
dec
bound
or
jg
call
mov
sub
mov
add
ret
lods
and
mov
sub
sbb
das
dec
jecxz
mov
cmp
xchg
out
jge
out
xor
testl
scas
jns
lcall
sub
push
leave
in
les
pop
fs
not
imul
loope
popa
cmp
lret
in
lock
lret
and
ret
je
push
or
popa
rcrl
mov
add
stos
xchg
jb
inc
push
cwtl
mov
je
jo
pop
inc
lds
popf
fidivl
in
xor
push
add
stos
cmp
sarl
into
xchg
mov
push
push
xchg
dec
mov
je
sbb
and
stos
pop
std
test
xor
push
lods
add
cmc
mov
ja
adcb
or
push
push
mov
call
jle
je
fs
xor
addr16
push
loope
into
in
lcall
or
add
pushf
push
movsb
js
ja
daa
insb
movsl
lock
orb
mov
fdivrl
mov
sub
das
stc
pop
call
in
scas
push
fsubrs
dec
insl
cmp
pop
cld
cmp
lods
push
jp
mov
or
sbb
lret
push
jno
push
sbb
mov
cmpsb
mov
push
or
test
add
std
inc
push
mov
jmp
and
int3
push
mov
stos
push
mov
or
and
push
popf
mov
mov
lcall
outsb
inc
cwtl
push
xor
jne
lea
adc
pop
mov
cltd
aad
add
inc
push
pop
lods
lret
test
pop
or
ficoml
gs
scas
aad
pop
cltd
adc
mov
loopne
sub
or
mov
push
gs
inc
push
movsb
inc
sahf
out
xor
ret
int
pushf
fs
leave
cltd
sahf
push
and
js
or
sub
imull
add
cwtl
in
mov
popl
sub
push
stos
push
aas
cmpsl
call
insb
xor
clc
pop
dec
xor
cs
inc
lahf
pop
in
xor
ja
pop
test
add
sub
ds
or
aas
pusha
fbstp
ret
lock
fbld
inc
mov
out
cmpsb
dec
and
add
push
into
jbe
mov
shlb
pop
and
mov
push
out
and
gs
loope
ss
and
inc
jbe
jae
adc
sub
aas
mov
mov
mov
jle
mov
add
fsincos
in
mov
mov
xor
fcoms
rorb
xor
in
inc
frstor
dec
test
pop
adc
rolb
jb
jns
les
pop
add
inc
inc
mov
rcl
xor
popf
sbb
roll
out
stos
out
and
pop
dec
push
out
arpl
sbb
push
loope
ss
into
inc
adc
mov
dec
ret
add
cmpsb
push
inc
cmp
jns
push
mov
das
insb
add
faddl
mov
loop
push
cs
pusha
push
pop
fisttps
vpmaxsq
mov
mov
out
push
outsl
or
or
jno
int3
test
lahf
cmp
sub
and
jo
xchg
ror
loopne
dec
xchg
xor
inc
out
inc
mov
dec
and
mov
xorb
jg
ljmp
sub
xchg
in
xor
jmp
cs
jno,pn
iret
lcall
cmpsl
xchg
push
subl
add
and
fdivrs
test
inc
xchg
inc
iret
cld
std
pop
jl
lock
pop
in
sbb
jne
lcall
mov
and
and
add
jge
inc
insl
jae
mov
scas
jl
repnz
jmp
in
repnz
enter
ss
fistpl
fidivrl
mov
mov
ljmp
pop
cmpsl
shr
movsl
jne
popf
dec
and
mov
popf
stos
sbb
addr16
add
or
int3
sbb
mov
in
int
inc
cmpsl
aas
pop
in
inc
push
cwtl
or
push
pop
inc
jge
jnp
pop
data16
into
add
imul
cld
jns
dec
xor
xchg
gs
mov
jle
jmp
sub
xchg
cmp
jb
inc
scas
dec
mov
fldt
fnstsw
pop
les
je
out
std
int3
int3
js
nop
sbb
into
xorl
jmp
sahf
rcrb
dec
decl
add
push
loope
or
popf
rcll
int3
punpckhbw
loop
aad
xchg
xor
cmp
xchg
gs
jge
xchg
repz
mov
dec
inc
inc
jecxz
stc
out
shlb
add
or
lcall
pop
inc
iret
ret
lods
sti
jmp
psadbw
sti
test
lea
cmp
cmpsb
mov
lock
mov
pop
in
fmuls
fldt
in
xlat
enter
jbe
sahf
insl
rorb
outsl
xor
repz
icebp
add
adc
mov
cli
xchg
dec
sbb
add
mov
adc
lahf
inc
sub
sub
rolb
pop
rcll
rclb
pop
daa
jb
jge
mov
mov
mov
push
stos
jp
and
fmull
test
jl
jmp
outsl
addr16
adc
sub
and
iret
push
mov
sbb
push
loop
cwtl
test
xchg
dec
aas
repnz
push
push
mov
and
test
loop
lcall
mov
repnz
pusha
repnz
mov
push
push
or
cwtl
push
jmp
es
lret
mov
push
orb
jae
in
mov
mov
xlat
xchg
cmpsl
lret
pop
out
leave
or
das
xchg
popa
or
scas
mov
popa
cmp
dec
loopne
mov
popf
stos
adc
das
inc
and
stc
push
arpl
hlt
rorb
sahf
ja
or
ljmp
sbbl
insb
mov
adc
mov
pusha
sub
or
sbb
arpl
data16
lods
lds
ljmp
xchg
mov
jbe
imul
mov
sbb
xor
clc
mov
inc
add
mov
into
or
push
lods
imul
out
cld
out
mov
cli
jae
cmp
outsb
push
fcoml
cwtl
pusha
out
sti
adc
scas
mov
cmp
jle
test
out
xchg
jg
push
mov
xchg
arpl
aam
andl
shr
jle
movsb
popf
sbb
test
aaa
dec
jnp
xor
mov
sub
and
push
push
xlat
push
mov
test
clc
out
push
sub
movd
lahf
cmpsl
pop
push
cwtl
and
bound
and
aam
sti
shl
or
addr16
repz
or
cmp
jl
adc
imul
shr
ret
dec
push
mov
xchg
or
xchg
cmpsb
jae
fucomip
lret
adc
mov
sbb
mov
aam
repnz
icebp
xchg
push
inc
jmp
xor
lcall
jnp
mov
add
sbb
sub
jbe
andl
push
popf
lret
addr16
ljmp
scas
ljmp
popf
pop
mov
daa
ret
xor
into
js
xchg
shll
test
dec
inc
flds
clc
dec
pop
clc
lock
jno
xor
push
push
dec
add
fstpl
aaa
jmp
push
mov
xorb
dec
addr16
cmp
mov
xchg
hlt
mov
xchg
int
das
dec
test
add
pop
into
scas
aaa
out
sub
data16
sbb
pop
sbb
lods
mov
mov
dec
mov
mov
jp
dec
mov
movsl
popf
mov
dec
mov
js
push
xrstors
push
dec
outsl
pop
push
mov
or
jg
shrb
adc
push
inc
or
pop
adc
or
pop
pop
sub
dec
mov
xorl
jne
mov
sbb
mov
xor
inc
outsb
or
fdivs
mov
mov
lret
jg
mov
sub
dec
hlt
cmpsb
add
lahf
outsl
dec
jecxz
jge
sub
loop
aad
daa
push
add
mov
repnz
inc
cmp
push
jmp
dec
inc
pop
shrl
aad
in
es
arpl
or
sbb
sub
fsubrp
insb
push
mov
jp
and
ficompl
fcomip
add
fwait
push
pop
cltd
mov
lea
push
lcall
xor
dec
repz
in
push
xchg
sub
pop
and
andl
inc
orl
mull
aam
out
cmpsb
scas
lret
adc
nop
xchg
push
outsl
lcall
imull
mov
testl
leave
pop
pop
shrl
imulb
pop
jge
loop
add
sahf
xchg
inc
xchg
mov
sahf
stc
in
das
push
jmp
pop
mov
jno
push
ja
cld
cmp
aad
nop
xchg
test
in
inc
mov
jmp
subb
xorl
decb
cwtl
xchg
dec
flds
jo
stos
cs
fimuls
adc
divl
inc
push
sbb
mov
pop
aaa
add
adc
loope
dec
adc
std
jo
inc
lgs
daa
sub
push
and
ret
adc
pop
inc
std
das
fs
stc
inc
mov
cmp
push
sub
shll
movsl
jno
fdivs
rclb
dec
adc
inc
in
lcall
arpl
dec
movsl
cmp
inc
or
mov
jge
inc
cmc
cmpsb
and
xchg
and
hlt
pop
rolb
lods
jb
dec
pop
sub
pop
mov
jge
pop
jno
jle
call
imul
push
cmp
in
sbb
jae
aad
push
adc
and
dec
mov
sarl
jmp
out
add
cmp
mov
repnz
dec
sub
movsb
ret
es
repz
mov
fiaddl
arpl
hlt
fidivs
cmp
adc
lahf
inc
mov
loopne
inc
push
addr16
and
jmp
shll
ds
iret
mov
jae
cld
movl
stos
and
jmp
push
cwtl
scas
pop
sarb
xlat
and
imul
in
sub
icebp
fcomps
ss
push
pop
mov
out
cmp
shrl
out
cmp
xchg
into
sbb
fsubl
push
pop
call
xor
pop
test
dec
fwait
sbb
adc
std
adc
mov
sar
int3
ljmp
sub
push
js
loop
mov
fcomps
push
mov
jne
xor
xlat
arpl
mov
imul
mov
dec
imul
out
roll
inc
cmp
ljmp
mov
subl
or
and
and
xor
loope
cs
add
out
icebp
add
pop
adc
loope
push
add
pop
dec
inc
mov
sub
rcl
iret
or
scas
push
adc
pop
push
cmp
mov
cmp
pop
inc
pop
push
adc
xor
cmp
inc
adc
add
in
aad
into
mov
pop
mov
pop
or
lret
jp
mov
xor
mov
sarb
pop
outsl
cmpsb
xchg
cltd
fs
xchg
sahf
iret
mov
add
fwait
sbb
mov
add
xchg
sbb
mov
pop
lret
pop
mov
in
gs
daa
sahf
mov
lods
jge
mov
outsl
aam
xchg
add
push
arpl
movsb
mov
jg
rep
in
enter
pusha
or
xchg
iret
fildl
mov
inc
inc
cltd
fld
xchg
je,pn
rol
rorl
in
aaa
jp
test
out
cwtl
sarb
mov
push
lods
aas
sub
test
ret
lock
push
jecxz
mov
adc
fcomps
mov
sub
pop
lret
int
aad
lock
lods
add
pusha
xchg
jbe
mov
push
ljmp
sbb
sbb
or
mov
xchg
add
sub
ja
ds
push
xchg
int3
ds
out
out
mov
int3
das
mul
xor
lret
and
inc
lock
cmpsl
dec
test
imul
lret
mov
mov
stos
xlat
or
xchg
lods
jl
xchg
not
mov
mov
add
inc
jb
jmp
jmp
fstl
xchg
fdiv
jb
mov
adc
add
cmc
shrl
add
pop
xchg
ret
push
cmp
ret
adc
aaa
stc
call
and
int3
sahf
repz
adc
movsl
pop
sub
mov
xchg
mov
repz
dec
xchg
dec
push
inc
jno
inc
test
pop
cltd
lret
stc
popf
xor
lcall
or
dec
test
nop
xchg
cmc
mov
fsubrs
sub
aad
jnp
mov
push
jmp
dec
aas
inc
push
int
jns
into
xchg
xor
dec
cmpsb
push
lods
fdivl
aad
movsl
xchg
sti
in
outsl
pop
jecxz,pn
aas
jnp
cmp
mov
nop
pusha
and
adc
test
and
test
call
stos
mov
jno
mov
pop
sbbl
fst
sub
push
push
test
push
lock
in
inc
fildll
mov
inc
mov
inc
push
xor
aas
cmp
call
push
imul
cs
jns
in
jb
sbb
xor
push
xchg
xor
inc
iret
fiadds
gs
fs
dec
arpl
jo
mov
imul
sbb
fisttpl
shr
aas
push
sub
mov
ficompl
mov
stos
jae
mov
dec
inc
adc
xchg
sbb
in
arpl
jg
into
adc
add
fimull
jge
xchg
push
in
int3
cmp
push
xchg
mov
dec
loopne
movsl
inc
jg
pop
adc
jg
cmpsb
ret
fs
fnstsw
jo
pop
xchg
adc
xchg
xchg
mov
pop
xchg
cmp
jmp
inc
mov
sub
mov
jle
jle
cmc
pop
shll
test
fstl
push
mov
loopne
or
or
fldenv
int
lds
outsl
sti
sub
sbb
sbb
cmp
add
ss
iret
sbb
push
aam
leave
jmp
adc
dec
add
test
dec
mov
xchg
inc
dec
out
xor
stos
cmp
or
cmpsb
mov
fsub
dec
cmp
jns
xor
sbb
adc
cmp
or
or
or
in
icebp
pop
rclb
sbb
adc
lret
ret
test
mov
sti
call
or
dec
adcl
fwait
sbb
pop
loop
fnstenv
and
adc
pushf
xchg
in
shlb
and
fwait
or
sbb
mov
xorb
cli
push
clc
dec
adc
cmp
inc
fldenv
sbb
lock
fidivrs
xor
psllw
outsl
loop
aad
out
sub
cmc
repz
mov
dec
dec
rcrb
sub
cs
lahf
aas
xchg
inc
jo
nop
xchg
push
cmp
leave
fsubrs
dec
cmp
in
inc
shll
mov
xchg
outsb
in
push
fsincos
inc
inc
lret
pop
lods
lock
cmovno
iret
mov
mov
outsl
lahf
xlat
mov
xor
scas
mov
bnd
fimuls
fnsave
xchg
stos
jg
inc
iret
and
out
lcall
xlat
cmc
mov
xchg
test
data16
or
adc
dec
push
push
sbb
or
das
outsb
lcall
inc
dec
fcomip
gs
xor
inc
xchg
stos
stos
dec
dec
mov
lret
mov
or
pop
jmp
cltd
jmp
insb
mov
shl
push
xchg
mov
adc
in
xchg
mov
pusha
pop
insl
pop
jnp
insl
adc
cmpsl
cltd
int
addr16
push
adc
and
mov
data16
mov
xor
sub
cmp
xchg
daa
cmp
aam
jle
mov
mov
sarl
iret
cli
jne
orl
test
sbb
cmp
addb
push
fdivrl
ss
ret
popf
aaa
jp
shrb
insl
sub
insl
or
outsl
negb
stos
popf
sbb
and
or
test
mov
test
xor
aam
mov
adc
sub
frstor
leave
xor
sub
ljmp
mov
xor
cli
mov
xor
mov
dec
iret
mov
sti
jo
pop
add
cmp
popf
out
sbb
or
popf
or
or
push
add
push
xlat
aad
or
or
sbb
pop
daa
pushl
or
mov
sbb
push
negb
fstl
dec
mov
sbb
pusha
stc
push
pop
outsb
das
sbb
adc
sub
idiv
les
outsb
out
imul
xor
sahf
xor
shrb
inc
ljmp
pusha
stc
es
insl
fs
mov
dec
imul
pop
xchg
inc
jmp
pop
in
inc
pusha
sub
sahf
ljmp
inc
adc
jns
pop
rcrb
clc
icebp
inc
insb
dec
lods
cmpsb
bound
dec
pop
xchg
push
popl
fcompl
jp
mov
int
inc
add
and
insb
mov
stos
xchg
sub
ljmp
lods
xchg
mov
sub
and
cmp
in
mov
cli
mov
dec
jl
addl
mov
lea
pusha
xor
xor
notl
sub
xchg
jnp
pushf
mov
add
sbb
add
pop
cmp
mov
sub
ja
xchg
jne
pop
pop
add
into
ret
fs
div
cwtl
sub
or
xchg
sub
sbb
inc
das
mov
lods
mov
push
or
inc
xor
pop
sbb
stc
xlat
test
mov
adc
push
pop
jne
les
xor
cmp
loope
sbb
fcoms
repnz
cli
shlb
jle
outsl
scas
adc
cmp
pop
popa
sti
hlt
test
out
xor
lock
outsl
out
pop
clc
outsl
mov
sub
gs
mov
in
shl
push
push
xor
leave
shll
jne
les
addl
in
pop
popa
jbe
push
and
dec
in
push
in
sbb
adc
push
daa
jecxz
sarl
das
mov
lahf
push
enter
insb
lret
xor
pop
fistpll
lods
rclb
push
xor
mov
xor
sub
mov
xlat
xorl
sub
dec
popa
notl
cmp
pop
lea
outsb
cmpsl
outsl
roll
xor
rcll
daa
adc
adc
push
test
xchg
xor
jg
mov
inc
call
lods
subb
shrl
jne
cmp
pushl
pop
fsubrl
stos
rorb
popa
addr16
push
lock
jle
sbb
clc
jb
int
dec
push
fidivrl
add
enter
dec
addl
shrl
xlat
jl
pop
dec
mov
fidivrl
xlat
push
mov
pop
ret
faddp
sub
sub
and
imul
mov
sbb
sbb
test
ljmp
mov
aad
cmp
mov
inc
dec
movsl
sub
lcall
sub
mov
mov
rol
inc
pop
lods
mov
cmpsl
lret
push
mov
and
dec
vmclear
inc
add
stc
mov
in
jg
push
mov
clc
ljmp
clc
pusha
insb
sbb
pop
test
mov
call
cmc
lahf
xchg
jge
leave
sub
sbb
hlt
and
outsl
mov
cmp
mov
add
test
jg
jg
push
fdiv
outsb
data16
ret
fisubrl
jae
mov
inc
fmuls
pop
mov
xor
inc
and
lahf
jnp
mov
pop
and
movsl
add
push
push
filds
pop
addr16
dec
push
add
push
clc
cwtl
mov
out
movsb
sahf
or
fisttps
in
dec
data16
stc
iret
pop
mov
pop
call
mov
sbb
sbb
jl
or
imul
jbe
sub
dec
int
dec
inc
hlt
popf
or
rcl
cwtl
rorb
sbb
stos
and
jbe
mov
dec
out
dec
adc
xchg
out
mov
out
mov
xor
push
out
add
dec
xchg
nop
lret
jno
push
xchg
daa
subl
mov
cmp
repnz
stc
mov
sbb
das
xlat
or
pushf
pop
das
xor
mov
loope
fdivrl
sti
inc
push
pop
int
mov
or
ds
dec
pop
stos
sti
dec
imul
lret
loop
dec
int3
ds
jbe
push
sub
push
mov
xchg
scas
sahf
out
data16
push
pop
mov
and
mov
mov
pop
in
cs
ljmp
aam
mov
mov
fildll
into
imulb
dec
cmpb
add
add
push
shrb
and
fabs
or
fbstp
data16
pop
sub
ret
cmp
sbb
push
dec
ffree
stc
xchg
fsubp
addb
and
xchg
mov
xchg
idivb
mov
pop
push
sub
jmp
jge
xchg
sub
sbb
out
or
leave
stc
mov
int3
push
mov
push
out
lret
rorl
xor
test
fsubp
cwtl
jle
les
out
sub
aas
sub
and
jmp
popf
les
inc
inc
outsb
jne
stc
sbb
sbb
mov
or
loop
aad
pop
add
sbb
aam
data16
fisubrl
cs
adc
pop
mov
ret
adc
pop
mov
jp
flds
cmp
les
clc
mov
test
in
inc
popf
and
and
test
mov
pop
inc
pop
mov
arpl
jns
fistl
mov
push
inc
loop
fisttpl
jo
retw
cli
pop
and
push
fistpl
popf
ret
into
fimuls
sti
cmpsl
movsl
in
sahf
xor
repnz
adc
jae
xchg
xchg
enter
jae
mov
rcrb
lahf
pop
and
jmp
xchg
cltd
xchg
lods
imul
mov
lods
in
ret
dec
lret
pop
add
sub
addr16
mov
loop
out
inc
je
push
aad
jns
icebp
pop
xchg
mov
xor
dec
jns
lds
out
in
call
popl
or
xchg
insl
push
clc
shl
icebp
adc
inc
push
addr16
scas
sub
mov
cli
inc
cmpsl
out
adc
cltd
fsubs
or
outsl
mov
jbe
js
jp
repnz
shl
in
insl
scas
inc
int
cmp
outsl
out
mov
sbb
stos
xchg
xchg
mov
leave
and
sub
jno
stos
test
adc
loop
jo
insb
xchg
mov
mov
pushf
mov
pop
ret
into
adc
inc
xor
in
sbb
fadds
xor
sub
imul
test
fists
lcall
cmp
jecxz
adc
in
jne
pop
js
inc
push
repnz
add
and
cmpsb
mov
dec
out
jb
stc
iret
push
mulb
push
in
icebp
leave
orl
int3
xor
int
in
popf
xor
movsl
push
imul
push
lret
hlt
nop
nop
pop
and
jnp
mov
insb
ljmp
adc
mov
mov
sub
loope
stos
push
xor
xor
mov
push
xchg
add
popf
mov
xchg
cmp
es
dec
add
out
sbb
ds
ja
sbb
cmpsl
out
scas
shll
push
aad
aam
stc
movsl
es
cmp
pop
mov
pop
inc
sub
push
xorb
outsl
ljmp
mov
xchg
inc
push
push
xor
sub
sub
sub
mov
and
sbb
push
mov
cmp
pop
inc
rcr
repz
add
out
aaa
mov
sahf
and
mov
inc
sbb
push
jns
jns
mov
jns
sahf
mov
jbe
dec
daa
into
imul
xor
lea
and
std
jne
fisubl
fwait
hlt
dec
xor
pop
sbb
adc
into
iret
add
push
cmovl
xchg
push
jl
out
xchg
scas
scas
and
push
outsl
cli
lcall
pop
mov
and
xchg
mov
mov
insl
cmp
clc
and
adc
push
pop
cmp
push
js
pop
xchg
int3
inc
xchg
ret
pop
sub
das
test
ja
add
jno
std
inc
cmpl
pop
cli
pushf
popa
mov
jo
and
push
out
sbb
mov
loop
int
mov
daa
push
sbb
jo
pop
jno
sbb
iret
popf
popa
ret
push
in
or
sbb
sub
pop
cwtl
dec
dec
mov
pop
push
dec
cld
push
popa
fnstsw
fists
cmpsl
jge
mov
add
push
dec
pop
mov
jae
jns
push
lea
mov
scas
xor
outsb
movb
mov
mov
loop
mov
js
orl
adc
hlt
push
lret
add
sbb
jecxz
out
pop
daa
sub
cmc
jnp
pop
cwtl
mov
mov
iret
push
mov
inc
xchg
divl
add
cltd
aas
xchg
test
push
dec
aaa
icebp
fisttps
sbb
mov
adc
push
cld
movsl
or
loopne
push
adc
lret
sub
add
lahf
xchg
mov
xchg
cmp
lcall
loopne
imull
enter
push
outsl
mov
lods
xchg
cmpsl
lds
lea
cmpl
push
inc
lea
fimull
sti
cmp
imull
and
xchg
lahf
aad
push
mulb
xchg
mov
or
fists
testl
jmp
jecxz
mov
or
pop
cmpb
mov
sbb
adc
push
mov
ljmp
and
lea
add
add
xchg
pop
push
popa
jp
cmp
sahf
outsl
cmc
sbb
cmp
int3
and
mov
lret
jg
sbb
mov
cmp
sbbl
aaa
mov
cmpsl
and
es
inc
mov
call
cwtl
cs
call
sub
and
flds
cltd
js
insl
pop
mov
inc
or
jl
add
adc
jae
push
and
cmc
adc
cltd
push
mov
or
lods
mov
aaa
repz
test
jecxz
into
sub
sub
dec
in
dec
fists
jo
cmp
add
in
pop
iret
mov
lcall
jo
ljmp
lods
cli
aad
add
push
scas
out
pop
sbb
pop
data16
insl
pusha
pop
cmpsl
xchg
fimull
sbb
lds
pop
in
xchg
ret
jnp
dec
pop
push
out
cli
cmpsb
jnp
mov
cwtl
push
cmp
xchg
movsb
or
lahf
cs
cmp
aam
add
insb
aad
add
outsl
jecxz
sti
dec
inc
xchg
push
dec
pop
orb
stos
adc
mov
pop
out
fstl
dec
data16
push
sbb
pushf
stos
clc
movsb
pushf
pushf
in
xchg
in
js
xchg
jl
loope
sub
add
sub
dec
repnz
mov
jnp
mov
popa
sbb
mov
jge
loope
xor
out
cmp
rorb
ja
xchg
pop
jnp
push
lods
test
popf
cmpb
push
pop
push
inc
and
mov
rcrb
add
xchg
jl
lods
iret
add
mov
push
sub
mov
xor
xor
lds
ret
je
jle
arpl
cmpsl
dec
cmpsl
int3
in
gs
imul
enter
pop
mov
cmpsl
movsb
xchg
notl
in
xchg
dec
sbb
cwtl
sub
adcl
insb
push
shll
lock
push
adc
iret
mov
add
xor
cs
cmp
outsl
inc
xchg
fstl
sbbb
and
jecxz
shrl
mov
rolb
out
fucomp
aam
push
dec
test
stc
pop
int3
inc
icebp
sub
dec
sbb
pop
fstpt
jno
push
leave
xor
int
add
add
test
imul
inc
push
mov
inc
idivb
xor
sbb
jae
cmc
fwait
mov
mov
imul
scas
pop
or
outsb
mov
cmp
test
ja
pusha
inc
arpl
ljmp
xchg
sbb
pusha
std
outsl
decl
sbb
movsl
or
inc
adc
cld
mov
cwtl
out
and
push
hlt
jae
lods
mov
sbb
cli
jmp
mov
cmpb
add
adc
sbb
mov
push
push
in
fdiv
dec
loop
push
xor
mov
adc
mov
stos
lcall
or
aas
mov
jb
es
cmp
fidivrl
cmpl
and
xchg
jmp
push
addr16
mov
inc
push
adc
out
fwait
pop
daa
aaa
jno
add
mov
sbb
std
mov
test
imul
ds
rorl
mov
movsl
das
pop
movsl
push
jb
pop
stc
inc
stos
fwait
stc
aas
or
int
pop
out
add
ss
pop
jne
out
and
push
sarb
mov
daa
mov
mov
out
cmp
xchg
jecxz
mov
jo
xchg
jmp
mov
in
inc
stc
in
xchg
gs
cmpsb
and
lock
ja
fxch
popa
mov
mov
adcl
sub
outsl
jb
gs
push
imul
test
stos
cli
push
jle,pn
daa
fwait
cmp
jge
fiaddl
add
stos
sub
lea
jp
and
adc
mov
inc
pushf
icebp
add
lods
aas
sbb
gs
negl
imul
push
cmp
jo
rclb
filds
dec
adcl
je
loope
dec
dec
in
fsts
daa
mov
xchg
inc
std
int
cs
cwtl
mov
adcl
adc
aam
mov
das
dec
repnz
outsl
mov
adc
stos
lods
xchg
in
arpl
xchg
dec
jns
mov
xor
mov
or
pop
cmp
pop
sbb
shl
into
scas
popf
cmp
and
mov
cmp
test
mov
push
aad
push
push
hlt
inc
cmpsb
cmc
pop
jbe
dec
lock
mov
imul
pop
sti
out
xchg
inc
xor
dec
sbb
aas
out
dec
shll
push
push
lret
sub
aad
arpl
sub
mov
sahf
xor
fsubrl
push
fstp
mov
dec
inc
or
fstpl
fsubrl
or
cmp
sarl
cmp
mov
sub
test
and
fucomp
int
push
lods
cmp
loope
cmp
mov
add
cmpsl
psubsw
out
fisttpll
xchg
mov
divl
mov
pop
aas
mov
ret
test
push
jmp
gs
and
cmpsl
mov
cmp
fmulp
mov
cmp
pop
push
jg
test
test
mov
loop
in
fildll
insb
mov
fbld
leave
and
pop
cs
insb
push
mov
inc
xor
adc
cmpsb
cmpb
and
push
int
lea
jae
outsb
or
out
jae
dec
fs
int3
sub
lods
or
mov
mov
fdivr
rcl
or
test
xor
mov
rorb
xchg
sub
sahf
ja
sub
dec
and
cmc
inc
dec
mov
add
pop
pop
xchg
stos
mov
testl
jns
xor
int3
inc
push
xor
cs
xor
jecxz
and
mov
sub
aad
out
movl
fbld
testb
movsb
inc
into
mov
jle
and
pop
push
cli
cmp
popf
pop
out
dec
mov
repnz
mov
and
stos
rolb
mov
xor
mov
and
sbb
jne
inc
stos
sbb
or
sbb
inc
push
jno
hlt
in
sbb
inc
jl
dec
imul
outsl
pusha
sahf
xchg
out
lahf
jle
test
loop
inc
out
jl
mov
roll
rcll
push
cmp
mov
stos
add
popa
cmc
inc
aas
xor
and
rorl
scas
xchg
movsl
inc
xor
jge
jo
mov
sub
and
xchg
pop
pop
adc
popa
jb
lock
dec
adc
xor
sub
mov
lahf
lcall
mov
mov
inc
push
outsb
jle
sub
loope
adc
mov
push
and
xor
rorl
out
mov
cmpsb
pop
test
aaa
bound
lcall
jb
pop
sbb
outsb
lock
lock
bound
or
add
nop
shrl
aas
cmpsb
insl
call
mov
nop
xchg
pop
jo
add
xor
mov
movsl
sub
sub
arpl
mov
insl
xchg
sti
xchg
sti
cmpsl
in
mov
sbbl
mov
push
xchg
lret
mov
dec
vmwrite
cli
mov
insl
clc
sub
push
add
jae
jne
push
and
pop
pop
sub
sbb
data16
test
cli
cmp
sub
mov
inc
jl
cmc
dec
ss
fadds
sbb
sbb
ja
cltd
mov
push
bnd
stc
xor
jecxz
mov
or
outsb
mov
push
sub
cmp
cmp
mov
arpl
lock
push
les
push
jle
jge
push
or
jne
fdivs
inc
mov
imul
pop
icebp
or
or
jae
dec
push
sarl
pop
jbe
fs
rcr
fdivl
call
jge
sub
je
mov
xor
cmp
scas
fs
lock
mov
leave
xchg
cmp
cld
aad
jl
push
mov
paddusw
subl
jo
scas
aas
scas
mov
lods
xor
loope
stos
ljmp
cld
push
or
and
push
mov
movsb
xor
or
inc
shrb
mov
cld
mov
cmpsb
mov
add
jo
xor
mov
push
and
jnp
adc
add
jp
cmpsb
inc
pop
push
push
push
mov
mov
xchg
daa
jo
cmp
sbb
push
es
add
jns
adc
stos
sbb
lcall
mov
push
mov
dec
push
pop
xchg
push
call
jns
jb
xor
aad
add
test
xor
rcrb
outsl
popa
xchg
and
push
mov
enter
mov
xchg
mov
xchg
imul
mov
add
les
cmp
mov
hlt
xchg
fdiv
mov
dec
mov
pop
orl
jnp
cwtl
lods
xorb
dec
subl
and
sbb
repnz
jb
ror
inc
adc
lahf
inc
pop
jl
aam
pop
lock
fs
push
add
xchg
sbb
int
xchg
cwtl
mov
enter
nop
lods
mov
or
inc
repz
enter
mov
push
insb
ljmp
sbb
dec
dec
pop
jns
cmc
xchg
test
push
xchg
flds
insl
xchg
or
pop
sti
les
movsb
mov
aam
shr
mov
ja
in
das
pop
inc
pop
mov
hlt
lret
cwtl
mov
pop
mul
inc
sbb
xlat
stos
mov
and
xchg
test
xor
lcall
lds
xchg
flds
addr16
sub
lock
sbb
xchg
ds
mov
mov
jae
mov
fnstcw
or
cmp
jb
lock
sub
push
add
push
mov
pop
mov
cld
in
push
adc
mov
sbb
jmp
icebp
jmp
pop
test
pop
pop
popf
push
and
movsb
cmp
loope
lcall
xchg
push
scas
sbb
sub
inc
adc
ja
lock
dec
pushf
mov
jb
adc
pop
jae
pop
inc
adc
dec
xchg
xor
push
pop
out
insb
sti
pop
push
das
clc
mov
add
ja
mov
inc
jge
andl
dec
popa
stos
aaa
dec
stos
cmp
sbb
mov
iret
cltd
add
clc
xchg
cmpsl
and
xchg
mov
loope
mov
insb
loopne
lods
into
push
and
pop
mov
dec
jmp
outsl
rorl
les
jno
sbb
loope
push
mov
ss
stos
lods
inc
and
mov
movsl
jo
sbb
mov
mov
inc
lods
push
shl
cli
add
dec
jbe
pop
int
loop
jecxz
xor
jg
jns
lret
and
loope
scas
imul
push
les
inc
movsl
push
adc
adc
fldcw
add
cmp
repz
std
adc
sbb
mov
imul
fwait
addr16
fs
mov
add
outsb
insb
aam
test
lods
mov
jb,pn
leave
data16
test
pop
and
lret
fwait
clc
cmp
enter
dec
mov
dec
or
inc
mov
daa
test
sub
push
xchg
ss
sti
sbb
fldcw
xchg
sub
and
mov
fldenv
mov
faddp
jo
jg
xor
jae
mov
jno
out
mov
and
nop
int3
lret
rcll
das
jbe
outsl
inc
dec
aaa
add
seto
call
js
inc
or
rcrl
jbe
cmp
push
xchg
lea
xchg
test
sti
adc
add
fdivp
popf
call
xchg
cli
inc
fwait
xchg
jge
cld
xchg
das
xchg
jle
clc
aaa
or
mov
xchg
inc
push
pushf
pop
mov
aam
mov
cmpsl
cmpl
sub
adc
xchg
adc
aad
movsl
add
adc
enter
data16
adc
ss
sbb
repz
sbb
and
inc
mov
push
nop
mov
fmuls
xchg
popf
scas
xchg
popa
sub
test
lret
lock
stc
push
fbstp
cmpsb
pop
loope
xor
adc
inc
rclb
aad
add
push
lahf
int
enter
movsl
insb
mov
jp
push
mov
gs
dec
sub
mov
mov
fldl
mov
jne
push
insl
insb
aad
jbe
mov
sbb
aad
loope
ja
lea
mov
cmp
pop
jbe
jg
loope
and
movsb
inc
fcomi
test
jecxz
push
arpl
aam
sbb
fcoml
add
icebp
jae
jns
jne
int
mov
outsl
and
push
test
mov
inc
mov
xlat
aaa
pusha
mov
into
xchg
js
jae
loopne
ja
mov
adc
outsb
xchg
std
xchg
inc
daa
std
outsb
je
lds
push
leave
aaa
and
pusha
imul
icebp
enter
mov
popf
call
lahf
int
sub
mov
inc
mov
les
ljmp
push
push
rcrb
jae
jbe
push
push
rcrb
clc
in
sti
or
cld
sbb
mov
xor
insl
inc
test
pop
aaa
int3
push
aas
mov
dec
adc
cmp
outsl
in
aas
xlat
sahf
fsubrl
ret
enter
fwait
fs
ljmp
shr
lods
js
pop
test
push
dec
jb
push
dec
add
push
repz
jo
iret
mov
dec
in
scas
pushf
lods
cmpsl
cmpl
pushf
fdivrl
pop
test
pop
mov
jl
dec
jl
ljmp
test
xor
or
and
lret
test
iret
adc
cwtl
cli
lea
xor
push
sub
fidivrl
repnz
pop
mov
out
mov
in
cmp
jne
or
adc
daa
and
sub
xor
pop
dec
inc
sub
inc
jge
out
add
push
clc
mov
addr16
out
in
mov
rcrb
out
push
stc
jmp
cmp
jl
iret
xor
and
mov
jae
test
xor
rcrb
lahf
adcl
iret
cmc
inc
mov
test
repnz
pop
les
ds
mov
lods
xchg
jl
loopne
inc
out
add
pop
dec
and
and
fwait
int3
jne
xchg
xchg
in
jg
in
jb
push
ds
cmp
repnz
std
add
jecxz
sub
test
sub
push
jno
sbb
fwait
cmp
aaa
loop
cmp
jb
xor
xor
mov
jle
and
mov
lods
aad
mov
loope
cmp
inc
shlb
lcall
stos
arpl
inc
out
dec
cwtl
andb
or
je
xchg
das
mov
sub
push
mov
or
or
jns
mov
or
lcall
push
popa
lods
inc
sub
addb
enter
out
push
sub
dec
jmp
xor
ficompl
in
rcll
out
movsl
push
out
sub
pop
sub
fistpll
and
dec
pop
aam
lret
mov
push
xlat
rcl
lock
jmp
inc
or
loope
mov
xor
sub
mov
jg
ljmp
stos
cmpsl
fcmove
out
rol
dec
cmp
cld
aam
or
in
int3
iret
push
das
or
sub
push
js
add
fadd
cld
sarl
imul
cmp
and
mov
jns
cmc
pushf
or
dec
sub
in
out
mov
fwait
push
inc
mov
loop
push
sub
inc
xchg
loop
shrl
test
in
loop
pop
pushf
jbe
cmp
xchg
xchg
mov
ret
add
xchg
lcall
test
push
mov
mov
stc
mov
ljmp
lods
mov
jns
cmp
ret
gs
inc
and
or
daa
cmp
and
jmp
jne
mov
ljmp
in
test
xchg
pop
mov
icebp
pop
stos
cmp
push
or
push
gs
sub
dec
push
inc
pop
pop
ret
outsb
and
inc
dec
pop
jne
cmp
test
sbb
jmp
dec
cwtl
xchg
in
mov
mov
movsl
int3
test
clc
inc
outsl
dec
lods
std
or
outsl
xchg
cld
jle
nop
xchg
add
or
addr16
mov
scas
test
nop
inc
xchg
push
mov
jmp
add
adcl
dec
push
es
cmpsb
out
iret
sub
cmc
push
orb
dec
cwtl
sbb
mov
mov
ds
jecxz
sbb
or
or
pop
pop
sub
dec
shll
inc
loope
jle
les
cmp
mov
push
adcl
xor
push
repnz
ja
dec
mov
cmpl
pusha
sub
call
pop
aam
repnz
inc
popa
in
push
adc
add
mov
xchg
dec
cwtl
or
sbb
adcb
lods
pop
lods
pop
inc
mov
aam
jg
pusha
rclb
and
dec
xor
xchg
inc
lods
fimull
fs
add
and
imul
aad
mov
xchg
cmp
mov
sub
mov
cmp
dec
jge
and
cs
jne
fld
cmc
rcll
or
hlt
inc
sub
out
mov
call
lar
xchg
mov
in
add
push
xchg
in
mov
inc
and
mov
repnz
aam
xchg
xlat
add
cmpsb
push
pushf
fsub
in
mov
pop
mov
fimuls
inc
adc
add
jecxz
xlat
mov
scas
push
jmp
scas
sub
or
push
fists
xor
adc
xchg
lds
sbb
in
mov
xchg
int3
xor
mov
sub
pop
call
aad
push
adcl
xor
sbb
xchg
outsb
mov
inc
mov
lcall
sbb
leave
popa
cmp
je
push
test
iret
push
addr16
pop
inc
popa
dec
das
addl
arpl
xor
or
cwtl
jmp
dec
or
push
cwtl
hlt
pop
xchg
and
push
jo
jge
clc
fldl
fldl
cwtl
fbstp
stos
sbb
insl
sahf
adc
or
push
pop
mov
cmp
push
sub
test
pop
xchg
sbb
dec
add
in
test
cmpsl
mov
sti
outsl
mov
mov
lods
pop
add
or
testl
xchg
popf
and
or
cld
mov
call
mov
nop
push
jae
fwait
pop
dec
jge
fsubrs
add
fadds
push
pusha
inc
popa
imul
mov
sbb
mov
sub
sub
fwait
cmpsb
hlt
mov
add
pop
clc
fisubrl
push
nop
xor
gs
mov
cmp
loop
push
cld
mov
xorl
imul
int
xchg
ret
sub
fbld
lret
push
sub
xchg
fucomip
jmp
inc
ss
aaa
les
sub
lods
mov
nop
jl
xlat
ret
cld
pop
mov
adc
or
ret
out
js
shlb
inc
bnd
and
loope
shl
cmc
addb
xchg
pop
mov
cmpsb
xor
push
in
mov
jae
out
mov
call
or
mov
ss
mov
test
dec
push
sbb
push
ror
sbb
test
ret
ret
fisubrl
arpl
adc
neg
xchg
mov
pop
scas
jo
sti
pop
cld
mov
lea
aad
cmpsb
jb
stos
xchg
push
jo
outsb
dec
xor
push
pop
addr16
jb
je
lret
stos
mov
adc
cmp
push
jp
add
ror
or
pop
insl
mov
xor
xchg
or
sub
cmp
push
aas
mov
dec
sbb
cli
mov
lcall
sub
testl
push
mov
cmp
add
das
mov
ja
pop
xchg
ja
and
jle
mov
jl
insl
loopne
add
shr
lret
mov
jge
fs
xchg
inc
hlt
in
xorb
dec
daa
fldt
aas
add
push
mov
rcll
daa
mov
test
test
test
cmp
xchg
sub
enter
call
sbb
dec
jl
in
xor
stc
jmp
xchg
add
push
or
fadd
sub
or
and
into
sar
jne
cltd
call
pop
inc
imul
dec
jns
inc
add
aas
lcall
cmp
loope
movsl
testb
mov
and
lea
xor
out
cmpsb
sbb
and
shl
cmpb
and
lock
jno
jmp
pop
xchg
sbb
ljmp
jbe
mov
out
scas
out
cmp
cld
pop
mov
test
or
inc
cli
movsb
or
adc
push
repnz
push
pusha
mov
shrb
dec
mov
xchg
stos
test
mov
and
and
push
xchg
add
sahf
pop
das
mov
inc
mov
fisubrs
sbb
leave
mov
or
shrl
jnp
and
fdivs
pop
rcrl
repz
adc
jns
mov
adc
ficomps
sahf
cmp
sbb
rclb
loop
push
jg
pop
int
inc
imul
fildl
xchg
jno
cmp
mov
mov
inc
test
sarl
inc
dec
pop
inc
fdiv
lods
in
xlat
in
call
out
lret
je
lret
mov
push
push
gs
cwtl
xchg
ss
mov
mov
mov
jb
mov
lret
hlt
aas
aad
adc
dec
outsl
sbb
inc
shrl
andb
mov
xchg
adc
add
fadd
mov
mov
xchg
fwait
xchg
xlat
popf
divl
mov
insb
aam
xor
push
scas
or
and
out
stos
sbb
cmpsb
add
fidivrs
and
fstpt
adc
adc
cmc
outsl
pop
adc
xor
sbb
test
mov
into
rcrl
in
jl
fincstp
popa
icebp
jge
sbb
lcall
loop
insl
or
push
js
gs
dec
aas
mov
jge
xor
inc
xor
inc
nop
out
aas
mov
sar
mov
xor
call
xchg
xchg
sbb
pop
leave
lret
inc
idiv
sub
mov
out
or
pop
stos
rcll
xor
movsb
xor
or
cmp
jl
jl
push
incl
movsb
adc
iret
les
addl
ja
inc
cmp
inc
shll
xor
fiaddl
cmp
pop
pop
adc
divl
aad
rolb
mov
mov
out
add
test
pop
push
jle
cmc
dec
mov
ljmp
mov
movsl
js
cmp
push
ds
out
stos
jmp
fisubrs
and
xor
ja
pushl
jge
adc
lahf
mov
cmp
jl
dec
xchg
in
lods
mov
jecxz
sub
pushf
sbb
mov
loop
aam
lahf
fsubs
stos
xchg
sub
cmp
mov
test
push
mov
es
pop
testl
cmp
adc
lock
xor
jo
repz
pop
test
cmp
and
fdivrp
jno
testl
xchg
pop
lods
mov
fnsave
mov
leave
mov
addl
in
cmp
push
das
lahf
ljmp
mov
cmp
mov
sub
mov
fidivl
xor
xchg
lock
bound
xchg
frstor
or
cli
cmp
lods
jle
cmp
mov
repnz
inc
sub
dec
ljmp
jmp
daa
mov
subb
or
push
sahf
pop
mov
mov
jecxz
sbb
fnsave
xlat
lret
or
cld
movb
gs
int3
loope
ja
and
mov
test
cmp
cmp
dec
jge
cmp
popl
bound
div
out
arpl
mov
je
fsubs
movsb
lahf
shr
shlb
pop
lahf
or
mov
rorl
mov
cmp
in
push
xchg
rclb
shl
mov
xchg
ror
stc
jbe
std
repnz
dec
mov
test
lahf
leave
push
aad
xlat
or
dec
lret
scas
in
lea
xor
ret
mov
and
jo
cmp
cli
es
push
pop
dec
push
movsb
loope
xchg
mov
dec
cld
jmp
fs
lds
jmp
cmp
xchg
loope
sub
mov
in
pop
mov
inc
pushf
fistpll
clc
jo
mov
jl
jp
pop
or
cmc
sub
or
nop
dec
insl
adc
pushf
mov
lea
xchg
pop
dec
push
imul
pop
insb
mov
add
adc
fiadds
mov
mov
insb
adcb
and
jp
mov
out
in
sbb
loopne
stos
adc
pop
sub
ljmp
cmp
fbstp
lods
popa
sahf
and
pop
dec
outsl
daa
lods
jo
jge
popl
push
xor
push
dec
mov
cmpsb
jae
and
inc
call
mov
adc
inc
and
sahf
xor
and
inc
xchg
jmp
hlt
pop
pop
add
xchg
inc
push
pop
inc
jp
push
dec
fld1
xor
sahf
mov
aam
int3
mov
mov
xchg
push
in
call
cltd
sbb
push
inc
sti
pop
outsb
xor
insl
dec
aam
push
and
in
push
mov
pop
or
ja
pop
out
mov
bound
fnstcw
cmp
fstl
in
dec
jne
scas
lret
pop
stc
xor
push
push
xchg
out
and
cmp
test
leave
adc
mov
pop
push
xor
out
add
sti
push
int3
lods
in
ret
jl
lods
in
lret
hlt
lock
lods
mov
pop
dec
cli
nop
add
movsl
sbb
js
aad
xor
fmull
outsb
pop
xor
jle
les
movsl
jo
in
test
rcll
mov
sub
jbe
mov
pop
cwtl
jge
stc
lods
aas
xchg
xorb
rcrb
les
stos
inc
and
pop
push
push
or
push
lret
pop
sbb
lcall
push
xor
mov
pop
subl
in
cmp
sbbb
out
mov
xor
jbe
inc
adc
cwtl
sbb
lea
jmp
cltd
outsb
cmc
and
xchg
add
popa
in
jns
test
mov
xchg
pop
pop
scas
push
call
pop
addr16
repz
and
cmp
movsb
jb
sbb
rcrl
cld
adc
jo
std
mov
push
xor
int3
or
lock
cmpb
dec
push
in
jns
jl
fstpl
cs
cmc
mov
cmpsb
xchg
imul
jl
cmp
jnp
call
outsb
cmpsl
dec
xchg
sbb
mov
sbb
add
fs
test
or
adc
sub
stc
fs
jg
jecxz
imul
xchg
xchg
mov
adc
add
clc
jg
lods
call
push
inc
adc
push
aaa
cs
add
int3
in
inc
lret
cmp
lahf
mulb
pop
xchg
outsl
pop
sub
andl
and
arpl
mov
test
mov
arpl
imul
movsl
xor
mov
mov
clc
es
shr
adc
lret
sub
divb
cmp
add
mov
mov
push
mov
loop
mov
inc
push
or
fs
ret
cs
pop
inc
fstl
stos
xchg
std
loop
mov
fnstcw
jbe
sub
movsl
dec
sbb
faddp
test
adc
mov
int3
mov
inc
loop
inc
pushf
stos
inc
dec
dec
cmp
xor
jae
sbb
lahf
push
xor
xchg
daa
mov
scas
jne
mov
loopne
sbb
gs
out
lea
adc
adc
push
jmp
aas
cmp
add
loopne
lods
push
mov
lcall
cs
adc
pop
es
sti
push
mov
jns
imul
mov
or
inc
test
jb
mov
out
test
dec
outsl
lods
lss
lret
test
or
pop
add
mov
orb
mov
cmp
dec
pop
repnz
or
cmpl
addr16
jb
mov
imul
add
push
shll
hlt
test
rorb
fsubrl
mov
sbb
push
xchg
cmpl
pop
dec
pop
and
pop
mov
test
or
ds
jo
cwtl
scas
clc
ret
fwait
lods
push
mov
mov
adc
jmp
orb
or
add
mov
push
jp
jo
aam
push
jno
mov
xor
bound
in
fcom
and
mov
jae
inc
jne
loop
xchg
out
ljmp
push
movsb
mov
xrelease
xchg
add
adc
test
lcall
xor
subl
sub
xor
sbb
mov
shl
xchg
lahf
lret
lret
ljmp
cmp
decb
lret
sub
in
dec
lret
scas
movsb
nop
ja
add
lods
mov
pusha
xchg
imul
ret
daa
movsb
xchg
in
mov
sub
lock
pushf
jle
pusha
aam
in
int
inc
jmp
repz
lods
mov
nop
stos
push
lahf
fdivr
mov
cmp
loop
jmp
and
out
xlat
sub
in
mov
in
fists
mov
loop
jge
sub
es
push
stos
dec
jo
or
sbb
mov
sbb
jmp
xchg
cmp
add
and
arpl
inc
jns
pop
roll
aam
dec
aad
sahf
mov
out
addr16
pop
push
adc
clc
inc
mov
jmp
out
sbb
dec
push
cmp
stos
xor
jecxz
jb
jo
dec
int3
dec
xor
cmp
ss
jmp
xchg
sbb
pop
fscale
sub
cs
cltd
push
push
ja
push
mov
shl
outsl
pop
rcrl
das
cmp
add
insb
lret
gs
in
pushf
cmp
leave
out
jecxz
mov
dec
fs
push
fisubrl
sbb
sbb
lret
push
pusha
imul
out
es
pop
xchg
sti
nop
das
ror
dec
jns
mov
ret
fcomp
cmp
lret
mov
lret
push
mov
pop
mov
int
fstpt
std
sbb
pop
test
orb
xchg
ja
pop
lds
idivb
lods
icebp
gs
test
imul
ror
ja
fists
xor
mov
and
dec
pusha
mov
clc
stos
fistpl
incb
mov
test
mov
lret
inc
cmpsl
in
rcrb
or
adc
rclb
rorb
pop
and
test
ljmp
cmpb
mov
dec
push
js
sub
fimuls
inc
pop
or
cld
mov
int
cmpsl
push
or
push
inc
leave
dec
aam
lds
jno
test
or
stos
dec
filds
lahf
xchg
ds
and
arpl
inc
and
add
push
jo
divb
cltd
mov
sub
mov
or
imul
jle
pushl
and
sub
stc
add
cwtl
adcb
pop
mov
jecxz
out
jbe
aaa
inc
jo
sbb
cwtl
mov
fwait
sti
pop
and
inc
cmc
pop
lret
sub
sub
int3
push
insl
data16
xchg
fisubl
cli
dec
xchg
loope
sub
dec
add
inc
mov
mov
clc
mov
lcall
jmp
sub
mov
xchg
lret
xlat
or
sub
movsl
or
or
xchg
mov
jbe
negl
inc
and
ret
into
pop
xlat
ljmp
pop
mov
das
roll
sbb
call
stos
bound
push
xchg
imul
sti
cmc
iret
sub
js
fwait
imull
shlb
inc
jge
outsl
pop
mov
sbb
push
inc
fmull
or
es
fnsave
cmp
es
pop
jne
nop
outsb
jno
leave
rcrb
arpl
rclb
into
enter
xchg
loopne
or
add
je
sahf
mov
orb
lahf
iret
test
lret
ja
add
in
mov
and
fcmovu
fwait
add
call
cmp
and
out
sbb
xchg
rcll
pop
pminub
adc
xchg
jns
loopne
xchg
je
lods
inc
push
hlt
roll
jge
jne
push
add
xchg
sub
xchg
aas
xor
mov
xlat
ret
mov
shll
arpl
push
into
popf
adc
jge
xchg
stos
out
clc
adc
inc
and
dec
sub
lret
inc
cwtl
test
fwait
xchg
dec
add
sub
mov
jl
xor
imulb
jecxz
ficompl
xchg
xor
test
jo
rolb
in
jae
adc
mov
or
loopne
mov
aaa
lea
repnz
add
rcll
in
add
ret
out
iret
pop
cwtl
adc
shll
rcll
add
cld
xchg
pop
mov
pop
nop
dec
sar
out
mov
test
cwtd
or
xchg
xor
enter
roll
test
push
pop
out
arpl
mov
addb
lea
in
dec
lods
rolb
dec
imul
push
fsub
add
pushf
xchg
stc
pusha
inc
movsl
adc
sbb
stc
xor
xor
loope
sub
push
xor
mov
inc
test
pop
je
adc
in
loopne
loopne
jmp
jo
sub
fldt
xor
cmp
or
fildl
sub
lods
mov
sbb
mov
lcall
mov
outsl
mov
mov
pushf
inc
dec
jnp
mov
mov
pop
std
xor
dec
hlt
test
pop
mov
lret
imulb
repnz
jo
sarb
int3
add
inc
lretw
rcl
mov
call
mov
outsb
dec
add
add
in
enter
push
aaa
pop
add
sbb
pop
lods
xor
push
push
mov
out
xorb
push
dec
adc
cwtl
jns
mov
push
xor
mov
inc
dec
gs
cmp
sub
push
dec
or
testb
shlb
or
cmpsb
adc
pusha
dec
add
bnd
pop
lock
cmp
sbb
scas
sbb
or
xchg
push
jl
repz
or
int3
sbb
xchg
mov
xor
mov
nop
sub
sub
in
mov
fmull
dec
iret
mov
adc
sbb
nop
enter
les
pop
pop
aam
add
add
or
lahf
inc
jne
call
addr16
cwtl
add
jns
pop
jns
cs
andb
adc
or
and
lcall
sbbb
inc
jnp
dec
nop
cmp
or
orb
loopne
push
xor
mov
pop
cmp
add
cli
arpl
jmp
mov
or
aas
pop
ja
sub
lahf
mov
shll
lods
out
imul
dec
fcomps
sbb
or
pop
xchg
inc
scas
jmp
lcall
mov
hlt
rcrb
cwtl
in
sbb
imul
xor
dec
xchg
sbb
xor
in
adc
hlt
or
popa
lret
in
decl
shlb
mul
subl
aaa
xchg
mov
js
rcll
fs
push
call
pop
aad
inc
cli
push
into
fs
sbb
jg
dec
cmp
pop
test
rolb
xor
dec
inc
pusha
pop
into
js
sti
jl
adc
lods
outsb
mov
or
lret
int3
shll
xchg
pop
lea
push
ljmp
pop
cmp
pop
std
fdivrl
cli
rcl
ja
pop
sub
and
jp
enter
leave
jne
mov
jp
ljmp
sti
cli
addr16
xchg
fbld
leave
pop
mov
out
jmp
push
scas
inc
js
pop
icebp
push
imul
add
cld
pop
imul
jmp
pop
shl
aas
pop
xchg
add
push
cwtl
push
adc
or
sarl
insl
stos
call
mov
lret
push
cmp
daa
and
pop
jno
xor
mov
js
xchg
xchg
xchg
ljmp
ljmp
sub
xchg
icebp
loop
jno
sbb
inc
xor
inc
aas
gs
pop
cmp
gs
fsubs
ret
lods
sbb
jnp
xor
sbb
dec
imul
mulb
sar
rorl
xchg
cmp
stos
mov
mov
clc
mov
frstor
pop
cli
aam
pop
inc
cwtl
mov
mov
jecxz
sbb
pushf
pop
and
push
xor
mov
in
repnz
sbb
jnp
jae
pop
hlt
repnz
insb
jae
pop
ljmp
pop
sub
incl
lock
fwait
adc
pop
push
pop
mov
add
sub
negb
jns
es
cmp
mov
pop
enter
pop
cmpb
ss
aas
inc
and
in
pop
ret
jg
stos
out
add
pop
mov
and
pop
mov
imul
std
mov
out
add
lods
cld
aam
cmpsl
xor
into
xchg
push
imul
popf
mov
popf
lea
cmp
popl
sbb
test
jmp
enter
out
loop
lock
jns
repz
add
movsb
xor
pop
loope
add
in
or
cwtl
daa
subb
xlat
dec
xor
int
je
outsl
out
cmova
mov
cs
xchg
call
movsb
movb
mov
shlb
inc
pop
cltd
andb
daa
lods
icebp
mov
ss
xchg
inc
adc
inc
dec
fistl
dec
pop
je
out
fdivrs
dec
insb
es
mov
adc
pop
clc
or
loope
cli
in
cmp
das
ret
sbb
lahf
lret
sti
daa
sub
pop
mov
mov
popf
push
test
sub
xchg
bound
out
pop
mov
xchg
pop
or
xchg
mov
ljmp
push
aad
mov
mov
inc
or
or
btc
test
iret
pop
lret
adc
in
shlb
mov
mov
pop
mov
pop
sahf
sbb
mov
and
inc
inc
out
jl
lret
fwait
xchg
arpl
das
adc
dec
add
xlat
shll
mov
fwait
pusha
sub
test
dec
ss
ljmp
mov
cmc
rcr
push
not
shl
movsl
mov
xchg
mov
pop
and
mov
stc
test
adc
out
cwtl
clc
rclb
popf
xchg
test
aam
sbb
repz
addl
sbb
cmp
fsubrs
mov
and
fcmovnb
add
jbe
add
out
rorb
dec
insb
in
xchg
shrl
sarl
sbb
inc
push
insb
mov
add
jo
push
xor
hlt
fsubl
and
shl
fwait
test
sbb
dec
mov
fsubs
test
pop
lahf
loopne
xchg
push
lret
scas
cli
add
insb
push
inc
or
mov
test
xchg
and
aas
dec
pop
jle
mov
lret
xor
inc
cs
lods
insl
dec
mov
pop
mov
rolb
int
aas
jb
xchg
pusha
pop
aam
imul
xlat
inc
mov
sbb
push
or
cmc
ficoms
jbe
insb
jg
and
push
push
rolb
imul
pop
pop
xor
adc
ficompl
rorb
pop
popl
xchg
and
fdivrl
loopne
or
mov
icebp
js
bsf
lds
es
cmp
adc
imul
outsb
dec
add
mov
outsl
sub
push
push
mov
pop
popf
push
lea
std
sbb
je,pn
nop
and
push
pop
nop
leave
mov
mov
jbe
shll
ret
mov
xchg
mov
mov
sbb
xor
insl
push
dec
lcall
aad
ja
jbe
lods
mov
clc
xor
push
inc
shll
mov
cwtl
mov
dec
jne
mov
mov
xor
ljmp
inc
sahf
add
xchg
test
and
mov
xchg
or
add
clc
es
inc
repz
mov
adc
mov
scas
call
mov
arpl
mov
and
push
mov
mov
add
rcl
sbb
imulb
sub
lea
mov
imulb
out
fldenv
out
das
cmpsl
mov
inc
mov
icebp
jno
add
ss
orb
lcall
push
insl
sub
mov
pop
mov
mov
and
xchg
pop
imul
sbb
hlt
shlb
dec
mov
popa
xchg
je
shrb
mov
jb
mov
fidivrl
cli
popf
pop
and
and
lods
pop
inc
add
and
aad
mov
mov
dec
mov
and
into
negb
jae
cmp
jbe
pushf
push
enter
imull
mov
push
cli
jbe
jno
sahf
jge
lock
repz
xchg
push
sbb
mov
int3
sbb
subb
lret
int
pop
stos
jmp
inc
je
xchg
xor
sub
loope
and
push
in
xor
js
out
sub
hlt
dec
shll
pop
mov
lods
cmp
addl
adc
or
sbb
pusha
sbb
inc
int3
mov
in
inc
lock
xor
xchg
or
pop
in
inc
clc
inc
movsb
push
lret
insb
je
add
mov
loop
mov
pop
rorb
in
jb
pushf
call
and
ud1
xlat
add
out
pushf
inc
push
outsl
sti
gs
test
mov
lock
pop
or
inc
nop
or
rcrb
iret
fsts
xchg
jl
movsb
sarb
lahf
dec
xchg
lahf
dec
push
add
sahf
jecxz
inc
cmpsl
aaa
pop
add
lret
push
add
xor
sar
enter
stos
stos
cmc
lods
rcll
mov
clc
jge
and
lahf
rorl
fidivrs
inc
jns
enter
clc
mov
mov
adc
je
cld
pop
sbb
add
lods
mov
add
loope
add
push
dec
pop
dec
pop
shr
or
mov
repnz
push
mov
fiadds
pop
sub
sbb
sub
add
dec
into
ljmp
mov
dec
xchg
jge
adc
testb
mov
add
sbb
dec
inc
ljmp
xor
sbb
std
ss
inc
ljmp
push
js
mov
jmp
out
push
pop
inc
inc
icebp
leave
adc
push
lods
daa
mov
clc
insl
jo
jbe
inc
fcmovne
test
xlat
xlat
out
fdivs
add
and
cmp
push
jnp
sbb
mov
sbbl
jge
xlat
xor
ja
add
cmp
js
jb
xchg
dec
std
test
fs
sub
jmp
or
sbb
push
jb
inc
leave
enter
xchg
inc
pop
insl
fdecstp
push
push
pop
adc
and
outsb
adc
addl
test
push
dec
jmp
sarb
or
add
gs
call
je
ret
andb
mov
add
and
jmp
icebp
pusha
add
lret
sahf
mov
lea
mov
or
sbb
fmuls
hlt
mov
push
push
mov
or
imul
jg
xchg
jle
mov
nop
sarl
inc
jbe
roll
lcall
call
sbb
inc
ds
sbb
add
sbb
int
mov
fistl
imul
mov
aad
shl
adc
dec
movsb
cmp
aas
push
hlt
movsb
leave
mov
mov
adc
sub
idivb
clc
mov
out
xchg
bound
pop
sti
movsl
xchg
sbb
xor
out
fisttpll
adcb
add
pop
rorb
pop
or
js
cmp
inc
mov
loop
lret
or
adc
insb
lods
pop
xchg
inc
cs
xchg
sub
pop
inc
aaa
inc
out
sub
and
stos
or
xor
inc
sbbl
fnstsw
mov
rolb
add
arpl
movsb
sub
lret
jmp
je
adc
lock
lahf
ljmp
sub
and
cmp
fldcw
fstpl
sbbb
je
mov
inc
iret
out
mov
iret
cmp
fsubl
xlat
ljmp
xchg
popa
cmp
sbb
dec
sahf
repnz
jns
jbe
aad
mov
loopne
xchg
int
inc
cld
cli
xchg
add
or
mov
or
mov
leave
insb
nop
in
sub
push
xchg
jge
fimuls
ret
mov
and
mov
mov
inc
lea
mov
add
es
notb
jae
aam
sbb
repz
adc
push
loope
int3
test
jo
loopne
cmp
rcrl
and
or
dec
test
xlat
xor
sbb
mov
jmp
into
ds
push
xor
aas
push
fiadds
das
cmp
ljmp
sbb
sub
push
xor
ljmp
bound
je
sbb
mov
and
popf
scas
notl
dec
dec
xchg
pop
push
push
xchg
imul
gs
add
sub
cmp
dec
push
fxch
xchg
lcall
int
nop
daa
fsubs
gs
imul
stos
add
popa
pop
orb
jl
pop
lret
popa
stc
push
or
push
adc
mov
fsubrl
arpl
cmp
pop
push
addr16
push
or
fsubrs
mov
dec
mov
enter
test
pop
mov
decb
push
dec
rcll
lods
push
loop
pop
mov
outsb
jmp
push
push
int
push
bound
repz
cmc
mov
jecxz
stos
lds
outsl
jb
and
or
mov
fs
adc
cli
add
clc
sub
push
inc
int
xchg
std
rcr
fiaddl
roll
fiaddl
push
or
sbb
or
mov
and
inc
mov
mov
mov
imull
pop
pop
aam
dec
and
pop
mov
xchg
and
add
test
or
jo
cmpsb
mov
xor
pusha
fisubl
faddl
mov
or
fistpl
push
and
xor
fmull
out
inc
fisubs
mov
dec
push
and
mov
pop
mov
icebp
push
and
xchg
sahf
loop
jo
sub
sti
lahf
cmp
inc
push
sbb
aad
push
loope
outsl
rcrl
andl
inc
imul
out
lods
bound
leave
or
stos
leave
fbstp
out
mov
jnp
push
adc
scas
or
sub
outsl
inc
test
xor
pop
jae
jecxz
and
testb
push
gs
xor
add
jge
ficomps
in
movsl
and
inc
mov
aas
cs
jb
mov
leave
lea
dec
adc
push
jno
into
jns
imul
pop
dec
pop
subl
sbb
mov
pop
mov
sub
scas
pusha
jb
xchg
cmpsl
fnstenv
movb
push
or
repz
mov
jle
out
cmp
fsin
movsl
sbb
stos
sbb
cs
mov
lahf
movl
out
or
pop
insl
repz
mov
std
jmp
aad
decb
mov
xchg
jno
jp
dec
adc
hlt
mov
pop
les
dec
or
jns
dec
test
jge
iret
flds
dec
lahf
push
xor
push
sub
repnz
add
int
inc
jle
imul
dec
jp
or
pop
adc
add
sub
cmp
sub
and
out
adc
sub
push
mov
out
mov
mov
cmp
xchg
iret
dec
lods
adc
mov
insl
adc
mov
mov
fldl
out
fs
cwtl
lods
loopne
aad
test
es
pusha
add
test
das
xchg
pop
enter
loopne
std
mov
int3
adc
sub
xchg
push
push
cmp
dec
test
push
mov
pop
shlb
jl
dec
push
sbb
cmpsb
lret
loopne
repnz
decl
sbb
fidivrs
or
adc
push
jl
out
xor
xor
inc
jmp
lods
dec
xchg
sbb
xor
sbb
jp
repz
or
icebp
pop
push
jae
subb
repnz
mov
adc
dec
dec
push
sub
stos
daa
xor
into
or
jg
es
adc
mov
dec
add
mov
cmc
in
push
negl
push
cmpsl
push
xor
js
shll
mov
pop
xlat
or
xchg
enter
into
in
out
cs
push
clc
scas
pop
jg
out
dec
rcr
into
push
cmp
sbb
cmp
pushf
push
cmp
push
mov
in
jae
rcr
push
add
inc
push
shrl
je
test
in
loopne
xor
sbb
adc
dec
outsl
orb
pop
pop
jne
add
push
sub
dec
into
pop
xorb
xchg
subb
and
xor
cld
add
push
notl
fldl
mov
call
scas
mov
mov
test
dec
loopne
loopne
cmp
mov
int
mov
push
icebp
cltd
dec
fnstenv
pop
pop
ret
int3
shlb
lods
rolb
xchg
fistps
xchg
stc
mov
push
push
shll
jb
popa
adc
movl
lods
and
psrld
lods
stos
mov
sti
test
push
push
out
pop
xor
pop
pop
mov
sbb
mov
pop
fmull
sub
push
ss
je
xchg
mov
popa
push
test
pushf
mov
faddl
sbb
sbb
arpl
out
push
sbb
sbb
inc
jge
inc
dec
xor
mov
fisubrl
jl
hlt
dec
stc
and
mov
cmc
sbb
out
aam
jo
jb
lds
shlb
push
and
xchg
shlb
bound
test
not
lcall
fnstsw
cmp
dec
xor
clc
lret
jge
push
or
fcmovnu
lahf
sbb
pop
add
out
push
aad
popa
rorl
das
enter
dec
and
scas
and
aas
pop
jno
add
mov
dec
or
movsl
ds
cmp
jl
inc
ret
sti
dec
ficomps
or
scas
pop
sbb
or
cmp
xlat
adc
pop
es
incb
dec
fs
ret
sub
outsl
cmc
mov
pop
adc
cmp
mov
cmp
ffreep
dec
xchg
pop
pop
xchg
mov
js
out
mov
inc
loop
add
call
daa
les
rcrl
int3
repnz
aaa
jge
sbb
lods
es
xchg
cs
and
clc
in
mov
fwait
roll
out
pop
gs
inc
mov
add
ss
lock
mov
lret
lods
scas
sahf
sub
lcall
aad
stos
add
nop
addl
mov
test
mov
cmp
mov
cld
loop
jbe
shll
cli
mov
leave
adc
xor
mov
pop
les
or
ss
jmp
lret
cltd
add
daa
add
cmp
mov
mov
mov
movsl
ret
dec
jge
jb
mov
aam
es
push
sbb
or
lock
imul
push
and
and
out
mov
sti
jae
es
inc
mov
popf
idivb
les
push
clc
mov
loopne
xchg
movsb
mov
divb
and
mov
mov
and
dec
sub
sbb
sbb
pop
mov
es
cmp
into
mov
jecxz
daa
ret
cwtl
xchg
loop
mov
cld
sbb
sub
rolb
cmp
das
cmpsb
jmp
out
jle
dec
adc
inc
mov
add
adc
push
jecxz
cmp
or
xchg
push
lds
ret
sbb
in
lahf
sub
dec
xor
fmul
and
and
push
inc
out
mov
mov
pop
dec
push
jno
add
push
fwait
dec
or
cmc
fs
dec
stos
push
mov
xchg
mov
xor
mov
fildl
in
shrb
push
sub
cmp
and
mov
mov
scas
fcmovnb
xorl
push
pop
fisttpl
mov
push
jmp
dec
xor
aas
xor
push
xchg
ds
mov
xorb
adc
pop
push
mov
test
popf
setnp
hlt
imul
xchg
es
push
addr16
pusha
lods
bound
mov
push
fwait
pusha
rol
or
xchg
jbe
fcoml
sahf
adc
das
sbb
inc
jle
lret
fs
mov
adc
shr
inc
clc
mov
dec
mov
ret
pop
shll
loope
fdivrs
jge
je
andb
call
imul
mov
cmp
mov
mov
xchg
pop
jnp
or
scas
jle
xor
pop
stc
mov
cmp
pop
stc
pushf
add
mov
mull
popf
out
shrl
pop
pop
dec
js
repnz
frstor
adc
repnz
xchg
test
adc
data16
mov
leave
movsl
pop
in
inc
cwtl
enter
jbe
aas
sbb
jbe
sub
dec
add
or
adc
pop
mov
or
lret
fs
push
inc
or
inc
dec
pop
aaa
cmpb
jl
popa
in
xchg
aam
adc
ss
jmp
dec
and
xlat
add
push
dec
mov
daa
repz
pop
inc
enter
movsb
inc
into
dec
sbb
dec
ss
dec
mov
sbb
orl
jbe
mov
cmp
dec
movsb
jg
ret
arpl
clc
cltd
xchg
popl
jge
jnp
add
push
jl
mull
and
sbb
iret
mov
mov
aam
jge
insl
jb
adcl
cld
inc
push
jae
mov
fsts
mov
sbb
cmpsl
pusha
add
push
and
pop
aam
dec
pop
push
dec
xchg
pushf
cmp
je
popl
jnp
insb
test
cmpsl
shlb
testb
mov
inc
fsts
cmc
fists
notl
mov
movsl
xchg
push
add
inc
lret
repz
xor
ss
aam
sub
in
aam
cmpsl
inc
inc
stos
dec
loope
jae
mov
cmp
dec
mov
xor
and
dec
movsb
mov
lods
cli
inc
push
cmp
lret
rclb
lods
pusha
mov
sub
jnp
hlt
and
jg
gs
mov
cmpsl
mov
pop
sbb
pop
cmp
mov
idivl
test
xor
lods
cmpsb
pop
pop
mov
mov
and
mov
mov
dec
ja
mov
push
jbe
add
lea
jp
dec
or
sub
cmovp
es
sub
xor
mov
jecxz
mov
out
sbb
and
mov
pop
jno
mov
or
pop
mov
insb
or
loopne
sbb
dec
sub
adc
sbb
sbb
lret
rorl
xlat
fs
pop
sbb
sub
pop
lock
andl
push
adc
sbb
xor
cltd
jecxz
out
outsl
fiadds
js
xchg
arpl
jl
cmpsl
mov
cli
pop
icebp
in
jae
mov
cmp
and
lods
mov
and
mov
sbb
scas
mov
push
jo
sbb
lea
fisttpl
and
mov
or
shll
xor
arpl
addr16
ja
in
xchg
lcall
bound
and
jbe
dec
or
imul
mov
add
int
or
mov
fildll
rcl
xchg
add
outsb
lock
inc
repz
test
or
rorb
into
adc
fs
push
or
mov
mov
pushw
or
mov
jns
loopne
xor
sahf
xchg
push
xor
push
not
rcrl
lock
xor
add
xor
cmpsl
xor
mov
add
dec
das
fdivrs
xor
leave
pop
jae
sub
insb
lahf
push
stc
mov
lods
mov
sub
mov
mov
dec
in
outsb
inc
dec
xor
xor
fwait
dec
sti
pop
mov
push
sub
jnp
aad
cmp
cmp
inc
stos
stc
xchg
fidivrs
cmp
rorb
sar
dec
or
ss
add
nop
pop
xchg
add
out
negb
xchg
xor
add
in
mov
jp
mov
sahf
mov
inc
and
xlat
sub
aam
mov
pop
es
inc
or
inc
cld
xchg
in
mov
pop
mov
fcmovu
adc
es
hlt
xchg
push
cmc
add
lcall
mov
push
std
cld
arpl
fidivl
fimuls
cmp
mov
in
sub
sbb
push
push
xchg
filds
dec
pushl
lock
xor
dec
lret
aas
dec
cltd
cmpsl
fucomi
test
in
in
popf
push
or
bound
mov
pushf
mov
aad
mov
rorl
add
push
jb
adc
dec
stc
inc
lds
sbb
in
popa
mov
pop
sbb
shlb
jle
adc
or
popf
jle
stc
imul
cli
icebp
ficomps
lahf
jge
stos
mov
stc
js
mov
cmp
mov
push
mov
xlat
test
aaa
and
dec
xor
lods
loopne
enter
lret
push
ficoml
or
pop
lock
jne
push
shlb
insl
jbe
jns
in
dec
out
aam
lret
outsl
sbb
sub
and
mov
mov
mov
xchg
xchg
lahf
mov
data16
sar
push
and
jnp
mov
xchg
or
nop
lea
inc
stc
add
js
ljmp
jecxz
mov
xchg
or
in
imul
sub
mov
in
add
mov
mov
repz
push
imul
xor
push
inc
pop
pop
or
divb
mov
cmc
xchg
movsb
add
outsb
and
sub
mov
pop
pop
orl
rcrl
xchg
imul
cmp
and
inc
push
rolb
loop
dec
dec
mulb
out
faddp
add
pushf
hlt
push
mov
and
lahf
jno
xchg
faddp
call
mov
test
idivb
test
das
je
mov
cmpb
mov
jo
push
sbb
push
arpl
popf
rclb
dec
shrl
mov
inc
std
or
movsb
outsl
xor
ja
mov
clc
lds
jo
stos
fistpll
push
rolb
clc
pop
push
call
lock
stos
mov
mov
pushl
inc
sub
sbb
push
dec
imul
loop
xor
dec
add
fstpt
mov
scas
push
rcrb
inc
iret
push
dec
mov
in
call
dec
push
shll
jns
add
imul
fdivl
bound
mov
out
int
scas
orb
sub
jmp
mov
clc
cmp
inc
sbb
idivl
sbb
outsb
out
mov
or
ljmp
hlt
mov
int
jg
fucomi
add
in
fcomps
movsb
hlt
aaa
cli
jge
out
mov
or
out
xor
scas
subl
push
imul
call
lods
add
and
in
aas
pop
lods
sbb
and
adc
xchg
xlat
pusha
adc
stos
mov
jno
cmp
shll
cld
outsb
enter
test
loopne
test
test
cmp
xor
insl
imul
pop
adc
inc
fmuls
adc
sbb
inc
jb
das
dec
or
mov
or
xor
addb
sbb
or
adc
daa
aas
imul
rcrb
sub
adc
xor
out
dec
jl
dec
jecxz
adc
mov
loop
leave
mov
add
gs
inc
sub
add
xchg
mov
xchg
nop
pop
scas
lcall
mov
pop
sbb
jbe
adc
dec
dec
js
push
outsb
mov
xchg
push
rsm
or
arpl
loope
in
hlt
cwtl
movsb
outsb
out
mov
mov
jecxz
lea
xor
ret
sub
sub
or
push
fsubl
imull
fistl
bound
dec
jbe
inc
push
or
test
aad
aaa
and
sbb
sbb
shr
sbb
cmp
add
jo
push
cltd
cmp
mov
mov
cmpb
iret
mov
hlt
mov
jae
out
loop
iret
fnsave
das
mov
adc
js
xchg
aad
in
cmp
pusha
notl
fs
scas
cld
cmp
mov
sbb
add
push
cmp
fidivl
je
jmp
out
enter
xchg
mov
adc
inc
fwait
push
ss
jmp
pusha
xlat
scas
scas
fs
dec
inc
fisttpl
and
pop
pop
out
mov
call
mov
fs
cmp
sarb
dec
xor
aas
pop
inc
xchg
xchg
mov
mov
xor
out
lahf
in
mov
notb
pop
cmp
dec
inc
stos
mov
aaa
cmpsl
pop
jmp
loopne
andl
pop
sbb
jmp
jle
add
xchg
fcoms
lret
arpl
adc
dec
dec
add
jecxz
mov
sbb
arpl
mov
inc
sahf
test
insl
out
addr16
lea
lock
in
mov
cmpsl
ljmp
ret
push
les
jmp
shr
bound
fwait
popa
lods
ss
in
call
fbld
bswap
aas
add
push
cmp
adc
inc
in
inc
xor
dec
test
cltd
enter
sti
movsl
fsubrl
popf
je
push
sub
sub
lds
xor
lcall
faddl
jbe
setp
test
inc
push
inc
xorl
adc
aas
pop
pop
xchg
scas
mov
adc
fwait
mov
fdivrl
dec
cs
push
dec
mov
or
ds
aaa
lods
scas
and
lods
xor
loope
dec
test
lock
test
adc
mov
ficompl
pop
push
sub
imul
popa
add
dec
xchg
ljmp
mov
cmp
jb
mov
push
scas
add
jecxz
dec
or
aaa
cmp
dec
jo
and
and
lret
xor
imul
mov
popf
popa
push
pop
idivb
add
push
test
and
out
cld
mov
and
mov
push
jno
and
aas
imul
xlat
cltd
scas
push
xchg
xor
xchg
lds
sub
mov
sbb
xchg
mov
fmuls
dec
or
sbb
cmp
aaa
mov
sarb
or
and
and
inc
aam
aaa
addr16
ret
out
sub
push
imul
mov
xchg
mov
jne
daa
ds
lock
and
iret
nop
aam
pusha
lods
cmp
inc
orb
sub
repnz
sbb
lods
stos
and
mov
femms
sar
sbbl
dec
pop
daa
lds
or
or
outsb
push
ror
mov
pop
jmp
dec
mov
sub
jmp
add
dec
js
movsl
or
mov
inc
shrb
fldenv
mulb
xadd
xchg
shl
pushf
xchg
mov
push
mov
xchg
fdivrs
add
jbe
subb
out
jg
in
sub
sub
cmpsb
jl
xchg
jl
test
mov
cmp
mov
jo
adc
adc
test
loopne
mov
jne
bound
std
or
outsl
jae
jae
lock
push
cmp
dec
es
xchg
es
add
pop
push
les
or
add
repz
dec
sbb
cli
loope
lods
es
bound
jg
adc
dec
dec
dec
arpl
fwait
sub
or
jns
cld
out
or
scas
sbb
push
mov
fs
cmp
fs
mov
cs
xchg
arpl
sbb
mov
insl
and
cli
cmp
pushf
pop
push
xchg
or
xor
dec
add
xchg
inc
xor
push
pop
add
cmpsb
cmp
not
daa
xchg
push
popf
es
neg
xor
dec
inc
xchg
sbb
sub
loopne
xchg
dec
and
fs
jp
iret
pmaxsw
sarb
cmp
push
pop
aad
rclb
lsl
mov
adc
icebp
cltd
pop
mov
std
jae
xor
pop
sbb
call
fdivrs
stos
mov
and
shrl
push
pop
enter
xchg
xchg
jb
inc
test
push
sub
loope
sbb
and
inc
mov
icebp
scas
mov
add
je
arpl
addr16
pop
cld
lret
call
and
leave
xor
and
shll
xchg
cmc
stos
pop
and
lock
jbe
jp
ss
xor
jns
sub
push
mulb
adc
sti
xchg
lcall
je
cmp
push
fildll
push
xor
sbbl
loope
sub
mov
adc
pop
rorl
sub
imul
dec
pop
pop
pusha
repnz
aad
scas
cwtl
xor
cmpsb
leave
xor
adc
adc
das
and
ja
ret
or
shr
ds
mul
dec
sub
xor
xchg
mov
add
inc
xchg
jns
enter
sbb
ja
fistl
push
mov
out
inc
jnp
leave
stos
ja
addr16
xchg
outsl
loopne
les
mov
mov
scas
mov
out
inc
mov
sub
int
mov
adc
pop
fldcw
adc
xchg
sbb
fisttpll
in
pop
cmp
cld
pushf
ds
enter
push
movb
jb
cmpsl
ds
jmp
cmp
test
cld
mov
or
xchg
lea
mov
cltd
movsl
cwtl
sub
dec
lret
add
mov
xchg
fmuls
pushf
fwait
sub
jp
clc
movsl
jp
inc
adc
add
mov
pop
mov
jge
test
add
shrb
sub
mov
sub
add
mov
fs
or
out
out
mov
into
mov
adc
inc
cmc
mov
push
dec
xor
lret
mov
cld
lock
sub
cmp
movsl
add
pop
enter
lods
sbb
and
adc
mov
push
in
add
dec
stos
scas
push
mov
lret
add
xchg
iret
jle
sbb
jnp
cmp
and
dec
sbb
pop
out
loope
and
jae
mov
outsb
and
in
xchg
cmpl
lea
lea
shrl
fdivl
cld
sbb
pop
mov
jg
cmc
repnz
lea
test
dec
push
adc
jnp
lret
shlb
lcall
push
fxch
ret
inc
cmpsb
in
mov
sub
pop
movb
clc
scas
std
fidivrs
push
cltd
cs
xor
mov
lea
arpl
in
lret
movl
dec
lock
dec
xchg
xor
mov
scas
dec
dec
mov
pop
stc
pushl
fcompl
lods
ds
andl
cmp
in
test
gs
addl
jle
add
pop
mov
cli
adc
inc
cmp
insl
mov
je
inc
mov
andl
gs
xchg
cmp
mov
pop
pop
inc
das
movsb
roll
stc
imul
sub
mov
daa
in
mov
xor
mov
jne
mov
jne
sbb
mov
jae
or
xchg
or
iret
jle
mov
inc
push
insb
sarl
cld
lds
or
fdivs
sbb
popa
jmp
sahf
mov
adcl
cmp
mov
scas
cmpsl
push
add
cmp
and
mov
lods
popf
fnstcw
stos
cmp
lea
mov
gs
lret
inc
and
xchg
or
lods
test
or
jge
jle
movsl
dec
jle
mov
mov
test
cmpsb
mov
fwait
pop
push
repnz
pop
add
int
into
aaa
fisttpl
adc
add
sbb
setno
xchg
jg
mov
lcall
cltd
test
sbb
push
mov
leave
popa
cltd
xchg
or
add
fdivrs
or
adc
and
arpl
cltd
js
imul
pop
iret
adc
xor
fnstcw
adc
daa
scas
leave
sbb
mov
or
sub
push
jns
xchg
stos
adc
or
dec
adc
xchg
sbb
mov
sub
scas
insl
sub
pop
sbb
jl
negb
fsubl
decl
adcl
pop
mov
sarb
in
shrb
sbb
hlt
xlat
mov
imull
out
lahf
cmpsl
aam
and
inc
jns
or
xor
insl
dec
insl
mov
sub
cmp
jne,pt
push
lea
mov
jb
mov
aaa
sbbl
push
lret
push
pusha
call
sub
jae
out
sub
jle
ja
pushf
xchg
lret
ret
xchg
fisttpll
push
les
mov
dec
push
inc
test
mov
leave
sti
push
and
jne
sbb
mov
bound
inc
sar
in
or
jb
mov
xor
cld
pop
stos
sub
arpl
cltd
pop
pop
add
in
lods
les
dec
jge
je
or
dec
repz
dec
shrb
lods
ds
lcall
jl
mov
daa
imul
mov
dec
bound
dec
dec
sysret
xchg
rcr
xchg
and
shll
ds
daa
push
or
fldenv
add
ud1
xchg
hlt
in
out
mov
or
dec
and
and
mov
ficompl
mov
std
aaa
add
repnz
xchg
pop
pushf
js
call
mov
test
xorb
sub
adcb
sub
sbb
mov
pop
adc
cmp
cli
lcall
and
ret
insb
adc
clc
pop
and
and
mov
fmul
adc
aaa
xor
ret
sub
cmp
pop
jecxz
ss
leave
cltd
cmp
outsb
repz
stos
cmp
loopne
std
cmp
data16
mov
orl
je
add
outsb
push
fwait
outsb
mov
imul
add
or
pop
cmpsl
gs
clc
fsubl
sbb
cmpsl
adc
leave
push
mov
aad
or
fwait
push
enter
aad
cmp
icebp
sub
je
dec
loop
out
fbstp
dec
stos
iret
jg
xchg
sarb
jecxz
fadd
test
shll
jg
inc
stos
arpl
mov
push
mov
cmpsl
jae
jl
adc
sahf
inc
into
cmp
jae
mov
hlt
sahf
cmp
and
sahf
leave
sbb
xor
stos
insl
pusha
push
add
in
push
stc
add
ds
mov
gs
pop
pop
mov
shl
aaa
sub
pop
cli
xchg
sbb
ljmp
jne
scas
insl
lcall
jbe
mov
add
scas
mov
test
dec
lret
inc
mov
cmpsb
mov
fs
stos
fs
je
mov
cltd
sar
lcall
pop
test
xor
insl
mov
shlb
gs
arpl
or
xor
imul
jno
cmc
call
aam
cmpsl
sarb
cmpsl
pop
sbb
xchg
lcall
fdivs
out
out
cmp
adc
jae
mov
mov
cltd
mov
stos
adc
arpl
out
adc
pop
cmpsb
or
and
or
outsl
dec
test
adc
shll
lahf
outsl
dec
bound
xchg
in
hlt
jae
sub
test
and
add
sbb
jnp
ja
push
pop
sar
inc
fucomip
fdivs
aaa
data16
lea
push
insl
iret
faddp
jg
rclb
or
fldcw
cwtl
adc
or
pop
hlt
xor
mov
inc
cmp
lds
mov
lcall
and
cmp
lea
xchg
adc
test
mov
cmp
ljmp
scas
or
test
add
lods
cmpsl
mov
jmp
pop
out
sub
pop
mov
xor
mov
outsl
iret
rol
rcrl
mov
pop
rcll
pop
mov
js
ror
pop
js
jo
mov
xchg
leave
jb
stos
push
xor
cmp
enter
sbb
lods
jle
sub
sahf
dec
push
into
mov
fiaddl
ljmp
or
test
mov
and
sbbl
and
adc
xchg
mov
mov
mov
stc
dec
pop
daa
or
jecxz
or
fsubrl
push
fs
dec
aam
mov
test
arpl
cwtl
addb
popf
stos
arpl
mov
inc
scas
ficoml
jb
inc
or
fiaddl
cwtl
frstor
dec
adc
flds
cmp
dec
outsb
cmc
mov
mov
cmp
jle
sbb
fisubl
mov
dec
pop
cli
push
mov
mov
inc
xor
mov
mov
push
sbb
sub
cs
or
sti
mov
in
or
mov
xchg
pop
decl
loopne
aaa
inc
or
cs
outsb
ljmp
in
out
inc
add
and
adc
repz
mov
cmp
sub
aaa
xlat
xchg
fistpl
sbb
aam
cmp
aaa
and
pushf
push
mov
adc
out
and
in
iret
pop
mov
mov
mov
or
subb
dec
std
shll
test
rcl
push
std
pop
lcall
cltd
inc
rcrl
iret
pop
xchg
fnstsw
mov
sar
push
stos
xchg
sub
into
sbb
mov
lods
icebp
ror
enter
jo
aam
hlt
pop
xchg
fwait
in
xchg
shll
scas
aas
shl
dec
cmpsl
pop
xor
mov
movsb
icebp
dec
imul
cmp
inc
popf
cmp
push
xchg
filds
lods
dec
insb
lret
jl
mov
cmp
and
std
and
int
mov
push
inc
ja
popa
fsubl
xchg
dec
mov
ficompl
jae
icebp
sarl
xchg
adcb
int3
sti
lods
jp
loop
test
notb
test
arpl
lahf
int3
mov
cmp
dec
mov
in
inc
mov
stos
data16
in
dec
in
push
aaa
insb
xchg
addb
int
sub
roll
or
xchg
shll
pop
jo
mov
jmp
mov
sbb
xlat
ret
sbb
and
loope
mov
inc
adc
jl
push
mov
xlat
pop
cmp
dec
aad
add
jl
scas
inc
loop
jmp
push
stc
repz
mov
pop
push
inc
xchg
ja
push
popf
mov
pop
enter
jmp
and
je
int
je
call
jbe
pop
or
lea
in
ja
and
xor
dec
outsl
call
adc
dec
stc
inc
into
pop
outsl
xor
and
pop
mov
call
sub
neg
cmp
push
decb
push
fadd
out
mov
subl
adc
push
mov
lods
fsubrl
sar
test
lret
inc
add
jmp
sub
xchg
mov
jmp
in
mov
xchg
dec
ret
dec
sbb
cmpsl
mov
sahf
aaa
pop
mov
pop
ret
pop
std
jo
add
jns
out
lea
pop
data16
xchg
int
test
jmp
adc
out
jae
add
push
jge
bound
pop
push
jg
add
jmp
icebp
std
sub
loopne
jb
ja
mov
scas
rclb
inc
leave
outsl
int
mov
sub
lock
paddsw
aam
cld
xchg
addr16
mov
inc
lods
mov
daa
and
sahf
fldt
mov
fimull
rcrl
mov
xchg
shrb
push
mov
and
dec
fadd
daa
xchg
sub
fucomp
call
cmp
cmp
adc
ss
mov
and
xchg
sub
loop
mov
ljmp
cmc
sahf
cmp
cli
add
sbb
sub
outsb
inc
push
fstl
mov
cmpsl
dec
xor
push
shll
in
push
ss
cmp
les
and
push
xchg
mov
sarl
aad
cmpsl
aaa
add
mov
pop
aam
xchg
mov
push
or
cmp
div
sbb
sbbb
fsubrl
pop
jne
adc
sti
pop
pop
cmp
push
jge
call
ret
mov
stos
mov
xchg
push
scas
xor
push
add
sub
pusha
and
gs
pop
fs
loopne
lods
sub
cmp
sub
stos
xchg
sbbl
insb
jmp
jae
jae
imul
mov
sub
popa
sub
stos
and
ret
mov
fidivrl
loopew
addr16
xchg
in
mov
xor
clc
sbb
sbb
int3
xchg
push
pop
cmpsl
bound
dec
cmp
mov
lahf
imul
subl
lret
repz
jae
pop
or
push
les
sub
les
xchg
push
call
inc
sahf
ds
or
and
and
sub
lock
cli
fwait
ss
inc
or
cld
add
add
pusha
into
adc
arpl
pop
bound
daa
out
rcl
ds
sub
mov
roll
scas
and
pop
rolb
lods
in
sbb
je
dec
xchg
aam
xchg
adc
dec
ret
pusha
ss
xor
sbb
and
cltd
lcall
sbb
cmp
outsb
stos
mov
pop
xor
jecxz
pop
jae
pop
xor
out
mov
mov
xor
pop
cld
inc
shrl
scas
sub
cmp
out
xor
and
aas
jne
jmp
dec
mov
pushf
out
std
sbbb
xchg
sub
ds
push
mov
dec
inc
mov
jle
loope
push
and
mov
insb
cmpsb
lret
mov
xchg
mov
sub
mov
sub
pop
add
xorb
ljmp
and
iret
nop
fwait
xorb
push
mov
cmpsl
add
pop
fildl
arpl
pusha
ds
addb
dec
pop
pop
or
pop
xor
fiadds
jmp
push
xchg
sub
jp
sub
notl
fimull
test
add
lcall
mov
adc
xchg
sub
sub
jg
sbb
std
sbb
or
test
xorl
lds
out
mov
and
subl
or
jle
mov
out
push
push
push
cmc
push
fs
pop
and
and
fnstcw
sbbl
jl
aas
movsl
test
std
jecxz
push
pop
xchg
add
sub
xchg
lea
xchg
pop
xlat
enter
loopne
test
inc
fistps
cwtl
mov
fsubr
fnstcw
fstpl
push
or
imul
int
stos
adc
gs
push
mov
mov
and
cwtl
test
mov
iret
xchg
lahf
mov
mov
push
push
ret
in
fwait
mov
lock
fisttps
je
nop
jge
into
push
popa
mov
movsb
or
ret
mov
xchg
and
pop
jns
out
jmp
aad
cmp
sub
sahf
test
outsl
fidivrs
xchg
mov
rcrb
mov
sbb
sub
popa
and
mov
dec
pop
js
dec
add
inc
and
aam
push
xchg
daa
dec
jmp
xor
sti
daa
mov
nop
pop
mov
push
loop
aad
dec
loope
adc
xor
daa
jnp
sti
jnp
enter
sub
jp
out
sub
lock
inc
pop
pop
test
push
jae
push
mov
sub
dec
loope
inc
mov
icebp
js
pop
push
adc
dec
mov
movsl
push
dec
cltd
pop
mov
shr
pop
hlt
mov
das
cmp
jns
inc
pop
pusha
addb
es
xchg
or
dec
mov
mov
jle
and
push
xor
xchg
cwtl
push
mov
int
inc
addb
loopne
loop
push
fwait
sub
xor
filds
cmp
repnz
jno
cmp
dec
pop
es
nop
adc
dec
inc
loope
out
ds
shlb
rorb
inc
push
ljmp
xor
pop
xor
int3
test
lods
bound
mov
sub
mov
cs
sub
iret
or
in
lret
outsb
mov
and
inc
scas
cld
inc
pushf
adc
cmpsl
int
orl
mov
push
outsb
insb
out
mov
mov
pop
test
aas
dec
add
push
dec
cmp
jb
push
fsts
mov
mov
jmp
popa
lcall
cwtl
jp
push
mov
pop
movsb
dec
data16
movsl
xchg
add
stos
addr16
mov
xchg
mov
adc
xor
inc
push
insb
lods
pop
out
xchg
out
mov
movsb
in
test
inc
insb
out
jmp
mov
mov
mov
movsb
cmc
adc
pushf
sbb
push
cltd
pop
xchg
mov
ss
pop
les
mov
pop
popa
insb
fistps
jmp
xchg
dec
mov
dec
imul
inc
loopne
data16
add
cmpsl
imul
movsl
sar
daa
je
fwait
sbb
mov
sbb
mov
stos
loopne
pushf
mov
lret
dec
arpl
js
sbb
int
ja
lea
lahf
sbb
xchg
push
mov
cmp
jmp
push
adc
mov
sub
adc
mov
or
lcall
sub
lock
adc
mov
int
and
mov
and
or
mov
sbb
arpl
mov
daa
rcrl
ss
call
nop
loopne
mov
push
lcall
inc
add
jno
adcl
and
pushf
sahf
sbb
and
aam
imul
lds
aaa
mov
dec
call
pusha
mov
dec
adc
sub
leave
roll
and
and
in
fwait
adc
sbb
or
mov
sub
mov
push
mov
cmp
push
addr16
test
cmpl
push
movsb
adc
sub
sub
xor
mov
int3
add
xor
cmp
jbe
cmp
mov
add
sti
fldenv
ja
cld
adc
sbb
iret
mov
mov
adc
mov
in
aas
add
sub
cmp
daa
sbb
dec
sub
mov
pop
jo
ja
loopne
pop
push
dec
in
xchg
xlat
js
push
xchg
jp
in
or
int
pop
or
data16
mov
cmc
pop
xor
jae
loopne
xor
sub
les
add
inc
jb
movb
imul
or
inc
push
pop
xchg
jns
fsts
lea
and
push
mov
dec
push
popf
clc
sub
sti
loopne
cmpsb
in
pop
and
in
dec
fisubrs
sub
dec
mov
lret
adc
lds
sub
mov
inc
jne
mov
jmp
mul
mov
repz
cld
les
pop
mov
and
sbb
cmp
xchg
ret
add
pusha
clc
mov
in
inc
mov
pop
lods
lods
out
out
push
repz
mov
push
sub
lcall
loopne
in
test
push
rcr
inc
sti
xchg
inc
test
cmc
jecxz
mov
or
add
xor
mov
adc
clc
jne
mov
shr
and
std
inc
mov
xchg
pop
dec
jl
push
iret
loope
ds
and
aad
push
je
push
fistpll
push
add
aam
add
mov
shl
add
jno
cmp
xor
jns
pop
and
gs
daa
jno
rcr
fidivrs
ret
push
adc
mov
cmpsb
pop
imul
adcl
shll
push
daa
adc
les
pusha
jno
pusha
repnz
mov
sbb
stos
aad
pushl
fmull
sahf
pop
arpl
str
ja
test
shrl
xchg
jle
stos
outsl
or
repnz
ret
sub
idivl
mov
and
das
imul
push
jl
cmp
inc
jle
js
sahf
cmp
stos
push
loop
mov
push
ljmp
mov
fadds
out
add
aas
and
ss
jnp
jge
cmp
fldcw
lret
cli
inc
js
xchg
dec
jb
aad
inc
cmp
pop
inc
pop
xchg
cmp
shrb
sub
jg
lret
std
test
jbe
mov
dec
clc
push
repz
jle
ret
push
pop
aas
pop
xchg
pop
jecxz
lock
iret
mov
cltd
adc
add
jmp
in
les
and
orl
out
mov
fisttpll
test
cmpsl
mov
movsl
xor
stos
fwait
cmp
lret
push
mov
add
jmp
shlb
xchg
sbbb
cmp
xor
sbb
sbb
rol
scas
and
pop
sbb
imul
jae
jmp
imul
push
loope
js
xchg
inc
mov
cmp
fstpl
xor
out
mov
rcll
je
pop
and
inc
inc
test
cmp
pushf
add
sbb
pop
mov
out
xchg
rclb
add
insl
sbb
mov
scas
sti
mov
cmp
lcall
sub
adc
add
andb
jmp
xchg
mov
aam
sar
push
pop
cmp
pop
mov
mov
fmull
aaa
dec
dec
add
icebp
sbb
out
lret
jns
fucomp
scas
add
and
icebp
xor
adc
cmp
push
std
dec
iret
jb
stc
fdivs
loopne
mov
dec
fsubrl
inc
das
out
or
mov
push
pop
loope
imul
pop
or
stos
ljmp
filds
popf
sbb
imul
ss
hlt
sub
and
les
lret
ja
push
jle
sbb
fcomi
scas
fstps
fs
div
mov
xor
cwtl
xchg
ja
mov
call
faddl
cmp
repz
insl
dec
std
aaa
xchg
pop
inc
mov
and
test
fisubl
xchg
sub
mov
mov
cmpb
loope
mov
fldt
cmp
cli
adc
dec
inc
push
cs
mov
incl
jmp
sbb
add
sarb
arpl
adc
mov
or
lods
inc
sahf
xchg
dec
inc
push
addb
mov
push
jmp
sbb
dec
notl
mov
xchg
imul
dec
into
inc
aaa
mov
loope
aam
jnp
test
dec
jge
shlb
jo
mov
inc
xchg
int3
repz
xchg
je
insb
sub
ljmp
jp
cmp
pop
call
sbb
pop
push
ja
cmp
cmp
add
lds
loopne
pop
fisttpll
dec
and
insl
inc
fildll
adc
xlat
lcall
stos
push
inc
sub
ljmp
cmp
pop
mov
ljmp
into
hlt
mov
dec
inc
and
jg
dec
xchg
and
loope
cmp
inc
popa
xor
fnstcw
jns
jmp
mov
iret
ror
cmpsl
int
push
enter
and
xlat
aad
sbbl
outsl
push
sbb
jae
jo
mov
cmpsl
in
lods
mov
push
mov
xor
popf
loopne
addr16
add
dec
dec
lret
fnstenv
xchg
js
int
inc
pop
aam
or
xchg
icebp
imul
mov
inc
lods
cmp
or
das
add
outsb
or
pop
daa
mov
push
icebp
repnz
movsb
mov
sub
lahf
or
mov
lea
bound
ds
lock
sti
sahf
cmpsb
add
cmp
lods
test
xchg
cmp
cmp
shlb
ret
repz
or
inc
cld
and
insb
xor
in
sbb
add
in
int3
jbe
pop
cmp
pop
adc
jo
enter
push
push
rcll
aas
loopne
or
dec
mov
popf
ds
pop
xchg
sub
lock
mov
push
xor
adc
sbb
iret
mov
or
mov
in
lea
push
add
shll
cmpsb
pushf
push
add
xor
subb
sub
xor
bound
pushf
or
and
and
and
push
lcall
sbb
js
jmp
sub
out
mov
cmp
and
xor
jg
mov
fwait
das
aas
cmp
cld
inc
js
sbb
outsb
dec
repnz
pop
jg
inc
scas
jo
scas
into
jno
stc
lcall
fsts
in
xor
mov
scas
push
rorb
scas
fidivrl
ret
or
sub
iret
stc
and
lds
jno
mov
jb
sbb
dec
insb
mov
lds
call
addr16
dec
and
movb
sub
cltd
gs
pusha
adc
lds
stos
idivl
or
js
jns
sub
mov
fmuls
repz
jno
xchg
cmp
addl
pop
mov
fwait
bound
pusha
mov
test
ret
rol
jge
stc
test
inc
cli
mov
mov
sahf
jmp
repz
int
or
loop
xchg
inc
xor
mov
std
cmp
mov
push
jnp
cwtl
aas
mov
in
jb
adc
enter
mov
cli
jp
jns
or
loopne
jns
movsl
jne,pt
xor
sub
fildll
pushf
pop
out
lret
loope
push
mov
ss
rcpps
cmc
add
mov
jnp
or
test
out
imul
enter
pop
popf
push
fdivrl
adcl
dec
fldl
ss
xor
scas
cmp
push
mov
lretw
stos
jmp
xlat
in
jp
mov
loopne
jmp
leave
add
cmpsl
xlat
push
jae
inc
pop
mov
or
cli
insb
mov
xchg
or
pop
xchg
mov
lahf
xchg
mov
lahf
lcall
fsubl
xor
inc
lret
jp
lods
fs
pop
cwtl
into
stos
test
test
je
and
cltd
and
lret
andb
adc
aad
dec
jnp
psadbw
jno
das
lcall
aaa
lcall
repz
cli
push
xor
std
push
cltd
push
inc
xor
call
rolb
aas
cs
xor
aaa
mov
inc
ja
movsl
insl
adc
push
pop
or
mov
mov
mov
add
mov
in
xor
xchg
adc
jno
xor
xchg
repz
push
xor
add
mov
jge
sahf
add
adc
lds
mov
filds
xchg
jp
mov
fwait
inc
or
stos
dec
push
stc
sbb
sbb
in
out
jl
pop
arpl
xchg
je
out
adc
jecxz
scas
dec
movsb
jnp
mov
cltd
mov
pusha
cmp
xchg
ficomps
divb
sub
fwait
test
pop
or
cmp
dec
adcl
push
sub
in
push
sub
xor
jp
dec
adc
mov
pusha
enter
push
pop
jg
lret
add
xchg
and
bound
mov
mov
adc
imul
scas
mov
out
sub
andnps
popa
dec
push
sbb
cmp
shlb
cmp
test
popa
mov
xchg
inc
sub
insl
test
scas
shll
sar
idivl
lret
outsl
pop
inc
push
bnd
pop
adc
mov
test
push
outsb
test
and
pop
roll
and
mov
insl
xchg
mov
mov
cmc
pop
xor
fwait
or
push
xor
sub
pop
ljmp
loopne
pop
jnp,pn
lcall
or
sub
mov
daa
pop
inc
mov
test
push
cmp
jae
pop
lret
pushf
ja
jae
push
or
aad
dec
xchg
or
sub
jo
push
pop
mov
popa
mov
ret
push
dec
push
or
notb
adc
daa
cltd
adc
mov
jnp
xor
repnz
testl
loop
shrb
ds
sub
dec
jl
xor
sbb
add
mov
inc
dec
lret
mov
push
lock
sub
hlt
inc
jl
push
fmuls
and
mov
loopne,pn
imul
jecxz
pop
dec
aas
or
xchg
fldl
mov
and
shrd
sub
std
lcall
inc
push
add
mov
push
add
jb
adc
xchg
xchg
inc
inc
aas
lcall
mov
sbb
sti
fldl
ss
in
into
imul
sub
inc
fisubrl
test
les
shll
mov
nop
lahf
xchg
jecxz
mov
and
lret
fwait
in
popf
add
cmp
mov
cwtl
dec
cmp
lret
mov
adcl
mov
sbb
mov
xor
and
xchg
and
pushf
shlb
movsl
jge
test
dec
js
fs
push
lods
adc
sub
jo
imul
add
addr16
and
cmp
fld
cmp
mov
arpl
cmp
pusha
fidivl
outsl
xchg
mov
and
or
fucomip
addb
ljmp
xlat
pop
pop
cmp
ljmp
ja
xlat
cltd
adc
loop
and
xchg
xorl
sub
pop
cmp
add
pop
mov
adc
push
addr16
stos
leave
push
lret
xchg
scas
bswap
repnz
icebp
pop
lahf
xchg
cmpsl
int3
iret
rorb
lcall
je
call
ja
inc
push
lods
into
push
bound
sub
dec
imull
jbe
or
inc
mov
icebp
push
lahf
push
add
scas
pop
adc
into
movsb
enter
inc
push
sbbl
jg
xor
pop
fmulp
dec
jo
mov
pop
or
fwait
adc
test
js
adc
icebp
insl
jnp
popf
cmp
in
mov
int3
ffreep
dec
sbb
ljmp
sub
sbb
inc
mov
mulb
sub
stos
adc
mov
outsl
hlt
in
inc
add
fisttps
aad
ds
dec
jmp
jae
insl
fstps
sbb
mov
sub
aad
jmp
lods
dec
hlt
bound
fcmovbe
lcall
fidivl
add
push
xor
lcall
jns
mov
out
sbb
gs
mov
or
dec
jbe
movsl
jl
pop
call
fsubl
ret
pushf
adc
mov
movsl
mov
lods
icebp
scas
push
adc
test
push
movsb
mov
les
rorb
pushf
pslld
jp
stc
icebp
fists
jmp
xor
std
jmp
scas
je
and
call
daa
xor
push
mov
pop
and
and
out
lahf
inc
mov
out
orl
fldenv
enter
sar
mov
ja
mov
repnz
push
pushf
or
pop
lret
imul
dec
mov
mov
sti
orb
or
mov
lret
sahf
ss
sub
aaa
jl
xor
je
jmp
sahf
js
xor
cmp
enter
xchg
stos
mov
or
faddp
inc
dec
hlt
pop
cmp
das
mov
xchg
mov
jno
and
sbb
dec
xor
mov
mov
jns
std
jmp
pop
pop
and
xchg
sti
pop
lock
lods
dec
mov
add
or
jns,pn
pop
repnz
add
cmp
dec
popf
dec
inc
add
int3
enter
xchg
inc
std
fcomip
es
ss
cmpsb
jns
outsl
mov
or
fimull
cwtl
xor
xchg
push
mov
fsubrs
inc
jo
movsl
imul
dec
in
arpl
xorb
fnsave
aaa
adc
jge
jns
jl
or
push
pusha
push
add
out
adc
inc
insl
push
jmp
rcl
jne
ret
and
sbb
push
adc
mov
ja
pusha
sbb
stos
inc
dec
mov
pop
sbb
ret
out
mov
add
pop
cltd
or
dec
scas
sbb
push
sub
movsl
xchg
pop
movsb
mov
cmp
inc
xchg
ds
sub
jl
enter
aam
push
xor
addb
xor
xchg
jne
das
sbb
movaps
sbb
sbb
test
pop
rcll
out
dec
jl
ret
and
pop
push
mov
or
adc
bound
mov
cmp
or
addr16
in
xchg
push
scas
inc
ljmp
jecxz
in
or
sti
aad
test
hlt
pop
ja
into
mov
inc
sub
js
insb
loop
ds
push
iret
xchg
pop
bound
inc
imul
bnd
or
xor
popf
pop
pushf
xchg
push
push
mov
repz
mov
je
cmp
lahf
arpl
cmp
pop
ljmp
or
push
and
jmp
iret
cmp
inc
repnz
pusha
dec
iret
xchg
std
loopne
insl
add
inc
push
dec
lahf
popf
jg
and
mov
imul
pop
xor
xorl
punpckhbw
sub
push
xchg
lds
hlt
mov
inc
add
jecxz
pop
mov
jae
sarb
mov
data16
or
repnz
leave
rcrl
push
fsts
xchg
sbb
jo
into
cmpsl
ret
addb
jnp
xchg
mov
jns
aam
cs
xchg
mov
popf
stos
xchg
movsb
aad
xor
imul
enter
cltd
lock
jecxz
es
loope
and
insl
mov
xlat
inc
cmp
fistl
aad
cmp
scas
inc
or
aam
ror
cld
xchg
sub
sbbb
mov
add
in
fisubrs
mov
push
mov
addb
xchg
js
mov
aad
xchg
je
movsl
push
fnstsw
sahf
repnz
xchg
shrb
pop
sbb
outsl
pop
ljmpw
jp
xchg
push
repz
push
jnp
fisttps
mov
ss
mov
ja
lods
adc
xorl
sbb
and
fs
fildll
xor
mov
inc
nop
jns
or
mov
xor
xchg
js
rcrb
insb
fs
sahf
scas
sbb
pop
mov
rcrb
or
scas
pop
mov
mov
inc
bound
jle
inc
inc
mov
dec
call
lret
test
mov
int3
xchg
arpl
call
orb
aad
mov
popf
stc
cmpb
push
sub
cmp
bound
pslld
fidivrs
adc
icebp
loope
push
in
test
mov
test
xor
jle
jbe
xor
fists
in
xor
lahf
test
aam
daa
test
add
fimull
fcom
aad
cmc
not
in
imul
xor
out
js
mov
into
xor
or
fidivs
ds
out
lcall
adc
dec
movsl
cli
mov
add
nop
push
movsb
fld
cwtl
push
lahf
pop
jb
pop
cli
mov
filds
loopne
mov
ss
out
in
stos
out
out
xchg
xchg
mov
add
iret
cmp
jb
mov
mov
or
lcall
push
jnp
js
mov
call
add
mov
jo
sbb
dec
jo
mov
sub
call
ja
mov
lds
fists
leave
ljmp
fwait
pop
out
pop
dec
jbe
das
js
mov
mov
xchg
dec
jle
sahf
push
push
push
fisubl
test
outsl
push
dec
xor
jp
fmul
xchg
lea
xchg
adc
and
mov
xor
cmpsb
inc
cli
add
add
add
jl
stc
cmp
pushf
inc
sar
mov
rcrl
jne
add
lret
inc
cmp
jae
cltd
add
fisttpl
adc
nop
pop
xchg
idivl
aaa
imul
ffreep
aas
ss
fwait
jle
inc
mov
in
daa
xor
jno
jge
sbb
xor
mulb
mov
push
addb
out
ret
outsb
add
call
lock
ficompl
out
cmp
test
in
xchg
js
pop
inc
je
incl
aad
lret
mov
int3
jae
lret
insb
stc
sbb
xorl
cltd
xor
push
xchg
sub
clc
jae
mov
fidivl
jns
push
xchg
insl
outsl
cmp
push
es
and
pusha
cltd
popf
mov
mov
jmp
cmp
fsubrl
test
fistl
and
lcall
iret
fnsave
pop
es
or
sbb
out
loop
push
xchg
cmpsb
sub
add
inc
mov
sub
mov
sbb
insb
xor
mov
mov
xchg
dec
mov
repz
outsl
inc
inc
adc
fwait
fstpt
sbb
xor
test
jns
xor
aaa
cwtl
sbb
mov
xor
sbb
inc
and
dec
shrb
into
in
test
out
inc
mov
sahf
lock
sahf
pusha
or
cmp
lods
mov
mov
pop
mov
sub
mov
sbb
cwtl
sub
push
mov
fcomps
mov
pop
sub
or
scas
and
loop
mov
pusha
arpl
aas
add
lret
mov
jnp
pusha
mov
mov
out
pop
outsb
movl
and
ficompl
stc
ret
arpl
lods
das
mov
daa
shl
daa
sbb
cmpsb
imul
inc
sti
push
xchg
xlat
mov
mov
aam
ds
mov
leave
mov
jecxz
movsb
jg
pop
dec
mov
xlat
test
mov
cmp
mov
sbb
mov
rolb
aad
mov
jecxz
xlat
sub
inc
imul
ret
lahf
push
or
aaa
mov
std
mov
xchg
inc
mov
dec
out
cmp
pop
sbb
out
pop
push
mov
stos
sub
mov
push
aad
or
cmp
ss
mov
xor
mov
or
and
fistpll
sbb
in
cld
xor
cli
cmp
sets
xor
stos
lea
cltd
stos
adc
add
xchg
cmc
jmp
divl
mov
adc
outsl
xor
sarb
xchg
pop
xor
push
lahf
push
pop
or
xlat
jo
cmp
ss
mov
jne
je
xchg
scas
enter
out
sbb
and
rolb
xor
xchg
xchg
dec
daa
inc
mov
mov
stos
ds
in
cmpsl
test
sub
adc
mov
jp
hlt
pushf
mov
loopne
aas
jle
popa
shrl
enter
and
and
scas
repz
les
push
sbb
clc
andl
push
js
fisubrs
add
ret
addr16
lret
call
cli
cmp
mov
or
xchg
xchg
shll
or
imul
push
aas
mov
jecxz
inc
push
test
cmp
ljmp
fisttps
mov
repz
jb
test
call
movsb
fptan
sub
cmp
cld
inc
push
push
push
and
mov
js
mov
stc
lods
push
movsl
sti
xchg
xor
lcall
lods
outsl
lret
out
test
jp
and
push
fidivl
in
ror
or
stos
in
hlt
rolb
sbb
arpl
pop
divb
jb
lret
cmp
and
out
icebp
jbe
leave
rcrl
mov
sbb
dec
daa
push
shlb
test
xchg
add
push
push
daa
or
clc
sbb
xchg
push
cltd
cld
movb
bound
push
cwtl
cltd
adc
adc
pushf
adc
xor
out
pop
aam
or
xchg
xchg
add
jmp
xorl
pop
inc
ljmp
cmp
jle
movsb
and
fistl
xor
cmp
sarl
inc
pop
sahf
loopne
popa
push
add
add
pop
cmpsb
pop
fisubs
fwait
and
xlat
lock
adc
test
pop
pop
in
mov
adc
scas
adc
cmpsl
adc
pusha
xchg
test
sub
movsb
into
push
and
les
in
xchg
dec
sarl
inc
fmull
and
sbb
out
iret
movsl
lock
push
xor
add
scas
mov
out
gs
popf
ja
scas
xor
in
mov
push
subb
pusha
dec
jae
cltd
inc
or
dec
mov
jns
test
ljmp
repnz
int3
fcomps
loop
enter
sub
sbb
movsl
mov
xorl
mov
fs
outsl
add
xlat
sbb
ds
ja
mov
orl
mov
fstl
jne
lahf
inc
ja
jl
mov
gs
pop
pop
loop
inc
std
add
in
nop
xchg
addl
call
popfw
leave
jmp
and
dec
inc
cmp
out
das
test
cltd
push
pop
loope
jns
adc
popa
lsl
out
push
pop
popa
scas
xor
xorl
add
mov
push
add
jl
rcl
or
les
mov
test
inc
popa
cs
loope
mov
inc
jnp
sub
push
int3
or
int
jg
outsb
or
mov
mov
lock
andb
icebp
push
sbb
jp
push
sub
and
loope
ss
into
into
xor
cwtl
ljmp
stos
add
ret
out
dec
push
jne
push
jbe
mov
shrb
fisttpl
shlb
pushf
adcl
jle
lods
jbe
lcall
push
out
fdivs
and
leave
ljmp
mov
adcl
addl
adc
mov
ficompl
int3
repz
xorl
jne
ljmp
jo
std
das
jae
adc
test
test
je
pop
movsl
mov
ljmp
jmp
scas
addr16
adc
sarl
xchg
lods
scas
mov
jno
pop
cmpsl
dec
xchg
insl
push
mov
dec
mov
in
sub
orb
mov
orb
imul
pop
push
fadds
in
mov
and
enter
fnstsw
jnp
in
cmc
cwtl
sbb
mov
cmovl
std
fmull
jns
mov
dec
dec
dec
test
and
push
xchg
nop
xlat
dec
cmp
outsl
pushl
fs
mov
push
jmp
xorb
jae
data16
xor
in
movsl
mov
fcompl
pop
jmp
iret
mov
lock
in
xchg
mov
add
push
popa
sub
push
ss
add
pop
out
in
push
inc
xor
rcrl
inc
dec
aas
into
cli
xchg
js
inc
int3
jbe
jl
pop
insl
mov
jp
inc
jp
jl
repnz
addr16
rorb
sbb
xor
lret
daa
jno
aad
popa
fldenv
push
pop
in
add
xchg
out
imul
gs
jne
sub
dec
mov
push
jno
lret
mov
ret
outsb
xchg
sahf
mov
popf
adc
mov
dec
xchg
sbbb
in
mov
inc
sub
mov
shrb
movsl
stos
outsb
shrl
adc
sub
popf
lcall
mov
mov
add
decb
pop
jmp
out
lock
packssdw
ss
jecxz
sub
xor
stc
aam
ja
repz
shlb
enter
scas
das
pop
aas
cwtl
mull
stos
js
stc
ss
push
adc
ret
inc
pop
or
je
xor
mov
lods
cmp
sub
or
jmp
adc
sbb
pushw
mov
fwait
push
mov
subl
cs
inc
dec
cmp
nop
ss
mov
fwait
insl
pop
sar
in
add
jmp
pop
mov
call
push
sbb
lods
sbb
ja
pop
fs
push
jg
or
add
xchg
stos
fmuls
and
scas
js
mov
aas
std
push
jle
dec
popl
jecxz
xchg
imul
loop
in
mov
mov
add
push
out
xor
fwait
ss
mov
or
sahf
push
int3
mov
and
mov
leave
lcall
int3
adc
jns
jnp
jo,pt
mov
or
pop
dec
pop
in
xorb
or
and
out
lods
mov
lea
and
fnstsw
mov
mov
faddl
decl
inc
icebp
cs
ss
xor
push
ret
aam
xchg
pushf
push
mov
add
add
sti
inc
add
inc
out
inc
mov
mov
add
xor
mov
inc
out
aaa
push
scas
cmp
xchg
push
or
jp
sub
ss
loop
out
mov
pop
pushf
sub
mov
adc
mov
jnp
les
dec
mov
imul
ja
into
out
or
xchg
repz
add
push
repnz
imul
iret
add
push
aad
and
imul
xchg
les
out
or
mov
sub
adc
repz
cltd
jg
cmp
int3
in
inc
mov
loope
lods
bound
jb
or
jne
inc
incl
jne
stos
dec
lcall
add
imul
movsb
stos
cmpsb
xchg
jge
push
cmp
push
xor
sbb
sub
sbb
xor
insl
mov
add
int3
sub
stos
sbb
xlat
into
jp
push
outsb
sahf
addb
aas
xor
stc
fistpll
outsb
fs
add
jns
inc
decl
add
dec
aas
sub
cwtl
cmp
push
int
lock
aam
jp
dec
mov
pop
mov
movsb
in
insb
test
dec
add
mov
xchg
sbbl
adc
loopne
out
jae
cli
test
push
cmpsb
inc
icebp
adc
xchg
into
sub
push
outsb
sub
push
mov
inc
pop
aad
jmp
nop
stos
push
mov
mov
push
mov
in
pop
cmp
sbb
sub
jl
je
xadd
call
pop
pop
das
jns
pop
das
orl
movsl
mov
sub
std
or
sub
and
jecxz
imul
pop
xor
test
notb
inc
sbb
shr
ret
popa
lahf
xchg
dec
aad
xor
loope
or
mov
sub
or
clc
and
cld
xchg
rolb
lds
fnsave
push
xchg
mov
popa
sti
fistpll
aas
add
pop
adcl
push
dec
sti
push
sub
mov
notb
dec
cmpsb
ljmp
xchg
pop
xorb
movsb
or
aas
cmc
ljmp
dec
add
push
xchg
test
sarl
cmp
out
pop
aad
sarl
hlt
cs
adc
stc
scas
out
test
mov
je
out
or
sbb
inc
icebp
fwait
outsb
fstpl
aam
push
pop
sbb
inc
or
cld
jns
mov
imul
add
hlt
mov
cltd
ja
xor
push
add
push
int
jns
pop
ljmp
popf
push
sbb
cmc
in
sbb
scas
pop
je
out
inc
outsl
mov
shrb
sub
push
ret
mov
and
dec
pop
xchg
ljmp
test
xchg
push
push
and
movsb
xchg
pop
pop
cmp
xchg
pop
scas
stos
cmp
adc
inc
pusha
or
sbb
mov
cld
inc
pop
frstor
out
sbb
mov
sbb
test
jb
jns
andl
scas
mov
dec
and
cmp
xchg
sbb
es
adc
mov
xchg
rorb
ficomps
inc
subl
leave
xchg
popf
in
xchg
psrlq
outsb
push
ja
xchg
and
inc
or
xchg
movsl
leave
dec
inc
push
or
sbb
xchg
imul
dec
jnp
and
sub
fisttpll
repz
xorb
pushf
in
xor
inc
mov
mov
in
mov
addl
mov
sbb
inc
js
xor
lret
and
inc
xchg
rcrl
cld
fwait
out
fwait
out
mov
cltd
dec
xchg
sub
mov
aam
mov
mov
mov
mov
sbb
testb
jge
fdivr
iret
push
pusha
inc
inc
ds
cwtl
lds
hlt
lods
scas
xlat
and
pop
icebp
gs
addr16
outsl
mov
sbb
addr16
dec
xchg
cmp
cmp
jecxz
out
sbb
push
or
dec
pop
data16
jmp
inc
lods
mov
jecxz
std
push
sbb
mov
cmpsl
mov
aad
cmp
and
test
jg
daa
jns
jnp
and
in
add
xchg
cld
or
pop
loopne
fstl
mov
sbb
lds
pop
sub
xor
leave
dec
dec
push
inc
in
int
jge
or
push
lret
je
cmp
rcrb
imul
mov
roll
cmpsb
bound
ret
fsubl
jne
ret
test
mov
mov
mov
lret
adc
pop
jb
push
fisttps
ljmp
lds
das
jp
flds
mov
xchg
jmp
cs
mov
jle
inc
add
mov
stos
scas
mov
push
cwtl
cmp
and
lcall
cmpsl
hlt
test
test
andb
in
push
mov
sbb
les
js
pop
cltd
inc
mov
push
fistps
pop
stc
inc
mov
sub
jbe
out
and
ja
or
ja
and
mov
add
and
adc
sbb
inc
mov
cmp
cltd
mov
mov
pop
shll
out
xchg
pop
xchg
sbb
add
sub
imul
add
int
in
sti
pop
decb
mov
lret
enter
xchg
xchg
cmpb
stos
mov
scas
xor
mul
dec
jg
pmuludq
dec
jecxz
repz
js
das
lret
enter
sub
fildl
imul
dec
mov
sub
xchg
mov
shlb
sarl
add
test
mov
ret
inc
and
jl
inc
dec
cmp
fadds
xchg
fistps
push
pop
add
jg
mov
and
dec
inc
mov
shl
adc
xchg
bound
cmp
in
std
xor
loop
imul
sub
push
pop
xchg
add
movsb
xor
mov
loopne
dec
push
outsl
enter
pop
cld
sub
mov
cld
mov
cmp
jbe
and
negb
sahf
mov
mov
xchg
or
mov
jp
adc
sub
mov
mov
imul
push
int3
sbb
shrb
mov
fucom
ret
sti
movsl
out
sbb
pop
dec
cmpsl
scas
ret
in
and
mov
push
xor
push
insl
inc
cmp
ret
scas
add
mov
out
jg
cmpsl
or
mov
push
cmp
sub
rorl
icebp
stc
scas
movsl
sub
icebp
mov
testb
xchg
int3
xchg
sbb
sarb
dec
stc
adc
test
adc
mov
insb
daa
clc
or
jmp
js
ja
sbb
sub
fidivs
out
test
push
add
dec
bound
push
inc
lods
call
dec
cmpsl
cltd
cli
xchg
sub
cltd
jb
cmpsl
and
xorb
les
pushf
enter
ret
std
addr16
into
pop
inc
mov
pop
mov
mov
and
les
cmpsl
push
pop
or
mov
ja
push
jecxz
xlat
ljmp
cmp
or
bound
dec
ds
jmp
xchg
push
jmp
cmp
pop
add
sub
sub
in
mov
mov
rorl
xchg
in
ljmp
cmp
mov
testb
inc
mov
in
mov
add
loope
pop
and
out
cmc
imul
jae
mov
or
fnstsw
in
xchg
and
cmpb
sub
inc
in
loop
push
mov
dec
xor
and
fsubs
dec
pushf
jge
pop
adc
dec
cli
pusha
cwtl
adc
ror
int
sahf
cwtl
or
mov
aaa
movsb
fwait
gs
das
mov
arpl
push
xchg
arpl
add
int
xor
sub
inc
push
pushf
sbb
loopne
mov
dec
mov
cs
mov
and
push
jno
lahf
jbe
outsl
pop
fucomp
mov
dec
xlat
sub
lock
jp
push
mov
gs
inc
cmc
inc
addb
in
and
in
lret
xchg
jbe
cld
mov
insl
sub
mov
push
mov
pusha
sahf
adc
pop
adc
adc
cmp
lods
or
adc
dec
icebp
enter
jnp
out
dec
shll
mov
aam
rcrb
out
jbe
lods
adcl
xchg
out
inc
les
js
push
mov
mov
fildll
scas
xchg
test
pop
push
rol
rorl
jb
xor
or
aas
pop
mov
push
fdivr
cmp
imul
dec
hlt
add
cmpsl
shrb
clc
bound
jmp
inc
loop
cwtl
stos
xchg
mov
or
inc
stc
jne
aas
data16
mov
push
jbe
lds
xchg
mov
cs
ja
pop
push
fistpl
repnz
repnz
dec
adc
fldl
dec
xor
fimull
mov
outsb
dec
sbb
sbb
aad
psadbw
xorb
and
adc
xor
xchg
cmp
adc
push
fadds
mov
cmp
leave
leave
and
popa
rcll
dec
pushf
push
xchg
lock
xchg
push
fldl
jns
leave
mov
cmp
cltd
or
push
mov
or
add
push
scas
mov
test
out
into
int3
cmp
jns
cmp
and
stc
insb
mov
and
mov
and
or
hlt
imul
inc
xor
insl
adc
outsl
loop
xchg
data16
out
adc
aad
test
outsl
adc
adc
int
pusha
sbb
or
stos
adc
nop
out
xchg
jnp
pop
inc
inc
ss
mov
scas
adc
inc
adc
clc
push
in
cwtl
and
jmp
mov
inc
ss
mov
loopne
fmulp
fadd
test
jp,pt
scas
int3
fildl
stos
ds
stos
leave
fadd
pop
add
mov
fnsave
mov
mov
cmpsb
roll
add
dec
fwait
popa
cwtl
jns
fsubp
add
std
sbb
test
pop
mov
sbb
jecxz
push
out
pop
adc
lahf
aaa
addr16
jb
loopne
and
mov
mov
aad
xchg
add
push
ljmp
mov
in
or
jnp
push
loop
mov
aad
jne
inc
jp
imul
mov
cwtl
cmp
fs
in
in
sbb
std
and
jnp
sahf
mov
mov
rorl
pusha
dec
lock
cmc
repz
aam
cmp
xor
xor
in
or
out
add
push
rclb
dec
insb
imul
cmpsb
add
cmc
sarb
popf
lods
mov
test
sub
cltd
cli
in
bound
repnz
cltd
pop
dec
push
dec
dec
nop
pusha
fwait
cmp
lret
sub
adc
shrl
jl
stos
ret
mov
xchg
das
out
pop
or
shll
ljmp
mov
loope
jnp
pop
nop
lods
sahf
fwait
sbbl
dec
mov
push
sbbb
inc
dec
mov
sbb
pop
push
mov
jne
xchg
or
popf
movsl
loop
cmovns
dec
aas
xchg
sbb
lahf
adc
push
jo
sub
es
sbb
ffree
subl
xchg
mov
in
nop
mov
pop
sbb
xchg
aas
xor
loop
pop
pop
jecxz
mov
xchg
add
and
ja
dec
arpl
pop
movsl
jle
out
push
ds
addr16
dec
push
stc
pushf
push
ljmp
xor
lods
dec
push
pop
cmp
rcrl
add
xchg
loope
out
mov
xchg
xchg
andl
sub
cs
cmp
xchg
sub
je
hlt
cmp
or
aas
ret
hlt
aad
movsl
arpl
aaa
adc
mov
xor
pop
das
pop
hlt
pop
xor
lock
push
cmc
mov
mov
les
add
dec
mov
add
mov
push
mov
adc
into
xchg
leave
and
xlat
out
das
fnstsw
std
mov
out
push
pop
test
lret
pop
inc
pop
shrl
fcmovnu
bound
rol
test
je
cwtl
test
sub
pop
jg
dec
mov
inc
inc
pop
add
cmp
sbb
scas
scas
pop
in
add
or
cmpl
mov
test
add
lea
jns
adc
lds
jo
jecxz
scas
and
arpl
xor
dec
push
and
dec
cmpsl
shr
lahf
inc
sub
out
cmpl
jnp
sub
repz
xchg
popa
rclb
cmp
stc
xchg
faddl
and
ljmp
cwtl
movl
cmp
lret
and
data16
ret
cmp
lcall
loop
jmp
sbb
inc
jns
sub
pop
pushw
mov
sub
inc
and
push
incl
xchg
sub
dec
in
aaa
sarb
and
or
dec
mov
dec
jae
push
adc
jge
inc
icebp
or
cmp
dec
pop
outsl
out
out
call
mov
ss
xchg
xor
cmp
scas
mov
push
lea
popa
sub
push
sbb
push
aas
jo
and
scas
fcmove
inc
inc
in
stos
dec
aaa
lcall
dec
xor
stos
in
sub
mov
xor
and
imul
inc
xor
mov
arpl
or
das
mov
cmp
jno
popf
cltd
imul
dec
in
mov
in
imul
gs
sbb
sbb
sbb
and
xlat
lcall
jne
popf
jmp
xchg
mov
push
out
test
or
push
jns
xor
dec
mov
or
sarb
mov
adc
jo
mov
scas
mov
push
mov
mov
imul
cmp
and
inc
aaa
daa
or
ret
inc
and
std
adc
adc
outsl
xor
int3
pop
dec
loopne
push
test
test
dec
loop
adc
push
xchg
test
mov
xchg
push
sub
mov
test
mov
push
or
call
adc
mov
mov
je
jg
fadds
mov
push
mov
lds
in
pop
fistpll
and
in
cs
cmpl
jecxz
enter
xchg
inc
sbb
xor
ret
adc
int
lret
outsb
cmp
push
fwait
lret
jmp
sarb
popa
test
in
fnstcw
cli
lahf
or
fistpll
mov
sub
std
or
xor
or
js
dec
sbb
out
cltd
js
push
orb
cltd
pusha
ret
je
xlat
pop
addb
or
dec
push
in
out
cmp
movb
iret
mov
das
dec
mov
mov
int
aad
gs
lret
pop
inc
divb
jmp
mov
mov
push
dec
insb
mov
xor
mov
push
adc
add
mov
int3
loope
cli
lods
jb
cmpsb
mov
push
out
push
repz
pop
add
into
and
sub
lock
sbb
jecxz
hlt
fwait
lods
push
push
or
orb
stc
out
iret
cmp
mov
adc
adc
lea
and
mov
movl
lahf
je
add
and
pop
cmp
outsb
xchg
adc
cmpsl
rcrb
aaa
imul
sub
or
jge
mov
aam
jne
dec
xor
xor
into
movsl
test
jnp
xchg
xchg
rorb
insl
sub
sbb
jno
jge
repnz
call
add
or
xchg
in
jne
fistpl
daa
stos
fs
push
bound
jle
jl
or
out
cli
sti
ret
mov
in
sub
mov
adc
aaa
push
fiaddl
jnp
jae
cltd
mov
aad
stc
xchg
mov
aad
xchg
push
dec
mov
adcl
dec
sub
xor
clc
ret
and
test
mov
addr16
jnp
push
mov
mov
ficoml
in
shll
lods
dec
pop
inc
xchg
fwait
loop
jae
test
or
into
xchg
mov
mov
xor
sub
int3
fstpt
into
xbegin
mov
and
and
mov
xchg
test
and
push
lods
or
push
inc
movsb
xchg
push
pop
xchg
sub
stos
xor
inc
pop
addl
cli
sub
push
loopne
adc
jo
inc
push
repz
push
fldenv
sbb
jnp
stos
adc
andb
enter
pusha
push
jp
lods
iret
mov
movsb
mov
and
aas
xchg
add
mov
lods
cmc
cwtl
add
enter
jnp
int3
push
sbbl
dec
xor
push
out
or
dec
adc
and
mov
scas
mov
sbb
push
inc
jp
lea
pop
xchg
sbb
push
fnstsw
xchg
jecxz
and
jg
pop
les
inc
jne
ficompl
or
pushf
gs
xor
pop
dec
pusha
xor
push
arpl
dec
inc
or
pop
enter
cmp
aam
mov
int3
add
movsl
add
nop
mov
lock
leave
int3
mov
mov
in
adcl
sub
pop
popa
mov
mov
pop
sbb
mov
cmp
jnp
cs
mov
leave
push
dec
lar
rorb
das
ret
ds
or
mov
inc
push
jge
add
jecxz
pop
js
rorb
dec
sbb
mov
pop
aaa
cmpsb
adc
push
fs
pop
dec
push
pushf
ljmp
push
mov
roll
jl
das
cltd
xchg
pop
cmp
into
mov
pushf
jle
repz
test
xchg
pop
sub
or
dec
mov
jno
scas
addr16
scas
test
jno
add
cmp
inc
push
inc
cmc
cli
repnz
outsl
scas
jle
pop
rorl
pop
mov
dec
test
sbb
push
testl
in
mov
fisttpll
push
xor
sub
jl
dec
pushf
dec
fwait
push
push
jmp
ljmp
aas
pop
inc
inc
shl
aam
jbe
mov
pop
add
int
pop
popf
out
mov
cmp
inc
jle
sub
out
fldenv
lods
mov
mov
sub
xor
mov
xlat
xor
js
pop
xor
pop
data16
pop
jnp
rolb
scas
fsubl
and
cmc
divb
pop
xor
xchg
data16
lea
pop
add
mov
sub
sub
add
cmp
mov
popf
push
and
jmp
ss
out
stc
or
jne
mov
les
out
cmpsl
jb
add
jg
or
jge
stc
pop
pop
sub
test
cmp
ficoml
or
gs
movsb
dec
aaa
leave
adc
fidivrs
addr16
shl
aaa
mov
sbb
pop
sbb
xor
icebp
incl
xchg
jge
push
xlat
pop
xchg
jp
push
adcl
cmpsl
bound
aaa
mov
repz
and
add
pop
cwtl
cltd
mov
mov
cmp
pop
adc
sub
loope
dec
pop
lods
pop
pop
movl
lds
cmp
sbb
jo
xor
pop
dec
mov
cmp
or
mov
xchg
hlt
nop
cwtl
mov
pop
test
jnp
inc
xor
test
jae
jnp
jle
cwtl
mov
add
add
xorb
arpl
fistps
and
xchg
adc
add
inc
bound
xchg
outsl
or
lret
pop
adcb
outsb
ja
nop
adc
add
pop
das
mov
rolb
xchg
sbb
loopne
hlt
jbe
hlt
inc
repnz
hlt
fadd
pop
loop
fildll
xor
aaa
cmp
jmp
repz
inc
push
in
out
cmp
mov
add
dec
subb
das
mov
mov
loopne
add
cmp
fiaddl
xor
adc
cmpsl
xchg
pop
adc
cli
push
adc
pop
sbb
push
dec
cmp
mov
into
adc
aas
cmp
rcrb
dec
fisttps
adc
jle
fldt
lods
leave
push
and
xor
fcompl
popf
pop
push
cmp
add
jb
mov
inc
jp
fidivrl
cs
shll
sub
push
push
bound
xchg
xchg
pop
inc
dec
pop
les
lock
sub
movsl
mov
mov
rcrl
outsb
mov
push
fidivrl
fwait
mov
mov
dec
repnz
cmp
adc
rorb
xor
jmp
push
insl
movb
pop
call
mov
cmpsb
push
cmc
xor
popa
mov
popf
and
imul
xlat
mov
sbb
xlat
fisubs
movsb
mov
xlat
sub
fwait
adc
add
popf
add
sbb
cmc
int
int
imul
fmull
mov
mov
je
sbb
aad
inc
stos
mov
imul
push
mov
test
push
pop
mov
fwait
xchg
ret
cmc
lods
jbe
movsb
push
mov
imulb
or
lret
push
inc
std
roll
fidivs
dec
adc
or
out
addl
dec
push
repz
mov
sbb
ja
jo
or
mov
cmp
mov
loope
adc
jl
loop
bound
xchg
leave
push
arpl
mov
jb
cmc
fmull
or
nop
cmpsl
btr
mov
sbb
sbb
nop
dec
pop
ja
jno
mov
mov
mov
adc
sti
mov
leave
repz
lods
push
inc
loopne
pop
mov
sub
jle
in
lock
in
xchg
add
mov
stc
pop
mov
test
add
jbe
movsl
dec
pop
mov
dec
je
xlat
orb
push
mov
cmp
mov
mov
push
aas
dec
xchg
lret
pushf
mov
int3
and
hlt
and
xor
mov
mov
addb
mov
jl
push
push
push
inc
addr16
rcrl
mov
test
xchg
jle
cmpsl
jnp
test
cmp
xor
jl
adc
es
mov
hlt
jb
xchg
sbb
and
dec
jno
aaa
int
mov
inc
pop
fistpll
fnstcw
mov
inc
out
les
lcall
lock
ret
ljmp
popf
ja
aad
movsl
mov
icebp
mov
pop
push
push
jp
mov
xchg
loopne
pop
pop
jge
cmp
mov
xlat
nop
push
cmp
mov
movsl
pop
in
jg
adc
add
lret
push
or
adc
ljmp
aam
test
xor
and
data16
mov
add
add
fiadds
push
stos
cmp
cmp
xor
pop
adc
add
cmp
and
sahf
xor
sbb
jo
sti
stos
cmp
mov
gs
fsubrp
fistps
ljmp
sbb
in
mov
imul
sbb
pop
xchg
xor
lret
xchg
push
fildl
xchg
sbb
lock
add
push
imul
aad
ja
cmp
inc
cwtl
out
mov
jge
pop
mov
mov
es
or
inc
shl
in
lea
ja
xchg
or
dec
xor
xchg
fcompl
loope
hlt
inc
dec
adc
xchg
hlt
sub
jbe
sbb
jo
stos
aas
rcrb
dec
inc
aaa
dec
mov
cmp
sub
je
sub
mov
xchg
inc
push
xor
jp
mov
pushf
sti
adc
jnp
fwait
cmpsl
push
rcr
jmp
stos
push
out
mov
pop
mov
arpl
mov
mov
or
pop
sbbl
nop
dec
add
mov
std
fwait
jle
mov
nop
jle
add
cmp
pop
jge
aam
std
rolb
mov
cmp
dec
sub
cltd
mov
sbb
dec
mov
cli
daa
sub
fisubrl
xor
and
dec
adc
popf
cwtl
and
stos
cmpsl
mov
pop
repz
mov
xorb
mov
test
and
hlt
xchg
pop
clc
push
mov
cmpsl
and
sbb
pop
add
leave
fstps
rcll
jno
sub
sbb
loope
scas
adc
and
adc
adc
fiadds
mov
lods
or
adc
jg
mov
es
jmp
cmp
jne
leave
shll
jns
enter
jg
mov
mov
pop
daa
dec
arpl
jmp
iret
mov
jae
rclb
lret
xchg
call
mov
stos
dec
call
int3
les
or
lret
push
and
dec
mov
lret
fsubp
xchg
jmp
mov
cmp
in
jne
movsl
inc
dec
fiadds
lahf
pusha
xchg
pop
pop
lds
push
xchg
mov
cltd
fmuls
insl
ljmp
imul
ja
repnz
sub
sbb
pop
jne
mov
ja
push
pop
dec
pusha
push
cmp
xor
daa
in
pop
sub
mov
cmpsb
or
mov
ficoms
mov
mov
pop
das
jb
cmpsl
push
nop
daa
daa
inc
icebp
in
sti
jle
cmp
sahf
dec
ja
pop
add
call
pop
stos
test
xchg
mov
stos
ficoml
addr16
int
pop
jp
aaa
insb
add
fdivs
fwait
std
cwtl
insb
scas
in
sysret
adc
ljmp
inc
xchg
popf
lret
ds
or
push
movsb
xchg
insb
lock
out
adc
sbb
fisubrs
cli
pop
rorl
jle
sbb
dec
jne
xchg
mov
push
lret
or
andb
inc
mov
rorl
adc
filds
jae
or
push
out
adc
ljmp
rcll
je
movsb
dec
test
sbb
leave
mov
xor
push
fnstcw
ss
lcall
or
out
into
and
push
loop
les
jg
mov
lcall
cmpsb
xor
xor
test
sar
and
js
or
jl
xchg
stos
fistl
mov
fsubl
test
mov
xchg
mov
aad
ss
stc
jp
dec
inc
clc
sbb
mov
jge
shlb
push
or
mov
dec
test
xchg
jmp
dec
xor
jcxz
stos
iret
push
pop
outsl
arpl
and
cmp
adc
sub
cmpsb
pop
test
xchg
mov
inc
pop
cli
fcom
xchg
push
pop
lods
mov
mov
cmc
sbb
mov
cmp
fldenv
push
xchg
sbb
inc
movsl
lcall
inc
dec
pop
push
loop
das
pushf
in
sbb
sbb
cwtl
dec
ds
roll
lret
test
lods
enter
add
fwait
dec
pop
and
jae
adc
sub
daa
xor
lret
mov
adc
jle
jle
push
pop
adc
jns
inc
jl
xor
pop
mov
mov
pusha
sub
dec
xor
xor
mov
in
insl
jle
mov
loop
and
xchg
int
idivl
test
fucomp
mov
insb
sub
out
fstl
imul
clc
inc
cmp
xorb
cmp
aas
scas
pop
es
pop
jb
cmpsb
mov
in
dec
not
shll
sarb
push
test
jne
mov
ret
data16
push
shr
inc
adcl
cmp
or
out
sub
dec
cmp
ja
orb
cmpsb
je
inc
xchg
sbb
repz
or
adc
adc
mov
addr16
out
mov
in
int3
push
mov
iret
mov
mov
or
les
int3
pop
in
arpl
test
and
or
xchg
mov
xchg
xchg
stos
ret
fdivrp
aaa
out
fadds
pop
rolb
push
inc
cmp
and
leave
and
or
inc
mov
lahf
xor
mov
xor
fadd
cmp
mov
sbb
adc
ret
sub
rcrl
adc
lock
cmp
js
xchg
leave
repnz
pushf
ret
xor
mov
pop
jp
dec
and
adcb
scas
lds
jnp
or
test
mov
or
cs
mov
or
dec
adcl
sbb
in
mov
xchg
mov
pop
pop
or
sbb
int3
popa
outsb
xchg
inc
sahf
loopne
dec
clc
push
inc
xchg
jmp
or
mov
and
mov
pop
adc
arpl
xor
test
push
sub
xchg
std
in
sbb
outsl
ja
loopne
xor
mov
ret
sbbb
sub
out
pop
addr16
xchg
fsubl
mov
or
mov
jge
jb
xchg
pop
xor
lret
arpl
sar
sub
ja
mov
loope
sti
mov
mov
orl
shrb
vandnps
sub
lahf
int3
int3
mov
push
xchg
xor
mov
sbb
sub
cld
mov
or
je
mov
inc
fisttpl
or
mov
popf
xchg
mov
inc
dec
mov
jb,pn
in
mov
pop
push
cli
push
fmull
push
call
pop
jl
dec
dec
lea
dec
dec
ja
mov
repz
jmp
jae
sbb
out
push
aas
adcb
mov
in
add
fcmovbe
repnz
popf
repnz
outsb
cmpsl
jno
outsb
pop
mov
add
dec
ret
scas
pop
dec
cmp
imul
lds
or
xchg
and
inc
cmp
imul
in
sbb
pop
insl
pand
xchg
sbb
hlt
ror
jbe
or
ja
mov
dec
mov
out
jne
repnz
ficompl
mov
jge
out
add
pop
nop
mov
jmp
mov
jnp
test
inc
jbe
pushf
dec
movsl
neg
iret
cwtl
jbe
sbb
pop
mov
or
mov
mov
mov
fstpl
mov
ret
shrl
xchg
std
cwtl
orb
imul
add
out
imul
cli
push
insb
aad
and
add
cmp
imul
pop
sbb
stos
call
mov
adc
icebp
movsb
push
cmp
loope
std
icebp
jp
mov
cmp
xchg
test
add
popa
cmp
gs
cmp
jo
cli
mov
and
test
sbb
fists
sub
es
fldcw
cmpsb
and
roll
hlt
stc
push
jle
shl
inc
cmp
inc
or
mov
xchg
xchg
jbe
cmp
and
adc
cmp
lds
scas
mov
fs
adc
js
sub
pop
sub
add
in
stc
sti
popa
pop
pop
mov
push
rcrl
push
pushf
or
aaa
push
pushf
mov
sbb
inc
add
in
aam
pop
gs
lods
push
inc
pop
xchg
mov
pop
xor
mov
ret
enter
loope
mov
cmp
fisubl
cld
inc
cmp
add
shlb
jl
in
dec
mov
pushf
stos
mov
movsb
push
pusha
mov
shlb
push
add
cs
mov
daa
pop
sub
xchg
lock
sbb
mov
inc
cmpsl
ja
add
jge
jae
mov
sub
icebp
jle
fisubrl
cmp
fucomip
push
mov
mov
pushf
mov
nop
inc
add
mov
repz
shrl
inc
mov
jae
clc
xchg
enter
scas
test
rcr
data16
sbb
or
scas
loopne
outsb
dec
loopne
sti
push
ficoms
fs
insb
add
jbe
jecxz
xlat
sub
lods
in
inc
mov
add
out
ljmp
jl
int3
xchg
ja
inc
lret
pop
jg
sbb
inc
mov
je
sbb
lds
pop
pop
push
jne
fwait
inc
stos
xor
xor
test
cmp
call
dec
jb
push
lret
push
lds
xchg
and
mov
add
mov
jbe
pop
inc
cmpl
fisttpl
lds
xor
jne
scas
fwait
sbb
pop
xchg
cmpl
sub
pusha
mov
sbb
std
jns
es
sub
xor
inc
add
ljmp
insb
test
das
es
push
inc
int3
das
pop
cli
leave
outsl
sbb
popf
pop
insb
or
jge
jle
scas
lods
or
enter
cmp
push
in
jno
adc
shlb
jecxz
rorb
mov
mov
into
testb
push
scas
xchg
dec
scas
rcll
dec
dec
shrl
inc
clc
or
push
jle
les
push
mov
mov
popa
jae
dec
pop
test
mov
pop
orb
test
ljmp
push
out
fcmovu
cwtl
dec
pop
clc
jae
push
cmp
fs
pop
ret
int
lea
sub
xchg
repnz
add
push
adc
aaa
pop
mov
jmp
push
popf
jmp
pop
cmp
js
pushf
roll
xchg
mov
sbb
dec
movsb
insl
sti
jmp
cmp
jecxz
dec
fwait
out
mov
aad
or
aaa
add
fdivrs
test
cmpl
dec
cmp
stc
pop
jl
push
cmp
repnz
mov
and
or
inc
enter
lods
xchg
sar
xchg
sahf
xchg
sub
push
inc
test
in
popf
cmp
xor
rcrb
push
fildl
and
js
hlt
movsl
mov
aaa
sbb
addl
mov
ret
add
cmpsb
test
fs
push
insl
rclb
cmp
scas
push
test
mov
cwtl
mov
adc
sub
shlb
notl
lock
bound
xchg
int
fsqrt
or
push
mov
orl
push
or
push
mov
push
sub
mov
scas
push
xchg
js
mov
dec
ret
clc
setns
push
jnp
fstpl
decb
pop
sub
sub
popf
mov
stc
dec
pop
pusha
fwait
js
add
loop
sti
outsl
xor
pop
push
scas
rclb
movsb
lds
sbb
lret
jne
mov
and
jg
cmpsb
testl
or
adc
xor
lret
loopne
enter
pop
mov
mov
push
mov
sub
cmpsl
and
dec
adc
aas
leave
or
in
pop
or
rcrl
bound
cmp
std
in
imul
int3
int3
aad
aaa
fucomip
mov
or
addl
inc
mov
stos
es
pusha
iret
in
es
arpl
push
bound
scas
popa
daa
dec
pop
and
ret
aas
ja
cltd
fmulp
and
pop
pushf
adc
or
out
cs
lcall
pop
in
xchg
cmc
lahf
daa
lret
pop
lret
fwait
dec
outsb
or
fcomps
nop
jmp
loopne
mov
loop
insl
or
incb
dec
fidivl
and
aad
cmp
pop
rcll
inc
sub
dec
or
dec
shlb
fcmovb
mov
pandn
mov
pop
aam
popf
loope
popfw
push
pop
add
in
mov
imul
dec
jbe
jmp
xor
sub
add
lret
mov
add
ss
mov
das
or
daa
jno
out
out
inc
jnp
mov
push
loop
lea
pop
sbb
imul
dec
and
lret
or
jecxz
fdivrs
dec
repz
inc
fimull
into
jb
dec
jnp
xor
dec
iret
mov
pop
or
sti
or
xor
leave
ds
mov
push
xor
xchg
jae
sbbb
jo
cmp
xchg
mov
inc
fwait
xor
pop
xchg
stos
cmp
rclb
cmp
movl
jmp
aas
stc
mov
popa
mov
inc
or
mov
dec
in
push
std
movsl
pop
faddp
out
sub
jns
jl
iret
xchg
test
xchg
int
cmp
or
push
out
fnsave
ljmp
aaa
cltd
pop
mov
inc
jo
outsb
pop
and
divl
xchg
faddl
cmpsb
jbe
loope
mov
pop
push
int3
sahf
mov
outsl
add
xchg
mov
push
mov
sbb
adc
je
and
inc
subb
loope
mov
sbb
movd
int3
push
xchg
fnstcw
and
shrl
nop
xchg
pop
dec
popf
out
jae
add
test
jo,pn
sahf
test
mov
dec
jg
jbe
scas
or
mov
imul
xlat
cwtl
jns
mov
out
data16
stc
xchg
fdivrs
cltd
cmp
ret
cmpsl
popa
aad
insl
cwtl
xchg
jb
push
push
je
bound
or
aam
mov
cli
pop
subl
leave
pop
mov
addr16
out
test
inc
mov
imul
pop
fdivl
mov
adc
loopne
pop
test
jb
xchg
cli
pop
ljmp
jmp
adcl
loopne
lock
sub
repz
jg
mov
js
rcrl
mov
in
imul
sub
js
dec
jo
xchg
mov
add
stos
cltd
aad
sbb
inc
push
aam
mov
cltd
es
adc
dec
cld
nop
imul
jae
inc
aaa
mov
xchg
cltd
jl
int
sub
and
jae
inc
aam
in
or
stos
mov
push
enter
push
rorb
push
shll
dec
cltd
and
fidivrl
call
mov
sbb
push
popa
xchg
sbb
sahf
cmp
or
out
fnstenv
cmc
pusha
int3
jae
ret
push
dec
cmp
mov
jmp
ret
and
rcrb
sbb
jl
in
sbb
push
pusha
xchg
cs
xor
scas
es
mov
rcr
jmp
les
pop
out
shrl
test
sbb
sub
jbe
stos
sar
rcll
and
and
jp
rcll
lret
mov
mov
xchg
loopne
mov
xchg
adc
sarb
sti
add
pop
adcl
sti
mov
jno
push
cmp
adc
cli
shll
insb
out
add
inc
add
cs
shll
ret
in
pop
movsl
jg
in
data16
mov
test
xchg
fdivrl
fidivl
scas
cld
loopne
and
xchg
inc
adc
and
mov
jns
int
fiadds
jmp
mov
pop
fidivrs
repnz
mov
dec
xchg
pop
and
xchg
sahf
xchg
loop
pop
dec
inc
mov
push
dec
inc
repz
add
and
dec
bound
cld
sarl
cltd
std
add
loopne
icebp
lds
lock
dec
mov
bound
and
popf
imul
add
int
and
mov
jge
lahf
mov
jbe
pop
mov
rorb
jno
push
adc
mov
movsb
fsts
push
scas
inc
fwait
daa
sbb
sbb
popf
mov
lea
lret
pop
mov
dec
mov
in
mov
lret
mov
jecxz
mov
repz
xchg
cltd
sbb
jb
in
sub
jae
add
push
in
in
cmc
in
lea
cwtl
sbb
call
dec
lcall
mov
shr
inc
rcrb
xor
dec
pusha
stc
push
loop
cmc
enter
aaa
test
mov
out
cmp
dec
fimull
xchg
ret
jg
inc
aaa
stos
add
out
xchg
adc
out
andl
cli
sub
popa
loope
mov
sbb
mov
jno
aaa
imul
mov
adc
push
fnstcw
shrb
push
in
dec
in
add
clc
sarl
jg
les
inc
push
cmp
xchg
imul
ljmp
mov
adc
outsl
lcall
push
adc
gs
subb
mov
push
pushf
xor
dec
scas
mov
loop
jb
je
mov
hlt
jmp
lret
xchg
inc
xchg
enter
or
xor
add
jge
mov
inc
push
jecxz
cmp
cli
ficompl
repz
mov
pop
into
mov
push
ds
jae
mov
mov
sbb
cli
pusha
daa
ret
jae
stc
inc
pop
repz
sub
loop
insl
jge
add
icebp
sbb
lret
inc
lods
daa
cwtl
xchg
sub
and
pop
loopne
sbb
ss
imul
int
inc
fwait
and
push
lods
inc
sbb
mov
das
push
jae
stos
mov
jp
add
mov
lret
mov
fs
push
leave
lret
mov
pop
cs
loopne
mov
xor
ret
push
fcmovnbe
mov
movsl
add
imul
adc
dec
fimuls
test
or
pusha
lods
dec
js,pt
call
push
pop
out
sbb
stos
cli
cld
add
pushf
cmp
subb
pop
xchg
lods
loopne
push
fistps
push
xchg
dec
adc
fldcw
mov
cmp
inc
sbb
and
movsl
sub
push
and
mov
int3
xchg
add
lahf
neg
inc
idivb
mov
mov
stos
mov
movsb
cltd
movsl
ja
fsubs
cmc
in
sub
cmpsl
mov
jle
sub
daa
loop
sti
mov
cmp
dec
xlat
icebp
jl
push
rcrb
scas
maxps
push
adc
outsb
mov
push
add
insb
jae
rcll
or
mov
fisubrl
inc
jge
jae
ss
je
loope
cld
lret
out
shll
xor
sub
pop
into
mov
jno
icebp
push
mov
into
adc
jmp
inc
mov
scas
add
jecxz
lea
ret
jo
ljmp
pop
push
subb
pop
cld
push
mov
loope
gs
adc
out
mov
pop
loopne
adc
and
pop
jne
xor
ret
jg,pt
add
sbb
add
into
lods
scas
or
pop
and
sbb
xsave
lods
xchg
es
cmp
xchg
push
les
jbe
ss
jb
mov
pop
andb
xchg
and
fmuls
push
or
je
fisttpll
xchg
lret
push
push
sub
test
insb
outsl
sbb
jg
loop
nop
fisubs
aaa
int3
out
pushf
lods
inc
mov
mov
xchg
sbb
xchg
pop
addr16
xchg
mov
int3
fbstp
ja
stc
jge
imul
fiadds
mov
inc
push
movsl
daa
jo
mov
cmp
pop
stos
inc
es
xor
ficoml
pop
lods
std
cmpsl
mov
lret
les
sub
call
rorl
pop
pop
lods
xchg
pushw
loop
out
mov
sub
jecxz
lods
dec
mov
jns
aas
dec
push
dec
sbb
popf
les
in
je
pusha
mov
testb
push
pop
cmp
lds
leave
adc
inc
in
or
rcrl
xor
sbb
imul
shrd
cmp
and
adc
lock
repnz
iret
popa
out
xorl
je
hlt
xor
sub
adc
cltd
sbb
xchg
subb
xor
sbb
pop
pop
sub
mov
ljmp
pop
mov
stc
loope
mov
or
or
pop
pop
push
xchg
xchg
loopne
sub
out
not
jge
ss
adc
addr16
lret
sbb
sbb
mov
cli
rcr
pop
cmp
jb
jbe
mov
inc
mov
popl
faddl
push
jmp
cmp
cld
dec
insl
xchg
mov
pop
std
push
and
jl
inc
pusha
jl
pop
es
test
mov
fwait
int
mov
inc
push
in
loop
call
mov
xchg
and
ss
pusha
mov
aad
push
data16
pop
push
pop
ja
mov
dec
jecxz
mov
hlt
sbb
push
xor
movsb
mov
jns
test
es
repz
pop
sub
mov
sbb
std
fidivl
push
ja
jecxz
mov
jecxz
pop
xchg
fs
pusha
mov
pop
dec
js
xchg
pop
xor
mov
fimull
push
in
and
sub
fnstcw
popa
enter
fidivrs
shrb
mov
inc
mov
pop
cmpsl
pop
add
cmp
inc
and
clc
xchg
dec
mov
cmp
fwait
rol
sbb
movsb
adc
push
add
sbb
and
and
test
hlt
fldcw
dec
loopne
fistps
int3
imul
leave
cmpsb
adcb
roll
cmp
push
and
stos
xor
xlat
xor
mov
sbb
out
push
loop
lret
pusha
mov
enter
pop
bswap
cmp
push
daa
push
lret
sbb
sub
push
xchg
cmpsl
lock
mov
mov
test
xchg
mov
or
sti
sbb
pushf
pusha
adc
out
test
cmpsb
mov
xchg
pop
cmp
mov
fldcw
rcl
enter
sub
mov
fdivp
pop
lahf
shl
cmp
sub
adc
rorb
sub
dec
push
popa
xor
push
pop
push
inc
imul
cmpsl
dec
dec
push
mov
jno
cmp
fsubs
repz
push
fnstsw
mov
jmp
fstpl
push
sbb
pop
push
and
ret
xchg
fsubrp
in
mov
add
shl
mov
inc
mov
aam
inc
mov
mov
jbe
movsl
xor
pop
nop
pop
dec
shlb
pop
sub
add
out
out
push
push
fldl
ljmp
fsubl
ss
int3
repz
in
sub
dec
xchg
mov
in
rol
cmp
ret
icebp
cmp
mov
mov
or
push
iret
push
int3
incl
sbb
and
rep
pop
stc
and
loope
stos
outsb
push
icebp
xor
cmpsl
es
and
mov
push
pop
cmovne
mov
in
mov
push
cwtl
push
aam
sbb
cmc
ljmp
jne
mov
mov
rclb
push
hlt
cli
jnp
aam
mov
iret
xor
mov
jg
mov
pop
movsl
push
cwtl
inc
sub
push
pop
adc
daa
sub
lret
mov
int
push
add
fildll
daa
outsb
fisttpl
dec
fadds
cmp
pop
jno
sahf
das
lock
add
gs
or
fwait
dec
adc
js
dec
inc
jbe
int3
out
imul
stos
dec
mov
xlat
mov
lret
add
dec
mov
test
cwtl
das
xlat
xchg
dec
inc
mov
hlt
pushf
inc
adc
out
inc
mov
arpl
ja
dec
fdivl
pushf
out
jne
mov
add
cld
jae
jnp
jl
jb
cmp
nop
mov
out
mov
xor
pop
lods
cli
je
std
mov
subl
mov
dec
jnp
xchg
push
add
sbb
or
xchg
nop
fwait
andb
lds
mov
test
jnp
in
jbe
jecxz
stos
clc
mov
inc
or
jbe
sub
add
popa
imul
sbb
cmp
and
notl
jbe
fwait
cmpl
pop
mov
adc
stc
jge
cltd
lret
inc
jne
out
jnp
or
pop
js
pop
pop
pop
sub
add
jge
sbb
push
pop
xchg
lret
or
jo
shlb
and
in
fcmovbe
sub
mov
out
clc
jno
lods
jmp
jne
cmp
repnz
mov
shrb
jae
add
test
and
int3
dec
clc
stos
int
popa
push
insb
pop
nop
leave
pushf
and
mov
lds
rorb
or
hlt
lock
cli
push
cmc
xor
mov
add
icebp
xlat
and
loop
jbe
test
jle
stos
test
cmc
popf
push
adc
shlb
hlt
mov
scas
pop
cmp
sub
int
out
leave
or
int3
pop
gs
adc
sbb
jmp
and
push
bound
test
rclb
and
mov
adc
mov
cwtl
xor
add
dec
jnp
orb
jb
popa
push
loope
je
lods
push
lret
add
jb
enter
dec
pusha
add
xor
js
into
xchg
movsl
xor
mov
push
enter
and
in
xor
push
loopne
popf
test
movsb
xchg
rclb
sti
jmp
push
nop
jns
add
aaa
mov
cmp
inc
in
mov
mov
arpl
push
test
push
mov
lock
mov
adc
pop
shrb
xor
jns
inc
and
push
cwtl
push
in
jle
hlt
sahf
mov
add
lds
sub
pop
aam
dec
fwait
cmova
stos
daa
pop
mov
inc
inc
or
xchg
daa
cli
mov
xchg
test
and
cmp
adc
jg
call
cmp
cmp
xor
jmp
cs
cmpsb
das
jp
jbe
xchg
ret
and
lods
cmp
xchg
rolb
mov
push
testb
dec
aad
imul
dec
repz
dec
sub
gs
jne
lock
mov
xchg
inc
jne
cmp
mov
sbb
bound
xor
scas
jge
mov
dec
dec
jl
shl
xor
fnsave
push
inc
push
out
add
outsb
fwait
leave
jle
xchg
mov
dec
into
inc
mov
and
jae
rcrb
daa
push
jb
mov
jecxz
lcall
jo
imull
sbb
mov
stos
lcall
and
xchg
cmp
mov
jge
inc
outsb
mov
add
push
scas
or
stc
sbbb
xchg
stos
insl
cltd
mov
xchg
mov
jge
nop
mov
xor
lods
scas
cmp
movsb
or
xorl
hlt
xor
inc
pop
gs
loopne
mov
xchg
xor
mov
in
push
dec
cmp
xor
aam
cmpsb
stos
jno
out
ret
aaa
push
dec
js
aad
insl
add
inc
loope
jp
in
and
pop
and
pop
pop
cli
mov
lcall
scas
into
sub
push
xchg
pop
mov
dec
out
jecxz
shl
pop
add
dec
insb
cs
lcall
push
push
dec
dec
add
in
je
sub
jge
pushf
jmp
or
adc
insb
in
sbb
cli
lret
pop
fstl
sbb
push
xchg
outsb
jmp
sti
push
lcall
enter
sbb
loope
lock
sar
ret
cld
insl
inc
add
repz
push
pop
outsl
or
adc
mov
repnz
pop
push
push
lods
je
xchg
sarl
push
inc
loope
cmpsb
sti
sbb
or
ficomps
jbe
jbe
inc
shl
icebp
test
movb
insl
inc
cs
popf
test
in
jmp
rolb
lcall
fadds
cmp
inc
push
sbb
out
cmp
sub
call
push
adc
cmp
mov
or
loopne
testl
dec
sar
sub
hlt
fisubrs
push
fisttpll
push
xchg
test
sub
icebp
aas
or
insl
mov
es
jg
cmpsb
sub
inc
push
pop
add
xchg
insb
fcmovbe
dec
rcll
or
dec
repnz
jecxz
lods
adc
mov
push
es
sub
jle
xchg
popf
test
cmp
repnz
or
push
adc
cwtl
loop
pop
sub
xchg
shl
das
les
imul
movsb
cs
sub
fldt
daa
mov
dec
and
or
lods
pop
repnz
mov
sbb
pop
lds
jmp
pop
shl
mov
mov
or
xlat
aam
std
pop
outsb
andb
fnsave
imul
xor
sbb
hlt
cwtl
das
daa
ljmp
or
adc
pop
scas
jmp
fsub
xor
out
stos
dec
or
ds
fcmovnb
pop
jbe
rcl
pop
add
lods
test
cmp
rcrl
out
push
cmc
je
sub
cld
addr16
jle
pop
ljmp
ret
repnz
xchg
cmp
stos
xchg
loope
in
dec
adc
popa
pop
enter
xchg
fsub
cwtl
ds
stos
mov
jno
push
dec
aaa
push
add
int3
into
push
insl
and
push
push
xchg
mov
movzwl
shlb
pop
mov
test
fildll
add
mov
in
jno
mov
aam
fbld
icebp
mov
or
shlb
cld
mov
shrb
ljmp
mov
xchg
xchg
or
push
or
sbb
jo
xor
fcomi
mov
jp
std
jns
ret
mov
inc
aaa
dec
faddp
aad
add
gs
mull
mov
in
sub
sbb
mov
mov
sarb
test
mov
cmc
push
xchg
cmp
fsts
xchg
fs
push
jmp
in
mov
lock
pop
push
into
inc
repz
lret
xchg
into
filds
cmp
mov
mov
test
fisttps
ret
stc
jnp
ja
shlb
mov
cmpsl
cmpb
shll
mov
test
mov
sub
adc
es
out
jp
xchg
add
aam
and
inc
cmp
cmp
xchg
sub
ja
or
test
insb
in
imul
cltd
dec
xchg
repz
xor
push
mov
pop
cltd
lods
lahf
clc
jbe
add
divl
stc
fidivrl
mov
loope
mov
pop
xor
paddsb
push
push
loop
xor
jbe
addb
or
negl
cli
xor
sbb
rorb
sahf
movsl
xchg
das
loopnew
or
mov
push
inc
call
es
jge
and
and
sub
jno
mov
push
jg
out
or
lods
or
mov
pop
clc
rclb
add
in
cmp
sbb
in
pop
fbld
movlps
ret
andb
push
jb
adc
xchg
add
xor
sub
add
cmpsl
icebp
sbb
cli
or
dec
pop
jl
shlb
jnp
sahf
adc
loopne
cli
push
and
mov
xor
lods
imul
sub
int3
aas
je
pop
mov
dec
xor
popl
ss
imulb
lds
stos
in
xchg
and
je
xchg
inc
push
out
mov
into
repnz
push
stos
decb
in
orb
in
and
lock
adc
cs
sti
daa
addr16
inc
add
imul
scas
fcoms
outsb
lods
xchg
xchg
mov
pop
mov
push
lret
inc
cmp
add
cmp
sbbl
mov
insl
xchg
rorb
pop
jae
enter
scas
hlt
cld
sbb
dec
cli
sub
jl
xor
fwait
call
in
das
mov
xchg
rsqrtps
repz
pop
stc
inc
cmp
in
pop
pop
sbb
mov
xor
adc
xchg
jl
and
fsts
jle
xchg
dec
lock
fisubl
lcall
icebp
push
fnstcw
lods
cmp
jnp
stos
fs
mov
rcrb
nop
inc
dec
mov
pop
jo
push
es
ds
push
pusha
lret
ss
out
shrb
mov
and
push
cmp
xchg
push
call
or
fstps
lret
or
dec
lret
nop
inc
lcall
mov
inc
dec
or
test
xlat
xchg
adc
call
push
and
out
aaa
mov
cmpsl
int3
clc
scas
lds
mov
push
sbb
rorl
in
xor
gs
or
aas
xchg
aaa
lods
sub
hlt
enter
sub
ljmp
mov
xchg
push
add
test
out
mov
sti
push
lea
cli
ja
and
jo
lods
loope
test
xchg
xchg
jmp
aas
or
popf
adc
sbb
xorl
incb
insb
nop
and
nop
mov
pop
dec
pop
loope
mov
pop
push
repz
mov
in
mov
sbb
popf
js
hlt
ds
ss
jnp
in
aad
mov
mov
out
repz
mov
mov
mov
rorb
and
cli
insb
mov
adc
repz
mov
inc
dec
scas
mov
test
cmp
shlb
mov
cmovne
dec
jg
mov
xchg
out
cli
jl
adc
xchg
sbb
iret
xor
cmpsl
outsb
mov
xchg
les
or
idivl
cli
repnz
jae
adc
andl
popf
movsb
jecxz
ds
sbb
xchg
dec
pop
sahf
mov
nop
lock
mov
and
push
lret
dec
insb
sbb
mov
add
lret
ret
fsub
into
test
xlat
push
daa
mov
ja
mov
in
pop
add
rcrl
jle
jne
xor
bnd
dec
adc
and
cs
pop
lods
fwait
mov
or
aad
shll
loop
pop
jo
xchg
and
lret
push
pop
pop
test
es
cmc
mov
dec
mov
shrl
in
test
test
push
test
push
jnp
xchg
jno
xor
fs
push
pushl
aam
add
xor
lcall
cld
mov
les
pop
out
pusha
repnz
adc
pop
jno
sbb
fimull
pop
adc
xchg
fcompl
fsubrs
jnp
cmpsb
push
call
les
addr16
lock
sub
jg
cmp
mov
imull
sahf
test
fnstcw
out
in
loope
xchg
scas
jnp
loop
mov
push
push
xor
data16
icebp
cmpb
cmc
cli
jg
lea
leave
shrl
adc
xor
or
xchg
xor
gs
sub
sbb
addb
inc
push
add
push
cltd
data16
jne
or
xchg
cmc
ds
je
jle
cmpsb
add
das
insl
popa
push
adc
es
push
pop
call
popf
mov
pop
clc
fists
fsubrs
mov
and
mov
add
push
bt
mov
sbb
dec
js
in
pop
sbb
jb
or
cltd
stc
in
daa
mov
inc
dec
imul
mov
inc
mov
or
dec
pop
imul
call
mov
mov
vmovupd
cmp
cmp
lea
xchg
inc
lods
out
sahf
in
xor
popa
ljmp
aam
mov
mov
imul
sbb
mov
and
dec
mov
lods
cld
imul
sub
jge
jl
pop
sbb
sub
mov
xchg
cmp
mov
scas
and
fs
sbb
xor
arpl
notl
cmp
pop
jnp
cmp
jo
push
or
ret
lret
mov
ljmp
fwait
loop
push
test
xchg
mov
aas
decb
mov
testl
movsl
lock
pop
movsl
movsl
xorl
lds
sub
or
imul
jge
adc
pop
mov
rcl
addr16
push
shlb
push
add
push
cmp
int
mov
mov
daa
popa
add
dec
call
das
inc
xlat
insb
movsb
mov
mov
adc
adc
push
pop
cmc
mov
test
stc
outsl
jo
inc
dec
fdivrl
inc
ss
or
add
in
mov
call
dec
imul
add
lock
jp
sbb
insl
repz
das
fistps
les
dec
lock
bound
xchg
rorl
mov
bndstx
sub
fs
xor
push
popa
push
mov
scas
and
xchg
idivb
xor
cmp
gs
fstpl
leave
xchg
push
imul
mov
jle
and
pop
arpl
roll
repnz
scas
mov
fcoml
mov
xchg
and
dec
cltd
or
inc
rcll
inc
inc
mulb
push
mov
or
popf
std
dec
adc
ds
pusha
ficoml
scas
mov
inc
and
xor
xchg
jns
add
fisubrs
jle
pop
divl
and
icebp
push
aaa
pop
adc
les
add
popa
jecxz
jge
push
lret
mov
das
sarl
lods
jae
push
bound
inc
filds
lods
pusha
mov
daa
add
mov
cli
dec
jns
cmp
add
in
push
lret
jmp
sub
adcl
or
in
scas
and
fcmovnb
cmp
xor
mov
push
clc
pop
mov
mov
pop
xchg
into
xchg
xor
jnp
decl
push
sub
mull
mov
in
xchg
int3
sti
inc
xchg
es
fisubrl
xor
jbe
xor
and
int
movsb
enter
int
mov
mov
mov
fldt
jmp
rcrb
sub
or
jno
cmp
and
xor
jo
adc
in
jno
hlt
mov
mul
idivl
sub
stc
inc
lock
les
popa
les
inc
jae
add
mov
cmpsb
jbe
rcll
ja
fisttpll
subl
dec
popf
dec
ret
cmp
stos
cwtl
int
pushf
mov
std
xchg
and
xchg
add
fstl
inc
mov
in
stos
mov
pop
xchg
fidivs
push
cmp
push
jns
cmp
adc
stos
mov
outsl
int3
mov
stos
mov
sbb
dec
jecxz
and
add
out
lret
repz
stos
mov
mov
adc
add
in
lret
pop
mov
in
test
sbb
divb
mov
je
pop
leave
je
es
decl
adc
lock
inc
sub
out
in
dec
and
ja
test
sub
pushl
imul
fiaddl
push
xor
shlb
mov
jge
mull
sub
insb
cmp
scas
and
cwtl
sarl
iret
icebp
push
push
arpl
push
mov
fcmovnb
data16
mov
push
fwait
and
dec
and
mov
pop
insl
scas
out
xchg
outsb
repz
cld
aad
jmp
mov
imul
mov
ja
dec
sub
insb
fwait
ja
add
xor
sbb
loopne
mov
mov
repnz
shlb
pop
mov
jmp
mov
lea
sbb
add
inc
mov
xor
xchg
out
add
adc
add
ljmp
xchg
std
sub
aas
jp
mov
cmc
xor
cmp
and
repz
das
rcll
add
mov
sarl
and
inc
fdivl
or
ss
pusha
daa
sub
sarl
dec
cwtl
int
imul
or
lret
mov
loopne
pop
or
test
mov
leave
sbb
mov
mov
sub
int3
imul
jge
mov
mov
loopne
das
call
jmp
or
jmp
sub
mov
repnz
add
and
sub
pop
outsl
xor
mov
adc
aad
daa
iret
bound
adc
push
sub
pop
les
out
aaa
mov
mov
lahf
loopne
in
xor
and
mov
das
divl
pop
cmp
popfw
outsl
das
scas
jne
jo
mov
flds
jbe
out
push
imul
call
clc
mov
ja
or
mov
push
into
push
imul
sahf
push
inc
cmp
je
cli
mov
sub
cmp
adc
push
fldl
lret
jno
popf
repz
fnstsw
xlat
inc
push
mov
pop
ljmp
mov
mov
out
push
sub
xor
enter
lods
push
ja
mov
inc
sub
test
pop
and
pop
repnz
mov
adc
sbb
adc
fidivs
xchg
daa
push
add
pop
pushf
cmc
inc
push
inc
aas
loop
jmp
mov
test
aas
ja
fistps
dec
cmp
xchg
dec
inc
xor
mov
mov
int3
mov
pushf
fmuls
mov
cmp
repnz
jp
aad
push
cmpsb
and
add
clc
pop
xchg
jnp
popa
xor
std
and
mov
push
pop
lods
shlb
jl
out
add
jecxz
std
dec
mov
dec
pushf
outsl
sahf
xor
ficompl
test
mov
lahf
or
lahf
add
push
dec
ret
addr16
add
mov
mov
lods
pop
push
test
inc
and
pop
leave
jno
daa
mov
push
insl
pop
lods
pop
sub
scas
mov
nop
fwait
out
outsb
push
sti
sub
xor
mov
clc
scas
das
mov
in
faddp
xor
enter
outsl
jmp
test
push
orb
addr16
icebp
fisubs
js
ficomps
mov
push
in
nop
and
cld
add
inc
testb
mov
data16
dec
fildl
and
insb
add
fcoml
or
jns
frstor
sbb
ds
xor
or
mov
outsl
pop
outsl
jne
push
test
mov
mov
adc
in
lcall
shrl
and
pop
dec
sysexit
je
stos
cltd
pop
mov
iret
out
jo
rcl
mov
jl
lods
add
cmp
stos
xor
arpl
addb
gs
and
out
hlt
icebp
lcall
popf
sub
sahf
mov
movntps
sub
cli
jle
es
xlat
sub
add
stos
ficoml
and
inc
push
xchg
movsb
mov
push
cmp
out
outsb
cmp
fs
js
ror
call
repnz
fdiv
and
ljmp
rcll
push
pusha
or
push
jae
xor
stos
or
cmp
or
adc
xor
and
or
outsl
adc
pop
adc
jno
hlt
inc
push
iret
pop
sbb
mov
fsubr
sbb
and
pop
shrl
lods
fisttps
sbb
jno
jl
mov
es
ljmp
mov
push
cmpsl
test
rcl
mov
mov
imul
push
push
movsl
xor
pop
repnz
cs
cld
cwtl
or
js
das
inc
pop
mov
scas
movsl
jg
inc
imul
sbb
dec
mov
xchg
xor
cmp
cmp
insl
repz
push
jmp
adc
mov
cmp
xchg
or
scas
test
push
push
inc
subl
fcoms
iret
lret
pusha
out
sbb
test
lahf
sbb
int3
pop
cs
sahf
dec
icebp
loopne
pop
add
inc
in
rcrl
out
movsb
mov
lea
popl
addb
dec
ret
dec
or
adc
pop
jbe
scas
xor
pushf
add
xor
leave
mov
push
rol
shlb
adcb
xor
pop
pause
test
xchg
xchg
shlb
mov
sbb
loope
insl
xchg
lods
jle
and
sbb
push
adc
mov
inc
inc
cltd
lock
ljmp
fidivl
adc
das
sti
je
push
pop
or
test
mov
mov
jg
sbb
mov
hlt
repz
or
mov
and
add
adc
xchg
push
dec
mov
imul
mov
pusha
dec
rcrb
repz
loopne
cmpsb
cmpsl
inc
jmp
jp
lds
pop
mov
gs
xor
xor
adc
mov
push
jae
test
and
or
push
add
stc
jle
divl
mov
xchg
push
subl
and
in
jns
movsbl
push
nop
adcl
int3
cmpsw
jle,pn
je
push
adc
in
and
and
aas
pop
pop
loopne
shll
push
sub
mov
xor
loope
push
imul
mov
push
fstps
mov
mov
inc
bt
cmp
cmc
nop
mov
sbb
lods
pop
jg
in
jl
sbb
loope
movsl
dec
mov
adc
pop
testb
push
inc
int3
ss
loope
ret
shrb
xchg
push
cs
sub
mov
ret
aaa
mov
push
sbb
mov
add
sbb
repz
adc
sbb
cmpsb
mov
push
out
mov
add
dec
lahf
jnp
mov
lahf
loop
mov
jae
mov
in
push
outsl
pushf
dec
rcll
lds
and
dec
jle
mov
push
lret
jne
adc
bound
rolb
cld
test
fnstenv
xbegin
andb
cmpsb
mov
inc
sub
cli
pusha
xor
jmp
push
fs
mov
std
nop
dec
dec
clc
push
sbbl
sub
mov
pusha
cmp
push
pop
aam
add
sub
cmp
push
ljmp
lock
xor
popf
xlat
adc
sub
dec
dec
clc
push
clc
adc
push
push
dec
mov
xor
lock
xchg
aad
fnsave
mov
push
jge
jle
mov
aaa
xlat
cmp
pusha
sub
mov
fs
stc
loop
xlat
mov
cmp
xor
int3
push
lods
pop
stos
cmpsl
ret
repnz
push
xchg
mov
adc
mov
push
in
push
imul
ja
push
sbb
mov
or
cmp
mov
mov
pop
ret
stc
mov
incl
add
xlat
mov
jg
test
cmpsb
push
iret
mov
ret
inc
decb
mov
pop
ja
xor
gs
stc
pop
push
leave
xchg
mov
insb
clc
jne
mov
mov
adc
pop
mov
cmpl
out
lea
sub
pop
jg
cltd
push
mov
jnp
clc
test
mov
dec
jno
xchg
outsb
imul
or
dec
pop
cmpsb
adc
stc
gs
fildll
data16
cmp
sahf
rclb
lods
adc
hlt
enter
adc
bound
adc
sti
sarl
ljmp
outsl
jae
dec
xor
jp
mov
out
jge
cwtl
sub
aad
rcrl
cmpsl
mov
pop
push
sbb
gs
ret
fisttps
pop
and
cmp
fdivrl
jl
pop
xchg
loope
movsb
aas
repnz
dec
xchg
dec
data16
popf
fdivs
cmc
repnz
leave
push
mov
add
xchg
cld
int
cmpb
into
icebp
push
push
cli
jmp
aas
aad
fwait
push
leave
adc
cmp
pop
ficoms
test
jle
call
push
loop
addb
mov
sbb
inc
shlb
shl
pop
mov
dec
aad
notl
int
arpl
insb
adc
adc
addb
orl
ret
pop
mov
ds
ffree
inc
sar
cld
push
push
xor
das
mov
pop
sbb
push
mov
rorl
or
mov
add
cs
out
push
fildll
inc
test
xor
xor
xorb
cmp
and
cmpsl
sti
push
test
push
xor
adc
push
and
inc
dec
sub
divb
mov
loope
fidivrl
adc
xchg
fdivrs
push
push
or
int3
fcomps
cmpsb
add
rclb
push
mov
out
ret
cld
and
int3
stos
jne
clc
outsb
jns
popa
shlb
clc
bound
popf
mov
loop
pop
fldl
fsubrl
lods
jo
and
out
and
test
sbb
push
sub
dec
into
xchg
test
xchg
dec
and
int3
pop
xor
sub
int3
lods
mov
bound
mov
jge
mov
lahf
jecxz
jnp
jbe
testl
out
jl
xlat
inc
call
xchg
jnp
cltd
mov
pop
ret
inc
sub
nop
adc
test
jecxz
fisubrl
inc
les
xor
push
mov
outsb
fimull
jbe
clc
int3
andb
jmp
xchg
cmp
loopne
xchg
pop
test
orb
xchg
cs
jp
inc
adc
mov
jne
mov
add
fistl
xchg
sar
cs
mov
mov
sbb
bound
and
jno
jmp
add
dec
adc
push
xlat
mov
inc
icebp
out
jp
mov
jbe
mov
mov
mov
sbb
ja
iret
out
or
shll
ss
repnz
jg
push
or
inc
mov
lret
sbb
jmp
loopne
sub
mov
sbb
jae
pop
mov
and
stc
sbb
pop
sub
popa
or
cmp
cmp
mov
or
dec
ja
or
fisttpl
mov
sbb
test
jl
adc
insb
adc
jp
adc
cmp
cmp
test
sbb
imul
mov
cmp
ret
xchg
push
aaa
inc
push
xchg
in
rorl
or
imul
mulb
ljmp
or
add
cmp
xorb
pop
cwtl
mov
inc
cmpsl
inc
out
nop
nop
mov
rcl
add
add
mov
add
lcall
fmul
fistpl
icebp
fsin
bound
sub
mov
pop
aas
or
daa
bound
in
mov
js
xor
sub
ss
bound
and
aam
or
dec
jbe
loopne
mov
mov
and
mov
repnz
and
mov
mov
les
add
outsb
es
outsb
sbb
shlb
nop
neg
js
or
jg
or
stos
pop
pop
mov
orl
mov
fdiv
lret
jge
push
cmp
scas
ljmp
and
loop
mov
sbb
cltd
addr16
dec
or
out
insl
xchg
dec
rolb
stos
mov
dec
fistl
mov
mov
dec
or
pop
test
inc
push
mov
gs
mov
add
add
add
test
fildl
xor
or
dec
out
in
les
jns
xor
push
cld
jns
and
es
adc
jle
xor
insl
mov
push
xorl
add
std
stos
out
jmp
loope
ret
repnz
xchg
flds
fldcw
dec
sbb
sub
mov
enter
lods
xor
dec
mov
xorb
pop
xchg
test
mov
lods
dec
int
outsl
add
mov
jecxz
push
xsha1
cmpsb
dec
lret
fiaddl
jno
adc
pop
cs
dec
outsb
xchg
and
pop
mov
and
pop
les
sti
inc
jo
inc
out
arpl
xor
in
fadds
inc
test
mov
push
pop
sbb
jge
mov
jno
or
jmp
inc
inc
sub
or
popa
loope
out
les
sub
js
jg
int
jmp
sti
push
sti
and
and
daa
push
xor
adc
rcl
inc
sbb
adc
sbb
ret
jmp
test
sti
imul
sub
ret
pushf
pop
pop
lds
fisttpl
outsl
mov
jne
xor
cmp
loop
or
lea
dec
mov
push
xchg
out
xor
mov
sub
mov
lcall
in
movsb
mov
incl
shll
ss
push
aam
jno
mov
push
pop
cmp
ss
and
sbb
sub
add
cmp
mov
in
pop
xor
mov
mov
dec
jg
sbb
into
inc
les
jecxz
in
pop
popf
repz
aad
pop
enter
dec
dec
stc
xchg
add
loope
push
popa
fbld
sti
in
push
fimull
out
xor
packuswb
sti
test
lds
das
repz
sub
movsb
inc
xchg
inc
inc
adc
lcall
mov
jge
jnp
in
add
ret
movsb
ficompl
sbb
popa
dec
clc
cmp
lock
xlat
mov
mov
int3
test
push
mov
cmp
imul
addl
je
lea
lahf
scas
xchg
xchg
fisubs
fsubrl
adc
ss
jp
sub
and
sub
imul
gs
bswap
in
mov
sub
cmp
out
or
dec
lcall
pop
dec
sub
add
push
mov
or
jg
stos
jns
mov
sub
jbe
mov
in
xor
aas
lea
in
xchg
es
sub
inc
jg
or
stc
mov
jg
jne
cmp
push
xor
mov
pop
sarl
out
mov
pop
mov
loop
out
pop
sub
ss
fisubs
or
push
andb
add
cmp
testb
cmpsb
push
pop
sti
test
add
xchg
nop
pop
mov
mov
fcompl
dec
xor
call
pop
test
std
icebp
push
test
jle
jne
and
push
lret
or
dec
ss
xor
pop
outsb
xor
push
mov
inc
pop
insl
adc
mov
sub
addr16
and
rcrb
sub
mov
push
jbe
loop
xor
dec
out
addr16
fcomp
dec
sbb
cs
cli
fnstenv
pop
inc
jns
push
es
push
rorb
roll
cmpsl
gs
sub
sbb
adc
std
add
outsl
mov
or
ror
dec
pop
ljmp
inc
nop
repnz
in
add
lret
or
jmp
or
repz
lret
xchg
comiss
aas
push
cmp
sahf
xchg
push
xchg
loope
cltd
and
je
sahf
mov
dec
popa
lods
sbb
push
mov
out
inc
dec
sub
jnp
ret
sbbb
orb
sbb
cld
stos
mov
hlt
add
stc
or
inc
adc
xchg
or
pop
sti
dec
mov
int3
mov
push
iret
pop
or
scas
jl
cmp
lret
adc
icebp
gs
dec
repnz
sbb
sbb
stc
and
inc
jp,pn
push
or
pusha
pop
sub
je
test
push
jle
add
xchg
or
jecxz
dec
sub
adc
outsb
stos
sbb
mov
or
stos
inc
nop
dec
mov
les
int
jnp
pop
and
inc
lods
push
xchg
lods
sbb
outsl
fadds
loopne
mov
inc
jb
xlat
inc
call
clc
xchg
fimuls
sbb
outsb
mov
push
mov
add
int
cltd
nop
push
xchg
pushf
cltd
andb
es
sbbl
inc
cmpb
pusha
jae
mov
pop
cld
inc
xchg
cmp
scas
inc
xchg
push
jle
add
test
dec
fnstcw
pop
fsts
movsb
jmp
adc
jae
push
lret
rclb
jp
mov
in
xchg
in
dec
iret
fadd
aam
push
mov
clc
out
mov
popf
pop
mov
mov
cltd
jae
movsb
add
movsb
vpunpckhdq
jns
mov
mov
fwait
cmpl
or
fcmove
pop
inc
daa
outsl
mov
js
ror
mov
fistl
or
popf
inc
add
mov
inc
push
push
sbb
fcomps
and
push
cli
test
sbb
push
lahf
add
sbb
mov
xor
nop
jns
jp
daa
jae
xchg
cmpsl
sahf
cmp
inc
cmp
jno
mov
stos
add
mov
subl
push
iret
pop
add
mov
scas
sub
push
imul
sbb
push
insl
jg
jl
fdivrs
and
push
xchg
hlt
in
mov
shll
push
inc
push
gs
test
adc
sub
inc
xchg
or
pop
daa
lock
movsl
push
imull
inc
ret
rorb
and
sub
xchg
int3
inc
in
pop
pop
mov
pop
or
cmp
fidivrs
xlat
add
movsb
mov
xchg
add
or
and
mov
outsl
in
push
pop
add
xchg
inc
xlat
lea
xchg
mov
push
jae
jp
call
cmp
pop
sub
std
out
fidivs
test
movsl
push
imul
bound
add
mov
pop
xor
test
out
xchg
in
sub
inc
jbe
dec
push
mov
stc
out
and
mov
fcomps
xchg
pop
inc
mov
lret
aam
daa
pop
es
stos
mov
pop
mov
loopne
sbb
movsb
jge
mov
scas
inc
cmp
dec
xchg
dec
inc
loop
or
mov
xor
jbe
add
or
and
sub
jbe
jno
pop
xchg
lret
int3
int
decl
imul
pop
fmull
movsb
adc
cmp
sbb
xor
popf
add
lret
add
fidivs
mov
sbbl
and
push
jo
cli
push
push
out
pop
int3
mov
rcrl
sub
mov
repnz
fninit
inc
idivl
data16
jmp
xchg
xchg
insl
iret
loope
int3
and
lods
jecxz
loopne
fcoms
mov
popa
clc
orl
fcompl
fcomps
hlt
adc
jle
jbe
push
add
sbb
sti
sbb
jl
lret
ljmp
add
cltd
pusha
ss
pop
sub
jo
lret
out
xlat
mov
loop
aam
adc
int3
adc
lret
testb
add
mov
cmpsb
add
std
pop
or
movzbl
mov
pushf
add
xchg
adc
jne
cmc
xchg
jno
mov
jecxz
rorb
clc
fdivrp
pop
jnp
int
pop
sbb
pusha
movsl
mov
jl
pop
add
mov
cmp
adc
rclb
jbe
mov
or
pop
loop
popf
cmpb
test
xor
sti
scas
lods
sub
or
daa
pop
repz
xchg
sbb
outsb
jge
or
cmp
jae
sub
shlb
mov
cmpsb
mov
call
gs
lret
ljmp
jae
addl
add
out
popf
lock
dec
add
or
testb
pop
movsb
lea
stos
leave
andb
mov
fisttpl
call
in
sbb
sub
cmp
dec
fnstcw
shlb
inc
insl
jmp
nop
rclb
and
in
mov
lods
lods
enter
sbb
pop
add
push
ja
mov
add
adc
xchg
outsb
push
sub
add
or
push
into
sub
cmp
scas
add
mov
push
sub
xchg
sub
int3
xchg
lock
mov
xor
sub
aas
movsl
sbbl
mov
pop
push
pop
and
nop
test
jbe
pop
sub
aaa
jp
stos
mov
repnz
fiadds
xor
pop
xchg
adc
and
pop
push
jp
and
cmc
add
dec
jl
iret
dec
mov
jno
cmp
dec
sbb
js
popf
test
dec
adc
jno
sbb
imul
adc
xor
or
call
push
scas
inc
mov
in
jb
inc
fsts
aam
test
nop
xchg
loope
aas
jg
gs
jle,pn
mov
push
cmpsl
shlb
pop
shr
iret
dec
fwait
into
aas
inc
add
jae
mov
iret
iret
cwtl
jno
repz
fsubl
sbb
xchg
jp
sbb
sub
stos
dec
jge
loope
mov
lea
leave
jp
cmp
flds
xchg
mov
jae
push
xor
sbb
push
pop
mov
insl
stc
add
jl
sub
popf
xor
push
jns
add
aas
mov
stos
fstps
inc
push
and
xchg
test
push
push
sbb
mov
and
icebp
jecxz
lods
push
cmp
imul
pusha
lea
cmc
and
shlb
nopl
jmp
aaa
pusha
movsb
cmp
lcall
cld
pop
adc
das
pop
jns
push
out
int
int
pop
push
bound
xchg
cmp
sub
arpl
insl
push
lret
sbb
in
shlb
push
pop
inc
xchg
cmp
pop
xor
test
adc
lcall
mov
in
cltd
jl
sbb
sub
or
mov
push
in
adc
push
faddl
add
jp
outsb
cmp
fstps
mov
pop
mov
add
inc
test
lahf
sbb
sub
and
push
mov
adc
mov
mov
repnz
mov
or
adc
jbe
mov
adc
xor
jle
sub
out
lret
push
fisubl
in
push
mov
ljmp
mov
mov
scas
call
adc
jmp
or
fldt
mov
push
mov
movsl
das
arpl
sahf
popa
sahf
inc
mov
es
stos
dec
mov
xchg
or
lods
jge
cmpsl
xchg
or
pop
test
xchg
mov
sbb
arpl
cmp
xor
jno
addr16
dec
insl
test
mov
daa
mov
mov
fisttpl
xor
sti
mov
mov
sub
nop
mov
inc
sbb
shl
popf
bound
jmp
fs
inc
movsb
ja
add
popf
enter
into
add
mov
add
daa
and
push
and
add
mov
push
fmul
mov
mov
pop
insb
jg
das
rcl
pop
sub
les
adc
outsl
sti
cltd
mov
jmp
or
cmpsl
adc
aam
shrl
lods
divl
rolb
aas
adc
sbb
mov
lret
insb
decl
push
sahf
xchg
add
ficoml
mov
and
enter
sub
mov
jmp
or
mov
mov
pop
xor
pop
mov
in
out
ljmp
pop
fistl
lock
gs
adc
andb
mov
xor
mov
mov
jle
mov
mov
push
insl
mov
dec
fdivrl
push
das
lock
adc
addl
dec
mov
jp
adc
movsb
push
push
push
mov
push
xlat
sar
and
scas
or
and
mov
mov
add
xchg
insl
fisttpl
adc
cmpsb
stos
dec
jecxz
and
or
iret
por
les
push
add
jge
or
push
pop
cmpsb
inc
es
or
mov
das
dec
push
cmp
sub
sub
or
gs
mov
lock
jns
jnp
loopne
lds
mov
xlat
mov
fs
cmp
stos
xchg
pop
insl
push
rol
lods
xchg
jge
sahf
cmp
sub
sbb
pop
add
idivb
maskmovq
imull
xchg
out
jmp
add
sub
dec
fdivr
inc
mov
mov
add
sub
out
es
sub
sbb
daa
pushf
rclb
sbb
aad
das
mov
cmp
pushf
sub
test
sarb
mov
push
insb
scas
add
adc
xchg
outsb
lahf
jb
ret
add
add
add
sbb
add
pop
ret
sti
fiadds
inc
inc
movsb
xor
shlb
lods
dec
cltd
xorw
shll
and
cli
sub
push
ret
pop
test
ltr
adc
out
cmp
add
push
test
leave
and
shrl
pop
shrl
enter
jp
jne
out
lods
out
insb
bndldx
stos
mov
outsl
xsavec
mov
lods
mov
inc
test
inc
ds
or
xchg
scas
sub
mov
ret
mov
sbb
leave
lahf
pop
pop
inc
xor
push
ljmp
pop
xor
dec
stos
sbb
int
scas
xchg
jns
sub
into
adc
jl
in
mov
xchg
mov
rcrl
cltd
negb
inc
mov
sub
bound
xchg
nop
or
sbb
jle
movsl
or
das
es
jecxz
mov
les
or
push
test
nop
push
gs
dec
pop
aad
inc
repz
mov
cmp
xchg
pop
inc
and
ljmp
dec
loopne
mov
mov
xchg
jg
lret
jne
cmpsb
outsl
inc
pop
mov
push
lock
mov
test
xchg
add
repnz
cmp
scas
mov
push
sbbl
outsb
popf
fwait
mov
adc
sbb
or
or
fisubrs
pop
xor
cs
inc
ljmp
xchg
roll
sub
pop
jnp
fildll
sbb
call
sti
xchg
push
stos
in
fdivs
out
pop
enter
and
inc
add
stc
jae
mov
sub
adcl
sbb
sbb
arpl
xchg
incl
dec
lods
test
xchg
mov
cmpsb
push
jns
xchg
or
call
and
push
and
xchg
lahf
sub
xor
jle
jecxz
cmp
mov
aas
inc
mov
lcall
ljmp
aad
pop
cmpsb
repz
inc
lret
jge
sti
jecxz
jge
sub
test
pop
pop
or
sub
fistl
mov
aas
repnz
bound
cmpsb
cmp
push
sub
incl
fisttps
test
sub
idivl
or
add
xchg
dec
cli
xchg
jge
dec
int
add
fiadds
fadds
sar
mov
dec
jnp
cmpsl
pop
mov
mov
push
enter
xor
fidivs
movsl
mov
jge
adc
das
sbb
popa
in
and
xor
data16
sub
lahf
cmp
sbb
arpl
aad
popf
jo
jl
cmc
add
gs
cmc
pushf
sbb
inc
sub
mov
rcl
cli
pop
popf
xchg
sub
adc
sbb
and
and
popa
mov
xlat
sub
xor
dec
lahf
dec
ds
and
adc
cmp
iret
xor
cmc
pop
lret
and
repz
aad
xor
add
int
sub
ret
and
orl
and
sbb
mov
aaa
dec
addb
sub
dec
xchg
and
fs
shrl
inc
lods
or
pop
xchg
xorl
ja
pushf
mov
test
adc
push
pop
test
xchg
mov
pop
pop
jbe
mov
jmp
jno
sub
xchg
aad
xchg
xlat
push
into
lea
outsb
cmp
ficompl
or
sti
pop
in
les
popa
and
outsb
or
dec
jmp
jl
jg
mov
movsl
push
fldcw
lret
inc
arpl
jns
cmpsb
push
test
and
adc
adc
fnstcw
pop
stos
dec
addr16
jnp
mov
mov
pop
fdivr
add
negb
out
xlat
dec
sbbb
mov
mov
mov
push
lds
shl
pavgb
ja
mov
pop
and
js
jecxz
out
lahf
outsl
sbb
xorb
ja
imul
xor
lds
mov
out
popa
sbb
ret
popf
cld
cmc
sub
iret
mov
test
dec
fnstcw
mov
cmp
push
mov
jg
sbbb
jne
outsl
lcall
repnz
inc
int
arpl
fcompl
or
add
jo
movsb
shl
xor
inc
popf
data16
je
fisttps
and
mov
mov
xchg
decl
in
aaa
sbb
sub
insl
pop
cmc
dec
and
jbe
sbb
pop
sahf
outsl
filds
in
adc
pop
mov
mov
and
data16
std
test
cli
mov
adc
jbe
cmpsb
sar
jmp
sub
push
notl
out
mov
jnp
or
inc
loopne
push
cwtl
push
pop
mov
pop
sbb
pop
test
imul
cmp
jb
jl
push
aad
fdivl
outsl
incl
push
dec
xlat
mov
out
leave
jecxz,pt
rcll
lods
pop
sub
scas
outsl
ret
dec
or
fisttpll
add
fstpt
dec
push
dec
insl
lret
and
aas
pop
or
test
in
imul
push
mov
xchg
jo
sub
mov
push
out
jno
xchg
xlat
jecxz
ss
adc
loope
ficoms
mov
jb
or
nop
mov
jl
sub
ret
jle
mov
outsl
jg
push
daa
filds
popf
adc
cmp
push
popa
vsqrtsd
dec
in
xor
lret
sbb
xchg
lcall
and
lcall
imul
ficompl
inc
inc
sbbb
sahf
int3
jb
xchg
and
xchg
mov
out
add
fildl
addr16
js
ds
repnz
js
idivb
ret
xchg
cmp
xor
aas
loope
sub
mov
push
mov
dec
nop
mov
je
jg
loope
jns
shlb
dec
add
ret
jne
cmp
sbb
adc
dec
lret
push
sub
pop
inc
loopne
push
enter
xor
sub
pop
cmc
jns
in
mov
sub
or
jl
jns
push
fistl
data16
pop
xorb
inc
imul
sbb
in
push
and
repnz
dec
mov
adc
push
and
xchg
fwait
mov
push
mov
jle
jnp
dec
push
cmpsb
lret
sbb
mov
jmp
or
shlb
cltd
cld
lret
fstpl
xor
cmp
aas
loopne
mov
sbb
sbb
inc
sbb
mov
dec
gs
stos
mov
es
cs
xlat
dec
mov
loop
aad
add
rcll
mov
jb
call
cltd
jns
inc
xchg
jle
fmulp
testl
xor
arpl
loopne
addr16
test
shlb
andb
mov
push
shll
mov
xchg
add
addr16
ret
lds
faddl
lret
xor
pop
repnz
adc
paddb
mov
and
push
in
inc
enter
jl
ret
cmpsl
push
je
subl
addr16
rcr
mov
mov
sbb
movsl
sbb
enter
shlb
aam
hlt
mov
outsb
mov
adc
mov
fwait
loope
pop
cmp
sub
sbbl
add
sub
repz
scas
sahf
jne
or
clc
fcoml
leave
je
js,pt
popf
shrb
and
gs
push
jmp
into
adc
push
push
sbb
xor
jb
lret
inc
decb
cmpsl
jmp
dec
push
cs
mov
cs
scas
xor
lock
cli
pop
sbb
mov
sub
nop
lahf
push
or
inc
into
cmc
fisubrs
pusha
in
add
xchg
dec
cmc
imul
mov
jge
xor
cmp
lds
insl
push
mov
movsl
cmp
mov
push
xor
out
push
push
das
gs
call
ds
les
sti
inc
xor
or
jae
cs
scas
inc
xor
push
jp
xchg
pop
xchg
xchg
nop
test
mov
popf
push
jne
jno
pushf
sar
jnp
testl
adc
jle
pushf
das
mov
fwait
pop
dec
ja
xor
nop
add
mov
or
adc
add
push
jne
xor
shll
ret
pop
or
loopne
data16
je
xor
mov
dec
jge
in
jae
cli
sbb
std
in
movsl
sbb
mov
xlat
aam
mov
mov
mov
nop
and
outsb
imul
cmp
je
push
add
mov
xlat
dec
sbb
xor
push
inc
cmp
or
xchg
xor
dec
dec
pop
mov
aas
inc
dec
and
in
push
imull
jnp
fidivs
shr
or
cmc
lds
push
adc
nop
pop
hlt
loope
lds
push
xorl
push
aas
ja
mov
jmp
push
fisubrs
and
ss
test
test
data16
fbstp
mov
out
xchg
or
repz
popa
dec
sbb
and
mov
mov
dec
mov
iret
sub
xlat
in
xchg
das
push
nop
mov
push
popa
dec
out
push
push
adc
sub
ss
xchg
ret
cltd
scas
mov
add
in
and
cmpsb
rcrl
or
and
add
insl
cld
xor
loopne
jb,pt
outsb
addl
sarl
jge
cltd
dec
xchg
repz
push
rcrb
xchg
dec
out
mov
ds
push
adc
pusha
gs
inc
push
cmp
inc
jmp
imul
insb
xchg
mov
das
mov
mov
cs
cs
mov
inc
mov
orl
mov
and
sbb
mov
fiadds
or
jnp
imul
das
pop
adc
call
movd
out
xchg
mov
push
mov
jg
adc
mov
xor
addr16
int3
mov
jo
cmp
push
lds
adc
int
inc
js
fnstcw
push
lret
inc
push
inc
mov
int3
roll
add
mov
jo
xchg
push
ret
mov
cwtl
jns
mov
mov
lahf
addr16
inc
arpl
rcrb
scas
dec
stos
ss
out
lds
push
mov
imul
rclb
jns
ud2
dec
mov
stos
ds
fmul
mov
cltd
ja
xor
xor
xchg
sbb
imul
movsb
mov
pop
xchg
rolb
loope
aad
dec
sbb
add
popa
data16
and
push
js
fiaddl
pop
scas
xchg
out
mov
pop
out
mov
jb
outsl
and
ss
popf
mov
push
outsb
mov
pushf
cmp
daa
test
fldenv
or
and
jp
cmp
xchg
xchg
orl
and
push
inc
push
into
sti
sbb
mov
adc
mov
push
jne
call
shll
ja
hlt
pusha
jns
outsb
rcrl
dec
jmp
and
push
xor
and
pushf
adc
dec
flds
das
xchg
push
pusha
cld
lods
xor
scas
cmp
dec
aam
das
lret
add
mov
push
rcr
xlat
das
mov
push
pop
shl
adc
scas
lcall
add
rcrl
in
dec
cmc
arpl
xor
cmp
adc
test
sarb
cmp
out
xchg
add
fwait
add
je
pop
jae
mov
pop
data16
in
ret
sti
add
bound
mov
push
xor
das
xlat
imul
mov
push
in
xor
mov
es
sbb
push
ja
push
mov
ljmp
jmp
lea
ffree
fidivl
scas
xchg
mov
push
das
inc
xor
sbb
mov
mov
pop
jmp
add
stos
inc
inc
lret
repz
mov
add
pushf
fnsave
adc
popa
stos
mov
inc
lret
or
mov
pop
xorl
leave
xor
rcr
dec
movsb
call
push
or
inc
orl
test
clc
mov
mov
mov
repnz
push
jae
lds
aad
sahf
bound
adc
aad
gs
testl
loope
and
xchg
cmp
test
pop
scas
rorb
push
pop
dec
push
sbb
stos
je
addr16
sbb
xchg
cmp
or
ja
sti
cmp
int3
push
aaa
outsl
mov
mov
scas
lcall
out
jb
popf
xor
cmp
mov
fs
mov
push
mov
insl
sbb
or
pushf
pop
sub
mov
out
sub
xor
xor
push
xchg
mov
fdivrs
mov
rcl
arpl
repnz
dec
data16
das
popa
pop
pop
mov
jo
sub
sub
sbb
test
pusha
insb
pop
pop
lock
xor
and
pop
clc
xchg
xchg
add
sub
js
sbb
cmpsb
mov
push
or
xor
sbb
test
addl
push
ja
in
cld
xchg
das
pop
add
xor
repnz
cmp
lcall
lds
sub
add
data16
lock
stos
insb
mov
iret
mov
push
xorb
or
sub
inc
rcr
sub
jle
in
iret
rcll
out
push
rorb
je
popa
jns
dec
leave
or
mov
add
pop
mov
or
sahf
es
xor
fwait
mov
call
mov
pop
ljmp
xor
xchg
and
cmpsl
stos
mov
mov
push
mov
jecxz
push
dec
lret
imul
xchg
pop
ja
test
insb
jl
fnsave
mov
lods
jecxz
cmp
sbb
sahf
push
push
add
testl
jmp
arpl
lock
mov
roll
retw
clc
iret
sub
shrl
push
inc
into
imul
gs
aas
lahf
loop
scas
mov
ss
xor
fwait
mov
sbb
out
ljmp
push
mov
sub
dec
fwait
outsl
jo
insl
dec
xor
fildll
or
inc
mov
mov
adc
subl
rorb
sbb
pop
sub
add
outsl
inc
and
and
nop
lds
cwtl
or
sbb
bound
push
adc
or
movb
xchg
rcr
ss
xorl
mov
fs
rcr
push
rcrl
ss
inc
mov
jmp
stos
fsts
pop
or
pop
sub
cmp
cmp
in
rcrb
outsb
bound
xchg
lahf
lret
lods
adc
push
ret
lcall
inc
push
jge
dec
dec
pushf
jp
and
shl
imul
loope
xchg
push
or
std
movd
or
fdivr
pusha
fdivs
out
sahf
aas
daa
or
js
pop
dec
add
lahf
xchg
inc
into
sbb
jne
adc
adc
lods
mov
rorb
mov
imul
mov
jnp
push
pop
push
clc
das
lea
into
inc
out
sub
lcall
lds
outsb
sbb
lock
jmp
dec
xchg
pop
ret
mov
mov
dec
jb
mov
pop
pop
xor
mov
imul
popa
mov
push
or
scas
fdivrs
icebp
cmp
into
rorl
inc
sbb
arpl
mov
mov
adc
addr16
addr16
movsb
push
rcrb
orl
pop
push
subb
and
mov
jne
mov
pop
cwtl
jns
addr16
or
das
mov
cld
cmp
pop
dec
js
not
je
inc
fwait
jns
or
adc
xlat
iret
stc
sbb
jno
xor
or
lcall
push
jno
mov
sar
cli
cli
pop
jne
pop
add
inc
dec
arpl
push
mov
push
sub
adcb
sti
repnz
scas
mov
mov
jg
or
stos
mull
enter
jae
adc
xor
pushf
cli
xor
and
insl
test
pop
mov
arpl
or
cs
jecxz
dec
adc
adc
dec
xor
fidivs
mov
insb
and
mov
fdiv
loope
les
xor
cmp
int3
stos
ja
xchg
fdivl
mov
lcall
movsl
pushf
jns
sbbl
push
xchg
xchg
pop
outsb
adc
repz
push
repz
xchg
mov
mov
add
add
mov
ret
or
adc
push
cmp
fucomip
shrb
xor
add
cs
pop
jbe
cmpl
adc
aaa
jp
out
roll
push
jbe
gs
mov
or
add
outsb
jmp
iret
lods
stos
or
out
inc
or
lahf
out
loopne
imul
int
jecxz
shrl
jne
ds
cmp
mov
sbb
inc
enter
pop
push
mov
repz
test
fcomps
pop
inc
and
cmpsb
dec
mov
jg
pop
arpl
and
out
loop
cmp
xchg
movsb
shrl
inc
test
dec
mov
sub
xchg
xlat
ret
pop
rcl
push
nop
gs
imul
ret
mov
imul
js
ret
jmp
jp
push
sub
add
shll
jbe
pushf
pop
leave
cli
adc
ret
stos
movsb
hlt
pop
jp
gs
cmp
gs
pop
popf
daa
insl
notb
cltd
sarb
add
push
pop
test
aas
ficoml
lods
movsl
fidivrs
test
mov
sub
pop
cmp
call
jo
fists
aas
mov
mov
add
add
fdivs
aam
lods
repz
mov
imul
sarb
pop
test
ljmp
mov
lds
fildll
mov
fdivr
rcrb
jge
pop
xor
inc
mov
shl
cs
dec
int
inc
sbb
daa
adc
xor
outsb
mov
hlt
pop
jl
iret
ja
roll
or
imul
popf
dec
mov
outsl
sbb
and
sbb
sbb
pushf
das
xchg
jo
inc
cmp
sbb
std
lods
inc
andb
fwait
insb
icebp
pop
adc
add
add
sahf
jnp
in
cmp
push
mov
in
or
pop
or
or
stos
inc
lock
shll
fs
pop
add
xchg
and
add
test
fcmovnbe
mov
and
mov
inc
mov
pop
jo
addr16
jl
pusha
jge
sbb
adc
aam
adc
xchg
lahf
jge
inc
dec
sti
insl
jle
xor
clc
push
ds
sahf
xor
inc
stc
notb
int
xchg
mov
and
mov
sbb
data16
xchg
movsl
fdivr
inc
mov
xor
sub
sub
cmp
es
daa
mov
mov
call
mov
jmp
popf
movsb
xor
mov
inc
stos
addb
mov
push
dec
mov
fimuls
les
inc
adc
adc
cmp
push
ds
imul
fsubs
inc
stos
out
int3
add
jb
arpl
xchg
pop
dec
mov
adc
or
mov
xor
lds
jbe
loope
mov
add
stos
dec
pop
cld
mov
push
dec
cmpsl
loopne
sub
in
mov
sbb
fdivrs
lcall
adc
in
push
mov
sti
mov
rolb
movl
outsl
mov
imul
or
fcoml
jecxz
dec
repnz
mov
sti
insl
add
mov
inc
in
dec
jmp
jmp
sahf
movsl
mov
loop
dec
or
arpl
push
scas
pop
lods
adc
push
hlt
adc
jecxz
or
dec
stc
dec
pushf
arpl
dec
ljmp
inc
das
inc
ror
cmc
mov
sub
cld
test
sub
adc
int3
ret
int3
inc
out
jbe
sub
add
mov
loopne
push
rorl
js
call
cmp
add
push
pop
aaa
pop
mov
lods
bnd
lret
lods
adc
gs
mov
cs
adcl
insb
cmp
mov
xchg
and
test
mov
scas
dec
cmp
jb
das
push
jmp
paddsb
mov
push
ljmp
mov
loopne
jmp
or
loope
into
and
ljmp
cmp
std
and
mov
pop
push
mov
out
sub
pusha
adc
cmp
je
repz
fs
in
in
push
adc
adc
inc
hlt
rclb
out
mov
dec
sbb
pop
mov
sti
xchg
fwait
jg
jl
sahf
sbb
fwait
inc
fldt
leave
mov
xchg
sub
sub
ret
jnp
mov
xchg
xchg
andl
dec
iret
movsb
dec
inc
rclb
push
and
xchg
lret
inc
mov
mov
or
test
lock
or
sub
add
dec
cmpsb
xchg
pop
sub
xor
hlt
pop
jne
inc
and
xor
and
or
aaa
fidivs
cmc
popf
mov
aad
push
fwait
mov
push
or
cli
jmp
or
out
inc
insb
pushf
in
rclb
xorb
jns
mov
out
jg
mov
dec
cmc
pop
sbb
std
test
loopne
cmc
clc
shrl
je
xchg
mov
into
popf
shlb
or
fmul
inc
aad
xor
fwait
clc
dec
inc
hlt
arpl
adc
mov
ficompl
das
inc
test
or
ljmp
mov
dec
push
xor
xor
fadd
repz
fildll
jb
pushf
pop
sbb
or
das
jle
outsl
cli
out
push
add
leave
sbb
push
sub
ret
ficompl
lfs
xchg
mov
mov
ss
jmp
jmp
das
ja
add
iret
dec
inc
int
imul
and
mov
icebp
daa
mov
imul
mov
loope
sbb
xor
cmp
ret
mov
rorb
aad
aad
icebp
mov
loopne
pusha
in
mov
adc
mov
sub
test
les
iret
dec
nop
inc
or
sbb
fcmove
adc
and
push
add
mov
adc
pop
arpl
and
and
pusha
jle
fbstp
lods
push
inc
sub
push
fstl
nop
cmp
pop
cmc
nop
fsubrs
lods
shll
jbe
and
jg
jecxz
sub
es
pop
mov
sub
roll
or
mov
mov
jl
stc
push
fcmove
fwait
movl
adc
flds
xor
aaa
das
xchg
jne
dec
pop
aad
daa
pusha
cmp
push
inc
inc
popa
iret
in
adc
jnp
loop
outsb
and
pop
cmp
mov
mov
mov
test
dec
fnstsw
pop
fistpll
mov
in
inc
mov
in
data16
ds
add
push
jae
shlb
and
jge
stc
pop
cmp
fsubrl
insl
js
lock
pop
pop
mov
sbb
sub
push
mov
jbe
je
leave
pop
sahf
data16
xor
pop
gs
enter
sbb
jp
std
imul
xchg
xchg
mov
clc
lods
xchg
ss
js
je
mov
js
push
cmpsl
movsl
repnz
xchg
cmp
jle
stos
dec
xor
ljmp
mov
call
test
cltd
mov
xor
cli
dec
add
mov
mov
push
pop
mov
lods
jne
popa
cmp
cmp
mov
sarb
das
sub
pop
cwtl
add
mov
lods
mov
jno
icebp
fildll
das
push
and
xchg
outsl
fs
dec
call
or
jo
test
mov
stos
push
sbb
int3
stc
cli
dec
mov
push
js
inc
dec
dec
aas
xor
push
in
sub
sbb
fildll
outsl
clc
pop
out
mov
push
stos
push
outsl
fs
pop
lret
jno
lret
lods
cmpsl
push
bts
call
inc
ljmp
into
popa
arpl
jne
sbb
xlat
mov
out
push
inc
imul
ret
shlb
xchg
insl
jns
push
xchg
in
lea
sbb
pop
mov
cmpl
jmp
sahf
pop
xchg
outsb
jecxz,pn
xlat
push
push
int
sbb
sbb
outsb
mov
pop
repz
aaa
mov
loope
sub
fiadds
ja,pn
xchg
enter
push
ds
sbb
mov
icebp
dec
insl
mov
stc
mov
roll
test
std
inc
daa
and
sbbb
movsb
decl
mov
out
pop
pop
xchg
push
mov
lcall
xor
mov
mov
cmp
mov
ds
pop
stos
inc
dec
adc
adc
mov
loop
ja
lea
aaa
sbb
rol
push
scas
sub
outsl
lcall
cmp
call
sub
push
cmp
xchg
cmpb
sbb
xchg
jne
daa
aam
jle
sti
bnd
jge
inc
hlt
lea
push
jl
stos
mov
push
fmull
fcoms
test
xor
stc
daa
jne
call
jg
cmpsl
jno
js
or
shl
and
lahf
out
xchg
xchg
mov
xchg
hlt
rcrl
mov
push
push
mov
cmc
add
ja
jbe
pusha
cmp
sub
sbb
xchg
es
jo
dec
hlt
fistpll
lret
pop
adc
and
cmp
flds
mov
ss
mov
pop
sbb
popf
sbb
ljmp
or
ss
push
xor
idivl
mov
push
mov
test
sbb
pushf
popa
cld
xor
add
aas
cs
jle
xor
mov
xchg
lods
mov
iret
xor
out
gs
xor
mov
ljmp
sub
sarl
loope
push
aam
lcall
mov
mull
aaa
pop
pop
push
dec
dec
mov
je
cmpsl
jle
mov
xlat
ds
leave
call
aam
sbb
pop
cmp
mov
push
scas
mov
inc
fsubl
inc
jo
push
arpl
pop
sbb
repnz
lahf
xchg
and
std
in
les
and
mov
enter
mov
lods
mov
mov
push
mov
cmp
xor
adc
mov
arpl
fdiv
jg
and
adc
push
in
repz
xchg
dec
repz
repz
stc
push
mov
int
ljmp
cmp
mov
divl
mov
lcall
mov
xor
or
imul
popa
xchg
pop
pop
cmp
loope
leave
and
jecxz
std
or
push
inc
xor
into
mov
int
jge
gs
divb
icebp
or
hlt
repnz
inc
mov
and
push
ret
cmp
int3
stos
jno
mov
dec
fimuls
shlb
out
sbbb
pop
rorl
imul
and
sbb
push
out
adc
lock
dec
sub
inc
adc
jns
and
into
cmc
sbb
sti
jle
mov
dec
push
popa
xor
jo
imul
das
ret
mov
inc
mov
test
jl
nop
add
std
cmc
shlb
inc
stos
xchg
out
push
adc
jbe
insl
or
xor
or
jno
pop
daa
scas
lahf
dec
jl
dec
insb
pop
mov
pushf
or
arpl
add
fistpll
mov
stc
in
cwtl
icebp
imul
out
jb
clc
repz
imul
or
lea
imul
ret
jmp
aaa
add
mov
xor
adc
push
das
fadd
push
sub
lock
mov
mov
jge
cmpsb
xchg
add
int
sarl
and
jno
in
push
lcall
adc
mov
movsb
scas
outsb
popa
stc
and
call
push
popa
xor
loope
mov
idivb
xchg
xchg
jge
and
mov
dec
cmp
add
inc
add
movsl
inc
dec
xor
jg
push
lret
lea
sub
pop
in
mov
scas
je
dec
call
mov
xor
dec
xchg
pop
mov
lds
scas
sub
xchg
xor
mov
decl
cmp
push
cmovp
and
shlb
into
movsb
push
push
insl
lock
scas
sub
mov
loopne
mull
roll
mov
mov
pop
jb
mov
cmp
jae
repz
lea
jno
cmp
int3
cld
mov
mov
mov
xor
lock
lods
dec
pop
push
inc
imul
mov
mov
cmc
cmc
ret
sub
push
repnz
fidivrl
mov
adc
aam
add
mull
fchs
lret
push
fisubl
inc
adc
test
movsb
int3
dec
stos
mov
pop
xor
bound
movsb
jp
mov
not
imul
in
xchg
popw
sub
jno
cli
dec
lods
stos
sbbl
sub
inc
scas
jg
xor
mov
popf
mov
roll
arpl
dec
mov
sti
adc
xchg
jp
loop
dec
adc
fs
fwait
dec
push
scas
or
hlt
add
dec
dec
lock
mov
scas
push
xor
cmpsb
sbb
xchg
sbb
mov
lods
ja
pop
and
sbb
inc
jmp
push
aad
xchg
sbb
sub
jmp
clc
mov
loop
cmpsl
cmp
je
jg
and
pop
add
xchg
mov
push
in
sar
mov
pop
pop
and
jmp
push
and
or
negb
jmp
in
add
in
lret
ljmp
pop
xchg
cmp
ss
loope
jle
sbb
pop
pop
fstp
xchg
mov
in
maxps
shll
jns
push
sti
std
jno
jle
add
pop
dec
ds
stos
mov
push
je
aam
arpl
cmc
dec
out
outsb
fs
inc
ror
or
cld
sub
cmp
mov
addr16
and
ds
push
stc
cmp
fsubrl
testl
adc
cld
lahf
andb
div
sbb
sbb
aad
cwtl
sbb
push
adc
js
outsl
jmp
xor
mov
ffreep
cmpsb
xchg
insl
cmc
push
clc
dec
into
pop
rcrb
popf
push
mov
in
add
stos
lcall
mov
xchg
das
or
cmpsl
and
sub
pop
push
push
jne
jge
cli
xchg
mov
sbb
pop
xlat
in
call
mov
test
mov
mov
jecxz
push
lock
sbb
sub
jmp
xor
fucomp
scas
ljmp
outsl
loope
call
cmp
inc
pop
dec
dec
notb
imulb
push
pushf
pop
add
test
roll
clc
mov
in
mov
push
insl
cmp
ja
jle
mov
pop
gs
pop
push
fmuls
cmp
lods
js
insb
ret
les
adc
sbbb
out
popf
cmc
mov
pop
in
push
fstps
popa
je
mov
nop
cs
xchg
mov
cmc
adc
adc
rorl
ljmp
out
call
inc
add
in
xchg
cmpsl
idivb
lea
addl
sub
int
filds
jl
iret
nop
mov
xchg
idivb
inc
sahf
ret
loop
jns
fs
sub
add
addl
mov
sbb
bound
andb
inc
jl
scas
out
sti
aad
and
iret
pop
div
loopne
hlt
mov
push
stos
fsubr
dec
pop
fildll
iret
fidivrl
adc
ljmp
and
inc
inc
sbb
adc
outsl
or
xchg
push
mov
in
sbb
xorb
dec
xor
xchg
xlat
cmp
inc
ficoml
xchg
sbb
les
rcr
jbe
adc
ror
lcall
loop
mov
add
arpl
cwtl
addr16
cmp
popf
pop
enter
rol
xlat
mov
jl
fucomp
dec
test
push
jg
mov
ret
dec
movsb
daa
sbb
or
add
sbb
jns
xchg
pop
out
int
dec
subb
xor
daa
bound
hlt
pop
cmp
loop
cld
ljmp
mov
mov
mov
popf
xchg
push
add
cwtl
cmp
outsl
push
rcll
xchg
clc
add
popf
lock
lock
xchg
jmp
popf
outsb
inc
xchg
ja
cmp
in
enter
int
pop
movsb
or
inc
cmpsl
sti
int3
insb
mov
movups
xchg
xchg
test
mov
test
xor
and
inc
in
in
ret
ss
add
sub
loop
loope
pop
cmp
enter
push
sub
xor
stc
js
pop
mov
ja
repnz
fstps
push
inc
insl
shl
mov
movsb
mov
sub
call
cmpb
xor
fstpt
fcom
stc
add
mov
push
shll
int
mov
insl
push
adc
or
dec
ret
sub
jne
or
int3
nop
fisttpll
fsubr
arpl
sub
mov
push
stos
push
sub
es
push
jne
nop
loopne
dec
push
xchg
call
inc
stc
pop
push
fsubrs
push
stc
call
mov
dec
jp
sbb
mov
sahf
sub
push
sbb
xchg
sbb
xchg
in
xchg
dec
clc
jno
outsb
fwait
jb
inc
rcrb
or
mov
add
xorl
std
pop
pop
add
imul
fwait
xor
or
into
push
inc
xor
or
push
pushf
negl
jns
mov
sbb
inc
ret
push
add
pop
jb
mov
inc
cmp
adc
adc
cltd
xor
mov
subb
fwait
jo
mov
ret
sub
or
inc
fcmovnb
test
push
sub
scas
js
jp
push
cld
adc
jmp
aas
cmc
shr
adc
push
sub
xor
shr
inc
movsl
inc
fs
rcrb
inc
jae
mov
int3
loope
push
dec
cmp
lods
dec
xor
mov
leave
add
bound
test
adc
or
jle
pop
inc
push
push
jmp
in
pop
fidivrs
xor
mov
mov
loop
inc
stos
xchg
pop
jecxz
mov
or
js
shlb
movsb
sbbb
and
int
outsl
jae
shlb
push
repnz
mov
xor
xchg
xchg
nop
test
loope
inc
cmpsl
and
mov
xchg
jmp
sub
call
sti
dec
lahf
jp
out
aam
add
pushf
lock
lds
xchg
fisttpl
bound
sbb
push
add
adc
cwtl
ret
mov
movntps
or
aas
pop
sbb
data16
push
inc
insb
imul
mov
icebp
cltd
inc
push
hlt
shll
xchg
sbb
leave
push
jge
cmp
mov
movsl
add
or
pusha
xchg
push
mov
je
test
jle
adc
clc
push
mov
out
ja
mov
and
mov
pop
mov
mov
int3
fsubrp
dec
push
inc
mov
push
cmpsb
push
movsl
test
lods
cwtl
xor
push
and
jb
lahf
push
cmp
js
xchg
inc
cmc
pop
mov
arpl
or
push
xor
dec
sahf
add
dec
ffree
xchg
dec
sub
mov
cwtl
inc
jae
leave
sub
sub
fistpl
jbe
or
mov
shr
mov
push
xlat
int3
and
enter
imulb
out
mov
sub
push
ss
arpl
cmpl
scas
in
jno
cmpsb
and
flds
cmp
cmpw
mov
sbb
popa
lock
cmpsb
lods
mov
loope
sbb
test
imul
lret
add
xor
pop
movsl
pop
getsec
adc
lret
jmp
pop
sbb
inc
fsubr
fldt
xor
push
rclb
jae
lods
xchg
aam
mov
add
decl
inc
adc
shl
lock
frstor
mov
cmp
and
mov
mov
setae
mov
outsb
inc
lea
imul
mov
in
sub
xor
mov
xchg
adc
mov
pop
fistl
sub
mov
xor
cli
gs
add
jle
sahf
sub
xchg
pushf
jo
pop
cmp
dec
sbb
call
fsubrs
sti
or
push
sbb
cmp
xor
int
push
push
fwait
outsb
fsts
mov
mov
psllq
lock
pop
add
test
inc
lods
fs
leave
pop
mov
mov
xor
and
add
clc
push
and
adc
iret
clc
cmp
xchg
push
xchg
sbb
orb
jle
test
inc
inc
lock
xchg
xchg
pop
sub
xchg
fs
and
imul
sbb
test
add
es
sbb
pop
fs
jecxz
jb
lods
mov
shrl
mov
shl
cmpsb
out
xlat
sbb
cmp
mov
xor
push
dec
xchg
jo
push
popf
rcrl
ficoml
mov
arpl
lret
push
jb
pop
shld
push
jg
lods
lret
adc
mov
les
dec
popf
aad
dec
fdivrs
sbb
cmc
stos
iret
test
push
pop
push
fisttpl
pop
mov
rclb
jmp
dec
daa
sub
test
lods
in
mov
dec
jle
xchg
ja
subb
or
out
jle
iret
mov
lret
sbb
sub
js
rdmsr
scas
out
gs
cmp
lods
jle
int
adc
fsub
pop
push
cmp
mov
sti
adc
repnz
mov
lret
repz
cs
add
push
ja
cmp
pop
ret
adc
iret
cmp
pop
push
adc
imul
xor
test
leave
ja
je
fdivrs
in
sahf
js
outsb
sub
mov
mov
out
lahf
int
mov
jg
push
mov
cmpsb
fstl
mov
popa
lds
ret
jne
jno
cli
into
dec
xchg
xchg
xor
and
or
cmp
jecxz
imul
daa
push
in
popf
lret
cmp
sbb
jle
jbe
lcall
sti
dec
imul
inc
out
fiadds
jae
xchg
xchg
bound
enter
lock
mov
add
mov
lret
shrb
std
pop
pushf
jae
leave
stc
cltd
lgs
mov
imul
sub
outsl
hlt
test
push
or
xchg
sbb
sbb
daa
loopne
xchg
sbb
and
jl
call
or
dec
imul
sub
or
jecxz
xor
push
or
call
add
jnp
test
cmc
fprem
adc
add
stos
addr16
dec
iret
sbb
out
pusha
pusha
push
jbe
stc
add
out
test
in
and
aad
hlt
stos
xchg
xlat
ss
leave
jns
inc
push
add
ljmp
mov
and
out
bound
arpl
mov
mov
ljmp
jle
ja
inc
sub
fiadds
push
pop
inc
mov
sbb
dec
adc
inc
mov
in
push
jge
pop
dec
loope
jp
xchg
mov
scas
lds
clc
fadd
add
cmp
daa
mov
fstps
pop
bound
lcall
lds
aad
addr16
sub
sahf
and
xor
sbb
pusha
and
pop
jp
sub
inc
outsb
fdiv
call
inc
dec
cmc
fs
push
pop
xor
cmp
icebp
inc
pop
sti
sbb
enter
mov
loop
jle
jmp
and
jne
stos
add
sbbl
sbb
xchg
cltd
incl
pop
imul
jnp
push
flds
insb
gs
or
nop
push
xchg
in
rorl
jecxz
mov
push
inc
ja
jecxz
pop
sbb
push
outsl
fisttpl
sti
addb
in
cmp
mov
ret
push
jae
xchg
movsb
mov
jmp
cmp
lock
inc
and
inc
mov
lea
push
xchg
pop
fs
out
sub
push
add
and
inc
dec
int3
add
fldl
psubusw
inc
loopne
lds
push
sbb
vxorps
push
inc
jp
push
dec
jecxz
cmp
into
cmc
xor
mov
mov
icebp
pop
and
sub
sub
movsw
jp
addr16
mov
or
repz
shll
add
shrl
dec
cmp
mov
mov
mov
ds
lret
dec
push
pop
lds
fimull
sbb
icebp
mov
xchg
add
push
pop
mov
jns
add
or
jge
jmp
dec
cld
cwtl
xchg
jmp
push
pop
orb
arpl
hlt
jl
mov
fsubrl
push
fcomps
test
pop
push
mov
mov
jnp
push
pushl
and
lret
testl
or
mov
jle
jecxz
test
sahf
xor
sar
pop
cld
dec
dec
sbb
clc
stc
subl
pop
in
or
gs
fsub
inc
les
cmp
or
mov
sub
movsl
xor
dec
or
push
pop
inc
mov
xchg
sub
lea
adc
leave
mov
lock
pop
sbb
and
insl
lea
call
xchg
mov
aas
sar
arpl
push
xor
movsb
fmuls
popa
in
push
fs
iret
outsl
mov
sahf
add
or
add
add
out
outsl
dec
scas
inc
jbe
dec
mov
fnstenv
cmp
idivl
adc
inc
or
add
cs
movsb
xchg
aas
push
hlt
das
xlat
sar
jge
jae
std
pushf
hlt
mov
pop
rorl
pop
add
subl
aaa
cmc
les
test
ret
xchg
filds
or
mov
cmp
ret
fisubrl
pop
and
loop
lods
leave
jnp
or
push
cs
pop
mov
bound
sbb
stc
mov
pushf
test
inc
enter
jge
push
sbb
cmp
adc
loope
jmp
mov
jg
mov
push
cmpsl
xchg
fisubl
sti
push
mov
out
inc
ja
fadds
loope
fisttpll
lahf
inc
and
push
imul
es
fnsave
cli
sahf
sahf
xor
jno
sub
repnz
adcl
or
je
mov
push
stc
sbb
in
lds
loop
and
mov
out
mov
push
fistl
mov
push
cs
das
scas
pop
test
mov
cmp
lahf
out
push
imull
push
jl
out
dec
push
jb
sbb
jns
sub
mov
mov
fisttpll
subb
rcr
pop
out
cwtl
and
cmc
ja
push
push
orl
and
push
pop
or
aas
mov
fucomi
mov
insl
push
push
mov
fists
mov
dec
les
lret
push
mov
std
lods
cwtl
mov
adc
test
mov
push
adc
mov
pop
insb
ljmp
mov
sbb
aaa
sub
push
movsb
andl
cmc
ja
sbb
mov
jecxz
xchg
call
arpl
xchg
leave
fs
adc
icebp
shl
inc
out
dec
out
mov
xchg
fisttpl
sub
mov
lret
repz
scas
insl
mov
ds
stos
push
push
repnz
mov
lods
dec
fdivrs
imul
and
out
fwait
cmpsb
mov
loop
or
mov
dec
mov
xchg
push
dec
lret
jns
stos
jno
jmp
sub
hlt
sbb
mov
sub
mov
and
mov
ss
jp
jecxz
fiadds
jb
mov
cmpsb
clc
notb
mull
push
inc
loopne
sub
push
jb
shl
lret
sahf
iret
mov
mov
hlt
sbb
aaa
xchg
cmp
xor
cmc
pop
je
icebp
out
test
test
xchg
adc
jle
imulb
or
push
inc
movsb
and
adc
repz
popf
outsl
not
mov
jmp
xchg
dec
add
bound
xor
xor
cmpsb
lock
or
inc
imul
inc
pushf
add
lds
fsubrs
dec
sbb
xchg
pop
out
sbb
fwait
insb
sbb
inc
mov
aas
lcall
sbb
and
orb
mov
jle
repnz
test
lcall
push
push
fildl
test
ss
and
push
mov
sar
subl
sub
mov
adc
adc
loopne
sub
popa
sbb
inc
jge
adc
add
add
sbb
mov
or
push
loop
inc
roll
xor
ret
sbb
inc
pop
cli
jg
sti
testl
push
jbe
mov
or
cmpsl
sti
mov
adc
pusha
xchg
fstp
repnz
imul
out
add
add
shlb
int3
call
inc
or
inc
pop
push
ja
into
aam
cmp
xor
aad
xchg
cmpb
dec
xor
movsl
or
pop
aaa
loopne
or
ljmp
inc
mov
jnp
jecxz
jb
cmp
dec
cmp
pushf
cmpsb
outsl
push
jbe
pop
push
mov
pop
jae
and
pop
je
mov
push
mov
in
xor
mov
fistps
dec
push
dec
enter
adc
std
sbb
imul
pushf
xor
cmp
xchg
push
int
stos
cmpsl
out
aad
movsl
scas
mov
mov
fs
mov
jbe
in
fldl
mov
dec
xchg
jp
xchg
jecxz
scas
or
push
rcr
ss
iret
and
and
sub
and
pop
nop
repnz
pop
lods
stos
inc
mov
or
gs
rcr
loop
int3
out
iret
mov
mov
out
xchg
call
or
add
fucomp
sbb
jp
cwtl
and
test
ljmp
sbb
les
adc
push
addr16
ret
outsl
xchg
daa
jp
stos
lds
and
cli
xchg
pop
lcall
call
sbb
sub
and
and
aas
dec
inc
pushf
mov
adc
mov
mov
cld
mov
pop
sbb
call
adc
or
decl
mov
fmul
jns
and
jnp
call
cmovae
loopne
and
rclb
icebp
fsub
das
rorl
add
out
xlat
cmpsb
cwtl
xor
jae
add
pop
jmp
shrl
outsl
inc
mov
cli
xor
sti
adc
jo
mov
sbb
aam
mov
into
cmp
push
sbbl
aaa
icebp
fdivr
push
pop
out
and
dec
mov
pop
je
pop
mov
into
and
js
pop
popa
push
xchg
vcvtps2dq
popa
fidivl
mov
adc
xor
popa
pop
leave
hlt
and
imul
jae
out
push
inc
hlt
js
cmp
xchg
popf
inc
in
test
lret
xor
and
jnp
and
mov
jmp
call
rcrb
push
lods
cwtl
and
pop
cmp
push
push
adc
andl
imul
pusha
frstor
stos
mov
mov
popl
or
in
push
xor
dec
inc
xor
imul
dec
leave
adc
jbe
adc
ret
or
push
lret
inc
fsub
sub
popa
lods
adc
or
fcmovu
push
lret
jg
or
ds
cmovae
or
cmpb
arpl
adc
mov
mov
out
nop
push
out
and
jle
movsl
loop
dec
or
inc
dec
xor
ret
xchg
fdiv
fisubl
sti
inc
and
mov
test
cli
mov
sub
jmp
jno
fnsave
cmpb
arpl
xor
sbbb
mov
jnp
push
ret
mov
stc
inc
inc
std
xchg
or
jle
pushw
je
stos
dec
mov
loope
sbb
loopne
xchg
arpl
adc
lret
repz
out
loop
sahf
rclb
imulb
mov
pushf
push
bound
lahf
jmp
jae
jae
add
enter
fcmove
and
cli
xchg
pop
and
dec
mov
sub
cmp
sti
cmp
mov
ja
pop
xchg
js
dec
add
push
test
aad
out
je
shlb
ret
inc
andb
xchg
movsb
cmp
lds
cmpsl
push
test
imul
out
addr16
inc
xchg
xlat
or
jl
adc
repnz
sbb
push
cmp
stos
pop
and
sbbl
outsl
add
fmull
mov
lods
push
or
jae
jg
inc
add
jnp
mov
pop
pop
pop
jg
loopne
sbb
mov
stos
jle
pop
push
lea
aad
lods
push
fwait
push
scas
lds
mov
es
inc
jl
jmp
push
xor
jmp
push
js
outsb
out
jno
add
mov
insb
add
ret
adc
and
xchg
rcrb
mov
enter
mov
sti
push
mov
mov
cwtl
xchg
pop
jmp
andb
xorl
cmp
pop
ficompl
in
in
hlt
int3
rcl
test
fstl
cwtl
mov
mov
shr
insl
subb
push
cmpsl
jb
or
test
add
movsl
cmp
imul
stos
xlat
jp
mov
es
adc
idivb
jno
xor
sub
in
ret
int
jnp
clc
cmp
addb
push
loope
dec
hlt
or
aaa
outsl
out
nop
add
into
jnp
lcall
adc
dec
or
pop
jae
jno
adc
js
and
enter
jb
pop
in
or
mov
add
mov
cmpsb
movsl
sub
adc
mov
imul
jne
xor
out
cld
sahf
sbbl
pop
inc
js
ds
jno
push
mov
loop
scas
int3
pop
inc
cs
loopne
cmp
inc
int
lret
in
outsb
scas
xor
add
call
mov
mov
jne
in
loope
xchg
addb
pop
inc
jbe
hlt
jmp
pop
std
dec
hlt
push
jmp
shlb
enter
sbb
ret
daa
xor
icebp
push
adcb
movsl
push
xor
outsb
bound
add
pusha
jbe
int
push
dec
arpl
or
pop
cmpsl
sub
into
cmp
mov
mov
jnp
cmp
outsl
outsl
sbb
mov
daa
ds
push
lahf
sbbb
outsl
xlat
movsl
jo
xor
mov
in
mov
or
add
dec
test
mov
push
loope
xor
sub
pxor
icebp
xacquire
inc
lea
xchg
and
adc
sarb
xchg
push
sbb
inc
imul
test
xchg
adc
pop
stos
lods
sbb
xor
popa
inc
in
dec
fidivrl
xchg
cs
jg
imul
fidivrs
mov
or
xor
stos
pushf
addr16
ljmp
sub
and
or
mov
push
or
test
das
mov
enter
inc
les
xlat
xchg
mov
imul
jnp
std
and
mov
arpl
stc
mov
out
sub
mov
jno
pop
iret
sub
add
aaa
xor
or
inc
out
fcmovnu
iret
iret
mov
xchg
aaa
enter
and
cmp
cwtl
out
imul
xchg
fists
cmp
pop
or
enter
adc
xor
les
int
push
xor
jno
sub
jg
int
fimull
mov
iret
sub
ja
shll
fcoms
inc
insl
mov
call
xor
pop
fdivl
xor
fstps
pop
mov
sbb
inc
dec
nop
jle
dec
xchg
loope
cmp
push
mov
jae
inc
cmp
dec
sti
xchg
jecxz
adc
sub
ret
inc
add
dec
pop
inc
add
sub
iret
mov
xlat
je,pt
xchg
cmp
sub
int
sahf
mov
aas
jnp
mov
push
fs
add
xchg
jno
inc
push
incb
sub
cmp
pop
add
dec
aas
mov
push
loopne
jb
adc
sbb
aad
ja
enter
dec
stc
inc
rolb
mov
mov
int3
pop
add
mov
popf
fistps
mov
xor
adcb
cmpsl
adc
push
daa
hlt
loope
sbb
and
cld
ss
decb
jmp
sbb
xor
sbb
lret
dec
push
adcb
add
fcomi
loopne
inc
xor
xchg
in
adc
xor
adc
mov
mov
in
xchg
push
out
mov
sbb
pop
int3
xchg
fidivrs
mov
mov
inc
pop
lahf
push
xchg
add
jno
add
mov
jle
fists
rorl
sub
xchg
or
sub
mov
inc
mov
xlat
dec
jecxz
negb
insl
ds
int3
scas
xchg
test
push
cmpb
pop
sbb
mov
rorb
dec
or
add
push
sub
push
cmp
lcall
cli
inc
mov
and
sahf
mov
mov
stos
sub
aam
xchg
outsl
daa
lea
xor
adc
cmpsl
aam
xor
stc
sbbl
jbe
or
leave
sub
cs
mov
scas
pop
insb
cmp
ss
and
sahf
repz
lahf
xchg
cmp
sbb
push
sbb
add
popf
sbb
out
in
jno
iret
sub
pop
stos
pop
les
jns
or
out
adc
push
inc
loope
dec
in
mov
and
es
inc
stos
in
fwait
lods
test
divb
dec
jl
dec
inc
and
mov
cmp
and
mov
cmc
lods
out
arpl
pushf
int
fst
arpl
mov
and
imul
outsb
and
push
ljmp
xor
mov
adc
sbb
fs
das
mov
adc
xchg
lea
jnp
push
faddl
sub
sub
dec
hlt
out
into
adcb
mov
jle
push
pop
je
shll
and
mov
dec
xor
das
pop
enter
xchg
cld
push
push
jo
inc
push
push
cs
dec
mov
adc
xchg
sub
mov
dec
sub
adcl
dec
sbb
cmp
sbb
in
add
jle
stc
add
dec
insl
jno
movsl
mov
jp
inc
outsl
rcl
and
int
fs
push
pop
daa
dec
xchg
popa
fnstenv
inc
outsl
add
xor
pop
mov
roll
mov
loopne
in
cmp
or
mov
sub
out
push
imul
jg
pop
sbb
dec
xor
sub
stc
xchg
and
and
xchg
shrb
out
xchg
ss
lcall
loop
data16
mov
push
stos
in
cwtl
sbb
pop
xchg
pop
mov
enter
into
fnstcw
lret
mul
fimull
iret
movsl
cmp
sub
js
mov
xchg
fcomps
add
push
jo
rolb
jne
mov
inc
push
cltd
int
add
arpl
in
add
mov
in
sbb
popf
inc
mov
xor
mov
les
test
insb
push
push
adc
pop
fildl
pushf
sbb
arpl
lret
sub
stc
es
and
dec
popf
imul
add
dec
ficoml
mov
nop
mov
jbe
mov
repz
sti
or
sbbl
imul
popl
in
xor
xor
push
es
clc
out
jl
insl
cmp
dec
inc
enter
cmp
push
dec
push
daa
dec
aas
in
lods
rcl
inc
push
xor
lock
push
push
xor
call
call
clc
loope
add
inc
push
push
shll
les
stos
lret
mov
and
movzwl
fucomi
cmc
leave
pop
cs
dec
into
jb
aaa
inc
stos
mov
xlat
mov
es
fimuls
fnsave
mov
adc
xor
clc
stc
fimuls
ljmp
lock
cwtl
enter
ret
arpl
xchg
or
inc
inc
push
rcrl
cli
stos
push
xchg
pop
das
cltd
fcmovne
in
mov
inc
adc
add
lock
mov
sub
sbb
mov
out
nop
push
sbb
add
sbb
mov
andl
and
movsb
add
xchg
adc
xchg
add
push
adcb
inc
push
sti
ret
xor
jnp
lret
dec
mov
and
fnstsw
add
mov
xor
pop
jne
gs
sub
in
mov
xor
and
shlb
cs
xchg
packssdw
push
jae
popf
stos
ds
enter
test
push
aad
clc
add
mov
mov
jmp
cmp
aaa
daa
leave
adc
add
dec
xor
adc
ret
sbb
and
xchg
popa
stc
mov
scas
add
and
ret
mov
or
mov
cltd
pushf
outsl
push
scas
mov
pop
inc
jo
jns
hlt
movsb
fcmovnb
or
dec
std
cld
arpl
pop
fsubs
xchg
or
jae
push
call
arpl
das
dec
addl
jo
ret
fs
movsl
sbb
fbstp
jl
pop
lret
repnz
cmp
idiv
shr
push
mov
adc
sub
jmp
enter
out
cmp
jnp
cmpsb
add
push
pop
cmc
xchg
sub
xchg
dec
jno
or
jb
or
xchg
enter
sub
mov
xorb
out
mov
dec
xchg
or
dec
sbb
push
ss
adc
lret
cmpsb
call
push
in
test
aas
ja
mov
lock
jmp
lcall
jmp
mov
nop
sub
or
inc
push
aaa
jno
xchg
and
mov
addr16
scas
dec
pusha
sbb
xchg
or
cmpsb
movsb
popf
push
pop
adc
sbb
daa
dec
bound
lcall
lock
push
inc
lret
aaa
testl
pop
xchg
pop
mov
push
int3
jp
pop
push
sbb
add
int
inc
out
jb
nop
fnstenv
mov
dec
rolb
xor
sbbb
ret
je
jle
sub
cmpsb
test
cmp
xor
scas
in
sub
inc
mov
sub
sbb
hlt
xlat
and
xchg
mov
lock
mov
pop
pop
shll
out
icebp
sub
int
gs
mov
mov
icebp
mov
push
inc
sbb
pop
fs
mov
cmp
movsl
lds
lea
sbb
inc
test
js
adc
push
jge
add
popf
xchg
mov
jne
mov
lea
sub
jle
xchg
xchg
test
inc
cmp
mov
popf
mov
mov
rcrl
inc
mov
lret
nop
bound
adc
cmp
lcall
push
mov
cmpsl
inc
dec
enter
stc
ja
pop
and
call
rorb
jg
js
lahf
mov
hlt
ss
je
mov
xor
int
dec
loop
and
mov
sub
fnstenv
ljmp
mov
xchg
mov
xchg
insb
loopne
fwait
repz
and
push
neg
or
cmp
fdivrs
jns
mov
pop
cmc
inc
jle
pop
out
loopne
sbb
dec
repnz
mov
add
dec
cmp
aad
pop
insl
sub
adc
pop
mov
aas
add
addr16
jle
add
adc
fbstp
mov
dec
or
sub
lret
cmp
dec
ds
jmp
cmp
rolb
repz
dec
js
or
in
mov
xchg
xchg
xor
mov
adcb
xlat
dec
add
stc
adc
lea
push
mov
out
mov
pop
mov
mov
add
sbb
xchg
in
pop
lcall
inc
frstor
push
fisttps
pop
xor
mov
push
xchg
cmp
jbe
jns
fstpt
sbb
or
add
xor
lret
pushf
mov
jno
hlt
in
repnz
sub
addl
es
cld
int
ss
or
scas
int
pop
rcll
pop
testb
insl
mov
mov
sbb
pop
lods
and
cmp
imul
and
cld
es
pushf
xor
lahf
and
in
adc
xor
jle
jo
and
mov
pop
out
sbb
xchg
ret
xchg
andl
js
insl
mov
adcb
loop
xlat
or
in
adc
mov
insl
sub
into
xchg
push
cld
mov
mov
lea
out
pop
leave
pusha
cwtl
lahf
cli
stc
in
xchg
sbb
xchg
dec
sti
jge
or
stos
mov
pop
or
inc
dec
lret
gs
or
pop
cmpsl
insb
mov
dec
hlt
fsubl
cmc
mov
xor
cmp
fdivs
fnsave
fisubs
cmp
push
cmc
lret
je
filds
xor
lcall
loop
jg
xchg
fsubs
push
test
aaa
sub
jo
cmp
mov
adc
xor
aad
or
inc
arpl
stos
repz
fstp
jae
add
pop
mov
mov
or
push
cmc
push
jb
mov
mov
nop
adc
pop
push
push
push
mov
inc
adc
sbb
das
or
inc
pop
lret
movsl
mov
aam
in
xor
mov
xchg
mov
sbb
jg
out
push
fcmovne
in
xor
orl
and
push
scas
and
push
jle
loopne
xchg
clc
addr16
sahf
jnp
enter
in
push
or
sbb
mov
inc
xchg
dec
jp
cmp
shlb
sbb
sub
fistpll
into
cmp
xchg
out
and
pop
mov
mov
stos
mov
cmp
popa
or
repz
add
sbb
mov
fistpll
jo
ja
or
into
sarb
sahf
inc
cltd
mov
inc
xchg
std
leave
sub
mov
sbb
xchg
orl
sub
aaa
cmc
mov
push
xor
sbb
data16
aad
out
int
gs
nop
sub
push
xchg
mov
cwtl
clc
ds
fwait
jno
pop
mov
xchg
lods
rcll
sbb
ljmp
pop
pop
ljmp
aam
mov
mov
out
xchg
addr16
xchg
fistpl
std
ljmp
adc
addb
xchg
sub
pop
or
arpl
or
cld
shll
idivb
imul
movsl
test
in
inc
mov
ja
mov
mov
pop
enter
fwait
and
mov
mov
push
push
add
mov
in
and
or
ret
mov
sarl
jl
jge
adcb
push
arpl
xlat
insb
push
sub
cs
add
pushf
dec
xor
leave
lods
stos
jg
loop
inc
shll
add
push
or
xchg
sbb
xor
xorb
dec
insl
data16
sti
rcrl
arpl
out
or
loopne
and
push
iret
ds
sbb
jnp
in
lret
bound
outsl
push
and
jl
movb
inc
mul
xor
push
insb
std
lods
xchg
jae
push
sub
push
movsb
add
xchg
rclb
or
mov
test
rol
rolb
stc
sbb
or
cs
mov
cmp
mov
fs
add
adc
dec
int3
inc
push
cmp
js
jmp
lahf
mov
push
fiadds
das
xor
fwait
push
mov
mov
dec
pop
shr
sbb
sbb
imull
jmp
cwtl
cmc
imul
lods
pushf
jne
inc
lret
cmp
cld
fisubrl
cmp
dec
aaa
sahf
sti
mov
push
adc
adc
outsb
cmp
fstl
lahf
data16
xor
adc
xchg
dec
sbb
xchg
push
add
imul
jne
pop
notb
push
sbb
mov
in
aas
pop
sbb
into
test
xor
push
cmpsl
jb
pop
call
push
jl
lcall
mov
adc
sub
jbe
mov
js
into
inc
subl
call
cltd
sub
jb
enter
lock
test
jle
pop
bnd
call
daa
mov
push
lock
sbbb
mov
sahf
and
out
rcrb
mov
mov
pop
shlb
in
fimuls
mov
cmp
jl
inc
movq
lret
scas
dec
testb
loop
and
insb
adc
mov
sbb
js
lea
mov
ljmp
ret
cld
imul
xchg
cli
in
jg
jmp
aad
pop
cmpsb
mov
addl
pop
loop
cwtl
add
cmpsl
sahf
mov
push
ds
sub
mov
push
jecxz
cwtl
ss
call
xor
insb
or
stos
dec
inc
lods
or
xchg
movsl
push
fsubs
jge
into
inc
push
push
gs
jmp
inc
stc
in
in
jmp
adcb
and
push
jae
inc
xchg
mov
scas
stos
cmpsl
mov
popa
xor
ficoms
stos
add
lea
xor
cmp
mov
nop
movsl
shlb
inc
and
ret
insb
pop
sahf
xchg
mov
fists
dec
mov
jecxz
shl
add
adc
cmp
imul
push
int
das
dec
adc
add
sbb
cld
mov
xor
mov
mov
jb
ds
xor
cld
jnp
sub
bswap
dec
ds
cld
outsb
xchg
scas
arpl
and
push
bound
xlat
sub
incl
test
mov
and
cmp
jp
mov
jno
iret
imul
imul
cs
loopne
pop
push
imul
fwait
shlb
xchg
pop
lds
sbb
icebp
cmpsl
enter
aam
xchg
jp
adc
loope
mov
mov
xor
pop
gs
inc
inc
testb
jge
adc
loope
xchg
push
and
jmp
inc
pop
outsl
or
shll
nop
fmul
pop
add
repnz
je
fisubl
pop
pop
and
cmpb
insl
push
fildl
iret
pusha
cli
push
movsl
orb
out
ret
dec
adc
xor
popa
or
sub
jge
inc
test
add
rclb
dec
mov
pop
sub
push
mov
popf
xchg
fwait
sub
adc
xlat
inc
xchg
xchg
inc
addr16
and
pop
mov
hlt
add
scas
imul
mov
inc
repz
div
mov
jae
xchg
xor
xchg
mov
sbb
xchg
shr
pop
outsl
jp
ret
sub
shlb
scas
add
in
in
inc
mov
fildl
pop
imul
mov
lods
js
cli
das
in
aaa
pop
insb
jle
sbb
int3
loopne
dec
adc
sub
enter
push
rcrb
test
xor
cwtl
scas
es
mov
ret
pop
fsubs
out
xlat
lods
test
xlat
mov
mov
inc
mov
int3
cli
inc
int
pop
das
mov
sub
push
cmp
jl
and
shlb
shlb
push
ret
cmpsb
cmc
mov
jecxz
mov
popf
mov
cwtl
mov
ret
sti
ss
pop
xchg
es
adc
jmp
or
scas
cmp
and
cmp
fidivrl
dec
push
leave
imul
push
loop
xor
cmpl
out
mov
fistps
mov
es
lods
inc
cmp
js
jg
repz
inc
ficoml
sub
lahf
inc
pop
sub
xchg
jnp
pop
pop
inc
xchg
inc
fmuls
mov
fbld
cmp
mov
das
inc
push
dec
fisubrs
mov
mov
fcomip
test
pusha
sbb
and
lds
lods
outsb
push
dec
test
insl
test
push
add
jg
push
dec
sbb
ret
add
ljmp
clc
xchg
popw
pop
je
repnz
repnz
mov
mov
psubusw
call
jmp
out
aad
loopne
js
or
sbb
xchg
sar
add
mov
jl
orl
stos
notb
fxch
dec
cmp
mov
adc
push
ss
loopne
in
mov
push
pop
pop
stos
mov
cmp
and
movsl
in
add
stos
lret
ds
adc
cs
es
pop
repnz
addb
add
adc
push
int
ret
sbbl
imul
sahf
add
clc
sahf
leave
xchg
and
xor
inc
lea
mov
dec
cmp
xor
js
insb
xor
shlb
test
mov
data16
sbb
inc
jecxz
pop
leave
xor
mov
push
push
icebp
test
pusha
in
mov
neg
fldl
ret
orl
push
ljmp
xchg
push
cmp
xchg
cmp
loope
adc
dec
mov
cltd
gs
mov
sbb
shlb
lret
pop
inc
jp
xchg
xorl
les
jns
addr16
data16
sbb
fsubrl
gs
sbb
scas
lret
push
je
xorl
pop
sub
je
inc
push
addr16
out
loop
xor
sbb
jecxz
outsb
or
pop
adc
inc
test
sahf
test
push
jno
xor
push
outsb
pop
lcall
inc
xchg
dec
insl
scas
sub
jmp
dec
pusha
adc
aad
cwtl
sahf
xor
clc
int3
enter
xchg
adc
mov
xor
dec
jp
sub
bound
pop
popf
inc
jmp
repnz
sbb
lds
sbb
or
adc
and
cmc
or
push
dec
dec
ss
add
and
jnp
insb
jb
rolb
mov
roll
arpl
mov
hlt
pop
das
cmp
mov
test
mov
add
dec
int
add
xor
mov
dec
cmp
fnstcw
jb
mov
mov
lds
int
mov
pop
enter
jmp
ljmp
jnp
andl
add
jle
push
jecxz
push
pop
ja
inc
shll
dec
mov
adc
cs
and
popa
dec
jae
inc
aad
stos
xor
lahf
jae
rep
push
mov
mov
xor
adc
out
cmp
sub
xchg
outsb
inc
popf
dec
cmp
lods
aaa
xchg
fisubrl
pop
das
dec
cmpsl
lret
lret
stc
subl
jmp
lahf
mov
test
test
scas
repz
test
jnp
xchg
pop
mov
push
cli
gs
sbb
std
lds
gs
pusha
jo
and
and
sbb
and
out
adc
subl
insl
adc
and
das
mov
sub
adc
clc
or
insl
inc
pop
jae
dec
pushf
sbb
adc
jg
jecxz
pop
mov
jmp
iret
cs
mov
jnp
cltd
mov
fisubs
out
jg
mov
add
in
aas
inc
xor
fidivrl
mov
fdivp
and
jne
or
mov
and
arpl
mov
movl
push
dec
lds
repnz
mov
mov
xor
sbb
out
fdivrl
rcr
int3
mov
lcall
jle
or
mov
cmp
in
push
mov
and
test
iret
fwait
inc
arpl
arpl
fbstp
je
or
or
sub
and
jp
div
xchg
fdivrp
add
xchg
leave
movsl
movsl
hlt
cmp
sbb
mov
mov
lods
adc
or
mov
mov
push
shl
inc
in
les
imulb
pop
or
pop
insb
lock
in
repnz
cmc
cltd
les
shrl
test
test
into
inc
mov
std
scas
xchg
shrb
pop
jns
push
pushf
dec
popa
cmc
fiadds
lds
popa
pop
sti
ret
xchg
arpl
movsb
mov
movsl
cld
pop
iret
dec
or
add
push
jmp
push
sub
mov
jle
sbb
mov
and
test
test
data16
and
mov
cltd
fisubl
push
out
pop
or
inc
out
cwtl
mov
cli
add
jg
xchg
cwtl
imul
jle
out
sahf
les
insb
xor
inc
andl
mov
lahf
inc
ret
xchg
sahf
mov
mov
or
dec
sti
xchg
mov
in
cmp
lods
add
cmp
xchg
lret
enter
iret
icebp
test
addr16
jmp
xor
loopne
dec
push
xor
rcr
clc
out
sub
ljmp
stc
mov
cmp
idivl
stos
in
dec
fsubs
scas
movl
addb
cmp
aad
cs
push
test
xchg
decl
or
mov
repnz
clc
inc
ret
pop
movsb
enter
jmp
dec
cld
cmp
ds
ss
imul
push
inc
insb
les
fcos
mov
nop
mov
dec
push
test
pop
dec
push
xchg
mov
out
pop
mov
fmulp
data16
scas
rcrl
jmp
inc
adc
xchg
cmpsl
test
mov
cltd
aas
sub
cwtl
movsl
push
pop
jp
fisttpll
adc
in
push
xchg
or
add
xchg
and
jge
add
inc
xchg
scas
pop
mov
test
jecxz
mov
test
mov
or
les
shll
sub
pop
into
pushf
mov
mov
sub
rorl
in
sub
dec
pop
inc
sbb
inc
test
test
shrl
sbb
les
in
ret
inc
xchg
mov
push
or
movsl
xlat
jae
adc
mov
lea
pop
insb
stos
test
mov
neg
cmp
das
shrl
iret
cmp
xor
pop
inc
pop
inc
adc
or
mov
int
sbb
and
xlat
sti
sbb
fisubrl
cwtl
lock
leave
ret
into
mov
add
mov
cld
addl
mov
mov
fisttpl
push
lods
lea
popa
sbb
add
call
fwait
lds
add
xchg
mov
lds
pop
rorb
enter
das
push
adc
loopne
arpl
das
jo
popa
push
incb
leave
call
sbb
jp
cmp
repnz
lock
jo
hlt
pop
adc
stos
dec
leave
popf
in
mov
sub
loop
sbb
fsubrl
outsb
xor
adc
push
popfw
loop
cmp
adc
dec
dec
inc
add
je
dec
xor
cmp
popa
fistpl
test
loop
jnp
inc
adc
int
add
into
xchg
mov
pop
inc
push
out
aam
out
xor
sub
inc
lds
lods
rcrb
repz
jb
mov
sub
jl
ret
nop
rol
iret
and
mov
je
xchg
push
mov
in
in
jno
mov
stc
cmp
movl
pushf
pop
nop
push
cmc
je
pop
mov
or
mov
and
jne
orl
mov
or
mov
lret
inc
pop
dec
aas
arpl
mov
rorl
mov
or
sbb
push
mov
out
movsl
pop
cmpsb
mov
and
cmp
xor
fsubrs
sub
mov
mov
subb
xlat
rep
sub
jb
shr
lcall
sub
repnz
into
xor
sbb
jg
das
loopne
dec
sub
and
inc
cmpsl
out
iret
add
test
stos
movsb
cli
lret
daa
xchg
cmp
and
popf
ljmp
repz
push
mov
fsub
mov
fwait
and
movsl
xorl
add
add
and
rcrl
addl
inc
fs
xor
sub
cmpsl
and
loope
pop
cmpsb
pop
xchg
dec
sti
sarb
adc
dec
or
cld
mov
xchg
dec
and
in
jg
data16
fimuls
dec
mov
cmp
push
std
jmp
push
leave
mov
cmpsl
pop
jmp
repz
in
add
test
mov
cmpsb
loopne
dec
sub
push
outsl
mov
adc
std
adc
pop
adc
inc
push
cmp
push
sbb
call
inc
cmp
and
dec
dec
or
adc
sbb
arpl
sbb
outsb
daa
pop
and
mov
mov
mov
mov
andb
mov
mov
dec
xchg
lret
adc
sbb
out
test
aad
adc
pop
pop
and
ret
pop
jno
bswap
lods
jge
pop
lahf
lret
jne
cmp
push
cmp
orb
popa
jno
fdiv
mov
sti
push
push
mov
sbb
addr16
inc
inc
mov
test
cmpsl
imul
fcoml
je
jecxz
scas
xchg
sahf
dec
jecxz
add
ret
rcl
rol
dec
sub
sbb
jecxz
aad
dec
lcall
in
add
fs
xchg
push
and
xchg
jo
sbb
js
mov
jo
int3
loopne
lret
dec
jp
pusha
lods
test
enter
lahf
lret
xchg
mov
pop
in
xchg
or
movsl
jb
gs
jns
sbb
stc
les
popf
mov
cli
and
jg
ss
inc
je
je
cmp
sub
jp
adc
mov
jbe
jmp
mov
mov
les
sarl
sbb
or
outsb
mov
call
adc
insl
ja
xor
lahf
cmp
rcrl
aam
stos
xor
hlt
sub
cmp
push
loopne
shll
gs
scas
dec
inc
adc
dec
jp
pop
push
mov
ret
dec
jecxz
sbb
rcrl
dec
pop
sahf
jl
and
jge
xlat
cltd
inc
fimull
push
inc
jle
popa
pop
mov
cmp
pop
pop
sub
insl
femms
or
pop
fildl
fiadds
popa
mov
cmp
fcompl
rcl
pop
mov
inc
mov
add
pop
cli
les
sbb
mov
aas
ret
sarl
sbb
imul
push
mov
jb
pop
fs
int
xchg
mov
movsb
add
sub
inc
shll
imul
clc
cltd
sbb
loopne
inc
mull
aaa
jne
adc
movb
jmp
dec
pop
push
add
adc
add
or
push
xor
pop
or
je
cmpsl
loope
das
test
and
cmpsb
testl
xchg
shl
push
add
xor
loopne
xchg
ds
jno
ds
ja
add
fildl
loopne
mov
or
and
lea
mov
rol
and
test
cli
jno
push
pop
or
jmp
and
jl
rcrl
data16
ljmp
aad
addr16
js
test
daa
movq
clc
sarl
test
jns
jo
mov
call
pop
das
pop
mov
test
xchg
orb
jbe
fs
sarl
fs
jnp
xchg
das
pop
push
xchg
test
lret
sbb
mov
testl
sbbb
inc
dec
inc
and
lcall
push
xor
dec
sub
aad
add
and
lods
in
shrl
xlat
ret
and
rcrl
sbb
add
cmp
xchg
sub
ja
test
jp,pn
dec
add
nop
mov
cwtl
xchg
rol
inc
fbstp
jp
xchg
outsl
cmp
pop
iret
aaa
out
cwtl
mov
add
jmp
mov
fs
lods
xchg
inc
pusha
dec
out
hlt
scas
push
dec
ficompl
xor
and
movsl
jo
pop
mov
mov
fistpl
cmp
arpl
mov
ret
inc
mov
pop
int3
push
xchg
fdivrp
filds
dec
out
cmp
sti
mov
test
loope
js
jbe
std
test
cli
lret
sub
nop
push
mov
mov
mov
sbb
or
or
repnz
ss
insb
pop
adc
mov
popf
sbb
push
and
mov
lret
sahf
mov
out
cld
int
push
mov
jae
test
inc
xlat
jp
xlat
inc
mov
push
dec
fwait
push
repnz
sbb
std
fildl
lcall
mov
mov
repnz
popa
jnp
arpl
and
jl
pop
femms
rclb
ret
fwait
or
or
push
sar
in
pop
mov
pop
adcl
pop
cwtl
jmp
adc
and
inc
loopne
push
addl
or
mov
xchg
movsb
xor
xorl
cli
inc
ret
xchg
aad
push
and
icebp
outsb
xor
mov
jl
jmp
ljmp
lds
xchg
iret
stos
and
sahf
addr16
out
jecxz
pop
inc
mov
pusha
inc
into
hlt
jecxz
cmpsb
js
jmp
push
and
add
cmpsl
push
mov
xor
jb
mov
sti
jg
pop
mov
push
mov
push
aam
pop
xlat
fnstenv
sti
gs
jecxz
scas
fldl
js
xor
pop
mov
imul
mov
push
xchg
push
pop
inc
sbb
stos
and
add
jo
sbb
jb
and
adc
std
data16
es
inc
push
inc
pop
jecxz
pop
clc
push
shlb
xchg
fimull
jo
in
jmp
shrb
scas
jle
js
adc
xchg
cmp
xchg
sbb
imul
jne
push
sbb
sbb
adc
je,pn
or
lods
jl
xor
sub
xchg
sub
data16
jmp
lcall
rolb
stos
les
cmp
mov
pop
pushf
and
fs
mov
stc
mov
repnz
notb
fwait
adc
cmpsl
mov
cmp
jp
or
adc
es
movsb
cmp
je
sub
mov
sub
mov
cli
mov
sub
pop
call
dec
mov
push
cmpsb
xchg
push
adc
inc
dec
inc
adc
sub
pop
and
pop
inc
fdivp
add
sbb
pop
out
hlt
xchg
xlat
daa
fisubrs
imul
outsl
dec
mov
mov
push
ret
mov
xor
pop
dec
sti
mov
sub
mov
lret
mov
mov
pop
lea
negl
cmp
ss
jp
xlat
sbb
xor
and
push
outsl
pop
or
lods
cmp
push
adc
cmp
daa
fistpll
mov
cwtl
dec
test
dec
and
les
mov
repz
dec
scas
jb
sti
cmp
xchg
sub
mov
cmp
incl
repz
aad
mov
jg
fidivrl
insl
pop
cmpsl
bound
ficomps
xchg
lret
sbb
in
das
push
jp
and
mov
and
fldcw
add
rclb
sarl
mov
in
rorb
lcall
push
sbb
mov
cmp
lcall
lods
adc
jbe
cli
neg
je
xchg
ret
in
and
rcrl
xchg
mov
out
lret
adc
mov
and
fld
dec
mov
movsl
jne
xchg
inc
fdivs
and
cmpsl
xchg
xor
pop
mov
cwtl
stos
add
cmovl
mov
std
jno
js
push
fcmovnb
faddl
adc
orl
jecxz
jl
sbb
cld
mov
add
mov
cmpb
adc
stc
jle
bound
ficompl
insb
or
aaa
or
jg
fcoml
test
push
add
loop
cmpsb
mov
out
sbb
pop
movsl
scas
inc
mov
shrl
push
pop
and
sar
subb
add
sub
xor
test
jmp
ljmp
adc
pop
mov
adc
in
cmp
fistpll
jg
les
pop
mov
lret
movsb
pop
sbb
popf
xor
ds
push
lcall
out
sbb
xor
js
xchg
dec
cs
mov
insl
and
push
dec
repnz
push
and
sahf
out
adc
jl
int
sar
xor
loopne
outsb
imul
mov
mov
mov
lret
xchg
fisubrs
fistl
lods
int
xor
sub
fimull
mov
repz
imul
cltd
enter
push
scas
jns
ds
mov
cli
mov
insb
fidivrl
cmp
push
repz
mov
push
inc
push
pop
enter
mov
jge
lods
test
cmp
dec
je
popf
dec
movsl
jne
scas
lds
push
out
push
push
jbe
popf
pusha
rorl
add
or
jne
dec
jae
out
sbb
mov
mov
xchg
insb
adc
sbb
add
rol
mov
fwait
cltd
or
stos
sti
aam
shrl
sbb
sub
test
cltd
mov
adc
sub
in
push
jne
add
out
xchg
std
xor
push
inc
iret
cmp
loopne
dec
lcall
ret
add
sti
test
push
insb
addr16
cmpsb
mov
leave
inc
xchg
and
mov
xor
dec
or
sub
push
pop
sub
cmp
mov
or
lea
sbb
out
push
jnp
cmovno
add
stos
cmpsb
scas
mov
and
mov
sub
mov
int3
mov
xor
aad
jae
jae
sub
loop
mov
hlt
out
out
or
aas
sub
xchg
push
mov
stos
pop
mov
jmp
mov
push
push
int
add
dec
dec
stos
loopne
adc
dec
fcmovb
or
jns
sub
mov
jne
aaa
and
pop
cmp
out
fimuls
jae
loope
mull
cmp
mov
iret
dec
jp
and
xor
or
cmp
stos
pop
ret
mov
add
cs
mov
scas
jae
or
call
adc
insl
dec
sbb
adc
jg
or
adc
cmp
xchg
sahf
mov
ret
jge
mov
dec
pop
pop
fstl
and
xlat
mov
xor
xchg
movsb
dec
xchg
rcrl
cmp
std
inc
ret
jl
mov
fwait
sub
sub
push
push
xlat
adc
cmp
push
inc
push
ds
movsl
jl
push
lea
jp
sub
outsl
and
jns
movsl
test
or
mov
les
lcall
inc
cmp
lret
out
pop
add
mov
push
js
mov
into
fistpll
ss
mov
or
jecxz
mov
adc
clc
lret
inc
cmpsb
xchg
xchg
push
pop
hlt
sar
subl
inc
mov
add
stc
add
popa
xchg
imul
xor
daa
std
pop
jb
xchg
jle
fadds
sbbl
jae
mov
pop
pop
mov
adc
and
add
call
mov
or
in
xor
nop
insb
inc
xor
dec
pop
jns
mov
adc
addb
adc
pop
cld
testb
jb
das
adc
sub
fcoms
and
mov
shlb
adc
mull
pop
sahf
mov
rorl
loop
add
add
xchg
fcmovu
inc
add
andb
imul
pop
enter
in
lea
popw
add
out
jge
push
add
aas
test
loope
in
sub
jno
pop
mov
xorb
pop
adc
jnp
sub
shll
sbb
insl
push
sar
in
sub
out
xchg
outsb
pop
xor
nop
dec
mov
dec
test
paddb
push
add
mov
inc
scas
out
call
dec
sbb
fs
stc
lds
into
repnz
shlb
dec
inc
push
push
mov
xorl
xchg
jmp
push
xchg
outsb
insl
dec
rcrl
and
jne
leave
cwtl
push
insl
pusha
cmp
popf
loop
mov
hlt
aas
cmp
test
cwtl
pop
shr
ror
jmp
std
int
xlat
add
pop
jno
mov
mov
loop
pop
adc
test
repnz
imul
imul
inc
fcomps
les
gs
mov
dec
mov
shl
loopne
cwtl
mov
adc
insl
push
jnp
popa
cli
adc
enter
xchg
pop
addr16
xor
add
mov
imul
cltd
ret
inc
aas
lds
mov
mov
and
insb
xchg
sti
push
sbb
and
mov
push
das
out
mov
push
jle
push
jno
fistpl
fs
lods
out
xor
add
mov
inc
jb
aam
adc
mov
fbstp
push
xor
fldenv
push
sub
jecxz
push
je
jae
xchg
push
in
push
jae
mov
scas
cmpsl
add
jp
das
inc
sahf
daa
imul
pop
shrb
xor
xchg
rolb
jnp
addr16
dec
std
mov
imul
das
lock
mov
lea
lcall
sbb
xchg
add
xchg
inc
mov
push
pop
sbb
insb
icebp
jno
push
pusha
and
push
xchg
xchg
adc
mov
cmp
push
sub
ret
pop
jmp
je
pop
push
data16
call
cmpsb
pop
mov
mov
andb
fs
das
push
dec
pop
int
fisubrl
rorl
daa
and
shl
lods
dec
sub
dec
or
les
in
stos
clc
test
sub
or
daa
int3
daa
mov
fwait
lock
xchg
pushf
ret
xchg
mov
subl
gs
xchg
sbb
mov
roll
je
adc
cmp
push
mov
fisttps
lods
or
ficoms
inc
xorl
gs
icebp
sub
pop
aaa
pop
enter
lea
imul
or
jp
jg
push
lea
das
lods
js
pop
lret
loope
push
xchg
xchg
mov
push
cmp
movsl
pop
mov
mov
jno
jmp
lds
jge
adc
jne
mov
cld
aad
and
push
add
iret
xchg
mov
dec
or
pop
je
and
cli
ljmp
or
and
mov
bnd
dec
mov
xor
punpcklbw
aam
pop
mov
push
cwtl
enter
jge
gs
das
loopne
xchg
les
lret
aaa
sub
mov
mov
jp
dec
add
fcmovnb
jecxz
xor
cmp
mov
adc
std
ljmp
dec
rdmsr
xor
arpl
pop
pushf
push
xor
popf
and
dec
ret
sbb
xchg
inc
lahf
inc
ljmp
push
lods
mov
jl
mov
scas
aad
cltd
insl
sbb
outsl
mov
xchg
push
fadds
sti
mov
add
push
mov
outsb
push
sbb
mov
dec
ret
jne
in
mov
pop
dec
sbb
out
sarl
test
fcmovbe
insl
test
cmp
cmp
lret
repz
mov
push
xor
xchg
shr
jl
movsb
sti
fcmovu
add
mov
nop
push
jmp
xchg
ljmp
ret
stos
ss
mov
xor
aam
aas
xor
dec
and
inc
inc
das
and
or
cwtl
dec
loopne
xchg
sti
aam
sbb
lods
in
dec
adcb
mov
xor
pop
jmp
add
xchg
das
cltd
outsb
sub
jo
in
ja
push
dec
sarb
movsl
mov
ret
in
xchg
xor
jo
clc
movsb
mov
cmpsl
xchg
mov
xlat
cmp
fs
outsb
lret
pop
fsubs
sbb
cmpsb
out
dec
sub
shrb
cmp
pop
inc
rcrb
clts
jb
subb
daa
pop
mov
lods
jge
xor
mov
loope
mov
pusha
in
inc
in
dec
pop
adc
jo
sub
bound
push
leave
sub
and
sub
xchg
fmuls
je
movsb
jecxz
xchg
cmpsl
dec
sub
call
xchg
into
sarb
mov
inc
jl
xchg
mov
ss
les
mov
pop
or
lahf
in
mov
xchg
mov
inc
xor
cmp
stc
fnstenv
push
xchg
push
dec
adc
rclb
test
cld
inc
nop
dec
mov
mov
pushf
sub
or
aad
adc
pushf
or
pop
in
aas
dec
dec
xchg
in
stc
push
dec
dec
xchg
das
push
mov
sarl
and
filds
jb
dec
in
add
fisubrs
mov
cwtl
dec
and
push
dec
ss
stos
cmpsb
pop
pop
stc
sub
sub
ljmp
lods
cmp
push
mov
rolb
sbb
mov
popa
push
std
dec
dec
dec
cs
bound
sbb
into
inc
mov
cmp
jae
pop
shl
rcll
call
ss
mov
cmpb
aaa
iret
and
pusha
jl
iret
popf
pop
pop
fdivs
inc
xlat
cmp
jmp
and
addr16
inc
jge
cmp
das
ja
insl
pop
xor
jmp
out
cmpsl
leave
sarb
aaa
jge
or
insb
mov
scas
call
pop
bound
push
jle
mov
nop
leave
pop
jbe
daa
out
lahf
dec
pop
jmp
ret
push
cmc
outsl
in
into
fiaddl
ret
sbb
or
jo
lock
mov
adc
hlt
and
ds
pop
sub
push
out
pop
out
daa
out
jb
dec
out
mov
movsb
push
mov
out
inc
ds
push
fdivp
xchg
and
sbb
mov
repnz
add
or
sbb
clc
aaa
out
push
jecxz
fisttpll
jno
xchg
loopne
push
inc
je
aam
cmp
test
loopne
sub
pop
rorb
mov
jne
std
mov
std
adc
outsb
pop
shll
into
enter
jge
pop
dec
xor
mov
mov
cs
ret
lahf
cli
mov
pop
gs
out
xchg
xchg
out
les
int
hlt
jne
cmpb
in
outsl
dec
adc
mov
mov
out
mov
nop
cmp
dec
sbb
mov
lds
and
mov
jecxz
insb
pop
cmp
and
out
push
fisttps
sbb
ret
lods
fdivp
xchg
pop
call
sbb
fwait
push
lea
bsr
mov
test
jmp
mov
cmp
jp
sbb
out
sub
mov
out
push
jmp
mov
cmp
jne
gs
mov
aaa
xchg
leave
ljmp
cmp
out
aad
jp
or
faddl
adc
jmp
jbe
cmp
push
pop
movsb
mov
or
aaa
into
dec
fidivl
out
movsb
xchg
push
cmp
push
inc
out
insl
out
mov
dec
sbb
xchg
sub
in
fs
loopne
xor
outsb
dec
es
lret
xchg
push
jg
shll
xchg
pop
push
push
and
ret
cmp
out
lods
cwtl
push
xlat
repnz
fisubrs
jg
add
pop
loope
mov
call
das
test
xchg
or
push
mov
lahf
cwtl
das
sti
cmpsl
sub
xchg
into
shlb
adc
add
scas
cltd
mov
push
dec
fdivs
or
sub
inc
jl
push
xchg
fldt
es
push
mov
push
mov
mov
fsubrs
and
out
push
cmp
es
mov
out
sarb
std
aas
and
lret
addr16
cmc
mov
pop
icebp
cltd
imul
sub
lret
test
jg
mov
ffreep
mov
fdivrs
test
and
add
aad
loopne
notl
fadd
add
stc
cltd
aaa
sbb
cmp
fmul
fcoms
push
scas
nop
es
push
lods
mov
test
or
pusha
pop
mov
mov
scas
add
bound
and
outsl
js
add
xchg
dec
sbb
mov
fcmovb
mov
ret
sbb
sbb
xchg
jb
shll
mov
mov
stc
aas
jo
std
sahf
fadd
lcall
in
mov
mov
outsl
decl
inc
hlt
sahf
popa
imul
xor
data16
leave
push
mov
add
adc
icebp
in
jo
push
lods
pop
push
adc
ficoms
jae
or
push
mov
jo
or
inc
push
mov
nop
imul
jg
scas
fwait
lahf
push
lcall
roll
push
decb
cmc
dec
subl
dec
cltd
sbb
push
xor
loope
mov
xchg
jo
add
ficomps
add
adc
xchg
aaa
shl
mov
or
popa
mov
adc
sarb
dec
push
push
jno
and
loopne
and
out
mov
mov
xor
dec
es
push
aam
sub
std
fisubrl
out
mov
cmpsb
mov
push
adc
test
iret
lds
sub
test
cmpsl
fstpl
int3
ficomps
adc
cs
testl
xchg
lret
push
add
and
cld
inc
pop
push
adcb
mov
adc
xor
push
mov
iret
pushf
fs
lret
cmp
add
jecxz
adcb
gs
cs
rcrb
into
dec
cltd
cmp
fstpt
testb
xchg
into
sahf
and
sbb
shll
push
jl
mov
sub
push
enter
add
dec
maxps
mov
or
add
stc
or
fdivs
sti
addr16
mov
rclb
pop
xchg
enter
push
in
mov
sti
cmc
sbb
add
and
and
push
cmp
push
int3
testb
and
inc
enter
sub
test
je
cmp
jno
es
jbe
xchg
cmp
pop
popf
adc
js
ror
add
js
fwait
inc
cmp
faddl
push
aaa
jp
mov
lods
mov
sub
out
inc
hlt
lret
push
icebp
xchg
test
jb
push
xor
jo
add
ret
popa
add
push
push
and
addr16
negb
test
lret
inc
push
sbb
cmc
imul
mov
nop
scas
lahf
pop
test
out
mov
arpl
in
aas
mov
add
rcr
sub
xchg
fstpl
jae
leave
jecxz
lahf
aad
jmp
insl
ss
out
xor
mov
add
in
sub
ds
clc
popa
lcall
push
dec
xchg
cmpsb
mov
sub
add
sub
sub
sub
sbb
cmp
cmp
imul
xchg
pop
sti
lcall
in
or
xchg
movsl
sbb
es
jmp
and
mov
loop
test
lock
rcrl
xchg
sub
xor
lret
xchg
adc
in
push
sti
fbld
and
adc
xor
aad
mov
and
or
icebp
dec
xor
out
xlat
mov
jecxz
mov
mov
xchg
hlt
pop
outsb
adc
pop
pop
mov
cld
or
push
pop
xchg
mov
add
and
add
pop
cmp
cmp
push
out
mov
popa
pop
repnz
dec
add
inc
lds
out
js
dec
ret
mov
je
jb
mov
mov
mov
adc
sub
fwait
add
pop
mov
fs
adc
add
subb
cmpl
scas
je
add
subl
pop
fnstcw
adc
or
cmpsb
or
adc
sbb
outsb
dec
insl
xchg
dec
testb
add
mov
dec
sub
sub
inc
jb
sbb
cmpsl
fmulp
gs
cmc
mov
fbld
mov
push
dec
xor
xorl
out
cmp
pop
jge
inc
ficoml
inc
mov
pop
jecxz
in
adc
push
mov
xchg
push
lret
xlat
push
lcall
test
subl
mov
enter
repz
clc
mov
jne
cltd
push
icebp
xchg
decl
sbb
xchg
dec
movsb
or
xor
cmp
iret
or
xchg
xchg
mov
sbb
into
pop
ja
adc
push
mov
pop
gs
dec
lret
outsb
cmc
loopne
and
icebp
mov
ja
scas
out
fdiv
xchg
cli
std
out
jns
out
lret
mov
pusha
test
call
jg
mov
or
sbb
int
shl
fidivs
test
push
adc
fcomps
xor
repz
sub
in
flds
jge
movsb
push
insl
add
pop
fildll
pop
fs
mov
add
cmpsb
outsb
mov
mov
dec
mov
cmp
scas
enter
in
ds
jl
cmp
cld
push
fldt
cmp
scas
in
lea
lods
imul
xchg
test
ret
push
xlat
scas
inc
repz
aam
addb
xlat
cmp
stos
or
dec
xor
jg
dec
mov
push
sbb
dec
mov
and
hlt
lcall
push
or
scas
loop
lret
mov
in
jns
sbb
clc
lods
xor
or
lahf
or
les
and
mov
pop
or
pop
shl
jne
sbb
and
aaa
mul
dec
lea
int3
es
push
insb
dec
or
ret
inc
out
mov
adc
aam
lock
cmp
inc
inc
jle
dec
dec
sub
cwtl
adc
and
pop
cpuid
jge
sbb
fdivrl
sub
inc
sahf
cmp
idivl
lock
or
inc
test
xchg
fwait
mov
dec
pop
pop
add
out
add
pushf
jno
out
jecxz
push
rol
xor
adc
cli
add
sub
rclb
clc
pop
mov
ficoml
add
repnz
jecxz
stc
push
ja
cli
in
in
adc
xor
push
stos
mulb
jb
fdivrs
push
scas
lret
cmp
lahf
pop
or
mov
jle
dec
jg
mov
fistpll
xchg
test
call
jns
xlat
movsl
mov
mov
or
faddp
add
mov
cmp
popa
cmp
int3
inc
push
out
das
icebp
aas
stos
mov
jmp
arpl
daa
lahf
movsl
add
mov
add
fsubrs
leave
mov
mov
or
cmp
stos
add
and
or
sbb
sbb
fwait
add
pop
in
aas
int3
stc
mov
bound
jno
mov
out
insb
jecxz
mov
mull
push
pop
xchg
pop
mov
lods
xor
les
test
cld
imul
dec
rcl
xor
cwtl
xchg
mov
into
dec
ljmp
mov
jo
sbb
xchg
and
xchg
pop
aaa
pusha
scas
jmp
in
fwait
nop
js
mov
and
cli
xchg
loop
push
pop
mov
addr16
push
std
aaa
in
fldcw
stc
call
jmp
adc
lret
pop
sub
jne
in
push
fsts
ret
das
fsubrl
in
xorb
mov
dec
fnstcw
cmp
cs
mov
fidivrs
imul
rorl
mov
mov
push
sbb
inc
sub
push
xchg
cmp
out
sar
mov
mov
pop
mov
jg
xchg
out
dec
cmp
in
mov
sub
lret
test
dec
push
out
adc
fisubl
outsl
xchg
push
mov
jb
xchg
or
subb
imul
pop
add
or
dec
mov
and
nop
dec
jnp
nop
xchg
sbb
fstl
ror
add
push
mov
mov
mov
and
add
cmp
sbb
mov
call
push
lds
mov
lea
outsb
aaa
jne
lret
mov
sub
xor
adc
pop
int3
jmp
addr16
push
pop
add
lret
cmpsl
xchg
sbb
dec
inc
popa
outsb
ds
xchg
mov
dec
xchg
inc
cmc
pushf
lret
sbb
xchg
cmp
mov
xor
mov
and
lds
dec
mov
push
addb
cmpsl
pop
jne
adc
inc
and
xchg
cld
and
inc
repz
pop
pusha
in
sbb
fcoms
gs
push
jle
sbb
adc
sbb
adcl
cmp
or
dec
iret
push
aaa
push
dec
inc
xor
jg
sahf
ss
or
mov
pop
adc
mov
and
mov
shr
cmpsl
dec
lret
jo
sub
xorl
shll
push
mov
mov
inc
outsl
lods
test
pop
shrl
jne
jl
xchg
jns
stc
fldcw
inc
sbb
rol
inc
mov
xchg
imull
js
push
xor
js
jl
lahf
lret
outsb
and
mov
jno
mov
rcll
cwtl
mov
sbb
sub
jecxz
repnz
sbb
stos
cmp
and
sahf
push
pop
aas
xlat
call
cwtl
cmpsl
mov
outsl
cwtl
xor
sub
js
ret
jno
or
icebp
push
mov
and
jae
insl
push
enter
jmp
aam
mov
and
inc
push
ss
dec
mov
inc
push
test
push
pusha
or
lahf
rcrl
push
mov
xchg
in
scas
add
pop
add
inc
push
aad
dec
in
stc
fldcw
ja
cld
pusha
jmp
and
mov
ficompl
in
mov
cltd
in
lock
mov
insb
mov
sti
pop
jae
sbb
sub
jmp
push
lret
jno
es
xchg
repz
jno,pt
add
es
push
hlt
sarb
mov
xor
and
push
cmp
cmpsl
and
scas
xor
pop
pop
or
adc
mov
loop
or
add
daa
addr16
mov
sub
imul
fwait
push
hlt
sub
ret
mov
or
pop
cwtl
bswap
push
adc
pusha
or
sbb
xorb
xchg
xchg
jo
xor
lock
inc
js
insb
push
daa
push
inc
scas
test
push
negb
mov
lahf
sahf
js
lea
loop
aam
and
cltd
test
pop
stos
lds
or
or
lods
cwtl
rolb
or
pop
jns
test
data16
or
adc
inc
xorl
enter
xor
jle
inc
dec
xchg
mov
lds
jg
mov
out
sub
out
roll
pop
popf
fmul
add
movsl
stos
movsb
cltd
fsts
mov
mov
mov
out
ds
or
cmp
sub
fiaddl
lods
aad
pop
outsb
cmp
push
inc
xchg
dec
mov
mov
clc
pop
clc
subl
dec
and
mov
cmp
ret
inc
dec
push
repz
cld
cmp
insb
insb
or
fimuls
adc
mov
or
jno
out
lods
data16
aas
iret
cwtl
outsb
push
lret
mov
xor
xchg
push
hlt
xchg
sub
out
mov
nop
loopne
das
sti
mov
cmc
cmp
fdivrs
pop
and
pop
and
and
mov
cmpb
repz
cmpsb
or
mov
mov
dec
fildl
adcb
or
mov
js
call
dec
mov
faddl
hlt
jae
mov
dec
cmp
sti
repnz
adc
xchg
cmp
and
cmp
fwait
rcrb
fisttpll
scas
cld
aas
out
pushf
insl
sub
addb
shrl
inc
push
mov
jo
imul
das
cmp
cmp
ret
xor
bound
outsb
sar
xchg
lods
jle
mov
push
jb
dec
lds
out
cltd
jb
sub
shlb
pop
in
and
or
sbb
jnp
rcrb
and
jnp
xchg
sub
sbb
or
add
jns
push
lret
int3
xlat
sub
jge
mov
je
xor
movsl
mov
dec
push
lcall
enter
mov
sti
nop
div
jne
mov
sub
icebp
loopne
sbb
movsl
mov
jg
sub
imul
jg
icebp
int3
xor
pop
in
scas
repz
aad
or
sub
insl
sub
repz
addr16
mov
mov
rcrl
mov
jge
adc
push
inc
rcll
pop
aam
pop
mov
xor
ljmp
mov
xor
jo
push
dec
faddl
or
add
inc
out
aad
xor
lock
out
sbb
popa
or
push
dec
sbb
ja
fidivrl
xchg
outsl
mov
inc
add
inc
jge
fs
push
inc
xor
pop
push
in
loopne
addr16
cmp
test
les
push
scas
inc
lea
jp
aad
cmp
testb
push
lods
sbb
mov
popf
or
pop
sub
mov
incl
mov
lods
push
sti
in
xor
dec
popf
or
mov
adc
in
faddl
fnstcw
jns
outsl
fnstcw
mov
mov
xchg
aad
in
xor
aam
andl
sahf
mov
pop
pop
fwait
cmc
lods
and
xchg
fcmovnu
push
in
dec
into
xchg
stc
mov
push
loop
arpl
daa
test
xor
jg
cltd
xor
cwtl
dec
hlt
xchg
mov
push
jl
out
add
pop
xor
rolb
sub
inc
lods
outsb
aaa
and
ret
and
mov
mov
jne
add
je
xor
ret
cli
and
test
mov
outsb
movsl
cmpb
jge
sbb
add
sub
and
adc
fstpt
sbb
stos
jno
inc
or
clc
dec
daa
jg
into
push
adc
pusha
bnd
in
push
dec
mov
data16
nop
and
mov
xchg
sbb
andl
cli
xchg
fistl
in
push
cmp
push
stos
out
mov
aad
int3
in
add
sub
xchg
push
int3
mov
mov
loopne
test
or
pop
jnp
mov
shlb
stos
pop
ljmp
dec
imulb
xchg
xchg
pop
lods
gs
sbb
pop
inc
lds
adc
daa
nop
call
fcoml
sbb
jb
mov
in
cmc
lcall
xor
aam
fbld
mov
mov
cmp
test
pop
popa
push
scas
sub
pop
xlat
dec
adc
dec
in
insb
xchg
inc
idivb
jmp
pop
pop
lods
push
pop
jbe
push
iret
pop
push
adc
push
jle
fnstsw
mov
jno
pop
std
sbb
adc
mov
popf
lods
or
pop
mov
push
add
pusha
xchg
push
arpl
pop
add
lods
test
mov
outsb
lret
sbb
pop
xchg
or
pop
jns
push
jno
inc
out
incb
ret
cmp
imul
bound
popa
xor
pop
test
pusha
loop,pt
shrl
xchg
sbb
jle
mov
pop
shll
jne
rolb
pop
lds
int3
lods
ficompl
sbb
inc
scas
pop
jb
push
adc
sbb
push
jp
loopne
dec
cmp
or
fimuls
xchg
mov
rclb
mov
testl
push
mov
push
xlat
int
inc
inc
pop
inc
inc
cwtl
outsb
filds
mov
fadd
mov
dec
popl
iret
frstor
push
mov
bound
outsb
and
fists
das
mov
lcall
jp
std
mov
repz
js
mov
idivb
sub
sahf
clc
mov
mov
add
sbb
xlat
out
mov
lods
hlt
sarl
xlat
rcrl
add
dec
fwait
sbb
sbb
lret
imul
xor
pushl
pop
ror
dec
iret
out
mov
add
aas
add
push
shl
push
test
bound
pop
or
shlb
mov
fdiv
push
nop
shlb
mov
sub
add
cmovno
sbb
or
adc
jmp
sbbl
push
enter
sbb
mov
cmovbe
cli
push
lods
lahf
add
mov
cmp
out
test
dec
loope
popa
xchg
movsb
call
push
inc
scas
push
movsb
or
mov
lds
sbb
inc
shlb
stos
jp
xlat
shll
jg
mov
stc
sbb
imul
aad
lret
push
mov
xchg
test
pop
mov
int3
fisubrs
out
in
add
roll
mov
ss
cli
es
sti
jp
inc
push
stos
push
sbb
ja
fistpl
lahf
out
pop
cmp
and
sub
adc
mov
lret
jmp
push
mov
mov
and
leave
fcmovbe
mov
ret
mov
adc
pop
mulb
std
incl
fcmovne
xchg
and
dec
sbb
movsb
lret
ffreep
mov
push
mov
iret
mov
inc
sbb
adc
and
dec
sti
sub
jns
pop
ja
pop
inc
pop
fcmovu
in
imul
mov
imul
ds
in
sub
mov
xchg
loop
jb
mov
ret
int
lds
dec
sbbb
int
das
pusha
sbb
fsubrs
fldl
xchg
fs
gs
shrb
test
ret
jae
adc
push
stc
jge
inc
out
mov
std
pop
loopne
out
pop
in
data16
mov
mov
dec
ja
cmpl
cld
movb
imul
push
and
jg
aas
mov
fs
out
lock
pop
jl
pop
scas
enter
movsl
adc
add
pusha
mov
pop
xchg
scas
push
inc
dec
push
xchg
arpl
dec
test
sbb
mov
roll
insb
das
cmc
mov
test
adc
pop
pop
and
sarl
mov
ljmp
jmp
jg
jl
repz
sbb
mov
gs
fldln2
jno
popf
test
testb
jne
mov
mul
ret
fwait
xor
enter
out
push
inc
loope
cmc
test
sti
sub
mov
sub
xchg
push
call
out
cmpb
popa
ljmp
lcall
push
js
dec
mul
scas
add
popl
es
mov
rcrb
rolb
sub
jmp
jno
stc
mov
xchg
lcall
imul
inc
cmp
pop
xorb
xor
jbe
shl
lahf
scas
nop
sbb
jle
cmpsl
lods
adc
push
jo
xor
insl
roll
and
sbb
dec
xor
scas
into
mov
add
dec
fcmovb
xorb
stc
addr16
icebp
push
xchg
fsubrs
fucomip
ds
in
ret
insb
mov
push
ljmp
sti
mov
mov
pusha
pusha
xchg
dec
add
gs
dec
outsb
std
mov
adc
add
mov
cmp
mov
pop
ret
dec
loopne
ds
into
push
cmp
test
sub
cmp
sti
fmul
jle
stos
into
repnz
mov
push
into
or
addr16
ja
lahf
dec
sub
dec
int
mov
rorb
cmp
movsl
clc
sbb
and
aas
mov
push
rorl
adc
pop
int3
mov
sahf
add
pop
imul
es
lcall
clc
scas
addr16
test
inc
sbb
scas
stos
push
jmp
lret
out
jno
jo
fs
push
sar
stc
push
nop
mov
push
inc
fsubl
jge
test
ds
cli
cli
cmpsb
xor
std
mov
mov
pop
adc
xor
std
lock
add
popf
idiv
inc
aas
xchg
enter
imul
inc
mov
push
inc
mov
int3
adc
xor
push
mov
inc
lret
sub
xchg
test
les
adc
call
stos
mov
sbb
in
popa
push
lret
mov
mov
int3
fwait
jns
les
lret
outsb
mov
jp
ret
test
dec
je
mov
inc
les
xchg
orl
notl
in
shlb
hlt
aam
push
dec
or
sub
jb
out
jb
lods
pop
dec
scas
movsl
jmp
xor
das
sub
cmp
jg
jle
push
push
imul
call
addr16
in
sbbb
insb
mov
inc
xchg
rcrl
ja
ficoml
and
dec
aam
pop
imul
and
ret
inc
pop
imul
icebp
fnstsw
bound
sub
xchg
loope
gs
xor
dec
adc
testb
mov
loope
nop
add
addb
mov
cmp
cwtl
setl
hlt
jmp
shlb
jns
dec
jbe
mov
lcall
push
add
dec
or
pop
jg
imul
test
pusha
mov
inc
call
loope
cmc
mov
mov
xlat
and
sti
dec
pop
enter
sbb
push
push
rorb
or
adc
dec
pop
mov
pop
or
in
jbe
xchg
std
adc
cwtl
push
sbb
pop
push
scas
inc
cmc
inc
lcall
into
push
push
leave
inc
cli
mov
data16
add
sub
loope
push
and
arpl
testl
cwtl
push
ficompl
dec
inc
test
pop
cmp
pop
punpckhwd
push
aaa
js
out
dec
push
test
xor
ss
pop
fimuls
popa
push
and
push
pop
pop
scas
scas
mov
scas
mov
pop
mov
xchg
aaa
adc
or
pop
inc
lcall
lahf
addr16
lods
aas
jmp
fdivrp
pop
das
imul
and
mov
jnp
mov
insl
inc
sub
xor
ljmp
push
cmp
cwtl
test
aad
or
add
pop
popf
fscale
mov
sub
cmp
inc
cmc
xchg
incb
stos
mov
test
imul
add
lea
and
les
and
out
das
xor
insb
aam
push
rol
mov
hlt
cli
and
push
jge
popf
jmp
loop
or
dec
push
popf
xchg
in
xor
lods
cmpsl
in
dec
lret
push
lea
dec
mov
sub
or
mov
lds
mov
push
inc
jno
int3
das
xchg
mov
subl
fsubp
ds
inc
xor
xor
insb
repnz
stos
sub
jl
rcrb
sti
int3
imul
xchg
jmp
cli
pop
xor
fistl
jle
addr16
mov
imul
or
test
sub
xor
xchg
pop
mov
pop
fidivl
int
outsl
int3
stc
aam
divb
mov
xchg
call
movsl
xor
aad
and
mov
pcmpeqd
imul
repnz
mov
pop
push
outsl
jns
enter
jns
es
xlat
gs
and
xor
sti
jmp
pusha
out
aad
jmp
adc
cmpsl
dec
call
xchg
insb
xor
cmp
adc
or
jb
out
icebp
int3
arpl
ja
jne
add
xor
sub
enter
loopne
loop
xchg
imul
mov
sub
jp
cmp
pop
jge
mov
lret
push
icebp
dec
fs
das
int
xor
push
push
outsl
or
push
pop
loopne
cmp
inc
pop
call
hlt
sub
dec
or
ss
cwtl
icebp
mov
and
rorl
pop
mov
inc
inc
jne
add
push
mov
pusha
das
stc
clc
pushf
aas
ret
dec
add
fs
aaa
or
jl
xor
pop
movsb
mov
sbb
movsl
sbb
mov
push
sbb
nop
lret
pop
std
cltd
jae
adc
pusha
xor
add
cmp
push
ljmp
hlt
jmp
or
xor
jo
popf
mov
test
or
mov
clc
in
insb
lods
xor
inc
cs
mov
fldenv
or
pusha
dec
rcr
push
push
fmuls
in
stc
shr
leave
faddl
leave
adc
repnz
sahf
add
xor
aad
add
push
mov
and
mov
pop
jne
scas
add
loopne
mov
test
dec
fwait
adc
sbb
ds
in
ja
jnp
cli
push
adc
daa
hlt
dec
push
movsb
jne
nop
sbb
mov
xor
xor
das
and
inc
dec
shl
mov
pop
or
jnp
cmpsl
sbb
cmpl
xorl
out
fs
fwait
dec
dec
cmc
xchg
pop
jno
subl
pushf
sub
lock
or
stos
int3
mov
or
dec
ja
cmp
adc
inc
mov
sub
loop
fsubs
je
xchg
and
scas
imul
nop
outsl
push
pop
adc
mov
and
test
insb
mov
in
jb
adcb
lret
aaa
add
pushf
xor
inc
ss
jge
jl
or
push
pop
lret
lea
and
aad
sbb
cmc
push
clc
scas
int
hlt
inc
das
and
inc
push
sub
xchg
xchg
std
movsb
out
mov
and
jle
out
lods
fmull
icebp
dec
lods
mov
xchg
pop
xchg
dec
mov
rcr
rcrl
xor
imulb
xchg
pop
daa
xchg
push
mov
lods
aaa
jl
daa
loopne
mul
cs
add
xlat
movsb
enter
pop
mov
in
lds
shll
leave
mov
in
js
mov
jl
daa
je
sub
pusha
in
mov
jno
mov
mov
ljmp
popf
pop
loop
cltd
jle
jbe
nop
pop
pop
addr16
scas
lret
jmp
mov
push
fdivl
or
rorl
sub
or
mov
outsb
subl
test
xchg
lds
in
xchg
pop
negl
stos
pop
mov
bound
mov
jge
scas
pop
addr16
dec
mov
mov
xor
test
push
jae
jp
call
and
mov
dec
inc
sbb
sub
dec
std
lods
add
pop
test
fmuls
iret
lea
and
xchg
insl
mov
dec
dec
cmp
in
filds
xchg
jp
lcall
sbb
and
lcall
jne
xchg
mov
test
lds
sub
xor
ret
fs
inc
pop
clc
or
xchg
pushl
popf
imul
jns
test
inc
mov
int3
adc
out
arpl
jmp
pop
in
jl
or
mov
sub
pop
mov
inc
enter
mov
and
lcall
lahf
sbb
cmp
daa
and
inc
mov
pop
dec
mov
jnp
aas
add
rorl
shlb
aaa
decb
xchg
add
adc
mov
lock
push
sbb
push
dec
out
fsubl
loopne
sti
cs
mov
mov
add
and
loope
add
imul
dec
pop
jle
fs
loope
or
scas
out
add
cmp
jno
cmp
cmpsl
gs
pop
std
sub
cmp
ja
sub
shl
mov
or
cwtl
xchg
sub
mov
inc
adc
and
add
mov
push
movsb
and
pop
into
out
ret
repnz
in
jle
mov
repz
inc
xor
pop
or
adcl
bound
sub
sub
fldcw
out
icebp
mov
mov
and
lret
shll
dec
pause
cs
mov
rorl
cld
sub
inc
pop
fnsave
push
push
cmp
in
mov
dec
mov
dec
jge
call
sarb
lret
pop
sbb
dec
adc
push
cmpsb
xlat
mov
loope
test
incb
xor
call
inc
and
jp
xor
stos
sub
lds
mov
lcall
mov
sub
ret
mov
popf
mov
mov
push
dec
movsl
push
sub
push
popa
ljmp
push
stc
dec
lahf
fldl
xorl
push
mov
jbe
push
mov
push
inc
scas
add
lret
mov
ret
int3
jne
or
dec
addb
pusha
adc
lds
push
movsl
jbe
gs
jbe
sub
add
jb
push
loope
lret
out
jg
popf
xchg
shrb
lds
cmp
repz
scas
push
cltd
sbb
leave
stc
push
push
mov
jne
insl
test
and
mov
movsl
ja
push
js
stos
mov
jecxz
push
cmp
rcrl
and
int
and
nop
lods
adc
sbb
daa
push
divl
inc
lds
xor
mov
dec
mov
mov
inc
lods
test
sub
xor
or
cmpb
xor
sahf
mov
cmp
mov
mov
mov
sbb
and
divl
test
faddl
and
dec
sti
dec
sahf
int
cltd
mov
and
adc
or
mov
xor
mov
fwait
mov
sub
rolb
pop
or
pop
mov
mov
jb
mov
stc
pop
aad
dec
pushf
xchg
xchg
mov
xchg
cmc
hlt
mov
inc
dec
adc
cmp
jns
shlb
mov
out
mov
mov
pop
ret
xlat
cld
xchg
mov
and
cwtl
and
mov
cmp
add
pop
mov
adc
sbb
adc
pop
aas
adc
les
and
push
sbb
fsqrt
dec
mov
mov
pop
shll
or
pop
lds
popf
jo
cmp
insl
fdivp
sub
imul
inc
add
shrb
ss
adc
mov
xor
fisttps
push
movsb
aas
push
dec
sarb
mov
cs
cltd
test
jae
or
mov
movsl
bound
pop
xchg
int
xchg
cmp
fdivrs
pop
out
mov
sbb
mov
add
cmc
adc
ret
gs
and
xor
push
xor
dec
addr16
aaa
sbb
loopne
rolb
pop
nop
cli
adc
cmpsl
rcrb
sbb
mov
push
pop
push
dec
pop
daa
mov
cwtl
mov
xchg
cmp
xchg
iret
data16
sub
adc
test
lcall
mov
insl
sti
les
cwtl
add
bound
push
addr16
mov
mov
ds
repz
xlat
sub
jmp
add
mov
pop
cwtl
push
ja
inc
adc
and
cwtl
jp
mov
shll
loopne,pn
push
push
ret
insl
push
push
pop
pop
mov
dec
fdivp
adc
xchg
mov
xchg
pop
fstpl
popf
cmp
mov
ret
cli
mov
hlt
pop
mov
mov
mov
cmp
add
sti
sbb
xor
ja
cmp
rolb
push
in
push
icebp
jecxz
lds
push
test
add
adc
in
clc
mov
insl
xor
imul
or
pop
sbb
push
xor
sti
pop
push
rorb
imul
push
mov
in
xchg
adc
movsb
repz
mov
loop
repz
mov
jle
mov
xchg
aam
aas
scas
sarb
lret
sub
pop
jecxz
dec
in
mov
dec
mov
nop
pop
add
lret
pop
cli
test
in
pop
mov
daa
adc
scas
mov
dec
repz
daa
aas
xchg
mov
pop
inc
and
push
fldenv
lret
sti
loope
movsl
inc
or
cwtl
cltd
xor
push
fnsave
mov
dec
cmp
inc
add
xchg
add
mov
mov
sbb
ljmp
arpl
shrl
lock
inc
or
imul
jl
mov
sahf
xchg
rcrl
pop
rcll
or
out
roll
fldt
aaa
pusha
idivb
sbb
pop
push
adc
scas
xchg
mov
in
dec
aas
inc
ret
inc
cmp
jge
and
icebp
push
push
punpckhwd
fsub
push
popf
std
lock
or
lods
lods
cmc
roll
mov
or
fistl
dec
cli
xor
lods
jbe
es
ficoms
test
pop
mov
inc
les
inc
fnstenv
sti
lret
push
xchg
ss
or
mov
fucomp
into
mov
mul
pop
push
pop
cmp
adc
aas
in
fnstenv
mov
mov
daa
in
push
mov
scas
mov
xchg
icebp
pop
lret
subl
pop
or
adc
jl
push
rep
mov
gs
lods
add
mov
xlat
ret
aas
and
jl
cli
mov
scas
jle
rcr
dec
adc
xchg
dec
cmpsl
movsb
jg
hlt
adc
mulb
mov
pop
and
or
lea
lods
lahf
mov
pop
sbb
rolb
xchg
xchg
dec
repnz
aas
sub
add
adc
fcoml
lods
dec
popf
jns
pusha
xchg
pop
push
sub
lahf
mov
fwait
mov
mov
hlt
xor
or
call
xchg
test
xor
lock
adc
sbb
loop
adc
fninit
scas
popf
adc
sbb
mov
mov
popf
outsb
repz
push
xchg
movsb
scas
call
sbb
imul
pop
repz
aas
add
loop
push
push
fildl
adc
sub
mov
cmp
test
aaa
mov
pop
lret
mov
out
or
push
mov
add
mov
mov
inc
or
pop
add
scas
imul
dec
not
mov
dec
out
cmc
cmp
xchg
popa
pop
push
adc
pop
in
in
test
push
cs
sub
jbe
xlat
movsl
xchg
mov
fidivrs
pop
das
cmp
mov
hlt
dec
jmp
xor
and
xchg
ja
add
lds
cmc
in
out
popa
push
dec
sar
pop
pop
faddl
jbe
xchg
fdivs
out
out
inc
stos
jl
xchg
ficomps
shrl
cwtl
mov
out
mov
pop
push
sti
jns
popf
cld
in
out
std
dec
jmp
fwait
pop
jmp
mov
test
in
pusha
cmp
adc
jl
adc
iret
repz
pop
mov
jecxz
cli
adc
xchg
movsl
das
mov
rolb
lret
jnp
bound
scas
cmp
lret
adc
mov
inc
jae
shrb
xor
fisttpll
mov
adcb
into
ss
sbb
jo
hlt
inc
testb
paddusb
pop
fnstenv
cmc
xchg
mov
cmp
mov
fisubrl
dec
or
inc
adc
cmp
lahf
ds
cmp
xor
jp
fidivs
lret
out
stos
dec
sbbb
pushf
popa
push
dec
arpl
cwtl
mov
add
cmc
out
jo
jle
imul
ficoms
fwait
mov
dec
adc
xchg
movsl
test
push
push
dec
dec
test
mov
fcomps
xchg
aaa
fwait
popa
outsb
or
mov
mov
xchg
mov
jo
stos
sbb
lds
pop
aam
jbe
mov
sub
es
outsb
mov
mov
mov
int
mov
outsb
or
xor
decl
or
pushf
pushf
aad
xchg
mov
jl
sbb
lock
testb
lahf
or
pop
jne
xor
sbb
inc
inc
jns
pop
daa
fistl
stc
daa
repnz
loop
cmp
xor
loop
xor
pop
leave
dec
cltd
sbb
add
inc
sub
test
push
daa
mov
xchg
fimull
cmp
fdivs
dec
add
mov
arpl
pop
insl
mov
xor
xchg
iret
cltd
fisubs
mov
into
hlt
or
data16
jmp
stos
iret
or
jmp
loop
test
push
mov
sbb
push
shr
adc
clc
inc
lret
or
testb
push
pop
jno
cld
mov
mov
or
mov
lods
xor
sbb
jb
mov
in
lods
mov
leave
adc
cmp
movsb
xor
aaa
movsb
push
ss
clc
jo
mov
mov
mov
pusha
fdivrp
adc
inc
bound
cmp
jmpw
pop
inc
push
xchg
movsb
shlb
xor
inc
aas
loopne
pop
pop
pop
mov
cmp
in
cli
js
das
aam
dec
jp
pop
loopne
shrl
xchg
jl
orb
push
inc
mov
and
jne
ret
inc
loopne
arpl
les
loop
ror
or
imul
sub
mov
sub
popa
cmp
pop
mov
movsb
dec
call
repz
and
aam
imull
cmp
call
outsb
inc
jg
jmp
leave
jne
inc
outsl
mov
movb
adc
jns
push
ja
dec
bnd
xorl
nop
rorb
scas
or
fsubs
mov
in
push
adc
and
sarl
jne
dec
mov
sbb
xchg
sti
add
sbb
ss
pop
pop
call
in
mov
xor
out
sub
sbb
mov
ja
pusha
sbb
imul
mov
pop
jecxz
push
scas
ret
mov
call
mov
dec
mov
dec
or
pop
filds
jmp
dec
xchg
test
flds
enter
shlb
push
inc
and
ds
arpl
mov
and
inc
je
fsubp
mov
je
in
adc
lcall
pusha
movsl
jb
jb
fcoms
test
cmp
push
xchg
add
or
mov
inc
sar
rolb
das
xor
inc
stc
cwtl
push
inc
push
and
push
sbb
in
adc
sub
mov
popa
subb
push
cmc
mov
mov
jecxz
shrl
mov
pushf
sti
lcall
out
decb
jnp
outsl
daa
mov
mov
mov
clc
shlb
arpl
lods
cmp
js
xchg
push
push
pop
lock
lea
cmp
repnz
adc
jns
xchg
cmc
shrl
and
jecxz
mov
test
xchg
cli
xchg
hlt
jl
pop
lds
push
sarl
mov
cmpsl
pushf
mov
cwtl
pusha
das
test
push
inc
xchg
cmp
mov
bnd
inc
sub
rorb
mov
shl
mov
lcall
fwait
ss
lods
mov
lcall
sbb
inc
adc
iret
jle
dec
inc
test
sub
arpl
or
jle
pop
mov
sub
cmp
xor
cmp
pop
mov
pop
fs
lret
dec
test
lock
divb
add
daa
or
inc
and
cs
xor
inc
cmp
sub
outsl
insl
dec
pop
adc
add
inc
movsl
mov
nop
mov
lret
es
pop
movsl
out
das
pop
rclb
icebp
jle
jmp
cmpsl
sarl
js
inc
mov
add
pop
mov
into
orl
add
xchg
mov
sar
sbb
adcb
fidivrs
fnop
mov
mov
gs
pop
out
mov
call
adc
loop
inc
out
or
cmc
add
fwait
adc
mov
xor
aaa
inc
insb
cwtl
popa
imul
xchg
loopne
adcl
push
and
cwtl
and
roll
stos
lahf
fadds
dec
cmpb
fwait
scas
pop
push
or
movsl
mov
ss
push
xor
mov
jle
mov
push
stos
mov
scas
popf
xlat
imul
insl
xchg
les
inc
push
xchg
mov
in
shlb
ret
inc
or
cli
adc
sahf
stos
cmp
fneni(8087
xor
lock
xchg
inc
push
mov
and
mov
movsl
fisttpl
orl
inc
notl
dec
popa
mov
out
bound
mov
inc
mov
orb
xchg
add
and
mov
or
and
and
and
lods
jae
jge
imull
js
out
icebp
pop
xchg
dec
enter
cmp
rol
popa
outsb
pushf
push
cwtl
xchg
outsl
stc
push
enter
test
insb
call
mov
jecxz
test
jecxz
adcl
fdiv
or
sub
in
imul
pop
xchg
adc
dec
sub
popa
sub
sbb
cmpsb
out
fstps
sbbl
fsts
mov
sub
jnp
and
popa
cmp
cmpsb
add
dec
shrl
inc
jp
sbbb
mov
jae
lret
stos
cmp
jno
mov
sub
cmpsb
jp
pop
and
cs
adc
pop
pop
pop
or
xlat
and
loopne
js
sahf
faddl
fs
mov
enter
rol
mov
jns
lods
sbb
sahf
repz
xlat
xchg
inc
sbbl
and
enter
push
shll
and
add
pop
adc
fistl
cmc
out
pop
rcr
orb
rorl
out
mov
popa
xchg
and
jg
imul
shlb
push
idivb
outsl
push
pop
scas
jno
dec
mov
push
loopne
in
das
ret
sub
xchg
ds
fwait
rolb
ljmp
jo
ljmp
imulb
cmovae
push
sbb
rcrb
sbb
xchg
lea
dec
or
push
nop
insl
push
enter
sbb
dec
cld
xchg
dec
mov
ror
dec
shl
not
xchg
das
loope
jns
lock
or
fldt
xor
test
shlb
lock
sbb
or
jae
cmpsl
push
add
adc
loope
mov
inc
sti
inc
sbb
pop
or
das
cmpsl
imul
sbb
or
aas
push
pop
push
aad
cmp
mov
mov
push
lcall
loop
lret
in
push
jb
xchg
pop
insl
push
out
lock
fwait
in
out
in
cmc
jmp
cmp
pop
mulb
outsl
sub
das
js
rcl
mov
ret
xchg
or
push
mov
clc
pop
insl
sub
rep
dec
jge
rcr
ds
sarl
jns
jne
inc
scas
inc
cmp
add
mov
nop
fidivrs
adc
mov
aad
je
pop
addr16
into
imul
sbb
movsb
loope
inc
mov
fcmovnu
scas
and
inc
xchg
jno
and
enter
nop
outsl
loop
test
test
push
into
cs
pop
adc
rcl
push
sbb
inc
push
fstps
cmp
rcr
sub
sub
pop
push
and
ret
in
in
enter
push
pop
jns
cmpsb
lret
add
incl
fadds
and
pop
or
push
jecxz
andl
or
aas
subb
jb
push
fbstp
pop
mov
lock
fcmovnbe
jge
pop
inc
jge
clc
push
mov
inc
pop
aad
call
mov
aam
pop
faddp
dec
and
lock
push
movsl
sbb
or
mov
addl
std
in
push
jecxz
test
out
sbb
rolb
sti
inc
and
cmc
fcomps
dec
rorl
push
dec
loopne
ret
jp
iret
mov
sub
cs
imul
jo
add
mov
mov
loope,pt
movsl
xor
aam
and
ljmp
ja
or
popa
mov
rclb
jbe
stos
mov
jle
sbb
jnp
cmp
js
cmc
out
adc
pop
negl
mov
xchg
inc
mov
outsl
inc
fsubs
inc
repz
push
lret
rcr
lret
in
mov
xorl
ficoml
faddl
scas
sbb
stos
jae
ljmp
xor
es
push
mov
lcall
cmp
in
out
xor
lods
std
xlat
xchg
nop
inc
add
push
jp
push
mov
fistps
lret
push
mov
jle
addr16
jns
call
jp
sarl
adc
jmp
lret
adc
push
loop
mov
out
pop
imul
xchg
addr16
pop
pop
popf
mov
fisubrs
pushf
or
add
xor
je
nop
mov
adc
mov
add
add
push
fucomp
cmp
mov
inc
pop
dec
mov
outsl
fisubl
sub
mov
mov
dec
pop
inc
in
shlb
jno
rorl
aas
sub
xchg
rcl
jae
das
cmp
data16
xor
shlb
sub
xchg
loop
sti
test
hlt
jb
pop
rol
or
mov
rcrl
orl
xor
sub
adc
aad
test
js
cmp
cmp
es
in
xchg
dec
cmp
adc
mov
mov
cs
sar
inc
repnz
mov
push
outsl
cmc
mov
lds
cmpsl
inc
push
imul
jl
jmp
sub
dec
dec
sub
dec
jg
push
or
pop
aas
inc
insb
in
hlt
sbb
nop
mov
hlt
insl
enter
stos
lods
cmp
mov
lcall
or
pop
call
mov
dec
imul
mov
pop
mov
and
adc
mov
and
cwtl
fiadds
xor
jmp
dec
sub
pop
mov
cmp
aad
pop
js
adc
call
fwait
stos
mov
dec
pop
or
push
push
sub
push
stos
push
push
pop
or
cmp
mov
clc
or
inc
push
notb
clc
les
xor
lock
jecxz
mov
pop
fsubrl
flds
push
movsb
in
hlt
jno
jmp
ljmp
mov
call
inc
clc
push
imul
xor
xor
xlat
add
lahf
add
aad
fwait
mov
inc
sbb
sbb
into
and
xchg
mov
inc
loop
ljmp
pusha
mov
inc
sub
rcll
mov
out
std
and
sbb
insb
xlat
fbstp
push
sbb
xchg
faddl
dec
fldl
inc
mov
xchg
shrl
rcl
and
xchg
jno
jb
and
push
lea
cmp
loop
pop
int3
xorw
sahf
hlt
push
jecxz
push
inc
mov
push
into
test
mov
push
sub
sub
call
sub
push
xchg
out
hlt
mov
push
adc
outsb
jmp
filds
mov
into
mov
js
xchg
push
sub
lret
scas
jae
lret
iret
leave
mov
mov
adc
mov
out
cs
sbb
pop
xchg
jo
add
mov
mov
mov
inc
into
into
movsl
pop
add
adc
pop
xchg
pop
icebp
mov
sbb
divb
test
repnz
inc
sub
lds
out
aam
dec
add
movzbl
dec
inc
jo
jae
add
adcl
adc
and
mov
add
and
into
xor
adc
lock
rcr
xchg
ss
mov
repz
cli
stos
jnp
and
xchg
mov
xor
xor
cmp
add
and
sbb
sub
fstl
jecxz
sub
mov
xchg
add
movb
mov
mov
cmp
dec
ret
mov
push
push
sbb
mov
rorb
loope
out
inc
jb
leave
mov
inc
and
shll
arpl
cltd
fyl2x
push
repz
aam
inc
inc
fwait
daa
mov
test
test
inc
or
imul
xor
add
mov
push
and
pop
inc
push
jmp
into
insl
mov
xor
and
inc
cwtl
cmp
mov
add
xlat
inc
in
cmpsl
pop
cmc
add
sub
cld
cltd
add
mov
stc
xchg
sbb
mov
and
mov
arpl
cmp
and
rcll
pop
in
repz
or
inc
or
dec
bound
popl
sub
es
movsl
jecxz
nop
sub
outsb
punpcklwd
sti
cmp
push
and
cmpsl
mov
cmpsl
or
aad
jne
mov
dec
pop
mov
mov
jno
xchg
dec
popl
dec
out
jo
xchg
pop
mov
mov
and
cmpsb
xchg
xchg
push
push
sti
push
daa
cmp
and
push
aam
cmpsb
xor
insl
jb
icebp
rol
xchg
xchg
scas
pop
iret
scas
sbb
sub
scas
jmp
jg
mov
xchg
add
pop
push
inc
out
int
aaa
push
mov
arpl
imul
inc
loope
push
mov
aad
stos
daa
mov
xor
jg
data16
ret
leave
pop
aaa
lret
lea
mov
lcall
mov
fsubrs
inc
adc
rorl
xlat
push
dec
fldcw
repnz
popa
cwtl
xchg
inc
pop
add
imul
mov
add
jae
test
sahf
jle
sbb
or
xchg
addl
add
push
in
js
out
push
shrb
dec
mulb
xor
or
aaa
outsl
rcll
jbe
insl
fwait
jnp
loopne
lock
pop
add
pop
lods
pop
inc
lret
cmp
stos
jno
fwait
mov
fdecstp
nop
or
and
push
aam
xchg
dec
and
in
in
sbb
cmp
adc
fsubr
adc
mov
xor
or
push
jp
inc
pop
int3
add
push
iret
pop
mov
rcrl
lahf
xor
mov
fcoml
jns
sub
lock
jle
mov
jns
add
test
mov
push
insb
inc
pop
imul
icebp
or
lret
sbb
sub
add
mov
add
lcall
aam
enter
sbb
mov
push
sub
shll
sbb
sub
sbbb
sbb
frstor
push
lahf
push
jnp
call
jecxz
mov
pop
test
outsb
and
lret
mov
movsb
xorl
mov
lahf
repnz
addr16
jnp
push
pop
xchg
js
push
mov
and
mov
xchg
pop
arpl
add
call
mov
and
dec
and
sbb
lahf
imul
mov
int
dec
sbb
push
fstl
ljmp
ja
in
cld
cmp
push
mov
pushf
iret
jns
xor
jb
ljmp
and
adc
push
repnz
sub
mov
cmp
jno
icebp
mov
pop
icebp
repnz
pop
iret
cli
fdiv
hlt
inc
iret
xor
rcl
scas
add
push
mov
repnz
dec
fmull
or
cltd
adc
sub
fistps
daa
cmp
scas
inc
mov
mov
dec
ret
or
xchg
lcall
hlt
fbld
add
cmp
fstpl
out
mov
mov
cli
aaa
test
orl
adc
pop
fstl
xchg
ja
clc
cmp
pop
dec
cmp
jae
outsl
js
mov
or
icebp
iret
idivl
les
mov
jl
fdivs
rol
jo
test
sub
jp
cmpsl
or
sub
jnp
ds
inc
xchg
push
popf
sbb
loop
leave
imul
xor
clc
push
out
cwtl
mov
and
jne
cli
iret
cmp
aaa
dec
rorl
mov
ficompl
scas
xchg
cmp
pop
out
jecxz
test
clc
jle
mov
shll
xor
sbb
insl
xor
sbb
adc
push
dec
push
add
cmp
sbb
mov
pop
cld
test
sahf
das
lret
xchg
test
sub
outsb
out
dec
mov
sub
sbb
sbb
fmulp
insl
stc
pop
movb
lret
cmp
out
jl
push
lret
test
lods
mov
mov
push
into
mov
ss
mov
pop
xchg
push
in
clc
into
int3
ss
or
insl
mov
and
hlt
mov
push
mov
test
aad
inc
jo
into
imul
insb
adc
push
rcll
dec
fidivrs
dec
jmp
xchg
dec
stos
sub
mov
jne
jne
sub
ds
pusha
fidivs
icebp
lea
xor
pop
mov
popa
or
fwait
xchg
push
scas
cmc
push
lret
pop
cld
mov
je
je
arpl
xlat
pop
mov
jg
pop
lahf
shlb
aad
out
xchg
shlb
push
mov
xor
sbb
jo
aaa
cmp
imul
jne
mov
push
rcll
jnp
xchg
mov
jmp
outsb
pop
push
sbb
jl
sbb
mov
lret
jecxz
jmp
sbb
pop
ret
jnp
addr16
les
rcll
pop
push
outsb
xchg
icebp
stc
js
xor
std
add
popf
lods
xor
or
imulb
mov
xchg
fs
mov
loop
int3
inc
xlat
call
jg
hlt
xor
loopne
aam
inc
enter
ja
inc
or
ja
push
push
shrl
lcall
imul
dec
lods
shr
mov
hlt
enter
inc
mov
pop
js
rcr
enter
fisubs
sbb
adc
shrl
push
push
cmpsb
scas
in
add
mov
outsl
sarb
ljmp
adc
ret
jle
jmp
lcall
out
inc
lea
gs
fidivrl
mov
pop
mov
cwtl
sub
mov
mov
xlat
repz
mov
aam
int3
xor
mov
push
mov
movsl
dec
js
mov
cmp
cmpsb
mov
scas
mov
into
out
xor
cwtl
sub
imul
cmp
mov
imul
and
inc
push
test
mov
test
movsl
scas
adc
mov
lods
arpl
sub
rcrb
and
repnz
cmp
repz
jae
ss
xor
sub
xchg
add
jmp
cmp
jbe
mov
shl
call
mov
test
push
or
mov
inc
push
pop
jp
idivb
cmp
cmp
xchg
ljmp
xchg
inc
leave
sub
xor
dec
loop
fdivr
add
rorb
divl
rcrb
and
nop
jno
rclb
pushf
out
dec
sub
out
jae
and
push
ja
mov
stos
xchg
add
ljmp
or
leave
int
out
cmp
inc
pushf
sahf
lock
push
xor
stc
pop
or
cwtl
mov
xor
dec
or
jno
xorl
adc
jecxz
es
pop
mov
aaa
in
mov
mov
dec
jg
mov
inc
test
in
cmpsb
fnstenv
and
jp
push
je
cmp
cmpsl
test
mov
sbb
xor
mov
or
mov
lret
outsb
loopne
ret
inc
mov
jb
xchg
insl
pop
fidivrl
jbe
test
mov
push
cmovs
aam
sbb
push
mov
fcomi
fcmovbe
shr
mov
push
test
cmc
mov
aad
outsl
inc
xchg
es
and
sbb
adc
cmp
rorb
and
rcll
cmp
xor
jae
xchg
stc
movsb
dec
xchg
cmp
fpatan
cltd
jge
es
loopne
nop
pop
outsb
ljmp
cmp
in
cld
iret
adc
loope
mov
cmp
add
sub
push
std
jo
cmp
and
sub
mov
sbb
cwtl
sbb
popf
shl
and
sbb
lods
test
movsl
jne
out
in
ss
inc
int
xchg
push
cmpsb
mov
cltd
xchg
fisubrl
fsubrs
stos
insl
dec
lods
push
cmc
sbb
movsb
enter
jl
dec
pop
fimuls
in
out
lock
and
aad
popf
cmc
mov
inc
jecxz
add
xlat
mov
pop
jmp
push
lock
pop
ljmp
imul
xor
pop
insl
sti
push
icebp
lahf
jnp
push
je
or
dec
loop
or
les
shlb
jnp
daa
clc
scas
repnz
lret
ret
jae
aad
add
test
leave
or
sub
jae
jno
ds
lods
mov
xchg
pop
adc
out
rcll
xchg
out
aad
lods
pop
or
ss
jg
std
pop
push
sbb
daa
incb
out
fwait
inc
pop
aaa
imul
mov
jb
sbb
fadds
xor
push
int3
orb
rorb
test
jg
mov
pop
repz
and
cltd
cli
lods
cmovo
in
out
enter
jns
inc
pop
test
mov
outsb
jg
lret
ja
ja
mov
test
inc
dec
push
rcrb
in
scas
push
jl
cmp
fsubrl
pop
mov
sub
addr16
add
xchg
adc
jb
add
cmpl
fwait
rclb
scas
push
cld
xor
stos
mov
xchg
hlt
pop
call
xor
ret
sbb
leave
enter
mov
iret
out
mov
push
loope
scas
or
mov
sbb
mov
out
andl
inc
cli
push
lds
fsubrl
push
mov
xorb
enter
mov
cmc
call
inc
xchg
mov
dec
fs
fisttpl
sbb
mov
rorb
outsl
cmp
insl
rolb
cmp
cmp
pop
push
subl
cs
mov
in
ret
lcall
repnz
fistpll
rclb
jbe
xor
jbe
fldenv
dec
call
jb
mov
jecxz
dec
in
and
xchg
in
jge
arpl
repz
movsw
xor
jg
xchg
out
movsl
xchg
pop
hlt
mov
xor
mov
int
lahf
mov
mov
jb
pop
dec
sbb
push
pop
and
ja,pn
mov
lods
pop
add
ret
cmp
xchg
jle
cmp
pop
ret
fldl
notl
sub
ds
scas
int
in
in
mov
ljmp
jnp
ja
insb
mov
dec
and
inc
and
sahf
jp
add
divb
adc
data16
cli
movsl
cwtl
das
adc
data16
test
mov
fisttps
aad
stos
mov
shrb
outsl
sbb
push
lock
mov
push
pop
popf
adc
scas
aaa
sbb
subl
add
push
rcr
and
mov
adc
lcall
lret
aam
sub
cmp
push
mov
sbb
push
cmp
pop
mov
sbb
lods
movl
lahf
ss
inc
adc
cli
and
sbb
or
rclb
xor
andb
stos
clc
fists
aad
mov
dec
mov
pop
or
ds
lock
scas
add
incb
ret
lods
mov
mov
mov
sub
push
mov
mov
ljmp
in
adc
enter
add
dec
xlat
push
sahf
fldenv
std
mov
pusha
xchg
callw
mov
dec
sahf
into
cmp
mov
data16
xor
mov
mov
test
sbb
shll
into
fmuls
lods
mov
mov
jecxz
out
or
sti
in
pop
pop
jg
xchg
roll
lods
mov
fistl
jno
in
lock
pusha
mov
add
push
mov
mov
loop
push
dec
scas
sbb
psrlq
jl
gs
insl
adc
xor
cwtl
pop
lret
rclb
dec
shrb
push
outsl
daa
xchg
dec
daa
inc
adc
adc
test
lea
dec
pop
sbb
mov
hlt
test
pop
push
or
adcl
or
sub
adcl
or
jbe
mov
jae
mov
pop
dec
push
iret
shl
int3
in
dec
or
out
inc
aas
lea
xor
pop
mov
mov
xchg
mov
fcmovb
or
jp
mov
inc
jno
hlt
inc
jne
cld
pop
stos
sbb
int3
addb
mov
and
lods
repnz
popf
mull
aam
int
cld
daa
mov
sbb
and
push
pop
dec
jo
mov
or
and
and
stc
or
push
int
loope
inc
shlb
in
popf
test
sbb
orl
lods
dec
add
mov
mov
int3
lret
fistpll
sbb
scas
mov
jmp
je
sub
stos
mov
push
sub
pop
lcall
push
inc
xchg
xchg
adc
jnp
mov
cmp
or
pop
xorb
scas
cmc
out
mov
ja
imul
xor
or
jne
insl
int
bound
cmp
jo
ja
inc
hlt
in
jo
push
ds
fistpl
mov
push
in
adcl
xor
xor
or
insl
data16
int
dec
mov
cmp
mov
rorb
adc
xor
arpl
jae
call
in
push
or
clc
inc
add
data16
loop
pop
es
pop
pop
pop
push
in
clc
pop
sbb
jmp
pushf
dec
ja
xor
xchg
clc
adc
xor
xchg
das
lock
mov
sbb
jecxz
push
mov
filds
mov
pusha
clc
and
lea
mov
call
push
sbb
clc
ds
out
lock
in
mov
outsb
in
cmp
fisttps
xchg
fwait
jge
mov
adc
jo
scas
jmp
and
pop
lock
jo
fstps
push
and
in
stos
dec
test
push
and
sub
sahf
iret
xor
mov
xchg
imul
xor
scas
cmc
push
xchg
and
inc
jbe
movsb
cmpsl
sub
or
adc
pop
xor
test
mov
fdivl
fldenv
int
jp
sub
jo
mov
pushf
lcall
or
cli
iret
fisubs
dec
xor
movsb
mov
mov
ds
hlt
ret
rorb
out
fwait
sahf
adc
or
mov
scas
outsb
and
add
pop
xchg
outsb
sbb
dec
cmp
shlb
mov
jae
jb
xchg
add
fdivrs
pop
subl
push
out
pop
jmp
lea
jmp
and
ds
or
fnsave
in
adc
scas
sti
cli
xor
out
cmpsl
pop
imul
xchg
xchg
sbb
mov
jmp
xchg
or
je
push
outsl
add
pop
ucomiss
gs
and
ficoml
inc
and
cld
leavew
mov
lret
insl
xchg
std
and
out
gs
mov
mov
mov
jg,pn
ljmp
inc
jle
lahf
pop
push
nop
push
push
std
sbb
loope
in
adc
sub
mov
push
cmc
cli
inc
and
jno
jle
lahf
mov
sub
push
sahf
xchg
xchg
filds
push
pop
xchg
and
mov
pop
cmp
pop
jle
into
cmpsl
stos
lods
mov
cld
sbb
dec
icebp
aas
inc
daa
lods
push
mov
adc
shll
in
and
iret
mov
pop
jp
mov
add
inc
les
call
ficoms
leave
test
aas
cmp
ds
aaa
xchg
inc
mov
aad
aaa
icebp
inc
pop
or
psrlq
data16
lret
inc
jo
push
pop
push
mov
retw
ret
int3
push
data16
mov
shll
inc
adc
pop
fneni(8087
rcrb
nop
dec
loope
mov
jns
add
lcall
dec
pop
ds
sub
mov
mov
repnz
mov
xor
xor
mov
push
addr16
lret
dec
loop
popf
bound
push
lods
push
pop
aam
jg
fisubrs
mov
xor
pop
xlat
jl
es
fnstsw
inc
xchg
movsb
int
into
xor
leave
add
ljmp
and
stos
mov
out
fdivs
push
jle
lret
in
out
add
mov
aas
push
mov
push
jg
adc
fsubrs
adc
mov
pop
mov
adc
lods
pop
dec
cmp
ret
add
ss
pop
imul
add
pusha
push
jmp
incl
xchg
or
pusha
cmp
or
out
popf
out
cltd
push
stc
in
inc
xor
adc
out
sbb
in
dec
fidivrl
adc
xchg
iret
ret
scas
sub
popa
in
mov
push
mov
fsubrs
and
fwait
bound
addb
je
repz
and
rcr
test
push
mov
xchg
mov
or
push
jne
pop
repz
mov
push
adc
jle
push
jg
arpl
push
ret
mov
cmp
daa
jbe
arpl
fistl
mov
outsb
inc
out
cs
cmpsb
jnp
mov
push
lcall
and
iret
pop
mov
hlt
xor
pop
ffreep
jge
lea
pop
push
aas
arpl
jmp
enter
push
jb
cmp
xchg
jns
shrb
push
xor
inc
dec
cmp
mov
lret
sbb
mov
test
adc
and
mov
xor
test
push
das
push
or
mov
cmp
cld
fwait
xchg
enter
add
data16
push
adc
and
leave
xor
sbb
mov
pop
aad
xor
stos
mov
test
cs
or
jae
dec
pusha
mov
cmp
mov
stos
outsl
cltd
push
push
mov
sub
popf
sti
mov
lret
pop
pushf
xchg
mov
in
or
lods
push
mov
ds
push
inc
and
dec
add
pop
mov
sub
hlt
push
add
xchg
mov
cld
push
or
or
testb
add
mov
add
inc
add
push
add
mov
pop
mov
outsl
ja
lret
out
rcl
xor
js
jl
cltd
fwait
stc
imul
mov
pop
xor
into
sahf
cli
fsubs
and
or
jecxz
mov
dec
insb
push
call
stc
jne
out
xchg
xchg
add
aam
leave
cmp
pop
cmp
sbb
test
cmp
scas
inc
test
gs
cmp
or
idivb
arpl
ja
cmpsb
addl
lret
xor
mov
sub
cltd
push
jg
jo
add
aad
jo
movsb
data16
push
data16
jg
in
mov
sub
outsl
or
nop
adc
out
mov
sub
out
bound
pop
mov
scas
imull
adc
leave
jg
dec
repz
aam
inc
cmpl
xchg
in
xor
adc
sbb
cli
js
repnz
nop
rcrl
je
mov
out
lcall
jns
mov
and
pushf
pop
mov
rolb
clc
sub
popa
add
or
dec
test
sub
xor
lret
cmp
mov
lret
pop
add
sub
mov
or
add
stos
cli
xchg
leave
sti
pusha
pop
les
jne
and
int3
mov
int3
and
dec
in
clc
ficoml
dec
jge
out
push
outsl
adc
stos
loope
mov
sub
push
pop
mov
aaa
xchg
xorl
rol
dec
dec
pop
mov
in
mov
jo
inc
add
stc
cmp
fsubrp
iret
push
int3
repz
jl
sbb
iret
mov
add
data16
xor
or
shll
xchg
outsl
les
je
in
jp
pop
add
or
jb
or
clc
test
mov
push
mov
xchg
jl
sbb
dec
bound
adc
gs
bnd
pop
ffree
pop
jo
daa
mov
inc
loopne
insl
fs
adc
push
leave
int3
lret
or
into
adc
mov
sbbb
int3
das
inc
jle
cltd
shl
lret
xor
sub
cmpb
pop
daa
dec
nop
mov
sub
add
pop
cld
divl
add
sub
mov
cmp
inc
jecxz
or
add
adc
xor
mov
xor
lahf
das
mov
divb
loopne
cmp
adc
movsl
mov
xor
cmpsb
and
dec
andl
cmp
dec
mov
fcmovu
andl
or
pop
dec
dec
hlt
sub
sbb
jp
sub
subb
and
jle
xchg
and
repz
jp
test
mov
xchg
popa
test
pop
jmp
ret
pop
adc
jecxz
push
sub
pop
mov
loope
fwait
aam
push
into
pusha
jge
or
mov
pop
lret
jmp
dec
push
pop
in
cmp
cmp
lcall
fstp
xchg
fsubrl
or
outsl
scas
daa
mov
imul
cld
test
xchg
pop
pop
mov
test
mov
test
insb
insl
xorb
mov
and
addr16
cmpsl
inc
or
hlt
pop
dec
push
repz
mov
std
pushf
xchg
cmpsb
jb
adc
sbb
xlat
dec
xor
xchg
jns
pop
pushf
icebp
inc
test
lahf
popa
movsl
ret
inc
cmp
inc
jp
xchg
repnz
dec
push
popa
ja
fisttps
aam
cmc
and
int
in
je
jmp
repz
test
pop
or
sub
or
dec
sbb
stc
pusha
mov
das
cli
dec
lods
jmp
in
sbb
or
loope
sbb
fbld
inc
repz
lcall
pop
jmp
in
push
push
sub
xor
push
or
imul
bound
mov
inc
incb
int3
push
ljmp
mov
mov
jno
cmp
xchg
and
add
mov
xchg
mov
dec
sbb
enter
push
fsts
mov
popa
xor
shll
sbb
std
cmp
jae
jb
ficomps
icebp
dec
into
xor
or
jg
dec
das
and
adc
and
sub
sbb
ret
leave
xchg
push
aam
dec
xchg
sbb
or
inc
ret
gs
pop
fwait
xchg
inc
ja
xchg
ror
xchg
insl
stc
adc
test
and
mov
int3
pop
mov
xor
shlb
imul
fwait
and
sub
sbb
pusha
dec
push
or
pop
xor
sub
rcll
fcomi
dec
push
cmc
repnz
xchg
es
and
test
clc
and
testb
jno
push
add
sub
or
fnstenv
mov
frstor
out
mov
lods
iret
cmp
fadd
push
out
xchg
lcall
inc
gs
or
or
movsb
xchg
dec
icebp
or
mov
adc
jbe
repz
fnsave
jg
mov
lods
popf
cmp
cmpsb
adc
loop
sub
es
js
test
add
push
ror
or
lret
cmpsb
out
add
mov
das
cs
inc
sarl
jno
testb
mov
add
mov
call
aas
test
call
xchg
jbe
aas
test
jnp
xor
inc
ss
out
mov
sbb
jno
add
les
jge
aaa
push
dec
rorl
mov
cwtl
cwtl
stos
ret
mov
cmp
test
test
push
adc
adc
test
jp
clc
ljmp
pop
test
lahf
das
shl
xor
cmpsl
jbe
and
or
ss
test
xchg
pop
push
hlt
pop
xor
lahf
dec
int
mov
je
mov
dec
jo
je,pn
enter
inc
mov
push
xor
inc
inc
jb
sub
and
pop
mov
mov
cld
cmp
push
shr
icebp
mov
sahf
bound
mov
adc
repz
xchg
sub
out
jle
inc
adc
sbb
mov
mov
jmp
fstpl
mov
rorl
or
movsl
sarb
jmp
inc
mov
and
or
push
shr
xchg
fs
sbb
cmp
addl
sbb
or
push
cs
dec
js
lret
or
jne
jp
inc
in
inc
mov
sub
add
jno
stc
lret
mov
ffree
or
sbbl
imul
shl
xlat
mov
push
mov
push
or
sub
pop
jae
xchg
mov
dec
sbb
xor
in
mov
out
in
inc
repnz
cmpsb
mov
xchg
out
lahf
add
imul
jo
jecxz
scas
jge
jmp
cs
aad
or
or
outsb
jg
pop
push
dec
gs
xchg
mov
addr16
addl
fidivrl
pop
ret
pop
push
ljmp
insb
aaa
subl
dec
xor
mov
arpl
cmp
or
lods
lods
loopne
xchg
das
dec
dec
cmp
imul
out
mov
adc
xor
push
test
adc
rorb
mov
or
push
sarb
lret
cmp
fnstenv
pop
inc
arpl
lds
and
call
movsl
mov
sbb
js
fxch
sbb
mov
loopne
jae
mov
clc
xchg
jo
mov
in
cmp
jns
ss
cmp
xor
dec
movsl
jmp
adc
and
jle
addb
sub
dec
ds
pop
xchg
insl
pop
jo
aas
jmp
fwait
ss
in
fwait
mov
daa
out
fidivrl
and
or
and
in
loop
jo
movsl
cmp
ds
push
outsl
dec
cmpsl
stos
xchg
in
push
cmc
lret
test
xchg
jae
or
ljmp
xor
sarl
rcl
lock
pop
adc
scas
iret
push
adc
cmp
hlt
cmp
push
xchg
dec
outsb
stos
jns
xchg
sub
cmp
adc
int3
sbb
add
mov
sub
or
fisttpll
and
sub
inc
fstpt
out
xor
jnp
cmp
xchg
pop
pop
stc
push
xchg
ss
ss
loopne
sub
faddl
and
dec
cmp
jbe
js
mov
or
or
adc
pop
repz
xchg
outsl
arpl
lock
push
dec
xorb
mov
mov
pop
mov
gs
fldenv
jmp
cmp
jecxz
daa
es
jns
xor
enter
rolb
jns
dec
dec
push
je
fisubs
divb
hlt
mov
cwtl
loop
repz
cmp
and
push
cs
xchg
pop
add
add
ret
xlat
mov
mov
out
aam
mov
cmp
dec
test
xchg
pop
mov
int
cltd
sarl
cwtl
pop
mov
xchg
fstl
leave
jno
icebp
inc
xchg
push
cmpsb
fisubl
mov
mov
and
push
xor
test
or
dec
aas
jge
scas
xchg
dec
dec
xchg
jecxz
popa
shll
or
das
xorl
addb
sbb
adc
pop
scas
adc
dec
jb
pop
fldenv
je
insb
or
je
lret
clc
cld
jo
mov
shlb
andl
and
and
cwtl
test
jg
pop
pusha
dec
mov
fcomip
xchg
pop
pop
daa
ljmp
insb
test
int3
repz
enter
mov
push
in
adcb
mov
cld
xchg
inc
jecxz
mov
lret
hlt
add
das
jnp
mov
pop
loop
stos
outsb
jnp
push
mov
mov
mov
mov
xor
out
bound
adc
pop
add
and
fdivs
cmp
ljmp
stos
mov
lret
xchg
push
mull
cmpsl
repz
cltd
lea
inc
inc
cmpl
insl
icebp
rorb
packuswb
mov
xchg
cmp
jb
gs
incb
in
out
insl
bound
shll
fdivrl
out
negb
add
addr16
outsb
rcl
jecxz
adc
ja
orb
pushf
xor
aad
jnp
jp
ret
dec
add
in
dec
xchg
mov
test
push
xchg
mov
and
loop
out
pusha
push
inc
or
lahf
cmp
mov
mov
lcall
sbb
lds
fisubs
and
fiadds
xor
fs
inc
maskmovq
imull
sti
decb
xlat
in
mov
or
xor
pop
and
fldenv
sub
inc
jne
ja
rcr
lcall
jg
movsb
in
dec
enter
jo
out
insb
jbe
insb
inc
in
push
iret
subb
je
dec
push
subb
jo
jo
push
mov
fs
mov
outsl
dec
xchg
push
add
inc
jp
jecxz
push
mov
fcmovne
test
jg
pop
push
clc
mov
out
in
add
pop
sub
rcrl
cmp
arpl
cmc
adc
cld
insb
mov
int3
or
inc
mov
push
or
add
pop
sub
leave
xor
sbb
lret
push
jns
call
out
mov
pop
out
adc
rcll
dec
xchg
xchg
fstpt
lret
pop
or
cs
inc
mov
dec
push
mov
jbe
faddp
xor
jmp
push
xlat
shll
sbb
and
lock
xchg
xor
ja
mov
out
test
fcoms
mov
imul
repnz
cmp
push
dec
arpl
push
adc
loop
call
pop
cld
fistpl
cmp
js
pop
push
fldl
mov
push
push
pusha
pop
daa
sub
dec
int
jmp
jmp
pop
jg
into
xchg
sbb
push
imul
pop
cmp
xchg
in
addr16
pop
mov
enter
xor
add
testl
nop
sahf
xchg
nop
xchg
pop
out
in
mov
mov
cmp
out
jecxz
push
jae
fstpl
or
xchg
fadds
test
cmp
dec
repz
pop
imul
pusha
ds
add
adc
mov
mov
lods
icebp
xchg
dec
stc
or
inc
mov
mov
shrb
sub
ljmp
enter
dec
or
int
pop
xor
popf
stc
and
fstpt
cmpsl
pop
adc
stc
lea
repnz
mov
xorb
popa
cwtl
mov
daa
inc
cmp
and
add
stos
insl
fisubl
inc
das
sub
test
ror
xor
pop
pop
aas
cwtl
pop
inc
cmp
pop
mov
cmp
ret
or
or
pusha
mov
dec
xchg
dec
dec
or
push
lret
iret
xor
mov
aad
rol
aam
std
loopne
dec
push
in
movsl
mov
std
subb
jle
test
dec
decb
push
push
clc
rolb
dec
rclb
mov
or
out
adc
insb
mov
mov
aaa
or
inc
outsl
or
push
aam
rcl
ljmp
repz
js
leave
push
mov
rorb
test
xchg
push
jbe
inc
push
repnz
sarb
jo
jecxz
add
hlt
dec
adc
mov
sub
scas
and
clc
ret
jnp
xlat
inc
lods
adc
push
adc
lock
dec
int
xchg
lods
lds
lods
lcall
mov
inc
or
mov
pop
dec
bound
stos
repz
jo
inc
xchg
outsb
xchg
ret
movlps
adc
shlb
jecxz
add
jg
and
popl
jo
gs
out
mov
icebp
cmpsl
sub
sti
lods
cmp
ja
sub
pop
jmp
mov
sub
jnp
xor
arpl
incl
xor
fdivl
sub
pop
mov
push
mov
adc
js
pushf
lret
sbb
andb
jle
cwtl
aaa
and
jnp
daa
jnp
es
test
cmpl
test
mov
and
push
adc
inc
rcl
test
push
into
repnz
gs
xor
inc
pop
lods
sub
movsl
ret
in
pop
jae
adc
push
dec
mov
mov
jo
in
stos
push
es
sahf
cli
jle
adc
fidivs
pop
cmpsl
inc
inc
lahf
pop
push
std
ss
sbb
lds
mov
adc
stos
add
lcall
scas
push
sti
add
js
mov
adc
mov
or
outsl
push
push
icebp
mov
mov
jne
lahf
in
add
stc
push
jne
iret
mov
das
mov
fwait
into
mov
sahf
scas
out
xchg
mov
push
sbb
jo
ret
jb
xchg
testb
shlb
add
jecxz
jmp
cmp
push
jecxz
jmp
loopne
dec
sarl
adc
pop
mov
pop
sahf
fildll
mov
sbb
pop
rcrb
das
outsb
mov
icebp
push
cmp
pushl
mov
add
rcr
repnz
mov
sub
add
adc
mov
jns
stc
adc
dec
sub
sbb
or
mov
add
or
pusha
movsl
nop
jle
mov
arpl
cs
inc
repnz
pop
mov
or
adc
fs
ss
push
mov
shrb
fdivs
stos
xchg
sub
inc
mov
cmpsl
pop
cmp
xchg
cli
adc
xor
pushw
andl
mov
or
aad
dec
xbegin
jne
jmp
push
jge
andl
jl
inc
jmp
repnz
mov
rclb
jae
xchg
rcll
shlb
cmp
pop
push
out
leave
test
std
ret
imul
fcmovu
sub
mov
insb
jne
aam
push
add
or
cmpl
and
in
addr16
sub
xchg
or
pop
pop
or
xor
push
or
or
sarl
jge
dec
fistpll
repz
mov
jl
js
ds
lock
and
adc
pop
lods
pusha
mov
data16
jg
testl
dec
loop
clc
lea
push
loopne
lds
pop
xorl
mov
test
jns
jl
mov
sti
mov
add
or
xor
cmp
adc
add
adc
and
add
notb
or
int
pop
xlat
sbb
int3
jnp
movsb
cli
dec
adc
jl
mov
jb
mov
xchg
or
cltd
outsb
popf
mov
jl
pop
test
out
incl
inc
push
inc
pop
push
jp
xlat
mov
aaa
mov
sarb
inc
xchg
fincstp
fcoml
or
icebp
popf
int
cwtl
sbb
sbb
adc
jp
insl
in
dec
imul
scas
adc
lea
iret
mov
insb
jmp
sbb
jnp
mov
fwait
xor
xor
pop
loope
mov
movsl
adc
fisubl
push
inc
int3
mov
sbb
dec
sub
sub
daa
ficompl
dec
iret
mov
jp
xor
out
xor
jl
dec
stc
mov
test
jb
lods
out
add
inc
and
xor
and
into
inc
jnp
xchg
xor
mov
fldl
aaa
jge
out
push
icebp
inc
rcrb
mov
cmp
ja
pop
jae
dec
and
lock
xor
cmp
in
outsl
aam
push
sbbl
pop
push
or
fwait
in
shrl
xchg
add
inc
lock
xor
mov
fdivr
lock
pushf
or
or
sbb
push
loop
ss
outsb
dec
sub
movsl
inc
movsb
xchg
mov
mov
dec
inc
sar
repz
mov
adc
jo
pop
lret
jae
cmp
inc
mov
movsl
push
movb
cmc
add
mov
jo
xchg
and
mov
bound
aad
xor
mov
out
sub
repnz
fidivs
mov
pop
fisubl
iret
dec
cmp
outsb
sub
fistpl
aaa
lds
fs
cmp
dec
jmp
cmpsb
ja
mov
push
aas
jecxz
decl
rcl
ret
push
notb
and
mov
inc
popf
fs
mov
jb
bsf
stos
add
sbb
adc
das
cmpsl
xor
adc
ficompl
hlt
stos
mov
mov
clc
inc
xor
or
rcrl
in
push
xchg
add
dec
xchg
cmp
cli
arpl
xor
xor
sub
in
sub
push
dec
xchg
mov
mov
xor
pushf
jns
or
aad
xchg
pop
das
rorb
aaa
mov
leave
mov
je
or
popf
orl
and
cmpsl
push
cwtl
lods
ret
mov
ja
xor
sbb
dec
mov
call
cmpsb
dec
lds
mov
push
inc
psubusb
xor
adc
push
dec
std
adc
jle
xchg
lahf
out
cld
cmpsb
pop
icebp
lock
scas
push
or
push
dec
scas
and
pop
sbb
mov
cli
inc
add
mov
lahf
xor
mov
mov
pop
sub
inc
sbbl
dec
pop
xor
int3
filds
jle
mov
xchg
sub
cmp
push
xchg
cmp
lcall
xor
dec
cltd
sbb
pop
pop
mov
jge
cltd
and
pop
and
call
pop
mov
data16
push
in
lret
cmp
inc
icebp
cmpsl
cmpsl
inc
leave
addb
arpl
ds
or
add
aam
hlt
xchg
fmulp
sahf
pop
sti
and
aad
mov
mov
cmp
outsb
sub
sbb
push
push
push
scas
out
mov
repz
hlt
je
cmp
xor
cwtl
inc
call
xor
jp
aas
adc
neg
push
sbb
cmp
pop
aaa
adc
arpl
mov
mov
sahf
into
faddl
sub
lock
mov
roll
pop
ret
movsl
cld
stc
mov
adc
xchg
insb
add
mov
xchg
add
pop
cmp
xchg
and
sub
adc
test
or
jbe
fcos
jl
lods
jae
pop
shrl
loop
out
pop
jno
push
mov
insb
pop
gs
fldcw
cmp
fmuls
pop
dec
std
pusha
mov
lret
mov
cmc
jmp
aas
lea
push
into
fs
lcall
push
fisubrs
popf
lea
in
cmc
jle
lods
inc
icebp
pop
ja
mov
pusha
data16
sbb
jbe
enter
filds
jle
pushf
mov
in
mov
sub
gs
mov
daa
ret
xchg
sbb
pmulhw
idivb
insb
mov
adc
jne
dec
or
pushf
xor
cmp
mov
rcll
mov
dec
cmp
mov
iret
xchg
adcb
loop
sub
mov
and
subl
mov
lock
ret
add
mov
mov
cwtl
jb
push
mov
mov
and
or
aad
pop
xchg
stc
inc
and
pop
iret
addr16
cld
loopne
cmp
jmp
inc
push
add
push
mov
test
std
jmp
cli
and
lcall
cltd
fs
inc
movsb
mov
pop
xchg
test
mov
mov
cmpsl
cs
ljmp
jecxz
and
lea
dec
test
push
lock
dec
mov
mov
lcall
orb
ja
add
jb
fistpll
inc
xor
ljmp
cli
adc
jecxz
ljmp
jae
xor
xor
jl
outsl
loope
push
dec
fs
or
xor
fistpll
pusha
sarl
mov
cmp
test
lcall
push
mov
imul
aas
mov
cmp
cmp
test
xlat
hlt
jmp
test
popf
cld
ret
ds
insb
mov
xchg
push
clc
sbb
out
mov
sub
cmp
xchg
in
pop
mov
jmp
in
in
dec
pop
cmp
inc
sti
sbb
fs
or
and
mov
rcr
sbbb
xchg
cwtl
sub
popa
cmp
cmpsl
adc
xchg
mov
cs
inc
pop
gs
cwtl
pushf
sub
dec
push
cltd
aaa
ljmp
sbb
cmp
push
or
insl
mov
dec
fildl
push
insl
jae
mov
test
ret
xor
fstl
dec
nop
dec
ffree
mov
sti
inc
lcall
cmc
subl
test
inc
aam
mov
test
imul
in
lcall
jne,pn
jns
jns
mov
leave
ljmp
jno
testl
ja
lret
das
pop
jno
or
pop
and
and
push
cmovnp
mov
aaa
push
inc
test
jle
mov
push
fildll
xchg
lahf
mov
pop
rcll
mov
jns
stos
leave
pop
inc
les
call
mov
cwtl
xchg
mov
iret
loopne
and
pushf
adc
mov
idivb
mov
popa
dec
vaddsubpd
sbb
sbb
or
outsb
pop
push
add
jle
or
push
jo
dec
movsb
jecxz
jle
jmp
ss
pop
push
or
xor
popf
and
push
call
cmp
subb
cwtl
cmpsb
and
and
jl
xchg
and
mov
jb
mov
xlat
jl
scas
adc
pop
rolb
int
xchg
inc
out
mov
repz
jae
push
fnstcw
test
aad
dec
lods
lcall
add
and
stos
xchg
xor
jae
inc
mov
jns
shrl
lds
jno
mov
int3
push
sub
mov
data16
or
lea
push
mov
and
pop
adc
lea
inc
mov
rorl
jge
xor
sub
mov
lfs
out
sub
inc
xchg
lea
xor
xorb
aam
aaa
xchg
fldcw
push
add
mov
pop
scas
jne
wrmsr
xlat
daa
and
enter
icebp
int
icebp
mov
arpl
add
scas
pop
fadds
fadd
or
in
adc
push
dec
or
mov
cltd
xchg
xor
push
mov
xchg
xchg
push
into
fsubr
or
pusha
shll
subb
fcoml
loopne
in
jb
jns
pushf
shrl
mov
inc
std
push
mov
push
xchg
jl
stos
sahf
and
pusha
inc
sar
push
stc
sti
mov
fs
std
push
adc
pushf
lea
es
xchg
mov
xchg
jmp
loop
cs
push
addr16
aaa
push
sub
lahf
inc
iret
cwtl
lock
ffreep
dec
repnz
xchg
test
push
jmp
sbb
pusha
fisttpll
push
or
shl
mov
push
adcl
cmp
test
cmp
jecxz
sub
ret
scas
lret
mov
cmp
je
xchg
cmpsl
and
shll
mov
cld
and
in
das
les
xor
cs
mov
aam
add
fidivs
inc
shll
scas
xor
and
add
sub
add
in
enter
sbb
rorb
jae
mov
aad
cmp
mov
cmp
call
jmp
cmpsl
leave
and
test
test
popa
xchg
clc
mov
push
clc
cmpsl
bound
sahf
inc
addl
or
clc
xor
stc
lods
inc
cs
push
jl
jbe
les
lret
or
sbb
notl
push
in
ss
xchg
out
xchg
mov
push
inc
stos
mov
lret
dec
inc
in
stos
pushf
daa
push
pushf
jne
add
iret
pop
add
loop
and
mov
jbe
aad
lret
push
outsb
or
push
sbb
test
or
iret
imul
xchg
cmp
jbe
je
mov
insl
stos
inc
movsl
inc
setne
lret
lret
mov
mov
aaa
jns
jmp
test
and
pop
push
cltd
inc
xchg
fldcw
xchg
push
cmp
add
lcall
sahf
jl
mov
adcl
push
mov
sub
psraw
repz
popf
and
push
dec
push
or
lahf
mov
lahf
xchg
test
pop
lea
movsl
push
std
stos
gs
dec
adc
ds
lods
xchg
cmp
ja
sbb
inc
or
xor
adc
aad
push
loope
lea
outsl
rclw
dec
shlb
lods
imul
loop
subl
andl
mov
call
sbb
fldl
mov
dec
scas
insl
cmp
int3
cwtl
sbb
inc
add
movsb
out
std
xchg
and
mov
out
mov
jnp
jle
mov
lods
mov
push
loope
setle
cmp
or
sbb
sub
push
repnz
push
mov
jp
mov
repz
xchg
add
and
and
adc
test
adc
adc
xor
or
mov
in
xchg
popa
and
xchg
xor
mov
jbe
sbb
mov
jle
ret
sbb
icebp
jmp
adc
sub
add
outsb
mov
mov
cmpsb
ljmp
ljmp
shlb
scas
jmp
jp
enter
pop
test
adc
lret
cmp
cmc
xchg
and
lods
cltd
imul
cs
cld
dec
cmp
cmpsl
mov
xor
jmp
imul
and
adc
pop
pop
fnsetpm(287
mov
adc
fs
mov
xchg
ljmp
mov
insb
inc
cld
mov
push
inc
cltd
incl
lret
stos
icebp
stos
pop
sbb
cmp
cmpsl
lahf
mov
cmpsl
adc
sub
gs
inc
jnp
xor
lock
sbb
mov
mov
int3
negl
rcrb
ljmp
adc
test
jecxz
mov
xor
inc
push
ss
aas
lret
mov
stc
jecxz
ljmp
mov
test
in
mov
movsb
xor
addb
cmp
sub
aaa
lds
pop
pop
aaa
cltd
pop
testl
sbb
pusha
fs
mov
ljmp
je
dec
movsl
fstpt
out
push
outsb
xchg
adc
pop
jae
pop
lock
stos
popa
cmc
aam
in
xor
xor
das
push
sbbl
sub
xchg
mov
push
ss
push
clc
mov
outsl
cld
xchg
sub
sub
sti
dec
cli
mov
push
es
je
scas
das
sarl
in
adcl
jno
ret
clc
jg
xor
xchg
cmp
int3
shrl
cmpsb
dec
mov
les
out
cltd
arpl
cmp
push
popa
pop
pop
push
sub
mov
adc
outsl
je
pop
aas
push
gs
push
push
sbb
push
ret
shrb
adc
out
inc
gs
addr16
sbb
arpl
insl
sbb
cmp
scas
lock
xlat
scas
outsb
test
insl
cmp
icebp
and
mov
aad
and
cmp
sub
xchg
int
xor
ret
pop
int
jne
pusha
sahf
push
mov
xor
push
push
pop
cmp
test
adc
and
add
stc
or
mov
sahf
sti
xchg
loopne
aaa
sbbb
test
xorb
loop
aam
hlt
int
outsb
cmp
sub
test
loopne
in
inc
pop
aas
pop
mov
test
pop
jle
fsubl
push
sbb
rcl
and
dec
ss
mov
insl
jne
imul
sub
sub
sub
dec
or
dec
popf
dec
loop
lods
in
mov
lds
ss
adc
sub
or
repz
test
or
xor
insl
lods
jns
sbb
mov
dec
fcomp
xor
es
push
stos
aam
add
popf
or
push
stos
xor
call
shrb
cwtl
xchg
data16
cmpsb
inc
dec
push
lret
mov
push
cwtl
into
add
jg
xor
mov
into
pusha
jecxz
xorl
test
shlb
bound
stc
and
add
out
in
dec
sbb
adc
lcall
out
push
enter
sub
pop
sbb
mov
fists
ds
sub
js
adc
insb
sbb
adc
mov
add
gs
xor
shrb
dec
xchg
jb
jl
fs
pop
cmc
pop
lods
ss
aam
and
addr16
mov
out
pop
cmp
sbb
shl
mov
xchg
sbb
push
call
cld
movsb
xchg
dec
dec
sarl
fcompl
or
in
insl
flds
aaa
jns
test
adc
inc
mov
or
pusha
push
cmp
and
fisubl
add
mov
icebp
fmulp
xchg
ret
xor
sbb
leave
div
fdivrp
pop
sti
pop
aaa
cs
xchg
nop
inc
cmp
mov
decl
stos
gs
sahf
insl
mov
sub
jb
dec
ror
outsl
ljmp
xchg
fsubs
mov
push
jb
jmp
sarl
fs
jle
ds
iret
cmc
aaa
cmc
sbb
popl
push
push
mov
adc
popf
jb
or
push
arpl
out
jno
pop
pusha
cmpsb
aaa
stos
mov
or
adc
xlat
inc
mov
mov
es
push
xor
cmp
dec
fwait
icebp
or
and
aad
inc
sbb
sub
fmulp
flds
xchg
sbb
adc
inc
mov
xchg
add
add
mov
cmpsb
ljmp
rcrb
movsl
xor
mov
add
aad
lret
xchg
jnp
push
jl
scas
cmpsl
and
push
in
les
and
jge
add
xor
cmovbe
inc
out
lahf
pop
fnstenv
pop
fdiv
dec
mov
loope
jns
push
cld
int3
and
test
or
arpl
in
dec
in
xchg
push
jno
stc
dec
adc
or
shr
sbb
int3
lods
sbb
mov
mov
stos
jae
adc
push
loopne
fs
mov
scas
in
push
mov
addr16
sub
xor
add
xchg
daa
jo
stc
insb
inc
jbe
fwait
xchg
xor
xchg
fdivr
outsl
xchg
xor
mov
rclb
scas
sub
std
aas
pushf
testl
push
stos
out
mov
mov
or
scas
insl
or
lea
aas
les
sahf
mov
push
stc
cmp
ljmp
add
loopne
push
sub
hlt
push
cmpsb
adc
fildll
and
enter
cwtl
lea
cltd
lods
ljmp
mov
cmp
or
xor
push
sbb
iret
jp
xor
inc
idivb
and
mul
cmp
or
dec
or
dec
sub
mov
mov
out
mov
sar
sub
and
or
xlat
fmul
pop
addr16
push
dec
int
add
inc
mov
or
pop
pop
jne
jmp
xor
jmp
and
lds
cmc
js
ja
xchg
jmp
adc
xor
repz
jo
jp
xchg
rcrl
decb
shrl
pop
pop
push
addb
lods
cmpsb
jbe
cmp
jns
scas
jne
test
inc
ss
into
dec
add
nop
add
in
mov
xor
pop
xchg
adcl
mov
stos
xlat
ret
add
fmul
xlat
sbb
fldcw
push
dec
test
aad
add
and
leave
orb
scas
dec
popf
pop
xlat
mov
ss
js
sbb
sub
test
popa
js
cmp
lods
lods
pushf
and
push
xchg
add
popf
arpl
xlat
mov
mov
js
push
push
mov
cmpl
sbb
out
lahf
push
pop
mov
adc
sbb
outsl
mov
repnz
adc
pop
pop
subb
fisttpl
shll
enter
sub
cvtpi2ps
fisttps
lcall
cli
push
dec
sub
ljmp
in
pop
cmp
js
jmp
movsb
cld
add
hlt
mov
or
subb
sahf
fwait
leave
add
xor
cmpsl
shlb
xor
mov
mov
mov
int3
rclb
test
pushf
pop
loope
mov
out
rcrb
loope
ret
adc
jne
sbb
test
jae
aas
xchg
fnsave
xchg
cmp
mov
mov
dec
jmp
cmp
ret
outsb
pusha
add
add
outsb
vrsqrtss
aad
inc
adc
jp
adc
adc
daa
sbb
xlat
mov
adcb
push
es
outsb
mov
cli
in
lret
ds
cs
mov
fstps
mov
mov
call
pop
cmp
sub
jo
lret
cmpsl
and
sub
sbb
outsb
add
lods
mov
jecxz
jb
into
stos
jecxz
jmp
pop
xor
jge
jne
shll
cmc
hlt
mov
mov
lret
sbb
sahf
imul
jle
mov
lret
mov
push
mov
testb
pop
push
ret
jns
test
int
jo
das
je
rcl
cmp
inc
mov
ss
popf
and
inc
cmp
mov
mov
push
xchg
and
mov
push
or
int3
roll
jmp
out
xchg
fadds
mov
shll
mov
push
push
adc
aad
push
insl
cmp
pusha
in
and
out
and
int
xlat
in
or
sub
pushf
ljmp
push
xor
pop
stc
and
lcall
incb
idivb
cmpsl
inc
aas
inc
andb
std
ss
imul
adc
es
popa
or
xlat
push
aad
jno
test
rcrl
xchg
cmp
add
and
lahf
test
pop
mov
inc
pop
lcall
call
mov
std
mov
inc
dec
ljmp
repz
jbe
and
lahf
jmp
add
test
push
popa
sub
aas
jnp
movsb
lods
and
jne
cmpsl
mov
push
push
testb
aaa
pop
push
mov
push
test
pop
std
out
hlt
outsl
mov
pusha
sti
sbb
inc
inc
cmp
cli
scas
inc
xor
push
lods
sbb
cmc
xor
ficoms
xor
int
jle
scas
push
outsb
std
push
mov
divl
xchg
test
iret
add
pop
or
xlat
das
movsl
sbbl
gs
add
jnp
icebp
rol
jno
les
fcomip
hlt
inc
mov
mov
dec
add
adc
xlat
imul
dec
int
clc
mov
out
xchg
push
fsubs
ljmp
push
dec
mov
lods
lods
jbe
jg
jnp
dec
mov
pop
and
cmpsl
or
dec
dec
adc
push
adc
and
cli
jns
ja
and
int
ljmp
jo
bound
xor
and
popf
js
jnp
dec
xchg
jmp
in
mov
fs
and
cmpsb
pushf
mov
sbb
divb
stc
mov
enter
adc
repnz
adc
or
cld
loop
cld
dec
cmpsl
xor
lahf
mov
mov
das
mov
push
retw
fimuls
sbb
into
lea
mull
xchg
cmc
add
adc
push
push
test
xlat
out
iret
lods
jp
mov
dec
faddl
stos
mov
dec
sahf
std
popa
sahf
pop
cmp
fs
int3
out
mov
dec
into
jbe,pt
mov
xchg
dec
fdivrl
adc
sbb
jmp
inc
ljmp
xor
sbb
lret
lods
negl
mov
push
sahf
xlat
lods
add
int3
xchg
outsl
outsl
pop
or
pop
jg
add
int
add
stos
mov
fldcw
fsubl
cmp
mov
jmp
mov
inc
push
sub
enter
popa
sti
and
aas
and
rcrb
pop
jp
pusha
cmp
pop
aaa
adcl
add
nop
mov
cli
aad
add
div
push
mov
sub
adc
or
lock
add
popa
and
xchg
cmpsl
mov
imulb
ror
movsb
xchg
jnp
mov
enter
daa
add
xor
inc
sbb
enter
pushf
andl
add
mov
push
cmpb
pop
mov
lahf
lods
sbb
pop
xchg
mov
or
loop
test
dec
mov
adc
int3
or
mov
or
fcoml
dec
je
hlt
xor
popa
xlat
or
out
lock
mov
lahf
sbb
testl
jmp
or
rol
cmp
rolb
and
sar
mov
nop
push
in
mov
mov
lea
push
lea
dec
and
les
adc
or
mov
mov
int3
pop
fidivrs
call
test
xchg
adcb
test
lcall
mov
loop
out
pop
addr16
cli
mov
test
mov
aam
int
enter
or
push
loope
je
mov
xchg
movsb
enter
aaa
dec
xor
jmp
sbb
adc
scas
ljmp
pusha
pop
mov
pop
clc
pusha
inc
fnstenv
jl
add
or
jmp
xor
jl
mov
cmpsl
push
aas
jl
pop
sarl
dec
js
aad
adc
pop
movsl
mov
mov
dec
xor
xor
rclb
add
stc
jecxz
mov
xchg
jb
test
mov
sub
lods
call
andps
or
shll
repz
lcall
jne
repz
cmp
cs
jecxz
push
cld
mov
dec
and
pusha
cmp
frstor
rcr
nop
mov
shl
add
dec
dec
dec
repz
mov
inc
xchg
xchg
xchg
push
aas
out
push
push
jg
mov
jg
xor
sti
aad
add
jmp
add
and
xor
lods
ficoml
mov
xor
in
hlt
jnp
pop
call
adc
adc
jge
dec
add
adc
loop
int3
sti
and
pushw
pop
or
sbb
shrl
movsb
mov
std
jl
outsb
push
xchg
out
sahf
je
and
mov
pop
mov
arpl
jmp
adc
sub
imul
mov
rcl
or
idivl
aad
push
out
pop
adc
and
bt
lods
mov
xor
cmp
cmp
in
popf
stos
cmpsb
adc
xchg
mov
cmpsl
lods
fwait
loopne
mov
or
pop
fwait
jge
jno
jns
push
jno
es
in
xchg
jo
aas
leave
mov
xchg
push
and
mov
cmpsl
imul
ficompl
rolb
ret
push
mov
mov
adc
and
cmpsl
mov
loop
xor
add
and
mov
xchg
mov
stos
xchg
push
ud1
adc
leave
or
test
push
aaa
test
lcall
ret
aas
orb
fwait
lea
inc
mov
add
sarb
adc
pop
cs
pop
insb
iret
adc
mov
mov
stos
jno
xchg
hlt
lcall
aam
mov
divl
dec
push
repnz
push
sub
mov
inc
movsb
xchg
lea
xor
les
cmp
inc
dec
mov
adc
jo
xchg
mov
nop
rorb
push
mov
mov
repz
jno
pop
adc
out
mov
mov
aaa
mov
mov
fwait
scas
mov
js
shl
popf
aad
jp
loopne
xor
jge
loop
js
pushf
movsb
daa
les
and
pop
in
mov
loop
test
mov
mov
push
xchg
ficoms
mov
xchg
test
mov
xchg
xor
imul
push
lahf
cmp
dec
imul
xchg
mov
jo
js
in
inc
sbb
in
leave
into
out
std
pop
ret
stc
push
cmp
fcmovbe
imul
out
inc
lret
fsubrl
stos
pop
cmp
addb
mov
test
aad
push
mov
fdivl
enter
mov
insl
iret
mov
test
lods
xor
mov
cmpsb
pop
cwtl
adc
add
adc
imul
mov
sbbb
les
cli
idivl
jge
mov
pop
mov
mov
ljmp
sbb
pop
les
insb
outsb
movsb
ret
shl
sbb
shl
mov
mov
ror
dec
dec
into
and
repnz
ror
cmpsl
sub
iret
test
insl
xor
xor
orb
enter
xchg
fiaddl
popf
sti
lods
movsl
sahf
imul
xor
xchg
movsb
lahf
push
pop
pop
push
dec
loopne
mov
aas
and
repnz
pop
cmpsl
loope
mov
leave
dec
mov
sub
sbb
nop
and
and
jne
pop
idivb
jmp
gs
or
lds
ret
sub
sbb
dec
insb
mov
sbb
mov
cli
cmc
adc
movsb
xorb
test
cmp
popa
ret
or
mov
sub
mov
imul
fs
imul
in
fsubs
insb
xchg
jo
sub
out
sahf
adc
push
and
mov
repnz
sub
push
ljmp
and
inc
jae
cmp
xchg
les
hlt
pop
sbb
mov
repnz
insb
or
out
lcall
fstp
add
adc
push
push
and
inc
data16
aaa
std
inc
fdivr
pop
adc
push
jno
jo
rclb
iret
push
stc
pop
adcl
ficomps
cli
cmp
jo
mov
sbb
mov
lock
and
sbb
out
in
shr
cmc
and
es
mov
shrb
jns
and
int3
adc
insl
sub
adc
mov
dec
push
cmc
in
insb
fdivs
sub
int
cmp
aam
or
or
aas
xchg
mov
mov
popa
xor
inc
inc
test
jno
shrl
fimuls
pop
jmp
pop
test
xchg
mov
cmp
out
lods
sbb
rolb
mov
xchg
in
out
decl
into
xor
sbb
jb
push
and
lds
dec
jb
jns
dec
inc
cmp
xor
push
jns
icebp
stc
sbb
push
vpsubb
fadds
out
sbb
xchg
adc
push
popa
imul
mov
or
push
cwtl
lahf
shlb
arpl
sbb
jb
in
jmp
push
not
mov
fsubrl
test
mov
and
fistpl
repz
add
repz
popf
test
dec
mov
push
lcall
or
out
ja
aas
add
out
xchg
dec
mov
mov
sub
xor
int3
shl
dec
or
lret
inc
mov
ficoms
repz
fnsave
add
push
mov
mov
xchg
add
mov
fisubs
xchg
fisubs
mov
add
lods
je
sub
jb
repnz
mov
mov
scas
lret
pop
int
push
jge
jo
or
mov
enter
sub
call
js
mov
or
cmp
pop
push
test
into
cltd
xchg
and
fcmovu
sub
push
cltd
pushl
add
int
ss
cwtl
dec
mov
dec
fsubrl
loope
jns
sbb
dec
add
mov
sbb
ret
icebp
dec
fwait
loopne
push
aad
movsl
add
ja
mov
test
fucomp
push
push
push
dec
dec
mov
loop
push
dec
pop
pop
outsb
andb
push
imul
dec
xchg
subl
inc
push
stos
cld
stos
jae
cwtl
pop
dec
xor
push
out
notb
cwtl
out
cmpsb
shrb
cli
cltd
ja
sub
bound
insb
mov
insl
insb
popf
insl
sub
cmp
or
lret
loope
cmpsb
xchg
lds
xchg
dec
add
aad
gs
ljmp
add
jae
pop
xchg
test
push
push
dec
jg
loopne
mov
aaa
in
lods
sbb
cld
sbb
dec
dec
mov
jae
es
fidivrs
xor
cmpsl
iret
pushf
push
shll
mov
out
or
out
cmp
lcall
shl
jae
test
cmp
add
jl
popa
jmp
andl
ljmp
push
lcall
loop
xchg
dec
jmp
adc
mov
data16
pop
pop
shlb
jae
filds
sbb
xchg
jecxz
jns
int
test
out
loopne
push
or
addr16
fimull
sub
push
repnz
pop
adc
dec
cltd
mov
gs
adc
jl
arpl
sti
cmp
je
loop
out
loopne
or
mov
adc
mov
cmp
xchg
lods
call
mulb
pushf
inc
xchg
mov
enter
scas
push
js
setl
ds
fidivl
mov
popf
in
mov
es
sbb
mov
and
repnz
shlb
enter
pop
in
inc
repz
push
adc
inc
aaa
or
cmp
xchg
adc
mov
cltd
std
testb
fisubs
xchg
xchg
sti
pop
or
xor
in
loop
jb
ror
xor
xchg
and
adc
dec
data16
or
push
xor
sbb
call
sbbl
movsl
cmp
ss
push
push
xchg
adc
cmp
mov
xchg
cmp
out
and
pop
out
cs
xor
daa
sarb
inc
jge
xor
lret
testb
fcoml
xchg
test
cli
cmp
cmpsb
out
mov
ret
lcall
mov
hlt
sbb
cmp
add
jne
mov
rep
mov
outsb
sbb
popf
cltd
fwait
mov
jge
pushf
lods
insl
out
dec
add
jle
in
scas
idivl
push
popf
xor
pusha
popf
into
and
pop
dec
sbb
pop
test
push
mov
push
pop
pop
loope
mov
daa
mov
pop
xchg
fcmovnbe
sub
loop
jb
xchg
hlt
xor
fs
lds
repz
pop
xor
out
pop
aam
loope
call
scas
inc
fdivl
js
xor
sahf
adc
mov
mov
add
xchg
add
sbb
ljmp
addr16
pusha
sahf
stos
push
add
add
lea
sub
jge
jo
ljmp
mov
push
xchg
lcall
xchg
xorl
inc
and
fcoms
icebp
inc
lret
ja
inc
mov
daa
negl
jle
adc
add
lret
sarl
and
mov
ror
rcrb
outsb
push
and
mov
xor
mov
push
nopl
sbb
loopne
and
rol
incl
das
pop
xor
jl
jo
xor
jo
repz
jecxz
mov
jno
inc
inc
mov
adc
mov
or
outsl
xor
shlb
pop
fidivrs
mov
idivl
cwtl
xor
push
adc
mov
out
push
dec
aad
mov
sub
cmp
mov
dec
and
orb
xchg
or
push
decl
jns
pop
mov
jnp
test
mov
or
aam
xchg
cltd
or
test
fs
or
mov
cld
enter
repz
es
loop
movsb
data16
fimuls
mov
jns
pushf
pop
xchg
addr16
inc
mov
jge
pop
test
imul
lret
out
mov
jg
sti
jbe
pop
ret
or
jecxz
dec
pop
rcrb
or
mov
js
adc
mov
ds
es
add
fsubrl
aad
sbb
rolb
ret
movsl
jno
adc
cmp
adc
dec
test
adc
fmulp
pop
stos
lahf
dec
mov
lahf
cmp
popa
fs
sub
pop
and
lods
sub
cmp
sub
dec
setnp
pop
cld
lcall
js
out
or
scas
lods
loope
or
mov
daa
mov
pop
mov
out
repnz
sarb
je
dec
lods
push
js
xor
gs
push
shlb
ficoml
lds
ret
outsb
int3
inc
shrl
mov
lods
mov
mov
pop
fmull
arpl
pop
and
jns
xlat
dec
cmc
in
lds
bound
sbb
daa
pop
ljmp
divl
adc
or
mov
mov
sbb
mov
sti
pop
add
inc
nop
adc
push
add
pop
push
lds
xchg
inc
sbb
mov
fs
in
xchg
adc
fwait
lcall
imul
fsubrs
adcb
pop
pop
dec
inc
push
push
inc
xchg
add
add
xor
insb
test
push
imul
xor
cmpsl
jb
cmp
stc
in
cmp
push
shll
jne
adc
adc
or
xchg
and
fdiv
mov
sar
mov
ret
rolb
cmp
cmp
loopne
jge
or
lcall
mov
pop
dec
jmp
das
push
jno
pop
addr16
imul
mov
into
mov
pop
mov
int
rcr
data16
sub
rcrb
hlt
rorl
cmp
fs
aam
inc
sub
pop
push
fucomp
jae
jp
daa
sub
stos
and
andb
sbb
cmp
sub
imul
lret
scas
orl
push
sub
mov
test
out
out
sbb
dec
aas
mov
test
mov
leave
push
cltd
xor
sbb
cmpsl
push
inc
gs
les
jp
xchg
lods
lea
xlat
and
pop
iret
stos
push
jp
mov
nop
mov
push
pop
xor
or
push
fsubl
loopne
jne
jl
aad
and
add
outsb
adc
jns
inc
and
mov
loop
insl
mov
scas
insl
fisubs
mov
pop
out
xchg
jno
into
popf
gs
xor
rcrl
dec
cld
jp
cmpsl
js
push
daa
mov
sub
cmpb
lods
mov
les
and
lds
push
loop
pop
xchg
lahf
and
adc
push
inc
ret
lods
cmp
ret
mov
lret
sbb
add
mov
pushf
adc
ss
push
cmpb
cmp
dec
mov
lahf
pop
lahf
pop
pop
mov
out
dec
sbb
loope
push
xlat
in
cs
dec
xor
out
push
adc
lock
gs
inc
lock
sub
push
cli
push
jle
pop
inc
popf
pop
mov
push
ror
or
aaa
imul
and
addr16
cmp
jo
mov
int3
mov
or
cmpsl
movsl
cmp
addr16
push
ficoml
movsl
ficompl
pop
push
out
push
push
test
mov
adc
es
sahf
int
loop
cmp
test
shlb
push
sub
cs
pop
sub
mov
out
xchg
sbb
mov
out
adc
mov
xchg
notb
mov
data16
mov
lahf
outsb
add
divl
xchg
adcb
xor
pop
sti
jb
mov
xor
jp
daa
mov
sbb
lahf
icebp
addr16
test
inc
iret
mov
sbb
fcoms
mov
es
inc
cmp
jb,pn
ret
mov
pop
inc
ja
ret
sub
dec
mov
out
push
jae
adc
cmp
jmp
mov
pop
jb
mov
push
add
cmp
mov
mov
add
push
pop
mov
jecxz
stos
dec
push
ds
shl
fsts
cmp
mov
adc
arpl
inc
xlat
mov
addr16
out
fcompl
xor
xchg
lods
repnz
xlat
test
push
mov
gs
pop
outsb
xor
and
pop
xchg
sub
or
cmp
mov
int
cmc
fistps
aas
je
ret
push
sub
loopne
dec
pop
clc
sbb
into
jb
mov
cmpsb
sbb
sbb
xchg
push
aad
cs
fnstcw
ret
aas
cld
push
push
xor
xchg
je
adc
sarb
in
stc
inc
fucomip
out
addr16
pop
test
cmp
movsl
adc
jns
jecxz
fsubl
ret
or
adc
and
jp
popf
inc
cmp
ljmp
or
xchg
xor
fwait
dec
or
loop
call
popf
loop
add
cmp
and
call
leave
or
in
jl
add
and
cmp
cmpb
test
add
fimull
sbb
xchg
add
test
xlat
int3
sub
dec
mov
fmull
push
fistps
arpl
jg
pushf
sbb
or
stos
sbb
and
movsb
unpckhps
add
sbb
and
xor
dec
or
jmp
dec
pop
pop
pushf
pop
jnp
test
and
jbe
xchg
xor
jmp
jb
popa
rcrb
inc
add
andb
push
mov
mov
ljmp
adc
jb
sub
jecxz
and
mov
test
shrb
and
push
pop
nop
push
mov
mov
mov
filds
fistl
xchg
int
leave
xchg
or
or
xchg
lods
push
aad
sbb
je
in
movsb
jnp
xor
into
sbb
xchg
push
dec
paddw
enter
stos
mov
push
je
inc
daa
inc
das
repnz
push
mov
cmp
dec
pop
sub
inc
push
sbb
xor
arpl
inc
lock
mov
addl
pop
jne
push
dec
rcr
mov
out
dec
mov
mov
mov
or
jecxz
and
adc
sub
push
mov
shlb
scas
xchg
xor
pop
xor
jb
roll
jmp
shll
enter
push
jae
movsl
xchg
out
aad
xchg
ret
test
jne
add
jg
sub
sub
scas
fidivs
pushf
movsl
ljmp
test
test
pop
loop
cmc
aaa
mov
push
add
inc
sub
sbb
lods
cmp
push
mov
das
push
fs
in
in
das
add
add
pop
xor
divl
lret
leave
inc
adc
add
clc
push
xchg
dec
clc
jae
loope
cmp
pop
lret
in
fstl
fsubs
in
addb
aad
bound
rcrb
pop
je
aam
mov
outsb
jle
ljmp
sbb
ds
and
stc
ret
dec
jecxz
pop
pop
mov
add
add
test
xor
push
jns
xchg
into
cli
mov
lret
daa
push
in
sbb
xor
jb
mov
sbb
dec
push
add
sbb
sbb
icebp
adc
outsb
fildll
add
push
jl
scas
in
jae
sbb
subb
iret
xchg
idivl
sub
jb
mov
push
adc
mov
mov
mov
mov
push
xor
es
fdivrl
xchg
push
jo
mov
and
push
push
sub
jo
mov
mov
fimuls
aaa
or
pcmpeqb
adc
pop
dec
inc
insb
test
mov
adc
pop
mov
mov
nop
in
ljmp
das
cli
jecxz
neg
inc
or
int3
dec
xor
ror
dec
xor
aas
xchg
in
jae
push
push
test
in
inc
add
outsb
movl
pop
jbe
mov
mov
xlat
inc
lock
mov
insl
push
ja
or
outsl
out
outsl
lret
stc
sub
sub
repz
sub
movsb
and
enter
xlat
out
std
or
pushf
leave
xor
int3
pop
jo
imul
dec
sbb
sar
loopne
inc
test
aaa
mov
mov
dec
aas
arpl
sti
jb
sti
stos
fldenv
jbe
test
push
test
enter
cmp
scas
imul
jne
mov
push
mov
stos
fs
outsb
sub
inc
cltd
pusha
outsl
orl
or
popf
stc
mov
inc
cmp
sahf
ficomps
loope
in
es
incb
xor
dec
and
int
aam
movsb
xchg
lahf
sahf
test
sbb
adc
add
hlt
fnstenv
sbb
lret
hlt
cmp
xchg
out
adc
repnz
movsl
subl
cmp
lret
fiadds
sti
cmp
xorl
push
mov
or
sbb
dec
push
iret
loopne
and
adc
popa
call
out
adc
sbb
repz
jge
movsl
mov
mov
ds
mov
sbb
mov
rcl
cmc
cmp
insl
or
push
vpunpcklqdq
stos
mov
ljmp
add
cmpsb
push
and
aas
push
lret
test
outsb
xchg
jg
jo
add
push
pushf
clc
and
mov
xor
push
mov
mov
cs
fld
pop
shlb
lock
dec
lods
mov
or
fcmovb
test
inc
ds
adc
xchg
rcr
mov
and
push
pop
fldenv
ljmp
pusha
movsb
add
or
and
stos
adc
pop
add
out
pop
xchg
xor
mov
cmp
pusha
cmp
cs
inc
inc
aas
js
pusha
ljmp
xor
je
pop
push
sbb
in
shl
stos
fstpt
sub
outsl
xor
dec
add
scas
ss
mov
lods
adc
mov
mov
cmp
loop
push
xor
sbb
mov
in
rol
jno
daa
fcomip
mov
jb
in
stos
arpl
test
incl
out
addl
sbb
sti
cld
das
fdivl
out
and
shll
push
sbb
inc
nop
ljmp
xor
lcall
out
sbb
imul
cmp
cltd
inc
inc
xor
lods
lock
out
push
in
es
adc
pop
cmp
andl
jmp
push
insl
pop
loope
sbb
pop
pop
fiaddl
mov
lock
sub
ret
in
loope
loop
sub
jns
sbb
roll
push
jne
lahf
adc
xchg
stos
aas
xchg
cli
add
or
and
aam
movsb
nop
add
mov
mov
mov
pop
xchg
add
les
arpl
xorl
jb
lcall
add
adc
dec
pop
sbb
jae
addl
xor
aad
ss
ret
xchg
mov
fcom
xchg
aas
jecxz
jno
mov
mov
mov
flds
clc
popa
mov
or
daa
mov
cltd
and
push
out
fistpll
ret
or
aas
mov
add
cwtl
pop
xchg
gs
adc
xor
std
mov
and
or
xchg
xor
std
ret
ja
lods
or
jge
mov
in
imulb
cmp
popa
and
push
addr16
pop
mov
ss
mov
rcll
mov
add
xor
cld
or
push
add
loopne
xchg
dec
scas
mov
ret
and
loopne
xchg
jo
rcrl
ret
test
arpl
out
mov
lret
and
scas
rorl
pushf
and
pop
ret
dec
push
or
mov
je
cmp
or
push
mov
pop
jae
xor
aam
fsubrs
xor
lret
push
iret
insl
pop
sub
mov
jae
sub
or
fs
movsb
or
aas
sbb
fdivrl
cmpsl
ja
push
push
or
fnstcw
aas
xor
mov
mov
jb
mov
mov
xchg
xor
adc
jecxz
lods
push
sar
stos
dec
adc
mov
mov
sbb
fcmovnu
pop
out
pop
xor
add
mov
clc
ret
and
shlb
push
insl
sbb
jns
mov
dec
in
sub
loop
rcrl
jmp
movsb
cs
aas
push
sbb
inc
jg
xor
bound
pushf
sub
mov
in
fstps
popf
idiv
mov
mov
andl
aam
jl
rorl
mov
jae
dec
hlt
add
cs
xchg
popa
dec
stos
push
xchg
or
call
ds
mov
test
enter
cmp
subl
pop
fisttpl
repnz
xor
inc
xor
stos
lret
pop
popa
cmp
and
daa
mov
cmp
inc
int3
sub
ss
aad
push
lahf
dec
pop
test
rorl
daa
mov
or
out
sub
sahf
mov
das
xchg
xor
pop
rol
mulb
aam
arpl
rorb
adc
stc
mov
inc
mov
adc
or
pop
les
push
addr16
insb
mov
inc
ljmp
stc
cmp
add
dec
inc
xlat
scas
sub
push
popf
push
cld
test
xor
sub
or
shrb
cmp
and
imul
mov
in
mov
add
fwait
sbb
push
sub
popl
dec
and
pop
jge
sub
xlat
pop
cli
mov
mov
push
lock
mov
loop
mov
xchg
mov
cmp
mov
ja
in
inc
movsl
in
push
fbstp
dec
mov
cwtl
sub
push
lahf
lret
push
je
rcl
inc
ja
sub
sub
out
inc
or
rcl
movsb
and
scas
mov
nop
jne
sub
cmp
mov
jns
inc
lcallw
mov
push
pop
jb
cmp
push
fisttpll
ret
hlt
cltd
mov
clc
sbb
loope
addr16
jg
mov
and
sub
inc
arpl
mov
xchg
pop
lea
sub
test
lahf
dec
sbb
loopne
mov
sar
outsb
not
jns
rcrb
iret
xor
xor
lock
addl
ja
push
test
lret
pop
loopne
mov
or
test
mov
and
insb
scas
ss
jb
pop
fisubrs
sbb
int
lahf
insb
fiadds
cmp
push
fmull
in
and
xchg
bound
adc
mov
jno
ss
imul
mov
push
outsl
pop
jns
insb
ljmp
sub
xor
push
mov
mov
inc
and
pop
fs
push
push
jae
sub
lret
out
gs
sarl
or
cmp
into
mov
mov
hlt
sub
sub
pop
mov
xchg
aaa
aas
mulb
test
push
lret
in
cmpsl
push
fs
outsl
cmpsl
arpl
jnp
in
and
push
clc
lahf
mov
pop
repnz
fdivrs
test
mov
mov
mov
stos
repnz
xchg
jns
push
daa
ds
icebp
ds
pop
mov
fdiv
out
xchg
flds
pop
or
cmp
aam
xchg
scas
movlps
loope
and
inc
xor
xchg
mov
xlat
das
fs
insb
jne
adc
adc
insl
andb
mov
test
shlb
xor
rorl
ret
int
cmpsb
jl
or
push
push
ds
xchg
xor
into
gs
je
adc
jo
imul
xor
or
lock
xor
call
cs
jnp
xchg
insl
dec
push
in
xchg
addl
dec
out
jno
insb
leave
mov
data16
pop
mov
inc
or
outsl
js
or
mov
je
jge
cmp
out
cmp
adcl
mov
push
gs
mov
and
pop
push
inc
push
lea
xor
sbb
cmp
dec
sub
out
and
inc
xchg
add
xchg
xchg
add
push
sti
jno
xlat
std
cmp
mov
loop
cmp
aas
push
repz
jo
outsb
pop
and
cld
movsl
rorl
aad
xlat
jo
into
cmpsl
ficoms
dec
fs
sub
subl
loopne
jmp
arpl
dec
or
pop
test
outsl
lahf
xchg
cmpb
fldcw
inc
adc
or
xchg
std
rclb
negl
pop
jae
xchg
jb
dec
sarl
adcb
pop
push
aaa
mov
in
aam
xchg
cmp
add
lods
add
cmp
imulb
adc
xchg
mull
mov
push
mov
and
aas
int
xchg
idiv
jmp
pop
jecxz
push
jmp
fcoml
orb
pop
in
sub
add
ret
add
xor
push
ret
pop
xchg
shll
popf
fwait
pop
push
sarl
lahf
testl
je
in
sahf
enter
sbb
push
or
arpl
ficomps
xor
ss
xchg
daa
xlat
mov
pushf
push
mov
mov
mov
add
cmc
cld
ja
out
mov
out
xor
sti
shr
out
popf
data16
popf
or
cmc
inc
popw
sbb
ffree
mov
ds
and
testl
jns
pop
or
xchg
add
inc
movsb
push
ljmp
xchg
or
scas
test
imul
xchg
push
sub
mov
daa
dec
test
iret
mov
xchg
es
sbbb
mov
xchg
mov
fisubrs
les
push
lret
pop
adc
lret
out
add
outsb
add
adc
sbb
lds
mov
test
xchg
test
pop
or
sbb
xor
fwait
sbb
xor
out
jo
lcall
sbb
xor
pusha
ss
int
xchg
sub
jae
mov
inc
insb
dec
aas
lods
loop
lds
and
cmp
sbb
or
lahf
push
mov
cmp
push
mov
lds
daa
mov
inc
cmp
mov
mov
ret
or
adc
pop
stos
popf
and
pop
cli
or
hlt
insl
mov
xchg
inc
jge
lret
push
fldl
rcll
inc
pop
jecxz
xchg
add
and
adc
mov
add
iret
repnz
stos
pop
out
xor
jb
xlat
xor
push
inc
inc
push
cmp
push
lods
ds
fdivp
rcrb
mov
outsb
cmp
xlat
cmp
add
in
push
cli
sti
je
xchg
push
mov
popa
dec
inc
cltd
adc
test
insb
int
stos
push
mov
cmp
dec
call
inc
daa
fldt
push
sub
jbe
sbbb
mov
repnz
fldcw
pop
pop
fstp
sbb
sub
mov
adcb
mov
dec
sahf
push
test
cmp
pop
mov
loope
out
outsb
jl
and
loopne
popf
notl
mov
adc
sahf
xchg
stc
mov
inc
add
mov
les
sub
into
jl
add
int
outsl
addr16
ljmp
mov
push
sbb
xor
ret
shll
rol
ja
jnp
dec
pop
fistps
lcall
xchg
and
fnstenv
ja
mov
sbb
pushl
push
stc
rcrl
cmp
inc
sbb
cmpl
adc
je
rcrl
shrb
xor
push
mov
xchg
sub
jl
adc
mov
inc
xor
fisubs
add
xlat
sbb
mov
lret
xor
cmc
push
pop
pop
fwait
pop
or
movsb
pop
dec
out
push
or
dec
push
rcrb
pop
insb
in
jmp
js
push
mov
mov
aaa
arpl
sub
pop
or
sub
mov
lock
lcall
mov
or
movsl
pushf
mov
fwait
rorb
mov
adc
jg
adc
daa
mov
mov
dec
adc
addl
xchg
leave
xor
cmpb
sarl
in
cltd
test
inc
test
mov
inc
adc
pop
push
flds
xor
dec
addr16
and
pop
sub
int3
sub
cmp
jmp
out
sahf
insl
lods
sahf
sbb
inc
shrb
popf
lret
push
push
in
sbb
je
jmp
outsb
shlb
ret
jecxz
mov
popf
lret
rorl
rcl
adc
sti
stos
cmp
xor
addb
dec
pusha
sbbl
ljmp
outsl
inc
sbb
mov
mov
push
mov
sub
int3
mov
ret
fmulp
cmc
mov
pop
scas
out
push
or
cltd
mov
push
push
jle
cli
pop
xchg
es
lds
ljmp
xor
jbe
pop
inc
rcrl
cld
or
int
sub
or
lcall
data16
mov
mov
roll
cwtl
xchg
push
out
adc
sbb
jl
insb
xor
leave
movsb
fcompl
add
rol
in
iret
push
pop
add
ja
pop
aaa
or
outsl
lods
push
cs
pop
stos
xor
adcb
testl
xchg
popa
stos
aaa
fs
daa
daa
lea
and
fstpl
iret
mov
inc
lods
sub
push
mov
sbb
shlb
ja
mov
sub
jg
cli
fwait
dec
clc
std
in
cld
lcall
push
jno
sub
pop
mov
sub
faddp
sbb
lcall
pushf
in
pusha
cmpsl
xchg
outsl
mov
pop
mov
stos
bound
arpl
iret
loope
ljmp
mov
int
dec
mov
loop
add
pop
das
aam
jmp
or
cli
mov
fistpll
xchg
mov
das
mov
mov
push
mov
sbb
sbb
cld
loope
inc
mov
xchg
xor
bound
sbb
push
adc
cmp
pop
leave
pop
cmp
dec
mov
cmp
jno
jmp
xor
dec
jl
mov
loop
shlb
mov
jl
lds
je
sub
push
in
sti
dec
bound
outsb
push
mov
dec
arpl
xor
daa
addr16
cmpsl
push
and
lret
subl
stc
sub
add
int
sbbl
inc
fidivrs
mov
cmp
or
cmpsb
inc
addr16
out
pop
ja
lcall
mov
xchg
xchg
mov
jle
int
xor
jge
sub
adc
lea
call
aam
popf
adc
shll
iret
mov
insl
sub
mov
jg
stc
push
xchg
subl
sub
repz
test
sub
pop
ds
inc
mov
or
pushf
pop
mov
imul
jne
sub
add
cmp
jb
mov
add
jl
fadds
clc
inc
sahf
pusha
mov
mov
outsl
dec
and
xor
cwtl
mov
mov
xor
imul
adc
add
cmp
pop
cmpsb
adc
stos
pxor
jg
testb
xor
fdiv
aas
mov
push
ret
cmp
push
aam
test
nop
sub
and
fisubl
je
sbb
andl
decl
cmpsl
idivb
shlb
scas
aam
scas
rol
adc
or
cltd
or
je
and
clc
mov
mov
fimull
adc
icebp
mov
push
loope
xchg
pop
inc
dec
sbb
mov
daa
add
pop
data16
xchg
hlt
pop
out
jle
adc
inc
cmp
xor
mov
sahf
sbb
adc
cltd
test
xchg
sub
sub
das
sahf
or
mov
cmp
lcall
push
xchg
lahf
push
fnstsw
xchg
lock
aam
and
sbb
hlt
xor
sahf
cmpsl
push
int3
mov
shlb
or
insb
out
cwtl
sbb
leave
cli
in
jp
ja
bswap
xor
add
addl
jo
cld
mov
stos
movsl
cmp
sbb
adc
test
push
adc
fnstsw
dec
cmpsl
pop
fisubrs
push
xor
das
leave
or
rorb
jo
faddp
out
aad
or
mov
sbb
cmp
push
or
cmp
mov
mov
in
lods
jo
pushf
mov
ljmp
jg
ss
fadd
int3
in
pop
add
dec
dec
add
aaa
movsl
shr
push
mov
mov
nop
lds
xchg
pop
ds
push
add
mov
pusha
addb
mov
mov
sub
adc
and
dec
push
fisubs
mov
add
mov
loop
mov
cs
sbb
nop
push
pcmpeqd
andb
pop
aas
xchg
js
pusha
dec
inc
mov
iret
jnp
ficompl
jns
and
pop
lret
loope
pop
sbb
adc
xor
movsl
push
mov
fsts
or
icebp
xchg
add
adc
icebp
dec
lcall
sub
out
jmp
lea
sbb
sub
das
dec
inc
sti
lret
loope
and
sbb
pop
fwait
and
push
cmc
mov
idivb
iret
xchg
cmp
lcall
xchg
fldcw
sbbl
and
pop
fsts
dec
jmp
pushf
ss
push
shll
mov
ja
testl
xchg
ss
jnp
xchg
cltd
xchg
pop
and
repz
and
mov
xor
int3
dec
mov
loopne
push
push
shlb
push
mov
das
xor
xchg
add
in
test
lods
lcall
or
pop
add
or
mov
mov
mov
push
fistpl
fdivrs
adc
adc
mull
jge
aaa
dec
insb
out
mov
in
cmp
jmp
sub
adc
popa
lret
repnz
xchg
add
adc
or
mov
js
or
or
mov
inc
data16
iret
shlb
or
jmp
push
gs
xchg
in
inc
lcall
mov
cmovge
in
pop
push
dec
les
cli
pop
out
lcall
mov
and
jnp
movsl
sbb
popf
arpl
lock
inc
dec
adc
clc
mov
loopne
int3
mov
add
test
aad
cld
stc
arpl
scas
and
xlat
ret
loope
xchg
jo
and
push
sub
sbb
mov
mov
mov
mov
sub
xchg
cld
add
ret
jge
pop
stc
fdivrp
pop
fistps
push
pop
stos
add
cmp
inc
mov
std
cwtl
pop
cmpb
mov
lcall
xchg
cli
push
mov
dec
pop
add
arpl
mov
int3
pusha
fistpll
or
divl
ljmp
sahf
pop
mov
pop
in
inc
jno
sub
xchg
test
sub
xchg
mov
dec
iret
mov
jae
inc
std
jmp
aad
in
push
js
mov
push
push
mov
sbb
aaa
mov
mov
mov
ret
mov
pop
pop
aad
jl
xchg
andl
fwait
stos
jns,pn
cld
mov
bound
sti
jb
inc
pusha
lret
scas
mov
out
jl
shrb
fidivl
push
adc
pop
inc
pop
push
out
mov
inc
fwait
jge
rolb
xor
xor
outsl
ja
lds
fsubl
cmc
out
push
or
movsl
cld
inc
jle
push
stos
cmpl
imul
mov
je
mov
xchg
push
dec
shl
and
jge
jp
mov
mov
jecxz
into
es
dec
add
loopne
push
jecxz
push
lods
stos
arpl
sub
test
and
mov
xor
dec
mov
pusha
inc
cmp
cltd
js
add
sti
jle
movsl
or
jp
jecxz
xchg
add
mov
dec
jle
out
and
pop
cmp
mov
stos
rol
fmull
dec
mov
fdiv
sbb
cmp
ret
icebp
jmp
pusha
add
in
sbb
mov
and
repnz
push
adc
stos
movsl
dec
sbb
add
out
sbb
xchg
xlat
jno
stos
mov
pop
mov
fnstenv
or
and
push
mov
dec
std
fiaddl
adc
movsl
imull
bound
test
pop
jns
cld
test
cmc
cmp
adc
cmp
and
inc
test
dec
mov
enter
test
adc
hlt
iret
cmp
cs
jecxz
nop
inc
xchg
sbb
mov
mov
cmc
xlat
adc
mov
push
lret
jne
mov
scas
sub
divl
das
dec
or
test
mov
push
ljmp
cmp
pushf
addr16
rorl
dec
push
adc
mov
arpl
clc
inc
out
jbe
mov
scas
add
pop
scas
test
xchg
or
aas
lret
repnz
inc
xchg
push
call
mov
fwait
xor
pop
push
in
repnz
stc
scas
movsl
push
outsb
xor
ljmp
inc
shr
lret
adc
sbb
dec
xor
sub
add
push
sbb
mov
push
push
movsl
insl
fdivrs
sbb
inc
dec
add
jo
jno
adc
stc
loopne
adc
shll
jno
mov
scas
push
test
cli
lds
sbb
sub
cs
outsl
hlt
cmpsl
jg
mov
sub
sbbl
in
add
pop
inc
lretw
xor
aas
pusha
jne
inc
mov
data16
jo
pop
mov
dec
pop
cmp
mov
mov
mov
xchg
sbb
add
subb
cmp
push
scas
scas
loope
mov
or
fildll
and
or
int3
cli
out
sbb
int
or
sub
test
lods
scas
xchg
cmp
jp
adc
push
mov
and
xor
enter
push
jbe
mov
insb
lahf
int3
mov
lods
pop
push
daa
xor
mov
jno
jp
jnp
ficoml
sbb
ds
mov
out
pop
mov
fstpt
jp
add
dec
out
bound
leave
mov
aam
in
cmpsl
sub
pop
mov
pop
adc
mulb
sub
imul
mull
mov
nop
xchg
mov
xchg
in
jne
mov
jno
inc
xchg
test
adc
movsl
xchg
inc
out
push
out
aaa
and
hlt
inc
cs
lahf
sub
jge
lods
xor
cmp
jge
push
ja
jl
lods
dec
mov
mov
pop
ficompl
xchg
cmp
sbb
adc
mov
sub
scas
ss
clc
ss
test
pop
adc
test
inc
leave
adc
lahf
add
sti
int3
loop
loope
adc
pop
leave
rolb
inc
xor
iret
or
mov
jns
or
sbb
dec
outsl
shrl
lock
push
cld
jp
push
out
in
inc
push
xchg
push
fnstcw
popf
outsl
or
mov
repz
mov
jg
lock
xchg
fmul
sbb
xor
push
push
mov
adc
sbb
fwait
loop
add
push
jp
mov
sub
nop
cs
imul
mov
lahf
pop
aam
aas
out
lods
daa
or
pop
inc
add
test
call
jle
inc
adc
cmp
add
mov
xchg
add
jp
push
jl
into
rcrb
and
inc
inc
gs
loopne
mov
mov
and
daa
dec
and
mov
scas
out
sub
fnsetpm(287
xor
cwtl
ret
mov
sbb
fwait
dec
xchg
jno
adc
in
outsb
cmp
test
sbb
fisttpll
jecxz
or
adcl
mov
dec
jns
repnz
pop
loopne
ret
cmp
test
adc
push
pop
out
std
inc
lea
es
adc
imul
arpl
outsb
push
sbb
sub
mov
loop
cmp
pop
and
das
ds
int3
xchg
xchg
test
dec
mov
movsb
cld
sub
mov
dec
dec
movsb
sbb
jae
out
mov
repnz
je
mov
xor
push
outsb
sub
xchg
fdivrl
sub
rorb
inc
jp
add
and
dec
adc
pop
sbb
int3
mov
jmp
fld
cmpsl
lds
sub
mov
rcl
mov
arpl
adc
sub
ds
add
xor
iret
xchg
aas
sub
xor
int
mov
push
shrl
jl
out
int3
cs
sbb
test
js
push
dec
mov
sbb
cmp
data16
lret
fcoms
push
xor
icebp
mov
rol
fldcw
ret
js
lcall
iret
ja
stos
xchg
in
adc
xchg
std
or
pop
dec
xlat
push
and
pop
jmp
inc
ss
outsl
into
insl
xor
orb
not
int
sbb
mov
shll
dec
ja
push
rol
mov
inc
jmp
in
xlat
repnz
and
and
scas
ret
inc
adc
mov
lret
enter
add
stc
add
jp
das
push
jae
sahf
mov
cmp
test
fisubrs
imul
inc
int
aam
xchg
jp
xorl
push
fidivrs
xchg
xchg
pop
aad
mov
adc
or
mov
jg
or
cmp
rcl
pop
xchg
mov
xlat
mov
mov
push
mov
lret
aad
hlt
mov
pop
xchg
add
scas
test
dec
or
xchg
imul
dec
subl
mov
ret
pushf
cld
movsb
fisubs
out
lcall
pop
orl
insb
ret
lds
pop
fwait
scas
test
inc
sar
scas
adcl
pop
push
jns
push
ja
frstor
outsb
popf
mov
or
push
and
lock
mov
daa
cmp
lods
sbb
lret
cmp
cmp
push
or
out
mov
sub
adc
mov
sbb
andl
in
pop
fldt
test
and
sbb
iret
cwtl
mov
jecxz
aas
fsubs
popa
mov
push
push
fists
jmp
popa
xchg
cli
das
jns
sub
lods
sbb
popf
pop
jne
dec
xor
lret
pop
es
in
das
xorb
inc
xchg
pop
adc
ja
mov
das
mov
insb
fbld
out
xchg
xchg
mov
pop
call
mov
jmp
push
and
scas
or
add
sbb
stc
sbb
imul
xchg
cmp
and
std
nop
jns
jns
clc
mov
test
ret
mov
xchg
neg
push
dec
adc
push
adcl
mov
rcll
orb
fdivl
jnp
dec
inc
test
add
dec
loop
or
push
pop
sub
push
cmp
nop
cld
push
iret
dec
pop
fs
int3
push
jmp
loop
mov
mov
fsubrl
mov
jnp
test
out
mov
jnp
ja
jmp
mov
inc
jmp
cltd
xchg
scas
mov
add
insb
xchg
in
bound
fs
lahf
shlb
les
or
out
dec
xchg
xor
into
cmc
lods
fucomip
pop
movsb
sti
aam
cmpl
subb
lea
fcmovnu
sub
jmp
push
insb
add
inc
aam
jp
add
sbb
call
loop
sbb
inc
ljmp
cld
sahf
and
rolb
pop
adc
inc
xchg
imul
fisubrl
icebp
and
mov
enter
cmp
rclb
call
xlat
add
and
sub
in
movsl
addr16
adc
and
std
aaa
and
lcall
jo
cwtl
ret
in
dec
pop
out
shlb
fcmovne
dec
or
fdivrs
push
lods
or
add
addl
mov
pusha
or
sbb
jp
xchg
js
mov
xchg
js
sub
and
mov
int3
subl
jb
jg
push
jmp
sub
cmpsb
adc
mov
loop
mov
push
pop
adc
cmp
fidivrs
loop
mov
stos
out
mov
cld
ficomps
jle
adc
mov
xchg
out
fistps
or
push
inc
and
mov
jno
mov
xlat
scas
inc
push
push
or
mov
incl
add
leave
popf
sub
incl
or
inc
and
movsl
leave
pop
mov
loop
rorl
mov
mov
daa
add
dec
mov
test
pushf
out
push
xchg
fcompl
mov
or
push
dec
pop
stos
cmpsl
sub
adc
push
insb
sbb
xchg
outsb
sti
xor
insl
or
pop
dec
or
les
xor
sub
mov
popa
icebp
test
test
repz
or
mov
mov
loope
jg
cmpsl
pop
add
loope
jmp
pop
add
and
dec
js
and
pop
ret
daa
sub
fmuls
push
jns
jne
jns
aas
cwtl
andb
sub
insl
fidivs
fisubs
push
fsts
inc
and
mov
outsl
ret
jo
mov
frstor
lret
fistl
adc
sub
or
fnstsw
inc
fmuls
test
jo
jp
push
cmpsb
fimuls
mov
cs
or
loopne
cmp
xor
call
dec
pop
fstps
outsl
fmul
cmp
in
jne
dec
or
movsb
ret
push
dec
xor
rclb
imul
or
gs
xor
loope
out
inc
insl
cmp
out
or
xchg
hlt
je
adc
adc
sbb
jg
lods
lret
imul
mov
push
subb
dec
lock
inc
xor
aaa
xchg
mov
or
js
insl
jmp
add
pop
jb
fwait
xor
sbb
mov
loopne
xor
decb
popa
xchg
gs
addl
push
xor
and
aas
mov
fstpt
notl
mov
jbe
push
hlt
gs
or
jno
adc
and
sub
sbb
fwait
cmp
bound
lock
mov
lcall
shll
mov
mov
int3
and
jns
mov
mov
jg
testl
dec
out
sbb
xchg
sbb
mov
int3
jns
std
outsb
fimull
aas
arpl
jns
daa
sbb
inc
adc
fldl
mov
and
sub
xor
mov
jae
add
pop
jl
outsb
js
xchg
lods
aas
sbb
sub
add
sbb
or
push
fcompl
xlat
push
push
aas
loopne
aam
ss
scas
mov
dec
movb
inc
sahf
mov
stos
dec
dec
sbb
xchg
hlt
lock
movsl
fs
pop
adc
or
cmpsl
ret
push
in
xchg
cmp
lcall
pop
adc
lods
rorb
inc
mov
sub
xchg
aaa
imul
sbb
sub
push
push
mov
cs
mov
shlb
dec
add
cs
test
and
sahf
clc
add
mov
cli
ret
jb
outsb
mov
fadds
sarl
testl
or
dec
jmp
bound
aad
mov
jnp
sti
fs
push
mov
out
push
mov
and
arpl
mov
negb
jns,pt
and
in
in
xor
pop
or
inc
or
shr
clc
sti
out
insl
mov
dec
repz
leave
je
lret
in
out
xlat
stos
pop
mov
adc
mov
frstor
addb
jo
nop
into
sahf
ror
push
fdivr
xchg
ret
int3
adc
sbb
adc
and
ret
xchg
adc
add
pop
cmpsl
sbb
xchg
test
sub
pushl
cmp
out
stos
mov
mov
cmp
cmpsb
std
cmpsb
ret
add
xchg
adc
xchg
cltd
popa
sub
sbb
push
dec
and
test
pop
push
add
xchg
enter
xchg
pop
xchg
iret
jb
lds
jae
mov
daa
dec
testb
addr16
adc
dec
xor
shll
mov
test
or
fwait
push
gs
lock
cltd
ror
mov
gs
sub
aaa
xchg
pop
outsl
inc
push
adcb
inc
mov
enter
cmp
mov
icebp
dec
xchg
popa
pop
clc
pop
adc
and
imul
jno
mov
add
in
inc
sbb
xor
mov
add
out
jmp
fadd
dec
repz
adc
or
popf
pop
stos
and
jecxz
or
and
inc
jl
lahf
jae
loop
dec
jbe
mov
pop
mov
and
jb
jno
dec
icebp
and
push
pop
shl
bound
inc
xchg
jecxz
mov
outsl
mov
pop
cmp
adc
mov
orl
mov
push
std
inc
xor
mov
rolb
cs
push
iret
jp
mov
scas
clc
enter
dec
push
jp
aaa
shrl
inc
cmp
push
out
jecxz
dec
fs
call
pop
pop
push
sub
sub
adc
sub
mov
or
dec
fiadds
out
iret
jge
inc
mov
mov
aas
adc
inc
into
repz
scas
movb
cli
sub
scas
icebp
cmp
aaa
pop
adc
mov
cmp
xchg
pop
mov
bound
rcrb
xchg
dec
mov
jae,pt
xor
push
sub
xchg
inc
addl
ja
cli
sbb
gs
or
dec
and
scas
xchg
jmp
jns
jl
push
jo
or
push
ss
loope
into
call
cmp
xchg
stos
insl
ret
je
lea
shr
faddl
shrb
iret
iret
xchg
mov
faddl
mov
jmp
test
adc
dec
sub
enter
int
fcomps
sbb
adc
mov
push
xor
loop
dec
out
sbb
shlb
jp
lret
cmp
enter
call
sub
xchg
or
jnp
data16
inc
mov
push
lret
loopne
push
dec
or
ffree
pop
in
imul
sub
stc
and
adc
lods
sbb
and
in
bnd
push
iret
xchg
pop
outsl
hlt
scas
in
push
addr16
in
aas
mov
sbb
cmp
cmp
lds
lea
jbe
outsb
cmp
pop
cmp
leave
push
and
push
hlt
push
push
jg
pusha
mov
mov
dec
mov
dec
xor
call
push
mov
cmp
jge
and
or
xor
ljmp
cltd
data16
scas
int3
push
out
mov
dec
mov
jne
sti
xor
mov
insb
sbbl
xchg
out
mov
aas
scas
xor
fldl
lcall
mov
mov
push
push
cmp
aam
adcb
mov
out
jge
stos
into
fmulp
dec
shlb
push
xor
leave
jle
les
aad
fmulp
dec
fs
adc
and
arpl
out
movsb
xlat
lock
and
test
outsb
dec
call
jmp
pushf
out
mov
mov
lret
sub
jg
addr16
mov
add
scas
incl
push
pushf
sbb
cmp
push
and
fldcw
inc
push
or
push
js
jae
mov
push
dec
jae
lcall
shrl
cmp
adc
ds
imul
stc
orb
or
xor
push
mov
mov
and
push
xchg
fbld
inc
mov
and
loopne
push
stos
mov
outsb
lea
fwait
stc
mov
jae
jl
mov
mov
scas
or
pop
cld
push
psubd
sbb
test
test
pop
dec
clc
mov
push
jne
inc
lret
add
popf
lock
mov
scas
loopne
sahf
push
push
jmp
mov
fwait
scas
cmp
insb
sbb
jp
call
nop
call
aam
mov
mov
mov
or
mov
inc
sub
fstps
sahf
sbb
enter
std
xchg
push
test
dec
lea
adc
adc
cmc
dec
out
xlat
add
in
dec
cmp
je
mov
mov
jmp
js
inc
bound
arpl
mov
pop
dec
pop
imul
sahf
mov
mov
in
add
fcmovnu
or
xchg
clc
lcall
mov
cld
ljmp
mov
mov
mov
adc
cmpsb
ret
out
jns
push
das
imul
popa
mov
mov
mov
lcall
loop
mov
into
mov
jle
pop
outsl
das
sbb
and
iret
mov
das
sbb
data16
jecxz
mov
jnp
gs
loop
cltd
push
test
add
xchg
dec
inc
js
xchg
icebp
shrl
gs
mov
xor
loop
sarl
aam
adc
cltd
adc
mov
push
ja
sarb
loop
pop
jp
or
mov
jge
fcoms
inc
dec
jmp
inc
cld
xchg
mov
inc
jg
in
dec
ljmp
mov
cmp
adcl
jecxz
mov
ljmp
and
cli
cmp
add
inc
jecxz
and
cmp
adc
or
ja
mov
jle
lcall
call
pop
sbb
mov
aaa
stc
sahf
mov
les
fsubrl
lods
inc
lods
and
jnp
xor
arpl
push
xchg
test
fmuls
cmpsb
stos
cli
nop
repz
lods
es
sbbb
sbb
xchg
loopne
ret
arpl
add
imul
push
jae
adc
jbe
flds
stos
lea
cli
push
pop
pop
cmp
inc
pop
and
test
and
or
mov
dec
mov
loop
xlat
mov
ja
mov
scas
xchg
rcr
cmpb
xor
js
pop
and
repnz
mov
or
ja
mov
mov
sub
dec
rcl
lahf
les
mov
pop
dec
cltd
hlt
dec
mov
mov
rcl
subb
push
arpl
inc
cmp
movsl
test
fstl
mov
adc
je
hlt
xchg
pusha
ficompl
mov
sbb
icebp
cmp
subl
jecxz
push
xor
scas
inc
lods
insl
push
inc
and
les
aaa
mov
jnp
loopne
sub
in
inc
insl
or
aad
adc
repz
stos
pop
jbe
outsb
mov
outsb
fs
cmp
cmpsb
nop
cmpsl
nop
leave
sbb
outsb
jbe
push
push
test
inc
sti
fucomi
shrl
dec
movsb
or
xchg
adc
arpl
bound
jbe
or
mov
jnp
scas
push
cmp
data16
shrl
jno
sahf
mov
in
int3
ss
mov
or
lds
sub
js
inc
lea
and
xchg
sbb
daa
test
xchg
cmp
fldl
mov
cmpl
repnz
lahf
inc
mov
jae
inc
inc
adc
in
cmp
mov
push
cmp
outsl
rorb
cmp
cltd
inc
les
sbb
pop
add
or
cmp
cwtl
out
push
stos
dec
pop
cmp
add
push
cmp
repz
inc
xor
jno
out
andl
xor
das
movsb
xor
mov
jbe
xor
xchg
stos
cld
in
mov
or
fxch
jns
adc
mov
inc
push
ds
jge
pop
mov
flds
mov
out
cmp
lock
mov
pushf
fwait
in
cwtl
inc
xor
sub
or
jecxz
jns
test
inc
jae
ret
in
cmp
rcrl
pop
stos
ficoms
decl
rcrl
add
push
jb
mov
repz
inc
cs
inc
jmp
or
or
sub
jnp
pusha
mov
pop
push
sub
aaa
jmp
jnp
lahf
lahf
nop
ljmp
or
rclb
pushf
mov
cmc
sub
jp
inc
add
sahf
push
popf
xchg
inc
mov
jo
mov
int
jo
jg
xor
loop
jno
push
add
jmp
leave
xchg
pop
sbb
cli
sbb
add
rcr
xchg
addr16
sbb
lret
sub
icebp
mov
lcall
movsb
inc
jl
mov
inc
jecxz
leave
fldcw
dec
xlat
adc
xchg
cmp
fs
xor
cwtl
out
xor
pusha
pop
push
adc
neg
adc
dec
mov
dec
rolb
call
and
fsubp
loopne
push
gs
jp
mov
outsb
shlb
js
jl
jl
jo
fidivs
ja
das
xor
mov
enter
movsb
xor
lods
lret
mov
lods
pushf
xchg
bound
jl
lahf
hlt
or
les
xor
inc
and
xlat
in
stos
add
in
mov
cmp
cmp
sti
jnp
div
xor
and
in
adc
shrl
and
push
sub
mov
adc
pop
mov
sub
das
mov
sub
imul
fdivrs
imul
pop
stos
aad
jno
jb
inc
test
jne
lret
pusha
shlb
push
cmp
ja
sbb
popf
rorb
push
adc
and
and
mov
addr16
psubusb
mov
jns
mov
xorb
mov
das
push
push
inc
push
movsl
out
and
inc
cs
pop
lcall
aas
dec
mov
dec
orl
iret
ljmp
les
push
mov
sub
mov
rorb
pop
mov
and
mov
mov
in
add
addr16
add
ds
ret
mov
push
fwait
sub
jne
ficoml
test
jmp
mov
in
or
xlat
or
cmp
imul
inc
mov
in
and
mov
mov
stc
mov
jp
test
ds
sarb
mov
push
xchg
and
lcall
mov
xor
outsb
jne
fsubrp
jns
daa
movsb
and
add
and
addr16
push
jl
sbb
push
adc
test
add
loop
or
andb
xchg
dec
xor
lds
xchg
add
add
pop
stos
sahf
push
ret
sbb
test
lods
lods
pop
punpckhwd
sti
clc
xchg
out
push
inc
mov
das
in
out
lea
add
adc
call
fiadds
jno
inc
adc
sub
addr16
sbb
mov
mulb
cwtl
adc
decb
sub
mov
xor
add
orb
ljmp
sbb
cltd
rcll
lds
div
popa
lods
lahf
jmp
shl
aad
sbb
adc
stc
std
push
hlt
lret
inc
gs
dec
xchg
ficompl
gs
lock
lods
mov
jne
add
je
aaa
jge
sti
jge
repnz
scas
sti
add
stc
pop
loope
std
icebp
iret
mov
mov
mov
cmp
add
mov
jno
adc
jb
sbb
push
mov
push
stc
scas
std
int
lret
orb
pusha
pop
imul
bound
addr16
inc
add
jecxz
pusha
out
or
or
push
hlt
sbb
xor
les
mov
pusha
ret
cmc
mov
outsl
xor
aad
jg
aam
and
out
xor
push
or
push
sbb
cmp
hlt
sahf
repnz
add
xchg
mov
add
or
mov
sbb
mov
adc
imul
jmp
adc
sahf
and
insb
test
jnp
icebp
imul
aaa
inc
aas
pop
xor
in
push
dec
push
push
xor
mov
jmp
dec
mov
inc
xchg
es
push
cltd
push
mov
inc
mov
cmp
jmp
andl
mov
push
and
sub
insl
mov
or
push
mov
and
xchg
insl
push
inc
testb
pop
cli
popa
dec
or
lock
jmp
movsl
sti
leave
int3
sbb
pop
jge
sub
mov
jne
repnz
mov
leave
mov
in
sub
popa
or
popa
lret
test
ret
push
popl
mov
jnp
xor
fwait
and
pusha
sub
dec
push
movb
mov
mull
add
outsl
adc
fwait
mov
stos
mov
mov
push
and
inc
aas
xchg
jp
pop
in
arpl
idivb
pop
cmp
ret
sub
stos
inc
test
xchg
inc
cmp
ret
shlb
push
sub
aad
dec
pop
ja
popf
pop
sub
insb
sbb
xchg
fwait
popf
int3
xor
and
cwtl
rcr
cmp
cmp
incl
cmp
mov
rorl
inc
add
pop
push
repz
inc
fwait
mov
jno
rcrb
xchg
pop
dec
sub
inc
int
xor
mov
push
ja
ret
inc
jmp
xlat
cli
mov
and
push
xor
lahf
mov
loope
and
xchg
mov
in
xchg
lods
subb
inc
xchg
imul
pusha
mov
push
hlt
cs
movsb
je
nop
insb
iret
sbb
jp
adc
xor
sbb
jno
cmp
std
adc
enter
jbe
divb
xorl
or
into
jmp
add
test
stc
pop
aad
and
out
cmp
into
inc
mov
sbb
xchg
or
insl
decb
aam
lea
rcl
in
imul
mov
jns
xor
lcall
jmpw
in
mov
jo
push
push
lret
imul
sub
xor
xor
addr16
movsl
clc
add
stc
fildll
pushf
mov
outsl
cld
icebp
cmc
cmp
popa
shrb
cmp
sbb
sbbb
xchg
mov
pushf
fbstp
add
rcr
xor
sub
notl
fisttps
es
ja
pop
push
mov
cmp
ror
lds
outsb
leave
insl
cmp
pop
ds
add
fadd
enter
or
mov
and
ja
pop
stos
stos
xchg
lea
push
cli
loope
pop
mov
xlat
mov
inc
into
jp
ret
dec
lods
mov
xor
arpl
bound
mov
sub
iret
pop
pop
cmp
sti
rolb
xlat
fldt
mov
mov
nop
cmp
mov
out
and
adc
std
mov
outsl
mov
mov
and
scas
or
hlt
and
xlat
mov
lret
inc
lds
gs
mov
mov
pusha
je
ja
fildl
pusha
fmulp
lods
cltd
ret
fnsave
sub
push
rclb
add
sbb
lret
les
cmp
fld
xchg
outsl
or
cmp
loope
push
aaa
pop
mov
cwtl
adc
ljmp
inc
lret
mov
mov
out
sbb
push
sub
cmpsl
dec
enter
sub
scas
movsl
ret
mov
cmp
test
mov
stos
aad
and
xor
inc
in
mov
push
divb
jnp
add
int
out
insb
inc
aad
add
scas
arpl
cld
leave
mov
repnz
sbb
xchg
xchg
inc
das
lcall
pop
rcrb
es
xchg
testl
shll
jmp
pop
lock
lods
sub
jno
out
cmpsl
int
jge
mov
mov
sub
ja
cmp
fistl
std
mov
sbb
xor
outsl
pop
push
fldcw
popf
mov
xor
inc
push
push
fmuls
movsl
insb
add
pop
fs
cmp
dec
lods
fwait
imul
test
stos
push
pop
adc
xor
scas
xor
cmpsl
std
test
sub
xor
mov
in
imul
add
stos
cmc
sub
inc
and
cmp
int3
call
cmp
jl
iret
add
xor
test
fdivl
lods
leave
aas
pop
aaa
adc
popf
dec
outsb
jne
xor
mov
and
filds
in
idivb
xor
inc
pop
jae
mov
rcrl
cwtl
iret
inc
jo
call
xor
inc
cmp
jno
dec
add
movsl
add
lds
fsubl
stos
push
xor
arpl
je
xchg
repnz
arpl
fistpl
jg
dec
ja
sbb
jecxz
in
scas
or
das
mov
sarl
sbb
pop
outsb
lods
pop
nop
outsl
out
pop
ja
sub
cmp
and
xchg
pop
push
mov
and
inc
ss
xchg
les
inc
nop
pop
inc
adc
mov
mov
popf
adc
rcrb
sbb
cltd
std
sbb
decl
fs
pop
fwait
movsb
xor
mov
mov
mov
pop
loopne
movsb
lret
jmp
and
dec
xor
push
or
cmp
inc
shl
lods
aam
jg
xor
xchg
in
mov
cmp
mov
test
jge
push
push
repz
jb
dec
or
sti
xorl
adc
inc
stc
stos
jb
sbb
dec
lods
js
mov
aas
nop
dec
stc
mov
insb
daa
mov
mov
inc
adc
push
and
test
and
jl
and
sub
dec
fwait
out
cmp
adc
or
dec
and
add
mov
adc
pop
xchg
lret
mov
mov
and
mov
negb
jo
sbb
and
cmp
pop
stos
pop
mov
or
lea
test
call
jo
int3
push
mov
idivl
mov
loopne
jno
fdivrl
jno
jb
lds
or
xor
dec
loop
in
adc
call
adc
sti
arpl
in
push
cmpsl
pop
xor
mov
cmp
sub
mov
iret
mov
insl
or
pavgb
pushf
int3
adc
mov
push
mov
jne
mov
sbb
imul
jmp
jmp
inc
mov
fcmovnu
es
lret
xchg
out
outsb
pop
mov
jp
jp
jecxz
addb
rolb
xor
pusha
dec
arpl
adc
jne
push
push
mov
fs
add
imul
cmp
outsb
ja
movsb
iret
dec
push
jg
cmc
inc
jo
pop
mov
jle
add
fs
jno
movsl
fwait
push
mov
inc
push
xor
loopne
inc
adc
imul
dec
xchg
mov
je
jp
loop
test
jge
out
sub
and
mov
jl
adc
mov
push
popa
lods
div
pop
inc
cmpsl
fwait
inc
push
add
dec
or
cmp
and
sbb
les
clc
sahf
and
add
push
mov
arpl
pop
xchg
mov
sub
mov
xchg
cmp
roll
lods
int3
jns
ss
and
mov
mov
bound
stos
ret
lret
cld
jae
bound
xchg
cs
icebp
sbb
stos
or
cwtl
mov
pop
dec
cmp
inc
jae
and
dec
fiadds
pop
cmp
mov
sbb
add
or
cmc
pop
or
insb
repz
push
gs
jbe
in
fistpll
loopne
and
xchg
in
scas
adc
insl
mov
shl
outsl
xchg
xchg
jg
or
mov
jns
push
xchg
pop
push
mov
dec
fucom
cmp
xor
daa
cmp
arpl
insl
mov
loope
and
mov
dec
sub
insb
popa
mov
sub
jecxz
subl
inc
and
pop
iret
fstpl
insb
pop
into
and
pmaddwd
mov
xor
lcall
jb
cmp
mov
jo
iret
cmp
imul
pop
in
mov
xchg
test
mov
dec
into
test
jp
xchg
out
sbb
ljmp
pop
loop
or
pop
sbb
rcl
and
fimull
and
popa
sub
jg
arpl
ds
xchg
and
fsubl
jno
sub
jl
mov
ja
into
pushw
in
int3
mov
add
add
sub
fnstenv
mov
adc
mov
ds
jle
xor
mov
adc
and
icebp
xchg
mov
fadd
pop
pop
dec
dec
or
mov
push
or
jo
sbb
movb
dec
dec
sbb
arpl
mov
iret
xchg
in
jl
fimuls
leave
jb
scas
stc
xor
lea
adc
mov
sub
lds
daa
jmp
dec
sbb
leave
mov
aaa
or
sbb
in
xchg
mov
adc
hlt
out
xor
cmpsb
pop
mov
nop
or
call
cwtl
sbb
arpl
scas
aaa
es
popa
dec
mov
std
add
xor
outsb
notb
push
cld
ficoml
cld
je
clc
notb
stos
pop
movsb
jmp
mov
lret
push
les
lock
push
sti
ss
xchg
xorl
mov
orb
in
mov
cli
or
addr16
mov
push
or
mov
addr16
mov
lods
bound
add
movsl
nop
xor
aam
notb
sub
or
repnz
ss
call
scas
add
ds
out
pushf
mov
or
testl
clc
xchg
and
out
rorl
push
adc
xchg
cmp
xor
sbb
andb
jle
sar
push
stc
push
iret
mov
mov
mov
movsl
jbe
ficompl
cmp
xor
xor
mov
mov
aas
test
out
jo
pop
adc
and
jl
sub
std
and
jmp
popf
aaa
stos
sbb
mov
incl
jmp
xor
mov
pushf
mov
xor
test
loope
icebp
je
hlt
mov
in
pop
mov
in
loop
or
xchg
scas
cld
xchg
in
and
insb
jmp
rcr
xchg
mov
cli
bound
or
jae
xorl
and
sub
inc
jnp
hlt
push
imull
out
or
add
sub
mov
push
push
outsb
adc
jbe
jmp
lea
mull
jo
repnz
mov
jmp
in
inc
pusha
popa
adc
loopne
in
jo
push
push
inc
mov
xor
push
or
andb
or
push
into
pushf
jo
jmp
dec
scas
cmpsb
rcll
out
repz
mov
call
inc
dec
pop
dec
fdivp
sbb
fstl
pop
fnstcw
aaa
lcall
and
xchg
in
hlt
inc
sub
add
mov
pop
inc
movsb
push
imul
hlt
pop
out
cmp
insl
or
xchg
push
cmpsb
lret
sbbl
or
push
rcrl
pop
ret
xchg
and
dec
dec
jmp
into
xor
cmp
je
or
test
mov
mov
pop
and
imul
push
cmpsl
repnz
das
jge
mov
int
mov
daa
add
leave
xchg
sub
mov
dec
addr16
dec
in
and
mov
and
lea
add
les
ret
mov
jbe
push
lahf
pop
pop
inc
js
test
icebp
sub
dec
cmp
jl
iret
outsb
int3
lret
push
out
fstl
subb
sti
addr16
iret
clc
dec
lret
pop
rclb
aam
mov
jg
call
cmpsb
add
sarb
sub
lea
mov
pop
in
jne
lea
lods
lock
and
mov
push
dec
lcall
adc
jecxz
out
addb
das
mov
out
data16
jmp
lods
mov
push
aam
in
leave
addr16
test
pushf
dec
sahf
clc
mov
mov
and
lret
inc
ljmp
mov
cmp
into
cmp
clc
mov
sub
call
int3
fsubr
inc
iret
push
mov
fadds
mov
pop
xor
lahf
sbb
testl
and
fs
xchg
stos
push
dec
test
and
hlt
xchg
cmp
or
sub
pushf
shll
mov
inc
pushf
xchg
fisttpll
data16
or
lds
cmp
mov
push
fwait
sub
cmc
or
cmp
out
out
loop
in
rcr
ds
or
in
mov
pop
aaa
push
sbb
adc
dec
popa
jmp
subb
call
out
mov
pop
mov
sbb
imul
ds
in
push
mov
cs
sbb
int
jmp
sbb
and
ret
push
insl
inc
dec
dec
push
cmp
xchg
movsl
xchg
rorb
cmpsl
insl
addl
add
ja
pop
adc
in
out
or
lret
fidivrl
or
call
out
cmc
dec
insl
jmp
jo
xchg
cs
lcall
or
repnz
sub
cmpsb
mov
push
cmp
scas
mov
push
in
pop
and
les
mulb
arpl
faddl
ret
inc
call
cmp
sbb
popa
dec
dec
loope
dec
pop
dec
jmp
repz
pushf
bound
sahf
pop
jnp
fildll
push
fwait
mov
cmp
daa
fldcw
fidivl
cli
scas
lret
mov
imul
in
lahf
mov
je
movsb
aas
test
enter
fwait
stc
sub
pop
in
sbb
cmp
inc
inc
xor
fdivrs
inc
pop
cld
fists
pop
sbb
push
cltd
mov
loopne
jbe
rcl
mov
test
arpl
sub
mov
xchg
movsl
repz
arpl
add
mov
ret
jns
jecxz
sub
data16
jmp
lret
xchg
stos
adc
clc
scas
and
pop
mov
arpl
sahf
cmp
mov
addr16
lret
inc
gs
xchg
push
push
xor
fistl
adc
movsl
aas
xchg
clc
pop
les
push
add
and
je
arpl
mov
scas
ret
sar
push
lods
ds
mov
divl
mov
cltd
das
jl
repnz
decl
push
xor
adc
jo,pn
xchg
les
loope
mov
enter
roll
cld
scas
cmp
cltd
js
js
xchg
lock
sub
imul
fcompl
ret
lea
gs
push
es
dec
je
pop
mulb
add
in
add
neg
inc
fadd
inc
sub
out
push
add
mov
adc
add
xchg
or
inc
mov
in
out
lahf
mov
mov
mov
popf
dec
lea
hlt
push
pushl
imul
dec
ja
pop
in
imulb
push
dec
mov
dec
push
pop
sub
mov
addr16
fcompl
sbb
dec
mov
push
out
dec
popa
cmpsl
adc
dec
or
pushl
or
lds
add
int3
enter
aas
icebp
ret
test
popa
xchg
xor
repnz
jb
inc
sbb
jnp
pushf
xor
cmp
sbb
or
shll
loope
jno
aaa
xchg
mov
subb
inc
lock
leave
mov
shl
dec
jp
cpuid
mov
mov
fstp
scas
imulb
sbb
lods
sti
mov
adc
shll
or
repz
pop
arpl
jge
inc
add
in
mov
stos
adc
inc
mov
mov
sbbl
imul
and
popf
cwtl
inc
cs
lods
test
nop
int
out
jbe
or
push
push
cmp
daa
pop
loop
pop
sbb
fisubrs
inc
test
dec
or
mov
mov
inc
mov
out
xor
sbb
mov
ret
or
push
mov
lock
stc
jo
enter
xor
xchg
push
shll
fwait
jno
cmp
mov
loopne
mov
jp
dec
push
mov
mov
xchg
rorb
push
mov
inc
shll
or
loop
in
jg
cmp
jnp
scas
in
push
sbb
and
cld
test
mov
scas
daa
scas
sbb
xchg
call
lods
sub
push
mov
sbb
cmp
mov
out
aaa
mov
lods
push
shr
xor
inc
lods
jl
ret
jle
lods
mov
and
cmp
push
insl
test
mov
jmp
cmp
loop
in
imul
mov
mov
xor
ret
notl
shlb
test
push
loopne
xchg
jno
cmp
pusha
or
xlat
mov
cs
pushw
or
outsb
ret
sbb
pop
sub
xchg
inc
cmp
dec
popf
pop
sub
shll
les
js
test
in
sti
and
mov
insb
cmc
ds
lret
adc
nop
lret
jmp
cmpsl
into
pop
shll
xchg
minps
lahf
jle
xchg
pop
popf
cld
sbb
push
or
push
out
push
pop
mov
scas
cwtl
daa
arpl
adc
aad
cmp
push
xchg
sub
aas
sarl
dec
cs
rclb
mov
call
sub
out
mov
iret
mov
loope
mov
lcall
add
movups
push
cmp
push
xor
nop
mov
mov
scas
push
mov
push
push
adc
scas
push
jb
push
inc
dec
add
mov
mov
test
inc
paddusb
xchg
pop
les
in
mov
jl
pusha
in
lods
cli
std
and
jecxz,pt
ret
clc
mul
push
push
sub
add
jmp
outsl
scas
cmc
inc
clc
pushf
jo
and
cltd
xor
roll
or
fwait
imul
lahf
xor
subl
clc
dec
adc
les
imul
inc
cmp
sub
cmpsb
popf
adc
outsb
xchg
shll
repnz
pop
pop
aas
xor
sbb
inc
shr
or
sbb
loopne
data16
sbb
mov
movsb
arpl
xor
repz
jle
sbb
movsl
adc
pop
add
xor
std
outsb
ret
rolb
mov
mov
add
test
pop
nop
mov
addb
push
sub
xorb
jns
sbb
jmp
icebp
loope
loop
lock
cmp
arpl
cmp
lret
orl
xchg
sbb
movsl
jb
mov
xchg
scas
lret
imul
cmp
scas
loope
inc
int3
stc
pop
jno
popf
xchg
mov
inc
pop
testl
push
mov
movsl
lods
or
out
call
scas
loopne
sbb
pop
daa
lret
pop
leave
out
mov
in
mov
sbb
test
fwait
sbb
adc
js
int
cmp
jge
mov
subb
pop
mov
mov
pop
sahf
imul
mov
pusha
push
imul
xchg
insl
push
fistps
mov
gs
je
scas
xor
xchg
std
sbb
incb
mov
mov
mov
push
add
inc
xchg
iret
xchg
inc
fistps
mov
sti
pushf
jb
adc
mov
arpl
add
xchg
out
das
mov
dec
sub
xchg
sub
and
lret
add
cld
ljmp
push
mov
popa
testl
cmp
mov
sub
pop
getsec
xor
aaa
je
add
push
into
loop
mov
mov
mov
or
lock
enter
mov
inc
adc
inc
pop
dec
mov
dec
bound
inc
fstpt
andb
lret
scas
jecxz
pop
push
fs
paddw
mov
ficomps
add
in
mov
dec
lcall
xchg
xchg
mov
dec
inc
das
enter
subl
lcall
cmp
rclb
add
xor
in
pushf
jge
js
xchg
fistpl
fs
or
mov
xor
jg
push
and
sbb
out
xchg
out
mov
pop
les
mov
mov
loope
mov
data16
and
and
pusha
pop
cmp
orl
sbb
push
inc
mov
jnp
xlat
xor
add
lds
imul
inc
roll
cmpsl
mov
jb
sti
std
rcrb
adc
out
jecxz
xchg
adc
mov
psubq
icebp
int
cmp
out
dec
xlat
inc
icebp
ja
mov
mov
and
jl
testb
xor
fsubs
cmp
ds
pop
jbe
xor
sti
adc
es
cld
mov
sbb
or
data16
or
lahf
test
fsubrl
pop
mov
sbb
pop
and
sbb
dec
xor
in
in
and
and
lds
jo
pop
popa
idivl
gs
fs
push
sbb
stos
push
mov
push
mov
call
stc
test
dec
das
push
aas
mov
cmc
jmp
jge
insl
sub
add
pop
xor
mov
or
aas
mov
mov
mov
mov
mov
lds
xchg
sub
jmp
es
fisttpl
movsb
out
inc
insl
pop
jge
in
lock
pop
xchg
int3
fistpl
push
lods
xlat
outsl
sub
and
or
dec
mov
je
out
sahf
or
cli
mov
dec
into
rcrb
and
and
enter
jbe
xchg
mov
cli
pop
xchg
cmp
inc
test
sarl
cmp
dec
add
push
and
ljmp
xlat
mov
mov
inc
inc
rorl
adcl
repnz
xchg
push
into
loop
inc
fmull
push
testb
fnstsw
aad
xor
in
repz
xchg
or
jle
shrl
push
in
das
sbb
push
mov
add
adc
ljmp
xor
cmp
rclb
mov
ret
sbb
adc
imull
xor
lods
pop
mulb
cmp
inc
mov
mov
push
test
lahf
and
fwait
pop
ret
fwait
xor
mov
xor
mov
and
mov
out
cmpsl
in
ret
sub
jg
jg
cli
fidivrl
fnstenv
enter
cli
and
mov
mov
test
aas
lret
pushf
pop
push
pop
les
dec
xor
mov
idivb
xchg
push
jns
xor
inc
hlt
sti
jmp
stc
out
aam
sbb
mov
mov
divb
lcall
pusha
xor
push
sahf
jg
mov
insb
popa
fsubr
pushf
lret
xchg
add
xor
int
in
or
shl
ret
adc
jmp
push
loope
push
jns
lret
lods
or
aas
dec
mov
ss
or
pushf
xchg
jmp
jo
pop
cli
das
mov
jecxz
pop
test
pop
fcoms
add
xchg
aaa
imul
movsb
jmp
mov
mulb
pop
pop
jnp
popa
push
sbbb
cmp
in
fistpll
lahf
xchg
cmpl
xchg
das
jmp
push
mov
out
or
lret
adc
mov
in
inc
cltd
inc
cli
dec
inc
arpl
sti
pop
add
pop
inc
rorl
cmp
dec
dec
or
test
mov
es
cld
nop
movsb
daa
cmp
dec
sbb
lock
scas
adc
scas
ss
test
stos
mulb
gs
or
and
rcr
enter
int3
mov
cmp
aad
subb
add
adc
and
xchg
xlat
adc
subb
arpl
push
mov
in
xchg
pop
in
mov
mov
adc
xor
mov
push
adc
int3
scas
sbb
sbb
dec
fstps
xor
add
adc
lods
in
dec
gs
cmc
inc
jb
pop
sti
mov
test
sub
push
frstor
cmc
ljmp
mov
dec
adc
mov
fwait
loope
jp
adc
les
jmp
adc
xlat
inc
sub
aas
adc
jae
dec
jl
dec
sub
movsb
int3
jae
xor
loopne
and
cwtl
mov
loopne
sbb
int3
fsubl
adc
dec
add
hlt
and
in
sub
push
js
loopne
dec
cli
pop
jae
pop
addr16
jecxz
jo
inc
ret
cld
xchg
scas
pushl
push
add
cmc
mov
imul
jb
out
push
js
cld
aam
adc
dec
popa
daa
dec
cmpsb
pop
and
cmp
mov
loope
gs
stc
xchg
push
pop
stos
xor
xor
push
scas
mov
cld
pop
xchg
fwait
loop
loop
fbstp
push
sub
jge
ljmp
jo
je
stos
fs
enter
mov
jae
daa
push
push
or
mov
inc
xchg
out
pop
add
lods
jbe
xlat
in
loop
add
xchg
xorb
adc
pushf
sbb
mov
mov
ljmp
shl
push
sbb
lea
and
iret
pop
xor
ljmp
shld
push
fdivrl
sti
bound
push
cmc
popl
cmp
fstpt
add
pop
push
shr
imul
sub
xlat
call
mov
sbb
cli
inc
addl
push
pop
mov
sbb
or
imul
scas
icebp
mov
xor
insb
icebp
jmp
adc
pop
cmpsb
xchg
fdiv
jo
lret
fistpll
add
mov
fistps
cmp
ds
bound
sbb
lret
insb
repnz
gs
jo
loope
mov
insb
out
pop
pop
mov
ss
fcmovu
xor
push
iret
xlat
push
arpl
mov
daa
js
mov
cltd
and
sub
out
imul
mov
movsl
xlat
push
mov
or
mov
lds
mov
fmul
lret
cmc
cmp
jbe
lret
dec
stc
add
mov
cmpsb
jle
in
pop
out
mov
xor
and
inc
sub
add
mov
jb
push
and
ficoms
mov
lds
ja
rcll
jb
dec
mov
jmp
cmpsl
mov
pusha
pushf
inc
mov
or
jg
int
sbb
movsb
popf
pop
pop
mov
aas
add
xchg
sub
arpl
add
cmp
mov
sar
mov
inc
push
pop
es
push
or
dec
dec
insl
adc
sub
in
test
outsb
lahf
test
loopne
cmp
sbb
fcmovb
gs
in
aad
cmp
sub
pop
rorl
fsubrs
loop
add
mov
dec
mov
ret
sub
xor
inc
inc
sbb
mov
and
jmp
adc
sbb
movsl
ficomps
inc
imul
inc
mov
ficoml
popf
clc
loopne
xor
stos
xor
sahf
adc
fwait
mov
and
cli
int3
pushf
inc
cli
adc
ja
push
push
fdivrs
outsb
scas
sahf
mov
dec
mov
outsl
in
test
imul
sbb
je
je
repnz
or
fcompl
inc
cli
mov
dec
mov
das
fcoms
mov
movsl
cs
push
jno
mov
push
bound
mov
cld
inc
cli
adc
mov
pop
pop
stc
and
outsb
aad
mov
cmp
pop
and
inc
lods
inc
push
cwtl
in
jnp
mov
or
mov
daa
neg
inc
adc
fstps
xchg
int3
in
lahf
jp
or
or
das
push
hlt
xchg
xlat
and
xchg
sti
add
insb
sbb
pushf
lcall
popf
or
cmc
cmp
lret
or
cs
sbb
stos
or
dec
jnp
sbb
lret
pusha
ja
cli
addl
mov
sub
leave
in
lret
mov
pop
cmp
data16
daa
loop
in
adc
or
sarb
sbb
adc
test
mov
lods
fisttpl
je
pusha
std
sti
push
out
gs
cmc
jg
and
repnz
mov
insb
imul
xchg
test
icebp
icebp
add
mov
dec
xor
jp
push
cmp
test
dec
jmp
pop
xchg
adc
call
and
mov
jmp
test
fbstp
xchg
jmp
cmp
pop
fsubrl
enter
cmpl
xor
xchg
adc
subl
dec
mov
hlt
stos
mov
and
inc
hlt
dec
push
mov
push
inc
jmp
mov
cmp
and
add
imul
dec
push
sub
shlb
js
add
cmpb
fadd
pop
sbb
aam
out
jl
lret
jge
jnp
fwait
push
data16
pop
lret
out
shlb
std
push
sbb
sub
repnz
arpl
insb
scas
adc
and
rcl
cmp
mov
not
out
popf
aam
adc
fisttpll
ss
int3
imulb
jbe
repz
mov
fsubp
cmp
std
and
ret
cwtl
pop
mov
xorl
xor
cvtps2pi
sub
sbb
xor
or
and
inc
and
mov
js
mov
notl
sbbl
adc
cmp
fs
mov
or
xor
shrb
inc
rcl
jno
lods
bswap
enter
jne
mov
mov
jp
lahf
jmp
pop
and
repnz
jo
push
xchg
mov
cmp
pop
in
gs
test
andl
icebp
out
ljmp
sbb
scas
pop
xchg
cmp
sbb
in
lods
repz
pusha
cmc
repnz
in
sbb
xor
insl
mov
pop
out
fwait
adcl
aam
adc
ss
orl
fwait
rol
mov
ljmp
jmp
sti
out
sbb
lods
stc
inc
fstpt
mov
popa
adc
mov
sub
fsubr
insl
mov
mov
lret
inc
dec
mov
xchg
lcall
jnp
pop
dec
notl
push
outsb
and
xor
lods
add
xchg
out
call
push
jns
push
out
and
jne
imulb
ret
rcr
lock
lds
mov
jg
mov
test
gs
inc
loop
xchg
sub
stos
leave
into
pop
xorb
xorb
rclb
dec
pop
mov
pop
inc
push
sub
loope
or
dec
mov
leave
fs
mov
leave
sub
pop
pop
addr16
test
xor
xchg
xchg
flds
push
mov
cld
pop
or
int3
pusha
je
jns
xor
hlt
rolb
loop
loope
xchg
test
dec
lds
pushf
inc
push
lods
jae
mov
mov
fs
pop
pop
jp
sbb
jg
jno
sub
into
arpl
mov
sbb
mov
pop
ret
cli
outsl
hlt
lcall
mov
xchg
xchg
stos
jno
divb
adc
loopne
pop
inc
jae
xchg
insl
test
mov
mov
mov
jle
repz
and
shl
das
cwtl
jecxz
mov
xchg
movsl
sub
loop
adc
pop
enter
lret
adc
or
cmc
shll
pushf
mov
jno
loopne
add
jno
mov
add
mov
xor
push
push
lcall
out
add
jmp
das
sub
sbbl
or
push
add
cmp
cwtl
fs
jns
aad
lahf
mov
out
sub
stos
add
into
into
sahf
out
pop
push
scas
add
pop
aaa
mov
insb
and
pop
cltd
push
adc
stos
mov
xchg
repz
cmp
rcr
or
in
test
outsb
mov
xlat
push
cmpsb
sarl
sbb
mov
subl
nop
popf
jle
jmp
xchg
or
enter
push
fimull
adc
and
mov
test
sbb
data16
pop
cmpsb
jmp
sub
fsubrs
add
dec
dec
sub
cli
dec
xchg
inc
out
ret
mov
pop
sbbb
in
cld
int
les
bound
pop
jno
cmp
ds
pand
xchg
xchg
out
adc
sbb
xor
push
in
jmp
mov
hlt
pop
ja
addl
aam
sub
shrl
xor
ss
adc
jns
dec
ds
adc
adc
push
xchg
cli
addb
cmp
cmc
test
inc
shrl
fistps
xor
ret
ret
into
or
dec
rolb
sub
scas
out
cmp
das
repz
sub
stos
or
xchg
mov
pop
ret
test
in
in
fwait
sbb
mov
and
test
mov
cmp
adc
imul
jne
cmp
mov
mov
or
pop
push
sub
cmp
xor
scas
push
roll
jno
inc
xchg
mov
rcl
iret
mov
sub
cmp
jp
in
push
shlb
jns
aaa
dec
jecxz
xor
sti
iret
pop
lock
jns
add
xchg
shlb
adc
jl
jno
and
jo
xchg
repnz
mov
fxam
xchg
inc
push
mov
or
daa
stos
stos
sub
loope
add
or
mov
adc
pop
mov
pop
fdivrl
aas
dec
scas
mov
push
jbe
lret
lcall
negb
fbld
test
in
jns
adc
push
xor
add
jmp
popf
and
dec
sahf
jbe
cld
mov
push
icebp
and
test
push
divb
loop
adc
iret
std
sti
adcb
pop
lea
or
push
dec
or
push
lcall
das
aas
pop
or
ret
and
lahf
cmc
sub
sahf
inc
sbb
xchg
ret
adc
or
cs
lahf
dec
fdivrs
inc
divl
imul
cs
jl
pop
xor
jb
cli
or
stos
inc
out
mov
jmp
lcall
mov
xor
int3
inc
les
push
jnp
loopne
addl
pop
std
icebp
cld
lods
dec
fucom
inc
loopne
cmp
add
sbb
xchg
mov
inc
mov
and
jns
sub
sbb
loop
add
neg
ret
xchg
dec
cmpsb
push
mov
or
loope
movsw
xor
adc
pop
stos
ret
hlt
in
push
shlb
leave
testl
adc
mov
add
inc
subps
push
fidivrl
cmp
sbb
sub
pop
sbb
add
jl
int3
mov
out
ja
ljmp
mov
lcall
mov
mov
mov
cld
lcall
pop
pop
mov
fdivp
imul
dec
or
mov
and
das
dec
xchg
inc
stos
ljmp
dec
call
mov
int3
dec
or
stc
mov
dec
xchg
popa
sub
addr16
mov
pop
adc
movsb
rolb
cmp
clc
test
xchg
pop
mov
cmp
cmp
in
sub
add
xchg
std
push
sbb
or
icebp
and
jns
cmc
jns
inc
cs
pop
mov
cmp
in
loop
lds
jo
mov
or
out
sub
mov
jnp
out
mov
push
push
jge
mov
orb
mov
pop
out
popf
js
rolb
movsl
dec
and
movl
les
mov
push
out
lcall
pop
fdivs
sbb
mov
xchg
add
and
rorl
pop
rclb
adc
inc
incl
jg
insb
mov
sub
int
sbb
add
testb
je
icebp
push
aad
or
xor
repz
xchg
push
imul
stos
cmp
cmp
enter
cld
cmpsb
out
push
shll
inc
or
lret
lret
or
cli
xchg
sub
push
jnp
jge
cmpsl
insb
rclb
push
je
addr16
xor
jno
pop
in
mul
lock
cmp
test
mov
cmc
sub
imul
neg
mov
xchg
xor
lret
lods
mov
mov
cld
outsl
enter
pop
xor
notb
scas
jecxz
int
xor
cmpl
loope
sub
out
mov
xor
lcall
fists
leave
in
pop
iret
loopne
imul
dec
ljmp
push
clc
inc
gs
jbe
adc
push
fwait
loopne
pop
pop
addr16
faddl
pop
xor
sub
sub
sbb
pusha
in
call
push
or
ja
and
adc
ljmp
testl
cmpsb
jno
pminsw
aam
jbe
mov
dec
fimuls
mov
lahf
lahf
rol
sub
xchg
addr16
push
jge
addr16
popl
pop
xchg
sbb
fnstsw
sub
push
test
ds
sbb
shrb
outsb
je
mov
and
pop
in
adc
cmp
and
dec
cwtl
fsubs
imul
addl
add
test
jl
loope
xlat
fisubs
inc
ja
nop
iret
mov
int
adc
push
or
inc
das
cmc
sbb
dec
gs
mov
imul
clc
dec
popf
adcb
dec
shlb
in
cmpsl
mov
mov
sub
or
cmp
xor
inc
mov
js
mov
add
mov
jb
ret
mov
sub
loope
lcall
xor
mov
xchg
mov
sbb
aaa
rcrb
ja
or
daa
imul
int
sbb
gs
mov
dec
jle
out
nop
lret
push
cmp
stc
movsb
or
and
lret
daa
aas
and
int
mov
enter
mov
bound
pop
xor
or
in
adc
mov
mov
push
aam
pop
fs
xchg
jg
data16
out
out
cltd
pop
inc
push
lods
fadds
data16
mov
faddp
sbb
push
xor
aaa
dec
xchg
int
mov
mov
adc
sbb
push
jmp
sbb
dec
addb
ja
daa
adc
cld
iret
and
cmp
mov
aaa
incl
rolb
xor
sahf
mov
loop
cmp
pusha
jb
or
pop
repnz
fldcw
movsl
push
enter
sub
out
js
mov
mov
leave
jle
movsl
mov
bound
imul
or
push
fisubs
repz
sti
nop
jge
ret
fwait
repz
aam
inc
add
jne
les
out
push
clc
cmp
sub
and
push
mov
insb
cli
out
ja
and
into
push
xor
mov
cltd
cmpl
nop
jae
sub
rclb
and
mov
add
mov
fs
dec
dec
xchg
int3
sub
call
fmulp
in
adc
mov
ret
sub
inc
popf
lods
mov
iret
ja
test
fs
mov
jecxz
mov
roll
push
ret
fsubl
jo
adc
test
subb
xor
lods
sub
clc
sub
add
cmp
cwtl
movsl
mov
loope
fldt
pop
stos
mov
sbb
ja
push
ds
mov
std
mov
or
mov
adc
insb
push
mov
push
les
mov
cs
and
enter
or
rorb
fadds
mov
orb
dec
sub
lock
ds
jbe
cmp
pop
aad
fbstp
push
sub
sbb
pop
mov
add
cmp
or
icebp
into
cmp
stos
push
pop
push
lcall
clc
fwait
fs
adc
in
fscale
gs
inc
cltd
xor
jb
jnp
xchg
out
jno
add
shll
call
and
mov
mov
std
loopne
ss
cmp
es
stos
jle
movl
or
xchg
lods
repnz
loop
mov
ds
in
std
jge
add
push
orl
iret
lret
ret
xor
aam
xor
sbb
in
daa
jp
xor
sbb
jecxz
push
movsb
inc
iret
cs
mov
xor
jecxz
mov
xlat
jb
xchg
lods
dec
cwtl
mov
cmp
inc
aad
or
xchg
jns
inc
sub
xor
and
test
out
sbb
jmp
sbb
and
jp
testb
and
lret
xor
xorl
pop
push
inc
mov
sub
add
test
jns
imul
clc
push
cmp
adc
ljmp
aas
mov
or
into
xor
ds
add
imul
push
inc
adc
mov
fstl
movsb
or
ficoml
mov
sub
stc
shlb
cmc
inc
xchg
daa
sbb
dec
mov
in
pushf
aas
jmp
repnz
sti
loop
cwtl
push
xlat
xchg
frstor
mov
xlat
push
xor
rorl
sti
mov
popf
mov
sbb
test
ret
mov
xchg
jns
ret
xor
lds
pop
cmpsl
mov
cld
add
test
xor
repz
subl
or
pop
sub
ds
sub
sub
icebp
fs
pop
inc
mov
insl
daa
mov
test
rol
sahf
mov
imul
xor
popa
ljmp
movsb
repnz
ds
pusha
les
xor
jge
lahf
sbb
sahf
or
inc
lods
repnz
xor
scas
jl
dec
mov
and
loope
ret
in
push
adc
aas
xchg
sbb
filds
cmp
mov
outsl
dec
cmp
decl
fidivrs
out
ror
cli
adc
out
dec
cld
sbb
dec
out
sbb
sub
adc
sbb
pop
push
inc
push
xchg
or
les
push
mull
leave
lds
aad
mov
mov
and
test
cmp
shl
and
jae
call
pop
call
push
flds
aad
pop
ret
test
add
js
cmp
mov
imul
ret
or
bound
mov
shlb
inc
mov
out
in
adc
dec
jns
test
inc
xchg
and
sbb
xchg
lret
sbb
fistpll
test
add
in
pop
push
in
pop
stc
sbb
inc
mov
and
scas
sahf
ror
lock
decb
test
ret
sti
push
inc
sbb
or
add
lret
outsb
pop
mov
sub
xchg
pop
imul
adc
lret
lods
mov
mov
jmp
dec
jge
fadd
in
int
mov
jg
jae
sub
jmp
mov
and
ja
xor
pop
add
loope
lahf
push
push
cli
xchg
xor
sbb
and
or
lock
popa
out
pop
xor
push
push
aaa
test
jne
add
mov
sub
std
and
mov
into
repz
push
leave
mov
sub
inc
cmc
out
and
sub
pop
xor
cltd
pop
xor
mov
ja
hlt
mov
and
adc
pop
mov
and
jae
stos
popa
or
mov
out
dec
add
jmp
push
popa
xchg
lcall
jl
shrb
dec
push
dec
or
jo
sarb
sub
ja
repz
jge
dec
or
fsub
call
cmpsb
shll
push
sahf
xor
push
cmpsb
xor
subb
mov
xchg
inc
sub
sbb
add
dec
faddp
ja
mov
fisttpll
mov
arpl
jmp
enter
mov
sbb
arpl
rorb
inc
pop
loop
in
ljmp
sarb
xor
mov
adc
xor
inc
cli
or
scas
shll
mov
into
out
jb
mov
hlt
mov
in
rorb
jb
push
mov
gs
int3
adc
lcall
mov
xor
repz
mov
pop
jae
popf
mov
mov
push
push
pop
cmc
xchg
push
push
jp
pop
ljmp
ja
and
fs
testb
adc
es
cmp
jg
scas
mov
dec
ds
es
and
and
test
hlt
test
mov
jo
xchg
pushl
rcr
push
lret
inc
xchg
dec
cli
into
leave
movsb
cmp
and
jae
and
outsb
push
xor
sbb
mov
loope
xor
push
jecxz
daa
loopne
pusha
data16
rcll
lods
xor
push
cmc
inc
mov
out
insb
outsb
stos
fisubs
adc
jp
mov
mov
push
and
aad
pop
aam
lds
cmpsb
dec
loop
xor
ret
in
cmp
pop
sbb
mov
adc
or
jecxz
jmp
sarb
inc
lcall
sub
das
push
or
stos
mov
stos
add
mull
cltd
divb
jge
inc
push
inc
jle
and
aaa
mov
push
push
sub
mov
mov
loop
cmp
ret
jge
in
cwtl
and
out
cmp
mov
int3
mov
das
lret
bound
lock
insb
mov
jl
fisubrs
lods
push
fldenv
clc
dec
cmp
pop
xor
outsb
mov
in
or
push
jns
cmpsl
out
ret
xchg
insb
xlat
or
scas
xchg
bound
mov
push
mov
lahf
mov
outsl
add
cmp
jae
sbb
fldt
mov
cmp
adc
or
aam
mov
mov
mov
dec
aaa
pop
and
adc
xchg
jmp
es
cmp
arpl
dec
xchg
popa
mov
push
push
xchg
iret
daa
adcb
xchg
add
fiadds
outsb
push
or
clc
xchg
rcll
push
addl
xchg
sub
fdivr
js
mov
and
or
lret
dec
ds
hlt
or
scas
addl
lahf
fiaddl
gs
jge
fidivl
jae
mov
pop
sahf
pop
fists
push
sbb
mov
iret
inc
gs
dec
add
orl
repnz
jbe
movsl
and
jg
dec
fsubr
pop
inc
xor
pop
cld
popa
or
cmp
lahf
pop
xchg
adc
pushf
adc
cld
ss
push
js
in
testb
mov
aas
mov
data16
repnz
pop
es
lcall
mov
mov
bound
dec
fsubl
lods
dec
cli
mov
fistpl
sub
rorb
ret
jg
shrb
arpl
cmp
mov
adc
roll
in
or
ljmp
mov
fxch
push
inc
sub
xchg
push
aad
sbb
js
ret
pop
shlb
out
add
leave
sbb
and
insb
test
add
rclb
jl
into
call
xchg
cmp
ret
adc
mov
out
jbe
dec
mov
jns
outsl
aas
or
js
jno
push
mov
shlb
je
inc
mov
shlb
arpl
and
sarl
inc
jno
xor
imul
cmp
sbb
popa
cmp
push
test
roll
mov
cld
and
pushf
mov
and
adc
and
pop
push
js
adc
fistl
in
out
repz
and
mov
cld
test
add
fmull
idivl
pop
or
arpl
mov
and
daa
iret
fmul
adc
cmp
inc
mov
call
enter
or
addr16
xchg
inc
dec
out
iret
gs
lock
mov
es
repz
or
in
pop
sbb
lds
jns
push
in
sbb
call
lock
xchg
loop
aas
xor
xchg
clc
cmp
xchg
insl
in
jmp
lods
and
test
and
scas
dec
arpl
cmc
xor
ss
inc
lea
add
mov
and
add
popa
sti
sbb
push
mov
and
divl
out
jo
or
ret
vpunpckhdq
xor
aaa
adc
sub
loop
mov
fwait
nop
shrb
push
popf
and
cld
jnp
sti
xchg
in
inc
mov
in
cmpsb
out
mov
popf
jb
lahf
fwait
add
lea
cwtl
or
and
scas
cld
movsb
push
jns
cmp
sarb
or
loop
jge
test
dec
xorb
movsb
in
mov
arpl
clc
in
imul
inc
and
loopne
cmp
adc
daa
rcrb
pop
mov
xchg
push
lods
jmp
lret
xor
scas
push
add
xor
shll
lds
mov
add
adc
rclb
call
movsl
jg
ds
arpl
loopne
jecxz
adc
fptan
into
inc
roll
xchg
imul
sub
push
lret
gs
push
test
cmc
outsl
out
stos
cmp
pop
faddl
mov
sbb
cmpsb
lock
fisttps
lret
fldl
in
add
lcall
mov
bound
mov
mov
in
outsl
and
push
movsb
out
jbe
into
and
addl
pushf
mov
jg
cmp
das
aas
and
leave
or
into
aaa
ja
mov
shl
xchg
ja
adc
sbb
and
lahf
in
cmp
ljmp
xor
in
add
cmp
inc
and
push
jnp
mov
and
or
mov
sbb
inc
push
sub
cmpsl
mov
cmp
repz
cltd
fwait
nop
and
ds
mov
fldl
mov
stos
popa
cltd
adc
pop
cmp
inc
mov
insb
inc
insl
jg
cmp
or
int
xor
mov
jge,pt
repz
add
test
jg
push
inc
cmpb
aam
xor
mov
dec
xchg
loop
pop
in
test
cwtl
push
sub
mov
xchg
stos
gs
test
pop
push
je
cmpsb
fwait
std
mov
js
pusha
push
in
xchg
mov
mov
sahf
idivl
sbb
jecxz
and
cmp
pop
lret
aam
shrb
js
add
dec
pop
loop
xchg
cmp
push
test
mov
adc
xlat
mov
dec
mov
mov
cmpsb
xchg
cwtl
outsl
out
dec
pushf
mov
roll
sbb
sbb
or
pop
scas
mov
and
movsb
cs
mov
fs
sti
fldenv
inc
leave
cmc
and
out
xchg
ja
in
mov
inc
add
pop
movsb
incb
mov
or
fwait
loop
mov
mov
test
fwait
hlt
daa
jp
add
and
mov
lds
xchg
pop
sbb
and
cli
mov
jmp
jne
pop
mov
in
cmc
add
cmp
jg
out
jno
dec
outsl
into
and
push
mov
mov
scas
rcll
fs
jp
shl
mov
add
mov
daa
inc
dec
pop
lea
rclb
cltd
mov
adc
pop
cs
xchg
mov
pop
pop
pop
xchg
dec
push
cwtl
adc
adc
lret
fldln2
push
nop
xchg
xlat
iret
push
popa
mov
call
mov
in
fwait
out
mov
fisubs
leave
outsl
cmp
popf
jns
test
roll
jge
dec
pop
aas
je
pop
lret
add
or
xor
mov
mov
jmp
pushf
mov
out
or
mov
fsubrs
cmp
int
mov
leave
mov
inc
movsl
or
push
fisttpll
mov
cmp
enter
insb
cmp
ljmp
mov
push
out
jmp
mov
and
sarb
stos
cmp
jb
repnz
incl
sub
xchg
test
or
xor
pop
or
pushf
jno
outsl
pop
outsl
daa
xchg
daa
adc
jnp
pop
aas
gs
outsb
clc
push
sbb
push
mov
jge,pt
cmp
push
ret
and
ret
orb
lock
std
mov
aaa
ja
push
xchg
xor
inc
popf
aaa
jecxz
xor
xchg
pusha
ja
mov
cmpsl
push
add
and
or
and
in
out
sbb
xchg
lea
das
push
push
jb
imul
cmp
nop
xchg
rcr
lea
push
inc
test
test
outsb
movsb
add
nop
sbb
int3
mov
xchg
test
xor
pop
xchg
popa
insl
aad
fnstcw
adc
pop
xchg
stos
out
fadd
push
outsb
xor
imul
sub
imul
cmp
inc
or
or
pushf
add
scas
mov
mov
je
js
jns
dec
imul
add
bnd
loopne
and
pop
dec
push
addr16
push
das
fwait
xchg
sub
cmp
add
outsl
inc
stos
pop
fldl
sub
add
fldl
test
pop
lret
inc
test
fdivr
fdivs
repz
fwait
and
cld
fs
xchg
ret
fists
inc
fs
mov
or
sbb
mov
xchg
rolb
gs
jno
mov
out
lcall
into
cwtl
xchg
incb
es
dec
inc
out
add
cmp
call
add
aam
lcall
and
sbb
cmp
stos
hlt
push
or
sahf
aaa
fldcw
xchg
pop
jle
cmc
sub
fistpl
or
loope
xchg
xchg
stos
mov
flds
sub
cmove
adc
mov
repnz
sub
insb
fadd
faddl
imul
fdivrp
stc
nop
xchg
and
lea
test
pop
cmpsb
cwtl
sahf
lret
cld
xor
loop
incl
insl
aad
fs
vphadduwq
arpl
std
or
int
xchg
sbbl
or
pop
sbb
xchg
nop
ljmp
fisubrs
sar
mov
xchg
test
jp
mov
push
outsb
dec
cwtl
es
push
pushf
or
mov
xor
mov
inc
push
jo
imul
xchg
cmp
pop
js
sub
xor
xchg
jl
pop
and
lods
leave
push
cwtl
nop
inc
inc
mov
xlat
std
inc
into
xor
sbb
xor
adc
pusha
pop
adc
or
cmp
jae
sbbb
mov
lods
mov
data16
mov
mov
xchg
shll
adc
fsubr
jp
pushf
out
fwait
stos
stos
xlat
jecxz
mov
scas
jns
xlat
in
ret
rcr
mov
push
inc
and
dec
cmp
xchg
jb
bound
test
inc
add
sub
sbb
lods
xor
into
cmpsl
add
dec
and
sub
mov
dec
mov
jp
sbb
push
push
xor
clc
dec
mov
sahf
xor
aad
aam
movsl
ja
scas
shr
mov
xchg
fldenv
cs
rcl
add
dec
sub
mov
fwait
daa
inc
repnz
mov
outsb
cmp
push
popf
out
sti
xor
dec
out
addr16
xchg
out
mov
mov
mov
stos
test
lods
lds
add
and
xchg
sahf
fwait
addr16
fldl
pop
dec
jge,pt
icebp
sub
add
scas
loopne
movsl
cmpsb
and
test
add
xchg
adc
into
xor
out
mov
movsl
call
scas
cmc
divl
aaa
aas
push
mov
es
xchg
enter
cmp
xor
add
fdivrp
sahf
je
push
lahf
pop
fldcw
mov
mov
shlb
or
maxps
cmc
cmp
sahf
adc
es
pop
mov
mov
pop
bound
sbb
mov
idivl
or
push
ljmp
and
outsl
test
push
xchg
lds
pushf
out
test
cmp
pop
jns
push
mov
rcll
aaa
lds
test
jle
rcrl
xchg
xor
dec
lret
jbe
mov
xor
or
mov
js
aad
lods
fwait
inc
jl
jmp
shll
mov
inc
jno
lods
data16
orl
insl
jo
jne
sbb
rorb
aam
aas
or
jp
ljmp
add
push
inc
enter
scas
loop
pop
inc
sub
jp
ret
cmp
xchg
repz
jns
lock
lods
nop
in
lcall
rdtsc
sbb
sub
fidivs
adc
jmp
insb
cld
mov
loop
clc
mov
or
test
inc
pop
cmpl
pop
xor
pop
sbb
dec
lods
inc
xor
xchg
dec
push
out
loop
adc
jnp
fmull
or
mov
insl
push
outsb
scas
mov
push
xor
mov
and
and
iret
rclb
xor
mov
jmp
ficomps
push
dec
cmp
movsb
adc
popf
mov
xchg
adc
mov
dec
popa
add
and
lcall
lcall
in
shll
std
fld
out
shr
into
fstp
mov
mov
movsl
fcomip
mov
cli
outsb
sub
cmp
jae
test
sub
cmp
in
inc
je
push
fadds
inc
fildl
or
jg
cmp
jae
cmp
stos
mov
or
inc
nop
add
aas
adcl
jns
xor
pushf
fs
and
jge
mov
outsb
push
subb
pushf
pop
in
mov
stos
js
fs
stc
repnz
cmpsb
push
and
sub
out
xchg
movsl
jmp
or
jo
ffreep
ret
imul
or
and
negb
in
or
loop
gs
push
icebp
jbe
shlb
mov
repz
push
sub
and
push
and
mov
or
loopne
mov
mov
or
inc
test
lea
cmp
shl
add
lds
sahf
rcll
inc
nop
mov
push
jg
adcb
jg
add
mov
cmp
xchg
stos
push
daa
hlt
out
jbe
lahf
loope
mov
jo
imul
jle
mov
aas
add
cmp
repz
out
decl
mov
leave
push
cmp
cmpsb
cs
cmpsl
es
roll
mov
ds
rcll
pop
xor
mov
stos
sub
sbb
sbb
mov
jno
pop
push
fsubrl
cmp
aad
mov
sub
imul
repz
or
push
test
ret
xor
and
aad
das
test
loop
inc
fdiv
jne
sub
pop
jae
arpl
jp
xor
clc
xchg
into
mov
pop
jnp
xor
test
push
push
or
xchg
out
adc
arpl
pop
fs
mov
fsubr
mov
and
test
xchg
inc
testl
push
dec
sbb
push
pop
sub
repnz
mov
cmp
push
lret
sbb
or
fidivl
add
push
adc
test
xchg
je
lea
lret
out
and
clc
xor
and
add
pushf
sahf
and
sbb
add
xor
mov
and
out
mov
pushf
popa
add
and
add
jle
shrb
and
add
ss
xchg
inc
cmp
lds
jg
in
mov
pop
mov
je
push
pop
ret
insb
or
cli
movsb
lods
repnz
mov
iret
cld
in
loopne
rolb
imul
outsl
cli
mov
xor
in
jns
movsb
cmp
xor
jbe
mov
mov
call
je
xor
add
add
fdivl
clc
pop
out
inc
leave
loop
mov
imul
jno
add
imul
jmp
out
sub
fbstp
sub
popf
and
xchg
inc
jb
and
daa
jge
cmpsl
jne
push
imul
adc
fs
js
out
or
shll
pop
outsb
leave
leave
cwtl
inc
or
xchg
xchg
mov
xchg
out
xchg
shl
fdivrl
jo
lahf
mov
lcall
test
scas
mov
repnz
and
xor
adc
or
fcmovne
mov
mov
mov
or
jmp
outsb
push
add
rolb
scas
push
jecxz
enter
push
in
fsubrs
popa
jbe
and
fyl2xp1
repnz
mov
popa
fs
bound
dec
inc
mov
sub
rclb
subb
pusha
addb
jmp
push
pop
into
enter
stos
mov
add
loop
clc
lret
xchg
xor
sar
enter
adc
rolb
fadds
mov
or
mov
cltd
add
pop
jnp
lea
cmp
fcmovb
xchg
push
dec
sbb
mov
jg,pn
daa
jmp
mov
adc
xor
cmc
aaa
mov
scas
pop
push
sub
ljmp
lock
mov
and
arpl
jno
mov
jnp
mov
or
xchg
mov
out
jne
ret
es
stc
adc
xchg
pusha
cmp
jge
push
push
cmp
cli
push
daa
push
popf
jl
dec
adc
sub
movsl
push
lock
dec
add
cld
addl
mov
cmpl
adc
sbb
xchg
xchg
sbb
aas
and
sbb
mov
cmp
iret
and
dec
push
pop
iret
xorl
add
push
aad
jb
jp
loope
scas
dec
add
xchg
inc
enter
cld
cmp
jae
insb
and
sbb
xchg
js
fcom
in
lea
adc
movsl
xchg
in
shl
fisubs
cmp
out
xchg
push
mov
dec
ds
mov
arpl
movsl
ds
xor
sbb
bnd
mov
cld
popa
push
sub
loope
fwait
and
leave
cmp
into
xchg
adc
in
xchg
pop
mov
ja
icebp
push
insb
in
lock
sbb
jmp
into
testb
push
sub
into
aad
fwait
adc
jnp
mov
out
rcrb
adc
xor
pop
cmpsb
orb
rol
dec
mov
dec
jb
mov
xchg
and
mov
ror
xchg
sub
push
pop
ret
sub
or
test
jmp
adc
dec
add
outsl
stos
and
cmc
loopne
scas
scas
xchg
rcrb
cmpsb
mov
test
decl
imull
fs
popa
mov
cwtl
push
stc
dec
addb
fimull
dec
and
jl
int3
push
cmp
popa
je
mul
fists
and
cmpsl
mov
cli
ljmp
loop
popf
lret
mov
add
pop
call
add
adc
pusha
and
cs
cwtl
mov
inc
ficompl
mov
mov
mov
int3
in
movsl
xchg
and
inc
cmp
je
adc
or
mov
push
idivl
sub
pop
mov
push
cmp
fwait
cmp
or
sbb
les
imul
add
sbb
xchg
icebp
and
jecxz
mov
ret
and
xor
jp
or
outsl
fisttpl
shll
mov
popa
xchg
cs
insb
idivb
popl
add
cli
mov
popf
scas
es
inc
dec
jbe
sub
ja
lods
mov
push
dec
out
fwait
adc
inc
mov
jecxz
cmp
fisttpl
out
cwtl
jno
pop
mov
xchg
outsl
stos
sub
sub
test
inc
push
cwtl
daa
divb
xor
push
cld
push
or
mov
mov
imul
mov
aam
cmc
cmpsl
push
fwait
mov
sarb
sahf
and
pop
or
loop
out
dec
mov
iret
fs
push
addr16
es
popa
imul
js
cld
xchg
cld
fwait
mov
xchg
push
pop
out
in
and
cmp
cld
insb
add
negl
js
scas
aad
addb
or
lods
iret
outsb
xchg
add
stos
cltd
stos
xlat
inc
dec
aaa
pop
popf
sbb
scas
mov
cli
dec
mov
stc
mov
jne
stos
mov
push
into
inc
push
fidivl
lods
adc
adc
xchg
cmp
incl
lcall
aad
xor
inc
xlat
inc
fdivs
pusha
push
push
dec
pop
addl
leave
lcall
push
pop
ja
cmpsl
sub
ror
and
fs
into
fbstp
lds
das
xchg
je
xchg
mov
pop
jp
add
jbe
jle
lods
in
popf
lahf
enter
insb
call
out
mov
pop
mov
sarl
inc
pop
cmpsl
add
mov
pop
loope
cmc
lods
ljmp
push
lahf
addr16
adc
adc
imul
jle
jns
clc
mov
scas
mov
insl
jg
sbb
pushf
mov
aas
sub
sub
out
adc
mov
pop
cmc
jge
mov
sub
mov
push
adc
sbb
push
rcrl
sbb
in
addr16
pop
add
push
aaa
mov
lcall
push
out
sub
or
pop
ds
outsl
xlat
call
xchg
arpl
movsl
addr16
mov
mulb
aas
lret
mov
mov
and
cmpsb
sub
jecxz
addr16
push
and
push
faddl
mov
add
and
inc
aam
fldenv
or
int3
jbe
or
cli
cltd
push
xlat
out
adc
adc
sub
scas
stos
jnp
cmp
inc
push
jae
int3
sbb
adcb
imul
movsb
jbe
jl
movsl
ficoml
movsb
shlb
xchg
scas
sbb
stos
sbb
shrb
inc
rclb
xor
dec
push
imul
cmp
fnstcw
push
cld
xchg
mov
xor
adc
popa
mov
arpl
pushf
mov
jmp
cmc
pop
and
sbb
ja
xchg
add
loopne
mov
aas
jnp
adc
sbb
mov
test
sbb
ss
stos
loope
mov
mov
add
sbb
adc
jp
testl
iret
push
mov
pop
pop
movsl
dec
roll
add
adc
sahf
dec
dec
sti
fistps
lods
pop
mov
js
aam
ficoml
xchg
pop
pop
dec
add
aam
dec
sbb
in
stos
loopne
dec
jne
and
das
dec
mov
dec
jecxz
add
jns
inc
pop
stos
scas
pushf
scas
and
jecxz
jns
mov
xchg
push
dec
push
insl
xchg
mov
lahf
mov
adc
scas
xchg
add
test
cwtl
push
xchg
dec
jge
mov
cwtl
cmp
mov
hlt
push
loopne
daa
dec
push
hlt
jbe
xor
fstpl
test
cmc
call
js
mov
mov
icebp
xor
pop
mov
sbb
out
rorl
adc
sti
pop
mov
mov
ds
jo
push
loopne
lcall
sub
lret
inc
cmp
mov
int
daa
dec
andl
jbe
popa
and
jg
ret
pushf
mov
shrb
jmp
dec
pop
lea
add
out
dec
dec
mov
ret
xchg
fstp
mov
rorb
pushf
sbb
add
or
adc
std
and
sahf
push
push
in
mov
pop
adc
inc
addr16
dec
ljmp
outsb
mov
aad
push
repnz
les
sbb
out
inc
lods
jnp
jbe
cli
jmp
or
aaa
sbb
mov
mov
or
rcrb
insl
mov
inc
outsl
fnstcw
out
pop
outsl
inc
idivl
sub
sbb
xchg
push
jb
cmp
imull
push
aad
fnstenv
adc
mov
das
push
cltd
ret
mov
cmp
push
sub
mov
push
rcll
xchg
xchg
inc
leave
in
mov
in
mov
repnz
mov
pushf
leavew
repz
mov
ret
lea
add
movsb
dec
sub
jge
fnstcw
mov
mov
jae
jne
sub
pop
sub
sub
xorb
out
lods
ja
das
dec
cli
call
test
insb
pop
outsl
addl
aam
stos
imul
je
cmp
lcall
daa
fstpt
mov
imul
lret
movsb
and
xchg
dec
psrlq
pop
rcrl
xchg
test
out
or
and
xor
cmc
pop
mov
ficompl
lcall
addr16
push
lret
insb
xor
adc
pop
stos
adc
fdiv
subb
or
push
dec
jne
mov
push
out
mov
pop
in
fistpl
scas
sti
cmp
mov
mov
pushf
clc
push
repz
mov
in
das
test
add
scas
lahf
aam
mov
in
sub
lahf
adc
pop
mov
xchg
sbb
jbe
pop
stos
xchg
insb
test
mov
xchg
push
push
adc
xor
xor
jno
pop
mov
add
into
fists
jno
and
cmp
jecxz
jae
in
cli
testb
jbe
loope
and
cld
mov
mov
jmp
mov
mov
sbb
xchg
aad
and
pop
je
int3
popa
mov
ja
mov
cmpb
cmp
xchg
jnp
pop
iret
jle
cs
dec
dec
dec
push
jb
test
sub
fs
lcall
jmp
cmp
mull
stos
jg
out
pop
insb
and
rorl
adc
fistl
jno
outsb
into
pop
and
adc
cmp
rorl
nop
jmp
push
mov
pop
sbb
ja
mov
test
xchg
and
push
pop
mov
add
inc
pop
shl
imull
sub
stos
lcall
mov
repnz
test
in
repnz
or
insl
jbe,pn
push
icebp
fildl
mov
gs
add
cwtl
scas
mov
cld
loopne,pt
fs
fwait
mov
xchg
mov
jge
aad
mov
fwait
add
sti
jecxz
scas
in
mov
sbbb
adcb
or
cmp
xor
mov
mov
mov
dec
sbb
mov
push
push
in
sbb
jmp
pop
clc
inc
jp
stos
jo
and
lods
outsl
push
dec
mov
mov
dec
xor
dec
hlt
cwtl
xor
xchg
cs
push
scas
jno
or
loopne
cmp
pop
lock
mov
test
lea
jns
xchg
mov
push
add
sbb
sbb
push
and
mov
loopne
daa
push
bound
jg
into
aad
repnz
outsb
bts
xor
mov
insl
fiaddl
mov
ret
addr16
adc
dec
fs
jae
lret
js
stc
xor
xchg
int
test
jle
sub
ss
dec
aam
pop
int
rclb
or
adc
or
dec
pop
add
mov
arpl
shl
xchg
arpl
and
mov
movsl
sbb
cwtl
aam
daa
push
mov
push
inc
jle
inc
pop
ror
mov
ja
mov
jne
sub
jecxz
test
jg
dec
cmpsb
adc
call
xor
bound
jbe
and
icebp
and
and
mov
jae
xchg
fcomi
movsl
add
lret
icebp
imul
mov
and
mov
push
leave
ja
lahf
loope
jle
popa
ljmp
adc
cli
push
pusha
jecxz
mov
in
outsl
mov
sub
icebp
fbstp
xor
fdivs
imul
lds
xchg
mov
and
loop
lds
pmulhw
lods
leave
leave
add
ljmp
inc
mov
and
jbe
ss
fcoml
xlat
aaa
into
inc
mov
mov
inc
jae
inc
add
nop
nop
ja
cmp
mov
mov
in
mov
leave
rorl
jo
nop
inc
cmpsb
es
jo
movsl
lods
jecxz
mulb
fcoms
cmp
mov
inc
in
xchg
cli
pushf
and
lcall
jmp
cmp
cmc
inc
pop
movsb
add
insb
xchg
mov
mov
cld
fs
xor
mov
rcr
sbb
or
cmc
xchg
out
xor
imul
imul
dec
insl
leave
fsubp
add
pop
scas
xlat
mov
mov
fisubrl
pop
fisubl
pop
ret
mov
lods
inc
jmp
sbb
xchg
pop
pop
icebp
call
push
pop
cld
pushl
pushf
push
ficoms
mov
pop
stc
hlt
je
adc
rcrl
fisttps
mov
cmpsl
pushf
popf
or
outsl
int
ret
cmp
inc
or
nop
cs
inc
cmp
mov
out
mov
xchg
sbb
repnz
and
pop
pop
mov
scas
std
xor
push
lret
dec
add
cmp
pop
mov
notl
std
pop
or
sahf
enter
jnp
jl
popa
jmp
xchg
divl
aas
in
enter
fs
out
adc
je
and
inc
sub
mov
push
pop
outsb
movsl
cmp
dec
jmp
addr16
jmp
rorb
inc
xor
push
add
nop
inc
gs
fistpl
jp
stos
dec
mov
std
scas
jns
cmp
int3
out
xchg
loopne
aaa
in
dec
clc
sub
pop
mov
pushf
adc
and
add
fstpl
pop
mov
cmp
pop
lret
in
sbb
js
divl
rcll
bound
push
xchg
cmpsl
in
adc
scas
push
add
ds
jno
cltd
jge
lods
pop
jp
mov
jle
popa
ljmp
add
jnp
iret
rcr
mov
dec
add
jmp
or
adc
sar
or
call
pop
sub
imul
adc
add
mov
or
out
jo
popa
pop
dec
inc
out
mov
popf
cmpsl
or
add
enter
mov
add
push
pop
popf
pop
icebp
mov
int
push
cli
push
or
lock
in
sbb
arpl
dec
scas
adc
and
stos
sbb
ret
aas
roll
xor
bound
xor
enter
js
xlat
mov
je
pop
ficomps
jmp
test
sbb
cmp
jmp
cmp
stos
daa
pop
push
sub
mov
mov
or
add
fdivs
call
stc
push
pop
mov
pop
mull
push
dec
fsts
fsts
sbb
lea
inc
cmp
sub
pop
jge
lahf
pop
inc
or
or
fisubrs
xchg
sub
lock
cmp
fstps
adc
test
packuswb
test
mov
mov
jl
cmpb
cltd
call
lret
aad
cs
filds
mov
les
inc
or
cmp
pop
scas
jne
popf
pop
xchg
push
jns
cli
mov
cld
out
inc
sahf
lcall
sbb
vmwrite
incl
jnp
xchg
popa
out
adc
mov
and
adc
fcom
and
add
mov
mov
push
fwait
jns
mov
mov
rcl
imul
subb
add
mov
pop
sub
pop
add
scas
ret
das
add
fs
jg
aam
push
test
cmpsb
rcrl
rcll
mov
mov
sbb
and
mov
into
call
into
xchg
xchg
daa
pop
xchg
jg
mov
and
sub
imul
xor
in
int3
pop
xchg
shlb
push
daa
inc
and
popf
pop
push
leave
xor
xor
sub
xor
jl
adc
cmpsl
fisubrl
sub
ds
loopne
fadds
jl
and
dec
dec
fisubrl
add
sub
and
dec
xor
shr
xor
lods
mov
fdivl
jecxz
cmp
call
xchg
pop
lahf
push
scas
jnp
add
xor
shr
imul
mov
add
movsb
jbe
sahf
jl
sub
ss
or
push
mov
testb
push
jno
pop
mov
and
sub
pop
ret
lods
in
cli
push
enter
and
adcb
jle
iret
jne
ror
jecxz
jp
push
sbb
das
jecxz
add
adc
out
pop
add
dec
xorb
jg
mov
push
sub
dec
inc
mov
mov
nop
mov
mov
pop
sub
pop
cmp
int3
pop
jl
outsl
xor
sbb
out
lahf
loop
test
pop
addr16
xchg
inc
jae
xchg
into
add
repz
stos
mov
int
aad
and
iret
push
lcall
cmpsb
rcr
imul
iret
mov
dec
dec
mov
sbb
xchg
inc
mov
cltd
fcmovnu
push
mov
xor
dec
adc
add
cli
shl
fildll
pop
push
or
sub
dec
mov
xchg
test
in
aaa
sbb
sub
add
inc
lock
add
xchg
call
sub
aas
aas
jns
push
mov
cmp
icebp
inc
call
sub
pop
or
or
jp
mov
mov
fnsave
mov
inc
test
in
nop
pop
enter
xorl
add
push
adc
sub
mov
adc
sbb
mov
xchg
stc
js
fldenv
push
xorl
pop
jl
jne
cmp
fimull
aas
jp
outsl
hlt
cmpsb
fists
ret
add
adc
adcb
jge
into
jne
cmc
xor
mov
or
mov
out
push
push
rorb
cmc
push
iret
cmp
pop
and
movsl
or
ds
rorb
mov
stos
aam
popa
lods
xor
pop
lahf
dec
cmp
repz
push
or
rcrl
scas
jl
outsb
cmc
fsts
push
push
dec
decl
mov
xchg
and
imul
test
jp
mov
imul
dec
inc
imul
and
pop
mov
into
lds
test
fs
inc
push
test
stos
dec
test
mov
dec
in
cmp
adc
cmp
dec
push
inc
popf
stc
rorl
pusha
rcrb
sub
xchg
sub
sahf
icebp
out
stc
out
into
movsb
sbb
fbstp
in
std
adc
fwait
je
imul
xchg
cmp
mov
ds
ljmp
mov
je
fsubl
dec
lds
jge
rcr
mov
ljmp
idiv
sbb
aad
mov
fimull
pusha
int
and
scas
sub
nop
lock
jb
fwait
xor
and
dec
cmp
int3
cmpb
xor
jge
mov
mov
jno
and
je
rorl
cmpsb
lods
int3
test
lret
mov
out
pop
scas
cmp
push
gs
xlat
cmpsl
insb
cmp
mov
test
and
out
pop
cmpsl
add
adc
add
lds
mov
out
sbb
stos
lods
inc
in
out
mov
stc
mov
nop
xchg
or
test
icebp
dec
jle
push
xchg
xor
rcrb
clc
out
insl
push
lret
repnz
clc
insb
into
iret
movsb
and
cwtl
sbb
rol
xchg
test
jnp
iret
mov
jb
aad
xchg
adc
mov
or
jg
adc
mov
loop
sub
dec
pop
push
lea
notb
xchg
inc
or
leave
nop
fincstp
add
inc
pop
inc
add
dec
jnp
or
adc
test
retw
fistl
lcall
add
mov
mov
outsb
sbb
testl
fwait
imul
test
fadd
in
jg
cmp
repnz
in
mov
mov
lahf
ds
inc
jo
push
lret
hlt
and
mov
jbe
ja
es
fistps
aas
insb
jmp
push
ljmp
cli
imul
cmp
dec
push
add
and
aad
adc
repnz
push
imul
mov
fstpt
std
cmp
in
cmp
fcomip
rcl
fldt
into
or
loopne
sbb
mov
lods
jae
fcomps
dec
pop
lock
cmp
push
loopne
loope
pop
out
add
mov
add
test
sbb
sti
mov
xchg
jbe
mov
mov
iret
mov
es
add
jmp
js
arpl
add
cmc
sti
cmpsl
outsl
sar
movsb
ret
aas
xor
imul
add
iret
stc
call
cmp
mov
adc
mov
test
test
xchg
mov
jno
xchg
pop
pop
enter
enter
insl
mov
push
test
ss
inc
mov
push
dec
and
das
lds
das
sub
mov
jle
mov
rorl
sub
pop
mov
or
xor
jns
rolb
pop
jb
scas
scas
and
dec
and
push
mov
or
lcall
shl
sar
adc
vcmpss
lea
adc
dec
dec
dec
into
gs
adc
fidivrl
scas
mov
lock
fldenv
testl
xchg
ljmp
aas
push
pop
jnp
and
push
popa
adc
mov
sub
in
mov
into
inc
add
mov
jae
pop
push
jno
pop
dec
mov
nop
mov
popa
mov
pop
sub
adc
push
lds
andb
popa
mov
and
xor
add
inc
aam
clc
enter
lret
mov
out
pusha
xor
mov
sbb
dec
push
xor
mov
pop
lret
int3
outsl
jno
ss
xchg
and
mov
je
out
enter
je
ds
mov
inc
mov
test
cli
mov
movsb
pop
jecxz
std
ret
lcall
mov
push
fbstp
dec
cs
pop
subl
mov
in
push
cmp
xchg
xor
jo
inc
jle
xor
icebp
push
scas
fists
pop
fidivrl
and
nop
sbb
sub
je
mov
inc
xchg
outsl
aam
dec
and
in
fstl
int3
fildll
loopne
mov
or
dec
push
out
adc
mov
mov
xor
pop
pop
adc
cmp
outsl
mov
popf
push
insb
push
enter
push
xchg
shlb
repnz
ljmp
mov
cltd
sti
mov
adc
inc
push
js
bnd
xchg
mov
stos
arpl
dec
jecxz
push
addr16
jno
loop
jae
inc
je
cmp
ds
adc
pop
pop
jns
pop
cld
adc
pop
pop
jmp
sub
mov
in
push
xlat
jg
pop
dec
in
adc
ljmp
jg,pt
mov
inc
test
cmpsb
aaa
mov
in
push
inc
add
or
ljmpw
pop
pop
imul
in
fcoml
cmp
das
flds
fisttps
xchg
dec
adc
orl
xor
cmp
push
sub
hlt
inc
fwait
jns
jmp
inc
nop
imul
jae
mov
cmp
sub
dec
cwtl
sub
inc
mov
hlt
idivl
lret
and
pop
mov
push
stos
dec
add
sub
mov
fisttpll
ud0
adc
arpl
mov
repz
adc
inc
and
stos
out
pusha
push
jbe
jg
test
out
dec
fstpl
test
jns
pop
dec
or
inc
sub
push
in
sbb
xor
jbe
test
or
xchg
loopne
add
mov
fistl
and
sahf
popa
add
jle
mov
call
adc
insl
dec
mov
sub
clc
mov
dec
cmpl
out
cltd
movups
mov
dec
scas
into
sub
fadds
pop
aad
out
inc
loope
xchg
popf
das
sub
rorl
jmp
bound
sbb
pop
xchg
nop
and
fidivl
into
in
mov
and
xchg
lods
fbstp
adc
mov
push
mov
aas
xor
ffree
fwait
outsl
or
xchg
outsb
int3
push
pop
xchg
xchg
push
cld
stos
mov
pusha
ds
ss
inc
jge
xchg
fisttps
inc
pop
aaa
mov
dec
and
mov
add
jno
pop
mov
sub
mov
dec
cld
xchg
int
xchg
push
xchg
xchg
sbb
out
cmp
stos
mov
and
inc
pop
xchg
subb
testb
lods
jno
out
add
xchg
ds
nop
daa
jmp
jge,pn
fldcw
scas
dec
cmpsb
shrb
loop
insl
dec
pop
pop
cmp
filds
in
cmp
lods
xor
sbb
hlt
lods
mov
jne
daa
pop
sbb
clc
sbb
adc
jno
push
mov
push
xor
adc
fsub
cmpsb
jle
mov
dec
mov
push
jb
mov
mov
lretw
ljmp
cmc
jle
cmp
inc
mov
bswap
fsubrl
mov
sub
sub
iret
or
stos
test
ss
stc
clc
cmp
pushl
ficoml
xchg
outsl
divl
cs
jecxz
and
ret
adc
sub
push
ljmp
sbb
mov
mov
imul
jne
inc
mov
push
cmp
push
cmpsb
jbe
loope
jmp
push
add
movsl
inc
sub
into
mull
push
es
jno
orb
enter
mov
mov
mov
jmp
loopne
addl
int3
dec
mov
inc
and
divl
jno
xchg
dec
mov
pop
xchg
mov
js
repnz
lds
fwait
test
xlat
fldl
jo
xor
sbb
pop
inc
mov
imulb
test
mov
xchg
inc
aam
call
xor
or
cmpsb
subb
lahf
inc
sub
pop
arpl
pop
dec
xor
pusha
add
xchg
inc
push
loopne
jmp
cmp
test
xchg
imulb
xchg
cltd
aas
add
aad
lret
dec
into
or
clc
in
add
sti
mov
jg
inc
mov
lods
mov
fs
mov
xchg
push
int3
xchg
jecxz
into
pop
aas
cltd
shlb
mov
bound
xor
xrelease
jo
mov
inc
push
pop
aam
outsl
xchg
xchg
nop
aam
lcall
movsl
call
insl
sarl
sub
incl
shl
sbb
xchg
or
es
jbe
icebp
mov
das
sub
cwtl
ret
jnp
push
add
push
popf
lahf
dec
enter
jl
fldenv
cmpsl
ret
hlt
and
or
push
cld
inc
out
push
push
jg
cmpsb
pop
cltd
push
stc
cmp
aad
jb
lea
popa
lret
push
push
mov
lret
and
repz
rcrl
and
add
int3
mov
cld
imul
out
push
xchg
adc
sub
push
clc
daa
arpl
daa
push
hlt
arpl
into
adc
imulb
add
sbb
imul
lcall
out
stc
pop
iret
dec
int
dec
repnz
lcall
adc
aaa
mov
cmpl
pushf
jmp
xchg
shlb
xor
jne
push
repnz
xorb
pushf
lahf
fadds
insb
or
mov
fidivrs
vpunpckhqdq
dec
xchg
sbb
mov
inc
inc
sbb
dec
lock
out
loope
jge
fldl
cmc
outsb
mov
mov
mov
mov
scas
adc
shrl
mov
lcall
shlb
dec
test
mov
add
test
aam
sbb
xor
adc
push
sub
adc
idivb
sbbl
outsl
shl
cld
jg
sbb
daa
addl
mov
or
xor
int3
aam
in
mov
insb
ds
inc
push
push
xchg
retw
push
sbb
pop
mov
mov
mov
jg
adc
or
gs
std
mov
jmp
mov
push
std
mov
lods
adc
lahf
sbb
dec
push
and
ja
dec
dec
clc
and
add
sti
mov
push
and
xor
mov
dec
outsb
dec
call
xor
cwtl
xchg
xor
ljmp
filds
add
in
push
insb
xchg
mov
testb
rorb
push
dec
fbstp
pop
aas
push
dec
sub
xlat
jb
lea
inc
cmp
adc
int3
movsl
imulb
mov
movsb
inc
fsubs
in
dec
iret
cmp
insl
push
pop
jo
loopne
jo
or
ret
outsb
and
dec
jnp
in
roll
sbb
xchg
inc
in
sbb
cli
es
xor
cmp
mov
lods
mov
cli
pop
push
aaa
cld
sbb
or
xor
insl
in
insb
push
xchg
mov
imul
imul
inc
scas
scas
js
lcall
mov
sbb
inc
pop
test
lds
or
int
aas
insl
and
xor
dec
push
push
jae
add
movsb
inc
lahf
std
mov
lahf
rol
mov
jp
jmp
ja
and
lret
and
inc
sbbb
cmpsb
jno
pop
ficoms
xchg
xor
bound
lret
mov
cmpsl
mov
dec
dec
pop
mov
fdivrl
and
adc
pop
insl
ds
mov
cmp
mov
outsb
push
sahf
sbb
cltd
jl
lahf
mov
test
std
lods
clc
cmp
pop
int
int
sbb
lock
sub
pop
xor
xor
cmpsb
in
mov
test
aaa
and
mov
mov
xchg
dec
pop
xchg
mov
xchg
adc
shl
iret
popl
std
jb
ja
jp
cmp
add
bound
ret
or
es
iret
lahf
mov
ss
lock
fdivl
mov
xchg
xchg
stos
dec
bound
popa
mov
sbb
jp
dec
dec
pushf
popa
lock
cmp
add
sub
inc
mov
aaa
pop
cmp
ret
mov
mov
xchg
ret
sbb
sbb
das
push
shrb
repz
add
push
fsubs
mov
sub
sbb
movsl
cltd
fisttps
push
repz
add
inc
or
add
xchg
movb
pop
fiaddl
inc
decb
pop
add
cmc
inc
fidivs
in
shrb
pop
shll
cmpsl
jns
es
xchg
mov
std
sahf
cld
xor
cltd
xor
pushf
dec
lahf
inc
nop
cmp
mov
cltd
js
movsl
push
lea
cli
fstl
or
lods
outsb
add
xchg
aaa
push
js
add
cmpsl
dec
adc
je
cs
mov
movsl
lods
jne
in
loop
lods
sub
loop
ret
cli
test
mov
daa
add
jmp
out
cs
leave
outsb
icebp
sbb
les
push
sbb
mov
fadd
ds
or
dec
cmp
sbb
inc
mov
pop
pushf
pop
insb
mov
sub
push
filds
mov
push
mov
xchg
je
dec
xor
sbb
mov
ret
pushf
inc
popa
hlt
out
pop
mov
loop
out
jle
test
into
icebp
mov
outsl
into
mov
sbb
fisttpl
push
xchg
mov
mov
out
loop
fidivs
rcrl
outsl
jno
shlw
dec
adc
sbb
wrmsr
add
and
aaa
lcall
cs
xchg
jl
push
jns
push
push
mov
and
mov
cmc
and
add
fcomps
cwtl
pop
fdivrp
xor
ds
outsb
pop
popa
dec
push
shr
test
push
shrl
mov
aad
cltd
adc
loopne
stos
lock
mov
jbe
push
outsl
cmp
adc
rorl
jnp
into
dec
les
jp
pop
ja
and
outsl
ret
and
mov
cmp
push
mov
enter
sub
adc
mov
leave
out
or
movsl
push
jl
push
push
and
pop
cmp
cmpsl
jl
es
test
out
arpl
imul
adc
dec
call
insb
inc
pop
mov
mov
movhps
fstpt
sub
int3
or
mov
pop
aam
xchg
popa
sarl
and
mov
dec
sbb
into
mov
cwtl
inc
cltd
jmp
dec
in
adc
imul
pop
sub
dec
in
xchg
sub
add
jo
cmpsl
jmp
push
add
cmp
sbb
push
dec
rdmsr
adc
les
mov
sub
movsl
mov
mov
mov
mov
arpl
test
dec
xchg
inc
out
in
jno
jnp
jns
inc
lret
xchg
cmpsl
mov
jns
imul
ret
cmp
sbb
mov
je
decb
pushf
and
and
lods
mov
push
and
imulb
insl
and
aam
mov
icebp
xchg
add
aas
or
addr16
cltd
xchg
das
sbb
out
fisttpl
mov
aaa
imul
pop
push
or
inc
push
jge
dec
jo
cmc
cmp
push
inc
pop
dec
jb
push
jmp
jne
imul
xor
orl
add
add
insl
sub
adc
test
cmpsl
adc
push
loop
push
int
pop
xor
push
fs
pop
mov
add
add
data16
in
cmpsb
sbb
or
sbb
push
cld
inc
out
ret
je
negl
inc
stos
insl
cmp
rcll
mov
cmc
insb
xor
adc
push
cli
lods
mov
lock
xchg
sub
inc
or
pop
or
mov
imull
inc
push
pop
sbb
lcall
das
dec
mov
pop
jbe
fstps
test
dec
test
daa
out
or
pop
jb
jo
jp
ret
cli
push
jg
jo
fistpl
push
fs
lds
stos
mov
mov
pop
and
jecxz
insl
ret
adc
mov
and
das
dec
mov
pop
jae
xchg
jno
orb
pop
cld
jns
adcl
mov
push
mov
test
xchg
sub
inc
sbb
sub
pushf
or
outsb
mov
into
push
addl
sbb
jp
add
pop
cmpsb
sbb
inc
sub
mov
and
add
sti
adc
loopne
push
push
imul
sbb
jge
pop
test
sahf
jno
push
sbb
dec
push
pop
jecxz
push
loopne
popf
cwtl
test
mov
stos
add
ficoml
fucompp
cmp
fdivl
sbb
xor
adc
loopne
inc
xor
enter
sub
mov
xorb
xchg
jo
fnstenv
bound
sub
adc
sbb
out
clc
lea
cmc
dec
and
popaw
pop
cmp
lret
out
pusha
or
mov
inc
xorl
test
mov
mov
jg
fstpl
jge
jg
xor
jae
sbb
cmp
cmp
repz
sbb
or
aaa
rcr
icebp
dec
or
addr16
movsl
lret
push
in
js
mov
inc
sbb
test
jns
pop
repnz
or
sbb
dec
fdivs
jo
or
rorb
int
je
movsl
mov
call
push
mov
scas
mov
divl
sub
and
jle
divb
es
dec
jne
cmpsb
incb
mov
pusha
mov
movsb
and
sbb
lcall
sbb
xor
aam
rcll
ret
push
in
xchg
in
mov
jg
outsl
or
psllw
xlat
push
sti
adc
jl
jg
in
out
jns
in
jecxz
imul
cli
push
pusha
mov
xchg
jno
sbb
pop
dec
adc
add
inc
and
xorl
cmp
imul
mov
xor
push
mov
stos
push
hlt
out
imul
mov
sarb
pop
xchg
sti
lahf
xchg
mov
pop
aam
scas
insl
test
aam
inc
shrb
scas
mov
shr
push
sbb
nop
sti
stc
xchg
add
xchg
mov
popf
cmp
pop
xor
mov
mov
adc
mov
dec
cmp
pop
adc
loope
pop
in
sbb
pop
jnp
ret
std
lds
xchg
popf
push
fsubs
adc
aaa
pop
shlb
fildll
mov
aaa
dec
add
fldenv
and
iret
and
lods
or
scas
lret
xchg
push
int3
mov
jp
cmp
adc
jns
pop
daa
int
enter
sahf
inc
push
sub
fidivs
ja
xchg
dec
jae
std
mov
jns
sahf
mov
jp
ljmp
lds
hlt
dec
push
cld
xchg
hlt
dec
lds
es
mov
lds
dec
mov
sub
inc
cmp
xchg
sub
cmc
jne
hlt
movsb
fcmovu
aaa
test
dec
fstp
mov
add
mov
loope
mov
sub
push
movsb
and
cmp
aad
jb
fcom
out
sbb
and
insb
adc
icebp
mov
pop
mov
push
aam
sarb
in
sub
test
add
mov
test
jge
pop
xchg
jmp
test
push
mov
xor
fiaddl
fdivrl
cmp
dec
xor
jo
pop
sub
mov
adc
xchg
nop
dec
add
jmp
faddp
shll
push
cmp
ret
and
mov
adc
pop
cwtl
fisttps
repnz
xchg
xchg
push
test
stc
xor
mov
cwtl
push
sub
push
sbb
cmp
in
test
out
xchg
inc
mov
outsl
in
ljmp
cltd
call
jle
into
or
pop
gs
test
mov
fstl
repnz
jno
xor
test
scas
leave
int
test
shr
dec
fsubp
sarb
rorb
fdivl
daa
rorb
sub
xor
push
adc
dec
scas
std
stos
in
mov
inc
xchg
loop
xchg
outsl
loop
xchg
dec
inc
jne
push
hlt
inc
cvtps2pi
lret
push
gs
add
mov
pop
decb
adc
cli
lods
mov
cmp
out
mov
inc
pusha
repz
jo
fadds
and
addr16
pop
ret
cmp
dec
add
dec
pop
js
mov
rol
loope
aam
and
inc
sbb
movsb
mov
dec
adc
pop
data16
mov
leave
mov
mov
jmp
pop
test
jns
lahf
dec
outsb
pop
andb
add
aad
push
out
or
and
add
xlat
adc
lods
rolb
push
sub
ljmp
push
lea
loope
int3
push
std
mov
movsb
ljmp
shrb
or
test
lds
shl
and
mov
jns
adc
jl
loope
addb
stos
leave
aas
and
iret
xor
mov
imul
out
sub
gs
rcrb
mov
je
filds
xor
dec
aam
mov
lcall
sub
in
cmc
pop
pxor
sub
imul
jns
das
xchg
fimuls
jae
pop
clc
xchg
mov
push
dec
dec
cmc
cmp
imulb
sbb
outsb
adc
mov
mov
or
pop
into
jge
fisttpl
xor
outsl
into
daa
adc
ss
les
mov
lret
mov
mov
icebp
xchg
insl
mov
pusha
xchg
mov
xchg
push
fimull
mov
rcll
xor
dec
jae
rcrb
mov
std
mov
out
in
or
pushf
add
xchg
fistpll
cli
inc
insl
xchg
outsl
pop
iret
sbb
pop
and
jae
test
fwait
pop
pop
jae
and
out
jmp
inc
xor
aaa
sti
outsl
mov
test
fstps
ret
movsb
pop
out
pop
xor
mov
pop
pushf
inc
mov
inc
lea
adc
rclb
xchg
movsb
dec
sarl
cmp
flds
leave
pushf
in
movsl
add
daa
jae
add
cmp
icebp
sarl
adc
notl
fucomp
cmp
into
rorl
add
jecxz
cmp
sbb
and
jne
sub
out
lahf
ret
loopne
inc
jb
push
pop
cmpsb
out
fnstsw
test
cwtl
int3
call
sbb
je
bound
push
xlat
sbbl
sub
ds
out
testl
push
and
sbb
or
pop
xor
sub
mov
popa
mov
pop
adc
adc
or
push
sub
add
pop
movsb
inc
jns
shrb
stos
sub
das
lods
fistps
mov
pop
add
cld
sbb
mov
cwtl
mov
pop
xchg
outsl
jo
lock
push
sbb
dec
jp
xor
cmpsl
inc
mov
dec
push
icebp
into
mul
push
pushf
jo
jp
mov
and
ficompl
mov
xchg
sbb
fsts
sbb
xchg
sbb
clc
jg
stc
leave
pop
out
adc
and
inc
cmp
add
cwtl
inc
inc
inc
cmpsb
icebp
sahf
in
jo
inc
mov
xchg
push
enter
in
cmp
jl
cmp
or
ss
pop
in
loop
fwait
add
daa
xchg
leave
mov
push
or
jnp
enter
cmc
mov
aam
and
adc
push
or
cltd
movsl
shlb
push
rcll
inc
push
and
mov
dec
mov
clc
in
add
imul
adc
bnd
out
push
pop
push
pop
lret
pop
mov
jnp
inc
add
xchg
scas
test
sahf
xor
leave
lock
pop
or
lods
or
dec
call
mov
popf
adc
test
mov
add
and
data16
mov
into
rorb
iret
cwtl
test
jmp
push
cmp
pop
sarb
das
mov
das
mov
shll
ljmp
outsl
xor
mov
mov
stos
cmp
sub
gs
add
cwtl
or
sbb
push
or
dec
adc
inc
mov
cmp
fcomps
or
dec
pusha
inc
fs
push
int3
mov
mov
test
inc
jns
pop
jge
mov
xlat
aad
xchg
adc
sub
rorl
shll
sub
xchg
and
add
mov
push
cli
mov
or
dec
sbb
cmc
rcrl
jle
imul
cmpsl
pusha
lea
add
out
dec
jbe
aad
cmp
fcmovnbe
add
cli
in
fmull
test
sbbl
push
lahf
xchg
in
into
or
sub
sbb
dec
sub
mov
mov
loope
lret
and
and
sbb
lea
mov
cmpsb
cmp
xchg
outsl
rcrb
lock
pop
push
cmp
inc
xchg
pop
cli
enterw
clc
xor
and
push
push
lahf
hlt
adc
xchg
out
aas
xor
push
jae
lcall
popf
adc
ss
aas
cmp
xchg
and
xorl
dec
push
xchg
aam
push
mov
dec
inc
jns
xlat
leave
es
testl
mov
mov
stc
iret
mov
imul
dec
xchg
mov
pusha
push
es
hlt
cmp
mov
arpl
popf
daa
push
jmp
and
mov
in
inc
cmp
pop
mov
add
out
pop
mov
lods
insb
into
fstps
in
xchg
shlb
cmp
mov
jae
or
adc
cltd
lock
imul
cmpsl
insb
xor
insl
and
leave
out
push
dec
sysenter
imul
out
lds
inc
xchg
mov
pop
mov
fwait
dec
jb
pop
imul
jb
pop
adc
mov
insb
cld
add
mov
movl
out
out
mov
and
add
xchg
cmp
jnp
mov
inc
es
in
daa
daa
adc
dec
jb
std
xor
mov
and
jmp
pop
cld
fiadds
mov
and
inc
mov
mov
mov
lret
sbb
jle
decb
mov
in
mov
push
push
aad
loopne
aad
xor
test
das
mov
lock
test
xchg
lods
xor
in
sahf
jae
out
popa
sarb
sub
orb
jmp
mov
out
jne
in
push
cmp
jb
mov
test
push
mov
jge
mov
xor
jecxz
push
jb
fstpl
ss
dec
jle
jae
xchg
push
mov
testl
sub
rclb
or
cmp
inc
lds
cli
cmp
pushf
xchg
scas
fldt
lea
divl
add
mov
iret
adc
dec
jl
loop
sub
adc
push
loopne
pop
push
mov
dec
lret
dec
ret
and
dec
mov
fbld
mov
cmp
xorb
xchg
scas
mov
cmp
lret
and
add
setge
int3
iret
js
mov
mov
and
movsl
dec
sub
adc
cmp
test
cmc
or
adc
jb
nop
pop
fadd
bound
xchg
lea
push
adc
dec
cmpsb
stc
or
inc
mov
stc
cmp
fxch
lods
popa
ds
jb
idivl
pop
je
scas
icebp
jmp
mov
sbb
inc
jae
sahf
insl
shrb
xlat
mov
cmp
jmp
dec
shlb
popf
stos
sbb
cmp
lea
xchg
sarb
inc
mov
vaddsubpd
cltd
loopne
push
sbb
pop
cmpsb
xchg
inc
adc
je
xchg
imul
mov
loopne
aas
in
sbb
jmp
nop
out
xor
jnp
arpl
imul
adc
mov
jno
push
xchg
jl
push
inc
xor
sbb
add
popf
sti
lods
xchg
aas
stc
sbb
push
fmull
adc
cmp
punpckhbw
mov
dec
mov
xchg
iret
push
js
jns
push
outsl
or
je
jecxz
scas
push
out
lods
nop
popf
pop
ficomps
incl
and
inc
inc
inc
xchg
sahf
fcmovnu
xchg
sahf
sti
adc
imul
fstl
cmc
mov
xor
pop
jp
hlt
je
mov
mov
movsb
dec
pop
dec
out
gs
notl
sub
les
jne
add
subl
shll
lods
lret
sahf
inc
jb
pop
sbb
lock
scas
sbb
xchg
sub
mov
mov
adcb
imull
cltd
cwtl
pop
mov
sbb
fidivrs
push
es
int
mov
jo
cld
stos
imul
notb
pop
sub
aad
jl
adcb
fs
inc
mov
mov
jecxz
and
sub
bound
sub
movsl
add
scas
mov
ja
sbb
jnp
scas
and
lret
xchg
stos
ret
in
adc
nop
jbe
push
mov
sarl
mov
je
add
xor
cmp
movntps
in
mov
inc
mov
or
fistpl
push
fildll
mov
mov
js
mov
mov
icebp
mov
leave
int3
or
add
pop
mov
pop
and
cmp
scas
pop
ficomps
cld
xor
jg
fiaddl
jno
fcmovnbe
push
lods
and
dec
out
mov
pop
int
lcall
in
add
mov
jge,pn
arpl
push
inc
sub
shlb
stc
mov
aad
or
and
and
and
leave
imul
shlb
cmp
or
dec
adc
xchg
repnz
mov
and
test
mov
mov
repnz
push
out
inc
mov
or
sahf
aam
cmp
sbb
cmpsb
pop
outsb
push
aas
sub
xchg
aad
rolb
inc
mov
ds
ficompl
and
adc
add
pop
pop
int3
sahf
mov
mov
fildll
ds
in
cmp
js
inc
cmp
add
sub
gs
or
xor
mov
mov
cmp
jns
pop
sub
je
sub
icebp
gs
jo
das
sub
fimull
cs
lds
cmp
inc
push
lock
rol
mov
mov
xchg
outsl
jbe
add
lods
push
dec
add
jge
fists
sbb
sub
in
insl
or
roll
mov
test
cmp
movsl
call
lahf
popa
cmc
push
mov
popa
mov
lcall
fildl
adc
loopne
imul
add
and
loopne
adc
fmulp
sarl
mov
push
pop
ja
cmp
sub
and
mov
pop
inc
rcrb
cmpsb
jae
sbb
insl
push
shlb
int
inc
imul
lret
mov
orb
iret
add
adc
shl
jae
mov
arpl
push
pop
rcll
repz
stc
adc
scas
imul
cld
mov
mov
fsubrp
cmc
ret
mov
jnp
adc
adc
leave
loope
sub
lea
sub
push
sbb
cmp
mov
das
jae
rcr
xor
push
and
mov
fimull
dec
inc
dec
sub
dec
jns
mov
and
xchg
insl
fwait
or
lcall
ficoms
or
cmp
cli
mov
push
das
imul
push
rcll
repnz
in
pop
adc
push
daa
dec
repz
int3
dec
leave
adc
inc
iret
loope
scas
jp
inc
fisubrs
jno
mov
testb
add
loop
add
addr16
lods
mull
std
movsb
ljmp
adc
xchg
aam
dec
push
jno
pushf
and
ljmp
xchg
mov
sahf
pop
and
lea
test
leave
test
rcl
aas
cltd
add
ret
rcll
sbb
sti
je
cmpsb
push
mov
rorb
add
movsb
cwtl
test
sbbl
ss
ret
sub
fs
mov
movsb
sub
push
xchg
dec
imul
lock
mov
andb
int3
orb
pop
lock
clc
sub
mov
xchg
mov
hlt
inc
cmp
mov
or
add
aas
loope
and
cmpsl
adc
enter
pop
xor
pop
adc
mov
pop
cltd
jmp
lret
inc
lods
jo
adc
mov
inc
ss
mov
popa
cltd
nop
clc
add
jne
es
dec
scas
or
mov
jbe
jge
call
inc
in
dec
subb
leave
cmp
xor
or
sbb
outsl
jge
enter
fwait
xchg
mov
jg
sbb
js
inc
iret
and
hlt
sub
sub
shlb
jne
sbb
mov
xchg
mov
fst
out
mov
add
jno
xlat
rcll
adc
xlat
adc
stc
lret
je
jp
xor
cmpsl
add
mov
shll
setg
sahf
add
or
inc
cltd
leave
or
enter
and
push
int3
enter
jmp
xor
push
mov
xor
scas
aaa
add
into
int3
cmpsb
mov
lcall
in
inc
enter
fwait
and
sub
mov
cwtl
dec
push
outsb
mov
jle
cmovs
xchg
pop
repz
add
add
add
lods
repnz
ret
scas
iret
mov
dec
jbe
lods
test
xchg
cld
loopne
lahf
pop
imul
imul
adc
int
mov
je
sbb
mov
in
pop
mov
jne
in
aam
test
pop
gs
sbb
mov
out
lea
sbbl
in
dec
insb
repnz
and
loop
push
gs
push
push
icebp
xchg
out
inc
xchg
sub
imul
aas
rcrb
and
iret
mov
jle
or
lods
pop
lds
sub
add
push
lahf
add
rorl
cs
mov
pop
ret
mov
loope
pop
adc
pop
add
lahf
fistps
push
lea
mov
sbb
loope
mov
in
push
jns
mov
lea
xlat
mov
outsb
push
or
rorl
mov
mov
cmp
jmp
jbe
lahf
daa
mov
dec
pop
sbb
rcll
pop
jmp
sbb
leave
push
dec
xchg
xor
pop
clc
mov
xchg
aas
mov
push
xor
mov
and
xlat
mov
sbb
pop
addr16
call
cmpb
or
das
xorb
dec
pop
pop
jns
or
testl
sub
sub
add
popa
mov
out
xorb
mull
xlat
inc
and
into
add
testl
mov
or
subl
add
push
js
push
pop
imul
inc
test
sti
scas
clc
out
repnz
inc
jb
mov
or
lcall
adc
mov
xchg
jg
add
inc
adc
mov
jno
pop
sbb
notb
rcrb
inc
cltd
mov
xlat
fdivs
sub
popf
adc
insl
ret
mov
es
fwait
add
pop
xor
pop
lret
jns
jo
sub
lods
or
push
jle
jb
hlt
pop
cmpb
paddusw
xor
int
sbb
test
rorb
es
push
fmulp
jg
lret
and
dec
aam
stc
mov
addl
fisubrl
jnp
neg
push
mov
das
xlat
sbbl
push
dec
add
rcrl
xchg
imulb
adc
bound
mov
xor
ret
and
fdivr
fldln2
and
ret
mov
and
popa
push
pop
cltd
lods
lret
fsubl
test
rcl
push
test
inc
test
inc
stos
inc
or
push
mov
adc
push
jecxz
clc
push
jo
sbb
scas
jecxz
pop
or
sbb
mov
mov
add
jno
push
mov
cltd
mov
das
push
shlb
aam
dec
test
adc
call
or
imul
iret
jmp
add
sbb
and
je
inc
mov
jnp
scas
leave
inc
fnsave
scas
pusha
sub
pop
stos
push
mov
mov
and
jns
out
bound
pop
scas
fwait
scas
in
pop
push
xor
pop
and
mov
cltd
test
sbb
push
std
cmpsl
enter
ljmp
rorb
es
outsb
pop
mov
orl
mov
adc
jle
gs
dec
leave
mov
shll
movswl
pusha
out
repz
mov
int
ret
icebp
xchg
xor
add
pop
pushf
push
jmp
jge,pn
pop
dec
ss
jne
movsl
mov
pop
ret
imul
ret
int
push
xor
stos
call
jge
in
gs
shrl
out
fisubs
shrb
mov
je
xchg
es
adc
out
stos
jmp
mov
in
loopne
add
pop
into
and
jp
pop
stos
fdivp
fxam
mov
jnp
or
jp
popa
or
arpl
jae
jns
clc
push
fisttpl
mov
mov
ljmp
jno
lret
setle
add
or
jl
inc
adcl
pushl
add
jg
mov
fistl
insb
mov
popa
jmp
aaa
push
dec
pop
and
rcrb
cmp
and
int
notl
and
in
inc
ljmp
jge
repnz
rcr
sub
sub
sbb
jb
or
and
imul
in
cltd
xlat
push
inc
movsb
addr16
cmpsl
mulb
mov
pop
in
lock
aas
lahf
pop
ficoms
fwait
lods
xlat
leave
subb
loope
xchg
lret
jbe
cs
add
adc
inc
mov
pop
out
subl
sub
and
dec
cmp
pushf
test
test
sbb
mov
push
lock
mov
mov
jl
mov
call
jo
mul
fstpt
push
dec
add
call
je
imul
xorb
imul
sbb
jno
loopne
xchg
mov
sbb
xchg
or
push
enter
sbb
repz
jns
outsl
jge
xor
mov
mov
fcompl
movsl
inc
pushf
movsb
inc
ja
mov
push
jle
inc
imul
jns
sub
xchg
adc
fadds
inc
cmc
push
cmp
pop
lea
setno
sub
mov
pop
dec
inc
mov
in
add
test
clc
jmp
nop
insl
call
in
ja
sub
int3
shlb
xchg
or
jnp
xchg
push
fcmovnu
popf
lret
js
dec
push
sbb
dec
sbb
adc
loop
adc
push
push
pop
insl
cltd
xor
xor
sbb
push
sbb
xor
adc
stc
xor
icebp
stos
loope
mov
arpl
int3
pop
push
aaa
jl
shrl
orl
popa
fnsave
and
jno
or
fwait
into
push
mov
mov
out
mov
mov
idiv
filds
xchg
adc
and
jl
enter
iret
or
lcall
adc
mov
pop
jle
mov
sbbl
xchg
mov
or
arpl
push
fdivrs
jb
cmc
arpl
inc
addr16
outsb
call
ss
stc
mov
xor
call
xchg
cli
push
pop
fcoml
lret
mull
test
scas
jp
or
mov
jmp
adc
fsubl
jb
lods
add
mov
or
ds
pop
out
lods
push
cmp
jns
sub
outsb
sbb
and
xor
dec
or
inc
popf
shrl
pop
loopne
lahf
or
rorl
outsb
and
mov
sub
imul
movsb
push
sbb
imul
mov
jno
push
push
bound
std
pop
push
in
je
or
and
jle
mov
push
lea
imul
dec
cmp
pop
cld
cmp
subl
test
cmp
cli
jnp
cmp
push
lock
arpl
outsl
enter
outsl
outsb
jecxz
sub
scas
arpl
enter
and
stos
movb
add
in
popf
cmpsl
dec
inc
scas
xor
movsb
sbb
or
dec
lock
xchg
and
outsl
imul
mov
dec
loop
rolb
inc
mov
adc
lret
mov
mov
xchg
stos
inc
mov
hlt
jb
data16
ret
sbb
cwtl
mov
or
add
gs
xlat
and
sarb
adc
lods
adc
jl
int3
sbb
sub
add
loop
stc
arpl
sti
bound
xchg
mov
cld
fcomps
or
outsl
pushf
aam
lods
cmp
dec
outsb
inc
pop
jnp
jns
aaa
xchg
sbb
jge
ljmp
pop
outsb
or
pop
push
in
xor
arpl
adc
sahf
lcall
lock
jne
xchg
push
test
int3
loope
cs
les
sub
mov
mov
push
pop
pusha
jae
rcrl
sub
pusha
push
jo
mov
aad
mov
ds
ret
dec
sbb
das
pop
dec
in
xor
rcll
and
push
lds
and
or
pop
movsl
mov
mov
rclb
in
and
mov
pop
sti
test
push
inc
sti
call
cmp
add
sub
in
xchg
insb
and
or
js
outsl
lds
test
xor
psllw
mov
popf
inc
stos
push
and
sub
sub
inc
xor
or
push
lahf
and
aaa
sti
arpl
jmp
out
mov
adc
pop
incl
and
inc
inc
pop
jns
inc
int
mov
gs
mov
mov
aam
fidivs
pop
into
iret
repnz
mov
lods
imul
idivl
shlb
insl
stos
fdivl
mov
stc
and
xor
cwtl
mov
adc
mov
adcl
xor
stos
es
mov
inc
arpl
mov
inc
stc
jnp
push
sub
xchg
insl
imul
pop
mov
sub
pushf
inc
lret
push
call
push
loop
push
test
sub
fisubl
mov
imul
sahf
cld
fstpt
pop
jo
jge
cmpsl
adc
mov
cmp
mov
lret
dec
xchg
pop
cwtl
jg
ds
add
cmp
lea
jo
dec
call
xor
xchg
xor
call
aam
repz
jg
mov
and
insl
push
inc
mov
scas
loopne
daa
lods
sbb
mov
cs
jmp
push
fdivrl
xlat
xchg
and
sbb
mov
les
sub
popa
add
leave
aaa
jae
xchg
cli
negl
jecxz
mov
rorl
lea
pop
in
xchg
lahf
repz
cmpsl
pop
add
ficoml
push
data16
out
cmpsl
cmc
sub
sub
or
call
cmp
imul
or
or
mov
es
movsb
fsubl
pop
lock
stos
lahf
mov
push
in
les
jns
push
int3
xchg
adc
enter
push
add
xchg
mov
push
iret
adc
cli
mov
fucomip
cmp
mov
repz
add
ja
aas
or
rcr
enter
imul
mov
xchg
mov
xchg
movsl
ljmp
push
stc
dec
int3
xchg
or
pop
push
test
mov
xlat
pop
ficomps
ret
jbe
shld
xor
pop
lret
mov
jl
xchg
jge
mov
testb
loop
xchg
xchg
cmp
pop
addl
out
dec
inc
jg
addr16
pushl
add
sbb
rclb
ljmp
add
insb
mov
cltd
cmpsb
icebp
out
add
cltd
lods
mov
addb
rorl
aaa
dec
into
jno
inc
push
push
outsb
pop
aas
cmpb
ret
jmp
add
mov
pop
test
popf
call
cmp
add
sbb
cmp
les
push
imul
cld
adc
jmp
dec
out
daa
cmpsl
pop
aaa
pop
clc
xor
sbb
je
and
notl
insb
xor
outsl
adc
out
loopne
push
call
cmp
lods
cmp
roll
pop
dec
and
ret
sbb
mov
repz
push
dec
lahf
out
add
test
mov
fistl
xor
shlb
mov
pop
jno
mov
jnp
mov
pop
enter
dec
lock
xor
inc
add
and
sahf
xchg
rolb
jnp
adc
jmp
ret
loop
lea
xor
inc
stos
pop
ret
xor
aam
popa
or
add
cmp
pop
add
cs
ds
dec
push
ljmp
leave
mov
or
mov
jnp
ja
mov
jmp
cld
dec
jns
mov
sar
xlat
push
push
jb
xlat
push
push
mov
pop
add
rcrb
cld
aad
jmp
pop
shll
adc
pop
push
push
mov
inc
xchg
xchg
sti
mov
sbb
mov
inc
xchg
xor
adcl
popf
cmc
test
addr16
imul
fdiv
pop
mov
inc
arpl
flds
sub
rolb
cld
sbb
or
adc
adc
cltd
pop
fdiv
fdivp
cmp
repnz
mov
mov
jo
imul
mov
mov
and
int
mov
push
push
mov
repnz
sub
xor
or
or
sbb
sbb
sahf
push
xchg
stc
xor
stc
mov
xlat
lret
mov
pusha
xor
mov
xabort
out
rorl
outsl
mov
inc
cli
xchg
popa
ret
lcall
lock
popa
mov
outsb
in
imul
mov
xchg
inc
push
add
xor
mov
push
sbb
nop
movsb
push
imul
aam
sbb
lahf
arpl
xor
stos
lret
pop
or
or
lea
pop
lret
icebp
addr16
rcll
incb
iret
and
js
sarb
pop
insb
adc
daa
mov
jo
repnz
arpl
movsl
ret
sahf
stc
inc
mov
cmpsb
pop
sbb
test
push
adc
jmp
in
xchg
cmc
movsl
inc
stos
repnz
daa
sti
jnp
push
insl
pushf
push
or
ljmp
xchg
into
stos
push
pop
xor
test
pop
jb
addl
pusha
int3
fisttpl
int
pop
aad
incb
xchg
jmp
dec
jno
add
leave
inc
xor
mov
inc
inc
jmp
daa
out
cld
mov
je
sbb
loop
pop
mov
gs
ror
ret
shl
or
cmc
dec
pop
stos
int3
push
adc
or
repz
mov
arpl
push
and
pop
inc
dec
arpl
je
fdivr
filds
xchg
test
sbb
cmpsl
or
fistpl
mov
adc
inc
xchg
popf
sbb
mov
lahf
ret
loope
pop
pop
arpl
out
jp
insb
imul
xchg
int3
iret
aaa
into
lods
jnp
je
xor
orl
cmp
xchg
les
data16
dec
dec
push
push
add
out
cltd
jecxz
loop
add
fdivrl
inc
hlt
cmp
jb
call
outsl
sti
enterw
mov
mov
cmp
xor
repz
lock
test
jmp
push
repz
frstor
mov
pusha
xchg
or
lret
mov
and
adcl
xor
xor
push
push
mov
xchg
bound
aaa
popa
jns
cmpsb
xchg
fmuls
adc
xor
inc
lea
adc
movb
adc
pusha
inc
and
ja
cmp
movsb
cli
xchg
mov
sarb
data16
aad
ds
or
push
sbb
inc
jbe
inc
or
xchg
or
icebp
xorl
inc
fstl
lret
nop
push
in
bound
inc
mov
mov
xor
pop
iret
jno
outsl
xchg
movsl
add
push
mov
hlt
pop
xchg
mov
xchg
cmp
push
xor
xor
lret
les
shrb
jno
xor
mov
dec
mov
lea
fst
ret
push
fcomps
movsl
ja
fisubs
pause
pushf
mov
dec
jle
mov
push
ja
inc
fldenv
and
adc
pop
gs
add
and
stos
xor
cltd
into
xchg
dec
inc
xchg
loopne
out
mov
cs
ffreep
or
dec
push
loop
mov
or
xlat
in
mov
push
jns
stos
pop
stos
dec
out
test
leave
push
out
mov
push
popa
jno
sub
dec
mov
mov
insb
mov
sub
push
jle
cltd
jne
pop
fsubl
and
jnp
adc
jb
jecxz
stos
inc
xchg
cmp
mov
movsl
xchg
push
ret
dec
mov
mov
mov
lahf
sbb
push
out
jne
mov
push
push
aaa
pushf
mov
icebp
test
pop
pusha
out
ja
mov
cltd
or
in
xchg
mov
xchg
addl
or
or
adc
inc
inc
jae
insb
aam
arpl
jecxz
test
pop
aas
leave
into
gs
dec
imul
in
loop
sarl
test
sub
xchg
fimuls
and
aas
out
lods
aas
dec
add
and
pop
mov
jmp
add
xor
push
aad
dec
push
idivl
repnz
push
leave
sbb
xor
in
aad
xor
dec
and
ds
outsb
inc
inc
insb
adc
inc
or
xor
insl
notb
icebp
xchg
pop
ljmp
iret
fs
ljmp
pop
push
push
emms
and
and
cmp
dec
out
xor
jge
stos
and
cmp
inc
loopne
sahf
jbe
les
xchg
in
aas
push
or
sbb
pop
mov
cmp
pop
je
divb
leave
adc
into
aad
sbb
fmul
mov
dec
and
sbb
jnp
mov
int3
mov
mov
add
dec
adc
pop
jp
into
sbb
dec
pushf
cmpsl
mov
or
pop
or
addb
ret
inc
jecxz
xchg
cmpsb
sbb
lcall
les
fs
adcb
cwtl
mov
pop
adc
or
lock
add
xchg
jp
sbb
pop
and
rcl
addr16
jmp
mov
xchg
aaa
cmp
out
stc
test
das
mov
pop
inc
cli
stos
lds
js
or
lea
sub
mov
shll
xor
test
add
outsl
int
sub
es
bswap
shrb
adc
or
or
xchg
les
cmp
cmp
pop
xchg
pop
fs
push
dec
lods
sbb
jmp
or
gs
movsl
lea
cmp
push
sub
jne
or
mov
xchg
pop
iret
pop
nop
jg
inc
in
outsb
ja
mov
in
adc
xchg
enter
mov
xor
fiadds
movsl
fdivs
lods
add
gs
js
ret
jle
jae
js
rclb
jl
cmp
nop
mov
inc
daa
mov
into
or
xor
addr16
jecxz
fwait
xchg
test
cmp
int
insb
mov
inc
mov
mov
test
adc
ljmp
add
jne
je
in
pop
fdivrl
and
pop
cli
ds
mov
cltd
push
add
mov
rcrb
hlt
pusha
pop
cmc
test
imull
or
in
xchg
xchg
imul
cmpsb
push
into
test
ds
lcall
xor
dec
inc
fwait
clc
sub
xchg
xchg
push
add
into
mov
xchg
aam
movsl
lahf
repnz
mov
and
aad
mov
in
ret
cmp
xchg
push
push
jnp
mov
xchg
jmp
xchg
in
add
sub
xor
mov
aaa
rcll
frstor
cmp
sbb
cmc
adc
out
stos
pushl
adc
adc
repnz
dec
orl
sar
push
data16
or
movsb
jne
add
iret
dec
cmp
jno
lret
push
add
ljmp
cli
cmpsb
scas
dec
or
test
jg
aaa
add
sbb
jl
dec
out
sub
adcb
push
jle,pt
cmp
xor
mov
lock
push
pusha
mov
xor
pop
push
js
add
mov
scas
addl
aad
int3
cmp
mov
add
ss
sub
dec
scas
pop
ljmp
add
into
or
and
orb
es
and
inc
inc
fstl
mov
xor
or
ret
jb
sbb
les
ja
cmp
imull
xor
fisubrl
push
cmp
or
pop
adc
dec
xor
js
faddl
adc
push
mov
jbe
imul
addr16
pop
shl
mov
movsl
ljmp
inc
jmp
lea
jmp
testb
mov
inc
fwait
add
test
add
inc
out
xor
sub
js
adc
mov
jae
xchg
add
in
cs
cwtl
or
inc
test
inc
mov
xchg
push
out
push
mov
xchg
inc
dec
mov
mov
decl
or
clc
push
push
jecxz
add
cmp
fldl
cwtl
push
out
push
mov
call
cmp
cmc
or
adc
add
push
jns
dec
lahf
sub
push
cmp
aaa
adc
test
cmp
pop
mov
fnclex
mov
in
add
xchg
mov
sbb
jo
rol
cmp
or
repz
xor
mov
xlat
mov
inc
pop
sub
cmp
mov
inc
push
sti
add
xor
sub
loop
mov
xor
sarb
inc
mov
cmc
adc
cs
fwait
push
out
or
out
xlat
incb
dec
rcl
sub
jle
pop
inc
lahf
mov
adc
ds
popa
and
jl
lret
pop
das
lcall
ret
sbb
fdivp
loop
inc
repz
mov
mov
dec
mov
lahf
xchg
push
mov
jl
jo
adc
push
xor
stos
stos
inc
inc
pusha
test
xor
lcall
dec
inc
sbb
out
loope
sbb
mov
xchg
imul
push
xor
dec
push
std
das
push
jnp
adc
sub
and
out
into
stos
push
cmpsl
sub
pop
mov
mov
mov
cli
popa
pop
push
rorb
or
rcrl
in
in
stos
fmuls
repnz
lret
icebp
xchg
cmpsl
xchg
fisubl
xlat
push
sbb
dec
xor
adc
sbb
push
cmpsb
ficoms
sti
inc
mov
mov
sub
or
cs
or
cli
loop
cld
into
xchg
es
cli
dec
or
cld
dec
les
pushf
int
push
lods
outsl
cld
into
aas
inc
dec
push
ror
call
test
test
lods
dec
mov
xchg
add
sub
push
repnz
sar
mov
sub
clc
js
cli
jmp
xor
es
scas
hlt
icebp
nop
fiadds
mov
sub
dec
ret
mov
andb
jo
jne
pop
sahf
inc
repnz
out
pop
inc
adc
out
bound
in
inc
or
frndint
hlt
cli
es
pop
or
jmp
sub
ret
adc
mov
sub
dec
out
les
jb
lock
cmpsb
mov
pop
mov
and
jmp
sti
insl
xlat
jg
sbb
jb
xor
push
imul
xchg
stc
xchg
push
cmp
ds
dec
push
mov
mov
dec
lods
js
add
cmp
cmpl
dec
mov
inc
addr16
mov
jae
mov
loop
pop
loopne
cmp
jno
repnz
xor
nop
xchg
fwait
insb
pop
adc
in
mov
faddl
stc
xchg
addr16
pop
jmp
add
rclb
loopne
mov
lret
push
xchg
and
mov
scas
aad
jg
sbb
shlb
sub
movsl
jge
add
std
xchg
xchg
ja
mov
sbb
out
imulb
push
test
pop
lahf
std
mov
cmpsb
xor
lcall
mov
push
outsl
dec
sub
mov
xor
int
sub
push
jae
cwtl
test
and
or
jecxz
cmpb
cli
fidivs
lods
lret
mov
inc
xor
dec
adc
sbb
push
push
jg
adc
in
or
in
mov
inc
clc
mov
subb
cmp
xor
femms
cli
imul
lahf
and
movsl
xorb
dec
sbb
add
lods
lods
pop
addl
rcr
scas
mov
mov
jp
pop
into
sbb
sbb
jmp
test
inc
add
xor
xor
cmp
xchg
cmp
inc
pusha
cmpsb
sbb
sahf
pushf
dec
xchg
add
mov
xchg
inc
pop
call
sbb
sbb
dec
rclb
mov
mov
xchg
inc
adc
push
es
and
cmpsl
out
push
push
std
pmaddwd
push
and
jl
push
addr16
into
jmp
orl
cwtl
fnsave
leave
pop
sub
test
loope,pt
fsts
test
xor
in
sbb
pop
clc
inc
in
push
leave
loop
push
lds
idiv
cmc
sub
pop
cli
push
pop
scas
adc
mov
or
push
aam
mov
sub
inc
fucomp
andl
adc
jp
in
bound
jae
cltd
pusha
jns
dec
lods
roll
pop
popf
mov
enter
adc
mov
cmc
sbb
jo
fadds
scas
push
mov
data16
leave
test
aas
movsb
xor
je
and
pop
sbb
push
loopne
or
adc
xor
addb
lcall
add
jmp
in
int3
mov
add
es
pop
cmpsb
sbb
mov
add
enter
push
movsl
lahf
mov
bound
lret
arpl
jecxz
lahf
jg
cmp
dec
rcll
enter
push
sbb
loope
in
push
push
dec
mov
test
lea
adcl
inc
clc
jp
repz
pop
fidivrs
pushf
and
mov
ljmp
inc
fwait
out
rorb
sbb
jnp
mov
clc
pop
lds
jae
mov
sub
popf
and
out
mov
stos
mov
add
cmp
add
jl
popf
xlat
imul
and
xchg
sub
jo
shrl
dec
mov
push
cmp
add
shl
add
mov
adc
iret
push
aas
insl
cmp
shll
repnz
jnp
mov
loop
mov
sub
ss
out
icebp
inc
dec
test
popf
hlt
xor
sarl
or
mov
hlt
arpl
cmpsb
cmc
mov
pop
inc
cli
mov
xchg
mov
je
int
in
fistps
daa
fsts
xchg
je
popf
sti
mov
pop
in
imul
sub
mov
dec
adc
xor
sti
cli
inc
aad
mov
mov
inc
sbbb
push
adc
jo
push
add
es
iret
lret
lock
je
add
or
pop
pop
shll
rcll
mov
scas
xchg
data16
out
pop
loop
push
outsb
adc
and
cmp
dec
push
out
mov
in
outsb
in
lahf
sub
pusha
jo
mov
int3
outsb
icebp
addr16
xor
loopne
mov
mov
das
mov
and
mov
push
scas
xchg
lods
or
sub
inc
sub
and
enter
out
sub
loop
add
sahf
daa
das
inc
mov
cmp
fstps
std
fldt
loopne
rolb
and
and
inc
decb
inc
test
sbbl
sub
or
lret
rcll
sbb
jp
fidivrl
es
mov
addr16
mov
gs
dec
dec
arpl
jmp
cmpsl
pop
scas
fmull
push
jnp
int3
inc
mov
repz
and
mov
adc
pop
sbb
lret
in
add
lahf
add
fisttpl
dec
adc
inc
test
rorb
out
lock
jno
popl
or
scas
xor
inc
or
lcall
lret
cmc
or
lret
sbb
inc
out
xor
cs
ret
fiaddl
sub
dec
mov
sbb
add
push
cmpsb
or
imul
mov
mov
push
xlat
sbbl
les
xchg
pop
xchg
jp
or
jne
and
xchg
xchg
outsl
data16
sti
adc
ja
pop
xchg
sbb
pushf
xor
cld
jg
mov
ja
lret
cli
mov
add
aad
lds
sbb
dec
pushf
xor
mov
clc
cltd
sub
and
cmp
jbe
or
dec
sti
out
mov
dec
pop
and
inc
inc
mov
int3
xor
mov
sub
sbb
std
jp
bound
jo
leave
push
sarb
mov
out
cwtl
or
in
xor
shll
sbb
sub
inc
mov
mov
push
mov
ret
cmc
or
sub
or
mov
inc
mov
xor
mov
in
push
ds
lcall
icebp
inc
xlat
idivb
xor
push
and
sarb
sti
add
icebp
ds
test
popa
xor
insl
loope
and
sbb
ffree
shl
dec
pop
adc
xor
das
fst
xchg
add
aas
dec
xchg
push
pop
inc
pop
push
add
test
sbb
jge
pop
addb
test
mov
fldt
fldl
inc
push
stos
ror
adcb
sbb
jnp
push
xor
or
mov
pop
rcr
test
iret
or
push
adc
mov
adc
or
and
pop
push
mov
pop
push
or
xor
icebp
imul
sbb
fstpl
lods
and
jb
outsb
fcomps
lcall
pop
xchg
das
mov
cmp
in
psrlq
lods
xchg
and
push
pop
aaa
dec
mov
or
sub
inc
scas
push
inc
test
adc
ret
pop
cwtl
xor
push
jno
xor
push
stos
sub
mov
push
pop
aas
cmpsl
out
jb
xchg
ret
ljmp
add
mov
lret
xlat
jmp
inc
sbbb
push
adc
mov
ss
cwtl
pop
lods
dec
xor
xorb
enter
pop
lods
inc
aas
mov
int
and
ja
mov
mov
mov
dec
pop
lods
movsb
cmp
inc
mov
xchg
shll
dec
mov
mov
pop
push
pmaxsw
dec
push
xchg
xor
xchg
push
and
jnp
popf
ja
or
lds
in
jmp
mov
bound
xchg
gs
lods
mov
and
xchg
test
out
scas
adc
mov
add
mov
push
aam
cli
mov
cli
xabort
sar
inc
pop
adc
jb
jbe
pop
mov
mov
loop
into
and
or
shrl
fildl
cld
fisubrs
negl
das
clc
mov
fcmovnb
adc
fisubrs
iret
lds
in
sub
mov
shr
mov
and
lds
dec
std
mov
mov
jns
shrl
inc
insb
cmpsb
insb
in
pop
cmpsl
xlat
fnstsw
jg
cbtw
aaa
clc
nop
bound
xor
or
push
or
fisttps
adc
sub
xor
cwtl
xchg
bound
and
clc
push
lock
int3
test
add
or
outsb
jno
icebp
in
mov
mov
and
inc
arpl
push
push
arpl
xchg
loopne
and
imul
sbb
jno
test
shrl
mov
and
sub
stc
dec
xor
fs
out
xchg
jl
cmp
in
jno
mov
push
imul
outsl
pop
cld
dec
lods
or
pop
test
adc
jl
lret
mov
sub
cmp
test
xchg
and
in
loopne
inc
in
jecxz
mov
and
in
dec
cmp
cmpb
rcrl
inc
pop
push
je
inc
outsb
notb
std
pushf
in
push
pop
cmp
dec
lods
lods
loop
lea
cmpsb
sbb
arpl
and
stc
mov
mov
inc
xlat
pop
mov
push
sbb
cmp
addl
nop
adc
jo
fldl
xor
roll
hlt
in
mov
std
xchg
sbb
inc
cwtl
lahf
in
enter
mov
out
and
xor
push
shlb
imul
jmp
ret
sub
sub
lret
lahf
sbb
imul
aam
notl
add
mov
mov
les
or
pop
add
enter
repnz
fnstsw
and
xor
sti
test
leave
outsl
push
inc
ja
sbb
bound
dec
xchg
mov
pop
dec
stc
out
dec
xor
push
lret
iret
mov
push
aam
mov
les
shll
jl
pop
icebp
pop
sbb
nop
dec
int3
pusha
mov
inc
movsl
loopne
out
imul
imul
mov
repz
pusha
movsb
insl
mov
push
ret
or
pop
dec
xchg
and
mov
pushf
inc
cmpsb
mov
adc
dec
sub
call
icebp
notb
jp
and
shll
out
pop
inc
mov
xor
inc
xor
fwait
icebp
dec
ss
inc
repz
mov
in
fdivrl
daa
cmp
mov
adc
add
and
repz
add
and
sbb
cmp
mov
pop
loopne
int
fmull
insb
lahf
xlat
sahf
je
shl
test
frstor
orl
out
insb
movsl
into
mov
iret
int3
lret
add
ljmp
punpckhdq
loopne
mov
or
fiadds
insb
xchg
push
incl
adc
and
push
mov
test
das
jae
xchg
lahf
pop
cmp
lahf
stos
sub
push
fiaddl
test
jne
cmp
stos
adc
call
lret
cmp
fcompl
pop
pop
rcr
xor
sub
or
pushf
mov
xlat
stos
jl
adc
in
add
js
movsl
jne
xor
mov
lock
pop
in
jns
imul
popf
insb
mov
es
subb
adc
cmp
insl
jne
and
cli
push
xchg
cmp
push
daa
daa
stos
pop
out
dec
mov
add
mov
lea
mov
cmpl
popa
xchg
pushf
pusha
pop
xor
or
inc
and
stos
jl
inc
int
leave
pop
sub
popf
lcall
test
jne
andl
xchg
ja
dec
lods
enter
dec
aam
add
xchg
mov
cltd
arpl
popa
push
jmp
je
xchg
and
pop
jmp
popf
adc
push
ret
sbb
je
rcll
sbb
mov
ds
shl
cli
push
stos
cmp
or
stos
pop
loopne
fidivs
shrl
sti
cmp
cld
dec
shr
out
inc
std
jmp
jb
imul
int3
int
inc
loope
and
shl
push
cwtl
or
es
sub
call
mov
int
outsl
repnz
pushf
or
and
in
mov
stos
xchg
pop
mov
add
outsb
xchg
fwait
imul
insb
icebp
adc
mov
mov
cmp
pop
mov
dec
mov
adc
cmp
pop
xor
sbb
mov
sbb
cld
filds
xor
es
cmpsl
scas
test
xlat
ficoml
out
cltd
shrb
cmp
aas
jb
xchg
push
xor
daa
cwtl
addl
push
xchg
pushf
push
add
and
popf
out
aas
outsl
sub
insl
mov
mov
add
inc
divb
cwtl
lcall
ds
sub
or
pop
cmpsb
jb
sbb
insb
cmp
mov
ret
aam
sbb
enter
ss
xlat
loope
pop
into
aaa
pop
pop
mov
lret
dec
sarb
cmc
es
repnz
notl
iret
push
lock
lock
lds
inc
or
das
sbb
js
je
outsl
inc
mov
dec
and
push
add
mov
mov
push
shrl
fmul
xchg
and
shr
adcb
sub
addl
sti
in
ret
lds
pop
outsl
and
mov
adc
mov
or
cmp
divl
push
jge
sarb
mov
stc
mov
and
inc
and
aaa
xor
mov
inc
mov
or
push
jo
add
mov
test
scas
aas
pop
pop
enter
adc
adc
cmc
xchg
imul
lock
pop
sti
dec
sbb
mov
mov
cmp
or
push
add
jmp
shlb
out
dec
push
ja
jne
sub
mov
out
mov
jne
lret
lea
cmpsl
fs
sub
xchg
inc
fdivrs
xchg
sub
out
dec
popl
cmp
loopne
mov
ss
pop
adc
and
cltd
mov
addl
and
test
enter
xor
dec
out
pusha
cwtl
adc
add
or
lods
notb
push
dec
iret
out
sub
mov
pop
movsb
out
sub
mov
push
cmpsl
pop
adc
push
aaa
push
pop
sub
and
insb
inc
xchg
adc
cmpsb
push
mov
mov
mov
fnstenv
cmc
dec
mov
xchg
inc
insb
out
ja
notl
push
stos
jbe
lret
hlt
and
dec
mov
stos
dec
lods
gs
xchg
sbb
sub
mov
mov
fdivrs
push
push
mov
fs
xor
mov
ret
jb
lret
jecxz
fwait
cmpsb
cmc
xor
imul
out
xor
inc
xchg
cmp
inc
and
lods
mov
sbb
das
sub
fdivrs
or
out
jle
pop
dec
dec
fs
mov
cmpsl
lcall
imul
cs
pop
mov
leave
mov
in
jg
push
xorl
and
cmp
push
aad
dec
pop
pop
movsb
mov
push
es
popf
orl
or
jmp
scas
push
push
cwtl
sub
sub
lcall
punpckhdq
in
xchg
inc
loopne
sahf
scas
push
fdivl
loope
mov
adc
subb
arpl
sbb
fisubs
pop
addr16
int
xchg
mov
fists
popf
mov
cmp
lret
adc
and
lock
mov
popa
cmp
pop
loop
adc
stos
in
ret
insb
imul
adc
push
push
push
and
loopne
bound
push
int
xchg
cmp
sbb
nop
scas
pop
adc
xchg
sub
jp
jnp
jmp
adc
dec
adc
insb
pop
inc
push
mov
xorl
ds
pop
xor
addb
pop
mov
push
gs
sar
mov
je
sahf
and
int3
cmp
cltd
mov
xchg
pop
in
mov
ja
xorb
mov
pop
inc
mov
inc
test
ljmp
cmp
sti
and
pop
dec
dec
decb
jp
mov
mov
pop
or
or
push
inc
cmp
std
sbb
mov
sahf
pop
pushf
hlt
add
lcall
xchg
js
dec
cmpsl
jg
mov
pop
xor
loopne
xchg
jbe
fs
cmpb
jge
dec
cmp
jae
js
inc
inc
push
sbb
clc
xlat
inc
pusha
xchg
cld
enter
xchg
pop
mov
lcall
sub
aam
sbb
sbb
mov
fs
pop
mov
and
shlb
popa
jo
cmp
imul
mov
movsl
aas
in
repnz
fimull
pop
ljmp
pusha
adcb
push
dec
shrb
in
ffree
dec
mov
cwtl
push
pop
jo
in
into
push
push
push
insb
lret
es
mov
add
dec
push
scas
jp
mov
mov
and
das
sbb
outsb
test
pop
imul
push
mov
or
lock
das
out
mov
adc
cltd
or
rcll
cmc
mov
test
loop
jnp
cmpsl
cli
lods
mov
xchg
dec
push
add
xorl
jmp
test
xchg
scas
cmpsb
push
roll
add
outsl
lods
inc
pop
daa
mov
loopne
int
fldlg2
xchg
loop
jnp
lods
push
push
dec
sub
pop
push
enter
lcall
jecxz
pop
mov
sub
loopne
mov
in
fsubrl
pop
mov
je
int3
add
push
and
xchg
leave
movsb
dec
popf
mov
bound
je
cld
fimuls
or
xchg
fwait
and
dec
mov
mov
stos
je
int3
mov
pop
mov
mov
pop
and
or
add
cmpsb
insb
loopne
sub
dec
cmpsb
jnp
xchg
insl
or
pop
add
dec
xchg
sub
adc
push
add
aaa
cld
shl
pop
sbb
dec
clc
fsubrp
jne
or
cmp
jge
rorl
testl
fadd
addr16
push
inc
add
push
lahf
in
outsb
aas
push
jmp
pop
add
popf
xchg
testb
jge
aas
add
adc
jbe
push
repnz
cld
cli
out
ret
cwtl
push
in
mov
or
rclb
mov
and
in
jnp
ds
ja
ret
aaa
cmp
inc
rorb
dec
pop
lea
lds
pop
fs
scas
pop
dec
imul
cmp
or
fdivr
xor
xchg
imul
xchg
and
mov
mov
xor
adc
xor
add
stos
pop
mov
and
sbb
lahf
leave
pop
mov
sti
push
and
jo
leave
in
jo
or
pop
jne
sbb
stos
fsubrs
or
pushf
loopne
lret
orb
orb
xchg
xchg
into
std
fwait
js
imul
fbstp
pop
aam
xchg
adcl
cmova
xor
push
fmull
repnz
add
xchg
sti
push
into
xor
push
in
nop
rcrb
popa
popf
out
cmpl
sarl
add
test
aaa
loope
mov
add
xor
and
push
test
idivb
enter
lcall
ja
andb
inc
dec
jl
pop
movsl
int3
pop
repz
jae
dec
sub
push
enter
push
jmp
xlat
inc
test
sbb
push
adc
shl
push
dec
mull
inc
mov
xchg
adc
cmp
fbld
test
shll
push
imul
bound
std
lock
add
push
or
push
mov
adc
mov
push
xor
subb
add
inc
stos
mov
adc
ror
xchg
inc
or
xchg
jmp
sub
daa
adc
inc
test
fsubr
push
xor
and
fnstsw
mov
xchg
dec
mov
jns
xchg
jne
scas
imul
and
enter
mov
jb
pusha
test
inc
lods
enter
arpl
dec
jno
mov
pop
or
int
call
sbb
insl
push
mov
andb
xchg
xor
jg
lds
arpl
xchg
dec
mov
cmp
cli
cmp
fsubrs
insb
in
sbb
pop
mov
mov
dec
and
out
mov
fbstp
jg
int
leave
hlt
cs
jge
dec
jecxz
call
push
cmp
orl
mov
fs
gs
jle
pop
jle
into
lret
les
repz
push
and
inc
mov
addl
repnz
dec
cmp
dec
nop
js
jle
jg
pop
pop
sub
jne
xor
sti
pop
sub
push
add
mov
mov
adc
push
inc
pop
cmc
call
fimuls
enter
imul
es
orb
mov
jnp
adc
and
pop
ds
mov
dec
icebp
push
push
dec
sbb
xchg
xchg
das
pushf
cmp
pushl
jge
dec
inc
sbb
xor
mov
gs
mov
and
out
rorl
and
push
or
mov
or
hlt
fnstcw
rcl
scas
push
mov
add
push
and
push
mov
popl
push
bound
inc
adc
test
xor
outsl
push
repnz
inc
dec
jmp
in
imul
xchg
orl
divb
mov
subb
movsb
popf
sbb
pop
fucomp
gs
stos
push
out
jb
push
adc
inc
jl
rorl
inc
lock
popa
mov
cltd
xor
negl
cli
dec
mov
xor
pop
data16
jbe
sbb
lcall
cmp
jns
shrb
icebp
dec
filds
jo
mov
sbb
iret
add
mov
mov
out
jo
sahf
das
bound
loop
icebp
dec
andb
int
push
cmc
addr16
xor
scas
scas
jb
jo
jne
mov
jne
outsl
sbb
push
add
lock
popf
call
push
adc
adc
adc
adc
jle
jnp
loope
xchg
inc
data16
or
fdivr
and
test
mulb
movsl
push
inc
pop
xchg
stc
imul
pop
rcrb
lret
in
pop
leave
cmp
fistpll
adc
aaa
test
sub
adc
inc
mov
or
xchg
jg
lea
fdivrl
flds
sbb
adc
push
lods
xchg
div
jo
xchg
rorb
xchg
add
insl
pop
rorb
imull
out
loop
jbe
push
fs
xchg
sbb
loopne
fldt
rol
push
push
sbb
ret
mov
outsl
xchg
enter
dec
or
push
int3
sbb
stos
sub
sbb
shlb
mov
cmpsb
adcb
and
outsb
sbb
xchg
fdivrs
pop
inc
data16
daa
sbb
mov
shrl
aas
mov
and
fsubs
gs
sub
mov
jnp
pop
lea
dec
xchg
data16
sub
or
sbbl
movsl
into
sub
stc
inc
xchg
jl
fsts
and
loop
mov
sub
ja
iret
ret
jne
push
loope
pop
mov
pop
bound
sti
sbb
lahf
dec
daa
xchg
std
xlat
pop
jl
cmp
push
xchg
add
test
popa
aaa
dec
fs
ljmp
cmp
and
jne
lea
push
mov
xchg
fst
ds
push
lahf
mov
mov
xchg
adc
popa
bound
stos
popa
mov
mov
xchg
sbb
pushf
insl
dec
cmp
push
out
call
push
clc
and
lds
stos
inc
push
jge
repz
loope
out
mov
push
push
dec
sahf
xchg
dec
push
rcll
cmp
rolb
lea
mov
cmpl
cld
aam
dec
inc
add
adc
sbbb
mov
iret
push
sub
pop
scas
leave
mov
jae
sar
dec
adc
cmp
sub
push
mov
push
lods
enter
adc
nop
mov
fcmovnb
sar
int
add
shrb
pop
add
fdivp
cmpl
add
sbb
or
and
add
push
addr16
movsl
sbb
aaa
and
and
stos
out
jl
sbb
loopne
push
xchg
xchg
jl
dec
lret
fidivrs
inc
movsb
imul
stos
and
push
popa
inc
or
inc
iret
idivb
mov
shl
into
add
cwtl
pop
stos
mov
ret
dec
cmc
or
cmpsb
out
int
test
gs
adc
mov
sbb
cli
data16
iret
rcll
aas
pushf
sti
fstpl
sti
cmp
sti
mov
pop
sti
fistpll
insb
ret
mov
push
adc
xchg
mov
sub
int3
int
and
loope
push
pop
adcb
add
out
xor
fstpt
daa
cmp
inc
insb
sub
xchg
mov
and
lods
xor
lods
enter
test
jle
push
lahf
int
repnz
mov
pop
jbe
pop
mov
lods
call
push
addb
xor
cltd
arpl
lret
and
adc
jmp
js
repnz
mov
lods
aaa
aas
mov
pop
jns
orl
test
jecxz
mov
pop
adc
cmp
xor
xor
xchg
xor
jmp
and
jecxz
xor
imul
mov
push
or
imul
addr16
mov
push
ja
pusha
jae
or
insb
sbb
adc
enter
mov
sbb
lcall
pop
push
xchg
mov
mov
jmp
push
jnp
stc
inc
sbb
ficompl
ret
mov
data16
cmp
adc
int3
bound
jle
ss
xchg
push
pop
hlt
mov
cmp
mov
jae
lods
bound
cmp
mov
scas
jmp
inc
xlat
mov
sbbb
mov
out
imull
out
jg
mov
notb
loopne
mov
inc
add
hlt
lret
test
push
je
pop
out
mov
leave
fdivrl
xchg
clc
scas
dec
addr16
and
subb
mov
insb
aas
pop
ror
and
shrb
cmp
cmp
stc
jmp
add
pusha
dec
int
fwait
mov
jp
pushf
adc
xchg
inc
pop
cmpsl
sbb
and
es
mov
mov
lahf
sahf
jg
daa
mov
data16
mov
filds
call
cli
scas
cmp
arpl
push
jo
cwtl
push
repz
loope
movsl
dec
mov
jno
fimuls
movsb
shrb
and
cmp
repnz
sub
in
test
iret
mov
iret
jmp
sub
inc
add
sub
lahf
or
jg
cmpsl
cmp
lea
xchg
mov
inc
inc
mov
lret
or
imul
lret
push
mov
push
add
mov
daa
jl
aaa
je
jno
dec
jae
lcall
adc
push
xchg
jnp
les
insb
fisttpll
stc
test
dec
pop
jg
mov
or
fdivrl
adc
push
outsb
jb
int3
loop
insl
jae
rcll
xor
adc
movsb
imul
jb
xchg
cltd
cmc
or
dec
push
sti
and
repnz
mov
lods
dec
fildl
cld
lds
fstpt
dec
je
and
shlb
mov
std
fwait
out
or
xchg
add
sar
fldenv
mov
ja
inc
sbb
imul
sbb
test
mov
fs
sbb
mov
and
test
insb
or
sti
data16
jns
sbb
jg
sbb
pop
pushf
push
xor
lret
repnz
arpl
jns
lock
mov
dec
xor
lds
mov
lock
inc
movsl
pop
enter
xchg
in
inc
xor
and
pop
roll
dec
sub
scas
cmp
push
pop
jecxz
xchg
inc
mov
xchg
xor
in
decl
stos
ja
popf
sbb
pop
movsb
xor
adc
in
inc
popf
pop
sub
out
pop
loop
out
or
je
and
lds
lods
pop
rcll
push
mov
and
push
out
dec
push
fwait
adcl
sbb
imul
cmp
test
lds
cmp
push
xchg
je
inc
daa
nop
push
sbb
loopne
lods
jnp
das
xlat
in
sub
enter
jnp
repnz
mov
out
lods
add
mov
xlat
addr16
orl
mov
mov
add
cmp
dec
cld
dec
sub
pop
pushf
pop
mov
mov
iret
das
or
cmpsb
xor
jmp
in
lds
push
push
xchg
mov
cli
cs
push
js
shrl
or
xchg
and
stc
insb
fdivs
push
hlt
mov
andb
daa
je
rolb
dec
adc
lock
int
dec
call
shll
jb
call
pop
sub
movsb
daa
or
xchg
jae
jo
pop
mov
fdivrl
mov
xor
ljmp
mov
jl
aaa
cmp
in
aad
jo
cltd
pop
call
fidivs
mov
in
int3
adc
cmp
mov
mov
inc
or
dec
sub
sbb
test
stos
push
sub
inc
cmpl
aad
pushf
jnp
sub
sbb
xchg
mov
sub
test
dec
sbb
jb
jns
xchg
inc
add
loop
outsl
test
dec
pusha
gs
ror
mov
movsl
jb
push
outsb
adc
aad
cltd
cmp
mov
bound
push
stos
xchg
push
inc
daa
jmp
test
ljmpw
imul
daa
pushf
mov
cmp
adc
push
rorb
int3
cli
imulb
mov
sub
sbb
xor
rorl
leave
and
in
sbb
or
popf
je
in
jo
inc
in
call
mov
cmpsl
push
stc
lea
test
shrl
orb
movsl
loop
jge
cmc
setl
nop
xchg
icebp
in
popf
iret
mov
mov
xchg
mov
pop
leave
sbb
mov
cmpsl
xchg
jnp
inc
pop
ss
jp
pop
hlt
add
bound
adc
xlat
outsw
aas
cmp
and
or
jbe
call
pop
xor
int3
push
daa
sbb
push
sbb
push
xchg
cli
ret
inc
pop
jmp
inc
jge
mov
adc
mov
int3
pop
dec
mov
lods
imul
hlt
xchg
and
mov
pop
sub
push
add
sbb
cmpsl
sub
mulb
imul
sbb
push
mov
or
repnz
push
aas
stos
dec
xor
sahf
jne
insl
fiaddl
xor
dec
adc
mov
pop
and
je
add
les
dec
aam
scas
scas
pop
add
jo
mov
push
sbb
insb
scas
or
cmp
cmp
movsl
call
ja
or
xlat
dec
adc
and
repnz
insb
xchg
add
or
int
sub
add
std
cmp
dec
in
popf
cmp
int
jnp
mul
xchg
ja
nop
lds
loope
insb
into
jmp
test
adc
or
ret
mov
in
out
ja
push
jne
dec
fmuls
int
push
mov
aad
lret
mov
xor
xorl
pop
and
das
xchg
outsb
das
inc
bound
loope
jmp
pop
mov
icebp
mov
sub
dec
jns
sub
fdivl
in
aas
mov
mov
ljmp
sub
or
add
movsb
push
or
lret
cmp
sub
enter
outsl
xchg
fwait
stc
lahf
loop
pop
test
cltd
aas
mov
and
es
popa
pop
dec
lods
jle
mov
fwait
sbb
jecxz
mov
shrl
cmpsl
inc
xlat
jl
sbb
push
inc
jg
push
repz
shlb
testb
sbb
mov
enter
push
inc
aaa
fbstp
mov
sbb
and
mov
and
scas
aas
out
sub
inc
cmpsb
insl
xchg
inc
pop
hlt
xor
fists
sbb
outsl
cmp
jbe
sbb
pop
jl
sahf
imul
pop
icebp
or
leave
mov
bound
push
flds
orl
mov
dec
add
insb
ret
xor
xchg
insl
lahf
adc
mov
inc
adc
negl
push
push
enter
dec
fistpll
stos
mov
ret
fstpl
pop
divb
arpl
data16
or
mov
lret
inc
nop
add
push
int
push
stc
inc
outsb
dec
scas
mov
icebp
dec
xchg
mov
push
inc
cli
push
subb
jnp
mov
cmc
in
repnz
add
mov
jmp
stos
mov
ljmp
xchg
fiaddl
sbb
test
cmp
cmpb
adc
xchg
xor
pop
loope
iret
xchg
jo
xchg
divb
push
xlat
push
loopne
and
inc
pushl
or
sahf
ret
fstpl
sub
nop
pop
fdivr
repz
addl
jmp
inc
jns
xor
pop
cmpl
pop
std
outsb
add
push
pop
ret
mov
sbb
sub
arpl
into
mov
in
mov
lahf
jb
adc
scas
mov
and
xchg
mov
adc
out
mov
aaa
mov
dec
dec
mov
imul
je
add
jnp
pop
ss
pop
fisubs
add
in
scas
popf
in
nop
fwait
adc
popf
shlb
ja
dec
and
jo
faddp
mov
sti
jle
push
repnz
mov
testb
fpatan
fcmovnbe
das
cmp
add
shlb
push
movsb
jp
or
add
pop
pop
aam
mov
movsb
push
lock
ret
mov
xor
push
cmp
test
not
push
sbbl
out
jmp
insb
cwtl
ret
pop
ja
lret
sbb
test
mov
pushf
add
jae
adc
push
les
das
int3
mov
rep
call
inc
bound
mov
jae
test
inc
das
adc
sub
jge
pop
movsb
enter
jle
xchg
sbb
push
mull
add
jae
lea
mov
clc
push
mov
ja
push
or
xchg
jle,pt
sub
stos
scas
or
sub
fcoml
vpunpckhbw
xchg
lahf
push
inc
xchg
add
lea
into
and
shr
xchg
xor
lret
call
outsl
sbb
adc
pop
leave
add
fsubrp
mov
cltd
not
lcall
adc
ja
std
add
cld
cwtl
hlt
stos
pop
mov
dec
pop
push
push
movb
fisttpl
or
xor
jle
pop
std
push
jnp
push
icebp
outsb
out
adc
inc
mov
jns
mov
mov
bts
cmpsb
bound
push
fcoms
pop
push
sub
and
ficomps
les
jl
imull
add
mov
xchg
aam
call
xor
scas
push
xor
adc
lret
mov
mov
mov
pop
mov
xchg
push
ret
jb
push
pushf
xor
push
push
shl
cmp
jle
push
outsb
sub
pop
and
loope
js
cmp
and
push
rcr
into
sub
insl
or
push
sbb
mov
push
add
mov
cmc
push
js
xchg
das
mov
jbe
pop
mov
mov
mov
fcmovb
xorb
clc
or
mov
jmp
push
dec
xor
xchg
sub
inc
adc
nop
cmc
dec
mov
daa
inc
jl
mov
pusha
fs
test
roll
es
xchg
dec
inc
mov
cmc
jns
jno
lret
cmpsb
sub
aad
mov
mov
cmp
push
cld
rcll
mov
cmp
pushf
mov
fimull
and
fstpl
arpl
xchg
push
scas
jecxz
ret
add
mov
mov
dec
fs
dec
xor
xchg
fists
call
push
lret
add
pop
nop
adc
xor
movsb
fnstcw
and
pop
arpl
decb
ficomps
push
add
sbb
clc
fisttpll
bound
mov
dec
jl
push
lret
cmp
and
xor
in
mov
jae
or
sbbl
stc
ds
ljmp
mov
cwtl
cld
push
sbb
repnz
jbe
aad
into
sub
arpl
mov
mov
add
jbe
cmp
and
pop
pushf
jecxz
leave
cmp
fs
rcr
xchg
add
cmp
fcmove
adc
aas
les
sub
aas
add
adc
enter
out
das
xchg
push
cmp
mov
call
mov
fsubp
or
ss
xor
push
aad
push
pop
cmpsb
and
shrb
dec
jmp
mov
mov
rclb
mov
jo
or
daa
dec
stos
lds
mov
fmulp
pushf
ljmp
in
icebp
rep
lock
ret
hlt
inc
xchg
arpl
or
xchg
jo
and
sbb
adc
fidivrs
dec
insb
je
inc
aaa
insb
pop
pop
icebp
mov
sti
push
cmpsb
daa
testl
inc
scas
adc
outsl
jmp
mov
jno
sbb
xchg
jg
jge
fwait
scas
mov
mov
jl
adc
test
das
pop
in
sub
xchg
je
mov
cwtl
fcoml
push
push
ss
inc
pop
cmp
push
lcall
adc
jno
pop
sub
jo
fisubl
popf
sub
pusha
mov
cli
addr16
lcall
sub
dec
and
dec
ds
or
xchg
in
cmc
fstps
pop
adc
lahf
inc
imul
mov
fisubl
sbb
and
jecxz
movsl
push
mov
add
loopne
xchg
xor
and
stc
mov
or
mov
push
aad
adc
mov
push
push
fwait
add
or
xor
cmc
or
lods
dec
mov
shr
push
jae
xorb
jbe
mov
jp
push
add
fistpl
ljmp
out
popa
mov
or
lret
mov
mov
add
cmp
cmp
mov
lods
incb
mov
test
mov
mov
push
and
ja
lcall
mov
out
data16
lods
outsl
push
mov
addb
cltd
call
pop
push
in
lea
fimull
xchg
imul
rcrl
mov
jg
adc
pusha
gs
and
popf
inc
inc
dec
xchg
add
adc
lock
xchg
dec
jns
dec
add
or
pop
xchg
mov
add
shl
js
out
mov
in
sub
sub
scas
sbb
pop
in
clc
and
mov
loop
sub
rolb
adc
notb
mov
sbb
pushf
inc
aaa
push
add
aam
inc
ljmp
jbe
xchg
mov
out
sbb
jl
stos
in
sub
fsubrs
fiadds
subl
inc
addr16
and
sbb
fistpl
inc
sti
dec
fidivs
adc
orb
adc
or
mov
and
inc
jnp
icebp
mov
mov
mov
push
roll
jne
jne
mov
lods
sub
mov
loope
test
and
aam
jo
xor
add
pop
cwtl
pop
loopne
imul
mov
fnsave
je
cli
xor
pop
or
popa
sarb
dec
repz
push
mov
sarl
enter
pop
inc
and
mov
lods
and
xor
hlt
incb
nop
in
int
xor
cmp
lds
andb
and
mov
stos
notb
sbb
repz
xlat
xlat
cltd
pushf
or
xchg
inc
pop
dec
adc
mov
test
xchg
cltd
xor
lea
outsb
call
sahf
aad
cmp
loopne
cmp
ss
pop
iret
cmp
or
push
xor
or
inc
jle
ja
iret
ljmp
pop
mov
jmp
scas
shrb
and
daa
ds
xor
jo
mov
add
ss
ds
xchg
dec
in
sub
das
cmc
pop
cs
jae
cs
lods
std
pop
cmpsl
test
jno
dec
pop
push
add
xorb
sub
daa
ret
mov
stc
cld
lret
pop
repz
inc
mov
aam
shr
add
test
sahf
les
out
ds
inc
sbb
mov
push
les
and
add
inc
loopne
push
sbb
jl
fstl
pop
movsl
out
out
dec
leave
test
push
sbb
pop
in
psubd
cmpb
jge
insb
cmpsl
lods
dec
or
xor
scas
mov
mov
data16
aad
xchg
push
rcl
in
cmp
xor
push
dec
mov
add
addr16
jns
sti
cmp
pop
dec
ds
in
adc
fistl
pop
sbb
xchg
fists
mov
nop
mov
adc
je
pop
xchg
pop
movsl
loop
sbb
xchg
sub
cmp
push
mov
pop
pop
pop
dec
adc
dec
add
je
pop
icebp
push
cmp
fsubrp
out
sarb
fstl
adc
std
movsb
insb
sbb
inc
jns
cmp
popa
cwtl
sub
je
mov
jl
xchg
xchg
or
xor
xor
scas
int
mov
cmp
push
xchg
and
fisubrs
mov
cltd
xor
inc
add
mov
mov
inc
lcall
xlat
jp
cltd
or
sbb
jle
ljmp
popf
inc
dec
or
arpl
mov
and
sub
arpl
xor
and
bound
icebp
mov
jecxz
subb
jb
push
xor
mov
push
pop
call
pop
cs
lret
xor
mov
scas
ds
xchg
sbb
dec
dec
xchg
je
add
popa
xchg
orb
dec
divl
ret
ret
jnp
pop
pop
push
cmp
push
xlat
pop
lret
dec
mov
xchg
inc
clc
xchg
xchg
fwait
ret
mov
cmp
sub
frstor
push
sub
and
push
cmp
and
inc
cmp
in
mov
add
pop
leave
jns
ret
pop
fs
outsb
push
push
mov
jge
insl
stc
mov
mov
dec
push
inc
sti
lods
imul
mov
adc
dec
pop
jp
xor
ljmp
sti
mov
dec
aad
addr16
pop
push
lcall
push
fcomps
adc
mov
add
jb
negl
scas
dec
jns
lcall
mov
jl
test
pop
jg
xor
clc
xchg
xlat
mov
push
insb
ret
xchg
pop
mov
adc
pop
incl
fwait
data16
mull
ja
lahf
pop
movsl
adc
es
mov
jbe
and
hlt
mov
xchg
data16
mov
sub
stc
and
cmp
decb
in
jp
jo
pop
lock
sbb
push
into
mov
in
addr16
movsb
std
addr16
mov
mov
out
push
fldenv
mov
adc
jnp
mov
lock
pushf
mov
mov
in
xor
sbb
jecxz
xor
cwtl
sbb
pop
sti
repz
sbb
push
cmp
sub
fs
fadd
mov
mov
cmp
in
jl
into
stos
xchg
incl
sbb
add
test
mov
idivb
xchg
call
in
inc
fcoms
lods
out
es
adc
aaa
inc
jnp
cmp
sub
into
in
sub
outsb
xchg
fstpl
divb
jns
xchg
mov
lock
pop
scas
jae
xorl
shrb
int3
jne
out
icebp
das
rolb
cltd
mov
xchg
xchg
or
cmp
cmp
xchg
mov
add
int3
add
dec
xor
cmpl
and
sub
sbb
jb
xor
xor
or
mov
mov
inc
mov
xchg
hlt
sub
in
and
jb
cmc
mov
nopl
add
xor
sbb
add
lret
out
lahf
fistl
mov
or
add
lea
stos
jne
loop
dec
adc
xchg
inc
or
icebp
or
sub
mov
push
add
lcall
fdivp
sub
xchg
fbstp
rcl
dec
or
pop
sahf
mov
js
push
enter
insl
repnz
insb
push
dec
pushf
frstor
out
cmpsb
and
inc
adc
pop
das
jle
push
mov
mov
ret
push
enter
adc
push
sub
divb
out
rcr
push
jbe
out
pop
adc
stos
out
imull
mov
xor
imul
dec
and
in
xchg
xchg
sub
mov
in
push
cltd
aad
dec
mov
cmpsb
jl
dec
mov
and
cmp
sub
fstl
scas
adc
fcoml
shl
push
mov
xchg
dec
test
mov
fcoms
movsb
popa
jge
je
in
imull
xchg
test
pop
lods
loop
jmp
repnz
mov
fisttpl
loop
add
cmp
inc
dec
leave
pop
outsb
sbb
push
push
dec
lods
mov
outsb
rclb
clc
jne
outsl
lods
mov
scas
jno
jno
adc
add
add
hlt
dec
hlt
xor
mov
jae
testl
pop
repz
jle
repz
and
mov
sahf
sub
lret
dec
xor
int
xor
sub
sub
xorl
lea
ret
add
rcrb
xor
out
dec
xchg
inc
cmp
cmpsl
adc
and
repnz
push
lea
sbb
cmp
adc
or
les
push
iret
repnz
xor
loopne
test
clc
jecxz
adc
mov
sub
adc
mov
xchg
int
aad
loopne
cmc
xor
cld
add
xlat
cmp
pop
icebp
push
int
add
in
mov
mov
or
ret
mov
fiaddl
aaa
jecxz
mov
pop
push
imull
popf
lea
bound
shlb
sbb
dec
aam
jo
xchg
xlat
dec
add
mull
lea
insl
jg,pt
xor
jnp
aad
adc
add
push
rorl
int3
leave
icebp
pop
push
and
xchg
mov
jle
mov
enter
push
jne
push
push
sti
jnp
andl
call
inc
push
push
rcll
mov
mov
insb
pop
jmp
js
fnstenv
xchg
xor
jbe
scas
inc
cmc
divb
daa
call
movsb
xchg
rol
mov
push
inc
inc
mov
cmp
mov
xor
adc
sub
jl
scas
ds
mov
jno
ret
fiadds
nop
mov
ret
mov
in
jns
cmp
adc
lea
sbb
int
fdivr
loope
push
add
and
xor
mov
ret
cwtl
aas
pop
int3
xchg
cmp
fwait
cmp
lock
pop
out
enter
mov
bound
nop
or
push
sahf
std
sarl
in
and
inc
xor
aam
push
add
add
pop
hlt
popf
add
fisttps
mov
iret
ds
repz
pop
aaa
adc
push
test
faddp
fisubs
mov
mov
dec
movsb
adc
mov
call
fldl
scas
jmp
push
cli
cmp
in
into
les
or
rclb
ja
daa
fstps
add
adc
xor
pop
mov
loopne
mov
pusha
mov
push
js
sub
mov
xor
xorl
mov
jns
clc
jae
pop
push
mov
push
jp
lret
mov
into
add
push
mov
movsb
sub
pop
xor
rcll
sbb
xchg
sub
rcrb
mov
mov
add
lret
cmp
fwait
inc
adc
dec
xchg
xor
mov
sahf
pop
mov
add
pusha
lock
pop
ror
jnp
or
sub
sub
mov
xor
adc
adc
pop
cmp
fs
out
sbb
lods
cs
in
popa
loope
dec
aaa
movsl
push
into
jle
cmc
adc
sbb
js
gs
mov
xchg
cmp
ds
mov
push
add
clc
repz
add
repz
lock
pop
lret
movsb
pop
xchg
test
fs
repz
jecxz
mov
mov
mov
push
jp
rcr
jne
bound
cli
cli
hlt
push
or
mov
rclb
pop
out
sub
sbb
push
stos
xchg
push
inc
mov
push
mov
aad
imul
push
add
sahf
fbld
xor
adc
lods
hlt
inc
xchg
negb
push
sub
mov
fildl
sbb
jge
push
jo
push
xor
push
and
inc
xchg
mov
insl
dec
lret
mov
add
idivb
nop
xchg
sub
fisubl
pop
xor
or
daa
sbb
jne
loope
mov
dec
lcall
push
push
cltd
or
mov
sbb
bound
mov
adc
jge
adc
cmc
fimuls
mov
inc
cs
add
les
andb
inc
rolb
mov
jp
sar
jmp
das
xchg
aas
jns
rolb
stos
cld
sub
fsubs
fcmovu
in
fnstcw
jge
xor
sub
cmp
pop
movsb
fcoms
repz
push
test
cmp
jg
movsb
cmpsb
and
xor
mov
je
dec
pop
js
mov
jle
jae
pop
das
xor
push
out
out
leave
jo
or
decl
mov
shlb
fwait
push
jge
dec
notb
sti
mov
pop
dec
or
clc
mov
sub
xor
and
lret
and
cmp
push
mov
mov
lock
jnp
sarb
or
stc
scas
or
cmp
inc
lahf
sarb
lahf
xor
sti
inc
push
jno
aaa
sar
das
loopne
add
or
imul
jge
imul
mov
cmp
cld
das
add
inc
fmul
adc
imul
mov
mov
stc
lret
inc
mov
inc
nop
dec
xor
mov
sbb
mov
sbb
cld
imul
nop
dec
add
add
pop
add
sbb
pop
fmuls
dec
loope
add
lcall
call
in
cli
cli
scas
cmp
adc
scas
inc
xchg
movsl
pop
mov
sarl
pusha
mov
neg
loopne
cmp
sbb
arpl
repz
fnstenv
cmp
test
inc
into
pop
hlt
out
push
jnp
mov
cmpsl
mov
mov
cltd
xor
int3
dec
or
inc
outsb
xchg
call
arpl
or
xlat
fcos
fisubrl
or
pop
jb
sar
push
xchg
jnp
push
cld
mov
iret
or
and
mov
lahf
cmp
adc
adc
mov
test
out
imul
hlt
es
add
jae
dec
mull
sbbl
add
inc
mov
dec
jle
pop
insl
pop
mov
adc
mov
sub
arpl
cwtl
or
xchg
les
jo
push
in
test
popa
rcr
sub
imul
test
fwait
insb
mull
xlat
les
std
rorl
jnp
jmp
mov
fstl
adc
xchg
xor
inc
jl
jne
mov
jb
mov
js
mov
pop
mov
push
cmp
cmp
adc
cmp
mov
cmp
rorb
sub
sub
inc
pop
and
dec
add
in
cmp
mov
or
jnp
sub
sbb
cmp
inc
call
loope
push
repnz
cmp
adc
cwtl
fcoms
rcll
imul
sub
clc
sub
xor
std
jne
mov
out
incl
stos
data16
jl
and
imul
mov
std
push
sbb
xor
dec
xor
jp
stc
aam
dec
scas
cmc
sbb
mov
xchg
fs
xchg
gs
jecxz
adc
gs
xchg
xor
pop
int
addb
into
and
loopw
jp
inc
adc
insb
icebp
or
push
mov
mov
scas
add
and
popf
xor
adc
enter
pusha
mov
testb
pop
dec
shlb
cmp
or
sub
sbb
lcall
loop
add
fucomp
inc
in
lods
push
mov
cli
adc
out
gs
dec
subb
lret
add
mov
cmp
call
jne
rolb
out
lods
ret
push
leave
adc
mov
xor
jle
cmp
ss
int
fistpll
lret
popf
fildll
push
mov
movsl
cmp
aad
call
test
mov
push
adc
dec
jmp
test
push
test
rclb
insl
adc
jno
cmpl
push
imul
addl
xor
jbe
cmp
pmaddwd
and
xor
stc
inc
xchg
sub
jo
sub
fcoml
mov
imul
xchg
cltd
mov
in
in
dec
ds
dec
ljmp
lret
scas
mov
add
pop
fbld
push
cmp
dec
test
pop
push
in
or
push
push
outsl
jae
jbe
in
jecxz
lcall
pusha
test
adc
mov
push
cmp
jmp
enter
add
lcall
push
jbe
sti
lods
and
mov
push
hlt
fs
jno
mov
pop
icebp
mov
jnp
pop
stc
movsl
push
inc
pop
in
mov
dec
cmp
stos
rcrb
lods
inc
data16
xor
popa
into
push
fidivrl
push
popa
cmp
enter
cmp
push
movsl
push
push
leave
jl
fiaddl
xchg
or
adc
aad
or
fnstenv
mov
test
push
jb
lock
mov
ja
xchg
pop
push
lretw
cmp
popa
out
lods
inc
mov
stos
call
fidivl
sbb
pop
data16
cmp
sbbb
in
ret
clc
mov
and
adc
in
push
out
mov
push
ja
xor
in
out
push
mov
insl
jge
xorl
loop
mov
cmp
jmp
jbe
push
jo
lea
ds
push
push
call
out
xor
sbb
sub
mov
dec
fs
push
jl
push
or
leave
cmp
int
cmp
adc
testl
mov
lock
and
int
pop
repz
jecxz
sub
shl
jl
aaa
fnstcw
sbb
pusha
std
jge
es
pop
cmp
or
ja
adc
push
jb
cld
sbb
pop
push
push
cmpb
jmp
ljmp
jecxz
mov
es
add
pop
imul
ja
lock
test
sbb
push
add
add
test
mov
or
out
jnp
pusha
sahf
out
out
cmpsl
cmc
push
xchg
inc
dec
dec
cltd
out
mov
shrb
dec
add
lret
jnp
lcall
in
cltd
sahf
sbbl
xor
addb
popf
mov
shl
mov
movsl
mov
mov
inc
sub
dec
mov
pushf
loopne
jg
lock
mov
clc
or
scas
iret
fmull
popl
lret
sub
mov
pop
stos
jmp
pop
movsl
dec
mov
out
mov
out
outsb
mov
jo
hlt
jb
add
stos
sbb
lret
mov
ret
dec
insb
outsb
or
popf
jno
mov
loop
jno
mov
leave
inc
ret
hlt
addb
xor
jo
insl
dec
mov
lods
pop
pop
pusha
push
add
jmp
mov
add
sub
jnp
fildll
cld
push
xlat
mov
sbb
sbb
subl
mov
push
and
cmp
pop
lock
js
aad
cmpsb
and
push
mov
ja
bound
mov
adc
dec
dec
mov
pushf
push
fimuls
push
popf
jle
int3
lods
xchg
inc
movsl
pop
mul
xor
lods
pop
fildl
inc
or
mov
shlb
int
inc
cwtl
sbb
xchg
jae
je
cmp
fsubl
sbb
loopne
insl
orl
add
push
scas
addr16
add
nop
repz
xor
outsb
and
test
out
dec
rorl
dec
in
in
repnz
movsb
and
mov
aas
mov
outsl
dec
fistpll
xor
jmp
test
sub
fdivrs
sub
jo
aad
sbb
outsl
sbb
mov
lcall
adc
sar
lea
cld
and
sbb
lods
call
mov
xchg
dec
jns
push
rcrl
call
cli
std
pop
sbb
cmp
loop
xchg
inc
adcb
add
push
add
jo
cmpl
fstp
xor
shlb
mov
addr16
adc
dec
fdiv
adc
rcll
xchg
in
bound
scas
mov
loop
rcrb
mov
js
jb
push
or
mov
scas
lock
and
jge
lock
mov
push
shll
mov
shrl
xchg
insb
outsb
pop
jge
adc
push
or
mov
or
sbb
mov
aas
xor
xor
aam
aad
xchg
adc
ret
pop
rol
movsl
push
sbb
shrb
jns
adc
aad
shrb
aaa
in
lods
gs
mov
ret
ficompl
and
push
cld
ret
test
hlt
adc
stc
jbe
push
sub
mov
cltd
mov
add
push
out
sub
cmpsb
lock
jbe
mov
or
cmpsb
rclb
dec
pop
mov
js
xor
data16
out
fcomps
pushf
insl
push
cmp
jnp
adc
mov
add
push
push
loope
lods
bound
mov
sbb
stos
cs
mov
out
mov
xchg
jne
loopne
mov
les
jo
pop
cmp
not
mov
int3
and
mov
adc
sub
mov
add
insl
xchg
cmp
in
sbb
fiadds
enter
dec
xor
push
fwait
lea
cmovnp
jo
mov
std
xchg
cmp
std
fidivs
loopne
bound
jnp
repz
sbb
rorl
jns
add
mov
cmpsb
fcomps
mov
sub
movsl
gs
xchg
orl
pop
sbb
popa
mov
cli
cmp
lea
jo
fists
pop
inc
dec
aam
loope
incb
ret
xor
or
inc
cmp
ja
icebp
pop
lods
repnz
or
movb
pop
cmp
out
and
adc
mov
or
inc
sti
lahf
or
push
mov
mov
bound
adc
pop
shrl
mov
and
inc
lods
stc
lods
fnstcw
inc
insb
or
push
lahf
mov
cli
cs
je
push
xor
cmp
mov
imul
scas
xchg
mov
sub
push
inc
adc
jecxz
orb
test
loope
repnz
cs
sub
nop
push
dec
pop
adcb
out
scas
lcallw
shlb
sbb
pop
adc
xchg
sub
stc
cli
pop
dec
cld
enter
arpl
leave
pop
es
movsl
jmp
lahf
lods
push
sub
mov
push
bound
lret
xor
jne
lcall
mov
sbb
pushf
loope
pushf
rcrl
xor
arpl
popa
xchg
jae
jns
idivb
imul
or
movsl
mov
sti
mov
inc
cmp
in
sub
test
pop
mov
inc
sbb
outsl
pop
out
and
sbb
pop
bound
xor
mov
adc
xor
push
xor
push
xchg
stos
cmp
aas
movsl
scas
cmpsb
dec
icebp
mov
cltd
cmp
jmp
dec
fbstp
addb
sub
je,pn
shll
mov
jae
movsb
jg
repz
push
sbb
push
jbe
jmp
lret
inc
inc
xor
pop
cs
or
and
out
ljmp
cmp
push
or
test
jne
test
into
dec
xchg
cltd
xchg
scas
fs
sub
mov
cltd
mov
mov
adc
add
stos
nop
and
aaa
js
xchg
in
popf
dec
mov
addr16
cmp
popa
lock
je
sub
xchg
pushf
mov
cwtl
push
mov
pop
cmpb
pop
cmp
add
pop
and
add
std
jmp
pop
xor
xchg
leave
sahf
imul
xchg
lahf
or
lds
les
ds
in
cmpl
mov
out
xchg
popl
mov
fists
fstpl
xor
fwait
jge,pn
mov
add
movsb
clc
shll
mov
or
add
sbb
lds
pop
test
stc
ret
cmp
sbb
sub
scas
aaa
jl
dec
mov
es
fildll
dec
cwtl
repnz
popl
push
nop
pop
mov
sub
stos
aas
std
mov
or
xchg
das
notl
jecxz
cmc
loop
mov
cld
sbb
test
or
xor
sbb
push
jno,pn
enter
pop
cwtl
popf
cmp
repnz
out
dec
sub
imul
hlt
push
xchg
xchg
insl
inc
loop
iret
sarb
xor
xor
jmp
xor
ret
into
push
jns
mov
xchg
popf
mov
jmp
push
inc
stc
or
sarb
es
call
clc
adc
pushf
pop
scas
mov
xchg
sbb
dec
mov
notb
adc
sbb
out
mov
mov
adc
hlt
test
and
xchg
mov
sub
test
loope
ja
in
test
jo
sbb
ret
ss
sbb
cmp
mov
mov
test
sbb
fwait
or
pop
call
mov
das
aaa
loope
arpl
dec
outsl
out
mov
mov
and
jle
and
dec
jns
fimull
gs
hlt
testl
lahf
test
pop
stos
fsubs
fsubrs
not
in
xchg
sar
ja
pop
cmc
loopne
loope
insl
scas
movsb
push
gs
inc
lods
sbb
int
mov
pushf
push
in
js
pop
cmp
push
scas
mov
xchg
rclb
mov
jecxz
mov
lds
xchg
xchg
inc
sbb
into
gs
cmpsb
hlt
je
xchg
pop
fstpt
into
loope
sub
aam
pop
push
imul
pop
xlat
test
and
inc
cld
dec
test
sti
pop
loope
jp
shl
stc
pusha
inc
xchg
jo
jmp
aas
inc
jp
mov
and
js
pop
insb
lock
mov
andl
push
out
sbb
jmp
ficompl
imul
adc
xchg
test
jl
in
pop
dec
add
out
ret
or
lock
push
lret
push
fsin
or
je
mov
hlt
push
jg
das
outsb
or
lods
add
xor
mov
std
cli
inc
popa
pop
cmp
mov
aas
jo
enter
mov
mov
push
movsl
pusha
pop
mov
hlt
lahf
ljmp
adc
fisubrl
ret
insb
mov
add
lahf
iret
lds
mov
js
test
and
cltd
jbe
and
aas
xor
adc
xchg
jb
dec
lds
mov
nop
in
inc
mov
mov
lahf
adc
mov
lea
push
inc
pop
into
mov
push
int
stos
add
push
cmp
jae
jg
sbb
cmpsl
cmp
movsb
mov
aad
mov
jno
lds
and
push
mov
cltd
enter
jno
xor
call
lret
and
push
jp
cmp
cld
and
push
loope
out
sbb
adc
pop
arpl
jl
xchg
ja
repnz
mov
vmovaps
ret
andb
jmp
or
xchg
jp
mov
cmpsb
fstl
lret
and
pop
cmp
mov
dec
cltd
aad
xchg
cmp
movsl
add
xchg
push
jae
xor
xor
clc
icebp
push
ror
sbb
xchg
fmuls
loopne
fdivrp
scas
mov
sbb
inc
fimull
jne
mov
xchg
insl
sbb
movsl
lahf
jns
jmp
daa
push
jb
inc
sbb
cltd
push
jecxz
ds
cltd
enter
mov
cmp
and
lock
sub
mov
fisttpll
ret
sar
or
fcomps
adc
cmp
mov
inc
or
inc
pushf
leave
fldcw
sbb
mov
xchg
fstl
scas
mov
mov
cmp
or
ss
fistps
gs
pop
fmull
pop
daa
ror
mov
sbb
pop
scas
adc
add
mov
aam
push
mov
mov
cmp
mov
nop
sbb
mov
mov
test
les
adc
ret
rcl
jo
cmp
and
xchg
test
inc
js
arpl
mov
xchg
and
cli
dec
dec
addr16
xor
out
or
gs
dec
sahf
and
or
scas
icebp
incl
nop
mov
mov
aam
adc
lods
sbb
mov
jp
pop
jle
rcrl
sbbl
mov
scas
dec
xor
data16
sub
imul
mov
jge
std
cmc
xchg
sub
jb
sub
jl
fsubrs
stos
pop
push
mov
cmp
hlt
into
call
pop
add
or
outsl
push
test
ljmp
pop
mov
sbb
or
bnd
test
fiadds
std
cmp
lock
inc
or
call
mov
jne
sti
xor
scas
hlt
fcomip
mov
xchg
lds
int
pop
push
lret
cmc
cmp
xor
mov
out
add
add
outsl
adcb
jns
dec
adc
outsl
add
mov
pusha
shll
adc
or
out
jno
pop
inc
push
in
bound
pop
lret
push
cltd
js
stc
mov
loop
cli
pop
push
mov
xchg
fcmovnu
xor
lret
mov
arpl
shl
ja
cmc
pushf
cld
rorl
cmp
dec
int3
gs
fs
and
insb
or
pop
mov
jmp
add
mov
sbb
rorb
adc
outsl
ffree
fdivp
add
xchg
popa
sbbb
pushf
dec
out
inc
push
mov
addr16
jno
dec
mov
ficomps
mov
dec
ret
jl
mov
cmp
jmp
dec
fisttpll
push
dec
test
bound
sbb
mov
mov
dec
scas
or
push
daa
push
inc
inc
mov
cmp
jns
iret
imul
mov
xchg
cs
mov
jb
fsubs
sub
cmpsb
mov
cmp
js
sub
subb
dec
mov
je
sub
or
xlat
inc
shrl
pop
int3
cmp
sahf
push
sahf
pop
jae
cmp
addr16
pop
test
ds
jmp
push
stc
arpl
js
sbb
xchg
lds
idivl
nop
and
pop
and
cli
jecxz
xchg
dec
mov
into
jae
inc
fs
mov
sti
mov
test
and
out
out
sub
sbbb
or
in
ds
jl
sub
cli
mov
or
dec
push
int
leave
xchg
jge
test
xchg
adc
cmp
leave
cmc
shlb
mov
jno
flds
lds
dec
add
popf
pop
xchg
popf
leave
leave
inc
push
ret
jmp
rcl
ss
sbb
push
sarl
lods
rcll
sbb
cmp
nop
dec
pop
sbb
xchg
and
aam
pop
shr
mov
aas
jg
in
fisubs
inc
rol
jg
vpexpandw
push
bound
daa
insb
cli
outsl
mov
xchg
nop
vminpd
xchg
mov
mov
or
sbb
les
and
pusha
clc
in
add
in
add
mov
jo
std
jns
sub
add
pop
sub
add
dec
ss
data16
addb
int
pop
call
add
mov
push
or
jns
push
imul
adc
jns
je
pop
cs
cmpsb
sbb
jl
add
loopne
loopne
or
sub
dec
jns
cmp
in
cmc
ret
ljmp
and
mov
fwait
dec
into
popa
jmp
and
lret
lret
or
popf
mov
aaa
mov
adcb
or
push
add
adc
lock
dec
sbb
or
xchg
imul
sbb
inc
add
jle
das
mov
mov
and
mov
adc
add
idivl
and
xchg
sbb
insl
pop
test
ja
or
mov
add
fisubl
shll
xor
das
ds
insb
rcll
jmp
mov
inc
jae
fwait
xor
dec
daa
inc
mov
and
xor
pop
jbe
testl
cmc
pop
dec
add
out
mov
lret
and
clc
xchg
push
cwtl
lock
mov
mov
add
xor
sbb
pop
jmp
negb
icebp
nop
xor
out
outsl
imul
lock
imul
mov
xchg
aaa
or
dec
out
outsb
pushf
ds
lods
andb
mov
push
mov
test
push
mov
sub
test
insb
fsubrs
mov
testb
cs
fucomp
push
adc
popa
test
adc
mov
jg
inc
and
fdivr
andl
jp
fisubs
bound
in
pop
pop
xor
pop
mov
gs
scas
test
inc
mov
orl
push
enter
mov
jmp
mov
mov
movsl
add
lds
into
add
int
lret
sub
fs
push
mov
xor
fldenv
bound
mov
pop
fwait
lods
adc
pop
out
cmp
push
xor
mov
out
fcmovnbe
stos
insb
popa
mov
fs
mov
sar
call
mov
jns
insl
fsub
dec
cmp
sub
cmp
cmpsl
stos
cs
stos
call
mov
lock
fmull
adc
jne
mov
sub
pop
ja
out
lea
push
mov
pushw
daa
sub
shll
jmp
inc
add
pop
test
sub
or
jge
xchg
jle
mov
jle
cmp
test
jnp
jge
test
adc
rclb
daa
or
fcoml
mov
xlat
out
aam
push
cli
sbb
push
mov
insl
loopne
lods
shll
pop
cmp
add
rcll
neg
pop
loop
shl
dec
ficoml
stc
mov
xchg
loopne
mov
sub
sbb
and
aad
das
js
push
xor
in
mov
xchg
cs
and
cmp
mov
ljmp
xor
mov
pop
dec
loopne
mov
fiaddl
lods
and
testl
sbb
sar
mov
or
ja
mov
xchg
jns
xchg
pop
dec
out
je
mov
jbe
pop
mov
fs
push
loop
mov
ljmp
sbb
fimuls
cld
mov
int
mov
enter
cmp
js
js
dec
mov
stos
movsb
arpl
jl
xor
fsts
mov
sub
enter
inc
inc
mov
add
lret
pop
sahf
jnp
jle
addr16
aas
imul
or
add
cmp
enter
pop
sbb
sarl
pop
inc
jns
xor
loopne
mov
iret
dec
imul
or
push
add
adc
or
dec
sbbb
sbb
push
push
sub
repnz
and
push
out
popa
inc
cmp
and
adc
or
jae
dec
data16
dec
lea
stos
lods
push
es
fisttps
rcll
sti
or
in
mov
pop
mov
mov
shll
insb
out
lods
dec
lahf
dec
insl
or
rolb
ljmp
test
push
vcomiss
inc
ds
gs
sti
xor
es
out
pop
jae
mov
rorl
inc
jbe
mov
mov
or
jne
es
gs
pop
out
dec
push
and
add
jl
scas
mov
sub
imul
orb
pop
and
fnclex
xor
addl
push
into
jecxz
jb
xchg
sbb
mov
jge
lcall
sbb
cmp
aas
sarl
pusha
inc
mov
cld
test
xchg
iret
jp
sub
cmp
jmp
iret
and
mov
inc
stos
pop
dec
add
xor
sbb
stos
xchg
push
mov
or
xchg
rorb
jbe
inc
push
bound
sti
imul
jns
dec
loopne
loop
jno
add
xor
loope
stos
or
mov
xor
or
add
inc
cmp
pop
rcrb
mul
and
mov
push
jmp
dec
in
mov
xor
push
sub
adc
jb
andl
xchg
out
xchg
sbb
pop
push
or
and
mov
jle
addr16
int3
pop
frstor
push
lret
stos
clc
ror
je
dec
fldl
adc
inc
adc
sub
push
pop
dec
xorl
xchg
jns
xchg
jno
cmp
pop
lock
sahf
scas
std
rolb
pusha
out
mov
test
sub
mov
jmp
loop
les
push
jmp
inc
xor
mov
or
leave
dec
daa
int3
dec
pusha
mov
cmc
sub
push
jae
ret
fsubr
mov
or
xlat
sub
repnz
mov
inc
lret
mov
nop
sbb
and
lock
sub
xchg
fstpt
cs
mov
stos
sbb
cmp
or
int
push
or
inc
dec
fwait
inc
push
jae
add
fisttpl
les
push
xor
xchg
xor
jb
std
and
cmp
out
pop
adc
adc
xor
mov
rclb
insb
add
icebp
xor
push
jbe
test
xchg
fsubrs
loopne
idivb
aad
or
cwtl
call
or
add
stc
test
push
sub
dec
pushf
mov
int3
jp
xchg
cmp
stc
push
and
scas
jmp
jp
xchg
xchg
jne
mov
scas
arpl
ret
movsb
pushf
fdivl
xor
add
push
xchg
adc
mov
cmp
stos
movsb
leave
test
add
movsb
jl
cwtl
or
cltd
lret
je
pop
mov
and
leave
dec
sub
int3
add
cld
inc
loopne
arpl
mov
lods
jle
data16
xor
cmp
imul
loope
popa
stos
aad
loop
lret
ds
jl
rcr
sub
in
fildl
xor
jle
jb
js
arpl
push
in
mov
stos
xchg
shl
add
out
mov
pop
push
in
inc
dec
movsb
test
repz
mov
imul
push
es
mov
lock
xchg
mov
sub
insb
adc
xchg
fnsave
outsl
inc
mov
es
mov
dec
mov
jmp
lcall
lahf
icebp
xchg
jge
test
shlb
add
leave
mov
pop
repnz
jge
push
inc
aam
or
xor
mov
enter
or
outsb
push
movb
sub
popf
fwait
jb
int3
cmp
jecxz
mov
rcrb
mov
repz
cmp
outsl
jle
cmpl
stos
js
cmp
mov
pop
repnz
cmpsb
ja
mov
push
aaa
ret
std
xchg
aaa
es
jl
popa
shll
popa
mov
int3
out
dec
les
out
cmp
test
push
out
andl
or
jmp
je
ret
push
aaa
shll
dec
sub
inc
das
inc
stos
pop
not
jle
leave
pushf
fs
or
or
inc
shlb
lods
mov
mov
sub
sub
nop
adc
roll
mov
jle
cmp
mov
inc
jno
and
daa
and
dec
and
nop
ret
in
ds
lcall
push
test
les
pop
rorb
loopne
adc
adc
bound
xchg
cmp
out
addr16
cmp
adc
pop
pushf
lahf
cli
jns
cwtl
dec
fidivrs
fisubs
pushf
and
adc
jno
and
xchg
pop
mov
xchg
xchg
mov
add
mov
and
cld
mov
adc
in
leave
fcompl
xor
lock
dec
pop
lea
cmpb
in
mov
add
rclb
mov
sbb
das
out
aad
pop
mov
dec
aas
fwait
jge
repnz
pop
out
ljmp
inc
addr16
cltd
mov
aam
mov
adc
adc
shll
sub
and
pop
mov
out
in
mov
adc
int
andl
inc
les
js
andnps
sahf
dec
dec
fsubrl
je
xchg
dec
jmp
dec
fdiv
cmp
je
orb
lock
mov
lods
test
orb
cltd
and
mov
push
and
std
movb
fiadds
pop
das
pop
bound
outsb
push
jp
cmp
jae
repz
add
sbb
test
fisubrs
aam
cmc
mov
pop
or
and
leave
lcall
stc
and
loopne
push
inc
cmc
js
iret
mov
push
push
ljmp
push
fstpt
jbe
out
dec
fwait
lret
adc
mov
iret
mov
rcrl
out
mov
or
push
push
or
mov
loope
leave
jmp
cmp
mov
inc
mov
psllw
xor
inc
xrelease
loop
mov
push
sub
cmp
decl
cs
pop
push
js
pop
daa
xchg
ja
nop
movsl
adc
inc
sbb
push
mov
lock
inc
testl
add
inc
adc
sbb
xchg
adc
nop
mov
dec
inc
jno
mov
in
mov
xchg
or
jne
gs
and
fisttpll
push
or
mov
mov
fisttpll
and
pop
mov
pop
mov
arpl
int3
pop
dec
dec
sbb
inc
lods
loop
arpl
jns
cwtl
std
ret
jmp
and
sbb
dec
cmp
in
gs
pop
sub
cld
mov
mov
in
out
clc
ja
in
inc
enter
xor
jl
rclb
cltd
mov
or
add
push
gs
mov
jo
mov
test
adc
mov
enter
cmc
aas
daa
pop
pop
adc
ss
xchg
ljmp
xor
scas
push
fnstenv
sbb
cmp
mov
js
das
jle
call
jg
int
push
fwait
inc
mov
mov
ud0
pop
pop
xchg
ret
int
push
arpl
hlt
aaa
xor
kmovd
std
std
sub
into
cmp
iret
mov
dec
adc
movl
lea
pop
ljmp
js
mov
aaa
xor
and
addl
lret
jp
insb
loopne
call
pop
btcl
mov
addr16
mov
in
push
jmp
sbb
push
pmulhw
pushf
and
dec
ret
fadds
fisubrs
enter
xorl
cmp
repnz
nop
fcmovne
pushf
dec
addr16
and
stos
push
xlat
jge
jnp
shll
pop
inc
cmp
loopne
jne
int
rcll
push
out
icebp
cmp
mov
stc
inc
pop
or
pop
pop
push
mov
mov
cmpsb
push
ret
aaa
push
cmc
jp
mov
mov
inc
scas
push
or
rolb
cmp
xchg
xor
sbb
and
cmp
in
fwait
pop
or
test
cmc
push
fwait
inc
cmp
loope
or
imul
cwtl
xchg
mov
and
into
cmp
lret
sahf
dec
xor
nop
in
lods
sub
and
adc
jge
bnd
sbb
testb
sub
into
lahf
not
inc
cmpsb
rcr
mov
mov
xchg
outsb
xchg
push
lods
mov
mov
or
sbb
dec
test
dec
xchg
lret
mov
ja
jp
ljmpw
scas
enter
xchg
ret
fistpll
sarb
cwtl
sar
shll
out
lcall
lret
cmpsl
sbb
lods
ja
add
adc
sbb
mov
mov
cmpsb
adc
cmc
fstps
test
aad
notb
insl
pop
lea
jecxz
jne
mov
aas
popa
loopne
stos
mov
leave
lret
in
pop
lods
xlat
les
out
pop
mov
sbb
outsb
push
dec
popf
bound
jno
jmp
mov
push
push
in
jg
insl
ds
mov
push
jmp
mov
xchg
mov
jl
or
ljmp
or
enter
clc
outsb
fs
cmp
in
and
jg
mov
jecxz
loope
mov
icebp
jecxz
imul
push
dec
fildl
mov
mov
dec
loopne
fdivrl
aas
dec
stos
inc
pop
sbb
jne
mov
and
mov
push
call
xor
jns
ret
popf
xor
jo
jecxz
leave
sub
pop
mov
repnz
cwtl
daa
pop
jge
outsb
cmp
mov
loop
lods
pop
scas
lcall
stos
dec
scas
mov
inc
mov
sbb
inc
sahf
inc
shl
aad
push
rorl
pop
lea
inc
das
dec
mul
nop
pop
dec
fistps
jg
and
xchg
mov
lock
xchg
aad
push
cmp
mov
es
dec
orl
icebp
das
hlt
rcll
aam
iret
cmp
jl
rorl
out
mov
and
jl
cmp
iret
int3
je
shlb
les
xchg
mov
pop
mov
adc
push
ret
jbe
stos
mov
popf
leave
mov
sbb
sbb
fimuls
popf
cmpb
jmp
cmp
push
loope
nop
adc
xchg
jnp
lea
pop
call
push
mov
lahf
jecxz
popa
fsubs
xor
push
popa
mov
or
or
jmp
loop
pushf
into
test
test
push
fnstenv
mov
push
jl
push
push
sbb
xor
push
mov
jne
dec
sub
aaa
mov
adc
loop
sahf
add
mov
push
mov
jb
in
sarl
out
mov
xor
sbb
out
cmpsb
xor
repnz
ret
xchg
xor
pusha
xor
outsl
fwait
ja
add
and
in
cmp
cmp
mov
rcrl
nop
and
push
cmp
fcmovne
into
inc
fcompl
mov
fisttpll
pop
rcll
dec
movsb
bnd
data16
xlat
sub
cli
stos
iret
mov
pop
dec
mov
jl
imulb
scas
fldenv
je
fidivs
inc
xchg
jbe
pop
testb
loop
lahf
xor
rolb
or
sti
lcall
sub
jge
test
mov
adc
loope
add
rorb
cmp
sarb
subl
imul
mov
sbb
sub
jge
insl
ror
xchg
cwtl
mov
pop
or
dec
push
push
lea
leave
out
pop
jle
outsb
mov
pop
fnsave
loop
dec
xchg
mov
push
call
dec
dec
stc
or
in
sbb
out
push
clc
cmp
xlat
pop
imul
stos
cli
adc
and
jg
andb
push
in
jae
das
pop
mov
sub
lea
cs
sbb
popf
gs
and
imul
sub
popf
cwtl
or
stos
in
aam
cmpb
xchg
popa
jge
or
mov
sub
jl
es
cmc
js
clc
dec
ret
lods
ds
movsl
fsubrl
mov
scas
push
push
jns
mov
cmp
mov
pop
test
mov
push
jne
lret
jo
pminub
add
aam
xor
lahf
popa
mov
iret
mov
mov
xor
je
mov
je
rol
addr16
inc
mov
shlb
mov
and
fstl
xlat
out
jbe
jp
js
inc
xor
fmull
mov
inc
outsb
dec
xor
aam
test
dec
fwait
lea
out
jns
inc
test
mov
jns
cmp
sbb
cs
ret
cltd
out
mov
jns
xchg
ljmp
xchg
mov
outsb
aad
lcall
pop
mov
mov
jl
add
test
cwtl
shll
push
stos
aad
popa
push
enter
rcr
int3
mov
mov
repz
fstl
add
int3
mov
jl
rorl
sarb
add
pop
mov
pop
sub
sbb
scas
das
shll
testb
lret
pop
bound
iret
or
dec
mov
lret
ds
lcall
out
adc
idiv
adc
fsts
ds
pop
adc
cmp
rcll
test
loopne
mov
lea
stos
imul
repz
sbb
cs
cmp
idivl
int3
dec
jo
xchg
jae
jns
xor
pop
xchg
xlat
sarb
stos
pop
mov
jl
mov
fldcw
or
sbb
sub
incb
movsl
dec
fcomps
pop
inc
hlt
insl
adc
lods
lahf
rcl
jno
xlat
add
dec
sub
int3
mov
popa
sbb
rclb
ret
inc
lods
push
outsb
xchg
push
pushl
fsubrl
push
jl
insl
xchg
lahf
outsl
cs
js
dec
pusha
ss
pop
test
pop
sahf
movsb
pop
sahf
cmp
mov
mov
or
enter
jo
test
cmp
inc
mov
popa
dec
fidivrs
arpl
sub
lret
pop
mov
aad
sbb
jo
cmp
popa
xor
cs
xor
pop
mov
jge
fucompp
daa
jg
push
push
and
lcall
dec
sbb
adc
scas
mov
fcompl
pop
mov
pop
or
loopne
push
cmpsl
ror
psrld
mov
cmp
fcompl
mulb
dec
or
mov
jmp
pop
sbb
lcall
pop
shlb
mov
fisubs
add
pop
mov
add
pop
push
sub
icebp
daa
clc
push
aam
xchg
sarb
mov
jecxz
xchg
sbb
mov
aas
ja
or
jecxz
mov
mov
or
xorl
std
sub
dec
and
inc
mov
mov
popa
mov
sbb
std
sbb
sbb
mov
push
cmp
aas
xchg
stos
pop
mov
cmp
cmpb
stos
fwait
incl
pop
push
into
out
in
out
add
lahf
in
enter
xchg
jb
inc
popa
cmc
mov
jb
int
lahf
ja
in
add
data16
movsb
cmp
js
into
adc
or
lret
push
outsl
mov
mov
das
in
push
int
add
sbb
xchg
ds
pop
fs
sub
jne
jl
mov
jns
fmuls
ljmp
repz
cmpsl
ds
lcall
sbb
testb
or
test
add
jnp
es
dec
jnp,pn
adc
pop
les
stc
rcll
inc
movsl
cmpsl
mov
sub
std
dec
clc
arpl
in
stc
popa
cmpsb
lret
adc
aam
ss
nop
pop
das
push
sbb
push
imul
xchg
movsl
test
cmc
lods
cmp
andb
xchg
push
mov
repz
and
mov
mov
pop
cmp
pop
shlb
scas
mov
out
cmp
jno
add
xor
adc
cltd
fnstcw
adc
jo
lods
and
cli
pop
jp
xchg
subl
test
sub
test
jno
loopne
push
jge
cmp
sbb
mov
in
cwtl
outsb
push
xchg
and
or
mov
rcr
out
adc
pop
add
or
je
mov
data16
pushf
mov
inc
test
shlb
popf
or
lret
ss
or
mov
xchg
xor
mov
and
dec
xchg
mov
data16
pop
loope
dec
xlat
inc
fwait
daa
stos
adc
push
mov
jecxz
movsl
in
cld
lret
mov
pop
lock
pushl
int
mov
cmpsl
lcall
nop
je
add
xchg
fwait
ja
in
push
adc
jbe
dec
jp
fucomi
enter
inc
pop
les
pop
icebp
in
movb
jae
or
fld
pop
in
dec
xchg
sub
bndstx
iret
cmp
sbb
repnz
push
out
orb
cmp
cmp
scas
mov
mov
pop
xchg
dec
or
sub
push
fsubl
scas
loop
add
fisubs
rcl
lock
adc
push
pop
pop
inc
fidivl
mov
testl
cmp
cli
lea
dec
lcall
test
pop
adc
sbb
inc
push
and
pop
adc
dec
imul
mov
push
dec
cmpsl
rorb
sbb
std
jg
mov
sub
xchg
ret
xlat
test
popl
pop
pop
push
cmpsl
ret
lret
mov
lods
xchg
cmpsb
stc
inc
fwait
ret
sarl
jnp
rclb
sbb
push
call
pushf
xchg
push
or
int
pop
and
pop
mov
pop
jmp
leave
push
and
add
lret
inc
ds
dec
push
movl
mov
push
add
jecxz
jg
ds
mov
mov
mov
xor
jns
out
mov
xchg
pop
sub
mov
jle
test
adc
lcall
and
das
mov
outsl
dec
rorb
mov
xchg
sahf
in
jge
mov
pop
popf
xchg
jo
out
sbb
aas
sub
inc
addr16
sbb
jmp
add
les
js
int3
or
add
xlat
and
addl
mov
jo
mov
add
dec
pslld
mov
das
sbb
sub
fadd
lock
stc
or
cmc
outsl
mov
fstpl
subb
dec
add
mov
arpl
cwtl
cmpsb
stos
fistps
jle
dec
repz
sbb
push
daa
inc
in
cld
adc
or
add
scas
or
jg
push
std
in
aad
adc
icebp
inc
push
xor
scas
es
pop
inc
loop
pop
sbb
jg
ret
pusha
or
or
je
sarb
je
cwtl
into
xchg
aaa
popf
insb
dec
xor
sub
cli
jnp
jge
mov
push
imul
and
mov
pop
or
sbb
dec
dec
sti
movsb
pushw
stos
loopne
and
or
stos
fisubs
inc
or
popa
jp
pop
or
sbb
js
hlt
jmp
sub
cmp
loopne
dec
inc
adc
scas
push
and
icebp
shlb
xchg
or
adc
jmp
gs
mov
shrl
fcmove
and
mov
or
cmp
movsl
sahf
sub
ja
mov
xorl
fimull
adc
xchg
rcrb
movsb
or
dec
xchg
jne
mov
cmp
add
insb
sub
in
pushf
aad
loope
mov
cmp
pushf
cmp
loope
jmp
jg
cs
dec
bound
loopne
into
sbb
jae
call
js
sub
cmp
jns
pop
jl
aas
fbstp
adc
pop
cld
call
data16
hlt
sub
push
lret
out
cli
fadds
lods
mov
loopne
sub
adc
jl
aas
inc
loop
inc
aaa
divl
jmp
ja
pop
mov
sbb
sub
cmp
xor
or
dec
sub
mov
faddl
inc
mov
sub
movsb
xor
and
dec
leave
out
sahf
or
pop
inc
fdivrl
add
push
shl
inc
push
enter
in
fisubrs
fs
cmc
sbb
loope
xor
cmpsb
xor
cltd
adc
imul
pop
cmp
shlb
les
and
lock
and
aaa
add
sbb
mov
jnp
int3
hlt
bound
in
push
popf
mov
imul
xchg
jno
or
mov
repz
jecxz
les
mov
or
sbb
aad
xor
out
add
and
xchg
in
push
sub
subl
rorl
stos
lock
test
or
sbb
jmp
out
mov
popf
lret
sub
or
or
xor
scas
das
stos
pushw
movsb
movsb
cs
push
mull
repz
orl
adcb
sub
rolb
jle
insl
sbb
push
movsb
add
lahf
push
icebp
out
sbb
fwait
and
pop
dec
and
repnz
xchg
jge
jl
pop
sub
adc
fsubr
jmp
fcmovnb
pop
bound
adc
rol
nop
test
xchg
jmp
or
xor
imul
sahf
pop
je
jmp
sbb
push
scas
pop
inc
adc
test
test
and
enter
cltd
mov
js
cmp
lock
leave
jns
loopne
cld
outsl
loopne
pop
or
push
stos
xor
mov
lea
mov
adc
add
xor
insl
fcom
or
push
cltd
xlat
push
xorl
pusha
jge
adc
mov
mov
jmp
sbb
call
mov
out
mov
xchg
push
mov
pusha
faddp
mov
push
pusha
cmp
xchg
lcall
lahf
dec
mov
sub
fwait
mov
dec
add
movsb
enter
push
sbb
movsb
mov
sbb
cmpsl
outsl
lods
and
loopne
lock
outsl
filds
sub
cmp
decb
jle
xchg
adc
xchg
cmp
xlat
mov
xor
push
loope
in
xchg
pop
ficoms
push
pop
lcall
cmp
xorl
cmpsb
mov
adc
stos
jle
mov
pop
xchg
leave
shr
sahf
xchg
out
inc
int3
xchg
leave
loop
loope
arpl
inc
cmp
out
cwtl
push
sbb
xlat
or
xchg
aaa
mov
dec
scas
and
lcall
rclw
movsb
mov
movsl
inc
mov
or
call
adc
fcomip
cmp
repz
fs
and
lods
andl
inc
mov
xor
repz
jne
in
xor
or
aad
push
jno
mov
jo
push
mov
mov
add
dec
lcall
push
inc
and
mulb
loop
daa
adc
cmp
add
mov
cmp
fisubl
cmpsb
mov
and
pushf
pop
adc
stos
subl
popf
jecxz
inc
es
mov
lds
fisubrl
mov
frstor
outsb
sbbl
je
xchg
inc
mov
sbb
push
daa
ds
stos
mov
push
scas
dec
jae
inc
lods
jmp
push
and
inc
push
sub
xlat
out
nop
mov
das
adcl
imul
out
jnp
jnp
xchg
es
jge
sub
push
lods
jmp
xchg
pop
ljmp
dec
mov
xchg
loope
jnp
jne
outsl
ret
fwait
xchg
adc
xor
icebp
pop
push
mov
fisubl
popa
scas
and
movsb
cmc
xchg
push
outsb
stos
pop
inc
dec
sbb
jnp
adc
add
rorb
adc
adc
push
movsb
cmc
out
les
andb
jb
insb
adc
ret
jne
in
dec
push
cmp
xor
xchg
dec
imul
fdivrs
sub
mov
dec
xor
in
mov
hlt
jecxz
iret
push
sub
data16
dec
inc
repnz
andb
outsb
push
int
scas
mov
pop
iret
pop
lcall
out
lods
addr16
sub
jb
scas
loop
dec
pushf
lcall
pop
into
push
cmp
jno
lds
and
pop
fistpll
lcall
sbb
or
imul
lock
rol
xor
bound
sub
test
adc
adc
inc
mov
rcrl
cmpb
dec
add
add
pop
pop
es
dec
pop
lahf
jne
ss
jne
icebp
enter
xchg
xchg
ds
mov
and
cmpsb
jb
add
sbb
sbb
je
jbe
or
stos
inc
jmp
test
mov
out
mov
out
les
mov
xchg
xchg
mov
outsl
sbb
sbb
mov
mov
iret
mov
mov
jp
pop
pop
jae
adc
clc
dec
or
mov
test
dec
mov
sarb
add
xor
insb
popa
jecxz
mov
stc
adcl
add
pop
mov
pop
sahf
adc
jg
daa
iret
sti
adc
dec
add
xor
nop
add
xor
dec
inc
outsb
mov
adc
jnp
push
lret
push
xor
shl
addr16
add
mov
push
push
mov
fsubr
aam
sbb
lods
pop
loopne
mov
test
fsub
popa
aad
ficompl
push
call
push
mov
cld
imul
mov
jns
icebp
xor
stos
inc
lods
rclb
fwait
mov
cmp
cmp
imul
jbe
push
push
add
cmp
adc
pop
or
jb
aaa
push
lret
adc
rcll
inc
sub
std
push
and
jnp
gs
aas
sarl
iret
outsb
pop
enter
xchg
fbld
xor
cmp
pop
mov
mov
inc
pop
inc
cmp
push
xchg
in
push
lahf
mov
cs
or
pop
in
andb
xchg
gs
add
movsb
mov
fwait
es
sbb
sbb
scas
in
faddl
cmp
fstps
ja
int
test
mov
mov
mov
lret
cmpsb
nop
sbb
dec
push
inc
xor
xchg
nop
aas
je
ficompl
add
int
push
rclb
orb
mov
mov
add
movsl
add
push
test
aam
shll
leave
cmpsb
gs
mov
and
aad
and
cmpb
adc
stc
aas
fs
cmp
aam
inc
cmp
xchg
std
fcomps
aaa
adc
bound
shll
pop
pop
js
dec
push
pop
dec
sti
sub
or
mov
addr16
insb
push
arpl
mov
sbb
inc
mov
cwtl
jb
xchg
test
movsl
sar
js
stc
daa
into
movsl
aam
cwtl
push
fwait
icebp
jae
dec
cmpsl
mov
in
lock
sbb
or
xor
or
idivb
mov
aaa
mov
cwtl
pusha
stos
jns
mov
outsb
js
movl
mov
sub
leave
fcoms
mov
cmpsl
sub
in
out
mov
pop
mov
mov
fucom
push
adc
ret
imul
cmc
inc
mov
adc
push
dec
cmp
inc
popf
mov
call
outsb
sbb
mov
mov
pushf
test
int
movsb
xchg
adc
rcrb
ja
or
lret
cld
in
xor
and
icebp
and
pop
ficomps
xchg
mov
mov
imul
mov
pop
inc
or
loopne
mov
cmpsb
lods
outsl
push
into
mov
pop
dec
push
cmp
add
fdivrs
mov
sti
fcoms
dec
sub
les
lcall
test
ret
pop
fyl2x
add
jae
rcrb
movsb
insb
je
repnz
adcb
push
adc
mov
jmp
stc
cmp
xor
dec
mov
enter
dec
inc
cmp
mov
test
mov
dec
decb
sbb
xchg
xor
or
mov
push
ds
sub
int3
pop
in
out
pop
add
sub
dec
test
shlb
push
lcall
jo
int3
mov
push
pop
popa
icebp
cmp
mov
jns
xlat
scas
pushf
jp
outsb
mov
pop
repz
jo
xchg
dec
incl
lods
mov
fwait
cmpsl
cwtl
enter
test
dec
mov
lret
mov
push
push
pop
andb
fisubs
sub
aam
add
pop
push
cld
jae
sub
lret
mov
inc
mov
sbb
clc
pop
jb
jge
push
ds
mov
aas
dec
test
mov
xchg
iret
sbb
dec
jne
push
addl
dec
stos
pop
inc
cltd
push
repnz
xchg
mov
fisubrs
jge
lret
mov
add
in
push
nop
and
repnz
cmp
cmc
jno,pn
xchg
mov
xor
jmp
arpl
test
andb
sti
clc
icebp
cmp
cltd
fs
jbe
gs
repnz
int
bound
or
xchg
ja
inc
push
insl
push
orb
rorl
cmp
movsb
xor
hlt
ss
xchg
push
sub
ja
aam
push
fimull
and
xor
es
fidivrs
insl
ret
aam
stc
imul
or
fstl
mov
pop
inc
sete
daa
push
dec
cmp
pop
test
aas
jno
enter
sti
add
fldenv
inc
movsl
mov
les
int3
loopne
mov
pop
int3
or
mov
sub
rcrb
mov
cmpsl
mov
es
lods
rcl
loop
xor
cwtl
sbb
pop
inc
pop
std
sbb
mov
call
lcall
pushf
shlb
fisttps
and
lret
pop
pop
sub
mov
fst
jle
fdivrs
into
lods
jle
and
sbb
and
cmp
cld
test
xchg
cmpsl
int3
call
adcb
cs
sahf
addr16
daa
xchg
scas
aad
icebp
stos
stc
in
mov
loopne
mov
mov
or
jbe
inc
dec
cmp
add
repz
inc
fnstenv
popa
lret
rcl
ds
fwait
pinsrw
ret
mov
out
push
add
mov
mov
xchg
lds
dec
lods
adc
ret
leave
je
mov
faddl
or
enter
mov
sbb
mov
sarl
adc
add
push
int
negl
cmp
nop
push
jne
rcll
pop
jle
add
pop
and
push
cli
xchg
add
ss
div
adc
cmpsl
xchg
out
or
cmp
outsl
and
inc
or
rclb
int3
add
cmp
shr
sahf
jp
pushf
xchg
ret
xor
ss
sbb
mov
in
add
add
pop
std
clc
sub
testl
mov
push
shlb
or
lds
lods
mov
lds
loopne
std
shrl
jg
dec
xchg
mov
in
insb
xchg
or
mov
xor
movsb
xchg
inc
dec
and
ja
int3
int3
jno
cmc
lea
outsb
jns
xor
jne
adc
insb
push
inc
in
pop
repz
sbb
mov
subb
xor
sbb
popa
xor
lock
int3
mov
scas
cmc
cltd
popa
jbe
fisubrs
mov
mov
ret
lahf
mov
inc
sbb
jp
fadd
add
sub
in
sbb
roll
cmp
sbb
icebp
jne
inc
imul
sbb
xchg
arpl
adc
adc
nop
lock
sbb
lret
jle
jae
pop
mov
mov
aas
fwait
imul
dec
bound
mulb
lods
test
xor
out
add
sbb
mov
adc
sub
cmp
or
cmp
ja
adc
adc
loopne
jl
insl
loope
test
jo
js
sti
mov
cld
jge
pusha
jno
jo
addr16
lahf
xor
jp
mov
jecxz
test
cmp
dec
pop
jne
imul
push
mov
fwait
repnz
jne
pop
adcb
or
enter
imul
jbe
ljmp
adc
mov
mov
aaa
jo
cmp
adc
ficoms
add
out
repnz
imul
dec
sub
pop
mov
aad
xor
xorl
or
and
xchg
mov
gs
insb
out
xor
or
ror
and
frstor
xchg
add
cmpsb
les
jns
cmp
inc
and
and
cltd
outsb
xchg
stc
fildl
cld
aas
adcl
aad
dec
ds
sarl
sub
jmp
xchg
push
push
xlat
dec
into
lcall
loope
dec
mov
sarb
out
es
cmpsl
andb
mov
in
in
ss
sbb
bnd
pop
xchg
mov
mov
pop
adc
mov
call
lcall
jg
clc
cmp
shr
push
bound
adc
daa
jae
push
and
test
jns
scas
mov
or
xor
or
mov
add
cwtl
or
pop
or
in
addb
subb
push
ret
cs
jno
xchg
std
xchg
aad
out
cld
add
scas
in
push
adc
test
pop
or
xchg
int3
push
aad
aam
push
in
mov
lret
orl
sub
xor
add
and
fildl
fldl
out
cmp
add
pop
cmp
cld
and
xor
mov
pop
aaa
cmp
mov
jge
insl
in
into
dec
rorl
and
push
push
js
mov
xlat
and
arpl
mov
cmp
cmp
dec
int
mov
mov
rcrl
dec
xor
jb
adc
jbe
sti
gs
inc
cmp
dec
jb
dec
mov
pop
std
mov
adc
testl
push
adc
sti
ljmp
repnz
inc
js
rcll
sbb
mov
jnp
dec
stos
and
and
lret
mov
xchg
xchg
push
mov
mov
mov
jbe
in
cwtl
sbb
popf
cmp
fucom
inc
fsubs
xlat
and
pop
out
push
call
mov
lea
mov
sub
sbb
inc
adc
mov
adc
pop
test
mov
push
out
ss
fldl
lret
das
int3
and
stos
hlt
jge
dec
movsl
add
iret
mov
popf
add
xchg
push
inc
mov
sub
shlb
mov
lret
popa
in
pop
or
rcrb
fdivs
mov
mov
fdivl
pusha
pop
and
ds
out
cltd
notb
movsb
rol
fistpll
dec
stos
dec
or
or
jge
sarl
mov
aas
adc
add
dec
jl
pusha
movsl
mov
jb
loope
mov
int
xchg
lea
adcl
int3
lods
inc
fiadds
mov
test
jae
movl
and
mov
sbb
dec
xchg
loope
or
jmp
and
je
fcoms
and
cmpsb
mov
lock
xor
xchg
ljmp
pop
xlat
idivb
mov
mov
sub
outsb
jae
adc
push
cmp
push
sbb
dec
pop
inc
sbb
jg
out
jge
push
adc
jne
dec
mov
lock
push
adc
sahf
mov
xor
mov
in
int3
popf
fistpl
xchg
inc
sahf
push
add
xor
rcl
pusha
mov
das
pop
pop
mov
jmp
sbb
mov
cld
sub
and
mov
xor
int
mov
sahf
stos
lds
push
mov
testb
adc
daa
or
dec
adc
cmp
or
mov
sti
enter
fs
test
dec
out
and
jp
xor
movsl
jge
mov
filds
inc
fcoml
pop
aaa
add
jge
add
mov
xchg
mov
xchg
mov
or
in
fstpl
jp
in
sub
xchg
fisttps
dec
icebp
repz
xor
xor
ss
sub
jno
push
push
leave
cmpsb
lret
fadd
push
or
clc
lods
lds
inc
insb
mov
mov
outsl
xchg
xchg
push
ja
jle
mov
pop
lcall
lret
xchg
test
xchg
inc
pushf
bsf
pop
test
push
clc
adc
fldcw
mov
xor
mov
movsl
or
inc
add
pop
jmp
jmp
and
jo
out
xor
daa
rorb
insb
push
jmp
cmp
push
rcl
sub
scas
movsl
and
outsl
aam
mov
mov
sbb
idivl
add
insl
sbb
jge
cltd
cmpsl
je
mov
adc
enter
pop
cmp
jmp
lock
adc
cmpsl
fists
adc
sub
pop
or
sbb
jo
cltd
ret
inc
mov
scas
push
push
add
mov
frstor
sbb
in
into
mov
dec
repnz
mov
add
repz
sub
xchg
scas
mov
rcl
fiadds
std
mov
pop
xchg
sbb
cwtl
xchg
fildll
dec
cmpsb
lahf
popa
outsl
mov
jg
dec
push
mov
in
rcl
or
xchg
add
cwtl
push
iret
cltd
repnz
or
testl
je
in
mov
or
out
cli
jmp
rolb
sahf
test
aaa
jb
out
repnz
cmp
dec
adc
sbb
cli
adc
pop
pop
adc
ret
jae
xor
call
jmp
add
out
jo
xchg
movsl
iret
xor
mov
or
mov
mov
mov
xchg
sub
pop
push
stos
dec
xchg
adc
push
adc
push
mov
lds
mov
cs
call
add
mov
test
xchg
sbb
cli
pop
fsubs
loope
clc
inc
ja
test
jge
fstpt
mov
jbe
lahf
cmp
fistpll
xor
subb
sbb
outsb
push
adc
aam
cmpsb
out
xchg
sti
xorl
outsb
rcll
mov
call
mull
pop
push
xor
movsl
mov
int3
pop
aas
mov
jp
in
jle
out
popa
aad
cmp
out
int3
push
push
sub
adc
shrb
outsl
lods
mov
add
insl
add
cmc
in
ja
push
in
pop
loop
into
pusha
out
push
aad
sbb
lret
xchg
cmp
sub
decb
jg
cli
ljmp
sti
mov
lea
cmpsl
and
pop
push
mov
push
and
inc
or
adc
adc
int
in
jbe
mov
pop
mov
inc
aad
push
test
dec
lods
mov
push
or
dec
cmp
add
cmp
fs
or
cmp
adc
inc
push
in
sub
test
jae
xchg
xor
sbb
dec
jns
cmpsl
lods
rclb
sub
xchg
push
inc
sbb
clc
ljmp
sbb
arpl
lods
cmp
and
lret
dec
sbb
inc
shlb
push
dec
outsl
push
addb
sub
adc
adc
xchg
aam
loop
mov
jle
ret
sti
dec
mov
test
xchg
jmp
in
mov
add
sbb
mov
icebp
and
mull
fcmovnu
adc
loop
xchg
push
add
clc
cli
or
cwtl
cmpb
rolb
iret
fists
mov
xchg
push
aad
push
js
mov
push
les
stos
std
mov
int3
add
add
mov
lcall
mov
sub
sbb
xchg
fldl
cmp
fsubrp
mov
inc
sarl
aaa
sub
adc
jl
inc
add
scas
mov
dec
xchg
dec
pushf
cmp
dec
cli
mov
outsl
or
mov
nopl
xchg
test
daa
xchg
mov
xor
arpl
out
imul
pop
nop
mov
jns
out
scas
jo
push
sub
mov
addb
push
ja
cmp
or
sbb
sbb
cmpsl
lods
push
scas
jl
adc
xor
xchg
sub
and
imul
test
sub
mov
push
mov
test
and
shr
mov
add
dec
push
inc
mov
or
jle
xlat
adc
imul
gs
jge
mov
cli
fsubs
mov
xchg
fsubl
push
pop
dec
cwtl
movsl
int3
arpl
mov
pop
pop
xchg
cmc
fcompl
test
dec
sbb
dec
mov
add
mov
sbb
mov
stos
mov
mov
lahf
sub
test
inc
movsb
fdivs
xchg
cmpl
mov
cld
inc
mov
out
cmp
xchg
lods
stc
add
jnp
movl
ljmp
in
lahf
xor
cmp
mov
mov
add
sbb
std
fidivl
popa
jbe
int3
xor
mov
adc
insl
push
push
icebp
add
inc
lods
dec
push
mov
fidivrs
mov
or
les
xor
xorl
mov
arpl
cs
push
fsubp
ficomps
push
mov
sub
and
shlb
jl
pop
sbb
jae
sahf
xchg
sub
or
jne
aam
data16
cmpsl
xchg
jp
enter
xor
scas
pop
ficompl
les
sbbb
sub
aas
mov
daa
jae
shrb
sbb
pop
int3
pop
sti
inc
sub
sub
xor
or
push
shrb
sub
push
jae
mov
in
or
addr16
in
adc
mov
mov
mov
fisubs
enter
add
std
lcall
add
dec
cmp
xchg
dec
repnz
enter
cmp
mov
lahf
sbb
hlt
call
push
fldcw
add
enter
fwait
clc
test
out
dec
in
xchg
pop
pop
sbb
sbb
mov
loop
sbb
xchg
rorl
call
bound
lock
dec
inc
mov
test
xor
rcrb
jp
imul
xchg
cmp
inc
lahf
inc
clc
ja
push
je
mov
out
jp
mov
pop
xchg
out
or
arpl
iret
cmc
sti
mov
cwtl
je
aas
in
and
dec
jl
addr16
fcoms
pusha
in
in
xor
add
xchg
aaa
mov
inc
sub
sub
adc
add
outsl
inc
sbb
enter
insl
cwtl
jno
inc
jae
jns
and
out
lods
jle
sbb
fisubs
into
adc
mov
cmpsl
inc
push
cmp
mov
push
lcall
cmp
int
outsb
insl
adc
insl
dec
into
fwait
mov
cmpsb
ror
into
pop
popa
pusha
out
fs
sub
xlat
push
testb
adc
jo
out
bound
mov
aam
push
enter
int3
pop
ja
cmpsl
xchg
mov
cmpsl
mov
imul
roll
or
ds
pop
ja
nop
je
xchg
in
icebp
cmp
clc
std
pop
add
test
adc
pop
mov
inc
cmp
ja
sub
inc
dec
ficoml
fdivrl
daa
imul
sub
dec
stos
or
lret
sbb
imul
mov
test
xchg
stc
fldl
sbb
dec
push
lock
add
push
jg
push
xor
popf
xor
movsl
arpl
test
xor
pop
mov
addl
pop
loop
gs
lds
inc
pop
scas
xor
je
dec
inc
roll
adc
dec
mov
outsb
jmp
lods
cmp
pop
leave
mov
dec
imul
movsb
cmp
scas
mov
inc
inc
adc
pushf
aam
in
in
cmpsb
xor
jns
or
jo
mov
test
pop
popa
mov
and
mov
insl
push
and
movsl
icebp
pop
ja
push
cs
scas
cmp
fcompl
pop
mov
pop
cltd
cmc
stc
ret
jne
mov
pop
mov
dec
aas
into
out
shlb
jl
adc
pop
jmp
inc
sub
arpl
ds
cld
push
pop
in
mov
rclb
pop
fildll
scas
imul
dec
and
movsb
sub
jg
cmp
mov
jno
inc
ret
inc
daa
andb
jo
add
bswap
jno
stos
fcmovu
fstps
adc
lods
scas
push
gs
imul
jns
dec
je
rorl
mov
sbbb
jp
mov
popf
mov
adc
ror
add
lds
movsb
out
jg
sub
push
pop
pusha
or
lea
insb
loop
sti
pop
pop
sub
and
lret
sahf
insl
and
ss
pop
icebp
jg
jecxz
adcl
adc
pop
inc
in
add
inc
add
fldcw
out
test
xchg
repnz
mov
les
push
push
or
sbb
std
push
shl
push
and
xor
push
mov
scas
pop
aas
xchg
pop
in
cmp
pusha
adc
lods
jge
out
fimuls
dec
pop
ljmp
dec
out
push
fs
dec
cmp
cmpsl
push
sbb
xorl
xchg
sarb
inc
cwtl
mov
adc
xor
adc
sub
dec
stc
cmp
sti
into
testb
adc
out
test
ret
shlb
push
cmp
sub
call
mov
adc
add
cmp
push
sbb
xorl
or
cwtl
xor
pop
fwait
mov
pop
test
test
jmp
jge
xchg
sbb
push
icebp
ficoml
fstl
insb
inc
push
je
cmp
xchg
mov
dec
dec
sbb
xrelease
jmp
sub
cmpsl
sti
xor
cs
and
popa
jmp
jbe
and
lret
mov
dec
lahf
push
mov
xor
sahf
cli
pop
xor
ds
or
mov
mov
outsb
pop
loop
outsb
xchg
pop
mov
mov
rclb
cs
xor
inc
lea
jne
ljmp
add
push
xor
jnp
cmp
lock
dec
add
and
pop
inc
test
inc
popa
js
je
outsb
test
fcomip
cmp
adc
packssdw
or
cmp
js
hlt
push
jmp
lock
push
sbb
in
insb
test
or
iret
pop
push
jge
cltd
cmp
popa
xor
std
xchg
xchg
ljmp
mov
clc
jnp
hlt
out
stos
iret
pop
mov
filds
mov
fmul
mov
add
xor
and
pop
jge
lds
xor
bound
leave
cmp
rorl
mov
jbe
dec
sub
push
outsb
and
in
cmp
ficoms
insb
mov
pop
mov
inc
xor
add
fwait
mov
sub
xchg
pop
aad
fdiv
sub
aas
dec
rorb
shl
lods
sbb
and
je
push
out
inc
test
loop
inc
inc
mov
in
icebp
mov
pop
and
push
xchg
mov
mov
xchg
rep
setle
daa
ja
mov
add
in
jecxz
mov
movsb
testb
das
mov
mov
pop
gs
and
and
inc
iret
es
out
jp
cmp
mov
and
fstl
push
cmp
xchg
aam
sub
push
pop
lods
sub
movsl
add
stc
mov
nop
adc
daa
dec
stos
lds
mov
sub
fwait
lock
or
add
push
mov
add
lahf
xor
rolb
jns
mulb
xor
daa
cmp
cwtl
sti
sbbb
cmp
xor
pop
or
inc
cltd
pop
jle
mov
stc
mov
xor
shl
enter
push
pop
xchg
mov
jo
mov
inc
inc
lret
imul
pop
test
arpl
and
std
dec
les
call
push
cmpsb
jle
test
mov
nop
xor
sbb
or
mov
stos
jnp
icebp
scas
cld
mov
push
dec
arpl
aaa
daa
movsl
push
insb
xchg
mov
sbb
sbb
adc
dec
popf
js
push
push
orb
mov
subb
sub
cmp
cmpsl
popa
mov
add
out
lcall
xchg
movsb
xchg
lret
and
js
hlt
into
jmp
or
pop
cmpsb
xchg
out
int
jae
pop
inc
xchg
test
inc
loopne
dec
adc
imul
dec
repz
push
push
mov
jns
into
ficomps
cltd
mov
push
in
pop
inc
push
adc
outsl
sbb
rorl
or
scas
push
aad
lock
lret
in
int
pop
je
dec
stos
enter
scas
adc
push
jl
sbbb
loopne
addr16
cmp
es
mov
lahf
cmc
mov
fisubs
xacquire
adcl
push
ret
sti
dec
loop
xchg
sub
test
dec
and
hlt
xor
and
fists
cmp
xor
enter
pop
cmpsl
mov
cmc
out
adc
ljmp
lret
into
dec
iret
loopne
dec
mov
dec
add
stc
xor
adc
ja
mov
iret
or
adc
es
imul
add
xchg
dec
sub
test
push
and
jns
mov
scas
push
sahf
into
sbb
pop
cmp
sahf
pop
xchg
xor
dec
imul
jg
jg
xor
imul
lock
cmpsl
inc
jns
out
xchg
or
adc
xor
adc
sbb
xchg
ljmp
push
adc
push
pop
lret
cs
mov
lds
xor
in
lds
mov
sbb
adc
cmpsb
sarb
aam
lods
aas
mov
popf
ss
dec
mov
cs
je
sar
pop
mov
outsb
cmp
xlat
fwait
dec
or
les
js
xchg
mov
in
mov
daa
push
dec
or
mov
pop
movsl
inc
jmp
lds
jnp
inc
or
aas
mov
dec
shlb
and
cmpl
loopne
sahf
sti
or
jmp
jnp
inc
xchg
jl
out
add
cmpsl
sbbb
push
xchg
or
mov
inc
mov
push
jnp
push
mov
or
inc
sarl
neg
mov
jnp
cmp
int
fwait
leave
and
test
movsl
add
jo
add
lds
xlat
aad
xor
push
jl
push
roll
xchg
ljmp
lods
and
cmp
push
testb
jo
rcr
sub
movsb
mov
mov
mov
push
imul
fstps
test
push
push
or
lds
js
leave
inc
or
bound
xchg
and
fcom
enter
dec
addl
rorl
push
dec
jl
add
test
push
sub
aaa
shr
movl
or
xor
pushf
testb
push
and
jno
iret
sbb
out
jl
mov
push
mov
cmp
pusha
push
push
movsl
sub
dec
jae
inc
aas
inc
pop
stc
fwait
ds
aam
and
xchg
out
xchg
lret
mov
jl
cmp
lcall
out
push
jl
stc
adc
shlb
dec
ss
xchg
pop
and
rcr
pop
push
ljmp
movsb
sahf
aas
and
stc
pop
fwait
dec
jae
fidivl
jo
ret
sahf
sbb
adc
into
cmc
mov
jb
pushf
sbb
or
and
iret
adc
outsl
adc
xor
push
lret
inc
pop
leave
lods
mov
sub
cmp
adc
inc
adc
fsubrs
sbb
jae
or
dec
test
mov
push
stos
cmp
push
and
inc
pop
scas
les
or
dec
push
mov
cltd
jae
xor
inc
xchg
mov
xor
and
stos
adc
sub
push
push
sbbl
ja
fdivrl
and
jmp
nop
dec
andl
stc
dec
fstps
sahf
stc
into
and
push
cmpsb
jbe
ss
leave
xor
iret
aam
cmp
cmp
idivl
mov
scas
push
test
sbb
icebp
mulb
dec
cmpsl
mov
popf
push
xchg
mov
mov
fs
cld
in
aaa
adc
sub
scas
mov
sbbl
aas
jbe
fisttps
rcrl
sbb
outsb
mov
jnp
pop
test
jp
aas
cs
test
dec
lcall
cwtl
xchg
cmp
cmc
lds
and
or
sbbb
cld
pop
call
scas
push
mov
fidivrl
enter
xor
lret
adcb
sbb
test
rcrb
das
mov
mov
sbb
cmp
aaa
mov
imul
inc
pushl
cmp
fsubrl
in
push
mov
fistl
sbb
pextrw
add
sbb
out
scas
cmp
out
xor
movb
sti
pop
jnp
leave
mov
ja
lea
sub
mov
lods
inc
adc
outsb
and
push
lret
js
or
mov
xchg
test
stos
in
lcall
and
lahf
dec
les
mov
xor
push
les
xor
xor
xlat
and
imul
pop
and
cld
and
inc
mov
cmp
sub
rolb
insb
mov
cli
mov
add
mov
lahf
inc
xchg
add
divb
stos
or
int
mov
jno
cmp
add
sti
or
inc
push
mov
cmp
in
ret
add
push
stc
xchg
pop
in
cmp
outsb
clc
cld
jns
cltd
pop
cwtl
mov
hlt
lods
nop
scas
data16
pop
arpl
sub
shll
mov
mov
clc
test
add
mov
xorl
vpor
movsb
inc
mov
xor
mov
mulb
dec
pop
jb
iret
fstl
test
insl
mov
pop
push
add
dec
dec
mov
pop
add
into
jecxz
mov
jne
and
push
xor
mov
sub
and
les
add
mov
or
push
test
aad
in
cmp
mov
les
mov
inc
scas
andl
cwtl
xchg
ljmp
jecxz
out
adc
ss
notb
xor
into
or
pop
in
lods
or
das
xchg
jns
insb
in
std
in
fldenv
out
lods
ret
pushl
xchg
loope
addl
insb
mov
mov
dec
imul
and
je
cmp
push
pushf
aad
cmc
pop
push
jbe
cmc
jo
mov
cmpsb
xor
cmp
and
lock
inc
negb
leave
fcoml
push
mov
or
out
jb
pop
cmp
cld
orb
push
ds
fs
sub
xchg
xor
hlt
call
and
push
and
jg
aaa
mov
sti
movsl
or
js,pn
pop
bound
xchg
cs
dec
data16
mov
push
jne
testl
pop
out
inc
cwtl
mov
ja
push
lahf
lea
mov
pop
andb
adc
insb
jae
push
es
ss
dec
cmc
out
mov
mov
lock
sti
ss
stc
das
push
push
adc
adc
push
mov
adc
sahf
mov
sub
pop
lods
in
cmp
ret
in
cmpsl
out
test
shlb
clc
xsha256
cmpsb
adc
std
jle
out
popa
mov
popf
icebp
sub
lahf
dec
es
hlt
subl
movsl
call
test
js
sbb
mov
lret
arpl
cmp
lea
or
ds
repnz
cmpsl
and
add
mov
and
lret
pop
mov
insb
xchg
aam
jnp
gs
jns
das
jo
nop
addr16
outsb
popf
mov
xchg
jle
loopne
add
xchg
sub
cmc
inc
mov
cmp
cld
out
flds
mov
and
repnz
push
out
jl
mov
jae
xchg
jo
aad
outsb
inc
xor
xor
movsl
mov
dec
adc
mov
add
pop
outsl
dec
daa
repz
cwtl
pop
and
cmpsb
jge
sbb
cli
sub
mov
popf
imul
cltd
inc
les
daa
jne,pn
adc
ja
shll
xchg
mov
mov
ds
stos
cmp
mov
fucomi
mov
dec
xor
and
fstpl
rorl
and
sub
cmc
cmp
and
ja
mov
shll
adc
xchg
dec
bound
ja
imul
push
add
sti
inc
jnp
cwtl
jmp
in
dec
stc
fs
xchg
cmp
and
add
mov
fwait
cmp
xchg
pop
stos
loop
stos
xor
mov
sbb
scas
movsb
xchg
mov
and
imul
out
xor
fstpl
rcrl
test
repnz
pop
std
addl
xor
aam
repz
xlat
add
cs
sarl
push
stos
sub
cmc
push
cwtl
and
bound
cltd
xor
jg
jns
inc
inc
jne
jge
xchg
cmc
xor
lret
outsl
subb
in
daa
hlt
test
scas
sub
xor
or
in
jmp
or
push
adc
add
loopne
mov
rclb
or
mov
pop
repz
dec
popa
cwtl
xchg
mov
movsl
nop
stos
add
adc
push
pushf
cs
rolb
sbb
je
iret
push
jg
push
mov
ret
push
hlt
fldcw
jp
sbb
scas
xchg
lcall
and
in
and
adc
lret
adc
ficomps
dec
mov
cmp
pop
sahf
mov
sti
divl
dec
add
mov
scas
and
mov
or
lea
or
inc
sub
add
and
inc
pusha
adc
mov
ret
dec
xchg
popa
pop
inc
movsb
adcl
xchg
cld
or
into
push
xor
mov
push
loope
shl
loop
icebp
mov
cmp
ret
adc
jmp
push
mov
sbb
hlt
int
test
jmp
jp
mov
mov
push
int
and
sbb
push
cmp
lret
in
dec
jno
sbb
inc
lret
rorb
mov
push
outsl
cmc
sbb
jmp
and
addr16
or
cmpsl
xchg
out
sbb
add
insl
nop
movsl
jns
mov
adc
inc
pop
dec
in
and
in
call
outsl
lret
mov
dec
push
fisubs
inc
pop
or
jmp
xor
jl
mov
aas
fwait
cmc
cmp
xchg
in
xor
mov
jmp
fld
xchg
fldenv
inc
pop
xor
mov
movsl
sub
test
dec
in
in
jle
and
aad
and
pop
xor
sti
pop
mov
fstpt
mov
add
push
insl
cmp
js
dec
jg
pop
lds
push
in
sub
lea
out
andb
fbstp
mov
dec
dec
cwtl
mov
and
jno
inc
out
fisubl
aad
pop
jmp
xchg
aas
movsb
int3
js
mov
out
mov
xchg
dec
std
ret
clc
and
js
aaa
xchg
cmpsb
sub
lods
testl
or
ljmp
ret
cs
test
ret
ds
adc
sub
or
mov
xor
movsb
mov
push
inc
mov
add
stc
sub
lds
inc
jns
sti
sub
jp
xlat
rcll
dec
cs
stos
sub
jb
jge
pop
out
out
add
pop
rorl
test
scas
into
orb
pop
outsb
and
dec
lock
or
xchg
adc
and
lock
dec
cmp
ds
mov
and
jg
xchg
jnp
aad
jno
clc
jbe
lds
add
add
xor
jo
outsl
outsb
mov
jmp
mov
inc
shl
int3
loop
sub
pusha
test
pop
test
sbb
jp
rcl
sub
sbb
ret
mov
push
xor
mov
in
imul
adc
insb
xor
cltd
sbb
sbb
mov
dec
dec
adc
inc
mov
sub
push
mov
mov
cs
fildll
pop
push
cmpsl
test
mov
cld
movsb
cmp
and
push
ret
out
adc
jae
sbb
add
inc
popf
jg
test
jmp
ja
and
lods
fcmovbe
cltd
divb
pop
addr16
cmpsb
sub
pop
pop
andb
cs
xchg
orb
lock
push
sub
cmp
mov
fistps
test
iret
rcr
outsb
rcll
ret
cli
inc
insl
bound
jg
jo
lds
xchg
pop
xor
cmp
aaa
test
pop
js
dec
outsl
stos
gs
into
or
lret
jbe
adc
xor
lods
fistpl
push
popf
popa
js
jbe
lds
nop
jmp
sub
jmp
pop
sysenter
mov
gs
inc
enter
mov
fildll
mov
movsl
jge
inc
jp
jne
test
negb
adc
add
loopne
jmp
cltd
std
in
xchg
push
mov
insl
ljmp
xor
rcrl
xchg
adc
roll
push
mov
lods
cmp
adcl
xchg
inc
xchg
and
repnz
sti
mov
andb
push
cli
push
and
js
js
shll
iret
sbb
into
push
jge
cmp
je
and
test
into
add
xchg
out
popf
add
cmp
jns
into
loope
dec
push
nop
adc
mov
sarl
mov
adc
inc
loop
xor
shll
lods
jl
pminsw
cli
and
mov
xchg
in
into
and
fidivrs
jl
test
stos
mov
cmpsb
push
ja
jl
call
negb
jle
mov
fsub
cli
shrl
inc
test
or
sbb
and
cmpsl
lahf
cltd
dec
loope
daa
ja
xchg
subl
dec
xor
call
repz
jecxz
or
nop
gs
outsb
lret
cmp
xor
jge
or
pusha
sbb
aam
pop
push
sub
xor
fs
inc
add
push
dec
lcall
ds
add
in
dec
aaa
fsubs
dec
xchg
fnsave
cmp
scas
repz
sub
jb
mov
out
fs
lret
cli
lcall
fnstsw
pop
adc
dec
xlat
mov
mov
jl
push
jne
mov
xor
jbe
movsl
repnz
add
xor
stos
xchg
sbb
push
xor
repnz
and
dec
sub
cmc
dec
lods
mov
fidivrl
scas
in
repz
jnp
stos
out
xchg
pop
test
fisttpll
dec
mov
test
mov
ret
andb
std
divl
jmp
cwtl
fsubl
xor
xchg
les
sbb
push
arpl
out
fwait
inc
sbb
mov
xchg
dec
mov
push
and
repz
sub
call
test
inc
shlb
fwait
xor
pop
mov
pop
sbb
sub
mov
ljmp
xchg
aad
mov
hlt
popa
mov
mov
imul
lods
xchg
sti
xor
or
scas
hlt
subl
mov
fstp
xchg
mov
cld
cwtl
pop
mov
mov
fistps
loope
sti
pusha
lds
ss
pop
into
jle
movsl
ljmp
daa
icebp
sti
dec
sub
push
js
jbe
mov
cmp
cwtl
aam
xchg
aam
incl
inc
repz
and
dec
cli
cwtl
pop
lock
and
subb
aas
xchg
mul
jnp
data16
mov
mov
cmpb
mov
and
std
adc
popf
adc
hlt
jg
adc
lock
or
sub
jle
or
movsl
push
xor
popa
outsb
cmp
jecxz
sbbb
popf
sbb
clc
fidivrl
push
xlat
ficoml
adcl
pop
movsb
out
dec
push
mov
lret
daa
push
xchg
outsb
mov
call
mov
scas
jp
mov
xor
fwait
adc
shl
jp
add
and
loope
sbb
xor
shrl
push
xor
cmpsb
or
xor
xchg
add
push
pop
shll
push
fldenv
or
out
sub
adc
jmp
aas
sub
fs
add
movsl
inc
or
xchg
mov
stc
push
scas
nop
pop
mov
bound
and
mov
fists
pushl
stos
push
lods
enter
add
jg
int3
nop
mov
into
in
ffree
call
push
add
mov
outsb
adc
lock
push
add
popa
cmp
lret
cmp
lods
ret
or
adc
pushf
daa
push
fbld
jnp
fidivs
jne
ret
mov
or
push
cmp
loope
mov
jno
add
xchg
xor
lret
cmp
sbb
testb
add
mov
add
add
rcrb
rorb
mov
mov
repz
fidivs
cmp
or
mov
inc
xor
test
inc
xchg
push
aad
in
das
push
ret
mov
mov
xor
add
jmp
data16
jle
and
inc
or
adc
xchg
and
daa
iret
sbb
dec
fsubs
mov
loope
xchg
pop
pop
shlb
stos
add
mov
lret
loope
cmp
movsb
mov
adc
mov
adc
dec
repz
mov
pushf
xchg
enter
rclb
in
sarl
dec
lea
and
and
add
inc
cs
das
bound
lock
js
xchg
shll
mov
imul
dec
jg
jns
insb
dec
mov
inc
push
lret
ljmp
cmpsb
xor
arpl
out
cli
inc
addb
adc
and
xor
add
outsl
clc
fnstsw
dec
pop
cmp
sub
jge
dec
jg
adc
stc
popf
mov
icebp
cwtl
xchg
enter
inc
jne
aaa
arpl
movsbl
orl
add
inc
scas
cmpsb
and
filds
dec
dec
out
add
add
inc
imul
cmc
mov
clc
rcrl
in
and
pop
lds
enter
test
xchg
or
add
icebp
xchg
jbe
mov
sbb
add
jmp
jns
es
nop
outsl
aaa
mov
lcall
nop
dec
fistl
and
adcb
mov
out
sub
fst
pushf
mov
cmc
out
icebp
mov
and
adc
xchg
jo
sarl
out
es
addb
mov
pop
outsb
dec
in
mov
out
add
sahf
ss
insb
dec
dec
add
call
push
push
test
dec
les
aad
pusha
fistl
cld
xchg
mov
inc
or
pop
sub
mov
ret
cmp
jbe
cltd
fdivrs
movsl
and
jb
aad
pusha
add
in
pop
stos
les
inc
jnp
adc
dec
std
mov
dec
xchg
loope
mov
push
out
in
in
fadd
daa
jo
mov
divb
sub
stc
imul
in
cmovbe
inc
pop
pop
ror
cmp
mov
lret
mov
mov
arpl
movsb
cltd
jb
xor
dec
xor
adc
loopne
push
pop
jl
jae
push
jecxz
push
fsubrs
or
lods
add
sub
gs
adc
ljmp
bound
sub
dec
push
jnp
mov
mov
out
pushf
lret
adc
jl
out
int3
pop
inc
insl
mov
shlb
sbb
mov
loop
lret
inc
mov
fidivs
xchg
add
pop
testb
in
dec
in
mov
xor
andl
and
or
test
mov
push
mov
xchg
repz
roll
push
mov
mov
sbb
mov
dec
test
cmp
push
popf
or
movl
gs
popf
mov
hlt
mov
pushf
push
into
lds
inc
cmpsb
negb
mov
jbe
jg
mov
fs
mov
cs
out
je
xchg
adc
mov
js
jb
pop
dec
push
outsl
jne
lret
dec
cmp
pop
enter
cmpsb
icebp
mov
mov
fs
dec
cltd
outsl
out
mov
jbe
jle
add
sbb
repz
int
clc
xor
add
pusha
insl
push
sahf
gs
xor
sbb
mov
mov
xchg
es
mov
call
out
test
pop
push
jl
mov
loopne
in
insb
push
sar
lock
adc
orb
ret
sub
imul
jnp
mov
add
mov
or
lret
pop
pusha
dec
in
out
xchg
fidivl
cmp
adc
and
inc
mov
add
xlat
lea
push
in
pop
pop
ljmp
std
out
xchg
mov
mov
inc
aad
hlt
jae
aas
dec
add
inc
or
jg
xchg
jge
jmp
int
mov
mov
dec
push
mov
repnz
imul
bound
or
pop
aad
out
js
lcall
mov
test
xor
mov
pusha
mov
lret
ds
ljmp
sub
or
fsubl
push
jge
jp
fdivl
scas
mov
movsl
inc
and
pusha
xchg
cmp
stc
lock
sbb
sbbb
jp
inc
into
xchg
adc
cmp
dec
xor
std
push
ss
stos
lret
cmc
out
ficoms
dec
sbb
or
jae
cmc
stc
ficomps
popa
lahf
adc
push
cmp
bound
jl
push
push
cmpsb
pop
xor
sahf
les
in
test
iret
arpl
aad
jne
add
push
mov
xchg
xchg
push
ret
dec
mov
sbb
js
cwtl
cmpsl
push
cmp
fwait
iret
push
mov
ja
add
mov
cmp
fsts
mov
out
mov
test
mov
mov
loope
leave
sub
nop
adc
push
shl
ja
sti
jmp
and
mov
pop
jle
fimuls
push
rorl
mov
sbb
in
cs
push
cmpsb
xor
jnp
rol
lcall
cmp
idivl
cmpsb
xorb
mov
and
jle
aam
adc
xchg
mov
lock
mov
add
or
pop
inc
adc
adc
aas
sbb
sbb
xor
and
xchg
ret
ret
insb
ds
pop
sahf
call
out
stc
push
xorb
inc
xchg
pop
fwait
add
push
or
cwtl
push
subl
xorb
loopne
aas
adc
mov
or
mov
pmaxsw
push
push
ret
into
es
jl
rcrb
and
sbb
lahf
in
jb
cmp
nop
movsl
pushf
jmp
or
call
icebp
push
cmp
lock
mov
cmp
popa
fistpl
and
or
pusha
mov
jle
cli
movsb
mov
jno
cmp
jo
jmp
xor
cld
xor
ljmp
pop
les
in
sbb
sbb
and
repz
mov
int3
jne
add
cld
aad
leave
or
dec
roll
scas
movsl
xchg
pop
mov
pushf
jg
hlt
mov
jg
int
push
imul
mov
in
and
pop
or
cld
pop
imul
pushf
test
inc
adc
push
nop
adc
inc
lcall
dec
test
outsl
sbb
xor
stc
add
xor
adcl
mov
repz
or
jae
ret
stos
push
enter
imull
pop
cli
lahf
push
mov
sahf
pushf
ss
cmp
dec
lcall
out
fs
pop
enter
add
jmp
loop
dec
or
and
lock
fcmovnu
xchg
and
sub
fwait
scas
dec
jne
je
adc
jmp
mov
cmc
leave
pusha
mov
sarl
dec
add
scas
stos
je
lahf
mov
movsl
pusha
mov
cli
insl
inc
pop
mov
loope
setne
jle
jg
out
adc
jp
push
pop
jl
sub
test
or
and
ljmp
test
test
into
push
mov
sub
adc
test
push
jp
js
sub
test
insb
ret
aaa
test
incb
out
xchg
fcompl
mov
andl
sbb
pop
sbb
mov
les
mov
shl
lahf
or
jnp
in
pop
pop
mov
or
test
xchg
push
xchg
adc
mov
add
popa
daa
fmuls
inc
add
push
mov
pop
sbb
dec
cltd
cwtl
mov
jo
aad
sub
cmp
mov
loope
les
test
push
icebp
imul
mov
jmp
mov
dec
cmpsb
mov
not
aaa
hlt
or
push
test
xor
insb
mov
inc
xor
popf
xor
orl
inc
inc
icebp
push
mov
out
push
jle
mov
out
sub
jae
in
les
pop
fcmovu
jl
jbe
insl
and
adc
ret
push
sub
pop
je
cmc
rorb
xor
nop
enter
aad
call
mov
dec
faddl
jg
jmp
xchg
push
call
inc
popa
icebp
mov
mov
mov
jo
int3
fsts
aas
cli
aas
out
sbb
dec
outsb
sub
les
mov
add
es
push
lds
mov
adc
popf
jns
out
sahf
imul
jo
xchg
in
adc
subb
and
add
fdivs
subb
dec
push
dec
mov
icebp
insl
popa
rclb
or
imul
dec
shll
jg
mov
sub
xlat
loopne
addb
ds
in
mov
xor
mov
cwtl
jnp
sub
inc
adc
and
sub
sub
lret
adc
jmp
aad
ficompl
xchg
push
gs
mov
mov
xchg
jmp
aaa
in
in
test
notl
popa
cmp
jne
fbstp
adc
outsb
add
test
adc
sbb
dec
push
mov
sarl
into
fs
aaa
stos
xchg
jmp
movsl
cs
sub
enter
cmp
mov
ret
icebp
or
in
sbb
in
sbb
sbb
icebp
dec
clc
addr16
stos
mov
ss
and
xor
sbb
bound
repz
dec
push
pop
rclb
xor
cltd
arpl
repz
lods
data16
xor
lcall
outsb
cs
xor
inc
aad
lret
leave
push
mov
rsm
int
inc
push
popa
pop
pop
outsl
repnz
rcll
xchg
lret
push
out
shrl
outsl
movsl
insb
mov
das
push
and
xor
push
jns
pop
jmp
push
imul
xchg
insl
in
addl
and
movsb
pop
add
stc
insb
and
mov
inc
test
sub
rcrb
daa
in
stos
jb
sub
mov
push
cmp
nop
or
insb
mov
cmpb
mov
pop
jg
inc
mov
mov
lods
fs
iret
mov
cmp
fstpt
dec
js
sbb
pop
pop
pusha
fbld
xchg
outsb
aad
hlt
dec
xchg
xchg
xor
arpl
mov
or
clc
cmp
mov
sbb
lods
call
fists
lahf
dec
sub
test
adc
addl
daa
add
mov
mov
pop
fisubl
push
dec
sarb
addr16
daa
inc
sbb
loop
lods
std
pop
daa
jne
mov
fbld
and
mov
jne
test
mov
lret
scas
jnp
jo
cmc
sbb
lret
mov
add
cwtl
inc
lods
mov
movsb
out
les
sub
jbe
popa
fstpt
sti
mov
scas
stc
sub
rorb
into
out
mov
add
js
inc
je
push
dec
dec
xor
dec
stc
xchg
or
ljmp
fsubl
dec
ja
jge
mov
xor
js
inc
sub
jecxz
out
or
mov
mov
inc
scas
sbb
inc
or
rcrl
dec
push
out
pop
rcrl
clc
repnz
pop
xchg
push
mov
xor
mov
imul
push
loopne
push
shrl
ss
mov
fimull
test
xchg
xchg
dec
add
stos
sbb
or
mov
add
push
das
inc
lods
insb
add
xchg
enter
sbb
mov
loopne
jl
loop
jp
sbb
xchg
jbe
nop
xlat
ja
xlat
out
sub
lret
sti
hlt
inc
xchg
cmp
gs
popa
imul
push
lds
test
xchg
ficoml
mov
push
push
inc
xor
test
cltd
loopne
pop
push
stos
sub
rcrl
jno
mov
push
cld
xchg
ljmp
jno
xor
les
add
dec
nop
lods
xchg
mov
inc
mov
pop
div
mov
xchg
mov
add
fnsave
aam
pop
aas
xchg
rclb
and
cmp
sarl
pop
cmp
sbb
xchg
mov
fs
fdivrs
adc
test
repnz
or
dec
loope
rcrl
js
aas
push
sub
xchg
adc
repnz
fs
movzwl
mov
fdivl
stc
mov
int
in
push
pop
dec
dec
cwtl
stos
inc
push
scas
or
mov
push
cs
jns
dec
scas
dec
fsubl
fldl
sub
shl
pop
mov
sub
jl
sbb
push
into
push
and
add
sub
cmp
mov
ja
movsb
ret
mov
or
ss
cwtl
je
data16
push
ret
cmpsb
mov
lods
in
lods
sub
es
das
mov
mov
imul
lods
mov
jp
cmpsb
jmp
jae
jbe
jnp
jne
call
add
adc
clc
adc
movsb
out
fsub
mov
call
lahf
jmp
pusha
testl
test
pop
sub
xchg
gs
inc
cltd
or
jae
adc
fdivrs
push
and
mov
inc
cmp
jmp
fwait
leave
sub
test
iret
jnp
xlat
dec
shlb
xor
stos
decl
loop
xor
add
lds
inc
es
pushf
aaa
inc
pop
into
xor
and
mov
mov
fisttpll
mov
sbb
or
dec
rsqrtps
pop
pop
push
mov
orl
aad
push
and
sti
stc
ret
mov
nopl
mov
dec
mov
cmp
jge
jbe
dec
loop
cld
xor
add
dec
xchg
lock
std
pop
xor
sub
jg
out
sub
or
ss
mov
and
in
mov
bnd
sub
xor
gs
les
lret
mov
bound
insb
std
fwait
imul
imul
cmp
in
int
lea
popa
inc
xchg
adc
dec
jbe
xchg
jnp
inc
insb
hlt
adc
add
pop
imul
cmpsb
movl
and
xchg
mov
push
fiadds
iret
ficomps
jl
rcrl
pop
cmp
loope
xor
sahf
lock
icebp
in
sbb
lret
arpl
add
sbb
sbb
dec
or
lahf
psrlw
outsl
push
stc
push
stc
clc
es
jae
sub
pusha
cli
mov
jns
xlat
jge
fmul
xchg
fs
ret
jg
push
pop
inc
ds
ds
or
sbb
movsb
pop
xor
sub
xor
stc
pop
das
addl
jp
loop
xchg
jle
sub
cmpsb
cmp
and
xor
lods
int
jbe
mov
aam
xor
das
scas
fdivr
lods
or
jbe
xor
je
lret
sti
cmc
push
sub
mov
iret
iret
inc
insl
or
mov
xchg
jne
dec
inc
shrl
aad
push
cwtl
ret
adc
xor
cltd
out
in
inc
cmpsb
jnp
cwtl
cmp
scas
xchg
push
cmpsb
arpl
jno
add
pop
push
or
mov
fcoms
and
cs
pusha
popa
mov
in
pop
fdivrl
ja
gs
fcomps
stos
in
movsl
stc
cmp
fcomip
jl
pop
fsubrl
ret
stos
jnp
in
sbb
pop
cmp
mov
push
add
popa
xor
pop
or
and
rcll
test
cmp
pop
cmp
add
nop
add
movb
pushf
add
dec
out
test
jmp
add
mov
loopne
sahf
in
inc
dec
mov
and
fidivl
aam
pusha
jge
xchg
subl
mov
fimuls
ljmp
je
and
into
fs
and
fcom
fwait
sub
data16
outsl
cmp
dec
mov
test
arpl
mov
ljmp
imul
iret
repnz
pusha
cwtl
loope
adc
divps
push
mov
sbb
and
les
ljmp
stos
xchg
fs
push
stc
in
mov
dec
aas
xorl
jno
xchg
cmp
in
jp
mov
mov
xor
sbb
and
xchg
ja
mov
nop
jae
jae
xchg
cltd
xchg
jle
mov
cmp
sbb
pusha
cmp
or
dec
push
pushf
orb
call
ret
jge
sub
sub
push
push
arpl
jne
fcomi
stos
xchg
data16
test
hlt
mov
movsb
divl
data16
loope
mov
push
insb
repz
sbb
mov
pop
xor
xchg
lcall
fcmove
ljmp
cmp
or
sbb
lahf
add
push
and
lods
pop
jns
cmp
jge
loopne
jecxz
je
inc
dec
mov
or
pop
push
insb
lahf
cmp
cmp
jbe
scas
pop
cmc
repz
jbe
mov
pop
nop
leave
jae
lea
xchg
push
add
dec
sub
jecxz
imul
mov
popf
insb
je
adc
out
pop
lods
pop
ss
add
add
aas
int
inc
xchg
test
push
add
xor
add
xor
js
hlt
aas
out
mov
int3
popf
adc
add
or
push
xchg
pop
movsb
cli
sbb
std
dec
push
je
xor
aaa
ds
aad
jae
or
in
or
and
fdiv
cmp
jg
jne
lcall
cs
fdiv
xchg
mov
lret
scas
adc
or
lcall
clc
loope
dec
cmp
out
ret
loopne
xor
pop
gs
in
sbb
and
xorb
out
inc
fnstsw
ljmp
lcall
xor
pop
les
ret
mov
cmpb
xchg
mov
xchg
add
je
outsb
sub
add
pop
xchg
jp
mov
or
cwtl
adc
in
and
dec
aam
sub
jle
mov
mov
shrb
or
lahf
jo
in
ret
ret
pop
call
jl
adc
and
add
mov
or
and
in
jb
faddp
pop
rolb
test
mov
mov
push
inc
mov
mov
mov
inc
pop
xchg
pop
ret
lods
iret
lret
daa
pop
xlat
mov
setno
and
xor
adc
sbb
mov
testl
arpl
daa
sahf
adc
fs
pop
int
and
xchg
pop
into
sbb
popa
fs
mov
into
xor
imul
mov
push
dec
push
mov
test
ljmp
add
insl
fildl
push
sbb
dec
out
mov
subl
shrb
sub
insb
mov
in
push
xor
jg
fimull
movsb
imul
push
xchg
cli
std
push
jl
loop
inc
xor
dec
pop
and
mov
sbb
subb
pop
jp
pop
dec
push
call
mov
sub
mov
insb
pop
jge
mov
divb
jae
ja
mov
cmp
cmp
and
pushf
mov
pop
mov
repz
push
cmpsb
push
std
addr16
jae
dec
mov
lahf
fs
aas
in
fwait
push
jle
shll
push
push
adc
shrb
and
jmp
shll
nop
icebp
loop
xchg
scas
nop
pop
clc
popf
enter
sbb
mov
lret
xchg
dec
xor
in
movsb
sbb
lds
inc
dec
cmpsl
sub
dec
in
std
jl
dec
mov
and
or
pop
rclb
sti
xchg
pop
rorb
stos
jno
nop
adc
scas
dec
pushf
fnstcw
cmpsl
inc
orb
shrl
sub
add
sub
and
dec
or
mov
sbb
mov
insb
testb
lods
add
data16
cmc
les
sub
xor
andb
cmp
repz
cmp
repz
pop
fnsave
lcall
mov
mov
dec
dec
pusha
pop
flds
pop
cld
add
jmp
mov
addr16
enter
pop
push
icebp
mov
push
mov
outsb
sahf
int3
mov
in
and
dec
decb
out
dec
shll
lds
mov
xlat
xlat
shlb
cltd
rolb
adc
adc
lds
nop
mov
neg
sbb
sbb
dec
adc
ret
or
aad
leave
cmp
push
rcrb
popa
mov
pop
sbb
es
fisttps
sahf
fsubl
xor
nop
add
adc
test
lock
mov
mov
cmpsb
fsubrl
out
mov
sub
rclb
dec
jo
xchg
push
push
fbstp
cld
pop
mov
add
mov
fbstp
inc
movsl
xor
std
and
lret
jl
dec
adc
or
sub
mov
push
out
sbb
xchg
ljmp
pop
mov
test
mov
call
orl
nop
xor
jbe
mov
cmpb
and
mov
or
insl
ret
sar
popf
mov
in
test
pop
xor
mov
loopne
sbb
lret
test
push
arpl
sarl
and
mov
ss
inc
test
xchg
testl
push
mov
xchg
sahf
mov
gs
pop
shl
pop
ss
pop
test
add
shrl
xor
push
push
inc
pop
aas
push
insb
hlt
mov
insb
mov
pop
and
dec
clc
jnp
scas
rcrl
push
jnp
cmc
xlat
mov
dec
iret
add
mov
icebp
cs
test
dec
mov
int
sub
repz
xor
push
inc
xchg
xor
xchg
inc
cmp
outsb
adc
mov
jo
cmpl
lret
jecxz
lret
or
int3
lret
dec
out
pop
popf
int
mov
inc
sar
cmp
aad
movl
jg
xchg
aaa
in
xchg
stc
mov
xchg
ret
push
sarl
fcmove
in
bound
mov
in
cmp
mov
add
add
out
pop
ret
jo
cwtl
cmp
pusha
and
clc
stos
je
int3
imul
jge
cmp
fs
sbb
shll
push
and
xor
xchg
aas
sub
dec
cwtl
add
cli
push
inc
dec
ds
imul
outsb
pop
jg
push
leave
gs
push
arpl
xlat
dec
aaa
pop
mov
aad
adc
pop
enter
pop
mov
bound
add
dec
fldt
dec
pop
imul
sarl
add
xchg
adc
loope
cmp
xor
enter
ror
ss
js
shl
and
xchg
fisubrs
fld
cmpb
xchg
inc
popa
xchg
daa
add
mov
lods
mov
data16
xchg
mov
iret
add
sub
jp
loop
imul
loope
jno
cmpsb
repz
sub
mov
push
jecxz
or
cs
push
xchg
mov
jb
rcll
insl
mov
std
push
in
enter
leave
pushf
shlb
rorl
xchg
add
xor
mov
sbb
jne
jnp
mov
push
jbe
sub
sub
dec
shrb
insl
inc
pop
mov
test
adc
out
jno
stos
aad
mov
xchg
out
sbb
cld
test
mov
or
fldcw
aam
insl
jbe
out
add
and
cld
xor
fcom
and
sbb
data16
sarb
xor
sbb
icebp
loope
add
iret
movsb
xchg
rcrl
pop
add
pop
sub
push
jge
or
pop
xlat
fidivrs
rcrb
inc
inc
push
sub
repnz
cld
adc
adc
out
cmp
mov
cmp
sub
push
add
scas
dec
ja
mov
imul
bound
cs
out
sub
imul
pushf
mov
insb
sub
sub
test
movb
test
lret
dec
mov
test
pop
cmp
call
les
push
mov
cs
aas
inc
xor
cmp
or
jo
add
fidivrl
insl
pop
cmp
in
and
jnp
mov
bsf
iret
and
push
test
sub
fwait
jmp
lret
inc
decb
add
or
and
xchg
jno
out
popa
loope
stos
push
dec
push
cmp
xchg
and
cmp
in
xchg
icebp
and
adc
push
push
push
pop
cmp
mov
add
dec
adc
mov
sbb
das
sub
jo
sbb
inc
inc
pop
inc
inc
pop
push
sbb
fimuls
pop
mov
push
jecxz
daa
pop
addl
and
cmpsb
icebp
negl
test
jns
mov
mov
cs
enter
xchg
sbb
mov
dec
ja
and
pop
mov
ret
mov
shrl
inc
lods
xlat
sti
xchg
movsb
bound
ss
cmp
cld
pop
lods
push
shlb
mov
mov
imull
aam
lods
out
lods
and
or
fs
adc
mov
leave
mov
cmp
pop
popa
jmp
aam
pop
sub
addr16
scas
stc
pop
addr16
iret
adc
movsb
mov
adc
push
js
or
adc
push
rclb
andl
add
pop
lock
cmpsb
xor
sub
rcr
pop
inc
and
out
jbe
out
inc
rorb
push
ss
xor
mov
xchg
fdivrs
cltd
cmpsl
push
cmp
adc
mul
jae
addr16
inc
shr
orb
icebp
test
fisttpll
inc
popa
cmp
loopne
push
xchg
pop
add
out
sahf
mov
es
inc
mov
dec
push
cmc
out
loop
and
loop
bound
iret
lds
or
push
mov
sbb
jg
je
nop
xor
arpl
pusha
push
cmp
andb
push
ret
js
push
inc
mov
movsb
in
pushf
ss
add
mov
gs
out
add
xchg
adc
mov
cmpsb
fsts
mov
hlt
mov
pop
push
and
mov
jp
sub
dec
faddp
pop
inc
push
mov
jmp
pop
fistpll
jns
shrb
mov
dec
cwtl
xchg
xchg
add
dec
xor
andb
mov
adcb
fs
jmp
imul
pop
mov
sub
adc
outsl
pop
movsl
pushf
pop
ss
scas
mov
push
out
test
out
loopne
jns
mov
push
lret
mov
cmpsl
subl
xor
fldl
mov
xchg
xbegin
lods
stos
and
mov
xlat
scas
dec
mov
shrb
dec
push
inc
mov
xor
mov
mov
pop
xchg
mov
xor
shll
sbb
pusha
ret
shr
xlat
or
push
cmp
rcl
pop
jbe
lea
sub
popa
mov
inc
sti
int3
gs
push
xchg
cmc
shlb
in
call
cwtl
dec
mov
push
add
mov
lahf
lea
adc
pop
pop
adc
rcll
jge
ret
cld
adcb
jg
pop
sub
xor
aad
insb
mov
imul
stos
jnp
or
pop
out
mov
nop
rcl
push
inc
push
sbbb
lds
pop
mov
jmp
inc
fadds
jecxz
shrb
or
aad
and
leave
out
js
mov
cli
push
pop
cmp
mov
cmp
ret
icebp
cli
ja
pop
adc
push
shll
ret
pop
fstpl
jmp
frstor
fldl2t
lea
popf
pop
fdivs
mov
lea
fmuls
fsubrs
ret
je
rclb
repnz
sub
or
adcl
jmp
and
sahf
stos
pop
mov
dec
fildl
cmp
or
call
lahf
mov
hlt
jle
test
nop
scas
push
pop
fsubrs
xchg
jmp
sub
lods
ss
dec
push
xchg
push
or
inc
jle
fld
adc
testb
mov
cmpsb
mov
mov
add
mov
scas
dec
inc
mov
icebp
jle
shrl
sbb
sub
repz
out
shrl
sbbb
inc
fisttps
into
loope
xorl
lret
cmp
push
adc
dec
jle
push
pop
or
xor
xor
aas
flds
mov
mov
cli
pop
daa
aad
hlt
icebp
adc
mov
push
stos
imull
daa
inc
das
cld
ret
or
inc
aaa
dec
stos
ss
cmp
data16
outsb
je
stc
cmp
mov
adcb
dec
inc
sahf
push
rcr
lahf
popa
flds
fadds
cmp
out
cs
push
cmpsb
xor
pop
add
or
dec
dec
sbb
ljmp
movl
roll
ljmp
and
xor
in
xchg
popa
aam
jge
ret
mov
sbb
aam
add
repnz
fldenv
push
push
xchg
sbb
pop
loope
das
nop
mov
popa
repz
movsl
sbb
push
rorb
push
std
xchg
loope
push
inc
clc
loope
or
hlt
ret
shrl
mov
enter
pushf
int
sub
and
iret
push
faddp
int3
or
pop
arpl
stos
in
lret
dec
and
stos
test
incb
nop
outsb
inc
lea
cli
ret
or
ljmp
pop
leave
cmp
dec
int
imul
pop
sbb
ret
add
rcl
scas
sbb
lret
add
mov
xchg
mov
add
imul
ret
hlt
lock
in
ss
push
les
mov
inc
add
ret
filds
scas
adc
cmp
pop
sbb
and
jbe
popf
push
popf
mov
push
push
sahf
adc
lret
test
divl
or
pop
inc
das
xchg
dec
rcrb
aad
enter
insb
jbe
repnz
pusha
pop
sbb
inc
and
lock
clc
ret
nop
stos
mov
icebp
mov
xchg
add
dec
cmpsl
gs
dec
out
xlat
adc
pop
jne
das
xchg
push
insb
orl
test
adc
xchg
mov
out
out
in
mov
xchg
leave
mov
xchg
mov
dec
xchg
stos
xlat
mov
ja
lcall
rolb
sbb
in
cmp
xor
cmpl
jb
std
mov
push
out
bound
pop
xor
mov
je
lahf
cmp
loopne
sti
shrl
pop
test
jl
into
add
sbb
shll
adc
mov
jo
mov
lcall
adc
or
es
mov
adcb
ljmp
sbb
sub
jns
aaa
xor
in
adc
push
add
pop
cwtl
es
out
addr16
aad
sub
stos
or
xor
or
in
xor
push
cld
outsl
fwait
call
xor
outsb
and
cmp
push
test
push
int3
pop
inc
sbb
lcall
ret
cmpsb
mov
insl
leave
jp
ds
stos
mov
scas
int
cmpsl
ficoml
in
adc
repnz
iret
mov
jnp
cld
pop
and
hlt
fstl
lahf
sahf
pusha
inc
pop
xor
pop
xchg
ss
xor
ja
dec
cmc
loop
or
pop
test
imull
mov
or
and
mov
mov
xchg
or
bound
push
ja
popf
cmpsl
lret
xlat
call
nop
pop
xlat
mov
mov
scas
pop
or
cmp
mov
sub
into
adc
daa
dec
pop
mov
adcb
loop
ja
leave
mov
fldl
and
cmpsl
test
inc
rcrl
sti
int3
mov
imul
or
add
dec
jmp
insl
adc
sub
add
jb
sbb
insl
mov
int3
das
mov
add
loopne
mov
cmpsb
lods
xchg
aam
push
push
cmp
inc
lea
daa
vxorpd
or
add
pushw
arpl
cmp
loop
cmp
push
cs
and
cld
mov
inc
decl
cmc
stos
add
adc
cli
lds
outsl
rorb
gs
mov
mov
rorb
std
stos
lret
dec
ret
xchg
mov
xchg
das
fists
mov
sub
sbb
mov
jge
ss
bound
sbb
dec
sub
push
js
addr16
xor
sub
in
fwait
push
bound
adc
mov
sti
xor
cmp
data16
scas
cmp
je
xor
in
fwait
cs
sbb
scas
jno
xlat
andb
daa
xchg
jl
dec
jnp
into
repz
test
pop
cmp
cmc
dec
imul
xchg
mov
adc
pop
fisttpll
sbb
leave
cltd
ja
push
push
jmp
movsb
aaa
shrb
pushl
test
add
xlat
in
cmpsb
jnp
push
xchg
cmp
mov
pop
imulb
or
xchg
add
fdivl
inc
loope
xchg
cmc
add
cmp
js
pop
jbe
and
loop
xchg
xchg
and
pop
pop
jns
rol
xor
orl
add
ss
stc
or
pop
sbb
out
cmpsl
in
int3
xor
xor
in
fstl
jne
mov
inc
mov
icebp
pop
inc
push
mov
add
jns
cmp
fs
push
xor
mov
inc
mov
add
adc
pop
and
dec
jle
mov
sub
xor
mov
gs
sbb
inc
cmpsl
stc
sbb
push
es
xor
jp
dec
and
inc
xchg
jne
mov
fcomps
sub
in
iret
inc
sbb
enter
add
or
xchg
cs
sbb
inc
mov
sti
pop
das
out
test
pop
push
cmpsl
cmp
pop
push
stc
call
mov
pop
jo
repnz
sub
lahf
rolb
dec
adc
mov
fdivrp
iret
dec
cli
xchg
bnd
lods
outsl
jns
ret
push
movsl
mov
inc
pop
daa
sub
in
inc
sub
pop
bound
xor
mov
shr
jb
inc
lock
or
push
popl
out
pop
sbb
sbb
jb
mov
sti
mov
and
sub
or
aad
ja
mov
cld
sahf
push
test
push
sbb
fistpll
enterw
inc
mov
ss
jg
inc
cltd
push
stc
pop
dec
inc
sbb
xor
shrl
or
sub
or
xchg
xlat
adc
or
loope
inc
pop
shlb
sbb
pop
repz
push
mov
les
cmp
pop
xchg
jp
stos
adc
scas
push
xchg
add
jbe
cmc
push
mov
pop
sbb
insl
sub
inc
push
ficoms
xor
in
call
and
outsb
mov
shr
inc
xchg
iret
mov
xchg
dec
shr
pop
cmpsl
call
pushf
xor
pop
mov
clc
ret
fs
mov
lods
popa
mov
jns
sbb
sbb
sbb
rolb
orl
inc
cmp
sbb
mov
imul
adc
leave
out
dec
cmp
mov
inc
sub
adc
test
xor
xchg
movsl
movntps
or
mov
inc
push
mov
insb
sub
into
push
xchg
cmp
inc
mov
xchg
mov
popf
ss
xlat
sarl
lds
loope
push
mov
lods
lea
mov
ja
ficomps
sbb
push
shlb
dec
push
ds
add
mov
popf
mov
je
popa
mov
push
mov
xchg
push
pop
xlat
pop
ljmp
add
pop
dec
adc
pop
sbbb
mov
sub
cwtl
cmpsl
lcall
cmp
rorb
outsl
andl
aas
cmp
sub
iret
and
ret
bound
movl
insb
cmp
inc
dec
outsl
aam
mov
push
fildll
icebp
dec
mov
dec
and
jnp
sti
gs
das
shll
mov
lods
stos
inc
in
aas
xchg
sub
pop
insb
inc
std
ret
mov
hlt
mov
inc
mov
sub
outsl
lret
sahf
outsb
lahf
psubsb
std
sbb
cmp
cmp
xchg
jmp
sbb
mov
or
dec
dec
cmp
add
jb
insl
xchg
mull
push
mov
cmp
leave
mov
jbe
mov
jmp
and
xorb
test
pop
jmp
mov
pop
cld
jne
pop
add
lea
aaa
in
mov
cmp
fildl
aas
repnz
xchg
fwait
arpl
cmpsb
xchg
pop
jl
dec
cmp
mov
adc
pushf
mov
outsl
fidivs
rcrb
xor
xor
pushf
movsb
add
mov
test
pop
and
mov
addr16
or
mov
push
xor
fildll
lcall
push
nop
cs
xor
xchg
shll
cld
xor
cmp
or
dec
popf
test
iret
jno
add
fwait
out
cmp
pop
push
pop
sub
aam
stos
js
cmp
sbb
xor
hlt
pop
xor
or
pop
addr16
pop
mov
repz
into
test
mov
ficompl
jle
jo
pop
outsl
mov
xchg
imul
cld
mov
std
jo
mov
jmp
test
lcall
dec
pusha
ror
into
fsubrp
or
jns
inc
fnstenv
jp
sub
ret
mov
mov
jns
xchg
mov
imul
mov
pop
jle
nop
inc
xchg
push
imull
xor
fcomps
out
in
and
popf
inc
popf
shl
lea
jmp
and
icebp
and
sub
cli
jnp
or
xchg
mov
imul
ficomps
xor
xor
jl
imul
mov
ja
in
out
xchg
shrl
addb
and
push
dec
ss
pop
and
and
mov
pop
shlb
and
repz
or
test
jl,pt
arpl
cmovbe
lea
mov
std
xchg
push
push
orl
and
jmp
xchg
cmp
lcall
sarl
or
xchg
cmp
cmp
sbb
mov
xchg
lcall
push
and
cmpsl
and
xor
and
rclb
lods
mov
enter
adc
or
push
out
aas
in
mov
jp
mov
fisttps
or
and
sub
sar
loopne
jo
inc
and
mov
outsl
dec
clc
mov
fidivs
vpcmov
std
ss
adc
xchg
pop
rcr
cs
xor
mov
and
jp
or
adc
push
push
xchg
inc
inc
ds
out
mov
push
mov
mov
roll
rcl
xchg
ljmp
stc
sub
jl
mov
mov
xchg
sti
imul
cmpsb
dec
shl
test
push
shr
pop
cmpsl
ret
mov
jp
ja
dec
leave
outsb
shrb
inc
outsb
std
rcrb
cltd
xchg
mov
fcompl
mov
outsb
xchg
gs
push
popf
or
sub
pop
mov
add
mov
lods
mov
scas
xlat
in
xchg
insb
jge
ret
fldcw
sub
mov
stos
in
adc
lock
pop
push
jns
push
add
mov
ret
push
cmp
loop
int
mov
push
add
mov
dec
ljmp
cmc
sahf
mov
sbb
stos
pop
pop
shlb
mov
ret
lods
out
fucomip
into
add
mov
sbb
pop
in
aas
sub
jnp
dec
rcrl
sbb
mov
inc
cmc
xchg
test
clc
test
mov
mov
adc
push
add
test
and
push
and
inc
movsl
ficompl
lds
push
mov
leave
push
fldl
je
ss
stos
dec
in
cmpsb
xorb
testl
stos
add
lret
mov
pop
jmp
cmp
test
es
in
push
test
orl
outsl
rorb
int3
xor
dec
movsl
jp
test
subl
dec
sub
cmp
jge
mov
push
loope
es
ret
pop
mov
cmp
insl
mov
push
fmull
push
enter
adc
pop
nop
sbb
test
mov
jecxz
sbb
jno
adc
ret
mov
popa
dec
or
or
cmc
mov
inc
add
or
rorb
dec
xor
pusha
testb
push
pusha
jae
rcr
movsl
cmp
dec
bound
cltd
jmp
mov
push
sub
lahf
jle
jg
lret
rcrb
popa
cwtl
xor
pop
mov
scas
jmpw
sbb
jno
push
add
leave
fistpll
mov
es
lods
call
sub
jle
mov
dec
mov
add
stos
out
adc
cmp
pop
outsb
rorl
loop
movsl
jns
into
dec
push
leave
pop
adc
andl
dec
ficompl
popa
dec
ja
int
jge
mov
cmp
xor
ss
add
adc
mov
cmp
jns
out
inc
mov
shrl
pop
divl
push
cld
mov
in
xor
push
int
mov
je
mov
mov
and
mov
mov
add
dec
aad
insb
inc
jge
cpuid
std
in
jo
popf
lahf
shl
dec
xchg
sbb
pop
mov
sahf
sbb
push
dec
negl
pop
cmpsb
push
cmp
xor
testl
loopne
and
push
bnd
adc
mov
lret
jmp
push
imul
push
lret
in
push
js
push
loope
ret
orl
hlt
clc
mov
push
dec
fcompl
cmp
adc
insl
cld
lds
add
stos
xor
in
inc
cmpsl
lods
mov
push
jbe
mov
fdiv
mov
lret
push
ljmp
cmp
xchg
xchg
xchg
xchg
cmp
jmp
jne
movsb
test
jne
push
into
push
decl
out
in
sub
mov
aad
fwait
jge
cmpsl
loopne
add
and
xor
addr16
inc
andl
mov
inc
in
and
cld
ds
in
test
sub
and
sbb
and
xchg
jmp
or
xchg
inc
outsb
nop
push
outsb
daa
outsl
rcrl
out
aaa
sub
nop
xor
xchg
call
das
gs
imul
xorb
pop
inc
ficompl
insl
xchg
and
mov
push
xor
mov
std
test
dec
dec
jle
sbb
push
leave
jo
out
aas
inc
outsb
mov
fstl
icebp
mov
push
mov
sbb
movsb
lock
cmc
or
fdivr
sbb
mov
xrelease
pop
dec
fwait
pop
jp
fistpl
arpl
xchg
pop
mov
sub
jo
popl
in
loope
dec
out
xchg
mov
imul
dec
jmp
jmp
mov
add
jg
lods
pop
jmp
mov
jae
out
push
sbb
add
test
and
out
jl
scas
jmp
stc
imul
mov
data16
cwtl
inc
scas
sbb
jno
inc
sbb
aas
or
test
aaa
adc
xor
cli
or
test
shrl
mov
cltd
enter
test
test
jge
inc
loopne
in
sbb
jge
outsb
mov
pop
arpl
dec
imul
movsl
fcmovb
inc
pusha
arpl
mov
xlat
inc
cmp
mov
shrb
mov
dec
and
inc
jnp
aas
bound
movsl
stc
ss
movsbl
dec
fwait
in
or
mov
and
pop
andl
mov
cld
push
push
inc
out
fstpl
mov
icebp
loope
lret
and
cmpb
in
lret
push
and
ja
les
jns
bound
fsubrs
sbb
push
push
popa
hlt
jne
or
mov
shr
daa
push
sarl
repz
mov
push
lahf
lods
cmpsl
inc
les
mov
loopne
imulb
notl
dec
mov
fldl
test
sub
xchg
in
xchg
test
sbb
cmpsb
mov
int
add
cld
pop
jmp
pusha
jp
mov
jbe
repz
adc
push
loope
mov
cmp
push
xchg
and
cmp
jnp
pusha
jle
add
cmp
xlat
xchg
out
mov
pop
ja
mov
mov
mov
pmuludq
or
xchg
dec
incl
pop
jne
repz
cli
ja
cmpl
mov
imul
mov
push
imul
les
das
pop
dec
sbb
inc
xchg
mov
sti
loopne
sub
jl
add
mov
cmp
bound
dec
push
int3
mov
cmp
pop
pop
shlb
clc
inc
sub
sbb
pop
adc
sub
lahf
insb
xor
sbb
jbe
jl
mov
xor
ss
sbb
fisubrl
push
bound
ja
mov
dec
dec
jg
adc
inc
std
test
mov
mov
mov
in
ret
iret
lret
icebp
push
jne
pop
push
inc
ret
ds
and
out
mov
popa
xchg
das
insl
test
xor
xchg
shr
jno
pop
jle
mov
sbb
jl
xor
adc
xor
leave
jmp
lods
mov
lcall
into
xchg
cld
mov
cmc
push
aas
loop
test
xchg
lcall
subl
lret
pshufw
add
popf
test
dec
dec
fstpl
pop
push
cmpsb
lahf
mov
push
out
shrb
push
adc
sub
sub
sbb
mov
mov
add
jae
xor
xor
addr16
inc
int
out
jns
xchg
cmp
push
sbb
push
int
push
jmp
and
pushf
mov
addr16
push
xor
std
xor
out
mov
xchg
outsl
add
or
test
loop
sbb
out
jecxz
test
add
lea
add
mov
pop
divl
sti
xchg
mov
dec
push
arpl
ljmp
jnp
jno
repnz
das
push
inc
cwtl
repz
jae
mov
test
lods
inc
mov
pop
mov
fmuls
or
mov
aaa
pusha
cmpsl
std
cmpsl
clc
shlb
sub
pop
popf
cs
rcll
cmp
in
out
adc
pop
into
xchg
dec
std
in
and
push
add
movsb
pop
and
mov
hlt
or
fmull
std
movsl
mov
and
icebp
mov
xchg
sahf
sub
sbbl
call
dec
adc
ds
cmpsb
mov
js
testb
fildl
jno
add
pop
pop
mov
xchg
sbbb
sti
mov
sub
and
jg
cmpb
xor
cs
pop
dec
fsubrp
push
push
sbb
sbb
in
loopne
jmp
pushf
fisttps
sbb
sbbl
fisubrl
enter
imull
sbb
repnz
pop
faddl
bound
push
xchg
stos
pop
ja
in
imul
pop
fcoms
std
mov
xor
jg
in
cld
mov
inc
scas
sub
xor
and
sub
cmpl
stc
mov
sbb
inc
scas
lret
jp
jb
mov
jge
xchg
sbb
xchg
aad
fmull
pop
ljmp
jne
ss
mov
aam
rcrb
mul
js
or
in
mov
movzwl
sar
pop
dec
xor
cs
lock
mov
bound
mov
jne
sub
outsl
mov
dec
push
lret
pop
mov
push
add
mov
sbb
arpl
inc
int3
adc
ja
sbb
inc
mov
jmp
sbb
or
xor
push
xor
or
shlb
aaa
ss
test
push
popa
fiaddl
push
cmp
inc
dec
in
adc
cltd
mov
out
lods
mov
lret
xchg
rcl
sbb
jg
in
and
das
movsb
mov
push
cmp
xchg
mov
mov
loopne
pop
popl
xor
inc
sbb
jmp
cmp
push
test
add
push
les
mov
fldl
stc
inc
stos
enter
lea
aam
insb
adc
shll
sahf
push
lret
in
pop
jle
mov
rcll
in
xchg
jnp
jns
jns
int3
roll
gs
push
jg
or
mov
in
mov
repz
push
jne
pop
lahf
icebp
adc
jle
xchg
mov
imul
jns
mov
aas
outsl
xor
lret
xchg
adc
mov
js
int
andb
mov
add
mov
fisttps
es
add
inc
mov
mov
add
cs
in
adc
jmp
fstpl
pop
std
xchg
xor
in
outsb
lock
fwait
sub
adc
stos
iret
and
mov
or
in
mov
loopne
in
jmp
repnz
in
int
mov
ret
or
push
jmp
movsl
fiaddl
adc
int3
adc
in
xor
add
lret
rol
jmp
xor
sahf
fbstp
int
inc
lret
inc
pop
jg
jp
xchg
cld
pop
jbe
repnz
dec
jg
lods
mov
in
jg
cmp
mov
test
xchg
pop
sub
in
pop
mov
outsb
lcall
sbb
cmc
scas
dec
sub
adc
jns
jg
shrl
cmc
test
andb
mov
aam
adc
leave
xchg
mov
adc
adcb
adc
data16
jnp
faddl
lcall
inc
cmp
mov
jge
neg
add
ret
or
in
sbb
jo
sbbb
jbe
fildll
sub
add
scas
lods
stos
push
sbb
outsl
push
pop
xchg
sbb
sarl
loopne
out
andl
xor
dec
out
leave
fisttps
sbb
add
shr
mov
cs
fdiv
mov
mov
pop
shrl
test
mov
fbstp
sbb
or
add
iret
sti
jno
test
and
aam
jno
mov
lret
aaa
mov
testl
and
addl
cmp
ret
inc
test
or
cld
lods
lods
call
ljmp
fcompl
and
add
push
sub
popf
mov
mov
and
push
and
inc
or
test
arpl
mov
pop
mov
sbb
rorb
mov
test
mov
shl
jno
pusha
into
push
das
add
mov
fwait
xor
push
and
mov
arpl
repz
icebp
addb
sahf
xlat
repz
inc
clc
aas
movsl
and
mov
cmp
ljmp
test
loop
gs
notl
call
pop
ja
sbb
into
sar
add
mov
add
sub
dec
push
lcall
and
mov
rcrl
sbb
repnz
xchg
xor
movsl
out
xchg
mov
in
xchg
pop
out
ss
or
stos
inc
shlb
pop
and
int3
fildl
jb
xchg
or
rcl
addr16
push
imul
jns
add
scas
sbb
push
push
pusha
inc
and
pop
into
negb
in
ret
inc
movsl
repz
into
sub
pop
pop
sar
cmp
fmulp
call
lock
ja
dec
ss
int3
push
jl
xchg
inc
add
mov
cld
add
push
mov
idivl
mov
out
sub
push
mov
cmp
aaa
push
sbb
arpl
sub
jno
add
in
jnp
xor
out
loopne
cltd
lock
call
inc
notb
mov
xor
mov
mov
xchg
mov
js
fldt
dec
push
cmp
and
aam
inc
push
xorl
xlat
pop
xchg
pushf
or
xchg
sarb
push
xor
rolb
mov
push
pop
mov
add
popa
lods
jnp
add
fdivs
push
js
push
lock
ljmp
sbb
jg
in
inc
xor
mov
inc
push
fstl
adc
mov
pop
pop
cmp
stc
fwait
inc
mov
ret
movsl
pushf
or
add
or
sbb
in
adc
push
add
addb
or
outsl
lcall
pop
leave
mov
insb
int
xchg
pop
arpl
adc
lds
mov
in
sub
xchg
sub
cmp
or
testb
lods
cld
lea
xchg
dec
out
ret
lea
cmp
lcall
mov
movsl
jp
jecxz
mov
ficomps
ficoms
enter
movsl
adc
call
jp
push
xor
dec
fstl
xor
popf
push
push
cmp
pushf
mov
sbb
lods
int
mov
inc
outsb
dec
jo
je
adc
mov
cmp
jmp
pop
les
and
jl
loope
adc
movsl
in
mov
cli
movsb
and
stos
popa
push
mov
pop
in
push
faddp
test
cmc
jle
aas
rcrb
fdivl
mov
popf
repnz
dec
mov
adc
add
cmp
mov
jb
cmc
sbb
push
jmp
add
pop
and
dec
insl
ret
movsl
and
ljmp
mov
fldcw
hlt
cmp
aas
aaa
in
sub
movsl
adc
pop
sub
fstpt
adc
add
or
inc
ficompl
cli
xrelease
jl
sti
in
mov
je
cmp
aam
jle
movsl
push
gs
and
ffree
sbb
and
xlat
arpl
fucomi
xor
inc
popa
sbb
pop
std
xchg
cli
lods
aad
mov
pop
adc
cmp
xor
in
sbb
lret
aaa
dec
sbb
sbb
loope
mov
or
pop
pop
cmp
adc
bound
cmpsb
push
adc
jecxz
ss
jnp
jl
rcrl
mov
jo
adc
push
cld
mov
or
sub
push
add
xchg
sub
lcall
sets
dec
test
je
and
imul
pop
cmp
push
fisubrl
jg
bound
add
push
fistps
mov
fld
loopne
push
xchg
jl
stos
and
cli
call
add
push
daa
in
testl
xorb
cmpsl
jecxz
xchg
jae
stos
pop
jmp
fs
cwtl
mov
xchg
in
pop
gs
es
inc
sti
push
sub
cmc
pop
jnp,pt
xchg
add
fldt
and
fldenv
in
shlb
subl
jmp
cmp
xor
sbb
call
or
push
fucomi
lcall
adc
loopne
rcl
test
jb
das
sbb
inc
mov
ds
ret
mov
sub
adc
imul
push
mov
lahf
imul
inc
ffree
sub
and
fs
aas
outsl
add
and
cmp
xor
mov
ficompl
shr
orb
cmove
ret
in
icebp
shlb
add
cmp
and
daa
xor
icebp
cmp
xor
lahf
decb
push
mov
js
or
lds
xor
test
jg
and
xor
fdivl
cmp
lcall
adc
dec
jmp
jbe
rcrb
lods
push
in
jne
mov
int3
cs
dec
in
out
pop
fnsave
add
ret
ret
jp
mov
adc
repz
sbb
fs
fisttpl
ljmp
xchg
xor
push
sub
and
int3
xor
inc
jecxz
rorb
imull
dec
leave
pop
testl
int
mov
push
call
mov
inc
add
push
adc
jmp
lock
cmp
dec
ss
insl
dec
fwait
int3
xchg
gs
add
ficoms
jno
add
xor
sbb
popa
and
sub
push
js
pop
sarl
mov
mov
fmuls
cmp
add
insl
jmp
lret
sbb
add
nop
xorl
and
sbb
pusha
push
push
bound
cli
adc
mov
into
push
scas
int
push
mov
in
push
test
xor
push
imul
ror
out
leave
mov
adc
cmp
rorb
inc
lret
aaa
and
dec
xor
in
mov
sti
or
xor
cld
out
jbe
outsb
test
lds
cmc
mov
inc
sbb
stos
xor
ja
repnz
les
push
pop
mov
lret
gs
pushf
lcall
mov
jnp
scas
fdivrl
cmp
test
adc
cmp
jge
push
inc
cmp
cmp
mov
call
jecxz
lahf
jns
adc
sti
iret
mov
cmpl
outsb
jae
sti
mov
push
sub
notb
add
jle
sbb
or
dec
xor
pop
inc
jle
cli
test
mov
stos
stos
fwait
add
cmp
popa
jb
jno
mov
jecxz
cmp
aaa
pop
fists
dec
xchg
lods
mov
mov
fs
jecxz
xor
jmp
daa
dec
ss
mov
stos
pop
pop
xchg
pushf
jbe
dec
jae
mov
push
inc
xor
inc
pop
daa
adc
inc
pusha
sbb
or
mov
insl
xchg
push
xor
mov
lods
imul
adcb
dec
mov
add
xchg
pop
divl
aas
fcoms
fsubr
fwait
sub
outsl
aaa
int3
dec
inc
and
jo
repnz
and
cmc
xchg
popf
lret
push
int
push
sub
lea
sbbl
in
mov
xchg
pop
xchg
xor
jbe
mov
loopne
mov
mov
or
xchg
adc
leave
out
jmp
jb
xor
imul
iret
xor
and
outsl
and
clc
sub
mov
xchg
pop
and
out
push
cltd
dec
mov
cmc
push
mov
mov
imul
mov
fs
cltd
mov
cmp
add
sub
inc
cmpsb
fisubl
jns
mov
lods
out
cli
mov
faddp
or
inc
scas
out
je
jp
dec
push
add
roll
mov
or
inc
outsb
cs
pop
mov
xchg
mov
cltd
sub
jnp
push
nop
add
addr16
pop
jne
adc
and
xchg
and
inc
mov
push
sbbb
ret
div
ja
addr16
sub
imul
stos
into
jns
pop
jecxz
js
mov
and
adc
xchg
xor
mov
fwait
cmp
push
or
movsb
cs
mov
adc
fsub
push
stos
jbe
adc
enter
sbb
cmc
mov
imul
sti
mov
push
test
lret
ljmp
scas
dec
sub
testb
sbb
lock
test
rclb
mov
dec
arpl
dec
and
mov
cs
addr16
popf
or
xorl
sbb
add
imul
mov
xchg
fimull
xor
addr16
xchg
stc
rol
jae
jno
jbe
cli
push
mov
hlt
mov
sub
fs
dec
in
sbb
fildll
cmpsb
push
mov
mov
mov
and
jg
and
lods
sahf
out
enter
adc
add
inc
std
cmp
stos
pop
or
mov
adc
dec
lret
mov
cmpl
add
insb
stos
lret
xchg
scas
inc
mov
jae
lock
out
push
pop
test
mov
lds
mov
pop
jge
mov
stos
adc
xchg
push
mov
imul
mov
add
scas
enter
adc
sbb
cmp
roll
inc
ss
call
mov
sar
or
and
fstpt
repz
bound
mov
jecxz
jns
add
mov
bswap
dec
push
data16
mov
out
push
or
fs
ljmp
iret
inc
or
testl
xor
fsubl
lret
lock
or
fwait
into
testl
dec
out
shr
sub
pop
mov
push
mov
adc
xor
jne
jp
mov
jp
lahf
sbb
sti
push
cmp
jb
jo
ret
cmp
jg
pushf
jl
add
shll
test
push
inc
inc
repz
and
mov
cmp
rcl
push
pop
and
scas
push
hlt
push
arpl
push
dec
or
dec
pop
push
clc
xchg
pop
mov
enter
and
scas
pop
sbb
adc
cmp
ja
shll
es
andl
pop
add
mov
call
je
lea
lahf
jg
mov
sbb
nop
adc
pop
das
jecxz
mov
inc
dec
xor
mov
test
xadd
cmp
dec
lods
add
pop
jb
fwait
rcr
and
or
aas
dec
sub
ja
stos
lret
das
movsl
outsb
push
mov
mov
cmpsl
mov
or
adc
jae
inc
mov
imul
or
sbb
add
mov
pop
xor
push
or
mov
xchg
push
adc
push
add
cmpsb
mov
shlb
loopne
mov
sbb
sbb
cltd
adc
and
ds
idivl
sahf
dec
aas
and
ds
loopne
sub
pop
xchg
xchg
sub
xor
icebp
sub
xor
jmp
mov
push
fnstsw
into
sbb
movsl
jge
sub
mov
pusha
imul
mov
fistpl
add
cmp
pop
divb
pop
push
cmp
or
jmp
push
pop
cmp
pop
in
addr16
pop
loopne
test
add
outsb
xchg
xor
jnp
mov
in
inc
dec
pop
repz
adc
mov
adc
rcrl
mov
push
and
xor
in
aas
inc
popa
jecxz
mov
adc
cmpsl
fidivrl
ss
clc
mul
add
fisubrl
xchg
sbb
out
jnp
sbb
aaa
add
pop
inc
pusha
cli
pop
rorb
int
fsubrs
sub
cmc
cmp
es
sub
push
in
scas
pop
push
test
xlat
mov
ljmp
and
dec
and
jg
push
cld
push
lcall
ror
and
push
cwtl
xchg
nop
repnz
dec
inc
sub
mov
addb
pop
sub
cmp
sbb
lahf
movsb
sarb
lock
mov
outsb
and
push
mov
adc
mov
movsl
dec
fsubp
scas
insl
dec
shll
lcall
mov
inc
push
clc
xchg
sub
aas
cmp
dec
cwtl
add
add
lods
dec
inc
mov
out
shr
shl
jbe
loop
nop
inc
adc
xchg
fcomps
lea
rorl
dec
arpl
cli
cmp
sbb
inc
cmpl
ss
lds
mov
fldcw
adc
mov
push
push
jne
mov
adc
cmc
pop
fstpl
arpl
adc
adc
lcall
loop
add
inc
or
jno
outsl
or
cmc
dec
jle
in
inc
loop
push
in
insb
insl
add
mov
add
mov
inc
mov
jge
das
push
mov
sub
dec
das
pop
mov
ja
in
es
fldl
pop
verw
lea
add
mov
or
arpl
mov
pop
jg
stos
jge
or
inc
mov
stos
out
shrb
cmpsl
loop
mov
cld
in
lods
jb
inc
sub
mov
aam
sbb
dec
stc
in
fisttps
cli
sub
dec
insl
lods
les
push
mov
push
fisttps
sub
xor
pop
rolb
outsl
imul
insl
adc
add
and
jle
movsbl
popf
mov
into
sbb
or
in
data16
shll
pop
shll
mov
mov
lahf
das
jecxz
daa
sti
and
mov
pop
out
add
lret
xchg
xor
jno
in
scas
out
stos
in
leave
ljmp
ret
pop
lods
push
inc
sbb
inc
xchg
mov
jo
add
xor
jg
test
jb
cmpsl
xchg
inc
mov
ljmp
stos
daa
mov
dec
or
nop
or
aas
and
inc
cmpsl
aad
cmp
jbe
xor
add
insl
jge
pmulhw
mov
inc
in
sub
dec
dec
idivl
iret
jns
fst
mov
add
cltd
cmp
mov
lret
push
pxor
ror
xor
dec
inc
pusha
rcrl
dec
cld
fwait
sub
ffree
pop
sar
push
out
and
data16
mov
cmp
pop
mov
loope
mov
mov
mov
dec
mov
dec
mov
add
das
mov
cmp
iret
add
cmp
dec
std
mov
jg
jno
fisttpll
xchg
je
push
or
pop
sbb
and
dec
sarl
lods
mov
xchg
add
les
cmpsl
push
imul
iret
or
inc
lock
dec
icebp
fldenv
ljmp
data16
xor
xchg
out
enter
pop
mov
shl
fwait
lods
xor
insb
inc
ljmp
scas
imul
ljmp
sub
sahf
push
inc
push
stc
cmp
jp
mov
inc
outsb
pop
cs
loop
mov
addr16
jg
sub
rcll
and
shl
pusha
pop
inc
lock
pushw
dec
xchg
xchg
push
into
cmp
add
adc
sbb
mov
mov
les
popa
ja
pop
xor
and
shr
or
faddl
inc
push
sahf
inc
mov
mov
xchg
loope
idiv
insb
and
push
mov
inc
aad
jnp
or
mov
xor
jb
decb
jmp
dec
adc
dec
dec
xor
movsl
push
shlb
hlt
popa
push
sbb
cltd
les
je
xchg
mov
cmp
lods
sbb
pusha
rcll
mov
imul
sub
shrb
dec
and
pop
sahf
test
push
rcrb
leave
pop
js
test
call
pop
pop
xabort
jb
movsb
orb
pop
mov
arpl
cmp
xor
push
jbe
clc
clc
jmp
lcall
loopne
lods
sbb
mov
sub
fsubp
fistpl
xchg
sub
sub
pop
lret
pop
xor
sub
bound
xor
sub
xorl
hlt
mov
mov
and
arpl
push
jbe
add
or
sahf
fsubr
cmc
daa
add
cmpsb
add
hlt
jbe
hlt
push
xor
shll
pop
mov
add
cmp
dec
or
lahf
lea
aad
imull
xor
lcall
lcall
cli
lds
xchg
sahf
sub
fnsave
jge
hlt
into
mov
push
sbb
xchg
inc
mov
jmp
xor
xchg
lcall
sub
inc
sub
jp
test
fwait
daa
pop
xchg
pop
aam
sub
push
daa
lret
jb
or
outsl
sub
gs
xchg
sub
adc
mov
cld
cmp
pop
packuswb
in
and
inc
sbb
ret
gs
aas
addb
in
pop
into
ficomps
lret
xchg
sahf
aas
jns
negl
test
scas
pop
ret
scas
add
iret
pushf
cli
ret
into
jg
cwtl
push
lret
enter
shl
push
xor
jno
iret
pushf
rcll
mov
js
or
jmp
test
cmpsb
ret
adc
push
loop
mov
pop
cmp
xor
xor
adc
or
cmp
jns
js
sub
jecxz
mov
adcb
jnp
arpl
xor
mov
sti
push
sar
cltd
call
popa
mov
jg
mov
imul
cltd
sbb
jg
add
test
jecxz
out
add
mov
xchg
xchg
adc
xchg
fcmovbe
jecxz
movb
out
ss
enter
cmpsl
es
push
mov
scas
mov
test
lret
mov
mov
imul
movsb
loopne
outsl
aad
dec
in
into
adc
sub
test
jge
pop
sub
out
int3
stos
sbb
ljmp
aaa
jo
dec
jecxz
insl
pop
adcb
mov
xchg
test
and
push
sub
push
in
cld
arpl
sub
mov
jg
negl
test
cs
push
and
daa
and
scas
sub
rolb
mov
movsb
inc
ror
xchg
ja
push
test
sbb
adc
jno
popa
pop
cmp
icebp
pop
stos
mov
repz
lds
push
adc
add
shlb
mov
jns
xor
lret
sbb
push
xorl
sub
ret
cld
xlat
jp
mov
xor
xchg
cli
push
lods
imul
out
out
mov
sub
mov
bound
sub
cmp
pop
pusha
cmp
test
xchg
ss
stc
lods
jno
sub
mov
cmp
pop
cli
inc
ret
data16
outsl
mov
mov
mov
xor
push
into
inc
in
pop
xor
xor
out
mov
dec
or
sbb
xor
adc
cmpsl
in
dec
cmp
inc
aas
dec
and
sub
push
sub
fs
add
add
push
icebp
inc
pop
inc
push
mov
cmp
out
add
xor
jecxz
mov
or
sbb
pop
out
dec
shr
aas
in
sbb
adc
ss
lods
dec
lret
or
sbbb
iret
pop
repz
sbb
loop
jns
daa
or
xchg
dec
in
mov
pop
push
repz
jl
pop
adc
rorb
or
add
dec
cmpsl
in
push
jb
jbe
fisttpll
imul
fstpl
xchg
ret
test
int3
ret
out
xlat
inc
sub
mov
sub
inc
fsts
ret
subl
lock
mov
imul
pop
sub
and
mov
jg
and
push
mov
rorb
sbb
out
std
add
mov
dec
or
cmp
inc
dec
test
add
lret
ja
leave
inc
hlt
arpl
inc
into
scas
pop
inc
in
loopne
in
ljmp
adc
jl
sbb
mov
aaa
sbb
mov
push
mov
lcall
inc
out
ficomps
lea
and
enter
pop
jbe
lret
jge
xchg
iret
sahf
in
sub
jno
call
shlb
inc
pop
push
jb
or
nop
jns
pop
xchg
push
push
test
jne
jp
inc
pop
repz
arpl
xor
xchg
mov
mov
dec
jge
cmp
jmp
or
outsl
rcrb
leave
mov
dec
addr16
mov
fnstcw
iret
cli
xorl
xor
les
and
iret
cld
push
out
or
and
aas
movsb
ret
lods
negl
push
imul
mov
hlt
push
sbb
add
mov
popf
popa
inc
push
add
cld
push
xchg
mov
daa
sub
ret
add
leave
inc
ret
addr16
xchg
test
xchg
cmp
ljmp
sarl
cmp
inc
push
xchg
mov
cwtl
cmp
jle
mov
into
mov
lret
arpl
lahf
mov
arpl
jns
cmp
mov
nop
dec
mov
jae
or
popf
int3
or
ja
lret
fs
out
adc
dec
push
lods
jne
lea
mov
insb
pop
mov
aas
outsb
mov
cmp
pop
push
addr16
sbb
jecxz
stos
adc
lcall
cmp
inc
pop
sbb
testb
xor
xchg
mov
test
imul
jp
jge,pn
mov
dec
clc
xchg
adcb
fadd
addb
xchg
sub
test
clc
dec
pop
rorb
xchg
lock
inc
test
test
sub
jmp
sahf
xchg
mov
jl
test
pop
mov
or
call
pop
test
notb
test
lret
adc
or
sub
push
push
sub
dec
imull
mov
inc
dec
lock
or
aas
or
aam
push
sub
push
insl
rorl
sub
in
sub
cmp
cwtl
jne
jmp
dec
aad
sbb
sbb
mov
insl
int
out
pusha
jne
mov
push
cmp
and
and
and
ret
int
mov
mov
push
sub
lcall
das
mov
addr16
repnz
or
ss
xor
xchg
add
movsb
hlt
jecxz
and
imul
out
iret
rcrl
xchg
sub
out
out
rcll
iret
inc
dec
mov
das
add
inc
jbe
push
and
mov
mov
jb
or
mov
jp
inc
ss
cmp
test
std
inc
jl
mov
cmp
test
movsb
mov
push
jno
push
ss
pop
or
pop
fldcw
or
xchg
dec
push
test
mov
cmpsl
push
push
fldt
clc
fdivs
aad
push
rcll
push
dec
lods
or
loope
cltd
mov
faddl
data16
aaa
push
bound
insb
fs
or
imul
mov
ret
dec
xorb
push
or
and
or
mov
cmpsb
xchg
loope
mov
push
bnd
ret
das
add
aam
roll
ret
jp
or
mov
imul
imul
push
mov
dec
jg
jns
mov
gs
or
fisubrs
stc
xchg
movsl
jg
adc
cmp
sub
dec
ljmp
les
lock
data16
insl
lods
cli
pop
push
ss
jmp
popf
imul
es
xchg
pushf
push
mov
in
or
test
test
test
in
sub
fnstcw
shlb
cmp
or
stos
dec
sub
pop
jle
or
aas
xchg
mul
aaa
pop
lret
aad
mov
and
push
insb
fistps
cmp
jns
mov
add
movsb
popa
sub
cmpsb
outsb
jb
ljmp
fsub
sbb
pushf
mov
cwtl
es
mov
jno
add
mov
scas
int
mov
push
imul
sbb
xchg
jmp
push
jmp
movsb
rsqrtps
xchg
outsl
jp
sahf
pop
xchg
loope
and
xchg
sbb
neg
shrb
xchg
push
push
mov
call
int
sahf
mov
cmp
mov
rcrl
pop
adc
insb
mov
xor
and
ss
or
imul
mov
xlat
fnstsw
aaa
sbb
rol
push
imull
ret
pop
in
test
cltd
push
inc
cmp
cmp
jmp
inc
jbe
adc
push
xchg
pop
jo
lock
outsb
push
pushf
nop
mov
repz
adc
insl
js
adc
popf
scas
mov
pop
test
jecxz
cli
gs
add
ret
fisttpl
out
iret
sbb
insl
sub
mov
arpl
rolb
outsl
cmp
xchg
cmp
gs
push
cmp
sub
sbb
fsub
out
pop
stos
jle
mov
dec
repz
cmp
dec
out
fsubp
jmp
je
cmpsl
cli
iret
push
or
fsubl
mov
jb
mov
scas
dec
ja
jnp
pop
es
xchg
sti
rcr
cmp
xor
inc
cmp
pop
lret
iret
mov
in
push
mov
sbb
scas
pop
std
stc
or
inc
mov
add
test
call
mov
or
pop
mov
rcr
ret
popa
cltd
xchg
ret
int
or
dec
ret
fmuls
adc
scas
adc
out
push
test
adc
cwtl
dec
cmp
lods
and
mov
stos
fistpll
sbb
lret
push
add
adc
add
adc
fisubl
mov
push
iret
arpl
je
mov
pop
dec
add
aaa
xchg
loop
mov
or
xchg
adc
arpl
jb
dec
js
loopne
mov
out
mov
shlb
test
pop
orb
fdivp
jbe
mov
testb
add
push
cmc
jno
xlat
aad
pusha
lahf
out
popf
shlb
dec
xor
push
movsl
sbb
jo
push
adc
loope
inc
inc
xor
mov
je
scas
sbb
repnz
mov
les
mov
pusha
pop
cmp
pop
xchg
xor
gs
dec
jbe
cmc
xchg
out
js
cmpl
pop
mov
jge
les
xchg
js
mov
cltd
adc
pop
lock
test
sbb
insl
add
inc
sahf
cld
pop
adc
xor
js
cmpsb
dec
cwtl
int3
or
popf
jmp
xor
sbb
inc
sbb
mov
adc
in
fsubrp
sub
push
outsb
cmp
scas
call
sub
ror
ljmp
fistps
imul
xor
pop
jo
lds
loop
test
loopne
pop
sub
insl
cmpsl
lea
loop
or
out
sub
push
jmp
fimuls
iret
or
fucomi
cld
aaa
mov
sbb
inc
sub
cmpsb
into
and
and
mov
adc
mov
ss
sub
push
sti
cmpsl
dec
adc
mov
jp
ss
enter
cmc
mov
stos
test
adc
mov
sub
jo
enter
jnp
mov
xor
cmpb
int
xlat
mov
lahf
add
push
pand
mov
into
adc
les
jle
mov
jle
xchg
push
fneni(8087
gs
inc
add
std
loop
push
mov
rdmsr
xchg
mov
push
mov
sbb
mov
stos
lret
cmpsb
sub
fidivrs
xor
jno
mov
stos
xchg
lock
xchg
inc
test
mov
fists
or
fldcw
xor
mov
daa
lret
popa
push
dec
lea
add
dec
stc
mov
cmp
arpl
sarl
add
pop
addr16
subb
lea
sahf
dec
lods
lods
test
out
arpl
xchg
data16
mov
sub
rcrl
enter
and
cmpsb
lret
ret
add
fwait
movsl
jmp
in
inc
jmp
lock
dec
sub
sbb
xchg
adc
fldcw
addr16
pop
in
je
jnp
clc
call
add
bnd
cmpsl
jmp
mov
test
cli
repnz
inc
pusha
lds
sahf
inc
add
int3
cwtl
mov
repz
out
lods
stos
jns
dec
adc
cmp
mov
xor
or
adc
in
sub
in
xchg
jp
fimuls
mov
mov
lahf
sbb
xor
repz
jmp
arpl
mov
test
mov
sub
jge
cli
insl
repz
pop
les
aas
mov
add
fs
fdivl
dec
int
gs
fisttpl
outsl
or
iret
or
lahf
mov
icebp
xchg
test
and
xabort
xchg
in
xchg
cmp
adcl
jle
add
shlb
cli
mov
sbb
mov
xchg
arpl
mov
xor
mov
xchg
pusha
dec
in
and
push
scas
lret
mov
xchg
addr16
fwait
dec
jo
sti
inc
or
dec
pop
in
xchg
inc
enter
icebp
xchg
lods
daa
sarl
imul
inc
sahf
xchg
pop
cli
cwtl
cltd
mov
leave
cmp
je
pop
inc
xchg
or
jb
scas
jne
xchg
cmp
xchg
adc
es
jle
xchg
scas
aaa
mov
xchg
and
clc
aam
fcmovne
mov
xchg
pop
stos
jg
push
inc
jae
push
pop
jmp
pop
mov
es
mov
cmpb
inc
inc
mov
xchg
push
mov
jnp
mov
pop
stos
adc
dec
faddp
mov
fimull
or
dec
in
test
adc
mov
push
push
int3
mov
loopne
loope
clc
cmp
sbb
sub
inc
adc
addr16
jb
test
movsb
stc
or
movsl
push
and
jo
out
pop
fsubrs
pop
jl
cmp
scas
fs
add
lock
push
mov
movsb
loopne
xchg
or
push
fs
push
inc
mov
add
mov
std
gs
or
and
add
jl
push
pop
dec
test
das
out
lods
xlat
sbb
or
sub
jo
xchg
pop
mov
cli
push
fmull
testb
dec
xlat
test
push
push
sub
jns
adc
fsubrl
adc
bound
or
mov
push
dec
icebp
lret
fwait
int3
scas
push
jge
xchg
stos
fsubrl
das
stos
idivl
add
loope
fs
push
or
dec
or
or
into
and
ljmp
aaa
jge
inc
stos
cmp
adc
jbe
xor
inc
and
mov
pushl
adc
adc
ja
bound
cmp
jbe
fisubrs
push
aad
mov
ljmp
test
dec
subl
dec
in
lcall
or
loopne
lret
inc
imul
subb
cld
cwtl
insl
sub
push
lock
xlat
ss
test
fdivl
adc
push
in
les
ficomps
jge
pop
aaa
cli
shll
ja
inc
incb
loope
dec
xor
insb
shlb
push
test
fwait
dec
in
js
loop
add
push
insl
mov
sub
and
ljmp
xor
xor
pusha
cli
jge
or
sbb
scas
xchg
pop
xor
dec
je
mov
dec
fistpl
fildll
push
rorl
and
loope
inc
jb
outsb
xchg
mov
shrl
gs
cltd
leave
jg
int
xchg
cmpl
jp
pusha
inc
fsubl
dec
outsl
insb
pop
shr
pop
jmp
call
outsl
xchg
stos
test
addr16
ja
push
out
imul
cld
push
xor
mov
adc
adc
stc
adc
mov
dec
das
inc
dec
stos
in
jne
out
pushf
pop
xchg
insl
int3
fmul
cwtl
int
lds
movsl
js
pusha
or
adc
lock
cs
mov
xchg
and
test
dec
das
push
mov
aad
adc
jo
rorb
into
daa
orb
bound
sbb
int
ljmp
je
push
iret
mov
jg
das
cmp
jmp
fadd
imul
jns
sbb
das
ljmp
mov
inc
stos
push
xorb
or
cli
cli
shr
dec
repnz
xor
inc
pop
insl
inc
mov
cli
pop
pop
shll
mov
adc
data16
aaa
cmp
ret
xor
and
gs
jmp
test
mov
jne
xor
inc
push
sbb
push
test
sub
pusha
andb
cmp
loope
inc
sti
pop
and
jb
jns
cmpb
add
add
cmp
mov
xchg
mov
xor
nop
sti
stos
lret
mov
add
cld
dec
pop
mov
pushf
mov
add
inc
nop
sub
pop
sbb
ja
adc
mov
ret
lea
call
mov
mov
sub
jmp
insb
xchg
sbb
inc
pop
insl
int3
pop
and
inc
mov
std
in
jne
push
mov
test
inc
and
fsubr
dec
ret
into
mov
pop
pop
sti
std
lahf
xor
dec
out
punpckhdq
lcall
or
pop
and
shll
dec
int3
fucomp
cmp
push
jl
sbb
mov
jge
xor
imul
or
inc
stos
cmpsl
insb
into
cwtl
iret
cmp
inc
cmp
mov
and
ljmp
out
pop
and
call
mov
scas
xchg
mov
mov
aad
aam
orl
movsl
lods
xchg
lret
imul
call
outsb
sbb
mov
cmp
jecxz
push
sahf
test
mov
das
pop
ficompl
pop
push
aaa
loop
mov
enter
pushf
pop
cltd
and
in
push
inc
cmp
aas
mov
int3
and
repnz
push
mov
push
mov
mov
add
push
push
jecxz
sub
or
repnz
inc
jbe
adc
test
call
pop
js
add
pop
jmp
sbb
mov
mov
outsl
into
mov
inc
in
jae
cmp
mov
pop
push
add
std
mov
in
xchg
leave
mov
mov
icebp
adc
ret
mov
adc
mov
add
pop
dec
xchg
andb
stc
lcall
fcompl
dec
push
hlt
or
dec
push
loop
adc
loope
push
stos
es
and
pop
inc
inc
dec
icebp
roll
lock
add
or
sarl
sbb
sub
mov
shl
jmp
dec
add
insb
fcoml
mov
cmp
mov
mov
mov
fld
sub
xchg
cmp
repnz
cmc
dec
pop
add
scas
cmp
add
ss
jno
xor
test
je
gs
cmovs
add
xchg
cmpb
mov
xchg
inc
in
mov
enter
lea
lahf
mov
testl
aas
mov
and
aaa
jae
cmc
mov
rclb
add
aaa
and
pop
push
sar
sbb
pop
leave
push
adc
imul
rolb
dec
and
pop
std
dec
in
jnp
and
test
push
js,pn
mov
sarl
and
in
xchg
ljmp
out
or
push
cltd
fwait
mov
aam
mov
aam
stos
shlb
mov
push
outsb
cmp
or
mov
or
imul
mov
in
scas
lea
mov
cmpsb
inc
mov
add
popa
pop
push
sbb
xor
ret
shrl
out
cli
or
fs
pushf
insb
subl
loopne
push
push
test
sbb
xchg
xlat
jle
cmp
aas
daa
icebp
jle
dec
js
xor
jnp
sbb
ss
adcb
insl
add
jb
sub
loopne
aaa
les
popa
sbb
jecxz
adc
data16
int3
mov
add
dec
out
cmpsb
sahf
and
sbb
arpl
sahf
test
imul
xor
daa
and
or
nop
and
jmp
mov
repz
mov
test
sbb
rcrb
mov
mov
xor
test
fldt
dec
movsb
jle
dec
scas
scas
inc
call
subb
bswap
dec
inc
pop
stos
sub
insb
add
cli
enter
insb
scas
clc
cltd
or
es
mov
aas
lods
testl
mov
std
mov
lods
jo
les
mov
insl
lds
sbb
movl
and
insl
xchg
gs
cs
adc
ss
sbb
mov
mov
scas
jnp
insl
xchg
fstps
xchg
xchg
inc
jnp
int
insb
loope
cs
lret
sbb
pop
or
fwait
loope
jae
mov
dec
dec
clc
ficompl
in
test
mov
sbbb
outsl
mov
sbb
xchg
xor
ds
jb
and
cld
add
decb
xchg
adc
loopne
in
xchg
cmp
mov
les
xchg
repnz
pushf
mov
inc
pop
mov
ljmp
cmp
cmc
addl
push
movsl
pusha
andw
push
dec
cwtl
mov
mov
into
dec
pop
lahf
in
pusha
test
sarb
in
lods
inc
jno
dec
mov
sarb
sub
xor
fwait
add
and
test
mov
mov
mov
push
inc
sub
push
loop
test
mov
jno
mov
push
cmpb
mov
ret
in
dec
or
dec
int3
fistpll
push
dec
retw
or
lahf
fadds
sub
push
add
sub
outsb
fstpl
cmp
sbb
push
dec
lret
or
xorb
mov
inc
jmp
xchg
fcoml
cmp
lock
pop
ficoms
sbb
lods
mov
mov
dec
in
movsb
push
enter
int3
and
mov
ret
xchg
call
xchg
adc
pop
or
jno
cld
dec
mov
lods
inc
mov
in
sbb
or
test
jmp
mov
rol
es
inc
mov
dec
pop
or
mov
adc
cmpsb
fucomi
mov
mov
mov
xor
push
fs
lcall
pusha
mov
jp
push
jbe
test
push
inc
jge
dec
or
and
or
mov
std
fnstcw
out
sub
cli
jl
fyl2x
idivl
cmp
cmp
pop
pusha
dec
roll
adc
mov
dec
cwtl
add
pop
lods
cmp
sub
push
aam
dec
add
dec
xchg
and
inc
addb
cmpsb
stc
cmp
jns
int
dec
xor
les
lds
scas
xor
push
jg
ret
lock
dec
adc
push
stc
or
add
adc
mov
pop
jp
shlb
sub
sub
mov
jo
push
dec
mov
nopl
lock
fldcw
in
mov
rolb
cmc
inc
ljmp
scas
dec
lods
pop
cmovae
jecxz
test
lods
push
movsb
nop
ljmp
cmp
adc
in
inc
mov
sbb
dec
mov
mov
jbe
mov
pop
xchg
xchg
fldenv
lcall
aas
iret
imul
sar
lret
dec
ds
ja
cmp
inc
jge,pt
push
decb
faddp
out
pop
imul
sti
insl
movsl
fcomps
inc
and
cmc
sub
cmp
shl
testb
fidivrs
jno
fcmovnu
xchg
adc
repz
ret
lods
fwait
movsb
mov
sub
or
adc
xchg
mov
mov
xchg
and
pop
adc
xchg
mov
and
jnp
mov
test
pop
loopne
dec
movhps
shll
push
ds
or
and
loope
mov
dec
sbb
test
jae
shr
std
movsb
into
or
xchg
cli
nop
cmpb
mov
xchg
dec
fildll
jbe
popf
cmp
mov
mov
sbb
cmp
xchg
xor
xchg
add
and
mov
ja
or
cld
ss
in
ss
mov
mov
push
mov
jbe
inc
fistpll
std
mov
hlt
mov
cli
push
adc
out
fildl
xchg
xor
movsl
ja
push
bnd
push
fwait
inc
add
inc
lcall
or
ret
cmp
xor
add
out
addr16
fildl
sbbb
stc
push
mov
xor
lret
sti
jmp
mov
adc
fnstenv
pop
xlat
adc
adc
loop
jl
pop
push
adc
push
icebp
push
xor
in
sub
idiv
insl
inc
popf
scas
cmpsl
xrelease
hlt
jno
std
or
loope
dec
in
out
test
mov
mov
inc
mov
jecxz
sbb
push
lret
and
xlat
adc
out
push
or
mov
xor
sbb
ficomps
pop
inc
mov
add
mov
fs
iret
dec
xor
push
mov
roll
es
pop
xchg
xor
jns
push
inc
inc
je
dec
sbb
push
inc
add
loopne
push
iret
in
sbb
lock
lea
dec
push
data16
dec
xlat
testb
xchg
ja
jl
orb
inc
test
add
inc
or
inc
push
hlt
cmc
loopne
hlt
xor
jecxz
ljmp
cmp
rclb
aas
pushl
loope
lahf
inc
xchg
cmpsb
cmpsb
xchg
insl
scas
aad
js
pop
sbb
iret
loope
fisttpl
dec
add
sbb
xchg
into
cmp
nop
jo
or
inc
adc
test
scas
or
push
sub
mov
mov
jne
rclb
inc
pusha
xchg
pop
dec
mov
mov
jae
test
aam
lahf
orb
in
stos
lock
pop
dec
jle
cmp
call
push
in
scas
rorb
mov
jl
dec
sub
pop
push
scas
push
or
in
pop
fs
dec
popf
imul
mov
or
or
imul
leave
cmp
int3
out
jne
stos
jmp
mov
sub
lret
push
push
or
sahf
lods
add
jl
pop
lahf
stc
jmp
push
lods
inc
mov
sub
in
and
ret
sbb
dec
sbb
ja
jle
xchg
icebp
and
addr16
mov
int
xchg
xchg
jne
insl
dec
stos
push
push
dec
push
ror
dec
test
pop
nop
xchg
mov
xchg
add
je
test
inc
or
mov
adc
sub
inc
xor
xor
push
mov
movsl
inc
mov
xchg
push
cmpsb
stc
jmp
mov
scas
fsubs
pop
xchg
jg
xchg
mov
arpl
rorb
lods
push
cltd
dec
and
add
mov
mov
popa
roll
jg
sahf
xor
mov
dec
jo
std
mov
loop
jmp
jecxz
lcall
jg
jmp
mov
in
in
push
pusha
es
dec
lock
mov
aam
ret
xchg
loopne
mov
mov
call
sbb
es
dec
push
lds
mov
stos
inc
jne
clc
mov
pop
mov
adc
lahf
sub
mov
or
and
cmpsl
xlat
lahf
mov
xlat
mov
sbb
and
jae
cmpsb
xlat
xor
pop
mov
test
fidivl
jge
xchg
add
fmuls
dec
mov
aaa
push
jecxz
lds
js
push
divb
cmp
add
xor
dec
xchg
adc
rcl
or
jge
icebp
ljmp
daa
fidivrs
mov
jg
mov
scas
sbb
xlat
pop
aaa
mov
loopne
cmp
inc
ret
pusha
dec
mov
jno
add
fstps
and
fisttpl
dec
fdivs
int
dec
xchg
sub
ja
das
cmp
dec
inc
sbb
xor
xchg
xchg
mov
cmpsb
inc
inc
pop
xchg
pop
ds
jl
xchg
sub
loopne
sbb
sarb
push
mov
cli
sbb
in
leave
mov
idivl
mov
lea
in
test
xlat
sub
cmc
sti
mov
xlat
cmp
xchg
jnp
dec
icebp
sbb
xor
inc
add
ret
and
jmp
pusha
lock
popa
dec
push
sarl
hlt
add
lret
insb
repnz
inc
jnp
ja
stos
fsubrl
jg
frstor
xor
adc
add
in
pushf
adc
mov
inc
hlt
lods
mov
pushf
xchg
int3
sbb
mov
add
mov
int3
pop
popa
cltd
sub
and
popa
sub
inc
push
std
mov
xchg
sub
dec
addr16
jae
lock
lock
cmp
mov
xrelease
pop
sub
add
jmp
xor
jb
jecxz
les
fwait
add
js
dec
xchg
xchg
lds
mov
pcmpeqw
loope
sub
repnz
es
push
cmovbe
ss
in
xchg
mov
incl
xchg
fidivl
cs
cwtl
ja
mov
sbb
rcrb
mov
pop
jecxz
mov
test
add
mov
dec
push
cmp
bound
orl
lds
cmpsb
mov
pop
pop
faddl
adc
push
mov
scas
loop
rcll
jns
and
arpl
xor
sub
mov
cmpsl
push
or
fwait
in
pushf
mov
and
es
movsl
jnp
aas
stc
outsl
jle
jns
push
repnz
lcall
dec
mov
dec
mov
test
mov
call
pop
dec
pop
mov
pushf
test
subb
cmp
mov
loope
cmpsb
leave
mov
jmp
sub
ja
inc
mov
fmull
jecxz
push
and
dec
sbb
aam
sbb
inc
xor
adc
mov
cmp
sbbb
add
lods
xchg
iret
mov
leave
loope
mov
flds
cmp
xchg
mov
outsb
lods
adc
push
fwait
mov
jle
sahf
inc
or
iret
mov
sub
and
shl
mov
std
mov
adcb
pop
mov
sti
call
xlat
idivb
imul
jbe
dec
push
xchg
popf
dec
mov
xor
ja
mov
pop
repz
repnz
pushf
sbb
mov
dec
cmp
adc
mov
xchg
and
dec
shll
sbb
jne
ljmp
jbe
hlt
icebp
push
lret
cld
maxps
js
adc
lds
fiaddl
mov
fiaddl
icebp
or
stos
in
popf
sbb
pop
sbb
fsub
pushf
and
out
xchg
inc
hlt
sbb
cltd
jg
xsha1
cmpsb
iret
sub
shl
outsb
push
push
jmp
dec
dec
int3
roll
movsb
sbb
and
push
mov
stos
inc
lcall
dec
jnp
addb
or
mov
xchg
mov
xchg
inc
or
push
pushf
aas
das
push
xchg
add
inc
pop
lds
mov
outsb
sub
lret
fwait
pop
lods
mov
and
subl
int3
sahf
sbb
loop
sub
lret
cmp
dec
cmp
sub
imul
push
repnz
add
and
in
jno
cmp
dec
cmp
push
add
aam
bound
mov
mov
jo
roll
rcr
icebp
sbb
lret
stos
cli
xor
int
into
scas
lods
int
pop
push
daa
lea
repnz
sub
jl
cmp
hlt
push
enter
leave
push
pop
push
dec
ja
cs
out
sub
cs
cmc
or
daa
sbb
enter
insl
add
jb
xchg
insl
push
fnstcw
clc
lcall
and
xchg
mov
sub
frstor
push
mov
adc
jae
mov
jg
xor
pop
add
cmp
sbb
jb
sbbl
push
call
cmp
ljmp
add
mov
add
les
mov
jne
mov
jle
loopne
cmp
orb
bound
mov
mov
jg
xchg
movsl
jp
scas
adc
out
push
arpl
fstpt
jle
pop
cmpb
fwait
roll
sub
adc
add
pop
sub
ret
jle
call
mov
aad
adc
inc
pushf
ljmp
mov
xor
or
jns
pushf
or
inc
sbb
fcmovne
sub
cld
cmpsb
outsl
xchg
lahf
mov
sahf
or
jns
fidivrl
mov
mov
inc
sbb
jl
out
xchg
pop
rorb
push
repnz
inc
or
xor
push
or
and
xchg
out
stos
and
cmc
mov
sti
mov
push
jne
insl
jb
push
push
and
push
loopne
sbb
cmp
adc
rclb
jmp
cmp
dec
popf
jle
push
xchg
je
adc
xchg
cmp
aad
add
or
jbe
ds
mov
push
mov
inc
jg
adc
in
sbb
jg
dec
es
icebp
add
xchg
add
js
adcl
mov
jge
aam
adc
mov
rclb
lods
mov
sub
xor
pushf
xchg
shlb
adc
rcl
mov
je
sub
cmc
stc
cvtps2pd
xchg
push
dec
mov
lret
jb
scas
ret
ja
or
sub
adc
lret
lds
cmpsb
sahf
mov
mov
mov
jae
jno
in
int3
inc
int3
jge
fnstenv
add
aas
shl
cmp
out
or
jmp
out
mov
push
jo
xchg
push
xchg
and
add
rclb
xor
loope
adc
pop
xor
aaa
mov
push
mov
cmc
arpl
ret
movsb
pop
lret
push
aas
and
dec
scas
xor
dec
call
sarl
xchg
imul
pop
inc
fcom
sub
mov
push
adc
aad
out
cwtl
nop
sbb
sbb
not
cld
xor
dec
xchg
iret
lahf
inc
and
mov
cwtl
call
jecxz
cmp
jns
cmp
jp
mov
sahf
pop
pop
lahf
daa
adc
cmpsb
sahf
stos
lahf
fmuls
inc
lcall
pushf
jae
rcll
bound
push
xor
popa
sbbb
cmpsl
das
in
inc
rol
mov
mov
imul
and
test
xchg
mov
leave
inc
pop
xor
mov
in
into
mov
fcomps
ret
sub
inc
cmpsb
xchg
dec
mov
xchg
inc
decl
lock
sub
adc
aas
mov
add
test
inc
in
push
mov
cwtl
test
mov
fs
mov
dec
je
sub
adc
adc
xor
fcmovbe
dec
in
jg
lret
sub
mov
mov
and
out
ss
jbe
imul
iret
dec
sbb
js
or
int
sarb
cmpxchg
jns
jbe
movb
xchg
cmp
mul
or
fdivrs
in
out
and
xchg
mov
lods
add
inc
inc
xchg
xchg
dec
scas
push
decb
dec
hlt
mov
jbe
sbb
jl
test
lret
sbb
adc
lock
mov
sub
int
fst
xor
sarb
icebp
lret
add
enter
je
sub
mov
mov
xchg
inc
inc
outsl
cltd
fmul
push
pop
daa
mov
cmp
jbe
and
adc
addr16
std
inc
rorb
jl
jns
xor
stc
lret
and
fwait
pop
loopne
mov
push
in
or
mov
xor
cmpsb
mov
mov
lahf
gs
scas
jb
pop
nop
incb
scas
or
mov
mov
push
xor
mov
movsl
movsb
shrl
test
push
jp
push
jge
lock
adc
cld
ret
pop
mov
shlb
adc
int3
pop
cwtl
iret
mov
xor
inc
mov
push
jmp
lcall
mov
jecxz
jo
adc
push
int3
adc
lods
add
xchg
enter
or
lcall
sarb
inc
rorl
inc
clc
inc
push
scas
fsubs
mov
lcall
movsb
jecxz
sbb
lret
movsl
dec
jbe
push
cs
gs
fdivrl
xchg
stc
adc
cltd
mov
es
and
mov
dec
mov
push
pop
stc
mov
mov
mov
bound
fisubrl
out
sub
inc
sub
sbb
inc
xchg
idiv
xchg
and
push
mov
incb
adc
and
ljmp
xchg
sbbb
xchg
sbb
movsl
xor
gs
jg
ja
jl
mov
mov
aas
or
dec
mov
rcl
inc
xlat
pop
inc
aam
pop
lock
mov
or
in
divl
in
xor
lods
mov
xlat
mov
bound
sarl
insb
mov
xor
std
sarb
shrl
sub
add
push
sub
jbe
fcomps
push
scas
sbb
mov
sub
adc
fistps
jne
mov
dec
cmp
sbb
out
push
mov
lcall
xor
jns
xchg
add
gs
jno
sbbb
outsb
add
out
jne
hlt
icebp
mov
adc
mov
cs
push
lret
mov
jle
shlb
bound
xorb
fmull
psubusw
add
scas
into
arpl
incb
aas
mov
mov
xor
loopne
mov
aaa
mov
xchg
aam
sub
cmp
insb
clc
jp
pusha
ret
and
push
scas
out
arpl
sbb
cmp
outsb
sub
xlat
mov
push
push
sbb
push
fdivrs
sub
or
or
das
arpl
outsb
adc
pop
adc
jbe
pop
push
movl
repz
call
push
stos
add
add
inc
dec
lods
and
sbb
add
xchg
cs
mov
mov
ds
movsl
jbe
fsubp
mov
dec
test
out
mov
rorb
xor
mov
cmp
sbb
movsb
fisubrl
and
inc
mov
mov
ljmp
and
xchg
mov
add
pop
cltd
lret
push
and
test
adc
adc
fsub
out
imul
test
insl
mov
dec
mov
pop
mov
or
sbb
hlt
pop
mov
loopne
fimuls
sub
loope
aaa
or
sub
mov
pop
cmp
outsl
dec
sbb
rcl
shll
gs
sub
test
push
jl
popf
cmpsb
mov
pop
pop
adc
shr
add
mov
mov
shrl
cmp
into
sbb
scas
mov
js
dec
add
jp
push
jno
in
pop
inc
fnsave
fcompl
and
push
sahf
pop
mov
sub
xchg
pop
nop
fdivl
dec
sub
or
jae
adcl
outsl
stos
rorb
adc
fidivl
adc
push
imul
mov
pop
jp
adc
add
pop
js
daa
or
jns
bound
pop
xchg
call
int3
cmp
repz
adc
outsl
or
outsb
out
sbb
inc
mov
aad
shld
inc
insl
push
and
push
xchg
cmpsl
pop
lds
mov
xchg
jae
daa
cmp
movsl
mov
fisttpl
pop
lock
and
pop
les
addr16
xlat
fimuls
adc
add
jne
imulb
call
call
xchg
sub
loope
push
iret
xchg
cmp
mov
push
or
fsubrp
and
jge
inc
fimuls
xchg
or
aad
xchg
daa
in
xchg
jb
pop
outsl
movsl
movsb
jae
cmpsl
xchg
adc
mov
ds
xchg
jecxz
aas
inc
pop
ja
lahf
and
mov
add
in
fst
push
leave
mov
xchg
lret
sarl
sub
lods
push
sub
push
xor
loop
lods
insl
jno
je
mov
adc
jle
or
xor
push
inc
hlt
jbe
addr16
jle
mov
mov
lret
jp
cmp
xor
imull
aad
or
xorb
sub
push
mov
dec
xlat
push
sahf
sbb
shl
cmpb
dec
inc
aaa
add
adc
sbb
adc
ds
cmp
or
sub
mov
outsl
sbb
xchg
pop
lods
in
stos
jmp
jns
xchg
mov
aad
jne
push
mov
int3
andb
scas
stos
jo
cmp
push
adc
rolb
xor
addr16
xor
ds
popa
adc
mov
sub
pop
sbb
sarl
and
jb
std
xor
aam
repnz
jg
subl
pushl
test
push
xchg
mov
aad
lcall
xor
nop
aas
lods
mov
push
dec
mov
add
xor
inc
or
inc
fsubl
fwait
add
mov
aam
jae
mov
lret
fstpt
scas
jmp
out
shld
mov
push
addr16
aam
sbb
and
repnz
push
sbb
cmpsl
ljmp
fisttpll
cmp
sbb
insl
add
xlat
out
cmp
add
aam
jbe
mov
mov
jl
fnstcw
inc
pop
divb
pop
push
in
test
jge
mov
sbb
ds
rorb
and
pop
mov
jne
jnp
adcl
push
arpl
sbb
jl
jne,pn
and
rorb
stos
daa
sub
std
adc
in
les
xchg
xchg
inc
imul
inc
jecxz
inc
xchg
adc
push
loop
pop
nop
xor
pop
int3
jns
das
int
and
push
lahf
stc
mov
xor
inc
dec
imul
and
fwait
int3
push
jg
jecxz
pop
cmc
pushf
xchg
enter
mov
xrelease
sub
fisubrl
test
inc
pop
mov
mov
loopne
mov
mov
lret
mov
adc
lahf
add
insb
xchg
sbb
cmp
sub
nop
mov
xchg
movsb
sbb
sbb
movl
cmp
add
push
hlt
dec
ret
pushf
out
push
mov
jl
test
data16
or
out
addr16
xchg
inc
mov
mov
and
mov
sub
pop
sbb
inc
repz
sbb
fmuls
cmpsb
call
mov
sbb
pop
aad
or
icebp
sbbl
adc
pop
dec
pusha
pop
add
clc
cmc
xor
jmp
inc
aaa
add
adc
aad
xchg
faddl
scas
push
inc
mov
xorl
adcb
aam
and
mov
imulb
repnz
ss
movsb
scas
mov
jo
std
push
rclb
std
mov
arpl
dec
push
sub
movsb
iret
test
aam
std
push
ds
mov
add
jl
mov
cmp
test
xchg
sbb
mov
mov
and
and
inc
popf
dec
gs
pushf
and
je
mov
add
pusha
xor
shll
mov
lahf
mov
jl,pt
sbb
flds
pop
fdivs
xchg
dec
push
scas
je
dec
jns
scas
or
sub
sbb
enter
in
daa
mov
popf
into
mov
or
xchg
or
lock
pop
loope
nop
rcrb
cs
jns
xor
jl
pop
xchg
cmp
mov
rcr
mov
rcl
jp
in
jl
jo
nop
js
arpl
sar
sub
bound
sti
sub
sbb
icebp
in
imul
imul
and
shll
add
mov
arpl
popf
imul
jg
sbb
call
sahf
xor
movsl
xchg
fiadds
ret
gs
mov
cmc
ret
incl
add
xchg
mov
xchg
pop
iret
pop
pop
ds
push
sub
pop
pop
bound
outsb
mov
sysenter
or
sti
xor
rol
jmp
xchg
fcmovnu
enter
lds
mov
pop
outsl
jbe
jae
dec
jae
int
mov
sahf
clc
dec
pusha
lret
lods
fldenv
cltd
ds
push
pop
push
cmp
leave
push
xor
aad
push
jecxz
xor
rolb
push
add
nop
cmpsl
ret
stc
les
ret
sahf
mov
adc
call
or
xor
jmp
sarb
add
sti
dec
push
popf
jmp
fistpll
or
pop
adc
outsb
outsl
mov
push
call
mov
mov
cli
data16
inc
movsl
icebp
push
mov
stos
mov
shl
movsb
jmp
ficoml
clc
jg
push
ds
cs
std
pop
out
inc
data16
lahf
inc
mov
xchg
mov
rcr
sub
jmp
and
add
cli
jp
or
js,pt
push
xor
into
sbb
fmul
xor
stos
jne
push
jnp
ja
lea
bnd
mov
mov
rcrb
mov
xchg
outsb
repnz
jno
fcoml
nop
sbb
out
sti
jno
mov
mov
shl
mov
push
pusha
sub
mov
pop
in
dec
dec
add
inc
cli
jnp
adc
hlt
jno
imul
push
call
sbb
in
add
cmc
mov
aam
inc
adc
xor
fnstcw
fistpll
lretw
dec
push
into
stc
dec
push
cmp
addr16
jp
mov
push
cmp
dec
roll
push
lods
loop
mov
stc
dec
imul
and
xor
clc
xor
into
jmp
das
lret
or
mov
mov
ds
fdiv
dec
std
lock
cmp
fs
xor
rcrl
mov
xchg
outsl
mov
cmpsb
insl
adc
cmp
xchg
mov
mov
daa
push
in
fisubrs
cmp
sub
push
rclb
fwait
sbb
fs
cmpl
notb
sarl
js
ljmp
out
jle
data16
dec
loop
movsl
aam
push
dec
push
pushf
pop
scas
lea
cmp
mov
or
aaa
lds
inc
push
and
mov
pop
mov
sub
and
pop
adc
int3
cmp
push
and
bnd
xchg
mov
jp
xor
xlat
mov
pusha
jp
lds
adc
mov
stc
sbb
lds
adc
jg
faddl
enter
sub
aam
cld
push
lret
dec
pop
xchg
lea
jno
cltd
pop
and
add
bound
jnp
movsl
jbe
pop
shr
stos
mov
leave
inc
pminub
fistl
dec
xor
dec
divl
call
pop
push
push
mov
ficompl
setb
or
push
shl
scas
pusha
je
stos
lock
jge
sbb
pushf
pop
cmp
int
lock
negb
mov
stc
dec
cmp
mov
or
fmulp
loop
sub
add
add
xor
push
or
notb
into
and
dec
or
lea
out
popf
stos
stos
add
adcb
stc
jl
dec
xchg
adc
imulb
gs
insb
test
fnstenv
inc
pop
daa
in
in
mov
sbb
push
cld
mov
sbb
in
or
paddsb
mov
adc
mov
cld
sti
testb
fiaddl
pop
mov
bound
cmpsb
bt
stc
dec
push
lret
repz
aad
int3
cmp
pop
test
sub
push
push
mov
cmpsl
out
hlt
iret
in
ljmp
xor
add
mulb
mov
lock
or
cmp
jle
lret
xchg
jmp
adc
das
sub
in
call
pop
push
mov
sub
xchg
add
xchg
gs
push
cli
mov
inc
lea
cmpsl
or
shr
xor
in
pop
xchg
sbb
jg
sbb
out
sbb
mov
push
jecxz
popf
enter
in
inc
stc
fs
in
jne
arpl
and
pop
inc
aam
dec
mov
scas
or
out
add
fs
push
jne
popa
cmp
jo
lret
pop
xchg
cmp
filds
loopne
je,pt
pop
fwait
ret
add
and
dec
ret
ror
or
pop
subb
jecxz
insl
jle
sbb
sub
and
aad
jne
and
out
push
xor
lret
push
push
insb
outsl
rorl
js
or
and
push
adc
and
jp
sbbb
shl
jecxz
scas
loop
test
test
std
jae
fcomp
sahf
fdivrl
in
sbbl
lods
test
mov
lock
pop
les
addr16
fiaddl
repz
xchg
and
cmp
loop
les
jae
mov
mov
leave
pop
jge
int
mov
add
out
sub
bound
addr16
and
data16
repnz
arpl
test
out
fidivrl
popa
ja
sti
mov
int
dec
xchg
jp
xor
jo
fcompl
loopne
mov
pop
sub
out
xor
jmp
mov
into
test
stos
call
loope
inc
cmp
scas
fadds
dec
dec
push
fnsave
xchg
call
push
insb
sub
or
ds
jnp
sub
inc
xor
sub
lods
in
stc
mov
sbb
add
sub
in
hlt
out
pusha
jmp
sbb
push
pop
into
repz
fistps
dec
int
in
ds
jae
dec
es
sahf
pop
mov
decl
jle
negb
imul
and
aam
fildl
ljmp
add
imul
inc
mov
jno
loopne
sbb
mov
repz
xchg
mov
jp
sub
mov
xlat
jbe,pn
inc
ljmp
push
mov
lock
xor
pop
xorl
bound
cwtl
sbb
scas
fnsave
in
or
pop
mov
push
mov
lret
outsl
adc
les
dec
cmp
cmovne
add
in
or
mov
inc
push
inc
mov
in
lods
clc
pop
adc
jecxz
iret
sti
or
test
frstor
mov
test
and
xor
jle
pop
popa
imul
sbb
xchg
dec
sub
push
arpl
xor
push
addr16
jns
jo
pop
cmp
sub
sub
pusha
lahf
jge
in
mov
jecxz
jnp
lods
fidivs
mov
enter
loope
hlt
cmp
add
ret
loope
shrb
loop
jb
dec
js
adc
loope
push
gs
dec
dec
cs
adc
aad
xchg
sbb
punpckhbw
sbb
xor
int
push
hlt
or
push
popa
into
cltd
jno
outsl
fidivrl
adc
jns
inc
add
or
aas
or
add
pop
imul
cs
jae
inc
pop
mov
cmpsb
pusha
xchg
data16
mov
pop
mov
ds
je
imul
lods
xor
icebp
int3
test
mov
pop
bound
xor
lea
popa
inc
imul
xor
pusha
push
mov
dec
int
into
insb
rcrb
xchg
fisubrl
testb
aad
and
sbb
into
lret
imul
inc
jle
mov
popf
bnd
inc
fwait
mov
mov
clc
xor
mov
jae
pop
mov
jbe
pusha
les
movsl
cmp
repz
out
or
xchg
std
add
outsl
clc
pop
jbe
fstl
jg
lods
cmp
jae
aaa
and
out
xor
fistpll
jnp
leave
pop
mov
ret
cmc
ror
sub
imul
std
fiaddl
sbb
xchg
push
mov
mov
decl
into
pop
mov
inc
pop
scas
cmp
and
mov
lcall
js
inc
mov
repz
inc
mov
popf
xchg
repnz
adc
popl
push
fabs
mov
loope
inc
in
push
das
lret
push
mov
xor
sbb
mov
je
or
lods
mov
cmp
inc
lret
out
sbb
adc
mov
sub
test
mov
push
lahf
arpl
in
loop
test
out
xor
in
jp
mov
cld
adc
dec
addr16
xchg
cmp
mov
insb
addr16
mov
idivb
mov
mov
mov
cmp
lods
jecxz
or
pop
icebp
in
dec
andl
fwait
imul
inc
push
cmpsl
aaa
inc
push
dec
add
pusha
nop
ja
stos
fidivrs
xchg
push
decl
in
popf
fcomip
pop
arpl
outsb
test
pop
mov
cmpsb
loop
and
mov
mov
rol
xchg
pop
test
movsb
xchg
fwait
out
lock
jge
jne
std
lret
sbb
push
xchg
inc
pop
push
fstps
xchg
jl
test
push
adc
xor
cmp
int
insl
dec
ret
stos
ret
fisttpl
jne
out
addr16
ffreep
aaa
add
cli
inc
xor
aam
lods
adc
popa
les
pop
ds
ret
jg
jecxz
movsb
cli
push
in
mov
jne
mov
mov
xor
lcall
and
and
int
repnz
jae
pop
addr16
jae
imul
mov
dec
mov
xchg
arpl
pop
pop
push
mov
int3
andb
jns
test
nop
cmpl
stc
mov
imulb
outsl
iret
loop
jg
adc
adc
outsl
sti
in
xorb
sbb
inc
mov
cmp
push
lock
pop
test
cmp
ret
jle
pop
fdivrp
push
sbb
mov
xlat
inc
dec
imul
movsb
pop
mov
add
push
cwtl
and
push
loopne
or
incl
lods
fxch
ret
pop
cld
push
fimull
std
push
pop
pop
xchg
pop
pop
xchg
or
pop
scas
aaa
xchg
mov
xchg
jle
jno
inc
cs
bound
inc
xor
shlb
mov
cltd
test
jno
repnz
push
mov
jno
movsl
or
pop
or
fiaddl
fisttpl
push
pop
mov
fildll
jecxz
xchg
push
sub
or
pop
pop
mov
repz
mov
sbb
xchg
setns
nop
dec
adc
push
xor
jnp
in
aas
pop
movsb
sbb
dec
shrb
push
loop,pt
adc
jp
aaa
mov
jl
movsl
mov
push
daa
or
jp
cli
sahf
or
outsl
push
inc
xchg
aas
clc
outsl
ret
pop
lods
cli
mov
mov
int
js
repz
xor
mov
loopne
cmpsl
xchg
mov
cmp
adc
xor
cmpsb
or
sub
sti
imul
sub
sub
lods
xchg
push
gs
out
and
std
mov
inc
outsl
shlb
push
iret
pop
into
mov
add
aaa
jle
lods
xchg
repz
les
loope
cmp
addl
adc
push
adc
lahf
sub
pop
sub
mov
ss
test
inc
jmp
fsubs
cmpsb
subb
mov
aam
ljmp
ret
es
dec
imul
lods
es
pop
sub
jne
out
sbb
add
mov
and
push
mov
mov
jb
xor
mov
xchg
aas
dec
push
and
and
or
xchg
cmp
fldl
xorb
test
add
mov
push
add
movsl
push
dec
ret
dec
std
jmp
xor
lret
xchg
data16
xchg
outsb
sbb
push
mov
mov
or
and
insl
icebp
incl
divb
decl
mov
outsl
mov
pushf
push
arpl
ljmp
xor
or
unpckhps
push
pop
xor
sub
jb
leave
sbb
jp
fcoml
out
inc
add
sti
cmp
shrl
cmp
leave
push
adc
rcr
push
xchg
sbb
pop
sbb
mov
shrb
pop
je
out
jae
aad
inc
roll
pop
cmp
dec
das
push
mov
stos
shll
scas
mov
popa
pop
cli
pushf
lret
mov
xlat
jmp
mov
pop
cmp
shlb
mov
imull
gs
mov
jno
inc
jg
fcom
out
mov
xor
test
dec
cld
xchg
fisubl
loope
lea
sti
ror
std
iret
insl
out
or
mov
cmp
gs
or
int
xchg
out
lds
mov
repnz
mov
xchg
adc
xchg
mov
add
in
xor
int3
mov
adc
pushl
daa
fists
lcall
je
and
test
xchg
les
ret
into
dec
xchg
cmp
sub
sbb
add
and
arpl
movsl
stos
and
shr
push
pop
jns
cmp
imul
movl
xor
cmp
cmp
cmp
xor
int3
push
lock
fcomps
lock
fnstsw
jmp
cli
inc
fwait
adc
sub
adc
pop
pop
push
mov
pop
jecxz
push
mov
push
pusha
mov
aam
pop
jae
inc
inc
adc
inc
inc
mov
ja
lcall
cmp
pusha
sti
or
mov
push
imul
or
cmpsl
mov
jmp
imul
push
les
sub
fsub
inc
cmp
sbb
jle
stos
mov
jne
lret
push
xor
mov
out
sbb
sbb
lock
out
sub
addb
push
pushf
insl
mov
pop
push
test
jg
lds
daa
mov
xor
fwait
int3
rcr
push
adc
jp
xchg
xor
mov
scas
lcall
in
arpl
jp
sbb
and
mov
cmp
loope
add
inc
hlt
test
arpl
js
int
inc
jb
mov
jno,pn
inc
xor
clc
xchg
lea
xor
or
jno
shrb
pop
ret
dec
xor
lret
xlat
dec
and
test
movsl
lret
pop
rolb
inc
aaa
incl
js
mov
jae
daa
xchg
jb
mov
mov
idiv
in
shlb
das
push
cmp
data16
adc
scas
lret
inc
pop
das
out
or
inc
fldcw
scas
lea
or
jb
or
push
mov
popf
xchg
sbb
nop
ret
sbb
shlb
or
ret
scas
inc
inc
mov
into
xchg
ds
xchg
mov
sub
fwait
sbb
out
inc
push
js
fildll
daa
inc
push
test
xchg
dec
mov
mov
sbb
dec
movsb
inc
sub
add
and
mov
out
fsubp
out
push
jb
popa
test
repz
ss
icebp
xchg
push
adc
push
out
pushf
mov
adc
xchg
push
jge
cmp
add
mov
xchg
pusha
mov
push
xchg
jmp
lret
jo
fidivrs
std
and
or
cmc
pop
pushf
or
push
rclb
jmp
cmpsl
jno
icebp
sbb
loop
jo
outsl
nop
es
cmpl
test
leave
cld
sbb
adc
test
xor
jae
scas
pop
std
xor
pusha
jmp
mov
rolb
xor
cmpsb
inc
mov
jmp
fs
sahf
sbb
xor
or
ror
mov
arpl
insl
inc
xchg
add
xchg
push
in
aad
rcr
shlb
dec
rorb
mov
test
test
in
xchg
daa
data16
push
add
xlat
adc
cmp
sbb
sahf
dec
or
bswap
jecxz
xchg
pop
sbb
scas
into
fcomps
xchg
clc
enter
outsl
jecxz
jp
test
movsb
add
sbb
push
jbe
daa
shll
add
enter
jae
int
fisubl
xchg
lds
xchg
dec
pop
out
lds
leave
sub
outsb
push
arpl
adc
xchg
popl
into
pop
inc
mov
xor
dec
lret
les
xlat
lahf
adc
jne
jo
in
jae
cltd
pop
mov
int
lock
or
outsb
push
jge
add
adc
repz
mov
inc
sarb
ficoms
lods
decb
insb
inc
call
repnz
cwtl
xor
mov
ret
out
les
fists
push
inc
mov
ret
cmpsl
imul
iret
dec
and
add
test
addr16
sub
xchg
gs
cmp
mov
and
xor
mov
cs
push
test
cmp
lahf
hlt
pop
aaa
jae
popa
cs
out
shl
aas
mov
sub
icebp
xor
test
aad
movsb
and
sbb
jo
sbb
push
dec
cwtl
loop
test
dec
inc
loop
add
divl
sub
sub
mov
cmpsb
ja
in
push
dec
xchg
jno
out
outsl
mov
jl
add
add
mov
dec
int
inc
fidivs
dec
fisttpll
scas
int3
inc
subb
inc
insl
icebp
add
test
push
repz
adc
cmpsl
add
outsl
mov
push
rcrb
sub
jp
push
cmp
lods
sbb
lea
mov
addr16
add
add
cs
jp
cs
outsb
rorb
rcrl
iret
mov
dec
push
stos
mov
clc
lea
jl
push
push
cmp
test
lcall
dec
frstor
pop
cld
push
lea
mov
xor
test
sbb
cmp
or
mov
pop
mov
pop
iret
cwtl
fs
into
test
fisubrs
std
int3
push
xchg
cwtl
mov
and
push
fs
pop
aam
sub
jbe
scas
jg
cmp
xlat
sub
insb
lcall
jns
adc
xor
dec
stos
adcb
mov
lret
movb
cmpsb
lcall
pop
mov
stc
xor
pop
out
push
setb
jle
clc
and
fdivl
push
push
xchg
pop
adcb
clc
popf
jecxz
add
dec
int
inc
or
sti
loop
aam
or
int
int
push
mov
add
jb
push
push
pop
sbb
sbb
jmp
xor
loopne
insl
outsb
adc
and
ss
into
lret
inc
insl
push
push
dec
sub
mov
cld
mov
jae
cs
fwait
daa
movsl
sbb
popl
or
mov
scas
gs
stos
adc
dec
inc
sbb
jmp
orb
sub
xchg
movsb
or
cmp
addr16
mov
adc
and
pop
sbbb
jp
dec
jl
add
cli
push
add
pop
inc
jns
arpl
imul
fwait
cli
and
dec
push
sbb
test
clc
insl
add
int
sar
mov
mov
nop
lret
and
outsb
mov
push
in
inc
cld
cmp
outsb
fidivl
push
inc
lret
in
pop
jge
cmp
jnp
lahf
sbb
dec
mov
or
or
addl
fstl
fwait
pop
mov
daa
cmc
sbb
xchg
inc
xchg
add
lods
jbe
inc
lret
sub
fidivrs
mov
arpl
xlat
scas
sub
xchg
cmp
das
leave
mov
dec
push
mov
jg
dec
cmp
stc
jg
adc
mov
fldt
lcall
cmc
movd
mov
decb
out
jb
push
pop
dec
mov
jmp
mov
sbb
nop
inc
jne
cmp
jecxz
adc
loope
sti
add
add
icebp
and
scas
jecxz
ss
mov
dec
and
and
incl
adc
or
mov
fwait
aaa
jne
movsb
neg
xor
cmp
and
mov
jb
cmp
xchg
lods
jae
lock
daa
jns
cs
cmc
stc
cld
outsb
or
sub
inc
ljmp
cmp
popa
cltd
jle
xchg
pushf
std
jno
jnp
nop
imul
mulb
pop
mov
inc
in
imull
adc
repz
xorb
cmp
fsubr
lcall
push
lcall
sbb
clc
dec
mov
jp
adc
mov
in
inc
sub
repz
xor
inc
shlb
sbb
mov
stos
jmp
into
sbb
push
call
xorl
in
cmp
faddp
aas
lds
xchg
cld
push
out
movsl
lock
lea
and
push
cmp
outsl
cmp
xor
inc
cmpb
or
mov
lods
cmp
sub
and
mov
add
sbb
loopne
out
pop
clc
mov
call
sbb
adc
jl
xchg
data16
mov
push
sbb
cmp
sbb
dec
cmpsb
rcll
mov
push
out
cmp
sub
pop
jl
push
leave
lcall
push
jae
shll
dec
mov
sub
dec
mov
pushf
or
xor
insl
jns
pop
inc
sbb
iret
scas
jg
or
or
mov
jl
adc
inc
push
pop
mov
mov
cmp
test
fildll
pusha
mov
int3
ret
pushl
nop
jbe
lock
sub
sub
jns
sti
cmp
mov
hlt
dec
roll
sbb
sub
gs
sub
dec
filds
push
cmp
insl
addb
adc
aad
add
pop
inc
xchg
sub
mov
or
repnz
inc
orb
push
sbb
loop
dec
jne
dec
cwtl
sarb
js
sbb
cs
shrl
inc
adc
test
push
add
add
jle
pop
js
push
mov
and
dec
out
cmc
fcoms
cmp
lods
jg
cmp
scas
dec
movsl
pop
sbb
into
movl
cmpsb
into
dec
xchg
cmp
ljmp
sbb
out
dec
aad
mov
lds
clc
sbb
imul
pop
loope
arpl
jns
lods
movsb
sti
pop
push
je
adc
cmp
fistpl
jae
fcmovb
stos
push
aaa
xchg
into
daa
pop
pop
dec
test
dec
sbb
pop
imul
in
mov
xor
int
push
cmpsl
out
sub
loop
rclb
push
inc
popf
jne
cmp
adc
inc
pushf
push
pushf
rcr
jo
popa
or
jns
loope
push
push
mov
ret
cltd
insb
mov
lds
mov
mov
sbb
cmpsb
xor
lcall
mov
loope
push
adc
or
inc
mov
push
jo
pop
mov
inc
icebp
inc
into
or
push
test
pop
clc
mov
lods
in
pop
mov
jecxz
pop
sahf
mov
cmp
sub
mov
mov
out
or
jge
loopne
add
stos
xor
popf
test
rorb
inc
pop
add
sub
mov
das
cltd
xchg
loope
cld
pop
repz
clc
arpl
xchg
xor
and
fcompl
xchg
adc
sub
fstpt
add
sbb
in
mov
pop
fsub
inc
xchg
xsha1
aad
and
jnp
jb
fwait
sub
stc
cmp
xchg
adc
mov
xchg
movsb
fildll
fldenv
cmpsl
mov
mov
loop
pop
mov
pusha
insl
mov
lahf
mov
jge
mov
fwait
xchg
hlt
jnp
shlb
mov
movsb
jae
and
movsl
mov
stos
cld
fistps
test
repnz
aas
jo
iret
rclb
push
arpl
nop
iret
mov
pop
pop
jge
iret
aad
sbb
imul
mov
test
call
mov
mov
shlb
dec
into
lock
dec
adc
in
sbb
nop
scas
mov
mov
fstl
xlat
mov
mov
push
dec
sub
enter
fiaddl
rcll
add
push
or
fidivs
push
mov
and
in
cli
dec
pop
dec
ja
jl
and
je
aas
sbb
pushf
fcmovb
pandn
pop
xlat
add
imul
scas
int
or
out
das
icebp
jecxz
xor
inc
ss
jae
jno
sbb
lret
insl
sti
jae
dec
add
call
lahf
fmul
icebp
push
les
dec
mov
insb
movsl
fucomi
cmp
lahf
imul
je
sti
mov
sub
in
or
test
call
sbb
mov
test
and
xor
or
out
inc
mov
test
hlt
sub
jmp
pop
mov
mov
in
sbb
mov
mov
push
sbb
ljmp
pushf
or
into
sbb
jno
ficomps
jns
cmp
stc
mov
pushf
dec
xchg
lret
or
pop
dec
inc
jb
shl
sti
pop
pop
aas
add
push
call
mov
pop
push
xlat
faddp
push
subb
popf
loopne
push
and
mov
mov
add
imul
cld
hlt
add
mov
arpl
flds
dec
pushf
bound
or
mov
inc
jg
inc
inc
lret
xchg
fimull
aad
popf
enter
cs
aas
sub
jo
mov
or
xor
and
pop
in
divl
imul
fwait
les
pop
sub
divb
ficoml
add
dec
mov
lods
xlat
es
mov
in
daa
fsubs
pop
cmc
pushl
xorl
push
xchg
jne
push
fs
jle
in
das
jg
das
xchg
pop
movsl
gs
pop
fisttpll
in
stc
fs
xchg
sbb
mov
xor
movsl
outsb
test
ljmp
std
or
sbb
mov
jle
mov
add
shlb
loopne
popf
push
mov
nop
or
insb
or
inc
xchg
ret
push
iret
hlt
js
enter
mov
xchg
cmp
rorl
test
int3
and
pusha
fdivrs
loope
dec
mov
ret
inc
sbb
pop
hlt
push
loope
stc
loope
sti
inc
mov
pop
scas
xor
bound
in
fstps
das
inc
xchg
fwait
push
das
subb
and
out
xchg
xlat
push
bound
mov
in
test
imul
call
inc
pop
jge
dec
insb
sahf
xorb
in
test
pop
add
pop
sub
pop
mov
pop
jecxz
int3
outsl
mov
dec
push
mov
mov
jb
mov
lcall
xchg
inc
test
icebp
popa
scas
das
push
mov
insb
cmp
push
mov
dec
pop
mov
adcl
decl
or
xchg
xor
cmp
add
stos
push
je
xchg
dec
das
cld
clc
mov
sub
xor
push
fbld
adc
je
sbb
mov
loope
outsb
loop
pop
sub
fsubs
mov
test
xorb
gs
out
adc
lahf
add
scas
test
adc
sbb
inc
leave
outsb
pop
fldl
xchg
add
xchg
enter
insb
push
adc
loop
sub
push
arpl
rol
imul
add
loopne
adc
xor
xchg
dec
test
lods
pop
xchg
cld
xchg
mov
pop
nop
jp
sbb
mov
inc
mov
lea
loopne
filds
inc
mov
pusha
hlt
stos
mov
sbb
in
mov
test
into
test
jle
bound
mov
out
sbb
call
andb
xor
int
add
loopne
popa
icebp
mul
mov
push
xor
mov
xor
mov
xor
adc
dec
and
sbb
lcall
dec
imul
gs
adc
xorb
adc
out
lret
sbb
flds
push
mov
mov
pop
out
fadds
stos
jp
fs
push
push
sahf
jae
pop
mov
add
sbb
push
test
ret
lss
mov
insl
mov
test
adc
pusha
sbb
lds
or
xlat
sahf
push
mov
scas
pop
mov
call
add
jne
icebp
pop
or
xor
add
xor
mov
icebp
mov
push
push
repnz
and
dec
jno
cmpb
mov
push
inc
pop
popl
xchg
insl
mov
cmp
insl
shll
aam
xchg
pop
xchg
sub
int
nop
or
xchg
aas
xor
and
out
das
scas
das
les
xchg
outsl
and
jmp
xor
bswap
inc
mov
sbb
cmp
popa
out
divps
inc
sbb
outsb
stos
push
push
fwait
mov
push
mov
sbb
inc
out
xor
popa
fisubrl
jmp
jne
mov
pop
push
cmp
mov
cmp
lock
sub
mov
add
inc
fs
in
dec
testb
scas
scas
mov
cli
sbb
inc
push
mov
rcr
iret
pop
shl
inc
idivl
repz
add
fidivl
cmp
arpl
insb
cmpsb
adc
in
aad
addb
add
lea
popa
inc
and
jl
add
scas
pop
adc
in
xchg
int3
nop
sti
lret
pop
leave
pop
and
inc
inc
sbbb
mov
scas
mov
pop
decb
lods
xor
mov
mov
dec
adcl
inc
test
cwtl
out
mov
jge
pop
mov
mov
cmpsl
loop
jecxz
incb
call
jb
and
push
subb
adc
lock
leave
lock
add
imul
adc
xlat
xchg
mov
dec
cwtl
xor
insb
push
jp
jnp
cmpsb
icebp
jl
pushf
adc
sub
loop
mov
fs
and
xor
dec
mov
mov
adc
pop
mov
in
lods
pusha
pop
aad
hlt
outsb
cmp
push
in
jg
pop
sub
mov
iret
mov
push
jns
sbb
jae
call
pop
and
stos
mov
sbb
lea
das
xchg
xchg
pop
lea
call
jmp
daa
add
pop
mov
cmp
mov
jnp
cs
jl
and
fdivrl
or
mov
jmp
hlt
pop
loope
daa
test
jb
xchg
imul
cmp
xchg
ss
push
gs
add
push
add
mov
push
gs
xlat
cld
mov
jb
pop
sbb
mov
jne
popf
inc
std
pop
pop
arpl
add
sbb
mov
ficoms
mov
int3
cmpsl
inc
hlt
rcrb
stc
pop
sar
sbb
pop
jno
and
clc
or
inc
in
xchg
js
sbb
cli
imul
inc
adc
dec
daa
pop
xchg
imull
cld
mov
cmp
ret
punpckhdq
xchg
mov
adc
lds
dec
imul
imul
adc
add
pushf
pop
xlat
inc
clc
ret
adc
jg
sub
sbbb
ficoml
or
xor
fdivrs
imul
mov
jecxz
test
jnp
aam
subl
int
jnp
pusha
fistpll
mov
dec
je
cmc
movsb
aas
insb
loop
inc
cmp
test
xor
dec
cmp
in
cmpsl
repnz
mov
jmp
pop
imul
jecxz
push
jnp
cltd
inc
mov
daa
imul
fisubs
aas
pop
pop
lret
cmpl
inc
xchg
aad
dec
sbb
adc
js
push
orl
ds
or
push
xor
and
lret
dec
ja
pop
imul
movl
xchg
cmp
les
adc
push
mov
cmpsl
nop
popf
xchg
lods
xchg
jb
or
jo
pop
lahf
sbb
imul
pop
jns
and
push
cmc
jno
push
jbe
mov
das
jno
ljmp
cwtl
mov
sub
or
cmpsb
leave
cmp
fwait
cltd
xchg
jg
xlat
sub
aas
cmp
aam
sub
mov
dec
mov
push
incb
sbb
dec
ja
mov
and
es
mov
jp
dec
xlat
testl
in
pop
clc
mov
push
ss
or
dec
mov
dec
loop
std
es
stos
movsl
xchg
jnp
or
mov
dec
out
lock
stos
sub
xchg
adc
ds
adc
adc
jp
les
cmp
push
sub
outsb
test
clc
ljmp
cmp
xor
push
or
mull
ffreep
iret
and
and
push
loopne
lea
fildll
inc
gs
addr16
shll
inc
rol
mov
sbb
cli
and
stos
jne
sbb
lods
cmp
loop
aad
push
jge
inc
push
sbb
aas
movsl
jae
call
aad
cmpsb
popl
jge
mov
mov
pop
cmp
push
cwtl
orb
xchg
andl
fnstcw
or
or
stc
insl
and
push
mov
sbb
mov
pop
sbb
inc
and
inc
sti
adc
xchg
cmp
clc
fistl
push
xor
pop
sti
pop
fsubs
mov
adc
xchg
xchg
pusha
outsl
and
push
xchg
sti
inc
adc
and
scas
mov
nop
and
sub
lret
push
insl
repz
mov
pop
insl
cmc
gs
in
mov
cmc
dec
sbb
out
add
scas
dec
mov
add
cmpsl
pop
sti
test
cmp
aad
sbb
in
repz
adc
sti
push
lcall
cmp
fstl
call
mov
aam
rolb
sahf
lgdtl
aaa
iret
inc
iret
mov
jl
cmp
push
jg
xor
pop
jmp
call
out
and
fcomps
aam
ds
mov
sub
or
in
pop
mov
mov
mov
xor
bound
in
outsl
jae
cmp
fbstp
and
lods
push
push
or
xchg
test
cmpsb
nop
dec
inc
arpl
push
xchg
leave
es
mov
pusha
and
int
and
aam
pop
bound
sbbl
in
leave
push
inc
test
push
mov
xchg
push
icebp
rcrl
dec
lret
pushf
leave
push
add
and
dec
pushf
testl
cmp
rcll
jno
or
or
xor
mov
dec
lods
jno
movsb
leave
fisubrs
movsl
clc
out
push
lret
outsl
and
push
imul
mov
out
sbbl
clc
jp
mov
in
outsl
inc
hlt
js
push
subl
out
decb
jge
mov
iret
pop
mov
add
sub
hlt
cld
int3
lcall
es
fiadds
orb
pop
sub
sbb
mov
mov
lret
pop
cmp
mov
outsb
or
fcmovbe
or
dec
insl
mov
adc
loope
cld
xor
out
jge
aas
fcmovne
adc
or
jns
arpl
pop
iret
xchg
test
ret
sbb
aas
cmp
fadds
dec
stos
gs
inc
fisubrs
loop
insl
xchg
shll
outsl
dec
shr
pop
sub
jecxz
ror
shrl
mov
or
or
push
insb
cmp
in
ja
mov
jl
clc
leave
push
add
jno
shlb
adc
sbb
push
pop
lods
enter
stos
jno
inc
testb
out
fcmovnbe
push
sub
jecxz
and
out
jb
sub
or
add
mov
mov
shll
mov
loop
sbb
repnz
inc
and
nop
jl
jle
jle
loopne
pop
or
jecxz
sub
xlat
outsb
or
inc
ds
xor
aad
ds
arpl
lret
mov
cli
push
pop
inc
inc
mov
push
pop
mov
or
popa
rep
popf
insb
je
cmpsb
jo
adc
xchg
xor
fdivrs
mov
add
xchg
or
sub
sub
pop
inc
ret
arpl
ss
out
popa
or
int
mov
es
jae
inc
sub
cmp
insb
xor
push
sub
ret
cltd
inc
test
add
sub
ret
ljmp
pop
inc
movsl
out
imul
subb
cli
adc
ss
cmp
in
ljmp
mov
or
aas
sbb
pushf
es
cmc
popf
adc
and
push
out
mov
sbb
cmp
adc
int3
dec
xor
in
dec
add
inc
outsb
xor
fs
push
sub
fcoml
lea
mov
push
jle
push
aas
stos
notl
mov
inc
inc
addr16
jmp
fwait
lret
jp
bound
jne
and
and
mov
inc
push
cwtl
mov
adc
jnp
push
outsl
mov
rorl
ret
ja,pt
inc
je
pop
loopne
sub
pop
sbb
jl
jmp
push
rorl
sub
sbb
js
adc
es
push
lret
pop
pop
xor
sub
push
cmpsb
jo
nop
addr16
pop
mov
mov
imul
je
inc
sub
bound
jg
jmp
decb
mov
stc
std
popf
es
in
out
rolb
jae
or
or
subb
stos
adc
add
dec
nop
scas
push
sbbl
push
push
or
pop
hlt
cmpsb
push
xchg
inc
cld
icebp
jge
adcl
adc
pop
lods
loope
add
jo
data16
popf
into
out
sbbl
aas
xchg
jl
hlt
hlt
sbb
aam
aam
dec
push
xorb
out
movl
pop
inc
push
dec
idivl
inc
push
stos
cli
lcall
cmp
xchg
enter
data16
pop
out
push
lock
outsl
lods
daa
and
dec
aad
mov
dec
cmp
mov
mov
adc
mov
ds
add
adc
or
in
xor
mov
mov
adc
lock
std
jp
lcall
dec
std
cmp
lods
mov
sub
sbb
or
ret
loop
pop
push
imul
cli
mov
out
inc
cmp
or
jg
jnp
add
sbb
imul
lret
add
cwtl
scas
loope
cmp
add
jns
and
stos
lahf
xchg
test
jo
imul
scas
mov
xchg
jb
pushl
pop
sbb
imul
sbb
adc
sub
inc
cmp
add
or
out
imull
sub
xor
mov
fildl
roll
adc
js
pop
push
arpl
push
cmp
adcl
mov
out
mov
pop
ljmp
mov
lds
cmc
and
xor
fsts
mov
bound
dec
inc
pop
fldl
add
mov
inc
out
push
and
movsb
cmpsb
call
adc
jle
mov
repnz
pop
add
addb
dec
pop
mov
gs
int3
rcr
lcall
insl
cwtl
sub
sarb
cwtl
movsb
loopne
xchg
rol
push
enter
sbbb
test
or
scas
js
or
movsb
lret
jle
mov
arpl
mov
pop
hlt
and
adc
mov
mov
inc
or
mov
mov
movsb
decb
bound
and
inc
scas
pop
or
addb
sbb
pop
test
pop
rorl
or
je
loopne
push
out
call
jmp
scas
dec
js
add
jns
call
mov
add
fidivrs
and
cmp
and
push
mov
or
dec
adc
mov
xchg
adc
idiv
add
sub
cmc
int
lea
scas
inc
pusha
lahf
bound
mov
repnz
mov
fs
leave
imul
lds
pusha
shl
shr
mov
mov
adc
pop
stos
cltd
sub
popf
pusha
inc
int3
lock
das
or
sub
clc
je
push
mov
xor
ret
loope
cmp
std
setl
clc
push
mov
ja
daa
outsl
mov
cli
mov
mov
inc
xlat
ficompl
lea
inc
push
imul
in
repz
xchg
inc
and
cwtl
nop
inc
lret
cltd
or
stos
ja
lods
fdivrs
jmp
pop
push
or
lock
out
movsb
xor
mov
cmp
adc
call
loopne
in
cmp
js
and
imul
mov
aas
aam
gs
loop
mov
dec
call
arpl
stos
and
cmpsl
lahf
cmp
xchg
add
pop
pop
mov
xlat
hlt
in
mov
sbb
pusha
dec
sbb
cmp
dec
push
and
add
mov
pop
add
sar
pushf
xor
or
pop
mov
or
xchg
es
mov
imul
out
ljmp
pop
mov
cld
push
mov
add
lods
loope
lods
call
add
popa
xor
iret
pop
stc
mov
test
push
imul
and
mov
xchg
es
loopne
mov
push
push
mov
cwtl
add
repnz
mov
mov
fstps
das
add
ja
push
mov
push
lods
loop
sti
test
shlb
icebp
les
xlat
jae
stos
and
test
pop
sub
std
xchg
subl
and
adc
jmp
mov
push
mov
push
orb
cli
call
xor
pop
mov
inc
popf
jmp
pop
mov
jp
inc
inc
xchg
pop
mov
or
cmp
fisttpl
and
lret
imul
jl
pop
or
repnz
push
pop
cltd
jmp
inc
xor
bound
xor
cmp
pushf
repz
add
mov
pusha
icebp
fisttpll
cmp
push
and
dec
enter
aam
iret
iret
rcl
in
sarb
shll
xchg
fld
insb
ds
lods
das
push
movsb
and
pop
sub
call
mov
xchg
hlt
add
hlt
xchg
push
inc
mov
jecxz
out
and
pop
ja
sub
push
mov
bnd
and
stc
out
dec
xchg
loope
dec
pop
es
jbe
rorb
ficompl
xchg
fnstcw
sbbl
dec
cli
sub
mov
jmp
xor
inc
push
aam
maskmovq
fcomps
gs
fistpl
push
inc
or
inc
and
cwtl
out
push
insl
and
imulb
aad
jecxz
cltd
adc
inc
dec
js
popa
cli
sbb
xor
and
xchg
js
cwtl
push
clc
pop
sbb
jae
mov
dec
sub
lcall
loop
in
xor
int3
clc
sub
in
arpl
dec
adc
stos
movsl
rcrb
dec
in
rcll
sti
xchg
jg
inc
lcall
in
push
jle
mov
enter
lret
mov
mov
adc
add
push
imul
repnz
test
sub
into
sub
insl
lods
fcompl
sub
mov
adc
sbb
cld
xor
adc
sti
mov
out
mov
adc
loop
mov
push
mov
sub
aaa
cmpsb
das
mov
mov
pushf
insb
lea
aam
push
cmpsl
push
lods
enter
das
sbb
cld
divl
or
lret
popf
dec
sbb
pop
insb
sarb
mov
push
dec
stos
loop
insb
clc
add
sbb
pop
pop
imul
dec
pop
lods
pop
or
cld
and
sub
repnz
cmp
rolb
mov
xchg
std
adc
es
movsl
xchg
xchg
in
hlt
adc
mov
sub
add
push
ja
in
les
dec
add
sbb
outsl
push
testl
pop
cwtl
cmpsl
xchg
icebp
xchg
add
add
adc
fsubs
arpl
xchg
cmpl
popf
add
add
fstp
jno
xchg
jbe
fidivl
jg
bound
cmp
pop
jmp
icebp
aaa
add
mov
jle
ficompl
xor
jp
or
push
cltd
iret
daa
loope
xor
icebp
jne
xor
frstor
rol
sbb
rcr
push
push
mov
imul
mov
fwait
jecxz
js
xchg
cmp
push
hlt
scas
sbb
test
jns
adc
cmp
inc
imul
xchg
popa
jge
stos
cmc
cmp
sti
insb
paddw
cltd
clc
dec
and
mov
in
cmp
fdivrl
pop
or
xor
lock
aam
mov
pop
icebp
add
lods
cmp
mov
jle
sbb
shll
sub
inc
ljmp
mov
sahf
outsl
jns
lock
movsb
imul
shr
xchg
ret
add
adc
jbe
lock
mulb
stc
sub
call
and
pop
out
sub
and
jno
push
jl
xchg
and
push
cwtl
or
xchg
es
bound
push
cltd
scas
popf
push
jmp
jl
or
xchg
fbstp
call
scas
mov
xor
pusha
push
push
test
push
push
push
stos
add
mov
xchg
outsb
loopne
mov
xor
adc
cmp
dec
adc
js
lret
iret
xor
jmp
dec
jp
inc
xor
sahf
mov
das
add
roll
hlt
notb
clc
xchg
and
mov
add
fcoms
inc
sbb
mov
inc
push
jge
out
jae
sub
js
xor
dec
cmp
call
adc
dec
mov
repz
xor
sub
dec
inc
shrl
popa
sbbl
fcoms
and
sbb
lret
jo
mov
das
jmp
xchg
stos
jge
xchg
ret
insl
or
pop
dec
cmp
xor
push
ds
lea
vshufpd
cmp
fldenv
je
cmp
popa
shll
add
mov
jae
inc
lahf
pop
pop
adc
es
sbb
aad
mov
hlt
stos
stc
popf
or
or
sbb
lret
inc
push
bound
js
int
or
loope
into
leave
loop
enter
xor
mov
or
mov
mov
ds
push
cs
lret
ljmp
cmp
mov
xchg
mov
lcall
pop
jl
push
test
or
mov
xchg
daa
jbe
sub
sub
mov
mov
into
daa
in
std
clc
test
xchg
loope
popa
testb
into
leave
inc
dec
fisubl
mov
stos
ljmp
adc
push
gs
mov
out
mov
cwtl
movsl
movsb
push
cwtl
lcall
je
sbb
mov
dec
pmaddwd
push
mov
icebp
xor
add
xchg
mov
std
loopne
in
ds
es
icebp
test
loope
mov
aaa
xchg
test
cmp
adc
rcr
add
push
xor
sbb
cli
addr16
pop
ret
mov
mov
out
xor
clc
dec
jnp
iret
fidivl
loopne
popa
pusha
imul
adc
pop
push
inc
fdivl
and
sbb
xchg
jbe
fwait
and
xchg
ja
push
jb
add
xchg
in
or
sub
rol
add
and
sub
loope
adc
pushl
or
or
mov
loop
sbb
add
insb
rcr
cld
inc
sbb
inc
pop
and
pop
add
lods
mov
test
iret
mov
iret
add
repz
or
push
adc
rorl
xor
mov
mov
cmp
ret
fst
iret
aam
lds
das
outsl
mov
sbb
fildl
mov
clc
adc
movsb
mov
les
cmp
pop
push
cmp
adc
rcr
or
inc
sub
add
stc
imul
push
int3
fbld
std
ds
call
inc
insl
clc
sahf
pop
mov
pop
cmpsb
mov
inc
out
inc
shrb
repz
fcmovnb
pushf
adc
xchg
out
jo
add
stc
mov
pop
jne
xor
mov
cli
jae
jnp
dec
pop
fldt
aad
rcrl
xchg
xchg
xorl
stos
add
push
movsb
mov
jl
enter
shrl
xchg
jle
and
pop
ss
ret
fsubl
add
cmpsb
nop
out
or
aam
pop
dec
ja
jmp
ja
add
test
mov
dec
aad
rol
fbstp
adc
dec
aas
dec
mov
sti
lcall
push
shl
lods
in
jl
call
ret
ja
das
mov
lret
sub
add
inc
push
push
cmp
pop
add
rorb
mov
fisubl
ds
xor
add
jmp
mov
xlat
xchg
mov
mov
sbb
jb,pt
ds
std
mov
js
fldenv
mov
dec
data16
xlat
push
sbb
push
sbb
sbb
mov
pusha
mov
xor
ret
add
mov
jns
and
cmpsl
mov
outsl
xor
aad
push
inc
cmp
and
xchg
xor
movsl
pop
gs
xor
push
movzbl
mov
cmp
fiadds
loope
push
push
fs
cmp
das
das
push
stc
inc
inc
and
inc
xor
adc
movsl
insb
sub
jbe
xchg
lea
push
in
in
lock
and
push
mov
add
es
adc
xchg
sub
int3
stos
clc
insl
and
push
mov
dec
mov
jp
cmp
dec
push
xchg
int
movsb
mov
or
fnstcw
mulb
dec
pop
popa
cmp
push
xor
call
xchg
roll
arpl
nop
mov
mov
lcall
xor
xchg
push
repnz
sbb
xor
sbb
add
fidivs
add
inc
sbb
sub
pop
cld
pop
lea
xor
daa
nop
jmp
pop
push
jmp
add
xor
mov
mov
repz
outsb
insb
sbb
jbe
mov
cwtl
imul
lods
jne
lahf
xchg
jp
ret
pop
out
aaa
roll
sub
lds
push
jp
lock
movsb
loope
add
mov
pop
inc
mov
mov
sub
inc
pop
stc
pop
pop
dec
lods
cld
into
cmpsl
outsl
idivl
and
lds
jmp
int3
or
mov
popa
mov
and
or
paddusb
adc
pop
xor
jl
mov
mov
cmc
and
jae
xor
pop
or
pop
pop
mov
sahf
xlat
jnp
mov
fs
aas
xchg
test
or
cmp
insl
sbb
jle
mov
std
mov
test
adc
inc
movsl
pusha
mov
mov
ds
in
add
inc
stos
cmp
sub
icebp
mov
pusha
movsl
dec
aad
inc
push
sbb
test
xchg
sub
les
call
lret
push
push
loop
jae
andl
imul
mov
and
test
lea
mov
mov
fst
mov
dec
mov
arpl
dec
sub
or
or
loope
jb
dec
cmc
jno
sbb
in
adc
aam
lahf
mov
sub
sahf
jnp
add
aas
cltd
xchg
int3
dec
ror
icebp
daa
jo
movsb
pop
int
inc
loopne
gs
pop
mov
cmp
xchg
dec
dec
out
add
dec
jmp
in
pop
orb
aad
pop
fwait
lret
and
repnz
push
dec
mov
cmp
jp
mov
in
repnz
stos
sbb
inc
mov
shll
cmp
cld
int
aas
fsubr
pop
mov
jno
xchg
sbb
loopne
fstpl
push
shrb
clc
sub
jl
cmc
inc
imulb
clc
out
add
cmpb
out
or
pop
clc
dec
push
and
push
and
add
cld
leave
dec
into
inc
ret
inc
lcall
scas
pop
aas
jmp
inc
div
inc
fisttpl
push
shlb
rep
xchg
jb
imul
xchg
movl
loope
negl
fs
adc
rcr
into
xor
jge
dec
js
inc
pop
fldl
jae
shrl
xor
xchg
sbb
lods
sbb
adc
cs
or
xor
pop
pushf
loope
ror
cmp
daa
mov
fsubrl
pop
pusha
fadds
mov
fildll
iret
jg
enter
fs
push
jbe
sahf
pop
inc
and
cltd
mov
orl
mov
int3
mov
pop
ljmp
pop
xor
add
mov
and
xchg
in
fnsave
cli
mov
int
sbbb
xchg
or
ds
adc
fs
out
subb
clc
cmp
imulb
hlt
push
aas
stos
add
int
mov
rorl
push
push
push
mov
rorb
mov
jno
cmp
imul
sti
add
jp
jl
std
sub
pop
iret
and
pushl
jle
fcmovu
mov
out
mov
pop
cld
iret
testb
push
das
filds
inc
lcall
pop
jo
adc
testb
lods
fimuls
aad
push
pop
movsl
adc
cmc
add
pop
clc
or
cmp
jbe
mov
fsts
mov
xchg
imul
dec
or
cmp
add
cmpsb
sbb
push
lret
lret
mov
dec
sbb
mov
xchg
push
pop
jno
out
add
cmc
sub
leave
int3
sbb
xchg
pop
or
lock
mov
repz
sbb
sub
hlt
inc
or
mov
or
leave
movsl
fisubs
stos
out
pop
aam
mov
adcl
cmp
out
enter
subb
push
aad
cmpsb
in
jo
cmpsb
sbb
in
push
jle
stos
and
add
fsts
xor
push
into
mov
leave
test
in
or
bound
pop
mov
bound
imul
data16
test
out
mov
mov
xlat
dec
pop
pop
adc
popa
pop
and
mov
fisubrs
sbbl
icebp
dec
into
xor
in
push
pusha
jbe
rcrl
fnstsw
mov
lahf
insl
aaa
sbb
loope
pusha
add
and
add
mov
jb
popf
lret
in
daa
push
mov
stos
jnp
pushf
sbb
fs
inc
scas
inc
and
jno
and
lock
push
outsl
add
adc
add
fs
jbe
into
xchg
add
ljmp
jge
mov
xor
push
sub
test
nop
xchg
push
inc
sbb
clc
imul
inc
add
xchg
jp
xchg
mov
hlt
icebp
test
cmp
js
stc
das
mov
push
push
add
inc
jae
mov
aaa
fidivrl
cld
jb
dec
repz
cli
dec
dec
cmp
push
sbb
lock
sub
fucom
sahf
movsl
fisubrl
add
jmp
gs
icebp
scas
xchg
mov
pop
dec
dec
pop
mov
dec
lock
dec
movd
icebp
sbb
push
sub
sahf
inc
mov
mov
arpl
lcall
stos
fpatan
lcall
ljmp
fldlg2
cmc
pop
push
adc
sbb
mov
sbb
xchg
cmp
insb
scas
clc
clc
push
hlt
jle
sub
mov
out
rcr
scas
xchg
adc
xor
out
or
cmp
aas
outsl
test
ljmp
in
pop
out
pop
je
xchg
inc
push
pop
dec
aaa
out
rclb
cmp
out
scas
shr
dec
ja
mov
aaa
imul
push
pop
adc
iret
pop
cs
mov
add
aad
inc
pop
stos
out
adc
ss
mov
mov
mov
andl
and
data16
mov
pop
rcl
add
clc
aas
add
iret
lret
dec
hlt
fsubl
push
pop
call
pop
rcrl
or
ds
into
mov
inc
ret
jbe
lods
inc
not
sbbb
lods
ljmp
push
and
enter
inc
ret
mov
ss
insb
and
xchg
pop
push
push
sahf
jo
test
dec
pop
or
mov
cmp
leave
mov
out
loopne
mov
cs
mov
push
mov
jae
outsb
mov
or
xlat
and
push
fwait
xor
push
fdivs
rol
or
dec
jnp
into
adc
stos
dec
movsl
lods
push
movsl
sbb
sub
inc
mov
mov
daa
test
sub
mov
or
pop
pop
stos
or
ja
push
jns
stos
mov
xlat
sbb
jmp
fsubrs
add
pusha
fwait
lahf
dec
ds
sbb
movsb
rolb
clc
push
ss
jmp
sbb
mulb
mov
es
insl
adc
push
jb
mov
add
sub
pop
hlt
ljmp
mov
mov
dec
xor
adc
xchg
jp
mov
scas
mov
inc
in
mul
xchg
push
dec
imull
ljmp
fidivrs
cmp
sar
scas
mov
outsl
cmpsb
jl
xor
mov
leave
pop
dec
sarb
or
outsl
faddp
fnstcw
dec
loope
sub
pop
dec
fxrstor
sub
mov
rcrl
fisubl
sbb
push
lods
jno
xchg
adc
ds
fs
or
aas
repnz
xchg
pop
scas
outsl
out
mov
cmp
fldenv
xchg
dec
hlt
incb
daa
pop
icebp
int3
shll
xchg
cmp
cmp
sub
outsb
or
cmpsb
mov
lret
shr
repnz
cmp
and
bound
scas
js
dec
in
in
mov
addr16
sbb
incb
xlat
jns
adc
xchg
pusha
cs
mov
push
pop
adc
loop
push
popa
popa
test
and
mov
leave
mov
push
enter
and
loope
dec
ret
dec
leave
ljmp
add
cmp
ss
icebp
push
jns
mov
xchg
insl
pop
pusha
out
orb
dec
mov
sub
test
inc
call
fsubl
jmp
push
sub
les
jg
bound
xchg
sub
std
ficoms
cwtl
pop
mov
lods
push
test
lcall
pop
das
scas
fs
mov
mov
jle
sti
dec
std
loope
mov
inc
push
mov
inc
push
mov
out
out
inc
aam
xchg
mov
addr16
sub
dec
xchg
dec
push
sbb
je
mov
fldcw
and
push
ja
call
shr
shll
sub
out
sub
sahf
jb
mov
jae
icebp
repnz
cmp
clc
xchg
mov
ret
jle
stos
mov
je
dec
pop
sub
add
arpl
fistps
fnstcw
addl
and
out
adcb
std
push
jb
repz
pop
dec
dec
mov
ja
fbstp
decl
hlt
sbb
push
ds
test
sbb
pop
arpl
cmp
push
lock
add
jmp
fcoms
loop
mov
push
es
xchg
repnz
test
jbe
dec
cmp
jb
or
aad
pusha
imul
imul
jle
adc
pop
mov
fisubl
pop
push
push
xchg
jae
inc
iret
out
push
pop
mov
add
xchg
and
popf
mov
jp
adc
pop
popa
lret
xchg
xchg
lock
xlat
daa
mov
jne
push
fdivs
mov
inc
pop
xor
pop
lock
mov
cmp
and
inc
cmc
loop
aad
sahf
outsl
add
loop
adc
add
cmpsb
cmpsl
test
or
xlat
out
cmpsl
incl
pop
ret
jae
add
inc
dec
cwtl
das
jbe
insb
inc
pushf
sbbb
adc
leave
sbb
add
in
mov
aas
incl
imul
je
xchg
lret
mov
or
adc
movsb
and
gs
cmp
jecxz
gs
inc
push
stos
nop
popa
mov
jecxz
ja
lds
jecxz
xor
pop
cmp
iret
add
ret
dec
bound
clc
aaa
adc
jae
pop
and
das
insl
xchg
arpl
stos
cmpsb
add
cld
arpl
sbb
sbb
aam
xchg
and
popf
pop
push
pop
imul
sbb
or
pop
push
or
lds
jecxz
jge
jbe
jnp
mov
out
push
jle
mov
mov
roll
aas
mov
lods
data16
dec
adc
pop
push
sti
ret
lret
jb
enter
pop
sub
sbb
jmp
adc
out
lods
lock
push
sbb
dec
aaa
in
add
pop
rorl
pop
movsb
mov
dec
stc
in
fimull
leave
sbb
pop
and
pop
test
add
ds
lods
in
push
jno
out
imull
add
and
idivl
cmpsb
icebp
dec
je
or
cmp
cmc
add
jne
cmc
and
mov
fisttps
push
pop
xchg
inc
pop
in
add
adc
jp
mov
cltd
daa
jnp
xchg
lret
scas
mov
jmp
mov
add
bound
pop
repz
sbb
test
les
aaa
ds
addr16
cmp
and
cmpsb
push
cwtl
adc
ljmp
adcl
jg
pop
dec
dec
sarb
inc
inc
jbe
aam
popa
pop
insl
ds
inc
cmpsl
jge
add
test
ret
out
adc
jp
pop
add
test
lcall
pushf
in
cmp
pop
add
mov
mov
dec
cmp
cmp
cltd
test
cmp
mov
lock
sbb
in
add
jl
outsl
mov
cmp
bound
add
rcl
jecxz
adc
jne
stc
decb
sub
pusha
scas
cmp
loop
in
jae
push
sub
fcmove
jle
andl
inc
jmp
imul
lahf
in
sahf
push
mov
xor
fstp
aam
add
clc
adc
push
jo
jle
mov
lock
mov
mov
pop
pop
cmp
mov
push
xor
in
ret
ret
repz
addl
pop
ja
sbbl
and
call
mov
dec
lods
dec
sahf
cld
push
fs
std
shrb
dec
lret
cmp
mov
js
in
mov
fbstp
mov
xor
sbb
mov
addr16
or
push
sub
daa
leave
xchg
xchg
cmp
sub
mov
or
inc
or
mov
hlt
sarb
ss
push
or
data16
jmp
or
sub
mov
lahf
xchg
das
iret
cli
pusha
in
arpl
or
sub
xor
cmc
xchg
fisubs
mov
jp
cmp
mov
mov
xor
dec
ret
adc
loop
xor
jl
insl
out
ret
push
pusha
int
hlt
mov
sar
adc
cs
pop
fwait
ret
out
mov
mov
repnz
out
pop
cmp
pop
roll
inc
pop
adc
and
xor
adc
jg
xlat
clc
fildl
out
jl
jmp
cmp
es
jae
movsb
cld
adc
out
or
jbe
out
testb
sbb
cmp
or
mov
aam
sahf
aas
mov
add
or
cmpsl
pop
push
xchg
jl
add
movsl
push
out
shl
mov
xadd
add
ficoml
popf
pop
xor
pop
imul
xchg
push
iret
and
loopne
loope
xor
je
nop
and
jne
enter
dec
fisubrs
mov
jl
add
lock
or
jl
jnp
hlt
mov
out
repnz
rcrb
jmp
int
and
pop
and
mov
push
mov
add
mov
mov
xor
sub
jge
xor
jne
subl
shrl
cmp
dec
sub
adc
ss
pop
mulb
ret
mov
loopne
xchg
sarb
hlt
imul
andl
roll
mov
push
xor
jnp
sahf
lret
enter
fidivrl
scas
jp
or
xor
in
pop
mov
mov
cmpsb
adc
adc
lret
cmp
stos
test
sub
hlt
aam
xor
dec
in
ds
or
inc
xorb
mov
out
outsl
sbb
jl
or
or
subl
out
lcall
cld
out
test
inc
mov
lret
push
scas
and
push
xchg
fcomip
loop
jp
dec
add
fstpl
test
fsub
push
jb
add
jle
cmpsb
ljmp
outsl
or
and
jecxz
sbb
mov
xchg
sub
xchg
imul
fisubl
lods
or
jle
clc
leave
ds
lock
cltd
and
loope
jecxz
sti
test
das
icebp
sbb
popf
add
mov
fcomps
and
ficoms
xor
rorb
sbb
test
stos
lret
xor
mov
push
xlat
lds
push
leave
xchg
jno
sub
inc
push
dec
iret
xor
mov
mov
push
cmc
xchg
jge
xor
imul
jecxz
es
in
fnstsw
sub
dec
fldl
cld
leave
mov
mov
jl
xchg
adc
stos
and
mov
push
mov
pop
sbbl
cmp
sub
push
xchg
add
lock
sbb
and
xor
dec
mov
repz
cmpl
dec
sbbb
and
out
stc
cwtl
scas
cmp
jae
push
test
fcomi
mov
test
hlt
adc
cmp
adc
roll
nop
jmp
sub
movsl
xlat
cltd
sbb
sbb
das
fistpl
xor
mov
xor
in
xor
xchg
xorb
pop
out
sub
inc
loopne
and
mov
lret
int
data16
inc
mov
aad
dec
mov
cmp
xor
mov
mov
out
pop
sub
icebp
jmp
cmp
mov
lcall
push
popf
mov
stc
aas
filds
cli
xlat
mov
mov
jl
std
cmpsl
jg
xor
out
sub
push
daa
andb
mov
push
jge
or
jbe
mov
jge
aam
xor
hlt
push
mov
decb
fistl
cmp
andb
add
jae
adc
inc
int
leave
pusha
xlat
mov
js
fdivs
cmpsl
stos
data16
mov
push
mov
or
sub
push
loopne
and
and
mov
lret
or
cmp
pop
out
mov
jae
mov
push
inc
sarb
push
push
int3
xchg
test
pop
sbb
or
lahf
insl
aam
aam
pop
pop
pop
sub
inc
in
cmp
jg
cmp
mov
mov
js
pop
xchg
clc
mov
es
movsl
cmovge
loopne
pop
gs
dec
or
lods
repnz
mov
sub
add
push
inc
bound
mov
mov
jmp
pop
adc
inc
dec
dec
mov
out
xor
pop
ret
das
lret
mov
mov
ss
lea
lret
dec
sbb
jmp
lds
js
push
push
fsubrp
sub
sbb
or
test
xorb
ja
hlt
adc
lahf
inc
leave
cmp
iret
push
insb
je
shll
dec
or
stos
xchg
and
cwtl
dec
dec
mov
cmc
clc
dec
mov
sub
inc
push
in
sbb
cs
xor
mov
push
mov
std
add
rorb
sub
je
popf
in
mov
insb
jecxz
cmp
mov
mov
std
or
les
movsb
jno
push
push
rcr
out
mov
ja
lcall
push
notb
pusha
arpl
sub
push
inc
enter
mov
mov
pop
jmp
outsb
inc
adc
or
or
cld
fwait
xor
popa
add
jae
mov
dec
dec
out
mov
repnz
ja
jb
into
or
fs
cltd
int3
push
mov
or
xchg
outsb
lock
scas
cmp
cmp
dec
mov
xchg
loop
dec
and
jle
jecxz
enter
addb
and
xor
test
mov
xchg
and
xor
jns
ss
inc
inc
lret
sbb
pop
test
push
jns
pop
pop
or
or
and
sbb
adc
std
and
xchg
cwtl
mov
fistps
mov
daa
mov
and
or
std
ret
mov
inc
das
push
ljmp
jle
loope
shl
test
fwait
jo
jne
dec
xchg
movsl
sub
test
mov
adc
add
icebp
incb
idiv
mov
loope
rol
xor
or
mov
cmp
push
inc
mov
je
arpl
adc
push
sbb
lret
cmova
jecxz
addl
stc
or
push
neg
insl
fidivrl
jns
popa
sbb
mov
dec
jmp
aad
jmp
in
out
adc
sub
movsb
ret
add
pop
dec
imul
pop
scas
jne
mov
cmpsb
and
push
mov
dec
cmp
push
adc
mov
or
mov
repnz
adc
jmp
jge
cld
sarb
div
sub
pop
movb
or
mov
sub
sub
cltd
pusha
adc
sbb
orl
mov
imul
aaa
dec
scas
out
ja
mov
jb
outsl
das
imull
and
dec
xchg
in
xchg
dec
loope
jno
lds
loope
add
mov
dec
into
lret
mov
scas
sub
xlat
clc
into
ds
add
push
pop
lret
or
inc
cli
xchg
inc
lahf
xor
test
ds
iret
nop
cmpsb
cld
daa
frstor
inc
std
mov
xlat
outsb
jle
shll
inc
cmc
cmp
dec
bound
in
inc
adc
inc
aas
inc
addr16
aaa
jg
cmp
xor
lcall
mov
lods
mov
and
push
add
jno
dec
lods
mov
mov
and
adc
dec
shll
addps
lock
pop
xor
pop
add
xchg
mov
mov
in
aas
cld
mov
int3
ds
out
or
push
shlb
or
push
jg
outsl
inc
iret
imul
mov
pop
iret
cli
stos
dec
loope
mov
fmull
ja
in
cltd
xchg
or
jg
sbb
or
dec
hlt
push
cs
pop
xor
rolb
ds
repz
inc
aas
inc
push
xchg
imul
mov
fldt
into
into
mov
mov
mov
inc
adc
dec
cltd
mov
sub
jl
in
out
ja
shld
and
pop
outsl
mov
gs
mov
mov
cmpsl
jp,pn
cmpb
push
cld
add
lods
inc
or
jnp
adc
add
mov
fisubs
inc
outsl
mov
xchg
mov
adc
cmp
xchg
hlt
out
push
pop
pop
pop
repz
jbe
out
hlt
inc
in
or
ret
inc
cld
sub
int
ljmp
dec
dec
add
arpl
sbb
in
pop
or
les
xor
lcall
imul
dec
lea
adc
scas
leave
ret
fistpll
fcompl
fsubl
sbb
addr16
mov
pop
cmp
scas
imul
xchg
lods
lds
mov
dec
movsb
push
xchg
ret
or
int
add
mov
movsl
sbb
mov
jecxz
cmc
jmp
inc
bound
fiadds
push
push
sub
loop
std
xchg
push
stos
shlb
cld
xchg
pop
push
jo
mov
inc
cmp
cmpsb
sar
roll
rcrb
mov
sub
cmp
in
movsl
sbbb
mov
push
loope
jno
cwtl
daa
dec
push
inc
push
pop
lods
mov
push
shlb
mov
mov
call
sar
int
mov
das
shr
sbbl
jo
lcall
dec
xchg
popf
and
adc
push
mov
jae
push
sub
subl
mov
leave
pop
mov
rcll
jge
ret
jno
xor
add
inc
or
push
mov
jecxz
int
popa
dec
sub
jo
rcrl
daa
mov
pop
rolb
pop
jmp
push
std
jnp
es
sub
es
mov
aad
mov
inc
clc
or
add
pop
test
ror
inc
push
int3
or
jne
or
lods
inc
adc
cmp
std
out
sub
ds
lea
out
lret
push
pop
cmp
dec
sbb
fsts
cmpsl
lea
fstpl
jecxz
cmp
jmp
or
add
cmp
xchg
mov
filds
ret
cs
pop
or
xor
xchg
cmp
sbb
mov
into
sub
and
jae
fwait
add
jb
dec
fcmovbe
fidivrs
or
cld
mov
xchg
pop
outsb
out
sub
pop
sbb
and
dec
insb
jle
int
sarl
mov
push
adc
xchg
scas
leave
sub
js
stc
mov
mov
jne
jo
xchg
mov
or
mov
xchg
dec
mov
jb
ss
push
dec
movsb
imul
mov
mov
adc
push
mov
xchg
imul
je
lcall
lods
ljmp
fwait
stc
popa
in
cwtl
call
xor
jo
rcrb
xchg
setle
loopne
insb
outsb
pop
cld
test
xchg
out
push
dec
lret
xchg
adc
adc
scas
pop
fidivrl
xchg
jl
iret
inc
test
arpl
push
adc
jmp
mov
cli
sbb
sub
fidivl
movsl
sub
inc
mov
mov
btr
mov
jp
xchg
stos
out
pop
fsubrs
cmp
or
mov
pop
xor
ficompl
xchg
testb
aas
mov
scas
inc
pop
std
decb
jb
sahf
insb
mov
les
shll
dec
mov
aas
cwtl
dec
mov
out
test
cmc
mov
cmc
loopne
aas
mov
stos
repnz
ret
popa
movsl
in
adc
mov
sub
std
xchg
adc
lods
push
outsl
rcr
xchg
sbb
dec
lds
jne
fcom
push
push
mov
jp
jp
mov
scas
ds
pop
ja
pop
mov
cbtw
je
push
jnp
jno
xor
and
jecxz
and
scas
cld
inc
mov
add
xlat
fildl
jnp
jb
out
icebp
jecxz
aad
mov
lahf
pop
add
push
les
cmp
jne
cs
mov
jp
in
call
popf
repnz
mov
mov
pop
popa
cmpsb
lret
std
jl
xchg
adc
fldcw
and
out
mov
push
mov
insl
inc
cli
lock
sub
xchg
jno
dec
xchg
mov
roll
sbb
dec
inc
popf
mov
mov
mov
push
mov
xchg
or
lret
sbb
and
jo
inc
and
dec
and
lret
cmp
subb
or
dec
test
movsb
jle
icebp
loop
xor
jp
xchg
xor
xor
xchg
ret
xor
mov
mov
fisubrl
gs
sbb
rorb
setge
call
les
mov
iret
popf
inc
lock
cmp
call
lret
pop
negl
mov
in
out
add
addr16
add
stos
inc
int
adcb
adc
sti
sbb
js
ss
cli
cmp
cmpsl
inc
push
in
mov
xchg
xor
sbb
dec
jge
mov
clc
movaps
mov
imul
test
imul
mov
in
cmp
and
adcl
adc
xor
mov
push
jns
push
adc
icebp
inc
dec
xchg
loope
jno
pop
push
imull
out
cmp
pop
das
push
stc
dec
out
ds
arpl
test
mov
sub
sarl
aas
xchg
dec
xchg
jge
add
and
sbb
repnz
lods
dec
hlt
scas
inc
int3
push
call
outsb
or
and
pop
loop
pop
decl
mov
out
inc
fisubl
in
out
dec
iret
push
pop
pop
mov
inc
mov
ret
addr16
push
jb
outsl
adc
mov
std
xchg
addr16
arpl
dec
inc
adc
and
hlt
pop
cltd
nop
sbb
or
pop
pop
and
outsl
and
std
jne
mov
add
mov
loope
sub
std
cmc
xchg
cmp
xlat
xchg
imul
cmc
sub
push
popf
xchg
sbb
pop
mov
cmp
inc
mov
cld
xchg
sub
testb
inc
mov
stc
lea
mov
jo
fisubl
dec
out
sub
inc
and
sti
ss
ljmp
or
cmpsl
out
insb
or
movsb
lret
ss
daa
fwait
push
leave
lods
xor
pop
cwtl
ss
psubsb
inc
inc
and
into
pop
fwait
pop
popf
lcall
push
inc
jne
dec
xor
mov
int3
adc
pop
mov
loope
stos
xchg
jnp
fwait
divb
mov
loope
cmp
pop
out
jns
jmp
out
leave
aam
movsb
jo
pop
and
mov
xor
cwtl
fsubr
sub
in
lahf
pop
es
movl
idiv
inc
insb
addr16
sbb
ja
inc
add
sbb
icebp
adc
push
cmc
fbld
pop
fcmove
arpl
sub
pop
sbb
add
pushf
mov
pusha
sbb
scas
xchg
and
leave
adc
ds
pop
decl
mov
cld
adc
xlat
ss
mov
xor
adc
test
xchg
mov
mov
xchg
mov
inc
add
adc
les
jecxz
push
popf
pusha
sbb
aam
inc
int
enter
cli
pop
stos
xor
and
rcrl
aas
dec
or
cmp
xchg
addb
sbb
sbb
lahf
xchg
mov
xchg
xorb
into
ret
aad
jb
cltd
pop
imul
mov
add
and
sahf
dec
lcall
xorl
sti
pop
adc
adcb
adc
push
dec
jmp
dec
xchg
outsb
rcll
pop
sub
pop
in
js
or
add
ljmp
cmp
and
xchg
xor
loope
out
std
mov
lcall
or
push
xchg
sbb
int3
mov
dec
xchg
adc
out
loopne
cltd
rol
mov
cmp
jge
stc
ljmp
or
pop
shl
or
les
imul
nop
xchg
mov
sub
or
pop
aam
arpl
fnstcw
negb
mov
adcb
and
dec
and
dec
pop
inc
es
mov
cmpsl
adcl
sbb
les
mov
cli
mov
sahf
sahf
mov
xchg
js
jl
xor
fs
lahf
pop
iret
lods
mov
jmp
lret
sbb
cltd
or
cmovl
sub
mov
dec
aad
inc
clc
adc
or
xchg
dec
outsb
and
sbb
in
into
inc
adc
dec
sub
add
cmpsb
xchg
jle
lret
xorl
push
insl
mov
and
mov
outsb
loop
and
jno,pt
in
and
loope
popa
andb
sub
cltd
inc
sbb
lcall
push
pushl
mov
jno
sub
jne
pop
dec
call
hlt
xchg
xchg
push
imul
enter
popl
sbb
adc
or
mov
clc
xlat
jno
pushf
cli
rolb
neg
cltd
insl
movsb
cltd
rcl
pop
jecxz
or
lods
xor
push
cltd
popf
xor
add
push
jb
icebp
inc
inc
push
push
push
add
sbb
les
and
fimuls
push
push
adc
pop
mov
aaa
fwait
cmpsl
add
fbld
rorb
xor
or
or
mov
aas
addr16
dec
push
cmc
in
lock
pop
cltd
ret
sub
adcb
cltd
fimuls
adc
mov
shl
div
mov
dec
xor
add
pop
xchg
lcallw
fisttpll
or
ja
xchg
cmp
nop
ja
inc
and
decl
test
call
je
out
mov
outsb
into
mov
xchg
dec
xchg
pushf
out
call
xor
xor
cmp
loop
push
xchg
push
not
pop
ret
nop
lods
fcoml
ja
pop
mov
mov
inc
in
mov
addr16
mov
add
sbb
imul
xchg
daa
jle
push
cltd
sbb
and
lret
cmc
xor
popf
add
cmp
orl
stc
adc
pop
jo
adc
fimuls
push
mov
lea
loop
mov
loop
insl
mov
adc
rorl
insb
sti
test
inc
lds
add
clc
pop
orl
test
pop
sub
sub
out
divb
cmp
lret
cmp
jmp
cwtl
add
push
inc
pop
jp
xchg
cmpsb
lock
fiadds
popa
jecxz
imull
xor
add
cltd
xor
push
or
testb
les
push
fmulp
jne
data16
inc
pop
fmull
lock
shlb
mov
xchg
dec
lret
and
pop
and
add
push
or
das
clc
in
in
adc
stos
inc
cmp
pop
mov
incl
adc
jnp
pop
mov
rcll
dec
add
fisttpl
cli
shl
repnz
cmp
arpl
aas
lret
in
push
movl
lods
push
leave
inc
js
xchg
ret
and
or
lods
jecxz
mov
pop
mov
pop
out
jmp
or
aam
leave
cmp
cltd
dec
cmpsb
sub
jb
jmp
test
xchg
sub
aad
adc
xor
xor
in
fxch
scas
cmp
and
jae
js
lea
mov
fldl2e
cmp
arpl
fs
fisubrl
inc
dec
hlt
loopne
cmp
cmp
fldcw
cmp
push
js
xor
jo
fistps
inc
stos
jns
push
mov
ret
add
inc
push
jge
lret
sbb
dec
lods
shlb
mov
or
or
daa
jns
push
sarl
mov
xchg
push
cmp
orb
je
fs
loopne
sahf
push
dec
jmp
ret
xchg
xor
push
rolb
idivl
xchg
jb
ficomps
jp
xchg
outsb
loopne
into
in
jmp
iret
jno
mov
xchg
out
and
jp
and
pop
lea
cmc
jns
ds
mov
push
adc
les
loopne
mov
ror
std
mov
sub
gs
inc
and
pop
pop
ljmp
fsubrs
mov
fists
loopne
icebp
push
mov
movsl
icebp
ret
push
push
stos
xor
stc
inc
addl
fidivs
mov
into
inc
sbb
push
cmp
dec
hlt
cmc
jg
push
in
iret
in
and
jns
inc
xorb
inc
add
sub
pop
icebp
and
xchg
shlb
out
aam
xlat
or
push
jne
std
aaa
faddl
push
lods
xor
xchg
lret
es
xchg
pop
stos
enter
jg
test
xlat
shll
stos
sbb
stc
xchg
jle
pushf
ja
or
pop
rclb
dec
sub
imul
push
jbe
xchg
xchg
in
pop
sub
mov
jge
out
cltd
cmp
push
imul
push
sbbb
fnstcw
rcr
inc
jno
lea
add
out
fisttpll
cld
aad
fwait
loope
lret
test
insl
dec
fisubs
fbld
movb
shll
test
dec
loope
push
mov
mov
dec
fdivr
pop
jns
cmp
stos
sbbl
repnz
or
mov
cmp
push
sbb
icebp
sub
inc
imul
aam
cli
pushf
push
push
inc
push
lock
out
add
insb
out
mov
cmpl
xor
inc
sbb
inc
int3
xchg
bound
xor
rolb
lcall
ss
loop
into
dec
inc
mov
inc
xorl
mov
mov
and
mov
mov
mov
aad
aam
daa
cs
add
imul
jp
aas
aam
or
lret
repnz
movsb
jb
sub
and
cmc
repz
daa
bnd
and
lret
data16
loop
cmp
mul
mov
cmc
mov
scas
nop
cwtl
or
fdivrl
mov
add
push
xchg
les
loop
test
inc
cmp
push
fcmove
mov
mov
fadd
pop
sbb
cmp
cwtl
fs
mov
jle
push
pop
inc
daa
fs
adc
ret
xor
rolb
mov
pop
test
into
push
add
mov
push
sbb
sbb
insl
sub
jnp
fnstcw
dec
dec
and
pop
and
pop
mov
insl
or
loopne
xor
out
and
out
lea
sahf
or
jnp
ss
jne
or
mov
or
shlb
pop
and
mov
mov
gs
sbb
ds
adc
pop
mov
in
xor
mov
jp
push
ret
fisubrl
popf
faddl
pop
xchg
fsts
xchg
and
or
mov
xchg
sti
sti
mov
std
push
popf
test
push
lds
or
push
int3
push
jmp
mov
add
ret
cli
mov
xchg
inc
and
es
sbb
repz
inc
mov
cwtl
xchg
xor
adc
movsb
loopne,pn
push
jbe
js
sub
mov
sub
and
jmp
xor
cmp
loopne
nop
inc
inc
cmpsb
fiaddl
jmp
out
xchg
stc
lcall
into
xlat
jle
out
fs
pushf
ds
in
mov
cld
outsb
popf
mov
ss
sahf
adc
negb
pushf
mov
es
jmp
ja
dec
sbbb
cmc
sti
insb
dec
sti
fidivs
ja
sub
hlt
jle
cmp
fisttps
dec
cmp
je
dec
push
xchg
mov
push
lret
sub
jb
repnz
jle
clc
inc
fidivs
mov
jecxz
pop
in
bound
imul
and
pusha
cmp
sbb
dec
pop
call
sub
mov
adc
push
adc
lods
dec
cmc
add
sbb
adc
popa
jbe
adc
and
pop
pop
fwait
jnp
ljmp
lret
int
stos
stc
sub
out
icebp
and
insb
mov
fcoml
mov
lret
lock
notl
adc
xor
lret
out
dec
fstpl
sbb
jmp
push
adc
mov
fidivl
dec
mov
ror
xchg
adc
jge
cli
and
lds
mov
mov
push
dec
fwait
out
in
aas
stos
movsb
lock
sti
shlb
dec
repz
or
cmpb
in
outsb
add
pop
sbb
xchg
jle
aam
push
jle
adc
test
mov
pop
jp
fs
or
jmp
push
into
stos
repnz
xor
lahf
cmp
imul
cltd
mov
scas
cmc
test
insl
sub
xor
xor
mov
loopne
mov
mov
inc
fstp
mov
and
xor
and
test
out
mov
xor
mov
inc
je
push
popa
ds
cmp
and
sub
cld
int3
inc
pop
sub
mov
pop
aaa
adc
adc
add
add
jbe
xchg
xor
xor
sbb
dec
add
cmc
test
add
pop
cmp
mov
cltd
pop
movsl
and
lods
xchg
div
jnp
fildl
in
shl
mov
mov
pop
mov
add
outsl
stos
lock
inc
push
jg
test
sub
outsb
int
cmp
ds
mov
sarl
mov
xchg
mov
xchg
sub
pop
aam
pop
push
flds
xor
out
push
sub
jp
xchg
jle
cmp
lods
loop
xchg
cmp
xchg
jge
std
jne
jno
lods
in
pop
push
mov
test
test
out
repz
idiv
rorb
xchg
out
jns
lds
cmc
xor
mov
cmc
inc
in
popf
jg
mov
cltd
jp
loopne
mov
stos
add
lahf
or
adc
jmp
int
pop
cmp
stc
movsb
push
sub
mov
nop
les
movsl
dec
test
and
aam
mov
out
dec
je
fstl
pop
pusha
test
mov
pusha
icebp
cs
in
call
mov
and
iret
nop
dec
decb
lret
lret
sub
shrl
xor
es
into
xor
fwait
xchg
lea
sti
add
sub
and
sbb
adc
into
xchg
mov
xchg
data16
xor
pop
inc
out
pop
mov
das
scas
cmp
test
insl
movsb
lea
out
inc
inc
clc
xchg
sbb
push
push
add
add
inc
adc
sbb
jbe
jbe
mov
out
mov
xchg
dec
ljmp
sarl
pop
aam
mov
sti
addl
ljmp
xchg
xchg
sbb
fistpl
xor
mov
sbb
gs
ljmp
pmuludq
test
or
and
sbb
mov
stos
adc
aam
adc
loop
enter
adc
push
mov
imul
add
inc
aas
dec
sub
xor
stos
fisttpl
pusha
and
arpl
xor
test
addb
push
rorl
cld
sti
mov
jg
sbb
outsl
jns
mov
dec
fdivs
lret
adc
sub
imul
push
pop
fsubrp
pop
pop
sbb
xorb
or
and
push
insb
fwait
inc
sbb
xchg
ret
jae
das
mov
xor
imul
push
mov
stc
inc
adc
icebp
insl
jle
shll
lcall
mov
xchg
gs
je
imul
jnp
add
push
pop
mov
inc
lods
jge
cld
cmp
lods
pop
pop
adc
add
call
rcrl
mov
cmpsl
push
std
mov
fnsave
insl
int3
and
call
out
xchg
xor
sbb
call
stc
xchg
pop
dec
pop
ds
xlat
sarb
add
xor
mov
cmp
fists
cmp
mov
dec
mov
sarb
cmp
out
pop
add
rcrb
out
cmc
js
xor
adc
adc
xlat
mov
mov
rclb
gs
insl
xchg
mov
addl
xor
sbb
les
mov
idivl
dec
mov
lret
pop
mov
mov
repz
sbb
addr16
mov
in
push
or
aaa
sbb
test
lahf
int3
gs
sbb
xor
pushf
es
mov
cmpsl
stc
ret
pop
leave
pop
fildll
clc
orb
fisubrs
xor
sub
popa
iret
in
fs
ja
andl
adc
nop
inc
dec
jb
ds
test
idivb
and
lret
fs
mov
jo
xchg
jb
in
jno
mov
mov
mov
jmp
je,pn
fldt
out
aaa
dec
lods
push
rclb
rcrb
je
sbb
stos
jp
xor
lock
add
fs
adc
notb
jmp
or
push
stc
jp
divb
dec
inc
shl
pop
jo
sbb
dec
sbb
aad
jmp
cltd
or
pushf
cmpsl
xchg
sahf
pop
rcll
std
arpl
fistps
ja
add
lahf
popa
mov
ja
testb
push
and
mov
leave
adc
cmp
les
daa
test
inc
loope
push
mov
lret
lcall
clc
jne
rcrl
mov
fstps
adc
or
aaa
adc
clc
or
and
pusha
and
lds
xchg
pop
jecxz
inc
cli
jne
mov
push
pop
xor
jmp
fsubrs
and
std
shr
and
jl
jp
push
out
sub
cltd
mov
stc
test
add
xor
xor
sahf
sub
sub
pop
xchg
jle
mov
sbb
movsl
jbe
cmp
test
push
or
fwait
push
push
pushf
and
repnz
aas
jp
rolb
mov
push
arpl
mov
shll
sub
jb
jp
enter
in
xchg
das
inc
mov
push
xchg
addl
add
hlt
lods
stos
dec
aam
fistpll
xchg
inc
test
lods
das
mov
cmp
jp
mov
aam
jg
faddl
popa
ficomps
jmp
inc
out
inc
pop
cmp
in
lahf
lret
push
push
mov
or
mov
xor
sub
sbb
ret
out
out
lods
ficoms
jg
cltd
mov
arpl
mull
sbb
daa
cmp
mov
sub
stc
imulb
pop
xor
out
ret
stc
in
mov
or
fildll
sub
and
inc
testb
sub
aaa
mov
sub
fs
dec
sar
loopne
roll
fiadds
adc
sub
pop
mov
jb
rcll
dec
mov
insb
in
nop
add
test
gs
arpl
dec
jbe
mov
ljmp
call
jecxz
icebp
mov
gs
or
mov
clc
cmpsb
popa
es
in
sub
adc
push
rcrb
fs
pop
arpl
cmp
cmp
lret
sbb
xor
fs
and
add
in
popf
lret
mov
in
pop
fsts
scas
aam
mov
lret
fimull
cmp
sbb
push
cmc
cmp
push
and
dec
int
out
repz
add
and
insl
int
mov
dec
or
orl
scas
test
or
xor
push
gs
lea
popf
lahf
into
mov
cs
nopl
mov
and
mov
lds
pop
repnz
add
mov
pop
scas
dec
adc
push
daa
push
mov
adc
lahf
mov
mov
adc
sti
mov
imulb
push
inc
lods
stos
or
xor
ret
xor
or
ret
aam
and
aas
cli
jo
call
mov
int
sub
les
and
pop
jl
cltd
aad
cmp
pop
sbb
and
pop
lea
nop
inc
sbb
shll
cmc
ss
sub
movsl
imul
jecxz
xchg
or
ret
insb
mov
mov
orl
xchg
xor
or
adc
or
jecxz
fstpl
lea
dec
in
jle
push
test
mov
es
cmp
mov
sbb
push
fwait
push
insb
xlat
jl
push
mov
push
mov
inc
fnstsw
jg
pop
mov
push
adc
add
push
bnd
stos
test
jmp
dec
ljmp
rorb
mov
mov
sub
sub
or
pop
pop
shll
dec
adc
adc
cmp
loopne
and
stc
hlt
testl
fcomi
aam
push
fdivl
ficomps
xor
push
push
lods
mov
into
out
add
jne
lret
jp
inc
sti
or
popf
mov
dec
or
add
jge
jbe
loope
sbb
stos
xchg
add
mov
enter
pop
jne
sbb
test
fldcw
and
jge
outsl
push
aaa
lahf
or
pusha
or
jno
lcall
jbe
pop
sub
fucom
icebp
lods
gs
mov
out
pop
in
popf
dec
ljmp
lahf
cmp
inc
mov
daa
cmpsb
sub
mov
dec
sbb
mov
repz
push
mov
stc
xchg
in
mov
mov
sahf
adc
or
popa
push
mov
sti
push
es
mov
inc
shl
daa
ja
insl
mov
fildll
imul
lock
outsl
add
test
xor
test
push
decb
enter
xor
inc
fwait
xchg
lcall
jne
adc
mov
sbb
in
push
scas
xor
pop
xchg
aaa
jne
mov
repnz
push
outsb
xchg
pusha
sub
sti
pusha
repnz
jge
int
xor
cmp
mov
mov
jge
negl
push
jmp
or
pop
test
call
mov
adcb
inc
pop
jp
sti
push
push
jp
mov
ret
or
pop
data16
stc
jge
in
in
lcall
jno
jnp
jmp
jno
sbb
cmp
es
pop
xchg
push
xchg
hlt
ja
insl
and
subl
dec
gs
sub
shll
xchg
xchg
out
hlt
sti
adc
sbb
cmp
push
outsb
rol
cmp
in
test
fbstp
mov
popf
fsts
call
out
add
sarl
out
sti
add
aas
call
or
xchg
pushf
insb
push
pusha
xlat
sub
or
mov
mov
xor
out
xchg
jbe
mov
dec
add
xor
push
xor
jmp
inc
pop
xchg
setne
ja
ds
bound
add
jnp
aam
jg
fmuls
inc
lcall
fiaddl
and
sbb
orb
pop
out
push
xchg
xchg
fcomip
pusha
sub
and
or
xor
xchg
lret
mov
mov
orl
addr16
inc
nop
adc
std
popl
pop
jbe
sub
mov
push
aaa
xor
nop
cmp
add
or
into
jp
test
fld
sub
mov
adc
cmpsb
push
iret
ss
add
xchg
sbb
sbb
filds
hlt
sub
and
lods
xchg
xchg
sets
dec
mov
rcrb
jmp
mov
xchg
in
pop
adc
stos
pop
add
inc
pop
xchg
cmc
dec
out
pop
push
push
push
ficoml
dec
dec
cmc
pop
mov
pop
push
pop
incl
push
into
scas
aaa
aad
mov
mov
pop
xor
aas
mov
shrl
jp
insl
sub
sub
sub
bound
sbb
jae
adc
xorb
dec
push
cmp
mov
push
add
decb
dec
sbb
push
jmp
cmpsb
adc
pop
test
arpl
push
adc
nop
cmp
mov
mov
xchg
pop
sbb
xor
in
mov
cs
andl
bound
std
add
xchg
mov
mov
mov
iret
es
ret
push
inc
and
pcmpeqw
jmp
repz
jno
mov
lods
in
sahf
mov
push
adc
rcrb
cmp
hlt
int3
pusha
test
es
jmp
into
out
lahf
daa
pop
or
push
mov
mov
mov
mov
adc
ss
testl
fld
fcomps
sbb
push
inc
insb
sbb
mov
add
les
ljmp
push
mov
rcrb
jns
lods
jae
aad
dec
and
push
popf
mov
pop
push
pop
daa
stos
rcll
mov
icebp
filds
push
push
dec
add
xor
jns
test
xchg
stc
dec
inc
rorb
and
push
sub
add
test
bound
jb
fs
dec
jo
sbb
push
jge
jne
adc
movsb
repnz
jp
repnz
add
jmp
cmp
insl
sbb
jmp
cwtl
and
add
shll
mov
mov
jecxz
jmp
sahf
rcl
addr16
mov
in
and
iret
jecxz
out
xchg
aam
shl
mov
mov
imul
mov
push
cwtl
ffree
test
cmpsb
mov
lret
push
jo
cmpsl
lods
and
fcomps
mov
insl
fistl
outsb
and
or
sbb
imul
loope
push
sbb
jns
push
lock
mov
addr16
pop
jle
jge
mov
jp
ds
mov
pop
sbb
lock
cmpsb
add
mov
test
cs
push
cwtl
xor
andb
pop
aad
mov
stos
int3
cwtl
pop
cmp
pop
cltd
and
mov
stos
mov
xlat
mov
xchg
lcall
sub
flds
jp
add
jp
daa
mov
call
sub
cwtl
idivb
push
mov
pop
dec
add
int3
fbstp
dec
jmp
pop
or
sbb
push
sbb
loopne
sbb
inc
jmp
cld
or
out
mov
fisttpll
mov
adc
add
adc
daa
rol
pop
xor
imul
jg
mov
ljmp
pop
pop
xchg
mov
lods
lahf
jbe
jle
ss
jg
adc
adc
sub
cmpsb
out
inc
adc
xor
and
imul
js
jnp
out
std
scas
dec
or
stc
jno
pop
push
test
or
clc
fstps
sbb
xchg
xchg
aaa
mov
mov
sub
dec
adc
push
cmpsb
cmp
enter
pop
xlat
xor
repnz
cmp
cmp
push
popa
add
arpl
xlat
movsb
push
push
in
ret
cmc
push
adc
adc
sub
add
bound
andb
mov
mov
stos
cmpl
push
ljmp
or
movl
add
lahf
rcr
sbb
leave
repz
or
push
pop
sti
or
lds
rcl
rcrb
aaa
jno
imull
orb
xchg
dec
cmpsb
add
sti
cltd
xor
idiv
loope
in
out
lahf
leave
enter
cli
cs
and
inc
xor
cld
jecxz
cld
and
js
cmp
xchg
dec
inc
xor
icebp
das
inc
inc
sub
les
and
and
sti
mov
inc
fisubrs
lock
shrb
js
xor
std
aam
loop
jo
cwtl
inc
loop
sbb
das
adc
lods
jl
in
cli
std
rorl
push
aam
fsubrl
xor
loope
dec
jno
pop
add
test
or
loope
scas
js
push
test
xchg
xchg
pusha
lock
jno
adc
adcb
sbb
enter
arpl
jge
dec
jb
andb
pop
cmp
arpl
mov
add
jo
out
iret
notb
sbb
sub
xchg
addr16
xor
subl
test
inc
cmp
ljmp
fdivrl
ficompl
pop
test
imull
cli
xchg
fadd
clc
push
and
adc
mov
and
fs
jne
je
xchg
jp
sbb
bound
jp
xchg
sub
xchg
daa
push
pop
pusha
popf
or
lcall
inc
push
add
jae
cmpsb
lret
and
inc
inc
or
iret
xchg
xlat
jnp
xor
pop
out
out
bound
icebp
andb
jne
push
jle
leave
jne
cmp
push
xchg
sbbb
enter
inc
push
adcl
xchg
fimuls
lahf
adcl
inc
movsl
or
repz
gs
and
mov
mov
cmpsb
movsl
push
sub
insl
sub
stos
outsl
dec
mov
add
adc
mov
ret
fs
stos
popf
clc
fwait
and
sbb
pop
andl
fnstenv
les
push
pop
daa
mov
mov
repnz
jmp
fwait
arpl
inc
rorb
data16
mov
and
stc
cld
sahf
arpl
mov
lds
sbb
mov
cmpsb
rolb
mov
es
dec
xor
in
dec
push
jmp
and
out
sbb
pushf
mov
pop
adc
pop
mov
enter
xor
jp
sub
les
or
xor
sub
cmp
xor
mov
and
mov
js
andl
mov
push
push
test
push
ret
lret
test
push
cs
jge
adc
imul
repz
cmp
das
mov
rorb
dec
add
out
outsb
fcoml
sbb
mov
rorb
or
jp
idivl
mov
adc
out
sub
repz
scas
jne
xchg
icebp
push
or
int3
outsl
sbb
inc
xchg
fcompl
xchg
shlb
cmp
cmpl
xor
cmpsb
in
xor
add
lcall
mov
pop
sbb
jo
rcll
and
fidivrl
mov
push
fstl
repz
popf
arpl
nop
outsb
xchg
jb
inc
into
xor
push
mov
inc
mov
mov
stc
aaa
in
cmp
into
jmp
sbb
mov
pop
push
mov
cmp
loop
mov
mov
push
leave
fdivrl
in
push
sub
jmp
jnp
outsb
lcall
lcall
fwait
out
sbb
add
jns
popf
es
fcompl
mov
ret
add
inc
in
and
js
imul
jns
daa
xchg
cld
enter
sbb
lods
and
aas
xchg
xor
mov
fiaddl
dec
flds
inc
pop
stos
bound
dec
pop
loopne
lahf
xchg
push
negb
imul
or
xchg
dec
jmp
mov
mov
xlat
push
loopne
push
rcl
inc
loope
xor
adc
out
dec
or
shr
loope
pop
or
sub
popf
sbb
mov
lret
or
insb
and
ds
or
frstor
cmp
cmp
mov
inc
adc
mov
sbb
fisttpl
xor
call
fs
stc
pop
push
push
xor
leave
insl
jo
push
jecxz
push
xchg
pop
repz
test
dec
inc
daa
ljmp
sbb
test
call
popa
imul
cmp
xchg
xchg
stos
into
cmc
negl
dec
shlb
ret
lcall
lods
psrad
push
in
cmpsl
ret
bound
decb
negl
push
dec
dec
dec
rolb
or
rorl
sub
dec
push
dec
sbb
fidivs
cmpb
aas
divl
fbstp
call
mov
rcr
mov
test
scas
js
or
push
push
in
mov
push
cltd
pop
xor
inc
jecxz
adc
xchg
jmp
bound
in
push
or
jl
iret
fsts
jge
and
sub
stc
push
dec
out
inc
imul
out
mov
push
loopne
pusha
mov
stos
adc
sub
jb
fidivrl
sub
cmpsb
cmp
out
sub
imul
sbbb
idivb
cmc
mov
xchg
lods
xor
xchg
shl
cmp
ljmp
adc
inc
inc
test
sub
adc
and
fadds
inc
repnz
lods
repz
ret
adc
aam
ss
push
in
mov
jecxz
sbb
inc
inc
and
jecxz
test
dec
hlt
xor
ja
loope
push
movsl
mov
mov
shrw
test
cmp
clc
inc
fcmovb
xchg
lea
rorl
int3
cli
xchg
cld
jge
lods
jp
cs
cmp
dec
std
add
pop
nop
rcr
jno
or
mov
xchg
loop
jle
fiadds
sbb
add
test
cmpsl
push
repnz
add
movsb
ss
inc
mov
mov
std
popa
ja
pop
pop
iret
mov
icebp
stos
push
stos
jge
xchg
push
cmp
cmc
push
out
mov
mov
inc
lret
inc
out
push
add
rclb
dec
mov
or
xchg
adc
sbb
pop
sub
xchg
out
inc
vpsubb
dec
test
clc
or
jb
adcb
insb
cmp
dec
cmp
data16
fidivrs
add
jbe
mov
scas
and
fimull
push
mov
dec
sarb
stos
add
sbb
push
int
fists
xor
fs
sbb
dec
jge
sbb
mov
test
push
push
imul
daa
mov
sbb
fidivs
cltd
inc
add
lret
xor
jg
test
gs
xor
pop
mov
lea
sbb
cwtl
pop
mov
xlat
int3
andl
imul
jge
movsl
in
scas
pop
mov
dec
mov
push
fld
mov
movsl
and
sub
mov
xchg
mov
jmp
repz
test
imul
adc
or
and
out
xor
outsb
test
push
mov
cmp
fs
jae
stc
pushf
jne
jge
mov
scas
jne
imul
jge
xor
inc
cltd
mov
dec
xchg
repnz
mov
pop
sub
shrb
mov
jbe
xchg
mov
lcall
fisubrs
inc
adc
xor
aam
fisttps
stos
inc
and
pop
cli
add
sub
movl
ljmp
adc
jp
cld
outsl
adc
clc
push
mov
xor
in
sahf
inc
sbb
leave
jae
ret
std
cld
sbb
fnstcw
testl
popa
ret
push
xchg
mov
xchg
jno
pop
daa
lods
mov
scas
in
dec
insb
shll
inc
sbb
push
dec
das
cmp
adc
cmpsl
or
push
inc
mov
gs
pop
paddusb
mov
mov
mov
sub
fwait
leave
icebp
or
cmp
les
pop
ud1
xchg
imul
cmp
test
out
sub
lcall
aaa
cmp
fwait
movsl
std
fildll
ficoms
xorl
js
inc
rcrl
scas
mov
mov
rcl
in
lock
pop
sbb
imul
xor
mov
loop
loope
fsubrp
jb
sub
int
and
inc
and
jb
cmp
push
repnz
fcomps
out
push
sbb
nop
push
lds
dec
rcrl
jno
sbb
jne
sbb
cmp
jmp
mov
test
jge
pop
lds
xchg
push
cmpsb
push
xchg
add
adc
sbb
inc
jl
jns
sbb
ja
adcb
mov
cmp
fdivr
sbb
inc
out
push
leave
sbb
cmp
out
cld
jp
lcall
push
das
xchg
sbbl
or
sub
fcom
and
data16
icebp
fnstsw
xchg
xor
cmp
dec
add
shlb
add
push
aad
dec
fidivrs
clc
and
sub
xchg
fadds
mov
and
xchg
cmp
sbb
and
inc
sahf
or
pop
inc
test
mov
test
and
ficoms
or
dec
insb
shll
mov
xchg
lods
jge
sub
lock
mov
mov
popf
push
test
stos
call
dec
outsb
mov
divl
aam
roll
cltd
out
sub
loop
pop
xchg
push
frstor
sub
xchg
arpl
pop
jbe
push
call
fwait
jecxz
pushf
fimull
or
cmp
mov
jecxz
sahf
inc
cli
jbe
xchg
ret
add
mov
pop
fbstp
add
xchg
test
jne
lea
xlat
in
pop
mov
mov
mov
sti
adc
push
iret
adc
in
adc
cltd
xchg
jmp
out
out
jb
js
pop
jo
imul
loopne
dec
sbb
mov
adc
dec
in
subl
dec
in
xchg
popf
jnp
sub
shl
xor
aas
cmp
mov
cmp
push
sub
pop
mov
or
pop
xchg
and
js
xchg
in
cmp
push
sub
mov
outsb
and
je
les
jmp
cmpsl
push
fstl
cmp
bound
inc
adc
pop
cs
aaa
xor
mov
scas
jb
je
mov
nop
cmp
pushf
mov
loopne
push
fsub
inc
int
add
aam
dec
pop
sub
jmp
out
xor
test
xchg
xor
je
sub
int3
imul
mov
pop
mov
dec
sub
pop
rcr
nop
and
mov
lahf
flds
sub
call
test
or
sbb
ret
fisttpl
xorb
xor
push
sub
out
mov
cmp
or
out
data16
inc
mov
lcall
and
xchg
sbbl
mov
gs
sub
aam
cmc
push
sbb
add
stos
dec
and
sbb
dec
xchg
enter
mov
jae
ja
std
out
and
xchg
lods
xlat
xor
call
loope
or
mov
jge
push
subl
push
pushf
rcrl
cmpb
loopne
insl
andb
int3
test
mov
das
and
and
mov
out
scas
mov
add
cmp
xor
push
or
sbb
dec
push
xchg
and
cmpb
icebp
data16
push
mov
adc
std
jo
leave
cmpsb
adc
pop
decl
mov
psraw
dec
adcb
fstl
xor
lods
xlat
popa
adc
push
add
mulb
sbb
bnd
cmpb
addr16
in
daa
jae
out
daa
sbb
pop
or
cli
sbb
push
push
mov
and
push
pop
pop
sub
insl
inc
cmp
and
stc
mov
push
mov
pop
insb
push
push
jbe
aaa
inc
and
addr16
lea
xchg
shlb
insl
aad
and
in
xor
mov
push
imul
imul
xchg
push
cs
push
sub
adc
sub
sarl
mov
dec
jb
mov
xor
insb
xor
daa
mov
div
rorl
fimuls
inc
cmp
scas
jmp
lcall
imul
leave
in
pop
pop
loop
sarb
ret
and
outsb
push
jne
ss
mov
test
inc
xor
jb
loop
cmpsb
mov
insb
fwait
adcb
jmp
push
aas
xchg
mov
stos
mov
xor
test
sbb
sbb
call
jg
int
int
cmp
cmp
lcall
leave
cli
dec
push
jnp
dec
sbb
cltd
xchg
fsub
cmpsl
mov
test
pop
into
lcall
lods
insl
push
jl
pop
shrb
push
outsl
mov
pop
push
cmpsl
cmp
int3
lcall
add
pop
or
int
mov
test
mov
std
push
add
cmc
jecxz
or
cmpl
out
mov
pop
or
and
movsl
or
push
fdivrl
push
cmc
icebp
movsb
cmp
add
inc
mov
xchg
test
and
cltd
dec
movsb
mov
sbb
loop
sbb
jo
and
jle
rorb
dec
roll
lcall
mov
mov
add
xor
cmpsb
mov
mov
lds
dec
cmc
adc
sub
ror
push
in
push
sbb
mov
push
adc
movsb
and
fsubrl
adc
xchg
hlt
cmp
dec
addl
jmp
aas
xor
jg
xchg
fistl
and
jae
fisttpll
cmp
add
and
gs
enter
out
or
push
adc
mov
pop
loope
js
mov
sahf
cltd
movntps
pop
xchg
cmp
inc
jg
in
cmp
out
enter
dec
jno
dec
cmp
xchg
mov
mov
sbb
arpl
mov
sbb
fstpt
aaa
test
fs
xchg
mov
jg
xchg
sbb
lahf
pushf
and
jo
mov
pop
clc
add
sbb
fiaddl
mov
or
cmp
mov
loopne
push
pop
repnz
fnstenv
cld
push
mov
cltd
fmulp
mov
in
push
scas
push
into
cltd
scas
xor
in
sub
test
sbb
sti
cmc
fadds
js
aas
or
lds
das
push
lcall
push
cmp
inc
xorb
inc
dec
insl
sbb
sbb
xchg
jl
imul
pop
lds
lods
jg
roll
cmp
dec
sti
fsubl
add
pop
push
push
add
adc
call
mov
mov
in
mov
push
add
imul
mov
inc
pop
cli
push
adc
mov
stos
pop
mov
mov
mov
mov
scas
jnp
sbb
lret
and
cmp
or
cmp
jno
mov
mov
jl
nop
lcall
inc
jg
lcall
jns
cwtl
xor
ret
and
and
inc
imul
add
cmpl
lahf
outsb
jae
out
int3
cmp
xchg
jge
push
mov
jmp
ja
lds
das
push
std
pushf
mov
repz
pop
or
mov
or
outsl
mov
dec
dec
adc
aam
mov
lahf
out
cmc
fwait
pop
enter
xchg
dec
movsb
inc
addl
xchg
mov
repnz
in
sbb
hlt
adc
add
push
mov
test
or
ficoms
jae
mov
jb
repz
fld
in
push
movsl
shl
or
stos
rol
pusha
out
and
cmp
sbb
sub
push
int
xor
ds
cli
sub
imul
fisubl
jns
dec
lret
push
add
cli
imul
mov
lock
idivl
and
sbb
mov
arpl
mov
ss
stc
test
aaa
inc
xchg
fstl
pop
mov
fwait
test
adc
sbb
test
flds
fisttpl
sbb
cmpsb
jle,pn
and
xor
cmp
outsb
sbb
into
repz
pusha
push
dec
add
jbe
push
adc
mov
sti
add
shlb
xchg
mov
adc
in
adc
mov
mov
popf
cmp
pop
in
insl
shl
fisttpl
fimuls
push
mov
pop
lds
cmc
mov
mov
lret
out
fmul
es
jmp
add
mov
imul
jno
aam
jae
or
dec
xchg
into
lahf
add
addr16
push
jno
inc
std
in
jp
cld
clc
ss
jl
nop
mov
pop
add
push
lahf
jl
and
push
xchg
jbe
inc
jns
in
push
pop
and
in
push
out
jp
sbb
xlat
and
push
into
xchg
and
lahf
int
pop
xor
pop
out
mov
mov
dec
mov
loope
pusha
jmp
std
adc
mov
les
add
in
cwtl
inc
imul
mov
mov
dec
arpl
sub
outsb
cmpl
scas
mov
dec
cwtl
in
hlt
dec
adc
aas
mov
ret
push
cs
jbe
mov
insb
fnstcw
cmc
inc
mov
aad
ljmp
stos
jp
aad
mov
scas
in
loope
jno
pop
jl
data16
sub
sub
cld
jl
mov
jb
int
lods
dec
mov
stc
in
push
jmp
jp
mov
cmc
lcall
pop
jge
pop
cmp
jae
into
aam
jle
imul
dec
lods
jns
xchg
dec
stos
push
bound
jecxz
mov
jmp
js
fmuls
xlat
insb
mov
push
mov
pop
xor
iret
dec
inc
fwait
cmpsb
test
mov
fdivl
and
js
pop
shlb
repnz
shrb
lods
fsubr
or
mov
mov
pop
inc
lods
ffreep
mov
jg
pop
mov
and
mov
stos
sub
or
lds
cltd
in
andl
mov
mov
xchg
js
out
cmc
push
aam
sbb
sbb
mov
sub
stc
mov
dec
adc
push
jae
jo
lcall
ss
cwtl
dec
out
xchg
mov
mov
dec
in
adc
sbb
xor
ret
mov
pusha
and
jl
push
or
mov
enter
sub
out
in
or
cwtl
out
movsb
mov
xorb
call
pop
jg
dec
add
and
js
jl
sbb
or
lea
jecxz
aaa
sub
xchg
inc
dec
lock
shrl
xchg
ret
rorl
adc
adc
add
clc
lea
mov
xchg
das
arpl
inc
adc
mov
jmp
jmp
ss
sbb
xor
jb
fs
jge
daa
hlt
and
ret
push
and
negb
xor
cmp
jae
ret
roll
cmp
jle
shlb
jne
pop
cmp
jns
cli
push
jae
pop
lcall
jae
inc
scas
rol
out
xor
imul
and
cld
mov
es
inc
mov
filds
push
pop
shr
loop
out
add
mov
jmp
xchg
ss
repnz
aam
mov
or
pop
add
mov
movsb
add
mov
push
dec
lea
lcall
or
in
xchg
xchg
ss
fwait
xchg
inc
stos
or
jge
push
out
jg
loop
or
sbb
sbb
inc
aaa
es
test
inc
mov
push
mov
icebp
pop
loopne
ret
outsb
test
pcmpgtw
outsb
xchg
fidivs
sbb
aaa
in
sub
ds
orb
mov
bound
popa
loop
stos
sahf
cmp
popf
or
dec
sub
div
sbb
xlat
les
xchg
lock
mov
sub
jnp
dec
out
mov
dec
out
jo
mov
js
sbb
adc
xchg
ds
lahf
inc
xor
jp
inc
dec
inc
pop
bound
fists
mov
adc
pmaxsw
jl
jns
xchg
lcall
sarl
xor
push
loop
out
xchg
push
xor
mov
fnstenv
mov
mov
shr
gs
cmp
pop
mov
jae
stos
ds
pop
in
test
mov
mov
ss
pop
cltd
sbb
jbe
fsubrs
sub
popa
mov
mov
ret
sub
dec
out
das
mov
dec
sub
ret
ds
jno
jge
inc
sbbb
movsb
insl
aas
fisubrs
fsts
loopne
xor
out
push
pushf
add
mov
add
jnp
pop
lods
xlat
bound
xchg
push
xchg
cltd
add
lods
adc
push
and
and
jo
out
subl
dec
cli
push
pcmpeqw
mov
in
push
mov
pop
outsb
lea
addl
add
xchg
dec
ficoms
dec
xchg
sti
test
dec
js
mov
pushf
gs
repnz
mov
mov
outsb
mov
stos
xchg
push
pop
popa
ljmp
mov
jmp
sub
pop
xchg
push
dec
cmp
and
in
pop
mov
mov
pop
push
cmpl
cmpsl
mov
les
push
dec
jl
and
push
pop
pop
shlb
pop
pop
xchg
mov
pop
xor
mov
gs
dec
mov
mov
mov
call
mov
cwtl
bound
dec
aaa
sub
push
push
sub
aaa
call
adcb
scas
xor
imul
jecxz
outsb
fnstenv
hlt
shl
lret
push
fidivrs
dec
loopne
jns
cltd
bound
mov
test
outsb
js
push
pop
pop
pop
mov
and
iret
aad
fcomip
out
adc
addr16
mov
in
popa
push
xlat
inc
icebp
jae
gs
les
sbbb
int3
push
std
jmp
lahf
add
adc
dec
and
stos
xorl
cmp
push
mov
fwait
test
or
aad
out
push
pop
pop
xlat
add
and
ret
andl
mov
pop
test
rolb
clc
ss
enter
outsl
mov
arpl
dec
mov
lock
adc
shlb
or
adc
dec
scas
fildll
lea
pop
mov
or
pusha
fnstcw
loope
inc
jmp
cmp
repz
mov
jg
daa
mov
xchg
mov
cwtl
push
mov
push
jmp
inc
xor
push
pop
bound
inc
out
sub
scas
popf
mov
adc
out
mov
or
add
shl
sbb
mov
notl
lcall
mov
adc
clc
or
mov
add
loope
test
aaa
or
iret
insl
cmc
mov
pop
and
xor
test
imul
inc
and
inc
outsl
fxch
push
jno
imul
lds
push
lcall
fdivrs
inc
mov
test
jnp
jmp
stos
lods
or
mov
cmp
dec
add
movb
sub
in
icebp
sbb
das
xchg
mov
movsb
stc
lods
enter
add
sub
cli
outsb
pop
mov
rolb
faddl
pushl
dec
outsb
adc
daa
xchg
imul
ljmp
mov
dec
test
push
cmp
cltd
cmp
orl
imul
push
mov
add
gs
sub
mov
into
mov
js
push
jecxz
cmpsl
mov
sub
outsb
push
aas
sti
test
mov
orb
pop
jno
rclb
xor
pmaxsw
and
xor
popa
cmc
pop
mov
sti
fldcw
in
pop
bound
in
mov
push
cmp
push
adc
xlat
xchg
fcoml
dec
gs
push
std
les
mov
pop
or
jo
insb
shll
lfs
add
sti
mov
hlt
outsb
jns
and
mulb
shl
xchg
xor
add
hlt
iret
pusha
adc
pop
mov
sub
mov
cmp
mov
xor
les
push
rolb
fs
jmp
mov
pop
mov
and
arpl
inc
cmp
cli
cld
mov
and
movl
insl
xchg
xchg
out
pop
movsb
call
sub
mov
pop
xchg
ja
adc
pop
hlt
fs
xchg
mov
xchg
test
xchg
mov
add
push
xor
adc
clc
dec
idivl
jmp
movsb
inc
adc
push
imul
cmpsb
mov
daa
jge
mov
daa
lds
push
movsl
adc
sub
pop
push
jns
dec
dec
fistps
imul
inc
jmp
jb
push
arpl
gs
mov
ds
outsl
int3
rcrb
mov
repz
sbb
repnz
add
sar
shll
hlt
lret
adc
sbb
shr
iret
addl
dec
xor
jns
adc
sbb
stc
push
add
nop
pop
in
test
push
orb
fxsave
mull
mov
fldenv
iret
cmpsl
fiaddl
jb
sub
pop
sub
bound
rcll
pop
or
cmc
mov
fs
fisubs
push
mov
adc
test
push
insl
cmp
popa
pop
pcmpgtb
inc
in
imul
push
leave
pop
jmp
scas
adc
xor
pop
icebp
xchg
in
aaa
cmp
outsb
dec
popf
in
mull
dec
add
mov
jno
js
pushf
movsl
test
xchg
lea
xor
out
sub
mov
ficoml
xor
hlt
aas
faddl
lock
cmp
push
or
imul
cmp
or
nop
nop
data16
xchg
adc
cmpb
gs
xor
in
jbe
xchg
movl
sub
lods
lds
cmpsl
and
push
repnz
stc
or
sub
xchg
push
pop
ss
pop
enter
out
dec
jp
jmp
add
gs
outsl
or
adc
nop
daa
push
jg
push
xchg
stos
std
mov
pop
lcall
je
loope
cmpsl
outsb
out
sub
mov
sahf
out
ret
mov
mov
cmp
sub
adc
seta
sub
enter
inc
mov
cmp
jo
scas
jge
sbbb
pop
inc
mov
push
mov
or
or
notl
dec
mov
push
into
fisubrs
inc
jp
imul
push
repz
lret
xchg
cld
xor
inc
mov
popa
push
enter
mov
xor
sub
inc
cmpsb
cli
pop
dec
push
adc
cmp
inc
cli
fidivs
arpl
pop
clc
inc
jno
and
lahf
or
xchg
out
adcl
cmp
mov
das
jb
cmp
cmpl
insb
xchg
jnp
and
jle
push
in
out
shrb
jge
orl
pushf
and
out
lods
movsl
idivb
push
lods
push
sub
js
lea
and
pop
mov
dec
xor
imul
and
in
das
add
movsl
fmull
out
inc
xlat
sbbb
sti
iret
imul
adc
shll
out
stos
loope
sbb
mov
push
push
into
addr16
fmul
xorl
mov
pop
dec
addr16
xor
push
xor
into
hlt
adc
int
arpl
cmp
dec
sahf
jg
call
call
mov
pusha
mov
insl
fwait
iret
xor
les
mov
clc
xchg
insb
and
jno
adc
je
rcrb
mulb
imul
nop
lahf
inc
xchg
sbb
and
rorl
fwait
xor
and
outsl
arpl
outsl
dec
lods
jle
dec
dec
mov
push
fdivrs
sete
das
push
insl
push
inc
mov
shlb
jmp
outsb
cmp
js
mov
notl
sub
jno
fistpl
movsl
nop
adc
lock
mov
pop
mov
pop
fiaddl
icebp
jnp
mov
and
add
pop
rol
inc
scas
cmp
sbb
jecxz
into
add
cmp
pop
rcr
lock
inc
scas
jg
sub
outsl
cmpsl
sti
arpl
xorb
movsb
pushf
fisttpl
pop
data16
je
adc
xchg
mov
inc
daa
negl
push
out
add
aaa
insl
sbb
aad
jmp
push
dec
jb,pn
pop
popa
sbb
mov
je
test
aas
adc
stos
cmpsl
sub
mov
jb
and
icebp
cwtl
pusha
mov
leave
xor
add
movsl
mov
fldt
xlat
fiadds
mov
or
call
vcvtsd2ss
hlt
cmp
add
mov
pop
jbe
sub
adcb
hlt
adc
sbb
sarb
arpl
dec
arpl
nop
adc
lds
sbb
aam
pusha
fisubs
add
xor
pusha
push
leave
ja
popf
cmpsb
xor
jo
push
nop
cmc
mov
daa
ret
sbb
hlt
sub
dec
xor
loop
outsb
ret
in
sbb
xor
out
dec
xchg
jne
pop
push
push
icebp
inc
popf
fiaddl
stc
or
pop
into
push
ret
jnp,pt
aam
loopne
popf
lret
or
mov
xchg
inc
enter
imul
idivl
scas
mov
stos
push
out
add
lds
lds
pop
mov
daa
xor
cmpsb
movsb
push
adc
fs
ja
stos
inc
xor
adcl
adc
or
arpl
mov
mov
loop
mov
gs
jge
insl
push
in
out
and
sarb
lds
mov
and
test
push
mov
pop
das
insl
mov
or
lcall
push
negl
mov
xorb
sub
pop
xchg
add
sahf
int
cmc
cmp
xor
addl
push
subl
jo
jl
adc
repnz
sbb
adc
scas
sub
jns
insb
gs
xchg
dec
cwtl
jnp
mov
imul
add
mov
fdivr
incl
mov
lods
popf
jbe
lret
in
data16
and
pushf
adc
shrl
jmp
cmp
rcrl
dec
stos
pop
and
lods
mov
jnp
lret
mov
sub
imul
and
inc
enter
jp
scas
pusha
jge
jnp
mov
repnz
je
dec
pop
cmp
nop
jge
sub
das
cmp
out
inc
stos
testb
mov
nop
pop
push
push
xchg
mov
das
fbstp
out
stos
lret
mov
fstpl
cmp
shll
push
cli
add
dec
clc
ret
sbb
jo
dec
adc
les
jno
out
xor
aaa
xchg
cmp
mov
jmp
mov
dec
sbbb
lea
and
jno
mov
lret
jne
out
pop
sbb
add
stos
insb
dec
cld
cmp
mov
inc
frstor
test
addb
adcb
lret
inc
xorl
jg
cs
fidivl
jne
aas
aaa
leave
mov
xor
add
dec
mov
rolb
insb
pop
cmpsb
cwtl
sbb
jp
outsb
dec
out
adc
push
push
xor
or
in
push
pop
dec
xor
popf
fsubrl
lock
jle
push
push
and
adc
icebp
mov
add
inc
and
add
pop
sbb
imul
mov
cmpsb
mov
xchg
pop
pop
cmp
fldl
int
or
int3
jp
mov
aam
stc
pop
out
in
jp
movsb
xchg
in
arpl
dec
loopne
cmp
icebp
mov
stos
adc
add
dec
mov
ja
loop
data16
xchg
jo
mov
inc
jmp
sbbb
push
adc
pushf
in
pop
and
xchg
nop
mov
in
test
out
sub
aaa
adc
scas
daa
pminsw
inc
dec
pop
stos
cmpsb
test
fstpt
sbb
push
adc
mov
cmpsb
and
cmpl
xchg
test
mov
inc
ret
hlt
mov
inc
fucom
es
int3
fisubrs
and
push
inc
lret
fcmovne
mov
je
jae
or
push
inc
ljmp
in
not
adc
xor
mov
add
sub
ret
jl
ror
pop
jne
sahf
fldcw
mov
cmc
outsl
cltd
xchg
and
hlt
fs
mov
adc
cmp
fwait
jmp
sbb
cld
jae
xor
cs
lods
lret
xor
incl
lahf
mov
sub
pop
test
ljmp
insl
outsl
mov
leave
and
in
pop
adc
cmp
clc
or
jmp
rcrl
loop
sarl
sbbb
xchg
in
dec
lret
clc
stos
mov
adcl
cltd
insl
jle
std
fidivs
jnp
leave
cmp
rcl
adc
aaa
pop
xchg
or
inc
mov
aad
push
lret
push
mov
fldl
leave
into
stos
ret
push
sub
or
lock
xchg
into
adc
arpl
adc
add
inc
fdivr
pusha
test
lahf
orl
popf
xchg
enter
dec
sbb
cmp
or
fwait
inc
push
and
pop
jo
xlat
call
xor
and
or
and
insb
xchg
adc
imulb
jle
adc
dec
mov
mov
add
or
mov
pop
push
pop
mov
ret
adc
hlt
lret
call
push
cmp
shrl
lret
icebp
jle
mov
xchg
lret
pop
cmpsl
ss
arpl
in
and
mov
gs
scas
and
fmull
enter
xor
pop
hlt
cmp
fsubr
jmp
cwtl
sub
gs
or
dec
mov
cld
mov
mov
sub
les
dec
inc
ret
dec
xor
cvtpi2ps
pop
pushf
sbb
loopne
mov
jns
xchg
repz
mov
push
sbb
scas
jecxz
stos
stos
clc
adc
dec
fdiv
mov
xchg
push
fistps
inc
sbb
fldt
call
jb
inc
insb
add
sahf
inc
repnz
and
push
shll
pop
xor
xchg
sbbl
dec
popf
adc
bound
sub
pop
arpl
and
arpl
iret
pop
xchg
rcr
test
push
sub
push
mov
pop
jno
push
xchg
sbb
nop
cmc
subb
pop
jbe
cmp
sub
mov
imul
cmp
bound
lahf
cmp
inc
dec
mov
aam
bound
xor
shlb
fldenv
sub
scas
push
cmp
insl
dec
pop
push
insl
sarl
cmpsb
sub
push
pop
fsubs
scas
ja
jne
adc
stos
and
into
nop
push
push
jo
jo
arpl
add
push
daa
int3
sbb
idivb
out
jp
movsb
xor
or
and
dec
nop
inc
sarl
cmp
sub
lcall
dec
mov
inc
inc
data16
fbld
adc
stc
lret
fcomps
aam
push
xchg
and
pop
mov
xor
arpl
aam
mov
and
jns
ds
push
ja
dec
cmp
jl
add
jmp
xchg
pop
pop
jns
out
insb
adc
push
mov
adc
jg
stos
mov
repnz
orb
xchg
icebp
imul
dec
sarl
ret
push
jno
mov
mov
jnp
xor
xchg
mov
inc
addr16
flds
rcr
mov
xorb
jl
sti
movsl
xor
pop
push
add
test
mov
scas
push
sarl
fwait
add
push
xchg
rcrl
sub
cmc
pop
pop
jecxz
lcall
xchg
xchg
xchg
and
sbb
mov
add
stc
mov
out
jmp
add
xchg
std
push
arpl
addr16
imul
xor
sbb
xchg
fsts
cs
xchg
ja
xchg
cmp
cmp
lcall
push
pushf
adc
cmp
pop
dec
push
mov
andb
insl
mov
das
mov
cmc
jnp
sub
add
or
cmpsb
shrl
cmpsb
push
sti
test
cmp
rorb
jecxz
cmp
jmp
test
inc
aas
jmp
mov
shrb
clc
insl
push
enter
pop
inc
adc
sti
add
jecxz
rol
push
repnz
into
popa
insb
sub
add
pop
faddl
mov
push
imull
push
and
fs
daa
or
idivb
mov
xchg
mov
xor
inc
loope
aam
aaa
leave
fsubs
aad
pop
out
push
hlt
jne
mov
and
test
mov
sub
pop
jp
pop
push
jge
mov
mov
adc
lea
jne
mov
inc
xor
mov
les
repnz
mov
sub
loop
test
cs
or
mov
xchg
or
je
adc
jecxz
mov
sbb
mov
or
cmp
xor
sbb
data16
das
les
test
orb
adc
std
pop
insl
pop
inc
loopne
or
pop
out
aas
clc
inc
jl
lret
aam
pop
bound
cmp
mov
push
push
cld
leave
adc
mov
sub
popf
rolb
inc
push
push
mov
cmpsb
xchg
pop
xchg
lods
jg
or
mov
and
icebp
jnp
pop
pop
push
sbb
mov
aas
sub
cmc
adc
mov
adc
data16
lods
orb
pop
and
adc
inc
push
add
xchg
cmp
xor
mov
hlt
call
cmp
out
mov
mov
add
dec
imul
or
imul
frstor
pop
cltd
call
mov
xchg
loope
adc
lcall
xlat
sbb
sbb
ljmp
lahf
pop
mov
sbb
stc
lods
sti
add
cmp
lret
mov
sub
or
clc
icebp
inc
int3
rcrb
mov
test
add
and
je
testl
mov
out
in
mov
ja
pusha
out
mov
xchg
out
sbb
leave
data16
sub
rorb
cld
xlat
jp
ret
adc
fadd
jge
fstp
cmp
or
push
push
sahf
jge
cltd
sahf
dec
movsl
mov
je
xchg
nop
jg
jbe
cmpsl
xor
jp
pop
sbb
fnstcw
out
xorl
inc
cmc
aam
jno
loopne
imul
bound
pop
dec
fwait
cli
pop
andb
das
call
push
adc
dec
sar
mov
js
push
dec
enter
or
mov
leave
add
jnp
rdtsc
pushf
lock
in
add
cld
push
test
scas
cmp
addr16
jae
xor
sti
cmp
cmp
in
jmp
mov
pcmpeqd
in
repz
xor
icebp
sbb
pop
js
push
int3
dec
rol
mov
mov
and
sbb
lock
lock
jl
pop
aad
mov
adc
mov
adc
xchg
pop
test
xlat
jg
pop
cmpsb
mov
xchg
test
int3
aam
lahf
lcall
mov
mov
sbb
cld
in
in
mov
popa
xchg
or
or
xchg
scas
int
out
mov
xor
clc
out
jbe
cwtl
into
jle
cmp
enter
lcall
sbb
mov
in
jle
stos
out
rorb
call
lcall
shrl
fwait
js
orb
inc
jnp
loopne
cltd
mov
jnp
sbb
hlt
cmc
pop
popf
xchg
fs
jbe
push
clc
xlat
aaa
push
dec
lcall
inc
or
and
xlat
jl
in
cs
adc
iret
test
xor
and
rcl
pcmpgtb
les
pop
out
rcr
pop
mov
fsubr
jb
fisubrs
in
xlat
sub
dec
push
inc
sahf
stc
inc
push
dec
popf
scas
lock
hlt
nop
xchg
arpl
xlat
mov
xor
hlt
mov
frstor
mov
pusha
push
rorb
push
pop
lods
jnp
lock
aam
sti
or
pop
stos
push
push
xor
or
xor
out
dec
cmp
loopne
ds
push
leave
jns
nop
cwtl
je
cmp
ds
fildll
xchg
inc
fildll
test
xor
adc
push
repz
vmwrite
cmpsl
out
inc
mov
xchg
inc
movsb
loopne
cmp
cwtl
lret
cmp
ljmp
xchg
mov
js
cli
out
inc
adc
cmp
mov
jns
cmp
push
lock
jbe
push
jge
sbb
jno
hlt
inc
jbe
jp
and
jae
out
fcompl
or
insb
clc
mov
and
aas
fsubr
daa
sbb
mov
scas
push
add
mov
adc
mov
adc
and
unpcklps
hlt
jmp
push
ds
fs
scas
add
pop
push
fisubs
lock
outsb
and
rcll
call
test
rcll
lret
clc
push
push
xor
cmp
xchg
pop
push
push
and
jl
cltd
add
icebp
in
inc
fldcw
mov
xchg
rorl
mov
pop
out
imul
xor
test
xor
mov
les
arpl
stos
test
push
popa
sub
clc
shll
stc
or
mov
mov
pushl
sub
inc
imul
add
mov
and
fnsave
push
in
andb
clc
fcompl
add
jl
pop
sub
lock
adc
in
cmpsl
test
lea
das
xlat
rclb
pushl
sarb
and
mov
jnp
repnz
mov
cmp
jl
pop
mov
imull
out
add
pop
shr
mov
cld
hlt
push
js
pop
dec
cmp
jle,pt
or
jbe
dec
jo
push
mov
imul
aad
adcb
jb
lock
fcmovbe
jp
or
pop
stc
mov
mov
stc
sub
push
test
fmul
int
cmp
popa
in
pop
cs
pop
rolb
mov
sbb
sbb
popf
mov
sbb
mov
aam
sbb
adc
jo
and
fcoml
and
test
mov
pop
push
and
jb
cmp
or
push
add
jge
shl
cmp
jp
jge
sub
jo
packsswb
enter
sub
ja
add
pop
out
lea
clc
pop
mov
aam
pop
xchg
cmp
imul
pop
and
mov
add
loop
inc
add
pop
insb
gs
out
js
out
shlb
idivl
loope
add
push
out
shlb
jnp
jb
jo
cmpsb
cwtl
pop
sahf
out
in
or
xchg
fistpl
sub
aad
ds
xchg
pop
lea
scas
fs
sahf
fs
sbb
mov
inc
xor
mov
push
sbb
xor
and
xchg
lods
and
mov
rol
mov
sub
jo
lods
test
mov
repnz
inc
lea
std
popf
mov
mov
xor
mov
xchg
into
iret
nop
push
std
cmp
ret
jnp
add
aad
in
les
stos
pop
hlt
dec
lock
jno
aam
mov
inc
jmp
mov
sub
sub
lea
inc
dec
mov
lods
rcrl
test
loope
notl
cmp
sub
daa
int
push
sahf
sbb
lods
push
pop
push
insl
xchg
ret
xchg
inc
mov
inc
adc
push
dec
rcll
xchg
scas
xchg
push
and
out
mov
dec
or
jmp
and
pop
aas
add
addr16
cmpl
shlb
and
pushf
xchg
arpl
and
rolb
mov
adc
adc
xor
sbb
hlt
push
or
sub
jo
sarl
mov
add
jecxz
xor
mov
je
xchg
lahf
hlt
push
pop
aad
xor
cs
mov
movb
shrb
dec
push
fs
mov
cmp
xor
ds
xor
mov
sahf
sbb
push
push
cmp
add
xor
stc
xor
mov
mov
inc
cmp
repnz
sbb
int
push
and
push
mov
sub
and
mov
movsb
or
jne
scas
add
adc
xchg
lods
and
adc
xchg
xchg
xor
push
and
call
jmp
xor
movsb
inc
sub
int
push
xor
xor
pop
mov
xor
loope
outsl
jae
sub
push
add
mov
fsubl
std
icebp
aad
pop
mov
mov
or
inc
jle
stos
and
mov
pop
inc
outsl
fldl
sti
mov
dec
es
pop
outsb
inc
mov
push
xchg
and
push
mov
lret
mov
or
cs
pushf
out
je
ficompl
mov
insb
adc
pop
jmp
lret
jae
dec
int
movsl
jecxz
mov
jmp
push
xorb
mov
imul
subb
fimull
adc
arpl
shlb
xchg
ficoms
inc
sbb
or
cmpsl
adc
push
gs
push
les
cmpsl
inc
dec
mov
sbb
out
add
sti
sub
insl
inc
jno
das
loop
mov
inc
pop
bound
push
add
mov
sbb
hlt
mov
adc
adc
outsb
jl
aad
pop
sbb
jg
push
lret
aam
les
pop
daa
pop
mov
cmc
and
ljmp
ds
cmp
jl
mov
loopne
xbegin
movsl
shl
inc
mov
les
and
add
add
shrl
ret
cs
cmp
mov
add
mov
xchg
or
mov
gs
push
enter
orl
cs
enter
ds
cld
pop
les
pop
xor
push
mov
repnz
mov
mov
sub
push
ss
or
xor
imulb
xor
pop
fsubrl
sbb
inc
shlb
aam
push
push
js
adc
or
popl
lea
xor
test
movsb
dec
stos
js
and
or
adc
adc
dec
std
shl
fiadds
das
pop
cmp
outsl
xchg
sub
dec
jmp
dec
mov
or
fidivl
and
xchg
pop
jno
mov
lret
lds
cmpsl
in
push
cmp
fmulp
rcrl
test
insb
and
and
xchg
mov
jge
mov
and
les
shlb
sub
jae
sbb
sbb
std
add
shll
stos
xor
cmp
cld
stos
mov
push
push
jae
pop
mov
fldenv
dec
fcmove
sbb
cmp
or
lahf
mov
out
xchg
pop
and
or
loop
dec
fidivrs
adc
add
out
mov
ret
arpl
pop
jne
lea
das
loope
ds
push
mov
mov
in
mov
dec
insl
xchg
adc
movsl
mov
fisubl
mov
cmp
pop
xchg
pop
shlb
mov
push
jg
insb
mov
xchg
loope
imul
adc
xlat
dec
shl
in
loope
stos
lcall
pop
mov
cmpsb
cli
xorl
sub
test
int
loop
lahf
and
cmp
into
xlat
pop
mov
repz
bound
mov
mov
pminsw
mov
test
xor
stos
cwtl
pushf
test
lea
sub
je
jecxz
ret
nop
les
divl
jmp
mov
arpl
arpl
out
and
fucom
daa
mov
jg
push
jne
aam
dec
mov
imul
cmc
push
ret
xor
lret
xor
xor
xor
shrb
nop
cmpsb
std
jne
mov
sub
insb
das
push
sbb
inc
lcall
xor
scas
rolb
ja
adc
into
xor
addb
cs
jo
pushf
test
pop
xchg
lods
xor
dec
sbb
jnp
aaa
mov
and
cmp
sub
add
or
xor
popa
sbb
loopne
mov
ret
mov
adcb
daa
xlat
iret
fwait
sub
test
push
lret
jge
dec
mov
loop
cmpsb
inc
mov
push
movzwl
dec
cmc
sub
rcr
jmp
test
sbb
push
outsb
sbb
jns
fisubs
mov
mov
add
lods
inc
xchg
or
sbb
mov
or
sub
adc
mov
popa
mov
push
mov
xor
mov
mov
rcrl
mov
clc
popf
jecxz
scas
push
pop
and
and
add
pop
pop
pop
lock
sbb
inc
xlat
out
mov
test
pusha
jbe
into
fadd
sbb
test
fstpl
mov
xor
lea
sbb
or
loope
loop
cmpsl
lods
dec
lock
mov
sbb
xchg
ja
std
cs
out
lock
pop
aaa
pop
roll
cwtl
or
cltd
xchg
mov
jbe
and
jno
push
mov
mov
repz
stos
movb
xchg
scas
add
and
adc
or
fstpt
xor
pop
push
sbb
cwtl
adc
jmp
mov
daa
int
jge
mov
and
push
dec
stos
mov
jno
add
cltd
mov
sahf
inc
pop
sub
jle
add
jne
pop
or
fwait
nop
imul
mov
sub
push
mov
cli
into
bound
pop
repnz
push
ret
ja
pop
leave
fistl
sbb
incl
xor
cltd
and
cwtl
jo
insl
ljmp
mov
sub
jo
idivb
rorb
andb
push
fimuls
jmp
mov
lock
cmp
mov
in
dec
sub
lods
popa
xor
sub
stc
push
mov
lods
dec
or
fcoms
push
andb
lcall
and
mov
and
mov
nop
jmp
mov
repnz
mov
dec
or
test
dec
sbbl
jb
mov
xor
add
push
ds
adc
fcomp
mull
and
cs
cmpsl
push
inc
mov
fmull
dec
inc
mov
mov
test
pop
fwait
js
scas
jp
mov
lcall
ljmp
inc
imul
jmp
out
mov
sbb
xchg
push
pop
outsb
aad
pop
fwait
sub
lods
outsl
js
mov
and
cmpl
es
adc
cmpsb
loope
mov
inc
test
into
daa
fimull
fxch
mov
add
fwait
push
xor
test
pop
sbb
pop
orl
fldcw
outsl
mov
hlt
push
dec
icebp
out
test
cmp
cmpsl
pop
mov
or
push
dec
int3
rclb
in
jp
cmp
aas
in
out
out
lds
dec
call
mov
test
test
inc
or
mov
jnp
les
call
pop
test
mov
sub
sbb
aaa
clc
divb
cltd
scas
push
adcl
in
sahf
pop
pop
das
mov
xchg
xchg
stos
dec
and
mov
dec
aas
sti
cli
ret
add
mov
pushf
call
les
inc
stos
pop
outsb
mov
push
arpl
mov
out
adc
orl
fsubl
jne
xchg
aaa
loop
fistpll
stos
or
mov
mov
and
cli
sbb
inc
iret
push
stos
sub
mov
jle
xchg
test
mov
rcl
icebp
jg
loope
mov
dec
incb
mov
aas
into
xchg
mov
imul
add
fmull
aas
push
aad
jl
and
xchg
pop
and
sbb
mov
mov
or
dec
shrl
sub
xchg
cld
out
xchg
and
dec
std
add
iret
or
or
mov
mov
mov
ret
add
sub
fwait
cs
out
jle
gs
js
in
or
sub
arpl
xchg
pop
adc
push
into
repnz
std
and
or
out
mov
push
push
inc
lret
xchg
ja
mov
xchg
push
nop
inc
fcompl
dec
jnp
cld
nop
xchg
xor
aam
ljmp
jecxz
dec
push
push
mov
imul
ljmp
sub
xchg
fistpll
push
add
jp
lock
dec
jmp
inc
push
mov
ret
ljmp
lcall
in
stc
and
imul
repz
popf
cltd
sub
or
adc
enter
in
push
xor
in
fcompl
incb
pop
inc
rclb
cld
mov
stos
scas
mov
mov
adc
sub
inc
mov
sbb
mov
mov
in
sahf
shll
mov
cmp
loope
psllq
pop
sub
nop
sbb
stos
cmp
shlb
out
out
inc
xor
mov
test
cmp
xlat
in
xor
and
push
outsl
push
push
in
add
inc
sub
mov
jnp
xor
or
jmp
clc
in
xor
adc
in
add
pop
pop
xor
cmpsl
cmpsb
mov
and
mov
js
lods
push
lock
popa
es
inc
or
mov
pop
mov
cld
sbb
loopne
sub
dec
sub
in
pushf
imul
jbe
negb
subb
leave
xchg
je,pt
pop
mov
out
push
int
pop
test
push
js
sbb
call
cmp
stc
mov
test
iret
mov
jmp
int3
cmp
and
xor
shrb
mov
or
das
push
mov
adc
adc
sub
faddp
xchg
cmpsl
scas
mov
sbb
add
cmp
lret
jo
cltd
stos
mov
and
test
ficoms
orb
mov
out
xchg
roll
in
aas
mov
jb
jo
in
fwait
push
mov
outsl
mov
out
mov
pop
mov
aas
mov
rol
and
aam
pop
out
mov
stos
lret
cmp
cli
dec
in
sbbl
out
insb
cmpsl
add
fidivrs
sub
mov
adc
enter
fdivs
mov
jg
ret
daa
mov
and
and
out
imul
insl
pop
xchg
inc
scas
sub
int
bound
or
les
loope
dec
mov
mov
push
push
in
xor
jge
pop
icebp
out
xor
jge
in
das
jo
popa
sub
push
or
js
jl
jp
into
push
repnz
fmull
adc
or
mov
sub
xor
movsb
outsl
mov
imul
cmp
insb
in
mov
cmp
mov
dec
das
mov
enter
fcomps
add
push
pusha
aad
jno
in
or
pushf
insl
mov
setnp
fs
jbe
lds
mov
xchg
mov
jne
cwtl
push
pop
lret
pop
mov
stos
test
fwait
add
pushf
fs
adc
mov
testl
lds
orl
cmp
push
jmp
stc
sub
fcomps
orl
int3
and
mov
sub
adc
sub
je
jge
or
xlat
jp
inc
test
xchg
jne
stos
dec
mov
or
stc
push
mov
in
stos
stos
and
jp
sahf
fsubl
mov
mov
dec
loopne
inc
mov
or
stc
jge
nop
inc
addl
iret
cmp
sahf
and
mov
sub
sub
mov
loope
dec
jb
sub
mov
mov
test
push
cmpsb
add
inc
leave
imul
out
fstpt
jns
mov
jae
leave
or
in
inc
mov
sub
add
pusha
dec
jns
dec
ret
sub
dec
sub
dec
lcall
inc
inc
aas
jp
adc
pop
dec
rcl
add
dec
adc
push
jl
lret
add
filds
scas
in
sahf
ret
lock
cltd
in
daa
sub
and
add
fucomp
or
dec
push
xor
adc
bound
orb
testl
or
scas
out
fs
das
mov
test
mov
jge
and
call
mov
pop
push
clc
mov
addl
cs
jecxz
lcall
rcl
jae
cmpsl
jp
je
test
jns
enter
xchg
sahf
subb
aam
lock
jns
rcr
repz
cli
sbb
or
mull
stos
add
and
mov
jo
add
iret
adc
sub
xlat
ja
popa
sub
sbb
inc
sub
push
xchg
cmp
jle
movsl
cs
movsl
xlat
cmp
and
rcr
fiadds
in
arpl
test
aam
inc
push
add
in
xchg
mov
mov
add
movsl
pop
add
sub
addb
cmc
cmc
adc
mov
sbb
imul
je
pop
out
mov
pop
jge
mov
sbb
jae
mov
add
into
lcall
or
pop
mov
mov
jbe
je
cmpsb
add
mov
bound
pop
sub
fisubs
pop
inc
inc
lea
xor
shll
sub
repz
loop
nop
pop
push
jg
imul
push
pop
minps
pusha
out
dec
dec
icebp
mull
das
lods
sbb
sbb
fcmovnbe
cltd
rcll
dec
orl
mov
pop
xlat
test
sub
jecxz
sub
bnd
test
imul
daa
dec
test
out
add
je
movsb
mov
or
adc
pusha
mov
rcrl
inc
xchg
sbb
das
sbb
or
test
jno
xor
adc
push
clc
pop
fdivl
test
inc
cli
cmp
orb
es
ja
dec
imul
cltd
out
add
jno
movsl
jb
enter
dec
xchg
scas
orl
or
into
iret
dec
push
fwait
cli
ret
push
push
pop
jno
add
cmp
mov
into
test
push
outsb
xor
mov
je
out
fcoms
es
aam
gs
cmp
hlt
into
pusha
inc
repz
jns
sbb
xor
jne
aad
pop
aad
test
repnz
lods
fsub
ret
cltd
pop
lahf
movsl
jmp
adc
pop
push
adc
in
push
xor
in
out
pop
pop
push
movb
pop
or
inc
push
lcall
or
mov
dec
or
xor
or
loopne
sarb
ss
sub
and
jle
ds
cmp
repnz
outsb
cli
xor
dec
idiv
outsb
lret
adc
div
pop
stos
dec
sbb
fstl
es
icebp
jle
fisubl
sbb
add
jne
jne
fs
inc
mov
roll
or
adc
push
inc
xchg
and
dec
push
mov
pop
subb
test
mov
mov
dec
aad
and
jbe
mov
fmuls
push
outsb
insl
js
mov
add
sbb
sbb
mov
xchg
and
sub
xchg
daa
add
ss
jbe
pop
sub
aas
mov
xchg
inc
sarb
call
outsl
jge
adc
cmpsl
jbe
scas
add
pop
stos
xchg
jne
jle
clc
enter
rol
je
mov
mov
div
lods
jp
movsb
leave
add
add
mov
sub
dec
dec
push
in
imul
int3
pop
cli
adc
lds
jae
xchg
mov
loope
or
fsubr
loope
lret
adc
insl
test
add
mov
mov
mov
bound
inc
dec
jb
loope
xorl
popf
stos
jge
add
arpl
jg
es
mov
aam
mov
jnp
jo
push
imul
or
ja
shrb
pop
add
fxch
mov
and
ret
pop
test
loop
fidivrs
jmp
gs
enter
test
int
or
stos
and
add
pop
push
sub
icebp
into
dec
fwait
jle
unpcklps
mov
fsubs
sub
ret
lret
jge
or
rclb
xchg
mov
fcom
notl
movsl
scas
js
fildll
mov
xchg
ficomps
xchg
outsb
int
mov
push
lods
jb
fistl
lahf
mov
call
or
ret
push
xchg
pop
dec
loop
or
push
adc
adc
mov
pop
ljmp
xchg
adc
faddl
out
pop
dec
cmc
inc
pop
xor
mov
dec
mov
movsl
fstps
inc
or
cmp
jg
adc
in
inc
xor
das
pusha
or
cld
es
xchg
pop
mov
stc
fstpt
paddd
out
repz
mov
push
shlb
mov
stos
fstpl
fnsave
sub
fsubrs
clc
adc
pop
mov
dec
xor
ss
push
mov
mov
mov
mov
mov
and
inc
aad
lcall
aad
mov
fildl
cmp
pusha
pusha
pop
cwtl
push
pop
pop
adc
inc
es
jl
xchg
mov
cmp
inc
pop
pop
mov
or
les
jnp
jnp
cltd
cmc
pushl
push
pop
push
sbb
sub
popa
pop
push
xchg
pop
leave
or
mov
dec
ret
jmp
sbb
into
stos
loope
mov
lock
push
jno
add
lea
add
shll
fbstp
fwait
jo
lcall
mov
push
adc
cmp
cmpb
xchg
xchg
daa
push
mov
test
jno
mov
cmp
les
lcall
pop
add
mov
ljmp
sahf
hlt
dec
sub
or
dec
lock
idivl
ficomps
ljmp
xchg
in
shl
sub
cli
adc
cwtl
jne
and
mov
test
mov
fiaddl
into
test
loop
mov
loop
mov
mov
xchg
xor
scas
ss
pop
sub
in
stos
sbb
test
xchg
pop
mov
jp
push
and
and
jp
pop
inc
gs
jecxz
stos
divl
add
jbe
and
lahf
inc
jne
cmpsb
ret
sub
jge
xchg
rcll
clc
fildll
xchg
pop
addr16
out
adc
sbb
xchg
rorb
int3
mov
sub
aad
test
fdivs
and
mov
inc
imul
out
fs
and
repnz
cs
adc
stos
sub
push
cld
lcall
xchg
fldl
push
jo
or
mov
jge
jmp
sbb
aad
adc
mov
inc
push
scas
cmc
sbb
sar
push
fiaddl
call
push
loopne
aas
pop
push
cmp
mov
ds
xchg
dec
jbe
ljmp
mov
imul
pop
cmc
xchg
xlat
cwtl
popf
mov
push
scas
and
dec
cmp
je
mov
cs
or
push
out
fldenv
add
lods
stc
ja
inc
xchg
sahf
xchg
pop
sbb
dec
and
outsl
testb
lds
pop
mov
inc
lret
push
leave
adc
jno
shll
and
ficoml
sbb
inc
push
push
cmpsb
sbb
bound
lret
fidivrs
xchg
xchg
add
lahf
movsl
cltd
pop
shrl
cmp
or
pop
mov
in
cmp
leave
in
call
jnp
sub
test
pop
test
add
mov
and
xor
inc
out
xchg
je
mov
xchg
fsts
dec
pusha
data16
or
and
imul
andb
xor
jae
add
faddl
std
sbbl
inc
jnp
lods
les
es
jne
cmp
pop
in
sub
jb
fcoml
push
push
xchg
push
pop
dec
loopne
xor
notl
inc
daa
jb
adc
lods
aam
add
fwait
fidivl
shl
lods
xchg
mov
cmp
roll
mov
cld
lods
std
outsb
dec
cmp
aas
jne
jp
sahf
sub
lret
add
jbe
mov
adc
fidivs
xchg
pop
mov
jae
sub
lcall
lds
int3
enter
ljmp
xor
repnz
cmpsl
gs
addl
and
test
lods
xchg
push
notl
pop
adc
mov
shlb
leave
js
movsb
cmp
jne
insl
sti
into
sub
hlt
pusha
xchg
cwtl
xchg
ds
les
mov
pushf
adc
mov
xchg
out
lods
inc
sub
mov
scas
jg
pop
pop
dec
mov
xchg
aaa
mov
arpl
movsl
mov
repz
iret
dec
ret
mov
mov
les
cmp
sub
push
pop
jae
fstl
es
fimuls
jmp
pop
sbb
in
shlb
pop
xor
sbb
aad
and
pop
pusha
adc
sub
aam
push
add
les
mov
pop
mov
mov
ret
shrb
aad
sti
pop
addr16
pop
fsub
mov
popf
or
mov
push
call
das
cmp
neg
cmp
adcl
into
mov
out
mov
push
jp
dec
xchg
push
xchg
addr16
sbb
inc
pop
pop
fdivl
inc
movsb
jl
cltd
ret
hlt
sub
nop
nop
xchg
pop
sbb
mov
cmp
into
xchg
sbb
dec
push
xchg
pop
out
daa
xlat
xor
ret
and
dec
dec
pop
jl
inc
or
rcll
sbb
pop
cwtl
inc
inc
pop
push
mov
mov
ljmp
mov
pop
add
mov
push
mov
inc
jg
or
and
add
or
inc
rclb
daa
ret
push
je
fs
into
inc
pushf
and
pop
xor
xchg
outsl
xchg
or
lods
aad
je
mov
add
adc
lock
jg
dec
repnz
mov
mov
ret
or
pop
ffree
push
cmpl
dec
cmp
outsl
fsubs
stc
fsubrs
aad
in
adc
dec
lods
fstl
and
inc
push
iret
rclb
xchg
flds
xor
cmp
cwtl
inc
pop
shr
cmpl
fildll
aaa
add
gs
mov
push
add
adc
jle
mov
test
bound
icebp
jno
xchg
push
jae
xchg
push
and
and
cltd
std
repz
mov
mov
pop
xchg
std
fcomps
jbe
mov
jo
and
cmp
icebp
test
addr16
les
sbb
add
outsb
sbb
rcr
mov
pop
add
sub
xchg
lret
jmp
sbbl
dec
mov
js
movsl
ret
or
mov
fidivs
mov
or
push
push
rcrb
and
mov
mov
fcmovnb
repz
xchg
jns
pusha
pop
std
scas
push
dec
mov
inc
mov
das
lret
ljmp
push
xchg
dec
cltd
mov
add
sbb
jecxz
xchg
loope
pushf
incl
iret
dec
xchg
fstl
loopne
int3
mov
imul
inc
inc
imul
and
add
rcrl
lods
std
jb
jbe
movsb
sbb
jle
push
inc
mov
daa
adc
hlt
rclb
jecxz
and
add
mov
into
pop
or
push
loop
movsl
int
clc
mov
loopne
aaa
mul
mov
push
out
test
aaa
sbb
aas
fwait
xchg
clc
mov
outsb
pop
mov
ret
mov
lret
dec
in
das
cli
std
add
scas
je
sub
pop
and
or
scas
xchg
mov
hlt
mov
dec
sub
mov
inc
rorb
mov
outsl
cmpl
daa
in
fst
mov
lret
pusha
popf
sub
dec
cmp
out
push
inc
cmp
fidivs
jge
add
jbe
lea
adc
loope
popf
imull
sahf
mov
out
adc
cmp
dec
or
filds
cmpsb
cli
roll
jge
test
jge
insl
mov
mov
mov
fstpt
nop
cmp
mov
mov
mov
or
stos
out
mov
mov
fimuls
loop
in
cs
imull
jbe
fstpl
sahf
add
icebp
in
cltd
mov
sbb
add
daa
sahf
pop
adc
mov
mov
mov
pop
add
mov
ss
adc
jnp
mov
xchg
mov
mov
mov
fsubl
mov
nop
jmp
ja
mov
aas
add
jne
sbb
mov
sbb
inc
pop
cmpsl
mov
sub
ds
adcb
pop
pop
js
cld
mov
ror
cmp
lahf
lret
mov
out
iret
mov
add
pop
in
outsl
add
int
aad
mov
imul
ljmp
lret
into
fdivs
jnp
inc
fnstsw
xor
repnz
sub
das
hlt
pusha
dec
les
or
flds
xchg
xor
lock
sti
outsl
sub
popl
in
nop
mov
adcl
sbb
clc
and
dec
mov
pop
and
in
ds
xlat
outsl
mov
stos
mov
sbb
sbb
cld
cmpsl
mov
push
xlat
jge
test
mov
inc
pop
notw
scas
and
test
xchg
lods
mov
or
ss
mov
push
aad
in
fcoml
ljmp
outsb
mov
mov
cld
xor
pop
inc
insl
mov
jge
ret
push
xchg
data16
into
sbb
mov
inc
int3
and
and
dec
stos
dec
insb
xchg
xchg
aad
in
push
orb
pushf
das
xor
dec
out
das
jno
outsb
arpl
sbb
ret
mov
movsl
lds
imul
je
mov
stos
ja
int
sbb
out
sahf
mov
cmp
and
xchg
cmpsl
rol
pop
cmc
mov
mov
xor
dec
es
xor
dec
push
and
scas
pop
pop
imul
into
dec
push
mov
mov
mov
xor
loop
ja
sub
pop
nop
call
gs
dec
mov
mov
sub
push
aaa
cmp
and
push
data16
mov
xor
adc
arpl
out
test
arpl
pop
mov
cmpsb
std
sub
jnp
jae
addr16
in
ljmp
push
mov
clc
testl
mov
pop
test
fsub
imul
call
xor
inc
adc
in
lds
jbe
lods
ja
jmp
mov
xchg
cmp
add
pop
mov
or
mov
push
xchg
int3
push
lret
pop
into
mov
cmp
call
shll
jecxz
fildl
mov
xchg
frstor
ljmp
jle
jb
lahf
xchg
data16
mov
jb
jmp
decl
clc
mov
inc
out
pop
and
cli
inc
insl
push
mov
jb
pop
mov
pop
mov
jb
mov
imull
stos
int3
fmul
lea
jmp
mov
jbe
pop
test
xchg
insb
cmpb
xor
stos
add
jae
mov
mov
shll
jp
inc
shl
ja
cmp
mov
inc
fsub
scas
mov
mov
fwait
sub
sub
mov
mov
jmp
sbb
dec
jg
push
roll
xor
or
dec
mov
inc
pop
int3
mov
mov
call
enter
das
jo
pop
dec
lds
xchg
scas
sub
adc
das
ja
mov
inc
push
adc
js
push
mul
outsl
out
pop
jnp
in
pop
hlt
fs
jg
add
fidivl
push
dec
ret
lcall
xchg
loope
ss
lahf
out
rcl
sbb
pop
cmc
loopne
incl
cmp
fcmovbe
pop
popf
into
xor
jns
cmp
outsb
xchg
sbb
outsl
in
xchg
pop
es
iret
or
das
outsl
cmpsb
sub
add
jne
adc
adc
add
rorb
and
stos
outsl
outsl
lcall
out
inc
es
push
xchg
mov
dec
popa
or
jne
mov
xchg
inc
pushf
mov
xchg
sbb
mov
mov
popf
les
cmpsb
lods
mov
incb
adc
cmp
pop
dec
sbb
sbb
jge
mov
pop
or
inc
lds
cld
sub
jl
mov
mov
fimull
dec
jb
pusha
mov
stc
dec
inc
int3
gs
xor
std
push
fidivrl
frstor
dec
pusha
jb
mov
pop
ds
push
xchg
fidivl
pop
leave
mov
inc
mov
lods
adc
into
dec
into
adc
and
xor
sub
aam
mov
cmp
loope
cmc
and
int3
ss
fmul
fcmovne
out
lods
rcrb
stos
pop
repz
cwtl
cmpl
leave
lock
cmp
sbb
mov
into
pop
jge
inc
add
mov
lret
xchg
arpl
mov
iret
daa
rclb
adc
mov
mov
dec
xlat
fldl
xchg
cmp
std
bound
addb
cwtl
cmovns
jno
push
jmp
in
sub
jl
cmovae
sub
fmull
aas
scas
daa
jnp
cmp
mov
or
add
jp
mov
sbb
or
ss
add
pop
leave
push
clc
add
lret
mov
dec
insb
pop
aaa
cmpsl
out
sbb
sub
lds
shrb
sbb
inc
fistps
pop
mov
jo
fcoms
push
jnp
xor
movsl
sbb
inc
mov
sub
sub
sub
xchg
mov
xchg
testb
adc
jp
and
loop
pop
sub
shll
mov
dec
ljmp
data16
mov
fs
cmp
and
movsl
cmp
sti
jp
mov
ds
jo
pop
and
mov
ror
xchg
in
insl
jge
pop
push
mov
jmp
orl
mov
xchg
out
xor
pop
xor
stos
mov
dec
outsl
lods
scas
or
sahf
outsl
or
enter
jge
mov
icebp
lcall
pop
mov
emms
fld
aaa
sub
jl
insl
xchg
mov
loopne
lea
out
movsb
pop
push
loopne
sub
pop
xor
push
cli
popf
sbb
test
mov
popf
loopne
outsl
aas
pop
test
push
adc
in
push
test
in
jmp
or
movsl
cmpsl
mov
int
dec
lds
mov
mov
out
inc
mov
adc
sbb
jge
mov
repnz
add
xor
mov
add
ljmp
aam
test
das
pop
mov
inc
cmp
dec
stos
dec
idivl
in
add
xor
jge
pop
jg
icebp
outsl
cmp
push
in
hlt
clc
xchg
test
rolb
sbb
aad
sub
lods
je
push
mov
sub
movsl
mov
cli
cmp
hlt
pop
lret
dec
mov
mov
mov
movsl
jg
test
inc
xchg
fwait
jno
into
jne
movl
cltd
pushf
dec
lret
in
mov
xor
sub
js
or
in
and
pop
mov
idivb
repz
in
repnz
pop
xchg
push
or
ja
xchg
push
ss
pusha
or
mov
arpl
ficoml
shll
xor
pop
mov
mov
jbe
mov
xchg
dec
inc
mov
popa
pop
dec
pop
in
jle
jb
addr16
inc
add
fwait
mov
cmp
inc
xor
mov
mov
fnstenv
cmp
mov
in
push
dec
popa
mov
rcr
fwait
pop
add
in
gs
stos
xorl
in
mov
jo
adc
fistps
out
stos
lcall
inc
dec
mov
shll
lds
dec
jno
in
mov
ret
ret
cmc
mov
fisubrs
mov
xor
cmp
sub
pushf
rcrb
xchg
xchg
push
inc
jnp
insb
lock
mov
add
stc
adc
dec
pop
sub
sarl
jp
bound
ds
and
xchg
sbb
dec
xchg
sahf
sbb
cltd
mov
add
cmc
cmc
xchg
jp
insb
jp
lods
push
mov
adc
mov
lds
inc
imul
jo
jge
call
lods
pop
inc
sbb
outsb
jne
mull
dec
push
mov
aam
pusha
pop
mov
test
push
jl
cmpsb
lret
fdivrl
arpl
cld
dec
add
cmc
sbb
mov
out
lahf
cmpl
inc
pop
sbb
xchg
out
xchg
xor
rcl
loope
mov
xlat
and
mov
add
repnz
fwait
jge
mov
or
ja
lret
jno
add
loope
xchg
cmpl
movsl
inc
add
add
repnz
mov
cmpsb
mov
lock
sbb
mov
pop
sub
xchg
xchg
ret
push
call
pop
stos
pop
adc
jle
sub
sub
mov
pop
fstps
sbb
sub
dec
incl
pop
out
fs
scas
insl
rolb
jbe
je
adc
inc
xchg
xchg
lahf
in
inc
xor
sbb
sti
lods
lahf
lods
sti
stos
clc
inc
mov
sar
int
and
neg
out
in
fiaddl
xchg
cmpl
mov
std
nop
xchg
adc
add
and
xlat
imul
xchg
jl
pop
jne
xchg
pop
cld
mov
fs
shlb
dec
push
rol
mov
jae
icebp
xor
mov
imul
cmp
shrb
mov
xor
fwait
inc
leave
adc
in
in
jle
out
pop
xlat
adc
cmc
jb
lcall
push
pop
mov
lods
jl
les
mov
cmp
pop
mov
fwait
mov
xchg
inc
inc
xchg
stc
in
or
inc
jb
mov
stc
pop
cmp
sub
xchg
icebp
or
and
sarb
repnz
push
cmp
push
dec
cmp
cmp
dec
push
adc
dec
inc
loop
or
mov
mov
cmp
or
xor
in
lods
fdivrl
xchg
scas
test
inc
jmp
sub
push
ds
xchg
xchg
fwait
dec
jge
pop
dec
call
xor
add
mov
rclb
std
mov
push
cli
jge
adc
loop
kandnb
and
in
ss
adc
test
cmc
xchg
loopne
sub
xchg
and
gs
mov
xchg
popa
cmp
sub
pop
xor
fwait
movsl
xchg
push
dec
mov
lcall
adc
or
and
clc
jmp
pop
and
daa
gs
cmp
cmp
adc
stc
cli
jns
push
mov
dec
xchg
int3
fs
sti
jno
pop
mov
gs
jmp
cli
dec
cmp
jmp
xor
sbb
loope
mov
add
push
je
gs
je
int3
or
xchg
outsb
das
es
dec
mov
les
test
and
in
sahf
mov
jno
stos
daa
xor
scas
int
sub
adc
push
push
jb
xchg
ja
xor
add
inc
push
sub
loope
movsb
scas
sub
adc
cmp
or
push
repz
clc
int
jle
adc
or
cmp
icebp
inc
adc
push
or
pop
sub
mov
jnp
mov
test
xchg
push
pop
sub
or
int
fstpt
movsl
mov
int
pusha
arpl
cmpsb
std
aam
mov
leave
sbb
call
hlt
pop
shlb
add
sar
nop
cmpsb
mov
mov
fsubl
ja
dec
sbb
sub
rorb
test
dec
dec
stc
xchg
test
xchg
and
cmp
xchg
and
scas
mov
sub
xchg
mov
mov
xchg
imul
shrl
lahf
sub
rcll
stos
rol
inc
pop
test
mov
and
js
adc
divl
or
imul
jae
out
push
fiadds
xor
inc
aam
insl
add
push
ret
xchg
or
xchg
rcrl
ret
mov
movsl
push
pop
mov
push
mov
jo
pop
insb
in
cmpsl
mov
inc
xchg
mov
inc
dec
mov
cmp
cmp
pop
sbb
xchg
or
out
stc
les
xchg
sbb
aam
ja
or
adc
in
jae
xchg
xor
sub
sbb
mov
xchg
dec
fsts
movsb
in
sbb
or
cmp
addl
push
fs
and
cmc
adc
mov
mov
or
fisubl
mov
add
xlat
push
sbb
iret
lea
sub
cmpsl
aaa
leave
fsubrp
insb
and
inc
add
pop
in
sahf
call
les
mov
mov
xchg
in
cwtl
mov
stos
cwtl
in
and
or
data16
mov
jmp
jne
fiadds
test
shlb
sbb
or
std
aas
add
ficompl
test
push
call
sub
or
in
inc
push
pop
cli
dec
add
sarl
sbb
out
hlt
mov
mov
sub
mov
mov
jns
adc
mov
add
cltd
add
or
push
test
lds
int3
stc
sub
repz
add
xor
add
dec
sub
mov
inc
pop
es
push
sti
popf
dec
push
fidivl
mov
jbe
lea
and
xchg
push
push
adc
push
data16
in
cmc
xchg
mov
pop
inc
jp
fmull
adc
fisttps
sbbl
enter
cmp
xor
push
pop
ret
cmp
jne
jl
cli
mov
push
dec
clc
mov
jne
aam
inc
jb
shl
adc
mov
aaa
mov
loope
scas
lock
sub
pop
and
xchg
hlt
mov
jnp
and
test
mov
xchg
bound
inc
lcall
mov
add
lock
outsb
imul
fldenv
sub
out
jmp
sbb
shrb
sahf
cmp
inc
pop
xchg
sti
call
sarb
in
fsubrp
addb
xchg
js
out
pop
adc
jg
movsl
cmc
mov
movsb
mov
int
mov
push
fldl
jb
xchg
dec
inc
mov
lahf
sub
mov
mov
push
sub
lcall
sub
aaa
add
shlb
dec
jp
and
jns
pusha
jg
push
pop
or
or
or
and
push
sahf
ja
push
mov
sub
mov
add
inc
add
mov
mov
push
adc
xchg
jecxz
adcl
adc
sbb
leave
int
shrl
add
mov
in
insb
in
jns
mov
dec
xchg
jns
nop
pop
mov
mov
mov
dec
iret
lret
daa
or
mov
out
cmp
dec
pop
inc
jbe
stos
mov
xchg
xchg
mov
mov
sbb
sbb
jmp
fistl
inc
and
xchg
xchg
leave
push
out
mov
pop
push
mov
jnp
das
or
adc
sub
push
add
movsb
xchg
bound
and
int3
aam
mov
mov
xchg
mov
ljmp
fwait
jno
fldcw
pop
mov
imul
mov
mov
popa
dec
outsl
pop
in
repz
cmpsb
mov
push
jle
fsubrs
clc
or
sarl
jns
rolb
stos
mov
mov
push
push
daa
mov
push
xchg
movsl
fbstp
sbb
dec
xchg
sti
or
xorl
lahf
push
hlt
inc
adc
xlat
pop
arpl
sbb
mov
rcrl
insb
test
sti
leave
enter
push
inc
mov
out
lret
sbb
sahf
adcl
pop
repz
push
lods
imul
inc
clc
add
cmp
imul
lcall
shll
dec
or
lahf
jne
jmp
xchg
xlat
xchg
inc
mov
mov
cmpsb
jae
fnsave
push
js
cmpsl
dec
movsl
movsl
int
jp
je
or
jns
mov
scas
popf
jge
ja
mov
mov
test
mov
lret
dec
and
pop
fcmovu
sub
push
cmpsb
loopne
dec
lcall
pop
xor
test
leave
fidivl
ret
inc
fstps
or
inc
and
sub
jo
xlat
add
outsl
xor
imul
and
lods
scas
movsb
xchg
pusha
sub
xchg
mov
pop
loope
adc
mov
enter
add
push
jmp
xchg
adc
bnd
test
xlat
push
bound
stos
mov
add
inc
xchg
jb
loop
call
enter
pop
lret
das
je
lret
roll
push
arpl
lods
xor
lods
out
mov
mov
mov
inc
xchg
loopne
mov
cmp
les
lods
iret
sub
xlat
sbb
lods
and
hlt
and
pop
pop
popf
sbb
stos
pop
outsb
clc
int3
into
call
mov
xchg
push
iret
in
fisttpl
leave
jle
mov
sub
cmp
mov
dec
lea
ret
sub
cli
jge,pt
movsl
add
jl
and
adc
aas
adc
adc
cmp
dec
xlat
pop
mov
mov
xchg
imul
popa
mov
adcb
in
dec
int
daa
sbb
push
cltd
jbe
sahf
lds
add
in
jae
enter
sbb
jp
lock
jns
xor
fdivrs
xchg
add
jp
cmp
stos
cmp
cld
imul
mov
sub
mov
imul
add
idivb
mov
data16
push
sti
outsb
loope
sarb
fsts
jnp
xchg
add
into
add
cwtl
idivl
cmc
fistps
sub
rcll
xor
je
and
call
xor
in
mov
dec
lret
adc
fs
mov
and
int
inc
add
inc
je
dec
push
aas
lods
test
or
test
push
or
outsb
pop
int3
xchg
mov
lret
sbb
gs
andb
xor
jb
aad
inc
xchg
andb
roll
inc
subl
sbb
in
mov
xchg
pop
pop
fs
mov
sub
jb
jmp
outsl
repz
incl
lock
in
sti
mov
or
mov
xchg
push
dec
sahf
and
jae
jmp
cmp
cmp
xchg
out
jl
push
add
rcl
mov
mov
jecxz
mov
jecxz
rclb
mov
test
xor
xchg
mov
mov
inc
fisubs
gs
jne
fadds
push
pop
enter
mov
sbb
shll
jmp
inc
pop
xor
sbb
psubb
test
les
fdivs
and
jo
sar
or
lret
test
mov
dec
ror
fdivs
cs
pop
xchg
push
dec
adc
lds
insl
sbb
lret
sub
mov
shll
sahf
hlt
cwtl
movsl
lret
add
fs
out
inc
and
mov
leave
inc
fwait
sub
dec
add
test
jne
add
pop
lret
and
sub
test
rcrl
loop
lock
or
je
insl
sbb
pop
pop
fsubrl
cltd
push
cmpsb
js
into
sub
jb
pop
sbb
mov
jmp
into
sbb
call
xor
je
sub
popa
loope,pt
out
pop
fimull
push
adc
fsubs
rcrl
insb
xchg
mov
cmp
push
adc
lea
cmpps
or
jge
sub
jbe
std
test
push
rolb
cmc
adc
ljmp
inc
lods
mov
out
dec
repnz
lcall
cmp
test
push
jbe
adc
mov
idivb
out
insb
cltd
fsubs
out
movsl
data16
sahf
std
lcall
pushf
pushf
and
mov
lahf
push
repnz
jae
push
call
fdivrs
lds
xchg
icebp
adc
push
add
jno
jecxz
push
pop
jl
in
testb
cmp
mov
dec
shrl
mov
out
rcr
dec
inc
fs
or
xchg
sub
loope
jne
xchg
dec
cmp
jno
dec
inc
adc
pop
mov
inc
xchg
sub
xchg
inc
jecxz
movsl
mov
inc
push
in
cmpsl
jl
adc
ds
or
jmp
jb
outsb
dec
xor
stos
fistl
xorl
push
xchg
lret
lock
cmp
mov
rclb
mov
pop
and
jns
test
adc
inc
stc
xchg
ret
leave
inc
push
inc
jbe
ret
iret
mov
cmc
addr16
push
push
shlb
int
fstps
xchg
das
sbb
cmpsl
cmp
cmp
dec
sbb
jmp
add
xchg
jl
fs
xor
enter
push
or
adcb
testb
mov
push
add
pop
lods
adc
lret
xor
jo
mov
notb
adc
inc
sbb
xchg
mov
lea
clc
mov
das
inc
and
or
fildll
jmp
jae
jecxz
cmp
dec
pop
je
adc
or
stc
rol
outsl
fcomps
pop
das
or
stc
pop
loopne
add
js
pop
cltd
call
dec
lahf
mov
in
jb
inc
mov
adc
pop
or
std
roll
inc
lret
sub
cmp
popf
sub
xor
movsl
mov
fdivrp
mov
push
inc
push
rorb
movl
sbb
filds
rorb
stos
jle
je
ljmp
or
dec
rcrb
sbb
in
ss
std
and
mov
mov
repnz
mov
lahf
das
fwait
adc
push
int
mov
call
dec
jo
movsw
lret
mov
inc
fcomps
inc
or
insb
mov
push
mov
add
std
lahf
cld
xchg
cmp
popa
and
adc
jg
mov
cmp
jnp
inc
out
rcrb
push
out
pop
mov
or
orb
popa
adc
inc
mov
jge
cmp
jne
lods
xchg
jmp
mov
adc
flds
shrb
push
sub
or
out
pop
cmp
push
jge
add
aas
push
sbb
xchg
inc
sbb
lock
test
mov
add
cmp
xor
push
addr16
cld
fisttpl
push
jo
jle
dec
mov
jns
dec
repz
icebp
sbb
cmovae
pop
cwtl
fwait
sahf
lds
cmp
bound
xor
repnz
fwait
add
lahf
fbstp
outsb
fstpt
jb
or
pop
lcall
xchg
xlat
push
mov
loopne
pop
mov
xchg
ficompl
mov
scas
lods
cmc
sbb
jg
pop
dec
or
hlt
mov
clc
or
or
cmpsb
loope
orl
inc
jns
inc
incl
lods
pop
rcrb
int
push
pop
lret
fdivs
push
cmpl
jl
and
ret
pop
cltd
lahf
jae
jb
inc
movsb
push
mov
fsubrl
xchg
sub
addr16
sbb
adc
je
lods
sub
xor
lds
pop
lds
mov
lods
popa
dec
cmp
xchg
push
sbb
cmpsb
and
out
pop
std
into
popa
fnstenv
pop
sahf
fdivs
stos
jo
mov
cmp
push
mov
in
cmc
je
push
xor
xor
out
mov
lret
inc
leave
xchg
jne
jle
mov
push
aam
and
add
dec
dec
sub
and
pop
icebp
subb
lret
icebp
fwait
pop
cmp
dec
adc
lahf
int3
and
lds
jo
popf
and
aad
test
aam
imul
rcr
nop
mov
xor
outsl
std
xchg
mull
dec
mov
popa
fildl
outsl
cmpsl
pop
mov
fnstcw
lock
incl
imul
sbb
xor
mov
pop
xchg
and
mov
mov
jbe
add
sub
pop
sbb
pop
mov
bound
leave
inc
jl
sti
sbb
xchg
loop
nop
jg
mov
loope
cmp
aad
sahf
les
movsb
fs
insb
lods
cmp
sub
rcl
lock
fadd
rorb
fbld
mov
xchg
mov
jbe
in
mov
mov
je
jnp
repnz
jp
xchg
jae
leave
popf
sbb
std
and
cmp
jl
mov
push
mov
pop
out
pop
mov
dec
dec
cltd
repnz
mull
dec
in
mov
sub
outsb
fcmovne
and
mov
hlt
xor
lock
ret
fcmovnu
add
cmpsb
mov
aad
inc
mov
adc
sub
sub
xchg
inc
es
xor
mulb
divl
jbe
out
inc
pop
mov
mov
cltd
and
addb
push
mov
call
xor
cmp
dec
clc
les
xor
ret
popa
mov
inc
mov
fidivl
ljmp
dec
push
int3
mov
mov
or
jns
cli
rol
dec
adc
pop
ficompl
lea
movb
addr16
es
xchg
stos
mov
clc
sub
cmp
test
iret
dec
inc
adc
mov
dec
inc
sbb
shll
arpl
je
into
cld
cmp
mov
notl
cltd
or
popf
dec
inc
adcl
adc
movsb
ss
lods
xor
and
mov
or
repz
ja
lcall
jp
out
mov
cmp
popf
ds
stos
iret
in
xor
rcll
sbb
push
mov
leave
cmp
fwait
push
gs
das
push
mov
ljmp
sbb
in
adc
adc
mov
or
dec
push
out
arpl
mov
sbb
pop
daa
pop
lock
shll
cwtl
testb
sub
pop
mov
mov
cmpsl
xor
aam
jecxz
loop
jo
push
out
in
mov
jne
hlt
or
adc
enter
push
adc
jbe
sub
out
jb
cld
pushf
mov
dec
orl
mov
cld
cmp
mov
or
lret
loop
and
xor
dec
cmp
popa
rcll
es
inc
push
cmpl
mov
jno
stos
pop
jbe
xchg
mov
mov
sbb
in
mov
mov
in
jne
xchg
or
out
imul
shll
mov
in
enter
dec
movl
mov
js
cmpsb
dec
in
inc
push
out
inc
inc
mov
pushw
in
mov
lea
mov
xchg
hlt
mov
jbe
call
ret
jo
bnd
jmp
pop
lock
adc
ret
enter
ret
mov
mov
jnp
mov
loop
in
cmc
cld
inc
mov
repnz
aad
sbb
adc
call
icebp
sub
inc
test
lret
pushf
xchg
jo
lods
shr
xlat
out
in
xchg
cltd
outsl
je
stos
cli
ror
popl
aas
in
mov
dec
inc
dec
mov
jno
gs
std
int
push
dec
ret
scas
mov
out
sub
out
inc
ds
adc
mov
test
imul
jnp
fcoms
xor
inc
cwtl
aas
repz
pop
cmp
jmp
dec
xchg
cmp
mov
loope
and
push
push
bound
jmp
cmp
clc
ret
jae
out
inc
push
sbb
sbb
adc
xchg
cmp
outsb
mov
aam
mov
jno
cmpb
test
add
jmp
sbb
inc
push
rolb
xor
pop
jmp
movsb
cmp
push
mov
push
popa
cwtl
and
sahf
mov
xchg
sbb
xor
mov
lds
fnstcw
mov
scas
data16
adc
push
cltd
xor
xchg
add
or
pusha
movsb
cmp
inc
insb
bound
pop
xchg
sub
dec
iret
in
jo
dec
inc
popa
dec
mov
adc
lods
cmp
rol
xor
add
xchg
mulb
shl
xchg
inc
sub
frstor
ja
push
xchg
pop
in
inc
adc
mov
scas
ja
and
mov
sti
mov
and
mov
mov
dec
mov
sbb
jecxz
mov
mov
xor
inc
aad
add
ret
cmp
jmp
outsl
push
stos
lret
or
inc
push
jnp
dec
repz
xchg
cmp
mov
sub
fimull
cmc
mov
jno
adc
xchg
xor
cmp
sub
sarb
xor
outsb
adc
repz
xor
mov
mov
rol
pop
lahf
sub
mov
or
repnz
enter
cmp
cmp
mov
rcl
xor
jns
cwtl
mov
mov
add
loop
mov
bnd
sti
stos
push
xchg
setnp
pop
loop
push
jg
pop
rolb
dec
ja
fisubrl
loopne
stos
mov
imul
lea
cmp
cmp
or
mov
mov
ss
ret
icebp
loopne
ret
inc
nop
movsl
pop
cli
addl
daa
pop
into
in
push
dec
jbe
or
fdivrs
fisubs
lods
test
mov
cmp
int3
mov
outsl
enter
test
jno
inc
push
xchg
mov
push
jge
mov
mov
divl
je
int
and
xor
fistl
dec
mov
pop
xchg
ja
jne
mov
std
mov
mov
lock
cmp
jae
int
shlb
lret
cmc
adc
aad
push
rcll
outsl
xchg
fs
in
cwtl
xor
xor
leave
fdivr
mov
jmp
mov
pop
mov
jno
shlb
push
mov
cs
int
add
cwtl
sbb
std
xorb
shr
jo
in
jge
add
pop
call
sub
icebp
pop
rcrl
int
adc
iret
or
xor
inc
subb
fimull
jno
aam
outsb
imul
sarl
test
faddl
cmp
pop
mov
jae
pop
imul
sub
jg
adc
xchg
mov
incb
xchg
aam
imul
cmp
sbb
and
sub
ret
xor
pop
lret
sub
add
dec
xchg
xchg
fcmovnu
repnz
ret
lret
mov
push
rclb
push
popf
stos
shlb
lods
mov
jo
adc
jbe
mov
mov
lock
daa
pop
out
and
pop
push
add
or
mov
scas
adc
mov
je
lea
mov
ljmp
cmp
mov
fcoms
jo
roll
jle
xor
sti
sbb
sub
sbb
jecxz
or
lea
mov
add
fimull
fldenv
arpl
out
mov
ljmp
xchg
cmp
ds
clc
je
xor
sub
add
pop
pop
negb
scas
sub
clc
inc
inc
adc
andl
stc
insl
pop
mov
call
leave
cmp
and
cltd
lock
es
loopne
dec
test
mov
fnsave
sbb
mov
loope
sarb
je
std
js
add
fwait
and
cs
or
and
xor
sub
sarl
lahf
inc
cmpsb
dec
add
mov
int
out
in
pop
pop
jg
dec
inc
xor
and
jb
stos
sbb
mov
fwait
stc
xchg
leave
int
mov
sahf
jb
pop
mov
adc
push
ljmp
movsb
push
loopne
fisttps
decl
jge
aaa
iret
popa
and
push
mov
sub
dec
pushf
enter
lock
aaa
xchg
test
ds
push
cmp
cmpb
test
movsl
lret
fdecstp
jnp
call
decb
sbbb
dec
mov
xchg
jg
lcall
push
cltd
sbb
sub
fs
daa
ss
sub
fnstenv
add
pop
cwtl
mov
and
ja
push
push
xchg
push
cmp
into
ret
imull
pop
fs
fstl
mov
nop
clc
mov
jbe,pn
pop
inc
mov
xor
cld
je
test
out
in
lret
mov
faddl
dec
pop
rcrl
imul
leave
xor
or
adc
mov
hlt
das
mov
into
fs
add
mov
mov
mov
lods
mov
cli
cltd
add
add
stc
sub
out
or
mov
mov
xchg
ret
pop
jae
stos
movsl
fwait
aaa
add
das
sbb
pusha
xorl
bound
pop
jae
adc
sub
jnp
mov
iret
jb
and
insb
xor
jb
mov
bound
mov
in
jecxz
imul
push
aam
hlt
mov
hlt
cmp
dec
sub
aam
push
xchg
push
enter
lods
pop
xchg
and
add
rolb
adc
push
xchg
ss
cmpsb
adc
das
leave
push
dec
cli
push
inc
fsubrl
dec
inc
lds
clc
pop
out
inc
push
xor
xchg
sti
lahf
shlb
aaa
subb
mov
aas
inc
mov
xchg
jne
iret
add
decb
inc
jns
xor
xor
test
lcall
jnp
call
rclb
push
dec
leave
adc
stc
icebp
fnstcw
xor
loope,pn
sub
insl
inc
xor
mov
movsb
mov
cwtl
fisubrs
std
cmpsb
imul
lea
mov
push
shlb
jno
orl
cs
hlt
xlat
jae
dec
ret
jbe
xchg
cltd
jl
roll
mov
fidivs
movsl
cmp
mov
pop
and
aas
clc
xor
cld
jp
rorb
add
es
sbb
enter
sbb
and
scas
lods
movsl
repnz
repz
ds
jmp
incl
lcall
dec
shufps
jns
mov
jo
mov
pop
jmp
es
xlat
or
daa
jnp
xlat
xchg
mov
insl
fwait
dec
mov
cmp
sbb
inc
xchg
stc
push
in
dec
mov
cmp
data16
loop
data16
pop
mov
nop
mov
cmpsb
insb
lea
popf
lods
push
cmp
cmpsb
cli
push
jmp
jle
xchg
dec
or
xlat
xlat
js
dec
inc
sbb
mov
lods
lods
movsb
xchg
xchg
add
jo
push
sbb
and
in
xor
mov
push
lret
cli
adc
dec
sub
notl
bound
mov
xchg
rclb
add
test
ret
inc
cmp
and
sbb
cmp
sub
jb
movsb
mov
jnp
cmpsb
or
or
push
mov
xor
popf
adc
cmp
aad
pop
add
std
outsl
loope
cmp
xchg
rorl
and
mov
nop
inc
dec
pop
pusha
mov
jp
loop
xorb
shrb
cmp
sbb
sub
or
xor
sbb
imul
imul
inc
ror
addl
les
xchg
dec
xchg
mov
mov
or
jle
scas
fcomps
out
ja
cld
pop
push
jo
scas
insl
cli
cmp
mov
cmp
add
dec
les
mov
lock
js
pop
dec
sbb
or
jae
insb
jae
outsl
dec
cmp
push
outsb
pop
mov
movsl
sbb
gs
shll
adc
test
test
jae
jl
pushf
xchg
lods
cmp
mov
movsl
push
lods
std
repnz
cwtl
nop
sbb
sub
dec
mov
lea
inc
cwtl
pushf
pusha
mov
in
imul
test
add
cwtl
jg
add
inc
adc
mov
sub
test
iret
mov
and
jp
xchg
add
js
jmp
cld
mov
nop
pushf
or
push
in
sarl
inc
add
aam
or
int3
cmp
add
int
out
out
stos
pop
push
mov
iret
xchg
scas
or
jge
fcmovb
pop
adc
ret
jbe
cli
add
xchg
insb
push
bound
or
je
sbb
and
pop
aaa
clc
imul
rcrl
jle
lock
ljmp
add
sbb
jnp
mov
sbb
testb
cli
pop
push
inc
sub
dec
dec
test
jecxz
jo
stc
icebp
divb
mov
pop
ret
or
push
enter
scas
jge
icebp
std
push
add
adc
or
cmpl
shlb
inc
cmc
cmc
sbb
push
sar
cli
and
or
lods
xor
xlat
lcall
and
ret
dec
inc
xchg
ret
lcall
pop
movsl
cwtl
insb
mov
add
in
mov
ss
es
sub
cmp
xchg
xor
jmp
je
je
pop
insb
cli
xchg
cmp
cmp
lods
or
or
pusha
and
shll
dec
mov
shlb
mov
and
cmp
into
fs
gs
sub
mov
xorb
push
pop
xchg
xor
jp
cmp
aaa
inc
xchg
insb
sub
mov
mov
jecxz
lret
out
ja
xchg
push
xchg
cmpsb
cmp
test
lods
fisttpll
push
out
push
in
jecxz
ljmp
dec
cwtl
rcrb
inc
loop
insb
out
jle
test
aad
jae
adc
or
pop
mov
out
xlat
and
jnp
out
adc
mov
jae
dec
aas
frndint
xor
pop
lock
in
cmp
jge
sbb
ret
sbb
cmpsl
sub
lock
mov
push
mov
es
mov
cmpsl
adc
cld
popf
repz
add
inc
sub
ficoml
jge
rclb
ret
adc
sub
push
cmpsl
sahf
outsl
push
fmul
pop
es
adc
sbbl
dec
aam
ljmp
push
inc
outsb
xchg
jl
pop
testl
fimull
pop
pop
xor
fnstenv
pop
push
xchg
aam
scas
cmp
or
pop
mov
adc
ja
sub
repz
fdivrs
push
dec
xchg
in
ficomps
pop
rol
mul
cmp
mov
dec
inc
mov
jg
aaa
mov
in
js
in
sarl
pop
add
jnp
ljmp
aad
push
or
pushf
push
sbb
push
aas
adc
ja
in
fwait
sbb
push
pop
and
sub
loopne
clc
cmp
mov
mov
test
cli
inc
sahf
gs
ret
iret
mov
rorb
xchg
sbb
jl
push
fstpl
pop
pop
mov
pop
ret
sub
dec
in
pop
xor
test
jl
mov
cmp
fnsave
fsts
jb
inc
lods
lcall
sbb
fldcw
enter
mov
push
lock
dec
ss
out
lds
cld
mov
and
ljmp
mulb
pushf
pop
jp
or
mov
pop
frstor
js
inc
insb
lcall
loope
adc
cmc
subb
add
outsb
and
in
cmp
jno
lcall
jle
push
call
mov
out
adc
mov
mov
outsl
dec
jg
and
shlb
mov
incl
imul
jg
pop
xchg
adc
cwtl
ficoms
dec
cmp
push
je
gs
dec
leave
out
xorl
inc
jb
or
add
mov
mov
rcrl
dec
cmp
stos
aam
ss
inc
aaa
call
push
xchg
enter
pop
and
cmpsb
loop
sti
lock
shlb
xchg
mov
in
lahf
cli
and
xchg
ja
pop
ret
jecxz
in
jge
pop
cmp
sbb
das
ret
adc
mov
pop
mov
or
adc
ficoml
pop
push
aad
push
mov
mov
xchg
push
mov
adc
or
dec
mov
xor
jo
sarb
arpl
mov
xor
aas
movsb
cs
jnp
in
sar
and
push
push
je
and
mov
daa
sbb
lods
sbb
insl
into
pusha
jle
sub
je
dec
and
or
and
jl
dec
mov
insb
push
fwait
cmp
xchg
les
push
loopne
sti
jae
mov
or
movsl
and
and
lods
pushf
into
mov
fwait
jl
out
dec
pop
push
cmp
dec
lret
pop
inc
iret
push
test
cmp
jno
mov
mov
loop
sub
ja,pt
test
mov
dec
dec
add
ds
negl
sbbb
mov
xor
xor
sub
push
jge
and
rorb
adc
dec
xchg
inc
jnp
out
mov
daa
sub
mull
aas
mov
and
lret
cmc
xchg
inc
rcll
cmp
pop
mov
clc
daa
rclb
fsubrs
push
xchg
mov
ja
xchg
push
jmp
jmp
in
popa
sbb
add
xchg
iret
scas
mov
xchg
adc
mov
cmp
sbb
sarb
movsl
mov
imul
sub
xor
cs
bound
add
mov
aaa
push
jecxz
and
push
inc
push
test
into
addr16
repz
add
jecxz
xchg
das
xchg
scas
inc
push
mov
iret
cs
test
je
mov
inc
add
pop
cmp
and
push
add
jge
mov
test
xchg
ds
or
lea
mov
cmp
outsl
sub
jg
push
xchg
les
and
lock
dec
fwait
mov
gs
jg
pop
pop
clc
sahf
pop
movsl
lock
in
jo
or
stos
or
call
inc
hlt
cs
xor
dec
xchg
lret
xchg
pop
mov
jecxz
in
insl
pop
dec
jl
add
out
sbb
les
and
inc
or
icebp
sahf
bound
jb
clc
jno
inc
jns
inc
push
mov
loopne
in
xchg
and
push
outsb
outsb
nop
jns
sub
sub
int3
js
rcl
mov
add
data16
hlt
mov
sub
pop
mov
push
out
cs
jl
ss
in
scas
inc
bound
test
arpl
mov
jmp
jge
lds
leave
scas
aas
insb
popa
repnz
mov
jb
push
ret
js
movsl
mov
inc
stos
sub
dec
push
dec
pop
out
push
sub
jp
cmp
pop
mov
mov
pop
into
mov
sahf
out
stos
push
test
subb
stc
ja
imul
mov
enter
xor
lods
or
es
sqrtps
in
insb
test
shr
neg
aas
cmc
aas
sub
fdivrs
cmp
cmp
dec
adc
cmp
mov
push
push
xchg
pop
std
sbb
dec
inc
or
push
xchg
repz
sub
push
or
loopne
add
sub
dec
mov
jnp
or
lds
sbb
dec
cmp
jae
adc
int3
cmp
pop
scas
rclb
clc
out
cld
adc
inc
adc
cmp
leave
popa
push
push
inc
imul
out
aam
inc
sub
loop
mov
std
divb
xor
mov
jnp
outsl
inc
push
subl
or
mov
jmp
xlat
imul
mov
xor
das
add
inc
xchg
and
lcall
loop
fidivl
ret
push
mov
jle
adc
lods
loop
addr16
mov
mov
call
hlt
push
inc
add
jmp
jae
inc
push
out
pop
icebp
es
pushf
and
fcmovu
sub
insb
jl
add
jno
push
sbb
pop
dec
mov
dec
loope
mov
push
stc
js
mulb
adc
inc
popf
sbb
adc
jo
xchg
push
xchg
jmp
fwait
in
push
sbb
dec
and
stc
push
push
mov
dec
cmp
push
out
dec
in
push
mov
inc
sbb
fwait
jl
or
movsl
inc
shll
and
nop
stos
ljmp
loopne
inc
fcom
stos
fcomps
fildl
es
orl
push
mov
fisubrl
das
inc
jge
pop
dec
xchg
bound
mov
out
neg
icebp
cld
outsl
iret
pop
push
add
sub
sub
pop
cmp
xchg
mov
mulb
imul
repz
and
mov
jnp
mov
adc
fldl
cs
dec
int
add
rorb
jo
jle
xchg
pop
loopne
mov
xchg
shrl
cltd
push
lea
outsl
ret
imul
stc
pop
into
int
loop
fucomp
int3
fisubl
mov
in
loop
adc
lock
cmc
cwtl
nop
das
lret
inc
dec
xchg
aad
pop
pop
cltd
xor
js
lcall
dec
lea
sub
xchg
mov
cmp
test
das
jg
inc
ret
sti
pop
add
fs
mov
and
outsl
push
jle
in
outsb
jae
test
inc
fs
cmp
gs
outsb
stc
xchg
cmp
repnz
xor
xchg
cltd
add
xchg
and
in
jo
push
filds
stos
andl
jle
adc
sbb
sti
cli
inc
or
jo
sbb
outsl
ret
cmp
mov
push
dec
les
sti
dec
mov
inc
sbb
movsl
mov
push
sub
int
and
fsubr
and
dec
repz
outsb
test
adc
cld
and
hlt
fmulp
mov
mov
mov
mov
mov
and
xchg
outsl
imul
cmpsb
add
pushf
iret
cmpsl
dec
jle
push
lcall
cmp
mov
mov
imul
inc
out
mov
jmp
xchg
rorl
sbb
add
scas
jne
xor
mov
mov
shlb
xor
cmp
jmp
mov
and
pop
in
stc
das
push
idiv
pop
push
iret
sub
lret
or
cmp
loope
sbbb
dec
mov
sub
jg
ret
or
jmp
jmp
jmp
dec
decl
sub
pop
ret
das
scas
push
jmp
sbb
shrl
les
adc
add
lea
cmpsb
lock
or
fwait
mov
insb
jp
popa
dec
push
push
fwait
push
push
rcrl
repnz
mov
inc
xchg
aas
pushf
call
dec
mov
jo
add
pop
pushf
jge
loopne
add
cltd
fs
leave
mov
mov
pop
fmull
mov
jl
mov
dec
stos
mov
outsl
pop
mov
adc
xlat
aas
inc
inc
add
cmpsb
inc
pop
cmpsl
add
cltd
cli
stos
inc
je
and
bound
sbb
jmp
xor
lret
orl
jns
addr16
jbe
rcl
sbbb
adc
lods
es
cmp
rol
mov
stos
iret
pop
lods
xchg
popf
jl
xchg
mov
xor
andb
xchg
popa
shrl
test
movsb
or
jns
shl
add
mov
xor
jns
lahf
xlat
jg
stc
scas
mov
jg
add
ret
pop
fsubrl
xchg
addr16
mov
pop
xchg
push
dec
sub
adc
adc
mov
movsl
adcl
jge
mov
hlt
jne
outsb
mov
mov
ret
mov
cmpsl
mov
mov
test
ja
pop
cmp
and
adc
xor
hlt
push
push
cmp
and
jge
ror
jae
scas
mull
mov
repnz
and
dec
or
push
imul
mov
dec
jle
xchg
cmp
lret
xorb
imul
dec
les
lcall
jl
movsl
inc
lock
es
rorl
inc
shrl
imul
pop
cmp
dec
jp
imul
scas
mov
std
pop
and
jge
lret
loop
leave
lea
xor
push
or
dec
in
dec
mov
pop
push
out
and
pop
bound
popf
xor
sti
jp
outsl
cmp
shl
adc
je
outsb
movsl
jl
xor
aad
push
jge
shrb
lcall
repnz
js
int
test
js
ljmp
sub
mov
sbb
add
dec
jne
and
push
sub
push
sbb
jecxz
pushf
repnz
xchg
movsl
jo
mov
test
cmp
add
mov
mov
mov
icebp
add
mov
adc
mov
out
mov
inc
aad
sti
aam
jb
ja
xchg
enter
or
xchg
mov
outsb
and
cs
sub
aam
vprotd
cwtl
fsubl
push
inc
gs
mov
add
sub
xchg
in
pop
les
mov
aaa
mov
fsubrs
mov
nop
xor
xchg
add
jecxz
push
bound
insl
imul
in
jo
mov
mov
mov
cmp
jne
stc
mov
adc
ljmp
aam
adc
lods
popa
data16
sarl
xor
fidivs
lret
lock
aam
sbb
mov
mov
add
mov
push
repz
pushf
inc
les
and
stos
or
dec
add
les
cli
int3
test
sbb
js
sub
outsb
sbb
ss
ja
cs
test
loope
es
add
xor
cltd
int
inc
push
cs
push
sub
inc
inc
ud2
adc
loop
cli
mov
cmp
aam
stc
push
adc
fistpll
mov
fidivl
dec
and
cmp
inc
lret
sbbb
clc
loope
ljmp
lahf
cmp
pop
mov
lret
lcall
cmp
mov
push
clc
xchg
outsl
test
xor
pop
cld
das
adc
subl
ja
test
int
in
or
inc
mov
jnp
or
leave
push
fwait
adc
dec
shll
jns
out
xchg
stos
inc
sbb
mov
pushf
inc
and
shl
jge
arpl
sbb
jns
fs
int3
lret
sub
push
push
aas
dec
popl
outsl
cli
fisttpl
js
pushf
add
or
pop
mov
xchg
mov
iret
ljmp
or
scas
inc
inc
out
push
test
in
add
decb
or
test
jp
pop
xchg
out
mov
sbb
xor
adc
ja
addr16
xchg
rolb
xor
jle
dec
jmp
cwtl
addr16
jo
xlat
je
int3
pusha
scas
sbb
icebp
repz
inc
dec
cmp
cmpsb
xor
pop
cmc
ret
pop
adc
out
fldenv
scas
das
cwtl
out
cmp
mov
int
std
jnp
adc
jp
dec
int
inc
adc
push
out
ret
cmpb
or
jno
fmuls
or
add
inc
aad
insl
mov
adc
pop
lret
test
push
cmp
jne,pt
mov
add
push
fsubp
out
aam
mov
sub
bts
enter
mov
inc
imul
out
push
mov
push
jge
lcall
cmp
inc
sub
stos
lock
jmp
push
dec
xor
adc
sub
jl
data16
mov
jne
test
ljmp
and
idivl
je
scas
lods
jbe
ss
adcb
leave
icebp
daa
test
adc
lods
dec
fiaddl
xchg
data16
fcomip
bts
cli
add
mov
arpl
inc
test
shrl
lea
xchg
mov
pop
test
aas
sarl
and
rclb
xor
into
xor
xor
in
bound
lods
sub
cmp
sbb
ds
aad
mov
daa
outsl
jnp
das
iret
scas
push
lea
call
mov
dec
mov
popf
adcb
xchg
adc
push
xor
xchg
inc
push
pop
dec
les
dec
bound
mov
aad
lcall
xchg
jge
cmp
sarb
xchg
push
rorb
js
movsl
push
mov
push
inc
xchg
loopne
ret
pop
mov
sbb
pop
ror
jbe
dec
mov
inc
rolb
data16
xor
add
fcompl
mov
and
and
orl
push
daa
dec
out
jecxz
and
icebp
and
test
sbb
adc
lods
insl
pop
sbb
inc
jbe
loope
lds
pop
aam
js
jbe
fisttpll
fiaddl
fs
frstor
pop
adc
je
in
inc
sbb
jmp
mov
pusha
scas
fimuls
dec
pushf
ja
jbe
xchg
int3
into
fistpll
add
aaa
xor
and
shrb
lret
imul
adc
inc
cmpsl
mov
sbb
push
fbstp
mov
subb
aad
data16
xchg
pushf
xchg
push
jecxz
dec
xor
mov
in
loope
es
lds
stos
stos
xor
arpl
sbb
jne
ss
mov
mov
xchg
les
sub
mov
mov
lods
pop
out
xor
jecxz
leave
xchg
lahf
sub
fisttpl
xchg
mov
dec
xchg
faddl
push
mov
mov
mov
in
mov
dec
sbb
int
sbb
int3
stc
in
xor
fdivr
test
out
addr16
push
xor
pop
loopne
sbb
mov
imul
cmpb
push
imul
clc
ds
scas
mov
mov
mov
mov
lcall
cmp
cltd
lret
adc
mov
jno
cmp
mov
push
dec
in
mov
xchg
aam
xor
or
and
jge
fstl
test
flds
lea
add
aad
ja
ficoml
data16
pushf
sub
adc
push
ja
pop
cld
fwait
or
mov
je
inc
cpuid
sbb
lods
test
mov
fiaddl
std
out
sbb
loope
or
enter
int
cli
subl
addr16
xor
xlat
sub
jle
jge
xchg
movsb
cmpsl
into
adcb
cmp
rcrw
loope
sub
aaa
jecxz
rcrb
test
mov
push
jle
mov
cmp
xchg
cmp
inc
xor
movsl
sub
push
cli
adc
inc
lahf
outsb
adc
in
fdivrl
ret
pop
nop
xchg
dec
in
cmp
fldl2e
subl
lret
fdivs
loopne
fnstenv
stos
or
stc
mov
mov
lods
pop
jl
loope
add
dec
push
lret
das
loop
aaa
loop
cmp
pop
lret
ljmp
mov
outsl
insl
bound
mov
popa
inc
in
aad
stos
xchg
cmp
lock
mov
je
mov
xchg
pusha
enter
aam
xchg
cld
daa
jae
enter
cmp
cmc
repnz
mov
mov
gs
jge
inc
mov
mov
sub
push
ljmp
pop
xorl
adcb
fsubrp
dec
cmpsb
popa
adcl
jl
fildll
inc
adc
cmc
gs
inc
mov
mov
rol
mov
cmpsl
fs
jmp
cld
mov
sub
adc
test
fldenv
xor
pop
stos
mov
mov
das
jnp
dec
pushf
jge
cmp
inc
outsl
nop
lea
in
mov
jp
pop
xchg
jns
cmp
test
lock
rcrl
iret
sub
mov
xor
pop
sub
data16
int3
ljmp
arpl
mov
xor
imul
es
ja
clc
aaa
push
dec
jnp
loop
adc
xor
sbb
xor
xor
mov
mov
out
lock
fistl
jp,pn
outsb
insl
fwait
xchg
mov
xlat
out
mov
xchg
repz
jo
lock
mov
xor
insb
test
rsqrtps
jnp
mov
iret
pop
es
pop
or
dec
cld
xor
inc
mov
inc
cmp
loopne
cmp
out
or
jmp
push
xor
into
loopne
and
mov
vpunpcklbw
shr
xchg
sbb
cmp
jno
sbb
pop
daa
jg
movsl
lcall
fwait
nop
push
xor
pusha
iret
sahf
push
cwtl
in
lret
xchg
and
ds
out
cmpsl
fisttps
andl
dec
mov
push
jbe
push
mov
dec
bound
dec
mov
fisubrs
xor
ss
imul
sub
xchg
sbb
cmp
orl
mov
pop
repz
sbb
adc
mov
aam
xchg
dec
pop
and
push
shrl
lcall
mov
sub
adc
inc
ljmp
xlat
fs
add
inc
mov
shlb
sbb
dec
repz
aaa
xchg
mov
orb
imul
sti
lahf
push
mov
mov
inc
push
jnp
sub
sbb
fcoml
cmpb
xlat
or
dec
popf
rclb
push
jp
incb
cltd
jb
adc
scas
mull
rcrl
ss
int
add
push
fcmovnu
dec
sbb
aas
dec
push
mov
sbb
stc
pop
pop
xchg
mov
adc
in
je
ficomps
mov
sbb
mov
jnp
imul
pop
jo
sbb
bts
jg
push
aad
jae
jne
icebp
mov
dec
inc
and
sbb
mov
jge
add
loopne
and
es
sbbb
in
xchg
andl
into
cmpl
mulb
xchg
xchg
dec
lock
sub
into
lcall
push
cmc
and
and
push
cwtl
lahf
jle
mov
fisttps
or
in
lret
aad
sbb
mov
xchg
call
rolb
and
iret
pop
push
cmpsl
aam
sbb
mov
pop
mov
cmp
push
jne
pop
mov
cmp
aas
jle
push
out
aaa
mov
fnstcw
mov
imul
adc
cmp
imul
je
imul
outsb
ret
mov
xor
lea
mov
js
mov
je
dec
cmp
and
pusha
into
and
xchg
insl
jg
in
lret
stos
repz
xor
mov
jne
pop
and
es
xlat
fs
mov
mov
scas
dec
das
mov
fdiv
scas
aam
hlt
cwtl
test
fldcw
loope
fs
pop
incl
outsb
mov
adc
out
add
mov
cmp
mov
fldt
mov
cli
dec
jne
lds
js
push
and
xchg
cmp
testl
and
sbb
mov
xchg
mov
xchg
imul
mov
rcll
push
sbb
lock
xor
pushf
js
pop
or
pop
aas
push
pop
xchg
cmp
or
sub
repz
mov
lds
lods
sarb
shll
enter
and
and
loopne
dec
cmp
loop
jno
subb
movsl
jmp
jae
mov
add
sbb
pop
stos
mov
mov
test
loopne
and
and
scas
inc
insb
ds
inc
rcrl
fildll
mov
imul
invd
or
push
call
cmp
pop
addr16
cmp
or
rorl
xchg
lcall
xlat
jecxz
sub
cmp
cmpl
rcll
imul
sub
out
sbb
push
and
jo
adcl
popf
xchg
bound
testl
pop
inc
inc
jmp
inc
or
divb
or
cli
add
or
inc
push
outsl
imull
ja
cmc
in
js
outsb
sub
mov
pop
in
ror
add
stos
fstl
mov
xchg
out
dec
loope
shlb
cmp
das
and
in
lods
dec
in
rcll
ret
cli
ds
or
pusha
test
aas
dec
sub
or
sub
je
in
cmp
push
rorb
jae
cli
inc
jns
mov
in
movsl
loopne
lock
hlt
dec
jae
outsl
push
push
cmp
fcomip
jle
pusha
dec
popf
adc
shrb
mov
fwait
cwtl
cmc
xorl
test
sti
popa
enter
adc
rcl
stos
aad
insb
scas
pop
lods
xor
ja
and
push
cmc
daa
das
stc
and
iret
and
icebp
add
aas
dec
das
sub
lods
shrl
dec
inc
es
inc
add
add
lea
sub
inc
out
dec
push
push
fs
and
mov
stos
fucomp
push
shl
out
int3
in
cmp
lea
jno
mov
xchg
daa
mov
imul
jo
nop
push
inc
std
xor
pop
cmp
ja
or
fdecstp
inc
bound
mov
subl
pushf
stos
in
popa
es
out
mov
fists
pop
lahf
enter
movsl
fdivrs
push
pop
sti
add
mov
pop
push
mov
cmp
jl
lret
xlat
lds
lret
jl
and
pop
js
sarl
loopne
jg
xchg
adc
or
cld
mov
pop
es
test
arpl
adcl
imul
lret
sbb
sub
jl
pop
jo
jns
add
cmc
xlat
lock
mov
adc
add
or
ret
jno
pop
mov
ja
idiv
push
imul
push
rorl
pop
and
push
xchg
lea
mov
mov
iret
in
adc
les
test
insl
dec
stc
push
popf
out
push
fcompl
sub
cmpsb
or
push
lods
push
leave
inc
jmp
or
xchg
cmp
mov
and
inc
rcrl
sbb
inc
imul
xchg
inc
mov
cmp
rclb
sub
scas
insb
js
push
mov
js
hlt
push
in
and
sbb
add
rcr
pop
or
filds
into
jbe
cmpsl
inc
adc
dec
push
mov
push
aad
iret
dec
add
ret
inc
lea
jno
pusha
mov
mov
ror
loopne
ret
push
lret
or
or
imul
sbb
jns
mov
int3
in
sbb
and
fnstsw
or
sub
mov
dec
nop
xor
call
and
mov
test
and
subb
push
xchg
in
mulb
repnz
jnp
push
movsl
mov
or
fistpl
scas
jmp
mov
jns
sbb
icebp
inc
in
xchg
adc
in
add
dec
outsl
insl
mov
xor
adc
jbe
daa
or
inc
aam
jle
lahf
sub
mov
sbb
stos
jno
fcoms
pop
push
xlat
cmpsb
loope
fstp
mov
sarl
mov
add
push
imul
adc
mov
xor
cmp
inc
rol
xchg
sbb
std
mov
add
xchg
mov
inc
xchg
rcrb
adc
sbb
mov
lods
popa
mov
in
scas
push
test
in
or
stos
bound
pop
inc
mov
inc
ds
and
push
and
cmp
push
push
inc
sub
shll
ss
and
push
push
inc
push
mov
icebp
negl
sbb
ret
xchg
pop
addb
xchg
stc
enter
mov
mov
and
pop
call
jl
bound
andb
adc
les
jbe
aaa
add
mov
loopne
push
jb
dec
scas
pushf
repnz
or
dec
push
dec
pop
rclb
cmp
xchg
fnstenv
push
jb
xchg
ss
cmp
lock
mov
into
xor
dec
out
pushf
stos
imul
es
imul
dec
mov
les
clc
dec
nop
mov
jl
pop
mov
add
aad
inc
xor
insl
int
push
cmp
call
add
testl
sub
xorb
fadd
shufps
ds
xlat
test
std
hlt
sar
jl
xor
sbb
jne
jecxz
arpl
test
xchg
scas
mov
push
test
or
or
sub
jecxz
dec
xor
push
cs
aas
or
mov
fisubrl
adc
pop
mov
in
cmp
shr
dec
mov
mov
movl
ljmp
std
or
in
push
xor
pop
outsl
sahf
stos
or
inc
or
inc
add
fimull
int
ljmp
arpl
push
xchg
add
sub
push
push
adc
insw
push
movb
aad
test
pop
ret
push
rol
sahf
mov
rcrl
add
std
pop
iret
aas
dec
pop
mov
jmp
mov
mov
mov
xlat
mov
sbb
cmpsl
in
stos
jl
rcr
and
xchg
ret
enter
xor
push
jnp
xchg
push
sub
push
lahf
inc
or
arpl
pop
xorb
out
mov
and
fsub
cmp
sub
jmp
pop
pop
stos
leave
aas
sbb
es
xchg
cmp
mov
push
add
int
scas
push
sub
mov
loop
pusha
inc
cwtl
cs
loop
sub
sbb
in
subb
ret
fs
pusha
out
cmpsl
pop
xor
popa
lcall
fadds
jns
icebp
repz
cmp
aad
inc
add
cld
jno
jns
ds
test
bound
push
pop
adc
jmp
inc
cmc
test
xchg
call
push
pushf
sarb
mov
mov
jbe
nop
sbb
out
int3
xor
fnstenv
es
rcrb
add
out
jno
dec
andl
mov
or
cld
and
cld
inc
inc
fcoms
lock
mov
ja
pop
mov
push
and
jnp
pop
sti
jmp
ljmp
add
push
mov
or
stos
ret
movb
gs
call
mov
inc
add
lds
mov
ds
jecxz
je,pn
xchg
jo
fs
or
fcoml
mov
and
rcll
jnp
insb
push
lret
fildll
and
xchg
jb
mov
das
cli
std
fsts
push
data16
dec
hlt
add
lea
mov
jmp
dec
mov
sub
sti
jb
dec
dec
adc
outsb
xor
in
inc
aam
out
add
insb
fs
es
push
add
jo
je
dec
adc
lret
jbe
xor
leave
mov
pop
jno
add
adc
repz
ret
mov
scas
je
aad
mov
mov
jmp
mov
in
js
xor
cli
into
pop
mov
gs
outsl
les
xchg
int
pop
sti
mov
insl
outsb
xchg
sub
dec
pop
xor
sti
fldt
fsub
add
int
loopne
sub
js
and
and
out
pop
jmp
adc
xor
shlb
shr
or
adc
and
clc
cltd
push
dec
imul
cmp
lahf
fildll
push
mov
push
hlt
pop
test
sbb
sub
lods
addr16
test
shlb
jge
pop
and
loop
push
xor
das
gs
mov
ret
ss
lods
gs
xchg
loopne
ljmp
cmp
pop
mov
outsl
shr
cmpsb
xlat
xchg
jge
in
xchg
pop
jl
mov
mov
test
int3
or
test
orl
xchg
pusha
cwtl
scas
in
aam
mov
fwait
fwait
dec
daa
loope,pn
mov
jg
cmp
mov
inc
ja
fnstsw
test
dec
jmp
out
icebp
dec
decl
clc
add
in
push
jne
xchg
xchg
insb
subps
loopne
xchg
ret
movsb
mov
into
and
enter
das
lea
sub
cmp
jge
or
push
xor
sub
fdivl
mov
test
add
adc
add
movl
push
add
lock
jmp
xchg
cwtl
out
and
cs
xor
pop
insl
mov
inc
hlt
fmull
mov
enter
mov
mov
sbb
mov
test
data16
jo
je
xchg
cmp
adc
adc
cld
jno
or
xor
cmp
xchg
xor
aas
loope
insl
stos
sub
testl
push
adc
xchg
and
ss
lock
and
mov
sbb
andl
scas
pop
addr16
xor
cmpsl
dec
xor
clts
mov
push
push
sub
sub
subl
rclb
movsb
insb
dec
test
sbb
xor
jp
ds
push
mov
push
mov
and
mov
sbb
push
call
cmpl
nop
mul
inc
mov
mov
into
adc
sbbb
sub
push
sub
scas
jl
test
in
fs
xchg
pop
in
pop
leave
jecxz
dec
sub
sbbw
pop
xchg
mov
popa
sub
es
jl
push
inc
add
loop
cmp
imul
pushf
call
and
ds
mov
stos
cltd
mov
lahf
mov
or
mov
sbb
lret
icebp
jg
arpl
jg
pop
mov
sub
aaa
sbb
push
sahf
jns
push
ljmp
mov
xchg
adc
add
jo
mov
lock
call
hlt
mov
fisubl
mov
xor
psubw
xchg
cwtl
outsl
testb
jne
inc
mov
aam
lahf
sbbb
mov
lods
in
and
ret
mov
dec
mov
xor
mov
pusha
mov
stc
testl
push
aaa
lods
jg
cld
subb
out
mov
stos
adc
cltd
jb
inc
pop
push
in
sbbb
pusha
push
je
jl
vminsd
ret
inc
jne
dec
std
adc
push
pop
dec
jmp
andnps
in
push
push
lcall
sbb
daa
sbb
sbb
mov
mov
das
mov
out
hlt
xchg
push
daa
cltd
lock
xchg
imul
in
mov
leave
push
push
sbb
lock
lcall
sub
mov
in
sbbb
sbb
xchg
mov
xor
test
sbb
cmp
jl
fbstp
pop
adc
js,pn
cwtl
sub
into
out
shll
inc
mov
mov
sti
cld
mov
nopl
mov
js
stc
testl
add
fstpl
out
mov
cmp
sbb
dec
mov
xor
bound
push
mov
lahf
jge
mov
bound
fcoml
loop
fdivs
inc
divl
cmc
std
inc
lock
dec
mov
push
fdivr
xchg
push
ret
xchg
insb
ret
ret
sbb
push
lock
mov
sub
sahf
xchg
loop
insl
clc
loopne
mov
pushf
add
aam
out
mov
xor
sub
cs
decb
jmp
sub
jge,pt
fwait
sub
in
inc
into
imul
out
push
mov
dec
push
in
lods
mov
xlat
xchg
aaa
push
and
arpl
ret
cmp
mov
inc
mov
rcr
stc
cmp
jle
push
fisttpll
daa
and
addr16
daa
sbb
outsb
js
adc
push
and
and
ljmp
dec
push
cwtl
leave
push
or
adc
dec
push
dec
push
shlb
ss
add
mov
sub
daa
and
loop
pop
pop
fcompl
ljmp
cmp
outsl
xchg
dec
imul
push
in
es
sub
jecxz
cmc
xchg
pop
push
pop
push
push
cmp
repz
xchg
push
scas
jge
mov
mov
xchg
test
pop
xor
jns
test
dec
dec
jmp
decb
xchg
push
sar
xchg
dec
inc
mov
sarb
cmp
lods
xor
movsb
sub
movsb
dec
bound
jns
rcrl
out
sub
mov
fists
stos
mov
daa
notl
xchg
ss
push
adc
fs
scas
mov
ret
lock
add
ret
xchg
divb
cmpsl
les
in
sbb
add
add
aaa
and
jnp
shld
jecxz
and
pushf
mov
jno
dec
popa
sub
mov
mov
in
jns
cmp
ds
sub
pushf
mov
pop
test
ja
out
lcall
fcompl
pop
stc
mov
inc
push
cmpsb
fnsave
jno
add
mov
push
mov
sbb
int3
daa
and
jne
ds
inc
add
mov
bound
in
aaa
daa
xchg
test
mov
mov
mov
cmp
dec
or
adc
js
sti
push
es
xchg
ror
cmpsl
leave
aaa
mov
outsb
cmp
aad
sbb
or
pmaddwd
inc
loop
pop
pop
cmc
xlat
popf
dec
jo
xor
test
fcmovb
pushf
mov
test
rcll
cmpsb
repnz
xor
hlt
pop
or
cmpsl
or
add
ds
mov
test
cmp
repnz
push
lahf
push
push
sbb
movsl
into
jns
jmp
jecxz
dec
cmp
and
out
out
pop
push
cmpsb
iret
cmp
cmpsl
std
rorl
sti
push
rorl
cmpb
push
jne
jle
ret
push
out
pop
cld
clc
cmp
jmp
ret
pushf
bound
aaa
adc
rorb
pop
push
test
outsb
or
inc
pop
das
mov
adc
ret
nop
dec
xor
cltd
imul
lods
pusha
mov
push
mov
sub
xchg
fsubrp
out
stos
fistl
pop
cmp
dec
sub
cli
ljmp
jno
xor
jle
xor
cmp
jnp
fdivl
sub
pop
out
adc
pop
add
xchg
sbb
xchg
fwait
repnz
sbb
pop
mov
mov
mov
xchg
sbb
rcll
cwtl
pusha
cmpsl
or
mov
negl
sub
jg
repnz
add
loope
push
mov
sbb
adc
ret
xchg
mov
dec
imul
ds
sub
mov
in
inc
repnz
bound
fdiv
xchg
jmp
xor
dec
lods
cmpsb
fnstcw
fsub
add
mov
xchg
adc
sti
inc
js
inc
test
test
fs
mov
jecxz
mov
lock
push
repnz
jle
add
mov
or
cmp
into
mov
inc
mov
mov
or
dec
addr16
xor
and
repz
negb
mov
ja,pt
insb
mov
inc
inc
ljmp
cmpsb
and
mov
inc
pop
push
out
push
mov
dec
mov
fsubp
popf
jl
push
loopne
add
sbb
clc
sahf
dec
dec
and
ficomps
adc
mov
loope
mov
rcl
cld
aad
or
rcll
into
pop
fdivs
mov
lcall
mov
repz
or
push
jb
mov
ret
stc
jmp
aas
push
add
popf
jne
mov
mov
adc
jmp
push
aam
add
sub
cli
and
xchg
inc
xchg
sub
sar
sub
test
stc
or
mov
je
cmp
lahf
cmp
shr
push
daa
dec
scas
pop
stos
and
jp
dec
ljmp
mov
adc
leave
adc
mov
inc
fnstsw
jmp
xchg
mov
dec
ret
ss
ja
pop
cld
out
lret
leave
nop
imul
mov
jne
dec
inc
cmp
shrb
lret
sub
push
stc
addb
dec
in
lods
cltd
xor
scas
xorb
mov
popf
jns
sbb
dec
in
call
rolb
and
xchg
fnstcw
cs
dec
mov
test
or
dec
sub
pop
and
mov
pop
push
add
add
nop
pop
cmpsl
out
inc
pop
xor
in
and
mov
cs
ret
sub
lds
cmpsl
sub
sub
fadds
cmp
ja
popa
sub
cmp
push
imul
cmp
cs
outsb
push
sahf
movsl
es
jmp
out
push
rcrl
jmp
inc
cmpl
mov
cmp
mov
fistpl
jl
or
dec
aaa
test
or
ja
rcr
bound
cmp
jnp
in
decl
jnp
mov
and
adc
out
jo
pop
test
iret
xor
cwtl
ss
jecxz
cmp
addr16
xchg
popf
pop
jg
jle
shll
outsl
pop
xchg
push
lahf
pop
insl
mov
xchg
clc
push
dec
sub
mov
xchg
imul
xor
mov
cmpsb
std
dec
fcos
loopne
imul
divb
mov
push
roll
stos
repz
pop
inc
xor
mov
or
cmc
sbb
add
negb
pop
imul
push
add
cmpl
daa
add
jns
loop
push
imul
dec
mov
mov
jbe
inc
push
subb
xchg
outsb
mov
pop
mov
xorl
test
imul
ret
std
mov
jns
mov
stos
mov
test
fisubrl
imul
or
dec
pop
mov
mov
add
test
out
or
pop
js
mov
push
insb
nop
mov
push
adc
andps
cmp
ja
sub
mov
aas
test
mov
lods
in
js
xor
cmp
mov
jb
cli
jne
sub
scas
hlt
ja
adcl
int
cmpsl
xchg
push
ljmp
sub
enter
shr
into
sub
fwait
pop
test
or
mov
xchg
outsl
das
inc
pop
xor
iret
mov
in
xchg
and
pop
inc
lahf
stc
je
adc
fistps
jmp
and
add
dec
adc
dec
mov
outsl
outsl
inc
aam
fstl
fwait
decl
fmul
repz
leave
push
daa
clc
rcll
outsl
mov
addl
mov
repnz
scas
das
mov
push
shll
lcall
or
addr16
inc
jo
mov
cmp
int
cld
cmp
xlat
mov
add
sti
jns
add
xchg
ja
rcr
imul
adc
mov
int
in
xor
pop
shr
mov
mov
out
cmp
pop
mov
xlat
sti
out
mov
and
sahf
hlt
add
pop
jecxz
jno
mov
cmc
int3
mov
push
sbb
sti
lret
mov
pop
and
pushf
rclb
xchg
xlat
or
insl
cmc
or
aaa
jecxz
mov
shll
aaa
movsl
or
cmp
jg
imul
adc
unpcklps
imul
mov
lret
mov
stos
mov
cmpl
xor
pop
jl
and
mov
push
xchg
jne
xchg
push
int
fs
sbb
and
cli
je
xchg
mov
adc
imul
clc
test
outsl
lock
jb
in
dec
fbstp
lea
cmpsb
test
stos
fcmovu
movsl
sti
mov
cmp
inc
and
movb
mov
icebp
aam
and
sub
cmp
into
insl
jo
mov
or
lret
or
jae
fs
popf
jbe
fdivrs
addr16
mov
lods
mov
sbb
push
push
xchg
mov
cmc
sbb
arpl
addl
inc
in
mov
and
add
mov
mov
stos
scas
test
xor
data16
sub
push
ljmp
dec
pop
movb
aad
mov
jae
or
arpl
jbe
or
jo
ror
add
out
push
mov
mov
inc
cwtl
or
add
push
dec
xchg
sti
outsl
sbb
pop
adc
and
sub
bound
dec
xchg
int3
mov
shl
cwtl
sbb
out
mov
add
jl
add
enter
jle
or
cmp
pop
lret
jne
xor
jo
sub
stc
repnz
sbb
pop
test
mov
ret
xor
jnp
xchg
mov
adc
icebp
mull
inc
rcll
cmp
int
shrl
jmp
jecxz
lret
xchg
dec
cld
gs
and
mov
out
stc
popa
inc
test
sahf
stos
stos
imul
int3
xor
cmp
cmp
scas
into
adc
repz
or
jns
mov
out
mov
adc
outsl
jge
xor
clc
das
aad
xor
pop
lock
xchg
sbb
daa
lcall
pop
dec
popa
xchg
mov
xor
loop
outsb
out
or
test
add
push
inc
push
jle
cmpsb
jbe
inc
adc
inc
idivb
test
mov
xchg
cld
out
repz
inc
lods
lea
adc
adc
jno
ds
push
jmp
mov
mov
in
nop
mov
jge
loopne
lret
mov
mov
sbb
outsb
inc
rcl
sub
adc
inc
inc
dec
loopne
divb
xchg
sbb
repnz
stos
cwtl
xor
mov
mov
lods
test
and
jo
or
lods
popa
jbe
hlt
jge
sub
loopne
jns
sub
or
mov
jb
and
repz
cmp
mov
es
xchg
xchg
jb
cmp
or
clc
into
mov
in
cli
fdivl
rolb
ds
xchg
lea
and
stos
mov
pusha
inc
mov
adc
sub
lods
mov
jp
jecxz
inc
add
mov
xlat
push
inc
movsl
mov
pop
outsl
iret
les
xor
lcall
mov
roll
jns
int3
pop
dec
icebp
push
inc
sti
call
xor
and
adc
jnp
loope
adc
cmp
fmul
xchg
notl
mov
sbb
rcrl
fwait
pop
xor
pop
gs
out
dec
mov
mov
add
xchg
daa
in
int3
mov
cwtl
cmp
pop
adc
add
mov
cmc
sub
mov
push
mov
inc
and
lcall
out
rolb
ja
outsl
lds
mov
sub
cmpsl
shll
js
pop
imul
cmp
pop
jns
ret
gs
rcll
xor
or
sub
jns
cltd
nopl
xchg
xor
or
push
arpl
lods
adc
pop
inc
in
cwtl
insl
clc
jp
sti
aam
fwait
aaa
aad
adc
mov
ja
adc
pop
add
sub
cmp
push
mov
js
add
cli
push
jae
repnz
jl
out
cmp
inc
ret
loope
mov
call
and
and
or
xchg
adc
jg
pop
add
cmpsb
sub
ffreep
sbb
push
fdiv
mov
repnz
sti
mov
cmc
cmp
inc
jge
lock
lret
mov
repnz
mov
inc
pop
ja
adc
jg
fldcw
fs
dec
mov
insb
dec
push
push
sub
lods
jno
das
xchg
scas
and
adc
sbb
add
dec
cs
int
add
sub
setae
jb
cmp
sbb
mov
and
adc
push
rol
xor
outsb
popa
mov
or
lcall
test
add
pop
pop
sahf
rorb
aas
adc
fldl
test
aaa
push
dec
cltd
shl
arpl
fsubl
imul
or
jno
adc
cmp
pop
dec
xor
inc
xchg
daa
lea
cmp
mov
insl
pop
js
and
test
rcll
mov
insl
gs
inc
lret
mov
fistpll
jne
mov
pop
daa
test
xchg
jg
cmp
pop
std
gs
test
pop
inc
or
xlat
imul
sbb
dec
sbb
mov
aad
scas
xor
shll
dec
rorl
or
push
cmp
cmpsb
mov
insl
repnz
insb
nop
inc
fimull
lcall
inc
xor
xor
aam
stos
das
and
pushf
mov
hlt
add
out
cmpsl
and
xchg
fstl
pop
insl
adc
add
push
or
fsubl
lds
xor
int
test
mov
loopne
jno
ret
mov
push
cmp
lahf
hlt
lahf
sbb
dec
jbe
dec
xchg
mov
enter
idivb
inc
out
dec
fisubrl
mov
lods
std
push
inc
push
mov
jb
dec
jae
xor
hlt
sub
inc
pop
ret
outsl
or
inc
movsb
cld
lret
jnp
andl
sbb
add
js
mov
mov
sbb
xchg
pop
add
push
ret
std
sbb
lock
psubq
cmp
enter
add
sbb
and
scas
enter
mov
xchg
mov
test
xchg
mov
mov
push
push
je
ret
adcl
cs
sarb
into
inc
jmp
rorl
fnclex
outsl
stos
shlb
xor
xor
ffree
adc
xor
mov
and
out
xor
jp
hlt
aad
dec
jb
das
imulb
pop
mov
cmc
xchg
pusha
jl
gs
rorl
sbb
sbb
xchg
jge
fdivr
pop
aam
inc
and
add
idivl
andw
push
or
lcall
cmp
jo
xchg
xor
test
cltd
repz
or
orb
scas
xor
jle
or
xchg
bound
mov
seto
and
and
add
or
insb
xchg
or
mov
dec
mov
push
pop
mov
adc
mov
and
lds
enter
xor
pusha
xor
dec
xor
or
fwait
jns
lret
mov
dec
cmpl
pop
insl
add
and
or
jmp
aas
sub
and
por
adcb
popa
lock
pop
xlat
sti
xchg
push
mov
xchg
mov
inc
in
add
or
rcr
xchg
insl
shl
outsl
mov
movsl
orl
test
mov
iret
inc
scas
mov
fistpl
sub
xor
pop
add
repnz
dec
mov
int
scas
test
mov
push
call
sbb
divb
aam
cmp
jno
insb
push
mov
es
lret
aad
and
mov
pop
add
mov
xchg
and
push
lds
push
arpl
push
and
fidivs
in
ror
pop
and
lret
cmpsl
cwtl
jmp
out
sub
test
lahf
mov
cwtl
dec
and
idivb
popa
mov
decb
cld
xor
mov
fldl
lcall
loopne
scas
ljmp
out
data16
out
and
in
jmp
push
cltd
lahf
movsl
sub
pop
lahf
insb
adc
cs
sub
mov
cmc
inc
sub
ret
mov
jl
clc
lret
mov
cmpsb
or
pop
fs
scas
mov
sub
jno
push
cmp
mov
sahf
cmp
cs
or
out
mov
or
test
and
pop
cmp
test
fiadds
sbb
cld
iret
push
fstps
dec
cmp
push
mov
in
frstor
inc
cwtl
mov
cmp
add
adc
sti
data16
mov
out
cmpsl
mov
jbe
data16
rorb
outsl
xchg
sahf
outsb
data16
jns
test
pop
lds
loopne
ljmp
andl
and
xchg
adc
cmc
xchg
cltd
js
shrl
add
inc
data16
cmpsl
xor
mov
dec
jo
mov
call
jecxz
dec
pop
xchg
fldt
in
mov
xchg
jne
or
sub
push
pushf
mov
outsb
inc
xchg
or
adc
out
dec
dec
dec
in
std
lock
setle
push
sbb
int3
cld
scas
mov
cmpsb
push
cmpsb
icebp
arpl
lret
mov
mov
pop
int
push
cld
mov
xor
mov
jmp
sub
mov
das
ss
scas
mov
scas
adc
pop
and
jne
dec
sbb
cmp
pop
int3
pop
test
mov
mov
test
push
jle
imul
push
rcl
outsl
xchg
sbb
pop
inc
loopne
xchg
push
adc
cmc
insl
fcompl
sub
cltd
decb
sub
aas
sub
enter
mov
xor
mov
sbb
inc
mov
in
fcomps
inc
scas
mul
inc
xchg
test
mov
push
jmp
mov
jmp
or
shll
and
test
je
cmp
mov
in
hlt
dec
out
adc
test
sbb
fnsave
inc
fs
cmp
xchg
push
icebp
inc
xor
push
mov
xchg
loope
fcomp
dec
mov
lahf
outsb
and
imul
jnp
lcall
ret
cmp
subb
call
jmp
das
cltd
xor
into
mov
adc
push
xchg
addr16
cld
out
cmp
mov
in
xchg
movl
mov
inc
and
and
and
faddl
xchg
lahf
loop
arpl
jne
loopne
in
mov
cld
or
mov
pop
add
in
aaa
dec
inc
or
jae
pusha
push
jae
pop
shll
sbb
out
stos
mov
test
inc
mov
inc
xor
lret
imul
pop
sti
cmp
dec
dec
mov
movsl
insb
xor
insl
into
sahf
push
jae
pop
incl
jne
jno
scas
aam
dec
loope
pop
out
fsubrs
jae
xchg
je
test
sti
lret
xor
lods
xchg
fs
xchg
shll
add
pop
divl
fs
jge
mov
in
les
pushf
jge
jno
xchg
sub
fiaddl
insl
andl
mov
push
add
pop
sarb
es
movsb
mov
mov
add
decb
fnstenv
into
fldenv
imul
ss
mov
clc
fucomi
insl
mov
jnp
xor
sbb
inc
cmp
mov
popa
and
jmp
or
lods
stos
adc
jge
mov
fcmovbe
xchg
mov
repnz
or
push
sbb
js
testl
int
mov
inc
repz
xchg
mov
jmp
push
adc
scas
mov
aad
mov
pop
mov
jo
arpl
test
mov
sarb
jmp
call
cmp
repz
fadds
and
js
jle
sub
sbb
into
rorb
jo
iret
add
cmp
repnz
lea
lret
pusha
out
divl
iret
dec
cmpsb
pop
adc
popa
mov
xchg
out
dec
stos
pop
sub
repnz
xchg
or
in
or
jmp
lods
and
mov
add
into
je
dec
mov
sbb
jo
inc
pop
outsb
or
mov
add
jno
loop
xor
out
int3
ja
push
or
dec
sub
inc
cmpsl
fs
ja
sub
rorb
into
xchg
inc
sahf
fldcw
and
push
sub
mov
das
stc
mov
scas
sarb
xchg
push
sbb
rcrl
arpl
xchg
lcall
gs
inc
int
stc
scas
fs
data16
mov
adc
sbb
pop
mov
sahf
out
ljmp
and
jmp
into
jecxz
push
mov
mov
add
pop
xor
fmulp
dec
pop
nop
pushf
ret
pop
ret
stc
sub
clc
ret
mull
insb
mov
pop
das
outsl
inc
pop
insb
sub
add
adcb
test
jecxz
pop
mov
mov
jg
adc
xchg
fmull
pop
mov
fisttps
add
daa
mov
leave
lret
adc
and
mov
pushf
adc
out
xchg
cli
xorl
sbb
cwtl
mov
sbb
repz
inc
lds
aam
xor
xlat
mov
push
fldl
and
out
andb
lret
dec
test
xchg
stos
xchg
mov
push
stos
xchg
dec
cld
and
and
push
nop
stc
dec
push
arpl
ss
in
xchg
cmp
ja
push
sbb
ret
mov
jbe
std
loope
dec
movsb
insl
push
push
mov
scas
pop
or
push
pop
aaa
sub
sarl
out
and
xchg
mov
push
mov
inc
daa
popa
dec
ja
xchg
cmpsl
inc
es
std
pop
inc
into
cld
enter
adc
lcall
icebp
xchg
jmp
das
mov
out
daa
or
test
dec
js
jecxz
je
jns
mov
jo
mov
and
xorb
xlat
mov
adcb
mov
aas
inc
jl
dec
call
dec
jnp
leave
or
push
cmpsb
outsl
je
push
ret
sub
push
mov
cmpsb
les
loopne
fimull
cmp
sbb
js
loopne
or
jne
ret
out
loopne
movsl
and
dec
fscale
nop
repz
push
xchg
loope
gs
rolb
cld
data16
pop
pop
jno
insl
sbb
or
dec
pop
in
push
sub
adc
les
xchg
or
stc
dec
fimull
mov
add
incl
lock
imul
xchg
sbb
and
jg
imul
outsb
adc
xor
call
pop
mov
movsb
push
dec
fbstp
aam
jo
or
mov
test
loop
xchg
fst
sarl
lret
add
imul
pop
push
push
stc
inc
mov
clc
inc
fldcw
inc
dec
pusha
call
inc
lahf
sbb
stc
sti
loopne
scas
cs
cli
ljmp
push
in
and
insb
jp
mov
popa
ss
lea
ret
ss
in
xchg
mov
in
jmp
movsb
adc
mov
dec
orb
mov
pop
dec
pushf
cmp
inc
int3
add
xor
pop
shl
add
cmp
aam
push
jmp
mov
sbb
adc
rclb
sahf
test
cltd
mov
fidivrs
or
mov
repnz
cwtl
mov
xchg
sbb
add
lods
adc
out
xchg
out
dec
cmp
mov
fsts
lret
fs
pop
test
sti
les
push
lcall
mov
inc
mov
adc
mov
dec
cmpsl
or
add
dec
mov
or
fmuls
sahf
cs
cmpsl
aam
adc
pop
sbb
lock
bound
fistpll
cmp
mov
inc
push
out
dec
out
and
movsl
movsl
pop
mov
cmp
pop
lods
pusha
mov
xchg
and
dec
mov
mov
loop
aaa
jb
push
sbb
cs
add
testb
rclb
xlat
add
inc
xor
imul
decb
jns
add
push
adc
mov
scas
shr
sub
stos
outsb
add
sarb
sub
mov
push
jmp
lods
pusha
mov
inc
aam
movb
ja
filds
cs
pop
mov
jge
bound
cs
je
or
mov
adc
cld
add
mov
cmc
addr16
jl
ss
mov
lods
sbb
lret
cmpl
int3
push
es
iret
dec
in
outsl
test
or
outsb
faddp
lods
xor
add
cld
add
and
cmp
shl
jle
sbb
mov
cwtl
mov
cmc
shll
ret
inc
leave
inc
sub
lcall
xchg
lea
mov
or
dec
adc
pusha
or
or
xchg
es
fcmovu
loop
pop
mov
dec
fcom
mov
xlat
ss
or
sarl
je
xlat
push
mov
loop
or
aam
inc
shll
lret
push
ljmp
out
mov
out
sub
dec
or
fdivs
out
mov
fidivrl
outsl
lret
daa
jmp
sbb
push
xchg
xlat
lods
push
dec
mov
xor
adc
and
push
cmp
daa
sar
add
test
mov
jg
dec
mov
gs
cmp
and
pop
movl
fistpll
sbb
shrb
jp
cmp
and
or
mov
fimull
fcomps
mov
push
add
sub
daa
adc
cmpl
jecxz
mov
jp
mov
sub
sbb
inc
loop
and
push
inc
call
int
add
jo
out
sarl
js
or
cmp
outsl
and
sbb
mov
xor
xlat
xchg
movsl
les
sbb
or
cli
sbb
cld
sub
or
fmulp
addr16
push
rol
cmp
cmpsb
xor
lret
pop
out
sub
popa
pop
adc
add
pop
enter
ret
sahf
and
fstl
icebp
dec
push
es
loopne
aam
ljmp
fisubs
imul
mov
or
ljmp
and
and
push
rolb
adc
jb
call
xchg
inc
das
xchg
xor
mov
js
add
mov
sub
pop
add
mov
stos
dec
sub
inc
lock
gs
pop
out
pop
aam
imul
js
cmpsl
cmpsb
leavew
mov
out
out
jno
pop
je
jge
pop
push
prefetcht1
and
roll
int
pop
shll
push
fidivrl
js
in
inc
xor
push
adc
inc
sbb
xor
out
and
jp
pop
jl
mov
ljmp
cmp
clc
aam
xor
lret
in
jle
mov
adc
fistl
xor
stc
lret
imul
inc
push
movsb
xor
aas
addr16
cmp
out
jp
nop
lahf
mov
shlb
mov
xor
xor
xchg
sub
push
mov
mov
lock
scas
insl
cmc
mov
mov
inc
mov
enter
setae
inc
popf
xchg
mov
fimull
mov
shlb
jmp
adc
test
imul
jl
daa
sbb
hlt
jecxz
sub
scas
inc
pop
imul
inc
xchg
loope
adc
ljmp
cld
lods
pop
and
cmp
es
jmp
and
adc
es
pop
jns
pop
add
sar
inc
aas
xchg
or
daa
mov
dec
or
mov
xchg
insb
ss
movsl
add
nop
cmp
dec
cmc
cmp
mov
xor
cmp
dec
in
rol
add
gs
ds
scas
pop
jae
cmpl
mov
mov
sahf
loope
jo
cli
mov
cmp
les
mov
icebp
push
rcl
fadd
dec
push
icebp
push
jle
cli
sub
loope
cmp
je
add
push
sub
in
xchg
push
outsl
hlt
outsb
cmp
daa
popa
push
mov
clc
test
loopne
jp
jecxz
mov
pop
decl
repnz
push
jne
pushf
shrl
jae
iret
sub
push
lcall
mov
orb
jb
stos
data16
mov
outsb
push
cmp
es
popa
xchg
idiv
movsl
adc
out
or
addl
mov
mov
pop
and
mov
movsb
mov
test
pop
xor
jmp
fidivrl
pop
cli
cmp
lcall
sahf
xor
adc
xor
inc
xchg
xchg
ljmp
push
pop
lret
in
aas
andl
lods
add
nop
sub
mov
fwait
dec
outsl
adc
inc
lret
sbb
jnp
movsb
push
adc
xorb
inc
xor
add
inc
xor
cmpsb
in
ljmp
sub
xchg
js
pop
sub
cld
cmp
out
mov
push
dec
jp
push
aaa
mov
icebp
add
add
mov
outsl
pop
js
add
or
or
dec
pusha
bound
leave
lret
dec
sahf
stc
fwait
pusha
iret
jmp
mov
cli
sub
and
lea
xchg
inc
lcallw
sub
test
cs
xchg
jecxz
cld
bound
into
fs
add
out
sub
add
mov
adcb
sahf
dec
mov
sbb
mov
jle
jbe
jns
jge
xor
shrl
ljmp
pop
inc
out
mov
test
add
cmpl
sub
gs
cmp
jl
sbb
or
call
popf
jl
clc
into
jne
add
dec
aas
sub
adc
jo
jo
add
inc
and
add
pop
data16
mov
fiadds
jmp
outsl
insl
lret
loopne
insl
mov
xchg
std
xor
add
dec
fisttps
adc
pmuludq
test
mov
ret
xchg
add
sbbb
push
jbe
pop
sub
aas
or
insl
pop
push
test
adc
repnz
fmuls
out
int
mov
xor
fsubp
sbb
nop
mov
imul
push
hlt
enter
push
imul
enter
rol
jbe
jno
data16
mov
xchg
aas
fsubp
lcall
jnp
xchg
test
jbe
mov
mov
jno
out
je
add
jecxz
std
stos
mov
adc
pop
pop
fs
imul
jbe
sub
rol
xorb
cmpsl
enter
adc
xchg
test
je
adc
xchg
pop
iret
addr16
push
dec
push
push
xor
cld
pop
cs
jne
mov
pop
lcall
fstl
jne
jns
mov
movsb
test
jns
add
mov
aas
inc
adc
shll
into
lahf
mov
fsubrl
das
iret
or
lods
cwtl
dec
movsb
add
ficomps
scas
fadds
dec
mov
lock
xor
stc
adc
pop
sbb
mov
pop
mov
inc
mov
out
rcr
push
pop
and
pop
lcall
pushf
test
int
adc
popa
cmp
std
mov
cld
rolb
lret
aaa
or
cmpl
pop
pushf
test
or
mov
and
hlt
add
fadd
pop
test
jecxz
push
sub
mov
mov
or
imul
data16
enter
and
pop
idivl
insb
xor
dec
test
sub
mov
cmp
or
cltd
test
inc
js
shrb
xor
jnp
notb
fcomp
pop
xchg
mov
fwait
pop
test
dec
loopne
add
and
fsub
sbb
xchg
push
xchg
pushf
pop
adc
adc
inc
in
adc
and
jp
test
xor
mov
xchg
incl
popa
lea
xchg
mov
jecxz
pop
add
std
fst
xchg
aam
enter
daa
mov
pop
pop
push
mov
lcall
cltd
in
mov
js
in
mov
sub
dec
pusha
les
sub
addr16
imul
mov
pop
cmc
int3
fidivs
loopne
lret
cmp
repz
or
aam
imul
sarb
fiaddl
sub
outsl
aad
sahf
add
add
xchg
cmp
sahf
scas
add
mov
jp
push
fst
in
mov
ret
jns
xchg
dec
mov
sbbl
cltd
cmp
jle
test
insb
push
xor
push
xor
out
add
push
mov
iret
sub
xor
inc
and
fwait
cltd
add
outsb
ret
mov
pop
pop
mov
pop
outsl
aas
out
enter
test
cmp
add
xchg
cwtl
mov
and
mov
mov
inc
imul
mov
nop
sbb
xor
enter
cmpsl
data16
cmp
popa
xchg
mov
mov
sbb
fwait
inc
cltd
add
mov
jg
push
into
mov
aas
xor
push
dec
or
inc
cmc
ror
jae
imul
adc
and
mov
pushf
xchg
test
jo
dec
lods
or
dec
fsubs
gs
test
clc
repz
add
xor
sbb
arpl
ds
xchg
fmull
outsb
sub
mov
or
or
and
mov
lret
jmp
int3
loop
xor
xchg
mov
xorl
bound
cmpsb
sub
and
mov
push
sbb
mov
mov
and
call
jns
aas
mov
popf
push
sub
sarb
sbb
gs
or
mov
and
mov
imul
cli
mov
sti
jecxz
pop
push
test
leave
add
cltd
sbb
addr16
test
clc
xor
das
sbb
jle
inc
lea
adc
shll
int3
cmp
stos
cmc
into
cltd
into
lods
xor
cs
mov
mov
mov
sub
mov
fsubs
or
icebp
js
fcmovnu
or
ds
and
adc
cmpl
int
fisubrl
enter
mov
jmp
xor
mov
shll
stos
mov
add
mov
fimull
xchg
subl
popa
push
leave
lea
mov
mov
adc
push
pushf
lret
iret
mul
std
dec
pushf
rcll
movsl
xor
and
cmp
inc
scas
mov
loope
test
xchg
sub
or
stos
push
cwtl
cmpsl
sbb
mov
lods
mov
xchg
jl
arpl
fs
pop
xchg
les
mov
shll
test
sbb
roll
xchg
repnz
jmp
repz
js
xor
mov
pop
jae
mov
adc
xlat
dec
mov
xchg
push
lcall
and
jmp
or
lret
and
into
fdivl
mov
mov
aaa
mov
inc
fimull
rcl
test
stc
nop
addr16
frstor
mov
popf
xchg
nop
xchg
mov
xor
add
in
pop
cwtl
ja
inc
adc
std
sub
pop
jbe
xchg
mov
imul
xor
push
mov
out
pusha
adc
mov
xchg
shrl
and
mov
dec
mov
pop
adc
cs
dec
pop
add
jae
rcrb
jp
addr16
dec
stos
aaa
mov
iret
daa
adc
js
jp
push
add
fs
mov
add
sarl
or
test
xchg
mov
or
cmp
cmp
cmpsb
sbb
adc
sbbb
icebp
mov
xor
lcall
pop
cmp
cmpb
mov
push
mov
aam
sbb
outsb
mov
add
xor
fs
jbe
adc
mov
aad
inc
jns
dec
adc
inc
cmc
dec
movsl
and
sub
loopne
int
pop
adc
roll
lahf
cmpsb
dec
xchg
add
jle
sbb
fmuls
jo
into
and
sbb
pop
mov
mov
cli
mov
pop
enter
scas
sarb
nop
andl
pop
lock
rorl
or
jo
adc
iret
ret
jg
aad
xchg
in
sarl
aas
ds
xchg
push
add
pop
loope
sub
mov
aaa
dec
or
jo
push
cmp
cmp
out
stc
jb
xchg
aaa
push
lods
ss
adc
fst
push
sbb
fiadds
cmp
inc
jns
xor
daa
lcall
scas
sub
dec
adc
push
lcall
jmp
and
push
repnz
inc
xor
int
mov
xchg
xchg
push
in
jmp
adc
ret
adc
std
int
cltd
pop
js
loopne
popa
stos
push
mov
and
sub
lods
scas
mov
adc
adc
xchg
lea
cmc
pop
mov
rcll
cvtdq2ps
jno
addr16
test
cld
inc
jb
sub
in
ja
cmp
loope
push
adc
ret
cmp
popf
fwait
mov
scas
nop
sti
xchg
mov
xchg
leave
test
icebp
mul
int3
sahf
add
fidivs
add
cmovs
and
mull
fisubs
inc
fsts
cltd
dec
insb
test
hlt
imul
lahf
mov
insb
fsubrl
fstpt
dec
sbb
dec
int3
mov
push
arpl
call
imull
dec
outsb
inc
mov
clts
push
and
jo
bound
das
inc
sbb
cmp
push
or
push
sbb
ds
popa
dec
add
mov
sahf
out
scas
mov
sub
sbb
filds
pushf
mov
jnp
int3
int
push
lret
or
pop
or
lock
ret
in
arpl
aaa
insl
inc
shlb
add
cmpsb
mov
stc
pop
jae
mov
adc
idivb
adc
arpl
ss
subl
lcall
outsb
mov
dec
sbb
imul
or
push
sbbl
repz
iret
add
sbb
aaa
xchg
fs
xchg
mov
mov
or
aas
dec
xlat
jns
jmp
xchg
shrl
adc
lret
push
lcall
icebp
pop
cltd
fidivs
cmp
xor
test
popa
pop
cli
cs
cmp
insb
ds
xchg
jne
and
mov
adc
notl
mov
push
les
addb
movsl
ret
pop
repz
pop
push
xchg
inc
push
jne
pop
cmp
xor
cwtl
aaa
test
pop
lea
pop
daa
inc
mov
inc
leave
gs
loop
mov
xchg
idiv
mov
inc
dec
cmp
das
add
mov
sbb
stc
push
inc
or
outsl
inc
inc
pop
mov
or
add
xor
pop
sahf
add
jnp
repz
xorb
dec
jecxz
sarl
cld
js
xor
es
arpl
adc
mov
inc
cmp
orl
add
imul
cmc
aaa
jbe
lahf
mov
cli
inc
in
pop
mov
rcl
dec
sarl
pop
iret
xchg
std
popl
out
xor
mov
sbb
mov
push
dec
mov
ror
cmp
jne
xchg
mov
in
pop
arpl
push
mov
mov
sahf
loope
pop
fidivrs
movsl
push
push
mov
cmp
addr16
call
sub
into
repnz
inc
xor
ja
ja
in
mov
fcoml
pop
push
xor
add
insb
mov
in
add
hlt
les
cmp
jno
sub
sti
lret
out
dec
in
lods
xchg
hlt
mov
lods
push
aas
movsl
mov
xor
lods
or
lock
loopne
pop
test
repz
inc
fcmove
mov
mov
or
pop
icebp
repz
es
sbb
call
or
push
mov
pop
push
mull
or
test
scas
jge
jbe
dec
out
mov
dec
pop
cs
fcoms
cmp
xor
add
xchg
stos
xchg
sub
lods
js
popa
outsl
mov
gs
out
lds
pop
add
imul
dec
call
in
or
std
jno
mov
and
call
das
xor
cmpsb
aam
sub
adc
shll
mov
pop
pop
adc
loopne
jns
repz
pop
sub
leave
mov
mov
pop
les
pusha
cs
jno
mov
push
loopne
rcr
pop
xchg
outsb
add
jecxz
jns
xor
idivb
je
adc
add
pop
in
aaa
cmp
cmp
mov
add
adc
jp
push
add
cmp
pcmpgtw
stc
aas
rclb
int3
pop
out
push
cmpb
or
inc
xchg
jns
les
out
stos
push
add
mov
mov
mov
stos
cmc
mov
push
mulb
sarb
fwait
mov
pop
js
cmp
xor
or
aas
or
and
aaa
cltd
xlat
inc
fwait
loop
stos
xlat
mov
fadd
mov
or
in
lock
sti
inc
inc
shlb
mov
int
add
jp
icebp
cld
aam
out
xor
sub
or
repz
pop
jmp
mov
imul
mov
mov
sub
add
xchg
pop
push
mov
fisttps
push
dec
ret
adc
sbb
and
add
adc
push
nop
xchg
cs
push
inc
movsl
xchg
jge
add
out
mov
jg
js
rorl
inc
out
and
inc
ret
xchg
pop
ficoms
in
cmpsb
inc
imul
gs
test
fdivp
popa
dec
adc
lods
int
mov
je
mov
inc
aaa
and
sbbb
mov
out
dec
adc
pop
sub
mov
and
mov
xchg
cmp
jp
jecxz
cmp
int
jp
xor
xchg
mov
mov
pop
pop
mov
pop
popa
fcompl
clc
pop
xchg
push
out
push
fldl
pop
xor
jmp
or
stc
out
lret
int
insl
xchg
cwtl
push
and
rorl
xor
inc
xchg
stc
mov
enter
test
loope
mov
jmp
sbb
mov
repz
out
rcll
enter
mov
mov
stos
cmc
or
or
aas
ret
test
xor
sti
xchg
xchg
out
int3
mov
push
rolb
imul
pop
and
dec
loope
dec
mov
icebp
sbb
fdivs
inc
lcall
push
cltd
push
movsl
jnp
push
add
mov
sub
mov
jnp
mov
cmp
iret
stos
imul
test
sbb
mov
sbb
js
pop
icebp
in
xor
jecxz
or
xchg
pop
popf
aam
fcomps
jne
dec
in
in
cmp
pop
xchg
jno
dec
hlt
adc
jne
icebp
ss
cld
call
gs
std
jmp
inc
sub
mov
cmc
adc
loop
lods
pushf
int
xchg
dec
add
fwait
in
add
jbe
fisttps
les
jl
nop
inc
pushf
add
ljmp
cwtl
pusha
iret
inc
orl
fdivl
or
adc
fistpll
adc
nop
stc
test
xchg
xchg
mov
inc
push
repnz
jmp
mov
push
jae
ret
xor
or
jno
in
xor
insl
cmp
push
xor
mov
add
push
in
loopne
negb
dec
call
dec
mov
mov
lds
divb
add
lcall
cld
xor
dec
adc
xchg
cmp
inc
inc
sub
cli
outsb
out
dec
lea
fwait
push
nop
fs
stos
stos
adc
inc
push
cwtl
fdivr
and
jmp
push
cmp
leave
cmp
insl
das
dec
xchg
mov
dec
mov
sub
stos
push
cmp
test
popa
mov
sbb
mov
arpl
jecxz
cwtl
pop
out
test
inc
add
mov
ret
xor
pusha
lock
movsl
xchg
adc
andb
nop
shrl
rcl
cwtl
cmovs
fs
stc
mov
es
stos
or
mov
push
sbb
jbe
mov
jno
ret
rolb
cmpsl
push
adc
mov
mov
out
xchg
mov
out
sar
cmp
mov
inc
and
mov
imul
mov
inc
mov
mov
nop
sbb
xor
addr16
cmpsl
push
out
movsl
push
into
lret
mov
dec
addb
scas
out
add
into
fcoml
mov
dec
pop
push
ljmp
pushf
jmp
sbb
pop
les
lret
imul
fnstcw
mov
dec
mov
sti
or
andb
adc
lcall
into
mov
inc
inc
xor
lods
shlb
sbb
cmp
cwtl
dec
push
cltd
jmp
call
out
adc
repz
xor
scas
adc
repnz
sbb
pop
test
mov
and
fisttpl
push
add
hlt
mov
sub
in
dec
inc
addr16
scas
insb
push
mov
or
aaa
sbb
in
mov
gs
xorl
add
lods
xchg
cmp
sysenter
or
jle
mov
xchg
pop
sub
out
inc
rcrl
fldcw
mov
ret
nop
shrb
loope
inc
aas
int
sti
popa
adc
repz
sbb
mov
jmp
push
das
mov
insl
mov
pop
ret
ficompl
test
repz
dec
mov
fsubp
fstpl
cmp
aam
cld
mov
mov
and
dec
fldt
scas
lds
xchg
icebp
xor
and
sti
cli
sbb
dec
pop
mov
inc
in
sbb
xorl
adc
jno
add
daa
js
insb
jbe
cmp
test
sti
sbbl
cmp
cmp
mov
ret
or
cmp
cmp
mov
pop
mov
lods
jns
jne
mov
sarl
out
stc
lods
in
xchg
icebp
sbb
jl
ljmp
or
outsb
mov
push
mov
inc
test
lahf
jl
aad
je
or
mov
leave
inc
data16
pop
std
clc
addr16
ds
cld
pop
and
and
and
or
push
aas
outsl
shlb
sub
vpcmpgtw
pop
sbb
sbb
test
or
or
aad
dec
jae
jl
sub
mov
mov
dec
movsl
pop
je
ret
add
ja
cmp
jle
adcl
ljmp
adc
das
xlat
inc
push
pop
sbb
dec
mov
inc
test
sbb
xchg
inc
jmp
mov
cmc
mov
sahf
xchg
out
loopne
or
xchg
sub
jns
adc
jecxz
mov
std
lcall
in
pop
push
and
scas
roll
xchg
mov
popf
icebp
icebp
push
fistpll
mov
les
je
subl
cwtl
popf
outsb
mov
push
mov
adc
fistl
mov
sti
or
fiadds
shll
insl
dec
mov
push
mov
xor
into
sbb
push
test
and
shrl
pop
jecxz
sub
mov
test
leave
movsl
mov
dec
aam
sti
sub
mov
loop,pn
test
jns
aad
adc
ret
call
call
fistps
and
les
clc
insb
push
test
lods
dec
xchg
daa
dec
ret
out
lahf
enter
lahf
daa
jmp
sub
lds
testb
mov
xchg
pop
cmc
call
jno
aam
mov
mov
xor
fsts
sub
pop
cs
jno
mov
lcall
mov
inc
and
pop
mov
mov
add
std
xchg
lock
std
mov
mov
gs
mov
sbb
subl
jp
xchg
pop
add
jnp
leave
das
movsl
xchg
adc
das
add
ja
fs
jg
shrl
int3
or
insl
or
fwait
xor
lea
push
mov
inc
cmp
or
jns
mov
jbe
mov
std
sbb
xchg
std
inc
insb
dec
cli
fists
int
jns
add
test
cmp
and
arpl
jmp
push
dec
rolb
push
cwtl
dec
rorl
in
sahf
fildl
and
jne
testb
sahf
ja
dec
shrb
or
jmp
mov
setnp
adc
pop
cmpsl
aas
punpckhdq
pop
xor
mov
loopne
pushf
gs
ss
bound
popa
imul
pop
push
xchg
jb
fsubrs
mov
jae
inc
out
cmpsl
jnp
inc
jns
cmp
push
adc
test
inc
and
xor
aam
into
je
or
mov
hlt
xchg
repnz
pop
or
mul
adc
psrld
xchg
dec
imul
xor
lahf
jmp
or
fwait
or
outsl
lahf
arpl
popf
sub
add
xchg
fcompl
sub
call
in
cmp
shll
lcallw
mov
pop
ret
xchg
mov
fnsave
sarb
mov
out
sub
push
xchg
push
popa
jmp
mov
mov
mov
xchg
pusha
add
pop
gs
in
dec
cmp
inc
push
repz
mov
add
push
and
ss
arpl
inc
sbbb
lods
mov
test
push
sub
mov
ss
add
sub
pop
test
sub
int3
xor
es
sub
pop
push
adc
jge
or
mov
pop
jp
push
jecxz
xchg
lcall
sub
ja
mov
mov
xor
imul
mov
mov
push
cmpsl
mov
push
mov
imul
pushf
ret
arpl
nop
cs
lcall
hlt
push
and
test
cmp
movsb
in
dec
sarb
mov
movsl
and
hlt
pop
xlat
sbb
push
fwait
cwtl
arpl
daa
dec
leave
ja
sahf
inc
int
push
xchg
lcall
pusha
mov
lods
push
insb
sbb
dec
inc
out
jbe
jns
je
push
movsb
adc
jg
mov
jb
mov
rcll
ds
stos
jb
mov
pop
pop
lahf
cli
ja
in
clc
xchg
mov
or
sbb
shl
iret
out
lcall
xorb
inc
push
cmp
mov
pop
push
popf
sub
sub
repz
sbbl
movsl
sbb
das
rolb
jmp
imul
inc
sar
stc
mov
push
in
ja
xchg
outsb
mov
xchg
fsubrp
adc
je
dec
sub
adc
cs
jp
addr16
cwtl
fstpl
cmp
xchg
mov
adc
int3
hlt
push
dec
js
and
xor
inc
daa
and
maskmovq
testl
in
cmp
lods
mull
jb
xchg
xor
push
mov
sub
data16
subb
sbb
repz
mov
in
xchg
mov
sbb
xchg
mov
in
leave
rcll
dec
xlat
sub
nop
push
punpcklwd
push
inc
mov
sti
xlat
stos
sbb
cmp
and
and
cmp
imul
nop
aaa
outsb
jne
rolb
or
xor
or
scas
mov
pusha
arpl
std
popf
movsb
sti
mov
subl
push
push
jnp
ret
or
lds
dec
loopne
cld
xchg
fs
mov
inc
jbe
add
lock
pusha
in
mov
pushl
dec
icebp
into
pop
negb
xchg
xor
fistpl
push
es
and
aaa
jo
lea
adc
push
test
test
aad
sti
ja
pop
jge
mov
ja
dec
ds
imull
mov
test
cmp
addl
pop
mov
addl
push
lea
xchg
cmp
jns
inc
stos
jl
popa
cmpsb
popa
pop
nop
mov
or
dec
mov
sbb
inc
lea
push
mov
inc
or
xor
loop
adc
mov
mov
xor
dec
test
mov
cmpsb
cmp
jno
mov
stos
test
adc
jecxz
mov
or
movq
pop
sub
inc
jg
cli
cltd
pop
jle
imul
into
jne
cmp
fists
xchg
js
sbb
mov
adc
frstor
sub
in
lea
jge
mov
mov
gs
adc
movsl
gs
lret
adcb
scas
mov
and
pop
mov
inc
mov
mov
jp
cwtl
push
repz
div
fidivl
or
test
xchg
sbb
inc
orl
inc
inc
in
es
scas
and
or
mov
mov
jo
mov
enter
mov
pop
xchg
xchg
xorb
leave
mov
shlb
cwtl
or
rcrl
fs
push
test
dec
into
cmp
and
repz
in
dec
lahf
adc
shll
pop
rorb
pop
cmp
cmp
mov
jbe
cld
aam
insb
inc
and
ljmp
push
es
mov
mov
mov
add
icebp
cmp
fadds
add
mov
pop
sbb
insl
in
insl
jp
jns
aaa
xchg
and
std
movb
aas
push
rcrb
add
and
adc
push
push
ja
mov
lea
mov
ljmp
jmp
dec
mov
add
push
in
add
xchg
sub
pop
fcomi
jns
adc
pop
clc
decl
sub
or
stc
mov
sub
fildl
dec
mov
inc
inc
in
adc
push
test
imul
xchg
insb
idivl
fmulp
sbb
pop
jle
jl
pop
out
mov
scas
mov
je
push
cli
roll
jbe
inc
ljmp
out
sarl
cmp
subl
popf
popa
jle
and
mov
fsubr
jl
or
loopne
stos
xchg
sub
or
mov
jp
roll
lock
pop
pop
push
jecxz
dec
outsb
icebp
faddp
pushf
pop
lret
int3
add
fisttpl
mov
stos
pop
movsb
sub
push
dec
jp
xchg
sti
pop
sbb
jns
ss
mov
mov
outsl
imul
add
cmp
loopne
jecxz
adc
add
outsb
ljmp
aaa
adc
add
xchg
das
movsl
mov
mov
das
div
and
sahf
movsl
lret
loope
push
test
jnp
loope
out
adc
mov
hlt
jns
pop
mov
lods
cmpsb
xchg
imul
pusha
xchg
shrl
xchg
inc
jmp
mov
push
in
xchg
xor
lds
int
js
and
movsl
int3
movsl
xchg
out
imulb
lea
cltd
adc
out
rolb
push
movsl
nop
cmp
aaa
pop
xchg
jp
lea
add
dec
jno
sub
aad
fs
push
push
cmc
js
mov
push
dec
sbb
add
xchg
cmovne
push
leave
js
iret
sub
cmpsb
fistl
jge
lahf
data16
cmp
xchg
repnz
mov
cmpsl
dec
data16
sarl
dec
and
and
sahf
or
cmp
mov
rolb
daa
dec
out
pusha
insb
je
mov
insb
inc
imul
inc
cli
dec
adc
popa
mov
repz
xor
mov
daa
jns
sub
dec
iret
aam
out
sbb
scas
mov
call
pop
push
sub
xchg
dec
stos
lods
mov
xchg
lds
cmp
rcrl
sub
dec
dec
xor
inc
std
or
inc
rcl
pop
add
sarb
add
sub
xlat
xchg
icebp
add
divb
add
mov
inc
inc
lods
dec
xchg
pop
sub
aam
push
and
and
push
repz
out
dec
xchg
lods
leave
cmpsl
insb
sbb
sarl
and
add
mov
out
and
add
lods
int3
cmpl
jo
mov
insl
sub
jl
cmp
test
mov
inc
add
gs
mov
test
pop
xor
fs
cmp
cmpsl
mov
jne
out
lods
xor
or
sub
aam
imul
lahf
shlb
enter
lods
add
mov
push
push
lret
add
pushf
fistl
lahf
add
in
mov
nop
pop
push
mov
jns
enter
mov
pop
pop
stc
je
lock
nop
push
test
loopne
enter
sbb
jmp
sub
pop
mov
lcall
rcl
pop
pop
rcl
popa
imul
imul
out
pop
ret
test
mov
add
rolb
bound
outsl
gs
out
or
mov
xor
mov
fiadds
rcll
sbb
xchg
shlb
mov
push
xor
xor
and
sbb
xor
sub
mov
sbb
jmp
test
xor
or
fstl
mov
idivb
or
fwait
scas
out
jno
inc
int
ffreep
sbb
adc
mov
sbb
fcoms
xor
push
ret
xchg
pop
loopne
test
les
sub
pop
sti
cwtl
and
in
sub
push
ljmp
push
mov
pop
pop
mov
xor
outsl
out
push
sub
sti
inc
movsl
mov
push
push
and
pop
insb
or
mov
xor
sub
cmp
dec
mov
push
test
pop
pop
inc
stos
rcrl
or
or
arpl
std
sbb
dec
cmp
mov
inc
dec
sti
inc
push
je
out
cld
xchg
test
push
and
pop
divl
insb
cmpl
xchg
sub
dec
adc
call
push
mov
daa
rcrl
or
loop
adc
fs
mov
jl
aaa
fstpt
aas
repnz
daa
lock
mov
sbb
fistpl
cmpsl
in
es
mulb
aad
arpl
xchg
xor
mov
leave
jno
pop
fistl
lods
test
bound
push
cmp
outsl
xor
jl
stos
inc
adc
lcall
dec
adc
push
jecxz
rolb
ss
insl
mov
inc
dec
in
xlat
push
sub
repnz
jle,pt
sbb
sbb
inc
iret
iret
add
mov
lahf
int3
inc
call
dec
dec
into
andb
loop
cwtl
out
mov
orb
pop
in
adc
repnz
cmp
fiadds
push
jne
pop
pop
mov
aad
sbb
xlat
and
sbb
shll
cli
xchg
popa
cltd
fninit
popa
jb
cmpsl
xchg
je
cmp
inc
xchg
push
sbb
cmpsl
lods
ljmp
hlt
repz
movd
mov
push
lods
add
mov
mov
icebp
inc
and
scas
fimuls
stos
mov
pop
sbb
pop
popf
sub
xchg
rcrb
or
push
daa
sarb
xor
inc
pop
push
mov
or
mov
repz
inc
fld
pop
mov
outsl
lds
push
mov
pop
nop
and
add
rcl
std
adc
and
fildll
dec
aam
adc
int
push
sbb
xor
pop
jge
pop
cmp
ja
movsb
pusha
popf
jb
pop
mul
pop
les
mov
mov
add
sahf
inc
jnp
in
and
push
mov
imul
cmpsb
incl
aad
inc
sbbl
or
add
xlat
xchg
cmpsl
inc
out
and
lahf
cmp
jmp
andb
mov
lods
leave
adc
in
xorl
mov
sti
shlb
loopne
mov
push
outsb
lods
add
pop
jne
mov
mov
xchg
imul
inc
mov
cmp
lret
arpl
xor
fmull
clc
rclb
or
mov
out
add
je
push
cltd
add
jno
push
sbb
mov
jo
arpl
xor
xor
xchg
enter
shrb
add
adc
lock
fs
out
das
pop
sub
imul
mov
sbb
std
adc
cmpsl
pushf
aam
dec
pop
pop
stc
xchg
mov
push
int
stc
jnp
mov
out
mov
rcll
mov
pop
popf
sub
mov
mov
mov
stc
push
ja
ret
pop
sub
inc
rcrl
mov
mov
aad
loop
xchg
add
stos
mov
dec
mov
mov
fs
js
arpl
cmpl
cwtl
cmpsb
stos
inc
pop
cld
sbb
push
int3
mov
pusha
aas
sbb
ds
jbe
add
lcall
in
xchg
dec
stc
movsb
mov
xchg
mov
lret
jg
mov
mov
mov
cmp
rcl
push
clc
pop
or
jbe
outsb
mov
nop
mov
and
mov
iret
xor
pop
ljmp
mov
add
nop
dec
ss
mov
push
cmp
pop
pop
push
test
adcb
mov
inc
sti
fdivrs
cmpsb
pop
xor
je
mov
cltd
pusha
cmp
mov
repnz
bound
xchg
outsb
rclb
dec
out
xlat
cltd
roll
inc
scas
fs
pusha
aad
dec
fildl
pusha
pop
inc
vcmpsd
sar
enter
lcall
adc
cmpsb
dec
inc
mov
std
jl
xor
fs
mov
and
adc
int3
mov
or
test
or
ja
sub
add
lahf
sub
fidivrs
inc
sbb
add
jmp
movsb
jmp
or
push
shlb
push
sub
sub
dec
xorl
mov
incb
mov
fcmovnb
jmp
aaa
mov
xchg
mov
mov
cmpsb
scas
or
cli
cld
push
iret
aas
lret
mov
fsubr
fimull
daa
loop
inc
rol
in
cmp
sub
test
imul
mov
jl
xchg
cmc
iret
mov
idiv
test
xlat
pop
lcall
pop
enter
in
test
lahf
std
out
bound
push
mov
sub
jnp
xlat
adc
prefetchwt1
add
jg
pushf
mov
mov
data16
ja
mov
inc
shll
mov
subl
cwtl
inc
ds
mov
dec
inc
cmp
sbb
add
mov
rcll
sti
loope
outsb
clc
jns
add
lea
cltd
stos
push
mov
push
das
cmp
or
dec
pop
fstl
add
das
cmp
fldl
aas
and
mov
jp
faddl
jge
adc
call
push
je
nop
lahf
push
pushf
xchg
cmp
inc
cmpsl
lods
imul
push
sub
lods
sub
add
leave
mov
stos
mov
out
pushf
enter
cmp
push
mov
cmp
cmp
das
std
mov
stos
cmp
mov
stos
mov
jge
sub
add
fs
scas
rcrl
lock
dec
jge
les
inc
andb
xchg
inc
movsb
mov
mov
mov
push
mov
cmpl
mov
sub
cmpsb
imul
mov
xor
pop
inc
ja
jnp
ss
xor
int3
repz
icebp
loop
seto
fdivp
sbb
or
jmp
and
fwait
in
loope
xor
icebp
sbb
dec
ljmp
inc
xchg
inc
and
fadds
pop
fcmovnb
sub
mov
sub
inc
out
xchg
push
loopne
adcb
mov
ja
jmp
rcll
ficoml
cmp
jns
rolb
or
sub
cli
mov
mov
fdivs
jl
dec
push
add
test
push
test
xchg
mov
fcoms
scas
push
in
mov
je
clc
xchg
xchg
loope
pop
test
mov
mov
mov
pop
stos
xchg
add
add
mov
into
stc
mov
sub
xchg
scas
or
push
jle
shlb
test
jg
dec
mov
push
sub
fdiv
shrl
xor
aad
cmpsb
xchg
mov
lods
loopne
repz
pop
and
jge
mov
test
mov
cld
and
add
xor
mov
scas
mov
out
inc
cltd
xchg
mov
lret
mov
inc
mov
pop
xor
xchg
mov
insl
adc
sbb
call
mov
call
scas
lods
jle
sbb
dec
jle
mov
or
dec
mov
dec
jno
push
stos
iret
stos
icebp
imul
repnz
sbb
in
add
xor
dec
or
inc
sbb
and
insl
or
and
adc
lea
xor
arpl
imul
mov
lods
add
push
push
adc
scas
in
bound
lahf
icebp
pushf
jg
or
nop
scas
andl
jge
sub
aam
repnz
xor
fists
lret
sub
cld
mov
add
sub
add
xlat
sbbb
scas
adc
test
inc
in
and
mov
add
jb
jp
cmp
lock
inc
or
push
mov
inc
or
ja
cmp
xchg
push
mov
xor
inc
ret
ret
pop
dec
sub
ljmp
cmpb
outsl
stos
inc
jo
popf
jecxz
gs
or
and
pushf
and
hlt
pop
and
arpl
sub
ja
pop
imul
movsl
push
xor
sbb
mov
sahf
mov
ss
shrl
mov
insb
addl
fmuls
out
lret
adc
pop
and
push
adc
dec
adc
inc
push
imul
nop
hlt
into
or
or
push
loop
dec
lret
pop
mov
outsb
jnp
test
shll
adc
jg
push
jne
out
movsl
mov
or
hlt
cwtl
jbe
stos
scas
dec
cmp
xchg
test
ficomps
push
pop
es
cli
pop
adc
ret
sub
inc
cmp
in
out
push
push
sarb
lcall
cmp
aam
data16
add
xchg
test
outsb
adc
xadd
leave
dec
dec
mov
push
lods
dec
or
jl
les
mov
and
stos
lock
dec
mov
jl
mov
gs
addl
movsl
push
out
hlt
out
adc
or
inc
mov
mov
cmpl
xor
jno
test
cmpsb
push
jecxz
jl
dec
pop
int3
inc
xor
shlb
das
in
mov
pop
psrlq
sub
push
dec
negl
fiadds
lcall
dec
loopne
mov
aam
test
inc
adc
mov
pop
stos
and
jno
das
rcrb
hlt
adc
and
jns
int
dec
shl
adc
dec
bound
sahf
cld
pop
rorl
addr16
js
mov
adc
mov
mov
jno
cmc
sbb
jecxz
cmpsl
sub
lods
inc
cmp
xor
testl
xor
mov
data16
lea
jmp
add
data16
dec
movsb
mov
xchg
xchg
mov
cmpsb
jnp
push
ret
xchg
mov
push
inc
pop
dec
fisttpll
pushf
inc
sub
pusha
lds
xchg
and
push
mov
mov
insb
stc
pop
jae
orl
jns
sbb
jmp
fwait
out
lds
pop
jae
stc
jge
dec
jmp
push
push
aas
stos
sbb
adc
and
iret
jnp
dec
cmp
fidivs
cmpsl
pop
push
outsl
pop
xchg
mov
xor
orb
push
rcll
inc
mov
jno
addr16
scas
sub
mov
inc
ret
xchg
push
adc
push
pop
mov
mov
mov
shlb
push
xlat
sarb
arpl
repnz
xchg
jg
sub
and
in
mov
dec
or
cmp
cs
jbe
sbb
mov
pushaw
cs
inc
mov
mov
in
pop
fisubrs
arpl
push
mov
inc
mov
push
addr16
loop
or
shl
add
inc
js
or
imul
addr16
inc
push
pop
lods
cmp
push
leave
xchg
dec
cmp
std
out
call
rep
lcall
push
out
lret
cltd
ljmp
mov
or
in
test
add
stos
les
dec
imul
add
in
scas
jnp
fdivrs
imul
dec
into
sbb
outsb
es
cld
pop
rolb
sahf
mov
roll
and
or
xor
stc
repz
push
imul
cmp
jge
xor
enter
cmc
mov
icebp
or
xchg
int
fwait
in
adc
lods
movsl
dec
aad
in
inc
sbb
or
mov
dec
aam
mov
add
xchg
push
mov
inc
pop
lcall
jns
pushf
arpl
dec
dec
scas
cltd
xchg
dec
je
or
push
std
mov
outsl
xor
mov
int3
lock
push
fsubrl
add
cmp
sar
and
inc
jecxz
enter
cmp
shrb
ss
addl
dec
lods
mov
test
and
jae
sub
in
adc
add
or
mov
das
std
in
and
outsb
mov
cli
in
mov
and
subb
cmc
sub
pop
mov
xor
in
ja
mov
dec
fwait
cwtl
inc
mov
xor
imul
push
aas
lea
xchg
and
sub
push
fistpl
in
imul
sahf
ljmp
pusha
js
lret
push
dec
dec
xchg
aam
dec
repz
fisubrs
repz
and
sar
clc
fidivrs
or
mov
movsb
push
sahf
pop
data16
stos
nop
cmc
add
pusha
push
inc
je
pusha
cld
scas
adc
in
sbb
push
sbb
xor
jae
sbb
cltd
inc
dec
inc
jecxz
or
sarb
sbb
mov
push
and
ret
sahf
inc
pop
loope
jl
cwtl
int3
pop
stc
adcb
repnz
mov
mov
pop
sub
jmp
jmp
imul
xor
push
inc
sub
inc
mov
aaa
int3
or
mov
stos
mov
aam
lret
aam
pop
adc
xor
push
scas
adc
push
dec
int3
inc
and
push
out
push
gs
or
lret
push
addl
scas
push
loopne
xor
pusha
loopne
mov
xchg
adc
icebp
xchg
dec
and
jns
cli
push
add
pop
mov
rclb
hlt
dec
iret
xlat
add
dec
stc
sbb
jne
sbbl
jmp
inc
lods
fldt
push
mov
inc
testl
in
loope
dec
test
insl
fidivl
mov
test
cwtl
xlat
scas
imul
dec
xor
push
aaa
sbb
xchg
mov
push
and
sbb
push
xor
rorb
ja
icebp
pushf
loopne
in
test
out
std
xor
dec
inc
inc
mov
jns
lret
sbb
xchg
test
dec
push
idiv
cmp
adc
sub
inc
add
out
test
cmovns
roll
test
pop
fdivr
imul
fucom
adc
push
std
ret
push
std
push
xchg
pop
cmpsb
and
fwait
sarl
ds
out
sbb
ret
jge
mov
call
pusha
fildll
bound
movsl
lods
dec
roll
sub
inc
daa
cmp
lahf
inc
dec
mov
jno
in
mov
push
and
test
jmp
sub
xchg
test
mov
movb
xlat
stc
nop
fwait
lahf
jae
xor
gs
pop
enter
in
adc
pop
or
xchg
dec
ljmp
cmc
dec
jae
mov
fs
xchg
sub
inc
cmpsb
mov
mov
inc
mov
ret
jg
add
pushf
or
rol
and
push
cmp
pop
adc
cmp
aaa
faddp
stos
xchg
and
sbb
xchg
scas
sti
int
inc
mov
cli
xor
dec
testb
dec
jg
jecxz
mov
aad
shrb
lcall
loopne
inc
int
imul
outsl
pop
les
xchg
xor
mov
pop
addb
jp
std
lock
insb
xor
insb
test
cmpb
stos
dec
fistl
in
mulb
fistps
xor
dec
and
popa
xor
fisubl
cltd
sti
add
jo
popf
inc
sarl
xlat
jle
sub
inc
pop
push
cmp
lods
dec
call
xchg
inc
jge
hlt
pushf
call
push
pop
fs
testb
inc
call
jns
mov
mov
or
aaa
jae
sub
mov
insb
pop
inc
mov
mov
add
imul
push
sbb
jo
adc
jle
js
mov
push
push
push
mov
jno
sbb
sub
push
add
inc
mov
jg,pt
jno
pop
repz
and
js
adc
jp
and
out
outsl
sahf
pop
inc
nop
or
sbb
sub
pop
xchg
or
fs
pushf
sbb
cli
ret
adc
dec
test
cwtl
pop
push
cmp
ja
insl
pusha
pop
cmpsl
popf
jae
ds
add
jle
lahf
add
sbb
out
arpl
lret
imul
popa
sbb
mov
nop
jbe
sub
or
cmpsl
and
push
fwait
arpl
jmp
inc
xchg
or
fucomip
mov
dec
pop
testb
icebp
shrl
adc
iret
dec
inc
or
imul
cmpsb
pop
ficomps
lret
add
into
subl
hlt
mov
in
call
rcrb
add
pop
leave
adcl
inc
xchg
mov
xor
xchg
dec
fisubrl
cmc
test
orl
paddq
inc
xor
or
cltd
push
out
addr16
lret
in
and
push
inc
unpckhps
je
xchg
fcompl
fstl
gs
xchg
dec
jle
pop
dec
dec
or
ds
out
xsha1
cmpsb
lret
lds
in
mov
outsb
mov
jb
outsl
mov
addl
push
add
lock
inc
or
cmpsl
inc
xchg
add
insb
out
xchg
insl
rol
xchg
into
es
sub
outsl
add
xor
xchg
jmp
pop
fcmovne
test
dec
cmp
nop
pusha
dec
je
and
jg
push
addr16
sub
sub
sub
push
xlat
mov
test
outsb
in
inc
add
xchg
nop
mov
xchg
lock
call
dec
push
stc
mov
test
mov
xchg
in
loop
dec
insb
sub
adc
sub
and
loopne
sub
mov
test
std
aaa
test
insl
inc
push
jnp
cmp
adc
aad
jge
aaa
bound
jne
cmp
ret
jbe
out
pop
or
ja
test
sbb
sarb
push
mov
and
call
stc
lret
fwait
mov
cltd
mov
cmpsb
inc
push
iret
lock
int
push
insl
or
fistl
sbb
leave
xor
or
pop
mov
xor
popa
or
add
or
test
dec
rcrb
xchg
loopne
inc
aam
repnz
push
lret
jo
or
stos
hlt
lock
xor
lret
dec
pop
inc
inc
pop
add
es
shlb
pop
aas
inc
or
mov
pop
mov
out
std
notb
push
fdiv
hlt
jecxz
push
lret
call
jmp
rclb
dec
xor
push
push
sub
cmp
dec
xchg
xchg
mov
pusha
popa
push
xor
scas
int
pusha
cltd
gs
mov
inc
mov
jo
inc
lahf
pushf
mov
add
ds
push
cmp
test
ret
in
loope
push
gs
fisttpll
mov
stos
mov
jg
pop
cmp
mov
sahf
pop
ljmp
pop
negb
push
arpl
int3
jns
push
cmp
push
mov
sub
addr16
mov
movsl
sub
jg
cmp
cmp
push
pop
adc
sbb
das
aaa
out
movsl
ret
push
enter
lea
aaa
arpl
xor
inc
inc
jns
fisttpll
int3
ljmp
dec
pop
aam
mov
mov
pop
pop
mov
xchg
ds
pop
inc
jnp
cmpsb
std
adc
pop
mov
cwtl
jg
add
pop
pop
jmp
test
adc
in
sti
or
or
push
mov
loopne
idivb
push
push
cmp
inc
incl
add
outsb
inc
repnz
fcmovb
jl
daa
mov
mov
xor
cmpsl
stos
mov
adc
xchg
and
mov
mov
sub
mov
sub
jns
dec
inc
mov
jge
lret
cs
loopne
cmp
stos
dec
jbe
pushf
mov
shl
jbe
scas
aam
mov
pop
ret
and
cmp
call
add
add
xchg
mov
stc
adc
push
or
pop
arpl
das
dec
xchg
pop
aaa
push
and
xchg
push
sbb
or
hlt
inc
fwait
aas
and
fimull
out
js
cmp
fwait
insb
sbb
stc
pop
call
into
sahf
mov
fisubl
mov
in
add
out
fwait
jmp
cwtl
xchg
xchg
bswap
cs
cmc
movsb
add
outsb
push
sub
aam
or
hlt
pop
push
jnp
sbb
cmpsl
or
outsl
and
pop
cmp
mov
arpl
jmp
test
test
dec
call
sub
cmc
push
jmp
mov
mov
stos
sub
dec
or
scas
sbb
push
pop
frndint
adc
jbe
lcall
push
test
test
aas
and
add
test
cwtl
mov
push
imul
or
movsb
cmp
mov
clc
dec
addb
mov
stc
sti
jg
xor
dec
push
and
rcr
int
xor
mov
push
lds
push
ss
adc
push
pusha
mov
jg
or
addr16
rcrl
push
sbb
mov
out
cmp
mov
xor
sub
cmp
fs
insl
scas
pop
sti
pop
xor
imul
and
fnstcw
repnz
jmp
adc
jge
pop
or
cmpsl
xchg
add
jle
mov
addl
ds
and
push
lret
push
or
or
and
cmc
mov
fdivrs
push
inc
lcall
in
test
sub
arpl
xchg
jmp
cmp
rcll
dec
loop
divl
arpl
lahf
adc
mov
mov
pop
push
shlb
pusha
cmpsl
fisubl
pop
sahf
stos
test
pusha
add
or
mov
lods
loop
dec
ret
xchg
add
pop
mov
mov
pop
pop
sub
mov
mov
push
jae
jbe
fwait
push
jl
rcll
mov
lea
push
jle
lahf
pop
adc
mov
js
cmpsb
push
xor
lock
pop
add
push
out
mov
lea
xchg
mov
sbb
inc
push
subl
fists
push
mov
repnz
out
or
mov
lret
hlt
dec
fcompl
adc
jmp
dec
or
iret
jae
sub
xlat
jg
and
negb
push
mov
sub
xchg
lret
cld
mov
es
fsubr
ja
out
push
gs
jb
xor
sarb
dec
jle
mov
loope
lret
cmp
es
shr
pop
or
das
out
cmp
or
mov
mov
inc
pop
mov
out
insl
push
and
add
and
and
outsb
out
and
pop
cwtl
imul
inc
xor
imul
and
cmpsl
add
leave
inc
enter
in
mov
pop
lods
mov
pop
xorl
push
push
test
and
dec
cmp
stos
testl
xor
cwtl
mov
nop
lcall
lods
mov
rcr
sub
ficoml
leave
mov
xchg
push
xor
or
adcb
inc
bound
scas
mov
push
dec
jg
clc
in
dec
xor
out
fcomps
test
ss
push
adc
push
mov
mov
stos
in
or
sahf
inc
repnz
cltd
push
mov
loop
mov
adc
mov
cmpsl
inc
lret
pop
mov
cwtl
sbb
insl
gs
loope
ja
lahf
fwait
or
cmp
scas
jns
pop
lcall
mov
mov
cli
in
sub
mov
icebp
or
sti
rcrb
out
cmp
or
in
mov
mov
in
movsl
ret
and
dec
adc
rcr
test
addr16
xchg
jp
fdivr
push
adc
test
jl
jl
rcll
mov
jo
push
repz
jmp
jp
xor
repz
jg
xchg
push
outsb
pop
fistl
add
and
and
mov
or
mov
icebp
rorb
mov
ficoml
in
sbb
jmp
push
jmp
push
push
push
push
pop
sti
jge
stc
int
jb
loope
jmp
ss
ficoml
lea
out
scas
inc
inc
push
xchg
icebp
mov
pop
xchg
leave
push
sub
sbb
rclb
cmp
inc
jle
mov
out
ss
je
ret
xlat
mov
sbb
push
lret
or
rcl
sbb
xchg
out
xor
xchg
stos
push
out
gs
pop
imul
fcmovnb
mov
and
add
inc
lock
push
je
cltd
ret
lock
or
daa
test
pusha
out
dec
add
dec
or
inc
aam
cwtl
stos
ret
add
loop
pop
testw
fildl
inc
mov
adc
xor
sub
out
xchg
xor
xchg
adc
repnz
movsl
inc
jg
push
cmp
dec
push
inc
adc
popf
stos
jne
test
in
jg
subl
push
inc
mov
stos
mov
push
xchg
adc
cmp
mov
scas
daa
fiaddl
jnp
xor
mov
adc
and
lahf
mov
lea
mov
adc
repnz
jnp
lret
bound
je
repnz
movsb
in
div
bound
imul
sbb
scas
pop
fmull
jae
stos
jno
push
call
cltd
stos
outsl
cmc
jg
js
rolb
sbb
sub
jae
data16
loopne
xchg
aad
test
adc
push
test
sbb
xchg
jne
das
xchg
push
clc
imul
mov
jp
jns
out
es
mov
mov
lretw
adc
loope
sti
jl
frstor
add
cmp
lahf
out
flds
sub
and
dec
pop
ss
sub
mov
cwtl
rol
xchg
and
and
jbe
xchg
shl
push
xchg
inc
dec
subb
nop
cmpl
leave
imul
lods
ds
or
mov
ds
test
mov
fidivl
add
jb
mov
mov
jo
pusha
mov
lea
es
or
fldl
sub
stos
or
dec
rclb
dec
out
stos
mov
ret
jmp
mov
shll
xor
daa
pop
cld
out
add
lods
ret
mov
xchg
sub
enter
js
add
lret
mov
cmc
xchg
jo
nop
lods
sbbb
add
xor
or
in
sar
adc
icebp
shll
push
inc
mov
std
jae
mov
mov
cmp
shrl
add
add
dec
jge
imul
hlt
and
iret
outsl
mov
loop
aas
sbb
jno
mov
fisttps
out
mov
and
and
in
sti
out
testb
in
leave
pop
fcomps
mov
in
mov
popa
mov
imul
mov
inc
mov
fistpll
sbb
pop
push
lods
xchg
mov
sti
jo
mov
mov
imul
cmc
in
lahf
inc
aaa
jo
dec
jp
in
ljmp
in
mov
cltd
sahf
or
cmpsl
mov
in
xor
jp
cmpsl
and
or
and
mov
subl
mov
xchg
adc
es
addr16
mov
imul
cmc
dec
inc
add
pop
cmp
jp
in
int3
xchg
sub
ret
icebp
pop
sbb
push
pusha
cmp
and
ret
adc
push
lock
inc
jge
mov
ss
pop
leave
xchg
cli
xchg
or
sarl
or
sbb
mull
cmp
in
sub
cwtl
rorb
dec
adc
mov
std
xchg
add
mov
push
fs
lock
jno
repnz
fisttpll
sub
adc
and
jne
add
add
test
add
sbb
roll
pop
mov
lret
insb
mov
rcl
aaa
dec
add
dec
jnp
mov
sahf
sbb
aaa
out
ffree
push
mov
sub
push
push
outsb
sub
repnz
sbb
xor
mov
mov
jmp
mov
scas
add
fwait
outsb
and
test
add
aaa
mov
cld
iret
jae
test
enter
ret
ret
sub
rcrl
inc
call
test
jns
jmp
in
mov
gs
ds
dec
xchg
or
inc
push
mov
ret
outsb
jp
or
sbb
push
shrl
xlat
dec
leave
mov
inc
scas
mov
push
mov
mov
xor
xor
pop
mov
test
repnz
cld
sub
dec
js
imul
jmp
sub
call
push
lret
or
cld
jb
cmc
test
mov
xor
fwait
cli
sar
add
push
inc
paddsb
aaa
out
xchg
nop
add
mov
jo
mov
jo
test
ja
push
jg
rorl
icebp
dec
mov
cmp
cmp
jo
int
gs
pop
add
inc
adc
mov
pop
inc
cmpsb
mov
jne
icebp
out
pop
fldt
mov
inc
fnstsw
call
xchg
mov
sarb
xchg
jmp
and
pusha
pop
mov
outsb
push
popf
sub
mov
aam
testl
inc
cli
inc
ds
add
shlb
clc
cmc
pop
test
cmp
jmp
push
sub
sbb
adc
push
xchg
sbb
out
adc
cwtl
pop
and
dec
daa
xorl
xchg
cmp
push
adc
ret
fadd
loope
push
or
mov
daa
and
push
dec
outsl
cmp
in
shrl
or
outsb
sti
cmp
inc
push
xchg
sub
imul
push
sahf
aad
daa
add
fs
push
jecxz
cmp
mov
fimuls
inc
fucom
addr16
jb
and
pop
lods
xchg
and
sti
fsubp
inc
ja
popf
daa
push
cmpsb
or
in
mov
out
das
daa
cltd
sbb
add
addb
jbe
std
mov
jno
rorl
test
imul
xorl
clc
mov
iret
and
icebp
stos
imull
ret
je
jg
push
in
adc
in
lods
mov
or
dec
xchg
or
pop
mov
outsl
dec
ficoml
pop
xor
lret
inc
sbb
movsb
xchg
js
das
push
lods
ljmp
xor
dec
mov
les
inc
push
jbe
popa
repnz
push
xor
push
mov
xor
sub
pushf
pop
ljmp
mov
bound
fucomi
inc
lcall
sahf
test
and
mov
dec
adc
inc
xchg
inc
aad
ja
aad
fld
mov
push
xchg
push
push
enter
add
das
test
lahf
add
mov
out
mov
lods
insl
push
imul
jns
add
push
push
mov
loope
rorl
lret
ss
sub
push
and
test
cltd
xchg
xor
ret
lods
mov
sbb
and
and
aas
lods
mov
mov
aam
int3
stos
mov
add
es
mov
sti
daa
and
outsb
pop
repz
mov
add
repnz
cmpsb
popf
push
and
mov
stos
jle
sbb
jl
lret
cmpl
lret
popa
out
mov
pop
divb
cmp
lahf
mov
fs
cmp
loop
aaa
pop
ret
repnz
fdivp
adc
push
sbb
inc
push
es
jb
xor
add
inc
loope
and
xchg
into
pop
cs
inc
call
pushf
or
mov
dec
cwtl
cmp
cmp
xor
sub
sub
and
fistl
cmp
xchg
arpl
inc
pop
pop
add
pop
dec
sub
mov
sub
cmpsl
shr
cld
xchg
adc
je
fwait
int
mov
push
cmp
mov
cmp
ffree
pushf
push
repz
lods
aas
mov
pusha
push
insl
ds
cmpsb
and
and
gs
cmp
cld
sub
mov
pop
mov
xchg
shrl
das
fs
lods
push
ds
imul
out
test
ret
jae
out
fists
jecxz
enter
inc
adc
scas
and
push
fdivrs
push
mov
mov
scas
push
and
mov
adc
push
cltd
pop
dec
or
jp
and
in
cmc
jo
push
jae
aas
ret
adc
sub
mov
xchg
sahf
imul
inc
mov
ret
test
pop
nop
inc
pop
xor
and
mov
sbb
into
stos
sahf
mov
jecxz
aas
clc
jne
call
xor
mov
cmpsl
sub
mov
insl
mov
mov
das
mov
int
sbb
nop
adc
xor
xchg
lret
mov
icebp
push
int3
js
mov
pop
flds
bound
pop
aam
mov
jge
rclb
std
jae
inc
push
sub
fisttpl
or
push
imul
inc
jbe
repnz
xchg
adc
adc
test
rolb
test
test
lds
or
mov
cmp
or
repz
in
lods
mov
jg
cmp
aaa
lahf
andb
mov
jnp
push
dec
pop
mov
into
jb
roll
fisubs
push
icebp
fwait
mov
cmpsb
push
xor
stc
or
jmp
stos
dec
lea
inc
push
pop
push
fistpl
fwait
cmpsb
xor
in
movsb
das
ret
in
sub
inc
mov
wbinvd
push
and
mov
out
hlt
mov
fs
imul
inc
mov
dec
or
mov
pushf
in
mov
mov
jbe
or
aad
repz
mov
jb
outsb
dec
mov
test
fiaddl
call
movsl
cmpsb
mov
xchg
xchg
jno
pusha
loop
loope
cmp
push
xchg
or
dec
cmp
pop
ljmp
xor
js
mov
mov
pop
leave
dec
push
fcomps
test
pop
decl
ljmp
shrb
mov
jp
call
xchg
imul
cwtl
sbb
lds
adc
and
lret
or
mov
mov
les
enter
sahf
mov
nop
lea
fs
sbb
bound
rol
add
pop
ficompl
imul
ds
xchg
sub
push
jge
out
ficomps
add
add
or
shlb
shrl
mov
scas
xor
mov
fidivrs
faddp
sub
scas
les
dec
cli
out
jo
xchg
pop
pusha
jns
cmp
xchg
stos
and
push
sub
or
insl
das
push
and
or
sub
xchg
sub
sbb
leave
dec
xor
dec
out
js
imul
dec
jl
xchg
pop
repz
sub
pop
cmp
adc
mov
sub
lea
out
sbb
add
ret
enter
fisubl
aad
lods
pop
pusha
mov
or
mov
arpl
inc
xchg
dec
mov
out
repz
repnz
mov
pop
sti
cwtl
pop
nop
mov
push
js
sbb
xchg
mov
outsl
insl
bound
jnp
and
cmc
xor
jno
cmc
jmp
lea
cmpsb
mov
add
cwtl
cld
dec
push
cmpsb
clc
data16
mov
inc
add
xchg
sub
popf
bound
mov
in
sbb
leave
mov
pop
fadds
in
sub
in
fnstcw
mov
xchg
inc
daa
cltd
enter
fnstcw
and
sbbl
cltd
insl
xorl
cmpl
fistpll
push
js
pop
sub
inc
mov
xchg
mov
pop
orl
mov
int
jge
movsb
dec
out
jo
adc
fadds
jg
push
mov
inc
mulb
icebp
dec
pop
lcall
call
clc
gs
push
cmp
inc
pop
xchg
push
out
xchg
push
push
xorb
jne
sbb
xor
repz
cmp
pop
adc
jns
outsl
jb
test
iret
in
mov
add
push
xor
leave
orl
cmc
sbb
movsb
sbb
ds
std
int
leave
cmp
mov
mov
inc
insl
cmp
pop
push
cs
jmp
loope
mov
sbb
xchg
and
push
mov
mov
sub
mov
scas
inc
rorl
cmp
sbb
fisttps
div
cmp
stos
adc
push
mov
adc
cmp
popa
jns
adc
shlb
push
sub
dec
aaa
pushf
inc
mov
loope
fwait
mov
loope
add
in
cmpsb
mov
jo
lcall
call
pop
rorb
divb
push
mov
clc
shr
ljmp
inc
insb
int
arpl
mov
xchg
dec
push
mov
pop
cmp
sub
and
push
fidivrs
mov
icebp
stos
movsl
aam
in
sbb
push
ja
or
movsb
incl
pop
out
or
jge
in
into
inc
lret
fnsave
adc
xor
or
cltd
inc
xor
sub
enter
inc
jns
rcr
jb
and
sub
js
aam
push
add
xor
dec
cli
scas
out
fistpll
dec
inc
and
mov
and
mov
js
push
cmpsl
jle
sbb
mov
inc
out
lods
adc
mov
inc
jge
sub
and
xchg
push
loope
cli
int3
mov
add
adc
adc
scas
xor
js
jecxz
jnp
push
orl
sub
les
add
fs
pop
mov
cwtl
jecxz
adc
mov
fcompl
sub
pop
push
mov
sbbb
pop
scas
mov
push
push
dec
mov
cli
in
mov
dec
sbb
pop
sub
push
and
popa
aas
arpl
and
inc
jmp
in
gs
lods
and
push
push
stos
and
jne
mov
push
or
rcl
int3
pop
mov
cmpb
aam
mov
fmull
iret
inc
xchg
jp
stos
sar
or
cmp
cli
clc
sub
jmp
idivl
ficomps
jno
dec
fisubrl
loopne
xor
jmp
sub
inc
jns
in
mov
push
or
push
mov
imul
dec
icebp
push
push
movsb
sahf
rcrb
cmovl
imul
imul
cld
and
mov
push
bswap
mov
mov
insb
push
add
inc
and
adc
and
xchg
repz
and
jp
sub
dec
stos
loopnew
outsb
xchg
popa
xor
inc
or
sbb
push
cmpsb
sbb
add
xlat
cltd
out
sub
pop
movsl
mov
jno
push
pop
mov
ficoms
fwait
pushf
xor
sbb
mov
daa
in
inc
cld
mov
mov
xchg
adc
and
mov
jmp
adc
sbb
sub
icebp
or
sbb
sub
fnstsw
jl
imul
xor
mov
shlb
je
sti
loope
cmp
and
mov
ret
loopne
int3
pushf
sub
imul
add
into
dec
lock
in
pop
shll
mov
jnp
mov
mov
mov
iret
aas
adc
cmpsl
test
inc
add
mov
ja
inc
pop
cmp
loop
jg
mov
push
jnp
iret
cmp
and
adc
je
lret
jnp
stos
adc
push
out
or
scas
xor
cmpsl
scas
sub
ja
stos
xor
fwait
dec
cld
lret
cmpl
fs
icebp
gs
cmp
xor
dec
adc
scas
ljmp
ss
mov
lahf
add
cmovp
xchg
imul
cmp
sbb
sub
xor
insb
xlat
push
imul
in
and
adcl
mov
mov
nop
mov
and
nop
mov
sub
push
cmpsl
pop
out
rolb
and
imul
shlb
jns
push
push
clc
sti
cmp
mov
shll
push
push
adc
dec
int3
mov
lahf
ret
in
mul
mov
adc
or
jo
mov
bound
xor
xlat
popl
test
cmpl
out
jg
adc
xchg
sbbb
cltd
popf
aaa
ret
xchg
lds
int3
ds
cwtl
addl
sbbb
popf
aam
cmpsl
jb
xchg
movsl
sub
in
mov
jnp
int3
xchg
pop
inc
fsubrs
sub
arpl
adc
jle
sub
jmp
loop
jp
push
adc
push
push
int3
sub
subb
ret
cmp
ss
mov
leave
and
xor
push
push
push
aad
mov
aad
xchg
pop
cmp
xlat
lcall
call
add
mov
add
loop
dec
mov
lods
lods
and
jmp
cs
stos
clc
je
jns
sbb
dec
ljmp
fwait
pusha
enter
std
int
cmp
lock
xchg
and
lock
icebp
mov
pushf
cld
pop
out
shrl
jge
xor
ds
xor
xchg
jp
loop
cltd
hlt
les
lret
sub
pop
jge
outsb
fadds
loope
inc
pushf
retw
fnstsw
repnz
pop
ffree
jle
repnz
pop
loopne
in
andb
dec
dec
ljmp
enter
sub
jmp
imull
jp
shlb
stos
mov
out
xor
sub
xor
fstpt
pop
jmp
or
les
dec
cmpsl
mov
js
and
mov
arpl
lret
repz
sbbl
adc
mov
add
add
sub
xchg
or
dec
or
movsl
shlb
dec
dec
adc
pop
pop
hlt
in
xor
xor
jmp
mov
fmull
pushf
add
aas
imul
xor
lret
imul
mov
insb
mov
cmc
mov
and
sub
out
outsb
jge
pusha
jo
xor
stos
pop
imul
pop
xor
push
cmp
aam
fists
push
loop
dec
lahf
lahf
stc
lock
or
fidivrs
xor
mov
fcmovne
repnz
xlat
mov
jns
outsb
mov
sbb
jmp
das
jno
xchg
dec
test
adc
or
mov
push
sbb
sbb
inc
mul
xor
and
mov
and
cli
add
push
mov
clc
clc
fcoml
repz
arpl
mov
add
out
ror
sbb
or
hlt
dec
std
cmp
out
mov
pop
xchg
sti
add
cmp
pop
mov
mov
and
mov
xchg
push
cmp
stos
cmpsb
jge
sahf
enter
and
push
aaa
test
jl
stc
rcrb
pop
cmp
push
mov
or
test
out
inc
and
pop
sbbl
insb
sbb
jb
xor
hlt
or
out
in
in
leave
mov
jo
dec
inc
pop
cltd
jno
out
pusha
add
xchg
gs
lret
cmp
pop
mov
mov
and
dec
cmpsl
cwtl
es
cmp
mov
adc
movsb
hlt
or
and
clc
arpl
sub
adc
cwtl
out
push
pop
or
xchg
fsubr
aaa
lahf
movsb
and
xchg
jne
lods
jnp
call
xchg
cmp
adc
iret
jnp
and
rcll
inc
or
dec
imul
cmp
loope
aad
imul
push
inc
or
ljmp
mov
cmc
sti
outsl
popf
js
cmp
or
xorb
jb
js
add
mov
mov
dec
adc
mov
rorl
push
xor
sbb
ret
incl
movsb
lds
mov
dec
call
bound
inc
insb
pop
imul
js
xchg
rol
xlat
icebp
mov
aad
lahf
cs
pop
xor
lds
pop
dec
js
mov
insb
stos
imul
xchg
mov
in
pop
lret
mov
loopne
lock
cs
and
push
add
sbb
pop
je
shrb
gs
leave
test
mov
pushf
adc
sub
cmp
inc
and
fimuls
sbb
notb
pop
lcall
xor
xchg
add
lcall
dec
test
aam
aas
leave
scas
stos
push
or
les
scas
inc
std
dec
inc
add
ljmp
popa
mov
mov
lds
add
xor
shll
in
es
jecxz
or
nop
and
pop
shl
adc
cmp
mov
in
jbe
shll
mov
push
leave
imul
xor
inc
ja
cmp
cmp
std
mov
pop
in
fcompl
ss
lea
js
sub
icebp
jno
aas
adc
scas
pop
loopne
ficompl
iret
mov
insb
mov
in
sbb
scas
ficompl
mov
fiaddl
divl
jg
adc
mov
pop
mov
out
loop
aas
pop
push
inc
mov
and
outsb
xor
pop
ja
dec
jns
notb
popf
vmovddup
fists
lods
jno
adc
xchg
and
and
dec
cmp
inc
fmuls
fwait
subb
xchg
jle
dec
jge
cmp
lahf
jecxz
cmpl
inc
mov
test
adc
dec
xor
mov
push
sbb
push
sub
rcl
bound
add
xor
cmc
sub
xchg
cmc
test
into
inc
mov
clc
push
sbb
repz
je
scas
sahf
pop
imulb
movsl
mov
mov
sbb
sub
dec
popl
call
out
xor
dec
inc
les
add
leave
enter
les
or
lods
enter
mov
mov
movsb
je
arpl
adc
fdivl
sub
adc
push
ret
lret
gs
rcrb
and
push
sub
mov
fstpt
nop
int3
mov
loop
adc
mov
cmc
test
pop
insb
fs
call
fsub
outsb
orb
pushf
lret
scas
stos
or
int
adc
jecxz
enter
pushf
mov
orl
push
ficomps
pop
mov
dec
pop
fs
and
adc
pop
ds
fdivrl
adc
push
mov
or
call
pop
xchg
fwait
in
mov
fdivs
data16
push
pop
adc
push
inc
jg
rclb
xor
movsb
mov
out
jp
jns
cmp
and
xchg
test
pop
lret
push
popf
add
enter
fsub
adc
data16
or
push
jge
mov
sar
in
mov
and
sbb
pop
push
cmpsl
aad
ljmp
mov
sub
xchg
clc
and
sub
call
push
lahf
inc
repz
out
pop
pop
jae
xorb
test
std
jmp
pusha
cmp
inc
stc
or
loope,pt
cmpsl
daa
inc
xor
add
imul
mov
sub
push
pop
jns
adc
jae
cld
fildl
ret
mov
sbb
fsubrs
xchg
in
mov
cmpsl
out
les
loopne
mov
cmp
sbb
pushf
sub
xlat
xchg
mov
jnp
sbb
shrl
rolb
push
repz
jne
sub
jl
jae
lret
cmpsb
mov
shrb
jb
scas
jge
sub
sbb
sahf
xor
push
mov
dec
pushf
jbe
test
gs
mov
rclb
sar
nop
or
out
jge
xchg
inc
xchg
jno
lea
jb
mov
and
outsl
repz
loope
and
or
loop
outsl
fmull
daa
in
ret
inc
adc
pop
stc
pop
jnp
mov
cmpsb
mov
push
outsb
xlat
out
test
or
sub
cmpb
popa
jae
xor
sahf
out
push
push
sbb
hlt
jp
mov
sbb
pop
mov
sbb
sbb
jmp
xchg
mov
jge
popa
add
jb
andl
sub
ret
cmp
push
lahf
xchg
sti
lret
daa
std
mov
mov
dec
inc
ffree
sub
pop
loopne
dec
xor
repz
push
mov
sahf
push
or
mov
jle
and
cli
pusha
cmp
test
or
andl
mov
out
mov
std
bound
dec
cltd
jg
sbb
dec
mov
xchg
add
xchg
mov
jle
mov
dec
sub
imul
pop
xchg
test
push
fsubrl
cmp
scas
repz
push
cmp
push
pushf
or
jmp
inc
push
pop
int
and
insb
inc
in
jae
sub
addr16
in
sbb
je
lcall
pop
add
fdivs
cld
inc
jo
mov
push
bound
dec
sbb
mov
cmp
xchg
inc
in
psubb
clc
daa
pop
call
sti
mov
inc
push
and
push
fldz
push
mov
lods
jns
pop
hlt
jmp
std
mov
int
out
pop
roll
mov
aam
lods
xor
insl
clc
inc
lods
ss
inc
add
mov
fdivrs
mov
mov
mov
mov
mov
test
push
or
fmul
sahf
jle
or
xchg
mov
lea
inc
cmc
mov
movsb
leave
sarb
insl
jnp
lcall
mov
add
and
and
rorb
jmp
movntps
xchg
jbe
bound
pusha
out
es
repz
mov
add
lds
mov
push
imul
push
aad
cmpsl
cli
lods
jae
or
xchg
stc
ss
imul
xor
pushf
push
int3
sbb
pop
inc
pop
lds
xchg
adc
adc
or
mov
dec
scas
aaa
adc
scas
mov
push
mov
pop
xchg
and
sub
mov
or
and
sub
dec
fadd
xor
mov
pop
or
or
stos
cmp
inc
pop
mov
mov
dec
loop
pushl
xchg
jl
addr16
inc
cmpsb
push
clc
pop
mov
insl
mov
inc
insb
and
fldcw
loop
into
add
ret
rcl
xchg
lcall
mov
ljmp
lcall
cmc
shl
lahf
sub
sbb
pop
dec
cs
push
cltd
xchg
sub
cmp
stos
cmpsl
aas
mov
xor
xor
icebp
mov
aad
xchg
sbb
fstps
pop
adcl
cmp
pop
and
data16
inc
ss
xchg
cmpl
cmpsl
inc
and
flds
sub
mov
nop
adc
dec
dec
push
lcall
insl
push
stc
out
inc
dec
push
push
jns
pop
adc
jl
push
and
outsl
inc
repnz
mov
mov
and
mov
jmp
jmp
jl
push
in
xor
adc
in
leave
mov
scas
jo
or
orl
mov
shl
fldt
scas
je
sub
std
xor
shrb
jbe
ss
lea
fwait
scas
jb
hlt
inc
nop
fisttps
cmpb
clc
xchg
mov
push
mov
dec
shrl
lahf
fs
cltd
jge
pcmpgtd
jno
pusha
add
fld
push
xchg
dec
js
xchg
xor
out
pop
push
pusha
ja
hlt
movb
inc
add
js
inc
jmp
negb
add
loope
cs
sbb
mov
daa
gs
and
test
cmp
cmc
dec
mov
xchg
das
divb
fldl
mov
jns
mov
stos
mov
es
out
test
fwait
sub
dec
push
mov
loop
dec
push
addb
fiaddl
push
and
and
rorl
jne
cwtl
dec
inc
add
imul
push
mov
es
dec
pop
push
loopw
dec
cwtl
push
std
jp
cmp
mov
icebp
les
or
dec
xchg
jnp
std
fiaddl
add
push
test
adc
daa
stos
dec
xchg
adc
dec
jb
leave
inc
push
xor
xlat
add
dec
jb
add
lods
adc
faddl
sbb
sub
icebp
cwtl
push
cmpsl
dec
cwtl
and
sarl
dec
loopne
mov
stos
mul
adc
lock
and
adc
sbb
sbbb
ret
imul
dec
lock
out
pop
stos
mov
orb
imul
ds
daa
in
cmp
out
nop
mov
mov
or
repz
pop
inc
pop
pop
ss
aad
stc
ja
cmp
sbb
neg
push
xor
inc
aaa
pop
inc
popa
sbb
push
pop
sub
out
jecxz
cli
or
mov
gs
cli
pusha
rol
push
in
xchg
nop
mov
std
cmp
cmpsl
or
sbb
xor
or
or
leave
sbb
stc
sub
mov
loope
jb
ja
aam
int
iret
into
test
push
imul
lods
xchg
cmp
sub
pop
dec
mov
sbb
out
pusha
sahf
lahf
cld
add
pop
jecxz,pn
xchg
fs
gs
mov
lods
mov
jno
jp
mov
mov
frstor
inc
mov
push
inc
mov
cld
xor
fs
data16
fisttpll
notl
xchg
cmp
pop
stos
mov
mov
add
sbb
cs
data16
xor
mov
mov
fwait
xor
or
mov
jle
dec
push
mov
sbb
inc
sbb
sbb
or
ds
mov
add
aas
dec
fistps
adc
fildll
sub
inc
pop
sbb
enter
dec
out
dec
jmp
jne
mov
adc
loop
cmp
mov
hlt
mov
cs
jle
cmpsb
fcoml
sbb
mov
rorl
jmp
dec
int
and
push
xor
rorb
jl
mov
rorl
aad
shlb
ret
add
add
add
repnz
test
gs
popa
outsl
push
dec
or
sbb
dec
inc
jns
rcrb
stc
lds
and
std
mull
and
dec
loope
jne
xor
add
xchg
pop
aad
push
mov
cld
jbe
mov
fisubs
add
or
xchg
scas
stos
or
xor
repnz
cmp
pop
mov
cli
mov
mov
sub
cmp
mov
add
pop
push
imul
sbb
adc
fucomp
inc
mov
mov
push
stos
mov
add
nop
daa
inc
adc
pop
xor
cmp
push
sub
and
pop
xlat
xor
je
mov
clc
pop
xor
adc
xlat
xchg
mov
pop
lret
clc
push
mov
scas
ljmp
orb
add
stos
mov
jg
and
movsb
ror
jmp
out
jg
lcall
xchg
pop
or
ja
push
pop
add
mov
cltd
fcmovne
sbb
rcl
aas
test
leave
out
xor
xor
pop
add
push
imul
and
sbb
test
cltd
inc
mov
dec
mov
sti
fidivs
push
mov
sbb
jmp
push
je
mov
arpl
in
sub
mov
lods
push
adc
xchg
aad
push
cmp
test
cs
xchg
hlt
lea
dec
ja
std
mov
lock
lods
fsubrs
outsb
pop
or
cltd
fs
push
and
outsl
fs
sbb
jns
repnz
pop
xchg
xchg
mov
xor
lods
in
xchg
xor
fucomip
sub
testl
jne
xor
xor
sbb
mov
xor
hlt
nop
add
out
orl
cmp
or
jns
idiv
jb
xchg
push
jo
cmp
mov
xchg
cmp
push
dec
jae
sbb
sahf
pushf
test
pushl
or
fwait
out
mov
in
test
iret
cmc
ljmp
das
ja
inc
rolb
cwtl
iret
call
add
stos
and
cs
loope
ret
out
aas
lds
dec
jo
ret
and
ja
or
testb
movsb
iret
ja
push
xchg
pop
xchg
out
sbb
pop
fbstp
jbe
shll
xor
outsl
lea
jle
jb
shrl
jg
jb
lahf
cld
rorl
inc
inc
jae
loope
add
xchg
xor
xchg
call
les
mov
fidivl
cmpsb
repnz
sbb
fsub
pop
cmp
or
jae
or
push
cmpsb
dec
pop
imul
stos
out
pop
shlb
xor
out
mov
push
lcall
add
or
xchg
sbb
clc
fisubs
pop
push
je
mov
fisubrs
add
fcmovbe
inc
sarb
lods
adc
adc
inc
mov
and
jne
xorl
xchg
mov
pop
jae
stos
cmp
fadd
movsb
xor
xchg
dec
call
es
mov
pop
std
int3
mov
xor
arpl
mov
scas
clc
xor
imul
inc
insb
pop
popf
push
add
mov
imul
je
ds
add
pop
test
add
pop
jge
add
cmpb
addl
mov
pop
fwait
pop
jbe
pop
jge
xchg
nop
sub
ficoml
sti
bound
lods
mov
mov
cmc
xor
std
cmpsl
cmp
xchg
xchg
cmp
lret
out
xchg
shrb
sub
add
fsub
push
stos
sbb
call
jns
jnp
pop
dec
loope
cmp
jae
dec
fs
mov
cmc
mov
sbb
inc
icebp
in
aaa
out
pop
fcompl
into
arpl
pop
dec
cli
xor
mov
push
loop
sbb
cmpsl
ja
mov
lahf
stos
mov
and
icebp
mov
jg
test
cmpsb
fnstenv
in
insb
fwait
mov
daa
ret
jl
pop
inc
sar
mov
mov
jge
sbb
pop
adc
bound
in
ds
sub
ret
rcrl
inc
inc
scas
sub
sbb
cli
dec
and
dec
xorb
cmp
scas
mov
sbb
cmp
mov
cmpsb
or
mov
popl
pusha
adc
mov
stc
lcall
inc
push
fcmovb
sub
fstpt
inc
hlt
sbb
dec
fistpl
lods
push
insl
push
sub
pop
ljmp
cmpsl
jns
adc
fsubrs
push
pop
cmp
dec
xor
adc
adc
dec
mov
jg
ret
jle
cltd
or
mov
jne
fucomp
sub
pop
xchg
jmp
jno
xor
xchg
xchg
sbb
sbb
dec
mov
add
stos
xlat
outsb
sub
test
mov
inc
imul
inc
push
ror
mov
mov
xchg
icebp
pop
or
cltd
addr16
sbb
or
sbb
loopne
or
cmp
pop
aas
shlb
adc
mov
pusha
lock
add
pop
iret
cli
data16
scas
fdivrs
rorl
sub
cmc
scas
and
test
add
dec
mov
mov
lcall
jecxz
jmp
push
ret
mov
popa
and
hlt
fdivrl
call
mov
jae
add
mov
bound
adc
fistl
cmc
js
sbb
mov
and
jmp
adc
push
sub
adc
sub
push
mov
xor
int3
ds
add
jl
mov
popa
mov
adc
andb
popa
dec
jbe
cmpsb
inc
repnz
pop
xor
ret
std
or
mov
dec
push
cltd
jno
mov
lods
loope
adc
xchg
adc
adc
dec
jle
daa
mov
shlb
push
adc
in
outsb
mov
sub
or
fmulp
inc
push
mov
pop
aam
xorb
sbb
jle
sarb
cmp
mov
cmc
inc
popa
inc
mov
jb
fistpll
insb
mov
popf
repnz
inc
repz
mov
inc
or
movsb
test
daa
sub
inc
pop
in
push
out
sbb
flds
cltd
mov
cld
int
int3
sub
pop
push
mov
les
stc
xor
lods
lret
and
cmp
xchg
lods
jp
test
pop
push
mov
push
fs
sub
pop
into
cmpsl
mov
iret
inc
stos
fcompl
push
cld
pop
out
sub
push
insb
xchg
into
push
xlat
mov
inc
cmp
test
insl
mov
fldcw
sub
int
iret
dec
pop
sbb
cmpl
adc
stos
xor
dec
repz
and
cmp
cwtl
adc
mov
pop
cmp
mov
add
sub
pop
es
rcll
sbb
mov
pop
push
xchg
xchg
adc
jg
icebp
jl
into
out
add
adc
mov
movsl
fisubrl
mov
je
mov
jbe
xchg
add
fisttpl
shlb
in
sarb
nop
mov
cmp
lock
xor
gs
xor
imul
lret
mov
sbb
xchg
out
xor
arpl
sub
xchg
pop
jb
shr
cmc
cmc
xor
push
or
sub
fucomp
mov
inc
sbb
push
test
pop
add
imul
idivb
pusha
inc
adc
xchg
in
inc
sbb
push
into
mov
imul
mov
mov
lret
in
insl
sub
jnp
lcall
lock
sub
daa
gs
add
jnp
aas
xchg
hlt
sbbl
or
out
scas
sub
jl
pop
jns
sub
imul
pop
pop
pop
pop
or
out
jle
push
jne
and
sbb
xchg
data16
ja
test
fdivr
sahf
pop
sub
sbb
push
push
mov
cltd
scas
cli
mov
inc
call
shrb
jne
pop
mul
outsb
in
xchg
cmc
adc
adc
lret
nop
or
jnp
fldenv
mov
popf
shlb
mov
ret
lcall
jp
inc
xchg
pusha
sub
cmc
sub
loope
push
cmp
mov
add
aad
sti
push
sarl
cmp
mov
lock
sbb
out
rclb
add
ljmp
sbb
mov
mov
mov
mov
lahf
inc
or
fdivr
ja
js
repz
ret
xchg
cwtl
ret
enter
adc
mov
mov
jnp
rcll
stc
dec
stos
xchg
arpl
push
movsl
mov
out
mov
or
cltd
cmp
arpl
fwait
cld
fnstsw
aaa
es
pusha
jle
push
xchg
jo
mov
sbb
adc
data16
rol
xor
ret
or
or
aas
sub
mov
inc
add
inc
pop
jmp
inc
push
das
stos
jae
cmp
mov
dec
dec
push
ret
and
repnz
fcmovu
sub
mov
into
gs
jae
loope
dec
pop
jbe
pop
dec
xor
pop
mov
pop
dec
dec
sbb
nop
lea
push
jns
or
pop
cmp
push
lcall
or
movsl
shlb
out
mov
in
pop
insb
enter
lods
mov
jne
cwtl
push
add
std
je
mov
shlb
xchg
sub
add
je
sar
addr16
lods
add
cmp
mov
xchg
lret
or
adc
pop
lds
fnstenv
push
stos
or
inc
xchg
subl
aam
cmc
adc
sbb
push
out
jbe
mov
imul
mov
dec
out
mov
sbb
ds
add
inc
jbe
add
jns
popa
inc
test
xor
ret
xor
sbb
loope
popa
les
dec
test
lds
xor
rcrl
jns
cmc
pop
ret
bound
jp
mov
orb
jl
cmpsl
adc
popf
push
xchg
int
and
loope
sbb
and
out
fstpt
mov
pop
popa
movb
and
jo
cli
pop
push
test
fwait
out
cmp
mov
xchg
sub
push
ss
adc
in
mov
clc
add
xchg
and
sti
and
dec
in
xchg
xor
in
jns
jb
fistps
jp
or
pop
push
test
int
ret
cmp
dec
fisubrl
popf
xchg
icebp
out
lds
js
jae
cmp
pop
jne
adc
push
and
adc
lcall
inc
lret
xchg
jmp
jo
int3
push
pop
xchg
cs
xchg
fld
pop
movsb
dec
and
fcompl
popf
mov
push
xchg
inc
lahf
pop
cmp
test
inc
fsubrs
mull
mov
cli
xchg
inc
out
in
in
lds
pop
in
cmp
dec
xchg
ror
xlat
push
mov
icebp
xor
lret
jmp
test
scas
sarb
movsl
stos
loope
xchg
xor
inc
add
ficomps
leave
popf
pop
push
leave
ret
inc
repz
and
xor
add
insb
cmp
pop
into
jecxz
jl
and
inc
repnz
and
sbb
pop
and
push
fadd
xchg
into
xchg
lods
aam
xlat
push
dec
mov
lret
stos
xlat
je
pop
mov
jl
push
mov
stc
imul
jp
and
mov
mov
lret
xchg
movsl
ret
lret
and
jp
sub
test
faddp
loop
les
hlt
shrl
bound
mov
sbb
mov
arpl
lahf
mov
jl
xchg
scas
pushf
jb
sbb
int3
scas
flds
adc
xor
adc
lods
pop
xchg
xor
mov
push
lods
inc
pop
mov
and
xlat
mov
mov
and
sbb
jbe
and
cmp
pop
push
and
sub
loopne
arpl
mov
arpl
xchg
jns
add
mulb
fldcw
mov
add
dec
push
mov
push
mov
mov
dec
mov
dec
mov
lods
pop
add
jne
pop
jbe
mov
hlt
stc
idivl
dec
xor
fs
xor
xchg
mov
sbb
out
pop
lock
push
mov
outsb
in
stos
dec
or
sub
push
std
jo
pop
mov
jg,pt
pushf
mov
fwait
scas
lret
push
dec
gs
cld
mov
int
cli
mov
fdivl
jmp
test
mov
cmp
pop
mov
cmc
daa
sarl
cmp
mov
out
test
in
pop
call
xchg
or
mov
fwait
mov
cmp
adc
sbbl
add
in
aas
cli
loopne
add
mov
jg
add
jae
in
movsl
into
adc
fxch
mov
add
sub
push
repz
sub
repnz
rcll
jno
push
jmpw
pop
shrl
mov
js
mov
push
fisubrs
fldenv
sbb
dec
stc
adc
cmp
mov
mov
add
sbb
mov
mov
push
inc
push
fmuls
dec
xlat
bound
pop
cld
sar
sbb
push
jae
insb
mov
sbb
gs
xlat
js
mov
repz
ret
xorb
add
mov
call
lods
cmp
xchg
jle
mov
or
add
jb
xchg
cmp
cvtps2pd
mov
or
adc
cli
mov
fmull
scas
inc
arpl
jb
push
popa
mov
mov
loop
rorl
clc
pusha
cmp
pop
test
and
sub
sahf
sbb
test
mov
rorl
pop
dec
mov
fildl
scas
nop
pop
push
jmp
adc
or
push
std
lods
idivb
pop
push
ja
xchg
data16
fs
push
jp
lds
jp
aad
mov
sub
in
push
inc
sbb
ja
mov
add
jb
outsb
movsb
push
das
mov
push
and
stos
movsl
pop
hlt
jmp
pop
mov
adc
int3
add
enter
mov
aaa
enter
insb
bnd
in
jmp
cmp
add
dec
ret
inc
aaa
iret
mov
int
xlat
ret
push
icebp
sub
arpl
ret
cmpsb
inc
adc
xchg
dec
iret
daa
shll
int
adc
fs
mov
fiadds
dec
movsb
adc
fld
sub
imul
test
dec
mov
cmc
aam
bound
xor
xor
mov
fcompl
mov
in
inc
bound
inc
pop
out
outsb
sbb
and
mov
dec
and
mov
leave
mov
inc
sbb
call
sbb
pop
sti
xchg
dec
cwtl
pop
repz
inc
bound
cs
ret
sub
lret
mov
ljmp
cmpb
sub
adc
call
pop
xor
pop
mov
gs
insl
pop
stos
add
orl
or
int
scas
lods
popl
sti
lods
scas
imul
iret
stos
loop
es
sbb
cli
cmp
mov
dec
rclb
pop
jne
mov
testl
inc
mov
add
xor
dec
les
shll
add
cmp
lcall
xchg
xor
cmc
daa
shlb
daa
sbb
scas
cmpxchg
inc
mov
adc
icebp
test
mov
xor
mov
insl
adc
shll
or
sub
and
jp
cld
sar
push
out
mov
push
movsb
or
hlt
adc
dec
jns
aad
sub
ds
insb
decb
pop
cmp
mov
repnz
cmpsb
fldl2e
inc
pop
fstl
leave
mov
stc
stos
pop
xor
out
call
or
mov
add
cmpsl
and
std
mov
leave
ret
push
cld
jecxz
or
xor
mov
jae
xor
fwait
jecxz
add
jecxz
dec
cmp
push
ds
lret
and
je
mov
dec
mov
stos
out
pop
jge
nop
sbb
pop
out
xor
pop
cmpsl
stos
dec
xor
sbb
inc
xchg
mov
movsb
aam
call
test
rcrl
jge
jg
adc
xchg
roll
pop
pop
add
call
sbb
gs
lret
fstpl
aad
lea
stos
rorb
int3
pop
push
xchg
lahf
sti
jne
popf
ret
repz
push
and
inc
lcall
dec
push
sbb
out
dec
sbb
lret
mov
push
hlt
xchg
imul
lcall
fs
lret
jl
cmp
xor
mov
push
out
dec
outsl
fadds
push
movb
xchg
lret
fdiv
test
adc
dec
sar
mov
ds
sub
jecxz
dec
xchg
js
push
jns
js
fmuls
cmpsl
adc
pop
inc
scas
push
mov
fsub
lahf
insb
les
adc
and
mov
push
add
jbe
out
mov
test
into
cltd
inc
je
cmp
shll
stos
dec
hlt
jp
push
mov
pop
cld
pop
mov
ret
xchg
cwtl
pop
inc
popa
rcrl
add
stos
out
sub
rol
stos
out
test
inc
fwait
mov
lret
xchg
cmp
insb
dec
imul
aam
mov
fnstenv
jbe
scas
lock
mov
jmp
lahf
fisubs
or
add
and
lods
jnp
push
jno
push
sbb
cmp
adc
sahf
paddsb
push
cmc
sub
or
inc
into
push
insl
cmpb
cmpsb
insl
push
repnz
pop
pusha
lods
in
ds
jecxz
mov
rcll
pop
popa
jno,pt
xchg
push
inc
sar
icebp
cmpl
inc
jle
push
and
ret
stos
popa
jg
mov
jp
mov
addr16
mov
mov
mov
insb
dec
aas
mov
dec
adc
jo
test
sbb
push
or
dec
insb
jae
mov
cli
mov
test
mov
mov
popa
xchg
mov
sub
pop
or
daa
and
xchg
hlt
sti
out
out
jbe
mov
pop
pop
inc
insl
movsb
sbb
pop
push
mov
jnp
xchg
jle
push
xchg
sahf
cltd
pop
cld
ucomiss
lret
xorl
adc
push
insb
aas
xor
les
mov
int3
mov
and
loope
leave
or
es
dec
ss
jg
popf
or
lds
pushf
shll
idivl
mov
jne
addr16
stos
rorb
add
dec
jns
aaa
jp
mov
jno
xchg
repnz
lods
pop
mov
pusha
xchg
mov
movsb
dec
add
outsb
push
daa
sbb
pop
jle
data16
icebp
mov
imul
pop
xchg
push
lahf
mov
add
push
mov
test
mov
mov
sub
stc
xchg
xlat
xchg
cmpsb
jbe
jmp
stos
push
addl
dec
sbb
cmp
inc
std
mov
iret
mov
pop
in
mov
shlb
in
push
cmp
addr16
jae
sbb
nop
mov
jb
lods
pusha
jnp
cmp
cmp
pop
or
xlat
cmp
rcr
inc
mov
add
js
jge
test
and
mov
mov
mov
popf
pop
and
xchg
fsubl
aam
push
xchg
mov
lret
ret
adc
and
xchg
imul
jg
pop
sbb
dec
shlb
iret
sub
jle
xor
jne
mov
loop
add
shrl
or
xor
and
daa
mov
icebp
jl
push
and
cmp
mov
shrl
ljmp
push
decl
sbb
push
test
xor
adc
add
pop
mov
xor
dec
jb
aam
push
add
add
xchg
dec
inc
aaa
movsl
xchg
push
ret
push
xchg
int3
daa
xor
ljmp
inc
inc
mov
fnstsw
leave
mov
testl
jne
cmpl
xor
dec
cltd
mov
lods
jns
jnp
int
lods
cli
push
test
push
int
sbb
call
and
cmp
xor
ret
mov
roll
xchg
mov
jecxz
xor
dec
lds
movsl
lods
jne
and
out
sub
push
xlat
pop
sarl
sub
les
stos
add
jo
fstps
or
push
sbb
daa
pushl
lods
ret
or
push
js
pop
imul
js
ficoml
mov
imul
int3
or
push
ljmp
adcb
cmpsl
mov
ror
lcall
lods
cmc
sahf
hlt
cmp
pop
sbb
add
ss
mov
decl
ret
inc
popa
cwtl
jl
int
jnp
movsl
mov
sub
outsl
or
lret
xchg
mov
xor
rorb
push
push
cli
cmpsl
inc
sub
cmp
cwtl
push
pushf
stc
push
or
xor
insl
hlt
test
fistpll
fucomi
aam
popa
filds
jl
inc
les
and
data16
mov
lcall
idiv
test
arpl
sub
outsb
lock
out
and
lcall
adc
mov
sbb
fiadds
pop
pop
mov
sarb
push
jmp
push
dec
dec
shll
leave
out
lret
xor
mov
repz
mov
dec
mov
lods
lea
push
incl
pop
xchg
or
js
mov
insl
xorl
dec
lret
es
sub
test
and
add
sbb
dec
adc
ret
add
xlat
clc
pop
insl
ss
xor
pushf
icebp
aad
push
xchg
or
rclb
push
std
mov
loopne
sti
and
lret
pop
movb
mov
sahf
pop
mov
xor
fisttps
and
or
jp
bound
inc
adc
das
cmp
and
mov
mov
andl
inc
gs
rorb
xlat
xchg
xchg
or
mov
jge,pn
test
xlat
lss
dec
sti
jge
les
inc
clc
ret
adc
les
mov
push
or
cmp
inc
fcmovu
and
adc
lds
cmp
test
stos
xor
pop
subb
mov
inc
out
inc
sub
aad
mov
repz
iret
xchg
jae
xchg
into
les
scas
int
sub
fisubrs
jp
jae
add
jmp
out
sub
cmc
push
imul
cmp
or
mov
mov
fstpl
ss
cmc
es
fs
in
sub
add
icebp
aaa
cmp
insl
repz
cmpsb
jp
test
sbb
mov
adc
mov
test
shrl
movsb
xor
mov
enter
xor
arpl
mov
fldl
mov
fdivs
inc
cmpsl
int3
push
stos
push
jno
and
lods
push
mov
push
dec
fdivrs
stc
imul
hlt
stos
xchg
pushf
pop
mov
push
mov
ljmp
fnstsw
out
and
loop
xchg
mov
and
lahf
shrb
jb
sbb
xor
xchg
cmp
aas
in
out
add
aas
sub
sbb
ss
add
jae
cmp
push
iret
test
jbe
jp
xor
xlat
xchg
pusha
popa
out
rorl
and
mov
or
lea
jns
cmpb
enter
adc
jl
dec
and
push
jne
mov
sbb
lahf
sbb
cmpsl
cld
jno
dec
and
out
mov
cmp
add
or
out
movsl
test
and
mov
xlat
dec
pop
addr16
and
xchg
ja,pn
shrb
out
inc
xor
int3
sarl
and
gs
and
adc
add
movsb
mov
popf
ja
cmp
lahf
cmpsb
cmpsl
frstor
lea
scas
dec
dec
pop
mov
sub
pop
and
mov
lret
jge
push
es
mov
lret
call
push
int
bound
iret
fimuls
or
xchg
fmul
xchg
mov
push
push
lahf
int
mov
pop
jno
clc
push
ret
scas
mov
stos
lods
stos
mov
dec
adc
pop
jb
dec
jae
add
fdiv
in
inc
sub
pusha
pop
aad
dec
sbb
push
jge
lahf
jp
loope
inc
pushf
and
gs
addr16
lcall
scas
pop
mov
ror
sbb
mov
lods
test
rcrb
mov
cmovp
addr16
mov
xchg
not
mov
pop
insb
xchg
push
and
sbb
sub
imul
pop
jmp
xchg
mov
mov
sbb
sbb
aam
dec
push
inc
pop
out
inc
pop
gs
call
ficomps
cmc
mov
ss
sub
cmc
popa
loop
std
mov
fstp
mulb
fisttpll
pop
cltd
inc
test
aas
cmp
ret
jmp
pop
xchg
xchg
sbb
mov
jge
and
out
inc
stos
sbb
cmp
jge
fsubs
sbb
leave
outsb
loope
jno
push
jnp
lahf
push
insl
mov
sbb
inc
pop
loope
cmp
mov
xor
dec
ja
mov
dec
cltd
mov
xor
loop
add
cld
xchg
mov
inc
sbbb
add
xlat
stos
sub
sbb
sub
bound
int
aaa
dec
adc
movsb
stc
cmp
pop
mov
jbe
push
mov
fsub
jns
gs
mov
mov
int3
pop
push
xchg
sub
xor
out
xor
mov
mov
pop
ss
gs
cwtl
mov
push
mov
add
jno
mov
cmp
sbb
loopne
inc
push
pop
hlt
push
movsb
cmpsb
fistl
nop
push
leave
rolb
test
dec
aad
fidivrs
adc
dec
jns
outsl
fisubrs
add
lock
bound
jns
xlat
dec
aad
cwtl
xchg
sbb
cmp
out
sub
sbb
cmp
and
mov
sbb
ja
mov
loope
cmp
lret
sub
das
movsb
popf
aad
out
push
insl
lahf
fwait
or
aad
imul
or
mov
lahf
cltd
inc
push
lds
mov
jns
jnp
cmc
das
aam
rolb
je
addr16
je
jbe
aam
fs
sub
add
mov
insl
push
sub
nop
sti
mov
add
adc
xchg
mov
dec
lock
jbe
pop
insb
addr16
sbb
scas
mov
lods
xchg
movsl
jo
aas
es
into
add
cmpsb
test
ret
cli
xchg
jmp
dec
cmpsb
std
loope
scas
cmp
push
pop
jl
mov
xor
xor
shll
mov
mov
ror
xchg
call
lds
pop
ret
inc
add
js
popf
out
mov
dec
sub
das
sub
inc
sbb
xchg
jle
testl
push
lret
mov
xor
xchg
adc
pop
add
fdiv
mov
lods
test
fprem
sbb
test
rcll
lods
jl
mov
add
dec
and
pop
xor
push
or
les
stc
lret
fcmovnu
rclb
xchg
fnsave
adc
or
lahf
cld
ss
mov
adc
inc
pop
fcompl
das
jo
lods
xor
push
add
fisttps
loopne
inc
lods
and
cmpsb
and
pop
aas
into
push
fucompp
sub
test
lock
mov
jmp
shl
cmpsb
fimuls
jmp
mov
push
lcall
divb
in
push
pop
insl
add
xchg
cmp
mov
arpl
xchg
in
xchg
jg
mov
lret
scas
adc
loop
xchg
outsl
dec
push
out
lods
or
mov
and
mov
push
filds
jmp
leave
arpl
inc
lods
adc
nop
and
push
lcall
and
les
icebp
push
or
insb
jae
mov
jecxz
or
add
lcall
enter
andb
ja
and
mov
outsb
insl
shl
ljmp
fadds
sbb
repz
or
vmwrite
mov
stos
inc
and
cs
cmc
stos
ja
nop
cmpsl
nop
aam
mov
test
or
cwtl
das
sbb
lahf
lds
cmc
xchg
sub
scas
add
mov
push
mov
fldcw
gs
sub
xchg
cwtl
xor
and
outsl
jg
push
xor
jb,pt
fbstp
xchg
call
int3
imul
movsl
mov
and
cmc
mov
mov
mov
gs
hlt
lret
into
xor
pushl
mov
in
pop
and
cmpsb
pavgw
adc
mov
rol
push
and
clc
xor
addr16
imul
cld
mov
mov
inc
adcb
xor
cmpsl
scas
cmp
lahf
arpl
ljmp
mov
and
dec
jnp
push
pop
sub
jl
std
and
cmp
pop
sarl
push
iret
daa
repz
mov
sbb
nop
xchg
sbb
sbb
dec
mov
pop
xor
aad
test
test
cld
push
fs
or
ljmp
repz
add
jmp
sti
mov
loop
roll
jecxz
sarl
add
jo
cli
inc
jno
aam
roll
cld
xor
push
call
add
loopne
das
xchg
sub
mov
mov
push
pusha
push
add
pop
cmp
add
aas
jo
add
cmp
clc
and
add
in
mov
popf
ja
xor
cltd
flds
pop
sbb
shl
mov
std
jmp
mov
add
mov
adc
adc
add
scas
in
jle
lea
fwait
popf
xchg
xor
push
sbb
push
sti
xchg
sti
aad
pop
push
outsb
mov
aam
sbb
imul
subb
mov
repnz
decb
xor
and
dec
addr16
add
inc
lock
pop
pop
adc
int
jb
add
push
sbb
xchg
pop
repz
call
adc
out
sub
mov
lds
mov
push
fimuls
jmp
adc
dec
loopne
sub
mov
in
pop
insb
mov
adc
add
loopne
test
jb
xor
jnp
fs
negl
mov
jmp
dec
and
lock
xor
in
js
adc
test
lods
jne
add
lea
mov
cld
jl
adc
adc
popa
ficoms
lds
jmp
test
ret
daa
dec
mov
negl
xlat
push
movsb
icebp
pop
pop
std
testl
jns
call
test
clc
out
cmp
icebp
xor
in
cmpsb
add
cmpsl
in
jl
dec
add
popf
jae
out
addr16
add
cld
xchg
popf
xchg
sub
inc
sarb
pop
xorb
mov
daa
inc
pop
rol
in
sbb
jnp
jb
push
pop
adc
cld
inc
add
cltd
mov
push
jp
movsb
scas
pop
push
sahf
les
mov
sub
pop
and
out
xchg
out
lahf
cmpb
or
cli
pand
rcrl
clc
enter
in
push
cmpsl
add
mov
imul
shlb
cmp
sub
faddl
sub
lock
loopne
xor
pop
fcom
mov
punpckhbw
testl
pop
mov
mov
jmp
sbb
ljmp
sti
pop
inc
xchg
into
sbb
bound
or
dec
test
movsb
or
sti
repnz
imul
repnz
shll
into
lods
xchg
and
xchg
mov
jbe
ret
cmp
sbb
xchg
aam
shrl
popa
inc
sahf
and
out
cmp
cmp
pop
jne
mov
mov
cmp
inc
cmp
cld
shll
jno
stos
add
fwait
pushf
sbbb
jge
sub
mov
jne
pop
inc
lock
xchg
ss
lock
cmp
enter
js
mov
push
mov
pop
add
repnz
jnp
in
dec
cmpsl
cmpsb
push
pop
sbb
push
iret
sub
or
test
jge,pn
testb
mov
or
jge
jb
or
int
test
test
jnp
loop
add
jno
xor
sbb
and
out
xchg
push
jo
jne
and
pop
fsubs
mov
xchg
call
add
jmp
inc
xor
icebp
rcrl
xor
sbb
xorl
mov
mov
and
into
inc
test
lods
rcrl
sbb
test
mov
cmpsb
dec
xchg
dec
mov
loop
lea
shl
or
push
sub
arpl
fmulp
sub
iret
inc
dec
cmp
sub
push
xorb
inc
out
mov
test
pop
cld
lret
mov
add
scas
add
mov
adc
mov
daa
cmpb
and
cs
xor
test
nop
jns
in
out
scas
in
mov
pushl
add
mov
mov
cmpsb
test
leave
cld
pop
sti
or
mov
es
pop
sub
jnp
fldt
and
add
sahf
xchg
push
insl
nop
int3
fstps
or
adc
xchg
dec
inc
lock
inc
stos
and
lret
cmpsb
and
inc
shrb
imul
and
pop
loopne
fisttpll
pop
inc
push
mov
and
cli
cwtl
xchg
dec
xlat
repz
fnstsw
std
dec
inc
jmp
and
inc
inc
jecxz
mov
aas
aaa
jl
mov
sub
addr16
mov
add
inc
testl
sar
xor
dec
loopne
sub
lds
dec
add
frstor
jo
xlat
xor
and
push
inc
pop
cld
not
push
imul
mov
adc
dec
aas
sbb
aas
push
mov
repnz
adc
out
popa
mov
jecxz
lret
pushf
dec
dec
sub
adcb
dec
cmp
cmpl
pusha
outsl
fisttps
imul
xchg
sbb
pushl
dec
pop
sbb
cltd
imul
xchg
stc
imul
les
pop
adc
xor
cmpsl
int
push
and
xor
xchg
scas
clc
jl
or
ja
and
pop
test
jl
xchg
mov
das
mov
pop
push
pop
pop
jnp
data16
push
outsb
or
icebp
out
imul
dec
mov
orb
push
push
and
mov
jge
push
insb
movsl
adc
cld
iret
and
xor
cmp
iret
repnz
adc
mov
add
pop
aaa
jno
cmp
std
scas
repnz
fdivs
cld
out
mov
mov
xor
hlt
mov
pop
jg
cs
lods
subw
mov
shll
xlat
mov
xor
adc
mov
push
and
push
xchg
sub
cmp
cmp
inc
popf
loop
aaa
std
loopne
mov
push
rol
stos
push
outsb
xor
ljmp
imul
lahf
int
lds
sub
add
call
std
cmpsb
dec
xchg
loope
imul
mov
push
mov
xchg
loopne
jl
inc
outsb
adc
sbb
ss
inc
roll
shlb
or
cmc
fbstp
jg
lahf
sub
push
sti
dec
mov
test
mov
jmp
stc
pop
jo
push
xor
dec
jmp
push
stos
imul
flds
push
fwait
dec
inc
fstpl
enter
inc
xchg
stc
fucomip
aas
ret
adc
mov
mov
cltd
ds
rol
bnd
or
adc
push
adc
les
movsb
push
pop
pop
cld
test
repz
lock
test
adc
xchg
mov
add
aas
lcall
inc
xchg
xchg
dec
cmpsb
movsl
rorb
cmc
sbb
jns
cmp
in
outsb
lcall
loop
pop
ja
rorl
loop
shrl
cmp
and
mov
mov
jmp
jae
mov
inc
in
mov
stos
ljmp
and
test
ljmp
adc
sbb
lret
cmp
and
gs
repz
inc
fcoms
jp
lds
mov
cmp
addr16
sub
les
testl
mov
jb
add
repz
movsb
dec
test
dec
sub
dec
stc
andb
cmc
scas
lahf
jg
rcr
and
dec
xchg
lahf
ficoms
dec
lods
lods
push
cmp
cltd
lods
mov
outsl
fdiv
in
mov
insl
sbb
xor
pop
ret
into
jae
movsl
rorl
jnp
inc
pop
shr
add
sub
push
aad
sub
push
sub
inc
cmp
mov
xchg
and
pop
das
adc
std
inc
lcall
shrb
sub
sbbb
add
adc
out
mov
xor
lret
mov
jle
dec
insl
orb
or
and
inc
jne
mov
lods
xor
inc
lret
rcrl
mov
ljmp
stos
or
bound
cmp
dec
sti
adcl
ret
data16
jge
xorl
iretw
xchg
inc
movsl
or
jne
iret
lret
sub
ret
pop
sarl
enter
fistps
in
pop
jmp
sub
stos
in
lea
push
adc
push
pop
push
cwtl
mov
jp
addr16
sub
jae
and
test
push
sub
add
nop
add
adc
scas
xor
or
dec
lret
push
xor
test
inc
push
loop
cltd
movsb
imul
daa
inc
insl
cltd
xlat
mov
mov
jne
or
cmp
fs
outsl
jecxz
push
fcoms
mov
jbe
repnz
dec
popa
outsb
adc
int3
mov
rorb
repz
in
push
cmp
mov
imul
call
scas
in
fldt
fucomip
fwait
ret
es
fsts
xchg
leave
push
inc
enter
mov
jl
in
adc
cmp
dec
dec
add
adc
xor
cmp
jge
ds
push
cld
xchg
mov
add
dec
stos
cmp
cmc
mov
jnp
mov
xor
pop
addb
rcr
jge
dec
add
clc
jmp
cmpsl
sub
cmp
mov
push
and
mov
adc
shll
push
aaa
mov
pop
xchg
mov
xchg
push
mov
mov
mov
pushf
dec
repnz
pusha
scas
clc
fdivrl
dec
jle
inc
rclb
incb
jae
xor
and
test
fs
pop
sbb
fisubl
test
in
cmpps
sub
inc
jle
arpl
in
fucomp
xchg
in
ficoml
cmpsb
icebp
jnp
daa
ds
bound
pop
sbb
sub
notl
pop
pop
xchg
out
mov
jnp
gs
xchg
fwait
jg
movsb
scas
or
test
rcrl
and
std
mov
mov
add
sbb
xchg
sub
dec
out
jns
inc
pop
bound
and
mov
stc
xchg
adc
ret
add
iret
insl
inc
nop
mov
test
and
push
mov
jge
in
enter
or
ja
jae
insl
imul
call
push
inc
mov
fsubl
cmp
jmp
imul
jbe
xchg
in
sub
mov
push
push
and
ja
in
add
sub
inc
bound
jnp
or
inc
ret
dec
std
or
test
mov
cmp
hlt
push
pop
and
xchg
in
push
pop
fisubrl
ja
mov
sub
mov
sub
dec
xor
pop
and
or
jl
lcall
xor
sub
movsl
imul
inc
scas
jns
fs
lahf
in
jbe
pop
test
je
ficomps
mov
mov
push
xor
pop
push
inc
and
js
xchg
gs
push
and
enter
fnstsw
repnz
sbb
shlb
mov
in
jg
imul
sarl
subb
shlb
std
in
fiaddl
in
cmpsb
xor
add
push
and
roll
push
jae
xor
mov
xchg
xor
push
jne
ret
imul
or
mov
lret
cmpb
or
clc
and
xor
jbe
iret
adc
aas
pusha
cmp
mov
jmp
xchg
rolb
jbe
daa
dec
scas
sub
xchg
cmp
xor
jne
sbb
sub
add
add
xor
ljmp
lods
xlat
or
es
pop
out
push
jp
add
xchg
mulb
adc
mov
and
fcoms
into
mov
mov
insl
pop
adcl
and
inc
jns
sbb
outsb
inc
mov
lods
dec
mov
mov
jl,pt
add
push
scas
xchg
pop
pop
leave
leave
push
jae
jnp
mov
test
adc
add
xchg
pop
jbe
lret
frstor
hlt
add
or
lahf
push
fiadds
je
sbb
bound
test
fmull
dec
cmc
divl
pop
fstpl
jle
xchg
inc
ficoml
es
fisubl
sbbb
push
xchg
inc
push
jl
xor
stos
rclb
jne
mov
mov
sub
ljmp
popa
pushf
repz
out
aad
mov
stc
and
out
xor
inc
jns
cs
in
inc
dec
xor
int3
and
mov
mov
mov
test
adc
sahf
in
push
lcall
dec
aas
sub
cmp
push
mov
jb
xor
or
inc
mov
push
dec
mov
lret
inc
ljmp
sbb
pop
lds
fldcw
mov
mov
cmp
xchg
sub
icebp
aad
sub
mov
xchg
enter
fildl
pushf
mov
pop
mov
xchg
mov
fldenv
inc
dec
jecxz
xchg
lods
dec
fisubl
mov
into
cwtl
pop
pop
jbe
in
test
add
lods
push
popf
outsb
mov
push
sub
mov
adc
mov
pop
cs
test
sub
out
shl
clc
xor
mov
loope
jne
rorl
iret
int
aad
out
lahf
jle
or
fwait
xor
sbb
lods
mov
mov
jle
sarb
mov
sub
mov
mov
mov
lods
dec
inc
mov
pop
stos
stos
fsubp
jle
and
inc
add
push
adc
jnp
mov
or
enter
std
pop
mov
js
std
xchg
mov
push
sbb
mov
pop
subb
fnsave
nop
addr16
bound
shrl
mov
push
shrl
pop
add
inc
and
mov
test
jmp
cmp
lods
pop
test
pop
outsl
jge
popa
js
lods
lret
scas
cmp
daa
testb
lds
iret
roll
fistl
rcrb
imul
jns
push
daa
xor
nop
adc
jl
pushf
mov
or
xor
sub
test
dec
dec
es
sub
inc
testl
dec
add
jb
scas
lea
sub
mov
aam
js
outsb
out
cmp
lea
cmp
lret
mov
out
jno
adc
mov
cs
mov
add
pushf
out
sbb
or
inc
test
scas
fadd
in
adcb
and
repz
push
stos
pushf
push
xor
xchg
xor
pop
push
int
cli
push
adc
mov
lret
jg
rorb
lods
jge
je
jmp
icebp
push
inc
cmc
xchg
loopne
aaa
push
pop
xor
push
mov
sbb
xor
lret
or
popf
push
push
and
aas
jle
lret
jae
nop
and
xchg
add
lods
notl
mov
repnz
int3
mov
xchg
inc
insl
dec
jg
repnz
push
sub
mov
adc
popa
outsl
imul
xchg
cmp
jle
push
andb
mov
out
jae
push
out
popf
outsb
imul
adc
and
loopne
inc
mov
jmp
mov
js
dec
sub
and
scas
add
movsb
push
adc
push
mov
inc
test
faddl
inc
xor
sti
dec
jecxz
xchg
sub
mov
push
pop
les
nop
ror
sti
inc
out
mov
adc
sub
mov
push
mov
test
and
add
pushf
adc
sub
in
fmul
cmpsb
mov
sub
mov
adc
mov
push
fsubl
call
inc
and
adc
mov
roll
xor
pop
push
ret
add
ror
adc
push
cmp
xor
aas
and
push
pusha
mov
ds
adc
insl
push
mov
xor
scas
mov
mov
cmp
cmp
cmp
jns
mov
push
pop
fildl
jne
pop
and
dec
mov
dec
dec
imul
mov
xchg
outsb
sub
lcall
push
lea
cmpsb
daa
mov
shll
test
cli
repnz
fadds
pop
inc
cmpsl
das
mov
jle
xor
cmp
add
jo
outsb
ja
ljmp
repnz
or
fildl
jb
loopne
hlt
aaa
and
add
jg
insl
and
imul
push
mov
pop
xchg
push
pop
jb
stos
cmp
lret
cmp
in
repnz
outsl
jne
and
cmp
pop
or
jbe
sbb
xchg
jo
adc
iret
popa
pop
mov
movsb
jb
mov
sbb
adc
subb
mov
dec
int3
test
mov
xchg
shlb
jge
xchg
inc
inc
sbb
add
sbb
cmp
jecxz
in
mov
int3
clc
into
clc
add
xor
push
mov
lods
pop
or
xchg
mov
jp
fistps
jne
test
imull
ljmp
mov
cmpsb
pop
aam
loop
addb
inc
sbbb
das
inc
in
mov
mov
insl
enter
fdiv
incl
xlat
adc
lahf
sbb
mov
imul
aaa
in
lock
inc
jbe
jne
fldenv
rcl
loopne
dec
loope
xor
arpl
fs
sbb
dec
movsl
jge
hlt
add
pop
repz
xorb
cmp
lock
add
stc
gs
mov
xchg
in
mulb
inc
aas
icebp
lods
cli
das
ss
push
es
sbb
out
inc
je
sub
sub
pop
ficompl
in
cwtl
push
sbb
dec
or
loop
inc
and
xchg
jp
xchg
out
mov
jo
mov
shlb
adc
popa
aas
cmpsb
fdivrs
fidivs
call
add
sub
mov
fistpl
imul
sbb
rclw
cmp
push
int3
enter
xorl
lret
jns
in
in
fldcw
je
loop
push
ror
stc
pop
cmp
les
inc
decl
fists
sub
sub
mov
mov
pushf
and
jmp
jge
mov
jb
jg
push
jge
inc
cmp
jg
iret
cltd
mov
call
xor
lret
mov
shll
roll
jns
mov
push
clc
rcr
push
push
jmp
and
stc
sti
lcall
and
nop
cmp
inc
call
pop
lahf
lret
jns
dec
mov
and
in
jo
movsb
cld
scas
enter
popl
testb
movsl
popa
ja
pop
cltd
aas
mov
xchg
aam
add
lods
cmp
push
fstpl
mov
fwait
xor
mov
mov
and
jg
lret
xor
mov
jecxz
lret
add
lret
test
mov
sub
and
mov
fbstp
mov
aam
ror
mov
mov
subl
mov
loope
fstpl
enter
push
jg
notb
inc
js
nop
cmp
or
push
push
dec
fcoms
mov
std
jns
pop
fidivrs
cmp
bound
js
dec
lahf
inc
mov
adc
fiaddl
js
fsubrs
lea
scas
jbe
sbbl
mov
jbe
insl
inc
test
fildll
movsb
push
sbb
sbbb
jmp
pop
ja
pop
lahf
dec
push
insl
ret
jge
dec
ljmp
xor
pop
faddl
imul
std
test
mov
mov
xlat
dec
movsb
std
inc
iret
in
enter
inc
ds
jne,pt
dec
fs
sarl
clc
adcb
gs
repnz
nop
pop
ljmp
xor
mov
mov
and
inc
mov
pop
push
repz
lock
sti
sub
fcoml
cmp
lcall
icebp
mov
cs
jbe
cmp
imul
es
call
mov
mov
aas
inc
pop
lret
lcall
mov
cmpsl
xchg
out
xchg
lods
mov
lock
cmp
stos
sub
lret
movsl
leave
mov
lcall
mov
sub
cmp
xorb
sub
mov
lea
imul
mov
and
jnp
mov
rcl
jecxz
ljmp
push
adc
mov
sub
mov
jmp
inc
pusha
pop
rcr
jo
mov
and
mov
add
dec
movsb
orl
xor
sub
shlb
dec
sub
push
add
aaa
mov
jge
ds
fwait
mov
scas
fisubrl
fsubr
push
imul
sbb
pop
or
fcoms
jp
shl
loopne
sub
aas
lea
loopne
push
int
mov
add
xchg
in
pop
out
mov
pop
ds
push
pop
jmp
rcl
xor
or
sahf
mov
mov
addr16
xchg
mov
sub
mov
gs
addr16
cmp
bound
mov
mov
inc
xor
cmc
mov
mov
pop
mov
cltd
push
fwait
dec
or
fs
addr16
xor
test
mov
repz
mov
mov
call
out
aad
jae
dec
inc
ja
push
xchg
es
lock
pop
push
mov
or
dec
cmp
aas
cwtl
add
sti
add
sub
lret
push
inc
sub
inc
xchg
stos
clc
sarb
mov
cmp
out
data16
movsl
lcall
js
xor
movsl
sti
and
subl
add
repz
outsl
xor
mov
pusha
pop
arpl
sub
filds
mov
mov
adc
and
sub
cltd
repnz
imul
bound
mov
dec
pop
mov
lret
push
mov
clc
mov
dec
js
dec
ret
jae
repnz
push
mov
inc
scas
ja
or
xor
fidivrs
dec
popa
loope
mov
es
loop
cmp
push
sub
lahf
push
cmp
pop
adc
faddp
mov
lea
movsl
fwait
popf
lret
dec
insb
cmpsb
inc
mov
jmp
or
mov
out
addr16
aad
push
jle
mov
gs
inc
jo
ret
and
out
mov
aas
mov
mov
aam
or
push
sub
test
pop
dec
js
addr16
shll
push
pop
lods
adc
lds
cmp
mov
dec
insl
cmp
push
push
mov
xor
cs
sbb
xor
lahf
stc
popa
mov
jecxz
int
xor
xor
sub
mov
loopne
call
stos
sbb
and
dec
mov
xor
movsw
push
lahf
xor
sbb
jae
and
xor
pushf
pop
xor
mov
aaa
enter
aas
jle
cwtl
loop
imul
mov
sti
movsl
mov
sub
lea
in
add
ja
xchg
lahf
inc
icebp
add
fstl
or
fdivrl
pop
push
add
fildll
fcompl
pop
fnstsw
test
mov
mov
fnstenv
mov
adc
test
push
inc
lods
insb
sbb
inc
add
in
ret
cmp
and
sub
adc
loope
add
int3
sbb
negb
fsubs
add
lods
mov
adc
stc
cmc
rolb
test
xor
jb
cwtl
and
pop
jg
not
stc
or
cmpsl
mov
jg
inc
sbb
addb
push
dec
cmpsb
xchg
test
in
sub
xchg
nop
imul
js
jle
repnz
mov
inc
jb
and
loope
enter
shrb
lret
push
mov
sub
mov
add
cmp
enter
scas
xor
push
insl
sub
fistps
adc
cmp
in
push
xlat
cmc
int3
lahf
clc
mov
in
and
dec
adc
sti
inc
sbb
jmp
and
addr16
mov
loop
mov
push
jnp
mov
mov
dec
jae
adc
xchg
adc
fst
mov
fmull
sub
lret
gs
fsubrp
sub
add
imul
hlt
imul
xchg
mov
push
cmp
or
lods
aas
fsub
das
ja
xchg
mov
fcmovnb
pop
out
sbb
lods
mov
divb
negl
stos
xchg
cli
or
scas
inc
imul
and
push
xchg
mov
xchg
idivl
into
push
mov
idiv
mov
jne
pop
stc
mov
sub
xor
js
mov
add
sarb
orl
int
mull
mov
loope
xchg
pop
sbb
cli
in
loop
cmp
mov
pop
ljmp
stc
and
ror
std
push
lea
ljmp
push
dec
add
in
inc
mov
add
xchg
sti
add
fwait
ror
add
imul
inc
jnp
push
test
out
imul
lea
and
and
add
bound
adc
addr16
aad
stc
jb
xchg
sub
gs
mov
pusha
inc
lcall
push
leave
pop
or
push
xor
pop
inc
push
rcrb
data16
and
aas
sbb
iret
or
ljmp
xchg
adc
test
xchg
inc
jecxz
mov
into
mov
sbb
dec
call
push
push
jp
jecxz
jl
jnp
mov
sbb
int3
cmp
dec
dec
aam
lock
mov
cmp
fistps
je
lahf
test
int3
jns
dec
inc
gs
mov
addl
jno
stos
lret
mov
add
rcl
jge
mov
shll
jae
scas
jge
dec
in
and
or
xchg
jecxz
stc
sbb
inc
repnz
jno
movb
push
push
test
sub
inc
sub
or
cld
movsl
stc
xchg
shrl
xchg
rol
push
adc
inc
jmp
and
cmpb
shll
aas
sahf
sarl
and
call
inc
cmp
jl
scas
jo
insl
outsb
enter
dec
pop
mov
out
push
hlt
jg
jl
mov
rcll
jg
movsl
mov
jmp
fists
in
sbb
js
sbb
sub
pusha
jmp
inc
fs
int
sti
fildll
inc
add
mov
push
push
mov
loopne
mov
jg
push
mov
dec
jl
push
sub
fisttpll
or
pop
jg
mov
fld
xchg
xor
sbb
xchg
and
andl
sbb
jns
aam
lock
xchg
outsb
mov
sti
mov
outsl
adc
or
imul
dec
call
outsb
adc
xchg
xchg
lods
push
mov
test
add
es
xchg
fcoms
pop
add
cltd
pusha
fldcw
and
addb
jno
adc
movsl
mov
push
addr16
mov
inc
xlat
pusha
icebp
lods
enter
stos
lret
xlat
inc
daa
jmp
mov
fnstcw
sub
es
mov
stos
rorb
test
or
jbe
fcoml
push
icebp
cs
ret
xchg
je
lret
xchg
into
cmp
daa
subl
sub
xor
repnz
outsl
test
popf
mov
idivl
sti
xorb
mov
sbb
pop
sub
popa
mov
pop
popa
jno
rcll
out
movsl
leave
inc
cmp
imul
jnp
mov
jae
mov
mov
repz
in
xchg
popa
lock
mov
mov
scas
cmp
sahf
mov
sbb
sub
shlb
daa
lcall
enter
xlat
mov
je
pop
cs
ss
or
cld
mov
call
jmp
shrl
sbb
sub
das
pop
mov
xchg
add
sar
imul
mov
int3
and
arpl
push
popf
in
lods
adc
repz
fmull
mov
sbb
xchg
out
sub
pop
aas
push
aam
push
ds
or
ret
push
in
pop
sub
or
pop
sub
int3
mov
mov
lcall
out
je
ficoms
loope
negl
lret
sub
push
je
sbb
aas
push
or
bound
jne,pt
pusha
sbbb
jno
xchg
stos
int3
stos
or
inc
push
sub
xlat
pusha
ja
inc
int3
adc
cmp
xchg
pop
jmp
jl
jae
mov
ffree
call
into
icebp
dec
push
stos
mov
add
loope
ds
mov
and
mov
lods
add
add
cli
push
into
imul
pusha
aam
mov
inc
fbld
test
jmp
ja
sub
arpl
cmp
dec
enter
mov
cs
sub
sub
lods
call
fcoml
sbb
aas
decl
sub
lods
int
sub
pop
cmc
int3
or
popf
mov
xchg
jb
test
pop
in
push
nop
mov
sbb
adc
in
std
ret
iret
iret
mov
adc
sbb
mov
sub
arpl
ret
pop
adc
in
loopne
insl
cmp
stos
xor
pusha
rcll
fnstenv
dec
push
mov
pushw
out
daa
or
arpl
iret
into
add
jle
int3
je
xor
lcall
push
shll
insl
cmp
mov
test
rcrb
popa
adc
dec
push
push
mov
cmp
shlb
pop
stos
mov
or
dec
int
mov
cwtl
daa
notl
stos
or
lret
sti
pop
sub
cwtl
sub
in
leave
bound
dec
pop
pop
pop
mov
out
mov
sbb
inc
dec
xchg
adc
js
xchg
outsl
mov
xor
scas
int
fcoml
push
ret
dec
in
sbb
das
adc
fwait
add
jmp
ficoms
lret
inc
cmp
lcall
loope
incl
cmp
call
pop
inc
add
mov
es
stc
pop
push
shrb
lret
mov
cmp
sub
add
xor
negl
sarb
mov
stc
pop
rorb
mov
dec
orb
andl
xchg
and
cmc
jl
sbb
push
mov
outsb
icebp
icebp
or
pop
mov
fdivrs
leave
jb
sub
fbstp
fsubl
jp
wrmsr
mov
and
test
pop
push
pop
aad
cmp
in
mov
add
push
xchg
mov
lcall
push
add
xchg
pop
fisttpll
xchg
in
xchg
xchg
cs
cmc
xchg
jecxz
js
rcll
gs
jnp
add
out
mov
inc
xchg
testb
pusha
subb
dec
arpl
je
inc
push
dec
push
dec
iret
dec
push
pop
roll
fs
bound
push
adcb
sbb
and
or
idiv
into
cltd
or
loop
mov
lahf
repz
dec
lds
int3
xor
nop
ret
adc
cltd
jnp
mov
in
lahf
sub
imul
cmp
repnz
cli
mov
imul
and
mov
fldt
lahf
shufps
insb
jbe
popa
sub
arpl
mov
outsb
jp
sbb
sub
clc
mov
aas
inc
movsb
loopne
cmpsb
mov
cmp
push
ds
pop
jo
push
mov
fldenv
xchg
xchg
inc
lret
and
lahf
jg
jmp
aas
cwtl
push
xchg
push
inc
push
ss
sarl
push
inc
cmp
mov
arpl
inc
mov
lock
adc
bnd
mov
orb
mull
leave
ja
in
add
mov
cmp
ljmp
sbbl
sub
fstl
js
sbb
jp
adc
xchg
imul
jmp
in
xchg
sar
add
push
cmp
mov
lcall
adc
cmpsl
add
rorb
ret
out
cmp
test
ficomps
jp
add
xor
aad
fsubrl
push
adc
aad
data16
xchg
jb
xchg
outsl
and
jp
out
fldl
mov
test
add
push
jecxz
shr
push
xor
pop
loop
jge
insl
inc
lods
lds
jp
jecxz
bound
ficoms
jns
and
loop
mov
fdivrl
jo
hlt
xchg
sahf
repz
sti
dec
mov
aas
pop
dec
lret
push
push
push
add
lock
mov
fnstsw
in
sbb
dec
incl
test
or
das
push
arpl
xchg
jo
sbb
in
hlt
fisubrl
mull
lock
jno
cmp
xchg
inc
mov
inc
jbe
loopne
cmc
cmpl
movb
pop
dec
sub
jle
je
and
and
xor
mov
dec
cmp
ds
sbb
xor
sbb
or
subl
xchg
int3
in
data16
rcll
rolb
aad
mov
pop
mov
sub
inc
shr
or
push
inc
std
pop
arpl
cmp
jnp
dec
test
out
and
mov
std
insb
and
mov
movsl
shlb
hlt
fnstsw
xchg
pop
int
in
incl
stos
xchg
sub
fildl
cmp
nop
lea
jae
fcompl
sub
fisubrs
add
xchg
pop
cmp
rcr
and
das
in
inc
dec
jle
cli
je
inc
in
dec
test
sbb
pop
mov
pop
mov
xor
imulb
inc
sub
xchg
push
fbld
add
in
rolb
dec
iret
pop
sbbb
dec
aad
js
inc
movsb
jns
xchg
movsl
into
sub
adc
or
add
xor
push
loop
sub
jns
subl
scas
fsts
inc
das
in
pop
cltd
and
mov
mov
pop
xchg
inc
push
mov
in
jecxz
aad
lea
and
pushf
and
hlt
pop
pop
mov
mov
std
nop
push
add
and
mov
setl
int
ja
mov
pushf
gs
adc
adc
lret
pusha
cmc
inc
in
xchg
adcb
push
dec
mov
les
push
sbb
mov
lock
push
or
test
jl
mov
in
cmpsl
cld
xchg
aaa
mov
jecxz
pop
mov
push
pop
nop
movsb
imul
stos
mov
leave
add
ficompl
and
popf
sahf
cmp
push
jecxz
pop
ja
mov
xchg
jnp
xchg
and
les
ss
xor
cltd
dec
xlat
inc
lret
call
add
dec
inc
ret
shll
cli
mov
mov
xorb
push
loop
out
ret
repz
xchg
ret
push
in
dec
and
cmp
xchg
les
test
xor
cwtl
pop
nop
pop
lret
loope
mov
dec
jnp
push
mov
mov
jecxz
fsubr
dec
rorl
and
jg
add
sti
lcall
jmp
mov
jge
loop
jp
lret
dec
ja
shlb
sub
push
push
xchg
or
inc
jno
cmpl
outsl
xchg
sub
xor
xor
gs
mov
xchg
loopne
repz
xchg
mov
daa
pop
xor
in
pushf
dec
lret
push
mov
xor
outsb
shrd
mov
jle
add
in
xchg
cmp
xchg
hlt
ret
lret
push
cwtl
adcl
add
mov
sub
outsl
push
adc
pop
inc
jecxz
fnstsw
jp
inc
ret
xor
xor
stos
popa
fwait
lds
or
je
mov
mov
and
test
sub
lret
sbb
ja
sub
cmp
or
cmp
popf
or
pop
sub
or
pushf
push
cmp
rorl
test
out
dec
jne
sbb
pop
xor
jp
outsb
arpl
sbb
dec
cmpsb
xor
push
cld
push
data16
fucomp
and
flds
stos
sub
aas
jmp
adc
jb
setae
jl
jae
push
ja
mov
cli
pop
sub
cld
push
fcompl
jno
ds
loopne
imul
leave
mov
add
mov
xor
and
inc
xor
adc
push
in
jp
bound
inc
insb
ja
pop
push
cmp
int3
in
in
jb
leave
or
nop
incl
mov
or
mov
dec
and
xor
repnz
test
rcrb
clc
loop
int3
dec
sti
test
enter
pop
xchg
jecxz
ret
or
mov
pop
mov
stc
mov
and
push
test
ja
pop
jns
rep
js
adc
cmpsb
sahf
scas
mov
nop
out
in
xchg
mov
mov
mov
ss
sub
scas
call
or
xchg
ljmp
test
out
fisttpl
push
xchg
into
xchg
ds
aad
inc
xchg
sbb
std
add
cmpxchg
or
or
test
sub
mov
jns
dec
jb
rcrl
in
xchg
jne
pop
mov
pop
test
and
adc
rolb
cmc
and
les
popa
rolb
mov
iret
es
lahf
xchg
rcr
jle
dec
fbstp
loop
dec
or
inc
pop
movsb
insb
mov
std
inc
roll
ds
addr16
out
mov
cmp
stc
pushl
leave
movsb
pop
sub
xchg
dec
or
add
rorb
xchg
jle
inc
pop
or
movsl
repz
and
mov
cltd
jmp
sub
and
imul
mov
mov
aas
leave
aaa
data16
ficoml
pop
jecxz
and
sahf
sahf
mov
vunpcklps
mov
sbb
mov
xor
cmp
xor
mov
xor
xor
dec
addl
push
or
jno
mov
int3
outsl
fsubr
repnz
fs
mov
or
sub
mov
jmp
xchg
icebp
xor
add
mov
aam
jmp
popf
push
pop
lahf
cmpsl
sbb
jg
movsl
mov
test
jo
cli
jnp
jb
nop
aas
xchg
mov
mov
pop
mov
pop
jae
adc
xor
mov
pushf
orl
push
push
push
lahf
lock
popa
lea
lods
stos
lds
pop
clc
es
push
es
and
mov
stos
xchg
mov
lods
mov
imul
rclb
mov
push
mov
dec
popf
iret
divl
into
outsl
sbb
add
sbb
aad
sahf
in
cmpl
pop
jne
repnz
idivb
fisubs
rorl
or
pop
lods
clc
cwtl
jo
in
add
rcr
or
lahf
fidivl
pusha
jp
mov
inc
dec
je
cltd
leave
or
repz
imul
and
push
pop
mov
iret
jne
cltd
fwait
lar
rolb
hlt
pop
push
push
or
push
dec
dec
jne
es
adc
sbb
bound
inc
pop
jmp
mov
sub
adc
loop
sub
adc
cli
cld
icebp
cmp
inc
addl
cwtl
and
lret
dec
fmull
aam
sahf
jae
add
fucomi
stos
push
push
cli
lcall
bound
mov
ficoms
jp
out
je
aaa
inc
shl
scas
sbb
push
or
and
push
pop
add
gs
push
int3
or
shrl
jp
aad
test
cmpsl
insb
and
lock
cmpsl
or
js
test
dec
adc
cmc
push
dec
mov
popa
rorl
ret
frstor
loop
mov
or
je
xor
xchg
push
xorl
shrb
and
xchg
shrb
jle
mov
scas
aas
or
loope
inc
cltd
cmp
xor
mov
jbe
or
mov
xchg
out
stos
sub
lods
sarb
cld
xchg
dec
cmp
pop
sub
cli
add
add
fadds
into
and
jns
clc
lret
leave
repz
aam
push
mov
aaa
xor
cli
inc
pop
jae
test
test
shl
adc
in
add
cmp
xor
lret
inc
sbbl
xor
addr16
mov
dec
xchg
sub
nop
mov
xchg
ds
rorl
insl
js
push
insl
popa
out
mov
xlat
lret
and
inc
xchg
dec
xchg
out
data16
jae
bound
stc
sbb
dec
jle
xor
ret
sub
stc
dec
xor
adc
mov
inc
adc
test
sub
push
cmp
xor
cmc
fdivrs
imul
test
cmp
sub
mov
and
and
aas
cwtl
arpl
dec
scas
sbb
xor
cmpsb
mov
push
dec
stc
call
lea
orl
lods
pop
stos
xor
lds
adc
aad
mov
push
inc
lahf
nop
mov
mov
daa
andl
jbe
xchg
sbb
jl
shlb
jbe
scas
mov
sub
movlhps
mov
cmp
adc
sbb
sti
jecxz
mov
pop
aam
inc
nop
mov
mov
aam
xorb
mov
pop
sbb
push
pop
adc
lcall
mov
pop
sub
bound
rcrl
mov
fs
mov
js
cmp
xchg
jae
fdivs
sub
nop
andl
xchg
lock
jmp
outsl
mov
loope
clc
cmp
inc
stos
pop
loope
push
mov
pop
or
xchg
mov
sub
out
push
test
mov
adc
sbb
and
gs
repnz
arpl
mov
adc
int3
adc
aaa
lods
fmull
or
lret
mov
mov
pop
add
test
push
fdivl
es
jo
lods
aas
ficoms
push
jae
repz
mov
icebp
xchg
jbe
das
xchg
cld
jne
and
pusha
fcoml
leave
test
or
jecxz
insl
negb
dec
imul
pop
push
adc
cld
add
mov
ljmp
notb
and
lret
pushf
out
data16
mov
inc
xor
jno
inc
xchg
push
adc
push
mov
push
movsl
fcmovne
leave
sti
insb
xor
fistpll
call
lods
inc
fwait
cmp
outsb
inc
outsl
lds
cmp
mov
daa
in
sti
pop
push
cmp
and
das
sbb
call
inc
xchg
inc
mov
ret
roll
ds
push
cmpsl
shlb
xchg
mov
scas
int3
jae
sub
push
add
imul
xchg
fucomip
xchg
outsl
fdivp
cs
adc
loope
jbe
cmp
gs
xor
mov
daa
pop
sub
in
dec
cmpsb
mov
xlat
out
xchg
out
cwtl
jg
push
adc
add
sub
loopne
jne
jbe
mov
sub
test
sbb
sub
sti
push
test
shrl
sub
scas
pop
xchg
cwtl
xor
add
mov
out
repnz
test
sbb
jl
insl
add
jb
adc
jbe
in
adc
fcomps
pop
or
add
js
mov
test
mov
or
insb
add
inc
inc
arpl
sti
sub
stos
loope
aaa
adc
pop
xor
sbb
mov
out
push
stc
add
or
push
jecxz
ret
int
fs
ret
push
sbb
cmpsl
stos
mov
cmp
jns
adc
jns,pn
inc
jecxz
cmpsl
and
les
stos
scas
jb
jmp
int
pop
pushf
nop
daa
or
push
xor
adc
jne
mov
sbb
xor
jmp
mov
outsl
cmp
jb
mov
cmpsl
pushf
daa
and
mov
aas
arpl
xchg
push
mov
ds
xchg
std
popa
lret
out
pop
adc
cmpsb
scas
sub
idivb
shl
xor
push
cwtl
inc
loop
pop
sub
lea
dec
into
bound
pop
testb
cmpsb
cs
addb
push
mov
hlt
add
loop
inc
and
scas
sti
inc
pop
mov
testl
rcrb
loopne
cs
je
pop
outsl
pop
inc
int3
mov
lret
inc
aad
jl
inc
push
mov
jo
iret
roll
fcoml
sarl
xchg
test
fldt
mov
ss
shlb
mov
mov
test
rcr
jle
mov
lds
add
aas
mov
pushf
and
cld
jae
inc
subb
fisubl
test
sub
jp
dec
filds
inc
cmpsb
cmc
fs
pusha
test
pop
and
cmpsb
mov
jne
xchg
or
mov
add
cmc
push
sbb
cwtl
mov
cmpl
orb
ret
xor
pop
xchg
and
cli
stos
xchg
sahf
sub
cmp
or
idivb
mov
pop
lret
push
mov
aas
cmpsb
mov
loop
inc
sub
cmc
xchg
jge
pop
mov
icebp
jecxz
aad
je
sub
cmp
xchg
mov
or
xor
repnz
mov
jge
test
add
mov
push
pop
and
or
mov
push
shl
lret
xchg
mov
into
dec
sub
inc
andl
mov
add
xchg
rcll
jge
adc
in
cltd
fimuls
and
cmpsb
orl
mov
mov
xchg
stc
movsl
cmp
sbb
out
pop
push
test
pusha
inc
test
into
and
inc
jns
loope
fcmovbe
cmp
push
jnp
mov
mulb
pop
shlb
push
loop
or
push
or
ret
xchg
pop
clc
outsb
push
popa
jmp
mov
and
sbb
or
or
in
or
mov
add
les
fldenv
sub
cli
sar
xor
js
mov
cmc
cs
daa
fiadds
push
jbe
cs
mov
push
imul
add
mov
jmp
push
or
jl
push
daa
insb
jae
shrl
pushf
cmp
push
and
addl
mov
ret
roll
clc
pop
int3
mov
out
adc
jecxz
shr
shrl
mov
add
mov
das
ljmp
std
pop
insb
push
or
adc
outsl
push
and
dec
pop
xchg
sti
jge
int3
addw
add
aas
aam
and
sbb
pusha
je
xchg
jg
popa
cmp
add
inc
cmp
insl
mov
sbb
adc
out
mov
inc
loope
lock
clc
pop
mov
insb
out
mov
mov
or
out
push
dec
mov
out
imul
jecxz
xor
lods
fistl
push
fmuls
inc
ljmp
sub
popf
rolb
inc
jg
insb
mov
push
test
mov
mov
add
mov
aam
arpl
aad
mov
lret
int3
jecxz
sub
shll
imull
in
test
out
getsec
cmpsl
dec
decb
aas
test
jne
cmp
mov
add
pop
and
sub
dec
int3
adc
push
dec
mov
cmpsl
xor
mov
inc
or
mov
mov
add
fcomp
shrl
stc
scas
mov
dec
mov
mov
loopne
xor
stos
jns
test
xchg
pop
out
sbb
test
call
cmp
out
mov
xlat
int3
sbbl
lret
stos
cmp
mov
nop
push
imul
int3
fs
push
out
fmul
scas
pusha
and
adc
jge
lret
pop
jo
sbb
pop
movsl
dec
adc
sub
pushf
in
push
movl
jne
imul
xchg
scas
mov
pushf
test
mov
test
xor
repz
nop
sbb
inc
xchg
shlb
pop
popf
outsb
ss
mov
out
add
jne
xor
adc
and
mov
lcall
push
test
adcb
dec
imul
addr16
ljmp
cli
jb
sar
pop
jnp
ret
lret
repz
cs
test
rorb
sub
fs
mov
test
push
mov
push
fwait
and
testl
pop
adc
inc
pop
je
dec
pop
pop
cltd
rcrb
notl
sbb
test
and
mov
xor
pop
in
es
cmp
push
inc
jecxz
and
notb
cmp
iret
jp
js
push
ja
xorb
push
ret
in
data16
jo
mov
mov
ficompl
xchg
iret
sbb
xor
test
negb
aas
jae
mov
mov
mov
push
xor
adc
mov
and
lods
push
sbb
and
loop
lods
dec
out
or
inc
shrl
out
xchg
adc
jmp
dec
pop
xlat
jmp
jge,pn
aam
nop
sarl
test
test
out
inc
loopne
inc
hlt
loopne
mov
in
ss
xor
bound
cmp
insl
repnz
cli
push
push
adc
jae
inc
mov
cmp
cmp
add
lret
shll
cmp
mov
sub
test
sbb
and
orb
jp
jmp
fisttpl
in
sbb
sbb
lret
out
sub
jecxz
adc
repz
popf
mov
sub
pop
dec
xchg
jg
jbe
test
lds
xchg
push
add
jo
mov
jo
iret
faddl
dec
xlat
xchg
imul
jle
xchg
jbe
jle
enter
test
mov
mov
jle
pop
inc
aas
push
and
xlat
data16
cmp
sbbl
data16
dec
call
test
cmpsl
movsl
js
cmp
hlt
jl
outsb
loope
ljmp
adc
shlb
outsb
loop
mov
icebp
insb
in
push
or
addl
push
or
aaa
shll
sbb
mov
mov
daa
scas
xchg
filds
sbb
sbb
and
jp
repnz
cmpsb
inc
dec
pop
test
cwtl
xchg
outsb
adc
pop
push
aas
cmp
sub
mov
clc
repnz
mov
dec
ficompl
push
cwtl
mov
push
mov
mov
adc
xchg
outsl
outsb
mov
add
mov
pop
fs
mov
xor
mov
sbb
shll
cmpsb
pop
mov
repnz
rolb
cmp
xchg
jns
or
pop
xor
or
mov
orb
cld
jne
dec
mov
adc
bound
jge
mov
dec
pop
cmp
adc
lods
cmpsl
sub
scas
fsubrs
fdivrl
inc
sub
mov
jns
sub
and
pop
test
mov
orl
push
and
dec
pop
jne
shr
jge
nop
jmp
aaa
fdiv
mov
scas
pop
iret
in
cli
lds
imul
push
push
ficompl
ja
or
fadds
mov
mov
mov
rolb
and
daa
sub
dec
enter
jne
test
jno
dec
mov
bswap
out
push
xchg
leave
cmp
jmp
icebp
jae
popl
mov
movsb
cmpsb
insb
or
xchg
loope
cmpb
mov
ss
push
fimuls
out
xor
push
repnz
inc
mov
mov
mov
and
sub
test
mov
jmp
out
int3
mov
mov
out
fs
cmp
mov
mul
xchg
icebp
movsl
or
sbb
add
add
std
cmp
xchg
push
es
and
push
push
jmp
in
sub
test
jg
xchg
repnz
mov
pop
js
cltd
jecxz
jb
or
pop
in
cmpb
mov
push
add
jmp
popa
fidivs
mov
sub
inc
js
jle
cmovae
cmp
or
leave
jbe
push
or
into
push
into
scas
in
inc
jmp
stos
movsb
adcl
sub
cli
push
test
push
jp
cmpsl
ret
lds
mov
mov
mov
in
out
fcos
or
xchg
xchg
or
mov
push
and
in
aas
les
mov
icebp
inc
movsb
sub
xchg
lea
movsb
int3
push
add
xor
add
mov
jb
adc
in
push
cmpsb
dec
or
data16
or
add
dec
pusha
mov
pop
sub
push
cld
addb
mov
push
xor
push
sub
push
rcll
jns
pop
add
int
dec
pusha
pop
or
push
or
ja
push
cmp
or
into
lods
push
ljmp
xchg
and
pop
dec
xchg
pop
jle
or
outsb
gs
lahf
push
jp
mulb
and
jg
cmpsb
xchg
repz
out
sti
add
push
pop
sbb
sbb
push
insl
fadds
jo
lds
mov
jno
shlb
sub
popf
add
pop
cmpsl
jbe
andl
push
test
sar
inc
stc
mov
adc
push
jmp
dec
dec
jmp
mov
pop
sbb
mov
pop
cmp
mov
and
push
or
sub
fs
movsb
add
add
sbbl
cmp
mov
dec
xor
mov
arpl
aad
mov
mov
mov
push
push
mov
dec
outsl
and
in
add
xchg
jl
aaa
sbb
imul
in
push
pop
shlb
mov
cld
cltd
into
iret
jno
lahf
test
lret
test
cmp
sbb
jae
pop
mov
mov
sbb
add
inc
je
rclb
rcll
in
fucom
or
mov
lods
push
add
in
leave
and
test
and
popf
aad
mov
and
dec
sub
inc
sub
in
jp
cld
or
xor
dec
lea
mov
orl
mov
push
push
push
xor
mov
test
in
add
inc
iret
or
or
adc
and
ret
pop
fisttpll
jo
adc
mov
fisubrl
cwtl
and
xor
xchg
inc
mov
mov
repz
aam
outsl
fs
jp
cmpsl
ret
mov
push
cs
addr16
aas
or
scas
sbb
dec
add
jge
in
or
int3
lods
xchg
in
mov
xchg
jp
or
fwait
fwait
inc
notl
fadd
decb
loop
cmpl
push
movsl
cmpl
cli
les
jae
jmp
lock
imul
ret
adc
push
mov
in
imul
loopne
fidivrs
push
jge
sub
fdivs
ss
mov
cmp
cmp
mov
nop
loop
cmp
cmp
push
cmp
dec
jno
xchg
mov
in
pop
push
out
jno
xchg
add
icebp
push
xchg
ds
in
sbb
aad
mov
pop
negl
rorl
test
xchg
es
test
cli
inc
hlt
pop
scas
movsl
and
jg
pop
test
hlt
xorb
fisttpl
imul
aad
rorl
cmp
icebp
std
arpl
push
addr16
repnz
mov
dec
lods
mov
in
mov
adc
and
inc
pusha
repz
jg
shr
jecxz
js
xor
adc
out
xchg
ret
mov
adc
xor
adc
ja
adc
xor
xchg
and
out
sbb
lock
add
dec
aaa
xor
mov
loop
sbb
push
ret
xchg
scas
adc
shll
dec
ljmp
mov
ss
nop
or
es
shrl
xor
mov
arpl
adc
sub
jne
sbb
xor
repz
mov
data16
and
adc
mov
repz
lds
pop
inc
or
mov
arpl
cmc
adc
js
jg
iret
sub
jp
mov
cmp
popf
es
int3
fsubrl
push
xchg
pop
push
xlat
sub
jb
movsb
ss
xchg
fiaddl
sub
or
fucomip
aaa
cmp
and
adc
fstpt
mov
pop
iret
xchg
sti
push
mulps
in
sbb
xlat
push
mov
pop
imull
imul
sti
or
loop
jnp
add
loopne
cmpb
stos
ffreep
xchg
into
mov
out
mov
jp
and
sar
popf
push
gs
xchg
fmulp
cmp
and
test
sbb
jp
pushf
loop
in
mov
sub
dec
and
sbb
sarb
and
add
dec
sub
sbb
test
and
icebp
and
in
mov
stos
ljmp
sbb
and
xchg
rcrl
rorb
cli
sub
dec
int3
mov
adcb
cmp
pop
jb
sbb
imul
pop
add
cmpsl
test
sbb
frstor
adc
cs
adc
jb
jecxz
loop
rol
sub
mov
mov
mov
out
adc
out
jo
rorb
push
int
in
iret
pop
mov
and
jg
add
sahf
fsts
fwait
push
mov
mov
jnp
ds
fstps
into
push
sbb
mov
aam
outsl
push
cld
sbb
and
cmp
pushf
sbb
cmpsl
cli
mov
out
test
sahf
loope
fwait
cli
ret
xor
ljmp
dec
add
pop
cs
pop
lahf
mov
adcb
cmp
xchg
cmc
adc
add
dec
shr
inc
dec
iret
fs
fists
cmovge
out
mov
loop
adc
inc
lcall
aaa
xor
sbb
mov
sub
jl
setae
and
mov
push
pop
out
mov
adc
or
cmp
sbb
test
gs
jecxz
sub
in
test
mov
jle
or
cs
mov
pop
shl
popf
fdivrs
mov
mov
mov
or
pushl
dec
shl
insb
fdivr
inc
sbb
mov
jno
cmp
out
ss
jno
add
js
push
push
fdiv
sub
insl
in
test
sbb
xchg
call
lods
mov
xor
jnp
bound
push
pushf
ja
outsb
sub
mov
xor
fdivr
sbb
cmp
push
daa
cmp
das
not
lods
xor
movsb
fisttpl
sbb
inc
in
mov
outsl
andb
adc
test
pop
popf
dec
jecxz
add
adcl
mov
subl
test
jmp
and
cmc
xor
and
mov
mov
repnz
xor
cwtl
sub
inc
insb
aas
xchg
sub
push
fisubrl
test
fucom
daa
std
sbbl
jl
push
or
jno
js
lea
xchg
mov
push
dec
sarb
sub
mov
sbb
cld
dec
mov
jbe
or
cmp
outsl
cwtl
dec
ret
or
mov
cmp
sbb
pop
xor
add
lds
lret
movsb
pop
xchg
bound
mov
xchg
rorb
add
mov
cmp
push
and
push
bound
in
and
push
icebp
mov
jno
movsb
xor
jmp
loope
push
out
movsw
pop
push
lahf
call
or
das
stos
sbbl
dec
xchg
mov
jo
stos
mov
sbb
loopne
and
in
je
xlat
mov
mov
in
daa
and
imul
jle
or
pop
pop
sbbl
mov
aas
movsb
popa
push
cmp
or
mov
xchg
push
subl
fucomp
ret
pop
fimuls
inc
movsb
popf
stc
movsl
in
mov
mov
clc
xor
ficoms
testb
out
dec
dec
cs
xchg
jle
int3
add
jmp
cltd
addr16
lret
addb
adc
cmp
mov
mov
es
pop
out
adcb
xor
mov
dec
ret
push
push
mov
dec
mov
push
lods
jae
jne
lock
xchg
fwait
stc
js
jmp
shl
xor
jmp
xor
sub
pop
and
movsl
sub
mov
jle
icebp
out
lcall
and
mov
stos
setbe
cmp
add
mov
fldcw
or
add
xchg
leave
add
std
rcr
jbe
push
push
fwait
and
lds
out
add
into
hlt
rcrl
ss
xchg
pop
push
or
mov
push
in
lret
mov
int
lods
xchg
mov
outsl
sub
into
hlt
xchg
dec
stc
adc
and
cmp
adc
push
test
fdivl
mov
pushf
sub
sbb
inc
jg
lret
frstor
pop
mov
xchg
inc
loope
mov
in
dec
f2xm1
imul
push
sti
push
cmp
test
adc
xchg
mov
mov
fcomp
mov
mov
adc
mov
jne
shrl
iret
pop
jnp
into
adc
adc
xor
dec
xor
pop
push
out
int
jmp
sub
or
cmp
scas
mov
xchg
xor
cmc
jno
pop
test
dec
repz
dec
xor
mov
xchg
cs
cmp
adc
push
mov
cmpsb
pop
rcrl
ljmp
cs
inc
fadds
shlb
xor
push
mov
iret
sar
fldenv
cmp
std
sub
xchg
inc
sbb
adcl
lret
mov
jbe
loop
push
pusha
or
jb
xchg
mov
push
mov
mov
aad
cmp
je
aas
iret
dec
sub
add
mov
dec
xor
cmp
add
fldt
and
shlb
bswap
inc
jmp
and
test
loopne
jnp
and
and
mov
mov
pop
inc
mov
insl
jle,pt
pop
jp
or
sbb
das
dec
insl
dec
mov
cmp
mov
imul
xchg
jbe
push
cltd
aam
fadds
stc
loopne
enter
mov
mov
xor
out
xor
or
pop
popf
stos
shll
addr16
mov
or
sbb
inc
bound
pop
aad
lret
stos
in
sahf
mov
cmp
nop
inc
mov
pop
filds
cmp
inc
push
push
aas
inc
dec
in
loopne
jge
add
js
xchg
pop
push
in
out
jbe
lea
pop
insl
cmpl
or
lock
addr16
and
xchg
int
or
repnz
mov
sub
xchg
cmc
test
out
pop
adc
mov
xchg
jnp
mov
int3
mov
pushf
pop
or
dec
inc
fsubrs
movsl
mov
mov
mov
js
ljmp
adc
loopne
xlat
sbb
push
popa
stos
stos
pusha
jp
aaa
mov
aad
xor
mov
ljmp
inc
inc
movsb
mov
pop
sub
das
pop
or
add
int3
cmc
les
clc
cld
cmp
cmp
xor
xor
dec
and
adc
jmp
test
jg
hlt
idiv
roll
cmp
ss
push
pusha
pop
sub
cli
sub
xchg
int3
push
out
shrl
aaa
jae
or
jg
jne
std
mov
mov
mov
xchg
gs
pop
rcrb
lock
insb
or
mov
addr16
ds
dec
iret
frstor
add
clc
xor
imul
add
mov
mov
js
mov
fiadds
lahf
xchg
call
out
jnp
sub
aam
pusha
lods
into
inc
add
cmpsl
mov
mov
lret
call
inc
add
popfw
lret
and
test
push
jbe
stos
pusha
stos
shlb
xor
jecxz
mov
add
dec
pop
cli
pop
pusha
or
sub
jge
add
rcl
cmpsb
mov
test
insb
mov
sub
cmc
mov
cmpb
cmp
mov
xchg
lcall
adc
pop
push
repnz
in
sbb
dec
or
leave
stos
fsubl
stos
aam
add
xchg
dec
pop
ffreep
cwtl
sbb
inc
fcoml
insl
and
iret
adcl
divl
aam
jmp
pushf
adc
int3
pop
decl
push
lods
std
call
loop
jmp
movsb
scas
out
and
and
cltd
push
xchg
cmp
in
popl
xor
loop
rcrl
lock
jno
cmp
fisubl
fadds
pusha
sti
and
mov
into
xchg
hlt
subl
pop
cmp
xchg
in
adc
inc
or
push
ret
repnz
add
mov
or
or
mov
sub
lcall
in
or
das
fsubrs
jns
pop
xor
int3
or
jns
fwait
ja
rcrl
and
push
aaa
sbb
in
test
fiaddl
outsb
scas
inc
mov
cmp
outsb
jb
mov
repnz
orl
xor
in
call
adc
shr
xlat
scas
es
adc
xor
std
pushf
imul
xchg
mov
xchg
mov
add
jl
or
mov
sub
pop
sub
xchg
mov
stos
dec
and
repz
mov
jmp
inc
jno
mov
je
sub
leave
cmp
push
lds
mov
adc
lods
and
inc
cmp
gs
inc
sub
sbb
xchg
mov
sbb
jne
pop
rorl
ficoml
outsl
aad
pop
inc
out
adc
adcl
out
fdivp
je
test
mov
jp
fadds
stc
adc
xchg
mov
xlat
adc
shl
xchg
and
mov
test
pop
cs
imul
rorl
rclb
mov
lds
mov
mov
sub
sbb
jg
movsb
and
ss
imul
mov
outsl
and
xor
std
xlat
xor
sbb
mov
xor
cltd
cmp
stos
mov
sub
outsb
xchg
pushf
push
test
sbb
mov
sbb
inc
in
adc
ss
lds
lahf
aam
fldt
xchg
lret
fucomp
cli
xchg
cmp
dec
pop
orl
sbb
cmp
mov
sbb
jnp
mov
push
imul
mov
scas
andl
lds
popf
inc
cltd
cmp
sbb
loopne
sbb
shlb
dec
cli
xchg
jae
xchg
lcall
cmpsb
std
dec
mov
inc
sarb
shlb
pushw
xor
add
add
scas
dec
in
stos
outsl
mov
cmpsb
imul
lcall
sub
push
sbb
std
jb
hlt
addr16
dec
lea
mov
sub
hlt
cmp
adc
outsb
adc
cmc
dec
inc
lock
mov
shrl
mov
int
xchg
ret
iret
xchg
push
push
xchg
xchg
jnp
popa
mov
jmp
mov
or
incl
imul
cli
inc
cmp
lock
cmp
dec
stc
fs
loop
bound
mov
pop
stc
repz
cmp
jg
jmp
and
xor
jmp
mov
and
shlb
or
stos
inc
or
push
sub
and
xchg
sahf
jp
add
jmp
dec
mov
jae
imulb
outsl
sbb
push
mov
xchg
scas
inc
cmp
call
movsl
mov
jge
cs
cld
jnp
xor
lea
mov
dec
daa
mov
mov
mov
jo
sub
adc
mov
jo
cmp
into
hlt
adc
mov
dec
outsl
loopne
aaa
pop
add
out
mov
or
and
in
ss
xchg
mov
xor
rcr
inc
dec
lret
mov
add
cmpsl
shll
sub
aaa
and
mov
mov
jmp
jecxz
js
push
push
lret
imul
lds
int3
mov
xchg
cmp
movb
sar
fs
cld
out
test
add
sti
pop
cwtl
inc
mov
scas
mov
push
xor
in
dec
xchg
insb
and
popf
cmp
enter
lock
push
mov
gs
js
loopne
scas
mov
shlb
enter
outsl
mov
mov
push
adc
repnz
cwtl
mov
mov
imul
ljmp
push
mov
sub
push
xchg
fsubs
addb
mov
ja
xchg
sbb
jp
pop
dec
jb
lcall
mov
jb
fcomip
mov
xchg
popa
lock
inc
push
mov
mov
mov
add
arpl
cltd
mov
jnp
dec
mov
mov
movsl
inc
mov
adc
insb
or
mov
xchg
sahf
lea
jmp
push
xor
jns
loope
icebp
pushf
pop
lods
sbb
adc
testl
scas
scas
dec
mov
sbb
stos
leave
ss
mov
pushf
xchg
pop
js
mov
into
mov
sbb
xchg
lcall
out
push
fadds
push
movb
ljmp
xchg
pop
clc
and
stos
mov
ljmp
xchg
lods
push
or
mov
jbe
dec
mov
scas
lcall
fcmovu
jl
stos
xchg
add
jp
inc
movb
jmp
mov
in
adc
ds
jmp
or
mov
test
enter
push
js
lahf
pop
clc
cli
mov
notl
mov
inc
mov
dec
pop
xor
aam
add
cli
or
lods
mov
nop
xorl
or
repnz
add
xor
int
imul
dec
cmp
out
and
add
jmp
pop
mov
push
cld
cs
mov
xor
mov
mov
loopne
idivb
int
inc
inc
mov
aaa
or
cltd
scas
mov
mov
fdivrl
sbb
xchg
popf
xor
aad
add
aad
popf
push
inc
cmc
xor
adc
cld
sub
xchg
es
aaa
xchg
cmc
dec
imul
sub
out
outsb
insb
xchg
gs
mov
push
movsl
andl
test
test
adc
lea
popa
cltd
cmp
sbb
cmp
fnclex
mov
sbb
sbb
sbb
or
cli
mov
xchg
popa
addl
arpl
add
push
xor
repz
xchg
fwait
mov
pop
dec
popf
xor
push
test
sub
inc
clc
sub
pop
int3
sub
arpl
dec
fs
xorb
and
lcall
sub
out
enter
insl
adc
je
test
mov
mov
cwtl
int
js
and
lahf
or
popf
jb
test
gs
loop
lret
sahf
cltd
sub
in
mov
sub
xchg
push
and
adc
pop
mov
push
sub
int
popf
jae
adc
mov
sub
xchg
stos
fs
or
out
adc
add
mov
imul
pop
jnp
das
cmp
nop
rorb
adc
lock
movsl
xchg
add
xor
sub
inc
xor
orb
inc
stos
mov
filds
outsl
shlw
or
xchg
loopne
inc
sub
cli
adc
add
out
lods
jmp
mulb
es
mov
fnstcw
idivb
jnp
pop
push
stc
mov
sarl
out
cmc
lcall
call
jp
add
fwait
jg
inc
pushf
enter
popf
push
shlb
hlt
iret
out
es
and
fimuls
int3
enter
push
sub
add
mov
xchg
daa
mov
push
add
push
shrl
add
xchg
xchg
lret
xchg
mov
scas
cmp
out
call
pop
or
into
rorl
fcompl
adc
pusha
sub
mov
cmp
pop
insb
inc
and
sbb
loope
dec
xlat
jb
push
sbb
shl
xchg
shll
xor
repz
mov
jle
mov
xchg
mov
push
mov
loop
pop
bound
adc
dec
shrl
int
daa
pop
mov
scas
loop
enter
or
pop
jae
mull
insb
pusha
lret
out
ja
movsb
pushf
push
adc
jle
pop
mov
orb
sahf
bound
mov
jne
jg
cmp
jne
pop
inc
cmp
mov
lock
lret
mov
gs
fstpl
jo
jmp
mov
loope
pop
fs
xchg
cmp
push
cltd
subl
subb
into
add
psubd
jmp
sbbb
xchg
out
adc
aaa
sbb
sub
aaa
sub
daa
test
adc
shrl
pop
and
pusha
dec
push
mov
push
subb
out
sbb
out
imul
loopne
push
sar
cmp
sub
xchg
iret
fadd
pop
mov
je
jg
cmp
sub
adcb
arpl
fstpt
mov
idivl
jle
shll
adc
xchg
pushf
leave
jl
insb
jle
push
outsl
mov
orl
push
fwait
sti
push
in
push
cld
ds
pushf
cmp
sub
xchg
xchg
mov
xorb
lock
sbb
subl
mov
sbb
dec
mov
cwtl
cmpsb
js
xor
test
mov
xchg
enter
jmp
xor
vpslld
fdiv
fstpl
inc
push
call
roll
adc
stos
mov
bound
pop
fbld
outsl
pop
jle
insb
movsb
mov
mov
sbb
cmp
xchg
jns
sahf
inc
es
in
clc
sub
adc
hlt
jmp
rcrb
lods
and
mov
jg
cmp
pop
js
pop
push
stos
lret
jge
pop
int
lret
xchg
test
das
insb
dec
sbbb
arpl
xchg
inc
out
xor
sub
mov
sub
dec
jge
je
stos
push
jle
fcompl
jnp
xor
fildll
cmp
jle
sahf
dec
je
adc
cmp
xor
sbbb
or
out
and
push
jno
lret
popa
jl
loope
cmc
jno
sub
dec
push
sbb
jno
pop
subl
cmp
xchg
std
inc
pop
mov
popf
mov
xchg
mov
dec
add
mov
and
inc
jbe
leave
lret
mov
adc
out
sub
insl
mov
or
or
shlw
xor
cmpsb
xchg
add
sti
ss
cmp
xchg
pop
test
scas
cmp
cmc
loop
lds
lds
jg
or
adc
ds
sub
pop
out
adc
rcll
movsl
clc
data16
lret
push
fdivl
nop
mov
cs
inc
mov
outsb
das
push
loop
mov
mov
jp
jg
adc
test
sbb
or
notb
movsb
or
leave
jp
repnz
sub
sbb
popa
cmp
xchg
push
inc
pushl
add
fsubrs
sub
push
xor
stos
out
push
test
mov
int
js
add
cwtl
pandn
inc
add
xorb
and
faddl
push
jb
movsl
cmp
mov
lcall
fs
mov
scas
pop
sbb
inc
pop
mov
xor
jae
cmp
addr16
int
xor
xor
xor
test
mov
sub
dec
jae
and
jnp
mov
stos
decb
adc
inc
fwait
ljmp
dec
adc
mov
repz
mov
xlat
jbe
mov
sbb
mov
mov
sbb
ret
shrb
insl
ds
xor
loop
mov
xchg
cmpb
jae
xchg
data16
cltd
jmp
movsb
inc
jge
fsubrs
sbb
sbb
test
mov
aas
dec
and
push
subb
xor
int3
dec
cmp
icebp
shr
leave
mov
dec
rcll
ret
lret
pushf
jae
js
xchg
mov
into
mov
mov
jmp
inc
mov
pop
movsl
imul
dec
or
into
xchg
adc
xchg
mov
int3
std
loopne
pop
subb
mov
or
out
pop
rolb
mov
mov
ljmp
push
test
pop
roll
pop
sub
mov
lods
or
test
mov
inc
dec
xchg
ret
inc
cmp
cmp
lods
sub
xor
stos
sbb
inc
call
mov
ror
push
mov
gs
outsl
xchg
dec
jg
movsb
dec
xor
out
sub
arpl
jl
push
imul
fdivrl
shrb
add
push
lret
and
js
scas
stos
es
mov
cmp
xchg
jp
xchg
in
mov
cmp
pushf
pushf
ret
jge
faddl
popf
sub
inc
addb
cmp
and
sbb
scas
sahf
testl
push
test
and
scas
popa
pop
push
sbb
jge
jno
sbb
dec
pusha
bound
lock
jb
stos
andb
or
and
fsubr
insb
inc
sub
adc
push
enter
jns
xchg
call
iret
lret
mov
push
div
pop
adc
push
and
xor
xchg
mov
clc
push
test
fdiv
loope
es
xchg
sbb
insl
push
lods
addb
insl
pusha
cmpl
rolb
scas
push
xchg
mov
inc
testb
repnz
faddl
dec
inc
test
adc
mov
cmp
sub
imul
mov
add
pop
movb
addb
icebp
adc
pop
data16
aad
imul
pop
adc
add
push
call
mov
in
and
sub
loop
lods
scas
ljmp
jg
sub
pop
es
add
cs
xchg
dec
fcoml
inc
out
ds
cmp
xchg
cmp
roll
jl
cmp
mov
mov
or
cmc
pop
pop
testb
sub
mov
imul
cmpl
es
pop
daa
fstpt
ret
cmc
fidivs
pop
aas
push
cmp
mov
cmp
or
cs
dec
push
adc
sub
incl
dec
adc
lahf
mov
dec
dec
stc
jg
push
lahf
xchg
mov
mov
cmpsb
mov
lcall
mov
sub
adc
js
adc
jecxz
push
ficoml
cmpl
xchg
cli
mov
pusha
cmc
in
jge
test
loopne
aas
adc
in
sbb
mov
std
fimuls
fists
pop
les
sub
mov
and
sbb
and
scas
aas
lock
jmp
xor
cmp
sbb
je
cmp
or
and
rol
add
mov
adc
dec
mov
pop
add
cmpsl
jae
cmp
mov
sbb
icebp
into
xor
test
push
movsl
mov
mov
sbb
add
xchg
xor
mov
jmp
ds
push
mov
repnz
ljmp
push
push
les
push
lret
sub
cmpsb
lret
addr16
jb
inc
decl
test
pusha
add
cmp
mov
fs
push
repz
add
pop
notb
dec
ja
loopne
pop
rcr
hlt
inc
es
or
out
fsts
sub
cmpsl
inc
xchg
and
test
ss
cwtl
jg
cli
xor
insl
pop
scas
shlb
cmp
and
add
lcall
dec
jne
dec
imul
adc
in
add
rcrl
pop
rcrl
or
and
jl
push
sub
leave
lock
or
mov
jle
pop
xor
fmull
mov
sub
fucomp
mov
adc
pop
pop
gs
std
outsl
loop
fmuls
inc
decb
out
leave
mov
adc
push
push
xorl
popf
push
add
xchg
sarl
addr16
or
jmp
push
or
inc
add
push
mov
inc
fsubrl
in
mov
mov
fucomp
in
ljmp
mov
dec
cmc
outsb
inc
fstpl
and
jae
mov
mov
mov
jbe
fdivrp
test
cltd
mov
push
outsb
gs
inc
hlt
enter
jno
mov
push
fstl
inc
adc
dec
mov
loope
sub
in
dec
push
ds
gs
gs
outsb
fs
test
and
mov
inc
lds
and
xor
fisttps
mov
mov
lret
sbb
add
shll
jecxz
add
or
cmpsb
inc
andl
icebp
xchg
punpcklbw
aaa
mov
inc
test
out
push
pop
jecxz
hlt
test
ljmp
pop
mov
imul
xor
int
mov
mov
sti
mov
cwtl
pushf
xchg
jbe
jnp,pt
pop
or
in
jae
xor
cli
mov
or
and
gs
mov
std
popa
jge
ljmp
xchg
bound
mov
lret
pusha
mov
adc
fcoms
lcall
pushf
xor
pop
cmpl
push
stc
inc
outsb
pop
mov
mov
inc
jmp
add
xor
js
rcl
lcall
inc
pusha
xchg
dec
shll
jb
dec
push
out
xorl
cmp
dec
cmp
jmp
push
ret
jo
fnsave
fistpl
and
and
movsl
jmp
mov
iret
popf
mov
jmp
inc
inc
push
or
dec
jb
daa
ljmp
jge
outsl
movlps
in
and
std
rcrb
adc
pop
in
xor
fisttps
xlat
xchg
xor
mov
mov
xchg
imul
mov
testl
or
sub
lahf
mov
cmp
and
test
mov
sbb
xchg
or
jae
and
sub
repz
rcr
iret
cltd
mov
mov
aad
movsb
js
mov
adc
loopne
mov
fnop
repz
dec
insb
scas
lods
jb
fs
mov
insl
addb
popf
or
test
iret
out
fsubrs
cld
into
adc
es
mov
enter
cmp
outsb
sbb
pop
mov
jns
fwait
push
dec
dec
ret
clc
sbb
mov
adc
sbb
sbb
mov
jne
dec
ficompl
ficoml
xor
jo
xchg
mov
and
or
pop
sub
sub
aad
pop
mov
sbb
lea
loope
inc
push
mov
jecxz
mov
call
stos
and
lds
in
cmp
dec
ds
inc
xchg
fucompp
fidivs
xchg
xchg
inc
aaa
jbe
movsb
fildl
mov
push
jbe
arpl
movsb
mov
adc
xor
ljmp
popf
fdivs
and
lret
rol
js
sbb
dec
insb
adc
aas
test
in
loopne
mov
lods
jnp
es
mov
bound
cmp
xor
pop
sbb
inc
xorb
push
mov
adc
cs
xor
jg
lcall
icebp
lock
pusha
or
pop
cmp
lea
mov
sahf
notb
testb
mov
fldl
xor
or
sbb
into
lret
outsb
imulb
stc
int
ret
push
xor
aas
xchg
pop
int3
xlat
jle
mov
movsl
lret
mov
insb
es
daa
add
std
push
test
pop
mov
gs
adc
pop
les
adc
repnz
dec
mov
push
or
xor
inc
and
xchg
push
push
add
inc
push
or
mov
out
fisttps
mov
sbb
adc
dec
mov
mov
cmp
mov
dec
cltd
mov
dec
daa
xchg
repnz
adc
adc
cmp
out
jbe
jg
pusha
lds
and
sub
mov
dec
stos
jns
loopne
pushf
push
mov
add
fbld
mov
movsl
sub
arpl
in
sub
cwtl
mov
addr16
bound
adc
out
pop
push
cld
fldcw
popf
push
push
out
push
out
jmp
xchg
sarl
aaa
ds
popf
std
cmp
les
lcall
aaa
les
clc
mov
mov
pop
jecxz
hlt
rcrb
test
out
in
hlt
scas
les
cmpsl
sub
shlb
mov
out
test
sbb
test
mov
mov
mov
dec
aas
rolb
mov
cmc
hlt
repnz
dec
aad
dec
pop
mov
rcrb
push
out
lea
push
cld
mov
push
pop
fisttpl
loopne
pop
mov
dec
xor
xor
mov
cmp
jmp
into
adc
add
dec
in
leave
in
nop
les
das
xor
push
leave
outsb
insb
dec
sub
inc
push
xchg
fstpl
xor
and
or
pop
orl
loop
jnp
ret
std
mov
pushf
loopne
dec
lea
cmp
xchg
cli
and
and
sub
pop
sbb
push
sub
jae
and
mov
nop
enter
pop
clc
xchg
outsb
int
push
jl
and
cwtl
cmp
sbb
mulb
inc
das
outsb
lock
addb
in
rcrl
mov
sbb
sub
mov
or
jo
ret
sbb
lods
scas
jne
repz
out
dec
jne
stos
imul
arpl
sarb
pushf
sarw
cli
into
pushf
arpl
imul
adc
fsubs
stos
mov
lods
bnd
pop
or
mov
push
clc
ret
jmp
cmc
sbb
pop
and
push
adc
stos
xlat
sbb
mov
or
push
mov
dec
pop
int3
add
mov
dec
jl
jmp
sti
add
or
inc
in
xchg
bound
mov
jg
cmp
sbb
test
push
fldt
or
jge
out
cmp
lds
decl
js
xor
mov
sbb
dec
lods
add
ror
out
sbb
lret
and
adc
push
xor
scas
sbb
and
xor
jmp
sbbl
imul
fsubl
jmp
jo
daa
out
mov
cmp
inc
xchg
push
mov
push
enter
sbb
mov
sbb
ss
push
in
roll
mov
xchg
add
pusha
stos
xor
fidivl
and
and
in
jmp
push
daa
inc
dec
add
imul
int
cmpsl
push
sbb
nop
pop
ret
divl
into
lret
pop
int
cmp
cmp
or
out
lret
mov
fcompl
pop
test
lret
in
mov
mov
sbb
and
mov
inc
xor
rcl
mov
add
mov
inc
add
push
sbb
jge
loopne
or
movsl
mov
mov
jbe
cmp
mov
dec
dec
test
out
lods
jg
insl
test
je
add
shrl
cmc
xchg
fs
and
cmp
sbb
ret
lea
cmp
test
fucomi
sbb
push
iret
mov
xchg
hlt
iret
sti
lahf
push
popa
testl
add
cmp
push
mov
fildll
cmpl
ret
sub
hlt
mov
xchg
and
dec
popf
lds
stos
cmp
cli
rclb
rcrb
xchg
mov
mov
shl
jne
xlat
shl
dec
push
push
xlat
out
ljmp
mov
pop
cmp
jb
div
fdivs
loopne
pop
test
and
mov
inc
mov
cmp
sub
mov
jo
repnz
jle
or
sbb
fidivrs
ljmp
repnz
xor
fbstp
fwait
fwait
xchg
sub
xor
add
mov
adc
add
popa
divw
inc
and
fildl
cmp
in
dec
xchg
gs
dec
outsb
cmp
jmp
arpl
ja
icebp
jg
jle
mov
out
or
dec
mov
shrb
jle
lds
into
aad
push
imul
pop
fwait
scas
rclb
aad
cmc
cs
mov
shll
arpl
call
dec
mov
aas
call
cmp
mov
jg
test
mov
aam
les
ljmp
mov
repnz
mov
mov
xor
enter
or
jns
rorb
popf
mov
sbb
pop
pop
push
hlt
cmp
mov
sbbb
jecxz
aad
lret
add
shll
adc
out
nop/reserved
sub
sbb
xor
ljmp
pusha
mov
lock
loop
inc
outsl
inc
jo
pop
mov
testb
sub
mov
and
jp
or
or
ljmp
jecxz
dec
das
pop
inc
scas
test
cli
jge
xor
adc
push
sub
or
hlt
popf
push
rorb
cmp
mov
fs
pop
sbb
mov
mov
test
icebp
aam
inc
out
xorl
xchg
lea
add
lahf
lea
add
hlt
icebp
daa
cltd
out
add
mov
inc
bound
cmpsb
jns
jns
and
stos
popa
in
mov
adc
test
mov
imul
mov
cmc
pop
fs
lahf
push
mov
fsts
push
mov
sub
or
xchg
mov
ja
scas
lock
jae
or
inc
jae
fsub
xor
imul
or
std
roll
in
jmp
nop
sahf
xchg
fsubs
sbb
inc
sub
cmp
mov
sbbl
clc
jmp
lods
test
das
mov
iret
jo
cli
pop
cld
mov
cmp
outsb
clc
or
xor
cs
mov
mov
dec
stos
int3
pushf
into
pop
out
pop
mov
scas
fwait
sub
orb
mov
insb
add
sbb
push
mov
lret
out
jae
std
push
dec
orl
nop
adc
cwtl
ret
mov
inc
test
repnz
mov
repnz
add
mov
xchg
mov
scas
fildll
pushf
push
mov
divb
stos
sub
jb
cmc
pop
mov
adc
shrb
cmp
inc
int3
jns
in
cmc
push
jnp
dec
popf
int3
mov
xorb
cmp
jbe
loop
mov
push
or
adc
scas
push
popf
out
pop
mov
in
push
inc
mov
mov
movsl
test
js
push
inc
roll
loop
dec
push
mov
jg
and
pushf
lret
or
movsl
sbb
xchg
sub
push
add
lcall
add
sub
cmp
cmp
fstpl
mov
push
clc
or
sub
mov
cmp
mov
fidivs
mov
mov
test
sub
daa
andb
bound
in
pop
push
mov
inc
pop
loop
pop
xchg
push
insb
pop
gs
xor
adc
fstps
lea
mov
les
fstpl
pop
jns
lock
sarl
pop
into
jecxz
mov
mov
sub
das
test
jg
div
addl
push
jne
in
popa
inc
sbb
fildl
psubq
cs
mov
insb
stos
fcmovu
pop
test
cmp
arpl
paddq
sahf
and
and
dec
jmp
bound
pop
xor
aad
outsb
sub
jle
jbe
jle
cmpsb
mov
xor
orb
mov
xlat
push
push
rorl
mov
jge
mov
int3
aaa
adc
enter
or
add
mov
dec
dec
repz
pop
push
addr16
adcl
shrl
adc
mov
sub
push
xchg
nop
jecxz
insl
es
mov
jle
jl
out
faddl
test
cli
mov
inc
inc
jbe
pop
outsl
mov
mov
leave
adc
imul
push
push
xor
xor
jecxz
jle
lods
push
mov
aas
into
in
sub
out
and
add
loope
sub
adc
outsb
xorl
xchg
mov
and
mov
mov
insb
stos
mov
adc
cld
cmc
mov
pop
or
cmpb
mov
cs
or
stos
jno
xor
arpl
jp
cmp
arpl
xchg
fwait
xlat
cmp
mov
ret
xlat
push
mov
adc
js
or
mov
cltd
jae
ret
dec
mov
leave
xchg
stos
cmpsl
fistl
aas
mov
add
add
test
scas
mov
repnz
loop
dec
or
out
sub
imul
popa
bound
and
xor
push
xor
fcomp
and
adc
pop
adc
xor
pop
or
push
jg
push
subb
mov
pop
and
mov
les
imul
mov
jns
jb
int3
cmp
mov
repnz
jge
xor
in
dec
shlb
xor
push
mov
imul
mov
mov
incl
outsb
outsl
mov
lods
mov
sub
int
pop
sbb
cmp
addl
pop
or
and
ret
sub
jns
lahf
pop
jecxz
leave
or
and
cmp
ret
sbb
ljmp
enter
dec
scas
adcb
fisttpll
cmpsb
jle
or
add
xor
mov
popa
dec
movsb
inc
push
sbb
loop
inc
sub
dec
adc
std
adc
es
pop
std
sub
mov
mov
fnstcw
hlt
mov
sub
sbb
sub
jb
pop
sub
mov
pop
mov
stos
adcb
pop
and
or
lea
and
and
je
pusha
add
inc
sbb
out
nop
dec
in
adc
jns
mov
test
sahf
pop
sbb
test
in
and
or
fldenv
inc
mov
imul
adc
pusha
adc
xchg
addr16
jnp
out
test
frstor
hlt
dec
fs
add
or
popa
into
xor
fldl
cmp
pop
rcl
cmpsb
push
inc
lret
in
in
das
cli
mov
ret
into
ret
pop
loop
inc
out
mov
orl
lcall
in
sti
pushf
add
pop
cmp
test
imul
addr16
bnd
xchg
cmp
mov
in
xor
mov
les
enter
iret
int3
jl
mov
ljmp
jo
loop
jae
push
into
imul
xor
cld
sub
mov
mov
inc
sbb
repnz
fucomi
hlt
mov
scas
ss
push
xchg
rorl
out
dec
fadd
cli
xchg
ret
jae
aas
fwait
cmp
lods
aas
repz
push
fnstsw
mov
push
dec
icebp
out
pushl
and
cwtl
das
pop
xchg
sahf
loopne
addl
add
gs
cmpsb
mov
pusha
sahf
pop
loopne
dec
sbb
js
dec
nop
pop
jge
inc
gs
stos
insl
add
inc
cmpsb
inc
mov
add
adc
push
inc
sbb
xlat
mov
cli
jae
add
mov
popa
inc
ret
adc
pop
ss
mov
jg
test
ss
movsl
or
enter
push
adc
mov
das
stos
adc
adc
sbb
cld
mov
cltd
sbbb
enter
jb
out
lods
pop
mov
out
fxam
and
cmp
mov
pop
adc
mov
inc
mov
jmp
lret
inc
jmp
lea
arpl
jmp
hlt
or
xchg
inc
xchg
mov
mov
out
sbb
add
mov
push
push
jbe
aas
add
jne
nop
push
sbb
xchg
mov
sub
pop
lret
sahf
ds
xor
in
jl
das
out
test
imul
call
clc
xchg
jmp
and
arpl
add
in
aas
aaa
dec
pop
cmp
push
scas
cs
mov
cmp
aam
es
sahf
fld
rol
not
mov
cmp
cmc
popa
mov
es
xchg
jb
xchg
aas
in
cmpsl
bound
insl
push
mov
lea
pop
fwait
fwait
add
push
movsl
push
mov
and
inc
mov
jg
rclb
rcrl
cmp
cmp
test
sub
mov
jns
sub
mov
movsb
scas
xchg
cmpsl
mov
jnp
and
mulb
clc
leave
xchg
sbb
shrb
ret
jge
stos
lock
test
jae
test
int
and
cmpsb
sub
aam
push
test
add
fwait
cmp
je
sbb
xor
adc
std
insl
roll
xor
stc
jo
mov
into
and
jp
fnstcw
push
sbbl
mov
mov
repnz
dec
mov
ret
mov
mov
fimuls
sub
dec
fistps
pop
insb
push
cmp
lds
jl
push
in
int
adc
dec
and
cmpsb
aam
fidivrl
xchg
pusha
fisubrs
imul
ljmp
aas
jg
jg
pop
aam
push
inc
test
cltd
or
movsl
stc
adc
lds
cmp
test
call
arpl
je
dec
andb
fnstsw
cs
mov
xchg
mov
xchg
aam
dec
rcrb
je
xchg
xor
sbb
fs
into
das
jne
test
jle
pop
lods
add
fldcw
js
inc
and
jg
mov
cs
and
lcall
shrb
iret
jno
xchg
es
aaa
int3
cltd
adc
and
imul
imul
add
movsb
or
loopne
cmpl
scas
xor
and
in
jge,pn
or
xchg
icebp
inc
movsl
mov
shl
pop
fsubl
aaa
daa
cmpsb
mov
pop
adc
stos
mov
mov
test
fldcw
jns
stos
dec
push
xchg
push
adc
jo
xor
outsl
in
mov
cmp
pop
add
fwait
mov
inc
add
fwait
test
inc
inc
mov
test
stos
fs
mov
dec
call
sub
jno
and
imul
imul
adc
mov
push
repz
mov
aaa
or
sbb
mov
loope
push
das
cmpsl
lcall
mov
inc
push
cmp
push
addr16
jo
sub
ret
pop
or
cwtl
std
pop
mov
or
sahf
sbb
pop
or
push
sub
lret
push
push
jo
jo
leave
dec
imul
dec
inc
negb
pop
aaa
pop
inc
push
add
mov
ds
ret
dec
inc
push
inc
movsl
sub
shl
add
das
push
xchg
sti
hlt
xor
xchg
mov
pop
dec
dec
out
pop
addr16
fdivr
pop
dec
lea
pop
loopne
cwtl
pushl
fwait
std
push
int
insl
inc
and
dec
sbb
popf
enter
rcll
fs
icebp
sbb
aas
fdivrl
sbb
std
add
dec
mov
negl
mov
stc
push
jge
hlt
adc
cmp
or
stos
stc
xchg
cltd
inc
out
jnp
scas
dec
je
aam
cltd
fwait
inc
cmp
xor
push
fisubrs
jge
lret
sub
sahf
out
push
scas
hlt
into
adc
das
sub
add
test
push
mov
mov
cmp
adc
imul
or
pop
jp
pop
divl
add
or
das
pop
sub
addr16
jl
out
pop
pop
mov
jle
mov
mov
xor
push
pop
fucom
outsl
or
and
std
lock
outsb
mov
xlat
pop
cmpsl
adc
cmpsb
shlb
pushf
inc
mov
jle
popf
sub
xchg
pop
cltd
dec
adc
clc
mov
jnp
ret
mov
into
popf
call
notl
call
dec
push
repnz
pop
mov
inc
ss
lret
and
push
test
pushf
je
fisubrl
mov
aam
inc
dec
scas
xlat
repnz
mov
pop
dec
xchg
das
pop
inc
inc
mov
inc
add
loop
push
cmpb
jnp
hlt
cwtl
mov
or
sahf
mov
stc
cmp
push
lcall
fdivp
or
dec
sub
call
seta
jmp
movsb
and
and
adc
push
orb
div
push
cmpsb
inc
lea
jg
push
jmp
ffree
sbb
out
cmpsl
popf
mov
in
loopne
imul
ja
xchg
dec
sti
dec
outsb
or
sbb
xchg
test
mov
addl
lret
cld
xor
scas
aaa
or
mov
ja
loope
popa
pop
nop
stos
xchg
adc
ret
sub
jbe
pop
aad
ljmp
push
rcrl
mov
shll
cmp
jbe
mov
pop
sub
mov
daa
dec
sbb
loope
add
femms
fldcw
mov
fstpl
mov
jae
mov
lods
push
jmp
pop
push
shlb
ds
fadds
insb
xchg
push
inc
sub
mov
mov
add
sbb
int
or
divb
mov
pushf
sbb
sub
jecxz
sbb
mov
ficoms
add
imul
in
addl
pop
aas
rcr
ss
jp
into
add
mov
push
xchg
sbb
or
push
mov
adc
scas
into
movsl
mov
xor
ljmp
es
or
and
aaa
jmp
sbb
ud1
inc
push
pop
sub
inc
into
nop
fistpl
addr16
clc
lret
sub
sbb
push
and
jecxz
pop
or
nop
loop
push
lock
mov
test
fistpl
add
ljmp
gs
sub
mov
sub
mov
scas
sbb
fdivrs
pop
pop
add
lods
add
pop
sub
lret
cmp
pop
fidivrs
iret
mov
dec
out
mov
lods
es
leave
in
test
push
vmwrite
jg
test
mov
fninit
out
push
int
lahf
pop
cmp
inc
and
addr16
push
jge
mov
mov
je
je
popf
add
mov
dec
sub
sbb
dec
fsubrs
pop
xchg
outsl
lods
ret
js
push
add
daa
jb
arpl
dec
fisubrs
psubb
rorl
push
in
nop
inc
or
iret
scas
mov
and
add
mov
in
lods
es
stc
sahf
insl
loopne
or
fildll
sbb
mov
cmpl
out
and
imul
mov
pop
nop
fcoml
push
fwait
imul
fs
addr16
loopne
adc
inc
mov
or
mov
mov
mov
mov
xchg
jb
mov
inc
jno
cli
bound
test
pop
es
adc
enter
add
call
lcall
push
push
aaa
arpl
sub
push
mov
push
in
pop
inc
es
sbb
lds
jp
ss
add
and
out
iret
rorb
push
lods
int3
jle
mov
adc
push
out
add
addr16
ja
sub
add
dec
xor
ljmp
and
mov
inc
sbb
outsl
int
lcall
inc
jle
mov
mov
cld
push
test
mov
fwait
xchg
jp
sbb
jge
pop
hlt
push
adc
movsl
repnz
push
add
jbe
mov
cwtl
push
cmc
jno
mov
jge
jbe
iret
mov
jle
xor
and
test
addr16
stc
mov
cmpsl
hlt
shrb
fsubr
ret
adcb
rcrl
std
jo
inc
divb
jle
push
cmpsb
gs
loopne
jo
lea
push
sbb
sub
int
push
int
jg
sbb
or
push
sbb
je
jl
lahf
fs
pop
adc
xchg
clc
aad
and
xchg
ss
ss
fiadds
jbe
ret
scas
mov
ja
xor
dec
jg
mov
sbb
xorl
ss
mov
out
daa
or
stos
mov
inc
adc
push
and
pop
into
mov
cwtl
xchg
dec
shrb
cwtl
jno
data16
stc
push
mov
repnz
mov
and
or
or
add
mov
cwtl
rcrl
ds
xchg
adcb
add
js
fwait
adc
sbb
sbb
test
lock
pop
xchg
sahf
lods
sub
jno
xchg
mov
cmpsb
fiadds
pop
dec
jmp
push
cmp
fsubr
or
add
jo
push
cld
add
mov
xchg
and
push
insb
js
ficomps
ja
inc
inc
cmpsb
test
insb
adc
jecxz
call
push
out
loope
xor
xor
cmp
fisubrs
lret
xor
rcrb
cmp
mov
sub
leave
popf
fcmovu
inc
cs
cmpsb
xor
movb
test
rol
push
loopne
and
or
xor
lods
cmp
xchg
out
popa
mov
push
sbb
cmc
and
add
stc
xchg
pop
mov
mov
aaa
add
vphaddwd
mov
scas
subl
adc
test
jle
mov
jle
mov
insb
sub
gs
fwait
fildll
dec
cmp
inc
out
xchg
and
shl
ds
and
repnz
mov
lcall
mov
out
out
xor
xor
pop
mov
pusha
mov
xchg
cs
inc
mov
insl
pushf
add
loop
test
and
aam
cmp
mov
mov
mov
push
lret
fsubrs
pop
lret
sbb
lock
mov
lods
iret
add
push
adc
sub
sub
or
fdivp
adc
or
mov
das
nop
pushf
ds
push
outsl
in
imul
sti
mov
mov
cmpl
je
add
sti
dec
lcall
dec
int3
xor
inc
enter
sahf
arpl
lds
or
or
loope
push
push
enter
lahf
call
sbb
fildll
mov
adc
punpckhdq
fdivrl
lods
sub
fbld
ljmp
xchg
or
and
sbb
add
hlt
cmp
cmpsl
popa
iret
ficoml
xchg
lcall
les
pusha
add
xchg
popa
cld
outsl
xchg
dec
aam
dec
sub
jecxz
mov
xchg
push
stos
jno
mov
cmp
std
push
inc
je
into
and
gs
popa
xor
testb
cmp
outsl
shlb
daa
mov
inc
dec
xor
push
pusha
jnp
std
mov
adc
mov
popf
pop
push
in
lret
mov
ficompl
mov
cmp
jp
mov
push
xchg
scas
push
sbb
rcrl
in
fadd
daa
sbb
xor
rcll
mov
jb
in
pop
inc
and
dec
fsub
pop
jle
cmc
insl
cmp
xor
mov
ret
dec
sbb
mov
add
inc
jge
das
test
imul
cmc
add
cltd
dec
mov
pusha
xlat
xchg
ret
inc
mov
mov
mov
jge
es
and
test
sbb
lret
movl
arpl
mov
sahf
or
ljmp
jg
jmp
mov
sbb
movsl
mov
fcmovnu
lcall
leave
push
jns
rorl
mov
or
jne
adc
pop
xchg
push
push
pop
mov
and
dec
pop
dec
lds
and
and
pop
jb
jae
mov
xchg
mov
xchg
pop
pop
fdivrs
mov
xor
into
aas
lcall
jl
fldenv
and
jae
mov
push
fs
cmp
mov
fwait
pop
enter
out
orb
imul
jo
imul
insb
pop
clc
fidivrs
cmp
push
movb
mov
loope
sub
icebp
pop
fcoml
cmpsl
aad
xor
push
fwait
pop
mov
sub
jge
xchg
mov
pop
sti
inc
ss
fstpt
xchg
fmull
mov
shll
ja
mov
rclb
mov
gs
sub
lcall
cmp
or
movd
fldenv
cltd
inc
lret
rorb
sbb
jno
repnz
sub
sti
out
sar
mov
push
xchg
adc
fisttpll
push
daa
or
or
fptan
push
addw
cmp
roll
lds
rcrl
mov
stos
mov
xchg
gs
rolb
lods
outsl
enter
sub
rorb
xchg
push
inc
sbb
ja
clc
inc
aas
mov
call
push
repz
sbb
std
sbb
popa
mov
in
sbb
cwtl
dec
lret
je
push
fwait
cwtl
xlat
push
mov
jl
pop
lahf
pushf
push
mov
daa
cli
lcall
and
pop
bnd
imul
pop
jno
sbb
mov
jae
out
xor
push
mov
into
pop
popf
mov
mov
pop
imul
das
in
clc
repnz
sub
movsl
inc
pusha
arpl
xchg
out
mov
sub
push
cs
jno
loop
fisubs
xchg
sub
test
jge
pop
push
mov
shlb
nop
sbb
ljmp
adc
imul
jne
leave
sti
pushf
push
dec
pusha
stos
sbb
push
jb
orl
push
jp
mov
cmp
out
and
mov
addr16
or
mov
int
inc
ljmp
xchg
jae
cmpsl
shr
in
packuswb
das
fwait
dec
jae
fistl
or
popa
scas
cli
add
bound
scas
shlb
cmp
adc
xlat
sub
shrb
or
adc
aaa
pop
stos
lret
and
sbb
mov
pop
outsb
add
scas
test
out
sbb
push
mov
adc
mov
push
adc
out
adc
into
pop
sbb
or
sub
add
nop
test
aam
adc
in
scas
pushf
jl,pn
and
xchg
setle
inc
sbb
ss
and
push
outsb
das
sbb
ss
sub
dec
inc
jo
in
push
xchg
cmpsl
pop
pop
stc
cld
fmuls
jmp
imul
lods
in
mov
cmp
and
sub
push
outsb
pop
sub
xchg
outsl
shl
fwait
cld
pop
sbb
xchg
fisttps
insl
sarb
xchg
cmc
mov
out
cltd
cmpsb
mov
mov
xchg
pause
stos
cmp
adcb
sub
addr16
xor
mov
cltd
mov
into
and
fisttpl
pop
push
fstpl
scas
push
insb
inc
jnp
pop
mov
test
mov
push
add
inc
mov
insb
daa
mov
movsl
xor
orb
xchg
xlat
jbe
lds
lock
sbb
pop
outsl
sbb
push
jl
sbbl
lods
shrl
jg
ja
pop
int3
ret
es
shrl
cmp
in
mov
shlb
pushf
fcoml
cmp
enter
mov
jecxz
imul
mov
dec
pop
shlb
mov
inc
cld
stc
shll
inc
adc
mov
mov
pop
xchg
test
jecxz
into
sub
in
cmp
mov
ja
jns
xor
pop
and
test
loop
mov
repz
rcr
xchg
add
lea
dec
lahf
dec
sbb
pusha
fwait
sub
lods
push
iret
fwait
cli
dec
pop
cld
jmp
clc
jg
inc
jne
ja
leave
dec
fwait
xor
out
rorl
pop
xchg
cld
pop
sbb
and
aas
js
pop
jns
mov
pop
cs
pop
mov
push
xchg
jne
xchg
adc
mov
leave
mov
jl
insl
jno
hlt
icebp
imul
jmp
mov
fwait
jae
mov
test
mov
lods
pop
xor
and
cli
xor
fildl
pop
inc
push
fistpl
sahf
sub
mov
push
jmp
sub
mov
pop
sti
mov
das
push
mov
in
fcomps
add
leave
sbb
push
or
scas
imul
pop
sub
insb
in
xlat
xchg
inc
dec
insb
in
mov
lods
ds
std
sar
push
sahf
pop
imul
inc
test
jmp
push
xor
sti
lods
or
das
pop
movq
adc
mov
pop
test
call
repz
scas
mov
adc
or
call
cltd
ljmp
lods
mov
dec
jl
mov
sub
jbe
mov
pop
dec
clc
loope
mov
mov
fdivl
push
xchg
dec
push
xchg
and
xchg
pop
push
test
mov
cmp
in
stc
or
bound
and
sbb
fistl
mov
sbb
iret
pushf
xchg
les
testl
mov
roll
jl
push
lock
nop
in
pop
jle
cmpl
dec
xor
mov
sbb
push
sbb
pop
inc
pop
adc
rclb
sbb
push
or
imul
and
or
and
jecxz
lock
add
xchg
sub
sub
fists
pop
mov
sti
dec
imul
cmc
std
cmp
inc
mov
adc
imul
adc
rorb
bound
out
pop
sub
rcll
aam
movl
arpl
mov
test
popf
repz
adc
xor
mov
popf
imul
sbb
iret
test
andl
xchg
inc
cli
loopne
jecxz
cs
lea
sub
sbb
das
dec
cmp
dec
pop
nop
cli
enter
add
fs
movsb
mov
adc
or
std
loopne
push
dec
stos
hlt
outsl
out
push
mov
cld
sbb
xchg
dec
mov
clc
jecxz
xor
jmp
sbb
mov
sub
add
cltd
std
mulb
je
or
sti
sbb
mov
pop
mov
push
in
mov
pop
pop
ja
test
not
fistps
mov
inc
aas
pop
les
popf
inc
ja
in
out
scas
adc
mov
mov
push
ret
stos
orb
iret
add
rol
mov
sarl
sbb
inc
cmp
xor
jno
jge
les
in
and
test
mov
iret
fs
jmp
push
insb
shrb
dec
mov
jl
ret
loope
dec
cmp
popf
pop
xchg
dec
mov
inc
shrl
ret
mov
cmp
ret
aad
lods
mov
or
jnp
cld
mov
jecxz
dec
sbb
fldenv
sbb
inc
sub
jl
test
cmp
cld
icebp
sbb
cmc
or
imul
push
lods
testb
enter
outsl
push
insl
xchg
test
aas
and
xor
inc
mov
inc
aaa
and
repnz
ja
ret
adc
movsb
hlt
mov
pushf
push
xchg
mov
fsubl
mov
ljmp
js
sbb
lcall
sbb
mov
fadds
sbb
mov
pusha
test
inc
jp
jmp
outsl
call
inc
loopne
xchg
cmpb
sbb
jmp
addl
sbb
popf
test
pop
mull
sbb
mov
adc
and
das
cmp
mov
push
ret
ret
pop
call
arpl
in
jb
jle
push
mov
cld
push
sbb
shll
xchg
leave
int
adc
push
add
stos
ljmp
bound
sbb
inc
sub
sbb
inc
push
xor
shlb
jmp
in
sbb
sbb
dec
sbbl
shl
jne
data16
mov
sub
cwtl
mov
push
dec
mov
inc
xor
add
in
rolb
popa
idivl
xchg
les
fidivrs
sahf
xor
sub
mov
jne
push
xor
jle
popf
test
ficoms
ds
popf
lcall
arpl
inc
xor
inc
sub
cltd
repz
fwait
mov
mov
xchg
add
mov
push
sub
push
jge
push
mov
adc
xor
sbb
call
rep
adc
pop
push
push
ljmp
loopne
adc
jecxz
clc
gs
cmp
jb
mov
push
mov
lcall
jge
cmc
test
leave
test
add
push
mov
pop
out
nop
rolb
xor
inc
inc
dec
cmp
xchg
mov
xorl
xor
sub
mov
in
dec
cmpsb
ss
mov
push
cmp
lret
sbb
idivl
insl
rolb
push
push
repz
jmp
jnp,pt
cmp
sbb
xchg
dec
pop
mov
test
add
jno
sahf
push
ss
clc
ret
inc
repnz
sbb
mov
xor
mov
sbb
push
ds
iret
pop
cmp
jp
popf
mov
pop
fisubs
je
jl
lret
gs
aas
xchg
test
or
in
mov
shlb
stos
out
daa
xchg
inc
loop
mov
push
mov
mov
sub
out
inc
into
sarl
ja
add
sti
mov
je
or
lcall
cmpsl
mov
dec
es
push
mov
popf
and
jo
loopne
pop
mov
rol
fdivl
pop
cs
dec
cmp
and
adcl
mov
outsl
xchg
lock
sti
lret
mov
and
test
sbb
sti
xchg
mov
stos
loope
xchg
cs
aas
push
iret
mov
stos
aad
xor
dec
inc
and
sahf
xchg
dec
sbb
std
mov
andl
sub
ljmp
cmp
in
inc
repz
push
outsb
cmpsl
outsb
fildll
jmp
dec
jbe
lea
test
mov
lods
pop
lret
sti
xchg
dec
push
lret
test
fisubl
notb
test
in
repz
dec
jb
mov
xchg
inc
pop
sbb
xchg
and
cmpsl
cmc
adc
sub
cs
sub
cmpsl
xor
enter
cltd
imul
frstor
pop
sbb
adc
pop
adc
cli
jb
adc
push
ds
leave
adc
clc
inc
jmp
enter
xor
sub
cltd
les
testl
xchg
inc
sahf
sub
repnz
xchg
das
inc
cmpsl
jbe
or
mov
les
aaa
cmpb
add
mov
cmpsl
cmc
adc
jo
mov
icebp
xorl
xlat
int3
and
sub
cmp
mov
popa
push
add
jo
inc
pop
add
jl
xchg
test
pop
inc
fmuls
cwtl
mov
and
cltd
pop
inc
jecxz
repnz
fsubl
add
jbe
sub
xorl
sub
lds
movsl
in
pop
loopne
adc
mov
cmp
dec
jl
cmpsb
jno
push
pop
push
test
leave
shll
mov
into
jb
mov
push
insb
pop
rcrb
cli
pop
call
aaa
xor
mov
insl
inc
pushf
clc
mov
push
mov
mov
adc
dec
je
jmp
pop
xchg
fs
jae
adc
xchg
movsl
out
or
test
enter
adc
dec
sub
fdivl
ds
int
out
js
dec
add
and
ficomps
fmuls
sub
and
jbe
cmp
mov
mov
dec
sub
aad
aas
lret
test
inc
mov
les
pop
aad
mov
pop
rcr
sbb
aam
pop
inc
pop
ss
incl
push
cltd
jae
cvttps2pi
lret
push
jne
dec
xor
jge
pop
push
repnz
inc
cmp
rorl
pop
cmp
js
stos
inc
xor
adc
daa
adc
jmp
inc
lods
dec
pop
push
mov
jbe
mov
into
in
pop
out
mov
mov
mov
add
dec
mov
sbb
pop
mov
cmc
jp
daa
cli
dec
stos
inc
pop
mov
xor
gs
inc
aaa
xchg
ret
sub
ficompl
lea
or
mov
push
cmovno
push
sub
test
or
and
mov
ds
push
mov
sub
cmp
xchg
xor
adc
aad
mov
and
xor
mov
imul
pop
mov
adc
xlat
mov
push
lahf
addb
js
mov
popf
and
push
and
mov
adc
push
cmpsb
pop
ljmp
test
xchg
xor
add
mov
xchg
dec
pop
scas
psubusw
andl
pop
rorb
adc
cmp
or
sbb
or
idivl
xchg
fsubp
loop
imull
cld
sbb
pop
iret
or
enter
jns
cs
sahf
sub
call
pop
sub
repz
shll
rolb
test
addr16
aad
xlat
notl
jl
fstpt
es
jne
into
data16
or
ffree
ficoms
call
repnz
iret
sbb
push
mov
jl
jle
dec
xor
sub
and
xchg
pop
jmp
push
push
mov
aaa
mov
jecxz
movl
call
and
nop
fists
loopne
jl
push
xchg
adc
or
push
jns
lret
stc
sti
xchg
mov
xchg
mov
outsb
clc
jb
and
cld
icebp
mov
inc
xor
lcall
mov
in
or
jns
hlt
push
out
int
ffree
out
ret
sub
imul
outsb
lahf
xchg
or
or
push
pushf
test
adc
cmpsl
push
sub
pop
jnp
stos
mov
clc
jle
jmp
jns
mov
fdivs
gs
pop
les
scas
mov
mov
xor
cmp
mov
and
push
or
push
fisubl
rolb
loopne
ds
and
xchg
or
sbb
or
jns
lcall
movsl
std
addl
mov
pop
movsl
iret
imul
in
rolb
jl
scas
mov
cli
pop
jmp
or
xor
push
shrl
sub
dec
nopl
call
sbb
rcrb
pop
add
xchg
and
xchg
sub
shrl
pop
stos
in
xor
jge
in
out
fsubs
lea
inc
mov
orl
mov
adcb
int
xor
cmc
pop
sbb
ljmp
push
xchg
or
push
in
cmpsl
jno
mov
pop
mov
inc
cmp
arpl
das
add
aas
out
and
out
pop
sub
dec
push
sbb
dec
and
adcb
or
mov
inc
lods
stc
insb
jnp
pop
jle
into
lock
iret
rcl
gs
or
call
xor
xchg
sub
fisttpl
sarl
cmc
outsl
rclb
xor
cmp
add
jbe
jg
sub
cmp
mov
jno
lds
out
test
outsb
movl
ljmp
ja
inc
imulb
and
or
mov
cmp
push
pop
xlat
adc
push
clc
loop
jmp
mov
inc
sub
test
mov
das
loopne
add
inc
mov
ffreep
scas
inc
into
mov
xor
mov
mov
out
ja
jmp
js
arpl
into
test
mov
pushf
push
loop
icebp
ds
cmpsb
test
mov
jl
sarb
shrb
outsl
jle
mov
clc
scas
cs
mov
ja
push
push
xchg
cltd
lods
sahf
in
push
cmc
fwait
xor
jno
pop
sbb
mov
incl
pusha
fs
pop
jecxz
push
mov
movsl
lret
mov
ds
adc
jne
push
sub
arpl
out
mull
sbb
jle
inc
mov
push
stc
cmp
mov
icebp
shlb
stos
test
out
sub
std
xor
push
xchg
adc
rclb
enter
mov
push
xor
std
mov
je
ja
aam
mov
out
xlat
mov
jmp
loopne
out
mov
mov
nop
pop
sub
mov
mov
jle
popa
pop
adc
movsl
mov
pushf
sub
or
jle
out
dec
xchg
test
popf
add
iret
pop
sbb
push
ret
push
aad
inc
mov
jg
inc
adcl
adc
outsb
ret
xchg
imul
enter
in
dec
in
stos
mov
jae
test
ret
cmp
int3
mov
enter
loopne
into
sub
iret
cmp
xchg
add
mov
jle
add
stos
movsb
jbe
pusha
sub
clc
repnz
stos
or
jg
dec
int
mov
or
rclb
andb
pop
pop
mov
lcall
adc
mov
into
mov
out
mov
leave
cli
out
scas
nop
addr16
mov
jp
sbb
aam
jno
repnz
rorb
cmpsb
xor
pop
and
mov
in
sub
adc
cwtl
nop
xchg
popf
inc
mov
loopne
int3
jns
sti
inc
dec
nop
push
dec
iret
push
sarl
in
dec
and
cltd
outsb
loop
fimull
mov
sahf
xchg
cwtl
ret
daa
dec
pop
or
cmc
nop
aam
addr16
test
popa
outsl
icebp
push
mov
inc
lret
inc
or
mov
sbb
mov
mov
cmp
repz
sub
mov
gs
mov
ret
leave
xor
fs
iret
std
sbbl
sbb
pop
fcompl
sar
fwait
inc
jge
in
into
daa
addr16
int
dec
xchg
pop
mov
sub
icebp
mov
mov
or
jns
mov
xchg
xchg
pop
arpl
dec
mov
push
inc
fdivrs
popa
sub
cmp
sti
mov
jo
jl
scas
and
add
dec
outsb
xlat
mov
lea
adc
push
aad
aam
adc
mov
pusha
mov
mov
call
idivl
std
xor
sub
cmp
add
shll
mov
mov
mov
fstps
mov
lock
stos
lds
cs
jne
pop
sarl
mov
out
sarl
xor
in
pop
mov
data16
out
and
and
sahf
inc
pusha
push
inc
push
test
shlb
ljmp
add
add
jne
std
xor
mov
mov
mov
lahf
cmp
ret
insb
out
dec
dec
lods
mov
mov
daa
cmpsl
lods
or
dec
bound
clc
mov
push
imul
xor
mov
push
mov
icebp
xchg
and
push
pusha
fsubr
sbb
xchg
push
loop
call
mov
adc
pop
pusha
lret
in
pop
mov
aaa
ljmp
jmp
gs
xchg
and
cmpsb
hlt
iret
or
shl
jae
mov
add
push
pop
aaa
lods
cmp
inc
test
adc
fdivrl
cmp
das
add
ficompl
mov
cli
dec
std
mov
inc
inc
test
or
nop
xor
adc
inc
mov
cmp
jns
aaa
xchg
sub
adc
sub
popa
mov
jg
cltd
xor
jnp
ret
lods
ljmp
sbb
out
or
in
mov
aam
mov
and
ret
mov
fsubp
aad
movsl
add
jns
scas
sbb
jg
pop
xchg
scas
fstl
pop
ficomps
pop
adc
loop
movsl
fildl
cmp
test
frstor
xor
pushf
mov
add
lds
lds
add
fiadds
and
sbb
sahf
fs
jge
repz
xchg
cwtl
mov
xchg
mov
xor
pop
mov
adc
adc
xor
test
dec
and
lds
es
dec
cmp
std
dec
je
add
add
pushf
jbe
add
and
out
mov
sub
dec
adc
dec
fidivrs
je
popa
jnp
cmp
adc
dec
std
imul
xchg
adc
xchg
xor
push
lods
add
xchg
and
idivl
jp
stos
xchg
dec
fbld
sahf
sub
lea
push
push
cmpsl
cmpsl
jo
mov
mov
clc
loope
jb
insl
fsubl
mov
xchg
pop
int3
sub
push
adc
cmpsb
adc
lahf
aam
inc
and
and
dec
add
fbstp
in
outsl
sbb
rorb
icebp
or
aaa
mov
inc
pop
add
push
popl
push
and
jge
cmp
test
fs
not
fdivrs
or
shrl
mov
sub
std
xor
xor
mull
popa
jne
jbe
dec
mov
xchg
xor
in
cmp
xchg
imul
sub
mov
pop
xorl
cmp
inc
mov
jg
pop
inc
xor
es
push
loopne
sbb
sub
aas
push
mov
or
xorl
ret
fildll
adc
mov
rolb
pop
fldenv
mov
adc
pusha
add
dec
sar
fstpt
inc
fadds
mov
mov
adcb
and
mov
dec
lods
inc
push
flds
add
lods
mov
lret
mov
push
adc
add
mov
jno
arpl
repnz
jmp
add
adc
imul
push
stos
maskmovq
notl
cmp
xor
push
jge
std
push
jo
inc
mov
cmp
dec
es
push
jns
cs
mov
xor
rorb
push
mov
xor
pushf
mov
lahf
mov
popa
lcall
cmp
dec
mov
push
xchg
adc
leave
sti
cmc
and
cmp
xor
cmp
mov
outsl
fs
and
enter
push
lods
out
mov
push
pop
cld
mov
stos
and
adc
adc
jmp
lock
jmp
arpl
cmp
test
xchg
shll
or
inc
lcall
pop
ljmp
xchg
inc
xlat
push
push
movsb
sbbb
fisttpll
lcall
cmpsl
jl
lods
mov
fwait
mov
scas
sub
popf
or
jge,pt
insl
or
xor
inc
cld
pop
jb
xor
adc
xchg
mov
xor
lods
in
mov
jecxz
les
inc
shlb
jg
xchg
sbb
xor
jl
mov
lds
out
mov
mov
dec
daa
mov
pop
inc
nop
pop
dec
xchg
jbe
ret
cld
pop
hlt
push
test
inc
or
lcall
xchg
cmp
arpl
xor
clc
jno
sub
movsl
sub
push
push
sub
or
mov
fcomp
enter
push
xchg
lret
xchg
sbb
xlat
in
mov
inc
and
cmpsl
or
test
mov
sub
pop
push
lcall
sub
push
push
test
insl
lods
mov
mov
fs
push
push
leave
jb
pop
xchg
test
addr16
fidivrl
outsl
lret
xchg
fucomp
adc
fsubs
mov
and
pop
repz
outsb
loope
aas
inc
push
jmp
and
dec
mov
jae
ss
push
fmul
cmpsb
js
jmp
sbb
xchg
jecxz
inc
sbb
push
mov
xchg
adc
sarl
mov
add
test
stos
mov
inc
idivl
jno
in
aas
adc
imul
dec
hlt
inc
jns
jg
out
icebp
push
mov
les
insb
push
hlt
sarl
shl
jb
pop
jecxz
movsb
mov
jne
dec
pop
cmpsl
fnstsw
sti
int3
jo
xor
dec
mov
inc
ss
cmp
out
cmp
mov
inc
out
test
scas
cld
or
or
mov
dec
mov
lods
fidivs
jnp
cmp
out
lods
out
mov
rclb
sub
push
xlat
mov
stc
pop
add
dec
xchg
adc
sahf
outsb
jmp
loopne
add
loopne
gs
in
add
and
mov
dec
inc
inc
cmpsl
pop
in
sbb
test
arpl
enter
inc
adc
add
sub
inc
out
movsb
gs
movsb
jg
lret
or
mov
daa
mov
inc
cltd
add
sub
push
negb
push
test
pop
add
out
add
mov
lahf
outsl
aam
lds
mov
dec
xorl
push
aas
addr16
adc
cwtl
adcl
mov
repz
cli
add
daa
pop
mov
add
or
sbb
add
mov
imul
and
outsl
fwait
and
enter
sub
les
cmpb
jno
cltd
sub
loop
pop
aad
add
xchg
xchg
in
stos
rcrb
icebp
jp
pop
and
repz
jne
popl
into
jle
cmp
out
jmp
mov
dec
stos
jge
in
xchg
dec
setl
push
sbbl
push
in
nop
hlt
dec
pop
ss
pop
cwtl
and
data16
push
pushf
jp
int3
in
push
test
sbb
sub
dec
imul
insb
xor
shlb
xchg
in
scas
sub
jne
fnstcw
adc
xor
int3
pop
or
loope
shll
jl
repnz
adc
xchg
jbe
clc
add
test
pusha
fldcw
cmp
push
pop
cmp
sbb
icebp
xchg
nop
adc
fdivrl
jcxz
clc
lret
sbb
jb
sub
sub
bound
shrb
push
jnp
xor
xchg
and
and
mov
or
hlt
test
aaa
push
jmp
sub
fisubrs
pop
stos
fnsave
mov
mov
gs
and
sbbb
push
push
dec
pop
cwtl
inc
das
ds
mov
dec
push
imul
mov
dec
mov
fcmovnb
popa
hlt
mov
or
add
or
aaa
repz
sub
ja
dec
pop
popf
in
stc
pop
sub
dec
jae
mov
fs
sub
dec
popf
fdivrl
arpl
cwtl
lods
insl
out
cmp
cltd
or
sub
pushf
enter
jnp
loope
mov
mov
adc
xor
pop
test
xor
mov
jge
mov
or
stos
call
cld
xchg
bound
loope
in
into
jns
adc
mov
or
std
xchg
sub
or
insb
and
insl
test
push
xchg
pop
jo
andb
sahf
push
sub
call
adc
add
add
insb
fdivrs
bound
cmp
je
push
shl
shrb
jl
jl
js
and
mov
pop
dec
sar
xchg
ret
sub
push
test
push
in
xchg
mov
add
mov
mov
gs
mov
mov
jp
mov
mov
cmp
xchg
mov
jl
mov
loopne
outsl
outsb
add
out
mov
fdisi(8087
xchg
out
insb
loopne
lods
pop
popf
xor
sub
and
insl
repz
pop
push
int3
ja
adc
jnp
das
test
push
cli
xchg
cmc
cmp
jecxz
popa
lahf
push
adc
adc
outsl
mov
test
sbb
popf
sbb
fldenv
jnp
std
push
adc
add
push
into
sbb
cmp
int3
out
ljmp
ja
popf
jl
xor
mov
sbb
inc
mov
pusha
mov
inc
inc
into
enter
inc
mov
in
divl
mov
mov
jge
inc
filds
dec
mov
xchg
or
stc
das
imul
adc
loope
nop
int
push
fimuls
jnp
push
fdivrs
rcrl
and
jb
adc
sub
pop
aad
lcall
push
inc
xchg
push
in
movsl
orb
in
ja
inc
mov
or
imul
popl
dec
xor
ret
add
fcoms
outsb
test
outsl
jnp
rcrl
fcoml
push
mov
data16
push
mov
sub
jg
pop
cmc
adc
sbb
jg
addb
jp
mov
mov
mov
clc
and
inc
push
xchg
cmc
mov
lea
addr16
negb
fcmovnb
mov
mov
pop
dec
loope
shrl
aam
sub
add
out
dec
push
cmpsb
insb
jecxz
ds
add
bound
jno
pop
nop
mov
mov
pop
fs
aas
pop
sub
sbb
add
mov
push
xchg
lock
lods
adc
sbb
dec
push
pop
cmp
jns
dec
pop
je
cli
les
shrl
pop
cmpsb
lods
or
xor
sbb
pop
rclb
sti
mov
insb
loope
fsubp
pop
sahf
cmp
jne
adc
xlat
in
and
xchg
roll
in
jb
add
xchg
push
insb
adc
mov
fs
sbb
push
out
mov
shl
dec
aad
xor
daa
add
outsl
lea
xchg
xor
call
dec
movsl
insb
test
clc
icebp
push
cltd
xchg
hlt
and
pop
test
addb
movsl
sub
pusha
and
andb
or
neg
mov
stos
and
xchg
stc
adc
lret
mov
imul
enter
popa
adc
and
jo
add
jg
push
mov
inc
fs
or
sub
les
xchg
xchg
xor
loope
push
dec
aad
ret
imul
dec
out
sbb
adc
jmp
stos
or
mov
dec
pop
jmp
ss
push
fs
jbe
xor
sbb
aam
adc
cmp
mov
aad
daa
and
mov
call
fs
jl
cli
outsl
push
loopne
sti
add
es
fimull
push
sahf
out
sarb
cmp
xchg
mov
or
sub
jle
pop
cmp
shl
sub
lret
int3
int
pop
sub
stos
inc
sarl
out
aas
xor
mov
or
mov
insl
inc
test
in
in
adc
sub
inc
dec
fldenv
clc
xor
out
addr16
int3
sbb
lret
mov
ret
test
inc
les
push
aaa
xchg
mov
mov
jns
subl
fwait
adc
and
inc
loopne
ret
sti
imul
and
add
add
arpl
adcb
fists
mov
fdivp
mov
or
call
movsl
mov
pop
mov
jecxz
xchg
repz
mov
xor
mov
jb
das
iret
fdiv
jge
fidivrl
pop
imul
add
dec
and
lret
aas
cmc
fs
pop
sub
loope
dec
push
push
aaa
mov
inc
mov
xchg
test
xor
xchg
xchg
pop
fwait
xchg
add
dec
xor
jg
xor
mov
mov
xor
addr16
mov
ret
add
pop
call
mov
push
aaa
mov
push
add
repz
pop
out
mov
sbb
lret
fsubl
test
xchg
inc
pop
cmp
iret
lock
push
fisubs
mov
clc
jne
bound
hlt
mov
sub
sbb
adc
fmuls
mov
or
mov
push
and
scas
movsl
js
inc
enter
sub
jg
inc
rorb
sarb
loope
rclb
repz
cld
test
xchg
fs
pop
mov
mov
mov
adc
adc
or
cmp
mov
sbb
cmpl
sub
or
pop
mov
jo
orl
add
and
sub
xor
stc
scas
shlb
jns
xchg
icebp
pop
push
outsb
cltd
popa
popf
push
xchg
lock
imulb
loope
ja
into
mov
iret
movsb
push
leave
adcb
repz
jmp
mov
inc
andl
shll
icebp
mov
ljmp
pop
mov
leave
mov
addb
jp
cmp
dec
sub
push
jle
or
es
push
or
mov
inc
adc
ss
mov
loope
sbb
jp
sbb
cwtl
or
popa
mov
notb
pop
stos
daa
ds
or
popl
incb
mov
aas
xchg
cld
testl
push
xchg
cs
cltd
mov
aad
loop
mov
lock
xchg
ss
dec
out
push
test
cmc
adc
push
cmpsl
shlb
das
mov
cmp
loop
aam
or
imulb
repnz
push
outsl
sbb
hlt
or
sbb
add
mov
int3
repz
popf
push
aam
jp
inc
sbb
int3
leave
inc
push
jge
lret
rol
sbb
sub
stos
inc
dec
mov
jg
nop
sbb
mov
push
inc
sub
cmp
mov
jle
mov
mov
dec
jae
cs
lret
movsl
cmp
fwait
lods
mov
mov
pop
sti
sub
jne
movsl
pushf
lret
stos
mov
mov
push
push
in
lea
loop
popa
icebp
jne
or
ret
sub
adc
mov
bnd
jb
mov
arpl
les
sub
daa
clc
xchg
notb
test
jne
jmp
je
mov
inc
or
in
sub
mov
cmpsb
in
aad
xor
inc
jno
in
push
insl
mov
xor
add
std
push
clc
sbbl
mov
scas
xchg
in
fisubrl
je
loop
mov
andb
mov
xor
cmpxchg
andb
sub
jbe
push
mov
cld
dec
or
mov
mov
mov
jle
mov
sbb
inc
in
xchg
add
in
ret
dec
pop
lods
sub
dec
cmp
bound
cwtl
dec
and
pop
psubd
or
loop
andl
xlat
into
arpl
loop
xchg
add
push
xchg
jnp
sbb
repnz
idiv
rorl
mov
mov
mov
out
xchg
hlt
sub
xor
dec
mov
inc
mov
adc
pop
or
push
ret
xor
or
das
out
cmpsl
movl
pop
js
mov
movsb
cmp
loopne
mov
pop
in
dec
lea
ret
jo
add
out
iret
cmp
movb
scas
inc
aam
and
add
cmp
lret
nop
xchg
mov
mov
icebp
xchg
mov
movsb
sub
inc
jmp
inc
sub
xchg
mov
jae
inc
and
and
lahf
dec
mov
dec
cmp
ss
mov
shll
jbe
cmp
ret
pop
pop
add
jg
shll
loop
les
mov
and
repnz
add
or
hlt
pop
xchg
xchg
jl
xchg
fnstcw
sub
repnz
jns
or
shlb
lahf
iret
cmp
jae
sarl
mov
lahf
pushw
lods
lods
inc
insl
call
push
xchg
repnz
and
movzbl
mov
push
jns
cli
scas
lret
add
sub
inc
ss
cli
fcomps
movlps
stc
sub
or
arpl
adc
or
push
ja
lods
push
xlat
vmovlps
ret
push
and
cwtl
movsb
xchg
push
hlt
xlat
mov
lods
or
fsubr
mov
cmp
in
fbstp
popl
push
movsb
and
lods
push
shll
xchg
insb
cwtl
out
add
adc
bound
shll
sub
mov
push
int
mov
inc
add
enter
push
cmp
add
jl
push
lret
or
fnsave
pop
mulb
dec
cmp
adc
mov
loop
mov
mov
sub
sahf
pop
fwait
cwtl
lock
sbb
test
mov
xor
rcrl
inc
mov
mov
nop
dec
mov
fsubs
test
mov
push
push
add
mov
xchg
sbb
and
sub
and
enter
aam
ljmp
out
dec
in
lret
subl
sub
sub
icebp
cmp
cmp
jno
push
ds
add
imul
and
sti
mov
or
sarb
mov
iret
rclb
jg
adc
pushf
sub
outsl
mov
inc
pushl
xchg
test
popa
jbe
xchg
inc
mov
rcrl
sbb
out
insb
pop
outsb
ja
incb
lahf
pop
inc
gs
sbb
out
sbbb
fstps
push
std
es
ss
mov
cmp
push
mov
mov
jecxz
repnz
ja
and
push
xor
divb
popa
mov
xchg
adc
push
push
enter
in
adc
xchg
cmp
xchg
rcrb
ja
enter
in
call
inc
xor
in
dec
test
and
fisttpll
push
xchg
inc
lods
pop
sub
fwait
jl
repz
pop
shlb
loopne
popf
xchg
cwtl
xor
lahf
xchg
rolb
cmpsl
mov
jp
insl
orb
push
mov
mov
and
jno
jp
ficoml
scas
sub
pop
pop
cmc
sbb
adc
je
pop
pop
dec
sbb
pop
xchg
mov
xor
inc
sti
push
add
cmpsl
mov
mov
jecxz
xchg
sbb
loop
ret
and
jo
js
cs
rorl
sbb
lret
xchg
push
mov
fdivl
push
les
adc
xchg
adc
jo
enter
cmpsl
cmp
ds
aad
in
out
inc
call
pop
dec
and
push
dec
dec
pop
stos
lahf
popf
adcb
xchg
inc
popa
pop
hlt
add
push
in
sub
sbb
adc
js
and
inc
mov
xor
dec
adc
cmc
xchg
jl
insl
mov
lahf
push
inc
push
jmp
decb
jbe
pusha
cli
jp
call
sbb
jl
or
dec
cltd
dec
sub
mov
sbb
push
mov
cmp
pusha
adc
sub
punpckldq
iret
ljmp
mov
rcr
cli
ficomps
xlat
aad
cli
jg
xor
aad
cmp
jg
ret
sub
mov
mov
mov
sarb
xchg
in
push
fadds
ret
dec
addl
and
pop
xchg
lcall
loop
movsb
insb
das
jle
adcl
or
scas
cld
cwtl
mov
xchg
inc
cmp
add
mov
das
insl
je
je
add
pop
aam
and
daa
lock
into
addr16
ret
push
bound
loopne
int3
adc
stos
mov
fwait
std
fadds
ds
push
lea
dec
mov
stos
int
mov
mull
sub
cmp
xlat
fimuls
sub
ret
rolb
rorb
cmpsl
cmc
pop
stos
pop
mov
xor
insb
shlb
test
ret
mov
sarb
sbb
adc
and
popf
clc
rcl
sbb
add
push
or
sar
subl
xchg
jl
popa
in
push
pop
push
xor
add
sub
leave
or
sub
movsb
pop
daa
test
pop
add
push
cmc
std
mov
dec
hlt
in
push
cmc
cmp
push
out
and
mov
and
in
or
push
xchg
loope
cmc
leave
ljmp
and
or
dec
adc
cli
xlat
sub
xlat
mov
pop
lret
and
pop
icebp
adc
mov
inc
and
das
aaa
xor
pop
mov
jg
shrb
test
inc
leave
jbe
bts
sub
and
jb
stc
and
mov
fists
fbld
repnz
daa
pop
sbb
jl
push
in
xchg
xchg
cld
push
xlat
mov
pop
or
fnsave
xor
push
lock
fs
lret
loopne
mov
jno
mov
les
ljmp
shll
shlb
add
sbb
pop
mov
sub
inc
insl
jno
movsb
and
loopne
test
mov
cltd
jmp
dec
inc
cmp
or
sub
push
cs
xchg
iret
inc
shll
aad
mov
imul
push
ljmp
mov
int
xor
out
dec
subb
and
xchg
xchg
add
cs
sub
pop
pop
lret
adc
gs
push
push
adc
out
adc
dec
or
sbb
xchg
and
fsqrt
aaa
lcall
nop
pop
push
xchg
test
ret
stos
push
xchg
test
push
lods
mov
cmp
or
outsl
pop
test
cmpsb
inc
std
jge
mov
mov
fstl
mov
push
hlt
push
lret
and
imul
adc
add
jmp
jp
div
scas
inc
sub
lods
inc
insb
insb
mov
call
loopne
mov
cli
jmp
pop
jbe
outsb
out
cli
push
lret
rclb
cmp
repz
jp
push
sub
stc
hlt
sub
sbb
cmp
imul
call
adc
lock
add
pop
xor
sahf
mov
nop
imul
sub
cs
nop
call
arpl
mov
cmpsl
in
dec
popf
call
add
cmc
sbb
rcrl
fs
loopne
leave
adc
xor
inc
push
pop
inc
in
push
jno
shlb
in
add
jbe
in
pop
ja
fstl
pushf
pushf
cli
xchg
push
pop
xchg
xchg
dec
loopne
cli
cmpsb
or
adc
pop
mov
enter
add
jnp
ds
call
cmpsb
mov
das
shll
dec
xchg
adc
dec
and
pop
push
rolb
adc
add
test
sub
lods
xor
stc
test
repnz
mov
shll
jns
jmp
adc
pop
sub
loope
repnz
stos
sbb
inc
rcrl
das
outsl
xor
mov
aaa
mov
mov
jl
fbld
pop
lahf
mov
in
jge
test
push
lea
nop
sbbb
loope
test
aad
ficoml
insb
push
pop
pop
or
xor
stc
scas
mov
cmp
push
shlb
jnp
cmp
add
add
mov
ja
movsb
xchg
es
rolb
add
scas
mov
or
sahf
nop
call
mov
and
xchg
inc
xchg
xchg
fwait
or
xchg
pop
lods
in
and
sub
xchg
mov
jno
iret
adc
pushf
aad
push
cmc
pop
or
mov
dec
mov
iret
lock
dec
daa
xor
fldt
fucomp
or
push
rolb
loope
and
mov
mov
int3
stos
jmp
rorb
call
lret
scas
and
push
and
and
jp
in
lea
dec
shl
lods
jmp
cltd
and
repnz
mov
jae
sub
mov
aaa
pop
dec
cmp
sbb
je
or
xchg
mov
add
sub
dec
jl
lds
inc
mov
pop
ja
pop
sub
test
add
mov
push
mov
stos
push
mov
mov
lret
and
and
aas
js
sbb
push
les
cwtl
jmp
bnd
insb
dec
jns
push
data16
pop
xor
pushf
xchg
xor
test
sbb
lahf
lods
arpl
leave
or
es
aaa
adc
and
push
test
xchg
xchg
bound
cmp
adc
lret
mov
andl
aaa
dec
pop
cmp
and
xlat
pop
pop
repz
cld
mov
pop
adc
popf
inc
ljmp
sahf
loope
bound
hlt
sahf
jae
pop
mov
lret
lea
push
adcl
mov
xchg
loopew
jg
int3
adc
addr16
hlt
push
ficomps
loope
push
jecxz
insb
jle
orl
lods
mov
dec
cmp
push
jnp
scas
mov
cmp
pusha
aad
pop
es
push
stos
int
cs
sub
aaa
std
sbb
lods
ljmp
and
mov
lahf
sub
jmp
mov
inc
jno
mov
jne
dec
daa
jp
mov
outsb
pusha
cs
sbbl
mov
push
ficoms
shrb
adc
push
dec
pop
and
ret
jbe
inc
clc
fsubl
inc
jo
inc
inc
inc
dec
sbb
and
jno
dec
icebp
inc
xchg
stos
dec
movsl
mov
push
jl
cmp
orl
xchg
push
mov
mov
in
adc
into
mov
repz
repnz
inc
aaa
jb
sub
cmp
dec
sbb
inc
pop
cltd
dec
mov
pop
dec
sbb
dec
cmp
xchg
pop
pop
gs
pusha
dec
arpl
pop
sbb
mov
adc
daa
daa
xchg
aaa
push
nop
mov
jp
or
je
bound
loopne
sub
fiaddl
xor
loop
mov
push
cld
cmp
dec
ja
in
lods
repz
and
hlt
xor
mov
sbb
fisubs
call
mov
in
inc
lea
popa
mov
mov
iret
hlt
movsb
and
add
adc
mov
stc
jno
jge
push
leave
int3
sbb
popf
les
cmpsb
lcall
testb
sub
xor
xchg
mov
scas
dec
add
lahf
int
adc
fcmove
iret
mov
and
lds
sbb
inc
lret
ljmp
hlt
ljmp
fldt
mov
dec
fldt
cmpsb
dec
push
mov
sbb
rcrl
clc
dec
and
or
lahf
mov
fisttps
sbb
stc
push
jge
push
cmp
sti
aas
sbb
ret
cmp
pusha
pop
data16
push
stc
out
je
mov
xchg
mov
rep
in
rcrb
rcll
rcpps
in
mov
lret
xchg
dec
aam
dec
jne
jmp
adc
sub
leave
xchg
cmp
das
ss
gs
adc
in
repz
mov
pop
gs
out
xchg
inc
test
add
rclb
loop
jge
add
mov
sbb
add
mov
arpl
sbb
mov
pusha
data16
jbe
add
xor
jp
stc
cwtl
or
sarl
cmpsl
into
mov
cmp
push
leave
pusha
jle
mov
mov
add
gs
loopne
imul
movsl
fstl
lret
mov
enter
insb
pop
in
push
jno
xchg
movsl
popf
aaa
test
aas
cmp
xchg
add
sahf
xchg
dec
push
mov
cld
in
lea
mov
mov
jbe
fdivs
gs
push
sbb
pop
mov
mov
and
out
call
add
or
aas
jge
ds
arpl
mov
sahf
lds
in
sbb
test
or
popf
and
xchg
sahf
cmp
cltd
aad
push
fcmovnbe
push
cmp
outsl
popa
aaa
ljmp
pop
pop
push
xor
adcb
dec
jge
loope
int
mov
xor
aaa
int
and
in
fwait
cmp
arpl
mov
shll
adc
pop
xor
sbb
push
sbb
sub
pop
jo
in
das
or
leave
add
movsb
notl
cmc
fdivr
push
aam
pop
jno
mov
insl
sbb
inc
adc
dec
jl
push
jge
cmp
pop
scas
xchg
adc
es
divl
or
mov
add
mov
mov
cmp
sbb
ds
fimuls
dec
aas
and
mov
jmp
stos
ret
dec
inc
popa
mulb
data16
gs
sub
scas
outsb
xor
xor
cmpsl
je
or
test
scas
les
xchg
shlb
stc
mov
stos
idivl
sub
mov
and
adc
movsl
call
dec
mov
jno
sub
xor
dec
pop
mov
out
mov
call
sbb
push
loopne
out
dec
mov
lock
xchg
pop
pop
jno
popf
pop
js
xchg
subl
mov
pop
cmp
rcr
std
sub
das
std
clc
cmc
mov
jle
mov
dec
jns
fs
mov
nop
sbb
in
mov
xor
mov
fdivrl
scas
daa
addr16
hlt
stc
push
out
sbb
imul
jl,pn
push
mov
pop
mov
cmpsl
sub
fwait
sbb
or
out
repz
cmpsb
bound
insl
movsb
mov
adc
test
cmpb
nop
inc
mov
int3
dec
and
jge
sub
pop
jle
movsl
roll
and
jb
shlb
add
pop
and
or
cli
arpl
lcall
xor
fisubrs
mov
rorl
jo
sub
pop
dec
stos
std
inc
adc
clc
nop
mov
mov
out
imul
out
inc
aam
pushf
rorl
push
jne
lahf
lahf
and
out
adc
clc
dec
sub
loopnew
or
pop
hlt
mov
cmp
addr16
scas
xchg
notb
into
hlt
stos
mov
jo
ret
shll
lods
add
dec
in
xchg
sub
pop
dec
cmp
cs
aas
lock
cmp
sub
mov
movsl
jecxz
clc
mov
setbe
or
icebp
mov
int3
pop
ret
mov
cmpb
inc
inc
mov
popf
insl
data16
in
xchg
mov
mov
xchg
mov
jnp
ds
pop
dec
pop
loop
sub
lcall
mov
mov
mov
add
or
out
sub
jge
lret
sbb
les
mov
push
je
clc
mov
lea
jge
insb
dec
adc
cld
mov
movsl
or
adc
fs
adc
dec
leave
push
xor
popa
jecxz
cld
jbe
fwait
jg
orb
stos
movsb
loopne
inc
push
gs
les
mov
data16
repnz
ss
fs
rolb
inc
mov
push
xor
decb
mov
cmp
adc
movsb
ret
sub
sbb
mov
dec
xlat
cmc
fldl
xchg
stc
jo
mov
das
sub
into
test
js
sub
add
fbld
sub
jp
xor
std
jle
clc
ja
enter
mov
mov
mov
jne
xchg
movsb
xor
cmp
pop
dec
testb
in
jp
nop
in
cwtl
stc
xlat
sbb
push
dec
cmpsl
mov
and
in
mov
sbb
ja
cli
jp
pop
negl
clc
je
ds
nop
lods
mov
jecxz
mov
pop
daa
jns
aaa
cltd
jg
arpl
aaa
notl
ljmp
sub
cmpsl
cmp
pop
dec
fists
stc
xchg
outsb
repz
mov
cld
mov
jmp
push
jbe
ljmp
add
add
mov
rcl
sub
into
add
lods
adc
cmp
testb
jge
orb
cmp
pop
fadd
adc
mov
fnsave
hlt
mov
inc
or
sub
in
call
arpl
jp
pop
jb
test
cmp
or
or
movsl
in
fisubrl
in
jmp
mov
jns
jbe
sbb
cmp
mov
sbb
shrb
xlat
jnp
jnp
pop
sbb
ret
pop
xlat
shll
int
push
pusha
sbb
fwait
das
popl
outsb
orb
mov
cmpsb
sbb
decb
lret
loope
cmp
dec
cmp
push
lret
pushl
stos
fwait
imul
xchg
inc
rolb
adc
xor
cs
inc
outsl
jns
pop
jle
ja
and
pushf
loopne
jge
jne
dec
xor
add
push
jae
lock
xchg
add
sub
insl
lret
ficompl
outsb
dec
sbb
sub
or
fidivl
orl
mov
jne
adc
mov
out
aad
mov
pop
cltd
cmp
daa
pop
or
dec
testb
in
mov
sub
scas
test
sub
lret
jmp
inc
add
sbb
jbe
xorl
scas
fs
imul
mov
xchg
rol
mov
adc
jge
test
scas
cmp
sbb
inc
sub
outsb
cmp
sbb
pop
sub
dec
cmp
dec
mov
xor
mov
jmp
orl
out
and
sbb
push
test
jg
sbb
ret
mov
ret
ss
pop
jge
push
dec
pop
push
mov
imul
mov
dec
cmpsb
xchg
pop
lret
gs
cmp
data16
les
cld
repz
mov
mov
mov
sub
or
and
sarl
in
cmpsb
push
xchg
js,pt
repnz
fs
add
loop
cmpl
inc
and
push
rdmsr
hlt
gs
sub
int3
pop
outsl
imul
cld
xor
jg
sbb
lds
mov
sbb
into
pop
cmove
mov
cli
xor
psubsw
mov
std
mov
les
shlb
outsb
pop
adc
pop
xchg
in
clc
shrb
jge
pop
popf
or
lock
mov
mov
mov
cld
sub
mov
andl
jno
mov
jno
aad
dec
addb
fnstsw
and
pop
js
add
lods
mov
movsl
sarb
insl
insb
divb
lret
xor
xor
dec
cmpsl
pop
mov
idivl
or
popf
pop
nop
clc
jmp
sbbl
mov
xchg
or
scas
or
scas
into
pop
addb
lock
or
and
sub
dec
lods
test
push
inc
and
sbb
pop
cwtl
pop
push
cwtl
add
movsb
xlat
dec
and
mov
inc
cmp
jns
movsl
jmp
adc
lcall
out
cltd
mov
inc
xchg
pop
dec
movsb
test
in
int3
aas
movsl
xor
cmp
jl
cmc
divb
sbb
dec
je
xchg
les
push
out
mov
mov
aad
lret
jge
scas
jecxz
push
sbb
or
lahf
mov
adc
pusha
paddsb
lahf
icebp
mov
pop
decb
testl
cmp
or
in
push
clc
cli
inc
ljmp
arpl
pop
movsl
hlt
stos
mov
xlat
push
xchg
xchg
push
adc
adcl
ja
shr
in
jbe
popa
pop
bound
and
mov
push
pop
jecxz
add
jle
lods
adc
xchg
out
mov
mov
nop
jne
test
jg
pop
lret
lret
xchg
rcrl
dec
sub
movzwl
pop
xchg
lock
mov
bound
movsl
cmpsb
leave
push
mov
xchg
cmp
dec
ds
add
mov
popf
push
or
ja
xlat
ret
in
pop
mov
sub
and
repnz
hlt
mov
icebp
test
cmpsb
testl
and
sbb
enter
setle
stos
lret
fisubl
les
cltd
cmpsl
lds
xchg
jp
cld
faddl
add
stc
stos
in
mov
xor
loopne
push
or
or
or
pop
test
jge
dec
sbb
mov
xchg
mov
push
jns
or
hlt
jg
pushf
imulb
pop
inc
aad
push
shlb
pop
adc
repz
lret
push
sub
mov
mov
imul
jg
les
fdivrp
jg
push
jl
andb
jp
push
bound
xor
fisubrl
stc
jl
test
cmp
cmp
xor
push
mov
test
sysexit
or
addr16
cs
es
xchg
sub
and
jne
jg
dec
mov
dec
jp
inc
fnsave
movsl
mov
cmp
mov
fdivl
add
jo
xor
push
pop
pop
mov
clc
test
xchg
mov
and
fistps
cmp
pop
lcall
jno
enter
pop
fstl
cmp
mov
mov
scas
cmp
lret
shll
mov
pop
fmull
stos
jnp
add
not
sub
out
icebp
mov
inc
cld
sarb
pop
pushf
xor
sbb
shll
hlt
arpl
dec
jno
sti
ja
xor
xor
orb
mov
inc
scas
icebp
add
pushl
xchg
fptan
fcom
arpl
pop
fnstenv
add
shrl
daa
mov
cmp
lcall
iret
fmul
xchg
push
mov
push
and
ljmp
test
popa
jge
negb
mov
xchg
push
lds
cmp
xchg
jo
rorl
push
popa
fdivp
dec
cmpb
xlat
dec
cmpsb
fistps
push
adc
ret
shll
mov
add
scas
bound
jle
movsb
ds
lds
mov
pusha
roll
lock
jbe
lahf
cmp
mov
mov
mov
lcall
fisubl
or
shlb
rolb
mov
add
stos
xchg
cmp
mov
xchg
js
jle
ds
mov
xchg
iret
pop
pushf
xchg
pop
mov
inc
aas
mov
sub
adc
stos
adc
sub
xchg
push
cmp
dec
sub
xchg
pop
adc
pop
pop
jle
mov
sub
gs
pop
mov
popl
inc
mov
scas
dec
mov
cmp
outsl
mov
mov
push
pushw
scas
cmp
dec
lods
lds
mov
scas
push
in
imul
in
push
loope
pusha
ljmp
sti
mov
mov
xor
negb
push
ret
mov
pop
xor
into
je
lret
xchg
or
jnp
xor
or
test
jo
jb
ret
outsl
rcrb
add
adcb
xchg
std
inc
sbb
lret
mov
mov
xchg
mov
jge
movsb
movsb
mov
lahf
or
fcoms
add
pop
dec
ret
lcall
int3
dec
xor
cmpsl
cmp
scas
fs
xchg
mov
addr16
cltd
add
jge
sarb
int3
sbb
sbb
out
stos
icebp
movsl
sub
push
xor
fcoml
add
outsb
std
ss
and
les
mov
sbb
xor
or
ffree
fwait
clc
outsb
enter
aad
cmpl
dec
dec
xchg
adc
cmp
dec
cmp
sub
push
insb
int
xor
cmp
ret
mov
adc
std
sbb
xor
dec
test
clc
bound
sub
nop
fbstp
xchg
dec
jns
push
add
mov
test
push
jne
jp
dec
sarb
cmp
inc
pop
movsl
shr
popf
add
mov
jns
xor
push
inc
push
cli
jno
sbb
subb
lds
pop
pop
call
xor
in
in
int
jbe
outsb
outsl
sub
lret
jae
mov
jl
int3
cmp
mov
out
out
push
insb
jl
das
ret
push
mov
mov
ljmp
lock
xlat
xchg
or
in
jae
arpl
cmp
loope
mov
add
ja
mov
sbb
ret
fstpt
xor
xchg
ja
dec
in
stos
mov
xchg
pusha
leave
pop
mov
nop
es
or
shl
push
pop
cmp
dec
add
push
call
movsl
mov
ret
sbb
pop
xchg
daa
xor
popf
lds
mov
push
popf
insb
inc
imul
fsts
subb
inc
lds
adc
mov
dec
ds
fwait
clc
and
gs
sbb
push
dec
imul
sbb
aas
test
data16
and
mov
mov
mov
enter
incl
loop
mov
aaa
inc
cmp
movb
inc
push
aas
mov
mov
cmp
cmc
push
jae
adc
int3
fsubr
shrl
rorb
cwtl
out
mov
ret
xlat
mov
fs
adc
push
in
adc
fsubrl
loop
sbb
and
add
xlat
call
mov
sub
sbb
push
dec
mov
push
cltd
adc
adc
xchg
addb
cmp
cs
daa
popa
into
sub
int
push
mov
loope
mov
mov
sbb
hlt
pop
and
or
loop
out
gs
mov
inc
dec
popf
negl
out
lea
stos
aad
fs
cmp
jae
cld
inc
jecxz
and
test
push
in
pop
and
mov
fdivrp
inc
cmpb
add
add
iret
fsts
cmpsb
fmuls
cmp
cmp
inc
rclb
jge
or
lods
xor
push
xchg
pop
fcomps
or
decl
scas
push
fmul
stos
jo
rclb
lcall
xchg
out
lret
call
call
lods
pop
push
aas
imul
subl
je
mov
cld
jge
dec
andb
mov
sqrtps
int
out
mov
pop
and
andl
sub
loope
jbe
dec
negl
negb
mov
cwtl
mov
mov
je
mov
push
loope
sti
aas
pop
ds
xor
pop
xor
jle
cld
lcall
enter
pop
mov
je
push
cwtl
push
leave
jae
push
fdiv
pop
or
lods
push
mov
mov
insb
test
sbbb
or
sub
push
push
cmp
push
adc
mov
gs
icebp
ss
and
in
xor
cmp
sbb
ret
int
lahf
lret
mov
jae
lahf
ds
dec
push
ss
rolb
lea
push
ret
dec
jge
ret
add
fisttpll
in
sbb
orl
frstor
push
inc
in
jnp
add
add
pop
out
add
mov
pop
or
jge
outsb
fisubrs
xor
pop
aad
adc
push
inc
push
cmpsb
dec
jae
fwait
lahf
push
roll
mov
push
adc
out
out
arpl
dec
mov
xchg
or
fdivrs
pop
mov
jl
adc
scas
fs
xchg
test
push
lea
int3
leave
jge
cmp
arpl
and
inc
aaa
sbb
cmp
test
dec
lahf
push
cmp
mov
je
mov
adc
ja
stos
dec
pop
fstps
add
out
ljmp
hlt
xchg
or
inc
cmp
mov
shlb
push
add
movsl
subl
jno
je
imul
stos
lea
pop
fdivl
loope
add
add
push
test
pop
out
rcrl
pop
mov
mov
xchg
mov
addr16
jo
sub
aad
lea
mov
pop
fildll
je
outsl
pop
stos
mov
das
clc
jae
iret
lods
or
gs
add
or
mov
and
jae
and
rcr
xchg
mov
xchg
enter
arpl
shlb
and
fucomip
pushf
inc
mov
lods
shll
inc
popf
push
div
sbb
repnz
sbb
js
sbb
or
pop
pop
mov
in
in
and
cmp
call
lods
xor
loop
sub
movsl
jns
cmp
into
jle
mov
mov
inc
pop
mov
sub
mov
fadds
mov
popa
rorb
or
jl
cmp
sub
mov
fmull
or
add
sub
xchg
lods
mulb
sahf
shlb
sub
loopne
xchg
and
in
outsb
ss
cmp
adc
cmp
mov
sbb
push
clc
inc
fdivrs
subb
push
arpl
push
mov
dec
cs
outsl
xchg
scas
pop
sub
outsl
popf
xor
movsb
cmp
adc
mov
mov
insl
stos
icebp
jae
gs
xchg
xorb
insb
int3
int3
jecxz,pt
add
push
fsubp
and
push
push
test
int3
lods
cltd
aas
movsl
push
adc
mov
addb
push
mov
lock
in
xchg
sbb
inc
out
shlb
mov
cmpsb
or
bound
loop
cwtl
das
jo
adc
xchg
adc
fbld
jle
and
sarb
push
and
out
lahf
adc
lds
adc
mov
jno
lcall
xor
push
nop
adcl
mov
repz
push
add
jmp
lods
aam
adc
sahf
adcl
jns
int3
loopne
sub
out
hlt
mov
and
xchg
scas
cmc
sub
or
rorb
xchg
imulb
mov
pop
mov
lea
pop
std
pop
push
and
jp
xor
inc
cmpsb
xchg
cmp
dec
xchg
lea
repnz
in
popa
push
rcll
sbb
enter
xchg
scas
xchg
add
ja
pop
insb
and
adc
sahf
fldenv
mov
xor
arpl
stc
aaa
fsubrl
jne
jns
stos
in
or
sub
les
ja
sbb
add
loop
sbb
cmp
mov
push
xchg
and
dec
ret
dec
mov
mov
sbb
and
sbb
out
in
fidivs
in
add
pop
pop
pop
divl
popf
or
jmp
inc
fcompl
fadds
jns
int3
sub
lods
incb
dec
cmp
add
mov
ds
push
cmpsb
pslld
enter
sbb
mov
cmpsl
ret
int3
xchg
shll
into
or
cmpb
je
sbb
in
out
push
or
jmp
inc
insl
movsl
lahf
pop
fwait
cmp
nop
rclb
js
cmp
jo
mov
stc
xchg
lock
push
jle
push
aaa
push
js
adc
daa
loope
dec
sti
push
push
mov
idivl
out
or
je
jecxz
clc
fs
lahf
divl
fwait
mov
fistpll
add
sbb
int3
in
add
mov
or
out
or
loope
es
daa
ja
int
ss
jns
cmpsb
push
inc
lret
js
insb
mov
xchg
fwait
xor
or
mov
lods
inc
add
xchg
addr16
xor
jno
xchg
pop
bound
jl
gs
ja
cltd
inc
or
adc
loopne
add
mov
push
imul
das
lods
mov
imul
jl
ss
ret
mov
data16
cmp
sub
ficoms
pushf
cmp
or
dec
dec
cli
xchg
mov
adc
in
fdivs
sbb
out
out
popf
cmp
daa
push
pusha
pop
xor
mov
xchg
mov
sub
loope
imul
pop
jae
aaa
jbe
jg
fwait
icebp
xlat
jo
dec
movsl
fsubl
xor
aaa
mov
aam
fisubl
in
mov
mov
das
sub
jecxz
das
movsl
popf
dec
imul
inc
sub
sbb
dec
push
fidivl
outsl
sarb
clc
mov
or
xor
pop
adc
icebp
push
add
jg
xchg
cwtl
in
xor
cmp
sub
repnz
cmp
sbb
inc
dec
push
popf
dec
push
push
jne
bound
or
mov
sbb
mov
stc
lret
fldenv
lock
sub
cwtl
sub
rcrl
ljmp
lds
daa
lcall
pushf
rorb
add
mov
iret
pop
mov
pop
adc
subl
aaa
rep
or
push
ja
out
push
fmull
hlt
and
inc
outsb
push
repz
xor
cmp
cmp
outsl
xlat
xchg
ss
subl
mov
int3
pop
push
add
gs
dec
pop
inc
cmp
dec
pusha
push
jae
mov
jb
xchg
iret
pop
mov
sbb
lods
ja
inc
movsl
mov
je
adc
sbb
mov
insl
ret
mov
mov
testb
pop
mov
mov
imul
fdivrs
into
cmc
inc
sahf
ljmp
jg
inc
pop
xchg
repnz
mov
mov
fimull
ljmp
mov
adc
cmp
push
xchg
loop
dec
mov
mov
adc
add
gs
mov
mov
inc
adcb
stc
xchg
imul
pop
call
lds
scas
mov
add
jmp
push
push
cwtl
add
lock
int
test
jne
outsl
push
cmp
ret
imul
mov
cltd
in
add
xchg
outsl
inc
mov
stos
andb
fnstcw
push
jns
orl
ja
fiaddl
xchg
xchg
lods
xchg
inc
sahf
or
pop
das
sbb
sahf
sub
mov
stc
outsl
fsts
orl
sub
jno
gs
sbb
lea
sbb
movsl
mov
sub
xor
push
imul
cld
aad
cmc
rcll
pop
mov
sarb
mov
dec
ret
loopne
and
xor
nop
repz
test
fs
orb
nop
pushf
xchg
add
fcompl
clc
into
test
mov
jns
imul
mov
or
jmp
xlat
cmp
mov
lret
mov
xchg
test
xor
mov
fwait
fwait
into
adc
popf
add
insl
sbb
pop
iret
fsubl
xchg
loope
out
lcall
or
push
addr16
push
push
in
jp
xchg
or
inc
fmul
ja
cmpsb
rcrb
xor
lahf
imul
mov
xchg
xchg
fstpt
jno
push
xor
pop
sub
arpl
in
xor
outsl
dec
fabs
add
dec
sub
insl
mov
loop
ja
sbb
push
add
mov
negb
or
mov
mov
aad
sbb
sbb
lock
sub
std
addl
push
sub
or
xchg
iret
pop
enter
ficoml
jge
out
das
pop
and
loop
jne
pop
inc
icebp
dec
xchg
sub
inc
out
mov
push
aaa
incl
add
in
mov
adc
pusha
outsl
lcall
js
xor
xor
mov
inc
ss
cmp
dec
addb
int3
repz
pop
jno
mov
mov
or
mov
xor
lahf
mov
mov
pusha
pop
iret
sub
test
cmp
mov
ficompl
mov
leave
mov
xorl
sahf
and
lods
jmp
inc
js
sbb
faddl
xchg
or
out
xlat
fs
adc
shlb
push
or
jmp
stos
dec
jmp
js
aaa
subb
lds
andl
bound
std
imul
cmp
dec
add
addl
andb
sbb
test
out
pop
sub
cwtl
shlb
mov
and
push
jae
cmp
dec
scas
fucomip
mov
fs
xor
mov
xor
sub
mov
js
call
lea
push
xchg
pushf
jnp
cmp
add
add
jge
and
sub
jbe
insl
dec
or
pusha
lcall
sbbl
leave
addl
jle
xor
enter
add
push
and
ret
dec
mov
cmovnp
stos
mov
add
cmpsb
ret
sbb
cmp
jns
test
out
lods
imul
cmp
mov
xorb
pop
push
mov
inc
sti
mov
and
push
pop
mov
pop
inc
lea
gs
jo
xor
or
mov
inc
add
pop
andb
xchg
icebp
popa
push
pop
jecxz
cmp
clc
jns
rcrl
mov
pop
and
inc
rcl
loopne
test
pusha
int3
cmp
push
pop
pop
packssdw
mov
popa
mov
in
cmp
test
xlat
inc
imul
sbbb
push
inc
cmpsl
cwtl
fs
fbld
jbe
daa
and
push
pop
dec
cwtl
cmp
push
adc
pushf
decb
ficompl
xor
and
jp
inc
mov
jb
inc
mov
cmpsl
popf
pop
mov
pop
pop
mov
orb
or
call
and
pop
in
sarl
insb
xchg
maskmovq
imull
sub
mov
enter
or
xorb
bound
lahf
xor
adc
cwtl
imul
inc
or
cmp
stc
mov
test
out
push
popf
sbb
pop
out
sub
jnp
test
xor
ret
adc
in
lock
hlt
dec
pop
jg
inc
add
inc
lods
jmp
js
and
xor
sub
adc
xlat
fildl
sbb
out
bound
cmp
mov
add
call
gs
push
inc
inc
mov
dec
jl
loop
fs
icebp
test
xchg
loopne
and
sub
push
cmp
std
movlps
fcomps
sarb
dec
aaa
adc
adc
faddl
or
pusha
loope
jle
sbb
xor
sub
pop
idivb
cli
nop
lea
int3
rolb
shll
sbb
mov
and
mov
and
lods
jecxz
imulb
dec
ret
fwait
loopne
adc
cmp
repz
push
cli
xchg
and
jb
adc
out
mov
push
lods
out
inc
pslld
sbb
rclb
xchg
ss
mov
mov
shll
shlb
xor
push
pop
mov
test
sbb
or
pop
adcb
jle
dec
divb
stc
int
push
jge
xor
cli
loop
mov
and
push
fiaddl
push
xchg
push
pop
push
or
outsl
fcomip
pop
lods
xchg
xchg
rcrb
and
xchg
add
dec
daa
push
sar
add
nop
ret
sbb
addb
in
and
ss
repnz
test
xchg
lret
sub
sub
iret
sub
pushf
int
push
xor
and
outsb
sti
push
cmp
mov
jae
jmp
bound
clc
cmp
imul
sbb
mov
or
push
jmp
sbb
sahf
mov
xchg
mov
jmp
dec
or
jge
rorl
push
mov
mov
add
inc
shl
xchg
cwtl
ss
mov
xchg
scas
pushl
pop
or
or
xchg
fs
jbe
xchg
arpl
sahf
add
fldenv
or
fnsave
les
scas
jp
adc
xor
in
xchg
rorb
test
mov
test
mov
nop
xorb
mov
jle
int
jb
sub
mov
ds
in
paddusw
add
sub
cmp
cld
ret
in
fiaddl
sub
push
fwait
adcb
ja
push
out
cld
pop
outsb
and
push
jmp
jns
fwait
jbe
loopne
addr16
jb
mov
pushf
mov
lods
imul
add
dec
adc
add
aaa
leave
xor
push
adc
lds
add
repz
adc
dec
mov
xchg
in
add
lock
mov
xchg
int3
mov
xchg
push
fisttpl
rcl
lret
xchg
fldenv
jns
jae
leave
push
sbb
iret
loopne
push
inc
sti
lock
inc
inc
lods
adc
sbb
subb
repz
mov
es
add
add
mov
cmp
mov
pop
xor
mov
push
data16
push
ljmp
jmp
das
xchg
xchg
cli
jp
test
add
pop
mov
imul
add
or
cmpb
rcll
out
add
leave
sti
cmpsl
ja
and
int
sahf
mov
dec
lea
ficoms
ret
pop
imul
mov
jbe
in
mov
lock
mov
insl
int
cmc
clc
mov
and
loop
add
pop
movsl
and
loop
nop
cmpsb
ret
jge
pop
sbb
push
leave
mov
rcrb
sub
shrl
es
stc
mov
pop
sub
addb
adc
mov
xor
js
and
inc
inc
icebp
movsb
push
subl
add
jne
mov
int
hlt
sbb
cmpsl
fmull
icebp
jmp
sbb
push
mov
dec
cmp
aam
xchg
mov
jmp
popa
mov
add
push
jns
or
and
mov
out
xor
jp
sbb
inc
iret
enter
dec
pop
popf
xor
shll
cmp
add
sub
and
sub
mov
setno
pop
mov
dec
test
imull
mov
push
mov
test
cmc
and
mov
sub
xchg
int
sbb
push
out
dec
repnz
nop
add
pop
add
popf
dec
loopne
sub
push
sbb
sub
adc
inc
add
addl
add
pop
mov
cltd
and
mov
inc
mov
in
out
cwtl
dec
call
mov
adc
adc
bound
cs
in
mov
adc
fiadds
cmp
mov
dec
mov
push
push
mov
fs
add
pushf
and
xchg
push
xchg
jae
mov
outsb
out
repz
rsqrtps
adc
push
out
xchg
cwtl
adc
adc
xchg
sub
sbb
sbb
adc
cmpsl
fs
mov
out
test
mov
pusha
sti
adc
add
xchg
pop
fwait
movsl
test
mov
mov
xorl
xor
sub
mov
pusha
xchg
cmp
jg
mov
loopne
add
ja
adcb
daa
movl
jnp
fwait
mov
push
pop
les
adc
sub
sbb
cld
xor
js
pop
dec
iret
pop
popa
pop
sbb
fisubl
out
cmp
das
mov
jle
jae
pop
out
stos
xchg
repz
ljmp
push
test
jmp
lahf
das
mov
fldenv
cmc
ret
fcom
leave
sbb
jg
dec
testl
cmp
fyl2xp1
in
cwtl
xchg
add
add
popa
and
loopne
repnz
in
dec
jmp
pop
roll
mov
cmpsl
aam
mov
push
mov
sahf
jb
cmc
mov
sub
add
mov
cmp
lods
jge
mov
push
aaa
enter
jge
stos
inc
xchg
bound
call
sbb
lret
adc
scas
mov
mov
loope
nop
cs
jb
xchg
and
popf
inc
sbb
fisttps
xchg
and
test
sbb
pop
mov
in
mov
ret
push
les
jg
lret
repnz
cmp
push
xlat
scas
xor
add
xor
mov
mov
inc
mov
push
movsl
mov
int3
dec
sbb
sti
push
and
mov
dec
push
es
cmpb
adc
cli
fstsw
das
call
push
or
push
push
push
rol
pop
pusha
dec
fimuls
mov
lea
fistpl
jbe
fildl
imul
pop
mov
aaa
icebp
fnstcw
in
js
xor
xor
arpl
dec
sub
adc
xor
fstpt
mov
adc
mov
sti
mov
loop
mov
fistl
xor
mov
sar
cs
loop
add
sbb
pop
loopne
add
andb
pop
outsb
mov
xchg
outsb
mov
sub
jge
sahf
cmp
js
mov
push
jnp
pop
jmp
sbb
push
or
test
shrb
in
loopne
or
cmp
imul
outsb
enter
xorb
inc
cmp
mov
add
inc
and
mov
push
shr
push
lds
test
jl
je
adc
repz
jb
sbb
lahf
fs
scas
hlt
out
jle
mov
jb
push
outsb
mov
xchg
inc
xorb
adc
mov
test
add
add
sub
sahf
fsubrs
int3
dec
fsubrs
jnp
clc
sbb
add
jp
jbe
pusha
push
or
bnd
cmp
mov
movsb
sbb
push
lret
cld
stos
inc
jecxz
call
jmp
gs
clc
and
je
movsl
or
and
pop
and
adc
mov
mov
xor
loop
stc
addb
dec
pop
gs
sahf
dec
cltd
shl
and
add
xchg
aad
fs
xchg
repz
mov
andb
cmpb
jge
jnp
dec
and
dec
loop
and
sti
repz
sbbb
test
lea
adc
pushf
sbb
sub
lea
or
mov
out
cmpsl
movsl
sbb
push
daa
sti
test
push
pushw
ds
or
mov
aaa
mov
mov
sbb
addb
scas
adc
movsb
add
cli
out
push
dec
xor
les
and
xchg
push
shr
outsb
ret
sahf
pop
jge
ret
out
lods
icebp
aad
shll
inc
icebp
loop
stos
push
cmp
pop
xchg
xchg
dec
inc
sub
into
xchg
xchg
ljmp
or
and
in
sbb
push
add
incb
fidivs
fs
dec
inc
mov
pushf
dec
jle
ret
fstpt
test
loope
fcoms
cmpb
mov
push
inc
pop
in
jne
shlb
cmp
mov
jne
xor
push
and
push
inc
in
cmpsb
jb
and
repz
aaa
mov
inc
inc
adc
mov
cmp
pop
mov
inc
std
mov
sbb
sarb
pushf
mov
inc
cmp
jle
icebp
dec
mov
xchg
push
add
adc
cld
mov
or
pop
aas
int
and
cmp
ret
jg
xor
hlt
faddl
adc
in
clc
pusha
sub
jge
and
adc
insl
rcl
xor
fdivrl
adc
jne
xchg
imul
rorl
jle
mov
mov
out
inc
cmpl
and
cmp
adc
int3
push
inc
jns
pushf
or
jne
dec
lret
mov
pop
mov
loop
icebp
mov
xor
add
xor
sub
rcr
xor
popa
daa
mov
jb
decl
repz
add
daa
orb
push
xor
inc
xchg
add
js
xor
jmp
xchg
mov
icebp
fildll
and
outsb
in
jbe
inc
xchg
dec
adc
push
cmc
shrb
mov
pop
clc
mov
push
or
push
sbb
cmp
sti
dec
mov
rcll
test
xchg
ret
aam
jmp
rolb
or
aaa
dec
sahf
pop
mov
push
in
cmp
enter
jno
mov
lock
fs
and
jno
sbb
mov
lret
dec
arpl
mov
and
lcall
adc
fbld
ljmp
lea
pop
sbb
mov
outsl
mov
lahf
xchg
mov
or
fdivp
nop
xor
stos
jae
xor
sub
fdivl
mov
dec
pop
sbb
push
hlt
inc
cltd
repnz
xlat
iret
stos
push
popf
add
arpl
inc
jno
lods
sub
data16
push
pop
dec
sbb
in
sub
add
xchg
js
negl
jb
cmp
in
insb
aad
mov
aad
leave
mov
mov
in
es
sahf
outsb
inc
pop
loop
sbb
xchg
push
arpl
stos
mov
push
fadds
std
ljmp
jmp
adc
in
sub
iret
imul
push
lret
mov
add
sbb
cmp
loope
xchg
sti
mov
mov
cld
in
cld
mov
xchg
cmc
add
addr16
jnp
and
jae
jge
arpl
cli
call
enterw
pop
xchg
gs
into
imul
cmp
and
into
jge,pn
adc
fsubr
mov
fsubrs
rorl
test
mov
adc
jge
push
bound
cmc
sub
cs
pop
xchg
adc
push
daa
scas
in
xchg
sbb
mov
enter
outsl
xor
push
or
jo
xchg
add
fwait
scas
push
and
popa
sub
jecxz
inc
jno
xor
sub
cmp
js
push
inc
lock
inc
mov
mov
cmp
add
jb
add
sbb
and
gs
or
pop
sub
shr
push
or
cli
dec
jge
ds
sub
add
sub
fdivs
loope
cltd
adc
pop
dec
adcb
push
jne
cmp
adc
pop
jge
dec
sub
sbb
insb
or
test
lret
pop
std
std
icebp
sbb
add
push
mov
mov
int3
fnstcw
cmpb
pusha
icebp
add
mov
repz
movsb
xor
dec
ja
out
add
movsl
psrld
xchg
adc
or
cmc
push
cmpsl
daa
add
sahf
hlt
adc
cld
mov
clc
sub
sbb
mov
push
mov
push
repnz
in
flds
sub
fcos
repnz
xchg
test
les
adc
mov
fisttpl
sub
cmp
sub
mov
mov
or
sub
push
mov
jo
out
sbb
dec
das
add
mov
xor
dec
sbb
and
jmp
imul
jge
stc
mov
sbb
test
dec
es
pop
adc
std
inc
js
pop
xchg
arpl
daa
ret
je
dec
push
dec
xor
xor
jmp
mov
lods
xchg
xor
jno
jae
dec
mov
fsubl
cs
and
shl
mov
xchg
mov
pop
mov
sbb
jl
sbb
mov
cmp
xor
pushw
adc
popa
jge
jecxz
aad
dec
cmp
out
add
fsubrl
adc
adc
add
call
jb
mov
mov
fldl
pop
pop
cmp
iret
fadd
inc
pop
pop
and
sub
jmp
push
push
out
cmp
add
and
cli
popa
test
fnstcw
push
add
or
movsl
and
pop
mov
clc
xchg
pop
negl
nop
push
aaa
push
icebp
icebp
in
pop
jae
jmp
out
call
xchg
sti
pop
jne
sahf
dec
in
cltd
out
sbb
xor
nop
mov
inc
jmp
sub
aaa
pop
pop
jae
jbe
bound
pop
call
jle
adc
das
and
pop
mov
in
sub
cld
xorl
mov
gs
mov
dec
je
jp
movsl
hlt
rcrb
pop
jo
xor
xchg
push
les
push
mov
pop
add
int
mov
lods
hlt
das
lret
std
int3
aas
add
int3
ss
aam
jnp
and
and
pushf
sarb
mov
sub
lahf
pop
test
jp
cmp
mov
sbbl
push
movsb
adc
xchg
dec
and
or
mov
call
or
xlat
dec
mov
and
cmp
lods
lret
je
cmp
test
dec
cli
xchg
sti
rorb
jns
adc
mov
icebp
push
mov
and
ret
xor
push
rcr
adc
dec
loopne
rorl
mov
dec
mov
mov
pop
jp
pop
fdivrp
sbb
fdivrp
es
dec
mov
adc
push
subl
lret
adc
repnz
xlat
and
negl
scas
inc
sub
push
jns
imul
ret
in
mov
test
and
pop
shlb
sbb
jo
mov
mov
sbb
les
mov
fisttpll
cwtl
mov
rol
fldt
sbb
push
jne
jo
xlat
hlt
push
push
clc
add
cld
aam
repz
test
into
dec
push
mov
sahf
dec
decl
mov
add
cmp
xor
dec
mov
insl
inc
and
or
xor
in
ficoms
in
mov
mov
psubusw
sbb
mov
leave
pop
loop
mov
enter
pop
les
lea
push
push
mov
and
push
ret
mov
and
mov
rcl
imul
aam
xor
int3
cltd
cmpsl
pushf
xor
enter
shll
testb
lea
stc
jae
mov
mov
jp
test
sub
adc
xor
xchg
loop
mov
enter
or
hlt
cmp
push
inc
test
xchg
frstor
push
jne
pop
push
std
scas
mov
dec
pop
push
push
or
insb
sbb
fs
outsl
cltd
lret
mov
sub
icebp
adc
testb
adc
or
pushl
or
pusha
mov
mov
test
movsb
mov
insb
lods
les
xlat
or
pop
mov
add
sub
cmp
jb
jae
rolb
cmp
or
xor
push
and
adc
dec
arpl
xchg
jb
dec
out
cs
les
adc
into
lahf
xor
lea
mov
or
out
clc
in
lea
imul
and
xor
pop
push
pop
cmc
cmp
sbb
and
mov
xor
push
ss
jmp
out
test
mov
ss
xor
mov
jbe
andl
mov
cmp
iret
cltd
mov
adc
outsl
adc
mov
fwait
in
pop
or
in
pusha
call
push
je
push
adc
dec
lea
mov
xchg
dec
xchg
gs
jb
into
lahf
mov
or
ja
lret
repz
int3
stc
ret
mov
adc
jge
push
jmp
pusha
movsb
jge
int
cmp
popa
addr16
push
dec
cmp
mov
flds
in
pop
aad
hlt
jno
adc
insb
cmc
nop
dec
xor
push
shlb
xchg
inc
xchg
inc
mov
add
jmp
mov
mov
fsubrl
mov
aas
or
adc
fstl
xor
sub
pop
xchg
push
inc
test
xor
data16
jmp
mov
fiaddl
sbb
test
ffree
cmc
mov
lret
cmp
movsl
or
rcl
mov
pusha
lea
cltd
rcr
cmp
mov
push
cmp
push
xor
inc
cmc
lock
push
bound
loop
inc
rolb
or
sbbb
shlb
andl
lds
fwait
insb
ret
nop
sbb
sub
sbb
ja
aas
xchg
push
repz
gs
test
sti
loope
subl
mov
in
int
add
and
test
into
add
inc
jae
mov
lds
add
pop
mov
cmc
iret
xchg
cmp
add
hlt
and
and
xchg
mov
repnz
jle
pop
iret
or
add
sub
repnz
adc
adc
jmp
inc
mov
stc
xchg
or
cmp
push
xchg
sbb
push
mov
mov
ja
mov
and
dec
lahf
icebp
jae
mov
xor
addb
push
in
out
push
mov
rorb
stos
inc
sub
inc
mov
sar
enter
insl
sub
lret
outsb
subb
int3
test
es
std
add
addb
mov
push
fcompl
data16
fs
inc
xorl
std
jmp
add
sarl
cld
lock
sahf
cltd
lods
add
fnstcw
add
jnp
pop
mov
lret
push
adc
lock
test
mov
pop
enter
xchg
es
xlat
sub
pop
cs
fisubrl
jns
lret
cwtl
jbe
icebp
dec
psrlq
aas
pop
hlt
gs
mov
pushf
cld
push
shl
aaa
adc
daa
bound
push
nop
pop
xlat
js
test
add
xchg
aaa
outsl
into
ss
sbb
cmp
cld
pop
dec
shll
inc
lahf
and
pushf
or
arpl
fwait
adcl
mov
test
lret
movsb
xchg
rcrb
or
mov
idivb
xor
scas
mov
repz
dec
in
mov
out
mov
dec
lahf
lock
mov
loope
cmpsb
in
sub
cmp
add
sbb
shlb
in
cmp
test
adc
pop
sbb
pop
push
jecxz
pop
inc
imul
pop
jno
dec
repnz
lcall
movsb
jecxz
inc
inc
and
popl
mov
rclb
dec
out
stc
xchg
repnz
in
pusha
xchg
dec
xchg
notl
loope
dec
rol
push
mov
xchg
mov
rorb
rcr
xchg
pop
repnz
mov
js
lret
xorb
jp
scas
imulb
gs
scas
je
push
mov
and
jns
es
sbb
sub
xchg
rclb
test
dec
cli
js
jnp
fists
lds
mov
xchg
xor
lods
push
lcall
ds
repnz
push
out
push
lret
in
nop
ret
call
inc
pop
adc
cli
shr
stc
dec
lea
mov
add
iret
out
xchg
push
fcomip
add
or
lods
lret
icebp
repnz
cmp
fwait
addr16
xor
cltd
hlt
mov
xor
cmp
rcrb
or
cmp
lret
push
or
popa
daa
loop
jl
inc
cmp
push
sahf
cmp
lret
out
sbb
inc
mov
add
out
popa
mov
xor
push
push
outsb
or
inc
pop
mov
inc
push
push
add
fcompl
dec
insb
cmp
idiv
in
pop
jne
sub
pushf
cld
call
loope
mov
sbb
xchg
fwait
lds
add
fdivrl
rcl
stos
mov
push
push
jge
xchg
jg
imul
fimuls
mov
add
sbb
stos
jb
or
push
inc
add
xor
sbbl
inc
mov
push
fbstp
or
ljmp
and
jl
cld
negl
and
rorb
shlb
jb
mov
mov
adc
sbb
sbb
aad
jmp
inc
add
mov
orb
pop
or
dec
mov
sahf
mov
inc
xchg
xchg
mov
outsb
das
or
sub
inc
mov
sti
in
mov
push
cmpsl
sbb
negb
sbb
or
dec
push
dec
xchg
jecxz
dec
addr16
pusha
addr16
arpl
sub
stos
cli
pop
testb
clc
clc
push
std
insb
ss
sbb
sti
fiaddl
ljmp
mul
out
jae
xchg
nop
jns
jg
xor
jns
pop
imul
int
pop
lods
movsl
test
dec
lea
push
in
fisttpll
data16
push
lods
xor
cmc
and
repnz
push
call
inc
xchg
mov
stos
lret
sbb
cmpb
lods
or
pop
adc
jp
mov
mov
sub
dec
mov
add
pusha
fimull
in
aam
mov
mov
and
mov
adc
popf
mov
jle
aaa
cmp
cmp
dec
std
cmp
imul
mov
insl
test
icebp
and
mov
sbb
add
cvttps2pi
jb
dec
mov
dec
mov
adc
add
call
out
push
jne
les
sub
repz
and
sbb
test
xlat
shrb
enter
inc
ds
clc
dec
iret
lcall
sub
lahf
jp
sub
push
ljmp
mov
scas
andl
or
add
ja
inc
add
loope
and
xlat
push
imull
mov
push
dec
clc
mov
repnz
or
cs
imul
loopne
gs
pop
aaa
mov
mov
out
push
nop
lds
ja
xor
inc
ret
lods
ds
jbe
fists
inc
and
mov
push
push
fisubrs
ljmp
xchg
popf
inc
cmc
jnp
in
das
mov
lcall
scas
filds
inc
xlat
inc
js
sub
or
outsb
sbbb
xchg
in
pushf
xor
gs
xchg
mov
mov
dec
xlat
cmpsl
add
aaa
cli
xor
aas
pop
and
out
aas
xor
xor
je
push
mov
test
push
jbe
loopne
push
xchg
vpmullw
fs
sub
call
and
xor
je
jo
popa
mov
les
mov
mov
lret
pop
or
lahf
call
ljmp
mov
int3
mov
aas
cmp
push
cmpsl
int
dec
add
pushf
neg
shrb
pusha
clc
push
je
adc
xor
int3
xchg
inc
orl
push
jno
cmc
aas
in
outsl
sbb
add
push
cmp
sbb
pop
cld
int3
mov
mov
push
jb
popf
push
jg
xchg
in
cmp
xchg
add
outsb
jno
jne
inc
inc
enter
into
inc
cltd
aaa
shlb
es
nop
jns
pop
mov
test
int3
das
bound
jb
xor
leave
lahf
in
subl
fldl
loopne
pop
add
sub
scas
popf
cltd
out
rclb
xchg
and
adc
pop
js
adc
mov
mov
jge
daa
xorb
addb
jl
mov
cwtl
jecxz
pop
nop
enterw
add
or
out
pusha
stos
inc
sub
mov
mov
aaa
stos
cmpsl
sbb
imul
in
cli
mov
sbb
scas
sbb
mov
sub
lahf
inc
popf
sub
outsb
inc
add
scas
lds
mov
pop
jb
dec
test
and
inc
imul
push
xchg
mov
jae
cmp
jbe
xor
fsubrs
lds
sbb
leave
dec
insl
cmpsl
xchg
xchg
lea
xor
fistl
fs
adc
test
sbb
xchg
out
cmp
or
xor
jl
dec
mov
movsl
mov
popf
das
les
clc
push
ljmp
sub
and
mov
aas
sbb
sbb
jnp
adc
xor
dec
mov
add
mov
or
scas
dec
xchg
mov
fldenv
or
into
push
mov
into
xor
aas
fimuls
inc
lcall
and
sahf
fnsave
scas
call
fnstenv
rcl
or
aam
or
aad
mov
inc
xchg
in
ljmp
in
aaa
jge
aad
sarl
jp
mov
imul
fcmovne
imul
sbb
cmp
mov
addl
inc
ljmp
jge
push
push
out
ret
xchg
gs
jne
or
stos
mov
xor
mov
mov
lret
push
lods
jecxz
out
je
cmp
pop
add
push
mov
xor
data16
xor
add
js
loopne
xchg
movsb
cmp
stc
adc
pop
fucom
sub
stos
xchg
sub
xchg
add
sbbb
xor
push
mov
test
or
es
ret
jl
or
fs
popa
xor
sbb
push
sbb
dec
sub
popf
dec
scas
fcmovb
lods
pop
data16
sbb
jb
pop
inc
stos
int
mov
mov
inc
add
gs
test
imul
aaa
mov
pop
call
popf
mov
out
jmp
cltd
jne
test
out
inc
out
mov
fcoms
pop
test
pop
mov
repnz
out
lods
cmp
in
outsl
mov
push
cmp
mov
mov
pusha
mov
sbb
out
es
in
xor
out
inc
dec
in
mov
adc
fidivs
xchg
arpl
pop
xchg
adc
mov
in
xor
popa
push
pusha
std
xchg
inc
pushf
loop
mov
push
cmp
insl
arpl
pop
js
ljmp
scas
std
cltd
cltd
loopne
push
cltd
ja
xor
mov
lahf
jo
imul
ror
incl
xchg
cmpsb
lret
cmpsb
ret
daa
sub
dec
jno
cmpsb
sbb
cmp
cmp
xchg
xchg
aam
fwait
sarb
xor
inc
push
daa
cmp
rol
js
ljmp
add
ret
pusha
inc
sbb
xor
hlt
pmaddwd
mov
stos
add
pushl
mov
mov
jnp
test
lret
hlt
sub
xor
stc
sarl
je
mov
sub
addb
lret
push
xor
lock
outsl
pop
rcrl
nop
sbb
dec
mov
push
pop
xchg
aad
les
xchg
pop
data16
jns
ss
sbb
push
lret
rolb
xor
test
into
dec
daa
jnp
inc
xchg
xor
adc
decb
push
lods
or
dec
test
mov
push
std
lods
insb
xor
xor
je
pop
and
mov
cld
lcall
push
fadds
lret
jno
mov
pushf
push
lock
lret
mov
pop
call
icebp
mov
jno
sbb
std
ja
and
dec
adc
pop
loope
cmp
jg
int
shl
mov
push
mov
jge
jb
int
lods
and
andb
outsl
fwait
xchg
pop
inc
mov
jae
dec
xchg
xor
or
test
lcall
dec
dec
loope
jg
mov
push
pop
je
or
push
add
cmp
outsb
gs
lret
fbld
test
test
jnp
sbb
icebp
add
jae
icebp
dec
cmpl
sub
adc
enter
popa
jle
addr16
and
jp
pushf
adc
cmpsb
adc
ret
push
adc
ret
cmp
adc
pop
cli
cmp
clc
lock
xchg
and
ret
rorl
inc
push
mov
pop
or
adc
add
adc
pop
sub
std
dec
mov
je
xor
aam
pop
inc
loopne
mov
sbb
in
mov
out
xchg
lds
xlat
push
cmovs
je
add
out
scas
in
sub
cwtl
ficomps
popf
sub
rorb
xor
mov
je
stos
xchg
push
ds
inc
mov
push
mov
scas
dec
xchg
push
fisttps
stc
cld
pop
add
xor
mov
push
dec
cs
adc
xor
cmp
lods
or
stc
into
cmp
pop
bound
pusha
jmp
cmpb
daa
push
xlat
leave
add
mov
adc
fsubr
insb
jge
mov
xchg
sti
aam
xchg
repz
ds
cmp
adc
pop
xchg
sbb
cmpsl
pusha
pop
jmp
in
cmp
adc
or
mov
mov
mov
mov
je
punpckhbw
stc
jge
into
ret
iret
aaa
pop
sbb
lret
in
cwtl
pop
xchg
popa
into
add
dec
pop
or
xchg
pop
fxch
push
nop
fidivs
mulb
popa
mov
aas
insl
jbe
inc
sbb
sbb
cld
cmp
cmp
add
mov
sbb
das
jo
fwait
test
sarl
outsl
push
scas
mov
push
loop
dec
repz
gs
mov
shll
push
mov
push
sbb
insb
pop
add
jmp
or
testb
lods
mov
int
imul
xchg
dec
inc
mov
add
add
sub
pop
mov
loop
sbb
cmp
jne
mov
push
xchg
cmp
pusha
mov
jg
shl
dec
or
or
dec
xor
pop
dec
dec
push
dec
bound
cmp
and
ret
mov
in
jnp
in
xor
dec
jne
ja
mulb
cmc
rcrl
cmp
xchg
add
cmc
and
repz
dec
pop
dec
adc
loope
mov
jae
inc
in
add
adc
imul
pop
pop
add
cmp
mov
nop
lds
pop
cli
movsb
mov
out
pop
in
push
push
mov
mov
rorl
test
int
in
mov
hlt
test
pop
cmp
cld
rorl
sub
xor
fnstenv
adc
sarl
and
cli
lret
test
leave
je
pop
and
das
dec
pop
add
mov
inc
pop
scas
lds
xor
mov
jl
xor
or
jecxz
xchg
push
out
jge
xor
sbb
add
data16
cmp
fistpll
dec
shlb
imul
lret
xor
dec
mov
pop
lcall
add
lods
sti
pop
mov
xor
hlt
es
jbe
stc
loope
adc
popa
orl
jp
repz
insl
pusha
addr16
daa
and
and
xchg
lods
fistl
dec
rolb
mov
add
push
lahf
xchg
mov
mov
sbb
inc
push
loopne
adcb
inc
loopne
les
adc
adc
mov
adc
ret
inc
test
mov
adc
rorl
mov
sub
fimuls
orb
mov
xchg
bound
stos
xor
jae
xchg
test
cmp
addr16
jb
jmp
arpl
sbb
fdivrs
fwait
adc
fst
sub
ss
in
ret
out
stos
sub
dec
rorl
inc
repz
int
rorb
and
pop
sub
sub
in
sbb
scas
push
stos
jae
sub
sbb
in
pop
and
iret
es
imul
test
and
inc
mov
fwait
sti
lds
in
fisubl
cmpsb
rorb
xor
or
aam
xchg
lret
in
aas
aas
and
mov
mov
int3
jo
roll
mov
jns
pop
decl
jmp
mov
add
shll
dec
mov
test
std
inc
arpl
test
xlat
aad
push
pop
sub
mov
pop
inc
das
into
fstpl
jo
jne
icebp
lret
lods
dec
cmp
pop
mov
dec
cmp
sub
lods
sub
insb
sahf
into
rorb
ror
cmp
inc
add
inc
aad
fimull
subl
insb
cmp
fistpll
call
jmp
sbb
bound
jp
inc
pop
mov
lcall
fsubl
mov
test
lods
mov
mov
sub
and
sub
scas
lds
mov
jnp
pop
test
dec
enter
add
push
pushf
mov
push
adc
int
or
mov
dec
dec
dec
sub
fbstp
jae
pop
js
inc
in
dec
sbb
push
inc
jmp
push
cmp
in
push
push
inc
jge
imul
xchg
punpckhdq
dec
pop
mov
das
pop
outsb
pop
repz
and
push
mov
dec
mov
mov
mov
cltd
test
addr16
xchg
adc
ja
push
stos
cwtl
in
or
es
and
dec
shlb
sbb
sbb
mov
push
les
popa
mov
ja
cmpsl
inc
dec
test
mov
lcall
mov
and
xchg
fdivrs
mov
push
mov
mov
adc
xor
out
call
imul
and
cmpsl
xchg
aam
ret
or
xlat
adc
cs
or
sub
sub
sbb
pop
push
pushf
mov
test
inc
jns
jecxz
pop
fidivl
mov
jp
mov
xchg
dec
les
call
cld
push
sub
mov
cmpsb
push
pop
pop
lock
fisubrl
fsubs
xorb
xchg
fnstcw
jp
jno
xchg
xor
or
push
out
ret
dec
and
adc
into
mov
cmp
orb
push
push
pusha
or
nop
jp
cmpb
aad
cmc
rclb
mov
inc
pusha
stos
sbb
push
sarl
pop
sbb
add
xchg
iret
out
mov
inc
add
adc
loopne
icebp
or
stc
ljmp
enter
xchg
dec
inc
mov
leave
dec
movsl
mov
push
std
adc
into
xor
daa
dec
adc
mov
pop
mov
adc
add
daa
inc
xorl
ret
dec
xor
dec
test
nop
jp
push
stc
rorb
jge
ret
shrb
rolb
sub
outsb
mov
ret
fisubs
jne
adc
jae
in
in
adc
cld
vxorpd
rclb
repnz
in
pushl
in
rcrl
mov
push
mov
and
pop
fmull
aad
leave
cmp
sbb
ret
aas
mov
fwait
or
xor
outsl
pop
inc
pop
inc
sbb
pop
mov
sar
cmp
in
je
in
lds
pop
adc
jl
loopne
data16
dec
cmp
push
iret
imul
sub
xor
ret
orb
les
pop
icebp
int
mov
jecxz
fisubrs
test
adc
push
xor
jae
fldt
shlb
into
or
lahf
loopne
loop
push
inc
icebp
cs
imul
nop
lret
insl
mov
pop
in
mov
or
test
stos
mov
imulb
std
xchg
pop
dec
dec
cwtl
lret
add
out
xchg
mov
jnp
sub
adcl
mov
lods
push
jb
dec
je
inc
dec
std
mov
int
sub
push
mov
outsl
xchg
lahf
pop
push
outsb
movsb
out
lea
std
shlb
sbb
sub
ds
stc
loope
adc
insl
sbb
popa
rclb
and
mov
fwait
inc
sbb
shlb
jecxz
dec
mov
pushf
out
ds
lret
test
iret
in
xor
fcmovb
pop
mov
jbe
js
push
clc
out
out
ret
xor
or
inc
addl
xor
cmpsl
int
imul
mov
xor
cmp
cs
pop
pusha
push
add
rcrl
push
dec
push
fldl
sub
adc
inc
loopne
jno
enterw
add
add
outsl
add
inc
imulb
sub
iret
int
fstl
leave
sbb
mov
mov
js
mov
sar
mov
rorb
and
sub
cwtl
cmp
pop
pop
in
cmp
dec
ljmp
jns
test
xor
outsl
vmovaps
aam
sti
or
ds
repnz
decl
loop
nop
push
jae
mov
mov
mov
shrl
aam
ret
dec
add
jle
and
and
shrb
movsl
out
movsl
push
xor
test
shr
cld
cmp
cmp
xor
adc
nop
adc
rclb
fisttpl
jno
lock
jl
outsb
daa
jno
ficompl
push
push
jae
pop
cltd
movsb
fs
mov
fistpll
int3
int3
xchg
xchg
nop
xchg
jmp
aas
lret
pop
lods
mov
fdivrs
test
ror
adc
jns
loopne
fwait
inc
movsl
std
sbb
cmp
icebp
mov
ret
cmp
nop
pop
cmp
data16
cmpsl
xor
cs
dec
add
mov
pop
test
inc
xchg
add
ret
leave
call
mov
das
insl
leave
pushl
aas
jl
xor
inc
inc
subb
xchg
pop
loop
sub
xchg
mov
cmc
popf
gs
aaa
and
stos
stc
cmpsl
mov
mov
add
lret
cmp
cld
imul
xchg
or
pop
mov
aas
sbb
and
sbb
inc
jae
push
std
in
or
xor
and
xchg
loopne
repnz
mov
aas
xchg
mov
out
push
mov
mov
xchg
push
cmpsl
fbstp
ret
mov
dec
or
adc
pop
jmp
loope
and
bound
rcl
add
je
pusha
inc
psubusw
loop
adc
xchg
or
xor
shrb
stc
out
lcall
filds
cmc
inc
pop
aas
in
adcl
repnz
xchg
lods
lea
mov
mov
inc
test
jo
leave
lock
mov
test
cwtl
xchg
adcb
aaa
jae
dec
pop
sub
scas
popl
scas
call
orb
outsb
jg
push
dec
jo
ljmp
test
arpl
movsl
pop
xchg
jp
push
shl
sub
push
shlb
add
test
adc
push
test
mov
sbb
adcb
divb
push
jnp
dec
or
jmp
jg
into
aaa
pop
hlt
sbb
mov
mov
sub
pop
xchg
das
cmc
push
iret
jle
mov
mov
xchg
push
push
cli
sub
sbb
repnz
pop
shrl
aam
std
pop
jle
in
cld
jb
or
rorl
mov
push
cmpsl
mov
inc
out
insb
fcompl
add
cwtl
or
adc
sub
call
fldl
adc
pushf
cmp
mov
cltd
dec
xchg
adc
adc
inc
push
shrl
daa
sub
stos
cmc
movsl
sbb
push
adc
roll
mov
cmpsl
and
pop
jns
and
inc
pop
pop
stc
xor
loopne
add
inc
inc
pop
into
mov
dec
dec
test
cmpsb
and
mov
mov
pop
pop
mov
jmp
cmp
repnz
shll
jl
pop
fists
mov
inc
inc
je
andb
gs
sub
insl
stos
inc
stos
sub
bound
scas
mov
and
sbbl
lods
mov
sub
jmp
ljmp
fsts
arpl
xor
push
fildll
mov
in
mov
ljmp
sbb
xor
mov
xorb
dec
lcall
inc
mov
hlt
int3
sub
jp
int3
mov
and
dec
inc
push
iret
push
push
gs
xor
mov
sar
xor
hlt
lcall
push
lret
jno
cmpsl
add
iret
repnz
lock
dec
dec
push
push
push
push
mov
cmpsb
jns
push
or
push
lea
xorl
cmp
leave
arpl
xorb
pop
inc
xor
jae
js
lock
push
xor
inc
ja
cmpl
call
sbb
xor
pushf
add
nop
mov
adcb
sbb
rolb
cmpsb
pushf
enter
shrb
add
xchg
addr16
and
sub
cmp
cmp
cs
cmp
push
mov
pop
adc
jle
leave
into
in
pop
jnp
loope
pop
aam
inc
or
ss
push
xchg
movsb
mov
test
sbb
test
repnz
pusha
mov
cld
adc
mov
pop
sub
ror
subb
mov
sub
insl
subb
mov
ret
jecxz
jno
rcll
push
aam
cmp
dec
sub
rcrb
hlt
mov
test
xor
jge
repnz
xchg
mov
subb
loop
push
push
mov
bound
mov
bound
in
push
adc
fwait
test
inc
dec
jnp
jmp
aam
enter
cmp
mov
cmp
dec
jmp
push
in
int
into
aas
stos
add
xchg
dec
mov
fildl
and
or
cmc
xchg
repz
xor
pop
clc
aad
or
insl
dec
mov
jmp
stos
pusha
and
jge
lea
push
sub
jne
sub
aam
mov
mov
pop
hlt
test
clc
mov
cmp
cmc
int3
sti
sub
stc
loop
xchg
cs
mov
repz
lcall
stos
inc
insl
mov
xor
push
sbb
cmp
pushf
test
cmp
push
mov
add
imul
sbb
fdivs
mov
jp
bound
mov
adc
fsubs
out
insb
push
fistl
aas
dec
sbb
inc
inc
daa
dec
dec
into
popf
shlb
fmull
stc
xchg
inc
mov
push
inc
in
pop
jbe
fsubl
dec
mov
das
mov
in
mov
inc
lods
int
out
dec
lcall
pop
mov
stc
loop
mov
xchg
dec
test
mov
push
add
imul
sbb
cmp
sbb
and
jnp
fsubl
jno
in
rcll
mov
sbb
scas
dec
mov
pop
imul
xchg
mov
loop
jnp
repnz
insl
in
mov
scas
mov
add
pop
adc
add
xor
rcrb
popf
loop
adc
mov
mov
inc
hlt
popa
dec
clc
mull
dec
add
arpl
call
cmp
dec
pop
add
sub
mov
push
push
mov
sub
clc
cltd
ljmp
pop
sbbl
in
leave
divb
testb
cmp
movsb
ljmp
sbb
insl
mov
mov
roll
in
mov
test
pop
std
fs
dec
and
into
icebp
aad
roll
fsubrl
shll
mov
cmp
out
outsb
and
cmpsb
xchg
cmp
jb
cli
aam
push
mov
mov
pop
iret
sarl
pop
insl
or
fsubs
out
mov
fcmovnb
push
jge
lcall
fdivs
mov
rol
sar
mov
stos
add
mov
xor
repnz
jbe
int3
mov
and
sub
in
das
mov
int3
mov
mov
jg
xor
pop
or
in
adc
pop
sbb
jne
shlb
into
aad
movsl
sbb
pop
or
cmpsl
mov
stc
leave
xchg
aaa
inc
pushf
or
inc
in
imul
add
pop
xor
loop
xchg
pusha
cmp
cs
cmpsb
mov
pop
and
int3
repnz
fcompl
pop
jo
cmp
inc
jne
sbb
out
les
popa
jmp
cltd
xchg
xor
jae
xor
mov
or
das
pop
sbb
loope
ret
inc
mov
out
ret
xor
jo
aas
jns
lahf
pop
loop
psubsw
mov
pop
xor
test
cwtl
mov
insb
pop
mov
loopne
or
push
or
xor
int3
push
icebp
pop
cwtl
ret
pop
mov
in
cmp
ljmp
inc
mov
dec
and
mov
out
cmp
fsubrs
jne
mov
movsl
dec
out
pop
dec
mov
adc
add
cmp
adc
mov
mov
in
nop
outsb
push
pushf
adcb
inc
daa
and
cmp
dec
xor
cltd
adc
xchg
mov
push
or
and
imul
xchg
mov
mov
adc
iret
leave
cmp
lock
mov
xchg
sub
jmp
sub
or
cmc
pop
mov
dec
hlt
iret
sbb
jg
mov
xlat
push
inc
cmp
xchg
or
push
sahf
add
ret
push
adc
popa
jmp
push
insb
add
push
mov
and
lds
pop
cmp
movsb
ds
movsl
jo
cmp
jmp
pusha
mov
sbb
xchg
test
xchg
dec
mov
xchg
call
scas
or
test
pop
sbbb
adc
and
aam
daa
pop
pop
and
mov
xor
xchg
sub
cmp
out
dec
dec
mov
pop
repz
mov
fstps
inc
xor
mov
inc
pop
data16
in
add
aas
test
xor
mov
sub
sbb
insb
mov
sub
lods
aad
push
mov
repz
push
sub
dec
dec
cmp
aas
dec
xchg
in
add
cs
rcl
mov
out
ret
mov
mov
mov
xchg
loop
cltd
sti
pushf
jbe
movsb
xor
sbbl
addr16
in
dec
mov
sbb
int
insl
xor
mov
je
shrb
mov
stc
ret
add
cmc
push
aam
mov
mov
clc
das
ds
mov
in
xor
fstpl
cmpb
imul
xchg
fidivrs
js
jns
xor
in
mov
xchg
mov
sub
rorl
in
mov
jmp
and
out
jne
jo
xchg
iret
ds
add
sahf
cmp
push
jg
adc
and
mov
pop
lahf
ja
ror
push
lcall
mov
imul
neg
xchg
daa
out
popf
mov
lahf
mov
dec
cs
addb
mov
in
add
pop
mov
rcrl
out
dec
or
mov
jo
cmp
jne
sbb
mov
inc
mov
nop
out
cmpsb
jb
add
lock
rorl
xchg
xchg
mov
and
inc
sti
cmpsb
cmp
pop
aad
scas
push
jge
mov
jo
xor
xchg
mov
je
jbe
sarl
rcrb
add
mov
in
outsb
push
inc
push
fdivp
sub
insb
jg
or
sbb
fstpl
mov
dec
dec
clc
sbb
sbb
pop
push
and
pop
and
mov
test
addr16
mov
in
xchg
sub
xor
psrad
jmp
xor
outsb
lea
mov
loope
leave
xor
ljmp
cmp
scas
sub
mov
fwait
dec
sbbb
std
shlb
jae
in
cmp
movsb
cmp
movsl
aam
jmp
jle
mov
sub
out
jbe
sub
mov
pop
sub
idivl
fstpl
dec
sbb
jmp
add
and
jae
mov
addr16
sbb
setl
mov
xor
or
je
lret
pop
jo
outsl
jae
jmp
loopne
loope
mov
les
jno
fwait
inc
push
je
lcall
and
adc
outsb
cmp
inc
addl
sbb
hlt
mov
pop
sub
fisubl
out
loopne
icebp
rcll
shll
dec
xchg
pop
fsubl
outsl
ss
mov
mull
int
int
stos
pop
inc
push
inc
adc
sub
ja
pop
jne
cmp
sub
xchg
mov
push
roll
lcall
hlt
cmp
dec
mov
or
mov
loopne
jmp
pop
fdivr
fsubrs
fsubrs
test
rol
scas
pop
add
xlat
repz
iret
push
out
adc
push
add
sbb
mov
jecxz
das
push
stc
stos
addl
insl
push
add
das
jg
inc
loope
dec
xor
std
pop
outsl
pushf
push
ljmp
aaa
push
pop
pop
iret
call
rclb
dec
dec
insb
xor
aad
xor
pop
or
jo
pop
push
loope
ja
cwtl
and
hlt
fs
pop
add
sub
jae
in
xchg
pop
js
shl
mov
push
sbb
loopne
mov
cmpb
ficoms
inc
lock
repz
stc
inc
jmp
sbb
daa
xchg
jle
call
mov
jae
bound
jb
push
push
dec
or
mov
mov
pop
cmp
ljmpw
cwtl
adc
add
dec
jnp
test
and
fsubs
cs
dec
xchg
aam
mov
jae
inc
pop
shl
pop
cmp
mov
nop
pop
ss
jle
jae
adc
sbb
sub
ds
notb
inc
jp
jne
cli
test
lret
enter
lds
push
mov
or
xchg
ret
inc
jno
stc
dec
psrlw
and
mov
and
out
cmp
inc
cwtl
mov
cli
fs
xchg
mov
flds
shll
adcl
mov
negl
xchg
dec
push
fbstp
lock
mov
sub
mov
loope
sub
or
cmpsb
outsl
ljmp
pop
lods
mov
adc
cld
xchg
scas
imulb
fnsave
out
jp
push
mull
jg
dec
rorl
push
aas
sti
xor
rorb
xchg
ret
lea
push
xor
adc
mov
inc
es
pop
repz
cmp
jae
push
xorl
roll
testl
out
jns
jg
je
mov
sub
or
sbb
scas
fiaddl
repz
lahf
xor
loopne
push
test
sbb
test
popf
push
sti
or
and
mov
pop
pop
xchg
mov
jne
mov
shlb
pop
sbb
pop
psubsb
and
outsb
jbe
aam
xor
pop
movq
jge
popa
sub
jg
jb
shl
mov
lea
arpl
ja
jp
pop
stos
rclb
xor
out
shlb
mov
test
lds
push
lret
jno
movsl
xchg
shl
loope
rclb
test
push
xor
fnstcw
mov
inc
xchg
jmp
push
in
fwait
add
lcall
mov
fldcw
lds
fisttpll
loopne
push
sub
mul
mov
pop
pop
adc
mov
repz
xor
lds
xor
pop
dec
and
xor
in
dec
je
in
push
cmpsl
xchg
shll
xchg
lea
bound
in
repnz
jno
call
out
in
add
rolb
nop
iret
ret
add
mov
addr16
cmp
inc
out
arpl
mov
add
and
pop
bound
xchg
int3
mov
and
cmpsl
enter
sub
test
not
mov
popf
sbb
stc
push
lcall
scas
enter
stos
mov
jge
dec
lret
fstpt
rol
xchg
and
mov
dec
testb
inc
cmp
fnstsw
mov
cmp
notb
inc
inc
add
add
dec
mov
leave
mov
outsb
pop
les
mov
inc
sub
scas
out
test
adc
test
ljmp
fmul
cmp
xlat
sbb
aad
enter
and
repz
das
jge
loope
aam
inc
sub
sub
xor
push
lea
lea
jg
inc
jl
push
or
mov
addr16
cwtl
jbe
mov
add
jo
mov
lods
xlat
xlat
sub
fdivrs
mov
sbb
in
inc
mov
dec
out
push
and
mov
xor
scas
mov
dec
xchg
faddp
fsubl
ds
cmp
addr16
fldenv
adc
adc
maskmovq
divl
push
repz
test
push
fcom
out
adc
enter
out
jle
repnz
das
xchg
clc
mov
loopne
nop
push
push
decl
out
inc
cs
loopne
mov
or
or
aas
mov
pop
jmp
xlat
aaa
test
pop
mov
and
scas
movsl
cmp
sbb
xchg
xor
bound
xchg
lret
jg
std
test
loop
pop
xchg
ret
ret
jns
pop
cmp
popa
dec
and
sbbb
icebp
cmp
jbe
shl
aaa
loopne
xchg
mov
add
xchg
aam
mov
fldt
mov
adc
xchg
xchg
lret
jo
cmp
xorb
adc
iret
fidivs
pop
sub
and
mov
fisubrl
fidivrl
push
sub
add
movsb
push
loopne
fdivp
jp
dec
jmp
iret
mov
sbb
sub
loope
fnstenv
aam
mov
lahf
mov
adc
push
mov
mov
xchg
popa
add
xchg
push
jb
inc
andl
add
pop
popf
cs
loop
mov
dec
dec
shll
mov
dec
add
add
inc
mov
int
es
cmp
sbb
dec
xlat
or
pop
xchg
sti
outsb
aam
jle
enter
mov
sahf
cmpl
je
mov
jae
andb
sahf
pcmpeqd
or
test
dec
pop
add
into
adc
cmp
rol
addr16
dec
and
xchg
movsb
test
mov
inc
mov
fsts
fdivrs
mov
les
xor
inc
std
push
lahf
jecxz
fstpl
fstl
lods
pop
mov
jl
into
and
je
cmp
cmpsb
sti
adc
push
cmp
mov
sarb
and
cltd
hlt
or
jne
repnz
xor
cmp
outsl
cmpb
push
negl
int3
test
pop
pop
mov
fimull
leave
jnp
popa
xor
xor
sub
mov
jne
aas
stos
xchg
rclb
xchg
nop
mov
xor
dec
imul
repz
imul
mov
jbe
push
leave
sbb
mov
fisttps
insl
cli
push
jo
jp
mov
xchg
push
mov
insl
into
inc
lahf
xlat
xchg
sbb
into
inc
jno
out
lret
xchg
mov
mov
adc
clc
iret
cld
add
push
orl
jge
out
push
inc
mov
dec
pop
lret
fimuls
es
imull
out
lock
movsb
nop
mov
mov
add
mov
push
bound
push
aaa
and
repnz
stos
mov
aaa
rcr
cmp
pop
or
or
sub
sar
cmc
clc
sbb
xlat
lcall
mov
mov
xor
sbb
mov
out
sarl
call
pop
roll
sarl
mov
cmp
lock
mov
inc
adc
loopne
xchg
pop
ss
sub
mov
ljmp
mov
repz
flds
mov
lea
dec
ds
leave
pop
xor
mov
xchg
scas
inc
xor
xchg
repz
push
xchg
movb
push
dec
xchg
mov
lods
je
fidivs
pop
cwtl
pop
jg
nop
or
pop
dec
cmp
in
mov
sbb
hlt
cmpsb
lods
out
adc
call
fstpt
es
call
scas
rcrl
scas
jae
mov
ljmp
retw
mov
mov
notb
mov
rolb
aaa
fwait
in
pop
sub
mov
mov
movsl
int
ds
adcb
xor
inc
aam
mov
cmpsl
mov
das
shll
inc
mov
and
and
icebp
aas
imul
into
es
int
mov
mov
daa
shrb
int
orb
lcall
mov
cwtl
sub
inc
and
daa
data16
xchg
mov
jne
or
stos
and
dec
inc
aas
les
jge
mov
negl
bound
imul
sbb
add
mov
add
stc
int3
lret
adc
jmp
mov
leave
addb
push
mov
xchg
ljmp
lea
andl
dec
add
in
mov
arpl
sti
lds
mov
jle
xchg
gs
lock
adc
ficompl
fldt
push
cmp
fldl
lahf
sbbb
mov
out
ret
ror
or
out
sbb
mulb
xchg
fwait
sbb
psubusw
cmp
in
xchg
add
popa
insb
xchg
lret
fisttps
xlat
in
or
xor
adc
arpl
lock
jecxz
inc
dec
sbb
push
xchg
call
cmpl
jmp
sbb
adc
add
jae
mov
cmp
cld
xchg
punpcklwd
int
ljmp
or
aam
movsl
call
cltd
mov
imul
les
fucom
sub
lods
aam
and
add
stos
or
sbb
xlat
cltd
or
addr16
mov
call
sbb
push
movsl
aaa
mov
jo
cwtl
push
jecxz
cmp
mov
push
dec
insl
jne
mov
jo
in
sbb
int
xchg
xor
push
icebp
cwtl
fldt
repnz
test
movsb
daa
inc
loopne
xchg
and
in
mov
xor
mov
inc
push
idivb
mov
mov
jns
sbb
das
cmp
out
fcmovbe
imul
jmp
xchg
mov
imul
mov
cld
jns
dec
mov
loop
cmp
push
sbb
out
imul
push
popa
xchg
push
les
loopne
pop
bound
scas
xor
jno
dec
out
movsl
push
mov
popf
inc
fwait
sahf
push
int
out
push
sub
inc
xchg
insb
push
mov
jmp
mov
dec
movsb
movsl
jo
dec
subb
inc
mov
xor
sbb
mov
adc
push
xchg
jae
je
outsl
arpl
cmp
adc
sarl
pop
sub
sahf
loop
cmp
sbb
xor
arpl
sbb
cltd
sti
jae
in
or
les
pop
sub
mov
int3
cmp
mov
testl
imul
xorl
movsl
xor
in
arpl
insl
aam
addr16
dec
sub
mov
xchg
jns
inc
aaa
ss
shrb
out
fs
pop
xchg
pop
inc
adc
jle
mov
fwait
jge
lret
sub
ret
je
test
sbb
inc
daa
cmp
and
setb
xchg
jge
inc
inc
test
push
dec
loop
cwtl
cmp
mov
mov
ss
and
inc
fs
addr16
xor
fwait
icebp
mov
cli
xchg
push
cwtl
xchg
jl
arpl
lock
mov
in
lds
sub
fs
test
push
push
ljmp
shl
enter
dec
xor
lret
jg
insb
subl
sub
shlb
jo
andb
mov
add
adc
mov
repz
xchg
scas
ret
or
mov
xchg
ficoms
mov
mov
inc
sub
stc
pop
cli
and
fldcw
aaa
xor
cmpsb
js
mov
and
mov
mov
xchg
cmp
rorb
jmp
int
into
aam
sar
int
xlat
imul
adc
push
cmp
faddl
int
imul
inc
mov
lock
xor
icebp
loope
mov
shrl
xchg
out
and
andl
dec
fwait
mov
xchg
dec
sub
idivl
xchg
shrl
xchg
nop
jno
sbbl
cld
je
xchg
cmp
lret
mov
adc
jg
aam
aas
movsb
fistl
jb
rcrb
adc
test
enter
das
test
std
push
mov
sub
sub
lahf
push
jne
or
aam
inc
sub
push
adc
pusha
mov
imul
dec
xchg
sbbb
push
xchg
andb
add
pop
or
pop
bound
cmc
mov
sub
fwait
xchg
mov
sbb
add
xchg
popa
pushf
cli
in
das
mov
insb
adc
push
push
xchg
and
inc
mov
jb
leave
es
push
js
mov
xor
nop
rclb
inc
sub
sbb
push
rcrl
cmp
dec
int
add
icebp
xor
shlb
dec
and
mov
ljmp
fwait
std
fldt
lds
cmc
mov
cltd
jno
test
pop
pop
in
std
and
sub
pop
in
loopne
iret
test
in
iret
push
cwtl
pop
andl
loop
scas
sbb
dec
sbb
mov
or
xchg
out
icebp
out
fisttpll
add
mov
into
push
addr16
aaa
scas
inc
sbb
mov
std
xchg
cs
xchg
add
mov
jb
pushf
je
or
sbb
and
or
fstl
scas
sbb
mov
dec
or
mov
sbb
ret
pusha
dec
lea
lret
xor
push
adcl
push
insl
adc
mov
push
cltd
sub
mov
xchg
nop
mov
mov
das
xchg
sub
aaa
push
push
mov
fs
scas
jnp
imul
pop
mov
mov
outsl
mov
ror
mov
sbb
sub
adc
insl
mov
push
xchg
push
pop
jae
add
push
sub
int3
push
adc
pop
push
sbb
test
je
popa
lods
popa
imul
add
jmp
sahf
push
hlt
mov
shl
sti
sbb
mov
mov
cli
adc
pusha
xor
cmpsl
mov
mov
decl
pop
adc
mov
pusha
int
xor
movl
rol
ret
mov
std
mov
or
and
and
sbb
aam
hlt
push
pop
jge
repnz
jnp
push
idiv
sub
sub
fisubrl
mov
jl
ret
inc
movsb
xchg
xorb
out
push
push
and
xchg
and
xchg
and
jne
andb
in
fsts
xor
out
add
add
pop
adc
jno
pop
dec
out
rorl
lock
sbb
adc
aam
fisttps
movsl
adc
insb
fbld
and
add
mov
xorb
pop
aas
inc
lock
pop
mov
cmp
sbb
in
adc
cmp
mov
pop
out
mov
shll
adc
stc
movl
push
cmp
decl
xchg
dec
inc
dec
add
daa
aad
or
sbb
pop
cltd
dec
jne
xchg
xchg
cmp
int3
inc
add
mov
shl
addr16
out
fadd
fs
xlat
pop
pusha
inc
roll
stc
call
inc
scas
fsubs
shrb
pop
fwait
add
mov
push
stos
mov
std
mov
sbb
sub
iret
sub
pop
in
test
sahf
mov
popa
xchg
mov
mov
idivl
sbb
nop
addl
cltd
mov
shrl
mov
sub
out
xor
jecxz
dec
stc
adc
inc
add
mov
mov
sub
inc
lcall
loope
cmpsb
push
cltd
imul
sarb
outsl
imul
mov
xchg
cmp
aam
jle
stc
adc
imul
mov
add
push
xor
insb
outsl
and
mov
xor
leave
dec
lods
lds
pop
lock
sbb
movsb
xchg
hlt
push
mov
and
pop
scas
call
popf
loopne
ja
jno
sub
xor
sarb
push
scas
pop
cmpb
ja
out
or
test
inc
sahf
dec
sub
inc
push
inc
or
xchg
pop
mov
cwtl
dec
je
aad
cmp
xor
pop
sbb
adc
shll
sub
jb
xchg
cltd
out
lret
ret
lret
int3
jnp
cmp
jno
test
ljmp
repz
adc
loopne
pop
int
jb
aas
lret
adcb
ja
data16
sarb
repnz
loope
sbb
xor
cld
cmp
sbb
test
cmpsl
jno
add
jge
add
add
mov
inc
in
mov
push
xchg
fisttpll
mov
stos
lahf
dec
and
xor
fdiv
jg
xor
jmp
scas
sbb
loope
inc
aas
or
cmp
leave
cmpsl
mov
test
sbb
xchg
push
push
lods
jne
rcrl
sub
push
mov
movsl
bound
mov
out
xor
jbe
js
dec
push
push
mov
jmp
mov
out
inc
lods
bound
sbb
stos
xor
push
test
cmp
cmp
jge
or
push
dec
insb
sub
sbb
in
enter
dec
test
push
rolb
repnz
dec
jl
fcmovu
rcll
pop
push
cltd
idivb
in
adc
push
mov
jl
add
xor
jbe
adc
mov
mov
sub
xor
ds
mov
pop
lea
lahf
outsb
xchg
pop
xor
jne
mov
dec
jp
xchg
js
inc
ficoml
jmp
or
xlat
daa
cmpb
xlat
push
stc
inc
cwtl
mov
cld
dec
test
push
imul
scas
mov
xchg
mov
or
add
mov
ror
xchg
and
mov
jae
mov
cmp
out
sar
test
icebp
addl
jnp
jmp
or
inc
mov
fwait
lret
insb
jnp
shl
xchg
insb
xor
dec
aaa
sbb
lock
aaa
in
and
les
push
lret
int3
lds
loope
lds
decb
adc
les
dec
fisubrl
adc
xchg
ficoml
cmp
dec
jne
outsl
mov
sbb
out
sub
test
push
mov
insb
fwait
daa
rolb
mov
aas
inc
cmp
dec
jo
or
dec
inc
ret
jge
xor
iret
sti
jecxz
negl
arpl
push
jle
in
cmp
in
mov
call
fistpll
cmpsl
fisubl
imulb
mov
aam
fldl
es
mov
mov
dec
in
lds
mov
sbb
or
scas
xchg
push
int3
out
ljmp
enter
mov
pop
dec
jg
jg
jle
movsb
sub
into
push
mov
mov
cli
je
push
popa
aaa
imul
ja
adc
adcl
aam
jbe
mov
cmc
cmpsb
shl
xlat
test
insb
imul
shr
mov
jmp
mov
or
cmp
jb
mov
inc
sbb
cmpsl
adc
push
dec
and
and
loopne
shll
sarl
dec
jl
xchg
mov
mov
movsb
mov
nop
test
int3
fwait
jle
call
aam
xchg
and
imul
push
cmc
not
lods
sbb
lsl
mov
iret
sar
je
aam
push
loopne
hlt
jecxz
cmp
sti
cmp
and
adc
ja
xchg
xchg
fwait
aas
adc
scas
or
loope
in
imul
mov
popa
jno
adc
jmp
lds
fwait
cmp
mov
rclb
mov
inc
dec
dec
js
add
and
nop
jecxz
cmpsb
stos
add
pop
push
cmpsl
sub
orb
jp
dec
push
in
lods
or
test
or
rol
rcll
ret
cmp
out
or
sub
dec
divb
xchg
jecxz
push
inc
push
mov
sbbb
jbe
loop
dec
pop
sbb
shl
jecxz
popa
imul
lds
or
jne
or
movsb
cmc
mov
fcmovnbe
stos
dec
fisttpl
cmp
push
insb
mov
lds
sbb
adc
mov
dec
fadds
addl
cwtl
and
xchg
fstl
mov
into
nop
jecxz
fucomip
mov
adc
sub
int
jns
sbb
outsl
pop
mov
cmp
and
cmp
mov
nop
insl
push
mov
sbb
push
sub
mov
into
jge
cmp
and
xor
sub
test
scas
and
imul
movsl
std
icebp
negl
push
cmp
lcall
call
ljmp
movsl
mov
sub
xor
sub
pop
xlat
subb
dec
nop
dec
sbb
xchg
ret
push
xchg
test
pop
pop
test
cltd
dec
clc
mov
bnd
inc
rcll
mov
rcrl
shr
sti
add
dec
inc
jno
push
lea
fildl
sbb
dec
in
fidivrs
jmp
push
mov
lods
sbb
mov
or
mov
xchg
jg
aad
mov
cmp
out
popf
lcall
add
mov
sbb
fdivrp
flds
clc
ds
lret
push
mov
add
cld
jb
push
mov
inc
insl
stc
das
jnp
fs
xor
xchg
push
fmull
fsts
movsl
les
jmp
addr16
shlb
cltd
ja
int
repz
push
pop
xor
add
cmp
shlb
adc
pop
push
xchg
pop
call
out
outsb
ret
add
mov
lcall
and
mov
and
mov
notb
cmp
jle
or
xlat
cmp
xchg
cmpsb
mov
cwtl
xor
inc
mov
fcoml
sahf
in
jbe
shrb
pop
pushf
ret
fildl
imull
test
cmp
gs
std
pop
stos
insb
push
mov
into
adc
cmp
lcall
loopne
dec
push
adc
jae
lods
in
sub
or
adc
test
dec
inc
xchg
pop
jecxz
or
cltd
jp,pt
inc
mov
push
enter
movsb
jb
sbb
adc
out
js
das
lock
and
mov
sti
push
iret
cmc
fildll
sahf
dec
fsubrp
xchg
js
xchg
ror
cs
pop
xchg
push
and
lahf
divb
cmp
rclb
inc
xchg
jb
ja
in
mov
add
out
addr16
mov
icebp
push
add
sbb
mov
pop
arpl
idivl
mov
daa
pop
test
inc
inc
sbb
cld
insl
xor
sub
push
in
fcmovnb
jp
cmp
jl
pop
adc
sbb
scas
popa
push
lret
inc
mov
pushf
popa
pusha
push
push
fdivrl
lret
and
popl
test
addr16
add
out
test
mov
fcoml
cmp
mov
pop
in
leave
cmp
fisubl
icebp
and
shr
jecxz
dec
jo
jae
sub
mov
fdivrl
sbb
xchg
sarb
sub
int
jno
or
xlat
xchg
xchg
inc
ja
jns
aaa
clc
sub
jo
sbbl
insb
cs
or
rcr
outsl
leave
pusha
sti
and
mov
push
ret
imul
enter
jns
mov
int3
sahf
inc
adc
idivl
scas
aas
fwait
lret
push
in
or
and
mov
pop
cli
pop
fcmovbe
clc
scas
cmp
push
iret
jl
add
jae
adc
sarl
push
popf
les
rcll
fdiv
and
push
mov
adc
in
lods
mov
mov
imul
in
xchg
fs
xor
adc
cmpsb
jne
aam
lock
aaa
fistps
ret
sub
inc
cli
hlt
push
or
daa
mov
popa
sub
add
xlat
mov
sbb
ja
push
stos
pusha
push
jp
push
cmp
add
in
inc
fmuls
in
iret
cli
inc
or
imul
sbb
dec
fisubrl
sub
xchg
addr16
aam
mov
lahf
icebp
pop
in
lcall
xor
loop
sub
int
fst
mov
mov
addr16
enter
sarl
in
repz
and
add
add
loope
test
jns
add
push
arpl
outsl
and
es
lods
or
scas
pop
add
out
push
ss
or
and
in
mov
loopne
xor
xchg
hlt
stc
pop
test
insl
dec
inc
jo
push
popa
in
cmpsb
jne
mov
cld
out
inc
inc
or
jp
ja
das
cwtl
mov
cmp
pop
mov
fnstenv
xlat
cmp
rolb
insl
xchg
cmpsb
fcom
pop
pop
inc
or
je
mov
dec
pop
and
mov
je
je
jno
lcall
jnp
adc
bound
dec
jb
nop
jno
jmp
enter
mov
lds
jbe
ret
or
xor
out
data16
jl
adc
adc
cmpb
leave
adc
int3
mov
cmc
and
shlb
fiadds
int
mov
jp
loop
scas
clc
bound
je
add
jae
jge
mov
mov
lret
stos
es
into
adc
push
push
fyl2x
les
call
push
test
adc
mov
sub
in
mov
lret
push
clc
mov
cs
ret
dec
addb
fistpl
out
or
mov
push
mov
mov
xchg
call
loopne
and
shll
cmp
test
push
adc
jae
lods
xchg
mov
and
dec
daa
lock
jb
call
test
out
ljmp
pop
cwtl
test
inc
aaa
outsb
sar
mov
xor
push
jno
lret
add
jge
pop
bound
push
arpl
sahf
sbb
movsbl
inc
mov
lds
and
push
ret
movsb
push
xor
fnsave
repz
mov
mov
sarl
rolb
js
enter
xlat
cltd
insb
imul
push
dec
stos
add
jo
cmpsl
pop
inc
inc
push
adc
mov
push
das
jb
fs
fwait
xor
or
ljmp
adc
ja
adc
out
shlb
cmp
lcall
rclb
mov
ljmp
ret
jo
jnp
lods
dec
dec
sbb
cmpsl
lock
aaa
pusha
dec
scas
jb
out
cmpsl
test
sub
clc
lret
scas
cmp
add
sbb
push
insb
dec
movsb
pop
fs
repnz
int3
or
cmpsl
test
adc
out
mov
data16
inc
adc
adc
fs
daa
insl
adc
pop
ljmp
mov
mov
xor
xchg
addl
scas
sub
mov
xor
mov
out
jmp
mov
repz
out
lcall
cmp
aas
xchg
cwtl
imul
push
jbe
mov
shrb
cmpsl
mov
fwait
add
inc
inc
aaa
sbb
mov
dec
stos
jne
jne
push
outsb
shr
push
pop
cmp
push
xchg
stc
jno
add
in
movsl
xchg
jo
je
inc
outsb
out
mov
call
fdivs
shrb
mov
mov
divb
fbstp
jb
add
jp
in
mov
push
adc
cmp
lds
ljmp
inc
inc
mov
or
mov
fwait
xchg
or
sbb
mov
mov
out
je
cmc
fisttps
ja
xchg
outsl
ret
ficompl
es
pusha
or
shll
and
pop
or
in
or
xchg
mov
stc
push
shrb
xchg
fbld
cmpsl
in
pop
sbb
and
xor
jmp
pop
stos
aaa
cmp
lods
ja
inc
dec
dec
cmc
mov
cmp
test
mov
jge
aam
ret
push
mov
add
sahf
leave
lods
clc
xor
mov
outsl
xchg
adc
adc
or
scas
fwait
scas
cmpsl
adc
rol
lock
popa
sub
xorl
adc
cltd
xor
ss
or
test
test
cmp
adc
js
jle
cltd
in
fstpt
fmull
adc
push
out
or
in
sti
in
sbb
lock
push
into
cmpb
push
lcall
shlb
jl
sti
int3
lea
loop
mov
push
jl
aam
loope
imulb
cmpsb
jae
inc
lcall
sub
and
and
rol
je
jge
out
mov
or
mov
out
aad
push
inc
pop
mov
inc
xor
lods
sbb
movsb
leave
flds
jecxz
popa
js
adc
cld
es
ds
mov
push
xchg
mov
jae
xchg
sub
int3
dec
jl
cli
out
and
gs
fists
xorl
mov
jbe
pop
xor
cmp
jg
imul
jle
pop
out
sbb
out
loop
and
mov
sub
mov
stos
call
inc
or
push
push
cmp
out
insl
les
data16
inc
xlat
dec
mov
cmp
lds
jle
lret
arpl
in
aas
sbb
clc
push
push
data16
jno
cltd
xor
mov
mov
inc
mov
xchg
push
scas
sbb
add
enter
je
add
sub
adc
imul
lock
and
sub
std
cmp
or
imul
xorl
insl
cmp
je
shl
outsl
mov
outsl
adc
or
add
das
int3
inc
mov
rclb
fsubl
ja
or
mov
mov
adc
mov
repz
cltd
popf
jge
iret
mov
popl
add
inc
mov
ret
and
insb
pop
mov
dec
aam
mov
fdivp
push
fcmovb
in
xchg
sbb
pushf
ret
ljmp
xchg
aam
cmp
dec
aam
stos
xchg
movsb
dec
push
xor
sti
ret
fmul
fstpt
call
aad
lock
or
stos
imull
adc
pop
addl
inc
dec
cmc
push
scas
pop
sub
jg
mov
fucom
adc
fs
ret
xchg
mov
loope
xchg
mov
lret
cmp
out
adcl
ret
fcmovb
mov
ds
decl
sahf
sbb
pop
inc
mov
sbb
nop
fwait
and
add
sbbb
orb
inc
pop
sub
pop
lods
adc
cmp
jmp
push
pop
xchg
pop
mov
cmpsb
add
push
push
stc
int3
rcr
xlat
rol
pop
jmp
or
inc
cmpsl
cmpb
aad
lret
out
fisubl
mov
iret
push
leave
jl
leave
sbb
xlat
rorb
int
imul
xor
mov
lods
sub
or
mov
in
add
movsb
mov
cltd
pop
ss
sub
in
inc
or
sub
or
daa
xorb
fimuls
or
lds
gs
mov
xchg
movsl
lret
jnp
sub
jl
cld
in
adc
pop
out
nop
push
mov
pop
inc
cmp
xchg
insb
test
test
cmp
cmp
nop
fcomp
jno
aas
mov
or
add
pop
jnp
mov
loop
mov
daa
dec
add
pop
nop
sbb
fldl
fcoml
push
ljmp
cmpsb
and
rorl
pop
dec
mov
sub
sub
dec
sbb
mov
out
jno
ds
inc
push
inc
adc
jnp
popf
cld
xchg
mov
scas
cwtl
shl
xor
jae
fisttpl
push
xchg
mov
dec
sbb
sub
add
aas
push
iret
mov
pusha
xchg
push
sub
aas
outsl
push
mov
ret
sub
sti
test
xchg
pusha
mov
addr16
push
clc
inc
call
iret
pushf
xorl
mov
xchg
or
adcb
fidivrs
lods
pop
mov
lahf
sahf
sub
mov
xor
clc
aam
push
mov
nop
cmpsl
sarl
fcomip
and
cmpsb
lock
fisttpl
in
jnp
icebp
pop
push
mov
pop
mov
pushf
stos
ja
aad
dec
fcmovne
xchg
dec
aaa
test
sti
sbb
mov
adc
pop
sbb
push
aad
insl
lret
mov
stos
xchg
js
inc
in
jp
iret
jno
cwtl
mov
mov
cli
pusha
js
or
pop
pop
sub
and
cs
xchg
inc
push
and
mov
cmpsl
lahf
into
stc
adc
movb
lods
into
and
mov
orl
dec
mov
adc
jne
inc
inc
inc
out
or
int
mov
repnz
sbb
pop
jo
stos
pop
rclb
fs
adc
call
mov
sub
sbb
inc
leave
adc
test
addr16
jno
and
jne
jg
repnz
loope
and
push
adc
lahf
shrl
sbb
test
icebp
xor
mul
xchg
cli
push
mov
loop
insb
lods
add
and
fimull
mov
adc
pop
add
scas
add
add
xchg
jne,pt
lahf
hlt
pusha
xchg
aad
andw
lea
push
pop
inc
shl
shl
and
adc
cmc
cmpsb
jb
xor
call
das
mov
mov
bswap
data16
xchg
dec
imul
mov
inc
mov
sahf
dec
jae
in
jae
mov
movsl
dec
xor
push
nop
adc
fwait
aam
cmp
push
pop
fsts
add
add
inc
xor
outsb
testb
outsb
push
test
clc
jns
sti
dec
push
fs
repnz
in
sarb
in
mov
xchg
stos
imul
pop
les
or
cld
scas
pop
mov
cmp
or
mov
clc
mov
sti
stos
sub
lods
std
dec
ljmp
push
lahf
dec
test
rorl
dec
addr16
jge
and
gs
flds
stos
int
rclb
jecxz
mov
fwait
push
jp
push
jnp
and
mov
push
mov
dec
or
aad
fcoms
push
jl,pt
iret
repz
aas
and
out
iret
pusha
push
mov
and
jecxz
in
shll
pop
popf
inc
add
shl
dec
adc
adc
ror
xchg
pop
xchg
not
aam
lcall
pop
or
out
inc
cld
mov
repnz
mov
mov
and
xor
fistpl
mov
divl
inc
inc
leave
fidivrs
sar
pop
repz
pop
cmp
push
pop
pusha
and
mov
pop
jge
inc
adc
dec
stc
and
mov
pop
std
push
jecxz
imul
ret
add
out
jo
mov
and
and
ja
adc
cmpsl
xchg
mov
xlat
mov
in
pop
or
sub
push
inc
in
clc
jge
xor
mov
fnstcw
pusha
bswap
cmp
dec
dec
jno
xor
stc
ret
das
or
aas
or
or
fbld
inc
cmpsl
int3
xchg
cmpb
pop
cmp
dec
pop
stos
jl
fistpll
adc
mov
rolb
outsb
outsl
inc
lods
bound
pusha
popa
test
add
jo
pushf
cld
dec
sub
fdivrl
dec
test
cmpsl
loopne
mov
outsl
movsl
in
jge
test
enter
nop
cmp
gs
daa
lock
sbb
sbb
es
pop
mov
push
inc
dec
movsl
xor
push
xchg
es
shl
lock
push
enter
jl
and
fwait
fwait
pop
cmp
cmpl
dec
dec
aam
add
into
xchg
cmc
jnp
popa
xchg
outsb
xchg
rorb
icebp
xlat
ficomps
out
cmp
fisubrs
rorl
enter
orl
cmp
outsb
lret
dec
push
lahf
push
mulb
jne
dec
rolb
dec
fnsave
insl
push
jbe
pop
cmp
jns
mov
out
lret
push
frstor
sbb
push
repz
fidivrs
repz
lcall
jne
add
inc
hlt
ret
push
adc
pop
push
mov
sub
push
adc
insb
repnz
test
outsl
test
cltd
and
imull
xchg
xchg
cmp
icebp
cmc
ret
fs
push
mov
mov
adc
int
mov
nop
insl
add
push
jl
ja
bound
pop
aaa
mov
pop
lock
stc
jmp
aam
loope
xchg
jmp
repnz
addr16
subb
push
test
mov
mov
pop
sahf
lea
cmc
jg
mov
push
enter
mov
sbb
push
popf
inc
mov
pusha
adc
fsubl
jo
mov
or
test
add
roll
add
mov
dec
dec
gs
push
lcall
outsb
dec
mov
sarl
jo
xchg
in
mov
lods
adc
inc
xlat
adc
cmpl
mov
cmp
insl
xadd
fs
dec
mov
push
mov
aad
clc
xchg
scas
mov
xor
xor
fimuls
jge
push
jg
xor
inc
jbe
or
pop
cmpsl
push
psrlq
lea
movsl
dec
inc
push
add
in
stos
xchg
lods
mov
hlt
shrb
imul
js
mov
or
and
fstpt
ret
ja
inc
sub
cmp
sub
xchg
movsl
mov
cmp
adc
aad
andl
jno
mov
pop
xchg
ljmp
xor
inc
dec
cmpsl
test
and
aas
test
pop
lock
out
mov
pop
clc
test
sti
movb
hlt
xor
test
inc
adc
push
stos
daa
shr
and
mov
div
add
movsl
popa
in
ljmp
sub
mov
call
mov
insb
pop
ret
cmp
sub
sub
pop
aad
xchg
mov
or
dec
sbb
shll
pop
in
test
add
xchg
and
xor
xor
xor
inc
jnp
lcall
pop
adc
dec
mov
into
add
je
push
dec
xor
adc
pop
xor
int3
test
cmp
nop
scas
and
incb
dec
in
and
jae
pop
xor
pop
stc
xor
hlt
in
push
iret
mov
mov
sub
sbb
ljmp
out
gs
fistps
loopne
sub
jne
mov
sub
lods
lock
nop
jle
cmpxchg
jecxz
lahf
fistpll
add
decb
xlat
shll
xor
scas
jnp
stc
lahf
or
popa
stos
fwait
das
nop
push
xor
stc
ss
sbbl
or
test
enter
int
cmc
inc
lods
mov
pusha
addr16
jp
in
std
insb
cmp
dec
dec
lret
push
cli
int
jl
inc
jmp
pop
cwtl
andl
notb
insb
test
fdivrl
pop
and
xor
js
pop
aas
mov
inc
ljmp
pop
fiadds
xor
and
push
shlb
or
cmp
sbb
test
xlat
mov
sti
into
push
pop
push
mov
cmp
mov
mov
nop
push
mov
bound
mov
pop
test
sbb
adcl
jns
std
inc
xor
daa
loop
mov
pop
xchg
inc
lds
out
inc
push
mov
aaa
inc
ja
or
shll
cmp
push
mov
cmp
imul
fiadds
hlt
fwait
push
mov
or
daa
hlt
inc
cld
enter
push
mov
adc
pop
mov
test
stos
ret
popa
jmp
inc
jmp
push
adc
add
stc
fbstp
xchg
pushf
cli
scas
mov
push
arpl
pop
dec
pop
add
out
movsb
mov
out
adc
hlt
mov
xchg
lds
popa
int
imul
loop
jbe
pop
xchg
nop
sub
pop
fnstenv
inc
dec
movl
mov
mov
mov
push
out
add
mov
cmpsl
test
lods
sbb
sbb
mov
icebp
mov
push
pop
imul
dec
xor
lods
lods
dec
sbb
jb
and
adc
jmp
pop
mov
push
rolb
mov
dec
movsl
cltd
out
mov
rep
loopne
stc
sub
push
movsl
dec
test
into
mov
mov
lahf
ret
sbb
addr16
decl
dec
popf
inc
or
fwait
mov
add
add
jge
arpl
jecxz
push
ljmp
cmp
xor
jno
xchg
int3
adc
imul
pusha
es
xchg
jl
adc
pop
add
inc
cwtl
adc
mov
jg
cmpsl
xchg
fwait
cld
insb
mov
mov
fwait
dec
push
shrb
popf
iret
cltd
mov
mul
out
test
lea
mov
inc
in
lahf
repz
xchg
mov
mov
pop
ffree
ljmp
mov
pop
mov
push
ror
adc
jmp
sbb
lahf
daa
dec
jb
mov
sbb
mov
hlt
inc
aad
push
inc
cmp
jl
sbb
test
pop
xchg
pop
adc
lods
lock
and
sub
stos
cli
xchg
int
dec
nop
lods
cli
push
aas
repnz
xchg
cmpsb
push
enter
dec
fdiv
or
mov
test
call
and
call
mov
in
out
mov
sbb
inc
push
aaa
scas
scas
mul
xlat
xlat
cli
loopne
cltd
mov
jg
int
std
out
addb
or
inc
sub
sbb
jg
or
test
mov
jb
jp
mov
pop
inc
inc
aad
add
insl
pop
push
movsb
movsb
xchg
push
gs
mov
mov
inc
insb
cmpsb
js
inc
daa
dec
js
push
push
pop
sahf
cmp
insb
pop
dec
adc
ja
push
les
in
dec
les
pop
ljmp
pop
pmulhw
pop
pop
mov
ror
pop
out
pop
js
imul
test
push
cmp
xlat
sub
adc
cli
pop
or
xor
jns
jo
mov
dec
adc
pop
lds
adc
loope
pop
movsl
jo
or
push
cmp
adc
pushf
inc
sahf
lock
sbb
outsb
loopne
loope
or
mov
outsb
pop
les
cltd
cmpsl
adc
xchg
sahf
or
hlt
pop
mov
jbe
outsl
popf
mov
mov
mov
mov
bswap
rclb
out
cwtl
in
clc
sub
inc
hlt
sub
pusha
fbld
rcrb
mov
jge
inc
or
ror
lret
in
mov
cmpl
bound
aaa
sub
adc
xor
and
push
mov
and
xlat
mov
add
int3
rcr
dec
mov
cmp
es
inc
push
in
aas
xchg
dec
push
push
xchg
xchg
xchg
mov
mov
roll
out
push
mov
into
cmp
and
sbb
imulb
lods
stos
mov
add
aad
xchg
gs
or
jl
rcl
sub
add
xchg
repz
xchg
or
push
pop
ficoml
sbbb
fstl
inc
mov
cmp
sbb
sub
test
ja
dec
xor
or
adc
mov
push
inc
xchg
aam
sahf
mov
lds
push
out
aas
mov
mov
add
mov
dec
into
mov
ficoml
adc
pop
mov
mov
xor
xchg
lds
loopne
fs
paddq
add
push
add
fisubs
jp
popf
mov
pop
jno
dec
dec
xchg
cmp
je
leave
es
push
arpl
scas
cmp
push
repnz
ds
in
aad
leave
inc
push
xchg
out
daa
mov
dec
das
dec
int3
lret
testb
movsl
test
jno
inc
aad
adcb
mov
pop
xchg
imul
mov
sub
xor
inc
popf
loope
mov
test
inc
int
mov
jae
aad
dec
inc
ficoms
sbb
clc
add
andb
imul
or
mov
js
mov
inc
pop
lahf
retw
dec
call
sbb
and
or
mov
jb
cltd
mov
pusha
xchg
pop
fmull
int3
mov
mov
enter
dec
mov
aad
frstor
jle
xor
loop
jp
pop
sbb
andb
add
sbb
pop
push
push
jg
jb
add
mov
fsubl
int
or
fistpl
jl
inc
adc
pop
mov
sti
jnp
xor
push
push
jp,pt
movsl
inc
rclb
dec
rcrb
sar
stos
test
cmp
or
imull
jle
inc
xchg
cmpsl
push
cmpsl
pop
lods
add
xor
enter
mov
std
xor
push
jge
lock
imul
sub
outsl
or
xor
xchg
and
and
dec
test
and
gs
lea
out
add
icebp
add
jl
inc
test
sub
ja
xor
add
mov
xor
insb
and
sub
lock
bound
js
jo
jno
and
stc
pop
add
adc
inc
mov
fcmovnbe
aaa
gs
mov
mov
pushf
mov
push
cmpsb
outsb
mov
xchg
lds
inc
loope
movsl
test
push
adc
aas
push
adc
mov
pop
push
jge
bound
dec
cmp
xor
idivb
push
ljmp
imul
pop
ret
pusha
stc
dec
test
pusha
shlb
sarl
adc
daa
xor
mov
pushf
mov
mov
jl
sbb
jns
iret
push
mov
and
cli
xor
outsb
aad
imul
in
iret
cmc
in
pop
sub
inc
or
dec
xchg
testl
xor
loop
fcoml
xchg
push
imul
lret
scas
dec
sahf
jno
xchg
dec
cmp
scas
mov
hlt
cmpsb
and
cmp
jo
in
lds
jle
outsl
enter
pop
jl
mov
mov
mov
js
pop
xchg
jns
xor
jnp
int3
cmp
jecxz
jbe
push
add
sub
in
bound
xor
iret
sti
sbbb
ror
jne
stos
fmuls
lods
fs
es
pop
pop
adc
ss
mov
push
outsb
dec
cmpsl
sbb
fbstp
mov
outsl
cmpsl
xchg
outsl
out
enter
mov
dec
insb
fs
push
add
popf
stos
xor
roll
sahf
repnz
movsl
mov
movsl
xchg
mov
fwait
and
aaa
and
xor
lret
mov
pushf
xchg
fdivrl
or
mov
mov
push
pop
sbb
std
sub
lea
jbe
fistl
adc
dec
adc
mov
lret
mov
sbb
cmc
add
aas
out
inc
push
jbe
xchg
rolb
adc
daa
add
daa
adcl
je
fucom
inc
jne
mov
idivb
xor
mov
cmpsb
cmc
loopne
filds
aam
aas
repz
xchg
fsubrl
addr16
fnstcw
sbb
popf
mov
cmp
mov
jo
outsb
add
mov
shrb
aaa
sti
imul
push
inc
pop
and
jae
dec
pop
addl
pushf
stos
push
ljmp
leave
fdivrp
mov
rcl
jmp
dec
or
pop
mov
jl
scas
andb
jno
mov
loopne
cmpsl
das
ljmp
or
mov
jp
in
pop
jecxz
sub
insb
das
and
cmp
test
lea
sbb
add
in
mov
mov
sbb
sub
fsubl
int3
adc
dec
pop
sub
add
out
push
mov
movsb
xchg
jno
xor
cltd
in
sbb
and
adc
iret
out
xchg
dec
icebp
xor
sbb
mov
outsl
pop
and
ret
lcall
xor
inc
jmp
or
shrb
xor
int
pop
jne
nop
sub
pop
inc
or
fisubl
adcb
bnd
fiadds
push
stos
in
jle
mov
mov
flds
sti
or
jl
jmp
jle
jnp
test
leave
mov
mov
stos
arpl
sub
ss
in
mov
aam
mov
dec
push
mov
add
loope
jg
lahf
jle
add
mov
dec
int3
add
pop
sbb
xchg
pop
out
test
adc
jbe
xchg
arpl
push
inc
mov
xchg
test
gs
push
inc
xchg
fistl
subl
test
push
fiaddl
sub
testb
add
xchg
sub
fistl
ret
push
or
cmp
testl
sub
movsb
push
jo
outsb
dec
xchg
pop
cli
das
fwait
dec
stc
dec
adc
fwait
or
push
or
dec
cld
pop
xor
cmp
mov
lds
repz
push
outsb
xor
test
movsl
sbb
inc
cmp
into
sahf
sbb
lcall
push
xchg
iret
lods
xchg
mov
repz
mov
cmc
dec
mov
push
stos
inc
push
stos
stos
xlat
test
fldt
xor
jne
mov
aas
xchg
mov
in
popf
mull
dec
bound
inc
xchg
fildl
inc
in
push
subb
sub
fwait
cmp
mov
mulb
mov
and
fnsave
push
jo
sbb
dec
mov
adc
inc
push
push
fs
call
pop
add
aaa
sahf
xchg
cld
gs
in
lret
add
cmpsl
mov
cmp
int
xor
sahf
repz
pop
movsb
int3
inc
xchg
outsb
pop
or
mov
cwtl
psadbw
ss
pop
scas
xor
inc
daa
imul
cli
sub
push
lret
inc
inc
enter
inc
into
push
lret
mov
outsb
aas
and
test
out
nop
mov
jg
push
cmpb
xor
mov
mov
outsl
jbe
cld
xchg
std
and
mov
insl
insl
sub
push
arpl
xor
test
jns
mov
push
pop
outsb
popl
sub
fldcw
inc
and
int3
jnp
adc
sub
popa
dec
mov
shlb
sbbl
ficoml
stc
rcrb
stc
push
adc
push
fisubrs
sarb
and
xchg
lods
sbb
stos
ljmp
adc
jnp
dec
call
xchg
add
mov
sti
lods
neg
adc
xor
es
or
xor
jmp
cs
sbbb
jmp
sub
mov
inc
mov
push
into
add
test
jecxz
and
test
xchg
mov
das
sbb
inc
test
xchg
push
jmp
popa
int
mov
inc
sbb
pop
pop
mov
aas
aam
lock
ficomps
js
daa
push
xlat
xchg
mov
sub
mov
mov
or
in
mov
test
outsb
xlat
pop
mov
mov
addr16
jo
or
loopne
xchg
pushf
mov
dec
cltd
jns
inc
jl
dec
loopne
fcmovb
mov
cs
cmp
pop
out
adc
imul
dec
jecxz
int
nop
pop
roll
fistpl
sbb
lds
dec
jl
les
loop
outsb
ss
stos
rcll
outsb
push
push
sbb
repz
xor
jb
adc
cmc
into
xchg
lahf
push
leave
fisttpl
cmc
lods
cmp
mov
sbb
inc
mov
xchg
rolb
push
loop
movsl
cmp
sti
add
pop
mulb
dec
scas
into
outsb
sarl
into
sbb
or
jg
and
jmp
cmpsb
push
sbb
in
push
std
mov
stos
in
rcll
add
in
mov
neg
das
daa
push
jl
xchg
out
xchg
in
add
enter
das
push
push
insb
cli
fistps
pop
xchg
pop
push
dec
pop
inc
xor
mov
cltd
in
jae
cwtl
mov
and
push
jbe
es
sub
or
dec
insb
inc
popa
mov
dec
push
push
lock
push
frstor
dec
lret
loopne
and
mov
and
negl
sub
outsb
fwait
pop
sbb
mov
and
loope
jecxz
out
adc
insb
bound
dec
loopne
lret
xor
xor
aaa
lock
dec
lret
xchg
addl
in
adc
pop
fdiv
push
popf
sbb
fisttpl
mov
aas
inc
push
jno
cmp
jo
in
inc
mov
out
js
and
pop
add
test
mov
popa
fdivl
inc
icebp
call
repz
in
popf
cmpsl
test
lds
lds
outsb
ret
sub
or
arpl
lcall
les
pusha
or
pop
loope
rolb
imul
dec
stos
cmp
sbb
pop
lahf
xor
js
ljmp
ss
out
xchg
ret
cmp
xchg
and
xlat
testb
popa
outsb
mov
push
push
xlat
mov
jno
mov
popf
fwait
inc
loopne
sarl
push
sbb
xor
push
jp
push
jl
cmp
vpmacsdql
push
sbb
mov
outsl
jge
nop
pop
movsl
sahf
pop
and
xor
xchg
rcr
sbb
lcall
or
shrb
es
arpl
xor
shlb
clc
sub
or
push
xor
xor
inc
jle
out
adc
push
test
mov
outsl
loop
inc
in
adc
mov
dec
pop
ffreep
aam
dec
aam
dec
pop
int
ja
mov
aad
lods
sbb
lret
pusha
push
sbbl
cwtl
fs
aad
addl
or
mov
jo
daa
or
imul
cmpsb
push
xor
and
sarl
jo
nop
stc
pop
lret
rcrb
push
xor
xchg
dec
jns
cwtl
shrb
shrl
aad
das
and
cmp
test
dec
adc
lret
js
dec
push
cmp
popf
sbb
jge
jbe
ret
aad
add
pushf
push
pop
inc
cltd
ljmp
in
xchg
xor
push
data16
xchg
cwtl
ja
pop
pop
xchg
and
in
ljmp
or
sbb
mov
xchg
mov
mov
aad
mov
nop
sub
dec
mov
mov
jns
and
stos
push
add
lret
push
imul
cmc
mov
dec
jge
push
jo
out
addl
icebp
pop
xlat
fidivl
adc
pop
data16
mov
js
mov
mov
lea
xor
repz
mov
jecxz
aad
in
push
insb
movsl
sub
mov
mov
lret
cs
fcmovu
in
int3
daa
push
mov
shrb
push
mov
out
pop
pop
mov
sbb
loopne
mov
lret
lahf
mov
hlt
xchg
mov
ret
dec
pop
or
mov
int3
mov
jl
push
and
es
sub
std
imul
lahf
xor
ja
sbb
push
cld
dec
and
xor
add
pop
pop
inc
push
cmpsb
xchg
push
xor
call
mov
xor
push
imul
inc
ss
add
aam
and
mov
imull
fstps
mov
jge
sbbl
pop
and
xchg
xlat
stos
and
mov
xorl
adc
mov
stos
cmp
arpl
clc
data16
ss
jecxz
xchg
lods
aad
dec
push
mull
clc
fimull
cltd
rol
lock
pusha
add
and
in
inc
insl
xchg
scas
xchg
push
push
mov
shlb
push
lret
or
pushl
lock
ret
mov
adc
mov
rol
and
push
add
into
sbb
hlt
rolb
mov
and
fstps
loop
push
cmp
sti
outsl
adc
clc
test
mov
mov
imul
xor
rclb
daa
cmpb
mov
dec
sub
dec
push
sub
les
mov
aas
ret
lds
js
loopne
jle
test
out
jmp
and
xchg
jmp
pusha
pop
xchg
push
scas
mov
xchg
dec
sbb
loope
push
push
pop
xchg
or
out
sbb
xor
adc
imul
sbb
mov
stos
xchg
gs
es
fdivl
cwtl
mov
sub
hlt
xor
add
push
movsb
mov
mov
icebp
jnp
mov
pop
es
jge
pop
adc
out
daa
cmp
test
adc
insb
sub
addr16
jmp
mov
add
leave
jnp
xchg
adc
jnp
pop
int
loopne
sub
and
iret
pop
jle
push
jno
and
push
jo
andl
pop
push
lods
push
xor
sub
gs
cmpsl
filds
xor
mov
jg
pop
fisttpll
sti
xchg
and
rorb
es
xor
xchg
push
xchg
mov
ljmp
jg
mov
pop
cmp
pop
lods
orl
loopne
sahf
pop
lock
and
mov
or
pushf
mov
mov
fsubr
add
mov
sub
sbb
xchg
imul
ja
mov
xor
das
pop
aaa
push
add
push
mov
cmp
xchg
jne
lret
lea
push
addl
mov
jp
cmp
rclb
pop
movsb
jno
sub
mov
psrld
incb
orb
or
subb
push
inc
jge
shlb
repz
incl
loopne
int
sub
adc
push
imul
dec
jp
xchg
jp
add
xchg
xor
pop
sbb
mov
call
xchg
into
push
test
mov
dec
adc
lods
inc
lret
js
leave
pop
out
add
aam
repnz
fwait
mov
mov
andl
loopne
pop
fsts
ds
call
sbb
arpl
mov
mov
jg
mov
or
movsb
aad
pop
push
arpl
jp
sub
iret
pusha
leave
nop
mov
and
test
push
cs
popf
mov
push
pop
outsb
mov
inc
pop
jg
push
adc
sbb
adc
repz
dec
outsl
in
sbb
push
es
sub
adc
lods
and
sbb
cmc
add
mov
adcb
cmp
jp
jbe
gs
ret
ret
insl
aad
dec
or
jmp
xor
add
push
pusha
ss
adc
leave
loopne
xchg
fwait
loope
mov
fwait
mov
cmpsb
rcr
mov
loop
mov
nop
push
add
aam
fcompl
idivl
push
and
xlat
leave
push
test
and
loopne
sub
xchg
mov
ret
inc
das
pop
xor
push
js
jns
adc
pop
loopne
xchg
xor
mov
mov
adc
sub
adc
pop
adc
push
push
cmp
xchg
push
and
adc
imulb
inc
mov
jae
aam
jnp
xchg
fldt
add
rcrl
cltd
js
lods
fildl
xor
xor
mov
je
adc
imul
rorb
and
cmc
pop
fnsave
cmp
sbb
mov
sbb
stc
out
adc
insb
aas
cwtl
jl
cli
mov
push
andl
or
out
cmc
in
add
dec
out
les
adc
sar
xchg
push
sub
scas
pop
mov
sti
daa
scas
icebp
dec
mov
ret
mov
std
and
lret
aaa
dec
jecxz
inc
push
bound
stos
movsb
pop
fstps
stos
negl
je
dec
cwtl
dec
loop
jmp
in
loope
aaa
and
into
ret
mov
loope
cld
out
cld
jnp
clc
push
xchg
daa
dec
or
jbe
roll
cmp
dec
sbb
daa
sar
fidivrs
push
mov
sub
adc
shrb
and
sub
inc
jge
fdivr
mov
loopne
ljmp
push
cs
pop
enter
xchg
pop
pop
push
adc
mov
xchg
inc
dec
pop
imul
cmp
adc
lock
imul
aad
sti
std
mov
repz
loopne
sbb
mov
pop
xlat
inc
xchg
in
inc
push
imulb
inc
cmp
mov
mov
movsb
sbb
add
stos
pop
rclb
add
cmp
data16
jns
int
mov
mov
aam
sti
or
mov
jmp
push
or
push
std
pop
xchg
incl
jbe
sub
rcl
cmpsb
ja
dec
call
orl
xchg
pop
xchg
xchg
sarl
ja
and
test
das
insl
pop
in
sbb
xor
rol
inc
lahf
mov
jg
push
jns
out
inc
dec
mov
inc
scas
push
adc
mov
jp
cmp
mov
cmp
push
nop
popa
rorl
add
dec
add
mov
jl
push
faddp
or
xor
jbe
inc
inc
pushf
dec
and
rcrl
inc
mov
pusha
adc
jo
mov
mov
loope
rcrl
movsb
pop
cs
into
mov
imul
pop
push
mov
addr16
out
das
jne
aad
cli
ret
loope
cmp
mov
mov
jge
repz
fldcw
cmpsb
leave
insl
xchg
shr
jl
pop
mov
mov
addr16
and
pop
mov
mov
xchg
movsl
dec
cmpb
pop
sub
popa
andb
cwtl
dec
das
pop
dec
popa
mov
mov
test
push
xchg
inc
push
ljmp
aam
addr16
sub
pop
mov
aad
aaa
xchg
icebp
mov
hlt
lds
xor
inc
inc
loop
pop
xchg
loop
daa
inc
xchg
xchg
daa
fcoml
push
or
pushf
loope
mov
lea
mov
xchg
dec
jge
add
outsl
bound
jo
mov
int3
out
stc
nop
lahf
mov
xchg
jge
cmp
in
daa
or
xor
ficoml
add
in
sub
and
mov
add
into
xor
enter
sti
in
lock
inc
insl
sub
jb
out
push
bound
ret
dec
pop
jmp
xchg
lods
inc
gs
sbb
push
mov
mov
push
popa
mov
sbb
je
inc
icebp
movsb
lea
add
nop
add
scas
xchg
ds
scas
jecxz
sbb
pop
sbb
jle
arpl
jmp
push
sub
aam
and
jmp
pop
jae
push
jo
or
bound
push
ds
jne
inc
jp
pop
mov
pop
pop
mov
call
mov
sahf
cmp
call
and
pop
sbb
ret
or
fs
sbb
roll
stc
lock
addr16
dec
cmp
hlt
stos
add
jmp
enter
paddb
lahf
daa
mov
pop
jmp
sbb
loopne
sub
mov
or
inc
loop
push
jno
into
rorb
test
shrl
mov
mov
test
and
dec
xchg
xchg
mov
scas
add
call
lods
sbb
pop
adc
dec
adc
mov
mov
xor
loopne
imul
in
mov
out
xor
inc
leave
jb
push
sub
int3
cmp
add
mov
arpl
cmp
movsb
and
sbb
cmp
mov
and
or
movsl
cltd
or
or
push
arpl
lret
fs
xchg
xor
inc
sbb
lock
out
xchg
aam
push
jnp
js,pn
pop
stos
stos
adc
cmp
and
insl
lret
negl
movb
scas
mov
push
inc
jns
and
loop
into
stos
push
aaa
inc
fcomip
pop
cmp
scas
movsl
ficoml
js
test
jmp
or
add
push
ljmp
xchg
push
push
das
ss
repnz
jle
jno
add
mov
fidivrl
push
js
cmp
insb
pop
inc
jnp
ret
mov
cwtl
mov
mov
add
sbb
cld
lock
and
fistl
in
jle
sub
rcll
cmpsb
adc
jbe
pop
test
in
jp
orl
adc
out
jo
insl
xlat
jge
clc
inc
pop
ds
shl
push
pop
or
xchg
pop
adc
dec
xchg
hlt
leave
pop
movsl
out
adc
sbb
mov
xor
jl
dec
push
imul
push
fstl
jo
push
stc
mov
aam
fwait
stos
sbbb
mov
adc
inc
and
roll
cli
cltd
and
sub
mov
icebp
aas
stos
cmpsb
mov
jb
xchg
int3
popf
cmp
xchg
lret
add
inc
and
sub
xchg
xor
std
test
sbb
adc
adc
das
dec
sub
xor
icebp
push
jle
std
mov
or
sbb
inc
cmpsb
cmp
test
and
xchg
cmp
mov
or
shll
xor
mov
add
adcl
push
adc
pop
mov
fisttpl
jnp
cli
ljmp
sub
adc
gs
dec
sarb
or
lock
out
repz
cwtl
mov
gs
stos
fsubrl
fbld
and
fsubs
sti
mov
imul
xchg
adc
pop
pop
mov
push
jns
xchg
pop
jo
mov
ljmp
inc
imul
dec
fimull
inc
sbb
dec
push
jge
mov
xchg
je
sbb
add
xchg
aad
adc
sub
ljmp
jno
enter
mov
mov
cmp
ret
enter
and
je
push
sysenter
add
cmp
out
mov
test
call
xchg
jmp
add
add
gs
popa
int
cmp
dec
nop
mov
xchg
pusha
xchg
pop
inc
fisttpl
pop
push
sub
pop
scas
push
mov
in
jle
or
add
test
clc
imul
shll
cmp
int
add
push
dec
addl
jb
sub
push
les
pop
mov
fstl
cmp
addr16
add
in
jmp
lods
push
pop
pmulhw
sub
leave
cmc
adc
dec
mov
xor
pusha
shrb
shll
jp
or
inc
jl
push
dec
fstpl
iret
int3
mov
xchg
sub
xor
sub
pop
xor
adc
in
mov
std
push
repz
inc
mov
dec
sbb
dec
mov
imul
and
cmc
xchg
lods
iret
clc
mov
stc
loope
and
pop
shrl
cmp
fdivrl
and
ljmp
mov
and
insb
inc
lret
sub
jg
mov
pusha
jns
dec
mov
jno
add
shlb
cs
mov
aaa
sub
add
push
lahf
sbb
and
out
jle
or
or
xlat
cltd
mov
imul
mov
add
repnz
pop
pop
adc
outsb
push
insb
pop
xchg
jnp
xchg
test
jecxz
test
insl
es
add
movsl
les
xlat
xchg
push
int
push
dec
out
out
int3
push
and
push
mov
shll
or
sahf
in
movsb
js
ja
mov
outsb
sbb
sub
inc
repz
nop
bound
js
stos
or
les
pop
add
mov
out
push
arpl
dec
mov
xor
movsl
push
mov
repnz
cmpsb
sbb
jp
lcall
cltd
dec
mov
mov
enter
rclb
or
sub
cmpsb
mov
dec
iretw
pop
sub
adc
xlat
out
cmovbe
push
sbb
insb
jno
stos
inc
shl
arpl
test
sbb
xchg
pop
test
sub
test
xor
xchg
popa
cmp
sub
push
lret
or
es
inc
dec
jecxz
mov
scas
dec
push
mov
pop
cli
push
in
ds
shrb
adc
mov
testl
das
ret
in
pop
aam
mov
dec
andl
xchg
lahf
mov
jnp
jp
scas
sbb
push
ret
add
mov
sbb
adc
rolb
fsubl
or
gs
aaa
cli
pop
jmp
pop
xchg
mov
cmpsl
sub
mov
imul
adc
imul
cmp
mov
aad
lds
jg
out
lcall
xlat
adcl
lret
mov
mov
imulb
cmp
sbb
das
push
adc
push
xchg
in
inc
test
cmp
or
mov
mov
jno
pop
loop
cmp
fcomp
out
pop
xchg
stc
add
rcrb
repnz
jl
jns
xchg
addr16
jb
dec
gs
mov
mov
shlb
pushl
adc
adc
mov
mov
bound
test
adc
mov
scas
sbb
enter
pop
dec
movsb
fwait
leave
xchg
push
cmpsw
adc
cmp
dec
pop
and
loopne
push
or
fidivs
les
jo
push
cmp
adcl
shl
pop
cwtl
dec
loope
jg
dec
aad
push
adc
outsl
xchg
ret
xor
imull
xchg
nop
mov
clc
mov
xchg
ljmp
dec
imul
sbb
push
out
cwtl
test
repz
mov
imulb
cmpsb
dec
mov
rcrl
pop
inc
insb
movsb
sahf
loope
sarb
mov
push
fstpl
xor
push
andl
imul
lods
mov
ret
enter
push
loopne
lea
imul
loopne
adc
gs
cwtl
cmp
testb
test
sbb
sub
adc
mov
dec
or
loope
insl
lock
cmc
sub
jae
jp
mov
out
les
sub
stos
stos
cld
test
mov
mov
fisubl
into
jno
loop
sbb
xlat
and
out
aad
mull
insl
mov
mov
cli
and
pop
sub
inc
sub
mov
aad
shll
and
cmp
xor
movsb
es
xchg
in
mov
or
lret
ljmp
stos
add
xchg
movb
int3
outsb
aaa
sbb
mov
jno
mov
fs
push
pop
mov
jae
sbb
jnp
lea
push
or
fistpll
hlt
in
enter
mov
jae
test
leave
add
inc
sub
pop
mov
das
jbe,pt
stc
mov
jns
cwtl
jb
push
push
leave
mov
dec
sti
dec
rolb
lcall
mov
cwtl
popf
movsb
test
inc
mov
mov
arpl
in
daa
mov
cmp
cs
sbb
pop
xlat
es
push
ljmp
and
mov
xor
stos
popf
or
out
or
mov
lret
xlat
dec
inc
outsl
jecxz
out
sbb
jo
aas
adc
mov
stc
mov
shl
cwtl
mov
fists
insl
rolb
leave
repz
test
inc
mov
ss
stos
into
loope
cmpsb
xchg
push
aas
xor
add
xchg
cmp
ficompl
xchg
mov
xor
in
jnp
cmp
imul
fld
sbb
nop
dec
pop
inc
adc
inc
shl
es
push
push
xchg
inc
xchg
enter
xchg
adc
add
ljmp
jg
popf
test
dec
ds
mov
arpl
push
repz
sbb
rclb
sbb
sbb
add
cmp
sbb
inc
jmp
cmc
or
inc
stos
adc
out
pushf
cltd
lret
push
push
cmp
call
add
stos
mov
cmc
jle
xchg
xchg
sbb
popa
insb
movsb
xchg
in
pop
pop
or
sub
mov
xor
jo
je
sahf
cmp
mov
adc
scas
dec
pop
mov
adc
sub
insb
fcomp
dec
cs
lds
test
dec
sbb
mov
dec
loop
and
insl
jo
jae
int
xchg
jno
js
or
aam
and
out
cmc
sti
into
dec
subl
nop
and
and
mov
inc
cmp
xor
cmp
push
sbb
repz
inc
lret
pop
fbld
outsb
cmp
movsl
out
imulb
dec
stc
and
repnz
xor
cli
pop
clc
stc
stos
xchg
xchg
pop
lahf
scas
mov
repnz
cmp
jl
xor
les
in
pushf
inc
fidivrl
mov
push
leave
sti
xchg
mov
test
pop
aad
repz
mov
out
pushf
clc
cli
sbb
push
xor
dec
ja
or
dec
jle
insl
loopne
fidivs
fldl
jp
imul
fsubs
xchg
sti
repz
repnz
push
dec
xchg
jle
push
pushf
js
in
shl
ja
and
inc
jge
pushf
xor
mov
stos
mov
cmpsl
pop
cmpsb
jno
inc
or
mov
xchg
out
or
jbe
rcl
xor
insl
jae
mov
pop
arpl
mov
mov
jns
xor
pop
inc
inc
std
std
dec
icebp
push
mov
lcall
cltd
cmpb
mov
lea
add
fwait
xor
or
xchg
xchg
push
inc
test
inc
gs
fists
pop
pusha
add
dec
mov
into
xchg
out
cmp
lds
mov
repnz
stos
sbb
fisttps
mov
cmp
or
in
xor
sub
dec
push
and
icebp
arpl
push
and
fs
adc
xor
cmc
inc
jle
das
sbb
popf
mov
in
dec
andl
sbb
fldlg2
mov
in
xchg
inc
lock
fdivl
js
subl
pop
fstpl
xor
jmp
dec
inc
in
mov
pushf
ja
xchg
cmp
mov
lds
cmpsl
cmc
xchg
sahf
out
insl
and
xchg
xor
pop
cmp
lcall
lret
inc
divb
cmpsl
dec
xchg
adc
subl
in
mov
or
mov
hlt
adc
test
shll
iret
andb
je
sub
into
insl
rolb
push
stc
test
xchg
in
jnp
xchg
andl
mov
dec
mov
jo
xchg
adc
xchg
ja
adc
adc
and
pop
jmp
movsl
and
inc
pushf
insb
call
pop
xchg
outsb
push
jae
push
mov
popa
add
mov
xorl
pop
jb
mov
ffreep
cmp
xchg
in
or
sub
test
inc
icebp
ljmp
icebp
lahf
es
inc
xchg
out
mov
mov
test
sbb
out
cmpl
push
cli
adc
mov
hlt
and
fs
or
fmul
mov
mov
addr16
or
decl
pop
inc
mov
lds
jmp
push
and
pop
dec
pop
jno
add
mov
inc
mov
movsl
pop
or
lcall
pop
not
test
adc
outsl
xor
cmpsb
addr16
ljmp
out
pushf
out
jno
jb
jne
test
push
mov
xchg
xlat
clc
cmp
sbb
sahf
dec
xchg
std
imul
dec
filds
lock
outsl
fisttps
mov
lock
and
fdivs
js
mov
pop
test
icebp
xchg
ljmp
mov
mov
sub
xor
mov
negb
pop
aaa
xor
verr
stos
xchg
xor
call
lcall
push
fcmovbe
sub
in
out
hlt
cmpsl
sbb
push
xchg
loope
sarl
inc
cld
sbb
bound
outsl
inc
and
enter
fmull
mov
aad
xchg
sub
notl
mov
push
dec
push
mov
mov
jo
lea
jb
jnp
cmpsb
sub
das
cli
xlat
pop
in
divl
cwtl
fs
cmp
cmp
add
sub
sub
mov
cltd
outsl
out
lea
sub
into
mov
pop
jo
in
adc
inc
inc
fs
mov
push
dec
mov
adc
rcll
jne
fmuls
test
int3
cli
mov
jbe
push
jae
push
lds
imul
rcl
add
testl
mov
fimull
xchg
and
aas
cli
inc
xor
push
lds
ljmp
xchg
jo
int3
cli
dec
das
jg,pn
cs
stc
test
jl
cltd
int
out
pop
ljmp
adc
inc
or
icebp
les
sar
fwait
pop
inc
mov
hlt
xor
sbb
movsl
xchg
addr16
scas
movsb
cli
out
enter
shlb
loope,pn
pop
xchg
sti
mov
lods
shrb
test
cmp
xchg
scas
adc
fdivl
or
fwait
cmp
sahf
cmc
rcr
push
pop
loopne
sarl
jae
das
cmp
adc
mov
adc
sbb
scas
icebp
xchg
jo
push
in
in
subb
ja
addr16
and
jae
push
popa
mov
jno
shl
aas
clc
aas
xor
int3
cmp
xor
bound
outsb
cmp
loop
xlat
daa
pushf
stos
out
lock
fwait
xor
push
pop
aaa
cmpsb
and
hlt
inc
test
mov
or
cmp
xor
jl
fwait
mov
stc
loop
mov
call
pushw
ss
jbe
aad
mov
imul
hlt
cwtl
neg
cmp
sbbb
xchg
cld
sbb
iret
mov
ja
fmul
scas
mov
in
dec
or
fistps
scas
scas
xchg
fs
jmp
popa
loopne
push
call
cmpsb
mov
mov
inc
ds
or
inc
pushf
add
ret
inc
add
imul
idivl
pop
out
xlat
int
cmp
in
stc
pop
dec
adc
subb
mov
aad
std
imul
mov
inc
fwait
push
sub
ljmp
mov
inc
lahf
shrb
ret
lock
jo
mov
fdivrl
mov
and
mov
out
dec
and
lods
xlat
dec
push
stc
jg
xchg
jmp
cs
xchg
ret
xor
ret
leave
push
cltd
sbb
inc
data16
loope
push
rclb
add
mov
adc
insb
push
xor
cmp
cmp
pop
dec
sub
cmpsl
mov
mov
out
mov
pop
sub
cltd
and
and
pop
imul
push
pop
push
dec
mov
out
bswap
popa
or
adc
jns
rcrl
test
mov
mov
mov
push
repz
jle
pop
jl
jnp
fsubrs
jo
daa
mov
out
ds
lret
pop
jl
dec
xchg
inc
pop
faddl
rolb
filds
pop
push
mov
sub
mov
lcall
inc
push
das
movsl
and
inc
jmp
pop
or
mov
cli
mov
sti
in
xlat
inc
dec
out
inc
popf
add
adc
out
mov
xlat
adc
test
mov
and
mov
pop
cwtl
push
enter
popa
cmpsl
jecxz
and
jp
dec
lods
nop
loop
icebp
lahf
xlat
xor
add
inc
cmpsl
push
dec
int3
popf
les
stos
ljmp
fs
mov
std
outsl
jnp
mov
sarl
jp
cmpl
scas
dec
clc
mov
test
scas
xor
sub
lods
dec
mov
pop
loope
jo
or
lret
push
push
pop
out
loope
adc
xlat
shlb
cmp
mov
ja
out
or
add
rcrb
or
mov
dec
and
cmpb
stc
sub
xchg
lcall
push
sub
xchg
add
ret
pcmpgtb
out
aad
and
nop
insb
cmp
push
jns
fiadds
mov
add
pop
xchg
test
or
sbb
inc
pop
pop
sub
add
das
int
insl
inc
mov
into
cmp
lcall
test
arpl
cmpl
adc
add
repz
mov
lds
popf
push
inc
out
cmpsb
out
divb
fwait
cmp
ljmp
cwtl
test
sbb
subl
push
test
push
sub
add
pop
insl
sub
jnp
adc
iret
mov
jle
mov
ds
das
mov
sar
inc
lahf
dec
movsb
pop
mov
push
xchg
hlt
pop
sub
pop
int
ss
xchg
jle
mov
out
jne
pop
stos
repz
sbb
cmp
mov
flds
or
push
test
jbe
hlt
inc
fdivrl
add
or
and
push
movsb
pop
dec
js
xchg
jge
cmc
inc
or
fildl
add
cmp
fldl
fbstp
jbe
fldenv
push
js
jno
jae
cmp
sub
or
jmp
test
push
and
pop
cmp
pop
sbb
jmp
into
repnz
inc
sbb
nop
daa
xlat
xchg
jl
xor
adc
xchg
daa
sbb
scas
aas
jmp
inc
ret
xor
cmpsl
jbe
pop
or
mov
xor
mov
push
rclb
or
push
rcll
sarl
negl
les
or
fldcw
lahf
jns
data16
and
sub
insb
sub
or
pop
add
fsubl
in
sub
jb
or
mov
xor
sub
lcall
push
sub
sub
pop
dec
outsb
push
loope
jae
sub
loopne
rolb
cmpsb
scas
cmpb
inc
cmp
jmp
jge
std
push
push
mov
cltd
cmp
xor
jnp
mov
jne
inc
stos
sbbb
xorb
imul
xor
jmp
jae
into
xchg
inc
ss
in
add
not
mov
fidivrs
popf
repz
pop
jns
xchg
movsl
lahf
and
ret
adc
and
stc
sbb
in
adc
in
outsb
add
xchg
inc
call
stc
sbb
insl
outsb
ret
jecxz
sahf
pop
adc
mov
les
inc
jno
dec
orb
imul
dec
jne
mov
cwtl
mov
and
popf
mov
repz
fwait
dec
cs
andl
jae
in
imul
push
sahf
lea
xchg
popf
hlt
or
lods
aad
sub
rcrl
jnp
mov
sbb
mov
xor
sub
shlb
dec
in
pop
xor
cmp
lret
push
fisubs
icebp
cltd
or
flds
dec
sub
loopne
popa
push
and
lahf
mov
in
ja
mov
cmpsb
mov
or
sub
rorl
adc
sub
push
fidivrl
out
xchg
xor
leave
out
incb
aam
fcoms
dec
adc
aad
push
jmp
loop
push
dec
cmp
pop
mov
cmp
push
pop
push
icebp
xchg
pop
rclb
mov
lea
sub
push
imull
dec
sbb
test
push
incb
sub
hlt
mov
js
mov
loop
hlt
mov
lahf
mov
mov
stc
movsl
ret
adc
lahf
xchg
add
jl
fsubs
testb
int
testb
mov
pop
sbb
push
pop
cld
xchg
imul
movsb
lcall
pop
cmpsb
popf
mov
addb
imul
jbe
loopne
pop
fldt
popf
fucomi
pop
xor
vcvtdq2ps
call
ds
test
cwtl
stc
out
pop
sbbl
paddusb
sarl
cmpsl
fs
add
subl
add
add
shll
pop
shll
push
pop
gs
lods
xchg
aas
dec
ret
fstl
xchg
jne
push
inc
clc
cmp
add
mov
adc
push
fistpl
cltd
pop
lods
mov
call
icebp
out
ret
lods
pop
push
gs
pop
movsb
loope
xor
test
sub
fidivrl
xchg
pop
xorl
out
xlat
inc
fiadds
cmpsb
test
inc
pop
or
pop
cmp
pop
mov
cmc
jno
arpl
mov
movsb
pop
lret
push
sub
test
call
sub
ds
cltd
add
or
fstl
lea
sub
push
inc
cmp
cli
fsts
ret
addb
mov
jno
pusha
clc
std
dec
in
add
ret
dec
jno
or
sbb
pop
popf
shrb
xor
es
pop
jl
sub
lea
mov
lret
pop
sbbb
andl
jmp
jmp
mov
mov
or
fidivl
js
mov
dec
ficompl
xchg
int3
jno
cli
std
fcmovb
test
add
rorl
push
das
nop
inc
cmp
jmp
pop
out
mov
jbe
jp
mov
mov
lret
in
test
in
das
sbb
push
add
jnp
mov
pop
inc
mov
cmpsb
sub
leave
or
dec
loop
sbb
cmp
hlt
or
pop
lcall
push
pop
je
fisubrl
sbb
lcall
dec
add
leave
fldcw
jle
adc
int3
xor
es
pop
test
leave
lcall
in
mov
test
or
mov
add
mov
jle
cmc
cmp
clc
insb
out
rcrl
lods
mov
or
loope
and
adc
pop
pop
xchg
movsb
pop
test
add
mov
leave
out
ret
pop
xchg
mov
lock
clc
stos
mov
cld
shll
cld
dec
repnz
sub
fcmovnb
mov
rcll
xchg
scas
ljmp
repz
je
fisubs
popf
sub
pop
int3
ret
pop
add
std
int3
data16
loopne
arpl
inc
loopne
sbb
sub
loope
dec
and
cmc
hlt
push
test
lret
push
adc
ud1
hlt
xor
lahf
or
jb
pop
ret
mov
loopne
mov
into
mov
out
add
bound
mov
ss
mov
in
push
sub
in
push
mov
mov
sbbb
cmpsb
inc
jbe
stos
out
test
orl
mov
adc
xor
fstpt
mov
arpl
mov
clc
stos
dec
outsl
push
js
add
jp
imul
xor
mov
pop
jg
pop
fmull
je
stc
sbb
or
jo
jecxz
jne
rol
xchg
mov
jo
out
jo
inc
xchg
test
stos
out
sbb
add
mov
jb
and
add
inc
mov
out
jge
push
inc
cli
arpl
inc
mov
pop
add
add
popa
adc
imul
adc
rolb
data16
es
sbb
push
dec
orb
adc
sub
xchg
add
dec
pop
cltd
lock
pop
cmpsb
imul
repz
sbb
fwait
push
in
ljmp
in
push
dec
push
cmp
push
inc
popf
sub
sbb
filds
mov
mov
int
or
in
je
add
sahf
nop
divb
pushl
fbld
dec
cmp
sub
pop
inc
sar
test
jle
leave
pop
lahf
gs
push
ja
das
cmp
pop
divl
fmul
out
jae
mov
or
mov
mov
test
dec
sbbl
sar
dec
sbb
pop
loopne
mov
outsl
inc
or
jg
add
inc
int
mov
hlt
sbb
xor
sarb
insl
ja
int3
sub
inc
cmpsl
scas
sti
std
lock
fnsave
xor
dec
xchg
mov
lds
repz
out
gs
pusha
add
jp
cwtl
and
xor
in
sahf
sub
scas
dec
bound
orb
scas
call
test
xor
mov
mov
loop
repnz
negl
or
sbb
xor
xchg
cmp
les
ss
into
push
loope
dec
mov
and
cmp
mov
repnz
xor
aad
lret
ja
lret
xor
pop
and
mov
push
mov
std
test
je
xchg
xchg
sbbb
daa
push
xchg
repnz
jne
push
dec
in
sub
inc
popf
repz
pop
ljmp
xchg
scas
pop
shlb
test
arpl
cmp
adc
ja
in
push
loopne
rclb
inc
arpl
rclb
dec
mov
rdmsr
push
push
lods
sti
rorb
lds
imul
fs
inc
lret
cmp
arpl
mov
stos
ss
mov
imul
pop
lret
lret
xor
jns
orb
mov
xchg
mov
ret
and
aad
add
rclb
repz
mov
xchg
js
sub
test
dec
out
test
ljmp
sub
das
pop
dec
inc
push
dec
mov
fdivs
mov
inc
xchg
lcall
mov
ret
push
shl
daa
adc
or
test
jl
xlat
pop
push
xor
inc
cmp
loop
icebp
lret
cmpsl
mov
test
adc
xor
xchg
ja
repnz
int3
mov
jmp
jp
cli
leave
fs
and
in
fwait
xor
add
xlat
in
jmp
daa
mov
neg
or
mov
jl
jl
dec
sti
aad
xchg
out
dec
jnp
aad
test
clc
das
fwait
pusha
mov
xchg
leave
jge
inc
xor
gs
jo
mov
cmp
fcoml
ja
adc
mov
sbb
jp
mov
cmpsb
inc
inc
sub
xchg
adc
loope
sarl
lret
ret
lods
fbld
std
push
xor
fmull
add
insb
daa
loopne
push
mov
cmp
pop
stc
cmp
and
sbb
mov
orb
add
fwait
xchg
into
xchg
cli
loop
or
clc
cmp
inc
cmpsl
or
aas
scas
jnp
shll
pop
or
outsb
ret
pop
mov
cmp
jmp
in
add
enter
dec
sbbb
repnz
repz
call
cs
imul
mov
cmc
or
pop
inc
je
pop
cli
in
xchg
pop
sub
xchg
imul
inc
mov
mov
jb
jecxz
outsb
push
xchg
cmp
xchg
jne
and
nop
stos
xor
dec
cmp
aas
test
and
pushl
push
dec
iret
daa
jp
push
push
clc
push
and
pop
fstpl
aam
xor
mov
arpl
and
pushf
jne
lcall
cli
cli
jp
dec
dec
lahf
pop
and
sbb
inc
inc
in
sub
arpl
or
orb
lret
mov
fld
xor
fsts
xor
fldt
mov
jae
test
or
fnstenv
arpl
sub
enter
lds
leave
fists
imul
pop
enter
int
imul
mov
add
dec
push
or
rorl
data16
add
inc
movsb
xor
cmp
rolb
pop
sahf
pushf
push
jle
cmpsb
lods
xlat
adc
ret
jle
loope
adc
xchg
mov
aas
subl
push
inc
mov
adc
pop
out
clc
cmpsl
dec
push
xchg
ss
xchg
iret
data16
out
popa
ja
jno
repz
ljmp
cmp
inc
adc
jnp
mov
or
gs
arpl
aaa
mov
push
fxch
sbb
xor
cmp
aaa
push
fs
mov
cmc
push
mov
mov
out
jge
add
dec
jg
cmp
cmpsb
mov
cltd
push
mov
mov
mov
stos
jae
int3
add
push
loope
call
dec
out
neg
jb
int
lds
out
adc
std
inc
push
push
cmp
mov
cmp
repz
repnz
xor
sbb
fwait
jns
xor
mov
mov
ljmp
ja
pop
jl
imul
push
xor
dec
cltd
xor
fsubrl
ja
pushf
lcall
sahf
mov
int3
into
pop
mov
mov
inc
add
cltd
repnz
pop
out
xor
aad
cmpsb
adcb
fldenv
int
fldcw
cmp
cmp
insb
sub
jmp
push
lds
push
cmp
mov
jbe
scas
xchg
sbb
lret
sbb
xchg
xchg
insl
cmc
scas
add
inc
int3
xor
pop
or
mov
outsb
cmpsl
int
jl
push
aaa
add
punpcklbw
data16
fldenv
or
icebp
mov
negb
and
aam
adc
test
jge
stos
add
mov
sub
sbb
jmp
stc
shll
fs
push
ds
and
jns
push
pop
jmp
int
mov
mov
pop
mov
jl
lea
or
scas
pushf
outsb
cmp
loope
dec
subb
test
mov
addr16
fldl
pop
sub
jo
and
mov
fwait
iret
push
push
cli
and
addr16
xlat
push
std
xor
cli
mov
sub
ljmp
stos
leave
icebp
and
xchg
mov
and
dec
aam
ss
test
sbb
out
lret
and
or
pop
xor
incb
sub
sbb
sub
mov
call
xchg
mov
dec
addr16
mov
push
mov
cmp
test
mov
arpl
mov
push
es
imul
cmc
xor
sbb
cmp
enter
jl
mov
dec
test
rcll
or
rcrb
ljmp
adc
loopne
and
sbb
cmp
mov
sti
pop
les
jb
sub
mov
xor
fcoms
mov
fs
pop
inc
movsb
out
test
lock
or
push
jbe
imul
ljmp
rcrl
in
and
aad
xchg
and
dec
mov
xor
test
xor
jecxz
inc
add
pop
rolb
pop
int3
or
add
rolb
dec
ds
cmpb
push
adc
mov
fwait
stos
push
mov
loope
cmc
jae
inc
xor
cmpsl
adc
pop
repnz
jae
loope
xor
push
movlps
sbb
mov
loop
scas
mov
fisubs
add
mov
sub
in
inc
inc
jno
dec
mov
gs
push
sbb
mov
pop
test
clc
dec
sbbb
sub
mov
mov
aam
adc
sarl
scas
dec
pop
mov
inc
and
fs
out
xchg
sbbl
lds
sbb
aas
addl
mov
aaa
popa
xchg
add
push
imul
xor
jo
inc
inc
inc
mov
and
test
lock
add
leave
sbb
push
scas
mov
jb
cmpsl
and
hlt
jnp
in
cli
lret
rcrb
and
ljmp
es
sbb
sub
ds
rolb
jp
pushf
xchg
mov
push
xchg
test
push
mov
outsb
mov
enter
scas
push
jbe
nop
fidivrs
dec
dec
repz
pushf
roll
mov
out
push
popf
lds
rorl
xor
hlt
pop
jne
loopne
sbb
mov
mov
inc
mov
loope
fsubrl
push
mov
jbe
adc
outsl
mov
add
jl
mov
lcall
xchg
jbe
aam
fsubrl
or
cmp
cmpsl
mov
test
repz
stos
pop
std
xchg
subl
sbb
xchg
lock
cmp
fistl
and
sbb
push
or
dec
mov
std
gs
inc
je
push
cmp
adc
cli
and
mov
mov
dec
cmp
test
sbb
dec
sub
mov
and
sahf
mov
ss
sub
stc
jecxz
push
test
xchg
loope
mov
xor
push
in
mov
repnz
adc
inc
sbb
inc
push
test
or
pop
pop
inc
pop
mov
xchg
ljmp
mov
xor
jg
sbb
stc
imul
leave
out
out
push
mov
stc
cmp
outsl
jle
and
fwait
dec
or
add
inc
pushf
lret
fwait
xchg
lods
dec
cmpsb
or
out
cmp
lea
fildll
dec
sahf
in
push
repnz
mov
lea
jb
mov
jne
cmp
clc
sub
mov
ljmp
push
jb
pop
or
pusha
repz
pop
das
fildll
xchg
push
pop
jne
bound
xchg
sbb
cmp
pop
mov
sbbl
not
sub
ds
dec
pop
fstpl
cwtl
mov
cmpsb
mov
loope
cltd
inc
pop
xchg
cmp
rol
mov
dec
ss
leave
aaa
inc
sbb
fstp
outsb
lds
push
lock
jbe
dec
les
gs
inc
repz
mov
ret
or
mov
data16
in
push
scas
nop
push
xlat
test
rcr
xchg
in
lods
cli
jae
in
in
enter
push
rolb
and
fwait
repz
mov
mov
jmp
jge
inc
out
cmp
orb
test
pop
sub
push
xor
stos
jns
push
inc
jb
inc
je
mov
cmp
lea
clc
cmp
outsl
arpl
les
cmp
or
add
faddp
sbbb
int3
push
xchg
lahf
cmp
outsl
test
icebp
addr16
sti
xchg
jbe
js
mov
icebp
dec
push
add
inc
jecxz
push
aas
adc
jno
mov
mov
inc
sub
jl
mov
shrl
jle
inc
mov
outsb
ljmp
xchg
imul
movsb
mov
ret
into
stc
test
lds
rol
and
or
mov
nop
cmp
and
mov
sub
fucomip
mov
adc
hlt
pop
ficomps
sbb
push
adc
ret
mov
out
mov
sub
pop
xchg
shrl
pop
jge
es
xchg
push
inc
adc
jno
dec
cmp
fcomp
fs
in
hlt
popa
or
shl
jmp
cmovno
sbb
call
outsb
int3
bound
ljmp
add
arpl
mov
inc
mov
mov
pop
shrb
je
jle
stos
fcompl
mov
shrb
dec
jne
out
jp
pushf
lods
mov
and
dec
mov
repnz
cli
dec
sbb
jns
js
pop
les
lcall
sub
rorl
lds
push
rcl
lock
mov
fcom
xchg
nop
addr16
mov
sar
fdivl
add
jmp
dec
aas
inc
cmp
lcall
je
in
hlt
outsb
sub
pop
scas
xor
out
es
dec
aad
mov
movsl
sub
xchg
insb
scas
je
or
repnz
pop
jg
ds
fs
and
mov
inc
cmp
or
pop
std
in
pop
mov
inc
mov
sbb
push
or
mov
inc
jmp
pop
mov
movsb
push
jbe
mov
cmpsl
int3
js
jmp
mov
xchg
aaa
pop
pop
call
orb
push
lret
cmp
jns
mov
int3
xor
add
das
cld
cmp
aad
mov
lret
push
fidivrl
sti
sbb
mov
out
push
adc
pushf
dec
fistpll
jecxz
jecxz
repz
jb
dec
cmpsb
in
fdivrl
shlb
xchg
iret
fcmovnbe
xor
out
dec
enter
and
fdivrl
sbb
mov
pop
das
mov
jns
scas
xchg
inc
mov
cmp
mov
and
mov
and
inc
lcall
lcall
ss
das
and
or
scas
jl
mov
test
dec
mov
adc
mov
and
cmc
pop
arpl
ret
lret
pop
xlat
cmp
push
js
sbb
push
jnp
push
inc
das
sbb
and
loop
popf
data16
es
sbb
dec
iret
pop
imul
adc
xchg
push
inc
pop
roll
mov
push
dec
das
jp
dec
inc
in
loope
incb
fdivrp
xchg
shrb
inc
loopne
pop
adc
aaa
adc
or
cmpb
call
filds
or
shlb
jbe
out
aas
and
call
add
add
sbb
xchg
xchg
enter
and
or
add
popa
adc
cltd
cltd
pushf
test
lock
mov
sub
sbb
bound
cmp
cmp
imul
decb
loope
incl
fs
jb
mov
outsb
dec
insl
xor
add
inc
cmpsl
das
out
mov
pushf
add
mov
out
int
xchg
loop
icebp
fmul
scas
sub
sahf
fdivrp
cmpb
inc
mov
movsl
sbb
mov
xor
pushw
xor
xorb
mov
mov
movsl
mov
out
enter
imul
dec
clc
xchg
sbb
aaa
adc
pop
psllw
sub
push
adc
mov
jmp
pusha
jae
sub
mov
popa
ret
ljmp
dec
cmc
sti
cld
xor
mov
in
out
xor
aam
mov
inc
add
adc
std
mov
jmp
add
fldenv
in
jno
clc
cli
mov
cmp
dec
mov
inc
in
nop
jmp
push
cmp
and
das
jae
inc
jg
in
in
pop
std
shrb
adc
mov
jne
pusha
sub
cmp
or
int
push
push
inc
loop
pushf
fwait
outsb
loopne
inc
xchg
mov
outsb
stc
aaa
hlt
sub
xchg
gs
ds
sti
jnp
xchg
out
sbb
cmp
test
loop
mov
dec
mov
loope
push
and
repnz
push
mov
sbb
push
pop
movsb
pop
cwtl
or
hlt
adc
faddl
lret
mov
out
cld
mov
push
dec
lock
sti
fs
in
cmpsb
inc
out
repz
lods
sbb
pop
ret
lods
pusha
and
fwait
pop
jbe
lock
dec
loop
adc
mov
sbbl
xchg
sbb
xor
dec
xor
hlt
sbb
push
std
outsb
cmp
rcrb
jo
xor
idivb
inc
jae
lcall
sbb
and
je
in
repz
aam
notl
into
test
push
orl
jmp
aas
mov
fidivl
sub
lods
mov
mov
sbb
jb
jg
andb
cmp
jnp
cmpsl
fsubl
repz
sbb
or
and
xor
sbb
cmp
push
mov
arpl
repz
movsl
add
sub
xchg
cmpsb
ret
xchg
lahf
or
pop
mov
xchg
lock
clc
push
pop
or
insb
mov
fiaddl
xchg
clc
xchg
inc
in
leave
jl
jg
sub
sub
xorl
stos
pushf
mov
movsl
pop
xor
sbbb
cmp
pop
cli
cmp
push
int3
mov
mov
or
fsubr
xor
cmp
inc
ret
sub
sub
adc
mov
test
lods
orl
dec
mov
inc
adc
hlt
pop
pop
or
or
jge
or
xor
scas
mov
or
shll
mov
or
pop
xchg
cmp
push
mov
stc
xor
and
fmulp
pop
fcoms
paddq
stos
and
repnz
loopne
scas
lds
call
enter
mov
mov
movsl
arpl
adc
call
and
push
popf
shll
addb
sbb
icebp
sub
call
mov
mov
adc
pop
leave
mov
outsb
xor
push
add
cmp
jmp
mov
ret
or
cwtl
jb
jg
cmp
dec
add
jge
xchg
pop
cmc
mov
mov
mov
xor
ds
loopne
xchg
jmp
insb
test
divb
xor
aaa
into
fsubs
xor
jne
inc
jecxz
or
xchg
clc
dec
inc
push
sbb
outsb
arpl
inc
inc
xor
add
mov
popf
inc
sarb
xchg
out
cmp
inc
aaa
stos
mov
cmp
pop
int3
and
iret
jecxz
and
push
stc
and
fcoms
mov
icebp
ret
inc
sub
sbb
lahf
daa
cmpsl
cmp
pop
xor
jl
hlt
popa
inc
aad
sti
inc
and
inc
aam
pushf
and
repnz
ljmp
mov
orl
adc
in
inc
mov
pop
cs
fstpl
lret
pop
pop
in
cmp
and
push
sbb
sbb
sbb
xor
jecxz
aam
mov
insl
sub
inc
fstpt
pop
adc
sub
aad
cmc
cmc
xchg
mov
fldl
movsb
das
outsl
dec
jle
mov
push
adc
jge
sub
push
hlt
pop
mov
or
sbb
jg
adc
rcl
daa
movsb
shrl
cmp
mov
xchg
add
xor
jg
leave
decl
div
mov
repz
xorl
dec
hlt
xchg
or
in
dec
and
adc
decb
out
adc
add
cmp
jmp
mov
lods
jle
mov
popa
out
or
pop
add
jno
sub
or
mov
inc
mov
push
dec
and
push
shll
push
addb
inc
ss
mov
popa
mov
push
fiaddl
aas
jp
stos
in
cmp
stc
jl
int3
inc
or
imul
pop
mov
jp
loop
sub
fisubrs
sub
mov
xchg
sub
add
mov
fimull
adc
mov
mov
cwtl
push
mov
cwtl
jg
orb
mov
subb
cltd
arpl
dec
inc
sti
adc
push
sbb
imul
mov
cmp
imul
cwtl
mov
rorb
jno
sbb
or
jo
fdivs
cli
sbb
mov
sbb
mov
push
adc
iret
icebp
shlb
or
xchg
aad
pop
sub
notb
mov
sbb
mov
lea
and
out
cs
adcl
sti
pusha
in
in
rclb
dec
jns
fnstsw
paddusw
test
xchg
jno
xor
and
pop
push
shr
mov
and
xchg
cli
fucomi
push
adcb
out
fs
add
jecxz
fs
push
dec
mov
cmp
lcall
or
cmp
jnp
sub
mov
mov
stos
cmpsb
add
push
stos
push
mov
sub
cmpsb
fisubrs
jmp
pop
xlat
and
and
dec
adc
fimuls
jp
scas
int3
mov
enter
outsb
dec
insl
inc
cmc
imul
addr16
dec
pop
xor
stos
and
ret
jb
lds
fs
cmp
stos
cli
cmpb
mov
lahf
pop
int3
int3
out
ret
pop
negl
andl
add
lea
lcall
add
gs
in
mov
cli
jae
ja
adc
push
mov
dec
and
cmp
dec
pop
negl
dec
pop
xchg
cmp
enter
inc
jbe
popf
and
lock
rclb
iret
sbb
mov
pop
adc
test
xchg
lock
and
loop
fisubl
int
shll
movsl
imul
stc
frndint
sub
pop
mov
out
testl
add
nop
xor
call
inc
dec
loopne
ss
mov
sarl
mov
enter
push
arpl
in
dec
xchg
mov
mov
pop
mov
repz
or
dec
cmpsb
fiadds
insb
test
or
push
add
mov
mov
add
jbe
pop
int
cmp
cmp
imul
adc
ss
add
arpl
xchg
pushf
aas
mov
xor
iret
cmp
call
xor
mov
mov
mov
push
out
aad
popa
clc
addr16
ss
stos
pop
mov
xchg
adc
cs
fiaddl
fwait
mov
jecxz
cmp
je
xchg
bound
aas
ss
dec
cltd
mov
les
repnz
jmp
in
add
inc
lcall
lcall
ret
addr16
push
sbb
jbe
push
add
xor
xor
mov
pop
loope
xchg
jne
out
arpl
call
negb
add
mov
cmp
mov
mov
fs
jo
clc
fsubrl
rcrl
xor
fcoml
adc
in
mov
and
add
and
mov
cwtl
inc
lea
popf
ret
rcrb
mov
jmp
loop
mov
mov
jnp
inc
or
pop
mov
jmp
sub
insl
cmpsb
or
push
or
rclb
and
aad
ret
cmc
outsl
loop
in
push
cltd
dec
dec
lret
add
dec
cmp
shlb
push
fiadds
mov
fldcw
xor
lcall
mov
xor
mov
fidivl
sub
paddusw
or
outsb
mov
jg
push
mov
es
outsl
hlt
test
movsl
sbb
lea
mov
in
test
mov
in
sub
push
mov
mov
lcall
mov
icebp
pusha
push
xchg
icebp
xchg
mov
repnz
in
rorb
and
aas
inc
push
or
aaa
mov
mov
sbb
xchg
add
cli
cwtl
addb
pop
pusha
rol
mov
push
mov
imul
cmp
push
popa
imul
cs
push
push
sub
jnp
mov
jb
sbb
test
aaa
jl
inc
inc
in
pop
cmpsl
mov
test
rol
mov
hlt
ret
jbe
dec
repz
jbe
rcll
mov
ja
xchg
ror
mov
push
popa
je
lods
repnz
or
outsl
mov
fidivl
aam
dec
cltd
lret
push
lods
mov
leave
adc
aam
push
leave
xchg
add
xor
lds
xchg
fs
xchg
call
sub
adc
loopne
fistl
ret
repnz
pushf
push
and
lret
jnp
adc
insl
shrl
test
inc
mov
pop
lds
lea
dec
testl
push
rcr
aas
mov
mov
stc
test
pop
shrl
les
sti
cmpsl
js
fidivs
mov
es
dec
inc
bound
cmp
leave
imul
mov
loope
stos
cmpsb
lods
xchg
ljmp
mov
push
in
sub
test
rcll
inc
pop
jg
pop
cld
test
jb
cmp
mov
jns
push
imul
outsl
fadds
aas
or
les
jp
lea
fnstenv
cld
call
shll
pop
int3
jle
xor
xchg
mov
and
push
lods
xor
aam
movsl
rorl
adc
imul
xor
popf
repnz
sbb
xor
ror
fisttpl
fsubrl
mov
mov
ja
cld
mov
add
mov
pop
jb
stc
stos
mov
mov
and
xchg
mov
popa
ja
es
movsb
push
aaa
mov
sub
push
or
adc
push
ljmp
stos
out
and
cmp
repnz
daa
out
out
outsb
es
add
xlat
cmp
inc
inc
sub
fimuls
xchg
cmpb
or
sahf
xchg
xchg
int
fs
fstpt
test
loop
dec
adc
in
xorl
aas
mov
or
cmp
enter
and
out
cmp
xchg
push
out
mov
push
dec
mov
lea
mov
and
or
jo
sbbb
push
push
xor
aad
pop
mov
adc
sbb
xor
cmp
sbb
in
and
add
mov
and
jne
dec
adc
ljmp
fs
in
mov
sub
mov
mov
push
into
mov
gs
movsl
mov
dec
loop
scas
je
push
cmp
scas
xchg
int
lret
cli
or
dec
cmp
mov
fisubl
xchg
push
into
imul
lcall
mov
jg
cltd
sarl
push
je
push
rclb
cli
loopne
dec
les
adc
jle
dec
sub
xor
mov
jg
ficoml
jecxz
test
cli
fs
int3
mov
add
cmp
sbb
pop
pop
mov
lcall
mov
push
jl
sub
pop
inc
loopne
pop
xlat
stos
lret
fidivl
jecxz
fwait
lahf
pop
fdiv
stos
jae
leave
mov
lahf
mov
mov
jp
mov
call
shrl
outsl
shll
repz
in
daa
cmp
xor
add
mov
cli
inc
test
jl
imul
xor
hlt
ret
fs
ss
xchg
in
push
and
mov
xchg
int3
push
dec
xchg
dec
or
test
in
dec
stos
inc
aad
cmp
inc
rcll
ret
int
push
cmpsl
jecxz
arpl
adc
inc
jno
pushf
insl
lods
mov
andb
jbe
dec
icebp
jo
repnz
and
xchg
push
stos
jae
ffree
jne
jbe
cmp
insl
jo
in
pop
mov
aas
inc
pop
xchg
sahf
adc
adc
imul
test
mov
stc
loop
jo
lds
in
or
stc
jns
jmp
imul
fistpl
cld
jmp
xor
cwtl
xchg
fdivl
imul
call
add
jecxz
shll
sbb
test
notb
gs
push
push
xchg
mov
jno
sub
or
push
adc
mov
iret
out
push
sub
adc
or
sbbl
and
cmp
enter
fisubs
lcall
test
call
lahf
jecxz
fxch
add
lret
mov
xor
orb
mov
test
inc
stc
daa
xor
shrb
mov
outsl
cmpsb
pop
cmp
sarl
jo
dec
out
std
test
jecxz
pop
jle
ret
movsl
fs
xor
jae
andb
adc
jne
lods
ret
jno
ret
loop
mov
fmuls
mov
popl
int
dec
jae
leave
xchg
daa
pop
fnstenv
pop
adc
jb
loop
int
sahf
or
lods
adc
mov
and
aad
cwtl
xor
push
ds
pop
adc
ja
mov
sub
hlt
mov
ficomps
imul
lea
fstp
xlat
test
and
movsl
pop
dec
cmp
sbb
push
or
out
out
ljmp
mov
push
push
xchg
in
aam
and
cmc
push
pop
into
in
rorl
ret
lods
ds
shr
pop
jmp
enter
mov
filds
addr16
ss
cmpsl
aad
mov
lods
cmp
inc
aas
xor
mov
loope
fmul
pushf
jb
xchg
inc
pop
ret
dec
push
xorb
imul
mov
add
int3
mov
enter
aaa
les
inc
pop
and
arpl
xchg
jge
test
rol
mov
out
jne
cmp
sub
mov
enter
sub
push
fs
push
push
and
dec
gs
jne
xchg
ja
cmp
shlb
jo
sahf
mov
xor
je
xor
push
jle
int3
cltd
or
pop
bswap
mov
pop
hlt
mov
pushf
into
mov
inc
sbb
mov
fistpl
xlat
fs
dec
aaa
adc
sbb
stos
jge
in
das
roll
jl
push
or
mov
dec
sub
or
push
fldl
out
les
popf
ss
sub
mov
je
mov
pop
xlat
dec
je
push
cmc
pop
je
jbe
sub
inc
std
aam
lret
sub
cmp
ss
imull
daa
push
pop
cmpxchg
pop
daa
xchg
lahf
mov
mov
pusha
pop
pusha
int
repz
das
pushf
movsb
inc
aam
sahf
or
mov
jmp
shrl
mov
mov
mov
mov
fsts
repnz
inc
adc
dec
scas
jnp
inc
mov
nop
cmp
push
fldt
outsl
rol
dec
ja
mov
sbb
cmp
mov
lods
or
adc
sub
iret
sbb
popa
test
insb
lds
outsl
ficompl
es
clc
push
stc
bound
jnp
mov
mov
pop
fdivs
lea
pop
roll
jecxz
mov
das
dec
mov
imul
mov
mov
in
out
stos
mov
jae
dec
adc
add
mov
out
add
gs
imul
stos
push
adc
lods
add
in
test
icebp
fisttpll
pop
das
pop
rclb
xor
out
xor
add
fidivl
lods
or
cmp
dec
cmpl
xor
mov
mov
jae
adc
outsb
decl
call
cld
mov
scas
sbb
fwait
xorl
lret
insl
fadd
aas
pop
aam
pop
ffree
push
sti
pop
enter
inc
jle
ja
popf
mov
lcall
fistl
jp
icebp
shrl
adc
dec
push
mov
sbb
xor
hlt
cs
aam
loope
mov
sub
add
leave
adc
sub
sub
lahf
inc
push
jb
repz
out
or
or
and
repnz
out
fldenv
repnz
insb
sub
push
jmp
inc
loopne
xchg
pop
mov
xchg
mov
stos
je
push
in
lcall
nop
aam
loope
add
push
rclb
or
gs
xor
mov
push
enter
rol
and
insb
adc
loop
push
loop
add
andl
jecxz
cmp
pop
sbb
and
add
pop
jle
inc
popa
out
sahf
lock
dec
add
test
cs
rcl
js
sbbl
sbb
and
aas
loopne
cmp
fcmovbe
icebp
leave
popa
mov
repnz
xlat
xor
aam
or
add
or
xchg
mov
dec
mov
mov
sbb
orb
add
xor
pop
inc
jne
jnp
xchg
sub
xchg
jo
inc
push
push
jmp
jo
xchg
andb
mull
xlat
ljmp
add
rorl
in
xchg
jb
repnz
mov
stos
mov
les
jns
and
add
and
test
jg
lret
inc
iret
scas
fstps
inc
sbb
fcomps
sbb
jl
pop
jo
dec
scas
pop
daa
lods
popf
ret
lcall
scas
xor
mov
incb
les
dec
shlb
enter
add
sahf
repnz
inc
ret
cmpsb
dec
in
or
inc
js
xor
lods
adc
push
or
push
sbb
in
repz
mov
fnstsw
xchg
in
fs
mov
outsb
push
jge
pop
and
out
push
loop
movsl
cmp
push
fstl
push
and
mov
mov
cli
lods
fisubrl
rorb
mov
cmp
aad
push
mov
out
sbb
fcmove
push
in
mov
cmpb
mov
cmpsb
ljmp
sub
jbe
jge
mov
mov
rorl
imul
fcomps
lods
and
cmp
mov
dec
in
adc
xchg
push
adc
adc
mov
mov
mov
jbe
lahf
push
movsb
mov
jns
mov
xchg
fstpl
lcall
enter
imul
xor
add
sub
cmpsb
push
dec
int3
pushf
ret
mov
stos
loopne
jns
push
int3
js
mov
scas
xchg
fisubrl
mov
sbb
pusha
mov
fwait
inc
call
push
scas
test
in
addr16
fwait
out
fists
mov
or
dec
and
mov
jns
adc
xchg
fnstsw
push
out
add
xorl
pop
cli
push
imul
and
sbb
mov
leave
insl
jg
sbb
jecxz
and
pop
sbb
add
pop
sub
stos
test
dec
jmp
mov
add
loope
push
xchg
pop
pop
jne
cmp
xchg
mov
push
insl
adc
jo
enter
xor
ffreep
arpl
lea
dec
mov
imul
mov
xor
push
pop
sbb
ljmp
sub
mov
fnstcw
jno
mov
inc
pop
sbb
xor
negl
ss
test
scas
icebp
fidivrs
arpl
jge
xor
push
pushf
je
jnp
nop
test
cmp
imull
mov
or
pop
pop
lahf
xchg
mov
test
jecxz
shr
pop
lods
push
inc
xchg
adc
shrb
push
insl
pusha
pushf
and
push
std
roll
push
dec
clc
fnstsw
cmp
ret
jbe
and
movsb
call
incb
leave
jae
xor
test
pusha
cmp
inc
ret
jmp
and
incb
imul
jae
sub
js
in
mov
cmp
lret
shlb
push
add
psllq
dec
push
in
icebp
shrb
inc
arpl
push
das
inc
into
fs
pop
mov
mov
sub
pop
rorl
aas
cmpsb
scas
mov
pop
mov
or
mov
xor
jnp
test
fs
push
dec
outsl
jl
dec
test
lret
mov
mov
stc
xchg
xchg
scas
sbb
sbb
test
pop
mov
add
cmp
xchg
addb
rcr
lods
imul
rcr
jo
lret
addr16
add
ja
loop
push
movmskps
sbb
andl
sbb
pop
inc
sub
fmuls
mov
jle
dec
xchg
inc
inc
pop
pop
xchg
push
stc
mov
gs
cmp
shlb
inc
mov
sub
repnz
imul
mov
xchg
shll
and
push
aad
jo
dec
fbstp
adc
inc
xchg
sbb
xchg
xchg
jne
lock
jo
or
xchg
mov
lcall
mov
lods
jmp
int3
cmp
shll
xor
mov
pop
in
sbbl
jne
jns
loopew
fbstp
aam
popa
and
pop
jecxz
sbb
mov
sub
test
mov
jge
and
push
or
jb
ds
dec
stos
cmp
cld
sbb
or
and
jb
push
outsl
or
and
ljmp
mov
shr
repnz
into
pop
mov
xchg
cs
test
jle
jl
and
jnp
popa
cmp
pusha
enter
dec
pop
imul
jge
dec
imul
sbb
add
sbb
das
or
lods
jne
inc
jmp
or
and
jmp
inc
jno
inc
xchg
cmpsb
dec
pop
mov
push
insb
outsb
lret
ret
jne
mov
fimuls
lock
inc
loope
add
sbb
lcall
mov
in
mov
cmp
fcmovnb
inc
pop
add
pop
jge
mov
mov
mov
dec
gs
bound
add
and
xor
add
insl
jo
hlt
in
and
inc
pusha
pop
dec
mov
lock
sbbl
dec
mov
fcompl
int
sbb
cli
jle
pushf
cmp
xchg
imul
cmp
or
test
mov
cmp
test
sub
push
std
int
xchg
dec
imul
xor
cmc
pop
rolb
jmp
cmp
mov
jo
ss
jmp
xchg
sbb
jp
jne
or
or
adc
les
mov
sub
mov
and
push
outsb
push
mov
mov
fucomp
jo
jmp
adc
cltd
jp
test
pop
sbbl
ret
sub
in
bnd
fsubrl
les
mov
xchg
mov
in
out
xchg
push
mov
push
movsl
jbe
jl
shrb
push
stos
sarl
push
lods
mov
ljmp
sti
mov
fisttpll
add
jnp
pop
addb
clc
dec
dec
xchg
sbb
in
stos
mov
data16
push
enter
jle
sub
mov
bound
outsb
jo
push
stc
push
insb
movsl
inc
cmp
pop
fs
int3
in
jnp
add
pop
cwtl
xor
cmp
inc
leave
sbb
jne
ret
aad
test
mov
push
xchg
aad
xchg
in
ljmp
jg
xchg
fildll
jle
int3
xorl
mov
pop
fsubl
xchg
mov
xor
jecxz
fnstsw
mov
scas
and
add
sbb
jp
adc
icebp
pop
cmp
scas
dec
fwait
out
jb
jp
mov
xorb
mov
mov
add
dec
decb
lcall
pop
mov
push
push
fidivrl
hlt
or
sbb
sbb
in
adc
fcompl
push
sbb
test
outsb
inc
mov
iret
outsl
jle
sub
pop
sub
les
xchg
push
xlat
outsl
dec
xchg
loop
das
fldl
or
push
jbe
pop
mov
adc
add
and
mov
inc
inc
and
sahf
das
inc
pop
mov
or
loopne
mov
mov
das
sbb
xchg
jns
pushf
lahf
rorb
imul
push
push
or
data16
cmc
out
test
adc
sti
cmp
mov
ret
sub
xorb
push
cmp
test
jns
stos
aam
ret
jl
dec
mov
pop
inc
mov
and
jp
jge
cmpsb
jle
push
cld
sbb
fbstp
fimull
lea
outsl
push
in
cmp
adc
dec
or
adc
or
test
cmp
shlb
int3
and
fsubrs
inc
loope
test
mov
icebp
fisttpll
push
les
testb
ljmp
or
push
lret
pushf
ss
mov
push
into
pop
mov
int
lret
je
and
dec
cmc
mov
movsb
push
push
push
jle
xor
loopne
pop
lret
xchg
orl
jne
std
or
pop
sub
cmp
js
jp
xchg
inc
and
inc
cmpsb
sub
popf
jp
lods
xorb
push
xor
mov
and
xor
dec
mov
inc
jne
mov
mov
shlb
inc
daa
inc
pop
incl
lock
mov
dec
repnz
lea
mov
pop
mov
xlat
mov
lock
test
xchg
xor
adc
mov
xchg
and
aaa
lret
push
andb
jp
stc
jb
and
rolb
in
shll
cltd
cmpsb
jg
adc
add
sbb
stc
ljmp
xor
cmp
movsb
insl
pop
xor
cltd
inc
pop
arpl
ljmp
inc
cmpsl
or
mov
nop
addr16
jne
jg
or
dec
bound
push
in
nop
add
mov
ret
vpshld
mov
adc
inc
fwait
shll
and
subb
mov
hlt
cmp
push
movsb
xchg
pop
jae
xor
inc
inc
cld
testb
push
push
add
mov
sub
sarl
aam
int
dec
push
fs
dec
dec
mov
es
pusha
sahf
push
rcr
andl
mov
testb
ret
xor
add
imul
out
xchg
iret
in
adc
out
xchg
arpl
mov
aad
add
xor
addr16
push
mov
push
outsl
scas
xor
jecxz
cmp
pop
dec
mov
add
xor
mov
cld
jge
and
icebp
mov
jmp
test
push
add
xor
jo
lahf
and
in
mov
push
movsb
rcl
psrad
stos
sub
cld
int
xor
ficoml
cmp
push
jle
adc
rolb
dec
jge
xor
push
pop
pop
in
dec
mov
lahf
mov
icebp
sub
mov
xchg
fcompl
add
mov
add
popa
and
stos
popf
xchg
test
dec
std
leave
jmp
mov
lods
fcomps
push
repz
sbb
mov
cwtl
cmp
call
or
mov
imul
sub
lcall
iret
iret
je
daa
outsb
adc
ret
cmp
mov
and
loope
add
mov
ljmp
out
inc
cmc
mov
dec
fwait
aad
push
mov
pop
aam
decl
mov
gs
scas
pop
push
notb
arpl
mov
cmp
fucomip
jo
or
sbb
push
mov
fisubs
out
aaa
imul
push
lds
outsl
int
ret
ljmp
scas
adc
pushf
arpl
push
push
inc
ds
and
fnsave
repnz
mov
push
movsl
sbb
icebp
inc
mov
int3
sub
pop
jecxz
outsb
ja
inc
je
aad
or
imul
sbb
subb
cmp
lds
in
sbb
cmp
pop
mov
das
inc
inc
ja
divl
lds
push
adc
enter
xor
pop
mov
xchg
sub
jecxz
mov
sub
je
mov
push
cmp
cmp
sbb
popa
stc
mov
sbb
mov
add
call
xor
scas
jmp
jae
sbb
push
shrl
lock
or
pop
mov
decb
sub
ret
xor
fsubrs
cmpl
sub
jl
xor
adc
or
push
lods
inc
cmp
inc
je
lea
shlb
mov
jne
rcrb
in
push
decl
adcl
adc
aas
sbb
or
sbb
out
pop
pop
pop
test
cmpsb
push
ss
out
mov
sbb
je
cmpsb
out
insb
popw
inc
cmpsb
xor
xor
int3
jae
mov
outsb
push
outsb
push
addr16
or
dec
cli
enter
mov
outsb
fldl
mov
mov
adcb
gs
add
nop
mov
sub
xor
push
cmpsb
inc
inc
push
push
stos
int3
test
cs
jecxz
sbb
leave
dec
loop
arpl
push
fldl
and
mov
push
push
cmp
mov
cmp
int
and
ret
fldt
outsb
dec
rcrb
xchg
insl
push
fiaddl
scas
inc
call
and
cmp
sbb
and
cmp
cmp
fstl
xlat
mov
sti
in
inc
rorl
mov
adc
mov
sbb
inc
es
inc
movsb
cwtl
mov
jp
dec
mov
fldt
push
cltd
pop
mov
lret
xor
fcomps
xor
addl
add
mov
das
pop
sbb
in
test
aad
cmc
and
dec
push
fistpll
push
cltd
jmp
bound
aam
cmp
enter
inc
xor
jge
cli
push
test
jns
cld
dec
aam
lea
cmpsb
adcl
mov
push
aam
notl
lea
pop
inc
imulb
nop
lds
sti
in
popf
outsb
sti
lret
orb
ja
incl
or
jns
xor
sub
sti
ljmp
xchg
sbb
adcl
and
mov
pop
loopne
adc
hlt
rcl
sbb
mov
sub
push
and
test
jge
cmc
xor
int3
pop
adc
inc
mov
push
jmp
je
dec
jecxz
pushf
dec
xor
out
xor
cmp
mov
sub
inc
in
sbb
shl
jae
and
mov
rcrl
jmp
nop
out
mov
mov
into
or
mov
insb
insl
and
xor
pop
inc
mov
cmp
xor
mov
xchg
fcoms
mov
jne
pop
cld
mov
mov
push
mov
xor
xchg
mov
and
or
pop
xor
mov
xrelease
iret
sub
ret
scas
mov
addr16
popa
adc
shll
clc
test
mov
fisttps
das
push
pop
or
xchg
jne
inc
imul
jg
in
or
int3
adc
push
pop
jle
mov
mov
repz
sbb
repnz
cmp
sti
stos
xchg
aad
adc
cmc
or
cmp
jb
bound
jg
imul
sbb
fwait
push
jb
imul
fstpl
stc
and
mov
imul
icebp
push
mov
and
push
std
data16
dec
jnp
cmp
mov
xor
jg
and
pop
jecxz
test
movsl
push
aaa
nop
cwtl
sbb
out
bound
repz
and
scas
popl
inc
mov
inc
dec
mov
xchg
mov
insb
rdseed
pop
mov
sub
xor
add
mov
out
push
or
push
nop
aas
pop
popf
mov
int
cmpsb
out
pop
gs
int
jb
ds
fmull
enter
in
adc
xor
ss
fwait
es
add
jg
mov
arpl
sbb
fwait
push
add
pop
fcompl
imul
xor
mov
xor
push
jmp
scas
mov
pop
out
rclb
out
push
push
mov
push
adc
jl
or
dec
in
dec
in
and
adc
dec
sbb
subb
push
mov
jg
jmp
jle
in
int
test
repnz
mov
dec
sbb
push
std
pop
jle
inc
or
dec
xlat
pop
jg
sbb
push
stc
or
jne
adc
push
stos
call
ja
mov
sub
jp
or
inc
adc
fcomps
gs
movsl
sbb
sbbl
fists
fcomps
jp
mov
dec
xchg
cmp
ret
fists
gs
sub
xchg
xchg
mov
test
jl
ss
out
test
or
jge
cwtl
cmp
pop
cmp
inc
jmp
inc
mov
shr
jns
rolb
xchg
pop
sarb
outsl
lea
sti
cwtl
aam
mov
mov
or
and
push
in
roll
jb
push
jb
cmp
test
int3
push
scas
mov
sub
repz
int
sub
adc
cmc
inc
nop
pop
aas
mov
sbbb
or
cs
rclb
and
in
mov
outsb
cmpb
inc
jecxz
and
mov
add
jge
pop
sbb
sti
cmp
pop
iret
cmp
mov
jo,pt
cmp
jno
pop
pusha
aaa
xchg
dec
inc
popf
jg
push
scas
out
inc
jmp
out
out
lahf
dec
lds
xchg
push
aad
xor
sbb
into
xlat
das
mov
int3
stos
xchg
adc
sbb
push
fld
aad
data16
das
mov
outsb
lret
or
sbb
xchg
ljmp
fists
xor
dec
std
pop
sub
cmp
scas
xor
cmp
add
fadds
mov
mov
sbb
xchg
movsb
sbb
invd
mov
daa
pushf
stos
or
mov
or
nop
sti
fdivrl
and
hlt
jle
arpl
push
gs
lcall
loopne
xchg
add
push
sbb
and
fisttpll
cs
jmp
out
jb
cmp
mov
lock
xchg
aam
test
sbb
lahf
sub
addl
xor
movsl
pop
add
fisubs
pop
xor
sub
sbb
repz
hlt
fs
cmp
adc
xchg
add
inc
add
mov
lcall
scas
dec
ss
lods
xchg
jmp
cltd
pusha
fsubrl
jl
dec
aad
dec
aas
jmp
std
test
jge
push
mov
xlat
sbb
mov
rorl
es
xor
rolb
out
sub
fsubs
dec
push
inc
jb
pop
lods
pop
add
stos
pushf
dec
cmpsb
xchg
jmp
lods
push
pop
mov
test
xor
arpl
movb
add
ljmp
or
mov
in
movb
inc
jmp
cwtl
mov
xchg
xchg
and
or
xor
aam
cmp
cltd
cmp
fistpll
out
leave
lods
mov
adc
orl
cmp
pop
xor
pop
in
jno
jp
rcrb
adc
dec
mov
or
sahf
sti
xlat
jl
nop
mov
cmp
push
sbb
int
pop
adc
mov
arpl
mov
stc
pop
cs
imul
cmp
ss
arpl
ss
mov
in
popl
adc
ss
inc
pop
push
loopne
shlb
xorb
or
xor
scas
inc
pusha
mov
or
js
or
inc
mov
fcomps
orb
sbb
shlb
popf
sub
push
push
outsl
loope
sti
paddw
mov
jne
cmpb
neg
jl
or
jl
mov
aaa
ret
sub
mov
gs
xchg
lods
sti
je
inc
and
push
insb
repnz
mov
adc
divl
or
push
ja
or
leave
bound
mov
push
xlat
inc
push
jno
push
into
jl
lret
sub
aas
mov
ljmp
outsl
dec
lret
pop
in
dec
sub
cmp
xchg
push
xlat
bound
lea
das
mov
or
mov
lea
cmp
test
and
pop
cs
cmpsb
pop
inc
lea
inc
or
cmpsb
int
inc
fdivr
dec
and
inc
mov
cltd
and
cwtl
pop
insb
push
jmp
lret
addb
stos
jecxz
cmp
incl
mov
roll
cmp
loop
xor
jl
in
cmpsl
enter
adc
insl
fimuls
adc
in
repz
stc
mov
outsb
push
pop
adc
push
sbb
push
push
pop
sbb
aaa
sub
das
xor
mov
popf
mov
fidivs
mov
add
xorb
push
lret
lret
sub
das
mov
sub
lahf
mov
rclb
call
imul
jae
jg
lahf
repnz
imul
gs
aaa
ja
mov
fmul
mov
addr16
shlb
sti
stos
jno
push
shll
in
mov
add
addr16
test
mov
test
cmp
jp
fcoms
pop
inc
and
add
push
loop
fnstenv
imulb
loop
cmp
out
sub
add
or
jb
in
pop
nop
lds
pop
shrb
outsb
xchg
sbb
adc
pop
aam
rolb
jo
jmp
xchg
mov
cmpb
mov
test
add
js
icebp
insl
movsb
imul
sbb
mov
in
push
adcb
sub
pop
mov
test
cmc
outsb
orb
jb
sbb
push
mov
fidivs
push
pop
cwtl
sbb
aad
xor
movsb
push
clc
cmp
imul
leave
jbe
in
cmp
into
jbe
ret
cli
inc
incb
pop
inc
sbb
int
sti
out
mov
cmpsb
xor
aas
mov
sbb
push
mov
jp
ljmp
jecxz
nop
pop
pushf
pop
cmp
cmc
mov
lahf
push
lret
cmp
adc
inc
pop
or
sbb
add
fwait
jmp
fidivl
dec
xor
mov
mov
shrb
addr16
inc
fnsave
xchg
jb
cmp
sarb
xchg
cli
cmpsb
dec
mov
add
fs
rcl
jle
cmp
mov
into
lret
in
into
test
pop
lods
mov
jge
loope
mov
or
dec
int3
lcall
pusha
xor
lock
out
mov
test
push
pusha
mov
push
jns
stos
into
call
xchg
adc
dec
dec
inc
lds
jns
loopne
adc
pop
xchg
jle
jb
adc
sti
pop
je
pop
cmc
std
inc
das
test
cmp
or
das
mov
mov
add
xchg
fs
fidivrs
nop
dec
jl
sbb
jle
xor
add
adc
sbb
jmp
enter
add
dec
pop
inc
lahf
fldenv
in
jge
stos
shlb
pop
push
lods
push
rcrb
pop
fwait
mov
in
cli
mov
sub
mov
shrl
cmpsl
pop
push
push
pushf
add
push
ficoml
andb
hlt
or
fbld
orl
jp
push
in
jo
dec
mov
jns
mov
in
jmp
in
loopne
iret
add
imul
and
dec
ljmp
sub
pop
std
add
jge
insl
dec
fisttpll
sub
xchg
lods
or
lea
daa
add
push
ror
cmp
or
outsl
xchg
pop
negb
iret
enter
add
mov
jmp
test
jns
jge
mov
and
outsb
and
in
cmc
test
or
lea
out
daa
xor
and
inc
je
movsl
into
fucom
push
mov
mov
pop
out
test
popf
inc
cmc
orb
fnstsw
cmp
lods
loop
and
pop
fsub
sub
mov
fstpl
cmpsb
push
loopne
nop
add
mov
js
pop
movsb
pop
push
jno
fcoml
lea
pop
pop
int3
inc
and
imul
dec
lods
push
jb
jo
lret
xor
bound
xchg
nop
dec
aas
mov
cmp
fs
jl
lea
dec
cwtl
shlb
inc
xchg
mov
out
repz
fimuls
movsb
mov
add
lahf
mov
push
mov
jl
std
xor
cmc
cmc
fwait
xchg
xchg
sub
aas
scas
push
pop
mov
dec
adc
clc
adcb
fistl
mov
test
pop
sub
mov
ret
mov
addb
scas
inc
mov
cmpsl
cmp
push
nop
adc
push
xchg
out
or
call
fs
push
enter
mov
popw
fadds
frstors
aad
andb
pop
test
xor
loopne
mov
push
or
loop
cmp
ss
test
mov
inc
call
sar
dec
aaa
mov
ss
push
stos
xchg
je
adc
aam
adc
loope
dec
ret
ljmp
or
and
popa
push
roll
xchg
jmp
nop
or
mov
fwait
addr16
push
jecxz
dec
icebp
ret
out
ds
push
fcompl
mov
push
adc
xchg
add
push
mov
mov
shll
aas
hlt
adc
jp
xor
mov
inc
cmpsb
icebp
stos
test
and
inc
adc
sti
enter
lcall
int
shrb
movsl
lret
cmp
enter
repz
push
nop
out
lahf
or
push
mov
jg
sbb
sahf
xchg
fisubrs
aas
push
push
call
mov
leave
jne
mov
std
ret
fwait
mov
pop
cs
loope
leave
fisttpl
or
jg
call
jecxz
jnp
jp
xor
stos
in
fsubrs
lods
out
ret
fdivrs
and
jb
out
and
push
daa
inc
jge
mov
test
push
push
lods
arpl
cmp
andb
and
cmpl
xchg
out
dec
pop
dec
inc
push
push
sbb
dec
push
scas
int
mov
clc
sub
inc
aas
pop
add
lods
mov
xor
subl
and
negb
fdivs
ljmp
in
push
sbb
xchg
imul
push
or
sbb
and
cmp
xchg
cmc
popf
jle
push
jmp
inc
sarb
icebp
ja
xchg
js
popf
pushf
inc
pop
imul
or
cmp
push
out
jg
outsl
push
lea
pop
pushf
call
lret
and
fwait
jge
mov
xor
mov
lahf
cmp
add
out
sub
lahf
daa
push
int3
addr16
cmp
insb
notb
lods
lea
mov
mov
adc
mov
rcrb
jno
ljmp
cmpsl
bound
movsl
push
pop
adc
xchg
pop
decl
jle
mov
jb
mov
fptan
jp
inc
insl
push
inc
in
adc
fwait
enter
and
stos
es
jecxz
jl
or
pushf
cmp
push
mov
mov
data16
sub
lcall
mov
jmp
xor
sahf
and
and
repnz
jno
xor
push
or
pushl
fildl
je
scas
mov
xor
dec
js
jecxz
scas
dec
inc
mov
leave
inc
sbb
cmpb
rcll
in
das
mov
pop
xchg
aaa
aad
mov
sub
adc
mov
cmp
cmp
cmp
sbb
push
push
nop
push
push
fiadds
xorb
jle
dec
imul
outsb
cs
movsb
push
aam
int
push
xor
dec
sbb
enter
aas
push
loop
js
adc
stos
out
adc
jne
insl
insb
or
push
mov
sarb
je
lahf
push
repz
movsl
sti
pop
jns
pop
pop
cmpb
pop
dec
push
int3
std
adc
add
in
adc
lret
in
mov
mov
xchg
mov
xor
sbb
cmp
xchg
push
and
mov
out
arpl
jmp
sbb
xor
aad
xlat
lret
or
daa
mov
mov
stos
movsb
mov
out
enter
ficoml
mov
sbb
xor
inc
adc
cltd
das
mov
out
jg
ror
push
or
lods
mov
mov
test
mov
push
adcb
mov
mov
fnsave
dec
test
scas
insl
mov
xor
jno
and
in
and
call
push
aaa
sbbl
sbb
pop
xchg
cmp
dec
mov
sbb
into
fnsave
in
icebp
je
movsb
leave
ficoml
js
in
ljmp
lahf
pop
cs
mov
cmp
pop
inc
jnp
or
stos
das
cmp
enter
xchg
rcrb
adcl
jae
mov
into
imul
dec
xchg
add
xchg
lret
ss
daa
add
dec
xor
cli
xor
es
xor
push
sub
aaa
leave
pop
cld
and
cmp
cmp
mov
call
test
movsl
inc
std
push
jne
fsubrs
sub
xchg
and
xor
pop
lret
cmp
pop
sbb
inc
mov
jmp
xlat
pop
hlt
push
adc
sub
mov
jnp
mov
push
scas
or
inc
and
sub
adc
stos
scas
dec
cmp
add
and
outsb
xchg
rclb
lcall
pop
jl
mov
cmp
pusha
divb
lds
fwait
adc
add
rolb
rcrb
mov
data16
mov
pop
lods
push
testb
push
mov
enter
cmpsb
jb
pushf
repz
and
adc
cld
mov
sbb
adc
jge
and
lret
lock
or
aaa
ret
sahf
fnstenv
push
jp
dec
inc
push
sahf
push
loopne
add
lcall
sbb
std
cmp
mov
jae
add
push
sub
jo
push
scas
fnstsw
mov
pop
loopne
adc
add
sti
or
jae
or
call
sbb
insb
dec
push
cld
and
mov
mov
push
repnz
jl
mov
pop
xchg
xchg
pop
std
dec
add
push
sub
and
fisubl
cwtl
repz
stos
xor
popf
pop
in
outsb
dec
je
ds
fmull
outsl
dec
jnp
xchg
sub
adc
das
push
xlat
mov
adc
div
inc
xor
outsl
mov
add
shrb
enter
add
nop
jle
in
mov
xchg
inc
and
inc
mov
outsl
mov
push
sbb
push
push
scas
pop
mov
cmc
lret
fimull
aas
mov
jb
sbb
dec
dec
pop
loop
fcompl
hlt
xchg
jne
inc
enter
jne
add
mov
mov
xlat
fimull
push
mov
dec
push
ficomps
add
pop
dec
mov
sub
sbb
cmpsb
sub
div
jbe
rcl
pop
daa
or
shrb
add
adc
cmp
xor
fwait
jl
int3
dec
xlat
mov
mov
and
mov
push
jbe
or
and
mov
pop
movsl
bnd
jb
jno
stos
mov
push
std
mov
pop
xchg
push
test
or
pop
sbb
lahf
sbb
cmpsb
pop
cmp
pop
mov
int3
or
mov
fsubs
add
pop
adc
outsl
lods
insl
shrd
sbb
inc
out
jno
outsb
fmull
mov
lock
jecxz
jge
push
jbe
cs
inc
sub
sti
rorl
mov
xchg
xchg
test
and
dec
mov
push
and
das
movb
cli
mov
sbb
movsl
out
add
mov
das
jle
mov
cwtl
fwait
mov
mov
shrb
dec
pop
aam
aas
add
cmpsb
mov
xchg
xchg
mov
lahf
cwtl
mov
adc
loope
jne
mov
adc
jns
pop
xchg
mov
pop
adc
sahf
xchg
cltd
sub
and
test
inc
lret
adc
cld
dec
daa
pop
inc
loop
add
sub
out
je
or
adc
cmp
dec
mov
shll
xorb
pop
and
push
jmp
xchg
int3
jl
imul
xchg
add
mov
jns
add
dec
and
icebp
jne
jnp
cmp
push
and
cmp
repnz
scas
popa
mov
xor
mov
mov
sar
scas
ljmp
mov
nop
shrl
dec
fwait
mov
mov
call
int
sbb
in
rorb
or
adc
aam
stos
jle
scas
xor
int
mov
xchg
andl
dec
cmpsb
pop
xchg
in
sbb
sti
imul
fists
sbb
push
loop
push
sbb
jno
imul
adc
or
stos
sub
mov
imul
push
loopne
movsb
xchg
pop
mov
push
outsb
jb
mov
or
xor
pop
shr
shll
jmp
jae
xchg
cmp
notb
js
xchg
jno
aad
movb
imul
jae
add
jl
mov
dec
jbe
lock
dec
dec
addr16
push
mov
jmp
icebp
cltd
push
adc
lret
ss
fcoms
popa
in
or
mov
test
test
or
rcrb
rorl
shll
rorl
aas
add
cli
pop
add
pop
loopne
sbb
mov
push
in
or
es
movsb
mov
stos
pop
stos
xlat
mov
inc
ljmp
movsl
and
and
mov
lret
xchg
sbb
clc
lcall
xchg
mov
ret
mov
aas
pop
mov
pop
js
push
movsb
mov
xlat
stos
xlat
push
int
inc
imul
xchg
dec
dec
lock
ds
jecxz
pop
and
pop
cmpsb
mov
push
or
je
jne
inc
xor
mov
rorb
ja
fucomp
push
sahf
dec
iret
inc
loope
inc
cmp
fucomip
dec
cmp
jns
ret
and
loope
cmp
mov
pop
loopne
stc
or
dec
push
mov
xorl
cmp
push
bnd
push
cltd
sbb
fsubrl
mov
push
mov
jo
push
fldcw
and
push
or
je
outsl
mov
addr16
movsb
mov
and
arpl
jb
hlt
add
mov
lods
mov
inc
in
sbb
or
hlt
xchg
outsl
mov
mov
gs
shrb
jo
nop
cld
lcall
mov
loope
xor
sub
pusha
imul
adc
jbe
in
push
insl
lcall
push
cmp
ficoml
jecxz
js
daa
popf
mov
push
stc
stos
pop
pop
xchg
sbb
push
and
jl
push
imul
rolb
sub
inc
push
mov
xchg
cmp
pushf
mov
fildll
pusha
ss
dec
xchg
push
sub
cmp
cmp
notl
leave
or
or
adc
mov
adc
imul
test
sub
pop
jp
jmp
test
add
push
xor
sub
mov
or
sub
and
sbb
xor
cmp
mov
sub
cwtl
movb
sub
fisubs
je
push
jnp
orl
imulb
cld
xor
cmp
mov
insb
push
fadds
pop
jae
xchg
adc
ja
xchg
lods
es
frstor
aas
and
loope
mov
sub
xchg
clc
movsb
mov
adcb
xchg
into
rorb
push
scas
out
push
mov
lods
das
sub
in
xor
dec
loop
push
cmp
js
loope
mov
repnz
lahf
or
in
shl
or
test
lock
lock
cmp
les
cltd
outsl
xor
mov
fidivrs
pushw
sub
push
mov
movsb
js
xor
or
xorl
cmp
mov
aas
fwait
ljmp
mov
in
imul
dec
xchg
lcall
jp
pop
test
je
mov
lods
call
dec
jb
dec
adc
mov
in
inc
aam
lods
enter
in
pop
or
adc
clc
sbb
push
xlat
mov
leave
cmp
mov
cmp
add
cmp
les
repz
or
aas
push
lods
mov
pop
add
stc
in
lret
push
xor
movsl
dec
outsl
cmp
nop
mov
mov
test
pop
inc
rclb
mov
imul
adc
fdivrp
lock
es
repz
push
jmp
rolb
xchg
push
cmp
xor
in
dec
ret
sti
push
push
pop
xlat
mov
xlat
cmpsb
cmpsl
bound
pop
pop
arpl
lret
cmp
push
mov
adc
sub
lcall
flds
aas
arpl
xor
mov
fdivl
testl
cmpsb
adc
xchg
and
or
popf
cmp
repz
les
dec
xchg
mov
xchg
cld
mov
outsb
vmovss
xor
mov
cmc
lea
mov
movsl
lds
pop
lret
out
movsl
push
mov
lea
ss
pushf
outsb
dec
div
in
ds
jo
in
outsb
enter
jle
inc
pop
dec
sbb
icebp
xlat
xor
rorb
lods
in
pop
vpcmpgtb
pop
sbb
ljmp
ljmp
push
into
jnp
jnp
jl
or
cs
mov
push
aaa
mov
pop
pop
adc
push
inc
and
das
bound
adc
xchg
xchg
test
scas
dec
push
and
jg
sahf
bound
mov
sti
out
xchg
mov
ja
aad
mov
xor
mov
gs
movaps
inc
mov
cmp
fwait
pop
sub
sbb
data16
cs
icebp
mov
xchg
jecxz
add
jnp
mov
das
or
sti
xor
adc
mov
cmp
jno
ror
cmp
enter
jecxz
pop
cmpl
and
or
jo
movsl
xor
sbb
scas
mov
mov
sbb
loop
dec
and
cmp
and
sbb
xchg
dec
add
mov
icebp
push
adc
mov
aas
shll
jne
enter
cmpsl
and
aam
mov
fidivl
pop
movsb
lret
into
and
subb
mov
popa
jae
test
pop
adc
sbb
jge
cmp
inc
cs
push
sahf
push
inc
lahf
fwait
jno
jb
mov
mov
add
sub
dec
lcall
mov
adc
popa
mov
mov
adc
xchg
pop
xorb
jbe
jle
cltd
dec
push
cs
mov
je
es
pushf
push
adc
mulb
out
dec
push
aam
sub
scas
out
arpl
pop
test
cmp
xor
lock
and
sbb
stc
adc
dec
pop
aaa
es
insb
aas
gs
pusha
adc
jecxz
cli
out
mov
pop
push
sub
out
imul
test
outsl
xchg
cmpsb
jbe
lahf
or
xchg
cmpsb
push
sbb
enter
lods
xlat
cmp
inc
stos
leave
mov
jle
mov
sbb
aaa
out
mov
dec
pop
add
jbe
in
cltd
xchg
xor
cmp
xor
xor
rclb
je
xchg
pop
and
jle
lods
lds
in
xor
xor
pop
xor
fsubp
push
ret
inc
popa
mov
or
dec
fidivs
or
mov
bound
sbb
pop
mov
pop
sahf
cmp
insb
fiaddl
xor
cltd
pusha
sahf
jmp
sub
fwait
inc
mov
pop
dec
inc
push
fsub
adc
xchg
xchg
sbb
imul
inc
rcrl
std
aaa
jmp
mov
icebp
xchg
movsb
outsl
pop
mov
xchg
sbb
call
call
je
jns
pop
inc
scas
div
pop
and
pop
loope
push
push
cltd
lea
xchg
dec
xchg
dec
inc
gs
push
pop
push
cmpsb
out
push
fs
dec
push
jp
mov
in
cs
test
lea
scas
pushf
mov
ret
fnstenv
aam
out
inc
cwtl
pop
push
lods
sub
cmpsl
push
or
imul
xor
dec
fcoms
xchg
mov
push
mov
sbb
negl
dec
jo
js
pop
push
sub
mov
jp
sbb
std
stc
and
or
push
mov
push
sbb
test
testb
pop
jb
aam
in
insb
or
jno
or
mov
stos
data16
lods
ljmp
and
xchg
inc
mov
cmp
sbb
jmp
push
xchg
and
sub
int
push
mov
out
mov
aam
hlt
punpckhbw
adc
loop
push
movsl
lahf
xchg
pop
sub
mov
jp
sbb
stos
xor
xor
inc
ret
orb
add
jp
xchg
pop
jp
repz
fisttpll
push
hlt
jb
cli
jecxz
loopne
pop
xor
loopne
push
pop
sub
stc
dec
bound
dec
fs
insb
jmp
lcall
jb,pt
mov
mov
fdivs
movl
and
mov
into
push
popf
dec
xchg
push
andl
push
sarb
enter
dec
lret
lds
xor
push
test
mov
adc
and
sbb
jmp
outsl
ljmp
add
pop
cltd
and
mov
js
sbb
cmp
pop
imulb
jp
mov
dec
fcompl
inc
cmp
and
jecxz
fcoml
in
mov
mov
cld
cmp
push
mov
add
pop
push
sti
xchg
jg
cltd
sbb
mov
test
pop
testb
or
ljmp
cmp
addr16
repnz
je
outsb
mov
cltd
add
mov
movsl
add
sbb
sbb
cli
data16
outsl
xchg
pop
in
pop
dec
xchg
add
push
leave
nop
cmp
inc
insl
leave
xor
xchg
outsl
pushf
lds
inc
sub
clc
cmpsl
and
lret
xorb
and
addr16
in
jbe
les
aaa
xlat
popa
xchg
add
pop
cmp
movsl
sarb
nop
dec
mov
gs
popa
mov
dec
psubsw
xor
in
shl
mov
lcall
jge
in
popa
shrl
sub
into
mov
cmc
int3
je
pop
mov
inc
cmpsb
shll
shll
pop
mov
rcrl
stos
vunpcklps
or
loopne
lds
mov
dec
mov
hlt
or
js
add
pop
xchg
lret
and
cmc
pop
test
pop
fs
out
js
ss
loop
pop
iret
std
out
or
stos
sbb
loopne
hlt
lods
inc
das
push
test
mov
xchg
push
sub
mov
lea
cmp
add
mov
mov
push
and
bound
js
rorl
and
mov
aad
ret
js
cs
sub
test
scas
push
mov
in
push
cld
sbb
in
bound
xchg
jmp
in
sub
mov
or
stos
enter
jae
adc
inc
idivb
xchg
jns
mov
pop
mov
sti
cmp
pop
out
iret
addr16
mov
push
mov
pop
mov
xchg
lret
pop
adcb
xor
shll
inc
cltd
daa
test
call
jb
es
mov
xchg
cmpsl
push
out
or
xor
and
lret
push
sbb
or
inc
mov
fs
into
sbb
mov
jg
adc
mov
sbb
and
lcall
cmpsb
or
xchg
cmpsl
lods
jmp
adc
add
mov
jg
pop
lods
iret
push
mull
rep
sub
pop
pushl
ret
adc
mov
enter
mov
jge
push
jnp
mov
ret
ljmp
push
dec
xchg
jg
out
push
xchg
int
insb
or
adc
sub
adc
lea
sbb
lret
adc
sbb
xor
dec
rcrb
adc
push
sahf
or
and
test
jmp
mov
and
mov
sbb
cli
jnp
sub
mov
subl
scas
cmc
xor
add
mov
push
mov
push
cmp
sbb
adc
or
jb
imul
nop
cltd
rcrl
sahf
stos
fmul
loopne
cmp
or
inc
arpl
inc
push
push
mov
in
xchg
fsubr
jle
out
mov
push
cmpsb
stc
loope
mov
jnp
lret
push
js
leave
jge
xor
xchg
cli
imul
imul
jmp
lods
ljmp
fcoml
jae
pop
aad
leave
cmp
inc
push
fs
xchg
mov
out
test
ljmp
or
xchg
mov
cmp
lret
add
daa
imul
in
call
pop
movsb
in
mov
cmp
mov
dec
mov
lods
mov
loope
jle
std
inc
daa
mov
add
iret
ss
cli
mov
js
mov
addr16
data16
sub
xor
mov
subl
or
pop
into
adc
lret
push
das
outsb
bound
and
int
mov
inc
fdiv
arpl
jp
ljmp
ret
cmc
int3
push
sahf
sbb
cmc
cmpxchg
add
fsubrs
add
scas
outsb
out
repz
shll
ss
mov
lahf
ljmp
popf
movsb
mov
nop
push
shlb
ret
bound
repz
cltd
push
sbb
gs
pop
dec
ja
sub
mov
out
popf
jns
adc
popa
enter
insb
fsubs
test
pusha
mov
cld
scas
or
movsb
mov
push
lock
dec
xor
adc
pop
push
mov
mov
xchg
pop
dec
enter
imull
insb
rcrl
js
dec
cmp
aad
das
push
outsb
jle
iret
dec
adc
or
mov
rcr
int
call
mov
push
out
dec
mov
shll
pop
dec
sbb
rorb
hlt
sbb
lret
hlt
mov
pop
cmp
mov
leave
push
js
sti
pop
aad
inc
loopne
clc
lods
cmp
insb
push
push
inc
in
fdivrp
inc
test
nop
dec
mov
cmp
out
sbb
cmp
sub
fs
sub
loopne
fldl
out
push
addr16
pop
out
lods
jmp
and
xor
mov
cmp
sbb
mov
mov
in
stos
lcall
sbb
xadd
dec
aad
bound
dec
sbb
mov
add
and
fcmovbe
xchg
push
mov
cmc
das
jmp
js
xor
fs
mov
adc
aad
rcll
inc
push
call
add
jb
sub
lods
mov
mov
dec
daa
xlat
stos
xchg
lret
adc
pop
movsl
loope
sub
test
dec
data16
movsb
cli
dec
outsb
movsl
shrb
cs
shrl
mov
cmpl
dec
cmp
jbe
loopne
cmp
mov
or
inc
mov
mov
rolb
jnp
or
cmp
rclb
sub
cmp
lock
pop
testl
dec
outsl
fisubrl
outsl
mov
fmuls
clc
push
jne
jl
dec
jno
aas
mov
aam
inc
push
adc
push
cmp
jne
call
xchg
mov
jns
mov
bound
jno
les
fdivrl
cli
xchg
cs
out
pop
sub
adc
lods
pop
iret
push
pop
jne
rcrl
rol
leave
mov
sub
dec
jmp
movsl
xchg
mov
imul
sub
jae
std
pop
lahf
mov
fwait
inc
mov
or
cwtl
out
in
cwtl
mov
cmpb
xchg
loopne
add
jae
pop
sbb
mov
mov
xorl
mov
cli
jl
xchg
pop
enter
and
sarb
das
and
lock
adc
aam
inc
cmp
inc
xor
fsubrs
popa
xor
mov
jle
and
jbe
xor
push
icebp
cltd
sub
xchg
fnstcw
fs
xchg
mov
das
roll
inc
pop
stc
jge
arpl
repnz
or
mov
push
mov
aas
add
lret
cmp
mov
sbb
sub
dec
jp
jg
push
sbb
lret
push
sub
push
hlt
mov
fwait
jne,pt
sbb
cmp
gs
out
icebp
add
xlat
out
or
mov
cmp
mov
aad
test
jno
push
push
dec
push
hlt
add
mov
rcrl
add
les
mov
out
scas
imull
mov
adc
xchg
data16
fucomi
pop
cmp
and
mov
daa
dec
pop
or
jmp
lahf
fs
cmp
cmp
lcall
leave
imul
das
fwait
ret
inc
pop
fdivrl
push
in
jp
mov
les
add
leave
add
lcall
adc
enter
pop
mov
and
iret
jb
rcll
daa
inc
data16
adcb
sub
adc
pushl
cwtl
add
jg
pusha
and
outsl
int3
lods
jmp
dec
jge
xchg
xor
jg
inc
frstor
bound
adc
xchg
and
mov
or
dec
mov
aad
pop
mov
fidivl
or
scas
and
sbb
sti
xor
cmp
sub
dec
push
mov
roll
sbb
xchg
sub
sbb
sbb
push
insb
sbb
and
xchg
outsl
loop
pop
out
fldt
adc
ljmp
mov
imul
pop
mov
push
rcl
incb
inc
dec
cld
insl
ja
test
call
sti
mov
mov
pushf
fs
ret
fistl
fdivr
test
or
and
or
xlat
pusha
xchg
in
subb
and
adc
insb
mov
adc
xor
lret
cli
popf
imul
mov
outsb
sahf
es
in
rcrl
sub
inc
lret
fcmovb
jg
das
js
sub
jge
jge
add
out
sbb
dec
fnstenv
push
cwtl
icebp
outsl
outsl
lret
dec
js
jl
dec
decb
sub
sti
out
jne
cmpsb
iret
ljmp
fwait
stc
push
mov
push
dec
incb
and
lods
sbb
xor
mov
push
jno
dec
insb
dec
test
ror
shrl
stos
scas
jmp
es
ds
xchg
je
cwtl
inc
inc
inc
mov
sbbb
or
loopne
pop
dec
xchg
sbb
sti
pop
pusha
cli
add
or
lds
popf
xchg
imul
inc
mov
shlb
subl
mov
adc
sahf
cmp
leave
push
xlat
cmc
pop
aam
jmp
push
icebp
sub
stos
add
fiadds
scas
push
clc
pushf
fs
adc
fbld
pop
xor
mov
mov
ljmp
data16
inc
mov
flds
xchg
pop
mov
into
dec
mov
jns
mov
nop
inc
rcr
movsl
mov
enter
movsb
pop
movsb
rorl
in
addr16
sbb
arpl
xchg
pop
adc
mov
mov
xchg
cmc
out
in
lds
and
ljmp
imul
cld
imul
ret
fstps
loop
adc
mov
pushf
movsl
mov
repnz
aad
push
push
pop
push
inc
jnp
aam
jle
inc
gs
lods
sub
push
int
popa
inc
rorl
push
lods
fdivp
xchg
pusha
jle
jl
cmc
leave
add
mov
lods
sub
xchg
popf
pop
adc
jb
inc
push
pop
jo
mov
and
xchg
mov
push
xchg
aaa
int
imul
and
jns
loop
gs
or
dec
and
bound
aam
test
imul
aam
sbbb
stc
add
cli
and
mov
mov
lock
sbb
paddsb
or
push
cmp
shrl
rcrb
push
test
sbb
enter
jmp
lret
mov
push
or
push
jge
mov
cmpsb
inc
push
and
mov
jb
out
jne
xchg
mov
test
lret
jbe
dec
loop
bound
pop
push
pop
pop
mov
jmp
pop
mov
or
sti
fisttpl
pop
cmc
mov
mov
sub
pop
mov
cmp
in
or
popf
mov
mull
lahf
xlat
push
in
std
push
aam
mov
cmp
push
mov
cwtl
add
mov
popf
cwtl
and
add
xchg
pusha
fdivs
sti
pushf
jno
dec
std
xorb
hlt
rorb
pop
cs
test
stos
mov
invd
cld
or
into
cltd
jle
push
add
push
cwtl
neg
xor
stc
mov
in
adc
lea
push
push
test
push
sub
nop
dec
fdivl
in
cmpsl
outsl
dec
and
movsb
lcall
jle
aas
in
add
push
outsl
inc
ror
cmpl
dec
xorb
adc
jmp
or
cmp
lods
test
mov
or
jo
and
hlt
xchg
lds
inc
fstpt
push
jmp
addr16
xor
mulb
mov
call
dec
ljmp
out
inc
cmp
mov
lds
fildl
aas
mov
push
fcmovnbe
out
icebp
xchg
adcb
les
add
fs
enter
sar
pop
sbb
mov
or
inc
add
mov
es
or
mov
pop
sbb
int
xor
ja
stc
sub
pop
call
loop
inc
mov
cmp
daa
sub
fcomi
or
or
cltd
outsb
stos
test
push
add
cmp
xchg
in
call
xchg
jo
sub
xor
jge
push
test
lock
jmp
push
int3
mov
xlat
or
lret
cmp
addr16
xchg
lock
push
jbe
jnp
mov
adc
or
sub
jns
imull
mov
test
dec
xor
pusha
std
mov
rcrl
rorl
data16
out
jp
add
jae
imul
int
and
sub
inc
mov
imul
cmp
lea
cmp
and
push
outsb
pop
xchg
xchg
push
add
xor
inc
add
cmp
and
daa
jle
sbb
push
xlat
jnp
rcr
aas
aas
mov
out
pusha
push
pop
sbb
addr16
jne
loop
into
jo
or
out
test
fcoml
mov
mov
out
xor
stos
push
hlt
insl
jbe
push
hlt
lds
sub
loop
out
push
mov
scas
mov
mov
imul
cmpsb
mov
or
dec
fidivl
sbb
inc
orb
jmp
pop
pop
dec
repz
xor
dec
call
aam
das
xor
repnz
or
push
cltd
mov
aas
push
rep
jecxz
leave
lods
fdivl
ljmp
leave
and
push
xchg
lcall
push
mov
inc
lret
popa
sti
fisubl
and
xchg
dec
fcomip
out
dec
mov
mov
insl
jbe
push
mov
xchg
sub
int
fsubrl
scas
sub
gs
test
add
dec
push
fmull
flds
jge
xlat
mov
cs
mov
mov
sbb
dec
adc
xchg
out
repz
or
push
or
push
and
mov
shlb
adc
mov
cwtl
xor
jge
repz
sbb
andl
pop
out
in
insl
stos
pop
jno
adc
dec
sbb
lret
sub
mov
push
insb
stc
push
jne
push
add
in
push
pop
cmpsb
pop
and
push
out
imul
shrb
jge
loope
negb
cmp
push
loop
mov
xlat
xor
lret
ret
dec
jecxz
xor
scas
imulb
sub
loop
mov
pop
and
into
cli
mov
lods
clc
jmp
mov
adc
in
mov
sub
adc
pushf
loope
or
inc
cmpl
dec
mov
and
cmpl
push
mov
jle
push
mov
test
in
lcall
pop
outsb
mov
decl
push
insl
lret
repnz
into
inc
cld
pop
or
outsl
mov
jne
mov
adc
or
jmp
cs
aas
lock
lds
test
mov
rolb
fildl
mov
xor
mov
aaa
push
cs
lret
mov
pop
out
mov
aam
es
fxam
fs
mov
push
mov
out
int3
iret
fidivrs
jae
loop
sti
out
cmc
adc
dec
sub
xchg
neg
aaa
cwtl
lods
out
movsl
pusha
lret
lea
rorb
sbb
jg
pop
lock
mov
stc
std
xchg
mov
mov
dec
push
je
cmp
loopne
add
mov
inc
add
fstl
push
cmpsb
ds
je
push
dec
inc
cmp
or
out
das
cmp
pop
inc
mov
cmp
scas
mov
lods
jmp
mov
sub
ret
ja
jl
fisubs
mov
xchg
rolb
jge
sbb
jmp
leave
push
fisubl
fmull
inc
imull
repnz
scas
jb
andb
inc
dec
jae
xchg
lret
jp
cmc
jbe
int3
addr16
adc
outsl
cld
dec
adc
sti
in
sti
xor
outsb
cmp
ffree
or
push
aam
xor
fucomip
std
hlt
pushf
mov
pop
stos
ja
mov
jl
repz
out
adc
jb
cmc
data16
xor
mov
icebp
insl
xor
repz
or
sbb
call
in
dec
mov
xchg
in
add
out
enter
data16
mov
sahf
xor
adc
leave
mov
fistps
jae
jbe
xor
mov
int3
fdivr
jns
rol
push
popa
ret
mov
sbb
inc
add
in
fsubs
and
in
dec
subl
imull
dec
cmc
ljmp
jge
scas
pop
outsb
scas
clc
xor
jle
dec
cmpsl
push
repnz
push
fldenv
popa
mov
sbb
add
aam
movsl
jnp
loopne
cmp
subb
adc
gs
jb
and
jecxz
or
pop
daa
mov
sbb
ds
insl
and
enter
arpl
cmpsl
mov
cmp
popf
push
rcrb
jb
and
fwait
inc
add
mov
movsl
std
add
inc
aad
adc
lcall
dec
daa
js
or
mov
fiadds
or
iret
data16
hlt
pop
pop
lds
mov
cmpb
sbb
dec
or
bound
push
mov
nop
popfw
arpl
mov
outsl
jns
and
fildl
fstpl
into
lock
je
in
xor
jns
pusha
pop
xor
xor
lahf
sahf
xchg
sbb
inc
xor
jne
pop
xor
fldenv
jbe
mov
add
mov
and
inc
insl
dec
push
mov
mov
pop
push
test
pop
sub
pop
imul
fstpt
in
inc
or
push
mov
jp
fmull
pop
andl
sub
imul
xor
xchg
sub
outsl
jle
adc
push
out
pop
mov
sbb
jns
xor
outsb
pusha
sub
test
dec
xor
xchg
lods
dec
push
mov
push
cmp
xor
push
test
ljmp
mov
add
das
or
xlat
rolb
pusha
xchg
fwait
test
cmp
mov
test
out
fiadds
and
fcmovnb
fists
stc
popa
iret
rcll
rcl
mov
xor
sbb
inc
enter
mov
arpl
mov
fs
in
sti
push
inc
mov
sub
cmp
pop
add
pushf
int
aad
fldt
arpl
std
and
fisubrs
push
int
or
sub
adc
js
cs
lea
stos
xchg
in
pop
pmulhuw
fmuls
dec
imul
dec
je
gs
and
test
dec
popa
sbb
push
adc
cmp
and
pop
loop
dec
fimull
mov
sahf
test
and
mov
inc
ret
scas
loope
jbe
mov
mov
bound
iret
cmpsl
push
pop
outsb
fcmove
jmp
testb
arpl
sub
pop
xor
inc
outsb
or
rolb
arpl
mov
jnp
jb
jp
add
add
mov
mov
add
jo
push
xchg
stos
gs
jmp
shrb
and
push
cmp
push
xor
loopne
jae
sbb
cs
das
mov
inc
fldl
fldenv
testb
pop
rolb
mov
std
int
mov
xor
loop
sti
ds
icebp
das
jnp
sahf
in
adc
jbe
fsubs
fucomip
push
bound
mov
push
jno
inc
mov
data16
mov
ljmp
inc
cs
add
pushf
shll
inc
pop
cmp
adc
xor
aam
mov
test
bound
push
xor
xlat
or
lock
dec
push
pop
fwait
addr16
data16
rcrb
fs
clc
cmp
test
push
dec
sub
lahf
mov
and
mov
mov
lret
jl
cmp
loop
ficomps
jbe
adc
aaa
enter
mov
push
dec
adc
ficoms
mov
movsl
add
imul
jnp
pop
addr16
jb
xchg
outsl
inc
out
or
stos
jp
stos
out
test
inc
ds
cmc
adc
sbbl
rclb
pushf
popa
imul
dec
push
mov
mov
mov
mov
icebp
push
cmp
movq
add
push
or
lret
add
lahf
cmp
xor
loop
push
add
stos
lcall
dec
ficoms
sub
stos
push
les
adc
out
fnstsw
arpl
sub
jo
inc
subl
or
mov
outsl
das
call
add
movsb
aam
ljmp
adc
xchg
test
repnz
aaa
test
sbb
gs
pop
iret
fs
cmp
fs
xchg
mov
int3
ljmp
mov
dec
ja
jbe
mov
mov
aaa
movd
add
aam
testb
clc
adc
dec
fbld
xor
adc
pop
mov
or
testl
cmpsl
mov
add
cmp
xor
or
push
shlb
dec
sub
xchg
lret
xlat
sbb
xchg
xchg
stc
pop
pop
sub
fwait
or
lds
fnstcw
scas
or
sbb
or
jbe
insl
add
test
sub
adc
push
call
fdivs
xor
add
into
ret
sub
add
dec
xor
imul
adc
xor
movsl
int3
push
sub
std
cmpsl
push
pop
pop
push
adc
or
inc
aaa
mov
mov
push
xor
cmpsl
into
push
lret
shll
jno
lcall
repnz
rcrb
mov
dec
or
mov
inc
stos
into
and
push
out
rolb
jmp
das
fnstenv
pop
pop
lods
push
lcall
std
aas
jb
jnp
jae
push
insb
cld
or
lret
adc
cmp
mov
insl
push
and
pop
push
insl
lock
sbb
pop
mov
sub
scas
pop
inc
and
dec
int3
mov
pop
pop
sbb
inc
gs
sbb
push
insl
iret
pop
inc
sub
add
out
jecxz
sbb
aaa
stos
je
iret
int3
pop
sub
xchg
mov
mov
jo
mov
push
adc
dec
xor
hlt
sub
cmpsl
inc
push
stos
jle
and
iret
addr16
sbb
mov
outsb
adc
dec
push
cmp
jo
fs
shll
or
pop
cmp
cs
cwtl
ss
rolb
aaa
and
out
push
cmpsb
sbb
ljmp
jecxz
movb
adc
cltd
adc
add
lret
in
sub
sub
mov
ja
add
jo
subb
stos
fisubl
notl
dec
aas
ret
dec
cmp
jp
mov
testl
pop
cltd
inc
lods
loop
or
test
pop
cs
data16
idiv
cmp
decl
xor
lret
dec
jbe
add
fdivrl
mov
mov
in
xor
jbe
push
xchg
mov
sbb
das
test
test
rcrl
repz
jo
pop
inc
mov
prefetch
or
ja
loope
inc
shll
and
and
adc
lahf
sub
push
mov
inc
push
xchg
cs
pop
push
fidivl
dec
pusha
xor
inc
pop
mov
ss
divb
mov
repnz
bnd
int3
pushf
loope
fnstsw
mov
ret
int3
mov
adc
call
mov
mov
dec
cmp
ja
xchg
in
xor
dec
into
push
out
cmp
jl
xchg
cmp
sub
or
mov
jle
mov
loop
mov
aam
fs
js
idivb
pop
andl
add
mov
inc
test
mov
xchg
movsb
pusha
lock
cli
faddl
xor
in
jbe
cmp
jg
fidivl
inc
xor
pop
sbb
mov
fsubp
pop
outsl
mov
pop
fcmovnu
mov
dec
xor
ret
jle
out
loope
call
jo,pn
inc
xchg
pop
mov
incb
inc
aad
scas
inc
cmp
sbb
fwait
test
adc
fisttps
mov
xchg
fistpll
je
xor
jl
mov
inc
push
or
xchg
sbb
es
mov
pop
cmp
aaa
sbb
in
iret
arpl
adc
inc
jbe
push
jmp
inc
into
rorb
xor
pusha
int
insb
or
rcrb
imulb
fmull
jg
dec
cmp
das
movsb
pop
xor
push
dec
fnstenv
mov
mov
sbb
sub
lds
sarb
dec
sub
in
sub
leave
rcrb
mov
push
add
les
outsl
pop
fisubrl
lret
lods
into
data16
sub
xor
fisttpll
adcb
pop
jns
out
movl
fists
stc
les
mov
sbb
jae
pushf
adc
in
add
shl
mov
dec
mov
add
imul
fwait
and
pop
xchg
add
mov
mov
cmp
jg
dec
ljmp
repz
sti
scas
lods
mov
jle
sub
xchg
nop
push
pop
inc
jb
xor
test
jnp
scas
orb
fimull
fistpll
int
js
mov
xor
dec
dec
sub
negb
xlat
pop
mov
das
jb
jp
out
jo
pop
rcrb
mov
cmpsb
jbe
test
stos
sub
dec
lods
loope
movsb
outsb
setnp
sub
jg
outsl
cli
js
ret
ds
test
popf
ja
xor
mov
sub
dec
or
je
mov
fiaddl
sub
jmp
mov
lods
or
xchg
cwtl
dec
ret
jbe
and
arpl
inc
lods
mov
shlb
jl
pop
mov
xor
out
dec
cltd
rolb
jne
jne
gs
movsb
cmp
jge
mov
cwtl
jp
scas
movsb
aaa
cwtl
inc
mov
mov
and
jns
inc
sub
cmp
or
jns
sbb
call
mov
jnp
out
mov
mov
iret
imulb
jb
mov
add
push
lods
jecxz
imul
adc
xor
and
xor
ret
jo
jne
ficoms
nop
pop
icebp
in
mov
shlb
fildl
add
xor
xor
and
mov
into
jne
xchg
je
pop
fcoms
dec
xchg
cmp
dec
inc
pop
leave
xor
es
sti
fstl
add
jo
jg
insl
cld
jl
das
ret
lcall
pop
sbb
enter
sbb
push
jmp
fcom
lods
sub
test
jle
aaa
cmp
pop
push
pop
mov
iret
ret
adc
rcl
fcom
neg
xor
xor
jg
xchg
into
jnp
fisubrs
gs
mov
or
call
pop
pop
mov
mov
cmp
xchg
iret
lea
das
je
push
movlps
mov
jne
rcrb
add
mov
xor
mov
xlat
outsb
fcoml
jecxz
jge
in
mov
inc
dec
mov
pop
inc
test
push
int
dec
or
hlt
jp
and
xor
enter
int3
ja
sbb
mov
adc
jbe
jg
daa
sarb
mov
mov
push
jl
cltd
mov
shrb
push
pop
sub
int
push
mov
cmp
fcoms
scas
loope
sub
inc
and
aad
clc
push
xchg
push
ja
xchg
push
pop
in
cmc
or
lock
je
dec
push
sbb
cmpsl
mov
es
test
dec
pop
sub
cli
mov
insb
test
fidivrs
jge
fcoml
imul
mov
sub
xor
adc
scas
pusha
hlt
outsl
pop
cmp
push
out
inc
lahf
pop
jmp
out
lock
dec
push
in
movb
dec
cmp
sub
xchg
sbb
push
push
in
xor
out
idiv
xchg
fimull
dec
cli
arpl
jg
fdivrs
paddusb
xor
cmp
loop
or
pop
and
lcall
hlt
mov
jecxz
mov
sbbb
pop
lahf
lret
nop
mov
jns
jecxz
xchg
scas
mov
fcompl
dec
in
dec
add
push
jbe
fisttpll
pop
adc
push
mov
sub
mov
and
push
jmp
out
xchg
xchg
or
lret
push
xchg
xchg
popa
jp
or
pop
pop
mov
pop
lock
lret
adc
ljmp
add
add
and
cmpsl
repnz
inc
push
rsm
test
pop
mov
lahf
pop
dec
mov
push
nop
movsb
mov
jecxz
rcll
add
pushf
cmp
push
mov
mov
arpl
or
imulb
mov
insb
push
insb
jno
in
mov
pcmpgtw
or
jmp
je
lds
popf
outsb
cld
and
das
imul
cmp
mov
insb
push
jbe
mov
inc
lcall
das
jmp
pop
push
repz
pop
lods
imull
pop
insl
lea
popf
stc
mov
mov
xchg
mov
cwtl
les
xorb
mov
mov
or
xchg
fwait
mov
push
mov
pop
jae
stc
xor
loopne
push
and
imul
adc
cmp
cli
sbb
stos
push
enter
test
dec
loopne
mov
push
cwtl
push
mov
cmp
jle
lcall
push
divb
add
movsb
mov
push
xchg
inc
loop
pop
mov
push
cld
jg
lret
push
pop
jae
loope
inc
mov
mov
inc
jl
jl
ljmp
mov
pusha
mov
cmpsb
xor
and
cld
rorb
arpl
jbe
mov
mov
frstor
andl
mov
aam
mov
fadd
fistpl
mov
ror
and
xchg
movsb
sub
mov
lcall
or
pop
cld
xor
test
xchg
xchg
ljmp
and
insl
xchg
push
iret
dec
sti
repz
jle
jge
daa
and
fstl
lcall
push
sub
test
mov
add
dec
pusha
xchg
test
into
inc
es
dec
fcompl
sub
jp
add
movsb
insl
jne
xlat
mov
or
mov
sbb
out
mov
icebp
imul
mov
jecxz
insl
pushf
xchg
es
cmp
lods
repnz
pop
mov
jae
xor
sti
or
mov
ret
xor
out
orl
aas
inc
push
out
cmpsb
ja
jp
dec
mov
dec
clc
mov
mov
sbbb
mov
ud1
fs
dec
out
cld
dec
mov
mov
pop
add
out
data16
sbb
fidivs
xchg
jo,pt
aad
aas
mov
adc
adc
cmpsb
mov
add
cmp
push
mov
in
hlt
jp
xchg
aaa
mov
mov
psubw
mov
movl
pop
test
and
sbb
and
mov
sbb
inc
push
dec
mov
cmp
xor
jae
hlt
aam
rcrb
cmp
push
icebp
mov
aas
jno
pop
and
shlb
aad
cld
dec
push
lret
push
mov
popf
inc
outsl
fmull
add
adc
jmp
nop
sarl
jo
dec
adc
mov
sub
into
jnp
and
stc
loopne
cmp
ds
add
adc
pop
insl
jp
outsl
adc
or
push
adc
scas
push
ror
dec
jns
mov
iret
jmp
jae
jp
sub
adc
pop
in
rol
int3
dec
mov
iret
rolb
jg
mov
lahf
mov
test
cmp
xor
mov
jl
xor
test
cld
ljmp
out
repz
psrlw
sub
sbb
mov
in
es
pop
add
sbb
call
jns
mov
push
ffreep
add
sbb
inc
jp
sub
mov
dec
out
add
jno
outsl
mov
aam
mov
or
ret
fistpll
sub
popf
stos
dec
inc
lret
idivl
mov
push
sbb
inc
fidivrl
push
pop
int
les
cmpsl
inc
sti
xor
mov
xchg
enter
xchg
fwait
cmp
xlat
pop
test
pop
out
inc
or
subl
pop
xor
dec
int3
test
adc
add
decb
xchg
int
ljmp
faddl
add
ja
jno
sbbl
lahf
pop
in
jo
adc
and
cwtl
jo
pop
fisttpl
outsl
mov
inc
pop
pop
jo
push
mov
jb
mov
jae
cmp
testb
inc
add
and
loope
sub
lahf
push
pop
sub
mov
pop
cmp
stc
sbb
addb
cmp
dec
mov
or
into
lods
rcll
sub
mov
dec
int
sub
cmpsb
aam
repz
mov
adc
insl
inc
ja
out
js
cmp
inc
fnstsw
aaa
movsb
dec
mov
sar
shll
hlt
push
fnstsw
in
xor
mov
jo
mov
fldenv
jp
sbb
inc
lahf
xchg
cli
jb
adc
or
sbb
addr16
add
stos
mov
aad
sub
mov
cmp
aam
inc
sti
jns
repnz
mov
dec
out
stos
jmp
out
or
pop
es
jl
xlat
or
fisubrs
pop
pop
push
mov
fidivrs
rolb
mov
mov
xchg
push
jne
xor
or
lcall
dec
push
xor
mov
imul
iret
sub
push
push
dec
add
movsw
cli
sbb
adc
or
jno
lods
push
pop
sar
pop
sbb
mov
add
addr16
fwait
add
imul
mov
cmpb
jp
mov
pop
insl
jbe
shrb
icebp
js
stos
popf
xchg
jl
dec
mov
and
icebp
lret
mov
jecxz
and
dec
add
or
mov
xlat
xchg
xor
aas
test
aaa
adc
in
lcall
and
data16
adc
xor
clc
cmp
jbe
adc
jns
sbb
mov
pusha
shrl
xor
aam
sbb
or
xor
jnp
or
aaa
jmp
out
out
mov
mov
test
sbb
cmp
adc
jo
mov
cli
test
and
push
push
xor
rorb
arpl
mov
cmp
cmpsl
add
lods
not
adc
aam
cmp
jns
xchg
xchg
test
pop
mov
shrl
jp
scas
clc
flds
mov
adc
sbb
ds
dec
jae
xor
cli
add
dec
shlb
adcb
int3
jno
in
inc
jb
mov
cmp
xchg
mov
sub
lret
int
lcall
test
int
das
sub
jno
dec
loop
clc
cwtl
lret
out
and
stos
roll
mov
pop
pop
icebp
pop
lahf
outsb
loopne
nopl
and
movsb
mov
xor
gs
out
ds
lret
mov
loop
in
lods
push
scas
push
pop
cmp
push
hlt
lret
aad
and
daa
jg
fists
cmp
into
sbb
aad
roll
and
jae
dec
cmpsl
fadd
jne
aaa
cmp
and
aad
out
and
sbb
xchg
dec
ret
dec
dec
in
cmp
js
jl,pt
into
jg
repz
loope
xor
shrl
dec
cmpsb
fsubrl
pop
jo
xchg
mov
lods
sub
or
fnsave
aam
sysenter
test
movsb
sub
imul
mov
js
jecxz
jmp
jno
jg
adc
jg
ret
hlt
cwtl
sub
xchg
cld
mov
xchg
icebp
jbe
sub
pushf
sub
mov
sub
lods
call
test
call
cmc
ja
call
jmp
inc
rcl
mov
mov
in
mov
shll
mov
cmpsb
lods
loope
notl
mov
out
sbb
dec
xchg
lret
and
xchg
jb
test
xchg
pop
push
or
push
loop
xor
or
dec
sti
cmp
lret
fdivl
mov
movsb
loope
add
es
sti
cmp
call
mov
pushf
push
jle
mov
adcw
push
in
and
xchg
pop
sbb
xchg
imul
xchg
mov
cmc
xor
xor
jae
movsl
sahf
shll
push
sbb
bound
adc
sahf
ljmp
pop
mov
lods
jecxz
clc
and
cwtl
stos
and
push
dec
loopne
out
and
xchg
jp
cmp
popa
jmp
xor
int3
loop
push
and
stos
push
je
sbb
mov
repz
loop
add
sub
push
aam
shll
loope
ret
lret
dec
sbb
std
adc
rol
int
daa
inc
out
mov
mov
shlb
stos
xchg
push
and
scas
mov
fstl
iret
push
lcall
in
cwtl
cwtl
xchg
jle
lock
aas
push
adc
sbb
pop
sbb
cli
dec
mov
test
sub
inc
mov
mov
jecxz
pop
insb
sub
jo
ljmp
sti
fs
xchg
jne
dec
faddl
xorb
pop
scas
mov
dec
jmp
pop
jl
enter
mov
pushf
dec
jnp
cli
fiadds
sbb
es
pop
mov
ljmp
mov
and
adcb
imul
dec
xchg
outsb
add
xchg
fisubs
lcall
pop
aaa
mov
cli
jg
cmpsl
jnp
or
mov
scas
mov
adc
push
lahf
push
lds
aam
lea
lret
xor
negl
ret
outsb
pop
das
lret
stc
rcrb
cmpb
rcrb
jae
inc
imul
sarl
and
jns
mov
push
jae
cs
inc
fdivs
sub
inc
jns
push
sarl
xlat
cli
xchg
adc
cmp
cwtl
mov
test
notl
inc
lods
call
sbbl
inc
pop
push
imul
test
or
jne
stc
ret
push
xchg
dec
pop
int
cmpl
imul
call
push
jnp
and
or
xlat
cmp
xlat
clc
jbe
dec
mov
call
push
push
adcb
out
push
inc
push
push
es
lock
icebp
int
mov
jns
nop
lret
test
lds
rcrb
pop
adc
dec
ret
sub
add
push
test
cmp
dec
in
test
xor
xchg
xchg
and
pop
rolb
mov
xlat
in
cli
addr16
call
stos
test
sbb
loope
fldt
inc
mov
aam
sub
jb
jmp
jmp
cld
arpl
xor
push
sarl
dec
dec
lahf
int3
lea
insb
loopne
or
outsl
rcl
and
cld
and
cltd
popa
rclb
enter
test
fistpll
add
cmp
mov
jb
fwait
jl
push
dec
push
gs
cmp
xor
jnp
into
das
lods
in
mov
popf
xchg
nop
jp
fildll
mov
mov
inc
fidivrs
out
or
das
adcb
mov
push
jns,pn
xor
xchg
repnz
sub
imul
addr16
mov
push
stos
popa
out
rorl
andb
pop
fmuls
movsb
lods
mov
cmp
or
mov
xchg
in
fisubl
inc
js
dec
test
add
jg
jge
or
mov
push
imul
adc
xchg
sbb
cmp
push
sbb
or
jae
sarb
inc
adc
cli
mov
mov
data16
or
xchg
dec
mov
add
insb
std
cmp
or
mov
rcrl
xchg
cwtl
or
cmp
lock
adc
mov
dec
aas
cltd
jno
stos
sarb
add
arpl
loope
push
xchg
xchg
dec
push
dec
and
inc
adc
mov
into
jo
cmp
clc
clc
pop
in
nop
mov
dec
cmp
sub
enter
jno
aad
or
lods
movsl
sub
adc
or
inc
jnp
or
dec
aas
mov
push
jmp
adc
pusha
dec
lahf
jns
rorl
pop
mov
in
fcmove
jae
sub
incb
stos
movsl
xchg
xchg
add
fwait
in
shrl
repz
test
je
int
or
sbb
xor
pop
lds
repz
push
aas
imul
adc
mov
stc
arpl
mov
mov
or
pop
fmull
jbe
popf
repnz
xor
imul
inc
decl
rcll
shll
mov
inc
ljmp
mov
les
sti
sub
jg
xor
sbb
pop
into
add
lret
jns
in
jp
adc
lods
out
cmp
cmp
sbb
jge
cmp
lods
ljmp
lods
ret
aad
sbb
mov
xchg
push
mov
mov
scas
in
bound
mov
test
jns
fs
xor
aad
lret
lods
lahf
pop
xchg
xchg
push
out
cmpsb
pop
insl
aam
dec
mov
out
rolb
aaa
push
outsb
test
icebp
mov
sub
into
sbb
xchg
push
push
fwait
fs
test
mov
inc
sbbb
or
xor
sbb
in
outsl
xchg
mov
cmp
sbb
ficomps
in
xor
jle
pop
mov
mov
dec
and
icebp
leave
pop
imul
mov
or
cmc
jg
sub
sbb
mov
test
adc
arpl
xor
outsl
sub
shlb
in
shrl
inc
test
mov
mov
pop
sub
jne
cmc
cld
jo
aam
xor
push
xor
cmp
dec
sub
inc
jle
aad
es
cld
cmp
popa
mov
jbe
xchg
fnsave
pop
lods
dec
inc
xchg
ljmp
jbe
push
cmp
cmp
xor
mov
pop
in
aaa
fists
mov
iret
xor
in
aas
xchg
lcall
arpl
xor
and
push
cmovns
roll
leave
mov
dec
shll
fbld
cmp
fisttps
sahf
fisttpll
out
push
dec
and
mov
dec
add
imul
or
fdivrs
jle
repnz
stos
fnstcw
cwtl
dec
js
lahf
mov
aam
rorl
xor
sub
pop
inc
enter
cli
add
sub
inc
fldcw
lret
xchg
cmpsl
add
aam
pushf
dec
xlat
movsb
jb
jb
inc
roll
shlb
scas
cmc
fwait
sub
in
and
jnp
inc
subl
jae
jo
pop
int
scas
push
push
mov
xor
popf
mov
sbb
adc
fcoms
les
inc
test
pop
adc
ficoms
nop
lret
mov
test
sti
aad
dec
insl
sbb
mov
arpl
lahf
rolb
dec
mov
push
jmp
and
mov
test
mov
xor
sbb
cmp
pushf
mov
stc
push
mov
cmpsl
in
pop
xor
data16
jmp
hlt
mov
push
lods
int
scas
gs
int3
pop
pop
dec
mov
test
jb
and
sbb
iret
aas
data16
or
loopne
data16
in
and
ljmp
mov
xlat
inc
movsb
xor
scas
push
test
jge
jnp
popf
xchg
cmp
inc
sub
imul
lock
leave
push
adc
int3
jl
fdivrs
stos
or
mov
dec
sbb
jb
fdivrl
push
jp
leave
mov
inc
dec
test
test
dec
paddusw
clc
push
xor
xchg
ret
pop
or
mov
insb
frstor
add
jl
in
pop
jge
push
xchg
incb
test
les
and
test
lock
lds
mov
fwait
shr
repnz
inc
push
rep
cmp
cmp
loop
push
and
fsubs
loop
addr16
divl
cltd
lret
mov
scas
or
push
add
mov
shrb
call
mov
stos
outsl
ljmp
movsl
rcl
iret
xchg
es
imul
rolb
rolb
aad
das
pop
cmp
notl
loop
mov
insw
xor
clc
and
cmp
xchg
aaa
repz
lcall
imul
or
js
lret
xchg
and
test
add
arpl
dec
jno
or
adc
push
adc
popa
stos
and
les
sub
mov
loop
jmp
rorb
cltd
inc
sub
dec
and
stos
test
or
sbbl
sub
dec
sbb
cmc
test
out
mov
or
or
mov
mov
xchg
push
in
inc
aam
pop
lahf
stos
add
push
lock
inc
or
push
jnp
jbe
cld
clc
push
push
sub
adc
cltd
inc
sbb
push
out
lock
mov
jnp
roll
xchg
int
and
call
daa
xchg
xchg
pop
arpl
add
fnstcw
testb
and
aas
mov
push
outsb
sub
shl
jo
and
imul
mov
mov
jmp
cmc
cltd
outsb
nop
out
popf
or
or
imul
pop
gs
loop
jle
pusha
mov
lods
cmp
scas
fs
insb
cmpsl
jmp
ficomps
addr16
xlat
cmp
add
and
push
xor
scas
cs
decb
jg
lahf
or
enter
stos
clc
fldt
aas
pushf
xchg
int
aas
ds
ds
scas
add
std
mov
jmp
movsl
push
inc
movsl
dec
push
xchg
lret
pop
jmp
push
in
int
outsb
adcl
xchg
ja
xchg
pusha
shll
adc
fdivrl
jl
in
mov
mov
fldt
push
xlat
jno
xlat
fsts
leave
lods
push
les
mov
push
dec
aas
call
loope
ss
push
xchg
xor
pop
shlb
mov
pop
xchg
push
call
mov
xor
dec
adc
in
mov
xchg
cmc
or
jne
jbe
out
scas
cmp
mov
into
adc
je
outsb
cmpsb
mov
jge
test
xor
jle
data16
mov
repnz
repz
decb
adc
dec
out
loop
movsl
test
push
and
inc
enter
add
pop
mov
aam
jl
mov
jecxz
mov
mov
or
dec
jmp
inc
xchg
jecxz
or
cmp
push
mov
xor
out
addl
sbb
push
cmp
pushf
pushf
lds
jecxz
xor
btr
insl
out
ficomps
sub
inc
movsl
int
dec
aad
int3
and
cmc
outsb
push
loope
bound
divl
mov
imul
call
imul
mov
dec
pop
inc
cli
pop
xchg
je
cmp
insl
push
cmp
insb
mov
fwait
arpl
leave
cltd
jno
es
mov
into
mov
clc
or
aaa
out
in
aas
mov
addl
inc
int3
outsb
inc
mov
dec
sbb
int
paddusb
idivl
ss
lret
insb
shl
pop
frstor
aas
je
lock
scas
cwtl
xchg
outsb
clc
jle
mov
push
sbb
mov
lock
and
js
mov
pop
cmp
mov
jae
dec
gs
jmp
push
mov
cmpsl
rcrb
dec
pop
and
es
scas
das
mov
sub
decb
daa
out
arpl
push
or
ja
inc
fists
or
cltd
cmp
ss
sti
xor
fldln2
mov
addb
test
pop
cld
xor
aas
adc
lcall
xchg
mov
aad
lahf
add
sub
jp
jae
mov
outsb
add
insb
and
xor
test
aaa
sbb
pop
adc
jmp
js
pop
scas
mov
mov
inc
jle
fadds
mov
and
mov
cmp
dec
outsb
and
add
sub
sbb
jle
push
imul
stos
gs
xor
addl
xchg
pop
jne
sub
js
push
jle
pop
sbb
jno
and
addr16
repz
xor
movsb
and
inc
sbb
test
sbb
pop
xlat
imull
mov
jo
jg
mov
aas
stos
push
xchg
push
nop
call
push
dec
aad
stc
push
mov
pushf
pop
or
mov
mov
push
jae
push
mov
das
push
cmp
icebp
mov
xchg
cli
cmp
lock
into
testl
daa
or
loope
cmc
sub
adc
cltd
and
sub
mov
mov
push
add
jg
cmp
mov
scas
push
or
sub
aas
and
mov
popa
shl
out
pop
ret
leave
outsb
jns
sbb
repnz
xchg
arpl
insb
mov
cld
mov
scas
xor
leave
rcl
mov
mov
rcl
lret
daa
add
sbb
jo
outsb
mov
js
xchg
cli
clc
ret
push
cmp
cmp
or
je
loope
dec
sbb
push
add
inc
cld
sbb
popf
xor
mov
or
outsl
imul
jge
mov
jg
mov
fmuls
aam
push
sub
sub
jl
addr16
adc
or
jns
adc
scas
test
dec
cwtl
add
mov
aas
or
test
inc
push
popf
pop
cmp
imulb
fsubrl
cmpsb
fcomi
fildll
cmpsl
inc
testb
cwtl
jnp
jp
les
dec
aam
mov
in
sbb
jns
adc
push
aam
pusha
nop
xchg
fs
mov
mov
dec
pop
sub
pop
fsubrl
dec
mov
pop
testl
sbb
jbe
mov
mov
addr16
jo
push
dec
adc
dec
add
lea
lahf
sbb
jne
sub
loopne
sub
or
mov
inc
loopne
les
jo
mov
xchg
lods
sub
pop
cmp
pop
fldenv
pop
jb
xchg
pop
or
jno
pop
cmp
cmovle
ss
xor
insb
dec
add
cmc
sbb
in
push
sub
shrl
mov
into
sbb
cmpb
leave
ret
sti
icebp
lret
push
add
push
dec
rcrl
out
icebp
clc
enter
imul
int
popa
data16
xchg
cmp
fnsave
shrb
loopne
jg
cwtl
mov
cli
mov
aaa
push
dec
into
aaa
xor
cmp
iret
in
fldenv
dec
cli
push
lods
xchg
inc
adc
or
inc
popl
xchg
in
fnstcw
lea
or
pop
push
hlt
pusha
aaa
mov
stc
xor
loope
push
sub
lods
push
pop
lds
sbb
addr16
push
pushf
nop
xchg
movsb
jbe
outsb
das
dec
lods
cmp
or
jg
mov
push
jecxz
cmp
xchg
jns
out
repnz
jns
out
mov
push
cld
push
cmp
jg
cmp
std
jae
rcrb
mov
push
call
jp
inc
pop
xlat
add
push
imull
sar
in
lcall
or
ds
mov
in
popf
sbb
scas
std
xchg
xchg
mov
mov
and
movsb
adc
add
fadds
mov
stos
pop
xchg
scas
or
call
aad
js
fs
mov
movl
inc
sub
push
daa
jno
test
cmpsl
sub
sub
mov
add
andb
push
fldl
test
daa
mov
leave
pushf
inc
into
push
shr
cmp
cmc
aam
sub
jno
fsubrl
hlt
es
xor
xchg
xchg
adc
loope
loop
stos
imul
xchg
int
sti
jmp
fists
pop
je
fists
jnp
ljmp
hlt
push
jae
ja
or
inc
inc
out
shlb
pop
mov
mov
cs
xchg
cmpsb
mov
in
dec
shr
sub
aad
cmc
adc
or
test
scas
ljmp
jl
repz
jp
addl
pop
push
xor
hlt
pusha
cmc
cld
dec
mov
add
std
pop
hlt
repz
subl
jbe
fiaddl
and
icebp
mov
sub
cmpsl
loope
call
push
push
cmp
and
outsb
cltd
and
mov
sbb
pop
add
inc
cld
out
stc
push
or
insb
adc
daa
jne
pusha
dec
dec
sahf
cld
xor
bound
pop
hlt
rcrl
std
ds
dec
dec
out
leave
mov
xor
mov
loop
xchg
add
scas
mov
pusha
sub
arpl
es
movsl
insl
jle
and
cmp
pop
fistpl
xchg
ja
adc
push
pop
sub
mov
xchg
test
jge
add
aaa
dec
sbb
lock
jns
outsb
and
pop
nop
repz
fdivl
clc
dec
les
pop
sbb
leave
jb
mov
push
mov
cltd
or
loope
adc
push
rcrl
dec
adc
jg
push
xorl
fcompl
xor
ret
xchg
std
scas
push
mov
bound
sarl
mov
aad
mov
xor
inc
push
hlt
mov
push
loop
mov
lods
mov
jle
inc
loopne
out
jp
cwtl
pop
mov
fists
pop
add
and
or
mov
cs
jno
iret
mov
repz
test
push
aas
push
sar
dec
addr16
movsl
popf
xchg
add
or
mov
out
les
and
adc
std
mov
pop
sub
scas
cmp
in
fsts
fsubr
adc
lret
cltd
pop
loope
pusha
fs
lods
xor
inc
insl
or
clc
push
enter
dec
jmp
inc
das
shr
and
jecxz
or
cli
and
pop
mov
gs
inc
mov
in
dec
sbb
fisubrs
add
out
in
mov
xchg
sahf
mov
jbe
mov
cwtl
int
cmp
mov
push
shrb
jl
cmp
out
mov
lret
daa
cmpl
sti
fucom
and
dec
movsl
outsb
adc
or
minps
pop
stc
and
xchg
dec
jg
push
add
ss
mov
out
test
rcl
dec
aam
stc
inc
cmpsb
cmpsb
test
out
lods
int3
push
loop
sub
lret
mov
jno
fidivs
rcrl
rol
outsl
bound
iret
mov
jae
xlat
push
int
nop
fisubrs
or
lods
lcall
sbb
lret
push
hlt
ds
xor
xor
mov
jno
xchg
mov
mov
dec
nop
orl
push
add
xor
dec
incb
fstpl
pop
jbe
mov
imul
pop
outsl
mov
mov
decb
out
add
test
add
mov
jae
je
mulb
mov
mov
push
pop
roll
andl
adc
lods
xchg
enter
mov
push
sbb
mov
pop
mov
dec
nop
hlt
xor
adc
adc
adc
and
addl
fisttpl
jbe
and
xchg
dec
jnp
inc
sbb
les
mov
push
adc
mov
fcompl
ljmp
jge
data16
imul
stos
push
scas
je
adc
daa
sub
push
in
mov
adc
sbb
adc
push
xlat
pop
ds
mov
aam
xlat
cltd
lds
mov
jecxz
mov
jg
mov
xchg
xor
mov
or
mov
icebp
pushf
xchg
pop
cmp
dec
lahf
adc
mov
pop
js
cmp
pop
pusha
outsl
pop
loop
adc
rcrb
mov
sub
and
out
rorb
clc
jne
cmp
fwait
and
insb
insl
dec
sar
rclb
fildll
sarb
clc
aaa
jecxz
sub
cmp
jb
sub
mov
and
rcll
lcall
mov
mov
or
push
ss
add
mov
mov
push
jecxz
pop
mov
sbb
fsubr
shl
repnz
icebp
push
push
stc
pusha
popf
mov
sbb
mov
fcom
mov
xchg
lret
pop
mov
sbb
xor
outsb
mov
scas
neg
add
mov
repz
push
cmpsb
push
dec
or
lret
call
int3
int3
mov
subb
mov
sub
movsb
cwtl
cmp
or
adc
mov
ret
xor
test
and
outsb
aam
sub
push
subps
mov
rcl
push
mov
mov
cmp
daa
rorl
add
sub
je
stc
insb
sub
or
dec
orb
jp
mov
xchg
xchg
ss
data16
xchg
adc
and
jo
sub
shrl
andb
inc
push
mov
sbb
in
je
ss
push
xchg
pushl
cwtl
outsb
push
xchg
mov
arpl
pop
cmpsl
mov
jl
push
arpl
popa
sar
shl
addl
bound
pushf
stos
adc
xchg
inc
leave
jb,pt
xor
jae
adc
loopne
pusha
or
lods
jno
mov
stc
int
das
inc
xchg
decl
sub
lret
jecxz
leave
mov
push
push
dec
pop
push
outsl
rorb
in
or
js
jnp
jecxz
sub
mov
addr16
mov
rolb
mov
daa
cmp
call
xor
insb
or
aam
movsb
mov
dec
inc
call
std
push
shrl
ret
fidivrl
loopne
movsl
fisttpll
lods
sub
jnp
mov
mov
pop
pop
loopne
push
dec
jae
int
cmp
clc
jbe
scas
dec
daa
sbb
orb
adc
sbb
pop
std
xchg
in
adc
sti
and
lods
and
imul
pop
inc
push
sbb
jl
sti
push
dec
xchg
out
test
punpcklwd
add
push
mov
ret
loope
cmp
dec
mov
push
or
xabort
out
cs
test
andb
xor
pop
iretw
and
push
mov
gs
or
cld
jns
dec
mov
push
inc
filds
push
sarb
andb
sub
or
sub
sarb
push
test
mov
ljmp
in
ljmp
scas
and
jns
je
adc
ffree
add
out
add
jmp
dec
xchg
mov
mov
jle
jns
and
rolb
jle
lock
ret
push
ljmp
shrl
add
add
imul
adc
cli
mov
jl
sub
mov
sbbl
ja
icebp
fimuls
xchg
push
or
jmp
mov
repz
jb
cmp
dec
mov
jno
into
aad
mov
call
push
sbb
lret
mov
rcll
aas
lret
add
movsl
mov
pop
mov
into
mov
add
jl
push
fldenv
out
xchg
test
pop
dec
adc
das
sub
out
les
sbb
cld
in
dec
nop
aaa
stc
push
pop
push
sbb
ja
lcall
pop
in
lods
lods
js,pn
out
adcl
mov
cmp
push
cmpsb
dec
xchg
sbb
ret
or
fsubl
adc
notl
insl
adc
sbbl
dec
add
pop
sbbb
movsb
sub
push
adc
mov
pop
xchg
cmp
cmp
iret
lods
mov
push
add
dec
call
in
es
sub
xchg
out
lds
cltd
xchg
ljmp
call
jae
dec
std
or
movsb
mov
mov
imul
adc
add
fidivrl
out
stc
adc
xor
or
sahf
jmp
rcrl
fldenv
mov
or
sahf
add
mov
cmp
jl
push
rorb
subb
cmp
shll
mov
dec
sub
and
scas
movsl
repz
sbb
inc
movsb
imul
mov
jns
push
mov
stc
test
add
mov
fstpt
jnp
pushf
cmpsl
jnp
sbb
add
fldenv
xchg
dec
jg
sbb
sbb
or
pop
adc
xchg
out
or
and
nop
add
pop
inc
sbb
pop
push
adc
mov
mov
push
sbb
ds
into
pop
lret
mov
push
sbb
xor
jecxz
addl
pop
inc
xor
sarb
js
adc
and
scas
cwtl
inc
jp
cld
jecxz
pop
clc
sbb
xchg
mov
and
fisubrl
ljmp
test
dec
mov
lahf
in
adc
jae
pop
and
jmp
shl
sbb
adc
and
subb
lcall
gs
sub
jo
inc
jbe
and
fwait
mov
test
mov
sub
insl
push
adc
cmp
mov
aas
xlat
mov
jge
pop
push
movb
jle
sbb
imul
call
push
std
daa
mov
add
ljmp
sub
xor
push
jno
lds
jle
pop
xchg
pop
adc
push
push
aad
add
loope
add
inc
sbb
movsb
arpl
imul
loopne
mov
rcrl
enter
lea
sarb
dec
fdivr
mov
or
pop
pshufw
lret
mov
xchg
leave
scas
loopne
std
ljmp
lock
sub
cmpsb
add
pop
ror
scas
and
stos
pop
pop
xlat
pop
inc
test
push
arpl
pop
jbe
inc
mov
insb
cmc
into
jns
stos
jmp
jbe
daa
addr16
dec
scas
lahf
dec
aad
xor
and
into
mov
sub
sbb
fs
mov
and
inc
xor
loope
jno
push
in
adc
dec
mov
dec
cmp
cmp
test
sub
push
jne
pop
decb
aad
add
cwtl
mov
pushf
sbb
dec
mov
mov
icebp
insb
fidivl
repnz
cmpsb
enter
and
mov
cmp
inc
insb
push
mov
shlb
inc
cmp
mov
cmovo
popa
push
int3
pop
add
push
bound
fnstsw
mov
das
fisubrl
scas
cmp
jecxz
push
imul
lock
pop
jge
gs
cltd
xor
jb
cli
scas
arpl
pop
add
call
aam
dec
or
sbb
hlt
insl
or
pusha
inc
pop
dec
dec
leave
enter
push
push
mov
orb
jnp
cmp
rcrb
inc
sub
stos
fisubl
or
inc
jne
add
or
cmp
sub
ds
sbb
sbb
mov
aam
mov
incl
arpl
jle
pushf
mov
sbb
inc
sub
push
imul
xchg
mov
cmp
xchg
dec
jp
adc
mov
push
in
dec
mov
jle
enter
in
fldenv
movsl
data16
sbb
jge
ficompl
fisttps
mov
xchg
pushl
divl
cmp
ficoml
pop
sub
mov
adcb
loope
xor
jle
adc
sub
adc
xchg
neg
mov
push
outsl
cmpsb
clc
jle
ss
bound
jno
sbb
cmc
and
into
or
lea
movsl
inc
lcall
outsb
sub
outsl
or
or
mov
pop
push
pop
mov
scas
mov
sbb
cwtl
out
or
pusha
cmpl
xor
ret
pop
jmp
or
xchg
mov
outsb
out
into
or
cltd
ljmp
into
call
lahf
pop
fwait
ljmp
adc
int
repz
jae
int3
sub
sub
lcall
movsl
les
sub
ljmp
out
jp
mov
fcompl
sahf
and
es
xchg
fwait
sub
lds
mov
iret
das
fadd
mov
sub
les
cli
jl
mov
pushf
scas
dec
ljmp
or
cmp
mov
mov
add
fisubl
adc
push
ds
lcall
inc
call
push
mov
adc
fsqrt
lds
lcall
push
mov
repz
push
stc
pop
cmp
mov
add
lcall
dec
cwtl
pop
xor
xchg
push
or
int3
clc
inc
hlt
cmp
mov
arpl
mov
ret
pop
sub
jmp
cmp
mov
mov
cmc
idivl
mov
outsb
lcall
add
mov
loope
cli
js
cli
mul
and
inc
inc
sbbb
xor
mov
xchg
iret
inc
in
push
xor
cmpsl
inc
arpl
push
xchg
lret
pop
std
loop
outsb
push
fdivs
insl
ja
sbb
mov
dec
mov
andl
cmp
xchg
mov
push
pop
cltd
subb
push
jmp
push
les
mov
aas
sbb
inc
cmpsb
jecxz
pop
adc
ret
nop
aam
mov
scas
ret
in
icebp
idivl
lds
xchg
sub
out
mov
mov
add
int
outsb
inc
lret
imul
lcall
mov
mov
cli
xor
pop
mov
mov
add
sub
jb
adc
inc
les
inc
movsl
int3
jp
pusha
les
hlt
pop
std
mov
cmc
pop
repnz
sub
adc
int
fistpll
jecxz
mov
pop
shufps
adc
outsl
sbb
enter
shrb
insb
out
popa
in
repz
adc
sahf
lret
test
or
xorb
call
mov
add
or
int3
std
imul
dec
rcrl
sbb
fidivrs
outsb
dec
inc
mov
fisubrl
and
or
sahf
stc
xchg
xor
das
adc
fldl
out
out
xchg
jnp
ja
jne
aas
ljmp
ja
loopne
mov
pop
ds
xchg
sbb
sub
mov
loopne
cltd
pop
push
jl
push
jnp
fisttps
out
test
jecxz
out
leave
sbb
and
test
sbb
jae
jno
in
jnp
rcll
dec
xor
gs
xlat
mov
pusha
mov
xor
dec
pop
adc
mov
xchg
gs
cld
mov
push
and
push
add
pop
in
divb
mov
mov
sub
stos
sbb
jle
mov
lcall
push
mov
dec
mov
push
icebp
jae
and
test
push
test
dec
push
add
daa
xorl
insl
push
rorl
aad
mov
stos
inc
adc
icebp
inc
or
dec
shl
adc
insl
stos
mov
dec
rorl
or
xor
ds
mov
pop
mov
insb
sub
dec
fadd
sub
pop
shll
sbb
sbb
repnz
dec
in
pop
fiadds
mov
addl
aas
cmpsb
popf
pop
mov
push
add
icebp
mov
in
push
enter
and
std
mov
lea
out
jl
std
fmuls
add
shl
mov
into
pop
jecxz
cmpsb
pop
test
sbb
cmpsb
bound
hlt
push
aaa
cmpsb
test
test
out
push
imul
ffreep
jl
movsl
jns
vphsubwd
push
clc
cmp
sahf
mov
js
outsl
mov
lcall
push
sub
xor
xchg
dec
or
or
push
push
test
mov
mov
test
loop
mov
fs
adcl
pusha
mov
jle
test
lahf
mov
cmp
mov
push
rorl
mov
inc
add
bound
push
cwtl
ds
ret
dec
add
jmp
popf
xchg
fwait
mov
ss
mov
testb
aaa
dec
outsb
push
jo
jl
aam
jl
andl
dec
out
jmp
je
push
fs
cmp
lds
mov
lock
fadds
cmpxchg
cmpsl
jns,pn
add
jg
test
cmp
xor
ljmp
mov
push
and
and
test
inc
push
andb
inc
mov
std
andl
sbb
push
mov
push
jmp
xorl
lcall
mov
les
fsubs
push
mov
int
and
ds
out
sahf
xchg
and
cmpsb
push
cmp
xor
lds
dec
push
dec
sub
out
repz
mov
push
gs
and
aad
mov
cmp
mov
add
stos
cmc
jl
popf
push
mov
mulb
add
xor
movsb
lock
add
pop
pop
xchg
adc
and
std
mov
dec
push
cwtl
out
sbb
sub
xchg
mov
mov
je
out
push
in
xor
loop
pop
adc
dec
add
std
adc
movl
xlat
std
sbb
lock
adc
push
push
dec
push
push
dec
push
xor
das
push
xchg
xchg
lea
inc
mov
adc
roll
dec
dec
insl
adc
int
push
xor
dec
xchg
inc
std
clc
fwait
sti
stos
jle
xor
xchg
xor
and
or
jge
ja
or
ljmp
push
jo
xchg
xchg
push
sub
inc
push
xor
data16
dec
mov
push
push
addr16
pop
dec
scas
cs
popa
andl
or
aas
inc
lret
mov
xor
dec
cmpsl
and
jp
mov
pushf
cmc
movsl
in
icebp
imul
jnp
shr
bound
pusha
pop
sahf
test
lret
cwtl
jmp
sub
ficomps
enter
cmc
or
cli
cltd
and
pop
popa
test
add
adc
clc
mov
negl
incb
sahf
int
mov
cs
lock
xor
nop
dec
cmc
cmpsl
fwait
shrb
jecxz
cmp
iret
jne
pop
and
fsubrl
out
and
push
mov
xlat
or
js
ja
subl
jge
sub
sbb
cmp
jg
xor
xchg
xchg
test
cli
imul
test
js
test
fdiv
jmp
jp
icebp
cmp
je
cs
aad
stc
and
pause
jge
mov
mov
icebp
test
loop
cmp
rep
cmpsl
push
xor
xchg
scas
inc
test
hlt
insb
enter
mov
shr
pop
fnstenv
cmp
jmp
adc
cmpsl
pop
aaa
push
repnz
push
add
sub
jle
adc
lahf
xchg
adc
out
movsb
sub
ljmp
out
mov
cmp
loopne
js
int3
shll
fldl
add
iret
push
ja
imul
mov
lret
dec
leave
xchg
pop
pop
mov
es
jnp
mov
popa
lock
out
push
icebp
cltd
punpckhwd
pop
shlb
repnz
insb
ret
mov
xchg
and
imul
adc
pop
mov
lock
jae
xchg
and
sub
repnz
inc
xor
inc
sub
ss
cmpsb
inc
cmc
or
push
cwtl
jmp
inc
lods
adc
ja
sahf
imul
jno
movsb
lcall
mov
sarb
xchg
roll
mov
pop
jg
repz
add
ret
fwait
stos
jmp
repz
sbb
fwait
cmpsl
repz
cmpsl
filds
sbb
data16
jg
dec
or
ja
rol
jno
outsl
mov
dec
and
scas
jns
jp
jns
xchg
rolb
out
inc
sub
scas
roll
les
dec
xor
inc
push
ljmp
movsl
iret
lret
jb
pop
int3
inc
lcall
rolb
inc
mov
jne
imul
pop
aad
pop
pop
fstpt
sub
adc
fs
xchg
adc
mov
int3
sub
aaa
and
and
daa
andb
das
iret
xchg
call
mov
aam
sub
sub
mov
mov
aad
lods
outsb
jb
cmp
and
sub
insb
or
es
test
movsb
ds
test
ds
jbe
pop
je
adc
dec
xchg
das
icebp
stos
scas
cmp
xchg
fsub
fs
imul
filds
push
xchg
jl
add
in
or
push
hlt
pop
adc
out
mov
test
in
mov
adc
inc
aas
fildll
cmp
in
pushf
fisttps
leave
les
test
dec
xchg
sbb
out
out
fs
xchg
divw
dec
cmc
or
sysret
sub
inc
sti
movsb
jnp
pop
push
xchg
adc
xor
lock
ret
sbb
cmpsl
sub
mov
das
jb
jbe
out
pop
iret
insl
mov
inc
aas
jns
shlb
sbb
dec
icebp
dec
jae
fsubs
ret
push
fsubs
mov
jnp
out
je
repz
mov
pop
sbb
subl
mov
xor
pop
inc
push
cwtl
add
push
dec
mov
rolb
sub
jb
pop
popl
push
negb
xchg
cmp
test
pop
in
mov
push
or
or
inc
shlb
and
cmp
lret
jmp
ja
mov
or
mov
push
inc
sbb
dec
sarb
push
flds
sub
pushf
paddusb
dec
out
jl
ret
in
push
shll
aas
fcmovu
je
add
loopne
insl
xchg
push
jne
adc
or
cltd
lods
sub
mov
es
loopne
or
pusha
int3
lret
lea
jne
jns
pusha
xor
and
jge
jg
ret
xchg
sub
xchg
xchg
orl
cmpsb
xchg
sub
ja
and
mov
sub
dec
pusha
loope
xchg
ds
sub
stc
adc
rol
mov
imul
push
xchg
mov
cmpsb
xlat
xchg
jbe
fidivs
cmpsl
or
insb
dec
push
cmp
cmp
int3
in
lret
pop
mov
aad
ret
push
pop
jno
pop
roll
packsswb
int
mov
mov
pop
sbb
and
lock
bndstx
repz
out
pop
fcmovne
cld
mov
scas
insl
jg
enter
sbb
clc
ss
test
dec
sub
stos
or
jno
push
lock
push
pusha
xor
fldt
xchg
push
lret
xor
sbb
clc
push
add
add
push
sti
mov
stc
mov
push
xor
sbbb
ljmp
jbe
lret
mov
sbb
and
or
push
popf
stos
dec
push
xchg
stos
jl
dec
adc
cmp
repnz
scas
lret
xchg
rol
in
inc
pop
inc
out
out
sub
xlat
mov
aas
inc
push
and
js
inc
sub
int
mov
daa
iret
lods
data16
jg
in
lds
mov
inc
cli
or
aaa
jbe
xor
scas
mov
dec
mov
imul
mov
pop
xchg
sti
mov
pop
pusha
out
das
incl
mov
loope
stc
and
xchg
pop
adc
pop
jne
faddl
adc
movsb
inc
stos
insl
sbb
jg
inc
fnstenv
jb
shlb
mov
xchg
out
in
fbstp
pop
cmp
in
outsl
inc
test
add
inc
pop
or
push
mov
mov
mov
enter
cltd
add
sub
data16
nop
jge
xor
pop
jns
jne
mov
adc
div
test
sub
mov
push
or
mov
mov
and
rol
xchg
lock
cmp
out
cli
mov
jae
fwait
sbb
bnd
sbb
pushf
pop
out
out
xchg
xor
data16
lret
pop
insl
pushf
xchg
adc
addl
jo
repnz
sbb
lock
pop
arpl
aad
mov
adc
inc
ret
dec
leave
or
iret
adc
inc
cmp
out
or
inc
cmp
push
clc
movl
sub
cmp
mov
pop
adc
lea
lock
mov
in
repz
push
outsl
sti
addr16
mov
sbb
lcall
mov
sbb
mov
fnsave
mov
add
mov
jp
ficoml
jno
cmp
outsb
outsb
cmp
and
ja
mov
push
mov
mov
or
xor
loope
or
bound
rcrl
mov
scas
cwtl
fidivrs
repz
or
jae
dec
sqrtps
test
les
mov
lret
mov
insl
outsb
or
insb
into
stc
insl
mov
sub
cmp
js
sub
dec
and
and
pusha
jnp
xorb
les
loopne
mov
movsl
xchg
scas
mov
cmp
jne
ret
and
std
adc
lods
xchg
leave
mov
adc
std
pop
addb
mov
sub
nop
mov
pop
cmp
test
dec
xor
sbb
mov
push
dec
movsl
or
icebp
cld
lods
jge
fisubs
gs
shlb
test
mov
repnz
pop
stos
pop
ret
adc
pop
mov
or
xchg
ljmp
lock
sbb
shrl
pop
clc
shrl
inc
add
sbb
xchg
xor
mov
adc
rol
pop
inc
push
bound
xchg
mov
push
lods
dec
cmpsb
pop
movsb
inc
stos
jno
out
rcr
loop
je
sti
icebp
repnz
push
cmpsl
mov
std
mov
aad
inc
dec
testl
jb
shll
sbb
pop
in
add
sbb
test
pop
loop
lods
imul
dec
dec
enter
mov
xchg
cmp
popf
xchg
fldl
imul
sub
test
imul
out
psubb
pop
mov
jmp
insl
je
arpl
call
icebp
mov
sbb
inc
pop
and
shrl
js
xchg
adc
das
or
mov
and
loop
outsl
les
iret
add
mov
pop
cmp
repz
mov
inc
lret
add
rcrb
xchg
jmp
loope
lret
andb
icebp
push
pop
imul
js
mov
out
hlt
sub
mov
cltd
ret
leave
xor
inc
adc
xchg
es
mov
push
pop
repnz
out
ficoms
sti
push
cmpsb
adc
jp
imul
js
ficoml
mov
imul
lea
xchg
movsb
jno
mov
xchg
xlat
aad
add
ja
fs
insb
pop
stos
or
jge
sbb
pop
scas
loop
fs
fisubrs
pop
ds
movsb
rorb
mov
test
xor
jnp
daa
or
aam
popf
das
or
mov
dec
es
and
adc
pusha
addr16
jnp
popf
and
outsl
dec
subb
jnp
leave
scas
pop
jge
sbb
add
into
fs
push
enter
or
cmpsb
xchg
sbb
and
add
sub
out
cmp
loopne
sti
in
cmp
push
out
call
out
cmpb
sbb
adc
mov
idivb
mov
into
mov
xor
inc
mov
in
mov
icebp
lods
scas
rorl
in
imul
arpl
or
inc
or
and
adc
jbe
call
jo
push
mov
or
in
insb
jl
xchg
push
xchg
cmp
xor
bound
xlat
aad
js
fcomp
push
jmp
rcr
and
movsb
repz
loope
mov
push
pop
repnz
inc
sub
popf
push
add
cs
in
sub
xchg
add
mov
arpl
arpl
aaa
sarb
into
push
lret
fcoms
push
imul
sbb
and
repz
test
fldl
push
mov
jne
xchg
push
mov
jmp
fdivs
lret
lret
pop
and
ljmp
cmp
mov
pop
fwait
sub
xor
mov
mov
idivl
shrl
lret
in
adc
mov
jb
sar
mov
mov
mov
jg
lret
mov
xor
inc
das
and
test
aad
je
xor
lcall
movsl
data16
filds
inc
arpl
and
movsl
dec
fcoms
pop
nop
xchg
in
test
jbe
mov
xor
sub
mov
pop
test
add
lea
dec
stc
popf
jns
mov
mov
adc
jo
shr
ret
xchg
sbb
mov
jnp
iret
push
push
cmp
dec
push
int3
add
add
aad
sbb
pcmpeqw
pushf
jl
inc
movsb
sbb
es
rol
adc
movsl
sbb
lods
fcmovnb
cltd
fstl
pushf
fadd
push
mov
inc
and
and
jl
mov
cmpl
leave
and
pop
fcompl
ja
aam
loopne
push
outsb
ret
lods
push
test
cmp
jmp
mov
inc
scas
pop
pop
insb
mov
cwtl
adc
mov
fidivrs
outsb
cli
test
add
dec
je
andb
dec
mov
or
mov
mov
cli
inc
adc
and
or
or
jne
dec
inc
pop
cmp
mov
add
inc
push
push
mov
in
cmp
test
hlt
push
jecxz
les
inc
cs
sar
lods
and
cmc
adc
xor
outsl
clc
ud2
cmp
hlt
scas
mov
subl
cmp
hlt
sub
das
and
cmpsb
insb
test
jg
mov
pop
stos
shl
push
mov
repnz
pop
fnstcw
and
ja
cmp
sbb
sub
xchg
jg
sbb
adc
lahf
and
mov
cmc
int
enter
cmp
testb
stos
lea
loope
daa
jb
es
aad
jg
arpl
enter
push
cmp
xchg
mov
movsb
sub
xchg
mov
test
notl
sti
xlat
testb
inc
cmp
mov
imul
xchg
es
lds
cmc
insl
ficomps
sub
inc
cld
sarl
vpsubusw
and
jl
bound
adc
mov
mov
inc
jg
jb
dec
outsl
ficoms
loope
sub
js
lret
sbb
int3
sub
out
dec
dec
ljmp
ljmp
dec
push
stos
or
xchg
rcll
push
pop
sbb
loopne
mov
dec
mov
test
sbb
aam
fbld
xor
pushf
xchg
push
es
mov
dec
xchg
sub
es
addr16
push
xchg
sbb
push
repz
pop
jecxz
icebp
mov
fwait
bnd
inc
lock
add
sbb
mov
add
shrl
jbe
xchg
loope
std
inc
repz
or
popf
mov
pop
push
lock
lret
jno
pop
subl
inc
and
jns
push
popf
cmc
sbb
mov
add
and
fbld
inc
sub
xor
cld
aaa
or
orb
mov
mov
in
in
inc
jl
aas
outsb
clc
stos
pop
jl
and
cmp
xlat
daa
adcl
jge
popa
movb
movsb
clc
movsb
movsl
xchg
pop
add
mov
mov
dec
or
sarl
mov
test
adc
jbe
sbb
jp
or
fidivl
gs
push
pop
and
mov
lock
stos
jp
pop
stos
mov
jbe
movsb
mov
xchg
or
pop
pop
clc
fsub
push
inc
aad
or
mov
lahf
mov
sbb
mov
xchg
enter
ljmp
out
pop
xchg
rcrb
mov
xchg
pop
xlat
cs
sbb
addr16
adc
ja
inc
mov
pop
adc
test
aaa
xchg
jp
cmp
mov
insl
sti
mov
daa
fwait
sbb
scas
scas
pop
xor
subb
bswap
addl
out
inc
sub
jl
add
push
stos
cld
mov
insl
and
enter
push
dec
jg
mov
cmc
mov
cmp
bound
add
mov
jno
movb
and
and
pop
fisubrl
pop
jmp
mov
push
int3
pop
mov
xchg
add
jnp
jmp
cmc
adcl
mov
mov
xchg
lret
jno
ret
addr16
jnp
add
cmp
cmp
cmp
push
stos
xor
and
call
lahf
dec
lahf
pop
insb
push
add
js
push
adc
dec
or
popf
icebp
mov
sbb
jecxz
int
test
and
xor
movsb
mov
mov
or
leave
xor
mov
leave
into
fldt
mov
stc
pop
push
sbb
mul
pop
xchg
cli
xor
ret
fwait
cmpsl
adc
imul
jno
mov
inc
or
jo
rorb
or
jl
inc
filds
sbb
imul
pop
push
fisubl
lret
mov
push
iret
adc
push
hlt
xlat
sbb
sahf
pop
arpl
xchg
rolb
push
cmpsl
or
push
push
aam
cltd
dec
int
lds
aad
rcr
out
lock
mov
ret
jle
ja
outsb
mov
movl
dec
xor
or
gs
lcall
push
in
das
movsl
inc
push
push
or
rorb
mov
and
stc
xchg
sti
inc
push
cltd
jns
testl
lret
xchg
mov
xchg
jl
into
stos
rcrl
pusha
cld
sub
sbb
insb
ret
push
sbb
push
mov
daa
sbb
lea
or
pusha
test
mov
cli
test
push
cmp
cltd
movsl
add
cmpsl
rolb
jmp
rclb
sub
test
out
stos
out
mov
cmc
sbb
fwait
adcl
sahf
dec
les
adc
shll
sbb
ret
out
and
shlb
fwait
sbb
mov
ret
push
stos
mov
movsb
push
push
movsl
sbb
jl
xchg
push
scas
movsl
les
or
frstor
push
pop
icebp
daa
insl
mov
inc
popw
loop
inc
sahf
add
jge
ljmp
cmp
pop
inc
mov
dec
pop
sub
rcrb
out
sar
push
cmc
jae
int3
daa
mov
pop
aaa
popf
fcos
or
fdivs
push
cmpsl
push
xor
xchg
adc
in
sub
adc
jne
xchg
jns
add
mov
xlat
clc
adc
test
dec
xor
sahf
out
jns
jge
cmp
xchg
imul
pusha
les
ret
push
testb
cmp
add
pushf
js
cmp
je
repz
mov
push
pop
dec
scas
addr16
fcomp
and
mov
and
pusha
inc
and
sub
jp
jmp
and
stos
and
xchg
loop
int
or
pop
je
es
lcall
push
xlat
mov
and
push
ljmp
cmp
repz
stc
jl
push
mov
idiv
pop
pop
dec
andl
sub
dec
shrl
adc
cmp
jns
leave
push
push
sti
iret
mov
adc
adc
dec
mov
dec
or
adc
out
adc
mov
enter
stos
sub
pop
sub
and
mov
pop
aaa
orl
lsl
push
add
push
sbb
push
mov
mov
add
push
daa
cltd
aas
popl
xchg
mov
sbb
cmpl
ss
pop
or
push
mov
leave
pop
cwtl
fistl
jae
xor
mov
addr16
cmp
cmpsl
lret
mov
adc
jg
xchg
jnp
mov
lret
loop
loope
lds
push
insb
ja
push
icebp
aas
scas
inc
dec
fildl
mov
pop
in
addb
pop
iret
into
push
xchg
test
jnp
mov
and
lcall
sub
sub
outsl
ret
jne
inc
mov
inc
xor
lahf
add
ljmp
les
jnp
inc
in
mov
insb
cmp
clc
adc
imul
and
mov
pop
mov
xchg
lcall
into
push
into
push
cmp
mov
xchg
aam
push
jne
cli
sahf
push
sub
jle
inc
out
cmp
cwtl
mov
push
cmpsl
pop
and
mov
xchg
jp
add
xchg
test
int3
scas
pop
scas
and
mov
mov
ds
sub
loopne
pop
adc
stos
push
lea
decb
pop
jecxz
testl
adc
aas
xor
sar
xor
arpl
stc
stos
test
lds
adc
movsl
jge
sub
stos
xchg
dec
mov
cmpsb
clc
fmulp
push
testb
out
arpl
movsb
loopne
icebp
cmp
lods
jo
nop
outsb
xchg
fistpll
push
ds
idivl
rorl
subl
je
xchg
cld
or
mov
cmp
lcall
fisttpl
into
inc
jno
pop
xchg
jnp
xor
push
cmp
jb
or
cmp
xor
xorb
lcall
outsl
int
or
dec
jmp
push
mov
je
sub
inc
mov
je
dec
hlt
daa
pop
cmp
and
sub
pop
es
xchg
aas
hlt
jnp
cwtl
sarl
jno
pop
xchg
mov
in
lcall
dec
loop
adc
adc
mov
addl
mov
shlb
mov
test
arpl
mov
cmp
addr16
jecxz
mov
xor
lock
mov
push
jg
xor
int3
shrl
cltd
arpl
fstp
ret
out
ret
int
int3
jb
and
inc
sub
cmpsb
push
push
xor
mov
sbb
and
ror
jne
imulb
push
jns
stos
arpl
push
xlat
pop
jbe
and
test
xchg
mov
vphadduwq
test
xor
or
push
idiv
mov
in
movsb
mov
lret
fwait
pop
ljmp
test
add
ja
data16
iret
mov
or
dec
cltd
clc
and
outsb
stc
cmp
roll
rclb
int3
pop
xor
jmp
fldcw
sar
std
xor
inc
xchg
movsb
sbbl
pop
ljmp
push
cmp
iret
lcall
xchg
jg
inc
mov
sbb
fcmovbe
mov
mov
int
mov
popf
pop
popw
or
mov
mov
jae
lods
jno
sbb
inc
inc
fidivl
jl
sbbl
shll
ja
cli
cmp
add
int
sbb
mov
sbb
or
pop
and
or
sub
pop
stc
out
inc
icebp
scas
and
les
cs
mov
or
dec
test
jl
fisubl
mov
add
cli
lcall
add
mov
or
fs
repnz
cmp
ret
cltd
push
fwait
cmc
sbb
sbb
mov
pop
dec
mov
inc
test
inc
jle
xor
cwtl
into
inc
xor
mov
idivl
add
movsl
or
rorl
or
fwait
push
movsl
dec
or
lds
push
mov
fsubrs
test
xchg
or
out
popa
lcall
cli
mov
movsl
sbb
iret
and
sbb
shrl
rorb
jne
pop
imulb
daa
mov
cli
sub
and
cmp
cmp
mov
dec
sbb
xchg
push
adc
pop
cmp
repnz
inc
mov
cwtl
fdivrs
in
push
xor
lock
mov
add
xchg
cmpsb
imul
and
xor
dec
mov
addr16
adc
jmp
test
adc
pop
xlat
rcrl
mov
mov
and
push
sub
movsl
cmp
bound
testb
test
leave
inc
stos
pop
nop
add
out
dec
add
add
pop
jno
sub
xor
sarb
in
sub
mov
out
push
adc
cmpsb
jg
inc
cmp
inc
cmp
xchg
in
mov
cwtl
jnp
push
dec
dec
std
push
pop
aas
adc
jp
sub
adc
sbb
ss
adc
dec
out
push
xchg
xchg
cwtl
sti
sti
inc
xor
outsl
ret
cmp
bound
inc
adc
das
push
inc
mov
fmulp
inc
or
lahf
test
dec
test
negb
paddusb
cld
mov
mov
adc
pop
daa
loope
les
sti
jne
pop
inc
adc
call
cmp
inc
sub
mov
arpl
outsb
test
std
adc
push
into
bound
js
shrb
and
adc
ret
cmc
inc
xor
mov
lods
shll
mov
jmp
aad
rcr
jnp
addr16
pop
cmc
mov
outsl
gs
dec
cltd
jne
xor
clc
mov
cmpsb
out
daa
xchg
jnp
flds
inc
int3
lcall
je
add
ret
in
bound
es
pop
add
mov
into
scas
adc
into
push
loopne
sahf
call
xor
lds
or
test
pushf
adc
xchg
push
out
into
je
fidivl
pop
daa
push
cli
or
xchg
mov
mov
cli
clc
xchg
mov
mov
xchg
lret
lret
dec
jp
scas
leave
dec
xor
inc
jb
lcall
dec
pop
inc
aas
fwait
movsb
inc
addr16
test
out
xchg
push
pop
inc
scas
addr16
decl
jle
lds
push
test
jmp
inc
out
in
jg
inc
cmp
mov
int3
xor
test
lea
mov
cs
mov
fldcw
pop
leave
addb
cmp
adcl
xchg
stos
jno
cli
or
jne
mov
movsb
pusha
dec
insb
movsl
out
mov
sbb
lods
xor
fisttps
das
jecxz
repnz
pop
and
lock
jbe
dec
push
mov
mov
repz
push
adcb
es
mov
hlt
jne
jg
iret
dec
add
stos
stos
cmc
dec
mov
xor
mov
pushf
inc
xlat
dec
ds
sbb
popf
cs
xor
mov
xchg
inc
cmp
xchg
outsb
pop
jb
and
mov
adc
lret
add
sti
and
adc
mov
outsb
je
adc
push
insl
dec
in
out
dec
mov
aas
jecxz
popl
adc
cmp
cmp
and
mov
sarb
and
dec
repz
push
mov
sbb
gs
jge
push
imul
jl
lods
mov
or
and
arpl
push
pop
mov
repz
fidivl
push
cmp
or
pop
xor
dec
loope
dec
cld
ret
dec
data16
in
mov
mov
aaa
sub
and
inc
jnp
pop
or
push
adc
bound
cmp
insl
outsl
test
jae
mov
mov
mov
fstpl
fsubr
lcall
jne
out
lods
lahf
lcall
scas
xchg
push
inc
add
addr16
xchg
imulb
jp
mov
scas
or
rol
pop
and
daa
pop
cwtl
call
loopne
sbb
fcomp
lea
cmp
shrb
repz
pop
stos
in
sub
cld
sub
inc
mov
icebp
out
dec
mov
inc
imul
sub
sti
fs
cltd
and
mov
shrb
push
ret
xchg
and
out
mov
sub
repnz
xor
int3
dec
cmp
rcrb
pop
ret
xor
dec
sub
out
loope
push
mov
cmp
ss
stos
mov
and
inc
scas
sahf
int3
push
ljmp
and
mov
adc
cld
decl
sub
movsl
imul
inc
xchg
sub
insl
test
scas
mov
xchg
mov
aam
pop
pop
fwait
add
imul
lods
inc
inc
notl
jb
jbe
xchg
mov
popf
xor
loopne
pop
lock
iret
fistpl
cld
inc
sbb
scas
fadds
bound
ljmp
inc
push
mov
lea
sbb
pushf
hlt
add
inc
add
cmpsl
xor
mov
lods
bound
outsl
mov
popa
hlt
or
sahf
mov
sti
rcl
test
in
cs
pop
or
jbe
outsb
es
mov
jo
xor
addl
or
jge
ret
enter
test
mov
mov
fistpll
cwtl
mov
mov
or
arpl
sbb
jl
loopne
push
cmp
mov
imul
mov
push
mov
and
lret
stos
pop
in
push
pop
cmp
adc
in
jl
icebp
scas
dec
mov
adc
add
out
addr16
jle
or
dec
inc
mov
adc
push
or
dec
jo
pop
push
adc
sbb
js
or
adc
xor
push
lahf
pop
mov
push
lock
xor
aas
push
xor
test
imul
xchg
cmp
xchg
push
mov
aam
lret
jb
cwtl
jne
xchg
mov
aas
das
int3
loopne
mov
mov
mov
sarb
pop
inc
leave
sbb
into
ja
sbb
pushf
jne
loope
mov
std
into
das
addr16
xor
fdivp
test
mov
mov
pop
sub
xchg
sub
mov
xor
enter
xchg
lods
cli
mov
int
mov
sub
mov
ret
and
data16
pop
in
mov
lea
mov
cmpsl
outsl
popf
xlat
jae
or
cltd
fidivrl
es
in
pop
jg
sub
jne
fldl
push
push
inc
repnz
pop
jb
mov
dec
sti
push
cs
int3
mov
push
add
jmp
ds
mov
xorb
jbe
cmp
mov
int
jno
dec
xchg
scas
dec
stos
mov
jns
xacquire
xlat
ret
aas
in
loopne
jbe
push
imul
incb
cmp
adc
mov
push
cmp
jnp
cmp
jecxz
mov
fldenv
insb
std
jnp
sub
mov
mulb
add
sarl
ds
movsb
jo
daa
fists
ja
addl
lods
popa
xchg
xchg
stos
add
adc
ja
xchg
repz
xchg
sti
fbstp
lds
mov
mov
or
arpl
fisttpl
and
inc
loop
out
cmp
xor
pop
stos
mov
push
std
cli
or
lock
xchg
dec
pop
sub
inc
inc
cmpsl
imul
xor
adc
popa
pop
cmpsl
or
jg
sbb
les
cli
and
push
scas
lret
sti
mov
mov
jecxz
and
arpl
cmp
add
and
adc
mov
add
shrb
jl
in
dec
hlt
mov
mov
mov
daa
xor
pop
push
out
aaa
push
sti
cld
sub
cmp
data16
mov
cmpb
mov
inc
lock
push
add
jae
cmpsl
pop
sub
pop
mov
sahf
insb
mov
cmp
lds
fdivl
pop
or
or
cmp
jle
or
loopne
enter
xchg
push
sbb
xchg
das
cmp
jp
ret
rclb
mov
or
mov
push
adc
jno
repz
iret
iret
cmp
lcall
push
xor
inc
call
sub
out
pusha
bound
stc
psraw
mov
arpl
ljmp
lret
adc
lea
movsb
adc
or
movsl
dec
xor
in
cmp
test
inc
leave
xchg
xchg
jmp
cmp
xchg
xchg
test
aam
out
out
loopne
dec
lods
ret
sub
mov
lock
push
mov
fdivrl
mov
push
imul
xchg
add
pop
and
mov
in
add
push
push
mov
adc
cmp
ret
adc
jge
movsl
lds
in
cmc
cmc
mov
pop
pop
xor
xchg
jne
leave
faddl
outsb
and
cmpsb
mov
call
mov
pushf
jne
add
mov
and
fldt
dec
push
jle
mov
push
enter
mov
loope
or
push
sub
cmc
fnclex
enter
cmp
add
fidivs
mov
xlat
jmp
pop
aam
mov
lret
push
adc
aad
push
push
mov
int
pop
das
dec
loopne
dec
cwtl
pushf
xor
sbb
out
mov
fiaddl
ror
call
cmpsl
mov
add
repz
sub
lret
dec
cmp
inc
mov
int
js
lea
cld
or
ljmp
mov
movsl
adc
jbe
inc
fcomip
je
jg
fmull
mov
fildl
add
jae
test
cmp
mov
adc
xor
mov
ret
mov
into
ja
or
sub
push
jbe
inc
dec
pop
nop
mov
lcall
arpl
icebp
in
and
fistpll
jo
adcl
or
ljmp
cmp
cmp
mov
incb
stc
and
mov
ds
bound
test
push
sbb
mov
push
add
fstps
lods
cwtl
sub
cmovb
sub
es
push
movsb
stos
jmp
js
adc
rcll
fldt
mov
adc
lret
call
mov
sub
andb
push
mov
dec
in
cmp
dec
push
js
je
sub
popf
mov
fidivrl
icebp
add
out
shll
fs
mov
adc
subl
lret
push
sub
in
and
aaa
aas
push
xchg
jb
fisubrl
js
testb
in
cmp
ss
dec
push
mov
jae
sbb
sbb
or
mov
insl
jo
je
test
xchg
out
push
pop
fnstenv
sti
mov
out
dec
mov
mov
xchg
cmp
xor
inc
daa
dec
xor
add
icebp
jge
jns
ret
pop
mov
sub
pop
pop
pushf
frstor
and
fidivl
or
or
mov
rcr
lea
adc
or
cmpl
add
cmpsl
jge
cmp
and
mov
lods
adc
in
nop
lret
aas
mov
xchg
dec
add
mov
repnz
add
popf
jmp
push
push
jbe
ja
adc
adc
cmpsb
mov
adc
aas
mov
out
mov
cmp
hlt
fcoml
add
jmp
mov
fs
mov
testl
pop
push
aas
outsb
pusha
and
popa
mov
pop
mov
popl
sbb
or
lds
pusha
xchg
jae,pn
loopne
lods
std
and
push
loopne
mov
adc
mov
push
xchg
jecxz
int
jae
mov
daa
shll
jb
mov
cli
fidivrl
xchg
rcll
movq
shll
aaa
cwtl
mov
push
dec
push
int3
sahf
pop
adc
out
adc
mov
jne
cmpsb
fsubrl
adc
mov
adc
add
loope
push
ret
in
push
jle
dec
adc
pop
adc
inc
xor
cltd
xchg
dec
int
movsb
in
daa
mov
popa
xchg
jge
or
mov
pop
addr16
add
pop
sti
or
hlt
mov
xchg
icebp
dec
iret
int3
lock
push
popf
rclb
jo
cltd
xchg
xchg
bound
push
test
mov
inc
les
sti
jp
insl
mov
mov
mov
and
jge
sbb
xchg
hlt
out
out
add
je
xchg
sbb
rorb
mov
push
pop
pop
mov
sahf
rol
pop
fldcw
adc
push
mov
cwtl
or
mov
aaa
cmp
cmpsl
in
pop
push
in
cmc
adc
push
push
pop
pop
mov
push
add
inc
push
pop
out
push
lock
adc
mov
lahf
mov
into
enter
mov
add
add
fwait
lret
int
sbb
out
fadds
or
insl
or
outsl
cmp
mov
cli
or
mov
add
adc
add
leave
xlat
push
dec
cmp
cmp
sbb
pop
fistpl
bound
sbb
inc
fnsave
jecxz
sarb
loope
out
adcl
jg
mov
push
dec
out
dec
clc
popa
sub
add
sbb
xchg
xchg
sarb
xchg
int
xor
lock
loop
jg
push
icebp
dec
xor
in
dec
repz
mov
push
pop
enter
call
iret
sbb
lret
add
adc
std
add
mov
ljmp
sbb
pop
fmuls
xor
dec
jmp
test
push
cmp
lret
loope
jg
xor
out
pop
push
jge
pop
and
not
cld
movsb
dec
push
fucomip
call
sub
fadd
gs
daa
add
les
add
sahf
ret
jg
sahf
jmp
push
and
pop
in
pop
das
mov
add
addr16
mov
dec
mov
inc
pop
or
cmp
adc
fsubrl
push
nop
test
and
jbe
test
cmp
dec
push
push
inc
xchg
test
fimull
mov
jbe
push
mov
scas
cmp
cmp
cmp
in
mov
fs
inc
mov
xchg
mov
jmp
into
hlt
push
scas
push
pop
js
cmc
sbb
sbb
addr16
xchg
adc
call
not
stos
or
jns
inc
in
sti
sbb
add
divb
int3
push
xor
lret
js
mov
lds
idiv
xor
sub
adc
push
pop
mov
jns
sarb
loop
repnz
push
dec
inc
pusha
xor
pushf
sub
fdivl
cmp
lcall
inc
xchg
data16
popa
jecxz
add
mov
pushl
push
inc
outsl
ret
xlat
xchg
push
ja
mov
mov
nopl
mov
adc
jo
sbb
and
ret
sbb
pop
loopne
int
ds
dec
dec
or
xlat
insl
scas
rorl
adc
mov
sbb
loope
xchg
out
xor
dec
mov
call
inc
dec
xlat
sbb
in
jae
gs
ret
sub
les
in
xchg
pop
add
dec
xor
movsl
cmp
push
scas
out
xchg
jbe
es
outsl
fwait
pop
pop
shl
iret
test
icebp
xchg
aad
pushf
shl
repnz
stos
jl
sbbl
roll
cwtl
lret
cmp
xchg
mov
adc
mov
in
fwait
ret
and
or
mov
jp
xor
sbb
mov
inc
loope
xchg
mov
mov
push
sti
push
fwait
cltd
loope
imul
pop
mov
out
cs
jae
call
movsb
pop
test
out
out
ja
fdivrl
aam
sub
int
push
rcrl
sub
js
iret
cmp
cmpb
mov
les
sbb
mov
ret
pop
xlat
sbb
fwait
ja
neg
iret
scas
mov
xchg
imul
pop
cltd
dec
or
dec
test
sub
fdivl
icebp
sets
sub
ljmp
inc
cs
out
dec
dec
cmpsl
enter
ss
mov
xor
mov
xor
push
pop
lret
xchg
push
lahf
jns
mov
aas
xchg
mov
and
lea
mov
pop
jne
call
aaa
adc
cmp
jno
and
cs
mov
pop
mov
inc
and
cmp
call
xor
push
or
push
dec
inc
fildll
sbb
inc
mov
stc
clc
ret
loopne
dec
pop
xchg
sub
xchg
and
loop
repnz
push
jle
fcoms
popf
sbb
jnp
or
dec
xchg
icebp
fcoms
je
insl
sahf
dec
sub
adc
and
daa
jge
sbb
insl
lret
mov
ret
add
push
repnz
and
test
xor
xor
fmuls
enter
pop
sub
mov
jl
pop
test
jecxz
pop
ds
mov
xor
cmp
dec
cmpb
sub
leave
sub
ret
insl
aaa
fbstp
loope
dec
gs
fildl
xor
mov
cld
bound
loop
xor
or
in
popf
shr
call
push
and
sbb
test
jp
movsl
push
fnsave
mov
inc
or
add
sub
sbb
pop
pop
subl
inc
dec
or
xor
mov
mov
pop
add
sub
jmp
sub
pushf
lods
adc
lds
jmp
jp
cmpsb
mov
dec
cmc
xor
add
out
push
dec
mov
jb
jle
pop
inc
jge
adc
mov
lret
pop
adc
xchg
cltd
dec
fs
dec
cltd
jne
cld
dec
aad
mov
call
push
outsb
js
movsl
iret
sub
adc
sbb
rcrl
mov
mov
pop
daa
es
mov
lds
out
pop
ret
fnstenv
or
outsb
jge
in
mov
adc
icebp
pushf
sbb
mov
inc
imul
leave
inc
mov
sbb
mov
jmp
movb
leave
jno
mov
hlt
cmp
add
sbb
jle
imul
out
inc
cli
mov
call
aas
jmp
jl
mov
cmpsb
loop
mov
mov
addb
aas
mull
test
mov
add
in
push
fsubr
jno
mov
data16
xor
or
and
stos
xchg
mov
in
push
jp
add
inc
cli
pop
out
ja
fimull
sub
loope
movsl
push
sbb
daa
pop
je
xor
aad
daa
sbb
push
inc
mov
loop
sub
adc
xchg
mov
mov
xchg
out
mov
lods
fsubrs
shl
xor
daa
jmp
insl
call
sub
fldt
xor
mov
inc
leave
pop
pop
repnz
cmpsl
sub
or
lock
fcoms
int
push
lcall
pusha
jne
out
mov
stos
in
cltd
inc
mov
jbe
mov
out
popf
jg
or
xor
sahf
shrb
loopne
pop
mov
aaa
mov
and
mov
je
adc
dec
sub
mov
mov
imul
sub
outsl
jmp
push
cmp
addb
in
push
test
jmp
xor
or
cmpsl
inc
sbb
add
mov
andb
jl
fsubs
or
int
test
scas
jp
out
mov
xor
mov
movsb
cmp
push
xchg
xchg
sbb
push
gs
sub
jne
sbb
pop
mov
push
jnp
ljmp
das
enter
and
xor
push
jmp
ljmp
arpl
lods
stos
fnsave
scas
cmp
sbb
mov
fldt
fldl
inc
sti
pop
sub
xor
lods
or
xchg
cmp
cmp
or
mov
pusha
push
in
mov
stos
mov
in
xor
push
addb
in
inc
mov
and
cwtl
in
iret
stc
xchg
jecxz
lcall
dec
pop
mov
pop
dec
cmp
inc
xor
mov
jne
push
pop
sbb
pop
push
arpl
mov
enter
push
insl
cmp
mov
mov
kxorw
out
flds
dec
mov
popa
shr
xchg
xor
test
nop
ljmp
pop
adc
jmp
jne
test
mov
mov
fldcw
or
test
insl
aam
add
scas
inc
aaa
orb
dec
xor
add
pop
jno
push
mov
or
test
mov
lds
mov
push
pcmpeqb
arpl
shrb
and
jno
mov
pop
jmp
adcl
js
mov
clc
xor
add
ret
pop
push
mov
cmp
lahf
fildll
mov
push
dec
daa
ret
pop
les
or
cmp
out
mov
imul
mov
push
stos
sub
xchg
mov
jae
cmp
pop
mov
repz
sbb
or
pushf
add
mov
aaa
xorl
mov
cmp
jb
das
add
lods
jno
sbb
pop
xchg
scas
lret
fld
and
loopne
ljmp
mov
push
cmp
push
and
dec
jmp
pop
fiadds
mov
out
xor
insl
iret
lods
push
popf
mov
test
stos
mov
xchg
daa
aaa
lea
jg
lods
adc
adc
subl
and
cmp
pop
jmp
sub
mov
mov
inc
jbe
loop
inc
jnp
and
addl
lahf
fisttpll
inc
push
test
inc
out
mov
xor
ds
cltd
sbb
adc
rolb
cmp
lahf
sub
rcrb
jo
push
jl
addr16
and
scas
loop
inc
std
mov
clc
fwait
pop
and
cld
mov
mov
lods
stc
ror
mov
mov
hlt
xchg
aam
jle
or
dec
mov
inc
xor
add
jge
iret
jecxz
push
in
mov
mov
fidivl
les
xchg
xchg
test
cli
push
mov
pop
adc
dec
movsl
leave
insb
jne
push
pop
dec
aaa
xchg
cmpsl
xchg
addr16
xor
mov
mov
mov
stos
ja
inc
fwait
bound
fisubl
call
fbstp
adc
xorb
dec
jbe
shrb
jns
sahf
loope
dec
sarl
sub
jno
popf
sub
mov
jge
in
adc
int
idivl
pop
mov
or
sub
stos
mov
enter
add
xchg
sbb
mov
inc
mov
mov
mov
xlat
add
and
sbb
pusha
push
add
int3
add
lret
dec
out
test
imul
push
repz
popa
pop
push
inc
nop
jno
mov
sahf
jg
fs
movsb
xchg
jle
movsl
rcrb
sahf
dec
add
call
shr
xor
push
fsts
dec
nop
mov
fdivp
sub
lret
sub
adc
mul
imul
fwait
mov
dec
pop
fs
scas
int
lcall
and
and
das
enter
inc
insl
and
idivl
popf
dec
in
cmp
dec
jg
jnp
pop
mov
sbb
icebp
mov
je
mov
mov
out
lret
jb
and
test
mov
shll
cmp
mov
cmp
out
jl
arpl
ds
stc
out
outsb
cmp
es
scas
mov
mov
outsb
pop
or
int3
fisttpll
notl
sub
jmp
xor
sbb
std
sti
pop
cmc
aas
push
jge
inc
xchg
dec
mov
push
imul
repnz
aaa
xchg
addr16
pop
test
cmc
mov
cmpsb
inc
nop
das
test
jp
and
fsubrl
into
loop
mov
mov
daa
movsl
rcl
leave
pop
test
leave
shrb
push
mulb
or
incl
inc
or
cmpsl
sbb
das
std
ss
and
faddl
jb
stc
and
jae
xor
pop
inc
pop
jnp
fs
test
inc
int3
push
jbe
push
inc
jmp
jle
sub
sbb
jbe
out
jbe
add
lds
mov
loop
cwtl
adc
and
sbb
lret
mov
in
dec
add
inc
std
ljmp
mov
loopne
sbb
dec
inc
push
add
inc
inc
and
inc
dec
pop
cmpsb
dec
mov
fisubs
xchg
aad
xlat
sub
ret
rcl
add
adc
jmp
and
push
mov
movsb
ret
or
loopne
push
insb
dec
sub
insl
cli
pop
cwtl
imul
scas
popa
mov
movsl
pop
icebp
fsubrl
mov
xchg
xor
sub
repnz
push
lea
push
std
xchg
rcl
imul
imul
adc
fistpll
sub
jbe
adc
mov
inc
jbe
aam
in
out
inc
jno
fldenv
cs
ja
xor
cmpsb
xlat
jne
aaa
or
pop
fstps
mov
popf
into
mov
xchg
sub
stos
rcr
xor
mov
push
mov
movsb
mov
lret
or
jbe
fisttpll
sub
jg
shll
inc
cmp
int3
cmp
out
lret
hlt
and
push
jo
leave
in
lcall
push
jl
aam
xor
mov
sub
pop
mov
js
shl
xchg
fidivl
mov
aam
addr16
push
sub
and
push
cmp
mov
pusha
fsubs
sub
decl
cli
int3
jg
stos
cmpsl
cmpsb
sbb
lds
stc
fsubrl
imul
xlat
movb
push
pushf
xchg
inc
adc
cmc
jae
xchg
pop
add
mov
xchg
fadd
scas
and
mov
push
insb
sbb
loopne
repnz
jmp
shlb
cmp
dec
hlt
das
out
lods
aad
push
mov
jno
int
nop
dec
mov
ljmp
and
out
dec
aad
dec
mov
mov
sarb
cltd
stos
aas
lods
outsl
out
shl
add
sub
and
stos
push
rorb
jecxz
add
push
movsb
pushl
adc
lods
fimuls
add
mov
and
lods
sub
leave
cwtl
out
mov
stos
mov
mov
dec
rol
mov
outsl
int
jmp
sbb
and
and
ljmp
cld
ss
xor
nop
push
test
xor
mov
stc
daa
lea
incb
mov
iret
sahf
mov
push
or
out
bound
sbbl
int
adc
jge
add
push
outsl
mov
xchg
mov
decb
sub
sti
das
loope
xchg
jnp
rcl
push
and
test
stos
mov
hlt
and
adc
test
sbb
dec
cs
push
into
pop
and
sub
repz
cmp
ds
or
pop
loope
std
push
icebp
cli
enter
stos
inc
dec
mov
cld
adc
adc
clc
jmp
arpl
sub
jle
mov
nop
or
lock
add
scas
testb
sub
jecxz
jo
ja
xchg
imul
push
popf
push
int3
push
push
jge
mov
cmp
adc
mov
push
mov
and
std
dec
xor
jmp
sbb
negl
push
mov
lea
jb
in
mov
cmc
imul
enter
scas
xor
out
inc
push
xor
sub
push
leave
sub
in
mov
daa
nop
inc
adc
pop
jne
mov
fcomps
mov
test
loop
cmpsl
in
fdivs
sub
and
inc
das
xor
gs
orb
movsl
or
stc
add
mov
fwait
pop
jecxz
adc
or
adc
mov
dec
repnz
scas
dec
inc
add
jecxz
xlat
lcall
xchg
xor
or
adc
aad
sbb
sub
pop
les
inc
mov
lods
test
out
ret
mov
pop
mov
cli
data16
scas
pop
pop
push
mov
push
sbb
mov
fstpt
mov
inc
test
pop
sbb
cmc
sub
nop
xchg
pop
ss
in
rcll
jns
jae
inc
fcompl
shrl
sbb
add
jne
pusha
test
push
push
movsb
cmc
stos
fistpl
xchg
je
push
xchg
icebp
dec
std
scas
cmp
pushf
push
ficoml
push
xchg
jp
xchg
insb
scas
in
pop
cmp
pop
mov
sbb
xchg
push
lcall
mov
data16
in
mov
out
push
sub
mov
pop
loop
mov
push
js
nop
outsb
jae
or
push
call
je
pop
or
and
sahf
adc
in
sbb
sbbb
dec
cmpsb
xchg
push
and
xchg
scas
cmp
mov
stos
adc
sbb
lds
adc
or
and
lcall
push
mov
jns
cmp
loopne
pop
add
or
adc
sbb
scas
icebp
aas
adc
out
hlt
push
adc
xchg
shr
nop
inc
sub
or
pop
cmp
inc
xor
aas
xchg
ds
push
bound
xchg
adc
jle
push
scas
inc
mov
inc
pushf
fwait
repnz
sbb
outsl
jmp
mov
fs
aad
or
aaa
jle
pop
sub
mov
insb
and
js
rorl
pop
or
mov
jo
cwtl
cmpsl
push
rclb
mov
mov
add
lret
daa
mov
xchg
mov
or
jge
xor
add
mov
sti
xchg
xchg
imul
push
cltd
add
fcomi
in
jecxz
xor
fisttps
push
inc
movsl
and
mov
mov
ficompl
aaa
int
pop
mov
mov
xchg
lods
xchg
loop
ss
xor
and
lret
int
push
push
pop
fcmovu
out
push
mov
in
and
pop
arpl
xchg
std
clc
or
or
lock
cmp
or
xchg
dec
mov
arpl
imul
xor
outsl
mov
xor
in
xlat
push
and
and
in
mov
pusha
mov
push
sbb
movsl
test
jnp
sti
test
int
fdivrl
mov
roll
std
adc
jmp
iret
in
std
mov
and
leave
push
pusha
add
mov
xor
mov
sub
xor
enter
mov
lcall
mov
add
sub
std
aad
mov
lods
add
and
lcall
insl
loop
shll
adc
dec
jae
jne
insl
or
jge
dec
loope
or
push
mov
or
xchg
hlt
mull
divb
dec
inc
jl
mov
loop
aad
std
cld
add
stc
or
mov
jnp
jno
addr16
popf
cmp
aas
in
cs
les
xchg
inc
add
les
pop
mov
imul
jmp
mov
inc
inc
mov
or
mov
rorb
mov
add
in
inc
popf
add
xchg
sar
sbb
jae
inc
lea
pop
add
mov
faddp
mov
loop
lret
bound
mov
ret
fisttps
mov
sub
rcr
jmp
mov
shlb
cld
ja
jg
out
pop
pop
or
cmpsb
cmp
mov
cmp
pop
xor
pop
aam
and
incl
jae
leave
cld
test
pop
movntps
push
scas
popa
icebp
dec
imul
daa
adc
sahf
pop
pop
gs
out
inc
inc
test
mov
orb
lock
mov
aas
pop
and
call
cmovae
jmp
inc
cmp
mov
sub
adc
push
xchg
sahf
dec
adc
scas
popf
imul
jmp
or
insl
jbe
xchg
movsl
push
jge
and
mov
dec
dec
cs
inc
xchg
das
mov
adc
dec
jb
xchg
ss
pop
ficoms
mov
sbb
imulb
xor
dec
leave
pop
movsl
repz
data16
call
dec
aad
or
ljmp
inc
mov
mov
movsl
int
push
and
inc
push
idivl
adc
jne
dec
sti
out
push
loope
into
cli
xchg
fs
into
mov
psrlq
push
mov
mov
add
jnp
arpl
cmp
cltd
nop
clc
dec
add
pop
push
mov
mov
or
cmp
aad
jae
iret
movsb
mov
inc
add
mov
mov
push
js
mov
ss
scas
xlat
test
adc
and
xchg
xchg
cmp
push
sub
sbb
in
sub
xchg
popa
xchg
xchg
dec
inc
xor
pop
in
rcr
sbb
nop
mov
push
mov
test
pop
in
aas
aad
std
popf
mov
add
scas
xchg
and
mov
sub
out
aas
outsb
leave
aas
and
data16
xor
leave
fists
mov
insl
fimull
insb
push
mov
aam
sahf
mov
jno
mov
dec
cli
and
mov
and
lds
aas
adc
nop
mov
dec
jbe
dec
mov
push
pop
iret
andb
pop
and
movsb
fs
xor
repz
popa
jmp
adc
fldl
add
jbe
jnp
movsb
adc
push
out
pusha
loope
add
push
and
mov
sbb
pop
popa
bound
jecxz
mov
lea
jne,pn
xchg
in
repz
lret
lds
dec
in
or
fists
jmp
imull
mov
dec
ljmp
mov
cs
fsubrl
and
inc
push
jecxz
inc
in
jecxz
lods
add
int
mov
cmp
jmp
sbb
jmp
adc
hlt
and
lcall
or
mov
and
mov
mov
cli
aaa
mov
push
mov
add
fs
mov
icebp
lahf
insb
imul
lcall
imul
jb
sbb
inc
mov
mov
incl
inc
je
les
cmp
loope
out
pop
mov
push
sub
sbb
hlt
add
cmp
das
inc
stc
lods
xchg
mov
add
push
xor
cmpsb
jns
popa
insl
mov
jne
pop
sub
and
fs
or
fidivrs
ret
dec
and
repz
sbb
aam
repz
jno
push
aaa
out
cmp
daa
xor
stos
sub
cmpsl
pop
xchg
xchg
mov
das
jnp
jae
shr
xchg
movsb
mov
ljmp
xor
mov
mov
es
out
and
lcall
mov
sahf
f2xm1
lods
stc
push
stos
sub
in
mov
and
stc
push
jge
push
push
jb
popf
iret
pop
add
sub
sub
mov
imul
shrb
in
in
adc
addr16
enter
xchg
mov
inc
cmp
imul
jmp
or
mov
push
outsb
dec
add
inc
jno
xchg
faddl
cmpsb
mov
in
push
jmp
push
pop
jnp
dec
dec
push
bound
push
testb
jle
in
int
mov
shlb
jle
lret
pop
aas
out
test
sub
popa
mov
fldl
roll
in
ficoml
movsb
mov
mov
mov
stos
xlat
pushf
repnz
mov
and
into
stc
mov
and
pop
orb
and
mov
imul
sub
adc
and
add
and
in
xchg
ss
push
idiv
call
or
add
lret
out
sub
or
fwait
or
or
jg
cmp
adc
leave
jle
cmp
cmp
sub
pusha
clc
push
add
dec
or
sbb
sub
sub
push
add
dec
dec
add
push
movsb
mov
in
mov
idivl
xchg
push
dec
push
or
and
imul
sbb
sub
pop
push
data16
cltd
push
std
jo
rcrb
cmpsl
int3
gs
pop
sub
arpl
shll
cmp
fld
jmp
lock
xchg
movsl
jnp
in
push
ja
jmp
jl
insl
push
inc
jmp
fsub
mov
mov
mov
add
push
xchg
das
sub
adc
mov
cwtl
test
pop
dec
das
repnz
retw
sub
rol
cmc
dec
xor
sbb
add
outsb
push
les
dec
pop
dec
xor
insb
inc
jge
orb
lea
aaa
cld
push
add
and
add
jge
dec
pop
xchg
pop
xchg
inc
push
inc
and
gs
not
mov
push
mov
popa
adc
jmp
pop
mov
xchg
and
lret
fdivs
out
cli
inc
dec
loop
lock
and
xor
jmp
mov
xchg
sub
inc
in
jl
and
add
sahf
add
popf
pop
mov
out
dec
jo
add
jl
push
inc
sbb
mov
push
add
bound
scas
inc
xor
fninit
shl
xchg
ret
sub
xorl
inc
xchg
cmpsb
cmpsb
mov
cltd
xchg
mov
fdivrs
stc
cli
nop
cwtl
insl
sub
push
sub
fmuls
call
rcrl
ret
sahf
push
push
push
pop
leave
ss
mov
sub
mulb
cld
push
mov
fdivr
pop
dec
rcll
jne
adc
ljmp
rclb
dec
or
out
lea
add
add
rcl
inc
jmp
mov
idivb
mov
not
and
ret
pop
addl
adc
push
fcmovbe
xchg
popf
sub
bound
pop
comiss
pop
add
jmp
fnsave
mov
sbb
mov
mov
mov
pusha
push
cmp
cmpsl
mov
fcmovu
jno
bound
jbe
ffreep
mov
mov
arpl
hlt
sti
scas
fbld
gs
mov
adc
fsubrs
mov
xchg
add
rclb
movsl
rcll
inc
mull
pushf
jg
sbb
jns
pop
dec
xchg
jmp
mov
outsb
cmc
mov
in
rolb
stos
and
mov
stos
aam
test
mov
pop
addr16
stos
jno
mov
imul
hlt
fstpl
repz
shl
es
stc
mov
sbb
sbb
mov
cld
push
adc
cmp
or
jp
mov
push
pusha
rcll
out
inc
sub
idivb
lahf
loop
jge
push
ljmp
push
push
jl
mov
push
mov
or
call
frstor
push
loope,pn
push
xor
adc
xor
addr16
fbld
or
pusha
daa
ljmp
stos
or
xor
daa
xchg
add
ss
gs
or
xor
mov
ja
call
das
or
cmp
icebp
push
ljmp
aad
imul
hlt
xchg
sahf
jp
js
xor
ja
sbb
sbb
into
jp
mov
xchg
aas
push
ljmp
imul
fwait
mov
inc
lret
repnz
cmp
push
leave
pop
pusha
inc
sub
rcl
into
pop
mov
sub
add
xchg
pusha
jbe
add
lds
sub
daa
icebp
leave
in
and
sbb
mov
aam
pop
jl
jmp
imul
in
bound
dec
scas
fcmovu
cmp
sti
aas
mov
inc
lock
mov
pop
add
add
add
jle
icebp
mov
inc
mov
adc
cmp
ss
rcl
jo
lret
sarb
mov
jnp
cmp
ljmp
das
cld
hlt
das
lahf
pop
out
mov
nop
test
mov
jo
jmp
loop
stc
xchg
fnstenv
aam
push
adc
push
xlat
jl
mov
rcrl
sti
push
inc
arpl
and
cmpsl
cli
jbe
dec
xchg
sub
mov
cmp
popf
pop
xchg
xor
bound
testb
movsl
sbb
sti
shll
push
loope
lds
insl
and
dec
inc
mov
rol
pop
pusha
shll
push
rorb
xor
or
xor
lods
mov
push
mov
push
popf
cltd
adc
fwait
sti
andb
push
inc
mov
adc
leave
add
lret
loope
shll
mov
ficompl
bound
push
shrb
in
and
repnz
andl
jnp
insb
fsubl
push
dec
popa
dec
push
out
cs
fsts
stos
xchg
loopne
or
jecxz
notl
loopne
xor
loope
hlt
mov
frndint
int
jnp
xchg
mov
jnp
hlt
mov
movl
fldl
shll
push
test
cmpsb
lret
fmuls
mov
dec
sbb
rclb
mov
imul
insb
pop
out
push
dec
and
xchg
mov
ret
push
xor
fnstenv
cmp
jae
sti
push
add
shll
fsubp
mov
sub
sbb
xchg
icebp
adc
int3
fwait
notb
jmp
push
jmp
mov
push
lret
das
mov
cmc
popa
popa
pop
jmp
js
clc
jb
adc
add
gs
mov
sbbl
push
aaa
fcmovb
cmp
add
fists
out
or
dec
out
mov
adc
adc
pop
jbe
dec
iret
xchg
mov
push
js
sub
movsb
jns
sbb
adc
inc
in
pop
dec
sub
xor
inc
mov
sub
in
in
out
cli
jae
mov
gs
and
xchg
xchg
jle
pop
mov
outsl
jnp
mov
bound
shrl
push
insl
into
popf
lock
and
test
mov
pop
rcll
test
sti
iret
cwtl
mov
xor
jne
dec
shrb
out
mov
sarl
iret
mov
jl
xlat
mov
inc
jle
mov
jbe
int3
out
dec
xor
cmp
mov
mov
lret
cld
push
leave
and
xor
test
sti
addr16
or
mov
aas
lock
es
jns
aad
push
xor
aad
xor
fmuls
and
test
pop
xrelease
cld
subl
xor
mov
inc
mov
int3
mov
sbb
xor
sub
xlat
mov
xor
loope
mov
add
xchg
movsb
mov
push
lcall
mov
xor
push
dec
pop
addr16
clc
fwait
sbb
pop
out
or
sub
and
mov
sub
dec
pop
adcb
xor
sub
nop
dec
aad
insb
int
or
dec
shl
jg
push
in
aaa
das
cmp
mov
ljmp
jnp
pop
sti
mov
popa
mov
dec
mov
mov
idivl
sub
xchg
loope
xchg
push
out
sbb
jmp
lret
enter
and
out
xor
cmp
dec
sub
adc
lcall
lea
out
gs
call
pop
sub
add
add
shl
mov
lods
fdivr
stos
adc
rol
jo
je
mov
out
dec
sub
and
xlat
nop
xchg
lahf
xlat
cld
xchg
jge
pop
fidivs
scas
out
sbb
sti
loope
adc
int3
dec
out
mov
pusha
inc
xor
leave
sbb
sbb
mov
insl
fdivrs
and
jp
pop
adc
orb
cltd
lods
lcall
cmpsl
add
repnz
push
mov
iret
adc
jno
aaa
cmp
in
ljmp
xor
pop
inc
std
inc
and
in
movsb
ja
xchg
sub
adc
mov
lret
movsb
int
scas
add
movsb
jge
into
repnz
xchg
scas
mov
cmp
in
and
jnp
mov
sbb
pop
clc
xchg
adc
dec
cli
shll
loope
iret
hlt
pop
adc
inc
mov
ffreep
xchg
cmpsb
jne
mov
movsl
push
sub
mov
leave
data16
add
pop
sub
out
adc
aam
xchg
jp
xchg
ljmp
cmp
sub
nop
incb
ret
das
filds
cwtl
cmp
mov
mov
outsb
test
xlat
int
ret
or
and
jecxz
add
mov
xor
daa
aaa
cmpsl
jmp
rcrb
lds
mov
mov
je
mov
ja
lret
arpl
jo
cwtl
dec
mov
nop
repnz
jbe
mov
mov
or
lods
decl
jecxz
sti
cmpsl
out
pusha
scas
inc
pop
mov
and
es
hlt
sub
sbb
pop
push
push
mov
jmp
xor
popf
outsb
mov
xchg
cmp
or
loop
lret
sub
stc
push
adc
into
loopne
dec
jns
xorl
xchg
daa
xchg
lds
pop
sbbl
jl
pop
dec
fimuls
push
ds
mov
bound
inc
in
shlb
adc
jns
sbb
push
insl
sbb
inc
cmp
cs
mov
sbb
jge
push
mov
lret
ljmp
cpuid
scas
popf
xchg
xor
xchg
pop
das
sub
orl
xchg
shl
int
pop
imul
jp
cli
call
shlb
add
pop
dec
cmpsb
sub
xchg
add
cmpsb
push
leave
jmp
pop
loopne
loopne
cmp
shrl
leave
iret
mov
call
pop
dec
stos
popf
or
jg
dec
loope
inc
jl
inc
mov
inc
popf
xchg
sbb
push
mov
sbbb
or
mov
nop
repz
adc
shl
fstl
mov
xchg
popa
or
jg
xlat
dec
fcompl
in
shr
pop
adc
repz
cmp
adc
push
and
mov
loope
dec
hlt
xchg
fidivrs
fld
inc
mov
stos
in
andl
popf
in
and
push
cld
out
dec
sub
pusha
test
inc
stos
roll
sub
lcall
lret
and
rcl
pushf
cli
add
cmp
scas
mov
cwtl
mov
cltd
jne
inc
dec
sub
adc
pop
aas
cld
mov
push
int3
out
adc
jbe
cmp
clc
daa
cmpsb
ss
mov
jle
jecxz
dec
movsl
mov
push
sbb
jl
dec
aam
cmp
adc
mov
mov
push
test
scas
lret
push
add
or
pusha
lcall
icebp
mov
lods
adc
jbe
add
push
mov
aas
lret
adc
jnp
push
das
les
fcmovnb
jl
fwait
xchg
or
jbe
fidivrs
jecxz
inc
or
mov
lods
lods
loopne
dec
mov
xlat
dec
inc
loop
xchg
rorl
sbb
cmp
loope
push
js
movsb
jmp
adc
dec
and
or
sbb
push
fbstp
lods
sbb
nop
push
ss
pop
jbe
xchg
adc
jno
or
sti
subb
cmp
inc
mov
lds
or
sub
int
dec
sub
mov
mov
cmp
cmp
mov
lods
xor
fxtract
sub
enter
mov
js
loop
cli
lock
test
cs
sbb
mov
imul
test
cli
sbb
pop
xchg
aaa
mov
ss
das
imul
and
dec
mov
lds
sbb
testb
inc
clc
xchg
enter
mov
push
mov
test
rcrl
and
cld
jp
fcmovb
pop
mov
jp
and
jmp
lock
mov
push
addr16
int
jno
out
dec
cmp
insb
cld
daa
in
aad
sarb
outsb
icebp
mov
and
dec
popf
pop
xlat
push
popa
jp
and
push
sbb
xchg
push
pop
pop
leave
in
into
pop
pop
or
and
scas
xchg
ljmp
dec
sub
int
xchg
push
pop
add
jge
jmp
aas
out
or
js
subb
sub
aas
lods
inc
inc
jo
icebp
into
xorb
push
in
adc
pushf
fsubrl
or
jbe
or
xor
mov
lock
add
aas
shll
je
inc
jae
cmp
jb
push
daa
mov
rcl
lcall
push
into
mov
ss
fldenv
cmpsb
jb
mov
and
jp
jecxz
inc
gs
fistpl
sti
movsl
ficompl
test
inc
xlat
adc
ja
inc
mov
gs
push
sub
mov
scas
pop
sarb
xchg
cld
xchg
ds
xor
or
cmp
cmpl
rorl
int
lret
mov
and
dec
cmp
aad
insl
sub
xorl
insb
movsl
jb
xchg
movsl
clc
out
je
inc
out
cmp
dec
push
popa
scas
in
inc
fstpl
sbb
jo
not
shll
xchg
out
dec
inc
push
decl
insb
mov
out
scas
xchg
popa
add
mov
fldenv
jns
mov
aad
cltd
inc
cld
call
std
leave
icebp
stc
out
sahf
mov
jmp
mov
cmp
cmpsl
add
mov
mov
vpaddw
sub
xchg
push
cmp
bound
cld
sbb
rorb
jnp
sysenter
insl
pop
ret
cltd
movsb
lret
ds
gs
push
xchg
mov
ja
shll
mov
jg
rorl
and
pop
sub
frstor
and
ret
cwtl
xor
bound
scas
mov
vmwrite
add
mov
push
test
sti
jge
out
shlb
mov
loope
scas
arpl
adcb
std
adc
and
push
inc
inc
nop
and
mov
xchg
imul
or
ja
mov
daa
loope
adc
inc
add
or
mov
loopne
mov
sbb
call
cmpsb
mov
xor
and
mov
jb
lods
mov
pop
lcall
push
pop
xchg
int
inc
xchg
bound
pushf
repnz
mov
pop
pop
mov
ljmp
sub
cwtl
or
arpl
dec
jl
fdivrl
push
out
imul
mov
or
lods
jb
jnp
out
xchg
imul
mov
and
add
pop
dec
adc
call
cmpsl
popa
lods
imul
scas
push
and
cs
push
pop
fistl
sbb
std
jle
test
cmp
in
mov
cmp
and
movsb
inc
cli
sbb
icebp
mov
scas
mov
xor
add
cmc
inc
mov
sbbb
pop
mov
jmp
loope
pop
and
push
popf
inc
shl
cmp
jmp
jb
cmp
test
cmpsb
out
mov
jge
lahf
push
push
dec
push
call
push
inc
mov
and
adc
sti
into
outsl
cmp
add
xchg
cmp
lds
push
mov
xor
dec
cmc
mov
lcall
cld
inc
pop
pop
in
aas
pop
or
mov
and
aad
addl
lret
pop
addr16
dec
aaa
int
test
data16
cmp
xor
jnp
cmpsb
or
in
jnp
adc
jg
fildl
ficompl
and
xor
xchg
push
es
jg
das
jle
inc
cmp
cmp
lods
fstpl
sub
xor
pop
cmc
mov
push
frstor
or
sub
mov
mov
fs
fcomps
daa
jmp
das
mov
jnp
out
stc
fisttpl
pop
push
mov
or
pop
ljmp
mov
int3
jne
jl
iret
xchg
scas
out
cmpsb
xchg
outsb
jg
cmp
in
jle
mov
es
xchg
pop
int
fistpll
push
das
xchg
push
out
idivl
into
push
adc
inc
add
xchg
mov
sbb
popf
push
data16
shrb
cmpb
cmp
arpl
cli
inc
cmc
add
andb
call
mov
jns
out
push
pop
fs
ljmp
callw
pusha
daa
out
mov
das
lahf
add
add
jb
or
sbb
pop
pop
stos
push
mov
leave
mov
mov
sbb
mov
fs
incb
addl
loopne
subl
cli
in
xor
repz
push
ds
cmc
data16
xor
push
xchg
in
pusha
cmp
push
fcmovnbe
popf
push
sub
ss
mov
sbb
lea
xor
std
and
scas
sub
loope
mov
imul
idiv
adc
add
test
jecxz
mov
aam
mov
sub
jno
pusha
jne
cmp
mov
pop
cs
lcall
adcl
insb
leave
inc
add
testb
ljmp
push
pusha
and
daa
repnz
mov
test
mov
outsb
imul
call
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
int3
and
ret
ds
push
cld
add
jb
iret
cs
xorl
adc
or
or
mov
and
xor
mov
js
into
jecxz
daa
ja
or
out
and
and
dec
sbb
cltd
xor
xchg
fimuls
mov
adc
addb
jbe
mov
pop
insb
xchg
cmp
adc
pop
xchg
mov
lods
push
imul
sub
dec
mov
and
jo
int
jae
bound
ss
jl
mov
inc
ret
popf
mov
and
jae
outsw
mov
dec
xchg
les
mov
out
sti
aas
fwait
lahf
xor
or
cmpb
sub
scas
into
pop
mov
jb
push
xor
sbb
into
jmp
stc
js
clc
rorl
or
pop
mov
xchg
fdivl
ficoms
push
lret
sbb
cwtl
shr
jbe
enter
cld
sbb
icebp
shlb
out
and
add
pop
sbb
nop
sarl
pop
call
xor
sti
sbb
shlb
dec
mov
clc
aam
sbbb
stc
jmp
push
fs
xchg
mov
cmp
pop
aas
test
add
add
pop
add
inc
xchg
sub
jle
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sbb
outsb
add
outsb
add
insl
