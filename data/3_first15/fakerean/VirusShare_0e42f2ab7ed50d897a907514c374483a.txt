xchg
add
mov
xor
add
xor
not
shr
and
mov
jmp
push
mov
lea
not
neg
mov
mov
rcl
xchg
jmp
mov
mov
adc
mov
shl
mov
push
xor
xor
jmp
lea
lea
lea
xor
and
lea
rcr
mov
mov
jmp
mov
lea
mov
xor
xor
neg
xor
mov
popl
mov
mov
jmp
mov
mov
push
mov
lea
not
push
add
shr
mov
xor
jmp
not
mov
xor
lea
mov
xor
lea
lea
xchg
xor
neg
jmp
mov
not
rcl
xor
shr
not
neg
push
neg
xor
mov
jmp
not
xor
mov
neg
mov
mov
jmp
lea
add
lea
xor
mov
mov
shr
mov
mov
decl
jne
rol
mov
xor
shl
jmp
mov
mov
ror
lea
and
ror
xor
jmp
lea
mov
and
lea
rcr
push
call
adc
xor
rcl
not
neg
not
mov
mov
jmp
xor
mov
xor
not
rcl
neg
xor
add
lea
neg
mov
xchg
jmp
push
mov
sub
push
push
push
add
lea
xor
mov
jmp
lea
add
not
xor
xor
xor
ror
lea
jmp
not
xor
lea
neg
mov
add
jmp
shl
mov
rcl
not
mov
xor
neg
lea
add
mov
lea
movl
jmp
pushl
adc
and
mov
adc
pushl
xor
mov
shl
call
xor
rcl
jmp
ret
mov
xor
not
mov
neg
xor
not
mov
lea
mov
adc
mov
and
jmp
rcl
mov
neg
xor
lea
shr
and
xor
rcl
jmp
xor
xor
not
ror
neg
mov
lea
neg
xor
ror
mov
mov
and
adc
jmp
lea
mov
rol
xor
not
xor
xor
pop
jmp
lea
xchg
mov
not
lea
not
lea
neg
lea
xor
neg
jmp
mov
add
lea
xchg
and
lea
mov
xor
mov
shr
mov
neg
adc
rcr
adc
jmp
rol
and
mov
neg
and
lea
add
mov
lea
xor
rcl
jmp
jmp
mov
xor
neg
lea
adc
xor
neg
not
rcl
mov
shr
mov
rcl
jmp
xor
xchg
add
rol
adc
shr
neg
jmp
lea
neg
xor
adc
jmp
xor
lea
xchg
mov
mov
mov
jmp
lea
xor
rcl
adc
rcl
mov
xor
shrl
lea
mov
mov
xor
xor
mov
jmp
lcall
jg
or
push
dec
test
gs
ljmp
cmp
hlt
sub
push
hlt
mov
addr16
call
mov
mov
xor
xchg
scas
sub
pop
dec
in
in
cmp
sub
cmpsb
js
movsl
sub
xchg
inc
es
dec
xchg
out
xlat
sub
mov
pop
push
jg
loop
shrb
push
mov
jge
pop
jg
outsl
sub
clc
mov
sub
ret
arpl
cwtl
scas
xchg
adc
xchg
dec
notb
jb
test
sub
inc
lahf
scas
jg
dec
xlat
cmp
test
xlat
aas
mov
roll
xor
jg
loop
jl
dec
mov
lds
sbb
pop
mov
ljmp
or
xor
enter
jge
cmpsl
test
add
push
or
imul
mov
out
clc
add
mov
add
cmp
sub
mov
and
xor
loop
jg
arpl
pop
ret
lahf
imul
jl
addb
imul
scas
mov
pop
xorb
push
mov
or
cmpb
aad
cmp
orl
pop
test
xlat
hlt
lcall
sub
imul
das
lret
push
fistps
repnz
adc
sbb
mov
pop
jg
adc
es
xlat
cld
stos
std
sbb
std
in
cmpsl
dec
adc
out
inc
aas
les
clc
hlt
inc
nop
inc
aas
les
orl
mov
imul
hlt
sbbl
sbb
dec
cmpsl
pop
push
xchg
mov
andb
xchg
aas
sbb
jge
jb
adc
mov
jae
sbb
add
sbb
and
cmp
out
push
dec
xlat
cmp
sbb
jnp
mov
stos
pop
add
dec
outsb
les
insl
aam
mov
lret
or
test
lods
push
push
adcl
outsl
pop
sbb
jne
dec
mov
gs
sbb
out
cmp
mov
mov
ljmp
mov
pop
rorb
mov
pop
push
cmp
xchg
dec
lcall
dec
jnp
inc
dec
jg
cmp
lcall
mov
dec
aam
xchg
fwait
hlt
pop
sbb
lretw
mov
aas
nop
loope
cmpsb
daa
mov
sahf
sbb
lock
pop
mov
adc
xchg
jle
mov
xchg
rol
in
andb
xchg
enter
fistps
or
lret
mov
ss
fnstcw
pop
int
out
cli
hlt
mov
fnstcw
adcb
mov
pop
sbb
mov
insl
outsb
xor
iret
data16
fsts
rcll
out
cmp
adc
lock
sbbb
jge
pop
or
out
sbb
in
mov
push
cmp
or
push
adc
xlat
or
sbb
push
sub
sbb
jge
xor
outsb
das
lock
jne
repz
jge
sbb
push
in
fwait
lds
sbb
cmp
mov
notb
xor
mov
shl
in
dec
js
or
or
in
mov
cld
movb
addr16
popa
xchg
sti
jne
dec
mov
gs
sbb
out
movb
outsl
cmp
out
repz
sbb
cmp
loop
cmp
jo
cmp
mov
jge
sbb
sub
sbb
jmp
xor
outsl
pop
vandnps
cmp
insl
push
sarl
out
inc
xchg
mov
addb
mov
pop
cmp
out
shrl
gs
cmp
in
cmp
out
jns
xlat
outsl
test
push
mov
jl
in
stc
iret
sbb
jge
jecxz
sub
mov
mov
jb
jge
dec
outsb
xchg
push
cwtl
dec
cmpsb
sbb
clc
out
cmp
outsb
xor
fwait
out
addb
cmp
rcrb
inc
mov
outsb
xor
insl
pop
das
sbb
das
imulb
jno
sub
dec
jne
xor
jnp
repz
fwait
adc
jle
daa
mov
mov
popf
idivb
adc
ss
mov
repnz
dec
arpl
dec
push
add
nop
ja
insl
pop
add
xchg
in
stc
mov
ja
insl
gs
or
sbb
mov
adc
mov
out
sbbb
mov
bound
cmp
jge
out
sbb
jge
inc
xor
xchg
pop
xor
out
dec
push
or
push
out
sub
dec
jbe
jae
shlb
rcr
sbb
divb
nop
inc
insl
insl
sub
mov
outsb
xor
adc
pop
jmp
pavgw
jl
cmpsb
pop
imul
rcl
or
in
daa
dec
lock
and
dec
xor
mov
xor
xchg
dec
pop
jb
js
jge
push
mov
jge
outsl
push
notb
sbb
jge
and
ja
repnz
jge
sbb
or
out
ds
jb
sbb
imul
adc
incb
cmp
cwtl
popf
jge
sbb
lea
cmp
inc
mov
sbb
jge
outsb
xor
test
adc
fidivrl
dec
xchg
cmpsl
inc
xchg
add
movb
nop
rcl
and
lret
jge
dec
xor
out
psadbw
cmp
sbb
insl
xor
shr
fisttpl
in
xor
sbb
xorb
rclb
out
mov
ljmp
divb
outsl
ds
and
xchg
out
mov
into
sbb
inc
and
mov
jns
jno
adc
push
jl
sbbb
add
jbe
cmp
in
xor
lcall
repz
je
adc
lea
cmpl
dec
pop
call
jl
adc
jle
stc
push
dec
lcall
mov
add
jle
jo
adc
adc
add
add
dec
mov
orl
add
inc
jp
pushf
pop
ja
insl
fxch
add
dec
or
add
lahf
cmc
mov
adc
mov
leave
movsb
dec
jl
stos
sbb
aaa
dec
cmovns
jg
sub
add
jbe
or
fidivrl
push
dec
insb
imul
push
dec
xchg
mov
mov
loope
imul
xchg
jb
dec
or
cld
enter
sub
arpl
mov
daa
and
sbb
andb
or
sub
je
movsl
push
fwait
enter
fidivrl
jns
into
cmp
xchg
rcrb
pop
testl
mov
sahf
jl
jl
jne
jae
sbb
data16
jno
xlat
pop
in
fcomps
lds
pop
mov
cli
dec
mov
mov
sar
and
sub
jge
out
sbb
sbb
ret
add
and
cmc
fsts
add
sub
pop
adc
fisubrs
jg
sub
repnz
cli
imul
sbb
cmp
mov
imul
jnp
jp
fisttpl
mov
mov
fiadds
test
dec
incb
push
sub
outsl
pop
sbb
stos
out
outsl
sbb
imull
int
add
outsl
xchg
jg
lds
lahf
mov
addr16
mov
lea
insl
inc
fmull
cmp
mov
sbb
pushf
mov
fwait
sbb
fwait
idiv
jp
mov
add
es
data16
xor
cmc
push
mov
mov
insl
xor
and
cmp
xlat
cs
and
push
pop
mov
mov
movsb
in
push
test
ret
xor
xchg
lahf
data16
pop
mov
ds
pushl
sub
mov
lret
push
mov
pop
cmp
or
fwait
roll
mov
pop
sub
mov
mov
push
imul
mov
orb
pop
movsb
lcall
sahf
insb
push
xchg
out
xchg
mov
pop
sbb
mov
dec
and
cs
ds
inc
in
sbb
mov
dec
xor
adcb
test
pop
int
sbb
stos
mov
lcall
mov
jno
frstor
cmp
jge
outsl
cmp
mov
dec
mov
mov
incb
inc
movb
dec
xorl
sub
pop
jb
and
inc
rclb
push
cmp
int
dec
xor
inc
das
mov
in
fmull
mov
fstpl
xchg
or
pop
mov
stc
jno
pop
call
cmp
push
jle
xchg
cld
outsl
popf
push
inc
xorl
rcrb
in
shll
sbb
mov
test
es
clc
sbb
out
or
pop
rcll
jne
adc
lret
shll
xchg
xor
xchg
push
arpl
adcb
inc
push
cmp
enter
insl
sbb
and
aaa
adc
adc
int
cmp
jg
daa
pusha
dec
in
push
cwtl
test
dec
mov
dec
inc
das
and
adc
push
jg
pop
mov
das
mov
rorb
push
sbb
rcr
xor
xor
test
in
mov
data16
lea
cmp
negl
mov
inc
xlat
jbe
cltd
rcl
lods
jb
xchg
mov
push
mov
fnstsw
push
je
push
push
adc
testb
loop
xchg
pop
dec
mov
and
mov
rorb
jmp
dec
mov
or
mov
mov
pop
push
idiv
pop
aaa
mov
pop
mov
fstpl
pushf
push
and
mov
push
push
insl
outsb
das
in
push
pop
sub
add
mov
add
or
imul
ror
cmpsl
push
das
aad
adc
dec
xchg
xor
sub
xchg
sbb
push
xchg
mov
xor
mov
mov
mov
mov
mov
pusha
mov
shll
sub
pop
nop
pop
rcll
jl
mov
pop
gs
or
clc
mull
mov
scas
dec
pop
push
cmpsb
inc
leave
out
push
imul
xchg
or
ss
outsb
std
mov
pop
lahf
loopne
sarb
lock
std
insb
inc
pop
xor
leave
adc
xchg
es
mov
mov
cmp
das
pop
sub
inc
inc
dec
adc
lahf
pop
iret
jno
or
adc
sub
cmp
mov
pop
cld
fadd
sub
push
ffree
out
sti
in
cmp
push
jnp
lret
aaa
lods
or
add
jne
push
sti
sub
lock
dec
jecxz
sahf
jno
les
scas
jb
pusha
sub
fnsave
sub
loope
xchg
xor
bnd
imul
mov
icebp
add
jg
pop
pop
or
and
mov
test
cmp
inc
ss
jne
lcall
shl
push
xchg
shll
jecxz
or
ret
xor
push
inc
lea
in
in
jno
sbb
pop
pop
cmp
cmpsl
mov
jp
dec
test
repz
sbb
mul
and
popa
sub
mov
ss
push
dec
adc
pop
fmull
stos
mov
clc
es
dec
push
pop
pop
pop
pop
cmpsl
pop
aaa
xor
addb
lea
push
fucomi
mov
xchg
movsl
cmp
mov
add
dec
and
xor
and
sbb
xor
inc
cmp
sub
and
dec
aaa
sub
imulb
outsl
push
sbb
dec
loopne
test
or
imul
pop
adc
cmc
lock
sbb
push
incb
push
and
aam
insb
fnstenv
xchg
jnp
sti
xchg
lods
pop
addr16
jge
imulb
ljmp
cmp
sub
in
or
push
or
dec
inc
push
ror
or
les
cmp
movsl
sahf
inc
inc
inc
inc
in
push
cmp
pop
jbe
ret
outsl
pop
push
fsubs
mov
in
or
adc
mov
rcr
inc
push
sbb
sub
jne
adc
add
lods
push
bnd
mov
push
xor
xchg
pop
jp
bound
adc
push
ret
push
cs
cld
xchg
adc
sbb
jne
push
and
repz
imul
xor
andb
mov
stc
aaa
rclb
sbb
je
inc
ljmp
pop
je
ret
xor
jle
mov
jle
xor
mov
jg
in
mov
nop
pop
dec
imulb
addr16
mov
pop
aas
jg
mov
jb
mov
pop
pop
cmpsl
mov
dec
jp
inc
jno
out
sub
int3
jnp
ret
fdivr
fists
push
pop
fcomi
mov
xlat
cmp
insb
call
cmp
clc
fimull
pop
adc
bound
in
jg
sbb
mov
push
loop
shrl
jo
mov
addr16
fdivrl
scas
repz
sub
ds
and
adc
xchg
pop
sub
add
adc
push
test
loopne
sti
adc
sti
adc
jo
xchg
jbe
push
pop
dec
add
or
imul
out
jle
bnd
fdivs
and
push
sbb
out
mov
repnz
aaa
fcomps
push
leave
sbb
and
ljmp
xor
imul
sahf
addr16
mov
fs
push
out
xor
dec
lock
out
pop
repz
test
and
xchg
lds
dec
stos
bound
sub
adc
dec
jae,pn
lss
xchg
push
add
test
jno
cmp
xchg
in
popw
jae
movsl
lcall
sarl
xchg
jo
loopne
fildl
aam
cltd
cmc
ss
jnp
sbb
inc
addr16
xor
jbe
mov
sbb
stc
pop
stos
test
dec
xchg
out
out
inc
shrb
xchg
mov
xchg
cmp
cmpsl
mov
inc
adc
pop
sub
pop
cmp
push
repz
int3
push
dec
xor
pop
popa
pop
or
aam
cld
pop
cmp
jae
cmpsl
cld
iret
sbb
xchg
cmp
pop
out
addr16
movd
int
mov
pop
sbb
jbe
fwait
repnz
out
cmp
sbb
pop
jo
and
mov
hlt
icebp
mov
add
xor
loope
iret
jb
test
sahf
js
imul
popf
out
cli
jno
or
cs
ja
pop
inc
mov
dec
adcl
pop
stos
dec
repz
push
sbb
push
add
push
push
lahf
cltd
ds
lea
jmp
fisttps
jns
aam
sbb
cmp
jne
stos
jno
pop
or
mov
scas
pop
cmp
mov
stc
cmp
pop
and
in
cmpsb
cmp
push
ss
pop
enter
cmp
adc
std
dec
int
pushf
in
jne
jae
dec
sub
lods
scas
cs
jno
scas
pop
dec
fs
sti
xor
push
sbb
stos
push
sti
and
pop
std
inc
int3
jbe
mov
lret
loope
mov
aas
popf
gs
movsl
shll
leave
insl
daa
mov
ja
mov
adc
scas
adc
sub
movsl
sub
aam
ficoms
ljmp
jno
mov
pop
hlt
pop
fimull
sbb
popf
inc
fdiv
sub
push
in
int
cwtl
bound
push
bound
nop
fdivrp
ljmp
out
adc
push
or
mov
xor
mov
push
cmp
xchg
ja
pop
pop
mov
out
cmpsb
cwtl
sbb
mov
loop
fbld
mov
ficoml
jmp
popa
jns
add
and
jmp
cmp
stos
outsl
push
ss
in
pop
jg
filds
insl
insl
jne
push
insb
mov
push
insb
inc
or
jbe
repz
test
mov
xor
sahf
call
mov
mov
add
outsb
push
jl
ud0
inc
js
pop
mov
hlt
rcr
xorl
testb
jmp
sbb
ret
adc
outsb
dec
loop
push
cli
inc
fcmovu
add
das
fidivrs
adc
ret
mov
testl
cmp
outsb
cltd
xlat
jne
pop
pop
pop
in
mov
jle
or
mov
inc
mov
inc
cmp
inc
popf
pop
ss
arpl
and
fdivrp
shrb
test
mov
dec
leave
arpl
fwait
subl
ja
xor
stos
fistpll
inc
xchg
or
jae
sbb
jo
repz
mov
notl
ret
daa
andb
cmp
inc
cmp
repnz
inc
sub
jne
leave
adc
leave
add
sub
xor
stos
repz
cltd
mov
mov
jg
into
jmp
xchg
mov
xchg
add
fwait
xor
test
cmpb
stos
dec
adc
push
in
addr16
clc
aas
cwtl
mov
xchg
decl
shll
inc
mov
movsl
push
xor
rorl
movsb
push
pop
lds
pop
pop
cltd
mov
lahf
or
sahf
jne
or
mov
sub
lods
mov
test
scas
pushf
jns
dec
mov
les
mulb
jns
insb
mov
sub
add
inc
xor
dec
sbb
jb
test
int
repnz
fisttpl
movb
in
push
insl
mulb
mov
fs
loop
mov
jbe
jecxz
xchg
and
iret
outsl
cmp
mov
push
jo
xlat
push
lret
int
call
adc
and
test
mov
cmp
arpl
mov
push
cwtl
jbe
add
jno
stos
cld
push
push
pop
aaa
mov
divb
lds
jnp
stos
int3
stos
mov
addr16
sqrtps
cmp
adc
pushf
sbb
push
popa
jmp
ja
ja
loope
and
jge
insl
push
cmp
repnz
and
pop
sbb
aam
insb
push
pop
cmpb
adc
aas
dec
sbb
dec
leave
sub
xchg
ljmp
mov
stos
add
adc
adc
lods
aas
pop
lahf
gs
in
and
adc
and
int
and
jnp
or
filds
inc
and
jecxz
xchg
push
push
mulb
sbb
or
jae
xor
push
jns
mov
out
in
in
jge
dec
inc
out
jle
outsb
pop
ja
mov
push
imul
jns
pop
mov
push
cmpb
push
push
mov
cmp
mov
sub
outsb
xor
loop
add
popa
sub
testl
mov
mov
pop
xor
loopne
imul
ja
rorl
stos
dec
loopne
xlat
xchg
inc
shrl
jae
js
mov
xchg
test
mov
xchg
sub
xor
mov
xchg
sti
jmp
or
sbb
jo
js
neg
cli
stos
and
hlt
push
cmp
notl
xor
in
mov
mov
mov
lahf
mov
pop
ret
cmp
cmp
pop
adc
rcr
ss
inc
cmp
push
jnp
cmp
fisubrs
insl
inc
add
pop
inc
adc
push
insb
add
mov
dec
outsb
xlat
in
lret
and
adc
scas
cmp
ret
add
aas
cmpsb
push
in
jno
popf
jp
shrl
rcl
and
ljmp
in
inc
rcrl
fs
test
cmc
jbe
icebp
std
andb
ljmp
or
mov
gs
mov
popf
jp
push
test
inc
and
aam
and
xor
in
cli
shll
sbb
sub
fs
arpl
cli
sub
aam
and
push
cmp
in
push
rol
adc
push
adc
pop
xor
sub
cli
add
jno
popf
jp
aaa
test
inc
aam
and
ljmp
in
xchg
pop
sbb
pop
dec
sti
movsl
arpl
add
mov
jbe
icebp
in
orb
frstor
popf
pop
dec
mov
dec
pop
add
mov
cs
pop
test
ljmp
in
push
ror
sbb
sub
data16
cmpl
mov
xchg
mov
dec
iret
inc
and
mov
out
pop
or
sub
xchg
pusha
ja
ja
mov
push
iret
pop
or
mov
pop
dec
dec
ds
lock
dec
adc
movsl
sub
sub
mov
imul
out
xchg
xchg
movsb
pop
adc
jecxz
cmp
push
mov
cld
pop
fcomps
out
mov
push
mov
dec
mov
jno
scas
push
pusha
jo
sbb
jb
stc
pusha
cmp
push
sub
out
ds
jg
js
aas
gs
sub
nop
pop
jp
push
add
in
jmp
sub
dec
inc
sub
aad
xlat
inc
sti
adc
sbb
push
push
out
aas
shlb
inc
roll
or
adc
and
bound
mov
rorl
push
add
in
lea
adc
inc
xchg
mov
jge
sub
inc
les
aas
xchg
and
pop
lret
cmp
addl
dec
lret
test
shll
arpl
movsl
in
leave
or
xor
push
jae
daa
loope
lret
pop
in
or
subl
jo
push
mov
adcl
ja
xchg
push
xor
stos
xchg
sbb
mov
sysexit
mov
pop
shl
cmpsb
pop
mov
js
or
xchg
push
je
jae
jecxz
xor
mov
or
fcmovnu
lea
sbb
sbb
test
mov
xlat
and
ds
jge
negb
cli
xchg
movsl
and
mov
rorl
clc
das
xchg
cmp
cmp
mov
fmuls
mov
and
icebp
sub
lret
aaa
adcb
pop
fildll
mov
cltd
sub
push
stc
std
ja
mov
inc
adc
mov
stos
jmp
gs
mov
pop
adc
popa
pop
orl
icebp
jne
cmp
repnz
jo
out
push
sbb
pushf
sub
xchg
daa
data16
adc
cwtl
imull
fucompp
int
hlt
rcr
adc
cmpl
add
insb
mov
stc
ja
adc
xor
xchg
sbb
adc
and
nop
divb
mov
leave
mov
pop
or
or
sbb
popf
scas
outsl
or
out
or
pop
imull
dec
dec
xor
into
add
fistl
dec
sbb
jae
dec
into
cmp
outsb
sti
fsubr
insb
add
jo
insb
add
mov
sahf
iret
inc
and
jne
lcall
mov
arpl
adc
xlat
pop
mov
je
xor
ret
sbb
mov
pop
pop
fwait
cmp
mov
xor
ja
jns
jle
or
out
jae
mov
les
jge
in
xchg
sub
sbb
mov
imul
in
enter
sbb
xchg
cmp
xorl
out
subl
outsl
or
cmp
loop
jno
ja
sbb
jl
xchg
pop
call
or
std
xlat
bound
push
testb
gs
adc
int
jg
or
and
cmp
sbb
sbb
pop
pushf
dec
shrb
pop
pop
sbb
inc
sbb
or
stos
push
jo
or
mov
dec
adc
sbb
or
or
mov
rcrb
pop
and
push
nop
sbb
shlb
loope
sbb
xor
ja
out
je
lcall
notl
pusha
mov
xchg
sbb
icebp
add
sub
mov
xlat
jb
jae
test
xor
sbb
xor
sub
push
iret
test
mov
int
cmp
cmp
jnp
sub
cmpsl
jle
sbb
cli
test
add
cmpsb
or
aam
add
sub
mov
adc
test
mov
aad
or
addb
xlat
cmp
mov
test
lods
fsub
fisttpl
mov
in
sbb
cltd
lods
out
xor
mull
cmc
sbb
or
out
mov
nop
in
mov
dec
inc
ret
scas
xor
out
mov
xchg
.byte
cmp
.byte
