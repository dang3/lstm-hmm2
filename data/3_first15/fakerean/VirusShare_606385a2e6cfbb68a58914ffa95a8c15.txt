jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
stos
inc
add
or
mov
mov
sahf
inc
add
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
sarl
xchg
add
add
sub
inc
add
add
pop
xchg
add
add
sbbl
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
xchg
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
inc
add
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
ret
inc
add
cmp
mov
cmp
xchg
inc
add
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
sbb
shr
push
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
inc
add
or
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
pusha
scas
inc
add
add
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
imul
lea
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
inc
add
add
add
out
cmp
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
inc
add
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
jg
mov
jl
cmp
jbe
jmp
lea
call
mov
mov
push
push
call
add
lea
call
lea
call
lea
call
jmp
push
mov
lea
call
jmp
push
mov
lea
call
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
mov
mov
mov
cmp
jne
movzbl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
xor
mov
mov
jmp
lea
mov
movzbl
movzbl
lea
push
lea
call
mov
call
push
lea
mov
push
lea
push
call
mov
add
add
cmp
jl
pop
pop
mov
pop
pop
add
ret
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
jne
mov
call
lea
call
add
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
je
testl
je
push
call
add
mov
pop
pop
xor
call
add
ret
push
call
add
jmp
push
mov
mov
mov
push
call
add
jmp
push
mov
sub
cmpl
je
leave
ret
cmpb
jne
cmpl
je
push
push
lea
call
lea
mov
mov
call
mov
mov
mov
andl
andl
push
lea
mov
mov
movl
movl
call
mov
test
je
mov
test
mov
je
mov
lea
push
push
push
call
test
js
mov
xor
cmp
setne
inc
push
movzbl
push
call
pop
push
push
push
call
test
js
pop
pop
leave
ret
andl
jmp
push
mov
push
mov
push
xor
inc
cmpl
jne
testb
jne
xor
testb
je
pop
leave
ret
test
jne
mov
mov
mov
push
push
mov
lea
push
lea
mov
call
add
mov
neg
sbb
neg
call
mov
shl
xor
pop
and
xor
pop
jmp
mov
jmp
mov
andl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
add
push
je
mov
mov
mov
push
xor
call
mov
cmp
jne
xor
cmp
mov
jne
mov
mov
push
mov
lea
mov
mov
call
mov
cmp
je
mov
mov
push
push
mov
call
mov
mov
cmp
je
movl
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
cmp
je
cmp
je
cmp
je
add
xchg
adc
mov
dec
and
push
lea
push
lea
push
mov
movl
movl
mov
mov
mov
movl
mov
mov
pop
scas
inc
add
jl
je
jl
js
mov
mov
mov
push
push
call
mov
test
js
cmp
jne
cmp
jne
mov
mov
mov
push
push
call
cmp
mov
jne
mov
add
mov
push
lea
push
mov
push
push
call
mov
lea
movl
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
cmp
jne
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
xor
push
lea
mov
call
mov
mov
mov
lea
push
push
call
test
js
push
lea
mov
mov
mov
mov
call
mov
cmp
mov
jne
mov
mov
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
push
mov
lea
mov
mov
call
test
js
mov
mov
cmp
je
movl
cmp
lea
jne
xor
lea
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
mov
mov
mov
push
push
call
cmp
mov
mov
jne
jmp
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
andl
andl
test
mov
mov
lea
mov
mov
je
mov
push
call
push
push
pop
mov
andl
push
lea
pop
mov
mov
call
push
push
pop
push
lea
pop
mov
call
test
pop
pop
mov
jne
mov
push
push
pop
push
lea
pop
call
push
lea
push
push
call
push
push
pop
push
lea
pop
mov
call
add
pop
pop
pop
mov
pop
ret
mov
pushl
mov
push
call
ret
push
mov
decl
mov
je
pop
ret
lea
movl
call
lea
call
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
jne
push
push
push
mov
movzbl
mov
xor
cmp
jne
push
call
add
test
je
push
mov
call
mov
test
je
test
jne
add
mov
lea
call
mov
mov
lea
call
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
test
movl
je
mov
mov
push
call
movb
movb
xor
pop
pop
pop
pop
ret
sub
cmp
ja
jmp
push
call
add
test
je
flds
push
push
fstps
mov
mov
call
lea
add
push
push
movl
movl
movl
call
flds
fstps
mov
jmp
push
call
add
test
je
push
push
mov
xor
mov
call
mov
mov
mov
mov
jmp
push
xchg
les
std
xor
mov
shl
sar
push
push
mov
push
push
xor
mov
call
inc
add
test
lock
mov
mov
mov
movzbl
xor
lea
and
xor
mov
mov
call
inc
add
mov
flds
fstps
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
arpl
cmp
xchg
cmp
shll
adc
and
mov
cmp
and
imul
cmp
cmpsb
daa
or
mov
cmp
push
cmp
popf
and
adc
and
adc
and
adc
daa
or
pop
and
cmp
enter
call
es
dec
es
sbb
or
test
cmp
mov
cmp
mov
cmp
lods
es
fldenv
cmp
or
cmp
mov
cmp
mov
cmp
out
and
mov
cmp
cmp
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
jge
cmp
int3
int3
int3
int3
int3
int3
int3
int3
movzbl
and
cmp
je
cmp
je
mov
movzwl
test
push
je
mov
lea
call
test
je
mov
mov
call
test
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
and
or
mov
pop
mov
ret
xor
ret
orb
xor
pop
ret
mov
and
cmp
jne
xor
inc
ret
push
mov
call
pop
ret
push
mov
sub
mov
push
push
push
mov
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
push
lea
lea
movl
mov
mov
mov
call
mov
lea
call
cmp
je
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
call
lea
mov
call
lea
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
mov
mov
test
mov
je
mov
push
call
mov
test
je
mov
push
call
lea
call
mov
mov
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
mov
mov
xor
push
mov
lea
mov
call
mov
mov
call
cmp
mov
mov
ja
lea
call
mov
pop
pop
xor
xor
pop
call
leave
ret
mov
pushl
mov
call
mov
mov
mov
cmp
add
cmpl
jne
lea
push
pushl
lea
mov
mov
mov
mov
movl
mov
mov
mov
push
mov
call
mov
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
mov
call
lea
lea
call
inc
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
call
lea
call
mov
cmp
je
mov
cmp
mov
je
mov
push
call
mov
push
push
lea
push
push
lea
push
push
push
mov
call
add
lea
call
lea
call
lea
call
pushl
ljmp
push
call
mov
add
add
add
cmpsb
rcr
add
jno
loop
les
mov
add
loopne
ja
lcall
add
lock
rolb
mov
in
mov
push
add
gs
stc
std
add
add
add
testb
pop
fists
add
add
call
popa
lret
in
negb
jge
les
add
mov
add
add
js
push
pop
push
add
lret
add
add
xchg
aad
stos
rolb
roll
mov
cli
jo
add
pop
mov
add
add
scas
cltd
in
add
add
test
add
cltd
in
mov
add
push
push
push
call
je
add
mov
add
add
push
add
add
rcl
jp
cmpsl
sar
lea
mov
lods
push
xchg
loope
add
push
movsb
add
add
add
shll
jmp
add
add
jne
out
add
lret
out
add
add
mov
add
add
lods
add
jns
mov
lea
pop
movl
push
push
call
cmc
test
add
add
add
popa
mov
mov
arpl
add
add
fldl
stc
add
mov
mov
add
movsb
add
add
mov
jne
lcall
leave
add
add
add
mov
add
testl
add
add
sbbb
fmull
pop
popl
push
push
push
push
push
push
push
push
push
push
call
add
in
jns
out
add
add
mov
add
add
add
out
iret
add
push
rolb
add
lret
enter
mov
int
mov
jp
add
mov
divl
push
xchg
cmp
add
add
xorb
add
imul
add
add
popl
mov
lea
pop
push
push
push
lea
push
lea
push
push
push
call
les
xchg
loope
push
add
add
enter
add
test
mov
call
sar
add
lret
jp
jp
xchg
addl
nop
add
add
lods
movb
add
mov
outsl
add
add
add
imul
push
add
add
stos
lcall
les
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
loopne
in
lock
mov
add
add
push
add
add
mov
pop
add
add
insb
iret
xchg
add
fidivl
mov
test
popl
lds
mov
push
mov
add
mov
fdivrl
add
add
jns
outsl
mov
mov
lea
pop
push
call
call
push
push
push
push
push
call
stos
movb
add
out
ja
fxch
add
pop
add
add
jecxz
add
mov
or
icebp
add
mov
shrb
pop
fadds
stc
enter
imul
mov
mov
cmpsb
add
rcl
add
out
jnp
push
xchg
add
add
jb
addr16
add
shr
test
pop
push
push
lea
push
push
lea
push
call
mov
xchg
jae
add
cmc
add
fsubrs
mov
add
jo
nop
add
push
add
add
pop
jne
lret
add
push
int
enter
je
lea
mov
aam
add
add
addl
add
jl
mov
nop
mov
lea
pop
call
jmp
ret
push
push
call
nop
sbbl
add
pop
add
aad
add
mov
icebp
fwait
add
mov
cmpsb
stc
add
push
add
xchg
mov
add
test
mul
xchg
cld
imul
cld
in
lea
lahf
jge
add
aad
add
push
in
ror
shlb
lret
add
or
inc
in
mov
push
lea
push
call
fdivrs
iret
add
cli
add
mov
cli
add
stc
repnz
mov
add
add
shrl
sti
mov
repnz
mov
pop
jl
rclb
push
push
fstpl
xchg
mov
add
add
in
add
call
test
add
test
add
pop
stc
std
add
in
mov
fiadds
add
mov
in
add
add
pop
add
push
push
push
push
call
in
jmp
push
add
notb
add
insb
hlt
add
add
rcll
xchg
add
add
add
add
mov
roll
xchg
mov
add
add
pushf
sahf
ljmp
leave
add
sbbb
add
lds
aam
bound
pop
add
add
push
lea
push
call
idiv
js
std
jne
mov
mov
add
out
mov
fucom
add
lods
rcrb
lret
je
ret
jbe
test
jmp
add
out
add
xchg
andl
fwait
movsl
add
add
in
out
jne
nop
add
xchg
iret
push
jl
xchg
mov
lcall
lret
fs
in
add
jne
cwtl
xchg
add
mov
xchg
in
fiadds
mov
lea
pop
mov
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
addl
repnz
add
lret
testl
push
lds
lahf
in
add
add
mov
hlt
cmc
fnstenv
mov
fcoms
movsb
add
add
out
ret
add
popa
mov
iret
hlt
mov
ret
nop
add
jnp
add
push
movsl
call
add
call
mov
and
add
push
push
push
push
push
lea
push
push
call
les
xchg
in
add
incb
out
sti
pushf
add
add
frstor
add
test
faddl
xchg
loop
add
loop
mov
add
add
mov
cli
push
repnz
loope
add
push
xchg
lds
add
jb
add
rolb
xchg
loopne
cltd
shrb
jns
hlt
lea
pop
add
add
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
jae
bound
ja
jmp
add
loopne
jo
jnp
scas
add
add
add
add
add
add
add
ja
ret
lcall
push
add
add
mov
add
add
add
je
add
mov
test
loop
add
test
addb
push
imul
mov
and
adc
xlat
enter
lea
push
push
push
lea
push
push
push
call
mov
jmp
ja
outsl
stos
aad
scas
jne
add
xchg
lea
push
mov
add
add
add
add
lock
lds
add
fiadds
mov
int3
jmp
add
xchg
push
pop
add
mov
orb
pop
add
add
cmc
in
outsl
add
aad
lods
stos
movsb
add
xchg
add
mov
mov
push
mov
icebp
mov
lea
pop
mov
push
push
push
push
push
call
cmpsl
mov
add
add
test
add
les
add
add
roll
add
add
je
add
mov
mov
rclb
add
add
sti
add
data16
mov
add
add
sar
lock
add
add
add
add
jecxz
jns
movsb
add
mov
lea
pop
xor
push
push
push
lea
push
push
push
push
call
nop
fildl
mov
jnp
shrl
xchg
cwtl
push
mov
add
lds
jae
add
cwtl
fwait
test
lock
add
aad
fiadds
mov
call
stc
xchg
add
add
mov
std
jle
add
mov
fmul
add
imul
lea
pop
add
push
push
sub
not
push
sub
add
sub
add
sub
dec
pop
add
dec
pop
push
push
push
push
push
push
push
call
jmp
rolb
bound
add
shlb
ljmp
jno
jl
add
add
add
loope
add
jo
mov
popa
bound
add
insb
outsl
add
push
mov
in
push
mov
sahf
lds
aad
add
faddp
add
lods
popa
add
fwait
int3
add
mov
lea
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
sti
pop
add
add
jne
add
add
iret
pop
mov
add
sbbb
cli
jne
add
add
add
mov
mov
add
add
add
negl
sbbl
add
mov
jno
movsb
mov
add
add
cwtl
popa
pop
mov
aam
bound
call
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
jno
mov
popa
pop
push
mov
ret
add
fisubrs
add
out
rorb
add
mov
sti
mov
xchg
pop
add
ja
add
js
loopne
add
add
scas
add
mov
add
ret
mov
aam
bound
pop
mov
push
push
call
cltd
mov
addb
scas
add
test
fbld
mov
arpl
add
add
sar
std
popa
add
add
add
nop
pop
lea
pop
push
roll
add
mov
data16
jae
outsl
add
add
fdivl
jno
mov
add
addb
add
data16
lea
pop
movl
push
push
push
push
call
mov
add
shrl
push
pop
add
add
mov
in
aam
add
outsl
add
gs
mov
mov
pop
out
rcrl
jnp
push
mov
outsl
add
repnz
jmp
add
add
icebp
add
jecxz
int3
lock
mov
add
add
fmuls
mov
bound
pop
lea
push
push
call
add
clc
fildl
mov
mov
add
xchg
cwtl
add
mov
pusha
add
rcrl
xchg
add
lock
mov
in
out
cltd
pop
mov
in
jns
rolb
add
add
gs
loopne
aad
mov
add
mov
pop
sti
add
movsl
into
in
les
pop
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
add
popf
add
add
pop
pusha
js
add
int
jb
add
in
shll
add
movsb
in
hlt
add
jno
add
jmp
aam
add
cli
push
add
out
mov
call
push
mov
jp
jno
pushf
add
add
mov
add
loope
add
data16
add
add
popl
push
add
sub
jne
pushl
push
lea
push
lea
push
push
push
lea
push
push
call
int3
add
in
add
pop
add
add
add
lret
xchg
insb
mov
enter
push
add
add
test
add
mov
lret
mov
movsb
ficoml
repnz
add
lods
outsl
ljmp
stos
hlt
add
mov
add
jp
add
lahf
lods
popa
leave
jns
int
std
jne
jns
gs
arpl
mov
popf
mov
xchg
cltd
movsl
mov
lea
pop
call
push
push
call
add
jnp
pop
add
bound
enter
xlat
aam
popa
xchg
mov
add
add
mov
add
rorb
lret
scas
add
jl
bound
xchg
add
into
stos
add
stos
add
add
frstor
add
mov
add
add
add
mov
fs
add
xlat
add
add
hlt
lea
pop
pushl
pushl
push
lea
push
lea
push
push
call
add
add
add
addl
js
add
repnz
insb
fildl
cwtl
xchg
fnstsw
add
mov
ficompl
xchg
mov
ljmp
add
scas
add
fidivrs
popa
add
mov
add
idivb
dec
add
mov
push
lods
js
movsl
add
pop
mov
popa
pop
add
mov
mov
lea
pop
call
push
push
add
push
and
add
ror
lea
sub
inc
shl
add
pop
add
dec
dec
pop
push
lea
push
lea
push
lea
push
push
lea
push
push
call
jno
fisubl
divl
flds
leave
imul
add
shlb
jns
out
mov
push
xchg
add
add
mov
xchg
je
loop
pop
cli
add
xchg
sahf
mov
mov
xchg
pop
add
int3
mov
add
add
outsl
mov
lea
pop
pushl
call
push
push
push
lea
push
push
push
push
push
call
test
add
neg
nop
mov
add
add
cltd
pop
add
add
add
add
add
sti
cmc
add
jbe
add
xorl
les
add
movsl
add
add
test
xchg
fisubrs
xlat
adcl
pop
cmpsl
add
stc
fld
fsubrl
add
xchg
loope
cmp
ljmp
push
push
push
sub
ror
push
and
add
shl
shr
sub
sub
shl
rol
pop
shr
pop
push
lea
push
push
push
push
lea
push
push
call
push
add
jne
xchg
arpl
add
add
loope
cmc
push
shrl
fdivrs
add
test
add
add
jno
add
lret
mov
add
add
push
add
loope
jp
lret
repnz
jnp
push
mov
sarb
movsb
add
repnz
bound
push
push
push
push
lea
push
lea
push
push
push
call
add
xchg
xchg
add
popa
pusha
push
stos
push
shll
cmpsl
jns
add
xchg
je
push
hlt
add
add
mov
mov
movl
add
add
sarl
add
add
add
jbe
enterw
add
jmp
mov
cltd
popa
fiadds
movl
sbb
push
call
push
push
lea
push
lea
push
push
push
push
push
push
call
add
iret
mov
mov
push
add
movsb
fwait
add
mov
add
add
add
nop
imul
xchg
xorl
leave
cmpsl
out
add
add
fadds
add
add
push
mov
jp
test
add
add
lret
pop
mov
add
test
lea
sar
mov
pop
add
clc
xchg
lret
add
pop
mov
push
push
push
lea
push
push
push
lea
push
call
imul
imul
pop
add
ficompl
shrb
out
mov
ja
xchg
add
add
xchg
xchg
jge
loopne
mov
cltd
fcmove
pop
xlat
add
add
lods
js
add
add
addr16
fldenv
lea
fidivrl
mov
add
jnp
mov
add
add
pusha
sbb
push
push
push
push
push
push
push
push
push
call
arpl
mov
subb
mov
mov
add
sahf
add
add
out
mov
xchg
jge
add
pushf
add
add
xchg
aam
add
int
add
add
add
add
lds
pop
add
movsl
add
lcall
add
lea
pop
mov
push
push
lea
push
push
call
popf
fldl
add
cld
out
push
push
cmpsl
add
lret
add
mov
add
movsl
stos
lods
stos
lcall
jmp
add
add
jp
cmpsb
add
out
test
mov
pop
test
add
lods
jmp
push
mov
add
add
add
cmc
add
add
push
cli
add
add
adc
pop
in
ret
add
add
push
lea
push
call
push
add
pusha
add
add
sti
jne
ljmp
pop
in
mov
add
add
add
nop
mov
add
cmc
movsb
roll
in
cmpsb
out
add
push
testl
out
add
rolb
mov
jnp
add
jmp
cmpsb
mov
lea
pop
add
mov
xor
push
lea
push
push
push
push
push
push
push
push
push
call
pop
add
xchg
add
std
pusha
jnp
xchg
scas
jmp
movl
add
add
add
mov
js
push
add
mov
jl
add
test
add
int
bnd
in
add
add
add
xchg
jecxz
mov
outsl
stos
enter
mov
test
add
push
sub
cltd
mov
lea
pop
add
push
push
lea
push
lea
push
push
call
movsl
data16
add
jbe
in
add
push
stos
add
clc
xchg
cli
add
imul
vpmaxub
add
xchg
out
out
icebp
pop
push
add
xchg
push
scas
mov
add
mov
add
add
xchg
out
call
push
pushf
pop
jle
fiadds
add
add
add
add
insb
add
cld
lea
pop
push
mov
push
push
push
push
lea
push
lea
push
push
push
call
add
add
enter
add
add
jne
add
add
xchg
add
pushf
repnz
mov
cli
mov
leave
add
fucomp
loope
aam
hlt
jae
pop
add
out
jmp
in
enter
iret
popa
repnz
enter
jns
add
add
outsl
add
scas
pop
mov
test
ja
add
pop
mov
add
cld
lea
pop
xor
push
push
lea
push
lea
push
lea
push
push
call
lret
loopne
jp
xchg
add
lahf
add
test
shlb
add
add
add
xchg
add
add
out
push
add
call
add
add
addl
pop
sahf
add
repnz
out
add
mov
out
add
je
add
add
test
lret
mov
lea
pop
add
push
push
push
push
push
push
push
call
out
mov
push
add
add
rol
add
shlb
fyl2x
add
loopne
mov
mov
add
lret
lret
roll
add
add
add
add
xchg
add
imul
aam
je
jmp
aad
mov
add
mov
ficompl
hlt
popa
icebp
std
repnz
filds
std
test
xchg
lods
clc
popf
ret
mov
mov
lea
pop
add
pop
push
lea
push
lea
push
call
rolb
add
add
add
arpl
cld
filds
jmp
add
lods
push
fnstcw
add
mov
call
add
mov
mov
add
lahf
add
mov
testb
xchg
ja
xchg
add
sar
add
cmpsl
add
ljmp
mov
loop
xchg
add
add
in
pop
add
push
test
je
mov
mov
lea
pop
mov
xor
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
push
jnp
add
add
stos
sti
mov
movsl
bound
js
push
add
repnz
add
add
add
shr
mov
fildl
test
add
popf
mov
stos
add
repnz
scas
cmpsl
xchg
xchg
stos
jae
add
cmpsb
sti
add
lds
incb
mov
incb
mov
push
mov
neg
add
pop
push
mov
xor
push
lea
push
lea
push
lea
push
push
push
call
push
ja
movsl
add
mov
add
add
mov
loope
add
out
mov
add
test
int3
js
fstps
mov
pop
add
in
jno
pushf
out
add
add
add
movsb
add
mov
add
cwtl
mov
push
cmc
add
rolb
add
add
negb
cmpsb
scas
imul
rol
fists
mov
add
pop
sub
push
push
push
push
lea
push
call
push
add
lret
jbe
add
out
mov
add
add
hlt
fidivrl
loop
popf
mov
lea
int
cmpsb
add
pop
add
flds
les
jl
add
add
add
cmpsb
hlt
mull
jnp
add
add
pushf
lret
int
test
pushf
add
into
mov
movb
scas
push
mov
add
mov
mov
mov
lea
pop
pop
rep
push
push
push
push
push
call
bound
add
add
add
int3
add
pop
mov
add
mov
clc
mov
add
add
add
mov
lods
add
pop
out
scas
addl
mov
lds
add
add
add
xchg
icebp
hlt
add
add
push
addr16
add
bound
jns
fwait
add
adc
pop
mov
add
push
not
lea
lea
not
pop
add
push
push
push
push
push
push
push
push
call
jb
in
mov
imul
xchg
add
fiaddl
pusha
jno
add
add
add
fildl
push
mov
xchg
pusha
movsb
add
cld
ret
add
cmc
mov
test
mov
add
add
add
add
loop
addb
jbe
lock
out
stc
subl
add
shll
push
mov
lea
pop
add
mov
push
push
lea
push
lea
push
lea
push
lea
push
call
add
sahf
add
add
cmpsb
stos
ljmp
test
add
jo
jge
bound
add
add
cli
mov
in
out
mov
fs
jle
rolb
rolb
mov
add
aad
add
push
add
lcall
add
out
mov
aad
mov
lea
pop
xor
push
push
lea
push
push
lea
push
push
lea
push
push
call
out
jo
jmp
add
enter
add
mov
pop
movsb
pop
mov
add
add
add
out
lret
add
add
movsl
jo
add
loopne
xchg
mov
add
lcall
add
cmpsl
fdivr
add
add
xchg
popa
add
arpl
stos
add
loop
imul
fisttpl
pop
add
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
std
add
jnp
add
mov
add
in
xchg
add
lea
call
add
leave
add
add
mov
add
mov
push
rcll
jle
fiadds
mov
faddl
add
add
pushf
push
iret
mov
jbe
add
nop
xchg
pusha
je
jle
loope
cltd
mov
lea
pop
mov
push
push
push
push
lea
push
push
call
add
addb
imulb
add
xchg
outsl
cmc
jbe
ret
roll
fwait
mov
testl
add
js
xchg
xchg
add
add
add
rcrb
fsts
mov
add
push
lds
add
loope
pop
jo
movsl
add
mov
sahf
add
aam
pusha
mov
subb
add
hlt
lea
pop
xor
push
lea
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
xchg
mov
add
add
out
lcall
mov
gs
add
test
shlb
jb
int
xchg
rolb
add
add
add
mov
mov
idiv
add
les
rolb
cltd
test
add
add
cmpsb
pop
xchg
rolb
lea
pop
add
push
xor
shl
pop
mov
push
push
push
call
fcomi
arpl
lret
leave
xchg
pop
adcl
fldt
lret
xlat
popf
add
add
add
ficompl
jne
add
ljmp
fdivrl
addb
fs
xchg
add
jmp
add
arpl
loopne
xchg
xlat
in
jbe
rolb
cli
movsb
nop
pop
roll
imul
add
add
roll
mov
xchg
pop
xor
push
push
push
push
push
call
add
mov
add
add
add
pop
add
xchg
test
push
movsl
xlat
mov
add
loop
testl
jns
mov
stos
xchg
add
divl
push
add
pop
cld
popa
cmc
out
add
add
add
mov
data16
add
push
enter
add
add
add
out
add
mov
int3
lea
pop
add
push
push
push
call
pop
fwait
je
pop
add
int
movb
mov
mov
stos
ja
mov
add
add
lods
add
add
stos
xchg
add
xlat
ret
push
push
add
add
pop
mov
add
add
add
add
xchg
add
mov
popa
sbbl
cli
js
loopne
add
lea
pop
add
add
push
ror
pop
mov
push
push
dec
inc
shl
push
xor
add
add
sub
xor
pop
shr
rol
not
add
pop
push
sub
sub
sub
add
pop
pushl
call
push
not
xor
ror
pop
push
push
push
xor
push
or
not
add
not
sub
ror
pop
rol
ror
inc
sub
pop
push
inc
sub
lea
pop
push
push
push
push
push
lea
push
call
cmc
flds
add
mov
data16
add
add
add
mov
je
rcll
add
add
push
scas
jae
add
test
add
add
arpl
add
add
add
add
cld
jns
out
lcall
xchg
pop
fdivrs
nop
lret
adc
les
add
mov
push
push
call
incb
lret
push
jle
jb
jl
pop
mov
add
add
stc
mov
cltd
pop
jmp
call
add
push
pop
add
jle
mov
in
add
jp
xchg
add
iret
add
loope
ja
lock
cli
mov
add
repnz
add
mov
jmp
add
add
mov
std
in
add
push
push
cltd
add
mov
out
mov
mov
addr16
call
mov
push
push
push
lea
push
push
push
call
add
add
loope
mov
test
iret
add
scas
mov
test
test
add
lds
frstor
add
fdivl
stc
add
mov
add
mov
add
mov
cwtl
out
rolb
xchg
add
mov
call
lcall
add
add
pop
lock
mov
add
add
xchg
add
add
mov
adc
push
push
lea
push
push
lea
push
push
push
push
call
add
sahf
jmp
push
add
mov
add
add
fmull
test
stos
faddl
add
add
movsl
cmc
add
lock
out
xchg
push
popa
incb
fldl
in
int3
add
add
push
orl
sbbl
push
scas
add
jl
add
fwait
add
pop
add
stos
xlat
add
push
mov
add
rolb
nop
repnz
repnz
add
add
pop
mov
add
push
not
pop
add
add
mov
push
push
lea
push
push
lea
push
lea
push
push
call
movsb
mov
add
add
xchg
icebp
lods
add
add
fildl
add
movl
flds
cmpsl
pop
int3
shrb
add
mulb
jno
pop
stc
rcll
les
add
add
push
rcl
cmpsl
stc
cmc
add
rcrl
sahf
mov
add
ja
iret
pop
addl
xchg
loopne
push
xchg
movsl
rolb
insb
fiadds
mov
lea
pop
xor
push
push
push
lea
push
call
stos
movsl
fidivrl
in
add
xchg
add
mov
std
lret
mov
mov
add
add
add
mov
adc
mov
add
jnp
orb
add
jl
add
je
repnz
add
add
icebp
jecxz
add
mov
add
mov
lea
pop
add
push
not
add
inc
pop
add
push
mov
push
push
push
push
push
push
push
call
les
fistl
add
add
jae
jb
pop
std
add
add
add
addr16
jns
add
add
jp
cld
mov
fucomi
mov
mov
addr16
clc
jae
cld
add
add
add
test
add
add
add
add
outsl
add
fstpt
in
add
add
add
add
xchg
mov
hlt
lea
pop
xor
push
push
push
call
add
pushf
add
cmpsl
out
shll
addr16
add
add
add
jmp
add
add
mov
out
rolb
sti
jmp
add
loop
rcrl
mov
aad
lods
add
xlat
xchg
lods
add
add
jp
cwtl
jb
mov
stos
xchg
add
mov
mov
stos
add
add
add
addr16
ja
add
pop
add
data16
add
movsl
in
add
mov
lea
pop
add
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
lret
int
call
add
add
outsl
rclb
sti
stos
test
test
jae
add
mov
add
add
rolb
testl
outsl
mov
xlat
add
fadds
cmpsl
pusha
loope
mov
add
jns
add
pop
add
add
jno
add
mov
xchg
rcl
add
fiaddl
add
andl
sbb
add
pop
push
push
call
add
lea
xchg
rolb
hlt
jecxz
add
mov
mov
shlb
insb
lods
loop
imul
add
add
add
add
pop
pop
add
add
add
out
jmp
aam
xchg
cwtl
mov
xor
add
add
pop
add
xchg
cmpsb
scas
lods
mov
add
clc
add
add
cltd
add
lcall
mov
add
pop
mov
xor
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
mov
mov
loopne
mov
add
into
add
add
add
ja
shrl
jns
lahf
shrl
add
xchg
arpl
int3
add
popf
add
jl
scas
add
in
pop
add
mov
add
fadds
add
test
ffreep
sahf
mov
mov
negb
jb
add
add
negb
add
pop
rep
mov
xor
push
push
push
push
push
lea
push
call
xchg
mov
out
jno
add
push
movsl
add
add
add
test
add
xchg
add
fwait
stos
add
add
clc
test
test
xlat
pop
add
jmp
xchg
mov
add
mov
add
lods
out
loope
mov
roll
scas
scas
sti
add
add
add
add
repnz
call
add
jl
mov
lea
pop
or
je
push
inc
pop
mov
push
push
push
lea
push
push
push
push
push
push
lea
push
call
in
out
popf
hlt
add
pop
add
add
add
bnd
add
add
push
add
les
jno
in
lcall
add
add
add
xchg
add
jle
fmull
hlt
pop
push
cmc
icebp
andb
repnz
andl
add
add
pop
add
out
cmpsl
add
add
jle
insb
imull
and
xor
push
push
push
push
call
call
fs
push
add
in
test
add
add
push
add
pop
add
add
popf
popa
test
add
jp
mov
mov
call
add
add
fadds
add
jle
xchg
add
xchg
add
fildl
pop
add
enter
add
sahf
clc
loope
out
sahf
add
xchg
out
movl
sahf
add
aad
les
les
lea
push
push
push
call
pop
add
xchg
add
jae
add
movsb
in
leave
jnp
cwtl
jecxz
call
add
test
fsubrs
aad
cld
out
test
push
jne
pop
add
pop
xlat
testl
mov
scas
lds
jbe
mov
add
mov
push
jmp
add
add
je
jae
push
loope
mov
lea
pop
mov
push
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
mov
mov
add
add
mov
add
add
mov
int3
add
lcall
mov
add
push
scas
bound
lahf
jle
add
mov
add
scas
add
add
cltd
add
mov
in
outsl
add
mov
fsubr
mov
add
add
add
add
mov
lea
pop
xor
push
lea
push
push
push
push
lea
push
call
lret
fdivrl
filds
mov
orb
jo
pusha
pop
push
add
add
stos
add
test
lods
mov
mov
add
xchg
add
add
add
add
jnp
sahf
add
test
add
test
add
mov
sahf
jne
add
add
pop
add
add
push
shl
not
ror
pop
add
push
push
not
pop
mov
xor
add
push
lea
push
lea
push
push
push
call
jge
leave
add
add
filds
add
imul
mov
add
add
scas
lock
stc
je
add
loop
add
shl
filds
pop
mov
sub
add
stos
add
add
xchg
rolb
add
pop
add
add
mov
add
shrl
mov
push
xchg
les
add
adc
pop
push
lea
push
push
push
push
lea
push
push
call
mov
leave
push
popa
add
add
add
insb
sti
add
icebp
add
movsl
ja
push
xchg
imul
mov
roll
mov
lahf
add
jae
xchg
fnstcw
popa
out
xor
jecxz
je
mov
add
add
stc
add
ja
fadds
mov
in
jl
add
stos
xlat
jae
add
nop
add
pop
rep
mov
xor
push
lea
push
push
call
imul
jp
pushf
insb
data16
ficoml
add
add
add
mov
addr16
add
xchg
add
mov
cld
mov
xchg
sahf
pop
fbstp
add
jo
add
gs
add
add
pop
test
in
mov
xchg
fidivrl
add
push
add
add
push
out
mov
add
add
add
pop
or
je
push
push
call
push
scas
scas
add
lods
add
roll
gs
add
add
loop
add
mov
push
jnp
data16
lea
sbbl
leave
add
jmp
sahf
add
mov
mov
add
cmpsl
fadds
pop
xchg
incb
add
add
popa
std
add
add
add
in
jnp
testl
add
mov
rcrl
add
push
mov
lea
pop
mov
add
add
push
not
pop
rep
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
repnz
add
mov
cmpsb
add
cli
mov
arpl
add
cmp
pushf
nop
data16
popa
add
mov
add
add
ror
xchg
add
repnz
imul
aad
fistl
pop
add
add
add
xchg
flds
call
flds
push
add
ljmp
and
pop
push
push
shl
push
push
pop
add
ror
shr
sub
add
pop
rol
pop
pop
push
not
rol
shr
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
call
add
jmp
add
jmp
ficomps
cwtl
xchg
add
add
jmp
jb
add
add
pop
add
add
add
add
cltd
add
add
push
mov
cmp
sti
insb
add
mov
add
add
js
in
mov
add
leave
rol
push
mov
lahf
sbb
mov
sub
insl
in
push
push
push
push
push
push
lea
push
call
mov
jecxz
push
mov
add
mov
push
add
add
add
mov
mov
sahf
lds
xchg
mov
iret
out
add
add
add
cwtl
pop
nop
jns
xlat
add
lea
fldenv
mov
xchg
loop
loopne
out
gs
pusha
addl
add
mov
add
mov
call
fmull
inc
and
jmp
push
push
push
call
add
iret
add
jecxz
mov
out
mov
lcall
add
jmp
mov
in
lahf
xchg
repnz
rcrb
addl
add
mov
imul
in
shlb
add
add
shrl
fcmovu
frndint
add
add
add
add
mov
lea
pop
mov
add
push
push
push
push
push
push
push
push
lea
push
push
push
call
add
mov
jl
mov
add
mov
add
out
add
add
xchg
add
lea
add
nop
cwtl
jecxz
imul
add
add
ficomps
add
add
jp
pop
sti
add
in
loope
iret
mov
scas
ljmp
add
clc
add
add
add
jo
lds
loop
out
mov
lea
pop
push
push
add
dec
pop
push
push
mov
push
xor
xor
rol
rol
pop
pop
push
add
not
add
pop
pop
pop
push
push
call
push
add
push
mov
jo
add
add
pop
jp
jge
rorb
jecxz
pop
push
loop
test
add
sahf
jno
mov
cli
pop
mov
ja
add
std
add
mov
icebp
fbstp
pop
mov
add
shll
mov
and
aad
fwait
iret
push
shll
jnp
jle
stos
jns
mov
mov
add
add
add
pop
bound
lock
les
leave
push
lea
push
push
push
push
push
push
push
call
push
test
sarb
roll
add
add
cld
mov
out
cmpsb
adc
movsl
jle
add
mov
add
mov
jno
add
add
test
add
pusha
add
popf
add
std
push
mov
scas
add
sar
add
fstl
fsubr
add
add
fwait
out
stc
mov
out
pop
in
cld
lea
pop
ret
push
lea
push
push
push
push
lea
push
push
push
call
mov
lock
insb
add
fsub
repnz
lcall
lret
in
mov
add
lods
add
add
popf
xchg
call
roll
add
jbe
add
data16
xchg
div
pop
add
add
add
fcomps
add
insb
fs
lret
jge
movl
movsl
add
add
sahf
add
int
xchg
pop
add
mov
lea
pop
push
mov
add
push
lea
push
call
add
xchg
int
mov
add
pusha
mov
add
jmp
stc
add
push
add
add
out
add
jno
add
repnz
shrb
addb
push
add
add
xchg
test
add
mov
pusha
add
add
jns
pusha
add
add
pop
lcall
add
add
shlb
add
les
push
push
lea
pop
push
push
lea
rol
inc
pop
push
movl
push
dec
dec
pop
addl
test
je
push
inc
rol
pop
mov
pop
pop
push
sub
sub
pop
pop
pop
push
sub
ror
pop
leave
push
lea
push
push
lea
push
call
add
add
jns
add
add
fnstenv
lods
add
icebp
xchg
mov
mov
add
movsl
repnz
icebp
shll
shlb
andl
push
sahf
shr
add
lahf
mov
mov
add
add
push
fucomi
pop
add
hlt
add
enter
add
je
add
jmp
mov
push
fwait
rolb
int3
lea
pop
ret
push
push
lea
push
push
call
out
fwait
stos
add
xchg
lds
leave
add
add
imul
into
add
add
aad
loopne
jecxz
cmpsl
loop
mov
add
lea
add
push
add
incb
mov
add
add
add
rolb
jbe
mov
mov
fucomp
add
cwtl
add
xchg
xchg
add
add
add
not
mov
jnp
add
add
pop
mov
push
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
mov
fildll
fiadds
add
add
in
add
arpl
push
add
lds
push
subb
xchg
add
test
add
add
add
jmp
lcall
lcall
xchg
jb
add
add
popl
add
mov
add
add
add
add
xchg
mov
data16
cld
push
push
lea
push
push
push
push
call
add
enter
push
add
add
add
lcall
add
stos
hlt
pop
lret
fcoms
into
ficoms
mov
jmp
mov
add
pop
add
loope
add
out
cli
les
push
mov
test
fwait
add
sahf
arpl
cmpsl
imul
ja
cltd
jle
stos
xchg
add
jns
add
add
cld
lea
pop
push
push
shr
inc
rol
pop
push
push
push
push
push
push
push
push
call
mov
add
add
add
in
pop
fucomp
add
movsb
add
cld
push
add
mov
cwtl
rcl
add
add
test
gs
mov
shll
add
repnz
add
add
repnz
in
add
jae
popf
mov
jne
mov
into
call
xchg
mov
mov
lea
pop
push
push
push
push
lea
push
call
add
rcrl
add
push
ljmp
sti
mov
mov
out
pop
add
fiaddl
pop
add
mov
jno
push
aam
add
cmp
ret
add
add
add
jecxz
add
cmpsb
ret
pop
push
lock
jl
sti
fistps
aam
clc
mov
cwtl
mov
fildl
aam
add
test
mov
push
jns
int3
lea
pop
testl
push
dec
lea
sub
pop
addl
push
push
push
push
call
mov
add
fldl
add
jmp
add
add
insb
addb
mov
arpl
pop
int
add
lret
add
test
out
test
mov
iret
add
jbe
push
add
push
add
out
in
gs
bound
test
int
in
mov
push
jns
jmp
jle
add
add
je
mov
lea
pop
call
mov
pushl
push
push
push
push
push
push
push
lea
push
call
cmc
add
je
data16
add
icebp
xchg
jp
add
insb
mov
add
add
cmc
add
add
add
pop
add
ja
fildl
add
add
popf
add
in
mov
push
in
add
add
negl
add
add
mov
add
add
add
hlt
addr16
add
add
pop
movsl
add
cld
lea
pop
push
push
push
push
lea
push
push
lea
push
push
call
imul
mov
add
cwtl
xchg
add
testl
call
mov
add
xlat
cld
scas
pop
in
std
mov
mov
mov
pop
add
add
mov
iret
gs
xchg
add
mov
xchg
jecxz
add
mov
add
icebp
fcomp
jecxz
lods
add
pop
bound
les
xchg
mov
pop
icebp
jl
je
pop
mov
mov
lea
pop
push
call
cmpl
jne
push
sub
sub
pop
pop
push
push
push
push
lea
push
push
push
push
call
add
mov
xchg
push
mov
scas
add
iret
fiadds
clc
repnz
pop
push
add
leave
mov
clc
push
pop
add
pop
pop
add
add
add
into
js
lods
add
fnstcw
push
out
sbbl
cmpsl
je
cld
cld
arpl
lret
push
je
mov
stos
stc
pop
add
add
add
jl
mov
lea
pop
pop
pop
pop
push
sub
pop
leave
push
xor
ror
pop
ret
push
push
push
push
push
call
mov
add
add
jnp
add
mov
add
jne
cli
popa
add
add
add
int3
add
add
shlb
jmp
imul
add
push
test
int
ja
leave
fldt
jp
lods
add
push
data16
imul
mov
add
push
push
push
push
push
push
push
push
push
push
push
call
add
add
je
push
icebp
ficoms
out
cwtl
xchg
scas
add
roll
jne
ret
add
add
add
add
mov
add
add
outsl
mov
lcall
fsts
add
add
mov
addl
nop
jle
mov
iret
add
add
jmp
add
add
push
push
add
add
test
sub
push
lea
not
lea
pop
push
push
push
push
call
add
add
push
into
xchg
in
add
icebp
add
int3
add
test
add
arpl
call
rcl
out
mov
clc
add
jno
shrl
stos
add
fiadds
add
add
popa
js
add
mov
lea
add
add
jne
add
je
imul
inc
cld
add
lea
push
lea
push
push
push
push
push
push
call
iret
scas
lret
lret
cmc
jl
mov
jbe
add
test
add
idiv
imul
add
add
stc
ret
add
add
lret
in
imul
add
or
add
add
xorb
add
scas
pop
jo
iret
test
mov
add
lret
add
add
call
arpl
scas
call
add
push
add
les
mov
lea
pop
push
push
push
push
call
popa
stc
pop
lret
mov
push
fwait
jne
rcr
insb
add
add
add
pop
test
mov
stc
js
pop
jecxz
mov
cmpsl
jle
mov
add
jmp
int3
in
add
ret
sarl
add
js
add
scas
pop
xchg
into
add
mov
in
push
push
add
add
xchg
movb
mov
add
pop
call
push
call
push
shr
pop
subl
cmpl
jne
pop
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
pop
ret
addb
mov
add
add
add
xlat
add
push
arpl
testl
iret
fldenv
lret
add
jae
add
cmpsl
movsl
pop
add
mov
jp
add
add
add
mov
pop
scas
xchg
test
scas
jno
filds
push
add
mov
lea
pop
pop
push
push
push
push
push
push
push
push
push
push
call
jb
add
loope
push
aam
faddl
pop
add
mov
cmc
cmpb
popa
lods
scas
into
jl
add
push
add
int
mov
lods
add
add
xlat
icebp
movsl
xlat
xchg
xchg
mov
testb
add
add
add
sar
jp
add
lea
add
fldenv
add
bound
add
add
add
cmp
add
mov
lea
pop
pop
push
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
add
jl
pushf
add
xchg
add
add
add
mov
mov
mov
add
data16
add
cwtl
mov
pop
mov
loope
shr
add
add
add
push
outsl
add
add
jno
clc
idivl
xchg
lods
add
xorb
out
into
mov
add
shlb
int3
cltd
pop
add
pop
leave
ret
push
ror
dec
pop
push
push
dec
lea
pop
mov
add
push
push
ror
shr
pop
push
push
push
push
lea
push
push
push
push
push
push
call
lods
mov
test
add
pusha
mov
mov
fdivrl
add
mov
into
out
add
add
add
sti
add
add
cmc
cmpsb
movsl
mov
in
fwait
lea
mov
mov
cltd
je
lds
add
xchg
int3
jnp
movsb
jno
pop
add
add
xchg
lds
pop
mov
push
xor
pop
lea
sub
mov
push
sub
pop
shr
push
add
xor
ror
pop
add
mov
push
pop
mov
push
xor
pop
add
push
sub
pop
add
push
push
push
push
call
js
scas
add
test
in
xchg
lds
mov
arpl
mov
mov
add
clc
lret
roll
add
negl
add
add
add
add
ljmp
in
out
add
jns
add
jl
bound
cwtl
add
mov
add
imul
jmp
mov
lea
pop
mov
mov
cmp
jne
push
add
lea
add
pop
cmp
jne
push
lea
lea
add
pop
mov
push
lea
pop
movl
jmp
mov
push
push
call
mov
push
add
neg
jmp
shl
xchg
add
mov
mov
cld
lea
test
popf
xlat
imul
add
out
add
mov
test
mov
add
addl
add
lret
push
cmp
nop
leave
add
mov
icebp
add
add
jp
xchg
lock
add
pop
add
pop
mov
sub
jne
mov
push
rol
xor
pop
movl
jmp
mov
push
sub
rol
sub
inc
pop
mov
cmp
jne
mov
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
les
add
add
add
aam
clc
jno
mov
jb
lods
xchg
jnp
pushf
lcall
push
add
mov
add
lods
add
add
fiaddl
in
cmc
add
add
imul
test
xchg
cld
mov
push
mov
int
loope
add
mov
jecxz
add
add
pop
movl
jmp
push
shr
sub
pop
mov
push
push
push
push
push
call
hlt
in
add
repnz
xchg
add
add
add
jno
add
pusha
leave
cmpsl
shlb
xchg
aam
shl
add
push
xchg
filds
add
lods
fdivs
add
les
add
xchg
mov
pushf
lods
add
rcll
hlt
add
test
push
add
add
add
mov
mov
push
add
lea
pop
cmpw
jne
mov
push
rol
pop
movl
jmp
pushl
push
pop
pop
mov
push
pop
mov
mov
push
push
xor
inc
push
or
not
add
shr
ror
sub
shl
add
pop
add
shr
pop
push
push
push
push
push
push
push
push
lea
push
push
call
out
xchg
ret
mov
filds
test
stos
mov
add
int3
shrl
mov
add
add
xchg
mov
aad
add
add
add
imulb
xlat
into
xchg
cmpsl
cltd
mov
add
jbe
addb
add
stos
pop
mov
test
pop
testb
push
push
lea
rol
rol
pop
call
cmpl
je
push
push
shr
rol
shl
push
push
pop
add
shr
sub
rol
add
sub
pop
shl
add
pop
push
xor
sub
pop
push
push
shr
dec
sub
add
pop
call
cmpl
je
push
push
add
add
push
or
not
add
sub
lea
sub
shr
sub
xor
inc
sub
pop
ror
dec
inc
add
pop
push
lea
sub
sub
pop
push
push
push
push
call
add
add
cmpb
xchg
add
into
stos
add
jne
pop
hlt
ret
add
lods
imul
add
les
testl
lods
stc
mov
add
jle
pop
iret
mov
xchg
add
push
data16
mov
repnz
fwait
add
scas
add
add
std
rcr
in
fsub
mov
lea
pop
call
push
push
call
add
add
mov
sti
add
xchg
add
push
add
add
js
add
xchg
test
xchg
xchg
out
pusha
hlt
roll
add
pushf
pop
jecxz
test
add
add
mov
ljmp
add
pop
push
add
pusha
or
js
int3
fldz
ret
faddl
add
push
push
shl
shr
lea
rol
push
xor
add
not
shr
sub
shr
lea
add
pop
xor
pop
push
rol
shr
sub
pop
push
call
push
ror
add
ror
pop
cmpl
je
push
push
ror
rol
push
or
not
add
sub
lea
sub
pop
add
shl
pop
push
push
push
lea
push
push
push
push
push
call
jmp
test
movsb
pop
jmp
movb
add
fcomps
sarl
push
add
iret
mov
pusha
mov
add
add
pop
scas
add
mov
push
ret
test
push
shl
in
add
add
mov
test
add
add
into
add
add
pop
fwait
add
int3
push
movsb
les
mov
les
add
in
mov
lea
pop
push
call
cmpl
je
push
push
not
dec
shr
push
or
inc
add
sub
rol
pop
inc
shr
inc
pop
push
push
push
call
js
enter
add
jb
ljmp
add
rorb
out
add
enter
pop
add
add
jae
mov
add
push
call
testb
pop
push
rcr
leave
mov
fdivr
add
jae
stos
add
shr
pushf
add
lret
jp
add
ljmp
les
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
add
flds
add
add
movsl
pop
pop
add
pushf
add
add
lcall
leave
stos
add
add
mov
add
add
add
ret
cli
fsubl
gs
push
add
roll
push
in
add
jl
add
mov
hlt
add
mov
add
mov
call
jae
je
add
pop
call
push
sub
pop
cmpl
je
push
push
sub
add
sub
push
or
inc
add
inc
sub
add
pop
not
rol
xor
sub
pop
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
fldl
lods
add
add
add
xchg
aam
mov
add
add
add
pop
add
icebp
add
movl
cli
in
push
negb
add
stc
mov
pushf
add
mov
lea
xchg
add
add
add
js
mov
add
outsl
lret
mov
lea
pop
push
call
cmpl
je
push
push
shr
ror
push
push
pop
add
sub
sub
not
add
pop
pop
push
shl
ror
add
dec
pop
push
call
cmpl
je
push
push
shl
dec
inc
push
xor
add
dec
ror
add
inc
sub
add
pop
inc
pop
push
xor
rol
xor
pop
push
call
cmpl
je
push
push
add
lea
inc
lea
push
or
not
add
rol
ror
sub
lea
pop
xor
dec
xor
pop
push
push
push
push
push
call
lcall
add
push
cld
pop
mov
mov
divl
add
jns
add
add
add
add
cmpsl
test
stc
mov
mov
lcall
data16
mov
jmp
ficoms
mov
movb
fstpt
add
add
xorl
outsl
add
mov
add
pop
push
call
push
push
push
push
lea
push
lea
push
push
call
add
add
ljmp
xchg
pop
xchg
shll
add
or
add
testl
add
add
xchg
and
xchg
enter
outsl
add
fcmovne
enter
jnp
add
fidivrl
imul
add
sbb
mov
scas
add
add
add
xchg
into
mov
sti
fwait
push
lret
mov
lea
pop
cmpl
je
push
push
ror
rol
inc
shl
push
and
add
shr
shr
sub
add
add
pop
rol
add
add
pop
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
xchg
lret
mov
adc
addr16
add
push
lods
add
popf
add
test
test
idivl
xchg
les
call
add
scas
test
cmpsl
add
mov
xchg
push
add
movl
hlt
push
aam
jmp
add
jo
xchg
add
mov
out
add
data16
pop
add
hlt
lea
pop
push
call
cmpl
je
push
push
sub
push
xor
add
rol
sub
dec
add
shr
rol
pop
not
sub
pop
push
not
pop
push
call
cmpl
je
push
push
push
or
inc
add
dec
dec
sub
dec
sub
dec
pop
xor
add
shl
pop
push
push
push
push
push
push
push
push
lea
push
call
pusha
add
test
loope
pusha
fwait
cmpsb
fldl
add
add
mov
add
rolb
add
mov
add
add
roll
movsl
arpl
add
add
je
add
add
add
addr16
cli
out
loop
sbbl
add
clc
je
iret
jmp
add
test
add
add
add
sahf
cmc
pop
add
pop
push
push
push
lea
push
call
aad
xchg
mov
add
stc
mov
aad
call
xchg
mov
jge
push
add
add
repnz
pop
xchg
add
add
add
add
fistl
fildl
add
les
jne
in
add
popf
mov
cmpsb
data16
into
add
outsl
iret
mov
add
roll
add
rcrl
add
add
add
fmull
into
and
add
shl
pop
cmpl
jne
push
add
sub
shr
pop
mov
movl
jmp
push
push
call
add
jl
fcomi
icebp
jecxz
movl
add
xchg
insb
jmp
add
std
xchg
mov
mov
add
movsl
jno
add
add
xchg
cmpsb
add
mov
xchg
mov
test
fmul
add
xchg
les
or
add
mov
int
pusha
mov
mov
jns
add
icebp
add
int3
lea
pop
xor
pop
pop
push
push
call
add
add
add
mov
adcl
loope
loope
ja
xchg
add
add
add
mov
add
xchg
sbb
iret
pop
add
in
stos
push
stos
ret
lret
jbe
je
add
arpl
add
aam
add
mov
mov
add
enter
jecxz
mov
lea
pop
pop
pop
leave
push
lea
push
push
push
lea
push
lea
push
call
leave
enter
add
mov
andl
lret
data16
mov
add
add
add
add
roll
out
add
add
pop
fldcw
add
call
movb
add
add
int
mov
push
lret
pop
idivl
add
fadds
aam
add
fstpl
mov
lea
pop
ret
push
mov
push
push
push
call
push
jbe
lods
addl
add
test
mov
lahf
jp
popa
push
jno
in
pop
xchg
add
sahf
mov
fisttpl
adc
test
add
push
movl
jl
xchg
add
mov
in
lods
in
add
push
mov
movsb
fcmovb
add
push
add
mov
sbbb
lret
mov
movl
or
add
cmpl
jne
push
push
ror
xor
push
or
not
add
xor
inc
ror
add
sub
dec
pop
inc
pop
push
xor
shr
pop
pushl
push
lea
push
push
push
push
push
call
data16
orb
jge
add
stc
add
push
add
add
pop
push
mov
add
add
add
add
jnp
flds
std
clc
add
xlat
incb
hlt
add
push
into
push
insb
add
jl
int3
mov
enter
rolb
add
add
add
shrl
test
int
gs
add
cmpsl
pop
int
add
popf
cmpsl
add
pop
call
push
call
push
sub
xor
pop
jmp
cmpl
je
cmpl
jne
push
lea
push
push
push
push
call
stos
add
call
push
addl
add
jno
arpl
jge
add
arpl
xchg
into
add
push
fwait
add
add
push
mov
add
repnz
fucom
jmp
ret
xchg
jnp
sbb
add
add
add
lcall
mov
add
add
popa
pop
add
add
ljmp
jp
mov
mov
lea
pop
leave
add
push
pop
pop
pop
pop
push
dec
pop
pop
push
push
lea
push
push
lea
push
lea
push
push
call
lcall
add
mov
add
leave
in
add
cmc
scas
out
add
lock
testb
xchg
add
add
jo
add
add
add
push
lods
cltd
popa
insb
push
je
add
jl
jae
pop
push
nop
mov
bnd
sar
add
lds
call
add
add
out
add
in
mov
mov
lea
pop
leave
push
not
dec
shl
add
pop
add
push
add
lea
pop
ret
push
push
push
call
xchg
mov
mov
add
pop
add
push
mov
out
mov
out
cmc
add
jl
add
cli
add
add
test
jae
add
add
add
add
stos
xchg
lods
sub
sahf
jle
andb
cmpsl
add
add
imul
xlat
jno
movsb
add
add
mov
fiadds
add
add
pop
add
add
mov
lea
pop
jmp
cmpl
jne
push
push
dec
push
or
not
add
inc
rol
sub
add
pop
xor
pop
push
push
lea
push
push
lea
push
push
lea
push
call
enter
mov
add
imul
add
mov
add
lret
mov
mov
add
add
xchg
stos
pop
add
add
arpl
cmc
outsl
mov
sahf
mov
jb
add
lcall
pop
mov
jbe
add
xchg
hlt
xlat
fdiv
in
cltd
pop
add
add
lea
pop
pushl
call
push
shl
sub
pop
push
call
jmp
push
push
push
call
mov
stos
pop
add
les
pop
add
aam
add
add
add
jnp
lahf
jge
cltd
cmpsb
jae
add
add
cltd
rolb
jmp
scas
loopne
les
add
add
xchg
add
xchg
arpl
faddl
add
mov
add
mov
addr16
cmpl
jne
mov
mov
push
pop
jmp
push
push
push
push
push
push
push
push
push
push
push
call
add
jle
faddl
pop
mov
add
jno
imul
in
mov
cld
add
fiadds
movsl
add
add
mov
add
add
aam
leave
pop
add
mov
sahf
push
stos
call
push
loopne
jp
add
lods
add
xchg
add
cmpb
add
add
je
jmp
add
add
test
mov
mov
lea
pop
pop
push
push
lea
push
call
lret
roll
cltd
aad
add
out
add
mov
add
int3
add
mov
add
add
add
pop
subl
into
add
test
neg
xchg
jns
mov
mov
add
imul
mov
mov
les
jne
push
lea
push
push
lea
push
push
call
add
aad
mov
cmpsb
add
fstps
add
add
icebp
add
movsl
add
imul
add
loop
cwtl
mov
add
sahf
cwtl
add
jne
xchg
pusha
mov
add
xchg
fildl
pop
mov
into
cmpsl
add
data16
add
add
cwtl
jmp
mov
cwtl
add
pushf
add
add
cltd
int3
loop
pop
imul
add
mov
lea
pop
call
jmp
push
push
push
push
lea
push
push
push
call
jbe
add
nop
jecxz
add
jecxz
test
add
add
pop
jp
orl
add
add
add
add
push
movsl
add
test
xchg
rolb
add
stos
jns
mov
movsb
ret
push
not
ret
popa
add
movsb
add
jl
in
pushf
mov
lea
pop
call
push
push
inc
push
sub
add
rol
add
rol
ror
sub
add
dec
pop
add
pop
pushl
push
xor
ror
pop
call
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
pop
icebp
stos
bnd
add
les
lds
lock
mov
pop
xchg
add
add
out
add
add
add
ror
jb
fiadds
add
rolb
mov
pop
mov
out
push
iret
mov
add
cmpsb
sbbl
sahf
lods
pop
mov
ljmp
add
mov
xchg
mov
mov
cmpsb
add
mov
lea
pop
push
push
rol
pop
call
push
not
ror
inc
pop
mov
push
sub
dec
pop
lea
push
push
add
sub
push
or
inc
add
dec
add
sub
lea
not
xor
shr
pop
ror
ror
pop
push
xor
add
inc
pop
pushl
call
push
push
lea
shr
shl
pop
call
push
push
xor
inc
shl
shl
push
and
add
add
add
sub
sub
rol
pop
add
lea
add
sub
pop
push
add
dec
pop
pushl
push
push
push
push
lea
push
push
push
call
adcb
jbe
int3
add
mov
filds
lds
add
add
addb
add
add
push
add
cmpsb
add
jbe
imul
enter
mov
add
xchg
ja
divl
sar
add
shl
add
add
add
add
jp
add
add
add
add
bound
call
call
mov
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
jge
aad
mov
cwtl
lods
add
add
add
push
iret
cmpsl
lahf
add
jl
pop
pop
jne
jne
mov
add
add
add
add
add
pop
mov
add
fiadds
mov
add
mov
jns
add
add
add
add
pushf
ret
std
push
xchg
fsubs
mov
lea
pop
lea
push
push
sub
shr
push
xor
add
ror
add
sub
lea
pop
shr
rol
pop
push
push
push
push
push
push
push
push
call
add
jl
fsub
filds
mov
add
aam
jecxz
mov
pushf
add
fiadds
add
mov
add
in
mov
add
icebp
imul
lock
xchg
rolb
neg
bound
mov
xchg
in
jb
add
int3
add
gs
add
scas
out
mov
add
pushf
add
add
add
jge
add
and
jne
call
lea
push
push
lea
push
lea
push
push
push
call
add
add
call
in
lods
jno
add
int3
add
clc
mov
add
mov
repnz
add
add
add
jbe
jo
mov
jb
mov
jmp
add
add
imul
fadds
mov
add
add
pop
add
pop
lret
xchg
add
add
arpl
pop
push
push
push
push
push
push
push
lea
push
push
call
add
push
in
add
lds
push
scas
add
add
popa
shr
imul
push
leave
add
add
jne
mov
mov
in
imul
add
add
test
xchg
xchg
add
sti
add
add
jp
rolb
mov
cmpsl
icebp
add
je
rcr
push
data16
push
add
add
xchg
mov
lea
pop
push
push
push
call
add
stos
add
mov
jo
hlt
loope
push
test
add
add
stos
add
les
addl
mov
mov
addl
add
in
out
xchg
add
add
xchg
jns
add
add
add
add
hlt
in
mov
jns
into
jl
imul
mov
lea
pop
push
pushl
push
push
shr
shr
push
or
not
add
rol
sub
add
dec
inc
pop
dec
ror
pop
push
pop
push
push
push
push
call
mov
lret
jecxz
popa
addb
insb
add
lret
imul
add
pushf
fcomps
add
mov
add
iret
add
lods
add
add
xchg
pop
mov
add
add
into
or
mov
add
add
mov
shrl
add
mov
pop
call
push
push
sub
push
xor
add
shr
shl
ror
sub
add
pop
xor
lea
shr
pop
pushl
push
push
push
lea
push
push
push
push
push
call
xchg
insb
fiadds
mov
add
add
outsl
pop
mov
push
in
ljmp
lea
cwtl
jge
aad
shl
fiadds
add
outsl
xchg
add
mov
lret
lcall
outsl
add
les
add
call
mov
push
movsb
add
testb
iret
add
add
and
aad
mov
add
mov
lea
pop
call
push
push
push
lea
push
push
push
call
ljmp
jmp
scas
add
frstor
movl
add
cwtl
ret
addb
scas
xchg
mov
insb
cld
add
mov
loop
mov
cmpb
mov
add
sti
add
mov
add
out
mov
add
adc
add
iret
iret
add
add
jecxz
fs
icebp
testb
addb
mov
sbb
call
adc
push
call
ja
cmpb
add
add
in
add
mov
jns
add
mov
shl
add
jmp
add
bound
test
js
popl
push
add
add
pop
add
add
rcrl
add
out
into
mov
fscale
add
mov
add
fiaddl
fst
lret
add
mov
mov
scas
enter
add
aam
bound
pop
call
push
push
add
shl
push
sub
add
shl
sub
sub
pop
not
xor
shr
pop
push
push
push
call
lock
add
bound
movb
add
repnz
add
sub
add
add
xchg
scas
divl
add
shlb
add
js
stos
fiadds
add
push
mov
add
add
ljmp
arpl
jne
add
out
add
flds
enter
add
test
pop
stos
add
add
push
pop
add
roll
add
pop
add
push
add
shl
add
or
pushl
call
call
push
lea
push
lea
push
push
call
jl
pop
add
add
mov
adcb
add
push
mov
add
add
add
add
add
scas
add
je
ficoml
xchg
jle
int3
pop
add
add
push
pop
pop
lods
mov
push
add
movsl
mov
jp
push
mov
loopne
ljmp
mov
add
mov
add
xchg
pop
jmp
push
xor
not
pop
pushl
mov
push
sub
pop
jmp
push
push
inc
lea
ror
ror
push
and
add
shl
add
sub
rol
rol
rol
pop
sub
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
testb
xchg
movsb
push
add
push
xchg
add
jmp
cmc
add
iret
push
jbe
add
add
jmp
add
imul
loop
sahf
mov
add
js
repnz
cmpsb
add
add
add
lods
add
add
cmpsl
addb
out
add
add
filds
add
test
add
add
add
jne
mov
cli
testb
pop
pushl
call
push
push
pop
call
push
push
sub
not
inc
sub
push
or
inc
add
shr
sub
pop
sub
shl
dec
pop
push
shr
pop
pushl
push
push
push
push
push
call
xchg
in
mov
add
add
add
add
add
push
pop
add
jnp
jne
add
xchg
push
xchg
mov
add
int
add
faddl
fsubr
add
sarb
add
add
add
add
mov
add
addr16
add
add
add
test
mov
pop
arpl
flds
into
pop
into
push
mov
lea
pop
call
push
push
xor
sub
pop
call
push
shr
pop
leave
add
push
add
pop
pop
pop
pop
push
lea
push
push
push
push
push
push
push
call
arpl
jb
add
pop
add
add
cmpsl
ja
mov
ljmp
add
push
lea
add
leave
add
test
add
push
mov
je
add
push
push
add
add
mov
jmp
add
std
jmp
pop
shl
mov
aad
cld
in
test
mov
mov
testb
add
pop
iret
xchg
arpl
add
hlt
jle
xchg
stc
int3
add
add
mov
lea
pop
pop
push
push
push
push
lea
push
push
push
push
push
push
call
lret
and
imul
mov
add
stos
add
push
add
sbbl
add
pusha
mov
loopne
mov
int
int3
push
stc
xchg
js
popf
add
jl
add
popf
mov
jecxz
stos
cmpsl
add
shrb
pop
xchg
jge
mov
movsl
mov
add
push
add
pop
add
mov
scas
add
rorb
leave
add
ret
push
shr
xor
not
add
pop
leave
ret
push
push
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
out
jge
out
jmp
add
stos
repnz
add
fstpl
add
add
mov
std
pop
add
jle
out
leave
add
add
aad
xchg
add
addl
fistps
add
loope
fildl
mov
fiadds
add
add
jp
mov
push
nop
addr16
xchg
cmpsb
add
arpl
cmpl
jne
push
not
pop
mov
push
push
push
push
push
call
add
add
mov
imul
bound
jae
mov
add
sahf
add
popa
lods
mov
push
add
xchg
in
xchg
shrb
mov
jge
pop
add
add
rcrl
jae
xchg
ja
add
aad
leave
fwait
add
mov
les
fcompl
adc
jmp
push
push
push
push
call
scas
add
mov
xchg
jns
add
movsb
lds
add
movl
mov
fsubs
popa
ret
shl
add
jge
insb
mov
pushf
add
add
rclb
add
test
jecxz
fnstcw
push
int
jno
add
ret
pop
mov
icebp
not
outsl
xchg
fiadds
fildl
faddl
lret
sarl
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
push
push
lea
push
call
jmp
add
jae
out
addl
add
sti
mov
jp
push
pusha
movsl
add
add
mov
test
fs
add
add
lret
cld
gs
ljmp
mov
xlat
push
add
add
jbe
out
xchg
out
imul
push
xchg
add
sbb
add
lcall
mov
hlt
lea
pop
and
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
hlt
stos
test
add
fcmovb
pop
rorl
cltd
pushf
push
add
jae
bound
add
add
add
pop
mov
xchg
add
push
cmpsb
add
mov
add
imul
add
xchg
lods
push
add
sahf
mov
add
mull
imul
lods
mov
xlat
add
add
add
mov
add
lea
pop
xor
push
push
lea
push
push
call
mov
push
add
data16
add
lods
test
ljmp
pop
add
jmp
add
add
stc
cld
loop
lods
add
mov
add
clc
add
add
add
testb
add
movsb
in
lcall
jnp
jl
add
bound
repnz
pushf
add
add
mov
lea
pop
xor
add
xor
push
sub
dec
pop
dec
push
not
pop
sub
push
sub
lea
pop
jmp
sub
push
inc
sub
lea
pop
pushl
pop
push
xor
add
lea
pop
sub
push
lea
dec
pop
cmp
jne
mov
lea
push
lea
push
call
movsb
js
add
push
jbe
int3
mov
js
add
add
add
fidivrs
fs
mov
mov
mov
mov
add
mov
aam
cmpsl
xchg
add
add
roll
add
add
mov
add
mov
add
add
lret
add
les
shl
push
add
popa
add
add
rorb
pop
sub
push
inc
lea
pop
mov
shr
push
rol
pop
add
push
push
push
lea
push
call
lret
mov
add
add
imul
jb
add
fidivl
add
pop
faddl
mov
add
movl
in
add
out
in
incb
mov
add
scas
xchg
out
jp
xchg
jo
add
pop
add
jb
jne
add
mov
lea
pop
sub
push
add
xor
xor
pop
pushl
push
push
call
fwait
mov
push
add
add
add
movsb
testb
mov
add
add
fildl
add
add
js
add
add
mov
in
mov
lock
add
add
stc
add
push
sarb
cmpsl
fs
add
add
add
cld
addr16
jecxz
pop
add
mov
lea
pop
pop
shr
and
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
scas
leave
add
cwtl
jecxz
cmpsb
mov
add
jo
jmp
jge
jo
add
add
aam
add
add
sti
add
add
push
add
add
add
pop
pop
add
add
xchg
mov
lods
cli
add
loopne
add
mov
mov
add
lods
mov
add
add
sub
jmp
push
push
call
lret
sar
add
add
add
test
xlat
mov
xchg
push
fadds
mov
clc
mov
pop
mul
pop
add
add
jmp
add
fsts
mov
mov
xorb
loop
filds
bound
out
jp
xchg
add
fs
jns
fbld
sarl
lea
pop
cmp
jne
push
inc
pop
leave
push
add
pop
ret
push
mov
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
jp
add
rolb
add
jne
add
add
mov
mov
pop
add
fwait
icebp
addl
add
jbe
sbbl
mov
add
rcr
addb
add
add
lods
jne
clc
add
jno
cli
addb
add
roll
sti
insb
add
jne
add
stos
pop
sahf
data16
je
add
pop
add
push
push
push
push
push
push
push
push
lea
push
call
add
mul
icebp
add
add
roll
add
mov
add
add
add
add
movsb
add
into
xchg
add
add
fldl
in
add
add
ja
data16
out
add
out
rolb
xchg
in
add
add
add
loop
xchg
add
repnz
movsl
add
fnstsw
add
insb
rolb
push
rclb
mov
lea
pop
push
push
push
push
add
shl
pop
push
push
add
xor
pop
push
mov
lea
push
lea
pop
sub
mov
shr
push
push
push
push
push
push
call
add
je
add
add
add
xchg
add
add
add
add
jne
jge
loop
mov
lret
repnz
add
stos
add
add
add
outsl
and
xchg
out
rolb
add
add
xchg
add
loopne
stc
mov
repnz
shrb
pop
pushf
add
jl
add
hlt
mov
mov
xchg
enter
add
bound
pop
add
push
shl
add
pop
mov
add
mov
push
push
push
push
push
push
push
push
call
bound
add
add
mov
loopne
mov
xchg
in
stos
add
jmp
add
into
mov
call
into
popl
add
mov
imul
add
adcl
bound
bound
add
stc
mov
add
add
mov
shl
add
mull
imul
add
rolb
movsl
outsl
mov
aam
bound
pop
add
xor
push
add
shr
pop
mov
push
lea
push
push
call
faddl
push
mov
add
mov
add
stos
mov
mov
add
mov
out
rcl
cltd
jo
jo
add
imul
mov
notl
add
rol
nop
jl
mov
push
fsubs
jp
in
jecxz
add
add
push
cmpsl
add
xchg
add
add
addr16
add
add
movsb
add
add
mov
lea
pop
and
call
add
push
shl
sub
shr
pop
cmp
je
push
lea
pop
add
push
push
push
lea
push
push
lea
push
push
lea
push
call
out
out
add
pop
jns
mov
lret
cmpsb
in
rolb
std
stos
in
add
filds
jbe
push
pop
add
add
add
jae
stos
cmpsl
add
mov
mov
lret
fidivl
add
add
sti
in
fsubs
mov
add
add
int
add
add
add
data16
xchg
int
add
add
mov
lea
pop
cmpl
jne
xor
pop
push
ror
inc
shl
pop
pop
pop
push
push
push
push
push
call
decb
stos
mov
test
addl
sti
add
add
add
fstl
add
mov
add
lods
add
xlat
mov
fiaddl
jae
iret
add
add
add
add
add
nop
mov
mov
jge
fcomp
out
call
add
push
add
add
add
lret
add
hlt
mov
lea
pop
pop
push
lea
push
push
call
jle
cli
add
add
xchg
pop
pop
add
add
xchg
gs
lcall
add
add
lret
add
xchg
add
add
in
test
push
aam
push
shlb
je
xchg
mov
add
add
jne
lret
jle
flds
add
fildl
add
data16
push
int3
add
add
add
mov
lea
pop
pop
push
push
lea
push
lea
push
push
push
push
call
push
mov
sahf
add
add
add
push
push
add
add
lret
ljmp
add
jnp
add
roll
mov
fcmovb
add
add
out
jo
roll
arpl
add
idiv
add
add
arpl
imul
icebp
clc
add
clc
fsubrp
add
xchg
mov
lea
pop
leave
ret
mov
push
dec
sub
pop
add
push
push
push
call
bnd
add
add
loopne
xlat
std
addr16
add
add
add
add
movl
xchg
add
mov
lods
testl
mov
add
ret
ljmp
mov
add
pop
loop
add
xchg
jo
shlb
xorb
jp
xchg
add
mov
data16
push
push
push
pop
pop
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
imul
add
aam
enter
add
add
ja
mov
cli
sbbl
nop
mov
add
lods
jge
add
sti
sti
call
data16
cld
mov
enter
out
movsl
jno
pop
hlt
xchg
pushf
add
mov
lea
pop
mov
push
push
push
push
lea
push
push
push
call
add
in
add
jne
add
xchg
add
mov
imul
add
lock
into
addr16
jno
cli
add
add
roll
scas
add
xchg
add
add
add
add
add
add
pushf
add
movsl
faddl
xchg
pop
pop
add
out
scas
addr16
add
lock
add
add
addr16
pop
add
lret
out
test
addr16
push
call
xor
push
push
push
lea
push
push
call
lock
jl
add
out
in
add
add
rolb
add
mov
add
add
add
mov
mov
jnp
test
lea
add
add
scas
add
add
sarl
out
mov
add
ljmp
out
add
jno
js
imul
mov
mov
std
xchg
clc
push
mov
lea
pop
pop
pop
pop
push
push
push
push
push
call
shlb
rcrl
imul
jmp
add
int
mov
stos
lods
add
add
fiadds
lahf
add
test
push
roll
mov
roll
cmpsb
popa
popf
popa
add
out
loope
cld
movsl
add
bound
add
out
cld
add
lcall
in
rcrb
push
add
xchg
nop
in
add
add
mov
mov
lock
add
xchg
mov
imul
pop
leave
push
push
lea
push
push
push
call
jmp
test
lahf
jns
jnp
mov
add
fadds
add
sar
mov
xchg
loope
cmpsl
add
in
jnp
add
xchg
add
mov
ja
scas
in
add
push
add
add
add
add
rol
test
add
add
jo
stc
roll
add
hlt
add
adc
ret
push
add
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
mov
xchg
add
mov
cmpsb
jecxz
xchg
add
cmc
add
add
js
out
shrl
add
fisubl
add
add
xchg
pop
cmc
add
add
fidivs
mov
add
jmp
push
add
insb
add
popl
je
imul
in
xchg
out
add
push
lods
add
mov
mov
lea
pop
mov
add
push
rol
dec
pop
push
push
push
push
ror
pop
push
push
lea
ror
add
lea
pop
mov
push
add
lea
xor
rol
pop
push
push
shr
pop
pop
lea
sub
push
pop
mov
shr
push
push
push
push
push
push
lea
push
call
rolb
add
jb
add
add
add
mov
add
popa
lcall
add
cmpsb
icebp
lcall
sarb
add
pop
add
out
and
icebp
jne
in
add
lods
jno
pop
int
jns
add
add
call
add
add
fisubrl
push
fildl
mov
fldl
add
insb
jbe
add
jl
std
test
push
add
cltd
mov
lea
pop
add
push
add
dec
pop
mov
push
not
pop
add
push
xor
shl
pop
pushl
push
push
push
push
push
call
jge
addl
xchg
cmc
call
mov
ret
cld
mov
cmpsl
add
pop
add
add
add
stc
imul
add
ret
add
pop
add
faddl
leave
mov
stos
ljmp
dec
add
shl
leave
add
add
popa
xchg
ret
fwait
push
xchg
ja
shr
jae
add
add
push
add
jo
add
push
add
adc
popl
mov
add
push
sub
pop
xor
push
push
push
push
push
push
push
push
push
call
add
add
filds
je
mov
add
lds
mov
cli
add
int3
add
mov
scas
test
add
add
incb
cltd
pop
mov
loope
in
in
enter
fwait
pop
leave
jge
add
mov
add
out
add
jl
fnstsw
add
test
cmp
out
int
add
lods
insb
int
movb
les
adc
push
push
push
call
popa
faddl
iret
add
add
mov
jno
shl
add
in
arpl
mov
mov
arpl
add
rolb
add
js
jae
add
xchg
cwtl
mov
add
movsb
add
xchg
pusha
add
movb
push
push
sar
add
arpl
in
test
pop
mov
ja
add
lods
add
or
mov
push
push
lea
push
call
int
mov
jne
mov
test
shlb
add
icebp
pusha
push
add
jmp
gs
js
add
pop
mov
pop
add
add
add
pop
mov
stos
add
test
rolb
mov
pushf
lock
cmc
pop
add
fdivs
popa
aam
insb
add
xchg
add
orb
add
push
inc
dec
pop
xor
push
sub
pop
call
add
nop
push
push
lea
push
call
jo
push
aam
push
add
add
add
push
add
out
add
xchg
movsl
pusha
aad
mov
add
add
add
pop
rolb
add
mov
add
add
test
mov
in
add
lret
add
add
jne
lods
in
pusha
add
add
int
add
jp
xlat
scas
cld
add
add
push
xlat
add
add
mov
lea
pop
nop
cmp
je
nop
push
push
push
push
push
push
push
push
lea
push
push
call
add
in
mov
cltd
add
cmc
jns
add
xchg
add
push
test
addl
popa
jns
js
loope
add
ret
add
add
iret
add
add
lret
cli
add
mov
add
mov
lock
xchg
lods
add
add
stos
xchg
outsl
add
add
lods
mov
lea
pop
nop
inc
nop
push
rol
add
pop
nop
push
lea
lea
ror
pop
cmp
jb
push
ror
pop
xor
push
push
push
push
push
call
add
add
movsl
xchg
jne
add
add
add
test
xchg
in
std
icebp
shll
mov
cwtl
jns
add
cmpsl
add
pop
hlt
add
test
mov
add
add
add
jnp
add
add
add
add
add
notb
jae
scas
mov
jno
fidivrl
cld
lea
pop
jmp
push
shl
dec
sub
pop
mov
push
pop
add
push
pop
movzwl
push
xor
ror
rol
pop
mov
add
mov
push
lea
push
push
push
lea
push
lea
push
call
hlt
add
cld
andb
xchg
in
xlat
lods
loop
push
add
add
add
out
add
clc
in
add
add
cmpsb
push
add
mov
add
addr16
jns
add
jecxz
xchg
xchg
xchg
push
mov
arpl
jo
add
pop
add
add
jns
popl
cltd
mov
in
into
add
add
fsubs
enter
add
popa
mov
jle
mov
lea
pop
xor
push
push
push
lea
push
push
push
lea
push
push
push
call
jb
add
cwtl
pop
lcall
lret
fstpl
mov
lods
je
add
js
push
out
jbe
rorl
aad
cmpsl
out
xchg
add
iret
add
mov
popf
sahf
xlat
add
add
popa
rorl
push
jns
loopne
add
in
mov
add
mov
jbe
scas
add
cmc
lods
bnd
push
mov
mov
lea
pop
xor
shl
xor
push
lea
push
lea
push
push
push
call
sahf
in
adc
test
mov
jne
roll
add
add
mov
add
pop
add
add
ljmp
sti
js
add
mov
add
jp
jl
jmp
andb
add
int3
cmpsl
xchg
outsl
bound
add
add
add
mov
lcall
push
aam
bound
shl
xor
push
xor
lea
shr
pop
shl
push
lea
pop
xor
mov
add
push
shr
sub
pop
pop
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
call
mov
clc
andl
aam
mov
imul
add
fiadds
add
jno
cwtl
add
jns
clc
insb
js
mov
add
sahf
mov
mov
add
fistl
mov
call
fwait
loope
mov
add
fwait
add
int
mov
mov
add
arpl
mov
lea
pop
pop
pop
push
push
push
push
push
call
stos
push
fidivs
add
add
std
mov
outsl
leave
mov
out
jmp
add
call
add
add
add
call
faddp
stos
add
xchg
add
add
les
add
movsb
fadds
add
jl
in
mov
add
clc
mov
mov
add
mov
add
mov
pop
imul
push
lods
add
lods
lcall
lea
pop
pop
push
lea
ror
pop
leave
ret
push
pop
push
push
push
push
push
push
push
call
add
mov
pusha
cmpsl
add
test
add
add
xchg
add
add
int3
shr
add
cli
add
mov
push
add
testb
test
add
push
mov
mov
add
add
lds
sahf
add
add
nop
out
shrb
mov
xchg
add
jo
mov
lds
ljmp
add
pop
mov
push
push
inc
dec
dec
pop
push
push
push
push
pop
mov
push
add
sub
rol
pop
mov
mov
test
je
push
push
push
push
push
push
push
call
repnz
add
add
add
repnz
popf
mov
xchg
jae
cltd
icebp
lock
push
lret
je
add
out
clc
add
xlat
in
data16
insb
xchg
add
add
leave
add
push
add
mov
push
stos
add
xlat
add
mov
add
jnp
add
add
add
test
add
sarl
les
jno
push
xor
ror
xor
ror
pop
test
je
push
add
pop
mov
mov
mov
push
lea
push
call
out
add
add
out
add
mov
mov
mov
filds
xchg
add
mov
fabs
add
cltd
add
test
pop
test
icebp
popa
in
add
jnp
add
mov
add
mov
add
lock
add
mov
std
add
add
mov
xchg
xchg
les
data16
pop
fldl
add
jp
repnz
mov
lea
pop
inc
cmp
je
push
lea
push
push
push
push
lea
push
push
push
call
aam
stc
sahf
add
lcall
push
add
faddl
add
addl
mov
add
sti
fadd
stos
enter
add
add
add
push
mov
cli
add
lret
xchg
insb
add
add
movsl
fdivrs
ljmp
push
add
xchg
add
clc
push
push
add
aam
bound
pop
test
je
mov
inc
push
lea
push
push
push
push
push
push
lea
push
call
add
jo
add
add
incb
add
add
jp
add
add
loopne
test
aam
les
mov
add
add
out
mov
mov
xchg
nop
mov
fwait
mov
add
add
add
push
mov
add
jae
cmc
pushf
fildl
imul
push
push
add
xchg
jno
movsl
add
add
popa
and
rorb
test
add
add
pushl
rclb
inc
xor
sbb
call
icebp
add
icebp
mov
hlt
stc
jae
mov
mov
add
loope
repnz
add
stc
pop
enter
add
add
mov
push
add
push
add
in
lcall
pushf
cmpb
fiaddl
add
jbe
add
push
add
push
pop
xchg
add
loope
add
mov
lea
pop
pop
push
push
push
push
call
clc
icebp
shlb
enter
jge
out
in
add
add
push
popa
add
int
mov
les
xchg
lahf
push
test
pop
add
xchg
and
mov
add
pop
pop
mov
mov
add
les
lods
addr16
mov
arpl
add
jmp
mov
add
add
add
add
add
pop
pop
push
push
lea
push
lea
push
lea
push
push
push
push
call
insb
loope
out
add
out
jl
pop
aad
shrl
add
rorb
push
imul
xchg
sti
add
add
in
add
jmp
fistps
cmpsl
fiadds
add
mov
push
popf
add
mov
add
out
mov
lods
add
mov
jo
pusha
add
add
add
int3
lea
pop
pop
pop
push
push
push
push
lea
push
push
push
push
call
stc
loope
popf
jle
test
mov
cltd
add
add
int3
add
cmpsb
pop
addl
roll
shlb
fwait
add
add
add
fiadds
add
test
push
mov
add
lods
add
mov
add
add
xchg
add
pop
cmpsb
add
push
mov
jle
icebp
add
mov
aam
bound
pop
leave
ret
mov
push
push
lea
push
push
push
call
add
rcll
push
add
rolb
add
pop
add
pop
add
repnz
add
add
sti
addr16
add
add
fs
add
add
cmpsl
jmp
mov
leave
fldl
add
pop
mov
jecxz
arpl
add
repnz
add
add
add
add
add
or
add
xchg
mov
mov
lea
pop
inc
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
xchg
jp
add
jns
mov
add
xchg
mov
add
mov
pop
pop
repnz
add
add
add
mov
nop
lret
roll
loope
add
mov
add
add
add
cmc
roll
popf
lock
call
mov
add
mov
add
add
data16
add
imul
pop
cmp
jne
push
push
push
push
lea
push
call
js
xchg
sti
rcrb
push
add
mov
add
add
add
add
int3
add
fs
lds
int3
add
add
fldl
ror
cmc
in
test
add
fmuls
add
mov
enter
lret
imul
push
fstpl
mov
mov
add
movsb
pop
jns
add
mov
std
cmpsl
in
mov
lea
pop
lea
push
add
pop
mov
push
xor
rol
sub
inc
pop
test
je
push
not
pop
mov
add
cmp
jne
push
lea
push
push
push
push
call
push
cmc
add
mov
pushf
arpl
cmpsl
add
loop
add
aad
push
add
add
add
mov
add
cwtl
add
mov
lahf
int3
add
push
push
add
add
add
add
je
add
cli
add
add
loopne
mov
lea
pop
mov
push
sub
pop
test
je
mov
push
inc
pop
add
push
xor
dec
pop
cmp
je
push
lea
pop
jmp
push
shr
pop
xor
pop
push
rol
dec
not
add
pop
pop
push
push
push
push
push
lea
push
push
call
add
jnp
cli
icebp
mov
pop
mov
add
fisttpll
add
cli
add
mov
out
sahf
ret
add
jle
in
stc
fdivs
jno
bound
add
fiadds
add
fiadds
hlt
add
add
add
lds
out
add
movsl
js
ficoms
add
clc
jle
repnz
push
pop
cli
mov
lea
pop
pop
push
rol
pop
pop
push
lea
sub
xor
pop
leave
ret
push
push
lea
push
lea
push
push
call
sahf
fidivrl
cltd
mov
pop
lods
ja
roll
in
imul
loopne
push
add
push
addr16
into
cltd
iret
jae
iret
add
sahf
add
add
add
fildl
pop
iret
cmc
add
clc
add
add
test
fwait
jnp
cmpl
mov
jae
enter
out
add
jecxz
ja
jl
outsl
add
jns
ror
push
add
add
pop
lea
pop
push
not
pop
pop
pop
pop
push
push
push
lea
push
push
push
lea
push
call
arpl
add
mov
add
add
icebp
add
jmp
mov
add
loop
push
mov
xchg
add
add
jns
push
movsb
add
mul
movsb
mov
mov
pop
add
enter
mov
mov
jns
imul
add
out
cwtl
add
add
mov
jnp
push
mov
clc
add
lret
push
lea
pop
leave
push
sub
pop
ret
push
not
pop
mov
pop
pop
push
sub
rol
sub
pop
pop
pop
push
push
push
call
mov
add
add
movsl
add
stos
sub
add
loop
push
adcb
je
js
lret
add
jnp
arpl
mov
add
add
mov
cld
out
jle
in
push
add
jp
push
mov
add
xlat
in
roll
gs
div
mov
les
loop
add
add
add
mov
add
add
cmc
add
fldl
xchg
pop
mov
lea
pop
leave
ret
push
add
pop
rol
rol
push
add
sub
sub
pop
xor
push
push
push
push
call
arpl
popa
scas
add
stos
add
add
jmp
mov
add
add
add
add
mov
loop
test
add
add
test
pop
jp
jno
roll
mov
add
out
add
pop
add
imul
push
add
add
outsl
add
push
xchg
add
mov
fmull
cmpb
jne
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
inc
mov
sti
psubsw
sti
movsb
xchg
mov
sti
xor
push
mov
sti
movsb
shlb
sti
ja
mov
mov
push
outsb
roll
fsubrl
daa
or
cmp
fldl
push
andl
jnp
pusha
iret
or
mov
xor
jbe
cmpsb
push
sbb
pop
mov
inc
mov
mov
sarb
pop
dec
add
add
push
add
imulb
jg
push
dec
jecxz
sub
xlat
jno
ficoms
pop
xchg
lea
sub
sub
cmpsl
mov
cmc
pop
stos
out
mov
xchg
lret
sub
mov
lods
repnz
faddp
shr
mov
imul
xchg
pushf
pop
xchg
dec
cmp
mov
cwtl
loop
mov
dec
jno
pusha
frstor
push
or
mov
jae
dec
mov
mov
js
fwait
into
jne
mov
mov
mov
mov
orl
xchg
ror
mov
std
mov
mov
in
pop
stos
add
mov
incb
mov
mov
sahf
addr16
sub
xchg
out
hlt
cmpsl
icebp
aaa
data16
cmp
inc
mov
leave
insl
add
add
add
out
int
pop
enter
stos
outsb
jnp
mov
sbb
testl
fcompl
call
aas
jge
bound
pushf
xor
sub
subb
or
cmp
and
jp
dec
lods
bound
dec
insl
ljmp
and
cmp
dec
in
dec
orb
es
lods
add
scas
enter
lods
imul
dec
push
cmpsb
push
adc
jmp
xchg
push
xchg
mov
and
xchg
add
and
sub
stos
and
mov
sub
push
stc
and
notl
leave
or
sbb
enter
jo
push
or
ret
pop
je
in
aaa
sarl
clc
sbb
jecxz
outsl
fisubs
cli
lock
fwait
fwait
repz
sbb
mov
mov
mov
fnstsw
xchg
jge
xchg
mov
xor
outsl
fsubrs
orl
xchg
inc
lret
inc
fcompl
xchg
stos
inc
mov
inc
push
and
push
inc
das
fildll
jne
sub
add
pop
push
cmp
jmp
push
std
fildll
add
mov
inc
adc
push
lock
sub
stos
mov
sub
arpl
imul
mov
adc
jl
setnp
push
je
mov
push
stos
dec
jo
cmpsb
sub
aad
into
dec
dec
xor
xor
cmpsb
add
clc
lret
pop
pop
sub
cld
popl
popa
sbb
and
fsubrs
into
or
inc
cmpsl
cmp
adc
iret
add
aas
adc
xor
cmpb
dec
xor
mov
pop
add
mov
adc
out
loop
lds
popf
add
jae
movsl
xchg
xchg
popa
and
int3
xor
add
je
int
adc
cmpsl
xchg
push
insl
arpl
test
or
adcb
lcall
movsl
push
inc
aaa
ds
sbb
push
mov
xchg
mov
xchg
fisttpl
mov
sbbb
insb
lods
push
and
cmpsl
lods
cmpsb
jbe
xor
pop
adc
push
sbb
push
push
in
cmp
mov
dec
pop
inc
fwait
repnz
pop
inc
cmp
inc
dec
inc
mov
mov
push
cmp
lds
and
and
cltd
rclb
sbb
adc
cmp
movsl
enter
cmp
test
aas
insl
arpl
sbb
mov
out
repnz
jle
mov
mov
inc
je
mov
pop
sbb
dec
outsb
lcall
aad
inc
outsl
dec
cmp
daa
enter
sbbb
in
pop
dec
fldcw
and
jns
xor
xor
add
xor
fwait
sbb
mov
inc
xchg
insb
add
inc
stc
rolb
lahf
sbb
sbb
jmp
mov
ljmp
xor
cs
fiadds
mov
sbbl
pop
add
mov
jl
lahf
sub
mov
pop
add
lock
fsubrl
cmp
pop
xchg
inc
mov
push
jl
lods
movsb
lea
dec
xor
out
nop
and
mov
outsb
cmc
subb
gs
daa
pop
insl
ljmp
ds
daa
int3
repz
jl,pn
ss
pusha
and
jge
cli
xor
inc
lcall
or
jne
mov
mov
adc
or
test
into
pop
xor
out
shlb
sti
lods
mov
jge
push
in
scas
ljmp
lock
cli
adc
push
inc
dec
lcall
ret
dec
xchg
jno
push
movsb
push
pop
pusha
aam
test
rcrl
jge
outsb
outsb
cli
xchg
xor
mov
insl
pushf
sar
ds
mov
push
pop
out
or
dec
scas
mov
sub
rorb
js
add
cli
testb
dec
push
dec
stos
cmpsb
fistpll
and
jecxz
icebp
jge
ss
jl
jo
jo
addb
push
sub
push
cmp
xor
fidivs
sub
js
cmpsb
xchg
mov
test
out
or
aas
pop
inc
add
jmp
push
loope
jmp
nop
mov
mov
cwtl
push
xchg
das
pop
lret
xor
notb
scas
add
push
xlat
out
pop
push
pop
aas
dec
lahf
mov
test
insb
mov
outsl
xchg
xchg
mov
xor
leave
mov
leave
mov
loope
jmp
iret
test
mov
jecxz
adc
and
into
push
fcoml
lock
sbb
mov
or
ret
and
sub
and
or
clc
jbe
dec
mov
or
ss
adc
ljmp
frstor
test
mov
dec
pop
icebp
push
cltd
cld
inc
int
aaa
aas
in
sub
sub
hlt
dec
stc
xor
sbb
push
fistpl
test
test
int3
call
jg
shll
mov
in
mov
rolb
sbb
movsl
cwtl
cli
mov
lret
sbb
fidivrl
xor
or
mov
stos
dec
std
mov
mov
jmp
pop
mov
inc
or
xchg
xchg
cmp
adc
loop
add
pop
sahf
cmpsb
in
ljmp
push
mov
push
clc
stc
pusha
or
jo
jecxz
rcrb
mov
popa
xchg
inc
loope
push
push
dec
sbb
clc
xchg
popl
and
mov
gs
lahf
sbbb
shll
sti
cld
roll
inc
pop
cmp
push
ja
sub
or
mov
xor
cmpsl
dec
lret
arpl
jmp
repnz
shr
insb
add
aam
adc
xor
insl
push
lret
cmp
pop
cmp
cwtl
mov
shlb
daa
movsl
mov
or
pop
inc
jb
mov
or
adc
mov
xchg
aas
stos
xor
sbb
aam
mov
movsl
mov
cltd
mov
dec
or
dec
sarl
sbb
cmp
and
repz
sub
fsubp
test
stc
lods
data16
ror
xor
lea
or
xlat
not
repz
mov
iret
in
jo
rclb
mov
int
test
outsl
jecxz
lea
and
in
sarl
fisttps
scas
mov
push
and
inc
or
flds
jle
pusha
fbld
roll
movsl
fadds
scas
test
ljmp
stos
mov
sbb
lds
test
dec
and
inc
fdivl
inc
test
sbb
inc
sti
pop
lcall
jns
mov
mov
jns
push
sbb
shlb
mov
push
popa
xor
ret
aam
sub
test
xchg
in
shrb
stc
lcall
fisubs
sub
ficompl
inc
aaa
hlt
xchg
push
inc
push
mov
stc
sbb
jl
movsb
push
insl
cmp
dec
aad
cmp
std
aaa
insl
out
push
or
sti
xor
or
push
fld
cmp
add
lea
push
xchg
test
movsl
dec
aas
jmp
and
add
fxch
dec
repz
and
jo
mov
mov
push
mov
aaa
cmp
mov
inc
lret
sub
xchg
mov
cmc
add
adc
cld
jns
imul
mov
in
arpl
cmpb
popf
adc
sub
mov
arpl
es
xlat
cmpsl
push
inc
movsb
push
mov
repnz
xchg
mov
ret
ds
pop
imul
xchg
xor
ja
aas
outsl
mov
cmc
xor
pop
scas
jae
insl
pop
pop
lods
cmpsb
xchg
clc
fwait
xchg
enter
mov
cmp
sbb
ljmp
les
jno
xchg
cmp
aam
iret
sub
xor
jmp
ljmp
pop
ss
sub
pop
insb
cmp
in
stos
pop
adc
sub
pop
loopne
add
sbb
xorb
or
inc
gs
out
mov
scas
mov
push
in
leave
addr16
xor
and
out
adc
add
repnz
bound
stos
js
pop
cmp
fwait
sub
mov
jo
and
mov
int
mov
pusha
fldt
or
or
testb
aam
and
or
jecxz
bound
stc
mov
cli
scas
imul
inc
push
into
push
mov
mov
mov
fstl
fucomi
adc
addr16
es
mov
clc
loop
into
push
data16
and
and
xchg
mov
mov
mov
movsl
into
jle
es
adc
nop
fldl
lahf
cltd
xor
mov
cmp
leave
repz
xorb
xchg
rcll
shl
jp
jnp
sbb
stos
pop
push
pop
shll
das
sub
aaa
xchg
pop
aas
call
shrb
jmp
test
sub
rclb
pop
sbb
xlat
sub
sarb
mov
out
pop
mov
fs
lds
sarb
rolb
sarb
push
sub
rcll
sbb
push
push
mov
xchg
in
mov
rcr
mov
and
mov
mov
and
jae
xchg
ret
imul
arpl
pop
dec
test
ffree
xlat
pop
sbb
aam
jp
pusha
pop
mov
mov
adc
loopne
dec
call
fadds
std
jbe
dec
aas
dec
jnp
mov
inc
in
dec
lea
sbb
int3
ss
cwtl
popa
and
and
xchg
push
push
mov
leave
mov
pop
rcr
or
ljmp
or
pop
xchg
and
iret
dec
test
jae
xchg
xchg
add
or
xchg
cmp
lea
loop
push
imul
xor
dec
mov
push
invd
repz
mov
pop
imul
popf
iret
jnp
xchg
cmpsb
pshufw
data16
jnp
jo
mov
pop
faddl
mov
test
or
movsb
aam
call
lock
cmp
adc
std
in
mov
inc
fcoms
push
mov
jns
dec
jb
mov
lock
jge
inc
daa
repnz
xlat
adc
pop
push
jno
int3
sbb
mov
sbb
push
pop
mov
push
push
xlat
push
addr16
push
loope
adc
sub
fstps
xchg
insb
lret
cmpb
jo
push
jmp
rorb
mov
add
push
daa
xor
adc
jl
imul
outsl
outsl
fisttpll
pop
add
cmp
pop
stos
cld
pop
jne
adc
xlat
mov
sub
add
int3
inc
loop
call
mov
leave
out
roll
test
stos
xlat
or
mov
adc
sbb
inc
mov
mov
repz
aad
stc
icebp
lret
lahf
rcrl
loope
gs
hlt
sahf
daa
test
pop
out
fcmovnbe
call
xchg
insl
adc
dec
mov
scas
cmp
mov
push
call
pop
fnstenv
mov
xor
dec
imul
lods
in
in
cmp
daa
push
xchg
shlb
xchg
inc
test
or
cwtl
sbbl
push
mov
jbe
jmp
mov
push
push
lret
popf
in
ficompl
sub
and
in
out
movsb
mov
in
outsb
scas
push
and
jns
adc
int3
into
sbb
inc
push
inc
adc
sbb
xchg
jne
cmp
push
roll
out
xchg
lcall
dec
pop
mov
aas
or
xor
outsl
jns
sbbl
ret
or
out
imul
out
pop
shl
push
cltd
cmp
pop
mov
pop
cmp
dec
cmpsl
outsl
enter
sub
cmpsb
push
lret
push
jge
inc
repnz
pop
in
lds
and
fcomps
sub
fs
sub
sbb
xchg
mov
pop
mov
mov
dec
das
stos
jns
sbb
imul
pusha
dec
push
jecxz
subl
lock
pop
push
jno
xchg
jge
movsb
ret
jae
movsb
cmpsb
sbb
adc
ds
fmull
popa
mov
dec
push
jg
mov
enter
jmp
push
sub
mov
and
push
jno
xchg
sub
pop
xor
fstps
jmp
mov
dec
shll
daa
ret
in
pop
sbb
ds
xchg
fs
cmpsl
xchg
leave
xor
ss
jmp
mov
movsl
push
es
or
xchg
scas
rcl
outsb
pop
xchg
into
mov
test
jecxz
scas
sbb
jmp
das
xor
fistpl
decl
scas
enter
xlat
imul
outsb
sbb
xchg
and
push
repz
fdivs
scas
je
ja
jp
andb
dec
jae
xor
adcb
jo
scas
les
push
in
cmp
in
cltd
out
aaa
jo
scas
fcoms
inc
pop
shl
dec
notb
sub
adc
push
xchg
cs
shll
inc
adc
fadd
aad
sahf
mov
fisubs
push
rclb
pop
arpl
xor
xlat
sbb
mov
cmp
outsl
dec
je
cmpsb
lret
shlb
loopne
dec
les
xchg
gs
dec
imul
adc
mov
sbb
insb
mov
lret
pop
or
faddl
ret
add
sub
dec
mov
testb
in
xchg
repnz
xlat
ljmp
jnp
xor
pusha
mov
xor
dec
inc
and
aam
or
subl
lret
leave
mov
sbb
rcrb
ret
dec
jge
dec
jmp
test
mov
sub
rol
mov
cwtl
push
push
nop
cltd
dec
xor
in
int
aam
push
dec
imul
mov
stos
mov
xchg
push
mov
mov
lret
push
adc
outsl
clc
add
sub
addr16
jne
pusha
cmpsl
into
adc
in
pop
sbb
mov
jecxz
xor
movsb
fiaddl
insl
in
adc
hlt
lods
sbb
daa
ret
add
shll
cmp
xlat
mov
leave
and
mov
mov
pop
imul
jl
sub
jp
mov
mov
lret
and
sbb
test
into
adc
movsb
test
movl
addl
cmp
iret
pop
push
sbb
mov
int3
and
aaa
clc
or
jecxz
push
and
cmp
xor
ffreep
jns
inc
sub
aam
hlt
mov
imul
sub
mov
mov
add
and
or
out
out
ja
cwtl
aas
mov
sti
push
lcall
rcll
pop
jb
mov
sti
adc
bound
out
mov
cwtl
push
cwtl
cmpsb
mov
iret
repnz
mov
popf
mov
cmp
and
mov
pop
out
mov
sbb
mov
push
dec
cwtl
in
movsl
mov
fwait
cli
push
dec
sub
shl
mov
push
packuswb
xor
mov
call
cmp
and
out
pop
imul
or
fwait
mov
cmp
dec
bnd
sub
test
inc
and
leave
pop
pop
mov
jecxz
jle
cmc
scas
pop
aas
dec
insb
inc
pop
out
aad
mov
mov
bound
lret
fcomps
push
pop
popf
leave
mov
bound
adcl
pop
sbb
cli
add
lcall
adc
cltd
push
out
mov
adc
push
sbb
mov
mov
loop
cwtl
dec
lea
aas
gs
aaa
sbb
jne
pop
push
in
dec
lds
fistps
fsubl
stos
lahf
ret
lss
bound
sub
sub
push
movsb
inc
adc
mov
lcall
inc
mov
sbb
xchg
es
or
roll
fs
mov
fnstsw
cld
mov
jle
sbbb
add
lea
pop
movsl
sub
lahf
ret
outsb
xor
mov
add
in
xchg
xchg
push
pop
mov
push
inc
push
shll
inc
mov
pop
mov
sti
and
test
outsb
pop
xor
xchg
fnsave
pusha
cmpsl
cmp
mov
sbbb
sub
ljmp
add
jb
or
adc
sbb
bound
cli
push
mov
push
test
aaa
add
sub
dec
mov
jmp
sub
mov
ret
jecxz
lret
xchg
cmp
outsl
sub
sahf
loopne
inc
int
pusha
rcll
movsb
ljmp
cltd
sbb
loopne
shlb
dec
xchg
xlat
stos
sbb
jmp
pop
das
sti
pop
fstpt
in
les
jns
jns
jmp
sub
lcall
jns
movsb
lret
and
cmp
ret
cmp
ss
out
es
loop
mov
addl
mov
adc
je
pop
push
xor
or
mov
repz
sbb
cmc
and
lods
out
push
ja
sbb
push
jo
push
and
test
pop
outsb
add
inc
outsb
out
inc
lret
test
stos
in
mov
adc
inc
push
rcrl
adc
pop
cltd
xor
cmp
dec
js
mov
std
mov
in
dec
dec
fpatan
adcb
cs
daa
pop
pop
jle
aas
cmp
insl
popa
das
ror
sub
xchg
testb
lret
mov
gs
shlb
clc
or
mov
inc
enter
mov
mov
push
stc
in
daa
fs
push
inc
sub
fdivrl
add
test
test
popf
mov
xchg
dec
dec
xchg
int3
pop
jno
pop
pop
xor
js
xchg
adc
mov
cmp
jb
push
test
mov
loope
xchg
hlt
nop
dec
enter
shlb
mov
inc
push
lcall
lods
xchg
icebp
inc
fsub
nop
mov
stos
push
fsubrl
sbb
xor
inc
dec
aaa
les
inc
insb
movsb
cs
inc
mov
cmpsl
xor
push
cmpsl
and
adc
jbe
mov
dec
sbb
cmc
es
sbb
dec
orl
inc
cmp
adc
js
push
xor
xchg
aad
ja
icebp
push
push
xchg
iret
cmp
push
cmp
rolb
sbb
stc
mov
pop
int3
mov
rcrl
sbb
ficoms
lahf
incb
jae
and
pop
shlb
fsubrp
in
pop
add
test
pop
or
movsb
xchg
lods
in
mov
mov
pop
dec
stc
mov
push
mov
lret
mov
mov
push
mov
outsl
sbb
call
stos
sub
or
adc
loope
leave
jns
xchg
xchg
cmpsb
pushf
hlt
lahf
insb
jns
mov
push
clc
icebp
pop
xor
inc
pop
test
dec
movsb
int
stos
sub
xor
mov
xchg
into
sub
orl
sbb
jae
xchg
cwtl
shlb
sub
outsb
lea
xchg
pop
inc
aaa
push
add
or
inc
ret
in
or
jmp
lods
jge
out
mov
jle
inc
dec
sti
decb
ss
push
movl
ret
dec
mov
mov
lret
fsubl
lcall
movsb
in
cld
outsl
jge
push
push
scas
jae
iret
jecxz
lcall
xchg
sti
movsl
xchg
insl
cmpsb
xor
out
addr16
data16
or
aam
mov
and
mov
fisubrl
in
mov
cmp
repnz
sbb
push
xchg
loopne
test
mov
xchg
and
aaa
mov
or
and
daa
ljmp
je
adc
ljmp
xchg
xor
rcl
mov
jmp
xor
std
aas
insl
mov
jmp
stc
fsubrp
xchg
test
add
and
or
nop
stos
daa
mov
push
aam
in
jle
mov
movsb
pop
dec
sbb
arpl
mov
jnp
pop
in
jbe
daa
fxtract
shl
out
or
lahf
push
cmp
and
push
sti
sbb
xchg
dec
lods
push
test
addl
add
out
push
leave
inc
call
mov
mov
lods
inc
lods
or
ret
mov
frstor
jmp
add
ret
push
and
cmc
lcall
mov
jle
rol
add
cltd
out
push
lret
bound
pushf
test
addr16
add
shl
xorb
or
add
xchg
dec
lcall
addr16
fdivp
addl
or
lahf
ja
inc
popa
cli
stc
idivl
dec
dec
adc
xchg
xor
jae
int
das
shrl
and
dec
xor
cltd
aam
aaa
mov
push
rcll
or
andb
and
sub
pop
jge
popf
push
in
adc
xchg
nop
popl
out
mov
stos
inc
scas
mov
call
lds
mov
std
fidivs
sbb
xor
xchg
inc
out
test
xor
adc
xchg
in
stos
pusha
nop
lds
faddp
push
dec
fmuls
push
jns
mov
enter
or
push
pop
mov
inc
inc
adc
repz
adc
pop
test
add
sahf
mov
je
and
arpl
sbbb
mov
mov
mov
mov
jmp
fbld
call
sbb
out
aaa
popf
fcoms
cmp
push
popf
jle
and
add
mov
es
push
movsl
sbb
clc
mov
outsl
inc
fildll
sti
sbb
ja
leave
dec
idivl
sti
out
lcall
loope
jg
push
push
or
pop
test
lahf
dec
adc
pusha
lret
xor
sub
mov
dec
pop
adc
es
rclb
inc
dec
adc
shrb
mov
cmpsl
out
pop
stos
and
jae
movsl
sub
pop
lock
push
dec
jle
test
jg
inc
data16
jecxz
cmp
push
xchg
push
xchg
out
punpckhbw
js
cltd
xor
hlt
aas
int3
sbb
fidivrl
rcrl
add
xchg
decl
aam
std
cmp
pop
mov
mov
daa
test
addb
test
xorb
fimull
push
jl
mov
sbb
adc
ljmp
cmpsl
orl
pop
adc
ja
or
test
mov
sub
jb
or
and
rcll
mov
cmp
mov
push
lods
inc
mov
mov
mov
or
adc
sub
mov
push
inc
mov
push
pusha
aad
sub
add
ss
xchg
cli
inc
or
addb
cmp
ds
icebp
arpl
jl
insl
movsl
pop
hlt
inc
sbb
ss
cmp
test
cli
xchg
jbe
mov
pop
jle
sub
xlat
fmul
jp
mov
jl
pop
dec
xor
mov
xchg
loope
sbb
inc
pop
sbb
pusha
mov
std
in
dec
xchg
outsb
mov
sbb
adc
loope
jnp
les
ss
dec
sub
mov
add
dec
inc
inc
mov
mov
sbb
bound
jge
cmp
sbb
push
pop
push
or
jbe
pusha
inc
or
shlb
and
addl
or
or
in
ror
dec
mov
lret
cmpsl
arpl
out
jo
pop
int
ficoml
add
jl
daa
lahf
in
mov
or
or
insb
movl
push
add
and
sub
sbb
mov
pop
mov
jno
in
xchg
push
rclb
or
out
cld
outsb
jo
dec
cmp
push
ss
adc
inc
xchg
and
popa
mov
repz
jnp
in
dec
adc
sbb
xor
jle
push
pmaxub
cmp
xchg
mov
das
popa
pop
arpl
add
addr16
push
hlt
fistpll
out
push
push
cmp
std
aaa
xor
lahf
xorl
clc
ds
dec
insl
or
test
je
sbb
or
sbb
push
rolb
icebp
and
gs
mov
dec
push
mov
adc
aad
or
iret
pop
repnz
std
fwait
pop
icebp
inc
dec
cmpsb
test
cwtl
and
xor
movsl
pop
mov
mov
sti
stos
mov
sbb
rcll
push
enter
add
pop
inc
jnp
in
mov
push
test
mov
shlb
add
sbb
push
lsl
mov
mov
add
ljmp
shlb
ss
jne
pop
test
insb
jns
call
adc
xor
xchg
repnz
and
imul
pop
xor
bswap
jecxz
sahf
clc
sub
stc
add
in
xor
nop
adc
stos
push
dec
stos
dec
xchg
and
jmp
lret
out
xchg
out
sti
and
push
cltd
cmp
out
adc
add
mov
loopne
mov
cmpsl
cld
negb
popa
pop
dec
jp
pop
jmp
xor
rclb
aaa
or
jo
inc
xchg
cmpsb
cmc
shrb
rorl
xor
pop
inc
xor
inc
sub
dec
xchg
leave
fwait
aaa
cmc
icebp
mov
lods
inc
scas
add
xchg
jge
insl
or
sbb
fwait
mov
mov
popf
sarb
mov
lods
jp
leave
cmp
inc
loop
sbb
jle
rclb
aam
cmp
dec
into
inc
daa
jl
or
xor
push
and
rcll
stos
add
jge
sbb
adc
movsb
icebp
dec
int
inc
xchg
outsb
imul
out
add
mov
xor
pop
loope
pop
cmp
mov
loop
xchg
push
cmp
pusha
es
rorb
mov
sub
inc
pop
or
cli
and
sbb
mov
shrl
xor
ds
adc
and
xchg
dec
je
in
push
and
push
pop
loopne
add
cld
movsl
in
mov
sbbb
shll
add
dec
js
push
js
inc
lret
in
mov
cmc
popf
loope
jl
ret
mov
pop
and
scas
mov
shl
pop
mov
mov
xor
jge
lahf
sahf
xor
xlat
cmp
mov
pop
or
loop
xchg
adc
test
cmp
push
scas
sub
in
xor
inc
test
shlb
lret
xor
call
push
sub
xchg
inc
mov
lock
sub
clc
dec
xchg
push
and
inc
or
push
rol
int
fdivrl
jmp
sub
sbb
jmp
jmp
mov
dec
xor
xchg
cmp
mov
adc
xchg
fyl2x
clc
dec
stos
adc
js
push
test
dec
daa
mov
inc
fistl
pop
fidivrl
mov
mov
imul
xchg
iret
pop
mov
adc
pop
ljmp
mov
lcall
mov
or
je
in
or
mov
shll
or
aaa
aas
mov
into
push
fadds
xchg
ljmp
gs
stos
int
rclb
jns
fmul
lcall
inc
mov
mov
pop
mov
in
xchg
or
sbb
lea
xor
mov
push
rclb
push
and
je
lahf
prefetch
push
popf
inc
push
les
jle
in
dec
nop
nop
or
xor
stc
daa
rorb
jb
xchg
xchg
ja
push
in
popa
mov
fwait
xchg
sbb
push
cmp
loop
fildl
ja
je
dec
test
bswap
fidivrl
or
push
call
hlt
mul
xor
pop
in
jae
jne
inc
pusha
lock
inc
popf
xchg
dec
fcompl
cs
push
loope
sbb
jp
scas
cld
xchg
xchg
lret
xor
push
jbe
mov
jecxz
sub
aad
mov
adcl
push
repnz
mov
jp
in
popf
xor
inc
cmp
dec
pop
dec
in
adc
orb
shl
inc
imull
and
jp
sbb
int
xlat
ret
inc
cli
fldl
pushf
cltd
arpl
mov
aad
dec
pop
cld
xor
push
inc
scas
push
addr16
pushf
inc
xchg
adc
mov
je
and
inc
jae
mov
outsb
mov
es
addr16
xor
dec
pop
das
lcall
fimuls
adc
ja
push
mov
or
movb
or
fcoms
push
icebp
mov
lcall
stc
les
jns
sti
sub
add
adc
adc
repnz
popa
imul
sbb
das
test
mov
mov
add
sahf
out
in
mov
pop
jl
mov
jg
mov
inc
dec
inc
mov
and
jno
and
add
add
push
popa
mov
add
lret
insl
outsb
leave
xchg
stos
cwtl
ficoms
out
cmp
sbb
dec
cmp
adc
mov
enter
cld
adc
push
pop
sbb
jmp
inc
int3
adc
adcl
push
loopne
cmp
xorl
dec
xlat
push
push
out
adc
xchg
out
adc
jge
outsb
or
xor
add
xchg
push
fbstp
sub
add
mov
pusha
xchg
push
ret
sub
cmp
sbb
imul
cmc
and
add
mov
sbb
andl
stc
xor
push
xchg
xor
je
xor
dec
cli
sub
mov
bound
push
cmpsb
xor
push
mov
iret
dec
dec
xor
je
in
icebp
push
mov
fs
arpl
cmp
sbb
adc
push
xchg
mov
xchg
xor
sub
mov
ds
es
sub
nop
cmp
data16
adc
imul
les
or
mov
mov
mov
push
aaa
xchg
int
shll
jb
mov
mov
test
mov
aad
xchg
jns
loopne
or
mov
clc
jno
add
jp
jl
ljmp
insb
cltd
test
mov
sub
mov
mov
inc
sub
in
jne
sub
in
adc
sub
mov
roll
mov
scas
out
push
mov
ret
sbb
pusha
cmp
jge
rcrl
jbe
add
lret
iret
fdivrs
pop
pop
inc
cltd
les
fwait
sub
pop
jbe
popf
cmpsb
jmp
xchg
sub
rclb
outsl
mov
pop
fwait
jae
je
mov
or
mov
mov
xor
push
std
nop
test
pop
cmp
push
fnstsw
jge
fnstsw
outsb
lods
dec
ja
rcrb
stos
idivl
push
inc
push
imul
imul
les
sbb
int3
add
mov
jne
mov
sarb
call
xor
outsb
adc
xor
aam
aam
mov
dec
adc
inc
cmp
fs
shrl
fstpl
inc
fcompl
mov
sub
je
push
dec
push
pop
pop
cmc
push
cmpsl
push
dec
mov
cs
jo
jne
mov
jecxz
lock
icebp
jnp
mov
sbb
leave
dec
mov
sub
and
pop
xchg
inc
inc
dec
lods
inc
dec
pop
xchg
push
xor
lea
cmpsl
repz
sub
push
pop
mov
mov
int3
lock
cmpsb
ret
jl
lea
jl
push
push
add
mov
aaa
push
or
stos
pop
jno
sbbb
ja
insl
sti
inc
cmp
mov
fsubl
fs
enter
jmp
pop
cld
sub
pop
mov
dec
out
int3
mov
push
mov
mov
jmp
jo
popf
cmovne
adc
add
xlat
stos
fisubrs
loop
jae
pop
xchg
gs
je
push
and
hlt
or
mov
scas
adc
in
jge
mov
and
test
cmp
mov
lock
xchg
ret
repnz
cs
pusha
push
or
add
adc
xchg
inc
fimuls
jb
and
push
ret
push
cmp
ljmp
mov
pop
subl
jge
cmp
cwtl
call
mov
sti
sbb
movsl
cld
ficoml
orl
or
mov
push
lods
lret
sbb
sub
fucom
cmp
stos
dec
and
jmp
vpackssdw
cmp
jo
js
sbb
dec
sub
insb
data16
inc
jns
push
out
jb
push
shrl
and
push
adc
insl
mov
sbb
idivb
mov
sub
sbb
xchg
fisttpll
cs
add
push
stos
jns
popa
fs
aas
into
fisubrl
push
aaa
push
dec
mov
clc
pop
dec
int3
dec
movsb
leave
jle
or
je
scas
mov
scas
lods
lret
mov
testb
outsl
sbb
mov
add
aas
outsl
jecxz
and
decl
pop
xorl
and
adc
inc
cli
rorl
push
popf
xchg
pop
shll
pop
xchg
aad
and
fcmovu
sbb
aam
fisubrs
push
pop
in
sub
inc
in
jno
arpl
xor
and
hlt
push
cmp
push
into
adc
into
pusha
pop
adc
fdivs
adc
sti
sti
or
addl
mov
sub
les
aad
or
cld
mov
outsb
jbe
es
cmp
rol
dec
sarl
ret
jo
inc
pop
dec
in
iret
addr16
mov
sti
xor
xor
adc
sub
jbe
jb
mov
adc
dec
aad
ss
rolb
imul
add
mov
or
push
outsl
les
xor
in
cmpsb
sbb
fcoml
int
and
fistps
or
xchg
adc
push
xor
mov
movsl
mov
leave
inc
add
push
xchg
mov
movsl
shlb
int
mov
int
into
sti
push
jbe
jnp
dec
jl
div
mov
mov
add
outsb
loopne
xor
xchg
iret
das
xchg
push
lahf
jbe
addr16
xor
and
out
mov
mov
aaa
push
pop
leave
cmc
dec
xchg
insb
imul
ljmp
roll
inc
test
or
fnsave
mov
sub
popf
mov
dec
pusha
je
jmp
lea
rcrb
jecxz
rcl
xchg
popa
inc
push
aam
inc
mov
movsb
int
sub
mov
lock
imul
addr16
popf
mov
out
mov
adc
aas
in
je
in
lds
or
or
cltd
lock
rorb
push
loopne
aad
lea
pop
xor
xchg
inc
out
jp
fimuls
dec
scas
ljmp
cmp
cmp
add
xchg
jnp
pop
and
out
jbe
lea
lret
add
push
push
xchg
mov
out
mov
lea
fwait
adc
add
loopne
das
push
sysexit
pop
rclb
inc
in
repnz
das
inc
stos
shlb
sbb
popf
push
rcrb
xchg
jmp
lcall
mov
out
rcrl
sub
movsb
andb
mull
sub
sub
ret
mov
in
outsl
rcrb
cs
add
cld
lods
jno
inc
jno
repz
mov
aaa
sbb
clc
leave
and
orb
bound
cmpsl
and
push
sub
xchg
mov
inc
mov
pop
inc
popf
shlb
add
jle
clc
xor
lock
sbb
insl
ffree
test
inc
mov
addr16
aaa
scas
sahf
movsl
cmp
jle
add
into
test
fisttpl
fbstp
lcall
push
cld
repnz
jl
fcmovbe
sbb
push
add
dec
mov
jne
mov
addl
sub
cmp
loopne
mov
push
lock
cli
inc
gs
aad
insb
push
cmp
loope
loopne
lcall
lock
popf
xchg
push
daa
inc
ret
or
mull
mov
pop
outsb
inc
arpl
inc
gs
and
mov
loope
lods
cmpsb
pop
mov
mov
add
and
mov
inc
lcall
pop
iret
popa
adc
add
mov
sbb
mov
inc
and
test
in
jne
add
jo
pop
movsl
stos
les
xor
rcrb
add
insl
sbb
mov
cwtl
daa
hlt
ror
cmpl
sub
xor
jo
cmp
push
in
idivl
std
stc
jno
inc
inc
inc
and
sbb
fisttpll
push
or
bound
aad
fprem1
push
shrl
jnp
aaa
test
pop
stc
xchg
insl
inc
adc
stos
mov
sti
sbb
lret
xchg
xchg
fldcw
xor
inc
jecxz
push
push
ret
mov
inc
mov
shlb
and
mov
clc
out
jmp
testl
or
test
jnp
or
pop
mov
dec
repnz
addr16
push
mov
std
jl
jnp
out
sbb
pop
xor
push
cmp
lds
push
dec
rolb
in
cmpsb
cs
aam
adc
scas
push
sahf
loop
dec
and
pop
stc
lret
lods
cmc
outsb
add
push
iret
xchg
int3
pop
adc
inc
jge
nop
inc
adc
pop
out
clc
popl
iret
cld
push
pop
push
dec
iret
enter
frstor
mov
repz
add
xchg
movsb
shll
xor
sahf
push
inc
outsl
inc
mov
dec
fstps
adc
mov
pop
push
inc
xchg
cmp
pushf
repnz
push
jl
dec
mov
aas
push
cmp
movsl
pop
sub
fcmovbe
dec
fdivl
outsb
scas
mov
mov
jo
cmpsl
pop
test
mov
push
icebp
outsb
sbb
dec
nop
xchg
ja
iret
dec
mov
dec
inc
in
xor
rol
add
mov
push
test
pop
sub
shl
adc
jp
scas
iret
inc
outsb
push
jb
add
jmp
xchg
mov
cli
ret
mov
pop
sbb
jb
aas
cmp
movsb
add
mov
xchg
stc
xchg
push
inc
xchg
pop
xchg
jo
push
shll
cmp
stc
pop
push
mov
out
inc
dec
ss
pop
xchg
xchg
inc
inc
or
xor
je
es
jg
jle
and
xchg
int3
add
lea
sbb
jnp
mov
cmc
ja
push
out
mov
out
pop
mov
cs
sub
push
shr
sub
adc
dec
jmp
pop
leave
cmpsb
dec
jns
add
or
push
push
jg
into
arpl
shl
ret
incl
sub
stos
test
lods
das
push
push
jge
add
cmp
cmp
dec
shlb
nop
inc
loop
pop
aam
cmp
rol
jmp
scas
enter
mov
sub
orl
rcrw
testb
mov
ljmp
dec
inc
shl
mov
add
adc
gs
and
xor
inc
sub
mov
orb
pop
jecxz
sahf
jp
pop
cmp
jecxz
mov
pop
lds
es
inc
mov
mov
pusha
ljmp
xor
out
dec
ret
mov
xchg
sub
iret
inc
ss
mov
out
enter
int3
insb
pop
sti
shr
push
stos
add
fdivr
out
jmp
lods
mov
xchg
lret
out
imul
in
dec
xor
test
xchg
add
mov
lods
dec
jmp
insl
cli
jnp
pop
inc
cmpsb
scas
cmpsb
inc
add
stos
cmp
fcmovnb
xchg
in
inc
divb
mov
sub
mov
mov
pop
xchg
inc
pushf
movsl
daa
mov
mov
xorl
out
mov
test
sti
sbb
mov
mov
jbe
sub
ret
push
jbe
repz
add
cltd
adc
insb
test
daa
stos
ds
rcrb
jp
imul
push
mov
xor
push
fcoml
dec
out
or
loope
add
adc
fwait
sub
push
inc
or
lcall
or
fidivl
pop
mov
push
bound
xchg
push
pushf
clc
je
cmp
sub
cmp
lock
nop
lds
pop
dec
stos
lret
push
and
xchg
dec
xchg
test
fiadds
out
cli
jns
out
or
je
loope
sub
add
popf
jae
cmp
xchg
enter
into
jbe
mov
sub
mov
fistpll
int3
sub
popa
and
or
lcall
sub
xor
shl
inc
pop
push
stos
test
daa
pop
lret
jbe
fnstenv
movsl
dec
pop
mov
addr16
jae
daa
adc
sahf
xchg
adc
push
sub
arpl
push
sbb
pushf
xchg
adc
in
xchg
movsl
and
xchg
fcomps
aad
loopne,pn
fnstenv
test
cmp
dec
mov
cwtl
pop
or
or
test
clc
std
insb
jae
loope
pop
push
xchg
fs
cmpsb
jbe
loop
mov
out
inc
nop
in
push
iret
loope
mov
pop
dec
pop
repnz
or
cmovae
stos
outsb
push
out
jmp
clc
test
in
mov
jge
pop
inc
adcl
cmp
pop
xchg
mov
pop
test
sahf
pushf
popf
jecxz
pop
xor
xchg
and
xor
sti
gs
inc
fstpt
xchg
dec
xchg
rorl
es
lcall
or
aam
pop
or
cmp
leave
inc
inc
xchg
xor
jmp
lea
into
dec
push
jne
pop
pushf
idiv
xchg
pop
pusha
sahf
add
adc
shlb
xchg
inc
into
dec
mov
or
daa
xchg
adc
dec
divl
into
out
xchg
loope
push
rcrl
sbb
ds
push
mov
sub
mov
pop
call
push
in
outsb
xor
push
stos
push
inc
pop
dec
lods
adc
xchg
or
rcrl
fstl
aam
mov
mov
xchg
cmp
das
sbb
xlat
stc
pop
gs
gs
ss
sub
orl
inc
add
dec
mov
and
lods
inc
dec
out
mov
xor
jnp
addr16
mov
subl
xor
aas
in
std
sbb
push
fcompl
in
je
mov
stos
dec
inc
mov
and
adc
sbb
repnz
push
or
adcl
inc
gs
dec
sbb
scas
dec
or
clc
rcll
mov
xchg
subps
push
negl
adc
xchg
xrelease
xchg
movsl
fcoml
push
mov
mov
mov
jbe
iret
dec
xor
or
popa
lea
xchg
mov
xor
cmpsb
sbbl
adc
inc
dec
movsl
hlt
aas
lods
sbb
scas
inc
cltd
mov
sub
sub
ja
lahf
mov
xor
es
and
dec
shll
mov
pop
insb
mov
decb
cli
in
je
and
push
pusha
fistl
and
aaa
adc
inc
adc
or
shlb
out
push
fsubrp
sbbb
fisubl
xor
rolb
sub
xor
xor
jl
inc
xchg
fstpl
lea
addr16
push
outsb
adc
shll
xchg
sub
jb
mov
push
push
xchg
mov
jnp
xchg
in
les
lcall
shlb
leave
dec
lds
mov
arpl
add
mov
out
dec
cli
int
xor
adc
or
in
push
pop
ret
arpl
shll
loop
jo
lahf
cmp
fisubs
nop
jo
inc
cmc
dec
sub
stos
mov
xchg
scas
or
adc
fmuls
adc
push
mov
pop
push
dec
and
orb
notb
sbb
aam
stos
ficoml
pop
adc
fcmovnb
mov
movsl
jo
test
out
inc
cmp
pop
push
fiaddl
leave
mov
retw
fcomp
and
cltd
jae
icebp
xor
mov
sbb
jecxz
xchg
dec
jecxz
mov
cmc
hlt
dec
mov
mov
jno
imul
arpl
cmc
jmp
adc
mov
sub
out
cltd
jno
mov
jg
roll
xor
mov
add
ret
xchg
add
jne
mov
movsl
inc
sub
dec
int
inc
and
pop
pop
jns
xchg
mov
cmp
js
pop
dec
push
xchg
sahf
add
inc
lods
pop
insl
jae
sub
jne
push
stc
sub
je
andb
mov
add
adc
dec
fisubs
jns
ja
in
je
lahf
lods
stos
jge
je
mov
cmp
sub
loope
sbb
es
inc
sbb
jne
inc
xor
jmp
dec
mov
jns
and
adc
inc
and
sub
pop
mov
andb
jne
cli
lea
js
and
out
push
movb
out
lret
jmp
aaa
stos
xchg
ljmp
pop
push
jbe
add
mov
mov
lcall
mov
popf
jne
sbb
and
mov
and
jle
jg
movsb
push
rcrl
stc
rorb
outsl
mov
jecxz
out
jns
jno
jno
add
insb
push
or
xor
pop
and
cmpsl
lods
sub
add
movsb
cmp
xchg
bound
sub
adc
mov
sbb
popa
fwait
cltd
imul
mov
xchg
outsl
jne
pop
jbe
out
insb
cmp
aad
xor
mov
cltd
or
adc
sbb
dec
cmc
outsb
insb
ljmp
dec
add
stc
andl
ljmp
adc
mov
add
imul
mov
jl
jns
js
push
test
xor
out
sub
or
clc
jne
shrb
sbb
lcall
xchg
inc
mov
adcb
xchg
or
out
or
loope
inc
xchg
inc
inc
out
lods
pop
lods
and
jnp
repnz
enter
xchg
jbe
push
mov
cli
mov
nop
and
in
rcrl
lcall
and
jns
cmp
fimull
pop
and
daa
scas
popf
mov
loope
xchg
xchg
stos
sub
insl
cmp
jmp
add
insl
not
mov
int3
sub
mov
lods
dec
xchg
loop
fistpll
sub
lret
stos
mov
fcmovu
jno
arpl
addr16
xchg
sub
test
mov
cs
and
and
outsl
popf
jae
and
fs
dec
jns
mov
mov
cld
pop
pop
xchg
pop
sbb
sub
jno
fwait
mov
pusha
cmc
jnp
or
test
adc
lahf
mov
adc
sub
call
add
sbb
pop
xchg
sbb
push
scas
cmp
sbb
imul
aaa
push
test
lret
enter
in
aam
xor
pop
and
jl
push
mov
imul
repnz
lret
shll
mov
push
test
pop
mov
ljmp
mov
cwtl
das
or
ds
mov
int
mov
mov
dec
pusha
xor
push
movsb
sub
sbb
or
push
shlb
mov
add
xor
mov
sub
lods
dec
cmp
and
inc
xchg
in
xchg
adcl
mov
jbe
pop
pop
nop
rolb
adc
mov
rcr
fldenv
fdivs
outsl
jns
adc
int3
ljmp
jo
push
insl
mov
mov
jns
addr16
and
dec
outsl
and
les
push
icebp
ljmp
cmp
enter
shll
loop
in
ficoml
cmp
shll
add
lret
andb
sbb
dec
mov
or
add
add
lahf
sahf
adc
call
std
sbb
in
pop
push
outsb
fcomps
xor
cli
sbb
xchg
sbbb
xor
add
adc
or
subb
pushf
sti
ret
popa
push
cmp
mov
cmp
jl
mov
cmp
sbb
fidivrl
daa
lret
push
xchg
daa
sbb
out
xchg
lds
arpl
cmp
fisubrs
daa
mov
gs
je
mulb
jle
cmp
sti
and
push
ret
add
out
sub
out
subb
mov
xchg
scas
inc
jnp
popa
lcall
pop
in
ficomps
mov
mov
push
cmp
lods
cli
add
lods
ret
inc
jnp
das
xchg
dec
aam
test
inc
mov
mov
sbb
pusha
popf
aam
imul
or
jns
cltd
js
loop
adc
mov
mov
ds
or
push
adc
test
cmc
sub
stos
popf
loope
lds
je
dec
mov
adcb
mov
repz
adc
loope
icebp
lock
pop
mov
mov
jb
or
xchg
call
cmp
push
cmpsb
std
repz
push
data16
dec
data16
adc
pop
mov
fsub
xchg
xchg
cmovno
imul
mov
sbb
pop
out
test
push
push
fst
pop
pop
or
and
sbb
js
shl
dec
add
push
mov
sub
mov
inc
and
loop
lret
cmp
mov
scas
jmp
mov
lret
push
pop
sbb
pop
fcomi
mov
sub
adc
lret
pop
cs
sbb
mov
lods
push
push
mov
jle
sbb
icebp
sbb
outsl
filds
xchg
icebp
repz
aaa
sbb
lock
and
nop
mov
sarb
and
push
addr16
dec
mov
stos
fwait
out
or
je
dec
loop
push
lea
dec
push
mov
stc
sub
rcrl
imul
in
sbb
jge
mov
pop
adc
lahf
shlb
lock
pusha
push
aam
cmp
test
mov
cmp
aad
fdivrl
pop
jge
cmp
dec
or
xor
fs
repnz
aas
ret
dec
pop
or
sub
sub
and
arpl
loopne
imul
pusha
and
call
cmp
sahf
mov
hlt
loop
jle
add
sub
cmpsb
sbb
pop
lahf
dec
outsb
mov
ljmp
add
cld
pop
and
ds
add
movsl
shll
scas
mov
in
repz
in
loope
clc
idivb
xchg
mov
divl
mov
push
ljmp
idivl
dec
mov
ja
or
imul
mov
repz
leave
mov
cmp
lods
adc
cltd
adc
jecxz
iret
cmc
xchg
pop
cmp
lock
push
int
cmp
fnsave
and
popf
xor
pop
shll
cmp
frstor
in
out
push
movsb
out
jne
dec
cmp
mov
lods
mov
xchg
inc
mov
sbb
arpl
lret
mov
mov
adcl
add
add
jno
out
data16
aad
dec
sub
ret
cmp
mov
or
jne
sub
jae
stc
mov
mov
std
inc
aaa
pusha
or
jp
stc
rol
outsb
dec
adc
push
jmp
mov
sbb
cwtl
shrl
movsl
pop
ss
stos
aaa
inc
push
inc
adc
aaa
add
pop
out
ret
and
test
add
cmp
push
sbb
dec
xabort
add
dec
mov
pop
xchg
xor
aam
imul
cmp
clc
fsubrl
inc
dec
xchg
push
add
cmp
dec
inc
sbb
mov
push
dec
jne
fildll
setge
movsl
cmc
mov
xchg
sbb
add
into
adc
cwtl
mov
movl
loopne
xlat
jp
insb
cld
stos
pop
xor
inc
fwait
mov
pop
aaa
jno
cmp
rolb
jp
test
shrb
pusha
loop
push
imul
unpckhps
push
inc
jge
push
shlb
scas
mov
adc
inc
loope
or
sbbb
lahf
ror
pop
add
xor
out
stc
jg
add
mov
aaa
jmp
rcrl
lods
or
cmp
int
jns
pusha
dec
or
or
lret
scas
int
inc
les
push
stc
repz
pop
cltd
dec
cmp
fwait
jno
test
repz
mov
xor
addb
fsts
dec
outsl
mov
mov
push
outsb
mul
xchg
fcmovb
adc
daa
pop
dec
mov
mov
push
mov
sub
test
mov
imul
dec
stos
dec
pop
dec
outsl
sbb
pop
xchg
filds
lahf
sub
imul
ja
lret
cmp
rcrb
ror
sti
xor
leave
mov
add
jle
xor
out
dec
cmp
jle
inc
dec
pop
cwtl
mov
lret
pop
aaa
sbb
and
sub
pop
decb
add
ss
xlat
fsts
push
in
xchg
jle
mov
jne
xchg
dec
into
cld
push
cld
imul
movsl
xor
mov
mov
pop
inc
adc
dec
shrl
nop
test
jb
insb
sbb
in
jo
mov
dec
inc
jo
mov
push
shl
in
cmp
sub
mov
ja
lock
add
enter
xchg
in
enter
shrl
adc
loope
stc
add
arpl
xchg
push
ljmp
xchg
addr16
pop
dec
xchg
and
adc
test
xchg
add
fwait
inc
enter
xor
jge
push
jae
dec
mov
jae
mov
icebp
xor
std
xchg
cmp
or
push
orb
jno
aaa
pop
mull
cmp
add
inc
js
popa
and
std
xor
test
mov
cltd
jbe
sbb
arpl
jmp
ss
pop
repz
pop
push
fld1
mov
add
push
xlat
lcall
fisttpll
data16
movsl
lret
pop
aas
stos
add
daa
movsl
testl
and
mov
jmp
es
pop
sub
or
xlat
jmp
lcall
lea
lea
repz
pop
dec
and
sbb
cmpsl
or
js
bound
ljmp
movsb
notl
or
lcall
ljmp
inc
in
loopne
mov
icebp
aaa
data16
cmp
fcoms
lods
aaa
scas
xchg
nop
inc
jae
lret
sarb
jns
hlt
push
xor
lea
xchg
mov
mov
push
adc
addb
cmpb
add
or
daa
cwtl
data16
int3
sbbl
pop
scas
mov
inc
or
fiadds
lcall
daa
das
lds
push
cld
bound
dec
test
pop
out
adc
push
push
jne
mov
dec
out
or
push
jecxz
mov
xchg
test
xlat
push
inc
pop
daa
mov
sbb
sbb
stc
jl
sub
mov
das
in
push
dec
sub
scas
scas
pop
cmc
xchg
std
xlat
dec
add
outsb
fdivs
popf
push
je
add
mov
stos
jecxz
xchg
push
or
and
repz
or
dec
pop
std
faddp
add
imul
cs
jg
in
push
sub
jnp
dec
shll
cmpsl
rolb
shll
scas
scas
mov
cltd
jmp
aam
out
repnz
pop
sub
das
popa
retw
pop
mov
es
xchg
loopne
xor
fs
cmp
nop
push
movsb
jle
sti
add
es
mov
mov
push
nop
jae
xchg
icebp
pop
sarb
fiaddl
inc
hlt
out
cs
pop
inc
jmp
cmp
test
adc
fistpl
pop
clc
daa
ss
shrl
outsb
adc
mov
cmp
jns
fsubrl
stos
into
or
fstp
mov
mov
call
mov
ljmp
xchg
and
sub
pop
cmp
jbe
push
jl
rorb
in
cltd
fisubrl
fsubs
jmp
pop
testb
call
xor
pop
sbb
sbbb
mov
out
jg
and
jae
pop
scas
push
loop
lock
dec
mov
imul
and
xor
inc
pop
cmp
test
and
ds
xor
sbbl
inc
aad
test
mov
adc
push
xor
shlb
jg
cmp
bound
dec
pop
imul
sub
and
and
test
adc
dec
pop
push
dec
sub
lcall
mov
pushf
out
and
cmp
fistl
dec
jns
sti
int
mov
in
hlt
nop
add
movsb
cmp
inc
xchg
dec
mov
fidivl
fbld
add
jb
pop
pop
dec
aad
fcoms
ds
movsb
popf
mov
js
adc
mov
and
inc
aad
mov
xor
imul
outsl
push
clc
adc
inc
pop
shlb
pop
xor
loope
aaa
mov
or
icebp
add
mov
pop
xor
sbb
test
addl
ss
stos
mov
push
pop
cmp
inc
movsb
je
cmpsl
sub
sbb
add
divb
js
lret
push
push
mov
push
addr16
repz
test
adcl
lock
jl
jae
sbb
adc
insl
lahf
ret
inc
push
adc
inc
dec
push
xchg
repnz
daa
in
arpl
inc
loopne
xor
mov
lret
mov
daa
pop
out
add
fidivs
pop
faddl
call
int
add
mov
lods
in
mov
mov
ret
popf
sbb
mov
or
sbb
sub
inc
rcr
sbb
unpcklps
push
mov
cmc
ljmp
adc
inc
xchg
fdiv
movsl
aam
ljmp
cld
decl
incb
pop
js
ret
cmp
subps
test
adc
sbb
je
mov
lcall
mov
aaa
sub
sub
sahf
push
pop
enter
shlb
sub
jb
pop
or
sahf
push
leave
cli
push
push
das
jecxz
pop
xchg
out
ds
ja
mov
push
mov
fsts
repz
sarl
mov
adc
out
push
jnp,pt
insl
ds
dec
lods
push
push
jmp
in
sub
repnz
push
scas
stos
or
adc
lahf
aam
loopne
mov
cmp
dec
bound
lret
inc
and
sbb
lock
mov
repnz
enter
push
fisubrs
adc
lret
adc
shlb
sub
xchg
daa
shll
jp
lock
gs
lret
jns
or
dec
shld
stos
out
pop
cli
inc
cwtl
fstps
sub
adcb
push
add
pop
mov
fwait
sahf
std
cmp
mov
sahf
shlb
xor
sub
js
pusha
inc
ljmp
enter
outsb
sbb
pop
pushf
xor
add
insl
movsl
fstps
test
and
xorl
mov
pop
ljmp
cmc
sahf
push
fisttps
fiadds
mov
mov
dec
pop
mov
sbb
mov
jae
pop
mov
or
jns
mov
je
mov
test
cmp
int
rcr
xor
jns
sbb
fwait
cmpsb
cs
leave
or
jno
or
add
jge
or
push
xor
inc
mov
jp
pop
adc
pop
popf
leave
pushf
insb
insl
xor
pop
std
js
sahf
adc
push
mov
mov
mov
cmp
inc
and
jecxz
nop
lret
jno
arpl
jecxz
lock
mov
loopne
or
add
pop
cld
out
dec
xchg
orb
or
andb
leave
xchg
jne
repnz
sub
adc
adcl
and
jbe
mov
pop
inc
and
xchg
out
and
stc
jl
cli
sbb
nop
sub
push
lods
sti
xor
pop
or
sub
mov
inc
cmp
cmp
mov
sub
insl
sbb
mov
or
mov
out
flds
inc
jge
or
add
es
addl
movsb
loopne
mov
arpl
jle
punpckhwd
cld
mov
sbb
sbb
hlt
cmp
adc
inc
cmp
ja
loope
dec
lock
bound
dec
insb
call
fcoml
push
notb
jge
out
insb
and
xlat
dec
repz
dec
add
or
and
sbb
or
daa
lret
mov
scas
lock
add
mov
cltd
dec
mov
cmpsb
fs
sbb
and
inc
dec
imul
mov
out
insb
jbe
pop
adc
or
lock
and
or
mov
inc
out
mov
cwtl
fisubrl
jmp
cwtl
aas
xor
stos
pop
stos
imul
fidivrl
mov
cmp
xor
clc
fisubs
inc
or
fs
jmp
pop
imul
fnstsw
aaa
and
and
int
push
aam
pusha
insb
sub
dec
fmull
pusha
test
inc
xchg
cmp
dec
clc
xor
addr16
mov
xchg
lock
js
push
subb
lods
dec
cli
or
xchg
inc
xor
mov
outsl
pusha
push
jne
cmp
sahf
dec
arpl
xchg
in
xchg
mov
loopne
mov
mov
aas
fwait
bound
add
pop
xrelease
or
cmp
mov
xchg
jmp
push
test
popf
ss
mov
leave
adc
sub
pop
aas
mov
sbb
sbb
adc
cmpsb
stc
incl
and
adc
jp
rcrl
hlt
js
xlat
and
fldt
or
push
jecxz
lods
jp
xor
sub
or
je
in
mov
sub
rcrl
leave
push
xchg
ret
mov
mov
ror
call
xor
scas
ljmp
jl
shlb
sub
int
lcall
fidivrs
test
mov
adc
aas
lods
and
jns
jmp
push
dec
xlat
fs
mov
lret
test
aas
adc
pop
in
insb
ss
sbb
ret
mov
pop
lret
xor
popf
add
xchg
movsb
sbb
ja
pop
aaa
test
inc
jns
and
inc
mov
in
ljmp
loop
add
xchg
inc
repz
add
mov
loope
sub
or
lock
jbe
sub
imul
cmp
in
mov
jnp
push
cld
sbb
mov
sarl
mov
push
iret
jecxz
add
lods
mov
dec
cmp
inc
jge
xchg
movl
std
sbb
sti
sbb
sbb
cmp
add
gs
test
add
jmp
xor
mov
adc
outsb
pop
fldenv
rcr
stos
push
ja
mov
leave
mov
xor
out
icebp
add
inc
and
or
mov
xor
sbb
sbb
cltd
int3
ljmp
insl
dec
mov
lods
stos
ret
es
in
and
xchg
test
add
mov
hlt
icebp
cs
sub
sub
outsb
out
push
mov
sbbl
lahf
in
cld
in
push
aas
adcb
mov
xor
es
arpl
fs
lea
inc
aad
jg
out
and
jecxz
lret
pushf
rolb
stc
mov
lods
leave
mov
pop
pop
shrb
call
cld
pop
and
inc
pxor
or
mov
mov
std
mov
pop
jne
inc
decl
and
cmp
lds
popa
add
or
loop
loopne
xor
mov
fistps
lcall
enter
dec
sbb
orb
enter
or
xor
enter
sbb
pusha
xor
jb
rcrl
ret
or
or
push
loopne
and
push
dec
cmp
jb
testb
xchg
cld
mov
mov
setbe
lock
test
ret
mov
hlt
and
je
xchg
enter
inc
or
cmp
push
data16
cs
xor
pop
jl
bound
fiaddl
add
push
sahf
imul
sbb
mov
inc
jns
out
adc
lret
les
and
enter
out
jg
mov
addb
mov
shl
ret
cmp
xor
sbb
popa
cs
movsb
or
bound
sub
loopne
insl
mov
add
add
dec
aad
sbb
adc
adc
xchg
push
mov
mov
lods
push
pop
mov
in
sub
pop
repz
out
pop
lods
outsl
les
lods
sbb
das
or
cli
cmpsl
xacquire
push
jmp
jns
xor
lock
scas
adc
hlt
or
pop
scas
in
jmp
imul
mov
imul
test
jno
insl
push
es
xlat
lods
loopne
mov
icebp
negb
pop
jbe
imulb
xlat
in
mov
addl
orl
std
cld
cmc
pop
xchg
pop
push
in
push
add
notl
stos
sarl
ret
shr
mov
inc
pop
push
add
xlat
mov
add
cmpsb
xlat
mov
fmul
add
xchg
out
mov
dec
and
insl
mov
xlat
sbb
insb
lcall
shlb
fsubl
cmp
adc
or
dec
xchg
xchg
push
mov
or
clc
es
mov
rorl
lock
lret
jae
fnstcw
push
mov
adc
mov
and
les
popf
add
call
stos
movsb
lods
jmp
pushf
loop
fidivrl
fldt
mov
jp
xor
test
addr16
fimull
divl
cmp
mov
inc
sbb
pop
mov
adcb
xor
dec
mov
dec
test
lret
mov
shll
out
pop
arpl
fwait
xchg
cwtl
rcrl
and
gs
mov
out
mov
ljmp
mov
jae
sub
fadd
cmp
stc
jo
and
xchg
add
cmp
out
inc
or
sahf
pusha
jne
push
ljmp
lret
cld
in
testl
sub
sub
mov
lahf
ja
int
dec
int3
push
dec
inc
popl
inc
dec
and
shll
jno
aas
pavgw
fsubrl
inc
divb
and
and
adcb
and
push
rolb
xor
mov
mov
inc
pushf
xchg
or
add
hlt
mov
fwait
imul
mov
lret
xchg
mov
scas
lret
mov
add
lods
sbb
jp
xor
xor
mov
xor
mov
sbb
xchg
and
xchg
mov
jo
imul
int3
sti
stc
add
adc
mov
pop
test
dec
mov
mov
inc
mov
sbb
call
nop
push
sbb
sbb
jg
pop
sbb
mov
mov
fs
jg
inc
and
lock
push
xchg
stos
xchg
imul
pop
inc
sub
cmpsb
shrb
popa
das
addl
int
mov
mov
aaa
scas
in
cmpsb
push
mov
movsb
push
arpl
xlat
cmp
sub
add
xor
dec
bound
mov
gs
scas
mov
mov
movsl
push
push
int3
lahf
xor
sahf
fimuls
fwait
addr16
adc
stos
mov
dec
ljmp
imulb
pop
cli
mov
ficoms
pop
sub
in
and
mov
shl
add
in
lcall
sub
xor
cmc
dec
pop
popa
lea
insb
inc
std
sbb
mov
lods
pushf
sbb
cmp
in
nop
inc
cmp
xor
mov
sub
adc
mov
rclb
mov
mov
inc
inc
fcmovbe
rclb
sbb
xchg
xchg
scas
inc
xor
pop
cltd
xchg
lret
mov
jbe
cmp
and
xor
into
push
stos
lahf
sbbl
cwtl
int
shlb
jb
aas
inc
jmp
negb
push
jno
movsl
js
and
pop
inc
mov
xor
jp
rorl
imul
mov
call
xchg
jg
xchg
fwait
jnp
aam
or
lods
sub
pop
adcb
je
pop
dec
ja
jae
ss
jecxz
arpl
rcll
pop
cmpsl
adc
adc
pop
lods
mov
shl
xor
cmp
or
mov
aam
roll
mov
test
and
test
jecxz
adc
inc
ljmp
push
repnz
imul
data16
je
jno
into
test
sub
jmp
int3
out
mov
outsb
dec
into
cmp
cmp
jecxz
sbb
adc
push
push
nop
sbb
xor
jae
and
push
std
push
lods
cmp
cmp
jne
jle
pop
push
in
roll
icebp
cmp
jmp
sub
xor
addr16
dec
cld
pop
jnp
out
sbb
mov
mov
test
push
cmp
shrb
xchg
stos
jno
lcall
test
dec
push
and
test
mov
mov
xor
jne
test
mov
aas
sbb
test
cmp
lcall
sub
stos
add
std
cltd
push
popf
cmp
movsb
out
and
dec
xor
cs
mov
test
and
dec
sbbb
lret
xchg
faddl
scas
js
clc
mov
out
inc
xor
mov
lret
xor
fsub
sub
or
js
int3
cmp
push
pop
gs
xor
mov
rcrb
cwtl
sarl
mov
push
aad
cmp
sub
sarl
ror
jp
std
sub
mov
mov
pop
xchg
pop
scas
fadd
inc
stos
and
cmp
adc
ljmp
sbb
out
aam
fsubrl
xchg
adc
xchg
ret
fwait
mov
xor
aas
mov
xchg
sub
fucomp
and
mov
rcrb
dec
cmp
into
xchg
or
jecxz
in
push
jbe
mov
and
lcall
imul
or
xchg
cmp
mov
and
cmp
hlt
mov
and
and
xlat
adc
cmp
jne
std
inc
and
cmp
sbb
cwtl
movhps
in
mov
or
xor
pop
rorb
repz
call
addr16
popa
mov
popa
cmp
in
mov
fisttps
jne
inc
cld
mov
sti
and
out
stos
iret
mov
and
mov
push
push
xchg
out
dec
pushf
jno
xor
test
jne
pop
cmp
ss
pop
repz
cltd
add
lock
inc
test
fmuls
pop
adc
adc
adc
fldcw
sbb
lock
mov
mov
into
mov
hlt
repnz
and
push
cld
stos
or
outsb
cmp
mov
test
hlt
mov
or
push
push
std
xchg
sub
insl
push
or
xchg
js
or
dec
dec
insb
add
pop
divb
xchg
xchg
or
out
xor
stos
push
xchg
and
popf
test
jo
and
mov
mov
out
movsb
push
outsl
icebp
push
pop
nop
pop
sub
ja
test
mov
ret
mov
inc
fmulp
ret
loop
and
test
push
dec
test
xorb
mov
xchg
sub
mov
and
sub
jo
add
pusha
stc
rclb
pop
rorb
lret
fisubl
jb
leave
mov
push
cwtl
jp
add
add
jmp
je
adc
aad
loopne
mov
push
push
popf
int
jbe
or
dec
cmc
pusha
jge
out
mov
cmp
pop
daa
frstor
loop
jb
daa
xor
or
cmp
daa
adc
les
cmp
inc
out
pop
pop
stos
fbstp
rorb
test
add
jl
out
mov
fcoml
in
xor
fstl
or
sbb
xchg
pop
addr16
movsb
jb
je
loope,pt
mov
lds
inc
mov
fsubl
shrb
andnps
xor
mov
mov
cmp
scas
mov
daa
sub
in
adc
xchg
and
or
test
shll
outsl
clc
cmp
in
pop
adc
es
sub
add
jl
int3
loope
push
inc
pop
jnp
fcomp
cld
movsl
pop
pop
sub
jbe
incb
add
adc
fstpt
dec
xchg
test
xlat
adc
fbstp
es
cs
push
mov
daa
inc
dec
and
mov
clc
sbb
sbb
sarb
fdivl
std
jg
es
in
push
pop
adc
cmpb
push
jg
xlat
jg
xorl
stc
je
lea
fisubs
sbb
std
rol
pop
aam
ss
pop
loop
sbb
je
lahf
clc
mov
ja
push
xchg
ja
jbe
jmp
cli
push
xor
push
xchg
mov
out
push
pop
hlt
ds
push
scas
std
jne
sbb
adc
shll
xchg
fincstp
xchg
sti
data16
cmc
cmpsl
into
add
xchg
movsb
sahf
into
mov
push
mov
sbb
lret
lods
mov
je
mov
std
sub
aaa
dec
cmp
dec
sar
int3
repnz
popa
add
jno
cmpb
dec
pushf
xchg
enter
pop
fs
mov
push
scas
mov
adc
cld
xchg
or
push
mov
jbe
iret
ljmp
hlt
jge
jg
fldenv
jnp
shll
roll
add
pop
xor
mov
aam
xchg
sbb
inc
jecxz
cmp
insl
jge
pop
cs
or
and
xor
mov
mov
push
push
jno
test
or
xchg
jns
mov
stc
push
push
adc
adc
pushf
mov
rclb
add
out
push
data16
fimuls
adcl
pop
or
pop
sub
and
mov
arpl
ja
cmp
addr16
xchg
xor
leave
xchg
inc
mov
xor
orb
or
push
pop
pop
ret
add
inc
cmp
xor
cmp
xlat
and
imul
nop
pop
sub
loopne
int3
cli
xor
aad
comiss
dec
adc
mov
push
cmc
sti
out
fisubl
cmove
in
scas
mov
mov
jecxz
push
loopne
jae
inc
fdivl
xchg
aas
jmp
dec
pop
addr16
sub
das
sbb
mov
add
das
inc
cmp
lahf
lea
fnstsw
inc
daa
popf
or
lret
sbb
xor
test
out
cmp
mov
rolb
add
test
dec
lock
fcoml
psubusw
imul
les
push
lods
ret
in
cmc
sbb
sbb
rorl
mov
cld
stos
and
enter
roll
aaa
sbb
shr
cltd
rcrl
sbb
xor
add
push
cmp
cwtl
call
scas
in
popf
fdivrl
out
mov
nop
xchg
lock
lods
xor
jo
inc
xchg
or
xor
mov
push
outsb
dec
out
lds
pop
sbb
mov
lahf
dec
inc
jg
sbb
and
cmpsb
stc
out
and
fbstp
ja
inc
imul
and
xchg
mov
mov
mov
jns
sub
push
xor
int
sub
lods
ret
stos
imul
push
aas
fstps
andb
adc
cmp
data16
cmc
in
push
out
bound
jae
pop
push
push
shrb
pop
mov
mov
insb
jg
mov
es
out
push
push
out
rcll
push
nop
aas
dec
clc
dec
mov
enter
cltd
mov
icebp
outsb
inc
lods
fsts
inc
lahf
pop
pop
push
movsb
xor
int
andb
mov
and
jl
adc
pusha
sbb
pop
test
mov
sbb
ds
outsl
fistps
cmp
mov
push
out
sbb
ja
test
mov
push
pop
sbbl
push
mov
cmc
mov
mov
mov
or
add
test
push
add
inc
cmpsb
mov
addr16
adc
or
shl
cmp
ja
test
adc
movsb
les
insb
cmp
sbb
das
ja
divb
mull
test
lcall
mov
testb
xchg
mov
dec
xchg
ret
ss
lods
jg
idivb
adc
push
in
push
in
mov
leave
pushf
jle
mov
add
or
dec
sub
add
stc
ror
cmp
inc
push
lea
cmp
aad
push
sbb
ret
lret
sub
cli
movsl
sub
or
ret
je
or
repnz
or
enter
bound
aaa
sub
fwait
and
adc
test
icebp
movsb
in
jg
nop
es
dec
addr16
add
push
mov
fidivl
cld
mov
cmp
dec
jle
fildll
cwtl
cmc
in
adc
push
push
pop
or
pop
mov
push
mov
jge
cwtl
mov
fwait
stos
in
cmp
mov
aam
lock
add
add
ficoms
repz
mov
sub
jno
sbb
or
cmpsl
pop
cmp
inc
aaa
cmp
bound
adc
stos
movsl
fdiv
or
cmp
cmp
xchg
sub
cltd
mov
and
sub
xchg
icebp
pop
movsb
insb
mov
loope
dec
mov
xor
fnsave
cmp
push
mov
pop
loopne
mov
jns
adc
sbb
inc
addr16
cmp
arpl
inc
push
sarl
call
inc
mov
xor
and
fdivl
or
fidivl
test
int3
mov
adc
das
call
push
xchg
bound
popa
cmovo
lahf
sbb
push
dec
pop
adc
inc
sub
cld
test
xchg
cmp
mov
xchg
sub
jl
fs
aas
mov
getsec
lods
out
push
push
lea
dec
jecxz
mov
mov
mov
out
int3
arpl
adc
mov
int
xchg
add
aad
jo
dec
lea
push
push
dec
sarl
push
xor
dec
fcom
xor
aaa
rorl
out
cmpsb
push
imull
fbld
pop
jb
push
jle
jmp
into
lahf
dec
mov
call
ja
mov
imull
xor
or
lds
inc
add
adc
jnp
push
dec
insl
cmp
scas
test
cmp
sbb
stos
inc
pusha
mov
push
jmp
add
cltd
jge
mov
arpl
clc
inc
lret
and
cmc
push
dec
popa
imulb
xor
stos
cwtl
and
das
or
and
out
xchg
mov
xchg
ss
imul
stc
mov
je
or
test
cmpsl
jecxz
xlat
fnstcw
roll
fwait
mov
call
pop
pop
mov
ss
add
cmp
xlat
repz
mov
cmp
pop
inc
sub
inc
or
lock
adc
dec
sbb
sub
dec
imul
jno
sbb
into
rcll
pop
inc
cmp
in
or
cmp
rorb
nop
aas
repz
test
cvttps2pi
or
add
sbb
sub
adc
adc
dec
lods
cld
sahf
jmp
inc
arpl
inc
pop
dec
fisubs
and
adc
lock
cmp
xchg
mov
dec
jge
iret
rcll
jno
ja
mov
stos
insl
xor
or
rclb
cmp
cld
inc
inc
cmpb
xor
insl
mov
roll
cltd
inc
flds
pavgw
sbbb
cld
dec
xor
cmpsl
mov
cwtl
mov
enter
rcrb
insb
int3
xchg
jg
and
icebp
movsb
push
fwait
lret
adc
ja
add
dec
lods
mov
add
xchg
sub
mov
sub
xchg
push
jae
and
mov
mov
pop
lahf
cmpsl
xor
shll
arpl
repnz
sub
lods
jmp
sbb
ja
scas
cmp
in
negb
mov
sub
add
jne
cld
cmp
shlb
daa
jnp
js
push
add
jne
or
cmp
fdecstp
push
jno
data16
jge
inc
insl
xor
ret
push
mov
aaa
sarb
xchg
pop
add
dec
mov
insb
dec
fidivrs
repz
into
jecxz
mov
push
movsb
push
pop
test
aaa
push
jp
pop
aaa
add
push
insb
or
ret
cmpb
test
stc
xchg
das
mov
inc
dec
fcoms
mov
mov
mov
ss
scas
ljmp
sbb
out
jp
cmpb
sub
test
rcrl
shrb
into
and
lock
adc
adc
stos
dec
mov
ljmp
jle
in
rolb
xorl
leave
dec
mov
xchg
sahf
lret
enter
aaa
aad
xor
sbbb
or
adc
mov
out
fidivl
xlat
and
pushf
in
mov
ds
daa
aaa
xor
adc
mov
or
jp
sahf
mov
cli
jns
cs
insb
mov
stos
adc
push
test
pushf
or
sbb
mov
mov
xchg
lret
js
add
ror
iret
aas
mov
sbb
cwtl
pop
pop
or
pop
cmp
fnsave
jne
mov
xchg
pop
imul
es
xchg
sub
pop
mov
popf
push
stos
jnp
or
loop
lea
jecxz
clc
or
mov
insl
dec
mov
jo
repnz
mov
push
andl
loope
pop
and
lret
and
outsl
nop
out
imul
pop
xor
sarl
sbb
push
pop
adc
not
push
lret
incb
loopne
std
xor
jbe
ljmp
and
push
lcall
adc
and
inc
jb
sub
dec
mov
pop
insb
cld
subb
mov
mov
adc
scas
jg
or
or
xchg
xchg
xchg
xlat
and
cltd
lods
cmp
xor
pop
dec
cmpsb
out
scas
mov
push
jne
xchg
in
and
xchg
fdivs
sbb
xorl
jo
mov
sti
jg
cmp
mov
or
and
icebp
mov
dec
inc
sbb
push
fadd
incl
sub
out
incl
mulb
popf
adc
or
mov
push
ret
add
clc
dec
leave
dec
adc
jb
add
push
jb
cmpsl
insl
mov
xor
xor
jnp
test
pop
cli
shll
repnz
rcrl
dec
cmp
pop
or
pusha
sbb
dec
loopne
cmpl
arpl
mov
push
cmp
jb
mov
loope
lret
jg
sbb
mov
or
dec
leave
jmp
test
fsubrl
lret
rcrl
sub
enter
inc
arpl
jge
sub
insl
adcb
inc
cmpl
xchg
add
mov
jo
ret
cmp
es
mov
icebp
sti
imul
ret
daa
mov
sbb
mov
pushf
inc
push
clc
pop
mov
sti
mov
cmp
inc
in
push
notl
test
in
push
pop
mov
imul
jle
push
sub
ret
jp
shlb
push
cmpsl
sahf
and
xor
adc
test
xor
clc
callw
xchg
loope
int3
mov
cmc
inc
les
imul
pop
adc
cmova
mov
mov
jb
push
dec
jge
pushf
syscall
pcmpgtb
mov
cmp
push
jb
imul
adc
pop
push
fistps
in
and
aam
pop
outsl
push
shr
jno
or
leave
insl
jl
dec
sbb
xlat
movsl
dec
divb
push
cmpsl
mov
push
mov
mov
enter
pop
xchg
jae
test
sbb
les
dec
pop
sbb
sub
or
mov
mov
mov
fidivl
mov
sbb
cltd
cs
loop
dec
stc
cltd
and
sub
rol
jnp,pn
inc
or
xchg
cld
mov
ret
inc
nopl
dec
bsf
fsubl
loopne
xchg
adc
leave
in
xor
into
pop
mov
lock
inc
out
pop
pop
mull
imul
sub
mov
repz
orb
negl
mov
sub
mov
test
add
shrb
dec
out
orl
mov
mov
mov
dec
dec
sub
dec
pop
jb
sbb
pop
pop
mov
sub
aaa
repz
xor
or
mov
sub
ja
jnp
leave
outsb
add
push
dec
arpl
iret
pop
sub
in
stos
test
pushf
push
imul
sub
jp
jb
cwtl
lods
mov
lret
ljmp
clc
sbbl
xchg
testb
cld
sbb
xor
dec
mov
jb
or
mov
or
cmp
std
ret
jge
mov
sbb
repnz
call
sbb
lds
jg
leave
or
jno
ret
cmp
mov
mov
test
bnd
inc
push
xchg
xchg
sbb
loopne
dec
jae
dec
pop
sbb
push
pop
mov
ljmp
std
loope
gs
cli
mov
popa
pop
std
dec
insb
jecxz
xor
xor
xchg
popa
out
gs
out
sub
sub
and
in
adc
adc
push
nop
test
into
inc
sbb
movsl
inc
mov
fwait
call
mov
sub
xchg
dec
xchg
mov
or
idivl
pop
xchg
cwtl
mov
faddp
push
add
rep
push
lahf
stc
push
fistpll
xchg
xchg
stos
push
data16
dec
dec
jae
add
popa
lret
dec
sbb
enter
insl
or
in
mov
test
cs
jnp
add
mov
fs
shr
pop
push
js
repz
imul
push
lds
popf
xor
clc
cltd
pop
ljmp
loop
movsb
add
das
inc
mov
mov
mov
xchg
rcrl
push
adc
ret
daa
popf
dec
andl
xchg
pushf
pop
adc
xchg
dec
xchg
ljmp
mov
movsb
sub
movq
xor
shl
push
sbb
lahf
push
push
in
lock
hlt
std
or
inc
int3
dec
jp
dec
dec
pop
pop
jo
jmp
mov
mov
fstpl
fs
loopne
adc
sub
sbb
mov
jp
mov
fimull
out
mov
sarb
scas
cmc
xchg
cli
fldl
jnp
and
adc
mov
rcr
add
pop
mov
and
jmp
outsb
rol
adcb
and
rcl
mov
out
adc
idivl
loope
mov
sub
jmp
inc
mov
sub
mov
cmpsl
mov
and
jmp
mov
sub
loop
scas
nop
in
popf
add
xor
dec
cmpsl
lahf
test
jb
mov
inc
mov
pop
loope
movsl
lcall
jno
mov
pop
mov
jl
shl
jns
mov
dec
pop
pop
andl
loope
ljmp
lock
cli
adc
stc
inc
sbb
ret
xchg
shll
or
hlt
or
sbb
shll
inc
xor
lret
xor
jae
aam
or
out
jge
bound
das
or
mov
mov
push
xchg
cwtl
add
mov
mov
out
and
gs
imul
cmpb
and
dec
arpl
add
xchg
aam
dec
popa
mov
repnz
dec
cltd
mov
push
std
xlat
mov
testb
sub
sub
fwait
or
xchg
repz
fcmovbe
xchg
stos
sbb
mov
inc
sub
js
roll
pop
jno
sahf
outsb
cmpsb
fiaddl
cmpsb
arpl
lcall
aam
stc
cwtl
addr16
add
inc
adc
pop
add
clc
and
dec
jno
sub
jp
jecxz
insb
stos
pop
ljmp
add
cli
dec
xchg
cmp
inc
push
push
stos
fwait
sbb
push
into
sub
rcll
mov
test
mov
mov
fmul
xor
ret
xor
cmp
mov
lods
push
enter
xchg
pop
repnz
xchg
pop
ficoms
cld
in
bound
sub
or
cmp
and
hlt
cmp
pop
sahf
inc
xlat
ljmp
sub
sub
xor
adc
ror
lret
cwtl
mov
mov
xchg
roll
pop
mov
popa
icebp
insl
mov
nop
rcrl
repnz
loop
xchg
xor
pushf
mov
cmp
push
stos
test
push
fisttpll
and
subps
test
cltd
or
pop
mov
add
mov
repnz
ret
testl
cmp
ja
xlat
inc
mov
mov
jae
into
ljmp
sub
xchg
leave
push
inc
scas
fs
mov
and
out
pop
pop
out
out
repz
fs
js
insl
inc
jecxz
cmp
orb
push
aam
push
mov
or
inc
inc
dec
fsubs
jns
sub
inc
test
push
js
decb
std
xor
jmp
xchg
mov
into
cmp
sub
scas
mulb
cmp
popa
leave
fisubl
pop
adc
insl
leave
mov
das
sub
xor
js
pop
addr16
ret
mov
push
cltd
icebp
sahf
sbb
push
adc
mov
test
xchg
pop
cmpsl
and
enter
and
dec
and
test
and
out
mov
sbb
outsl
dec
lret
imul
cmpsb
pop
inc
xchg
mov
jp
xorl
add
div
xchg
xchg
pop
aas
mov
add
or
call
sub
sbb
xchg
sub
push
fisttps
stc
adc
es
ljmp
jmp
into
stos
push
pop
mov
mov
pop
dec
cmp
push
mov
cmp
mov
xchg
xor
inc
sti
mov
lret
jmp
bsf
or
insb
xchg
jb
cs
or
xorl
hlt
aas
orl
out
insl
or
push
push
lds
testb
push
cmpsl
mov
lret
pop
clc
clc
and
sbb
div
sti
das
sbb
xor
and
jb
add
outsl
ret
push
jo
pop
mov
mov
xor
testb
icebp
xlat
mov
fdiv
enter
cli
mov
xor
outsb
jg
sbb
xchg
inc
jo
and
cmpsl
popa
xor
imul
int
repnz
jmp
enter
pop
sbb
xchg
push
test
imul
cli
mov
pop
mov
jg
adc
pusha
dec
cmpsb
pop
add
push
and
lret
mov
aas
mov
jge
mov
xchg
inc
mov
xchg
ja
jae
cmpsl
mov
mov
loopne
loop
popf
cmp
pcmpgtd
insl
mov
push
das
cli
into
fwait
packuswb
imul
add
mov
psrlq
xchg
insl
idiv
pop
insl
push
stc
ficoms
xor
rorb
or
mov
inc
in
jecxz
jmp
jg
fldcw
mov
lret
pop
pop
push
xorb
sbb
adc
repnz
test
addr16
pop
xor
in
mov
fwait
dec
sbb
pushf
scas
testl
and
inc
xchg
xchg
lcall
xchg
loop
int3
and
out
cmp
fmuls
es
lret
mov
mov
outsl
into
mov
mov
imul
stc
shll
test
push
dec
jno
insb
xor
or
lea
add
pop
bound
out
mov
mov
adc
nop
push
int
cli
mov
xchg
mov
mov
aaa
dec
or
mov
add
xlat
ja
cmpsl
stc
clc
loop
pop
cli
jp
mov
cli
outsb
or
sarb
in
push
loopne
stc
pop
inc
mov
in
dec
jae
mov
popf
mov
push
cld
add
sub
sbb
push
repz
test
addr16
lods
jno
xchg
stos
shlb
stos
fiadds
leave
mov
dec
xor
out
add
movsl
xchg
leave
scas
xchg
xchg
gs
jge
bound
pop
mov
dec
jle
cmp
aas
inc
xor
hlt
push
adc
sbb
iret
std
ret
mov
inc
sub
xorl
xchg
mov
lds
sbb
and
adc
fxam
je
xchg
xchg
repnz
add
mov
sub
sub
jnp
push
lds
jbe
popf
pushf
pusha
mov
inc
push
dec
stc
xchg
testb
cmp
jns
cmpsl
rol
add
cmpl
mov
jg
sbb
mov
divb
jb
imul
pop
xchg
pop
lret
dec
mov
jns
cmp
jo
enter
lahf
dec
adc
push
jl
xchg
push
xor
std
inc
shll
mov
into
dec
jo
push
lock
push
adc
pop
xchg
ja
inc
jns
insb
or
xor
movsl
int3
pop
aam
inc
ljmp
mov
mov
iret
inc
fnstenv
xchg
sub
jmp
xlat
push
scas
sub
and
cmc
pop
mov
mov
jb
mov
jne
xor
out
mov
mov
xor
add
sbb
lahf
imul
and
shll
scas
shl
inc
jmp
mov
add
xchg
mov
jne
scas
sub
movsl
les
adc
lcall
das
test
push
cmp
xor
mov
outsb
or
xchg
aam
push
cmpsl
push
dec
sar
mov
addr16
sbb
jmp
sti
dec
sub
jno
es
into
pop
arpl
gs
cmp
out
in
sbb
shlb
imul
subl
push
jnp
inc
jle
mov
sbb
imul
pop
xchg
inc
sbb
mov
loop
inc
pop
sub
lea
sarl
dec
cli
jns
dec
cmp
push
jl
cmp
outsl
fwait
bound
xor
stos
sbb
xchg
outsl
lock
adc
mov
mov
scas
sbb
pop
mov
push
clc
cmpsb
sub
aaa
add
push
fdivs
stos
popf
outsb
mulb
xlat
sbb
mov
int3
and
jge
xor
adc
mov
xchg
dec
sarb
call
lcall
dec
stc
in
loope
in
pop
add
in
mov
jl
pop
pop
and
xchg
jo
xchg
xor
test
lods
jbe
adc
lcall
shll
adc
repnz
test
insb
add
mov
pop
push
or
mov
clc
pop
mov
mov
or
dec
pop
lock
ror
xor
xor
out
inc
and
lret
ficoms
nop
bound
jae,pn
adc
cmpl
sbb
xorl
jno
push
inc
in
daa
std
mov
sti
xchg
mov
hlt
clc
adc
and
adc
or
rcl
or
ret
pushf
push
movsb
je
lret
pop
mov
roll
push
outsb
mov
push
mov
mov
aad
repnz
xchg
out
sub
ljmp
push
outsb
sbb
icebp
pop
ja
lahf
outsb
mov
out
adc
mov
jae
jmp
cwtl
call
pop
inc
mov
or
scas
movsl
cmp
jo
inc
adc
xor
sbb
popa
sub
outsb
jle
popf
sub
sub
mov
pusha
xchg
xor
push
or
inc
clc
or
aas
loopne
aas
sub
mov
fdivl
pop
xor
jno
test
dec
ret
les
jb
dec
mov
repnz
lods
mov
sub
and
in
popf
ret
scas
mov
ss
pop
xchg
push
insl
jb
nop
xor
sub
or
in
inc
mov
lret
int3
dec
or
popa
out
shrb
ret
lods
call
push
jbe
lods
mov
fnstsw
sub
fnstenv
ret
and
push
cs
test
push
fwait
push
ss
lods
js
fcompl
inc
push
jmp
repnz
shrl
mov
cmpsb
mov
sbb
xchg
pop
lea
push
imul
xor
shll
jle
pop
roll
scas
dec
xchg
out
and
xor
mov
in
cmpsl
into
imul
jne
out
aad
sbb
inc
xchg
in
add
mul
jne
or
shll
scas
jg
or
sub
shlb
fwait
adc
mov
sub
sub
mov
push
fsubl
ljmp
xchg
testl
clc
push
add
es
lret
jge
icebp
xor
and
jae
dec
int
shl
ret
sbb
and
and
pop
pop
into
mov
adc
and
and
ret
mov
roll
dec
jae
xchg
and
es
arpl
scas
add
stos
pushf
pop
fwait
std
lds
mov
xor
inc
and
jne
jecxz
push
mov
andl
jecxz
repz
imul
sub
mov
sarl
cmp
enter
cmp
sub
mov
mov
mov
movsb
xlat
or
aam
mov
mov
sti
cmpsb
es
aas
xor
adc
sub
mov
dec
mov
rolb
fstps
or
insl
fidivs
out
xchg
jge
dec
mov
movsb
in
adc
and
add
sbb
add
xlat
sbb
mov
cmpsb
push
add
mov
movsb
int3
push
jle
mov
push
mov
mov
pop
out
and
je
dec
ljmp
subb
pop
or
lahf
inc
imul
push
addb
adc
cmp
sbb
xchg
cmp
sti
mov
lea
sbbb
adc
sbb
jae
in
sub
cltd
fimull
jle
cmp
push
jmp
adc
push
nop
movsl
or
inc
jno
incb
shrb
jo
test
imul
or
mov
jns
scas
cltd
orl
aad
fildl
xchg
loopne
add
int3
xchg
push
adc
jmp
xor
roll
leave
jno
mov
loope
outsl
or
mov
loop
mov
lods
mov
test
adc
idiv
xchg
xor
and
stos
or
call
adc
jnp
in
fisubrs
mov
adc
dec
in
dec
dec
ret
out
add
jbe
inc
pop
rolb
dec
insb
jae
dec
xchg
arpl
lds
int
cltd
xor
or
imul
fistpll
xchg
inc
std
pop
pop
mov
enter
jno
popf
push
jbe
nop
jne
stos
jne
inc
rcr
cli
push
lods
aam
jmp
or
lea
shll
movsl
sbb
nop
jns
push
or
repnz
inc
push
jg
fiaddl
lods
push
or
sti
out
out
add
push
mov
fwait
popf
sbb
outsl
jnp
test
mov
sub
pop
dec
xor
ret
pop
mov
mov
ret
test
adc
sbb
clc
pop
jl
loopne
js
dec
loop
ljmp
call
xchg
sbb
sbb
test
dec
dec
xchg
jno
hlt
jle
cmpsb
divl
sarl
cld
js
add
lea
inc
daa
pop
pop
test
test
pop
and
cmp
jnp
inc
mov
in
pop
and
jle
dec
aam
je
repz
movsl
ja
jo
js
loopne
test
rol
mov
jecxz
fwait
je
fs
lret
mov
push
xor
bound
int3
pop
mov
mov
push
jge
sbb
add
imul
test
sbb
mov
sub
cmp
mov
sub
lods
sbb
pop
loop
out
aam
pop
xchg
adc
push
jns
mov
lret
mov
mov
movsl
fwait
lock
lcall
das
jp
arpl
xchg
xchg
loope
movsb
in
movb
adcl
xchg
push
pushf
mov
xchg
es
xchg
js
sub
aas
dec
in
cmpsl
sahf
mov
and
pop
xchg
pusha
aad
inc
aad
cmp
jae
dec
int3
xor
clc
push
or
lret
int
stos
adc
sub
mov
cmc
sbb
inc
inc
inc
popa
xchg
push
and
scas
outsb
jo
pop
repz
push
scas
xor
push
sub
pop
mov
adc
repnz
jge
js
dec
insb
addr16
mov
mov
mov
pop
aas
scas
mov
mov
xchg
mov
je
xchg
jmp
lds
sub
inc
mov
in
xchg
in
and
ret
mov
jle
fcoml
mov
nop
dec
cmp
push
pop
cmpsb
xor
add
repnz
jge
ret
adc
fsubrp
lret
jge
hlt
les
jge
or
push
xor
and
lds
pop
je
or
cmpsb
out
lcall
jnp
pushf
sahf
sbb
and
lret
mov
and
lret
scas
cmp
jo
mov
xor
cmp
lods
jg
push
mov
dec
mov
jp
push
shlb
mov
dec
mov
dec
out
cs
jae
lods
fsubr
lcall
or
cmp
rcr
test
popf
int3
stos
fcoml
adc
dec
mov
pushf
aam
mov
fsub
mov
sarb
fnstcw
push
es
and
pusha
jbe
mov
sbb
jge
inc
mov
jecxz
xlat
cmp
inc
jns
push
jbe
or
sub
std
add
filds
pushf
mov
xchg
jnp
leave
lcall
jge
mov
cld
iret
mov
out
sub
sub
mov
mov
outsb
in
ljmp
dec
pshufw
in
push
mov
movsb
inc
addr16
jecxz
add
pop
ja
cmp
lods
dec
mov
je
pop
push
repz
dec
aaa
aam
add
inc
outsl
addl
xchg
cmpsb
into
je
xor
lcall
fdivrl
popf
das
stos
inc
push
cmpl
lret
loope
nop
fs
jae
subb
xor
out
inc
rcll
mov
xlat
cli
loop
fwait
pusha
mov
push
mov
jne
scas
sbb
push
sub
insl
pop
movsb
dec
in
mov
dec
or
pop
pushf
mov
mov
cmp
out
add
cmpsb
adc
out
outsl
enter
push
jle
int3
pop
dec
scas
push
or
adc
adc
inc
cmp
int
adc
in
leave
lds
adc
andl
push
xor
pop
adc
movsl
out
pop
scas
sahf
jle
xor
inc
es
cmp
xchg
inc
ret
sub
or
out
add
push
out
sub
test
jmp
add
scas
add
dec
ficoml
inc
movsb
add
dec
push
popa
js
push
aad
jp
dec
dec
xor
jns
adc
movsl
fmull
popa
or
adc
stc
xchg
pop
xchg
jge
mov
xchg
sbb
mov
xlat
mov
xchg
sub
fs
cmpsl
push
jmp
cmp
ja
test
inc
and
scas
add
add
js
or
push
jns
popa
push
fstl
test
lea
xchg
cmpsb
mov
dec
jmp
sbb
popf
into
sub
and
xor
fmull
lahf
adc
fidivrs
dec
jmp
insl
cmpb
fldenv
inc
les
mov
pop
je
or
add
xor
dec
or
jmp
mov
jge
imul
faddl
sub
and
call
sbb
sbb
xchg
cmp
pop
and
std
and
mov
sub
inc
aas
or
lea
pop
mov
and
adcb
xor
sbb
loopne
xchg
div
mov
dec
sub
clc
adc
jbe
ret
adc
jmp
leave
fmulp
mov
enter
adc
sarb
lods
dec
jg
psubb
fwait
adc
scas
jl
movsb
cs
jbe
mov
mov
lret
inc
sub
mov
outsb
addr16
imul
and
xchg
sbbb
ror
add
ret
adc
fdivrs
and
mov
push
xchg
sahf
xor
stos
lahf
inc
enter
and
xchg
popf
out
or
cs
movsb
cld
and
xchg
and
push
sbbl
scas
hlt
icebp
jnp
fsts
jmp
iret
sub
xor
pushf
test
ds
mov
js
repz
lods
xchg
subl
inc
scas
cmpsl
pop
add
and
fadd
iret
cmpsb
aam
dec
xor
imul
and
leave
mov
lds
leave
inc
stos
outsl
movsl
push
pop
mov
push
xchg
jne
in
mov
sub
and
orb
fcmovbe
iret
cmp
loop
mov
scas
testl
push
divb
xlat
or
enter
add
jb
pop
adc
js
mov
cmc
or
in
mov
dec
mov
outsl
nop
pusha
mov
ljmp
cmp
sbbl
fnsave
fcoml
add
repnz
aaa
std
add
cmp
ss
xchg
cwtl
pop
inc
fs
xor
sbb
fdiv
mov
pop
cltd
jo
stos
popf
pop
adc
sub
into
daa
adc
mov
or
mov
push
insb
push
int3
add
negb
in
movsb
inc
popa
adc
sbb
shll
fistpl
cld
arpl
movsb
xor
data16
xor
dec
lcall
jmp
in
lock
xor
data16
dec
je
lea
push
int
je
popa
dec
and
nop
xlat
shlb
mov
push
mov
dec
adc
jae
lea
mov
sbb
or
das
loop
sbb
hlt
fs
iret
mov
mov
push
jmp
xor
xchg
pop
insl
cmp
adc
add
xchg
inc
test
aaa
dec
jb
in
pop
inc
mov
cld
mov
push
or
js
sbb
negl
pop
and
push
std
and
sbb
jno
inc
ret
repnz
pop
ds
sbb
mov
mov
sbb
add
xchg
sub
push
push
or
fwait
add
inc
repnz
sar
mov
xchg
out
and
dec
clc
inc
out
pop
mov
jg
mov
sub
aad
sbb
fldenv
jmp
mov
fmull
test
bound
cwtl
add
filds
xchg
in
and
pop
imul
inc
movsb
jo
adc
mov
pop
inc
fiaddl
mov
or
cmp
sti
jl
dec
shlb
sbb
daa
or
pop
leave
insl
sahf
jl
cmp
xor
mov
or
sub
or
ret
xchg
inc
jb
jge
fbld
in
jmp
sarl
jb
xchg
jae
jno
repz
call
and
test
inc
addr16
push
rorl
idivl
xchg
lea
or
cs
icebp
jnp
popa
pop
cmp
lcall
cld
push
push
jmp
mov
lds
jae
mov
jge
xor
cmc
ss
cmp
push
lock
jg
sahf
and
mov
loope
cmpsl
in
in
lahf
iret
nop
pop
adc
pusha
jnp
ljmp
adc
or
pop
jb
daa
loope
dec
push
incb
flds
out
and
outsl
insl
enter
imul
daa
into
int
adc
rcl
push
push
scas
sbb
test
or
cli
and
adc
sub
or
jp
loop
out
sub
out
lahf
cmp
addr16
jnp
cmp
bound
popa
pop
js
push
jo
bnd
fwait
push
inc
mov
xchg
ret
mov
xorl
lret
push
sbb
ret
shl
adc
bound
xor
ja
in
sbb
testl
xorl
or
jg
push
inc
sbb
pop
add
insb
mov
repz
inc
push
or
mov
int3
xchg
lods
popa
xchg
idivb
inc
push
js
xchg
out
xor
mov
mov
je
inc
sti
dec
sub
in
fisttpll
sub
in
cld
jo
insl
loop
ret
pop
cmp
mov
inc
xlat
test
jmp
mov
nop
cmp
mov
xchg
push
mov
adc
test
mov
dec
shrl
out
movsl
cmp
cmpsb
rcr
sub
mov
inc
ret
push
fimull
cmp
cld
test
mov
stos
inc
push
orl
lds
sarb
xor
rcrl
or
xor
xchg
mov
xchg
dec
test
test
loop
les
lods
fmul
mov
and
push
leave
mov
pop
pop
out
pop
add
jno
or
fnstsw
cmp
xor
adc
cmp
or
push
sti
jns
call
out
add
testb
les
cltd
xchg
stos
sub
scas
sub
jp
add
lret
push
ret
mov
or
sub
addr16
and
xor
loope
inc
mov
stos
sbb
xor
push
inc
out
jb
jbe
mov
ret
scas
hlt
jg
movsl
sbb
shlb
ds
cld
mov
push
cmp
push
aas
fwait
dec
fidivs
stos
and
jp
jbe
ficoml
mov
xor
data16
add
cli
mov
inc
in
in
rcll
out
movsb
sbb
lret
adc
push
jl
js
mov
adc
nop
xchg
fildl
dec
ret
movsb
fsts
mov
ret
add
sbb
popf
movsb
int3
cmp
pop
std
jnp
out
sub
div
adc
imull
add
test
movsl
xor
jbe
sbb
pop
mov
popa
ret
xchg
cltd
ja
ss
lret
inc
lock
cwtl
leave
jbe
dec
push
lea
jo
jmp
jmp
jg
in
adc
sub
mov
hlt
popa
lret
pop
xor
gs
mov
mov
mov
dec
aam
jp
sub
iret
fimull
pushf
pop
mov
out
out
mov
aam
int
lret
push
call
or
cmp
or
aad
fmull
sbb
xor
mov
lods
push
pop
sbbl
shlb
out
cmpb
bound
mov
cmp
movsb
std
pop
jo
jecxz
sbb
add
cmp
mov
lds
push
in
je
faddl
inc
mov
mov
push
sbb
or
subl
imul
mov
frstor
cmp
insb
mov
mov
sub
add
outsl
das
outsl
mov
sub
dec
xchg
mov
sub
into
in
sarb
adc
pop
out
out
es
bound
push
jecxz
mov
sub
push
test
add
popa
ss
in
cmp
jnp
cli
xchg
inc
cmp
leave
sar
repz
and
cmc
mov
out
jg
xchg
jae
fcoms
pop
jg
lock
in
sub
je
lock
jl
scas
or
mov
or
lahf
adc
jno
push
aaa
loopne
fsubrl
mov
bound
out
stos
repnz
xchg
adc
ret
sbb
lea
mov
clc
xchg
mov
mov
mov
push
clc
sub
add
push
and
into
mov
fsubp
inc
shl
int
cwtl
out
or
outsb
xchg
add
call
enter
popf
mov
mov
pop
pop
pop
imul
ret
ret
ja
and
out
sub
insb
jbe
dec
clc
push
imul
mov
xor
cwtl
fwait
hlt
cli
out
outsl
adc
xchg
outsb
xchg
ret
push
add
cmp
test
and
xbegin
dec
aaa
push
xchg
inc
je
stc
test
xlat
test
inc
ficompl
iret
mov
cs
repz
mov
or
cmpsl
jp
xor
dec
je
xchg
and
xchg
lahf
daa
jnp
xchg
jl
les
adc
pop
in
sub
test
test
repnz
incl
mov
es
dec
scas
add
push
mov
mov
xor
arpl
imul
nop
pop
loopne
xchg
pop
gs
jecxz
mov
cli
push
mov
sub
mov
jle
ret
subl
clc
test
jne
pop
stos
adc
int
mov
scas
popf
cmpsb
sbb
lds
fs
and
xchg
sub
sbb
mov
in
fmull
and
sub
inc
testl
dec
movsb
loope
push
mov
call
xor
movsl
pop
xchg
std
ljmp
jmp
xchg
arpl
testl
sahf
lods
aas
call
xchg
pop
jbe
jp
orb
adc
aad
cmp
dec
sti
push
adc
rolb
fcos
xchg
mov
inc
ficoms
aad
push
pop
sahf
loopne
push
and
dec
push
cmp
adc
sahf
clc
call
sbb
sbb
addr16
xor
jnp
and
push
jno
push
sti
or
mov
loope
jp
fwait
in
sub
aad
mov
push
xor
gs
jne
pop
push
adc
ss
cmpsl
rorb
ret
icebp
cld
shll
mov
idivl
test
mov
sbb
mov
cwtl
sbb
dec
mov
xchg
cmp
sub
and
pushf
subb
sub
xor
repnz
loope
add
rolb
shlb
idivl
mov
xchg
hlt
test
into
push
xor
inc
fnstsw
in
xchg
push
pop
xlat
inc
mov
enter
dec
dec
fsubrs
inc
and
mov
outsl
inc
xor
cmpsb
loop
lret
test
ror
cwtl
dec
outsb
test
mov
xor
mov
pusha
push
cli
jle
cld
scas
adc
cs
add
data16
loopne
repnz
aaa
push
dec
loopne
sub
sub
sub
ljmp
mov
iret
andb
inc
pop
aaa
loop
add
mov
lahf
pop
and
in
xlat
cmp
mov
mov
mov
sub
neg
cmp
call
jp
dec
jo
dec
xor
jno
jmp
lret
mov
decb
push
mov
push
push
loope
jne
and
push
fnstenv
mov
lret
ret
mov
dec
jnp
xor
jo
cmp
das
rcrb
into
aam
rcrb
sub
roll
sbb
xchg
daa
into
jns
jmp
mov
or
cltd
xor
cmpsb
cmp
out
push
fisubrl
jge
cld
adc
les
out
pop
fcoms
jne
jle
int3
xchg
adc
roll
adc
stos
mov
dec
mov
mov
out
sub
test
es
aaa
daa
std
xlat
jns
pop
mov
lock
lods
xchg
lea
sbb
out
les
fs
mov
stos
pushf
jnp
in
adc
mov
adc
jo
lock
fdivp
dec
adc
iret
push
xor
shr
repnz
iret
lea
pop
mov
mov
in
xor
cmp
mov
sub
sbb
dec
adc
mov
mov
push
adc
call
fxch
sbb
pop
repnz
sahf
dec
test
std
jecxz
xchg
jecxz
testl
aas
mov
stc
and
movhps
jnp
jb
fidivrl
mov
or
dec
add
add
mov
lcall
mov
jno
push
out
ds
jecxz
push
xor
lock
pushf
arpl
mov
bound
mov
push
gs
hlt
ror
outsl
jo
xor
fninit
jle
jnp
add
sbb
fwait
mov
lcall
and
cmp
pusha
movsb
mov
mov
sti
cmp
in
iret
mov
in
stos
rcrl
div
fcompl
add
xor
mov
inc
xor
push
movsl
cmpsl
sbb
adc
rcll
js
adc
xchg
cmp
adc
sbb
sub
inc
inc
and
scas
mov
sbb
aaa
or
sbb
push
jne
cmpsl
adc
push
fimuls
pop
sti
xor
xor
cmc
ret
sbb
push
push
and
sbb
inc
es
mov
adc
les
and
sub
add
shlb
xor
xchg
sbb
adc
flds
arpl
pop
gs
push
jmp
int
mov
bound
xchg
pop
cmp
jmp
repnz
lret
push
fcomip
cmc
sub
les
cmp
push
jns
cmp
xor
pop
jmp
mov
and
sub
mov
sar
dec
add
mov
xor
scas
lret
pop
je
mov
lods
int
fisubrs
ret
xchg
movsl
out
addl
push
push
push
adc
sbb
das
lcall
add
divb
pop
cmpsb
out
cwtl
or
outsb
rorl
lret
mov
adc
push
lcall
jecxz
pop
sbb
or
mov
add
adc
jecxz
fimull
dec
dec
xor
dec
fnstenv
inc
lahf
mov
pusha
inc
and
cmc
sub
push
cmp
mov
dec
adcl
add
ljmp
adc
jle
int
adc
or
out
xchg
jle
mov
or
lods
test
jg
fsubs
insb
xchg
jle
repnz
daa
ds
hlt
mov
push
stc
out
icebp
cs
add
jge
lret
mov
adc
and
and
aas
jl
mov
jb
dec
decl
mov
cmp
shlb
jo
sub
cmpsl
fldenv
fsubl
xchg
xor
icebp
sub
leave
mov
jnp
call
adc
outsl
mov
push
dec
push
je
into
popf
outsl
sahf
push
sbb
jmp
loope
sub
fildl
inc
sahf
lcall
mov
or
xchg
aam
out
jle
out
insb
js
jne
mov
stos
adcb
sti
inc
test
sub
popa
popa
lea
and
int3
push
dec
push
mov
js
jbe
mov
ret
jmp
inc
xchg
ljmp
mov
icebp
cmpsb
pop
std
fistpll
cwtl
outsl
loopne
xor
leave
mov
aam
cmp
mov
add
pusha
jo
mov
xlat
push
in
push
dec
lds
daa
std
pop
cli
aad
mov
xor
sub
jmp
fldl2t
jae
sbb
and
stos
es
rol
popa
cmp
cmp
cmp
je
ret
fcmovu
cmp
dec
popa
cli
clc
pop
dec
pop
xor
in
sbb
les
or
inc
daa
fs
mov
scas
jmp
bound
sbb
push
enter
pop
dec
rorb
lahf
dec
dec
scas
jb
inc
inc
add
popa
je
jne
dec
clc
adc
das
mov
jmp
adc
lods
daa
out
ljmp
xchg
mov
cmp
jp
xchg
imul
test
das
push
fdivrl
push
cli
adc
xor
int
les
or
lods
sahf
and
mov
sub
adcw
rolb
mov
xor
cmp
mov
dec
mov
pop
jbe
jb
cmp
pop
out
test
inc
iret
inc
push
adc
dec
outsl
fiaddl
pmuludq
stos
arpl
dec
fidivs
jbe
jno
xor
aad
adc
mov
mulb
lret
icebp
out
cmp
test
mov
lahf
pop
jns
sub
sarl
insb
sub
and
in
or
xor
pop
jle
add
lods
scas
mov
ror
bound
cltd
or
cltd
add
jmp
std
add
ficompl
or
data16
stc
sbb
inc
mov
xlat
testb
mov
inc
mov
push
or
add
jo
fwait
mov
je
adc
call
cltd
and
mov
sbb
inc
stos
es
xor
test
push
xchg
or
sub
movsl
ret
call
xor
sub
inc
scas
orl
add
lret
pop
cmp
rorb
mov
sbb
sahf
addr16
sub
jbe
outsb
xchg
push
aad
adc
dec
jg
imul
cld
adcb
add
cs
sbb
dec
inc
aam
sahf
dec
cmovge
add
aaa
mov
xchg
push
push
mov
je
xor
push
imul
aaa
and
pop
cmp
mov
neg
bnd
orl
fnsave
fisubrl
test
mov
dec
pop
and
das
mov
fisttpl
popa
xor
mov
push
int
adcl
xor
ret
jp
and
jge
lret
push
and
ljmp
push
dec
inc
pop
inc
insb
icebp
xor
push
lcall
sbb
mull
inc
xor
push
sub
xchg
mov
jbe
call
cmp
xchg
mov
cmp
xchg
lcall
mov
scas
test
fs
mov
xor
int3
popa
jmp
jno
repnz
mov
fisttpll
jmp
mov
enter
repz
sub
cmpsb
fwait
adc
fwait
and
mov
mov
inc
sbb
ss
add
xchg
scas
gs
add
mov
cwtl
adc
or
push
popf
and
pop
xor
mov
je
jg
cmp
cltd
js
hlt
and
add
push
or
add
fistpll
jmp
pop
jle
adc
test
mov
mov
mov
fidivrl
sub
push
mov
stos
jg
xor
scas
hlt
add
test
cmpsl
cld
push
movsl
mov
cmp
scas
ret
cmc
sub
aas
pushf
adcl
push
mov
shll
fmull
and
leave
inc
xchg
mov
mov
loopne
cmpsl
cli
int
hlt
into
rep
xor
stos
adc
fildl
orb
jno
and
in
cmp
into
jmp
leave
fbstp
xor
andl
or
into
push
adc
push
adc
mov
popf
xchg
dec
aas
jmp
adc
inc
daa
arpl
cwtl
dec
pop
jg
fdivs
xchg
jecxz
test
fisttps
add
push
push
insb
push
mov
lahf
mov
lods
pop
cmp
lock
loop
repnz
cli
dec
inc
pop
and
mov
ds
rorb
pop
daa
ficoml
aaa
push
in
outsl
mov
scas
pop
jl
cwtl
ljmp
fmuls
xor
inc
mov
icebp
aaa
cmp
mov
pop
mov
inc
cld
test
enter
outsb
into
lea
lods
push
imul
pop
ror
movsb
call
fiaddl
les
sbb
add
mulb
push
mov
stos
mov
pop
lret
subb
insb
xchg
pop
mov
sbb
sub
insl
cmp
cmp
or
jb
imul
f2xm1
sbb
test
ja
out
imul
rclb
and
cwtl
aas
mov
fcmove
or
dec
mov
sti
aas
pop
mov
in
and
mov
and
mov
lods
pushf
dec
inc
push
sub
xchg
aaa
pop
jp
inc
or
fwait
pop
rcr
pop
inc
aad
sbb
jo
sbb
push
ret
std
fs
jg
je
nop
cmpl
ljmp
ret
inc
or
xor
dec
dec
out
sbb
inc
xor
ds
xchg
mov
enter
jb
cld
fildll
fwait
cmp
mov
inc
bound
add
bound
mov
sub
inc
call
ljmp
enter
into
int
sbb
bound
sbb
dec
jmp
scas
dec
bound
fwait
cmp
inc
mov
test
or
or
mov
icebp
iret
fs
sub
pop
scas
jo
int3
test
inc
icebp
cmp
sbb
lods
cmpsb
outsl
cmpsl
std
adc
pushf
add
and
and
adc
xor
cmp
outsb
adc
mov
lahf
lret
add
inc
enter
aam
pop
add
andps
xchg
insl
inc
enter
outsb
stos
stc
inc
loop
daa
cmp
push
dec
push
jnp
mov
sti
lcall
sbb
dec
mov
loop
xchg
cmpsb
sbb
dec
push
arpl
pop
idivb
clc
and
lret
stc
dec
dec
cmp
push
or
in
and
and
or
and
out
mov
pop
pop
lea
fdivs
scas
pop
and
cwtl
inc
push
pop
inc
pop
scas
inc
mov
inc
int3
cli
sti
iret
jl
in
adc
dec
inc
fnstsw
mov
andl
je
push
dec
into
arpl
sub
lds
cmp
inc
fisttps
lret
add
icebp
cmp
aad
imul
les
fldenv
scas
lret
mov
or
mov
lret
inc
aas
ss
xchg
stc
xchg
testb
or
imul
cmp
or
pop
cmp
mov
add
fisubrs
rorb
ds
test
subl
sub
push
js
loop
or
push
push
popa
dec
fistps
sbb
rorb
mov
mov
push
enter
sub
mov
pushf
mov
dec
mov
bound
lea
shrb
pop
frstor
pop
jo
std
mull
out
or
fistl
mov
mov
repnz
int
cmc
and
xchg
dec
shlb
add
add
dec
or
inc
lret
add
jecxz
pop
sub
repz
out
inc
sbb
js
stos
mov
testl
xchg
xchg
xor
enter
push
loop
cmp
mov
mov
mov
sahf
add
repnz
movsb
jmp
jno
leave
cmp
add
insl
int
add
imul
je
imul
movsb
jno
arpl
mov
and
or
aad
push
in
cmpsl
push
cli
xchg
pop
scas
js
int
mov
sbb
mov
mov
insl
icebp
xor
gs
jge
cmpsl
fidivs
xor
sub
loope
sarb
fimull
mov
xor
dec
sbb
je
or
loope
mov
mov
mov
or
notl
xchg
cmc
sub
mov
aad
ljmp
dec
xor
sbb
jae
inc
rclb
inc
test
call
jp
jp
push
ds
cmp
cld
xorb
test
pop
out
add
sbb
xor
bound
nop
shll
mov
sbb
jo
nop
cmpb
flds
in
inc
scas
pop
lock
jne
adc
roll
int
inc
mov
aam
add
pushf
cmp
xor
push
jae
mov
xor
or
ret
shlb
lods
inc
xchg
scas
outsb
scas
jle
pop
jno
fistl
mov
push
add
scas
aas
xchg
jle
adc
scas
pop
lock
fwait
test
push
dec
ds
or
das
cmc
jle
xchg
inc
push
scas
pop
stc
dec
add
pop
popf
or
cli
mov
aas
sahf
jno
mov
push
adc
mov
and
xchg
jno
fisubs
mov
xchg
shll
sbb
pop
push
hlt
xchg
insb
push
and
and
mov
orb
popf
aaa
pop
adc
add
jno
cmp
dec
dec
fwait
pop
jecxz
push
fnstenv
fmull
push
das
pusha
lds
xor
lret
clc
adc
scas
lret
in
cmp
jb
inc
mov
loopne
int3
pop
je
fisttpl
push
cltd
fs
cmpsb
push
jg
xchg
sbb
xchg
aad
xchg
xlat
fs
sbbb
ds
jmp
add
lea
sbb
add
dec
and
mov
sahf
add
xchg
lret
cmpsl
xlat
mov
pop
int3
cmp
icebp
hlt
lret
and
shl
sub
fwait
mov
xchg
pop
sbbb
cwtl
nop
dec
sbb
scas
imull
in
loope
addr16
mov
jnp
loopne
aas
int3
sub
lcall
sub
sbb
in
pop
in
mov
insb
movsl
data16
cs
inc
ss
add
into
inc
ret
xchg
fadd
call
in
cmp
sbb
xchg
or
push
das
xchg
mov
jp
sub
cmpsb
pushf
add
popf
add
outsl
inc
dec
idiv
jne
outsl
jle
or
scas
adc
arpl
jno
pop
hlt
xchg
icebp
outsl
in
ret
lods
pop
jo
mov
pop
sbb
xchg
pop
loope
mov
popa
mov
xchg
outsb
mov
lock
cmp
jbe
out
imul
mov
mov
outsl
sbb
pop
sahf
add
subb
mov
fdivrs
lret
enter
mov
js
mov
xlat
sbbb
pop
cmpsl
adc
jl
lods
xchg
sahf
xchg
fidivs
mov
mov
or
daa
cmp
movsb
jns
int3
sub
data16
andl
jge
xchg
js
pop
mov
mov
pmulhuw
je
xchg
inc
adc
sub
xor
mov
in
xor
jb
push
fimuls
adc
adcl
or
cmpsl
pop
add
push
or
mov
gs
xor
push
pop
push
mov
mov
mov
adc
int
xchg
in
gs
outsb
or
addb
push
cmpsl
mov
push
subl
imul
sbb
mov
iret
ljmp
clc
lea
cltd
cmpb
xchg
cli
cmp
sub
out
xor
pop
repnz
pop
sub
scas
sbb
testl
push
jnp
xor
adc
outsb
xchg
push
jmp
jecxz
push
xchg
or
mov
in
xchg
jnp
add
and
out
nop
stc
mov
out
imul
mov
push
iret
xchg
push
sahf
push
call
hlt
fcmove
into
add
leave
mov
xchg
and
cmp
dec
mov
ds
xchg
cld
mov
mov
pop
push
lods
xchg
push
xor
add
sub
sbb
pop
shll
mov
and
push
addb
add
push
imul
xchg
xchg
adc
xchg
fdivr
and
sub
and
rcl
out
pop
xchg
or
lahf
cmpsb
mov
cmp
mov
fwait
lret
cmp
push
jecxz
cltd
pop
dec
xor
outsb
mov
das
dec
or
rcl
mov
push
lods
add
stos
in
in
lea
out
mov
xor
xor
sub
jmp
push
mov
mov
push
sub
imul
movsb
in
push
xlat
push
dec
sub
in
fstpt
sbb
sub
shl
dec
out
out
sub
mov
sub
pop
xchg
xchg
xchg
jns
and
sub
repnz
in
cld
outsl
dec
lods
test
or
add
in
js
inc
dec
pop
xor
push
inc
inc
imul
lods
out
push
leave
jge
outsl
popa
add
mov
out
xor
mov
jbe
hlt
xor
sbb
mov
ljmp
pop
je
cmp
js
push
loope
les
adc
outsl
xor
mov
cmpsb
fstps
int3
and
cmpsl
add
in
ds
cmpsb
shlb
jmp
dec
aam
mov
cli
lcall
push
js
jl
inc
out
mov
push
pop
stos
sbb
sbb
mov
inc
pop
jmp
jno
pop
and
or
imul
popa
pop
push
mov
or
adc
add
lret
push
movntps
jg
mov
sub
ficomps
sub
out
or
lock
aas
sbb
cs
cmpsl
hlt
fimuls
and
out
mov
dec
fwait
xchg
and
or
jbe
add
into
xchg
jns
movsb
cmpsl
sti
repnz
mov
xlat
and
push
movsl
ret
loop
outsl
mov
add
jae
lret
mov
scas
jb
aam
mov
pop
int
ljmp
xchg
and
add
lods
mov
inc
cltd
pop
mov
and
xchg
outsb
lahf
icebp
push
mov
add
stos
xor
xchg
outsl
rclb
push
cltd
shrb
mov
mov
and
outsl
shrb
sub
mov
mov
pushf
je
cli
mov
and
iret
push
mov
dec
xor
rcrb
sbb
ret
cmp
fmul
push
cmc
push
pop
negb
jp
mov
lahf
popf
adcl
aad
ror
jno,pt
loop
jbe
sbb
addr16
jns
loop
xor
push
in
push
xor
or
into
popf
mov
cmpsb
std
shlb
outsl
cli
loop
jo
mov
sahf
pop
mov
xor
lods
aad
sub
daa
push
ja
aad
cmp
dec
jp
das
loop
rorl
fcoml
mov
push
xchg
jecxz
loope
mov
sbb
push
jp
xchg
lods
sbb
dec
dec
fcmove
arpl
in
rorb
test
inc
and
out
or
jle
out
inc
mov
loopne
daa
mov
bound
jne
mov
dec
push
in
xor
add
shrl
add
push
xchg
mov
sbbl
cwtl
imul
lcall
mov
lret
test
ror
fnstenv
fxch
sahf
xor
addl
pusha
negl
push
into
imul
dec
adc
in
les
xchg
pop
and
call
and
jns
mov
sub
push
in
leave
cltd
dec
sbb
mov
lcall
and
ja
jg
insb
divb
jmp
mov
sub
mov
nop
sub
mov
popa
lret
aas
push
int3
dec
xor
xchg
add
mov
rcrb
mov
jp
mov
repnz
mov
test
insb
xchg
and
aas
push
cmp
pop
pop
xchg
lds
js
gs
in
fcomps
insb
cmp
test
inc
sahf
cmpsb
push
cmp
fs
push
jge
mov
xor
xor
clc
lds
jecxz
js
mov
cmp
rorb
in
sbbb
add
dec
dec
xchg
cs
in
in
mov
or
imul
ljmp
fwait
das
lahf
insb
push
adc
dec
loope
insl
mov
adc
inc
or
add
int
lods
pushf
cs
insb
mov
bound
test
mov
into
out
mov
cltd
mov
dec
cmp
jne
xchg
fisttpll
icebp
jno
es
add
inc
sub
outsl
les
push
add
into
icebp
fdivl
and
in
out
jnp
stos
subl
xor
scas
adc
fidivs
adc
test
mov
inc
xchg
xlat
mov
stc
inc
xchg
push
push
fcmovu
inc
loopne
cmp
sbb
xlat
movsl
loopne
mov
ja
push
stos
pop
inc
cmp
inc
imul
leave
subl
pop
fcmovnbe
mov
sub
mov
mov
inc
inc
hlt
cmp
sub
pusha
inc
push
cmp
jl
pushf
and
mov
mov
ficomps
es
ja
xchg
push
insb
xor
jmp
lock
or
mov
jmp
hlt
std
mov
sbb
and
adc
sbb
xchg
inc
xchg
add
icebp
cltd
divb
jb
xchg
cmp
bound
inc
jmp
sub
scas
push
push
xor
pop
lret
xchg
sbb
inc
jb
lret
xlat
push
mov
cmp
sbb
jle
inc
add
xorb
lods
aas
incb
sti
lods
rcll
lret
mov
cli
aam
jl
mov
sbb
loope
inc
push
imul
mov
dec
mov
mov
mov
xlat
icebp
xchg
insb
out
mov
cltd
xchg
mov
xor
iret
jmp
add
jb
mov
je
repz
push
mov
lea
dec
leave
push
and
xor
cmp
inc
inc
xlat
stc
cmp
dec
mov
into
inc
add
sub
cs
sub
and
jl
loope
mov
cli
sbb
sub
cmp
shll
add
inc
or
cltd
aam
mov
jge
shll
jle
cmp
inc
xor
inc
sti
sahf
xchg
or
and
sbb
aam
add
and
inc
loope
jmp
adc
mov
or
push
imul
add
mov
adc
xchg
dec
dec
lahf
incl
ret
lods
jbe
divb
inc
sbb
addl
xchg
jno
mov
xchg
loope
in
sub
repnz
cmp
jo
jno
shll
xchg
mov
mov
mov
pop
jle
sub
dec
into
stos
add
sbb
jns
insb
fisubs
push
jge
dec
pop
add
loope
sub
mov
pop
jbe
push
pop
and
inc
mov
pop
imul
test
cmp
scas
sti
push
push
les
adc
jle
sbb
stc
andb
pop
aam
jmp
sub
pop
fisubrl
xchg
test
push
aad
xchg
negb
movsb
loop
xor
into
xchg
pop
bound
mov
xchg
in
jae
sub
push
jae
mov
sub
mov
sbbb
cltd
mov
xchg
sbb
ljmp
aaa
push
lahf
movups
xchg
test
test
lods
aas
jle
sub
arpl
push
jo
inc
stos
pop
sub
jecxz
sbb
ss
jb
xor
leave
xorb
lock
rol
jmp
outsb
mov
lds
hlt
mov
repz
lods
mov
pop
adc
mov
push
scas
fs
sbb
sbb
pop
fidivs
push
lret
dec
mov
xchg
inc
xchg
lock
inc
inc
adc
sub
dec
jecxz
movsl
jge
js
in
cs
push
lret
jle
or
xor
jmp
xchg
xchg
clc
mov
inc
cmp
dec
cmp
fimull
cmp
cmp
ss
sub
adc
add
mov
cltd
mov
and
icebp
outsl
lret
pop
call
scas
sahf
int3
inc
loop
sub
in
sarb
mov
lods
sub
insb
shlb
icebp
enter
push
sub
and
lds
push
incb
test
or
push
test
hlt
das
lods
mov
pop
pop
mov
iret
mov
add
insl
sbbb
dec
rol
rorl
add
dec
sar
popa
fwait
dec
sarb
ds
cmp
fstpt
in
cmp
lock
in
mov
cwtl
push
pop
mov
lcall
lods
cmp
mov
cmp
test
test
push
in
lea
push
cmp
add
xchg
in
mov
xchg
mov
iret
push
and
mov
mov
or
fwait
sub
inc
or
or
push
pop
jns
jb
sub
xchg
mov
pop
aas
fcomi
loopne
pop
sub
mov
inc
mulb
fsubrl
fcoml
inc
jbe
pop
xchg
pop
test
dec
and
mov
out
ret
imul
xchg
xchg
xchg
sahf
addr16
xor
pop
jb
test
sbb
xchg
dec
mov
loope
les
cld
data16
mov
or
std
adc
mov
test
adc
add
repz
jecxz
mov
xor
pop
xchg
adc
gs
js
inc
nop
sub
in
repz
push
inc
test
ret
imul
cmp
movsb
mov
cmc
mov
fstpl
sar
adc
stos
mov
dec
adc
cmp
jg
cmpsl
rcll
xchg
jnp
jno
push
adc
jg
mov
lock
jl
xchg
jno
punpckhwd
sahf
pop
cmp
je
clc
sbb
push
adc
popa
mov
out
push
add
sub
movsb
jns
mov
out
lods
loope
mov
add
jb
push
xor
orl
ret
gs
popf
mov
loopne
add
push
xor
cmc
jnp
jmp
mov
rcrb
sbb
ret
jge
push
mov
rolb
pushf
addl
push
mov
mov
mov
xor
and
xchg
ds
or
and
fsubrs
cld
jnp
sub
push
mov
fnstenv
adc
and
mov
in
or
outsl
jmp
pop
fs
push
xchg
hlt
or
cwtl
pop
and
mov
push
fsts
lds
jno
ret
pop
imull
adc
adc
mov
mov
sarl
adc
mov
in
lret
ds
imul
mov
jne
sbb
dec
or
sbb
into
mov
xchg
cmpsl
into
inc
push
mov
xor
scas
inc
xor
sub
fs
or
ret
clc
mov
mov
or
sub
fcomip
cmpb
xlat
nop
das
cmp
mov
sbbl
outsl
adc
dec
cmp
sbb
mov
adc
cmp
add
or
sub
sahf
cmp
push
loope
repnz
aam
add
push
test
dec
pop
test
cmc
pcmpeqd
ljmp
xchg
cmp
lret
jns
add
lcall
sub
jbe
repnz
adc
repz
mov
shrb
pop
mov
repz
pop
push
fwait
jmp
rcll
shl
pop
and
mov
mov
aaa
sbb
pop
outsl
jb
imull
push
cmp
fidivrs
shrb
mov
push
mov
inc
mov
jmp
sub
ljmp
into
inc
jmp
sahf
fimull
mov
add
adc
sti
fistpl
push
mov
cld
mov
cmpsb
mov
jge
adc
mov
pop
ret
test
cmp
mov
cld
clc
lcall
add
push
cmp
fnstcw
sbbl
mov
mov
fidivrs
add
adc
pop
mov
ljmp
fs
jle
test
dec
out
adc
inc
lds
push
bound
add
lret
cmpsl
xchg
jle
fnstenv
or
outsl
icebp
jle
out
in
mov
pusha
xchg
ljmp
mov
sub
add
out
push
je
sahf
push
lea
cmp
push
cmp
subb
adc
xchg
outsl
mov
push
mov
movsb
sbb
mov
mov
frstor
jle
scas
cld
pusha
mov
xchg
jp
idiv
adc
jp
sub
inc
push
push
shr
sub
stos
bound
push
out
adc
test
mov
dec
add
pop
and
leave
or
cmp
mov
out
imul
sub
mov
imull
jle
or
push
imul
shlb
es
mov
scas
mov
pop
test
out
test
imulb
mov
xlat
in
sub
push
leave
jecxz
loopne
mov
or
movb
inc
mov
aam
fdivrl
dec
imul
sub
push
outsb
sub
jle
sub
lods
mov
dec
daa
pop
and
test
out
hlt
cmp
daa
pop
mov
jbe
sysexit
popf
loop
pusha
push
push
sub
jns
int
lods
push
out
sub
incb
jecxz
mov
stos
dec
xor
sti
mov
inc
dec
sub
scas
and
inc
jle
and
cwtl
mov
and
cmp
out
call
pop
pushf
pop
jg
test
cs
out
adc
adc
pop
ja
mov
add
pop
int3
es
mov
in
xchg
clc
fsubs
imul
test
into
gs
push
or
mov
insl
repz
xchg
out
xchg
cmp
sbb
jecxz
fidivl
pop
insl
mov
in
jle
push
stos
daa
push
mov
daa
roll
movsl
jns
or
scas
adc
jg
xor
push
mov
inc
jns
orl
ds
fwait
dec
cmp
cmp
popa
fidivrs
lret
mov
or
loop
and
shll
jmp
pop
xchg
out
push
push
dec
cmp
mov
dec
lahf
jae
scas
test
out
mov
inc
pushf
dec
ja
pop
pop
gs
cmp
popa
imul
jecxz
or
mov
sub
push
test
loop
insl
mov
xchg
mov
or
std
mov
clc
push
dec
pop
xor
mov
lret
xchg
fwait
jle
outsb
shl
stos
mov
pop
cmp
ret
cmpb
mov
pop
add
sub
xchg
test
stos
mov
mov
aaa
cmc
ja
lds
lods
cmpsb
mov
sbb
cmpsb
movsb
xor
ret
out
subl
je
ret
and
xchg
jmp
shll
add
stos
out
lock
push
cmp
or
imul
xchg
push
aam
mov
daa
mov
xchg
sub
push
cmpsb
pop
jae
in
lahf
xchg
jnp
dec
xor
xor
mov
inc
cmp
and
cmpsb
imul
pop
pop
cmpsl
js
int3
jge
insb
mov
out
mov
or
xor
cmc
add
mov
inc
dec
xor
not
sub
jmp
push
shrb
push
sbb
lods
push
jns
outsl
test
jne
enter
or
xor
push
inc
test
cltd
bound
pop
and
xchg
or
xchg
icebp
jp
sub
js
dec
lock
cmp
cmp
addr16
lods
cltd
xor
push
in
inc
cmp
mov
fistps
aad
add
outsl
dec
testl
pusha
test
adc
cmp
jle
jnp
or
mov
js
sub
dec
insl
cmp
test
or
jl
inc
insl
mov
loop
ds
pop
ret
mov
shl
icebp
mov
adc
lods
xchg
scas
and
repnz
int3
push
lea
clc
aad
pop
mov
ss
and
into
push
rcr
sub
mov
iret
lock
arpl
into
push
adc
pop
ljmp
mov
roll
xor
js
adc
std
cld
mov
jbe
pop
ror
mov
in
xchg
in
imul
fistps
dec
je
out
sbb
or
fsubp
mov
mov
enter
pop
or
mov
lret
and
movsl
push
icebp
bound
mov
pop
mov
adc
jb
ja
mov
pop
ja
ret
mov
je
iret
aam
jle
lods
imul
call
mov
rol
jmp
pop
jl
call
push
call
adc
cs
xor
sub
sub
repnz
xlat
xchg
pop
lods
pop
test
div
movsl
cld
xor
pop
into
jmp
cmp
popf
xchg
adc
movsl
mov
inc
push
out
or
iret
std
mov
sub
fsubp
jmp
xor
mov
xorl
mov
lds
popa
test
or
jp
iret
ds
imul
lods
or
cltd
jecxz
clc
inc
int
leave
decl
mov
pop
mov
out
lods
mov
mov
test
dec
xor
cmp
jno
stc
and
adcl
rolb
ds
insl
pop
cmp
cli
xor
test
xor
sti
jmp
or
loope
xor
mov
lret
mov
outsb
push
push
add
jns
add
or
imul
or
fxch
rorl
pop
jl
jecxz
out
int
lret
adc
jns
pop
pop
mov
xor
pusha
xlat
and
push
cmp
sub
scas
std
cmp
mov
dec
adc
mov
sarl
js
fucomip
dec
iret
pop
mov
adc
mov
or
mov
stc
and
xchg
and
lock
mov
cmpsb
lds
add
jbe
test
fisubrl
aaa
iret
jp
pop
aas
mov
gs
call
add
mov
push
add
adc
add
xchg
mov
xchg
jae
shr
cli
mov
add
lret
lods
jle
jp
repnz
xor
in
inc
ds
lahf
or
dec
call
xchg
cmp
push
fidivs
adc
add
or
into
lock
out
pop
mov
pop
cld
mov
stos
leave
inc
mov
inc
cmp
adc
out
popf
xchg
loope
mov
mov
mov
xchg
test
mov
fcoml
xor
cmc
push
sbb
sbb
pusha
out
aad
push
iret
add
pop
add
pop
pop
jno
pusha
cmp
je
lods
mov
pop
push
mov
fucomp
sti
mov
es
xchg
aad
je
push
fisttpl
cmpsl
mov
lahf
adc
cmpsb
add
inc
enter
mov
lods
lcall
xchg
jl
popa
sbb
inc
jecxz
push
inc
and
sbb
aas
bndldx
cmpsl
sbb
loop
sub
lcall
adc
jnp
ficomps
sub
or
cmpsb
xchg
and
rcrl
icebp
xor
jae
pop
test
sbb
push
sti
cwtl
pop
lods
adc
test
test
pop
or
pop
pop
sti
jns
movsb
lods
test
ss
stos
push
mov
or
paddd
call
dec
int
in
mov
rclb
pop
push
in
movsb
mov
jnp
mov
lcall
out
dec
mov
fadds
pop
push
dec
leave
sbb
sub
lahf
cs
test
loop
dec
push
loope
movsb
jne
clc
outsl
fwait
nop
aas
jns
aas
xchg
add
outsl
lea
jp
pushf
movsl
and
ja
lret
or
out
and
loope
cld
inc
dec
outsl
daa
mov
push
push
jge
jecxz
rcll
push
mov
cs
bound
dec
mov
ret
insb
pop
xor
std
jb
sbb
push
mov
adc
adc
inc
pop
cli
insb
mov
adc
ljmp
loopne
jbe
lock
loopne
xor
adc
mov
jmp
stos
mov
sbb
icebp
es
enter
lcall
inc
pop
and
cwtl
rcrl
inc
pop
jne
js
clc
sub
fld
imulb
push
stc
push
jecxz
jb
in
rolb
xchg
repz
mov
sub
push
dec
cltd
adc
fisttpl
dec
sub
sti
lock
jecxz
int3
popf
lret
xchg
stos
jle
xchg
fwait
arpl
dec
xlat
xor
mov
add
dec
fs
in
inc
jecxz
jns
mov
cmp
and
andb
insb
sbb
inc
hlt
add
hlt
arpl
sahf
addr16
pusha
jle
negb
nop
data16
cmp
and
pop
push
insl
sub
push
pusha
lret
mov
jecxz
hlt
cmpsb
jae
in
jbe
xlat
outsl
enter
sub
pop
jb
cmpsl
jns
push
jno
insl
push
ror
aaa
cmp
mov
les
shr
adc
iret
pushf
out
sbb
adcb
adc
adcb
dec
cmpsw
mov
pop
and
xchg
mov
dec
and
dec
dec
jo
popa
cmpsl
icebp
inc
jp
mov
pushf
lcall
pop
inc
fcomps
js
or
in
dec
aad
sub
xor
pop
cmp
pop
xchg
out
pop
jle
dec
push
pop
popf
ss
and
pop
sbb
into
lcall
popf
cmc
mov
imulb
push
adc
outsb
outsb
xchg
lahf
out
push
dec
fisubs
mov
ficomps
lods
roll
dec
sbb
jae
or
xchg
mov
inc
call
pop
dec
adc
xchg
je
movsb
pop
jne
mov
aam
jne
ds
or
stc
leave
adc
int3
pusha
popf
mov
mov
lret
xor
aas
icebp
in
pusha
push
scas
sub
gs
aaa
xchg
incl
idivb
pop
std
and
push
pop
dec
mov
inc
mov
gs
shlb
mov
das
jae
clc
cmp
cmp
mov
scas
mov
fnstsw
add
sbb
out
clc
outsb
popa
movsl
insb
jnp
pop
lret
inc
fcompl
cmc
lds
push
aam
andl
jo
push
inc
dec
idivl
rclb
rclb
insb
push
sti
jb
push
iret
pushf
jg
daa
ret
sbb
ss
repnz
clc
test
sbb
gs
xor
cmp
dec
movb
lea
aad
loope
roll
fidivl
fwait
scas
xchg
push
fld
jno
cmc
leave
aad
daa
in
ljmp
xor
push
mov
in
movsb
mov
xchg
cs
sbb
add
adc
mov
enter
inc
xor
cmc
pop
mov
nopl
bound
rep
mov
cld
mov
jle
hlt
pop
outsl
nop
int3
ljmp
rclb
adc
hlt
jns
addr16
xchg
cmp
addl
mov
mov
push
push
or
xchg
test
jne
imul
insl
mov
lods
ss
aad
popf
jns
orl
fldt
icebp
mov
pop
pop
sti
fiaddl
ss
les
aas
aas
mov
mov
hlt
push
mov
mov
andl
mov
in
mov
push
sbb
dec
push
push
outsb
push
mov
aam
mov
idivb
out
and
mov
scas
mov
mov
jl
imul
mov
roll
mov
lahf
or
jg
xchg
testb
jns
adc
imull
loop
cmpsb
out
pop
enter
aam
inc
orl
leave
dec
mov
test
sbb
int
imul
dec
pop
lock
leave
push
mov
and
xchg
imul
scas
mov
cmp
aam
or
mov
loop
jae
xor
lock
pop
test
lcall
xlat
outsl
xchg
inc
jnp
repz
inc
push
cmp
inc
and
inc
and
cwtl
orl
call
sbb
pop
outsb
addr16
int
and
xchg
mov
and
shrl
adc
repnz
xor
in
push
mov
daa
iret
add
cld
push
aaa
jne,pn
repnz
lcall
mov
add
mov
aam
jns
add
aad
xchg
stc
mov
sub
cltd
cmp
and
xorb
fldt
jae
add
push
mov
mov
and
add
mov
sub
divl
xor
pop
xor
fcompl
clc
mov
enter
cli
arpl
jo
or
xor
mov
ret
arpl
or
mov
mov
or
shll
dec
fs
xchg
rcll
inc
pop
pop
cmp
repz
pop
mov
jmp
sbb
push
insl
popa
and
adc
and
mov
fsts
dec
pop
icebp
loope
add
lahf
mov
gs
cli
adc
sbb
ds
mov
pop
jecxz
pusha
push
push
test
cs
cmp
sub
sub
popf
daa
test
adc
fsubp
ja
jl
cmp
aad
mov
notb
cmp
xchg
andb
arpl
hlt
mov
mov
pop
js
jge
repz
bound
push
int
test
xchg
hlt
mov
out
out
pop
push
rcrl
mov
push
sbb
sub
int3
or
push
lock
lahf
inc
add
int
inc
ret
outsl
xlat
lods
js
add
sub
xchg
aaa
dec
imulb
mov
inc
leave
dec
lods
xchg
fsubrs
jmp
dec
cs
sbb
jbe
leave
mov
xchg
xchg
sarb
push
popa
ja
fildll
scas
fs
mov
and
push
mov
inc
hlt
subw
insb
xor
int
push
jmp
clc
es
or
stc
scas
xchg
xchg
inc
cli
jb
inc
popa
push
or
in
jecxz
mov
rol
mov
je
movsb
sub
in
mov
call
int3
push
imul
enter
pop
repnz
data16
iret
repz
push
gs
pop
push
xchg
in
clc
mov
dec
or
and
inc
or
pushf
push
sub
jmp
lahf
scas
enter
push
jg
jmp
xor
add
sub
sub
iret
mov
int
jbe
xor
mov
adc
xchg
cmp
or
and
pop
cli
and
lret
sbb
push
addr16
fdivrs
pusha
hlt
andb
call
jbe
into
imul
cltd
sbb
xchg
call
push
dec
and
cmp
jno
sbb
cmp
setnp
insl
test
popf
pop
add
sbb
xchg
and
mov
sbb
imul
inc
inc
pop
cmpb
mov
mov
pop
in
mov
pop
dec
dec
mov
sbb
fadds
cmp
push
cmp
imul
dec
sbb
cwtl
popf
leave
mov
mov
test
add
scas
fiadds
shlb
insb
adc
mov
and
dec
daa
mov
shr
or
sbb
lods
xor
push
xchg
int3
movsb
sbb
ja
divb
and
adc
roll
and
mov
jno
and
adc
jb
mov
jns
and
dec
mov
dec
ret
test
xor
jge
add
hlt
lds
sub
jns
mov
dec
shlb
lcall
popa
push
xor
jl
repnz
cmpsb
out
ss
hlt
jg
adc
xchg
in
add
pop
sbb
lock
jge
mov
push
jecxz
fsts
jl
sub
cwtl
adc
out
xor
add
int
clc
insb
fisttpll
jo
rclb
xchg
and
in
pusha
add
mov
test
cltd
push
sahf
and
push
xchg
mov
adc
mov
negb
mov
shll
adc
add
push
sti
cwtl
je
pusha
and
mov
inc
mov
loop
jecxz
jno
cs
xchg
mov
mov
sbb
jl
jl
jle
stc
ficoml
iret
jo
iret
mov
adc
inc
sub
ffree
repnz
stc
fnstcw
pushf
imul
cmp
push
sti
or
add
pop
imulb
cmp
pop
cmpsl
lock
addr16
jp
scas
adc
push
in
pop
ja
inc
xchg
xchg
cmpsl
inc
cwtl
inc
mov
int
sub
data16
mov
inc
out
ljmp
aas
fidivl
xorl
pop
add
out
and
sarb
cmp
push
sub
outsb
std
inc
cmp
stos
mov
pop
nop
test
fcoms
pop
adc
prefetch
mulb
jl
pop
cwtl
jae
rcrb
ds
std
sti
scas
out
inc
ss
xchg
jecxz
push
sub
rcr
stos
mov
dec
dec
daa
push
mov
xchg
lahf
inc
and
push
dec
rcl
stos
pushf
pop
push
int
stos
data16
adc
out
mov
xor
mov
lock
mov
stos
mov
sbbl
lds
xchg
inc
cmp
adc
das
sbb
aam
sbb
repz
push
in
pop
movsb
bound
ret
ja
mov
cmc
dec
mov
xchg
loope
jl
push
xchg
push
es
jl
aaa
sbb
lods
add
outsl
xchg
fisttps
out
jle
jns
dec
dec
shlb
jle
int
out
push
pop
in
es
ljmp
mov
outsl
xchg
push
icebp
mov
test
movsl
jo
call
inc
jne
fisttps
mov
imul
rolb
pusha
movsb
and
fnsave
pop
outsb
mov
xchg
test
sub
cmp
enter
fstl
imul
mov
test
dec
jle
mov
push
mov
cmp
xchg
popf
pusha
arpl
cmpsl
stc
inc
cld
and
icebp
fimuls
xchg
scas
mov
mov
das
add
ljmp
mov
pushf
mov
in
fisttpll
cld
sbb
lcall
inc
mov
sbb
mov
or
loope
jns
jnp
xor
in
mov
mov
dec
hlt
andl
and
push
adc
xchg
xchg
mov
pop
cltd
shll
gs
cmp
sub
sub
inc
or
shl
sbb
xor
xchg
int3
bound
ret
lea
std
aam
push
out
adc
xchg
inc
sbb
or
jbe
js
sbb
pushf
pushf
fdivl
addr16
and
insb
mov
scas
mov
cmp
mov
xor
out
pop
add
std
xor
adcb
call
aam
mov
jecxz
cmpsl
mov
test
and
dec
pop
sub
ds
lret
sti
inc
das
fisttps
test
insl
pop
lock
imul
mov
and
out
subl
or
sub
rcrl
xor
js
in
test
notb
push
test
or
dec
es
repz
add
std
clc
testl
add
out
ret
out
dec
xchg
fidivrl
data16
movl
lret
pop
insb
mov
jns
insl
inc
fnstenv
test
pop
pop
aaa
imul
xor
lods
mov
shrb
xchg
mov
and
mov
pop
mov
mov
mov
mov
cld
mov
pop
jae
jl
lods
test
xchg
nop
nop
pop
data16
jp
insb
pop
sub
js
adc
push
xor
sub
xor
fdivs
rclb
frstor
push
pop
add
and
stc
add
mov
cs
jo
pusha
mov
push
ljmp
inc
int3
mov
cmpsl
xchg
clc
fs
out
orl
jbe
popf
sbb
pop
xlat
stos
or
ljmp
xlat
sbb
jno
dec
mov
out
aas
jae
dec
loope
negl
adc
jae
in
lds
xchg
push
aas
das
inc
xchg
out
mov
add
bound
jb
push
pusha
mov
rclb
cmpsb
inc
and
fcoml
ror
dec
bound
push
dec
jge
incb
in
es
sbb
sahf
jg
pop
push
mov
xor
adc
mov
je
jbe
or
push
out
xlat
push
or
arpl
adc
sbb
xchg
pushf
add
ja
in
jle
ret
and
into
mov
mov
xchg
lret
jle
mov
sbb
dec
in
icebp
inc
dec
push
add
sbb
shl
mov
and
and
pushf
pop
cmp
out
mov
gs
movsb
les
lea
mov
leave
dec
xor
or
sub
iret
mov
cmp
divl
mov
and
mov
sti
ds
sbb
cmp
aad
repz
iret
paddsw
mov
dec
lret
cli
pop
mov
sub
push
out
dec
add
test
lret
or
mov
xlat
int
jecxz
sbb
add
test
or
sbb
mov
xchg
std
fadds
xchg
push
iret
into
jge
adc
push
push
mov
stos
sbb
push
loop
push
mulb
mov
fdivr
mov
xchg
xchg
dec
inc
push
jne
pushf
loop
faddl
shl
fsub
stc
popa
xchg
scas
pop
and
xor
out
add
out
cmpsl
lock
hlt
push
ljmp
lcall
maxps
clc
int
sbb
mov
push
or
shrb
int3
sub
xor
mov
inc
std
fstps
xor
mov
mov
in
movb
cmp
movsl
inc
inc
and
dec
xor
jg
in
test
ja
fildll
fwait
mov
and
loope
test
rclb
cwtl
mov
inc
sbb
cmp
push
in
jmp
pop
lods
mov
lcall
movsl
sbb
movsb
sub
jle
cmp
ds
jp
pushf
stos
shlb
sub
out
pop
out
dec
enter
adc
or
xchg
out
out
lock
xor
xchg
xchg
js
addr16
in
mov
jmp
ljmp
sub
out
pop
insl
js
or
jnp
mov
add
push
lods
pop
or
data16
and
jle
lsl
mov
mov
push
xlat
cld
mov
int
fs
call
mov
int3
inc
sub
loop
mov
mov
jns
adc
sub
cmp
mov
dec
lret
lock
adc
subb
iret
mov
dec
int
loopne
call
mov
ss
adc
loope
push
shr
sbb
and
sbbl
jge
push
mov
or
shll
fxch
arpl
push
mov
pop
xor
push
ret
repz
je
xchg
test
sbb
inc
xor
les
xor
lods
stos
mov
cmp
out
stc
sbb
mov
addr16
xchg
pusha
push
shll
aas
in
hlt
into
mov
adc
mov
and
and
xchg
sbb
push
jo
dec
mov
out
sbb
int3
xor
pop
inc
and
loope
insb
aad
cmp
adc
fsubp
pop
pop
mov
out
jge
sbb
add
lock
out
movsb
call
arpl
outsl
sub
sti
jns
into
test
push
test
inc
cli
sbb
xchg
mov
lcall
pop
and
and
xchg
fcmovne
pop
leave
cli
mov
mov
sub
ljmp
cwtl
or
pop
sarl
sub
pop
inc
lock
jo
fstpt
out
mov
adc
scas
cltd
bound
fisttpll
xlat
add
out
int3
push
jno
into
mov
test
jnp
sub
jo
mov
shll
adc
push
push
lods
lret
or
mov
les
pop
cmp
jns
imul
mov
insl
mov
lcall
xchg
std
repnz
mov
sahf
adc
push
int
rol
imul
cmp
jo
push
nop
xor
outsb
mov
dec
enter
cs
adc
inc
aas
fsubl
sub
xor
xorl
mov
adc
sbb
pop
sahf
jecxz
popf
xchg
jp
cmp
js
sub
dec
dec
je
cwtl
inc
cmpsb
imul
lods
or
sub
jo
les
sbb
cld
incl
inc
test
xor
test
repz
and
sbb
stos
add
imul
add
cltd
repz
xor
add
cmpsb
outsb
cmp
adc
adc
and
into
sub
fsubp
push
inc
push
lret
cmp
cltd
pop
es
jg
inc
aam
sub
bound
call
fcoms
and
push
or
mov
aam
jnp
cmp
and
popl
push
lods
push
mov
fisubl
ret
xchg
mov
popa
sbb
inc
and
adc
sub
data16
cmp
push
inc
out
out
sub
jo
flds
or
pop
incb
pop
cmpsb
push
jbe
loopne
mov
pmulhuw
fisttpl
divb
stos
mov
push
jno
mov
rcl
sti
push
cmp
rcll
enter
sbb
in
xor
pop
cmp
clc
and
das
xchg
mov
pop
les
test
into
cmp
std
pop
mov
das
ds
adc
pop
daa
ja
std
sti
adc
push
roll
aad
and
and
ret
or
inc
out
pop
clc
sarl
xchg
jecxz
repnz
std
mov
inc
jle
push
cmc
sub
sbb
rol
loope
add
dec
ds
xchg
mov
jno
or
call
lcall
pop
rolb
jae
fcompl
pop
push
xchg
jl
or
cmp
into
xchg
cmp
inc
fwait
jno
or
pop
adc
loopne
in
or
sbb
pop
xchg
in
xlat
xchg
mov
sub
aam
or
cmp
outsl
adc
pop
mov
iret
cmp
stos
fdivrl
sbb
inc
out
inc
inc
test
rcr
cmpsb
or
adc
pop
add
fdivrl
je
adc
aad
ljmp
fnsave
pushf
cmpsl
lcall
mov
jno
jge
rcr
repnz
mov
inc
cmp
aad
mov
add
inc
lods
jmp
sbb
mov
stos
arpl
mov
rolb
mov
jbe
push
add
sub
cmp
jne
xchg
mov
mov
mov
jg
push
jmp
adc
aas
leave
and
xchg
ss
push
mov
push
leave
je
push
int
sbbl
rorb
mov
xor
fcmovne
pop
jecxz
dec
lcall
aas
push
add
js
push
jp
pop
jne
cltd
cmp
adc
push
push
add
push
test
or
add
mov
sub
inc
jbe
mov
pop
loopne
outsb
in
mov
mov
or
sahf
or
pop
xchg
pop
jno
ja
scas
xchg
bound
rcrb
aam
jnp
in
fdiv
arpl
dec
pop
cmpsl
jge
jnp
and
sub
cmp
loop
jns
cmp
and
fnstsw
mov
push
dec
xchg
adcl
in
sbb
int
lea
fsubrs
fisubl
cli
cli
std
fildl
orb
hlt
or
xchg
pop
dec
daa
cmp
pop
adc
fs
negl
mov
sub
cmp
lods
inc
mov
jmp
mov
and
lock
movsb
rolb
mov
push
addr16
fdivs
out
jb
stc
fstpt
adc
push
push
cld
mov
int
gs
xor
jle
test
sahf
fs
add
mov
test
add
mov
push
push
pushf
fstps
jne
outsb
xor
pop
enter
xor
imul
pop
inc
mov
ss
mov
and
sti
lret
shrl
pusha
repz
inc
sub
cmp
imul
loopne
mov
mov
xlat
out
sub
jecxz
add
jae
sbbl
inc
and
xor
xchg
out
xchg
mov
jb
cmp
andb
daa
mov
mov
inc
fidivl
mov
out
aad
cmp
gs
in
dec
jecxz
aad
sbb
jl
aam
mov
dec
pop
mov
push
aaa
mov
xchg
outsl
or
adcb
mov
ss
xor
sub
jl
dec
cli
les
je
push
mov
xor
imul
cmp
popa
sti
jge
and
xchg
mov
sub
enter
fnstenv
jge
pop
fsub
and
mov
filds
imul
mov
push
insb
pop
test
mov
aas
add
fcmovne
js
sub
push
mov
cmp
std
arpl
insl
mov
dec
mov
call
xchg
or
sub
fmull
leave
hlt
mov
cmpsl
stos
fwait
enter
push
fs
sbb
lds
fistps
fsub
clc
mov
add
fdivrs
xchg
adc
dec
idiv
out
aad
fisubrl
ficomps
push
ljmp
bound
cli
sub
mov
xor
inc
xchg
push
dec
daa
aas
jnp
dec
cmc
mov
jg
dec
dec
stos
push
xchg
sub
adc
xchg
out
lret
lret
sti
cmpsl
sbb
scas
call
and
dec
call
js
bound
cmp
xchg
ret
imul
shlb
add
test
adc
jnp
push
iret
outsl
scas
std
inc
fwait
inc
cli
shl
add
or
cmp
cmc
mov
pop
sbb
mov
mov
jp
sbb
rclb
adcb
js
mov
out
inc
cmp
jecxz
pop
iret
je
sub
nop
pop
mov
sub
fs
lods
je
push
mov
sub
inc
mov
in
push
int
mov
dec
mov
stos
add
mov
cmp
and
pop
mov
dec
adc
push
mov
push
jo
sub
addr16
sbb
ljmp
int3
stc
leave
int3
push
dec
jg
mov
xor
stos
hlt
repz
mov
or
push
fstps
xchg
pop
imul
pusha
orb
shlb
mov
adc
aas
out
and
mov
addr16
cmpsb
out
in
mov
push
jg
sub
mov
xlat
xchg
adc
mov
jle
dec
stc
leave
es
jae
sub
push
adc
pop
adc
in
xchg
aam
loop
push
addb
xor
inc
out
sub
xchg
adc
xor
inc
shlb
mov
cmc
mov
nop
mov
fistpll
stos
jo
and
imul
xchg
fwait
ja
outsl
pop
xor
imull
lods
mov
out
shll
sbb
std
orl
inc
sub
icebp
xchg
aad
mov
adc
push
call
jl
nop
lret
jp
cli
mov
dec
iret
push
mov
mov
xchg
inc
lret
cs
lods
js
xchg
iret
insb
pop
fldt
sub
clc
cmp
imul
cmpsl
mov
lret
aad
jno
add
mov
aaa
jmp
mov
shrb
lret
jmp
xchg
xor
dec
mov
push
xor
mov
and
xor
out
lods
test
les
add
out
add
std
mov
and
and
aas
inc
leave
frstor
loopne
std
daa
sbb
cmpsb
aam
jnp
sub
inc
fdivr
dec
scas
sahf
and
data16
xor
and
pushf
sub
add
cwtl
push
movb
sub
adc
lcall
xchg
repnz
popf
sahf
jl
push
lahf
dec
jge
popa
test
push
push
inc
push
popa
mov
ja
test
mov
cmc
paddq
jnp
shl
inc
lcall
or
stos
or
dec
cmp
inc
sbb
cs
call
sbb
sahf
loopne
aad
inc
shl
mov
inc
movsl
pop
inc
xchg
int3
push
insl
lret
mov
pop
frstor
push
pop
xchg
dec
jge
lods
mov
mov
push
dec
lret
enter
mov
ds
mov
pop
popf
testb
std
lret
xorb
cld
jnp
in
jp
mov
add
aam
push
out
ror
popf
addr16
ret
popf
cmp
pushf
dec
fbld
sbb
icebp
lods
in
in
cmc
mov
or
dec
push
in
fwait
sbb
inc
cmp
jg
push
push
lods
lcall
cmp
bound
push
mov
into
xchg
sub
jae
dec
loopne
fmuls
ljmp
inc
fidivrl
xchg
loop
fisttps
aad
mov
leave
inc
movsl
cli
dec
or
xchg
push
loope
lods
pop
pushf
cmpsb
jo
stc
inc
loop
push
push
ror
sbb
inc
fstpt
outsl
imul
xchg
cli
jmp
cmp
test
jle
repnz
sahf
cld
xchg
sahf
fucomp
aam
mov
jb
outsl
dec
jle
mov
cmp
ds
xchg
in
and
xor
adc
test
mov
mov
mov
or
mov
loope
ss
mov
stc
pop
popa
cmpsb
repz
add
icebp
cmpsl
shlb
stc
cmp
jne
dec
push
mov
pushf
dec
dec
pop
scas
mov
jb
out
scas
repz
andps
imull
popf
fimull
or
imul
sbb
inc
aam
add
sahf
sbb
push
aad
mov
loop
dec
push
call
cmp
mov
lods
js
push
mov
sub
mov
jne
mov
pop
pop
inc
lcall
movb
or
sbb
mov
outsb
inc
add
leave
lds
xchg
jl
sub
dec
xlat
lret
jle
xrelease
add
pop
repz
adc
dec
repz
adc
ss
leave
cmp
ljmp
imul
lds
xor
mov
add
push
mov
pop
xor
mov
mov
cwtl
mov
outsl
mov
in
push
cld
stos
cmpsb
popa
mov
mov
es
in
mov
adc
in
lret
adc
sbbb
sub
aaa
xchg
in
repz
inc
xchg
fsubr
sahf
xor
xchg
push
pop
pushl
xor
int3
cli
or
pop
daa
roll
or
and
jg
xchg
cwtl
adc
stc
push
xor
push
mov
scas
pusha
sub
cmp
mov
and
sub
loop
int
jmp
sahf
inc
lods
pop
mov
add
in
pop
fcmovne
popf
or
adc
cmp
and
into
je
inc
xor
int3
dec
sbb
out
xchg
jle
or
inc
int3
sti
jp
loope
ud2
mov
dec
sbb
jl
clc
hlt
psubd
fmul
xchg
sub
aam
add
lock
outsb
sbb
fdivrs
ds
movsb
lahf
cmp
arpl
add
test
jns
enter
ret
icebp
inc
pop
jl
inc
xchg
dec
pop
pop
mov
jb
mov
xchg
sub
push
jae
and
or
in
orb
and
pop
or
xchg
lret
orl
jg
and
mov
mov
xor
push
lods
iret
movsb
pop
das
mov
adc
adc
fnsave
lret
stc
addl
sub
es
andl
jae
ds
addl
sub
inc
fcoml
fwait
inc
mov
lahf
xor
fmuls
jle
popf
mov
fmuls
inc
xor
push
mov
outsb
fwait
and
push
scas
jecxz
lock
and
xchg
pop
test
push
in
cltd
sbb
sti
cmp
inc
cmpsl
inc
mov
imul
xor
mov
fcomip
loope
mov
mov
loopne
sub
out
loope
in
fwait
sbb
stc
flds
in
lods
inc
insl
pusha
sub
cmpsb
or
aam
out
add
dec
fistpl
lret
outsb
sub
pop
lods
fildl
loope
test
insb
movsl
dec
dec
inc
mov
xchg
repz
popa
inc
es
xchg
mov
sub
stos
std
sub
cmp
out
mov
xlat
incb
insb
shlb
in
or
add
add
and
lods
push
pop
push
andl
push
aam
movsl
rolb
sub
popa
mov
jnp
dec
ret
les
xchg
dec
jmp
dec
mov
fisttpll
test
lcall
repnz
cwtl
push
ljmp
sub
adc
scas
sub
add
mov
shrb
mov
stos
idivl
cmc
test
dec
sub
repnz
sub
outsb
das
popf
lret
xchg
jge
stos
inc
sbb
std
in
jle
or
or
insb
addr16
lds
adc
insl
call
adc
repz
mov
imul
in
icebp
imul
push
mov
xor
cwtl
xor
stc
iret
dec
dec
lods
ror
aad
mov
pop
sbb
neg
cmc
dec
lds
push
fnstenv
int3
cmp
leave
or
and
rcrl
and
pop
dec
fdiv
jns
pop
fdivrl
int
les
sbb
mov
and
test
das
jle
xchg
sub
fldl
mov
jnp
mov
xchg
mov
es
imul
lods
xchg
pop
jns
repnz
sbb
pop
xor
jecxz
hlt
push
fcompl
mov
test
bound
jecxz
fidivl
mov
pop
sbb
shr
mov
mov
add
push
push
sbb
sarb
test
sbb
incb
movsb
cmp
push
jne
ficomps
ja
jge
addb
rcrb
fmul
mov
lret
cltd
jmp
sub
push
out
and
jb
popa
and
fnstenv
repnz
xchg
gs
dec
test
mov
dec
cmc
in
leave
xor
pop
cmp
mov
aas
push
js
pop
xor
popf
sub
or
dec
int
bound
push
dec
mov
mov
dec
pop
or
cltd
cmp
push
lahf
sub
and
mov
in
or
mov
pop
or
sbb
rcll
jo
cmpl
push
xchg
adc
fsubp
jp
mov
sbb
jge
and
jae
hlt
mov
or
inc
rcl
xchg
loopne
lock
dec
push
cmp
nop
imul
daa
cwtl
lahf
and
divb
shlb
loop
cmp
add
dec
inc
pusha
popf
lea
mov
adc
cmp
jae
xchg
pop
xchg
adc
cwtl
bound
incb
loop
xlat
aam
imul
fadd
shr
js
sbb
push
rol
xchg
and
dec
push
scas
dec
ja
inc
sbb
ja
cmp
es
stos
and
xor
xchg
ljmp
icebp
inc
adc
xchg
outsb
nop
and
out
faddp
aaa
orb
and
sbb
popa
jl
dec
subl
cli
xchg
test
jge
fnstenv
and
gs
lods
insl
jl
out
pop
jecxz
mov
dec
stos
lcall
gs
js
jg
rorl
xchg
lods
add
js
dec
mov
packssdw
rcrl
popf
lret
jno
addl
pop
cli
rol
outsl
fildl
mov
fs
movsb
jo
imul
clc
push
push
ret
aas
jb
test
mov
cmpb
movsl
and
dec
inc
dec
rorl
jl
leave
push
push
jecxz
fisubl
mov
jmp
mov
js
or
dec
ret
sar
sahf
fidivs
mov
and
sub
lahf
cmp
xchg
push
lcall
mov
lea
cmpsl
and
sbb
add
pop
xlat
jnp
les
pop
xlat
jmp
imul
call
iret
xor
lds
sbb
lea
adc
ret
imul
pop
jg
scas
daa
mull
scas
xor
call
sbb
push
mov
xchg
in
mov
adc
shlb
nop
adc
add
or
fcmovbe
in
mov
and
leave
cmc
jns
addl
xor
xor
mov
jge
sahf
jp
mov
xchg
fildll
jmp
movl
xor
sahf
or
in
cmpsl
outsl
call
mov
adcl
cmp
add
and
cli
mov
push
repz
ljmp
movsb
mov
fs
fsubrl
mov
lret
jmp
xchg
xor
adc
adc
adc
and
xor
mov
inc
push
das
jg
call
pop
dec
jl
shll
jbe
shlb
mov
incl
xor
rclb
sub
pop
xchg
xor
in
imul
adc
gs
add
out
dec
sub
aad
inc
cld
mov
push
cmpsb
call
xchg
aas
test
adc
dec
adc
or
lret
sub
das
ret
stos
hlt
clc
push
mov
cltd
mov
dec
jmp
fsubrl
shrl
stos
mov
mov
sub
shl
cmc
push
mov
test
cmp
jbe
jmp
es
les
inc
mov
call
xchg
or
in
repnz
dec
pop
and
pop
xor
push
movsl
cs
jnp
xchg
or
mov
or
jnp
add
scas
shr
inc
out
sbb
loopne
ficoms
stos
stos
ret
or
xchg
sub
popl
and
cmp
fwait
push
jb
jnp
add
cmp
xor
or
and
in
fwait
dec
and
fisttpl
push
or
in
ja
mov
jmp
dec
mov
icebp
lret
bound
xchg
scas
adc
imul
xor
fs
mov
lock
aas
mov
fwait
mov
jnp
out
js
push
add
sub
adc
into
inc
mov
cmp
sbb
lcall
shl
ret
cltd
dec
sahf
push
sar
clc
das
out
sub
dec
pop
xchg
xor
lahf
push
lds
and
mov
scas
cmp
push
add
aas
jge
push
out
pop
xchg
lahf
adc
sub
pop
mov
sahf
and
lods
lods
jmp
mov
pop
sbb
lock
fiaddl
das
mov
sub
cwtl
mov
loopne
xchg
mov
push
cmp
dec
mov
and
nop
lret
or
fs
loop
and
or
subl
adcb
pusha
mov
mov
icebp
add
sbb
aad
sarl
cld
aam
sti
aam
test
bound
xor
ja
fcompl
sub
daa
jo
add
cmp
jl
faddl
fmull
das
push
out
add
or
sti
es
leave
std
fisttpll
xchg
outsl
or
xor
in
cmp
push
mov
daa
xor
inc
jbe
mov
jmp
or
pop
add
fimuls
or
pop
lods
adc
pop
mov
and
sub
in
rcl
insb
lret
push
jp
pushf
xchg
sub
sub
sub
aaa
fisubl
xor
sarb
in
stos
dec
stos
aas
cmp
ja
clc
jne
cmpsb
add
mov
addb
adc
or
sahf
jnp
or
xchg
sbb
std
cmpsl
mov
jno
dec
mov
xlat
das
push
sarb
test
mov
jbe
lret
js
fsubrl
and
dec
leave
mov
das
and
sbb
xor
push
mov
push
push
push
syscall
dec
ret
jmp
mov
xlat
xchg
lahf
jb
mov
insl
cmpsb
inc
or
adc
sarb
and
mov
ret
ja
ret
ljmp
clc
insb
sti
mov
or
and
or
rorb
mov
xchg
stos
xchg
mov
add
out
and
in
jno
int3
lock
mov
sub
adc
pushf
sbb
imul
push
rclb
orl
cwtl
sbbb
mov
xchg
insb
push
fidivl
test
add
adc
xlat
test
adc
or
sbb
and
xchg
add
fstpl
mov
iret
mov
cli
mov
sbbb
push
loop
and
xor
mov
inc
loope
das
iret
jns
pop
dec
call
pop
test
divl
imulb
mov
push
pop
shl
into
adc
mov
ja
insb
jmp
rorl
repnz
mov
xchg
push
cmp
xchg
dec
in
shrb
divl
mov
cld
mov
dec
lods
mov
into
ss
and
shll
bound
and
xchg
in
loopne
imul
ds
loopne
addr16
sarl
lret
into
fdivl
fldcw
ds
pop
call
and
pop
inc
xchg
aad
xlat
popf
repnz
lret
xchg
insl
mov
out
mov
pop
lock
call
scas
outsl
xor
pop
je
movsl
push
adcb
mov
mov
lcall
add
repnz
out
mov
jne
mov
cmpsb
inc
push
inc
enter
inc
push
xchg
inc
mov
pop
out
nop
pop
xchg
out
jecxz
jns
jne
xchg
mov
out
and
mov
mov
xchg
popf
mov
addl
sbb
push
add
lock
inc
mov
push
cmp
out
dec
push
in
fxch
pop
inc
imul
push
popf
ljmp
gs
jb
stc
fsubrl
adc
loopne
pop
jbe
clc
das
aad
adc
mov
int3
pop
rcll
loopne
jbe
clc
jmp
loopne
mov
vaddpd
imul
mov
fs
in
sbb
and
mov
rol
testb
push
xor
sbb
adc
icebp
inc
lods
push
lods
bound
pushf
fwait
ljmp
inc
in
stc
mov
rclb
cld
add
mov
push
add
jge
lds
icebp
add
mov
jge
push
cmp
fildll
sar
out
and
cld
add
filds
add
sahf
cmp
pop
adc
inc
xchg
aad
jbe
pop
frstor
pop
mov
xchg
mov
xor
test
std
ss
mov
scas
push
stos
xchg
fstpt
or
mov
rorl
push
jle
orb
outsb
xchg
or
mov
fstpt
push
push
inc
sub
test
and
pop
loopew
out
sbb
in
das
xchg
and
stos
aam
add
pop
or
sbb
jmp
stos
mov
fimull
stos
mov
dec
mov
cld
lcall
and
xor
dec
push
mov
mov
leave
cmp
pop
negb
xchg
add
jo
lods
fimuls
push
popf
jmp
mov
xor
add
scas
xchg
xlat
dec
mov
xchg
fisubl
cmp
fisubrs
cs
lds
or
aad
mov
lods
ljmp
jmp
lcall
shll
jns
std
rcrb
pop
or
das
fwait
jecxz
mov
mov
sbb
jg
rclb
ds
cmpsl
jbe
orb
cmp
mov
inc
sahf
test
jg
add
mov
jmp
ja
dec
and
ljmp
outsl
les
fildll
sub
lea
xor
mov
mov
jl
lahf
sarb
inc
fsubr
orb
mov
mov
xchg
xor
fld
jno
push
aas
and
insl
dec
or
mov
xlat
clc
sub
xor
add
jbe
and
fcom
push
fildl
fdivrs
inc
data16
mov
out
dec
adc
rcrl
mul
pushf
pusha
add
ret
add
mov
xchg
xor
push
mov
stc
pusha
fnstenv
xchg
cwtl
push
or
sub
inc
dec
xchg
dec
cmpsl
xchg
imul
mov
adc
mov
ja
mov
test
add
loope
int
cwtl
dec
cmpsl
sbb
xchg
push
movsb
lret
cli
sub
sarl
lods
or
out
or
movb
loopne
sarb
nop
pop
mov
pop
sbb
jnp
push
aas
fucomp
push
xlat
dec
adcl
test
mov
outsb
loope
mov
xchg
sub
xchg
addl
iret
jmp
shll
dec
xor
jl
icebp
add
iret
lcall
sahf
mov
jle
xchg
mov
sahf
pop
sbb
rol
cmpsb
stos
inc
ljmp
test
adc
and
mov
mov
sub
mov
aam
lret
scas
jne
insb
xchg
mov
mov
rorl
fcmove
xchg
lret
rol
xlat
in
lock
jl
addl
pusha
mov
xor
push
cmp
andl
movsb
lret
pop
and
sub
jbe
cwtl
sub
jp
frstor
or
mov
cmp
sbb
xorb
sbb
sub
int3
jp
add
pop
sub
mov
mov
xlat
add
int3
int
scas
push
dec
adc
pop
jle
or
adc
in
subb
cmp
out
popl
insb
subb
pushf
add
xchg
nop
popf
lret
ret
dec
sti
xchg
cli
arpl
inc
sub
jo
xchg
scas
sbb
pop
inc
negl
xchg
sahf
out
inc
add
push
jbe
adc
sbb
inc
js
inc
push
cmp
dec
push
sahf
arpl
cmp
mov
pushf
mov
jp
dec
ret
or
scas
push
call
std
in
mov
cmc
icebp
sub
xor
hlt
stc
pop
clc
scas
xchg
cmp
push
xchg
in
es
bound
ja
pop
fld
and
adc
lock
das
jecxz
fs
mov
and
pushf
inc
lock
or
cltd
pop
pop
out
and
xor
inc
and
ficompl
int
mov
loope
fistps
stc
gs
test
lods
mov
and
pop
imul
mov
add
inc
mov
push
adc
movsl
cs
adc
sbb
push
xor
les
outsb
cmp
outsb
and
inc
jl
scas
xor
mov
pop
in
or
test
cmp
push
mov
cmp
mov
dec
decb
sbb
daa
xchg
insb
pop
sahf
mov
inc
in
stos
cld
push
aam
mov
jno
adcb
fidivrl
dec
lock
in
xchg
test
daa
jno
inc
inc
clc
and
pop
iret
jne
fisubrs
stos
cmp
ss
pop
or
adc
mov
ss
test
mov
ret
push
ljmp
push
push
cli
and
dec
fcomp
sti
add
int
sub
jle
imul
inc
nop
pop
add
push
push
pushw
mov
test
lock
xor
popa
clc
mov
pop
adc
or
dec
lods
sub
fdivrl
pop
inc
pop
pop
rcrb
jp
out
aam
fiaddl
pop
add
int3
lret
sub
adc
mov
sbb
jns
std
add
xchg
pop
aaa
test
mov
push
and
mov
inc
cli
daa
sbb
cmp
and
js
dec
icebp
addb
xor
sbb
xor
loopne
insl
add
mov
fistpl
sbb
push
and
imul
xlat
leave
xlat
push
cmp
ja
jl
adc
hlt
push
inc
outsb
sub
fisttps
mov
adc
xor
stos
push
out
add
push
xor
inc
incb
insl
arpl
sar
fimuls
mov
in
mov
fs
mov
fistl
repz
or
add
std
aaa
fildll
adc
fwait
mov
test
xchg
xor
fistps
or
cmp
lahf
xchg
pop
sub
fwait
dec
cmp
push
mov
loopne
mov
pusha
fisttpll
cmp
mov
jmp
push
repz
pop
loope
out
lret
xchg
clc
enter
jl
push
mov
mov
push
push
xchg
aam
sub
or
jge
movsb
jecxz
dec
or
xlat
je
jnp
pop
pop
mov
sbb
aas
and
das
pop
mov
jl
push
fidivrl
add
adc
mov
lods
test
es
mov
inc
je
push
test
xchg
loope,pt
test
cli
bound
stos
loopne
es
xor
mov
out
test
mov
push
mov
int
aas
sahf
int
inc
test
in
in
shrb
xchg
adc
mov
or
in
hlt
divb
adc
or
and
cmp
in
jge
cmp
lock
dec
lock
icebp
mov
pop
or
and
out
pop
cltd
add
nop
xor
enter
cmp
xor
clc
dec
add
out
adc
fadds
jns
push
sbb
add
mov
lret
inc
sbb
into
and
fs
jae
dec
dec
fimull
xchg
movsl
xor
xchg
mov
call
iret
ja
iret
sbbb
dec
dec
ficompl
leave
add
sbb
pop
idivb
cli
imul
add
fwait
out
insl
sti
out
lahf
mov
bound
lcall
idiv
bswap
in
insl
cli
notl
fcomip
mov
dec
pop
jb
mov
fs
dec
lret
or
mov
lods
sub
aad
pushf
test
pop
dec
lret
mov
popf
sbb
fwait
sub
mov
imul
cmpsb
lea
xchg
cmpsl
das
push
sub
sbb
in
aaa
in
jo
hlt
mov
int3
dec
outsb
jo
loop
gs
lock
jle
lods
xchg
in
sub
xchg
lret
push
add
mov
xchg
or
subb
pop
mov
leave
sbb
xchg
loopne
jo
popf
jne
xor
popa
lcall
push
jl
nop
sahf
pop
cmp
add
jb
rorl
mov
clc
mov
cld
jae
arpl
shlb
outsb
addb
popa
movsb
mov
orb
inc
enter
out
loop
xor
push
add
mov
leave
idivl
inc
xchg
add
jecxz
or
out
sub
cmp
jp
sbb
xorl
bnd
inc
ja
sbb
fwait
push
inc
lods
fidivl
fbld
adc
data16
mov
pminub
pop
sub
ja
mov
pop
pushf
popf
pop
pushf
push
cmp
mov
dec
in
xlat
inc
cli
pop
lret
data16
add
fdiv
in
in
mov
or
jl
sahf
popf
jle
pop
leave
lcall
ljmp
fcmove
outsl
inc
call
clc
push
inc
jne
lret
jle
fs
dec
loop
bound
aad
jne
lods
popa
dec
cltd
dec
or
pusha
insl
in
test
and
jge
adc
sbb
ds
imul
ds
xchg
stc
push
push
test
movsl
jp
lods
sub
xchg
and
add
sub
mov
test
les
or
sub
int3
jbe
pop
xor
gs
es
sbb
test
xor
shl
clc
or
rol
add
out
xor
out
jl
add
and
push
rolb
dec
lret
xor
jge
in
insb
mov
sbb
sub
leave
add
xor
mov
stc
cmp
popf
mov
icebp
jbe
mov
sarl
scas
ljmp
sub
dec
cmp
cs
in
sbb
iret
ja
lds
xor
aas
cmpsl
movsl
jle
dec
mov
push
lods
mov
push
xor
leave
int
ror
mov
mov
add
inc
inc
xlat
ds
push
test
xor
dec
stos
mov
xor
jae
icebp
cmp
ss
mov
test
and
lret
dec
movsl
jecxz
repz
lods
aaa
xor
test
int3
jnp
mov
sbb
mov
movsl
mov
jae
and
add
adc
mov
add
mov
adc
xchg
sub
loop
or
xchg
addr16
cltd
movsb
enter
fucomip
popf
cmp
adc
movsb
add
cwtl
ret
add
scas
jns
bound
rorl
mov
pop
sub
aad
or
and
cmp
divl
dec
xor
lea
mov
mov
jge
mov
data16
jae
mov
hlt
fidivrl
cs
xchg
out
cmp
pop
pop
sbb
nop
jmp
mov
or
sbb
mul
pop
adc
add
aam
sbb
push
addl
xor
sbb
cmc
cmp
shll
loopne
ds
dec
mov
jns
movsb
push
mov
inc
or
and
or
sbb
xor
push
out
std
lock
jno
push
or
test
mov
mov
les
mov
fnsave
clc
xchg
inc
jl
and
mov
or
mov
mov
call
sub
jne
push
dec
in
mov
dec
xchg
stc
fisubl
pusha
lret
out
fildll
outsl
cmc
cmp
imul
and
rcl
cmpsb
cmpsb
sbb
ljmp
jge
or
sbbb
push
pop
push
in
pusha
dec
xchg
sbbb
stc
mov
jl
push
popf
movsl
into
dec
fldt
popf
stc
sub
mov
pop
cmp
adc
into
mov
mov
or
out
test
clc
cmp
mov
imul
fwait
scas
inc
fcompl
xor
repnz
inc
dec
lcall
cmpsl
cmp
pop
test
stc
icebp
sbb
cwtl
inc
stc
pop
lods
mov
xchg
insl
xlat
sbb
xlat
mov
jnp
subb
sahf
outsb
sub
leave
jge
pop
das
daa
sti
data16
jno
and
je
mov
test
mov
repz
add
hlt
ficoml
repz
pop
jmp
push
movsl
in
call
adc
les
jae
push
or
jge
push
xor
fcompl
inc
inc
rorl
repnz
and
dec
loopne
jg
adc
outsl
adc
mov
push
insb
or
lret
or
mov
cmpsb
push
iret
call
sbb
pop
outsl
push
orb
add
cmc
add
imul
imul
or
jmp
cmp
nop
loope
xchg
out
sub
sub
gs
sbb
mov
adc
inc
mov
out
add
adc
loope
daa
into
xor
push
xchg
cld
mov
enter
xor
sbb
enter
dec
sbb
fadds
imul
cmpsb
scas
repnz
sub
repz
jnp
sbb
dec
js
jns
xorb
mov
mov
jle
test
add
stos
movsb
and
int3
adc
into
cmc
lcall
xor
cwtl
lcall
add
out
fsubs
mov
mov
xchg
mov
jp
movsl
stc
leave
punpckhwd
xor
dec
aam
xchg
gs
movsl
push
cmp
xchg
ds
insl
mov
icebp
inc
hlt
popa
inc
fadds
clc
xor
in
mov
and
das
xchg
lods
paddq
leave
pop
jmp
fisttps
jb
jmp
adc
aas
jg
xchg
mov
jb
sub
dec
cs
inc
pop
xlat
jmp
loope
out
mov
pop
pop
mov
mov
jne
push
out
xchg
subb
lods
je
inc
mov
cmp
xchg
mov
dec
mov
jmp
mov
cmp
sarb
lods
das
sbb
scas
test
enter
pop
sbbl
xor
jmp
lea
push
int
xchg
les
in
out
mov
jno
pop
push
and
xchg
mov
mov
sbb
mov
lret
cwtl
xor
shll
lea
les
aas
add
sar
inc
es
mov
fidivrl
dec
adc
xor
jmp
cwtl
cli
jae
mov
push
out
cltd
cltd
adc
outsw
ret
pop
test
xorl
and
jmp
fwait
or
in
add
and
jne
xchg
cmp
aaa
popa
icebp
repz
sub
mov
mov
ljmp
dec
push
sub
pop
das
cmpsb
test
lods
les
loope
leave
mov
jns,pt
mov
push
in
test
mov
adc
mov
test
mov
leave
hlt
movl
lds
and
test
cld
fwait
cmc
dec
aas
mov
pusha
push
ljmp
xchg
inc
lods
jno
scas
jnp
cld
adc
aad
pushw
mov
adc
int
movb
xor
pcmpeqb
pop
push
push
sbb
xor
xor
lds
push
cmc
scas
sbb
sub
jae
mov
fcmovnb
push
sbb
stos
cmp
dec
int3
fldenv
into
jne
aas
push
ret
sub
mov
cmp
pop
xor
jp
jae
adc
pop
cmp
js
mov
jge,pt
dec
aaa
lret
gs
cli
mov
xor
mov
jnp
mov
mov
add
push
or
test
into
sbb
cmc
scas
push
in
or
cmc
lahf
add
mov
out
cmpsl
cmp
pop
loop
xor
popl
aaa
rol
stc
stos
cmp
and
cwtl
inc
or
push
test
cli
adc
cltd
sbb
cwtl
xchg
inc
fwait
lods
inc
cmp
testl
ja
insb
mov
or
jnp
in
inc
pop
sub
dec
repnz
pop
sbb
lock
mov
out
into
mov
pop
and
cmp
addb
cs
cmp
bsf
mov
xlat
or
cmp
cwtl
stos
xor
sub
cmpsb
mov
push
adc
mov
repz
jmp
jno
jne
mov
pop
fdiv
jns
jb
les
dec
mov
lcall
inc
jb
stos
je
dec
adc
daa
std
mov
xchg
jge
cmp
and
fmull
cmc
pop
mov
bound
sbb
dec
lods
icebp
mov
cmp
mov
mov
or
add
jne
jp
adc
jae
imul
jne
aaa
sahf
mov
and
add
mov
mov
add
xchg
push
or
sub
addr16
sub
xor
jg
xchg
mov
mov
mov
adc
in
outsb
out
or
fsts
hlt
out
loop
lret
mov
push
insb
xor
int
cltd
fistps
pop
ljmp
sub
cmp
mov
or
aad
cmpb
negb
or
je
ret
xlat
incb
in
jo
aaa
mov
xor
inc
push
xchg
pop
sub
std
pusha
je
inc
cmp
adc
cli
ss
call
sub
ja
sub
or
iret
or
xchg
xor
mull
ljmp
rcll
push
pop
mov
movsb
call
sahf
inc
and
in
xor
adc
inc
in
jne
lahf
mov
ja
fs
push
jb
pop
mov
mov
jb
xor
or
push
xchg
jb
push
mov
mov
xchg
decl
mov
xor
ss
in
sarb
clc
fmull
xor
sbb
push
stos
jecxz
xor
cmpsb
test
jmp
out
mov
cmc
test
into
aam
stc
hlt
push
cld
dec
test
push
mov
sbb
sarb
add
xor
sbb
add
jg
push
jg,pt
int3
mov
and
jmp
ret
pop
les
icebp
pop
sbb
test
cmc
icebp
cli
fldt
iret
or
cmp
js
jae
mov
pop
inc
out
rcrl
cmp
iret
scas
pop
mov
adc
pop
sub
cmp
jnp
jne
js
dec
and
inc
jno,pt
fstenv
ljmp
les
and
push
js
pop
js
mov
jge
lods
push
rorl
shll
sub
jge
das
pop
int
xorb
mov
jp
leave
adc
test
ds
mov
mov
jecxz
mov
mov
fidivrl
sbb
sub
inc
push
cmc
jae
push
adc
in
inc
inc
dec
es
add
or
adc
popa
int
aas
movsl
inc
jae
test
mov
cmp
lods
mov
inc
pop
or
mov
push
mov
out
mov
cld
daa
pusha
pushf
inc
sbb
push
mov
or
pusha
or
and
mov
cld
xchg
sbb
sub
mov
rorb
jne
or
cmc
addr16
ja
jnp
dec
pushw
ds
cltd
pop
mov
cmpsl
and
push
sub
xor
pop
xor
notl
dec
xorb
hlt
pop
cmpsl
mov
xor
mov
dec
fidivrs
in
pop
lods
or
call
in
sub
inc
or
fwait
in
sbb
cli
adc
mov
xor
test
ja
xor
outsl
movsl
stc
sbb
jo
stc
and
xlat
push
bound
imul
mov
into
mov
out
dec
imull
sub
clc
lcall
push
or
jecxz
pop
jne
clc
repz
mov
mov
stc
push
xor
in
push
add
mov
sbb
inc
sub
stos
jae
shr
xlat
sbb
push
fwait
popf
fnsave
cwtl
cmp
jo
jecxz
xchg
xor
adc
mov
pop
mov
out
fimuls
mov
cmc
les
rcll
or
daa
dec
xchg
outsl
enter
dec
rcrb
inc
enter
pop
test
mov
or
adc
push
enter
jb
dec
or
jb
and
sub
fldenv
jb
int3
push
add
push
mov
push
lods
and
scas
adc
mov
sub
mov
push
jae
mov
out
sbb
sub
adc
std
mov
pop
clc
out
fcompl
fsts
cltd
pop
clc
bound
jns
inc
lret
xor
loop
mov
sbb
push
andb
stc
cmp
daa
popa
mov
cmp
or
icebp
outsb
adc
pop
mov
mov
scas
pop
js
stc
aam
push
scas
xchg
jg
test
sub
dec
in
clc
mov
rol
cmpsl
inc
or
add
mov
push
leave
mov
jb
insl
adc
mov
fnstsw
lret
arpl
sub
iret
or
add
ret
mov
addr16
push
mov
inc
sbb
mov
mov
cmc
mov
jmp
cli
cmp
pop
push
push
mov
sbb
std
rcll
and
cmp
dec
sahf
sbb
adc
cmpsb
and
cmp
test
jp
jnp
xor
gs
mov
outsl
mov
mov
sbb
arpl
sub
or
popf
and
push
jb
ret
mov
mov
xchg
adc
cmp
pop
mov
sub
inc
lock
movsl
test
mov
mov
pop
in
fucomip
sbb
add
aas
not
cmp
cwtl
cwtl
push
xlat
mov
hlt
pop
jmp
mov
sarb
shrb
add
push
stos
jecxz
je
pusha
arpl
popf
sub
lret
loop
mov
xchg
stos
mov
leave
mull
dec
mov
in
decl
sbb
addr16
sbb
adc
or
xchg
adc
jle
mov
sub
imul
arpl
inc
and
xchg
cmpsl
repz
shlb
scas
addr16
push
jb
adc
loope
call
in
sub
and
cmp
pop
fwait
mov
jecxz
js
cmp
or
lea
clc
sub
ljmp
push
xchg
test
xlat
pop
addr16
movsl
call
add
fldcw
adc
out
loop
shlb
outsl
add
loopne
sub
loop
push
adcb
jmp
movsb
call
push
mov
in
jmp
test
repz
out
dec
call
std
lea
mov
mov
in
xor
loopne
fildl
loop
call
sarl
shll
sub
jge
inc
loopne
mov
and
xchg
jo
rorb
fmul
out
cmp
fldenv
lret
mov
dec
outsl
sub
mov
arpl
ror
sarl
ficomps
adc
inc
push
or
add
jne
out
mov
mov
shrb
xchg
out
xor
scas
add
leave
cmp
mov
fcompl
mov
mov
sbb
dec
sahf
mov
in
sbb
enter
call
cmp
in
fistps
scas
jnp
shlb
stos
push
pop
sbb
mov
or
xchg
sbb
jecxz
mov
addb
into
rcrb
sub
cmpl
in
stos
pop
sbb
add
clc
or
jg
ljmp
shl
lcall
lods
scas
aaa
pop
add
and
movsb
test
mov
popf
pop
mov
pushf
sbb
cwtl
mov
test
mov
jmp
pop
fcoml
orb
popf
pushf
mov
les
mov
rorl
jmp
fnstenv
lahf
int
mov
sti
outsb
add
and
push
add
mov
shll
icebp
adc
mov
movsb
xor
leave
cli
add
dec
jl
and
out
push
mov
mov
sub
jae
sbb
popa
mov
push
into
lods
imul
pushf
icebp
imul
push
mov
pop
test
xor
mov
pop
and
sub
push
out
pop
jle
js
mov
jnp
insb
push
add
push
das
lods
rcl
jge
nop
test
xchg
and
cwtl
dec
ret
inc
lods
movsl
fucom
daa
and
pushf
inc
pushf
test
push
rolb
add
int
mov
ljmp
xor
jge
test
aaa
rclb
stos
je
push
push
pop
adc
mov
fstpt
xorl
inc
insw
jge
pop
xchg
scas
pop
jecxz
push
dec
adc
mov
xchg
mov
mov
or
ds
inc
sub
subb
push
or
clc
push
cmp
add
cmpsl
push
mov
lods
xor
adc
aad
pop
aas
push
dec
jne
adc
or
push
fwait
stos
test
jbe
aaa
test
sub
mov
popf
rol
popa
punpckhbw
stos
and
add
inc
fdivrl
or
dec
stos
mov
and
mov
xchg
es
repz
sbb
std
sbb
repz
loope
mov
dec
lcall
mov
and
dec
fwait
push
jp
scas
cmp
push
stc
mov
fldt
jbe
or
outsb
nop
adc
add
cmp
xor
sarb
loope
push
inc
adc
push
dec
shrb
jb
insb
imul
scas
xchg
xchg
inc
aaa
bound
jnp
in
push
sub
xchg
xchg
dec
mov
pop
std
dec
sbb
adc
rcrb
fstps
jnp
in
sub
dec
cmpsl
xor
adc
popa
add
call
rolb
inc
ljmp
into
rcll
stc
add
add
mov
jecxz
in
out
xor
pop
repz
js
jno
xorb
cwtl
cmp
push
and
ud1
loope
push
sub
rcrl
adc
aaa
mov
data16
hlt
jo
nop
lock
xor
mov
subb
mov
dec
imul
and
pop
adc
push
sub
add
je
jecxz
xorl
loopne
fnstsw
loop
mov
stos
mov
outsl
bound
scas
mov
jge
adc
and
push
aam
add
xchg
pop
movsb
xchg
enter
jb
in
jnp
lret
setle
loop
adc
dec
dec
mov
mov
outsb
pop
rolb
inc
gs
ret
dec
iret
mov
push
push
push
mov
inc
test
mov
push
fisubs
jb
in
mov
sub
pusha
pushf
into
frndint
dec
or
xchg
mov
lds
fisttpl
ret
pop
adc
leave
ret
call
pushl
jmp
shll
cld
mov
push
imul
sbb
out
mov
adc
stos
push
lds
gs
outsl
or
inc
outsl
test
jle
std
cld
mulb
jmp
pop
or
mov
sub
or
rcr
mov
arpl
pop
movb
je
xchg
mov
gs
xchg
mov
test
add
outsb
repz
jne
inc
mov
adcb
mov
push
cmc
mov
cli
movsl
popl
idivl
mov
pop
mov
lods
clc
nop
inc
and
cmp
movl
popa
add
cmp
xor
push
stos
jnp
xor
int3
out
xor
sub
dec
adcl
lods
test
mov
ja
mov
cmpsb
arpl
call
push
lret
rorb
xor
imul
loop
adc
jl
and
mov
push
mov
in
repz
push
mov
push
or
data16
add
jp
in
out
ret
test
sbbl
adc
movsb
pop
ret
int3
stos
enter
or
mov
add
pop
outsb
fbld
xchg
fbstp
cwtl
cmp
add
hlt
mov
lret
jns
pop
popf
inc
dec
or
xchg
and
icebp
pop
stos
ficompl
pop
addb
add
aad
push
cld
add
fdivl
jge
add
iret
adc
jno
bnd
int3
pop
sbb
push
dec
inc
jg
or
outsb
push
sahf
xchg
loop
cmpsl
and
add
das
negb
mov
mov
imul
lods
jns
ljmp
das
or
lds
test
push
out
pop
dec
cli
sbb
aam
ret
or
scas
out
out
mov
push
xorl
mov
insb
mov
mov
adc
push
sbb
inc
lcall
out
fbld
addr16
pop
fbld
inc
test
out
insl
sbb
xchg
test
pop
sbbl
mov
and
ficoml
mov
lods
outsb
mov
cmp
cmp
fcomps
dec
std
data16
inc
add
xchg
popf
jge
xchg
scas
inc
mov
mov
mov
outsl
jg
adc
iret
add
int3
rcrl
into
and
or
pop
add
iret
and
insl
push
fyl2x
or
dec
hlt
popa
seto
je
mov
or
jnp
or
mov
leave
subb
popa
in
xor
rclb
call
inc
lahf
aad
lcall
dec
icebp
fsubrl
mov
jg
lahf
imul
dec
into
sbb
push
mov
mov
test
sahf
lods
data16
cmp
adc
push
or
cwtl
arpl
xor
add
adc
push
fmul
push
or
aad
lods
enter
test
mov
mov
and
mov
int
add
mov
push
mov
testb
iret
dec
mov
push
arpl
add
int3
or
subb
mov
popf
stc
jp
cmc
imul
pop
sbb
leave
inc
pusha
mov
loop
jecxz
xchg
xlat
clc
fbld
icebp
dec
xor
xchg
mov
icebp
insl
dec
test
ss
repnz
dec
cmp
repnz
push
mov
inc
call
push
xor
sahf
sbb
daa
or
loopne
leave
pop
sub
test
mov
adc
mov
cmpsb
jno
mov
or
jg
mov
mov
sbb
pop
dec
inc
pusha
jg
cmp
mov
mov
fwait
es
cmp
jns
hlt
sarb
lahf
jne
roll
stos
push
ljmp
stc
push
sahf
jle
stos
cmp
aaa
or
adc
test
or
mov
stos
or
adc
xor
out
sbb
and
xchg
sbb
jmp
sbb
ljmp
sub
cld
mov
mov
mov
idiv
mov
xchg
pop
or
aaa
incl
xchg
mov
mov
shr
mov
cs
or
fwait
add
std
sbb
aas
or
cmpsl
push
inc
adc
inc
bound
das
push
lcall
sbb
movsl
jecxz
gs
cli
insl
jmp
jmp
xor
mov
sti
push
mov
lock
pop
and
mov
xchg
pop
stos
dec
dec
outsl
std
iret
adc
or
ret
jae
aad
cmp
cltd
lds
lret
push
jecxz
sub
pop
stos
pop
mov
aad
mov
push
subl
jb
jmp
push
sarl
sti
popa
add
mov
jp
xchg
adc
inc
and
clc
add
aad
jge
dec
inc
dec
arpl
xchg
addl
out
xor
les
das
mov
sub
js
pop
out
jl
push
fs
push
lods
mov
repnz
out
mov
xchg
adc
jl
into
dec
cwtl
xchg
lret
xchg
jmp
imul
std
sub
xchg
outsb
mov
jbe
loope
add
imul
mov
mov
or
pop
mov
adc
movsb
and
ljmp
vmovupd
mov
or
or
sarb
sbb
adc
cmpb
add
mov
mov
cmpsl
ja
mov
push
repnz
pop
shll
jl
xchg
push
mov
in
xor
xchg
pop
movsb
mov
out
push
xchg
into
daa
scas
stos
xchg
movsb
ucomiss
leave
push
xor
mov
jecxz
sti
ret
call
insl
stos
mov
pop
mov
cmc
jno
imul
inc
pop
cmp
push
mov
xor
idiv
inc
jecxz
test
ds
repnz
cmp
leave
fiadds
scas
pop
mov
xor
xor
and
in
loop
inc
pop
fidivl
push
jge
dec
dec
in
fistpl
jl
repz
mov
insb
or
addr16
fcoms
mov
and
mov
shrb
inc
insb
popf
pusha
filds
cli
test
inc
popl
jne
xchg
add
movsb
push
xchg
mov
sub
pop
jl
outsl
bound
mov
ljmp
add
bound
lods
jbe
loope
int
or
sub
mov
pop
mov
imul
jns
in
adc
adcl
orl
mov
movaps
movsb
pop
cmc
icebp
repz
mov
rcr
and
or
outsl
push
fwait
mov
arpl
inc
or
into
sub
repz
mov
lods
xchg
push
or
push
repnz
loop
cmc
mov
mov
xchg
test
cmp
inc
aas
jbe
int3
rcll
add
imul
scas
jmp
push
dec
pop
test
inc
adc
or
pop
jae
mov
jne
or
test
sbb
mov
enter
pop
or
adc
sti
lcall
and
rcrl
pop
scas
inc
xchg
sbb
call
inc
push
xchg
cltd
jle
fcmovnbe
mov
jo
mov
cmp
or
inc
xchg
mov
pop
jno
xchg
rolb
push
test
jge
sub
mov
jbe
repz
push
or
or
das
into
stc
jno
or
sbbb
sbb
iret
inc
int
sbb
cmp
and
mov
jb
fnstenv
pop
jnp
push
cli
ja
dec
pop
fucom
fcos
stos
hlt
or
push
cmp
aad
js
notb
push
push
add
dec
jl
faddp
hlt
fistpll
ss
je
sub
mov
push
je
xchg
and
cs
cmp
lcall
add
pop
aas
out
jb
ljmp
pop
xchg
push
pushf
inc
mov
push
dec
xchg
les
rol
pop
lret
adc
adc
add
jg
add
cmp
and
addb
stos
stc
and
in
add
pop
add
inc
dec
xchg
jp
xchg
jo
xor
lret
push
iret
ja
adc
fcoml
jo
mov
cmpb
lock
cmpsl
and
add
mov
xchg
lret
std
ror
loop
pop
daa
add
stos
adc
int
leave
mov
jl
cmc
mov
lahf
inc
leave
into
cltd
scas
mov
aad
mov
fimuls
neg
ds
ss
mov
xor
dec
jg
pop
cli
iret
mov
inc
enter
inc
cmp
dec
cmp
lahf
jmp
mov
jmp
or
add
in
sbb
jae
mov
xchg
dec
xor
push
daa
shlb
mov
je
mov
push
outsl
pop
scas
xor
mov
lret
icebp
sub
cld
das
push
loopne
xchg
mov
scas
sbb
xchg
adc
xor
mov
pop
cmp
pop
daa
mov
ljmp
test
aaa
arpl
imul
adc
inc
pop
lret
push
sbb
inc
es
push
mov
test
sub
xchg
leave
jp
scas
add
cmp
xchg
addr16
ss
xchg
ret
mov
insb
imul
cmp
out
push
lods
inc
movsb
hlt
pop
pop
sub
mov
push
cmp
pushl
add
test
sti
fs
add
mov
sbb
sbb
inc
scas
daa
dec
sub
test
or
and
inc
movsb
cmp
ds
cs
nop
adc
cmp
je
jbe
mov
jns
aam
inc
xchg
push
scas
dec
fisttps
jno
fwait
cmc
cmp
jbe
jnp
cli
and
inc
and
sti
mov
xchg
xchg
adc
xor
insl
std
add
aas
cmpsl
inc
insl
roll
xlat
stos
pop
inc
imul
and
sbb
push
sbb
ret
dec
rcrl
xchg
cli
iret
pop
sub
push
push
inc
push
scas
lcall
flds
add
mov
or
cmp
adc
push
fiadds
movsb
iret
int
and
loopne
pop
add
popf
inc
sub
mov
outsb
push
call
inc
push
pop
ss
and
iret
rolb
mov
ret
pop
cmp
data16
ja
dec
out
dec
push
sbb
js
cmp
adc
movsl
xor
xchg
lret
scas
xchg
out
mov
dec
mov
repz
out
dec
mov
insb
pop
pop
jmp
sub
mov
ret
mov
cwtl
pop
mov
jbe
fiadds
sti
addr16
cld
cli
mov
push
or
xlat
clc
sbb
mov
dec
or
fucomi
js
imull
push
xor
addr16
jbe
dec
cmp
gs
subb
pop
repz
sbb
mov
pop
roll
aas
jbe
nop
fcompl
pop
addl
test
push
jnp
or
mov
lods
adc
inc
jb
cwtl
mov
lods
mov
sub
xor
and
out
xchg
test
jbe
int3
roll
jg
xchg
es
mov
mov
rcrl
mov
fldcw
dec
mov
push
scas
pop
cmc
jns
push
pop
in
repz
pop
pop
jbe
ret
sub
fists
adc
sbb
out
mov
mov
out
xor
pop
jp
jecxz
mov
push
outsb
ret
in
lahf
cmpsl
enter
xor
sarl
sti
inc
and
jmp
stos
or
sub
adc
test
mov
lahf
mov
in
jns
xchg
sub
out
outsl
imul
das
iret
je,pn
cmp
or
das
cmp
js
xlat
sub
xorb
outsb
xor
ret
jp
and
inc
hlt
clc
jbe
insl
adc
or
out
cwtl
jnp
mov
mov
adc
icebp
mov
lods
pop
fisttpl
push
lret
jb
mov
aaa
or
addr16
fdiv
xchg
mov
jb
pop
dec
jns
rcr
or
cmpsb
movsb
aam
or
outsb
or
pop
in
xchg
push
cmp
je
pop
roll
das
xor
or
test
cli
lret
lea
aaa
mov
daa
or
fildll
jecxz
mov
je
jno
mov
mov
cld
mov
dec
mov
outsl
lret
inc
mov
icebp
fcomi
mov
push
inc
imul
pop
dec
cmpl
xor
jae
aas
movsl
iret
cmpsl
add
imul
pop
insl
lods
cmp
cwtl
push
cmc
in
and
mov
xchg
int3
mov
mov
in
pop
xor
loopne
dec
lret
gs
lret
inc
pop
jb
mov
xchg
aaa
mov
xchg
fcmovu
xor
cmp
fstps
sahf
jnp
push
mov
popf
adcl
cwtl
std
cmp
les
fidivl
loope
insl
inc
xor
imul
cltd
push
xchg
push
mov
xchg
jmp
fldenv
pop
mov
enter
icebp
sub
pop
push
and
bound
mov
int
nop
clc
ljmp
test
lret
or
sbb
popf
stos
leave
inc
cmp
push
and
js
stc
mov
push
push
insb
xchg
sbb
negl
mov
in
bound
insb
nop
pop
fdivrs
dec
icebp
sub
pusha
inc
mov
insb
and
sbb
cltd
ja
sub
inc
or
cmp
xor
into
xlat
dec
cs
in
xor
cwtl
aaa
enter
negl
and
xchg
stc
xchg
cltd
scas
nop
shlb
dec
push
fldl
jmp
popf
push
pop
mov
sub
bound
shll
add
daa
loope
and
push
aaa
cli
sbb
mov
cmp
inc
rolb
shrl
xchg
and
mov
popf
pop
sub
ja
stos
mov
pop
xor
pusha
inc
outsb
push
divb
inc
popf
add
in
pop
mov
rcll
mov
mov
add
dec
xor
shll
jns
mov
in
xchg
push
loopne
insb
jnp
adc
inc
ret
enter
fstp
ds
imul
jmp
adcb
lods
hlt
mov
inc
pusha
lcall
and
xor
cmp
fld
dec
mov
les
add
push
aad
sub
mov
push
jae
adc
sub
or
jp
xchg
fsub
loopne
ud2
mov
aad
insb
enter
fsubl
clc
arpl
subb
push
pop
push
xlat
mov
pop
stos
scas
leave
rcrb
jl
testb
aam
sbb
fildl
testl
call
sbb
sub
test
popf
pop
xor
jp
sarb
jl
cmpb
mov
add
dec
jmp
push
frstpm(287
outsl
adc
out
push
xchg
dec
outsl
push
pop
aam
or
test
mov
inc
roll
insb
shrb
mov
rcl
dec
sub
lds
inc
and
xchg
out
in
clc
outsl
adc
pop
mov
jl
rcrl
ds
out
aaa
sarb
jecxz
mov
xchg
jmp
leave
cld
cmpsl
mov
stos
movsl
cltd
shr
cmp
pop
fmuls
inc
lock
jno
jecxz
sarb
lret
fldcw
jmp
pop
lcall
jne
data16
sub
call
aam
xchg
sbb
cmpsb
dec
dec
xor
sub
jl
xchg
jle
fistpll
cltd
push
sub
ss
js
mov
leave
sub
cld
stos
dec
sub
movsl
and
adc
mov
and
inc
fcmovne
sbb
xchg
add
cmp
fs
fdivrs
xchg
rolb
ret
sbbl
hlt
nopl
and
sub
push
fimull
xor
xchg
scas
movsl
pushf
inc
lahf
adc
mov
sbb
xchg
xchg
roll
clc
pop
push
imul
aaa
iret
icebp
sbb
sbb
pop
push
lret
cwtl
popf
test
leave
xchg
mov
fs
pop
mov
ds
loope
movsl
enter
dec
cmp
adc
dec
cmp
js
xchg
dec
test
xor
inc
lock
icebp
insl
cld
loop
call
int
pop
in
enter
cmpsl
das
cmp
or
mov
rolb
test
pop
add
data16
lahf
mov
loope
aam
mov
mov
push
leave
out
inc
xchg
in
les
sahf
or
sub
filds
out
dec
mov
add
outsl
mov
fisubl
scas
xchg
mov
mov
aad
mov
test
repnz
xlat
pop
daa
les
mov
and
mov
xchg
jle
adc
sarl
jge
xchg
fwait
rcrl
xchg
mov
mov
int
pop
jo
in
sub
add
daa
xor
icebp
ret
lret
data16
mov
test
mov
shll
sahf
movsl
mov
lret
mov
out
dec
mov
sti
out
jge
mov
es
adc
test
push
aam
or
movsb
andb
adc
movsl
xorl
dec
cmp
cmp
mov
cmp
sub
or
adc
loope
push
dec
and
fwait
mov
fbstp
mulb
xchg
mov
arpl
mov
pusha
fsub
xchg
mov
adc
jno
les
faddp
mov
lock
cpuid
xchg
pusha
mov
sbb
lahf
push
cmp
in
movsl
and
cmp
iret
mov
shlb
pop
push
je
mov
cmc
dec
pop
popa
add
shlb
fistpl
adc
imul
jmp
and
in
and
lods
push
test
ret
cmp
cli
sbb
xchg
je
sbb
add
sbb
pop
out
mov
mov
xor
xchg
mov
fdivr
out
pop
or
add
push
fsubp
jg
cmpsb
and
mov
lcall
add
sub
sbb
jbe
adc
or
dec
in
add
lcall
clc
scas
ret
push
insl
and
je
fs
dec
jecxz
jno
adc
adc
mov
shll
mov
dec
mov
mov
cmp
push
aad
push
ficomps
mov
mov
push
add
dec
jecxz
int3
mov
rolb
and
xor
pop
pop
outsb
mov
adc
es
dec
cmp
cli
push
arpl
stos
lods
mov
cmp
sub
lods
jb
out
cmp
movsb
stos
xchg
inc
xchg
cmp
push
insl
inc
je
fsubrs
push
call
scas
lock
pushf
add
test
sbb
jae
outsb
icebp
ljmp
jnp
stc
xor
dec
sbb
cli
jae
jg
mov
ret
xchg
ja
cmpsl
and
mov
std
sub
loopne
loop
in
cmp
sub
cmpsl
cmp
adc
xchg
pop
jnp
dec
movsb
and
lcall
add
adc
outsl
jns
bound
pusha
push
cmp
or
cwtl
sti
scas
test
xor
add
iret
pushf
mov
loopne,pn
popf
loope
jo
dec
jae
and
js
fldt
sbb
jbe
adc
pop
mov
or
mov
sub
and
sub
aad
out
addl
cli
test
ljmp
lods
mov
mov
fadds
daa
in
mov
push
hlt
shll
push
xchg
inc
add
pop
mov
ljmp
mov
out
bound
daa
pop
adc
test
add
jmp
adc
bound
add
push
mov
mov
lret
adc
aam
lfs
cwtl
in
fcmovbe
loope
enter
xchg
xchg
repnz
ss
add
ss
sub
loopne
jne
arpl
mov
out
pop
rclb
imul
mov
xchg
js
xor
add
inc
fistpll
je
cmp
sub
insb
pop
loop
pop
out
out
pop
or
cld
adcl
ret
inc
out
bound
in
loopne
std
fsubrs
xor
int
push
add
fstpt
xor
dec
lcall
imul
mov
ljmp
jmp
test
shlb
test
je
int
leave
pop
mov
stos
jno
dec
jb
nop
push
lret
es
dec
lds
leave
jle
shll
cli
dec
bound
stos
movsl
inc
dec
pop
mov
cmc
dec
push
mov
mov
in
scas
outsb
mov
lods
repz
mov
out
sarl
xchg
cmc
fildll
out
ret
cmp
test
push
das
mov
sbb
push
sahf
int3
dec
out
push
div
cltd
lahf
jp
cs
test
scas
mov
fnstcw
mov
dec
loope
cli
ja
sub
mov
in
ret
imul
mov
sarl
adc
fimuls
out
loop
mov
bound
arpl
notb
mulb
mov
ret
insl
cwtl
mov
xchg
cwtl
mov
cmpsl
imull
fcmovnbe
jb
jp
in
xor
clc
outsb
or
mov
xor
dec
xor
mov
dec
and
ficoms
test
ss
cmp
inc
dec
movsb
and
test
xchg
lahf
pop
insl
pop
fdivrs
movsl
insl
dec
dec
ret
jecxz
fisubl
cltd
mov
subb
sbb
xchg
out
pop
sahf
ja
testl
cmpsb
adc
outsb
test
mov
je
push
pop
dec
sahf
mov
sbb
test
dec
fisttpl
cmp
mov
push
mov
lods
add
add
arpl
les
mov
add
mov
stc
sbb
cmp
rcl
xchg
es
mov
jle
sbb
popf
push
fimuls
into
or
mov
ficoms
les
push
cwtl
and
loope
cmp
test
xlat
lds
dec
nop
out
jne
mov
mov
cmp
cmp
inc
add
cs
fldenv
stos
out
jns
in
push
lds
or
pop
xchg
addb
cli
pop
idivb
mov
xorl
push
jmp
test
fldpi
bnd
fsubl
dec
mov
xchg
xor
push
add
inc
or
push
push
mov
popf
pop
lods
insb
sti
cmp
push
sub
lahf
xchg
push
or
lock
fstps
into
popf
sub
ret
lret
jge
aam
push
sub
jbe
push
and
ljmp
or
int
test
sub
jmp
inc
pop
lcall
sbb
pop
jb
sbb
sahf
push
mov
mov
pop
or
adc
jg
imul
stos
or
mov
wbinvd
push
pop
cmp
mov
in
mov
add
lsl
xchg
sub
jb
in
orl
in
mov
cmp
loopne
push
mov
cmc
and
dec
inc
and
or
mov
inc
test
adc
pop
lds
ljmp
enter
dec
fwait
sbb
xchg
pop
pop
xor
mov
inc
jle
jnp
std
or
push
pop
jae
adc
inc
scas
stos
xchg
nop
jae
fistl
and
test
iret
add
dec
add
mov
mov
jbe
cmpsb
in
cmp
pop
stc
and
arpl
jno
lea
cmp
out
inc
mov
push
mov
push
pop
mov
dec
adc
and
subb
mov
loop
or
mov
cmpsb
movsl
pop
wrmsr
jne
cmp
inc
add
inc
das
divl
xchg
movsl
inc
xchg
adc
xlat
fcomp
leave
cmp
sub
sbb
add
dec
mov
or
adc
sbb
jne
and
cs
aaa
stc
mov
faddp
sub
enter
pop
fdiv
jle
pop
fwait
push
lret
or
push
jmp
test
leave
neg
cmpb
inc
cmc
test
push
fildll
int3
into
jo
ljmp
lods
clc
push
and
outsl
jl
xor
add
lds
cmpl
incb
ss
lcall
bnd
xchg
outsl
push
movsb
xchg
mull
cmc
jbe
push
aam
aam
add
push
bound
xor
push
pop
mulb
and
xchg
enter
dec
mov
mov
test
pop
jle
pop
mov
ljmp
sbb
stos
xor
lods
jo
xchg
xchg
popa
imul
mov
inc
pop
pop
clc
lds
mov
sbbb
xchg
lods
sbb
or
and
jae
mov
xor
sbb
dec
js
icebp
push
mov
mov
jo
sub
xchg
cmc
push
pusha
and
cmp
jnp
inc
aam
popf
or
xchg
dec
inc
int3
rorl
arpl
std
js
les
push
or
insl
out
dec
mov
mov
leave
pop
sub
lds
fcmovne
mov
push
dec
int
xor
xchg
out
into
or
notl
stos
movsl
pop
les
into
cmp
loopne
les
or
pop
rorl
aam
xor
pop
xor
sub
push
xchg
xor
mov
test
push
repz
pop
in
notl
mov
adc
sarl
scas
push
or
cmp
test
sub
aaa
push
sbb
stos
jns
push
cmc
jmp
adc
iret
test
xor
add
jnp
out
aam
xlat
testl
xchg
jge
arpl
jne
test
fldt
xor
xchg
jbe
lret
inc
lods
scas
adc
pop
sub
lahf
arpl
xor
xchg
mov
jp
in
lcall
mov
and
fistpll
popa
inc
daa
jb
dec
inc
icebp
addr16
push
scas
insb
aaa
xor
sub
repnz
cld
xor
mov
insl
push
xor
stc
popf
jg
icebp
mov
imul
and
xchg
mov
pop
nop
icebp
repz
mov
mov
push
adc
std
scas
leave
mov
or
fbld
mov
push
stos
xchg
cld
or
mov
sub
lods
cltd
sub
mov
push
dec
into
fwait
add
cwtl
call
leave
or
fmulp
cmp
in
adc
adc
xor
incl
mov
push
aam
in
xchg
sbb
mov
mov
xchg
sub
jl
int
or
subb
and
sub
jle
xor
push
gs
cmp
adc
loopne
outsl
ja
cmp
rclb
pop
adc
sub
clc
mov
xor
out
ljmp
add
fsts
add
sbb
push
popa
xchg
push
push
mov
jb
fsubrl
and
lock
ds
inc
and
adc
insl
scas
das
enter
test
xchg
fs
ss
lret
push
fldl
jae
and
pop
popf
insb
fsub
xchg
mov
jae
clc
imul
repz
cli
xlat
pushf
xchg
pusha
and
test
and
cmp
data16
xor
fsubr
pop
subl
shlb
mov
sarl
mov
test
stc
cmpsl
push
cmpsb
aad
mov
loopne
flds
es
out
and
adc
xchg
inc
xor
or
and
leave
mov
or
jo
mov
out
jl
ret
fisubrl
outsb
jle
xor
aad
and
jecxz
stos
nop
in
and
push
pop
jle
lods
xchg
leave
or
mov
fs
leave
xor
xor
addr16
in
xchg
mov
int
sub
or
mov
sbb
outsb
or
xor
das
sub
and
cmp
xchg
xlat
mov
adc
jbe
sub
movsl
rorb
xor
jge
xlat
mov
mov
ljmp
add
or
ss
adc
sahf
sbb
divl
lods
addr16
pop
mov
mov
outsl
andb
ret
aas
add
jnp
shr
bound
dec
scas
insb
fucomip
or
adc
aad
sar
cmp
loopne
shll
mov
dec
push
sub
andb
sbb
mov
inc
adc
xchg
outsl
in
insb
das
xor
aaa
xor
fbld
icebp
cwtl
dec
fwait
or
lcall
sbb
cmp
repnz
jns
fst
jmp
mov
lods
inc
scas
cs
outsl
shr
and
mov
clc
scas
jae
xor
sbb
nopl
movsb
or
aam
popf
test
mov
pop
test
pop
jnp
test
movsb
mov
lea
inc
jo
sbb
mov
bound
call
fmuls
rep
inc
je
sub
sarl
mov
lods
lds
rorl
xchg
loope
dec
jmp
movsl
adc
jo
jo
aas
ror
pushf
pushf
hlt
dec
mov
adc
mov
lahf
lahf
sbb
mov
pop
fcomps
test
jl
mov
xchg
xor
outsl
add
incb
movsl
mov
shlb
orb
les
mov
pusha
jmp
cmpsl
test
push
xor
pop
cwtl
dec
aas
pop
clc
insl
xor
mov
jp
popa
or
dec
jle
mov
cmpsl
sbb
sti
arpl
xor
inc
pop
and
fistl
imul
fisubrs
and
bound
mov
ja
fistl
xor
xchg
in
addr16
outsl
push
mov
xor
enter
inc
lea
std
cwtl
ss
test
mov
gs
cmpb
mov
jae
push
push
movsb
sbb
inc
adc
gs
mov
cwtl
sbb
add
dec
rclb
xchg
clc
and
lods
andl
mov
pusha
dec
push
jg
repz
dec
adc
js
or
mov
fmull
mov
lods
es
jg
dec
mov
in
pusha
lcall
iret
inc
xchg
xchg
push
xor
mov
or
inc
pusha
mov
jle
iret
and
mov
das
pop
jg
addb
xlat
rclb
mov
std
imull
add
repnz
aam
sahf
mov
insb
int
in
ret
mov
sbb
les
push
or
xor
icebp
adc
int3
insb
or
nop
popa
xchg
pop
pushf
fbld
jmp
imull
xchg
stos
mov
jae
jge
mov
adc
lret
test
lcall
clc
ss
jbe
imul
lea
inc
mov
call
rcr
orps
pop
scas
in
cmp
or
or
es
pop
or
pop
pop
xor
fidivs
imul
test
push
pop
and
add
test
cmpsb
jge
push
mov
pop
cmp
jp
lret
inc
push
cmpl
das
jge
pop
cmpsl
cmc
and
xor
into
in
dec
adc
pop
js
sbb
cmpsb
and
sub
dec
adc
mov
fdivs
inc
xor
aad
nop
js
ret
push
mov
jecxz
lods
adc
lret
popf
xlat
int3
and
mov
xchg
inc
into
sbb
mov
sbb
pop
push
jo
lea
pop
ret
jno
dec
xlat
mov
jg
jg
mov
pop
jp
sti
cmpsl
xor
or
inc
mov
pusha
aam
movsb
test
insb
dec
bound
int3
and
or
psrad
pop
sbb
mov
or
mov
bnd
orb
and
js
enter
movsl
scas
inc
clc
decl
les
dec
pusha
xor
xchg
movsb
dec
repz
mov
scas
cmp
mov
rolb
mov
xor
mov
shlb
push
dec
mov
pop
into
jno
cmp
jnp
sbb
mov
and
adc
dec
int
ret
lahf
inc
jb
pushf
int
pop
sbb
adc
ds
push
fldl
in
into
pop
xchg
dec
inc
inc
inc
cmp
push
jmp
lahf
cmp
mov
jo
xor
dec
jle
jns
in
xchg
clc
mov
sub
outsb
sub
cmp
mov
mov
inc
mov
sbb
lcall
pop
out
lahf
sbbl
or
add
jbe
sub
cli
pushf
mov
iret
or
es
add
enter
sbb
xchg
repz
imul
mov
mov
inc
lock
push
out
aas
mov
test
pop
mov
adc
stos
insl
leave
das
and
subl
into
mov
and
idivb
mov
mov
cwtl
jns
push
push
cmp
cli
sbb
shr
call
sub
dec
repnz
xor
adc
sbb
xor
cmp
adc
dec
sbb
jp
popf
mov
cli
scas
jle
test
lock
xchg
xchg
mov
push
cmc
dec
mov
cvtps2pi
dec
mov
or
jmp
add
mov
roll
stos
xlat
xchg
loopne
fwait
xor
adc
sbb
dec
xor
push
fsincos
cmp
lea
inc
out
sbb
sub
lcall
cmp
xor
cmp
or
inc
push
jno
stos
or
add
mov
cmpsl
mov
xor
sbb
mov
dec
ja
in
xchg
dec
inc
adc
scas
int3
and
pop
sbb
sti
das
fbstp
shl
cmp
or
in
jne
xlat
cmp
and
sub
adc
mov
pop
mov
xor
sub
shlb
into
pop
sbb
jae
icebp
cmp
mov
fs
pop
stos
inc
cmpsb
cmp
jne
je
repnz
sub
test
cs
dec
jmp
fidivs
mov
std
mov
test
mov
enter
pop
iret
jno
arpl
lods
ficompl
jno
fs
repz
ficoml
gs
xchg
out
sahf
fdivl
mov
and
int3
inc
in
cli
xchg
adc
jbe
imul
loopne
sub
mov
fdivrl
subl
xor
cmp
or
pop
pop
pop
test
inc
loope
xor
das
rcll
jae
mov
and
lret
dec
aad
scas
cmp
test
jns
push
xor
fisubs
push
inc
ret
orl
leave
fiadds
mov
adc
out
and
iret
arpl
in
aad
xchg
rclb
or
fcmovnu
dec
and
add
call
ja
scas
push
imul
sub
jl
test
rcrb
cmpl
andl
test
scas
push
xchg
sti
test
shrl
push
inc
mov
mov
call
out
rclb
inc
loopne
mov
push
sahf
out
add
aad
popa
fdivl
push
fwait
mov
mov
ret
dec
mov
mov
cli
movl
and
jb
pop
mov
push
lahf
jae
stos
movsb
mov
fwait
xor
xchg
cltd
clc
mov
dec
add
out
cld
xlat
push
push
inc
ja
lods
and
lcall
fucom
cmpb
xor
dec
dec
dec
hlt
cmpsl
lahf
leave
push
lcall
sub
sbb
jle
repnz
out
adc
fisttpl
testb
loop
inc
mov
and
cmpl
fdivrp
xchg
mov
push
lods
enter
lret
popf
jbe
in
or
pop
add
insl
lods
sbb
lock
lahf
das
and
add
loope
sub
bound
movsb
cmp
jns
mov
mov
std
shl
push
mov
in
xor
jne
js
push
addb
mov
test
enter
adc
sub
or
add
rcl
or
cmp
jmp
and
dec
adcl
and
fs
call
frstor
int
stos
mov
loop
mov
dec
std
es
jg
lret
es
push
enter
das
dec
xor
dec
repnz
cmpsb
mov
notl
mov
cmp
test
fidivl
dec
adc
js
jb
sti
dec
lahf
fs
or
pushf
fxch
sub
or
mov
outsb
sbb
push
gs
mov
sbb
notl
jne
lcall
test
js
xor
out
loopne
leave
je
lcall
mov
je
inc
out
xchg
or
divl
xchg
addr16
jae
jns
jbe
mov
mov
mov
insl
mov
fcomps
sub
test
aad
or
jmp
inc
js
dec
fcmovb
jbe
xchg
or
enter
push
lock
je
xchg
jecxz
xchg
dec
adc
xor
xor
stos
test
sub
xchg
pop
lcall
lods
mov
fistps
lcall
bound
jns
mov
insl
movsl
dec
xchg
push
movsl
inc
mov
outsl
roll
adc
add
sbb
scas
call
mov
pop
or
jmp
push
mov
add
inc
push
shr
cmp
loope
adc
fsubrl
enter
sar
movsl
test
notl
mov
mov
mov
push
lea
sbb
js
sbb
and
pop
cld
fistpll
mov
aaa
insl
enter
lahf
inc
ds
mov
stos
cmp
bound
jno
int3
add
xchg
add
lods
iret
and
lret
mov
notl
popf
push
sbb
in
out
pop
into
fstl
mov
int3
push
scas
xor
out
dec
mov
ja
xlat
insl
pop
push
and
repz
lods
mov
in
add
popl
and
inc
sti
mov
pusha
pop
je
mov
sub
popf
lret
sub
lds
mov
cmp
loopne
inc
ljmp
loopne
mov
mov
or
loop
dec
leave
or
ja
adcl
out
cmpsb
aad
mov
sub
out
lahf
pusha
popf
push
std
jbe
dec
inc
and
sub
repz
shrl
dec
cmc
mov
es
loopne
sbb
jno
inc
add
cmp
sub
sbb
jbe
in
outsb
fs
mov
mov
lods
dec
inc
dec
pop
jo
or
push
and
testb
xchg
add
mov
jge
sarb
out
push
lret
mov
xor
in
lods
adc
sbbl
sub
jno
idivb
dec
imul
mov
loop
cmpsb
inc
lahf
adc
mov
imul
cmp
in
ret
adc
int3
inc
ss
stos
add
mov
cld
push
jae
mov
ret
dec
mov
or
dec
aad
inc
call
sbb
mov
adc
notb
fwait
int
xchg
nop
daa
mov
mov
out
sub
cld
daa
xchg
dec
out
xor
cltd
shll
in
lea
mov
fwait
psadbw
dec
sbb
cmp
mov
lock
add
aam
inc
mov
lods
adc
sti
add
in
sbb
lahf
xchg
mov
movsb
stos
dec
mov
adc
aad
rcll
fisttpll
jl
sbb
and
xchg
pop
fwait
xor
mov
jno
xor
stos
push
lea
insb
test
sub
out
lds
imul
stos
sbb
pop
xchg
movsb
test
inc
adc
mov
sbb
into
sub
pop
jne
das
cmp
push
and
jb
aaa
fmuls
mov
loope
mov
outsl
aaa
daa
std
or
daa
cmp
push
data16
push
jp
push
js
lea
dec
cmp
pop
lret
cmp
testb
jp
or
push
dec
push
mov
pop
std
dec
das
in
js
sbb
dec
dec
in
mov
push
leave
arpl
loopne
fs
jb
mov
mov
fdiv
inc
dec
jbe
mov
lcall
sti
in
mulb
cmp
cmp
pop
jae
sbb
shlb
cli
sub
push
iret
add
or
ljmp
jne
jbe
mov
lahf
into
and
dec
and
adc
mulb
test
and
push
cmp
fisttpl
pushf
dec
push
jl
jge
ljmp
cmpsl
jp
sbb
in
test
out
jnp
sub
cs
xorb
loopne
push
scas
nopl
cmp
aas
xchg
call
test
push
xchg
loop
pushf
mov
sub
cld
adcb
xchg
jne
and
loopne
push
cld
fwait
imul
gs
ss
in
xchg
pslld
xor
or
sahf
pop
cli
xchg
sti
xchg
jge
sahf
xchg
or
enter
repz
inc
cmp
pop
jnp
pop
cmp
sbb
arpl
or
dec
mov
es
add
dec
in
into
in
lret
jmp
sub
add
xchg
lods
insl
lock
in
add
jnp
sbb
loope
pop
cmp
aas
sub
dec
xor
cmpsb
shlb
jnp
in
lods
or
cli
incl
pop
lcall
fidivl
push
je
icebp
mov
and
outsl
inc
jae
fs
cwtl
mov
in
sbb
xchg
or
hlt
faddl
or
mov
pop
je
push
cli
fidivrl
stos
leave
sub
fmulp
iret
mov
fwait
cwtl
gs
stc
sbb
in
add
rcll
jbe
push
or
insl
in
sbb
lock
xor
mov
insb
outsb
push
sub
xor
xchg
sub
into
inc
xchg
arpl
push
dec
or
add
jo
cmp
sbb
fmuls
loopne
out
adc
or
imul
andb
popa
push
movsl
jae
mulb
les
jle
js
or
aam
scas
inc
pushf
fs
pusha
xor
xchg
fsts
xchg
or
mov
cwtl
lea
out
fnsave
xor
les
sub
dec
mov
stos
rorb
adcl
loopne
outsl
js
or
and
cld
ss
pop
mov
pop
test
push
and
adc
shl
sbb
or
add
fistpll
cmp
and
mov
imul
xlat
cli
xchg
fidivs
divl
stos
lcall
in
les
mov
das
out
rcrb
inc
loopne
fistps
jge
std
enter
push
xchg
mov
hlt
mov
aad
repnz
jbe
mov
dec
pop
push
aas
or
bound
insl
inc
mov
cmp
lahf
sbb
sbb
push
or
rolb
lods
nop
mov
aaa
push
lods
jl
rcl
sub
leave
pop
js
adc
arpl
mov
cli
insl
push
mov
popf
xlat
mov
cmp
jnp
xchg
rcrb
mov
test
lret
pop
cmpsl
jge
inc
scas
sbb
stos
jecxz
lret
in
out
mov
leave
aad
ret
pop
idivb
add
hlt
pop
pop
iret
mov
adc
push
sahf
jo
in
adc
push
push
mov
push
sbb
adc
pop
popa
sub
dec
pop
mov
inc
sbb
sub
insl
sub
in
jge
or
dec
inc
aas
mov
and
idivb
adc
js,pn
inc
mov
cmpsl
adc
push
imul
push
rolb
inc
pushf
pop
lds
adcl
inc
fsubr
aas
ds
jnp
and
test
xchg
jmp
sarb
jecxz
aas
xor
fbld
mov
add
pop
inc
stc
imull
insl
inc
adcb
jnp
push
xchg
jmp
mov
sti
push
fnstcw
sub
push
stc
adc
or
mov
xor
out
xor
pop
cmpl
inc
or
mov
aas
scas
addl
xchg
js
or
xor
add
mov
cmpsl
es
jecxz
inc
bound
adc
test
in
push
cltd
push
adc
test
dec
sub
or
push
cmpsl
imul
cmpb
std
movsl
leave
repz
xlat
rclb
sub
adc
dec
and
adc
mov
fisubrs
imul
addr16
sbb
test
aaa
xchg
pop
cmp
xorb
into
xor
or
call
pop
shl
pop
scas
push
sub
jl
xchg
sti
mov
jbe
test
jecxz
arpl
addb
in
int
lret
mov
cmp
cld
mov
dec
sbb
mov
push
icebp
mov
push
in
dec
jp
lret
ficomps
jmp
pop
sub
and
cmp
pop
fiaddl
hlt
lcall
mov
mov
jnp
and
mov
outsb
sahf
and
nop
inc
fsts
dec
pop
insb
mov
push
pop
andb
lahf
xchg
jno
jle
adc
sub
lcall
push
out
dec
pop
imul
dec
jecxz
inc
adc
rorb
mov
rolb
cli
fiaddl
mov
lret
xchg
xchg
cmp
data16
mov
and
adc
lret
xchg
out
repz
adc
test
mov
and
push
xor
sub
fs
scas
inc
shrb
sbb
sub
test
push
inc
xlat
mov
lods
pop
push
loope
mov
rolb
mov
and
ds
sub
je
out
sbb
mov
shr
and
aam
adc
or
ret
lock
dec
xor
andb
ret
movsl
insl
es
int3
negb
outsl
in
push
dec
test
add
loope
add
jo
enter
xor
call
jle
mov
add
cmpl
lret
xchg
sub
insl
cmp
sbb
pop
sbb
data16
movsb
mov
mov
add
pop
lret
insl
xlat
lahf
mov
nop
fstpl
bnd
jl
push
pushf
xchg
push
xchg
mov
inc
mov
testb
adc
mov
mov
jb
xlat
mov
je
scas
popf
pop
aas
movsl
or
pushf
cmpsb
xor
and
pop
xor
sub
pop
test
mov
bnd
lret
daa
cmova
xor
mov
or
xor
pop
shl
out
sbb
nop
sbb
mov
sahf
push
arpl
ja
xor
int3
mov
inc
inc
call
mov
mov
lahf
imul
mov
out
xor
subl
inc
dec
jge
lret
or
inc
or
mov
xchg
stos
in
lahf
mov
fldt
pop
ss
unpckhps
sti
popa
pop
pop
xchg
out
xor
popl
sub
mov
mov
divl
ja
inc
lcall
push
decb
subl
pusha
fdivrl
sbb
insl
add
cmp
pop
lahf
jp
mov
mov
and
push
xchg
imul
les
fimuls
inc
addr16
shll
jl
popa
push
loop
add
loopne
mov
xchg
cmpsb
fisubl
iret
enter
cmp
jp
popa
popa
ds
sub
cmp
aas
test
ja
dec
cmp
gs
pop
sti
push
pop
popa
mov
in
loope
inc
andl
mov
shll
ja
and
jmp
adc
std
fcoml
das
push
test
and
mov
cli
pushw
outsb
cmp
sub
fs
rcrb
cmp
sub
shlb
pop
sbb
pop
shlb
sub
cmc
push
and
mov
pop
sbb
and
icebp
cmpsl
pop
outsb
push
push
cld
mov
xchg
cli
push
dec
mov
sbb
test
lret
cli
fdivrs
pop
pop
icebp
scas
jp
mov
fadd
orl
mov
repnz
inc
subl
jp
outsl
je
out
dec
push
push
pop
std
es
mov
test
xor
ss
imul
lret
pop
xor
pop
cmpsl
mov
ret
xor
and
je
xchg
bound
lret
stos
cmc
outsw
lea
test
lods
lret
testb
or
pop
pop
enter
imul
xor
sbb
jns
jnp
mov
mov
rcll
and
push
addl
cmc
sub
dec
push
repnz
push
push
movb
cs
xchg
mov
mov
fildll
push
cwtl
cmpsl
adc
or
or
pop
pop
adc
repnz
es
movsl
cmp
test
fistpll
mov
pop
push
dec
leave
dec
lret
outsb
addr16
inc
ret
xchg
inc
xchg
pop
in
sub
jns
dec
rep
aas
inc
popa
sub
fwait
pop
mov
inc
lcall
iret
mov
sbb
bound
jge
sti
jno
dec
sub
into
sbb
push
in
adc
inc
cltd
lods
jb
cmp
aad
mov
lods
mov
sbb
push
loopne
lds
jle
xchg
pop
xor
mov
addr16
ficoml
je
add
jl
jg
fs
popf
or
sarl
mov
jg
in
stos
lock
dec
cmp
inc
shll
fcoms
jb
dec
call
jo
les
lret
pop
aad
data16
mov
dec
push
cmp
jne
js
add
inc
adc
fimull
pop
xor
push
mov
push
dec
push
popa
shrl
xor
sub
cmp
and
ds
add
leave
dec
std
xlat
xor
mov
es
pop
fdivl
int
ret
xchg
lahf
addb
pop
sub
dec
xchg
leave
pop
es
aas
ja
je
adc
push
mov
test
js
mov
or
mov
lds
fcompl
outsl
xor
xchg
pop
data16
out
shrl
mov
mov
push
in
or
pusha
cmp
popa
jno
cwtl
inc
shl
mov
mov
or
sub
mov
push
xor
lret
xchg
dec
cltd
stos
stc
lahf
cmp
mov
es
je
sub
jmp
mov
sahf
inc
and
cwtl
xor
lds
incl
cs
and
adc
mov
pop
test
pop
fucomp
push
mov
mov
cs
cld
xchg
ret
xchg
adc
psubd
jl
ret
pop
xor
cmp
test
adc
adc
lahf
test
pushf
mov
inc
mov
iret
repz
and
inc
mov
lds
fstpt
dec
sub
leave
in
xlat
dec
fwait
mov
mov
mov
and
out
add
popa
add
out
mov
mov
push
mov
inc
lock
mov
push
inc
iret
das
mov
mov
pop
dec
fiadds
std
add
pop
fistpll
fdiv
cmp
push
es
mov
and
shll
add
sti
andb
xor
fsts
mov
dec
inc
decl
pop
sbb
cmc
xlat
adc
mov
loop
add
inc
jg
add
jo
pop
xor
aam
iret
jle
jmp
dec
outsb
sbb
fwait
cmp
popa
xor
dec
jmp
popf
iret
mov
mov
mov
push
mov
sub
lods
adc
mov
fmul
inc
jne
outsb
test
jp
lcall
jnp
jne
aaa
lret
push
pop
sbb
cmpsb
in
xor
pop
sub
arpl
mov
or
mov
sub
nop
push
sub
inc
jnp
loop
xor
adc
sarb
xchg
loop
lds
sub
cmp
dec
int
xor
add
mov
pop
add
cmp
dec
inc
fs
repnz
and
sbb
call
and
fisubrs
pop
pop
inc
add
jg
lods
sub
xchg
adc
sbbl
cld
data16
icebp
shrb
sbb
jge
repz
mov
or
sub
stc
imul
mov
pop
in
push
ja
fs
pop
dec
push
mov
fst
hlt
das
sub
iret
mov
cmp
movsb
pop
lds
mov
idivb
dec
pop
push
xlat
push
aam
test
xlat
in
fsub
mov
add
xor
fwait
inc
mov
add
or
lret
pop
fbstp
data16
shr
xor
pop
pusha
inc
xchg
xor
add
ret
sti
lahf
and
jne
daa
dec
fistpl
pop
aad
dec
push
popa
xor
sub
int
std
jl
fisubrl
cld
scas
push
mov
sahf
adc
xchg
ja
inc
outsl
cwtl
popa
jns
mov
mov
jns
adc
in
adc
mov
adc
mov
add
jmp
mov
inc
test
ljmp
mov
dec
loope
pop
sub
inc
mov
lock
jo
fisubrl
sub
rcr
aad
icebp
inc
insb
cld
pop
ja
enter
lods
jle
sub
mov
imul
mov
mov
mov
or
jmp
ljmp
cmp
ret
mov
mov
cld
jl
test
cmpl
or
cld
dec
push
jge
negl
les
nop
pop
mov
cwtl
inc
movsl
dec
mov
in
jnp
repz
pop
test
imulb
or
lods
sbb
lods
dec
repnz
pop
xor
les
pop
fidivs
push
dec
add
int3
scas
sbb
test
push
mov
jns
mov
inc
cs
push
aad
mov
test
sbb
in
nop
pop
xchg
add
sub
lret
js
xor
scas
lods
ret
or
out
mov
xor
sub
je
pop
inc
aam
sbb
popf
pop
pop
aaa
pop
stos
in
jge
mov
push
xor
stc
sbb
imul
xor
sbbb
mov
pop
cmpsl
sbb
sub
inc
push
in
pop
xchg
push
pop
add
jnp
aaa
mov
push
pop
dec
push
insl
int
inc
mov
add
cwtl
es
sub
mov
clc
add
adcl
roll
add
inc
out
cmp
shlb
mov
out
dec
sbb
gs
mov
jbe
xchg
mov
sbb
in
dec
in
andb
stos
gs
jne
jle
pusha
fs
xlat
icebp
mov
nop
sub
scas
les
daa
adc
adc
mov
xor
push
iret
mov
ss
inc
sbb
adc
lds
sbb
bound
push
cmpl
scas
popa
movsb
pop
push
mov
aam
ss
rcrb
test
dec
out
mov
sub
pop
or
and
rolb
inc
pushl
inc
shlb
xchg
cmc
dec
pop
or
mov
stos
fadds
cmp
mov
test
lcall
out
out
js,pn
inc
cmpsb
out
hlt
sbb
add
adc
inc
xor
adc
mov
xchg
xchg
mov
mov
repz
imul
lds
xchg
jl
rorb
pop
movsb
jne
push
pusha
xchg
out
dec
cmp
fiadds
fldenv
mov
icebp
xchg
xchg
pop
pop
or
idivb
hlt
aas
sub
aam
mov
repz
daa
or
negb
outsl
fldln2
xor
divb
movsl
mov
ss
outsl
mov
jae
call
popf
inc
add
push
pop
imul
push
jmp
in
and
cs
or
adcl
inc
jae
inc
mov
xlat
and
push
mov
movsl
jle
jbe
pop
and
cld
lds
or
inc
pop
mov
xlat
lret
and
inc
and
mov
pop
dec
adc
in
push
push
mov
and
xor
push
adc
sub
loop
enter
push
clc
dec
fldt
hlt
mov
pop
loop
sub
inc
jle
int3
sbbl
pop
push
ds
cmp
pop
hlt
das
dec
sbb
test
push
xchg
adc
pop
jl
and
push
lock
hlt
dec
int3
sbb
fstps
inc
addr16
les
out
pop
in
dec
dec
cld
clc
xor
push
mov
push
pusha
or
fsubr
inc
mov
rcrb
mov
xor
mov
ljmp
cltd
cmpsb
add
cmpsl
mov
xor
adc
loopne
add
std
or
popf
dec
dec
arpl
adc
jb
and
xchg
jg
sub
std
cltd
inc
adc
out
incl
push
sbb
mov
lcall
mov
iret
dec
sbb
mov
inc
pop
daa
mov
cmp
mov
mov
pop
cs
mov
sub
out
xchg
pop
or
mov
icebp
andb
cmp
adc
xchg
fildl
fcoms
adc
int
pop
mov
or
inc
pop
pmaxsw
lock
fidivrs
cmp
movsl
aaa
pavgb
mov
mul
or
pop
dec
sarl
dec
inc
mov
test
mov
xchg
mov
jge
mov
inc
jns
mov
lock
cmp
ret
and
dec
jno
inc
mov
test
cs
cmc
imul
dec
lock
push
lock
mov
sub
outsb
jo
pop
push
mov
pop
mov
movl
lahf
mov
cmp
xchg
ja
jg
in
inc
test
cmpb
out
out
cwtl
ret
or
sbb
jg
out
push
lcall
adc
dec
es
stos
pop
jl
pop
xcrypt-ofb
cmpsl
push
sti
mov
push
mulb
shrl
loop
cmpsb
add
test
mov
jb
sahf
sbb
push
inc
xchg
in
mov
cmp
negl
sbb
sub
clc
rol
mov
outsb
pop
mov
inc
jbe
icebp
sbb
mov
add
mov
jge
mov
mov
sbb
jne
leave
jbe
and
movsb
sub
je
mov
mov
and
js
sarb
jne
out
imul
iret
jl
sbb
popf
inc
xchg
mov
fildl
fs
fsubrs
or
shll
je
mov
or
aam
or
adc
lods
mov
mov
fwait
sub
sub
jo
pop
adc
lods
scas
cmp
lock
loop,pt
ja
imul
outsb
out
dec
and
jmp
mov
dec
test
lock
sub
pop
mov
and
fsubp
popa
jo
shld
mov
ud1
jo
xchg
xchg
sbb
js
loope
popf
mov
adc
test
imul
sti
mov
sub
pop
jns
cs
scas
leave
xor
loopne
push
loopne
or
insb
into
inc
push
sub
idiv
xor
sbb
popf
xchg
jle
xor
inc
inc
insb
xchg
sub
xchg
hlt
ds
xchg
rcrl
sbb
xor
das
adc
or
cld
jae
shufps
mov
push
mov
mov
inc
outsb
mov
add
inc
or
fisubrl
je
add
hlt
push
xor
stc
lret
stos
sub
fisubs
adc
sti
fnstenv
stos
shlb
cmpsb
mov
repz
ss
into
inc
ljmp
jp
stos
inc
arpl
or
or
fcomps
stc
stos
dec
fsts
dec
out
loop
jl
imul
je
mov
jno
sub
push
insl
insb
inc
add
sub
in
loope
out
pop
pop
push
std
stos
lods
pop
aam
sti
xor
lea
fisttpl
imul
shr
jbe
leave
stos
iret
ret
test
xchg
cmc
into
add
enter
mov
inc
xchg
hlt
jo
test
pop
adc
add
cmp
shlb
test
pop
int
and
and
movsl
push
or
test
mov
scas
cli
mov
dec
outsl
loop
xchg
insl
mov
rcrl
sub
movsb
xor
popf
mov
push
and
sbb
xchg
xor
lahf
psllw
inc
add
mov
jmp
arpl
cmp
movsb
mov
cmc
adc
or
into
in
ror
out
mov
frstor
div
mov
mov
push
lea
jo
pop
cld
xchg
clc
pop
jb
mov
fiaddl
sbb
sbb
sti
sub
andb
jg
jnp
pushf
xor
cmc
in
ret
bound
lods
sub
lcall
pop
lret
xor
mov
mov
test
in
sti
or
jbe
push
insb
stc
sub
mov
rcrb
add
js
sbb
cmp
pop
xrelease
arpl
xor
mov
mov
or
sub
or
cs
ja
sahf
adc
adc
xorl
fisubl
mov
ja
cmp
jae
push
gs
push
mov
and
jge
dec
xor
xchg
cmp
or
imul
sub
cmp
in
into
mov
push
adc
xlat
and
jge
push
loope
mov
incl
out
cmp
loop
and
sbb
loop
movsb
mov
cmpsb
lea
insl
ret
es
xor
stos
xchg
cmp
iret
stos
push
mov
cs
pop
cmpsb
nop
insb
adc
sub
cmp
and
inc
adc
xchg
in
jle
add
aaa
ficoml
add
mov
adc
mov
jno
xchg
sti
ljmp
insb
sbb
add
mov
scas
jmp
xchg
mov
aad
or
pop
out
loop
add
daa
sbb
push
dec
xor
xchg
loope
int
add
sbb
gs
popa
inc
mov
iret
sub
dec
fcoml
adc
lds
xchg
dec
push
cmp
mov
push
outsb
imul
in
adc
insb
loopne
xor
test
mov
dec
addb
push
sbbl
inc
add
lock
push
cmp
pop
mov
or
jbe
aaa
out
ret
es
ret
adc
cmp
cli
mov
dec
xor
xchg
mov
cmp
mov
sub
xchg
jae
leave
xchg
bound
dec
xchg
mov
jne
ret
in
or
sub
dec
adc
outsl
add
xchg
push
pop
push
int3
jns
push
sbb
adc
push
sub
mov
push
jg
lds
mov
fdivrs
imull
add
or
pop
aaa
jns
out
cmp
leave
mov
cli
jecxz
adc
sub
sbb
adc
cmpsb
mov
add
repnz
pushf
in
jg
sub
jp
add
clc
cmp
mov
xor
popa
mov
movsl
mov
ret
idivb
cmp
hlt
mov
fsts
dec
sub
mov
push
jp
cmp
pop
mov
ds
std
dec
xorl
sub
add
pop
out
lds
pop
xor
int
leave
repnz
xor
decb
lock
imul
cmp
popf
and
sub
loop
imull
add
dec
stos
xchg
or
cmp
xchg
dec
scas
insb
add
lock
jl
out
adc
push
xor
dec
push
sub
insb
mov
ss
repz
sub
out
push
push
addr16
in
cwtl
mov
mov
stos
dec
dec
xchg
sbb
lahf
pop
mov
popa
loopne
movsb
rep
enter
lret
mov
sub
or
js
jp
or
mov
mov
ret
sti
jno
fcmovnb
or
out
mov
and
inc
jo
push
push
int
dec
rorb
outsb
test
shl
sar
adc
jne
std
call
in
pop
sub
inc
out
xlat
mov
xor
pushf
pop
mov
aam
in
or
incl
mov
xchg
inc
cmpsb
sbb
aas
push
and
inc
sbb
std
jl
out
cmp
inc
xor
xor
add
pop
aaa
or
add
mov
dec
out
sbb
aas
lret
ficoml
xlat
sti
add
pop
or
enter
xlat
mov
imul
ret
aas
std
adc
inc
imul
in
ja
nop
xor
arpl
xchg
mov
cmp
and
xor
in
testl
sub
fisubrl
test
and
mov
lret
loope
or
ds
mov
loope
dec
popa
fnstcw
arpl
mulb
hlt
and
cmp
jp
dec
jmp
movsb
dec
cld
xor
into
in
xlat
aad
dec
incb
fnstenv
test
insb
nop
test
dec
call
xchg
mov
inc
sub
pop
mov
in
and
ret
and
mov
xchg
and
and
jg
pushf
les
mov
andb
sub
mov
inc
jnp
cmp
rcrb
ret
mov
mov
addr16
add
pop
pop
xchg
adc
ret
lods
dec
sti
fsub
inc
xor
mov
mov
call
mov
jg
xor
jno
add
jecxz
les
mov
test
pop
icebp
mov
daa
cmpsb
mov
or
sub
imul
jo
jo
loop,pn
xor
mov
xorb
mov
les
jle
hlt
mulb
pop
mov
adc
jae
insl
jp
mov
sbb
dec
add
std
pop
rorb
mov
loopne
das
xor
sbb
jmp
and
arpl
fwait
hlt
xor
xchg
in
xorb
test
pushw
aaa
push
mov
jecxz
adc
mov
aaa
jl
xchg
or
pop
out
fimull
outsb
inc
movsb
dec
mov
push
xchg
call
mov
inc
je
fiaddl
int3
adc
mov
cs
iret
iret
daa
xchg
pushf
insb
out
icebp
inc
pop
push
inc
cmp
jno
adc
inc
leave
push
shl
jecxz
movsl
ljmp
test
ja
notb
mov
inc
sub
lret
sub
push
mov
inc
ds
and
xchg
xor
xchg
je
call
sub
lock
aad
mov
pop
pusha
orb
mov
pop
sbb
cwtl
jns,pt
sbb
rorb
cmpsl
lock
jl
int3
inc
sub
mov
inc
lret
or
xchg
push
gs
jne
dec
mov
adc
lea
mov
adcl
sub
lahf
push
rep
xchg
scas
loope
xchg
lds
push
clc
fisubrl
inc
testl
sbb
aam
pusha
ffreep
movsb
pop
mov
test
or
ja
mov
inc
outsb
fiadds
cmpsl
jno
pop
ret
xchg
fimuls
into
mov
mov
ret
outsb
cs
fldenv
ret
dec
xor
mov
sub
mov
lahf
ss
push
dec
jb
data16
mov
xchg
xchg
xchg
cs
cmp
scas
jle
lods
inc
mov
les
loop
xchg
sub
andb
pop
ret
jmp
pushl
mov
inc
sbb
sbb
scas
push
dec
add
int3
cmp
dec
cltd
imul
add
ljmp
pop
insb
test
push
loop
cmp
rorl
cld
add
xor
sub
popa
imul
inc
xchg
sbb
mov
xor
out
iret
xchg
sub
cmp
stos
loop
jno
imul
fnsave
out
cmc
subb
es
push
lahf
xor
ss
mov
ljmp
sbb
xchg
xor
orl
fildl
push
mov
jne
mov
inc
dec
test
outsl
jbe
sub
scas
jne
xorb
faddl
and
cwtl
cld
sub
sub
cmp
dec
fstl
test
loope
inc
int3
notl
add
insl
out
dec
jge
mov
lods
xchg
or
fildll
addr16
shlb
dec
pusha
rdmsr
pop
clc
popa
sbb
fisubrl
jno
repnz
cmovg
ljmp
out
aas
push
repz
adc
fidivrs
jp
cmp
cltd
andl
fists
bound
cwtl
and
movsl
mov
jb
idivb
lea
sbb
adcb
movsb
sub
loopne
in
hlt
repz
sub
cs
cmp
pop
sahf
or
adc
stc
jnp
or
mov
cmpl
jge
add
lods
mov
mov
pop
fcoml
cli
cmp
adc
leave
iret
push
sub
cmp
les
cmp
sub
out
insb
shll
and
popa
jle
push
in
movsl
std
and
imul
mov
lcall
shrb
int3
cmp
push
fisttpl
lret
call
xchg
push
leave
mov
sbb
stc
arpl
daa
aad
dec
inc
sbb
adc
mov
outsb
sti
pop
or
sbb
push
rclb
pushw
mov
mov
xchg
xor
cs
dec
mov
aaa
add
ja
add
repz
jl
mov
ror
imul
mov
ret
ja
add
ja
sub
and
inc
sub
popf
test
int
add
lds
jl
in
add
shl
into
in
je
pop
lock
sbb
inc
out
fstpl
movsl
clc
icebp
cli
shll
add
mov
sbb
ljmp
out
test
cmp
rorb
les
fimull
xor
add
mov
or
and
shr
in
lds
mov
rcrb
outsb
cmp
cli
fsubl
jmp
pop
les
adc
jb
adc
std
enter
jle
iret
imul
push
cmpsl
adc
call
xor
sub
xchg
and
inc
cmp
into
pop
fs
nop
loope
push
test
xchg
xchg
pop
xchg
push
int
ret
fisttpll
pop
xchg
jmp
jae
fnstcw
int3
cmp
xchg
mov
xchg
addb
shrb
sbb
loopne
add
fwait
cld
dec
push
jg
call
jne
testl
jns
inc
and
pushf
cmp
push
popl
notl
mov
lods
out
mov
and
rorb
jns
out
adc
sbb
jmp
and
add
icebp
dec
jnp,pt
jmp
mov
mov
out
add
insl
xor
jle
sub
addb
lret
cmpl
std
or
loop
xorb
out
ret
andb
rorl
dec
imul
dec
mov
dec
xchg
jge
sub
sahf
incl
push
jle
aaa
das
cmp
push
mov
xor
jae
dec
dec
fadds
mov
aam
fistl
mov
adc
icebp
xchg
push
sbb
frstor
outsb
inc
lret
mov
cmp
repnz
mov
xor
pop
into
fdivr
push
shll
pop
je
dec
stc
in
clc
mov
into
mov
shrb
adc
das
rorl
dec
mov
push
cs
es
mov
pusha
or
jp
filds
push
fiaddl
andb
adc
mov
lahf
push
bound
sub
ficomps
mov
mov
mov
and
push
mov
shr
jmp
ret
xor
popl
pop
incb
popf
sub
mov
add
ljmp
loop
int
jecxz
js
shll
test
cmp
sub
clc
test
sbb
insb
scas
je
sub
cmpsb
data16
mov
xchg
sub
rcll
mov
cmpsl
movsb
nop
sti
jl
adc
mov
xchg
xchg
xacquire
aaa
jle
mov
mov
out
mov
jle
mov
inc
jne
sarb
jne
clc
or
dec
bound
xchg
andl
lcall
cli
xchg
add
mov
pop
es
adc
roll
pushf
lods
std
xchg
sete
fisttpl
inc
lcall
jbe
jnp
add
add
ret
dec
icebp
out
push
dec
fmul
add
cwtl
and
aas
sbb
mov
lds
ret
dec
mov
test
test
push
imul
pop
inc
add
pop
push
jo
push
sbb
ds
insb
decb
imul
fnstsw
pop
nop
outsb
lret
or
sub
jo
js
cld
test
out
fwait
cmpl
movsb
jle
pop
ds
hlt
stos
push
mov
lret
popa
mov
push
call
cmp
repnz
xchg
dec
sbb
lahf
aam
ficomps
mov
sbb
out
fcoms
sub
push
stc
ror
movsb
mov
paddb
sbb
cmp
insl
test
cltd
pop
mov
mov
cmp
jle
mov
lds
inc
gs
movsb
in
out
jmp
lret
cmp
cwtl
fcompl
je
in
add
iret
sahf
push
mov
lock
aaa
pop
ja
mov
xor
add
ja
jae
imul
inc
test
push
sub
xchg
outsl
and
pop
pop
daa
cs
jmp
sub
pushf
outsl
mov
mov
push
and
mov
jno
mov
mov
jecxz
xchg
int3
push
arpl
cmp
add
enter
cmp
les
outsl
in
fsubs
mov
rcrb
cltd
add
jne
bound
cs
dec
adc
push
out
ljmp
jb
in
push
cmc
xchg
or
fistps
cmpsl
jb
xor
sbb
fsub
je
repz
mov
daa
outsb
inc
cmp
sub
into
mov
in
test
xchg
cltd
imul
mov
adc
cmpsl
push
popf
fwait
imul
xchg
mov
jmp
cmc
push
movsb
and
xor
jl
mov
and
imull
arpl
or
cli
es
add
adcl
notl
or
sub
adc
stos
or
int3
sub
push
pop
js
addr16
and
sbb
pop
sbb
dec
mov
call
int
fs
xchg
xchg
incl
and
adc
loop
or
push
in
adc
and
mov
mov
movsl
imul
stc
sub
sub
outsl
je
orb
clc
loop
ljmp
xorb
inc
mov
cltd
jl
dec
int
cld
icebp
shlb
test
dec
fldl
jmp
aaa
xor
xor
xor
xlat
mov
sarb
icebp
adc
or
push
ret
out
dec
in
outsl
dec
pop
std
xlat
pop
jmp
jmp
cmc
dec
cmpsl
sub
loopne
push
out
mov
pop
repz
hlt
push
sub
xchg
cld
mov
xlat
inc
dec
sub
repnz
sbb
enter
cs
sbb
inc
test
into
push
pushf
or
pop
js
and
lret
inc
sub
mov
enter
sbb
insl
or
insb
out
out
mov
popa
push
pop
cmp
mov
adc
mov
cli
into
out
repnz
lock
pop
add
fs
insb
push
adc
cwtl
in
lds
mov
dec
addl
adc
mov
xchg
mov
push
adc
lods
lahf
into
dec
fcomp
mov
iret
push
dec
sarb
insb
ja
cld
mov
lcall
out
orl
pushf
jns
jb
aam
les
adcl
iret
scas
test
mov
subl
xchg
in
jecxz
jmp
pop
lcall
mov
jnp
inc
cmp
scas
or
pop
adc
push
dec
in
enter
mov
ret
repnz
movsl
push
ret
sahf
dec
jno
add
or
pop
push
cmp
or
sarl
jnp
adc
lds
xchg
jae
mov
xlat
les
inc
stos
cmpl
test
xchg
repnz
cmp
fwait
cli
inc
mov
addl
mov
add
lcall
outsl
sti
loop
icebp
or
les
stos
stos
mov
ret
mov
xlat
sbb
aaa
cld
in
sub
rorl
or
mov
js
xchg
cmp
xchg
mov
dec
adc
lret
xor
mov
dec
popa
std
gs
push
xlat
lock
and
mov
inc
mov
xor
sub
or
cmpsb
cmpsb
inc
push
jecxz
mov
into
rcl
or
popf
inc
insl
xchg
inc
pop
mov
cmp
jns
shlb
dec
sti
mov
ljmp
adc
in
es
add
jge
mov
adc
adc
push
mov
inc
pop
sub
loopne
and
adcb
mov
mov
jge
fadds
arpl
repnz
mov
push
dec
xor
mov
and
or
jbe
sub
scas
stos
cmp
inc
pop
jno
push
cld
cmp
movsl
mov
out
mov
in
inc
cs
ljmp
jno
test
insl
add
xorb
cmpsb
call
in
int3
jae
cmp
ret
mov
xor
insl
push
lea
cmp
insl
shll
hlt
enter
dec
rcl
insb
clc
add
mov
dec
push
add
lea
mov
stos
cmp
and
and
ret
std
scas
add
mov
xchg
pop
inc
adc
xchg
xchg
pop
lds
xor
lea
xor
fs
pop
add
ret
cmp
push
mov
jmp
sub
fiadds
call
mov
into
icebp
jl
lahf
sbb
fistpl
and
stos
imul
and
stos
leave
js
add
dec
mov
adc
mov
cmpsb
test
sti
jb
jns
pop
adc
and
jge
or
jae
and
outsb
xor
pop
mov
cmp
pop
fistpl
ret
call
sti
out
mov
pop
add
adc
jp
push
fmuls
nop
fisubrs
mov
cmp
lea
push
movsl
pop
cmpsl
sbb
sarb
hlt
out
in
pop
inc
jg
les
leave
mov
leave
cld
dec
shl
inc
fistpll
mov
decb
jnp
test
aam
jmp
push
ret
mov
or
and
rcrb
and
cmp
cmc
push
cmp
xchg
test
mov
pop
mov
bndstx
scas
insl
xor
xor
jbe
pop
adc
inc
rcl
int
sub
or
js
mov
cli
mov
testb
sahf
test
xchg
cmp
cs
or
leave
notl
ficoms
push
notl
mov
mov
xchg
sub
mov
push
outsl
add
andl
imul
mov
cmp
repz
mov
aaa
into
addl
push
xchg
stos
out
fmulp
nop
andb
shrb
notl
data16
jbe
lcall
cs
pop
sahf
pop
push
clc
les
std
lock
loopne
add
in
adc
imul
test
cmp
push
cmp
dec
pop
sub
loop
ret
sbb
test
xchg
pop
pop
fisubrl
lock
inc
jnp
mov
jmp
cwtl
insl
or
jo
mov
cli
les
lods
out
jb
pop
mov
test
mov
aam
cmp
mov
cs
sbb
cmp
sub
mov
out
je,pt
jne
jae
dec
adc
jl
or
pop
call
rcr
and
aad
or
push
mov
xor
add
dec
push
clc
aam
sbb
pop
rclb
pop
pusha
in
push
inc
into
jle
xlat
sbb
ficomps
cmp
mov
out
sahf
lods
outsl
mov
stos
scas
push
push
mov
andl
or
das
add
mov
inc
popa
dec
outsl
sbb
jne
psubw
push
out
in
mov
lds
mov
add
mov
iret
out
and
pop
cltd
and
dec
das
pop
lea
mov
and
add
xchg
mov
pushf
jns
cmpsl
in
mov
xlat
jp
cmp
xchg
stos
xchg
dec
mov
and
jecxz
mov
je
and
stos
sub
dec
adc
in
je
mov
xor
xchg
add
scas
sbb
enter
add
push
fildl
lret
pop
vmulsd
outsb
jo
std
jns
sbb
cmpsl
jge
fmull
jecxz
sub
test
xor
push
mov
jle
fisubs
sahf
jmp
dec
fwait
test
xorl
mov
xchg
loop
fdivr
ficoml
test
add
inc
in
mov
xor
movsl
mov
cmp
fldt
imulb
in
jg
sbb
mov
jecxz
test
es
push
mov
jb
xchg
sub
fdivrl
cmpsb
inc
dec
hlt
mov
es
inc
xlat
mov
sahf
push
cmp
fcmovbe
mov
mov
xor
test
mulb
loopne
imul
icebp
daa
xchg
sbb
xchg
outsb
fwait
push
fs
dec
pop
cli
pop
add
sub
mov
iret
notb
aam
in
imul
and
push
or
inc
fmull
xor
pop
lock
push
pop
in
lcall
or
imul
scas
insl
cli
inc
cmp
scas
cwtl
sbb
cmp
hlt
ja
mov
push
fbstp
mov
mov
jae
insb
pop
ja
pop
push
dec
aam
int3
lret
shr
cs
jge
lret
jp
imul
sarl
scas
lock
test
cld
and
or
jno
push
imull
and
icebp
pop
fistpll
mov
and
bnd
pop
and
add
xlat
jbe
in
mov
mov
pop
pop
cwtl
ret
xor
ret
jne
pop
nop
xor
push
lcall
and
push
mov
das
mov
mov
pop
gs
mov
jae
dec
or
and
pop
popf
add
mov
dec
sbb
xchg
lret
jb
outsl
cmp
push
mov
divl
fsubrs
pop
fildll
pop
test
xor
or
sub
bound
rol
aas
in
rorl
pop
pop
and
shll
add
lcall
inc
xchg
xor
jno
xchg
adc
aam
aad
and
or
or
cs
insb
cmp
push
subb
pop
push
stc
push
jg
jle
bound
mov
popa
mov
js
adc
stos
arpl
insl
or
mov
nop
pusha
nop
xchg
mov
iret
push
adc
pop
xchg
into
mov
fmuls
cli
cli
cwtl
test
jns
pop
adc
arpl
outsl
in
pop
fdivrs
inc
dec
inc
cmpl
ja
mov
xor
pop
dec
enter
cltd
mov
jle
es
ds
jnp
cmp
movsl
in
push
lock
gs
sub
sbb
loope
and
cli
pop
or
inc
mov
ret
sbb
sbb
movsb
popa
mov
js
lds
test
push
cld
roll
paddusb
rol
iret
dec
mov
jo
mov
lods
push
pop
loopne
inc
mov
outsl
jg
jae
imul
dec
rcll
push
aad
bound
fwait
cmp
hlt
jl
bound
dec
or
icebp
std
lds
pop
aam
fxch
cwtl
test
mov
shlb
pop
lds
push
push
enter
jmp
mov
jecxz
enter
push
mov
cs
sahf
fnsave
arpl
sbb
rcrb
and
js
mov
cmp
push
jnp
inc
inc
mov
jmp
outsl
fbld
xor
xchg
and
mov
imul
mov
add
hlt
xor
imul
mov
mov
rol
mov
scas
loopne
cli
xor
or
cwtl
mov
mov
lea
sti
repnz
add
push
or
out
mov
cmpsb
ret
mov
push
cli
pop
dec
cmpsb
in
and
or
push
mov
lods
dec
shrl
push
sub
mov
sub
lahf
jae
lods
push
inc
in
inc
inc
jp
or
or
adc
popf
stc
inc
xorl
inc
xchg
xor
or
xchg
sub
mov
psllw
mov
mov
ja
je
int3
inc
out
adc
add
inc
pop
loop
mov
inc
xchg
repz
sbb
scas
push
jb
stos
inc
imul
cmpsl
loope
mov
loope
pop
pop
fs
outsl
call
xor
and
frstor
data16
mov
lds
jge
and
xorb
pop
mov
mov
rol
jmp
je
scas
or
repz
pop
push
pop
cltd
mov
mov
lret
add
cmp
out
cmc
xchg
lods
jb
repz
loopne
imul
in
add
xor
xor
jl
cmpsl
imul
aas
ds
push
and
fbstp
shl
mov
into
out
stc
xchg
scas
and
mov
add
shl
xchg
mov
xchg
rolb
jae
dec
xchg
ljmp
in
int
push
pop
dec
rcrb
lods
shl
mov
sub
mov
lea
aas
fwait
aad
add
call
pop
jle
ret
daa
dec
xor
add
or
int3
out
cltd
pop
inc
push
lahf
or
test
inc
pushf
push
call
cld
mov
hlt
repz
xorb
jo
mov
movsb
add
dec
mov
pop
out
adc
lret
xchg
dec
enter
adc
sub
xor
and
leave
sbb
outsb
dec
inc
rorl
push
jb
insl
mov
ja
je
lods
scas
int3
mov
mov
cmpsb
mov
xor
pusha
fdivs
cmp
ret
sub
into
repnz
lock
roll
data16
xchg
insl
fadds
int3
and
or
dec
mov
imul
test
into
loop
add
popa
pop
mov
call
lods
and
gs
enter
shrb
sti
xchg
mov
les
dec
or
icebp
cmpsb
out
dec
rol
fldt
out
loope
xchg
jl
push
jle
xlat
inc
adc
mov
out
mov
int3
xchg
lret
insb
cmc
jle
mov
or
jge
das
stos
ljmp
enter
xor
adc
fsubrp
cs
push
inc
sub
bound
cmpsl
lahf
pop
test
add
pop
movsl
mov
lods
mov
jnp
jl
cli
out
aad
sub
inc
rcr
dec
push
xlat
mov
inc
insb
dec
mov
imul
cmp
andb
daa
xor
xor
add
out
rclb
mov
mov
and
mov
inc
stos
xchg
and
sub
xor
daa
dec
sub
jnp
in
dec
aam
mov
cmpsl
pusha
push
xor
inc
loop
cltd
into
jl
std
xchg
icebp
lds
sub
lahf
fs
imul
lea
int
push
jl
xlat
pop
fisubrl
fimuls
stos
jae
mov
dec
fnstenv
insb
xchg
ds
adc
imul
xchg
js
icebp
cmp
cli
adc
push
inc
scas
jmp
mov
les
pop
jb
mov
lock
mov
insb
jne
push
fmull
rcll
or
fidivrs
lock
adc
je
mov
pop
in
cmc
jno
shlb
pop
mov
dec
scas
pop
lret
mov
and
js
leave
cmp
ss
push
cltd
pusha
adcl
add
in
ja
cli
cltd
cmp
pop
cmp
stc
lret
mov
insb
mov
decl
dec
hlt
data16
popa
lahf
in
mov
adc
cmp
ds
adc
cld
ficompl
outsb
lret
in
pusha
cmp
pop
dec
pop
pop
in
cmp
mov
xchg
ja
jecxz
sbb
lcall
insb
aam
pusha
xor
inc
enter
fstpt
mov
mov
in
dec
xor
inc
mov
aas
pusha
push
rcrb
dec
jns
movsb
xor
aad
fisubrs
lods
dec
pop
pop
aad
outsb
orl
out
fiaddl
sbb
jp
push
mov
mov
push
jge
sbbb
cli
cmp
push
xor
mov
lods
imull
mov
mov
add
dec
cli
jbe
insl
or
sbb
push
sbb
aam
mov
dec
out
shlb
add
aad
out
pusha
mov
repz
pop
popa
out
daa
mov
cmc
cmpsl
or
sbb
rcrb
lret
xor
mov
aam
ret
mov
int
cmpsb
mov
pop
mov
lret
fistpll
in
int3
mov
rcrb
xchg
shl
enter
push
mov
xor
ja
cmp
push
cmpsl
cwtl
gs
ljmp
lcall
repnz
dec
add
and
or
jl
mov
mov
mov
xchg
mov
push
mov
and
sub
and
enter
aas
fidivl
xchg
add
mov
pushf
inc
les
lret
call
out
xchg
dec
dec
xchg
arpl
cmp
adc
cmp
testl
out
pop
loopne
imul
les
sti
lret
sbb
push
ds
fildl
unpcklps
ftst
out
cmp
adc
leave
dec
test
cmp
in
dec
xchg
sub
xor
insl
sub
xchg
sbb
add
scas
cltd
into
sbb
add
sbb
ds
xor
pusha
jae
sub
cmp
nop
les
sbb
enter
fmuls
fnstsw
dec
in
packssdw
cmp
cld
jecxz
mov
pusha
mov
jo
into
mov
bswap
cli
insb
sub
cmpsl
fsubrs
test
clc
aam
js
popa
jl
xor
cli
sbb
shll
pop
shll
adc
fwait
insl
sbb
iret
mov
cltd
jle
ja
mov
xchg
push
sbb
jb
sub
xchg
sbb
add
push
lds
push
das
mov
inc
jnp
adc
mov
pop
lea
mov
pop
movsl
or
adc
ret
insl
xor
cmp
cltd
inc
sbb
add
pop
js
or
mov
sbb
pop
lds
jbe
popf
pop
sarb
inc
push
mov
into
xor
cmp
jnp,pt
adc
test
or
xchg
mov
push
adcl
sbb
clc
or
fidivs
push
pop
cpuid
out
js
or
or
adc
das
or
add
push
adc
roll
enter
outsl
jne
nop
cmp
xor
pop
cmp
mov
push
addr16
mov
dec
jbe
stc
add
das
mov
sbb
adc
adc
cmp
jle
test
add
xchg
or
shll
test
mov
cmp
mov
cltd
xchg
inc
sub
mov
mov
iret
push
xchg
xchg
push
jmp
pop
in
or
addr16
inc
inc
sub
rclb
in
cmp
sub
xchg
add
sbb
fimuls
aad
pop
dec
dec
add
dec
mov
add
mov
xchg
sti
scas
pushf
pop
or
xorb
stc
ret
sbb
dec
adc
dec
icebp
movsb
adc
jbe
leave
sbb
dec
sub
dec
mov
adc
or
movl
out
push
dec
jae
dec
dec
into
lods
inc
mov
gs
cltd
sub
arpl
mov
or
sbb
fwait
nop
dec
xchg
jno
cmp
rorb
adc
rcll
loopne
lock
cmp
mov
inc
inc
fdivp
pop
ficompl
adcb
jnp
repnz
sbb
in
ret
mov
mov
jmp
jle
pmulhw
in
lret
das
fidivrs
and
adc
aas
dec
dec
lcall
lods
cwtl
mov
xchg
imul
cwtl
dec
stos
sub
cmc
xchg
sbb
aam
adc
iret
adc
mov
push
lret
addr16
mov
lcall
jns
lahf
dec
jae
xchg
mov
shlb
or
and
pop
add
mov
sub
mov
mov
test
sub
jge
inc
dec
gs
fldt
inc
add
pop
jns
add
addl
pop
xlat
pop
fcmovu
add
lods
or
in
mov
pop
jp
push
add
jns
dec
das
std
mov
push
inc
out
rorb
pop
scas
hlt
xchg
sti
leave
jb
inc
pop
push
jbe
pop
sub
or
mov
test
icebp
xor
mov
lds
ss
dec
out
in
xchg
test
shrb
dec
aaa
adcl
insl
dec
push
out
lock
lock
mov
stos
push
cmc
data16
mov
ja
or
inc
push
movsl
rcrl
jle
imul
xchg
inc
ficompl
addr16
xor
inc
jp
jo
leave
loop
cld
shlb
jae
repz
mov
push
xchg
scas
fstpl
pop
jp
je
jmp
outsl
ret
xchg
loopne
xorl
ffree
aad
outsb
daa
mov
push
inc
stos
outsl
mov
xchg
and
stos
addl
cmpsl
pop
cld
addr16
shl
mov
pop
mov
aaa
push
add
push
outsb
push
mov
insb
xchg
lods
push
movsb
cmp
test
mov
sbb
out
insb
cwtl
sbb
mov
mov
stos
inc
cwtl
loope
imul
mov
jnp
mov
mov
int
in
mov
xlat
popl
inc
punpcklbw
push
xor
stos
ret
enter
inc
cltd
mov
aaa
mov
das
cmp
int3
lret
cmp
push
sahf
jg
pop
sub
adc
es
mov
sbbl
scas
lock
inc
icebp
jo
movntq
adc
bound
and
mov
fadd
ret
inc
mov
mov
outsw
sahf
ljmp
outsl
loope
add
xchg
in
inc
mov
and
push
lret
neg
push
call
and
jne
xchg
add
loope
and
lahf
push
les
aad
mov
stos
int
xchg
inc
or
mov
sub
mov
sahf
xorl
lds
decb
out
push
sub
fbld
or
in
xor
xchg
mov
loopne
cmp
insl
std
int
cwtl
lahf
fsubl
clc
dec
dec
ds
lahf
in
add
push
in
jb
sbb
mov
fs
test
aas
mov
out
jbe
lea
dec
mov
mov
push
cwtl
les
jl
gs
cmpsl
fldt
insb
in
arpl
arpl
xlat
pop
pusha
xorb
mov
or
fucomi
je
jnp
or
push
shrl
pop
push
inc
imul
mov
xchg
rorl
and
scas
pop
xchg
shl
aaa
adc
mov
push
jmp
ds
cmp
repz
xor
dec
aas
aam
sar
mov
jg
stos
add
push
scas
adc
dec
ret
adc
fwait
push
and
push
test
dec
mov
outsl
xor
push
cmp
mov
pop
out
sti
adcl
xchg
dec
xchg
jle
or
icebp
movsl
or
xchg
dec
inc
shll
adc
mov
popa
mov
leave
jl
mov
fwait
stc
pusha
mov
leave
es
xchg
dec
lods
movl
pop
repz
add
mov
push
repnz
mov
jle
stc
push
mov
dec
stos
mov
xchg
jle
popl
add
js
sub
or
mov
in
inc
push
fmuls
sub
push
out
outsb
out
test
adc
mov
es
out
xchg
jmp
push
loope
scas
jbe
xchg
cld
leave
out
fdivp
push
dec
jecxz
xchg
adc
jnp
cli
arpl
mov
or
add
shrb
loopne
sarl
sub
je
lahf
xchg
lahf
pop
scas
inc
cmp
in
xor
sahf
std
xlat
dec
mov
out
pop
push
dec
into
adc
add
mov
mov
xor
sahf
xchg
outsb
jl
sub
loop
inc
jp
popl
mov
inc
pushf
xchg
repnz
inc
ds
shl
mov
sbb
or
std
test
lahf
enter
sahf
jecxz
jle
repnz
sahf
addl
pop
std
mov
jge
flds
fsubrl
jbe
pop
jne
in
sbb
imul
push
add
cmp
mov
outsb
xchg
cmp
adc
sbb
enter
mov
push
jge
ljmp
cmp
xor
data16
ja
cmc
cltd
push
xchg
mov
jg
push
bound
or
out
push
adc
out
sbb
ja
call
pop
jns
adc
jl
rcll
sar
test
inc
dec
cmp
jl
in
int3
pop
popa
sbb
mov
jns
fwait
push
cmpsl
test
jns
test
jle
push
mov
insl
xchg
push
push
je
icebp
pop
push
fsubs
xlat
mov
fldl
xchg
stos
scas
pop
lds
push
shll
pop
mov
sbb
and
addr16
daa
mov
push
das
jbe
ret
lahf
jnp
adc
or
addb
lock
sbb
jg
jecxz
clc
je
fnstcw
adc
out
inc
popf
mov
pop
dec
push
nop
jb
jg
rol
hlt
jmp
repnz
jmp
andl
lds
add
xlat
jle
fiaddl
shlb
push
shrl
mov
xor
push
sub
out
inc
dec
mov
sbb
mov
xchg
lock
faddl
push
cmpl
xor
int3
sub
int3
xchg
sub
push
fs
push
das
imul
ret
ret
push
mov
es
fsubr
mov
shll
mov
xor
movsl
test
mov
outsl
xor
ds
dec
out
int
mov
aas
pop
aaa
stos
jnp
dec
dec
movsb
nop
mov
daa
jmp
ret
insb
jl
xchg
jecxz
or
movsb
std
test
inc
push
inc
or
xchg
mov
in
or
imul
test
jge
ss
js
lahf
sub
xchg
or
arpl
ds
add
ret
pop
fisttpll
leave
aad
std
sar
adc
xor
push
aam
lret
bound
adc
mov
fs
adc
push
cmp
cmp
scas
into
fidivs
arpl
imul
mov
jl
cmc
push
arpl
push
orb
shl
mov
or
pop
sahf
int
mov
jno
sub
or
aam
sbb
scas
incb
lahf
mov
cmpsl
rclb
push
mov
out
stos
jecxz
shrl
mov
push
inc
adc
xor
adc
mov
push
xchg
je
and
sbb
jbe
hlt
repnz
cmpsl
testb
mov
add
test
popf
stos
mov
insl
test
xor
sbb
filds
sbb
out
stos
xor
inc
or
icebp
dec
repz
add
pop
sub
testb
lcall
xchg
mov
mov
in
sbb
mov
aas
jecxz
mov
enter
lea
jb
rcrb
fbld
push
lret
or
jne
ret
popa
fistpll
cmp
or
mov
push
jle
cwtl
push
int
mov
fs
ds
mov
pop
mov
cmp
imul
jae
test
cmp
sub
push
dec
push
je
pop
jbe
xchg
or
lahf
scas
push
div
popf
adc
mov
adc
push
sbb
xchg
in
inc
fxch
pop
out
mov
cmpsl
mov
mov
scas
jge
mov
xchg
aas
pop
out
or
fs
les
xchg
pop
jnp
dec
dec
nop
lahf
idivb
sti
pop
lahf
add
lods
xchg
inc
dec
call
or
aad
jbe
inc
scas
push
fstpl
push
pop
aaa
jns
sub
enter
out
lds
dec
rorb
inc
aad
cltd
sbb
lds
push
lahf
sbb
test
in
adc
int
mov
pop
xchg
movsl
jnp
push
les
fistpll
jmp
push
loop
out
mov
test
cmp
fmuls
sub
stc
inc
xchg
es
cmc
subl
sub
out
mov
stos
jb
xor
adc
mov
and
or
xchg
xorl
mov
jmp
test
lds
cld
xchg
mov
jg
jecxz
leave
popa
outsb
es
fbstp
jg
fdiv
inc
sahf
mov
ds
test
cmpsl
lcall
sub
adcb
scas
push
and
loopne
inc
fcomip
pop
jae
xchg
das
mov
inc
pop
cmp
test
xor
push
pop
xor
ja
dec
push
ja
lahf
aam
ficoms
cli
mov
mov
test
test
adc
dec
jbe
jne
pop
mov
lret
arpl
aad
push
bound
lea
adc
inc
mov
js
insl
jo
jbe
lds
mov
xor
push
aas
mov
int
rorb
or
sub
push
add
and
cmp
sub
sub
jecxz
sbb
pop
pusha
aas
in
int3
push
lahf
ret
out
imul
pushf
jne
add
fwait
cmc
xchg
imul
pop
fldt
mov
mov
addl
jecxz
test
call
sbb
scas
call
cltd
dec
xchg
inc
int
or
and
data16
xlat
insl
push
fdivs
icebp
jp
int
sbb
add
mov
jp
rclb
in
lds
pop
dec
mov
or
int
push
cmp
call
jne
cmpsb
movsl
sub
push
jb
pop
movsb
rorb
shlb
push
insl
dec
rolb
dec
lahf
and
xlat
xchg
insl
clc
insl
pop
fcmovnb
xchg
enter
mov
js
sti
jmp
cli
cmp
xchg
push
les
pop
imul
jno
mov
andb
lret
out
lahf
mov
xchg
inc
jl
orb
cmpsb
cmp
mov
mov
xchg
mov
pop
js
mov
decb
push
sub
inc
mov
ds
scas
xchg
je
cmp
jl
subb
test
and
into
jl
gs
mov
mov
addb
repnz
and
adc
addr16
pusha
loopne
jge
in
mov
jb
add
aaa
adc
mov
cld
scas
movq
iret
pop
aas
jmp
xchg
xor
or
or
fidivrl
jbe
fistpl
mov
sti
add
movsb
jp
or
or
adc
cld
cmp
insl
into
jns
sbb
push
xor
mov
sbb
cmpsl
xchg
movsb
inc
and
mov
rolb
and
cwtl
mov
leave
sbb
xorl
adc
pop
aad
pop
push
ljmp
sti
sub
loopne
jns
test
fnstcw
daa
cmp
jae
inc
fdiv
jle
push
xor
lahf
cmp
xor
xchg
add
mov
and
outsl
lret
push
stc
mov
mov
repnz
clc
ret
push
pop
enter
loope
cwtl
enter
aam
adc
pushl
jp
lea
addl
mov
pop
iret
fbstp
ret
dec
cmp
and
sbb
hlt
xchg
loopne
out
fwait
inc
ret
cmc
testb
pop
stos
jecxz
mov
cmp
dec
jb
add
outsb
adc
pop
pusha
or
lret
in
add
test
lahf
pop
ret
mov
out
xchg
sub
add
xchg
std
mov
inc
stc
bnd
fstl
sti
xlat
inc
aad
xor
scas
subb
je
icebp
xchg
aas
rcrl
cltd
mov
cli
mov
dec
inc
dec
sbb
rcrb
push
pop
or
push
ret
mov
or
cli
xchg
push
mov
cmp
pop
adc
sbb
pop
jae
jo
inc
mov
or
loopne
aad
outsl
andl
sub
fnsave
les
stos
mov
enter
fisubs
dec
enter
or
mov
mov
push
pop
mov
or
xor
imul
xlat
ret
jle
out
and
je
push
in
cmp
rclb
das
cmpsl
push
mov
lods
sbb
jge
inc
sub
es
mov
sub
add
shll
lea
and
push
xor
sahf
adc
les
pop
xchg
sbb
insl
xor
sarb
clc
fimuls
into
push
jnp
add
aas
daa
mov
xor
repnz
push
lods
stc
das
jmp
into
andl
adc
shll
mov
push
dec
mov
pushf
addl
jno
xor
movb
sub
rolb
mov
fcmovnu
stc
dec
sub
jno
incb
add
dec
fdivs
cs
xor
out
lret
movsb
sub
cld
jmp
dec
insb
cmp
or
lods
insb
jnp
arpl
mov
iret
jl
push
sbb
jg
mov
or
bound
push
or
xchg
pop
leave
in
xor
scas
mov
fcmovb
repnz
cmp
mov
adc
aaa
sbb
lahf
xlat
cltd
adc
add
pop
inc
jo
ret
mov
test
push
adc
fldt
dec
mov
lahf
sbb
lret
cmp
pop
lahf
sahf
imulb
push
cmp
enter
iret
bound
jae
inc
xchg
jae
mov
arpl
repnz
xchg
stos
dec
loope
sahf
es
xchg
cmpsl
orb
lcall
jle
adcb
push
mov
jle
push
outsl
into
fnstsw
jo
mov
push
roll
mov
inc
in
cld
out
leave
xchg
push
mov
fiaddl
mov
test
ficoml
sub
lahf
aad
sub
pop
out
inc
popl
es
gs
inc
xchg
sub
inc
loopne,pt
seta
std
clc
pop
jmp
xor
dec
arpl
imul
addl
ja
mov
xor
rcrl
xchg
mov
mov
cmpsb
mov
shld
das
cmp
mov
iret
iret
inc
insl
pop
bound
mov
mov
push
cmpsb
xchg
jnp
push
xor
cltd
into
aad
mov
and
repz
mov
inc
mov
aaa
jo
cmp
mov
xchg
pop
outsb
and
adc
and
daa
cli
mov
xchg
mov
jne
adc
inc
push
cmpsl
lahf
xor
inc
repnz
idivb
sbb
sbb
ficoml
addr16
xchg
mov
in
les
cmpsb
jg
lret
inc
loope,pt
push
scas
push
pop
or
popa
lods
in
sub
ror
jnp
lock
andl
rorb
aam
sahf
cmp
xor
lret
xchg
pushf
xchg
lods
nop
cmp
into
jmp
inc
int
loope
shr
inc
aas
mov
bound
xorb
jne
adc
lea
mov
xor
in
fdivl
ror
pusha
dec
pop
divb
int
jae
push
push
mov
fcomps
mov
xchg
xor
dec
sub
mov
and
and
cmc
xchg
and
sti
mov
shll
adcb
fistl
std
aad
jns
shll
jmp
into
filds
mov
inc
xchg
cmc
mov
call
mov
xchg
pusha
shl
cmc
pop
cld
outsb
mov
lds
inc
stc
jb
adc
enter
negl
sbb
and
xchg
mov
xchg
sbb
pushf
push
sahf
add
imul
jne
push
adc
pusha
mov
inc
lods
mov
test
outsb
popa
popa
loop
and
adc
out
mov
add
es
and
repz
push
int
cmp
inc
out
push
fs
pop
and
mov
dec
imul
shrl
add
jge
xchg
test
es
mov
inc
push
faddp
movsb
shl
and
mov
scas
mov
lea
outsb
int3
inc
enter
not
xor
out
sub
jb
mov
sub
stos
lea
pop
fsubs
subb
fmuls
inc
xchg
and
pop
lahf
sbb
lret
xorb
repnz
aaa
mov
or
es
loop
outsb
out
nop
cli
push
adc
and
xchg
shr
push
sbb
pop
inc
lahf
stos
popf
cld
pop
addl
stos
adc
mov
push
pop
xchg
popa
cmp
cmp
mov
xchg
mov
mov
jbe
das
or
mov
and
and
leave
push
push
sbbl
cltd
mov
test
rcr
xchg
out
stc
loopne
xchg
cli
mov
popf
pushf
mov
stos
data16
jno
mov
ss
dec
ficompl
inc
stos
popa
cmc
mov
add
fsub
xchg
pop
ss
add
pop
sub
mov
rol
lahf
outsb
scas
mov
addr16
pop
sub
pop
adc
mov
jp
pop
or
scas
aaa
repz
pop
ret
push
jae
push
push
aad
add
mov
outsb
or
ljmp
add
mov
enter
sub
dec
sarb
fnsave
mov
dec
lret
jecxz
data16
xchg
fwait
mov
cmp
mov
add
in
outsb
pop
js
and
rolb
inc
mov
sub
aam
ret
xchg
pop
pop
inc
fldt
cmp
clc
mov
jecxz
jmp
add
cmp
daa
jecxz
sub
das
xor
dec
push
sub
call
or
inc
push
movsb
lods
rcr
lahf
or
sbb
ret
scas
lock
cmc
flds
mov
loope
mov
shl
xchg
imul
pminsw
dec
std
sub
icebp
int3
stc
in
punpcklbw
aaa
data16
movsb
inc
add
stc
fidivs
lds
or
imul
push
xchg
inc
push
insb
loop
adcb
or
mov
ljmp
cwtl
push
mov
xchg
xor
add
scas
sti
cmpsl
or
lods
arpl
jge
mov
andb
mov
sbb
add
loope
call
or
push
mov
je
xorb
fs
divb
stos
cwtl
orb
add
sti
cmp
loopne
cmp
push
add
ja
loopne
aaa
xchg
jno
lret
xor
mov
add
popa
sahf
test
iret
mov
and
push
aaa
jl
add
pop
les
pop
cmp
mov
sub
movsb
and
shlb
jne
mov
and
cwtl
push
xchg
dec
mov
or
jnp
xorb
push
aas
leave
lea
or
shlb
lock
mov
es
adc
nop
call
imul
inc
cmp
mov
and
dec
stos
fisubrl
jmp
push
mov
jne
pop
cmp
inc
pop
pop
sahf
fwait
and
push
sbb
dec
fsubp
ficoms
fs
cmc
sub
pop
xchg
ret
sub
or
movsb
rcrl
sub
mov
leave
fcoml
jae
mov
pop
sarb
or
fisubrl
jl
stc
jg
xor
jno
xor
scas
sub
cmp
lret
out
xor
xchg
xchg
jns
jbe
gs
push
xchg
pusha
add
pop
sbb
xchg
int
xor
or
js
jecxz
push
push
push
add
pop
in
push
ret
aaa
movsb
test
cmp
jp
adc
aaa
jg
in
es
push
and
inc
movsl
lds
inc
cvtpi2ps
fisttpll
jl
push
cmp
mov
dec
inc
mov
cmpsl
push
and
jl
insb
imul
lret
setbe
ss
insl
and
in
mov
mov
out
call
inc
add
xor
lea
or
sbb
ret
xor
jge
test
or
and
mov
ss
shlb
mov
sarb
adcl
adc
inc
mov
sub
fistps
pop
mov
ss
mov
daa
ret
jge
pop
test
pop
or
jg
pop
in
ljmp
xchg
scas
outsb
in
pop
movsl
fwait
pusha
mov
xchg
in
jae
mov
xchg
ss
into
add
add
add
inc
adcb
fsts
adc
cltd
jo
cmpsb
pop
ljmp
imul
mov
adc
pop
aad
lock
lahf
sbb
in
inc
cltd
pop
movsb
call
leave
push
or
lret
sub
into
lea
jnp
jmp
ss
sahf
pop
jp
comiss
int3
arpl
adc
imul
jge
mov
cmpsl
pop
pop
aad
push
inc
xor
pop
dec
jmp
shrl
imul
idivl
sti
scas
shl
mov
mov
sub
pop
scas
pop
testl
clc
and
mov
jp
pop
mov
push
xor
pop
jp
scas
mov
int3
in
mov
jae
icebp
pop
loopne
lea
loope
xor
in
fdiv
and
xor
test
inc
mov
push
xor
in
popl
setle
dec
or
stc
andl
jp
jmp
outsl
loop
or
rcrb
xchg
dec
xor
pop
pusha
xchg
movl
ret
ficoms
jbe
int3
mov
dec
mov
iret
loope
std
adc
cmp
cmp
lods
nop
sahf
je
jo
stos
iret
sub
mov
sbb
sbb
inc
cwtl
xor
ss
mov
cmpsl
dec
xor
sub
iret
mov
pop
inc
lds
insl
aad
addb
mov
cmp
leave
lds
stos
and
jmp
and
pop
in
mov
clc
arpl
jmp
jae,pt
adc
loop
enter
out
jb
xchg
iret
call
popl
cmpsl
jp
xor
shlb
dec
andb
fsubl
adc
and
sub
leave
xor
xor
ds
jecxz
sub
hlt
mov
mov
push
or
lret
jnp
mov
add
xor
and
js
dec
aam
or
xchg
adc
outsl
cmc
lret
in
roll
dec
sub
pop
mov
pop
xorl
fcmovbe
adc
lret
jno
or
or
push
cli
xchg
lea
sti
pop
push
shll
mov
arpl
test
dec
push
orl
push
mov
mov
adc
inc
cs
cmp
aam
adc
fnstenv
sub
dec
push
cmp
leave
adc
lcall
ss
stc
lods
mov
imul
pop
aad
inc
ret
imul
jnp
add
repnz
daa
arpl
mov
ss
pop
jb
sahf
ret
pop
inc
outsb
divl
hlt
out
dec
sbb
mov
inc
enter
push
out
in
fsubs
in
in
xchg
ror
lret
add
xor
cmp
out
inc
push
push
adc
sbb
xchg
dec
inc
popa
fimull
orb
aad
mov
setno
dec
mov
jecxz
insb
push
push
int
xchg
sarb
push
addb
pop
xchg
sbb
adc
xchg
pop
subl
jl
or
xchg
into
mov
movsb
or
pop
outsb
mov
pop
sbb
jecxz
mov
xchg
mov
push
add
cmpsb
data16
js
mov
bound
fmuls
cmp
ljmp
mov
push
dec
xchg
jecxz
shll
aad
rcll
jp
jne
daa
jl
ja
arpl
xor
dec
xlat
icebp
push
jb
rcrl
inc
cmp
mov
adc
pushf
mov
es
adc
ret
rclb
jle
cmc
data16
test
stc
imul
out
xchg
insl
add
xchg
out
or
ljmp
jns
jns
xor
lods
in
sarb
bound
xchg
push
pusha
and
loope
test
subl
push
pop
jle
adc
scas
incb
loopne
lods
push
enter
mov
pop
fbstp
adc
das
mov
cltd
xchg
jmp
pop
push
mov
stc
js
pop
subb
hlt
roll
jmp
out
ss
mov
mov
dec
mov
mov
movsl
hlt
mov
pop
cmp
mov
mov
icebp
subl
testb
add
cmp
stos
jo
mov
bound
in
int3
dec
dec
dec
